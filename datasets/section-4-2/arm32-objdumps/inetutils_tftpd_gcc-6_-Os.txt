
../repos/inetutils/src/tftpd:     file format elf32-littlearm


Disassembly of section .init:

000111dc <.init>:
   111dc:	push	{r3, lr}
   111e0:	bl	1198c <putc_unlocked@plt+0x3e8>
   111e4:	pop	{r3, pc}

Disassembly of section .plt:

000111e8 <fdopen@plt-0x14>:
   111e8:	push	{lr}		; (str lr, [sp, #-4]!)
   111ec:	ldr	lr, [pc, #4]	; 111f8 <fdopen@plt-0x4>
   111f0:	add	lr, pc, lr
   111f4:	ldr	pc, [lr, #8]!
   111f8:	andeq	r8, r1, r8, lsl #28

000111fc <fdopen@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #24, 20	; 0x18000
   11204:	ldr	pc, [ip, #3592]!	; 0xe08

00011208 <calloc@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #24, 20	; 0x18000
   11210:	ldr	pc, [ip, #3584]!	; 0xe00

00011214 <fputs_unlocked@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #24, 20	; 0x18000
   1121c:	ldr	pc, [ip, #3576]!	; 0xdf8

00011220 <strstr@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #24, 20	; 0x18000
   11228:	ldr	pc, [ip, #3568]!	; 0xdf0

0001122c <raise@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #24, 20	; 0x18000
   11234:	ldr	pc, [ip, #3560]!	; 0xde8

00011238 <getpwnam@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #24, 20	; 0x18000
   11240:	ldr	pc, [ip, #3552]!	; 0xde0

00011244 <strcmp@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #24, 20	; 0x18000
   1124c:	ldr	pc, [ip, #3544]!	; 0xdd8

00011250 <printf@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #24, 20	; 0x18000
   11258:	ldr	pc, [ip, #3536]!	; 0xdd0

0001125c <read@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #24, 20	; 0x18000
   11264:	ldr	pc, [ip, #3528]!	; 0xdc8

00011268 <getuid@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #24, 20	; 0x18000
   11270:	ldr	pc, [ip, #3520]!	; 0xdc0

00011274 <memmove@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #24, 20	; 0x18000
   1127c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011280 <strchrnul@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #24, 20	; 0x18000
   11288:	ldr	pc, [ip, #3504]!	; 0xdb0

0001128c <free@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #24, 20	; 0x18000
   11294:	ldr	pc, [ip, #3496]!	; 0xda8

00011298 <gai_strerror@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #24, 20	; 0x18000
   112a0:	ldr	pc, [ip, #3488]!	; 0xda0

000112a4 <strndup@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #24, 20	; 0x18000
   112ac:	ldr	pc, [ip, #3480]!	; 0xd98

000112b0 <memcpy@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #24, 20	; 0x18000
   112b8:	ldr	pc, [ip, #3472]!	; 0xd90

000112bc <signal@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #24, 20	; 0x18000
   112c4:	ldr	pc, [ip, #3464]!	; 0xd88

000112c8 <fwrite_unlocked@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #24, 20	; 0x18000
   112d0:	ldr	pc, [ip, #3456]!	; 0xd80

000112d4 <sleep@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #24, 20	; 0x18000
   112dc:	ldr	pc, [ip, #3448]!	; 0xd78

000112e0 <recvfrom@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #24, 20	; 0x18000
   112e8:	ldr	pc, [ip, #3440]!	; 0xd70

000112ec <alarm@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #24, 20	; 0x18000
   112f4:	ldr	pc, [ip, #3432]!	; 0xd68

000112f8 <realloc@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #24, 20	; 0x18000
   11300:	ldr	pc, [ip, #3424]!	; 0xd60

00011304 <chdir@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #24, 20	; 0x18000
   1130c:	ldr	pc, [ip, #3416]!	; 0xd58

00011310 <strcasecmp@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #24, 20	; 0x18000
   11318:	ldr	pc, [ip, #3408]!	; 0xd50

0001131c <funlockfile@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #24, 20	; 0x18000
   11324:	ldr	pc, [ip, #3400]!	; 0xd48

00011328 <ioctl@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #24, 20	; 0x18000
   11330:	ldr	pc, [ip, #3392]!	; 0xd40

00011334 <chroot@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #24, 20	; 0x18000
   1133c:	ldr	pc, [ip, #3384]!	; 0xd38

00011340 <error@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #24, 20	; 0x18000
   11348:	ldr	pc, [ip, #3376]!	; 0xd30

0001134c <open64@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #24, 20	; 0x18000
   11354:	ldr	pc, [ip, #3368]!	; 0xd28

00011358 <getenv@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #24, 20	; 0x18000
   11360:	ldr	pc, [ip, #3360]!	; 0xd20

00011364 <setgid@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #24, 20	; 0x18000
   1136c:	ldr	pc, [ip, #3352]!	; 0xd18

00011370 <malloc@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #24, 20	; 0x18000
   11378:	ldr	pc, [ip, #3344]!	; 0xd10

0001137c <__libc_start_main@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #24, 20	; 0x18000
   11384:	ldr	pc, [ip, #3336]!	; 0xd08

00011388 <strerror@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #24, 20	; 0x18000
   11390:	ldr	pc, [ip, #3328]!	; 0xd00

00011394 <__ctype_tolower_loc@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #24, 20	; 0x18000
   1139c:	ldr	pc, [ip, #3320]!	; 0xcf8

000113a0 <__gmon_start__@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #24, 20	; 0x18000
   113a8:	ldr	pc, [ip, #3312]!	; 0xcf0

000113ac <mempcpy@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #24, 20	; 0x18000
   113b4:	ldr	pc, [ip, #3304]!	; 0xce8

000113b8 <__ctype_b_loc@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #24, 20	; 0x18000
   113c0:	ldr	pc, [ip, #3296]!	; 0xce0

000113c4 <exit@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #24, 20	; 0x18000
   113cc:	ldr	pc, [ip, #3288]!	; 0xcd8

000113d0 <strlen@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #24, 20	; 0x18000
   113d8:	ldr	pc, [ip, #3280]!	; 0xcd0

000113dc <strchr@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #24, 20	; 0x18000
   113e4:	ldr	pc, [ip, #3272]!	; 0xcc8

000113e8 <fprintf@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #24, 20	; 0x18000
   113f0:	ldr	pc, [ip, #3264]!	; 0xcc0

000113f4 <__errno_location@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #24, 20	; 0x18000
   113fc:	ldr	pc, [ip, #3256]!	; 0xcb8

00011400 <strerror_r@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #24, 20	; 0x18000
   11408:	ldr	pc, [ip, #3248]!	; 0xcb0

0001140c <bind@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #24, 20	; 0x18000
   11414:	ldr	pc, [ip, #3240]!	; 0xca8

00011418 <memset@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #24, 20	; 0x18000
   11420:	ldr	pc, [ip, #3232]!	; 0xca0

00011424 <write@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #24, 20	; 0x18000
   1142c:	ldr	pc, [ip, #3224]!	; 0xc98

00011430 <fileno@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #24, 20	; 0x18000
   11438:	ldr	pc, [ip, #3216]!	; 0xc90

0001143c <memchr@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #24, 20	; 0x18000
   11444:	ldr	pc, [ip, #3208]!	; 0xc88

00011448 <fclose@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #24, 20	; 0x18000
   11450:	ldr	pc, [ip, #3200]!	; 0xc80

00011454 <fseeko64@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #24, 20	; 0x18000
   1145c:	ldr	pc, [ip, #3192]!	; 0xc78

00011460 <sendto@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #24, 20	; 0x18000
   11468:	ldr	pc, [ip, #3184]!	; 0xc70

0001146c <fork@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #24, 20	; 0x18000
   11474:	ldr	pc, [ip, #3176]!	; 0xc68

00011478 <getnameinfo@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #24, 20	; 0x18000
   11480:	ldr	pc, [ip, #3168]!	; 0xc60

00011484 <strrchr@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #24, 20	; 0x18000
   1148c:	ldr	pc, [ip, #3160]!	; 0xc58

00011490 <vfprintf@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #24, 20	; 0x18000
   11498:	ldr	pc, [ip, #3152]!	; 0xc50

0001149c <__sigsetjmp@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #24, 20	; 0x18000
   114a4:	ldr	pc, [ip, #3144]!	; 0xc48

000114a8 <fputc@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #24, 20	; 0x18000
   114b0:	ldr	pc, [ip, #3136]!	; 0xc40

000114b4 <syslog@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #24, 20	; 0x18000
   114bc:	ldr	pc, [ip, #3128]!	; 0xc38

000114c0 <setuid@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #24, 20	; 0x18000
   114c8:	ldr	pc, [ip, #3120]!	; 0xc30

000114cc <sprintf@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #24, 20	; 0x18000
   114d4:	ldr	pc, [ip, #3112]!	; 0xc28

000114d8 <openlog@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #24, 20	; 0x18000
   114e0:	ldr	pc, [ip, #3104]!	; 0xc20

000114e4 <putc@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #24, 20	; 0x18000
   114ec:	ldr	pc, [ip, #3096]!	; 0xc18

000114f0 <flockfile@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #24, 20	; 0x18000
   114f8:	ldr	pc, [ip, #3088]!	; 0xc10

000114fc <vsnprintf@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #24, 20	; 0x18000
   11504:	ldr	pc, [ip, #3080]!	; 0xc08

00011508 <atoi@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #24, 20	; 0x18000
   11510:	ldr	pc, [ip, #3072]!	; 0xc00

00011514 <qsort@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #24, 20	; 0x18000
   1151c:	ldr	pc, [ip, #3064]!	; 0xbf8

00011520 <socket@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #24, 20	; 0x18000
   11528:	ldr	pc, [ip, #3056]!	; 0xbf0

0001152c <__xstat64@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #24, 20	; 0x18000
   11534:	ldr	pc, [ip, #3048]!	; 0xbe8

00011538 <fputs@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #24, 20	; 0x18000
   11540:	ldr	pc, [ip, #3040]!	; 0xbe0

00011544 <strncmp@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #24, 20	; 0x18000
   1154c:	ldr	pc, [ip, #3032]!	; 0xbd8

00011550 <abort@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #24, 20	; 0x18000
   11558:	ldr	pc, [ip, #3024]!	; 0xbd0

0001155c <getc@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #24, 20	; 0x18000
   11564:	ldr	pc, [ip, #3016]!	; 0xbc8

00011568 <recv@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #24, 20	; 0x18000
   11570:	ldr	pc, [ip, #3008]!	; 0xbc0

00011574 <siglongjmp@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #24, 20	; 0x18000
   1157c:	ldr	pc, [ip, #3000]!	; 0xbb8

00011580 <close@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #24, 20	; 0x18000
   11588:	ldr	pc, [ip, #2992]!	; 0xbb0

0001158c <getgrnam@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #24, 20	; 0x18000
   11594:	ldr	pc, [ip, #2984]!	; 0xba8

00011598 <__assert_fail@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #24, 20	; 0x18000
   115a0:	ldr	pc, [ip, #2976]!	; 0xba0

000115a4 <putc_unlocked@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #24, 20	; 0x18000
   115ac:	ldr	pc, [ip, #2968]!	; 0xb98

Disassembly of section .text:

000115b0 <argp_parse@@Base-0x1a40>:
   115b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115b4:	mov	r7, r0
   115b8:	sub	sp, sp, #148	; 0x94
   115bc:	ldr	r0, [pc, #828]	; 11900 <putc_unlocked@plt+0x35c>
   115c0:	mov	r8, r1
   115c4:	bl	144b0 <argp_parse@@Base+0x14c0>
   115c8:	ldr	r4, [pc, #820]	; 11904 <putc_unlocked@plt+0x360>
   115cc:	str	r0, [r4, #1356]	; 0x54c
   115d0:	ldr	r0, [r8]
   115d4:	bl	13bac <argp_parse@@Base+0xbbc>
   115d8:	ldr	r3, [pc, #808]	; 11908 <putc_unlocked@plt+0x364>
   115dc:	ldr	r2, [pc, #808]	; 1190c <putc_unlocked@plt+0x368>
   115e0:	ldr	r1, [pc, #808]	; 11910 <putc_unlocked@plt+0x36c>
   115e4:	ldr	r0, [pc, #808]	; 11914 <putc_unlocked@plt+0x370>
   115e8:	str	r2, [r3]
   115ec:	bl	139d8 <argp_parse@@Base+0x9e8>
   115f0:	mov	r3, #0
   115f4:	add	r2, sp, #8
   115f8:	str	r3, [sp, #4]
   115fc:	str	r2, [sp]
   11600:	mov	r1, r7
   11604:	mov	r2, r8
   11608:	ldr	r0, [pc, #776]	; 11918 <putc_unlocked@plt+0x374>
   1160c:	bl	12ff0 <argp_parse@@Base>
   11610:	mov	r2, #88	; 0x58
   11614:	mov	r1, #9
   11618:	ldr	r0, [pc, #756]	; 11914 <putc_unlocked@plt+0x370>
   1161c:	bl	114d8 <openlog@plt>
   11620:	ldr	r3, [sp, #8]
   11624:	cmp	r7, r3
   11628:	addgt	r6, r4, #652	; 0x28c
   1162c:	addgt	r9, r4, #812	; 0x32c
   11630:	bgt	1168c <putc_unlocked@plt+0xe8>
   11634:	add	r2, sp, #144	; 0x90
   11638:	mov	r7, #1
   1163c:	str	r7, [r2, #-132]!	; 0xffffff7c
   11640:	ldr	r1, [pc, #724]	; 1191c <putc_unlocked@plt+0x378>
   11644:	mov	r0, #0
   11648:	bl	13b80 <argp_parse@@Base+0xb90>
   1164c:	cmp	r0, #0
   11650:	bge	116b0 <putc_unlocked@plt+0x10c>
   11654:	ldr	r1, [pc, #708]	; 11920 <putc_unlocked@plt+0x37c>
   11658:	mov	r0, #3
   1165c:	bl	114b4 <syslog@plt>
   11660:	b	1177c <putc_unlocked@plt+0x1d8>
   11664:	ldr	r0, [r8, r5, lsl #2]
   11668:	ldrb	r3, [r0]
   1166c:	cmp	r3, #47	; 0x2f
   11670:	bne	11684 <putc_unlocked@plt+0xe0>
   11674:	str	r0, [r6]
   11678:	bl	113d0 <strlen@plt>
   1167c:	add	r6, r6, #8
   11680:	str	r0, [r6, #-4]
   11684:	add	r5, r5, #1
   11688:	str	r5, [sp, #8]
   1168c:	ldr	r5, [sp, #8]
   11690:	cmp	r6, r9
   11694:	movcs	r3, #0
   11698:	movcc	r3, #1
   1169c:	cmp	r7, r5
   116a0:	movle	r3, #0
   116a4:	cmp	r3, #0
   116a8:	bne	11664 <putc_unlocked@plt+0xc0>
   116ac:	b	11634 <putc_unlocked@plt+0x90>
   116b0:	ldr	r8, [pc, #620]	; 11924 <putc_unlocked@plt+0x380>
   116b4:	mov	r9, #128	; 0x80
   116b8:	add	r3, r8, r9
   116bc:	str	r3, [sp, #4]
   116c0:	mov	r3, #0
   116c4:	sub	r1, r8, #520	; 0x208
   116c8:	str	r8, [sp]
   116cc:	mov	r2, #516	; 0x204
   116d0:	mov	r0, r3
   116d4:	str	r9, [r4, #648]	; 0x288
   116d8:	bl	112e0 <recvfrom@plt>
   116dc:	subs	r6, r0, #0
   116e0:	ldrlt	r1, [pc, #576]	; 11928 <putc_unlocked@plt+0x384>
   116e4:	blt	11658 <putc_unlocked@plt+0xb4>
   116e8:	add	sl, sp, #16
   116ec:	sub	fp, r8, #520	; 0x208
   116f0:	bl	1146c <fork@plt>
   116f4:	subs	r5, r0, #0
   116f8:	bge	11818 <putc_unlocked@plt+0x274>
   116fc:	mov	r0, r7
   11700:	bl	112d4 <sleep@plt>
   11704:	mov	r3, #0
   11708:	mov	r0, r3
   1170c:	stm	sp, {r8, sl}
   11710:	mov	r2, #516	; 0x204
   11714:	mov	r1, fp
   11718:	str	r9, [sp, #16]
   1171c:	bl	112e0 <recvfrom@plt>
   11720:	cmp	r0, #0
   11724:	add	r7, r0, #1
   11728:	ldrgt	r3, [sp, #16]
   1172c:	movgt	r6, r0
   11730:	strgt	r3, [r4, #648]	; 0x288
   11734:	cmp	r7, #19
   11738:	ble	116f0 <putc_unlocked@plt+0x14c>
   1173c:	ldr	r1, [pc, #488]	; 1192c <putc_unlocked@plt+0x388>
   11740:	b	11658 <putc_unlocked@plt+0xb4>
   11744:	mov	r0, #0
   11748:	bl	113c4 <exit@plt>
   1174c:	mov	r7, r5
   11750:	ldr	r8, [r4, #1352]	; 0x548
   11754:	mov	r0, r8
   11758:	bl	11334 <chroot@plt>
   1175c:	cmp	r0, #0
   11760:	beq	1178c <putc_unlocked@plt+0x1e8>
   11764:	mov	r0, #3
   11768:	mov	r2, r8
   1176c:	ldr	r1, [pc, #444]	; 11930 <putc_unlocked@plt+0x38c>
   11770:	bl	114b4 <syslog@plt>
   11774:	mov	r0, #2
   11778:	bl	11a84 <putc_unlocked@plt+0x4e0>
   1177c:	mov	r0, #1
   11780:	b	11748 <putc_unlocked@plt+0x1a4>
   11784:	mov	r5, #0
   11788:	b	11750 <putc_unlocked@plt+0x1ac>
   1178c:	ldr	r0, [pc, #416]	; 11934 <putc_unlocked@plt+0x390>
   11790:	bl	11304 <chdir@plt>
   11794:	cmp	r0, #0
   11798:	bne	11764 <putc_unlocked@plt+0x1c0>
   1179c:	cmp	r7, #0
   117a0:	beq	117e0 <putc_unlocked@plt+0x23c>
   117a4:	cmp	r5, #0
   117a8:	ldreq	r0, [r7, #12]
   117ac:	ldrne	r0, [r5, #8]
   117b0:	bl	11364 <setgid@plt>
   117b4:	cmp	r0, #0
   117b8:	ldrne	r1, [pc, #376]	; 11938 <putc_unlocked@plt+0x394>
   117bc:	bne	117d4 <putc_unlocked@plt+0x230>
   117c0:	ldr	r0, [r7, #8]
   117c4:	bl	114c0 <setuid@plt>
   117c8:	cmp	r0, #0
   117cc:	beq	117e0 <putc_unlocked@plt+0x23c>
   117d0:	ldr	r1, [pc, #356]	; 1193c <putc_unlocked@plt+0x398>
   117d4:	mov	r0, #3
   117d8:	bl	114b4 <syslog@plt>
   117dc:	b	118f8 <putc_unlocked@plt+0x354>
   117e0:	ldrb	r2, [r4, #1]
   117e4:	ldrb	r3, [r4]
   117e8:	orr	r3, r3, r2, lsl #8
   117ec:	rev16	r3, r3
   117f0:	uxth	r3, r3
   117f4:	strb	r3, [r4]
   117f8:	lsr	r2, r3, #8
   117fc:	sub	r3, r3, #1
   11800:	cmp	r3, #1
   11804:	strb	r2, [r4, #1]
   11808:	bhi	1177c <putc_unlocked@plt+0x1d8>
   1180c:	mov	r1, r6
   11810:	ldr	r0, [pc, #236]	; 11904 <putc_unlocked@plt+0x360>
   11814:	bl	12428 <putc_unlocked@plt+0xe84>
   11818:	bne	11744 <putc_unlocked@plt+0x1a0>
   1181c:	bl	112ec <alarm@plt>
   11820:	mov	r0, r5
   11824:	bl	11580 <close@plt>
   11828:	mov	r0, #1
   1182c:	bl	11580 <close@plt>
   11830:	mov	r1, #2
   11834:	mov	r2, r5
   11838:	ldrh	r0, [r8]
   1183c:	bl	11520 <socket@plt>
   11840:	cmp	r0, #0
   11844:	mov	r7, r0
   11848:	str	r0, [r4, #516]	; 0x204
   1184c:	ldrlt	r1, [pc, #236]	; 11940 <putc_unlocked@plt+0x39c>
   11850:	blt	11658 <putc_unlocked@plt+0xb4>
   11854:	mov	r2, #128	; 0x80
   11858:	mov	r1, r5
   1185c:	add	r0, sp, #16
   11860:	bl	11418 <memset@plt>
   11864:	ldrh	r3, [r8]
   11868:	add	r1, sp, #16
   1186c:	ldr	r2, [r4, #648]	; 0x288
   11870:	mov	r0, r7
   11874:	strh	r3, [sp, #16]
   11878:	bl	1140c <bind@plt>
   1187c:	cmp	r0, #0
   11880:	ldrlt	r1, [pc, #188]	; 11944 <putc_unlocked@plt+0x3a0>
   11884:	blt	11658 <putc_unlocked@plt+0xb4>
   11888:	ldr	r3, [r4, #1352]	; 0x548
   1188c:	cmp	r3, #0
   11890:	beq	117e0 <putc_unlocked@plt+0x23c>
   11894:	ldrb	r3, [r3]
   11898:	cmp	r3, #0
   1189c:	beq	117e0 <putc_unlocked@plt+0x23c>
   118a0:	bl	11268 <getuid@plt>
   118a4:	cmp	r0, #0
   118a8:	bne	1174c <putc_unlocked@plt+0x1a8>
   118ac:	ldr	r0, [r4, #1356]	; 0x54c
   118b0:	bl	11238 <getpwnam@plt>
   118b4:	subs	r7, r0, #0
   118b8:	ldreq	r2, [r4, #1356]	; 0x54c
   118bc:	ldreq	r1, [pc, #132]	; 11948 <putc_unlocked@plt+0x3a4>
   118c0:	beq	118f0 <putc_unlocked@plt+0x34c>
   118c4:	ldr	r0, [r4, #1344]	; 0x540
   118c8:	cmp	r0, #0
   118cc:	beq	11784 <putc_unlocked@plt+0x1e0>
   118d0:	ldrb	r3, [r0]
   118d4:	cmp	r3, #0
   118d8:	beq	11784 <putc_unlocked@plt+0x1e0>
   118dc:	bl	1158c <getgrnam@plt>
   118e0:	subs	r5, r0, #0
   118e4:	bne	11750 <putc_unlocked@plt+0x1ac>
   118e8:	ldr	r2, [r4, #1344]	; 0x540
   118ec:	ldr	r1, [pc, #88]	; 1194c <putc_unlocked@plt+0x3a8>
   118f0:	mov	r0, #3
   118f4:	bl	114b4 <syslog@plt>
   118f8:	mov	r0, #7
   118fc:	b	11778 <putc_unlocked@plt+0x1d4>
   11900:	strdeq	r8, [r1], -r3
   11904:	strdeq	sl, [r2], -ip
   11908:	andeq	fp, r2, r8, asr #4
   1190c:	strdeq	r8, [r1], -sl
   11910:	muleq	r2, ip, r2
   11914:	andeq	r8, r1, r2, lsl r9
   11918:	ldrdeq	sl, [r2], -r8
   1191c:	andeq	r5, r0, r1, lsr #8
   11920:	andeq	r8, r1, r8, lsl r9
   11924:	andeq	sl, r2, r4, lsl #10
   11928:	andeq	r8, r1, fp, lsr #18
   1192c:	muleq	r1, ip, r9
   11930:	andeq	r8, r1, r5, ror r9
   11934:	andeq	r8, r1, sl, ror #16
   11938:	andeq	r8, r1, r6, lsl #19
   1193c:	muleq	r1, r1, r9
   11940:	andeq	r8, r1, r9, lsr r9
   11944:	andeq	r8, r1, r5, asr #18
   11948:	andeq	r8, r1, pc, asr #18
   1194c:	andeq	r8, r1, r2, ror #18
   11950:	mov	fp, #0
   11954:	mov	lr, #0
   11958:	pop	{r1}		; (ldr r1, [sp], #4)
   1195c:	mov	r2, sp
   11960:	push	{r2}		; (str r2, [sp, #-4]!)
   11964:	push	{r0}		; (str r0, [sp, #-4]!)
   11968:	ldr	ip, [pc, #16]	; 11980 <putc_unlocked@plt+0x3dc>
   1196c:	push	{ip}		; (str ip, [sp, #-4]!)
   11970:	ldr	r0, [pc, #12]	; 11984 <putc_unlocked@plt+0x3e0>
   11974:	ldr	r3, [pc, #12]	; 11988 <putc_unlocked@plt+0x3e4>
   11978:	bl	1137c <__libc_start_main@plt>
   1197c:	bl	11550 <abort@plt>
   11980:	andeq	r8, r1, ip, lsr r8
   11984:			; <UNDEFINED> instruction: 0x000115b0
   11988:	ldrdeq	r8, [r1], -ip
   1198c:	ldr	r3, [pc, #20]	; 119a8 <putc_unlocked@plt+0x404>
   11990:	ldr	r2, [pc, #20]	; 119ac <putc_unlocked@plt+0x408>
   11994:	add	r3, pc, r3
   11998:	ldr	r2, [r3, r2]
   1199c:	cmp	r2, #0
   119a0:	bxeq	lr
   119a4:	b	113a0 <__gmon_start__@plt>
   119a8:	andeq	r8, r1, r4, ror #12
   119ac:	andeq	r0, r0, r8, asr #2
   119b0:	ldr	r3, [pc, #28]	; 119d4 <putc_unlocked@plt+0x430>
   119b4:	ldr	r0, [pc, #28]	; 119d8 <putc_unlocked@plt+0x434>
   119b8:	sub	r3, r3, r0
   119bc:	cmp	r3, #6
   119c0:	bxls	lr
   119c4:	ldr	r3, [pc, #16]	; 119dc <putc_unlocked@plt+0x438>
   119c8:	cmp	r3, #0
   119cc:	bxeq	lr
   119d0:	bx	r3
   119d4:	andeq	sl, r2, r7, ror #5
   119d8:	andeq	sl, r2, r4, ror #5
   119dc:	andeq	r0, r0, r0
   119e0:	ldr	r1, [pc, #36]	; 11a0c <putc_unlocked@plt+0x468>
   119e4:	ldr	r0, [pc, #36]	; 11a10 <putc_unlocked@plt+0x46c>
   119e8:	sub	r1, r1, r0
   119ec:	asr	r1, r1, #2
   119f0:	add	r1, r1, r1, lsr #31
   119f4:	asrs	r1, r1, #1
   119f8:	bxeq	lr
   119fc:	ldr	r3, [pc, #16]	; 11a14 <putc_unlocked@plt+0x470>
   11a00:	cmp	r3, #0
   11a04:	bxeq	lr
   11a08:	bx	r3
   11a0c:	andeq	sl, r2, r4, ror #5
   11a10:	andeq	sl, r2, r4, ror #5
   11a14:	andeq	r0, r0, r0
   11a18:	push	{r4, lr}
   11a1c:	ldr	r4, [pc, #24]	; 11a3c <putc_unlocked@plt+0x498>
   11a20:	ldrb	r3, [r4]
   11a24:	cmp	r3, #0
   11a28:	popne	{r4, pc}
   11a2c:	bl	119b0 <putc_unlocked@plt+0x40c>
   11a30:	mov	r3, #1
   11a34:	strb	r3, [r4]
   11a38:	pop	{r4, pc}
   11a3c:	strdeq	sl, [r2], -r8
   11a40:	ldr	r0, [pc, #40]	; 11a70 <putc_unlocked@plt+0x4cc>
   11a44:	ldr	r3, [r0]
   11a48:	cmp	r3, #0
   11a4c:	bne	11a54 <putc_unlocked@plt+0x4b0>
   11a50:	b	119e0 <putc_unlocked@plt+0x43c>
   11a54:	ldr	r3, [pc, #24]	; 11a74 <putc_unlocked@plt+0x4d0>
   11a58:	cmp	r3, #0
   11a5c:	beq	11a50 <putc_unlocked@plt+0x4ac>
   11a60:	push	{r4, lr}
   11a64:	blx	r3
   11a68:	pop	{r4, lr}
   11a6c:	b	119e0 <putc_unlocked@plt+0x43c>
   11a70:	andeq	r9, r2, ip, lsl #30
   11a74:	andeq	r0, r0, r0
   11a78:	push	{r4, lr}
   11a7c:	mov	r0, #0
   11a80:	bl	113c4 <exit@plt>
   11a84:	push	{r0, r1, r4, r5, r6, lr}
   11a88:	mov	r3, #0
   11a8c:	ldr	r4, [pc, #196]	; 11b58 <putc_unlocked@plt+0x5b4>
   11a90:	ldr	r5, [pc, #196]	; 11b5c <putc_unlocked@plt+0x5b8>
   11a94:	strb	r3, [r4]
   11a98:	mov	r3, #5
   11a9c:	strb	r3, [r4, #1]
   11aa0:	rev16	r3, r0
   11aa4:	uxth	r3, r3
   11aa8:	strb	r3, [r4, #2]
   11aac:	lsr	r3, r3, #8
   11ab0:	strb	r3, [r4, #3]
   11ab4:	ldr	r3, [r5]
   11ab8:	cmp	r3, #0
   11abc:	bge	11b40 <putc_unlocked@plt+0x59c>
   11ac0:	sub	r0, r0, #100	; 0x64
   11ac4:	bl	11388 <strerror@plt>
   11ac8:	mov	r3, #0
   11acc:	strb	r3, [r4, #2]
   11ad0:	strb	r3, [r4, #3]
   11ad4:	str	r0, [r5, #4]
   11ad8:	ldr	r6, [r5, #4]
   11adc:	mov	r0, r6
   11ae0:	bl	113d0 <strlen@plt>
   11ae4:	mov	r1, r6
   11ae8:	mov	r5, r0
   11aec:	mov	r2, r0
   11af0:	ldr	r0, [pc, #104]	; 11b60 <putc_unlocked@plt+0x5bc>
   11af4:	bl	112b0 <memcpy@plt>
   11af8:	add	r2, r4, r5
   11afc:	mov	r3, #0
   11b00:	strb	r3, [r2, #4]
   11b04:	ldr	r1, [pc, #88]	; 11b64 <putc_unlocked@plt+0x5c0>
   11b08:	ldr	r2, [r4, #648]	; 0x288
   11b0c:	add	r5, r5, #5
   11b10:	ldr	r0, [r4, #516]	; 0x204
   11b14:	stm	sp, {r1, r2}
   11b18:	mov	r2, r5
   11b1c:	sub	r1, r1, #520	; 0x208
   11b20:	bl	11460 <sendto@plt>
   11b24:	cmp	r5, r0
   11b28:	beq	11b50 <putc_unlocked@plt+0x5ac>
   11b2c:	ldr	r1, [pc, #52]	; 11b68 <putc_unlocked@plt+0x5c4>
   11b30:	mov	r0, #3
   11b34:	add	sp, sp, #8
   11b38:	pop	{r4, r5, r6, lr}
   11b3c:	b	114b4 <syslog@plt>
   11b40:	cmp	r0, r3
   11b44:	beq	11ad8 <putc_unlocked@plt+0x534>
   11b48:	add	r5, r5, #8
   11b4c:	b	11ab4 <putc_unlocked@plt+0x510>
   11b50:	add	sp, sp, #8
   11b54:	pop	{r4, r5, r6, pc}
   11b58:	strdeq	sl, [r2], -ip
   11b5c:	andeq	sl, r2, r4, asr r1
   11b60:	andeq	sl, r2, r0, lsl #6
   11b64:	andeq	sl, r2, r4, lsl #10
   11b68:	andeq	r8, r1, ip, asr r8
   11b6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b70:	mov	r9, r0
   11b74:	ldr	r5, [r0]
   11b78:	sub	sp, sp, #116	; 0x74
   11b7c:	mov	r7, r1
   11b80:	mov	r0, r5
   11b84:	ldr	r1, [pc, #512]	; 11d8c <putc_unlocked@plt+0x7e8>
   11b88:	bl	11220 <strstr@plt>
   11b8c:	cmp	r0, #0
   11b90:	bne	11ce0 <putc_unlocked@plt+0x73c>
   11b94:	ldrb	r3, [r5]
   11b98:	cmp	r3, #47	; 0x2f
   11b9c:	ldreq	r4, [pc, #492]	; 11d90 <putc_unlocked@plt+0x7ec>
   11ba0:	moveq	r8, r4
   11ba4:	beq	11ca8 <putc_unlocked@plt+0x704>
   11ba8:	cmp	r7, #1
   11bac:	bne	11ce0 <putc_unlocked@plt+0x73c>
   11bb0:	mov	r2, #3
   11bb4:	ldr	r1, [pc, #472]	; 11d94 <putc_unlocked@plt+0x7f0>
   11bb8:	mov	r0, r5
   11bbc:	bl	11544 <strncmp@plt>
   11bc0:	cmp	r0, #0
   11bc4:	beq	11ce0 <putc_unlocked@plt+0x73c>
   11bc8:	ldr	r6, [pc, #456]	; 11d98 <putc_unlocked@plt+0x7f4>
   11bcc:	ldr	fp, [pc, #456]	; 11d9c <putc_unlocked@plt+0x7f8>
   11bd0:	mov	r4, r7
   11bd4:	sub	r8, r6, #660	; 0x294
   11bd8:	ldr	r3, [r6, #-8]
   11bdc:	sub	sl, r6, #8
   11be0:	cmp	r3, #0
   11be4:	beq	11c5c <putc_unlocked@plt+0x6b8>
   11be8:	ldr	r0, [r8, #820]	; 0x334
   11bec:	bl	13a8c <argp_parse@@Base+0xa9c>
   11bf0:	ldr	r0, [r6, #-8]
   11bf4:	bl	113d0 <strlen@plt>
   11bf8:	str	r0, [sp, #4]
   11bfc:	mov	r0, r5
   11c00:	bl	113d0 <strlen@plt>
   11c04:	ldr	r3, [sp, #4]
   11c08:	add	r0, r3, r0
   11c0c:	add	r0, r0, #2
   11c10:	bl	14540 <argp_parse@@Base+0x1550>
   11c14:	cmp	r0, #0
   11c18:	str	r0, [r8, #820]	; 0x334
   11c1c:	beq	11d84 <putc_unlocked@plt+0x7e0>
   11c20:	mov	r3, r5
   11c24:	ldr	r2, [r6, #-8]
   11c28:	mov	r1, fp
   11c2c:	bl	114cc <sprintf@plt>
   11c30:	add	r1, sp, #8
   11c34:	ldr	r0, [r8, #820]	; 0x334
   11c38:	bl	18840 <argp_error@@Base+0x16a4>
   11c3c:	cmp	r0, #0
   11c40:	bne	11d48 <putc_unlocked@plt+0x7a4>
   11c44:	ldr	r3, [sp, #24]
   11c48:	and	r2, r3, #61440	; 0xf000
   11c4c:	cmp	r2, #32768	; 0x8000
   11c50:	bne	11d48 <putc_unlocked@plt+0x7a4>
   11c54:	tst	r3, #4
   11c58:	beq	11d44 <putc_unlocked@plt+0x7a0>
   11c5c:	ldr	r3, [sl]
   11c60:	cmp	r3, #0
   11c64:	beq	11ce4 <putc_unlocked@plt+0x740>
   11c68:	ldr	r3, [pc, #304]	; 11da0 <putc_unlocked@plt+0x7fc>
   11c6c:	ldr	r5, [r3, #820]	; 0x334
   11c70:	str	r5, [r9]
   11c74:	b	11d10 <putc_unlocked@plt+0x76c>
   11c78:	ldr	r6, [r4, #4]
   11c7c:	cmp	r6, #1
   11c80:	beq	11cbc <putc_unlocked@plt+0x718>
   11c84:	mov	r2, r6
   11c88:	mov	r0, r5
   11c8c:	bl	11544 <strncmp@plt>
   11c90:	cmp	r0, #0
   11c94:	bne	11ca4 <putc_unlocked@plt+0x700>
   11c98:	ldrb	r3, [r5, r6]
   11c9c:	cmp	r3, #47	; 0x2f
   11ca0:	beq	11cbc <putc_unlocked@plt+0x718>
   11ca4:	add	r4, r4, #8
   11ca8:	ldr	r1, [r4]
   11cac:	cmp	r1, #0
   11cb0:	bne	11c78 <putc_unlocked@plt+0x6d4>
   11cb4:	cmp	r4, r8
   11cb8:	bne	11ce0 <putc_unlocked@plt+0x73c>
   11cbc:	add	r1, sp, #8
   11cc0:	mov	r0, r5
   11cc4:	bl	18840 <argp_error@@Base+0x16a4>
   11cc8:	cmp	r0, #0
   11ccc:	bge	11cf0 <putc_unlocked@plt+0x74c>
   11cd0:	bl	113f4 <__errno_location@plt>
   11cd4:	ldr	r3, [r0]
   11cd8:	cmp	r3, #2
   11cdc:	beq	11d7c <putc_unlocked@plt+0x7d8>
   11ce0:	mov	r4, #2
   11ce4:	mov	r0, r4
   11ce8:	add	sp, sp, #116	; 0x74
   11cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cf0:	ldr	r3, [sp, #24]
   11cf4:	and	r2, r3, #61440	; 0xf000
   11cf8:	cmp	r2, #32768	; 0x8000
   11cfc:	bne	11d7c <putc_unlocked@plt+0x7d8>
   11d00:	cmp	r7, #1
   11d04:	bne	11d18 <putc_unlocked@plt+0x774>
   11d08:	tst	r3, #4
   11d0c:	beq	11ce0 <putc_unlocked@plt+0x73c>
   11d10:	mov	r1, #0
   11d14:	b	11d24 <putc_unlocked@plt+0x780>
   11d18:	tst	r3, #2
   11d1c:	ldrne	r1, [pc, #128]	; 11da4 <putc_unlocked@plt+0x800>
   11d20:	beq	11ce0 <putc_unlocked@plt+0x73c>
   11d24:	mov	r0, r5
   11d28:	bl	1134c <open64@plt>
   11d2c:	cmp	r0, #0
   11d30:	bge	11d50 <putc_unlocked@plt+0x7ac>
   11d34:	bl	113f4 <__errno_location@plt>
   11d38:	ldr	r4, [r0]
   11d3c:	add	r4, r4, #100	; 0x64
   11d40:	b	11ce4 <putc_unlocked@plt+0x740>
   11d44:	mov	r4, #2
   11d48:	add	r6, r6, #8
   11d4c:	b	11bd8 <putc_unlocked@plt+0x634>
   11d50:	ldr	r3, [pc, #80]	; 11da8 <putc_unlocked@plt+0x804>
   11d54:	cmp	r7, #1
   11d58:	ldr	r1, [pc, #76]	; 11dac <putc_unlocked@plt+0x808>
   11d5c:	movne	r1, r3
   11d60:	bl	111fc <fdopen@plt>
   11d64:	ldr	r3, [pc, #68]	; 11db0 <putc_unlocked@plt+0x80c>
   11d68:	cmp	r0, #0
   11d6c:	str	r0, [r3]
   11d70:	movne	r4, #0
   11d74:	bne	11ce4 <putc_unlocked@plt+0x740>
   11d78:	b	11d34 <putc_unlocked@plt+0x790>
   11d7c:	mov	r4, #1
   11d80:	b	11ce4 <putc_unlocked@plt+0x740>
   11d84:	mov	r4, #12
   11d88:	b	11ce4 <putc_unlocked@plt+0x740>
   11d8c:	andeq	r8, r1, r7, ror #16
   11d90:	andeq	sl, r2, r8, lsl #11
   11d94:	andeq	r8, r1, r8, ror #16
   11d98:	muleq	r2, r0, r5
   11d9c:	andeq	r8, r1, ip, ror #16
   11da0:	strdeq	sl, [r2], -ip
   11da4:	andeq	r0, r0, r1, lsl #4
   11da8:	andeq	r8, r1, r5, ror #16
   11dac:	andeq	r8, r1, r6, asr #20
   11db0:	andeq	sl, r2, r4, lsr lr
   11db4:	ldr	r2, [pc, #40]	; 11de4 <putc_unlocked@plt+0x840>
   11db8:	push	{r4, lr}
   11dbc:	ldr	r3, [r2]
   11dc0:	add	r3, r3, #5
   11dc4:	cmp	r3, #24
   11dc8:	str	r3, [r2]
   11dcc:	ble	11dd8 <putc_unlocked@plt+0x834>
   11dd0:	mov	r0, #1
   11dd4:	bl	113c4 <exit@plt>
   11dd8:	mov	r1, #1
   11ddc:	ldr	r0, [pc, #4]	; 11de8 <putc_unlocked@plt+0x844>
   11de0:	bl	11574 <siglongjmp@plt>
   11de4:	andeq	sl, r2, r0, lsr lr
   11de8:	andeq	sl, r2, r8, lsr #25
   11dec:	push	{r4, r5, r6, r7, lr}
   11df0:	sub	sp, sp, #36	; 0x24
   11df4:	ldr	r1, [pc, #544]	; 1201c <putc_unlocked@plt+0xa78>
   11df8:	str	r0, [sp, #16]
   11dfc:	mov	r0, #14
   11e00:	bl	112bc <signal@plt>
   11e04:	bl	12710 <putc_unlocked@plt+0x116c>
   11e08:	mov	r3, #1
   11e0c:	str	r3, [sp, #28]
   11e10:	ldr	r3, [pc, #520]	; 12020 <putc_unlocked@plt+0xa7c>
   11e14:	str	r3, [sp, #8]
   11e18:	str	r0, [sp, #24]
   11e1c:	ldr	r3, [sp, #16]
   11e20:	add	r1, sp, #24
   11e24:	ldr	r2, [r3, #16]
   11e28:	ldr	r3, [pc, #500]	; 12024 <putc_unlocked@plt+0xa80>
   11e2c:	ldr	r0, [r3]
   11e30:	bl	12860 <putc_unlocked@plt+0x12bc>
   11e34:	subs	r3, r0, #0
   11e38:	str	r3, [sp, #12]
   11e3c:	bge	11e64 <putc_unlocked@plt+0x8c0>
   11e40:	bl	113f4 <__errno_location@plt>
   11e44:	ldr	r0, [r0]
   11e48:	add	r0, r0, #100	; 0x64
   11e4c:	bl	11a84 <putc_unlocked@plt+0x4e0>
   11e50:	ldr	r3, [pc, #460]	; 12024 <putc_unlocked@plt+0xa80>
   11e54:	ldr	r0, [r3]
   11e58:	bl	11448 <fclose@plt>
   11e5c:	add	sp, sp, #36	; 0x24
   11e60:	pop	{r4, r5, r6, r7, pc}
   11e64:	ldr	r2, [sp, #24]
   11e68:	mov	r3, #3
   11e6c:	mov	r1, #0
   11e70:	strb	r3, [r2, #1]
   11e74:	ldr	r3, [sp, #28]
   11e78:	strb	r1, [r2]
   11e7c:	rev16	r3, r3
   11e80:	ldr	r0, [pc, #416]	; 12028 <putc_unlocked@plt+0xa84>
   11e84:	uxth	r3, r3
   11e88:	strb	r3, [r2, #2]
   11e8c:	lsr	r3, r3, #8
   11e90:	strb	r3, [r2, #3]
   11e94:	ldr	r3, [pc, #400]	; 1202c <putc_unlocked@plt+0xa88>
   11e98:	str	r1, [r3]
   11e9c:	mov	r1, #14
   11ea0:	bl	1149c <__sigsetjmp@plt>
   11ea4:	ldr	r5, [pc, #376]	; 12024 <putc_unlocked@plt+0xa80>
   11ea8:	ldr	r3, [sp, #8]
   11eac:	ldr	r1, [sp, #24]
   11eb0:	ldr	r3, [r3, #516]	; 0x204
   11eb4:	str	r3, [sp, #20]
   11eb8:	ldr	r3, [sp, #12]
   11ebc:	ldr	r0, [sp, #20]
   11ec0:	add	r4, r3, #4
   11ec4:	ldr	r3, [sp, #8]
   11ec8:	mov	r2, r4
   11ecc:	ldr	r3, [r3, #648]	; 0x288
   11ed0:	str	r3, [sp, #4]
   11ed4:	ldr	r3, [pc, #340]	; 12030 <putc_unlocked@plt+0xa8c>
   11ed8:	str	r3, [sp]
   11edc:	mov	r3, #0
   11ee0:	bl	11460 <sendto@plt>
   11ee4:	cmp	r4, r0
   11ee8:	beq	11efc <putc_unlocked@plt+0x958>
   11eec:	ldr	r1, [pc, #320]	; 12034 <putc_unlocked@plt+0xa90>
   11ef0:	mov	r0, #3
   11ef4:	bl	114b4 <syslog@plt>
   11ef8:	b	11e50 <putc_unlocked@plt+0x8ac>
   11efc:	ldr	r3, [sp, #16]
   11f00:	ldr	r0, [r5]
   11f04:	mov	r4, #0
   11f08:	ldr	r1, [r3, #16]
   11f0c:	bl	1275c <putc_unlocked@plt+0x11b8>
   11f10:	ldr	r3, [sp, #8]
   11f14:	add	r6, r3, #824	; 0x338
   11f18:	mov	r0, #5
   11f1c:	bl	112ec <alarm@plt>
   11f20:	ldr	r0, [sp, #8]
   11f24:	mov	r3, r4
   11f28:	mov	r2, #516	; 0x204
   11f2c:	mov	r1, r6
   11f30:	ldr	r0, [r0, #516]	; 0x204
   11f34:	bl	11568 <recv@plt>
   11f38:	mov	r7, r0
   11f3c:	mov	r0, r4
   11f40:	bl	112ec <alarm@plt>
   11f44:	cmp	r7, #0
   11f48:	ldrlt	r1, [pc, #232]	; 12038 <putc_unlocked@plt+0xa94>
   11f4c:	blt	11ef0 <putc_unlocked@plt+0x94c>
   11f50:	ldr	r2, [pc, #228]	; 1203c <putc_unlocked@plt+0xa98>
   11f54:	ldr	r3, [pc, #224]	; 1203c <putc_unlocked@plt+0xa98>
   11f58:	ldr	r1, [pc, #220]	; 1203c <putc_unlocked@plt+0xa98>
   11f5c:	ldrb	r2, [r2, #1]
   11f60:	ldrb	r3, [r3]
   11f64:	ldr	r0, [pc, #208]	; 1203c <putc_unlocked@plt+0xa98>
   11f68:	orr	r3, r3, r2, lsl #8
   11f6c:	rev16	r3, r3
   11f70:	sxth	r2, r3
   11f74:	uxth	r3, r3
   11f78:	strb	r3, [r1]
   11f7c:	lsr	r3, r3, #8
   11f80:	strb	r3, [r1, #1]
   11f84:	ldrb	r3, [r1, #2]
   11f88:	ldrb	r1, [r1, #3]
   11f8c:	cmp	r2, #5
   11f90:	orr	r3, r3, r1, lsl #8
   11f94:	rev16	r3, r3
   11f98:	ldr	r1, [pc, #156]	; 1203c <putc_unlocked@plt+0xa98>
   11f9c:	uxth	r3, r3
   11fa0:	strb	r3, [r1, #2]
   11fa4:	lsr	r1, r3, #8
   11fa8:	strb	r1, [r0, #3]
   11fac:	beq	11e50 <putc_unlocked@plt+0x8ac>
   11fb0:	cmp	r2, #4
   11fb4:	bne	11f18 <putc_unlocked@plt+0x974>
   11fb8:	ldr	r2, [sp, #28]
   11fbc:	uxth	r2, r2
   11fc0:	cmp	r2, r3
   11fc4:	beq	12000 <putc_unlocked@plt+0xa5c>
   11fc8:	ldr	r3, [sp, #8]
   11fcc:	ldr	r0, [r3, #516]	; 0x204
   11fd0:	bl	12a44 <putc_unlocked@plt+0x14a0>
   11fd4:	ldr	r1, [pc, #96]	; 1203c <putc_unlocked@plt+0xa98>
   11fd8:	ldr	r2, [pc, #92]	; 1203c <putc_unlocked@plt+0xa98>
   11fdc:	ldr	r3, [sp, #28]
   11fe0:	ldrb	r1, [r1, #3]
   11fe4:	ldrb	r2, [r2, #2]
   11fe8:	sub	r3, r3, #1
   11fec:	orr	r2, r2, r1, lsl #8
   11ff0:	uxth	r3, r3
   11ff4:	cmp	r2, r3
   11ff8:	bne	11f18 <putc_unlocked@plt+0x974>
   11ffc:	b	11ea8 <putc_unlocked@plt+0x904>
   12000:	ldr	r3, [sp, #28]
   12004:	add	r3, r3, #1
   12008:	str	r3, [sp, #28]
   1200c:	ldr	r3, [sp, #12]
   12010:	cmp	r3, #512	; 0x200
   12014:	bne	11e50 <putc_unlocked@plt+0x8ac>
   12018:	b	11e1c <putc_unlocked@plt+0x878>
   1201c:			; <UNDEFINED> instruction: 0x00011db4
   12020:	strdeq	sl, [r2], -ip
   12024:	andeq	sl, r2, r4, lsr lr
   12028:	andeq	sl, r2, r8, lsr #25
   1202c:	andeq	sl, r2, r0, lsr lr
   12030:	andeq	sl, r2, r4, lsl #10
   12034:	andeq	r8, r1, r2, ror r8
   12038:	andeq	r8, r1, r4, lsl #17
   1203c:	andeq	sl, r2, r4, lsr r6
   12040:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12044:	sub	sp, sp, #24
   12048:	ldr	r1, [pc, #740]	; 12334 <putc_unlocked@plt+0xd90>
   1204c:	str	r0, [sp, #8]
   12050:	mov	r0, #14
   12054:	bl	112bc <signal@plt>
   12058:	bl	126c8 <putc_unlocked@plt+0x1124>
   1205c:	mov	r3, #0
   12060:	str	r3, [sp, #20]
   12064:	str	r3, [sp, #12]
   12068:	str	r0, [sp, #16]
   1206c:	ldr	r3, [pc, #708]	; 12338 <putc_unlocked@plt+0xd94>
   12070:	mov	r2, #0
   12074:	mov	r1, #14
   12078:	str	r2, [r3]
   1207c:	ldr	r3, [pc, #696]	; 1233c <putc_unlocked@plt+0xd98>
   12080:	ldrb	r2, [sp, #12]
   12084:	ldr	r0, [pc, #692]	; 12340 <putc_unlocked@plt+0xd9c>
   12088:	strb	r2, [r3]
   1208c:	mov	r2, #4
   12090:	strb	r2, [r3, #1]
   12094:	ldr	r3, [sp, #20]
   12098:	ldr	r2, [pc, #668]	; 1233c <putc_unlocked@plt+0xd98>
   1209c:	rev16	r3, r3
   120a0:	uxth	r3, r3
   120a4:	strb	r3, [r2, #2]
   120a8:	lsr	r3, r3, #8
   120ac:	strb	r3, [r2, #3]
   120b0:	ldr	r3, [sp, #20]
   120b4:	add	r3, r3, #1
   120b8:	str	r3, [sp, #20]
   120bc:	bl	1149c <__sigsetjmp@plt>
   120c0:	ldr	r5, [pc, #636]	; 12344 <putc_unlocked@plt+0xda0>
   120c4:	ldr	r9, [pc, #636]	; 12348 <putc_unlocked@plt+0xda4>
   120c8:	add	r8, r5, #520	; 0x208
   120cc:	ldr	r3, [r5, #648]	; 0x288
   120d0:	mov	r2, #4
   120d4:	str	r3, [sp, #4]
   120d8:	str	r8, [sp]
   120dc:	ldr	r3, [sp, #12]
   120e0:	add	r1, r5, #824	; 0x338
   120e4:	ldr	r0, [r5, #516]	; 0x204
   120e8:	bl	11460 <sendto@plt>
   120ec:	cmp	r0, #4
   120f0:	beq	12108 <putc_unlocked@plt+0xb64>
   120f4:	ldr	r1, [pc, #592]	; 1234c <putc_unlocked@plt+0xda8>
   120f8:	mov	r0, #3
   120fc:	bl	114b4 <syslog@plt>
   12100:	add	sp, sp, #24
   12104:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12108:	ldr	r3, [sp, #8]
   1210c:	ldr	r0, [r9]
   12110:	mov	r4, r5
   12114:	ldr	r1, [r3, #16]
   12118:	bl	128d0 <putc_unlocked@plt+0x132c>
   1211c:	ldrb	r6, [sp, #12]
   12120:	mov	r0, #5
   12124:	bl	112ec <alarm@plt>
   12128:	mov	r3, #0
   1212c:	mov	r2, #516	; 0x204
   12130:	ldr	r1, [sp, #16]
   12134:	ldr	r0, [r5, #516]	; 0x204
   12138:	bl	11568 <recv@plt>
   1213c:	mov	sl, r0
   12140:	mov	r0, #0
   12144:	bl	112ec <alarm@plt>
   12148:	cmp	sl, #0
   1214c:	ldrlt	r1, [pc, #508]	; 12350 <putc_unlocked@plt+0xdac>
   12150:	blt	120f8 <putc_unlocked@plt+0xb54>
   12154:	ldr	r2, [sp, #16]
   12158:	ldrb	r1, [r2, #1]
   1215c:	ldrb	r3, [r2]
   12160:	orr	r3, r3, r1, lsl #8
   12164:	rev16	r3, r3
   12168:	ldrb	r1, [r2, #3]
   1216c:	sxth	r7, r3
   12170:	uxth	r3, r3
   12174:	strb	r3, [r2]
   12178:	lsr	r3, r3, #8
   1217c:	strb	r3, [r2, #1]
   12180:	ldrb	r3, [r2, #2]
   12184:	cmp	r7, #5
   12188:	orr	r3, r3, r1, lsl #8
   1218c:	rev16	r3, r3
   12190:	uxth	r3, r3
   12194:	strb	r3, [r2, #2]
   12198:	lsr	r1, r3, #8
   1219c:	strb	r1, [r2, #3]
   121a0:	beq	12100 <putc_unlocked@plt+0xb5c>
   121a4:	cmp	r7, #3
   121a8:	bne	12120 <putc_unlocked@plt+0xb7c>
   121ac:	ldr	r2, [sp, #20]
   121b0:	cmp	r3, r2
   121b4:	beq	121e4 <putc_unlocked@plt+0xc40>
   121b8:	ldr	r0, [r5, #516]	; 0x204
   121bc:	bl	12a44 <putc_unlocked@plt+0x14a0>
   121c0:	ldr	r1, [sp, #16]
   121c4:	ldr	r3, [sp, #20]
   121c8:	ldrb	r2, [r1, #2]
   121cc:	ldrb	r1, [r1, #3]
   121d0:	sub	r3, r3, #1
   121d4:	orr	r2, r2, r1, lsl #8
   121d8:	cmp	r2, r3
   121dc:	bne	12120 <putc_unlocked@plt+0xb7c>
   121e0:	b	120cc <putc_unlocked@plt+0xb28>
   121e4:	ldr	r3, [sp, #8]
   121e8:	ldr	r5, [pc, #344]	; 12348 <putc_unlocked@plt+0xda4>
   121ec:	sub	sl, sl, #4
   121f0:	ldr	r3, [r3, #16]
   121f4:	mov	r2, sl
   121f8:	add	r1, sp, #16
   121fc:	ldr	r0, [r5]
   12200:	bl	129c4 <putc_unlocked@plt+0x1420>
   12204:	cmp	sl, r0
   12208:	beq	1222c <putc_unlocked@plt+0xc88>
   1220c:	cmp	r0, #0
   12210:	movge	r0, r7
   12214:	bge	12224 <putc_unlocked@plt+0xc80>
   12218:	bl	113f4 <__errno_location@plt>
   1221c:	ldr	r0, [r0]
   12220:	add	r0, r0, #100	; 0x64
   12224:	bl	11a84 <putc_unlocked@plt+0x4e0>
   12228:	b	12100 <putc_unlocked@plt+0xb5c>
   1222c:	cmp	sl, #512	; 0x200
   12230:	beq	1206c <putc_unlocked@plt+0xac8>
   12234:	ldr	r3, [sp, #8]
   12238:	ldr	r0, [r5]
   1223c:	ldr	r1, [r3, #16]
   12240:	bl	128d0 <putc_unlocked@plt+0x132c>
   12244:	ldr	r0, [r5]
   12248:	bl	11448 <fclose@plt>
   1224c:	ldr	r3, [pc, #240]	; 12344 <putc_unlocked@plt+0xda0>
   12250:	mov	r2, #0
   12254:	add	r5, r4, #824	; 0x338
   12258:	strb	r2, [r3, #824]	; 0x338
   1225c:	ldr	r2, [pc, #224]	; 12344 <putc_unlocked@plt+0xda0>
   12260:	orr	r3, r6, #4
   12264:	mov	r1, r5
   12268:	strb	r3, [r2, #825]	; 0x339
   1226c:	ldr	r3, [sp, #20]
   12270:	rev16	r3, r3
   12274:	uxth	r3, r3
   12278:	strb	r3, [r2, #826]	; 0x33a
   1227c:	orr	r6, r6, r3, lsr #8
   12280:	ldr	r3, [r4, #648]	; 0x288
   12284:	strb	r6, [r2, #827]	; 0x33b
   12288:	add	r6, r4, #520	; 0x208
   1228c:	mov	r2, #4
   12290:	str	r3, [sp, #4]
   12294:	str	r6, [sp]
   12298:	mov	r3, #0
   1229c:	ldr	r0, [r4, #516]	; 0x204
   122a0:	bl	11460 <sendto@plt>
   122a4:	ldr	r1, [pc, #168]	; 12354 <putc_unlocked@plt+0xdb0>
   122a8:	mov	r0, #14
   122ac:	bl	112bc <signal@plt>
   122b0:	mov	r0, #5
   122b4:	bl	112ec <alarm@plt>
   122b8:	mov	r3, #0
   122bc:	mov	r2, #516	; 0x204
   122c0:	mov	r1, r4
   122c4:	ldr	r0, [r4, #516]	; 0x204
   122c8:	bl	11568 <recv@plt>
   122cc:	mov	r7, r0
   122d0:	mov	r0, #0
   122d4:	bl	112ec <alarm@plt>
   122d8:	cmp	r7, #3
   122dc:	ble	12100 <putc_unlocked@plt+0xb5c>
   122e0:	ldr	r3, [sp, #16]
   122e4:	ldrb	r1, [r3, #1]
   122e8:	ldrb	r2, [r3]
   122ec:	orr	r2, r2, r1, lsl #8
   122f0:	cmp	r2, #3
   122f4:	bne	12100 <putc_unlocked@plt+0xb5c>
   122f8:	ldrb	r2, [r3, #2]
   122fc:	ldrb	r3, [r3, #3]
   12300:	ldr	r1, [sp, #20]
   12304:	orr	r3, r2, r3, lsl #8
   12308:	cmp	r3, r1
   1230c:	bne	12100 <putc_unlocked@plt+0xb5c>
   12310:	ldr	r3, [r4, #648]	; 0x288
   12314:	ldr	r0, [r4, #516]	; 0x204
   12318:	mov	r2, #4
   1231c:	str	r3, [sp, #4]
   12320:	str	r6, [sp]
   12324:	mov	r3, #0
   12328:	mov	r1, r5
   1232c:	bl	11460 <sendto@plt>
   12330:	b	12100 <putc_unlocked@plt+0xb5c>
   12334:			; <UNDEFINED> instruction: 0x00011db4
   12338:	andeq	sl, r2, r0, lsr lr
   1233c:	andeq	sl, r2, r4, lsr r6
   12340:	andeq	sl, r2, r8, lsr #25
   12344:	strdeq	sl, [r2], -ip
   12348:	andeq	sl, r2, r4, lsr lr
   1234c:	andeq	r8, r1, r2, ror r8
   12350:	andeq	r8, r1, r4, lsl #17
   12354:	andeq	r1, r1, r8, ror sl
   12358:	sub	r0, r0, #103	; 0x67
   1235c:	push	{r4, r5, r6, lr}
   12360:	mov	r4, r1
   12364:	cmp	r0, #14
   12368:	ldrls	pc, [pc, r0, lsl #2]
   1236c:	b	1241c <putc_unlocked@plt+0xe78>
   12370:	andeq	r2, r1, r0, asr #7
   12374:	andeq	r2, r1, ip, lsl r4
   12378:	andeq	r2, r1, ip, lsl r4
   1237c:	andeq	r2, r1, ip, lsl r4
   12380:	andeq	r2, r1, ip, lsl r4
   12384:	andeq	r2, r1, ip, lsr #7
   12388:	andeq	r2, r1, ip, lsl r4
   1238c:	ldrdeq	r2, [r1], -ip
   12390:	andeq	r2, r1, ip, lsl r4
   12394:	andeq	r2, r1, ip, lsl r4
   12398:	andeq	r2, r1, ip, lsl r4
   1239c:	andeq	r2, r1, ip, lsl r4
   123a0:	andeq	r2, r1, ip, ror #7
   123a4:	andeq	r2, r1, ip, lsl r4
   123a8:	andeq	r2, r1, r0, lsl #8
   123ac:	ldr	r3, [pc, #112]	; 12424 <putc_unlocked@plt+0xe80>
   123b0:	mov	r2, #1
   123b4:	str	r2, [r3, #1340]	; 0x53c
   123b8:	mov	r0, #0
   123bc:	pop	{r4, r5, r6, pc}
   123c0:	ldr	r5, [pc, #92]	; 12424 <putc_unlocked@plt+0xe80>
   123c4:	ldr	r0, [r5, #1344]	; 0x540
   123c8:	bl	13a8c <argp_parse@@Base+0xa9c>
   123cc:	mov	r0, r4
   123d0:	bl	144b0 <argp_parse@@Base+0x14c0>
   123d4:	str	r0, [r5, #1344]	; 0x540
   123d8:	b	123b8 <putc_unlocked@plt+0xe14>
   123dc:	ldr	r3, [pc, #64]	; 12424 <putc_unlocked@plt+0xe80>
   123e0:	mov	r2, #1
   123e4:	str	r2, [r3, #1348]	; 0x544
   123e8:	b	123b8 <putc_unlocked@plt+0xe14>
   123ec:	mov	r0, r1
   123f0:	bl	144b0 <argp_parse@@Base+0x14c0>
   123f4:	ldr	r3, [pc, #40]	; 12424 <putc_unlocked@plt+0xe80>
   123f8:	str	r0, [r3, #1352]	; 0x548
   123fc:	b	123b8 <putc_unlocked@plt+0xe14>
   12400:	ldr	r5, [pc, #28]	; 12424 <putc_unlocked@plt+0xe80>
   12404:	ldr	r0, [r5, #1356]	; 0x54c
   12408:	bl	13a8c <argp_parse@@Base+0xa9c>
   1240c:	mov	r0, r4
   12410:	bl	144b0 <argp_parse@@Base+0x14c0>
   12414:	str	r0, [r5, #1356]	; 0x54c
   12418:	b	123b8 <putc_unlocked@plt+0xe14>
   1241c:	mov	r0, #7
   12420:	pop	{r4, r5, r6, pc}
   12424:	strdeq	sl, [r2], -ip
   12428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1242c:	mov	r2, #1
   12430:	ldr	r7, [pc, #588]	; 12684 <putc_unlocked@plt+0x10e0>
   12434:	sub	sp, sp, #28
   12438:	mov	r5, r0
   1243c:	add	r1, r7, r1
   12440:	mov	ip, #0
   12444:	add	r3, r0, #2
   12448:	str	r3, [sp, #20]
   1244c:	cmp	r3, r1
   12450:	ldrb	r0, [r3]
   12454:	bcc	12470 <putc_unlocked@plt+0xecc>
   12458:	cmp	r0, #0
   1245c:	beq	12480 <putc_unlocked@plt+0xedc>
   12460:	mov	r0, #4
   12464:	bl	11a84 <putc_unlocked@plt+0x4e0>
   12468:	mov	r0, #1
   1246c:	b	12560 <putc_unlocked@plt+0xfbc>
   12470:	cmp	r0, #0
   12474:	beq	12480 <putc_unlocked@plt+0xedc>
   12478:	add	r3, r3, #1
   1247c:	b	1244c <putc_unlocked@plt+0xea8>
   12480:	cmp	r2, #0
   12484:	bne	124c0 <putc_unlocked@plt+0xf1c>
   12488:	mov	r8, r6
   1248c:	ldrb	r4, [r8]
   12490:	cmp	r4, #0
   12494:	bne	124cc <putc_unlocked@plt+0xf28>
   12498:	ldr	r4, [pc, #488]	; 12688 <putc_unlocked@plt+0x10e4>
   1249c:	ldr	r0, [r4]
   124a0:	cmp	r0, #0
   124a4:	beq	12460 <putc_unlocked@plt+0xebc>
   124a8:	mov	r1, r6
   124ac:	bl	11244 <strcmp@plt>
   124b0:	cmp	r0, #0
   124b4:	beq	125b8 <putc_unlocked@plt+0x1014>
   124b8:	add	r4, r4, #20
   124bc:	b	1249c <putc_unlocked@plt+0xef8>
   124c0:	add	r6, r3, #1
   124c4:	mov	r2, ip
   124c8:	b	12478 <putc_unlocked@plt+0xed4>
   124cc:	bl	113b8 <__ctype_b_loc@plt>
   124d0:	sxth	r4, r4
   124d4:	lsl	r3, r4, #1
   124d8:	ldr	r2, [r0]
   124dc:	ldrh	r3, [r2, r3]
   124e0:	tst	r3, #256	; 0x100
   124e4:	beq	124f8 <putc_unlocked@plt+0xf54>
   124e8:	bl	11394 <__ctype_tolower_loc@plt>
   124ec:	ldr	r3, [r0]
   124f0:	ldr	r3, [r3, r4, lsl #2]
   124f4:	strb	r3, [r8]
   124f8:	add	r8, r8, #1
   124fc:	b	1248c <putc_unlocked@plt+0xee8>
   12500:	cmp	r6, r2
   12504:	bne	12564 <putc_unlocked@plt+0xfc0>
   12508:	ldr	r3, [r3, #4]
   1250c:	str	r3, [sp, #8]
   12510:	stm	sp, {r9, fp}
   12514:	mov	r3, r8
   12518:	mov	r2, sl
   1251c:	ldr	r1, [pc, #360]	; 1268c <putc_unlocked@plt+0x10e8>
   12520:	mov	r0, #6
   12524:	bl	114b4 <syslog@plt>
   12528:	cmp	r6, #0
   1252c:	beq	12594 <putc_unlocked@plt+0xff0>
   12530:	ldr	r3, [r7, #1348]	; 0x544
   12534:	cmp	r3, #0
   12538:	beq	1258c <putc_unlocked@plt+0xfe8>
   1253c:	ldr	r3, [sp, #20]
   12540:	ldrb	r3, [r3]
   12544:	subs	r3, r3, #47	; 0x2f
   12548:	movne	r3, #1
   1254c:	cmp	r6, #1
   12550:	movne	r3, #0
   12554:	cmp	r3, #0
   12558:	beq	1258c <putc_unlocked@plt+0xfe8>
   1255c:	mov	r0, #0
   12560:	bl	113c4 <exit@plt>
   12564:	add	r3, r3, #8
   12568:	ldr	r2, [r3]
   1256c:	cmp	r2, #0
   12570:	bge	12500 <putc_unlocked@plt+0xf5c>
   12574:	mov	r2, r6
   12578:	ldr	r1, [pc, #272]	; 12690 <putc_unlocked@plt+0x10ec>
   1257c:	ldr	r0, [pc, #272]	; 12694 <putc_unlocked@plt+0x10f0>
   12580:	bl	114cc <sprintf@plt>
   12584:	ldr	r3, [pc, #264]	; 12694 <putc_unlocked@plt+0x10f0>
   12588:	b	1250c <putc_unlocked@plt+0xf68>
   1258c:	mov	r0, r6
   12590:	b	12464 <putc_unlocked@plt+0xec0>
   12594:	ldrb	r2, [r5, #1]
   12598:	ldrb	r3, [r5]
   1259c:	mov	r0, r4
   125a0:	orr	r3, r3, r2, lsl #8
   125a4:	cmp	r3, #2
   125a8:	ldreq	r3, [r4, #12]
   125ac:	ldrne	r3, [r4, #8]
   125b0:	blx	r3
   125b4:	b	1255c <putc_unlocked@plt+0xfb8>
   125b8:	ldrb	r3, [r5, #1]
   125bc:	ldrb	r1, [r5]
   125c0:	add	r0, sp, #20
   125c4:	orr	r1, r1, r3, lsl #8
   125c8:	ldr	r3, [r4, #4]
   125cc:	sxth	r1, r1
   125d0:	blx	r3
   125d4:	ldr	r3, [r7, #1340]	; 0x53c
   125d8:	cmp	r3, #0
   125dc:	mov	r6, r0
   125e0:	beq	12528 <putc_unlocked@plt+0xf84>
   125e4:	ldr	r3, [pc, #172]	; 12698 <putc_unlocked@plt+0x10f4>
   125e8:	ldrh	r3, [r3]
   125ec:	cmp	r3, #2
   125f0:	ldreq	r8, [pc, #164]	; 1269c <putc_unlocked@plt+0x10f8>
   125f4:	beq	12608 <putc_unlocked@plt+0x1064>
   125f8:	ldr	r2, [pc, #160]	; 126a0 <putc_unlocked@plt+0x10fc>
   125fc:	cmp	r3, #10
   12600:	ldr	r8, [pc, #156]	; 126a4 <putc_unlocked@plt+0x1100>
   12604:	movne	r8, r2
   12608:	ldr	r2, [pc, #152]	; 126a8 <putc_unlocked@plt+0x1104>
   1260c:	mov	r3, #0
   12610:	str	r3, [sp, #8]
   12614:	str	r3, [sp, #4]
   12618:	str	r3, [sp]
   1261c:	ldr	r1, [r7, #648]	; 0x288
   12620:	ldr	r3, [pc, #132]	; 126ac <putc_unlocked@plt+0x1108>
   12624:	sub	r0, r2, #840	; 0x348
   12628:	bl	11478 <getnameinfo@plt>
   1262c:	cmp	r0, #0
   12630:	ldreq	sl, [pc, #112]	; 126a8 <putc_unlocked@plt+0x1104>
   12634:	beq	12650 <putc_unlocked@plt+0x10ac>
   12638:	bl	11298 <gai_strerror@plt>
   1263c:	ldr	r1, [pc, #108]	; 126b0 <putc_unlocked@plt+0x110c>
   12640:	ldr	sl, [pc, #108]	; 126b4 <putc_unlocked@plt+0x1110>
   12644:	mov	r2, r0
   12648:	mov	r0, #3
   1264c:	bl	114b4 <syslog@plt>
   12650:	ldrb	r3, [r5, #1]
   12654:	ldrb	r9, [r5]
   12658:	ldr	r2, [pc, #88]	; 126b8 <putc_unlocked@plt+0x1114>
   1265c:	ldr	fp, [sp, #20]
   12660:	orr	r3, r9, r3, lsl #8
   12664:	cmp	r3, #2
   12668:	ldr	r9, [pc, #76]	; 126bc <putc_unlocked@plt+0x1118>
   1266c:	movne	r9, r2
   12670:	cmp	r6, #0
   12674:	ldrne	r3, [pc, #68]	; 126c0 <putc_unlocked@plt+0x111c>
   12678:	bne	12568 <putc_unlocked@plt+0xfc4>
   1267c:	ldr	r3, [pc, #64]	; 126c4 <putc_unlocked@plt+0x1120>
   12680:	b	1250c <putc_unlocked@plt+0xf68>
   12684:	strdeq	sl, [r2], -ip
   12688:	muleq	r2, ip, r1
   1268c:	ldrdeq	r8, [r1], -r4
   12690:	andeq	r8, r1, fp, asr #17
   12694:	andeq	sl, r2, sp, asr #24
   12698:	andeq	sl, r2, r4, lsl #10
   1269c:	muleq	r1, r5, r8
   126a0:	andeq	r8, r1, r1, lsl sp
   126a4:	muleq	r1, sl, r8
   126a8:	andeq	sl, r2, ip, asr #16
   126ac:	andeq	r0, r0, r1, lsl #8
   126b0:			; <UNDEFINED> instruction: 0x000188ba
   126b4:	muleq	r1, pc, r8	; <UNPREDICTABLE>
   126b8:	andeq	r8, r1, sp, lsr #17
   126bc:	andeq	r8, r1, r7, lsr #17
   126c0:	andeq	sl, r2, r4, asr r1
   126c4:			; <UNDEFINED> instruction: 0x000188b2
   126c8:	ldr	r1, [pc, #52]	; 12704 <putc_unlocked@plt+0x1160>
   126cc:	mvn	r0, #0
   126d0:	ldr	r3, [pc, #48]	; 12708 <putc_unlocked@plt+0x1164>
   126d4:	str	r0, [r1]
   126d8:	ldr	r0, [pc, #44]	; 1270c <putc_unlocked@plt+0x1168>
   126dc:	mvn	r1, #2
   126e0:	mov	r2, #0
   126e4:	str	r1, [r0]
   126e8:	mvn	r1, #1
   126ec:	str	r1, [r0, #520]	; 0x208
   126f0:	str	r2, [r3]
   126f4:	str	r2, [r3, #4]
   126f8:	str	r2, [r3, #8]
   126fc:	add	r0, r0, #4
   12700:	bx	lr
   12704:	andeq	sl, r2, r4, lsr #5
   12708:	andeq	sl, r2, r4, ror #24
   1270c:	andeq	sl, r2, r8, lsr lr
   12710:	ldr	r1, [pc, #56]	; 12750 <putc_unlocked@plt+0x11ac>
   12714:	ldr	r3, [pc, #56]	; 12754 <putc_unlocked@plt+0x11b0>
   12718:	mvn	r0, #0
   1271c:	str	r0, [r1]
   12720:	ldr	r0, [pc, #48]	; 12758 <putc_unlocked@plt+0x11b4>
   12724:	mov	r2, #0
   12728:	str	r2, [r3]
   1272c:	str	r2, [r3, #4]
   12730:	mvn	r2, #1
   12734:	str	r2, [r0, #520]	; 0x208
   12738:	mvn	r1, #2
   1273c:	mov	r2, #1
   12740:	str	r1, [r0]
   12744:	str	r2, [r3, #8]
   12748:	add	r0, r0, #4
   1274c:	bx	lr
   12750:	andeq	sl, r2, r4, lsr #5
   12754:	andeq	sl, r2, r4, ror #24
   12758:	andeq	sl, r2, r8, lsr lr
   1275c:	ldr	r3, [pc, #240]	; 12854 <putc_unlocked@plt+0x12b0>
   12760:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12764:	mov	r5, #520	; 0x208
   12768:	ldr	r7, [r3, #8]
   1276c:	ldr	r4, [pc, #228]	; 12858 <putc_unlocked@plt+0x12b4>
   12770:	mul	r5, r5, r7
   12774:	ldr	r2, [r4, r5]
   12778:	cmn	r2, #2
   1277c:	bne	127b8 <putc_unlocked@plt+0x1214>
   12780:	clz	r2, r7
   12784:	lsr	r2, r2, #5
   12788:	mov	r8, r3
   1278c:	str	r2, [r3, #8]
   12790:	add	r3, r5, #4
   12794:	add	r3, r3, r4
   12798:	cmp	r1, #0
   1279c:	add	r6, r3, #4
   127a0:	bne	127c0 <putc_unlocked@plt+0x121c>
   127a4:	bl	11430 <fileno@plt>
   127a8:	mov	r2, #512	; 0x200
   127ac:	mov	r1, r6
   127b0:	bl	1125c <read@plt>
   127b4:	str	r0, [r4, r5]
   127b8:	add	sp, sp, #12
   127bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127c0:	ldr	fp, [pc, #148]	; 1285c <putc_unlocked@plt+0x12b8>
   127c4:	mov	r9, r4
   127c8:	add	r5, r3, #516	; 0x204
   127cc:	mov	sl, r0
   127d0:	mov	r4, r6
   127d4:	mov	r3, #1
   127d8:	mov	r2, #0
   127dc:	ldr	r1, [r8]
   127e0:	cmp	r1, #0
   127e4:	beq	1281c <putc_unlocked@plt+0x1278>
   127e8:	ldr	r0, [fp]
   127ec:	str	r2, [r8]
   127f0:	cmp	r0, #10
   127f4:	moveq	r0, #10
   127f8:	movne	r0, #0
   127fc:	strb	r0, [r4], #1
   12800:	cmp	r4, r5
   12804:	bne	127dc <putc_unlocked@plt+0x1238>
   12808:	mov	r3, #520	; 0x208
   1280c:	sub	r4, r4, r6
   12810:	mul	r7, r3, r7
   12814:	str	r4, [r9, r7]
   12818:	b	127b8 <putc_unlocked@plt+0x1214>
   1281c:	mov	r0, sl
   12820:	str	r2, [sp, #4]
   12824:	str	r3, [sp]
   12828:	bl	1155c <getc@plt>
   1282c:	cmn	r0, #1
   12830:	beq	12808 <putc_unlocked@plt+0x1264>
   12834:	ldr	r3, [sp]
   12838:	cmp	r0, #13
   1283c:	cmpne	r0, #10
   12840:	streq	r0, [fp]
   12844:	ldr	r2, [sp, #4]
   12848:	streq	r3, [r8]
   1284c:	moveq	r0, #13
   12850:	b	127fc <putc_unlocked@plt+0x1258>
   12854:	andeq	sl, r2, r4, ror #24
   12858:	andeq	sl, r2, r8, lsr lr
   1285c:	andeq	sl, r2, r4, lsr #5
   12860:	push	{r4, r5, r6, r7, r8, lr}
   12864:	mov	r3, #520	; 0x208
   12868:	ldr	lr, [pc, #88]	; 128c8 <putc_unlocked@plt+0x1324>
   1286c:	mov	r7, r1
   12870:	ldr	ip, [pc, #84]	; 128cc <putc_unlocked@plt+0x1328>
   12874:	ldr	r5, [lr, #4]
   12878:	mvn	r4, #1
   1287c:	mov	r6, ip
   12880:	mul	r1, r3, r5
   12884:	clz	r5, r5
   12888:	lsr	r5, r5, #5
   1288c:	str	r5, [lr, #4]
   12890:	str	r4, [ip, r1]
   12894:	mul	r1, r3, r5
   12898:	ldr	r1, [ip, r1]
   1289c:	cmp	r1, r4
   128a0:	mov	r4, r3
   128a4:	bne	128b0 <putc_unlocked@plt+0x130c>
   128a8:	mov	r1, r2
   128ac:	bl	1275c <putc_unlocked@plt+0x11b8>
   128b0:	mul	r3, r4, r5
   128b4:	add	r2, r3, #4
   128b8:	add	r2, r6, r2
   128bc:	str	r2, [r7]
   128c0:	ldr	r0, [r6, r3]
   128c4:	pop	{r4, r5, r6, r7, r8, pc}
   128c8:	andeq	sl, r2, r4, ror #24
   128cc:	andeq	sl, r2, r8, lsr lr
   128d0:	ldr	ip, [pc, #224]	; 129b8 <putc_unlocked@plt+0x1414>
   128d4:	mov	r2, #520	; 0x208
   128d8:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   128dc:	ldr	r3, [ip, #8]
   128e0:	ldr	r4, [pc, #212]	; 129bc <putc_unlocked@plt+0x1418>
   128e4:	mul	r2, r2, r3
   128e8:	ldr	r5, [r4, r2]
   128ec:	cmn	r5, #1
   128f0:	blt	129a8 <putc_unlocked@plt+0x1404>
   128f4:	mvn	lr, #1
   128f8:	str	lr, [r4, r2]
   128fc:	clz	r3, r3
   12900:	add	r4, r4, r2
   12904:	lsr	r3, r3, #5
   12908:	cmp	r5, #0
   1290c:	str	r3, [ip, #8]
   12910:	add	r4, r4, #8
   12914:	ble	129b0 <putc_unlocked@plt+0x140c>
   12918:	cmp	r1, #0
   1291c:	beq	12944 <putc_unlocked@plt+0x13a0>
   12920:	ldr	r8, [pc, #152]	; 129c0 <putc_unlocked@plt+0x141c>
   12924:	mov	r6, r0
   12928:	add	r9, r4, r5
   1292c:	mov	sl, #1
   12930:	cmp	r4, r9
   12934:	bne	1295c <putc_unlocked@plt+0x13b8>
   12938:	mov	r0, r5
   1293c:	add	sp, sp, #8
   12940:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12944:	bl	11430 <fileno@plt>
   12948:	mov	r2, r5
   1294c:	mov	r1, r4
   12950:	add	sp, sp, #8
   12954:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12958:	b	11424 <write@plt>
   1295c:	ldr	r3, [r8]
   12960:	ldrb	r7, [r4], #1
   12964:	cmp	r3, #13
   12968:	bne	12988 <putc_unlocked@plt+0x13e4>
   1296c:	cmp	r7, #10
   12970:	bne	12998 <putc_unlocked@plt+0x13f4>
   12974:	str	sl, [sp]
   12978:	mvn	r2, #0
   1297c:	mvn	r3, #0
   12980:	mov	r0, r6
   12984:	bl	11454 <fseeko64@plt>
   12988:	mov	r1, r6
   1298c:	mov	r0, r7
   12990:	bl	114e4 <putc@plt>
   12994:	b	129a0 <putc_unlocked@plt+0x13fc>
   12998:	cmp	r7, #0
   1299c:	bne	12988 <putc_unlocked@plt+0x13e4>
   129a0:	str	r7, [r8]
   129a4:	b	12930 <putc_unlocked@plt+0x138c>
   129a8:	mov	r5, #0
   129ac:	b	12938 <putc_unlocked@plt+0x1394>
   129b0:	mvn	r5, #0
   129b4:	b	12938 <putc_unlocked@plt+0x1394>
   129b8:	andeq	sl, r2, r4, ror #24
   129bc:	andeq	sl, r2, r8, lsr lr
   129c0:	andeq	sl, r2, r4, lsr #5
   129c4:	push	{r4, r5, r6, r7, r8, lr}
   129c8:	mov	r6, r2
   129cc:	ldr	r2, [pc, #104]	; 12a3c <putc_unlocked@plt+0x1498>
   129d0:	mov	r4, #520	; 0x208
   129d4:	mov	r5, r1
   129d8:	ldr	lr, [r2, #4]
   129dc:	ldr	ip, [pc, #92]	; 12a40 <putc_unlocked@plt+0x149c>
   129e0:	mov	r7, r2
   129e4:	mul	r1, r4, lr
   129e8:	clz	lr, lr
   129ec:	lsr	lr, lr, #5
   129f0:	str	lr, [r2, #4]
   129f4:	mul	lr, r4, lr
   129f8:	str	r6, [ip, r1]
   129fc:	mov	r4, ip
   12a00:	ldr	r1, [ip, lr]
   12a04:	cmn	r1, #2
   12a08:	beq	12a14 <putc_unlocked@plt+0x1470>
   12a0c:	mov	r1, r3
   12a10:	bl	128d0 <putc_unlocked@plt+0x132c>
   12a14:	ldr	r3, [r7, #4]
   12a18:	mov	ip, #520	; 0x208
   12a1c:	mov	r0, r6
   12a20:	mul	ip, ip, r3
   12a24:	mvn	r3, #2
   12a28:	str	r3, [r4, ip]
   12a2c:	add	ip, ip, #4
   12a30:	add	ip, r4, ip
   12a34:	str	ip, [r5]
   12a38:	pop	{r4, r5, r6, r7, r8, pc}
   12a3c:	andeq	sl, r2, r4, ror #24
   12a40:	andeq	sl, r2, r8, lsr lr
   12a44:	push	{r4, r5, r6, r7, lr}
   12a48:	mov	r5, r0
   12a4c:	ldr	r7, [pc, #96]	; 12ab4 <putc_unlocked@plt+0x1510>
   12a50:	sub	sp, sp, #668	; 0x29c
   12a54:	mov	r4, #0
   12a58:	mov	r6, #128	; 0x80
   12a5c:	add	r2, sp, #12
   12a60:	mov	r1, r7
   12a64:	mov	r0, r5
   12a68:	bl	13b80 <argp_parse@@Base+0xb90>
   12a6c:	ldr	r3, [sp, #12]
   12a70:	cmp	r3, #0
   12a74:	beq	12aa8 <putc_unlocked@plt+0x1504>
   12a78:	add	r3, sp, #16
   12a7c:	str	r3, [sp, #4]
   12a80:	add	r3, sp, #20
   12a84:	str	r3, [sp]
   12a88:	mov	r2, #516	; 0x204
   12a8c:	mov	r3, #0
   12a90:	add	r1, sp, #148	; 0x94
   12a94:	mov	r0, r5
   12a98:	add	r4, r4, #1
   12a9c:	str	r6, [sp, #16]
   12aa0:	bl	112e0 <recvfrom@plt>
   12aa4:	b	12a5c <putc_unlocked@plt+0x14b8>
   12aa8:	mov	r0, r4
   12aac:	add	sp, sp, #668	; 0x29c
   12ab0:	pop	{r4, r5, r6, r7, pc}
   12ab4:	andeq	r5, r0, fp, lsl r4
   12ab8:	push	{r4, r5, r6, lr}
   12abc:	ldr	r6, [r0]
   12ac0:	cmp	r6, #0
   12ac4:	beq	12b10 <putc_unlocked@plt+0x156c>
   12ac8:	mov	ip, r2
   12acc:	ldr	r2, [r0, #32]
   12ad0:	mov	r5, r1
   12ad4:	str	r2, [r1, #36]	; 0x24
   12ad8:	ldr	r2, [r0, #24]
   12adc:	mov	r4, r0
   12ae0:	str	r2, [r1, #28]
   12ae4:	ldr	r2, [r0, #28]
   12ae8:	str	r2, [r1, #32]
   12aec:	ldr	r2, [r0, #12]
   12af0:	mov	r0, ip
   12af4:	str	r2, [r1, #20]
   12af8:	mov	r2, r1
   12afc:	mov	r1, r3
   12b00:	blx	r6
   12b04:	ldr	r3, [r5, #36]	; 0x24
   12b08:	str	r3, [r4, #32]
   12b0c:	pop	{r4, r5, r6, pc}
   12b10:	mov	r0, #7
   12b14:	pop	{r4, r5, r6, pc}
   12b18:	ldr	r3, [r0]
   12b1c:	push	{r4, r5, r6, lr}
   12b20:	cmp	r3, #0
   12b24:	ldr	r4, [r0, #16]
   12b28:	bne	12b38 <putc_unlocked@plt+0x1594>
   12b2c:	ldr	r2, [r0, #4]
   12b30:	cmp	r2, #0
   12b34:	beq	12ba0 <putc_unlocked@plt+0x15fc>
   12b38:	ldr	r2, [r1, #8]
   12b3c:	cmp	r3, #0
   12b40:	add	r2, r2, #1
   12b44:	str	r2, [r1, #8]
   12b48:	beq	12ba0 <putc_unlocked@plt+0x15fc>
   12b4c:	mov	r2, #0
   12b50:	add	r3, r3, #24
   12b54:	ldr	r0, [r3, #-20]	; 0xffffffec
   12b58:	cmp	r0, #0
   12b5c:	bne	12bdc <putc_unlocked@plt+0x1638>
   12b60:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12b64:	cmp	r0, #0
   12b68:	bne	12bdc <putc_unlocked@plt+0x1638>
   12b6c:	ldr	r0, [r3, #-8]
   12b70:	cmp	r0, #0
   12b74:	bne	12bdc <putc_unlocked@plt+0x1638>
   12b78:	ldr	r0, [r3, #-4]
   12b7c:	cmp	r0, #0
   12b80:	bne	12bdc <putc_unlocked@plt+0x1638>
   12b84:	ldr	r3, [r1]
   12b88:	add	r0, r2, r2, lsl #1
   12b8c:	add	r3, r3, r0
   12b90:	str	r3, [r1]
   12b94:	ldr	r3, [r1, #4]
   12b98:	add	r2, r3, r2
   12b9c:	str	r2, [r1, #4]
   12ba0:	cmp	r4, #0
   12ba4:	movne	r5, r1
   12ba8:	addne	r4, r4, #16
   12bac:	bne	12bc8 <putc_unlocked@plt+0x1624>
   12bb0:	pop	{r4, r5, r6, pc}
   12bb4:	mov	r1, r5
   12bb8:	bl	12b18 <putc_unlocked@plt+0x1574>
   12bbc:	ldr	r3, [r5, #12]
   12bc0:	add	r3, r3, #1
   12bc4:	str	r3, [r5, #12]
   12bc8:	add	r4, r4, #16
   12bcc:	ldr	r0, [r4, #-32]	; 0xffffffe0
   12bd0:	cmp	r0, #0
   12bd4:	bne	12bb4 <putc_unlocked@plt+0x1610>
   12bd8:	pop	{r4, r5, r6, pc}
   12bdc:	add	r2, r2, #1
   12be0:	b	12b50 <putc_unlocked@plt+0x15ac>
   12be4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12be8:	sub	sp, sp, #36	; 0x24
   12bec:	ldr	r6, [r0]
   12bf0:	mov	r9, r0
   12bf4:	cmp	r6, #0
   12bf8:	str	r1, [sp, #16]
   12bfc:	str	r2, [sp, #20]
   12c00:	mov	r4, r3
   12c04:	ldr	r5, [sp, #72]	; 0x48
   12c08:	ldr	sl, [r0, #16]
   12c0c:	addne	r7, r6, #24
   12c10:	movne	fp, #0
   12c14:	bne	12d90 <putc_unlocked@plt+0x17ec>
   12c18:	ldr	r6, [r0, #4]
   12c1c:	cmp	r6, #0
   12c20:	beq	12c84 <putc_unlocked@plt+0x16e0>
   12c24:	ldr	r3, [r9, #4]
   12c28:	ldr	r2, [sp, #16]
   12c2c:	stm	r4, {r3, r9}
   12c30:	ldr	r3, [r5, #4]
   12c34:	str	r2, [r4, #16]
   12c38:	str	r3, [r4, #8]
   12c3c:	ldr	r2, [sp, #20]
   12c40:	mov	r3, #0
   12c44:	cmp	sl, r3
   12c48:	str	r3, [r4, #12]
   12c4c:	str	r2, [r4, #20]
   12c50:	str	r3, [r4, #24]
   12c54:	str	r3, [r4, #32]
   12c58:	str	r3, [r4, #28]
   12c5c:	beq	12c7c <putc_unlocked@plt+0x16d8>
   12c60:	ldr	r2, [sl, r3, lsl #4]
   12c64:	cmp	r2, #0
   12c68:	bne	12dec <putc_unlocked@plt+0x1848>
   12c6c:	ldr	r2, [r5, #12]
   12c70:	add	r3, r2, r3, lsl #2
   12c74:	str	r2, [r4, #28]
   12c78:	str	r3, [r5, #12]
   12c7c:	mov	r6, r4
   12c80:	add	r4, r4, #36	; 0x24
   12c84:	cmp	sl, #0
   12c88:	movne	r2, #0
   12c8c:	bne	12e10 <putc_unlocked@plt+0x186c>
   12c90:	mov	r0, r4
   12c94:	add	sp, sp, #36	; 0x24
   12c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c9c:	tst	r2, #8
   12ca0:	bne	12cc8 <putc_unlocked@plt+0x1724>
   12ca4:	sub	r3, r8, #1
   12ca8:	cmp	r3, #254	; 0xfe
   12cac:	bhi	12cc8 <putc_unlocked@plt+0x1724>
   12cb0:	bl	113b8 <__ctype_b_loc@plt>
   12cb4:	lsl	r3, r8, #1
   12cb8:	ldr	r2, [r0]
   12cbc:	ldrh	r3, [r2, r3]
   12cc0:	tst	r3, #16384	; 0x4000
   12cc4:	bne	12e20 <putc_unlocked@plt+0x187c>
   12cc8:	ldr	r3, [r7, #-24]	; 0xffffffe8
   12ccc:	cmp	r3, #0
   12cd0:	beq	12d8c <putc_unlocked@plt+0x17e8>
   12cd4:	ldr	r2, [r5]
   12cd8:	str	r2, [sp, #12]
   12cdc:	ldr	r2, [r2, #8]
   12ce0:	mov	r8, r2
   12ce4:	ldr	r0, [r8]
   12ce8:	cmp	r0, #0
   12cec:	beq	12d1c <putc_unlocked@plt+0x1778>
   12cf0:	mov	r1, r3
   12cf4:	str	r2, [sp, #28]
   12cf8:	str	r3, [sp, #24]
   12cfc:	bl	11244 <strcmp@plt>
   12d00:	ldr	r3, [sp, #24]
   12d04:	ldr	r2, [sp, #28]
   12d08:	cmp	r0, #0
   12d0c:	bne	12de4 <putc_unlocked@plt+0x1840>
   12d10:	sub	r8, r8, r2
   12d14:	cmn	r8, #15
   12d18:	bge	12d8c <putc_unlocked@plt+0x17e8>
   12d1c:	ldr	r1, [r5, #8]
   12d20:	str	r3, [r1]
   12d24:	ldr	r3, [r6, #8]
   12d28:	cmp	r3, #0
   12d2c:	beq	12d44 <putc_unlocked@plt+0x17a0>
   12d30:	ldr	r3, [r6, #12]
   12d34:	tst	r3, #1
   12d38:	movne	r3, #2
   12d3c:	moveq	r3, #1
   12d40:	str	r3, [sp, #8]
   12d44:	ldr	r2, [sp, #12]
   12d48:	ldr	r3, [sp, #8]
   12d4c:	ldr	r0, [pc, #292]	; 12e78 <putc_unlocked@plt+0x18d4>
   12d50:	ldr	r2, [r2, #48]	; 0x30
   12d54:	stmib	r1, {r3, fp}
   12d58:	sub	r2, r4, r2
   12d5c:	ldr	r3, [r7, #-20]	; 0xffffffec
   12d60:	asr	r2, r2, #2
   12d64:	cmp	r3, #0
   12d68:	mul	r2, r0, r2
   12d6c:	ldreq	r3, [r6, #4]
   12d70:	add	r2, r2, #1
   12d74:	bic	r3, r3, #-16777216	; 0xff000000
   12d78:	add	r3, r3, r2, lsl #24
   12d7c:	str	r3, [r1, #12]
   12d80:	add	r3, r1, #16
   12d84:	str	r3, [r5, #8]
   12d88:	str	fp, [r1, #16]
   12d8c:	add	r7, r7, #24
   12d90:	ldr	r8, [r7, #-20]	; 0xffffffec
   12d94:	sub	r3, r7, #24
   12d98:	cmp	r8, #0
   12d9c:	bne	12dc4 <putc_unlocked@plt+0x1820>
   12da0:	ldr	r2, [r7, #-24]	; 0xffffffe8
   12da4:	cmp	r2, #0
   12da8:	bne	12dc4 <putc_unlocked@plt+0x1820>
   12dac:	ldr	r2, [r7, #-8]
   12db0:	cmp	r2, #0
   12db4:	bne	12dc4 <putc_unlocked@plt+0x1820>
   12db8:	ldr	r2, [r7, #-4]
   12dbc:	cmp	r2, #0
   12dc0:	beq	12c24 <putc_unlocked@plt+0x1680>
   12dc4:	ldr	r2, [r7, #-12]
   12dc8:	tst	r2, #4
   12dcc:	moveq	r6, r3
   12dd0:	ldr	r3, [r6, #12]
   12dd4:	ands	r3, r3, #8
   12dd8:	str	r3, [sp, #8]
   12ddc:	beq	12c9c <putc_unlocked@plt+0x16f8>
   12de0:	b	12d8c <putc_unlocked@plt+0x17e8>
   12de4:	add	r8, r8, #16
   12de8:	b	12ce4 <putc_unlocked@plt+0x1740>
   12dec:	add	r3, r3, #1
   12df0:	b	12c60 <putc_unlocked@plt+0x16bc>
   12df4:	mov	r3, r4
   12df8:	str	r5, [sp]
   12dfc:	mov	r1, r6
   12e00:	add	r7, r2, #1
   12e04:	bl	12be4 <putc_unlocked@plt+0x1640>
   12e08:	mov	r2, r7
   12e0c:	mov	r4, r0
   12e10:	ldr	r0, [sl, r2, lsl #4]
   12e14:	cmp	r0, #0
   12e18:	bne	12df4 <putc_unlocked@plt+0x1850>
   12e1c:	b	12c90 <putc_unlocked@plt+0x16ec>
   12e20:	ldr	r3, [r5, #4]
   12e24:	add	r2, r3, #1
   12e28:	str	r2, [r5, #4]
   12e2c:	strb	r8, [r3]
   12e30:	ldr	r3, [r6, #8]
   12e34:	cmp	r3, #0
   12e38:	beq	12e6c <putc_unlocked@plt+0x18c8>
   12e3c:	ldr	r3, [r5, #4]
   12e40:	add	r2, r3, #1
   12e44:	str	r2, [r5, #4]
   12e48:	mov	r2, #58	; 0x3a
   12e4c:	strb	r2, [r3]
   12e50:	ldr	r3, [r6, #12]
   12e54:	tst	r3, #1
   12e58:	ldrne	r3, [r5, #4]
   12e5c:	addne	r2, r3, #1
   12e60:	strne	r2, [r5, #4]
   12e64:	movne	r2, #58	; 0x3a
   12e68:	strbne	r2, [r3]
   12e6c:	ldr	r3, [r5, #4]
   12e70:	strb	fp, [r3]
   12e74:	b	12cc8 <putc_unlocked@plt+0x1724>
   12e78:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   12e7c:	cmp	r0, #86	; 0x56
   12e80:	bne	12eec <putc_unlocked@plt+0x1948>
   12e84:	ldr	r3, [pc, #112]	; 12efc <putc_unlocked@plt+0x1958>
   12e88:	push	{r4, lr}
   12e8c:	mov	r4, r2
   12e90:	ldr	r3, [r3]
   12e94:	cmp	r3, #0
   12e98:	beq	12eb8 <putc_unlocked@plt+0x1914>
   12e9c:	mov	r1, r2
   12ea0:	ldr	r0, [r2, #48]	; 0x30
   12ea4:	blx	r3
   12ea8:	ldr	r0, [r4, #16]
   12eac:	ands	r0, r0, #32
   12eb0:	bne	12ef4 <putc_unlocked@plt+0x1950>
   12eb4:	bl	113c4 <exit@plt>
   12eb8:	ldr	r3, [pc, #64]	; 12f00 <putc_unlocked@plt+0x195c>
   12ebc:	ldr	r2, [r3]
   12ec0:	cmp	r2, #0
   12ec4:	beq	12ed8 <putc_unlocked@plt+0x1934>
   12ec8:	ldr	r1, [pc, #52]	; 12f04 <putc_unlocked@plt+0x1960>
   12ecc:	ldr	r0, [r4, #48]	; 0x30
   12ed0:	bl	113e8 <fprintf@plt>
   12ed4:	b	12ea8 <putc_unlocked@plt+0x1904>
   12ed8:	ldr	r2, [pc, #40]	; 12f08 <putc_unlocked@plt+0x1964>
   12edc:	ldr	r1, [pc, #40]	; 12f0c <putc_unlocked@plt+0x1968>
   12ee0:	mov	r0, r4
   12ee4:	bl	1719c <argp_error@@Base>
   12ee8:	b	12ea8 <putc_unlocked@plt+0x1904>
   12eec:	mov	r0, #7
   12ef0:	bx	lr
   12ef4:	mov	r0, #0
   12ef8:	pop	{r4, pc}
   12efc:	andeq	sl, r2, r4, ror ip
   12f00:	andeq	fp, r2, ip, asr #4
   12f04:	andeq	r8, r1, sl, asr lr
   12f08:	strdeq	r8, [r1], -r0
   12f0c:	andeq	r9, r1, r3, lsr #7
   12f10:	cmn	r0, #3
   12f14:	push	{r4, r5, r6, lr}
   12f18:	mov	r4, r2
   12f1c:	beq	12f60 <putc_unlocked@plt+0x19bc>
   12f20:	mov	r5, r1
   12f24:	bgt	12f38 <putc_unlocked@plt+0x1994>
   12f28:	cmn	r0, #4
   12f2c:	beq	12f9c <putc_unlocked@plt+0x19f8>
   12f30:	mov	r0, #7
   12f34:	pop	{r4, r5, r6, pc}
   12f38:	cmn	r0, #2
   12f3c:	beq	12f68 <putc_unlocked@plt+0x19c4>
   12f40:	cmp	r0, #63	; 0x3f
   12f44:	ldreq	r2, [pc, #140]	; 12fd8 <putc_unlocked@plt+0x1a34>
   12f48:	bne	12f30 <putc_unlocked@plt+0x198c>
   12f4c:	ldr	r1, [r4, #48]	; 0x30
   12f50:	mov	r0, r4
   12f54:	bl	170fc <argp_state_help@@Base>
   12f58:	mov	r0, #0
   12f5c:	pop	{r4, r5, r6, pc}
   12f60:	ldr	r2, [pc, #116]	; 12fdc <putc_unlocked@plt+0x1a38>
   12f64:	b	12f4c <putc_unlocked@plt+0x19a8>
   12f68:	ldr	r3, [pc, #112]	; 12fe0 <putc_unlocked@plt+0x1a3c>
   12f6c:	mov	r0, r1
   12f70:	str	r1, [r3]
   12f74:	bl	139fc <argp_parse@@Base+0xa0c>
   12f78:	ldr	r3, [pc, #100]	; 12fe4 <putc_unlocked@plt+0x1a40>
   12f7c:	str	r0, [r3]
   12f80:	ldr	r3, [r4, #16]
   12f84:	str	r0, [r4, #40]	; 0x28
   12f88:	and	r3, r3, #3
   12f8c:	cmp	r3, #1
   12f90:	ldreq	r3, [r4, #8]
   12f94:	streq	r5, [r3]
   12f98:	b	12f58 <putc_unlocked@plt+0x19b4>
   12f9c:	cmp	r1, #0
   12fa0:	ldr	r0, [pc, #64]	; 12fe8 <putc_unlocked@plt+0x1a44>
   12fa4:	movne	r0, r1
   12fa8:	bl	11508 <atoi@plt>
   12fac:	ldr	r4, [pc, #56]	; 12fec <putc_unlocked@plt+0x1a48>
   12fb0:	mov	r5, #1
   12fb4:	str	r0, [r4]
   12fb8:	ldr	r3, [r4]
   12fbc:	sub	r2, r3, #1
   12fc0:	cmp	r3, #0
   12fc4:	str	r2, [r4]
   12fc8:	ble	12f58 <putc_unlocked@plt+0x19b4>
   12fcc:	mov	r0, r5
   12fd0:	bl	112d4 <sleep@plt>
   12fd4:	b	12fb8 <putc_unlocked@plt+0x1a14>
   12fd8:	andeq	r0, r0, sl, ror r2
   12fdc:	andeq	r0, r0, r1, lsl #4
   12fe0:	andeq	sl, r2, ip, ror #5
   12fe4:	andeq	sl, r2, r8, ror #5
   12fe8:	andeq	r8, r1, r3, lsl sp
   12fec:	andeq	sl, r2, r0, ror ip

00012ff0 <argp_parse@@Base>:
   12ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ff4:	add	fp, sp, #32
   12ff8:	tst	r3, #1
   12ffc:	sub	sp, sp, #220	; 0xdc
   13000:	mov	r4, r0
   13004:	mov	r8, r2
   13008:	str	r1, [fp, #-240]	; 0xffffff10
   1300c:	mov	sl, r3
   13010:	bne	13044 <argp_parse@@Base+0x54>
   13014:	ldr	r3, [pc, #2296]	; 13914 <argp_parse@@Base+0x924>
   13018:	ldr	r5, [pc, #2296]	; 13918 <argp_parse@@Base+0x928>
   1301c:	ldr	r2, [r3]
   13020:	cmp	r2, #0
   13024:	ldreq	r2, [r8]
   13028:	streq	r2, [r3]
   1302c:	ldr	r3, [r5]
   13030:	cmp	r3, #0
   13034:	bne	13044 <argp_parse@@Base+0x54>
   13038:	ldr	r0, [r8]
   1303c:	bl	139fc <argp_parse@@Base+0xa0c>
   13040:	str	r0, [r5]
   13044:	ands	r7, sl, #16
   13048:	bne	130d0 <argp_parse@@Base+0xe0>
   1304c:	sub	sp, sp, #72	; 0x48
   13050:	add	r5, sp, #8
   13054:	sub	sp, sp, #40	; 0x28
   13058:	add	r6, sp, #8
   1305c:	mov	r2, #28
   13060:	mov	r1, r7
   13064:	mov	r0, r6
   13068:	bl	11418 <memset@plt>
   1306c:	str	r5, [r6, #16]
   13070:	mov	r0, r5
   13074:	mov	r2, #64	; 0x40
   13078:	mov	r1, r7
   1307c:	bl	11418 <memset@plt>
   13080:	cmp	r4, #0
   13084:	strne	r4, [r5]
   13088:	ldr	r3, [pc, #2188]	; 1391c <argp_parse@@Base+0x92c>
   1308c:	addne	r5, r5, #16
   13090:	str	r3, [r5]
   13094:	ldr	r3, [pc, #2180]	; 13920 <argp_parse@@Base+0x930>
   13098:	ldr	r3, [r3]
   1309c:	cmp	r3, #0
   130a0:	bne	130b8 <argp_parse@@Base+0xc8>
   130a4:	ldr	r3, [pc, #2168]	; 13924 <argp_parse@@Base+0x934>
   130a8:	ldr	r3, [r3]
   130ac:	cmp	r3, #0
   130b0:	addeq	r3, r5, #16
   130b4:	beq	130c4 <argp_parse@@Base+0xd4>
   130b8:	ldr	r2, [pc, #2152]	; 13928 <argp_parse@@Base+0x938>
   130bc:	add	r3, r5, #32
   130c0:	str	r2, [r5, #16]
   130c4:	mov	r4, r6
   130c8:	mov	r2, #0
   130cc:	str	r2, [r3]
   130d0:	mov	r2, #36	; 0x24
   130d4:	mov	r1, #0
   130d8:	sub	r0, fp, #196	; 0xc4
   130dc:	bl	11418 <memset@plt>
   130e0:	ands	r3, sl, #4
   130e4:	moveq	r3, #1
   130e8:	movne	r3, #0
   130ec:	str	r3, [fp, #-228]	; 0xffffff1c
   130f0:	mov	r3, #0
   130f4:	cmp	r4, r3
   130f8:	str	r3, [fp, #-224]	; 0xffffff20
   130fc:	str	r3, [fp, #-220]	; 0xffffff24
   13100:	str	r3, [fp, #-216]	; 0xffffff28
   13104:	beq	13114 <argp_parse@@Base+0x124>
   13108:	sub	r1, fp, #228	; 0xe4
   1310c:	mov	r0, r4
   13110:	bl	12b18 <putc_unlocked@plt+0x1574>
   13114:	ldr	r9, [fp, #-220]	; 0xffffff24
   13118:	ldr	r5, [fp, #-216]	; 0xffffff28
   1311c:	add	r3, r9, #1
   13120:	mov	r9, #36	; 0x24
   13124:	ldr	r6, [fp, #-224]	; 0xffffff20
   13128:	mul	r9, r9, r3
   1312c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   13130:	lsl	r5, r5, #2
   13134:	add	r6, r6, #1
   13138:	add	r3, r9, r5
   1313c:	add	r6, r3, r6, lsl #4
   13140:	add	r0, r0, #1
   13144:	add	r0, r0, r6
   13148:	str	r3, [fp, #-236]	; 0xffffff14
   1314c:	bl	14540 <argp_parse@@Base+0x1550>
   13150:	cmp	r0, #0
   13154:	mov	r7, r0
   13158:	str	r0, [fp, #-40]	; 0xffffffd8
   1315c:	moveq	r4, #12
   13160:	beq	132e0 <argp_parse@@Base+0x2f0>
   13164:	add	r3, r0, r9
   13168:	str	r3, [fp, #-232]	; 0xffffff18
   1316c:	str	r3, [fp, #-104]	; 0xffffff98
   13170:	ldr	r3, [fp, #-236]	; 0xffffff14
   13174:	sub	lr, fp, #196	; 0xc4
   13178:	add	r3, r0, r3
   1317c:	str	r3, [fp, #-236]	; 0xffffff14
   13180:	str	r3, [fp, #-152]	; 0xffffff68
   13184:	mov	r3, #1
   13188:	add	r9, r0, r6
   1318c:	str	r0, [fp, #-112]	; 0xffffff90
   13190:	str	r3, [fp, #-196]	; 0xffffff3c
   13194:	str	r3, [fp, #-192]	; 0xffffff40
   13198:	ldm	lr!, {r0, r1, r2, r3}
   1319c:	sub	ip, fp, #148	; 0x94
   131a0:	str	r9, [fp, #-156]	; 0xffffff64
   131a4:	stmia	ip!, {r0, r1, r2, r3}
   131a8:	ldm	lr!, {r0, r1, r2, r3}
   131ac:	stmia	ip!, {r0, r1, r2, r3}
   131b0:	mov	r2, r5
   131b4:	ldr	r3, [lr]
   131b8:	mov	r1, #0
   131bc:	ldr	r0, [fp, #-232]	; 0xffffff18
   131c0:	str	r3, [ip]
   131c4:	bl	11418 <memset@plt>
   131c8:	ldr	r3, [fp, #-236]	; 0xffffff14
   131cc:	tst	sl, #8
   131d0:	str	r3, [fp, #-204]	; 0xffffff34
   131d4:	ldr	r3, [fp, #-232]	; 0xffffff18
   131d8:	str	r9, [fp, #-208]	; 0xffffff30
   131dc:	sub	r5, fp, #160	; 0xa0
   131e0:	addne	r9, r9, #1
   131e4:	str	r3, [fp, #-200]	; 0xffffff38
   131e8:	str	r5, [fp, #-212]	; 0xffffff2c
   131ec:	strne	r9, [fp, #-208]	; 0xffffff30
   131f0:	movne	r3, #45	; 0x2d
   131f4:	bne	13210 <argp_parse@@Base+0x220>
   131f8:	ands	r3, sl, #4
   131fc:	cmp	r3, #0
   13200:	beq	13214 <argp_parse@@Base+0x224>
   13204:	mov	r3, #43	; 0x2b
   13208:	add	r9, r9, #1
   1320c:	str	r9, [fp, #-208]	; 0xffffff30
   13210:	strb	r3, [r7, r6]
   13214:	ldr	r3, [fp, #-208]	; 0xffffff30
   13218:	mov	r2, #0
   1321c:	cmp	r4, r2
   13220:	strb	r2, [r3]
   13224:	ldr	r3, [fp, #-204]	; 0xffffff34
   13228:	str	r2, [r3]
   1322c:	ldreq	r3, [fp, #-112]	; 0xffffff90
   13230:	str	r4, [fp, #-160]	; 0xffffff60
   13234:	streq	r3, [fp, #-108]	; 0xffffff94
   13238:	beq	13258 <argp_parse@@Base+0x268>
   1323c:	sub	r3, fp, #212	; 0xd4
   13240:	str	r3, [sp]
   13244:	mov	r1, r2
   13248:	ldr	r3, [fp, #-112]	; 0xffffff90
   1324c:	mov	r0, r4
   13250:	bl	12be4 <putc_unlocked@plt+0x1640>
   13254:	str	r0, [fp, #-108]	; 0xffffff94
   13258:	mov	r2, #56	; 0x38
   1325c:	mov	r1, #0
   13260:	add	r0, r5, #64	; 0x40
   13264:	bl	11418 <memset@plt>
   13268:	ldr	r3, [fp, #-160]	; 0xffffff60
   1326c:	ldr	r6, [fp, #-112]	; 0xffffff90
   13270:	str	r3, [fp, #-96]	; 0xffffffa0
   13274:	ldr	r3, [fp, #-240]	; 0xffffff10
   13278:	str	sl, [fp, #-80]	; 0xffffffb0
   1327c:	str	r3, [fp, #-92]	; 0xffffffa4
   13280:	ldr	r3, [pc, #1700]	; 1392c <argp_parse@@Base+0x93c>
   13284:	mov	r4, #0
   13288:	ldr	sl, [pc, #1696]	; 13930 <argp_parse@@Base+0x940>
   1328c:	ldr	r3, [r3]
   13290:	add	r7, r5, #64	; 0x40
   13294:	str	r3, [fp, #-52]	; 0xffffffcc
   13298:	ldr	r3, [pc, #1684]	; 13934 <argp_parse@@Base+0x944>
   1329c:	mov	r9, r4
   132a0:	str	r8, [fp, #-88]	; 0xffffffa8
   132a4:	ldr	r3, [r3]
   132a8:	str	r5, [fp, #-44]	; 0xffffffd4
   132ac:	str	r3, [fp, #-48]	; 0xffffffd0
   132b0:	mov	r3, #1
   132b4:	str	r3, [fp, #-100]	; 0xffffff9c
   132b8:	ldr	r3, [fp, #-108]	; 0xffffff94
   132bc:	cmp	r6, r3
   132c0:	ldrcc	r3, [fp, #8]
   132c4:	strcc	r3, [r6, #24]
   132c8:	ldr	r3, [fp, #-108]	; 0xffffff94
   132cc:	cmp	r6, r3
   132d0:	bcs	13354 <argp_parse@@Base+0x364>
   132d4:	cmp	r4, #7
   132d8:	cmpne	r4, #0
   132dc:	beq	132ec <argp_parse@@Base+0x2fc>
   132e0:	mov	r0, r4
   132e4:	sub	sp, fp, #32
   132e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132ec:	ldr	r3, [r6, #16]
   132f0:	cmp	r3, #0
   132f4:	ldrne	r3, [r3, #28]
   132f8:	ldrne	r2, [r6, #20]
   132fc:	ldrne	r3, [r3, r2, lsl #2]
   13300:	strne	r3, [r6, #24]
   13304:	ldr	r3, [r6]
   13308:	cmp	r3, #0
   1330c:	bne	13334 <argp_parse@@Base+0x344>
   13310:	ldr	r3, [r6, #4]
   13314:	ldr	r3, [r3, #16]
   13318:	cmp	r3, #0
   1331c:	beq	13334 <argp_parse@@Base+0x344>
   13320:	ldr	r3, [r3]
   13324:	cmp	r3, #0
   13328:	ldrne	r3, [r6, #28]
   1332c:	ldrne	r2, [r6, #24]
   13330:	strne	r2, [r3]
   13334:	mov	r0, r6
   13338:	mov	r3, r9
   1333c:	mov	r2, sl
   13340:	mov	r1, r7
   13344:	bl	12ab8 <putc_unlocked@plt+0x1514>
   13348:	add	r6, r6, #36	; 0x24
   1334c:	mov	r4, r0
   13350:	b	132c8 <argp_parse@@Base+0x2d8>
   13354:	cmp	r4, #7
   13358:	beq	13364 <argp_parse@@Base+0x374>
   1335c:	cmp	r4, #0
   13360:	bne	132e0 <argp_parse@@Base+0x2f0>
   13364:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13368:	tst	r3, #2
   1336c:	moveq	r3, #1
   13370:	streq	r3, [fp, #-144]	; 0xffffff70
   13374:	beq	1339c <argp_parse@@Base+0x3ac>
   13378:	tst	r3, #1
   1337c:	mov	r2, #0
   13380:	ldrne	r3, [fp, #-88]	; 0xffffffa8
   13384:	str	r2, [fp, #-144]	; 0xffffff70
   13388:	subne	r3, r3, #4
   1338c:	strne	r3, [fp, #-88]	; 0xffffffa8
   13390:	ldrne	r3, [fp, #-92]	; 0xffffffa4
   13394:	addne	r3, r3, #1
   13398:	strne	r3, [fp, #-92]	; 0xffffffa4
   1339c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   133a0:	cmp	r8, r3
   133a4:	bne	133c8 <argp_parse@@Base+0x3d8>
   133a8:	ldr	r0, [r8]
   133ac:	cmp	r0, #0
   133b0:	beq	133c8 <argp_parse@@Base+0x3d8>
   133b4:	bl	139fc <argp_parse@@Base+0xa0c>
   133b8:	str	r0, [fp, #-56]	; 0xffffffc8
   133bc:	add	r8, r5, #64	; 0x40
   133c0:	ldr	r9, [pc, #1392]	; 13938 <argp_parse@@Base+0x948>
   133c4:	b	1358c <argp_parse@@Base+0x59c>
   133c8:	ldr	r3, [pc, #1352]	; 13918 <argp_parse@@Base+0x928>
   133cc:	ldr	r3, [r3]
   133d0:	str	r3, [fp, #-56]	; 0xffffffc8
   133d4:	b	133bc <argp_parse@@Base+0x3cc>
   133d8:	bl	13b04 <argp_parse@@Base+0xb14>
   133dc:	b	135f8 <argp_parse@@Base+0x608>
   133e0:	cmp	r0, #63	; 0x3f
   133e4:	bne	138a8 <argp_parse@@Base+0x8b8>
   133e8:	ldr	r3, [fp, #-140]	; 0xffffff74
   133ec:	cmn	r3, #1
   133f0:	bne	1384c <argp_parse@@Base+0x85c>
   133f4:	asrs	r3, r6, #24
   133f8:	bne	136b4 <argp_parse@@Base+0x6c4>
   133fc:	mov	r1, r6
   13400:	ldr	r0, [fp, #-156]	; 0xffffff64
   13404:	bl	113dc <strchr@plt>
   13408:	subs	r2, r0, #0
   1340c:	beq	13448 <argp_parse@@Base+0x458>
   13410:	ldr	r0, [fp, #-112]	; 0xffffff90
   13414:	ldr	r3, [fp, #-108]	; 0xffffff94
   13418:	cmp	r0, r3
   1341c:	bcs	13448 <argp_parse@@Base+0x458>
   13420:	ldr	r1, [r0, #8]
   13424:	cmp	r2, r1
   13428:	bcs	136ac <argp_parse@@Base+0x6bc>
   1342c:	ldr	r3, [fp, #-136]	; 0xffffff78
   13430:	mov	r2, r6
   13434:	mov	r1, r8
   13438:	bl	12ab8 <putc_unlocked@plt+0x1514>
   1343c:	cmp	r0, #7
   13440:	mov	r4, r0
   13444:	bne	13740 <argp_parse@@Base+0x750>
   13448:	ldr	r3, [pc, #1260]	; 1393c <argp_parse@@Base+0x94c>
   1344c:	ldr	r1, [pc, #1260]	; 13940 <argp_parse@@Base+0x950>
   13450:	mov	r2, r6
   13454:	add	r0, r5, #64	; 0x40
   13458:	bl	1719c <argp_error@@Base>
   1345c:	sub	r7, r6, #1
   13460:	mov	r4, #7
   13464:	clz	r7, r7
   13468:	lsr	r7, r7, #5
   1346c:	cmp	r4, #7
   13470:	movne	r7, #0
   13474:	andeq	r7, r7, #1
   13478:	cmp	r7, #0
   1347c:	beq	137c0 <argp_parse@@Base+0x7d0>
   13480:	ldr	r3, [fp, #-84]	; 0xffffffac
   13484:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13488:	cmp	r3, r2
   1348c:	bne	13818 <argp_parse@@Base+0x828>
   13490:	mov	r4, #0
   13494:	ldr	r7, [fp, #-112]	; 0xffffff90
   13498:	ldr	sl, [pc, #1188]	; 13944 <argp_parse@@Base+0x954>
   1349c:	add	r8, r5, #64	; 0x40
   134a0:	mov	r9, r4
   134a4:	ldr	r6, [fp, #-108]	; 0xffffff94
   134a8:	cmp	r7, r6
   134ac:	bcc	1374c <argp_parse@@Base+0x75c>
   134b0:	ldr	r9, [pc, #1168]	; 13948 <argp_parse@@Base+0x958>
   134b4:	sub	r6, r6, #36	; 0x24
   134b8:	add	r7, r5, #64	; 0x40
   134bc:	mov	r8, #0
   134c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   134c4:	cmp	r6, r3
   134c8:	bcc	137a4 <argp_parse@@Base+0x7b4>
   134cc:	cmp	r4, #7
   134d0:	cmpne	r4, #0
   134d4:	beq	13784 <argp_parse@@Base+0x794>
   134d8:	ldr	r3, [fp, #4]
   134dc:	cmp	r3, #0
   134e0:	beq	137c0 <argp_parse@@Base+0x7d0>
   134e4:	ldr	r2, [fp, #4]
   134e8:	ldr	r3, [fp, #-84]	; 0xffffffac
   134ec:	str	r3, [r2]
   134f0:	b	137b8 <argp_parse@@Base+0x7c8>
   134f4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   134f8:	tst	r2, #4
   134fc:	bne	13480 <argp_parse@@Base+0x490>
   13500:	add	r2, r3, #1
   13504:	str	r2, [fp, #-84]	; 0xffffffac
   13508:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1350c:	ldr	r3, [r2, r3, lsl #2]
   13510:	str	r3, [fp, #-136]	; 0xffffff78
   13514:	ldr	r3, [fp, #-136]	; 0xffffff78
   13518:	ldr	r7, [fp, #-84]	; 0xffffffac
   1351c:	str	r3, [fp, #-232]	; 0xffffff18
   13520:	ldr	r6, [fp, #-112]	; 0xffffff90
   13524:	mov	r3, #0
   13528:	mov	r4, #7
   1352c:	mov	sl, r3
   13530:	sub	r7, r7, #1
   13534:	str	r7, [fp, #-84]	; 0xffffffac
   13538:	ldr	r2, [fp, #-108]	; 0xffffff94
   1353c:	cmp	r6, r2
   13540:	movcs	r2, #0
   13544:	movcc	r2, #1
   13548:	cmp	r4, #7
   1354c:	movne	r2, #0
   13550:	cmp	r2, #0
   13554:	bne	1364c <argp_parse@@Base+0x65c>
   13558:	cmp	r4, #0
   1355c:	bne	13730 <argp_parse@@Base+0x740>
   13560:	cmp	r3, r9
   13564:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   13568:	streq	r3, [fp, #-84]	; 0xffffffac
   1356c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13570:	cmp	r7, r3
   13574:	sublt	r7, r3, r7
   13578:	ldrlt	r3, [r6, #-24]	; 0xffffffe8
   1357c:	movge	r3, #1
   13580:	addlt	r7, r3, r7
   13584:	strlt	r7, [r6, #-24]	; 0xffffffe8
   13588:	strge	r3, [fp, #-100]	; 0xffffff9c
   1358c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13590:	ldr	r3, [fp, #-84]	; 0xffffffac
   13594:	cmp	r2, #0
   13598:	beq	135a8 <argp_parse@@Base+0x5b8>
   1359c:	cmp	r2, r3
   135a0:	movgt	r2, #0
   135a4:	strgt	r2, [fp, #-72]	; 0xffffffb8
   135a8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   135ac:	cmp	r2, #0
   135b0:	beq	13638 <argp_parse@@Base+0x648>
   135b4:	ldr	r7, [fp, #-72]	; 0xffffffb8
   135b8:	cmp	r7, #0
   135bc:	bne	13638 <argp_parse@@Base+0x648>
   135c0:	str	r3, [fp, #-148]	; 0xffffff6c
   135c4:	mvn	r3, #0
   135c8:	str	r3, [fp, #-140]	; 0xffffff74
   135cc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   135d0:	str	r7, [sp]
   135d4:	tst	r3, #64	; 0x40
   135d8:	add	r3, r5, #12
   135dc:	str	r3, [sp, #4]
   135e0:	ldr	r2, [fp, #-156]	; 0xffffff64
   135e4:	ldr	r3, [fp, #-152]	; 0xffffff68
   135e8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   135ec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   135f0:	beq	133d8 <argp_parse@@Base+0x3e8>
   135f4:	bl	13b50 <argp_parse@@Base+0xb60>
   135f8:	ldr	r4, [fp, #-148]	; 0xffffff6c
   135fc:	cmn	r0, #1
   13600:	mov	r6, r0
   13604:	str	r4, [fp, #-84]	; 0xffffffac
   13608:	bne	133e0 <argp_parse@@Base+0x3f0>
   1360c:	mov	r3, #0
   13610:	cmp	r4, #1
   13614:	str	r3, [fp, #-100]	; 0xffffff9c
   13618:	ble	13638 <argp_parse@@Base+0x648>
   1361c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13620:	sub	r3, r4, #-1073741823	; 0xc0000001
   13624:	ldr	r1, [pc, #800]	; 1394c <argp_parse@@Base+0x95c>
   13628:	ldr	r0, [r2, r3, lsl #2]
   1362c:	bl	11244 <strcmp@plt>
   13630:	cmp	r0, #0
   13634:	streq	r4, [fp, #-72]	; 0xffffffb8
   13638:	ldr	r3, [fp, #-84]	; 0xffffffac
   1363c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13640:	cmp	r3, r2
   13644:	bge	13480 <argp_parse@@Base+0x490>
   13648:	b	134f4 <argp_parse@@Base+0x504>
   1364c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13650:	mov	r2, sl
   13654:	add	r3, r3, #1
   13658:	str	r3, [fp, #-84]	; 0xffffffac
   1365c:	mov	r1, r8
   13660:	ldr	r3, [fp, #-232]	; 0xffffff18
   13664:	mov	r0, r6
   13668:	bl	12ab8 <putc_unlocked@plt+0x1514>
   1366c:	cmp	r0, #7
   13670:	mov	r4, r0
   13674:	movne	r3, sl
   13678:	bne	136a4 <argp_parse@@Base+0x6b4>
   1367c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13680:	mov	r2, r9
   13684:	sub	r3, r3, #1
   13688:	str	r3, [fp, #-84]	; 0xffffffac
   1368c:	mov	r1, r8
   13690:	mov	r3, sl
   13694:	mov	r0, r6
   13698:	bl	12ab8 <putc_unlocked@plt+0x1514>
   1369c:	mov	r3, r9
   136a0:	mov	r4, r0
   136a4:	add	r6, r6, #36	; 0x24
   136a8:	b	13538 <argp_parse@@Base+0x548>
   136ac:	add	r0, r0, #36	; 0x24
   136b0:	b	13418 <argp_parse@@Base+0x428>
   136b4:	mov	r0, #36	; 0x24
   136b8:	ands	r1, r6, #8388608	; 0x800000
   136bc:	mul	r0, r0, r3
   136c0:	ldr	ip, [fp, #-112]	; 0xffffff90
   136c4:	movne	r1, #-16777216	; 0xff000000
   136c8:	bic	r2, r6, #-16777216	; 0xff000000
   136cc:	sub	r0, r0, #36	; 0x24
   136d0:	orr	r2, r2, r1
   136d4:	ldr	r3, [fp, #-136]	; 0xffffff78
   136d8:	mov	r1, r8
   136dc:	add	r0, ip, r0
   136e0:	bl	12ab8 <putc_unlocked@plt+0x1514>
   136e4:	cmp	r0, #7
   136e8:	mov	r4, r0
   136ec:	bne	13740 <argp_parse@@Base+0x750>
   136f0:	ldr	r3, [fp, #-152]	; 0xffffff68
   136f4:	b	13708 <argp_parse@@Base+0x718>
   136f8:	ldr	r2, [r3]
   136fc:	cmp	r2, #0
   13700:	beq	13714 <argp_parse@@Base+0x724>
   13704:	add	r3, r3, #16
   13708:	ldr	r2, [r3, #12]
   1370c:	cmp	r2, r6
   13710:	bne	136f8 <argp_parse@@Base+0x708>
   13714:	ldr	r2, [r3]
   13718:	ldr	r1, [pc, #560]	; 13950 <argp_parse@@Base+0x960>
   1371c:	cmp	r2, #0
   13720:	moveq	r2, r1
   13724:	ldr	r3, [pc, #528]	; 1393c <argp_parse@@Base+0x94c>
   13728:	ldr	r1, [pc, #548]	; 13954 <argp_parse@@Base+0x964>
   1372c:	b	13454 <argp_parse@@Base+0x464>
   13730:	cmp	r4, #7
   13734:	bne	137c8 <argp_parse@@Base+0x7d8>
   13738:	mov	r6, #1
   1373c:	b	1345c <argp_parse@@Base+0x46c>
   13740:	cmp	r4, #0
   13744:	beq	1358c <argp_parse@@Base+0x59c>
   13748:	b	1346c <argp_parse@@Base+0x47c>
   1374c:	cmp	r4, #7
   13750:	cmpne	r4, #0
   13754:	bne	134b0 <argp_parse@@Base+0x4c0>
   13758:	ldr	r3, [r7, #12]
   1375c:	cmp	r3, #0
   13760:	bne	1377c <argp_parse@@Base+0x78c>
   13764:	mov	r3, r9
   13768:	mov	r2, sl
   1376c:	mov	r1, r8
   13770:	mov	r0, r7
   13774:	bl	12ab8 <putc_unlocked@plt+0x1514>
   13778:	mov	r4, r0
   1377c:	add	r7, r7, #36	; 0x24
   13780:	b	134a4 <argp_parse@@Base+0x4b4>
   13784:	mov	r0, r6
   13788:	mov	r3, r8
   1378c:	mov	r2, r9
   13790:	mov	r1, r7
   13794:	bl	12ab8 <putc_unlocked@plt+0x1514>
   13798:	sub	r6, r6, #36	; 0x24
   1379c:	mov	r4, r0
   137a0:	b	134c0 <argp_parse@@Base+0x4d0>
   137a4:	cmp	r4, #7
   137a8:	beq	138b4 <argp_parse@@Base+0x8c4>
   137ac:	ldr	r3, [fp, #4]
   137b0:	cmp	r3, #0
   137b4:	bne	134e4 <argp_parse@@Base+0x4f4>
   137b8:	cmp	r4, #0
   137bc:	beq	138c4 <argp_parse@@Base+0x8d4>
   137c0:	cmp	r4, #7
   137c4:	beq	1384c <argp_parse@@Base+0x85c>
   137c8:	ldr	r6, [fp, #-112]	; 0xffffff90
   137cc:	ldr	r9, [pc, #388]	; 13958 <argp_parse@@Base+0x968>
   137d0:	add	r7, r5, #64	; 0x40
   137d4:	mov	r8, #0
   137d8:	ldr	r3, [fp, #-108]	; 0xffffff94
   137dc:	cmp	r6, r3
   137e0:	bcc	13864 <argp_parse@@Base+0x874>
   137e4:	ldr	r6, [fp, #-108]	; 0xffffff94
   137e8:	ldr	r8, [pc, #364]	; 1395c <argp_parse@@Base+0x96c>
   137ec:	sub	r6, r6, #36	; 0x24
   137f0:	add	r5, r5, #64	; 0x40
   137f4:	mov	r7, #0
   137f8:	ldr	r3, [fp, #-112]	; 0xffffff90
   137fc:	cmp	r6, r3
   13800:	bcs	1388c <argp_parse@@Base+0x89c>
   13804:	cmp	r4, #7
   13808:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1380c:	moveq	r4, #22
   13810:	bl	13a8c <argp_parse@@Base+0xa9c>
   13814:	b	132e0 <argp_parse@@Base+0x2f0>
   13818:	ldr	r2, [fp, #4]
   1381c:	cmp	r2, #0
   13820:	strne	r3, [r2]
   13824:	bne	138c4 <argp_parse@@Base+0x8d4>
   13828:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1382c:	tst	r3, #2
   13830:	bne	1384c <argp_parse@@Base+0x85c>
   13834:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13838:	cmp	r0, #0
   1383c:	beq	1384c <argp_parse@@Base+0x85c>
   13840:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13844:	ldr	r1, [pc, #276]	; 13960 <argp_parse@@Base+0x970>
   13848:	bl	113e8 <fprintf@plt>
   1384c:	mov	r2, #260	; 0x104
   13850:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13854:	add	r0, r5, #64	; 0x40
   13858:	bl	170fc <argp_state_help@@Base>
   1385c:	mov	r4, #7
   13860:	b	137c8 <argp_parse@@Base+0x7d8>
   13864:	mov	r0, r6
   13868:	mov	r3, r8
   1386c:	mov	r2, r9
   13870:	mov	r1, r7
   13874:	bl	12ab8 <putc_unlocked@plt+0x1514>
   13878:	add	r6, r6, #36	; 0x24
   1387c:	b	137d8 <argp_parse@@Base+0x7e8>
   13880:	cmp	r4, #7
   13884:	moveq	r4, #0
   13888:	b	137e4 <argp_parse@@Base+0x7f4>
   1388c:	mov	r0, r6
   13890:	mov	r3, r7
   13894:	mov	r2, r8
   13898:	mov	r1, r5
   1389c:	bl	12ab8 <putc_unlocked@plt+0x1514>
   138a0:	sub	r6, r6, #36	; 0x24
   138a4:	b	137f8 <argp_parse@@Base+0x808>
   138a8:	cmp	r0, #1
   138ac:	bne	133f4 <argp_parse@@Base+0x404>
   138b0:	b	13514 <argp_parse@@Base+0x524>
   138b4:	ldr	r3, [fp, #4]
   138b8:	cmp	r3, #0
   138bc:	movne	r4, #0
   138c0:	bne	134e4 <argp_parse@@Base+0x4f4>
   138c4:	ldr	r6, [fp, #-108]	; 0xffffff94
   138c8:	mov	r4, #0
   138cc:	ldr	r9, [pc, #144]	; 13964 <argp_parse@@Base+0x974>
   138d0:	sub	r6, r6, #36	; 0x24
   138d4:	add	r7, r5, #64	; 0x40
   138d8:	mov	r8, r4
   138dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   138e0:	cmp	r6, r3
   138e4:	bcc	13880 <argp_parse@@Base+0x890>
   138e8:	cmp	r4, #7
   138ec:	cmpne	r4, #0
   138f0:	bne	137e4 <argp_parse@@Base+0x7f4>
   138f4:	mov	r0, r6
   138f8:	mov	r3, r8
   138fc:	mov	r2, r9
   13900:	mov	r1, r7
   13904:	bl	12ab8 <putc_unlocked@plt+0x1514>
   13908:	sub	r6, r6, #36	; 0x24
   1390c:	mov	r4, r0
   13910:	b	138dc <argp_parse@@Base+0x8ec>
   13914:	andeq	sl, r2, ip, ror #5
   13918:	andeq	sl, r2, r8, ror #5
   1391c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   13920:	andeq	fp, r2, ip, asr #4
   13924:	andeq	sl, r2, r4, ror ip
   13928:	strdeq	r8, [r1], -r4
   1392c:	strdeq	sl, [r2], -r0
   13930:	tsteq	r0, r3
   13934:	strdeq	sl, [r2], -r4
   13938:	tsteq	r0, r6
   1393c:	andeq	r8, r1, r0, lsl ip
   13940:	andeq	r8, r1, pc, lsl sp
   13944:	tsteq	r0, r2
   13948:	tsteq	r0, r1
   1394c:	andeq	r8, r1, ip, lsl sp
   13950:	andeq	r8, r1, r8, lsl sp
   13954:	andeq	r8, r1, r7, lsr #26
   13958:	tsteq	r0, r5
   1395c:	tsteq	r0, r7
   13960:	andeq	r8, r1, r0, lsr sp
   13964:	tsteq	r0, r4
   13968:	cmp	r1, #0
   1396c:	ldrne	r2, [r1, #52]	; 0x34
   13970:	ldrne	r3, [r2, #48]	; 0x30
   13974:	ldrne	r2, [r2, #52]	; 0x34
   13978:	bne	13988 <argp_parse@@Base+0x998>
   1397c:	mov	r0, #0
   13980:	bx	lr
   13984:	add	r3, r3, #36	; 0x24
   13988:	cmp	r3, r2
   1398c:	bcs	1397c <argp_parse@@Base+0x98c>
   13990:	ldr	r1, [r3, #4]
   13994:	cmp	r1, r0
   13998:	bne	13984 <argp_parse@@Base+0x994>
   1399c:	ldr	r0, [r3, #24]
   139a0:	bx	lr
   139a4:	push	{r0, r1, r2, lr}
   139a8:	ldr	r1, [pc, #28]	; 139cc <argp_parse@@Base+0x9dc>
   139ac:	ldr	r2, [pc, #28]	; 139d0 <argp_parse@@Base+0x9e0>
   139b0:	ldr	r3, [r1, #4]
   139b4:	str	r3, [sp]
   139b8:	ldr	r3, [pc, #20]	; 139d4 <argp_parse@@Base+0x9e4>
   139bc:	ldr	r1, [r1]
   139c0:	bl	13f34 <argp_parse@@Base+0xf44>
   139c4:	add	sp, sp, #12
   139c8:	pop	{pc}		; (ldr pc, [sp], #4)
   139cc:	andeq	sl, r2, r8, ror ip
   139d0:	andeq	r8, r1, r0, lsl #28
   139d4:	strdeq	r8, [r1], -r3
   139d8:	ldr	r3, [pc, #16]	; 139f0 <argp_parse@@Base+0xa00>
   139dc:	ldr	r2, [pc, #16]	; 139f4 <argp_parse@@Base+0xa04>
   139e0:	str	r2, [r3]
   139e4:	ldr	r3, [pc, #12]	; 139f8 <argp_parse@@Base+0xa08>
   139e8:	stm	r3, {r0, r1}
   139ec:	bx	lr
   139f0:	andeq	sl, r2, r4, ror ip
   139f4:	andeq	r3, r1, r4, lsr #19
   139f8:	andeq	sl, r2, r8, ror ip
   139fc:	mov	r2, r0
   13a00:	push	{r4, lr}
   13a04:	mov	r0, r2
   13a08:	ldrb	r3, [r2]
   13a0c:	add	r1, r2, #1
   13a10:	cmp	r3, #47	; 0x2f
   13a14:	beq	13a38 <argp_parse@@Base+0xa48>
   13a18:	mov	r3, #0
   13a1c:	mov	lr, #1
   13a20:	mov	r4, r3
   13a24:	mov	ip, r2
   13a28:	ldrb	r1, [r2], #1
   13a2c:	cmp	r1, #0
   13a30:	bne	13a40 <argp_parse@@Base+0xa50>
   13a34:	pop	{r4, pc}
   13a38:	mov	r2, r1
   13a3c:	b	13a04 <argp_parse@@Base+0xa14>
   13a40:	cmp	r1, #47	; 0x2f
   13a44:	moveq	r3, lr
   13a48:	beq	13a24 <argp_parse@@Base+0xa34>
   13a4c:	cmp	r3, #0
   13a50:	movne	r0, ip
   13a54:	movne	r3, r4
   13a58:	b	13a24 <argp_parse@@Base+0xa34>
   13a5c:	push	{r4, lr}
   13a60:	mov	r4, r0
   13a64:	bl	113d0 <strlen@plt>
   13a68:	cmp	r0, #1
   13a6c:	popls	{r4, pc}
   13a70:	sub	r3, r0, #1
   13a74:	ldrb	r2, [r4, r3]
   13a78:	cmp	r2, #47	; 0x2f
   13a7c:	beq	13a84 <argp_parse@@Base+0xa94>
   13a80:	pop	{r4, pc}
   13a84:	mov	r0, r3
   13a88:	b	13a68 <argp_parse@@Base+0xa78>
   13a8c:	push	{r0, r1, r2, r4, r5, lr}
   13a90:	mov	r5, r0
   13a94:	bl	113f4 <__errno_location@plt>
   13a98:	ldr	r3, [r0]
   13a9c:	mov	r4, r0
   13aa0:	str	r3, [sp]
   13aa4:	str	r3, [sp, #4]
   13aa8:	mov	r3, #0
   13aac:	str	r3, [r0]
   13ab0:	mov	r0, r5
   13ab4:	bl	1128c <free@plt>
   13ab8:	ldr	r3, [r4]
   13abc:	add	r2, sp, #8
   13ac0:	cmp	r3, #0
   13ac4:	moveq	r3, #4
   13ac8:	movne	r3, #0
   13acc:	add	r3, r2, r3
   13ad0:	ldr	r3, [r3, #-8]
   13ad4:	str	r3, [r4]
   13ad8:	add	sp, sp, #12
   13adc:	pop	{r4, r5, pc}
   13ae0:	push	{r0, r1, r2, r3, r4, lr}
   13ae4:	mov	ip, #0
   13ae8:	str	ip, [sp, #8]
   13aec:	str	ip, [sp, #4]
   13af0:	ldr	ip, [sp, #24]
   13af4:	str	ip, [sp]
   13af8:	bl	17c80 <argp_error@@Base+0xae4>
   13afc:	add	sp, sp, #20
   13b00:	pop	{pc}		; (ldr pc, [sp], #4)
   13b04:	push	{r0, r1, r2, r3, r4, lr}
   13b08:	mov	ip, #0
   13b0c:	ldr	lr, [sp, #28]
   13b10:	str	ip, [sp, #12]
   13b14:	stmib	sp, {ip, lr}
   13b18:	ldr	ip, [sp, #24]
   13b1c:	str	ip, [sp]
   13b20:	bl	17788 <argp_error@@Base+0x5ec>
   13b24:	add	sp, sp, #20
   13b28:	pop	{pc}		; (ldr pc, [sp], #4)
   13b2c:	push	{r0, r1, r2, r3, r4, lr}
   13b30:	mov	ip, #1
   13b34:	mov	lr, #0
   13b38:	stmib	sp, {ip, lr}
   13b3c:	ldr	ip, [sp, #24]
   13b40:	str	ip, [sp]
   13b44:	bl	17c80 <argp_error@@Base+0xae4>
   13b48:	add	sp, sp, #20
   13b4c:	pop	{pc}		; (ldr pc, [sp], #4)
   13b50:	push	{r0, r1, r2, r3, r4, lr}
   13b54:	mov	ip, #0
   13b58:	str	ip, [sp, #12]
   13b5c:	ldr	ip, [sp, #28]
   13b60:	str	ip, [sp, #8]
   13b64:	mov	ip, #1
   13b68:	str	ip, [sp, #4]
   13b6c:	ldr	ip, [sp, #24]
   13b70:	str	ip, [sp]
   13b74:	bl	17788 <argp_error@@Base+0x5ec>
   13b78:	add	sp, sp, #20
   13b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   13b80:	push	{r1, r2, r3}
   13b84:	push	{r0, r1, lr}
   13b88:	add	r3, sp, #16
   13b8c:	ldr	r2, [sp, #16]
   13b90:	ldr	r1, [sp, #12]
   13b94:	str	r3, [sp, #4]
   13b98:	bl	11328 <ioctl@plt>
   13b9c:	add	sp, sp, #8
   13ba0:	pop	{lr}		; (ldr lr, [sp], #4)
   13ba4:	add	sp, sp, #12
   13ba8:	bx	lr
   13bac:	push	{r4, r5, r6, lr}
   13bb0:	subs	r5, r0, #0
   13bb4:	bne	13bcc <argp_parse@@Base+0xbdc>
   13bb8:	ldr	r3, [pc, #124]	; 13c3c <argp_parse@@Base+0xc4c>
   13bbc:	ldr	r0, [pc, #124]	; 13c40 <argp_parse@@Base+0xc50>
   13bc0:	ldr	r1, [r3]
   13bc4:	bl	11538 <fputs@plt>
   13bc8:	bl	11550 <abort@plt>
   13bcc:	mov	r1, #47	; 0x2f
   13bd0:	bl	11484 <strrchr@plt>
   13bd4:	cmp	r0, #0
   13bd8:	addne	r4, r0, #1
   13bdc:	moveq	r4, r5
   13be0:	sub	r3, r4, r5
   13be4:	cmp	r3, #6
   13be8:	ble	13c28 <argp_parse@@Base+0xc38>
   13bec:	mov	r2, #7
   13bf0:	ldr	r1, [pc, #76]	; 13c44 <argp_parse@@Base+0xc54>
   13bf4:	sub	r0, r4, #7
   13bf8:	bl	11544 <strncmp@plt>
   13bfc:	cmp	r0, #0
   13c00:	bne	13c28 <argp_parse@@Base+0xc38>
   13c04:	mov	r2, #3
   13c08:	ldr	r1, [pc, #56]	; 13c48 <argp_parse@@Base+0xc58>
   13c0c:	mov	r0, r4
   13c10:	bl	11544 <strncmp@plt>
   13c14:	cmp	r0, #0
   13c18:	movne	r5, r4
   13c1c:	ldreq	r3, [pc, #40]	; 13c4c <argp_parse@@Base+0xc5c>
   13c20:	addeq	r5, r4, #3
   13c24:	streq	r5, [r3]
   13c28:	ldr	r3, [pc, #32]	; 13c50 <argp_parse@@Base+0xc60>
   13c2c:	str	r5, [r3]
   13c30:	ldr	r3, [pc, #28]	; 13c54 <argp_parse@@Base+0xc64>
   13c34:	str	r5, [r3]
   13c38:	pop	{r4, r5, r6, pc}
   13c3c:	strdeq	sl, [r2], -r0
   13c40:	andeq	r8, r1, lr, lsl #28
   13c44:	andeq	r8, r1, r6, asr #28
   13c48:	andeq	r8, r1, lr, asr #28
   13c4c:	andeq	sl, r2, r8, ror #5
   13c50:	andeq	sl, r2, r0, lsl #25
   13c54:	andeq	sl, r2, ip, ror #5
   13c58:	push	{r4, r5, r6, lr}
   13c5c:	sub	sp, sp, #32
   13c60:	cmp	r1, #0
   13c64:	mov	r5, r0
   13c68:	ldr	r4, [sp, #48]	; 0x30
   13c6c:	ldr	r6, [sp, #52]	; 0x34
   13c70:	beq	13cf8 <argp_parse@@Base+0xd08>
   13c74:	str	r3, [sp]
   13c78:	mov	r3, r2
   13c7c:	mov	r2, r1
   13c80:	ldr	r1, [pc, #616]	; 13ef0 <argp_parse@@Base+0xf00>
   13c84:	bl	113e8 <fprintf@plt>
   13c88:	ldr	r3, [pc, #612]	; 13ef4 <argp_parse@@Base+0xf04>
   13c8c:	ldr	r2, [pc, #612]	; 13ef8 <argp_parse@@Base+0xf08>
   13c90:	ldr	r1, [pc, #612]	; 13efc <argp_parse@@Base+0xf0c>
   13c94:	mov	r0, r5
   13c98:	bl	113e8 <fprintf@plt>
   13c9c:	mov	r1, r5
   13ca0:	mov	r0, #10
   13ca4:	bl	114a8 <fputc@plt>
   13ca8:	ldr	r1, [pc, #592]	; 13f00 <argp_parse@@Base+0xf10>
   13cac:	ldr	r2, [pc, #592]	; 13f04 <argp_parse@@Base+0xf14>
   13cb0:	mov	r0, r5
   13cb4:	bl	113e8 <fprintf@plt>
   13cb8:	mov	r1, r5
   13cbc:	mov	r0, #10
   13cc0:	bl	114a8 <fputc@plt>
   13cc4:	cmp	r6, #9
   13cc8:	ldrls	pc, [pc, r6, lsl #2]
   13ccc:	b	13eac <argp_parse@@Base+0xebc>
   13cd0:	andeq	r3, r1, r4, lsr #27
   13cd4:	andeq	r3, r1, r4, lsl #26
   13cd8:	andeq	r3, r1, ip, lsl sp
   13cdc:	andeq	r3, r1, r4, lsr sp
   13ce0:	andeq	r3, r1, r4, asr sp
   13ce4:	andeq	r3, r1, ip, ror sp
   13ce8:	andeq	r3, r1, ip, lsr #27
   13cec:	andeq	r3, r1, r0, ror #27
   13cf0:	andeq	r3, r1, ip, lsl lr
   13cf4:	andeq	r3, r1, r0, ror #28
   13cf8:	ldr	r1, [pc, #520]	; 13f08 <argp_parse@@Base+0xf18>
   13cfc:	bl	113e8 <fprintf@plt>
   13d00:	b	13c88 <argp_parse@@Base+0xc98>
   13d04:	ldr	r2, [r4]
   13d08:	ldr	r1, [pc, #508]	; 13f0c <argp_parse@@Base+0xf1c>
   13d0c:	mov	r0, r5
   13d10:	add	sp, sp, #32
   13d14:	pop	{r4, r5, r6, lr}
   13d18:	b	113e8 <fprintf@plt>
   13d1c:	ldm	r4, {r2, r3}
   13d20:	ldr	r1, [pc, #488]	; 13f10 <argp_parse@@Base+0xf20>
   13d24:	mov	r0, r5
   13d28:	add	sp, sp, #32
   13d2c:	pop	{r4, r5, r6, lr}
   13d30:	b	113e8 <fprintf@plt>
   13d34:	ldr	r3, [r4, #8]
   13d38:	ldr	r1, [pc, #468]	; 13f14 <argp_parse@@Base+0xf24>
   13d3c:	str	r3, [sp, #48]	; 0x30
   13d40:	mov	r0, r5
   13d44:	ldm	r4, {r2, r3}
   13d48:	add	sp, sp, #32
   13d4c:	pop	{r4, r5, r6, lr}
   13d50:	b	113e8 <fprintf@plt>
   13d54:	ldr	r3, [r4, #12]
   13d58:	ldr	r1, [pc, #440]	; 13f18 <argp_parse@@Base+0xf28>
   13d5c:	str	r3, [sp, #52]	; 0x34
   13d60:	ldr	r3, [r4, #8]
   13d64:	mov	r0, r5
   13d68:	str	r3, [sp, #48]	; 0x30
   13d6c:	ldm	r4, {r2, r3}
   13d70:	add	sp, sp, #32
   13d74:	pop	{r4, r5, r6, lr}
   13d78:	b	113e8 <fprintf@plt>
   13d7c:	ldr	r3, [r4, #16]
   13d80:	ldr	r1, [pc, #404]	; 13f1c <argp_parse@@Base+0xf2c>
   13d84:	str	r3, [sp, #8]
   13d88:	ldr	r3, [r4, #12]
   13d8c:	mov	r0, r5
   13d90:	str	r3, [sp, #4]
   13d94:	ldr	r3, [r4, #8]
   13d98:	str	r3, [sp]
   13d9c:	ldm	r4, {r2, r3}
   13da0:	bl	113e8 <fprintf@plt>
   13da4:	add	sp, sp, #32
   13da8:	pop	{r4, r5, r6, pc}
   13dac:	ldr	r3, [r4, #20]
   13db0:	ldr	r1, [pc, #360]	; 13f20 <argp_parse@@Base+0xf30>
   13db4:	str	r3, [sp, #12]
   13db8:	ldr	r3, [r4, #16]
   13dbc:	mov	r0, r5
   13dc0:	str	r3, [sp, #8]
   13dc4:	ldr	r3, [r4, #12]
   13dc8:	str	r3, [sp, #4]
   13dcc:	ldr	r3, [r4, #8]
   13dd0:	str	r3, [sp]
   13dd4:	ldm	r4, {r2, r3}
   13dd8:	bl	113e8 <fprintf@plt>
   13ddc:	b	13da4 <argp_parse@@Base+0xdb4>
   13de0:	ldr	r3, [r4, #24]
   13de4:	ldr	r1, [pc, #312]	; 13f24 <argp_parse@@Base+0xf34>
   13de8:	str	r3, [sp, #16]
   13dec:	ldr	r3, [r4, #20]
   13df0:	mov	r0, r5
   13df4:	str	r3, [sp, #12]
   13df8:	ldr	r3, [r4, #16]
   13dfc:	str	r3, [sp, #8]
   13e00:	ldr	r3, [r4, #12]
   13e04:	str	r3, [sp, #4]
   13e08:	ldr	r3, [r4, #8]
   13e0c:	str	r3, [sp]
   13e10:	ldm	r4, {r2, r3}
   13e14:	bl	113e8 <fprintf@plt>
   13e18:	b	13da4 <argp_parse@@Base+0xdb4>
   13e1c:	ldr	r3, [r4, #28]
   13e20:	ldr	r1, [pc, #256]	; 13f28 <argp_parse@@Base+0xf38>
   13e24:	str	r3, [sp, #20]
   13e28:	ldr	r3, [r4, #24]
   13e2c:	mov	r0, r5
   13e30:	str	r3, [sp, #16]
   13e34:	ldr	r3, [r4, #20]
   13e38:	str	r3, [sp, #12]
   13e3c:	ldr	r3, [r4, #16]
   13e40:	str	r3, [sp, #8]
   13e44:	ldr	r3, [r4, #12]
   13e48:	str	r3, [sp, #4]
   13e4c:	ldr	r3, [r4, #8]
   13e50:	str	r3, [sp]
   13e54:	ldm	r4, {r2, r3}
   13e58:	bl	113e8 <fprintf@plt>
   13e5c:	b	13da4 <argp_parse@@Base+0xdb4>
   13e60:	ldr	r3, [r4, #32]
   13e64:	ldr	r1, [pc, #192]	; 13f2c <argp_parse@@Base+0xf3c>
   13e68:	str	r3, [sp, #24]
   13e6c:	ldr	r3, [r4, #28]
   13e70:	str	r3, [sp, #20]
   13e74:	ldr	r3, [r4, #24]
   13e78:	str	r3, [sp, #16]
   13e7c:	ldr	r3, [r4, #20]
   13e80:	str	r3, [sp, #12]
   13e84:	ldr	r3, [r4, #16]
   13e88:	str	r3, [sp, #8]
   13e8c:	ldr	r3, [r4, #12]
   13e90:	str	r3, [sp, #4]
   13e94:	ldr	r3, [r4, #8]
   13e98:	str	r3, [sp]
   13e9c:	ldm	r4, {r2, r3}
   13ea0:	mov	r0, r5
   13ea4:	bl	113e8 <fprintf@plt>
   13ea8:	b	13da4 <argp_parse@@Base+0xdb4>
   13eac:	ldr	r3, [r4, #32]
   13eb0:	ldr	r1, [pc, #120]	; 13f30 <argp_parse@@Base+0xf40>
   13eb4:	str	r3, [sp, #24]
   13eb8:	ldr	r3, [r4, #28]
   13ebc:	str	r3, [sp, #20]
   13ec0:	ldr	r3, [r4, #24]
   13ec4:	str	r3, [sp, #16]
   13ec8:	ldr	r3, [r4, #20]
   13ecc:	str	r3, [sp, #12]
   13ed0:	ldr	r3, [r4, #16]
   13ed4:	str	r3, [sp, #8]
   13ed8:	ldr	r3, [r4, #12]
   13edc:	str	r3, [sp, #4]
   13ee0:	ldr	r3, [r4, #8]
   13ee4:	str	r3, [sp]
   13ee8:	ldm	r4, {r2, r3}
   13eec:	b	13ea0 <argp_parse@@Base+0xeb0>
   13ef0:	andeq	r8, r1, r2, asr lr
   13ef4:	andeq	r0, r0, r6, ror #15
   13ef8:	andeq	r8, r1, r5, ror #28
   13efc:	andeq	r9, r1, sl, asr r1
   13f00:	andeq	r8, r1, fp, lsl #29
   13f04:	andeq	r8, r1, r9, ror #28
   13f08:	andeq	r8, r1, lr, asr lr
   13f0c:	andeq	r8, r1, r6, lsr pc
   13f10:	andeq	r8, r1, r6, asr #30
   13f14:	andeq	r8, r1, sp, asr pc
   13f18:	andeq	r8, r1, r9, ror pc
   13f1c:	muleq	r1, r9, pc	; <UNPREDICTABLE>
   13f20:			; <UNDEFINED> instruction: 0x00018fbd
   13f24:	andeq	r8, r1, r5, ror #31
   13f28:	andeq	r9, r1, r1, lsl r0
   13f2c:	andeq	r9, r1, r1, asr #32
   13f30:	andeq	r9, r1, r5, ror r0
   13f34:	push	{r0, r1, r4, lr}
   13f38:	mov	ip, #0
   13f3c:	ldr	lr, [sp, #16]
   13f40:	ldr	r4, [lr, ip, lsl #2]
   13f44:	cmp	r4, #0
   13f48:	bne	13f60 <argp_parse@@Base+0xf70>
   13f4c:	str	ip, [sp, #4]
   13f50:	str	lr, [sp]
   13f54:	bl	13c58 <argp_parse@@Base+0xc68>
   13f58:	add	sp, sp, #8
   13f5c:	pop	{r4, pc}
   13f60:	add	ip, ip, #1
   13f64:	b	13f40 <argp_parse@@Base+0xf50>
   13f68:	push	{r4, r5, lr}
   13f6c:	sub	sp, sp, #52	; 0x34
   13f70:	mov	ip, #0
   13f74:	ldr	r5, [sp, #64]	; 0x40
   13f78:	add	lr, sp, #8
   13f7c:	ldr	r4, [r5, ip, lsl #2]
   13f80:	cmp	r4, #0
   13f84:	str	r4, [lr, ip, lsl #2]
   13f88:	beq	13f98 <argp_parse@@Base+0xfa8>
   13f8c:	add	ip, ip, #1
   13f90:	cmp	ip, #10
   13f94:	bne	13f7c <argp_parse@@Base+0xf8c>
   13f98:	str	ip, [sp, #4]
   13f9c:	str	lr, [sp]
   13fa0:	bl	13c58 <argp_parse@@Base+0xc68>
   13fa4:	add	sp, sp, #52	; 0x34
   13fa8:	pop	{r4, r5, pc}
   13fac:	push	{r3}		; (str r3, [sp, #-4]!)
   13fb0:	push	{r0, r1, r2, r3, lr}
   13fb4:	add	r3, sp, #24
   13fb8:	str	r3, [sp, #12]
   13fbc:	str	r3, [sp]
   13fc0:	ldr	r3, [sp, #20]
   13fc4:	bl	13f68 <argp_parse@@Base+0xf78>
   13fc8:	add	sp, sp, #16
   13fcc:	pop	{lr}		; (ldr lr, [sp], #4)
   13fd0:	add	sp, sp, #4
   13fd4:	bx	lr
   13fd8:	ldr	r3, [pc, #56]	; 14018 <argp_parse@@Base+0x1028>
   13fdc:	push	{r4, lr}
   13fe0:	mov	r0, #10
   13fe4:	ldr	r1, [r3]
   13fe8:	bl	114a8 <fputc@plt>
   13fec:	ldr	r1, [pc, #40]	; 1401c <argp_parse@@Base+0x102c>
   13ff0:	ldr	r0, [pc, #40]	; 14020 <argp_parse@@Base+0x1030>
   13ff4:	bl	11250 <printf@plt>
   13ff8:	ldr	r1, [pc, #36]	; 14024 <argp_parse@@Base+0x1034>
   13ffc:	ldr	r2, [pc, #36]	; 14028 <argp_parse@@Base+0x1038>
   14000:	ldr	r0, [pc, #36]	; 1402c <argp_parse@@Base+0x103c>
   14004:	bl	11250 <printf@plt>
   14008:	ldr	r1, [pc, #32]	; 14030 <argp_parse@@Base+0x1040>
   1400c:	ldr	r0, [pc, #32]	; 14034 <argp_parse@@Base+0x1044>
   14010:	pop	{r4, lr}
   14014:	b	11250 <printf@plt>
   14018:	strdeq	sl, [r2], -r4
   1401c:	strheq	r9, [r1], -r1
   14020:	andeq	r9, r1, r7, asr #1
   14024:	andeq	r8, r1, r0, lsl #28
   14028:	ldrdeq	r9, [r1], -fp
   1402c:	andeq	r9, r1, r2, lsl #2
   14030:	andeq	r9, r1, r6, lsl r1
   14034:	andeq	r9, r1, r3, lsr r1
   14038:	push	{r4, lr}
   1403c:	bl	14540 <argp_parse@@Base+0x1550>
   14040:	cmp	r0, #0
   14044:	popne	{r4, pc}
   14048:	bl	144cc <argp_parse@@Base+0x14dc>
   1404c:	push	{r4, lr}
   14050:	bl	14540 <argp_parse@@Base+0x1550>
   14054:	cmp	r0, #0
   14058:	popne	{r4, pc}
   1405c:	bl	144cc <argp_parse@@Base+0x14dc>
   14060:	b	14038 <argp_parse@@Base+0x1048>
   14064:	push	{r4, r5, r6, lr}
   14068:	mov	r5, r0
   1406c:	mov	r4, r1
   14070:	bl	14580 <argp_parse@@Base+0x1590>
   14074:	cmp	r0, #0
   14078:	popne	{r4, r5, r6, pc}
   1407c:	adds	r4, r4, #0
   14080:	movne	r4, #1
   14084:	cmp	r5, #0
   14088:	orreq	r4, r4, #1
   1408c:	cmp	r4, #0
   14090:	popeq	{r4, r5, r6, pc}
   14094:	bl	144cc <argp_parse@@Base+0x14dc>
   14098:	push	{r4, lr}
   1409c:	cmp	r1, #0
   140a0:	orreq	r1, r1, #1
   140a4:	bl	14580 <argp_parse@@Base+0x1590>
   140a8:	cmp	r0, #0
   140ac:	popne	{r4, pc}
   140b0:	bl	144cc <argp_parse@@Base+0x14dc>
   140b4:	push	{r4, r5, r6, lr}
   140b8:	mov	r6, r0
   140bc:	mov	r5, r1
   140c0:	mov	r4, r2
   140c4:	bl	17d14 <argp_error@@Base+0xb78>
   140c8:	cmp	r0, #0
   140cc:	popne	{r4, r5, r6, pc}
   140d0:	cmp	r6, #0
   140d4:	beq	140e4 <argp_parse@@Base+0x10f4>
   140d8:	cmp	r5, #0
   140dc:	cmpne	r4, #0
   140e0:	popeq	{r4, r5, r6, pc}
   140e4:	bl	144cc <argp_parse@@Base+0x14dc>
   140e8:	b	140b4 <argp_parse@@Base+0x10c4>
   140ec:	cmp	r2, #0
   140f0:	cmpne	r1, #0
   140f4:	moveq	r2, #1
   140f8:	moveq	r1, r2
   140fc:	push	{r4, lr}
   14100:	bl	17d14 <argp_error@@Base+0xb78>
   14104:	cmp	r0, #0
   14108:	popne	{r4, pc}
   1410c:	bl	144cc <argp_parse@@Base+0x14dc>
   14110:	mov	r2, r1
   14114:	mov	r1, r0
   14118:	mov	r0, #0
   1411c:	b	140b4 <argp_parse@@Base+0x10c4>
   14120:	mov	r2, r1
   14124:	mov	r1, r0
   14128:	mov	r0, #0
   1412c:	b	140ec <argp_parse@@Base+0x10fc>
   14130:	push	{r4, r5, r6, r7, r8, lr}
   14134:	subs	r7, r0, #0
   14138:	mov	r5, r1
   1413c:	mov	r6, r2
   14140:	ldr	r4, [r1]
   14144:	bne	14180 <argp_parse@@Base+0x1190>
   14148:	cmp	r4, #0
   1414c:	bne	14168 <argp_parse@@Base+0x1178>
   14150:	mov	r1, r2
   14154:	mov	r0, #64	; 0x40
   14158:	bl	18380 <argp_error@@Base+0x11e4>
   1415c:	cmp	r0, #0
   14160:	movne	r4, r0
   14164:	addeq	r4, r0, #1
   14168:	mov	r2, r6
   1416c:	mov	r1, r4
   14170:	mov	r0, r7
   14174:	bl	140b4 <argp_parse@@Base+0x10c4>
   14178:	str	r4, [r5]
   1417c:	pop	{r4, r5, r6, r7, r8, pc}
   14180:	lsr	r2, r4, #1
   14184:	add	r3, r2, #1
   14188:	mvn	r3, r3
   1418c:	cmp	r4, r3
   14190:	addls	r4, r4, #1
   14194:	addls	r4, r4, r2
   14198:	bls	14168 <argp_parse@@Base+0x1178>
   1419c:	bl	144cc <argp_parse@@Base+0x14dc>
   141a0:	mov	r2, #1
   141a4:	b	14130 <argp_parse@@Base+0x1140>
   141a8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141ac:	mov	sl, r0
   141b0:	ldr	r8, [r1]
   141b4:	mov	fp, r1
   141b8:	mov	r5, r2
   141bc:	asrs	r4, r8, #1
   141c0:	mov	r9, r3
   141c4:	ldr	r7, [sp, #48]	; 0x30
   141c8:	bpl	14264 <argp_parse@@Base+0x1274>
   141cc:	rsb	r2, r4, #-2147483648	; 0x80000000
   141d0:	cmp	r8, r2
   141d4:	movge	r2, #0
   141d8:	movlt	r2, #1
   141dc:	mvn	r3, r9
   141e0:	cmp	r2, #0
   141e4:	lsr	r3, r3, #31
   141e8:	addeq	r4, r4, r8
   141ec:	mvnne	r4, #-2147483648	; 0x80000000
   141f0:	mov	r0, r3
   141f4:	cmp	r9, r4
   141f8:	movge	r0, #0
   141fc:	andlt	r0, r0, #1
   14200:	cmp	r0, #0
   14204:	str	r3, [sp, #4]
   14208:	bne	143d8 <argp_parse@@Base+0x13e8>
   1420c:	cmp	r7, #0
   14210:	bge	14324 <argp_parse@@Base+0x1334>
   14214:	cmp	r4, #0
   14218:	bge	1427c <argp_parse@@Base+0x128c>
   1421c:	mov	r1, r7
   14220:	mvn	r0, #-2147483648	; 0x80000000
   14224:	bl	1858c <argp_error@@Base+0x13f0>
   14228:	cmp	r0, r4
   1422c:	movle	r0, #0
   14230:	movgt	r0, #1
   14234:	cmp	r0, #0
   14238:	mvnne	r6, #-2147483648	; 0x80000000
   1423c:	beq	1428c <argp_parse@@Base+0x129c>
   14240:	mov	r1, r7
   14244:	mov	r0, r6
   14248:	bl	1858c <argp_error@@Base+0x13f0>
   1424c:	mov	r1, r7
   14250:	mov	r4, r0
   14254:	mov	r0, r6
   14258:	bl	187ac <argp_error@@Base+0x1610>
   1425c:	sub	r1, r6, r1
   14260:	b	1429c <argp_parse@@Base+0x12ac>
   14264:	mvn	r2, #-2147483648	; 0x80000000
   14268:	sub	r2, r2, r4
   1426c:	cmp	r8, r2
   14270:	movle	r2, #0
   14274:	movgt	r2, #1
   14278:	b	141dc <argp_parse@@Base+0x11ec>
   1427c:	cmn	r7, #1
   14280:	movne	r1, r7
   14284:	movne	r0, #-2147483648	; 0x80000000
   14288:	bne	143f0 <argp_parse@@Base+0x1400>
   1428c:	mul	r1, r7, r4
   14290:	cmp	r1, #63	; 0x3f
   14294:	movle	r6, #64	; 0x40
   14298:	ble	14240 <argp_parse@@Base+0x1250>
   1429c:	cmp	sl, #0
   142a0:	sub	r2, r4, r8
   142a4:	streq	sl, [fp]
   142a8:	cmp	r2, r5
   142ac:	bge	14380 <argp_parse@@Base+0x1390>
   142b0:	cmp	r5, #0
   142b4:	bge	1434c <argp_parse@@Base+0x135c>
   142b8:	rsb	r2, r5, #-2147483648	; 0x80000000
   142bc:	cmp	r8, r2
   142c0:	movge	r2, #0
   142c4:	movlt	r2, #1
   142c8:	cmp	r2, #0
   142cc:	bne	14320 <argp_parse@@Base+0x1330>
   142d0:	ldr	r0, [sp, #4]
   142d4:	add	r5, r8, r5
   142d8:	cmp	r9, r5
   142dc:	movge	r0, #0
   142e0:	andlt	r0, r0, #1
   142e4:	cmp	r0, #0
   142e8:	mov	r4, r5
   142ec:	bne	14320 <argp_parse@@Base+0x1330>
   142f0:	cmp	r7, #0
   142f4:	bge	14394 <argp_parse@@Base+0x13a4>
   142f8:	cmp	r5, #0
   142fc:	bge	1436c <argp_parse@@Base+0x137c>
   14300:	mov	r1, r7
   14304:	mvn	r0, #-2147483648	; 0x80000000
   14308:	bl	1858c <argp_error@@Base+0x13f0>
   1430c:	cmp	r5, r0
   14310:	movge	r0, #0
   14314:	movlt	r0, #1
   14318:	cmp	r0, #0
   1431c:	beq	1437c <argp_parse@@Base+0x138c>
   14320:	bl	144cc <argp_parse@@Base+0x14dc>
   14324:	beq	1428c <argp_parse@@Base+0x129c>
   14328:	cmp	r4, #0
   1432c:	bge	143e8 <argp_parse@@Base+0x13f8>
   14330:	cmn	r4, #1
   14334:	beq	1428c <argp_parse@@Base+0x129c>
   14338:	mov	r1, r4
   1433c:	mov	r0, #-2147483648	; 0x80000000
   14340:	bl	1858c <argp_error@@Base+0x13f0>
   14344:	cmp	r7, r0
   14348:	b	1422c <argp_parse@@Base+0x123c>
   1434c:	cmp	r8, #0
   14350:	blt	142d0 <argp_parse@@Base+0x12e0>
   14354:	mvn	r2, #-2147483648	; 0x80000000
   14358:	sub	r2, r2, r5
   1435c:	cmp	r8, r2
   14360:	movle	r2, #0
   14364:	movgt	r2, #1
   14368:	b	142c8 <argp_parse@@Base+0x12d8>
   1436c:	cmn	r7, #1
   14370:	movne	r1, r7
   14374:	movne	r0, #-2147483648	; 0x80000000
   14378:	bne	143cc <argp_parse@@Base+0x13dc>
   1437c:	mul	r1, r5, r7
   14380:	mov	r0, sl
   14384:	bl	14064 <argp_parse@@Base+0x1074>
   14388:	str	r4, [fp]
   1438c:	add	sp, sp, #12
   14390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14394:	beq	1437c <argp_parse@@Base+0x138c>
   14398:	cmp	r5, #0
   1439c:	movge	r1, r7
   143a0:	mvnge	r0, #-2147483648	; 0x80000000
   143a4:	bge	143cc <argp_parse@@Base+0x13dc>
   143a8:	cmn	r5, #1
   143ac:	beq	1437c <argp_parse@@Base+0x138c>
   143b0:	mov	r1, r5
   143b4:	mov	r0, #-2147483648	; 0x80000000
   143b8:	bl	1858c <argp_error@@Base+0x13f0>
   143bc:	cmp	r7, r0
   143c0:	movle	r0, #0
   143c4:	movgt	r0, #1
   143c8:	b	14318 <argp_parse@@Base+0x1328>
   143cc:	bl	1858c <argp_error@@Base+0x13f0>
   143d0:	cmp	r5, r0
   143d4:	b	143c0 <argp_parse@@Base+0x13d0>
   143d8:	cmp	r7, #0
   143dc:	mov	r4, r9
   143e0:	blt	1427c <argp_parse@@Base+0x128c>
   143e4:	beq	1428c <argp_parse@@Base+0x129c>
   143e8:	mov	r1, r7
   143ec:	mvn	r0, #-2147483648	; 0x80000000
   143f0:	bl	1858c <argp_error@@Base+0x13f0>
   143f4:	cmp	r0, r4
   143f8:	movge	r0, #0
   143fc:	movlt	r0, #1
   14400:	b	14234 <argp_parse@@Base+0x1244>
   14404:	push	{r4, lr}
   14408:	bl	144f8 <argp_parse@@Base+0x1508>
   1440c:	cmp	r0, #0
   14410:	popne	{r4, pc}
   14414:	bl	144cc <argp_parse@@Base+0x14dc>
   14418:	mov	r1, #1
   1441c:	b	14404 <argp_parse@@Base+0x1414>
   14420:	push	{r4, lr}
   14424:	bl	144f8 <argp_parse@@Base+0x1508>
   14428:	cmp	r0, #0
   1442c:	popne	{r4, pc}
   14430:	bl	144cc <argp_parse@@Base+0x14dc>
   14434:	mov	r1, #1
   14438:	b	14420 <argp_parse@@Base+0x1430>
   1443c:	push	{r4, r5, r6, lr}
   14440:	mov	r4, r1
   14444:	mov	r5, r0
   14448:	mov	r0, r1
   1444c:	bl	14038 <argp_parse@@Base+0x1048>
   14450:	mov	r2, r4
   14454:	mov	r1, r5
   14458:	pop	{r4, r5, r6, lr}
   1445c:	b	112b0 <memcpy@plt>
   14460:	push	{r4, r5, r6, lr}
   14464:	mov	r4, r1
   14468:	mov	r5, r0
   1446c:	mov	r0, r1
   14470:	bl	1404c <argp_parse@@Base+0x105c>
   14474:	mov	r2, r4
   14478:	mov	r1, r5
   1447c:	pop	{r4, r5, r6, lr}
   14480:	b	112b0 <memcpy@plt>
   14484:	push	{r4, r5, r6, lr}
   14488:	mov	r5, r0
   1448c:	add	r0, r1, #1
   14490:	mov	r4, r1
   14494:	bl	1404c <argp_parse@@Base+0x105c>
   14498:	mov	r2, #0
   1449c:	mov	r1, r5
   144a0:	strb	r2, [r0, r4]
   144a4:	mov	r2, r4
   144a8:	pop	{r4, r5, r6, lr}
   144ac:	b	112b0 <memcpy@plt>
   144b0:	push	{r4, lr}
   144b4:	mov	r4, r0
   144b8:	bl	113d0 <strlen@plt>
   144bc:	add	r1, r0, #1
   144c0:	mov	r0, r4
   144c4:	pop	{r4, lr}
   144c8:	b	1443c <argp_parse@@Base+0x144c>
   144cc:	ldr	r3, [pc, #24]	; 144ec <argp_parse@@Base+0x14fc>
   144d0:	push	{r4, lr}
   144d4:	mov	r1, #0
   144d8:	ldr	r0, [r3]
   144dc:	ldr	r2, [pc, #12]	; 144f0 <argp_parse@@Base+0x1500>
   144e0:	ldr	r3, [pc, #12]	; 144f4 <argp_parse@@Base+0x1504>
   144e4:	bl	11340 <error@plt>
   144e8:	bl	11550 <abort@plt>
   144ec:	ldrdeq	sl, [r2], -r0
   144f0:	andeq	r9, r1, r3, lsr #7
   144f4:	andeq	r9, r1, r9, lsl #3
   144f8:	cmp	r1, #0
   144fc:	cmpne	r0, #0
   14500:	moveq	r1, #1
   14504:	moveq	r0, r1
   14508:	umull	r2, r3, r0, r1
   1450c:	adds	r3, r3, #0
   14510:	movne	r3, #1
   14514:	cmp	r2, #0
   14518:	blt	14528 <argp_parse@@Base+0x1538>
   1451c:	cmp	r3, #0
   14520:	bne	14528 <argp_parse@@Base+0x1538>
   14524:	b	11208 <calloc@plt>
   14528:	push	{r4, lr}
   1452c:	bl	113f4 <__errno_location@plt>
   14530:	mov	r3, #12
   14534:	str	r3, [r0]
   14538:	mov	r0, #0
   1453c:	pop	{r4, pc}
   14540:	cmp	r0, #0
   14544:	mov	r3, #0
   14548:	moveq	r0, #1
   1454c:	adds	r3, r3, #0
   14550:	movne	r3, #1
   14554:	cmp	r0, #0
   14558:	blt	14568 <argp_parse@@Base+0x1578>
   1455c:	cmp	r3, #0
   14560:	bne	14568 <argp_parse@@Base+0x1578>
   14564:	b	11370 <malloc@plt>
   14568:	push	{r4, lr}
   1456c:	bl	113f4 <__errno_location@plt>
   14570:	mov	r3, #12
   14574:	str	r3, [r0]
   14578:	mov	r0, #0
   1457c:	pop	{r4, pc}
   14580:	cmp	r0, #0
   14584:	push	{r4, lr}
   14588:	mov	r4, r1
   1458c:	bne	1459c <argp_parse@@Base+0x15ac>
   14590:	mov	r0, r1
   14594:	pop	{r4, lr}
   14598:	b	14540 <argp_parse@@Base+0x1550>
   1459c:	cmp	r1, #0
   145a0:	bne	145b0 <argp_parse@@Base+0x15c0>
   145a4:	bl	13a8c <argp_parse@@Base+0xa9c>
   145a8:	mov	r0, #0
   145ac:	pop	{r4, pc}
   145b0:	cmp	r1, #0
   145b4:	blt	145c4 <argp_parse@@Base+0x15d4>
   145b8:	mov	r3, #0
   145bc:	cmp	r3, r3
   145c0:	beq	145d4 <argp_parse@@Base+0x15e4>
   145c4:	bl	113f4 <__errno_location@plt>
   145c8:	mov	r3, #12
   145cc:	str	r3, [r0]
   145d0:	b	145a8 <argp_parse@@Base+0x15b8>
   145d4:	pop	{r4, lr}
   145d8:	b	112f8 <realloc@plt>
   145dc:	ldr	r2, [r0, #4]
   145e0:	ldr	r3, [r0]
   145e4:	cmp	r2, #0
   145e8:	add	r3, r3, #24
   145ec:	bne	145f8 <argp_parse@@Base+0x1608>
   145f0:	mov	r0, r2
   145f4:	bx	lr
   145f8:	ldr	r0, [r3, #-24]	; 0xffffffe8
   145fc:	cmp	r0, #0
   14600:	beq	14610 <argp_parse@@Base+0x1620>
   14604:	ldr	r1, [r3, #-12]
   14608:	tst	r1, #2
   1460c:	bxeq	lr
   14610:	sub	r2, r2, #1
   14614:	b	145e4 <argp_parse@@Base+0x15f4>
   14618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1461c:	mov	sl, r3
   14620:	ldm	r0, {r5, r6, r7}
   14624:	mov	r3, #0
   14628:	sub	sp, sp, #20
   1462c:	mov	r8, r1
   14630:	mov	r9, r2
   14634:	mov	r4, r5
   14638:	mov	fp, r3
   1463c:	adds	r2, r6, #0
   14640:	movne	r2, #1
   14644:	cmp	r3, #0
   14648:	movne	r2, #0
   1464c:	cmp	r2, #0
   14650:	bne	14660 <argp_parse@@Base+0x1670>
   14654:	mov	r0, r3
   14658:	add	sp, sp, #20
   1465c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14660:	ldr	r2, [r4, #12]
   14664:	ands	r3, r2, #8
   14668:	str	r2, [sp, #12]
   1466c:	movne	r3, fp
   14670:	bne	146b0 <argp_parse@@Base+0x16c0>
   14674:	ldr	r1, [r4, #4]
   14678:	sub	r0, r1, #1
   1467c:	cmp	r0, #254	; 0xfe
   14680:	str	r1, [sp, #8]
   14684:	bhi	146b0 <argp_parse@@Base+0x16c0>
   14688:	str	r3, [sp, #4]
   1468c:	bl	113b8 <__ctype_b_loc@plt>
   14690:	ldr	r1, [sp, #8]
   14694:	ldr	r3, [sp, #4]
   14698:	ldr	r2, [sp, #12]
   1469c:	ldr	ip, [r0]
   146a0:	lsl	r0, r1, #1
   146a4:	ldrh	r0, [ip, r0]
   146a8:	tst	r0, #16384	; 0x4000
   146ac:	bne	146bc <argp_parse@@Base+0x16cc>
   146b0:	add	r4, r4, #24
   146b4:	sub	r6, r6, #1
   146b8:	b	1463c <argp_parse@@Base+0x164c>
   146bc:	ldrb	r0, [r7]
   146c0:	cmp	r0, r1
   146c4:	bne	146b0 <argp_parse@@Base+0x16c0>
   146c8:	tst	r2, #4
   146cc:	moveq	r5, r4
   146d0:	tst	r2, #2
   146d4:	bne	146f0 <argp_parse@@Base+0x1700>
   146d8:	mov	r3, sl
   146dc:	mov	r2, r9
   146e0:	mov	r1, r5
   146e4:	mov	r0, r4
   146e8:	blx	r8
   146ec:	mov	r3, r0
   146f0:	add	r7, r7, #1
   146f4:	b	146b0 <argp_parse@@Base+0x16c0>
   146f8:	ldr	r3, [r0, #12]
   146fc:	ands	r3, r3, #8
   14700:	bne	14738 <argp_parse@@Base+0x1748>
   14704:	push	{r4, lr}
   14708:	ldr	r4, [r0, #4]
   1470c:	sub	r2, r4, #1
   14710:	cmp	r2, #254	; 0xfe
   14714:	bhi	14730 <argp_parse@@Base+0x1740>
   14718:	bl	113b8 <__ctype_b_loc@plt>
   1471c:	lsl	r3, r4, #1
   14720:	ldr	r2, [r0]
   14724:	ldrh	r3, [r2, r3]
   14728:	ands	r3, r3, #16384	; 0x4000
   1472c:	movne	r3, r4
   14730:	mov	r0, r3
   14734:	pop	{r4, pc}
   14738:	mov	r3, #0
   1473c:	mov	r0, r3
   14740:	bx	lr
   14744:	push	{r4, lr}
   14748:	mov	r4, r0
   1474c:	bl	113b8 <__ctype_b_loc@plt>
   14750:	ldr	r1, [r0]
   14754:	ldr	r3, [r4]
   14758:	ldrb	r0, [r3]
   1475c:	lsl	r2, r0, #1
   14760:	ldrh	r2, [r1, r2]
   14764:	tst	r2, #8192	; 0x2000
   14768:	bne	14798 <argp_parse@@Base+0x17a8>
   1476c:	subs	r0, r0, #45	; 0x2d
   14770:	movne	r0, #1
   14774:	ldr	r2, [r4]
   14778:	ldrb	r3, [r2]
   1477c:	cmp	r3, #0
   14780:	popeq	{r4, pc}
   14784:	lsl	r3, r3, #1
   14788:	ldrh	r3, [r1, r3]
   1478c:	tst	r3, #8
   14790:	beq	147a4 <argp_parse@@Base+0x17b4>
   14794:	pop	{r4, pc}
   14798:	add	r3, r3, #1
   1479c:	str	r3, [r4]
   147a0:	b	14754 <argp_parse@@Base+0x1764>
   147a4:	add	r2, r2, #1
   147a8:	str	r2, [r4]
   147ac:	b	14774 <argp_parse@@Base+0x1784>
   147b0:	push	{r4, r5, r6, lr}
   147b4:	mov	r4, r0
   147b8:	ldr	r0, [r0, #12]
   147bc:	cmp	r0, #0
   147c0:	bne	147ec <argp_parse@@Base+0x17fc>
   147c4:	ldr	r3, [r4, #4]
   147c8:	cmp	r3, #0
   147cc:	beq	147e0 <argp_parse@@Base+0x17f0>
   147d0:	ldr	r0, [r4]
   147d4:	bl	13a8c <argp_parse@@Base+0xa9c>
   147d8:	ldr	r0, [r4, #8]
   147dc:	bl	13a8c <argp_parse@@Base+0xa9c>
   147e0:	mov	r0, r4
   147e4:	pop	{r4, r5, r6, lr}
   147e8:	b	13a8c <argp_parse@@Base+0xa9c>
   147ec:	ldr	r5, [r0, #24]
   147f0:	bl	13a8c <argp_parse@@Base+0xa9c>
   147f4:	mov	r0, r5
   147f8:	b	147bc <argp_parse@@Base+0x17cc>
   147fc:	push	{r4, r5, r6, lr}
   14800:	ldr	r5, [r0, #16]
   14804:	ldr	r0, [r0, #8]
   14808:	cmp	r0, #0
   1480c:	beq	14820 <argp_parse@@Base+0x1830>
   14810:	mov	r1, #10
   14814:	bl	113dc <strchr@plt>
   14818:	adds	r0, r0, #0
   1481c:	movne	r0, #1
   14820:	cmp	r5, #0
   14824:	mov	r4, r0
   14828:	addne	r5, r5, #16
   1482c:	bne	14840 <argp_parse@@Base+0x1850>
   14830:	mov	r0, r4
   14834:	pop	{r4, r5, r6, pc}
   14838:	bl	147fc <argp_parse@@Base+0x180c>
   1483c:	add	r4, r4, r0
   14840:	add	r5, r5, #16
   14844:	ldr	r0, [r5, #-32]	; 0xffffffe0
   14848:	cmp	r0, #0
   1484c:	bne	14838 <argp_parse@@Base+0x1848>
   14850:	b	14830 <argp_parse@@Base+0x1840>
   14854:	ldr	r2, [r0, #24]
   14858:	ldr	r3, [r0, #28]
   1485c:	push	{r4, r5, r6, r7, r8, lr}
   14860:	sub	r3, r3, r2
   14864:	ldr	r2, [r0, #16]
   14868:	mov	r4, r0
   1486c:	cmp	r3, r2
   14870:	mov	r5, r1
   14874:	bls	1487c <argp_parse@@Base+0x188c>
   14878:	bl	17dd8 <argp_error@@Base+0xc3c>
   1487c:	ldr	r1, [r4, #20]
   14880:	mov	r6, #1
   14884:	cmp	r1, #0
   14888:	subge	r5, r5, r1
   1488c:	mov	r7, #32
   14890:	cmp	r5, #0
   14894:	bgt	1489c <argp_parse@@Base+0x18ac>
   14898:	pop	{r4, r5, r6, r7, r8, pc}
   1489c:	ldr	r2, [r4, #28]
   148a0:	ldr	r3, [r4, #32]
   148a4:	cmp	r2, r3
   148a8:	bcs	148c4 <argp_parse@@Base+0x18d4>
   148ac:	ldr	r3, [r4, #28]
   148b0:	add	r2, r3, #1
   148b4:	str	r2, [r4, #28]
   148b8:	strb	r7, [r3]
   148bc:	sub	r5, r5, #1
   148c0:	b	14890 <argp_parse@@Base+0x18a0>
   148c4:	mov	r1, r6
   148c8:	mov	r0, r4
   148cc:	bl	18228 <argp_error@@Base+0x108c>
   148d0:	cmp	r0, #0
   148d4:	bne	148ac <argp_parse@@Base+0x18bc>
   148d8:	b	148bc <argp_parse@@Base+0x18cc>
   148dc:	push	{r4, r5, r6, lr}
   148e0:	subs	r4, r2, #0
   148e4:	popeq	{r4, r5, r6, pc}
   148e8:	ldr	r2, [r4, #20]
   148ec:	cmp	r2, #0
   148f0:	popeq	{r4, r5, r6, pc}
   148f4:	mov	r6, r1
   148f8:	mov	r5, r0
   148fc:	mov	r1, r3
   14900:	mov	r0, r4
   14904:	bl	13968 <argp_parse@@Base+0x978>
   14908:	ldr	r3, [r4, #20]
   1490c:	mov	r1, r5
   14910:	mov	r2, r0
   14914:	mov	r0, r6
   14918:	pop	{r4, r5, r6, lr}
   1491c:	bx	r3
   14920:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14924:	mov	r4, r2
   14928:	ldr	r3, [r2, #16]
   1492c:	mov	r2, r1
   14930:	ldr	r1, [pc, #440]	; 14af0 <argp_parse@@Base+0x1b00>
   14934:	mov	r7, r0
   14938:	bl	148dc <argp_parse@@Base+0x18ec>
   1493c:	subs	r6, r0, #0
   14940:	beq	14a94 <argp_parse@@Base+0x1aa4>
   14944:	ldrb	r3, [r6]
   14948:	cmp	r3, #0
   1494c:	beq	14a88 <argp_parse@@Base+0x1a98>
   14950:	ldr	r3, [r4, #8]
   14954:	ldr	r3, [r3]
   14958:	cmp	r3, #0
   1495c:	beq	14988 <argp_parse@@Base+0x1998>
   14960:	ldr	r5, [r4, #4]
   14964:	ldr	r2, [r5, #28]
   14968:	ldr	r3, [r5, #32]
   1496c:	cmp	r2, r3
   14970:	bcs	14aa8 <argp_parse@@Base+0x1ab8>
   14974:	ldr	r3, [r5, #28]
   14978:	add	r2, r3, #1
   1497c:	str	r2, [r5, #28]
   14980:	mov	r2, #10
   14984:	strb	r2, [r3]
   14988:	ldr	r8, [pc, #356]	; 14af4 <argp_parse@@Base+0x1b04>
   1498c:	ldr	r0, [r4, #4]
   14990:	ldr	r1, [r8, #24]
   14994:	bl	14854 <argp_parse@@Base+0x1864>
   14998:	ldr	r9, [r4, #4]
   1499c:	ldr	sl, [r8, #24]
   149a0:	ldr	r2, [r9, #24]
   149a4:	ldr	r3, [r9, #28]
   149a8:	sub	r3, r3, r2
   149ac:	ldr	r2, [r9, #16]
   149b0:	cmp	r3, r2
   149b4:	bls	149c0 <argp_parse@@Base+0x19d0>
   149b8:	mov	r0, r9
   149bc:	bl	17dd8 <argp_error@@Base+0xc3c>
   149c0:	ldr	r5, [r4, #4]
   149c4:	str	sl, [r9, #4]
   149c8:	ldr	r8, [r8, #24]
   149cc:	ldr	r2, [r5, #24]
   149d0:	ldr	r3, [r5, #28]
   149d4:	sub	r3, r3, r2
   149d8:	ldr	r2, [r5, #16]
   149dc:	cmp	r3, r2
   149e0:	bls	149ec <argp_parse@@Base+0x19fc>
   149e4:	mov	r0, r5
   149e8:	bl	17dd8 <argp_error@@Base+0xc3c>
   149ec:	str	r8, [r5, #12]
   149f0:	mov	r0, r6
   149f4:	bl	113d0 <strlen@plt>
   149f8:	subs	r8, r0, #0
   149fc:	beq	14a34 <argp_parse@@Base+0x1a44>
   14a00:	ldr	r5, [r4, #4]
   14a04:	ldr	r3, [r5, #28]
   14a08:	ldr	r2, [r5, #32]
   14a0c:	add	r3, r3, r8
   14a10:	cmp	r2, r3
   14a14:	bcc	14ac0 <argp_parse@@Base+0x1ad0>
   14a18:	mov	r2, r8
   14a1c:	mov	r1, r6
   14a20:	ldr	r0, [r5, #28]
   14a24:	bl	112b0 <memcpy@plt>
   14a28:	ldr	r3, [r5, #28]
   14a2c:	add	r8, r3, r8
   14a30:	str	r8, [r5, #28]
   14a34:	ldr	r5, [r4, #4]
   14a38:	ldr	r2, [r5, #24]
   14a3c:	ldr	r3, [r5, #28]
   14a40:	sub	r3, r3, r2
   14a44:	ldr	r2, [r5, #16]
   14a48:	cmp	r3, r2
   14a4c:	bls	14a58 <argp_parse@@Base+0x1a68>
   14a50:	mov	r0, r5
   14a54:	bl	17dd8 <argp_error@@Base+0xc3c>
   14a58:	mov	r3, #0
   14a5c:	str	r3, [r5, #4]
   14a60:	ldr	r5, [r4, #4]
   14a64:	ldr	r2, [r5, #28]
   14a68:	ldr	r3, [r5, #32]
   14a6c:	cmp	r2, r3
   14a70:	bcs	14ad8 <argp_parse@@Base+0x1ae8>
   14a74:	ldr	r3, [r5, #28]
   14a78:	add	r2, r3, #1
   14a7c:	str	r2, [r5, #28]
   14a80:	mov	r2, #10
   14a84:	strb	r2, [r3]
   14a88:	ldr	r3, [r4, #8]
   14a8c:	mov	r2, #1
   14a90:	str	r2, [r3, #4]
   14a94:	cmp	r7, r6
   14a98:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a9c:	mov	r0, r6
   14aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14aa4:	b	13a8c <argp_parse@@Base+0xa9c>
   14aa8:	mov	r1, #1
   14aac:	mov	r0, r5
   14ab0:	bl	18228 <argp_error@@Base+0x108c>
   14ab4:	cmp	r0, #0
   14ab8:	bne	14974 <argp_parse@@Base+0x1984>
   14abc:	b	14988 <argp_parse@@Base+0x1998>
   14ac0:	mov	r1, r8
   14ac4:	mov	r0, r5
   14ac8:	bl	18228 <argp_error@@Base+0x108c>
   14acc:	cmp	r0, #0
   14ad0:	bne	14a18 <argp_parse@@Base+0x1a28>
   14ad4:	b	14a34 <argp_parse@@Base+0x1a44>
   14ad8:	mov	r1, #1
   14adc:	mov	r0, r5
   14ae0:	bl	18228 <argp_error@@Base+0x108c>
   14ae4:	cmp	r0, #0
   14ae8:	bne	14a74 <argp_parse@@Base+0x1a84>
   14aec:	b	14a88 <argp_parse@@Base+0x1a98>
   14af0:	andeq	r0, r0, #3
   14af4:	andeq	sl, r2, r8, lsr #5
   14af8:	ldr	r3, [r1, #12]
   14afc:	push	{r4, r5, r6, r7, r8, lr}
   14b00:	cmp	r3, #0
   14b04:	mov	r7, r0
   14b08:	mov	r4, r1
   14b0c:	beq	14c24 <argp_parse@@Base+0x1c34>
   14b10:	ldr	r2, [r1, #8]
   14b14:	ldr	r3, [r1]
   14b18:	ldr	r8, [r2]
   14b1c:	ldr	r2, [r2, #4]
   14b20:	ldr	r5, [r3, #16]
   14b24:	cmp	r2, #0
   14b28:	cmpne	r8, #0
   14b2c:	beq	14b68 <argp_parse@@Base+0x1b78>
   14b30:	ldr	r2, [r3, #12]
   14b34:	ldr	r3, [r8, #12]
   14b38:	cmp	r2, r3
   14b3c:	beq	14b68 <argp_parse@@Base+0x1b78>
   14b40:	ldr	r6, [r1, #4]
   14b44:	ldr	r2, [r6, #28]
   14b48:	ldr	r3, [r6, #32]
   14b4c:	cmp	r2, r3
   14b50:	bcs	14c04 <argp_parse@@Base+0x1c14>
   14b54:	ldr	r3, [r6, #28]
   14b58:	add	r2, r3, #1
   14b5c:	str	r2, [r6, #28]
   14b60:	mov	r2, #10
   14b64:	strb	r2, [r3]
   14b68:	cmp	r5, #0
   14b6c:	beq	14bec <argp_parse@@Base+0x1bfc>
   14b70:	ldr	r0, [r5]
   14b74:	cmp	r0, #0
   14b78:	beq	14bec <argp_parse@@Base+0x1bfc>
   14b7c:	ldrb	r3, [r0]
   14b80:	cmp	r3, #0
   14b84:	beq	14bec <argp_parse@@Base+0x1bfc>
   14b88:	cmp	r8, #0
   14b8c:	beq	14bb0 <argp_parse@@Base+0x1bc0>
   14b90:	ldr	r3, [r8, #16]
   14b94:	cmp	r5, r3
   14b98:	beq	14bec <argp_parse@@Base+0x1bfc>
   14b9c:	cmp	r3, #0
   14ba0:	cmpne	r5, r3
   14ba4:	bne	14c1c <argp_parse@@Base+0x1c2c>
   14ba8:	cmp	r5, r3
   14bac:	beq	14bec <argp_parse@@Base+0x1bfc>
   14bb0:	ldr	r3, [r4, #4]
   14bb4:	mov	r2, r4
   14bb8:	ldr	r1, [r5, #16]
   14bbc:	ldr	r6, [r3, #12]
   14bc0:	bl	14920 <argp_parse@@Base+0x1930>
   14bc4:	ldr	r5, [r4, #4]
   14bc8:	ldr	r2, [r5, #24]
   14bcc:	ldr	r3, [r5, #28]
   14bd0:	sub	r3, r3, r2
   14bd4:	ldr	r2, [r5, #16]
   14bd8:	cmp	r3, r2
   14bdc:	bls	14be8 <argp_parse@@Base+0x1bf8>
   14be0:	mov	r0, r5
   14be4:	bl	17dd8 <argp_error@@Base+0xc3c>
   14be8:	str	r6, [r5, #12]
   14bec:	mov	r3, #0
   14bf0:	str	r3, [r4, #12]
   14bf4:	mov	r1, r7
   14bf8:	ldr	r0, [r4, #4]
   14bfc:	pop	{r4, r5, r6, r7, r8, lr}
   14c00:	b	14854 <argp_parse@@Base+0x1864>
   14c04:	mov	r1, #1
   14c08:	mov	r0, r6
   14c0c:	bl	18228 <argp_error@@Base+0x108c>
   14c10:	cmp	r0, #0
   14c14:	bne	14b54 <argp_parse@@Base+0x1b64>
   14c18:	b	14b68 <argp_parse@@Base+0x1b78>
   14c1c:	ldr	r3, [r3, #12]
   14c20:	b	14b9c <argp_parse@@Base+0x1bac>
   14c24:	ldr	r5, [r1, #4]
   14c28:	ldr	r3, [r5, #28]
   14c2c:	ldr	r2, [r5, #32]
   14c30:	add	r3, r3, #2
   14c34:	cmp	r2, r3
   14c38:	bcc	14c5c <argp_parse@@Base+0x1c6c>
   14c3c:	ldr	r2, [pc, #48]	; 14c74 <argp_parse@@Base+0x1c84>
   14c40:	ldr	r3, [r5, #28]
   14c44:	ldrh	r2, [r2]
   14c48:	strh	r2, [r3]
   14c4c:	ldr	r3, [r5, #28]
   14c50:	add	r3, r3, #2
   14c54:	str	r3, [r5, #28]
   14c58:	b	14bf4 <argp_parse@@Base+0x1c04>
   14c5c:	mov	r1, #2
   14c60:	mov	r0, r5
   14c64:	bl	18228 <argp_error@@Base+0x108c>
   14c68:	cmp	r0, #0
   14c6c:	bne	14c3c <argp_parse@@Base+0x1c4c>
   14c70:	b	14bf4 <argp_parse@@Base+0x1c04>
   14c74:	andeq	r9, r1, lr, lsr r2
   14c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c7c:	sub	sp, sp, #28
   14c80:	ldr	r7, [r0, #12]
   14c84:	str	r3, [sp, #8]
   14c88:	cmp	r7, #0
   14c8c:	ldr	r3, [r0, #16]
   14c90:	moveq	r5, r7
   14c94:	mov	r8, r0
   14c98:	str	r1, [sp, #16]
   14c9c:	mov	fp, r2
   14ca0:	ldr	r4, [sp, #68]	; 0x44
   14ca4:	str	r3, [sp, #12]
   14ca8:	moveq	r6, r5
   14cac:	beq	14cec <argp_parse@@Base+0x1cfc>
   14cb0:	mov	r1, #11
   14cb4:	mov	r0, r7
   14cb8:	bl	113dc <strchr@plt>
   14cbc:	cmp	fp, #0
   14cc0:	moveq	r5, r7
   14cc4:	beq	14cd4 <argp_parse@@Base+0x1ce4>
   14cc8:	cmp	r0, #0
   14ccc:	addne	r5, r0, #1
   14cd0:	moveq	r5, r0
   14cd4:	cmp	r0, #0
   14cd8:	clz	r6, fp
   14cdc:	lsr	r6, r6, #5
   14ce0:	moveq	r6, #0
   14ce4:	cmp	r6, #0
   14ce8:	subne	r6, r0, r7
   14cec:	ldr	r9, [r8, #20]
   14cf0:	cmp	r9, #0
   14cf4:	moveq	sl, r5
   14cf8:	beq	14d4c <argp_parse@@Base+0x1d5c>
   14cfc:	cmp	r6, #0
   14d00:	beq	14d14 <argp_parse@@Base+0x1d24>
   14d04:	mov	r0, r5
   14d08:	mov	r1, r6
   14d0c:	bl	112a4 <strndup@plt>
   14d10:	mov	r5, r0
   14d14:	ldr	r1, [sp, #16]
   14d18:	mov	r0, r8
   14d1c:	bl	13968 <argp_parse@@Base+0x978>
   14d20:	ldr	ip, [pc, #928]	; 150c8 <argp_parse@@Base+0x20d8>
   14d24:	cmp	fp, #0
   14d28:	mov	r1, r5
   14d2c:	ldr	r3, [r8, #20]
   14d30:	mov	sl, r5
   14d34:	mov	r2, r0
   14d38:	mov	r9, r0
   14d3c:	ldr	r0, [pc, #904]	; 150cc <argp_parse@@Base+0x20dc>
   14d40:	movne	r0, ip
   14d44:	blx	r3
   14d48:	mov	r5, r0
   14d4c:	cmp	r5, #0
   14d50:	moveq	r7, r5
   14d54:	beq	14e0c <argp_parse@@Base+0x1e1c>
   14d58:	ldr	r3, [sp, #8]
   14d5c:	cmp	r3, #0
   14d60:	beq	14d88 <argp_parse@@Base+0x1d98>
   14d64:	ldr	r2, [r4, #28]
   14d68:	ldr	r3, [r4, #32]
   14d6c:	cmp	r2, r3
   14d70:	bcs	14f38 <argp_parse@@Base+0x1f48>
   14d74:	ldr	r3, [r4, #28]
   14d78:	add	r2, r3, #1
   14d7c:	str	r2, [r4, #28]
   14d80:	mov	r2, #10
   14d84:	strb	r2, [r3]
   14d88:	cmp	r6, #0
   14d8c:	sub	r3, r5, sl
   14d90:	clz	r3, r3
   14d94:	lsr	r3, r3, #5
   14d98:	moveq	r3, #0
   14d9c:	cmp	r3, #0
   14da0:	ldr	r3, [r4, #28]
   14da4:	beq	14f68 <argp_parse@@Base+0x1f78>
   14da8:	ldr	r2, [r4, #32]
   14dac:	add	r3, r3, r6
   14db0:	cmp	r2, r3
   14db4:	bcc	14f50 <argp_parse@@Base+0x1f60>
   14db8:	mov	r2, r6
   14dbc:	mov	r1, sl
   14dc0:	ldr	r0, [r4, #28]
   14dc4:	bl	112b0 <memcpy@plt>
   14dc8:	ldr	r3, [r4, #28]
   14dcc:	add	r3, r3, r6
   14dd0:	str	r3, [r4, #28]
   14dd4:	ldr	r2, [r4, #24]
   14dd8:	ldr	r3, [r4, #28]
   14ddc:	sub	r3, r3, r2
   14de0:	ldr	r2, [r4, #16]
   14de4:	cmp	r3, r2
   14de8:	bls	14df4 <argp_parse@@Base+0x1e04>
   14dec:	mov	r0, r4
   14df0:	bl	17dd8 <argp_error@@Base+0xc3c>
   14df4:	ldr	r3, [r4, #20]
   14df8:	ldr	r2, [r4, #4]
   14dfc:	bic	r3, r3, r3, asr #31
   14e00:	cmp	r2, r3
   14e04:	bcc	14fc8 <argp_parse@@Base+0x1fd8>
   14e08:	mov	r7, #1
   14e0c:	cmp	r5, #0
   14e10:	cmpne	r5, sl
   14e14:	beq	14e20 <argp_parse@@Base+0x1e30>
   14e18:	mov	r0, r5
   14e1c:	bl	13a8c <argp_parse@@Base+0xa9c>
   14e20:	cmp	sl, #0
   14e24:	cmpne	r6, #0
   14e28:	beq	14e40 <argp_parse@@Base+0x1e50>
   14e2c:	ldr	r3, [r8, #20]
   14e30:	cmp	r3, #0
   14e34:	beq	14f1c <argp_parse@@Base+0x1f2c>
   14e38:	mov	r0, sl
   14e3c:	bl	13a8c <argp_parse@@Base+0xa9c>
   14e40:	cmp	fp, #0
   14e44:	beq	14f1c <argp_parse@@Base+0x1f2c>
   14e48:	ldr	r3, [r8, #20]
   14e4c:	cmp	r3, #0
   14e50:	beq	14f1c <argp_parse@@Base+0x1f2c>
   14e54:	mov	r2, r9
   14e58:	mov	r1, #0
   14e5c:	ldr	r0, [pc, #620]	; 150d0 <argp_parse@@Base+0x20e0>
   14e60:	blx	r3
   14e64:	subs	r5, r0, #0
   14e68:	beq	14f1c <argp_parse@@Base+0x1f2c>
   14e6c:	ldr	r3, [sp, #8]
   14e70:	orrs	r3, r7, r3
   14e74:	beq	14e9c <argp_parse@@Base+0x1eac>
   14e78:	ldr	r2, [r4, #28]
   14e7c:	ldr	r3, [r4, #32]
   14e80:	cmp	r2, r3
   14e84:	bcs	15008 <argp_parse@@Base+0x2018>
   14e88:	ldr	r3, [r4, #28]
   14e8c:	add	r2, r3, #1
   14e90:	str	r2, [r4, #28]
   14e94:	mov	r2, #10
   14e98:	strb	r2, [r3]
   14e9c:	mov	r0, r5
   14ea0:	bl	113d0 <strlen@plt>
   14ea4:	subs	r6, r0, #0
   14ea8:	beq	14edc <argp_parse@@Base+0x1eec>
   14eac:	ldr	r3, [r4, #28]
   14eb0:	ldr	r2, [r4, #32]
   14eb4:	add	r3, r3, r6
   14eb8:	cmp	r2, r3
   14ebc:	bcc	15020 <argp_parse@@Base+0x2030>
   14ec0:	mov	r2, r6
   14ec4:	mov	r1, r5
   14ec8:	ldr	r0, [r4, #28]
   14ecc:	bl	112b0 <memcpy@plt>
   14ed0:	ldr	r3, [r4, #28]
   14ed4:	add	r6, r3, r6
   14ed8:	str	r6, [r4, #28]
   14edc:	mov	r0, r5
   14ee0:	bl	13a8c <argp_parse@@Base+0xa9c>
   14ee4:	ldr	r2, [r4, #24]
   14ee8:	ldr	r3, [r4, #28]
   14eec:	sub	r3, r3, r2
   14ef0:	ldr	r2, [r4, #16]
   14ef4:	cmp	r3, r2
   14ef8:	bls	14f04 <argp_parse@@Base+0x1f14>
   14efc:	mov	r0, r4
   14f00:	bl	17dd8 <argp_error@@Base+0xc3c>
   14f04:	ldr	r3, [r4, #20]
   14f08:	ldr	r2, [r4, #4]
   14f0c:	bic	r3, r3, r3, asr #31
   14f10:	cmp	r2, r3
   14f14:	bcc	15038 <argp_parse@@Base+0x2048>
   14f18:	mov	r7, #1
   14f1c:	ldr	r3, [sp, #12]
   14f20:	cmp	r3, #0
   14f24:	addne	r5, r3, #16
   14f28:	bne	150a4 <argp_parse@@Base+0x20b4>
   14f2c:	mov	r0, r7
   14f30:	add	sp, sp, #28
   14f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f38:	mov	r1, #1
   14f3c:	mov	r0, r4
   14f40:	bl	18228 <argp_error@@Base+0x108c>
   14f44:	cmp	r0, #0
   14f48:	bne	14d74 <argp_parse@@Base+0x1d84>
   14f4c:	b	14d88 <argp_parse@@Base+0x1d98>
   14f50:	mov	r1, r6
   14f54:	mov	r0, r4
   14f58:	bl	18228 <argp_error@@Base+0x108c>
   14f5c:	cmp	r0, #0
   14f60:	bne	14db8 <argp_parse@@Base+0x1dc8>
   14f64:	b	14dd4 <argp_parse@@Base+0x1de4>
   14f68:	mov	r0, r5
   14f6c:	str	r3, [sp, #20]
   14f70:	bl	113d0 <strlen@plt>
   14f74:	subs	r7, r0, #0
   14f78:	beq	14dd4 <argp_parse@@Base+0x1de4>
   14f7c:	ldr	r3, [sp, #20]
   14f80:	ldr	r2, [r4, #32]
   14f84:	add	r3, r3, r7
   14f88:	cmp	r2, r3
   14f8c:	bcc	14fb0 <argp_parse@@Base+0x1fc0>
   14f90:	mov	r2, r7
   14f94:	mov	r1, r5
   14f98:	ldr	r0, [r4, #28]
   14f9c:	bl	112b0 <memcpy@plt>
   14fa0:	ldr	r3, [r4, #28]
   14fa4:	add	r7, r3, r7
   14fa8:	str	r7, [r4, #28]
   14fac:	b	14dd4 <argp_parse@@Base+0x1de4>
   14fb0:	mov	r1, r7
   14fb4:	mov	r0, r4
   14fb8:	bl	18228 <argp_error@@Base+0x108c>
   14fbc:	cmp	r0, #0
   14fc0:	bne	14f90 <argp_parse@@Base+0x1fa0>
   14fc4:	b	14dd4 <argp_parse@@Base+0x1de4>
   14fc8:	ldr	r2, [r4, #28]
   14fcc:	ldr	r3, [r4, #32]
   14fd0:	cmp	r2, r3
   14fd4:	bcs	14ff0 <argp_parse@@Base+0x2000>
   14fd8:	ldr	r3, [r4, #28]
   14fdc:	add	r2, r3, #1
   14fe0:	str	r2, [r4, #28]
   14fe4:	mov	r2, #10
   14fe8:	strb	r2, [r3]
   14fec:	b	14e08 <argp_parse@@Base+0x1e18>
   14ff0:	mov	r1, #1
   14ff4:	mov	r0, r4
   14ff8:	bl	18228 <argp_error@@Base+0x108c>
   14ffc:	cmp	r0, #0
   15000:	bne	14fd8 <argp_parse@@Base+0x1fe8>
   15004:	b	14e08 <argp_parse@@Base+0x1e18>
   15008:	mov	r1, #1
   1500c:	mov	r0, r4
   15010:	bl	18228 <argp_error@@Base+0x108c>
   15014:	cmp	r0, #0
   15018:	bne	14e88 <argp_parse@@Base+0x1e98>
   1501c:	b	14e9c <argp_parse@@Base+0x1eac>
   15020:	mov	r1, r6
   15024:	mov	r0, r4
   15028:	bl	18228 <argp_error@@Base+0x108c>
   1502c:	cmp	r0, #0
   15030:	bne	14ec0 <argp_parse@@Base+0x1ed0>
   15034:	b	14edc <argp_parse@@Base+0x1eec>
   15038:	ldr	r2, [r4, #28]
   1503c:	ldr	r3, [r4, #32]
   15040:	cmp	r2, r3
   15044:	bcs	15060 <argp_parse@@Base+0x2070>
   15048:	ldr	r3, [r4, #28]
   1504c:	add	r2, r3, #1
   15050:	str	r2, [r4, #28]
   15054:	mov	r2, #10
   15058:	strb	r2, [r3]
   1505c:	b	14f18 <argp_parse@@Base+0x1f28>
   15060:	mov	r1, #1
   15064:	mov	r0, r4
   15068:	bl	18228 <argp_error@@Base+0x108c>
   1506c:	cmp	r0, #0
   15070:	bne	15048 <argp_parse@@Base+0x2058>
   15074:	b	14f18 <argp_parse@@Base+0x1f28>
   15078:	ldr	r3, [sp, #8]
   1507c:	str	r4, [sp, #4]
   15080:	orrs	r3, r7, r3
   15084:	ldr	r3, [sp, #64]	; 0x40
   15088:	mov	r2, fp
   1508c:	str	r3, [sp]
   15090:	ldr	r1, [sp, #16]
   15094:	movne	r3, #1
   15098:	moveq	r3, #0
   1509c:	bl	14c78 <argp_parse@@Base+0x1c88>
   150a0:	orr	r7, r7, r0
   150a4:	ldr	r0, [r5, #-16]
   150a8:	cmp	r0, #0
   150ac:	beq	14f2c <argp_parse@@Base+0x1f3c>
   150b0:	ldr	r3, [sp, #64]	; 0x40
   150b4:	add	r5, r5, #16
   150b8:	cmp	r7, #0
   150bc:	cmpne	r3, #0
   150c0:	beq	15078 <argp_parse@@Base+0x2088>
   150c4:	b	14f2c <argp_parse@@Base+0x1f3c>
   150c8:	andeq	r0, r0, #2
   150cc:	andeq	r0, r0, #1
   150d0:	andeq	r0, r0, #4
   150d4:	ldr	r2, [r0, #24]
   150d8:	ldr	r3, [r0, #28]
   150dc:	push	{r4, r5, r6, lr}
   150e0:	sub	r3, r3, r2
   150e4:	ldr	r2, [r0, #16]
   150e8:	mov	r4, r0
   150ec:	cmp	r3, r2
   150f0:	mov	r5, r1
   150f4:	bls	150fc <argp_parse@@Base+0x210c>
   150f8:	bl	17dd8 <argp_error@@Base+0xc3c>
   150fc:	ldr	r1, [r4, #20]
   15100:	ldr	r3, [r4, #8]
   15104:	cmp	r1, #0
   15108:	addge	r5, r5, r1
   1510c:	cmp	r5, r3
   15110:	ldr	r2, [r4, #28]
   15114:	ldr	r3, [r4, #32]
   15118:	bcc	15154 <argp_parse@@Base+0x2164>
   1511c:	cmp	r2, r3
   15120:	bcs	1513c <argp_parse@@Base+0x214c>
   15124:	ldr	r3, [r4, #28]
   15128:	add	r2, r3, #1
   1512c:	str	r2, [r4, #28]
   15130:	mov	r2, #10
   15134:	strb	r2, [r3]
   15138:	pop	{r4, r5, r6, pc}
   1513c:	mov	r1, #1
   15140:	mov	r0, r4
   15144:	bl	18228 <argp_error@@Base+0x108c>
   15148:	cmp	r0, #0
   1514c:	bne	15124 <argp_parse@@Base+0x2134>
   15150:	pop	{r4, r5, r6, pc}
   15154:	cmp	r2, r3
   15158:	bcs	15170 <argp_parse@@Base+0x2180>
   1515c:	ldr	r3, [r4, #28]
   15160:	add	r2, r3, #1
   15164:	str	r2, [r4, #28]
   15168:	mov	r2, #32
   1516c:	b	15134 <argp_parse@@Base+0x2144>
   15170:	mov	r1, #1
   15174:	mov	r0, r4
   15178:	bl	18228 <argp_error@@Base+0x108c>
   1517c:	cmp	r0, #0
   15180:	bne	1515c <argp_parse@@Base+0x216c>
   15184:	pop	{r4, r5, r6, pc}
   15188:	push	{r4, r5, r6, lr}
   1518c:	ldr	r5, [r0, #8]
   15190:	ldr	r2, [r0, #12]
   15194:	ldr	ip, [r1, #12]
   15198:	cmp	r5, #0
   1519c:	orr	r2, r2, ip
   151a0:	bne	151b0 <argp_parse@@Base+0x21c0>
   151a4:	ldr	r5, [r1, #8]
   151a8:	cmp	r5, #0
   151ac:	beq	151dc <argp_parse@@Base+0x21ec>
   151b0:	tst	r2, #16
   151b4:	bne	151dc <argp_parse@@Base+0x21ec>
   151b8:	tst	r2, #1
   151bc:	mov	r6, r3
   151c0:	mov	r4, r0
   151c4:	beq	151e4 <argp_parse@@Base+0x21f4>
   151c8:	ldr	r2, [r0, #4]
   151cc:	ldr	r1, [pc, #52]	; 15208 <argp_parse@@Base+0x2218>
   151d0:	mov	r3, r5
   151d4:	mov	r0, r6
   151d8:	bl	1830c <argp_error@@Base+0x1170>
   151dc:	mov	r0, #0
   151e0:	pop	{r4, r5, r6, pc}
   151e4:	mov	r0, r5
   151e8:	bl	113d0 <strlen@plt>
   151ec:	add	r1, r0, #6
   151f0:	mov	r0, r6
   151f4:	bl	150d4 <argp_parse@@Base+0x20e4>
   151f8:	mov	r3, r5
   151fc:	ldr	r2, [r4, #4]
   15200:	ldr	r1, [pc, #4]	; 1520c <argp_parse@@Base+0x221c>
   15204:	b	151d4 <argp_parse@@Base+0x21e4>
   15208:	andeq	r9, r1, r1, asr #4
   1520c:	andeq	r9, r1, ip, asr #4
   15210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15214:	mov	r6, r3
   15218:	sub	sp, sp, #36	; 0x24
   1521c:	ldr	r3, [r0, #16]
   15220:	str	r1, [sp, #20]
   15224:	str	r3, [sp, #12]
   15228:	ldr	r3, [r0, #8]
   1522c:	ldr	sl, [r2]
   15230:	str	r3, [sp, #16]
   15234:	mov	fp, r2
   15238:	mov	r3, r1
   1523c:	mov	r2, r0
   15240:	ldr	r1, [pc, #404]	; 153dc <argp_parse@@Base+0x23ec>
   15244:	ldr	r0, [sp, #16]
   15248:	ldr	r5, [sp, #72]	; 0x48
   1524c:	bl	148dc <argp_parse@@Base+0x18ec>
   15250:	subs	r8, r0, #0
   15254:	moveq	r7, r8
   15258:	moveq	r4, r8
   1525c:	beq	152f0 <argp_parse@@Base+0x2300>
   15260:	mov	r1, #10
   15264:	bl	11280 <strchrnul@plt>
   15268:	ldrb	r4, [r0]
   1526c:	mov	r7, r0
   15270:	cmp	r4, #0
   15274:	moveq	r9, r8
   15278:	beq	152a4 <argp_parse@@Base+0x22b4>
   1527c:	ldrb	r3, [sl]
   15280:	mov	r9, r8
   15284:	mov	r4, #0
   15288:	mov	r2, #10
   1528c:	cmp	r4, r3
   15290:	blt	15360 <argp_parse@@Base+0x2370>
   15294:	ldr	r3, [fp]
   15298:	mov	r4, #1
   1529c:	add	r3, r3, #1
   152a0:	str	r3, [fp]
   152a4:	add	r1, r7, #1
   152a8:	sub	r1, r1, r9
   152ac:	mov	r0, r5
   152b0:	bl	150d4 <argp_parse@@Base+0x20e4>
   152b4:	ldr	r2, [r5, #28]
   152b8:	sub	r3, r7, r9
   152bc:	ldr	r1, [r5, #32]
   152c0:	add	r2, r2, r3
   152c4:	cmp	r1, r2
   152c8:	bcc	1538c <argp_parse@@Base+0x239c>
   152cc:	mov	r2, r3
   152d0:	mov	r1, r9
   152d4:	ldr	r0, [r5, #28]
   152d8:	str	r3, [sp, #24]
   152dc:	bl	112b0 <memcpy@plt>
   152e0:	ldr	r2, [r5, #28]
   152e4:	ldr	r3, [sp, #24]
   152e8:	add	r3, r2, r3
   152ec:	str	r3, [r5, #28]
   152f0:	ldr	r3, [sp, #16]
   152f4:	cmp	r8, #0
   152f8:	cmpne	r3, r8
   152fc:	beq	15308 <argp_parse@@Base+0x2318>
   15300:	mov	r0, r8
   15304:	bl	13a8c <argp_parse@@Base+0xa9c>
   15308:	ldr	r3, [sp, #12]
   1530c:	cmp	r3, #0
   15310:	addne	r8, r3, #16
   15314:	bne	153c8 <argp_parse@@Base+0x23d8>
   15318:	cmp	r6, #0
   1531c:	moveq	r4, #0
   15320:	andne	r4, r4, #1
   15324:	cmp	r4, #0
   15328:	beq	15350 <argp_parse@@Base+0x2360>
   1532c:	ldrb	r2, [r7]
   15330:	ldrb	r3, [sl]
   15334:	cmp	r2, #0
   15338:	addne	r3, r3, #1
   1533c:	strbne	r3, [sl]
   15340:	movne	r6, #0
   15344:	bne	15350 <argp_parse@@Base+0x2360>
   15348:	cmp	r3, #0
   1534c:	strbne	r2, [sl]
   15350:	clz	r0, r6
   15354:	lsr	r0, r0, #5
   15358:	add	sp, sp, #36	; 0x24
   1535c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15360:	add	r9, r7, #1
   15364:	mov	r1, r2
   15368:	mov	r0, r9
   1536c:	str	r3, [sp, #28]
   15370:	str	r2, [sp, #24]
   15374:	bl	11280 <strchrnul@plt>
   15378:	add	r4, r4, #1
   1537c:	ldr	r3, [sp, #28]
   15380:	ldr	r2, [sp, #24]
   15384:	mov	r7, r0
   15388:	b	1528c <argp_parse@@Base+0x229c>
   1538c:	mov	r1, r3
   15390:	mov	r0, r5
   15394:	str	r3, [sp, #24]
   15398:	bl	18228 <argp_error@@Base+0x108c>
   1539c:	ldr	r3, [sp, #24]
   153a0:	cmp	r0, #0
   153a4:	bne	152cc <argp_parse@@Base+0x22dc>
   153a8:	b	152f0 <argp_parse@@Base+0x2300>
   153ac:	mov	r3, r6
   153b0:	str	r5, [sp]
   153b4:	mov	r2, fp
   153b8:	ldr	r1, [sp, #20]
   153bc:	bl	15210 <argp_parse@@Base+0x2220>
   153c0:	clz	r6, r0
   153c4:	lsr	r6, r6, #5
   153c8:	add	r8, r8, #16
   153cc:	ldr	r0, [r8, #-32]	; 0xffffffe0
   153d0:	cmp	r0, #0
   153d4:	bne	153ac <argp_parse@@Base+0x23bc>
   153d8:	b	15318 <argp_parse@@Base+0x2328>
   153dc:	andeq	r0, r0, #6
   153e0:	ldr	r2, [r0, #8]
   153e4:	cmp	r2, #0
   153e8:	bne	1541c <argp_parse@@Base+0x242c>
   153ec:	ldr	r2, [r1, #8]
   153f0:	cmp	r2, #0
   153f4:	bne	1541c <argp_parse@@Base+0x242c>
   153f8:	ldr	r1, [r1, #12]
   153fc:	ldr	r2, [r0, #12]
   15400:	orr	r2, r2, r1
   15404:	tst	r2, #16
   15408:	ldreq	r2, [r3]
   1540c:	addeq	r1, r2, #1
   15410:	streq	r1, [r3]
   15414:	ldreq	r3, [r0, #4]
   15418:	strbeq	r3, [r2]
   1541c:	mov	r0, #0
   15420:	bx	lr
   15424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15428:	add	fp, sp, #32
   1542c:	sub	sp, sp, #12
   15430:	ldr	r6, [r0, #4]
   15434:	cmp	r6, #0
   15438:	beq	154dc <argp_parse@@Base+0x24ec>
   1543c:	mov	r5, r0
   15440:	ldr	r0, [r0, #8]
   15444:	mov	r4, r1
   15448:	bl	113d0 <strlen@plt>
   1544c:	ldr	sl, [pc, #324]	; 15598 <argp_parse@@Base+0x25a8>
   15450:	ldr	r7, [r5]
   15454:	sub	r9, fp, #36	; 0x24
   15458:	add	r0, r0, #15
   1545c:	bic	r0, r0, #7
   15460:	sub	sp, sp, r0
   15464:	mov	r8, sp
   15468:	str	sp, [r9, #-4]!
   1546c:	ldr	r2, [r7, #20]
   15470:	mov	r0, r7
   15474:	mov	r3, r9
   15478:	ldr	r2, [r2, #24]
   1547c:	mov	r1, sl
   15480:	bl	14618 <argp_parse@@Base+0x1628>
   15484:	subs	r6, r6, #1
   15488:	add	r7, r7, #28
   1548c:	bne	1546c <argp_parse@@Base+0x247c>
   15490:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15494:	cmp	r8, r3
   15498:	bcs	154b8 <argp_parse@@Base+0x24c8>
   1549c:	add	r2, r3, #1
   154a0:	str	r2, [fp, #-40]	; 0xffffffd8
   154a4:	ldr	r1, [pc, #240]	; 1559c <argp_parse@@Base+0x25ac>
   154a8:	strb	r6, [r3]
   154ac:	mov	r2, r8
   154b0:	mov	r0, r4
   154b4:	bl	1830c <argp_error@@Base+0x1170>
   154b8:	ldm	r5, {r6, r7}
   154bc:	ldr	r8, [pc, #220]	; 155a0 <argp_parse@@Base+0x25b0>
   154c0:	cmp	r7, #0
   154c4:	bne	154e4 <argp_parse@@Base+0x24f4>
   154c8:	ldm	r5, {r5, r8}
   154cc:	ldr	sl, [pc, #208]	; 155a4 <argp_parse@@Base+0x25b4>
   154d0:	add	r5, r5, #28
   154d4:	cmp	r8, #0
   154d8:	bne	15508 <argp_parse@@Base+0x2518>
   154dc:	sub	sp, fp, #32
   154e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154e4:	ldr	r2, [r6, #20]
   154e8:	mov	r0, r6
   154ec:	mov	r3, r4
   154f0:	ldr	r2, [r2, #24]
   154f4:	mov	r1, r8
   154f8:	bl	14618 <argp_parse@@Base+0x1628>
   154fc:	add	r6, r6, #28
   15500:	sub	r7, r7, #1
   15504:	b	154c0 <argp_parse@@Base+0x24d0>
   15508:	ldr	r7, [r5, #-28]	; 0xffffffe4
   1550c:	ldr	r9, [r5, #-24]	; 0xffffffe8
   15510:	mov	r6, r7
   15514:	cmp	r9, #0
   15518:	subeq	r8, r8, #1
   1551c:	addeq	r5, r5, #28
   15520:	beq	154d4 <argp_parse@@Base+0x24e4>
   15524:	ldr	r2, [r6]
   15528:	cmp	r2, #0
   1552c:	beq	1557c <argp_parse@@Base+0x258c>
   15530:	ldr	r1, [r6, #12]
   15534:	tst	r1, #4
   15538:	moveq	r7, r6
   1553c:	tst	r1, #2
   15540:	bne	1557c <argp_parse@@Base+0x258c>
   15544:	ldr	r3, [r6, #8]
   15548:	ldr	r0, [r7, #12]
   1554c:	cmp	r3, #0
   15550:	orr	r1, r1, r0
   15554:	ldreq	r3, [r7, #8]
   15558:	tst	r1, #16
   1555c:	bne	1557c <argp_parse@@Base+0x258c>
   15560:	cmp	r3, #0
   15564:	beq	15588 <argp_parse@@Base+0x2598>
   15568:	tst	r1, #1
   1556c:	movne	r1, sl
   15570:	ldreq	r1, [pc, #48]	; 155a8 <argp_parse@@Base+0x25b8>
   15574:	mov	r0, r4
   15578:	bl	1830c <argp_error@@Base+0x1170>
   1557c:	add	r6, r6, #24
   15580:	sub	r9, r9, #1
   15584:	b	15514 <argp_parse@@Base+0x2524>
   15588:	ldr	r1, [pc, #28]	; 155ac <argp_parse@@Base+0x25bc>
   1558c:	mov	r0, r4
   15590:	bl	1830c <argp_error@@Base+0x1170>
   15594:	b	1557c <argp_parse@@Base+0x258c>
   15598:	andeq	r5, r1, r0, ror #7
   1559c:	andeq	r9, r1, r5, asr r2
   155a0:	andeq	r5, r1, r8, lsl #3
   155a4:	andeq	r9, r1, ip, asr r2
   155a8:	andeq	r9, r1, r9, ror #4
   155ac:	andeq	r9, r1, r4, ror r2
   155b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   155b4:	mov	r8, r1
   155b8:	ldm	r0, {r5, r6}
   155bc:	cmp	r6, #0
   155c0:	bne	155c8 <argp_parse@@Base+0x25d8>
   155c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155c8:	ldm	r5, {r4, r9}
   155cc:	mov	r7, #0
   155d0:	add	r4, r4, #24
   155d4:	cmp	r9, r7
   155d8:	subeq	r6, r6, #1
   155dc:	addeq	r5, r5, #28
   155e0:	beq	155bc <argp_parse@@Base+0x25cc>
   155e4:	ldr	r0, [r4, #-24]	; 0xffffffe8
   155e8:	cmp	r0, #0
   155ec:	beq	1560c <argp_parse@@Base+0x261c>
   155f0:	ldr	r3, [r4, #-12]
   155f4:	tst	r3, #2
   155f8:	bne	1560c <argp_parse@@Base+0x261c>
   155fc:	mov	r1, r8
   15600:	bl	11244 <strcmp@plt>
   15604:	cmp	r0, #0
   15608:	beq	15618 <argp_parse@@Base+0x2628>
   1560c:	add	r7, r7, #1
   15610:	add	r4, r4, #24
   15614:	b	155d4 <argp_parse@@Base+0x25e4>
   15618:	mvn	r3, #0
   1561c:	str	r3, [r5, #12]
   15620:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15624:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15628:	sub	sp, sp, #44	; 0x2c
   1562c:	ldr	r6, [r0, #16]
   15630:	str	r0, [sp, #8]
   15634:	ldr	r5, [r0]
   15638:	mov	r0, #16
   1563c:	mov	r9, r1
   15640:	bl	14540 <argp_parse@@Base+0x1550>
   15644:	subs	r4, r0, #0
   15648:	bne	15660 <argp_parse@@Base+0x2670>
   1564c:	ldr	r3, [pc, #1444]	; 15bf8 <argp_parse@@Base+0x2c08>
   15650:	ldr	r2, [pc, #1444]	; 15bfc <argp_parse@@Base+0x2c0c>
   15654:	ldr	r1, [pc, #1444]	; 15c00 <argp_parse@@Base+0x2c10>
   15658:	ldr	r0, [pc, #1444]	; 15c04 <argp_parse@@Base+0x2c14>
   1565c:	bl	11598 <__assert_fail@plt>
   15660:	mov	r3, #0
   15664:	cmp	r5, r3
   15668:	str	r3, [r4, #4]
   1566c:	str	r3, [r4, #12]
   15670:	beq	15bc4 <argp_parse@@Base+0x2bd4>
   15674:	ldr	r8, [r5, #12]
   15678:	ands	r8, r8, #4
   1567c:	addeq	r7, r5, #24
   15680:	moveq	fp, r8
   15684:	beq	15a2c <argp_parse@@Base+0x2a3c>
   15688:	ldr	r3, [pc, #1384]	; 15bf8 <argp_parse@@Base+0x2c08>
   1568c:	mov	r2, #460	; 0x1cc
   15690:	ldr	r1, [pc, #1384]	; 15c00 <argp_parse@@Base+0x2c10>
   15694:	ldr	r0, [pc, #1388]	; 15c08 <argp_parse@@Base+0x2c18>
   15698:	b	1565c <argp_parse@@Base+0x266c>
   1569c:	ldr	r2, [pc, #1384]	; 15c0c <argp_parse@@Base+0x2c1c>
   156a0:	ldr	r0, [r4, #4]
   156a4:	cmp	r0, r2
   156a8:	addls	r7, r7, #28
   156ac:	movls	sl, r3
   156b0:	movls	r2, r1
   156b4:	bls	15b90 <argp_parse@@Base+0x2ba0>
   156b8:	ldr	r3, [pc, #1336]	; 15bf8 <argp_parse@@Base+0x2c08>
   156bc:	mov	r2, #476	; 0x1dc
   156c0:	ldr	r1, [pc, #1336]	; 15c00 <argp_parse@@Base+0x2c10>
   156c4:	ldr	r0, [pc, #1348]	; 15c10 <argp_parse@@Base+0x2c20>
   156c8:	b	1565c <argp_parse@@Base+0x266c>
   156cc:	ldrb	r0, [r0]
   156d0:	add	r1, r1, #1
   156d4:	cmp	r0, r8
   156d8:	beq	15b54 <argp_parse@@Base+0x2b64>
   156dc:	cmp	sl, r1
   156e0:	mov	r0, r1
   156e4:	bhi	156cc <argp_parse@@Base+0x26dc>
   156e8:	strb	r8, [sl]
   156ec:	add	sl, sl, #1
   156f0:	b	15b54 <argp_parse@@Base+0x2b64>
   156f4:	ldr	r8, [r6, #-4]
   156f8:	ldr	r7, [r6, #-8]
   156fc:	cmp	r8, #0
   15700:	bne	15710 <argp_parse@@Base+0x2720>
   15704:	cmp	r7, #0
   15708:	moveq	r1, r9
   1570c:	beq	1576c <argp_parse@@Base+0x277c>
   15710:	ldr	r3, [sp, #8]
   15714:	sub	r5, r6, #16
   15718:	mov	r0, #28
   1571c:	ldr	r3, [r3, #16]
   15720:	sub	r5, r5, r3
   15724:	bl	14540 <argp_parse@@Base+0x1550>
   15728:	asr	r5, r5, #4
   1572c:	subs	r1, r0, #0
   15730:	beq	1576c <argp_parse@@Base+0x277c>
   15734:	ldr	r3, [sp, #8]
   15738:	cmp	r9, #0
   1573c:	str	r3, [r1, #16]
   15740:	ldrne	r3, [r9, #20]
   15744:	moveq	r3, #0
   15748:	addne	r3, r3, #1
   1574c:	str	r3, [r1, #20]
   15750:	ldr	r3, [r4, #12]
   15754:	str	r8, [r1, #8]
   15758:	str	r7, [r1]
   1575c:	str	r5, [r1, #4]
   15760:	str	r9, [r1, #12]
   15764:	str	r3, [r1, #24]
   15768:	str	r1, [r4, #12]
   1576c:	ldr	r0, [r6, #-16]
   15770:	bl	15624 <argp_parse@@Base+0x2634>
   15774:	ldr	r2, [sp, #28]
   15778:	ldr	r3, [r4, #12]
   1577c:	mov	r5, r0
   15780:	cmp	r3, #0
   15784:	bne	157e0 <argp_parse@@Base+0x27f0>
   15788:	ldr	r1, [r5, #12]
   1578c:	str	r1, [r2]
   15790:	ldr	r2, [r5, #4]
   15794:	str	r3, [r5, #12]
   15798:	cmp	r2, #0
   1579c:	beq	157c4 <argp_parse@@Base+0x27d4>
   157a0:	ldr	r1, [r4, #4]
   157a4:	cmp	r1, #0
   157a8:	bne	157ec <argp_parse@@Base+0x27fc>
   157ac:	str	r2, [r4, #4]
   157b0:	ldr	r2, [r5]
   157b4:	str	r2, [r4]
   157b8:	ldr	r2, [r5, #8]
   157bc:	str	r2, [r4, #8]
   157c0:	str	r3, [r5, #4]
   157c4:	mov	r0, r5
   157c8:	bl	147b0 <argp_parse@@Base+0x17c0>
   157cc:	add	r6, r6, #16
   157d0:	ldr	r3, [r6, #-16]
   157d4:	cmp	r3, #0
   157d8:	bne	156f4 <argp_parse@@Base+0x2704>
   157dc:	b	15bd8 <argp_parse@@Base+0x2be8>
   157e0:	add	r2, r3, #24
   157e4:	ldr	r3, [r3, #24]
   157e8:	b	15780 <argp_parse@@Base+0x2790>
   157ec:	add	r3, r2, r1
   157f0:	mov	r7, #28
   157f4:	str	r3, [sp, #12]
   157f8:	mul	r0, r7, r3
   157fc:	bl	14540 <argp_parse@@Base+0x1550>
   15800:	str	r0, [sp]
   15804:	ldr	r0, [r4, #8]
   15808:	bl	113d0 <strlen@plt>
   1580c:	mov	fp, r0
   15810:	ldr	r0, [r5, #8]
   15814:	bl	113d0 <strlen@plt>
   15818:	add	r0, fp, r0
   1581c:	add	r0, r0, #1
   15820:	bl	14540 <argp_parse@@Base+0x1550>
   15824:	ldr	r3, [sp]
   15828:	cmp	r3, #0
   1582c:	cmpne	r0, #0
   15830:	mov	r8, r0
   15834:	ldreq	r3, [pc, #984]	; 15c14 <argp_parse@@Base+0x2c24>
   15838:	ldreq	r2, [pc, #984]	; 15c18 <argp_parse@@Base+0x2c28>
   1583c:	ldreq	r1, [pc, #956]	; 15c00 <argp_parse@@Base+0x2c10>
   15840:	ldreq	r0, [pc, #980]	; 15c1c <argp_parse@@Base+0x2c2c>
   15844:	beq	1565c <argp_parse@@Base+0x266c>
   15848:	ldr	r3, [sp, #12]
   1584c:	ldr	r2, [pc, #952]	; 15c0c <argp_parse@@Base+0x2c1c>
   15850:	cmp	r3, r2
   15854:	ldrhi	r3, [pc, #952]	; 15c14 <argp_parse@@Base+0x2c24>
   15858:	movhi	r2, #972	; 0x3cc
   1585c:	ldrhi	r1, [pc, #924]	; 15c00 <argp_parse@@Base+0x2c10>
   15860:	ldrhi	r0, [pc, #952]	; 15c20 <argp_parse@@Base+0x2c30>
   15864:	bhi	1565c <argp_parse@@Base+0x266c>
   15868:	ldr	sl, [r4, #4]
   1586c:	ldr	r3, [r4]
   15870:	ldr	r0, [sp]
   15874:	str	r3, [sp, #16]
   15878:	mul	r3, r7, sl
   1587c:	ldr	r1, [sp, #16]
   15880:	mov	r2, r3
   15884:	str	r3, [sp, #24]
   15888:	bl	113ac <mempcpy@plt>
   1588c:	ldr	r3, [r5, #4]
   15890:	ldr	r1, [r5]
   15894:	str	r3, [sp, #4]
   15898:	mul	r2, r7, r3
   1589c:	bl	112b0 <memcpy@plt>
   158a0:	ldr	r3, [r4, #8]
   158a4:	mov	r2, fp
   158a8:	mov	r1, r3
   158ac:	mov	r0, r8
   158b0:	str	r3, [sp, #20]
   158b4:	bl	112b0 <memcpy@plt>
   158b8:	ldr	r1, [sp]
   158bc:	ldr	r3, [sp, #20]
   158c0:	cmp	sl, #0
   158c4:	bne	15920 <argp_parse@@Base+0x2930>
   158c8:	add	r3, r8, fp
   158cc:	str	r3, [sp, #20]
   158d0:	ldr	r3, [sp, #24]
   158d4:	ldr	r1, [r5, #8]
   158d8:	add	r7, r3, #28
   158dc:	ldr	r3, [sp]
   158e0:	ldr	sl, [sp, #20]
   158e4:	add	r7, r3, r7
   158e8:	ldr	r3, [sp, #4]
   158ec:	cmp	r3, #0
   158f0:	bne	1593c <argp_parse@@Base+0x294c>
   158f4:	ldrb	r3, [sp, #4]
   158f8:	ldr	r0, [sp, #16]
   158fc:	strb	r3, [sl]
   15900:	bl	13a8c <argp_parse@@Base+0xa9c>
   15904:	ldr	r0, [r4, #8]
   15908:	bl	13a8c <argp_parse@@Base+0xa9c>
   1590c:	ldr	r3, [sp]
   15910:	str	r3, [r4]
   15914:	ldr	r3, [sp, #12]
   15918:	stmib	r4, {r3, r8}
   1591c:	b	157c4 <argp_parse@@Base+0x27d4>
   15920:	ldr	r2, [r1, #8]
   15924:	sub	sl, sl, #1
   15928:	sub	r2, r2, r3
   1592c:	add	r2, r8, r2
   15930:	str	r2, [r1, #8]
   15934:	add	r1, r1, #28
   15938:	b	158c0 <argp_parse@@Base+0x28d0>
   1593c:	ldr	r3, [r7, #-24]	; 0xffffffe8
   15940:	ldr	fp, [r7, #-28]	; 0xffffffe4
   15944:	str	sl, [r7, #-20]	; 0xffffffec
   15948:	cmp	r3, #0
   1594c:	ldreq	r3, [sp, #4]
   15950:	addeq	r7, r7, #28
   15954:	subeq	r3, r3, #1
   15958:	streq	r3, [sp, #4]
   1595c:	beq	158e8 <argp_parse@@Base+0x28f8>
   15960:	ldr	r2, [fp, #12]
   15964:	tst	r2, #8
   15968:	bne	159ac <argp_parse@@Base+0x29bc>
   1596c:	ldr	r2, [fp, #4]
   15970:	sub	r0, r2, #1
   15974:	cmp	r0, #254	; 0xfe
   15978:	str	r2, [sp, #36]	; 0x24
   1597c:	bhi	159ac <argp_parse@@Base+0x29bc>
   15980:	str	r3, [sp, #32]
   15984:	str	r1, [sp, #24]
   15988:	bl	113b8 <__ctype_b_loc@plt>
   1598c:	ldr	r2, [sp, #36]	; 0x24
   15990:	ldr	r1, [sp, #24]
   15994:	ldr	r3, [sp, #32]
   15998:	ldr	ip, [r0]
   1599c:	lsl	r0, r2, #1
   159a0:	ldrh	r0, [ip, r0]
   159a4:	tst	r0, #16384	; 0x4000
   159a8:	bne	15be4 <argp_parse@@Base+0x2bf4>
   159ac:	add	fp, fp, #24
   159b0:	sub	r3, r3, #1
   159b4:	b	15948 <argp_parse@@Base+0x2958>
   159b8:	ldrb	ip, [ip]
   159bc:	add	r2, r2, #1
   159c0:	cmp	ip, r0
   159c4:	beq	159e0 <argp_parse@@Base+0x29f0>
   159c8:	ldr	lr, [sp, #20]
   159cc:	mov	ip, r2
   159d0:	cmp	lr, r2
   159d4:	bhi	159b8 <argp_parse@@Base+0x29c8>
   159d8:	strb	r0, [sl]
   159dc:	add	sl, sl, #1
   159e0:	add	r1, r1, #1
   159e4:	b	159ac <argp_parse@@Base+0x29bc>
   159e8:	ldr	r1, [r7, #-12]
   159ec:	tst	r1, #4
   159f0:	ldreq	r2, [r4, #4]
   159f4:	addeq	r2, r2, #1
   159f8:	streq	r2, [r4, #4]
   159fc:	tst	r1, #8
   15a00:	bne	15a28 <argp_parse@@Base+0x2a38>
   15a04:	sub	r2, sl, #1
   15a08:	cmp	r2, #254	; 0xfe
   15a0c:	bhi	15a28 <argp_parse@@Base+0x2a38>
   15a10:	bl	113b8 <__ctype_b_loc@plt>
   15a14:	lsl	sl, sl, #1
   15a18:	ldr	r2, [r0]
   15a1c:	ldrh	r2, [r2, sl]
   15a20:	tst	r2, #16384	; 0x4000
   15a24:	addne	fp, fp, #1
   15a28:	add	r7, r7, #24
   15a2c:	ldr	sl, [r7, #-20]	; 0xffffffec
   15a30:	cmp	sl, #0
   15a34:	bne	159e8 <argp_parse@@Base+0x29f8>
   15a38:	ldr	r2, [r7, #-24]	; 0xffffffe8
   15a3c:	cmp	r2, #0
   15a40:	bne	159e8 <argp_parse@@Base+0x29f8>
   15a44:	ldr	r2, [r7, #-8]
   15a48:	cmp	r2, #0
   15a4c:	bne	159e8 <argp_parse@@Base+0x29f8>
   15a50:	ldr	r1, [r7, #-4]
   15a54:	cmp	r1, #0
   15a58:	bne	159e8 <argp_parse@@Base+0x29f8>
   15a5c:	ldr	r2, [r4, #4]
   15a60:	mov	r0, #28
   15a64:	str	r1, [sp]
   15a68:	mul	r0, r0, r2
   15a6c:	bl	14540 <argp_parse@@Base+0x1550>
   15a70:	str	r0, [r4]
   15a74:	add	r0, fp, #1
   15a78:	bl	14540 <argp_parse@@Base+0x1550>
   15a7c:	ldr	r7, [r4]
   15a80:	ldr	r1, [sp]
   15a84:	cmp	r0, #0
   15a88:	cmpne	r7, #0
   15a8c:	mov	r3, r0
   15a90:	str	r0, [r4, #8]
   15a94:	bne	1569c <argp_parse@@Base+0x26ac>
   15a98:	ldr	r3, [pc, #344]	; 15bf8 <argp_parse@@Base+0x2c08>
   15a9c:	ldr	r2, [pc, #384]	; 15c24 <argp_parse@@Base+0x2c34>
   15aa0:	ldr	r1, [pc, #344]	; 15c00 <argp_parse@@Base+0x2c10>
   15aa4:	ldr	r0, [pc, #380]	; 15c28 <argp_parse@@Base+0x2c38>
   15aa8:	b	1565c <argp_parse@@Base+0x266c>
   15aac:	uxtb	r8, r8
   15ab0:	mov	r1, r3
   15ab4:	b	156dc <argp_parse@@Base+0x26ec>
   15ab8:	ldr	r1, [r5, #12]
   15abc:	tst	r1, #4
   15ac0:	bne	15b04 <argp_parse@@Base+0x2b14>
   15ac4:	b	15b88 <argp_parse@@Base+0x2b98>
   15ac8:	str	r2, [r7, #-24]	; 0xffffffe8
   15acc:	ldr	fp, [r5, #20]
   15ad0:	str	r5, [r7, #-28]	; 0xffffffe4
   15ad4:	cmp	fp, #0
   15ad8:	str	sl, [r7, #-20]	; 0xffffffec
   15adc:	bne	15af4 <argp_parse@@Base+0x2b04>
   15ae0:	ldr	r1, [r5]
   15ae4:	cmp	r1, #0
   15ae8:	cmpeq	r0, #0
   15aec:	addeq	fp, r8, #1
   15af0:	movne	fp, r8
   15af4:	ldr	r1, [sp, #8]
   15af8:	str	fp, [r7, #-16]
   15afc:	str	r9, [r7, #-12]
   15b00:	str	r1, [r7, #-8]
   15b04:	ldr	r1, [r7, #-24]	; 0xffffffe8
   15b08:	add	r1, r1, #1
   15b0c:	str	r1, [r7, #-24]	; 0xffffffe8
   15b10:	ldr	r1, [r5, #12]
   15b14:	tst	r1, #8
   15b18:	bne	15b54 <argp_parse@@Base+0x2b64>
   15b1c:	ldr	r8, [r5, #4]
   15b20:	sub	r1, r8, #1
   15b24:	cmp	r1, #254	; 0xfe
   15b28:	bhi	15b54 <argp_parse@@Base+0x2b64>
   15b2c:	str	r2, [sp, #4]
   15b30:	str	r3, [sp]
   15b34:	bl	113b8 <__ctype_b_loc@plt>
   15b38:	lsl	r1, r8, #1
   15b3c:	ldr	r3, [sp]
   15b40:	ldr	r2, [sp, #4]
   15b44:	ldr	r0, [r0]
   15b48:	ldrh	r1, [r0, r1]
   15b4c:	tst	r1, #16384	; 0x4000
   15b50:	bne	15aac <argp_parse@@Base+0x2abc>
   15b54:	add	r5, r5, #24
   15b58:	ldr	r1, [r5, #4]
   15b5c:	cmp	r1, #0
   15b60:	bne	15ab8 <argp_parse@@Base+0x2ac8>
   15b64:	ldr	r1, [r5]
   15b68:	cmp	r1, #0
   15b6c:	bne	15ab8 <argp_parse@@Base+0x2ac8>
   15b70:	ldr	r1, [r5, #16]
   15b74:	cmp	r1, #0
   15b78:	bne	15ab8 <argp_parse@@Base+0x2ac8>
   15b7c:	ldr	r1, [r5, #20]
   15b80:	cmp	r1, #0
   15b84:	bne	15ab8 <argp_parse@@Base+0x2ac8>
   15b88:	add	r7, r7, #28
   15b8c:	mov	r8, fp
   15b90:	ldr	r0, [r5, #4]
   15b94:	cmp	r0, #0
   15b98:	bne	15ac8 <argp_parse@@Base+0x2ad8>
   15b9c:	ldr	r1, [r5]
   15ba0:	cmp	r1, #0
   15ba4:	bne	15ac8 <argp_parse@@Base+0x2ad8>
   15ba8:	ldr	r1, [r5, #16]
   15bac:	cmp	r1, #0
   15bb0:	bne	15ac8 <argp_parse@@Base+0x2ad8>
   15bb4:	ldr	r1, [r5, #20]
   15bb8:	cmp	r1, #0
   15bbc:	bne	15ac8 <argp_parse@@Base+0x2ad8>
   15bc0:	strb	r1, [sl]
   15bc4:	cmp	r6, #0
   15bc8:	addne	r3, r4, #12
   15bcc:	addne	r6, r6, #16
   15bd0:	strne	r3, [sp, #28]
   15bd4:	bne	157d0 <argp_parse@@Base+0x27e0>
   15bd8:	mov	r0, r4
   15bdc:	add	sp, sp, #44	; 0x2c
   15be0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15be4:	ldrb	r0, [r1]
   15be8:	cmp	r0, r2
   15bec:	moveq	r2, r8
   15bf0:	bne	159ac <argp_parse@@Base+0x29bc>
   15bf4:	b	159c8 <argp_parse@@Base+0x29d8>
   15bf8:	muleq	r1, sl, r1
   15bfc:	andeq	r0, r0, r2, asr #3
   15c00:	andeq	r9, r1, ip, ror r2
   15c04:	andeq	r9, r1, r8, lsl #5
   15c08:	andeq	r9, r1, ip, lsl #5
   15c0c:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   15c10:			; <UNDEFINED> instruction: 0x000192bf
   15c14:	andeq	r9, r1, r3, lsr #3
   15c18:	andeq	r0, r0, sl, asr #7
   15c1c:	strdeq	r9, [r1], -r8
   15c20:	andeq	r9, r1, r4, asr #5
   15c24:	ldrdeq	r0, [r0], -sl
   15c28:	muleq	r1, ip, r2
   15c2c:	push	{r4, r5, r6, lr}
   15c30:	mov	r4, r0
   15c34:	mov	r5, r1
   15c38:	ldr	r0, [r0, #12]
   15c3c:	ldr	r1, [r1, #12]
   15c40:	cmp	r0, r1
   15c44:	bne	15c7c <argp_parse@@Base+0x2c8c>
   15c48:	ldr	r0, [r5, #8]
   15c4c:	ldr	r3, [r4, #8]
   15c50:	mvn	r2, r0
   15c54:	lsr	r2, r2, #31
   15c58:	cmp	r2, r3, lsr #31
   15c5c:	subne	r0, r3, r0
   15c60:	subeq	r0, r0, r3
   15c64:	cmp	r0, #0
   15c68:	popne	{r4, r5, r6, pc}
   15c6c:	ldr	r0, [r5, #4]
   15c70:	ldr	r3, [r4, #4]
   15c74:	sub	r0, r0, r3
   15c78:	pop	{r4, r5, r6, pc}
   15c7c:	bl	15c2c <argp_parse@@Base+0x2c3c>
   15c80:	cmp	r0, #0
   15c84:	popne	{r4, r5, r6, pc}
   15c88:	ldr	r0, [r5, #8]
   15c8c:	ldr	r3, [r4, #8]
   15c90:	mvn	r2, r0
   15c94:	lsr	r2, r2, #31
   15c98:	cmp	r2, r3, lsr #31
   15c9c:	subne	r0, r3, r0
   15ca0:	subeq	r0, r0, r3
   15ca4:	cmp	r0, #0
   15ca8:	beq	15c6c <argp_parse@@Base+0x2c7c>
   15cac:	pop	{r4, r5, r6, pc}
   15cb0:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   15cb4:	mov	r6, r0
   15cb8:	ldr	r0, [r0, #16]
   15cbc:	mov	r5, r1
   15cc0:	cmp	r0, #0
   15cc4:	movne	r3, r0
   15cc8:	bne	15cd8 <argp_parse@@Base+0x2ce8>
   15ccc:	ldr	r3, [r6, #12]
   15cd0:	b	15ce8 <argp_parse@@Base+0x2cf8>
   15cd4:	mov	r3, r2
   15cd8:	ldr	r2, [r3, #12]
   15cdc:	cmp	r2, #0
   15ce0:	bne	15cd4 <argp_parse@@Base+0x2ce4>
   15ce4:	ldr	r3, [r3, #8]
   15ce8:	ldr	r1, [r5, #16]
   15cec:	cmp	r1, #0
   15cf0:	movne	r2, r1
   15cf4:	bne	15d04 <argp_parse@@Base+0x2d14>
   15cf8:	ldr	r4, [r5, #12]
   15cfc:	b	15d14 <argp_parse@@Base+0x2d24>
   15d00:	mov	r2, ip
   15d04:	ldr	ip, [r2, #12]
   15d08:	cmp	ip, #0
   15d0c:	bne	15d00 <argp_parse@@Base+0x2d10>
   15d10:	ldr	r4, [r2, #8]
   15d14:	mvn	r2, r4
   15d18:	lsr	r2, r2, #31
   15d1c:	cmp	r2, r3, lsr #31
   15d20:	subne	r4, r3, r4
   15d24:	subeq	r4, r4, r3
   15d28:	cmp	r4, #0
   15d2c:	bne	15d84 <argp_parse@@Base+0x2d94>
   15d30:	adds	r4, r1, #0
   15d34:	movne	r4, #1
   15d38:	cmp	r0, #0
   15d3c:	rsbeq	r4, r4, #0
   15d40:	rsbne	r4, r4, #1
   15d44:	cmp	r4, #0
   15d48:	bne	15d84 <argp_parse@@Base+0x2d94>
   15d4c:	cmp	r0, #0
   15d50:	beq	15dc0 <argp_parse@@Base+0x2dd0>
   15d54:	ldr	r3, [r0, #20]
   15d58:	ldr	r2, [r1, #20]
   15d5c:	cmp	r3, r2
   15d60:	ble	15d90 <argp_parse@@Base+0x2da0>
   15d64:	ldr	r0, [r0, #12]
   15d68:	ldr	r3, [r0, #20]
   15d6c:	cmp	r2, r3
   15d70:	blt	15d64 <argp_parse@@Base+0x2d74>
   15d74:	bl	15c2c <argp_parse@@Base+0x2c3c>
   15d78:	cmp	r0, #0
   15d7c:	movne	r4, r0
   15d80:	moveq	r4, #1
   15d84:	mov	r0, r4
   15d88:	add	sp, sp, #8
   15d8c:	pop	{r4, r5, r6, r7, r8, pc}
   15d90:	bge	15db4 <argp_parse@@Base+0x2dc4>
   15d94:	ldr	r1, [r1, #12]
   15d98:	ldr	r2, [r1, #20]
   15d9c:	cmp	r3, r2
   15da0:	blt	15d94 <argp_parse@@Base+0x2da4>
   15da4:	bl	15c2c <argp_parse@@Base+0x2c3c>
   15da8:	subs	r4, r0, #0
   15dac:	mvneq	r4, #0
   15db0:	b	15d84 <argp_parse@@Base+0x2d94>
   15db4:	bl	15c2c <argp_parse@@Base+0x2c3c>
   15db8:	subs	r4, r0, #0
   15dbc:	bne	15d84 <argp_parse@@Base+0x2d94>
   15dc0:	ldr	r4, [r5, #12]
   15dc4:	ldr	r3, [r6, #12]
   15dc8:	mvn	r2, r4
   15dcc:	lsr	r2, r2, #31
   15dd0:	cmp	r2, r3, lsr #31
   15dd4:	subne	r4, r3, r4
   15dd8:	subeq	r4, r4, r3
   15ddc:	cmp	r4, #0
   15de0:	bne	15d84 <argp_parse@@Base+0x2d94>
   15de4:	mov	r0, r6
   15de8:	bl	145dc <argp_parse@@Base+0x15ec>
   15dec:	mov	r7, r0
   15df0:	str	r0, [sp]
   15df4:	mov	r0, r5
   15df8:	bl	145dc <argp_parse@@Base+0x15ec>
   15dfc:	ldr	r3, [r6]
   15e00:	adds	r7, r7, #0
   15e04:	movne	r7, #1
   15e08:	ldr	r3, [r3, #12]
   15e0c:	ands	r3, r7, r3, lsr #3
   15e10:	moveq	r7, r4
   15e14:	str	r0, [sp, #4]
   15e18:	beq	15e2c <argp_parse@@Base+0x2e3c>
   15e1c:	mov	r0, sp
   15e20:	bl	14744 <argp_parse@@Base+0x1754>
   15e24:	adds	r7, r0, #0
   15e28:	movne	r7, #1
   15e2c:	ldr	r3, [r5]
   15e30:	ldr	r0, [r3, #12]
   15e34:	ands	r0, r0, #8
   15e38:	beq	15e5c <argp_parse@@Base+0x2e6c>
   15e3c:	ldr	r3, [sp, #4]
   15e40:	cmp	r3, #0
   15e44:	moveq	r0, r4
   15e48:	beq	15e5c <argp_parse@@Base+0x2e6c>
   15e4c:	add	r0, sp, #4
   15e50:	bl	14744 <argp_parse@@Base+0x1754>
   15e54:	adds	r0, r0, #0
   15e58:	movne	r0, #1
   15e5c:	subs	r4, r7, r0
   15e60:	bne	15d84 <argp_parse@@Base+0x2d94>
   15e64:	ldr	r2, [r6, #20]
   15e68:	mov	r3, r4
   15e6c:	ldr	r1, [pc, #224]	; 15f54 <argp_parse@@Base+0x2f64>
   15e70:	ldr	r2, [r2, #24]
   15e74:	mov	r0, r6
   15e78:	bl	14618 <argp_parse@@Base+0x1628>
   15e7c:	ldr	r2, [r5, #20]
   15e80:	mov	r3, r4
   15e84:	ldr	r1, [pc, #200]	; 15f54 <argp_parse@@Base+0x2f64>
   15e88:	ldr	r2, [r2, #24]
   15e8c:	uxtb	r8, r0
   15e90:	mov	r0, r5
   15e94:	bl	14618 <argp_parse@@Base+0x1628>
   15e98:	cmp	r8, #0
   15e9c:	uxtb	r5, r0
   15ea0:	beq	15eac <argp_parse@@Base+0x2ebc>
   15ea4:	mov	r6, r8
   15ea8:	b	15ebc <argp_parse@@Base+0x2ecc>
   15eac:	ldr	r3, [sp]
   15eb0:	cmp	r3, #0
   15eb4:	ldrbne	r6, [r3]
   15eb8:	beq	15ea4 <argp_parse@@Base+0x2eb4>
   15ebc:	cmp	r5, #0
   15ec0:	beq	15ecc <argp_parse@@Base+0x2edc>
   15ec4:	mov	r7, r5
   15ec8:	b	15edc <argp_parse@@Base+0x2eec>
   15ecc:	ldr	r3, [sp, #4]
   15ed0:	cmp	r3, #0
   15ed4:	ldrbne	r7, [r3]
   15ed8:	beq	15ec4 <argp_parse@@Base+0x2ed4>
   15edc:	bl	11394 <__ctype_tolower_loc@plt>
   15ee0:	ldr	r3, [r0]
   15ee4:	ldr	r4, [r3, r6, lsl #2]
   15ee8:	ldr	r3, [r3, r7, lsl #2]
   15eec:	subs	r4, r4, r3
   15ef0:	bne	15d84 <argp_parse@@Base+0x2d94>
   15ef4:	subs	r4, r7, r6
   15ef8:	bne	15d84 <argp_parse@@Base+0x2d94>
   15efc:	adds	r4, r5, #0
   15f00:	movne	r4, #1
   15f04:	cmp	r8, #0
   15f08:	rsbeq	r4, r4, #0
   15f0c:	rsbne	r4, r4, #1
   15f10:	cmp	r4, #0
   15f14:	bne	15d84 <argp_parse@@Base+0x2d94>
   15f18:	cmp	r8, #0
   15f1c:	bne	15d84 <argp_parse@@Base+0x2d94>
   15f20:	ldm	sp, {r0, r1}
   15f24:	adds	r4, r1, #0
   15f28:	movne	r4, #1
   15f2c:	cmp	r0, #0
   15f30:	rsbeq	r4, r4, #0
   15f34:	rsbne	r4, r4, #1
   15f38:	cmp	r4, #0
   15f3c:	bne	15d84 <argp_parse@@Base+0x2d94>
   15f40:	cmp	r0, #0
   15f44:	beq	15d84 <argp_parse@@Base+0x2d94>
   15f48:	bl	11310 <strcasecmp@plt>
   15f4c:	mov	r4, r0
   15f50:	b	15d84 <argp_parse@@Base+0x2d94>
   15f54:	strdeq	r4, [r1], -r8

00015f58 <argp_failure@@Base>:
   15f58:	push	{r3}		; (str r3, [sp, #-4]!)
   15f5c:	push	{r4, r5, r6, r7, r8, lr}
   15f60:	sub	sp, sp, #204	; 0xcc
   15f64:	subs	r5, r0, #0
   15f68:	mov	r7, r1
   15f6c:	mov	r6, r2
   15f70:	ldr	r8, [sp, #228]	; 0xe4
   15f74:	beq	15fa0 <argp_failure@@Base+0x48>
   15f78:	ldr	r3, [r5, #16]
   15f7c:	tst	r3, #2
   15f80:	bne	15f90 <argp_failure@@Base+0x38>
   15f84:	ldr	r4, [r5, #44]	; 0x2c
   15f88:	cmp	r4, #0
   15f8c:	bne	15fc4 <argp_failure@@Base+0x6c>
   15f90:	add	sp, sp, #204	; 0xcc
   15f94:	pop	{r4, r5, r6, r7, r8, lr}
   15f98:	add	sp, sp, #4
   15f9c:	bx	lr
   15fa0:	ldr	r3, [pc, #244]	; 1609c <argp_failure@@Base+0x144>
   15fa4:	ldr	r4, [r3]
   15fa8:	cmp	r4, #0
   15fac:	beq	15f90 <argp_failure@@Base+0x38>
   15fb0:	mov	r0, r4
   15fb4:	bl	114f0 <flockfile@plt>
   15fb8:	ldr	r3, [pc, #224]	; 160a0 <argp_failure@@Base+0x148>
   15fbc:	ldr	r0, [r3]
   15fc0:	b	15fd0 <argp_failure@@Base+0x78>
   15fc4:	mov	r0, r4
   15fc8:	bl	114f0 <flockfile@plt>
   15fcc:	ldr	r0, [r5, #40]	; 0x28
   15fd0:	mov	r1, r4
   15fd4:	bl	11214 <fputs_unlocked@plt>
   15fd8:	cmp	r8, #0
   15fdc:	beq	16010 <argp_failure@@Base+0xb8>
   15fe0:	add	r3, sp, #232	; 0xe8
   15fe4:	mov	r1, r4
   15fe8:	mov	r0, #58	; 0x3a
   15fec:	str	r3, [sp]
   15ff0:	bl	115a4 <putc_unlocked@plt>
   15ff4:	mov	r1, r4
   15ff8:	mov	r0, #32
   15ffc:	bl	115a4 <putc_unlocked@plt>
   16000:	ldr	r2, [sp]
   16004:	mov	r1, r8
   16008:	mov	r0, r4
   1600c:	bl	11490 <vfprintf@plt>
   16010:	cmp	r6, #0
   16014:	beq	16064 <argp_failure@@Base+0x10c>
   16018:	mov	r1, r4
   1601c:	mov	r0, #58	; 0x3a
   16020:	bl	115a4 <putc_unlocked@plt>
   16024:	mov	r1, r4
   16028:	mov	r0, #32
   1602c:	bl	115a4 <putc_unlocked@plt>
   16030:	mov	r2, #200	; 0xc8
   16034:	mov	r1, sp
   16038:	mov	r0, r6
   1603c:	bl	11400 <strerror_r@plt>
   16040:	cmp	r0, #0
   16044:	bne	1605c <argp_failure@@Base+0x104>
   16048:	mov	r0, r6
   1604c:	bl	11388 <strerror@plt>
   16050:	ldr	r3, [pc, #76]	; 160a4 <argp_failure@@Base+0x14c>
   16054:	cmp	r0, #0
   16058:	moveq	r0, r3
   1605c:	mov	r1, r4
   16060:	bl	11214 <fputs_unlocked@plt>
   16064:	mov	r1, r4
   16068:	mov	r0, #10
   1606c:	bl	115a4 <putc_unlocked@plt>
   16070:	mov	r0, r4
   16074:	bl	1131c <funlockfile@plt>
   16078:	cmp	r7, #0
   1607c:	beq	15f90 <argp_failure@@Base+0x38>
   16080:	cmp	r5, #0
   16084:	beq	16094 <argp_failure@@Base+0x13c>
   16088:	ldr	r3, [r5, #16]
   1608c:	tst	r3, #32
   16090:	bne	15f90 <argp_failure@@Base+0x38>
   16094:	mov	r0, r7
   16098:	bl	113c4 <exit@plt>
   1609c:	strdeq	sl, [r2], -r0
   160a0:	andeq	sl, r2, r8, ror #5
   160a4:	andeq	r9, r1, r1, lsl r3
   160a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160ac:	add	fp, sp, #32
   160b0:	sub	sp, sp, #116	; 0x74
   160b4:	str	r3, [fp, #-104]	; 0xffffff98
   160b8:	subs	r3, r2, #0
   160bc:	str	r0, [fp, #-108]	; 0xffffff94
   160c0:	str	r1, [fp, #-96]	; 0xffffffa0
   160c4:	str	r3, [fp, #-112]	; 0xffffff90
   160c8:	beq	16144 <argp_failure@@Base+0x1ec>
   160cc:	ldr	r5, [pc, #3996]	; 17070 <argp_failure@@Base+0x1118>
   160d0:	mov	r0, r3
   160d4:	bl	114f0 <flockfile@plt>
   160d8:	ldr	r9, [r5, #36]	; 0x24
   160dc:	cmp	r9, #0
   160e0:	bne	1611c <argp_failure@@Base+0x1c4>
   160e4:	ldr	r0, [pc, #3976]	; 17074 <argp_failure@@Base+0x111c>
   160e8:	bl	11358 <getenv@plt>
   160ec:	mov	ip, r5
   160f0:	sub	lr, fp, #76	; 0x4c
   160f4:	mov	r4, r0
   160f8:	ldm	ip!, {r0, r1, r2, r3}
   160fc:	cmp	r4, #0
   16100:	movne	r5, #1
   16104:	stmia	lr!, {r0, r1, r2, r3}
   16108:	ldm	ip!, {r0, r1, r2, r3}
   1610c:	stmia	lr!, {r0, r1, r2, r3}
   16110:	ldm	ip, {r0, r1}
   16114:	stm	lr, {r0, r1}
   16118:	bne	16398 <argp_failure@@Base+0x440>
   1611c:	ldr	r5, [pc, #3916]	; 17070 <argp_failure@@Base+0x1118>
   16120:	mov	r3, #0
   16124:	mov	r1, r3
   16128:	ldr	r2, [r5, #32]
   1612c:	ldr	r0, [fp, #-112]	; 0xffffff90
   16130:	bl	17d60 <argp_error@@Base+0xbc4>
   16134:	subs	r4, r0, #0
   16138:	bne	1642c <argp_failure@@Base+0x4d4>
   1613c:	ldr	r0, [fp, #-112]	; 0xffffff90
   16140:	bl	1131c <funlockfile@plt>
   16144:	sub	sp, fp, #32
   16148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1614c:	mov	r3, r1
   16150:	mov	r1, r3
   16154:	str	r3, [fp, #-100]	; 0xffffff9c
   16158:	ldrb	r0, [r1], #1
   1615c:	lsl	r2, r0, #1
   16160:	ldrh	r2, [r6, r2]
   16164:	tst	r2, #8192	; 0x2000
   16168:	bne	1614c <argp_failure@@Base+0x1f4>
   1616c:	ands	r2, r2, #1024	; 0x400
   16170:	movne	r2, r3
   16174:	bne	161f0 <argp_failure@@Base+0x298>
   16178:	cmp	r0, #0
   1617c:	beq	163e8 <argp_failure@@Base+0x490>
   16180:	str	r3, [sp]
   16184:	mov	r1, r2
   16188:	ldr	r3, [pc, #3816]	; 17078 <argp_failure@@Base+0x1120>
   1618c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16190:	bl	15f58 <argp_failure@@Base>
   16194:	ldr	ip, [fp, #-44]	; 0xffffffd4
   16198:	ldr	r3, [pc, #3804]	; 1707c <argp_failure@@Base+0x1124>
   1619c:	mov	r0, #9
   161a0:	ldrb	r2, [r3, #14]
   161a4:	cmp	r2, #0
   161a8:	bne	163f0 <argp_failure@@Base+0x498>
   161ac:	ldrb	r1, [r3, #15]
   161b0:	cmp	r1, #32
   161b4:	beq	163f0 <argp_failure@@Base+0x498>
   161b8:	sub	lr, fp, #36	; 0x24
   161bc:	add	r1, lr, r1
   161c0:	ldr	r1, [r1, #-40]	; 0xffffffd8
   161c4:	cmp	r1, ip
   161c8:	blt	163f0 <argp_failure@@Base+0x498>
   161cc:	str	r3, [sp, #4]
   161d0:	ldr	r3, [pc, #3752]	; 17080 <argp_failure@@Base+0x1128>
   161d4:	mov	r1, r2
   161d8:	str	r3, [sp]
   161dc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   161e0:	ldr	r3, [pc, #3740]	; 17084 <argp_failure@@Base+0x112c>
   161e4:	bl	15f58 <argp_failure@@Base>
   161e8:	b	1611c <argp_failure@@Base+0x1c4>
   161ec:	mov	r2, lr
   161f0:	mov	lr, r2
   161f4:	ldrb	r1, [lr], #1
   161f8:	cmp	r1, #95	; 0x5f
   161fc:	cmpne	r1, #45	; 0x2d
   16200:	lsl	ip, r1, #1
   16204:	moveq	r1, #1
   16208:	ldrh	ip, [r6, ip]
   1620c:	movne	r1, #0
   16210:	lsl	ip, ip, #28
   16214:	orrs	r1, r1, ip, lsr #31
   16218:	bne	161ec <argp_failure@@Base+0x294>
   1621c:	sub	r8, r2, r3
   16220:	mov	r4, r2
   16224:	ldrb	r1, [r2], #1
   16228:	lsl	ip, r1, #1
   1622c:	ldrh	ip, [r6, ip]
   16230:	tst	ip, #8192	; 0x2000
   16234:	bne	16220 <argp_failure@@Base+0x2c8>
   16238:	cmp	r1, #44	; 0x2c
   1623c:	cmpne	r1, #0
   16240:	beq	16fb0 <argp_failure@@Base+0x1058>
   16244:	cmp	r1, #61	; 0x3d
   16248:	bne	16268 <argp_failure@@Base+0x310>
   1624c:	mov	r4, r2
   16250:	add	r2, r2, #1
   16254:	ldrb	r3, [r4]
   16258:	lsl	r3, r3, #1
   1625c:	ldrh	r3, [r6, r3]
   16260:	tst	r3, #8192	; 0x2000
   16264:	bne	1624c <argp_failure@@Base+0x2f4>
   16268:	ldrb	r3, [r4]
   1626c:	lsl	r3, r3, #1
   16270:	ldrh	r3, [r6, r3]
   16274:	tst	r3, #2048	; 0x800
   16278:	moveq	sl, r9
   1627c:	moveq	r7, r9
   16280:	beq	162fc <argp_failure@@Base+0x3a4>
   16284:	mov	r0, r4
   16288:	bl	11508 <atoi@plt>
   1628c:	mov	r3, r4
   16290:	mov	r7, r0
   16294:	ldrb	r2, [r3]
   16298:	add	r1, r3, #1
   1629c:	lsl	r2, r2, #1
   162a0:	ldrh	r2, [r6, r2]
   162a4:	tst	r2, #2048	; 0x800
   162a8:	bne	163b4 <argp_failure@@Base+0x45c>
   162ac:	mov	r4, r3
   162b0:	add	r3, r3, #1
   162b4:	ldrb	r2, [r4]
   162b8:	lsl	r2, r2, #1
   162bc:	ldrh	r2, [r6, r2]
   162c0:	tst	r2, #8192	; 0x2000
   162c4:	bne	162ac <argp_failure@@Base+0x354>
   162c8:	mov	sl, r9
   162cc:	b	162fc <argp_failure@@Base+0x3a4>
   162d0:	ldrb	r2, [r3, #1]
   162d4:	cmp	r2, #111	; 0x6f
   162d8:	bne	16fb8 <argp_failure@@Base+0x1060>
   162dc:	ldrb	r2, [r3, #2]
   162e0:	cmp	r2, #45	; 0x2d
   162e4:	bne	16fb8 <argp_failure@@Base+0x1060>
   162e8:	sub	r8, r8, #3
   162ec:	mov	r7, r9
   162f0:	mov	sl, r5
   162f4:	add	r3, r3, #3
   162f8:	str	r3, [fp, #-100]	; 0xffffff9c
   162fc:	ldr	r6, [pc, #3448]	; 1707c <argp_failure@@Base+0x1124>
   16300:	mov	r3, #9
   16304:	str	r3, [fp, #-116]	; 0xffffff8c
   16308:	mov	r0, r6
   1630c:	bl	113d0 <strlen@plt>
   16310:	cmp	r0, r8
   16314:	bne	163d0 <argp_failure@@Base+0x478>
   16318:	mov	r2, r8
   1631c:	mov	r1, r6
   16320:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16324:	bl	11544 <strncmp@plt>
   16328:	cmp	r0, #0
   1632c:	bne	163d0 <argp_failure@@Base+0x478>
   16330:	cmp	sl, #0
   16334:	beq	163bc <argp_failure@@Base+0x464>
   16338:	ldrb	r2, [r6, #14]
   1633c:	cmp	r2, #0
   16340:	bne	163bc <argp_failure@@Base+0x464>
   16344:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16348:	str	r8, [sp]
   1634c:	str	r3, [sp, #4]
   16350:	mov	r1, r2
   16354:	ldr	r3, [pc, #3372]	; 17088 <argp_failure@@Base+0x1130>
   16358:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1635c:	bl	15f58 <argp_failure@@Base>
   16360:	ldr	r3, [pc, #3364]	; 1708c <argp_failure@@Base+0x1134>
   16364:	cmp	r6, r3
   16368:	bne	1638c <argp_failure@@Base+0x434>
   1636c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16370:	mov	r2, #0
   16374:	str	r3, [sp, #4]
   16378:	str	r8, [sp]
   1637c:	ldr	r3, [pc, #3340]	; 17090 <argp_failure@@Base+0x1138>
   16380:	mov	r1, r2
   16384:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16388:	bl	15f58 <argp_failure@@Base>
   1638c:	ldrb	r3, [r4]
   16390:	cmp	r3, #44	; 0x2c
   16394:	addeq	r4, r4, #1
   16398:	ldrb	r3, [r4]
   1639c:	cmp	r3, #0
   163a0:	beq	16194 <argp_failure@@Base+0x23c>
   163a4:	bl	113b8 <__ctype_b_loc@plt>
   163a8:	mov	r3, r4
   163ac:	ldr	r6, [r0]
   163b0:	b	16150 <argp_failure@@Base+0x1f8>
   163b4:	mov	r3, r1
   163b8:	b	16294 <argp_failure@@Base+0x33c>
   163bc:	ldrb	r3, [r6, #15]
   163c0:	sub	r2, fp, #36	; 0x24
   163c4:	add	r3, r2, r3
   163c8:	str	r7, [r3, #-40]	; 0xffffffd8
   163cc:	b	16360 <argp_failure@@Base+0x408>
   163d0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   163d4:	add	r6, r6, #16
   163d8:	subs	r3, r3, #1
   163dc:	str	r3, [fp, #-116]	; 0xffffff8c
   163e0:	bne	16308 <argp_failure@@Base+0x3b0>
   163e4:	b	16360 <argp_failure@@Base+0x408>
   163e8:	mov	r4, r3
   163ec:	b	16398 <argp_failure@@Base+0x440>
   163f0:	subs	r0, r0, #1
   163f4:	add	r3, r3, #16
   163f8:	bne	161a0 <argp_failure@@Base+0x248>
   163fc:	sub	lr, fp, #76	; 0x4c
   16400:	ldr	r4, [pc, #3176]	; 17070 <argp_failure@@Base+0x1118>
   16404:	ldm	lr!, {r0, r1, r2, r3}
   16408:	mov	ip, r4
   1640c:	stmia	ip!, {r0, r1, r2, r3}
   16410:	ldm	lr!, {r0, r1, r2, r3}
   16414:	stmia	ip!, {r0, r1, r2, r3}
   16418:	mov	r3, #1
   1641c:	ldm	lr, {r0, r1}
   16420:	stm	ip, {r0, r1}
   16424:	str	r3, [r4, #36]	; 0x24
   16428:	b	1611c <argp_failure@@Base+0x1c4>
   1642c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16430:	ands	r3, r3, #11
   16434:	moveq	sl, r3
   16438:	beq	16498 <argp_failure@@Base+0x540>
   1643c:	mov	r1, #0
   16440:	ldr	r0, [fp, #-108]	; 0xffffff94
   16444:	bl	15624 <argp_parse@@Base+0x2634>
   16448:	ldr	r1, [pc, #3140]	; 17094 <argp_failure@@Base+0x113c>
   1644c:	mov	sl, r0
   16450:	bl	155b0 <argp_parse@@Base+0x25c0>
   16454:	ldr	r1, [pc, #3132]	; 17098 <argp_failure@@Base+0x1140>
   16458:	mov	r0, sl
   1645c:	bl	155b0 <argp_parse@@Base+0x25c0>
   16460:	ldr	r1, [sl, #4]
   16464:	cmp	r1, #0
   16468:	beq	16498 <argp_failure@@Base+0x540>
   1646c:	ldr	r0, [sl]
   16470:	mov	r3, #0
   16474:	mov	r2, r0
   16478:	str	r3, [r2, #24]
   1647c:	add	r3, r3, #1
   16480:	cmp	r1, r3
   16484:	add	r2, r2, #28
   16488:	bne	16478 <argp_failure@@Base+0x520>
   1648c:	ldr	r3, [pc, #3080]	; 1709c <argp_failure@@Base+0x1144>
   16490:	mov	r2, #28
   16494:	bl	11514 <qsort@plt>
   16498:	ldr	r3, [fp, #-104]	; 0xffffff98
   1649c:	ands	r3, r3, #3
   164a0:	moveq	r5, r3
   164a4:	beq	16644 <argp_failure@@Base+0x6ec>
   164a8:	ldr	r0, [fp, #-108]	; 0xffffff94
   164ac:	bl	147fc <argp_parse@@Base+0x180c>
   164b0:	mov	r1, #0
   164b4:	ldr	r6, [pc, #3044]	; 170a0 <argp_failure@@Base+0x1148>
   164b8:	mov	r9, #1
   164bc:	add	r3, r0, #14
   164c0:	bic	r3, r3, #7
   164c4:	sub	sp, sp, r3
   164c8:	add	r7, sp, #8
   164cc:	mov	r2, r0
   164d0:	mov	r0, r7
   164d4:	bl	11418 <memset@plt>
   164d8:	ldr	r2, [r4, #24]
   164dc:	ldr	r3, [r4, #28]
   164e0:	ldr	r8, [r5, #28]
   164e4:	sub	r3, r3, r2
   164e8:	ldr	r2, [r4, #16]
   164ec:	cmp	r3, r2
   164f0:	bls	164fc <argp_failure@@Base+0x5a4>
   164f4:	mov	r0, r4
   164f8:	bl	17dd8 <argp_error@@Base+0xc3c>
   164fc:	ldr	r3, [r4, #12]
   16500:	cmp	r9, #0
   16504:	str	r8, [r4, #12]
   16508:	ldrne	r2, [pc, #2964]	; 170a4 <argp_failure@@Base+0x114c>
   1650c:	ldreq	r2, [pc, #2964]	; 170a8 <argp_failure@@Base+0x1150>
   16510:	str	r3, [fp, #-100]	; 0xffffff9c
   16514:	ldr	r1, [pc, #2960]	; 170ac <argp_failure@@Base+0x1154>
   16518:	ldr	r3, [fp, #4]
   1651c:	mov	r0, r4
   16520:	str	r7, [fp, #-76]	; 0xffffffb4
   16524:	bl	1830c <argp_error@@Base+0x1170>
   16528:	ldr	r2, [r4, #24]
   1652c:	ldr	r3, [r4, #28]
   16530:	ldr	r8, [r5, #28]
   16534:	sub	r3, r3, r2
   16538:	ldr	r2, [r4, #16]
   1653c:	cmp	r3, r2
   16540:	bls	1654c <argp_failure@@Base+0x5f4>
   16544:	mov	r0, r4
   16548:	bl	17dd8 <argp_error@@Base+0xc3c>
   1654c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16550:	ldr	r9, [r4, #4]
   16554:	tst	r3, #2
   16558:	str	r8, [r4, #4]
   1655c:	beq	168c0 <argp_failure@@Base+0x968>
   16560:	ldr	r3, [sl, #4]
   16564:	cmp	r3, #0
   16568:	beq	165a8 <argp_failure@@Base+0x650>
   1656c:	ldr	r3, [r4, #28]
   16570:	ldr	r2, [r4, #32]
   16574:	add	r3, r3, #12
   16578:	cmp	r2, r3
   1657c:	bcc	168a8 <argp_failure@@Base+0x950>
   16580:	ldr	r2, [r4, #28]
   16584:	ldr	r3, [r6]
   16588:	str	r3, [r2]
   1658c:	ldr	r3, [r6, #4]
   16590:	str	r3, [r2, #4]
   16594:	ldr	r3, [r6, #8]
   16598:	str	r3, [r2, #8]
   1659c:	ldr	r3, [r4, #28]
   165a0:	add	r3, r3, #12
   165a4:	str	r3, [r4, #28]
   165a8:	mov	r3, #1
   165ac:	sub	r2, fp, #76	; 0x4c
   165b0:	str	r4, [sp]
   165b4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   165b8:	ldr	r0, [fp, #-108]	; 0xffffff94
   165bc:	bl	15210 <argp_parse@@Base+0x2220>
   165c0:	ldr	r2, [r4, #24]
   165c4:	ldr	r3, [r4, #28]
   165c8:	sub	r3, r3, r2
   165cc:	ldr	r2, [r4, #16]
   165d0:	cmp	r3, r2
   165d4:	mov	r8, r0
   165d8:	bls	165e4 <argp_failure@@Base+0x68c>
   165dc:	mov	r0, r4
   165e0:	bl	17dd8 <argp_error@@Base+0xc3c>
   165e4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   165e8:	ldr	r2, [r4, #24]
   165ec:	str	r3, [r4, #12]
   165f0:	ldr	r3, [r4, #28]
   165f4:	sub	r3, r3, r2
   165f8:	ldr	r2, [r4, #16]
   165fc:	cmp	r3, r2
   16600:	bls	1660c <argp_failure@@Base+0x6b4>
   16604:	mov	r0, r4
   16608:	bl	17dd8 <argp_error@@Base+0xc3c>
   1660c:	ldr	r2, [r4, #28]
   16610:	ldr	r3, [r4, #32]
   16614:	str	r9, [r4, #4]
   16618:	cmp	r2, r3
   1661c:	bcs	168dc <argp_failure@@Base+0x984>
   16620:	ldr	r3, [r4, #28]
   16624:	add	r2, r3, #1
   16628:	str	r2, [r4, #28]
   1662c:	mov	r2, #10
   16630:	strb	r2, [r3]
   16634:	mov	r9, #0
   16638:	cmp	r8, r9
   1663c:	bne	164d8 <argp_failure@@Base+0x580>
   16640:	mov	r5, #1
   16644:	ldr	r3, [fp, #-104]	; 0xffffff98
   16648:	tst	r3, #16
   1664c:	beq	16674 <argp_failure@@Base+0x71c>
   16650:	mov	r3, #1
   16654:	str	r3, [sp]
   16658:	mov	r3, #0
   1665c:	str	r4, [sp, #4]
   16660:	mov	r2, r3
   16664:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16668:	ldr	r0, [fp, #-108]	; 0xffffff94
   1666c:	bl	14c78 <argp_parse@@Base+0x1c88>
   16670:	orr	r5, r5, r0
   16674:	ldr	r3, [fp, #-104]	; 0xffffff98
   16678:	tst	r3, #4
   1667c:	beq	16698 <argp_failure@@Base+0x740>
   16680:	ldr	r3, [fp, #4]
   16684:	ldr	r1, [pc, #2596]	; 170b0 <argp_failure@@Base+0x1158>
   16688:	mov	r2, r3
   1668c:	mov	r0, r4
   16690:	bl	1830c <argp_error@@Base+0x1170>
   16694:	mov	r5, #1
   16698:	ldr	r3, [fp, #-104]	; 0xffffff98
   1669c:	tst	r3, #8
   166a0:	beq	167f8 <argp_failure@@Base+0x8a0>
   166a4:	ldr	r3, [sl, #4]
   166a8:	cmp	r3, #0
   166ac:	beq	167f8 <argp_failure@@Base+0x8a0>
   166b0:	cmp	r5, #0
   166b4:	beq	166dc <argp_failure@@Base+0x784>
   166b8:	ldr	r2, [r4, #28]
   166bc:	ldr	r3, [r4, #32]
   166c0:	cmp	r2, r3
   166c4:	bcs	168f4 <argp_failure@@Base+0x99c>
   166c8:	ldr	r3, [r4, #28]
   166cc:	add	r2, r3, #1
   166d0:	str	r2, [r4, #28]
   166d4:	mov	r2, #10
   166d8:	strb	r2, [r3]
   166dc:	mov	r3, #0
   166e0:	str	r3, [fp, #-88]	; 0xffffffa8
   166e4:	str	r3, [fp, #-84]	; 0xffffffac
   166e8:	str	r3, [fp, #-80]	; 0xffffffb0
   166ec:	ldr	r3, [sl]
   166f0:	str	r3, [fp, #-100]	; 0xffffff9c
   166f4:	ldr	r3, [sl, #4]
   166f8:	str	r3, [fp, #-116]	; 0xffffff8c
   166fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16700:	cmp	r3, #0
   16704:	bne	1690c <argp_failure@@Base+0x9b4>
   16708:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1670c:	cmp	r3, #0
   16710:	beq	167f4 <argp_failure@@Base+0x89c>
   16714:	ldr	r3, [pc, #2388]	; 17070 <argp_failure@@Base+0x1118>
   16718:	ldr	r3, [r3, #4]
   1671c:	cmp	r3, #0
   16720:	beq	167f4 <argp_failure@@Base+0x89c>
   16724:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16728:	ldr	r1, [pc, #2436]	; 170b4 <argp_failure@@Base+0x115c>
   1672c:	cmp	r3, #0
   16730:	ldr	r0, [pc, #2432]	; 170b8 <argp_failure@@Base+0x1160>
   16734:	ldrne	r2, [r3]
   16738:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   1673c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16740:	bl	148dc <argp_parse@@Base+0x18ec>
   16744:	subs	r5, r0, #0
   16748:	beq	167f4 <argp_failure@@Base+0x89c>
   1674c:	ldrb	r3, [r5]
   16750:	cmp	r3, #0
   16754:	beq	167e0 <argp_failure@@Base+0x888>
   16758:	ldr	r2, [r4, #28]
   1675c:	ldr	r3, [r4, #32]
   16760:	cmp	r2, r3
   16764:	bcs	16f50 <argp_failure@@Base+0xff8>
   16768:	ldr	r3, [r4, #28]
   1676c:	add	r2, r3, #1
   16770:	str	r2, [r4, #28]
   16774:	mov	r2, #10
   16778:	strb	r2, [r3]
   1677c:	mov	r0, r5
   16780:	bl	113d0 <strlen@plt>
   16784:	subs	r6, r0, #0
   16788:	beq	167bc <argp_failure@@Base+0x864>
   1678c:	ldr	r3, [r4, #28]
   16790:	ldr	r2, [r4, #32]
   16794:	add	r3, r3, r6
   16798:	cmp	r2, r3
   1679c:	bcc	16f68 <argp_failure@@Base+0x1010>
   167a0:	mov	r2, r6
   167a4:	mov	r1, r5
   167a8:	ldr	r0, [r4, #28]
   167ac:	bl	112b0 <memcpy@plt>
   167b0:	ldr	r3, [r4, #28]
   167b4:	add	r6, r3, r6
   167b8:	str	r6, [r4, #28]
   167bc:	ldr	r2, [r4, #28]
   167c0:	ldr	r3, [r4, #32]
   167c4:	cmp	r2, r3
   167c8:	bcs	16f80 <argp_failure@@Base+0x1028>
   167cc:	ldr	r3, [r4, #28]
   167d0:	add	r2, r3, #1
   167d4:	str	r2, [r4, #28]
   167d8:	mov	r2, #10
   167dc:	strb	r2, [r3]
   167e0:	ldr	r3, [pc, #2256]	; 170b8 <argp_failure@@Base+0x1160>
   167e4:	cmp	r5, r3
   167e8:	beq	167f4 <argp_failure@@Base+0x89c>
   167ec:	mov	r0, r5
   167f0:	bl	13a8c <argp_parse@@Base+0xa9c>
   167f4:	mov	r5, #1
   167f8:	ldr	r3, [fp, #-104]	; 0xffffff98
   167fc:	tst	r3, #32
   16800:	beq	16828 <argp_failure@@Base+0x8d0>
   16804:	mov	r3, #0
   16808:	str	r3, [sp]
   1680c:	str	r4, [sp, #4]
   16810:	mov	r3, r5
   16814:	mov	r2, #1
   16818:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1681c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16820:	bl	14c78 <argp_parse@@Base+0x1c88>
   16824:	orr	r5, r5, r0
   16828:	ldr	r3, [fp, #-104]	; 0xffffff98
   1682c:	tst	r3, #64	; 0x40
   16830:	beq	16884 <argp_failure@@Base+0x92c>
   16834:	ldr	r3, [pc, #2176]	; 170bc <argp_failure@@Base+0x1164>
   16838:	mov	r6, r3
   1683c:	ldr	r2, [r3]
   16840:	cmp	r2, #0
   16844:	beq	16884 <argp_failure@@Base+0x92c>
   16848:	cmp	r5, #0
   1684c:	beq	16874 <argp_failure@@Base+0x91c>
   16850:	ldr	r2, [r4, #28]
   16854:	ldr	r3, [r4, #32]
   16858:	cmp	r2, r3
   1685c:	bcs	16f98 <argp_failure@@Base+0x1040>
   16860:	ldr	r3, [r4, #28]
   16864:	add	r2, r3, #1
   16868:	str	r2, [r4, #28]
   1686c:	mov	r2, #10
   16870:	strb	r2, [r3]
   16874:	ldr	r2, [r6]
   16878:	ldr	r1, [pc, #2112]	; 170c0 <argp_failure@@Base+0x1168>
   1687c:	mov	r0, r4
   16880:	bl	1830c <argp_error@@Base+0x1170>
   16884:	ldr	r0, [fp, #-112]	; 0xffffff90
   16888:	bl	1131c <funlockfile@plt>
   1688c:	cmp	sl, #0
   16890:	beq	1689c <argp_failure@@Base+0x944>
   16894:	mov	r0, sl
   16898:	bl	147b0 <argp_parse@@Base+0x17c0>
   1689c:	mov	r0, r4
   168a0:	bl	181e8 <argp_error@@Base+0x104c>
   168a4:	b	16144 <argp_failure@@Base+0x1ec>
   168a8:	mov	r1, #12
   168ac:	mov	r0, r4
   168b0:	bl	18228 <argp_error@@Base+0x108c>
   168b4:	cmp	r0, #0
   168b8:	bne	16580 <argp_failure@@Base+0x628>
   168bc:	b	165a8 <argp_failure@@Base+0x650>
   168c0:	mov	r1, r4
   168c4:	mov	r0, sl
   168c8:	bl	15424 <argp_parse@@Base+0x2434>
   168cc:	ldr	r3, [fp, #-104]	; 0xffffff98
   168d0:	orr	r3, r3, #2
   168d4:	str	r3, [fp, #-104]	; 0xffffff98
   168d8:	b	165a8 <argp_failure@@Base+0x650>
   168dc:	mov	r1, #1
   168e0:	mov	r0, r4
   168e4:	bl	18228 <argp_error@@Base+0x108c>
   168e8:	cmp	r0, #0
   168ec:	bne	16620 <argp_failure@@Base+0x6c8>
   168f0:	b	16634 <argp_failure@@Base+0x6dc>
   168f4:	mov	r1, #1
   168f8:	mov	r0, r4
   168fc:	bl	18228 <argp_error@@Base+0x108c>
   16900:	cmp	r0, #0
   16904:	bne	166c8 <argp_failure@@Base+0x770>
   16908:	b	166dc <argp_failure@@Base+0x784>
   1690c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16910:	ldr	r2, [r4, #24]
   16914:	ldr	r5, [r3]
   16918:	ldr	r9, [r3, #8]
   1691c:	ldr	r3, [r4, #28]
   16920:	sub	r3, r3, r2
   16924:	ldr	r2, [r4, #16]
   16928:	cmp	r3, r2
   1692c:	bls	16938 <argp_failure@@Base+0x9e0>
   16930:	mov	r0, r4
   16934:	bl	17dd8 <argp_error@@Base+0xc3c>
   16938:	ldr	r2, [r4, #12]
   1693c:	ldr	r3, [r4, #4]
   16940:	str	r2, [fp, #-128]	; 0xffffff80
   16944:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16948:	str	r3, [fp, #-124]	; 0xffffff84
   1694c:	mov	r3, #0
   16950:	str	r3, [r4, #4]
   16954:	str	r2, [fp, #-76]	; 0xffffffb4
   16958:	sub	r2, fp, #88	; 0x58
   1695c:	str	r2, [fp, #-68]	; 0xffffffbc
   16960:	mov	r2, #1
   16964:	str	r2, [fp, #-64]	; 0xffffffc0
   16968:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1696c:	str	r4, [fp, #-72]	; 0xffffffb8
   16970:	str	r2, [fp, #-60]	; 0xffffffc4
   16974:	ldr	r2, [r5, #12]
   16978:	ands	r2, r2, #8
   1697c:	str	r2, [fp, #-120]	; 0xffffff88
   16980:	ldreq	r3, [fp, #-100]	; 0xffffff9c
   16984:	ldreq	r2, [r3, #4]
   16988:	addeq	r3, r5, #24
   1698c:	beq	169b8 <argp_failure@@Base+0xa60>
   16990:	str	r3, [fp, #-120]	; 0xffffff88
   16994:	b	169c0 <argp_failure@@Base+0xa68>
   16998:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1699c:	cmp	r1, #0
   169a0:	beq	169b0 <argp_failure@@Base+0xa58>
   169a4:	ldr	r1, [r3, #-12]
   169a8:	tst	r1, #2
   169ac:	beq	16b48 <argp_failure@@Base+0xbf0>
   169b0:	sub	r2, r2, #1
   169b4:	add	r3, r3, #24
   169b8:	cmp	r2, #0
   169bc:	bne	16998 <argp_failure@@Base+0xa40>
   169c0:	ldr	r3, [pc, #1704]	; 17070 <argp_failure@@Base+0x1118>
   169c4:	ldr	r2, [r4, #24]
   169c8:	ldr	r6, [r3, #8]
   169cc:	ldr	r3, [r4, #28]
   169d0:	sub	r3, r3, r2
   169d4:	ldr	r2, [r4, #16]
   169d8:	cmp	r3, r2
   169dc:	bls	169e8 <argp_failure@@Base+0xa90>
   169e0:	mov	r0, r4
   169e4:	bl	17dd8 <argp_error@@Base+0xc3c>
   169e8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   169ec:	str	r6, [r4, #12]
   169f0:	ldr	r7, [pc, #1656]	; 17070 <argp_failure@@Base+0x1118>
   169f4:	ldr	r8, [r3, #4]
   169f8:	mov	r6, r5
   169fc:	cmp	r8, #0
   16a00:	bne	16b50 <argp_failure@@Base+0xbf8>
   16a04:	ldr	r3, [r5, #12]
   16a08:	ldr	r1, [pc, #1632]	; 17070 <argp_failure@@Base+0x1118>
   16a0c:	tst	r3, #8
   16a10:	ldr	r2, [r4, #24]
   16a14:	ldr	r3, [r4, #28]
   16a18:	beq	16c7c <argp_failure@@Base+0xd24>
   16a1c:	sub	r3, r3, r2
   16a20:	ldr	r2, [r4, #16]
   16a24:	ldr	r6, [r1, #16]
   16a28:	cmp	r3, r2
   16a2c:	bls	16a38 <argp_failure@@Base+0xae0>
   16a30:	mov	r0, r4
   16a34:	bl	17dd8 <argp_error@@Base+0xc3c>
   16a38:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16a3c:	str	r6, [r4, #12]
   16a40:	add	r6, r5, #24
   16a44:	ldr	r7, [r3, #4]
   16a48:	cmp	r7, #0
   16a4c:	bne	16bec <argp_failure@@Base+0xc94>
   16a50:	ldr	r2, [r4, #24]
   16a54:	ldr	r3, [r4, #28]
   16a58:	sub	r3, r3, r2
   16a5c:	ldr	r2, [r4, #16]
   16a60:	cmp	r3, r2
   16a64:	bls	16a70 <argp_failure@@Base+0xb18>
   16a68:	mov	r0, r4
   16a6c:	bl	17dd8 <argp_error@@Base+0xc3c>
   16a70:	mov	r3, #0
   16a74:	str	r3, [r4, #4]
   16a78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16a7c:	cmp	r3, #0
   16a80:	beq	16d1c <argp_failure@@Base+0xdc4>
   16a84:	ldr	r3, [r5, #12]
   16a88:	tst	r3, #8
   16a8c:	bne	16ab8 <argp_failure@@Base+0xb60>
   16a90:	ldr	r6, [r5, #4]
   16a94:	sub	r3, r6, #1
   16a98:	cmp	r3, #254	; 0xfe
   16a9c:	bhi	16ab8 <argp_failure@@Base+0xb60>
   16aa0:	bl	113b8 <__ctype_b_loc@plt>
   16aa4:	lsl	r6, r6, #1
   16aa8:	ldr	r3, [r0]
   16aac:	ldrh	r3, [r3, r6]
   16ab0:	tst	r3, #16384	; 0x4000
   16ab4:	bne	16ae0 <argp_failure@@Base+0xb88>
   16ab8:	ldr	r3, [r5]
   16abc:	cmp	r3, #0
   16ac0:	bne	16ae0 <argp_failure@@Base+0xb88>
   16ac4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16ac8:	sub	r2, fp, #76	; 0x4c
   16acc:	ldr	r0, [r5, #16]
   16ad0:	ldr	r1, [r3, #20]
   16ad4:	bl	14920 <argp_parse@@Base+0x1930>
   16ad8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16adc:	str	r3, [fp, #-88]	; 0xffffffa8
   16ae0:	ldr	r2, [r4, #24]
   16ae4:	ldr	r3, [r4, #28]
   16ae8:	sub	r3, r3, r2
   16aec:	ldr	r2, [r4, #16]
   16af0:	cmp	r3, r2
   16af4:	bls	16b00 <argp_failure@@Base+0xba8>
   16af8:	mov	r0, r4
   16afc:	bl	17dd8 <argp_error@@Base+0xc3c>
   16b00:	ldr	r3, [fp, #-124]	; 0xffffff84
   16b04:	ldr	r2, [r4, #24]
   16b08:	str	r3, [r4, #4]
   16b0c:	ldr	r3, [r4, #28]
   16b10:	sub	r3, r3, r2
   16b14:	ldr	r2, [r4, #16]
   16b18:	cmp	r3, r2
   16b1c:	bls	16b28 <argp_failure@@Base+0xbd0>
   16b20:	mov	r0, r4
   16b24:	bl	17dd8 <argp_error@@Base+0xc3c>
   16b28:	ldr	r3, [fp, #-128]	; 0xffffff80
   16b2c:	str	r3, [r4, #12]
   16b30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16b34:	add	r3, r3, #28
   16b38:	str	r3, [fp, #-100]	; 0xffffff9c
   16b3c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16b40:	sub	r3, r3, #1
   16b44:	b	166f8 <argp_failure@@Base+0x7a0>
   16b48:	mov	r3, #1
   16b4c:	b	16990 <argp_failure@@Base+0xa38>
   16b50:	ldr	r2, [r6, #12]
   16b54:	tst	r2, #8
   16b58:	str	r2, [fp, #-136]	; 0xffffff78
   16b5c:	bne	16b94 <argp_failure@@Base+0xc3c>
   16b60:	ldr	r3, [r6, #4]
   16b64:	sub	r1, r3, #1
   16b68:	cmp	r1, #254	; 0xfe
   16b6c:	str	r3, [fp, #-132]	; 0xffffff7c
   16b70:	bhi	16b94 <argp_failure@@Base+0xc3c>
   16b74:	bl	113b8 <__ctype_b_loc@plt>
   16b78:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16b7c:	ldr	r2, [fp, #-136]	; 0xffffff78
   16b80:	lsl	r1, r3, #1
   16b84:	ldr	r0, [r0]
   16b88:	ldrh	r1, [r0, r1]
   16b8c:	tst	r1, #16384	; 0x4000
   16b90:	bne	16fc4 <argp_failure@@Base+0x106c>
   16b94:	add	r6, r6, #24
   16b98:	sub	r8, r8, #1
   16b9c:	b	169fc <argp_failure@@Base+0xaa4>
   16ba0:	mov	r1, #1
   16ba4:	mov	r0, r4
   16ba8:	bl	18228 <argp_error@@Base+0x108c>
   16bac:	cmp	r0, #0
   16bb0:	bne	16ff4 <argp_failure@@Base+0x109c>
   16bb4:	b	17008 <argp_failure@@Base+0x10b0>
   16bb8:	mov	r1, #1
   16bbc:	mov	r0, r4
   16bc0:	str	r2, [fp, #-132]	; 0xffffff7c
   16bc4:	bl	18228 <argp_error@@Base+0x108c>
   16bc8:	ldr	r2, [fp, #-132]	; 0xffffff7c
   16bcc:	cmp	r0, #0
   16bd0:	bne	1701c <argp_failure@@Base+0x10c4>
   16bd4:	b	1702c <argp_failure@@Base+0x10d4>
   16bd8:	ldr	r3, [r5, #8]
   16bdc:	cmp	r3, #0
   16be0:	movne	r3, #1
   16be4:	strne	r3, [fp, #-80]	; 0xffffffb0
   16be8:	b	17068 <argp_failure@@Base+0x1110>
   16bec:	ldr	r3, [r6, #-24]	; 0xffffffe8
   16bf0:	cmp	r3, #0
   16bf4:	beq	16c58 <argp_failure@@Base+0xd00>
   16bf8:	ldr	r3, [r6, #-12]
   16bfc:	tst	r3, #2
   16c00:	bne	16c58 <argp_failure@@Base+0xd00>
   16c04:	ldr	r3, [pc, #1124]	; 17070 <argp_failure@@Base+0x1118>
   16c08:	sub	r1, fp, #76	; 0x4c
   16c0c:	ldr	r0, [r3, #16]
   16c10:	bl	14af8 <argp_parse@@Base+0x1b08>
   16c14:	ldr	r8, [r6, #-24]	; 0xffffffe8
   16c18:	mov	r0, r8
   16c1c:	bl	113d0 <strlen@plt>
   16c20:	subs	r9, r0, #0
   16c24:	beq	16c58 <argp_failure@@Base+0xd00>
   16c28:	ldr	r3, [r4, #28]
   16c2c:	ldr	r2, [r4, #32]
   16c30:	add	r3, r3, r9
   16c34:	cmp	r2, r3
   16c38:	bcc	16c64 <argp_failure@@Base+0xd0c>
   16c3c:	mov	r2, r9
   16c40:	mov	r1, r8
   16c44:	ldr	r0, [r4, #28]
   16c48:	bl	112b0 <memcpy@plt>
   16c4c:	ldr	r3, [r4, #28]
   16c50:	add	r9, r3, r9
   16c54:	str	r9, [r4, #28]
   16c58:	sub	r7, r7, #1
   16c5c:	add	r6, r6, #24
   16c60:	b	16a48 <argp_failure@@Base+0xaf0>
   16c64:	mov	r1, r9
   16c68:	mov	r0, r4
   16c6c:	bl	18228 <argp_error@@Base+0x108c>
   16c70:	cmp	r0, #0
   16c74:	bne	16c3c <argp_failure@@Base+0xce4>
   16c78:	b	16c58 <argp_failure@@Base+0xd00>
   16c7c:	sub	r3, r3, r2
   16c80:	ldr	r2, [r4, #16]
   16c84:	ldr	r6, [r1, #12]
   16c88:	cmp	r3, r2
   16c8c:	bls	16c98 <argp_failure@@Base+0xd40>
   16c90:	mov	r0, r4
   16c94:	bl	17dd8 <argp_error@@Base+0xc3c>
   16c98:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16c9c:	str	r6, [r4, #12]
   16ca0:	ldr	r7, [pc, #968]	; 17070 <argp_failure@@Base+0x1118>
   16ca4:	ldr	r6, [r3, #4]
   16ca8:	ldr	r8, [pc, #1044]	; 170c4 <argp_failure@@Base+0x116c>
   16cac:	add	r9, r5, #24
   16cb0:	cmp	r6, #0
   16cb4:	beq	16a50 <argp_failure@@Base+0xaf8>
   16cb8:	ldr	r3, [r9, #-24]	; 0xffffffe8
   16cbc:	cmp	r3, #0
   16cc0:	beq	16d10 <argp_failure@@Base+0xdb8>
   16cc4:	ldr	r3, [r9, #-12]
   16cc8:	tst	r3, #2
   16ccc:	bne	16d10 <argp_failure@@Base+0xdb8>
   16cd0:	sub	r1, fp, #76	; 0x4c
   16cd4:	ldr	r0, [r7, #12]
   16cd8:	bl	14af8 <argp_parse@@Base+0x1b08>
   16cdc:	ldr	r2, [r9, #-24]	; 0xffffffe8
   16ce0:	mov	r1, r8
   16ce4:	mov	r0, r4
   16ce8:	bl	1830c <argp_error@@Base+0x1170>
   16cec:	ldr	r2, [r5, #8]
   16cf0:	cmp	r2, #0
   16cf4:	beq	16d10 <argp_failure@@Base+0xdb8>
   16cf8:	ldr	r3, [r5, #12]
   16cfc:	mov	r0, r4
   16d00:	tst	r3, #1
   16d04:	ldrne	r1, [pc, #956]	; 170c8 <argp_failure@@Base+0x1170>
   16d08:	ldreq	r1, [pc, #956]	; 170cc <argp_failure@@Base+0x1174>
   16d0c:	bl	1830c <argp_error@@Base+0x1170>
   16d10:	sub	r6, r6, #1
   16d14:	add	r9, r9, #24
   16d18:	b	16cb0 <argp_failure@@Base+0xd58>
   16d1c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16d20:	ldr	r6, [r5, #16]
   16d24:	ldr	r1, [r5, #4]
   16d28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16d2c:	ldr	r2, [r2, #20]
   16d30:	mov	r0, r6
   16d34:	bl	148dc <argp_parse@@Base+0x18ec>
   16d38:	subs	r5, r0, #0
   16d3c:	beq	16e50 <argp_failure@@Base+0xef8>
   16d40:	ldrb	r3, [r5]
   16d44:	cmp	r3, #0
   16d48:	beq	16e40 <argp_failure@@Base+0xee8>
   16d4c:	ldr	r2, [r4, #24]
   16d50:	ldr	r3, [r4, #28]
   16d54:	sub	r3, r3, r2
   16d58:	ldr	r2, [r4, #16]
   16d5c:	cmp	r3, r2
   16d60:	bls	16d6c <argp_failure@@Base+0xe14>
   16d64:	mov	r0, r4
   16d68:	bl	17dd8 <argp_error@@Base+0xc3c>
   16d6c:	ldr	r2, [r4, #24]
   16d70:	ldr	r3, [r4, #28]
   16d74:	ldr	r7, [r4, #20]
   16d78:	sub	r3, r3, r2
   16d7c:	ldr	r8, [pc, #748]	; 17070 <argp_failure@@Base+0x1118>
   16d80:	ldr	r2, [r4, #16]
   16d84:	bic	r7, r7, r7, asr #31
   16d88:	cmp	r3, r2
   16d8c:	ldr	r9, [r8, #20]
   16d90:	bls	16d9c <argp_failure@@Base+0xe44>
   16d94:	mov	r0, r4
   16d98:	bl	17dd8 <argp_error@@Base+0xc3c>
   16d9c:	ldr	r2, [r4, #24]
   16da0:	ldr	r3, [r4, #28]
   16da4:	str	r9, [r4, #4]
   16da8:	sub	r3, r3, r2
   16dac:	ldr	r2, [r4, #16]
   16db0:	ldr	r8, [r8, #20]
   16db4:	cmp	r3, r2
   16db8:	bls	16dc4 <argp_failure@@Base+0xe6c>
   16dbc:	mov	r0, r4
   16dc0:	bl	17dd8 <argp_error@@Base+0xc3c>
   16dc4:	ldr	r3, [pc, #676]	; 17070 <argp_failure@@Base+0x1118>
   16dc8:	str	r8, [r4, #12]
   16dcc:	ldr	r1, [r3, #20]
   16dd0:	add	r3, r1, #3
   16dd4:	cmp	r7, r3
   16dd8:	bls	16eb8 <argp_failure@@Base+0xf60>
   16ddc:	ldr	r2, [r4, #28]
   16de0:	ldr	r3, [r4, #32]
   16de4:	cmp	r2, r3
   16de8:	bcs	16ea0 <argp_failure@@Base+0xf48>
   16dec:	ldr	r3, [r4, #28]
   16df0:	add	r2, r3, #1
   16df4:	str	r2, [r4, #28]
   16df8:	mov	r2, #10
   16dfc:	strb	r2, [r3]
   16e00:	mov	r0, r5
   16e04:	bl	113d0 <strlen@plt>
   16e08:	subs	r7, r0, #0
   16e0c:	beq	16e40 <argp_failure@@Base+0xee8>
   16e10:	ldr	r3, [r4, #28]
   16e14:	ldr	r2, [r4, #32]
   16e18:	add	r3, r3, r7
   16e1c:	cmp	r2, r3
   16e20:	bcc	16f20 <argp_failure@@Base+0xfc8>
   16e24:	mov	r2, r7
   16e28:	mov	r1, r5
   16e2c:	ldr	r0, [r4, #28]
   16e30:	bl	112b0 <memcpy@plt>
   16e34:	ldr	r3, [r4, #28]
   16e38:	add	r7, r3, r7
   16e3c:	str	r7, [r4, #28]
   16e40:	cmp	r6, r5
   16e44:	beq	16e50 <argp_failure@@Base+0xef8>
   16e48:	mov	r0, r5
   16e4c:	bl	13a8c <argp_parse@@Base+0xa9c>
   16e50:	ldr	r2, [r4, #24]
   16e54:	ldr	r3, [r4, #28]
   16e58:	sub	r3, r3, r2
   16e5c:	ldr	r2, [r4, #16]
   16e60:	cmp	r3, r2
   16e64:	bls	16e70 <argp_failure@@Base+0xf18>
   16e68:	mov	r0, r4
   16e6c:	bl	17dd8 <argp_error@@Base+0xc3c>
   16e70:	mov	r3, #0
   16e74:	str	r3, [r4, #4]
   16e78:	ldr	r2, [r4, #28]
   16e7c:	ldr	r3, [r4, #32]
   16e80:	cmp	r2, r3
   16e84:	bcs	16f38 <argp_failure@@Base+0xfe0>
   16e88:	ldr	r3, [r4, #28]
   16e8c:	add	r2, r3, #1
   16e90:	str	r2, [r4, #28]
   16e94:	mov	r2, #10
   16e98:	strb	r2, [r3]
   16e9c:	b	16ad8 <argp_failure@@Base+0xb80>
   16ea0:	mov	r1, #1
   16ea4:	mov	r0, r4
   16ea8:	bl	18228 <argp_error@@Base+0x108c>
   16eac:	cmp	r0, #0
   16eb0:	bne	16dec <argp_failure@@Base+0xe94>
   16eb4:	b	16e00 <argp_failure@@Base+0xea8>
   16eb8:	cmp	r7, r1
   16ebc:	bcc	16f14 <argp_failure@@Base+0xfbc>
   16ec0:	ldr	r3, [r4, #28]
   16ec4:	ldr	r2, [r4, #32]
   16ec8:	add	r3, r3, #3
   16ecc:	cmp	r2, r3
   16ed0:	bcc	16efc <argp_failure@@Base+0xfa4>
   16ed4:	ldr	r2, [pc, #500]	; 170d0 <argp_failure@@Base+0x1178>
   16ed8:	ldr	r3, [r4, #28]
   16edc:	ldrh	r1, [r2]
   16ee0:	ldrb	r2, [r2, #2]
   16ee4:	strh	r1, [r3]
   16ee8:	strb	r2, [r3, #2]
   16eec:	ldr	r3, [r4, #28]
   16ef0:	add	r3, r3, #3
   16ef4:	str	r3, [r4, #28]
   16ef8:	b	16e00 <argp_failure@@Base+0xea8>
   16efc:	mov	r1, #3
   16f00:	mov	r0, r4
   16f04:	bl	18228 <argp_error@@Base+0x108c>
   16f08:	cmp	r0, #0
   16f0c:	bne	16ed4 <argp_failure@@Base+0xf7c>
   16f10:	b	16e00 <argp_failure@@Base+0xea8>
   16f14:	mov	r0, r4
   16f18:	bl	14854 <argp_parse@@Base+0x1864>
   16f1c:	b	16e00 <argp_failure@@Base+0xea8>
   16f20:	mov	r1, r7
   16f24:	mov	r0, r4
   16f28:	bl	18228 <argp_error@@Base+0x108c>
   16f2c:	cmp	r0, #0
   16f30:	bne	16e24 <argp_failure@@Base+0xecc>
   16f34:	b	16e40 <argp_failure@@Base+0xee8>
   16f38:	mov	r1, #1
   16f3c:	mov	r0, r4
   16f40:	bl	18228 <argp_error@@Base+0x108c>
   16f44:	cmp	r0, #0
   16f48:	bne	16e88 <argp_failure@@Base+0xf30>
   16f4c:	b	16ad8 <argp_failure@@Base+0xb80>
   16f50:	mov	r1, #1
   16f54:	mov	r0, r4
   16f58:	bl	18228 <argp_error@@Base+0x108c>
   16f5c:	cmp	r0, #0
   16f60:	bne	16768 <argp_failure@@Base+0x810>
   16f64:	b	1677c <argp_failure@@Base+0x824>
   16f68:	mov	r1, r6
   16f6c:	mov	r0, r4
   16f70:	bl	18228 <argp_error@@Base+0x108c>
   16f74:	cmp	r0, #0
   16f78:	bne	167a0 <argp_failure@@Base+0x848>
   16f7c:	b	167bc <argp_failure@@Base+0x864>
   16f80:	mov	r1, #1
   16f84:	mov	r0, r4
   16f88:	bl	18228 <argp_error@@Base+0x108c>
   16f8c:	cmp	r0, #0
   16f90:	bne	167cc <argp_failure@@Base+0x874>
   16f94:	b	167e0 <argp_failure@@Base+0x888>
   16f98:	mov	r1, #1
   16f9c:	mov	r0, r4
   16fa0:	bl	18228 <argp_error@@Base+0x108c>
   16fa4:	cmp	r0, #0
   16fa8:	bne	16860 <argp_failure@@Base+0x908>
   16fac:	b	16874 <argp_failure@@Base+0x91c>
   16fb0:	cmp	r0, #110	; 0x6e
   16fb4:	beq	162d0 <argp_failure@@Base+0x378>
   16fb8:	mov	sl, r5
   16fbc:	mov	r7, r5
   16fc0:	b	162fc <argp_failure@@Base+0x3a4>
   16fc4:	ldrb	r1, [r9]
   16fc8:	cmp	r3, r1
   16fcc:	bne	16b94 <argp_failure@@Base+0xc3c>
   16fd0:	tst	r2, #2
   16fd4:	bne	17068 <argp_failure@@Base+0x1110>
   16fd8:	sub	r1, fp, #76	; 0x4c
   16fdc:	ldr	r0, [r7, #8]
   16fe0:	bl	14af8 <argp_parse@@Base+0x1b08>
   16fe4:	ldr	r2, [r4, #28]
   16fe8:	ldr	r3, [r4, #32]
   16fec:	cmp	r2, r3
   16ff0:	bcs	16ba0 <argp_failure@@Base+0xc48>
   16ff4:	ldr	r3, [r4, #28]
   16ff8:	add	r2, r3, #1
   16ffc:	str	r2, [r4, #28]
   17000:	mov	r2, #45	; 0x2d
   17004:	strb	r2, [r3]
   17008:	ldr	r1, [r4, #28]
   1700c:	ldr	r3, [r4, #32]
   17010:	ldrb	r2, [r9]
   17014:	cmp	r1, r3
   17018:	bcs	16bb8 <argp_failure@@Base+0xc60>
   1701c:	ldr	r3, [r4, #28]
   17020:	add	r1, r3, #1
   17024:	str	r1, [r4, #28]
   17028:	strb	r2, [r3]
   1702c:	ldr	r3, [fp, #-120]	; 0xffffff88
   17030:	cmp	r3, #0
   17034:	beq	17044 <argp_failure@@Base+0x10ec>
   17038:	ldr	r3, [r7]
   1703c:	cmp	r3, #0
   17040:	beq	16bd8 <argp_failure@@Base+0xc80>
   17044:	ldr	r2, [r5, #8]
   17048:	cmp	r2, #0
   1704c:	beq	17068 <argp_failure@@Base+0x1110>
   17050:	ldr	r3, [r5, #12]
   17054:	mov	r0, r4
   17058:	tst	r3, #1
   1705c:	ldrne	r1, [pc, #112]	; 170d4 <argp_failure@@Base+0x117c>
   17060:	ldreq	r1, [pc, #112]	; 170d8 <argp_failure@@Base+0x1180>
   17064:	bl	1830c <argp_error@@Base+0x1170>
   17068:	add	r9, r9, #1
   1706c:	b	16b94 <argp_failure@@Base+0xc3c>
   17070:	andeq	sl, r2, r8, lsr #5
   17074:	andeq	r9, r1, r6, lsr #6
   17078:	andeq	r9, r1, r9, lsl #7
   1707c:	andeq	r9, r1, lr, lsr #3
   17080:	ldrdeq	r9, [r1], -sl
   17084:	andeq	r9, r1, r6, lsr #7
   17088:	andeq	r9, r1, r4, lsr r3
   1708c:	andeq	r9, r1, lr, lsr r2
   17090:	andeq	r9, r1, r3, ror #6
   17094:	andeq	r8, r1, r3, ror #26
   17098:	andeq	r8, r1, fp, asr sp
   1709c:			; <UNDEFINED> instruction: 0x00015cb0
   170a0:	strdeq	r9, [r1], -r6
   170a4:	andeq	r9, r1, r2, ror #7
   170a8:	andeq	r9, r1, pc, ror #7
   170ac:	andeq	r9, r1, r9, ror #7
   170b0:	andeq	r9, r1, r3, lsl #8
   170b4:	andeq	r0, r0, #5
   170b8:	andeq	r9, r1, r2, asr r4
   170bc:	andeq	fp, r2, r8, asr #4
   170c0:	andeq	r9, r1, r6, asr #9
   170c4:	andeq	r9, r1, pc, lsr r4
   170c8:	andeq	r9, r1, r4, asr #8
   170cc:	andeq	r9, r1, sl, asr #8
   170d0:	andeq	r9, r1, lr, asr #8
   170d4:	andeq	r9, r1, sl, lsr r4
   170d8:	andeq	r9, r1, r2, lsr #7

000170dc <argp_help@@Base>:
   170dc:	push	{r0, r1, r2, lr}
   170e0:	str	r3, [sp]
   170e4:	mov	r3, r2
   170e8:	mov	r2, r1
   170ec:	mov	r1, #0
   170f0:	bl	160a8 <argp_failure@@Base+0x150>
   170f4:	add	sp, sp, #12
   170f8:	pop	{pc}		; (ldr pc, [sp], #4)

000170fc <argp_state_help@@Base>:
   170fc:	push	{r0, r1, r2, r4, r5, lr}
   17100:	subs	r4, r0, #0
   17104:	mov	r5, r2
   17108:	beq	17120 <argp_state_help@@Base+0x24>
   1710c:	ldr	r3, [r4, #16]
   17110:	tst	r3, #2
   17114:	beq	17138 <argp_state_help@@Base+0x3c>
   17118:	add	sp, sp, #12
   1711c:	pop	{r4, r5, pc}
   17120:	cmp	r1, #0
   17124:	beq	17118 <argp_state_help@@Base+0x1c>
   17128:	ldr	r3, [pc, #100]	; 17194 <argp_state_help@@Base+0x98>
   1712c:	mov	r0, r4
   17130:	ldr	r3, [r3]
   17134:	b	17150 <argp_state_help@@Base+0x54>
   17138:	cmp	r1, #0
   1713c:	beq	17118 <argp_state_help@@Base+0x1c>
   17140:	tst	r3, #64	; 0x40
   17144:	ldr	r0, [r4]
   17148:	ldr	r3, [r4, #40]	; 0x28
   1714c:	orrne	r5, r5, #128	; 0x80
   17150:	str	r3, [sp]
   17154:	mov	r2, r1
   17158:	mov	r3, r5
   1715c:	mov	r1, r4
   17160:	bl	160a8 <argp_failure@@Base+0x150>
   17164:	cmp	r4, #0
   17168:	beq	17178 <argp_state_help@@Base+0x7c>
   1716c:	ldr	r3, [r4, #16]
   17170:	tst	r3, #32
   17174:	bne	17118 <argp_state_help@@Base+0x1c>
   17178:	ands	r0, r5, #256	; 0x100
   1717c:	ldrne	r3, [pc, #20]	; 17198 <argp_state_help@@Base+0x9c>
   17180:	ldrne	r0, [r3]
   17184:	bne	17190 <argp_state_help@@Base+0x94>
   17188:	tst	r5, #512	; 0x200
   1718c:	beq	17118 <argp_state_help@@Base+0x1c>
   17190:	bl	113c4 <exit@plt>
   17194:	andeq	sl, r2, r8, ror #5
   17198:	andeq	sl, r2, r0, ror #5

0001719c <argp_error@@Base>:
   1719c:	push	{r1, r2, r3}
   171a0:	push	{r0, r1, r4, r5, lr}
   171a4:	subs	r5, r0, #0
   171a8:	beq	171d4 <argp_error@@Base+0x38>
   171ac:	ldr	r3, [r5, #16]
   171b0:	tst	r3, #2
   171b4:	bne	171c4 <argp_error@@Base+0x28>
   171b8:	ldr	r4, [r5, #44]	; 0x2c
   171bc:	cmp	r4, #0
   171c0:	bne	17200 <argp_error@@Base+0x64>
   171c4:	add	sp, sp, #8
   171c8:	pop	{r4, r5, lr}
   171cc:	add	sp, sp, #12
   171d0:	bx	lr
   171d4:	ldr	r3, [pc, #144]	; 1726c <argp_error@@Base+0xd0>
   171d8:	ldr	r4, [r3]
   171dc:	cmp	r4, #0
   171e0:	beq	171c4 <argp_error@@Base+0x28>
   171e4:	mov	r0, r4
   171e8:	bl	114f0 <flockfile@plt>
   171ec:	add	r3, sp, #24
   171f0:	str	r3, [sp, #4]
   171f4:	ldr	r3, [pc, #116]	; 17270 <argp_error@@Base+0xd4>
   171f8:	ldr	r0, [r3]
   171fc:	b	17214 <argp_error@@Base+0x78>
   17200:	mov	r0, r4
   17204:	bl	114f0 <flockfile@plt>
   17208:	ldr	r0, [r5, #40]	; 0x28
   1720c:	add	r3, sp, #24
   17210:	str	r3, [sp, #4]
   17214:	mov	r1, r4
   17218:	bl	11214 <fputs_unlocked@plt>
   1721c:	mov	r1, r4
   17220:	mov	r0, #58	; 0x3a
   17224:	bl	115a4 <putc_unlocked@plt>
   17228:	mov	r1, r4
   1722c:	mov	r0, #32
   17230:	bl	115a4 <putc_unlocked@plt>
   17234:	ldr	r2, [sp, #4]
   17238:	ldr	r1, [sp, #20]
   1723c:	mov	r0, r4
   17240:	bl	11490 <vfprintf@plt>
   17244:	mov	r1, r4
   17248:	mov	r0, #10
   1724c:	bl	115a4 <putc_unlocked@plt>
   17250:	mov	r0, r5
   17254:	mov	r2, #260	; 0x104
   17258:	mov	r1, r4
   1725c:	bl	170fc <argp_state_help@@Base>
   17260:	mov	r0, r4
   17264:	bl	1131c <funlockfile@plt>
   17268:	b	171c4 <argp_error@@Base+0x28>
   1726c:	strdeq	sl, [r2], -r0
   17270:	andeq	sl, r2, r8, ror #5
   17274:	ldr	r3, [r1, #32]
   17278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1727c:	ldr	r7, [r1, #28]
   17280:	ldr	r6, [r1]
   17284:	add	r8, r0, r3, lsl #2
   17288:	mov	lr, r6
   1728c:	mov	r4, r7
   17290:	cmp	lr, r3
   17294:	movle	r2, #0
   17298:	movgt	r2, #1
   1729c:	cmp	r4, r3
   172a0:	movge	r2, #0
   172a4:	cmp	r2, #0
   172a8:	bne	172c0 <argp_error@@Base+0x124>
   172ac:	sub	r3, r6, r3
   172b0:	add	r3, r3, r7
   172b4:	str	r3, [r1, #28]
   172b8:	str	r6, [r1, #32]
   172bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172c0:	sub	r2, r3, r4
   172c4:	sub	r5, lr, r3
   172c8:	cmp	r5, r2
   172cc:	lsl	ip, r4, #2
   172d0:	addle	r2, r0, ip
   172d4:	movle	r9, r8
   172d8:	movle	ip, #0
   172dc:	ble	17310 <argp_error@@Base+0x174>
   172e0:	sub	r2, lr, r2
   172e4:	add	ip, r0, ip
   172e8:	add	r5, r0, r2, lsl #2
   172ec:	add	lr, r0, lr, lsl #2
   172f0:	ldr	r9, [ip]
   172f4:	ldr	sl, [r5]
   172f8:	str	sl, [ip], #4
   172fc:	str	r9, [r5], #4
   17300:	cmp	lr, r5
   17304:	bne	172f0 <argp_error@@Base+0x154>
   17308:	mov	lr, r2
   1730c:	b	17290 <argp_error@@Base+0xf4>
   17310:	ldr	sl, [r2]
   17314:	ldr	fp, [r9]
   17318:	add	ip, ip, #1
   1731c:	cmp	r5, ip
   17320:	str	fp, [r2], #4
   17324:	str	sl, [r9], #4
   17328:	bgt	17310 <argp_error@@Base+0x174>
   1732c:	add	r4, r4, r5
   17330:	mov	r2, lr
   17334:	b	17308 <argp_error@@Base+0x16c>
   17338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1733c:	sub	sp, sp, #44	; 0x2c
   17340:	mov	sl, r1
   17344:	ldr	r4, [sp, #88]	; 0x58
   17348:	str	r0, [sp, #36]	; 0x24
   1734c:	str	r2, [sp, #32]
   17350:	ldr	r8, [r4, #20]
   17354:	str	r3, [sp, #20]
   17358:	mov	r9, r8
   1735c:	mov	r3, r9
   17360:	ldrb	r6, [r3], #1
   17364:	cmp	r6, #0
   17368:	cmpne	r6, #61	; 0x3d
   1736c:	movne	r6, #1
   17370:	moveq	r6, #0
   17374:	bne	1743c <argp_error@@Base+0x2a0>
   17378:	sub	r3, r9, r8
   1737c:	str	r3, [sp, #24]
   17380:	ldr	r3, [sp, #20]
   17384:	add	r7, r3, r6, lsl #4
   17388:	ldr	r5, [r3, r6, lsl #4]
   1738c:	cmp	r5, #0
   17390:	bne	17444 <argp_error@@Base+0x2a8>
   17394:	mov	r8, r5
   17398:	mov	r7, r5
   1739c:	mov	fp, r3
   173a0:	mvn	r3, #0
   173a4:	str	r3, [sp, #16]
   173a8:	str	r5, [sp, #28]
   173ac:	str	r5, [sp, #12]
   173b0:	ldr	r0, [fp]
   173b4:	cmp	r0, #0
   173b8:	bne	17478 <argp_error@@Base+0x2dc>
   173bc:	cmp	r5, #0
   173c0:	cmpeq	r8, #0
   173c4:	beq	175b0 <argp_error@@Base+0x414>
   173c8:	ldr	r3, [sp, #92]	; 0x5c
   173cc:	cmp	r3, #0
   173d0:	beq	173fc <argp_error@@Base+0x260>
   173d4:	cmp	r5, #0
   173d8:	ldr	r7, [pc, #908]	; 1776c <argp_error@@Base+0x5d0>
   173dc:	beq	1753c <argp_error@@Base+0x3a0>
   173e0:	ldr	r3, [r4, #20]
   173e4:	ldr	r2, [sl]
   173e8:	str	r3, [sp]
   173ec:	ldr	r1, [pc, #892]	; 17770 <argp_error@@Base+0x5d4>
   173f0:	ldr	r3, [sp, #96]	; 0x60
   173f4:	ldr	r0, [r7]
   173f8:	bl	113e8 <fprintf@plt>
   173fc:	ldr	r3, [sp, #28]
   17400:	cmp	r3, #0
   17404:	beq	17410 <argp_error@@Base+0x274>
   17408:	mov	r0, r8
   1740c:	bl	13a8c <argp_parse@@Base+0xa9c>
   17410:	ldr	r5, [r4, #20]
   17414:	mov	r0, r5
   17418:	bl	113d0 <strlen@plt>
   1741c:	ldr	r3, [r4]
   17420:	add	r3, r3, #1
   17424:	str	r3, [r4]
   17428:	mov	r3, #0
   1742c:	add	r0, r5, r0
   17430:	str	r0, [r4, #20]
   17434:	str	r3, [r4, #8]
   17438:	b	17638 <argp_error@@Base+0x49c>
   1743c:	mov	r9, r3
   17440:	b	1735c <argp_error@@Base+0x1c0>
   17444:	ldr	r2, [sp, #24]
   17448:	mov	r1, r8
   1744c:	mov	r0, r5
   17450:	bl	11544 <strncmp@plt>
   17454:	cmp	r0, #0
   17458:	bne	17470 <argp_error@@Base+0x2d4>
   1745c:	mov	r0, r5
   17460:	bl	113d0 <strlen@plt>
   17464:	ldr	r3, [sp, #24]
   17468:	cmp	r3, r0
   1746c:	beq	17644 <argp_error@@Base+0x4a8>
   17470:	add	r6, r6, #1
   17474:	b	17380 <argp_error@@Base+0x1e4>
   17478:	ldr	r2, [sp, #24]
   1747c:	ldr	r1, [r4, #20]
   17480:	bl	11544 <strncmp@plt>
   17484:	cmp	r0, #0
   17488:	bne	17528 <argp_error@@Base+0x38c>
   1748c:	cmp	r7, #0
   17490:	moveq	r7, fp
   17494:	ldreq	r3, [sp, #12]
   17498:	streq	r3, [sp, #16]
   1749c:	beq	17528 <argp_error@@Base+0x38c>
   174a0:	ldr	r3, [sp, #84]	; 0x54
   174a4:	cmp	r3, #0
   174a8:	bne	174dc <argp_error@@Base+0x340>
   174ac:	ldr	r1, [r7, #4]
   174b0:	ldr	r2, [fp, #4]
   174b4:	cmp	r1, r2
   174b8:	bne	174dc <argp_error@@Base+0x340>
   174bc:	ldr	r1, [r7, #8]
   174c0:	ldr	r2, [fp, #8]
   174c4:	cmp	r1, r2
   174c8:	bne	174dc <argp_error@@Base+0x340>
   174cc:	ldr	r1, [r7, #12]
   174d0:	ldr	r2, [fp, #12]
   174d4:	cmp	r1, r2
   174d8:	beq	17528 <argp_error@@Base+0x38c>
   174dc:	cmp	r5, #0
   174e0:	bne	17528 <argp_error@@Base+0x38c>
   174e4:	ldr	r3, [sp, #92]	; 0x5c
   174e8:	cmp	r3, #0
   174ec:	beq	17510 <argp_error@@Base+0x374>
   174f0:	cmp	r8, #0
   174f4:	bne	1751c <argp_error@@Base+0x380>
   174f8:	mov	r0, r6
   174fc:	bl	14540 <argp_parse@@Base+0x1550>
   17500:	subs	r8, r0, #0
   17504:	bne	17748 <argp_error@@Base+0x5ac>
   17508:	mov	r5, #1
   1750c:	b	17528 <argp_error@@Base+0x38c>
   17510:	cmp	r8, #0
   17514:	mov	r5, #1
   17518:	beq	17528 <argp_error@@Base+0x38c>
   1751c:	ldr	r3, [sp, #12]
   17520:	mov	r2, #1
   17524:	strb	r2, [r8, r3]
   17528:	ldr	r3, [sp, #12]
   1752c:	add	fp, fp, #16
   17530:	add	r3, r3, #1
   17534:	str	r3, [sp, #12]
   17538:	b	173b0 <argp_error@@Base+0x214>
   1753c:	ldr	r0, [r7]
   17540:	bl	114f0 <flockfile@plt>
   17544:	ldr	r3, [r4, #20]
   17548:	ldr	r2, [sl]
   1754c:	str	r3, [sp]
   17550:	ldr	r1, [pc, #540]	; 17774 <argp_error@@Base+0x5d8>
   17554:	ldr	r3, [sp, #96]	; 0x60
   17558:	ldr	r0, [r7]
   1755c:	bl	113e8 <fprintf@plt>
   17560:	ldr	r9, [pc, #528]	; 17778 <argp_error@@Base+0x5dc>
   17564:	cmp	r6, r5
   17568:	bne	17584 <argp_error@@Base+0x3e8>
   1756c:	ldr	r1, [r7]
   17570:	mov	r0, #10
   17574:	bl	114a8 <fputc@plt>
   17578:	ldr	r0, [r7]
   1757c:	bl	1131c <funlockfile@plt>
   17580:	b	173fc <argp_error@@Base+0x260>
   17584:	ldrb	r3, [r8, r5]
   17588:	cmp	r3, #0
   1758c:	beq	175a8 <argp_error@@Base+0x40c>
   17590:	ldr	r3, [sp, #20]
   17594:	ldr	r2, [sp, #96]	; 0x60
   17598:	mov	r1, r9
   1759c:	ldr	r3, [r3, r5, lsl #4]
   175a0:	ldr	r0, [r7]
   175a4:	bl	113e8 <fprintf@plt>
   175a8:	add	r5, r5, #1
   175ac:	b	17564 <argp_error@@Base+0x3c8>
   175b0:	cmp	r7, #0
   175b4:	bne	17648 <argp_error@@Base+0x4ac>
   175b8:	ldr	r3, [sp, #84]	; 0x54
   175bc:	cmp	r3, #0
   175c0:	beq	175f4 <argp_error@@Base+0x458>
   175c4:	ldr	r3, [r4]
   175c8:	ldr	r3, [sl, r3, lsl #2]
   175cc:	ldrb	r3, [r3, #1]
   175d0:	cmp	r3, #45	; 0x2d
   175d4:	beq	175f4 <argp_error@@Base+0x458>
   175d8:	ldr	r3, [r4, #20]
   175dc:	ldr	r0, [sp, #32]
   175e0:	ldrb	r1, [r3]
   175e4:	bl	113dc <strchr@plt>
   175e8:	cmp	r0, #0
   175ec:	mvnne	r0, #0
   175f0:	bne	1763c <argp_error@@Base+0x4a0>
   175f4:	ldr	r3, [sp, #92]	; 0x5c
   175f8:	cmp	r3, #0
   175fc:	beq	17620 <argp_error@@Base+0x484>
   17600:	ldr	r0, [pc, #356]	; 1776c <argp_error@@Base+0x5d0>
   17604:	ldr	r3, [r4, #20]
   17608:	ldr	r2, [sl]
   1760c:	str	r3, [sp]
   17610:	ldr	r1, [pc, #356]	; 1777c <argp_error@@Base+0x5e0>
   17614:	ldr	r3, [sp, #96]	; 0x60
   17618:	ldr	r0, [r0]
   1761c:	bl	113e8 <fprintf@plt>
   17620:	ldr	r3, [r4]
   17624:	mov	r2, #0
   17628:	add	r3, r3, #1
   1762c:	str	r2, [r4, #20]
   17630:	str	r3, [r4]
   17634:	str	r2, [r4, #8]
   17638:	mov	r0, #63	; 0x3f
   1763c:	add	sp, sp, #44	; 0x2c
   17640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17644:	str	r6, [sp, #16]
   17648:	ldr	r3, [r4]
   1764c:	mov	r1, #0
   17650:	add	r2, r3, #1
   17654:	str	r2, [r4]
   17658:	str	r1, [r4, #20]
   1765c:	ldrb	r1, [r9]
   17660:	cmp	r1, #0
   17664:	ldr	r1, [r7, #4]
   17668:	beq	176b0 <argp_error@@Base+0x514>
   1766c:	cmp	r1, #0
   17670:	addne	r9, r9, #1
   17674:	strne	r9, [r4, #12]
   17678:	bne	176d4 <argp_error@@Base+0x538>
   1767c:	ldr	r3, [sp, #92]	; 0x5c
   17680:	cmp	r3, #0
   17684:	beq	176a8 <argp_error@@Base+0x50c>
   17688:	ldr	r0, [pc, #220]	; 1776c <argp_error@@Base+0x5d0>
   1768c:	ldr	r3, [r7]
   17690:	ldr	r2, [sl]
   17694:	str	r3, [sp]
   17698:	ldr	r1, [pc, #224]	; 17780 <argp_error@@Base+0x5e4>
   1769c:	ldr	r3, [sp, #96]	; 0x60
   176a0:	ldr	r0, [r0]
   176a4:	bl	113e8 <fprintf@plt>
   176a8:	ldr	r3, [r7, #12]
   176ac:	b	17434 <argp_error@@Base+0x298>
   176b0:	cmp	r1, #1
   176b4:	bne	176d4 <argp_error@@Base+0x538>
   176b8:	ldr	r1, [sp, #36]	; 0x24
   176bc:	cmp	r2, r1
   176c0:	bge	176fc <argp_error@@Base+0x560>
   176c4:	add	r3, r3, #2
   176c8:	str	r3, [r4]
   176cc:	ldr	r3, [sl, r2, lsl #2]
   176d0:	str	r3, [r4, #12]
   176d4:	ldr	r3, [sp, #80]	; 0x50
   176d8:	cmp	r3, #0
   176dc:	ldrne	r2, [sp, #16]
   176e0:	strne	r2, [r3]
   176e4:	ldr	r3, [r7, #8]
   176e8:	ldr	r0, [r7, #12]
   176ec:	cmp	r3, #0
   176f0:	strne	r0, [r3]
   176f4:	movne	r0, #0
   176f8:	b	1763c <argp_error@@Base+0x4a0>
   176fc:	ldr	r3, [sp, #92]	; 0x5c
   17700:	cmp	r3, #0
   17704:	beq	17728 <argp_error@@Base+0x58c>
   17708:	ldr	r0, [pc, #92]	; 1776c <argp_error@@Base+0x5d0>
   1770c:	ldr	r3, [r7]
   17710:	ldr	r2, [sl]
   17714:	str	r3, [sp]
   17718:	ldr	r1, [pc, #100]	; 17784 <argp_error@@Base+0x5e8>
   1771c:	ldr	r3, [sp, #96]	; 0x60
   17720:	ldr	r0, [r0]
   17724:	bl	113e8 <fprintf@plt>
   17728:	ldr	r3, [r7, #12]
   1772c:	str	r3, [r4, #8]
   17730:	ldr	r3, [sp, #32]
   17734:	ldrb	r0, [r3]
   17738:	cmp	r0, #58	; 0x3a
   1773c:	moveq	r0, #58	; 0x3a
   17740:	movne	r0, #63	; 0x3f
   17744:	b	1763c <argp_error@@Base+0x4a0>
   17748:	mov	r2, r6
   1774c:	mov	r1, #0
   17750:	bl	11418 <memset@plt>
   17754:	ldr	r3, [sp, #16]
   17758:	mov	r2, #1
   1775c:	strb	r2, [r8, r3]
   17760:	mov	r3, #1
   17764:	str	r3, [sp, #28]
   17768:	b	1751c <argp_error@@Base+0x380>
   1776c:	strdeq	sl, [r2], -r0
   17770:	ldrdeq	r9, [r1], -sl
   17774:	strdeq	r9, [r1], -sl
   17778:	andeq	r9, r1, r9, lsr #10
   1777c:	andeq	r9, r1, r1, lsr r5
   17780:	andeq	r9, r1, r1, asr r5
   17784:	andeq	r9, r1, lr, ror r5
   17788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1778c:	sub	sp, sp, #36	; 0x24
   17790:	subs	r8, r0, #0
   17794:	ldr	r4, [sp, #80]	; 0x50
   17798:	ldr	fp, [sp, #72]	; 0x48
   1779c:	ldr	r5, [sp, #76]	; 0x4c
   177a0:	ldr	r9, [r4, #4]
   177a4:	bgt	177b4 <argp_error@@Base+0x618>
   177a8:	mvn	r0, #0
   177ac:	add	sp, sp, #36	; 0x24
   177b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177b4:	mov	sl, r3
   177b8:	mov	r3, #0
   177bc:	str	r3, [r4, #12]
   177c0:	ldr	r3, [r4]
   177c4:	mov	r7, r1
   177c8:	cmp	r3, #0
   177cc:	mov	r6, r2
   177d0:	beq	177f4 <argp_error@@Base+0x658>
   177d4:	ldr	r3, [r4, #16]
   177d8:	cmp	r3, #0
   177dc:	beq	177fc <argp_error@@Base+0x660>
   177e0:	ldrb	r3, [r2]
   177e4:	sub	r3, r3, #43	; 0x2b
   177e8:	tst	r3, #253	; 0xfd
   177ec:	addeq	r6, r2, #1
   177f0:	b	17838 <argp_error@@Base+0x69c>
   177f4:	mov	r3, #1
   177f8:	str	r3, [r4]
   177fc:	ldr	r3, [r4]
   17800:	str	r3, [r4, #32]
   17804:	str	r3, [r4, #28]
   17808:	mov	r3, #0
   1780c:	str	r3, [r4, #20]
   17810:	ldrb	r2, [r6]
   17814:	cmp	r2, #45	; 0x2d
   17818:	moveq	r3, #2
   1781c:	beq	17828 <argp_error@@Base+0x68c>
   17820:	cmp	r2, #43	; 0x2b
   17824:	bne	17938 <argp_error@@Base+0x79c>
   17828:	add	r6, r6, #1
   1782c:	str	r3, [r4, #24]
   17830:	mov	r3, #1
   17834:	str	r3, [r4, #16]
   17838:	ldrb	r3, [r6]
   1783c:	cmp	r3, #58	; 0x3a
   17840:	ldr	r3, [r4, #20]
   17844:	moveq	r9, #0
   17848:	cmp	r3, #0
   1784c:	beq	1785c <argp_error@@Base+0x6c0>
   17850:	ldrb	r3, [r3]
   17854:	cmp	r3, #0
   17858:	bne	179f0 <argp_error@@Base+0x854>
   1785c:	ldr	r3, [r4]
   17860:	ldr	r2, [r4, #32]
   17864:	cmp	r2, r3
   17868:	ldr	r2, [r4, #28]
   1786c:	strgt	r3, [r4, #32]
   17870:	cmp	r3, r2
   17874:	ldr	r2, [r4, #24]
   17878:	strlt	r3, [r4, #28]
   1787c:	cmp	r2, #1
   17880:	bne	178b8 <argp_error@@Base+0x71c>
   17884:	ldr	r1, [r4, #32]
   17888:	ldr	r2, [r4, #28]
   1788c:	cmp	r2, r1
   17890:	beq	17968 <argp_error@@Base+0x7cc>
   17894:	cmp	r3, r1
   17898:	beq	178a8 <argp_error@@Base+0x70c>
   1789c:	mov	r1, r4
   178a0:	mov	r0, r7
   178a4:	bl	17274 <argp_error@@Base+0xd8>
   178a8:	ldr	r3, [r4]
   178ac:	cmp	r8, r3
   178b0:	bgt	17974 <argp_error@@Base+0x7d8>
   178b4:	str	r3, [r4, #32]
   178b8:	ldr	r3, [r4]
   178bc:	cmp	r8, r3
   178c0:	beq	17918 <argp_error@@Base+0x77c>
   178c4:	ldr	r1, [pc, #920]	; 17c64 <argp_error@@Base+0xac8>
   178c8:	ldr	r0, [r7, r3, lsl #2]
   178cc:	str	r3, [sp, #24]
   178d0:	bl	11244 <strcmp@plt>
   178d4:	cmp	r0, #0
   178d8:	bne	17918 <argp_error@@Base+0x77c>
   178dc:	ldr	r1, [r4, #28]
   178e0:	ldr	r3, [sp, #24]
   178e4:	ldr	r2, [r4, #32]
   178e8:	add	r3, r3, #1
   178ec:	cmp	r1, r2
   178f0:	str	r3, [r4]
   178f4:	streq	r3, [r4, #28]
   178f8:	beq	17910 <argp_error@@Base+0x774>
   178fc:	cmp	r3, r2
   17900:	beq	17910 <argp_error@@Base+0x774>
   17904:	mov	r1, r4
   17908:	mov	r0, r7
   1790c:	bl	17274 <argp_error@@Base+0xd8>
   17910:	str	r8, [r4, #32]
   17914:	str	r8, [r4]
   17918:	ldr	r2, [r4]
   1791c:	cmp	r8, r2
   17920:	bne	1799c <argp_error@@Base+0x800>
   17924:	ldr	r3, [r4, #28]
   17928:	ldr	r2, [r4, #32]
   1792c:	cmp	r3, r2
   17930:	strne	r3, [r4]
   17934:	b	177a8 <argp_error@@Base+0x60c>
   17938:	ldr	r3, [sp, #84]	; 0x54
   1793c:	cmp	r3, #0
   17940:	beq	17950 <argp_error@@Base+0x7b4>
   17944:	mov	r3, #0
   17948:	str	r3, [r4, #24]
   1794c:	b	17830 <argp_error@@Base+0x694>
   17950:	ldr	r0, [pc, #784]	; 17c68 <argp_error@@Base+0xacc>
   17954:	bl	11358 <getenv@plt>
   17958:	cmp	r0, #0
   1795c:	bne	17944 <argp_error@@Base+0x7a8>
   17960:	mov	r3, #1
   17964:	b	17948 <argp_error@@Base+0x7ac>
   17968:	cmp	r3, r2
   1796c:	strne	r3, [r4, #28]
   17970:	b	178a8 <argp_error@@Base+0x70c>
   17974:	ldr	r2, [r7, r3, lsl #2]
   17978:	ldrb	r1, [r2]
   1797c:	cmp	r1, #45	; 0x2d
   17980:	bne	17990 <argp_error@@Base+0x7f4>
   17984:	ldrb	r2, [r2, #1]
   17988:	cmp	r2, #0
   1798c:	bne	178b4 <argp_error@@Base+0x718>
   17990:	add	r3, r3, #1
   17994:	str	r3, [r4]
   17998:	b	178a8 <argp_error@@Base+0x70c>
   1799c:	ldr	r3, [r7, r2, lsl #2]
   179a0:	ldrb	r1, [r3]
   179a4:	cmp	r1, #45	; 0x2d
   179a8:	bne	179b8 <argp_error@@Base+0x81c>
   179ac:	ldrb	r1, [r3, #1]
   179b0:	cmp	r1, #0
   179b4:	bne	179d8 <argp_error@@Base+0x83c>
   179b8:	ldr	r1, [r4, #24]
   179bc:	cmp	r1, #0
   179c0:	beq	177a8 <argp_error@@Base+0x60c>
   179c4:	add	r2, r2, #1
   179c8:	str	r2, [r4]
   179cc:	str	r3, [r4, #12]
   179d0:	mov	r0, #1
   179d4:	b	177ac <argp_error@@Base+0x610>
   179d8:	cmp	sl, #0
   179dc:	bne	17a6c <argp_error@@Base+0x8d0>
   179e0:	ldr	r3, [r4]
   179e4:	ldr	r3, [r7, r3, lsl #2]
   179e8:	add	r3, r3, #1
   179ec:	str	r3, [r4, #20]
   179f0:	ldr	r3, [r4, #20]
   179f4:	mov	r0, r6
   179f8:	add	r2, r3, #1
   179fc:	str	r2, [r4, #20]
   17a00:	ldrb	r5, [r3]
   17a04:	str	r2, [sp, #28]
   17a08:	str	r3, [sp, #24]
   17a0c:	mov	r1, r5
   17a10:	bl	113dc <strchr@plt>
   17a14:	ldr	r3, [sp, #24]
   17a18:	ldr	r2, [sp, #28]
   17a1c:	ldrb	r1, [r3, #1]
   17a20:	cmp	r1, #0
   17a24:	ldreq	r1, [r4]
   17a28:	addeq	r1, r1, #1
   17a2c:	streq	r1, [r4]
   17a30:	sub	r1, r5, #58	; 0x3a
   17a34:	cmp	r0, #0
   17a38:	cmpne	r1, #1
   17a3c:	bhi	17b18 <argp_error@@Base+0x97c>
   17a40:	cmp	r9, #0
   17a44:	beq	17a60 <argp_error@@Base+0x8c4>
   17a48:	ldr	r0, [pc, #540]	; 17c6c <argp_error@@Base+0xad0>
   17a4c:	mov	r3, r5
   17a50:	ldr	r2, [r7]
   17a54:	ldr	r1, [pc, #532]	; 17c70 <argp_error@@Base+0xad4>
   17a58:	ldr	r0, [r0]
   17a5c:	bl	113e8 <fprintf@plt>
   17a60:	str	r5, [r4, #8]
   17a64:	mov	r0, #63	; 0x3f
   17a68:	b	177ac <argp_error@@Base+0x610>
   17a6c:	cmp	r1, #45	; 0x2d
   17a70:	bne	17aac <argp_error@@Base+0x910>
   17a74:	add	r3, r3, #2
   17a78:	str	r3, [r4, #20]
   17a7c:	ldr	r3, [pc, #480]	; 17c64 <argp_error@@Base+0xac8>
   17a80:	str	r9, [sp, #12]
   17a84:	str	r3, [sp, #16]
   17a88:	str	r4, [sp, #8]
   17a8c:	str	r5, [sp, #4]
   17a90:	str	fp, [sp]
   17a94:	mov	r3, sl
   17a98:	mov	r2, r6
   17a9c:	mov	r1, r7
   17aa0:	mov	r0, r8
   17aa4:	bl	17338 <argp_error@@Base+0x19c>
   17aa8:	b	177ac <argp_error@@Base+0x610>
   17aac:	cmp	r5, #0
   17ab0:	beq	179e0 <argp_error@@Base+0x844>
   17ab4:	ldrb	r2, [r3, #2]
   17ab8:	cmp	r2, #0
   17abc:	bne	17ad8 <argp_error@@Base+0x93c>
   17ac0:	mov	r0, r6
   17ac4:	str	r3, [sp, #24]
   17ac8:	bl	113dc <strchr@plt>
   17acc:	ldr	r3, [sp, #24]
   17ad0:	cmp	r0, #0
   17ad4:	bne	179e0 <argp_error@@Base+0x844>
   17ad8:	add	r3, r3, #1
   17adc:	str	r3, [r4, #20]
   17ae0:	ldr	r3, [pc, #396]	; 17c74 <argp_error@@Base+0xad8>
   17ae4:	str	r9, [sp, #12]
   17ae8:	str	r3, [sp, #16]
   17aec:	str	r4, [sp, #8]
   17af0:	str	r5, [sp, #4]
   17af4:	str	fp, [sp]
   17af8:	mov	r3, sl
   17afc:	mov	r2, r6
   17b00:	mov	r1, r7
   17b04:	mov	r0, r8
   17b08:	bl	17338 <argp_error@@Base+0x19c>
   17b0c:	cmn	r0, #1
   17b10:	bne	177ac <argp_error@@Base+0x610>
   17b14:	b	179e0 <argp_error@@Base+0x844>
   17b18:	ldrb	r1, [r0]
   17b1c:	cmp	r1, #87	; 0x57
   17b20:	ldrb	r1, [r0, #1]
   17b24:	bne	17bc0 <argp_error@@Base+0xa24>
   17b28:	cmp	sl, #0
   17b2c:	sub	ip, r1, #59	; 0x3b
   17b30:	clz	ip, ip
   17b34:	lsr	ip, ip, #5
   17b38:	moveq	ip, #0
   17b3c:	cmp	ip, #0
   17b40:	beq	17bc0 <argp_error@@Base+0xa24>
   17b44:	ldrb	r3, [r3, #1]
   17b48:	cmp	r3, #0
   17b4c:	strne	r2, [r4, #12]
   17b50:	bne	17ba0 <argp_error@@Base+0xa04>
   17b54:	ldr	r3, [r4]
   17b58:	cmp	r8, r3
   17b5c:	ldrne	r3, [r7, r3, lsl #2]
   17b60:	strne	r3, [r4, #12]
   17b64:	bne	17ba0 <argp_error@@Base+0xa04>
   17b68:	cmp	r9, #0
   17b6c:	beq	17b88 <argp_error@@Base+0x9ec>
   17b70:	ldr	r0, [pc, #244]	; 17c6c <argp_error@@Base+0xad0>
   17b74:	mov	r3, r5
   17b78:	ldr	r2, [r7]
   17b7c:	ldr	r1, [pc, #244]	; 17c78 <argp_error@@Base+0xadc>
   17b80:	ldr	r0, [r0]
   17b84:	bl	113e8 <fprintf@plt>
   17b88:	str	r5, [r4, #8]
   17b8c:	ldrb	r0, [r6]
   17b90:	cmp	r0, #58	; 0x3a
   17b94:	moveq	r0, #58	; 0x3a
   17b98:	movne	r0, #63	; 0x3f
   17b9c:	b	177ac <argp_error@@Base+0x610>
   17ba0:	ldr	r3, [r4, #12]
   17ba4:	ldr	r2, [pc, #208]	; 17c7c <argp_error@@Base+0xae0>
   17ba8:	str	r3, [r4, #20]
   17bac:	mov	r3, #0
   17bb0:	str	r3, [r4, #12]
   17bb4:	str	r2, [sp, #16]
   17bb8:	stmib	sp, {r3, r4, r9}
   17bbc:	b	17a90 <argp_error@@Base+0x8f4>
   17bc0:	cmp	r1, #58	; 0x3a
   17bc4:	bne	17c10 <argp_error@@Base+0xa74>
   17bc8:	ldrb	r1, [r0, #2]
   17bcc:	ldrb	r3, [r3, #1]
   17bd0:	cmp	r1, #58	; 0x3a
   17bd4:	bne	17bf0 <argp_error@@Base+0xa54>
   17bd8:	cmp	r3, #0
   17bdc:	strne	r2, [r4, #12]
   17be0:	ldrne	r3, [r4]
   17be4:	bne	17c00 <argp_error@@Base+0xa64>
   17be8:	str	r3, [r4, #12]
   17bec:	b	17c08 <argp_error@@Base+0xa6c>
   17bf0:	cmp	r3, #0
   17bf4:	ldr	r3, [r4]
   17bf8:	beq	17c18 <argp_error@@Base+0xa7c>
   17bfc:	str	r2, [r4, #12]
   17c00:	add	r3, r3, #1
   17c04:	str	r3, [r4]
   17c08:	mov	r3, #0
   17c0c:	str	r3, [r4, #20]
   17c10:	mov	r0, r5
   17c14:	b	177ac <argp_error@@Base+0x610>
   17c18:	cmp	r8, r3
   17c1c:	addne	r2, r3, #1
   17c20:	strne	r2, [r4]
   17c24:	ldrne	r3, [r7, r3, lsl #2]
   17c28:	bne	17be8 <argp_error@@Base+0xa4c>
   17c2c:	cmp	r9, #0
   17c30:	beq	17c4c <argp_error@@Base+0xab0>
   17c34:	ldr	r0, [pc, #48]	; 17c6c <argp_error@@Base+0xad0>
   17c38:	mov	r3, r5
   17c3c:	ldr	r2, [r7]
   17c40:	ldr	r1, [pc, #48]	; 17c78 <argp_error@@Base+0xadc>
   17c44:	ldr	r0, [r0]
   17c48:	bl	113e8 <fprintf@plt>
   17c4c:	str	r5, [r4, #8]
   17c50:	ldrb	r5, [r6]
   17c54:	cmp	r5, #58	; 0x3a
   17c58:	moveq	r5, #58	; 0x3a
   17c5c:	movne	r5, #63	; 0x3f
   17c60:	b	17c08 <argp_error@@Base+0xa6c>
   17c64:	andeq	r8, r1, ip, lsl sp
   17c68:	andeq	r9, r1, r6, lsr #11
   17c6c:	strdeq	sl, [r2], -r0
   17c70:			; <UNDEFINED> instruction: 0x000195b6
   17c74:	andeq	r8, r1, sp, lsl sp
   17c78:	ldrdeq	r9, [r1], -r2
   17c7c:	strdeq	r9, [r1], -fp
   17c80:	push	{r4, r5, lr}
   17c84:	sub	sp, sp, #20
   17c88:	ldr	r5, [pc, #84]	; 17ce4 <argp_error@@Base+0xb48>
   17c8c:	ldr	r4, [pc, #84]	; 17ce8 <argp_error@@Base+0xb4c>
   17c90:	ldr	ip, [r5]
   17c94:	str	r4, [sp, #8]
   17c98:	str	ip, [r4]
   17c9c:	ldr	ip, [r5, #4]
   17ca0:	str	ip, [r4, #4]
   17ca4:	ldr	ip, [sp, #40]	; 0x28
   17ca8:	str	ip, [sp, #12]
   17cac:	ldr	ip, [sp, #36]	; 0x24
   17cb0:	str	ip, [sp, #4]
   17cb4:	ldr	ip, [sp, #32]
   17cb8:	str	ip, [sp]
   17cbc:	bl	17788 <argp_error@@Base+0x5ec>
   17cc0:	ldr	r3, [r4]
   17cc4:	ldr	r2, [r4, #12]
   17cc8:	str	r3, [r5]
   17ccc:	ldr	r3, [pc, #24]	; 17cec <argp_error@@Base+0xb50>
   17cd0:	str	r2, [r3]
   17cd4:	ldr	r3, [r4, #8]
   17cd8:	str	r3, [r5, #8]
   17cdc:	add	sp, sp, #20
   17ce0:	pop	{r4, r5, pc}
   17ce4:	ldrdeq	sl, [r2], -r4
   17ce8:	andeq	sl, r2, r4, lsl #25
   17cec:	andeq	fp, r2, r0, asr r2
   17cf0:	push	{r0, r1, r2, r3, r4, lr}
   17cf4:	mov	r3, #1
   17cf8:	str	r3, [sp, #8]
   17cfc:	mov	r3, #0
   17d00:	str	r3, [sp, #4]
   17d04:	str	r3, [sp]
   17d08:	bl	17c80 <argp_error@@Base+0xae4>
   17d0c:	add	sp, sp, #20
   17d10:	pop	{pc}		; (ldr pc, [sp], #4)
   17d14:	push	{r4, r5, r6, lr}
   17d18:	subs	r4, r2, #0
   17d1c:	mov	r6, r0
   17d20:	mov	r5, r1
   17d24:	beq	17d3c <argp_error@@Base+0xba0>
   17d28:	mov	r1, r4
   17d2c:	mvn	r0, #0
   17d30:	bl	18380 <argp_error@@Base+0x11e4>
   17d34:	cmp	r0, r5
   17d38:	bcc	17d4c <argp_error@@Base+0xbb0>
   17d3c:	mul	r1, r5, r4
   17d40:	mov	r0, r6
   17d44:	pop	{r4, r5, r6, lr}
   17d48:	b	14580 <argp_parse@@Base+0x1590>
   17d4c:	bl	113f4 <__errno_location@plt>
   17d50:	mov	r3, #12
   17d54:	str	r3, [r0]
   17d58:	mov	r0, #0
   17d5c:	pop	{r4, r5, r6, pc}
   17d60:	push	{r4, r5, r6, r7, r8, lr}
   17d64:	mov	r8, r0
   17d68:	mov	r0, #36	; 0x24
   17d6c:	mov	r7, r1
   17d70:	mov	r6, r2
   17d74:	mov	r5, r3
   17d78:	bl	14540 <argp_parse@@Base+0x1550>
   17d7c:	subs	r4, r0, #0
   17d80:	beq	17dd0 <argp_error@@Base+0xc34>
   17d84:	mov	r3, #0
   17d88:	str	r5, [r4, #12]
   17d8c:	str	r8, [r4]
   17d90:	str	r7, [r4, #4]
   17d94:	str	r6, [r4, #8]
   17d98:	str	r3, [r4, #20]
   17d9c:	str	r3, [r4, #16]
   17da0:	mov	r0, #200	; 0xc8
   17da4:	bl	14540 <argp_parse@@Base+0x1550>
   17da8:	cmp	r0, #0
   17dac:	mov	r5, r0
   17db0:	addne	r5, r0, #200	; 0xc8
   17db4:	str	r0, [r4, #24]
   17db8:	strne	r0, [r4, #28]
   17dbc:	strne	r5, [r4, #32]
   17dc0:	bne	17dd0 <argp_error@@Base+0xc34>
   17dc4:	mov	r0, r4
   17dc8:	bl	13a8c <argp_parse@@Base+0xa9c>
   17dcc:	mov	r4, r5
   17dd0:	mov	r0, r4
   17dd4:	pop	{r4, r5, r6, r7, r8, pc}
   17dd8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ddc:	mov	r4, r0
   17de0:	ldr	r6, [r0, #24]
   17de4:	ldr	r3, [r0, #16]
   17de8:	add	r6, r6, r3
   17dec:	ldr	r2, [r4, #28]
   17df0:	cmp	r6, r2
   17df4:	bcs	17ea4 <argp_error@@Base+0xd08>
   17df8:	ldr	r7, [r4, #20]
   17dfc:	cmp	r7, #0
   17e00:	bne	17e58 <argp_error@@Base+0xcbc>
   17e04:	ldr	r5, [r4, #4]
   17e08:	cmp	r5, #0
   17e0c:	beq	17e58 <argp_error@@Base+0xcbc>
   17e10:	ldr	r1, [r4, #32]
   17e14:	add	r3, r2, r5
   17e18:	cmp	r1, r3
   17e1c:	bls	17ebc <argp_error@@Base+0xd20>
   17e20:	add	r7, r6, r5
   17e24:	sub	r2, r2, r6
   17e28:	mov	r1, r6
   17e2c:	mov	r0, r7
   17e30:	bl	11274 <memmove@plt>
   17e34:	ldr	r3, [r4, #28]
   17e38:	mov	r0, r6
   17e3c:	add	r3, r3, r5
   17e40:	str	r3, [r4, #28]
   17e44:	mov	r2, r5
   17e48:	mov	r1, #32
   17e4c:	bl	11418 <memset@plt>
   17e50:	mov	r6, r7
   17e54:	str	r5, [r4, #20]
   17e58:	ldr	r9, [r4, #28]
   17e5c:	mov	r1, #10
   17e60:	sub	r8, r9, r6
   17e64:	mov	r2, r8
   17e68:	mov	r0, r6
   17e6c:	bl	1143c <memchr@plt>
   17e70:	ldr	r2, [r4, #20]
   17e74:	ldr	r5, [r4, #8]
   17e78:	cmp	r2, #0
   17e7c:	movlt	r3, #0
   17e80:	strlt	r3, [r4, #20]
   17e84:	cmp	r0, #0
   17e88:	mov	fp, r0
   17e8c:	ldr	r0, [r4, #20]
   17e90:	bne	17ed8 <argp_error@@Base+0xd3c>
   17e94:	add	r3, r8, r0
   17e98:	cmp	r3, r5
   17e9c:	bcs	17ef8 <argp_error@@Base+0xd5c>
   17ea0:	str	r3, [r4, #20]
   17ea4:	ldr	r3, [r4, #28]
   17ea8:	ldr	r2, [r4, #24]
   17eac:	sub	r3, r3, r2
   17eb0:	str	r3, [r4, #16]
   17eb4:	add	sp, sp, #12
   17eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ebc:	ldr	r1, [r4]
   17ec0:	mov	r0, #32
   17ec4:	add	r7, r7, #1
   17ec8:	bl	115a4 <putc_unlocked@plt>
   17ecc:	cmp	r5, r7
   17ed0:	bne	17ebc <argp_error@@Base+0xd20>
   17ed4:	b	17e54 <argp_error@@Base+0xcb8>
   17ed8:	sub	r2, fp, r6
   17edc:	add	r2, r2, r0
   17ee0:	cmp	r2, r5
   17ee4:	bge	17efc <argp_error@@Base+0xd60>
   17ee8:	mov	r3, #0
   17eec:	str	r3, [r4, #20]
   17ef0:	add	r3, fp, #1
   17ef4:	b	17f5c <argp_error@@Base+0xdc0>
   17ef8:	mov	fp, r9
   17efc:	ldr	sl, [r4, #12]
   17f00:	cmp	sl, #0
   17f04:	subge	r5, r5, r0
   17f08:	addge	r5, r6, r5
   17f0c:	movge	r7, r5
   17f10:	bge	17f7c <argp_error@@Base+0xde0>
   17f14:	cmp	fp, r9
   17f18:	sub	sl, r5, #1
   17f1c:	bcs	17f64 <argp_error@@Base+0xdc8>
   17f20:	sub	r0, sl, r0
   17f24:	sub	r2, r9, fp
   17f28:	mov	r1, fp
   17f2c:	add	r0, r6, r0
   17f30:	bl	11274 <memmove@plt>
   17f34:	ldr	r8, [r4, #20]
   17f38:	sub	sl, sl, r8
   17f3c:	add	sl, r6, sl
   17f40:	sub	r3, sl, fp
   17f44:	ldr	sl, [r4, #28]
   17f48:	sub	r3, sl, r3
   17f4c:	str	r3, [r4, #28]
   17f50:	mov	r3, #0
   17f54:	str	r3, [r4, #20]
   17f58:	add	r3, r6, r5
   17f5c:	mov	r6, r3
   17f60:	b	17dec <argp_error@@Base+0xc50>
   17f64:	add	r0, r8, r0
   17f68:	str	r0, [r4, #20]
   17f6c:	sub	r0, sl, r0
   17f70:	add	r9, r9, r0
   17f74:	str	r9, [r4, #28]
   17f78:	b	17ea4 <argp_error@@Base+0xd08>
   17f7c:	cmp	r6, r7
   17f80:	mov	r2, r7
   17f84:	bhi	17fb0 <argp_error@@Base+0xe14>
   17f88:	str	r7, [sp, #4]
   17f8c:	bl	113b8 <__ctype_b_loc@plt>
   17f90:	ldr	r2, [sp, #4]
   17f94:	sub	r7, r7, #1
   17f98:	ldrb	r1, [r2]
   17f9c:	lsl	r1, r1, #1
   17fa0:	ldr	r0, [r0]
   17fa4:	ldrh	r1, [r0, r1]
   17fa8:	tst	r1, #1
   17fac:	beq	17f7c <argp_error@@Base+0xde0>
   17fb0:	add	r7, r2, #1
   17fb4:	cmp	r6, r7
   17fb8:	bcs	18030 <argp_error@@Base+0xe94>
   17fbc:	cmp	r6, r2
   17fc0:	bhi	17ffc <argp_error@@Base+0xe60>
   17fc4:	sub	r5, r2, #1
   17fc8:	cmp	r6, r5
   17fcc:	mov	r2, r5
   17fd0:	bhi	17ffc <argp_error@@Base+0xe60>
   17fd4:	str	r5, [sp, #4]
   17fd8:	bl	113b8 <__ctype_b_loc@plt>
   17fdc:	ldr	r2, [sp, #4]
   17fe0:	sub	r5, r5, #1
   17fe4:	ldrb	r3, [r2]
   17fe8:	lsl	r3, r3, #1
   17fec:	ldr	r1, [r0]
   17ff0:	ldrh	r3, [r1, r3]
   17ff4:	tst	r3, #1
   17ff8:	bne	17fc8 <argp_error@@Base+0xe2c>
   17ffc:	add	r5, r2, #1
   18000:	add	r3, r8, #1
   18004:	add	r3, r6, r3
   18008:	cmp	r7, r3
   1800c:	bne	18098 <argp_error@@Base+0xefc>
   18010:	ldr	r3, [r4, #32]
   18014:	sub	r3, r3, r5
   18018:	cmp	sl, r3
   1801c:	bge	180a8 <argp_error@@Base+0xf0c>
   18020:	mov	r3, #10
   18024:	add	r9, r5, #1
   18028:	strb	r3, [r5]
   1802c:	b	18128 <argp_error@@Base+0xf8c>
   18030:	cmp	fp, r5
   18034:	bls	1808c <argp_error@@Base+0xef0>
   18038:	add	r7, r5, #1
   1803c:	cmp	fp, r7
   18040:	mov	r5, r7
   18044:	beq	1808c <argp_error@@Base+0xef0>
   18048:	bl	113b8 <__ctype_b_loc@plt>
   1804c:	ldrb	r2, [r5]
   18050:	add	r7, r7, #1
   18054:	lsl	r2, r2, #1
   18058:	ldr	r1, [r0]
   1805c:	ldrh	r2, [r1, r2]
   18060:	tst	r2, #1
   18064:	beq	1803c <argp_error@@Base+0xea0>
   18068:	bl	113b8 <__ctype_b_loc@plt>
   1806c:	mov	r7, r5
   18070:	ldr	r2, [r0]
   18074:	ldrb	r3, [r7, #1]!
   18078:	lsl	r3, r3, #1
   1807c:	ldrh	r3, [r2, r3]
   18080:	tst	r3, #1
   18084:	bne	18074 <argp_error@@Base+0xed8>
   18088:	b	18000 <argp_error@@Base+0xe64>
   1808c:	cmp	fp, r5
   18090:	bne	18068 <argp_error@@Base+0xecc>
   18094:	b	17ee8 <argp_error@@Base+0xd4c>
   18098:	add	r3, r5, #1
   1809c:	sub	r3, r7, r3
   180a0:	cmp	sl, r3
   180a4:	ble	18020 <argp_error@@Base+0xe84>
   180a8:	cmp	r7, r9
   180ac:	bcs	18020 <argp_error@@Base+0xe84>
   180b0:	ldr	r3, [r4, #32]
   180b4:	add	r0, sl, #1
   180b8:	sub	r3, r3, r9
   180bc:	cmp	r3, r0
   180c0:	ble	180f0 <argp_error@@Base+0xf54>
   180c4:	sub	r9, r9, r7
   180c8:	mov	r2, r9
   180cc:	mov	r1, r7
   180d0:	add	r0, r5, r0
   180d4:	bl	11274 <memmove@plt>
   180d8:	ldr	r7, [r4, #12]
   180dc:	add	r7, r7, #1
   180e0:	add	r7, r5, r7
   180e4:	add	r9, r7, r9
   180e8:	sub	r8, r9, r6
   180ec:	b	18020 <argp_error@@Base+0xe84>
   180f0:	ldr	r0, [r4, #24]
   180f4:	cmp	r5, r0
   180f8:	bls	1810c <argp_error@@Base+0xf70>
   180fc:	ldr	r3, [r4]
   18100:	sub	r2, r5, r0
   18104:	mov	r1, #1
   18108:	bl	112c8 <fwrite_unlocked@plt>
   1810c:	ldr	r1, [r4]
   18110:	mov	r0, #10
   18114:	bl	115a4 <putc_unlocked@plt>
   18118:	ldr	r9, [r4, #24]
   1811c:	sub	r6, r6, r9
   18120:	add	r8, r8, r6
   18124:	mov	r6, r9
   18128:	ldr	r2, [r4, #12]
   1812c:	sub	r3, r7, r9
   18130:	cmp	r3, r2
   18134:	bge	18170 <argp_error@@Base+0xfd4>
   18138:	add	r3, r8, #1
   1813c:	add	r3, r6, r3
   18140:	cmp	r7, r3
   18144:	bne	18158 <argp_error@@Base+0xfbc>
   18148:	ldr	r3, [r4, #32]
   1814c:	sub	r3, r3, r7
   18150:	cmp	r2, r3
   18154:	ble	18170 <argp_error@@Base+0xfd4>
   18158:	mov	r5, #0
   1815c:	ldr	r3, [r4, #12]
   18160:	cmp	r5, r3
   18164:	blt	181d4 <argp_error@@Base+0x1038>
   18168:	mov	r3, r9
   1816c:	b	18184 <argp_error@@Base+0xfe8>
   18170:	mov	r3, r9
   18174:	ldr	r1, [r4, #12]
   18178:	sub	r2, r3, r9
   1817c:	cmp	r1, r2
   18180:	bgt	181c8 <argp_error@@Base+0x102c>
   18184:	cmp	r3, r7
   18188:	bcs	181a4 <argp_error@@Base+0x1008>
   1818c:	add	r2, r6, r8
   18190:	mov	r0, r3
   18194:	sub	r2, r2, r7
   18198:	mov	r1, r7
   1819c:	bl	11274 <memmove@plt>
   181a0:	mov	r3, r0
   181a4:	ldr	r2, [r4, #12]
   181a8:	sub	r6, r7, r6
   181ac:	sub	r6, r8, r6
   181b0:	cmp	r2, #0
   181b4:	add	r6, r3, r6
   181b8:	mvneq	r2, #0
   181bc:	str	r6, [r4, #28]
   181c0:	str	r2, [r4, #20]
   181c4:	b	17f5c <argp_error@@Base+0xdc0>
   181c8:	mov	r2, #32
   181cc:	strb	r2, [r3], #1
   181d0:	b	18174 <argp_error@@Base+0xfd8>
   181d4:	ldr	r1, [r4]
   181d8:	mov	r0, #32
   181dc:	bl	115a4 <putc_unlocked@plt>
   181e0:	add	r5, r5, #1
   181e4:	b	1815c <argp_error@@Base+0xfc0>
   181e8:	push	{r4, lr}
   181ec:	mov	r4, r0
   181f0:	bl	17dd8 <argp_error@@Base+0xc3c>
   181f4:	ldr	r2, [r4, #28]
   181f8:	ldr	r0, [r4, #24]
   181fc:	cmp	r2, r0
   18200:	bls	18214 <argp_error@@Base+0x1078>
   18204:	ldr	r3, [r4]
   18208:	sub	r2, r2, r0
   1820c:	mov	r1, #1
   18210:	bl	112c8 <fwrite_unlocked@plt>
   18214:	ldr	r0, [r4, #24]
   18218:	bl	13a8c <argp_parse@@Base+0xa9c>
   1821c:	mov	r0, r4
   18220:	pop	{r4, lr}
   18224:	b	13a8c <argp_parse@@Base+0xa9c>
   18228:	ldr	r3, [r0, #32]
   1822c:	ldr	r2, [r0, #28]
   18230:	sub	r3, r3, r2
   18234:	cmp	r3, r1
   18238:	bcc	18244 <argp_error@@Base+0x10a8>
   1823c:	mov	r0, #1
   18240:	bx	lr
   18244:	push	{r4, r5, r6, lr}
   18248:	mov	r4, r0
   1824c:	mov	r5, r1
   18250:	bl	17dd8 <argp_error@@Base+0xc3c>
   18254:	ldr	r0, [r4, #24]
   18258:	ldr	r2, [r4, #28]
   1825c:	ldr	r3, [r4]
   18260:	sub	r2, r2, r0
   18264:	mov	r1, #1
   18268:	bl	112c8 <fwrite_unlocked@plt>
   1826c:	ldr	r2, [r4, #28]
   18270:	mov	r1, r0
   18274:	ldr	r0, [r4, #24]
   18278:	sub	r3, r2, r0
   1827c:	cmp	r1, r3
   18280:	bne	182a8 <argp_error@@Base+0x110c>
   18284:	ldr	r1, [r4, #32]
   18288:	mov	r3, #0
   1828c:	sub	r1, r1, r0
   18290:	cmp	r5, r1
   18294:	str	r0, [r4, #28]
   18298:	str	r3, [r4, #16]
   1829c:	bhi	182d0 <argp_error@@Base+0x1134>
   182a0:	mov	r0, #1
   182a4:	pop	{r4, r5, r6, pc}
   182a8:	ldr	r3, [r4, #16]
   182ac:	sub	r2, r2, r1
   182b0:	sub	r3, r3, r1
   182b4:	str	r2, [r4, #28]
   182b8:	str	r3, [r4, #16]
   182bc:	sub	r2, r2, r0
   182c0:	add	r1, r0, r1
   182c4:	bl	11274 <memmove@plt>
   182c8:	mov	r0, #0
   182cc:	pop	{r4, r5, r6, pc}
   182d0:	adds	r5, r5, r1
   182d4:	bcc	182e8 <argp_error@@Base+0x114c>
   182d8:	bl	113f4 <__errno_location@plt>
   182dc:	mov	r3, #12
   182e0:	str	r3, [r0]
   182e4:	b	182c8 <argp_error@@Base+0x112c>
   182e8:	mov	r1, r5
   182ec:	bl	14580 <argp_parse@@Base+0x1590>
   182f0:	cmp	r0, #0
   182f4:	beq	182d8 <argp_error@@Base+0x113c>
   182f8:	add	r5, r0, r5
   182fc:	str	r0, [r4, #24]
   18300:	str	r5, [r4, #32]
   18304:	str	r0, [r4, #28]
   18308:	b	182a0 <argp_error@@Base+0x1104>
   1830c:	push	{r1, r2, r3}
   18310:	push	{r0, r1, r2, r4, r5, r6, lr}
   18314:	mov	r4, r0
   18318:	mov	r1, #150	; 0x96
   1831c:	add	r6, sp, #32
   18320:	mov	r0, r4
   18324:	bl	18228 <argp_error@@Base+0x108c>
   18328:	cmp	r0, #0
   1832c:	bne	18344 <argp_error@@Base+0x11a8>
   18330:	mvn	r0, #0
   18334:	add	sp, sp, #12
   18338:	pop	{r4, r5, r6, lr}
   1833c:	add	sp, sp, #12
   18340:	bx	lr
   18344:	ldr	r0, [r4, #28]
   18348:	ldr	r5, [r4, #32]
   1834c:	mov	r3, r6
   18350:	sub	r5, r5, r0
   18354:	ldr	r2, [sp, #28]
   18358:	mov	r1, r5
   1835c:	str	r6, [sp, #4]
   18360:	bl	114fc <vsnprintf@plt>
   18364:	cmp	r5, r0
   18368:	addls	r1, r0, #1
   1836c:	bls	18320 <argp_error@@Base+0x1184>
   18370:	ldr	r3, [r4, #28]
   18374:	add	r3, r3, r0
   18378:	str	r3, [r4, #28]
   1837c:	b	18334 <argp_error@@Base+0x1198>
   18380:	subs	r2, r1, #1
   18384:	bxeq	lr
   18388:	bcc	18560 <argp_error@@Base+0x13c4>
   1838c:	cmp	r0, r1
   18390:	bls	18544 <argp_error@@Base+0x13a8>
   18394:	tst	r1, r2
   18398:	beq	18550 <argp_error@@Base+0x13b4>
   1839c:	clz	r3, r0
   183a0:	clz	r2, r1
   183a4:	sub	r3, r2, r3
   183a8:	rsbs	r3, r3, #31
   183ac:	addne	r3, r3, r3, lsl #1
   183b0:	mov	r2, #0
   183b4:	addne	pc, pc, r3, lsl #2
   183b8:	nop			; (mov r0, r0)
   183bc:	cmp	r0, r1, lsl #31
   183c0:	adc	r2, r2, r2
   183c4:	subcs	r0, r0, r1, lsl #31
   183c8:	cmp	r0, r1, lsl #30
   183cc:	adc	r2, r2, r2
   183d0:	subcs	r0, r0, r1, lsl #30
   183d4:	cmp	r0, r1, lsl #29
   183d8:	adc	r2, r2, r2
   183dc:	subcs	r0, r0, r1, lsl #29
   183e0:	cmp	r0, r1, lsl #28
   183e4:	adc	r2, r2, r2
   183e8:	subcs	r0, r0, r1, lsl #28
   183ec:	cmp	r0, r1, lsl #27
   183f0:	adc	r2, r2, r2
   183f4:	subcs	r0, r0, r1, lsl #27
   183f8:	cmp	r0, r1, lsl #26
   183fc:	adc	r2, r2, r2
   18400:	subcs	r0, r0, r1, lsl #26
   18404:	cmp	r0, r1, lsl #25
   18408:	adc	r2, r2, r2
   1840c:	subcs	r0, r0, r1, lsl #25
   18410:	cmp	r0, r1, lsl #24
   18414:	adc	r2, r2, r2
   18418:	subcs	r0, r0, r1, lsl #24
   1841c:	cmp	r0, r1, lsl #23
   18420:	adc	r2, r2, r2
   18424:	subcs	r0, r0, r1, lsl #23
   18428:	cmp	r0, r1, lsl #22
   1842c:	adc	r2, r2, r2
   18430:	subcs	r0, r0, r1, lsl #22
   18434:	cmp	r0, r1, lsl #21
   18438:	adc	r2, r2, r2
   1843c:	subcs	r0, r0, r1, lsl #21
   18440:	cmp	r0, r1, lsl #20
   18444:	adc	r2, r2, r2
   18448:	subcs	r0, r0, r1, lsl #20
   1844c:	cmp	r0, r1, lsl #19
   18450:	adc	r2, r2, r2
   18454:	subcs	r0, r0, r1, lsl #19
   18458:	cmp	r0, r1, lsl #18
   1845c:	adc	r2, r2, r2
   18460:	subcs	r0, r0, r1, lsl #18
   18464:	cmp	r0, r1, lsl #17
   18468:	adc	r2, r2, r2
   1846c:	subcs	r0, r0, r1, lsl #17
   18470:	cmp	r0, r1, lsl #16
   18474:	adc	r2, r2, r2
   18478:	subcs	r0, r0, r1, lsl #16
   1847c:	cmp	r0, r1, lsl #15
   18480:	adc	r2, r2, r2
   18484:	subcs	r0, r0, r1, lsl #15
   18488:	cmp	r0, r1, lsl #14
   1848c:	adc	r2, r2, r2
   18490:	subcs	r0, r0, r1, lsl #14
   18494:	cmp	r0, r1, lsl #13
   18498:	adc	r2, r2, r2
   1849c:	subcs	r0, r0, r1, lsl #13
   184a0:	cmp	r0, r1, lsl #12
   184a4:	adc	r2, r2, r2
   184a8:	subcs	r0, r0, r1, lsl #12
   184ac:	cmp	r0, r1, lsl #11
   184b0:	adc	r2, r2, r2
   184b4:	subcs	r0, r0, r1, lsl #11
   184b8:	cmp	r0, r1, lsl #10
   184bc:	adc	r2, r2, r2
   184c0:	subcs	r0, r0, r1, lsl #10
   184c4:	cmp	r0, r1, lsl #9
   184c8:	adc	r2, r2, r2
   184cc:	subcs	r0, r0, r1, lsl #9
   184d0:	cmp	r0, r1, lsl #8
   184d4:	adc	r2, r2, r2
   184d8:	subcs	r0, r0, r1, lsl #8
   184dc:	cmp	r0, r1, lsl #7
   184e0:	adc	r2, r2, r2
   184e4:	subcs	r0, r0, r1, lsl #7
   184e8:	cmp	r0, r1, lsl #6
   184ec:	adc	r2, r2, r2
   184f0:	subcs	r0, r0, r1, lsl #6
   184f4:	cmp	r0, r1, lsl #5
   184f8:	adc	r2, r2, r2
   184fc:	subcs	r0, r0, r1, lsl #5
   18500:	cmp	r0, r1, lsl #4
   18504:	adc	r2, r2, r2
   18508:	subcs	r0, r0, r1, lsl #4
   1850c:	cmp	r0, r1, lsl #3
   18510:	adc	r2, r2, r2
   18514:	subcs	r0, r0, r1, lsl #3
   18518:	cmp	r0, r1, lsl #2
   1851c:	adc	r2, r2, r2
   18520:	subcs	r0, r0, r1, lsl #2
   18524:	cmp	r0, r1, lsl #1
   18528:	adc	r2, r2, r2
   1852c:	subcs	r0, r0, r1, lsl #1
   18530:	cmp	r0, r1
   18534:	adc	r2, r2, r2
   18538:	subcs	r0, r0, r1
   1853c:	mov	r0, r2
   18540:	bx	lr
   18544:	moveq	r0, #1
   18548:	movne	r0, #0
   1854c:	bx	lr
   18550:	clz	r2, r1
   18554:	rsb	r2, r2, #31
   18558:	lsr	r0, r0, r2
   1855c:	bx	lr
   18560:	cmp	r0, #0
   18564:	mvnne	r0, #0
   18568:	b	187cc <argp_error@@Base+0x1630>
   1856c:	cmp	r1, #0
   18570:	beq	18560 <argp_error@@Base+0x13c4>
   18574:	push	{r0, r1, lr}
   18578:	bl	18380 <argp_error@@Base+0x11e4>
   1857c:	pop	{r1, r2, lr}
   18580:	mul	r3, r2, r0
   18584:	sub	r1, r1, r3
   18588:	bx	lr
   1858c:	cmp	r1, #0
   18590:	beq	1879c <argp_error@@Base+0x1600>
   18594:	eor	ip, r0, r1
   18598:	rsbmi	r1, r1, #0
   1859c:	subs	r2, r1, #1
   185a0:	beq	18768 <argp_error@@Base+0x15cc>
   185a4:	movs	r3, r0
   185a8:	rsbmi	r3, r0, #0
   185ac:	cmp	r3, r1
   185b0:	bls	18774 <argp_error@@Base+0x15d8>
   185b4:	tst	r1, r2
   185b8:	beq	18784 <argp_error@@Base+0x15e8>
   185bc:	clz	r2, r3
   185c0:	clz	r0, r1
   185c4:	sub	r2, r0, r2
   185c8:	rsbs	r2, r2, #31
   185cc:	addne	r2, r2, r2, lsl #1
   185d0:	mov	r0, #0
   185d4:	addne	pc, pc, r2, lsl #2
   185d8:	nop			; (mov r0, r0)
   185dc:	cmp	r3, r1, lsl #31
   185e0:	adc	r0, r0, r0
   185e4:	subcs	r3, r3, r1, lsl #31
   185e8:	cmp	r3, r1, lsl #30
   185ec:	adc	r0, r0, r0
   185f0:	subcs	r3, r3, r1, lsl #30
   185f4:	cmp	r3, r1, lsl #29
   185f8:	adc	r0, r0, r0
   185fc:	subcs	r3, r3, r1, lsl #29
   18600:	cmp	r3, r1, lsl #28
   18604:	adc	r0, r0, r0
   18608:	subcs	r3, r3, r1, lsl #28
   1860c:	cmp	r3, r1, lsl #27
   18610:	adc	r0, r0, r0
   18614:	subcs	r3, r3, r1, lsl #27
   18618:	cmp	r3, r1, lsl #26
   1861c:	adc	r0, r0, r0
   18620:	subcs	r3, r3, r1, lsl #26
   18624:	cmp	r3, r1, lsl #25
   18628:	adc	r0, r0, r0
   1862c:	subcs	r3, r3, r1, lsl #25
   18630:	cmp	r3, r1, lsl #24
   18634:	adc	r0, r0, r0
   18638:	subcs	r3, r3, r1, lsl #24
   1863c:	cmp	r3, r1, lsl #23
   18640:	adc	r0, r0, r0
   18644:	subcs	r3, r3, r1, lsl #23
   18648:	cmp	r3, r1, lsl #22
   1864c:	adc	r0, r0, r0
   18650:	subcs	r3, r3, r1, lsl #22
   18654:	cmp	r3, r1, lsl #21
   18658:	adc	r0, r0, r0
   1865c:	subcs	r3, r3, r1, lsl #21
   18660:	cmp	r3, r1, lsl #20
   18664:	adc	r0, r0, r0
   18668:	subcs	r3, r3, r1, lsl #20
   1866c:	cmp	r3, r1, lsl #19
   18670:	adc	r0, r0, r0
   18674:	subcs	r3, r3, r1, lsl #19
   18678:	cmp	r3, r1, lsl #18
   1867c:	adc	r0, r0, r0
   18680:	subcs	r3, r3, r1, lsl #18
   18684:	cmp	r3, r1, lsl #17
   18688:	adc	r0, r0, r0
   1868c:	subcs	r3, r3, r1, lsl #17
   18690:	cmp	r3, r1, lsl #16
   18694:	adc	r0, r0, r0
   18698:	subcs	r3, r3, r1, lsl #16
   1869c:	cmp	r3, r1, lsl #15
   186a0:	adc	r0, r0, r0
   186a4:	subcs	r3, r3, r1, lsl #15
   186a8:	cmp	r3, r1, lsl #14
   186ac:	adc	r0, r0, r0
   186b0:	subcs	r3, r3, r1, lsl #14
   186b4:	cmp	r3, r1, lsl #13
   186b8:	adc	r0, r0, r0
   186bc:	subcs	r3, r3, r1, lsl #13
   186c0:	cmp	r3, r1, lsl #12
   186c4:	adc	r0, r0, r0
   186c8:	subcs	r3, r3, r1, lsl #12
   186cc:	cmp	r3, r1, lsl #11
   186d0:	adc	r0, r0, r0
   186d4:	subcs	r3, r3, r1, lsl #11
   186d8:	cmp	r3, r1, lsl #10
   186dc:	adc	r0, r0, r0
   186e0:	subcs	r3, r3, r1, lsl #10
   186e4:	cmp	r3, r1, lsl #9
   186e8:	adc	r0, r0, r0
   186ec:	subcs	r3, r3, r1, lsl #9
   186f0:	cmp	r3, r1, lsl #8
   186f4:	adc	r0, r0, r0
   186f8:	subcs	r3, r3, r1, lsl #8
   186fc:	cmp	r3, r1, lsl #7
   18700:	adc	r0, r0, r0
   18704:	subcs	r3, r3, r1, lsl #7
   18708:	cmp	r3, r1, lsl #6
   1870c:	adc	r0, r0, r0
   18710:	subcs	r3, r3, r1, lsl #6
   18714:	cmp	r3, r1, lsl #5
   18718:	adc	r0, r0, r0
   1871c:	subcs	r3, r3, r1, lsl #5
   18720:	cmp	r3, r1, lsl #4
   18724:	adc	r0, r0, r0
   18728:	subcs	r3, r3, r1, lsl #4
   1872c:	cmp	r3, r1, lsl #3
   18730:	adc	r0, r0, r0
   18734:	subcs	r3, r3, r1, lsl #3
   18738:	cmp	r3, r1, lsl #2
   1873c:	adc	r0, r0, r0
   18740:	subcs	r3, r3, r1, lsl #2
   18744:	cmp	r3, r1, lsl #1
   18748:	adc	r0, r0, r0
   1874c:	subcs	r3, r3, r1, lsl #1
   18750:	cmp	r3, r1
   18754:	adc	r0, r0, r0
   18758:	subcs	r3, r3, r1
   1875c:	cmp	ip, #0
   18760:	rsbmi	r0, r0, #0
   18764:	bx	lr
   18768:	teq	ip, r0
   1876c:	rsbmi	r0, r0, #0
   18770:	bx	lr
   18774:	movcc	r0, #0
   18778:	asreq	r0, ip, #31
   1877c:	orreq	r0, r0, #1
   18780:	bx	lr
   18784:	clz	r2, r1
   18788:	rsb	r2, r2, #31
   1878c:	cmp	ip, #0
   18790:	lsr	r0, r3, r2
   18794:	rsbmi	r0, r0, #0
   18798:	bx	lr
   1879c:	cmp	r0, #0
   187a0:	mvngt	r0, #-2147483648	; 0x80000000
   187a4:	movlt	r0, #-2147483648	; 0x80000000
   187a8:	b	187cc <argp_error@@Base+0x1630>
   187ac:	cmp	r1, #0
   187b0:	beq	1879c <argp_error@@Base+0x1600>
   187b4:	push	{r0, r1, lr}
   187b8:	bl	18594 <argp_error@@Base+0x13f8>
   187bc:	pop	{r1, r2, lr}
   187c0:	mul	r3, r2, r0
   187c4:	sub	r1, r1, r3
   187c8:	bx	lr
   187cc:	push	{r1, lr}
   187d0:	mov	r0, #8
   187d4:	bl	1122c <raise@plt>
   187d8:	pop	{r1, pc}
   187dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   187e0:	mov	r7, r0
   187e4:	ldr	r6, [pc, #72]	; 18834 <argp_error@@Base+0x1698>
   187e8:	ldr	r5, [pc, #72]	; 18838 <argp_error@@Base+0x169c>
   187ec:	add	r6, pc, r6
   187f0:	add	r5, pc, r5
   187f4:	sub	r6, r6, r5
   187f8:	mov	r8, r1
   187fc:	mov	r9, r2
   18800:	bl	111dc <fdopen@plt-0x20>
   18804:	asrs	r6, r6, #2
   18808:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1880c:	mov	r4, #0
   18810:	add	r4, r4, #1
   18814:	ldr	r3, [r5], #4
   18818:	mov	r2, r9
   1881c:	mov	r1, r8
   18820:	mov	r0, r7
   18824:	blx	r3
   18828:	cmp	r6, r4
   1882c:	bne	18810 <argp_error@@Base+0x1674>
   18830:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18834:	andeq	r1, r1, r4, lsl r7
   18838:	andeq	r1, r1, ip, lsl #14
   1883c:	bx	lr
   18840:	mov	r2, r1
   18844:	mov	r1, r0
   18848:	mov	r0, #3
   1884c:	b	1152c <__xstat64@plt>

Disassembly of section .fini:

00018850 <.fini>:
   18850:	push	{r3, lr}
   18854:	pop	{r3, pc}
