
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

000123e8 <.init>:
   123e8:	push	{r3, lr}
   123ec:	bl	12664 <_start@@Base+0x3c>
   123f0:	pop	{r3, pc}

Disassembly of section .plt:

000123f4 <raise@plt-0x14>:
   123f4:	push	{lr}		; (str lr, [sp, #-4]!)
   123f8:	ldr	lr, [pc, #4]	; 12404 <raise@plt-0x4>
   123fc:	add	lr, pc, lr
   12400:	ldr	pc, [lr, #8]!
   12404:	strdeq	r0, [r2], -ip

00012408 <raise@plt>:
   12408:	add	ip, pc, #0, 12
   1240c:	add	ip, ip, #32, 20	; 0x20000
   12410:	ldr	pc, [ip, #3068]!	; 0xbfc

00012414 <strcmp@plt>:
   12414:	add	ip, pc, #0, 12
   12418:	add	ip, ip, #32, 20	; 0x20000
   1241c:	ldr	pc, [ip, #3060]!	; 0xbf4

00012420 <fopen@plt>:
   12420:	add	ip, pc, #0, 12
   12424:	add	ip, ip, #32, 20	; 0x20000
   12428:	ldr	pc, [ip, #3052]!	; 0xbec

0001242c <memmove@plt>:
   1242c:	add	ip, pc, #0, 12
   12430:	add	ip, ip, #32, 20	; 0x20000
   12434:	ldr	pc, [ip, #3044]!	; 0xbe4

00012438 <free@plt>:
   12438:	add	ip, pc, #0, 12
   1243c:	add	ip, ip, #32, 20	; 0x20000
   12440:	ldr	pc, [ip, #3036]!	; 0xbdc

00012444 <memcpy@plt>:
   12444:	add	ip, pc, #0, 12
   12448:	add	ip, ip, #32, 20	; 0x20000
   1244c:	ldr	pc, [ip, #3028]!	; 0xbd4

00012450 <ftell@plt>:
   12450:	add	ip, pc, #0, 12
   12454:	add	ip, ip, #32, 20	; 0x20000
   12458:	ldr	pc, [ip, #3020]!	; 0xbcc

0001245c <memcmp@plt>:
   1245c:	add	ip, pc, #0, 12
   12460:	add	ip, ip, #32, 20	; 0x20000
   12464:	ldr	pc, [ip, #3012]!	; 0xbc4

00012468 <rewind@plt>:
   12468:	add	ip, pc, #0, 12
   1246c:	add	ip, ip, #32, 20	; 0x20000
   12470:	ldr	pc, [ip, #3004]!	; 0xbbc

00012474 <realloc@plt>:
   12474:	add	ip, pc, #0, 12
   12478:	add	ip, ip, #32, 20	; 0x20000
   1247c:	ldr	pc, [ip, #2996]!	; 0xbb4

00012480 <fwrite@plt>:
   12480:	add	ip, pc, #0, 12
   12484:	add	ip, ip, #32, 20	; 0x20000
   12488:	ldr	pc, [ip, #2988]!	; 0xbac

0001248c <fread@plt>:
   1248c:	add	ip, pc, #0, 12
   12490:	add	ip, ip, #32, 20	; 0x20000
   12494:	ldr	pc, [ip, #2980]!	; 0xba4

00012498 <puts@plt>:
   12498:	add	ip, pc, #0, 12
   1249c:	add	ip, ip, #32, 20	; 0x20000
   124a0:	ldr	pc, [ip, #2972]!	; 0xb9c

000124a4 <malloc@plt>:
   124a4:	add	ip, pc, #0, 12
   124a8:	add	ip, ip, #32, 20	; 0x20000
   124ac:	ldr	pc, [ip, #2964]!	; 0xb94

000124b0 <__libc_start_main@plt>:
   124b0:	add	ip, pc, #0, 12
   124b4:	add	ip, ip, #32, 20	; 0x20000
   124b8:	ldr	pc, [ip, #2956]!	; 0xb8c

000124bc <__gmon_start__@plt>:
   124bc:	add	ip, pc, #0, 12
   124c0:	add	ip, ip, #32, 20	; 0x20000
   124c4:	ldr	pc, [ip, #2948]!	; 0xb84

000124c8 <exit@plt>:
   124c8:	add	ip, pc, #0, 12
   124cc:	add	ip, ip, #32, 20	; 0x20000
   124d0:	ldr	pc, [ip, #2940]!	; 0xb7c

000124d4 <fprintf@plt>:
   124d4:	add	ip, pc, #0, 12
   124d8:	add	ip, ip, #32, 20	; 0x20000
   124dc:	ldr	pc, [ip, #2932]!	; 0xb74

000124e0 <memset@plt>:
   124e0:	add	ip, pc, #0, 12
   124e4:	add	ip, ip, #32, 20	; 0x20000
   124e8:	ldr	pc, [ip, #2924]!	; 0xb6c

000124ec <strncpy@plt>:
   124ec:	add	ip, pc, #0, 12
   124f0:	add	ip, ip, #32, 20	; 0x20000
   124f4:	ldr	pc, [ip, #2916]!	; 0xb64

000124f8 <fclose@plt>:
   124f8:	add	ip, pc, #0, 12
   124fc:	add	ip, ip, #32, 20	; 0x20000
   12500:	ldr	pc, [ip, #2908]!	; 0xb5c

00012504 <sprintf@plt>:
   12504:	add	ip, pc, #0, 12
   12508:	add	ip, ip, #32, 20	; 0x20000
   1250c:	ldr	pc, [ip, #2900]!	; 0xb54

00012510 <fseek@plt>:
   12510:	add	ip, pc, #0, 12
   12514:	add	ip, ip, #32, 20	; 0x20000
   12518:	ldr	pc, [ip, #2892]!	; 0xb4c

0001251c <abort@plt>:
   1251c:	add	ip, pc, #0, 12
   12520:	add	ip, ip, #32, 20	; 0x20000
   12524:	ldr	pc, [ip, #2884]!	; 0xb44

00012528 <__assert_fail@plt>:
   12528:	add	ip, pc, #0, 12
   1252c:	add	ip, ip, #32, 20	; 0x20000
   12530:	ldr	pc, [ip, #2876]!	; 0xb3c

Disassembly of section .text:

00012538 <main@@Base-0x34>:
   12538:	ldr	r3, [pc, #32]	; 12560 <__assert_fail@plt+0x38>
   1253c:	ldr	r1, [pc, #32]	; 12564 <__assert_fail@plt+0x3c>
   12540:	ldr	r0, [pc, #32]	; 12568 <__assert_fail@plt+0x40>
   12544:	add	r3, pc, r3
   12548:	push	{r4, lr}
   1254c:	mov	r2, #260	; 0x104
   12550:	add	r3, r3, #204	; 0xcc
   12554:	add	r1, pc, r1
   12558:	add	r0, pc, r0
   1255c:	bl	12528 <__assert_fail@plt>
   12560:	andeq	pc, r0, ip, ror r6	; <UNPREDICTABLE>
   12564:	andeq	pc, r0, ip, lsr #27
   12568:	andeq	pc, r0, r8, lsl lr	; <UNPREDICTABLE>

0001256c <main@@Base>:
   1256c:	push	{r4, r5, r6, r7, r8, lr}
   12570:	mov	r5, r0
   12574:	ldr	r4, [pc, #144]	; 1260c <main@@Base+0xa0>
   12578:	ldr	r3, [pc, #144]	; 12610 <main@@Base+0xa4>
   1257c:	add	r4, pc, r4
   12580:	ldr	r0, [pc, #140]	; 12614 <main@@Base+0xa8>
   12584:	ldr	r7, [r4, r3]
   12588:	mov	r6, r1
   1258c:	mov	r2, #24
   12590:	mov	r1, #1
   12594:	ldr	r3, [r7]
   12598:	add	r0, pc, r0
   1259c:	bl	12480 <fwrite@plt>
   125a0:	cmp	r5, #1
   125a4:	cmpne	r5, #4
   125a8:	bne	125ec <main@@Base+0x80>
   125ac:	cmp	r5, #4
   125b0:	bne	125e4 <main@@Base+0x78>
   125b4:	ldr	r3, [pc, #92]	; 12618 <main@@Base+0xac>
   125b8:	ldr	r2, [pc, #92]	; 1261c <main@@Base+0xb0>
   125bc:	ldr	ip, [r6, #4]
   125c0:	ldr	r1, [r4, r3]
   125c4:	ldr	r3, [pc, #84]	; 12620 <main@@Base+0xb4>
   125c8:	ldr	r0, [r6, #8]
   125cc:	str	ip, [r1]
   125d0:	ldr	r1, [r4, r2]
   125d4:	ldr	r2, [r6, #12]
   125d8:	str	r0, [r1]
   125dc:	ldr	r3, [r4, r3]
   125e0:	str	r2, [r3]
   125e4:	pop	{r4, r5, r6, r7, r8, lr}
   125e8:	b	139bc <test_print@@Base>
   125ec:	ldr	r0, [pc, #48]	; 12624 <main@@Base+0xb8>
   125f0:	ldr	r3, [r7]
   125f4:	mov	r2, #191	; 0xbf
   125f8:	mov	r1, #1
   125fc:	add	r0, pc, r0
   12600:	bl	12480 <fwrite@plt>
   12604:	mov	r0, #1
   12608:	bl	124c8 <exit@plt>
   1260c:	andeq	r0, r2, ip, ror sl
   12610:	andeq	r0, r0, r0, ror r0
   12614:	andeq	pc, r0, r4, lsl r5	; <UNPREDICTABLE>
   12618:	andeq	r0, r0, ip, ror r0
   1261c:	andeq	r0, r0, r4, ror r0
   12620:	andeq	r0, r0, r4, lsl #1
   12624:	andeq	pc, r0, ip, asr #9

00012628 <_start@@Base>:
   12628:	mov	fp, #0
   1262c:	mov	lr, #0
   12630:	pop	{r1}		; (ldr r1, [sp], #4)
   12634:	mov	r2, sp
   12638:	push	{r2}		; (str r2, [sp, #-4]!)
   1263c:	push	{r0}		; (str r0, [sp, #-4]!)
   12640:	ldr	ip, [pc, #16]	; 12658 <_start@@Base+0x30>
   12644:	push	{ip}		; (str ip, [sp, #-4]!)
   12648:	ldr	r0, [pc, #12]	; 1265c <_start@@Base+0x34>
   1264c:	ldr	r3, [pc, #12]	; 12660 <_start@@Base+0x38>
   12650:	bl	124b0 <__libc_start_main@plt>
   12654:	bl	1251c <abort@plt>
   12658:	andeq	r1, r2, r8, lsr #8
   1265c:	andeq	r2, r1, ip, ror #10
   12660:	andeq	r1, r2, r8, asr #7
   12664:	ldr	r3, [pc, #20]	; 12680 <_start@@Base+0x58>
   12668:	ldr	r2, [pc, #20]	; 12684 <_start@@Base+0x5c>
   1266c:	add	r3, pc, r3
   12670:	ldr	r2, [r3, r2]
   12674:	cmp	r2, #0
   12678:	bxeq	lr
   1267c:	b	124bc <__gmon_start__@plt>
   12680:	andeq	r0, r2, ip, lsl #19
   12684:	andeq	r0, r0, r8, ror r0
   12688:	ldr	r3, [pc, #28]	; 126ac <_start@@Base+0x84>
   1268c:	ldr	r0, [pc, #28]	; 126b0 <_start@@Base+0x88>
   12690:	sub	r3, r3, r0
   12694:	cmp	r3, #6
   12698:	bxls	lr
   1269c:	ldr	r3, [pc, #16]	; 126b4 <_start@@Base+0x8c>
   126a0:	cmp	r3, #0
   126a4:	bxeq	lr
   126a8:	bx	r3
   126ac:	muleq	r3, fp, r0
   126b0:	muleq	r3, r8, r0
   126b4:	andeq	r0, r0, r0
   126b8:	ldr	r1, [pc, #36]	; 126e4 <_start@@Base+0xbc>
   126bc:	ldr	r0, [pc, #36]	; 126e8 <_start@@Base+0xc0>
   126c0:	sub	r1, r1, r0
   126c4:	asr	r1, r1, #2
   126c8:	add	r1, r1, r1, lsr #31
   126cc:	asrs	r1, r1, #1
   126d0:	bxeq	lr
   126d4:	ldr	r3, [pc, #16]	; 126ec <_start@@Base+0xc4>
   126d8:	cmp	r3, #0
   126dc:	bxeq	lr
   126e0:	bx	r3
   126e4:	muleq	r3, r8, r0
   126e8:	muleq	r3, r8, r0
   126ec:	andeq	r0, r0, r0
   126f0:	push	{r4, lr}
   126f4:	ldr	r4, [pc, #24]	; 12714 <_start@@Base+0xec>
   126f8:	ldrb	r3, [r4]
   126fc:	cmp	r3, #0
   12700:	popne	{r4, pc}
   12704:	bl	12688 <_start@@Base+0x60>
   12708:	mov	r3, #1
   1270c:	strb	r3, [r4]
   12710:	pop	{r4, pc}
   12714:	muleq	r3, r8, r0
   12718:	ldr	r0, [pc, #40]	; 12748 <_start@@Base+0x120>
   1271c:	ldr	r3, [r0]
   12720:	cmp	r3, #0
   12724:	bne	1272c <_start@@Base+0x104>
   12728:	b	126b8 <_start@@Base+0x90>
   1272c:	ldr	r3, [pc, #24]	; 1274c <_start@@Base+0x124>
   12730:	cmp	r3, #0
   12734:	beq	12728 <_start@@Base+0x100>
   12738:	push	{r4, lr}
   1273c:	blx	r3
   12740:	pop	{r4, lr}
   12744:	b	126b8 <_start@@Base+0x90>
   12748:	andeq	r2, r3, r4, lsl pc
   1274c:	andeq	r0, r0, r0
   12750:	bx	lr
   12754:	ldr	r3, [pc, #132]	; 127e0 <_start@@Base+0x1b8>
   12758:	push	{r4, r5, r6, lr}
   1275c:	add	r3, pc, r3
   12760:	sub	sp, sp, #8
   12764:	mov	r2, #21
   12768:	mov	r4, r0
   1276c:	stm	sp, {r2, r3}
   12770:	ldr	r3, [pc, #108]	; 127e4 <_start@@Base+0x1bc>
   12774:	mov	r2, #0
   12778:	add	r3, pc, r3
   1277c:	mov	r5, r1
   12780:	bl	1fcd0 <flatcc_json_printer_table_field@@Base>
   12784:	ldr	r3, [pc, #92]	; 127e8 <_start@@Base+0x1c0>
   12788:	mov	r6, #22
   1278c:	add	r3, pc, r3
   12790:	str	r3, [sp, #4]
   12794:	ldr	r3, [pc, #80]	; 127ec <_start@@Base+0x1c4>
   12798:	mov	r1, r5
   1279c:	mov	r0, r4
   127a0:	str	r6, [sp]
   127a4:	add	r3, pc, r3
   127a8:	mov	r2, #1
   127ac:	bl	1fcd0 <flatcc_json_printer_table_field@@Base>
   127b0:	ldr	r3, [pc, #56]	; 127f0 <_start@@Base+0x1c8>
   127b4:	str	r6, [sp]
   127b8:	add	r3, pc, r3
   127bc:	str	r3, [sp, #4]
   127c0:	ldr	r3, [pc, #44]	; 127f4 <_start@@Base+0x1cc>
   127c4:	mov	r1, r5
   127c8:	mov	r0, r4
   127cc:	add	r3, pc, r3
   127d0:	mov	r2, #2
   127d4:	bl	1fcd0 <flatcc_json_printer_table_field@@Base>
   127d8:	add	sp, sp, #8
   127dc:	pop	{r4, r5, r6, pc}
   127e0:	muleq	r0, ip, r1
   127e4:	ldrdeq	lr, [r0], -ip
   127e8:	andeq	r0, r0, r0, lsl #2
   127ec:	andeq	lr, r0, r8, asr #27
   127f0:	andeq	r0, r0, r8, rrx
   127f4:			; <UNDEFINED> instruction: 0x0000edb8
   127f8:	push	{lr}		; (str lr, [sp, #-4]!)
   127fc:	sub	sp, sp, #12
   12800:	mov	r3, #19
   12804:	str	r3, [sp]
   12808:	ldr	r3, [pc, #20]	; 12824 <_start@@Base+0x1fc>
   1280c:	mov	r2, #0
   12810:	str	r2, [sp, #4]
   12814:	add	r3, pc, r3
   12818:	bl	17688 <flatcc_json_printer_int32_field@@Base>
   1281c:	add	sp, sp, #12
   12820:	pop	{pc}		; (ldr pc, [sp], #4)
   12824:	andeq	lr, r0, r8, lsl #27
   12828:	push	{r4, r5, lr}
   1282c:	sub	sp, sp, #20
   12830:	mov	r3, #15
   12834:	str	r3, [sp]
   12838:	mov	r4, #0
   1283c:	mov	r5, #0
   12840:	ldr	r3, [pc, #68]	; 1288c <_start@@Base+0x264>
   12844:	strd	r4, [sp, #8]
   12848:	add	r3, pc, r3
   1284c:	mov	r2, #0
   12850:	mov	r4, r0
   12854:	mov	r5, r1
   12858:	bl	1788c <flatcc_json_printer_int64_field@@Base>
   1285c:	mov	r3, #21
   12860:	str	r3, [sp]
   12864:	ldr	r3, [pc, #36]	; 12890 <_start@@Base+0x268>
   12868:	mov	r2, #0
   1286c:	str	r2, [sp, #4]
   12870:	mov	r1, r5
   12874:	mov	r0, r4
   12878:	add	r3, pc, r3
   1287c:	mov	r2, #1
   12880:	bl	16ea8 <flatcc_json_printer_uint32_field@@Base>
   12884:	add	sp, sp, #20
   12888:	pop	{r4, r5, pc}
   1288c:	andeq	lr, r0, r8, ror #26
   12890:	andeq	lr, r0, r8, asr #26
   12894:	push	{r4, r5, lr}
   12898:	sub	sp, sp, #20
   1289c:	mov	r3, #15
   128a0:	str	r3, [sp]
   128a4:	mov	r4, #0
   128a8:	mov	r5, #0
   128ac:	ldr	r3, [pc, #68]	; 128f8 <_start@@Base+0x2d0>
   128b0:	strd	r4, [sp, #8]
   128b4:	add	r3, pc, r3
   128b8:	mov	r2, #0
   128bc:	mov	r4, r0
   128c0:	mov	r5, r1
   128c4:	bl	1788c <flatcc_json_printer_int64_field@@Base>
   128c8:	mov	r3, #16
   128cc:	str	r3, [sp]
   128d0:	ldr	r3, [pc, #36]	; 128fc <_start@@Base+0x2d4>
   128d4:	mov	r2, #0
   128d8:	str	r2, [sp, #4]
   128dc:	mov	r1, r5
   128e0:	mov	r0, r4
   128e4:	add	r3, pc, r3
   128e8:	mov	r2, #1
   128ec:	bl	16ea8 <flatcc_json_printer_uint32_field@@Base>
   128f0:	add	sp, sp, #20
   128f4:	pop	{r4, r5, pc}
   128f8:	strdeq	lr, [r0], -ip
   128fc:	strdeq	lr, [r0], -r4
   12900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12904:	sub	sp, sp, #20
   12908:	ldr	r3, [pc, #288]	; 12a30 <_start@@Base+0x408>
   1290c:	mov	r7, #4
   12910:	mov	r2, #0
   12914:	str	r7, [sp]
   12918:	add	r3, pc, r3
   1291c:	mov	r4, r0
   12920:	mov	r5, r1
   12924:	mov	fp, r2
   12928:	mov	sl, #9
   1292c:	bl	165ec <flatcc_json_printer_string_field@@Base>
   12930:	ldr	r3, [pc, #252]	; 12a34 <_start@@Base+0x40c>
   12934:	mov	r1, r5
   12938:	mov	r0, r4
   1293c:	stm	sp, {sl, fp}
   12940:	add	r3, pc, r3
   12944:	mov	r2, #1
   12948:	bl	16ea8 <flatcc_json_printer_uint32_field@@Base>
   1294c:	ldr	r3, [pc, #228]	; 12a38 <_start@@Base+0x410>
   12950:	mov	r1, r5
   12954:	mov	r0, r4
   12958:	str	r7, [sp]
   1295c:	add	r3, pc, r3
   12960:	mov	r2, #2
   12964:	bl	165ec <flatcc_json_printer_string_field@@Base>
   12968:	mov	r8, #0
   1296c:	mov	r9, #0
   12970:	ldr	r3, [pc, #196]	; 12a3c <_start@@Base+0x414>
   12974:	mov	r6, #8
   12978:	mov	r1, r5
   1297c:	mov	r0, r4
   12980:	strd	r8, [sp, #8]
   12984:	str	r6, [sp]
   12988:	add	r3, pc, r3
   1298c:	mov	r2, #3
   12990:	bl	1788c <flatcc_json_printer_int64_field@@Base>
   12994:	ldr	r3, [pc, #164]	; 12a40 <_start@@Base+0x418>
   12998:	mov	r2, r7
   1299c:	mov	r1, r5
   129a0:	mov	r0, r4
   129a4:	str	r7, [sp]
   129a8:	add	r3, pc, r3
   129ac:	bl	165ec <flatcc_json_printer_string_field@@Base>
   129b0:	ldr	r3, [pc, #140]	; 12a44 <_start@@Base+0x41c>
   129b4:	mov	r1, r5
   129b8:	mov	r0, r4
   129bc:	strd	r8, [sp, #8]
   129c0:	str	r6, [sp]
   129c4:	add	r3, pc, r3
   129c8:	mov	r2, #5
   129cc:	bl	1788c <flatcc_json_printer_int64_field@@Base>
   129d0:	ldr	r3, [pc, #112]	; 12a48 <_start@@Base+0x420>
   129d4:	mov	r1, r5
   129d8:	mov	r0, r4
   129dc:	stm	sp, {sl, fp}
   129e0:	add	r3, pc, r3
   129e4:	mov	r2, #6
   129e8:	bl	16ea8 <flatcc_json_printer_uint32_field@@Base>
   129ec:	ldr	r3, [pc, #88]	; 12a4c <_start@@Base+0x424>
   129f0:	mov	r1, r5
   129f4:	mov	r0, r4
   129f8:	strd	r8, [sp, #8]
   129fc:	str	r6, [sp]
   12a00:	add	r3, pc, r3
   12a04:	mov	r2, #7
   12a08:	bl	1788c <flatcc_json_printer_int64_field@@Base>
   12a0c:	ldr	r3, [pc, #60]	; 12a50 <_start@@Base+0x428>
   12a10:	stm	sp, {sl, fp}
   12a14:	mov	r2, r6
   12a18:	mov	r1, r5
   12a1c:	mov	r0, r4
   12a20:	add	r3, pc, r3
   12a24:	bl	16ea8 <flatcc_json_printer_uint32_field@@Base>
   12a28:	add	sp, sp, #20
   12a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a30:	ldrdeq	lr, [r0], -r4
   12a34:			; <UNDEFINED> instruction: 0x0000ecb4
   12a38:	andeq	lr, r0, r4, lsr #25
   12a3c:	andeq	lr, r0, r0, lsl #25
   12a40:	andeq	lr, r0, ip, ror #24
   12a44:	andeq	lr, r0, r8, asr ip
   12a48:	andeq	lr, r0, r8, asr #24
   12a4c:	andeq	lr, r0, r4, lsr ip
   12a50:	andeq	lr, r0, r0, lsr #24
   12a54:	ldr	r3, [pc, #1264]	; 12f4c <_start@@Base+0x924>
   12a58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a5c:	sub	sp, sp, #28
   12a60:	add	r3, pc, r3
   12a64:	str	r3, [sp, #4]
   12a68:	ldr	r3, [pc, #1248]	; 12f50 <_start@@Base+0x928>
   12a6c:	mov	r6, #3
   12a70:	str	r6, [sp]
   12a74:	add	r3, pc, r3
   12a78:	mov	r2, #0
   12a7c:	mov	r4, r0
   12a80:	mov	r5, r1
   12a84:	bl	20640 <flatcc_json_printer_struct_field@@Base>
   12a88:	mov	r3, #150	; 0x96
   12a8c:	str	r3, [sp, #4]
   12a90:	ldr	r3, [pc, #1212]	; 12f54 <_start@@Base+0x92c>
   12a94:	mov	r7, #4
   12a98:	mov	r1, r5
   12a9c:	mov	r0, r4
   12aa0:	str	r7, [sp]
   12aa4:	add	r3, pc, r3
   12aa8:	mov	r2, #1
   12aac:	bl	17480 <flatcc_json_printer_int16_field@@Base>
   12ab0:	mov	r2, #2
   12ab4:	mov	r3, #100	; 0x64
   12ab8:	mov	r1, r5
   12abc:	stm	sp, {r2, r3}
   12ac0:	ldr	r3, [pc, #1168]	; 12f58 <_start@@Base+0x930>
   12ac4:	mov	r0, r4
   12ac8:	add	r3, pc, r3
   12acc:	bl	17480 <flatcc_json_printer_int16_field@@Base>
   12ad0:	ldr	r3, [pc, #1156]	; 12f5c <_start@@Base+0x934>
   12ad4:	mov	r2, r6
   12ad8:	mov	r1, r5
   12adc:	mov	r0, r4
   12ae0:	str	r7, [sp]
   12ae4:	add	r3, pc, r3
   12ae8:	bl	165ec <flatcc_json_printer_string_field@@Base>
   12aec:	mov	r3, #9
   12af0:	str	r3, [sp]
   12af4:	ldr	r3, [pc, #1124]	; 12f60 <_start@@Base+0x938>
   12af8:	mov	r1, r5
   12afc:	mov	r0, r4
   12b00:	add	r3, pc, r3
   12b04:	mov	r2, #5
   12b08:	bl	1b33c <flatcc_json_printer_uint8_vector_field@@Base>
   12b0c:	ldr	r3, [pc, #1104]	; 12f64 <_start@@Base+0x93c>
   12b10:	mov	r8, #5
   12b14:	add	r3, pc, r3
   12b18:	mov	fp, #8
   12b1c:	str	r3, [sp, #8]
   12b20:	ldr	r3, [pc, #1088]	; 12f68 <_start@@Base+0x940>
   12b24:	mov	r1, r5
   12b28:	mov	r0, r4
   12b2c:	stm	sp, {r8, fp}
   12b30:	add	r3, pc, r3
   12b34:	mov	r2, #6
   12b38:	bl	18898 <flatcc_json_printer_int8_enum_field@@Base>
   12b3c:	ldr	ip, [pc, #1064]	; 12f6c <_start@@Base+0x944>
   12b40:	ldr	r3, [pc, #1064]	; 12f70 <_start@@Base+0x948>
   12b44:	add	ip, pc, ip
   12b48:	add	r3, pc, r3
   12b4c:	mov	r2, fp
   12b50:	stmib	sp, {r3, ip}
   12b54:	ldr	r3, [pc, #1048]	; 12f74 <_start@@Base+0x94c>
   12b58:	mov	r1, r5
   12b5c:	mov	r0, r4
   12b60:	str	r7, [sp]
   12b64:	add	r3, pc, r3
   12b68:	ldr	r9, [pc, #1032]	; 12f78 <_start@@Base+0x950>
   12b6c:	bl	1ff7c <flatcc_json_printer_union_field@@Base>
   12b70:	ldr	r3, [pc, #1028]	; 12f7c <_start@@Base+0x954>
   12b74:	add	r9, pc, r9
   12b78:	mov	r1, r5
   12b7c:	mov	r0, r4
   12b80:	str	r9, [sp, #8]
   12b84:	str	r7, [sp, #4]
   12b88:	str	r8, [sp]
   12b8c:	mov	r2, #9
   12b90:	add	r3, pc, r3
   12b94:	str	r9, [sp, #20]
   12b98:	bl	1edd4 <flatcc_json_printer_struct_vector_field@@Base>
   12b9c:	ldr	r3, [pc, #988]	; 12f80 <_start@@Base+0x958>
   12ba0:	mov	r6, #17
   12ba4:	mov	r1, r5
   12ba8:	mov	r0, r4
   12bac:	str	r6, [sp]
   12bb0:	add	r3, pc, r3
   12bb4:	mov	r2, #10
   12bb8:	ldr	sl, [pc, #964]	; 12f84 <_start@@Base+0x95c>
   12bbc:	bl	1f154 <flatcc_json_printer_string_vector_field@@Base>
   12bc0:	ldr	r3, [pc, #960]	; 12f88 <_start@@Base+0x960>
   12bc4:	add	sl, pc, sl
   12bc8:	mov	r1, r5
   12bcc:	mov	r0, r4
   12bd0:	str	sl, [sp, #4]
   12bd4:	str	r6, [sp]
   12bd8:	add	r3, pc, r3
   12bdc:	mov	r2, #11
   12be0:	bl	1f534 <flatcc_json_printer_table_vector_field@@Base>
   12be4:	ldr	r3, [pc, #928]	; 12f8c <_start@@Base+0x964>
   12be8:	stm	sp, {r8, sl}
   12bec:	mov	r1, r5
   12bf0:	mov	r0, r4
   12bf4:	add	r3, pc, r3
   12bf8:	mov	r2, #12
   12bfc:	bl	1fcd0 <flatcc_json_printer_table_field@@Base>
   12c00:	ldr	r3, [pc, #904]	; 12f90 <_start@@Base+0x968>
   12c04:	mov	r9, #0
   12c08:	mov	r2, #20
   12c0c:	str	sl, [sp, #8]
   12c10:	mov	r1, r5
   12c14:	mov	r0, r4
   12c18:	str	r9, [sp, #4]
   12c1c:	str	r2, [sp]
   12c20:	add	r3, pc, r3
   12c24:	mov	r2, #13
   12c28:	bl	20c84 <flatcc_json_printer_table_as_nested_root@@Base>
   12c2c:	ldr	r3, [pc, #864]	; 12f94 <_start@@Base+0x96c>
   12c30:	mov	r2, #9
   12c34:	add	r3, pc, r3
   12c38:	str	r3, [sp, #4]
   12c3c:	ldr	r3, [pc, #852]	; 12f98 <_start@@Base+0x970>
   12c40:	str	r2, [sp]
   12c44:	mov	r1, r5
   12c48:	mov	r0, r4
   12c4c:	add	r3, pc, r3
   12c50:	mov	r2, #14
   12c54:	bl	1fcd0 <flatcc_json_printer_table_field@@Base>
   12c58:	mov	r3, #1
   12c5c:	str	r3, [sp, #4]
   12c60:	ldr	r3, [pc, #820]	; 12f9c <_start@@Base+0x974>
   12c64:	mov	r1, r5
   12c68:	mov	r0, r4
   12c6c:	str	fp, [sp]
   12c70:	add	r3, pc, r3
   12c74:	mov	r2, #15
   12c78:	bl	17aa8 <flatcc_json_printer_bool_field@@Base>
   12c7c:	ldr	r3, [pc, #796]	; 12fa0 <_start@@Base+0x978>
   12c80:	mov	sl, #16
   12c84:	str	r9, [sp, #4]
   12c88:	mov	r1, r5
   12c8c:	mov	r0, r4
   12c90:	mov	r2, sl
   12c94:	str	sl, [sp]
   12c98:	add	r3, pc, r3
   12c9c:	bl	17688 <flatcc_json_printer_int32_field@@Base>
   12ca0:	ldr	r3, [pc, #764]	; 12fa4 <_start@@Base+0x97c>
   12ca4:	str	r9, [sp, #4]
   12ca8:	mov	r2, r6
   12cac:	mov	r1, r5
   12cb0:	mov	r0, r4
   12cb4:	str	sl, [sp]
   12cb8:	add	r3, pc, r3
   12cbc:	bl	16ea8 <flatcc_json_printer_uint32_field@@Base>
   12cc0:	mov	r2, #0
   12cc4:	mov	r3, #0
   12cc8:	mov	r1, r5
   12ccc:	strd	r2, [sp, #8]
   12cd0:	ldr	r3, [pc, #720]	; 12fa8 <_start@@Base+0x980>
   12cd4:	mov	r0, r4
   12cd8:	str	sl, [sp]
   12cdc:	add	r3, pc, r3
   12ce0:	mov	r2, #18
   12ce4:	bl	1788c <flatcc_json_printer_int64_field@@Base>
   12ce8:	mov	r2, #0
   12cec:	mov	r3, #0
   12cf0:	mov	r1, r5
   12cf4:	strd	r2, [sp, #8]
   12cf8:	ldr	r3, [pc, #684]	; 12fac <_start@@Base+0x984>
   12cfc:	mov	r0, r4
   12d00:	str	sl, [sp]
   12d04:	add	r3, pc, r3
   12d08:	mov	r2, #19
   12d0c:	bl	1708c <flatcc_json_printer_uint64_field@@Base>
   12d10:	ldr	r3, [pc, #664]	; 12fb0 <_start@@Base+0x988>
   12d14:	stm	sp, {r6, r9}
   12d18:	mov	r1, r5
   12d1c:	mov	r0, r4
   12d20:	mov	r2, #20
   12d24:	add	r3, pc, r3
   12d28:	bl	17688 <flatcc_json_printer_int32_field@@Base>
   12d2c:	ldr	r3, [pc, #640]	; 12fb4 <_start@@Base+0x98c>
   12d30:	stm	sp, {r6, r9}
   12d34:	mov	r1, r5
   12d38:	mov	r0, r4
   12d3c:	add	r3, pc, r3
   12d40:	mov	r2, #21
   12d44:	bl	16ea8 <flatcc_json_printer_uint32_field@@Base>
   12d48:	mov	r2, #0
   12d4c:	mov	r3, #0
   12d50:	mov	r1, r5
   12d54:	strd	r2, [sp, #8]
   12d58:	ldr	r3, [pc, #600]	; 12fb8 <_start@@Base+0x990>
   12d5c:	mov	r0, r4
   12d60:	str	r6, [sp]
   12d64:	add	r3, pc, r3
   12d68:	mov	r2, #22
   12d6c:	bl	1788c <flatcc_json_printer_int64_field@@Base>
   12d70:	mov	r2, #0
   12d74:	mov	r3, #0
   12d78:	mov	r1, r5
   12d7c:	strd	r2, [sp, #8]
   12d80:	ldr	r3, [pc, #564]	; 12fbc <_start@@Base+0x994>
   12d84:	mov	r0, r4
   12d88:	str	r6, [sp]
   12d8c:	add	r3, pc, r3
   12d90:	mov	r2, #23
   12d94:	bl	1708c <flatcc_json_printer_uint64_field@@Base>
   12d98:	ldr	r3, [pc, #544]	; 12fc0 <_start@@Base+0x998>
   12d9c:	mov	r1, r5
   12da0:	mov	r0, r4
   12da4:	str	sl, [sp]
   12da8:	add	r3, pc, r3
   12dac:	mov	r2, #24
   12db0:	bl	1cb7c <flatcc_json_printer_bool_vector_field@@Base>
   12db4:	ldr	r3, [pc, #520]	; 12fc4 <_start@@Base+0x99c>
   12db8:	mov	r1, r5
   12dbc:	mov	r0, r4
   12dc0:	str	r8, [sp]
   12dc4:	vldr	s0, [pc, #372]	; 12f40 <_start@@Base+0x918>
   12dc8:	add	r3, pc, r3
   12dcc:	mov	r2, #25
   12dd0:	bl	17c8c <flatcc_json_printer_float_field@@Base>
   12dd4:	ldr	r3, [pc, #492]	; 12fc8 <_start@@Base+0x9a0>
   12dd8:	mov	r9, #6
   12ddc:	mov	r1, r5
   12de0:	mov	r0, r4
   12de4:	str	r9, [sp]
   12de8:	vldr	s0, [pc, #340]	; 12f44 <_start@@Base+0x91c>
   12dec:	add	r3, pc, r3
   12df0:	mov	r2, #26
   12df4:	bl	17c8c <flatcc_json_printer_float_field@@Base>
   12df8:	ldr	r3, [pc, #460]	; 12fcc <_start@@Base+0x9a4>
   12dfc:	vldr	s0, [pc, #324]	; 12f48 <_start@@Base+0x920>
   12e00:	mov	r1, r5
   12e04:	mov	r0, r4
   12e08:	str	r9, [sp]
   12e0c:	add	r3, pc, r3
   12e10:	mov	r2, #27
   12e14:	bl	17c8c <flatcc_json_printer_float_field@@Base>
   12e18:	mov	r3, #18
   12e1c:	str	r3, [sp]
   12e20:	ldr	r3, [pc, #424]	; 12fd0 <_start@@Base+0x9a8>
   12e24:	mov	r1, r5
   12e28:	mov	r0, r4
   12e2c:	add	r3, pc, r3
   12e30:	mov	r2, #28
   12e34:	bl	1f154 <flatcc_json_printer_string_vector_field@@Base>
   12e38:	ldr	r3, [pc, #404]	; 12fd4 <_start@@Base+0x9ac>
   12e3c:	mov	r2, #23
   12e40:	add	r3, pc, r3
   12e44:	str	r3, [sp, #8]
   12e48:	ldr	r3, [pc, #392]	; 12fd8 <_start@@Base+0x9b0>
   12e4c:	mov	r1, r5
   12e50:	mov	r0, r4
   12e54:	str	r2, [sp]
   12e58:	str	fp, [sp, #4]
   12e5c:	add	r3, pc, r3
   12e60:	mov	r2, #29
   12e64:	bl	1edd4 <flatcc_json_printer_struct_vector_field@@Base>
   12e68:	ldr	r3, [pc, #364]	; 12fdc <_start@@Base+0x9b4>
   12e6c:	mov	r1, r5
   12e70:	mov	r0, r4
   12e74:	str	r7, [sp]
   12e78:	add	r3, pc, r3
   12e7c:	mov	r2, #30
   12e80:	bl	1b33c <flatcc_json_printer_uint8_vector_field@@Base>
   12e84:	ldr	r3, [sp, #20]
   12e88:	mov	r1, r5
   12e8c:	str	r3, [sp, #8]
   12e90:	ldr	r3, [pc, #328]	; 12fe0 <_start@@Base+0x9b8>
   12e94:	mov	r0, r4
   12e98:	str	r7, [sp, #4]
   12e9c:	str	r8, [sp]
   12ea0:	add	r3, pc, r3
   12ea4:	mov	r2, #31
   12ea8:	bl	1edd4 <flatcc_json_printer_struct_vector_field@@Base>
   12eac:	mov	r3, #15
   12eb0:	str	r3, [sp]
   12eb4:	ldr	r3, [pc, #296]	; 12fe4 <_start@@Base+0x9bc>
   12eb8:	mov	r1, r5
   12ebc:	mov	r0, r4
   12ec0:	add	r3, pc, r3
   12ec4:	mov	r2, #32
   12ec8:	bl	1c8b4 <flatcc_json_printer_int64_vector_field@@Base>
   12ecc:	ldr	r3, [pc, #276]	; 12fe8 <_start@@Base+0x9c0>
   12ed0:	mov	r1, r5
   12ed4:	mov	r0, r4
   12ed8:	str	r6, [sp]
   12edc:	add	r3, pc, r3
   12ee0:	mov	r2, #33	; 0x21
   12ee4:	bl	1d1d0 <flatcc_json_printer_double_vector_field@@Base>
   12ee8:	ldr	r3, [pc, #252]	; 12fec <_start@@Base+0x9c4>
   12eec:	mov	r2, #21
   12ef0:	add	r3, pc, r3
   12ef4:	mov	r1, r5
   12ef8:	stm	sp, {r2, r3}
   12efc:	ldr	r3, [pc, #236]	; 12ff0 <_start@@Base+0x9c8>
   12f00:	mov	r0, r4
   12f04:	add	r3, pc, r3
   12f08:	mov	r2, #34	; 0x22
   12f0c:	bl	1fcd0 <flatcc_json_printer_table_field@@Base>
   12f10:	ldr	r3, [pc, #220]	; 12ff4 <_start@@Base+0x9cc>
   12f14:	mov	r2, #10
   12f18:	add	r3, pc, r3
   12f1c:	mov	r1, r5
   12f20:	stm	sp, {r2, r3}
   12f24:	ldr	r3, [pc, #204]	; 12ff8 <_start@@Base+0x9d0>
   12f28:	mov	r0, r4
   12f2c:	add	r3, pc, r3
   12f30:	mov	r2, #35	; 0x23
   12f34:	bl	1fcd0 <flatcc_json_printer_table_field@@Base>
   12f38:	add	sp, sp, #28
   12f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f40:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   12f44:	submi	r0, r0, r0
   12f48:	andeq	r0, r0, r0
   12f4c:			; <UNDEFINED> instruction: 0x00000cb8
   12f50:	ldrdeq	lr, [r0], -r8
   12f54:	andeq	lr, r0, ip, lsr #23
   12f58:	muleq	r0, r0, fp
   12f5c:	andeq	lr, r0, r8, ror fp
   12f60:	andeq	lr, r0, r4, ror #22
   12f64:	andeq	r0, r0, r0, lsr fp
   12f68:	andeq	lr, r0, r0, asr #22
   12f6c:	muleq	r0, ip, r6
   12f70:	strdeq	r0, [r0], -r8
   12f74:	andeq	lr, r0, r4, lsl fp
   12f78:	andeq	r0, r0, r4, lsl #12
   12f7c:	strdeq	lr, [r0], -r0
   12f80:	ldrdeq	lr, [r0], -r8
   12f84:			; <UNDEFINED> instruction: 0xfffffe88
   12f88:	andeq	lr, r0, r4, asr #21
   12f8c:			; <UNDEFINED> instruction: 0x0000eabc
   12f90:	muleq	r0, r8, sl
   12f94:			; <UNDEFINED> instruction: 0x000004b8
   12f98:	andeq	lr, r0, r4, lsl #21
   12f9c:	andeq	lr, r0, ip, ror #20
   12fa0:	andeq	lr, r0, r0, asr sl
   12fa4:	andeq	lr, r0, r4, asr #20
   12fa8:	andeq	lr, r0, r4, lsr sl
   12fac:	andeq	lr, r0, r0, lsr #20
   12fb0:	andeq	lr, r0, r4, lsl sl
   12fb4:	andeq	lr, r0, r0, lsl sl
   12fb8:	strdeq	lr, [r0], -ip
   12fbc:	andeq	lr, r0, r8, ror #19
   12fc0:	andeq	lr, r0, r0, ror #19
   12fc4:	ldrdeq	lr, [r0], -r4
   12fc8:			; <UNDEFINED> instruction: 0x0000e9b8
   12fcc:	andeq	lr, r0, r0, lsr #19
   12fd0:	andeq	lr, r0, r8, lsl #19
   12fd4:	andeq	r0, r0, r0, asr #4
   12fd8:	andeq	lr, r0, ip, ror #18
   12fdc:	andeq	lr, r0, r8, ror #18
   12fe0:	andeq	lr, r0, r8, asr #18
   12fe4:	andeq	lr, r0, r0, lsr r9
   12fe8:	andeq	lr, r0, r4, lsr #18
   12fec:	andeq	r0, r0, r0, asr #21
   12ff0:	andeq	lr, r0, r0, lsl r9
   12ff4:	ldrdeq	r0, [r0], -ip
   12ff8:	andeq	lr, r0, r0, lsl #18
   12ffc:	push	{r4, r5, r6, lr}
   13000:	sub	sp, sp, #8
   13004:	mov	r3, #4
   13008:	str	r3, [sp]
   1300c:	ldr	r3, [pc, #104]	; 1307c <_start@@Base+0xa54>
   13010:	mov	r4, #0
   13014:	mov	r2, r4
   13018:	str	r4, [sp, #4]
   1301c:	add	r3, pc, r3
   13020:	mov	r5, r0
   13024:	mov	r6, r1
   13028:	bl	167a0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   1302c:	mov	r3, #7
   13030:	str	r3, [sp]
   13034:	ldr	r3, [pc, #68]	; 13080 <_start@@Base+0xa58>
   13038:	mov	r2, #1
   1303c:	mov	r1, r6
   13040:	mov	r0, r5
   13044:	str	r2, [sp, #4]
   13048:	add	r3, pc, r3
   1304c:	bl	167a0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13050:	mov	r3, #6
   13054:	str	r3, [sp]
   13058:	ldr	r3, [pc, #36]	; 13084 <_start@@Base+0xa5c>
   1305c:	str	r4, [sp, #4]
   13060:	mov	r1, r6
   13064:	mov	r0, r5
   13068:	add	r3, pc, r3
   1306c:	mov	r2, #2
   13070:	bl	167a0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13074:	add	sp, sp, #8
   13078:	pop	{r4, r5, r6, pc}
   1307c:	andeq	lr, r0, ip, lsl #20
   13080:	strdeq	lr, [r0], -r0
   13084:	ldrdeq	lr, [r0], -r8
   13088:	ldr	ip, [pc, #92]	; 130ec <_start@@Base+0xac4>
   1308c:	push	{r4, r5, lr}
   13090:	sub	sp, sp, #12
   13094:	add	ip, pc, ip
   13098:	mov	r4, r1
   1309c:	mov	r3, #0
   130a0:	mov	r1, #2
   130a4:	mov	r2, r4
   130a8:	str	ip, [sp]
   130ac:	str	r1, [sp, #4]
   130b0:	mov	r1, r3
   130b4:	mov	r5, r0
   130b8:	bl	19650 <flatcc_json_printer_uint32_struct_field@@Base>
   130bc:	ldr	r3, [pc, #44]	; 130f0 <_start@@Base+0xac8>
   130c0:	mov	r1, #8
   130c4:	add	r3, pc, r3
   130c8:	str	r3, [sp]
   130cc:	str	r1, [sp, #4]
   130d0:	mov	r2, r4
   130d4:	mov	r0, r5
   130d8:	mov	r3, #4
   130dc:	mov	r1, #1
   130e0:	bl	19650 <flatcc_json_printer_uint32_struct_field@@Base>
   130e4:	add	sp, sp, #12
   130e8:	pop	{r4, r5, pc}
   130ec:			; <UNDEFINED> instruction: 0x0000e7b4
   130f0:	andeq	lr, r0, r8, lsl #15
   130f4:	push	{r4, r5, r6, r8, r9, lr}
   130f8:	sub	sp, sp, #16
   130fc:	ldr	r3, [pc, #112]	; 13174 <_start@@Base+0xb4c>
   13100:	mov	r6, #2
   13104:	str	r6, [sp]
   13108:	add	r3, pc, r3
   1310c:	mov	r2, #0
   13110:	mov	r4, r0
   13114:	mov	r5, r1
   13118:	bl	165ec <flatcc_json_printer_string_field@@Base>
   1311c:	mov	r3, #3
   13120:	str	r3, [sp]
   13124:	mov	r8, #0
   13128:	mov	r9, #0
   1312c:	ldr	r3, [pc, #68]	; 13178 <_start@@Base+0xb50>
   13130:	mov	r1, r5
   13134:	mov	r0, r4
   13138:	strd	r8, [sp, #8]
   1313c:	add	r3, pc, r3
   13140:	mov	r2, #1
   13144:	bl	1788c <flatcc_json_printer_int64_field@@Base>
   13148:	mov	ip, #0
   1314c:	mov	r3, #5
   13150:	mov	r2, r6
   13154:	stm	sp, {r3, ip}
   13158:	ldr	r3, [pc, #28]	; 1317c <_start@@Base+0xb54>
   1315c:	mov	r1, r5
   13160:	mov	r0, r4
   13164:	add	r3, pc, r3
   13168:	bl	16cc4 <flatcc_json_printer_uint16_field@@Base>
   1316c:	add	sp, sp, #16
   13170:	pop	{r4, r5, r6, r8, r9, pc}
   13174:	andeq	lr, r0, r0, asr #14
   13178:	andeq	lr, r0, ip, lsl r7
   1317c:	strdeq	lr, [r0], -r8
   13180:	ldr	ip, [pc, #88]	; 131e0 <_start@@Base+0xbb8>
   13184:	push	{r4, r5, r6, lr}
   13188:	sub	sp, sp, #8
   1318c:	add	ip, pc, ip
   13190:	mov	r4, #1
   13194:	mov	r3, #0
   13198:	mov	r5, r1
   1319c:	mov	r2, r1
   131a0:	str	ip, [sp]
   131a4:	mov	r1, r3
   131a8:	str	r4, [sp, #4]
   131ac:	mov	r6, r0
   131b0:	bl	19ac8 <flatcc_json_printer_int16_struct_field@@Base>
   131b4:	ldr	r3, [pc, #40]	; 131e4 <_start@@Base+0xbbc>
   131b8:	str	r4, [sp, #4]
   131bc:	add	r3, pc, r3
   131c0:	str	r3, [sp]
   131c4:	mov	r2, r5
   131c8:	mov	r1, r4
   131cc:	mov	r0, r6
   131d0:	mov	r3, #2
   131d4:	bl	19934 <flatcc_json_printer_int8_struct_field@@Base>
   131d8:	add	sp, sp, #8
   131dc:	pop	{r4, r5, r6, pc}
   131e0:			; <UNDEFINED> instruction: 0x0000e5bc
   131e4:	andeq	lr, r0, r8, lsr #13
   131e8:	ldrb	r3, [r1, #8]
   131ec:	sub	r3, r3, #1
   131f0:	cmp	r3, #3
   131f4:	addls	pc, pc, r3, lsl #2
   131f8:	b	1323c <_start@@Base+0xc14>
   131fc:	b	13230 <_start@@Base+0xc08>
   13200:	b	13224 <_start@@Base+0xbfc>
   13204:	b	13218 <_start@@Base+0xbf0>
   13208:	b	1320c <_start@@Base+0xbe4>
   1320c:	ldr	r2, [pc, #44]	; 13240 <_start@@Base+0xc18>
   13210:	add	r2, pc, r2
   13214:	b	2024c <flatcc_json_printer_union_table@@Base>
   13218:	ldr	r2, [pc, #36]	; 13244 <_start@@Base+0xc1c>
   1321c:	add	r2, pc, r2
   13220:	b	2024c <flatcc_json_printer_union_table@@Base>
   13224:	ldr	r2, [pc, #28]	; 13248 <_start@@Base+0xc20>
   13228:	add	r2, pc, r2
   1322c:	b	2024c <flatcc_json_printer_union_table@@Base>
   13230:	ldr	r2, [pc, #20]	; 1324c <_start@@Base+0xc24>
   13234:	add	r2, pc, r2
   13238:	b	2024c <flatcc_json_printer_union_table@@Base>
   1323c:	bx	lr
   13240:	andeq	r0, r0, r8, lsr r0
   13244:			; <UNDEFINED> instruction: 0xfffff52c
   13248:	andeq	r0, r0, r8, ror #6
   1324c:			; <UNDEFINED> instruction: 0xfffff818
   13250:	ldr	r3, [pc, #144]	; 132e8 <_start@@Base+0xcc0>
   13254:	push	{r4, r5, lr}
   13258:	add	r3, pc, r3
   1325c:	sub	sp, sp, #20
   13260:	mov	r2, #6
   13264:	mov	r4, r0
   13268:	stm	sp, {r2, r3}
   1326c:	ldr	r3, [pc, #120]	; 132ec <_start@@Base+0xcc4>
   13270:	mov	r2, #0
   13274:	add	r3, pc, r3
   13278:	mov	r5, r1
   1327c:	bl	1fcd0 <flatcc_json_printer_table_field@@Base>
   13280:	ldr	r3, [pc, #104]	; 132f0 <_start@@Base+0xcc8>
   13284:	mov	r2, #5
   13288:	add	r3, pc, r3
   1328c:	mov	r1, r5
   13290:	stm	sp, {r2, r3}
   13294:	ldr	r3, [pc, #88]	; 132f4 <_start@@Base+0xccc>
   13298:	mov	r0, r4
   1329c:	add	r3, pc, r3
   132a0:	mov	r2, #1
   132a4:	bl	1fcd0 <flatcc_json_printer_table_field@@Base>
   132a8:	ldr	r3, [pc, #72]	; 132f8 <_start@@Base+0xcd0>
   132ac:	ldr	r2, [pc, #72]	; 132fc <_start@@Base+0xcd4>
   132b0:	add	r3, pc, r3
   132b4:	str	r3, [sp, #4]
   132b8:	ldr	r3, [pc, #64]	; 13300 <_start@@Base+0xcd8>
   132bc:	mov	ip, #7
   132c0:	add	r2, pc, r2
   132c4:	str	r2, [sp, #8]
   132c8:	mov	r1, r5
   132cc:	mov	r0, r4
   132d0:	str	ip, [sp]
   132d4:	add	r3, pc, r3
   132d8:	mov	r2, #3
   132dc:	bl	1f998 <flatcc_json_printer_union_vector_field@@Base>
   132e0:	add	sp, sp, #20
   132e4:	pop	{r4, r5, pc}
   132e8:			; <UNDEFINED> instruction: 0xfffff4f4
   132ec:	strdeq	lr, [r0], -r4
   132f0:	andeq	r0, r0, r4, ror r0
   132f4:	ldrdeq	lr, [r0], -r4
   132f8:	muleq	r0, r0, r5
   132fc:			; <UNDEFINED> instruction: 0xffffff20
   13300:	andeq	lr, r0, r4, lsr #11
   13304:	push	{r4, r5, r6, r7, r8, r9, lr}
   13308:	mov	r3, #14
   1330c:	ldr	r5, [pc, #188]	; 133d0 <_start@@Base+0xda8>
   13310:	ldr	r4, [pc, #188]	; 133d4 <_start@@Base+0xdac>
   13314:	sub	sp, sp, #20
   13318:	add	r5, pc, r5
   1331c:	add	r4, pc, r4
   13320:	mov	r2, #1
   13324:	stm	sp, {r3, r4, r5}
   13328:	mov	r6, r0
   1332c:	ldr	r3, [pc, #164]	; 133d8 <_start@@Base+0xdb0>
   13330:	mov	r7, r1
   13334:	add	r3, pc, r3
   13338:	bl	1ff7c <flatcc_json_printer_union_field@@Base>
   1333c:	ldr	r3, [pc, #152]	; 133dc <_start@@Base+0xdb4>
   13340:	mov	r9, #10
   13344:	mov	r1, r7
   13348:	mov	r0, r6
   1334c:	stmib	sp, {r4, r5}
   13350:	str	r9, [sp]
   13354:	add	r3, pc, r3
   13358:	mov	r2, #3
   1335c:	bl	1ff7c <flatcc_json_printer_union_field@@Base>
   13360:	ldr	r3, [pc, #120]	; 133e0 <_start@@Base+0xdb8>
   13364:	mov	r8, #9
   13368:	mov	r1, r7
   1336c:	mov	r0, r6
   13370:	stmib	sp, {r4, r5}
   13374:	str	r8, [sp]
   13378:	add	r3, pc, r3
   1337c:	mov	r2, #5
   13380:	bl	1ff7c <flatcc_json_printer_union_field@@Base>
   13384:	mov	r3, #5
   13388:	str	r3, [sp]
   1338c:	ldr	r3, [pc, #80]	; 133e4 <_start@@Base+0xdbc>
   13390:	mov	r1, r7
   13394:	mov	r0, r6
   13398:	stmib	sp, {r4, r5}
   1339c:	add	r3, pc, r3
   133a0:	mov	r2, #7
   133a4:	bl	1ff7c <flatcc_json_printer_union_field@@Base>
   133a8:	ldr	r3, [pc, #56]	; 133e8 <_start@@Base+0xdc0>
   133ac:	stmib	sp, {r4, r5}
   133b0:	str	r9, [sp]
   133b4:	mov	r2, r8
   133b8:	mov	r1, r7
   133bc:	mov	r0, r6
   133c0:	add	r3, pc, r3
   133c4:	bl	1f998 <flatcc_json_printer_union_vector_field@@Base>
   133c8:	add	sp, sp, #20
   133cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   133d0:	andeq	r0, r0, ip, asr #1
   133d4:			; <UNDEFINED> instruction: 0x000001b0
   133d8:	andeq	lr, r0, ip, asr #10
   133dc:	andeq	lr, r0, ip, lsr r5
   133e0:	andeq	lr, r0, r4, lsr #10
   133e4:	andeq	lr, r0, ip, lsl #10
   133e8:	strdeq	lr, [r0], -r0
   133ec:	ldrb	r3, [r1, #8]
   133f0:	cmp	r3, #9
   133f4:	beq	13438 <_start@@Base+0xe10>
   133f8:	bls	13414 <_start@@Base+0xdec>
   133fc:	cmp	r3, #11
   13400:	beq	13410 <_start@@Base+0xde8>
   13404:	bcc	13450 <_start@@Base+0xe28>
   13408:	cmp	r3, #255	; 0xff
   1340c:	bne	13430 <_start@@Base+0xe08>
   13410:	b	20418 <flatcc_json_printer_union_string@@Base>
   13414:	cmp	r3, #2
   13418:	beq	13444 <_start@@Base+0xe1c>
   1341c:	cmp	r3, #8
   13420:	bne	13434 <_start@@Base+0xe0c>
   13424:	ldr	r2, [pc, #48]	; 1345c <_start@@Base+0xe34>
   13428:	add	r2, pc, r2
   1342c:	b	20358 <flatcc_json_printer_union_struct@@Base>
   13430:	bx	lr
   13434:	bx	lr
   13438:	ldr	r2, [pc, #32]	; 13460 <_start@@Base+0xe38>
   1343c:	add	r2, pc, r2
   13440:	b	20358 <flatcc_json_printer_union_struct@@Base>
   13444:	ldr	r2, [pc, #24]	; 13464 <_start@@Base+0xe3c>
   13448:	add	r2, pc, r2
   1344c:	b	2024c <flatcc_json_printer_union_table@@Base>
   13450:	ldr	r2, [pc, #16]	; 13468 <_start@@Base+0xe40>
   13454:	add	r2, pc, r2
   13458:	b	20358 <flatcc_json_printer_union_struct@@Base>
   1345c:	andeq	r0, r0, r0, ror r0
   13460:	andeq	r0, r0, r8, lsr #32
   13464:			; <UNDEFINED> instruction: 0xfffff3a8
   13468:	andeq	r0, r0, r0, lsl r0
   1346c:	ldr	ip, [pc, #40]	; 1349c <_start@@Base+0xe74>
   13470:	push	{lr}		; (str lr, [sp, #-4]!)
   13474:	add	ip, pc, ip
   13478:	sub	sp, sp, #12
   1347c:	mov	lr, #10
   13480:	mov	r3, #0
   13484:	mov	r2, r1
   13488:	stm	sp, {ip, lr}
   1348c:	mov	r1, r3
   13490:	bl	19c5c <flatcc_json_printer_int32_struct_field@@Base>
   13494:	add	sp, sp, #12
   13498:	pop	{pc}		; (ldr pc, [sp], #4)
   1349c:	andeq	lr, r0, r8, asr #8
   134a0:	ldr	ip, [pc, #40]	; 134d0 <_start@@Base+0xea8>
   134a4:	push	{lr}		; (str lr, [sp, #-4]!)
   134a8:	add	ip, pc, ip
   134ac:	sub	sp, sp, #12
   134b0:	mov	lr, #11
   134b4:	mov	r3, #0
   134b8:	mov	r2, r1
   134bc:	stm	sp, {ip, lr}
   134c0:	mov	r1, r3
   134c4:	bl	194e0 <flatcc_json_printer_uint16_struct_field@@Base>
   134c8:	add	sp, sp, #12
   134cc:	pop	{pc}		; (ldr pc, [sp], #4)
   134d0:	andeq	lr, r0, r0, lsr #8
   134d4:	cmp	r1, #9
   134d8:	mov	r3, r0
   134dc:	beq	1356c <_start@@Base+0xf44>
   134e0:	bls	13508 <_start@@Base+0xee0>
   134e4:	cmp	r1, #11
   134e8:	beq	13528 <_start@@Base+0xf00>
   134ec:	bcc	1355c <_start@@Base+0xf34>
   134f0:	cmp	r1, #255	; 0xff
   134f4:	bne	13538 <_start@@Base+0xf10>
   134f8:	ldr	r1, [pc, #124]	; 1357c <_start@@Base+0xf54>
   134fc:	mov	r2, #6
   13500:	add	r1, pc, r1
   13504:	b	164d4 <flatcc_json_printer_enum@@Base>
   13508:	cmp	r1, #2
   1350c:	beq	1354c <_start@@Base+0xf24>
   13510:	cmp	r1, #8
   13514:	bne	13538 <_start@@Base+0xf10>
   13518:	mov	r2, r1
   1351c:	ldr	r1, [pc, #92]	; 13580 <_start@@Base+0xf58>
   13520:	add	r1, pc, r1
   13524:	b	164d4 <flatcc_json_printer_enum@@Base>
   13528:	ldr	r1, [pc, #84]	; 13584 <_start@@Base+0xf5c>
   1352c:	mov	r2, #5
   13530:	add	r1, pc, r1
   13534:	b	164d4 <flatcc_json_printer_enum@@Base>
   13538:	ldr	r1, [pc, #72]	; 13588 <_start@@Base+0xf60>
   1353c:	mov	r0, r3
   13540:	mov	r2, #4
   13544:	add	r1, pc, r1
   13548:	b	164d4 <flatcc_json_printer_enum@@Base>
   1354c:	ldr	r1, [pc, #56]	; 1358c <_start@@Base+0xf64>
   13550:	mov	r2, #5
   13554:	add	r1, pc, r1
   13558:	b	164d4 <flatcc_json_printer_enum@@Base>
   1355c:	ldr	r1, [pc, #44]	; 13590 <_start@@Base+0xf68>
   13560:	mov	r2, #7
   13564:	add	r1, pc, r1
   13568:	b	164d4 <flatcc_json_printer_enum@@Base>
   1356c:	ldr	r1, [pc, #32]	; 13594 <_start@@Base+0xf6c>
   13570:	mov	r2, #5
   13574:	add	r1, pc, r1
   13578:	b	164d4 <flatcc_json_printer_enum@@Base>
   1357c:	andeq	lr, r0, r0, lsl #8
   13580:			; <UNDEFINED> instruction: 0x0000e3bc
   13584:	andeq	lr, r0, r8, asr #7
   13588:	andeq	lr, r0, r4, asr #7
   1358c:	andeq	lr, r0, r0, lsl #7
   13590:	andeq	lr, r0, ip, lsl #7
   13594:	andeq	lr, r0, r4, ror r3
   13598:	push	{r4, r5, r6, r7, lr}
   1359c:	mov	r3, #5
   135a0:	ldr	r5, [pc, #144]	; 13638 <_start@@Base+0x1010>
   135a4:	sub	sp, sp, #20
   135a8:	mov	r4, #2
   135ac:	add	r5, pc, r5
   135b0:	mov	r2, #0
   135b4:	stm	sp, {r3, r4, r5}
   135b8:	mov	r6, r0
   135bc:	ldr	r3, [pc, #120]	; 1363c <_start@@Base+0x1014>
   135c0:	mov	r7, r1
   135c4:	add	r3, pc, r3
   135c8:	bl	18898 <flatcc_json_printer_int8_enum_field@@Base>
   135cc:	mov	r3, #6
   135d0:	str	r3, [sp]
   135d4:	ldr	r3, [pc, #100]	; 13640 <_start@@Base+0x1018>
   135d8:	mov	r1, r7
   135dc:	mov	r0, r6
   135e0:	stmib	sp, {r4, r5}
   135e4:	add	r3, pc, r3
   135e8:	mov	r2, #1
   135ec:	bl	18898 <flatcc_json_printer_int8_enum_field@@Base>
   135f0:	ldr	r3, [pc, #76]	; 13644 <_start@@Base+0x101c>
   135f4:	mov	r2, r4
   135f8:	mov	r1, r7
   135fc:	mov	r0, r6
   13600:	str	r4, [sp, #4]
   13604:	str	r4, [sp]
   13608:	add	r3, pc, r3
   1360c:	bl	16ae0 <flatcc_json_printer_uint8_field@@Base>
   13610:	ldr	r3, [pc, #48]	; 13648 <_start@@Base+0x1020>
   13614:	mov	r2, #3
   13618:	str	r4, [sp, #4]
   1361c:	mov	r1, r7
   13620:	mov	r0, r6
   13624:	str	r2, [sp]
   13628:	add	r3, pc, r3
   1362c:	bl	16ae0 <flatcc_json_printer_uint8_field@@Base>
   13630:	add	sp, sp, #20
   13634:	pop	{r4, r5, r6, r7, pc}
   13638:	muleq	r0, r8, r0
   1363c:	andeq	lr, r0, ip, lsr #1
   13640:	andeq	lr, r0, ip, lsr #6
   13644:	andeq	lr, r0, r0, lsl r3
   13648:	strdeq	lr, [r0], -r4
   1364c:	push	{r4, r5, r6, r7, r8, lr}
   13650:	uxtb	r4, r1
   13654:	tst	r4, #244	; 0xf4
   13658:	movne	r5, #1
   1365c:	moveq	r5, #0
   13660:	cmp	r4, #0
   13664:	orreq	r5, r5, #1
   13668:	cmp	r5, #0
   1366c:	beq	13678 <_start@@Base+0x1050>
   13670:	pop	{r4, r5, r6, r7, r8, lr}
   13674:	b	1637c <flatcc_json_printer_int8@@Base>
   13678:	sub	r3, r4, #1
   1367c:	tst	r3, r4
   13680:	movne	r7, #1
   13684:	moveq	r7, #0
   13688:	mov	r1, r7
   1368c:	mov	r6, r0
   13690:	bl	16550 <flatcc_json_printer_delimit_enum_flags@@Base>
   13694:	ands	r1, r4, #1
   13698:	bne	136bc <_start@@Base+0x1094>
   1369c:	tst	r4, #2
   136a0:	bne	136f4 <_start@@Base+0x10cc>
   136a4:	tst	r4, #8
   136a8:	bne	136dc <_start@@Base+0x10b4>
   136ac:	mov	r1, r7
   136b0:	mov	r0, r6
   136b4:	pop	{r4, r5, r6, r7, r8, lr}
   136b8:	b	16550 <flatcc_json_printer_delimit_enum_flags@@Base>
   136bc:	ldr	r2, [pc, #80]	; 13714 <_start@@Base+0x10ec>
   136c0:	mov	r1, r5
   136c4:	mov	r3, #3
   136c8:	add	r2, pc, r2
   136cc:	mov	r0, r6
   136d0:	bl	16580 <flatcc_json_printer_enum_flag@@Base>
   136d4:	mov	r1, #1
   136d8:	b	1369c <_start@@Base+0x1074>
   136dc:	ldr	r2, [pc, #52]	; 13718 <_start@@Base+0x10f0>
   136e0:	mov	r3, #4
   136e4:	add	r2, pc, r2
   136e8:	mov	r0, r6
   136ec:	bl	16580 <flatcc_json_printer_enum_flag@@Base>
   136f0:	b	136ac <_start@@Base+0x1084>
   136f4:	ldr	r2, [pc, #32]	; 1371c <_start@@Base+0x10f4>
   136f8:	add	r5, r1, #1
   136fc:	mov	r3, #5
   13700:	add	r2, pc, r2
   13704:	mov	r0, r6
   13708:	bl	16580 <flatcc_json_printer_enum_flag@@Base>
   1370c:	mov	r1, r5
   13710:	b	136a4 <_start@@Base+0x107c>
   13714:	andeq	lr, r0, r8, asr r2
   13718:	andeq	lr, r0, r8, asr #4
   1371c:	andeq	lr, r0, r4, lsr #4
   13720:	ldr	ip, [pc, #256]	; 13828 <_start@@Base+0x1200>
   13724:	push	{r4, r5, r6, lr}
   13728:	sub	sp, sp, #16
   1372c:	add	ip, pc, ip
   13730:	mov	r6, #1
   13734:	mov	r3, #0
   13738:	mov	r4, r1
   1373c:	str	ip, [sp]
   13740:	mov	r2, r1
   13744:	str	r6, [sp, #4]
   13748:	mov	r1, r3
   1374c:	mov	r5, r0
   13750:	bl	1a0fc <flatcc_json_printer_float_struct_field@@Base>
   13754:	ldr	r3, [pc, #208]	; 1382c <_start@@Base+0x1204>
   13758:	str	r6, [sp, #4]
   1375c:	add	r3, pc, r3
   13760:	mov	r2, r4
   13764:	mov	r1, r6
   13768:	mov	r0, r5
   1376c:	str	r3, [sp]
   13770:	mov	r3, #4
   13774:	bl	1a0fc <flatcc_json_printer_float_struct_field@@Base>
   13778:	ldr	r3, [pc, #176]	; 13830 <_start@@Base+0x1208>
   1377c:	str	r6, [sp, #4]
   13780:	add	r3, pc, r3
   13784:	mov	r2, r4
   13788:	mov	r0, r5
   1378c:	str	r3, [sp]
   13790:	mov	r1, #2
   13794:	mov	r3, #8
   13798:	bl	1a0fc <flatcc_json_printer_float_struct_field@@Base>
   1379c:	ldr	r3, [pc, #144]	; 13834 <_start@@Base+0x120c>
   137a0:	mov	r6, #5
   137a4:	add	r3, pc, r3
   137a8:	mov	r2, r4
   137ac:	mov	r0, r5
   137b0:	stm	sp, {r3, r6}
   137b4:	mov	r1, #3
   137b8:	mov	r3, #16
   137bc:	bl	1a278 <flatcc_json_printer_double_struct_field@@Base>
   137c0:	ldr	r1, [pc, #112]	; 13838 <_start@@Base+0x1210>
   137c4:	ldr	r3, [pc, #112]	; 1383c <_start@@Base+0x1214>
   137c8:	add	r1, pc, r1
   137cc:	add	r3, pc, r3
   137d0:	mov	r2, r4
   137d4:	mov	r0, r5
   137d8:	str	r1, [sp, #8]
   137dc:	str	r3, [sp]
   137e0:	str	r6, [sp, #4]
   137e4:	mov	r3, #24
   137e8:	mov	r1, #4
   137ec:	bl	1aa7c <flatcc_json_printer_int8_enum_struct_field@@Base>
   137f0:	ldr	ip, [pc, #72]	; 13840 <_start@@Base+0x1218>
   137f4:	ldr	r3, [pc, #72]	; 13844 <_start@@Base+0x121c>
   137f8:	add	ip, pc, ip
   137fc:	add	r3, pc, r3
   13800:	str	r3, [sp]
   13804:	str	r6, [sp, #4]
   13808:	mov	r2, r4
   1380c:	mov	r1, r6
   13810:	mov	r0, r5
   13814:	str	ip, [sp, #8]
   13818:	mov	r3, #26
   1381c:	bl	20430 <flatcc_json_printer_embedded_struct_field@@Base>
   13820:	add	sp, sp, #16
   13824:	pop	{r4, r5, r6, pc}
   13828:	andeq	lr, r0, r8, lsl #4
   1382c:	andeq	sp, r0, r8, asr pc
   13830:			; <UNDEFINED> instruction: 0x0000e1b8
   13834:	muleq	r0, r8, r1
   13838:			; <UNDEFINED> instruction: 0xfffffe7c
   1383c:	andeq	lr, r0, r8, ror r1
   13840:			; <UNDEFINED> instruction: 0xfffff980
   13844:	andeq	lr, r0, r0, asr r1
   13848:	sub	r1, r1, #1
   1384c:	cmp	r1, #3
   13850:	addls	pc, pc, r1, lsl #2
   13854:	b	138a8 <_start@@Base+0x1280>
   13858:	b	13898 <_start@@Base+0x1270>
   1385c:	b	13888 <_start@@Base+0x1260>
   13860:	b	13878 <_start@@Base+0x1250>
   13864:	b	13868 <_start@@Base+0x1240>
   13868:	ldr	r1, [pc, #72]	; 138b8 <_start@@Base+0x1290>
   1386c:	mov	r2, #3
   13870:	add	r1, pc, r1
   13874:	b	164d4 <flatcc_json_printer_enum@@Base>
   13878:	ldr	r1, [pc, #60]	; 138bc <_start@@Base+0x1294>
   1387c:	mov	r2, #8
   13880:	add	r1, pc, r1
   13884:	b	164d4 <flatcc_json_printer_enum@@Base>
   13888:	ldr	r1, [pc, #48]	; 138c0 <_start@@Base+0x1298>
   1388c:	mov	r2, #23
   13890:	add	r1, pc, r1
   13894:	b	164d4 <flatcc_json_printer_enum@@Base>
   13898:	ldr	r1, [pc, #36]	; 138c4 <_start@@Base+0x129c>
   1389c:	mov	r2, #7
   138a0:	add	r1, pc, r1
   138a4:	b	164d4 <flatcc_json_printer_enum@@Base>
   138a8:	ldr	r1, [pc, #24]	; 138c8 <_start@@Base+0x12a0>
   138ac:	mov	r2, #4
   138b0:	add	r1, pc, r1
   138b4:	b	164d4 <flatcc_json_printer_enum@@Base>
   138b8:	andeq	lr, r0, r0, lsl r1
   138bc:	strdeq	lr, [r0], -r4
   138c0:	andeq	lr, r0, ip, asr #1
   138c4:	strheq	lr, [r0], -r4
   138c8:	andeq	lr, r0, r8, asr r0
   138cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   138d0:	subs	r9, r1, #0
   138d4:	ldr	r1, [pc, #216]	; 139b4 <_start@@Base+0x138c>
   138d8:	sub	sp, sp, #12
   138dc:	add	r1, pc, r1
   138e0:	addeq	r9, sp, #4
   138e4:	bl	12420 <fopen@plt>
   138e8:	subs	r6, r0, #0
   138ec:	beq	139ac <_start@@Base+0x1384>
   138f0:	mov	r2, #2
   138f4:	mov	r1, #0
   138f8:	bl	12510 <fseek@plt>
   138fc:	mov	r0, r6
   13900:	bl	12450 <ftell@plt>
   13904:	cmp	r0, #10240	; 0x2800
   13908:	mov	r5, r0
   1390c:	str	r0, [r9]
   13910:	bhi	139a0 <_start@@Base+0x1378>
   13914:	mov	r0, r6
   13918:	bl	12468 <rewind@plt>
   1391c:	cmp	r5, #0
   13920:	movne	r0, r5
   13924:	moveq	r0, #1
   13928:	bl	124a4 <malloc@plt>
   1392c:	subs	r7, r0, #0
   13930:	beq	139a0 <_start@@Base+0x1378>
   13934:	mov	r4, #0
   13938:	mov	r8, #1
   1393c:	b	13944 <_start@@Base+0x131c>
   13940:	add	r4, r4, r0
   13944:	mov	r3, r6
   13948:	sub	r2, r5, r4
   1394c:	mov	r1, r8
   13950:	add	r0, r7, r4
   13954:	bl	1248c <fread@plt>
   13958:	cmp	r0, #0
   1395c:	bne	13940 <_start@@Base+0x1318>
   13960:	cmp	r5, r4
   13964:	mov	r0, r6
   13968:	bne	13980 <_start@@Base+0x1358>
   1396c:	bl	124f8 <fclose@plt>
   13970:	mov	r0, r7
   13974:	str	r5, [r9]
   13978:	add	sp, sp, #12
   1397c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13980:	bl	124f8 <fclose@plt>
   13984:	mov	r0, r7
   13988:	bl	12438 <free@plt>
   1398c:	mov	r7, #0
   13990:	mov	r0, r7
   13994:	str	r5, [r9]
   13998:	add	sp, sp, #12
   1399c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   139a0:	mov	r0, r6
   139a4:	bl	124f8 <fclose@plt>
   139a8:	b	1398c <_start@@Base+0x1364>
   139ac:	mov	r5, r6
   139b0:	b	1398c <_start@@Base+0x1364>
   139b4:	andeq	lr, r0, r8, lsr #1
   139b8:	bx	lr

000139bc <test_print@@Base>:
   139bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139c0:	sub	sp, sp, #76	; 0x4c
   139c4:	ldr	r5, [pc, #676]	; 13c70 <test_print@@Base+0x2b4>
   139c8:	ldr	r3, [pc, #676]	; 13c74 <test_print@@Base+0x2b8>
   139cc:	add	r5, pc, r5
   139d0:	mov	r6, #0
   139d4:	str	r6, [sp, #12]
   139d8:	str	r6, [sp, #16]
   139dc:	str	r6, [sp, #20]
   139e0:	ldr	r8, [r5, r3]
   139e4:	ldr	r1, [pc, #652]	; 13c78 <test_print@@Base+0x2bc>
   139e8:	add	r1, pc, r1
   139ec:	ldr	r0, [r8]
   139f0:	bl	12420 <fopen@plt>
   139f4:	subs	r4, r0, #0
   139f8:	beq	13c4c <test_print@@Base+0x290>
   139fc:	add	r7, sp, #24
   13a00:	mov	r1, r4
   13a04:	mov	r0, r7
   13a08:	bl	20df4 <flatcc_json_printer_init@@Base>
   13a0c:	ldr	r3, [pc, #616]	; 13c7c <test_print@@Base+0x2c0>
   13a10:	mov	r1, #2
   13a14:	mov	r2, #1
   13a18:	strb	r6, [sp, #51]	; 0x33
   13a1c:	strb	r1, [sp, #49]	; 0x31
   13a20:	strb	r2, [sp, #50]	; 0x32
   13a24:	ldr	r9, [r5, r3]
   13a28:	ldr	r6, [r9]
   13a2c:	cmp	r6, #0
   13a30:	beq	13a4c <test_print@@Base+0x90>
   13a34:	ldr	r1, [pc, #580]	; 13c80 <test_print@@Base+0x2c4>
   13a38:	mov	r0, r6
   13a3c:	add	r1, pc, r1
   13a40:	bl	12414 <strcmp@plt>
   13a44:	cmp	r0, #0
   13a48:	bne	13b98 <test_print@@Base+0x1dc>
   13a4c:	ldr	r6, [pc, #560]	; 13c84 <test_print@@Base+0x2c8>
   13a50:	mov	r3, #288	; 0x120
   13a54:	add	r6, pc, r6
   13a58:	str	r3, [sp, #12]
   13a5c:	ldr	r3, [pc, #548]	; 13c88 <test_print@@Base+0x2cc>
   13a60:	add	r1, sp, #16
   13a64:	ldr	fp, [r5, r3]
   13a68:	ldr	r0, [fp]
   13a6c:	bl	138cc <_start@@Base+0x12a4>
   13a70:	subs	sl, r0, #0
   13a74:	beq	13be8 <test_print@@Base+0x22c>
   13a78:	ldr	r3, [pc, #524]	; 13c8c <test_print@@Base+0x2d0>
   13a7c:	ldr	r2, [sp, #12]
   13a80:	add	r3, pc, r3
   13a84:	str	r3, [sp]
   13a88:	ldr	r3, [pc, #512]	; 13c90 <test_print@@Base+0x2d4>
   13a8c:	mov	r1, r6
   13a90:	add	r3, pc, r3
   13a94:	mov	r0, r7
   13a98:	bl	209c4 <flatcc_json_printer_table_as_root@@Base>
   13a9c:	ldr	r3, [sp, #68]	; 0x44
   13aa0:	mov	r1, #1
   13aa4:	mov	r0, r7
   13aa8:	blx	r3
   13aac:	ldr	r3, [sp, #60]	; 0x3c
   13ab0:	cmp	r3, #0
   13ab4:	bne	13bd8 <test_print@@Base+0x21c>
   13ab8:	mov	r0, r4
   13abc:	bl	124f8 <fclose@plt>
   13ac0:	add	r1, sp, #20
   13ac4:	ldr	r0, [r8]
   13ac8:	bl	138cc <_start@@Base+0x12a4>
   13acc:	subs	fp, r0, #0
   13ad0:	beq	13c28 <test_print@@Base+0x26c>
   13ad4:	ldr	r2, [sp, #20]
   13ad8:	ldr	r3, [sp, #16]
   13adc:	cmp	r2, r3
   13ae0:	beq	13b64 <test_print@@Base+0x1a8>
   13ae4:	ldr	r3, [pc, #424]	; 13c94 <test_print@@Base+0x2d8>
   13ae8:	ldr	r0, [pc, #424]	; 13c98 <test_print@@Base+0x2dc>
   13aec:	mov	r2, #54	; 0x36
   13af0:	ldr	r3, [r5, r3]
   13af4:	mov	r1, #1
   13af8:	add	r0, pc, r0
   13afc:	ldr	r3, [r3]
   13b00:	mvn	r8, #0
   13b04:	bl	12480 <fwrite@plt>
   13b08:	mov	r0, r7
   13b0c:	bl	21010 <flatcc_json_printer_clear@@Base>
   13b10:	ldr	r4, [r9]
   13b14:	cmp	r4, #0
   13b18:	movne	r4, #0
   13b1c:	beq	13b30 <test_print@@Base+0x174>
   13b20:	mov	r0, r6
   13b24:	bl	12438 <free@plt>
   13b28:	cmp	sl, #0
   13b2c:	beq	13b38 <test_print@@Base+0x17c>
   13b30:	mov	r0, sl
   13b34:	bl	12438 <free@plt>
   13b38:	cmp	fp, #0
   13b3c:	beq	13b48 <test_print@@Base+0x18c>
   13b40:	mov	r0, fp
   13b44:	bl	12438 <free@plt>
   13b48:	cmp	r4, #0
   13b4c:	beq	13b58 <test_print@@Base+0x19c>
   13b50:	mov	r0, r4
   13b54:	bl	124f8 <fclose@plt>
   13b58:	mov	r0, r8
   13b5c:	add	sp, sp, #76	; 0x4c
   13b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b64:	mov	r1, sl
   13b68:	bl	1245c <memcmp@plt>
   13b6c:	subs	r8, r0, #0
   13b70:	bne	13ae4 <test_print@@Base+0x128>
   13b74:	ldr	r3, [pc, #280]	; 13c94 <test_print@@Base+0x2d8>
   13b78:	ldr	r0, [pc, #284]	; 13c9c <test_print@@Base+0x2e0>
   13b7c:	mov	r2, #26
   13b80:	ldr	r3, [r5, r3]
   13b84:	mov	r1, #1
   13b88:	add	r0, pc, r0
   13b8c:	ldr	r3, [r3]
   13b90:	bl	12480 <fwrite@plt>
   13b94:	b	13b08 <test_print@@Base+0x14c>
   13b98:	mov	r0, r6
   13b9c:	add	r1, sp, #12
   13ba0:	bl	138cc <_start@@Base+0x12a4>
   13ba4:	subs	r6, r0, #0
   13ba8:	bne	13a5c <test_print@@Base+0xa0>
   13bac:	ldr	r3, [pc, #224]	; 13c94 <test_print@@Base+0x2d8>
   13bb0:	ldr	r1, [pc, #232]	; 13ca0 <test_print@@Base+0x2e4>
   13bb4:	ldr	r2, [r9]
   13bb8:	ldr	r3, [r5, r3]
   13bbc:	add	r1, pc, r1
   13bc0:	mvn	r8, #0
   13bc4:	ldr	r0, [r3]
   13bc8:	bl	124d4 <fprintf@plt>
   13bcc:	mov	r0, r7
   13bd0:	bl	21010 <flatcc_json_printer_clear@@Base>
   13bd4:	b	13b48 <test_print@@Base+0x18c>
   13bd8:	ldr	r0, [pc, #196]	; 13ca4 <test_print@@Base+0x2e8>
   13bdc:	add	r0, pc, r0
   13be0:	bl	12498 <puts@plt>
   13be4:	b	13ab8 <test_print@@Base+0xfc>
   13be8:	ldr	r3, [pc, #164]	; 13c94 <test_print@@Base+0x2d8>
   13bec:	ldr	r1, [pc, #180]	; 13ca8 <test_print@@Base+0x2ec>
   13bf0:	ldr	r2, [fp]
   13bf4:	ldr	r3, [r5, r3]
   13bf8:	add	r1, pc, r1
   13bfc:	ldr	r0, [r3]
   13c00:	bl	124d4 <fprintf@plt>
   13c04:	mov	r0, r7
   13c08:	bl	21010 <flatcc_json_printer_clear@@Base>
   13c0c:	ldr	r3, [r9]
   13c10:	cmp	r3, #0
   13c14:	mvneq	r8, #0
   13c18:	beq	13b50 <test_print@@Base+0x194>
   13c1c:	mov	fp, sl
   13c20:	mvn	r8, #0
   13c24:	b	13b20 <test_print@@Base+0x164>
   13c28:	ldr	r3, [pc, #100]	; 13c94 <test_print@@Base+0x2d8>
   13c2c:	ldr	r1, [pc, #120]	; 13cac <test_print@@Base+0x2f0>
   13c30:	ldr	r2, [r8]
   13c34:	ldr	r3, [r5, r3]
   13c38:	add	r1, pc, r1
   13c3c:	mvn	r8, #0
   13c40:	ldr	r0, [r3]
   13c44:	bl	124d4 <fprintf@plt>
   13c48:	b	13b08 <test_print@@Base+0x14c>
   13c4c:	ldr	r3, [pc, #64]	; 13c94 <test_print@@Base+0x2d8>
   13c50:	ldr	r1, [pc, #88]	; 13cb0 <test_print@@Base+0x2f4>
   13c54:	ldr	r2, [r8]
   13c58:	ldr	r3, [r5, r3]
   13c5c:	add	r1, pc, r1
   13c60:	mvn	r8, #0
   13c64:	ldr	r0, [r3]
   13c68:	bl	124d4 <fprintf@plt>
   13c6c:	b	13b58 <test_print@@Base+0x19c>
   13c70:	andeq	pc, r1, ip, lsr #12
   13c74:	andeq	r0, r0, r4, lsl #1
   13c78:	andeq	sp, r0, r0, lsr #31
   13c7c:	andeq	r0, r0, ip, ror r0
   13c80:	andeq	sp, r0, r0, ror pc
   13c84:	andeq	sp, r0, r0, ror #19
   13c88:	andeq	r0, r0, r4, ror r0
   13c8c:			; <UNDEFINED> instruction: 0xffffefcc
   13c90:	andeq	sp, r0, r8, ror pc
   13c94:	andeq	r0, r0, r0, ror r0
   13c98:	andeq	sp, r0, r0, ror #30
   13c9c:	andeq	sp, r0, r8, lsl #30
   13ca0:	strdeq	sp, [r0], -r4
   13ca4:	andeq	sp, r0, r4, lsr lr
   13ca8:	andeq	sp, r0, r4, ror #27
   13cac:	strdeq	sp, [r0], -r8
   13cb0:	andeq	sp, r0, r0, lsr sp
   13cb4:	andeq	r0, r0, r0
   13cb8:	cmp	r0, #1000	; 0x3e8
   13cbc:	push	{r4, lr}
   13cc0:	mov	r3, r0
   13cc4:	bcc	13d40 <test_print@@Base+0x384>
   13cc8:	ldr	r2, [pc, #340]	; 13e24 <test_print@@Base+0x468>
   13ccc:	cmp	r0, r2
   13cd0:	bhi	13da4 <test_print@@Base+0x3e8>
   13cd4:	ldr	lr, [pc, #332]	; 13e28 <test_print@@Base+0x46c>
   13cd8:	mov	r2, #100	; 0x64
   13cdc:	ldr	ip, [pc, #328]	; 13e2c <test_print@@Base+0x470>
   13ce0:	umull	r0, lr, lr, r3
   13ce4:	add	ip, pc, ip
   13ce8:	lsr	lr, lr, #5
   13cec:	mov	r0, #0
   13cf0:	mul	r2, r2, lr
   13cf4:	strb	r0, [r1, #4]
   13cf8:	sub	r3, r3, r2
   13cfc:	add	r4, r1, #2
   13d00:	uxth	r2, r3
   13d04:	uxth	r3, lr
   13d08:	ldrb	lr, [ip, r2, lsl #1]
   13d0c:	add	r2, ip, r2, lsl #1
   13d10:	mov	r0, #4
   13d14:	strb	lr, [r1, #2]
   13d18:	ldrb	r2, [r2, #1]
   13d1c:	strb	r2, [r1, #3]
   13d20:	ldr	r2, [pc, #264]	; 13e30 <test_print@@Base+0x474>
   13d24:	add	r2, pc, r2
   13d28:	add	r1, r2, r3, lsl #1
   13d2c:	ldrb	r3, [r2, r3, lsl #1]
   13d30:	strb	r3, [r4, #-2]
   13d34:	ldrb	r3, [r1, #1]
   13d38:	strb	r3, [r4, #-1]
   13d3c:	pop	{r4, pc}
   13d40:	cmp	r0, #99	; 0x63
   13d44:	bls	13df4 <test_print@@Base+0x438>
   13d48:	add	lr, r1, #3
   13d4c:	mov	r0, #3
   13d50:	mov	r2, #0
   13d54:	strb	r2, [r1, #3]
   13d58:	ldr	r4, [pc, #200]	; 13e28 <test_print@@Base+0x46c>
   13d5c:	mov	r2, #100	; 0x64
   13d60:	ldr	ip, [pc, #204]	; 13e34 <test_print@@Base+0x478>
   13d64:	umull	r1, r4, r4, r3
   13d68:	add	ip, pc, ip
   13d6c:	lsr	r4, r4, #5
   13d70:	sub	r1, lr, #2
   13d74:	mul	r2, r2, r4
   13d78:	sub	r2, r3, r2
   13d7c:	uxth	r3, r4
   13d80:	uxth	r2, r2
   13d84:	ldrb	r4, [ip, r2, lsl #1]
   13d88:	add	r2, ip, r2, lsl #1
   13d8c:	strb	r4, [lr, #-2]
   13d90:	ldrb	r2, [r2, #1]
   13d94:	strb	r2, [lr, #-1]
   13d98:	add	r3, r3, #48	; 0x30
   13d9c:	strb	r3, [r1, #-1]
   13da0:	pop	{r4, pc}
   13da4:	ldr	r4, [pc, #124]	; 13e28 <test_print@@Base+0x46c>
   13da8:	mov	r2, #100	; 0x64
   13dac:	ldr	ip, [pc, #132]	; 13e38 <test_print@@Base+0x47c>
   13db0:	umull	r0, r4, r4, r3
   13db4:	add	ip, pc, ip
   13db8:	lsr	r4, r4, #5
   13dbc:	mov	r0, #0
   13dc0:	mul	r2, r2, r4
   13dc4:	strb	r0, [r1, #5]
   13dc8:	sub	r3, r3, r2
   13dcc:	add	lr, r1, #3
   13dd0:	uxth	r2, r3
   13dd4:	uxth	r3, r4
   13dd8:	ldrb	r4, [ip, r2, lsl #1]
   13ddc:	add	r2, ip, r2, lsl #1
   13de0:	mov	r0, #5
   13de4:	strb	r4, [r1, #3]
   13de8:	ldrb	r2, [r2, #1]
   13dec:	strb	r2, [r1, #4]
   13df0:	b	13d58 <test_print@@Base+0x39c>
   13df4:	cmp	r0, #9
   13df8:	bls	13e10 <test_print@@Base+0x454>
   13dfc:	mov	r2, #0
   13e00:	strb	r2, [r1, #2]
   13e04:	add	r4, r1, #2
   13e08:	mov	r0, #2
   13e0c:	b	13d20 <test_print@@Base+0x364>
   13e10:	mov	r2, #0
   13e14:	strb	r2, [r1, #1]
   13e18:	mov	r0, #1
   13e1c:	add	r1, r1, #1
   13e20:	b	13d98 <test_print@@Base+0x3dc>
   13e24:	andeq	r2, r0, pc, lsl #14
   13e28:	mvnpl	r8, pc, lsl r5
   13e2c:	ldrdeq	sp, [r0], -ip
   13e30:	muleq	r0, ip, lr
   13e34:	andeq	sp, r0, r8, asr lr
   13e38:	andeq	sp, r0, ip, lsl #28
   13e3c:	ldr	r2, [pc, #804]	; 14168 <test_print@@Base+0x7ac>
   13e40:	push	{r4, lr}
   13e44:	cmp	r0, r2
   13e48:	mov	r3, r0
   13e4c:	bls	13f84 <test_print@@Base+0x5c8>
   13e50:	ldr	r2, [pc, #788]	; 1416c <test_print@@Base+0x7b0>
   13e54:	cmp	r0, r2
   13e58:	bls	13fc4 <test_print@@Base+0x608>
   13e5c:	ldr	r2, [pc, #780]	; 14170 <test_print@@Base+0x7b4>
   13e60:	cmp	r0, r2
   13e64:	bls	140c8 <test_print@@Base+0x70c>
   13e68:	ldr	ip, [pc, #772]	; 14174 <test_print@@Base+0x7b8>
   13e6c:	mov	r0, #100	; 0x64
   13e70:	ldr	r2, [pc, #768]	; 14178 <test_print@@Base+0x7bc>
   13e74:	umull	lr, ip, ip, r3
   13e78:	add	r2, pc, r2
   13e7c:	lsr	ip, ip, #5
   13e80:	mov	lr, #0
   13e84:	mul	r0, r0, ip
   13e88:	strb	lr, [r1, #10]
   13e8c:	sub	r3, r3, r0
   13e90:	add	lr, r1, #8
   13e94:	ldrb	r4, [r2, r3, lsl #1]
   13e98:	add	r2, r2, r3, lsl #1
   13e9c:	mov	r0, #10
   13ea0:	strb	r4, [r1, #8]
   13ea4:	ldrb	r2, [r2, #1]
   13ea8:	mov	r3, ip
   13eac:	strb	r2, [r1, #9]
   13eb0:	ldr	r4, [pc, #700]	; 14174 <test_print@@Base+0x7b8>
   13eb4:	mov	ip, #100	; 0x64
   13eb8:	ldr	r2, [pc, #700]	; 1417c <test_print@@Base+0x7c0>
   13ebc:	umull	r1, r4, r4, r3
   13ec0:	add	r2, pc, r2
   13ec4:	lsr	r4, r4, #5
   13ec8:	sub	r1, lr, #2
   13ecc:	mul	ip, ip, r4
   13ed0:	sub	ip, r3, ip
   13ed4:	mov	r3, r4
   13ed8:	ldrb	r4, [r2, ip, lsl #1]
   13edc:	add	r2, r2, ip, lsl #1
   13ee0:	strb	r4, [lr, #-2]
   13ee4:	ldrb	r2, [r2, #1]
   13ee8:	strb	r2, [lr, #-1]
   13eec:	ldr	lr, [pc, #640]	; 14174 <test_print@@Base+0x7b8>
   13ef0:	mov	ip, #100	; 0x64
   13ef4:	ldr	r2, [pc, #644]	; 14180 <test_print@@Base+0x7c4>
   13ef8:	umull	r4, lr, lr, r3
   13efc:	add	r2, pc, r2
   13f00:	lsr	lr, lr, #5
   13f04:	sub	r4, r1, #2
   13f08:	mul	ip, ip, lr
   13f0c:	sub	ip, r3, ip
   13f10:	mov	r3, lr
   13f14:	ldrb	lr, [r2, ip, lsl #1]
   13f18:	add	r2, r2, ip, lsl #1
   13f1c:	strb	lr, [r1, #-2]
   13f20:	ldrb	r2, [r2, #1]
   13f24:	strb	r2, [r1, #-1]
   13f28:	ldr	lr, [pc, #580]	; 14174 <test_print@@Base+0x7b8>
   13f2c:	mov	ip, #100	; 0x64
   13f30:	ldr	r2, [pc, #588]	; 14184 <test_print@@Base+0x7c8>
   13f34:	umull	r1, lr, lr, r3
   13f38:	add	r2, pc, r2
   13f3c:	lsr	lr, lr, #5
   13f40:	sub	r1, r4, #2
   13f44:	mul	ip, ip, lr
   13f48:	sub	ip, r3, ip
   13f4c:	mov	r3, lr
   13f50:	ldrb	lr, [r2, ip, lsl #1]
   13f54:	add	r2, r2, ip, lsl #1
   13f58:	strb	lr, [r4, #-2]
   13f5c:	ldrb	r2, [r2, #1]
   13f60:	strb	r2, [r4, #-1]
   13f64:	ldr	r2, [pc, #540]	; 14188 <test_print@@Base+0x7cc>
   13f68:	add	r2, pc, r2
   13f6c:	add	ip, r2, r3, lsl #1
   13f70:	ldrb	r3, [r2, r3, lsl #1]
   13f74:	strb	r3, [r1, #-2]
   13f78:	ldrb	r3, [ip, #1]
   13f7c:	strb	r3, [r1, #-1]
   13f80:	pop	{r4, pc}
   13f84:	cmp	r0, #99	; 0x63
   13f88:	bls	13fa8 <test_print@@Base+0x5ec>
   13f8c:	cmp	r0, #1000	; 0x3e8
   13f90:	bcc	140a0 <test_print@@Base+0x6e4>
   13f94:	mov	r2, #0
   13f98:	strb	r2, [r1, #4]
   13f9c:	add	r4, r1, #4
   13fa0:	mov	r0, #4
   13fa4:	b	13f28 <test_print@@Base+0x56c>
   13fa8:	cmp	r0, #9
   13fac:	bls	140b4 <test_print@@Base+0x6f8>
   13fb0:	mov	r2, #0
   13fb4:	strb	r2, [r1, #2]
   13fb8:	mov	r0, #2
   13fbc:	add	r1, r1, #2
   13fc0:	b	13f64 <test_print@@Base+0x5a8>
   13fc4:	ldr	r2, [pc, #448]	; 1418c <test_print@@Base+0x7d0>
   13fc8:	cmp	r0, r2
   13fcc:	bls	14120 <test_print@@Base+0x764>
   13fd0:	add	r4, r1, #7
   13fd4:	mov	r0, #7
   13fd8:	mov	r2, #0
   13fdc:	strb	r2, [r1, #7]
   13fe0:	ldr	lr, [pc, #396]	; 14174 <test_print@@Base+0x7b8>
   13fe4:	mov	ip, #100	; 0x64
   13fe8:	ldr	r2, [pc, #416]	; 14190 <test_print@@Base+0x7d4>
   13fec:	umull	r1, lr, lr, r3
   13ff0:	add	r2, pc, r2
   13ff4:	lsr	lr, lr, #5
   13ff8:	sub	r1, r4, #2
   13ffc:	mul	ip, ip, lr
   14000:	sub	ip, r3, ip
   14004:	mov	r3, lr
   14008:	ldrb	lr, [r2, ip, lsl #1]
   1400c:	add	r2, r2, ip, lsl #1
   14010:	strb	lr, [r4, #-2]
   14014:	ldrb	r2, [r2, #1]
   14018:	strb	r2, [r4, #-1]
   1401c:	ldr	lr, [pc, #336]	; 14174 <test_print@@Base+0x7b8>
   14020:	mov	ip, #100	; 0x64
   14024:	ldr	r2, [pc, #360]	; 14194 <test_print@@Base+0x7d8>
   14028:	umull	r4, lr, lr, r3
   1402c:	add	r2, pc, r2
   14030:	lsr	lr, lr, #5
   14034:	sub	r4, r1, #2
   14038:	mul	ip, ip, lr
   1403c:	sub	ip, r3, ip
   14040:	mov	r3, lr
   14044:	ldrb	lr, [r2, ip, lsl #1]
   14048:	add	r2, r2, ip, lsl #1
   1404c:	strb	lr, [r1, #-2]
   14050:	ldrb	r2, [r2, #1]
   14054:	strb	r2, [r1, #-1]
   14058:	ldr	lr, [pc, #276]	; 14174 <test_print@@Base+0x7b8>
   1405c:	mov	ip, #100	; 0x64
   14060:	ldr	r2, [pc, #304]	; 14198 <test_print@@Base+0x7dc>
   14064:	umull	r1, lr, lr, r3
   14068:	add	r2, pc, r2
   1406c:	lsr	lr, lr, #5
   14070:	sub	r1, r4, #2
   14074:	mul	ip, ip, lr
   14078:	sub	ip, r3, ip
   1407c:	mov	r3, lr
   14080:	ldrb	lr, [r2, ip, lsl #1]
   14084:	add	r2, r2, ip, lsl #1
   14088:	strb	lr, [r4, #-2]
   1408c:	ldrb	r2, [r2, #1]
   14090:	strb	r2, [r4, #-1]
   14094:	add	r3, r3, #48	; 0x30
   14098:	strb	r3, [r1, #-1]
   1409c:	pop	{r4, pc}
   140a0:	mov	r2, #0
   140a4:	strb	r2, [r1, #3]
   140a8:	add	r4, r1, #3
   140ac:	mov	r0, #3
   140b0:	b	14058 <test_print@@Base+0x69c>
   140b4:	mov	r2, #0
   140b8:	strb	r2, [r1, #1]
   140bc:	mov	r0, #1
   140c0:	add	r1, r1, #1
   140c4:	b	14094 <test_print@@Base+0x6d8>
   140c8:	ldr	r2, [pc, #204]	; 1419c <test_print@@Base+0x7e0>
   140cc:	cmp	r0, r2
   140d0:	bls	14154 <test_print@@Base+0x798>
   140d4:	ldr	ip, [pc, #152]	; 14174 <test_print@@Base+0x7b8>
   140d8:	mov	r0, #100	; 0x64
   140dc:	ldr	r2, [pc, #188]	; 141a0 <test_print@@Base+0x7e4>
   140e0:	umull	lr, ip, ip, r3
   140e4:	add	r2, pc, r2
   140e8:	lsr	ip, ip, #5
   140ec:	mov	lr, #0
   140f0:	mul	r0, r0, ip
   140f4:	strb	lr, [r1, #9]
   140f8:	sub	r3, r3, r0
   140fc:	add	r4, r1, #7
   14100:	ldrb	lr, [r2, r3, lsl #1]
   14104:	add	r2, r2, r3, lsl #1
   14108:	mov	r0, #9
   1410c:	strb	lr, [r1, #7]
   14110:	ldrb	r2, [r2, #1]
   14114:	mov	r3, ip
   14118:	strb	r2, [r1, #8]
   1411c:	b	13fe0 <test_print@@Base+0x624>
   14120:	ldr	r2, [pc, #124]	; 141a4 <test_print@@Base+0x7e8>
   14124:	cmp	r0, r2
   14128:	bls	14140 <test_print@@Base+0x784>
   1412c:	mov	r2, #0
   14130:	strb	r2, [r1, #6]
   14134:	mov	r0, #6
   14138:	add	r1, r1, #6
   1413c:	b	13eec <test_print@@Base+0x530>
   14140:	mov	r2, #0
   14144:	strb	r2, [r1, #5]
   14148:	mov	r0, #5
   1414c:	add	r1, r1, #5
   14150:	b	1401c <test_print@@Base+0x660>
   14154:	mov	r2, #0
   14158:	strb	r2, [r1, #8]
   1415c:	add	lr, r1, #8
   14160:	mov	r0, #8
   14164:	b	13eb0 <test_print@@Base+0x4f4>
   14168:	andeq	r2, r0, pc, lsl #14
   1416c:	addseq	r9, r8, pc, ror r6
   14170:	blcc	fe6c6974 <__bss_end__@@Base+0xfe6938d4>
   14174:	mvnpl	r8, pc, lsl r5
   14178:	andeq	sp, r0, r8, asr #26
   1417c:	andeq	sp, r0, r0, lsl #26
   14180:	andeq	sp, r0, r4, asr #25
   14184:	andeq	sp, r0, r8, lsl #25
   14188:	andeq	sp, r0, r8, asr ip
   1418c:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   14190:	ldrdeq	sp, [r0], -r0
   14194:	muleq	r0, r4, fp
   14198:	andeq	sp, r0, r8, asr fp
   1419c:	ldrbeq	lr, [r5, #255]!	; 0xff
   141a0:	ldrdeq	sp, [r0], -ip
   141a4:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   141a8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141ac:	mov	r4, r0
   141b0:	add	r9, pc, #992	; 0x3e0
   141b4:	ldrd	r8, [r9]
   141b8:	mov	r6, r2
   141bc:	cmp	r1, r9
   141c0:	cmpeq	r0, r8
   141c4:	bls	145f8 <test_print@@Base+0xc3c>
   141c8:	add	r3, pc, #976	; 0x3d0
   141cc:	ldrd	r2, [r3]
   141d0:	mov	r5, r1
   141d4:	cmp	r1, r3
   141d8:	cmpeq	r0, r2
   141dc:	bls	1441c <test_print@@Base+0xa60>
   141e0:	add	r3, pc, #960	; 0x3c0
   141e4:	ldrd	r2, [r3]
   141e8:	cmp	r1, r3
   141ec:	cmpeq	r0, r2
   141f0:	bls	14604 <test_print@@Base+0xc48>
   141f4:	add	r3, pc, #948	; 0x3b4
   141f8:	ldrd	r2, [r3]
   141fc:	cmp	r1, r3
   14200:	cmpeq	r0, r2
   14204:	bls	147d4 <test_print@@Base+0xe18>
   14208:	add	r3, pc, #936	; 0x3a8
   1420c:	ldrd	r2, [r3]
   14210:	cmp	r1, r3
   14214:	cmpeq	r0, r2
   14218:	bls	146bc <test_print@@Base+0xd00>
   1421c:	mov	r3, #0
   14220:	strb	r3, [r6, #20]
   14224:	mov	r2, #100	; 0x64
   14228:	mov	r3, #0
   1422c:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14230:	mov	r0, r4
   14234:	mov	r1, r5
   14238:	mov	r3, #0
   1423c:	ldr	r7, [pc, #908]	; 145d0 <test_print@@Base+0xc14>
   14240:	add	r7, pc, r7
   14244:	mov	r8, r2
   14248:	mov	r2, #100	; 0x64
   1424c:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14250:	ldrb	r2, [r7, r8, lsl #1]
   14254:	add	r3, r7, r8, lsl #1
   14258:	add	r8, r6, #18
   1425c:	strb	r2, [r6, #18]
   14260:	ldrb	r3, [r3, #1]
   14264:	mov	r7, #20
   14268:	strb	r3, [r6, #19]
   1426c:	mov	r4, r0
   14270:	mov	r5, r1
   14274:	mov	r0, r4
   14278:	mov	r1, r5
   1427c:	mov	r2, #100	; 0x64
   14280:	mov	r3, #0
   14284:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14288:	mov	r0, r4
   1428c:	mov	r1, r5
   14290:	mov	r3, #0
   14294:	ldr	r6, [pc, #824]	; 145d4 <test_print@@Base+0xc18>
   14298:	add	r6, pc, r6
   1429c:	mov	r9, r2
   142a0:	mov	r2, #100	; 0x64
   142a4:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   142a8:	ldrb	r3, [r6, r9, lsl #1]
   142ac:	add	r2, r6, r9, lsl #1
   142b0:	sub	r6, r8, #2
   142b4:	strb	r3, [r8, #-2]
   142b8:	ldrb	r3, [r2, #1]
   142bc:	strb	r3, [r8, #-1]
   142c0:	mov	r4, r0
   142c4:	mov	r5, r1
   142c8:	mov	r0, r4
   142cc:	mov	r1, r5
   142d0:	mov	r2, #100	; 0x64
   142d4:	mov	r3, #0
   142d8:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   142dc:	mov	r0, r4
   142e0:	mov	r1, r5
   142e4:	mov	r3, #0
   142e8:	ldr	r8, [pc, #744]	; 145d8 <test_print@@Base+0xc1c>
   142ec:	add	r8, pc, r8
   142f0:	mov	r9, r2
   142f4:	mov	r2, #100	; 0x64
   142f8:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   142fc:	ldrb	r3, [r8, r9, lsl #1]
   14300:	add	r2, r8, r9, lsl #1
   14304:	sub	r9, r6, #2
   14308:	strb	r3, [r6, #-2]
   1430c:	ldrb	r3, [r2, #1]
   14310:	strb	r3, [r6, #-1]
   14314:	mov	r4, r0
   14318:	mov	r5, r1
   1431c:	mov	r0, r4
   14320:	mov	r1, r5
   14324:	mov	r2, #100	; 0x64
   14328:	mov	r3, #0
   1432c:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14330:	mov	r0, r4
   14334:	mov	r1, r5
   14338:	mov	r3, #0
   1433c:	ldr	r8, [pc, #664]	; 145dc <test_print@@Base+0xc20>
   14340:	add	r8, pc, r8
   14344:	mov	r6, r2
   14348:	mov	r2, #100	; 0x64
   1434c:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14350:	ldrb	r3, [r8, r6, lsl #1]
   14354:	add	r2, r8, r6, lsl #1
   14358:	sub	r6, r9, #2
   1435c:	strb	r3, [r9, #-2]
   14360:	ldrb	r3, [r2, #1]
   14364:	strb	r3, [r9, #-1]
   14368:	mov	r4, r0
   1436c:	mov	r5, r1
   14370:	mov	r0, r4
   14374:	mov	r1, r5
   14378:	mov	r2, #100	; 0x64
   1437c:	mov	r3, #0
   14380:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14384:	mov	r0, r4
   14388:	mov	r1, r5
   1438c:	mov	r3, #0
   14390:	ldr	r8, [pc, #584]	; 145e0 <test_print@@Base+0xc24>
   14394:	sub	sl, r6, #2
   14398:	add	r8, pc, r8
   1439c:	mov	r9, r2
   143a0:	mov	r2, #100	; 0x64
   143a4:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   143a8:	ldrb	r3, [r8, r9, lsl #1]
   143ac:	add	r2, r8, r9, lsl #1
   143b0:	strb	r3, [r6, #-2]
   143b4:	ldrb	r3, [r2, #1]
   143b8:	strb	r3, [r6, #-1]
   143bc:	mov	r4, r0
   143c0:	mov	r5, r1
   143c4:	mov	r2, #100	; 0x64
   143c8:	mov	r3, #0
   143cc:	mov	r0, r4
   143d0:	mov	r1, r5
   143d4:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   143d8:	mov	r3, #0
   143dc:	mov	r0, r4
   143e0:	mov	r1, r5
   143e4:	ldr	fp, [pc, #504]	; 145e4 <test_print@@Base+0xc28>
   143e8:	add	fp, pc, fp
   143ec:	mov	r6, r2
   143f0:	mov	r2, #100	; 0x64
   143f4:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   143f8:	ldrb	r3, [fp, r6, lsl #1]
   143fc:	add	r2, fp, r6, lsl #1
   14400:	sub	r6, sl, #2
   14404:	strb	r3, [sl, #-2]
   14408:	ldrb	r3, [r2, #1]
   1440c:	strb	r3, [sl, #-1]
   14410:	mov	r8, r0
   14414:	mov	r9, r1
   14418:	b	144cc <test_print@@Base+0xb10>
   1441c:	add	r3, pc, #412	; 0x19c
   14420:	ldrd	r2, [r3]
   14424:	cmp	r1, r3
   14428:	cmpeq	r0, r2
   1442c:	bhi	14640 <test_print@@Base+0xc84>
   14430:	add	r3, pc, #400	; 0x190
   14434:	ldrd	r2, [r3]
   14438:	cmp	r1, r3
   1443c:	cmpeq	r0, r2
   14440:	bls	147fc <test_print@@Base+0xe40>
   14444:	add	r8, r6, #11
   14448:	mov	r7, #11
   1444c:	mov	r3, #0
   14450:	strb	r3, [r6, #11]
   14454:	mov	r2, #100	; 0x64
   14458:	mov	r3, #0
   1445c:	mov	r0, r4
   14460:	mov	r1, r5
   14464:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14468:	ldr	r9, [pc, #376]	; 145e8 <test_print@@Base+0xc2c>
   1446c:	mov	r0, r4
   14470:	add	r9, pc, r9
   14474:	sub	r6, r8, #3
   14478:	ldrb	r1, [r9, r2, lsl #1]
   1447c:	add	r3, r9, r2, lsl #1
   14480:	mov	r2, #100	; 0x64
   14484:	strb	r1, [r8, #-2]
   14488:	ldrb	r1, [r3, #1]
   1448c:	mov	r3, #0
   14490:	strb	r1, [r8, #-1]
   14494:	mov	r1, r5
   14498:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   1449c:	mov	r2, #10
   144a0:	mov	r3, #0
   144a4:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   144a8:	mov	r0, r4
   144ac:	mov	r1, r5
   144b0:	mov	r3, #0
   144b4:	add	r2, r2, #48	; 0x30
   144b8:	strb	r2, [r8, #-3]
   144bc:	mov	r2, #1000	; 0x3e8
   144c0:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   144c4:	mov	r8, r0
   144c8:	mov	r9, r1
   144cc:	mov	r0, r8
   144d0:	mov	r1, r9
   144d4:	mov	r2, #100	; 0x64
   144d8:	mov	r3, #0
   144dc:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   144e0:	ldr	r4, [pc, #260]	; 145ec <test_print@@Base+0xc30>
   144e4:	mov	r0, r8
   144e8:	add	r4, pc, r4
   144ec:	ldrb	r3, [r4, r2, lsl #1]
   144f0:	add	r2, r4, r2, lsl #1
   144f4:	strb	r3, [r6, #-2]
   144f8:	ldrb	r1, [r2, #1]
   144fc:	mov	r3, #0
   14500:	mov	r2, #100	; 0x64
   14504:	strb	r1, [r6, #-1]
   14508:	mov	r1, r9
   1450c:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14510:	mov	r2, #100	; 0x64
   14514:	mov	r3, #0
   14518:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   1451c:	mov	r0, r8
   14520:	ldrb	r3, [r4, r2, lsl #1]
   14524:	add	r2, r4, r2, lsl #1
   14528:	strb	r3, [r6, #-4]
   1452c:	ldrb	r1, [r2, #1]
   14530:	mov	r3, #0
   14534:	ldr	r2, [pc, #180]	; 145f0 <test_print@@Base+0xc34>
   14538:	strb	r1, [r6, #-3]
   1453c:	mov	r1, r9
   14540:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14544:	mov	r2, #100	; 0x64
   14548:	mov	r3, #0
   1454c:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14550:	mov	r0, r8
   14554:	mov	r1, r9
   14558:	mov	r3, #0
   1455c:	ldrb	lr, [r4, r2, lsl #1]
   14560:	add	ip, r4, r2, lsl #1
   14564:	ldr	r2, [pc, #136]	; 145f4 <test_print@@Base+0xc38>
   14568:	strb	lr, [r6, #-6]
   1456c:	ldrb	ip, [ip, #1]
   14570:	strb	ip, [r6, #-5]
   14574:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14578:	ldrb	r3, [r4, r0, lsl #1]
   1457c:	add	r4, r4, r0, lsl #1
   14580:	mov	r0, r7
   14584:	strb	r3, [r6, #-8]
   14588:	ldrb	r3, [r4, #1]
   1458c:	strb	r3, [r6, #-7]
   14590:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14594:	nop			; (mov r0, r0)
   14598:	blcc	fe6c6d9c <__bss_end__@@Base+0xfe693cfc>
   1459c:	andeq	r0, r0, r0
   145a0:	mrcmi	15, 3, r9, cr2, cr15, {7}
   145a4:	andeq	r0, r0, r8, lsl r9
   145a8:	svcvs	0x00c0ffff
   145ac:	strdeq	r8, [r3], -r2	; <UNPREDICTABLE>
   145b0:			; <UNDEFINED> instruction: 0xa763ffff
   145b4:	stcleq	6, cr11, [r0, #716]!	; 0x2cc
   145b8:	stmibhi	r7!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
   145bc:	bhi	ff1dd1d4 <__bss_end__@@Base+0xff1aa134>
   145c0:	ldmdami	r6!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}^
   145c4:	andeq	r0, r0, r7, lsl r0
   145c8:	strpl	lr, [fp], #-1023	; 0xfffffc01
   145cc:	andeq	r0, r0, r2
   145d0:	andeq	sp, r0, r0, lsl #19
   145d4:	andeq	sp, r0, r8, lsr #18
   145d8:	ldrdeq	sp, [r0], -r4
   145dc:	andeq	sp, r0, r0, lsl #17
   145e0:	andeq	sp, r0, r8, lsr #16
   145e4:	ldrdeq	sp, [r0], -r8
   145e8:	andeq	sp, r0, r0, asr r7
   145ec:	ldrdeq	sp, [r0], -r8
   145f0:	andeq	r2, r0, r0, lsl r7
   145f4:	andeq	r4, pc, r0, asr #4
   145f8:	mov	r1, r2
   145fc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14600:	b	13e3c <test_print@@Base+0x480>
   14604:	add	r3, pc, #580	; 0x244
   14608:	ldrd	r2, [r3]
   1460c:	cmp	r1, r3
   14610:	cmpeq	r0, r2
   14614:	bhi	147c0 <test_print@@Base+0xe04>
   14618:	add	r3, pc, #568	; 0x238
   1461c:	ldrd	r2, [r3]
   14620:	cmp	r1, r3
   14624:	cmpeq	r0, r2
   14628:	bls	14838 <test_print@@Base+0xe7c>
   1462c:	mov	r3, #0
   14630:	strb	r3, [r6, #15]
   14634:	mov	r7, #15
   14638:	add	r6, r6, #15
   1463c:	b	14768 <test_print@@Base+0xdac>
   14640:	add	r3, pc, #536	; 0x218
   14644:	ldrd	r2, [r3]
   14648:	cmp	r1, r3
   1464c:	cmpeq	r0, r2
   14650:	bls	14810 <test_print@@Base+0xe54>
   14654:	add	r9, r6, #13
   14658:	mov	r7, #13
   1465c:	mov	r3, #0
   14660:	strb	r3, [r6, #13]
   14664:	mov	r0, r4
   14668:	mov	r1, r5
   1466c:	mov	r2, #100	; 0x64
   14670:	mov	r3, #0
   14674:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14678:	mov	r0, r4
   1467c:	mov	r1, r5
   14680:	mov	r3, #0
   14684:	ldr	r8, [pc, #484]	; 14870 <test_print@@Base+0xeb4>
   14688:	add	r8, pc, r8
   1468c:	mov	r6, r2
   14690:	mov	r2, #100	; 0x64
   14694:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14698:	ldrb	r3, [r8, r6, lsl #1]
   1469c:	add	r2, r8, r6, lsl #1
   146a0:	sub	r8, r9, #2
   146a4:	strb	r3, [r9, #-2]
   146a8:	ldrb	r3, [r2, #1]
   146ac:	strb	r3, [r9, #-1]
   146b0:	mov	r4, r0
   146b4:	mov	r5, r1
   146b8:	b	14454 <test_print@@Base+0xa98>
   146bc:	mov	r3, #0
   146c0:	strb	r3, [r6, #19]
   146c4:	mov	r2, #100	; 0x64
   146c8:	mov	r3, #0
   146cc:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   146d0:	mov	r0, r4
   146d4:	mov	r1, r5
   146d8:	mov	r3, #0
   146dc:	ldr	r7, [pc, #400]	; 14874 <test_print@@Base+0xeb8>
   146e0:	add	r7, pc, r7
   146e4:	mov	r8, r2
   146e8:	mov	r2, #100	; 0x64
   146ec:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   146f0:	ldrb	r2, [r7, r8, lsl #1]
   146f4:	add	r3, r7, r8, lsl #1
   146f8:	add	r8, r6, #17
   146fc:	strb	r2, [r6, #17]
   14700:	ldrb	r3, [r3, #1]
   14704:	mov	r7, #19
   14708:	strb	r3, [r6, #18]
   1470c:	mov	r4, r0
   14710:	mov	r5, r1
   14714:	mov	r0, r4
   14718:	mov	r1, r5
   1471c:	mov	r2, #100	; 0x64
   14720:	mov	r3, #0
   14724:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14728:	mov	r0, r4
   1472c:	mov	r1, r5
   14730:	mov	r3, #0
   14734:	ldr	r6, [pc, #316]	; 14878 <test_print@@Base+0xebc>
   14738:	add	r6, pc, r6
   1473c:	mov	r9, r2
   14740:	mov	r2, #100	; 0x64
   14744:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   14748:	ldrb	r3, [r6, r9, lsl #1]
   1474c:	add	r2, r6, r9, lsl #1
   14750:	sub	r6, r8, #2
   14754:	strb	r3, [r8, #-2]
   14758:	ldrb	r3, [r2, #1]
   1475c:	strb	r3, [r8, #-1]
   14760:	mov	r4, r0
   14764:	mov	r5, r1
   14768:	mov	r0, r4
   1476c:	mov	r1, r5
   14770:	mov	r2, #100	; 0x64
   14774:	mov	r3, #0
   14778:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   1477c:	mov	r0, r4
   14780:	mov	r1, r5
   14784:	mov	r3, #0
   14788:	ldr	r8, [pc, #236]	; 1487c <test_print@@Base+0xec0>
   1478c:	add	r8, pc, r8
   14790:	mov	r9, r2
   14794:	mov	r2, #100	; 0x64
   14798:	bl	21254 <flatcc_json_printer_clear@@Base+0x244>
   1479c:	ldrb	r3, [r8, r9, lsl #1]
   147a0:	add	r2, r8, r9, lsl #1
   147a4:	sub	r9, r6, #2
   147a8:	strb	r3, [r6, #-2]
   147ac:	ldrb	r3, [r2, #1]
   147b0:	strb	r3, [r6, #-1]
   147b4:	mov	r4, r0
   147b8:	mov	r5, r1
   147bc:	b	14664 <test_print@@Base+0xca8>
   147c0:	mov	r3, #0
   147c4:	strb	r3, [r6, #16]
   147c8:	mov	r7, #16
   147cc:	add	r6, r6, #16
   147d0:	b	142c8 <test_print@@Base+0x90c>
   147d4:	add	r3, pc, #140	; 0x8c
   147d8:	ldrd	r2, [r3]
   147dc:	cmp	r1, r3
   147e0:	cmpeq	r0, r2
   147e4:	bls	14824 <test_print@@Base+0xe68>
   147e8:	mov	r3, #0
   147ec:	strb	r3, [r6, #18]
   147f0:	add	r8, r6, #18
   147f4:	mov	r7, #18
   147f8:	b	14274 <test_print@@Base+0x8b8>
   147fc:	mov	r3, #0
   14800:	strb	r3, [r6, #10]
   14804:	add	sl, r6, #10
   14808:	mov	r7, #10
   1480c:	b	143c4 <test_print@@Base+0xa08>
   14810:	mov	r3, #0
   14814:	strb	r3, [r6, #12]
   14818:	mov	r7, #12
   1481c:	add	r6, r6, #12
   14820:	b	14370 <test_print@@Base+0x9b4>
   14824:	mov	r3, #0
   14828:	strb	r3, [r6, #17]
   1482c:	add	r8, r6, #17
   14830:	mov	r7, #17
   14834:	b	14714 <test_print@@Base+0xd58>
   14838:	mov	r3, #0
   1483c:	strb	r3, [r6, #14]
   14840:	add	r9, r6, #14
   14844:	mov	r7, #14
   14848:	b	1431c <test_print@@Base+0x960>
   1484c:	nop			; (mov r0, r0)
   14850:	strbge	r7, [r6], #4095	; 0xfff
   14854:	andeq	r8, r3, lr, ror sp
   14858:	ldrshtne	r3, [sl], #-255	; 0xffffff01
   1485c:	strdeq	r5, [r0], -r3
   14860:	strtle	r0, [r5], #4095	; 0xfff
   14864:	andeq	r0, r0, r8, ror #1
   14868:	stcpl	15, cr15, [r9, #1020]	; 0x3fc
   1486c:	smceq	13400	; 0x3458
   14870:	andeq	sp, r0, r8, lsr r5
   14874:	andeq	sp, r0, r0, ror #9
   14878:	andeq	sp, r0, r8, lsl #9
   1487c:	andeq	sp, r0, r4, lsr r4
   14880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14884:	sub	sp, sp, #20
   14888:	mov	r8, r2
   1488c:	mov	r9, r3
   14890:	strd	r2, [sp, #8]
   14894:	ldrd	r2, [sp, #80]	; 0x50
   14898:	ldrd	r6, [sp, #64]	; 0x40
   1489c:	ldrd	sl, [sp, #72]	; 0x48
   148a0:	subs	r8, r8, r2
   148a4:	sbc	r9, r9, r3
   148a8:	cmp	r9, r7
   148ac:	cmpeq	r8, r6
   148b0:	bls	14a28 <test_print@@Base+0x106c>
   148b4:	ldrd	r2, [sp, #56]	; 0x38
   148b8:	subs	r2, r2, r6
   148bc:	sbc	r3, r3, r7
   148c0:	cmp	fp, r3
   148c4:	cmpeq	sl, r2
   148c8:	bhi	14a34 <test_print@@Base+0x1078>
   148cc:	ldrd	r4, [sp, #56]	; 0x38
   148d0:	sub	ip, r1, #1
   148d4:	add	ip, r0, ip
   148d8:	subs	r4, r4, sl
   148dc:	sbc	r5, r5, fp
   148e0:	subs	r4, r4, r6
   148e4:	sbc	r5, r5, r7
   148e8:	adds	r2, sl, r6
   148ec:	adc	r3, fp, r7
   148f0:	cmp	r9, r3
   148f4:	cmpeq	r8, r2
   148f8:	bhi	149b8 <test_print@@Base+0xffc>
   148fc:	subs	r4, r8, r6
   14900:	sbc	r5, r9, r7
   14904:	strd	r4, [sp]
   14908:	subs	r4, r2, r8
   1490c:	sbc	r5, r3, r9
   14910:	ldrd	r8, [sp]
   14914:	cmp	r9, r5
   14918:	cmpeq	r8, r4
   1491c:	bcc	14a28 <test_print@@Base+0x106c>
   14920:	sub	r1, r1, #1
   14924:	ldrb	ip, [r0, r1]
   14928:	sub	ip, ip, #1
   1492c:	strb	ip, [r0, r1]
   14930:	ldrd	r0, [sp, #8]
   14934:	ldrd	r4, [sp, #80]	; 0x50
   14938:	adds	r0, r0, r4
   1493c:	adc	r1, r1, r5
   14940:	cmp	r1, r3
   14944:	cmpeq	r0, r2
   14948:	bls	14994 <test_print@@Base+0xfd8>
   1494c:	ldrd	r4, [sp, #56]	; 0x38
   14950:	subs	r4, r4, r2
   14954:	sbc	r5, r5, r3
   14958:	cmp	fp, r5
   1495c:	cmpeq	sl, r4
   14960:	bhi	14994 <test_print@@Base+0xfd8>
   14964:	adds	sl, sl, r2
   14968:	adc	fp, fp, r3
   1496c:	cmp	r1, fp
   14970:	cmpeq	r0, sl
   14974:	bhi	149ac <test_print@@Base+0xff0>
   14978:	subs	sl, sl, r0
   1497c:	sbc	fp, fp, r1
   14980:	subs	r0, r0, r2
   14984:	sbc	r1, r1, r3
   14988:	cmp	r1, fp
   1498c:	cmpeq	r0, sl
   14990:	bhi	149ac <test_print@@Base+0xff0>
   14994:	ldrd	r0, [sp, #80]	; 0x50
   14998:	adds	r0, r0, r0
   1499c:	adc	r1, r1, r1
   149a0:	cmp	r1, r3
   149a4:	cmpeq	r0, r2
   149a8:	bls	149ec <test_print@@Base+0x1030>
   149ac:	mov	r0, #0
   149b0:	add	sp, sp, #20
   149b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149b8:	ldrb	lr, [ip]
   149bc:	subs	r6, r4, sl
   149c0:	sbc	r7, r5, fp
   149c4:	cmp	fp, r5
   149c8:	cmpeq	sl, r4
   149cc:	sub	lr, lr, #1
   149d0:	mov	r4, r6
   149d4:	mov	r5, r7
   149d8:	strb	lr, [ip]
   149dc:	mov	r6, r2
   149e0:	mov	r7, r3
   149e4:	bls	148e8 <test_print@@Base+0xf2c>
   149e8:	b	14994 <test_print@@Base+0xfd8>
   149ec:	ldr	ip, [sp, #84]	; 0x54
   149f0:	ldrd	r4, [sp, #56]	; 0x38
   149f4:	lsl	r1, ip, #2
   149f8:	ldr	ip, [sp, #80]	; 0x50
   149fc:	lsl	r0, ip, #2
   14a00:	subs	r4, r4, r0
   14a04:	orr	r1, r1, ip, lsr #30
   14a08:	sbc	r5, r5, r1
   14a0c:	cmp	r5, r3
   14a10:	cmpeq	r4, r2
   14a14:	mov	r0, r4
   14a18:	movcs	r0, #1
   14a1c:	bcc	149ac <test_print@@Base+0xff0>
   14a20:	add	sp, sp, #20
   14a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a28:	mov	r2, r6
   14a2c:	mov	r3, r7
   14a30:	b	14930 <test_print@@Base+0xf74>
   14a34:	mov	r2, r6
   14a38:	mov	r3, r7
   14a3c:	b	14994 <test_print@@Base+0xfd8>
   14a40:	cmp	r0, #0
   14a44:	push	{r4, r5, lr}
   14a48:	addlt	r2, r1, #1
   14a4c:	movge	r2, r1
   14a50:	ldr	r5, [pc, #116]	; 14acc <test_print@@Base+0x1110>
   14a54:	rsblt	r0, r0, #0
   14a58:	mov	lr, r2
   14a5c:	mvn	r4, #9
   14a60:	movlt	r3, #45	; 0x2d
   14a64:	strblt	r3, [r1]
   14a68:	smull	r3, ip, r5, r0
   14a6c:	asr	r3, r0, #31
   14a70:	rsb	r3, r3, ip, asr #2
   14a74:	mla	ip, r4, r3, r0
   14a78:	subs	r0, r3, #0
   14a7c:	add	r3, ip, #48	; 0x30
   14a80:	strb	r3, [lr], #1
   14a84:	bne	14a68 <test_print@@Base+0x10ac>
   14a88:	sub	ip, lr, r2
   14a8c:	strb	r0, [lr]
   14a90:	add	ip, ip, ip, lsr #31
   14a94:	asr	ip, ip, #1
   14a98:	cmp	ip, #0
   14a9c:	ble	14ac4 <test_print@@Base+0x1108>
   14aa0:	mov	r3, r2
   14aa4:	add	ip, r2, ip
   14aa8:	mov	r2, lr
   14aac:	ldrb	r4, [r2, #-1]
   14ab0:	ldrb	r0, [r3]
   14ab4:	strb	r4, [r3], #1
   14ab8:	cmp	ip, r3
   14abc:	strb	r0, [r2, #-1]!
   14ac0:	bne	14aac <test_print@@Base+0x10f0>
   14ac4:	sub	r0, lr, r1
   14ac8:	pop	{r4, r5, pc}
   14acc:	strbtvs	r6, [r6], -r7, ror #12
   14ad0:	ldr	r3, [r0, #20]
   14ad4:	ldr	r2, [r0, #16]
   14ad8:	cmp	r3, r2
   14adc:	bcc	14b0c <test_print@@Base+0x1150>
   14ae0:	ldr	r2, [r0, #36]	; 0x24
   14ae4:	mov	r1, r3
   14ae8:	cmp	r2, #0
   14aec:	moveq	r2, #3
   14af0:	ldr	r3, [r0]
   14af4:	streq	r2, [r0, #36]	; 0x24
   14af8:	ldr	r2, [r0, #12]
   14afc:	sub	r1, r1, r3
   14b00:	add	r2, r2, r1
   14b04:	str	r3, [r0, #20]
   14b08:	str	r2, [r0, #12]
   14b0c:	mov	r2, #0
   14b10:	strb	r2, [r3]
   14b14:	bx	lr
   14b18:	push	{r4, r5, r6, r7, r8, lr}
   14b1c:	mov	r4, r0
   14b20:	ldr	r3, [r0, #20]
   14b24:	ldr	r5, [r0, #16]
   14b28:	mov	r7, r1
   14b2c:	cmp	r3, r5
   14b30:	mov	r6, r2
   14b34:	bcs	14bb0 <test_print@@Base+0x11f4>
   14b38:	sub	r5, r5, r3
   14b3c:	cmp	r5, r6
   14b40:	bcs	14b90 <test_print@@Base+0x11d4>
   14b44:	mov	r8, #0
   14b48:	mov	r2, r5
   14b4c:	mov	r1, r7
   14b50:	mov	r0, r3
   14b54:	bl	12444 <memcpy@plt>
   14b58:	ldr	r3, [r4, #20]
   14b5c:	ldr	r2, [r4, #44]	; 0x2c
   14b60:	add	r3, r3, r5
   14b64:	str	r3, [r4, #20]
   14b68:	mov	r1, r8
   14b6c:	mov	r0, r4
   14b70:	blx	r2
   14b74:	ldr	r3, [r4, #20]
   14b78:	ldr	r2, [r4, #16]
   14b7c:	sub	r6, r6, r5
   14b80:	add	r7, r7, r5
   14b84:	sub	r5, r2, r3
   14b88:	cmp	r6, r5
   14b8c:	bhi	14b48 <test_print@@Base+0x118c>
   14b90:	mov	r0, r3
   14b94:	mov	r2, r6
   14b98:	mov	r1, r7
   14b9c:	bl	12444 <memcpy@plt>
   14ba0:	ldr	r3, [r4, #20]
   14ba4:	add	r6, r3, r6
   14ba8:	str	r6, [r4, #20]
   14bac:	pop	{r4, r5, r6, r7, r8, pc}
   14bb0:	ldr	r3, [r0, #44]	; 0x2c
   14bb4:	mov	r1, #0
   14bb8:	blx	r3
   14bbc:	ldr	r5, [r4, #16]
   14bc0:	ldr	r3, [r4, #20]
   14bc4:	b	14b38 <test_print@@Base+0x117c>
   14bc8:	push	{r4, r5, r6, r7, r8, lr}
   14bcc:	mov	r4, r0
   14bd0:	ldr	r3, [r0, #20]
   14bd4:	ldr	r5, [r0, #16]
   14bd8:	mov	r6, r1
   14bdc:	cmp	r3, r5
   14be0:	bcs	14c5c <test_print@@Base+0x12a0>
   14be4:	sub	r5, r5, r3
   14be8:	cmp	r5, r6
   14bec:	bcs	14c3c <test_print@@Base+0x1280>
   14bf0:	mov	r8, #32
   14bf4:	mov	r7, #0
   14bf8:	mov	r2, r5
   14bfc:	mov	r0, r3
   14c00:	mov	r1, r8
   14c04:	bl	124e0 <memset@plt>
   14c08:	ldr	r3, [r4, #20]
   14c0c:	ldr	r2, [r4, #44]	; 0x2c
   14c10:	add	r3, r3, r5
   14c14:	str	r3, [r4, #20]
   14c18:	mov	r1, r7
   14c1c:	mov	r0, r4
   14c20:	blx	r2
   14c24:	ldr	r3, [r4, #20]
   14c28:	ldr	r2, [r4, #16]
   14c2c:	sub	r6, r6, r5
   14c30:	sub	r5, r2, r3
   14c34:	cmp	r6, r5
   14c38:	bhi	14bf8 <test_print@@Base+0x123c>
   14c3c:	mov	r0, r3
   14c40:	mov	r2, r6
   14c44:	mov	r1, #32
   14c48:	bl	124e0 <memset@plt>
   14c4c:	ldr	r3, [r4, #20]
   14c50:	add	r6, r3, r6
   14c54:	str	r6, [r4, #20]
   14c58:	pop	{r4, r5, r6, r7, r8, pc}
   14c5c:	ldr	r3, [r0, #44]	; 0x2c
   14c60:	mov	r1, #0
   14c64:	blx	r3
   14c68:	ldr	r5, [r4, #16]
   14c6c:	ldr	r3, [r4, #20]
   14c70:	b	14be4 <test_print@@Base+0x1228>
   14c74:	push	{r4, r5, r6, lr}
   14c78:	ldrb	r1, [r0, #25]
   14c7c:	ldr	r5, [r0, #32]
   14c80:	ldr	r2, [r0, #20]
   14c84:	ldr	ip, [r0, #16]
   14c88:	mul	r5, r5, r1
   14c8c:	add	r1, r2, r5
   14c90:	cmp	ip, r1
   14c94:	bcc	14cbc <test_print@@Base+0x1300>
   14c98:	mov	r4, r0
   14c9c:	mov	r1, #32
   14ca0:	mov	r0, r2
   14ca4:	mov	r2, r5
   14ca8:	bl	124e0 <memset@plt>
   14cac:	ldr	r3, [r4, #20]
   14cb0:	add	r5, r3, r5
   14cb4:	str	r5, [r4, #20]
   14cb8:	pop	{r4, r5, r6, pc}
   14cbc:	mov	r1, r5
   14cc0:	pop	{r4, r5, r6, lr}
   14cc4:	b	14bc8 <test_print@@Base+0x120c>
   14cc8:	cmp	r1, #0
   14ccc:	push	{r4, r5, r6, lr}
   14cd0:	mov	r4, r0
   14cd4:	ldr	ip, [r0, #20]
   14cd8:	bne	14ce8 <test_print@@Base+0x132c>
   14cdc:	ldr	r5, [r0, #16]
   14ce0:	cmp	ip, r5
   14ce4:	bcs	14d20 <test_print@@Base+0x1364>
   14ce8:	ldr	r0, [r4]
   14cec:	ldr	r3, [r4, #40]	; 0x28
   14cf0:	sub	r5, ip, r0
   14cf4:	mov	r1, r5
   14cf8:	mov	r2, #1
   14cfc:	bl	12480 <fwrite@plt>
   14d00:	ldr	ip, [r4, #12]
   14d04:	ldr	r3, [r4]
   14d08:	add	ip, ip, r5
   14d0c:	str	ip, [r4, #12]
   14d10:	str	r3, [r4, #20]
   14d14:	mov	r2, #0
   14d18:	strb	r2, [r3]
   14d1c:	pop	{r4, r5, r6, pc}
   14d20:	ldr	r3, [r0, #40]	; 0x28
   14d24:	ldr	r1, [r0, #8]
   14d28:	mov	r2, #1
   14d2c:	ldr	r0, [r0]
   14d30:	sub	r5, ip, r5
   14d34:	bl	12480 <fwrite@plt>
   14d38:	ldr	r0, [r4]
   14d3c:	ldr	r1, [r4, #8]
   14d40:	mov	r2, r5
   14d44:	add	r1, r0, r1
   14d48:	bl	12444 <memcpy@plt>
   14d4c:	ldr	r2, [r4, #12]
   14d50:	ldr	r3, [r4]
   14d54:	ldr	r1, [r4, #8]
   14d58:	add	r3, r3, r5
   14d5c:	add	r2, r2, r1
   14d60:	str	r3, [r4, #20]
   14d64:	str	r2, [r4, #12]
   14d68:	b	14d14 <test_print@@Base+0x1358>
   14d6c:	ldr	r3, [r0, #20]
   14d70:	mov	r2, #0
   14d74:	push	{r4, r5, r6, lr}
   14d78:	ldr	r5, [r0]
   14d7c:	strb	r2, [r3]
   14d80:	ldr	r1, [r0, #20]
   14d84:	ldr	r2, [r0, #16]
   14d88:	cmp	r1, r2
   14d8c:	popcc	{r4, r5, r6, pc}
   14d90:	mov	r4, r0
   14d94:	ldm	r0, {r0, r1}
   14d98:	sub	r5, r3, r5
   14d9c:	lsl	r1, r1, #1
   14da0:	bl	12474 <realloc@plt>
   14da4:	cmp	r0, #0
   14da8:	beq	14ddc <test_print@@Base+0x1420>
   14dac:	ldr	r3, [r4, #4]
   14db0:	add	r2, r0, r5
   14db4:	str	r2, [r4, #20]
   14db8:	lsl	r3, r3, #1
   14dbc:	sub	r1, r3, #64	; 0x40
   14dc0:	add	ip, r0, r1
   14dc4:	stm	r4, {r0, r3}
   14dc8:	str	ip, [r4, #16]
   14dcc:	str	r1, [r4, #8]
   14dd0:	mov	r3, #0
   14dd4:	strb	r3, [r2]
   14dd8:	pop	{r4, r5, r6, pc}
   14ddc:	ldr	r3, [r4, #36]	; 0x24
   14de0:	ldr	r2, [r4]
   14de4:	cmp	r3, #0
   14de8:	moveq	r3, #3
   14dec:	streq	r3, [r4, #36]	; 0x24
   14df0:	ldr	r3, [r4, #12]
   14df4:	str	r2, [r4, #20]
   14df8:	add	r3, r3, r5
   14dfc:	str	r3, [r4, #12]
   14e00:	b	14dd0 <test_print@@Base+0x1414>
   14e04:	cmp	r0, #99	; 0x63
   14e08:	mov	r3, r0
   14e0c:	bls	14e64 <test_print@@Base+0x14a8>
   14e10:	ldr	r2, [pc, #156]	; 14eb4 <test_print@@Base+0x14f8>
   14e14:	push	{lr}		; (str lr, [sp, #-4]!)
   14e18:	mov	r0, #100	; 0x64
   14e1c:	umull	lr, r2, r2, r3
   14e20:	ldr	ip, [pc, #144]	; 14eb8 <test_print@@Base+0x14fc>
   14e24:	mov	lr, #0
   14e28:	lsr	r2, r2, #5
   14e2c:	add	ip, pc, ip
   14e30:	mul	r0, r0, r2
   14e34:	strb	lr, [r1, #3]
   14e38:	sub	r3, r3, r0
   14e3c:	add	r2, r2, #48	; 0x30
   14e40:	uxtb	r3, r3
   14e44:	mov	r0, #3
   14e48:	ldrb	lr, [ip, r3, lsl #1]
   14e4c:	add	r3, ip, r3, lsl #1
   14e50:	strb	lr, [r1, #1]
   14e54:	ldrb	r3, [r3, #1]
   14e58:	strb	r2, [r1]
   14e5c:	strb	r3, [r1, #2]
   14e60:	pop	{pc}		; (ldr pc, [sp], #4)
   14e64:	cmp	r0, #9
   14e68:	bls	14e9c <test_print@@Base+0x14e0>
   14e6c:	ldr	r2, [pc, #72]	; 14ebc <test_print@@Base+0x1500>
   14e70:	sxth	r3, r0
   14e74:	add	r2, pc, r2
   14e78:	mov	r0, #0
   14e7c:	strb	r0, [r1, #2]
   14e80:	ldrb	ip, [r2, r3, lsl #1]
   14e84:	add	r3, r2, r3, lsl #1
   14e88:	mov	r0, #2
   14e8c:	strb	ip, [r1]
   14e90:	ldrb	r3, [r3, #1]
   14e94:	strb	r3, [r1, #1]
   14e98:	bx	lr
   14e9c:	add	r3, r3, #48	; 0x30
   14ea0:	mov	r2, #0
   14ea4:	mov	r0, #1
   14ea8:	strb	r3, [r1]
   14eac:	strb	r2, [r1, #1]
   14eb0:	bx	lr
   14eb4:	mvnpl	r8, pc, lsl r5
   14eb8:	muleq	r0, r4, sp
   14ebc:	andeq	ip, r0, ip, asr #26
   14ec0:	ldr	r3, [pc, #32]	; 14ee8 <test_print@@Base+0x152c>
   14ec4:	ldr	r1, [pc, #32]	; 14eec <test_print@@Base+0x1530>
   14ec8:	ldr	r0, [pc, #32]	; 14ef0 <test_print@@Base+0x1534>
   14ecc:	add	r3, pc, r3
   14ed0:	push	{r4, lr}
   14ed4:	mov	r2, #239	; 0xef
   14ed8:	add	r3, r3, #228	; 0xe4
   14edc:	add	r1, pc, r1
   14ee0:	add	r0, pc, r0
   14ee4:	bl	12528 <__assert_fail@plt>
   14ee8:	strdeq	ip, [r0], -r4
   14eec:	andeq	sp, r0, r4, lsr #8
   14ef0:	muleq	r0, ip, r4
   14ef4:	cmp	r0, #0
   14ef8:	bne	14f24 <test_print@@Base+0x1568>
   14efc:	ldr	r3, [pc, #68]	; 14f48 <test_print@@Base+0x158c>
   14f00:	mov	r2, #5
   14f04:	add	r3, pc, r3
   14f08:	add	ip, r3, #256	; 0x100
   14f0c:	ldr	r0, [r3, #256]	; 0x100
   14f10:	ldrh	r3, [ip, #4]
   14f14:	str	r0, [r1]
   14f18:	mov	r0, r2
   14f1c:	strh	r3, [r1, #4]
   14f20:	bx	lr
   14f24:	ldr	r3, [pc, #32]	; 14f4c <test_print@@Base+0x1590>
   14f28:	mov	r2, #4
   14f2c:	add	r3, pc, r3
   14f30:	ldrb	ip, [r3, #252]	; 0xfc
   14f34:	ldr	r0, [r3, #248]	; 0xf8
   14f38:	strb	ip, [r1, #4]
   14f3c:	str	r0, [r1]
   14f40:	mov	r0, r2
   14f44:	bx	lr
   14f48:			; <UNDEFINED> instruction: 0x0000ccbc
   14f4c:	muleq	r0, r4, ip
   14f50:	push	{r4, r5, lr}
   14f54:	sub	sp, sp, #12
   14f58:	cmp	r1, #0
   14f5c:	cmpne	r2, #7
   14f60:	mov	r2, #0
   14f64:	mov	r5, r0
   14f68:	str	r2, [sp, #4]
   14f6c:	bls	14fac <test_print@@Base+0x15f0>
   14f70:	cmp	r3, #0
   14f74:	beq	14fa0 <test_print@@Base+0x15e4>
   14f78:	mov	r2, #4
   14f7c:	mov	r4, r1
   14f80:	add	r0, sp, r2
   14f84:	mov	r1, r3
   14f88:	bl	124ec <strncpy@plt>
   14f8c:	ldr	r2, [r4, #4]
   14f90:	ldr	r3, [sp, #4]
   14f94:	cmp	r2, r3
   14f98:	cmpne	r3, #0
   14f9c:	bne	14fe0 <test_print@@Base+0x1624>
   14fa0:	mov	r0, #1
   14fa4:	add	sp, sp, #12
   14fa8:	pop	{r4, r5, pc}
   14fac:	ldr	r3, [r0, #36]	; 0x24
   14fb0:	ldr	r1, [pc, #92]	; 15014 <test_print@@Base+0x1658>
   14fb4:	cmp	r3, r2
   14fb8:	moveq	r3, #1
   14fbc:	streq	r3, [r0, #36]	; 0x24
   14fc0:	ldr	r3, [pc, #80]	; 15018 <test_print@@Base+0x165c>
   14fc4:	ldr	r0, [pc, #80]	; 1501c <test_print@@Base+0x1660>
   14fc8:	add	r3, pc, r3
   14fcc:	ldr	r2, [pc, #76]	; 15020 <test_print@@Base+0x1664>
   14fd0:	add	r3, r3, #264	; 0x108
   14fd4:	add	r1, pc, r1
   14fd8:	add	r0, pc, r0
   14fdc:	bl	12528 <__assert_fail@plt>
   14fe0:	ldr	r3, [r5, #36]	; 0x24
   14fe4:	ldr	r1, [pc, #56]	; 15024 <test_print@@Base+0x1668>
   14fe8:	cmp	r3, #0
   14fec:	moveq	r3, #1
   14ff0:	streq	r3, [r5, #36]	; 0x24
   14ff4:	ldr	r3, [pc, #44]	; 15028 <test_print@@Base+0x166c>
   14ff8:	ldr	r0, [pc, #44]	; 1502c <test_print@@Base+0x1670>
   14ffc:	add	r3, pc, r3
   15000:	ldr	r2, [pc, #40]	; 15030 <test_print@@Base+0x1674>
   15004:	add	r3, r3, #264	; 0x108
   15008:	add	r1, pc, r1
   1500c:	add	r0, pc, r0
   15010:	bl	12528 <__assert_fail@plt>
   15014:	andeq	sp, r0, r4, asr #7
   15018:	strdeq	ip, [r0], -r8
   1501c:	andeq	sp, r0, r4, lsr #8
   15020:	strdeq	r0, [r0], -fp
   15024:	muleq	r0, r0, r3
   15028:	andeq	ip, r0, r4, asr #23
   1502c:	andeq	sp, r0, r0, lsl r4
   15030:	andeq	r0, r0, r4, lsl #8
   15034:	cmp	r2, #0
   15038:	beq	15164 <test_print@@Base+0x17a8>
   1503c:	bics	ip, r3, #224	; 0xe0
   15040:	push	{r4, r5, r6, r7, lr}
   15044:	ldr	r6, [r2]
   15048:	beq	15158 <test_print@@Base+0x179c>
   1504c:	cmp	ip, #1
   15050:	movne	r1, #0
   15054:	movne	r3, #3
   15058:	bne	1514c <test_print@@Base+0x1790>
   1505c:	ldr	r5, [pc, #340]	; 151b8 <test_print@@Base+0x17fc>
   15060:	add	r5, pc, r5
   15064:	cmp	r6, #2
   15068:	bls	150e4 <test_print@@Base+0x1728>
   1506c:	add	r4, r0, #4
   15070:	add	ip, r1, #3
   15074:	ldrb	r0, [ip, #-3]
   15078:	sub	r6, r6, #3
   1507c:	cmp	r6, #2
   15080:	mov	r1, ip
   15084:	ldrb	lr, [r5, r0, lsr #2]
   15088:	add	ip, ip, #3
   1508c:	mov	r0, r4
   15090:	strb	lr, [r4, #-4]
   15094:	ldrb	lr, [ip, #-6]
   15098:	ldrb	r7, [ip, #-5]
   1509c:	add	r4, r4, #4
   150a0:	lsl	lr, lr, #4
   150a4:	and	lr, lr, #48	; 0x30
   150a8:	orr	lr, lr, r7, lsr #4
   150ac:	ldrb	lr, [r5, lr]
   150b0:	strb	lr, [r4, #-7]
   150b4:	ldrb	lr, [ip, #-5]
   150b8:	ldrb	r7, [ip, #-4]
   150bc:	lsl	lr, lr, #2
   150c0:	and	lr, lr, #60	; 0x3c
   150c4:	orr	lr, lr, r7, lsr #6
   150c8:	ldrb	lr, [r5, lr]
   150cc:	strb	lr, [r4, #-6]
   150d0:	ldrb	lr, [ip, #-4]
   150d4:	and	lr, lr, #63	; 0x3f
   150d8:	ldrb	lr, [r5, lr]
   150dc:	strb	lr, [r4, #-5]
   150e0:	bhi	15074 <test_print@@Base+0x16b8>
   150e4:	cmp	r6, #1
   150e8:	and	r3, r3, #128	; 0x80
   150ec:	beq	1517c <test_print@@Base+0x17c0>
   150f0:	cmp	r6, #2
   150f4:	bne	15170 <test_print@@Base+0x17b4>
   150f8:	ldrb	ip, [r1]
   150fc:	cmp	r3, #0
   15100:	ldrb	ip, [r5, ip, lsr #2]
   15104:	strb	ip, [r0]
   15108:	ldrb	ip, [r1]
   1510c:	ldrb	lr, [r1, #1]
   15110:	lsl	ip, ip, #4
   15114:	and	ip, ip, #48	; 0x30
   15118:	orr	ip, ip, lr, lsr #4
   1511c:	ldrb	ip, [r5, ip]
   15120:	strb	ip, [r0, #1]
   15124:	ldrb	r1, [r1, #1]
   15128:	lsl	r1, r1, #2
   1512c:	and	r1, r1, #60	; 0x3c
   15130:	ldrb	r1, [r5, r1]
   15134:	strb	r1, [r0, #2]
   15138:	beq	151b0 <test_print@@Base+0x17f4>
   1513c:	mov	r3, #61	; 0x3d
   15140:	strb	r3, [r0, #3]
   15144:	ldr	r1, [r2]
   15148:	mov	r3, #0
   1514c:	str	r1, [r2]
   15150:	mov	r0, r3
   15154:	pop	{r4, r5, r6, r7, pc}
   15158:	ldr	r5, [pc, #92]	; 151bc <test_print@@Base+0x1800>
   1515c:	add	r5, pc, r5
   15160:	b	15064 <test_print@@Base+0x16a8>
   15164:	mov	r3, #2
   15168:	mov	r0, r3
   1516c:	bx	lr
   15170:	ldr	r1, [r2]
   15174:	mov	r3, #0
   15178:	b	1514c <test_print@@Base+0x1790>
   1517c:	ldrb	ip, [r1]
   15180:	cmp	r3, #0
   15184:	movne	r3, #61	; 0x3d
   15188:	ldrb	ip, [r5, ip, lsr #2]
   1518c:	strb	ip, [r0]
   15190:	ldrb	r1, [r1]
   15194:	strbne	r3, [r0, #2]
   15198:	strbne	r3, [r0, #3]
   1519c:	movne	r3, #0
   151a0:	lsl	r1, r1, #4
   151a4:	and	r1, r1, #48	; 0x30
   151a8:	ldrb	r1, [r5, r1]
   151ac:	strb	r1, [r0, #1]
   151b0:	ldr	r1, [r2]
   151b4:	b	1514c <test_print@@Base+0x1790>
   151b8:	andeq	sp, r0, ip, lsl r4
   151bc:	ldrdeq	sp, [r0], -ip
   151c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151c4:	sub	sp, sp, #164	; 0xa4
   151c8:	subs	r1, r0, #0
   151cc:	vstr	d0, [sp, #88]	; 0x58
   151d0:	str	r1, [sp, #120]	; 0x78
   151d4:	beq	15d94 <test_print@@Base+0x23d8>
   151d8:	vmov	r2, r3, d0
   151dc:	vmov	r4, s0
   151e0:	adds	r6, r2, r2
   151e4:	adc	r7, r3, r3
   151e8:	mov	r5, r3
   151ec:	ldr	r3, [pc, #1332]	; 15728 <test_print@@Base+0x1d6c>
   151f0:	mov	r2, #0
   151f4:	cmp	r7, r3
   151f8:	cmpeq	r6, r2
   151fc:	bhi	15b04 <test_print@@Base+0x2148>
   15200:	cmp	r4, #0
   15204:	sbcs	r3, r5, #0
   15208:	movlt	r3, #45	; 0x2d
   1520c:	vldrlt	d7, [sp, #88]	; 0x58
   15210:	ldrlt	r2, [sp, #120]	; 0x78
   15214:	ldrge	r3, [sp, #120]	; 0x78
   15218:	addlt	r5, r5, #-2147483648	; 0x80000000
   1521c:	vneglt.f64	d7, d7
   15220:	strblt	r3, [r2]
   15224:	addlt	r3, r2, #1
   15228:	str	r3, [sp, #84]	; 0x54
   1522c:	vstrlt	d7, [sp, #88]	; 0x58
   15230:	orrs	r3, r4, r5
   15234:	beq	15adc <test_print@@Base+0x2120>
   15238:	ldr	r3, [pc, #1260]	; 1572c <test_print@@Base+0x1d70>
   1523c:	mov	r2, #0
   15240:	cmp	r5, r3
   15244:	cmpeq	r4, r2
   15248:	beq	15b48 <test_print@@Base+0x218c>
   1524c:	ldrd	sl, [sp, #88]	; 0x58
   15250:	and	r0, sl, r2
   15254:	and	r1, fp, r3
   15258:	orrs	r3, r0, r1
   1525c:	strd	r0, [sp, #40]	; 0x28
   15260:	beq	15b20 <test_print@@Base+0x2164>
   15264:	ldr	r6, [pc, #1220]	; 15730 <test_print@@Base+0x1d74>
   15268:	mvn	r2, #0
   1526c:	ldr	r3, [pc, #1232]	; 15744 <test_print@@Base+0x1d88>
   15270:	and	r6, r6, fp, lsr #20
   15274:	and	r2, r2, sl
   15278:	sub	r6, r6, #1072	; 0x430
   1527c:	and	r3, r3, fp
   15280:	adds	r8, r2, #0
   15284:	sub	r1, r6, #3
   15288:	adc	r9, r3, #1048576	; 0x100000
   1528c:	sub	r6, r6, #4
   15290:	str	r1, [sp, #32]
   15294:	ldr	ip, [sp, #32]
   15298:	mov	r2, r8
   1529c:	mov	r3, r9
   152a0:	lsl	r1, r3, #10
   152a4:	orr	r1, r1, r2, lsr #22
   152a8:	lsl	r0, r2, #10
   152ac:	mov	r3, r1
   152b0:	ldr	r1, [pc, #1148]	; 15734 <test_print@@Base+0x1d78>
   152b4:	mov	r2, r0
   152b8:	mov	r0, #0
   152bc:	and	r0, r0, r2
   152c0:	and	r1, r1, r3
   152c4:	orrs	r1, r0, r1
   152c8:	sub	ip, ip, #10
   152cc:	beq	152a0 <test_print@@Base+0x18e4>
   152d0:	cmp	r2, #0
   152d4:	sbcs	r1, r3, #0
   152d8:	blt	152f4 <test_print@@Base+0x1938>
   152dc:	adds	r2, r2, r2
   152e0:	adc	r3, r3, r3
   152e4:	cmp	r2, #0
   152e8:	sbcs	r1, r3, #0
   152ec:	sub	ip, ip, #1
   152f0:	bge	152dc <test_print@@Base+0x1920>
   152f4:	adds	r0, r8, r8
   152f8:	adc	r1, r9, r9
   152fc:	sub	r7, r6, #10
   15300:	strd	r0, [sp, #48]	; 0x30
   15304:	adds	r0, r0, #1
   15308:	adc	r1, r1, #0
   1530c:	lsl	lr, r1, #10
   15310:	lsl	r4, r0, #10
   15314:	ldr	r5, [pc, #1048]	; 15734 <test_print@@Base+0x1d78>
   15318:	orr	lr, lr, r0, lsr #22
   1531c:	mov	r0, r4
   15320:	mov	r4, #0
   15324:	and	r5, r5, lr
   15328:	and	r4, r4, r0
   1532c:	orrs	r4, r4, r5
   15330:	mov	r1, lr
   15334:	mov	lr, r7
   15338:	sub	r7, r7, #10
   1533c:	beq	1530c <test_print@@Base+0x1950>
   15340:	mov	r5, r1
   15344:	mov	r4, r0
   15348:	cmp	r0, #0
   1534c:	sbcs	r1, r1, #0
   15350:	strd	r4, [sp, #64]	; 0x40
   15354:	blt	15378 <test_print@@Base+0x19bc>
   15358:	mov	r1, r5
   1535c:	adds	r0, r0, r0
   15360:	adc	r1, r1, r1
   15364:	cmp	r0, #0
   15368:	sbcs	r4, r1, #0
   1536c:	sub	lr, lr, #1
   15370:	bge	1535c <test_print@@Base+0x19a0>
   15374:	strd	r0, [sp, #64]	; 0x40
   15378:	vldr	d7, [sp, #88]	; 0x58
   1537c:	vcmpe.f64	d7, #0.0
   15380:	vmrs	APSR_nzcv, fpscr
   15384:	ble	15d70 <test_print@@Base+0x23b4>
   15388:	vldr	d7, [pc, #896]	; 15710 <test_print@@Base+0x1d54>
   1538c:	vldr	d6, [sp, #88]	; 0x58
   15390:	vcmpe.f64	d6, d7
   15394:	vmrs	APSR_nzcv, fpscr
   15398:	bhi	15d70 <test_print@@Base+0x23b4>
   1539c:	ldr	r5, [pc, #928]	; 15744 <test_print@@Base+0x1d88>
   153a0:	mvn	r4, #0
   153a4:	and	r5, r5, fp
   153a8:	and	r4, r4, sl
   153ac:	orr	r4, r4, r5
   153b0:	ldr	r5, [sp, #44]	; 0x2c
   153b4:	adds	r5, r5, #0
   153b8:	movne	r5, #1
   153bc:	cmp	r4, #0
   153c0:	movne	r5, #0
   153c4:	cmp	r5, #0
   153c8:	bne	15ce0 <test_print@@Base+0x2324>
   153cc:	ldrd	r4, [sp, #48]	; 0x30
   153d0:	subs	r4, r4, #1
   153d4:	sbc	r5, r5, #0
   153d8:	mvn	r7, #60	; 0x3c
   153dc:	sub	r7, r7, ip
   153e0:	vldr	d5, [pc, #816]	; 15718 <test_print@@Base+0x1d5c>
   153e4:	vmov	s15, r7
   153e8:	vldr	d6, [pc, #816]	; 15720 <test_print@@Base+0x1d64>
   153ec:	sub	r6, r6, lr
   153f0:	sub	r7, r6, #32
   153f4:	vcvt.f64.s32	d7, s15
   153f8:	lsl	fp, r5, r6
   153fc:	rsb	r5, r6, #32
   15400:	orr	fp, fp, r4, lsl r7
   15404:	lsl	sl, r4, r6
   15408:	vmul.f64	d7, d7, d5
   1540c:	orr	fp, fp, r4, lsr r5
   15410:	vcmpe.f64	d7, d6
   15414:	vcvt.s32.f64	s11, d7
   15418:	vmrs	APSR_nzcv, fpscr
   1541c:	vmov	r4, s11
   15420:	bmi	15438 <test_print@@Base+0x1a7c>
   15424:	vcvt.f64.s32	d5, s11
   15428:	vsub.f64	d7, d7, d5
   1542c:	vcmp.f64	d7, d6
   15430:	vmrs	APSR_nzcv, fpscr
   15434:	addne	r4, r4, #1
   15438:	add	r4, r4, #344	; 0x158
   1543c:	adds	r8, r4, #3
   15440:	addmi	r8, r4, #10
   15444:	ldr	r1, [pc, #748]	; 15738 <test_print@@Base+0x1d7c>
   15448:	asr	r8, r8, #3
   1544c:	add	r8, r8, #1
   15450:	add	r1, pc, r1
   15454:	mov	r6, sl
   15458:	mov	r7, #0
   1545c:	lsl	r0, r8, #4
   15460:	add	r4, r1, #320	; 0x140
   15464:	strd	r6, [sp, #72]	; 0x48
   15468:	add	r4, r4, r0
   1546c:	ldrd	r6, [sp, #64]	; 0x40
   15470:	ldrd	r4, [r4, #-8]
   15474:	mov	r7, #0
   15478:	mov	r8, r6
   1547c:	mov	r9, r7
   15480:	mov	r6, r2
   15484:	mov	r7, #0
   15488:	strd	r8, [sp, #56]	; 0x38
   1548c:	strd	r6, [sp, #48]	; 0x30
   15490:	mov	r6, r4
   15494:	mov	r7, #0
   15498:	strd	r4, [sp, #40]	; 0x28
   1549c:	strd	r6, [sp, #32]
   154a0:	ldrd	r4, [sp, #72]	; 0x48
   154a4:	str	r0, [sp, #124]	; 0x7c
   154a8:	ldr	r7, [sp, #60]	; 0x3c
   154ac:	ldr	r0, [sp, #32]
   154b0:	mov	r6, r4
   154b4:	str	r1, [sp, #140]	; 0x8c
   154b8:	mul	r2, r0, r5
   154bc:	mul	r0, r0, r7
   154c0:	mov	r7, r6
   154c4:	ldr	r6, [sp, #36]	; 0x24
   154c8:	mov	r5, r4
   154cc:	ldr	r4, [sp, #32]
   154d0:	mla	r2, r7, r6, r2
   154d4:	ldr	r7, [sp, #56]	; 0x38
   154d8:	umull	r4, r5, r4, r5
   154dc:	mla	r7, r7, r6, r0
   154e0:	ldr	r0, [sp, #32]
   154e4:	add	r8, r2, r5
   154e8:	str	r7, [sp, #136]	; 0x88
   154ec:	umull	r4, r5, r0, fp
   154f0:	umull	r6, r7, r3, r0
   154f4:	strd	r4, [sp, #112]	; 0x70
   154f8:	ldrd	r4, [sp, #40]	; 0x28
   154fc:	strd	r6, [sp, #104]	; 0x68
   15500:	ldr	r7, [sp, #48]	; 0x30
   15504:	ldr	r0, [sp, #36]	; 0x24
   15508:	ldr	r4, [sp, #36]	; 0x24
   1550c:	umull	r6, r7, r7, r5
   15510:	add	r2, r1, #312	; 0x138
   15514:	strd	r6, [sp, #96]	; 0x60
   15518:	ldr	r7, [sp, #116]	; 0x74
   1551c:	ldr	r1, [sp, #32]
   15520:	mla	r0, fp, r0, r7
   15524:	umull	sl, fp, r5, fp
   15528:	mov	r6, sl
   1552c:	mov	r7, fp
   15530:	ldrd	sl, [sp, #48]	; 0x30
   15534:	mul	r5, sl, r4
   15538:	mov	sl, r0
   1553c:	mla	r5, r1, fp, r5
   15540:	ldr	r1, [sp, #124]	; 0x7c
   15544:	str	r5, [sp, #128]	; 0x80
   15548:	add	r1, r2, r1
   1554c:	str	r1, [sp, #124]	; 0x7c
   15550:	ldr	r1, [sp, #112]	; 0x70
   15554:	mov	r2, #0
   15558:	adds	r8, r8, r1
   1555c:	ldr	r1, [sp, #32]
   15560:	ldr	r0, [sp, #68]	; 0x44
   15564:	ldr	r4, [sp, #56]	; 0x38
   15568:	adc	r9, r2, #0
   1556c:	umull	r0, r1, r1, r0
   15570:	adds	r8, r8, #-2147483648	; 0x80000000
   15574:	strd	r0, [sp, #112]	; 0x70
   15578:	ldr	r1, [sp, #32]
   1557c:	adc	r9, r9, #0
   15580:	ldr	r0, [sp, #44]	; 0x2c
   15584:	umull	r4, r5, r1, r4
   15588:	ldr	r1, [sp, #44]	; 0x2c
   1558c:	strd	r4, [sp, #144]	; 0x90
   15590:	subs	r4, r6, #1
   15594:	sbc	r5, r7, #0
   15598:	ldrd	r6, [sp, #72]	; 0x48
   1559c:	adds	sl, sl, r4
   155a0:	adc	fp, r2, r5
   155a4:	umull	r4, r5, r1, r6
   155a8:	mla	r0, r0, r7, r5
   155ac:	adds	r8, r8, r4
   155b0:	adc	r9, r9, #0
   155b4:	adds	r0, sl, r0
   155b8:	adc	r1, fp, r2
   155bc:	ldrd	r4, [sp, #64]	; 0x40
   155c0:	mov	r7, r1
   155c4:	ldr	r1, [sp, #36]	; 0x24
   155c8:	mov	r6, r0
   155cc:	ldr	r0, [sp, #116]	; 0x74
   155d0:	mov	sl, r9
   155d4:	mla	r1, r5, r1, r0
   155d8:	ldrd	r8, [sp, #40]	; 0x28
   155dc:	str	r1, [sp, #72]	; 0x48
   155e0:	umull	r0, r1, r9, r5
   155e4:	strd	r0, [sp, #40]	; 0x28
   155e8:	ldrd	r0, [sp, #56]	; 0x38
   155ec:	umull	r4, r5, r9, r0
   155f0:	mov	r0, r1
   155f4:	strd	r4, [sp, #56]	; 0x38
   155f8:	mla	r4, r9, r0, r5
   155fc:	ldrd	r0, [sp, #40]	; 0x28
   15600:	ldr	r5, [sp, #48]	; 0x30
   15604:	strd	r8, [sp, #40]	; 0x28
   15608:	adds	r0, r0, #1
   1560c:	adc	r1, r1, #0
   15610:	adds	r6, r6, sl
   15614:	adc	r7, r7, r2
   15618:	ldr	sl, [sp, #72]	; 0x48
   1561c:	strd	r6, [sp, #64]	; 0x40
   15620:	adds	sl, sl, r0
   15624:	ldr	r6, [sp, #36]	; 0x24
   15628:	mov	r0, r4
   1562c:	ldr	r4, [sp, #32]
   15630:	ldr	r7, [sp, #108]	; 0x6c
   15634:	mov	r8, r9
   15638:	umull	r4, r5, r5, r4
   1563c:	mla	r4, r3, r6, r7
   15640:	ldr	r7, [sp, #52]	; 0x34
   15644:	ldr	r9, [sp, #100]	; 0x64
   15648:	adc	fp, r2, r1
   1564c:	adds	r6, sl, r0
   15650:	mla	r8, r8, r7, r9
   15654:	ldr	sl, [sp, #148]	; 0x94
   15658:	adc	r7, fp, r2
   1565c:	ldr	r9, [sp, #136]	; 0x88
   15660:	strd	r6, [sp, #32]
   15664:	add	r6, r9, sl
   15668:	ldr	sl, [sp, #112]	; 0x70
   1566c:	ldr	r9, [sp, #128]	; 0x80
   15670:	adds	r6, r6, sl
   15674:	add	r0, r9, r5
   15678:	ldr	r5, [sp, #104]	; 0x68
   1567c:	adc	r7, r2, #0
   15680:	adds	r6, r6, #-2147483648	; 0x80000000
   15684:	mov	sl, r4
   15688:	adc	r7, r7, #0
   1568c:	ldr	r4, [sp, #56]	; 0x38
   15690:	adds	r0, r0, r5
   15694:	adc	r1, r2, #0
   15698:	adds	sl, sl, r8
   1569c:	adc	fp, r2, r2
   156a0:	adds	r6, r6, r4
   156a4:	ldr	r4, [sp, #44]	; 0x2c
   156a8:	adc	r7, r7, #0
   156ac:	adds	r0, r0, #-2147483648	; 0x80000000
   156b0:	umlal	sl, fp, r4, r3
   156b4:	ldr	r3, [sp, #124]	; 0x7c
   156b8:	ldr	r4, [sp, #96]	; 0x60
   156bc:	mov	r8, r7
   156c0:	adc	r1, r1, #0
   156c4:	ldrd	r6, [sp, #32]
   156c8:	adds	r0, r0, r4
   156cc:	ldrsh	r3, [r3, #8]
   156d0:	adc	r1, r1, #0
   156d4:	mov	r4, r1
   156d8:	ldrd	r0, [sp, #64]	; 0x40
   156dc:	adds	r6, r6, r8
   156e0:	adc	r7, r7, r2
   156e4:	mov	r8, r6
   156e8:	add	ip, r3, ip
   156ec:	add	lr, lr, r3
   156f0:	ldr	r3, [sp, #124]	; 0x7c
   156f4:	subs	r6, r8, r0
   156f8:	mov	r9, r7
   156fc:	sbc	r7, r9, r1
   15700:	ldrsh	r3, [r3, #10]
   15704:	strd	r6, [sp, #32]
   15708:	b	1576c <test_print@@Base+0x1db0>
   1570c:	nop			; (mov r0, r0)
   15710:			; <UNDEFINED> instruction: 0xffffffff
   15714:	svcvc	0x00efffff
   15718:			; <UNDEFINED> instruction: 0x509f79fe
   1571c:	svccc	0x00d34413
	...
   15728:			; <UNDEFINED> instruction: 0xffe00000
   1572c:	svcvc	0x00f00000	; IMB
   15730:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   15734:			; <UNDEFINED> instruction: 0xffc00000
   15738:	andeq	ip, r0, r0, ror r7
   1573c:	stclgt	12, cr12, [ip], {205}	; 0xcd
   15740:	andeq	ip, r0, r4, lsr #20
   15744:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   15748:			; <UNDEFINED> instruction: 0xfffffbce
   1574c:			; <UNDEFINED> instruction: 0xfffffbcd
   15750:	andeq	ip, r0, r8, lsr #17
   15754:	andeq	fp, r0, r4, asr #28
   15758:	andeq	ip, r0, r8, lsr r7
   1575c:			; <UNDEFINED> instruction: 0x0000c7b8
   15760:	andeq	fp, r0, r0, lsr #28
   15764:	andeq	ip, r0, r4, lsl r7
   15768:	andeq	ip, r0, r0, lsl #15
   1576c:	adds	r6, r4, sl
   15770:	adc	r7, r2, fp
   15774:	cmp	r1, r9
   15778:	cmpeq	r0, r8
   1577c:	str	r3, [sp, #144]	; 0x90
   15780:	add	r0, lr, #64	; 0x40
   15784:	add	r3, ip, #64	; 0x40
   15788:	strd	r8, [sp, #112]	; 0x70
   1578c:	strd	r6, [sp, #128]	; 0x80
   15790:	str	r0, [sp, #136]	; 0x88
   15794:	str	r3, [sp, #124]	; 0x7c
   15798:	bhi	15d6c <test_print@@Base+0x23b0>
   1579c:	add	r1, ip, #129	; 0x81
   157a0:	mvn	r8, #63	; 0x3f
   157a4:	add	r3, r1, r1, lsl #4
   157a8:	sub	r8, r8, ip
   157ac:	add	r1, r1, r3, lsl #3
   157b0:	mov	r0, #1
   157b4:	sub	ip, r8, #32
   157b8:	add	r1, r1, r1, lsl #3
   157bc:	mov	r4, #0
   157c0:	mov	r5, #0
   157c4:	asr	r1, r1, #12
   157c8:	lsl	r3, r0, ip
   157cc:	strd	r4, [sp, #96]	; 0x60
   157d0:	ldr	r9, [sp, #140]	; 0x8c
   157d4:	add	r4, r1, r0
   157d8:	str	r3, [sp, #100]	; 0x64
   157dc:	ldrd	sl, [sp, #112]	; 0x70
   157e0:	rsb	lr, r8, #32
   157e4:	add	r3, r9, r4, lsl #2
   157e8:	ldr	r2, [sp, #100]	; 0x64
   157ec:	lsr	r5, sl, r8
   157f0:	orr	r2, r2, r0, lsr lr
   157f4:	ldr	sl, [r3, #1704]	; 0x6a8
   157f8:	lsl	r3, r0, r8
   157fc:	str	r2, [sp, #100]	; 0x64
   15800:	str	r3, [sp, #96]	; 0x60
   15804:	ldrd	r6, [sp, #96]	; 0x60
   15808:	ldrd	r2, [sp, #112]	; 0x70
   1580c:	orr	r5, r5, fp, lsl lr
   15810:	subs	r6, r6, #1
   15814:	sbc	r7, r7, #0
   15818:	orr	r5, r5, r3, lsr ip
   1581c:	and	r2, r2, r6
   15820:	and	r3, r3, r7
   15824:	cmp	r5, sl
   15828:	strd	r2, [sp, #56]	; 0x38
   1582c:	addcc	r3, r9, r1, lsl #2
   15830:	movcc	r4, r1
   15834:	ldrcc	sl, [r3, #1704]	; 0x6a8
   15838:	cmp	r4, #0
   1583c:	str	ip, [sp, #40]	; 0x28
   15840:	str	lr, [sp, #48]	; 0x30
   15844:	strd	r6, [sp, #104]	; 0x68
   15848:	ble	15d54 <test_print@@Base+0x2398>
   1584c:	mov	r1, sl
   15850:	mov	r0, r5
   15854:	bl	21048 <flatcc_json_printer_clear@@Base+0x38>
   15858:	ldr	r3, [sp, #84]	; 0x54
   1585c:	mov	r1, sl
   15860:	sub	r4, r4, #1
   15864:	add	r0, r0, #48	; 0x30
   15868:	strb	r0, [r3]
   1586c:	mov	r0, r5
   15870:	bl	21234 <flatcc_json_printer_clear@@Base+0x224>
   15874:	ldr	r2, [sp, #40]	; 0x28
   15878:	ldrd	r6, [sp, #56]	; 0x38
   1587c:	mov	r3, #0
   15880:	mov	fp, r1
   15884:	lsl	r1, r1, r2
   15888:	ldr	r2, [sp, #48]	; 0x30
   1588c:	lsl	r0, fp, r8
   15890:	orr	r1, r1, fp, lsr r2
   15894:	adds	r6, r6, r0
   15898:	adc	r7, r7, r1
   1589c:	mov	r0, r6
   158a0:	mov	r1, r7
   158a4:	ldrd	r6, [sp, #32]
   158a8:	strd	r0, [sp, #72]	; 0x48
   158ac:	cmp	r1, r7
   158b0:	cmpeq	r0, r6
   158b4:	bcc	15d5c <test_print@@Base+0x23a0>
   158b8:	ldr	r9, [sp, #84]	; 0x54
   158bc:	ldrd	r6, [sp, #32]
   158c0:	str	r3, [sp, #72]	; 0x48
   158c4:	mov	r5, #1
   158c8:	str	r8, [sp, #64]	; 0x40
   158cc:	str	r9, [sp, #32]
   158d0:	b	15938 <test_print@@Base+0x1f7c>
   158d4:	mov	r1, sl
   158d8:	mov	r0, fp
   158dc:	bl	21048 <flatcc_json_printer_clear@@Base+0x38>
   158e0:	ldr	r3, [sp, #32]
   158e4:	mov	r1, sl
   158e8:	add	r5, r5, #1
   158ec:	sub	r4, r4, #1
   158f0:	add	r0, r0, #48	; 0x30
   158f4:	strb	r0, [r3, #1]!
   158f8:	mov	r0, fp
   158fc:	str	r3, [sp, #32]
   15900:	bl	21234 <flatcc_json_printer_clear@@Base+0x224>
   15904:	ldr	r3, [sp, #40]	; 0x28
   15908:	lsl	r9, r1, r3
   1590c:	ldr	r3, [sp, #48]	; 0x30
   15910:	mov	fp, r1
   15914:	orr	r9, r9, r1, lsr r3
   15918:	ldr	r3, [sp, #64]	; 0x40
   1591c:	lsl	r8, r1, r3
   15920:	ldrd	r0, [sp, #56]	; 0x38
   15924:	adds	r0, r0, r8
   15928:	adc	r1, r1, r9
   1592c:	cmp	r7, r1
   15930:	cmpeq	r6, r0
   15934:	bhi	15b80 <test_print@@Base+0x21c4>
   15938:	ldr	r3, [pc, #-516]	; 1573c <test_print@@Base+0x1d80>
   1593c:	cmp	r4, #0
   15940:	umull	r3, sl, r3, sl
   15944:	lsr	sl, sl, #3
   15948:	bne	158d4 <test_print@@Base+0x1f18>
   1594c:	ldr	r8, [sp, #64]	; 0x40
   15950:	strd	r6, [sp, #32]
   15954:	ldr	r3, [sp, #84]	; 0x54
   15958:	str	r8, [sp, #64]	; 0x40
   1595c:	add	r9, r3, r5
   15960:	mov	r0, r9
   15964:	ldrd	r6, [sp, #32]
   15968:	ldrd	r8, [sp, #56]	; 0x38
   1596c:	mov	r2, #1
   15970:	mov	r3, #0
   15974:	mov	lr, #10
   15978:	umull	sl, fp, r8, lr
   1597c:	mul	r1, lr, r7
   15980:	ldr	ip, [sp, #64]	; 0x40
   15984:	mla	fp, lr, r9, fp
   15988:	str	r1, [sp, #32]
   1598c:	lsr	r1, sl, ip
   15990:	ldr	ip, [sp, #48]	; 0x30
   15994:	ldr	r8, [sp, #40]	; 0x28
   15998:	umull	r6, r7, r6, lr
   1599c:	orr	r1, r1, fp, lsl ip
   159a0:	orr	r1, r1, fp, lsr r8
   159a4:	ldrd	r8, [sp, #104]	; 0x68
   159a8:	mul	ip, lr, r3
   159ac:	and	r8, r8, sl
   159b0:	ldr	sl, [sp, #32]
   159b4:	umull	r2, r3, r2, lr
   159b8:	and	r9, r9, fp
   159bc:	add	r7, sl, r7
   159c0:	cmp	r7, r9
   159c4:	add	r1, r1, #48	; 0x30
   159c8:	cmpeq	r6, r8
   159cc:	add	r5, r5, #1
   159d0:	sub	r4, r4, #1
   159d4:	strb	r1, [r0], #1
   159d8:	add	r3, ip, r3
   159dc:	bls	15978 <test_print@@Base+0x1fbc>
   159e0:	ldrd	sl, [sp, #128]	; 0x80
   159e4:	strd	r6, [sp, #32]
   159e8:	ldrd	r6, [sp, #112]	; 0x70
   159ec:	ldr	ip, [sp, #124]	; 0x7c
   159f0:	subs	r0, r6, sl
   159f4:	sbc	r1, r7, fp
   159f8:	cmp	fp, r7
   159fc:	cmpeq	sl, r6
   15a00:	ldr	r6, [sp, #136]	; 0x88
   15a04:	movhi	lr, #1
   15a08:	movls	lr, #0
   15a0c:	cmp	ip, r6
   15a10:	orrne	lr, lr, #1
   15a14:	cmp	lr, #0
   15a18:	bne	15d6c <test_print@@Base+0x23b0>
   15a1c:	mul	r1, r2, r1
   15a20:	strd	r2, [sp, #24]
   15a24:	mla	r1, r0, r3, r1
   15a28:	umull	r2, r3, r2, r0
   15a2c:	ldrd	r6, [sp, #96]	; 0x60
   15a30:	mov	r0, r8
   15a34:	add	r3, r1, r3
   15a38:	mov	r1, r9
   15a3c:	strd	r6, [sp, #16]
   15a40:	strd	r0, [sp, #8]
   15a44:	ldrd	r0, [sp, #32]
   15a48:	strd	r0, [sp]
   15a4c:	mov	r1, r5
   15a50:	ldr	r0, [sp, #84]	; 0x54
   15a54:	bl	14880 <test_print@@Base+0xec4>
   15a58:	ldr	r3, [sp, #144]	; 0x90
   15a5c:	cmp	r0, #0
   15a60:	sub	r4, r4, r3
   15a64:	beq	15cb8 <test_print@@Base+0x22fc>
   15a68:	cmp	r5, #2
   15a6c:	subgt	r3, r5, #1
   15a70:	movle	r3, #1
   15a74:	cmp	r4, #0
   15a78:	blt	15c0c <test_print@@Base+0x2250>
   15a7c:	cmp	r4, #2
   15a80:	bgt	15c94 <test_print@@Base+0x22d8>
   15a84:	cmp	r4, #0
   15a88:	beq	15abc <test_print@@Base+0x2100>
   15a8c:	sub	r1, r4, #1
   15a90:	ble	15abc <test_print@@Base+0x2100>
   15a94:	ldr	r3, [sp, #84]	; 0x54
   15a98:	add	r4, r4, r5
   15a9c:	add	r4, r3, r4
   15aa0:	mov	r2, #48	; 0x30
   15aa4:	add	r3, r3, r5
   15aa8:	strb	r2, [r3], #1
   15aac:	cmp	r4, r3
   15ab0:	bne	15aa8 <test_print@@Base+0x20ec>
   15ab4:	add	r5, r5, #1
   15ab8:	add	r5, r5, r1
   15abc:	ldr	r2, [sp, #84]	; 0x54
   15ac0:	ldr	r3, [sp, #120]	; 0x78
   15ac4:	add	r0, r2, r5
   15ac8:	sub	r0, r0, r3
   15acc:	mov	r3, #0
   15ad0:	strb	r3, [r2, r5]
   15ad4:	add	sp, sp, #164	; 0xa4
   15ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15adc:	ldr	r1, [sp, #84]	; 0x54
   15ae0:	mov	r3, #0
   15ae4:	mov	r0, r1
   15ae8:	mov	r2, #48	; 0x30
   15aec:	strb	r2, [r1]
   15af0:	strb	r3, [r0, #1]!
   15af4:	ldr	r3, [sp, #120]	; 0x78
   15af8:	sub	r0, r0, r3
   15afc:	add	sp, sp, #164	; 0xa4
   15b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b04:	vmov	r3, s0
   15b08:	ldr	r1, [pc, #-976]	; 15740 <test_print@@Base+0x1d84>
   15b0c:	mov	r2, r5
   15b10:	add	r1, pc, r1
   15b14:	add	sp, sp, #164	; 0xa4
   15b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b1c:	b	12504 <sprintf@plt>
   15b20:	ldr	r9, [pc, #-996]	; 15744 <test_print@@Base+0x1d88>
   15b24:	mvn	r8, #0
   15b28:	and	r8, r8, sl
   15b2c:	and	r9, r9, fp
   15b30:	orrs	r3, r8, r9
   15b34:	beq	15db8 <test_print@@Base+0x23fc>
   15b38:	ldr	r3, [pc, #-1016]	; 15748 <test_print@@Base+0x1d8c>
   15b3c:	ldr	r6, [pc, #-1016]	; 1574c <test_print@@Base+0x1d90>
   15b40:	str	r3, [sp, #32]
   15b44:	b	15294 <test_print@@Base+0x18d8>
   15b48:	ldr	lr, [sp, #84]	; 0x54
   15b4c:	mov	ip, #105	; 0x69
   15b50:	mov	r0, lr
   15b54:	mov	r1, #110	; 0x6e
   15b58:	mov	r2, #102	; 0x66
   15b5c:	mov	r3, #0
   15b60:	strb	ip, [lr]
   15b64:	strb	r1, [lr, #1]
   15b68:	strb	r2, [lr, #2]
   15b6c:	strb	r3, [r0, #3]!
   15b70:	ldr	r3, [sp, #120]	; 0x78
   15b74:	sub	r0, r0, r3
   15b78:	add	sp, sp, #164	; 0xa4
   15b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b80:	mov	r8, r3
   15b84:	strd	r0, [sp, #72]	; 0x48
   15b88:	strd	r6, [sp, #32]
   15b8c:	ldrd	r0, [sp, #128]	; 0x80
   15b90:	ldrd	r6, [sp, #112]	; 0x70
   15b94:	subs	r2, r6, r0
   15b98:	sbc	r3, r7, r1
   15b9c:	cmp	r1, r7
   15ba0:	cmpeq	r0, r6
   15ba4:	ldr	r1, [sp, #124]	; 0x7c
   15ba8:	ldr	r0, [sp, #136]	; 0x88
   15bac:	movhi	lr, #1
   15bb0:	movls	lr, #0
   15bb4:	cmp	r1, r0
   15bb8:	orrne	lr, lr, #1
   15bbc:	cmp	lr, #0
   15bc0:	bne	15d6c <test_print@@Base+0x23b0>
   15bc4:	ldr	r1, [sp, #40]	; 0x28
   15bc8:	lsl	r8, sl, r8
   15bcc:	lsl	ip, sl, r1
   15bd0:	ldr	r1, [sp, #48]	; 0x30
   15bd4:	mov	fp, #0
   15bd8:	str	r8, [sp, #16]
   15bdc:	orr	ip, ip, sl, lsr r1
   15be0:	ldrd	r0, [sp, #72]	; 0x48
   15be4:	mov	sl, #1
   15be8:	str	ip, [sp, #20]
   15bec:	strd	r0, [sp, #8]
   15bf0:	ldrd	r0, [sp, #32]
   15bf4:	strd	sl, [sp, #24]
   15bf8:	strd	r0, [sp]
   15bfc:	mov	r1, r5
   15c00:	ldr	r0, [sp, #84]	; 0x54
   15c04:	bl	14880 <test_print@@Base+0xec4>
   15c08:	b	15a58 <test_print@@Base+0x209c>
   15c0c:	rsb	r1, r4, #0
   15c10:	add	r2, r4, r5
   15c14:	cmp	r1, r5
   15c18:	cmnge	r2, #2
   15c1c:	bge	15d00 <test_print@@Base+0x2344>
   15c20:	cmp	r5, #1
   15c24:	beq	15c94 <test_print@@Base+0x22d8>
   15c28:	cmp	r3, r1
   15c2c:	movlt	r1, r3
   15c30:	cmp	r1, #0
   15c34:	sub	ip, r5, r1
   15c38:	ble	15c58 <test_print@@Base+0x229c>
   15c3c:	ldr	r3, [sp, #84]	; 0x54
   15c40:	add	r0, r3, ip
   15c44:	add	r3, r3, r5
   15c48:	ldrb	r2, [r3, #-1]
   15c4c:	strb	r2, [r3], #-1
   15c50:	cmp	r0, r3
   15c54:	bne	15c48 <test_print@@Base+0x228c>
   15c58:	ldr	r2, [sp, #84]	; 0x54
   15c5c:	mov	r3, #46	; 0x2e
   15c60:	adds	r0, r1, r4
   15c64:	strb	r3, [r2, ip]
   15c68:	add	r3, r5, #1
   15c6c:	moveq	r5, r3
   15c70:	beq	15abc <test_print@@Base+0x2100>
   15c74:	ldr	ip, [sp, #84]	; 0x54
   15c78:	add	r5, r5, #2
   15c7c:	mov	r2, #101	; 0x65
   15c80:	add	r1, ip, r5
   15c84:	strb	r2, [ip, r3]
   15c88:	bl	14a40 <test_print@@Base+0x1084>
   15c8c:	add	r5, r5, r0
   15c90:	b	15abc <test_print@@Base+0x2100>
   15c94:	ldr	r2, [sp, #84]	; 0x54
   15c98:	add	r6, r5, #1
   15c9c:	mov	r3, #101	; 0x65
   15ca0:	strb	r3, [r2, r5]
   15ca4:	mov	r0, r4
   15ca8:	add	r1, r2, r6
   15cac:	bl	14a40 <test_print@@Base+0x1084>
   15cb0:	add	r5, r6, r0
   15cb4:	b	15abc <test_print@@Base+0x2100>
   15cb8:	ldr	r4, [sp, #84]	; 0x54
   15cbc:	ldr	r1, [pc, #-1396]	; 15750 <test_print@@Base+0x1d94>
   15cc0:	ldrd	r2, [sp, #88]	; 0x58
   15cc4:	add	r1, pc, r1
   15cc8:	mov	r0, r4
   15ccc:	bl	12504 <sprintf@plt>
   15cd0:	ldr	r2, [sp, #120]	; 0x78
   15cd4:	sub	r3, r4, r2
   15cd8:	add	r0, r3, r0
   15cdc:	b	15afc <test_print@@Base+0x2140>
   15ce0:	lsl	r5, r9, #2
   15ce4:	lsl	r4, r8, #2
   15ce8:	ldr	r1, [sp, #32]
   15cec:	orr	r5, r5, r8, lsr #30
   15cf0:	subs	r4, r4, #1
   15cf4:	sub	r6, r1, #2
   15cf8:	sbc	r5, r5, #0
   15cfc:	b	153d8 <test_print@@Base+0x1a1c>
   15d00:	ldr	r6, [sp, #84]	; 0x54
   15d04:	rsb	r0, r5, #2
   15d08:	sub	r0, r0, r4
   15d0c:	mov	r2, r5
   15d10:	add	r0, r6, r0
   15d14:	mov	r1, r6
   15d18:	rsb	r4, r4, #2
   15d1c:	bl	1242c <memmove@plt>
   15d20:	sub	r0, r4, r5
   15d24:	mov	r2, #48	; 0x30
   15d28:	mov	r3, #46	; 0x2e
   15d2c:	cmp	r0, #2
   15d30:	strb	r2, [r6]
   15d34:	strb	r3, [r6, #1]
   15d38:	ble	15d64 <test_print@@Base+0x23a8>
   15d3c:	add	r3, r6, #2
   15d40:	add	r1, r6, r0
   15d44:	strb	r2, [r3], #1
   15d48:	cmp	r1, r3
   15d4c:	bne	15d44 <test_print@@Base+0x2388>
   15d50:	b	15c8c <test_print@@Base+0x22d0>
   15d54:	mov	r5, #0
   15d58:	b	15954 <test_print@@Base+0x1f98>
   15d5c:	mov	r5, #1
   15d60:	b	15b8c <test_print@@Base+0x21d0>
   15d64:	mov	r0, #2
   15d68:	b	15c8c <test_print@@Base+0x22d0>
   15d6c:	bl	14ec0 <test_print@@Base+0x1504>
   15d70:	ldr	r3, [pc, #-1572]	; 15754 <test_print@@Base+0x1d98>
   15d74:	ldr	r1, [pc, #-1572]	; 15758 <test_print@@Base+0x1d9c>
   15d78:	ldr	r0, [pc, #-1572]	; 1575c <test_print@@Base+0x1da0>
   15d7c:	add	r3, pc, r3
   15d80:	mov	r2, #138	; 0x8a
   15d84:	add	r3, r3, #300	; 0x12c
   15d88:	add	r1, pc, r1
   15d8c:	add	r0, pc, r0
   15d90:	bl	12528 <__assert_fail@plt>
   15d94:	ldr	r3, [pc, #-1596]	; 15760 <test_print@@Base+0x1da4>
   15d98:	ldr	r1, [pc, #-1596]	; 15764 <test_print@@Base+0x1da8>
   15d9c:	ldr	r0, [pc, #-1596]	; 15768 <test_print@@Base+0x1dac>
   15da0:	add	r3, pc, r3
   15da4:	mov	r2, #189	; 0xbd
   15da8:	add	r3, r3, #280	; 0x118
   15dac:	add	r1, pc, r1
   15db0:	add	r0, pc, r0
   15db4:	bl	12528 <__assert_fail@plt>
   15db8:	bl	12538 <__assert_fail@plt+0x10>
   15dbc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15dc0:	mov	sl, r0
   15dc4:	ldr	r0, [r0, #20]
   15dc8:	mov	r7, r2
   15dcc:	mov	r8, #92	; 0x5c
   15dd0:	add	r2, r0, #1
   15dd4:	mov	fp, #102	; 0x66
   15dd8:	mov	r9, #48	; 0x30
   15ddc:	str	r2, [sl, #20]
   15de0:	mov	r2, #34	; 0x22
   15de4:	strb	r2, [r0]
   15de8:	ldrb	r4, [r1]
   15dec:	mov	r5, r1
   15df0:	cmp	r4, #34	; 0x22
   15df4:	cmpne	r4, #31
   15df8:	bls	15fd4 <test_print@@Base+0x2618>
   15dfc:	cmp	r4, #92	; 0x5c
   15e00:	bne	15e10 <test_print@@Base+0x2454>
   15e04:	b	15fd4 <test_print@@Base+0x2618>
   15e08:	cmp	r4, #92	; 0x5c
   15e0c:	beq	15e20 <test_print@@Base+0x2464>
   15e10:	ldrb	r4, [r5, #1]!
   15e14:	cmp	r4, #34	; 0x22
   15e18:	cmpne	r4, #31
   15e1c:	bhi	15e08 <test_print@@Base+0x244c>
   15e20:	sub	r6, r5, r1
   15e24:	ldr	r0, [sl, #20]
   15e28:	ldr	r2, [sl, #16]
   15e2c:	add	r3, r0, r6
   15e30:	cmp	r2, r3
   15e34:	mov	r2, r6
   15e38:	bls	15f3c <test_print@@Base+0x2580>
   15e3c:	bl	12444 <memcpy@plt>
   15e40:	ldr	r2, [sl, #20]
   15e44:	subs	r7, r7, r6
   15e48:	add	r2, r2, r6
   15e4c:	str	r2, [sl, #20]
   15e50:	beq	15f50 <test_print@@Base+0x2594>
   15e54:	add	r3, r2, #1
   15e58:	cmp	r4, #12
   15e5c:	str	r3, [sl, #20]
   15e60:	strb	r8, [r2]
   15e64:	beq	15f78 <test_print@@Base+0x25bc>
   15e68:	bhi	15f0c <test_print@@Base+0x2550>
   15e6c:	cmp	r4, #9
   15e70:	beq	15fbc <test_print@@Base+0x2600>
   15e74:	cmp	r4, #10
   15e78:	beq	15fa4 <test_print@@Base+0x25e8>
   15e7c:	cmp	r4, #8
   15e80:	beq	15f8c <test_print@@Base+0x25d0>
   15e84:	ldr	r3, [sl, #20]
   15e88:	lsr	r1, r4, #4
   15e8c:	add	r2, r3, #1
   15e90:	str	r2, [sl, #20]
   15e94:	mov	r2, #117	; 0x75
   15e98:	strb	r2, [r3]
   15e9c:	ldr	r3, [sl, #20]
   15ea0:	cmp	r1, #9
   15ea4:	add	r2, r3, #1
   15ea8:	str	r2, [sl, #20]
   15eac:	strb	r9, [r3]
   15eb0:	ldr	r2, [sl, #20]
   15eb4:	movhi	r3, #87	; 0x57
   15eb8:	add	r0, r2, #1
   15ebc:	str	r0, [sl, #20]
   15ec0:	strb	r9, [r2]
   15ec4:	ldr	r2, [sl, #20]
   15ec8:	movls	r3, #48	; 0x30
   15ecc:	add	r3, r3, r1
   15ed0:	and	r4, r4, #15
   15ed4:	add	r1, r2, #1
   15ed8:	str	r1, [sl, #20]
   15edc:	cmp	r4, #9
   15ee0:	strb	r3, [r2]
   15ee4:	ldr	r2, [sl, #20]
   15ee8:	movhi	r3, #87	; 0x57
   15eec:	movls	r3, #48	; 0x30
   15ef0:	add	r1, r2, #1
   15ef4:	add	r3, r3, r4
   15ef8:	str	r1, [sl, #20]
   15efc:	strb	r3, [r2]
   15f00:	sub	r7, r7, #1
   15f04:	add	r1, r5, #1
   15f08:	b	15de8 <test_print@@Base+0x242c>
   15f0c:	cmp	r4, #34	; 0x22
   15f10:	beq	15f64 <test_print@@Base+0x25a8>
   15f14:	cmp	r4, #92	; 0x5c
   15f18:	beq	15f64 <test_print@@Base+0x25a8>
   15f1c:	cmp	r4, #13
   15f20:	bne	15e84 <test_print@@Base+0x24c8>
   15f24:	ldr	r3, [sl, #20]
   15f28:	add	r2, r3, #1
   15f2c:	str	r2, [sl, #20]
   15f30:	mov	r2, #114	; 0x72
   15f34:	strb	r2, [r3]
   15f38:	b	15f00 <test_print@@Base+0x2544>
   15f3c:	mov	r0, sl
   15f40:	bl	14b18 <test_print@@Base+0x115c>
   15f44:	subs	r7, r7, r6
   15f48:	ldr	r2, [sl, #20]
   15f4c:	bne	15e54 <test_print@@Base+0x2498>
   15f50:	add	r0, r2, #1
   15f54:	mov	r1, #34	; 0x22
   15f58:	str	r0, [sl, #20]
   15f5c:	strb	r1, [r2]
   15f60:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f64:	ldr	r3, [sl, #20]
   15f68:	add	r2, r3, #1
   15f6c:	str	r2, [sl, #20]
   15f70:	strb	r4, [r3]
   15f74:	b	15f00 <test_print@@Base+0x2544>
   15f78:	ldr	r3, [sl, #20]
   15f7c:	add	r2, r3, #1
   15f80:	str	r2, [sl, #20]
   15f84:	strb	fp, [r3]
   15f88:	b	15f00 <test_print@@Base+0x2544>
   15f8c:	ldr	r3, [sl, #20]
   15f90:	mov	r2, #98	; 0x62
   15f94:	add	r1, r3, #1
   15f98:	str	r1, [sl, #20]
   15f9c:	strb	r2, [r3]
   15fa0:	b	15f00 <test_print@@Base+0x2544>
   15fa4:	ldr	r3, [sl, #20]
   15fa8:	mov	r2, #110	; 0x6e
   15fac:	add	r1, r3, #1
   15fb0:	str	r1, [sl, #20]
   15fb4:	strb	r2, [r3]
   15fb8:	b	15f00 <test_print@@Base+0x2544>
   15fbc:	ldr	r3, [sl, #20]
   15fc0:	mov	r2, #116	; 0x74
   15fc4:	add	r1, r3, #1
   15fc8:	str	r1, [sl, #20]
   15fcc:	strb	r2, [r3]
   15fd0:	b	15f00 <test_print@@Base+0x2544>
   15fd4:	mov	r6, #0
   15fd8:	b	15e24 <test_print@@Base+0x2468>
   15fdc:	push	{r4, r5, r6, r7, r8, lr}
   15fe0:	mov	r6, r1
   15fe4:	ldrb	r1, [r0, #25]
   15fe8:	mov	r4, r0
   15fec:	mov	r5, r2
   15ff0:	cmp	r1, #0
   15ff4:	bne	160c4 <test_print@@Base+0x2708>
   15ff8:	ldr	r2, [r0, #20]
   15ffc:	ldr	r3, [r0, #16]
   16000:	cmp	r2, r3
   16004:	bcs	16098 <test_print@@Base+0x26dc>
   16008:	mov	r3, #34	; 0x22
   1600c:	strb	r3, [r2]
   16010:	ldrb	r3, [r4, #26]
   16014:	ldr	r0, [r4, #20]
   16018:	ldr	r2, [r4, #16]
   1601c:	cmp	r3, #0
   16020:	addeq	r0, r0, #1
   16024:	add	r3, r0, r5
   16028:	cmp	r2, r3
   1602c:	str	r0, [r4, #20]
   16030:	bhi	160a8 <test_print@@Base+0x26ec>
   16034:	mov	r2, r5
   16038:	mov	r1, r6
   1603c:	mov	r0, r4
   16040:	bl	14b18 <test_print@@Base+0x115c>
   16044:	ldr	r5, [r4, #20]
   16048:	mov	r3, #34	; 0x22
   1604c:	strb	r3, [r5]
   16050:	ldr	r1, [r4, #20]
   16054:	ldrb	r3, [r4, #26]
   16058:	clz	r3, r3
   1605c:	lsr	r3, r3, #5
   16060:	add	r2, r1, r3
   16064:	add	r2, r2, #1
   16068:	mov	r0, #58	; 0x3a
   1606c:	str	r2, [r4, #20]
   16070:	strb	r0, [r1, r3]
   16074:	ldr	r3, [r4, #20]
   16078:	mov	r2, #32
   1607c:	strb	r2, [r3]
   16080:	ldrb	r2, [r4, #25]
   16084:	ldr	r3, [r4, #20]
   16088:	cmp	r2, #0
   1608c:	addne	r3, r3, #1
   16090:	str	r3, [r4, #20]
   16094:	pop	{r4, r5, r6, r7, r8, pc}
   16098:	ldr	r3, [r0, #44]	; 0x2c
   1609c:	blx	r3
   160a0:	ldr	r2, [r4, #20]
   160a4:	b	16008 <test_print@@Base+0x264c>
   160a8:	mov	r2, r5
   160ac:	mov	r1, r6
   160b0:	bl	12444 <memcpy@plt>
   160b4:	ldr	r3, [r4, #20]
   160b8:	add	r5, r3, r5
   160bc:	str	r5, [r4, #20]
   160c0:	b	16048 <test_print@@Base+0x268c>
   160c4:	ldr	r3, [r0, #20]
   160c8:	mov	r2, #10
   160cc:	add	r1, r3, #1
   160d0:	str	r1, [r0, #20]
   160d4:	strb	r2, [r3]
   160d8:	ldrb	r7, [r0, #25]
   160dc:	ldr	r2, [r0, #32]
   160e0:	ldr	r3, [r0, #20]
   160e4:	ldr	r1, [r0, #16]
   160e8:	mul	r7, r2, r7
   160ec:	add	r2, r3, r7
   160f0:	cmp	r1, r2
   160f4:	bcc	16118 <test_print@@Base+0x275c>
   160f8:	mov	r2, r7
   160fc:	mov	r0, r3
   16100:	mov	r1, #32
   16104:	bl	124e0 <memset@plt>
   16108:	ldr	r2, [r4, #20]
   1610c:	add	r2, r2, r7
   16110:	str	r2, [r4, #20]
   16114:	b	16008 <test_print@@Base+0x264c>
   16118:	mov	r1, r7
   1611c:	bl	14bc8 <test_print@@Base+0x120c>
   16120:	ldr	r2, [r4, #20]
   16124:	b	16008 <test_print@@Base+0x264c>

00016128 <flatcc_json_printer_error_string@@Base>:
   16128:	cmp	r0, #3
   1612c:	addls	pc, pc, r0, lsl #2
   16130:	b	16174 <flatcc_json_printer_error_string@@Base+0x4c>
   16134:	b	16144 <flatcc_json_printer_error_string@@Base+0x1c>
   16138:	b	16168 <flatcc_json_printer_error_string@@Base+0x40>
   1613c:	b	1615c <flatcc_json_printer_error_string@@Base+0x34>
   16140:	b	16150 <flatcc_json_printer_error_string@@Base+0x28>
   16144:	ldr	r0, [pc, #52]	; 16180 <flatcc_json_printer_error_string@@Base+0x58>
   16148:	add	r0, pc, r0
   1614c:	bx	lr
   16150:	ldr	r0, [pc, #44]	; 16184 <flatcc_json_printer_error_string@@Base+0x5c>
   16154:	add	r0, pc, r0
   16158:	bx	lr
   1615c:	ldr	r0, [pc, #36]	; 16188 <flatcc_json_printer_error_string@@Base+0x60>
   16160:	add	r0, pc, r0
   16164:	bx	lr
   16168:	ldr	r0, [pc, #28]	; 1618c <flatcc_json_printer_error_string@@Base+0x64>
   1616c:	add	r0, pc, r0
   16170:	bx	lr
   16174:	ldr	r0, [pc, #20]	; 16190 <flatcc_json_printer_error_string@@Base+0x68>
   16178:	add	r0, pc, r0
   1617c:	bx	lr
   16180:	andeq	ip, r0, ip, lsr #8
   16184:	andeq	ip, r0, r0, asr #8
   16188:	andeq	ip, r0, r4, lsr #8
   1618c:	andeq	ip, r0, ip, lsl #8
   16190:	andeq	ip, r0, r8, lsr #8

00016194 <flatcc_json_printer_fmt_float@@Base>:
   16194:	vcvt.f64.f32	d0, s0
   16198:	b	151c0 <test_print@@Base+0x1804>

0001619c <flatcc_json_printer_fmt_double@@Base>:
   1619c:	b	151c0 <test_print@@Base+0x1804>

000161a0 <flatcc_json_printer_fmt_bool@@Base>:
   161a0:	cmp	r1, #0
   161a4:	mov	r2, r0
   161a8:	bne	161d0 <flatcc_json_printer_fmt_bool@@Base+0x30>
   161ac:	ldr	r3, [pc, #56]	; 161ec <flatcc_json_printer_fmt_bool@@Base+0x4c>
   161b0:	mov	r1, #5
   161b4:	add	r3, pc, r3
   161b8:	ldrb	ip, [r3, #4]
   161bc:	ldr	r0, [r3]
   161c0:	strb	ip, [r2, #4]
   161c4:	str	r0, [r2]
   161c8:	mov	r0, r1
   161cc:	bx	lr
   161d0:	ldr	r3, [pc, #24]	; 161f0 <flatcc_json_printer_fmt_bool@@Base+0x50>
   161d4:	mov	r1, #4
   161d8:	add	r3, pc, r3
   161dc:	ldr	r0, [r3]
   161e0:	str	r0, [r2]
   161e4:	mov	r0, r1
   161e8:	bx	lr
   161ec:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   161f0:	ldrdeq	ip, [r0], -r0

000161f4 <flatcc_json_printer_string@@Base>:
   161f4:	b	15dbc <test_print@@Base+0x2400>

000161f8 <flatcc_json_printer_write@@Base>:
   161f8:	push	{r4, r5, r6, lr}
   161fc:	ldr	lr, [r0, #20]
   16200:	ldr	ip, [r0, #16]
   16204:	add	r4, lr, r2
   16208:	cmp	ip, r4
   1620c:	bls	16230 <flatcc_json_printer_write@@Base+0x38>
   16210:	mov	r4, r0
   16214:	mov	r0, lr
   16218:	mov	r5, r2
   1621c:	bl	12444 <memcpy@plt>
   16220:	ldr	ip, [r4, #20]
   16224:	add	ip, ip, r5
   16228:	str	ip, [r4, #20]
   1622c:	pop	{r4, r5, r6, pc}
   16230:	pop	{r4, r5, r6, lr}
   16234:	b	14b18 <test_print@@Base+0x115c>

00016238 <flatcc_json_printer_nl@@Base>:
   16238:	ldr	r2, [r0, #20]
   1623c:	mov	r1, #10
   16240:	add	ip, r2, #1
   16244:	str	ip, [r0, #20]
   16248:	strb	r1, [r2]
   1624c:	ldr	r1, [r0, #20]
   16250:	ldr	r2, [r0, #16]
   16254:	cmp	r1, r2
   16258:	bxcc	lr
   1625c:	ldr	r3, [r0, #44]	; 0x2c
   16260:	mov	r1, #0
   16264:	bx	r3

00016268 <flatcc_json_printer_char@@Base>:
   16268:	ldr	r3, [r0, #20]
   1626c:	add	r2, r3, #1
   16270:	str	r2, [r0, #20]
   16274:	strb	r1, [r3]
   16278:	bx	lr

0001627c <flatcc_json_printer_indent@@Base>:
   1627c:	push	{r4, r5, r6, lr}
   16280:	ldrb	r1, [r0, #25]
   16284:	ldr	r5, [r0, #32]
   16288:	ldr	r2, [r0, #20]
   1628c:	ldr	ip, [r0, #16]
   16290:	mul	r5, r5, r1
   16294:	add	r1, r2, r5
   16298:	cmp	ip, r1
   1629c:	bcc	162c4 <flatcc_json_printer_indent@@Base+0x48>
   162a0:	mov	r4, r0
   162a4:	mov	r1, #32
   162a8:	mov	r0, r2
   162ac:	mov	r2, r5
   162b0:	bl	124e0 <memset@plt>
   162b4:	ldr	r3, [r4, #20]
   162b8:	add	r5, r3, r5
   162bc:	str	r5, [r4, #20]
   162c0:	pop	{r4, r5, r6, pc}
   162c4:	mov	r1, r5
   162c8:	pop	{r4, r5, r6, lr}
   162cc:	b	14bc8 <test_print@@Base+0x120c>

000162d0 <flatcc_json_printer_add_level@@Base>:
   162d0:	ldr	r3, [r0, #32]
   162d4:	add	r1, r3, r1
   162d8:	str	r1, [r0, #32]
   162dc:	bx	lr

000162e0 <flatcc_json_printer_get_level@@Base>:
   162e0:	ldr	r0, [r0, #32]
   162e4:	bx	lr

000162e8 <flatcc_json_printer_uint8@@Base>:
   162e8:	push	{r4, lr}
   162ec:	mov	r4, r0
   162f0:	mov	r0, r1
   162f4:	ldr	r1, [r4, #20]
   162f8:	bl	14e04 <test_print@@Base+0x1448>
   162fc:	ldr	r3, [r4, #20]
   16300:	add	r0, r3, r0
   16304:	str	r0, [r4, #20]
   16308:	pop	{r4, pc}

0001630c <flatcc_json_printer_uint16@@Base>:
   1630c:	push	{r4, lr}
   16310:	mov	r4, r0
   16314:	mov	r0, r1
   16318:	ldr	r1, [r4, #20]
   1631c:	bl	13cb8 <test_print@@Base+0x2fc>
   16320:	ldr	r3, [r4, #20]
   16324:	add	r0, r3, r0
   16328:	str	r0, [r4, #20]
   1632c:	pop	{r4, pc}

00016330 <flatcc_json_printer_uint32@@Base>:
   16330:	push	{r4, lr}
   16334:	mov	r4, r0
   16338:	mov	r0, r1
   1633c:	ldr	r1, [r4, #20]
   16340:	bl	13e3c <test_print@@Base+0x480>
   16344:	ldr	r3, [r4, #20]
   16348:	add	r0, r3, r0
   1634c:	str	r0, [r4, #20]
   16350:	pop	{r4, pc}

00016354 <flatcc_json_printer_uint64@@Base>:
   16354:	push	{r4, lr}
   16358:	mov	r4, r0
   1635c:	mov	r1, r3
   16360:	mov	r0, r2
   16364:	ldr	r2, [r4, #20]
   16368:	bl	141a8 <test_print@@Base+0x7ec>
   1636c:	ldr	r3, [r4, #20]
   16370:	add	r0, r3, r0
   16374:	str	r0, [r4, #20]
   16378:	pop	{r4, pc}

0001637c <flatcc_json_printer_int8@@Base>:
   1637c:	push	{r4, r5, r6, lr}
   16380:	mov	r4, r0
   16384:	subs	r0, r1, #0
   16388:	ldr	r1, [r4, #20]
   1638c:	lsr	r5, r0, #31
   16390:	rsblt	r0, r0, #0
   16394:	movlt	r3, #45	; 0x2d
   16398:	sxtblt	r0, r0
   1639c:	strblt	r3, [r1]
   163a0:	uxtb	r0, r0
   163a4:	addlt	r1, r1, #1
   163a8:	bl	14e04 <test_print@@Base+0x1448>
   163ac:	ldr	r3, [r4, #20]
   163b0:	add	r0, r5, r0
   163b4:	add	r3, r3, r0
   163b8:	str	r3, [r4, #20]
   163bc:	pop	{r4, r5, r6, pc}

000163c0 <flatcc_json_printer_int16@@Base>:
   163c0:	push	{r4, r5, r6, lr}
   163c4:	mov	r4, r0
   163c8:	subs	r0, r1, #0
   163cc:	ldr	r1, [r4, #20]
   163d0:	lsr	r5, r0, #31
   163d4:	rsblt	r0, r0, #0
   163d8:	movlt	r3, #45	; 0x2d
   163dc:	sxthlt	r0, r0
   163e0:	strblt	r3, [r1]
   163e4:	uxth	r0, r0
   163e8:	addlt	r1, r1, #1
   163ec:	bl	13cb8 <test_print@@Base+0x2fc>
   163f0:	ldr	r3, [r4, #20]
   163f4:	add	r0, r5, r0
   163f8:	add	r3, r3, r0
   163fc:	str	r3, [r4, #20]
   16400:	pop	{r4, r5, r6, pc}

00016404 <flatcc_json_printer_int32@@Base>:
   16404:	push	{r4, r5, r6, lr}
   16408:	mov	r4, r0
   1640c:	subs	r0, r1, #0
   16410:	ldr	r1, [r4, #20]
   16414:	movlt	r3, #45	; 0x2d
   16418:	lsr	r5, r0, #31
   1641c:	strblt	r3, [r1]
   16420:	rsblt	r0, r0, #0
   16424:	addlt	r1, r1, #1
   16428:	bl	13e3c <test_print@@Base+0x480>
   1642c:	ldr	r3, [r4, #20]
   16430:	add	r0, r5, r0
   16434:	add	r3, r3, r0
   16438:	str	r3, [r4, #20]
   1643c:	pop	{r4, r5, r6, pc}

00016440 <flatcc_json_printer_int64@@Base>:
   16440:	push	{r4, r5, r6, lr}
   16444:	mov	r1, r3
   16448:	mov	r4, r0
   1644c:	cmp	r2, #0
   16450:	sbcs	r3, r3, #0
   16454:	mov	r0, r2
   16458:	lsr	r5, r1, #31
   1645c:	ldr	r2, [r4, #20]
   16460:	bge	16478 <flatcc_json_printer_int64@@Base+0x38>
   16464:	mov	r3, #45	; 0x2d
   16468:	rsbs	r0, r0, #0
   1646c:	strb	r3, [r2]
   16470:	rsc	r1, r1, #0
   16474:	add	r2, r2, #1
   16478:	bl	141a8 <test_print@@Base+0x7ec>
   1647c:	ldr	r3, [r4, #20]
   16480:	add	r0, r5, r0
   16484:	add	r3, r3, r0
   16488:	str	r3, [r4, #20]
   1648c:	pop	{r4, r5, r6, pc}

00016490 <flatcc_json_printer_float@@Base>:
   16490:	push	{r4, lr}
   16494:	vcvt.f64.f32	d0, s0
   16498:	mov	r4, r0
   1649c:	ldr	r0, [r0, #20]
   164a0:	bl	151c0 <test_print@@Base+0x1804>
   164a4:	ldr	r3, [r4, #20]
   164a8:	add	r0, r3, r0
   164ac:	str	r0, [r4, #20]
   164b0:	pop	{r4, pc}

000164b4 <flatcc_json_printer_double@@Base>:
   164b4:	push	{r4, lr}
   164b8:	mov	r4, r0
   164bc:	ldr	r0, [r0, #20]
   164c0:	bl	151c0 <test_print@@Base+0x1804>
   164c4:	ldr	r3, [r4, #20]
   164c8:	add	r0, r3, r0
   164cc:	str	r0, [r4, #20]
   164d0:	pop	{r4, pc}

000164d4 <flatcc_json_printer_enum@@Base>:
   164d4:	ldr	r3, [r0, #20]
   164d8:	mov	ip, #34	; 0x22
   164dc:	push	{r4, r5, r6, lr}
   164e0:	mov	r4, r0
   164e4:	strb	ip, [r3]
   164e8:	ldrb	ip, [r0, #26]
   164ec:	ldr	r3, [r0, #20]
   164f0:	ldr	lr, [r0, #16]
   164f4:	cmp	ip, #0
   164f8:	addeq	r3, r3, #1
   164fc:	add	ip, r3, r2
   16500:	cmp	lr, ip
   16504:	str	r3, [r0, #20]
   16508:	bhi	16534 <flatcc_json_printer_enum@@Base+0x60>
   1650c:	bl	14b18 <test_print@@Base+0x115c>
   16510:	ldr	r2, [r4, #20]
   16514:	mov	r3, #34	; 0x22
   16518:	strb	r3, [r2]
   1651c:	ldrb	r2, [r4, #26]
   16520:	ldr	r3, [r4, #20]
   16524:	cmp	r2, #0
   16528:	addeq	r3, r3, #1
   1652c:	str	r3, [r4, #20]
   16530:	pop	{r4, r5, r6, pc}
   16534:	mov	r0, r3
   16538:	mov	r5, r2
   1653c:	bl	12444 <memcpy@plt>
   16540:	ldr	r2, [r4, #20]
   16544:	add	r2, r2, r5
   16548:	str	r2, [r4, #20]
   1654c:	b	16514 <flatcc_json_printer_enum@@Base+0x40>

00016550 <flatcc_json_printer_delimit_enum_flags@@Base>:
   16550:	ldr	r3, [r0, #20]
   16554:	ldrb	r2, [r0, #26]
   16558:	adds	r1, r1, #0
   1655c:	mov	ip, #34	; 0x22
   16560:	strb	ip, [r3]
   16564:	movne	r1, #1
   16568:	ldr	r3, [r0, #20]
   1656c:	cmp	r2, #0
   16570:	orreq	r1, r1, #1
   16574:	add	r1, r3, r1
   16578:	str	r1, [r0, #20]
   1657c:	bx	lr

00016580 <flatcc_json_printer_enum_flag@@Base>:
   16580:	push	{r4, r5, r6, lr}
   16584:	mov	r5, #32
   16588:	ldr	lr, [r0, #20]
   1658c:	mov	r4, r2
   16590:	strb	r5, [lr]
   16594:	ldr	lr, [r0, #20]
   16598:	ldr	r5, [r0, #16]
   1659c:	cmp	r1, #0
   165a0:	addgt	lr, lr, #1
   165a4:	add	r2, lr, r3
   165a8:	cmp	r5, r2
   165ac:	str	lr, [r0, #20]
   165b0:	bls	165dc <flatcc_json_printer_enum_flag@@Base+0x5c>
   165b4:	mov	r1, r4
   165b8:	mov	r4, r0
   165bc:	mov	r2, r3
   165c0:	mov	r0, lr
   165c4:	mov	r5, r3
   165c8:	bl	12444 <memcpy@plt>
   165cc:	ldr	r3, [r4, #20]
   165d0:	add	r3, r3, r5
   165d4:	str	r3, [r4, #20]
   165d8:	pop	{r4, r5, r6, pc}
   165dc:	mov	r1, r4
   165e0:	mov	r2, r3
   165e4:	pop	{r4, r5, r6, lr}
   165e8:	b	14b18 <test_print@@Base+0x115c>

000165ec <flatcc_json_printer_string_field@@Base>:
   165ec:	add	r2, r2, #2
   165f0:	ldr	ip, [r1, #8]
   165f4:	lsl	r2, r2, #1
   165f8:	cmp	r2, ip
   165fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16600:	ldr	r8, [sp, #32]
   16604:	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   16608:	ldr	ip, [r1, #4]
   1660c:	ldrh	r7, [ip, r2]
   16610:	cmp	r7, #0
   16614:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16618:	ldr	r6, [r1]
   1661c:	adds	r5, r6, r7
   16620:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16624:	ldr	r2, [r1, #16]
   16628:	mov	r9, r3
   1662c:	cmp	r2, #0
   16630:	add	r2, r2, #1
   16634:	str	r2, [r1, #16]
   16638:	ldrne	r2, [r0, #20]
   1663c:	movne	r1, #44	; 0x2c
   16640:	addne	ip, r2, #1
   16644:	strne	ip, [r0, #20]
   16648:	strbne	r1, [r2]
   1664c:	ldrb	r1, [r0, #25]
   16650:	mov	r4, r0
   16654:	cmp	r1, #0
   16658:	bne	1673c <flatcc_json_printer_string_field@@Base+0x150>
   1665c:	ldr	r2, [r0, #20]
   16660:	ldr	r3, [r0, #16]
   16664:	cmp	r2, r3
   16668:	bcc	16678 <flatcc_json_printer_string_field@@Base+0x8c>
   1666c:	ldr	r3, [r0, #44]	; 0x2c
   16670:	blx	r3
   16674:	ldr	r2, [r4, #20]
   16678:	mov	r3, #34	; 0x22
   1667c:	strb	r3, [r2]
   16680:	ldrb	r3, [r4, #26]
   16684:	ldr	r0, [r4, #20]
   16688:	ldr	r2, [r4, #16]
   1668c:	cmp	r3, #0
   16690:	addeq	r0, r0, #1
   16694:	add	r3, r0, r8
   16698:	cmp	r2, r3
   1669c:	str	r0, [r4, #20]
   166a0:	bhi	16720 <flatcc_json_printer_string_field@@Base+0x134>
   166a4:	mov	r2, r8
   166a8:	mov	r1, r9
   166ac:	mov	r0, r4
   166b0:	bl	14b18 <test_print@@Base+0x115c>
   166b4:	ldr	r8, [r4, #20]
   166b8:	mov	r3, #34	; 0x22
   166bc:	strb	r3, [r8]
   166c0:	ldr	r1, [r4, #20]
   166c4:	ldrb	r3, [r4, #26]
   166c8:	clz	r3, r3
   166cc:	lsr	r3, r3, #5
   166d0:	add	r2, r1, r3
   166d4:	add	r2, r2, #1
   166d8:	mov	r0, #58	; 0x3a
   166dc:	str	r2, [r4, #20]
   166e0:	strb	r0, [r1, r3]
   166e4:	ldr	r3, [r4, #20]
   166e8:	mov	r2, #32
   166ec:	mov	r0, r4
   166f0:	strb	r2, [r3]
   166f4:	ldrb	ip, [r4, #25]
   166f8:	ldr	r2, [r6, r7]
   166fc:	ldr	r3, [r4, #20]
   16700:	add	r1, r5, r2
   16704:	cmp	ip, #0
   16708:	addne	r3, r3, #1
   1670c:	ldr	r2, [r5, r2]
   16710:	add	r1, r1, #4
   16714:	str	r3, [r4, #20]
   16718:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1671c:	b	15dbc <test_print@@Base+0x2400>
   16720:	mov	r2, r8
   16724:	mov	r1, r9
   16728:	bl	12444 <memcpy@plt>
   1672c:	ldr	r3, [r4, #20]
   16730:	add	r8, r3, r8
   16734:	str	r8, [r4, #20]
   16738:	b	166b8 <flatcc_json_printer_string_field@@Base+0xcc>
   1673c:	ldr	r3, [r0, #20]
   16740:	mov	r2, #10
   16744:	add	r1, r3, #1
   16748:	str	r1, [r0, #20]
   1674c:	strb	r2, [r3]
   16750:	ldrb	r3, [r0, #25]
   16754:	ldr	r2, [r0, #32]
   16758:	ldr	r0, [r0, #20]
   1675c:	ldr	r1, [r4, #16]
   16760:	mul	sl, r2, r3
   16764:	add	r3, r0, sl
   16768:	cmp	r1, r3
   1676c:	bcc	1678c <flatcc_json_printer_string_field@@Base+0x1a0>
   16770:	mov	r2, sl
   16774:	mov	r1, #32
   16778:	bl	124e0 <memset@plt>
   1677c:	ldr	r2, [r4, #20]
   16780:	add	r2, r2, sl
   16784:	str	r2, [r4, #20]
   16788:	b	16678 <flatcc_json_printer_string_field@@Base+0x8c>
   1678c:	mov	r1, sl
   16790:	mov	r0, r4
   16794:	bl	14bc8 <test_print@@Base+0x120c>
   16798:	ldr	r2, [r4, #20]
   1679c:	b	16678 <flatcc_json_printer_string_field@@Base+0x8c>

000167a0 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   167a0:	add	r2, r2, #2
   167a4:	ldr	ip, [r1, #8]
   167a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167ac:	lsl	r2, r2, #1
   167b0:	sub	sp, sp, #20
   167b4:	cmp	r2, ip
   167b8:	ldr	r6, [sp, #56]	; 0x38
   167bc:	bge	16a00 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x260>
   167c0:	ldr	ip, [r1, #4]
   167c4:	ldrh	r9, [ip, r2]
   167c8:	cmp	r9, #0
   167cc:	beq	16a00 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x260>
   167d0:	ldr	r2, [sp, #60]	; 0x3c
   167d4:	ldr	r4, [r1]
   167d8:	adds	r8, r2, #0
   167dc:	movne	r8, #1
   167e0:	orr	r2, r8, #128	; 0x80
   167e4:	adds	r7, r4, r9
   167e8:	str	r2, [sp, #4]
   167ec:	beq	16a00 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x260>
   167f0:	ldr	r2, [r1, #16]
   167f4:	mov	sl, r3
   167f8:	cmp	r2, #0
   167fc:	add	r2, r2, #1
   16800:	str	r2, [r1, #16]
   16804:	ldrne	r2, [r0, #20]
   16808:	movne	r1, #44	; 0x2c
   1680c:	addne	ip, r2, #1
   16810:	strne	ip, [r0, #20]
   16814:	strbne	r1, [r2]
   16818:	ldrb	r1, [r0, #25]
   1681c:	mov	r5, r0
   16820:	ldr	r3, [r0, #20]
   16824:	cmp	r1, #0
   16828:	bne	16a44 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2a4>
   1682c:	ldr	r2, [r0, #16]
   16830:	cmp	r3, r2
   16834:	bcc	16844 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa4>
   16838:	ldr	r3, [r0, #44]	; 0x2c
   1683c:	blx	r3
   16840:	ldr	r3, [r5, #20]
   16844:	mov	r2, #34	; 0x22
   16848:	strb	r2, [r3]
   1684c:	ldrb	r3, [r5, #26]
   16850:	ldr	r0, [r5, #20]
   16854:	ldr	r2, [r5, #16]
   16858:	cmp	r3, #0
   1685c:	addeq	r0, r0, #1
   16860:	add	r3, r0, r6
   16864:	cmp	r2, r3
   16868:	str	r0, [r5, #20]
   1686c:	bhi	16a08 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x268>
   16870:	mov	r2, r6
   16874:	mov	r1, sl
   16878:	mov	r0, r5
   1687c:	bl	14b18 <test_print@@Base+0x115c>
   16880:	ldr	r6, [r5, #20]
   16884:	mov	r0, #34	; 0x22
   16888:	strb	r0, [r6]
   1688c:	ldr	r1, [r5, #20]
   16890:	ldrb	r3, [r5, #26]
   16894:	clz	r3, r3
   16898:	lsr	r3, r3, #5
   1689c:	add	r2, r1, r3
   168a0:	add	r2, r2, #1
   168a4:	mov	ip, #58	; 0x3a
   168a8:	str	r2, [r5, #20]
   168ac:	strb	ip, [r1, r3]
   168b0:	ldr	r3, [r5, #20]
   168b4:	mov	r1, #32
   168b8:	ldr	r2, [pc, #524]	; 16acc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x32c>
   168bc:	strb	r1, [r3]
   168c0:	ldrb	r3, [r5, #25]
   168c4:	ldr	ip, [r4, r9]
   168c8:	ldr	lr, [r5, #20]
   168cc:	adds	r3, r3, #0
   168d0:	movne	r3, #1
   168d4:	ldr	r4, [r7, ip]
   168d8:	add	r1, lr, r3
   168dc:	add	r1, r1, #1
   168e0:	str	r4, [sp, #8]
   168e4:	str	r1, [r5, #20]
   168e8:	strb	r0, [lr, r3]
   168ec:	ldr	r6, [sp, #8]
   168f0:	ldr	r0, [r5, #20]
   168f4:	ldr	r4, [r5, #16]
   168f8:	lsl	r6, r6, #2
   168fc:	add	r7, r7, ip
   16900:	umull	r3, r6, r2, r6
   16904:	add	r7, r7, #4
   16908:	lsr	r6, r6, #1
   1690c:	add	r6, r6, #3
   16910:	bic	r6, r6, #3
   16914:	add	r3, r0, r6
   16918:	cmp	r3, r4
   1691c:	bcs	16a24 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x284>
   16920:	cmp	r4, r3
   16924:	bcs	169d8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x238>
   16928:	sub	r4, r4, r0
   1692c:	bic	r4, r4, #3
   16930:	add	r6, r4, r4, lsl #1
   16934:	lsrs	r6, r6, #2
   16938:	beq	16aa4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x304>
   1693c:	mov	r3, r6
   16940:	ldr	fp, [pc, #388]	; 16acc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x32c>
   16944:	mov	r6, r4
   16948:	add	sl, sp, #12
   1694c:	mov	r9, #0
   16950:	mov	r4, r3
   16954:	b	1696c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1cc>
   16958:	sub	r6, r3, r0
   1695c:	bic	r6, r6, #3
   16960:	add	r4, r6, r6, lsl #1
   16964:	lsrs	r4, r4, #2
   16968:	beq	16aa4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x304>
   1696c:	mov	r1, r7
   16970:	mov	r3, r8
   16974:	mov	r2, sl
   16978:	str	r4, [sp, #12]
   1697c:	bl	15034 <test_print@@Base+0x1678>
   16980:	ldr	r2, [r5, #20]
   16984:	ldr	r3, [sp, #8]
   16988:	add	r6, r2, r6
   1698c:	sub	r3, r3, r4
   16990:	str	r6, [r5, #20]
   16994:	str	r3, [sp, #8]
   16998:	mov	r0, r5
   1699c:	ldr	r3, [r5, #44]	; 0x2c
   169a0:	mov	r1, r9
   169a4:	blx	r3
   169a8:	ldr	r6, [sp, #8]
   169ac:	ldr	r0, [r5, #20]
   169b0:	ldr	r3, [r5, #16]
   169b4:	lsl	r6, r6, #2
   169b8:	add	r7, r7, r4
   169bc:	umull	r2, r6, fp, r6
   169c0:	lsr	r6, r6, #1
   169c4:	add	r6, r6, #3
   169c8:	bic	r6, r6, #3
   169cc:	add	r2, r0, r6
   169d0:	cmp	r3, r2
   169d4:	bcc	16958 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1b8>
   169d8:	ldr	r3, [sp, #4]
   169dc:	mov	r1, r7
   169e0:	add	r2, sp, #8
   169e4:	bl	15034 <test_print@@Base+0x1678>
   169e8:	ldr	r2, [r5, #20]
   169ec:	mov	r1, #34	; 0x22
   169f0:	add	r3, r2, r6
   169f4:	add	r3, r3, #1
   169f8:	str	r3, [r5, #20]
   169fc:	strb	r1, [r2, r6]
   16a00:	add	sp, sp, #20
   16a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a08:	mov	r2, r6
   16a0c:	mov	r1, sl
   16a10:	bl	12444 <memcpy@plt>
   16a14:	ldr	r3, [r5, #20]
   16a18:	add	r6, r3, r6
   16a1c:	str	r6, [r5, #20]
   16a20:	b	16884 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xe4>
   16a24:	ldr	r3, [r5, #44]	; 0x2c
   16a28:	mov	r0, r5
   16a2c:	mov	r1, #0
   16a30:	blx	r3
   16a34:	ldr	r0, [r5, #20]
   16a38:	ldr	r4, [r5, #16]
   16a3c:	add	r3, r0, r6
   16a40:	b	16920 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x180>
   16a44:	mov	r2, #10
   16a48:	add	r1, r3, #1
   16a4c:	str	r1, [r0, #20]
   16a50:	strb	r2, [r3]
   16a54:	ldrb	r3, [r0, #25]
   16a58:	ldr	fp, [r0, #32]
   16a5c:	ldr	r0, [r0, #20]
   16a60:	ldr	r2, [r5, #16]
   16a64:	mul	fp, fp, r3
   16a68:	add	r3, r0, fp
   16a6c:	cmp	r2, r3
   16a70:	bcc	16a90 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2f0>
   16a74:	mov	r2, fp
   16a78:	mov	r1, #32
   16a7c:	bl	124e0 <memset@plt>
   16a80:	ldr	r3, [r5, #20]
   16a84:	add	r3, r3, fp
   16a88:	str	r3, [r5, #20]
   16a8c:	b	16844 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa4>
   16a90:	mov	r1, fp
   16a94:	mov	r0, r5
   16a98:	bl	14bc8 <test_print@@Base+0x120c>
   16a9c:	ldr	r3, [r5, #20]
   16aa0:	b	16844 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa4>
   16aa4:	ldr	r3, [pc, #36]	; 16ad0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x330>
   16aa8:	ldr	r1, [pc, #36]	; 16ad4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x334>
   16aac:	add	r3, pc, r3
   16ab0:	ldr	r0, [pc, #32]	; 16ad8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x338>
   16ab4:	add	r3, r3, #1744	; 0x6d0
   16ab8:	ldr	r2, [pc, #28]	; 16adc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x33c>
   16abc:	add	r3, r3, #4
   16ac0:	add	r1, pc, r1
   16ac4:	add	r0, pc, r0
   16ac8:	bl	12528 <__assert_fail@plt>
   16acc:	bge	feac1580 <__bss_end__@@Base+0xfea8e4e0>
   16ad0:	andeq	fp, r0, r4, lsl r1
   16ad4:	ldrdeq	fp, [r0], -r8
   16ad8:	strdeq	fp, [r0], -r4
   16adc:	andeq	r0, r0, r5, lsl r1

00016ae0 <flatcc_json_printer_uint8_field@@Base>:
   16ae0:	add	r2, r2, #2
   16ae4:	ldr	ip, [r1, #8]
   16ae8:	lsl	r2, r2, #1
   16aec:	push	{r4, r5, r6, r7, r8, lr}
   16af0:	cmp	r2, ip
   16af4:	ldr	r5, [sp, #24]
   16af8:	ldrb	ip, [sp, #28]
   16afc:	blt	16b14 <flatcc_json_printer_uint8_field@@Base+0x34>
   16b00:	ldrb	r2, [r0, #29]
   16b04:	cmp	r2, #0
   16b08:	popeq	{r4, r5, r6, r7, r8, pc}
   16b0c:	mov	r6, ip
   16b10:	b	16b3c <flatcc_json_printer_uint8_field@@Base+0x5c>
   16b14:	ldr	lr, [r1, #4]
   16b18:	ldrh	r2, [lr, r2]
   16b1c:	cmp	r2, #0
   16b20:	beq	16b00 <flatcc_json_printer_uint8_field@@Base+0x20>
   16b24:	ldr	lr, [r1]
   16b28:	cmn	lr, r2
   16b2c:	beq	16b00 <flatcc_json_printer_uint8_field@@Base+0x20>
   16b30:	ldrb	r6, [lr, r2]
   16b34:	cmp	ip, r6
   16b38:	beq	16c50 <flatcc_json_printer_uint8_field@@Base+0x170>
   16b3c:	ldr	r2, [r1, #16]
   16b40:	mov	r7, r3
   16b44:	cmp	r2, #0
   16b48:	add	r2, r2, #1
   16b4c:	str	r2, [r1, #16]
   16b50:	ldrne	r2, [r0, #20]
   16b54:	movne	r1, #44	; 0x2c
   16b58:	addne	ip, r2, #1
   16b5c:	strne	ip, [r0, #20]
   16b60:	strbne	r1, [r2]
   16b64:	ldrb	r1, [r0, #25]
   16b68:	mov	r4, r0
   16b6c:	cmp	r1, #0
   16b70:	bne	16c60 <flatcc_json_printer_uint8_field@@Base+0x180>
   16b74:	ldr	r2, [r0, #20]
   16b78:	ldr	r3, [r0, #16]
   16b7c:	cmp	r2, r3
   16b80:	bcc	16b90 <flatcc_json_printer_uint8_field@@Base+0xb0>
   16b84:	ldr	r3, [r0, #44]	; 0x2c
   16b88:	blx	r3
   16b8c:	ldr	r2, [r4, #20]
   16b90:	mov	r3, #34	; 0x22
   16b94:	strb	r3, [r2]
   16b98:	ldrb	r3, [r4, #26]
   16b9c:	ldr	r0, [r4, #20]
   16ba0:	ldr	r2, [r4, #16]
   16ba4:	cmp	r3, #0
   16ba8:	addeq	r0, r0, #1
   16bac:	add	r3, r0, r5
   16bb0:	cmp	r2, r3
   16bb4:	str	r0, [r4, #20]
   16bb8:	bhi	16c34 <flatcc_json_printer_uint8_field@@Base+0x154>
   16bbc:	mov	r2, r5
   16bc0:	mov	r1, r7
   16bc4:	mov	r0, r4
   16bc8:	bl	14b18 <test_print@@Base+0x115c>
   16bcc:	ldr	r5, [r4, #20]
   16bd0:	mov	r3, #34	; 0x22
   16bd4:	strb	r3, [r5]
   16bd8:	ldr	r1, [r4, #20]
   16bdc:	ldrb	r3, [r4, #26]
   16be0:	clz	r3, r3
   16be4:	lsr	r3, r3, #5
   16be8:	add	r2, r1, r3
   16bec:	add	r2, r2, #1
   16bf0:	mov	r0, #58	; 0x3a
   16bf4:	str	r2, [r4, #20]
   16bf8:	strb	r0, [r1, r3]
   16bfc:	ldr	r3, [r4, #20]
   16c00:	mov	r2, #32
   16c04:	mov	r0, r6
   16c08:	strb	r2, [r3]
   16c0c:	ldrb	r3, [r4, #25]
   16c10:	ldr	r1, [r4, #20]
   16c14:	cmp	r3, #0
   16c18:	addne	r1, r1, #1
   16c1c:	str	r1, [r4, #20]
   16c20:	bl	14e04 <test_print@@Base+0x1448>
   16c24:	ldr	r3, [r4, #20]
   16c28:	add	r0, r3, r0
   16c2c:	str	r0, [r4, #20]
   16c30:	pop	{r4, r5, r6, r7, r8, pc}
   16c34:	mov	r2, r5
   16c38:	mov	r1, r7
   16c3c:	bl	12444 <memcpy@plt>
   16c40:	ldr	r3, [r4, #20]
   16c44:	add	r5, r3, r5
   16c48:	str	r5, [r4, #20]
   16c4c:	b	16bd0 <flatcc_json_printer_uint8_field@@Base+0xf0>
   16c50:	ldrb	r2, [r0, #28]
   16c54:	cmp	r2, #0
   16c58:	beq	16b3c <flatcc_json_printer_uint8_field@@Base+0x5c>
   16c5c:	pop	{r4, r5, r6, r7, r8, pc}
   16c60:	ldr	r3, [r0, #20]
   16c64:	mov	r2, #10
   16c68:	add	r1, r3, #1
   16c6c:	str	r1, [r0, #20]
   16c70:	strb	r2, [r3]
   16c74:	ldrb	r8, [r0, #25]
   16c78:	ldr	r2, [r0, #32]
   16c7c:	ldr	r0, [r0, #20]
   16c80:	ldr	r1, [r4, #16]
   16c84:	mul	r8, r2, r8
   16c88:	add	r3, r0, r8
   16c8c:	cmp	r1, r3
   16c90:	bcc	16cb0 <flatcc_json_printer_uint8_field@@Base+0x1d0>
   16c94:	mov	r2, r8
   16c98:	mov	r1, #32
   16c9c:	bl	124e0 <memset@plt>
   16ca0:	ldr	r2, [r4, #20]
   16ca4:	add	r2, r2, r8
   16ca8:	str	r2, [r4, #20]
   16cac:	b	16b90 <flatcc_json_printer_uint8_field@@Base+0xb0>
   16cb0:	mov	r1, r8
   16cb4:	mov	r0, r4
   16cb8:	bl	14bc8 <test_print@@Base+0x120c>
   16cbc:	ldr	r2, [r4, #20]
   16cc0:	b	16b90 <flatcc_json_printer_uint8_field@@Base+0xb0>

00016cc4 <flatcc_json_printer_uint16_field@@Base>:
   16cc4:	add	r2, r2, #2
   16cc8:	ldr	ip, [r1, #8]
   16ccc:	lsl	r2, r2, #1
   16cd0:	push	{r4, r5, r6, r7, r8, lr}
   16cd4:	cmp	r2, ip
   16cd8:	ldr	r5, [sp, #24]
   16cdc:	ldrh	ip, [sp, #28]
   16ce0:	blt	16cf8 <flatcc_json_printer_uint16_field@@Base+0x34>
   16ce4:	ldrb	r2, [r0, #29]
   16ce8:	cmp	r2, #0
   16cec:	popeq	{r4, r5, r6, r7, r8, pc}
   16cf0:	mov	r6, ip
   16cf4:	b	16d20 <flatcc_json_printer_uint16_field@@Base+0x5c>
   16cf8:	ldr	lr, [r1, #4]
   16cfc:	ldrh	r2, [lr, r2]
   16d00:	cmp	r2, #0
   16d04:	beq	16ce4 <flatcc_json_printer_uint16_field@@Base+0x20>
   16d08:	ldr	lr, [r1]
   16d0c:	cmn	lr, r2
   16d10:	beq	16ce4 <flatcc_json_printer_uint16_field@@Base+0x20>
   16d14:	ldrh	r6, [lr, r2]
   16d18:	cmp	ip, r6
   16d1c:	beq	16e34 <flatcc_json_printer_uint16_field@@Base+0x170>
   16d20:	ldr	r2, [r1, #16]
   16d24:	mov	r7, r3
   16d28:	cmp	r2, #0
   16d2c:	add	r2, r2, #1
   16d30:	str	r2, [r1, #16]
   16d34:	ldrne	r2, [r0, #20]
   16d38:	movne	r1, #44	; 0x2c
   16d3c:	addne	ip, r2, #1
   16d40:	strne	ip, [r0, #20]
   16d44:	strbne	r1, [r2]
   16d48:	ldrb	r1, [r0, #25]
   16d4c:	mov	r4, r0
   16d50:	cmp	r1, #0
   16d54:	bne	16e44 <flatcc_json_printer_uint16_field@@Base+0x180>
   16d58:	ldr	r2, [r0, #20]
   16d5c:	ldr	r3, [r0, #16]
   16d60:	cmp	r2, r3
   16d64:	bcc	16d74 <flatcc_json_printer_uint16_field@@Base+0xb0>
   16d68:	ldr	r3, [r0, #44]	; 0x2c
   16d6c:	blx	r3
   16d70:	ldr	r2, [r4, #20]
   16d74:	mov	r3, #34	; 0x22
   16d78:	strb	r3, [r2]
   16d7c:	ldrb	r3, [r4, #26]
   16d80:	ldr	r0, [r4, #20]
   16d84:	ldr	r2, [r4, #16]
   16d88:	cmp	r3, #0
   16d8c:	addeq	r0, r0, #1
   16d90:	add	r3, r0, r5
   16d94:	cmp	r2, r3
   16d98:	str	r0, [r4, #20]
   16d9c:	bhi	16e18 <flatcc_json_printer_uint16_field@@Base+0x154>
   16da0:	mov	r2, r5
   16da4:	mov	r1, r7
   16da8:	mov	r0, r4
   16dac:	bl	14b18 <test_print@@Base+0x115c>
   16db0:	ldr	r5, [r4, #20]
   16db4:	mov	r3, #34	; 0x22
   16db8:	strb	r3, [r5]
   16dbc:	ldr	r1, [r4, #20]
   16dc0:	ldrb	r3, [r4, #26]
   16dc4:	clz	r3, r3
   16dc8:	lsr	r3, r3, #5
   16dcc:	add	r2, r1, r3
   16dd0:	add	r2, r2, #1
   16dd4:	mov	r0, #58	; 0x3a
   16dd8:	str	r2, [r4, #20]
   16ddc:	strb	r0, [r1, r3]
   16de0:	ldr	r3, [r4, #20]
   16de4:	mov	r2, #32
   16de8:	mov	r0, r6
   16dec:	strb	r2, [r3]
   16df0:	ldrb	r3, [r4, #25]
   16df4:	ldr	r1, [r4, #20]
   16df8:	cmp	r3, #0
   16dfc:	addne	r1, r1, #1
   16e00:	str	r1, [r4, #20]
   16e04:	bl	13cb8 <test_print@@Base+0x2fc>
   16e08:	ldr	r3, [r4, #20]
   16e0c:	add	r0, r3, r0
   16e10:	str	r0, [r4, #20]
   16e14:	pop	{r4, r5, r6, r7, r8, pc}
   16e18:	mov	r2, r5
   16e1c:	mov	r1, r7
   16e20:	bl	12444 <memcpy@plt>
   16e24:	ldr	r3, [r4, #20]
   16e28:	add	r5, r3, r5
   16e2c:	str	r5, [r4, #20]
   16e30:	b	16db4 <flatcc_json_printer_uint16_field@@Base+0xf0>
   16e34:	ldrb	r2, [r0, #28]
   16e38:	cmp	r2, #0
   16e3c:	beq	16d20 <flatcc_json_printer_uint16_field@@Base+0x5c>
   16e40:	pop	{r4, r5, r6, r7, r8, pc}
   16e44:	ldr	r3, [r0, #20]
   16e48:	mov	r2, #10
   16e4c:	add	r1, r3, #1
   16e50:	str	r1, [r0, #20]
   16e54:	strb	r2, [r3]
   16e58:	ldrb	r8, [r0, #25]
   16e5c:	ldr	r2, [r0, #32]
   16e60:	ldr	r0, [r0, #20]
   16e64:	ldr	r1, [r4, #16]
   16e68:	mul	r8, r2, r8
   16e6c:	add	r3, r0, r8
   16e70:	cmp	r1, r3
   16e74:	bcc	16e94 <flatcc_json_printer_uint16_field@@Base+0x1d0>
   16e78:	mov	r2, r8
   16e7c:	mov	r1, #32
   16e80:	bl	124e0 <memset@plt>
   16e84:	ldr	r2, [r4, #20]
   16e88:	add	r2, r2, r8
   16e8c:	str	r2, [r4, #20]
   16e90:	b	16d74 <flatcc_json_printer_uint16_field@@Base+0xb0>
   16e94:	mov	r1, r8
   16e98:	mov	r0, r4
   16e9c:	bl	14bc8 <test_print@@Base+0x120c>
   16ea0:	ldr	r2, [r4, #20]
   16ea4:	b	16d74 <flatcc_json_printer_uint16_field@@Base+0xb0>

00016ea8 <flatcc_json_printer_uint32_field@@Base>:
   16ea8:	add	r2, r2, #2
   16eac:	ldr	ip, [r1, #8]
   16eb0:	lsl	r2, r2, #1
   16eb4:	push	{r4, r5, r6, r7, r8, lr}
   16eb8:	cmp	r2, ip
   16ebc:	ldr	r5, [sp, #24]
   16ec0:	blt	16ed8 <flatcc_json_printer_uint32_field@@Base+0x30>
   16ec4:	ldrb	r2, [r0, #29]
   16ec8:	cmp	r2, #0
   16ecc:	popeq	{r4, r5, r6, r7, r8, pc}
   16ed0:	ldr	r6, [sp, #28]
   16ed4:	b	16f04 <flatcc_json_printer_uint32_field@@Base+0x5c>
   16ed8:	ldr	ip, [r1, #4]
   16edc:	ldrh	r2, [ip, r2]
   16ee0:	cmp	r2, #0
   16ee4:	beq	16ec4 <flatcc_json_printer_uint32_field@@Base+0x1c>
   16ee8:	ldr	ip, [r1]
   16eec:	cmn	ip, r2
   16ef0:	beq	16ec4 <flatcc_json_printer_uint32_field@@Base+0x1c>
   16ef4:	ldr	r6, [ip, r2]
   16ef8:	ldr	r2, [sp, #28]
   16efc:	cmp	r2, r6
   16f00:	beq	17018 <flatcc_json_printer_uint32_field@@Base+0x170>
   16f04:	ldr	r2, [r1, #16]
   16f08:	mov	r7, r3
   16f0c:	cmp	r2, #0
   16f10:	add	r2, r2, #1
   16f14:	str	r2, [r1, #16]
   16f18:	ldrne	r2, [r0, #20]
   16f1c:	movne	r1, #44	; 0x2c
   16f20:	addne	ip, r2, #1
   16f24:	strne	ip, [r0, #20]
   16f28:	strbne	r1, [r2]
   16f2c:	ldrb	r1, [r0, #25]
   16f30:	mov	r4, r0
   16f34:	cmp	r1, #0
   16f38:	bne	17028 <flatcc_json_printer_uint32_field@@Base+0x180>
   16f3c:	ldr	r2, [r0, #20]
   16f40:	ldr	r3, [r0, #16]
   16f44:	cmp	r2, r3
   16f48:	bcc	16f58 <flatcc_json_printer_uint32_field@@Base+0xb0>
   16f4c:	ldr	r3, [r0, #44]	; 0x2c
   16f50:	blx	r3
   16f54:	ldr	r2, [r4, #20]
   16f58:	mov	r3, #34	; 0x22
   16f5c:	strb	r3, [r2]
   16f60:	ldrb	r3, [r4, #26]
   16f64:	ldr	r0, [r4, #20]
   16f68:	ldr	r2, [r4, #16]
   16f6c:	cmp	r3, #0
   16f70:	addeq	r0, r0, #1
   16f74:	add	r3, r0, r5
   16f78:	cmp	r2, r3
   16f7c:	str	r0, [r4, #20]
   16f80:	bhi	16ffc <flatcc_json_printer_uint32_field@@Base+0x154>
   16f84:	mov	r2, r5
   16f88:	mov	r1, r7
   16f8c:	mov	r0, r4
   16f90:	bl	14b18 <test_print@@Base+0x115c>
   16f94:	ldr	r5, [r4, #20]
   16f98:	mov	r3, #34	; 0x22
   16f9c:	strb	r3, [r5]
   16fa0:	ldr	r1, [r4, #20]
   16fa4:	ldrb	r3, [r4, #26]
   16fa8:	clz	r3, r3
   16fac:	lsr	r3, r3, #5
   16fb0:	add	r2, r1, r3
   16fb4:	add	r2, r2, #1
   16fb8:	mov	r0, #58	; 0x3a
   16fbc:	str	r2, [r4, #20]
   16fc0:	strb	r0, [r1, r3]
   16fc4:	ldr	r3, [r4, #20]
   16fc8:	mov	r2, #32
   16fcc:	mov	r0, r6
   16fd0:	strb	r2, [r3]
   16fd4:	ldrb	r3, [r4, #25]
   16fd8:	ldr	r1, [r4, #20]
   16fdc:	cmp	r3, #0
   16fe0:	addne	r1, r1, #1
   16fe4:	str	r1, [r4, #20]
   16fe8:	bl	13e3c <test_print@@Base+0x480>
   16fec:	ldr	r3, [r4, #20]
   16ff0:	add	r0, r3, r0
   16ff4:	str	r0, [r4, #20]
   16ff8:	pop	{r4, r5, r6, r7, r8, pc}
   16ffc:	mov	r2, r5
   17000:	mov	r1, r7
   17004:	bl	12444 <memcpy@plt>
   17008:	ldr	r3, [r4, #20]
   1700c:	add	r5, r3, r5
   17010:	str	r5, [r4, #20]
   17014:	b	16f98 <flatcc_json_printer_uint32_field@@Base+0xf0>
   17018:	ldrb	r2, [r0, #28]
   1701c:	cmp	r2, #0
   17020:	beq	16f04 <flatcc_json_printer_uint32_field@@Base+0x5c>
   17024:	pop	{r4, r5, r6, r7, r8, pc}
   17028:	ldr	r3, [r0, #20]
   1702c:	mov	r2, #10
   17030:	add	r1, r3, #1
   17034:	str	r1, [r0, #20]
   17038:	strb	r2, [r3]
   1703c:	ldrb	r8, [r0, #25]
   17040:	ldr	r2, [r0, #32]
   17044:	ldr	r0, [r0, #20]
   17048:	ldr	r1, [r4, #16]
   1704c:	mul	r8, r2, r8
   17050:	add	r3, r0, r8
   17054:	cmp	r1, r3
   17058:	bcc	17078 <flatcc_json_printer_uint32_field@@Base+0x1d0>
   1705c:	mov	r2, r8
   17060:	mov	r1, #32
   17064:	bl	124e0 <memset@plt>
   17068:	ldr	r2, [r4, #20]
   1706c:	add	r2, r2, r8
   17070:	str	r2, [r4, #20]
   17074:	b	16f58 <flatcc_json_printer_uint32_field@@Base+0xb0>
   17078:	mov	r1, r8
   1707c:	mov	r0, r4
   17080:	bl	14bc8 <test_print@@Base+0x120c>
   17084:	ldr	r2, [r4, #20]
   17088:	b	16f58 <flatcc_json_printer_uint32_field@@Base+0xb0>

0001708c <flatcc_json_printer_uint64_field@@Base>:
   1708c:	add	r2, r2, #2
   17090:	ldr	ip, [r1, #8]
   17094:	lsl	r2, r2, #1
   17098:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1709c:	cmp	r2, ip
   170a0:	ldr	r5, [sp, #32]
   170a4:	blt	170bc <flatcc_json_printer_uint64_field@@Base+0x30>
   170a8:	ldrb	r2, [r0, #29]
   170ac:	cmp	r2, #0
   170b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   170b4:	ldrd	r6, [sp, #40]	; 0x28
   170b8:	b	170ec <flatcc_json_printer_uint64_field@@Base+0x60>
   170bc:	ldr	ip, [r1, #4]
   170c0:	ldrh	r2, [ip, r2]
   170c4:	cmp	r2, #0
   170c8:	beq	170a8 <flatcc_json_printer_uint64_field@@Base+0x1c>
   170cc:	ldr	ip, [r1]
   170d0:	cmn	ip, r2
   170d4:	beq	170a8 <flatcc_json_printer_uint64_field@@Base+0x1c>
   170d8:	ldrd	r6, [ip, r2]
   170dc:	ldrd	r8, [sp, #40]	; 0x28
   170e0:	cmp	r9, r7
   170e4:	cmpeq	r8, r6
   170e8:	beq	17204 <flatcc_json_printer_uint64_field@@Base+0x178>
   170ec:	ldr	r2, [r1, #16]
   170f0:	mov	r8, r3
   170f4:	cmp	r2, #0
   170f8:	add	r2, r2, #1
   170fc:	str	r2, [r1, #16]
   17100:	ldrne	r2, [r0, #20]
   17104:	movne	r1, #44	; 0x2c
   17108:	addne	ip, r2, #1
   1710c:	strne	ip, [r0, #20]
   17110:	strbne	r1, [r2]
   17114:	ldrb	r1, [r0, #25]
   17118:	mov	r4, r0
   1711c:	cmp	r1, #0
   17120:	bne	17214 <flatcc_json_printer_uint64_field@@Base+0x188>
   17124:	ldr	r2, [r0, #20]
   17128:	ldr	r3, [r0, #16]
   1712c:	cmp	r2, r3
   17130:	bcc	17140 <flatcc_json_printer_uint64_field@@Base+0xb4>
   17134:	ldr	r3, [r0, #44]	; 0x2c
   17138:	blx	r3
   1713c:	ldr	r2, [r4, #20]
   17140:	mov	r3, #34	; 0x22
   17144:	strb	r3, [r2]
   17148:	ldrb	r3, [r4, #26]
   1714c:	ldr	r0, [r4, #20]
   17150:	ldr	r2, [r4, #16]
   17154:	cmp	r3, #0
   17158:	addeq	r0, r0, #1
   1715c:	add	r3, r0, r5
   17160:	cmp	r2, r3
   17164:	str	r0, [r4, #20]
   17168:	bhi	171e8 <flatcc_json_printer_uint64_field@@Base+0x15c>
   1716c:	mov	r2, r5
   17170:	mov	r1, r8
   17174:	mov	r0, r4
   17178:	bl	14b18 <test_print@@Base+0x115c>
   1717c:	ldr	r5, [r4, #20]
   17180:	mov	r3, #34	; 0x22
   17184:	strb	r3, [r5]
   17188:	ldr	r1, [r4, #20]
   1718c:	ldrb	r3, [r4, #26]
   17190:	clz	r3, r3
   17194:	lsr	r3, r3, #5
   17198:	add	r2, r1, r3
   1719c:	add	r2, r2, #1
   171a0:	mov	r0, #58	; 0x3a
   171a4:	str	r2, [r4, #20]
   171a8:	strb	r0, [r1, r3]
   171ac:	ldr	r3, [r4, #20]
   171b0:	mov	r2, #32
   171b4:	mov	r0, r6
   171b8:	strb	r2, [r3]
   171bc:	ldrb	r3, [r4, #25]
   171c0:	ldr	r2, [r4, #20]
   171c4:	mov	r1, r7
   171c8:	cmp	r3, #0
   171cc:	addne	r2, r2, #1
   171d0:	str	r2, [r4, #20]
   171d4:	bl	141a8 <test_print@@Base+0x7ec>
   171d8:	ldr	r3, [r4, #20]
   171dc:	add	r0, r3, r0
   171e0:	str	r0, [r4, #20]
   171e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   171e8:	mov	r2, r5
   171ec:	mov	r1, r8
   171f0:	bl	12444 <memcpy@plt>
   171f4:	ldr	r3, [r4, #20]
   171f8:	add	r5, r3, r5
   171fc:	str	r5, [r4, #20]
   17200:	b	17180 <flatcc_json_printer_uint64_field@@Base+0xf4>
   17204:	ldrb	r2, [r0, #28]
   17208:	cmp	r2, #0
   1720c:	beq	170ec <flatcc_json_printer_uint64_field@@Base+0x60>
   17210:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17214:	ldr	r3, [r0, #20]
   17218:	mov	r2, #10
   1721c:	add	r1, r3, #1
   17220:	str	r1, [r0, #20]
   17224:	strb	r2, [r3]
   17228:	ldrb	r3, [r0, #25]
   1722c:	ldr	r2, [r0, #32]
   17230:	ldr	r0, [r0, #20]
   17234:	ldr	r1, [r4, #16]
   17238:	mul	r9, r2, r3
   1723c:	add	r3, r0, r9
   17240:	cmp	r1, r3
   17244:	bcc	17264 <flatcc_json_printer_uint64_field@@Base+0x1d8>
   17248:	mov	r2, r9
   1724c:	mov	r1, #32
   17250:	bl	124e0 <memset@plt>
   17254:	ldr	r2, [r4, #20]
   17258:	add	r2, r2, r9
   1725c:	str	r2, [r4, #20]
   17260:	b	17140 <flatcc_json_printer_uint64_field@@Base+0xb4>
   17264:	mov	r1, r9
   17268:	mov	r0, r4
   1726c:	bl	14bc8 <test_print@@Base+0x120c>
   17270:	ldr	r2, [r4, #20]
   17274:	b	17140 <flatcc_json_printer_uint64_field@@Base+0xb4>

00017278 <flatcc_json_printer_int8_field@@Base>:
   17278:	add	r2, r2, #2
   1727c:	ldr	ip, [r1, #8]
   17280:	lsl	r2, r2, #1
   17284:	push	{r4, r5, r6, r7, r8, lr}
   17288:	cmp	r2, ip
   1728c:	ldr	r6, [sp, #24]
   17290:	ldrsb	ip, [sp, #28]
   17294:	blt	172ac <flatcc_json_printer_int8_field@@Base+0x34>
   17298:	ldrb	r2, [r0, #29]
   1729c:	cmp	r2, #0
   172a0:	popeq	{r4, r5, r6, r7, r8, pc}
   172a4:	mov	r5, ip
   172a8:	b	172d4 <flatcc_json_printer_int8_field@@Base+0x5c>
   172ac:	ldr	lr, [r1, #4]
   172b0:	ldrh	r2, [lr, r2]
   172b4:	cmp	r2, #0
   172b8:	beq	17298 <flatcc_json_printer_int8_field@@Base+0x20>
   172bc:	ldr	lr, [r1]
   172c0:	cmn	lr, r2
   172c4:	beq	17298 <flatcc_json_printer_int8_field@@Base+0x20>
   172c8:	ldrsb	r5, [lr, r2]
   172cc:	cmp	ip, r5
   172d0:	beq	1740c <flatcc_json_printer_int8_field@@Base+0x194>
   172d4:	ldr	r2, [r1, #16]
   172d8:	mov	r7, r3
   172dc:	cmp	r2, #0
   172e0:	add	r2, r2, #1
   172e4:	str	r2, [r1, #16]
   172e8:	ldrne	r2, [r0, #20]
   172ec:	movne	r1, #44	; 0x2c
   172f0:	addne	ip, r2, #1
   172f4:	strne	ip, [r0, #20]
   172f8:	strbne	r1, [r2]
   172fc:	ldrb	r1, [r0, #25]
   17300:	mov	r4, r0
   17304:	cmp	r1, #0
   17308:	bne	1741c <flatcc_json_printer_int8_field@@Base+0x1a4>
   1730c:	ldr	r2, [r0, #20]
   17310:	ldr	r3, [r0, #16]
   17314:	cmp	r2, r3
   17318:	bcc	17328 <flatcc_json_printer_int8_field@@Base+0xb0>
   1731c:	ldr	r3, [r0, #44]	; 0x2c
   17320:	blx	r3
   17324:	ldr	r2, [r4, #20]
   17328:	mov	r3, #34	; 0x22
   1732c:	strb	r3, [r2]
   17330:	ldrb	r3, [r4, #26]
   17334:	ldr	r0, [r4, #20]
   17338:	ldr	r2, [r4, #16]
   1733c:	cmp	r3, #0
   17340:	addeq	r0, r0, #1
   17344:	add	r3, r0, r6
   17348:	cmp	r2, r3
   1734c:	str	r0, [r4, #20]
   17350:	bhi	173f0 <flatcc_json_printer_int8_field@@Base+0x178>
   17354:	mov	r2, r6
   17358:	mov	r1, r7
   1735c:	mov	r0, r4
   17360:	bl	14b18 <test_print@@Base+0x115c>
   17364:	ldr	r6, [r4, #20]
   17368:	mov	r3, #34	; 0x22
   1736c:	strb	r3, [r6]
   17370:	ldr	r1, [r4, #20]
   17374:	ldrb	r3, [r4, #26]
   17378:	clz	r3, r3
   1737c:	lsr	r3, r3, #5
   17380:	add	r2, r1, r3
   17384:	mov	r0, #58	; 0x3a
   17388:	add	r2, r2, #1
   1738c:	str	r2, [r4, #20]
   17390:	strb	r0, [r1, r3]
   17394:	ldr	r3, [r4, #20]
   17398:	mov	r2, #32
   1739c:	lsr	r6, r5, #31
   173a0:	strb	r2, [r3]
   173a4:	ldrb	r3, [r4, #25]
   173a8:	ldr	r2, [r4, #20]
   173ac:	adds	r3, r3, #0
   173b0:	movne	r3, #1
   173b4:	cmp	r5, #0
   173b8:	rsblt	r5, r5, #0
   173bc:	add	r1, r2, r3
   173c0:	sxtblt	r5, r5
   173c4:	movlt	r0, #45	; 0x2d
   173c8:	str	r1, [r4, #20]
   173cc:	strblt	r0, [r2, r3]
   173d0:	addlt	r1, r1, #1
   173d4:	uxtb	r0, r5
   173d8:	bl	14e04 <test_print@@Base+0x1448>
   173dc:	ldr	r3, [r4, #20]
   173e0:	add	r0, r6, r0
   173e4:	add	r3, r3, r0
   173e8:	str	r3, [r4, #20]
   173ec:	pop	{r4, r5, r6, r7, r8, pc}
   173f0:	mov	r2, r6
   173f4:	mov	r1, r7
   173f8:	bl	12444 <memcpy@plt>
   173fc:	ldr	r3, [r4, #20]
   17400:	add	r6, r3, r6
   17404:	str	r6, [r4, #20]
   17408:	b	17368 <flatcc_json_printer_int8_field@@Base+0xf0>
   1740c:	ldrb	r2, [r0, #28]
   17410:	cmp	r2, #0
   17414:	beq	172d4 <flatcc_json_printer_int8_field@@Base+0x5c>
   17418:	pop	{r4, r5, r6, r7, r8, pc}
   1741c:	ldr	r3, [r0, #20]
   17420:	mov	r2, #10
   17424:	add	r1, r3, #1
   17428:	str	r1, [r0, #20]
   1742c:	strb	r2, [r3]
   17430:	ldrb	r8, [r0, #25]
   17434:	ldr	r2, [r0, #32]
   17438:	ldr	r0, [r0, #20]
   1743c:	ldr	r1, [r4, #16]
   17440:	mul	r8, r2, r8
   17444:	add	r3, r0, r8
   17448:	cmp	r1, r3
   1744c:	bcc	1746c <flatcc_json_printer_int8_field@@Base+0x1f4>
   17450:	mov	r2, r8
   17454:	mov	r1, #32
   17458:	bl	124e0 <memset@plt>
   1745c:	ldr	r2, [r4, #20]
   17460:	add	r2, r2, r8
   17464:	str	r2, [r4, #20]
   17468:	b	17328 <flatcc_json_printer_int8_field@@Base+0xb0>
   1746c:	mov	r1, r8
   17470:	mov	r0, r4
   17474:	bl	14bc8 <test_print@@Base+0x120c>
   17478:	ldr	r2, [r4, #20]
   1747c:	b	17328 <flatcc_json_printer_int8_field@@Base+0xb0>

00017480 <flatcc_json_printer_int16_field@@Base>:
   17480:	add	r2, r2, #2
   17484:	ldr	ip, [r1, #8]
   17488:	lsl	r2, r2, #1
   1748c:	push	{r4, r5, r6, r7, r8, lr}
   17490:	cmp	r2, ip
   17494:	ldr	r6, [sp, #24]
   17498:	ldrsh	ip, [sp, #28]
   1749c:	blt	174b4 <flatcc_json_printer_int16_field@@Base+0x34>
   174a0:	ldrb	r2, [r0, #29]
   174a4:	cmp	r2, #0
   174a8:	popeq	{r4, r5, r6, r7, r8, pc}
   174ac:	mov	r5, ip
   174b0:	b	174dc <flatcc_json_printer_int16_field@@Base+0x5c>
   174b4:	ldr	lr, [r1, #4]
   174b8:	ldrh	r2, [lr, r2]
   174bc:	cmp	r2, #0
   174c0:	beq	174a0 <flatcc_json_printer_int16_field@@Base+0x20>
   174c4:	ldr	lr, [r1]
   174c8:	cmn	lr, r2
   174cc:	beq	174a0 <flatcc_json_printer_int16_field@@Base+0x20>
   174d0:	ldrsh	r5, [lr, r2]
   174d4:	cmp	ip, r5
   174d8:	beq	17614 <flatcc_json_printer_int16_field@@Base+0x194>
   174dc:	ldr	r2, [r1, #16]
   174e0:	mov	r7, r3
   174e4:	cmp	r2, #0
   174e8:	add	r2, r2, #1
   174ec:	str	r2, [r1, #16]
   174f0:	ldrne	r2, [r0, #20]
   174f4:	movne	r1, #44	; 0x2c
   174f8:	addne	ip, r2, #1
   174fc:	strne	ip, [r0, #20]
   17500:	strbne	r1, [r2]
   17504:	ldrb	r1, [r0, #25]
   17508:	mov	r4, r0
   1750c:	cmp	r1, #0
   17510:	bne	17624 <flatcc_json_printer_int16_field@@Base+0x1a4>
   17514:	ldr	r2, [r0, #20]
   17518:	ldr	r3, [r0, #16]
   1751c:	cmp	r2, r3
   17520:	bcc	17530 <flatcc_json_printer_int16_field@@Base+0xb0>
   17524:	ldr	r3, [r0, #44]	; 0x2c
   17528:	blx	r3
   1752c:	ldr	r2, [r4, #20]
   17530:	mov	r3, #34	; 0x22
   17534:	strb	r3, [r2]
   17538:	ldrb	r3, [r4, #26]
   1753c:	ldr	r0, [r4, #20]
   17540:	ldr	r2, [r4, #16]
   17544:	cmp	r3, #0
   17548:	addeq	r0, r0, #1
   1754c:	add	r3, r0, r6
   17550:	cmp	r2, r3
   17554:	str	r0, [r4, #20]
   17558:	bhi	175f8 <flatcc_json_printer_int16_field@@Base+0x178>
   1755c:	mov	r2, r6
   17560:	mov	r1, r7
   17564:	mov	r0, r4
   17568:	bl	14b18 <test_print@@Base+0x115c>
   1756c:	ldr	r6, [r4, #20]
   17570:	mov	r3, #34	; 0x22
   17574:	strb	r3, [r6]
   17578:	ldr	r1, [r4, #20]
   1757c:	ldrb	r3, [r4, #26]
   17580:	clz	r3, r3
   17584:	lsr	r3, r3, #5
   17588:	add	r2, r1, r3
   1758c:	mov	r0, #58	; 0x3a
   17590:	add	r2, r2, #1
   17594:	str	r2, [r4, #20]
   17598:	strb	r0, [r1, r3]
   1759c:	ldr	r3, [r4, #20]
   175a0:	mov	r2, #32
   175a4:	lsr	r6, r5, #31
   175a8:	strb	r2, [r3]
   175ac:	ldrb	r3, [r4, #25]
   175b0:	ldr	r2, [r4, #20]
   175b4:	adds	r3, r3, #0
   175b8:	movne	r3, #1
   175bc:	cmp	r5, #0
   175c0:	rsblt	r5, r5, #0
   175c4:	add	r1, r2, r3
   175c8:	sxthlt	r5, r5
   175cc:	movlt	r0, #45	; 0x2d
   175d0:	str	r1, [r4, #20]
   175d4:	strblt	r0, [r2, r3]
   175d8:	addlt	r1, r1, #1
   175dc:	uxth	r0, r5
   175e0:	bl	13cb8 <test_print@@Base+0x2fc>
   175e4:	ldr	r3, [r4, #20]
   175e8:	add	r0, r6, r0
   175ec:	add	r3, r3, r0
   175f0:	str	r3, [r4, #20]
   175f4:	pop	{r4, r5, r6, r7, r8, pc}
   175f8:	mov	r2, r6
   175fc:	mov	r1, r7
   17600:	bl	12444 <memcpy@plt>
   17604:	ldr	r3, [r4, #20]
   17608:	add	r6, r3, r6
   1760c:	str	r6, [r4, #20]
   17610:	b	17570 <flatcc_json_printer_int16_field@@Base+0xf0>
   17614:	ldrb	r2, [r0, #28]
   17618:	cmp	r2, #0
   1761c:	beq	174dc <flatcc_json_printer_int16_field@@Base+0x5c>
   17620:	pop	{r4, r5, r6, r7, r8, pc}
   17624:	ldr	r3, [r0, #20]
   17628:	mov	r2, #10
   1762c:	add	r1, r3, #1
   17630:	str	r1, [r0, #20]
   17634:	strb	r2, [r3]
   17638:	ldrb	r8, [r0, #25]
   1763c:	ldr	r2, [r0, #32]
   17640:	ldr	r0, [r0, #20]
   17644:	ldr	r1, [r4, #16]
   17648:	mul	r8, r2, r8
   1764c:	add	r3, r0, r8
   17650:	cmp	r1, r3
   17654:	bcc	17674 <flatcc_json_printer_int16_field@@Base+0x1f4>
   17658:	mov	r2, r8
   1765c:	mov	r1, #32
   17660:	bl	124e0 <memset@plt>
   17664:	ldr	r2, [r4, #20]
   17668:	add	r2, r2, r8
   1766c:	str	r2, [r4, #20]
   17670:	b	17530 <flatcc_json_printer_int16_field@@Base+0xb0>
   17674:	mov	r1, r8
   17678:	mov	r0, r4
   1767c:	bl	14bc8 <test_print@@Base+0x120c>
   17680:	ldr	r2, [r4, #20]
   17684:	b	17530 <flatcc_json_printer_int16_field@@Base+0xb0>

00017688 <flatcc_json_printer_int32_field@@Base>:
   17688:	add	r2, r2, #2
   1768c:	ldr	ip, [r1, #8]
   17690:	lsl	r2, r2, #1
   17694:	push	{r4, r5, r6, r7, r8, lr}
   17698:	cmp	r2, ip
   1769c:	ldr	r6, [sp, #24]
   176a0:	blt	176b8 <flatcc_json_printer_int32_field@@Base+0x30>
   176a4:	ldrb	r2, [r0, #29]
   176a8:	cmp	r2, #0
   176ac:	popeq	{r4, r5, r6, r7, r8, pc}
   176b0:	ldr	r5, [sp, #28]
   176b4:	b	176e4 <flatcc_json_printer_int32_field@@Base+0x5c>
   176b8:	ldr	ip, [r1, #4]
   176bc:	ldrh	r2, [ip, r2]
   176c0:	cmp	r2, #0
   176c4:	beq	176a4 <flatcc_json_printer_int32_field@@Base+0x1c>
   176c8:	ldr	ip, [r1]
   176cc:	cmn	ip, r2
   176d0:	beq	176a4 <flatcc_json_printer_int32_field@@Base+0x1c>
   176d4:	ldr	r5, [ip, r2]
   176d8:	ldr	r2, [sp, #28]
   176dc:	cmp	r2, r5
   176e0:	beq	17818 <flatcc_json_printer_int32_field@@Base+0x190>
   176e4:	ldr	r2, [r1, #16]
   176e8:	mov	r7, r3
   176ec:	cmp	r2, #0
   176f0:	add	r2, r2, #1
   176f4:	str	r2, [r1, #16]
   176f8:	ldrne	r2, [r0, #20]
   176fc:	movne	r1, #44	; 0x2c
   17700:	addne	ip, r2, #1
   17704:	strne	ip, [r0, #20]
   17708:	strbne	r1, [r2]
   1770c:	ldrb	r1, [r0, #25]
   17710:	mov	r4, r0
   17714:	cmp	r1, #0
   17718:	bne	17828 <flatcc_json_printer_int32_field@@Base+0x1a0>
   1771c:	ldr	r2, [r0, #20]
   17720:	ldr	r3, [r0, #16]
   17724:	cmp	r2, r3
   17728:	bcc	17738 <flatcc_json_printer_int32_field@@Base+0xb0>
   1772c:	ldr	r3, [r0, #44]	; 0x2c
   17730:	blx	r3
   17734:	ldr	r2, [r4, #20]
   17738:	mov	r3, #34	; 0x22
   1773c:	strb	r3, [r2]
   17740:	ldrb	r3, [r4, #26]
   17744:	ldr	r0, [r4, #20]
   17748:	ldr	r2, [r4, #16]
   1774c:	cmp	r3, #0
   17750:	addeq	r0, r0, #1
   17754:	add	r3, r0, r6
   17758:	cmp	r2, r3
   1775c:	str	r0, [r4, #20]
   17760:	bhi	177fc <flatcc_json_printer_int32_field@@Base+0x174>
   17764:	mov	r2, r6
   17768:	mov	r1, r7
   1776c:	mov	r0, r4
   17770:	bl	14b18 <test_print@@Base+0x115c>
   17774:	ldr	r6, [r4, #20]
   17778:	mov	r3, #34	; 0x22
   1777c:	strb	r3, [r6]
   17780:	ldr	r1, [r4, #20]
   17784:	ldrb	r3, [r4, #26]
   17788:	clz	r3, r3
   1778c:	lsr	r3, r3, #5
   17790:	add	r2, r1, r3
   17794:	mov	r0, #58	; 0x3a
   17798:	add	r2, r2, #1
   1779c:	str	r2, [r4, #20]
   177a0:	strb	r0, [r1, r3]
   177a4:	ldr	r3, [r4, #20]
   177a8:	mov	r2, #32
   177ac:	lsr	r6, r5, #31
   177b0:	strb	r2, [r3]
   177b4:	ldrb	r3, [r4, #25]
   177b8:	ldr	r2, [r4, #20]
   177bc:	adds	r3, r3, #0
   177c0:	movne	r3, #1
   177c4:	cmp	r5, #0
   177c8:	add	r1, r2, r3
   177cc:	movlt	r0, #45	; 0x2d
   177d0:	rsblt	r5, r5, #0
   177d4:	str	r1, [r4, #20]
   177d8:	strblt	r0, [r2, r3]
   177dc:	addlt	r1, r1, #1
   177e0:	mov	r0, r5
   177e4:	bl	13e3c <test_print@@Base+0x480>
   177e8:	ldr	r3, [r4, #20]
   177ec:	add	r0, r6, r0
   177f0:	add	r3, r3, r0
   177f4:	str	r3, [r4, #20]
   177f8:	pop	{r4, r5, r6, r7, r8, pc}
   177fc:	mov	r2, r6
   17800:	mov	r1, r7
   17804:	bl	12444 <memcpy@plt>
   17808:	ldr	r3, [r4, #20]
   1780c:	add	r6, r3, r6
   17810:	str	r6, [r4, #20]
   17814:	b	17778 <flatcc_json_printer_int32_field@@Base+0xf0>
   17818:	ldrb	r2, [r0, #28]
   1781c:	cmp	r2, #0
   17820:	beq	176e4 <flatcc_json_printer_int32_field@@Base+0x5c>
   17824:	pop	{r4, r5, r6, r7, r8, pc}
   17828:	ldr	r3, [r0, #20]
   1782c:	mov	r2, #10
   17830:	add	r1, r3, #1
   17834:	str	r1, [r0, #20]
   17838:	strb	r2, [r3]
   1783c:	ldrb	r8, [r0, #25]
   17840:	ldr	r2, [r0, #32]
   17844:	ldr	r0, [r0, #20]
   17848:	ldr	r1, [r4, #16]
   1784c:	mul	r8, r2, r8
   17850:	add	r3, r0, r8
   17854:	cmp	r1, r3
   17858:	bcc	17878 <flatcc_json_printer_int32_field@@Base+0x1f0>
   1785c:	mov	r2, r8
   17860:	mov	r1, #32
   17864:	bl	124e0 <memset@plt>
   17868:	ldr	r2, [r4, #20]
   1786c:	add	r2, r2, r8
   17870:	str	r2, [r4, #20]
   17874:	b	17738 <flatcc_json_printer_int32_field@@Base+0xb0>
   17878:	mov	r1, r8
   1787c:	mov	r0, r4
   17880:	bl	14bc8 <test_print@@Base+0x120c>
   17884:	ldr	r2, [r4, #20]
   17888:	b	17738 <flatcc_json_printer_int32_field@@Base+0xb0>

0001788c <flatcc_json_printer_int64_field@@Base>:
   1788c:	add	r2, r2, #2
   17890:	ldr	ip, [r1, #8]
   17894:	lsl	r2, r2, #1
   17898:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1789c:	cmp	r2, ip
   178a0:	ldr	r5, [sp, #32]
   178a4:	blt	178bc <flatcc_json_printer_int64_field@@Base+0x30>
   178a8:	ldrb	r2, [r0, #29]
   178ac:	cmp	r2, #0
   178b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   178b4:	ldrd	r6, [sp, #40]	; 0x28
   178b8:	b	178ec <flatcc_json_printer_int64_field@@Base+0x60>
   178bc:	ldr	ip, [r1, #4]
   178c0:	ldrh	r2, [ip, r2]
   178c4:	cmp	r2, #0
   178c8:	beq	178a8 <flatcc_json_printer_int64_field@@Base+0x1c>
   178cc:	ldr	ip, [r1]
   178d0:	cmn	ip, r2
   178d4:	beq	178a8 <flatcc_json_printer_int64_field@@Base+0x1c>
   178d8:	ldrd	r6, [ip, r2]
   178dc:	ldrd	r8, [sp, #40]	; 0x28
   178e0:	cmp	r9, r7
   178e4:	cmpeq	r8, r6
   178e8:	beq	17a1c <flatcc_json_printer_int64_field@@Base+0x190>
   178ec:	ldr	r2, [r1, #16]
   178f0:	mov	r8, r3
   178f4:	cmp	r2, #0
   178f8:	add	r2, r2, #1
   178fc:	str	r2, [r1, #16]
   17900:	ldrne	r2, [r0, #20]
   17904:	movne	r1, #44	; 0x2c
   17908:	addne	ip, r2, #1
   1790c:	strne	ip, [r0, #20]
   17910:	strbne	r1, [r2]
   17914:	ldrb	r1, [r0, #25]
   17918:	mov	r4, r0
   1791c:	cmp	r1, #0
   17920:	bne	17a44 <flatcc_json_printer_int64_field@@Base+0x1b8>
   17924:	ldr	r2, [r0, #20]
   17928:	ldr	r3, [r0, #16]
   1792c:	cmp	r2, r3
   17930:	bcc	17940 <flatcc_json_printer_int64_field@@Base+0xb4>
   17934:	ldr	r3, [r0, #44]	; 0x2c
   17938:	blx	r3
   1793c:	ldr	r2, [r4, #20]
   17940:	mov	r3, #34	; 0x22
   17944:	strb	r3, [r2]
   17948:	ldrb	r3, [r4, #26]
   1794c:	ldr	r0, [r4, #20]
   17950:	ldr	r2, [r4, #16]
   17954:	cmp	r3, #0
   17958:	addeq	r0, r0, #1
   1795c:	add	r3, r0, r5
   17960:	cmp	r2, r3
   17964:	str	r0, [r4, #20]
   17968:	bhi	17a00 <flatcc_json_printer_int64_field@@Base+0x174>
   1796c:	mov	r2, r5
   17970:	mov	r1, r8
   17974:	mov	r0, r4
   17978:	bl	14b18 <test_print@@Base+0x115c>
   1797c:	ldr	r5, [r4, #20]
   17980:	mov	r3, #34	; 0x22
   17984:	strb	r3, [r5]
   17988:	ldr	r1, [r4, #20]
   1798c:	ldrb	r3, [r4, #26]
   17990:	clz	r3, r3
   17994:	lsr	r3, r3, #5
   17998:	add	r2, r1, r3
   1799c:	add	r2, r2, #1
   179a0:	mov	r0, #58	; 0x3a
   179a4:	str	r2, [r4, #20]
   179a8:	strb	r0, [r1, r3]
   179ac:	ldr	r3, [r4, #20]
   179b0:	mov	r2, #32
   179b4:	lsr	r5, r7, #31
   179b8:	strb	r2, [r3]
   179bc:	ldrb	r3, [r4, #25]
   179c0:	ldr	r1, [r4, #20]
   179c4:	adds	r3, r3, #0
   179c8:	movne	r3, #1
   179cc:	cmp	r6, #0
   179d0:	add	r2, r1, r3
   179d4:	sbcs	r0, r7, #0
   179d8:	str	r2, [r4, #20]
   179dc:	blt	17a2c <flatcc_json_printer_int64_field@@Base+0x1a0>
   179e0:	mov	r0, r6
   179e4:	mov	r1, r7
   179e8:	bl	141a8 <test_print@@Base+0x7ec>
   179ec:	ldr	r3, [r4, #20]
   179f0:	add	r0, r5, r0
   179f4:	add	r3, r3, r0
   179f8:	str	r3, [r4, #20]
   179fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17a00:	mov	r2, r5
   17a04:	mov	r1, r8
   17a08:	bl	12444 <memcpy@plt>
   17a0c:	ldr	r3, [r4, #20]
   17a10:	add	r5, r3, r5
   17a14:	str	r5, [r4, #20]
   17a18:	b	17980 <flatcc_json_printer_int64_field@@Base+0xf4>
   17a1c:	ldrb	r2, [r0, #28]
   17a20:	cmp	r2, #0
   17a24:	beq	178ec <flatcc_json_printer_int64_field@@Base+0x60>
   17a28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17a2c:	rsbs	r6, r6, #0
   17a30:	mov	r0, #45	; 0x2d
   17a34:	rsc	r7, r7, #0
   17a38:	add	r2, r2, #1
   17a3c:	strb	r0, [r1, r3]
   17a40:	b	179e0 <flatcc_json_printer_int64_field@@Base+0x154>
   17a44:	ldr	r3, [r0, #20]
   17a48:	mov	r2, #10
   17a4c:	add	r1, r3, #1
   17a50:	str	r1, [r0, #20]
   17a54:	strb	r2, [r3]
   17a58:	ldrb	r3, [r0, #25]
   17a5c:	ldr	r2, [r0, #32]
   17a60:	ldr	r0, [r0, #20]
   17a64:	ldr	r1, [r4, #16]
   17a68:	mul	r9, r2, r3
   17a6c:	add	r3, r0, r9
   17a70:	cmp	r1, r3
   17a74:	bcc	17a94 <flatcc_json_printer_int64_field@@Base+0x208>
   17a78:	mov	r2, r9
   17a7c:	mov	r1, #32
   17a80:	bl	124e0 <memset@plt>
   17a84:	ldr	r2, [r4, #20]
   17a88:	add	r2, r2, r9
   17a8c:	str	r2, [r4, #20]
   17a90:	b	17940 <flatcc_json_printer_int64_field@@Base+0xb4>
   17a94:	mov	r1, r9
   17a98:	mov	r0, r4
   17a9c:	bl	14bc8 <test_print@@Base+0x120c>
   17aa0:	ldr	r2, [r4, #20]
   17aa4:	b	17940 <flatcc_json_printer_int64_field@@Base+0xb4>

00017aa8 <flatcc_json_printer_bool_field@@Base>:
   17aa8:	add	r2, r2, #2
   17aac:	ldr	ip, [r1, #8]
   17ab0:	lsl	r2, r2, #1
   17ab4:	push	{r4, r5, r6, r7, r8, lr}
   17ab8:	cmp	r2, ip
   17abc:	ldr	r5, [sp, #24]
   17ac0:	ldrb	ip, [sp, #28]
   17ac4:	blt	17adc <flatcc_json_printer_bool_field@@Base+0x34>
   17ac8:	ldrb	r2, [r0, #29]
   17acc:	cmp	r2, #0
   17ad0:	popeq	{r4, r5, r6, r7, r8, pc}
   17ad4:	mov	r6, ip
   17ad8:	b	17b04 <flatcc_json_printer_bool_field@@Base+0x5c>
   17adc:	ldr	lr, [r1, #4]
   17ae0:	ldrh	r2, [lr, r2]
   17ae4:	cmp	r2, #0
   17ae8:	beq	17ac8 <flatcc_json_printer_bool_field@@Base+0x20>
   17aec:	ldr	lr, [r1]
   17af0:	cmn	lr, r2
   17af4:	beq	17ac8 <flatcc_json_printer_bool_field@@Base+0x20>
   17af8:	ldrb	r6, [lr, r2]
   17afc:	cmp	ip, r6
   17b00:	beq	17c18 <flatcc_json_printer_bool_field@@Base+0x170>
   17b04:	ldr	r2, [r1, #16]
   17b08:	mov	r7, r3
   17b0c:	cmp	r2, #0
   17b10:	add	r2, r2, #1
   17b14:	str	r2, [r1, #16]
   17b18:	ldrne	r2, [r0, #20]
   17b1c:	movne	r1, #44	; 0x2c
   17b20:	addne	ip, r2, #1
   17b24:	strne	ip, [r0, #20]
   17b28:	strbne	r1, [r2]
   17b2c:	ldrb	r1, [r0, #25]
   17b30:	mov	r4, r0
   17b34:	cmp	r1, #0
   17b38:	bne	17c28 <flatcc_json_printer_bool_field@@Base+0x180>
   17b3c:	ldr	r2, [r0, #20]
   17b40:	ldr	r3, [r0, #16]
   17b44:	cmp	r2, r3
   17b48:	bcc	17b58 <flatcc_json_printer_bool_field@@Base+0xb0>
   17b4c:	ldr	r3, [r0, #44]	; 0x2c
   17b50:	blx	r3
   17b54:	ldr	r2, [r4, #20]
   17b58:	mov	r3, #34	; 0x22
   17b5c:	strb	r3, [r2]
   17b60:	ldrb	r3, [r4, #26]
   17b64:	ldr	r0, [r4, #20]
   17b68:	ldr	r2, [r4, #16]
   17b6c:	cmp	r3, #0
   17b70:	addeq	r0, r0, #1
   17b74:	add	r3, r0, r5
   17b78:	cmp	r2, r3
   17b7c:	str	r0, [r4, #20]
   17b80:	bhi	17bfc <flatcc_json_printer_bool_field@@Base+0x154>
   17b84:	mov	r2, r5
   17b88:	mov	r1, r7
   17b8c:	mov	r0, r4
   17b90:	bl	14b18 <test_print@@Base+0x115c>
   17b94:	ldr	r5, [r4, #20]
   17b98:	mov	r3, #34	; 0x22
   17b9c:	strb	r3, [r5]
   17ba0:	ldr	r1, [r4, #20]
   17ba4:	ldrb	r3, [r4, #26]
   17ba8:	clz	r3, r3
   17bac:	lsr	r3, r3, #5
   17bb0:	add	r2, r1, r3
   17bb4:	add	r2, r2, #1
   17bb8:	mov	r0, #58	; 0x3a
   17bbc:	str	r2, [r4, #20]
   17bc0:	strb	r0, [r1, r3]
   17bc4:	ldr	r3, [r4, #20]
   17bc8:	mov	r2, #32
   17bcc:	mov	r0, r6
   17bd0:	strb	r2, [r3]
   17bd4:	ldrb	r3, [r4, #25]
   17bd8:	ldr	r1, [r4, #20]
   17bdc:	cmp	r3, #0
   17be0:	addne	r1, r1, #1
   17be4:	str	r1, [r4, #20]
   17be8:	bl	14ef4 <test_print@@Base+0x1538>
   17bec:	ldr	r3, [r4, #20]
   17bf0:	add	r0, r3, r0
   17bf4:	str	r0, [r4, #20]
   17bf8:	pop	{r4, r5, r6, r7, r8, pc}
   17bfc:	mov	r2, r5
   17c00:	mov	r1, r7
   17c04:	bl	12444 <memcpy@plt>
   17c08:	ldr	r3, [r4, #20]
   17c0c:	add	r5, r3, r5
   17c10:	str	r5, [r4, #20]
   17c14:	b	17b98 <flatcc_json_printer_bool_field@@Base+0xf0>
   17c18:	ldrb	r2, [r0, #28]
   17c1c:	cmp	r2, #0
   17c20:	beq	17b04 <flatcc_json_printer_bool_field@@Base+0x5c>
   17c24:	pop	{r4, r5, r6, r7, r8, pc}
   17c28:	ldr	r3, [r0, #20]
   17c2c:	mov	r2, #10
   17c30:	add	r1, r3, #1
   17c34:	str	r1, [r0, #20]
   17c38:	strb	r2, [r3]
   17c3c:	ldrb	r8, [r0, #25]
   17c40:	ldr	r2, [r0, #32]
   17c44:	ldr	r0, [r0, #20]
   17c48:	ldr	r1, [r4, #16]
   17c4c:	mul	r8, r2, r8
   17c50:	add	r3, r0, r8
   17c54:	cmp	r1, r3
   17c58:	bcc	17c78 <flatcc_json_printer_bool_field@@Base+0x1d0>
   17c5c:	mov	r2, r8
   17c60:	mov	r1, #32
   17c64:	bl	124e0 <memset@plt>
   17c68:	ldr	r2, [r4, #20]
   17c6c:	add	r2, r2, r8
   17c70:	str	r2, [r4, #20]
   17c74:	b	17b58 <flatcc_json_printer_bool_field@@Base+0xb0>
   17c78:	mov	r1, r8
   17c7c:	mov	r0, r4
   17c80:	bl	14bc8 <test_print@@Base+0x120c>
   17c84:	ldr	r2, [r4, #20]
   17c88:	b	17b58 <flatcc_json_printer_bool_field@@Base+0xb0>

00017c8c <flatcc_json_printer_float_field@@Base>:
   17c8c:	add	r2, r2, #2
   17c90:	ldr	ip, [r1, #8]
   17c94:	lsl	r2, r2, #1
   17c98:	push	{r4, r5, r6, r7, r8, lr}
   17c9c:	cmp	r2, ip
   17ca0:	vpush	{d8}
   17ca4:	ldr	r5, [sp, #32]
   17ca8:	blt	17cc0 <flatcc_json_printer_float_field@@Base+0x34>
   17cac:	ldrb	r2, [r0, #29]
   17cb0:	cmp	r2, #0
   17cb4:	beq	17dec <flatcc_json_printer_float_field@@Base+0x160>
   17cb8:	vmov.f32	s16, s0
   17cbc:	b	17cf8 <flatcc_json_printer_float_field@@Base+0x6c>
   17cc0:	ldr	ip, [r1, #4]
   17cc4:	ldrh	ip, [ip, r2]
   17cc8:	cmp	ip, #0
   17ccc:	beq	17cac <flatcc_json_printer_float_field@@Base+0x20>
   17cd0:	ldr	r2, [r1]
   17cd4:	adds	r2, r2, ip
   17cd8:	beq	17cac <flatcc_json_printer_float_field@@Base+0x20>
   17cdc:	vldr	s16, [r2]
   17ce0:	vcmp.f32	s0, s16
   17ce4:	vmrs	APSR_nzcv, fpscr
   17ce8:	bne	17cf8 <flatcc_json_printer_float_field@@Base+0x6c>
   17cec:	ldrb	r2, [r0, #28]
   17cf0:	cmp	r2, #0
   17cf4:	bne	17dec <flatcc_json_printer_float_field@@Base+0x160>
   17cf8:	ldr	r2, [r1, #16]
   17cfc:	mov	r6, r3
   17d00:	cmp	r2, #0
   17d04:	add	r2, r2, #1
   17d08:	str	r2, [r1, #16]
   17d0c:	ldrne	r2, [r0, #20]
   17d10:	movne	r1, #44	; 0x2c
   17d14:	addne	ip, r2, #1
   17d18:	strne	ip, [r0, #20]
   17d1c:	strbne	r1, [r2]
   17d20:	ldrb	r1, [r0, #25]
   17d24:	mov	r4, r0
   17d28:	cmp	r1, #0
   17d2c:	bne	17e10 <flatcc_json_printer_float_field@@Base+0x184>
   17d30:	ldr	r2, [r0, #20]
   17d34:	ldr	r3, [r0, #16]
   17d38:	cmp	r2, r3
   17d3c:	bcc	17d4c <flatcc_json_printer_float_field@@Base+0xc0>
   17d40:	ldr	r3, [r0, #44]	; 0x2c
   17d44:	blx	r3
   17d48:	ldr	r2, [r4, #20]
   17d4c:	mov	r3, #34	; 0x22
   17d50:	strb	r3, [r2]
   17d54:	ldrb	r3, [r4, #26]
   17d58:	ldr	r0, [r4, #20]
   17d5c:	ldr	r2, [r4, #16]
   17d60:	cmp	r3, #0
   17d64:	addeq	r0, r0, #1
   17d68:	add	r3, r0, r5
   17d6c:	cmp	r2, r3
   17d70:	str	r0, [r4, #20]
   17d74:	bhi	17df4 <flatcc_json_printer_float_field@@Base+0x168>
   17d78:	mov	r2, r5
   17d7c:	mov	r1, r6
   17d80:	mov	r0, r4
   17d84:	bl	14b18 <test_print@@Base+0x115c>
   17d88:	ldr	r5, [r4, #20]
   17d8c:	mov	r3, #34	; 0x22
   17d90:	strb	r3, [r5]
   17d94:	ldr	r1, [r4, #20]
   17d98:	ldrb	r3, [r4, #26]
   17d9c:	clz	r3, r3
   17da0:	lsr	r3, r3, #5
   17da4:	add	r2, r1, r3
   17da8:	add	r2, r2, #1
   17dac:	mov	r0, #58	; 0x3a
   17db0:	str	r2, [r4, #20]
   17db4:	strb	r0, [r1, r3]
   17db8:	ldr	r3, [r4, #20]
   17dbc:	mov	r2, #32
   17dc0:	vcvt.f64.f32	d0, s16
   17dc4:	strb	r2, [r3]
   17dc8:	ldrb	r3, [r4, #25]
   17dcc:	ldr	r0, [r4, #20]
   17dd0:	cmp	r3, #0
   17dd4:	addne	r0, r0, #1
   17dd8:	str	r0, [r4, #20]
   17ddc:	bl	151c0 <test_print@@Base+0x1804>
   17de0:	ldr	r3, [r4, #20]
   17de4:	add	r0, r3, r0
   17de8:	str	r0, [r4, #20]
   17dec:	vpop	{d8}
   17df0:	pop	{r4, r5, r6, r7, r8, pc}
   17df4:	mov	r2, r5
   17df8:	mov	r1, r6
   17dfc:	bl	12444 <memcpy@plt>
   17e00:	ldr	r3, [r4, #20]
   17e04:	add	r5, r3, r5
   17e08:	str	r5, [r4, #20]
   17e0c:	b	17d8c <flatcc_json_printer_float_field@@Base+0x100>
   17e10:	ldr	r3, [r0, #20]
   17e14:	mov	r2, #10
   17e18:	add	r1, r3, #1
   17e1c:	str	r1, [r0, #20]
   17e20:	strb	r2, [r3]
   17e24:	ldrb	r7, [r0, #25]
   17e28:	ldr	r2, [r0, #32]
   17e2c:	ldr	r0, [r0, #20]
   17e30:	ldr	r1, [r4, #16]
   17e34:	mul	r7, r2, r7
   17e38:	add	r3, r0, r7
   17e3c:	cmp	r1, r3
   17e40:	bcc	17e60 <flatcc_json_printer_float_field@@Base+0x1d4>
   17e44:	mov	r2, r7
   17e48:	mov	r1, #32
   17e4c:	bl	124e0 <memset@plt>
   17e50:	ldr	r2, [r4, #20]
   17e54:	add	r2, r2, r7
   17e58:	str	r2, [r4, #20]
   17e5c:	b	17d4c <flatcc_json_printer_float_field@@Base+0xc0>
   17e60:	mov	r1, r7
   17e64:	mov	r0, r4
   17e68:	bl	14bc8 <test_print@@Base+0x120c>
   17e6c:	ldr	r2, [r4, #20]
   17e70:	b	17d4c <flatcc_json_printer_float_field@@Base+0xc0>

00017e74 <flatcc_json_printer_double_field@@Base>:
   17e74:	add	r2, r2, #2
   17e78:	ldr	ip, [r1, #8]
   17e7c:	lsl	r2, r2, #1
   17e80:	push	{r4, r5, r6, r7, r8, lr}
   17e84:	cmp	r2, ip
   17e88:	vpush	{d8}
   17e8c:	ldr	r5, [sp, #32]
   17e90:	blt	17ea8 <flatcc_json_printer_double_field@@Base+0x34>
   17e94:	ldrb	r2, [r0, #29]
   17e98:	cmp	r2, #0
   17e9c:	beq	17fd4 <flatcc_json_printer_double_field@@Base+0x160>
   17ea0:	vmov.f64	d8, d0
   17ea4:	b	17ee0 <flatcc_json_printer_double_field@@Base+0x6c>
   17ea8:	ldr	ip, [r1, #4]
   17eac:	ldrh	ip, [ip, r2]
   17eb0:	cmp	ip, #0
   17eb4:	beq	17e94 <flatcc_json_printer_double_field@@Base+0x20>
   17eb8:	ldr	r2, [r1]
   17ebc:	adds	r2, r2, ip
   17ec0:	beq	17e94 <flatcc_json_printer_double_field@@Base+0x20>
   17ec4:	vldr	d8, [r2]
   17ec8:	vcmp.f64	d0, d8
   17ecc:	vmrs	APSR_nzcv, fpscr
   17ed0:	bne	17ee0 <flatcc_json_printer_double_field@@Base+0x6c>
   17ed4:	ldrb	r2, [r0, #28]
   17ed8:	cmp	r2, #0
   17edc:	bne	17fd4 <flatcc_json_printer_double_field@@Base+0x160>
   17ee0:	ldr	r2, [r1, #16]
   17ee4:	mov	r6, r3
   17ee8:	cmp	r2, #0
   17eec:	add	r2, r2, #1
   17ef0:	str	r2, [r1, #16]
   17ef4:	ldrne	r2, [r0, #20]
   17ef8:	movne	r1, #44	; 0x2c
   17efc:	addne	ip, r2, #1
   17f00:	strne	ip, [r0, #20]
   17f04:	strbne	r1, [r2]
   17f08:	ldrb	r1, [r0, #25]
   17f0c:	mov	r4, r0
   17f10:	cmp	r1, #0
   17f14:	bne	17ff8 <flatcc_json_printer_double_field@@Base+0x184>
   17f18:	ldr	r2, [r0, #20]
   17f1c:	ldr	r3, [r0, #16]
   17f20:	cmp	r2, r3
   17f24:	bcc	17f34 <flatcc_json_printer_double_field@@Base+0xc0>
   17f28:	ldr	r3, [r0, #44]	; 0x2c
   17f2c:	blx	r3
   17f30:	ldr	r2, [r4, #20]
   17f34:	mov	r3, #34	; 0x22
   17f38:	strb	r3, [r2]
   17f3c:	ldrb	r3, [r4, #26]
   17f40:	ldr	r0, [r4, #20]
   17f44:	ldr	r2, [r4, #16]
   17f48:	cmp	r3, #0
   17f4c:	addeq	r0, r0, #1
   17f50:	add	r3, r0, r5
   17f54:	cmp	r2, r3
   17f58:	str	r0, [r4, #20]
   17f5c:	bhi	17fdc <flatcc_json_printer_double_field@@Base+0x168>
   17f60:	mov	r2, r5
   17f64:	mov	r1, r6
   17f68:	mov	r0, r4
   17f6c:	bl	14b18 <test_print@@Base+0x115c>
   17f70:	ldr	r5, [r4, #20]
   17f74:	mov	r3, #34	; 0x22
   17f78:	strb	r3, [r5]
   17f7c:	ldr	r1, [r4, #20]
   17f80:	ldrb	r3, [r4, #26]
   17f84:	clz	r3, r3
   17f88:	lsr	r3, r3, #5
   17f8c:	add	r2, r1, r3
   17f90:	add	r2, r2, #1
   17f94:	mov	r0, #58	; 0x3a
   17f98:	str	r2, [r4, #20]
   17f9c:	strb	r0, [r1, r3]
   17fa0:	ldr	r3, [r4, #20]
   17fa4:	mov	r2, #32
   17fa8:	vmov.f64	d0, d8
   17fac:	strb	r2, [r3]
   17fb0:	ldrb	r3, [r4, #25]
   17fb4:	ldr	r0, [r4, #20]
   17fb8:	cmp	r3, #0
   17fbc:	addne	r0, r0, #1
   17fc0:	str	r0, [r4, #20]
   17fc4:	bl	151c0 <test_print@@Base+0x1804>
   17fc8:	ldr	r3, [r4, #20]
   17fcc:	add	r0, r3, r0
   17fd0:	str	r0, [r4, #20]
   17fd4:	vpop	{d8}
   17fd8:	pop	{r4, r5, r6, r7, r8, pc}
   17fdc:	mov	r2, r5
   17fe0:	mov	r1, r6
   17fe4:	bl	12444 <memcpy@plt>
   17fe8:	ldr	r3, [r4, #20]
   17fec:	add	r5, r3, r5
   17ff0:	str	r5, [r4, #20]
   17ff4:	b	17f74 <flatcc_json_printer_double_field@@Base+0x100>
   17ff8:	ldr	r3, [r0, #20]
   17ffc:	mov	r2, #10
   18000:	add	r1, r3, #1
   18004:	str	r1, [r0, #20]
   18008:	strb	r2, [r3]
   1800c:	ldrb	r7, [r0, #25]
   18010:	ldr	r2, [r0, #32]
   18014:	ldr	r0, [r0, #20]
   18018:	ldr	r1, [r4, #16]
   1801c:	mul	r7, r2, r7
   18020:	add	r3, r0, r7
   18024:	cmp	r1, r3
   18028:	bcc	18048 <flatcc_json_printer_double_field@@Base+0x1d4>
   1802c:	mov	r2, r7
   18030:	mov	r1, #32
   18034:	bl	124e0 <memset@plt>
   18038:	ldr	r2, [r4, #20]
   1803c:	add	r2, r2, r7
   18040:	str	r2, [r4, #20]
   18044:	b	17f34 <flatcc_json_printer_double_field@@Base+0xc0>
   18048:	mov	r1, r7
   1804c:	mov	r0, r4
   18050:	bl	14bc8 <test_print@@Base+0x120c>
   18054:	ldr	r2, [r4, #20]
   18058:	b	17f34 <flatcc_json_printer_double_field@@Base+0xc0>

0001805c <flatcc_json_printer_uint8_enum_field@@Base>:
   1805c:	add	r2, r2, #2
   18060:	ldr	ip, [r1, #8]
   18064:	lsl	r2, r2, #1
   18068:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1806c:	cmp	r2, ip
   18070:	ldr	r7, [sp, #32]
   18074:	ldrb	ip, [sp, #36]	; 0x24
   18078:	ldr	r5, [sp, #40]	; 0x28
   1807c:	blt	18094 <flatcc_json_printer_uint8_enum_field@@Base+0x38>
   18080:	ldrb	r2, [r0, #29]
   18084:	cmp	r2, #0
   18088:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1808c:	mov	r6, ip
   18090:	b	180bc <flatcc_json_printer_uint8_enum_field@@Base+0x60>
   18094:	ldr	lr, [r1, #4]
   18098:	ldrh	r2, [lr, r2]
   1809c:	cmp	r2, #0
   180a0:	beq	18080 <flatcc_json_printer_uint8_enum_field@@Base+0x24>
   180a4:	ldr	lr, [r1]
   180a8:	cmn	lr, r2
   180ac:	beq	18080 <flatcc_json_printer_uint8_enum_field@@Base+0x24>
   180b0:	ldrb	r6, [lr, r2]
   180b4:	cmp	ip, r6
   180b8:	beq	181f0 <flatcc_json_printer_uint8_enum_field@@Base+0x194>
   180bc:	ldr	r2, [r1, #16]
   180c0:	mov	r8, r3
   180c4:	cmp	r2, #0
   180c8:	add	r2, r2, #1
   180cc:	str	r2, [r1, #16]
   180d0:	ldrne	r2, [r0, #20]
   180d4:	movne	r1, #44	; 0x2c
   180d8:	addne	ip, r2, #1
   180dc:	strne	ip, [r0, #20]
   180e0:	strbne	r1, [r2]
   180e4:	ldrb	r1, [r0, #25]
   180e8:	mov	r4, r0
   180ec:	cmp	r1, #0
   180f0:	bne	18200 <flatcc_json_printer_uint8_enum_field@@Base+0x1a4>
   180f4:	ldr	r2, [r0, #20]
   180f8:	ldr	r3, [r0, #16]
   180fc:	cmp	r2, r3
   18100:	bcc	18110 <flatcc_json_printer_uint8_enum_field@@Base+0xb4>
   18104:	ldr	r3, [r0, #44]	; 0x2c
   18108:	blx	r3
   1810c:	ldr	r2, [r4, #20]
   18110:	mov	r3, #34	; 0x22
   18114:	strb	r3, [r2]
   18118:	ldrb	r3, [r4, #26]
   1811c:	ldr	r0, [r4, #20]
   18120:	ldr	r2, [r4, #16]
   18124:	cmp	r3, #0
   18128:	addeq	r0, r0, #1
   1812c:	add	r3, r0, r7
   18130:	cmp	r2, r3
   18134:	str	r0, [r4, #20]
   18138:	bhi	181d4 <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   1813c:	mov	r2, r7
   18140:	mov	r1, r8
   18144:	mov	r0, r4
   18148:	bl	14b18 <test_print@@Base+0x115c>
   1814c:	ldr	r7, [r4, #20]
   18150:	mov	r3, #34	; 0x22
   18154:	strb	r3, [r7]
   18158:	ldr	r1, [r4, #20]
   1815c:	ldrb	r3, [r4, #26]
   18160:	clz	r3, r3
   18164:	lsr	r3, r3, #5
   18168:	add	r2, r1, r3
   1816c:	add	r2, r2, #1
   18170:	mov	r0, #58	; 0x3a
   18174:	str	r2, [r4, #20]
   18178:	strb	r0, [r1, r3]
   1817c:	ldr	r3, [r4, #20]
   18180:	mov	r2, #32
   18184:	strb	r2, [r3]
   18188:	ldrb	r2, [r4, #25]
   1818c:	ldrb	r3, [r4, #27]
   18190:	ldr	r1, [r4, #20]
   18194:	cmp	r2, #0
   18198:	addne	r1, r1, #1
   1819c:	cmp	r3, #0
   181a0:	str	r1, [r4, #20]
   181a4:	bne	181bc <flatcc_json_printer_uint8_enum_field@@Base+0x160>
   181a8:	mov	r1, r6
   181ac:	mov	r0, r4
   181b0:	mov	r3, r5
   181b4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   181b8:	bx	r3
   181bc:	mov	r0, r6
   181c0:	bl	14e04 <test_print@@Base+0x1448>
   181c4:	ldr	r3, [r4, #20]
   181c8:	add	r0, r3, r0
   181cc:	str	r0, [r4, #20]
   181d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   181d4:	mov	r2, r7
   181d8:	mov	r1, r8
   181dc:	bl	12444 <memcpy@plt>
   181e0:	ldr	r3, [r4, #20]
   181e4:	add	r7, r3, r7
   181e8:	str	r7, [r4, #20]
   181ec:	b	18150 <flatcc_json_printer_uint8_enum_field@@Base+0xf4>
   181f0:	ldrb	r2, [r0, #28]
   181f4:	cmp	r2, #0
   181f8:	beq	180bc <flatcc_json_printer_uint8_enum_field@@Base+0x60>
   181fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18200:	ldr	r3, [r0, #20]
   18204:	mov	r2, #10
   18208:	add	r1, r3, #1
   1820c:	str	r1, [r0, #20]
   18210:	strb	r2, [r3]
   18214:	ldrb	r3, [r0, #25]
   18218:	ldr	r2, [r0, #32]
   1821c:	ldr	r0, [r0, #20]
   18220:	ldr	r1, [r4, #16]
   18224:	mul	r9, r2, r3
   18228:	add	r3, r0, r9
   1822c:	cmp	r1, r3
   18230:	bcc	18250 <flatcc_json_printer_uint8_enum_field@@Base+0x1f4>
   18234:	mov	r2, r9
   18238:	mov	r1, #32
   1823c:	bl	124e0 <memset@plt>
   18240:	ldr	r2, [r4, #20]
   18244:	add	r2, r2, r9
   18248:	str	r2, [r4, #20]
   1824c:	b	18110 <flatcc_json_printer_uint8_enum_field@@Base+0xb4>
   18250:	mov	r1, r9
   18254:	mov	r0, r4
   18258:	bl	14bc8 <test_print@@Base+0x120c>
   1825c:	ldr	r2, [r4, #20]
   18260:	b	18110 <flatcc_json_printer_uint8_enum_field@@Base+0xb4>

00018264 <flatcc_json_printer_uint16_enum_field@@Base>:
   18264:	add	r2, r2, #2
   18268:	ldr	ip, [r1, #8]
   1826c:	lsl	r2, r2, #1
   18270:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18274:	cmp	r2, ip
   18278:	ldr	r7, [sp, #32]
   1827c:	ldrh	ip, [sp, #36]	; 0x24
   18280:	ldr	r5, [sp, #40]	; 0x28
   18284:	blt	1829c <flatcc_json_printer_uint16_enum_field@@Base+0x38>
   18288:	ldrb	r2, [r0, #29]
   1828c:	cmp	r2, #0
   18290:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18294:	mov	r6, ip
   18298:	b	182c4 <flatcc_json_printer_uint16_enum_field@@Base+0x60>
   1829c:	ldr	lr, [r1, #4]
   182a0:	ldrh	r2, [lr, r2]
   182a4:	cmp	r2, #0
   182a8:	beq	18288 <flatcc_json_printer_uint16_enum_field@@Base+0x24>
   182ac:	ldr	lr, [r1]
   182b0:	cmn	lr, r2
   182b4:	beq	18288 <flatcc_json_printer_uint16_enum_field@@Base+0x24>
   182b8:	ldrh	r6, [lr, r2]
   182bc:	cmp	ip, r6
   182c0:	beq	183f8 <flatcc_json_printer_uint16_enum_field@@Base+0x194>
   182c4:	ldr	r2, [r1, #16]
   182c8:	mov	r8, r3
   182cc:	cmp	r2, #0
   182d0:	add	r2, r2, #1
   182d4:	str	r2, [r1, #16]
   182d8:	ldrne	r2, [r0, #20]
   182dc:	movne	r1, #44	; 0x2c
   182e0:	addne	ip, r2, #1
   182e4:	strne	ip, [r0, #20]
   182e8:	strbne	r1, [r2]
   182ec:	ldrb	r1, [r0, #25]
   182f0:	mov	r4, r0
   182f4:	cmp	r1, #0
   182f8:	bne	18408 <flatcc_json_printer_uint16_enum_field@@Base+0x1a4>
   182fc:	ldr	r2, [r0, #20]
   18300:	ldr	r3, [r0, #16]
   18304:	cmp	r2, r3
   18308:	bcc	18318 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   1830c:	ldr	r3, [r0, #44]	; 0x2c
   18310:	blx	r3
   18314:	ldr	r2, [r4, #20]
   18318:	mov	r3, #34	; 0x22
   1831c:	strb	r3, [r2]
   18320:	ldrb	r3, [r4, #26]
   18324:	ldr	r0, [r4, #20]
   18328:	ldr	r2, [r4, #16]
   1832c:	cmp	r3, #0
   18330:	addeq	r0, r0, #1
   18334:	add	r3, r0, r7
   18338:	cmp	r2, r3
   1833c:	str	r0, [r4, #20]
   18340:	bhi	183dc <flatcc_json_printer_uint16_enum_field@@Base+0x178>
   18344:	mov	r2, r7
   18348:	mov	r1, r8
   1834c:	mov	r0, r4
   18350:	bl	14b18 <test_print@@Base+0x115c>
   18354:	ldr	r7, [r4, #20]
   18358:	mov	r3, #34	; 0x22
   1835c:	strb	r3, [r7]
   18360:	ldr	r1, [r4, #20]
   18364:	ldrb	r3, [r4, #26]
   18368:	clz	r3, r3
   1836c:	lsr	r3, r3, #5
   18370:	add	r2, r1, r3
   18374:	add	r2, r2, #1
   18378:	mov	r0, #58	; 0x3a
   1837c:	str	r2, [r4, #20]
   18380:	strb	r0, [r1, r3]
   18384:	ldr	r3, [r4, #20]
   18388:	mov	r2, #32
   1838c:	strb	r2, [r3]
   18390:	ldrb	r2, [r4, #25]
   18394:	ldrb	r3, [r4, #27]
   18398:	ldr	r1, [r4, #20]
   1839c:	cmp	r2, #0
   183a0:	addne	r1, r1, #1
   183a4:	cmp	r3, #0
   183a8:	str	r1, [r4, #20]
   183ac:	bne	183c4 <flatcc_json_printer_uint16_enum_field@@Base+0x160>
   183b0:	mov	r1, r6
   183b4:	mov	r0, r4
   183b8:	mov	r3, r5
   183bc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   183c0:	bx	r3
   183c4:	mov	r0, r6
   183c8:	bl	13cb8 <test_print@@Base+0x2fc>
   183cc:	ldr	r3, [r4, #20]
   183d0:	add	r0, r3, r0
   183d4:	str	r0, [r4, #20]
   183d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   183dc:	mov	r2, r7
   183e0:	mov	r1, r8
   183e4:	bl	12444 <memcpy@plt>
   183e8:	ldr	r3, [r4, #20]
   183ec:	add	r7, r3, r7
   183f0:	str	r7, [r4, #20]
   183f4:	b	18358 <flatcc_json_printer_uint16_enum_field@@Base+0xf4>
   183f8:	ldrb	r2, [r0, #28]
   183fc:	cmp	r2, #0
   18400:	beq	182c4 <flatcc_json_printer_uint16_enum_field@@Base+0x60>
   18404:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18408:	ldr	r3, [r0, #20]
   1840c:	mov	r2, #10
   18410:	add	r1, r3, #1
   18414:	str	r1, [r0, #20]
   18418:	strb	r2, [r3]
   1841c:	ldrb	r3, [r0, #25]
   18420:	ldr	r2, [r0, #32]
   18424:	ldr	r0, [r0, #20]
   18428:	ldr	r1, [r4, #16]
   1842c:	mul	r9, r2, r3
   18430:	add	r3, r0, r9
   18434:	cmp	r1, r3
   18438:	bcc	18458 <flatcc_json_printer_uint16_enum_field@@Base+0x1f4>
   1843c:	mov	r2, r9
   18440:	mov	r1, #32
   18444:	bl	124e0 <memset@plt>
   18448:	ldr	r2, [r4, #20]
   1844c:	add	r2, r2, r9
   18450:	str	r2, [r4, #20]
   18454:	b	18318 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   18458:	mov	r1, r9
   1845c:	mov	r0, r4
   18460:	bl	14bc8 <test_print@@Base+0x120c>
   18464:	ldr	r2, [r4, #20]
   18468:	b	18318 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>

0001846c <flatcc_json_printer_uint32_enum_field@@Base>:
   1846c:	add	r2, r2, #2
   18470:	ldr	ip, [r1, #8]
   18474:	lsl	r2, r2, #1
   18478:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1847c:	cmp	r2, ip
   18480:	ldr	r7, [sp, #32]
   18484:	ldr	ip, [sp, #36]	; 0x24
   18488:	ldr	r5, [sp, #40]	; 0x28
   1848c:	blt	184a4 <flatcc_json_printer_uint32_enum_field@@Base+0x38>
   18490:	ldrb	r2, [r0, #29]
   18494:	cmp	r2, #0
   18498:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1849c:	mov	r6, ip
   184a0:	b	184cc <flatcc_json_printer_uint32_enum_field@@Base+0x60>
   184a4:	ldr	lr, [r1, #4]
   184a8:	ldrh	r2, [lr, r2]
   184ac:	cmp	r2, #0
   184b0:	beq	18490 <flatcc_json_printer_uint32_enum_field@@Base+0x24>
   184b4:	ldr	lr, [r1]
   184b8:	cmn	lr, r2
   184bc:	beq	18490 <flatcc_json_printer_uint32_enum_field@@Base+0x24>
   184c0:	ldr	r6, [lr, r2]
   184c4:	cmp	ip, r6
   184c8:	beq	18600 <flatcc_json_printer_uint32_enum_field@@Base+0x194>
   184cc:	ldr	r2, [r1, #16]
   184d0:	mov	r8, r3
   184d4:	cmp	r2, #0
   184d8:	add	r2, r2, #1
   184dc:	str	r2, [r1, #16]
   184e0:	ldrne	r2, [r0, #20]
   184e4:	movne	r1, #44	; 0x2c
   184e8:	addne	ip, r2, #1
   184ec:	strne	ip, [r0, #20]
   184f0:	strbne	r1, [r2]
   184f4:	ldrb	r1, [r0, #25]
   184f8:	mov	r4, r0
   184fc:	cmp	r1, #0
   18500:	bne	18610 <flatcc_json_printer_uint32_enum_field@@Base+0x1a4>
   18504:	ldr	r2, [r0, #20]
   18508:	ldr	r3, [r0, #16]
   1850c:	cmp	r2, r3
   18510:	bcc	18520 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   18514:	ldr	r3, [r0, #44]	; 0x2c
   18518:	blx	r3
   1851c:	ldr	r2, [r4, #20]
   18520:	mov	r3, #34	; 0x22
   18524:	strb	r3, [r2]
   18528:	ldrb	r3, [r4, #26]
   1852c:	ldr	r0, [r4, #20]
   18530:	ldr	r2, [r4, #16]
   18534:	cmp	r3, #0
   18538:	addeq	r0, r0, #1
   1853c:	add	r3, r0, r7
   18540:	cmp	r2, r3
   18544:	str	r0, [r4, #20]
   18548:	bhi	185e4 <flatcc_json_printer_uint32_enum_field@@Base+0x178>
   1854c:	mov	r2, r7
   18550:	mov	r1, r8
   18554:	mov	r0, r4
   18558:	bl	14b18 <test_print@@Base+0x115c>
   1855c:	ldr	r7, [r4, #20]
   18560:	mov	r3, #34	; 0x22
   18564:	strb	r3, [r7]
   18568:	ldr	r1, [r4, #20]
   1856c:	ldrb	r3, [r4, #26]
   18570:	clz	r3, r3
   18574:	lsr	r3, r3, #5
   18578:	add	r2, r1, r3
   1857c:	add	r2, r2, #1
   18580:	mov	r0, #58	; 0x3a
   18584:	str	r2, [r4, #20]
   18588:	strb	r0, [r1, r3]
   1858c:	ldr	r3, [r4, #20]
   18590:	mov	r2, #32
   18594:	strb	r2, [r3]
   18598:	ldrb	r2, [r4, #25]
   1859c:	ldrb	r3, [r4, #27]
   185a0:	ldr	r1, [r4, #20]
   185a4:	cmp	r2, #0
   185a8:	addne	r1, r1, #1
   185ac:	cmp	r3, #0
   185b0:	str	r1, [r4, #20]
   185b4:	bne	185cc <flatcc_json_printer_uint32_enum_field@@Base+0x160>
   185b8:	mov	r1, r6
   185bc:	mov	r0, r4
   185c0:	mov	r3, r5
   185c4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   185c8:	bx	r3
   185cc:	mov	r0, r6
   185d0:	bl	13e3c <test_print@@Base+0x480>
   185d4:	ldr	r3, [r4, #20]
   185d8:	add	r0, r3, r0
   185dc:	str	r0, [r4, #20]
   185e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   185e4:	mov	r2, r7
   185e8:	mov	r1, r8
   185ec:	bl	12444 <memcpy@plt>
   185f0:	ldr	r3, [r4, #20]
   185f4:	add	r7, r3, r7
   185f8:	str	r7, [r4, #20]
   185fc:	b	18560 <flatcc_json_printer_uint32_enum_field@@Base+0xf4>
   18600:	ldrb	r2, [r0, #28]
   18604:	cmp	r2, #0
   18608:	beq	184cc <flatcc_json_printer_uint32_enum_field@@Base+0x60>
   1860c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18610:	ldr	r3, [r0, #20]
   18614:	mov	r2, #10
   18618:	add	r1, r3, #1
   1861c:	str	r1, [r0, #20]
   18620:	strb	r2, [r3]
   18624:	ldrb	r3, [r0, #25]
   18628:	ldr	r2, [r0, #32]
   1862c:	ldr	r0, [r0, #20]
   18630:	ldr	r1, [r4, #16]
   18634:	mul	r9, r2, r3
   18638:	add	r3, r0, r9
   1863c:	cmp	r1, r3
   18640:	bcc	18660 <flatcc_json_printer_uint32_enum_field@@Base+0x1f4>
   18644:	mov	r2, r9
   18648:	mov	r1, #32
   1864c:	bl	124e0 <memset@plt>
   18650:	ldr	r2, [r4, #20]
   18654:	add	r2, r2, r9
   18658:	str	r2, [r4, #20]
   1865c:	b	18520 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   18660:	mov	r1, r9
   18664:	mov	r0, r4
   18668:	bl	14bc8 <test_print@@Base+0x120c>
   1866c:	ldr	r2, [r4, #20]
   18670:	b	18520 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>

00018674 <flatcc_json_printer_uint64_enum_field@@Base>:
   18674:	add	r2, r2, #2
   18678:	ldr	ip, [r1, #8]
   1867c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18680:	lsl	r2, r2, #1
   18684:	sub	sp, sp, #4
   18688:	cmp	r2, ip
   1868c:	ldr	r8, [sp, #40]	; 0x28
   18690:	ldrd	sl, [sp, #48]	; 0x30
   18694:	ldr	r5, [sp, #56]	; 0x38
   18698:	blt	186b4 <flatcc_json_printer_uint64_enum_field@@Base+0x40>
   1869c:	ldrb	r2, [r0, #29]
   186a0:	cmp	r2, #0
   186a4:	beq	18800 <flatcc_json_printer_uint64_enum_field@@Base+0x18c>
   186a8:	mov	r6, sl
   186ac:	mov	r7, fp
   186b0:	b	186e0 <flatcc_json_printer_uint64_enum_field@@Base+0x6c>
   186b4:	ldr	ip, [r1, #4]
   186b8:	ldrh	r2, [ip, r2]
   186bc:	cmp	r2, #0
   186c0:	beq	1869c <flatcc_json_printer_uint64_enum_field@@Base+0x28>
   186c4:	ldr	ip, [r1]
   186c8:	cmn	ip, r2
   186cc:	beq	1869c <flatcc_json_printer_uint64_enum_field@@Base+0x28>
   186d0:	ldrd	r6, [ip, r2]
   186d4:	cmp	fp, r7
   186d8:	cmpeq	sl, r6
   186dc:	beq	18824 <flatcc_json_printer_uint64_enum_field@@Base+0x1b0>
   186e0:	ldr	r2, [r1, #16]
   186e4:	mov	r9, r3
   186e8:	cmp	r2, #0
   186ec:	add	r2, r2, #1
   186f0:	str	r2, [r1, #16]
   186f4:	ldrne	r2, [r0, #20]
   186f8:	movne	r1, #44	; 0x2c
   186fc:	addne	ip, r2, #1
   18700:	strne	ip, [r0, #20]
   18704:	strbne	r1, [r2]
   18708:	ldrb	r1, [r0, #25]
   1870c:	mov	r4, r0
   18710:	cmp	r1, #0
   18714:	bne	18834 <flatcc_json_printer_uint64_enum_field@@Base+0x1c0>
   18718:	ldr	r2, [r0, #20]
   1871c:	ldr	r3, [r0, #16]
   18720:	cmp	r2, r3
   18724:	bcc	18734 <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   18728:	ldr	r3, [r0, #44]	; 0x2c
   1872c:	blx	r3
   18730:	ldr	r2, [r4, #20]
   18734:	mov	r3, #34	; 0x22
   18738:	strb	r3, [r2]
   1873c:	ldrb	r3, [r4, #26]
   18740:	ldr	r0, [r4, #20]
   18744:	ldr	r2, [r4, #16]
   18748:	cmp	r3, #0
   1874c:	addeq	r0, r0, #1
   18750:	add	r3, r0, r8
   18754:	cmp	r2, r3
   18758:	str	r0, [r4, #20]
   1875c:	bhi	18808 <flatcc_json_printer_uint64_enum_field@@Base+0x194>
   18760:	mov	r2, r8
   18764:	mov	r1, r9
   18768:	mov	r0, r4
   1876c:	bl	14b18 <test_print@@Base+0x115c>
   18770:	ldr	r8, [r4, #20]
   18774:	mov	r3, #34	; 0x22
   18778:	strb	r3, [r8]
   1877c:	ldr	r1, [r4, #20]
   18780:	ldrb	r3, [r4, #26]
   18784:	clz	r3, r3
   18788:	lsr	r3, r3, #5
   1878c:	add	r2, r1, r3
   18790:	add	r2, r2, #1
   18794:	mov	r0, #58	; 0x3a
   18798:	str	r2, [r4, #20]
   1879c:	strb	r0, [r1, r3]
   187a0:	ldr	r3, [r4, #20]
   187a4:	mov	r2, #32
   187a8:	strb	r2, [r3]
   187ac:	ldrb	r1, [r4, #25]
   187b0:	ldrb	r3, [r4, #27]
   187b4:	ldr	r2, [r4, #20]
   187b8:	cmp	r1, #0
   187bc:	addne	r2, r2, #1
   187c0:	cmp	r3, #0
   187c4:	str	r2, [r4, #20]
   187c8:	bne	187e8 <flatcc_json_printer_uint64_enum_field@@Base+0x174>
   187cc:	mov	r2, r6
   187d0:	mov	r3, r7
   187d4:	mov	r0, r4
   187d8:	mov	r1, r5
   187dc:	add	sp, sp, #4
   187e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187e4:	bx	r1
   187e8:	mov	r0, r6
   187ec:	mov	r1, r7
   187f0:	bl	141a8 <test_print@@Base+0x7ec>
   187f4:	ldr	r3, [r4, #20]
   187f8:	add	r0, r3, r0
   187fc:	str	r0, [r4, #20]
   18800:	add	sp, sp, #4
   18804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18808:	mov	r2, r8
   1880c:	mov	r1, r9
   18810:	bl	12444 <memcpy@plt>
   18814:	ldr	r3, [r4, #20]
   18818:	add	r8, r3, r8
   1881c:	str	r8, [r4, #20]
   18820:	b	18774 <flatcc_json_printer_uint64_enum_field@@Base+0x100>
   18824:	ldrb	r2, [r0, #28]
   18828:	cmp	r2, #0
   1882c:	beq	186e0 <flatcc_json_printer_uint64_enum_field@@Base+0x6c>
   18830:	b	18800 <flatcc_json_printer_uint64_enum_field@@Base+0x18c>
   18834:	ldr	r3, [r0, #20]
   18838:	mov	r2, #10
   1883c:	add	r1, r3, #1
   18840:	str	r1, [r0, #20]
   18844:	strb	r2, [r3]
   18848:	ldrb	r3, [r0, #25]
   1884c:	ldr	r2, [r0, #32]
   18850:	ldr	r0, [r0, #20]
   18854:	ldr	r1, [r4, #16]
   18858:	mul	sl, r2, r3
   1885c:	add	r3, r0, sl
   18860:	cmp	r1, r3
   18864:	bcc	18884 <flatcc_json_printer_uint64_enum_field@@Base+0x210>
   18868:	mov	r2, sl
   1886c:	mov	r1, #32
   18870:	bl	124e0 <memset@plt>
   18874:	ldr	r2, [r4, #20]
   18878:	add	r2, r2, sl
   1887c:	str	r2, [r4, #20]
   18880:	b	18734 <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   18884:	mov	r1, sl
   18888:	mov	r0, r4
   1888c:	bl	14bc8 <test_print@@Base+0x120c>
   18890:	ldr	r2, [r4, #20]
   18894:	b	18734 <flatcc_json_printer_uint64_enum_field@@Base+0xc0>

00018898 <flatcc_json_printer_int8_enum_field@@Base>:
   18898:	add	r2, r2, #2
   1889c:	ldr	ip, [r1, #8]
   188a0:	lsl	r2, r2, #1
   188a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   188a8:	cmp	r2, ip
   188ac:	ldr	r7, [sp, #32]
   188b0:	ldrsb	ip, [sp, #36]	; 0x24
   188b4:	ldr	r6, [sp, #40]	; 0x28
   188b8:	blt	188d0 <flatcc_json_printer_int8_enum_field@@Base+0x38>
   188bc:	ldrb	r2, [r0, #29]
   188c0:	cmp	r2, #0
   188c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   188c8:	mov	r5, ip
   188cc:	b	188f8 <flatcc_json_printer_int8_enum_field@@Base+0x60>
   188d0:	ldr	lr, [r1, #4]
   188d4:	ldrh	r2, [lr, r2]
   188d8:	cmp	r2, #0
   188dc:	beq	188bc <flatcc_json_printer_int8_enum_field@@Base+0x24>
   188e0:	ldr	lr, [r1]
   188e4:	cmn	lr, r2
   188e8:	beq	188bc <flatcc_json_printer_int8_enum_field@@Base+0x24>
   188ec:	ldrsb	r5, [lr, r2]
   188f0:	cmp	ip, r5
   188f4:	beq	18a50 <flatcc_json_printer_int8_enum_field@@Base+0x1b8>
   188f8:	ldr	r2, [r1, #16]
   188fc:	mov	r8, r3
   18900:	cmp	r2, #0
   18904:	add	r2, r2, #1
   18908:	str	r2, [r1, #16]
   1890c:	ldrne	r2, [r0, #20]
   18910:	movne	r1, #44	; 0x2c
   18914:	addne	ip, r2, #1
   18918:	strne	ip, [r0, #20]
   1891c:	strbne	r1, [r2]
   18920:	ldrb	r1, [r0, #25]
   18924:	mov	r4, r0
   18928:	cmp	r1, #0
   1892c:	bne	18a60 <flatcc_json_printer_int8_enum_field@@Base+0x1c8>
   18930:	ldr	r2, [r0, #20]
   18934:	ldr	r3, [r0, #16]
   18938:	cmp	r2, r3
   1893c:	bcc	1894c <flatcc_json_printer_int8_enum_field@@Base+0xb4>
   18940:	ldr	r3, [r0, #44]	; 0x2c
   18944:	blx	r3
   18948:	ldr	r2, [r4, #20]
   1894c:	mov	r3, #34	; 0x22
   18950:	strb	r3, [r2]
   18954:	ldrb	r3, [r4, #26]
   18958:	ldr	r0, [r4, #20]
   1895c:	ldr	r2, [r4, #16]
   18960:	cmp	r3, #0
   18964:	addeq	r0, r0, #1
   18968:	add	r3, r0, r7
   1896c:	cmp	r2, r3
   18970:	str	r0, [r4, #20]
   18974:	bhi	18a20 <flatcc_json_printer_int8_enum_field@@Base+0x188>
   18978:	mov	r2, r7
   1897c:	mov	r1, r8
   18980:	mov	r0, r4
   18984:	bl	14b18 <test_print@@Base+0x115c>
   18988:	ldr	r7, [r4, #20]
   1898c:	mov	r3, #34	; 0x22
   18990:	strb	r3, [r7]
   18994:	ldr	r1, [r4, #20]
   18998:	ldrb	r3, [r4, #26]
   1899c:	clz	r3, r3
   189a0:	lsr	r3, r3, #5
   189a4:	add	r2, r1, r3
   189a8:	add	r2, r2, #1
   189ac:	mov	r0, #58	; 0x3a
   189b0:	str	r2, [r4, #20]
   189b4:	strb	r0, [r1, r3]
   189b8:	ldr	r3, [r4, #20]
   189bc:	mov	r2, #32
   189c0:	strb	r2, [r3]
   189c4:	ldrb	r3, [r4, #25]
   189c8:	ldrb	r0, [r4, #27]
   189cc:	ldr	r2, [r4, #20]
   189d0:	adds	r3, r3, #0
   189d4:	movne	r3, #1
   189d8:	add	r1, r2, r3
   189dc:	cmp	r0, #0
   189e0:	str	r1, [r4, #20]
   189e4:	beq	18a3c <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   189e8:	cmp	r5, #0
   189ec:	lsr	r6, r5, #31
   189f0:	rsblt	r5, r5, #0
   189f4:	movlt	r0, #45	; 0x2d
   189f8:	sxtblt	r5, r5
   189fc:	strblt	r0, [r2, r3]
   18a00:	addlt	r1, r1, #1
   18a04:	uxtb	r0, r5
   18a08:	bl	14e04 <test_print@@Base+0x1448>
   18a0c:	ldr	r3, [r4, #20]
   18a10:	add	r0, r6, r0
   18a14:	add	r3, r3, r0
   18a18:	str	r3, [r4, #20]
   18a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18a20:	mov	r2, r7
   18a24:	mov	r1, r8
   18a28:	bl	12444 <memcpy@plt>
   18a2c:	ldr	r3, [r4, #20]
   18a30:	add	r7, r3, r7
   18a34:	str	r7, [r4, #20]
   18a38:	b	1898c <flatcc_json_printer_int8_enum_field@@Base+0xf4>
   18a3c:	mov	r1, r5
   18a40:	mov	r0, r4
   18a44:	mov	r3, r6
   18a48:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   18a4c:	bx	r3
   18a50:	ldrb	r2, [r0, #28]
   18a54:	cmp	r2, #0
   18a58:	beq	188f8 <flatcc_json_printer_int8_enum_field@@Base+0x60>
   18a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18a60:	ldr	r3, [r0, #20]
   18a64:	mov	r2, #10
   18a68:	add	r1, r3, #1
   18a6c:	str	r1, [r0, #20]
   18a70:	strb	r2, [r3]
   18a74:	ldrb	r3, [r0, #25]
   18a78:	ldr	r2, [r0, #32]
   18a7c:	ldr	r0, [r0, #20]
   18a80:	ldr	r1, [r4, #16]
   18a84:	mul	r9, r2, r3
   18a88:	add	r3, r0, r9
   18a8c:	cmp	r1, r3
   18a90:	bcc	18ab0 <flatcc_json_printer_int8_enum_field@@Base+0x218>
   18a94:	mov	r2, r9
   18a98:	mov	r1, #32
   18a9c:	bl	124e0 <memset@plt>
   18aa0:	ldr	r2, [r4, #20]
   18aa4:	add	r2, r2, r9
   18aa8:	str	r2, [r4, #20]
   18aac:	b	1894c <flatcc_json_printer_int8_enum_field@@Base+0xb4>
   18ab0:	mov	r1, r9
   18ab4:	mov	r0, r4
   18ab8:	bl	14bc8 <test_print@@Base+0x120c>
   18abc:	ldr	r2, [r4, #20]
   18ac0:	b	1894c <flatcc_json_printer_int8_enum_field@@Base+0xb4>

00018ac4 <flatcc_json_printer_int16_enum_field@@Base>:
   18ac4:	add	r2, r2, #2
   18ac8:	ldr	ip, [r1, #8]
   18acc:	lsl	r2, r2, #1
   18ad0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18ad4:	cmp	r2, ip
   18ad8:	ldr	r7, [sp, #32]
   18adc:	ldrsh	ip, [sp, #36]	; 0x24
   18ae0:	ldr	r6, [sp, #40]	; 0x28
   18ae4:	blt	18afc <flatcc_json_printer_int16_enum_field@@Base+0x38>
   18ae8:	ldrb	r2, [r0, #29]
   18aec:	cmp	r2, #0
   18af0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18af4:	mov	r5, ip
   18af8:	b	18b24 <flatcc_json_printer_int16_enum_field@@Base+0x60>
   18afc:	ldr	lr, [r1, #4]
   18b00:	ldrh	r2, [lr, r2]
   18b04:	cmp	r2, #0
   18b08:	beq	18ae8 <flatcc_json_printer_int16_enum_field@@Base+0x24>
   18b0c:	ldr	lr, [r1]
   18b10:	cmn	lr, r2
   18b14:	beq	18ae8 <flatcc_json_printer_int16_enum_field@@Base+0x24>
   18b18:	ldrsh	r5, [lr, r2]
   18b1c:	cmp	ip, r5
   18b20:	beq	18c7c <flatcc_json_printer_int16_enum_field@@Base+0x1b8>
   18b24:	ldr	r2, [r1, #16]
   18b28:	mov	r8, r3
   18b2c:	cmp	r2, #0
   18b30:	add	r2, r2, #1
   18b34:	str	r2, [r1, #16]
   18b38:	ldrne	r2, [r0, #20]
   18b3c:	movne	r1, #44	; 0x2c
   18b40:	addne	ip, r2, #1
   18b44:	strne	ip, [r0, #20]
   18b48:	strbne	r1, [r2]
   18b4c:	ldrb	r1, [r0, #25]
   18b50:	mov	r4, r0
   18b54:	cmp	r1, #0
   18b58:	bne	18c8c <flatcc_json_printer_int16_enum_field@@Base+0x1c8>
   18b5c:	ldr	r2, [r0, #20]
   18b60:	ldr	r3, [r0, #16]
   18b64:	cmp	r2, r3
   18b68:	bcc	18b78 <flatcc_json_printer_int16_enum_field@@Base+0xb4>
   18b6c:	ldr	r3, [r0, #44]	; 0x2c
   18b70:	blx	r3
   18b74:	ldr	r2, [r4, #20]
   18b78:	mov	r3, #34	; 0x22
   18b7c:	strb	r3, [r2]
   18b80:	ldrb	r3, [r4, #26]
   18b84:	ldr	r0, [r4, #20]
   18b88:	ldr	r2, [r4, #16]
   18b8c:	cmp	r3, #0
   18b90:	addeq	r0, r0, #1
   18b94:	add	r3, r0, r7
   18b98:	cmp	r2, r3
   18b9c:	str	r0, [r4, #20]
   18ba0:	bhi	18c4c <flatcc_json_printer_int16_enum_field@@Base+0x188>
   18ba4:	mov	r2, r7
   18ba8:	mov	r1, r8
   18bac:	mov	r0, r4
   18bb0:	bl	14b18 <test_print@@Base+0x115c>
   18bb4:	ldr	r7, [r4, #20]
   18bb8:	mov	r3, #34	; 0x22
   18bbc:	strb	r3, [r7]
   18bc0:	ldr	r1, [r4, #20]
   18bc4:	ldrb	r3, [r4, #26]
   18bc8:	clz	r3, r3
   18bcc:	lsr	r3, r3, #5
   18bd0:	add	r2, r1, r3
   18bd4:	add	r2, r2, #1
   18bd8:	mov	r0, #58	; 0x3a
   18bdc:	str	r2, [r4, #20]
   18be0:	strb	r0, [r1, r3]
   18be4:	ldr	r3, [r4, #20]
   18be8:	mov	r2, #32
   18bec:	strb	r2, [r3]
   18bf0:	ldrb	r3, [r4, #25]
   18bf4:	ldrb	r0, [r4, #27]
   18bf8:	ldr	r2, [r4, #20]
   18bfc:	adds	r3, r3, #0
   18c00:	movne	r3, #1
   18c04:	add	r1, r2, r3
   18c08:	cmp	r0, #0
   18c0c:	str	r1, [r4, #20]
   18c10:	beq	18c68 <flatcc_json_printer_int16_enum_field@@Base+0x1a4>
   18c14:	cmp	r5, #0
   18c18:	lsr	r6, r5, #31
   18c1c:	rsblt	r5, r5, #0
   18c20:	movlt	r0, #45	; 0x2d
   18c24:	sxthlt	r5, r5
   18c28:	strblt	r0, [r2, r3]
   18c2c:	addlt	r1, r1, #1
   18c30:	uxth	r0, r5
   18c34:	bl	13cb8 <test_print@@Base+0x2fc>
   18c38:	ldr	r3, [r4, #20]
   18c3c:	add	r0, r6, r0
   18c40:	add	r3, r3, r0
   18c44:	str	r3, [r4, #20]
   18c48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c4c:	mov	r2, r7
   18c50:	mov	r1, r8
   18c54:	bl	12444 <memcpy@plt>
   18c58:	ldr	r3, [r4, #20]
   18c5c:	add	r7, r3, r7
   18c60:	str	r7, [r4, #20]
   18c64:	b	18bb8 <flatcc_json_printer_int16_enum_field@@Base+0xf4>
   18c68:	mov	r1, r5
   18c6c:	mov	r0, r4
   18c70:	mov	r3, r6
   18c74:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   18c78:	bx	r3
   18c7c:	ldrb	r2, [r0, #28]
   18c80:	cmp	r2, #0
   18c84:	beq	18b24 <flatcc_json_printer_int16_enum_field@@Base+0x60>
   18c88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c8c:	ldr	r3, [r0, #20]
   18c90:	mov	r2, #10
   18c94:	add	r1, r3, #1
   18c98:	str	r1, [r0, #20]
   18c9c:	strb	r2, [r3]
   18ca0:	ldrb	r3, [r0, #25]
   18ca4:	ldr	r2, [r0, #32]
   18ca8:	ldr	r0, [r0, #20]
   18cac:	ldr	r1, [r4, #16]
   18cb0:	mul	r9, r2, r3
   18cb4:	add	r3, r0, r9
   18cb8:	cmp	r1, r3
   18cbc:	bcc	18cdc <flatcc_json_printer_int16_enum_field@@Base+0x218>
   18cc0:	mov	r2, r9
   18cc4:	mov	r1, #32
   18cc8:	bl	124e0 <memset@plt>
   18ccc:	ldr	r2, [r4, #20]
   18cd0:	add	r2, r2, r9
   18cd4:	str	r2, [r4, #20]
   18cd8:	b	18b78 <flatcc_json_printer_int16_enum_field@@Base+0xb4>
   18cdc:	mov	r1, r9
   18ce0:	mov	r0, r4
   18ce4:	bl	14bc8 <test_print@@Base+0x120c>
   18ce8:	ldr	r2, [r4, #20]
   18cec:	b	18b78 <flatcc_json_printer_int16_enum_field@@Base+0xb4>

00018cf0 <flatcc_json_printer_int32_enum_field@@Base>:
   18cf0:	add	r2, r2, #2
   18cf4:	ldr	ip, [r1, #8]
   18cf8:	lsl	r2, r2, #1
   18cfc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18d00:	cmp	r2, ip
   18d04:	ldr	r7, [sp, #32]
   18d08:	ldr	ip, [sp, #36]	; 0x24
   18d0c:	ldr	r5, [sp, #40]	; 0x28
   18d10:	blt	18d28 <flatcc_json_printer_int32_enum_field@@Base+0x38>
   18d14:	ldrb	r2, [r0, #29]
   18d18:	cmp	r2, #0
   18d1c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18d20:	mov	r6, ip
   18d24:	b	18d50 <flatcc_json_printer_int32_enum_field@@Base+0x60>
   18d28:	ldr	lr, [r1, #4]
   18d2c:	ldrh	r2, [lr, r2]
   18d30:	cmp	r2, #0
   18d34:	beq	18d14 <flatcc_json_printer_int32_enum_field@@Base+0x24>
   18d38:	ldr	lr, [r1]
   18d3c:	cmn	lr, r2
   18d40:	beq	18d14 <flatcc_json_printer_int32_enum_field@@Base+0x24>
   18d44:	ldr	r6, [lr, r2]
   18d48:	cmp	ip, r6
   18d4c:	beq	18ea4 <flatcc_json_printer_int32_enum_field@@Base+0x1b4>
   18d50:	ldr	r2, [r1, #16]
   18d54:	mov	r8, r3
   18d58:	cmp	r2, #0
   18d5c:	add	r2, r2, #1
   18d60:	str	r2, [r1, #16]
   18d64:	ldrne	r2, [r0, #20]
   18d68:	movne	r1, #44	; 0x2c
   18d6c:	addne	ip, r2, #1
   18d70:	strne	ip, [r0, #20]
   18d74:	strbne	r1, [r2]
   18d78:	ldrb	r1, [r0, #25]
   18d7c:	mov	r4, r0
   18d80:	cmp	r1, #0
   18d84:	bne	18eb4 <flatcc_json_printer_int32_enum_field@@Base+0x1c4>
   18d88:	ldr	r2, [r0, #20]
   18d8c:	ldr	r3, [r0, #16]
   18d90:	cmp	r2, r3
   18d94:	bcc	18da4 <flatcc_json_printer_int32_enum_field@@Base+0xb4>
   18d98:	ldr	r3, [r0, #44]	; 0x2c
   18d9c:	blx	r3
   18da0:	ldr	r2, [r4, #20]
   18da4:	mov	r3, #34	; 0x22
   18da8:	strb	r3, [r2]
   18dac:	ldrb	r3, [r4, #26]
   18db0:	ldr	r0, [r4, #20]
   18db4:	ldr	r2, [r4, #16]
   18db8:	cmp	r3, #0
   18dbc:	addeq	r0, r0, #1
   18dc0:	add	r3, r0, r7
   18dc4:	cmp	r2, r3
   18dc8:	str	r0, [r4, #20]
   18dcc:	bhi	18e74 <flatcc_json_printer_int32_enum_field@@Base+0x184>
   18dd0:	mov	r2, r7
   18dd4:	mov	r1, r8
   18dd8:	mov	r0, r4
   18ddc:	bl	14b18 <test_print@@Base+0x115c>
   18de0:	ldr	r7, [r4, #20]
   18de4:	mov	r3, #34	; 0x22
   18de8:	strb	r3, [r7]
   18dec:	ldr	r1, [r4, #20]
   18df0:	ldrb	r3, [r4, #26]
   18df4:	clz	r3, r3
   18df8:	lsr	r3, r3, #5
   18dfc:	add	r2, r1, r3
   18e00:	add	r2, r2, #1
   18e04:	mov	r0, #58	; 0x3a
   18e08:	str	r2, [r4, #20]
   18e0c:	strb	r0, [r1, r3]
   18e10:	ldr	r3, [r4, #20]
   18e14:	mov	r2, #32
   18e18:	strb	r2, [r3]
   18e1c:	ldrb	r3, [r4, #25]
   18e20:	ldrb	r0, [r4, #27]
   18e24:	ldr	r2, [r4, #20]
   18e28:	adds	r3, r3, #0
   18e2c:	movne	r3, #1
   18e30:	add	r1, r2, r3
   18e34:	cmp	r0, #0
   18e38:	str	r1, [r4, #20]
   18e3c:	beq	18e90 <flatcc_json_printer_int32_enum_field@@Base+0x1a0>
   18e40:	cmp	r6, #0
   18e44:	movlt	r0, #45	; 0x2d
   18e48:	lsr	r5, r6, #31
   18e4c:	rsblt	r6, r6, #0
   18e50:	strblt	r0, [r2, r3]
   18e54:	addlt	r1, r1, #1
   18e58:	mov	r0, r6
   18e5c:	bl	13e3c <test_print@@Base+0x480>
   18e60:	ldr	r3, [r4, #20]
   18e64:	add	r0, r5, r0
   18e68:	add	r3, r3, r0
   18e6c:	str	r3, [r4, #20]
   18e70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18e74:	mov	r2, r7
   18e78:	mov	r1, r8
   18e7c:	bl	12444 <memcpy@plt>
   18e80:	ldr	r3, [r4, #20]
   18e84:	add	r7, r3, r7
   18e88:	str	r7, [r4, #20]
   18e8c:	b	18de4 <flatcc_json_printer_int32_enum_field@@Base+0xf4>
   18e90:	mov	r1, r6
   18e94:	mov	r0, r4
   18e98:	mov	r3, r5
   18e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   18ea0:	bx	r3
   18ea4:	ldrb	r2, [r0, #28]
   18ea8:	cmp	r2, #0
   18eac:	beq	18d50 <flatcc_json_printer_int32_enum_field@@Base+0x60>
   18eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18eb4:	ldr	r3, [r0, #20]
   18eb8:	mov	r2, #10
   18ebc:	add	r1, r3, #1
   18ec0:	str	r1, [r0, #20]
   18ec4:	strb	r2, [r3]
   18ec8:	ldrb	r3, [r0, #25]
   18ecc:	ldr	r2, [r0, #32]
   18ed0:	ldr	r0, [r0, #20]
   18ed4:	ldr	r1, [r4, #16]
   18ed8:	mul	r9, r2, r3
   18edc:	add	r3, r0, r9
   18ee0:	cmp	r1, r3
   18ee4:	bcc	18f04 <flatcc_json_printer_int32_enum_field@@Base+0x214>
   18ee8:	mov	r2, r9
   18eec:	mov	r1, #32
   18ef0:	bl	124e0 <memset@plt>
   18ef4:	ldr	r2, [r4, #20]
   18ef8:	add	r2, r2, r9
   18efc:	str	r2, [r4, #20]
   18f00:	b	18da4 <flatcc_json_printer_int32_enum_field@@Base+0xb4>
   18f04:	mov	r1, r9
   18f08:	mov	r0, r4
   18f0c:	bl	14bc8 <test_print@@Base+0x120c>
   18f10:	ldr	r2, [r4, #20]
   18f14:	b	18da4 <flatcc_json_printer_int32_enum_field@@Base+0xb4>

00018f18 <flatcc_json_printer_int64_enum_field@@Base>:
   18f18:	add	r2, r2, #2
   18f1c:	ldr	ip, [r1, #8]
   18f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f24:	lsl	r2, r2, #1
   18f28:	sub	sp, sp, #4
   18f2c:	cmp	r2, ip
   18f30:	ldr	r8, [sp, #40]	; 0x28
   18f34:	ldrd	sl, [sp, #48]	; 0x30
   18f38:	ldr	r5, [sp, #56]	; 0x38
   18f3c:	blt	18f58 <flatcc_json_printer_int64_enum_field@@Base+0x40>
   18f40:	ldrb	r2, [r0, #29]
   18f44:	cmp	r2, #0
   18f48:	beq	190b4 <flatcc_json_printer_int64_enum_field@@Base+0x19c>
   18f4c:	mov	r6, sl
   18f50:	mov	r7, fp
   18f54:	b	18f84 <flatcc_json_printer_int64_enum_field@@Base+0x6c>
   18f58:	ldr	ip, [r1, #4]
   18f5c:	ldrh	r2, [ip, r2]
   18f60:	cmp	r2, #0
   18f64:	beq	18f40 <flatcc_json_printer_int64_enum_field@@Base+0x28>
   18f68:	ldr	ip, [r1]
   18f6c:	cmn	ip, r2
   18f70:	beq	18f40 <flatcc_json_printer_int64_enum_field@@Base+0x28>
   18f74:	ldrd	r6, [ip, r2]
   18f78:	cmp	fp, r7
   18f7c:	cmpeq	sl, r6
   18f80:	beq	190f4 <flatcc_json_printer_int64_enum_field@@Base+0x1dc>
   18f84:	ldr	r2, [r1, #16]
   18f88:	mov	r9, r3
   18f8c:	cmp	r2, #0
   18f90:	add	r2, r2, #1
   18f94:	str	r2, [r1, #16]
   18f98:	ldrne	r2, [r0, #20]
   18f9c:	movne	r1, #44	; 0x2c
   18fa0:	addne	ip, r2, #1
   18fa4:	strne	ip, [r0, #20]
   18fa8:	strbne	r1, [r2]
   18fac:	ldrb	r1, [r0, #25]
   18fb0:	mov	r4, r0
   18fb4:	cmp	r1, #0
   18fb8:	bne	19104 <flatcc_json_printer_int64_enum_field@@Base+0x1ec>
   18fbc:	ldr	r2, [r0, #20]
   18fc0:	ldr	r3, [r0, #16]
   18fc4:	cmp	r2, r3
   18fc8:	bcc	18fd8 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   18fcc:	ldr	r3, [r0, #44]	; 0x2c
   18fd0:	blx	r3
   18fd4:	ldr	r2, [r4, #20]
   18fd8:	mov	r3, #34	; 0x22
   18fdc:	strb	r3, [r2]
   18fe0:	ldrb	r3, [r4, #26]
   18fe4:	ldr	r0, [r4, #20]
   18fe8:	ldr	r2, [r4, #16]
   18fec:	cmp	r3, #0
   18ff0:	addeq	r0, r0, #1
   18ff4:	add	r3, r0, r8
   18ff8:	cmp	r2, r3
   18ffc:	str	r0, [r4, #20]
   19000:	bhi	190bc <flatcc_json_printer_int64_enum_field@@Base+0x1a4>
   19004:	mov	r2, r8
   19008:	mov	r1, r9
   1900c:	mov	r0, r4
   19010:	bl	14b18 <test_print@@Base+0x115c>
   19014:	ldr	r8, [r4, #20]
   19018:	mov	r3, #34	; 0x22
   1901c:	strb	r3, [r8]
   19020:	ldr	r1, [r4, #20]
   19024:	ldrb	r3, [r4, #26]
   19028:	clz	r3, r3
   1902c:	lsr	r3, r3, #5
   19030:	add	r2, r1, r3
   19034:	add	r2, r2, #1
   19038:	mov	r0, #58	; 0x3a
   1903c:	str	r2, [r4, #20]
   19040:	strb	r0, [r1, r3]
   19044:	ldr	r3, [r4, #20]
   19048:	mov	r2, #32
   1904c:	strb	r2, [r3]
   19050:	ldrb	r3, [r4, #25]
   19054:	ldrb	r0, [r4, #27]
   19058:	ldr	r1, [r4, #20]
   1905c:	adds	r3, r3, #0
   19060:	movne	r3, #1
   19064:	add	r2, r1, r3
   19068:	cmp	r0, #0
   1906c:	str	r2, [r4, #20]
   19070:	beq	190d8 <flatcc_json_printer_int64_enum_field@@Base+0x1c0>
   19074:	cmp	r6, #0
   19078:	sbcs	r0, r7, #0
   1907c:	lsr	r5, r7, #31
   19080:	bge	19098 <flatcc_json_printer_int64_enum_field@@Base+0x180>
   19084:	rsbs	r6, r6, #0
   19088:	rsc	r7, r7, #0
   1908c:	add	r2, r2, #1
   19090:	mov	r0, #45	; 0x2d
   19094:	strb	r0, [r1, r3]
   19098:	mov	r0, r6
   1909c:	mov	r1, r7
   190a0:	bl	141a8 <test_print@@Base+0x7ec>
   190a4:	ldr	r3, [r4, #20]
   190a8:	add	r0, r5, r0
   190ac:	add	r3, r3, r0
   190b0:	str	r3, [r4, #20]
   190b4:	add	sp, sp, #4
   190b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   190bc:	mov	r2, r8
   190c0:	mov	r1, r9
   190c4:	bl	12444 <memcpy@plt>
   190c8:	ldr	r3, [r4, #20]
   190cc:	add	r8, r3, r8
   190d0:	str	r8, [r4, #20]
   190d4:	b	19018 <flatcc_json_printer_int64_enum_field@@Base+0x100>
   190d8:	mov	r2, r6
   190dc:	mov	r3, r7
   190e0:	mov	r0, r4
   190e4:	mov	r1, r5
   190e8:	add	sp, sp, #4
   190ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190f0:	bx	r1
   190f4:	ldrb	r2, [r0, #28]
   190f8:	cmp	r2, #0
   190fc:	beq	18f84 <flatcc_json_printer_int64_enum_field@@Base+0x6c>
   19100:	b	190b4 <flatcc_json_printer_int64_enum_field@@Base+0x19c>
   19104:	ldr	r3, [r0, #20]
   19108:	mov	r2, #10
   1910c:	add	r1, r3, #1
   19110:	str	r1, [r0, #20]
   19114:	strb	r2, [r3]
   19118:	ldrb	r3, [r0, #25]
   1911c:	ldr	r2, [r0, #32]
   19120:	ldr	r0, [r0, #20]
   19124:	ldr	r1, [r4, #16]
   19128:	mul	sl, r2, r3
   1912c:	add	r3, r0, sl
   19130:	cmp	r1, r3
   19134:	bcc	19154 <flatcc_json_printer_int64_enum_field@@Base+0x23c>
   19138:	mov	r2, sl
   1913c:	mov	r1, #32
   19140:	bl	124e0 <memset@plt>
   19144:	ldr	r2, [r4, #20]
   19148:	add	r2, r2, sl
   1914c:	str	r2, [r4, #20]
   19150:	b	18fd8 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   19154:	mov	r1, sl
   19158:	mov	r0, r4
   1915c:	bl	14bc8 <test_print@@Base+0x120c>
   19160:	ldr	r2, [r4, #20]
   19164:	b	18fd8 <flatcc_json_printer_int64_enum_field@@Base+0xc0>

00019168 <flatcc_json_printer_bool_enum_field@@Base>:
   19168:	add	r2, r2, #2
   1916c:	ldr	ip, [r1, #8]
   19170:	lsl	r2, r2, #1
   19174:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19178:	cmp	r2, ip
   1917c:	ldr	r7, [sp, #32]
   19180:	ldrb	ip, [sp, #36]	; 0x24
   19184:	ldr	r5, [sp, #40]	; 0x28
   19188:	blt	191a0 <flatcc_json_printer_bool_enum_field@@Base+0x38>
   1918c:	ldrb	r2, [r0, #29]
   19190:	cmp	r2, #0
   19194:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19198:	mov	r6, ip
   1919c:	b	191c8 <flatcc_json_printer_bool_enum_field@@Base+0x60>
   191a0:	ldr	lr, [r1, #4]
   191a4:	ldrh	r2, [lr, r2]
   191a8:	cmp	r2, #0
   191ac:	beq	1918c <flatcc_json_printer_bool_enum_field@@Base+0x24>
   191b0:	ldr	lr, [r1]
   191b4:	cmn	lr, r2
   191b8:	beq	1918c <flatcc_json_printer_bool_enum_field@@Base+0x24>
   191bc:	ldrb	r6, [lr, r2]
   191c0:	cmp	ip, r6
   191c4:	beq	192fc <flatcc_json_printer_bool_enum_field@@Base+0x194>
   191c8:	ldr	r2, [r1, #16]
   191cc:	mov	r8, r3
   191d0:	cmp	r2, #0
   191d4:	add	r2, r2, #1
   191d8:	str	r2, [r1, #16]
   191dc:	ldrne	r2, [r0, #20]
   191e0:	movne	r1, #44	; 0x2c
   191e4:	addne	ip, r2, #1
   191e8:	strne	ip, [r0, #20]
   191ec:	strbne	r1, [r2]
   191f0:	ldrb	r1, [r0, #25]
   191f4:	mov	r4, r0
   191f8:	cmp	r1, #0
   191fc:	bne	1930c <flatcc_json_printer_bool_enum_field@@Base+0x1a4>
   19200:	ldr	r2, [r0, #20]
   19204:	ldr	r3, [r0, #16]
   19208:	cmp	r2, r3
   1920c:	bcc	1921c <flatcc_json_printer_bool_enum_field@@Base+0xb4>
   19210:	ldr	r3, [r0, #44]	; 0x2c
   19214:	blx	r3
   19218:	ldr	r2, [r4, #20]
   1921c:	mov	r3, #34	; 0x22
   19220:	strb	r3, [r2]
   19224:	ldrb	r3, [r4, #26]
   19228:	ldr	r0, [r4, #20]
   1922c:	ldr	r2, [r4, #16]
   19230:	cmp	r3, #0
   19234:	addeq	r0, r0, #1
   19238:	add	r3, r0, r7
   1923c:	cmp	r2, r3
   19240:	str	r0, [r4, #20]
   19244:	bhi	192e0 <flatcc_json_printer_bool_enum_field@@Base+0x178>
   19248:	mov	r2, r7
   1924c:	mov	r1, r8
   19250:	mov	r0, r4
   19254:	bl	14b18 <test_print@@Base+0x115c>
   19258:	ldr	r7, [r4, #20]
   1925c:	mov	r3, #34	; 0x22
   19260:	strb	r3, [r7]
   19264:	ldr	r1, [r4, #20]
   19268:	ldrb	r3, [r4, #26]
   1926c:	clz	r3, r3
   19270:	lsr	r3, r3, #5
   19274:	add	r2, r1, r3
   19278:	add	r2, r2, #1
   1927c:	mov	r0, #58	; 0x3a
   19280:	str	r2, [r4, #20]
   19284:	strb	r0, [r1, r3]
   19288:	ldr	r3, [r4, #20]
   1928c:	mov	r2, #32
   19290:	strb	r2, [r3]
   19294:	ldrb	r2, [r4, #25]
   19298:	ldrb	r3, [r4, #27]
   1929c:	ldr	r1, [r4, #20]
   192a0:	cmp	r2, #0
   192a4:	addne	r1, r1, #1
   192a8:	cmp	r3, #0
   192ac:	str	r1, [r4, #20]
   192b0:	bne	192c8 <flatcc_json_printer_bool_enum_field@@Base+0x160>
   192b4:	mov	r1, r6
   192b8:	mov	r0, r4
   192bc:	mov	r3, r5
   192c0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   192c4:	bx	r3
   192c8:	mov	r0, r6
   192cc:	bl	14ef4 <test_print@@Base+0x1538>
   192d0:	ldr	r3, [r4, #20]
   192d4:	add	r0, r3, r0
   192d8:	str	r0, [r4, #20]
   192dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   192e0:	mov	r2, r7
   192e4:	mov	r1, r8
   192e8:	bl	12444 <memcpy@plt>
   192ec:	ldr	r3, [r4, #20]
   192f0:	add	r7, r3, r7
   192f4:	str	r7, [r4, #20]
   192f8:	b	1925c <flatcc_json_printer_bool_enum_field@@Base+0xf4>
   192fc:	ldrb	r2, [r0, #28]
   19300:	cmp	r2, #0
   19304:	beq	191c8 <flatcc_json_printer_bool_enum_field@@Base+0x60>
   19308:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1930c:	ldr	r3, [r0, #20]
   19310:	mov	r2, #10
   19314:	add	r1, r3, #1
   19318:	str	r1, [r0, #20]
   1931c:	strb	r2, [r3]
   19320:	ldrb	r3, [r0, #25]
   19324:	ldr	r2, [r0, #32]
   19328:	ldr	r0, [r0, #20]
   1932c:	ldr	r1, [r4, #16]
   19330:	mul	r9, r2, r3
   19334:	add	r3, r0, r9
   19338:	cmp	r1, r3
   1933c:	bcc	1935c <flatcc_json_printer_bool_enum_field@@Base+0x1f4>
   19340:	mov	r2, r9
   19344:	mov	r1, #32
   19348:	bl	124e0 <memset@plt>
   1934c:	ldr	r2, [r4, #20]
   19350:	add	r2, r2, r9
   19354:	str	r2, [r4, #20]
   19358:	b	1921c <flatcc_json_printer_bool_enum_field@@Base+0xb4>
   1935c:	mov	r1, r9
   19360:	mov	r0, r4
   19364:	bl	14bc8 <test_print@@Base+0x120c>
   19368:	ldr	r2, [r4, #20]
   1936c:	b	1921c <flatcc_json_printer_bool_enum_field@@Base+0xb4>

00019370 <flatcc_json_printer_uint8_struct_field@@Base>:
   19370:	cmp	r1, #0
   19374:	push	{r4, r5, r6, r7, r8, lr}
   19378:	mov	r4, r0
   1937c:	ldrb	r5, [r2, r3]
   19380:	ldrne	r3, [r0, #20]
   19384:	movne	r2, #44	; 0x2c
   19388:	addne	r1, r3, #1
   1938c:	strne	r1, [r0, #20]
   19390:	strbne	r2, [r3]
   19394:	ldrb	r1, [r0, #25]
   19398:	ldr	r6, [sp, #28]
   1939c:	cmp	r1, #0
   193a0:	bne	1947c <flatcc_json_printer_uint8_struct_field@@Base+0x10c>
   193a4:	ldr	r2, [r0, #20]
   193a8:	ldr	r3, [r0, #16]
   193ac:	cmp	r2, r3
   193b0:	bcs	19458 <flatcc_json_printer_uint8_struct_field@@Base+0xe8>
   193b4:	mov	r3, #34	; 0x22
   193b8:	strb	r3, [r2]
   193bc:	ldrb	r3, [r4, #26]
   193c0:	ldr	r0, [r4, #20]
   193c4:	ldr	r2, [r4, #16]
   193c8:	cmp	r3, #0
   193cc:	addeq	r0, r0, #1
   193d0:	add	r3, r0, r6
   193d4:	cmp	r2, r3
   193d8:	str	r0, [r4, #20]
   193dc:	mov	r2, r6
   193e0:	ldr	r1, [sp, #24]
   193e4:	bhi	19468 <flatcc_json_printer_uint8_struct_field@@Base+0xf8>
   193e8:	mov	r0, r4
   193ec:	bl	14b18 <test_print@@Base+0x115c>
   193f0:	ldr	r6, [r4, #20]
   193f4:	mov	r3, #34	; 0x22
   193f8:	strb	r3, [r6]
   193fc:	ldr	r1, [r4, #20]
   19400:	ldrb	r3, [r4, #26]
   19404:	clz	r3, r3
   19408:	lsr	r3, r3, #5
   1940c:	add	r2, r1, r3
   19410:	add	r2, r2, #1
   19414:	mov	r0, #58	; 0x3a
   19418:	str	r2, [r4, #20]
   1941c:	strb	r0, [r1, r3]
   19420:	ldr	r3, [r4, #20]
   19424:	mov	r2, #32
   19428:	mov	r0, r5
   1942c:	strb	r2, [r3]
   19430:	ldrb	r3, [r4, #25]
   19434:	ldr	r1, [r4, #20]
   19438:	cmp	r3, #0
   1943c:	addne	r1, r1, #1
   19440:	str	r1, [r4, #20]
   19444:	bl	14e04 <test_print@@Base+0x1448>
   19448:	ldr	r3, [r4, #20]
   1944c:	add	r0, r3, r0
   19450:	str	r0, [r4, #20]
   19454:	pop	{r4, r5, r6, r7, r8, pc}
   19458:	ldr	r3, [r0, #44]	; 0x2c
   1945c:	blx	r3
   19460:	ldr	r2, [r4, #20]
   19464:	b	193b4 <flatcc_json_printer_uint8_struct_field@@Base+0x44>
   19468:	bl	12444 <memcpy@plt>
   1946c:	ldr	r3, [r4, #20]
   19470:	add	r6, r3, r6
   19474:	str	r6, [r4, #20]
   19478:	b	193f4 <flatcc_json_printer_uint8_struct_field@@Base+0x84>
   1947c:	ldr	r3, [r0, #20]
   19480:	mov	r2, #10
   19484:	add	r1, r3, #1
   19488:	str	r1, [r0, #20]
   1948c:	strb	r2, [r3]
   19490:	ldrb	r7, [r0, #25]
   19494:	ldr	r2, [r0, #32]
   19498:	ldr	r0, [r0, #20]
   1949c:	ldr	r1, [r4, #16]
   194a0:	mul	r7, r2, r7
   194a4:	add	r3, r0, r7
   194a8:	cmp	r1, r3
   194ac:	bcc	194cc <flatcc_json_printer_uint8_struct_field@@Base+0x15c>
   194b0:	mov	r2, r7
   194b4:	mov	r1, #32
   194b8:	bl	124e0 <memset@plt>
   194bc:	ldr	r2, [r4, #20]
   194c0:	add	r2, r2, r7
   194c4:	str	r2, [r4, #20]
   194c8:	b	193b4 <flatcc_json_printer_uint8_struct_field@@Base+0x44>
   194cc:	mov	r1, r7
   194d0:	mov	r0, r4
   194d4:	bl	14bc8 <test_print@@Base+0x120c>
   194d8:	ldr	r2, [r4, #20]
   194dc:	b	193b4 <flatcc_json_printer_uint8_struct_field@@Base+0x44>

000194e0 <flatcc_json_printer_uint16_struct_field@@Base>:
   194e0:	cmp	r1, #0
   194e4:	push	{r4, r5, r6, r7, r8, lr}
   194e8:	mov	r4, r0
   194ec:	ldrh	r5, [r2, r3]
   194f0:	ldrne	r3, [r0, #20]
   194f4:	movne	r2, #44	; 0x2c
   194f8:	addne	r1, r3, #1
   194fc:	strne	r1, [r0, #20]
   19500:	strbne	r2, [r3]
   19504:	ldrb	r1, [r0, #25]
   19508:	ldr	r6, [sp, #28]
   1950c:	cmp	r1, #0
   19510:	bne	195ec <flatcc_json_printer_uint16_struct_field@@Base+0x10c>
   19514:	ldr	r2, [r0, #20]
   19518:	ldr	r3, [r0, #16]
   1951c:	cmp	r2, r3
   19520:	bcs	195c8 <flatcc_json_printer_uint16_struct_field@@Base+0xe8>
   19524:	mov	r3, #34	; 0x22
   19528:	strb	r3, [r2]
   1952c:	ldrb	r3, [r4, #26]
   19530:	ldr	r0, [r4, #20]
   19534:	ldr	r2, [r4, #16]
   19538:	cmp	r3, #0
   1953c:	addeq	r0, r0, #1
   19540:	add	r3, r0, r6
   19544:	cmp	r2, r3
   19548:	str	r0, [r4, #20]
   1954c:	mov	r2, r6
   19550:	ldr	r1, [sp, #24]
   19554:	bhi	195d8 <flatcc_json_printer_uint16_struct_field@@Base+0xf8>
   19558:	mov	r0, r4
   1955c:	bl	14b18 <test_print@@Base+0x115c>
   19560:	ldr	r6, [r4, #20]
   19564:	mov	r3, #34	; 0x22
   19568:	strb	r3, [r6]
   1956c:	ldr	r1, [r4, #20]
   19570:	ldrb	r3, [r4, #26]
   19574:	clz	r3, r3
   19578:	lsr	r3, r3, #5
   1957c:	add	r2, r1, r3
   19580:	add	r2, r2, #1
   19584:	mov	r0, #58	; 0x3a
   19588:	str	r2, [r4, #20]
   1958c:	strb	r0, [r1, r3]
   19590:	ldr	r3, [r4, #20]
   19594:	mov	r2, #32
   19598:	mov	r0, r5
   1959c:	strb	r2, [r3]
   195a0:	ldrb	r3, [r4, #25]
   195a4:	ldr	r1, [r4, #20]
   195a8:	cmp	r3, #0
   195ac:	addne	r1, r1, #1
   195b0:	str	r1, [r4, #20]
   195b4:	bl	13cb8 <test_print@@Base+0x2fc>
   195b8:	ldr	r3, [r4, #20]
   195bc:	add	r0, r3, r0
   195c0:	str	r0, [r4, #20]
   195c4:	pop	{r4, r5, r6, r7, r8, pc}
   195c8:	ldr	r3, [r0, #44]	; 0x2c
   195cc:	blx	r3
   195d0:	ldr	r2, [r4, #20]
   195d4:	b	19524 <flatcc_json_printer_uint16_struct_field@@Base+0x44>
   195d8:	bl	12444 <memcpy@plt>
   195dc:	ldr	r3, [r4, #20]
   195e0:	add	r6, r3, r6
   195e4:	str	r6, [r4, #20]
   195e8:	b	19564 <flatcc_json_printer_uint16_struct_field@@Base+0x84>
   195ec:	ldr	r3, [r0, #20]
   195f0:	mov	r2, #10
   195f4:	add	r1, r3, #1
   195f8:	str	r1, [r0, #20]
   195fc:	strb	r2, [r3]
   19600:	ldrb	r7, [r0, #25]
   19604:	ldr	r2, [r0, #32]
   19608:	ldr	r0, [r0, #20]
   1960c:	ldr	r1, [r4, #16]
   19610:	mul	r7, r2, r7
   19614:	add	r3, r0, r7
   19618:	cmp	r1, r3
   1961c:	bcc	1963c <flatcc_json_printer_uint16_struct_field@@Base+0x15c>
   19620:	mov	r2, r7
   19624:	mov	r1, #32
   19628:	bl	124e0 <memset@plt>
   1962c:	ldr	r2, [r4, #20]
   19630:	add	r2, r2, r7
   19634:	str	r2, [r4, #20]
   19638:	b	19524 <flatcc_json_printer_uint16_struct_field@@Base+0x44>
   1963c:	mov	r1, r7
   19640:	mov	r0, r4
   19644:	bl	14bc8 <test_print@@Base+0x120c>
   19648:	ldr	r2, [r4, #20]
   1964c:	b	19524 <flatcc_json_printer_uint16_struct_field@@Base+0x44>

00019650 <flatcc_json_printer_uint32_struct_field@@Base>:
   19650:	cmp	r1, #0
   19654:	push	{r4, r5, r6, r7, r8, lr}
   19658:	mov	r4, r0
   1965c:	ldr	r5, [r2, r3]
   19660:	ldrne	r3, [r0, #20]
   19664:	movne	r2, #44	; 0x2c
   19668:	addne	r1, r3, #1
   1966c:	strne	r1, [r0, #20]
   19670:	strbne	r2, [r3]
   19674:	ldrb	r1, [r0, #25]
   19678:	ldr	r6, [sp, #28]
   1967c:	cmp	r1, #0
   19680:	bne	1975c <flatcc_json_printer_uint32_struct_field@@Base+0x10c>
   19684:	ldr	r2, [r0, #20]
   19688:	ldr	r3, [r0, #16]
   1968c:	cmp	r2, r3
   19690:	bcs	19738 <flatcc_json_printer_uint32_struct_field@@Base+0xe8>
   19694:	mov	r3, #34	; 0x22
   19698:	strb	r3, [r2]
   1969c:	ldrb	r3, [r4, #26]
   196a0:	ldr	r0, [r4, #20]
   196a4:	ldr	r2, [r4, #16]
   196a8:	cmp	r3, #0
   196ac:	addeq	r0, r0, #1
   196b0:	add	r3, r0, r6
   196b4:	cmp	r2, r3
   196b8:	str	r0, [r4, #20]
   196bc:	mov	r2, r6
   196c0:	ldr	r1, [sp, #24]
   196c4:	bhi	19748 <flatcc_json_printer_uint32_struct_field@@Base+0xf8>
   196c8:	mov	r0, r4
   196cc:	bl	14b18 <test_print@@Base+0x115c>
   196d0:	ldr	r6, [r4, #20]
   196d4:	mov	r3, #34	; 0x22
   196d8:	strb	r3, [r6]
   196dc:	ldr	r1, [r4, #20]
   196e0:	ldrb	r3, [r4, #26]
   196e4:	clz	r3, r3
   196e8:	lsr	r3, r3, #5
   196ec:	add	r2, r1, r3
   196f0:	add	r2, r2, #1
   196f4:	mov	r0, #58	; 0x3a
   196f8:	str	r2, [r4, #20]
   196fc:	strb	r0, [r1, r3]
   19700:	ldr	r3, [r4, #20]
   19704:	mov	r2, #32
   19708:	mov	r0, r5
   1970c:	strb	r2, [r3]
   19710:	ldrb	r3, [r4, #25]
   19714:	ldr	r1, [r4, #20]
   19718:	cmp	r3, #0
   1971c:	addne	r1, r1, #1
   19720:	str	r1, [r4, #20]
   19724:	bl	13e3c <test_print@@Base+0x480>
   19728:	ldr	r3, [r4, #20]
   1972c:	add	r0, r3, r0
   19730:	str	r0, [r4, #20]
   19734:	pop	{r4, r5, r6, r7, r8, pc}
   19738:	ldr	r3, [r0, #44]	; 0x2c
   1973c:	blx	r3
   19740:	ldr	r2, [r4, #20]
   19744:	b	19694 <flatcc_json_printer_uint32_struct_field@@Base+0x44>
   19748:	bl	12444 <memcpy@plt>
   1974c:	ldr	r3, [r4, #20]
   19750:	add	r6, r3, r6
   19754:	str	r6, [r4, #20]
   19758:	b	196d4 <flatcc_json_printer_uint32_struct_field@@Base+0x84>
   1975c:	ldr	r3, [r0, #20]
   19760:	mov	r2, #10
   19764:	add	r1, r3, #1
   19768:	str	r1, [r0, #20]
   1976c:	strb	r2, [r3]
   19770:	ldrb	r7, [r0, #25]
   19774:	ldr	r2, [r0, #32]
   19778:	ldr	r0, [r0, #20]
   1977c:	ldr	r1, [r4, #16]
   19780:	mul	r7, r2, r7
   19784:	add	r3, r0, r7
   19788:	cmp	r1, r3
   1978c:	bcc	197ac <flatcc_json_printer_uint32_struct_field@@Base+0x15c>
   19790:	mov	r2, r7
   19794:	mov	r1, #32
   19798:	bl	124e0 <memset@plt>
   1979c:	ldr	r2, [r4, #20]
   197a0:	add	r2, r2, r7
   197a4:	str	r2, [r4, #20]
   197a8:	b	19694 <flatcc_json_printer_uint32_struct_field@@Base+0x44>
   197ac:	mov	r1, r7
   197b0:	mov	r0, r4
   197b4:	bl	14bc8 <test_print@@Base+0x120c>
   197b8:	ldr	r2, [r4, #20]
   197bc:	b	19694 <flatcc_json_printer_uint32_struct_field@@Base+0x44>

000197c0 <flatcc_json_printer_uint64_struct_field@@Base>:
   197c0:	cmp	r1, #0
   197c4:	push	{r4, r5, r6, r7, r8, lr}
   197c8:	mov	r4, r0
   197cc:	ldrd	r6, [r2, r3]
   197d0:	ldrne	r3, [r0, #20]
   197d4:	movne	r2, #44	; 0x2c
   197d8:	addne	r1, r3, #1
   197dc:	strne	r1, [r0, #20]
   197e0:	strbne	r2, [r3]
   197e4:	ldrb	r1, [r0, #25]
   197e8:	ldr	r5, [sp, #28]
   197ec:	cmp	r1, #0
   197f0:	bne	198d0 <flatcc_json_printer_uint64_struct_field@@Base+0x110>
   197f4:	ldr	r2, [r0, #20]
   197f8:	ldr	r3, [r0, #16]
   197fc:	cmp	r2, r3
   19800:	bcs	198ac <flatcc_json_printer_uint64_struct_field@@Base+0xec>
   19804:	mov	r3, #34	; 0x22
   19808:	strb	r3, [r2]
   1980c:	ldrb	r3, [r4, #26]
   19810:	ldr	r0, [r4, #20]
   19814:	ldr	r2, [r4, #16]
   19818:	cmp	r3, #0
   1981c:	addeq	r0, r0, #1
   19820:	add	r3, r0, r5
   19824:	cmp	r2, r3
   19828:	str	r0, [r4, #20]
   1982c:	mov	r2, r5
   19830:	ldr	r1, [sp, #24]
   19834:	bhi	198bc <flatcc_json_printer_uint64_struct_field@@Base+0xfc>
   19838:	mov	r0, r4
   1983c:	bl	14b18 <test_print@@Base+0x115c>
   19840:	ldr	r5, [r4, #20]
   19844:	mov	r3, #34	; 0x22
   19848:	strb	r3, [r5]
   1984c:	ldr	r1, [r4, #20]
   19850:	ldrb	r3, [r4, #26]
   19854:	clz	r3, r3
   19858:	lsr	r3, r3, #5
   1985c:	add	r2, r1, r3
   19860:	add	r2, r2, #1
   19864:	mov	r0, #58	; 0x3a
   19868:	str	r2, [r4, #20]
   1986c:	strb	r0, [r1, r3]
   19870:	ldr	r3, [r4, #20]
   19874:	mov	r2, #32
   19878:	mov	r0, r6
   1987c:	strb	r2, [r3]
   19880:	ldrb	r3, [r4, #25]
   19884:	ldr	r2, [r4, #20]
   19888:	mov	r1, r7
   1988c:	cmp	r3, #0
   19890:	addne	r2, r2, #1
   19894:	str	r2, [r4, #20]
   19898:	bl	141a8 <test_print@@Base+0x7ec>
   1989c:	ldr	r3, [r4, #20]
   198a0:	add	r0, r3, r0
   198a4:	str	r0, [r4, #20]
   198a8:	pop	{r4, r5, r6, r7, r8, pc}
   198ac:	ldr	r3, [r0, #44]	; 0x2c
   198b0:	blx	r3
   198b4:	ldr	r2, [r4, #20]
   198b8:	b	19804 <flatcc_json_printer_uint64_struct_field@@Base+0x44>
   198bc:	bl	12444 <memcpy@plt>
   198c0:	ldr	r3, [r4, #20]
   198c4:	add	r5, r3, r5
   198c8:	str	r5, [r4, #20]
   198cc:	b	19844 <flatcc_json_printer_uint64_struct_field@@Base+0x84>
   198d0:	ldr	r3, [r0, #20]
   198d4:	mov	r2, #10
   198d8:	add	r1, r3, #1
   198dc:	str	r1, [r0, #20]
   198e0:	strb	r2, [r3]
   198e4:	ldrb	r8, [r0, #25]
   198e8:	ldr	r2, [r0, #32]
   198ec:	ldr	r0, [r0, #20]
   198f0:	ldr	r1, [r4, #16]
   198f4:	mul	r8, r2, r8
   198f8:	add	r3, r0, r8
   198fc:	cmp	r1, r3
   19900:	bcc	19920 <flatcc_json_printer_uint64_struct_field@@Base+0x160>
   19904:	mov	r2, r8
   19908:	mov	r1, #32
   1990c:	bl	124e0 <memset@plt>
   19910:	ldr	r2, [r4, #20]
   19914:	add	r2, r2, r8
   19918:	str	r2, [r4, #20]
   1991c:	b	19804 <flatcc_json_printer_uint64_struct_field@@Base+0x44>
   19920:	mov	r1, r8
   19924:	mov	r0, r4
   19928:	bl	14bc8 <test_print@@Base+0x120c>
   1992c:	ldr	r2, [r4, #20]
   19930:	b	19804 <flatcc_json_printer_uint64_struct_field@@Base+0x44>

00019934 <flatcc_json_printer_int8_struct_field@@Base>:
   19934:	cmp	r1, #0
   19938:	push	{r4, r5, r6, r7, r8, lr}
   1993c:	mov	r4, r0
   19940:	ldrsb	r5, [r2, r3]
   19944:	ldrne	r3, [r0, #20]
   19948:	movne	r2, #44	; 0x2c
   1994c:	addne	r1, r3, #1
   19950:	strne	r1, [r0, #20]
   19954:	strbne	r2, [r3]
   19958:	ldrb	r1, [r0, #25]
   1995c:	ldr	r6, [sp, #28]
   19960:	cmp	r1, #0
   19964:	bne	19a64 <flatcc_json_printer_int8_struct_field@@Base+0x130>
   19968:	ldr	r2, [r0, #20]
   1996c:	ldr	r3, [r0, #16]
   19970:	cmp	r2, r3
   19974:	bcs	19a40 <flatcc_json_printer_int8_struct_field@@Base+0x10c>
   19978:	mov	r3, #34	; 0x22
   1997c:	strb	r3, [r2]
   19980:	ldrb	r3, [r4, #26]
   19984:	ldr	r0, [r4, #20]
   19988:	ldr	r2, [r4, #16]
   1998c:	cmp	r3, #0
   19990:	addeq	r0, r0, #1
   19994:	add	r3, r0, r6
   19998:	cmp	r2, r3
   1999c:	str	r0, [r4, #20]
   199a0:	mov	r2, r6
   199a4:	ldr	r1, [sp, #24]
   199a8:	bhi	19a50 <flatcc_json_printer_int8_struct_field@@Base+0x11c>
   199ac:	mov	r0, r4
   199b0:	bl	14b18 <test_print@@Base+0x115c>
   199b4:	ldr	r6, [r4, #20]
   199b8:	mov	r3, #34	; 0x22
   199bc:	strb	r3, [r6]
   199c0:	ldr	r1, [r4, #20]
   199c4:	ldrb	r3, [r4, #26]
   199c8:	clz	r3, r3
   199cc:	lsr	r3, r3, #5
   199d0:	add	r2, r1, r3
   199d4:	mov	r0, #58	; 0x3a
   199d8:	add	r2, r2, #1
   199dc:	str	r2, [r4, #20]
   199e0:	strb	r0, [r1, r3]
   199e4:	ldr	r3, [r4, #20]
   199e8:	mov	r2, #32
   199ec:	lsr	r6, r5, #31
   199f0:	strb	r2, [r3]
   199f4:	ldrb	r3, [r4, #25]
   199f8:	ldr	r2, [r4, #20]
   199fc:	adds	r3, r3, #0
   19a00:	movne	r3, #1
   19a04:	cmp	r5, #0
   19a08:	rsblt	r5, r5, #0
   19a0c:	add	r1, r2, r3
   19a10:	sxtblt	r5, r5
   19a14:	movlt	r0, #45	; 0x2d
   19a18:	str	r1, [r4, #20]
   19a1c:	strblt	r0, [r2, r3]
   19a20:	addlt	r1, r1, #1
   19a24:	uxtb	r0, r5
   19a28:	bl	14e04 <test_print@@Base+0x1448>
   19a2c:	ldr	r3, [r4, #20]
   19a30:	add	r0, r6, r0
   19a34:	add	r3, r3, r0
   19a38:	str	r3, [r4, #20]
   19a3c:	pop	{r4, r5, r6, r7, r8, pc}
   19a40:	ldr	r3, [r0, #44]	; 0x2c
   19a44:	blx	r3
   19a48:	ldr	r2, [r4, #20]
   19a4c:	b	19978 <flatcc_json_printer_int8_struct_field@@Base+0x44>
   19a50:	bl	12444 <memcpy@plt>
   19a54:	ldr	r3, [r4, #20]
   19a58:	add	r6, r3, r6
   19a5c:	str	r6, [r4, #20]
   19a60:	b	199b8 <flatcc_json_printer_int8_struct_field@@Base+0x84>
   19a64:	ldr	r3, [r0, #20]
   19a68:	mov	r2, #10
   19a6c:	add	r1, r3, #1
   19a70:	str	r1, [r0, #20]
   19a74:	strb	r2, [r3]
   19a78:	ldrb	r7, [r0, #25]
   19a7c:	ldr	r2, [r0, #32]
   19a80:	ldr	r0, [r0, #20]
   19a84:	ldr	r1, [r4, #16]
   19a88:	mul	r7, r2, r7
   19a8c:	add	r3, r0, r7
   19a90:	cmp	r1, r3
   19a94:	bcc	19ab4 <flatcc_json_printer_int8_struct_field@@Base+0x180>
   19a98:	mov	r2, r7
   19a9c:	mov	r1, #32
   19aa0:	bl	124e0 <memset@plt>
   19aa4:	ldr	r2, [r4, #20]
   19aa8:	add	r2, r2, r7
   19aac:	str	r2, [r4, #20]
   19ab0:	b	19978 <flatcc_json_printer_int8_struct_field@@Base+0x44>
   19ab4:	mov	r1, r7
   19ab8:	mov	r0, r4
   19abc:	bl	14bc8 <test_print@@Base+0x120c>
   19ac0:	ldr	r2, [r4, #20]
   19ac4:	b	19978 <flatcc_json_printer_int8_struct_field@@Base+0x44>

00019ac8 <flatcc_json_printer_int16_struct_field@@Base>:
   19ac8:	cmp	r1, #0
   19acc:	push	{r4, r5, r6, r7, r8, lr}
   19ad0:	mov	r4, r0
   19ad4:	ldrsh	r5, [r2, r3]
   19ad8:	ldrne	r3, [r0, #20]
   19adc:	movne	r2, #44	; 0x2c
   19ae0:	addne	r1, r3, #1
   19ae4:	strne	r1, [r0, #20]
   19ae8:	strbne	r2, [r3]
   19aec:	ldrb	r1, [r0, #25]
   19af0:	ldr	r6, [sp, #28]
   19af4:	cmp	r1, #0
   19af8:	bne	19bf8 <flatcc_json_printer_int16_struct_field@@Base+0x130>
   19afc:	ldr	r2, [r0, #20]
   19b00:	ldr	r3, [r0, #16]
   19b04:	cmp	r2, r3
   19b08:	bcs	19bd4 <flatcc_json_printer_int16_struct_field@@Base+0x10c>
   19b0c:	mov	r3, #34	; 0x22
   19b10:	strb	r3, [r2]
   19b14:	ldrb	r3, [r4, #26]
   19b18:	ldr	r0, [r4, #20]
   19b1c:	ldr	r2, [r4, #16]
   19b20:	cmp	r3, #0
   19b24:	addeq	r0, r0, #1
   19b28:	add	r3, r0, r6
   19b2c:	cmp	r2, r3
   19b30:	str	r0, [r4, #20]
   19b34:	mov	r2, r6
   19b38:	ldr	r1, [sp, #24]
   19b3c:	bhi	19be4 <flatcc_json_printer_int16_struct_field@@Base+0x11c>
   19b40:	mov	r0, r4
   19b44:	bl	14b18 <test_print@@Base+0x115c>
   19b48:	ldr	r6, [r4, #20]
   19b4c:	mov	r3, #34	; 0x22
   19b50:	strb	r3, [r6]
   19b54:	ldr	r1, [r4, #20]
   19b58:	ldrb	r3, [r4, #26]
   19b5c:	clz	r3, r3
   19b60:	lsr	r3, r3, #5
   19b64:	add	r2, r1, r3
   19b68:	mov	r0, #58	; 0x3a
   19b6c:	add	r2, r2, #1
   19b70:	str	r2, [r4, #20]
   19b74:	strb	r0, [r1, r3]
   19b78:	ldr	r3, [r4, #20]
   19b7c:	mov	r2, #32
   19b80:	lsr	r6, r5, #31
   19b84:	strb	r2, [r3]
   19b88:	ldrb	r3, [r4, #25]
   19b8c:	ldr	r2, [r4, #20]
   19b90:	adds	r3, r3, #0
   19b94:	movne	r3, #1
   19b98:	cmp	r5, #0
   19b9c:	rsblt	r5, r5, #0
   19ba0:	add	r1, r2, r3
   19ba4:	sxthlt	r5, r5
   19ba8:	movlt	r0, #45	; 0x2d
   19bac:	str	r1, [r4, #20]
   19bb0:	strblt	r0, [r2, r3]
   19bb4:	addlt	r1, r1, #1
   19bb8:	uxth	r0, r5
   19bbc:	bl	13cb8 <test_print@@Base+0x2fc>
   19bc0:	ldr	r3, [r4, #20]
   19bc4:	add	r0, r6, r0
   19bc8:	add	r3, r3, r0
   19bcc:	str	r3, [r4, #20]
   19bd0:	pop	{r4, r5, r6, r7, r8, pc}
   19bd4:	ldr	r3, [r0, #44]	; 0x2c
   19bd8:	blx	r3
   19bdc:	ldr	r2, [r4, #20]
   19be0:	b	19b0c <flatcc_json_printer_int16_struct_field@@Base+0x44>
   19be4:	bl	12444 <memcpy@plt>
   19be8:	ldr	r3, [r4, #20]
   19bec:	add	r6, r3, r6
   19bf0:	str	r6, [r4, #20]
   19bf4:	b	19b4c <flatcc_json_printer_int16_struct_field@@Base+0x84>
   19bf8:	ldr	r3, [r0, #20]
   19bfc:	mov	r2, #10
   19c00:	add	r1, r3, #1
   19c04:	str	r1, [r0, #20]
   19c08:	strb	r2, [r3]
   19c0c:	ldrb	r7, [r0, #25]
   19c10:	ldr	r2, [r0, #32]
   19c14:	ldr	r0, [r0, #20]
   19c18:	ldr	r1, [r4, #16]
   19c1c:	mul	r7, r2, r7
   19c20:	add	r3, r0, r7
   19c24:	cmp	r1, r3
   19c28:	bcc	19c48 <flatcc_json_printer_int16_struct_field@@Base+0x180>
   19c2c:	mov	r2, r7
   19c30:	mov	r1, #32
   19c34:	bl	124e0 <memset@plt>
   19c38:	ldr	r2, [r4, #20]
   19c3c:	add	r2, r2, r7
   19c40:	str	r2, [r4, #20]
   19c44:	b	19b0c <flatcc_json_printer_int16_struct_field@@Base+0x44>
   19c48:	mov	r1, r7
   19c4c:	mov	r0, r4
   19c50:	bl	14bc8 <test_print@@Base+0x120c>
   19c54:	ldr	r2, [r4, #20]
   19c58:	b	19b0c <flatcc_json_printer_int16_struct_field@@Base+0x44>

00019c5c <flatcc_json_printer_int32_struct_field@@Base>:
   19c5c:	cmp	r1, #0
   19c60:	push	{r4, r5, r6, r7, r8, lr}
   19c64:	mov	r4, r0
   19c68:	ldr	r5, [r2, r3]
   19c6c:	ldrne	r3, [r0, #20]
   19c70:	movne	r2, #44	; 0x2c
   19c74:	addne	r1, r3, #1
   19c78:	strne	r1, [r0, #20]
   19c7c:	strbne	r2, [r3]
   19c80:	ldrb	r1, [r0, #25]
   19c84:	ldr	r6, [sp, #28]
   19c88:	cmp	r1, #0
   19c8c:	bne	19d88 <flatcc_json_printer_int32_struct_field@@Base+0x12c>
   19c90:	ldr	r2, [r0, #20]
   19c94:	ldr	r3, [r0, #16]
   19c98:	cmp	r2, r3
   19c9c:	bcs	19d64 <flatcc_json_printer_int32_struct_field@@Base+0x108>
   19ca0:	mov	r3, #34	; 0x22
   19ca4:	strb	r3, [r2]
   19ca8:	ldrb	r3, [r4, #26]
   19cac:	ldr	r0, [r4, #20]
   19cb0:	ldr	r2, [r4, #16]
   19cb4:	cmp	r3, #0
   19cb8:	addeq	r0, r0, #1
   19cbc:	add	r3, r0, r6
   19cc0:	cmp	r2, r3
   19cc4:	str	r0, [r4, #20]
   19cc8:	mov	r2, r6
   19ccc:	ldr	r1, [sp, #24]
   19cd0:	bhi	19d74 <flatcc_json_printer_int32_struct_field@@Base+0x118>
   19cd4:	mov	r0, r4
   19cd8:	bl	14b18 <test_print@@Base+0x115c>
   19cdc:	ldr	r6, [r4, #20]
   19ce0:	mov	r3, #34	; 0x22
   19ce4:	strb	r3, [r6]
   19ce8:	ldr	r1, [r4, #20]
   19cec:	ldrb	r3, [r4, #26]
   19cf0:	clz	r3, r3
   19cf4:	lsr	r3, r3, #5
   19cf8:	add	r2, r1, r3
   19cfc:	mov	r0, #58	; 0x3a
   19d00:	add	r2, r2, #1
   19d04:	str	r2, [r4, #20]
   19d08:	strb	r0, [r1, r3]
   19d0c:	ldr	r3, [r4, #20]
   19d10:	mov	r2, #32
   19d14:	lsr	r6, r5, #31
   19d18:	strb	r2, [r3]
   19d1c:	ldrb	r3, [r4, #25]
   19d20:	ldr	r2, [r4, #20]
   19d24:	adds	r3, r3, #0
   19d28:	movne	r3, #1
   19d2c:	cmp	r5, #0
   19d30:	add	r1, r2, r3
   19d34:	movlt	r0, #45	; 0x2d
   19d38:	rsblt	r5, r5, #0
   19d3c:	str	r1, [r4, #20]
   19d40:	strblt	r0, [r2, r3]
   19d44:	addlt	r1, r1, #1
   19d48:	mov	r0, r5
   19d4c:	bl	13e3c <test_print@@Base+0x480>
   19d50:	ldr	r3, [r4, #20]
   19d54:	add	r0, r6, r0
   19d58:	add	r3, r3, r0
   19d5c:	str	r3, [r4, #20]
   19d60:	pop	{r4, r5, r6, r7, r8, pc}
   19d64:	ldr	r3, [r0, #44]	; 0x2c
   19d68:	blx	r3
   19d6c:	ldr	r2, [r4, #20]
   19d70:	b	19ca0 <flatcc_json_printer_int32_struct_field@@Base+0x44>
   19d74:	bl	12444 <memcpy@plt>
   19d78:	ldr	r3, [r4, #20]
   19d7c:	add	r6, r3, r6
   19d80:	str	r6, [r4, #20]
   19d84:	b	19ce0 <flatcc_json_printer_int32_struct_field@@Base+0x84>
   19d88:	ldr	r3, [r0, #20]
   19d8c:	mov	r2, #10
   19d90:	add	r1, r3, #1
   19d94:	str	r1, [r0, #20]
   19d98:	strb	r2, [r3]
   19d9c:	ldrb	r7, [r0, #25]
   19da0:	ldr	r2, [r0, #32]
   19da4:	ldr	r0, [r0, #20]
   19da8:	ldr	r1, [r4, #16]
   19dac:	mul	r7, r2, r7
   19db0:	add	r3, r0, r7
   19db4:	cmp	r1, r3
   19db8:	bcc	19dd8 <flatcc_json_printer_int32_struct_field@@Base+0x17c>
   19dbc:	mov	r2, r7
   19dc0:	mov	r1, #32
   19dc4:	bl	124e0 <memset@plt>
   19dc8:	ldr	r2, [r4, #20]
   19dcc:	add	r2, r2, r7
   19dd0:	str	r2, [r4, #20]
   19dd4:	b	19ca0 <flatcc_json_printer_int32_struct_field@@Base+0x44>
   19dd8:	mov	r1, r7
   19ddc:	mov	r0, r4
   19de0:	bl	14bc8 <test_print@@Base+0x120c>
   19de4:	ldr	r2, [r4, #20]
   19de8:	b	19ca0 <flatcc_json_printer_int32_struct_field@@Base+0x44>

00019dec <flatcc_json_printer_int64_struct_field@@Base>:
   19dec:	cmp	r1, #0
   19df0:	push	{r4, r5, r6, r7, r8, lr}
   19df4:	mov	r4, r0
   19df8:	ldrd	r6, [r2, r3]
   19dfc:	ldrne	r3, [r0, #20]
   19e00:	movne	r2, #44	; 0x2c
   19e04:	addne	r1, r3, #1
   19e08:	strne	r1, [r0, #20]
   19e0c:	strbne	r2, [r3]
   19e10:	ldrb	r1, [r0, #25]
   19e14:	ldr	r5, [sp, #28]
   19e18:	cmp	r1, #0
   19e1c:	bne	19f28 <flatcc_json_printer_int64_struct_field@@Base+0x13c>
   19e20:	ldr	r2, [r0, #20]
   19e24:	ldr	r3, [r0, #16]
   19e28:	cmp	r2, r3
   19e2c:	bcs	19f04 <flatcc_json_printer_int64_struct_field@@Base+0x118>
   19e30:	mov	r3, #34	; 0x22
   19e34:	strb	r3, [r2]
   19e38:	ldrb	r3, [r4, #26]
   19e3c:	ldr	r0, [r4, #20]
   19e40:	ldr	r2, [r4, #16]
   19e44:	cmp	r3, #0
   19e48:	addeq	r0, r0, #1
   19e4c:	add	r3, r0, r5
   19e50:	cmp	r2, r3
   19e54:	str	r0, [r4, #20]
   19e58:	mov	r2, r5
   19e5c:	ldr	r1, [sp, #24]
   19e60:	bhi	19f14 <flatcc_json_printer_int64_struct_field@@Base+0x128>
   19e64:	mov	r0, r4
   19e68:	bl	14b18 <test_print@@Base+0x115c>
   19e6c:	ldr	r5, [r4, #20]
   19e70:	mov	r3, #34	; 0x22
   19e74:	strb	r3, [r5]
   19e78:	ldr	r1, [r4, #20]
   19e7c:	ldrb	r3, [r4, #26]
   19e80:	clz	r3, r3
   19e84:	lsr	r3, r3, #5
   19e88:	add	r2, r1, r3
   19e8c:	add	r2, r2, #1
   19e90:	mov	r0, #58	; 0x3a
   19e94:	str	r2, [r4, #20]
   19e98:	strb	r0, [r1, r3]
   19e9c:	ldr	r3, [r4, #20]
   19ea0:	mov	r2, #32
   19ea4:	lsr	r5, r7, #31
   19ea8:	strb	r2, [r3]
   19eac:	ldrb	r3, [r4, #25]
   19eb0:	ldr	r1, [r4, #20]
   19eb4:	adds	r3, r3, #0
   19eb8:	movne	r3, #1
   19ebc:	cmp	r6, #0
   19ec0:	add	r2, r1, r3
   19ec4:	sbcs	r0, r7, #0
   19ec8:	str	r2, [r4, #20]
   19ecc:	bge	19ee4 <flatcc_json_printer_int64_struct_field@@Base+0xf8>
   19ed0:	rsbs	r6, r6, #0
   19ed4:	rsc	r7, r7, #0
   19ed8:	add	r2, r2, #1
   19edc:	mov	r0, #45	; 0x2d
   19ee0:	strb	r0, [r1, r3]
   19ee4:	mov	r0, r6
   19ee8:	mov	r1, r7
   19eec:	bl	141a8 <test_print@@Base+0x7ec>
   19ef0:	ldr	r3, [r4, #20]
   19ef4:	add	r0, r5, r0
   19ef8:	add	r3, r3, r0
   19efc:	str	r3, [r4, #20]
   19f00:	pop	{r4, r5, r6, r7, r8, pc}
   19f04:	ldr	r3, [r0, #44]	; 0x2c
   19f08:	blx	r3
   19f0c:	ldr	r2, [r4, #20]
   19f10:	b	19e30 <flatcc_json_printer_int64_struct_field@@Base+0x44>
   19f14:	bl	12444 <memcpy@plt>
   19f18:	ldr	r3, [r4, #20]
   19f1c:	add	r5, r3, r5
   19f20:	str	r5, [r4, #20]
   19f24:	b	19e70 <flatcc_json_printer_int64_struct_field@@Base+0x84>
   19f28:	ldr	r3, [r0, #20]
   19f2c:	mov	r2, #10
   19f30:	add	r1, r3, #1
   19f34:	str	r1, [r0, #20]
   19f38:	strb	r2, [r3]
   19f3c:	ldrb	r8, [r0, #25]
   19f40:	ldr	r2, [r0, #32]
   19f44:	ldr	r0, [r0, #20]
   19f48:	ldr	r1, [r4, #16]
   19f4c:	mul	r8, r2, r8
   19f50:	add	r3, r0, r8
   19f54:	cmp	r1, r3
   19f58:	bcc	19f78 <flatcc_json_printer_int64_struct_field@@Base+0x18c>
   19f5c:	mov	r2, r8
   19f60:	mov	r1, #32
   19f64:	bl	124e0 <memset@plt>
   19f68:	ldr	r2, [r4, #20]
   19f6c:	add	r2, r2, r8
   19f70:	str	r2, [r4, #20]
   19f74:	b	19e30 <flatcc_json_printer_int64_struct_field@@Base+0x44>
   19f78:	mov	r1, r8
   19f7c:	mov	r0, r4
   19f80:	bl	14bc8 <test_print@@Base+0x120c>
   19f84:	ldr	r2, [r4, #20]
   19f88:	b	19e30 <flatcc_json_printer_int64_struct_field@@Base+0x44>

00019f8c <flatcc_json_printer_bool_struct_field@@Base>:
   19f8c:	cmp	r1, #0
   19f90:	push	{r4, r5, r6, r7, r8, lr}
   19f94:	mov	r4, r0
   19f98:	ldrb	r5, [r2, r3]
   19f9c:	ldrne	r3, [r0, #20]
   19fa0:	movne	r2, #44	; 0x2c
   19fa4:	addne	r1, r3, #1
   19fa8:	strne	r1, [r0, #20]
   19fac:	strbne	r2, [r3]
   19fb0:	ldrb	r1, [r0, #25]
   19fb4:	ldr	r6, [sp, #28]
   19fb8:	cmp	r1, #0
   19fbc:	bne	1a098 <flatcc_json_printer_bool_struct_field@@Base+0x10c>
   19fc0:	ldr	r2, [r0, #20]
   19fc4:	ldr	r3, [r0, #16]
   19fc8:	cmp	r2, r3
   19fcc:	bcs	1a074 <flatcc_json_printer_bool_struct_field@@Base+0xe8>
   19fd0:	mov	r3, #34	; 0x22
   19fd4:	strb	r3, [r2]
   19fd8:	ldrb	r3, [r4, #26]
   19fdc:	ldr	r0, [r4, #20]
   19fe0:	ldr	r2, [r4, #16]
   19fe4:	cmp	r3, #0
   19fe8:	addeq	r0, r0, #1
   19fec:	add	r3, r0, r6
   19ff0:	cmp	r2, r3
   19ff4:	str	r0, [r4, #20]
   19ff8:	mov	r2, r6
   19ffc:	ldr	r1, [sp, #24]
   1a000:	bhi	1a084 <flatcc_json_printer_bool_struct_field@@Base+0xf8>
   1a004:	mov	r0, r4
   1a008:	bl	14b18 <test_print@@Base+0x115c>
   1a00c:	ldr	r6, [r4, #20]
   1a010:	mov	r3, #34	; 0x22
   1a014:	strb	r3, [r6]
   1a018:	ldr	r1, [r4, #20]
   1a01c:	ldrb	r3, [r4, #26]
   1a020:	clz	r3, r3
   1a024:	lsr	r3, r3, #5
   1a028:	add	r2, r1, r3
   1a02c:	add	r2, r2, #1
   1a030:	mov	r0, #58	; 0x3a
   1a034:	str	r2, [r4, #20]
   1a038:	strb	r0, [r1, r3]
   1a03c:	ldr	r3, [r4, #20]
   1a040:	mov	r2, #32
   1a044:	mov	r0, r5
   1a048:	strb	r2, [r3]
   1a04c:	ldrb	r3, [r4, #25]
   1a050:	ldr	r1, [r4, #20]
   1a054:	cmp	r3, #0
   1a058:	addne	r1, r1, #1
   1a05c:	str	r1, [r4, #20]
   1a060:	bl	14ef4 <test_print@@Base+0x1538>
   1a064:	ldr	r3, [r4, #20]
   1a068:	add	r0, r3, r0
   1a06c:	str	r0, [r4, #20]
   1a070:	pop	{r4, r5, r6, r7, r8, pc}
   1a074:	ldr	r3, [r0, #44]	; 0x2c
   1a078:	blx	r3
   1a07c:	ldr	r2, [r4, #20]
   1a080:	b	19fd0 <flatcc_json_printer_bool_struct_field@@Base+0x44>
   1a084:	bl	12444 <memcpy@plt>
   1a088:	ldr	r3, [r4, #20]
   1a08c:	add	r6, r3, r6
   1a090:	str	r6, [r4, #20]
   1a094:	b	1a010 <flatcc_json_printer_bool_struct_field@@Base+0x84>
   1a098:	ldr	r3, [r0, #20]
   1a09c:	mov	r2, #10
   1a0a0:	add	r1, r3, #1
   1a0a4:	str	r1, [r0, #20]
   1a0a8:	strb	r2, [r3]
   1a0ac:	ldrb	r7, [r0, #25]
   1a0b0:	ldr	r2, [r0, #32]
   1a0b4:	ldr	r0, [r0, #20]
   1a0b8:	ldr	r1, [r4, #16]
   1a0bc:	mul	r7, r2, r7
   1a0c0:	add	r3, r0, r7
   1a0c4:	cmp	r1, r3
   1a0c8:	bcc	1a0e8 <flatcc_json_printer_bool_struct_field@@Base+0x15c>
   1a0cc:	mov	r2, r7
   1a0d0:	mov	r1, #32
   1a0d4:	bl	124e0 <memset@plt>
   1a0d8:	ldr	r2, [r4, #20]
   1a0dc:	add	r2, r2, r7
   1a0e0:	str	r2, [r4, #20]
   1a0e4:	b	19fd0 <flatcc_json_printer_bool_struct_field@@Base+0x44>
   1a0e8:	mov	r1, r7
   1a0ec:	mov	r0, r4
   1a0f0:	bl	14bc8 <test_print@@Base+0x120c>
   1a0f4:	ldr	r2, [r4, #20]
   1a0f8:	b	19fd0 <flatcc_json_printer_bool_struct_field@@Base+0x44>

0001a0fc <flatcc_json_printer_float_struct_field@@Base>:
   1a0fc:	cmp	r1, #0
   1a100:	add	r3, r2, r3
   1a104:	push	{r4, r5, r6, lr}
   1a108:	vpush	{d8}
   1a10c:	vldr	s16, [r3]
   1a110:	ldrne	r3, [r0, #20]
   1a114:	movne	r2, #44	; 0x2c
   1a118:	addne	r1, r3, #1
   1a11c:	strne	r1, [r0, #20]
   1a120:	strbne	r2, [r3]
   1a124:	ldrb	r1, [r0, #25]
   1a128:	mov	r4, r0
   1a12c:	ldr	r5, [sp, #28]
   1a130:	cmp	r1, #0
   1a134:	bne	1a214 <flatcc_json_printer_float_struct_field@@Base+0x118>
   1a138:	ldr	r2, [r0, #20]
   1a13c:	ldr	r3, [r0, #16]
   1a140:	cmp	r2, r3
   1a144:	bcs	1a1f0 <flatcc_json_printer_float_struct_field@@Base+0xf4>
   1a148:	mov	r3, #34	; 0x22
   1a14c:	strb	r3, [r2]
   1a150:	ldrb	r3, [r4, #26]
   1a154:	ldr	r0, [r4, #20]
   1a158:	ldr	r2, [r4, #16]
   1a15c:	cmp	r3, #0
   1a160:	addeq	r0, r0, #1
   1a164:	add	r3, r0, r5
   1a168:	cmp	r2, r3
   1a16c:	str	r0, [r4, #20]
   1a170:	mov	r2, r5
   1a174:	ldr	r1, [sp, #24]
   1a178:	bhi	1a200 <flatcc_json_printer_float_struct_field@@Base+0x104>
   1a17c:	mov	r0, r4
   1a180:	bl	14b18 <test_print@@Base+0x115c>
   1a184:	ldr	r5, [r4, #20]
   1a188:	mov	r3, #34	; 0x22
   1a18c:	strb	r3, [r5]
   1a190:	ldr	r1, [r4, #20]
   1a194:	ldrb	r3, [r4, #26]
   1a198:	clz	r3, r3
   1a19c:	lsr	r3, r3, #5
   1a1a0:	add	r2, r1, r3
   1a1a4:	add	r2, r2, #1
   1a1a8:	mov	r0, #58	; 0x3a
   1a1ac:	str	r2, [r4, #20]
   1a1b0:	strb	r0, [r1, r3]
   1a1b4:	ldr	r3, [r4, #20]
   1a1b8:	mov	r2, #32
   1a1bc:	vcvt.f64.f32	d0, s16
   1a1c0:	strb	r2, [r3]
   1a1c4:	ldrb	r3, [r4, #25]
   1a1c8:	ldr	r0, [r4, #20]
   1a1cc:	cmp	r3, #0
   1a1d0:	addne	r0, r0, #1
   1a1d4:	str	r0, [r4, #20]
   1a1d8:	bl	151c0 <test_print@@Base+0x1804>
   1a1dc:	vpop	{d8}
   1a1e0:	ldr	r3, [r4, #20]
   1a1e4:	add	r0, r3, r0
   1a1e8:	str	r0, [r4, #20]
   1a1ec:	pop	{r4, r5, r6, pc}
   1a1f0:	ldr	r3, [r0, #44]	; 0x2c
   1a1f4:	blx	r3
   1a1f8:	ldr	r2, [r4, #20]
   1a1fc:	b	1a148 <flatcc_json_printer_float_struct_field@@Base+0x4c>
   1a200:	bl	12444 <memcpy@plt>
   1a204:	ldr	r3, [r4, #20]
   1a208:	add	r5, r3, r5
   1a20c:	str	r5, [r4, #20]
   1a210:	b	1a188 <flatcc_json_printer_float_struct_field@@Base+0x8c>
   1a214:	ldr	r3, [r0, #20]
   1a218:	mov	r2, #10
   1a21c:	add	r1, r3, #1
   1a220:	str	r1, [r0, #20]
   1a224:	strb	r2, [r3]
   1a228:	ldrb	r6, [r0, #25]
   1a22c:	ldr	r2, [r0, #32]
   1a230:	ldr	r0, [r0, #20]
   1a234:	ldr	r1, [r4, #16]
   1a238:	mul	r6, r2, r6
   1a23c:	add	r3, r0, r6
   1a240:	cmp	r1, r3
   1a244:	bcc	1a264 <flatcc_json_printer_float_struct_field@@Base+0x168>
   1a248:	mov	r2, r6
   1a24c:	mov	r1, #32
   1a250:	bl	124e0 <memset@plt>
   1a254:	ldr	r2, [r4, #20]
   1a258:	add	r2, r2, r6
   1a25c:	str	r2, [r4, #20]
   1a260:	b	1a148 <flatcc_json_printer_float_struct_field@@Base+0x4c>
   1a264:	mov	r1, r6
   1a268:	mov	r0, r4
   1a26c:	bl	14bc8 <test_print@@Base+0x120c>
   1a270:	ldr	r2, [r4, #20]
   1a274:	b	1a148 <flatcc_json_printer_float_struct_field@@Base+0x4c>

0001a278 <flatcc_json_printer_double_struct_field@@Base>:
   1a278:	cmp	r1, #0
   1a27c:	add	r3, r2, r3
   1a280:	push	{r4, r5, r6, lr}
   1a284:	vpush	{d8}
   1a288:	vldr	d8, [r3]
   1a28c:	ldrne	r3, [r0, #20]
   1a290:	movne	r2, #44	; 0x2c
   1a294:	addne	r1, r3, #1
   1a298:	strne	r1, [r0, #20]
   1a29c:	strbne	r2, [r3]
   1a2a0:	ldrb	r1, [r0, #25]
   1a2a4:	mov	r4, r0
   1a2a8:	ldr	r5, [sp, #28]
   1a2ac:	cmp	r1, #0
   1a2b0:	bne	1a390 <flatcc_json_printer_double_struct_field@@Base+0x118>
   1a2b4:	ldr	r2, [r0, #20]
   1a2b8:	ldr	r3, [r0, #16]
   1a2bc:	cmp	r2, r3
   1a2c0:	bcs	1a36c <flatcc_json_printer_double_struct_field@@Base+0xf4>
   1a2c4:	mov	r3, #34	; 0x22
   1a2c8:	strb	r3, [r2]
   1a2cc:	ldrb	r3, [r4, #26]
   1a2d0:	ldr	r0, [r4, #20]
   1a2d4:	ldr	r2, [r4, #16]
   1a2d8:	cmp	r3, #0
   1a2dc:	addeq	r0, r0, #1
   1a2e0:	add	r3, r0, r5
   1a2e4:	cmp	r2, r3
   1a2e8:	str	r0, [r4, #20]
   1a2ec:	mov	r2, r5
   1a2f0:	ldr	r1, [sp, #24]
   1a2f4:	bhi	1a37c <flatcc_json_printer_double_struct_field@@Base+0x104>
   1a2f8:	mov	r0, r4
   1a2fc:	bl	14b18 <test_print@@Base+0x115c>
   1a300:	ldr	r5, [r4, #20]
   1a304:	mov	r3, #34	; 0x22
   1a308:	strb	r3, [r5]
   1a30c:	ldr	r1, [r4, #20]
   1a310:	ldrb	r3, [r4, #26]
   1a314:	clz	r3, r3
   1a318:	lsr	r3, r3, #5
   1a31c:	add	r2, r1, r3
   1a320:	add	r2, r2, #1
   1a324:	mov	r0, #58	; 0x3a
   1a328:	str	r2, [r4, #20]
   1a32c:	strb	r0, [r1, r3]
   1a330:	ldr	r3, [r4, #20]
   1a334:	mov	r2, #32
   1a338:	vmov.f64	d0, d8
   1a33c:	strb	r2, [r3]
   1a340:	ldrb	r3, [r4, #25]
   1a344:	ldr	r0, [r4, #20]
   1a348:	cmp	r3, #0
   1a34c:	addne	r0, r0, #1
   1a350:	str	r0, [r4, #20]
   1a354:	bl	151c0 <test_print@@Base+0x1804>
   1a358:	vpop	{d8}
   1a35c:	ldr	r3, [r4, #20]
   1a360:	add	r0, r3, r0
   1a364:	str	r0, [r4, #20]
   1a368:	pop	{r4, r5, r6, pc}
   1a36c:	ldr	r3, [r0, #44]	; 0x2c
   1a370:	blx	r3
   1a374:	ldr	r2, [r4, #20]
   1a378:	b	1a2c4 <flatcc_json_printer_double_struct_field@@Base+0x4c>
   1a37c:	bl	12444 <memcpy@plt>
   1a380:	ldr	r3, [r4, #20]
   1a384:	add	r5, r3, r5
   1a388:	str	r5, [r4, #20]
   1a38c:	b	1a304 <flatcc_json_printer_double_struct_field@@Base+0x8c>
   1a390:	ldr	r3, [r0, #20]
   1a394:	mov	r2, #10
   1a398:	add	r1, r3, #1
   1a39c:	str	r1, [r0, #20]
   1a3a0:	strb	r2, [r3]
   1a3a4:	ldrb	r6, [r0, #25]
   1a3a8:	ldr	r2, [r0, #32]
   1a3ac:	ldr	r0, [r0, #20]
   1a3b0:	ldr	r1, [r4, #16]
   1a3b4:	mul	r6, r2, r6
   1a3b8:	add	r3, r0, r6
   1a3bc:	cmp	r1, r3
   1a3c0:	bcc	1a3e0 <flatcc_json_printer_double_struct_field@@Base+0x168>
   1a3c4:	mov	r2, r6
   1a3c8:	mov	r1, #32
   1a3cc:	bl	124e0 <memset@plt>
   1a3d0:	ldr	r2, [r4, #20]
   1a3d4:	add	r2, r2, r6
   1a3d8:	str	r2, [r4, #20]
   1a3dc:	b	1a2c4 <flatcc_json_printer_double_struct_field@@Base+0x4c>
   1a3e0:	mov	r1, r6
   1a3e4:	mov	r0, r4
   1a3e8:	bl	14bc8 <test_print@@Base+0x120c>
   1a3ec:	ldr	r2, [r4, #20]
   1a3f0:	b	1a2c4 <flatcc_json_printer_double_struct_field@@Base+0x4c>

0001a3f4 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   1a3f4:	cmp	r1, #0
   1a3f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a3fc:	mov	r4, r0
   1a400:	ldrb	r5, [r2, r3]
   1a404:	ldrne	r3, [r0, #20]
   1a408:	movne	r2, #44	; 0x2c
   1a40c:	addne	r1, r3, #1
   1a410:	strne	r1, [r0, #20]
   1a414:	strbne	r2, [r3]
   1a418:	ldrb	r1, [r0, #25]
   1a41c:	ldr	r8, [sp, #32]
   1a420:	ldr	r7, [sp, #36]	; 0x24
   1a424:	cmp	r1, #0
   1a428:	ldr	r6, [sp, #40]	; 0x28
   1a42c:	bne	1a530 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x13c>
   1a430:	ldr	r2, [r0, #20]
   1a434:	ldr	r3, [r0, #16]
   1a438:	cmp	r2, r3
   1a43c:	bcs	1a4ec <flatcc_json_printer_uint8_enum_struct_field@@Base+0xf8>
   1a440:	mov	r3, #34	; 0x22
   1a444:	strb	r3, [r2]
   1a448:	ldrb	r3, [r4, #26]
   1a44c:	ldr	r0, [r4, #20]
   1a450:	ldr	r2, [r4, #16]
   1a454:	cmp	r3, #0
   1a458:	addeq	r0, r0, #1
   1a45c:	add	r3, r0, r7
   1a460:	cmp	r2, r3
   1a464:	str	r0, [r4, #20]
   1a468:	bhi	1a514 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x120>
   1a46c:	mov	r2, r7
   1a470:	mov	r1, r8
   1a474:	mov	r0, r4
   1a478:	bl	14b18 <test_print@@Base+0x115c>
   1a47c:	ldr	r7, [r4, #20]
   1a480:	mov	r3, #34	; 0x22
   1a484:	strb	r3, [r7]
   1a488:	ldr	r1, [r4, #20]
   1a48c:	ldrb	r3, [r4, #26]
   1a490:	clz	r3, r3
   1a494:	lsr	r3, r3, #5
   1a498:	add	r2, r1, r3
   1a49c:	add	r2, r2, #1
   1a4a0:	mov	r0, #58	; 0x3a
   1a4a4:	str	r2, [r4, #20]
   1a4a8:	strb	r0, [r1, r3]
   1a4ac:	ldr	r3, [r4, #20]
   1a4b0:	mov	r2, #32
   1a4b4:	strb	r2, [r3]
   1a4b8:	ldrb	r2, [r4, #25]
   1a4bc:	ldrb	r3, [r4, #27]
   1a4c0:	ldr	r1, [r4, #20]
   1a4c4:	cmp	r2, #0
   1a4c8:	addne	r1, r1, #1
   1a4cc:	cmp	r3, #0
   1a4d0:	str	r1, [r4, #20]
   1a4d4:	bne	1a4fc <flatcc_json_printer_uint8_enum_struct_field@@Base+0x108>
   1a4d8:	mov	r1, r5
   1a4dc:	mov	r0, r4
   1a4e0:	mov	r3, r6
   1a4e4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a4e8:	bx	r3
   1a4ec:	ldr	r3, [r0, #44]	; 0x2c
   1a4f0:	blx	r3
   1a4f4:	ldr	r2, [r4, #20]
   1a4f8:	b	1a440 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x4c>
   1a4fc:	mov	r0, r5
   1a500:	bl	14e04 <test_print@@Base+0x1448>
   1a504:	ldr	r3, [r4, #20]
   1a508:	add	r0, r3, r0
   1a50c:	str	r0, [r4, #20]
   1a510:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a514:	mov	r2, r7
   1a518:	mov	r1, r8
   1a51c:	bl	12444 <memcpy@plt>
   1a520:	ldr	r3, [r4, #20]
   1a524:	add	r7, r3, r7
   1a528:	str	r7, [r4, #20]
   1a52c:	b	1a480 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x8c>
   1a530:	ldr	r3, [r0, #20]
   1a534:	mov	r2, #10
   1a538:	add	r1, r3, #1
   1a53c:	str	r1, [r0, #20]
   1a540:	strb	r2, [r3]
   1a544:	ldrb	r3, [r0, #25]
   1a548:	ldr	r2, [r0, #32]
   1a54c:	ldr	r0, [r0, #20]
   1a550:	ldr	r1, [r4, #16]
   1a554:	mul	r9, r2, r3
   1a558:	add	r3, r0, r9
   1a55c:	cmp	r1, r3
   1a560:	bcc	1a580 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x18c>
   1a564:	mov	r2, r9
   1a568:	mov	r1, #32
   1a56c:	bl	124e0 <memset@plt>
   1a570:	ldr	r2, [r4, #20]
   1a574:	add	r2, r2, r9
   1a578:	str	r2, [r4, #20]
   1a57c:	b	1a440 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x4c>
   1a580:	mov	r1, r9
   1a584:	mov	r0, r4
   1a588:	bl	14bc8 <test_print@@Base+0x120c>
   1a58c:	ldr	r2, [r4, #20]
   1a590:	b	1a440 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x4c>

0001a594 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   1a594:	cmp	r1, #0
   1a598:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a59c:	mov	r4, r0
   1a5a0:	ldrh	r5, [r2, r3]
   1a5a4:	ldrne	r3, [r0, #20]
   1a5a8:	movne	r2, #44	; 0x2c
   1a5ac:	addne	r1, r3, #1
   1a5b0:	strne	r1, [r0, #20]
   1a5b4:	strbne	r2, [r3]
   1a5b8:	ldrb	r1, [r0, #25]
   1a5bc:	ldr	r8, [sp, #32]
   1a5c0:	ldr	r7, [sp, #36]	; 0x24
   1a5c4:	cmp	r1, #0
   1a5c8:	ldr	r6, [sp, #40]	; 0x28
   1a5cc:	bne	1a6d0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x13c>
   1a5d0:	ldr	r2, [r0, #20]
   1a5d4:	ldr	r3, [r0, #16]
   1a5d8:	cmp	r2, r3
   1a5dc:	bcs	1a68c <flatcc_json_printer_uint16_enum_struct_field@@Base+0xf8>
   1a5e0:	mov	r3, #34	; 0x22
   1a5e4:	strb	r3, [r2]
   1a5e8:	ldrb	r3, [r4, #26]
   1a5ec:	ldr	r0, [r4, #20]
   1a5f0:	ldr	r2, [r4, #16]
   1a5f4:	cmp	r3, #0
   1a5f8:	addeq	r0, r0, #1
   1a5fc:	add	r3, r0, r7
   1a600:	cmp	r2, r3
   1a604:	str	r0, [r4, #20]
   1a608:	bhi	1a6b4 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x120>
   1a60c:	mov	r2, r7
   1a610:	mov	r1, r8
   1a614:	mov	r0, r4
   1a618:	bl	14b18 <test_print@@Base+0x115c>
   1a61c:	ldr	r7, [r4, #20]
   1a620:	mov	r3, #34	; 0x22
   1a624:	strb	r3, [r7]
   1a628:	ldr	r1, [r4, #20]
   1a62c:	ldrb	r3, [r4, #26]
   1a630:	clz	r3, r3
   1a634:	lsr	r3, r3, #5
   1a638:	add	r2, r1, r3
   1a63c:	add	r2, r2, #1
   1a640:	mov	r0, #58	; 0x3a
   1a644:	str	r2, [r4, #20]
   1a648:	strb	r0, [r1, r3]
   1a64c:	ldr	r3, [r4, #20]
   1a650:	mov	r2, #32
   1a654:	strb	r2, [r3]
   1a658:	ldrb	r2, [r4, #25]
   1a65c:	ldrb	r3, [r4, #27]
   1a660:	ldr	r1, [r4, #20]
   1a664:	cmp	r2, #0
   1a668:	addne	r1, r1, #1
   1a66c:	cmp	r3, #0
   1a670:	str	r1, [r4, #20]
   1a674:	bne	1a69c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x108>
   1a678:	mov	r1, r5
   1a67c:	mov	r0, r4
   1a680:	mov	r3, r6
   1a684:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a688:	bx	r3
   1a68c:	ldr	r3, [r0, #44]	; 0x2c
   1a690:	blx	r3
   1a694:	ldr	r2, [r4, #20]
   1a698:	b	1a5e0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x4c>
   1a69c:	mov	r0, r5
   1a6a0:	bl	13cb8 <test_print@@Base+0x2fc>
   1a6a4:	ldr	r3, [r4, #20]
   1a6a8:	add	r0, r3, r0
   1a6ac:	str	r0, [r4, #20]
   1a6b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a6b4:	mov	r2, r7
   1a6b8:	mov	r1, r8
   1a6bc:	bl	12444 <memcpy@plt>
   1a6c0:	ldr	r3, [r4, #20]
   1a6c4:	add	r7, r3, r7
   1a6c8:	str	r7, [r4, #20]
   1a6cc:	b	1a620 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x8c>
   1a6d0:	ldr	r3, [r0, #20]
   1a6d4:	mov	r2, #10
   1a6d8:	add	r1, r3, #1
   1a6dc:	str	r1, [r0, #20]
   1a6e0:	strb	r2, [r3]
   1a6e4:	ldrb	r3, [r0, #25]
   1a6e8:	ldr	r2, [r0, #32]
   1a6ec:	ldr	r0, [r0, #20]
   1a6f0:	ldr	r1, [r4, #16]
   1a6f4:	mul	r9, r2, r3
   1a6f8:	add	r3, r0, r9
   1a6fc:	cmp	r1, r3
   1a700:	bcc	1a720 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x18c>
   1a704:	mov	r2, r9
   1a708:	mov	r1, #32
   1a70c:	bl	124e0 <memset@plt>
   1a710:	ldr	r2, [r4, #20]
   1a714:	add	r2, r2, r9
   1a718:	str	r2, [r4, #20]
   1a71c:	b	1a5e0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x4c>
   1a720:	mov	r1, r9
   1a724:	mov	r0, r4
   1a728:	bl	14bc8 <test_print@@Base+0x120c>
   1a72c:	ldr	r2, [r4, #20]
   1a730:	b	1a5e0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x4c>

0001a734 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   1a734:	cmp	r1, #0
   1a738:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a73c:	mov	r4, r0
   1a740:	ldr	r5, [r2, r3]
   1a744:	ldrne	r3, [r0, #20]
   1a748:	movne	r2, #44	; 0x2c
   1a74c:	addne	r1, r3, #1
   1a750:	strne	r1, [r0, #20]
   1a754:	strbne	r2, [r3]
   1a758:	ldrb	r1, [r0, #25]
   1a75c:	ldr	r8, [sp, #32]
   1a760:	ldr	r7, [sp, #36]	; 0x24
   1a764:	cmp	r1, #0
   1a768:	ldr	r6, [sp, #40]	; 0x28
   1a76c:	bne	1a870 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x13c>
   1a770:	ldr	r2, [r0, #20]
   1a774:	ldr	r3, [r0, #16]
   1a778:	cmp	r2, r3
   1a77c:	bcs	1a82c <flatcc_json_printer_uint32_enum_struct_field@@Base+0xf8>
   1a780:	mov	r3, #34	; 0x22
   1a784:	strb	r3, [r2]
   1a788:	ldrb	r3, [r4, #26]
   1a78c:	ldr	r0, [r4, #20]
   1a790:	ldr	r2, [r4, #16]
   1a794:	cmp	r3, #0
   1a798:	addeq	r0, r0, #1
   1a79c:	add	r3, r0, r7
   1a7a0:	cmp	r2, r3
   1a7a4:	str	r0, [r4, #20]
   1a7a8:	bhi	1a854 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x120>
   1a7ac:	mov	r2, r7
   1a7b0:	mov	r1, r8
   1a7b4:	mov	r0, r4
   1a7b8:	bl	14b18 <test_print@@Base+0x115c>
   1a7bc:	ldr	r7, [r4, #20]
   1a7c0:	mov	r3, #34	; 0x22
   1a7c4:	strb	r3, [r7]
   1a7c8:	ldr	r1, [r4, #20]
   1a7cc:	ldrb	r3, [r4, #26]
   1a7d0:	clz	r3, r3
   1a7d4:	lsr	r3, r3, #5
   1a7d8:	add	r2, r1, r3
   1a7dc:	add	r2, r2, #1
   1a7e0:	mov	r0, #58	; 0x3a
   1a7e4:	str	r2, [r4, #20]
   1a7e8:	strb	r0, [r1, r3]
   1a7ec:	ldr	r3, [r4, #20]
   1a7f0:	mov	r2, #32
   1a7f4:	strb	r2, [r3]
   1a7f8:	ldrb	r2, [r4, #25]
   1a7fc:	ldrb	r3, [r4, #27]
   1a800:	ldr	r1, [r4, #20]
   1a804:	cmp	r2, #0
   1a808:	addne	r1, r1, #1
   1a80c:	cmp	r3, #0
   1a810:	str	r1, [r4, #20]
   1a814:	bne	1a83c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x108>
   1a818:	mov	r1, r5
   1a81c:	mov	r0, r4
   1a820:	mov	r3, r6
   1a824:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a828:	bx	r3
   1a82c:	ldr	r3, [r0, #44]	; 0x2c
   1a830:	blx	r3
   1a834:	ldr	r2, [r4, #20]
   1a838:	b	1a780 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4c>
   1a83c:	mov	r0, r5
   1a840:	bl	13e3c <test_print@@Base+0x480>
   1a844:	ldr	r3, [r4, #20]
   1a848:	add	r0, r3, r0
   1a84c:	str	r0, [r4, #20]
   1a850:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a854:	mov	r2, r7
   1a858:	mov	r1, r8
   1a85c:	bl	12444 <memcpy@plt>
   1a860:	ldr	r3, [r4, #20]
   1a864:	add	r7, r3, r7
   1a868:	str	r7, [r4, #20]
   1a86c:	b	1a7c0 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x8c>
   1a870:	ldr	r3, [r0, #20]
   1a874:	mov	r2, #10
   1a878:	add	r1, r3, #1
   1a87c:	str	r1, [r0, #20]
   1a880:	strb	r2, [r3]
   1a884:	ldrb	r3, [r0, #25]
   1a888:	ldr	r2, [r0, #32]
   1a88c:	ldr	r0, [r0, #20]
   1a890:	ldr	r1, [r4, #16]
   1a894:	mul	r9, r2, r3
   1a898:	add	r3, r0, r9
   1a89c:	cmp	r1, r3
   1a8a0:	bcc	1a8c0 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x18c>
   1a8a4:	mov	r2, r9
   1a8a8:	mov	r1, #32
   1a8ac:	bl	124e0 <memset@plt>
   1a8b0:	ldr	r2, [r4, #20]
   1a8b4:	add	r2, r2, r9
   1a8b8:	str	r2, [r4, #20]
   1a8bc:	b	1a780 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4c>
   1a8c0:	mov	r1, r9
   1a8c4:	mov	r0, r4
   1a8c8:	bl	14bc8 <test_print@@Base+0x120c>
   1a8cc:	ldr	r2, [r4, #20]
   1a8d0:	b	1a780 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4c>

0001a8d4 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   1a8d4:	cmp	r1, #0
   1a8d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a8dc:	mov	r4, r0
   1a8e0:	ldrd	r6, [r2, r3]
   1a8e4:	ldrne	r3, [r0, #20]
   1a8e8:	movne	r2, #44	; 0x2c
   1a8ec:	addne	r1, r3, #1
   1a8f0:	strne	r1, [r0, #20]
   1a8f4:	strbne	r2, [r3]
   1a8f8:	ldrb	r1, [r0, #25]
   1a8fc:	ldr	r9, [sp, #32]
   1a900:	ldr	r8, [sp, #36]	; 0x24
   1a904:	cmp	r1, #0
   1a908:	ldr	r5, [sp, #40]	; 0x28
   1a90c:	bne	1aa18 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x144>
   1a910:	ldr	r2, [r0, #20]
   1a914:	ldr	r3, [r0, #16]
   1a918:	cmp	r2, r3
   1a91c:	bcs	1a9d0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xfc>
   1a920:	mov	r3, #34	; 0x22
   1a924:	strb	r3, [r2]
   1a928:	ldrb	r3, [r4, #26]
   1a92c:	ldr	r0, [r4, #20]
   1a930:	ldr	r2, [r4, #16]
   1a934:	cmp	r3, #0
   1a938:	addeq	r0, r0, #1
   1a93c:	add	r3, r0, r8
   1a940:	cmp	r2, r3
   1a944:	str	r0, [r4, #20]
   1a948:	bhi	1a9fc <flatcc_json_printer_uint64_enum_struct_field@@Base+0x128>
   1a94c:	mov	r2, r8
   1a950:	mov	r1, r9
   1a954:	mov	r0, r4
   1a958:	bl	14b18 <test_print@@Base+0x115c>
   1a95c:	ldr	r8, [r4, #20]
   1a960:	mov	r3, #34	; 0x22
   1a964:	strb	r3, [r8]
   1a968:	ldr	r1, [r4, #20]
   1a96c:	ldrb	r3, [r4, #26]
   1a970:	clz	r3, r3
   1a974:	lsr	r3, r3, #5
   1a978:	add	r2, r1, r3
   1a97c:	add	r2, r2, #1
   1a980:	mov	r0, #58	; 0x3a
   1a984:	str	r2, [r4, #20]
   1a988:	strb	r0, [r1, r3]
   1a98c:	ldr	r3, [r4, #20]
   1a990:	mov	r2, #32
   1a994:	strb	r2, [r3]
   1a998:	ldrb	r1, [r4, #25]
   1a99c:	ldrb	r3, [r4, #27]
   1a9a0:	ldr	r2, [r4, #20]
   1a9a4:	cmp	r1, #0
   1a9a8:	addne	r2, r2, #1
   1a9ac:	cmp	r3, #0
   1a9b0:	str	r2, [r4, #20]
   1a9b4:	bne	1a9e0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x10c>
   1a9b8:	mov	r2, r6
   1a9bc:	mov	r3, r7
   1a9c0:	mov	r0, r4
   1a9c4:	mov	r1, r5
   1a9c8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a9cc:	bx	r1
   1a9d0:	ldr	r3, [r0, #44]	; 0x2c
   1a9d4:	blx	r3
   1a9d8:	ldr	r2, [r4, #20]
   1a9dc:	b	1a920 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x4c>
   1a9e0:	mov	r0, r6
   1a9e4:	mov	r1, r7
   1a9e8:	bl	141a8 <test_print@@Base+0x7ec>
   1a9ec:	ldr	r3, [r4, #20]
   1a9f0:	add	r0, r3, r0
   1a9f4:	str	r0, [r4, #20]
   1a9f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a9fc:	mov	r2, r8
   1aa00:	mov	r1, r9
   1aa04:	bl	12444 <memcpy@plt>
   1aa08:	ldr	r3, [r4, #20]
   1aa0c:	add	r8, r3, r8
   1aa10:	str	r8, [r4, #20]
   1aa14:	b	1a960 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x8c>
   1aa18:	ldr	r3, [r0, #20]
   1aa1c:	mov	r2, #10
   1aa20:	add	r1, r3, #1
   1aa24:	str	r1, [r0, #20]
   1aa28:	strb	r2, [r3]
   1aa2c:	ldrb	r3, [r0, #25]
   1aa30:	ldr	r2, [r0, #32]
   1aa34:	ldr	r0, [r0, #20]
   1aa38:	ldr	r1, [r4, #16]
   1aa3c:	mul	sl, r2, r3
   1aa40:	add	r3, r0, sl
   1aa44:	cmp	r1, r3
   1aa48:	bcc	1aa68 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x194>
   1aa4c:	mov	r2, sl
   1aa50:	mov	r1, #32
   1aa54:	bl	124e0 <memset@plt>
   1aa58:	ldr	r2, [r4, #20]
   1aa5c:	add	r2, r2, sl
   1aa60:	str	r2, [r4, #20]
   1aa64:	b	1a920 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x4c>
   1aa68:	mov	r1, sl
   1aa6c:	mov	r0, r4
   1aa70:	bl	14bc8 <test_print@@Base+0x120c>
   1aa74:	ldr	r2, [r4, #20]
   1aa78:	b	1a920 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x4c>

0001aa7c <flatcc_json_printer_int8_enum_struct_field@@Base>:
   1aa7c:	cmp	r1, #0
   1aa80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1aa84:	mov	r4, r0
   1aa88:	ldrsb	r5, [r2, r3]
   1aa8c:	ldrne	r3, [r0, #20]
   1aa90:	movne	r2, #44	; 0x2c
   1aa94:	addne	r1, r3, #1
   1aa98:	strne	r1, [r0, #20]
   1aa9c:	strbne	r2, [r3]
   1aaa0:	ldrb	r1, [r0, #25]
   1aaa4:	ldr	r8, [sp, #32]
   1aaa8:	ldr	r7, [sp, #36]	; 0x24
   1aaac:	cmp	r1, #0
   1aab0:	ldr	r6, [sp, #40]	; 0x28
   1aab4:	bne	1abdc <flatcc_json_printer_int8_enum_struct_field@@Base+0x160>
   1aab8:	ldr	r2, [r0, #20]
   1aabc:	ldr	r3, [r0, #16]
   1aac0:	cmp	r2, r3
   1aac4:	bcs	1ab9c <flatcc_json_printer_int8_enum_struct_field@@Base+0x120>
   1aac8:	mov	r3, #34	; 0x22
   1aacc:	strb	r3, [r2]
   1aad0:	ldrb	r3, [r4, #26]
   1aad4:	ldr	r0, [r4, #20]
   1aad8:	ldr	r2, [r4, #16]
   1aadc:	cmp	r3, #0
   1aae0:	addeq	r0, r0, #1
   1aae4:	add	r3, r0, r7
   1aae8:	cmp	r2, r3
   1aaec:	str	r0, [r4, #20]
   1aaf0:	bhi	1abac <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   1aaf4:	mov	r2, r7
   1aaf8:	mov	r1, r8
   1aafc:	mov	r0, r4
   1ab00:	bl	14b18 <test_print@@Base+0x115c>
   1ab04:	ldr	r7, [r4, #20]
   1ab08:	mov	r3, #34	; 0x22
   1ab0c:	strb	r3, [r7]
   1ab10:	ldr	r1, [r4, #20]
   1ab14:	ldrb	r3, [r4, #26]
   1ab18:	clz	r3, r3
   1ab1c:	lsr	r3, r3, #5
   1ab20:	add	r2, r1, r3
   1ab24:	add	r2, r2, #1
   1ab28:	mov	r0, #58	; 0x3a
   1ab2c:	str	r2, [r4, #20]
   1ab30:	strb	r0, [r1, r3]
   1ab34:	ldr	r3, [r4, #20]
   1ab38:	mov	r2, #32
   1ab3c:	strb	r2, [r3]
   1ab40:	ldrb	r3, [r4, #25]
   1ab44:	ldrb	r0, [r4, #27]
   1ab48:	ldr	r2, [r4, #20]
   1ab4c:	adds	r3, r3, #0
   1ab50:	movne	r3, #1
   1ab54:	add	r1, r2, r3
   1ab58:	cmp	r0, #0
   1ab5c:	str	r1, [r4, #20]
   1ab60:	beq	1abc8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x14c>
   1ab64:	cmp	r5, #0
   1ab68:	lsr	r6, r5, #31
   1ab6c:	rsblt	r5, r5, #0
   1ab70:	movlt	r0, #45	; 0x2d
   1ab74:	sxtblt	r5, r5
   1ab78:	strblt	r0, [r2, r3]
   1ab7c:	addlt	r1, r1, #1
   1ab80:	uxtb	r0, r5
   1ab84:	bl	14e04 <test_print@@Base+0x1448>
   1ab88:	ldr	r3, [r4, #20]
   1ab8c:	add	r0, r6, r0
   1ab90:	add	r3, r3, r0
   1ab94:	str	r3, [r4, #20]
   1ab98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ab9c:	ldr	r3, [r0, #44]	; 0x2c
   1aba0:	blx	r3
   1aba4:	ldr	r2, [r4, #20]
   1aba8:	b	1aac8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x4c>
   1abac:	mov	r2, r7
   1abb0:	mov	r1, r8
   1abb4:	bl	12444 <memcpy@plt>
   1abb8:	ldr	r3, [r4, #20]
   1abbc:	add	r7, r3, r7
   1abc0:	str	r7, [r4, #20]
   1abc4:	b	1ab08 <flatcc_json_printer_int8_enum_struct_field@@Base+0x8c>
   1abc8:	mov	r1, r5
   1abcc:	mov	r0, r4
   1abd0:	mov	r3, r6
   1abd4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1abd8:	bx	r3
   1abdc:	ldr	r3, [r0, #20]
   1abe0:	mov	r2, #10
   1abe4:	add	r1, r3, #1
   1abe8:	str	r1, [r0, #20]
   1abec:	strb	r2, [r3]
   1abf0:	ldrb	r3, [r0, #25]
   1abf4:	ldr	r2, [r0, #32]
   1abf8:	ldr	r0, [r0, #20]
   1abfc:	ldr	r1, [r4, #16]
   1ac00:	mul	r9, r2, r3
   1ac04:	add	r3, r0, r9
   1ac08:	cmp	r1, r3
   1ac0c:	bcc	1ac2c <flatcc_json_printer_int8_enum_struct_field@@Base+0x1b0>
   1ac10:	mov	r2, r9
   1ac14:	mov	r1, #32
   1ac18:	bl	124e0 <memset@plt>
   1ac1c:	ldr	r2, [r4, #20]
   1ac20:	add	r2, r2, r9
   1ac24:	str	r2, [r4, #20]
   1ac28:	b	1aac8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x4c>
   1ac2c:	mov	r1, r9
   1ac30:	mov	r0, r4
   1ac34:	bl	14bc8 <test_print@@Base+0x120c>
   1ac38:	ldr	r2, [r4, #20]
   1ac3c:	b	1aac8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x4c>

0001ac40 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   1ac40:	cmp	r1, #0
   1ac44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ac48:	mov	r4, r0
   1ac4c:	ldrsh	r5, [r2, r3]
   1ac50:	ldrne	r3, [r0, #20]
   1ac54:	movne	r2, #44	; 0x2c
   1ac58:	addne	r1, r3, #1
   1ac5c:	strne	r1, [r0, #20]
   1ac60:	strbne	r2, [r3]
   1ac64:	ldrb	r1, [r0, #25]
   1ac68:	ldr	r8, [sp, #32]
   1ac6c:	ldr	r7, [sp, #36]	; 0x24
   1ac70:	cmp	r1, #0
   1ac74:	ldr	r6, [sp, #40]	; 0x28
   1ac78:	bne	1ada0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x160>
   1ac7c:	ldr	r2, [r0, #20]
   1ac80:	ldr	r3, [r0, #16]
   1ac84:	cmp	r2, r3
   1ac88:	bcs	1ad60 <flatcc_json_printer_int16_enum_struct_field@@Base+0x120>
   1ac8c:	mov	r3, #34	; 0x22
   1ac90:	strb	r3, [r2]
   1ac94:	ldrb	r3, [r4, #26]
   1ac98:	ldr	r0, [r4, #20]
   1ac9c:	ldr	r2, [r4, #16]
   1aca0:	cmp	r3, #0
   1aca4:	addeq	r0, r0, #1
   1aca8:	add	r3, r0, r7
   1acac:	cmp	r2, r3
   1acb0:	str	r0, [r4, #20]
   1acb4:	bhi	1ad70 <flatcc_json_printer_int16_enum_struct_field@@Base+0x130>
   1acb8:	mov	r2, r7
   1acbc:	mov	r1, r8
   1acc0:	mov	r0, r4
   1acc4:	bl	14b18 <test_print@@Base+0x115c>
   1acc8:	ldr	r7, [r4, #20]
   1accc:	mov	r3, #34	; 0x22
   1acd0:	strb	r3, [r7]
   1acd4:	ldr	r1, [r4, #20]
   1acd8:	ldrb	r3, [r4, #26]
   1acdc:	clz	r3, r3
   1ace0:	lsr	r3, r3, #5
   1ace4:	add	r2, r1, r3
   1ace8:	add	r2, r2, #1
   1acec:	mov	r0, #58	; 0x3a
   1acf0:	str	r2, [r4, #20]
   1acf4:	strb	r0, [r1, r3]
   1acf8:	ldr	r3, [r4, #20]
   1acfc:	mov	r2, #32
   1ad00:	strb	r2, [r3]
   1ad04:	ldrb	r3, [r4, #25]
   1ad08:	ldrb	r0, [r4, #27]
   1ad0c:	ldr	r2, [r4, #20]
   1ad10:	adds	r3, r3, #0
   1ad14:	movne	r3, #1
   1ad18:	add	r1, r2, r3
   1ad1c:	cmp	r0, #0
   1ad20:	str	r1, [r4, #20]
   1ad24:	beq	1ad8c <flatcc_json_printer_int16_enum_struct_field@@Base+0x14c>
   1ad28:	cmp	r5, #0
   1ad2c:	lsr	r6, r5, #31
   1ad30:	rsblt	r5, r5, #0
   1ad34:	movlt	r0, #45	; 0x2d
   1ad38:	sxthlt	r5, r5
   1ad3c:	strblt	r0, [r2, r3]
   1ad40:	addlt	r1, r1, #1
   1ad44:	uxth	r0, r5
   1ad48:	bl	13cb8 <test_print@@Base+0x2fc>
   1ad4c:	ldr	r3, [r4, #20]
   1ad50:	add	r0, r6, r0
   1ad54:	add	r3, r3, r0
   1ad58:	str	r3, [r4, #20]
   1ad5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ad60:	ldr	r3, [r0, #44]	; 0x2c
   1ad64:	blx	r3
   1ad68:	ldr	r2, [r4, #20]
   1ad6c:	b	1ac8c <flatcc_json_printer_int16_enum_struct_field@@Base+0x4c>
   1ad70:	mov	r2, r7
   1ad74:	mov	r1, r8
   1ad78:	bl	12444 <memcpy@plt>
   1ad7c:	ldr	r3, [r4, #20]
   1ad80:	add	r7, r3, r7
   1ad84:	str	r7, [r4, #20]
   1ad88:	b	1accc <flatcc_json_printer_int16_enum_struct_field@@Base+0x8c>
   1ad8c:	mov	r1, r5
   1ad90:	mov	r0, r4
   1ad94:	mov	r3, r6
   1ad98:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ad9c:	bx	r3
   1ada0:	ldr	r3, [r0, #20]
   1ada4:	mov	r2, #10
   1ada8:	add	r1, r3, #1
   1adac:	str	r1, [r0, #20]
   1adb0:	strb	r2, [r3]
   1adb4:	ldrb	r3, [r0, #25]
   1adb8:	ldr	r2, [r0, #32]
   1adbc:	ldr	r0, [r0, #20]
   1adc0:	ldr	r1, [r4, #16]
   1adc4:	mul	r9, r2, r3
   1adc8:	add	r3, r0, r9
   1adcc:	cmp	r1, r3
   1add0:	bcc	1adf0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x1b0>
   1add4:	mov	r2, r9
   1add8:	mov	r1, #32
   1addc:	bl	124e0 <memset@plt>
   1ade0:	ldr	r2, [r4, #20]
   1ade4:	add	r2, r2, r9
   1ade8:	str	r2, [r4, #20]
   1adec:	b	1ac8c <flatcc_json_printer_int16_enum_struct_field@@Base+0x4c>
   1adf0:	mov	r1, r9
   1adf4:	mov	r0, r4
   1adf8:	bl	14bc8 <test_print@@Base+0x120c>
   1adfc:	ldr	r2, [r4, #20]
   1ae00:	b	1ac8c <flatcc_json_printer_int16_enum_struct_field@@Base+0x4c>

0001ae04 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   1ae04:	cmp	r1, #0
   1ae08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ae0c:	mov	r4, r0
   1ae10:	ldr	r6, [r2, r3]
   1ae14:	ldrne	r3, [r0, #20]
   1ae18:	movne	r2, #44	; 0x2c
   1ae1c:	addne	r1, r3, #1
   1ae20:	strne	r1, [r0, #20]
   1ae24:	strbne	r2, [r3]
   1ae28:	ldrb	r1, [r0, #25]
   1ae2c:	ldr	r8, [sp, #32]
   1ae30:	ldr	r7, [sp, #36]	; 0x24
   1ae34:	cmp	r1, #0
   1ae38:	ldr	r5, [sp, #40]	; 0x28
   1ae3c:	bne	1af60 <flatcc_json_printer_int32_enum_struct_field@@Base+0x15c>
   1ae40:	ldr	r2, [r0, #20]
   1ae44:	ldr	r3, [r0, #16]
   1ae48:	cmp	r2, r3
   1ae4c:	bcs	1af20 <flatcc_json_printer_int32_enum_struct_field@@Base+0x11c>
   1ae50:	mov	r3, #34	; 0x22
   1ae54:	strb	r3, [r2]
   1ae58:	ldrb	r3, [r4, #26]
   1ae5c:	ldr	r0, [r4, #20]
   1ae60:	ldr	r2, [r4, #16]
   1ae64:	cmp	r3, #0
   1ae68:	addeq	r0, r0, #1
   1ae6c:	add	r3, r0, r7
   1ae70:	cmp	r2, r3
   1ae74:	str	r0, [r4, #20]
   1ae78:	bhi	1af30 <flatcc_json_printer_int32_enum_struct_field@@Base+0x12c>
   1ae7c:	mov	r2, r7
   1ae80:	mov	r1, r8
   1ae84:	mov	r0, r4
   1ae88:	bl	14b18 <test_print@@Base+0x115c>
   1ae8c:	ldr	r7, [r4, #20]
   1ae90:	mov	r3, #34	; 0x22
   1ae94:	strb	r3, [r7]
   1ae98:	ldr	r1, [r4, #20]
   1ae9c:	ldrb	r3, [r4, #26]
   1aea0:	clz	r3, r3
   1aea4:	lsr	r3, r3, #5
   1aea8:	add	r2, r1, r3
   1aeac:	add	r2, r2, #1
   1aeb0:	mov	r0, #58	; 0x3a
   1aeb4:	str	r2, [r4, #20]
   1aeb8:	strb	r0, [r1, r3]
   1aebc:	ldr	r3, [r4, #20]
   1aec0:	mov	r2, #32
   1aec4:	strb	r2, [r3]
   1aec8:	ldrb	r3, [r4, #25]
   1aecc:	ldrb	r0, [r4, #27]
   1aed0:	ldr	r2, [r4, #20]
   1aed4:	adds	r3, r3, #0
   1aed8:	movne	r3, #1
   1aedc:	add	r1, r2, r3
   1aee0:	cmp	r0, #0
   1aee4:	str	r1, [r4, #20]
   1aee8:	beq	1af4c <flatcc_json_printer_int32_enum_struct_field@@Base+0x148>
   1aeec:	cmp	r6, #0
   1aef0:	movlt	r0, #45	; 0x2d
   1aef4:	lsr	r5, r6, #31
   1aef8:	rsblt	r6, r6, #0
   1aefc:	strblt	r0, [r2, r3]
   1af00:	addlt	r1, r1, #1
   1af04:	mov	r0, r6
   1af08:	bl	13e3c <test_print@@Base+0x480>
   1af0c:	ldr	r3, [r4, #20]
   1af10:	add	r0, r5, r0
   1af14:	add	r3, r3, r0
   1af18:	str	r3, [r4, #20]
   1af1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1af20:	ldr	r3, [r0, #44]	; 0x2c
   1af24:	blx	r3
   1af28:	ldr	r2, [r4, #20]
   1af2c:	b	1ae50 <flatcc_json_printer_int32_enum_struct_field@@Base+0x4c>
   1af30:	mov	r2, r7
   1af34:	mov	r1, r8
   1af38:	bl	12444 <memcpy@plt>
   1af3c:	ldr	r3, [r4, #20]
   1af40:	add	r7, r3, r7
   1af44:	str	r7, [r4, #20]
   1af48:	b	1ae90 <flatcc_json_printer_int32_enum_struct_field@@Base+0x8c>
   1af4c:	mov	r1, r6
   1af50:	mov	r0, r4
   1af54:	mov	r3, r5
   1af58:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1af5c:	bx	r3
   1af60:	ldr	r3, [r0, #20]
   1af64:	mov	r2, #10
   1af68:	add	r1, r3, #1
   1af6c:	str	r1, [r0, #20]
   1af70:	strb	r2, [r3]
   1af74:	ldrb	r3, [r0, #25]
   1af78:	ldr	r2, [r0, #32]
   1af7c:	ldr	r0, [r0, #20]
   1af80:	ldr	r1, [r4, #16]
   1af84:	mul	r9, r2, r3
   1af88:	add	r3, r0, r9
   1af8c:	cmp	r1, r3
   1af90:	bcc	1afb0 <flatcc_json_printer_int32_enum_struct_field@@Base+0x1ac>
   1af94:	mov	r2, r9
   1af98:	mov	r1, #32
   1af9c:	bl	124e0 <memset@plt>
   1afa0:	ldr	r2, [r4, #20]
   1afa4:	add	r2, r2, r9
   1afa8:	str	r2, [r4, #20]
   1afac:	b	1ae50 <flatcc_json_printer_int32_enum_struct_field@@Base+0x4c>
   1afb0:	mov	r1, r9
   1afb4:	mov	r0, r4
   1afb8:	bl	14bc8 <test_print@@Base+0x120c>
   1afbc:	ldr	r2, [r4, #20]
   1afc0:	b	1ae50 <flatcc_json_printer_int32_enum_struct_field@@Base+0x4c>

0001afc4 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   1afc4:	cmp	r1, #0
   1afc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1afcc:	mov	r4, r0
   1afd0:	ldrd	r6, [r2, r3]
   1afd4:	ldrne	r3, [r0, #20]
   1afd8:	movne	r2, #44	; 0x2c
   1afdc:	addne	r1, r3, #1
   1afe0:	strne	r1, [r0, #20]
   1afe4:	strbne	r2, [r3]
   1afe8:	ldrb	r1, [r0, #25]
   1afec:	ldr	r9, [sp, #32]
   1aff0:	ldr	r8, [sp, #36]	; 0x24
   1aff4:	cmp	r1, #0
   1aff8:	ldr	r5, [sp, #40]	; 0x28
   1affc:	bne	1b138 <flatcc_json_printer_int64_enum_struct_field@@Base+0x174>
   1b000:	ldr	r2, [r0, #20]
   1b004:	ldr	r3, [r0, #16]
   1b008:	cmp	r2, r3
   1b00c:	bcs	1b0dc <flatcc_json_printer_int64_enum_struct_field@@Base+0x118>
   1b010:	mov	r3, #34	; 0x22
   1b014:	strb	r3, [r2]
   1b018:	ldrb	r3, [r4, #26]
   1b01c:	ldr	r0, [r4, #20]
   1b020:	ldr	r2, [r4, #16]
   1b024:	cmp	r3, #0
   1b028:	addeq	r0, r0, #1
   1b02c:	add	r3, r0, r8
   1b030:	cmp	r2, r3
   1b034:	str	r0, [r4, #20]
   1b038:	bhi	1b104 <flatcc_json_printer_int64_enum_struct_field@@Base+0x140>
   1b03c:	mov	r2, r8
   1b040:	mov	r1, r9
   1b044:	mov	r0, r4
   1b048:	bl	14b18 <test_print@@Base+0x115c>
   1b04c:	ldr	r8, [r4, #20]
   1b050:	mov	r3, #34	; 0x22
   1b054:	strb	r3, [r8]
   1b058:	ldr	r1, [r4, #20]
   1b05c:	ldrb	r3, [r4, #26]
   1b060:	clz	r3, r3
   1b064:	lsr	r3, r3, #5
   1b068:	add	r2, r1, r3
   1b06c:	add	r2, r2, #1
   1b070:	mov	r0, #58	; 0x3a
   1b074:	str	r2, [r4, #20]
   1b078:	strb	r0, [r1, r3]
   1b07c:	ldr	r3, [r4, #20]
   1b080:	mov	r2, #32
   1b084:	strb	r2, [r3]
   1b088:	ldrb	r3, [r4, #25]
   1b08c:	ldrb	r0, [r4, #27]
   1b090:	ldr	r1, [r4, #20]
   1b094:	adds	r3, r3, #0
   1b098:	movne	r3, #1
   1b09c:	add	r2, r1, r3
   1b0a0:	cmp	r0, #0
   1b0a4:	str	r2, [r4, #20]
   1b0a8:	beq	1b120 <flatcc_json_printer_int64_enum_struct_field@@Base+0x15c>
   1b0ac:	cmp	r6, #0
   1b0b0:	sbcs	r0, r7, #0
   1b0b4:	lsr	r5, r7, #31
   1b0b8:	blt	1b0ec <flatcc_json_printer_int64_enum_struct_field@@Base+0x128>
   1b0bc:	mov	r0, r6
   1b0c0:	mov	r1, r7
   1b0c4:	bl	141a8 <test_print@@Base+0x7ec>
   1b0c8:	ldr	r3, [r4, #20]
   1b0cc:	add	r0, r5, r0
   1b0d0:	add	r3, r3, r0
   1b0d4:	str	r3, [r4, #20]
   1b0d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b0dc:	ldr	r3, [r0, #44]	; 0x2c
   1b0e0:	blx	r3
   1b0e4:	ldr	r2, [r4, #20]
   1b0e8:	b	1b010 <flatcc_json_printer_int64_enum_struct_field@@Base+0x4c>
   1b0ec:	rsbs	r6, r6, #0
   1b0f0:	mov	r0, #45	; 0x2d
   1b0f4:	rsc	r7, r7, #0
   1b0f8:	add	r2, r2, #1
   1b0fc:	strb	r0, [r1, r3]
   1b100:	b	1b0bc <flatcc_json_printer_int64_enum_struct_field@@Base+0xf8>
   1b104:	mov	r2, r8
   1b108:	mov	r1, r9
   1b10c:	bl	12444 <memcpy@plt>
   1b110:	ldr	r3, [r4, #20]
   1b114:	add	r8, r3, r8
   1b118:	str	r8, [r4, #20]
   1b11c:	b	1b050 <flatcc_json_printer_int64_enum_struct_field@@Base+0x8c>
   1b120:	mov	r2, r6
   1b124:	mov	r3, r7
   1b128:	mov	r0, r4
   1b12c:	mov	r1, r5
   1b130:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b134:	bx	r1
   1b138:	ldr	r3, [r0, #20]
   1b13c:	mov	r2, #10
   1b140:	add	r1, r3, #1
   1b144:	str	r1, [r0, #20]
   1b148:	strb	r2, [r3]
   1b14c:	ldrb	r3, [r0, #25]
   1b150:	ldr	r2, [r0, #32]
   1b154:	ldr	r0, [r0, #20]
   1b158:	ldr	r1, [r4, #16]
   1b15c:	mul	sl, r2, r3
   1b160:	add	r3, r0, sl
   1b164:	cmp	r1, r3
   1b168:	bcc	1b188 <flatcc_json_printer_int64_enum_struct_field@@Base+0x1c4>
   1b16c:	mov	r2, sl
   1b170:	mov	r1, #32
   1b174:	bl	124e0 <memset@plt>
   1b178:	ldr	r2, [r4, #20]
   1b17c:	add	r2, r2, sl
   1b180:	str	r2, [r4, #20]
   1b184:	b	1b010 <flatcc_json_printer_int64_enum_struct_field@@Base+0x4c>
   1b188:	mov	r1, sl
   1b18c:	mov	r0, r4
   1b190:	bl	14bc8 <test_print@@Base+0x120c>
   1b194:	ldr	r2, [r4, #20]
   1b198:	b	1b010 <flatcc_json_printer_int64_enum_struct_field@@Base+0x4c>

0001b19c <flatcc_json_printer_bool_enum_struct_field@@Base>:
   1b19c:	cmp	r1, #0
   1b1a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b1a4:	mov	r4, r0
   1b1a8:	ldrb	r5, [r2, r3]
   1b1ac:	ldrne	r3, [r0, #20]
   1b1b0:	movne	r2, #44	; 0x2c
   1b1b4:	addne	r1, r3, #1
   1b1b8:	strne	r1, [r0, #20]
   1b1bc:	strbne	r2, [r3]
   1b1c0:	ldrb	r1, [r0, #25]
   1b1c4:	ldr	r8, [sp, #32]
   1b1c8:	ldr	r7, [sp, #36]	; 0x24
   1b1cc:	cmp	r1, #0
   1b1d0:	ldr	r6, [sp, #40]	; 0x28
   1b1d4:	bne	1b2d8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x13c>
   1b1d8:	ldr	r2, [r0, #20]
   1b1dc:	ldr	r3, [r0, #16]
   1b1e0:	cmp	r2, r3
   1b1e4:	bcs	1b294 <flatcc_json_printer_bool_enum_struct_field@@Base+0xf8>
   1b1e8:	mov	r3, #34	; 0x22
   1b1ec:	strb	r3, [r2]
   1b1f0:	ldrb	r3, [r4, #26]
   1b1f4:	ldr	r0, [r4, #20]
   1b1f8:	ldr	r2, [r4, #16]
   1b1fc:	cmp	r3, #0
   1b200:	addeq	r0, r0, #1
   1b204:	add	r3, r0, r7
   1b208:	cmp	r2, r3
   1b20c:	str	r0, [r4, #20]
   1b210:	bhi	1b2bc <flatcc_json_printer_bool_enum_struct_field@@Base+0x120>
   1b214:	mov	r2, r7
   1b218:	mov	r1, r8
   1b21c:	mov	r0, r4
   1b220:	bl	14b18 <test_print@@Base+0x115c>
   1b224:	ldr	r7, [r4, #20]
   1b228:	mov	r3, #34	; 0x22
   1b22c:	strb	r3, [r7]
   1b230:	ldr	r1, [r4, #20]
   1b234:	ldrb	r3, [r4, #26]
   1b238:	clz	r3, r3
   1b23c:	lsr	r3, r3, #5
   1b240:	add	r2, r1, r3
   1b244:	add	r2, r2, #1
   1b248:	mov	r0, #58	; 0x3a
   1b24c:	str	r2, [r4, #20]
   1b250:	strb	r0, [r1, r3]
   1b254:	ldr	r3, [r4, #20]
   1b258:	mov	r2, #32
   1b25c:	strb	r2, [r3]
   1b260:	ldrb	r2, [r4, #25]
   1b264:	ldrb	r3, [r4, #27]
   1b268:	ldr	r1, [r4, #20]
   1b26c:	cmp	r2, #0
   1b270:	addne	r1, r1, #1
   1b274:	cmp	r3, #0
   1b278:	str	r1, [r4, #20]
   1b27c:	bne	1b2a4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x108>
   1b280:	mov	r1, r5
   1b284:	mov	r0, r4
   1b288:	mov	r3, r6
   1b28c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b290:	bx	r3
   1b294:	ldr	r3, [r0, #44]	; 0x2c
   1b298:	blx	r3
   1b29c:	ldr	r2, [r4, #20]
   1b2a0:	b	1b1e8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x4c>
   1b2a4:	mov	r0, r5
   1b2a8:	bl	14ef4 <test_print@@Base+0x1538>
   1b2ac:	ldr	r3, [r4, #20]
   1b2b0:	add	r0, r3, r0
   1b2b4:	str	r0, [r4, #20]
   1b2b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b2bc:	mov	r2, r7
   1b2c0:	mov	r1, r8
   1b2c4:	bl	12444 <memcpy@plt>
   1b2c8:	ldr	r3, [r4, #20]
   1b2cc:	add	r7, r3, r7
   1b2d0:	str	r7, [r4, #20]
   1b2d4:	b	1b228 <flatcc_json_printer_bool_enum_struct_field@@Base+0x8c>
   1b2d8:	ldr	r3, [r0, #20]
   1b2dc:	mov	r2, #10
   1b2e0:	add	r1, r3, #1
   1b2e4:	str	r1, [r0, #20]
   1b2e8:	strb	r2, [r3]
   1b2ec:	ldrb	r3, [r0, #25]
   1b2f0:	ldr	r2, [r0, #32]
   1b2f4:	ldr	r0, [r0, #20]
   1b2f8:	ldr	r1, [r4, #16]
   1b2fc:	mul	r9, r2, r3
   1b300:	add	r3, r0, r9
   1b304:	cmp	r1, r3
   1b308:	bcc	1b328 <flatcc_json_printer_bool_enum_struct_field@@Base+0x18c>
   1b30c:	mov	r2, r9
   1b310:	mov	r1, #32
   1b314:	bl	124e0 <memset@plt>
   1b318:	ldr	r2, [r4, #20]
   1b31c:	add	r2, r2, r9
   1b320:	str	r2, [r4, #20]
   1b324:	b	1b1e8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x4c>
   1b328:	mov	r1, r9
   1b32c:	mov	r0, r4
   1b330:	bl	14bc8 <test_print@@Base+0x120c>
   1b334:	ldr	r2, [r4, #20]
   1b338:	b	1b1e8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x4c>

0001b33c <flatcc_json_printer_uint8_vector_field@@Base>:
   1b33c:	add	r2, r2, #2
   1b340:	ldr	ip, [r1, #8]
   1b344:	lsl	r2, r2, #1
   1b348:	cmp	ip, r2
   1b34c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b350:	ldr	r7, [sp, #40]	; 0x28
   1b354:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b358:	ldr	ip, [r1, #4]
   1b35c:	ldrh	ip, [ip, r2]
   1b360:	cmp	ip, #0
   1b364:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b368:	ldr	r5, [r1]
   1b36c:	adds	lr, r5, ip
   1b370:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b374:	ldr	r2, [r1, #16]
   1b378:	mov	r8, r3
   1b37c:	cmp	r2, #0
   1b380:	add	r2, r2, #1
   1b384:	str	r2, [r1, #16]
   1b388:	ldrne	r2, [r0, #20]
   1b38c:	movne	r1, #44	; 0x2c
   1b390:	addne	r4, r2, #1
   1b394:	strne	r4, [r0, #20]
   1b398:	strbne	r1, [r2]
   1b39c:	ldrb	r1, [r0, #25]
   1b3a0:	ldr	r3, [r5, ip]
   1b3a4:	mov	r4, r0
   1b3a8:	cmp	r1, #0
   1b3ac:	add	r6, lr, r3
   1b3b0:	ldr	r5, [lr, r3]
   1b3b4:	ldr	r3, [r0, #20]
   1b3b8:	bne	1b63c <flatcc_json_printer_uint8_vector_field@@Base+0x300>
   1b3bc:	ldr	r2, [r0, #16]
   1b3c0:	cmp	r3, r2
   1b3c4:	bcc	1b3d4 <flatcc_json_printer_uint8_vector_field@@Base+0x98>
   1b3c8:	ldr	r3, [r0, #44]	; 0x2c
   1b3cc:	blx	r3
   1b3d0:	ldr	r3, [r4, #20]
   1b3d4:	mov	r2, #34	; 0x22
   1b3d8:	strb	r2, [r3]
   1b3dc:	ldrb	r3, [r4, #26]
   1b3e0:	ldr	r0, [r4, #20]
   1b3e4:	ldr	r2, [r4, #16]
   1b3e8:	cmp	r3, #0
   1b3ec:	addeq	r0, r0, #1
   1b3f0:	add	r3, r0, r7
   1b3f4:	cmp	r2, r3
   1b3f8:	str	r0, [r4, #20]
   1b3fc:	bhi	1b5bc <flatcc_json_printer_uint8_vector_field@@Base+0x280>
   1b400:	mov	r2, r7
   1b404:	mov	r1, r8
   1b408:	mov	r0, r4
   1b40c:	bl	14b18 <test_print@@Base+0x115c>
   1b410:	ldr	r7, [r4, #20]
   1b414:	mov	r3, #34	; 0x22
   1b418:	strb	r3, [r7]
   1b41c:	ldr	r1, [r4, #20]
   1b420:	ldrb	r3, [r4, #26]
   1b424:	clz	r3, r3
   1b428:	lsr	r3, r3, #5
   1b42c:	add	r2, r1, r3
   1b430:	add	r2, r2, #1
   1b434:	mov	r0, #58	; 0x3a
   1b438:	str	r2, [r4, #20]
   1b43c:	strb	r0, [r1, r3]
   1b440:	ldr	r3, [r4, #20]
   1b444:	mov	r2, #32
   1b448:	mov	ip, #91	; 0x5b
   1b44c:	strb	r2, [r3]
   1b450:	ldrb	r3, [r4, #25]
   1b454:	ldr	r0, [r4, #20]
   1b458:	ldr	r2, [r4, #32]
   1b45c:	adds	r3, r3, #0
   1b460:	movne	r3, #1
   1b464:	add	r1, r0, r3
   1b468:	add	r1, r1, #1
   1b46c:	add	r2, r2, #1
   1b470:	cmp	r5, #0
   1b474:	str	r1, [r4, #20]
   1b478:	str	r2, [r4, #32]
   1b47c:	strb	ip, [r0, r3]
   1b480:	bne	1b4a8 <flatcc_json_printer_uint8_vector_field@@Base+0x16c>
   1b484:	ldr	r0, [r4, #20]
   1b488:	ldrb	r3, [r4, #25]
   1b48c:	cmp	r3, #0
   1b490:	bne	1b5d8 <flatcc_json_printer_uint8_vector_field@@Base+0x29c>
   1b494:	add	r2, r0, #1
   1b498:	mov	r3, #93	; 0x5d
   1b49c:	str	r2, [r4, #20]
   1b4a0:	strb	r3, [r0]
   1b4a4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b4a8:	ldrb	r3, [r4, #25]
   1b4ac:	cmp	r3, #0
   1b4b0:	bne	1b688 <flatcc_json_printer_uint8_vector_field@@Base+0x34c>
   1b4b4:	ldr	r1, [r4, #20]
   1b4b8:	ldr	r2, [r4, #16]
   1b4bc:	cmp	r1, r2
   1b4c0:	bcs	1b6ac <flatcc_json_printer_uint8_vector_field@@Base+0x370>
   1b4c4:	ldrb	r0, [r6, #4]
   1b4c8:	bl	14e04 <test_print@@Base+0x1448>
   1b4cc:	ldr	r3, [r4, #20]
   1b4d0:	cmp	r5, #1
   1b4d4:	add	fp, r6, #5
   1b4d8:	add	r0, r3, r0
   1b4dc:	str	r0, [r4, #20]
   1b4e0:	beq	1b488 <flatcc_json_printer_uint8_vector_field@@Base+0x14c>
   1b4e4:	add	r5, r5, #4
   1b4e8:	mov	r7, #44	; 0x2c
   1b4ec:	mov	r9, #10
   1b4f0:	mov	r8, #32
   1b4f4:	b	1b528 <flatcc_json_printer_uint8_vector_field@@Base+0x1ec>
   1b4f8:	ldr	r1, [r4, #20]
   1b4fc:	ldr	r3, [r4, #16]
   1b500:	cmp	r1, r3
   1b504:	bcs	1b590 <flatcc_json_printer_uint8_vector_field@@Base+0x254>
   1b508:	ldrb	r0, [fp], #1
   1b50c:	bl	14e04 <test_print@@Base+0x1448>
   1b510:	ldr	r3, [r4, #20]
   1b514:	sub	r2, r5, fp
   1b518:	cmn	r6, r2
   1b51c:	add	r0, r3, r0
   1b520:	str	r0, [r4, #20]
   1b524:	beq	1b488 <flatcc_json_printer_uint8_vector_field@@Base+0x14c>
   1b528:	add	r3, r0, #1
   1b52c:	str	r3, [r4, #20]
   1b530:	strb	r7, [r0]
   1b534:	ldrb	r3, [r4, #25]
   1b538:	cmp	r3, #0
   1b53c:	beq	1b4f8 <flatcc_json_printer_uint8_vector_field@@Base+0x1bc>
   1b540:	ldr	r3, [r4, #20]
   1b544:	mov	r1, r8
   1b548:	add	r2, r3, #1
   1b54c:	str	r2, [r4, #20]
   1b550:	strb	r9, [r3]
   1b554:	ldrb	r3, [r4, #25]
   1b558:	ldr	r2, [r4, #32]
   1b55c:	ldr	ip, [r4, #20]
   1b560:	ldr	lr, [r4, #16]
   1b564:	mul	sl, r2, r3
   1b568:	mov	r0, ip
   1b56c:	add	ip, ip, sl
   1b570:	cmp	lr, ip
   1b574:	mov	r2, sl
   1b578:	bcc	1b5a8 <flatcc_json_printer_uint8_vector_field@@Base+0x26c>
   1b57c:	bl	124e0 <memset@plt>
   1b580:	ldr	r1, [r4, #20]
   1b584:	add	r1, r1, sl
   1b588:	str	r1, [r4, #20]
   1b58c:	b	1b508 <flatcc_json_printer_uint8_vector_field@@Base+0x1cc>
   1b590:	mov	r1, #0
   1b594:	ldr	r3, [r4, #44]	; 0x2c
   1b598:	mov	r0, r4
   1b59c:	blx	r3
   1b5a0:	ldr	r1, [r4, #20]
   1b5a4:	b	1b508 <flatcc_json_printer_uint8_vector_field@@Base+0x1cc>
   1b5a8:	mov	r1, sl
   1b5ac:	mov	r0, r4
   1b5b0:	bl	14bc8 <test_print@@Base+0x120c>
   1b5b4:	ldr	r1, [r4, #20]
   1b5b8:	b	1b508 <flatcc_json_printer_uint8_vector_field@@Base+0x1cc>
   1b5bc:	mov	r2, r7
   1b5c0:	mov	r1, r8
   1b5c4:	bl	12444 <memcpy@plt>
   1b5c8:	ldr	r3, [r4, #20]
   1b5cc:	add	r7, r3, r7
   1b5d0:	str	r7, [r4, #20]
   1b5d4:	b	1b414 <flatcc_json_printer_uint8_vector_field@@Base+0xd8>
   1b5d8:	add	r2, r0, #1
   1b5dc:	mov	r3, #10
   1b5e0:	str	r2, [r4, #20]
   1b5e4:	strb	r3, [r0]
   1b5e8:	ldr	r3, [r4, #32]
   1b5ec:	ldrb	r5, [r4, #25]
   1b5f0:	sub	r3, r3, #1
   1b5f4:	ldr	r0, [r4, #20]
   1b5f8:	ldr	r2, [r4, #16]
   1b5fc:	mul	r5, r3, r5
   1b600:	str	r3, [r4, #32]
   1b604:	add	r3, r0, r5
   1b608:	cmp	r2, r3
   1b60c:	bcc	1b628 <flatcc_json_printer_uint8_vector_field@@Base+0x2ec>
   1b610:	mov	r2, r5
   1b614:	mov	r1, #32
   1b618:	bl	124e0 <memset@plt>
   1b61c:	ldr	r0, [r4, #20]
   1b620:	add	r0, r0, r5
   1b624:	b	1b494 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   1b628:	mov	r0, r4
   1b62c:	mov	r1, r5
   1b630:	bl	14bc8 <test_print@@Base+0x120c>
   1b634:	ldr	r0, [r4, #20]
   1b638:	b	1b494 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   1b63c:	mov	r2, #10
   1b640:	add	r1, r3, #1
   1b644:	str	r1, [r0, #20]
   1b648:	strb	r2, [r3]
   1b64c:	ldrb	r3, [r0, #25]
   1b650:	ldr	r9, [r0, #32]
   1b654:	ldr	r0, [r0, #20]
   1b658:	ldr	r2, [r4, #16]
   1b65c:	mul	r9, r9, r3
   1b660:	add	r3, r0, r9
   1b664:	cmp	r2, r3
   1b668:	bcc	1b6c4 <flatcc_json_printer_uint8_vector_field@@Base+0x388>
   1b66c:	mov	r2, r9
   1b670:	mov	r1, #32
   1b674:	bl	124e0 <memset@plt>
   1b678:	ldr	r3, [r4, #20]
   1b67c:	add	r3, r3, r9
   1b680:	str	r3, [r4, #20]
   1b684:	b	1b3d4 <flatcc_json_printer_uint8_vector_field@@Base+0x98>
   1b688:	ldr	r3, [r4, #20]
   1b68c:	mov	r2, #10
   1b690:	add	r1, r3, #1
   1b694:	str	r1, [r4, #20]
   1b698:	mov	r0, r4
   1b69c:	strb	r2, [r3]
   1b6a0:	bl	14c74 <test_print@@Base+0x12b8>
   1b6a4:	ldr	r1, [r4, #20]
   1b6a8:	b	1b4c4 <flatcc_json_printer_uint8_vector_field@@Base+0x188>
   1b6ac:	mov	r1, r3
   1b6b0:	mov	r0, r4
   1b6b4:	ldr	r3, [r4, #44]	; 0x2c
   1b6b8:	blx	r3
   1b6bc:	ldr	r1, [r4, #20]
   1b6c0:	b	1b4c4 <flatcc_json_printer_uint8_vector_field@@Base+0x188>
   1b6c4:	mov	r1, r9
   1b6c8:	mov	r0, r4
   1b6cc:	bl	14bc8 <test_print@@Base+0x120c>
   1b6d0:	ldr	r3, [r4, #20]
   1b6d4:	b	1b3d4 <flatcc_json_printer_uint8_vector_field@@Base+0x98>

0001b6d8 <flatcc_json_printer_utype_vector_field@@Base>:
   1b6d8:	b	1b33c <flatcc_json_printer_uint8_vector_field@@Base>

0001b6dc <flatcc_json_printer_uint16_vector_field@@Base>:
   1b6dc:	add	r2, r2, #2
   1b6e0:	ldr	ip, [r1, #8]
   1b6e4:	lsl	r2, r2, #1
   1b6e8:	cmp	ip, r2
   1b6ec:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b6f0:	ldr	r6, [sp, #40]	; 0x28
   1b6f4:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b6f8:	ldr	ip, [r1, #4]
   1b6fc:	ldrh	ip, [ip, r2]
   1b700:	cmp	ip, #0
   1b704:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b708:	ldr	r5, [r1]
   1b70c:	adds	lr, r5, ip
   1b710:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b714:	ldr	r2, [r1, #16]
   1b718:	mov	r7, r3
   1b71c:	cmp	r2, #0
   1b720:	add	r2, r2, #1
   1b724:	str	r2, [r1, #16]
   1b728:	ldrne	r2, [r0, #20]
   1b72c:	movne	r1, #44	; 0x2c
   1b730:	addne	r4, r2, #1
   1b734:	strne	r4, [r0, #20]
   1b738:	strbne	r1, [r2]
   1b73c:	ldrb	r1, [r0, #25]
   1b740:	ldr	r3, [r5, ip]
   1b744:	mov	r4, r0
   1b748:	cmp	r1, #0
   1b74c:	add	r5, lr, r3
   1b750:	ldr	sl, [lr, r3]
   1b754:	ldr	r3, [r0, #20]
   1b758:	bne	1b9e0 <flatcc_json_printer_uint16_vector_field@@Base+0x304>
   1b75c:	ldr	r2, [r0, #16]
   1b760:	cmp	r3, r2
   1b764:	bcc	1b774 <flatcc_json_printer_uint16_vector_field@@Base+0x98>
   1b768:	ldr	r3, [r0, #44]	; 0x2c
   1b76c:	blx	r3
   1b770:	ldr	r3, [r4, #20]
   1b774:	mov	r2, #34	; 0x22
   1b778:	strb	r2, [r3]
   1b77c:	ldrb	r3, [r4, #26]
   1b780:	ldr	r0, [r4, #20]
   1b784:	ldr	r2, [r4, #16]
   1b788:	cmp	r3, #0
   1b78c:	addeq	r0, r0, #1
   1b790:	add	r3, r0, r6
   1b794:	cmp	r2, r3
   1b798:	str	r0, [r4, #20]
   1b79c:	bhi	1b960 <flatcc_json_printer_uint16_vector_field@@Base+0x284>
   1b7a0:	mov	r2, r6
   1b7a4:	mov	r1, r7
   1b7a8:	mov	r0, r4
   1b7ac:	bl	14b18 <test_print@@Base+0x115c>
   1b7b0:	ldr	r6, [r4, #20]
   1b7b4:	mov	r3, #34	; 0x22
   1b7b8:	strb	r3, [r6]
   1b7bc:	ldr	r1, [r4, #20]
   1b7c0:	ldrb	r3, [r4, #26]
   1b7c4:	clz	r3, r3
   1b7c8:	lsr	r3, r3, #5
   1b7cc:	add	r2, r1, r3
   1b7d0:	add	r2, r2, #1
   1b7d4:	mov	r0, #58	; 0x3a
   1b7d8:	str	r2, [r4, #20]
   1b7dc:	strb	r0, [r1, r3]
   1b7e0:	ldr	r3, [r4, #20]
   1b7e4:	mov	r2, #32
   1b7e8:	mov	ip, #91	; 0x5b
   1b7ec:	strb	r2, [r3]
   1b7f0:	ldrb	r3, [r4, #25]
   1b7f4:	ldr	r0, [r4, #20]
   1b7f8:	ldr	r2, [r4, #32]
   1b7fc:	adds	r3, r3, #0
   1b800:	movne	r3, #1
   1b804:	add	r1, r0, r3
   1b808:	add	r1, r1, #1
   1b80c:	add	r2, r2, #1
   1b810:	cmp	sl, #0
   1b814:	str	r1, [r4, #20]
   1b818:	str	r2, [r4, #32]
   1b81c:	strb	ip, [r0, r3]
   1b820:	bne	1b848 <flatcc_json_printer_uint16_vector_field@@Base+0x16c>
   1b824:	ldr	r0, [r4, #20]
   1b828:	ldrb	r3, [r4, #25]
   1b82c:	cmp	r3, #0
   1b830:	bne	1b97c <flatcc_json_printer_uint16_vector_field@@Base+0x2a0>
   1b834:	add	r2, r0, #1
   1b838:	mov	r3, #93	; 0x5d
   1b83c:	str	r2, [r4, #20]
   1b840:	strb	r3, [r0]
   1b844:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b848:	ldrb	r3, [r4, #25]
   1b84c:	cmp	r3, #0
   1b850:	bne	1ba2c <flatcc_json_printer_uint16_vector_field@@Base+0x350>
   1b854:	ldr	r1, [r4, #20]
   1b858:	ldr	r2, [r4, #16]
   1b85c:	cmp	r1, r2
   1b860:	bcs	1ba50 <flatcc_json_printer_uint16_vector_field@@Base+0x374>
   1b864:	ldrh	r0, [r5, #4]
   1b868:	bl	13cb8 <test_print@@Base+0x2fc>
   1b86c:	ldr	r3, [r4, #20]
   1b870:	cmp	sl, #1
   1b874:	add	r5, r5, #6
   1b878:	sub	sl, sl, #2
   1b87c:	add	r0, r3, r0
   1b880:	str	r0, [r4, #20]
   1b884:	beq	1b828 <flatcc_json_printer_uint16_vector_field@@Base+0x14c>
   1b888:	mov	r6, #44	; 0x2c
   1b88c:	mov	r9, #0
   1b890:	mov	r8, #10
   1b894:	mov	r7, #32
   1b898:	b	1b8cc <flatcc_json_printer_uint16_vector_field@@Base+0x1f0>
   1b89c:	ldr	r1, [r4, #20]
   1b8a0:	ldr	r3, [r4, #16]
   1b8a4:	cmp	r1, r3
   1b8a8:	bcs	1b934 <flatcc_json_printer_uint16_vector_field@@Base+0x258>
   1b8ac:	ldrh	r0, [r5], #2
   1b8b0:	bl	13cb8 <test_print@@Base+0x2fc>
   1b8b4:	ldr	r3, [r4, #20]
   1b8b8:	cmp	sl, #0
   1b8bc:	sub	sl, sl, #1
   1b8c0:	add	r0, r3, r0
   1b8c4:	str	r0, [r4, #20]
   1b8c8:	beq	1b828 <flatcc_json_printer_uint16_vector_field@@Base+0x14c>
   1b8cc:	add	r3, r0, #1
   1b8d0:	str	r3, [r4, #20]
   1b8d4:	strb	r6, [r0]
   1b8d8:	ldrb	r3, [r4, #25]
   1b8dc:	cmp	r3, #0
   1b8e0:	beq	1b89c <flatcc_json_printer_uint16_vector_field@@Base+0x1c0>
   1b8e4:	ldr	r3, [r4, #20]
   1b8e8:	mov	r1, r7
   1b8ec:	add	r2, r3, #1
   1b8f0:	str	r2, [r4, #20]
   1b8f4:	strb	r8, [r3]
   1b8f8:	ldrb	r2, [r4, #25]
   1b8fc:	ldr	fp, [r4, #32]
   1b900:	ldr	r3, [r4, #20]
   1b904:	ldr	ip, [r4, #16]
   1b908:	mul	fp, fp, r2
   1b90c:	mov	r0, r3
   1b910:	add	r3, r3, fp
   1b914:	cmp	ip, r3
   1b918:	mov	r2, fp
   1b91c:	bcc	1b94c <flatcc_json_printer_uint16_vector_field@@Base+0x270>
   1b920:	bl	124e0 <memset@plt>
   1b924:	ldr	r1, [r4, #20]
   1b928:	add	r1, r1, fp
   1b92c:	str	r1, [r4, #20]
   1b930:	b	1b8ac <flatcc_json_printer_uint16_vector_field@@Base+0x1d0>
   1b934:	mov	r1, r9
   1b938:	ldr	r3, [r4, #44]	; 0x2c
   1b93c:	mov	r0, r4
   1b940:	blx	r3
   1b944:	ldr	r1, [r4, #20]
   1b948:	b	1b8ac <flatcc_json_printer_uint16_vector_field@@Base+0x1d0>
   1b94c:	mov	r1, fp
   1b950:	mov	r0, r4
   1b954:	bl	14bc8 <test_print@@Base+0x120c>
   1b958:	ldr	r1, [r4, #20]
   1b95c:	b	1b8ac <flatcc_json_printer_uint16_vector_field@@Base+0x1d0>
   1b960:	mov	r2, r6
   1b964:	mov	r1, r7
   1b968:	bl	12444 <memcpy@plt>
   1b96c:	ldr	r3, [r4, #20]
   1b970:	add	r6, r3, r6
   1b974:	str	r6, [r4, #20]
   1b978:	b	1b7b4 <flatcc_json_printer_uint16_vector_field@@Base+0xd8>
   1b97c:	add	r2, r0, #1
   1b980:	mov	r3, #10
   1b984:	str	r2, [r4, #20]
   1b988:	strb	r3, [r0]
   1b98c:	ldr	r3, [r4, #32]
   1b990:	ldrb	r5, [r4, #25]
   1b994:	sub	r3, r3, #1
   1b998:	ldr	r0, [r4, #20]
   1b99c:	ldr	r2, [r4, #16]
   1b9a0:	mul	r5, r3, r5
   1b9a4:	str	r3, [r4, #32]
   1b9a8:	add	r3, r0, r5
   1b9ac:	cmp	r2, r3
   1b9b0:	bcc	1b9cc <flatcc_json_printer_uint16_vector_field@@Base+0x2f0>
   1b9b4:	mov	r2, r5
   1b9b8:	mov	r1, #32
   1b9bc:	bl	124e0 <memset@plt>
   1b9c0:	ldr	r0, [r4, #20]
   1b9c4:	add	r0, r0, r5
   1b9c8:	b	1b834 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   1b9cc:	mov	r0, r4
   1b9d0:	mov	r1, r5
   1b9d4:	bl	14bc8 <test_print@@Base+0x120c>
   1b9d8:	ldr	r0, [r4, #20]
   1b9dc:	b	1b834 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   1b9e0:	mov	r2, #10
   1b9e4:	add	r1, r3, #1
   1b9e8:	str	r1, [r0, #20]
   1b9ec:	strb	r2, [r3]
   1b9f0:	ldrb	r3, [r0, #25]
   1b9f4:	ldr	r8, [r0, #32]
   1b9f8:	ldr	r0, [r0, #20]
   1b9fc:	ldr	r2, [r4, #16]
   1ba00:	mul	r8, r8, r3
   1ba04:	add	r3, r0, r8
   1ba08:	cmp	r2, r3
   1ba0c:	bcc	1ba68 <flatcc_json_printer_uint16_vector_field@@Base+0x38c>
   1ba10:	mov	r2, r8
   1ba14:	mov	r1, #32
   1ba18:	bl	124e0 <memset@plt>
   1ba1c:	ldr	r3, [r4, #20]
   1ba20:	add	r3, r3, r8
   1ba24:	str	r3, [r4, #20]
   1ba28:	b	1b774 <flatcc_json_printer_uint16_vector_field@@Base+0x98>
   1ba2c:	ldr	r3, [r4, #20]
   1ba30:	mov	r2, #10
   1ba34:	add	r1, r3, #1
   1ba38:	str	r1, [r4, #20]
   1ba3c:	mov	r0, r4
   1ba40:	strb	r2, [r3]
   1ba44:	bl	14c74 <test_print@@Base+0x12b8>
   1ba48:	ldr	r1, [r4, #20]
   1ba4c:	b	1b864 <flatcc_json_printer_uint16_vector_field@@Base+0x188>
   1ba50:	mov	r1, r3
   1ba54:	mov	r0, r4
   1ba58:	ldr	r3, [r4, #44]	; 0x2c
   1ba5c:	blx	r3
   1ba60:	ldr	r1, [r4, #20]
   1ba64:	b	1b864 <flatcc_json_printer_uint16_vector_field@@Base+0x188>
   1ba68:	mov	r1, r8
   1ba6c:	mov	r0, r4
   1ba70:	bl	14bc8 <test_print@@Base+0x120c>
   1ba74:	ldr	r3, [r4, #20]
   1ba78:	b	1b774 <flatcc_json_printer_uint16_vector_field@@Base+0x98>

0001ba7c <flatcc_json_printer_uint32_vector_field@@Base>:
   1ba7c:	add	r2, r2, #2
   1ba80:	ldr	ip, [r1, #8]
   1ba84:	lsl	r2, r2, #1
   1ba88:	cmp	ip, r2
   1ba8c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba90:	ldr	r6, [sp, #40]	; 0x28
   1ba94:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ba98:	ldr	ip, [r1, #4]
   1ba9c:	ldrh	ip, [ip, r2]
   1baa0:	cmp	ip, #0
   1baa4:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1baa8:	ldr	r5, [r1]
   1baac:	adds	lr, r5, ip
   1bab0:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bab4:	ldr	r2, [r1, #16]
   1bab8:	mov	r7, r3
   1babc:	cmp	r2, #0
   1bac0:	add	r2, r2, #1
   1bac4:	str	r2, [r1, #16]
   1bac8:	ldrne	r2, [r0, #20]
   1bacc:	movne	r1, #44	; 0x2c
   1bad0:	addne	r4, r2, #1
   1bad4:	strne	r4, [r0, #20]
   1bad8:	strbne	r1, [r2]
   1badc:	ldrb	r1, [r0, #25]
   1bae0:	ldr	r3, [r5, ip]
   1bae4:	mov	r4, r0
   1bae8:	cmp	r1, #0
   1baec:	add	r5, lr, r3
   1baf0:	ldr	sl, [lr, r3]
   1baf4:	ldr	r3, [r0, #20]
   1baf8:	bne	1bd80 <flatcc_json_printer_uint32_vector_field@@Base+0x304>
   1bafc:	ldr	r2, [r0, #16]
   1bb00:	cmp	r3, r2
   1bb04:	bcc	1bb14 <flatcc_json_printer_uint32_vector_field@@Base+0x98>
   1bb08:	ldr	r3, [r0, #44]	; 0x2c
   1bb0c:	blx	r3
   1bb10:	ldr	r3, [r4, #20]
   1bb14:	mov	r2, #34	; 0x22
   1bb18:	strb	r2, [r3]
   1bb1c:	ldrb	r3, [r4, #26]
   1bb20:	ldr	r0, [r4, #20]
   1bb24:	ldr	r2, [r4, #16]
   1bb28:	cmp	r3, #0
   1bb2c:	addeq	r0, r0, #1
   1bb30:	add	r3, r0, r6
   1bb34:	cmp	r2, r3
   1bb38:	str	r0, [r4, #20]
   1bb3c:	bhi	1bd00 <flatcc_json_printer_uint32_vector_field@@Base+0x284>
   1bb40:	mov	r2, r6
   1bb44:	mov	r1, r7
   1bb48:	mov	r0, r4
   1bb4c:	bl	14b18 <test_print@@Base+0x115c>
   1bb50:	ldr	r6, [r4, #20]
   1bb54:	mov	r3, #34	; 0x22
   1bb58:	strb	r3, [r6]
   1bb5c:	ldr	r1, [r4, #20]
   1bb60:	ldrb	r3, [r4, #26]
   1bb64:	clz	r3, r3
   1bb68:	lsr	r3, r3, #5
   1bb6c:	add	r2, r1, r3
   1bb70:	add	r2, r2, #1
   1bb74:	mov	r0, #58	; 0x3a
   1bb78:	str	r2, [r4, #20]
   1bb7c:	strb	r0, [r1, r3]
   1bb80:	ldr	r3, [r4, #20]
   1bb84:	mov	r2, #32
   1bb88:	mov	ip, #91	; 0x5b
   1bb8c:	strb	r2, [r3]
   1bb90:	ldrb	r3, [r4, #25]
   1bb94:	ldr	r0, [r4, #20]
   1bb98:	ldr	r2, [r4, #32]
   1bb9c:	adds	r3, r3, #0
   1bba0:	movne	r3, #1
   1bba4:	add	r1, r0, r3
   1bba8:	add	r1, r1, #1
   1bbac:	add	r2, r2, #1
   1bbb0:	cmp	sl, #0
   1bbb4:	str	r1, [r4, #20]
   1bbb8:	str	r2, [r4, #32]
   1bbbc:	strb	ip, [r0, r3]
   1bbc0:	bne	1bbe8 <flatcc_json_printer_uint32_vector_field@@Base+0x16c>
   1bbc4:	ldr	r0, [r4, #20]
   1bbc8:	ldrb	r3, [r4, #25]
   1bbcc:	cmp	r3, #0
   1bbd0:	bne	1bd1c <flatcc_json_printer_uint32_vector_field@@Base+0x2a0>
   1bbd4:	add	r2, r0, #1
   1bbd8:	mov	r3, #93	; 0x5d
   1bbdc:	str	r2, [r4, #20]
   1bbe0:	strb	r3, [r0]
   1bbe4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bbe8:	ldrb	r3, [r4, #25]
   1bbec:	cmp	r3, #0
   1bbf0:	bne	1bdcc <flatcc_json_printer_uint32_vector_field@@Base+0x350>
   1bbf4:	ldr	r1, [r4, #20]
   1bbf8:	ldr	r2, [r4, #16]
   1bbfc:	cmp	r1, r2
   1bc00:	bcs	1bdf0 <flatcc_json_printer_uint32_vector_field@@Base+0x374>
   1bc04:	ldr	r0, [r5, #4]
   1bc08:	bl	13e3c <test_print@@Base+0x480>
   1bc0c:	ldr	r3, [r4, #20]
   1bc10:	cmp	sl, #1
   1bc14:	add	r5, r5, #8
   1bc18:	sub	sl, sl, #2
   1bc1c:	add	r0, r3, r0
   1bc20:	str	r0, [r4, #20]
   1bc24:	beq	1bbc8 <flatcc_json_printer_uint32_vector_field@@Base+0x14c>
   1bc28:	mov	r6, #44	; 0x2c
   1bc2c:	mov	r9, #0
   1bc30:	mov	r8, #10
   1bc34:	mov	r7, #32
   1bc38:	b	1bc6c <flatcc_json_printer_uint32_vector_field@@Base+0x1f0>
   1bc3c:	ldr	r1, [r4, #20]
   1bc40:	ldr	r3, [r4, #16]
   1bc44:	cmp	r1, r3
   1bc48:	bcs	1bcd4 <flatcc_json_printer_uint32_vector_field@@Base+0x258>
   1bc4c:	ldr	r0, [r5], #4
   1bc50:	bl	13e3c <test_print@@Base+0x480>
   1bc54:	ldr	r3, [r4, #20]
   1bc58:	cmp	sl, #0
   1bc5c:	sub	sl, sl, #1
   1bc60:	add	r0, r3, r0
   1bc64:	str	r0, [r4, #20]
   1bc68:	beq	1bbc8 <flatcc_json_printer_uint32_vector_field@@Base+0x14c>
   1bc6c:	add	r3, r0, #1
   1bc70:	str	r3, [r4, #20]
   1bc74:	strb	r6, [r0]
   1bc78:	ldrb	r3, [r4, #25]
   1bc7c:	cmp	r3, #0
   1bc80:	beq	1bc3c <flatcc_json_printer_uint32_vector_field@@Base+0x1c0>
   1bc84:	ldr	r3, [r4, #20]
   1bc88:	mov	r1, r7
   1bc8c:	add	r2, r3, #1
   1bc90:	str	r2, [r4, #20]
   1bc94:	strb	r8, [r3]
   1bc98:	ldrb	r2, [r4, #25]
   1bc9c:	ldr	fp, [r4, #32]
   1bca0:	ldr	r3, [r4, #20]
   1bca4:	ldr	ip, [r4, #16]
   1bca8:	mul	fp, fp, r2
   1bcac:	mov	r0, r3
   1bcb0:	add	r3, r3, fp
   1bcb4:	cmp	ip, r3
   1bcb8:	mov	r2, fp
   1bcbc:	bcc	1bcec <flatcc_json_printer_uint32_vector_field@@Base+0x270>
   1bcc0:	bl	124e0 <memset@plt>
   1bcc4:	ldr	r1, [r4, #20]
   1bcc8:	add	r1, r1, fp
   1bccc:	str	r1, [r4, #20]
   1bcd0:	b	1bc4c <flatcc_json_printer_uint32_vector_field@@Base+0x1d0>
   1bcd4:	mov	r1, r9
   1bcd8:	ldr	r3, [r4, #44]	; 0x2c
   1bcdc:	mov	r0, r4
   1bce0:	blx	r3
   1bce4:	ldr	r1, [r4, #20]
   1bce8:	b	1bc4c <flatcc_json_printer_uint32_vector_field@@Base+0x1d0>
   1bcec:	mov	r1, fp
   1bcf0:	mov	r0, r4
   1bcf4:	bl	14bc8 <test_print@@Base+0x120c>
   1bcf8:	ldr	r1, [r4, #20]
   1bcfc:	b	1bc4c <flatcc_json_printer_uint32_vector_field@@Base+0x1d0>
   1bd00:	mov	r2, r6
   1bd04:	mov	r1, r7
   1bd08:	bl	12444 <memcpy@plt>
   1bd0c:	ldr	r3, [r4, #20]
   1bd10:	add	r6, r3, r6
   1bd14:	str	r6, [r4, #20]
   1bd18:	b	1bb54 <flatcc_json_printer_uint32_vector_field@@Base+0xd8>
   1bd1c:	add	r2, r0, #1
   1bd20:	mov	r3, #10
   1bd24:	str	r2, [r4, #20]
   1bd28:	strb	r3, [r0]
   1bd2c:	ldr	r3, [r4, #32]
   1bd30:	ldrb	r5, [r4, #25]
   1bd34:	sub	r3, r3, #1
   1bd38:	ldr	r0, [r4, #20]
   1bd3c:	ldr	r2, [r4, #16]
   1bd40:	mul	r5, r3, r5
   1bd44:	str	r3, [r4, #32]
   1bd48:	add	r3, r0, r5
   1bd4c:	cmp	r2, r3
   1bd50:	bcc	1bd6c <flatcc_json_printer_uint32_vector_field@@Base+0x2f0>
   1bd54:	mov	r2, r5
   1bd58:	mov	r1, #32
   1bd5c:	bl	124e0 <memset@plt>
   1bd60:	ldr	r0, [r4, #20]
   1bd64:	add	r0, r0, r5
   1bd68:	b	1bbd4 <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   1bd6c:	mov	r0, r4
   1bd70:	mov	r1, r5
   1bd74:	bl	14bc8 <test_print@@Base+0x120c>
   1bd78:	ldr	r0, [r4, #20]
   1bd7c:	b	1bbd4 <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   1bd80:	mov	r2, #10
   1bd84:	add	r1, r3, #1
   1bd88:	str	r1, [r0, #20]
   1bd8c:	strb	r2, [r3]
   1bd90:	ldrb	r3, [r0, #25]
   1bd94:	ldr	r8, [r0, #32]
   1bd98:	ldr	r0, [r0, #20]
   1bd9c:	ldr	r2, [r4, #16]
   1bda0:	mul	r8, r8, r3
   1bda4:	add	r3, r0, r8
   1bda8:	cmp	r2, r3
   1bdac:	bcc	1be08 <flatcc_json_printer_uint32_vector_field@@Base+0x38c>
   1bdb0:	mov	r2, r8
   1bdb4:	mov	r1, #32
   1bdb8:	bl	124e0 <memset@plt>
   1bdbc:	ldr	r3, [r4, #20]
   1bdc0:	add	r3, r3, r8
   1bdc4:	str	r3, [r4, #20]
   1bdc8:	b	1bb14 <flatcc_json_printer_uint32_vector_field@@Base+0x98>
   1bdcc:	ldr	r3, [r4, #20]
   1bdd0:	mov	r2, #10
   1bdd4:	add	r1, r3, #1
   1bdd8:	str	r1, [r4, #20]
   1bddc:	mov	r0, r4
   1bde0:	strb	r2, [r3]
   1bde4:	bl	14c74 <test_print@@Base+0x12b8>
   1bde8:	ldr	r1, [r4, #20]
   1bdec:	b	1bc04 <flatcc_json_printer_uint32_vector_field@@Base+0x188>
   1bdf0:	mov	r1, r3
   1bdf4:	mov	r0, r4
   1bdf8:	ldr	r3, [r4, #44]	; 0x2c
   1bdfc:	blx	r3
   1be00:	ldr	r1, [r4, #20]
   1be04:	b	1bc04 <flatcc_json_printer_uint32_vector_field@@Base+0x188>
   1be08:	mov	r1, r8
   1be0c:	mov	r0, r4
   1be10:	bl	14bc8 <test_print@@Base+0x120c>
   1be14:	ldr	r3, [r4, #20]
   1be18:	b	1bb14 <flatcc_json_printer_uint32_vector_field@@Base+0x98>

0001be1c <flatcc_json_printer_uint64_vector_field@@Base>:
   1be1c:	add	r2, r2, #2
   1be20:	ldr	ip, [r1, #8]
   1be24:	lsl	r2, r2, #1
   1be28:	cmp	ip, r2
   1be2c:	bxle	lr
   1be30:	ldr	ip, [r1, #4]
   1be34:	ldrh	ip, [ip, r2]
   1be38:	cmp	ip, #0
   1be3c:	bxeq	lr
   1be40:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be44:	ldr	r5, [r1]
   1be48:	adds	lr, r5, ip
   1be4c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be50:	ldr	r2, [r1, #16]
   1be54:	cmp	r2, #0
   1be58:	add	r2, r2, #1
   1be5c:	str	r2, [r1, #16]
   1be60:	ldrne	r2, [r0, #20]
   1be64:	movne	r1, #44	; 0x2c
   1be68:	addne	r4, r2, #1
   1be6c:	strne	r4, [r0, #20]
   1be70:	strbne	r1, [r2]
   1be74:	mov	r1, r3
   1be78:	ldr	r3, [r5, ip]
   1be7c:	mov	r4, r0
   1be80:	ldr	r2, [sp, #40]	; 0x28
   1be84:	ldr	sl, [lr, r3]
   1be88:	add	r5, lr, r3
   1be8c:	bl	15fdc <test_print@@Base+0x2620>
   1be90:	ldr	r3, [r4, #32]
   1be94:	ldr	r2, [r4, #20]
   1be98:	add	r3, r3, #1
   1be9c:	add	r0, r2, #1
   1bea0:	mov	r1, #91	; 0x5b
   1bea4:	cmp	sl, #0
   1bea8:	str	r3, [r4, #32]
   1beac:	str	r0, [r4, #20]
   1beb0:	strb	r1, [r2]
   1beb4:	bne	1bedc <flatcc_json_printer_uint64_vector_field@@Base+0xc0>
   1beb8:	ldr	r0, [r4, #20]
   1bebc:	ldrb	r3, [r4, #25]
   1bec0:	cmp	r3, #0
   1bec4:	bne	1bff4 <flatcc_json_printer_uint64_vector_field@@Base+0x1d8>
   1bec8:	add	r2, r0, #1
   1becc:	mov	r3, #93	; 0x5d
   1bed0:	str	r2, [r4, #20]
   1bed4:	strb	r3, [r0]
   1bed8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bedc:	ldrb	r1, [r4, #25]
   1bee0:	cmp	r1, #0
   1bee4:	bne	1c058 <flatcc_json_printer_uint64_vector_field@@Base+0x23c>
   1bee8:	ldr	r2, [r4, #20]
   1beec:	ldr	r3, [r4, #16]
   1bef0:	cmp	r2, r3
   1bef4:	bcs	1c07c <flatcc_json_printer_uint64_vector_field@@Base+0x260>
   1bef8:	ldrd	r0, [r5, #4]
   1befc:	bl	141a8 <test_print@@Base+0x7ec>
   1bf00:	ldr	r3, [r4, #20]
   1bf04:	cmp	sl, #1
   1bf08:	add	r5, r5, #12
   1bf0c:	sub	sl, sl, #2
   1bf10:	add	r0, r3, r0
   1bf14:	str	r0, [r4, #20]
   1bf18:	beq	1bebc <flatcc_json_printer_uint64_vector_field@@Base+0xa0>
   1bf1c:	mov	r6, #44	; 0x2c
   1bf20:	mov	r9, #0
   1bf24:	mov	r8, #10
   1bf28:	mov	r7, #32
   1bf2c:	b	1bf60 <flatcc_json_printer_uint64_vector_field@@Base+0x144>
   1bf30:	ldr	r2, [r4, #20]
   1bf34:	ldr	r3, [r4, #16]
   1bf38:	cmp	r2, r3
   1bf3c:	bcs	1bfc8 <flatcc_json_printer_uint64_vector_field@@Base+0x1ac>
   1bf40:	ldrd	r0, [r5], #8
   1bf44:	bl	141a8 <test_print@@Base+0x7ec>
   1bf48:	ldr	r3, [r4, #20]
   1bf4c:	cmp	sl, #0
   1bf50:	sub	sl, sl, #1
   1bf54:	add	r0, r3, r0
   1bf58:	str	r0, [r4, #20]
   1bf5c:	beq	1bebc <flatcc_json_printer_uint64_vector_field@@Base+0xa0>
   1bf60:	add	r3, r0, #1
   1bf64:	str	r3, [r4, #20]
   1bf68:	strb	r6, [r0]
   1bf6c:	ldrb	r3, [r4, #25]
   1bf70:	cmp	r3, #0
   1bf74:	beq	1bf30 <flatcc_json_printer_uint64_vector_field@@Base+0x114>
   1bf78:	ldr	r3, [r4, #20]
   1bf7c:	mov	r1, r7
   1bf80:	add	r2, r3, #1
   1bf84:	str	r2, [r4, #20]
   1bf88:	strb	r8, [r3]
   1bf8c:	ldrb	r2, [r4, #25]
   1bf90:	ldr	fp, [r4, #32]
   1bf94:	ldr	r3, [r4, #20]
   1bf98:	ldr	ip, [r4, #16]
   1bf9c:	mul	fp, fp, r2
   1bfa0:	mov	r0, r3
   1bfa4:	add	r3, r3, fp
   1bfa8:	cmp	ip, r3
   1bfac:	mov	r2, fp
   1bfb0:	bcc	1bfe0 <flatcc_json_printer_uint64_vector_field@@Base+0x1c4>
   1bfb4:	bl	124e0 <memset@plt>
   1bfb8:	ldr	r2, [r4, #20]
   1bfbc:	add	r2, r2, fp
   1bfc0:	str	r2, [r4, #20]
   1bfc4:	b	1bf40 <flatcc_json_printer_uint64_vector_field@@Base+0x124>
   1bfc8:	ldr	r3, [r4, #44]	; 0x2c
   1bfcc:	mov	r1, r9
   1bfd0:	mov	r0, r4
   1bfd4:	blx	r3
   1bfd8:	ldr	r2, [r4, #20]
   1bfdc:	b	1bf40 <flatcc_json_printer_uint64_vector_field@@Base+0x124>
   1bfe0:	mov	r1, fp
   1bfe4:	mov	r0, r4
   1bfe8:	bl	14bc8 <test_print@@Base+0x120c>
   1bfec:	ldr	r2, [r4, #20]
   1bff0:	b	1bf40 <flatcc_json_printer_uint64_vector_field@@Base+0x124>
   1bff4:	add	r2, r0, #1
   1bff8:	mov	r3, #10
   1bffc:	str	r2, [r4, #20]
   1c000:	strb	r3, [r0]
   1c004:	ldr	r3, [r4, #32]
   1c008:	ldrb	r5, [r4, #25]
   1c00c:	sub	r3, r3, #1
   1c010:	ldr	r0, [r4, #20]
   1c014:	ldr	r2, [r4, #16]
   1c018:	mul	r5, r3, r5
   1c01c:	str	r3, [r4, #32]
   1c020:	add	r3, r0, r5
   1c024:	cmp	r2, r3
   1c028:	bcc	1c044 <flatcc_json_printer_uint64_vector_field@@Base+0x228>
   1c02c:	mov	r2, r5
   1c030:	mov	r1, #32
   1c034:	bl	124e0 <memset@plt>
   1c038:	ldr	r0, [r4, #20]
   1c03c:	add	r0, r0, r5
   1c040:	b	1bec8 <flatcc_json_printer_uint64_vector_field@@Base+0xac>
   1c044:	mov	r0, r4
   1c048:	mov	r1, r5
   1c04c:	bl	14bc8 <test_print@@Base+0x120c>
   1c050:	ldr	r0, [r4, #20]
   1c054:	b	1bec8 <flatcc_json_printer_uint64_vector_field@@Base+0xac>
   1c058:	ldr	r3, [r4, #20]
   1c05c:	mov	r2, #10
   1c060:	add	r1, r3, #1
   1c064:	str	r1, [r4, #20]
   1c068:	mov	r0, r4
   1c06c:	strb	r2, [r3]
   1c070:	bl	14c74 <test_print@@Base+0x12b8>
   1c074:	ldr	r2, [r4, #20]
   1c078:	b	1bef8 <flatcc_json_printer_uint64_vector_field@@Base+0xdc>
   1c07c:	ldr	r3, [r4, #44]	; 0x2c
   1c080:	mov	r0, r4
   1c084:	blx	r3
   1c088:	ldr	r2, [r4, #20]
   1c08c:	b	1bef8 <flatcc_json_printer_uint64_vector_field@@Base+0xdc>

0001c090 <flatcc_json_printer_int8_vector_field@@Base>:
   1c090:	add	r2, r2, #2
   1c094:	ldr	ip, [r1, #8]
   1c098:	lsl	r2, r2, #1
   1c09c:	cmp	ip, r2
   1c0a0:	bxle	lr
   1c0a4:	ldr	ip, [r1, #4]
   1c0a8:	ldrh	ip, [ip, r2]
   1c0ac:	cmp	ip, #0
   1c0b0:	bxeq	lr
   1c0b4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c0b8:	ldr	lr, [r1]
   1c0bc:	adds	r5, lr, ip
   1c0c0:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c0c4:	ldr	r2, [r1, #16]
   1c0c8:	cmp	r2, #0
   1c0cc:	add	r2, r2, #1
   1c0d0:	str	r2, [r1, #16]
   1c0d4:	ldrne	r2, [r0, #20]
   1c0d8:	movne	r1, #44	; 0x2c
   1c0dc:	addne	r4, r2, #1
   1c0e0:	strne	r4, [r0, #20]
   1c0e4:	strbne	r1, [r2]
   1c0e8:	mov	r1, r3
   1c0ec:	ldr	r3, [lr, ip]
   1c0f0:	mov	r4, r0
   1c0f4:	ldr	r2, [sp, #40]	; 0x28
   1c0f8:	ldr	r6, [r5, r3]
   1c0fc:	add	r7, r5, r3
   1c100:	bl	15fdc <test_print@@Base+0x2620>
   1c104:	ldr	r3, [r4, #32]
   1c108:	ldr	r2, [r4, #20]
   1c10c:	add	r3, r3, #1
   1c110:	add	r0, r2, #1
   1c114:	mov	r1, #91	; 0x5b
   1c118:	cmp	r6, #0
   1c11c:	str	r3, [r4, #32]
   1c120:	str	r0, [r4, #20]
   1c124:	strb	r1, [r2]
   1c128:	bne	1c150 <flatcc_json_printer_int8_vector_field@@Base+0xc0>
   1c12c:	ldr	r0, [r4, #20]
   1c130:	ldrb	r3, [r4, #25]
   1c134:	cmp	r3, #0
   1c138:	bne	1c2ac <flatcc_json_printer_int8_vector_field@@Base+0x21c>
   1c13c:	add	r2, r0, #1
   1c140:	mov	r3, #93	; 0x5d
   1c144:	str	r2, [r4, #20]
   1c148:	strb	r3, [r0]
   1c14c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c150:	ldrb	r3, [r4, #25]
   1c154:	cmp	r3, #0
   1c158:	bne	1c310 <flatcc_json_printer_int8_vector_field@@Base+0x280>
   1c15c:	ldr	r1, [r4, #20]
   1c160:	ldr	r2, [r4, #16]
   1c164:	cmp	r1, r2
   1c168:	bcs	1c334 <flatcc_json_printer_int8_vector_field@@Base+0x2a4>
   1c16c:	ldrsb	r0, [r7, #4]
   1c170:	add	fp, r7, #4
   1c174:	cmp	r0, #0
   1c178:	lsr	r5, r0, #31
   1c17c:	rsblt	r0, r0, #0
   1c180:	movlt	r3, #45	; 0x2d
   1c184:	sxtblt	r0, r0
   1c188:	strblt	r3, [r1]
   1c18c:	uxtb	r0, r0
   1c190:	addlt	r1, r1, #1
   1c194:	bl	14e04 <test_print@@Base+0x1448>
   1c198:	ldr	r3, [r4, #20]
   1c19c:	cmp	r6, #1
   1c1a0:	add	r0, r5, r0
   1c1a4:	add	r0, r3, r0
   1c1a8:	str	r0, [r4, #20]
   1c1ac:	beq	1c130 <flatcc_json_printer_int8_vector_field@@Base+0xa0>
   1c1b0:	mov	r8, #44	; 0x2c
   1c1b4:	mov	sl, #10
   1c1b8:	mov	r9, #32
   1c1bc:	b	1c218 <flatcc_json_printer_int8_vector_field@@Base+0x188>
   1c1c0:	ldr	r1, [r4, #20]
   1c1c4:	ldr	r3, [r4, #16]
   1c1c8:	cmp	r1, r3
   1c1cc:	bcs	1c280 <flatcc_json_printer_int8_vector_field@@Base+0x1f0>
   1c1d0:	ldrsb	r0, [fp, #1]!
   1c1d4:	cmp	r0, #0
   1c1d8:	lsr	r5, r0, #31
   1c1dc:	rsblt	r0, r0, #0
   1c1e0:	movlt	r3, #45	; 0x2d
   1c1e4:	sxtblt	r0, r0
   1c1e8:	strblt	r3, [r1]
   1c1ec:	uxtb	r0, r0
   1c1f0:	addlt	r1, r1, #1
   1c1f4:	bl	14e04 <test_print@@Base+0x1448>
   1c1f8:	ldr	r3, [r4, #20]
   1c1fc:	rsb	r2, fp, #3
   1c200:	add	r2, r2, r6
   1c204:	cmn	r7, r2
   1c208:	add	r0, r5, r0
   1c20c:	add	r0, r3, r0
   1c210:	str	r0, [r4, #20]
   1c214:	beq	1c130 <flatcc_json_printer_int8_vector_field@@Base+0xa0>
   1c218:	add	r3, r0, #1
   1c21c:	str	r3, [r4, #20]
   1c220:	strb	r8, [r0]
   1c224:	ldrb	r3, [r4, #25]
   1c228:	cmp	r3, #0
   1c22c:	beq	1c1c0 <flatcc_json_printer_int8_vector_field@@Base+0x130>
   1c230:	ldr	r3, [r4, #20]
   1c234:	mov	r1, r9
   1c238:	add	r2, r3, #1
   1c23c:	str	r2, [r4, #20]
   1c240:	strb	sl, [r3]
   1c244:	ldrb	r2, [r4, #25]
   1c248:	ldr	r5, [r4, #32]
   1c24c:	ldr	r3, [r4, #20]
   1c250:	ldr	ip, [r4, #16]
   1c254:	mul	r5, r5, r2
   1c258:	mov	r0, r3
   1c25c:	add	r3, r3, r5
   1c260:	cmp	ip, r3
   1c264:	mov	r2, r5
   1c268:	bcc	1c298 <flatcc_json_printer_int8_vector_field@@Base+0x208>
   1c26c:	bl	124e0 <memset@plt>
   1c270:	ldr	r1, [r4, #20]
   1c274:	add	r1, r1, r5
   1c278:	str	r1, [r4, #20]
   1c27c:	b	1c1d0 <flatcc_json_printer_int8_vector_field@@Base+0x140>
   1c280:	mov	r1, #0
   1c284:	ldr	r3, [r4, #44]	; 0x2c
   1c288:	mov	r0, r4
   1c28c:	blx	r3
   1c290:	ldr	r1, [r4, #20]
   1c294:	b	1c1d0 <flatcc_json_printer_int8_vector_field@@Base+0x140>
   1c298:	mov	r1, r5
   1c29c:	mov	r0, r4
   1c2a0:	bl	14bc8 <test_print@@Base+0x120c>
   1c2a4:	ldr	r1, [r4, #20]
   1c2a8:	b	1c1d0 <flatcc_json_printer_int8_vector_field@@Base+0x140>
   1c2ac:	add	r2, r0, #1
   1c2b0:	mov	r3, #10
   1c2b4:	str	r2, [r4, #20]
   1c2b8:	strb	r3, [r0]
   1c2bc:	ldr	r3, [r4, #32]
   1c2c0:	ldrb	r5, [r4, #25]
   1c2c4:	sub	r3, r3, #1
   1c2c8:	ldr	r0, [r4, #20]
   1c2cc:	ldr	r2, [r4, #16]
   1c2d0:	mul	r5, r3, r5
   1c2d4:	str	r3, [r4, #32]
   1c2d8:	add	r3, r0, r5
   1c2dc:	cmp	r2, r3
   1c2e0:	bcc	1c2fc <flatcc_json_printer_int8_vector_field@@Base+0x26c>
   1c2e4:	mov	r2, r5
   1c2e8:	mov	r1, #32
   1c2ec:	bl	124e0 <memset@plt>
   1c2f0:	ldr	r0, [r4, #20]
   1c2f4:	add	r0, r0, r5
   1c2f8:	b	1c13c <flatcc_json_printer_int8_vector_field@@Base+0xac>
   1c2fc:	mov	r0, r4
   1c300:	mov	r1, r5
   1c304:	bl	14bc8 <test_print@@Base+0x120c>
   1c308:	ldr	r0, [r4, #20]
   1c30c:	b	1c13c <flatcc_json_printer_int8_vector_field@@Base+0xac>
   1c310:	ldr	r3, [r4, #20]
   1c314:	mov	r2, #10
   1c318:	add	r1, r3, #1
   1c31c:	str	r1, [r4, #20]
   1c320:	mov	r0, r4
   1c324:	strb	r2, [r3]
   1c328:	bl	14c74 <test_print@@Base+0x12b8>
   1c32c:	ldr	r1, [r4, #20]
   1c330:	b	1c16c <flatcc_json_printer_int8_vector_field@@Base+0xdc>
   1c334:	mov	r1, r3
   1c338:	mov	r0, r4
   1c33c:	ldr	r3, [r4, #44]	; 0x2c
   1c340:	blx	r3
   1c344:	ldr	r1, [r4, #20]
   1c348:	b	1c16c <flatcc_json_printer_int8_vector_field@@Base+0xdc>

0001c34c <flatcc_json_printer_int16_vector_field@@Base>:
   1c34c:	add	r2, r2, #2
   1c350:	ldr	ip, [r1, #8]
   1c354:	lsl	r2, r2, #1
   1c358:	cmp	ip, r2
   1c35c:	bxle	lr
   1c360:	ldr	ip, [r1, #4]
   1c364:	ldrh	ip, [ip, r2]
   1c368:	cmp	ip, #0
   1c36c:	bxeq	lr
   1c370:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c374:	ldr	lr, [r1]
   1c378:	adds	r6, lr, ip
   1c37c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c380:	ldr	r2, [r1, #16]
   1c384:	cmp	r2, #0
   1c388:	add	r2, r2, #1
   1c38c:	str	r2, [r1, #16]
   1c390:	ldrne	r2, [r0, #20]
   1c394:	movne	r1, #44	; 0x2c
   1c398:	addne	r4, r2, #1
   1c39c:	strne	r4, [r0, #20]
   1c3a0:	strbne	r1, [r2]
   1c3a4:	mov	r1, r3
   1c3a8:	ldr	r3, [lr, ip]
   1c3ac:	mov	r4, r0
   1c3b0:	ldr	r2, [sp, #40]	; 0x28
   1c3b4:	ldr	fp, [r6, r3]
   1c3b8:	add	r5, r6, r3
   1c3bc:	bl	15fdc <test_print@@Base+0x2620>
   1c3c0:	ldr	r3, [r4, #32]
   1c3c4:	ldr	r2, [r4, #20]
   1c3c8:	add	r3, r3, #1
   1c3cc:	add	r0, r2, #1
   1c3d0:	mov	r1, #91	; 0x5b
   1c3d4:	cmp	fp, #0
   1c3d8:	str	r3, [r4, #32]
   1c3dc:	str	r0, [r4, #20]
   1c3e0:	strb	r1, [r2]
   1c3e4:	bne	1c40c <flatcc_json_printer_int16_vector_field@@Base+0xc0>
   1c3e8:	ldr	r0, [r4, #20]
   1c3ec:	ldrb	r3, [r4, #25]
   1c3f0:	cmp	r3, #0
   1c3f4:	bne	1c568 <flatcc_json_printer_int16_vector_field@@Base+0x21c>
   1c3f8:	add	r2, r0, #1
   1c3fc:	mov	r3, #93	; 0x5d
   1c400:	str	r2, [r4, #20]
   1c404:	strb	r3, [r0]
   1c408:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c40c:	ldrb	r3, [r4, #25]
   1c410:	cmp	r3, #0
   1c414:	bne	1c5cc <flatcc_json_printer_int16_vector_field@@Base+0x280>
   1c418:	ldr	r1, [r4, #20]
   1c41c:	ldr	r2, [r4, #16]
   1c420:	cmp	r1, r2
   1c424:	bcs	1c5f0 <flatcc_json_printer_int16_vector_field@@Base+0x2a4>
   1c428:	ldrsh	r0, [r5, #4]
   1c42c:	add	r5, r5, #4
   1c430:	cmp	r0, #0
   1c434:	lsr	r6, r0, #31
   1c438:	rsblt	r0, r0, #0
   1c43c:	movlt	r3, #45	; 0x2d
   1c440:	sxthlt	r0, r0
   1c444:	strblt	r3, [r1]
   1c448:	uxth	r0, r0
   1c44c:	addlt	r1, r1, #1
   1c450:	bl	13cb8 <test_print@@Base+0x2fc>
   1c454:	ldr	r3, [r4, #20]
   1c458:	cmp	fp, #1
   1c45c:	sub	fp, fp, #2
   1c460:	add	r0, r6, r0
   1c464:	add	r0, r3, r0
   1c468:	str	r0, [r4, #20]
   1c46c:	beq	1c3ec <flatcc_json_printer_int16_vector_field@@Base+0xa0>
   1c470:	mov	r6, #44	; 0x2c
   1c474:	mov	r8, #10
   1c478:	mov	r7, #32
   1c47c:	mov	r9, #45	; 0x2d
   1c480:	b	1c4d4 <flatcc_json_printer_int16_vector_field@@Base+0x188>
   1c484:	ldr	r1, [r4, #20]
   1c488:	ldr	r3, [r4, #16]
   1c48c:	cmp	r1, r3
   1c490:	bcs	1c53c <flatcc_json_printer_int16_vector_field@@Base+0x1f0>
   1c494:	ldrsh	r0, [r5, #2]!
   1c498:	cmp	r0, #0
   1c49c:	lsr	sl, r0, #31
   1c4a0:	rsblt	r0, r0, #0
   1c4a4:	strblt	r9, [r1]
   1c4a8:	sxthlt	r0, r0
   1c4ac:	addlt	r1, r1, #1
   1c4b0:	uxth	r0, r0
   1c4b4:	bl	13cb8 <test_print@@Base+0x2fc>
   1c4b8:	ldr	r2, [r4, #20]
   1c4bc:	cmp	fp, #0
   1c4c0:	sub	fp, fp, #1
   1c4c4:	add	r0, sl, r0
   1c4c8:	add	r0, r2, r0
   1c4cc:	str	r0, [r4, #20]
   1c4d0:	beq	1c3ec <flatcc_json_printer_int16_vector_field@@Base+0xa0>
   1c4d4:	add	r3, r0, #1
   1c4d8:	str	r3, [r4, #20]
   1c4dc:	strb	r6, [r0]
   1c4e0:	ldrb	r3, [r4, #25]
   1c4e4:	cmp	r3, #0
   1c4e8:	beq	1c484 <flatcc_json_printer_int16_vector_field@@Base+0x138>
   1c4ec:	ldr	r3, [r4, #20]
   1c4f0:	mov	r1, r7
   1c4f4:	add	r2, r3, #1
   1c4f8:	str	r2, [r4, #20]
   1c4fc:	strb	r8, [r3]
   1c500:	ldrb	r3, [r4, #25]
   1c504:	ldr	r2, [r4, #32]
   1c508:	ldr	ip, [r4, #20]
   1c50c:	ldr	lr, [r4, #16]
   1c510:	mul	sl, r2, r3
   1c514:	mov	r0, ip
   1c518:	add	ip, ip, sl
   1c51c:	cmp	lr, ip
   1c520:	mov	r2, sl
   1c524:	bcc	1c554 <flatcc_json_printer_int16_vector_field@@Base+0x208>
   1c528:	bl	124e0 <memset@plt>
   1c52c:	ldr	r1, [r4, #20]
   1c530:	add	r1, r1, sl
   1c534:	str	r1, [r4, #20]
   1c538:	b	1c494 <flatcc_json_printer_int16_vector_field@@Base+0x148>
   1c53c:	mov	r1, #0
   1c540:	ldr	r3, [r4, #44]	; 0x2c
   1c544:	mov	r0, r4
   1c548:	blx	r3
   1c54c:	ldr	r1, [r4, #20]
   1c550:	b	1c494 <flatcc_json_printer_int16_vector_field@@Base+0x148>
   1c554:	mov	r1, sl
   1c558:	mov	r0, r4
   1c55c:	bl	14bc8 <test_print@@Base+0x120c>
   1c560:	ldr	r1, [r4, #20]
   1c564:	b	1c494 <flatcc_json_printer_int16_vector_field@@Base+0x148>
   1c568:	add	r2, r0, #1
   1c56c:	mov	r3, #10
   1c570:	str	r2, [r4, #20]
   1c574:	strb	r3, [r0]
   1c578:	ldr	r3, [r4, #32]
   1c57c:	ldrb	r5, [r4, #25]
   1c580:	sub	r3, r3, #1
   1c584:	ldr	r0, [r4, #20]
   1c588:	ldr	r2, [r4, #16]
   1c58c:	mul	r5, r3, r5
   1c590:	str	r3, [r4, #32]
   1c594:	add	r3, r0, r5
   1c598:	cmp	r2, r3
   1c59c:	bcc	1c5b8 <flatcc_json_printer_int16_vector_field@@Base+0x26c>
   1c5a0:	mov	r2, r5
   1c5a4:	mov	r1, #32
   1c5a8:	bl	124e0 <memset@plt>
   1c5ac:	ldr	r0, [r4, #20]
   1c5b0:	add	r0, r0, r5
   1c5b4:	b	1c3f8 <flatcc_json_printer_int16_vector_field@@Base+0xac>
   1c5b8:	mov	r0, r4
   1c5bc:	mov	r1, r5
   1c5c0:	bl	14bc8 <test_print@@Base+0x120c>
   1c5c4:	ldr	r0, [r4, #20]
   1c5c8:	b	1c3f8 <flatcc_json_printer_int16_vector_field@@Base+0xac>
   1c5cc:	ldr	r3, [r4, #20]
   1c5d0:	mov	r2, #10
   1c5d4:	add	r1, r3, #1
   1c5d8:	str	r1, [r4, #20]
   1c5dc:	mov	r0, r4
   1c5e0:	strb	r2, [r3]
   1c5e4:	bl	14c74 <test_print@@Base+0x12b8>
   1c5e8:	ldr	r1, [r4, #20]
   1c5ec:	b	1c428 <flatcc_json_printer_int16_vector_field@@Base+0xdc>
   1c5f0:	mov	r1, r3
   1c5f4:	mov	r0, r4
   1c5f8:	ldr	r3, [r4, #44]	; 0x2c
   1c5fc:	blx	r3
   1c600:	ldr	r1, [r4, #20]
   1c604:	b	1c428 <flatcc_json_printer_int16_vector_field@@Base+0xdc>

0001c608 <flatcc_json_printer_int32_vector_field@@Base>:
   1c608:	add	r2, r2, #2
   1c60c:	ldr	ip, [r1, #8]
   1c610:	lsl	r2, r2, #1
   1c614:	cmp	ip, r2
   1c618:	bxle	lr
   1c61c:	ldr	ip, [r1, #4]
   1c620:	ldrh	ip, [ip, r2]
   1c624:	cmp	ip, #0
   1c628:	bxeq	lr
   1c62c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c630:	ldr	lr, [r1]
   1c634:	adds	r6, lr, ip
   1c638:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c63c:	ldr	r2, [r1, #16]
   1c640:	cmp	r2, #0
   1c644:	add	r2, r2, #1
   1c648:	str	r2, [r1, #16]
   1c64c:	ldrne	r2, [r0, #20]
   1c650:	movne	r1, #44	; 0x2c
   1c654:	addne	r4, r2, #1
   1c658:	strne	r4, [r0, #20]
   1c65c:	strbne	r1, [r2]
   1c660:	mov	r1, r3
   1c664:	ldr	r3, [lr, ip]
   1c668:	mov	r4, r0
   1c66c:	ldr	r2, [sp, #40]	; 0x28
   1c670:	ldr	fp, [r6, r3]
   1c674:	add	r5, r6, r3
   1c678:	bl	15fdc <test_print@@Base+0x2620>
   1c67c:	ldr	r3, [r4, #32]
   1c680:	ldr	r2, [r4, #20]
   1c684:	add	r3, r3, #1
   1c688:	add	r0, r2, #1
   1c68c:	mov	r1, #91	; 0x5b
   1c690:	cmp	fp, #0
   1c694:	str	r3, [r4, #32]
   1c698:	str	r0, [r4, #20]
   1c69c:	strb	r1, [r2]
   1c6a0:	bne	1c6c8 <flatcc_json_printer_int32_vector_field@@Base+0xc0>
   1c6a4:	ldr	r0, [r4, #20]
   1c6a8:	ldrb	r3, [r4, #25]
   1c6ac:	cmp	r3, #0
   1c6b0:	bne	1c814 <flatcc_json_printer_int32_vector_field@@Base+0x20c>
   1c6b4:	add	r2, r0, #1
   1c6b8:	mov	r3, #93	; 0x5d
   1c6bc:	str	r2, [r4, #20]
   1c6c0:	strb	r3, [r0]
   1c6c4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c6c8:	ldrb	r3, [r4, #25]
   1c6cc:	cmp	r3, #0
   1c6d0:	bne	1c878 <flatcc_json_printer_int32_vector_field@@Base+0x270>
   1c6d4:	ldr	r1, [r4, #20]
   1c6d8:	ldr	r2, [r4, #16]
   1c6dc:	cmp	r1, r2
   1c6e0:	bcs	1c89c <flatcc_json_printer_int32_vector_field@@Base+0x294>
   1c6e4:	ldr	r0, [r5, #4]
   1c6e8:	add	r5, r5, #4
   1c6ec:	cmp	r0, #0
   1c6f0:	movlt	r3, #45	; 0x2d
   1c6f4:	strblt	r3, [r1]
   1c6f8:	lsr	r6, r0, #31
   1c6fc:	addlt	r1, r1, #1
   1c700:	rsblt	r0, r0, #0
   1c704:	bl	13e3c <test_print@@Base+0x480>
   1c708:	ldr	r3, [r4, #20]
   1c70c:	cmp	fp, #1
   1c710:	sub	fp, fp, #2
   1c714:	add	r0, r6, r0
   1c718:	add	r0, r3, r0
   1c71c:	str	r0, [r4, #20]
   1c720:	beq	1c6a8 <flatcc_json_printer_int32_vector_field@@Base+0xa0>
   1c724:	mov	r6, #44	; 0x2c
   1c728:	mov	r8, #10
   1c72c:	mov	r7, #32
   1c730:	mov	r9, #45	; 0x2d
   1c734:	b	1c780 <flatcc_json_printer_int32_vector_field@@Base+0x178>
   1c738:	ldr	r1, [r4, #20]
   1c73c:	ldr	r3, [r4, #16]
   1c740:	cmp	r1, r3
   1c744:	bcs	1c7e8 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   1c748:	ldr	r0, [r5, #4]!
   1c74c:	cmp	r0, #0
   1c750:	lsr	sl, r0, #31
   1c754:	strblt	r9, [r1]
   1c758:	rsblt	r0, r0, #0
   1c75c:	addlt	r1, r1, #1
   1c760:	bl	13e3c <test_print@@Base+0x480>
   1c764:	ldr	r2, [r4, #20]
   1c768:	cmp	fp, #0
   1c76c:	sub	fp, fp, #1
   1c770:	add	r0, sl, r0
   1c774:	add	r0, r2, r0
   1c778:	str	r0, [r4, #20]
   1c77c:	beq	1c6a8 <flatcc_json_printer_int32_vector_field@@Base+0xa0>
   1c780:	add	r3, r0, #1
   1c784:	str	r3, [r4, #20]
   1c788:	strb	r6, [r0]
   1c78c:	ldrb	r3, [r4, #25]
   1c790:	cmp	r3, #0
   1c794:	beq	1c738 <flatcc_json_printer_int32_vector_field@@Base+0x130>
   1c798:	ldr	r3, [r4, #20]
   1c79c:	mov	r1, r7
   1c7a0:	add	r2, r3, #1
   1c7a4:	str	r2, [r4, #20]
   1c7a8:	strb	r8, [r3]
   1c7ac:	ldrb	r3, [r4, #25]
   1c7b0:	ldr	r2, [r4, #32]
   1c7b4:	ldr	ip, [r4, #20]
   1c7b8:	ldr	lr, [r4, #16]
   1c7bc:	mul	sl, r2, r3
   1c7c0:	mov	r0, ip
   1c7c4:	add	ip, ip, sl
   1c7c8:	cmp	lr, ip
   1c7cc:	mov	r2, sl
   1c7d0:	bcc	1c800 <flatcc_json_printer_int32_vector_field@@Base+0x1f8>
   1c7d4:	bl	124e0 <memset@plt>
   1c7d8:	ldr	r1, [r4, #20]
   1c7dc:	add	r1, r1, sl
   1c7e0:	str	r1, [r4, #20]
   1c7e4:	b	1c748 <flatcc_json_printer_int32_vector_field@@Base+0x140>
   1c7e8:	mov	r1, #0
   1c7ec:	ldr	r3, [r4, #44]	; 0x2c
   1c7f0:	mov	r0, r4
   1c7f4:	blx	r3
   1c7f8:	ldr	r1, [r4, #20]
   1c7fc:	b	1c748 <flatcc_json_printer_int32_vector_field@@Base+0x140>
   1c800:	mov	r1, sl
   1c804:	mov	r0, r4
   1c808:	bl	14bc8 <test_print@@Base+0x120c>
   1c80c:	ldr	r1, [r4, #20]
   1c810:	b	1c748 <flatcc_json_printer_int32_vector_field@@Base+0x140>
   1c814:	add	r2, r0, #1
   1c818:	mov	r3, #10
   1c81c:	str	r2, [r4, #20]
   1c820:	strb	r3, [r0]
   1c824:	ldr	r3, [r4, #32]
   1c828:	ldrb	r5, [r4, #25]
   1c82c:	sub	r3, r3, #1
   1c830:	ldr	r0, [r4, #20]
   1c834:	ldr	r2, [r4, #16]
   1c838:	mul	r5, r3, r5
   1c83c:	str	r3, [r4, #32]
   1c840:	add	r3, r0, r5
   1c844:	cmp	r2, r3
   1c848:	bcc	1c864 <flatcc_json_printer_int32_vector_field@@Base+0x25c>
   1c84c:	mov	r2, r5
   1c850:	mov	r1, #32
   1c854:	bl	124e0 <memset@plt>
   1c858:	ldr	r0, [r4, #20]
   1c85c:	add	r0, r0, r5
   1c860:	b	1c6b4 <flatcc_json_printer_int32_vector_field@@Base+0xac>
   1c864:	mov	r0, r4
   1c868:	mov	r1, r5
   1c86c:	bl	14bc8 <test_print@@Base+0x120c>
   1c870:	ldr	r0, [r4, #20]
   1c874:	b	1c6b4 <flatcc_json_printer_int32_vector_field@@Base+0xac>
   1c878:	ldr	r3, [r4, #20]
   1c87c:	mov	r2, #10
   1c880:	add	r1, r3, #1
   1c884:	str	r1, [r4, #20]
   1c888:	mov	r0, r4
   1c88c:	strb	r2, [r3]
   1c890:	bl	14c74 <test_print@@Base+0x12b8>
   1c894:	ldr	r1, [r4, #20]
   1c898:	b	1c6e4 <flatcc_json_printer_int32_vector_field@@Base+0xdc>
   1c89c:	mov	r1, r3
   1c8a0:	mov	r0, r4
   1c8a4:	ldr	r3, [r4, #44]	; 0x2c
   1c8a8:	blx	r3
   1c8ac:	ldr	r1, [r4, #20]
   1c8b0:	b	1c6e4 <flatcc_json_printer_int32_vector_field@@Base+0xdc>

0001c8b4 <flatcc_json_printer_int64_vector_field@@Base>:
   1c8b4:	add	r2, r2, #2
   1c8b8:	ldr	ip, [r1, #8]
   1c8bc:	lsl	r2, r2, #1
   1c8c0:	cmp	ip, r2
   1c8c4:	bxle	lr
   1c8c8:	ldr	ip, [r1, #4]
   1c8cc:	ldrh	ip, [ip, r2]
   1c8d0:	cmp	ip, #0
   1c8d4:	bxeq	lr
   1c8d8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8dc:	ldr	lr, [r1]
   1c8e0:	adds	r6, lr, ip
   1c8e4:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c8e8:	ldr	r2, [r1, #16]
   1c8ec:	cmp	r2, #0
   1c8f0:	add	r2, r2, #1
   1c8f4:	str	r2, [r1, #16]
   1c8f8:	ldrne	r2, [r0, #20]
   1c8fc:	movne	r1, #44	; 0x2c
   1c900:	addne	r4, r2, #1
   1c904:	strne	r4, [r0, #20]
   1c908:	strbne	r1, [r2]
   1c90c:	mov	r1, r3
   1c910:	ldr	r3, [lr, ip]
   1c914:	mov	r4, r0
   1c918:	ldr	r2, [sp, #40]	; 0x28
   1c91c:	ldr	fp, [r6, r3]
   1c920:	add	r5, r6, r3
   1c924:	bl	15fdc <test_print@@Base+0x2620>
   1c928:	ldr	r3, [r4, #32]
   1c92c:	ldr	r2, [r4, #20]
   1c930:	add	r3, r3, #1
   1c934:	add	r0, r2, #1
   1c938:	mov	r1, #91	; 0x5b
   1c93c:	cmp	fp, #0
   1c940:	str	r3, [r4, #32]
   1c944:	str	r0, [r4, #20]
   1c948:	strb	r1, [r2]
   1c94c:	bne	1c974 <flatcc_json_printer_int64_vector_field@@Base+0xc0>
   1c950:	ldr	r0, [r4, #20]
   1c954:	ldrb	r3, [r4, #25]
   1c958:	cmp	r3, #0
   1c95c:	bne	1cac8 <flatcc_json_printer_int64_vector_field@@Base+0x214>
   1c960:	add	r2, r0, #1
   1c964:	mov	r3, #93	; 0x5d
   1c968:	str	r2, [r4, #20]
   1c96c:	strb	r3, [r0]
   1c970:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c974:	ldrb	r1, [r4, #25]
   1c978:	cmp	r1, #0
   1c97c:	bne	1cb2c <flatcc_json_printer_int64_vector_field@@Base+0x278>
   1c980:	ldr	r2, [r4, #20]
   1c984:	ldr	r3, [r4, #16]
   1c988:	cmp	r2, r3
   1c98c:	bcs	1cb68 <flatcc_json_printer_int64_vector_field@@Base+0x2b4>
   1c990:	ldrd	r0, [r5, #4]
   1c994:	add	r5, r5, #4
   1c998:	cmp	r0, #0
   1c99c:	sbcs	r3, r1, #0
   1c9a0:	lsr	r6, r1, #31
   1c9a4:	blt	1cb50 <flatcc_json_printer_int64_vector_field@@Base+0x29c>
   1c9a8:	bl	141a8 <test_print@@Base+0x7ec>
   1c9ac:	ldr	r3, [r4, #20]
   1c9b0:	cmp	fp, #1
   1c9b4:	sub	fp, fp, #2
   1c9b8:	add	r0, r6, r0
   1c9bc:	add	r0, r3, r0
   1c9c0:	str	r0, [r4, #20]
   1c9c4:	beq	1c954 <flatcc_json_printer_int64_vector_field@@Base+0xa0>
   1c9c8:	mov	r6, #44	; 0x2c
   1c9cc:	mov	r8, #10
   1c9d0:	mov	r7, #32
   1c9d4:	mov	r9, #45	; 0x2d
   1c9d8:	b	1ca20 <flatcc_json_printer_int64_vector_field@@Base+0x16c>
   1c9dc:	ldr	r2, [r4, #20]
   1c9e0:	ldr	r3, [r4, #16]
   1c9e4:	cmp	r2, r3
   1c9e8:	bcs	1ca9c <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
   1c9ec:	ldrd	r0, [r5, #8]!
   1c9f0:	cmp	r0, #0
   1c9f4:	sbcs	r3, r1, #0
   1c9f8:	lsr	sl, r1, #31
   1c9fc:	blt	1ca88 <flatcc_json_printer_int64_vector_field@@Base+0x1d4>
   1ca00:	bl	141a8 <test_print@@Base+0x7ec>
   1ca04:	ldr	r2, [r4, #20]
   1ca08:	cmp	fp, #0
   1ca0c:	sub	fp, fp, #1
   1ca10:	add	r0, sl, r0
   1ca14:	add	r0, r2, r0
   1ca18:	str	r0, [r4, #20]
   1ca1c:	beq	1c954 <flatcc_json_printer_int64_vector_field@@Base+0xa0>
   1ca20:	add	r3, r0, #1
   1ca24:	str	r3, [r4, #20]
   1ca28:	strb	r6, [r0]
   1ca2c:	ldrb	r3, [r4, #25]
   1ca30:	cmp	r3, #0
   1ca34:	beq	1c9dc <flatcc_json_printer_int64_vector_field@@Base+0x128>
   1ca38:	ldr	r3, [r4, #20]
   1ca3c:	mov	r1, r7
   1ca40:	add	r2, r3, #1
   1ca44:	str	r2, [r4, #20]
   1ca48:	strb	r8, [r3]
   1ca4c:	ldrb	r2, [r4, #25]
   1ca50:	ldr	r3, [r4, #32]
   1ca54:	ldr	ip, [r4, #20]
   1ca58:	ldr	lr, [r4, #16]
   1ca5c:	mul	sl, r3, r2
   1ca60:	mov	r0, ip
   1ca64:	add	ip, ip, sl
   1ca68:	cmp	lr, ip
   1ca6c:	mov	r2, sl
   1ca70:	bcc	1cab4 <flatcc_json_printer_int64_vector_field@@Base+0x200>
   1ca74:	bl	124e0 <memset@plt>
   1ca78:	ldr	r2, [r4, #20]
   1ca7c:	add	r2, r2, sl
   1ca80:	str	r2, [r4, #20]
   1ca84:	b	1c9ec <flatcc_json_printer_int64_vector_field@@Base+0x138>
   1ca88:	rsbs	r0, r0, #0
   1ca8c:	strb	r9, [r2]
   1ca90:	rsc	r1, r1, #0
   1ca94:	add	r2, r2, #1
   1ca98:	b	1ca00 <flatcc_json_printer_int64_vector_field@@Base+0x14c>
   1ca9c:	ldr	r3, [r4, #44]	; 0x2c
   1caa0:	mov	r1, #0
   1caa4:	mov	r0, r4
   1caa8:	blx	r3
   1caac:	ldr	r2, [r4, #20]
   1cab0:	b	1c9ec <flatcc_json_printer_int64_vector_field@@Base+0x138>
   1cab4:	mov	r1, sl
   1cab8:	mov	r0, r4
   1cabc:	bl	14bc8 <test_print@@Base+0x120c>
   1cac0:	ldr	r2, [r4, #20]
   1cac4:	b	1c9ec <flatcc_json_printer_int64_vector_field@@Base+0x138>
   1cac8:	add	r2, r0, #1
   1cacc:	mov	r3, #10
   1cad0:	str	r2, [r4, #20]
   1cad4:	strb	r3, [r0]
   1cad8:	ldr	r3, [r4, #32]
   1cadc:	ldrb	r5, [r4, #25]
   1cae0:	sub	r3, r3, #1
   1cae4:	ldr	r0, [r4, #20]
   1cae8:	ldr	r2, [r4, #16]
   1caec:	mul	r5, r3, r5
   1caf0:	str	r3, [r4, #32]
   1caf4:	add	r3, r0, r5
   1caf8:	cmp	r2, r3
   1cafc:	bcc	1cb18 <flatcc_json_printer_int64_vector_field@@Base+0x264>
   1cb00:	mov	r2, r5
   1cb04:	mov	r1, #32
   1cb08:	bl	124e0 <memset@plt>
   1cb0c:	ldr	r0, [r4, #20]
   1cb10:	add	r0, r0, r5
   1cb14:	b	1c960 <flatcc_json_printer_int64_vector_field@@Base+0xac>
   1cb18:	mov	r0, r4
   1cb1c:	mov	r1, r5
   1cb20:	bl	14bc8 <test_print@@Base+0x120c>
   1cb24:	ldr	r0, [r4, #20]
   1cb28:	b	1c960 <flatcc_json_printer_int64_vector_field@@Base+0xac>
   1cb2c:	ldr	r3, [r4, #20]
   1cb30:	mov	r2, #10
   1cb34:	add	r1, r3, #1
   1cb38:	str	r1, [r4, #20]
   1cb3c:	mov	r0, r4
   1cb40:	strb	r2, [r3]
   1cb44:	bl	14c74 <test_print@@Base+0x12b8>
   1cb48:	ldr	r2, [r4, #20]
   1cb4c:	b	1c990 <flatcc_json_printer_int64_vector_field@@Base+0xdc>
   1cb50:	mov	r3, #45	; 0x2d
   1cb54:	rsbs	r0, r0, #0
   1cb58:	strb	r3, [r2]
   1cb5c:	rsc	r1, r1, #0
   1cb60:	add	r2, r2, #1
   1cb64:	b	1c9a8 <flatcc_json_printer_int64_vector_field@@Base+0xf4>
   1cb68:	ldr	r3, [r4, #44]	; 0x2c
   1cb6c:	mov	r0, r4
   1cb70:	blx	r3
   1cb74:	ldr	r2, [r4, #20]
   1cb78:	b	1c990 <flatcc_json_printer_int64_vector_field@@Base+0xdc>

0001cb7c <flatcc_json_printer_bool_vector_field@@Base>:
   1cb7c:	add	r2, r2, #2
   1cb80:	ldr	ip, [r1, #8]
   1cb84:	lsl	r2, r2, #1
   1cb88:	cmp	ip, r2
   1cb8c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb90:	ldr	r7, [sp, #40]	; 0x28
   1cb94:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb98:	ldr	ip, [r1, #4]
   1cb9c:	ldrh	ip, [ip, r2]
   1cba0:	cmp	ip, #0
   1cba4:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cba8:	ldr	r5, [r1]
   1cbac:	adds	lr, r5, ip
   1cbb0:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cbb4:	ldr	r2, [r1, #16]
   1cbb8:	mov	r8, r3
   1cbbc:	cmp	r2, #0
   1cbc0:	add	r2, r2, #1
   1cbc4:	str	r2, [r1, #16]
   1cbc8:	ldrne	r2, [r0, #20]
   1cbcc:	movne	r1, #44	; 0x2c
   1cbd0:	addne	r4, r2, #1
   1cbd4:	strne	r4, [r0, #20]
   1cbd8:	strbne	r1, [r2]
   1cbdc:	ldrb	r1, [r0, #25]
   1cbe0:	ldr	r3, [r5, ip]
   1cbe4:	mov	r4, r0
   1cbe8:	cmp	r1, #0
   1cbec:	add	r6, lr, r3
   1cbf0:	ldr	r5, [lr, r3]
   1cbf4:	ldr	r3, [r0, #20]
   1cbf8:	bne	1ce7c <flatcc_json_printer_bool_vector_field@@Base+0x300>
   1cbfc:	ldr	r2, [r0, #16]
   1cc00:	cmp	r3, r2
   1cc04:	bcc	1cc14 <flatcc_json_printer_bool_vector_field@@Base+0x98>
   1cc08:	ldr	r3, [r0, #44]	; 0x2c
   1cc0c:	blx	r3
   1cc10:	ldr	r3, [r4, #20]
   1cc14:	mov	r2, #34	; 0x22
   1cc18:	strb	r2, [r3]
   1cc1c:	ldrb	r3, [r4, #26]
   1cc20:	ldr	r0, [r4, #20]
   1cc24:	ldr	r2, [r4, #16]
   1cc28:	cmp	r3, #0
   1cc2c:	addeq	r0, r0, #1
   1cc30:	add	r3, r0, r7
   1cc34:	cmp	r2, r3
   1cc38:	str	r0, [r4, #20]
   1cc3c:	bhi	1cdfc <flatcc_json_printer_bool_vector_field@@Base+0x280>
   1cc40:	mov	r2, r7
   1cc44:	mov	r1, r8
   1cc48:	mov	r0, r4
   1cc4c:	bl	14b18 <test_print@@Base+0x115c>
   1cc50:	ldr	r7, [r4, #20]
   1cc54:	mov	r3, #34	; 0x22
   1cc58:	strb	r3, [r7]
   1cc5c:	ldr	r1, [r4, #20]
   1cc60:	ldrb	r3, [r4, #26]
   1cc64:	clz	r3, r3
   1cc68:	lsr	r3, r3, #5
   1cc6c:	add	r2, r1, r3
   1cc70:	add	r2, r2, #1
   1cc74:	mov	r0, #58	; 0x3a
   1cc78:	str	r2, [r4, #20]
   1cc7c:	strb	r0, [r1, r3]
   1cc80:	ldr	r3, [r4, #20]
   1cc84:	mov	r1, #32
   1cc88:	mov	lr, #91	; 0x5b
   1cc8c:	strb	r1, [r3]
   1cc90:	ldrb	r3, [r4, #25]
   1cc94:	ldr	ip, [r4, #20]
   1cc98:	ldr	r2, [r4, #32]
   1cc9c:	adds	r3, r3, #0
   1cca0:	movne	r3, #1
   1cca4:	add	r0, ip, r3
   1cca8:	add	r0, r0, #1
   1ccac:	add	r2, r2, #1
   1ccb0:	cmp	r5, #0
   1ccb4:	str	r0, [r4, #20]
   1ccb8:	str	r2, [r4, #32]
   1ccbc:	strb	lr, [ip, r3]
   1ccc0:	bne	1cce8 <flatcc_json_printer_bool_vector_field@@Base+0x16c>
   1ccc4:	ldr	r0, [r4, #20]
   1ccc8:	ldrb	r3, [r4, #25]
   1cccc:	cmp	r3, #0
   1ccd0:	bne	1ce18 <flatcc_json_printer_bool_vector_field@@Base+0x29c>
   1ccd4:	add	r2, r0, #1
   1ccd8:	mov	r3, #93	; 0x5d
   1ccdc:	str	r2, [r4, #20]
   1cce0:	strb	r3, [r0]
   1cce4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cce8:	ldrb	r3, [r4, #25]
   1ccec:	cmp	r3, #0
   1ccf0:	bne	1cec8 <flatcc_json_printer_bool_vector_field@@Base+0x34c>
   1ccf4:	ldr	r1, [r4, #20]
   1ccf8:	ldr	r2, [r4, #16]
   1ccfc:	cmp	r1, r2
   1cd00:	bcs	1cf14 <flatcc_json_printer_bool_vector_field@@Base+0x398>
   1cd04:	ldrb	r0, [r6, #4]
   1cd08:	bl	14ef4 <test_print@@Base+0x1538>
   1cd0c:	ldr	r3, [r4, #20]
   1cd10:	cmp	r5, #1
   1cd14:	add	fp, r6, #5
   1cd18:	add	r0, r3, r0
   1cd1c:	str	r0, [r4, #20]
   1cd20:	beq	1ccc8 <flatcc_json_printer_bool_vector_field@@Base+0x14c>
   1cd24:	add	r5, r5, #4
   1cd28:	mov	r7, #44	; 0x2c
   1cd2c:	mov	r9, #10
   1cd30:	mov	r8, #32
   1cd34:	b	1cd68 <flatcc_json_printer_bool_vector_field@@Base+0x1ec>
   1cd38:	ldr	r1, [r4, #20]
   1cd3c:	ldr	r3, [r4, #16]
   1cd40:	cmp	r1, r3
   1cd44:	bcs	1cdd0 <flatcc_json_printer_bool_vector_field@@Base+0x254>
   1cd48:	ldrb	r0, [fp], #1
   1cd4c:	bl	14ef4 <test_print@@Base+0x1538>
   1cd50:	ldr	r3, [r4, #20]
   1cd54:	sub	r2, r5, fp
   1cd58:	cmn	r6, r2
   1cd5c:	add	r0, r3, r0
   1cd60:	str	r0, [r4, #20]
   1cd64:	beq	1ccc8 <flatcc_json_printer_bool_vector_field@@Base+0x14c>
   1cd68:	add	r3, r0, #1
   1cd6c:	str	r3, [r4, #20]
   1cd70:	strb	r7, [r0]
   1cd74:	ldrb	r3, [r4, #25]
   1cd78:	cmp	r3, #0
   1cd7c:	beq	1cd38 <flatcc_json_printer_bool_vector_field@@Base+0x1bc>
   1cd80:	ldr	r3, [r4, #20]
   1cd84:	mov	r1, r8
   1cd88:	add	r2, r3, #1
   1cd8c:	str	r2, [r4, #20]
   1cd90:	strb	r9, [r3]
   1cd94:	ldrb	r3, [r4, #25]
   1cd98:	ldr	r2, [r4, #32]
   1cd9c:	ldr	ip, [r4, #20]
   1cda0:	ldr	lr, [r4, #16]
   1cda4:	mul	sl, r2, r3
   1cda8:	mov	r0, ip
   1cdac:	add	ip, ip, sl
   1cdb0:	cmp	lr, ip
   1cdb4:	mov	r2, sl
   1cdb8:	bcc	1cde8 <flatcc_json_printer_bool_vector_field@@Base+0x26c>
   1cdbc:	bl	124e0 <memset@plt>
   1cdc0:	ldr	r1, [r4, #20]
   1cdc4:	add	r1, r1, sl
   1cdc8:	str	r1, [r4, #20]
   1cdcc:	b	1cd48 <flatcc_json_printer_bool_vector_field@@Base+0x1cc>
   1cdd0:	mov	r1, #0
   1cdd4:	ldr	r3, [r4, #44]	; 0x2c
   1cdd8:	mov	r0, r4
   1cddc:	blx	r3
   1cde0:	ldr	r1, [r4, #20]
   1cde4:	b	1cd48 <flatcc_json_printer_bool_vector_field@@Base+0x1cc>
   1cde8:	mov	r1, sl
   1cdec:	mov	r0, r4
   1cdf0:	bl	14bc8 <test_print@@Base+0x120c>
   1cdf4:	ldr	r1, [r4, #20]
   1cdf8:	b	1cd48 <flatcc_json_printer_bool_vector_field@@Base+0x1cc>
   1cdfc:	mov	r2, r7
   1ce00:	mov	r1, r8
   1ce04:	bl	12444 <memcpy@plt>
   1ce08:	ldr	r3, [r4, #20]
   1ce0c:	add	r7, r3, r7
   1ce10:	str	r7, [r4, #20]
   1ce14:	b	1cc54 <flatcc_json_printer_bool_vector_field@@Base+0xd8>
   1ce18:	add	r2, r0, #1
   1ce1c:	mov	r3, #10
   1ce20:	str	r2, [r4, #20]
   1ce24:	strb	r3, [r0]
   1ce28:	ldr	r3, [r4, #32]
   1ce2c:	ldrb	r5, [r4, #25]
   1ce30:	sub	r3, r3, #1
   1ce34:	ldr	r0, [r4, #20]
   1ce38:	ldr	r2, [r4, #16]
   1ce3c:	mul	r5, r3, r5
   1ce40:	str	r3, [r4, #32]
   1ce44:	add	r3, r0, r5
   1ce48:	cmp	r2, r3
   1ce4c:	bcc	1ce68 <flatcc_json_printer_bool_vector_field@@Base+0x2ec>
   1ce50:	mov	r2, r5
   1ce54:	mov	r1, #32
   1ce58:	bl	124e0 <memset@plt>
   1ce5c:	ldr	r0, [r4, #20]
   1ce60:	add	r0, r0, r5
   1ce64:	b	1ccd4 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   1ce68:	mov	r0, r4
   1ce6c:	mov	r1, r5
   1ce70:	bl	14bc8 <test_print@@Base+0x120c>
   1ce74:	ldr	r0, [r4, #20]
   1ce78:	b	1ccd4 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   1ce7c:	mov	r2, #10
   1ce80:	add	r1, r3, #1
   1ce84:	str	r1, [r0, #20]
   1ce88:	strb	r2, [r3]
   1ce8c:	ldrb	r3, [r0, #25]
   1ce90:	ldr	r9, [r0, #32]
   1ce94:	ldr	r0, [r0, #20]
   1ce98:	ldr	r2, [r4, #16]
   1ce9c:	mul	r9, r9, r3
   1cea0:	add	r3, r0, r9
   1cea4:	cmp	r2, r3
   1cea8:	bcc	1cf2c <flatcc_json_printer_bool_vector_field@@Base+0x3b0>
   1ceac:	mov	r2, r9
   1ceb0:	mov	r1, #32
   1ceb4:	bl	124e0 <memset@plt>
   1ceb8:	ldr	r3, [r4, #20]
   1cebc:	add	r3, r3, r9
   1cec0:	str	r3, [r4, #20]
   1cec4:	b	1cc14 <flatcc_json_printer_bool_vector_field@@Base+0x98>
   1cec8:	ldr	r3, [r4, #20]
   1cecc:	mov	r2, #10
   1ced0:	add	r0, r3, #1
   1ced4:	str	r0, [r4, #20]
   1ced8:	strb	r2, [r3]
   1cedc:	ldrb	r3, [r4, #25]
   1cee0:	ldr	r7, [r4, #32]
   1cee4:	ldr	r0, [r4, #20]
   1cee8:	ldr	r2, [r4, #16]
   1ceec:	mul	r7, r7, r3
   1cef0:	add	r3, r0, r7
   1cef4:	cmp	r2, r3
   1cef8:	bcc	1cf40 <flatcc_json_printer_bool_vector_field@@Base+0x3c4>
   1cefc:	mov	r2, r7
   1cf00:	bl	124e0 <memset@plt>
   1cf04:	ldr	r1, [r4, #20]
   1cf08:	add	r1, r1, r7
   1cf0c:	str	r1, [r4, #20]
   1cf10:	b	1cd04 <flatcc_json_printer_bool_vector_field@@Base+0x188>
   1cf14:	mov	r1, r3
   1cf18:	mov	r0, r4
   1cf1c:	ldr	r3, [r4, #44]	; 0x2c
   1cf20:	blx	r3
   1cf24:	ldr	r1, [r4, #20]
   1cf28:	b	1cd04 <flatcc_json_printer_bool_vector_field@@Base+0x188>
   1cf2c:	mov	r1, r9
   1cf30:	mov	r0, r4
   1cf34:	bl	14bc8 <test_print@@Base+0x120c>
   1cf38:	ldr	r3, [r4, #20]
   1cf3c:	b	1cc14 <flatcc_json_printer_bool_vector_field@@Base+0x98>
   1cf40:	mov	r1, r7
   1cf44:	mov	r0, r4
   1cf48:	bl	14bc8 <test_print@@Base+0x120c>
   1cf4c:	ldr	r1, [r4, #20]
   1cf50:	b	1cd04 <flatcc_json_printer_bool_vector_field@@Base+0x188>

0001cf54 <flatcc_json_printer_float_vector_field@@Base>:
   1cf54:	add	r2, r2, #2
   1cf58:	ldr	ip, [r1, #8]
   1cf5c:	lsl	r2, r2, #1
   1cf60:	cmp	ip, r2
   1cf64:	bxle	lr
   1cf68:	ldr	ip, [r1, #4]
   1cf6c:	ldrh	ip, [ip, r2]
   1cf70:	cmp	ip, #0
   1cf74:	bxeq	lr
   1cf78:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cf7c:	ldr	r5, [r1]
   1cf80:	adds	lr, r5, ip
   1cf84:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cf88:	ldr	r2, [r1, #16]
   1cf8c:	cmp	r2, #0
   1cf90:	add	r2, r2, #1
   1cf94:	str	r2, [r1, #16]
   1cf98:	ldrne	r2, [r0, #20]
   1cf9c:	movne	r1, #44	; 0x2c
   1cfa0:	addne	r4, r2, #1
   1cfa4:	strne	r4, [r0, #20]
   1cfa8:	strbne	r1, [r2]
   1cfac:	mov	r1, r3
   1cfb0:	ldr	r3, [r5, ip]
   1cfb4:	mov	r4, r0
   1cfb8:	ldr	r2, [sp, #40]	; 0x28
   1cfbc:	ldr	r7, [lr, r3]
   1cfc0:	add	r6, lr, r3
   1cfc4:	bl	15fdc <test_print@@Base+0x2620>
   1cfc8:	ldr	r3, [r4, #32]
   1cfcc:	ldr	r2, [r4, #20]
   1cfd0:	add	r3, r3, #1
   1cfd4:	add	r0, r2, #1
   1cfd8:	mov	r1, #91	; 0x5b
   1cfdc:	cmp	r7, #0
   1cfe0:	str	r3, [r4, #32]
   1cfe4:	str	r0, [r4, #20]
   1cfe8:	strb	r1, [r2]
   1cfec:	bne	1d014 <flatcc_json_printer_float_vector_field@@Base+0xc0>
   1cff0:	ldr	r0, [r4, #20]
   1cff4:	ldrb	r3, [r4, #25]
   1cff8:	cmp	r3, #0
   1cffc:	bne	1d134 <flatcc_json_printer_float_vector_field@@Base+0x1e0>
   1d000:	add	r2, r0, #1
   1d004:	mov	r3, #93	; 0x5d
   1d008:	str	r2, [r4, #20]
   1d00c:	strb	r3, [r0]
   1d010:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d014:	ldrb	r1, [r4, #25]
   1d018:	cmp	r1, #0
   1d01c:	bne	1d198 <flatcc_json_printer_float_vector_field@@Base+0x244>
   1d020:	ldr	r0, [r4, #20]
   1d024:	ldr	r3, [r4, #16]
   1d028:	cmp	r0, r3
   1d02c:	bcs	1d1bc <flatcc_json_printer_float_vector_field@@Base+0x268>
   1d030:	vldr	s0, [r6, #4]
   1d034:	sub	r5, r7, #2
   1d038:	add	r6, r6, #8
   1d03c:	vcvt.f64.f32	d0, s0
   1d040:	bl	151c0 <test_print@@Base+0x1804>
   1d044:	ldr	r3, [r4, #20]
   1d048:	cmp	r7, #1
   1d04c:	add	r0, r3, r0
   1d050:	str	r0, [r4, #20]
   1d054:	beq	1cff4 <flatcc_json_printer_float_vector_field@@Base+0xa0>
   1d058:	mov	r7, #44	; 0x2c
   1d05c:	mov	sl, #0
   1d060:	mov	r9, #10
   1d064:	mov	r8, #32
   1d068:	b	1d0a0 <flatcc_json_printer_float_vector_field@@Base+0x14c>
   1d06c:	ldr	r0, [r4, #20]
   1d070:	ldr	r3, [r4, #16]
   1d074:	cmp	r0, r3
   1d078:	bcs	1d108 <flatcc_json_printer_float_vector_field@@Base+0x1b4>
   1d07c:	vldmia	r6!, {s0}
   1d080:	vcvt.f64.f32	d0, s0
   1d084:	bl	151c0 <test_print@@Base+0x1804>
   1d088:	ldr	r3, [r4, #20]
   1d08c:	cmp	r5, #0
   1d090:	sub	r5, r5, #1
   1d094:	add	r0, r3, r0
   1d098:	str	r0, [r4, #20]
   1d09c:	beq	1cff4 <flatcc_json_printer_float_vector_field@@Base+0xa0>
   1d0a0:	add	r3, r0, #1
   1d0a4:	str	r3, [r4, #20]
   1d0a8:	strb	r7, [r0]
   1d0ac:	ldrb	r3, [r4, #25]
   1d0b0:	cmp	r3, #0
   1d0b4:	beq	1d06c <flatcc_json_printer_float_vector_field@@Base+0x118>
   1d0b8:	ldr	r3, [r4, #20]
   1d0bc:	mov	r1, r8
   1d0c0:	add	r2, r3, #1
   1d0c4:	str	r2, [r4, #20]
   1d0c8:	strb	r9, [r3]
   1d0cc:	ldrb	r0, [r4, #25]
   1d0d0:	ldr	fp, [r4, #32]
   1d0d4:	ldr	r3, [r4, #20]
   1d0d8:	ldr	ip, [r4, #16]
   1d0dc:	mul	fp, fp, r0
   1d0e0:	mov	r0, r3
   1d0e4:	add	r3, r3, fp
   1d0e8:	cmp	ip, r3
   1d0ec:	mov	r2, fp
   1d0f0:	bcc	1d120 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   1d0f4:	bl	124e0 <memset@plt>
   1d0f8:	ldr	r0, [r4, #20]
   1d0fc:	add	r0, r0, fp
   1d100:	str	r0, [r4, #20]
   1d104:	b	1d07c <flatcc_json_printer_float_vector_field@@Base+0x128>
   1d108:	mov	r0, r4
   1d10c:	ldr	r3, [r4, #44]	; 0x2c
   1d110:	mov	r1, sl
   1d114:	blx	r3
   1d118:	ldr	r0, [r4, #20]
   1d11c:	b	1d07c <flatcc_json_printer_float_vector_field@@Base+0x128>
   1d120:	mov	r0, r4
   1d124:	mov	r1, fp
   1d128:	bl	14bc8 <test_print@@Base+0x120c>
   1d12c:	ldr	r0, [r4, #20]
   1d130:	b	1d07c <flatcc_json_printer_float_vector_field@@Base+0x128>
   1d134:	add	r2, r0, #1
   1d138:	mov	r3, #10
   1d13c:	str	r2, [r4, #20]
   1d140:	strb	r3, [r0]
   1d144:	ldr	r3, [r4, #32]
   1d148:	ldrb	r5, [r4, #25]
   1d14c:	sub	r3, r3, #1
   1d150:	ldr	r0, [r4, #20]
   1d154:	ldr	r2, [r4, #16]
   1d158:	mul	r5, r3, r5
   1d15c:	str	r3, [r4, #32]
   1d160:	add	r3, r0, r5
   1d164:	cmp	r2, r3
   1d168:	bcc	1d184 <flatcc_json_printer_float_vector_field@@Base+0x230>
   1d16c:	mov	r2, r5
   1d170:	mov	r1, #32
   1d174:	bl	124e0 <memset@plt>
   1d178:	ldr	r0, [r4, #20]
   1d17c:	add	r0, r0, r5
   1d180:	b	1d000 <flatcc_json_printer_float_vector_field@@Base+0xac>
   1d184:	mov	r0, r4
   1d188:	mov	r1, r5
   1d18c:	bl	14bc8 <test_print@@Base+0x120c>
   1d190:	ldr	r0, [r4, #20]
   1d194:	b	1d000 <flatcc_json_printer_float_vector_field@@Base+0xac>
   1d198:	ldr	r3, [r4, #20]
   1d19c:	mov	r2, #10
   1d1a0:	add	r1, r3, #1
   1d1a4:	str	r1, [r4, #20]
   1d1a8:	mov	r0, r4
   1d1ac:	strb	r2, [r3]
   1d1b0:	bl	14c74 <test_print@@Base+0x12b8>
   1d1b4:	ldr	r0, [r4, #20]
   1d1b8:	b	1d030 <flatcc_json_printer_float_vector_field@@Base+0xdc>
   1d1bc:	mov	r0, r4
   1d1c0:	ldr	r3, [r4, #44]	; 0x2c
   1d1c4:	blx	r3
   1d1c8:	ldr	r0, [r4, #20]
   1d1cc:	b	1d030 <flatcc_json_printer_float_vector_field@@Base+0xdc>

0001d1d0 <flatcc_json_printer_double_vector_field@@Base>:
   1d1d0:	add	r2, r2, #2
   1d1d4:	ldr	ip, [r1, #8]
   1d1d8:	lsl	r2, r2, #1
   1d1dc:	cmp	ip, r2
   1d1e0:	bxle	lr
   1d1e4:	ldr	ip, [r1, #4]
   1d1e8:	ldrh	ip, [ip, r2]
   1d1ec:	cmp	ip, #0
   1d1f0:	bxeq	lr
   1d1f4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1f8:	ldr	r5, [r1]
   1d1fc:	adds	lr, r5, ip
   1d200:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d204:	ldr	r2, [r1, #16]
   1d208:	cmp	r2, #0
   1d20c:	add	r2, r2, #1
   1d210:	str	r2, [r1, #16]
   1d214:	ldrne	r2, [r0, #20]
   1d218:	movne	r1, #44	; 0x2c
   1d21c:	addne	r4, r2, #1
   1d220:	strne	r4, [r0, #20]
   1d224:	strbne	r1, [r2]
   1d228:	mov	r1, r3
   1d22c:	ldr	r3, [r5, ip]
   1d230:	mov	r4, r0
   1d234:	ldr	r2, [sp, #40]	; 0x28
   1d238:	ldr	sl, [lr, r3]
   1d23c:	add	r5, lr, r3
   1d240:	bl	15fdc <test_print@@Base+0x2620>
   1d244:	ldr	r3, [r4, #32]
   1d248:	ldr	r2, [r4, #20]
   1d24c:	add	r3, r3, #1
   1d250:	add	r0, r2, #1
   1d254:	mov	r1, #91	; 0x5b
   1d258:	cmp	sl, #0
   1d25c:	str	r3, [r4, #32]
   1d260:	str	r0, [r4, #20]
   1d264:	strb	r1, [r2]
   1d268:	bne	1d290 <flatcc_json_printer_double_vector_field@@Base+0xc0>
   1d26c:	ldr	r0, [r4, #20]
   1d270:	ldrb	r3, [r4, #25]
   1d274:	cmp	r3, #0
   1d278:	bne	1d3a8 <flatcc_json_printer_double_vector_field@@Base+0x1d8>
   1d27c:	add	r2, r0, #1
   1d280:	mov	r3, #93	; 0x5d
   1d284:	str	r2, [r4, #20]
   1d288:	strb	r3, [r0]
   1d28c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d290:	ldrb	r1, [r4, #25]
   1d294:	cmp	r1, #0
   1d298:	bne	1d40c <flatcc_json_printer_double_vector_field@@Base+0x23c>
   1d29c:	ldr	r0, [r4, #20]
   1d2a0:	ldr	r3, [r4, #16]
   1d2a4:	cmp	r0, r3
   1d2a8:	bcs	1d430 <flatcc_json_printer_double_vector_field@@Base+0x260>
   1d2ac:	vldr	d0, [r5, #4]
   1d2b0:	bl	151c0 <test_print@@Base+0x1804>
   1d2b4:	ldr	r3, [r4, #20]
   1d2b8:	cmp	sl, #1
   1d2bc:	add	r5, r5, #12
   1d2c0:	sub	sl, sl, #2
   1d2c4:	add	r0, r3, r0
   1d2c8:	str	r0, [r4, #20]
   1d2cc:	beq	1d270 <flatcc_json_printer_double_vector_field@@Base+0xa0>
   1d2d0:	mov	r6, #44	; 0x2c
   1d2d4:	mov	r9, #0
   1d2d8:	mov	r8, #10
   1d2dc:	mov	r7, #32
   1d2e0:	b	1d314 <flatcc_json_printer_double_vector_field@@Base+0x144>
   1d2e4:	ldr	r0, [r4, #20]
   1d2e8:	ldr	r3, [r4, #16]
   1d2ec:	cmp	r0, r3
   1d2f0:	bcs	1d37c <flatcc_json_printer_double_vector_field@@Base+0x1ac>
   1d2f4:	vldmia	r5!, {d0}
   1d2f8:	bl	151c0 <test_print@@Base+0x1804>
   1d2fc:	ldr	r3, [r4, #20]
   1d300:	cmp	sl, #0
   1d304:	sub	sl, sl, #1
   1d308:	add	r0, r3, r0
   1d30c:	str	r0, [r4, #20]
   1d310:	beq	1d270 <flatcc_json_printer_double_vector_field@@Base+0xa0>
   1d314:	add	r3, r0, #1
   1d318:	str	r3, [r4, #20]
   1d31c:	strb	r6, [r0]
   1d320:	ldrb	r3, [r4, #25]
   1d324:	cmp	r3, #0
   1d328:	beq	1d2e4 <flatcc_json_printer_double_vector_field@@Base+0x114>
   1d32c:	ldr	r3, [r4, #20]
   1d330:	mov	r1, r7
   1d334:	add	r2, r3, #1
   1d338:	str	r2, [r4, #20]
   1d33c:	strb	r8, [r3]
   1d340:	ldrb	r0, [r4, #25]
   1d344:	ldr	fp, [r4, #32]
   1d348:	ldr	r3, [r4, #20]
   1d34c:	ldr	ip, [r4, #16]
   1d350:	mul	fp, fp, r0
   1d354:	mov	r0, r3
   1d358:	add	r3, r3, fp
   1d35c:	cmp	ip, r3
   1d360:	mov	r2, fp
   1d364:	bcc	1d394 <flatcc_json_printer_double_vector_field@@Base+0x1c4>
   1d368:	bl	124e0 <memset@plt>
   1d36c:	ldr	r0, [r4, #20]
   1d370:	add	r0, r0, fp
   1d374:	str	r0, [r4, #20]
   1d378:	b	1d2f4 <flatcc_json_printer_double_vector_field@@Base+0x124>
   1d37c:	mov	r0, r4
   1d380:	ldr	r3, [r4, #44]	; 0x2c
   1d384:	mov	r1, r9
   1d388:	blx	r3
   1d38c:	ldr	r0, [r4, #20]
   1d390:	b	1d2f4 <flatcc_json_printer_double_vector_field@@Base+0x124>
   1d394:	mov	r0, r4
   1d398:	mov	r1, fp
   1d39c:	bl	14bc8 <test_print@@Base+0x120c>
   1d3a0:	ldr	r0, [r4, #20]
   1d3a4:	b	1d2f4 <flatcc_json_printer_double_vector_field@@Base+0x124>
   1d3a8:	add	r2, r0, #1
   1d3ac:	mov	r3, #10
   1d3b0:	str	r2, [r4, #20]
   1d3b4:	strb	r3, [r0]
   1d3b8:	ldr	r3, [r4, #32]
   1d3bc:	ldrb	r5, [r4, #25]
   1d3c0:	sub	r3, r3, #1
   1d3c4:	ldr	r0, [r4, #20]
   1d3c8:	ldr	r2, [r4, #16]
   1d3cc:	mul	r5, r3, r5
   1d3d0:	str	r3, [r4, #32]
   1d3d4:	add	r3, r0, r5
   1d3d8:	cmp	r2, r3
   1d3dc:	bcc	1d3f8 <flatcc_json_printer_double_vector_field@@Base+0x228>
   1d3e0:	mov	r2, r5
   1d3e4:	mov	r1, #32
   1d3e8:	bl	124e0 <memset@plt>
   1d3ec:	ldr	r0, [r4, #20]
   1d3f0:	add	r0, r0, r5
   1d3f4:	b	1d27c <flatcc_json_printer_double_vector_field@@Base+0xac>
   1d3f8:	mov	r0, r4
   1d3fc:	mov	r1, r5
   1d400:	bl	14bc8 <test_print@@Base+0x120c>
   1d404:	ldr	r0, [r4, #20]
   1d408:	b	1d27c <flatcc_json_printer_double_vector_field@@Base+0xac>
   1d40c:	ldr	r3, [r4, #20]
   1d410:	mov	r2, #10
   1d414:	add	r1, r3, #1
   1d418:	str	r1, [r4, #20]
   1d41c:	mov	r0, r4
   1d420:	strb	r2, [r3]
   1d424:	bl	14c74 <test_print@@Base+0x12b8>
   1d428:	ldr	r0, [r4, #20]
   1d42c:	b	1d2ac <flatcc_json_printer_double_vector_field@@Base+0xdc>
   1d430:	mov	r0, r4
   1d434:	ldr	r3, [r4, #44]	; 0x2c
   1d438:	blx	r3
   1d43c:	ldr	r0, [r4, #20]
   1d440:	b	1d2ac <flatcc_json_printer_double_vector_field@@Base+0xdc>

0001d444 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1d444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d448:	sub	sp, sp, #4
   1d44c:	ldrb	r5, [r0, #27]
   1d450:	ldr	r8, [sp, #44]	; 0x2c
   1d454:	cmp	r5, #0
   1d458:	ldr	r5, [sp, #40]	; 0x28
   1d45c:	bne	1d5e4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a0>
   1d460:	mov	r6, r3
   1d464:	add	r3, r2, #2
   1d468:	ldr	r2, [r1, #8]
   1d46c:	lsl	r3, r3, #1
   1d470:	cmp	r2, r3
   1d474:	mov	lr, r1
   1d478:	bgt	1d484 <flatcc_json_printer_utype_enum_vector_field@@Base+0x40>
   1d47c:	add	sp, sp, #4
   1d480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d484:	ldr	r2, [r1, #4]
   1d488:	ldrh	r2, [r2, r3]
   1d48c:	cmp	r2, #0
   1d490:	beq	1d47c <flatcc_json_printer_utype_enum_vector_field@@Base+0x38>
   1d494:	mov	r4, r0
   1d498:	ldr	r0, [r1]
   1d49c:	adds	ip, r0, r2
   1d4a0:	beq	1d47c <flatcc_json_printer_utype_enum_vector_field@@Base+0x38>
   1d4a4:	ldr	r3, [r1, #16]
   1d4a8:	cmp	r3, #0
   1d4ac:	add	r3, r3, #1
   1d4b0:	str	r3, [r1, #16]
   1d4b4:	ldrne	r3, [r4, #20]
   1d4b8:	movne	r1, #44	; 0x2c
   1d4bc:	addne	lr, r3, #1
   1d4c0:	strne	lr, [r4, #20]
   1d4c4:	strbne	r1, [r3]
   1d4c8:	ldr	r3, [r0, r2]
   1d4cc:	mov	r1, r6
   1d4d0:	mov	r2, r5
   1d4d4:	mov	r0, r4
   1d4d8:	ldr	r6, [ip, r3]
   1d4dc:	add	r7, ip, r3
   1d4e0:	bl	15fdc <test_print@@Base+0x2620>
   1d4e4:	ldr	r3, [r4, #32]
   1d4e8:	ldr	r2, [r4, #20]
   1d4ec:	add	r3, r3, #1
   1d4f0:	add	r0, r2, #1
   1d4f4:	mov	r1, #91	; 0x5b
   1d4f8:	cmp	r6, #0
   1d4fc:	str	r3, [r4, #32]
   1d500:	str	r0, [r4, #20]
   1d504:	strb	r1, [r2]
   1d508:	beq	1d614 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d0>
   1d50c:	ldrb	r1, [r4, #25]
   1d510:	cmp	r1, #0
   1d514:	bne	1d690 <flatcc_json_printer_utype_enum_vector_field@@Base+0x24c>
   1d518:	ldr	r2, [r4, #20]
   1d51c:	ldr	r3, [r4, #16]
   1d520:	cmp	r2, r3
   1d524:	bcs	1d6c0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x27c>
   1d528:	ldrb	r1, [r7, #4]
   1d52c:	mov	r0, r4
   1d530:	blx	r8
   1d534:	cmp	r6, #1
   1d538:	add	r5, r7, #5
   1d53c:	beq	1d614 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d0>
   1d540:	add	r6, r6, #4
   1d544:	mov	r9, #44	; 0x2c
   1d548:	mov	fp, #10
   1d54c:	b	1d578 <flatcc_json_printer_utype_enum_vector_field@@Base+0x134>
   1d550:	ldr	r2, [r4, #20]
   1d554:	ldr	r3, [r4, #16]
   1d558:	cmp	r2, r3
   1d55c:	bcs	1d5f0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ac>
   1d560:	ldrb	r1, [r5], #1
   1d564:	mov	r0, r4
   1d568:	blx	r8
   1d56c:	sub	r3, r6, r5
   1d570:	cmn	r7, r3
   1d574:	beq	1d614 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d0>
   1d578:	ldr	r3, [r4, #20]
   1d57c:	add	r2, r3, #1
   1d580:	str	r2, [r4, #20]
   1d584:	strb	r9, [r3]
   1d588:	ldrb	r3, [r4, #25]
   1d58c:	cmp	r3, #0
   1d590:	beq	1d550 <flatcc_json_printer_utype_enum_vector_field@@Base+0x10c>
   1d594:	ldr	r3, [r4, #20]
   1d598:	mov	r1, #32
   1d59c:	add	r2, r3, #1
   1d5a0:	str	r2, [r4, #20]
   1d5a4:	strb	fp, [r3]
   1d5a8:	ldrb	r2, [r4, #25]
   1d5ac:	ldr	sl, [r4, #32]
   1d5b0:	ldr	r3, [r4, #20]
   1d5b4:	ldr	ip, [r4, #16]
   1d5b8:	mul	sl, sl, r2
   1d5bc:	mov	r0, r3
   1d5c0:	add	r3, r3, sl
   1d5c4:	cmp	ip, r3
   1d5c8:	mov	r2, sl
   1d5cc:	bcc	1d604 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1c0>
   1d5d0:	bl	124e0 <memset@plt>
   1d5d4:	ldr	r3, [r4, #20]
   1d5d8:	add	sl, r3, sl
   1d5dc:	str	sl, [r4, #20]
   1d5e0:	b	1d560 <flatcc_json_printer_utype_enum_vector_field@@Base+0x11c>
   1d5e4:	add	sp, sp, #4
   1d5e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d5ec:	b	1b6d8 <flatcc_json_printer_utype_vector_field@@Base>
   1d5f0:	ldr	r3, [r4, #44]	; 0x2c
   1d5f4:	mov	r1, #0
   1d5f8:	mov	r0, r4
   1d5fc:	blx	r3
   1d600:	b	1d560 <flatcc_json_printer_utype_enum_vector_field@@Base+0x11c>
   1d604:	mov	r1, sl
   1d608:	mov	r0, r4
   1d60c:	bl	14bc8 <test_print@@Base+0x120c>
   1d610:	b	1d560 <flatcc_json_printer_utype_enum_vector_field@@Base+0x11c>
   1d614:	ldrb	r3, [r4, #25]
   1d618:	cmp	r3, #0
   1d61c:	bne	1d63c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1f8>
   1d620:	ldr	r3, [r4, #20]
   1d624:	add	r1, r3, #1
   1d628:	mov	r2, #93	; 0x5d
   1d62c:	str	r1, [r4, #20]
   1d630:	strb	r2, [r3]
   1d634:	add	sp, sp, #4
   1d638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d63c:	ldr	r3, [r4, #20]
   1d640:	mov	r2, #10
   1d644:	add	r1, r3, #1
   1d648:	str	r1, [r4, #20]
   1d64c:	strb	r2, [r3]
   1d650:	ldr	r2, [r4, #32]
   1d654:	ldrb	r3, [r4, #25]
   1d658:	sub	r2, r2, #1
   1d65c:	ldr	r0, [r4, #20]
   1d660:	ldr	r1, [r4, #16]
   1d664:	mul	r5, r2, r3
   1d668:	str	r2, [r4, #32]
   1d66c:	add	r3, r0, r5
   1d670:	cmp	r1, r3
   1d674:	bcc	1d6b0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x26c>
   1d678:	mov	r2, r5
   1d67c:	mov	r1, #32
   1d680:	bl	124e0 <memset@plt>
   1d684:	ldr	r3, [r4, #20]
   1d688:	add	r3, r3, r5
   1d68c:	b	1d624 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1e0>
   1d690:	ldr	r3, [r4, #20]
   1d694:	mov	r2, #10
   1d698:	add	r1, r3, #1
   1d69c:	str	r1, [r4, #20]
   1d6a0:	mov	r0, r4
   1d6a4:	strb	r2, [r3]
   1d6a8:	bl	14c74 <test_print@@Base+0x12b8>
   1d6ac:	b	1d528 <flatcc_json_printer_utype_enum_vector_field@@Base+0xe4>
   1d6b0:	mov	r1, r5
   1d6b4:	mov	r0, r4
   1d6b8:	bl	14bc8 <test_print@@Base+0x120c>
   1d6bc:	b	1d620 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1dc>
   1d6c0:	ldr	r3, [r4, #44]	; 0x2c
   1d6c4:	mov	r0, r4
   1d6c8:	blx	r3
   1d6cc:	b	1d528 <flatcc_json_printer_utype_enum_vector_field@@Base+0xe4>

0001d6d0 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1d6d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d6d4:	sub	sp, sp, #4
   1d6d8:	ldrb	r5, [r0, #27]
   1d6dc:	ldr	r8, [sp, #44]	; 0x2c
   1d6e0:	cmp	r5, #0
   1d6e4:	ldr	r5, [sp, #40]	; 0x28
   1d6e8:	bne	1d870 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a0>
   1d6ec:	mov	r6, r3
   1d6f0:	add	r3, r2, #2
   1d6f4:	ldr	r2, [r1, #8]
   1d6f8:	lsl	r3, r3, #1
   1d6fc:	cmp	r2, r3
   1d700:	mov	lr, r1
   1d704:	bgt	1d710 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x40>
   1d708:	add	sp, sp, #4
   1d70c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d710:	ldr	r2, [r1, #4]
   1d714:	ldrh	r2, [r2, r3]
   1d718:	cmp	r2, #0
   1d71c:	beq	1d708 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38>
   1d720:	mov	r4, r0
   1d724:	ldr	r0, [r1]
   1d728:	adds	ip, r0, r2
   1d72c:	beq	1d708 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38>
   1d730:	ldr	r3, [r1, #16]
   1d734:	cmp	r3, #0
   1d738:	add	r3, r3, #1
   1d73c:	str	r3, [r1, #16]
   1d740:	ldrne	r3, [r4, #20]
   1d744:	movne	r1, #44	; 0x2c
   1d748:	addne	lr, r3, #1
   1d74c:	strne	lr, [r4, #20]
   1d750:	strbne	r1, [r3]
   1d754:	ldr	r3, [r0, r2]
   1d758:	mov	r1, r6
   1d75c:	mov	r2, r5
   1d760:	mov	r0, r4
   1d764:	ldr	r6, [ip, r3]
   1d768:	add	r7, ip, r3
   1d76c:	bl	15fdc <test_print@@Base+0x2620>
   1d770:	ldr	r3, [r4, #32]
   1d774:	ldr	r2, [r4, #20]
   1d778:	add	r3, r3, #1
   1d77c:	add	r0, r2, #1
   1d780:	mov	r1, #91	; 0x5b
   1d784:	cmp	r6, #0
   1d788:	str	r3, [r4, #32]
   1d78c:	str	r0, [r4, #20]
   1d790:	strb	r1, [r2]
   1d794:	beq	1d8a0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d0>
   1d798:	ldrb	r1, [r4, #25]
   1d79c:	cmp	r1, #0
   1d7a0:	bne	1d91c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x24c>
   1d7a4:	ldr	r2, [r4, #20]
   1d7a8:	ldr	r3, [r4, #16]
   1d7ac:	cmp	r2, r3
   1d7b0:	bcs	1d94c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x27c>
   1d7b4:	ldrb	r1, [r7, #4]
   1d7b8:	mov	r0, r4
   1d7bc:	blx	r8
   1d7c0:	cmp	r6, #1
   1d7c4:	add	r5, r7, #5
   1d7c8:	beq	1d8a0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d0>
   1d7cc:	add	r6, r6, #4
   1d7d0:	mov	r9, #44	; 0x2c
   1d7d4:	mov	fp, #10
   1d7d8:	b	1d804 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x134>
   1d7dc:	ldr	r2, [r4, #20]
   1d7e0:	ldr	r3, [r4, #16]
   1d7e4:	cmp	r2, r3
   1d7e8:	bcs	1d87c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ac>
   1d7ec:	ldrb	r1, [r5], #1
   1d7f0:	mov	r0, r4
   1d7f4:	blx	r8
   1d7f8:	sub	r3, r6, r5
   1d7fc:	cmn	r7, r3
   1d800:	beq	1d8a0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d0>
   1d804:	ldr	r3, [r4, #20]
   1d808:	add	r2, r3, #1
   1d80c:	str	r2, [r4, #20]
   1d810:	strb	r9, [r3]
   1d814:	ldrb	r3, [r4, #25]
   1d818:	cmp	r3, #0
   1d81c:	beq	1d7dc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x10c>
   1d820:	ldr	r3, [r4, #20]
   1d824:	mov	r1, #32
   1d828:	add	r2, r3, #1
   1d82c:	str	r2, [r4, #20]
   1d830:	strb	fp, [r3]
   1d834:	ldrb	r2, [r4, #25]
   1d838:	ldr	sl, [r4, #32]
   1d83c:	ldr	r3, [r4, #20]
   1d840:	ldr	ip, [r4, #16]
   1d844:	mul	sl, sl, r2
   1d848:	mov	r0, r3
   1d84c:	add	r3, r3, sl
   1d850:	cmp	ip, r3
   1d854:	mov	r2, sl
   1d858:	bcc	1d890 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1c0>
   1d85c:	bl	124e0 <memset@plt>
   1d860:	ldr	r3, [r4, #20]
   1d864:	add	sl, r3, sl
   1d868:	str	sl, [r4, #20]
   1d86c:	b	1d7ec <flatcc_json_printer_uint8_enum_vector_field@@Base+0x11c>
   1d870:	add	sp, sp, #4
   1d874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d878:	b	1b33c <flatcc_json_printer_uint8_vector_field@@Base>
   1d87c:	ldr	r3, [r4, #44]	; 0x2c
   1d880:	mov	r1, #0
   1d884:	mov	r0, r4
   1d888:	blx	r3
   1d88c:	b	1d7ec <flatcc_json_printer_uint8_enum_vector_field@@Base+0x11c>
   1d890:	mov	r1, sl
   1d894:	mov	r0, r4
   1d898:	bl	14bc8 <test_print@@Base+0x120c>
   1d89c:	b	1d7ec <flatcc_json_printer_uint8_enum_vector_field@@Base+0x11c>
   1d8a0:	ldrb	r3, [r4, #25]
   1d8a4:	cmp	r3, #0
   1d8a8:	bne	1d8c8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1f8>
   1d8ac:	ldr	r3, [r4, #20]
   1d8b0:	add	r1, r3, #1
   1d8b4:	mov	r2, #93	; 0x5d
   1d8b8:	str	r1, [r4, #20]
   1d8bc:	strb	r2, [r3]
   1d8c0:	add	sp, sp, #4
   1d8c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d8c8:	ldr	r3, [r4, #20]
   1d8cc:	mov	r2, #10
   1d8d0:	add	r1, r3, #1
   1d8d4:	str	r1, [r4, #20]
   1d8d8:	strb	r2, [r3]
   1d8dc:	ldr	r2, [r4, #32]
   1d8e0:	ldrb	r3, [r4, #25]
   1d8e4:	sub	r2, r2, #1
   1d8e8:	ldr	r0, [r4, #20]
   1d8ec:	ldr	r1, [r4, #16]
   1d8f0:	mul	r5, r2, r3
   1d8f4:	str	r2, [r4, #32]
   1d8f8:	add	r3, r0, r5
   1d8fc:	cmp	r1, r3
   1d900:	bcc	1d93c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x26c>
   1d904:	mov	r2, r5
   1d908:	mov	r1, #32
   1d90c:	bl	124e0 <memset@plt>
   1d910:	ldr	r3, [r4, #20]
   1d914:	add	r3, r3, r5
   1d918:	b	1d8b0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1e0>
   1d91c:	ldr	r3, [r4, #20]
   1d920:	mov	r2, #10
   1d924:	add	r1, r3, #1
   1d928:	str	r1, [r4, #20]
   1d92c:	mov	r0, r4
   1d930:	strb	r2, [r3]
   1d934:	bl	14c74 <test_print@@Base+0x12b8>
   1d938:	b	1d7b4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xe4>
   1d93c:	mov	r1, r5
   1d940:	mov	r0, r4
   1d944:	bl	14bc8 <test_print@@Base+0x120c>
   1d948:	b	1d8ac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1dc>
   1d94c:	ldr	r3, [r4, #44]	; 0x2c
   1d950:	mov	r0, r4
   1d954:	blx	r3
   1d958:	b	1d7b4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xe4>

0001d95c <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1d95c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d960:	sub	sp, sp, #4
   1d964:	ldrb	r5, [r0, #27]
   1d968:	ldr	r7, [sp, #44]	; 0x2c
   1d96c:	cmp	r5, #0
   1d970:	ldr	r5, [sp, #40]	; 0x28
   1d974:	bne	1db00 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a4>
   1d978:	mov	r6, r3
   1d97c:	add	r3, r2, #2
   1d980:	ldr	r2, [r1, #8]
   1d984:	lsl	r3, r3, #1
   1d988:	cmp	r2, r3
   1d98c:	mov	lr, r1
   1d990:	bgt	1d99c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x40>
   1d994:	add	sp, sp, #4
   1d998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d99c:	ldr	r2, [r1, #4]
   1d9a0:	ldrh	r2, [r2, r3]
   1d9a4:	cmp	r2, #0
   1d9a8:	beq	1d994 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38>
   1d9ac:	mov	r4, r0
   1d9b0:	ldr	r0, [r1]
   1d9b4:	adds	ip, r0, r2
   1d9b8:	beq	1d994 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38>
   1d9bc:	ldr	r3, [r1, #16]
   1d9c0:	cmp	r3, #0
   1d9c4:	add	r3, r3, #1
   1d9c8:	str	r3, [r1, #16]
   1d9cc:	ldrne	r3, [r4, #20]
   1d9d0:	movne	r1, #44	; 0x2c
   1d9d4:	addne	lr, r3, #1
   1d9d8:	strne	lr, [r4, #20]
   1d9dc:	strbne	r1, [r3]
   1d9e0:	ldr	r3, [r0, r2]
   1d9e4:	mov	r1, r6
   1d9e8:	mov	r2, r5
   1d9ec:	mov	r0, r4
   1d9f0:	ldr	r5, [ip, r3]
   1d9f4:	add	r6, ip, r3
   1d9f8:	bl	15fdc <test_print@@Base+0x2620>
   1d9fc:	ldr	r3, [r4, #32]
   1da00:	ldr	r2, [r4, #20]
   1da04:	add	r3, r3, #1
   1da08:	add	r0, r2, #1
   1da0c:	mov	r1, #91	; 0x5b
   1da10:	cmp	r5, #0
   1da14:	str	r3, [r4, #32]
   1da18:	str	r0, [r4, #20]
   1da1c:	strb	r1, [r2]
   1da20:	beq	1db30 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   1da24:	ldrb	r1, [r4, #25]
   1da28:	cmp	r1, #0
   1da2c:	bne	1dbac <flatcc_json_printer_uint16_enum_vector_field@@Base+0x250>
   1da30:	ldr	r2, [r4, #20]
   1da34:	ldr	r3, [r4, #16]
   1da38:	cmp	r2, r3
   1da3c:	bcs	1dbdc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x280>
   1da40:	ldrh	r1, [r6, #4]
   1da44:	mov	r0, r4
   1da48:	blx	r7
   1da4c:	cmp	r5, #1
   1da50:	add	r6, r6, #6
   1da54:	sub	r5, r5, #2
   1da58:	beq	1db30 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   1da5c:	mov	r8, #44	; 0x2c
   1da60:	mov	sl, #10
   1da64:	mov	r9, #32
   1da68:	b	1da94 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   1da6c:	ldr	r2, [r4, #20]
   1da70:	ldr	r3, [r4, #16]
   1da74:	cmp	r2, r3
   1da78:	bcs	1db0c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   1da7c:	ldrh	r1, [r6], #2
   1da80:	mov	r0, r4
   1da84:	blx	r7
   1da88:	cmp	r5, #0
   1da8c:	sub	r5, r5, #1
   1da90:	beq	1db30 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   1da94:	ldr	r3, [r4, #20]
   1da98:	add	r2, r3, #1
   1da9c:	str	r2, [r4, #20]
   1daa0:	strb	r8, [r3]
   1daa4:	ldrb	r3, [r4, #25]
   1daa8:	cmp	r3, #0
   1daac:	beq	1da6c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x110>
   1dab0:	ldr	r3, [r4, #20]
   1dab4:	mov	r1, r9
   1dab8:	add	r2, r3, #1
   1dabc:	str	r2, [r4, #20]
   1dac0:	strb	sl, [r3]
   1dac4:	ldrb	r3, [r4, #25]
   1dac8:	ldr	r2, [r4, #32]
   1dacc:	ldr	ip, [r4, #20]
   1dad0:	ldr	lr, [r4, #16]
   1dad4:	mul	fp, r2, r3
   1dad8:	mov	r0, ip
   1dadc:	add	ip, ip, fp
   1dae0:	cmp	lr, ip
   1dae4:	mov	r2, fp
   1dae8:	bcc	1db20 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c4>
   1daec:	bl	124e0 <memset@plt>
   1daf0:	ldr	r2, [r4, #20]
   1daf4:	add	r3, r2, fp
   1daf8:	str	r3, [r4, #20]
   1dafc:	b	1da7c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x120>
   1db00:	add	sp, sp, #4
   1db04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db08:	b	1b6dc <flatcc_json_printer_uint16_vector_field@@Base>
   1db0c:	ldr	r3, [r4, #44]	; 0x2c
   1db10:	mov	r1, #0
   1db14:	mov	r0, r4
   1db18:	blx	r3
   1db1c:	b	1da7c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x120>
   1db20:	mov	r1, fp
   1db24:	mov	r0, r4
   1db28:	bl	14bc8 <test_print@@Base+0x120c>
   1db2c:	b	1da7c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x120>
   1db30:	ldrb	r3, [r4, #25]
   1db34:	cmp	r3, #0
   1db38:	bne	1db58 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1fc>
   1db3c:	ldr	r3, [r4, #20]
   1db40:	add	r1, r3, #1
   1db44:	mov	r2, #93	; 0x5d
   1db48:	str	r1, [r4, #20]
   1db4c:	strb	r2, [r3]
   1db50:	add	sp, sp, #4
   1db54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db58:	ldr	r3, [r4, #20]
   1db5c:	mov	r2, #10
   1db60:	add	r1, r3, #1
   1db64:	str	r1, [r4, #20]
   1db68:	strb	r2, [r3]
   1db6c:	ldr	r2, [r4, #32]
   1db70:	ldrb	r3, [r4, #25]
   1db74:	sub	r2, r2, #1
   1db78:	ldr	r0, [r4, #20]
   1db7c:	ldr	r1, [r4, #16]
   1db80:	mul	r5, r2, r3
   1db84:	str	r2, [r4, #32]
   1db88:	add	r3, r0, r5
   1db8c:	cmp	r1, r3
   1db90:	bcc	1dbcc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x270>
   1db94:	mov	r2, r5
   1db98:	mov	r1, #32
   1db9c:	bl	124e0 <memset@plt>
   1dba0:	ldr	r3, [r4, #20]
   1dba4:	add	r3, r3, r5
   1dba8:	b	1db40 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1e4>
   1dbac:	ldr	r3, [r4, #20]
   1dbb0:	mov	r2, #10
   1dbb4:	add	r1, r3, #1
   1dbb8:	str	r1, [r4, #20]
   1dbbc:	mov	r0, r4
   1dbc0:	strb	r2, [r3]
   1dbc4:	bl	14c74 <test_print@@Base+0x12b8>
   1dbc8:	b	1da40 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xe4>
   1dbcc:	mov	r1, r5
   1dbd0:	mov	r0, r4
   1dbd4:	bl	14bc8 <test_print@@Base+0x120c>
   1dbd8:	b	1db3c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1e0>
   1dbdc:	ldr	r3, [r4, #44]	; 0x2c
   1dbe0:	mov	r0, r4
   1dbe4:	blx	r3
   1dbe8:	b	1da40 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xe4>

0001dbec <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1dbec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dbf0:	sub	sp, sp, #4
   1dbf4:	ldrb	r5, [r0, #27]
   1dbf8:	ldr	r7, [sp, #44]	; 0x2c
   1dbfc:	cmp	r5, #0
   1dc00:	ldr	r5, [sp, #40]	; 0x28
   1dc04:	bne	1dd90 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a4>
   1dc08:	mov	r6, r3
   1dc0c:	add	r3, r2, #2
   1dc10:	ldr	r2, [r1, #8]
   1dc14:	lsl	r3, r3, #1
   1dc18:	cmp	r2, r3
   1dc1c:	mov	lr, r1
   1dc20:	bgt	1dc2c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x40>
   1dc24:	add	sp, sp, #4
   1dc28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc2c:	ldr	r2, [r1, #4]
   1dc30:	ldrh	r2, [r2, r3]
   1dc34:	cmp	r2, #0
   1dc38:	beq	1dc24 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38>
   1dc3c:	mov	r4, r0
   1dc40:	ldr	r0, [r1]
   1dc44:	adds	ip, r0, r2
   1dc48:	beq	1dc24 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38>
   1dc4c:	ldr	r3, [r1, #16]
   1dc50:	cmp	r3, #0
   1dc54:	add	r3, r3, #1
   1dc58:	str	r3, [r1, #16]
   1dc5c:	ldrne	r3, [r4, #20]
   1dc60:	movne	r1, #44	; 0x2c
   1dc64:	addne	lr, r3, #1
   1dc68:	strne	lr, [r4, #20]
   1dc6c:	strbne	r1, [r3]
   1dc70:	ldr	r3, [r0, r2]
   1dc74:	mov	r1, r6
   1dc78:	mov	r2, r5
   1dc7c:	mov	r0, r4
   1dc80:	ldr	r5, [ip, r3]
   1dc84:	add	r6, ip, r3
   1dc88:	bl	15fdc <test_print@@Base+0x2620>
   1dc8c:	ldr	r3, [r4, #32]
   1dc90:	ldr	r2, [r4, #20]
   1dc94:	add	r3, r3, #1
   1dc98:	add	r0, r2, #1
   1dc9c:	mov	r1, #91	; 0x5b
   1dca0:	cmp	r5, #0
   1dca4:	str	r3, [r4, #32]
   1dca8:	str	r0, [r4, #20]
   1dcac:	strb	r1, [r2]
   1dcb0:	beq	1ddc0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   1dcb4:	ldrb	r1, [r4, #25]
   1dcb8:	cmp	r1, #0
   1dcbc:	bne	1de3c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x250>
   1dcc0:	ldr	r2, [r4, #20]
   1dcc4:	ldr	r3, [r4, #16]
   1dcc8:	cmp	r2, r3
   1dccc:	bcs	1de6c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x280>
   1dcd0:	ldr	r1, [r6, #4]
   1dcd4:	mov	r0, r4
   1dcd8:	blx	r7
   1dcdc:	cmp	r5, #1
   1dce0:	add	r6, r6, #8
   1dce4:	sub	r5, r5, #2
   1dce8:	beq	1ddc0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   1dcec:	mov	r8, #44	; 0x2c
   1dcf0:	mov	sl, #10
   1dcf4:	mov	r9, #32
   1dcf8:	b	1dd24 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   1dcfc:	ldr	r2, [r4, #20]
   1dd00:	ldr	r3, [r4, #16]
   1dd04:	cmp	r2, r3
   1dd08:	bcs	1dd9c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   1dd0c:	ldr	r1, [r6], #4
   1dd10:	mov	r0, r4
   1dd14:	blx	r7
   1dd18:	cmp	r5, #0
   1dd1c:	sub	r5, r5, #1
   1dd20:	beq	1ddc0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   1dd24:	ldr	r3, [r4, #20]
   1dd28:	add	r2, r3, #1
   1dd2c:	str	r2, [r4, #20]
   1dd30:	strb	r8, [r3]
   1dd34:	ldrb	r3, [r4, #25]
   1dd38:	cmp	r3, #0
   1dd3c:	beq	1dcfc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x110>
   1dd40:	ldr	r3, [r4, #20]
   1dd44:	mov	r1, r9
   1dd48:	add	r2, r3, #1
   1dd4c:	str	r2, [r4, #20]
   1dd50:	strb	sl, [r3]
   1dd54:	ldrb	r3, [r4, #25]
   1dd58:	ldr	r2, [r4, #32]
   1dd5c:	ldr	ip, [r4, #20]
   1dd60:	ldr	lr, [r4, #16]
   1dd64:	mul	fp, r2, r3
   1dd68:	mov	r0, ip
   1dd6c:	add	ip, ip, fp
   1dd70:	cmp	lr, ip
   1dd74:	mov	r2, fp
   1dd78:	bcc	1ddb0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c4>
   1dd7c:	bl	124e0 <memset@plt>
   1dd80:	ldr	r2, [r4, #20]
   1dd84:	add	r3, r2, fp
   1dd88:	str	r3, [r4, #20]
   1dd8c:	b	1dd0c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x120>
   1dd90:	add	sp, sp, #4
   1dd94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd98:	b	1ba7c <flatcc_json_printer_uint32_vector_field@@Base>
   1dd9c:	ldr	r3, [r4, #44]	; 0x2c
   1dda0:	mov	r1, #0
   1dda4:	mov	r0, r4
   1dda8:	blx	r3
   1ddac:	b	1dd0c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x120>
   1ddb0:	mov	r1, fp
   1ddb4:	mov	r0, r4
   1ddb8:	bl	14bc8 <test_print@@Base+0x120c>
   1ddbc:	b	1dd0c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x120>
   1ddc0:	ldrb	r3, [r4, #25]
   1ddc4:	cmp	r3, #0
   1ddc8:	bne	1dde8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1fc>
   1ddcc:	ldr	r3, [r4, #20]
   1ddd0:	add	r1, r3, #1
   1ddd4:	mov	r2, #93	; 0x5d
   1ddd8:	str	r1, [r4, #20]
   1dddc:	strb	r2, [r3]
   1dde0:	add	sp, sp, #4
   1dde4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dde8:	ldr	r3, [r4, #20]
   1ddec:	mov	r2, #10
   1ddf0:	add	r1, r3, #1
   1ddf4:	str	r1, [r4, #20]
   1ddf8:	strb	r2, [r3]
   1ddfc:	ldr	r2, [r4, #32]
   1de00:	ldrb	r3, [r4, #25]
   1de04:	sub	r2, r2, #1
   1de08:	ldr	r0, [r4, #20]
   1de0c:	ldr	r1, [r4, #16]
   1de10:	mul	r5, r2, r3
   1de14:	str	r2, [r4, #32]
   1de18:	add	r3, r0, r5
   1de1c:	cmp	r1, r3
   1de20:	bcc	1de5c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x270>
   1de24:	mov	r2, r5
   1de28:	mov	r1, #32
   1de2c:	bl	124e0 <memset@plt>
   1de30:	ldr	r3, [r4, #20]
   1de34:	add	r3, r3, r5
   1de38:	b	1ddd0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1e4>
   1de3c:	ldr	r3, [r4, #20]
   1de40:	mov	r2, #10
   1de44:	add	r1, r3, #1
   1de48:	str	r1, [r4, #20]
   1de4c:	mov	r0, r4
   1de50:	strb	r2, [r3]
   1de54:	bl	14c74 <test_print@@Base+0x12b8>
   1de58:	b	1dcd0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xe4>
   1de5c:	mov	r1, r5
   1de60:	mov	r0, r4
   1de64:	bl	14bc8 <test_print@@Base+0x120c>
   1de68:	b	1ddcc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1e0>
   1de6c:	ldr	r3, [r4, #44]	; 0x2c
   1de70:	mov	r0, r4
   1de74:	blx	r3
   1de78:	b	1dcd0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xe4>

0001de7c <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1de7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de80:	sub	sp, sp, #4
   1de84:	ldrb	r5, [r0, #27]
   1de88:	ldr	r7, [sp, #44]	; 0x2c
   1de8c:	cmp	r5, #0
   1de90:	ldr	r5, [sp, #40]	; 0x28
   1de94:	bne	1e020 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a4>
   1de98:	mov	r6, r3
   1de9c:	add	r3, r2, #2
   1dea0:	ldr	r2, [r1, #8]
   1dea4:	lsl	r3, r3, #1
   1dea8:	cmp	r2, r3
   1deac:	mov	lr, r1
   1deb0:	bgt	1debc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x40>
   1deb4:	add	sp, sp, #4
   1deb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1debc:	ldr	r2, [r1, #4]
   1dec0:	ldrh	r2, [r2, r3]
   1dec4:	cmp	r2, #0
   1dec8:	beq	1deb4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x38>
   1decc:	mov	r4, r0
   1ded0:	ldr	r0, [r1]
   1ded4:	adds	ip, r0, r2
   1ded8:	beq	1deb4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x38>
   1dedc:	ldr	r3, [r1, #16]
   1dee0:	cmp	r3, #0
   1dee4:	add	r3, r3, #1
   1dee8:	str	r3, [r1, #16]
   1deec:	ldrne	r3, [r4, #20]
   1def0:	movne	r1, #44	; 0x2c
   1def4:	addne	lr, r3, #1
   1def8:	strne	lr, [r4, #20]
   1defc:	strbne	r1, [r3]
   1df00:	ldr	r3, [r0, r2]
   1df04:	mov	r1, r6
   1df08:	mov	r2, r5
   1df0c:	mov	r0, r4
   1df10:	ldr	r5, [ip, r3]
   1df14:	add	r6, ip, r3
   1df18:	bl	15fdc <test_print@@Base+0x2620>
   1df1c:	ldr	r3, [r4, #32]
   1df20:	ldr	r2, [r4, #20]
   1df24:	add	r3, r3, #1
   1df28:	add	r0, r2, #1
   1df2c:	mov	r1, #91	; 0x5b
   1df30:	cmp	r5, #0
   1df34:	str	r3, [r4, #32]
   1df38:	str	r0, [r4, #20]
   1df3c:	strb	r1, [r2]
   1df40:	beq	1e050 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   1df44:	ldrb	r1, [r4, #25]
   1df48:	cmp	r1, #0
   1df4c:	bne	1e0cc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x250>
   1df50:	ldr	r2, [r4, #20]
   1df54:	ldr	r3, [r4, #16]
   1df58:	cmp	r2, r3
   1df5c:	bcs	1e0fc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x280>
   1df60:	ldrd	r2, [r6, #4]
   1df64:	mov	r0, r4
   1df68:	blx	r7
   1df6c:	cmp	r5, #1
   1df70:	add	r6, r6, #12
   1df74:	sub	r5, r5, #2
   1df78:	beq	1e050 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   1df7c:	mov	r8, #44	; 0x2c
   1df80:	mov	sl, #10
   1df84:	mov	r9, #32
   1df88:	b	1dfb4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   1df8c:	ldr	r2, [r4, #20]
   1df90:	ldr	r3, [r4, #16]
   1df94:	cmp	r2, r3
   1df98:	bcs	1e02c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   1df9c:	ldrd	r2, [r6], #8
   1dfa0:	mov	r0, r4
   1dfa4:	blx	r7
   1dfa8:	cmp	r5, #0
   1dfac:	sub	r5, r5, #1
   1dfb0:	beq	1e050 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   1dfb4:	ldr	r3, [r4, #20]
   1dfb8:	add	r2, r3, #1
   1dfbc:	str	r2, [r4, #20]
   1dfc0:	strb	r8, [r3]
   1dfc4:	ldrb	r3, [r4, #25]
   1dfc8:	cmp	r3, #0
   1dfcc:	beq	1df8c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x110>
   1dfd0:	ldr	r3, [r4, #20]
   1dfd4:	mov	r1, r9
   1dfd8:	add	r2, r3, #1
   1dfdc:	str	r2, [r4, #20]
   1dfe0:	strb	sl, [r3]
   1dfe4:	ldrb	r3, [r4, #25]
   1dfe8:	ldr	r2, [r4, #32]
   1dfec:	ldr	ip, [r4, #20]
   1dff0:	ldr	lr, [r4, #16]
   1dff4:	mul	fp, r2, r3
   1dff8:	mov	r0, ip
   1dffc:	add	ip, ip, fp
   1e000:	cmp	lr, ip
   1e004:	mov	r2, fp
   1e008:	bcc	1e040 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c4>
   1e00c:	bl	124e0 <memset@plt>
   1e010:	ldr	r2, [r4, #20]
   1e014:	add	r3, r2, fp
   1e018:	str	r3, [r4, #20]
   1e01c:	b	1df9c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x120>
   1e020:	add	sp, sp, #4
   1e024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e028:	b	1be1c <flatcc_json_printer_uint64_vector_field@@Base>
   1e02c:	ldr	r3, [r4, #44]	; 0x2c
   1e030:	mov	r1, #0
   1e034:	mov	r0, r4
   1e038:	blx	r3
   1e03c:	b	1df9c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x120>
   1e040:	mov	r1, fp
   1e044:	mov	r0, r4
   1e048:	bl	14bc8 <test_print@@Base+0x120c>
   1e04c:	b	1df9c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x120>
   1e050:	ldrb	r3, [r4, #25]
   1e054:	cmp	r3, #0
   1e058:	bne	1e078 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1fc>
   1e05c:	ldr	r3, [r4, #20]
   1e060:	add	r1, r3, #1
   1e064:	mov	r2, #93	; 0x5d
   1e068:	str	r1, [r4, #20]
   1e06c:	strb	r2, [r3]
   1e070:	add	sp, sp, #4
   1e074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e078:	ldr	r3, [r4, #20]
   1e07c:	mov	r2, #10
   1e080:	add	r1, r3, #1
   1e084:	str	r1, [r4, #20]
   1e088:	strb	r2, [r3]
   1e08c:	ldr	r2, [r4, #32]
   1e090:	ldrb	r3, [r4, #25]
   1e094:	sub	r2, r2, #1
   1e098:	ldr	r0, [r4, #20]
   1e09c:	ldr	r1, [r4, #16]
   1e0a0:	mul	r5, r2, r3
   1e0a4:	str	r2, [r4, #32]
   1e0a8:	add	r3, r0, r5
   1e0ac:	cmp	r1, r3
   1e0b0:	bcc	1e0ec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x270>
   1e0b4:	mov	r2, r5
   1e0b8:	mov	r1, #32
   1e0bc:	bl	124e0 <memset@plt>
   1e0c0:	ldr	r3, [r4, #20]
   1e0c4:	add	r3, r3, r5
   1e0c8:	b	1e060 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e4>
   1e0cc:	ldr	r3, [r4, #20]
   1e0d0:	mov	r2, #10
   1e0d4:	add	r1, r3, #1
   1e0d8:	str	r1, [r4, #20]
   1e0dc:	mov	r0, r4
   1e0e0:	strb	r2, [r3]
   1e0e4:	bl	14c74 <test_print@@Base+0x12b8>
   1e0e8:	b	1df60 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xe4>
   1e0ec:	mov	r1, r5
   1e0f0:	mov	r0, r4
   1e0f4:	bl	14bc8 <test_print@@Base+0x120c>
   1e0f8:	b	1e05c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e0>
   1e0fc:	ldr	r3, [r4, #44]	; 0x2c
   1e100:	mov	r0, r4
   1e104:	blx	r3
   1e108:	b	1df60 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xe4>

0001e10c <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1e10c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e110:	sub	sp, sp, #4
   1e114:	ldrb	r5, [r0, #27]
   1e118:	ldr	r8, [sp, #44]	; 0x2c
   1e11c:	cmp	r5, #0
   1e120:	ldr	r5, [sp, #40]	; 0x28
   1e124:	bne	1e2ac <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a0>
   1e128:	mov	r6, r3
   1e12c:	add	r3, r2, #2
   1e130:	ldr	r2, [r1, #8]
   1e134:	lsl	r3, r3, #1
   1e138:	cmp	r2, r3
   1e13c:	mov	lr, r1
   1e140:	bgt	1e14c <flatcc_json_printer_int8_enum_vector_field@@Base+0x40>
   1e144:	add	sp, sp, #4
   1e148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e14c:	ldr	r2, [r1, #4]
   1e150:	ldrh	r2, [r2, r3]
   1e154:	cmp	r2, #0
   1e158:	beq	1e144 <flatcc_json_printer_int8_enum_vector_field@@Base+0x38>
   1e15c:	mov	r4, r0
   1e160:	ldr	r0, [r1]
   1e164:	adds	ip, r0, r2
   1e168:	beq	1e144 <flatcc_json_printer_int8_enum_vector_field@@Base+0x38>
   1e16c:	ldr	r3, [r1, #16]
   1e170:	cmp	r3, #0
   1e174:	add	r3, r3, #1
   1e178:	str	r3, [r1, #16]
   1e17c:	ldrne	r3, [r4, #20]
   1e180:	movne	r1, #44	; 0x2c
   1e184:	addne	lr, r3, #1
   1e188:	strne	lr, [r4, #20]
   1e18c:	strbne	r1, [r3]
   1e190:	ldr	r3, [r0, r2]
   1e194:	mov	r1, r6
   1e198:	mov	r2, r5
   1e19c:	mov	r0, r4
   1e1a0:	ldr	r6, [ip, r3]
   1e1a4:	add	r7, ip, r3
   1e1a8:	bl	15fdc <test_print@@Base+0x2620>
   1e1ac:	ldr	r3, [r4, #32]
   1e1b0:	ldr	r2, [r4, #20]
   1e1b4:	add	r3, r3, #1
   1e1b8:	add	r0, r2, #1
   1e1bc:	mov	r1, #91	; 0x5b
   1e1c0:	cmp	r6, #0
   1e1c4:	str	r3, [r4, #32]
   1e1c8:	str	r0, [r4, #20]
   1e1cc:	strb	r1, [r2]
   1e1d0:	beq	1e2dc <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d0>
   1e1d4:	ldrb	r1, [r4, #25]
   1e1d8:	cmp	r1, #0
   1e1dc:	bne	1e358 <flatcc_json_printer_int8_enum_vector_field@@Base+0x24c>
   1e1e0:	ldr	r2, [r4, #20]
   1e1e4:	ldr	r3, [r4, #16]
   1e1e8:	cmp	r2, r3
   1e1ec:	bcs	1e388 <flatcc_json_printer_int8_enum_vector_field@@Base+0x27c>
   1e1f0:	ldrsb	r1, [r7, #4]
   1e1f4:	mov	r0, r4
   1e1f8:	blx	r8
   1e1fc:	cmp	r6, #1
   1e200:	add	r5, r7, #5
   1e204:	beq	1e2dc <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d0>
   1e208:	add	r6, r6, #4
   1e20c:	mov	r9, #44	; 0x2c
   1e210:	mov	fp, #10
   1e214:	b	1e240 <flatcc_json_printer_int8_enum_vector_field@@Base+0x134>
   1e218:	ldr	r2, [r4, #20]
   1e21c:	ldr	r3, [r4, #16]
   1e220:	cmp	r2, r3
   1e224:	bcs	1e2b8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ac>
   1e228:	ldrsb	r1, [r5], #1
   1e22c:	mov	r0, r4
   1e230:	blx	r8
   1e234:	sub	r3, r6, r5
   1e238:	cmn	r7, r3
   1e23c:	beq	1e2dc <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d0>
   1e240:	ldr	r3, [r4, #20]
   1e244:	add	r2, r3, #1
   1e248:	str	r2, [r4, #20]
   1e24c:	strb	r9, [r3]
   1e250:	ldrb	r3, [r4, #25]
   1e254:	cmp	r3, #0
   1e258:	beq	1e218 <flatcc_json_printer_int8_enum_vector_field@@Base+0x10c>
   1e25c:	ldr	r3, [r4, #20]
   1e260:	mov	r1, #32
   1e264:	add	r2, r3, #1
   1e268:	str	r2, [r4, #20]
   1e26c:	strb	fp, [r3]
   1e270:	ldrb	r2, [r4, #25]
   1e274:	ldr	sl, [r4, #32]
   1e278:	ldr	r3, [r4, #20]
   1e27c:	ldr	ip, [r4, #16]
   1e280:	mul	sl, sl, r2
   1e284:	mov	r0, r3
   1e288:	add	r3, r3, sl
   1e28c:	cmp	ip, r3
   1e290:	mov	r2, sl
   1e294:	bcc	1e2cc <flatcc_json_printer_int8_enum_vector_field@@Base+0x1c0>
   1e298:	bl	124e0 <memset@plt>
   1e29c:	ldr	r3, [r4, #20]
   1e2a0:	add	sl, r3, sl
   1e2a4:	str	sl, [r4, #20]
   1e2a8:	b	1e228 <flatcc_json_printer_int8_enum_vector_field@@Base+0x11c>
   1e2ac:	add	sp, sp, #4
   1e2b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2b4:	b	1c090 <flatcc_json_printer_int8_vector_field@@Base>
   1e2b8:	ldr	r3, [r4, #44]	; 0x2c
   1e2bc:	mov	r1, #0
   1e2c0:	mov	r0, r4
   1e2c4:	blx	r3
   1e2c8:	b	1e228 <flatcc_json_printer_int8_enum_vector_field@@Base+0x11c>
   1e2cc:	mov	r1, sl
   1e2d0:	mov	r0, r4
   1e2d4:	bl	14bc8 <test_print@@Base+0x120c>
   1e2d8:	b	1e228 <flatcc_json_printer_int8_enum_vector_field@@Base+0x11c>
   1e2dc:	ldrb	r3, [r4, #25]
   1e2e0:	cmp	r3, #0
   1e2e4:	bne	1e304 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1f8>
   1e2e8:	ldr	r3, [r4, #20]
   1e2ec:	add	r1, r3, #1
   1e2f0:	mov	r2, #93	; 0x5d
   1e2f4:	str	r1, [r4, #20]
   1e2f8:	strb	r2, [r3]
   1e2fc:	add	sp, sp, #4
   1e300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e304:	ldr	r3, [r4, #20]
   1e308:	mov	r2, #10
   1e30c:	add	r1, r3, #1
   1e310:	str	r1, [r4, #20]
   1e314:	strb	r2, [r3]
   1e318:	ldr	r2, [r4, #32]
   1e31c:	ldrb	r3, [r4, #25]
   1e320:	sub	r2, r2, #1
   1e324:	ldr	r0, [r4, #20]
   1e328:	ldr	r1, [r4, #16]
   1e32c:	mul	r5, r2, r3
   1e330:	str	r2, [r4, #32]
   1e334:	add	r3, r0, r5
   1e338:	cmp	r1, r3
   1e33c:	bcc	1e378 <flatcc_json_printer_int8_enum_vector_field@@Base+0x26c>
   1e340:	mov	r2, r5
   1e344:	mov	r1, #32
   1e348:	bl	124e0 <memset@plt>
   1e34c:	ldr	r3, [r4, #20]
   1e350:	add	r3, r3, r5
   1e354:	b	1e2ec <flatcc_json_printer_int8_enum_vector_field@@Base+0x1e0>
   1e358:	ldr	r3, [r4, #20]
   1e35c:	mov	r2, #10
   1e360:	add	r1, r3, #1
   1e364:	str	r1, [r4, #20]
   1e368:	mov	r0, r4
   1e36c:	strb	r2, [r3]
   1e370:	bl	14c74 <test_print@@Base+0x12b8>
   1e374:	b	1e1f0 <flatcc_json_printer_int8_enum_vector_field@@Base+0xe4>
   1e378:	mov	r1, r5
   1e37c:	mov	r0, r4
   1e380:	bl	14bc8 <test_print@@Base+0x120c>
   1e384:	b	1e2e8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1dc>
   1e388:	ldr	r3, [r4, #44]	; 0x2c
   1e38c:	mov	r0, r4
   1e390:	blx	r3
   1e394:	b	1e1f0 <flatcc_json_printer_int8_enum_vector_field@@Base+0xe4>

0001e398 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   1e398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e39c:	sub	sp, sp, #4
   1e3a0:	ldrb	r5, [r0, #27]
   1e3a4:	ldr	r7, [sp, #44]	; 0x2c
   1e3a8:	cmp	r5, #0
   1e3ac:	ldr	r5, [sp, #40]	; 0x28
   1e3b0:	bne	1e53c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a4>
   1e3b4:	mov	r6, r3
   1e3b8:	add	r3, r2, #2
   1e3bc:	ldr	r2, [r1, #8]
   1e3c0:	lsl	r3, r3, #1
   1e3c4:	cmp	r2, r3
   1e3c8:	mov	lr, r1
   1e3cc:	bgt	1e3d8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x40>
   1e3d0:	add	sp, sp, #4
   1e3d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3d8:	ldr	r2, [r1, #4]
   1e3dc:	ldrh	r2, [r2, r3]
   1e3e0:	cmp	r2, #0
   1e3e4:	beq	1e3d0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38>
   1e3e8:	mov	r4, r0
   1e3ec:	ldr	r0, [r1]
   1e3f0:	adds	ip, r0, r2
   1e3f4:	beq	1e3d0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38>
   1e3f8:	ldr	r3, [r1, #16]
   1e3fc:	cmp	r3, #0
   1e400:	add	r3, r3, #1
   1e404:	str	r3, [r1, #16]
   1e408:	ldrne	r3, [r4, #20]
   1e40c:	movne	r1, #44	; 0x2c
   1e410:	addne	lr, r3, #1
   1e414:	strne	lr, [r4, #20]
   1e418:	strbne	r1, [r3]
   1e41c:	ldr	r3, [r0, r2]
   1e420:	mov	r1, r6
   1e424:	mov	r2, r5
   1e428:	mov	r0, r4
   1e42c:	ldr	r5, [ip, r3]
   1e430:	add	r6, ip, r3
   1e434:	bl	15fdc <test_print@@Base+0x2620>
   1e438:	ldr	r3, [r4, #32]
   1e43c:	ldr	r2, [r4, #20]
   1e440:	add	r3, r3, #1
   1e444:	add	r0, r2, #1
   1e448:	mov	r1, #91	; 0x5b
   1e44c:	cmp	r5, #0
   1e450:	str	r3, [r4, #32]
   1e454:	str	r0, [r4, #20]
   1e458:	strb	r1, [r2]
   1e45c:	beq	1e56c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   1e460:	ldrb	r1, [r4, #25]
   1e464:	cmp	r1, #0
   1e468:	bne	1e5e8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x250>
   1e46c:	ldr	r2, [r4, #20]
   1e470:	ldr	r3, [r4, #16]
   1e474:	cmp	r2, r3
   1e478:	bcs	1e618 <flatcc_json_printer_int16_enum_vector_field@@Base+0x280>
   1e47c:	ldrsh	r1, [r6, #4]
   1e480:	mov	r0, r4
   1e484:	blx	r7
   1e488:	cmp	r5, #1
   1e48c:	add	r6, r6, #6
   1e490:	sub	r5, r5, #2
   1e494:	beq	1e56c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   1e498:	mov	r8, #44	; 0x2c
   1e49c:	mov	sl, #10
   1e4a0:	mov	r9, #32
   1e4a4:	b	1e4d0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   1e4a8:	ldr	r2, [r4, #20]
   1e4ac:	ldr	r3, [r4, #16]
   1e4b0:	cmp	r2, r3
   1e4b4:	bcs	1e548 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   1e4b8:	ldrsh	r1, [r6], #2
   1e4bc:	mov	r0, r4
   1e4c0:	blx	r7
   1e4c4:	cmp	r5, #0
   1e4c8:	sub	r5, r5, #1
   1e4cc:	beq	1e56c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   1e4d0:	ldr	r3, [r4, #20]
   1e4d4:	add	r2, r3, #1
   1e4d8:	str	r2, [r4, #20]
   1e4dc:	strb	r8, [r3]
   1e4e0:	ldrb	r3, [r4, #25]
   1e4e4:	cmp	r3, #0
   1e4e8:	beq	1e4a8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x110>
   1e4ec:	ldr	r3, [r4, #20]
   1e4f0:	mov	r1, r9
   1e4f4:	add	r2, r3, #1
   1e4f8:	str	r2, [r4, #20]
   1e4fc:	strb	sl, [r3]
   1e500:	ldrb	r3, [r4, #25]
   1e504:	ldr	r2, [r4, #32]
   1e508:	ldr	ip, [r4, #20]
   1e50c:	ldr	lr, [r4, #16]
   1e510:	mul	fp, r2, r3
   1e514:	mov	r0, ip
   1e518:	add	ip, ip, fp
   1e51c:	cmp	lr, ip
   1e520:	mov	r2, fp
   1e524:	bcc	1e55c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c4>
   1e528:	bl	124e0 <memset@plt>
   1e52c:	ldr	r2, [r4, #20]
   1e530:	add	r3, r2, fp
   1e534:	str	r3, [r4, #20]
   1e538:	b	1e4b8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x120>
   1e53c:	add	sp, sp, #4
   1e540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e544:	b	1c34c <flatcc_json_printer_int16_vector_field@@Base>
   1e548:	ldr	r3, [r4, #44]	; 0x2c
   1e54c:	mov	r1, #0
   1e550:	mov	r0, r4
   1e554:	blx	r3
   1e558:	b	1e4b8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x120>
   1e55c:	mov	r1, fp
   1e560:	mov	r0, r4
   1e564:	bl	14bc8 <test_print@@Base+0x120c>
   1e568:	b	1e4b8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x120>
   1e56c:	ldrb	r3, [r4, #25]
   1e570:	cmp	r3, #0
   1e574:	bne	1e594 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1fc>
   1e578:	ldr	r3, [r4, #20]
   1e57c:	add	r1, r3, #1
   1e580:	mov	r2, #93	; 0x5d
   1e584:	str	r1, [r4, #20]
   1e588:	strb	r2, [r3]
   1e58c:	add	sp, sp, #4
   1e590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e594:	ldr	r3, [r4, #20]
   1e598:	mov	r2, #10
   1e59c:	add	r1, r3, #1
   1e5a0:	str	r1, [r4, #20]
   1e5a4:	strb	r2, [r3]
   1e5a8:	ldr	r2, [r4, #32]
   1e5ac:	ldrb	r3, [r4, #25]
   1e5b0:	sub	r2, r2, #1
   1e5b4:	ldr	r0, [r4, #20]
   1e5b8:	ldr	r1, [r4, #16]
   1e5bc:	mul	r5, r2, r3
   1e5c0:	str	r2, [r4, #32]
   1e5c4:	add	r3, r0, r5
   1e5c8:	cmp	r1, r3
   1e5cc:	bcc	1e608 <flatcc_json_printer_int16_enum_vector_field@@Base+0x270>
   1e5d0:	mov	r2, r5
   1e5d4:	mov	r1, #32
   1e5d8:	bl	124e0 <memset@plt>
   1e5dc:	ldr	r3, [r4, #20]
   1e5e0:	add	r3, r3, r5
   1e5e4:	b	1e57c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1e4>
   1e5e8:	ldr	r3, [r4, #20]
   1e5ec:	mov	r2, #10
   1e5f0:	add	r1, r3, #1
   1e5f4:	str	r1, [r4, #20]
   1e5f8:	mov	r0, r4
   1e5fc:	strb	r2, [r3]
   1e600:	bl	14c74 <test_print@@Base+0x12b8>
   1e604:	b	1e47c <flatcc_json_printer_int16_enum_vector_field@@Base+0xe4>
   1e608:	mov	r1, r5
   1e60c:	mov	r0, r4
   1e610:	bl	14bc8 <test_print@@Base+0x120c>
   1e614:	b	1e578 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1e0>
   1e618:	ldr	r3, [r4, #44]	; 0x2c
   1e61c:	mov	r0, r4
   1e620:	blx	r3
   1e624:	b	1e47c <flatcc_json_printer_int16_enum_vector_field@@Base+0xe4>

0001e628 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   1e628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e62c:	sub	sp, sp, #4
   1e630:	ldrb	r5, [r0, #27]
   1e634:	ldr	r7, [sp, #44]	; 0x2c
   1e638:	cmp	r5, #0
   1e63c:	ldr	r5, [sp, #40]	; 0x28
   1e640:	bne	1e7cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a4>
   1e644:	mov	r6, r3
   1e648:	add	r3, r2, #2
   1e64c:	ldr	r2, [r1, #8]
   1e650:	lsl	r3, r3, #1
   1e654:	cmp	r2, r3
   1e658:	mov	lr, r1
   1e65c:	bgt	1e668 <flatcc_json_printer_int32_enum_vector_field@@Base+0x40>
   1e660:	add	sp, sp, #4
   1e664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e668:	ldr	r2, [r1, #4]
   1e66c:	ldrh	r2, [r2, r3]
   1e670:	cmp	r2, #0
   1e674:	beq	1e660 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38>
   1e678:	mov	r4, r0
   1e67c:	ldr	r0, [r1]
   1e680:	adds	ip, r0, r2
   1e684:	beq	1e660 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38>
   1e688:	ldr	r3, [r1, #16]
   1e68c:	cmp	r3, #0
   1e690:	add	r3, r3, #1
   1e694:	str	r3, [r1, #16]
   1e698:	ldrne	r3, [r4, #20]
   1e69c:	movne	r1, #44	; 0x2c
   1e6a0:	addne	lr, r3, #1
   1e6a4:	strne	lr, [r4, #20]
   1e6a8:	strbne	r1, [r3]
   1e6ac:	ldr	r3, [r0, r2]
   1e6b0:	mov	r1, r6
   1e6b4:	mov	r2, r5
   1e6b8:	mov	r0, r4
   1e6bc:	ldr	r5, [ip, r3]
   1e6c0:	add	r6, ip, r3
   1e6c4:	bl	15fdc <test_print@@Base+0x2620>
   1e6c8:	ldr	r3, [r4, #32]
   1e6cc:	ldr	r2, [r4, #20]
   1e6d0:	add	r3, r3, #1
   1e6d4:	add	r0, r2, #1
   1e6d8:	mov	r1, #91	; 0x5b
   1e6dc:	cmp	r5, #0
   1e6e0:	str	r3, [r4, #32]
   1e6e4:	str	r0, [r4, #20]
   1e6e8:	strb	r1, [r2]
   1e6ec:	beq	1e7fc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   1e6f0:	ldrb	r1, [r4, #25]
   1e6f4:	cmp	r1, #0
   1e6f8:	bne	1e878 <flatcc_json_printer_int32_enum_vector_field@@Base+0x250>
   1e6fc:	ldr	r2, [r4, #20]
   1e700:	ldr	r3, [r4, #16]
   1e704:	cmp	r2, r3
   1e708:	bcs	1e8a8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x280>
   1e70c:	ldr	r1, [r6, #4]
   1e710:	mov	r0, r4
   1e714:	blx	r7
   1e718:	cmp	r5, #1
   1e71c:	add	r6, r6, #8
   1e720:	sub	r5, r5, #2
   1e724:	beq	1e7fc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   1e728:	mov	r8, #44	; 0x2c
   1e72c:	mov	sl, #10
   1e730:	mov	r9, #32
   1e734:	b	1e760 <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   1e738:	ldr	r2, [r4, #20]
   1e73c:	ldr	r3, [r4, #16]
   1e740:	cmp	r2, r3
   1e744:	bcs	1e7d8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   1e748:	ldr	r1, [r6], #4
   1e74c:	mov	r0, r4
   1e750:	blx	r7
   1e754:	cmp	r5, #0
   1e758:	sub	r5, r5, #1
   1e75c:	beq	1e7fc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   1e760:	ldr	r3, [r4, #20]
   1e764:	add	r2, r3, #1
   1e768:	str	r2, [r4, #20]
   1e76c:	strb	r8, [r3]
   1e770:	ldrb	r3, [r4, #25]
   1e774:	cmp	r3, #0
   1e778:	beq	1e738 <flatcc_json_printer_int32_enum_vector_field@@Base+0x110>
   1e77c:	ldr	r3, [r4, #20]
   1e780:	mov	r1, r9
   1e784:	add	r2, r3, #1
   1e788:	str	r2, [r4, #20]
   1e78c:	strb	sl, [r3]
   1e790:	ldrb	r3, [r4, #25]
   1e794:	ldr	r2, [r4, #32]
   1e798:	ldr	ip, [r4, #20]
   1e79c:	ldr	lr, [r4, #16]
   1e7a0:	mul	fp, r2, r3
   1e7a4:	mov	r0, ip
   1e7a8:	add	ip, ip, fp
   1e7ac:	cmp	lr, ip
   1e7b0:	mov	r2, fp
   1e7b4:	bcc	1e7ec <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c4>
   1e7b8:	bl	124e0 <memset@plt>
   1e7bc:	ldr	r2, [r4, #20]
   1e7c0:	add	r3, r2, fp
   1e7c4:	str	r3, [r4, #20]
   1e7c8:	b	1e748 <flatcc_json_printer_int32_enum_vector_field@@Base+0x120>
   1e7cc:	add	sp, sp, #4
   1e7d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e7d4:	b	1c608 <flatcc_json_printer_int32_vector_field@@Base>
   1e7d8:	ldr	r3, [r4, #44]	; 0x2c
   1e7dc:	mov	r1, #0
   1e7e0:	mov	r0, r4
   1e7e4:	blx	r3
   1e7e8:	b	1e748 <flatcc_json_printer_int32_enum_vector_field@@Base+0x120>
   1e7ec:	mov	r1, fp
   1e7f0:	mov	r0, r4
   1e7f4:	bl	14bc8 <test_print@@Base+0x120c>
   1e7f8:	b	1e748 <flatcc_json_printer_int32_enum_vector_field@@Base+0x120>
   1e7fc:	ldrb	r3, [r4, #25]
   1e800:	cmp	r3, #0
   1e804:	bne	1e824 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1fc>
   1e808:	ldr	r3, [r4, #20]
   1e80c:	add	r1, r3, #1
   1e810:	mov	r2, #93	; 0x5d
   1e814:	str	r1, [r4, #20]
   1e818:	strb	r2, [r3]
   1e81c:	add	sp, sp, #4
   1e820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e824:	ldr	r3, [r4, #20]
   1e828:	mov	r2, #10
   1e82c:	add	r1, r3, #1
   1e830:	str	r1, [r4, #20]
   1e834:	strb	r2, [r3]
   1e838:	ldr	r2, [r4, #32]
   1e83c:	ldrb	r3, [r4, #25]
   1e840:	sub	r2, r2, #1
   1e844:	ldr	r0, [r4, #20]
   1e848:	ldr	r1, [r4, #16]
   1e84c:	mul	r5, r2, r3
   1e850:	str	r2, [r4, #32]
   1e854:	add	r3, r0, r5
   1e858:	cmp	r1, r3
   1e85c:	bcc	1e898 <flatcc_json_printer_int32_enum_vector_field@@Base+0x270>
   1e860:	mov	r2, r5
   1e864:	mov	r1, #32
   1e868:	bl	124e0 <memset@plt>
   1e86c:	ldr	r3, [r4, #20]
   1e870:	add	r3, r3, r5
   1e874:	b	1e80c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1e4>
   1e878:	ldr	r3, [r4, #20]
   1e87c:	mov	r2, #10
   1e880:	add	r1, r3, #1
   1e884:	str	r1, [r4, #20]
   1e888:	mov	r0, r4
   1e88c:	strb	r2, [r3]
   1e890:	bl	14c74 <test_print@@Base+0x12b8>
   1e894:	b	1e70c <flatcc_json_printer_int32_enum_vector_field@@Base+0xe4>
   1e898:	mov	r1, r5
   1e89c:	mov	r0, r4
   1e8a0:	bl	14bc8 <test_print@@Base+0x120c>
   1e8a4:	b	1e808 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1e0>
   1e8a8:	ldr	r3, [r4, #44]	; 0x2c
   1e8ac:	mov	r0, r4
   1e8b0:	blx	r3
   1e8b4:	b	1e70c <flatcc_json_printer_int32_enum_vector_field@@Base+0xe4>

0001e8b8 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   1e8b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e8bc:	sub	sp, sp, #4
   1e8c0:	ldrb	r5, [r0, #27]
   1e8c4:	ldr	r7, [sp, #44]	; 0x2c
   1e8c8:	cmp	r5, #0
   1e8cc:	ldr	r5, [sp, #40]	; 0x28
   1e8d0:	bne	1ea5c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a4>
   1e8d4:	mov	r6, r3
   1e8d8:	add	r3, r2, #2
   1e8dc:	ldr	r2, [r1, #8]
   1e8e0:	lsl	r3, r3, #1
   1e8e4:	cmp	r2, r3
   1e8e8:	mov	lr, r1
   1e8ec:	bgt	1e8f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x40>
   1e8f0:	add	sp, sp, #4
   1e8f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8f8:	ldr	r2, [r1, #4]
   1e8fc:	ldrh	r2, [r2, r3]
   1e900:	cmp	r2, #0
   1e904:	beq	1e8f0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x38>
   1e908:	mov	r4, r0
   1e90c:	ldr	r0, [r1]
   1e910:	adds	ip, r0, r2
   1e914:	beq	1e8f0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x38>
   1e918:	ldr	r3, [r1, #16]
   1e91c:	cmp	r3, #0
   1e920:	add	r3, r3, #1
   1e924:	str	r3, [r1, #16]
   1e928:	ldrne	r3, [r4, #20]
   1e92c:	movne	r1, #44	; 0x2c
   1e930:	addne	lr, r3, #1
   1e934:	strne	lr, [r4, #20]
   1e938:	strbne	r1, [r3]
   1e93c:	ldr	r3, [r0, r2]
   1e940:	mov	r1, r6
   1e944:	mov	r2, r5
   1e948:	mov	r0, r4
   1e94c:	ldr	r5, [ip, r3]
   1e950:	add	r6, ip, r3
   1e954:	bl	15fdc <test_print@@Base+0x2620>
   1e958:	ldr	r3, [r4, #32]
   1e95c:	ldr	r2, [r4, #20]
   1e960:	add	r3, r3, #1
   1e964:	add	r0, r2, #1
   1e968:	mov	r1, #91	; 0x5b
   1e96c:	cmp	r5, #0
   1e970:	str	r3, [r4, #32]
   1e974:	str	r0, [r4, #20]
   1e978:	strb	r1, [r2]
   1e97c:	beq	1ea8c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   1e980:	ldrb	r1, [r4, #25]
   1e984:	cmp	r1, #0
   1e988:	bne	1eb08 <flatcc_json_printer_int64_enum_vector_field@@Base+0x250>
   1e98c:	ldr	r2, [r4, #20]
   1e990:	ldr	r3, [r4, #16]
   1e994:	cmp	r2, r3
   1e998:	bcs	1eb38 <flatcc_json_printer_int64_enum_vector_field@@Base+0x280>
   1e99c:	ldrd	r2, [r6, #4]
   1e9a0:	mov	r0, r4
   1e9a4:	blx	r7
   1e9a8:	cmp	r5, #1
   1e9ac:	add	r6, r6, #12
   1e9b0:	sub	r5, r5, #2
   1e9b4:	beq	1ea8c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   1e9b8:	mov	r8, #44	; 0x2c
   1e9bc:	mov	sl, #10
   1e9c0:	mov	r9, #32
   1e9c4:	b	1e9f0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   1e9c8:	ldr	r2, [r4, #20]
   1e9cc:	ldr	r3, [r4, #16]
   1e9d0:	cmp	r2, r3
   1e9d4:	bcs	1ea68 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   1e9d8:	ldrd	r2, [r6], #8
   1e9dc:	mov	r0, r4
   1e9e0:	blx	r7
   1e9e4:	cmp	r5, #0
   1e9e8:	sub	r5, r5, #1
   1e9ec:	beq	1ea8c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   1e9f0:	ldr	r3, [r4, #20]
   1e9f4:	add	r2, r3, #1
   1e9f8:	str	r2, [r4, #20]
   1e9fc:	strb	r8, [r3]
   1ea00:	ldrb	r3, [r4, #25]
   1ea04:	cmp	r3, #0
   1ea08:	beq	1e9c8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x110>
   1ea0c:	ldr	r3, [r4, #20]
   1ea10:	mov	r1, r9
   1ea14:	add	r2, r3, #1
   1ea18:	str	r2, [r4, #20]
   1ea1c:	strb	sl, [r3]
   1ea20:	ldrb	r3, [r4, #25]
   1ea24:	ldr	r2, [r4, #32]
   1ea28:	ldr	ip, [r4, #20]
   1ea2c:	ldr	lr, [r4, #16]
   1ea30:	mul	fp, r2, r3
   1ea34:	mov	r0, ip
   1ea38:	add	ip, ip, fp
   1ea3c:	cmp	lr, ip
   1ea40:	mov	r2, fp
   1ea44:	bcc	1ea7c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c4>
   1ea48:	bl	124e0 <memset@plt>
   1ea4c:	ldr	r2, [r4, #20]
   1ea50:	add	r3, r2, fp
   1ea54:	str	r3, [r4, #20]
   1ea58:	b	1e9d8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x120>
   1ea5c:	add	sp, sp, #4
   1ea60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea64:	b	1c8b4 <flatcc_json_printer_int64_vector_field@@Base>
   1ea68:	ldr	r3, [r4, #44]	; 0x2c
   1ea6c:	mov	r1, #0
   1ea70:	mov	r0, r4
   1ea74:	blx	r3
   1ea78:	b	1e9d8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x120>
   1ea7c:	mov	r1, fp
   1ea80:	mov	r0, r4
   1ea84:	bl	14bc8 <test_print@@Base+0x120c>
   1ea88:	b	1e9d8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x120>
   1ea8c:	ldrb	r3, [r4, #25]
   1ea90:	cmp	r3, #0
   1ea94:	bne	1eab4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1fc>
   1ea98:	ldr	r3, [r4, #20]
   1ea9c:	add	r1, r3, #1
   1eaa0:	mov	r2, #93	; 0x5d
   1eaa4:	str	r1, [r4, #20]
   1eaa8:	strb	r2, [r3]
   1eaac:	add	sp, sp, #4
   1eab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eab4:	ldr	r3, [r4, #20]
   1eab8:	mov	r2, #10
   1eabc:	add	r1, r3, #1
   1eac0:	str	r1, [r4, #20]
   1eac4:	strb	r2, [r3]
   1eac8:	ldr	r2, [r4, #32]
   1eacc:	ldrb	r3, [r4, #25]
   1ead0:	sub	r2, r2, #1
   1ead4:	ldr	r0, [r4, #20]
   1ead8:	ldr	r1, [r4, #16]
   1eadc:	mul	r5, r2, r3
   1eae0:	str	r2, [r4, #32]
   1eae4:	add	r3, r0, r5
   1eae8:	cmp	r1, r3
   1eaec:	bcc	1eb28 <flatcc_json_printer_int64_enum_vector_field@@Base+0x270>
   1eaf0:	mov	r2, r5
   1eaf4:	mov	r1, #32
   1eaf8:	bl	124e0 <memset@plt>
   1eafc:	ldr	r3, [r4, #20]
   1eb00:	add	r3, r3, r5
   1eb04:	b	1ea9c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e4>
   1eb08:	ldr	r3, [r4, #20]
   1eb0c:	mov	r2, #10
   1eb10:	add	r1, r3, #1
   1eb14:	str	r1, [r4, #20]
   1eb18:	mov	r0, r4
   1eb1c:	strb	r2, [r3]
   1eb20:	bl	14c74 <test_print@@Base+0x12b8>
   1eb24:	b	1e99c <flatcc_json_printer_int64_enum_vector_field@@Base+0xe4>
   1eb28:	mov	r1, r5
   1eb2c:	mov	r0, r4
   1eb30:	bl	14bc8 <test_print@@Base+0x120c>
   1eb34:	b	1ea98 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e0>
   1eb38:	ldr	r3, [r4, #44]	; 0x2c
   1eb3c:	mov	r0, r4
   1eb40:	blx	r3
   1eb44:	b	1e99c <flatcc_json_printer_int64_enum_vector_field@@Base+0xe4>

0001eb48 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   1eb48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eb4c:	sub	sp, sp, #4
   1eb50:	ldrb	r5, [r0, #27]
   1eb54:	ldr	r8, [sp, #44]	; 0x2c
   1eb58:	cmp	r5, #0
   1eb5c:	ldr	r5, [sp, #40]	; 0x28
   1eb60:	bne	1ece8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a0>
   1eb64:	mov	r6, r3
   1eb68:	add	r3, r2, #2
   1eb6c:	ldr	r2, [r1, #8]
   1eb70:	lsl	r3, r3, #1
   1eb74:	cmp	r2, r3
   1eb78:	mov	lr, r1
   1eb7c:	bgt	1eb88 <flatcc_json_printer_bool_enum_vector_field@@Base+0x40>
   1eb80:	add	sp, sp, #4
   1eb84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eb88:	ldr	r2, [r1, #4]
   1eb8c:	ldrh	r2, [r2, r3]
   1eb90:	cmp	r2, #0
   1eb94:	beq	1eb80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x38>
   1eb98:	mov	r4, r0
   1eb9c:	ldr	r0, [r1]
   1eba0:	adds	ip, r0, r2
   1eba4:	beq	1eb80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x38>
   1eba8:	ldr	r3, [r1, #16]
   1ebac:	cmp	r3, #0
   1ebb0:	add	r3, r3, #1
   1ebb4:	str	r3, [r1, #16]
   1ebb8:	ldrne	r3, [r4, #20]
   1ebbc:	movne	r1, #44	; 0x2c
   1ebc0:	addne	lr, r3, #1
   1ebc4:	strne	lr, [r4, #20]
   1ebc8:	strbne	r1, [r3]
   1ebcc:	ldr	r3, [r0, r2]
   1ebd0:	mov	r1, r6
   1ebd4:	mov	r2, r5
   1ebd8:	mov	r0, r4
   1ebdc:	ldr	r6, [ip, r3]
   1ebe0:	add	r7, ip, r3
   1ebe4:	bl	15fdc <test_print@@Base+0x2620>
   1ebe8:	ldr	r3, [r4, #32]
   1ebec:	ldr	r2, [r4, #20]
   1ebf0:	add	r3, r3, #1
   1ebf4:	add	r0, r2, #1
   1ebf8:	mov	r1, #91	; 0x5b
   1ebfc:	cmp	r6, #0
   1ec00:	str	r3, [r4, #32]
   1ec04:	str	r0, [r4, #20]
   1ec08:	strb	r1, [r2]
   1ec0c:	beq	1ed18 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d0>
   1ec10:	ldrb	r1, [r4, #25]
   1ec14:	cmp	r1, #0
   1ec18:	bne	1ed94 <flatcc_json_printer_bool_enum_vector_field@@Base+0x24c>
   1ec1c:	ldr	r2, [r4, #20]
   1ec20:	ldr	r3, [r4, #16]
   1ec24:	cmp	r2, r3
   1ec28:	bcs	1edc4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x27c>
   1ec2c:	ldrb	r1, [r7, #4]
   1ec30:	mov	r0, r4
   1ec34:	blx	r8
   1ec38:	cmp	r6, #1
   1ec3c:	add	r5, r7, #5
   1ec40:	beq	1ed18 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d0>
   1ec44:	add	r6, r6, #4
   1ec48:	mov	r9, #44	; 0x2c
   1ec4c:	mov	fp, #10
   1ec50:	b	1ec7c <flatcc_json_printer_bool_enum_vector_field@@Base+0x134>
   1ec54:	ldr	r2, [r4, #20]
   1ec58:	ldr	r3, [r4, #16]
   1ec5c:	cmp	r2, r3
   1ec60:	bcs	1ecf4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ac>
   1ec64:	ldrb	r1, [r5], #1
   1ec68:	mov	r0, r4
   1ec6c:	blx	r8
   1ec70:	sub	r3, r6, r5
   1ec74:	cmn	r7, r3
   1ec78:	beq	1ed18 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d0>
   1ec7c:	ldr	r3, [r4, #20]
   1ec80:	add	r2, r3, #1
   1ec84:	str	r2, [r4, #20]
   1ec88:	strb	r9, [r3]
   1ec8c:	ldrb	r3, [r4, #25]
   1ec90:	cmp	r3, #0
   1ec94:	beq	1ec54 <flatcc_json_printer_bool_enum_vector_field@@Base+0x10c>
   1ec98:	ldr	r3, [r4, #20]
   1ec9c:	mov	r1, #32
   1eca0:	add	r2, r3, #1
   1eca4:	str	r2, [r4, #20]
   1eca8:	strb	fp, [r3]
   1ecac:	ldrb	r2, [r4, #25]
   1ecb0:	ldr	sl, [r4, #32]
   1ecb4:	ldr	r3, [r4, #20]
   1ecb8:	ldr	ip, [r4, #16]
   1ecbc:	mul	sl, sl, r2
   1ecc0:	mov	r0, r3
   1ecc4:	add	r3, r3, sl
   1ecc8:	cmp	ip, r3
   1eccc:	mov	r2, sl
   1ecd0:	bcc	1ed08 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1c0>
   1ecd4:	bl	124e0 <memset@plt>
   1ecd8:	ldr	r3, [r4, #20]
   1ecdc:	add	sl, r3, sl
   1ece0:	str	sl, [r4, #20]
   1ece4:	b	1ec64 <flatcc_json_printer_bool_enum_vector_field@@Base+0x11c>
   1ece8:	add	sp, sp, #4
   1ecec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ecf0:	b	1cb7c <flatcc_json_printer_bool_vector_field@@Base>
   1ecf4:	ldr	r3, [r4, #44]	; 0x2c
   1ecf8:	mov	r1, #0
   1ecfc:	mov	r0, r4
   1ed00:	blx	r3
   1ed04:	b	1ec64 <flatcc_json_printer_bool_enum_vector_field@@Base+0x11c>
   1ed08:	mov	r1, sl
   1ed0c:	mov	r0, r4
   1ed10:	bl	14bc8 <test_print@@Base+0x120c>
   1ed14:	b	1ec64 <flatcc_json_printer_bool_enum_vector_field@@Base+0x11c>
   1ed18:	ldrb	r3, [r4, #25]
   1ed1c:	cmp	r3, #0
   1ed20:	bne	1ed40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1f8>
   1ed24:	ldr	r3, [r4, #20]
   1ed28:	add	r1, r3, #1
   1ed2c:	mov	r2, #93	; 0x5d
   1ed30:	str	r1, [r4, #20]
   1ed34:	strb	r2, [r3]
   1ed38:	add	sp, sp, #4
   1ed3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed40:	ldr	r3, [r4, #20]
   1ed44:	mov	r2, #10
   1ed48:	add	r1, r3, #1
   1ed4c:	str	r1, [r4, #20]
   1ed50:	strb	r2, [r3]
   1ed54:	ldr	r2, [r4, #32]
   1ed58:	ldrb	r3, [r4, #25]
   1ed5c:	sub	r2, r2, #1
   1ed60:	ldr	r0, [r4, #20]
   1ed64:	ldr	r1, [r4, #16]
   1ed68:	mul	r5, r2, r3
   1ed6c:	str	r2, [r4, #32]
   1ed70:	add	r3, r0, r5
   1ed74:	cmp	r1, r3
   1ed78:	bcc	1edb4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x26c>
   1ed7c:	mov	r2, r5
   1ed80:	mov	r1, #32
   1ed84:	bl	124e0 <memset@plt>
   1ed88:	ldr	r3, [r4, #20]
   1ed8c:	add	r3, r3, r5
   1ed90:	b	1ed28 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1e0>
   1ed94:	ldr	r3, [r4, #20]
   1ed98:	mov	r2, #10
   1ed9c:	add	r1, r3, #1
   1eda0:	str	r1, [r4, #20]
   1eda4:	mov	r0, r4
   1eda8:	strb	r2, [r3]
   1edac:	bl	14c74 <test_print@@Base+0x12b8>
   1edb0:	b	1ec2c <flatcc_json_printer_bool_enum_vector_field@@Base+0xe4>
   1edb4:	mov	r1, r5
   1edb8:	mov	r0, r4
   1edbc:	bl	14bc8 <test_print@@Base+0x120c>
   1edc0:	b	1ed24 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1dc>
   1edc4:	ldr	r3, [r4, #44]	; 0x2c
   1edc8:	mov	r0, r4
   1edcc:	blx	r3
   1edd0:	b	1ec2c <flatcc_json_printer_bool_enum_vector_field@@Base+0xe4>

0001edd4 <flatcc_json_printer_struct_vector_field@@Base>:
   1edd4:	add	r2, r2, #2
   1edd8:	ldr	ip, [r1, #8]
   1eddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ede0:	lsl	r2, r2, #1
   1ede4:	sub	sp, sp, #12
   1ede8:	cmp	r2, ip
   1edec:	ldr	r9, [sp, #52]	; 0x34
   1edf0:	ldr	r8, [sp, #56]	; 0x38
   1edf4:	bge	1efec <flatcc_json_printer_struct_vector_field@@Base+0x218>
   1edf8:	ldr	ip, [r1, #4]
   1edfc:	ldrh	lr, [ip, r2]
   1ee00:	cmp	lr, #0
   1ee04:	beq	1efec <flatcc_json_printer_struct_vector_field@@Base+0x218>
   1ee08:	ldr	r5, [r1]
   1ee0c:	adds	ip, r5, lr
   1ee10:	beq	1efec <flatcc_json_printer_struct_vector_field@@Base+0x218>
   1ee14:	ldr	r2, [r1, #16]
   1ee18:	cmp	r2, #0
   1ee1c:	add	r2, r2, #1
   1ee20:	str	r2, [r1, #16]
   1ee24:	ldrne	r2, [r0, #20]
   1ee28:	movne	r1, #44	; 0x2c
   1ee2c:	addne	r4, r2, #1
   1ee30:	strne	r4, [r0, #20]
   1ee34:	strbne	r1, [r2]
   1ee38:	mov	r1, r3
   1ee3c:	ldr	r3, [r5, lr]
   1ee40:	mov	r4, r0
   1ee44:	ldr	r2, [sp, #48]	; 0x30
   1ee48:	ldr	r5, [ip, r3]
   1ee4c:	add	r6, ip, r3
   1ee50:	bl	15fdc <test_print@@Base+0x2620>
   1ee54:	ldr	r3, [r4, #32]
   1ee58:	ldr	r2, [r4, #20]
   1ee5c:	add	r3, r3, #1
   1ee60:	add	r0, r2, #1
   1ee64:	mov	r1, #91	; 0x5b
   1ee68:	cmp	r5, #0
   1ee6c:	str	r3, [r4, #32]
   1ee70:	str	r0, [r4, #20]
   1ee74:	strb	r1, [r2]
   1ee78:	beq	1efcc <flatcc_json_printer_struct_vector_field@@Base+0x1f8>
   1ee7c:	ldrb	r1, [r4, #25]
   1ee80:	cmp	r1, #0
   1ee84:	bne	1f11c <flatcc_json_printer_struct_vector_field@@Base+0x348>
   1ee88:	ldr	r2, [r4, #20]
   1ee8c:	ldr	r3, [r4, #16]
   1ee90:	cmp	r2, r3
   1ee94:	bcs	1f140 <flatcc_json_printer_struct_vector_field@@Base+0x36c>
   1ee98:	ldr	r3, [r4, #32]
   1ee9c:	add	r1, r2, #1
   1eea0:	add	r3, r3, #1
   1eea4:	mov	r0, #123	; 0x7b
   1eea8:	add	r6, r6, #4
   1eeac:	str	r3, [r4, #32]
   1eeb0:	str	r1, [r4, #20]
   1eeb4:	strb	r0, [r2]
   1eeb8:	mov	r1, r6
   1eebc:	mov	r0, r4
   1eec0:	blx	r8
   1eec4:	ldrb	r3, [r4, #25]
   1eec8:	cmp	r3, #0
   1eecc:	bne	1f0f0 <flatcc_json_printer_struct_vector_field@@Base+0x31c>
   1eed0:	ldr	r3, [r4, #20]
   1eed4:	cmp	r5, #1
   1eed8:	add	r2, r3, #1
   1eedc:	mov	r7, #125	; 0x7d
   1eee0:	str	r2, [r4, #20]
   1eee4:	sub	r5, r5, #2
   1eee8:	strb	r7, [r3]
   1eeec:	beq	1efcc <flatcc_json_printer_struct_vector_field@@Base+0x1f8>
   1eef0:	mov	fp, #44	; 0x2c
   1eef4:	mov	sl, #123	; 0x7b
   1eef8:	b	1ef58 <flatcc_json_printer_struct_vector_field@@Base+0x184>
   1eefc:	ldr	r2, [r4, #20]
   1ef00:	ldr	r3, [r4, #16]
   1ef04:	cmp	r2, r3
   1ef08:	bcs	1f050 <flatcc_json_printer_struct_vector_field@@Base+0x27c>
   1ef0c:	ldr	r3, [r4, #32]
   1ef10:	add	r1, r2, #1
   1ef14:	add	r3, r3, #1
   1ef18:	str	r3, [r4, #32]
   1ef1c:	str	r1, [r4, #20]
   1ef20:	mov	r0, r4
   1ef24:	mov	r1, r6
   1ef28:	strb	sl, [r2]
   1ef2c:	blx	r8
   1ef30:	ldrb	r3, [r4, #25]
   1ef34:	cmp	r3, #0
   1ef38:	bne	1eff4 <flatcc_json_printer_struct_vector_field@@Base+0x220>
   1ef3c:	ldr	r1, [r4, #20]
   1ef40:	cmp	r5, #0
   1ef44:	add	r3, r1, #1
   1ef48:	str	r3, [r4, #20]
   1ef4c:	sub	r5, r5, #1
   1ef50:	strb	r7, [r1]
   1ef54:	beq	1efcc <flatcc_json_printer_struct_vector_field@@Base+0x1f8>
   1ef58:	ldr	r3, [r4, #20]
   1ef5c:	add	r6, r6, r9
   1ef60:	add	r2, r3, #1
   1ef64:	str	r2, [r4, #20]
   1ef68:	strb	fp, [r3]
   1ef6c:	ldrb	r3, [r4, #25]
   1ef70:	cmp	r3, #0
   1ef74:	beq	1eefc <flatcc_json_printer_struct_vector_field@@Base+0x128>
   1ef78:	ldr	r3, [r4, #20]
   1ef7c:	add	r2, r3, #1
   1ef80:	str	r2, [r4, #20]
   1ef84:	mov	r2, #10
   1ef88:	strb	r2, [r3]
   1ef8c:	ldrb	r3, [r4, #25]
   1ef90:	ldr	r2, [r4, #32]
   1ef94:	ldr	r0, [r4, #20]
   1ef98:	ldr	r1, [r4, #16]
   1ef9c:	mul	r3, r2, r3
   1efa0:	add	r2, r0, r3
   1efa4:	cmp	r1, r2
   1efa8:	bcc	1f068 <flatcc_json_printer_struct_vector_field@@Base+0x294>
   1efac:	mov	r2, r3
   1efb0:	mov	r1, #32
   1efb4:	str	r3, [sp, #4]
   1efb8:	bl	124e0 <memset@plt>
   1efbc:	ldr	r2, [r4, #20]
   1efc0:	ldr	r3, [sp, #4]
   1efc4:	add	r2, r2, r3
   1efc8:	b	1ef0c <flatcc_json_printer_struct_vector_field@@Base+0x138>
   1efcc:	ldrb	r3, [r4, #25]
   1efd0:	cmp	r3, #0
   1efd4:	bne	1f08c <flatcc_json_printer_struct_vector_field@@Base+0x2b8>
   1efd8:	ldr	r3, [r4, #20]
   1efdc:	add	r1, r3, #1
   1efe0:	mov	r2, #93	; 0x5d
   1efe4:	str	r1, [r4, #20]
   1efe8:	strb	r2, [r3]
   1efec:	add	sp, sp, #12
   1eff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eff4:	ldr	r3, [r4, #20]
   1eff8:	add	r2, r3, #1
   1effc:	str	r2, [r4, #20]
   1f000:	mov	r2, #10
   1f004:	strb	r2, [r3]
   1f008:	ldr	r2, [r4, #32]
   1f00c:	ldrb	r1, [r4, #25]
   1f010:	sub	r2, r2, #1
   1f014:	ldr	r0, [r4, #20]
   1f018:	ldr	ip, [r4, #16]
   1f01c:	mul	r3, r2, r1
   1f020:	str	r2, [r4, #32]
   1f024:	add	r2, r0, r3
   1f028:	cmp	ip, r2
   1f02c:	bcc	1f07c <flatcc_json_printer_struct_vector_field@@Base+0x2a8>
   1f030:	mov	r2, r3
   1f034:	mov	r1, #32
   1f038:	str	r3, [sp, #4]
   1f03c:	bl	124e0 <memset@plt>
   1f040:	ldr	r1, [r4, #20]
   1f044:	ldr	r3, [sp, #4]
   1f048:	add	r1, r1, r3
   1f04c:	b	1ef40 <flatcc_json_printer_struct_vector_field@@Base+0x16c>
   1f050:	ldr	r3, [r4, #44]	; 0x2c
   1f054:	mov	r1, #0
   1f058:	mov	r0, r4
   1f05c:	blx	r3
   1f060:	ldr	r2, [r4, #20]
   1f064:	b	1ef0c <flatcc_json_printer_struct_vector_field@@Base+0x138>
   1f068:	mov	r1, r3
   1f06c:	mov	r0, r4
   1f070:	bl	14bc8 <test_print@@Base+0x120c>
   1f074:	ldr	r2, [r4, #20]
   1f078:	b	1ef0c <flatcc_json_printer_struct_vector_field@@Base+0x138>
   1f07c:	mov	r1, r3
   1f080:	mov	r0, r4
   1f084:	bl	14bc8 <test_print@@Base+0x120c>
   1f088:	b	1ef3c <flatcc_json_printer_struct_vector_field@@Base+0x168>
   1f08c:	ldr	r3, [r4, #20]
   1f090:	mov	r2, #10
   1f094:	add	r1, r3, #1
   1f098:	str	r1, [r4, #20]
   1f09c:	strb	r2, [r3]
   1f0a0:	ldr	r2, [r4, #32]
   1f0a4:	ldrb	r3, [r4, #25]
   1f0a8:	sub	r2, r2, #1
   1f0ac:	ldr	r0, [r4, #20]
   1f0b0:	ldr	r1, [r4, #16]
   1f0b4:	mul	r5, r2, r3
   1f0b8:	str	r2, [r4, #32]
   1f0bc:	add	r3, r0, r5
   1f0c0:	cmp	r1, r3
   1f0c4:	bcc	1f0e0 <flatcc_json_printer_struct_vector_field@@Base+0x30c>
   1f0c8:	mov	r2, r5
   1f0cc:	mov	r1, #32
   1f0d0:	bl	124e0 <memset@plt>
   1f0d4:	ldr	r3, [r4, #20]
   1f0d8:	add	r3, r3, r5
   1f0dc:	b	1efdc <flatcc_json_printer_struct_vector_field@@Base+0x208>
   1f0e0:	mov	r1, r5
   1f0e4:	mov	r0, r4
   1f0e8:	bl	14bc8 <test_print@@Base+0x120c>
   1f0ec:	b	1efd8 <flatcc_json_printer_struct_vector_field@@Base+0x204>
   1f0f0:	ldr	r3, [r4, #20]
   1f0f4:	mov	r2, #10
   1f0f8:	add	r1, r3, #1
   1f0fc:	str	r1, [r4, #20]
   1f100:	strb	r2, [r3]
   1f104:	ldr	r3, [r4, #32]
   1f108:	mov	r0, r4
   1f10c:	sub	r3, r3, #1
   1f110:	str	r3, [r4, #32]
   1f114:	bl	14c74 <test_print@@Base+0x12b8>
   1f118:	b	1eed0 <flatcc_json_printer_struct_vector_field@@Base+0xfc>
   1f11c:	ldr	r3, [r4, #20]
   1f120:	mov	r2, #10
   1f124:	add	r1, r3, #1
   1f128:	str	r1, [r4, #20]
   1f12c:	mov	r0, r4
   1f130:	strb	r2, [r3]
   1f134:	bl	14c74 <test_print@@Base+0x12b8>
   1f138:	ldr	r2, [r4, #20]
   1f13c:	b	1ee98 <flatcc_json_printer_struct_vector_field@@Base+0xc4>
   1f140:	ldr	r3, [r4, #44]	; 0x2c
   1f144:	mov	r0, r4
   1f148:	blx	r3
   1f14c:	ldr	r2, [r4, #20]
   1f150:	b	1ee98 <flatcc_json_printer_struct_vector_field@@Base+0xc4>

0001f154 <flatcc_json_printer_string_vector_field@@Base>:
   1f154:	add	r2, r2, #2
   1f158:	ldr	ip, [r1, #8]
   1f15c:	lsl	r2, r2, #1
   1f160:	cmp	ip, r2
   1f164:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f168:	ldr	r6, [sp, #40]	; 0x28
   1f16c:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f170:	ldr	ip, [r1, #4]
   1f174:	ldrh	ip, [ip, r2]
   1f178:	cmp	ip, #0
   1f17c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f180:	ldr	r5, [r1]
   1f184:	adds	lr, r5, ip
   1f188:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f18c:	ldr	r2, [r1, #16]
   1f190:	mov	r8, r3
   1f194:	cmp	r2, #0
   1f198:	add	r2, r2, #1
   1f19c:	str	r2, [r1, #16]
   1f1a0:	ldrne	r2, [r0, #20]
   1f1a4:	movne	r1, #44	; 0x2c
   1f1a8:	addne	r4, r2, #1
   1f1ac:	strne	r4, [r0, #20]
   1f1b0:	strbne	r1, [r2]
   1f1b4:	ldrb	r1, [r0, #25]
   1f1b8:	ldr	r3, [r5, ip]
   1f1bc:	mov	r4, r0
   1f1c0:	cmp	r1, #0
   1f1c4:	add	r7, lr, r3
   1f1c8:	ldr	r5, [lr, r3]
   1f1cc:	ldr	r3, [r0, #20]
   1f1d0:	bne	1f464 <flatcc_json_printer_string_vector_field@@Base+0x310>
   1f1d4:	ldr	r2, [r0, #16]
   1f1d8:	cmp	r3, r2
   1f1dc:	bcc	1f1ec <flatcc_json_printer_string_vector_field@@Base+0x98>
   1f1e0:	ldr	r3, [r0, #44]	; 0x2c
   1f1e4:	blx	r3
   1f1e8:	ldr	r3, [r4, #20]
   1f1ec:	mov	r2, #34	; 0x22
   1f1f0:	strb	r2, [r3]
   1f1f4:	ldrb	r3, [r4, #26]
   1f1f8:	ldr	r0, [r4, #20]
   1f1fc:	ldr	r2, [r4, #16]
   1f200:	cmp	r3, #0
   1f204:	addeq	r0, r0, #1
   1f208:	add	r3, r0, r6
   1f20c:	cmp	r2, r3
   1f210:	str	r0, [r4, #20]
   1f214:	bhi	1f3e4 <flatcc_json_printer_string_vector_field@@Base+0x290>
   1f218:	mov	r2, r6
   1f21c:	mov	r1, r8
   1f220:	mov	r0, r4
   1f224:	bl	14b18 <test_print@@Base+0x115c>
   1f228:	ldr	r6, [r4, #20]
   1f22c:	mov	r3, #34	; 0x22
   1f230:	strb	r3, [r6]
   1f234:	ldr	r1, [r4, #20]
   1f238:	ldrb	r3, [r4, #26]
   1f23c:	clz	r3, r3
   1f240:	lsr	r3, r3, #5
   1f244:	add	r2, r1, r3
   1f248:	add	r2, r2, #1
   1f24c:	mov	r0, #58	; 0x3a
   1f250:	str	r2, [r4, #20]
   1f254:	strb	r0, [r1, r3]
   1f258:	ldr	r3, [r4, #20]
   1f25c:	mov	lr, #32
   1f260:	mov	r1, #91	; 0x5b
   1f264:	strb	lr, [r3]
   1f268:	ldrb	r3, [r4, #25]
   1f26c:	ldr	ip, [r4, #20]
   1f270:	ldr	r2, [r4, #32]
   1f274:	adds	r3, r3, #0
   1f278:	movne	r3, #1
   1f27c:	add	r0, ip, r3
   1f280:	add	r0, r0, #1
   1f284:	add	r2, r2, #1
   1f288:	cmp	r5, #0
   1f28c:	str	r0, [r4, #20]
   1f290:	str	r2, [r4, #32]
   1f294:	strb	r1, [ip, r3]
   1f298:	beq	1f3c0 <flatcc_json_printer_string_vector_field@@Base+0x26c>
   1f29c:	ldrb	r1, [r4, #25]
   1f2a0:	cmp	r1, #0
   1f2a4:	bne	1f4b0 <flatcc_json_printer_string_vector_field@@Base+0x35c>
   1f2a8:	ldr	r2, [r4, #20]
   1f2ac:	ldr	r3, [r4, #16]
   1f2b0:	cmp	r2, r3
   1f2b4:	bcs	1f500 <flatcc_json_printer_string_vector_field@@Base+0x3ac>
   1f2b8:	ldr	r3, [r7, #4]
   1f2bc:	mov	r0, r4
   1f2c0:	add	r3, r3, #4
   1f2c4:	add	r1, r7, r3
   1f2c8:	add	r1, r1, #4
   1f2cc:	ldr	r2, [r7, r3]
   1f2d0:	bl	15dbc <test_print@@Base+0x2400>
   1f2d4:	cmp	r5, #1
   1f2d8:	sub	r5, r5, #2
   1f2dc:	beq	1f3c0 <flatcc_json_printer_string_vector_field@@Base+0x26c>
   1f2e0:	add	r7, r7, #8
   1f2e4:	mov	r8, #44	; 0x2c
   1f2e8:	mov	sl, #10
   1f2ec:	mov	r9, #32
   1f2f0:	b	1f32c <flatcc_json_printer_string_vector_field@@Base+0x1d8>
   1f2f4:	ldr	r2, [r4, #20]
   1f2f8:	ldr	r3, [r4, #16]
   1f2fc:	cmp	r2, r3
   1f300:	bcs	1f39c <flatcc_json_printer_string_vector_field@@Base+0x248>
   1f304:	ldr	r3, [r6]
   1f308:	mov	r0, r4
   1f30c:	add	r1, r6, r3
   1f310:	add	r1, r1, #4
   1f314:	ldr	r2, [r6, r3]
   1f318:	bl	15dbc <test_print@@Base+0x2400>
   1f31c:	cmp	r5, #0
   1f320:	add	r7, r7, #4
   1f324:	sub	r5, r5, #1
   1f328:	beq	1f3c0 <flatcc_json_printer_string_vector_field@@Base+0x26c>
   1f32c:	ldr	r3, [r4, #20]
   1f330:	mov	r6, r7
   1f334:	add	r2, r3, #1
   1f338:	str	r2, [r4, #20]
   1f33c:	strb	r8, [r3]
   1f340:	ldrb	r3, [r4, #25]
   1f344:	cmp	r3, #0
   1f348:	beq	1f2f4 <flatcc_json_printer_string_vector_field@@Base+0x1a0>
   1f34c:	ldr	r3, [r4, #20]
   1f350:	mov	r1, r9
   1f354:	add	r2, r3, #1
   1f358:	str	r2, [r4, #20]
   1f35c:	strb	sl, [r3]
   1f360:	ldrb	r3, [r4, #25]
   1f364:	ldr	r2, [r4, #32]
   1f368:	ldr	ip, [r4, #20]
   1f36c:	ldr	lr, [r4, #16]
   1f370:	mul	fp, r2, r3
   1f374:	mov	r0, ip
   1f378:	add	ip, ip, fp
   1f37c:	cmp	lr, ip
   1f380:	mov	r2, fp
   1f384:	bcc	1f3b0 <flatcc_json_printer_string_vector_field@@Base+0x25c>
   1f388:	bl	124e0 <memset@plt>
   1f38c:	ldr	r2, [r4, #20]
   1f390:	add	r3, r2, fp
   1f394:	str	r3, [r4, #20]
   1f398:	b	1f304 <flatcc_json_printer_string_vector_field@@Base+0x1b0>
   1f39c:	ldr	r3, [r4, #44]	; 0x2c
   1f3a0:	mov	r1, #0
   1f3a4:	mov	r0, r4
   1f3a8:	blx	r3
   1f3ac:	b	1f304 <flatcc_json_printer_string_vector_field@@Base+0x1b0>
   1f3b0:	mov	r1, fp
   1f3b4:	mov	r0, r4
   1f3b8:	bl	14bc8 <test_print@@Base+0x120c>
   1f3bc:	b	1f304 <flatcc_json_printer_string_vector_field@@Base+0x1b0>
   1f3c0:	ldrb	r3, [r4, #25]
   1f3c4:	cmp	r3, #0
   1f3c8:	bne	1f400 <flatcc_json_printer_string_vector_field@@Base+0x2ac>
   1f3cc:	ldr	r3, [r4, #20]
   1f3d0:	add	r1, r3, #1
   1f3d4:	mov	r2, #93	; 0x5d
   1f3d8:	str	r1, [r4, #20]
   1f3dc:	strb	r2, [r3]
   1f3e0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f3e4:	mov	r2, r6
   1f3e8:	mov	r1, r8
   1f3ec:	bl	12444 <memcpy@plt>
   1f3f0:	ldr	r3, [r4, #20]
   1f3f4:	add	r6, r3, r6
   1f3f8:	str	r6, [r4, #20]
   1f3fc:	b	1f22c <flatcc_json_printer_string_vector_field@@Base+0xd8>
   1f400:	ldr	r3, [r4, #20]
   1f404:	mov	r2, #10
   1f408:	add	r1, r3, #1
   1f40c:	str	r1, [r4, #20]
   1f410:	strb	r2, [r3]
   1f414:	ldr	r2, [r4, #32]
   1f418:	ldrb	r3, [r4, #25]
   1f41c:	sub	r2, r2, #1
   1f420:	ldr	r0, [r4, #20]
   1f424:	ldr	r1, [r4, #16]
   1f428:	mul	r5, r2, r3
   1f42c:	str	r2, [r4, #32]
   1f430:	add	r3, r0, r5
   1f434:	cmp	r1, r3
   1f438:	bcc	1f454 <flatcc_json_printer_string_vector_field@@Base+0x300>
   1f43c:	mov	r2, r5
   1f440:	mov	r1, #32
   1f444:	bl	124e0 <memset@plt>
   1f448:	ldr	r3, [r4, #20]
   1f44c:	add	r3, r3, r5
   1f450:	b	1f3d0 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   1f454:	mov	r1, r5
   1f458:	mov	r0, r4
   1f45c:	bl	14bc8 <test_print@@Base+0x120c>
   1f460:	b	1f3cc <flatcc_json_printer_string_vector_field@@Base+0x278>
   1f464:	mov	r2, #10
   1f468:	add	r1, r3, #1
   1f46c:	str	r1, [r0, #20]
   1f470:	strb	r2, [r3]
   1f474:	ldrb	r3, [r0, #25]
   1f478:	ldr	r9, [r0, #32]
   1f47c:	ldr	r0, [r0, #20]
   1f480:	ldr	r2, [r4, #16]
   1f484:	mul	r9, r9, r3
   1f488:	add	r3, r0, r9
   1f48c:	cmp	r2, r3
   1f490:	bcc	1f510 <flatcc_json_printer_string_vector_field@@Base+0x3bc>
   1f494:	mov	r2, r9
   1f498:	mov	r1, #32
   1f49c:	bl	124e0 <memset@plt>
   1f4a0:	ldr	r3, [r4, #20]
   1f4a4:	add	r3, r3, r9
   1f4a8:	str	r3, [r4, #20]
   1f4ac:	b	1f1ec <flatcc_json_printer_string_vector_field@@Base+0x98>
   1f4b0:	ldr	r3, [r4, #20]
   1f4b4:	mov	r2, #10
   1f4b8:	add	r1, r3, #1
   1f4bc:	str	r1, [r4, #20]
   1f4c0:	strb	r2, [r3]
   1f4c4:	ldrb	r3, [r4, #25]
   1f4c8:	ldr	r6, [r4, #32]
   1f4cc:	ldr	r0, [r4, #20]
   1f4d0:	ldr	r2, [r4, #16]
   1f4d4:	mul	r6, r6, r3
   1f4d8:	add	r3, r0, r6
   1f4dc:	cmp	r2, r3
   1f4e0:	bcc	1f524 <flatcc_json_printer_string_vector_field@@Base+0x3d0>
   1f4e4:	mov	r2, r6
   1f4e8:	mov	r1, lr
   1f4ec:	bl	124e0 <memset@plt>
   1f4f0:	ldr	r3, [r4, #20]
   1f4f4:	add	r6, r3, r6
   1f4f8:	str	r6, [r4, #20]
   1f4fc:	b	1f2b8 <flatcc_json_printer_string_vector_field@@Base+0x164>
   1f500:	ldr	r3, [r4, #44]	; 0x2c
   1f504:	mov	r0, r4
   1f508:	blx	r3
   1f50c:	b	1f2b8 <flatcc_json_printer_string_vector_field@@Base+0x164>
   1f510:	mov	r1, r9
   1f514:	mov	r0, r4
   1f518:	bl	14bc8 <test_print@@Base+0x120c>
   1f51c:	ldr	r3, [r4, #20]
   1f520:	b	1f1ec <flatcc_json_printer_string_vector_field@@Base+0x98>
   1f524:	mov	r1, r6
   1f528:	mov	r0, r4
   1f52c:	bl	14bc8 <test_print@@Base+0x120c>
   1f530:	b	1f2b8 <flatcc_json_printer_string_vector_field@@Base+0x164>

0001f534 <flatcc_json_printer_table_vector_field@@Base>:
   1f534:	add	r2, r2, #2
   1f538:	ldr	ip, [r1, #8]
   1f53c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f540:	lsl	r2, r2, #1
   1f544:	sub	sp, sp, #44	; 0x2c
   1f548:	cmp	ip, r2
   1f54c:	ldr	r6, [sp, #80]	; 0x50
   1f550:	ble	1f6a4 <flatcc_json_printer_table_vector_field@@Base+0x170>
   1f554:	ldr	ip, [r1, #4]
   1f558:	ldrh	ip, [ip, r2]
   1f55c:	cmp	ip, #0
   1f560:	beq	1f6a4 <flatcc_json_printer_table_vector_field@@Base+0x170>
   1f564:	ldr	r5, [r1]
   1f568:	adds	lr, r5, ip
   1f56c:	beq	1f6a4 <flatcc_json_printer_table_vector_field@@Base+0x170>
   1f570:	ldr	r2, [r1, #16]
   1f574:	mov	r9, r3
   1f578:	cmp	r2, #0
   1f57c:	add	r2, r2, #1
   1f580:	str	r2, [r1, #16]
   1f584:	ldrne	r2, [r0, #20]
   1f588:	movne	r4, #44	; 0x2c
   1f58c:	addne	r7, r2, #1
   1f590:	strne	r7, [r0, #20]
   1f594:	strbne	r4, [r2]
   1f598:	mov	r7, r1
   1f59c:	ldrb	r1, [r0, #25]
   1f5a0:	ldr	r3, [r5, ip]
   1f5a4:	mov	r4, r0
   1f5a8:	cmp	r1, #0
   1f5ac:	add	r8, lr, r3
   1f5b0:	ldr	r5, [lr, r3]
   1f5b4:	ldr	r3, [r0, #20]
   1f5b8:	bne	1f90c <flatcc_json_printer_table_vector_field@@Base+0x3d8>
   1f5bc:	ldr	r2, [r0, #16]
   1f5c0:	cmp	r3, r2
   1f5c4:	bcc	1f5d4 <flatcc_json_printer_table_vector_field@@Base+0xa0>
   1f5c8:	ldr	r3, [r0, #44]	; 0x2c
   1f5cc:	blx	r3
   1f5d0:	ldr	r3, [r4, #20]
   1f5d4:	mov	r2, #34	; 0x22
   1f5d8:	strb	r2, [r3]
   1f5dc:	ldrb	r3, [r4, #26]
   1f5e0:	ldr	r0, [r4, #20]
   1f5e4:	ldr	r2, [r4, #16]
   1f5e8:	cmp	r3, #0
   1f5ec:	addeq	r0, r0, #1
   1f5f0:	add	r3, r0, r6
   1f5f4:	cmp	r2, r3
   1f5f8:	str	r0, [r4, #20]
   1f5fc:	bhi	1f6ac <flatcc_json_printer_table_vector_field@@Base+0x178>
   1f600:	mov	r2, r6
   1f604:	mov	r1, r9
   1f608:	mov	r0, r4
   1f60c:	bl	14b18 <test_print@@Base+0x115c>
   1f610:	ldr	r6, [r4, #20]
   1f614:	mov	r3, #34	; 0x22
   1f618:	strb	r3, [r6]
   1f61c:	ldr	r1, [r4, #20]
   1f620:	ldrb	r3, [r4, #26]
   1f624:	clz	r3, r3
   1f628:	lsr	r3, r3, #5
   1f62c:	add	r2, r1, r3
   1f630:	add	r2, r2, #1
   1f634:	mov	r0, #58	; 0x3a
   1f638:	str	r2, [r4, #20]
   1f63c:	strb	r0, [r1, r3]
   1f640:	ldr	r3, [r4, #20]
   1f644:	mov	r2, #32
   1f648:	mov	ip, #91	; 0x5b
   1f64c:	strb	r2, [r3]
   1f650:	ldrb	r3, [r4, #25]
   1f654:	ldr	r0, [r4, #20]
   1f658:	ldr	r2, [r4, #32]
   1f65c:	adds	r3, r3, #0
   1f660:	movne	r3, #1
   1f664:	add	r1, r0, r3
   1f668:	add	r1, r1, #1
   1f66c:	add	r2, r2, #1
   1f670:	cmp	r5, #0
   1f674:	str	r1, [r4, #20]
   1f678:	str	r2, [r4, #32]
   1f67c:	strb	ip, [r0, r3]
   1f680:	bne	1f71c <flatcc_json_printer_table_vector_field@@Base+0x1e8>
   1f684:	ldrb	r3, [r4, #25]
   1f688:	cmp	r3, #0
   1f68c:	bne	1f6c8 <flatcc_json_printer_table_vector_field@@Base+0x194>
   1f690:	ldr	r3, [r4, #20]
   1f694:	add	r1, r3, #1
   1f698:	mov	r2, #93	; 0x5d
   1f69c:	str	r1, [r4, #20]
   1f6a0:	strb	r2, [r3]
   1f6a4:	add	sp, sp, #44	; 0x2c
   1f6a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f6ac:	mov	r2, r6
   1f6b0:	mov	r1, r9
   1f6b4:	bl	12444 <memcpy@plt>
   1f6b8:	ldr	r3, [r4, #20]
   1f6bc:	add	r6, r3, r6
   1f6c0:	str	r6, [r4, #20]
   1f6c4:	b	1f614 <flatcc_json_printer_table_vector_field@@Base+0xe0>
   1f6c8:	ldr	r3, [r4, #20]
   1f6cc:	mov	r2, #10
   1f6d0:	add	r1, r3, #1
   1f6d4:	str	r1, [r4, #20]
   1f6d8:	strb	r2, [r3]
   1f6dc:	ldr	r2, [r4, #32]
   1f6e0:	ldrb	r3, [r4, #25]
   1f6e4:	sub	r2, r2, #1
   1f6e8:	ldr	r0, [r4, #20]
   1f6ec:	ldr	r1, [r4, #16]
   1f6f0:	mul	r5, r2, r3
   1f6f4:	str	r2, [r4, #32]
   1f6f8:	add	r3, r0, r5
   1f6fc:	cmp	r1, r3
   1f700:	bcc	1f79c <flatcc_json_printer_table_vector_field@@Base+0x268>
   1f704:	mov	r2, r5
   1f708:	mov	r1, #32
   1f70c:	bl	124e0 <memset@plt>
   1f710:	ldr	r3, [r4, #20]
   1f714:	add	r3, r3, r5
   1f718:	b	1f694 <flatcc_json_printer_table_vector_field@@Base+0x160>
   1f71c:	ldr	r3, [r7, #12]
   1f720:	add	r6, r8, #4
   1f724:	subs	r3, r3, #1
   1f728:	bne	1f7ac <flatcc_json_printer_table_vector_field@@Base+0x278>
   1f72c:	ldr	r3, [r4, #36]	; 0x24
   1f730:	cmp	r3, #0
   1f734:	moveq	r3, #2
   1f738:	streq	r3, [r4, #36]	; 0x24
   1f73c:	sub	r5, r5, #1
   1f740:	mov	sl, #44	; 0x2c
   1f744:	mov	fp, #123	; 0x7b
   1f748:	add	r9, sp, #20
   1f74c:	sub	r5, r5, #1
   1f750:	cmn	r5, #1
   1f754:	mov	r1, #2
   1f758:	beq	1f684 <flatcc_json_printer_table_vector_field@@Base+0x150>
   1f75c:	ldr	r3, [r4, #20]
   1f760:	add	r6, r6, #4
   1f764:	add	r2, r3, #1
   1f768:	str	r2, [r4, #20]
   1f76c:	strb	sl, [r3]
   1f770:	ldr	r3, [r7, #12]
   1f774:	subs	r3, r3, #1
   1f778:	bne	1f828 <flatcc_json_printer_table_vector_field@@Base+0x2f4>
   1f77c:	ldr	r3, [r4, #36]	; 0x24
   1f780:	sub	r5, r5, #1
   1f784:	cmp	r3, #0
   1f788:	streq	r1, [r4, #36]	; 0x24
   1f78c:	cmn	r5, #1
   1f790:	mov	r1, #2
   1f794:	bne	1f75c <flatcc_json_printer_table_vector_field@@Base+0x228>
   1f798:	b	1f684 <flatcc_json_printer_table_vector_field@@Base+0x150>
   1f79c:	mov	r1, r5
   1f7a0:	mov	r0, r4
   1f7a4:	bl	14bc8 <test_print@@Base+0x120c>
   1f7a8:	b	1f690 <flatcc_json_printer_table_vector_field@@Base+0x15c>
   1f7ac:	ldr	r1, [r4, #32]
   1f7b0:	ldr	r2, [r8, #4]
   1f7b4:	ldr	r0, [r4, #20]
   1f7b8:	add	r1, r1, #1
   1f7bc:	str	r1, [r4, #32]
   1f7c0:	add	lr, r0, #1
   1f7c4:	mov	ip, #123	; 0x7b
   1f7c8:	mov	r1, #0
   1f7cc:	str	lr, [r4, #20]
   1f7d0:	strb	ip, [r0]
   1f7d4:	str	r3, [sp, #12]
   1f7d8:	str	r1, [sp, #16]
   1f7dc:	ldr	r1, [r6, r2]
   1f7e0:	add	r3, r6, r2
   1f7e4:	sub	r2, r3, r1
   1f7e8:	mov	r0, r4
   1f7ec:	ldrh	ip, [r2]
   1f7f0:	mov	r1, sp
   1f7f4:	str	r3, [sp]
   1f7f8:	ldr	r3, [sp, #84]	; 0x54
   1f7fc:	stmib	sp, {r2, ip}
   1f800:	blx	r3
   1f804:	ldrb	r3, [r4, #25]
   1f808:	cmp	r3, #0
   1f80c:	bne	1f96c <flatcc_json_printer_table_vector_field@@Base+0x438>
   1f810:	ldr	r3, [r4, #20]
   1f814:	mov	r2, #125	; 0x7d
   1f818:	add	r1, r3, #1
   1f81c:	str	r1, [r4, #20]
   1f820:	strb	r2, [r3]
   1f824:	b	1f73c <flatcc_json_printer_table_vector_field@@Base+0x208>
   1f828:	ldr	r1, [r4, #32]
   1f82c:	ldr	r2, [r6]
   1f830:	ldr	r0, [r4, #20]
   1f834:	add	r1, r1, #1
   1f838:	str	r1, [r4, #32]
   1f83c:	add	ip, r0, #1
   1f840:	mov	r1, #0
   1f844:	str	ip, [r4, #20]
   1f848:	strb	fp, [r0]
   1f84c:	str	r3, [sp, #32]
   1f850:	str	r1, [sp, #36]	; 0x24
   1f854:	ldr	r1, [r6, r2]
   1f858:	add	r3, r6, r2
   1f85c:	sub	r2, r3, r1
   1f860:	mov	r0, r4
   1f864:	ldrh	ip, [r2]
   1f868:	mov	r1, r9
   1f86c:	str	r3, [sp, #20]
   1f870:	ldr	r3, [sp, #84]	; 0x54
   1f874:	str	r2, [sp, #24]
   1f878:	str	ip, [sp, #28]
   1f87c:	blx	r3
   1f880:	ldrb	r3, [r4, #25]
   1f884:	cmp	r3, #0
   1f888:	ldr	r3, [r4, #20]
   1f88c:	bne	1f8a4 <flatcc_json_printer_table_vector_field@@Base+0x370>
   1f890:	add	r2, r3, #1
   1f894:	str	r2, [r4, #20]
   1f898:	mov	r2, #125	; 0x7d
   1f89c:	strb	r2, [r3]
   1f8a0:	b	1f74c <flatcc_json_printer_table_vector_field@@Base+0x218>
   1f8a4:	add	r2, r3, #1
   1f8a8:	str	r2, [r4, #20]
   1f8ac:	mov	r2, #10
   1f8b0:	strb	r2, [r3]
   1f8b4:	ldr	ip, [r4, #32]
   1f8b8:	ldrb	r3, [r4, #25]
   1f8bc:	sub	ip, ip, #1
   1f8c0:	ldr	lr, [r4, #20]
   1f8c4:	mov	r1, #32
   1f8c8:	mul	r8, ip, r3
   1f8cc:	ldr	r3, [r4, #16]
   1f8d0:	mov	r0, lr
   1f8d4:	add	lr, lr, r8
   1f8d8:	cmp	r3, lr
   1f8dc:	mov	r2, r8
   1f8e0:	str	ip, [r4, #32]
   1f8e4:	bcc	1f8f8 <flatcc_json_printer_table_vector_field@@Base+0x3c4>
   1f8e8:	bl	124e0 <memset@plt>
   1f8ec:	ldr	r3, [r4, #20]
   1f8f0:	add	r3, r3, r8
   1f8f4:	b	1f890 <flatcc_json_printer_table_vector_field@@Base+0x35c>
   1f8f8:	mov	r1, r8
   1f8fc:	mov	r0, r4
   1f900:	bl	14bc8 <test_print@@Base+0x120c>
   1f904:	ldr	r3, [r4, #20]
   1f908:	b	1f890 <flatcc_json_printer_table_vector_field@@Base+0x35c>
   1f90c:	mov	r2, #10
   1f910:	add	r1, r3, #1
   1f914:	str	r1, [r0, #20]
   1f918:	strb	r2, [r3]
   1f91c:	ldrb	r3, [r0, #25]
   1f920:	ldr	sl, [r0, #32]
   1f924:	ldr	r0, [r0, #20]
   1f928:	ldr	r2, [r4, #16]
   1f92c:	mul	sl, sl, r3
   1f930:	add	r3, r0, sl
   1f934:	cmp	r2, r3
   1f938:	bcc	1f958 <flatcc_json_printer_table_vector_field@@Base+0x424>
   1f93c:	mov	r2, sl
   1f940:	mov	r1, #32
   1f944:	bl	124e0 <memset@plt>
   1f948:	ldr	r3, [r4, #20]
   1f94c:	add	r3, r3, sl
   1f950:	str	r3, [r4, #20]
   1f954:	b	1f5d4 <flatcc_json_printer_table_vector_field@@Base+0xa0>
   1f958:	mov	r1, sl
   1f95c:	mov	r0, r4
   1f960:	bl	14bc8 <test_print@@Base+0x120c>
   1f964:	ldr	r3, [r4, #20]
   1f968:	b	1f5d4 <flatcc_json_printer_table_vector_field@@Base+0xa0>
   1f96c:	ldr	r3, [r4, #20]
   1f970:	mov	r2, #10
   1f974:	add	r1, r3, #1
   1f978:	str	r1, [r4, #20]
   1f97c:	strb	r2, [r3]
   1f980:	ldr	r3, [r4, #32]
   1f984:	mov	r0, r4
   1f988:	sub	r3, r3, #1
   1f98c:	str	r3, [r4, #32]
   1f990:	bl	14c74 <test_print@@Base+0x12b8>
   1f994:	b	1f810 <flatcc_json_printer_table_vector_field@@Base+0x2dc>

0001f998 <flatcc_json_printer_union_vector_field@@Base>:
   1f998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f99c:	mov	r8, r2
   1f9a0:	add	r2, r2, #1
   1f9a4:	mov	r5, r1
   1f9a8:	ldr	r1, [r1, #8]
   1f9ac:	sub	sp, sp, #140	; 0x8c
   1f9b0:	lsl	r2, r2, #1
   1f9b4:	cmp	r2, r1
   1f9b8:	mov	r4, r0
   1f9bc:	mov	r9, r3
   1f9c0:	ldr	r6, [sp, #176]	; 0xb0
   1f9c4:	movge	r7, #0
   1f9c8:	bge	1f9e0 <flatcc_json_printer_union_vector_field@@Base+0x48>
   1f9cc:	ldr	r3, [r5, #4]
   1f9d0:	ldrh	r7, [r3, r2]
   1f9d4:	cmp	r7, #0
   1f9d8:	ldrne	r3, [r5]
   1f9dc:	addne	r7, r3, r7
   1f9e0:	add	r2, r2, #2
   1f9e4:	cmp	r2, r1
   1f9e8:	bge	1fc08 <flatcc_json_printer_union_vector_field@@Base+0x270>
   1f9ec:	ldr	r3, [r5, #4]
   1f9f0:	ldrh	sl, [r3, r2]
   1f9f4:	cmp	sl, #0
   1f9f8:	beq	1fc08 <flatcc_json_printer_union_vector_field@@Base+0x270>
   1f9fc:	ldr	r3, [r5]
   1fa00:	cmp	r6, #100	; 0x64
   1fa04:	mov	r2, r3
   1fa08:	str	r3, [sp, #12]
   1fa0c:	ldr	r3, [r5, #12]
   1fa10:	add	fp, r2, sl
   1fa14:	str	r3, [sp, #20]
   1fa18:	bgt	1fc3c <flatcc_json_printer_union_vector_field@@Base+0x2a4>
   1fa1c:	add	r3, sp, #28
   1fa20:	mov	r0, r3
   1fa24:	mov	r2, r6
   1fa28:	mov	r1, r9
   1fa2c:	bl	12444 <memcpy@plt>
   1fa30:	ldr	r2, [pc, #644]	; 1fcbc <flatcc_json_printer_union_vector_field@@Base+0x324>
   1fa34:	cmp	fp, #0
   1fa38:	cmpne	r7, #0
   1fa3c:	add	r2, pc, r2
   1fa40:	ldrb	ip, [r2, #4]
   1fa44:	mov	r3, r0
   1fa48:	add	r1, r0, r6
   1fa4c:	ldr	r0, [r2]
   1fa50:	str	r0, [r3, r6]
   1fa54:	strb	ip, [r1, #4]
   1fa58:	beq	1fc18 <flatcc_json_printer_union_vector_field@@Base+0x280>
   1fa5c:	ldr	r2, [sp, #180]	; 0xb4
   1fa60:	add	r1, r6, #5
   1fa64:	str	r2, [sp, #4]
   1fa68:	str	r1, [sp]
   1fa6c:	sub	r2, r8, #1
   1fa70:	mov	r1, r5
   1fa74:	mov	r0, r4
   1fa78:	bl	1d444 <flatcc_json_printer_utype_enum_vector_field@@Base>
   1fa7c:	ldr	r3, [r5, #16]
   1fa80:	mov	r0, r4
   1fa84:	cmp	r3, #0
   1fa88:	add	r3, r3, #1
   1fa8c:	str	r3, [r5, #16]
   1fa90:	ldrne	r3, [r4, #20]
   1fa94:	movne	r2, #44	; 0x2c
   1fa98:	addne	r1, r3, #1
   1fa9c:	strne	r1, [r4, #20]
   1faa0:	strbne	r2, [r3]
   1faa4:	ldr	r3, [sp, #12]
   1faa8:	mov	r2, r6
   1faac:	mov	r1, r9
   1fab0:	ldr	r3, [r3, sl]
   1fab4:	ldr	r6, [r7]
   1fab8:	add	r5, fp, r3
   1fabc:	ldr	r8, [fp, r3]
   1fac0:	bl	15fdc <test_print@@Base+0x2620>
   1fac4:	ldr	r3, [r4, #32]
   1fac8:	ldr	r2, [r4, #20]
   1facc:	add	r3, r3, #1
   1fad0:	add	r0, r2, #1
   1fad4:	mov	r1, #91	; 0x5b
   1fad8:	cmp	r8, #0
   1fadc:	str	r3, [r4, #32]
   1fae0:	str	r0, [r4, #20]
   1fae4:	strb	r1, [r2]
   1fae8:	beq	1fbe0 <flatcc_json_printer_union_vector_field@@Base+0x248>
   1faec:	add	r7, r7, r6
   1faf0:	add	r5, r5, #4
   1faf4:	ldrb	r3, [r7, #4]
   1faf8:	cmp	r3, #0
   1fafc:	bne	1fca0 <flatcc_json_printer_union_vector_field@@Base+0x308>
   1fb00:	ldr	r3, [r4, #20]
   1fb04:	mov	r2, #110	; 0x6e
   1fb08:	add	r1, r3, #1
   1fb0c:	str	r1, [r4, #20]
   1fb10:	strb	r2, [r3]
   1fb14:	ldr	r3, [r4, #20]
   1fb18:	mov	r2, #117	; 0x75
   1fb1c:	add	r1, r3, #1
   1fb20:	str	r1, [r4, #20]
   1fb24:	strb	r2, [r3]
   1fb28:	ldr	r3, [r4, #20]
   1fb2c:	mov	r2, #108	; 0x6c
   1fb30:	add	r1, r3, #1
   1fb34:	str	r1, [r4, #20]
   1fb38:	strb	r2, [r3]
   1fb3c:	ldr	r3, [r4, #20]
   1fb40:	add	r1, r3, #1
   1fb44:	str	r1, [r4, #20]
   1fb48:	strb	r2, [r3]
   1fb4c:	add	r8, r8, #3
   1fb50:	add	r8, r7, r8
   1fb54:	mov	r9, #44	; 0x2c
   1fb58:	add	r7, r7, #4
   1fb5c:	mov	sl, #110	; 0x6e
   1fb60:	mov	fp, #117	; 0x75
   1fb64:	mov	r6, #108	; 0x6c
   1fb68:	add	r3, sp, #16
   1fb6c:	str	r3, [sp, #12]
   1fb70:	cmp	r7, r8
   1fb74:	beq	1fbe0 <flatcc_json_printer_union_vector_field@@Base+0x248>
   1fb78:	ldrb	r2, [r7, #1]!
   1fb7c:	ldr	r3, [r4, #20]
   1fb80:	add	r5, r5, #4
   1fb84:	add	r1, r3, #1
   1fb88:	cmp	r2, #0
   1fb8c:	str	r1, [r4, #20]
   1fb90:	strb	r9, [r3]
   1fb94:	bne	1fc20 <flatcc_json_printer_union_vector_field@@Base+0x288>
   1fb98:	ldr	r3, [r4, #20]
   1fb9c:	cmp	r7, r8
   1fba0:	add	r2, r3, #1
   1fba4:	str	r2, [r4, #20]
   1fba8:	strb	sl, [r3]
   1fbac:	ldr	r3, [r4, #20]
   1fbb0:	add	r2, r3, #1
   1fbb4:	str	r2, [r4, #20]
   1fbb8:	strb	fp, [r3]
   1fbbc:	ldr	r3, [r4, #20]
   1fbc0:	add	r2, r3, #1
   1fbc4:	str	r2, [r4, #20]
   1fbc8:	strb	r6, [r3]
   1fbcc:	ldr	r3, [r4, #20]
   1fbd0:	add	r2, r3, #1
   1fbd4:	str	r2, [r4, #20]
   1fbd8:	strb	r6, [r3]
   1fbdc:	bne	1fb78 <flatcc_json_printer_union_vector_field@@Base+0x1e0>
   1fbe0:	ldrb	r3, [r4, #25]
   1fbe4:	cmp	r3, #0
   1fbe8:	bne	1fc74 <flatcc_json_printer_union_vector_field@@Base+0x2dc>
   1fbec:	ldr	r3, [r4, #20]
   1fbf0:	mov	r2, #93	; 0x5d
   1fbf4:	add	r1, r3, #1
   1fbf8:	str	r1, [r4, #20]
   1fbfc:	strb	r2, [r3]
   1fc00:	add	sp, sp, #140	; 0x8c
   1fc04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc08:	ldr	r3, [r5, #12]
   1fc0c:	cmp	r6, #100	; 0x64
   1fc10:	str	r3, [sp, #20]
   1fc14:	bgt	1fc3c <flatcc_json_printer_union_vector_field@@Base+0x2a4>
   1fc18:	add	sp, sp, #140	; 0x8c
   1fc1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc20:	ldr	r1, [sp, #12]
   1fc24:	mov	r0, r4
   1fc28:	ldr	r3, [sp, #184]	; 0xb8
   1fc2c:	strb	r2, [sp, #24]
   1fc30:	str	r5, [sp, #16]
   1fc34:	blx	r3
   1fc38:	b	1fb70 <flatcc_json_printer_union_vector_field@@Base+0x1d8>
   1fc3c:	ldr	r3, [r4, #36]	; 0x24
   1fc40:	ldr	r1, [pc, #120]	; 1fcc0 <flatcc_json_printer_union_vector_field@@Base+0x328>
   1fc44:	cmp	r3, #0
   1fc48:	moveq	r3, #1
   1fc4c:	streq	r3, [r4, #36]	; 0x24
   1fc50:	ldr	r3, [pc, #108]	; 1fcc4 <flatcc_json_printer_union_vector_field@@Base+0x32c>
   1fc54:	ldr	r0, [pc, #108]	; 1fcc8 <flatcc_json_printer_union_vector_field@@Base+0x330>
   1fc58:	add	r3, pc, r3
   1fc5c:	add	r3, r3, #1776	; 0x6f0
   1fc60:	ldr	r2, [pc, #100]	; 1fccc <flatcc_json_printer_union_vector_field@@Base+0x334>
   1fc64:	add	r3, r3, #8
   1fc68:	add	r1, pc, r1
   1fc6c:	add	r0, pc, r0
   1fc70:	bl	12528 <__assert_fail@plt>
   1fc74:	ldr	r3, [r4, #20]
   1fc78:	mov	r2, #10
   1fc7c:	add	r1, r3, #1
   1fc80:	str	r1, [r4, #20]
   1fc84:	strb	r2, [r3]
   1fc88:	ldr	r3, [r4, #32]
   1fc8c:	mov	r0, r4
   1fc90:	sub	r3, r3, #1
   1fc94:	str	r3, [r4, #32]
   1fc98:	bl	14c74 <test_print@@Base+0x12b8>
   1fc9c:	b	1fbec <flatcc_json_printer_union_vector_field@@Base+0x254>
   1fca0:	add	r1, sp, #136	; 0x88
   1fca4:	strb	r3, [sp, #24]
   1fca8:	mov	r0, r4
   1fcac:	str	r5, [r1, #-120]!	; 0xffffff88
   1fcb0:	ldr	r3, [sp, #184]	; 0xb8
   1fcb4:	blx	r3
   1fcb8:	b	1fb4c <flatcc_json_printer_union_vector_field@@Base+0x1b4>
   1fcbc:	andeq	r2, r0, r0, lsr #23
   1fcc0:	andeq	r2, r0, r0, lsr r7
   1fcc4:	andeq	r1, r0, r8, ror #30
   1fcc8:	andeq	r2, r0, r4, asr r9
   1fccc:	andeq	r0, r0, fp, asr #6

0001fcd0 <flatcc_json_printer_table_field@@Base>:
   1fcd0:	add	r2, r2, #2
   1fcd4:	ldr	ip, [r1, #8]
   1fcd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fcdc:	lsl	r2, r2, #1
   1fce0:	sub	sp, sp, #28
   1fce4:	cmp	r2, ip
   1fce8:	ldr	r9, [sp, #64]	; 0x40
   1fcec:	bge	1fe10 <flatcc_json_printer_table_field@@Base+0x140>
   1fcf0:	ldr	ip, [r1, #4]
   1fcf4:	ldrh	r6, [ip, r2]
   1fcf8:	cmp	r6, #0
   1fcfc:	beq	1fe10 <flatcc_json_printer_table_field@@Base+0x140>
   1fd00:	ldr	r8, [r1]
   1fd04:	adds	r7, r8, r6
   1fd08:	beq	1fe10 <flatcc_json_printer_table_field@@Base+0x140>
   1fd0c:	ldr	r2, [r1, #16]
   1fd10:	mov	r5, r1
   1fd14:	cmp	r2, #0
   1fd18:	add	r2, r2, #1
   1fd1c:	str	r2, [r1, #16]
   1fd20:	ldrne	r2, [r0, #20]
   1fd24:	movne	ip, #44	; 0x2c
   1fd28:	addne	lr, r2, #1
   1fd2c:	strne	lr, [r0, #20]
   1fd30:	strbne	ip, [r2]
   1fd34:	ldrb	r1, [r0, #25]
   1fd38:	mov	sl, r3
   1fd3c:	mov	r4, r0
   1fd40:	cmp	r1, #0
   1fd44:	bne	1ff04 <flatcc_json_printer_table_field@@Base+0x234>
   1fd48:	ldr	r2, [r0, #20]
   1fd4c:	ldr	r3, [r0, #16]
   1fd50:	cmp	r2, r3
   1fd54:	bcc	1fd64 <flatcc_json_printer_table_field@@Base+0x94>
   1fd58:	ldr	r3, [r0, #44]	; 0x2c
   1fd5c:	blx	r3
   1fd60:	ldr	r2, [r4, #20]
   1fd64:	mov	r3, #34	; 0x22
   1fd68:	strb	r3, [r2]
   1fd6c:	ldrb	r3, [r4, #26]
   1fd70:	ldr	r0, [r4, #20]
   1fd74:	ldr	r2, [r4, #16]
   1fd78:	cmp	r3, #0
   1fd7c:	addeq	r0, r0, #1
   1fd80:	add	r3, r0, r9
   1fd84:	cmp	r2, r3
   1fd88:	str	r0, [r4, #20]
   1fd8c:	bhi	1fe18 <flatcc_json_printer_table_field@@Base+0x148>
   1fd90:	mov	r2, r9
   1fd94:	mov	r1, sl
   1fd98:	mov	r0, r4
   1fd9c:	bl	14b18 <test_print@@Base+0x115c>
   1fda0:	ldr	r9, [r4, #20]
   1fda4:	mov	r3, #34	; 0x22
   1fda8:	strb	r3, [r9]
   1fdac:	ldr	r1, [r4, #20]
   1fdb0:	ldrb	r3, [r4, #26]
   1fdb4:	clz	r3, r3
   1fdb8:	lsr	r3, r3, #5
   1fdbc:	add	r2, r1, r3
   1fdc0:	add	r2, r2, #1
   1fdc4:	mov	r0, #58	; 0x3a
   1fdc8:	str	r2, [r4, #20]
   1fdcc:	strb	r0, [r1, r3]
   1fdd0:	ldr	r3, [r4, #20]
   1fdd4:	mov	r9, #32
   1fdd8:	strb	r9, [r3]
   1fddc:	ldrb	r2, [r4, #25]
   1fde0:	ldr	r3, [r5, #12]
   1fde4:	ldr	r0, [r4, #20]
   1fde8:	adds	r2, r2, #0
   1fdec:	movne	r2, #1
   1fdf0:	add	r1, r0, r2
   1fdf4:	subs	r3, r3, #1
   1fdf8:	str	r1, [r4, #20]
   1fdfc:	bne	1fe34 <flatcc_json_printer_table_field@@Base+0x164>
   1fe00:	ldr	r3, [r4, #36]	; 0x24
   1fe04:	cmp	r3, #0
   1fe08:	moveq	r3, #2
   1fe0c:	streq	r3, [r4, #36]	; 0x24
   1fe10:	add	sp, sp, #28
   1fe14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe18:	mov	r2, r9
   1fe1c:	mov	r1, sl
   1fe20:	bl	12444 <memcpy@plt>
   1fe24:	ldr	r3, [r4, #20]
   1fe28:	add	r9, r3, r9
   1fe2c:	str	r9, [r4, #20]
   1fe30:	b	1fda4 <flatcc_json_printer_table_field@@Base+0xd4>
   1fe34:	ldr	lr, [r8, r6]
   1fe38:	ldr	ip, [r4, #32]
   1fe3c:	add	r1, r1, #1
   1fe40:	str	r1, [r4, #20]
   1fe44:	add	ip, ip, #1
   1fe48:	mov	r1, #0
   1fe4c:	mov	r5, #123	; 0x7b
   1fe50:	str	ip, [r4, #32]
   1fe54:	strb	r5, [r0, r2]
   1fe58:	str	r1, [sp, #20]
   1fe5c:	str	r3, [sp, #16]
   1fe60:	ldr	r3, [r7, lr]
   1fe64:	add	r7, r7, lr
   1fe68:	sub	r3, r7, r3
   1fe6c:	add	r1, sp, #4
   1fe70:	ldrh	r2, [r3]
   1fe74:	mov	r0, r4
   1fe78:	str	r3, [sp, #8]
   1fe7c:	ldr	r3, [sp, #68]	; 0x44
   1fe80:	str	r2, [sp, #12]
   1fe84:	str	r7, [sp, #4]
   1fe88:	blx	r3
   1fe8c:	ldrb	r3, [r4, #25]
   1fe90:	cmp	r3, #0
   1fe94:	ldr	r3, [r4, #20]
   1fe98:	bne	1feb4 <flatcc_json_printer_table_field@@Base+0x1e4>
   1fe9c:	add	r1, r3, #1
   1fea0:	mov	r2, #125	; 0x7d
   1fea4:	str	r1, [r4, #20]
   1fea8:	strb	r2, [r3]
   1feac:	add	sp, sp, #28
   1feb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1feb4:	add	r1, r3, #1
   1feb8:	mov	r2, #10
   1febc:	str	r1, [r4, #20]
   1fec0:	strb	r2, [r3]
   1fec4:	ldr	r2, [r4, #32]
   1fec8:	ldrb	r3, [r4, #25]
   1fecc:	sub	r2, r2, #1
   1fed0:	ldr	r0, [r4, #20]
   1fed4:	ldr	r1, [r4, #16]
   1fed8:	mul	r5, r2, r3
   1fedc:	str	r2, [r4, #32]
   1fee0:	add	r3, r0, r5
   1fee4:	cmp	r1, r3
   1fee8:	bcc	1ff68 <flatcc_json_printer_table_field@@Base+0x298>
   1feec:	mov	r1, r9
   1fef0:	mov	r2, r5
   1fef4:	bl	124e0 <memset@plt>
   1fef8:	ldr	r3, [r4, #20]
   1fefc:	add	r3, r3, r5
   1ff00:	b	1fe9c <flatcc_json_printer_table_field@@Base+0x1cc>
   1ff04:	ldr	r3, [r0, #20]
   1ff08:	mov	r2, #10
   1ff0c:	add	r1, r3, #1
   1ff10:	str	r1, [r0, #20]
   1ff14:	strb	r2, [r3]
   1ff18:	ldrb	r3, [r0, #25]
   1ff1c:	ldr	r2, [r0, #32]
   1ff20:	ldr	r0, [r0, #20]
   1ff24:	ldr	r1, [r4, #16]
   1ff28:	mul	fp, r2, r3
   1ff2c:	add	r3, r0, fp
   1ff30:	cmp	r1, r3
   1ff34:	bcc	1ff54 <flatcc_json_printer_table_field@@Base+0x284>
   1ff38:	mov	r2, fp
   1ff3c:	mov	r1, #32
   1ff40:	bl	124e0 <memset@plt>
   1ff44:	ldr	r2, [r4, #20]
   1ff48:	add	r2, r2, fp
   1ff4c:	str	r2, [r4, #20]
   1ff50:	b	1fd64 <flatcc_json_printer_table_field@@Base+0x94>
   1ff54:	mov	r1, fp
   1ff58:	mov	r0, r4
   1ff5c:	bl	14bc8 <test_print@@Base+0x120c>
   1ff60:	ldr	r2, [r4, #20]
   1ff64:	b	1fd64 <flatcc_json_printer_table_field@@Base+0x94>
   1ff68:	mov	r1, r5
   1ff6c:	mov	r0, r4
   1ff70:	bl	14bc8 <test_print@@Base+0x120c>
   1ff74:	ldr	r3, [r4, #20]
   1ff78:	b	1fe9c <flatcc_json_printer_table_field@@Base+0x1cc>

0001ff7c <flatcc_json_printer_union_field@@Base>:
   1ff7c:	add	r2, r2, #1
   1ff80:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ff84:	lsl	r2, r2, #1
   1ff88:	ldr	lr, [r1, #8]
   1ff8c:	sub	sp, sp, #20
   1ff90:	cmp	r2, lr
   1ff94:	movge	ip, #0
   1ff98:	bge	1ffb0 <flatcc_json_printer_union_field@@Base+0x34>
   1ff9c:	ldr	ip, [r1, #4]
   1ffa0:	ldrh	ip, [ip, r2]
   1ffa4:	cmp	ip, #0
   1ffa8:	ldrne	r4, [r1]
   1ffac:	addne	ip, r4, ip
   1ffb0:	add	r2, r2, #2
   1ffb4:	cmp	r2, lr
   1ffb8:	bge	20128 <flatcc_json_printer_union_field@@Base+0x1ac>
   1ffbc:	ldr	lr, [r1, #4]
   1ffc0:	ldrh	r2, [lr, r2]
   1ffc4:	cmp	r2, #0
   1ffc8:	beq	20128 <flatcc_json_printer_union_field@@Base+0x1ac>
   1ffcc:	ldr	r7, [r1]
   1ffd0:	adds	r7, r7, r2
   1ffd4:	moveq	r2, #1
   1ffd8:	movne	r2, #0
   1ffdc:	cmp	ip, #0
   1ffe0:	orreq	r2, r2, #1
   1ffe4:	cmp	r2, #0
   1ffe8:	bne	20128 <flatcc_json_printer_union_field@@Base+0x1ac>
   1ffec:	ldr	r2, [r1, #16]
   1fff0:	ldrb	r8, [ip]
   1fff4:	cmp	r2, #0
   1fff8:	add	r2, r2, #1
   1fffc:	str	r2, [r1, #16]
   20000:	ldrne	r2, [r0, #20]
   20004:	movne	ip, #44	; 0x2c
   20008:	addne	lr, r2, #1
   2000c:	strne	lr, [r0, #20]
   20010:	mov	r5, r1
   20014:	strbne	ip, [r2]
   20018:	ldrb	r1, [r0, #25]
   2001c:	mov	r6, r3
   20020:	mov	r4, r0
   20024:	cmp	r1, #0
   20028:	ldr	r3, [r0, #20]
   2002c:	bne	201d4 <flatcc_json_printer_union_field@@Base+0x258>
   20030:	ldr	r2, [r0, #16]
   20034:	cmp	r3, r2
   20038:	bcs	20220 <flatcc_json_printer_union_field@@Base+0x2a4>
   2003c:	mov	r2, #34	; 0x22
   20040:	strb	r2, [r3]
   20044:	ldrb	r3, [r4, #26]
   20048:	ldr	r0, [r4, #20]
   2004c:	ldr	r2, [r4, #16]
   20050:	cmp	r3, #0
   20054:	addeq	r0, r0, #1
   20058:	ldr	r3, [sp, #48]	; 0x30
   2005c:	str	r0, [r4, #20]
   20060:	add	r3, r0, r3
   20064:	cmp	r2, r3
   20068:	mov	r1, r6
   2006c:	ldr	r2, [sp, #48]	; 0x30
   20070:	bhi	20130 <flatcc_json_printer_union_field@@Base+0x1b4>
   20074:	mov	r0, r4
   20078:	bl	14b18 <test_print@@Base+0x115c>
   2007c:	ldr	r3, [r4, #20]
   20080:	ldr	r1, [r4, #16]
   20084:	add	r2, r3, #5
   20088:	cmp	r1, r2
   2008c:	bls	20154 <flatcc_json_printer_union_field@@Base+0x1d8>
   20090:	ldr	r2, [pc, #428]	; 20244 <flatcc_json_printer_union_field@@Base+0x2c8>
   20094:	add	r2, pc, r2
   20098:	ldrb	r1, [r2, #4]
   2009c:	ldr	r0, [r2]
   200a0:	strb	r1, [r3, #4]
   200a4:	str	r0, [r3]
   200a8:	ldr	r3, [r4, #20]
   200ac:	add	r3, r3, #5
   200b0:	str	r3, [r4, #20]
   200b4:	mov	r2, #34	; 0x22
   200b8:	strb	r2, [r3]
   200bc:	ldr	r1, [r4, #20]
   200c0:	ldrb	r2, [r4, #26]
   200c4:	clz	r2, r2
   200c8:	lsr	r2, r2, #5
   200cc:	add	r3, r1, r2
   200d0:	add	r3, r3, #1
   200d4:	mov	r0, #58	; 0x3a
   200d8:	str	r3, [r4, #20]
   200dc:	strb	r0, [r1, r2]
   200e0:	ldr	r3, [r4, #20]
   200e4:	mov	r2, #32
   200e8:	strb	r2, [r3]
   200ec:	ldrb	r2, [r4, #25]
   200f0:	ldrb	r3, [r4, #27]
   200f4:	ldr	r1, [r4, #20]
   200f8:	cmp	r2, #0
   200fc:	addne	r1, r1, #1
   20100:	cmp	r3, #0
   20104:	str	r1, [r4, #20]
   20108:	beq	20170 <flatcc_json_printer_union_field@@Base+0x1f4>
   2010c:	mov	r0, r8
   20110:	bl	14e04 <test_print@@Base+0x1448>
   20114:	ldr	r3, [r4, #20]
   20118:	cmp	r8, #0
   2011c:	add	r0, r3, r0
   20120:	str	r0, [r4, #20]
   20124:	bne	20188 <flatcc_json_printer_union_field@@Base+0x20c>
   20128:	add	sp, sp, #20
   2012c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20130:	bl	12444 <memcpy@plt>
   20134:	ldr	r3, [r4, #20]
   20138:	ldr	r2, [sp, #48]	; 0x30
   2013c:	ldr	r1, [r4, #16]
   20140:	add	r3, r3, r2
   20144:	add	r2, r3, #5
   20148:	cmp	r1, r2
   2014c:	str	r3, [r4, #20]
   20150:	bhi	20090 <flatcc_json_printer_union_field@@Base+0x114>
   20154:	ldr	r1, [pc, #236]	; 20248 <flatcc_json_printer_union_field@@Base+0x2cc>
   20158:	mov	r2, #5
   2015c:	add	r1, pc, r1
   20160:	mov	r0, r4
   20164:	bl	14b18 <test_print@@Base+0x115c>
   20168:	ldr	r3, [r4, #20]
   2016c:	b	200b4 <flatcc_json_printer_union_field@@Base+0x138>
   20170:	mov	r1, r8
   20174:	mov	r0, r4
   20178:	ldr	r3, [sp, #52]	; 0x34
   2017c:	blx	r3
   20180:	cmp	r8, #0
   20184:	beq	20128 <flatcc_json_printer_union_field@@Base+0x1ac>
   20188:	ldr	r3, [r4, #20]
   2018c:	mov	r2, #44	; 0x2c
   20190:	add	r0, r3, #1
   20194:	str	r0, [r4, #20]
   20198:	mov	r1, r6
   2019c:	strb	r2, [r3]
   201a0:	mov	r0, r4
   201a4:	ldr	r2, [sp, #48]	; 0x30
   201a8:	bl	15fdc <test_print@@Base+0x2620>
   201ac:	ldr	r3, [r5, #12]
   201b0:	add	r1, sp, #16
   201b4:	str	r3, [sp, #8]
   201b8:	mov	r0, r4
   201bc:	str	r7, [r1, #-12]!
   201c0:	ldr	r3, [sp, #56]	; 0x38
   201c4:	strb	r8, [sp, #12]
   201c8:	blx	r3
   201cc:	add	sp, sp, #20
   201d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   201d4:	mov	r2, #10
   201d8:	add	r1, r3, #1
   201dc:	str	r1, [r0, #20]
   201e0:	strb	r2, [r3]
   201e4:	ldrb	r3, [r0, #25]
   201e8:	ldr	r9, [r0, #32]
   201ec:	ldr	r0, [r0, #20]
   201f0:	ldr	r2, [r4, #16]
   201f4:	mul	r9, r9, r3
   201f8:	add	r3, r0, r9
   201fc:	cmp	r2, r3
   20200:	bcc	20230 <flatcc_json_printer_union_field@@Base+0x2b4>
   20204:	mov	r2, r9
   20208:	mov	r1, #32
   2020c:	bl	124e0 <memset@plt>
   20210:	ldr	r3, [r4, #20]
   20214:	add	r3, r3, r9
   20218:	str	r3, [r4, #20]
   2021c:	b	2003c <flatcc_json_printer_union_field@@Base+0xc0>
   20220:	ldr	r3, [r0, #44]	; 0x2c
   20224:	blx	r3
   20228:	ldr	r3, [r4, #20]
   2022c:	b	2003c <flatcc_json_printer_union_field@@Base+0xc0>
   20230:	mov	r1, r9
   20234:	mov	r0, r4
   20238:	bl	14bc8 <test_print@@Base+0x120c>
   2023c:	ldr	r3, [r4, #20]
   20240:	b	2003c <flatcc_json_printer_union_field@@Base+0xc0>
   20244:	andeq	r2, r0, r8, asr #10
   20248:	andeq	r2, r0, r0, lsl #9

0002024c <flatcc_json_printer_union_table@@Base>:
   2024c:	ldr	r3, [r1, #4]
   20250:	push	{r4, r5, r6, r7, lr}
   20254:	subs	r3, r3, #1
   20258:	sub	sp, sp, #28
   2025c:	mov	r4, r0
   20260:	bne	2027c <flatcc_json_printer_union_table@@Base+0x30>
   20264:	ldr	r3, [r0, #36]	; 0x24
   20268:	cmp	r3, #0
   2026c:	moveq	r3, #2
   20270:	streq	r3, [r0, #36]	; 0x24
   20274:	add	sp, sp, #28
   20278:	pop	{r4, r5, r6, r7, pc}
   2027c:	ldr	r1, [r1]
   20280:	ldr	ip, [r0, #32]
   20284:	ldr	r5, [r0, #20]
   20288:	ldr	lr, [r1]
   2028c:	add	ip, ip, #1
   20290:	str	ip, [r0, #32]
   20294:	add	r7, r5, #1
   20298:	mov	ip, #0
   2029c:	mov	r6, #123	; 0x7b
   202a0:	str	r7, [r0, #20]
   202a4:	strb	r6, [r5]
   202a8:	str	r3, [sp, #16]
   202ac:	str	ip, [sp, #20]
   202b0:	ldr	ip, [r1, lr]
   202b4:	add	r3, r1, lr
   202b8:	sub	ip, r3, ip
   202bc:	add	r1, sp, #4
   202c0:	ldrh	lr, [ip]
   202c4:	stmib	sp, {r3, ip, lr}
   202c8:	blx	r2
   202cc:	ldrb	r3, [r4, #25]
   202d0:	cmp	r3, #0
   202d4:	ldr	r3, [r4, #20]
   202d8:	bne	202f4 <flatcc_json_printer_union_table@@Base+0xa8>
   202dc:	add	r1, r3, #1
   202e0:	mov	r2, #125	; 0x7d
   202e4:	str	r1, [r4, #20]
   202e8:	strb	r2, [r3]
   202ec:	add	sp, sp, #28
   202f0:	pop	{r4, r5, r6, r7, pc}
   202f4:	add	r1, r3, #1
   202f8:	mov	r2, #10
   202fc:	str	r1, [r4, #20]
   20300:	strb	r2, [r3]
   20304:	ldr	r2, [r4, #32]
   20308:	ldrb	r3, [r4, #25]
   2030c:	sub	r2, r2, #1
   20310:	ldr	r0, [r4, #20]
   20314:	ldr	r1, [r4, #16]
   20318:	mul	r5, r2, r3
   2031c:	str	r2, [r4, #32]
   20320:	add	r3, r0, r5
   20324:	cmp	r1, r3
   20328:	bcc	20344 <flatcc_json_printer_union_table@@Base+0xf8>
   2032c:	mov	r2, r5
   20330:	mov	r1, #32
   20334:	bl	124e0 <memset@plt>
   20338:	ldr	r3, [r4, #20]
   2033c:	add	r3, r3, r5
   20340:	b	202dc <flatcc_json_printer_union_table@@Base+0x90>
   20344:	mov	r1, r5
   20348:	mov	r0, r4
   2034c:	bl	14bc8 <test_print@@Base+0x120c>
   20350:	ldr	r3, [r4, #20]
   20354:	b	202dc <flatcc_json_printer_union_table@@Base+0x90>

00020358 <flatcc_json_printer_union_struct@@Base>:
   20358:	ldr	r3, [r0, #32]
   2035c:	ldr	ip, [r0, #20]
   20360:	push	{r4, r5, r6, lr}
   20364:	add	r3, r3, #1
   20368:	mov	lr, #123	; 0x7b
   2036c:	add	r5, ip, #1
   20370:	str	r3, [r0, #32]
   20374:	str	r5, [r0, #20]
   20378:	strb	lr, [ip]
   2037c:	ldr	r3, [r1]
   20380:	mov	r4, r0
   20384:	ldr	r1, [r3]
   20388:	add	r1, r3, r1
   2038c:	blx	r2
   20390:	ldrb	r3, [r4, #25]
   20394:	cmp	r3, #0
   20398:	bne	203b4 <flatcc_json_printer_union_struct@@Base+0x5c>
   2039c:	ldr	r1, [r4, #20]
   203a0:	add	r2, r1, #1
   203a4:	mov	r3, #125	; 0x7d
   203a8:	str	r2, [r4, #20]
   203ac:	strb	r3, [r1]
   203b0:	pop	{r4, r5, r6, pc}
   203b4:	ldr	r3, [r4, #20]
   203b8:	mov	r2, #10
   203bc:	add	r1, r3, #1
   203c0:	str	r1, [r4, #20]
   203c4:	strb	r2, [r3]
   203c8:	ldr	r3, [r4, #32]
   203cc:	ldrb	r1, [r4, #25]
   203d0:	sub	r3, r3, #1
   203d4:	ldr	r0, [r4, #20]
   203d8:	ldr	r2, [r4, #16]
   203dc:	mul	r5, r3, r1
   203e0:	str	r3, [r4, #32]
   203e4:	add	r3, r0, r5
   203e8:	cmp	r2, r3
   203ec:	bcc	20408 <flatcc_json_printer_union_struct@@Base+0xb0>
   203f0:	mov	r1, #32
   203f4:	mov	r2, r5
   203f8:	bl	124e0 <memset@plt>
   203fc:	ldr	r1, [r4, #20]
   20400:	add	r1, r1, r5
   20404:	b	203a0 <flatcc_json_printer_union_struct@@Base+0x48>
   20408:	mov	r1, r5
   2040c:	mov	r0, r4
   20410:	bl	14bc8 <test_print@@Base+0x120c>
   20414:	b	2039c <flatcc_json_printer_union_struct@@Base+0x44>

00020418 <flatcc_json_printer_union_string@@Base>:
   20418:	ldr	r3, [r1]
   2041c:	ldr	r2, [r3]
   20420:	add	r1, r3, r2
   20424:	add	r1, r1, #4
   20428:	ldr	r2, [r3, r2]
   2042c:	b	15dbc <test_print@@Base+0x2400>

00020430 <flatcc_json_printer_embedded_struct_field@@Base>:
   20430:	cmp	r1, #0
   20434:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20438:	mov	r8, r3
   2043c:	ldrne	r3, [r0, #20]
   20440:	mov	r7, r2
   20444:	addne	r1, r3, #1
   20448:	movne	r2, #44	; 0x2c
   2044c:	strne	r1, [r0, #20]
   20450:	strbne	r2, [r3]
   20454:	ldrb	r1, [r0, #25]
   20458:	mov	r4, r0
   2045c:	ldr	r6, [sp, #36]	; 0x24
   20460:	cmp	r1, #0
   20464:	ldr	r5, [sp, #40]	; 0x28
   20468:	bne	205cc <flatcc_json_printer_embedded_struct_field@@Base+0x19c>
   2046c:	ldr	r2, [r0, #20]
   20470:	ldr	r3, [r0, #16]
   20474:	cmp	r2, r3
   20478:	bcs	20554 <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   2047c:	mov	r3, #34	; 0x22
   20480:	strb	r3, [r2]
   20484:	ldrb	r3, [r4, #26]
   20488:	ldr	r0, [r4, #20]
   2048c:	ldr	r2, [r4, #16]
   20490:	cmp	r3, #0
   20494:	addeq	r0, r0, #1
   20498:	add	r3, r0, r6
   2049c:	cmp	r2, r3
   204a0:	str	r0, [r4, #20]
   204a4:	mov	r2, r6
   204a8:	ldr	r1, [sp, #32]
   204ac:	bhi	20564 <flatcc_json_printer_embedded_struct_field@@Base+0x134>
   204b0:	mov	r0, r4
   204b4:	bl	14b18 <test_print@@Base+0x115c>
   204b8:	ldr	r6, [r4, #20]
   204bc:	mov	r3, #34	; 0x22
   204c0:	strb	r3, [r6]
   204c4:	ldr	r1, [r4, #20]
   204c8:	ldrb	r2, [r4, #26]
   204cc:	clz	r2, r2
   204d0:	lsr	r2, r2, #5
   204d4:	add	r3, r1, r2
   204d8:	add	r3, r3, #1
   204dc:	mov	r0, #58	; 0x3a
   204e0:	str	r3, [r4, #20]
   204e4:	strb	r0, [r1, r2]
   204e8:	ldr	r3, [r4, #20]
   204ec:	mov	r6, #32
   204f0:	add	r1, r7, r8
   204f4:	strb	r6, [r3]
   204f8:	ldrb	r3, [r4, #25]
   204fc:	ldr	ip, [r4, #20]
   20500:	ldr	r2, [r4, #32]
   20504:	adds	r3, r3, #0
   20508:	movne	r3, #1
   2050c:	add	r0, ip, r3
   20510:	add	r0, r0, #1
   20514:	str	r0, [r4, #20]
   20518:	add	r2, r2, #1
   2051c:	mov	r0, #123	; 0x7b
   20520:	str	r2, [r4, #32]
   20524:	strb	r0, [ip, r3]
   20528:	mov	r0, r4
   2052c:	blx	r5
   20530:	ldrb	r3, [r4, #25]
   20534:	cmp	r3, #0
   20538:	bne	20578 <flatcc_json_printer_embedded_struct_field@@Base+0x148>
   2053c:	ldr	r1, [r4, #20]
   20540:	add	r2, r1, #1
   20544:	mov	r3, #125	; 0x7d
   20548:	str	r2, [r4, #20]
   2054c:	strb	r3, [r1]
   20550:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20554:	ldr	r3, [r0, #44]	; 0x2c
   20558:	blx	r3
   2055c:	ldr	r2, [r4, #20]
   20560:	b	2047c <flatcc_json_printer_embedded_struct_field@@Base+0x4c>
   20564:	bl	12444 <memcpy@plt>
   20568:	ldr	r3, [r4, #20]
   2056c:	add	r6, r3, r6
   20570:	str	r6, [r4, #20]
   20574:	b	204bc <flatcc_json_printer_embedded_struct_field@@Base+0x8c>
   20578:	ldr	r3, [r4, #20]
   2057c:	mov	r2, #10
   20580:	add	r1, r3, #1
   20584:	str	r1, [r4, #20]
   20588:	strb	r2, [r3]
   2058c:	ldr	r3, [r4, #32]
   20590:	ldrb	r1, [r4, #25]
   20594:	sub	r3, r3, #1
   20598:	ldr	r0, [r4, #20]
   2059c:	ldr	r2, [r4, #16]
   205a0:	mul	r5, r3, r1
   205a4:	str	r3, [r4, #32]
   205a8:	add	r3, r0, r5
   205ac:	cmp	r2, r3
   205b0:	bcc	20630 <flatcc_json_printer_embedded_struct_field@@Base+0x200>
   205b4:	mov	r1, r6
   205b8:	mov	r2, r5
   205bc:	bl	124e0 <memset@plt>
   205c0:	ldr	r1, [r4, #20]
   205c4:	add	r1, r1, r5
   205c8:	b	20540 <flatcc_json_printer_embedded_struct_field@@Base+0x110>
   205cc:	ldr	r3, [r0, #20]
   205d0:	mov	r2, #10
   205d4:	add	r1, r3, #1
   205d8:	str	r1, [r0, #20]
   205dc:	strb	r2, [r3]
   205e0:	ldrb	r3, [r0, #25]
   205e4:	ldr	r2, [r0, #32]
   205e8:	ldr	r0, [r0, #20]
   205ec:	ldr	r1, [r4, #16]
   205f0:	mul	r9, r2, r3
   205f4:	add	r3, r0, r9
   205f8:	cmp	r1, r3
   205fc:	bcc	2061c <flatcc_json_printer_embedded_struct_field@@Base+0x1ec>
   20600:	mov	r2, r9
   20604:	mov	r1, #32
   20608:	bl	124e0 <memset@plt>
   2060c:	ldr	r2, [r4, #20]
   20610:	add	r2, r2, r9
   20614:	str	r2, [r4, #20]
   20618:	b	2047c <flatcc_json_printer_embedded_struct_field@@Base+0x4c>
   2061c:	mov	r1, r9
   20620:	mov	r0, r4
   20624:	bl	14bc8 <test_print@@Base+0x120c>
   20628:	ldr	r2, [r4, #20]
   2062c:	b	2047c <flatcc_json_printer_embedded_struct_field@@Base+0x4c>
   20630:	mov	r1, r5
   20634:	mov	r0, r4
   20638:	bl	14bc8 <test_print@@Base+0x120c>
   2063c:	b	2053c <flatcc_json_printer_embedded_struct_field@@Base+0x10c>

00020640 <flatcc_json_printer_struct_field@@Base>:
   20640:	add	r2, r2, #2
   20644:	ldr	ip, [r1, #8]
   20648:	lsl	r2, r2, #1
   2064c:	cmp	r2, ip
   20650:	push	{r4, r5, r6, r7, r8, lr}
   20654:	ldr	r6, [sp, #24]
   20658:	popge	{r4, r5, r6, r7, r8, pc}
   2065c:	ldr	ip, [r1, #4]
   20660:	ldrh	r2, [ip, r2]
   20664:	cmp	r2, #0
   20668:	popeq	{r4, r5, r6, r7, r8, pc}
   2066c:	ldr	r5, [r1]
   20670:	adds	r5, r5, r2
   20674:	popeq	{r4, r5, r6, r7, r8, pc}
   20678:	ldr	r2, [r1, #16]
   2067c:	mov	r7, r3
   20680:	cmp	r2, #0
   20684:	add	r2, r2, #1
   20688:	str	r2, [r1, #16]
   2068c:	ldrne	r2, [r0, #20]
   20690:	movne	r1, #44	; 0x2c
   20694:	addne	ip, r2, #1
   20698:	strne	ip, [r0, #20]
   2069c:	strbne	r1, [r2]
   206a0:	ldrb	r1, [r0, #25]
   206a4:	mov	r4, r0
   206a8:	cmp	r1, #0
   206ac:	bne	20828 <flatcc_json_printer_struct_field@@Base+0x1e8>
   206b0:	ldr	r2, [r0, #20]
   206b4:	ldr	r3, [r0, #16]
   206b8:	cmp	r2, r3
   206bc:	bcc	206cc <flatcc_json_printer_struct_field@@Base+0x8c>
   206c0:	ldr	r3, [r0, #44]	; 0x2c
   206c4:	blx	r3
   206c8:	ldr	r2, [r4, #20]
   206cc:	mov	r3, #34	; 0x22
   206d0:	strb	r3, [r2]
   206d4:	ldrb	r3, [r4, #26]
   206d8:	ldr	r0, [r4, #20]
   206dc:	ldr	r2, [r4, #16]
   206e0:	cmp	r3, #0
   206e4:	addeq	r0, r0, #1
   206e8:	add	r3, r0, r6
   206ec:	cmp	r2, r3
   206f0:	str	r0, [r4, #20]
   206f4:	bhi	207a8 <flatcc_json_printer_struct_field@@Base+0x168>
   206f8:	mov	r2, r6
   206fc:	mov	r1, r7
   20700:	mov	r0, r4
   20704:	bl	14b18 <test_print@@Base+0x115c>
   20708:	ldr	r6, [r4, #20]
   2070c:	mov	r3, #34	; 0x22
   20710:	strb	r3, [r6]
   20714:	ldr	r1, [r4, #20]
   20718:	ldrb	r3, [r4, #26]
   2071c:	clz	r3, r3
   20720:	lsr	r3, r3, #5
   20724:	add	r2, r1, r3
   20728:	add	r2, r2, #1
   2072c:	mov	r0, #58	; 0x3a
   20730:	str	r2, [r4, #20]
   20734:	strb	r0, [r1, r3]
   20738:	ldr	r3, [r4, #20]
   2073c:	mov	r6, #32
   20740:	mov	lr, #123	; 0x7b
   20744:	strb	r6, [r3]
   20748:	ldrb	r3, [r4, #25]
   2074c:	ldr	ip, [r4, #20]
   20750:	ldr	r2, [r4, #32]
   20754:	adds	r3, r3, #0
   20758:	movne	r3, #1
   2075c:	add	r0, ip, r3
   20760:	add	r0, r0, #1
   20764:	add	r2, r2, #1
   20768:	str	r0, [r4, #20]
   2076c:	str	r2, [r4, #32]
   20770:	mov	r1, r5
   20774:	strb	lr, [ip, r3]
   20778:	mov	r0, r4
   2077c:	ldr	r3, [sp, #28]
   20780:	blx	r3
   20784:	ldrb	r3, [r4, #25]
   20788:	cmp	r3, #0
   2078c:	bne	207c4 <flatcc_json_printer_struct_field@@Base+0x184>
   20790:	ldr	r1, [r4, #20]
   20794:	add	r2, r1, #1
   20798:	mov	r3, #125	; 0x7d
   2079c:	str	r2, [r4, #20]
   207a0:	strb	r3, [r1]
   207a4:	pop	{r4, r5, r6, r7, r8, pc}
   207a8:	mov	r2, r6
   207ac:	mov	r1, r7
   207b0:	bl	12444 <memcpy@plt>
   207b4:	ldr	r3, [r4, #20]
   207b8:	add	r6, r3, r6
   207bc:	str	r6, [r4, #20]
   207c0:	b	2070c <flatcc_json_printer_struct_field@@Base+0xcc>
   207c4:	ldr	r3, [r4, #20]
   207c8:	mov	r2, #10
   207cc:	add	r1, r3, #1
   207d0:	str	r1, [r4, #20]
   207d4:	strb	r2, [r3]
   207d8:	ldr	r3, [r4, #32]
   207dc:	ldrb	r1, [r4, #25]
   207e0:	sub	r3, r3, #1
   207e4:	ldr	r0, [r4, #20]
   207e8:	ldr	r2, [r4, #16]
   207ec:	mul	r5, r3, r1
   207f0:	str	r3, [r4, #32]
   207f4:	add	r3, r0, r5
   207f8:	cmp	r2, r3
   207fc:	bcc	20818 <flatcc_json_printer_struct_field@@Base+0x1d8>
   20800:	mov	r1, r6
   20804:	mov	r2, r5
   20808:	bl	124e0 <memset@plt>
   2080c:	ldr	r1, [r4, #20]
   20810:	add	r1, r1, r5
   20814:	b	20794 <flatcc_json_printer_struct_field@@Base+0x154>
   20818:	mov	r1, r5
   2081c:	mov	r0, r4
   20820:	bl	14bc8 <test_print@@Base+0x120c>
   20824:	b	20790 <flatcc_json_printer_struct_field@@Base+0x150>
   20828:	ldr	r3, [r0, #20]
   2082c:	mov	r2, #10
   20830:	add	r1, r3, #1
   20834:	str	r1, [r0, #20]
   20838:	strb	r2, [r3]
   2083c:	ldrb	r8, [r0, #25]
   20840:	ldr	r2, [r0, #32]
   20844:	ldr	r0, [r0, #20]
   20848:	ldr	r1, [r4, #16]
   2084c:	mul	r8, r2, r8
   20850:	add	r3, r0, r8
   20854:	cmp	r1, r3
   20858:	bcc	20878 <flatcc_json_printer_struct_field@@Base+0x238>
   2085c:	mov	r2, r8
   20860:	mov	r1, #32
   20864:	bl	124e0 <memset@plt>
   20868:	ldr	r2, [r4, #20]
   2086c:	add	r2, r2, r8
   20870:	str	r2, [r4, #20]
   20874:	b	206cc <flatcc_json_printer_struct_field@@Base+0x8c>
   20878:	mov	r1, r8
   2087c:	mov	r0, r4
   20880:	bl	14bc8 <test_print@@Base+0x120c>
   20884:	ldr	r2, [r4, #20]
   20888:	b	206cc <flatcc_json_printer_struct_field@@Base+0x8c>

0002088c <flatcc_json_printer_struct_as_root@@Base>:
   2088c:	push	{r4, r5, r6, lr}
   20890:	mov	r4, r0
   20894:	mov	r5, r1
   20898:	bl	14f50 <test_print@@Base+0x1594>
   2089c:	cmp	r0, #0
   208a0:	beq	209bc <flatcc_json_printer_struct_as_root@@Base+0x130>
   208a4:	ldr	r3, [r4, #32]
   208a8:	ldr	r2, [r4, #20]
   208ac:	add	r3, r3, #1
   208b0:	add	r0, r2, #1
   208b4:	mov	r1, #123	; 0x7b
   208b8:	str	r3, [r4, #32]
   208bc:	str	r0, [r4, #20]
   208c0:	strb	r1, [r2]
   208c4:	ldr	r1, [r5]
   208c8:	ldr	r3, [sp, #16]
   208cc:	mov	r0, r4
   208d0:	add	r1, r5, r1
   208d4:	blx	r3
   208d8:	ldrb	r3, [r4, #25]
   208dc:	cmp	r3, #0
   208e0:	bne	20958 <flatcc_json_printer_struct_as_root@@Base+0xcc>
   208e4:	ldr	r1, [r4, #20]
   208e8:	mov	r3, #125	; 0x7d
   208ec:	add	r2, r1, #1
   208f0:	str	r2, [r4, #20]
   208f4:	strb	r3, [r1]
   208f8:	ldrb	r3, [r4, #25]
   208fc:	cmp	r3, #0
   20900:	bne	20938 <flatcc_json_printer_struct_as_root@@Base+0xac>
   20904:	ldr	r3, [r4, #44]	; 0x2c
   20908:	mov	r1, #1
   2090c:	mov	r0, r4
   20910:	blx	r3
   20914:	ldr	r3, [r4, #36]	; 0x24
   20918:	cmp	r3, #0
   2091c:	bne	209bc <flatcc_json_printer_struct_as_root@@Base+0x130>
   20920:	ldr	r0, [r4, #20]
   20924:	ldr	r2, [r4]
   20928:	ldr	r3, [r4, #12]
   2092c:	sub	r0, r0, r2
   20930:	add	r0, r0, r3
   20934:	pop	{r4, r5, r6, pc}
   20938:	ldr	r3, [r4, #32]
   2093c:	cmp	r3, #0
   20940:	moveq	r2, #10
   20944:	ldreq	r3, [r4, #20]
   20948:	addeq	r1, r3, #1
   2094c:	streq	r1, [r4, #20]
   20950:	strbeq	r2, [r3]
   20954:	b	20904 <flatcc_json_printer_struct_as_root@@Base+0x78>
   20958:	ldr	r3, [r4, #20]
   2095c:	mov	r2, #10
   20960:	add	r1, r3, #1
   20964:	str	r1, [r4, #20]
   20968:	strb	r2, [r3]
   2096c:	ldr	r3, [r4, #32]
   20970:	ldrb	r1, [r4, #25]
   20974:	sub	r3, r3, #1
   20978:	ldr	r0, [r4, #20]
   2097c:	ldr	r2, [r4, #16]
   20980:	mul	r5, r3, r1
   20984:	str	r3, [r4, #32]
   20988:	add	r3, r0, r5
   2098c:	cmp	r2, r3
   20990:	bcc	209ac <flatcc_json_printer_struct_as_root@@Base+0x120>
   20994:	mov	r1, #32
   20998:	mov	r2, r5
   2099c:	bl	124e0 <memset@plt>
   209a0:	ldr	r1, [r4, #20]
   209a4:	add	r1, r1, r5
   209a8:	b	208e8 <flatcc_json_printer_struct_as_root@@Base+0x5c>
   209ac:	mov	r1, r5
   209b0:	mov	r0, r4
   209b4:	bl	14bc8 <test_print@@Base+0x120c>
   209b8:	b	208e4 <flatcc_json_printer_struct_as_root@@Base+0x58>
   209bc:	mvn	r0, #0
   209c0:	pop	{r4, r5, r6, pc}

000209c4 <flatcc_json_printer_table_as_root@@Base>:
   209c4:	push	{r4, r5, lr}
   209c8:	sub	sp, sp, #28
   209cc:	mov	r4, r0
   209d0:	mov	r5, r1
   209d4:	bl	14f50 <test_print@@Base+0x1594>
   209d8:	cmp	r0, #0
   209dc:	beq	20ac4 <flatcc_json_printer_table_as_root@@Base+0x100>
   209e0:	ldr	r2, [r5]
   209e4:	ldr	r1, [r4, #20]
   209e8:	ldr	r3, [r4, #32]
   209ec:	add	ip, r1, #1
   209f0:	add	r3, r3, #1
   209f4:	mov	r0, #123	; 0x7b
   209f8:	str	r3, [r4, #32]
   209fc:	str	ip, [r4, #20]
   20a00:	strb	r0, [r1]
   20a04:	ldr	r3, [r5, r2]
   20a08:	add	r5, r5, r2
   20a0c:	sub	r3, r5, r3
   20a10:	mov	ip, #0
   20a14:	ldrh	lr, [r3]
   20a18:	mov	r2, #99	; 0x63
   20a1c:	str	r3, [sp, #8]
   20a20:	add	r1, sp, #4
   20a24:	ldr	r3, [sp, #40]	; 0x28
   20a28:	mov	r0, r4
   20a2c:	str	lr, [sp, #12]
   20a30:	str	r5, [sp, #4]
   20a34:	str	ip, [sp, #20]
   20a38:	str	r2, [sp, #16]
   20a3c:	blx	r3
   20a40:	ldrb	r3, [r4, #25]
   20a44:	cmp	r3, #0
   20a48:	ldr	r3, [r4, #20]
   20a4c:	bne	20ad0 <flatcc_json_printer_table_as_root@@Base+0x10c>
   20a50:	add	r1, r3, #1
   20a54:	mov	r2, #125	; 0x7d
   20a58:	str	r1, [r4, #20]
   20a5c:	strb	r2, [r3]
   20a60:	ldrb	r3, [r4, #25]
   20a64:	cmp	r3, #0
   20a68:	bne	20aa4 <flatcc_json_printer_table_as_root@@Base+0xe0>
   20a6c:	ldr	r3, [r4, #44]	; 0x2c
   20a70:	mov	r1, #1
   20a74:	mov	r0, r4
   20a78:	blx	r3
   20a7c:	ldr	r3, [r4, #36]	; 0x24
   20a80:	cmp	r3, #0
   20a84:	bne	20ac4 <flatcc_json_printer_table_as_root@@Base+0x100>
   20a88:	ldr	r0, [r4, #20]
   20a8c:	ldr	r2, [r4]
   20a90:	ldr	r3, [r4, #12]
   20a94:	sub	r0, r0, r2
   20a98:	add	r0, r0, r3
   20a9c:	add	sp, sp, #28
   20aa0:	pop	{r4, r5, pc}
   20aa4:	ldr	r3, [r4, #32]
   20aa8:	cmp	r3, #0
   20aac:	moveq	r2, #10
   20ab0:	ldreq	r3, [r4, #20]
   20ab4:	addeq	r1, r3, #1
   20ab8:	streq	r1, [r4, #20]
   20abc:	strbeq	r2, [r3]
   20ac0:	b	20a6c <flatcc_json_printer_table_as_root@@Base+0xa8>
   20ac4:	mvn	r0, #0
   20ac8:	add	sp, sp, #28
   20acc:	pop	{r4, r5, pc}
   20ad0:	add	r1, r3, #1
   20ad4:	mov	r2, #10
   20ad8:	str	r1, [r4, #20]
   20adc:	strb	r2, [r3]
   20ae0:	ldr	r2, [r4, #32]
   20ae4:	ldrb	r3, [r4, #25]
   20ae8:	sub	r2, r2, #1
   20aec:	ldr	r0, [r4, #20]
   20af0:	ldr	r1, [r4, #16]
   20af4:	mul	r5, r2, r3
   20af8:	str	r2, [r4, #32]
   20afc:	add	r3, r0, r5
   20b00:	cmp	r1, r3
   20b04:	bcc	20b20 <flatcc_json_printer_table_as_root@@Base+0x15c>
   20b08:	mov	r2, r5
   20b0c:	mov	r1, #32
   20b10:	bl	124e0 <memset@plt>
   20b14:	ldr	r3, [r4, #20]
   20b18:	add	r3, r3, r5
   20b1c:	b	20a50 <flatcc_json_printer_table_as_root@@Base+0x8c>
   20b20:	mov	r1, r5
   20b24:	mov	r0, r4
   20b28:	bl	14bc8 <test_print@@Base+0x120c>
   20b2c:	ldr	r3, [r4, #20]
   20b30:	b	20a50 <flatcc_json_printer_table_as_root@@Base+0x8c>

00020b34 <flatcc_json_printer_struct_as_nested_root@@Base>:
   20b34:	add	r2, r2, #2
   20b38:	ldr	ip, [r1, #8]
   20b3c:	lsl	r2, r2, #1
   20b40:	cmp	r2, ip
   20b44:	bxge	lr
   20b48:	ldr	ip, [r1, #4]
   20b4c:	ldrh	r2, [ip, r2]
   20b50:	cmp	r2, #0
   20b54:	bxeq	lr
   20b58:	ldr	ip, [r1]
   20b5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20b60:	adds	r8, ip, r2
   20b64:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   20b68:	ldr	r7, [ip, r2]
   20b6c:	mov	r6, r3
   20b70:	add	r9, r8, r7
   20b74:	mov	r5, r1
   20b78:	ldr	r3, [sp, #36]	; 0x24
   20b7c:	mov	r1, r9
   20b80:	ldr	r2, [r8, r7]
   20b84:	mov	r4, r0
   20b88:	bl	14f50 <test_print@@Base+0x1594>
   20b8c:	cmp	r0, #0
   20b90:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   20b94:	ldr	r3, [r5, #16]
   20b98:	mov	r0, r4
   20b9c:	cmp	r3, #0
   20ba0:	add	r3, r3, #1
   20ba4:	str	r3, [r5, #16]
   20ba8:	ldrne	r3, [r4, #20]
   20bac:	movne	r2, #44	; 0x2c
   20bb0:	addne	r1, r3, #1
   20bb4:	strne	r1, [r4, #20]
   20bb8:	strbne	r2, [r3]
   20bbc:	mov	r1, r6
   20bc0:	ldr	r2, [sp, #32]
   20bc4:	bl	15fdc <test_print@@Base+0x2620>
   20bc8:	ldr	r3, [r4, #32]
   20bcc:	ldr	r2, [r4, #20]
   20bd0:	add	r3, r3, #1
   20bd4:	add	r0, r2, #1
   20bd8:	mov	r1, #123	; 0x7b
   20bdc:	str	r3, [r4, #32]
   20be0:	str	r0, [r4, #20]
   20be4:	strb	r1, [r2]
   20be8:	ldr	r1, [r8, r7]
   20bec:	ldr	r3, [sp, #40]	; 0x28
   20bf0:	mov	r0, r4
   20bf4:	add	r1, r9, r1
   20bf8:	blx	r3
   20bfc:	ldrb	r3, [r4, #25]
   20c00:	cmp	r3, #0
   20c04:	bne	20c20 <flatcc_json_printer_struct_as_nested_root@@Base+0xec>
   20c08:	ldr	r1, [r4, #20]
   20c0c:	add	r2, r1, #1
   20c10:	mov	r3, #125	; 0x7d
   20c14:	str	r2, [r4, #20]
   20c18:	strb	r3, [r1]
   20c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20c20:	ldr	r3, [r4, #20]
   20c24:	mov	r2, #10
   20c28:	add	r1, r3, #1
   20c2c:	str	r1, [r4, #20]
   20c30:	strb	r2, [r3]
   20c34:	ldr	r3, [r4, #32]
   20c38:	ldrb	r1, [r4, #25]
   20c3c:	sub	r3, r3, #1
   20c40:	ldr	r0, [r4, #20]
   20c44:	ldr	r2, [r4, #16]
   20c48:	mul	r5, r3, r1
   20c4c:	str	r3, [r4, #32]
   20c50:	add	r3, r0, r5
   20c54:	cmp	r2, r3
   20c58:	bcc	20c74 <flatcc_json_printer_struct_as_nested_root@@Base+0x140>
   20c5c:	mov	r1, #32
   20c60:	mov	r2, r5
   20c64:	bl	124e0 <memset@plt>
   20c68:	ldr	r1, [r4, #20]
   20c6c:	add	r1, r1, r5
   20c70:	b	20c0c <flatcc_json_printer_struct_as_nested_root@@Base+0xd8>
   20c74:	mov	r1, r5
   20c78:	mov	r0, r4
   20c7c:	bl	14bc8 <test_print@@Base+0x120c>
   20c80:	b	20c08 <flatcc_json_printer_struct_as_nested_root@@Base+0xd4>

00020c84 <flatcc_json_printer_table_as_nested_root@@Base>:
   20c84:	add	r2, r2, #2
   20c88:	ldr	ip, [r1, #8]
   20c8c:	lsl	r2, r2, #1
   20c90:	cmp	r2, ip
   20c94:	bxge	lr
   20c98:	ldr	ip, [r1, #4]
   20c9c:	ldrh	r2, [ip, r2]
   20ca0:	cmp	r2, #0
   20ca4:	bxeq	lr
   20ca8:	push	{r4, r5, r6, r7, r8, lr}
   20cac:	sub	sp, sp, #24
   20cb0:	ldr	lr, [r1]
   20cb4:	adds	ip, lr, r2
   20cb8:	beq	20d3c <flatcc_json_printer_table_as_nested_root@@Base+0xb8>
   20cbc:	ldr	r2, [lr, r2]
   20cc0:	mov	r6, r3
   20cc4:	add	r8, ip, r2
   20cc8:	add	r7, r8, #4
   20ccc:	mov	r4, r1
   20cd0:	ldr	r3, [sp, #52]	; 0x34
   20cd4:	ldr	r2, [ip, r2]
   20cd8:	mov	r1, r7
   20cdc:	mov	r5, r0
   20ce0:	bl	14f50 <test_print@@Base+0x1594>
   20ce4:	cmp	r0, #0
   20ce8:	beq	20d3c <flatcc_json_printer_table_as_nested_root@@Base+0xb8>
   20cec:	ldr	r3, [r4, #16]
   20cf0:	mov	r0, r5
   20cf4:	cmp	r3, #0
   20cf8:	add	r3, r3, #1
   20cfc:	str	r3, [r4, #16]
   20d00:	ldrne	r3, [r5, #20]
   20d04:	movne	r2, #44	; 0x2c
   20d08:	addne	r1, r3, #1
   20d0c:	strne	r1, [r5, #20]
   20d10:	strbne	r2, [r3]
   20d14:	mov	r1, r6
   20d18:	ldr	r2, [sp, #48]	; 0x30
   20d1c:	bl	15fdc <test_print@@Base+0x2620>
   20d20:	ldr	r3, [r4, #12]
   20d24:	subs	r3, r3, #1
   20d28:	bne	20d44 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
   20d2c:	ldr	r3, [r5, #36]	; 0x24
   20d30:	cmp	r3, #0
   20d34:	moveq	r3, #2
   20d38:	streq	r3, [r5, #36]	; 0x24
   20d3c:	add	sp, sp, #24
   20d40:	pop	{r4, r5, r6, r7, r8, pc}
   20d44:	ldr	r2, [r5, #32]
   20d48:	ldr	r1, [r8, #4]
   20d4c:	ldr	r0, [r5, #20]
   20d50:	add	r2, r2, #1
   20d54:	str	r2, [r5, #32]
   20d58:	add	lr, r0, #1
   20d5c:	mov	ip, #123	; 0x7b
   20d60:	mov	r2, #0
   20d64:	str	lr, [r5, #20]
   20d68:	strb	ip, [r0]
   20d6c:	str	r2, [sp, #20]
   20d70:	str	r3, [sp, #16]
   20d74:	ldr	r3, [r7, r1]
   20d78:	add	r7, r7, r1
   20d7c:	sub	r3, r7, r3
   20d80:	add	r1, sp, #4
   20d84:	ldrh	r2, [r3]
   20d88:	mov	r0, r5
   20d8c:	str	r3, [sp, #8]
   20d90:	ldr	r3, [sp, #56]	; 0x38
   20d94:	str	r2, [sp, #12]
   20d98:	str	r7, [sp, #4]
   20d9c:	blx	r3
   20da0:	ldrb	r3, [r5, #25]
   20da4:	cmp	r3, #0
   20da8:	bne	20dc8 <flatcc_json_printer_table_as_nested_root@@Base+0x144>
   20dac:	ldr	r3, [r5, #20]
   20db0:	mov	r2, #125	; 0x7d
   20db4:	add	r1, r3, #1
   20db8:	str	r1, [r5, #20]
   20dbc:	strb	r2, [r3]
   20dc0:	add	sp, sp, #24
   20dc4:	pop	{r4, r5, r6, r7, r8, pc}
   20dc8:	ldr	r3, [r5, #20]
   20dcc:	mov	r2, #10
   20dd0:	add	r1, r3, #1
   20dd4:	str	r1, [r5, #20]
   20dd8:	strb	r2, [r3]
   20ddc:	ldr	r3, [r5, #32]
   20de0:	mov	r0, r5
   20de4:	sub	r3, r3, #1
   20de8:	str	r3, [r5, #32]
   20dec:	bl	14c74 <test_print@@Base+0x12b8>
   20df0:	b	20dac <flatcc_json_printer_table_as_nested_root@@Base+0x128>

00020df4 <flatcc_json_printer_init@@Base>:
   20df4:	push	{r4, r5, r6, lr}
   20df8:	mov	r2, #48	; 0x30
   20dfc:	mov	r5, r1
   20e00:	mov	r1, #0
   20e04:	mov	r4, r0
   20e08:	bl	124e0 <memset@plt>
   20e0c:	ldr	r3, [pc, #104]	; 20e7c <flatcc_json_printer_init@@Base+0x88>
   20e10:	cmp	r5, #0
   20e14:	add	r3, pc, r3
   20e18:	beq	20e6c <flatcc_json_printer_init@@Base+0x78>
   20e1c:	ldr	r3, [pc, #92]	; 20e80 <flatcc_json_printer_init@@Base+0x8c>
   20e20:	ldr	r6, [pc, #92]	; 20e84 <flatcc_json_printer_init@@Base+0x90>
   20e24:	add	r3, pc, r3
   20e28:	str	r3, [r4, #44]	; 0x2c
   20e2c:	str	r5, [r4, #40]	; 0x28
   20e30:	mov	r0, r6
   20e34:	bl	124a4 <malloc@plt>
   20e38:	cmp	r0, #0
   20e3c:	addne	r1, r0, #16384	; 0x4000
   20e40:	movne	r2, #1
   20e44:	movne	r3, #16384	; 0x4000
   20e48:	str	r0, [r4]
   20e4c:	strne	r0, [r4, #20]
   20e50:	strne	r6, [r4, #4]
   20e54:	movne	r0, #0
   20e58:	strne	r1, [r4, #16]
   20e5c:	strbne	r2, [r4, #24]
   20e60:	strne	r3, [r4, #8]
   20e64:	mvneq	r0, #0
   20e68:	pop	{r4, r5, r6, pc}
   20e6c:	ldr	r2, [pc, #20]	; 20e88 <flatcc_json_printer_init@@Base+0x94>
   20e70:	ldr	r3, [r3, r2]
   20e74:	ldr	r5, [r3]
   20e78:	b	20e1c <flatcc_json_printer_init@@Base+0x28>
   20e7c:	andeq	r2, r1, r4, ror #3
   20e80:			; <UNDEFINED> instruction: 0xffff3e9c
   20e84:	andeq	r4, r0, r0, asr #32
   20e88:	andeq	r0, r0, r0, lsl #1

00020e8c <flatcc_json_printer_init_buffer@@Base>:
   20e8c:	cmp	r2, #63	; 0x3f
   20e90:	push	{r4, r5, r6, lr}
   20e94:	bls	20ee0 <flatcc_json_printer_init_buffer@@Base+0x54>
   20e98:	mov	r6, r1
   20e9c:	mov	r5, r2
   20ea0:	mov	r1, #0
   20ea4:	mov	r2, #48	; 0x30
   20ea8:	mov	r4, r0
   20eac:	bl	124e0 <memset@plt>
   20eb0:	ldr	r3, [pc, #76]	; 20f04 <flatcc_json_printer_init_buffer@@Base+0x78>
   20eb4:	sub	r2, r5, #64	; 0x40
   20eb8:	add	r3, pc, r3
   20ebc:	add	r1, r6, r2
   20ec0:	str	r6, [r4]
   20ec4:	str	r5, [r4, #4]
   20ec8:	str	r2, [r4, #8]
   20ecc:	str	r1, [r4, #16]
   20ed0:	str	r6, [r4, #20]
   20ed4:	str	r3, [r4, #44]	; 0x2c
   20ed8:	mov	r0, #0
   20edc:	pop	{r4, r5, r6, pc}
   20ee0:	ldr	r3, [pc, #32]	; 20f08 <flatcc_json_printer_init_buffer@@Base+0x7c>
   20ee4:	ldr	r1, [pc, #32]	; 20f0c <flatcc_json_printer_init_buffer@@Base+0x80>
   20ee8:	ldr	r0, [pc, #32]	; 20f10 <flatcc_json_printer_init_buffer@@Base+0x84>
   20eec:	add	r3, pc, r3
   20ef0:	ldr	r2, [pc, #28]	; 20f14 <flatcc_json_printer_init_buffer@@Base+0x88>
   20ef4:	add	r3, r3, #1824	; 0x720
   20ef8:	add	r1, pc, r1
   20efc:	add	r0, pc, r0
   20f00:	bl	12528 <__assert_fail@plt>
   20f04:			; <UNDEFINED> instruction: 0xffff3c10
   20f08:	ldrdeq	r0, [r0], -r4
   20f0c:	andeq	r1, r0, r0, lsr #9
   20f10:	andeq	r1, r0, r8, ror #13
   20f14:	andeq	r0, r0, sp, lsl #9

00020f18 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   20f18:	cmp	r1, #0
   20f1c:	push	{r4, r5, r6, lr}
   20f20:	mov	r4, r0
   20f24:	moveq	r6, #4032	; 0xfc0
   20f28:	moveq	r5, #4096	; 0x1000
   20f2c:	beq	20f40 <flatcc_json_printer_init_dynamic_buffer@@Base+0x28>
   20f30:	cmp	r1, #64	; 0x40
   20f34:	movcs	r5, r1
   20f38:	movcc	r5, #64	; 0x40
   20f3c:	sub	r6, r5, #64	; 0x40
   20f40:	mov	r2, #48	; 0x30
   20f44:	mov	r1, #0
   20f48:	mov	r0, r4
   20f4c:	bl	124e0 <memset@plt>
   20f50:	mov	r0, r5
   20f54:	bl	124a4 <malloc@plt>
   20f58:	ldr	r3, [pc, #84]	; 20fb4 <flatcc_json_printer_init_dynamic_buffer@@Base+0x9c>
   20f5c:	mov	r2, #1
   20f60:	add	r3, pc, r3
   20f64:	stmib	r4, {r5, r6}
   20f68:	str	r3, [r4, #44]	; 0x2c
   20f6c:	strb	r2, [r4, #24]
   20f70:	add	r1, r0, r6
   20f74:	cmp	r0, #0
   20f78:	str	r0, [r4]
   20f7c:	str	r0, [r4, #20]
   20f80:	str	r1, [r4, #16]
   20f84:	beq	20f90 <flatcc_json_printer_init_dynamic_buffer@@Base+0x78>
   20f88:	mov	r0, #0
   20f8c:	pop	{r4, r5, r6, pc}
   20f90:	ldr	r3, [r4, #36]	; 0x24
   20f94:	cmp	r3, #0
   20f98:	bne	20fac <flatcc_json_printer_init_dynamic_buffer@@Base+0x94>
   20f9c:	mov	r3, #3
   20fa0:	str	r3, [r4, #36]	; 0x24
   20fa4:	mvn	r0, #0
   20fa8:	pop	{r4, r5, r6, pc}
   20fac:	mvn	r0, #0
   20fb0:	pop	{r4, r5, r6, pc}
   20fb4:			; <UNDEFINED> instruction: 0xffff3e04

00020fb8 <flatcc_json_printer_get_buffer@@Base>:
   20fb8:	ldr	r3, [r0, #44]	; 0x2c
   20fbc:	push	{r4, r5, r6, lr}
   20fc0:	mov	r5, r1
   20fc4:	mov	r1, #0
   20fc8:	mov	r4, r0
   20fcc:	blx	r3
   20fd0:	cmp	r5, #0
   20fd4:	ldr	r0, [r4]
   20fd8:	ldrne	r3, [r4, #20]
   20fdc:	subne	r3, r3, r0
   20fe0:	strne	r3, [r5]
   20fe4:	pop	{r4, r5, r6, pc}

00020fe8 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   20fe8:	push	{r4, r5, r6, lr}
   20fec:	mov	r5, r0
   20ff0:	bl	20fb8 <flatcc_json_printer_get_buffer@@Base>
   20ff4:	mov	r2, #48	; 0x30
   20ff8:	mov	r1, #0
   20ffc:	mov	r4, r0
   21000:	mov	r0, r5
   21004:	bl	124e0 <memset@plt>
   21008:	mov	r0, r4
   2100c:	pop	{r4, r5, r6, pc}

00021010 <flatcc_json_printer_clear@@Base>:
   21010:	push	{r4, lr}
   21014:	mov	r4, r0
   21018:	ldrb	r3, [r0, #24]
   2101c:	cmp	r3, #0
   21020:	beq	21034 <flatcc_json_printer_clear@@Base+0x24>
   21024:	ldr	r0, [r0]
   21028:	cmp	r0, #0
   2102c:	beq	21034 <flatcc_json_printer_clear@@Base+0x24>
   21030:	bl	12438 <free@plt>
   21034:	mov	r0, r4
   21038:	mov	r2, #48	; 0x30
   2103c:	mov	r1, #0
   21040:	pop	{r4, lr}
   21044:	b	124e0 <memset@plt>
   21048:	subs	r2, r1, #1
   2104c:	bxeq	lr
   21050:	bcc	21228 <flatcc_json_printer_clear@@Base+0x218>
   21054:	cmp	r0, r1
   21058:	bls	2120c <flatcc_json_printer_clear@@Base+0x1fc>
   2105c:	tst	r1, r2
   21060:	beq	21218 <flatcc_json_printer_clear@@Base+0x208>
   21064:	clz	r3, r0
   21068:	clz	r2, r1
   2106c:	sub	r3, r2, r3
   21070:	rsbs	r3, r3, #31
   21074:	addne	r3, r3, r3, lsl #1
   21078:	mov	r2, #0
   2107c:	addne	pc, pc, r3, lsl #2
   21080:	nop			; (mov r0, r0)
   21084:	cmp	r0, r1, lsl #31
   21088:	adc	r2, r2, r2
   2108c:	subcs	r0, r0, r1, lsl #31
   21090:	cmp	r0, r1, lsl #30
   21094:	adc	r2, r2, r2
   21098:	subcs	r0, r0, r1, lsl #30
   2109c:	cmp	r0, r1, lsl #29
   210a0:	adc	r2, r2, r2
   210a4:	subcs	r0, r0, r1, lsl #29
   210a8:	cmp	r0, r1, lsl #28
   210ac:	adc	r2, r2, r2
   210b0:	subcs	r0, r0, r1, lsl #28
   210b4:	cmp	r0, r1, lsl #27
   210b8:	adc	r2, r2, r2
   210bc:	subcs	r0, r0, r1, lsl #27
   210c0:	cmp	r0, r1, lsl #26
   210c4:	adc	r2, r2, r2
   210c8:	subcs	r0, r0, r1, lsl #26
   210cc:	cmp	r0, r1, lsl #25
   210d0:	adc	r2, r2, r2
   210d4:	subcs	r0, r0, r1, lsl #25
   210d8:	cmp	r0, r1, lsl #24
   210dc:	adc	r2, r2, r2
   210e0:	subcs	r0, r0, r1, lsl #24
   210e4:	cmp	r0, r1, lsl #23
   210e8:	adc	r2, r2, r2
   210ec:	subcs	r0, r0, r1, lsl #23
   210f0:	cmp	r0, r1, lsl #22
   210f4:	adc	r2, r2, r2
   210f8:	subcs	r0, r0, r1, lsl #22
   210fc:	cmp	r0, r1, lsl #21
   21100:	adc	r2, r2, r2
   21104:	subcs	r0, r0, r1, lsl #21
   21108:	cmp	r0, r1, lsl #20
   2110c:	adc	r2, r2, r2
   21110:	subcs	r0, r0, r1, lsl #20
   21114:	cmp	r0, r1, lsl #19
   21118:	adc	r2, r2, r2
   2111c:	subcs	r0, r0, r1, lsl #19
   21120:	cmp	r0, r1, lsl #18
   21124:	adc	r2, r2, r2
   21128:	subcs	r0, r0, r1, lsl #18
   2112c:	cmp	r0, r1, lsl #17
   21130:	adc	r2, r2, r2
   21134:	subcs	r0, r0, r1, lsl #17
   21138:	cmp	r0, r1, lsl #16
   2113c:	adc	r2, r2, r2
   21140:	subcs	r0, r0, r1, lsl #16
   21144:	cmp	r0, r1, lsl #15
   21148:	adc	r2, r2, r2
   2114c:	subcs	r0, r0, r1, lsl #15
   21150:	cmp	r0, r1, lsl #14
   21154:	adc	r2, r2, r2
   21158:	subcs	r0, r0, r1, lsl #14
   2115c:	cmp	r0, r1, lsl #13
   21160:	adc	r2, r2, r2
   21164:	subcs	r0, r0, r1, lsl #13
   21168:	cmp	r0, r1, lsl #12
   2116c:	adc	r2, r2, r2
   21170:	subcs	r0, r0, r1, lsl #12
   21174:	cmp	r0, r1, lsl #11
   21178:	adc	r2, r2, r2
   2117c:	subcs	r0, r0, r1, lsl #11
   21180:	cmp	r0, r1, lsl #10
   21184:	adc	r2, r2, r2
   21188:	subcs	r0, r0, r1, lsl #10
   2118c:	cmp	r0, r1, lsl #9
   21190:	adc	r2, r2, r2
   21194:	subcs	r0, r0, r1, lsl #9
   21198:	cmp	r0, r1, lsl #8
   2119c:	adc	r2, r2, r2
   211a0:	subcs	r0, r0, r1, lsl #8
   211a4:	cmp	r0, r1, lsl #7
   211a8:	adc	r2, r2, r2
   211ac:	subcs	r0, r0, r1, lsl #7
   211b0:	cmp	r0, r1, lsl #6
   211b4:	adc	r2, r2, r2
   211b8:	subcs	r0, r0, r1, lsl #6
   211bc:	cmp	r0, r1, lsl #5
   211c0:	adc	r2, r2, r2
   211c4:	subcs	r0, r0, r1, lsl #5
   211c8:	cmp	r0, r1, lsl #4
   211cc:	adc	r2, r2, r2
   211d0:	subcs	r0, r0, r1, lsl #4
   211d4:	cmp	r0, r1, lsl #3
   211d8:	adc	r2, r2, r2
   211dc:	subcs	r0, r0, r1, lsl #3
   211e0:	cmp	r0, r1, lsl #2
   211e4:	adc	r2, r2, r2
   211e8:	subcs	r0, r0, r1, lsl #2
   211ec:	cmp	r0, r1, lsl #1
   211f0:	adc	r2, r2, r2
   211f4:	subcs	r0, r0, r1, lsl #1
   211f8:	cmp	r0, r1
   211fc:	adc	r2, r2, r2
   21200:	subcs	r0, r0, r1
   21204:	mov	r0, r2
   21208:	bx	lr
   2120c:	moveq	r0, #1
   21210:	movne	r0, #0
   21214:	bx	lr
   21218:	clz	r2, r1
   2121c:	rsb	r2, r2, #31
   21220:	lsr	r0, r0, r2
   21224:	bx	lr
   21228:	cmp	r0, #0
   2122c:	mvnne	r0, #0
   21230:	b	21290 <flatcc_json_printer_clear@@Base+0x280>
   21234:	cmp	r1, #0
   21238:	beq	21228 <flatcc_json_printer_clear@@Base+0x218>
   2123c:	push	{r0, r1, lr}
   21240:	bl	21048 <flatcc_json_printer_clear@@Base+0x38>
   21244:	pop	{r1, r2, lr}
   21248:	mul	r3, r2, r0
   2124c:	sub	r1, r1, r3
   21250:	bx	lr
   21254:	cmp	r3, #0
   21258:	cmpeq	r2, #0
   2125c:	bne	21274 <flatcc_json_printer_clear@@Base+0x264>
   21260:	cmp	r1, #0
   21264:	cmpeq	r0, #0
   21268:	mvnne	r1, #0
   2126c:	mvnne	r0, #0
   21270:	b	21290 <flatcc_json_printer_clear@@Base+0x280>
   21274:	sub	sp, sp, #8
   21278:	push	{sp, lr}
   2127c:	bl	212a0 <flatcc_json_printer_clear@@Base+0x290>
   21280:	ldr	lr, [sp, #4]
   21284:	add	sp, sp, #8
   21288:	pop	{r2, r3}
   2128c:	bx	lr
   21290:	push	{r1, lr}
   21294:	mov	r0, #8
   21298:	bl	12408 <raise@plt>
   2129c:	pop	{r1, pc}
   212a0:	cmp	r1, r3
   212a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   212a8:	cmpeq	r0, r2
   212ac:	mov	r4, r0
   212b0:	mov	r5, r1
   212b4:	ldr	r9, [sp, #28]
   212b8:	movcc	r0, #0
   212bc:	movcc	r1, #0
   212c0:	bcc	213b8 <flatcc_json_printer_clear@@Base+0x3a8>
   212c4:	cmp	r3, #0
   212c8:	clzeq	ip, r2
   212cc:	clzne	ip, r3
   212d0:	addeq	ip, ip, #32
   212d4:	cmp	r5, #0
   212d8:	clzeq	r1, r4
   212dc:	addeq	r1, r1, #32
   212e0:	clzne	r1, r5
   212e4:	sub	ip, ip, r1
   212e8:	sub	lr, ip, #32
   212ec:	lsl	r7, r3, ip
   212f0:	rsb	r8, ip, #32
   212f4:	orr	r7, r7, r2, lsl lr
   212f8:	orr	r7, r7, r2, lsr r8
   212fc:	lsl	r6, r2, ip
   21300:	cmp	r5, r7
   21304:	cmpeq	r4, r6
   21308:	movcc	r0, #0
   2130c:	movcc	r1, #0
   21310:	bcc	2132c <flatcc_json_printer_clear@@Base+0x31c>
   21314:	mov	r3, #1
   21318:	subs	r4, r4, r6
   2131c:	lsl	r1, r3, lr
   21320:	lsl	r0, r3, ip
   21324:	orr	r1, r1, r3, lsr r8
   21328:	sbc	r5, r5, r7
   2132c:	cmp	ip, #0
   21330:	beq	213b8 <flatcc_json_printer_clear@@Base+0x3a8>
   21334:	lsrs	r3, r7, #1
   21338:	rrx	r2, r6
   2133c:	mov	r6, ip
   21340:	b	21364 <flatcc_json_printer_clear@@Base+0x354>
   21344:	subs	r4, r4, r2
   21348:	sbc	r5, r5, r3
   2134c:	adds	r4, r4, r4
   21350:	adc	r5, r5, r5
   21354:	adds	r4, r4, #1
   21358:	adc	r5, r5, #0
   2135c:	subs	r6, r6, #1
   21360:	beq	21380 <flatcc_json_printer_clear@@Base+0x370>
   21364:	cmp	r5, r3
   21368:	cmpeq	r4, r2
   2136c:	bcs	21344 <flatcc_json_printer_clear@@Base+0x334>
   21370:	adds	r4, r4, r4
   21374:	adc	r5, r5, r5
   21378:	subs	r6, r6, #1
   2137c:	bne	21364 <flatcc_json_printer_clear@@Base+0x354>
   21380:	lsr	r6, r4, ip
   21384:	lsr	r7, r5, ip
   21388:	orr	r6, r6, r5, lsl r8
   2138c:	adds	r2, r0, r4
   21390:	orr	r6, r6, r5, lsr lr
   21394:	adc	r3, r1, r5
   21398:	lsl	r1, r7, ip
   2139c:	orr	r1, r1, r6, lsl lr
   213a0:	lsl	r0, r6, ip
   213a4:	orr	r1, r1, r6, lsr r8
   213a8:	subs	r0, r2, r0
   213ac:	mov	r4, r6
   213b0:	mov	r5, r7
   213b4:	sbc	r1, r3, r1
   213b8:	cmp	r9, #0
   213bc:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   213c0:	strd	r4, [r9]
   213c4:	pop	{r4, r5, r6, r7, r8, r9, pc}

000213c8 <__libc_csu_init@@Base>:
   213c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   213cc:	mov	r7, r0
   213d0:	ldr	r6, [pc, #72]	; 21420 <__libc_csu_init@@Base+0x58>
   213d4:	ldr	r5, [pc, #72]	; 21424 <__libc_csu_init@@Base+0x5c>
   213d8:	add	r6, pc, r6
   213dc:	add	r5, pc, r5
   213e0:	sub	r6, r6, r5
   213e4:	mov	r8, r1
   213e8:	mov	r9, r2
   213ec:	bl	123e8 <raise@plt-0x20>
   213f0:	asrs	r6, r6, #2
   213f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   213f8:	mov	r4, #0
   213fc:	add	r4, r4, #1
   21400:	ldr	r3, [r5], #4
   21404:	mov	r2, r9
   21408:	mov	r1, r8
   2140c:	mov	r0, r7
   21410:	blx	r3
   21414:	cmp	r6, r4
   21418:	bne	213fc <__libc_csu_init@@Base+0x34>
   2141c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21420:	andeq	r1, r1, r0, lsr fp
   21424:	andeq	r1, r1, r8, lsr #22

00021428 <__libc_csu_fini@@Base>:
   21428:	bx	lr

Disassembly of section .fini:

0002142c <.fini>:
   2142c:	push	{r3, lr}
   21430:	pop	{r3, pc}
