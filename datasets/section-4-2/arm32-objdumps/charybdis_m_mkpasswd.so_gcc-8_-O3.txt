
../repos/charybdis/extensions/.libs/m_mkpasswd.so:     file format elf32-littlearm


Disassembly of section .init:

00000548 <_init>:
 548:	push	{r3, lr}
 54c:	bl	604 <call_weak_fn>
 550:	pop	{r3, pc}

Disassembly of section .plt:

00000554 <.plt>:
 554:	push	{lr}		; (str lr, [sp, #-4]!)
 558:	ldr	lr, [pc, #4]	; 564 <.plt+0x10>
 55c:	add	lr, pc, lr
 560:	ldr	pc, [lr, #8]!
 564:	.word	0x00011a9c

00000568 <rb_current_time@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #69632	; 0x11000
 570:	ldr	pc, [ip, #2716]!	; 0xa9c

00000574 <__cxa_finalize@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #69632	; 0x11000
 57c:	ldr	pc, [ip, #2708]!	; 0xa94

00000580 <sendto_one@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #69632	; 0x11000
 588:	ldr	pc, [ip, #2700]!	; 0xa8c

0000058c <read@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #69632	; 0x11000
 594:	ldr	pc, [ip, #2692]!	; 0xa84

00000598 <time@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #69632	; 0x11000
 5a0:	ldr	pc, [ip, #2684]!	; 0xa7c

000005a4 <rb_crypt@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #69632	; 0x11000
 5ac:	ldr	pc, [ip, #2676]!	; 0xa74

000005b0 <__gmon_start__@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #69632	; 0x11000
 5b8:	ldr	pc, [ip, #2668]!	; 0xa6c

000005bc <open@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #69632	; 0x11000
 5c4:	ldr	pc, [ip, #2660]!	; 0xa64

000005c8 <srand@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #69632	; 0x11000
 5d0:	ldr	pc, [ip, #2652]!	; 0xa5c

000005d4 <rand@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #69632	; 0x11000
 5dc:	ldr	pc, [ip, #2644]!	; 0xa54

000005e0 <sendto_one_notice@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #69632	; 0x11000
 5e8:	ldr	pc, [ip, #2636]!	; 0xa4c

000005ec <close@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #69632	; 0x11000
 5f4:	ldr	pc, [ip, #2628]!	; 0xa44

000005f8 <irccmp@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #69632	; 0x11000
 600:	ldr	pc, [ip, #2620]!	; 0xa3c

Disassembly of section .text:

00000604 <call_weak_fn>:
 604:	ldr	r3, [pc, #20]	; 620 <call_weak_fn+0x1c>
 608:	ldr	r2, [pc, #20]	; 624 <call_weak_fn+0x20>
 60c:	add	r3, pc, r3
 610:	ldr	r2, [r3, r2]
 614:	cmp	r2, #0
 618:	bxeq	lr
 61c:	b	5b0 <__gmon_start__@plt>
 620:	.word	0x000119ec
 624:	.word	0x00000048

00000628 <deregister_tm_clones>:
 628:	ldr	r0, [pc, #44]	; 65c <deregister_tm_clones+0x34>
 62c:	ldr	r3, [pc, #44]	; 660 <deregister_tm_clones+0x38>
 630:	add	r0, pc, r0
 634:	add	r3, pc, r3
 638:	cmp	r3, r0
 63c:	ldr	r3, [pc, #32]	; 664 <deregister_tm_clones+0x3c>
 640:	add	r3, pc, r3
 644:	bxeq	lr
 648:	ldr	r2, [pc, #24]	; 668 <deregister_tm_clones+0x40>
 64c:	ldr	r3, [r3, r2]
 650:	cmp	r3, #0
 654:	bxeq	lr
 658:	bx	r3
 65c:	.word	0x00011a98
 660:	.word	0x00011a94
 664:	.word	0x000119b8
 668:	.word	0x00000044

0000066c <register_tm_clones>:
 66c:	ldr	r0, [pc, #56]	; 6ac <register_tm_clones+0x40>
 670:	ldr	r3, [pc, #56]	; 6b0 <register_tm_clones+0x44>
 674:	add	r0, pc, r0
 678:	add	r3, pc, r3
 67c:	sub	r1, r3, r0
 680:	ldr	r3, [pc, #44]	; 6b4 <register_tm_clones+0x48>
 684:	asr	r1, r1, #2
 688:	add	r3, pc, r3
 68c:	add	r1, r1, r1, lsr #31
 690:	asrs	r1, r1, #1
 694:	bxeq	lr
 698:	ldr	r2, [pc, #24]	; 6b8 <register_tm_clones+0x4c>
 69c:	ldr	r3, [r3, r2]
 6a0:	cmp	r3, #0
 6a4:	bxeq	lr
 6a8:	bx	r3
 6ac:	.word	0x00011a54
 6b0:	.word	0x00011a50
 6b4:	.word	0x00011970
 6b8:	.word	0x0000004c

000006bc <__do_global_dtors_aux>:
 6bc:	ldr	r3, [pc, #76]	; 710 <__do_global_dtors_aux+0x54>
 6c0:	ldr	r2, [pc, #76]	; 714 <__do_global_dtors_aux+0x58>
 6c4:	add	r3, pc, r3
 6c8:	add	r2, pc, r2
 6cc:	ldrb	r3, [r3]
 6d0:	cmp	r3, #0
 6d4:	bxne	lr
 6d8:	ldr	r3, [pc, #56]	; 718 <__do_global_dtors_aux+0x5c>
 6dc:	push	{r4, lr}
 6e0:	ldr	r3, [r2, r3]
 6e4:	cmp	r3, #0
 6e8:	beq	6f8 <__do_global_dtors_aux+0x3c>
 6ec:	ldr	r3, [pc, #40]	; 71c <__do_global_dtors_aux+0x60>
 6f0:	ldr	r0, [pc, r3]
 6f4:	bl	574 <__cxa_finalize@plt>
 6f8:	bl	628 <deregister_tm_clones>
 6fc:	ldr	r3, [pc, #28]	; 720 <__do_global_dtors_aux+0x64>
 700:	mov	r2, #1
 704:	add	r3, pc, r3
 708:	strb	r2, [r3]
 70c:	pop	{r4, pc}
 710:	.word	0x00011a04
 714:	.word	0x00011930
 718:	.word	0x00000040
 71c:	.word	0x00011960
 720:	.word	0x000119c4

00000724 <frame_dummy>:
 724:	b	66c <register_tm_clones>

00000728 <make_md5_salt.part.2.constprop.3>:
 728:	strd	r4, [sp, #-24]!	; 0xffffffe8
 72c:	movw	r2, #12580	; 0x3124
 730:	mov	r3, #36	; 0x24
 734:	ldr	r4, [pc, #400]	; 8cc <make_md5_salt.part.2.constprop.3+0x1a4>
 738:	mov	r1, #0
 73c:	strd	r6, [sp, #8]
 740:	ldr	r0, [pc, #392]	; 8d0 <make_md5_salt.part.2.constprop.3+0x1a8>
 744:	str	r8, [sp, #16]
 748:	str	lr, [sp, #20]
 74c:	add	r4, pc, r4
 750:	add	r0, pc, r0
 754:	strh	r2, [r4]
 758:	strb	r3, [r4, #2]
 75c:	bl	5bc <open@plt>
 760:	subs	r5, r0, #0
 764:	blt	888 <make_md5_salt.part.2.constprop.3+0x160>
 768:	mov	r2, #8
 76c:	add	r1, r4, #3
 770:	bl	58c <read@plt>
 774:	cmp	r0, #8
 778:	bne	83c <make_md5_salt.part.2.constprop.3+0x114>
 77c:	ldrb	r8, [r4, #3]
 780:	mov	r0, r5
 784:	ldrb	r7, [r4, #4]
 788:	ldrb	r6, [r4, #5]
 78c:	and	r8, r8, #63	; 0x3f
 790:	ldrb	r5, [r4, #6]
 794:	and	r7, r7, #63	; 0x3f
 798:	ldrb	lr, [r4, #7]
 79c:	and	r6, r6, #63	; 0x3f
 7a0:	ldrb	ip, [r4, #8]
 7a4:	and	r5, r5, #63	; 0x3f
 7a8:	ldrb	r1, [r4, #9]
 7ac:	and	lr, lr, #63	; 0x3f
 7b0:	ldrb	r2, [r4, #10]
 7b4:	and	ip, ip, #63	; 0x3f
 7b8:	ldr	r3, [pc, #276]	; 8d4 <make_md5_salt.part.2.constprop.3+0x1ac>
 7bc:	and	r1, r1, #63	; 0x3f
 7c0:	and	r2, r2, #63	; 0x3f
 7c4:	add	r3, pc, r3
 7c8:	ldrb	r8, [r3, r8]
 7cc:	ldrb	r7, [r3, r7]
 7d0:	ldrb	r6, [r3, r6]
 7d4:	strb	r8, [r4, #3]
 7d8:	ldrb	r5, [r3, r5]
 7dc:	strb	r7, [r4, #4]
 7e0:	ldrb	lr, [r3, lr]
 7e4:	strb	r6, [r4, #5]
 7e8:	ldrb	ip, [r3, ip]
 7ec:	strb	r5, [r4, #6]
 7f0:	ldrb	r1, [r3, r1]
 7f4:	strb	lr, [r4, #7]
 7f8:	ldrb	r3, [r3, r2]
 7fc:	strb	ip, [r4, #8]
 800:	strb	r1, [r4, #9]
 804:	strb	r3, [r4, #10]
 808:	bl	5ec <close@plt>
 80c:	ldr	r3, [pc, #196]	; 8d8 <make_md5_salt.part.2.constprop.3+0x1b0>
 810:	mov	r1, #36	; 0x24
 814:	mov	r2, #0
 818:	add	r3, pc, r3
 81c:	mov	r0, r3
 820:	strb	r1, [r3, #11]
 824:	strb	r2, [r3, #12]
 828:	ldrd	r4, [sp]
 82c:	ldrd	r6, [sp, #8]
 830:	ldr	r8, [sp, #16]
 834:	add	sp, sp, #20
 838:	pop	{pc}		; (ldr pc, [sp], #4)
 83c:	ldr	r6, [pc, #152]	; 8dc <make_md5_salt.part.2.constprop.3+0x1b4>
 840:	mov	r0, r5
 844:	add	r5, r4, #2
 848:	bl	5ec <close@plt>
 84c:	mov	r0, #0
 850:	add	r4, r4, #10
 854:	add	r6, pc, r6
 858:	bl	598 <time@plt>
 85c:	bl	5c8 <srand@plt>
 860:	bl	5d4 <rand@plt>
 864:	rsbs	r3, r0, #0
 868:	and	r0, r0, #63	; 0x3f
 86c:	and	r3, r3, #63	; 0x3f
 870:	rsbpl	r0, r3, #0
 874:	ldrb	r3, [r6, r0]
 878:	strb	r3, [r5, #1]!
 87c:	cmp	r4, r5
 880:	bne	860 <make_md5_salt.part.2.constprop.3+0x138>
 884:	b	80c <make_md5_salt.part.2.constprop.3+0xe4>
 888:	ldr	r6, [pc, #80]	; 8e0 <make_md5_salt.part.2.constprop.3+0x1b8>
 88c:	mov	r0, #0
 890:	add	r5, r4, #2
 894:	bl	598 <time@plt>
 898:	add	r4, r4, #10
 89c:	add	r6, pc, r6
 8a0:	bl	5c8 <srand@plt>
 8a4:	bl	5d4 <rand@plt>
 8a8:	rsbs	r3, r0, #0
 8ac:	and	r0, r0, #63	; 0x3f
 8b0:	and	r3, r3, #63	; 0x3f
 8b4:	rsbpl	r0, r3, #0
 8b8:	ldrb	r3, [r6, r0]
 8bc:	strb	r3, [r5, #1]!
 8c0:	cmp	r5, r4
 8c4:	bne	8a4 <make_md5_salt.part.2.constprop.3+0x17c>
 8c8:	b	80c <make_md5_salt.part.2.constprop.3+0xe4>
 8cc:	.word	0x00011980
 8d0:	.word	0x00000848
 8d4:	.word	0x00000768
 8d8:	.word	0x000118b4
 8dc:	.word	0x000006d8
 8e0:	.word	0x00000690

000008e4 <generate_random_salt.constprop.6>:
 8e4:	strd	r4, [sp, #-24]!	; 0xffffffe8
 8e8:	mov	r4, r0
 8ec:	mov	r1, #0
 8f0:	ldr	r0, [pc, #484]	; adc <generate_random_salt.constprop.6+0x1f8>
 8f4:	strd	r6, [sp, #8]
 8f8:	str	r8, [sp, #16]
 8fc:	str	lr, [sp, #20]
 900:	add	r0, pc, r0
 904:	bl	5bc <open@plt>
 908:	subs	r5, r0, #0
 90c:	blt	a98 <generate_random_salt.constprop.6+0x1b4>
 910:	mov	r2, #16
 914:	mov	r1, r4
 918:	bl	58c <read@plt>
 91c:	cmp	r0, #16
 920:	bne	a4c <generate_random_salt.constprop.6+0x168>
 924:	ldrb	ip, [r4]
 928:	mov	r0, r5
 92c:	ldrb	r1, [r4, #1]
 930:	ldrb	r2, [r4, #2]
 934:	and	ip, ip, #63	; 0x3f
 938:	ldr	r3, [pc, #416]	; ae0 <generate_random_salt.constprop.6+0x1fc>
 93c:	and	r1, r1, #63	; 0x3f
 940:	ldrb	r8, [r4, #3]
 944:	and	r2, r2, #63	; 0x3f
 948:	ldrb	r7, [r4, #4]
 94c:	add	r3, pc, r3
 950:	ldrb	ip, [r3, ip]
 954:	and	r8, r8, #63	; 0x3f
 958:	ldrb	r1, [r3, r1]
 95c:	and	r7, r7, #63	; 0x3f
 960:	ldrb	r2, [r3, r2]
 964:	strb	ip, [r4]
 968:	ldrb	r6, [r4, #5]
 96c:	strb	r1, [r4, #1]
 970:	ldrb	r5, [r4, #6]
 974:	strb	r2, [r4, #2]
 978:	ldrb	lr, [r4, #7]
 97c:	and	r6, r6, #63	; 0x3f
 980:	ldrb	ip, [r4, #8]
 984:	and	r5, r5, #63	; 0x3f
 988:	ldrb	r1, [r4, #9]
 98c:	and	lr, lr, #63	; 0x3f
 990:	ldrb	r2, [r4, #10]
 994:	and	ip, ip, #63	; 0x3f
 998:	ldrb	r5, [r3, r5]
 99c:	and	r1, r1, #63	; 0x3f
 9a0:	ldrb	lr, [r3, lr]
 9a4:	and	r2, r2, #63	; 0x3f
 9a8:	ldrb	ip, [r3, ip]
 9ac:	strb	r5, [r4, #6]
 9b0:	ldrb	r1, [r3, r1]
 9b4:	strb	lr, [r4, #7]
 9b8:	ldrb	r8, [r3, r8]
 9bc:	ldrb	r7, [r3, r7]
 9c0:	ldrb	r6, [r3, r6]
 9c4:	strb	r8, [r4, #3]
 9c8:	ldrb	r2, [r3, r2]
 9cc:	strb	r7, [r4, #4]
 9d0:	strb	ip, [r4, #8]
 9d4:	strb	r6, [r4, #5]
 9d8:	strb	r1, [r4, #9]
 9dc:	strb	r2, [r4, #10]
 9e0:	ldrb	r5, [r4, #11]
 9e4:	ldrb	lr, [r4, #12]
 9e8:	ldrb	ip, [r4, #13]
 9ec:	and	r5, r5, #63	; 0x3f
 9f0:	ldrb	r1, [r4, #14]
 9f4:	and	lr, lr, #63	; 0x3f
 9f8:	ldrb	r2, [r4, #15]
 9fc:	and	ip, ip, #63	; 0x3f
 a00:	ldrb	r5, [r3, r5]
 a04:	and	r1, r1, #63	; 0x3f
 a08:	ldrb	lr, [r3, lr]
 a0c:	and	r2, r2, #63	; 0x3f
 a10:	ldrb	ip, [r3, ip]
 a14:	strb	r5, [r4, #11]
 a18:	ldrb	r1, [r3, r1]
 a1c:	strb	lr, [r4, #12]
 a20:	ldrb	r3, [r3, r2]
 a24:	strb	ip, [r4, #13]
 a28:	strb	r1, [r4, #14]
 a2c:	strb	r3, [r4, #15]
 a30:	bl	5ec <close@plt>
 a34:	mov	r0, r4
 a38:	ldrd	r4, [sp]
 a3c:	ldrd	r6, [sp, #8]
 a40:	ldr	r8, [sp, #16]
 a44:	add	sp, sp, #20
 a48:	pop	{pc}		; (ldr pc, [sp], #4)
 a4c:	ldr	r7, [pc, #144]	; ae4 <generate_random_salt.constprop.6+0x200>
 a50:	mov	r0, r5
 a54:	add	r6, r4, #15
 a58:	bl	5ec <close@plt>
 a5c:	mov	r0, #0
 a60:	sub	r5, r4, #1
 a64:	add	r7, pc, r7
 a68:	bl	598 <time@plt>
 a6c:	bl	5c8 <srand@plt>
 a70:	bl	5d4 <rand@plt>
 a74:	rsbs	r3, r0, #0
 a78:	and	r0, r0, #63	; 0x3f
 a7c:	and	r3, r3, #63	; 0x3f
 a80:	rsbpl	r0, r3, #0
 a84:	ldrb	r3, [r7, r0]
 a88:	strb	r3, [r5, #1]!
 a8c:	cmp	r6, r5
 a90:	bne	a70 <generate_random_salt.constprop.6+0x18c>
 a94:	b	a34 <generate_random_salt.constprop.6+0x150>
 a98:	ldr	r7, [pc, #72]	; ae8 <generate_random_salt.constprop.6+0x204>
 a9c:	mov	r0, #0
 aa0:	sub	r5, r4, #1
 aa4:	bl	598 <time@plt>
 aa8:	add	r6, r4, #15
 aac:	add	r7, pc, r7
 ab0:	bl	5c8 <srand@plt>
 ab4:	bl	5d4 <rand@plt>
 ab8:	rsbs	r3, r0, #0
 abc:	and	r0, r0, #63	; 0x3f
 ac0:	and	r3, r3, #63	; 0x3f
 ac4:	rsbpl	r0, r3, #0
 ac8:	ldrb	r3, [r7, r0]
 acc:	strb	r3, [r5, #1]!
 ad0:	cmp	r5, r6
 ad4:	bne	ab4 <generate_random_salt.constprop.6+0x1d0>
 ad8:	b	a34 <generate_random_salt.constprop.6+0x150>
 adc:	.word	0x00000698
 ae0:	.word	0x000005e0
 ae4:	.word	0x000004c8
 ae8:	.word	0x00000480

00000aec <m_mkpasswd>:
 aec:	strd	r4, [sp, #-32]!	; 0xffffffe0
 af0:	strd	r6, [sp, #8]
 af4:	strd	r8, [sp, #16]
 af8:	mov	r8, r2
 afc:	str	sl, [sp, #24]
 b00:	str	lr, [sp, #28]
 b04:	sub	sp, sp, #16
 b08:	ldr	r1, [pc, #492]	; cfc <m_mkpasswd+0x210>
 b0c:	add	r0, sp, #8
 b10:	ldr	r7, [sp, #48]	; 0x30
 b14:	ldr	r6, [pc, #484]	; d00 <m_mkpasswd+0x214>
 b18:	add	r1, pc, r1
 b1c:	ldrh	ip, [r1, #4]
 b20:	ldr	r2, [r7, #4]
 b24:	add	r6, pc, r6
 b28:	ldr	lr, [r1]
 b2c:	strh	ip, [r0, #4]
 b30:	ldrb	r1, [r1, #6]
 b34:	cmp	r2, #0
 b38:	str	lr, [sp, #8]
 b3c:	strb	r1, [r0, #6]
 b40:	beq	c5c <m_mkpasswd+0x170>
 b44:	ldrb	r2, [r2]
 b48:	cmp	r2, #0
 b4c:	beq	c5c <m_mkpasswd+0x170>
 b50:	cmp	r3, #2
 b54:	ldr	r3, [pc, #424]	; d04 <m_mkpasswd+0x218>
 b58:	movle	r5, r0
 b5c:	ldr	r4, [pc, #420]	; d08 <m_mkpasswd+0x21c>
 b60:	ldrgt	r5, [r7, #8]
 b64:	ldr	r2, [r6, r3]
 b68:	add	r4, pc, r4
 b6c:	ldr	r3, [r4, #72]	; 0x48
 b70:	ldr	r9, [r2, #184]	; 0xb8
 b74:	add	r9, r9, r3
 b78:	bl	568 <rb_current_time@plt>
 b7c:	cmp	r9, r0
 b80:	bgt	c14 <m_mkpasswd+0x128>
 b84:	bl	568 <rb_current_time@plt>
 b88:	ldr	r1, [pc, #380]	; d0c <m_mkpasswd+0x220>
 b8c:	str	r0, [r4, #72]	; 0x48
 b90:	mov	r0, r5
 b94:	add	r1, pc, r1
 b98:	bl	5f8 <irccmp@plt>
 b9c:	subs	r9, r0, #0
 ba0:	beq	c8c <m_mkpasswd+0x1a0>
 ba4:	ldr	r1, [pc, #356]	; d10 <m_mkpasswd+0x224>
 ba8:	mov	r0, r5
 bac:	add	r1, pc, r1
 bb0:	bl	5f8 <irccmp@plt>
 bb4:	subs	r9, r0, #0
 bb8:	bne	cc4 <m_mkpasswd+0x1d8>
 bbc:	movw	r3, #13860	; 0x3624
 bc0:	mov	sl, #36	; 0x24
 bc4:	add	r0, r4, #51	; 0x33
 bc8:	add	r6, r4, #48	; 0x30
 bcc:	strh	r3, [r4, #48]	; 0x30
 bd0:	strb	sl, [r4, #50]	; 0x32
 bd4:	bl	8e4 <generate_random_salt.constprop.6>
 bd8:	mov	r1, r6
 bdc:	strb	sl, [r4, #67]	; 0x43
 be0:	strb	r9, [r4, #68]	; 0x44
 be4:	ldr	r0, [r7, #4]
 be8:	bl	5a4 <rb_crypt@plt>
 bec:	cmp	r0, #0
 bf0:	ldr	r3, [r7, #4]
 bf4:	beq	cb8 <m_mkpasswd+0x1cc>
 bf8:	ldr	r1, [pc, #276]	; d14 <m_mkpasswd+0x228>
 bfc:	mov	r2, r5
 c00:	str	r0, [sp]
 c04:	mov	r0, r8
 c08:	add	r1, pc, r1
 c0c:	bl	5e0 <sendto_one_notice@plt>
 c10:	b	c40 <m_mkpasswd+0x154>
 c14:	ldr	r2, [pc, #252]	; d18 <m_mkpasswd+0x22c>
 c18:	add	r3, r8, #88	; 0x58
 c1c:	mov	r0, r8
 c20:	ldr	ip, [pc, #244]	; d1c <m_mkpasswd+0x230>
 c24:	ldr	r1, [pc, #244]	; d20 <m_mkpasswd+0x234>
 c28:	ldr	r2, [r6, r2]
 c2c:	add	ip, pc, ip
 c30:	add	r1, pc, r1
 c34:	str	ip, [sp]
 c38:	add	r2, r2, #88	; 0x58
 c3c:	bl	580 <sendto_one@plt>
 c40:	add	sp, sp, #16
 c44:	ldrd	r4, [sp]
 c48:	ldrd	r6, [sp, #8]
 c4c:	ldrd	r8, [sp, #16]
 c50:	ldr	sl, [sp, #24]
 c54:	add	sp, sp, #28
 c58:	pop	{pc}		; (ldr pc, [sp], #4)
 c5c:	ldr	r2, [pc, #180]	; d18 <m_mkpasswd+0x22c>
 c60:	add	r3, r8, #88	; 0x58
 c64:	mov	r0, r8
 c68:	ldr	ip, [pc, #180]	; d24 <m_mkpasswd+0x238>
 c6c:	ldr	r1, [pc, #180]	; d28 <m_mkpasswd+0x23c>
 c70:	ldr	r2, [r6, r2]
 c74:	add	ip, pc, ip
 c78:	add	r1, pc, r1
 c7c:	str	ip, [sp]
 c80:	add	r2, r2, #88	; 0x58
 c84:	bl	580 <sendto_one@plt>
 c88:	b	c40 <m_mkpasswd+0x154>
 c8c:	movw	r3, #13604	; 0x3524
 c90:	mov	sl, #36	; 0x24
 c94:	add	r0, r4, #27
 c98:	add	r6, r4, #24
 c9c:	strh	r3, [r4, #24]
 ca0:	strb	sl, [r4, #26]
 ca4:	bl	8e4 <generate_random_salt.constprop.6>
 ca8:	mov	r1, r6
 cac:	strb	sl, [r4, #43]	; 0x2b
 cb0:	strb	r9, [r4, #44]	; 0x2c
 cb4:	b	be4 <m_mkpasswd+0xf8>
 cb8:	ldr	r0, [pc, #108]	; d2c <m_mkpasswd+0x240>
 cbc:	add	r0, pc, r0
 cc0:	b	bf8 <m_mkpasswd+0x10c>
 cc4:	ldr	r1, [pc, #100]	; d30 <m_mkpasswd+0x244>
 cc8:	mov	r0, r5
 ccc:	add	r1, pc, r1
 cd0:	bl	5f8 <irccmp@plt>
 cd4:	cmp	r0, #0
 cd8:	bne	ce8 <m_mkpasswd+0x1fc>
 cdc:	bl	728 <make_md5_salt.part.2.constprop.3>
 ce0:	mov	r1, r0
 ce4:	b	be4 <m_mkpasswd+0xf8>
 ce8:	ldr	r1, [pc, #68]	; d34 <m_mkpasswd+0x248>
 cec:	mov	r0, r8
 cf0:	add	r1, pc, r1
 cf4:	bl	5e0 <sendto_one_notice@plt>
 cf8:	b	c40 <m_mkpasswd+0x154>
 cfc:	.word	0x0000053c
 d00:	.word	0x000114d4
 d04:	.word	0x00000054
 d08:	.word	0x00011564
 d0c:	.word	0x000004b8
 d10:	.word	0x000004a8
 d14:	.word	0x00000494
 d18:	.word	0x00000050
 d1c:	.word	0x000003a8
 d20:	.word	0x000003b0
 d24:	.word	0x00000360
 d28:	.word	0x00000334
 d2c:	.word	0x000002ec
 d30:	.word	0x00000390
 d34:	.word	0x00000370

00000d38 <mo_mkpasswd>:
 d38:	strd	r4, [sp, #-32]!	; 0xffffffe0
 d3c:	strd	r6, [sp, #8]
 d40:	mov	r7, r2
 d44:	strd	r8, [sp, #16]
 d48:	str	sl, [sp, #24]
 d4c:	str	lr, [sp, #28]
 d50:	sub	sp, sp, #16
 d54:	ldr	r1, [pc, #412]	; ef8 <mo_mkpasswd+0x1c0>
 d58:	add	r0, sp, #8
 d5c:	ldr	r5, [sp, #48]	; 0x30
 d60:	ldr	ip, [pc, #404]	; efc <mo_mkpasswd+0x1c4>
 d64:	add	r1, pc, r1
 d68:	ldrh	lr, [r1, #4]
 d6c:	ldr	r2, [r5, #4]
 d70:	add	ip, pc, ip
 d74:	ldr	r4, [r1]
 d78:	strh	lr, [r0, #4]
 d7c:	ldrb	r1, [r1, #6]
 d80:	cmp	r2, #0
 d84:	str	r4, [sp, #8]
 d88:	strb	r1, [r0, #6]
 d8c:	beq	e74 <mo_mkpasswd+0x13c>
 d90:	ldrb	r2, [r2]
 d94:	cmp	r2, #0
 d98:	beq	e74 <mo_mkpasswd+0x13c>
 d9c:	cmp	r3, #2
 da0:	ldr	r1, [pc, #344]	; f00 <mo_mkpasswd+0x1c8>
 da4:	movle	r4, r0
 da8:	ldrgt	r4, [r5, #8]
 dac:	add	r1, pc, r1
 db0:	mov	r0, r4
 db4:	bl	5f8 <irccmp@plt>
 db8:	subs	r9, r0, #0
 dbc:	bne	e38 <mo_mkpasswd+0x100>
 dc0:	ldr	r6, [pc, #316]	; f04 <mo_mkpasswd+0x1cc>
 dc4:	movw	r3, #13604	; 0x3524
 dc8:	mov	sl, #36	; 0x24
 dcc:	add	r6, pc, r6
 dd0:	add	r0, r6, #27
 dd4:	add	r8, r6, #24
 dd8:	strh	r3, [r6, #24]
 ddc:	strb	sl, [r6, #26]
 de0:	bl	8e4 <generate_random_salt.constprop.6>
 de4:	mov	r1, r8
 de8:	strb	sl, [r6, #43]	; 0x2b
 dec:	strb	r9, [r6, #44]	; 0x2c
 df0:	ldr	r0, [r5, #4]
 df4:	bl	5a4 <rb_crypt@plt>
 df8:	cmp	r0, #0
 dfc:	ldr	r3, [r5, #4]
 e00:	beq	ed8 <mo_mkpasswd+0x1a0>
 e04:	ldr	r1, [pc, #252]	; f08 <mo_mkpasswd+0x1d0>
 e08:	mov	r2, r4
 e0c:	str	r0, [sp]
 e10:	mov	r0, r7
 e14:	add	r1, pc, r1
 e18:	bl	5e0 <sendto_one_notice@plt>
 e1c:	add	sp, sp, #16
 e20:	ldrd	r4, [sp]
 e24:	ldrd	r6, [sp, #8]
 e28:	ldrd	r8, [sp, #16]
 e2c:	ldr	sl, [sp, #24]
 e30:	add	sp, sp, #28
 e34:	pop	{pc}		; (ldr pc, [sp], #4)
 e38:	ldr	r1, [pc, #204]	; f0c <mo_mkpasswd+0x1d4>
 e3c:	mov	r0, r4
 e40:	add	r1, pc, r1
 e44:	bl	5f8 <irccmp@plt>
 e48:	subs	r9, r0, #0
 e4c:	beq	ea4 <mo_mkpasswd+0x16c>
 e50:	ldr	r1, [pc, #184]	; f10 <mo_mkpasswd+0x1d8>
 e54:	mov	r0, r4
 e58:	add	r1, pc, r1
 e5c:	bl	5f8 <irccmp@plt>
 e60:	cmp	r0, #0
 e64:	bne	ee4 <mo_mkpasswd+0x1ac>
 e68:	bl	728 <make_md5_salt.part.2.constprop.3>
 e6c:	mov	r1, r0
 e70:	b	df0 <mo_mkpasswd+0xb8>
 e74:	ldr	r2, [pc, #152]	; f14 <mo_mkpasswd+0x1dc>
 e78:	add	r3, r7, #88	; 0x58
 e7c:	mov	r0, r7
 e80:	ldr	lr, [pc, #144]	; f18 <mo_mkpasswd+0x1e0>
 e84:	ldr	r1, [pc, #144]	; f1c <mo_mkpasswd+0x1e4>
 e88:	ldr	r2, [ip, r2]
 e8c:	add	lr, pc, lr
 e90:	add	r1, pc, r1
 e94:	str	lr, [sp]
 e98:	add	r2, r2, #88	; 0x58
 e9c:	bl	580 <sendto_one@plt>
 ea0:	b	e1c <mo_mkpasswd+0xe4>
 ea4:	ldr	r8, [pc, #116]	; f20 <mo_mkpasswd+0x1e8>
 ea8:	movw	r3, #13860	; 0x3624
 eac:	mov	sl, #36	; 0x24
 eb0:	add	r8, pc, r8
 eb4:	add	r0, r8, #51	; 0x33
 eb8:	add	r6, r8, #48	; 0x30
 ebc:	strh	r3, [r8, #48]	; 0x30
 ec0:	strb	sl, [r8, #50]	; 0x32
 ec4:	bl	8e4 <generate_random_salt.constprop.6>
 ec8:	mov	r1, r6
 ecc:	strb	sl, [r8, #67]	; 0x43
 ed0:	strb	r9, [r8, #68]	; 0x44
 ed4:	b	df0 <mo_mkpasswd+0xb8>
 ed8:	ldr	r0, [pc, #68]	; f24 <mo_mkpasswd+0x1ec>
 edc:	add	r0, pc, r0
 ee0:	b	e04 <mo_mkpasswd+0xcc>
 ee4:	ldr	r1, [pc, #60]	; f28 <mo_mkpasswd+0x1f0>
 ee8:	mov	r0, r7
 eec:	add	r1, pc, r1
 ef0:	bl	5e0 <sendto_one_notice@plt>
 ef4:	b	e1c <mo_mkpasswd+0xe4>
 ef8:	.word	0x000002f0
 efc:	.word	0x00011288
 f00:	.word	0x000002a0
 f04:	.word	0x00011300
 f08:	.word	0x00000288
 f0c:	.word	0x00000214
 f10:	.word	0x00000204
 f14:	.word	0x00000050
 f18:	.word	0x00000148
 f1c:	.word	0x0000011c
 f20:	.word	0x0001121c
 f24:	.word	0x000000cc
 f28:	.word	0x00000174

Disassembly of section .fini:

00000f2c <_fini>:
 f2c:	push	{r3, lr}
 f30:	pop	{r3, pc}
