
../repos/takev-yyast-2f13a16/yyast/yadump:     file format elf32-littlearm


Disassembly of section .init:

00010538 <.init>:
   10538:	push	{r3, lr}
   1053c:	bl	10648 <close@plt+0x48>
   10540:	pop	{r3, pc}

Disassembly of section .plt:

00010544 <free@plt-0x14>:
   10544:	push	{lr}		; (str lr, [sp, #-4]!)
   10548:	ldr	lr, [pc, #4]	; 10554 <free@plt-0x4>
   1054c:	add	lr, pc, lr
   10550:	ldr	pc, [lr, #8]!
   10554:	andeq	r0, r1, ip, lsr #21

00010558 <free@plt>:
   10558:	add	ip, pc, #0, 12
   1055c:	add	ip, ip, #16, 20	; 0x10000
   10560:	ldr	pc, [ip, #2732]!	; 0xaac

00010564 <strndup@plt>:
   10564:	add	ip, pc, #0, 12
   10568:	add	ip, ip, #16, 20	; 0x10000
   1056c:	ldr	pc, [ip, #2724]!	; 0xaa4

00010570 <perror@plt>:
   10570:	add	ip, pc, #0, 12
   10574:	add	ip, ip, #16, 20	; 0x10000
   10578:	ldr	pc, [ip, #2716]!	; 0xa9c

0001057c <fwrite@plt>:
   1057c:	add	ip, pc, #0, 12
   10580:	add	ip, ip, #16, 20	; 0x10000
   10584:	ldr	pc, [ip, #2708]!	; 0xa94

00010588 <__libc_start_main@plt>:
   10588:	add	ip, pc, #0, 12
   1058c:	add	ip, ip, #16, 20	; 0x10000
   10590:	ldr	pc, [ip, #2700]!	; 0xa8c

00010594 <__fxstat@plt>:
   10594:	add	ip, pc, #0, 12
   10598:	add	ip, ip, #16, 20	; 0x10000
   1059c:	ldr	pc, [ip, #2692]!	; 0xa84

000105a0 <__gmon_start__@plt>:
   105a0:	add	ip, pc, #0, 12
   105a4:	add	ip, ip, #16, 20	; 0x10000
   105a8:	ldr	pc, [ip, #2684]!	; 0xa7c

000105ac <open@plt>:
   105ac:	add	ip, pc, #0, 12
   105b0:	add	ip, ip, #16, 20	; 0x10000
   105b4:	ldr	pc, [ip, #2676]!	; 0xa74

000105b8 <exit@plt>:
   105b8:	add	ip, pc, #0, 12
   105bc:	add	ip, ip, #16, 20	; 0x10000
   105c0:	ldr	pc, [ip, #2668]!	; 0xa6c

000105c4 <mmap@plt>:
   105c4:	add	ip, pc, #0, 12
   105c8:	add	ip, ip, #16, 20	; 0x10000
   105cc:	ldr	pc, [ip, #2660]!	; 0xa64

000105d0 <fprintf@plt>:
   105d0:	add	ip, pc, #0, 12
   105d4:	add	ip, ip, #16, 20	; 0x10000
   105d8:	ldr	pc, [ip, #2652]!	; 0xa5c

000105dc <munmap@plt>:
   105dc:	add	ip, pc, #0, 12
   105e0:	add	ip, ip, #16, 20	; 0x10000
   105e4:	ldr	pc, [ip, #2644]!	; 0xa54

000105e8 <fputc@plt>:
   105e8:	add	ip, pc, #0, 12
   105ec:	add	ip, ip, #16, 20	; 0x10000
   105f0:	ldr	pc, [ip, #2636]!	; 0xa4c

000105f4 <abort@plt>:
   105f4:	add	ip, pc, #0, 12
   105f8:	add	ip, ip, #16, 20	; 0x10000
   105fc:	ldr	pc, [ip, #2628]!	; 0xa44

00010600 <close@plt>:
   10600:	add	ip, pc, #0, 12
   10604:	add	ip, ip, #16, 20	; 0x10000
   10608:	ldr	pc, [ip, #2620]!	; 0xa3c

Disassembly of section .text:

0001060c <.text>:
   1060c:	mov	fp, #0
   10610:	mov	lr, #0
   10614:	pop	{r1}		; (ldr r1, [sp], #4)
   10618:	mov	r2, sp
   1061c:	push	{r2}		; (str r2, [sp, #-4]!)
   10620:	push	{r0}		; (str r0, [sp, #-4]!)
   10624:	ldr	ip, [pc, #16]	; 1063c <close@plt+0x3c>
   10628:	push	{ip}		; (str ip, [sp, #-4]!)
   1062c:	ldr	r0, [pc, #12]	; 10640 <close@plt+0x40>
   10630:	ldr	r3, [pc, #12]	; 10644 <close@plt+0x44>
   10634:	bl	10588 <__libc_start_main@plt>
   10638:	bl	105f4 <abort@plt>
   1063c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10640:	andeq	r0, r1, ip, asr fp
   10644:	muleq	r1, r0, ip
   10648:	ldr	r3, [pc, #20]	; 10664 <close@plt+0x64>
   1064c:	ldr	r2, [pc, #20]	; 10668 <close@plt+0x68>
   10650:	add	r3, pc, r3
   10654:	ldr	r2, [r3, r2]
   10658:	cmp	r2, #0
   1065c:	bxeq	lr
   10660:	b	105a0 <__gmon_start__@plt>
   10664:	andeq	r0, r1, r8, lsr #19
   10668:	andeq	r0, r0, ip, asr #32
   1066c:	ldr	r0, [pc, #24]	; 1068c <close@plt+0x8c>
   10670:	ldr	r3, [pc, #24]	; 10690 <close@plt+0x90>
   10674:	cmp	r3, r0
   10678:	bxeq	lr
   1067c:	ldr	r3, [pc, #16]	; 10694 <close@plt+0x94>
   10680:	cmp	r3, #0
   10684:	bxeq	lr
   10688:	bx	r3
   1068c:	andeq	r1, r2, ip, asr r0
   10690:	andeq	r1, r2, ip, asr r0
   10694:	andeq	r0, r0, r0
   10698:	ldr	r0, [pc, #36]	; 106c4 <close@plt+0xc4>
   1069c:	ldr	r1, [pc, #36]	; 106c8 <close@plt+0xc8>
   106a0:	sub	r1, r1, r0
   106a4:	asr	r1, r1, #2
   106a8:	add	r1, r1, r1, lsr #31
   106ac:	asrs	r1, r1, #1
   106b0:	bxeq	lr
   106b4:	ldr	r3, [pc, #16]	; 106cc <close@plt+0xcc>
   106b8:	cmp	r3, #0
   106bc:	bxeq	lr
   106c0:	bx	r3
   106c4:	andeq	r1, r2, ip, asr r0
   106c8:	andeq	r1, r2, ip, asr r0
   106cc:	andeq	r0, r0, r0
   106d0:	push	{r4, lr}
   106d4:	ldr	r4, [pc, #24]	; 106f4 <close@plt+0xf4>
   106d8:	ldrb	r3, [r4]
   106dc:	cmp	r3, #0
   106e0:	popne	{r4, pc}
   106e4:	bl	1066c <close@plt+0x6c>
   106e8:	mov	r3, #1
   106ec:	strb	r3, [r4]
   106f0:	pop	{r4, pc}
   106f4:	andeq	r1, r2, ip, asr r0
   106f8:	b	10698 <close@plt+0x98>
   106fc:	push	{r4, r5, r6, sl, fp, lr}
   10700:	add	fp, sp, #16
   10704:	cmp	r0, #0
   10708:	beq	1073c <close@plt+0x13c>
   1070c:	ldr	r6, [pc, #44]	; 10740 <close@plt+0x140>
   10710:	mov	r4, r0
   10714:	ldr	r6, [pc, r6]
   10718:	ldr	r5, [pc, #36]	; 10744 <close@plt+0x144>
   1071c:	add	r5, pc, r5
   10720:	ldr	r3, [r6]
   10724:	mov	r0, r5
   10728:	mov	r1, #2
   1072c:	mov	r2, #1
   10730:	bl	1057c <fwrite@plt>
   10734:	subs	r4, r4, #1
   10738:	bne	10720 <close@plt+0x120>
   1073c:	pop	{r4, r5, r6, sl, fp, pc}
   10740:	andeq	r0, r1, r4, lsr r9
   10744:	andeq	r0, r0, r8, ror #12
   10748:	push	{fp, lr}
   1074c:	mov	fp, sp
   10750:	sub	sp, sp, #24
   10754:	ldr	r2, [pc, #84]	; 107b0 <close@plt+0x1b0>
   10758:	ldr	r2, [pc, r2]
   1075c:	ldr	ip, [r2]
   10760:	uxtb	r2, r0
   10764:	str	r2, [sp, #20]
   10768:	ubfx	r2, r0, #8, #8
   1076c:	str	r2, [sp, #16]
   10770:	ubfx	r2, r0, #16, #8
   10774:	lsr	r0, r0, #24
   10778:	str	r0, [sp, #8]
   1077c:	uxtb	r0, r1
   10780:	str	r2, [sp, #12]
   10784:	lsr	r2, r1, #24
   10788:	str	r0, [sp, #4]
   1078c:	ubfx	r0, r1, #8, #8
   10790:	str	r0, [sp]
   10794:	ubfx	r3, r1, #16, #8
   10798:	ldr	r1, [pc, #20]	; 107b4 <close@plt+0x1b4>
   1079c:	mov	r0, ip
   107a0:	add	r1, pc, r1
   107a4:	bl	105d0 <fprintf@plt>
   107a8:	mov	sp, fp
   107ac:	pop	{fp, pc}
   107b0:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   107b4:	andeq	r0, r0, r8, asr r5
   107b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   107bc:	add	fp, sp, #28
   107c0:	sub	sp, sp, #36	; 0x24
   107c4:	cmp	r1, #31
   107c8:	bls	10ab4 <close@plt+0x4b4>
   107cc:	mov	sl, r2
   107d0:	add	r2, r0, #8
   107d4:	mov	r5, r0
   107d8:	ldr	r0, [r2, #4]
   107dc:	rev	r0, r0
   107e0:	sub	r4, r0, #32
   107e4:	cmp	r4, r1
   107e8:	bhi	10adc <close@plt+0x4dc>
   107ec:	ldrb	r0, [r5, #31]
   107f0:	str	r0, [sp, #28]
   107f4:	ldr	r0, [r5, #24]
   107f8:	ldrd	r8, [r5]
   107fc:	ldr	r6, [pc, #776]	; 10b0c <close@plt+0x50c>
   10800:	cmn	r0, #1
   10804:	ldr	r6, [pc, r6]
   10808:	str	r2, [sp, #32]
   1080c:	ldr	r7, [r6]
   10810:	beq	1083c <close@plt+0x23c>
   10814:	ldrd	r2, [r5, #16]
   10818:	rev	r1, r3
   1081c:	rev	r3, r2
   10820:	rev	r2, r0
   10824:	mov	r0, r7
   10828:	str	r1, [sp]
   1082c:	ldr	r1, [pc, #732]	; 10b10 <close@plt+0x510>
   10830:	add	r1, pc, r1
   10834:	bl	105d0 <fprintf@plt>
   10838:	b	10854 <close@plt+0x254>
   1083c:	ldr	r0, [pc, #720]	; 10b14 <close@plt+0x514>
   10840:	mov	r1, #11
   10844:	mov	r2, #1
   10848:	mov	r3, r7
   1084c:	add	r0, pc, r0
   10850:	bl	1057c <fwrite@plt>
   10854:	ldr	r0, [r6]
   10858:	ldr	r1, [pc, #696]	; 10b18 <close@plt+0x518>
   1085c:	mov	r2, r4
   10860:	mov	r3, #0
   10864:	rev	r8, r8
   10868:	rev	r9, r9
   1086c:	add	r1, pc, r1
   10870:	bl	105d0 <fprintf@plt>
   10874:	cmp	sl, #0
   10878:	str	sl, [sp, #24]
   1087c:	beq	108a8 <close@plt+0x2a8>
   10880:	ldr	r7, [pc, #660]	; 10b1c <close@plt+0x51c>
   10884:	ldr	sl, [sp, #24]
   10888:	add	r7, pc, r7
   1088c:	ldr	r3, [r6]
   10890:	mov	r0, r7
   10894:	mov	r1, #2
   10898:	mov	r2, #1
   1089c:	bl	1057c <fwrite@plt>
   108a0:	subs	sl, sl, #1
   108a4:	bne	1088c <close@plt+0x28c>
   108a8:	ldr	r1, [r6]
   108ac:	mov	r0, #32
   108b0:	bl	105e8 <fputc@plt>
   108b4:	uxtb	r1, r9
   108b8:	ldr	r0, [r6]
   108bc:	lsr	r2, r8, #24
   108c0:	str	r1, [sp, #20]
   108c4:	ubfx	r1, r9, #8, #8
   108c8:	str	r1, [sp, #16]
   108cc:	ubfx	r1, r9, #16, #8
   108d0:	str	r1, [sp, #12]
   108d4:	lsr	r1, r9, #24
   108d8:	str	r1, [sp, #8]
   108dc:	uxtb	r1, r8
   108e0:	str	r1, [sp, #4]
   108e4:	ubfx	r1, r8, #8, #8
   108e8:	str	r1, [sp]
   108ec:	ubfx	r3, r8, #16, #8
   108f0:	ldr	r1, [pc, #552]	; 10b20 <close@plt+0x520>
   108f4:	add	r1, pc, r1
   108f8:	bl	105d0 <fprintf@plt>
   108fc:	ldr	r1, [sp, #28]
   10900:	cmp	r1, #6
   10904:	bhi	10a78 <close@plt+0x478>
   10908:	add	r0, pc, #4
   1090c:	ldr	r1, [r0, r1, lsl #2]
   10910:	add	pc, r0, r1
   10914:	andeq	r0, r0, ip, lsl r0
   10918:	andeq	r0, r0, r4, ror #2
   1091c:	andeq	r0, r0, r0, lsr r0
   10920:	andeq	r0, r0, r4, lsr #1
   10924:	andeq	r0, r0, r8, ror r0
   10928:	ldrdeq	r0, [r0], -r4
   1092c:	andeq	r0, r0, r0, lsl #2
   10930:	ldr	r3, [r6]
   10934:	ldr	r0, [pc, #516]	; 10b40 <close@plt+0x540>
   10938:	mov	r1, #6
   1093c:	add	r0, pc, r0
   10940:	b	10a90 <close@plt+0x490>
   10944:	ldr	r1, [r6]
   10948:	mov	r0, #10
   1094c:	bl	105e8 <fputc@plt>
   10950:	ldr	r8, [sp, #32]
   10954:	cmp	r4, #0
   10958:	beq	10a9c <close@plt+0x49c>
   1095c:	ldr	r0, [sp, #24]
   10960:	add	r5, r5, #32
   10964:	mov	r7, #0
   10968:	add	r6, r0, #1
   1096c:	add	r0, r5, r7
   10970:	sub	r1, r4, r7
   10974:	mov	r2, r6
   10978:	bl	107b8 <close@plt+0x1b8>
   1097c:	add	r7, r0, r7
   10980:	cmp	r4, r7
   10984:	bhi	1096c <close@plt+0x36c>
   10988:	b	10a9c <close@plt+0x49c>
   1098c:	ldr	r8, [sp, #32]
   10990:	cmp	r4, #8
   10994:	bne	10a40 <close@plt+0x440>
   10998:	ldrd	r4, [r8, #24]
   1099c:	ldr	r0, [r6]
   109a0:	ldr	r1, [pc, #380]	; 10b24 <close@plt+0x524>
   109a4:	rev	r2, r5
   109a8:	rev	r3, r4
   109ac:	add	r1, pc, r1
   109b0:	bl	105d0 <fprintf@plt>
   109b4:	b	10a9c <close@plt+0x49c>
   109b8:	add	r0, r5, #32
   109bc:	mov	r1, r4
   109c0:	bl	10564 <strndup@plt>
   109c4:	mov	r4, r0
   109c8:	ldr	r0, [r6]
   109cc:	ldr	r1, [pc, #360]	; 10b3c <close@plt+0x53c>
   109d0:	mov	r2, r4
   109d4:	add	r1, pc, r1
   109d8:	bl	105d0 <fprintf@plt>
   109dc:	mov	r0, r4
   109e0:	bl	10558 <free@plt>
   109e4:	b	10a98 <close@plt+0x498>
   109e8:	ldr	r8, [sp, #32]
   109ec:	cmp	r4, #8
   109f0:	bne	10a50 <close@plt+0x450>
   109f4:	ldrd	r4, [r8, #24]
   109f8:	ldr	r0, [r6]
   109fc:	ldr	r1, [pc, #296]	; 10b2c <close@plt+0x52c>
   10a00:	rev	r2, r5
   10a04:	rev	r3, r4
   10a08:	add	r1, pc, r1
   10a0c:	bl	105d0 <fprintf@plt>
   10a10:	b	10a9c <close@plt+0x49c>
   10a14:	ldr	r8, [sp, #32]
   10a18:	cmp	r4, #8
   10a1c:	bne	10a60 <close@plt+0x460>
   10a20:	ldrd	r4, [r8, #24]
   10a24:	ldr	r0, [r6]
   10a28:	ldr	r1, [pc, #260]	; 10b34 <close@plt+0x534>
   10a2c:	rev	r2, r5
   10a30:	rev	r3, r4
   10a34:	add	r1, pc, r1
   10a38:	bl	105d0 <fprintf@plt>
   10a3c:	b	10a9c <close@plt+0x49c>
   10a40:	ldr	r0, [r6]
   10a44:	ldr	r1, [pc, #220]	; 10b28 <close@plt+0x528>
   10a48:	add	r1, pc, r1
   10a4c:	b	10a6c <close@plt+0x46c>
   10a50:	ldr	r0, [r6]
   10a54:	ldr	r1, [pc, #212]	; 10b30 <close@plt+0x530>
   10a58:	add	r1, pc, r1
   10a5c:	b	10a6c <close@plt+0x46c>
   10a60:	ldr	r0, [r6]
   10a64:	ldr	r1, [pc, #204]	; 10b38 <close@plt+0x538>
   10a68:	add	r1, pc, r1
   10a6c:	mov	r2, r4
   10a70:	bl	105d0 <fprintf@plt>
   10a74:	b	10a9c <close@plt+0x49c>
   10a78:	ldr	r0, [pc, #196]	; 10b44 <close@plt+0x544>
   10a7c:	mov	r1, #11
   10a80:	ldr	r0, [pc, r0]
   10a84:	ldr	r3, [r0]
   10a88:	ldr	r0, [pc, #184]	; 10b48 <close@plt+0x548>
   10a8c:	add	r0, pc, r0
   10a90:	mov	r2, #1
   10a94:	bl	1057c <fwrite@plt>
   10a98:	ldr	r8, [sp, #32]
   10a9c:	ldr	r0, [r8, #4]
   10aa0:	rev	r0, r0
   10aa4:	add	r0, r0, #7
   10aa8:	bic	r0, r0, #7
   10aac:	sub	sp, fp, #28
   10ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ab4:	ldr	r0, [pc, #144]	; 10b4c <close@plt+0x54c>
   10ab8:	mov	r1, #39	; 0x27
   10abc:	mov	r2, #1
   10ac0:	ldr	r0, [pc, r0]
   10ac4:	ldr	r3, [r0]
   10ac8:	ldr	r0, [pc, #128]	; 10b50 <close@plt+0x550>
   10acc:	add	r0, pc, r0
   10ad0:	bl	1057c <fwrite@plt>
   10ad4:	mov	r0, #1
   10ad8:	bl	105b8 <exit@plt>
   10adc:	ldr	r0, [pc, #112]	; 10b54 <close@plt+0x554>
   10ae0:	mov	r2, #0
   10ae4:	mov	r3, #0
   10ae8:	ldr	r0, [pc, r0]
   10aec:	stm	sp, {r1, r2}
   10af0:	mov	r2, r4
   10af4:	ldr	r0, [r0]
   10af8:	ldr	r1, [pc, #88]	; 10b58 <close@plt+0x558>
   10afc:	add	r1, pc, r1
   10b00:	bl	105d0 <fprintf@plt>
   10b04:	mov	r0, #1
   10b08:	bl	105b8 <exit@plt>
   10b0c:	andeq	r0, r1, r4, asr #16
   10b10:	andeq	r0, r0, ip, lsr r5
   10b14:	andeq	r0, r0, pc, lsr #10
   10b18:	andeq	r0, r0, fp, lsl r5
   10b1c:	strdeq	r0, [r0], -ip
   10b20:	andeq	r0, r0, r4, lsl #8
   10b24:	andeq	r0, r0, r4, ror #7
   10b28:	andeq	r0, r0, r0, asr r3
   10b2c:	muleq	r0, r7, r3
   10b30:	andeq	r0, r0, pc, asr #6
   10b34:	andeq	r0, r0, sl, ror r3
   10b38:	andeq	r0, r0, ip, asr #6
   10b3c:	andeq	r0, r0, r7, ror #7
   10b40:	andeq	r0, r0, r6, lsl #9
   10b44:	andeq	r0, r1, r0, asr #11
   10b48:	andeq	r0, r0, sp, lsr r3
   10b4c:	andeq	r0, r1, r8, lsl #11
   10b50:	andeq	r0, r0, pc, lsr r2
   10b54:	andeq	r0, r1, r0, ror #10
   10b58:	andeq	r0, r0, r7, lsr r2
   10b5c:	push	{r4, r5, r6, sl, fp, lr}
   10b60:	add	fp, sp, #16
   10b64:	sub	sp, sp, #96	; 0x60
   10b68:	cmp	r0, #2
   10b6c:	bne	10c1c <close@plt+0x61c>
   10b70:	ldr	r0, [r1, #4]
   10b74:	mov	r1, #0
   10b78:	bl	105ac <open@plt>
   10b7c:	cmn	r0, #1
   10b80:	beq	10c44 <close@plt+0x644>
   10b84:	mov	r4, r0
   10b88:	add	r2, sp, #8
   10b8c:	mov	r0, #3
   10b90:	mov	r1, r4
   10b94:	bl	10594 <__fxstat@plt>
   10b98:	cmn	r0, #1
   10b9c:	beq	10c50 <close@plt+0x650>
   10ba0:	ldr	r5, [sp, #52]	; 0x34
   10ba4:	mov	r0, #0
   10ba8:	mov	r2, #1
   10bac:	mov	r3, #1
   10bb0:	str	r4, [sp]
   10bb4:	str	r0, [sp, #4]
   10bb8:	mov	r0, #0
   10bbc:	mov	r1, r5
   10bc0:	bl	105c4 <mmap@plt>
   10bc4:	cmn	r0, #1
   10bc8:	beq	10c5c <close@plt+0x65c>
   10bcc:	mov	r1, r5
   10bd0:	mov	r2, #0
   10bd4:	mov	r6, r0
   10bd8:	bl	107b8 <close@plt+0x1b8>
   10bdc:	mov	r0, r6
   10be0:	mov	r1, r5
   10be4:	bl	105dc <munmap@plt>
   10be8:	cmn	r0, #1
   10bec:	beq	10c68 <close@plt+0x668>
   10bf0:	mov	r0, r4
   10bf4:	bl	10600 <close@plt>
   10bf8:	cmn	r0, #1
   10bfc:	movne	r0, #0
   10c00:	subne	sp, fp, #16
   10c04:	popne	{r4, r5, r6, sl, fp, pc}
   10c08:	ldr	r0, [pc, #116]	; 10c84 <close@plt+0x684>
   10c0c:	add	r0, pc, r0
   10c10:	bl	10570 <perror@plt>
   10c14:	mov	r0, #1
   10c18:	bl	105b8 <exit@plt>
   10c1c:	ldr	r0, [pc, #100]	; 10c88 <close@plt+0x688>
   10c20:	mov	r1, #31
   10c24:	mov	r2, #1
   10c28:	ldr	r0, [pc, r0]
   10c2c:	ldr	r3, [r0]
   10c30:	ldr	r0, [pc, #84]	; 10c8c <close@plt+0x68c>
   10c34:	add	r0, pc, r0
   10c38:	bl	1057c <fwrite@plt>
   10c3c:	mov	r0, #1
   10c40:	bl	105b8 <exit@plt>
   10c44:	ldr	r0, [pc, #40]	; 10c74 <close@plt+0x674>
   10c48:	add	r0, pc, r0
   10c4c:	b	10c10 <close@plt+0x610>
   10c50:	ldr	r0, [pc, #32]	; 10c78 <close@plt+0x678>
   10c54:	add	r0, pc, r0
   10c58:	b	10c10 <close@plt+0x610>
   10c5c:	ldr	r0, [pc, #24]	; 10c7c <close@plt+0x67c>
   10c60:	add	r0, pc, r0
   10c64:	b	10c10 <close@plt+0x610>
   10c68:	ldr	r0, [pc, #16]	; 10c80 <close@plt+0x680>
   10c6c:	add	r0, pc, r0
   10c70:	b	10c10 <close@plt+0x610>
   10c74:	andeq	r0, r0, sp, lsr #3
   10c78:			; <UNDEFINED> instruction: 0x000001b6
   10c7c:	andeq	r0, r0, r3, asr #3
   10c80:	ldrdeq	r0, [r0], -r9
   10c84:	andeq	r0, r0, pc, asr r2
   10c88:	andeq	r0, r1, r8, lsl r4
   10c8c:	andeq	r0, r0, r1, lsr #3
   10c90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c94:	mov	r7, r0
   10c98:	ldr	r6, [pc, #72]	; 10ce8 <close@plt+0x6e8>
   10c9c:	ldr	r5, [pc, #72]	; 10cec <close@plt+0x6ec>
   10ca0:	add	r6, pc, r6
   10ca4:	add	r5, pc, r5
   10ca8:	sub	r6, r6, r5
   10cac:	mov	r8, r1
   10cb0:	mov	r9, r2
   10cb4:	bl	10538 <free@plt-0x20>
   10cb8:	asrs	r6, r6, #2
   10cbc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10cc0:	mov	r4, #0
   10cc4:	add	r4, r4, #1
   10cc8:	ldr	r3, [r5], #4
   10ccc:	mov	r2, r9
   10cd0:	mov	r1, r8
   10cd4:	mov	r0, r7
   10cd8:	blx	r3
   10cdc:	cmp	r6, r4
   10ce0:	bne	10cc4 <close@plt+0x6c4>
   10ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ce8:	andeq	r0, r1, r4, ror #4
   10cec:	andeq	r0, r1, ip, asr r2
   10cf0:	bx	lr

Disassembly of section .fini:

00010cf4 <.fini>:
   10cf4:	push	{r3, lr}
   10cf8:	pop	{r3, pc}
