
../repos/coreutils/src/nl:     file format elf32-littlearm


Disassembly of section .init:

00010fc4 <.init>:
   10fc4:	push	{r3, lr}
   10fc8:	bl	11368 <__assert_fail@plt+0x48>
   10fcc:	pop	{r3, pc}

Disassembly of section .plt:

00010fd0 <pthread_mutex_unlock@plt-0x14>:
   10fd0:	push	{lr}		; (str lr, [sp, #-4]!)
   10fd4:	ldr	lr, [pc, #4]	; 10fe0 <pthread_mutex_unlock@plt-0x4>
   10fd8:	add	lr, pc, lr
   10fdc:	ldr	pc, [lr, #8]!
   10fe0:	andeq	r3, r3, r0, lsr #32

00010fe4 <pthread_mutex_unlock@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #208896	; 0x33000
   10fec:	ldr	pc, [ip, #32]!

00010ff0 <calloc@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #208896	; 0x33000
   10ff8:	ldr	pc, [ip, #24]!

00010ffc <fputs_unlocked@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #208896	; 0x33000
   11004:	ldr	pc, [ip, #16]!

00011008 <wctype@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #208896	; 0x33000
   11010:	ldr	pc, [ip, #8]!

00011014 <raise@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #208896	; 0x33000
   1101c:	ldr	pc, [ip, #0]!

00011020 <wcrtomb@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #204800	; 0x32000
   11028:	ldr	pc, [ip, #4088]!	; 0xff8

0001102c <iswctype@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #204800	; 0x32000
   11034:	ldr	pc, [ip, #4080]!	; 0xff0

00011038 <strcmp@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #204800	; 0x32000
   11040:	ldr	pc, [ip, #4072]!	; 0xfe8

00011044 <posix_fadvise64@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #204800	; 0x32000
   1104c:	ldr	pc, [ip, #4064]!	; 0xfe0

00011050 <printf@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #204800	; 0x32000
   11058:	ldr	pc, [ip, #4056]!	; 0xfd8

0001105c <pthread_mutex_destroy@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #204800	; 0x32000
   11064:	ldr	pc, [ip, #4048]!	; 0xfd0

00011068 <fflush@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #204800	; 0x32000
   11070:	ldr	pc, [ip, #4040]!	; 0xfc8

00011074 <memmove@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #204800	; 0x32000
   1107c:	ldr	pc, [ip, #4032]!	; 0xfc0

00011080 <free@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #204800	; 0x32000
   11088:	ldr	pc, [ip, #4024]!	; 0xfb8

0001108c <pthread_mutex_lock@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #204800	; 0x32000
   11094:	ldr	pc, [ip, #4016]!	; 0xfb0

00011098 <_exit@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #204800	; 0x32000
   110a0:	ldr	pc, [ip, #4008]!	; 0xfa8

000110a4 <memcpy@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #204800	; 0x32000
   110ac:	ldr	pc, [ip, #4000]!	; 0xfa0

000110b0 <tolower@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #204800	; 0x32000
   110b8:	ldr	pc, [ip, #3992]!	; 0xf98

000110bc <pthread_mutex_init@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #204800	; 0x32000
   110c4:	ldr	pc, [ip, #3984]!	; 0xf90

000110c8 <towlower@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #204800	; 0x32000
   110d0:	ldr	pc, [ip, #3976]!	; 0xf88

000110d4 <mbsinit@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #204800	; 0x32000
   110dc:	ldr	pc, [ip, #3968]!	; 0xf80

000110e0 <fwrite_unlocked@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #204800	; 0x32000
   110e8:	ldr	pc, [ip, #3960]!	; 0xf78

000110ec <memcmp@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #204800	; 0x32000
   110f4:	ldr	pc, [ip, #3952]!	; 0xf70

000110f8 <stpcpy@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #204800	; 0x32000
   11100:	ldr	pc, [ip, #3944]!	; 0xf68

00011104 <fputc_unlocked@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #204800	; 0x32000
   1110c:	ldr	pc, [ip, #3936]!	; 0xf60

00011110 <getc_unlocked@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #204800	; 0x32000
   11118:	ldr	pc, [ip, #3928]!	; 0xf58

0001111c <realloc@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #204800	; 0x32000
   11124:	ldr	pc, [ip, #3920]!	; 0xf50

00011128 <textdomain@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #204800	; 0x32000
   11130:	ldr	pc, [ip, #3912]!	; 0xf48

00011134 <iswprint@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #204800	; 0x32000
   1113c:	ldr	pc, [ip, #3904]!	; 0xf40

00011140 <fwrite@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #204800	; 0x32000
   11148:	ldr	pc, [ip, #3896]!	; 0xf38

0001114c <lseek64@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #204800	; 0x32000
   11154:	ldr	pc, [ip, #3888]!	; 0xf30

00011158 <__ctype_get_mb_cur_max@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #204800	; 0x32000
   11160:	ldr	pc, [ip, #3880]!	; 0xf28

00011164 <strcpy@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #204800	; 0x32000
   1116c:	ldr	pc, [ip, #3872]!	; 0xf20

00011170 <__fpending@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #204800	; 0x32000
   11178:	ldr	pc, [ip, #3864]!	; 0xf18

0001117c <ferror_unlocked@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #204800	; 0x32000
   11184:	ldr	pc, [ip, #3856]!	; 0xf10

00011188 <mbrtowc@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #204800	; 0x32000
   11190:	ldr	pc, [ip, #3848]!	; 0xf08

00011194 <error@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #204800	; 0x32000
   1119c:	ldr	pc, [ip, #3840]!	; 0xf00

000111a0 <malloc@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #204800	; 0x32000
   111a8:	ldr	pc, [ip, #3832]!	; 0xef8

000111ac <__libc_start_main@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #204800	; 0x32000
   111b4:	ldr	pc, [ip, #3824]!	; 0xef0

000111b8 <__freading@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #204800	; 0x32000
   111c0:	ldr	pc, [ip, #3816]!	; 0xee8

000111c4 <__gmon_start__@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #204800	; 0x32000
   111cc:	ldr	pc, [ip, #3808]!	; 0xee0

000111d0 <getopt_long@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #204800	; 0x32000
   111d8:	ldr	pc, [ip, #3800]!	; 0xed8

000111dc <__ctype_b_loc@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #204800	; 0x32000
   111e4:	ldr	pc, [ip, #3792]!	; 0xed0

000111e8 <exit@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #204800	; 0x32000
   111f0:	ldr	pc, [ip, #3784]!	; 0xec8

000111f4 <gettext@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #204800	; 0x32000
   111fc:	ldr	pc, [ip, #3776]!	; 0xec0

00011200 <strlen@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #204800	; 0x32000
   11208:	ldr	pc, [ip, #3768]!	; 0xeb8

0001120c <strchr@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #204800	; 0x32000
   11214:	ldr	pc, [ip, #3760]!	; 0xeb0

00011218 <fprintf@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #204800	; 0x32000
   11220:	ldr	pc, [ip, #3752]!	; 0xea8

00011224 <__errno_location@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #204800	; 0x32000
   1122c:	ldr	pc, [ip, #3744]!	; 0xea0

00011230 <iswalnum@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #204800	; 0x32000
   11238:	ldr	pc, [ip, #3736]!	; 0xe98

0001123c <__cxa_atexit@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #204800	; 0x32000
   11244:	ldr	pc, [ip, #3728]!	; 0xe90

00011248 <memset@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #204800	; 0x32000
   11250:	ldr	pc, [ip, #3720]!	; 0xe88

00011254 <btowc@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #204800	; 0x32000
   1125c:	ldr	pc, [ip, #3712]!	; 0xe80

00011260 <fileno@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #204800	; 0x32000
   11268:	ldr	pc, [ip, #3704]!	; 0xe78

0001126c <strtoimax@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #204800	; 0x32000
   11274:	ldr	pc, [ip, #3696]!	; 0xe70

00011278 <fclose@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #204800	; 0x32000
   11280:	ldr	pc, [ip, #3688]!	; 0xe68

00011284 <fseeko64@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #204800	; 0x32000
   1128c:	ldr	pc, [ip, #3680]!	; 0xe60

00011290 <setlocale@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #204800	; 0x32000
   11298:	ldr	pc, [ip, #3672]!	; 0xe58

0001129c <toupper@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #204800	; 0x32000
   112a4:	ldr	pc, [ip, #3664]!	; 0xe50

000112a8 <strrchr@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #204800	; 0x32000
   112b0:	ldr	pc, [ip, #3656]!	; 0xe48

000112b4 <nl_langinfo@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #204800	; 0x32000
   112bc:	ldr	pc, [ip, #3648]!	; 0xe40

000112c0 <clearerr_unlocked@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #204800	; 0x32000
   112c8:	ldr	pc, [ip, #3640]!	; 0xe38

000112cc <fopen64@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #204800	; 0x32000
   112d4:	ldr	pc, [ip, #3632]!	; 0xe30

000112d8 <bindtextdomain@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #204800	; 0x32000
   112e0:	ldr	pc, [ip, #3624]!	; 0xe28

000112e4 <towupper@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #204800	; 0x32000
   112ec:	ldr	pc, [ip, #3616]!	; 0xe20

000112f0 <strncmp@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #204800	; 0x32000
   112f8:	ldr	pc, [ip, #3608]!	; 0xe18

000112fc <abort@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #204800	; 0x32000
   11304:	ldr	pc, [ip, #3600]!	; 0xe10

00011308 <feof_unlocked@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #204800	; 0x32000
   11310:	ldr	pc, [ip, #3592]!	; 0xe08

00011314 <putchar_unlocked@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #204800	; 0x32000
   1131c:	ldr	pc, [ip, #3584]!	; 0xe00

00011320 <__assert_fail@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #204800	; 0x32000
   11328:	ldr	pc, [ip, #3576]!	; 0xdf8

Disassembly of section .text:

0001132c <.text>:
   1132c:	mov	fp, #0
   11330:	mov	lr, #0
   11334:	pop	{r1}		; (ldr r1, [sp], #4)
   11338:	mov	r2, sp
   1133c:	push	{r2}		; (str r2, [sp, #-4]!)
   11340:	push	{r0}		; (str r0, [sp, #-4]!)
   11344:	ldr	ip, [pc, #16]	; 1135c <__assert_fail@plt+0x3c>
   11348:	push	{ip}		; (str ip, [sp, #-4]!)
   1134c:	ldr	r0, [pc, #12]	; 11360 <__assert_fail@plt+0x40>
   11350:	ldr	r3, [pc, #12]	; 11364 <__assert_fail@plt+0x44>
   11354:	bl	111ac <__libc_start_main@plt>
   11358:	bl	112fc <abort@plt>
   1135c:	andeq	r2, r3, r0, lsr r6
   11360:	andeq	r2, r1, ip, lsl #5
   11364:	ldrdeq	r2, [r3], -r0
   11368:	ldr	r3, [pc, #20]	; 11384 <__assert_fail@plt+0x64>
   1136c:	ldr	r2, [pc, #20]	; 11388 <__assert_fail@plt+0x68>
   11370:	add	r3, pc, r3
   11374:	ldr	r2, [r3, r2]
   11378:	cmp	r2, #0
   1137c:	bxeq	lr
   11380:	b	111c4 <__gmon_start__@plt>
   11384:	andeq	r2, r3, r8, lsl #25
   11388:	andeq	r0, r0, r4, lsr #2
   1138c:	ldr	r3, [pc, #28]	; 113b0 <__assert_fail@plt+0x90>
   11390:	ldr	r0, [pc, #28]	; 113b4 <__assert_fail@plt+0x94>
   11394:	sub	r3, r3, r0
   11398:	cmp	r3, #6
   1139c:	bxls	lr
   113a0:	ldr	r3, [pc, #16]	; 113b8 <__assert_fail@plt+0x98>
   113a4:	cmp	r3, #0
   113a8:	bxeq	lr
   113ac:	bx	r3
   113b0:			; <UNDEFINED> instruction: 0x000441bb
   113b4:			; <UNDEFINED> instruction: 0x000441b8
   113b8:	andeq	r0, r0, r0
   113bc:	ldr	r1, [pc, #36]	; 113e8 <__assert_fail@plt+0xc8>
   113c0:	ldr	r0, [pc, #36]	; 113ec <__assert_fail@plt+0xcc>
   113c4:	sub	r1, r1, r0
   113c8:	asr	r1, r1, #2
   113cc:	add	r1, r1, r1, lsr #31
   113d0:	asrs	r1, r1, #1
   113d4:	bxeq	lr
   113d8:	ldr	r3, [pc, #16]	; 113f0 <__assert_fail@plt+0xd0>
   113dc:	cmp	r3, #0
   113e0:	bxeq	lr
   113e4:	bx	r3
   113e8:			; <UNDEFINED> instruction: 0x000441b8
   113ec:			; <UNDEFINED> instruction: 0x000441b8
   113f0:	andeq	r0, r0, r0
   113f4:	push	{r4, lr}
   113f8:	ldr	r4, [pc, #24]	; 11418 <__assert_fail@plt+0xf8>
   113fc:	ldrb	r3, [r4]
   11400:	cmp	r3, #0
   11404:	popne	{r4, pc}
   11408:	bl	1138c <__assert_fail@plt+0x6c>
   1140c:	mov	r3, #1
   11410:	strb	r3, [r4]
   11414:	pop	{r4, pc}
   11418:	ldrdeq	r4, [r4], -ip
   1141c:	ldr	r0, [pc, #40]	; 1144c <__assert_fail@plt+0x12c>
   11420:	ldr	r3, [r0]
   11424:	cmp	r3, #0
   11428:	bne	11430 <__assert_fail@plt+0x110>
   1142c:	b	113bc <__assert_fail@plt+0x9c>
   11430:	ldr	r3, [pc, #24]	; 11450 <__assert_fail@plt+0x130>
   11434:	cmp	r3, #0
   11438:	beq	1142c <__assert_fail@plt+0x10c>
   1143c:	push	{r4, lr}
   11440:	blx	r3
   11444:	pop	{r4, lr}
   11448:	b	113bc <__assert_fail@plt+0x9c>
   1144c:	andeq	r3, r4, r4, lsl pc
   11450:	andeq	r0, r0, r0
   11454:	push	{fp, lr}
   11458:	add	fp, sp, #4
   1145c:	ldr	r0, [pc, #32]	; 11484 <__assert_fail@plt+0x164>
   11460:	bl	111f4 <gettext@plt>
   11464:	mov	r2, r0
   11468:	ldr	r3, [pc, #24]	; 11488 <__assert_fail@plt+0x168>
   1146c:	ldr	r3, [r3]
   11470:	mov	r1, r3
   11474:	mov	r0, r2
   11478:	bl	10ffc <fputs_unlocked@plt>
   1147c:	nop			; (mov r0, r0)
   11480:	pop	{fp, pc}
   11484:	andeq	r2, r3, r8, asr r6
   11488:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   1148c:	push	{fp, lr}
   11490:	add	fp, sp, #4
   11494:	ldr	r0, [pc, #32]	; 114bc <__assert_fail@plt+0x19c>
   11498:	bl	111f4 <gettext@plt>
   1149c:	mov	r2, r0
   114a0:	ldr	r3, [pc, #24]	; 114c0 <__assert_fail@plt+0x1a0>
   114a4:	ldr	r3, [r3]
   114a8:	mov	r1, r3
   114ac:	mov	r0, r2
   114b0:	bl	10ffc <fputs_unlocked@plt>
   114b4:	nop			; (mov r0, r0)
   114b8:	pop	{fp, pc}
   114bc:	muleq	r3, r0, r6
   114c0:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   114c4:	push	{fp, lr}
   114c8:	add	fp, sp, #4
   114cc:	sub	sp, sp, #80	; 0x50
   114d0:	str	r0, [fp, #-80]	; 0xffffffb0
   114d4:	ldr	r3, [pc, #348]	; 11638 <__assert_fail@plt+0x318>
   114d8:	sub	ip, fp, #72	; 0x48
   114dc:	mov	lr, r3
   114e0:	ldm	lr!, {r0, r1, r2, r3}
   114e4:	stmia	ip!, {r0, r1, r2, r3}
   114e8:	ldm	lr!, {r0, r1, r2, r3}
   114ec:	stmia	ip!, {r0, r1, r2, r3}
   114f0:	ldm	lr!, {r0, r1, r2, r3}
   114f4:	stmia	ip!, {r0, r1, r2, r3}
   114f8:	ldm	lr, {r0, r1}
   114fc:	stm	ip, {r0, r1}
   11500:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11504:	str	r3, [fp, #-8]
   11508:	sub	r3, fp, #72	; 0x48
   1150c:	str	r3, [fp, #-12]
   11510:	b	11520 <__assert_fail@plt+0x200>
   11514:	ldr	r3, [fp, #-12]
   11518:	add	r3, r3, #8
   1151c:	str	r3, [fp, #-12]
   11520:	ldr	r3, [fp, #-12]
   11524:	ldr	r3, [r3]
   11528:	cmp	r3, #0
   1152c:	beq	11550 <__assert_fail@plt+0x230>
   11530:	ldr	r3, [fp, #-12]
   11534:	ldr	r3, [r3]
   11538:	mov	r1, r3
   1153c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11540:	bl	11038 <strcmp@plt>
   11544:	mov	r3, r0
   11548:	cmp	r3, #0
   1154c:	bne	11514 <__assert_fail@plt+0x1f4>
   11550:	ldr	r3, [fp, #-12]
   11554:	ldr	r3, [r3, #4]
   11558:	cmp	r3, #0
   1155c:	beq	1156c <__assert_fail@plt+0x24c>
   11560:	ldr	r3, [fp, #-12]
   11564:	ldr	r3, [r3, #4]
   11568:	str	r3, [fp, #-8]
   1156c:	ldr	r0, [pc, #200]	; 1163c <__assert_fail@plt+0x31c>
   11570:	bl	111f4 <gettext@plt>
   11574:	mov	r3, r0
   11578:	ldr	r2, [pc, #192]	; 11640 <__assert_fail@plt+0x320>
   1157c:	ldr	r1, [pc, #192]	; 11644 <__assert_fail@plt+0x324>
   11580:	mov	r0, r3
   11584:	bl	11050 <printf@plt>
   11588:	mov	r1, #0
   1158c:	mov	r0, #5
   11590:	bl	11290 <setlocale@plt>
   11594:	str	r0, [fp, #-16]
   11598:	ldr	r3, [fp, #-16]
   1159c:	cmp	r3, #0
   115a0:	beq	115e0 <__assert_fail@plt+0x2c0>
   115a4:	mov	r2, #3
   115a8:	ldr	r1, [pc, #152]	; 11648 <__assert_fail@plt+0x328>
   115ac:	ldr	r0, [fp, #-16]
   115b0:	bl	112f0 <strncmp@plt>
   115b4:	mov	r3, r0
   115b8:	cmp	r3, #0
   115bc:	beq	115e0 <__assert_fail@plt+0x2c0>
   115c0:	ldr	r0, [pc, #132]	; 1164c <__assert_fail@plt+0x32c>
   115c4:	bl	111f4 <gettext@plt>
   115c8:	mov	r2, r0
   115cc:	ldr	r3, [pc, #124]	; 11650 <__assert_fail@plt+0x330>
   115d0:	ldr	r3, [r3]
   115d4:	mov	r1, r3
   115d8:	mov	r0, r2
   115dc:	bl	10ffc <fputs_unlocked@plt>
   115e0:	ldr	r0, [pc, #108]	; 11654 <__assert_fail@plt+0x334>
   115e4:	bl	111f4 <gettext@plt>
   115e8:	mov	r3, r0
   115ec:	ldr	r2, [fp, #-80]	; 0xffffffb0
   115f0:	ldr	r1, [pc, #72]	; 11640 <__assert_fail@plt+0x320>
   115f4:	mov	r0, r3
   115f8:	bl	11050 <printf@plt>
   115fc:	ldr	r0, [pc, #84]	; 11658 <__assert_fail@plt+0x338>
   11600:	bl	111f4 <gettext@plt>
   11604:	ldr	r2, [fp, #-8]
   11608:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1160c:	cmp	r2, r3
   11610:	bne	1161c <__assert_fail@plt+0x2fc>
   11614:	ldr	r3, [pc, #64]	; 1165c <__assert_fail@plt+0x33c>
   11618:	b	11620 <__assert_fail@plt+0x300>
   1161c:	ldr	r3, [pc, #60]	; 11660 <__assert_fail@plt+0x340>
   11620:	mov	r2, r3
   11624:	ldr	r1, [fp, #-8]
   11628:	bl	11050 <printf@plt>
   1162c:	nop			; (mov r0, r0)
   11630:	sub	sp, fp, #4
   11634:	pop	{fp, pc}
   11638:	andeq	r2, r3, r0, asr r8
   1163c:	ldrdeq	r2, [r3], -ip
   11640:	strdeq	r2, [r3], -r4
   11644:	andeq	r2, r3, ip, lsl r7
   11648:	andeq	r2, r3, ip, lsr #14
   1164c:	andeq	r2, r3, r0, lsr r7
   11650:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   11654:	andeq	r2, r3, r8, ror r7
   11658:	muleq	r3, r4, r7
   1165c:	andeq	r2, r3, r8, asr #15
   11660:	ldrdeq	r2, [r3], -r4
   11664:	push	{r4, fp, lr}
   11668:	add	fp, sp, #8
   1166c:	sub	sp, sp, #12
   11670:	str	r0, [fp, #-16]
   11674:	ldr	r3, [fp, #-16]
   11678:	cmp	r3, #0
   1167c:	beq	116ac <__assert_fail@plt+0x38c>
   11680:	ldr	r3, [pc, #380]	; 11804 <__assert_fail@plt+0x4e4>
   11684:	ldr	r4, [r3]
   11688:	ldr	r0, [pc, #376]	; 11808 <__assert_fail@plt+0x4e8>
   1168c:	bl	111f4 <gettext@plt>
   11690:	mov	r1, r0
   11694:	ldr	r3, [pc, #368]	; 1180c <__assert_fail@plt+0x4ec>
   11698:	ldr	r3, [r3]
   1169c:	mov	r2, r3
   116a0:	mov	r0, r4
   116a4:	bl	11218 <fprintf@plt>
   116a8:	b	117fc <__assert_fail@plt+0x4dc>
   116ac:	ldr	r0, [pc, #348]	; 11810 <__assert_fail@plt+0x4f0>
   116b0:	bl	111f4 <gettext@plt>
   116b4:	mov	r2, r0
   116b8:	ldr	r3, [pc, #332]	; 1180c <__assert_fail@plt+0x4ec>
   116bc:	ldr	r3, [r3]
   116c0:	mov	r1, r3
   116c4:	mov	r0, r2
   116c8:	bl	11050 <printf@plt>
   116cc:	ldr	r0, [pc, #320]	; 11814 <__assert_fail@plt+0x4f4>
   116d0:	bl	111f4 <gettext@plt>
   116d4:	mov	r2, r0
   116d8:	ldr	r3, [pc, #312]	; 11818 <__assert_fail@plt+0x4f8>
   116dc:	ldr	r3, [r3]
   116e0:	mov	r1, r3
   116e4:	mov	r0, r2
   116e8:	bl	10ffc <fputs_unlocked@plt>
   116ec:	bl	11454 <__assert_fail@plt+0x134>
   116f0:	bl	1148c <__assert_fail@plt+0x16c>
   116f4:	ldr	r0, [pc, #288]	; 1181c <__assert_fail@plt+0x4fc>
   116f8:	bl	111f4 <gettext@plt>
   116fc:	mov	r2, r0
   11700:	ldr	r3, [pc, #272]	; 11818 <__assert_fail@plt+0x4f8>
   11704:	ldr	r3, [r3]
   11708:	mov	r1, r3
   1170c:	mov	r0, r2
   11710:	bl	10ffc <fputs_unlocked@plt>
   11714:	ldr	r0, [pc, #260]	; 11820 <__assert_fail@plt+0x500>
   11718:	bl	111f4 <gettext@plt>
   1171c:	mov	r2, r0
   11720:	ldr	r3, [pc, #240]	; 11818 <__assert_fail@plt+0x4f8>
   11724:	ldr	r3, [r3]
   11728:	mov	r1, r3
   1172c:	mov	r0, r2
   11730:	bl	10ffc <fputs_unlocked@plt>
   11734:	ldr	r0, [pc, #232]	; 11824 <__assert_fail@plt+0x504>
   11738:	bl	111f4 <gettext@plt>
   1173c:	mov	r2, r0
   11740:	ldr	r3, [pc, #208]	; 11818 <__assert_fail@plt+0x4f8>
   11744:	ldr	r3, [r3]
   11748:	mov	r1, r3
   1174c:	mov	r0, r2
   11750:	bl	10ffc <fputs_unlocked@plt>
   11754:	ldr	r0, [pc, #204]	; 11828 <__assert_fail@plt+0x508>
   11758:	bl	111f4 <gettext@plt>
   1175c:	mov	r2, r0
   11760:	ldr	r3, [pc, #176]	; 11818 <__assert_fail@plt+0x4f8>
   11764:	ldr	r3, [r3]
   11768:	mov	r1, r3
   1176c:	mov	r0, r2
   11770:	bl	10ffc <fputs_unlocked@plt>
   11774:	ldr	r0, [pc, #176]	; 1182c <__assert_fail@plt+0x50c>
   11778:	bl	111f4 <gettext@plt>
   1177c:	mov	r2, r0
   11780:	ldr	r3, [pc, #144]	; 11818 <__assert_fail@plt+0x4f8>
   11784:	ldr	r3, [r3]
   11788:	mov	r1, r3
   1178c:	mov	r0, r2
   11790:	bl	10ffc <fputs_unlocked@plt>
   11794:	ldr	r0, [pc, #148]	; 11830 <__assert_fail@plt+0x510>
   11798:	bl	111f4 <gettext@plt>
   1179c:	mov	r2, r0
   117a0:	ldr	r3, [pc, #112]	; 11818 <__assert_fail@plt+0x4f8>
   117a4:	ldr	r3, [r3]
   117a8:	mov	r1, r3
   117ac:	mov	r0, r2
   117b0:	bl	10ffc <fputs_unlocked@plt>
   117b4:	ldr	r0, [pc, #120]	; 11834 <__assert_fail@plt+0x514>
   117b8:	bl	111f4 <gettext@plt>
   117bc:	mov	r2, r0
   117c0:	ldr	r3, [pc, #80]	; 11818 <__assert_fail@plt+0x4f8>
   117c4:	ldr	r3, [r3]
   117c8:	mov	r1, r3
   117cc:	mov	r0, r2
   117d0:	bl	10ffc <fputs_unlocked@plt>
   117d4:	ldr	r0, [pc, #92]	; 11838 <__assert_fail@plt+0x518>
   117d8:	bl	111f4 <gettext@plt>
   117dc:	mov	r2, r0
   117e0:	ldr	r3, [pc, #48]	; 11818 <__assert_fail@plt+0x4f8>
   117e4:	ldr	r3, [r3]
   117e8:	mov	r1, r3
   117ec:	mov	r0, r2
   117f0:	bl	10ffc <fputs_unlocked@plt>
   117f4:	ldr	r0, [pc, #64]	; 1183c <__assert_fail@plt+0x51c>
   117f8:	bl	114c4 <__assert_fail@plt+0x1a4>
   117fc:	ldr	r0, [fp, #-16]
   11800:	bl	111e8 <exit@plt>
   11804:	andeq	r4, r4, r8, asr #3
   11808:	andeq	r2, r3, ip, ror #20
   1180c:	muleq	r4, r0, r5
   11810:	muleq	r3, r4, sl
   11814:			; <UNDEFINED> instruction: 0x00032ab8
   11818:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   1181c:	strdeq	r2, [r3], -r8
   11820:	andeq	r2, r3, ip, asr #23
   11824:	andeq	r2, r3, r8, lsl #27
   11828:	andeq	r2, r3, r8, lsl lr
   1182c:	andeq	r2, r3, r8, asr #28
   11830:	andeq	r2, r3, r0, lsl #29
   11834:	andeq	r2, r3, r4, asr #31
   11838:	muleq	r3, r0, r0
   1183c:	andeq	r3, r3, r4, lsr #2
   11840:	push	{r4, fp, lr}
   11844:	add	fp, sp, #8
   11848:	sub	sp, sp, #28
   1184c:	str	r0, [fp, #-24]	; 0xffffffe8
   11850:	str	r1, [fp, #-28]	; 0xffffffe4
   11854:	str	r2, [fp, #-32]	; 0xffffffe0
   11858:	mov	r3, #1
   1185c:	strb	r3, [fp, #-13]
   11860:	ldr	r3, [pc, #320]	; 119a8 <__assert_fail@plt+0x688>
   11864:	ldr	r3, [r3]
   11868:	ldrb	r3, [r3]
   1186c:	sub	r3, r3, #97	; 0x61
   11870:	cmp	r3, #19
   11874:	ldrls	pc, [pc, r3, lsl #2]
   11878:	b	11988 <__assert_fail@plt+0x668>
   1187c:	andeq	r1, r1, ip, asr #17
   11880:	andeq	r1, r1, r8, lsl #19
   11884:	andeq	r1, r1, r8, lsl #19
   11888:	andeq	r1, r1, r8, lsl #19
   1188c:	andeq	r1, r1, r8, lsl #19
   11890:	andeq	r1, r1, r8, lsl #19
   11894:	andeq	r1, r1, r8, lsl #19
   11898:	andeq	r1, r1, r8, lsl #19
   1189c:	andeq	r1, r1, r8, lsl #19
   118a0:	andeq	r1, r1, r8, lsl #19
   118a4:	andeq	r1, r1, r8, lsl #19
   118a8:	andeq	r1, r1, r8, lsl #19
   118ac:	andeq	r1, r1, r8, lsl #19
   118b0:	andeq	r1, r1, ip, asr #17
   118b4:	andeq	r1, r1, r8, lsl #19
   118b8:	andeq	r1, r1, r0, ror #17
   118bc:	andeq	r1, r1, r8, lsl #19
   118c0:	andeq	r1, r1, r8, lsl #19
   118c4:	andeq	r1, r1, r8, lsl #19
   118c8:	andeq	r1, r1, ip, asr #17
   118cc:	ldr	r3, [pc, #212]	; 119a8 <__assert_fail@plt+0x688>
   118d0:	ldr	r2, [r3]
   118d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118d8:	str	r2, [r3]
   118dc:	b	11998 <__assert_fail@plt+0x678>
   118e0:	ldr	r3, [pc, #192]	; 119a8 <__assert_fail@plt+0x688>
   118e4:	ldr	r3, [r3]
   118e8:	add	r2, r3, #1
   118ec:	ldr	r1, [pc, #180]	; 119a8 <__assert_fail@plt+0x688>
   118f0:	str	r2, [r1]
   118f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   118f8:	str	r3, [r2]
   118fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11900:	mov	r2, #0
   11904:	str	r2, [r3]
   11908:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1190c:	mov	r2, #0
   11910:	str	r2, [r3, #4]
   11914:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11918:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1191c:	str	r2, [r3, #16]
   11920:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11924:	mov	r2, #0
   11928:	str	r2, [r3, #20]
   1192c:	ldr	r3, [pc, #120]	; 119ac <__assert_fail@plt+0x68c>
   11930:	ldr	r2, [pc, #120]	; 119b0 <__assert_fail@plt+0x690>
   11934:	str	r2, [r3]
   11938:	ldr	r3, [pc, #104]	; 119a8 <__assert_fail@plt+0x688>
   1193c:	ldr	r4, [r3]
   11940:	ldr	r3, [pc, #96]	; 119a8 <__assert_fail@plt+0x688>
   11944:	ldr	r3, [r3]
   11948:	mov	r0, r3
   1194c:	bl	11200 <strlen@plt>
   11950:	mov	r3, r0
   11954:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11958:	mov	r1, r3
   1195c:	mov	r0, r4
   11960:	bl	1b008 <__assert_fail@plt+0x9ce8>
   11964:	str	r0, [fp, #-20]	; 0xffffffec
   11968:	ldr	r3, [fp, #-20]	; 0xffffffec
   1196c:	cmp	r3, #0
   11970:	beq	11994 <__assert_fail@plt+0x674>
   11974:	ldr	r3, [fp, #-20]	; 0xffffffec
   11978:	ldr	r2, [pc, #52]	; 119b4 <__assert_fail@plt+0x694>
   1197c:	mov	r1, #0
   11980:	mov	r0, #1
   11984:	bl	11194 <error@plt>
   11988:	mov	r3, #0
   1198c:	strb	r3, [fp, #-13]
   11990:	b	11998 <__assert_fail@plt+0x678>
   11994:	nop			; (mov r0, r0)
   11998:	ldrb	r3, [fp, #-13]
   1199c:	mov	r0, r3
   119a0:	sub	sp, fp, #8
   119a4:	pop	{r4, fp, pc}
   119a8:	ldrdeq	r4, [r4], -r8
   119ac:	andeq	r4, r4, r4, asr #13
   119b0:	andeq	r0, r0, r6, asr #5
   119b4:	andeq	r3, r3, r8, lsr #2
   119b8:	push	{fp, lr}
   119bc:	add	fp, sp, #4
   119c0:	sub	sp, sp, #8
   119c4:	ldr	r3, [pc, #416]	; 11b6c <__assert_fail@plt+0x84c>
   119c8:	ldrb	r3, [r3]
   119cc:	cmp	r3, #0
   119d0:	beq	119f0 <__assert_fail@plt+0x6d0>
   119d4:	ldr	r0, [pc, #404]	; 11b70 <__assert_fail@plt+0x850>
   119d8:	bl	111f4 <gettext@plt>
   119dc:	mov	r3, r0
   119e0:	mov	r2, r3
   119e4:	mov	r1, #0
   119e8:	mov	r0, #1
   119ec:	bl	11194 <error@plt>
   119f0:	ldr	r3, [pc, #380]	; 11b74 <__assert_fail@plt+0x854>
   119f4:	ldr	r0, [r3]
   119f8:	ldr	r3, [pc, #376]	; 11b78 <__assert_fail@plt+0x858>
   119fc:	ldr	ip, [r3]
   11a00:	ldr	r3, [pc, #372]	; 11b7c <__assert_fail@plt+0x85c>
   11a04:	ldrd	r2, [r3]
   11a08:	ldr	r1, [pc, #368]	; 11b80 <__assert_fail@plt+0x860>
   11a0c:	ldr	r1, [r1]
   11a10:	str	r1, [sp]
   11a14:	mov	r1, ip
   11a18:	bl	11050 <printf@plt>
   11a1c:	ldr	r3, [pc, #352]	; 11b84 <__assert_fail@plt+0x864>
   11a20:	ldrd	r2, [r3]
   11a24:	cmp	r2, #0
   11a28:	sbcs	r3, r3, #0
   11a2c:	bge	11a68 <__assert_fail@plt+0x748>
   11a30:	ldr	r3, [pc, #332]	; 11b84 <__assert_fail@plt+0x864>
   11a34:	ldrd	r2, [r3]
   11a38:	mov	r0, #0
   11a3c:	mov	r1, #-2147483648	; 0x80000000
   11a40:	subs	r2, r0, r2
   11a44:	sbc	r3, r1, r3
   11a48:	ldr	r1, [pc, #300]	; 11b7c <__assert_fail@plt+0x85c>
   11a4c:	ldrd	r0, [r1]
   11a50:	cmp	r0, r2
   11a54:	sbcs	r3, r1, r3
   11a58:	movlt	r3, #1
   11a5c:	movge	r3, #0
   11a60:	uxtb	r3, r3
   11a64:	b	11ae8 <__assert_fail@plt+0x7c8>
   11a68:	ldr	r3, [pc, #268]	; 11b7c <__assert_fail@plt+0x85c>
   11a6c:	ldrd	r2, [r3]
   11a70:	cmp	r2, #0
   11a74:	sbcs	r3, r3, #0
   11a78:	bge	11ab4 <__assert_fail@plt+0x794>
   11a7c:	ldr	r3, [pc, #248]	; 11b7c <__assert_fail@plt+0x85c>
   11a80:	ldrd	r2, [r3]
   11a84:	mov	r0, #0
   11a88:	mov	r1, #-2147483648	; 0x80000000
   11a8c:	subs	r2, r0, r2
   11a90:	sbc	r3, r1, r3
   11a94:	ldr	r1, [pc, #232]	; 11b84 <__assert_fail@plt+0x864>
   11a98:	ldrd	r0, [r1]
   11a9c:	cmp	r0, r2
   11aa0:	sbcs	r3, r1, r3
   11aa4:	movlt	r3, #1
   11aa8:	movge	r3, #0
   11aac:	uxtb	r3, r3
   11ab0:	b	11ae8 <__assert_fail@plt+0x7c8>
   11ab4:	ldr	r3, [pc, #200]	; 11b84 <__assert_fail@plt+0x864>
   11ab8:	ldrd	r2, [r3]
   11abc:	mvn	r0, #0
   11ac0:	mvn	r1, #-2147483648	; 0x80000000
   11ac4:	subs	r0, r0, r2
   11ac8:	sbc	r1, r1, r3
   11acc:	ldr	r3, [pc, #168]	; 11b7c <__assert_fail@plt+0x85c>
   11ad0:	ldrd	r2, [r3]
   11ad4:	cmp	r0, r2
   11ad8:	sbcs	r3, r1, r3
   11adc:	movlt	r3, #1
   11ae0:	movge	r3, #0
   11ae4:	uxtb	r3, r3
   11ae8:	cmp	r3, #0
   11aec:	beq	11b20 <__assert_fail@plt+0x800>
   11af0:	ldr	r3, [pc, #132]	; 11b7c <__assert_fail@plt+0x85c>
   11af4:	ldrd	r2, [r3]
   11af8:	mov	r0, r2
   11afc:	mov	r1, r3
   11b00:	ldr	r3, [pc, #124]	; 11b84 <__assert_fail@plt+0x864>
   11b04:	ldrd	r2, [r3]
   11b08:	adds	r2, r2, r0
   11b0c:	adc	r3, r3, r1
   11b10:	ldr	r1, [pc, #100]	; 11b7c <__assert_fail@plt+0x85c>
   11b14:	strd	r2, [r1]
   11b18:	mov	r3, #1
   11b1c:	b	11b4c <__assert_fail@plt+0x82c>
   11b20:	ldr	r3, [pc, #84]	; 11b7c <__assert_fail@plt+0x85c>
   11b24:	ldrd	r2, [r3]
   11b28:	mov	r0, r2
   11b2c:	mov	r1, r3
   11b30:	ldr	r3, [pc, #76]	; 11b84 <__assert_fail@plt+0x864>
   11b34:	ldrd	r2, [r3]
   11b38:	adds	r2, r2, r0
   11b3c:	adc	r3, r3, r1
   11b40:	ldr	r1, [pc, #52]	; 11b7c <__assert_fail@plt+0x85c>
   11b44:	strd	r2, [r1]
   11b48:	mov	r3, #0
   11b4c:	cmp	r3, #0
   11b50:	beq	11b60 <__assert_fail@plt+0x840>
   11b54:	ldr	r3, [pc, #16]	; 11b6c <__assert_fail@plt+0x84c>
   11b58:	mov	r2, #1
   11b5c:	strb	r2, [r3]
   11b60:	nop			; (mov r0, r0)
   11b64:	sub	sp, fp, #4
   11b68:	pop	{fp, pc}
   11b6c:	andeq	r4, r4, r8, ror r5
   11b70:	andeq	r3, r3, ip, lsr #2
   11b74:	andeq	r4, r4, ip, ror #2
   11b78:	andeq	r4, r4, r8, ror #2
   11b7c:	andeq	r4, r4, r0, ror r5
   11b80:	andeq	r4, r4, r0, asr #2
   11b84:	andeq	r4, r4, r0, asr r1
   11b88:	push	{fp}		; (str fp, [sp, #-4]!)
   11b8c:	add	fp, sp, #0
   11b90:	ldr	r3, [pc, #52]	; 11bcc <__assert_fail@plt+0x8ac>
   11b94:	ldrb	r3, [r3]
   11b98:	cmp	r3, #0
   11b9c:	beq	11bbc <__assert_fail@plt+0x89c>
   11ba0:	ldr	r3, [pc, #40]	; 11bd0 <__assert_fail@plt+0x8b0>
   11ba4:	ldrd	r2, [r3]
   11ba8:	ldr	r1, [pc, #36]	; 11bd4 <__assert_fail@plt+0x8b4>
   11bac:	strd	r2, [r1]
   11bb0:	ldr	r3, [pc, #32]	; 11bd8 <__assert_fail@plt+0x8b8>
   11bb4:	mov	r2, #0
   11bb8:	strb	r2, [r3]
   11bbc:	nop			; (mov r0, r0)
   11bc0:	add	sp, fp, #0
   11bc4:	pop	{fp}		; (ldr fp, [sp], #4)
   11bc8:	bx	lr
   11bcc:	andeq	r4, r4, r8, asr r1
   11bd0:	andeq	r4, r4, r8, asr #2
   11bd4:	andeq	r4, r4, r0, ror r5
   11bd8:	andeq	r4, r4, r8, ror r5
   11bdc:	push	{fp, lr}
   11be0:	add	fp, sp, #4
   11be4:	ldr	r3, [pc, #40]	; 11c14 <__assert_fail@plt+0x8f4>
   11be8:	ldr	r3, [r3]
   11bec:	ldr	r2, [pc, #36]	; 11c18 <__assert_fail@plt+0x8f8>
   11bf0:	str	r3, [r2]
   11bf4:	ldr	r3, [pc, #32]	; 11c1c <__assert_fail@plt+0x8fc>
   11bf8:	ldr	r2, [pc, #32]	; 11c20 <__assert_fail@plt+0x900>
   11bfc:	str	r2, [r3]
   11c00:	bl	11b88 <__assert_fail@plt+0x868>
   11c04:	mov	r0, #10
   11c08:	bl	11314 <putchar_unlocked@plt>
   11c0c:	nop			; (mov r0, r0)
   11c10:	pop	{fp, pc}
   11c14:	andeq	r4, r4, r8, lsr r1
   11c18:	andeq	r4, r4, r0, ror #3
   11c1c:	andeq	r4, r4, r4, asr #10
   11c20:	andeq	r4, r4, r4, lsl #4
   11c24:	push	{fp, lr}
   11c28:	add	fp, sp, #4
   11c2c:	ldr	r3, [pc, #40]	; 11c5c <__assert_fail@plt+0x93c>
   11c30:	ldr	r3, [r3]
   11c34:	ldr	r2, [pc, #36]	; 11c60 <__assert_fail@plt+0x940>
   11c38:	str	r3, [r2]
   11c3c:	ldr	r3, [pc, #32]	; 11c64 <__assert_fail@plt+0x944>
   11c40:	ldr	r2, [pc, #32]	; 11c68 <__assert_fail@plt+0x948>
   11c44:	str	r2, [r3]
   11c48:	bl	11b88 <__assert_fail@plt+0x868>
   11c4c:	mov	r0, #10
   11c50:	bl	11314 <putchar_unlocked@plt>
   11c54:	nop			; (mov r0, r0)
   11c58:	pop	{fp, pc}
   11c5c:	andeq	r4, r4, r4, lsr r1
   11c60:	andeq	r4, r4, r0, ror #3
   11c64:	andeq	r4, r4, r4, asr #10
   11c68:	andeq	r4, r4, r4, ror #3
   11c6c:	push	{fp, lr}
   11c70:	add	fp, sp, #4
   11c74:	ldr	r3, [pc, #40]	; 11ca4 <__assert_fail@plt+0x984>
   11c78:	ldr	r3, [r3]
   11c7c:	ldr	r2, [pc, #36]	; 11ca8 <__assert_fail@plt+0x988>
   11c80:	str	r3, [r2]
   11c84:	ldr	r3, [pc, #32]	; 11cac <__assert_fail@plt+0x98c>
   11c88:	ldr	r2, [pc, #32]	; 11cb0 <__assert_fail@plt+0x990>
   11c8c:	str	r2, [r3]
   11c90:	bl	11b88 <__assert_fail@plt+0x868>
   11c94:	mov	r0, #10
   11c98:	bl	11314 <putchar_unlocked@plt>
   11c9c:	nop			; (mov r0, r0)
   11ca0:	pop	{fp, pc}
   11ca4:	andeq	r4, r4, ip, lsr r1
   11ca8:	andeq	r4, r4, r0, ror #3
   11cac:	andeq	r4, r4, r4, asr #10
   11cb0:	andeq	r4, r4, r4, lsr #4
   11cb4:	push	{r4, fp, lr}
   11cb8:	add	fp, sp, #8
   11cbc:	sub	sp, sp, #12
   11cc0:	ldr	r3, [pc, #556]	; 11ef4 <__assert_fail@plt+0xbd4>
   11cc4:	ldr	r3, [r3]
   11cc8:	ldrb	r3, [r3]
   11ccc:	sub	r3, r3, #97	; 0x61
   11cd0:	cmp	r3, #19
   11cd4:	ldrls	pc, [pc, r3, lsl #2]
   11cd8:	b	11ec4 <__assert_fail@plt+0xba4>
   11cdc:	andeq	r1, r1, ip, lsr #26
   11ce0:	andeq	r1, r1, r4, asr #29
   11ce4:	andeq	r1, r1, r4, asr #29
   11ce8:	andeq	r1, r1, r4, asr #29
   11cec:	andeq	r1, r1, r4, asr #29
   11cf0:	andeq	r1, r1, r4, asr #29
   11cf4:	andeq	r1, r1, r4, asr #29
   11cf8:	andeq	r1, r1, r4, asr #29
   11cfc:	andeq	r1, r1, r4, asr #29
   11d00:	andeq	r1, r1, r4, asr #29
   11d04:	andeq	r1, r1, r4, asr #29
   11d08:	andeq	r1, r1, r4, asr #29
   11d0c:	andeq	r1, r1, r4, asr #29
   11d10:	strdeq	r1, [r1], -ip
   11d14:	andeq	r1, r1, r4, asr #29
   11d18:	andeq	r1, r1, ip, lsl lr
   11d1c:	andeq	r1, r1, r4, asr #29
   11d20:	andeq	r1, r1, r4, asr #29
   11d24:	andeq	r1, r1, r4, asr #29
   11d28:	andeq	r1, r1, r4, asr #27
   11d2c:	ldr	r3, [pc, #452]	; 11ef8 <__assert_fail@plt+0xbd8>
   11d30:	ldrd	r2, [r3]
   11d34:	cmp	r2, #2
   11d38:	sbcs	r3, r3, #0
   11d3c:	blt	11dbc <__assert_fail@plt+0xa9c>
   11d40:	ldr	r3, [pc, #436]	; 11efc <__assert_fail@plt+0xbdc>
   11d44:	ldr	r3, [r3, #4]
   11d48:	cmp	r3, #1
   11d4c:	bgt	11d84 <__assert_fail@plt+0xa64>
   11d50:	ldr	r3, [pc, #424]	; 11f00 <__assert_fail@plt+0xbe0>
   11d54:	ldrd	r2, [r3]
   11d58:	adds	r2, r2, #1
   11d5c:	adc	r3, r3, #0
   11d60:	ldr	r1, [pc, #408]	; 11f00 <__assert_fail@plt+0xbe0>
   11d64:	strd	r2, [r1]
   11d68:	ldr	r3, [pc, #400]	; 11f00 <__assert_fail@plt+0xbe0>
   11d6c:	ldrd	r0, [r3]
   11d70:	ldr	r3, [pc, #384]	; 11ef8 <__assert_fail@plt+0xbd8>
   11d74:	ldrd	r2, [r3]
   11d78:	cmp	r1, r3
   11d7c:	cmpeq	r0, r2
   11d80:	bne	11d9c <__assert_fail@plt+0xa7c>
   11d84:	bl	119b8 <__assert_fail@plt+0x698>
   11d88:	ldr	r1, [pc, #368]	; 11f00 <__assert_fail@plt+0xbe0>
   11d8c:	mov	r2, #0
   11d90:	mov	r3, #0
   11d94:	strd	r2, [r1]
   11d98:	b	11ec4 <__assert_fail@plt+0xba4>
   11d9c:	ldr	r3, [pc, #352]	; 11f04 <__assert_fail@plt+0xbe4>
   11da0:	ldr	r2, [r3]
   11da4:	ldr	r3, [pc, #348]	; 11f08 <__assert_fail@plt+0xbe8>
   11da8:	ldr	r3, [r3]
   11dac:	mov	r1, r3
   11db0:	mov	r0, r2
   11db4:	bl	10ffc <fputs_unlocked@plt>
   11db8:	b	11ec4 <__assert_fail@plt+0xba4>
   11dbc:	bl	119b8 <__assert_fail@plt+0x698>
   11dc0:	b	11ec4 <__assert_fail@plt+0xba4>
   11dc4:	ldr	r3, [pc, #304]	; 11efc <__assert_fail@plt+0xbdc>
   11dc8:	ldr	r3, [r3, #4]
   11dcc:	cmp	r3, #1
   11dd0:	ble	11ddc <__assert_fail@plt+0xabc>
   11dd4:	bl	119b8 <__assert_fail@plt+0x698>
   11dd8:	b	11ec4 <__assert_fail@plt+0xba4>
   11ddc:	ldr	r3, [pc, #288]	; 11f04 <__assert_fail@plt+0xbe4>
   11de0:	ldr	r2, [r3]
   11de4:	ldr	r3, [pc, #284]	; 11f08 <__assert_fail@plt+0xbe8>
   11de8:	ldr	r3, [r3]
   11dec:	mov	r1, r3
   11df0:	mov	r0, r2
   11df4:	bl	10ffc <fputs_unlocked@plt>
   11df8:	b	11ec4 <__assert_fail@plt+0xba4>
   11dfc:	ldr	r3, [pc, #256]	; 11f04 <__assert_fail@plt+0xbe4>
   11e00:	ldr	r2, [r3]
   11e04:	ldr	r3, [pc, #252]	; 11f08 <__assert_fail@plt+0xbe8>
   11e08:	ldr	r3, [r3]
   11e0c:	mov	r1, r3
   11e10:	mov	r0, r2
   11e14:	bl	10ffc <fputs_unlocked@plt>
   11e18:	b	11ec4 <__assert_fail@plt+0xba4>
   11e1c:	ldr	r3, [pc, #232]	; 11f0c <__assert_fail@plt+0xbec>
   11e20:	ldr	r0, [r3]
   11e24:	ldr	r3, [pc, #208]	; 11efc <__assert_fail@plt+0xbdc>
   11e28:	ldr	r1, [r3, #8]
   11e2c:	ldr	r3, [pc, #200]	; 11efc <__assert_fail@plt+0xbdc>
   11e30:	ldr	r3, [r3, #4]
   11e34:	sub	ip, r3, #1
   11e38:	ldr	r3, [pc, #188]	; 11efc <__assert_fail@plt+0xbdc>
   11e3c:	ldr	r3, [r3, #4]
   11e40:	sub	r3, r3, #1
   11e44:	mov	r2, #0
   11e48:	str	r2, [sp, #4]
   11e4c:	str	r3, [sp]
   11e50:	mov	r3, #0
   11e54:	mov	r2, ip
   11e58:	bl	2431c <__assert_fail@plt+0x12ffc>
   11e5c:	mov	r3, r0
   11e60:	cmn	r3, #2
   11e64:	beq	11e74 <__assert_fail@plt+0xb54>
   11e68:	cmn	r3, #1
   11e6c:	beq	11e9c <__assert_fail@plt+0xb7c>
   11e70:	b	11ebc <__assert_fail@plt+0xb9c>
   11e74:	bl	11224 <__errno_location@plt>
   11e78:	mov	r3, r0
   11e7c:	ldr	r4, [r3]
   11e80:	ldr	r0, [pc, #136]	; 11f10 <__assert_fail@plt+0xbf0>
   11e84:	bl	111f4 <gettext@plt>
   11e88:	mov	r3, r0
   11e8c:	mov	r2, r3
   11e90:	mov	r1, r4
   11e94:	mov	r0, #1
   11e98:	bl	11194 <error@plt>
   11e9c:	ldr	r3, [pc, #96]	; 11f04 <__assert_fail@plt+0xbe4>
   11ea0:	ldr	r2, [r3]
   11ea4:	ldr	r3, [pc, #92]	; 11f08 <__assert_fail@plt+0xbe8>
   11ea8:	ldr	r3, [r3]
   11eac:	mov	r1, r3
   11eb0:	mov	r0, r2
   11eb4:	bl	10ffc <fputs_unlocked@plt>
   11eb8:	b	11ec4 <__assert_fail@plt+0xba4>
   11ebc:	bl	119b8 <__assert_fail@plt+0x698>
   11ec0:	nop			; (mov r0, r0)
   11ec4:	ldr	r3, [pc, #48]	; 11efc <__assert_fail@plt+0xbdc>
   11ec8:	ldr	r0, [r3, #8]
   11ecc:	ldr	r3, [pc, #40]	; 11efc <__assert_fail@plt+0xbdc>
   11ed0:	ldr	r3, [r3, #4]
   11ed4:	mov	r2, r3
   11ed8:	ldr	r3, [pc, #40]	; 11f08 <__assert_fail@plt+0xbe8>
   11edc:	ldr	r3, [r3]
   11ee0:	mov	r1, #1
   11ee4:	bl	110e0 <fwrite_unlocked@plt>
   11ee8:	nop			; (mov r0, r0)
   11eec:	sub	sp, fp, #8
   11ef0:	pop	{r4, fp, pc}
   11ef4:	andeq	r4, r4, r0, ror #3
   11ef8:	andeq	r4, r4, r0, ror #2
   11efc:	andeq	r4, r4, r0, ror #10
   11f00:	andeq	r4, r4, r0, lsl #11
   11f04:	andeq	r4, r4, ip, ror #10
   11f08:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   11f0c:	andeq	r4, r4, r4, asr #10
   11f10:	andeq	r3, r3, r4, asr #2
   11f14:	push	{fp, lr}
   11f18:	add	fp, sp, #4
   11f1c:	sub	sp, sp, #8
   11f20:	ldr	r3, [pc, #316]	; 12064 <__assert_fail@plt+0xd44>
   11f24:	ldr	r3, [r3, #4]
   11f28:	sub	r3, r3, #1
   11f2c:	str	r3, [fp, #-8]
   11f30:	ldr	r3, [fp, #-8]
   11f34:	cmp	r3, #1
   11f38:	bls	11f74 <__assert_fail@plt+0xc54>
   11f3c:	ldr	r3, [pc, #292]	; 12068 <__assert_fail@plt+0xd48>
   11f40:	ldr	r3, [r3]
   11f44:	cmp	r3, #1
   11f48:	bls	11f74 <__assert_fail@plt+0xc54>
   11f4c:	ldr	r3, [pc, #272]	; 12064 <__assert_fail@plt+0xd44>
   11f50:	ldr	r0, [r3, #8]
   11f54:	ldr	r3, [pc, #272]	; 1206c <__assert_fail@plt+0xd4c>
   11f58:	ldr	r3, [r3]
   11f5c:	mov	r2, #2
   11f60:	mov	r1, r3
   11f64:	bl	110ec <memcmp@plt>
   11f68:	mov	r3, r0
   11f6c:	cmp	r3, #0
   11f70:	beq	11f7c <__assert_fail@plt+0xc5c>
   11f74:	mov	r3, #3
   11f78:	b	12058 <__assert_fail@plt+0xd38>
   11f7c:	ldr	r3, [pc, #236]	; 12070 <__assert_fail@plt+0xd50>
   11f80:	ldr	r3, [r3]
   11f84:	ldr	r2, [fp, #-8]
   11f88:	cmp	r2, r3
   11f8c:	bne	11fc4 <__assert_fail@plt+0xca4>
   11f90:	ldr	r3, [pc, #204]	; 12064 <__assert_fail@plt+0xd44>
   11f94:	ldr	r0, [r3, #8]
   11f98:	ldr	r3, [pc, #212]	; 12074 <__assert_fail@plt+0xd54>
   11f9c:	ldr	r1, [r3]
   11fa0:	ldr	r3, [pc, #200]	; 12070 <__assert_fail@plt+0xd50>
   11fa4:	ldr	r3, [r3]
   11fa8:	mov	r2, r3
   11fac:	bl	110ec <memcmp@plt>
   11fb0:	mov	r3, r0
   11fb4:	cmp	r3, #0
   11fb8:	bne	11fc4 <__assert_fail@plt+0xca4>
   11fbc:	mov	r3, #0
   11fc0:	b	12058 <__assert_fail@plt+0xd38>
   11fc4:	ldr	r3, [pc, #172]	; 12078 <__assert_fail@plt+0xd58>
   11fc8:	ldr	r3, [r3]
   11fcc:	ldr	r2, [fp, #-8]
   11fd0:	cmp	r2, r3
   11fd4:	bne	1200c <__assert_fail@plt+0xcec>
   11fd8:	ldr	r3, [pc, #132]	; 12064 <__assert_fail@plt+0xd44>
   11fdc:	ldr	r0, [r3, #8]
   11fe0:	ldr	r3, [pc, #148]	; 1207c <__assert_fail@plt+0xd5c>
   11fe4:	ldr	r1, [r3]
   11fe8:	ldr	r3, [pc, #136]	; 12078 <__assert_fail@plt+0xd58>
   11fec:	ldr	r3, [r3]
   11ff0:	mov	r2, r3
   11ff4:	bl	110ec <memcmp@plt>
   11ff8:	mov	r3, r0
   11ffc:	cmp	r3, #0
   12000:	bne	1200c <__assert_fail@plt+0xcec>
   12004:	mov	r3, #1
   12008:	b	12058 <__assert_fail@plt+0xd38>
   1200c:	ldr	r3, [pc, #84]	; 12068 <__assert_fail@plt+0xd48>
   12010:	ldr	r3, [r3]
   12014:	ldr	r2, [fp, #-8]
   12018:	cmp	r2, r3
   1201c:	bne	12054 <__assert_fail@plt+0xd34>
   12020:	ldr	r3, [pc, #60]	; 12064 <__assert_fail@plt+0xd44>
   12024:	ldr	r0, [r3, #8]
   12028:	ldr	r3, [pc, #80]	; 12080 <__assert_fail@plt+0xd60>
   1202c:	ldr	r1, [r3]
   12030:	ldr	r3, [pc, #48]	; 12068 <__assert_fail@plt+0xd48>
   12034:	ldr	r3, [r3]
   12038:	mov	r2, r3
   1203c:	bl	110ec <memcmp@plt>
   12040:	mov	r3, r0
   12044:	cmp	r3, #0
   12048:	bne	12054 <__assert_fail@plt+0xd34>
   1204c:	mov	r3, #2
   12050:	b	12058 <__assert_fail@plt+0xd38>
   12054:	mov	r3, #3
   12058:	mov	r0, r3
   1205c:	sub	sp, fp, #4
   12060:	pop	{fp, pc}
   12064:	andeq	r4, r4, r0, ror #10
   12068:	andeq	r4, r4, ip, asr r5
   1206c:	andeq	r4, r4, r4, asr #2
   12070:	andeq	r4, r4, ip, asr #10
   12074:	andeq	r4, r4, r8, asr #10
   12078:	andeq	r4, r4, r4, asr r5
   1207c:	andeq	r4, r4, r0, asr r5
   12080:	andeq	r4, r4, r8, asr r5
   12084:	push	{fp, lr}
   12088:	add	fp, sp, #4
   1208c:	sub	sp, sp, #8
   12090:	str	r0, [fp, #-8]
   12094:	b	120dc <__assert_fail@plt+0xdbc>
   12098:	bl	11f14 <__assert_fail@plt+0xbf4>
   1209c:	mov	r3, r0
   120a0:	cmp	r3, #3
   120a4:	ldrls	pc, [pc, r3, lsl #2]
   120a8:	b	120dc <__assert_fail@plt+0xdbc>
   120ac:	strheq	r2, [r1], -ip
   120b0:	andeq	r2, r1, r4, asr #1
   120b4:	andeq	r2, r1, ip, asr #1
   120b8:	ldrdeq	r2, [r1], -r4
   120bc:	bl	11bdc <__assert_fail@plt+0x8bc>
   120c0:	b	120dc <__assert_fail@plt+0xdbc>
   120c4:	bl	11c24 <__assert_fail@plt+0x904>
   120c8:	b	120dc <__assert_fail@plt+0xdbc>
   120cc:	bl	11c6c <__assert_fail@plt+0x94c>
   120d0:	b	120dc <__assert_fail@plt+0xdbc>
   120d4:	bl	11cb4 <__assert_fail@plt+0x994>
   120d8:	nop			; (mov r0, r0)
   120dc:	ldr	r1, [fp, #-8]
   120e0:	ldr	r0, [pc, #24]	; 12100 <__assert_fail@plt+0xde0>
   120e4:	bl	131fc <__assert_fail@plt+0x1edc>
   120e8:	mov	r3, r0
   120ec:	cmp	r3, #0
   120f0:	bne	12098 <__assert_fail@plt+0xd78>
   120f4:	nop			; (mov r0, r0)
   120f8:	sub	sp, fp, #4
   120fc:	pop	{fp, pc}
   12100:	andeq	r4, r4, r0, ror #10
   12104:	push	{r4, fp, lr}
   12108:	add	fp, sp, #8
   1210c:	sub	sp, sp, #20
   12110:	str	r0, [fp, #-24]	; 0xffffffe8
   12114:	ldr	r1, [pc, #348]	; 12278 <__assert_fail@plt+0xf58>
   12118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1211c:	bl	11038 <strcmp@plt>
   12120:	mov	r3, r0
   12124:	cmp	r3, #0
   12128:	bne	12148 <__assert_fail@plt+0xe28>
   1212c:	ldr	r3, [pc, #328]	; 1227c <__assert_fail@plt+0xf5c>
   12130:	mov	r2, #1
   12134:	strb	r2, [r3]
   12138:	ldr	r3, [pc, #320]	; 12280 <__assert_fail@plt+0xf60>
   1213c:	ldr	r3, [r3]
   12140:	str	r3, [fp, #-16]
   12144:	b	1219c <__assert_fail@plt+0xe7c>
   12148:	ldr	r1, [pc, #308]	; 12284 <__assert_fail@plt+0xf64>
   1214c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12150:	bl	112cc <fopen64@plt>
   12154:	str	r0, [fp, #-16]
   12158:	ldr	r3, [fp, #-16]
   1215c:	cmp	r3, #0
   12160:	bne	1219c <__assert_fail@plt+0xe7c>
   12164:	bl	11224 <__errno_location@plt>
   12168:	mov	r3, r0
   1216c:	ldr	r4, [r3]
   12170:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12174:	mov	r1, #3
   12178:	mov	r0, #0
   1217c:	bl	158ac <__assert_fail@plt+0x458c>
   12180:	mov	r3, r0
   12184:	ldr	r2, [pc, #252]	; 12288 <__assert_fail@plt+0xf68>
   12188:	mov	r1, r4
   1218c:	mov	r0, #0
   12190:	bl	11194 <error@plt>
   12194:	mov	r3, #0
   12198:	b	1226c <__assert_fail@plt+0xf4c>
   1219c:	mov	r1, #2
   121a0:	ldr	r0, [fp, #-16]
   121a4:	bl	12ef0 <__assert_fail@plt+0x1bd0>
   121a8:	ldr	r0, [fp, #-16]
   121ac:	bl	12084 <__assert_fail@plt+0xd64>
   121b0:	bl	11224 <__errno_location@plt>
   121b4:	mov	r3, r0
   121b8:	ldr	r3, [r3]
   121bc:	str	r3, [fp, #-20]	; 0xffffffec
   121c0:	ldr	r0, [fp, #-16]
   121c4:	bl	1117c <ferror_unlocked@plt>
   121c8:	mov	r3, r0
   121cc:	cmp	r3, #0
   121d0:	bne	121dc <__assert_fail@plt+0xebc>
   121d4:	mov	r3, #0
   121d8:	str	r3, [fp, #-20]	; 0xffffffec
   121dc:	ldr	r1, [pc, #148]	; 12278 <__assert_fail@plt+0xf58>
   121e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121e4:	bl	11038 <strcmp@plt>
   121e8:	mov	r3, r0
   121ec:	cmp	r3, #0
   121f0:	bne	12200 <__assert_fail@plt+0xee0>
   121f4:	ldr	r0, [fp, #-16]
   121f8:	bl	112c0 <clearerr_unlocked@plt>
   121fc:	b	12230 <__assert_fail@plt+0xf10>
   12200:	ldr	r0, [fp, #-16]
   12204:	bl	12f4c <__assert_fail@plt+0x1c2c>
   12208:	mov	r3, r0
   1220c:	cmp	r3, #0
   12210:	beq	12230 <__assert_fail@plt+0xf10>
   12214:	ldr	r3, [fp, #-20]	; 0xffffffec
   12218:	cmp	r3, #0
   1221c:	bne	12230 <__assert_fail@plt+0xf10>
   12220:	bl	11224 <__errno_location@plt>
   12224:	mov	r3, r0
   12228:	ldr	r3, [r3]
   1222c:	str	r3, [fp, #-20]	; 0xffffffec
   12230:	ldr	r3, [fp, #-20]	; 0xffffffec
   12234:	cmp	r3, #0
   12238:	beq	12268 <__assert_fail@plt+0xf48>
   1223c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12240:	mov	r1, #3
   12244:	mov	r0, #0
   12248:	bl	158ac <__assert_fail@plt+0x458c>
   1224c:	mov	r3, r0
   12250:	ldr	r2, [pc, #48]	; 12288 <__assert_fail@plt+0xf68>
   12254:	ldr	r1, [fp, #-20]	; 0xffffffec
   12258:	mov	r0, #0
   1225c:	bl	11194 <error@plt>
   12260:	mov	r3, #0
   12264:	b	1226c <__assert_fail@plt+0xf4c>
   12268:	mov	r3, #1
   1226c:	mov	r0, r3
   12270:	sub	sp, fp, #8
   12274:	pop	{r4, fp, pc}
   12278:	andeq	r3, r3, r8, ror #2
   1227c:	andeq	r4, r4, r9, ror r5
   12280:	ldrdeq	r4, [r4], -r0
   12284:	andeq	r3, r3, ip, ror #2
   12288:	andeq	r3, r3, r8, lsr #2
   1228c:	push	{r4, fp, lr}
   12290:	add	fp, sp, #8
   12294:	sub	sp, sp, #52	; 0x34
   12298:	str	r0, [fp, #-32]	; 0xffffffe0
   1229c:	str	r1, [fp, #-36]	; 0xffffffdc
   122a0:	mov	r3, #1
   122a4:	strb	r3, [fp, #-13]
   122a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   122ac:	ldr	r3, [r3]
   122b0:	mov	r0, r3
   122b4:	bl	133ec <__assert_fail@plt+0x20cc>
   122b8:	ldr	r1, [pc, #2412]	; 12c2c <__assert_fail@plt+0x190c>
   122bc:	mov	r0, #6
   122c0:	bl	11290 <setlocale@plt>
   122c4:	ldr	r1, [pc, #2404]	; 12c30 <__assert_fail@plt+0x1910>
   122c8:	ldr	r0, [pc, #2404]	; 12c34 <__assert_fail@plt+0x1914>
   122cc:	bl	112d8 <bindtextdomain@plt>
   122d0:	ldr	r0, [pc, #2396]	; 12c34 <__assert_fail@plt+0x1914>
   122d4:	bl	11128 <textdomain@plt>
   122d8:	ldr	r0, [pc, #2392]	; 12c38 <__assert_fail@plt+0x1918>
   122dc:	bl	32634 <__assert_fail@plt+0x21314>
   122e0:	ldr	r3, [pc, #2388]	; 12c3c <__assert_fail@plt+0x191c>
   122e4:	mov	r2, #0
   122e8:	strb	r2, [r3]
   122ec:	b	12944 <__assert_fail@plt+0x1624>
   122f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   122f4:	add	r3, r3, #3
   122f8:	cmp	r3, #122	; 0x7a
   122fc:	ldrls	pc, [pc, r3, lsl #2]
   12300:	b	12938 <__assert_fail@plt+0x1618>
   12304:	strdeq	r2, [r1], -r8
   12308:	strdeq	r2, [r1], -r0
   1230c:	andeq	r2, r1, r8, lsr r9
   12310:	andeq	r2, r1, r8, lsr r9
   12314:	andeq	r2, r1, r8, lsr r9
   12318:	andeq	r2, r1, r8, lsr r9
   1231c:	andeq	r2, r1, r8, lsr r9
   12320:	andeq	r2, r1, r8, lsr r9
   12324:	andeq	r2, r1, r8, lsr r9
   12328:	andeq	r2, r1, r8, lsr r9
   1232c:	andeq	r2, r1, r8, lsr r9
   12330:	andeq	r2, r1, r8, lsr r9
   12334:	andeq	r2, r1, r8, lsr r9
   12338:	andeq	r2, r1, r8, lsr r9
   1233c:	andeq	r2, r1, r8, lsr r9
   12340:	andeq	r2, r1, r8, lsr r9
   12344:	andeq	r2, r1, r8, lsr r9
   12348:	andeq	r2, r1, r8, lsr r9
   1234c:	andeq	r2, r1, r8, lsr r9
   12350:	andeq	r2, r1, r8, lsr r9
   12354:	andeq	r2, r1, r8, lsr r9
   12358:	andeq	r2, r1, r8, lsr r9
   1235c:	andeq	r2, r1, r8, lsr r9
   12360:	andeq	r2, r1, r8, lsr r9
   12364:	andeq	r2, r1, r8, lsr r9
   12368:	andeq	r2, r1, r8, lsr r9
   1236c:	andeq	r2, r1, r8, lsr r9
   12370:	andeq	r2, r1, r8, lsr r9
   12374:	andeq	r2, r1, r8, lsr r9
   12378:	andeq	r2, r1, r8, lsr r9
   1237c:	andeq	r2, r1, r8, lsr r9
   12380:	andeq	r2, r1, r8, lsr r9
   12384:	andeq	r2, r1, r8, lsr r9
   12388:	andeq	r2, r1, r8, lsr r9
   1238c:	andeq	r2, r1, r8, lsr r9
   12390:	andeq	r2, r1, r8, lsr r9
   12394:	andeq	r2, r1, r8, lsr r9
   12398:	andeq	r2, r1, r8, lsr r9
   1239c:	andeq	r2, r1, r8, lsr r9
   123a0:	andeq	r2, r1, r8, lsr r9
   123a4:	andeq	r2, r1, r8, lsr r9
   123a8:	andeq	r2, r1, r8, lsr r9
   123ac:	andeq	r2, r1, r8, lsr r9
   123b0:	andeq	r2, r1, r8, lsr r9
   123b4:	andeq	r2, r1, r8, lsr r9
   123b8:	andeq	r2, r1, r8, lsr r9
   123bc:	andeq	r2, r1, r8, lsr r9
   123c0:	andeq	r2, r1, r8, lsr r9
   123c4:	andeq	r2, r1, r8, lsr r9
   123c8:	andeq	r2, r1, r8, lsr r9
   123cc:	andeq	r2, r1, r8, lsr r9
   123d0:	andeq	r2, r1, r8, lsr r9
   123d4:	andeq	r2, r1, r8, lsr r9
   123d8:	andeq	r2, r1, r8, lsr r9
   123dc:	andeq	r2, r1, r8, lsr r9
   123e0:	andeq	r2, r1, r8, lsr r9
   123e4:	andeq	r2, r1, r8, lsr r9
   123e8:	andeq	r2, r1, r8, lsr r9
   123ec:	andeq	r2, r1, r8, lsr r9
   123f0:	andeq	r2, r1, r8, lsr r9
   123f4:	andeq	r2, r1, r8, lsr r9
   123f8:	andeq	r2, r1, r8, lsr r9
   123fc:	andeq	r2, r1, r8, lsr r9
   12400:	andeq	r2, r1, r8, lsr r9
   12404:	andeq	r2, r1, r8, lsr r9
   12408:	andeq	r2, r1, r8, lsr r9
   1240c:	andeq	r2, r1, r8, lsr r9
   12410:	andeq	r2, r1, r8, lsr r9
   12414:	andeq	r2, r1, r8, lsr r9
   12418:	andeq	r2, r1, r8, lsr r9
   1241c:	andeq	r2, r1, r8, lsr r9
   12420:	andeq	r2, r1, r8, lsr r9
   12424:	andeq	r2, r1, r8, lsr r9
   12428:	andeq	r2, r1, r8, lsr r9
   1242c:	andeq	r2, r1, r8, lsr r9
   12430:	andeq	r2, r1, r8, lsr r9
   12434:	andeq	r2, r1, r8, lsr r9
   12438:	andeq	r2, r1, r8, lsr r9
   1243c:	andeq	r2, r1, r8, lsr r9
   12440:	andeq	r2, r1, r8, lsr r9
   12444:	andeq	r2, r1, r8, lsr r9
   12448:	andeq	r2, r1, r8, lsr r9
   1244c:	andeq	r2, r1, r8, lsr r9
   12450:	andeq	r2, r1, r8, lsr r9
   12454:	andeq	r2, r1, r8, lsr r9
   12458:	andeq	r2, r1, r8, lsr r9
   1245c:	andeq	r2, r1, r8, lsr r9
   12460:	andeq	r2, r1, r8, lsr r9
   12464:	andeq	r2, r1, r8, lsr r9
   12468:	andeq	r2, r1, r8, lsr r9
   1246c:	andeq	r2, r1, r8, lsr r9
   12470:	andeq	r2, r1, r8, lsr r9
   12474:	andeq	r2, r1, r8, lsr r9
   12478:	andeq	r2, r1, r8, lsr r9
   1247c:	andeq	r2, r1, r8, lsr r9
   12480:	andeq	r2, r1, r8, lsr r9
   12484:	andeq	r2, r1, r8, lsr r9
   12488:	andeq	r2, r1, r8, lsr r9
   1248c:	andeq	r2, r1, r8, lsr r9
   12490:	andeq	r2, r1, r8, lsr r9
   12494:	andeq	r2, r1, r8, lsr r9
   12498:	andeq	r2, r1, r0, asr r5
   1249c:	andeq	r2, r1, r8, lsr r9
   124a0:	andeq	r2, r1, r0, ror #16
   124a4:	andeq	r2, r1, r8, lsr r9
   124a8:			; <UNDEFINED> instruction: 0x000125b0
   124ac:	andeq	r2, r1, r8, lsr r9
   124b0:	strdeq	r2, [r1], -r0
   124b4:	andeq	r2, r1, r8, ror #12
   124b8:	andeq	r2, r1, r8, lsr r9
   124bc:	andeq	r2, r1, r8, lsr r9
   124c0:	ldrdeq	r2, [r1], -r0
   124c4:	andeq	r2, r1, r8, lsr r9
   124c8:	muleq	r1, r4, r7
   124cc:	andeq	r2, r1, r8, lsr r9
   124d0:	andeq	r2, r1, r0, asr #13
   124d4:	andeq	r2, r1, r8, lsr r9
   124d8:	andeq	r2, r1, r8, lsr r9
   124dc:	andeq	r2, r1, r8, lsr #14
   124e0:	andeq	r2, r1, r8, lsr r9
   124e4:	andeq	r2, r1, r8, lsr r9
   124e8:	andeq	r2, r1, r0, lsl r6
   124ec:	andeq	r2, r1, ip, lsr r7
   124f0:	ldr	r2, [pc, #1864]	; 12c40 <__assert_fail@plt+0x1920>
   124f4:	ldr	r1, [pc, #1864]	; 12c44 <__assert_fail@plt+0x1924>
   124f8:	ldr	r0, [pc, #1864]	; 12c48 <__assert_fail@plt+0x1928>
   124fc:	bl	11840 <__assert_fail@plt+0x520>
   12500:	mov	r3, r0
   12504:	eor	r3, r3, #1
   12508:	uxtb	r3, r3
   1250c:	cmp	r3, #0
   12510:	beq	12944 <__assert_fail@plt+0x1624>
   12514:	ldr	r0, [pc, #1840]	; 12c4c <__assert_fail@plt+0x192c>
   12518:	bl	111f4 <gettext@plt>
   1251c:	mov	r4, r0
   12520:	ldr	r3, [pc, #1832]	; 12c50 <__assert_fail@plt+0x1930>
   12524:	ldr	r3, [r3]
   12528:	mov	r0, r3
   1252c:	bl	15b1c <__assert_fail@plt+0x47fc>
   12530:	mov	r3, r0
   12534:	mov	r2, r4
   12538:	mov	r1, #0
   1253c:	mov	r0, #0
   12540:	bl	11194 <error@plt>
   12544:	mov	r3, #0
   12548:	strb	r3, [fp, #-13]
   1254c:	b	12944 <__assert_fail@plt+0x1624>
   12550:	ldr	r2, [pc, #1788]	; 12c54 <__assert_fail@plt+0x1934>
   12554:	ldr	r1, [pc, #1788]	; 12c58 <__assert_fail@plt+0x1938>
   12558:	ldr	r0, [pc, #1788]	; 12c5c <__assert_fail@plt+0x193c>
   1255c:	bl	11840 <__assert_fail@plt+0x520>
   12560:	mov	r3, r0
   12564:	eor	r3, r3, #1
   12568:	uxtb	r3, r3
   1256c:	cmp	r3, #0
   12570:	beq	12944 <__assert_fail@plt+0x1624>
   12574:	ldr	r0, [pc, #1764]	; 12c60 <__assert_fail@plt+0x1940>
   12578:	bl	111f4 <gettext@plt>
   1257c:	mov	r4, r0
   12580:	ldr	r3, [pc, #1736]	; 12c50 <__assert_fail@plt+0x1930>
   12584:	ldr	r3, [r3]
   12588:	mov	r0, r3
   1258c:	bl	15b1c <__assert_fail@plt+0x47fc>
   12590:	mov	r3, r0
   12594:	mov	r2, r4
   12598:	mov	r1, #0
   1259c:	mov	r0, #0
   125a0:	bl	11194 <error@plt>
   125a4:	mov	r3, #0
   125a8:	strb	r3, [fp, #-13]
   125ac:	b	12944 <__assert_fail@plt+0x1624>
   125b0:	ldr	r2, [pc, #1708]	; 12c64 <__assert_fail@plt+0x1944>
   125b4:	ldr	r1, [pc, #1708]	; 12c68 <__assert_fail@plt+0x1948>
   125b8:	ldr	r0, [pc, #1708]	; 12c6c <__assert_fail@plt+0x194c>
   125bc:	bl	11840 <__assert_fail@plt+0x520>
   125c0:	mov	r3, r0
   125c4:	eor	r3, r3, #1
   125c8:	uxtb	r3, r3
   125cc:	cmp	r3, #0
   125d0:	beq	12944 <__assert_fail@plt+0x1624>
   125d4:	ldr	r0, [pc, #1684]	; 12c70 <__assert_fail@plt+0x1950>
   125d8:	bl	111f4 <gettext@plt>
   125dc:	mov	r4, r0
   125e0:	ldr	r3, [pc, #1640]	; 12c50 <__assert_fail@plt+0x1930>
   125e4:	ldr	r3, [r3]
   125e8:	mov	r0, r3
   125ec:	bl	15b1c <__assert_fail@plt+0x47fc>
   125f0:	mov	r3, r0
   125f4:	mov	r2, r4
   125f8:	mov	r1, #0
   125fc:	mov	r0, #0
   12600:	bl	11194 <error@plt>
   12604:	mov	r3, #0
   12608:	strb	r3, [fp, #-13]
   1260c:	b	12944 <__assert_fail@plt+0x1624>
   12610:	ldr	r3, [pc, #1592]	; 12c50 <__assert_fail@plt+0x1930>
   12614:	ldr	r4, [r3]
   12618:	ldr	r0, [pc, #1620]	; 12c74 <__assert_fail@plt+0x1954>
   1261c:	bl	111f4 <gettext@plt>
   12620:	mov	r2, r0
   12624:	mov	r3, #0
   12628:	str	r3, [sp, #16]
   1262c:	str	r2, [sp, #12]
   12630:	ldr	r3, [pc, #1524]	; 12c2c <__assert_fail@plt+0x190c>
   12634:	str	r3, [sp, #8]
   12638:	mvn	r2, #0
   1263c:	mvn	r3, #-2147483648	; 0x80000000
   12640:	strd	r2, [sp]
   12644:	mov	r2, #0
   12648:	mov	r3, #-2147483648	; 0x80000000
   1264c:	mov	r0, r4
   12650:	bl	302f8 <__assert_fail@plt+0x1efd8>
   12654:	mov	r2, r0
   12658:	mov	r3, r1
   1265c:	ldr	r1, [pc, #1556]	; 12c78 <__assert_fail@plt+0x1958>
   12660:	strd	r2, [r1]
   12664:	b	12944 <__assert_fail@plt+0x1624>
   12668:	ldr	r3, [pc, #1504]	; 12c50 <__assert_fail@plt+0x1930>
   1266c:	ldr	r4, [r3]
   12670:	ldr	r0, [pc, #1540]	; 12c7c <__assert_fail@plt+0x195c>
   12674:	bl	111f4 <gettext@plt>
   12678:	mov	r2, r0
   1267c:	mov	r3, #0
   12680:	str	r3, [sp, #16]
   12684:	str	r2, [sp, #12]
   12688:	ldr	r3, [pc, #1436]	; 12c2c <__assert_fail@plt+0x190c>
   1268c:	str	r3, [sp, #8]
   12690:	mvn	r2, #0
   12694:	mvn	r3, #-2147483648	; 0x80000000
   12698:	strd	r2, [sp]
   1269c:	mov	r2, #0
   126a0:	mov	r3, #-2147483648	; 0x80000000
   126a4:	mov	r0, r4
   126a8:	bl	302f8 <__assert_fail@plt+0x1efd8>
   126ac:	mov	r2, r0
   126b0:	mov	r3, r1
   126b4:	ldr	r1, [pc, #1476]	; 12c80 <__assert_fail@plt+0x1960>
   126b8:	strd	r2, [r1]
   126bc:	b	12944 <__assert_fail@plt+0x1624>
   126c0:	ldr	r3, [pc, #1468]	; 12c84 <__assert_fail@plt+0x1964>
   126c4:	mov	r2, #0
   126c8:	strb	r2, [r3]
   126cc:	b	12944 <__assert_fail@plt+0x1624>
   126d0:	ldr	r3, [pc, #1400]	; 12c50 <__assert_fail@plt+0x1930>
   126d4:	ldr	r4, [r3]
   126d8:	ldr	r0, [pc, #1448]	; 12c88 <__assert_fail@plt+0x1968>
   126dc:	bl	111f4 <gettext@plt>
   126e0:	mov	r2, r0
   126e4:	mov	r3, #0
   126e8:	str	r3, [sp, #16]
   126ec:	str	r2, [sp, #12]
   126f0:	ldr	r3, [pc, #1332]	; 12c2c <__assert_fail@plt+0x190c>
   126f4:	str	r3, [sp, #8]
   126f8:	mvn	r2, #0
   126fc:	mvn	r3, #-2147483648	; 0x80000000
   12700:	strd	r2, [sp]
   12704:	mov	r2, #1
   12708:	mov	r3, #0
   1270c:	mov	r0, r4
   12710:	bl	302f8 <__assert_fail@plt+0x1efd8>
   12714:	mov	r2, r0
   12718:	mov	r3, r1
   1271c:	ldr	r1, [pc, #1384]	; 12c8c <__assert_fail@plt+0x196c>
   12720:	strd	r2, [r1]
   12724:	b	12944 <__assert_fail@plt+0x1624>
   12728:	ldr	r3, [pc, #1312]	; 12c50 <__assert_fail@plt+0x1930>
   1272c:	ldr	r3, [r3]
   12730:	ldr	r2, [pc, #1368]	; 12c90 <__assert_fail@plt+0x1970>
   12734:	str	r3, [r2]
   12738:	b	12944 <__assert_fail@plt+0x1624>
   1273c:	ldr	r3, [pc, #1292]	; 12c50 <__assert_fail@plt+0x1930>
   12740:	ldr	r4, [r3]
   12744:	ldr	r0, [pc, #1352]	; 12c94 <__assert_fail@plt+0x1974>
   12748:	bl	111f4 <gettext@plt>
   1274c:	mov	r2, r0
   12750:	mov	r3, #0
   12754:	str	r3, [sp, #16]
   12758:	str	r2, [sp, #12]
   1275c:	ldr	r3, [pc, #1224]	; 12c2c <__assert_fail@plt+0x190c>
   12760:	str	r3, [sp, #8]
   12764:	mvn	r2, #-2147483648	; 0x80000000
   12768:	mov	r3, #0
   1276c:	strd	r2, [sp]
   12770:	mov	r2, #1
   12774:	mov	r3, #0
   12778:	mov	r0, r4
   1277c:	bl	302f8 <__assert_fail@plt+0x1efd8>
   12780:	mov	r2, r0
   12784:	mov	r3, r1
   12788:	ldr	r3, [pc, #1288]	; 12c98 <__assert_fail@plt+0x1978>
   1278c:	str	r2, [r3]
   12790:	b	12944 <__assert_fail@plt+0x1624>
   12794:	ldr	r3, [pc, #1204]	; 12c50 <__assert_fail@plt+0x1930>
   12798:	ldr	r3, [r3]
   1279c:	ldr	r1, [pc, #1272]	; 12c9c <__assert_fail@plt+0x197c>
   127a0:	mov	r0, r3
   127a4:	bl	11038 <strcmp@plt>
   127a8:	mov	r3, r0
   127ac:	cmp	r3, #0
   127b0:	bne	127c4 <__assert_fail@plt+0x14a4>
   127b4:	ldr	r3, [pc, #1252]	; 12ca0 <__assert_fail@plt+0x1980>
   127b8:	ldr	r2, [pc, #1252]	; 12ca4 <__assert_fail@plt+0x1984>
   127bc:	str	r2, [r3]
   127c0:	b	12944 <__assert_fail@plt+0x1624>
   127c4:	ldr	r3, [pc, #1156]	; 12c50 <__assert_fail@plt+0x1930>
   127c8:	ldr	r3, [r3]
   127cc:	ldr	r1, [pc, #1236]	; 12ca8 <__assert_fail@plt+0x1988>
   127d0:	mov	r0, r3
   127d4:	bl	11038 <strcmp@plt>
   127d8:	mov	r3, r0
   127dc:	cmp	r3, #0
   127e0:	bne	127f4 <__assert_fail@plt+0x14d4>
   127e4:	ldr	r3, [pc, #1204]	; 12ca0 <__assert_fail@plt+0x1980>
   127e8:	ldr	r2, [pc, #1212]	; 12cac <__assert_fail@plt+0x198c>
   127ec:	str	r2, [r3]
   127f0:	b	12944 <__assert_fail@plt+0x1624>
   127f4:	ldr	r3, [pc, #1108]	; 12c50 <__assert_fail@plt+0x1930>
   127f8:	ldr	r3, [r3]
   127fc:	ldr	r1, [pc, #1196]	; 12cb0 <__assert_fail@plt+0x1990>
   12800:	mov	r0, r3
   12804:	bl	11038 <strcmp@plt>
   12808:	mov	r3, r0
   1280c:	cmp	r3, #0
   12810:	bne	12824 <__assert_fail@plt+0x1504>
   12814:	ldr	r3, [pc, #1156]	; 12ca0 <__assert_fail@plt+0x1980>
   12818:	ldr	r2, [pc, #1172]	; 12cb4 <__assert_fail@plt+0x1994>
   1281c:	str	r2, [r3]
   12820:	b	12944 <__assert_fail@plt+0x1624>
   12824:	ldr	r0, [pc, #1164]	; 12cb8 <__assert_fail@plt+0x1998>
   12828:	bl	111f4 <gettext@plt>
   1282c:	mov	r4, r0
   12830:	ldr	r3, [pc, #1048]	; 12c50 <__assert_fail@plt+0x1930>
   12834:	ldr	r3, [r3]
   12838:	mov	r0, r3
   1283c:	bl	15b1c <__assert_fail@plt+0x47fc>
   12840:	mov	r3, r0
   12844:	mov	r2, r4
   12848:	mov	r1, #0
   1284c:	mov	r0, #0
   12850:	bl	11194 <error@plt>
   12854:	mov	r3, #0
   12858:	strb	r3, [fp, #-13]
   1285c:	b	12944 <__assert_fail@plt+0x1624>
   12860:	ldr	r3, [pc, #1000]	; 12c50 <__assert_fail@plt+0x1930>
   12864:	ldr	r3, [r3]
   12868:	mov	r0, r3
   1286c:	bl	11200 <strlen@plt>
   12870:	str	r0, [fp, #-28]	; 0xffffffe4
   12874:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12878:	cmp	r3, #1
   1287c:	beq	1288c <__assert_fail@plt+0x156c>
   12880:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12884:	cmp	r3, #2
   12888:	bne	128dc <__assert_fail@plt+0x15bc>
   1288c:	ldr	r3, [pc, #1064]	; 12cbc <__assert_fail@plt+0x199c>
   12890:	ldr	r3, [r3]
   12894:	str	r3, [fp, #-20]	; 0xffffffec
   12898:	b	128c4 <__assert_fail@plt+0x15a4>
   1289c:	ldr	r3, [fp, #-20]	; 0xffffffec
   128a0:	add	r2, r3, #1
   128a4:	str	r2, [fp, #-20]	; 0xffffffec
   128a8:	ldr	r2, [pc, #928]	; 12c50 <__assert_fail@plt+0x1930>
   128ac:	ldr	r2, [r2]
   128b0:	add	r1, r2, #1
   128b4:	ldr	r0, [pc, #916]	; 12c50 <__assert_fail@plt+0x1930>
   128b8:	str	r1, [r0]
   128bc:	ldrb	r2, [r2]
   128c0:	strb	r2, [r3]
   128c4:	ldr	r3, [pc, #900]	; 12c50 <__assert_fail@plt+0x1930>
   128c8:	ldr	r3, [r3]
   128cc:	ldrb	r3, [r3]
   128d0:	cmp	r3, #0
   128d4:	bne	1289c <__assert_fail@plt+0x157c>
   128d8:	b	128ec <__assert_fail@plt+0x15cc>
   128dc:	ldr	r3, [pc, #876]	; 12c50 <__assert_fail@plt+0x1930>
   128e0:	ldr	r3, [r3]
   128e4:	ldr	r2, [pc, #976]	; 12cbc <__assert_fail@plt+0x199c>
   128e8:	str	r3, [r2]
   128ec:	b	12944 <__assert_fail@plt+0x1624>
   128f0:	mov	r0, #0
   128f4:	bl	11664 <__assert_fail@plt+0x344>
   128f8:	ldr	r3, [pc, #960]	; 12cc0 <__assert_fail@plt+0x19a0>
   128fc:	ldr	r0, [r3]
   12900:	ldr	r3, [pc, #956]	; 12cc4 <__assert_fail@plt+0x19a4>
   12904:	ldr	r2, [r3]
   12908:	mov	r3, #0
   1290c:	str	r3, [sp, #8]
   12910:	ldr	r3, [pc, #944]	; 12cc8 <__assert_fail@plt+0x19a8>
   12914:	str	r3, [sp, #4]
   12918:	ldr	r3, [pc, #940]	; 12ccc <__assert_fail@plt+0x19ac>
   1291c:	str	r3, [sp]
   12920:	mov	r3, r2
   12924:	ldr	r2, [pc, #932]	; 12cd0 <__assert_fail@plt+0x19b0>
   12928:	ldr	r1, [pc, #932]	; 12cd4 <__assert_fail@plt+0x19b4>
   1292c:	bl	2f4ac <__assert_fail@plt+0x1e18c>
   12930:	mov	r0, #0
   12934:	bl	111e8 <exit@plt>
   12938:	mov	r3, #0
   1293c:	strb	r3, [fp, #-13]
   12940:	nop			; (mov r0, r0)
   12944:	mov	r3, #0
   12948:	str	r3, [sp]
   1294c:	ldr	r3, [pc, #900]	; 12cd8 <__assert_fail@plt+0x19b8>
   12950:	ldr	r2, [pc, #900]	; 12cdc <__assert_fail@plt+0x19bc>
   12954:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12958:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1295c:	bl	111d0 <getopt_long@plt>
   12960:	str	r0, [fp, #-24]	; 0xffffffe8
   12964:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12968:	cmn	r3, #1
   1296c:	bne	122f0 <__assert_fail@plt+0xfd0>
   12970:	ldrb	r3, [fp, #-13]
   12974:	eor	r3, r3, #1
   12978:	uxtb	r3, r3
   1297c:	cmp	r3, #0
   12980:	beq	1298c <__assert_fail@plt+0x166c>
   12984:	mov	r0, #1
   12988:	bl	11664 <__assert_fail@plt+0x344>
   1298c:	ldr	r3, [pc, #808]	; 12cbc <__assert_fail@plt+0x199c>
   12990:	ldr	r3, [r3]
   12994:	mov	r0, r3
   12998:	bl	11200 <strlen@plt>
   1299c:	str	r0, [fp, #-28]	; 0xffffffe4
   129a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   129a4:	mov	r3, r2
   129a8:	lsl	r3, r3, #1
   129ac:	add	r3, r3, r2
   129b0:	ldr	r2, [pc, #808]	; 12ce0 <__assert_fail@plt+0x19c0>
   129b4:	str	r3, [r2]
   129b8:	ldr	r3, [pc, #800]	; 12ce0 <__assert_fail@plt+0x19c0>
   129bc:	ldr	r3, [r3]
   129c0:	add	r3, r3, #1
   129c4:	mov	r0, r3
   129c8:	bl	2f5f8 <__assert_fail@plt+0x1e2d8>
   129cc:	mov	r3, r0
   129d0:	mov	r2, r3
   129d4:	ldr	r3, [pc, #776]	; 12ce4 <__assert_fail@plt+0x19c4>
   129d8:	str	r2, [r3]
   129dc:	ldr	r3, [pc, #768]	; 12ce4 <__assert_fail@plt+0x19c4>
   129e0:	ldr	r2, [r3]
   129e4:	ldr	r3, [pc, #720]	; 12cbc <__assert_fail@plt+0x199c>
   129e8:	ldr	r3, [r3]
   129ec:	mov	r1, r3
   129f0:	mov	r0, r2
   129f4:	bl	110f8 <stpcpy@plt>
   129f8:	mov	r2, r0
   129fc:	ldr	r3, [pc, #696]	; 12cbc <__assert_fail@plt+0x199c>
   12a00:	ldr	r3, [r3]
   12a04:	mov	r1, r3
   12a08:	mov	r0, r2
   12a0c:	bl	110f8 <stpcpy@plt>
   12a10:	mov	r2, r0
   12a14:	ldr	r3, [pc, #672]	; 12cbc <__assert_fail@plt+0x199c>
   12a18:	ldr	r3, [r3]
   12a1c:	mov	r1, r3
   12a20:	mov	r0, r2
   12a24:	bl	11164 <strcpy@plt>
   12a28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12a2c:	lsl	r3, r3, #1
   12a30:	ldr	r2, [pc, #688]	; 12ce8 <__assert_fail@plt+0x19c8>
   12a34:	str	r3, [r2]
   12a38:	ldr	r3, [pc, #676]	; 12ce4 <__assert_fail@plt+0x19c4>
   12a3c:	ldr	r2, [r3]
   12a40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12a44:	add	r3, r2, r3
   12a48:	ldr	r2, [pc, #668]	; 12cec <__assert_fail@plt+0x19cc>
   12a4c:	str	r3, [r2]
   12a50:	ldr	r2, [pc, #664]	; 12cf0 <__assert_fail@plt+0x19d0>
   12a54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12a58:	str	r3, [r2]
   12a5c:	ldr	r3, [pc, #648]	; 12cec <__assert_fail@plt+0x19cc>
   12a60:	ldr	r2, [r3]
   12a64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12a68:	add	r3, r2, r3
   12a6c:	ldr	r2, [pc, #640]	; 12cf4 <__assert_fail@plt+0x19d4>
   12a70:	str	r3, [r2]
   12a74:	ldr	r0, [pc, #636]	; 12cf8 <__assert_fail@plt+0x19d8>
   12a78:	bl	131d0 <__assert_fail@plt+0x1eb0>
   12a7c:	ldr	r3, [pc, #524]	; 12c90 <__assert_fail@plt+0x1970>
   12a80:	ldr	r3, [r3]
   12a84:	mov	r0, r3
   12a88:	bl	11200 <strlen@plt>
   12a8c:	str	r0, [fp, #-28]	; 0xffffffe4
   12a90:	ldr	r3, [pc, #512]	; 12c98 <__assert_fail@plt+0x1978>
   12a94:	ldr	r3, [r3]
   12a98:	mov	r2, r3
   12a9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12aa0:	add	r3, r2, r3
   12aa4:	add	r3, r3, #1
   12aa8:	mov	r0, r3
   12aac:	bl	2f5f8 <__assert_fail@plt+0x1e2d8>
   12ab0:	mov	r3, r0
   12ab4:	mov	r2, r3
   12ab8:	ldr	r3, [pc, #572]	; 12cfc <__assert_fail@plt+0x19dc>
   12abc:	str	r2, [r3]
   12ac0:	ldr	r3, [pc, #564]	; 12cfc <__assert_fail@plt+0x19dc>
   12ac4:	ldr	r0, [r3]
   12ac8:	ldr	r3, [pc, #456]	; 12c98 <__assert_fail@plt+0x1978>
   12acc:	ldr	r3, [r3]
   12ad0:	mov	r2, r3
   12ad4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12ad8:	add	r3, r2, r3
   12adc:	mov	r2, r3
   12ae0:	mov	r1, #32
   12ae4:	bl	11248 <memset@plt>
   12ae8:	ldr	r3, [pc, #524]	; 12cfc <__assert_fail@plt+0x19dc>
   12aec:	ldr	r2, [r3]
   12af0:	ldr	r3, [pc, #416]	; 12c98 <__assert_fail@plt+0x1978>
   12af4:	ldr	r3, [r3]
   12af8:	mov	r1, r3
   12afc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12b00:	add	r3, r1, r3
   12b04:	add	r3, r2, r3
   12b08:	mov	r2, #0
   12b0c:	strb	r2, [r3]
   12b10:	ldr	r3, [pc, #352]	; 12c78 <__assert_fail@plt+0x1958>
   12b14:	ldrd	r2, [r3]
   12b18:	ldr	r1, [pc, #480]	; 12d00 <__assert_fail@plt+0x19e0>
   12b1c:	strd	r2, [r1]
   12b20:	ldr	r3, [pc, #308]	; 12c5c <__assert_fail@plt+0x193c>
   12b24:	ldr	r3, [r3]
   12b28:	ldr	r2, [pc, #468]	; 12d04 <__assert_fail@plt+0x19e4>
   12b2c:	str	r3, [r2]
   12b30:	ldr	r3, [pc, #464]	; 12d08 <__assert_fail@plt+0x19e8>
   12b34:	ldr	r2, [pc, #284]	; 12c58 <__assert_fail@plt+0x1938>
   12b38:	str	r2, [r3]
   12b3c:	ldr	r3, [pc, #456]	; 12d0c <__assert_fail@plt+0x19ec>
   12b40:	ldr	r2, [r3]
   12b44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12b48:	cmp	r2, r3
   12b4c:	bne	12bb8 <__assert_fail@plt+0x1898>
   12b50:	ldr	r0, [pc, #440]	; 12d10 <__assert_fail@plt+0x19f0>
   12b54:	bl	12104 <__assert_fail@plt+0xde4>
   12b58:	mov	r3, r0
   12b5c:	strb	r3, [fp, #-13]
   12b60:	b	12bcc <__assert_fail@plt+0x18ac>
   12b64:	ldr	r3, [pc, #416]	; 12d0c <__assert_fail@plt+0x19ec>
   12b68:	ldr	r3, [r3]
   12b6c:	lsl	r3, r3, #2
   12b70:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12b74:	add	r3, r2, r3
   12b78:	ldr	r3, [r3]
   12b7c:	mov	r0, r3
   12b80:	bl	12104 <__assert_fail@plt+0xde4>
   12b84:	mov	r3, r0
   12b88:	mov	r2, r3
   12b8c:	ldrb	r3, [fp, #-13]
   12b90:	and	r3, r3, r2
   12b94:	cmp	r3, #0
   12b98:	movne	r3, #1
   12b9c:	moveq	r3, #0
   12ba0:	strb	r3, [fp, #-13]
   12ba4:	ldr	r3, [pc, #352]	; 12d0c <__assert_fail@plt+0x19ec>
   12ba8:	ldr	r3, [r3]
   12bac:	add	r3, r3, #1
   12bb0:	ldr	r2, [pc, #340]	; 12d0c <__assert_fail@plt+0x19ec>
   12bb4:	str	r3, [r2]
   12bb8:	ldr	r3, [pc, #332]	; 12d0c <__assert_fail@plt+0x19ec>
   12bbc:	ldr	r2, [r3]
   12bc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12bc4:	cmp	r2, r3
   12bc8:	blt	12b64 <__assert_fail@plt+0x1844>
   12bcc:	ldr	r3, [pc, #104]	; 12c3c <__assert_fail@plt+0x191c>
   12bd0:	ldrb	r3, [r3]
   12bd4:	cmp	r3, #0
   12bd8:	beq	12c14 <__assert_fail@plt+0x18f4>
   12bdc:	ldr	r3, [pc, #304]	; 12d14 <__assert_fail@plt+0x19f4>
   12be0:	ldr	r3, [r3]
   12be4:	mov	r0, r3
   12be8:	bl	12f4c <__assert_fail@plt+0x1c2c>
   12bec:	mov	r3, r0
   12bf0:	cmn	r3, #1
   12bf4:	bne	12c14 <__assert_fail@plt+0x18f4>
   12bf8:	bl	11224 <__errno_location@plt>
   12bfc:	mov	r3, r0
   12c00:	ldr	r3, [r3]
   12c04:	ldr	r2, [pc, #260]	; 12d10 <__assert_fail@plt+0x19f0>
   12c08:	mov	r1, r3
   12c0c:	mov	r0, #1
   12c10:	bl	11194 <error@plt>
   12c14:	ldrb	r3, [fp, #-13]
   12c18:	eor	r3, r3, #1
   12c1c:	uxtb	r3, r3
   12c20:	mov	r0, r3
   12c24:	sub	sp, fp, #8
   12c28:	pop	{r4, fp, pc}
   12c2c:	ldrdeq	r2, [r3], -r4
   12c30:	andeq	r3, r3, r0, ror r1
   12c34:	andeq	r2, r3, ip, ror #15
   12c38:	andeq	r2, r1, ip, ror sp
   12c3c:	andeq	r4, r4, r9, ror r5
   12c40:	andeq	r4, r4, r4, asr #6
   12c44:	andeq	r4, r4, r4, lsl #4
   12c48:	andeq	r4, r4, r8, lsr r1
   12c4c:	andeq	r3, r3, r8, lsl #3
   12c50:	ldrdeq	r4, [r4], -r8
   12c54:	andeq	r4, r4, r4, asr #4
   12c58:	andeq	r4, r4, r4, ror #3
   12c5c:	andeq	r4, r4, r4, lsr r1
   12c60:	andeq	r3, r3, ip, lsr #3
   12c64:	andeq	r4, r4, r4, asr #8
   12c68:	andeq	r4, r4, r4, lsr #4
   12c6c:	andeq	r4, r4, ip, lsr r1
   12c70:	ldrdeq	r3, [r3], -r0
   12c74:	strdeq	r3, [r3], -r4
   12c78:	andeq	r4, r4, r8, asr #2
   12c7c:	andeq	r3, r3, r4, lsl r2
   12c80:	andeq	r4, r4, r0, asr r1
   12c84:	andeq	r4, r4, r8, asr r1
   12c88:	andeq	r3, r3, r4, lsr r2
   12c8c:	andeq	r4, r4, r0, ror #2
   12c90:	andeq	r4, r4, r0, asr #2
   12c94:	andeq	r3, r3, r8, asr r2
   12c98:	andeq	r4, r4, r8, ror #2
   12c9c:	andeq	r3, r3, r8, ror r2
   12ca0:	andeq	r4, r4, ip, ror #2
   12ca4:	muleq	r3, ip, r8
   12ca8:	andeq	r3, r3, ip, ror r2
   12cac:	andeq	r2, r3, r8, lsl #17
   12cb0:	andeq	r3, r3, r0, lsl #5
   12cb4:	muleq	r3, r0, r8
   12cb8:	andeq	r3, r3, r4, lsl #5
   12cbc:	andeq	r4, r4, r4, asr #2
   12cc0:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   12cc4:	andeq	r4, r4, r0, ror r1
   12cc8:	andeq	r3, r3, r8, lsr #5
   12ccc:			; <UNDEFINED> instruction: 0x000332b8
   12cd0:	andeq	r2, r3, ip, lsl r7
   12cd4:	andeq	r3, r3, r4, lsr #2
   12cd8:	andeq	r2, r3, ip, lsl #19
   12cdc:	andeq	r3, r3, r8, asr #5
   12ce0:	andeq	r4, r4, ip, asr #10
   12ce4:	andeq	r4, r4, r8, asr #10
   12ce8:	andeq	r4, r4, r4, asr r5
   12cec:	andeq	r4, r4, r0, asr r5
   12cf0:	andeq	r4, r4, ip, asr r5
   12cf4:	andeq	r4, r4, r8, asr r5
   12cf8:	andeq	r4, r4, r0, ror #10
   12cfc:	andeq	r4, r4, ip, ror #10
   12d00:	andeq	r4, r4, r0, ror r5
   12d04:	andeq	r4, r4, r0, ror #3
   12d08:	andeq	r4, r4, r4, asr #10
   12d0c:	andeq	r4, r4, r0, asr #3
   12d10:	andeq	r3, r3, r8, ror #2
   12d14:	ldrdeq	r4, [r4], -r0
   12d18:	push	{fp}		; (str fp, [sp, #-4]!)
   12d1c:	add	fp, sp, #0
   12d20:	sub	sp, sp, #12
   12d24:	str	r0, [fp, #-8]
   12d28:	ldr	r2, [pc, #20]	; 12d44 <__assert_fail@plt+0x1a24>
   12d2c:	ldr	r3, [fp, #-8]
   12d30:	str	r3, [r2]
   12d34:	nop			; (mov r0, r0)
   12d38:	add	sp, fp, #0
   12d3c:	pop	{fp}		; (ldr fp, [sp], #4)
   12d40:	bx	lr
   12d44:	andeq	r4, r4, r8, lsl #11
   12d48:	push	{fp}		; (str fp, [sp, #-4]!)
   12d4c:	add	fp, sp, #0
   12d50:	sub	sp, sp, #12
   12d54:	mov	r3, r0
   12d58:	strb	r3, [fp, #-5]
   12d5c:	ldr	r2, [pc, #20]	; 12d78 <__assert_fail@plt+0x1a58>
   12d60:	ldrb	r3, [fp, #-5]
   12d64:	strb	r3, [r2]
   12d68:	nop			; (mov r0, r0)
   12d6c:	add	sp, fp, #0
   12d70:	pop	{fp}		; (ldr fp, [sp], #4)
   12d74:	bx	lr
   12d78:	andeq	r4, r4, ip, lsl #11
   12d7c:	push	{r4, fp, lr}
   12d80:	add	fp, sp, #8
   12d84:	sub	sp, sp, #20
   12d88:	ldr	r3, [pc, #256]	; 12e90 <__assert_fail@plt+0x1b70>
   12d8c:	ldr	r3, [r3]
   12d90:	mov	r0, r3
   12d94:	bl	30f2c <__assert_fail@plt+0x1fc0c>
   12d98:	mov	r3, r0
   12d9c:	cmp	r3, #0
   12da0:	beq	12e58 <__assert_fail@plt+0x1b38>
   12da4:	ldr	r3, [pc, #232]	; 12e94 <__assert_fail@plt+0x1b74>
   12da8:	ldrb	r3, [r3]
   12dac:	eor	r3, r3, #1
   12db0:	uxtb	r3, r3
   12db4:	cmp	r3, #0
   12db8:	bne	12dd0 <__assert_fail@plt+0x1ab0>
   12dbc:	bl	11224 <__errno_location@plt>
   12dc0:	mov	r3, r0
   12dc4:	ldr	r3, [r3]
   12dc8:	cmp	r3, #32
   12dcc:	beq	12e58 <__assert_fail@plt+0x1b38>
   12dd0:	ldr	r0, [pc, #192]	; 12e98 <__assert_fail@plt+0x1b78>
   12dd4:	bl	111f4 <gettext@plt>
   12dd8:	str	r0, [fp, #-16]
   12ddc:	ldr	r3, [pc, #184]	; 12e9c <__assert_fail@plt+0x1b7c>
   12de0:	ldr	r3, [r3]
   12de4:	cmp	r3, #0
   12de8:	beq	12e2c <__assert_fail@plt+0x1b0c>
   12dec:	bl	11224 <__errno_location@plt>
   12df0:	mov	r3, r0
   12df4:	ldr	r4, [r3]
   12df8:	ldr	r3, [pc, #156]	; 12e9c <__assert_fail@plt+0x1b7c>
   12dfc:	ldr	r3, [r3]
   12e00:	mov	r0, r3
   12e04:	bl	1584c <__assert_fail@plt+0x452c>
   12e08:	mov	r2, r0
   12e0c:	ldr	r3, [fp, #-16]
   12e10:	str	r3, [sp]
   12e14:	mov	r3, r2
   12e18:	ldr	r2, [pc, #128]	; 12ea0 <__assert_fail@plt+0x1b80>
   12e1c:	mov	r1, r4
   12e20:	mov	r0, #0
   12e24:	bl	11194 <error@plt>
   12e28:	b	12e48 <__assert_fail@plt+0x1b28>
   12e2c:	bl	11224 <__errno_location@plt>
   12e30:	mov	r3, r0
   12e34:	ldr	r1, [r3]
   12e38:	ldr	r3, [fp, #-16]
   12e3c:	ldr	r2, [pc, #96]	; 12ea4 <__assert_fail@plt+0x1b84>
   12e40:	mov	r0, #0
   12e44:	bl	11194 <error@plt>
   12e48:	ldr	r3, [pc, #88]	; 12ea8 <__assert_fail@plt+0x1b88>
   12e4c:	ldr	r3, [r3]
   12e50:	mov	r0, r3
   12e54:	bl	11098 <_exit@plt>
   12e58:	ldr	r3, [pc, #76]	; 12eac <__assert_fail@plt+0x1b8c>
   12e5c:	ldr	r3, [r3]
   12e60:	mov	r0, r3
   12e64:	bl	30f2c <__assert_fail@plt+0x1fc0c>
   12e68:	mov	r3, r0
   12e6c:	cmp	r3, #0
   12e70:	beq	12e84 <__assert_fail@plt+0x1b64>
   12e74:	ldr	r3, [pc, #44]	; 12ea8 <__assert_fail@plt+0x1b88>
   12e78:	ldr	r3, [r3]
   12e7c:	mov	r0, r3
   12e80:	bl	11098 <_exit@plt>
   12e84:	nop			; (mov r0, r0)
   12e88:	sub	sp, fp, #8
   12e8c:	pop	{r4, fp, pc}
   12e90:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   12e94:	andeq	r4, r4, ip, lsl #11
   12e98:	strdeq	r3, [r3], -r0
   12e9c:	andeq	r4, r4, r8, lsl #11
   12ea0:	strdeq	r3, [r3], -ip
   12ea4:	andeq	r3, r3, r4, lsl #6
   12ea8:	andeq	r4, r4, r4, ror r1
   12eac:	andeq	r4, r4, r8, asr #3
   12eb0:	push	{fp, lr}
   12eb4:	add	fp, sp, #4
   12eb8:	sub	sp, sp, #40	; 0x28
   12ebc:	str	r0, [fp, #-16]
   12ec0:	strd	r2, [fp, #-28]	; 0xffffffe4
   12ec4:	ldr	r3, [fp, #12]
   12ec8:	str	r3, [sp, #8]
   12ecc:	ldrd	r2, [fp, #4]
   12ed0:	strd	r2, [sp]
   12ed4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   12ed8:	ldr	r0, [fp, #-16]
   12edc:	bl	11044 <posix_fadvise64@plt>
   12ee0:	str	r0, [fp, #-8]
   12ee4:	nop			; (mov r0, r0)
   12ee8:	sub	sp, fp, #4
   12eec:	pop	{fp, pc}
   12ef0:	push	{fp, lr}
   12ef4:	add	fp, sp, #4
   12ef8:	sub	sp, sp, #24
   12efc:	str	r0, [fp, #-8]
   12f00:	str	r1, [fp, #-12]
   12f04:	ldr	r3, [fp, #-8]
   12f08:	cmp	r3, #0
   12f0c:	beq	12f40 <__assert_fail@plt+0x1c20>
   12f10:	ldr	r0, [fp, #-8]
   12f14:	bl	11260 <fileno@plt>
   12f18:	mov	r1, r0
   12f1c:	ldr	r3, [fp, #-12]
   12f20:	str	r3, [sp, #8]
   12f24:	mov	r2, #0
   12f28:	mov	r3, #0
   12f2c:	strd	r2, [sp]
   12f30:	mov	r2, #0
   12f34:	mov	r3, #0
   12f38:	mov	r0, r1
   12f3c:	bl	12eb0 <__assert_fail@plt+0x1b90>
   12f40:	nop			; (mov r0, r0)
   12f44:	sub	sp, fp, #4
   12f48:	pop	{fp, pc}
   12f4c:	push	{fp, lr}
   12f50:	add	fp, sp, #4
   12f54:	sub	sp, sp, #32
   12f58:	str	r0, [fp, #-24]	; 0xffffffe8
   12f5c:	mov	r3, #0
   12f60:	str	r3, [fp, #-8]
   12f64:	mov	r3, #0
   12f68:	str	r3, [fp, #-12]
   12f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f70:	bl	11260 <fileno@plt>
   12f74:	str	r0, [fp, #-16]
   12f78:	ldr	r3, [fp, #-16]
   12f7c:	cmp	r3, #0
   12f80:	bge	12f94 <__assert_fail@plt+0x1c74>
   12f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f88:	bl	11278 <fclose@plt>
   12f8c:	mov	r3, r0
   12f90:	b	13038 <__assert_fail@plt+0x1d18>
   12f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f98:	bl	111b8 <__freading@plt>
   12f9c:	mov	r3, r0
   12fa0:	cmp	r3, #0
   12fa4:	beq	12fe0 <__assert_fail@plt+0x1cc0>
   12fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fac:	bl	11260 <fileno@plt>
   12fb0:	mov	r1, r0
   12fb4:	mov	r3, #1
   12fb8:	str	r3, [sp]
   12fbc:	mov	r2, #0
   12fc0:	mov	r3, #0
   12fc4:	mov	r0, r1
   12fc8:	bl	1114c <lseek64@plt>
   12fcc:	mvn	r2, #0
   12fd0:	mvn	r3, #0
   12fd4:	cmp	r1, r3
   12fd8:	cmpeq	r0, r2
   12fdc:	beq	13004 <__assert_fail@plt+0x1ce4>
   12fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fe4:	bl	1308c <__assert_fail@plt+0x1d6c>
   12fe8:	mov	r3, r0
   12fec:	cmp	r3, #0
   12ff0:	beq	13004 <__assert_fail@plt+0x1ce4>
   12ff4:	bl	11224 <__errno_location@plt>
   12ff8:	mov	r3, r0
   12ffc:	ldr	r3, [r3]
   13000:	str	r3, [fp, #-8]
   13004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13008:	bl	11278 <fclose@plt>
   1300c:	str	r0, [fp, #-12]
   13010:	ldr	r3, [fp, #-8]
   13014:	cmp	r3, #0
   13018:	beq	13034 <__assert_fail@plt+0x1d14>
   1301c:	bl	11224 <__errno_location@plt>
   13020:	mov	r2, r0
   13024:	ldr	r3, [fp, #-8]
   13028:	str	r3, [r2]
   1302c:	mvn	r3, #0
   13030:	str	r3, [fp, #-12]
   13034:	ldr	r3, [fp, #-12]
   13038:	mov	r0, r3
   1303c:	sub	sp, fp, #4
   13040:	pop	{fp, pc}
   13044:	push	{fp, lr}
   13048:	add	fp, sp, #4
   1304c:	sub	sp, sp, #16
   13050:	str	r0, [fp, #-8]
   13054:	ldr	r3, [fp, #-8]
   13058:	ldr	r3, [r3]
   1305c:	and	r3, r3, #256	; 0x100
   13060:	cmp	r3, #0
   13064:	beq	13080 <__assert_fail@plt+0x1d60>
   13068:	mov	r3, #1
   1306c:	str	r3, [sp]
   13070:	mov	r2, #0
   13074:	mov	r3, #0
   13078:	ldr	r0, [fp, #-8]
   1307c:	bl	130ec <__assert_fail@plt+0x1dcc>
   13080:	nop			; (mov r0, r0)
   13084:	sub	sp, fp, #4
   13088:	pop	{fp, pc}
   1308c:	push	{fp, lr}
   13090:	add	fp, sp, #4
   13094:	sub	sp, sp, #8
   13098:	str	r0, [fp, #-8]
   1309c:	ldr	r3, [fp, #-8]
   130a0:	cmp	r3, #0
   130a4:	beq	130bc <__assert_fail@plt+0x1d9c>
   130a8:	ldr	r0, [fp, #-8]
   130ac:	bl	111b8 <__freading@plt>
   130b0:	mov	r3, r0
   130b4:	cmp	r3, #0
   130b8:	bne	130cc <__assert_fail@plt+0x1dac>
   130bc:	ldr	r0, [fp, #-8]
   130c0:	bl	11068 <fflush@plt>
   130c4:	mov	r3, r0
   130c8:	b	130e0 <__assert_fail@plt+0x1dc0>
   130cc:	ldr	r0, [fp, #-8]
   130d0:	bl	13044 <__assert_fail@plt+0x1d24>
   130d4:	ldr	r0, [fp, #-8]
   130d8:	bl	11068 <fflush@plt>
   130dc:	mov	r3, r0
   130e0:	mov	r0, r3
   130e4:	sub	sp, fp, #4
   130e8:	pop	{fp, pc}
   130ec:	push	{fp, lr}
   130f0:	add	fp, sp, #4
   130f4:	sub	sp, sp, #32
   130f8:	str	r0, [fp, #-16]
   130fc:	strd	r2, [fp, #-28]	; 0xffffffe4
   13100:	ldr	r3, [fp, #-16]
   13104:	ldr	r2, [r3, #8]
   13108:	ldr	r3, [fp, #-16]
   1310c:	ldr	r3, [r3, #4]
   13110:	cmp	r2, r3
   13114:	bne	131ac <__assert_fail@plt+0x1e8c>
   13118:	ldr	r3, [fp, #-16]
   1311c:	ldr	r2, [r3, #20]
   13120:	ldr	r3, [fp, #-16]
   13124:	ldr	r3, [r3, #16]
   13128:	cmp	r2, r3
   1312c:	bne	131ac <__assert_fail@plt+0x1e8c>
   13130:	ldr	r3, [fp, #-16]
   13134:	ldr	r3, [r3, #36]	; 0x24
   13138:	cmp	r3, #0
   1313c:	bne	131ac <__assert_fail@plt+0x1e8c>
   13140:	ldr	r0, [fp, #-16]
   13144:	bl	11260 <fileno@plt>
   13148:	mov	r1, r0
   1314c:	ldr	r3, [fp, #4]
   13150:	str	r3, [sp]
   13154:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13158:	mov	r0, r1
   1315c:	bl	1114c <lseek64@plt>
   13160:	strd	r0, [fp, #-12]
   13164:	ldrd	r2, [fp, #-12]
   13168:	mvn	r0, #0
   1316c:	mvn	r1, #0
   13170:	cmp	r3, r1
   13174:	cmpeq	r2, r0
   13178:	bne	13184 <__assert_fail@plt+0x1e64>
   1317c:	mvn	r3, #0
   13180:	b	131c4 <__assert_fail@plt+0x1ea4>
   13184:	ldr	r3, [fp, #-16]
   13188:	ldr	r3, [r3]
   1318c:	bic	r2, r3, #16
   13190:	ldr	r3, [fp, #-16]
   13194:	str	r2, [r3]
   13198:	ldr	r1, [fp, #-16]
   1319c:	ldrd	r2, [fp, #-12]
   131a0:	strd	r2, [r1, #80]	; 0x50
   131a4:	mov	r3, #0
   131a8:	b	131c4 <__assert_fail@plt+0x1ea4>
   131ac:	ldr	r3, [fp, #4]
   131b0:	str	r3, [sp]
   131b4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   131b8:	ldr	r0, [fp, #-16]
   131bc:	bl	11284 <fseeko64@plt>
   131c0:	mov	r3, r0
   131c4:	mov	r0, r3
   131c8:	sub	sp, fp, #4
   131cc:	pop	{fp, pc}
   131d0:	push	{fp, lr}
   131d4:	add	fp, sp, #4
   131d8:	sub	sp, sp, #8
   131dc:	str	r0, [fp, #-8]
   131e0:	mov	r2, #12
   131e4:	mov	r1, #0
   131e8:	ldr	r0, [fp, #-8]
   131ec:	bl	11248 <memset@plt>
   131f0:	nop			; (mov r0, r0)
   131f4:	sub	sp, fp, #4
   131f8:	pop	{fp, pc}
   131fc:	push	{fp, lr}
   13200:	add	fp, sp, #4
   13204:	sub	sp, sp, #8
   13208:	str	r0, [fp, #-8]
   1320c:	str	r1, [fp, #-12]
   13210:	mov	r2, #10
   13214:	ldr	r1, [fp, #-12]
   13218:	ldr	r0, [fp, #-8]
   1321c:	bl	13230 <__assert_fail@plt+0x1f10>
   13220:	mov	r3, r0
   13224:	mov	r0, r3
   13228:	sub	sp, fp, #4
   1322c:	pop	{fp, pc}
   13230:	push	{fp, lr}
   13234:	add	fp, sp, #4
   13238:	sub	sp, sp, #48	; 0x30
   1323c:	str	r0, [fp, #-32]	; 0xffffffe0
   13240:	str	r1, [fp, #-36]	; 0xffffffdc
   13244:	mov	r3, r2
   13248:	strb	r3, [fp, #-37]	; 0xffffffdb
   1324c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13250:	ldr	r3, [r3, #8]
   13254:	str	r3, [fp, #-12]
   13258:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1325c:	ldr	r3, [r3, #8]
   13260:	str	r3, [fp, #-16]
   13264:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13268:	ldr	r3, [r3]
   1326c:	mov	r2, r3
   13270:	ldr	r3, [fp, #-12]
   13274:	add	r3, r3, r2
   13278:	str	r3, [fp, #-20]	; 0xffffffec
   1327c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13280:	bl	11308 <feof_unlocked@plt>
   13284:	mov	r3, r0
   13288:	cmp	r3, #0
   1328c:	beq	13298 <__assert_fail@plt+0x1f78>
   13290:	mov	r3, #0
   13294:	b	133b4 <__assert_fail@plt+0x2094>
   13298:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1329c:	bl	11110 <getc_unlocked@plt>
   132a0:	str	r0, [fp, #-8]
   132a4:	ldr	r3, [fp, #-8]
   132a8:	cmn	r3, #1
   132ac:	bne	132fc <__assert_fail@plt+0x1fdc>
   132b0:	ldr	r2, [fp, #-16]
   132b4:	ldr	r3, [fp, #-12]
   132b8:	cmp	r2, r3
   132bc:	beq	132d4 <__assert_fail@plt+0x1fb4>
   132c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   132c4:	bl	1117c <ferror_unlocked@plt>
   132c8:	mov	r3, r0
   132cc:	cmp	r3, #0
   132d0:	beq	132dc <__assert_fail@plt+0x1fbc>
   132d4:	mov	r3, #0
   132d8:	b	133b4 <__assert_fail@plt+0x2094>
   132dc:	ldr	r3, [fp, #-16]
   132e0:	sub	r3, r3, #1
   132e4:	ldrb	r3, [r3]
   132e8:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   132ec:	cmp	r2, r3
   132f0:	beq	13398 <__assert_fail@plt+0x2078>
   132f4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   132f8:	str	r3, [fp, #-8]
   132fc:	ldr	r2, [fp, #-16]
   13300:	ldr	r3, [fp, #-20]	; 0xffffffec
   13304:	cmp	r2, r3
   13308:	bne	1336c <__assert_fail@plt+0x204c>
   1330c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13310:	ldr	r3, [r3]
   13314:	str	r3, [fp, #-24]	; 0xffffffe8
   13318:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1331c:	mov	r3, #1
   13320:	str	r3, [sp]
   13324:	mvn	r3, #0
   13328:	mov	r2, #1
   1332c:	ldr	r0, [fp, #-12]
   13330:	bl	2f980 <__assert_fail@plt+0x1e660>
   13334:	str	r0, [fp, #-12]
   13338:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1333c:	ldr	r2, [fp, #-12]
   13340:	add	r3, r2, r3
   13344:	str	r3, [fp, #-16]
   13348:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1334c:	ldr	r2, [fp, #-12]
   13350:	str	r2, [r3, #8]
   13354:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13358:	ldr	r3, [r3]
   1335c:	mov	r2, r3
   13360:	ldr	r3, [fp, #-12]
   13364:	add	r3, r3, r2
   13368:	str	r3, [fp, #-20]	; 0xffffffec
   1336c:	ldr	r3, [fp, #-16]
   13370:	add	r2, r3, #1
   13374:	str	r2, [fp, #-16]
   13378:	ldr	r2, [fp, #-8]
   1337c:	uxtb	r2, r2
   13380:	strb	r2, [r3]
   13384:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   13388:	ldr	r3, [fp, #-8]
   1338c:	cmp	r2, r3
   13390:	bne	13298 <__assert_fail@plt+0x1f78>
   13394:	b	1339c <__assert_fail@plt+0x207c>
   13398:	nop			; (mov r0, r0)
   1339c:	ldr	r2, [fp, #-16]
   133a0:	ldr	r3, [fp, #-12]
   133a4:	sub	r2, r2, r3
   133a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   133ac:	str	r2, [r3, #4]
   133b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   133b4:	mov	r0, r3
   133b8:	sub	sp, fp, #4
   133bc:	pop	{fp, pc}
   133c0:	push	{fp, lr}
   133c4:	add	fp, sp, #4
   133c8:	sub	sp, sp, #8
   133cc:	str	r0, [fp, #-8]
   133d0:	ldr	r3, [fp, #-8]
   133d4:	ldr	r3, [r3, #8]
   133d8:	mov	r0, r3
   133dc:	bl	31500 <__assert_fail@plt+0x201e0>
   133e0:	nop			; (mov r0, r0)
   133e4:	sub	sp, fp, #4
   133e8:	pop	{fp, pc}
   133ec:	push	{fp, lr}
   133f0:	add	fp, sp, #4
   133f4:	sub	sp, sp, #16
   133f8:	str	r0, [fp, #-16]
   133fc:	ldr	r3, [fp, #-16]
   13400:	cmp	r3, #0
   13404:	bne	13424 <__assert_fail@plt+0x2104>
   13408:	ldr	r3, [pc, #220]	; 134ec <__assert_fail@plt+0x21cc>
   1340c:	ldr	r3, [r3]
   13410:	mov	r2, #55	; 0x37
   13414:	mov	r1, #1
   13418:	ldr	r0, [pc, #208]	; 134f0 <__assert_fail@plt+0x21d0>
   1341c:	bl	11140 <fwrite@plt>
   13420:	bl	112fc <abort@plt>
   13424:	mov	r1, #47	; 0x2f
   13428:	ldr	r0, [fp, #-16]
   1342c:	bl	112a8 <strrchr@plt>
   13430:	str	r0, [fp, #-8]
   13434:	ldr	r3, [fp, #-8]
   13438:	cmp	r3, #0
   1343c:	beq	1344c <__assert_fail@plt+0x212c>
   13440:	ldr	r3, [fp, #-8]
   13444:	add	r3, r3, #1
   13448:	b	13450 <__assert_fail@plt+0x2130>
   1344c:	ldr	r3, [fp, #-16]
   13450:	str	r3, [fp, #-12]
   13454:	ldr	r2, [fp, #-12]
   13458:	ldr	r3, [fp, #-16]
   1345c:	sub	r3, r2, r3
   13460:	cmp	r3, #6
   13464:	ble	134c8 <__assert_fail@plt+0x21a8>
   13468:	ldr	r3, [fp, #-12]
   1346c:	sub	r3, r3, #7
   13470:	mov	r2, #7
   13474:	ldr	r1, [pc, #120]	; 134f4 <__assert_fail@plt+0x21d4>
   13478:	mov	r0, r3
   1347c:	bl	112f0 <strncmp@plt>
   13480:	mov	r3, r0
   13484:	cmp	r3, #0
   13488:	bne	134c8 <__assert_fail@plt+0x21a8>
   1348c:	ldr	r3, [fp, #-12]
   13490:	str	r3, [fp, #-16]
   13494:	mov	r2, #3
   13498:	ldr	r1, [pc, #88]	; 134f8 <__assert_fail@plt+0x21d8>
   1349c:	ldr	r0, [fp, #-12]
   134a0:	bl	112f0 <strncmp@plt>
   134a4:	mov	r3, r0
   134a8:	cmp	r3, #0
   134ac:	bne	134c8 <__assert_fail@plt+0x21a8>
   134b0:	ldr	r3, [fp, #-12]
   134b4:	add	r3, r3, #3
   134b8:	str	r3, [fp, #-16]
   134bc:	ldr	r2, [pc, #56]	; 134fc <__assert_fail@plt+0x21dc>
   134c0:	ldr	r3, [fp, #-16]
   134c4:	str	r3, [r2]
   134c8:	ldr	r2, [pc, #48]	; 13500 <__assert_fail@plt+0x21e0>
   134cc:	ldr	r3, [fp, #-16]
   134d0:	str	r3, [r2]
   134d4:	ldr	r2, [pc, #40]	; 13504 <__assert_fail@plt+0x21e4>
   134d8:	ldr	r3, [fp, #-16]
   134dc:	str	r3, [r2]
   134e0:	nop			; (mov r0, r0)
   134e4:	sub	sp, fp, #4
   134e8:	pop	{fp, pc}
   134ec:	andeq	r4, r4, r8, asr #3
   134f0:	andeq	r3, r3, r8, lsl #6
   134f4:	andeq	r3, r3, r0, asr #6
   134f8:	andeq	r3, r3, r8, asr #6
   134fc:			; <UNDEFINED> instruction: 0x000441b8
   13500:	muleq	r4, r0, r5
   13504:			; <UNDEFINED> instruction: 0x000441bc
   13508:	push	{fp, lr}
   1350c:	add	fp, sp, #4
   13510:	sub	sp, sp, #16
   13514:	str	r0, [fp, #-16]
   13518:	bl	11224 <__errno_location@plt>
   1351c:	mov	r3, r0
   13520:	ldr	r3, [r3]
   13524:	str	r3, [fp, #-8]
   13528:	ldr	r3, [fp, #-16]
   1352c:	cmp	r3, #0
   13530:	beq	1353c <__assert_fail@plt+0x221c>
   13534:	ldr	r3, [fp, #-16]
   13538:	b	13540 <__assert_fail@plt+0x2220>
   1353c:	ldr	r3, [pc, #48]	; 13574 <__assert_fail@plt+0x2254>
   13540:	mov	r1, #48	; 0x30
   13544:	mov	r0, r3
   13548:	bl	2fff0 <__assert_fail@plt+0x1ecd0>
   1354c:	mov	r3, r0
   13550:	str	r3, [fp, #-12]
   13554:	bl	11224 <__errno_location@plt>
   13558:	mov	r2, r0
   1355c:	ldr	r3, [fp, #-8]
   13560:	str	r3, [r2]
   13564:	ldr	r3, [fp, #-12]
   13568:	mov	r0, r3
   1356c:	sub	sp, fp, #4
   13570:	pop	{fp, pc}
   13574:	muleq	r4, r4, r5
   13578:	push	{fp}		; (str fp, [sp, #-4]!)
   1357c:	add	fp, sp, #0
   13580:	sub	sp, sp, #12
   13584:	str	r0, [fp, #-8]
   13588:	ldr	r3, [fp, #-8]
   1358c:	cmp	r3, #0
   13590:	beq	1359c <__assert_fail@plt+0x227c>
   13594:	ldr	r3, [fp, #-8]
   13598:	b	135a0 <__assert_fail@plt+0x2280>
   1359c:	ldr	r3, [pc, #16]	; 135b4 <__assert_fail@plt+0x2294>
   135a0:	ldr	r3, [r3]
   135a4:	mov	r0, r3
   135a8:	add	sp, fp, #0
   135ac:	pop	{fp}		; (ldr fp, [sp], #4)
   135b0:	bx	lr
   135b4:	muleq	r4, r4, r5
   135b8:	push	{fp}		; (str fp, [sp, #-4]!)
   135bc:	add	fp, sp, #0
   135c0:	sub	sp, sp, #12
   135c4:	str	r0, [fp, #-8]
   135c8:	str	r1, [fp, #-12]
   135cc:	ldr	r3, [fp, #-8]
   135d0:	cmp	r3, #0
   135d4:	beq	135e0 <__assert_fail@plt+0x22c0>
   135d8:	ldr	r3, [fp, #-8]
   135dc:	b	135e4 <__assert_fail@plt+0x22c4>
   135e0:	ldr	r3, [pc, #20]	; 135fc <__assert_fail@plt+0x22dc>
   135e4:	ldr	r2, [fp, #-12]
   135e8:	str	r2, [r3]
   135ec:	nop			; (mov r0, r0)
   135f0:	add	sp, fp, #0
   135f4:	pop	{fp}		; (ldr fp, [sp], #4)
   135f8:	bx	lr
   135fc:	muleq	r4, r4, r5
   13600:	push	{fp}		; (str fp, [sp, #-4]!)
   13604:	add	fp, sp, #0
   13608:	sub	sp, sp, #36	; 0x24
   1360c:	str	r0, [fp, #-24]	; 0xffffffe8
   13610:	mov	r3, r1
   13614:	str	r2, [fp, #-32]	; 0xffffffe0
   13618:	strb	r3, [fp, #-25]	; 0xffffffe7
   1361c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   13620:	strb	r3, [fp, #-5]
   13624:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13628:	cmp	r3, #0
   1362c:	beq	13638 <__assert_fail@plt+0x2318>
   13630:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13634:	b	1363c <__assert_fail@plt+0x231c>
   13638:	ldr	r3, [pc, #124]	; 136bc <__assert_fail@plt+0x239c>
   1363c:	add	r2, r3, #8
   13640:	ldrb	r3, [fp, #-5]
   13644:	lsr	r3, r3, #5
   13648:	uxtb	r3, r3
   1364c:	lsl	r3, r3, #2
   13650:	add	r3, r2, r3
   13654:	str	r3, [fp, #-12]
   13658:	ldrb	r3, [fp, #-5]
   1365c:	and	r3, r3, #31
   13660:	str	r3, [fp, #-16]
   13664:	ldr	r3, [fp, #-12]
   13668:	ldr	r2, [r3]
   1366c:	ldr	r3, [fp, #-16]
   13670:	lsr	r3, r2, r3
   13674:	and	r3, r3, #1
   13678:	str	r3, [fp, #-20]	; 0xffffffec
   1367c:	ldr	r3, [fp, #-12]
   13680:	ldr	r3, [r3]
   13684:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13688:	and	r1, r2, #1
   1368c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13690:	eor	r1, r1, r2
   13694:	ldr	r2, [fp, #-16]
   13698:	lsl	r2, r1, r2
   1369c:	eor	r2, r2, r3
   136a0:	ldr	r3, [fp, #-12]
   136a4:	str	r2, [r3]
   136a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   136ac:	mov	r0, r3
   136b0:	add	sp, fp, #0
   136b4:	pop	{fp}		; (ldr fp, [sp], #4)
   136b8:	bx	lr
   136bc:	muleq	r4, r4, r5
   136c0:	push	{fp}		; (str fp, [sp, #-4]!)
   136c4:	add	fp, sp, #0
   136c8:	sub	sp, sp, #20
   136cc:	str	r0, [fp, #-16]
   136d0:	str	r1, [fp, #-20]	; 0xffffffec
   136d4:	ldr	r3, [fp, #-16]
   136d8:	cmp	r3, #0
   136dc:	bne	136e8 <__assert_fail@plt+0x23c8>
   136e0:	ldr	r3, [pc, #44]	; 13714 <__assert_fail@plt+0x23f4>
   136e4:	str	r3, [fp, #-16]
   136e8:	ldr	r3, [fp, #-16]
   136ec:	ldr	r3, [r3, #4]
   136f0:	str	r3, [fp, #-8]
   136f4:	ldr	r3, [fp, #-16]
   136f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   136fc:	str	r2, [r3, #4]
   13700:	ldr	r3, [fp, #-8]
   13704:	mov	r0, r3
   13708:	add	sp, fp, #0
   1370c:	pop	{fp}		; (ldr fp, [sp], #4)
   13710:	bx	lr
   13714:	muleq	r4, r4, r5
   13718:	push	{fp, lr}
   1371c:	add	fp, sp, #4
   13720:	sub	sp, sp, #16
   13724:	str	r0, [fp, #-8]
   13728:	str	r1, [fp, #-12]
   1372c:	str	r2, [fp, #-16]
   13730:	ldr	r3, [fp, #-8]
   13734:	cmp	r3, #0
   13738:	bne	13744 <__assert_fail@plt+0x2424>
   1373c:	ldr	r3, [pc, #76]	; 13790 <__assert_fail@plt+0x2470>
   13740:	str	r3, [fp, #-8]
   13744:	ldr	r3, [fp, #-8]
   13748:	mov	r2, #10
   1374c:	str	r2, [r3]
   13750:	ldr	r3, [fp, #-12]
   13754:	cmp	r3, #0
   13758:	beq	13768 <__assert_fail@plt+0x2448>
   1375c:	ldr	r3, [fp, #-16]
   13760:	cmp	r3, #0
   13764:	bne	1376c <__assert_fail@plt+0x244c>
   13768:	bl	112fc <abort@plt>
   1376c:	ldr	r3, [fp, #-8]
   13770:	ldr	r2, [fp, #-12]
   13774:	str	r2, [r3, #40]	; 0x28
   13778:	ldr	r3, [fp, #-8]
   1377c:	ldr	r2, [fp, #-16]
   13780:	str	r2, [r3, #44]	; 0x2c
   13784:	nop			; (mov r0, r0)
   13788:	sub	sp, fp, #4
   1378c:	pop	{fp, pc}
   13790:	muleq	r4, r4, r5
   13794:	push	{fp, lr}
   13798:	add	fp, sp, #4
   1379c:	sub	sp, sp, #56	; 0x38
   137a0:	str	r0, [fp, #-56]	; 0xffffffc8
   137a4:	str	r1, [fp, #-60]	; 0xffffffc4
   137a8:	sub	r3, fp, #52	; 0x34
   137ac:	mov	r2, #48	; 0x30
   137b0:	mov	r1, #0
   137b4:	mov	r0, r3
   137b8:	bl	11248 <memset@plt>
   137bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   137c0:	cmp	r3, #10
   137c4:	bne	137cc <__assert_fail@plt+0x24ac>
   137c8:	bl	112fc <abort@plt>
   137cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   137d0:	str	r3, [fp, #-52]	; 0xffffffcc
   137d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   137d8:	mov	lr, r3
   137dc:	sub	ip, fp, #52	; 0x34
   137e0:	ldm	ip!, {r0, r1, r2, r3}
   137e4:	stmia	lr!, {r0, r1, r2, r3}
   137e8:	ldm	ip!, {r0, r1, r2, r3}
   137ec:	stmia	lr!, {r0, r1, r2, r3}
   137f0:	ldm	ip, {r0, r1, r2, r3}
   137f4:	stm	lr, {r0, r1, r2, r3}
   137f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   137fc:	sub	sp, fp, #4
   13800:	pop	{fp, pc}
   13804:	push	{fp, lr}
   13808:	add	fp, sp, #4
   1380c:	sub	sp, sp, #16
   13810:	str	r0, [fp, #-16]
   13814:	str	r1, [fp, #-20]	; 0xffffffec
   13818:	ldr	r0, [fp, #-16]
   1381c:	bl	111f4 <gettext@plt>
   13820:	str	r0, [fp, #-8]
   13824:	ldr	r2, [fp, #-8]
   13828:	ldr	r3, [fp, #-16]
   1382c:	cmp	r2, r3
   13830:	beq	1383c <__assert_fail@plt+0x251c>
   13834:	ldr	r3, [fp, #-8]
   13838:	b	138cc <__assert_fail@plt+0x25ac>
   1383c:	bl	316c8 <__assert_fail@plt+0x203a8>
   13840:	str	r0, [fp, #-12]
   13844:	ldr	r1, [pc, #140]	; 138d8 <__assert_fail@plt+0x25b8>
   13848:	ldr	r0, [fp, #-12]
   1384c:	bl	30e94 <__assert_fail@plt+0x1fb74>
   13850:	mov	r3, r0
   13854:	cmp	r3, #0
   13858:	bne	1387c <__assert_fail@plt+0x255c>
   1385c:	ldr	r3, [fp, #-16]
   13860:	ldrb	r3, [r3]
   13864:	cmp	r3, #96	; 0x60
   13868:	bne	13874 <__assert_fail@plt+0x2554>
   1386c:	ldr	r3, [pc, #104]	; 138dc <__assert_fail@plt+0x25bc>
   13870:	b	138cc <__assert_fail@plt+0x25ac>
   13874:	ldr	r3, [pc, #100]	; 138e0 <__assert_fail@plt+0x25c0>
   13878:	b	138cc <__assert_fail@plt+0x25ac>
   1387c:	ldr	r1, [pc, #96]	; 138e4 <__assert_fail@plt+0x25c4>
   13880:	ldr	r0, [fp, #-12]
   13884:	bl	30e94 <__assert_fail@plt+0x1fb74>
   13888:	mov	r3, r0
   1388c:	cmp	r3, #0
   13890:	bne	138b4 <__assert_fail@plt+0x2594>
   13894:	ldr	r3, [fp, #-16]
   13898:	ldrb	r3, [r3]
   1389c:	cmp	r3, #96	; 0x60
   138a0:	bne	138ac <__assert_fail@plt+0x258c>
   138a4:	ldr	r3, [pc, #60]	; 138e8 <__assert_fail@plt+0x25c8>
   138a8:	b	138cc <__assert_fail@plt+0x25ac>
   138ac:	ldr	r3, [pc, #56]	; 138ec <__assert_fail@plt+0x25cc>
   138b0:	b	138cc <__assert_fail@plt+0x25ac>
   138b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   138b8:	cmp	r3, #9
   138bc:	bne	138c8 <__assert_fail@plt+0x25a8>
   138c0:	ldr	r3, [pc, #40]	; 138f0 <__assert_fail@plt+0x25d0>
   138c4:	b	138cc <__assert_fail@plt+0x25ac>
   138c8:	ldr	r3, [pc, #36]	; 138f4 <__assert_fail@plt+0x25d4>
   138cc:	mov	r0, r3
   138d0:	sub	sp, fp, #4
   138d4:	pop	{fp, pc}
   138d8:	andeq	r3, r3, r8, lsl #8
   138dc:	andeq	r3, r3, r0, lsl r4
   138e0:	andeq	r3, r3, r4, lsl r4
   138e4:	andeq	r3, r3, r8, lsl r4
   138e8:	andeq	r3, r3, r0, lsr #8
   138ec:	andeq	r3, r3, r4, lsr #8
   138f0:	andeq	r3, r3, r8, lsr #8
   138f4:	andeq	r3, r3, ip, lsr #8
   138f8:	push	{r4, fp, lr}
   138fc:	add	fp, sp, #8
   13900:	sub	sp, sp, #116	; 0x74
   13904:	str	r0, [fp, #-88]	; 0xffffffa8
   13908:	str	r1, [fp, #-92]	; 0xffffffa4
   1390c:	str	r2, [fp, #-96]	; 0xffffffa0
   13910:	str	r3, [fp, #-100]	; 0xffffff9c
   13914:	mov	r3, #0
   13918:	str	r3, [fp, #-20]	; 0xffffffec
   1391c:	mov	r3, #0
   13920:	str	r3, [fp, #-24]	; 0xffffffe8
   13924:	mov	r3, #0
   13928:	str	r3, [fp, #-28]	; 0xffffffe4
   1392c:	mov	r3, #0
   13930:	str	r3, [fp, #-32]	; 0xffffffe0
   13934:	mov	r3, #0
   13938:	strb	r3, [fp, #-33]	; 0xffffffdf
   1393c:	bl	11158 <__ctype_get_mb_cur_max@plt>
   13940:	mov	r3, r0
   13944:	cmp	r3, #1
   13948:	moveq	r3, #1
   1394c:	movne	r3, #0
   13950:	strb	r3, [fp, #-57]	; 0xffffffc7
   13954:	ldr	r3, [fp, #8]
   13958:	and	r3, r3, #2
   1395c:	cmp	r3, #0
   13960:	movne	r3, #1
   13964:	moveq	r3, #0
   13968:	strb	r3, [fp, #-34]	; 0xffffffde
   1396c:	mov	r3, #0
   13970:	strb	r3, [fp, #-35]	; 0xffffffdd
   13974:	mov	r3, #0
   13978:	strb	r3, [fp, #-36]	; 0xffffffdc
   1397c:	mov	r3, #1
   13980:	strb	r3, [fp, #-37]	; 0xffffffdb
   13984:	ldr	r3, [fp, #4]
   13988:	cmp	r3, #10
   1398c:	ldrls	pc, [pc, r3, lsl #2]
   13990:	b	13b98 <__assert_fail@plt+0x2878>
   13994:	andeq	r3, r1, ip, lsl #23
   13998:	andeq	r3, r1, r8, lsl #22
   1399c:	andeq	r3, r1, ip, lsr #22
   139a0:	andeq	r3, r1, r0, lsl #22
   139a4:	andeq	r3, r1, r0, lsl fp
   139a8:	ldrdeq	r3, [r1], -r0
   139ac:	andeq	r3, r1, r0, asr #19
   139b0:	andeq	r3, r1, r0, lsr sl
   139b4:	andeq	r3, r1, r4, asr #20
   139b8:	andeq	r3, r1, r4, asr #20
   139bc:	andeq	r3, r1, r4, asr #20
   139c0:	mov	r3, #5
   139c4:	str	r3, [fp, #4]
   139c8:	mov	r3, #1
   139cc:	strb	r3, [fp, #-34]	; 0xffffffde
   139d0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   139d4:	eor	r3, r3, #1
   139d8:	uxtb	r3, r3
   139dc:	cmp	r3, #0
   139e0:	beq	13a14 <__assert_fail@plt+0x26f4>
   139e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   139e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   139ec:	cmp	r2, r3
   139f0:	bcs	13a08 <__assert_fail@plt+0x26e8>
   139f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   139f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   139fc:	add	r3, r2, r3
   13a00:	mov	r2, #34	; 0x22
   13a04:	strb	r2, [r3]
   13a08:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a0c:	add	r3, r3, #1
   13a10:	str	r3, [fp, #-20]	; 0xffffffec
   13a14:	mov	r3, #1
   13a18:	strb	r3, [fp, #-33]	; 0xffffffdf
   13a1c:	ldr	r3, [pc, #3872]	; 14944 <__assert_fail@plt+0x3624>
   13a20:	str	r3, [fp, #-28]	; 0xffffffe4
   13a24:	mov	r3, #1
   13a28:	str	r3, [fp, #-32]	; 0xffffffe0
   13a2c:	b	13b9c <__assert_fail@plt+0x287c>
   13a30:	mov	r3, #1
   13a34:	strb	r3, [fp, #-33]	; 0xffffffdf
   13a38:	mov	r3, #0
   13a3c:	strb	r3, [fp, #-34]	; 0xffffffde
   13a40:	b	13b9c <__assert_fail@plt+0x287c>
   13a44:	ldr	r3, [fp, #4]
   13a48:	cmp	r3, #10
   13a4c:	beq	13a70 <__assert_fail@plt+0x2750>
   13a50:	ldr	r1, [fp, #4]
   13a54:	ldr	r0, [pc, #3820]	; 14948 <__assert_fail@plt+0x3628>
   13a58:	bl	13804 <__assert_fail@plt+0x24e4>
   13a5c:	str	r0, [fp, #16]
   13a60:	ldr	r1, [fp, #4]
   13a64:	ldr	r0, [pc, #3808]	; 1494c <__assert_fail@plt+0x362c>
   13a68:	bl	13804 <__assert_fail@plt+0x24e4>
   13a6c:	str	r0, [fp, #20]
   13a70:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13a74:	eor	r3, r3, #1
   13a78:	uxtb	r3, r3
   13a7c:	cmp	r3, #0
   13a80:	beq	13ae0 <__assert_fail@plt+0x27c0>
   13a84:	ldr	r3, [fp, #16]
   13a88:	str	r3, [fp, #-28]	; 0xffffffe4
   13a8c:	b	13ad0 <__assert_fail@plt+0x27b0>
   13a90:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a94:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13a98:	cmp	r2, r3
   13a9c:	bcs	13ab8 <__assert_fail@plt+0x2798>
   13aa0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13aa8:	add	r3, r2, r3
   13aac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13ab0:	ldrb	r2, [r2]
   13ab4:	strb	r2, [r3]
   13ab8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13abc:	add	r3, r3, #1
   13ac0:	str	r3, [fp, #-20]	; 0xffffffec
   13ac4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ac8:	add	r3, r3, #1
   13acc:	str	r3, [fp, #-28]	; 0xffffffe4
   13ad0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ad4:	ldrb	r3, [r3]
   13ad8:	cmp	r3, #0
   13adc:	bne	13a90 <__assert_fail@plt+0x2770>
   13ae0:	mov	r3, #1
   13ae4:	strb	r3, [fp, #-33]	; 0xffffffdf
   13ae8:	ldr	r3, [fp, #20]
   13aec:	str	r3, [fp, #-28]	; 0xffffffe4
   13af0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13af4:	bl	11200 <strlen@plt>
   13af8:	str	r0, [fp, #-32]	; 0xffffffe0
   13afc:	b	13b9c <__assert_fail@plt+0x287c>
   13b00:	mov	r3, #1
   13b04:	strb	r3, [fp, #-33]	; 0xffffffdf
   13b08:	mov	r3, #1
   13b0c:	strb	r3, [fp, #-34]	; 0xffffffde
   13b10:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13b14:	eor	r3, r3, #1
   13b18:	uxtb	r3, r3
   13b1c:	cmp	r3, #0
   13b20:	beq	13b2c <__assert_fail@plt+0x280c>
   13b24:	mov	r3, #1
   13b28:	strb	r3, [fp, #-33]	; 0xffffffdf
   13b2c:	mov	r3, #2
   13b30:	str	r3, [fp, #4]
   13b34:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13b38:	eor	r3, r3, #1
   13b3c:	uxtb	r3, r3
   13b40:	cmp	r3, #0
   13b44:	beq	13b78 <__assert_fail@plt+0x2858>
   13b48:	ldr	r2, [fp, #-20]	; 0xffffffec
   13b4c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13b50:	cmp	r2, r3
   13b54:	bcs	13b6c <__assert_fail@plt+0x284c>
   13b58:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13b5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b60:	add	r3, r2, r3
   13b64:	mov	r2, #39	; 0x27
   13b68:	strb	r2, [r3]
   13b6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b70:	add	r3, r3, #1
   13b74:	str	r3, [fp, #-20]	; 0xffffffec
   13b78:	ldr	r3, [pc, #3532]	; 1494c <__assert_fail@plt+0x362c>
   13b7c:	str	r3, [fp, #-28]	; 0xffffffe4
   13b80:	mov	r3, #1
   13b84:	str	r3, [fp, #-32]	; 0xffffffe0
   13b88:	b	13b9c <__assert_fail@plt+0x287c>
   13b8c:	mov	r3, #0
   13b90:	strb	r3, [fp, #-34]	; 0xffffffde
   13b94:	b	13b9c <__assert_fail@plt+0x287c>
   13b98:	bl	112fc <abort@plt>
   13b9c:	mov	r3, #0
   13ba0:	str	r3, [fp, #-16]
   13ba4:	b	14d34 <__assert_fail@plt+0x3a14>
   13ba8:	mov	r3, #0
   13bac:	strb	r3, [fp, #-40]	; 0xffffffd8
   13bb0:	mov	r3, #0
   13bb4:	strb	r3, [fp, #-41]	; 0xffffffd7
   13bb8:	mov	r3, #0
   13bbc:	strb	r3, [fp, #-42]	; 0xffffffd6
   13bc0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13bc4:	cmp	r3, #0
   13bc8:	beq	13c64 <__assert_fail@plt+0x2944>
   13bcc:	ldr	r3, [fp, #4]
   13bd0:	cmp	r3, #2
   13bd4:	beq	13c64 <__assert_fail@plt+0x2944>
   13bd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13bdc:	cmp	r3, #0
   13be0:	beq	13c64 <__assert_fail@plt+0x2944>
   13be4:	ldr	r2, [fp, #-16]
   13be8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13bec:	add	r4, r2, r3
   13bf0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13bf4:	cmn	r3, #1
   13bf8:	bne	13c1c <__assert_fail@plt+0x28fc>
   13bfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c00:	cmp	r3, #1
   13c04:	bls	13c1c <__assert_fail@plt+0x28fc>
   13c08:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13c0c:	bl	11200 <strlen@plt>
   13c10:	str	r0, [fp, #-100]	; 0xffffff9c
   13c14:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13c18:	b	13c20 <__assert_fail@plt+0x2900>
   13c1c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13c20:	cmp	r4, r3
   13c24:	bhi	13c64 <__assert_fail@plt+0x2944>
   13c28:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13c2c:	ldr	r3, [fp, #-16]
   13c30:	add	r3, r2, r3
   13c34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13c38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c3c:	mov	r0, r3
   13c40:	bl	110ec <memcmp@plt>
   13c44:	mov	r3, r0
   13c48:	cmp	r3, #0
   13c4c:	bne	13c64 <__assert_fail@plt+0x2944>
   13c50:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13c54:	cmp	r3, #0
   13c58:	bne	14ef0 <__assert_fail@plt+0x3bd0>
   13c5c:	mov	r3, #1
   13c60:	strb	r3, [fp, #-40]	; 0xffffffd8
   13c64:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13c68:	ldr	r3, [fp, #-16]
   13c6c:	add	r3, r2, r3
   13c70:	ldrb	r3, [r3]
   13c74:	strb	r3, [fp, #-38]	; 0xffffffda
   13c78:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13c7c:	cmp	r3, #126	; 0x7e
   13c80:	ldrls	pc, [pc, r3, lsl #2]
   13c84:	b	144b0 <__assert_fail@plt+0x3190>
   13c88:	andeq	r3, r1, r4, lsl #29
   13c8c:			; <UNDEFINED> instruction: 0x000144b0
   13c90:			; <UNDEFINED> instruction: 0x000144b0
   13c94:			; <UNDEFINED> instruction: 0x000144b0
   13c98:			; <UNDEFINED> instruction: 0x000144b0
   13c9c:			; <UNDEFINED> instruction: 0x000144b0
   13ca0:			; <UNDEFINED> instruction: 0x000144b0
   13ca4:	andeq	r4, r1, r4, ror r2
   13ca8:	andeq	r4, r1, r0, lsl #5
   13cac:			; <UNDEFINED> instruction: 0x000142b0
   13cb0:	muleq	r1, r8, r2
   13cb4:			; <UNDEFINED> instruction: 0x000142bc
   13cb8:	andeq	r4, r1, ip, lsl #5
   13cbc:	andeq	r4, r1, r4, lsr #5
   13cc0:			; <UNDEFINED> instruction: 0x000144b0
   13cc4:			; <UNDEFINED> instruction: 0x000144b0
   13cc8:			; <UNDEFINED> instruction: 0x000144b0
   13ccc:			; <UNDEFINED> instruction: 0x000144b0
   13cd0:			; <UNDEFINED> instruction: 0x000144b0
   13cd4:			; <UNDEFINED> instruction: 0x000144b0
   13cd8:			; <UNDEFINED> instruction: 0x000144b0
   13cdc:			; <UNDEFINED> instruction: 0x000144b0
   13ce0:			; <UNDEFINED> instruction: 0x000144b0
   13ce4:			; <UNDEFINED> instruction: 0x000144b0
   13ce8:			; <UNDEFINED> instruction: 0x000144b0
   13cec:			; <UNDEFINED> instruction: 0x000144b0
   13cf0:			; <UNDEFINED> instruction: 0x000144b0
   13cf4:			; <UNDEFINED> instruction: 0x000144b0
   13cf8:			; <UNDEFINED> instruction: 0x000144b0
   13cfc:			; <UNDEFINED> instruction: 0x000144b0
   13d00:			; <UNDEFINED> instruction: 0x000144b0
   13d04:			; <UNDEFINED> instruction: 0x000144b0
   13d08:	muleq	r1, r4, r3
   13d0c:	muleq	r1, ip, r3
   13d10:	muleq	r1, ip, r3
   13d14:	andeq	r4, r1, r8, lsl #7
   13d18:	muleq	r1, ip, r3
   13d1c:	andeq	r4, r1, r4, lsr #9
   13d20:	muleq	r1, ip, r3
   13d24:			; <UNDEFINED> instruction: 0x000143b8
   13d28:	muleq	r1, ip, r3
   13d2c:	muleq	r1, ip, r3
   13d30:	muleq	r1, ip, r3
   13d34:	andeq	r4, r1, r4, lsr #9
   13d38:	andeq	r4, r1, r4, lsr #9
   13d3c:	andeq	r4, r1, r4, lsr #9
   13d40:	andeq	r4, r1, r4, lsr #9
   13d44:	andeq	r4, r1, r4, lsr #9
   13d48:	andeq	r4, r1, r4, lsr #9
   13d4c:	andeq	r4, r1, r4, lsr #9
   13d50:	andeq	r4, r1, r4, lsr #9
   13d54:	andeq	r4, r1, r4, lsr #9
   13d58:	andeq	r4, r1, r4, lsr #9
   13d5c:	andeq	r4, r1, r4, lsr #9
   13d60:	andeq	r4, r1, r4, lsr #9
   13d64:	andeq	r4, r1, r4, lsr #9
   13d68:	andeq	r4, r1, r4, lsr #9
   13d6c:	andeq	r4, r1, r4, lsr #9
   13d70:	andeq	r4, r1, r4, lsr #9
   13d74:	muleq	r1, ip, r3
   13d78:	muleq	r1, ip, r3
   13d7c:	muleq	r1, ip, r3
   13d80:	muleq	r1, ip, r3
   13d84:	andeq	r4, r1, r4, rrx
   13d88:			; <UNDEFINED> instruction: 0x000144b0
   13d8c:	andeq	r4, r1, r4, lsr #9
   13d90:	andeq	r4, r1, r4, lsr #9
   13d94:	andeq	r4, r1, r4, lsr #9
   13d98:	andeq	r4, r1, r4, lsr #9
   13d9c:	andeq	r4, r1, r4, lsr #9
   13da0:	andeq	r4, r1, r4, lsr #9
   13da4:	andeq	r4, r1, r4, lsr #9
   13da8:	andeq	r4, r1, r4, lsr #9
   13dac:	andeq	r4, r1, r4, lsr #9
   13db0:	andeq	r4, r1, r4, lsr #9
   13db4:	andeq	r4, r1, r4, lsr #9
   13db8:	andeq	r4, r1, r4, lsr #9
   13dbc:	andeq	r4, r1, r4, lsr #9
   13dc0:	andeq	r4, r1, r4, lsr #9
   13dc4:	andeq	r4, r1, r4, lsr #9
   13dc8:	andeq	r4, r1, r4, lsr #9
   13dcc:	andeq	r4, r1, r4, lsr #9
   13dd0:	andeq	r4, r1, r4, lsr #9
   13dd4:	andeq	r4, r1, r4, lsr #9
   13dd8:	andeq	r4, r1, r4, lsr #9
   13ddc:	andeq	r4, r1, r4, lsr #9
   13de0:	andeq	r4, r1, r4, lsr #9
   13de4:	andeq	r4, r1, r4, lsr #9
   13de8:	andeq	r4, r1, r4, lsr #9
   13dec:	andeq	r4, r1, r4, lsr #9
   13df0:	andeq	r4, r1, r4, lsr #9
   13df4:	muleq	r1, ip, r3
   13df8:	andeq	r4, r1, r8, asr #5
   13dfc:	andeq	r4, r1, r4, lsr #9
   13e00:	muleq	r1, ip, r3
   13e04:	andeq	r4, r1, r4, lsr #9
   13e08:	muleq	r1, ip, r3
   13e0c:	andeq	r4, r1, r4, lsr #9
   13e10:	andeq	r4, r1, r4, lsr #9
   13e14:	andeq	r4, r1, r4, lsr #9
   13e18:	andeq	r4, r1, r4, lsr #9
   13e1c:	andeq	r4, r1, r4, lsr #9
   13e20:	andeq	r4, r1, r4, lsr #9
   13e24:	andeq	r4, r1, r4, lsr #9
   13e28:	andeq	r4, r1, r4, lsr #9
   13e2c:	andeq	r4, r1, r4, lsr #9
   13e30:	andeq	r4, r1, r4, lsr #9
   13e34:	andeq	r4, r1, r4, lsr #9
   13e38:	andeq	r4, r1, r4, lsr #9
   13e3c:	andeq	r4, r1, r4, lsr #9
   13e40:	andeq	r4, r1, r4, lsr #9
   13e44:	andeq	r4, r1, r4, lsr #9
   13e48:	andeq	r4, r1, r4, lsr #9
   13e4c:	andeq	r4, r1, r4, lsr #9
   13e50:	andeq	r4, r1, r4, lsr #9
   13e54:	andeq	r4, r1, r4, lsr #9
   13e58:	andeq	r4, r1, r4, lsr #9
   13e5c:	andeq	r4, r1, r4, lsr #9
   13e60:	andeq	r4, r1, r4, lsr #9
   13e64:	andeq	r4, r1, r4, lsr #9
   13e68:	andeq	r4, r1, r4, lsr #9
   13e6c:	andeq	r4, r1, r4, lsr #9
   13e70:	andeq	r4, r1, r4, lsr #9
   13e74:	andeq	r4, r1, r0, asr #6
   13e78:	muleq	r1, ip, r3
   13e7c:	andeq	r4, r1, r0, asr #6
   13e80:	andeq	r4, r1, r8, lsl #7
   13e84:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13e88:	cmp	r3, #0
   13e8c:	beq	14050 <__assert_fail@plt+0x2d30>
   13e90:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13e94:	cmp	r3, #0
   13e98:	bne	14ef8 <__assert_fail@plt+0x3bd8>
   13e9c:	mov	r3, #1
   13ea0:	strb	r3, [fp, #-41]	; 0xffffffd7
   13ea4:	ldr	r3, [fp, #4]
   13ea8:	cmp	r3, #2
   13eac:	bne	13f5c <__assert_fail@plt+0x2c3c>
   13eb0:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   13eb4:	eor	r3, r3, #1
   13eb8:	uxtb	r3, r3
   13ebc:	cmp	r3, #0
   13ec0:	beq	13f5c <__assert_fail@plt+0x2c3c>
   13ec4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ec8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13ecc:	cmp	r2, r3
   13ed0:	bcs	13ee8 <__assert_fail@plt+0x2bc8>
   13ed4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13ed8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13edc:	add	r3, r2, r3
   13ee0:	mov	r2, #39	; 0x27
   13ee4:	strb	r2, [r3]
   13ee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13eec:	add	r3, r3, #1
   13ef0:	str	r3, [fp, #-20]	; 0xffffffec
   13ef4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ef8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13efc:	cmp	r2, r3
   13f00:	bcs	13f18 <__assert_fail@plt+0x2bf8>
   13f04:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13f08:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f0c:	add	r3, r2, r3
   13f10:	mov	r2, #36	; 0x24
   13f14:	strb	r2, [r3]
   13f18:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f1c:	add	r3, r3, #1
   13f20:	str	r3, [fp, #-20]	; 0xffffffec
   13f24:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13f2c:	cmp	r2, r3
   13f30:	bcs	13f48 <__assert_fail@plt+0x2c28>
   13f34:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13f38:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f3c:	add	r3, r2, r3
   13f40:	mov	r2, #39	; 0x27
   13f44:	strb	r2, [r3]
   13f48:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f4c:	add	r3, r3, #1
   13f50:	str	r3, [fp, #-20]	; 0xffffffec
   13f54:	mov	r3, #1
   13f58:	strb	r3, [fp, #-35]	; 0xffffffdd
   13f5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f60:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13f64:	cmp	r2, r3
   13f68:	bcs	13f80 <__assert_fail@plt+0x2c60>
   13f6c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13f70:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f74:	add	r3, r2, r3
   13f78:	mov	r2, #92	; 0x5c
   13f7c:	strb	r2, [r3]
   13f80:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f84:	add	r3, r3, #1
   13f88:	str	r3, [fp, #-20]	; 0xffffffec
   13f8c:	ldr	r3, [fp, #4]
   13f90:	cmp	r3, #2
   13f94:	beq	14044 <__assert_fail@plt+0x2d24>
   13f98:	ldr	r3, [fp, #-16]
   13f9c:	add	r2, r3, #1
   13fa0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13fa4:	cmp	r2, r3
   13fa8:	bcs	14044 <__assert_fail@plt+0x2d24>
   13fac:	ldr	r3, [fp, #-16]
   13fb0:	add	r3, r3, #1
   13fb4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13fb8:	add	r3, r2, r3
   13fbc:	ldrb	r3, [r3]
   13fc0:	cmp	r3, #47	; 0x2f
   13fc4:	bls	14044 <__assert_fail@plt+0x2d24>
   13fc8:	ldr	r3, [fp, #-16]
   13fcc:	add	r3, r3, #1
   13fd0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13fd4:	add	r3, r2, r3
   13fd8:	ldrb	r3, [r3]
   13fdc:	cmp	r3, #57	; 0x39
   13fe0:	bhi	14044 <__assert_fail@plt+0x2d24>
   13fe4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13fe8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13fec:	cmp	r2, r3
   13ff0:	bcs	14008 <__assert_fail@plt+0x2ce8>
   13ff4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13ff8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ffc:	add	r3, r2, r3
   14000:	mov	r2, #48	; 0x30
   14004:	strb	r2, [r3]
   14008:	ldr	r3, [fp, #-20]	; 0xffffffec
   1400c:	add	r3, r3, #1
   14010:	str	r3, [fp, #-20]	; 0xffffffec
   14014:	ldr	r2, [fp, #-20]	; 0xffffffec
   14018:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1401c:	cmp	r2, r3
   14020:	bcs	14038 <__assert_fail@plt+0x2d18>
   14024:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14028:	ldr	r3, [fp, #-20]	; 0xffffffec
   1402c:	add	r3, r2, r3
   14030:	mov	r2, #48	; 0x30
   14034:	strb	r2, [r3]
   14038:	ldr	r3, [fp, #-20]	; 0xffffffec
   1403c:	add	r3, r3, #1
   14040:	str	r3, [fp, #-20]	; 0xffffffec
   14044:	mov	r3, #48	; 0x30
   14048:	strb	r3, [fp, #-38]	; 0xffffffda
   1404c:	b	14a8c <__assert_fail@plt+0x376c>
   14050:	ldr	r3, [fp, #8]
   14054:	and	r3, r3, #1
   14058:	cmp	r3, #0
   1405c:	beq	14a8c <__assert_fail@plt+0x376c>
   14060:	b	14d28 <__assert_fail@plt+0x3a08>
   14064:	ldr	r3, [fp, #4]
   14068:	cmp	r3, #2
   1406c:	beq	1407c <__assert_fail@plt+0x2d5c>
   14070:	cmp	r3, #5
   14074:	beq	1408c <__assert_fail@plt+0x2d6c>
   14078:	b	14270 <__assert_fail@plt+0x2f50>
   1407c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14080:	cmp	r3, #0
   14084:	beq	14264 <__assert_fail@plt+0x2f44>
   14088:	b	14f34 <__assert_fail@plt+0x3c14>
   1408c:	ldr	r3, [fp, #8]
   14090:	and	r3, r3, #4
   14094:	cmp	r3, #0
   14098:	beq	1426c <__assert_fail@plt+0x2f4c>
   1409c:	ldr	r3, [fp, #-16]
   140a0:	add	r2, r3, #2
   140a4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   140a8:	cmp	r2, r3
   140ac:	bcs	1426c <__assert_fail@plt+0x2f4c>
   140b0:	ldr	r3, [fp, #-16]
   140b4:	add	r3, r3, #1
   140b8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   140bc:	add	r3, r2, r3
   140c0:	ldrb	r3, [r3]
   140c4:	cmp	r3, #63	; 0x3f
   140c8:	bne	1426c <__assert_fail@plt+0x2f4c>
   140cc:	ldr	r3, [fp, #-16]
   140d0:	add	r3, r3, #2
   140d4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   140d8:	add	r3, r2, r3
   140dc:	ldrb	r3, [r3]
   140e0:	sub	r3, r3, #33	; 0x21
   140e4:	cmp	r3, #29
   140e8:	ldrls	pc, [pc, r3, lsl #2]
   140ec:	b	1425c <__assert_fail@plt+0x2f3c>
   140f0:	andeq	r4, r1, r8, ror #2
   140f4:	andeq	r4, r1, ip, asr r2
   140f8:	andeq	r4, r1, ip, asr r2
   140fc:	andeq	r4, r1, ip, asr r2
   14100:	andeq	r4, r1, ip, asr r2
   14104:	andeq	r4, r1, ip, asr r2
   14108:	andeq	r4, r1, r8, ror #2
   1410c:	andeq	r4, r1, r8, ror #2
   14110:	andeq	r4, r1, r8, ror #2
   14114:	andeq	r4, r1, ip, asr r2
   14118:	andeq	r4, r1, ip, asr r2
   1411c:	andeq	r4, r1, ip, asr r2
   14120:	andeq	r4, r1, r8, ror #2
   14124:	andeq	r4, r1, ip, asr r2
   14128:	andeq	r4, r1, r8, ror #2
   1412c:	andeq	r4, r1, ip, asr r2
   14130:	andeq	r4, r1, ip, asr r2
   14134:	andeq	r4, r1, ip, asr r2
   14138:	andeq	r4, r1, ip, asr r2
   1413c:	andeq	r4, r1, ip, asr r2
   14140:	andeq	r4, r1, ip, asr r2
   14144:	andeq	r4, r1, ip, asr r2
   14148:	andeq	r4, r1, ip, asr r2
   1414c:	andeq	r4, r1, ip, asr r2
   14150:	andeq	r4, r1, ip, asr r2
   14154:	andeq	r4, r1, ip, asr r2
   14158:	andeq	r4, r1, ip, asr r2
   1415c:	andeq	r4, r1, r8, ror #2
   14160:	andeq	r4, r1, r8, ror #2
   14164:	andeq	r4, r1, r8, ror #2
   14168:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1416c:	cmp	r3, #0
   14170:	bne	14f00 <__assert_fail@plt+0x3be0>
   14174:	ldr	r3, [fp, #-16]
   14178:	add	r3, r3, #2
   1417c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14180:	add	r3, r2, r3
   14184:	ldrb	r3, [r3]
   14188:	strb	r3, [fp, #-38]	; 0xffffffda
   1418c:	ldr	r3, [fp, #-16]
   14190:	add	r3, r3, #2
   14194:	str	r3, [fp, #-16]
   14198:	ldr	r2, [fp, #-20]	; 0xffffffec
   1419c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   141a0:	cmp	r2, r3
   141a4:	bcs	141bc <__assert_fail@plt+0x2e9c>
   141a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   141ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   141b0:	add	r3, r2, r3
   141b4:	mov	r2, #63	; 0x3f
   141b8:	strb	r2, [r3]
   141bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   141c0:	add	r3, r3, #1
   141c4:	str	r3, [fp, #-20]	; 0xffffffec
   141c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   141cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   141d0:	cmp	r2, r3
   141d4:	bcs	141ec <__assert_fail@plt+0x2ecc>
   141d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   141dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   141e0:	add	r3, r2, r3
   141e4:	mov	r2, #34	; 0x22
   141e8:	strb	r2, [r3]
   141ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   141f0:	add	r3, r3, #1
   141f4:	str	r3, [fp, #-20]	; 0xffffffec
   141f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   141fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14200:	cmp	r2, r3
   14204:	bcs	1421c <__assert_fail@plt+0x2efc>
   14208:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1420c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14210:	add	r3, r2, r3
   14214:	mov	r2, #34	; 0x22
   14218:	strb	r2, [r3]
   1421c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14220:	add	r3, r3, #1
   14224:	str	r3, [fp, #-20]	; 0xffffffec
   14228:	ldr	r2, [fp, #-20]	; 0xffffffec
   1422c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14230:	cmp	r2, r3
   14234:	bcs	1424c <__assert_fail@plt+0x2f2c>
   14238:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1423c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14240:	add	r3, r2, r3
   14244:	mov	r2, #63	; 0x3f
   14248:	strb	r2, [r3]
   1424c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14250:	add	r3, r3, #1
   14254:	str	r3, [fp, #-20]	; 0xffffffec
   14258:	b	14260 <__assert_fail@plt+0x2f40>
   1425c:	nop			; (mov r0, r0)
   14260:	b	1426c <__assert_fail@plt+0x2f4c>
   14264:	nop			; (mov r0, r0)
   14268:	b	14ab8 <__assert_fail@plt+0x3798>
   1426c:	nop			; (mov r0, r0)
   14270:	b	14ab8 <__assert_fail@plt+0x3798>
   14274:	mov	r3, #97	; 0x61
   14278:	strb	r3, [fp, #-39]	; 0xffffffd9
   1427c:	b	14328 <__assert_fail@plt+0x3008>
   14280:	mov	r3, #98	; 0x62
   14284:	strb	r3, [fp, #-39]	; 0xffffffd9
   14288:	b	14328 <__assert_fail@plt+0x3008>
   1428c:	mov	r3, #102	; 0x66
   14290:	strb	r3, [fp, #-39]	; 0xffffffd9
   14294:	b	14328 <__assert_fail@plt+0x3008>
   14298:	mov	r3, #110	; 0x6e
   1429c:	strb	r3, [fp, #-39]	; 0xffffffd9
   142a0:	b	14310 <__assert_fail@plt+0x2ff0>
   142a4:	mov	r3, #114	; 0x72
   142a8:	strb	r3, [fp, #-39]	; 0xffffffd9
   142ac:	b	14310 <__assert_fail@plt+0x2ff0>
   142b0:	mov	r3, #116	; 0x74
   142b4:	strb	r3, [fp, #-39]	; 0xffffffd9
   142b8:	b	14310 <__assert_fail@plt+0x2ff0>
   142bc:	mov	r3, #118	; 0x76
   142c0:	strb	r3, [fp, #-39]	; 0xffffffd9
   142c4:	b	14328 <__assert_fail@plt+0x3008>
   142c8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   142cc:	strb	r3, [fp, #-39]	; 0xffffffd9
   142d0:	ldr	r3, [fp, #4]
   142d4:	cmp	r3, #2
   142d8:	bne	142ec <__assert_fail@plt+0x2fcc>
   142dc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   142e0:	cmp	r3, #0
   142e4:	beq	14c40 <__assert_fail@plt+0x3920>
   142e8:	b	14f34 <__assert_fail@plt+0x3c14>
   142ec:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   142f0:	cmp	r3, #0
   142f4:	beq	14310 <__assert_fail@plt+0x2ff0>
   142f8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   142fc:	cmp	r3, #0
   14300:	beq	14310 <__assert_fail@plt+0x2ff0>
   14304:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14308:	cmp	r3, #0
   1430c:	bne	14c48 <__assert_fail@plt+0x3928>
   14310:	ldr	r3, [fp, #4]
   14314:	cmp	r3, #2
   14318:	bne	14328 <__assert_fail@plt+0x3008>
   1431c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14320:	cmp	r3, #0
   14324:	bne	14f08 <__assert_fail@plt+0x3be8>
   14328:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1432c:	cmp	r3, #0
   14330:	beq	14a94 <__assert_fail@plt+0x3774>
   14334:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   14338:	strb	r3, [fp, #-38]	; 0xffffffda
   1433c:	b	14b40 <__assert_fail@plt+0x3820>
   14340:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14344:	cmn	r3, #1
   14348:	bne	1436c <__assert_fail@plt+0x304c>
   1434c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14350:	add	r3, r3, #1
   14354:	ldrb	r3, [r3]
   14358:	cmp	r3, #0
   1435c:	movne	r3, #1
   14360:	moveq	r3, #0
   14364:	uxtb	r3, r3
   14368:	b	14380 <__assert_fail@plt+0x3060>
   1436c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14370:	cmp	r3, #1
   14374:	movne	r3, #1
   14378:	moveq	r3, #0
   1437c:	uxtb	r3, r3
   14380:	cmp	r3, #0
   14384:	bne	14a9c <__assert_fail@plt+0x377c>
   14388:	ldr	r3, [fp, #-16]
   1438c:	cmp	r3, #0
   14390:	bne	14aa4 <__assert_fail@plt+0x3784>
   14394:	mov	r3, #1
   14398:	strb	r3, [fp, #-42]	; 0xffffffd6
   1439c:	ldr	r3, [fp, #4]
   143a0:	cmp	r3, #2
   143a4:	bne	14aac <__assert_fail@plt+0x378c>
   143a8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   143ac:	cmp	r3, #0
   143b0:	beq	14aac <__assert_fail@plt+0x378c>
   143b4:	b	14f34 <__assert_fail@plt+0x3c14>
   143b8:	mov	r3, #1
   143bc:	strb	r3, [fp, #-36]	; 0xffffffdc
   143c0:	mov	r3, #1
   143c4:	strb	r3, [fp, #-42]	; 0xffffffd6
   143c8:	ldr	r3, [fp, #4]
   143cc:	cmp	r3, #2
   143d0:	bne	14ab4 <__assert_fail@plt+0x3794>
   143d4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   143d8:	cmp	r3, #0
   143dc:	bne	14f10 <__assert_fail@plt+0x3bf0>
   143e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   143e4:	cmp	r3, #0
   143e8:	beq	14408 <__assert_fail@plt+0x30e8>
   143ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143f0:	cmp	r3, #0
   143f4:	bne	14408 <__assert_fail@plt+0x30e8>
   143f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   143fc:	str	r3, [fp, #-24]	; 0xffffffe8
   14400:	mov	r3, #0
   14404:	str	r3, [fp, #-92]	; 0xffffffa4
   14408:	ldr	r2, [fp, #-20]	; 0xffffffec
   1440c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14410:	cmp	r2, r3
   14414:	bcs	1442c <__assert_fail@plt+0x310c>
   14418:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1441c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14420:	add	r3, r2, r3
   14424:	mov	r2, #39	; 0x27
   14428:	strb	r2, [r3]
   1442c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14430:	add	r3, r3, #1
   14434:	str	r3, [fp, #-20]	; 0xffffffec
   14438:	ldr	r2, [fp, #-20]	; 0xffffffec
   1443c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14440:	cmp	r2, r3
   14444:	bcs	1445c <__assert_fail@plt+0x313c>
   14448:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1444c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14450:	add	r3, r2, r3
   14454:	mov	r2, #92	; 0x5c
   14458:	strb	r2, [r3]
   1445c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14460:	add	r3, r3, #1
   14464:	str	r3, [fp, #-20]	; 0xffffffec
   14468:	ldr	r2, [fp, #-20]	; 0xffffffec
   1446c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14470:	cmp	r2, r3
   14474:	bcs	1448c <__assert_fail@plt+0x316c>
   14478:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1447c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14480:	add	r3, r2, r3
   14484:	mov	r2, #39	; 0x27
   14488:	strb	r2, [r3]
   1448c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14490:	add	r3, r3, #1
   14494:	str	r3, [fp, #-20]	; 0xffffffec
   14498:	mov	r3, #0
   1449c:	strb	r3, [fp, #-35]	; 0xffffffdd
   144a0:	b	14ab4 <__assert_fail@plt+0x3794>
   144a4:	mov	r3, #1
   144a8:	strb	r3, [fp, #-42]	; 0xffffffd6
   144ac:	b	14ab8 <__assert_fail@plt+0x3798>
   144b0:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   144b4:	cmp	r3, #0
   144b8:	beq	144f8 <__assert_fail@plt+0x31d8>
   144bc:	mov	r3, #1
   144c0:	str	r3, [fp, #-48]	; 0xffffffd0
   144c4:	bl	111dc <__ctype_b_loc@plt>
   144c8:	mov	r3, r0
   144cc:	ldr	r2, [r3]
   144d0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   144d4:	lsl	r3, r3, #1
   144d8:	add	r3, r2, r3
   144dc:	ldrh	r3, [r3]
   144e0:	and	r3, r3, #16384	; 0x4000
   144e4:	cmp	r3, #0
   144e8:	movne	r3, #1
   144ec:	moveq	r3, #0
   144f0:	strb	r3, [fp, #-49]	; 0xffffffcf
   144f4:	b	14744 <__assert_fail@plt+0x3424>
   144f8:	sub	r3, fp, #76	; 0x4c
   144fc:	mov	r2, #8
   14500:	mov	r1, #0
   14504:	mov	r0, r3
   14508:	bl	11248 <memset@plt>
   1450c:	mov	r3, #0
   14510:	str	r3, [fp, #-48]	; 0xffffffd0
   14514:	mov	r3, #1
   14518:	strb	r3, [fp, #-49]	; 0xffffffcf
   1451c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14520:	cmn	r3, #1
   14524:	bne	14534 <__assert_fail@plt+0x3214>
   14528:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1452c:	bl	11200 <strlen@plt>
   14530:	str	r0, [fp, #-100]	; 0xffffff9c
   14534:	ldr	r2, [fp, #-16]
   14538:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1453c:	add	r3, r2, r3
   14540:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14544:	add	r1, r2, r3
   14548:	ldr	r2, [fp, #-16]
   1454c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14550:	add	r3, r2, r3
   14554:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14558:	sub	r2, r2, r3
   1455c:	sub	r3, fp, #76	; 0x4c
   14560:	sub	r0, fp, #80	; 0x50
   14564:	bl	31724 <__assert_fail@plt+0x20404>
   14568:	str	r0, [fp, #-64]	; 0xffffffc0
   1456c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14570:	cmp	r3, #0
   14574:	beq	14738 <__assert_fail@plt+0x3418>
   14578:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1457c:	cmn	r3, #1
   14580:	bne	14590 <__assert_fail@plt+0x3270>
   14584:	mov	r3, #0
   14588:	strb	r3, [fp, #-49]	; 0xffffffcf
   1458c:	b	14744 <__assert_fail@plt+0x3424>
   14590:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14594:	cmn	r3, #2
   14598:	bne	145f0 <__assert_fail@plt+0x32d0>
   1459c:	mov	r3, #0
   145a0:	strb	r3, [fp, #-49]	; 0xffffffcf
   145a4:	b	145b4 <__assert_fail@plt+0x3294>
   145a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   145ac:	add	r3, r3, #1
   145b0:	str	r3, [fp, #-48]	; 0xffffffd0
   145b4:	ldr	r2, [fp, #-16]
   145b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   145bc:	add	r2, r2, r3
   145c0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   145c4:	cmp	r2, r3
   145c8:	bcs	14740 <__assert_fail@plt+0x3420>
   145cc:	ldr	r2, [fp, #-16]
   145d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   145d4:	add	r3, r2, r3
   145d8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   145dc:	add	r3, r2, r3
   145e0:	ldrb	r3, [r3]
   145e4:	cmp	r3, #0
   145e8:	bne	145a8 <__assert_fail@plt+0x3288>
   145ec:	b	14740 <__assert_fail@plt+0x3420>
   145f0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   145f4:	cmp	r3, #0
   145f8:	beq	146ec <__assert_fail@plt+0x33cc>
   145fc:	ldr	r3, [fp, #4]
   14600:	cmp	r3, #2
   14604:	bne	146ec <__assert_fail@plt+0x33cc>
   14608:	mov	r3, #1
   1460c:	str	r3, [fp, #-56]	; 0xffffffc8
   14610:	b	146dc <__assert_fail@plt+0x33bc>
   14614:	ldr	r2, [fp, #-16]
   14618:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1461c:	add	r2, r2, r3
   14620:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14624:	add	r3, r2, r3
   14628:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1462c:	add	r3, r2, r3
   14630:	ldrb	r3, [r3]
   14634:	sub	r3, r3, #91	; 0x5b
   14638:	cmp	r3, #33	; 0x21
   1463c:	ldrls	pc, [pc, r3, lsl #2]
   14640:	b	146cc <__assert_fail@plt+0x33ac>
   14644:	andeq	r4, r1, r8, lsl pc
   14648:	andeq	r4, r1, r8, lsl pc
   1464c:	andeq	r4, r1, ip, asr #13
   14650:	andeq	r4, r1, r8, lsl pc
   14654:	andeq	r4, r1, ip, asr #13
   14658:	andeq	r4, r1, r8, lsl pc
   1465c:	andeq	r4, r1, ip, asr #13
   14660:	andeq	r4, r1, ip, asr #13
   14664:	andeq	r4, r1, ip, asr #13
   14668:	andeq	r4, r1, ip, asr #13
   1466c:	andeq	r4, r1, ip, asr #13
   14670:	andeq	r4, r1, ip, asr #13
   14674:	andeq	r4, r1, ip, asr #13
   14678:	andeq	r4, r1, ip, asr #13
   1467c:	andeq	r4, r1, ip, asr #13
   14680:	andeq	r4, r1, ip, asr #13
   14684:	andeq	r4, r1, ip, asr #13
   14688:	andeq	r4, r1, ip, asr #13
   1468c:	andeq	r4, r1, ip, asr #13
   14690:	andeq	r4, r1, ip, asr #13
   14694:	andeq	r4, r1, ip, asr #13
   14698:	andeq	r4, r1, ip, asr #13
   1469c:	andeq	r4, r1, ip, asr #13
   146a0:	andeq	r4, r1, ip, asr #13
   146a4:	andeq	r4, r1, ip, asr #13
   146a8:	andeq	r4, r1, ip, asr #13
   146ac:	andeq	r4, r1, ip, asr #13
   146b0:	andeq	r4, r1, ip, asr #13
   146b4:	andeq	r4, r1, ip, asr #13
   146b8:	andeq	r4, r1, ip, asr #13
   146bc:	andeq	r4, r1, ip, asr #13
   146c0:	andeq	r4, r1, ip, asr #13
   146c4:	andeq	r4, r1, ip, asr #13
   146c8:	andeq	r4, r1, r8, lsl pc
   146cc:	nop			; (mov r0, r0)
   146d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   146d4:	add	r3, r3, #1
   146d8:	str	r3, [fp, #-56]	; 0xffffffc8
   146dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   146e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   146e4:	cmp	r2, r3
   146e8:	bcc	14614 <__assert_fail@plt+0x32f4>
   146ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   146f0:	mov	r0, r3
   146f4:	bl	11134 <iswprint@plt>
   146f8:	mov	r3, r0
   146fc:	cmp	r3, #0
   14700:	bne	1470c <__assert_fail@plt+0x33ec>
   14704:	mov	r3, #0
   14708:	strb	r3, [fp, #-49]	; 0xffffffcf
   1470c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14710:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14714:	add	r3, r2, r3
   14718:	str	r3, [fp, #-48]	; 0xffffffd0
   1471c:	sub	r3, fp, #76	; 0x4c
   14720:	mov	r0, r3
   14724:	bl	110d4 <mbsinit@plt>
   14728:	mov	r3, r0
   1472c:	cmp	r3, #0
   14730:	beq	14534 <__assert_fail@plt+0x3214>
   14734:	b	14744 <__assert_fail@plt+0x3424>
   14738:	nop			; (mov r0, r0)
   1473c:	b	14744 <__assert_fail@plt+0x3424>
   14740:	nop			; (mov r0, r0)
   14744:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14748:	strb	r3, [fp, #-42]	; 0xffffffd6
   1474c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14750:	cmp	r3, #1
   14754:	bhi	14778 <__assert_fail@plt+0x3458>
   14758:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1475c:	cmp	r3, #0
   14760:	beq	14ab8 <__assert_fail@plt+0x3798>
   14764:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14768:	eor	r3, r3, #1
   1476c:	uxtb	r3, r3
   14770:	cmp	r3, #0
   14774:	beq	14ab8 <__assert_fail@plt+0x3798>
   14778:	ldr	r2, [fp, #-16]
   1477c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14780:	add	r3, r2, r3
   14784:	str	r3, [fp, #-68]	; 0xffffffbc
   14788:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1478c:	cmp	r3, #0
   14790:	beq	14950 <__assert_fail@plt+0x3630>
   14794:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14798:	eor	r3, r3, #1
   1479c:	uxtb	r3, r3
   147a0:	cmp	r3, #0
   147a4:	beq	14950 <__assert_fail@plt+0x3630>
   147a8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   147ac:	cmp	r3, #0
   147b0:	bne	14f20 <__assert_fail@plt+0x3c00>
   147b4:	mov	r3, #1
   147b8:	strb	r3, [fp, #-41]	; 0xffffffd7
   147bc:	ldr	r3, [fp, #4]
   147c0:	cmp	r3, #2
   147c4:	bne	14874 <__assert_fail@plt+0x3554>
   147c8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   147cc:	eor	r3, r3, #1
   147d0:	uxtb	r3, r3
   147d4:	cmp	r3, #0
   147d8:	beq	14874 <__assert_fail@plt+0x3554>
   147dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   147e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   147e4:	cmp	r2, r3
   147e8:	bcs	14800 <__assert_fail@plt+0x34e0>
   147ec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   147f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   147f4:	add	r3, r2, r3
   147f8:	mov	r2, #39	; 0x27
   147fc:	strb	r2, [r3]
   14800:	ldr	r3, [fp, #-20]	; 0xffffffec
   14804:	add	r3, r3, #1
   14808:	str	r3, [fp, #-20]	; 0xffffffec
   1480c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14810:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14814:	cmp	r2, r3
   14818:	bcs	14830 <__assert_fail@plt+0x3510>
   1481c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14820:	ldr	r3, [fp, #-20]	; 0xffffffec
   14824:	add	r3, r2, r3
   14828:	mov	r2, #36	; 0x24
   1482c:	strb	r2, [r3]
   14830:	ldr	r3, [fp, #-20]	; 0xffffffec
   14834:	add	r3, r3, #1
   14838:	str	r3, [fp, #-20]	; 0xffffffec
   1483c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14840:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14844:	cmp	r2, r3
   14848:	bcs	14860 <__assert_fail@plt+0x3540>
   1484c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14850:	ldr	r3, [fp, #-20]	; 0xffffffec
   14854:	add	r3, r2, r3
   14858:	mov	r2, #39	; 0x27
   1485c:	strb	r2, [r3]
   14860:	ldr	r3, [fp, #-20]	; 0xffffffec
   14864:	add	r3, r3, #1
   14868:	str	r3, [fp, #-20]	; 0xffffffec
   1486c:	mov	r3, #1
   14870:	strb	r3, [fp, #-35]	; 0xffffffdd
   14874:	ldr	r2, [fp, #-20]	; 0xffffffec
   14878:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1487c:	cmp	r2, r3
   14880:	bcs	14898 <__assert_fail@plt+0x3578>
   14884:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14888:	ldr	r3, [fp, #-20]	; 0xffffffec
   1488c:	add	r3, r2, r3
   14890:	mov	r2, #92	; 0x5c
   14894:	strb	r2, [r3]
   14898:	ldr	r3, [fp, #-20]	; 0xffffffec
   1489c:	add	r3, r3, #1
   148a0:	str	r3, [fp, #-20]	; 0xffffffec
   148a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   148a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   148ac:	cmp	r2, r3
   148b0:	bcs	148d8 <__assert_fail@plt+0x35b8>
   148b4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   148b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   148bc:	add	r3, r2, r3
   148c0:	ldrb	r2, [fp, #-38]	; 0xffffffda
   148c4:	lsr	r2, r2, #6
   148c8:	uxtb	r2, r2
   148cc:	add	r2, r2, #48	; 0x30
   148d0:	uxtb	r2, r2
   148d4:	strb	r2, [r3]
   148d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   148dc:	add	r3, r3, #1
   148e0:	str	r3, [fp, #-20]	; 0xffffffec
   148e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   148e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   148ec:	cmp	r2, r3
   148f0:	bcs	14920 <__assert_fail@plt+0x3600>
   148f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   148f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   148fc:	add	r3, r2, r3
   14900:	ldrb	r2, [fp, #-38]	; 0xffffffda
   14904:	lsr	r2, r2, #3
   14908:	uxtb	r2, r2
   1490c:	and	r2, r2, #7
   14910:	uxtb	r2, r2
   14914:	add	r2, r2, #48	; 0x30
   14918:	uxtb	r2, r2
   1491c:	strb	r2, [r3]
   14920:	ldr	r3, [fp, #-20]	; 0xffffffec
   14924:	add	r3, r3, #1
   14928:	str	r3, [fp, #-20]	; 0xffffffec
   1492c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14930:	and	r3, r3, #7
   14934:	uxtb	r3, r3
   14938:	add	r3, r3, #48	; 0x30
   1493c:	strb	r3, [fp, #-38]	; 0xffffffda
   14940:	b	14994 <__assert_fail@plt+0x3674>
   14944:	andeq	r3, r3, r8, lsr #8
   14948:	andeq	r3, r3, r0, lsr r4
   1494c:	andeq	r3, r3, ip, lsr #8
   14950:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   14954:	cmp	r3, #0
   14958:	beq	14994 <__assert_fail@plt+0x3674>
   1495c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14960:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14964:	cmp	r2, r3
   14968:	bcs	14980 <__assert_fail@plt+0x3660>
   1496c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14970:	ldr	r3, [fp, #-20]	; 0xffffffec
   14974:	add	r3, r2, r3
   14978:	mov	r2, #92	; 0x5c
   1497c:	strb	r2, [r3]
   14980:	ldr	r3, [fp, #-20]	; 0xffffffec
   14984:	add	r3, r3, #1
   14988:	str	r3, [fp, #-20]	; 0xffffffec
   1498c:	mov	r3, #0
   14990:	strb	r3, [fp, #-40]	; 0xffffffd8
   14994:	ldr	r3, [fp, #-16]
   14998:	add	r2, r3, #1
   1499c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   149a0:	cmp	r2, r3
   149a4:	bcs	14a84 <__assert_fail@plt+0x3764>
   149a8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   149ac:	cmp	r3, #0
   149b0:	beq	14a30 <__assert_fail@plt+0x3710>
   149b4:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   149b8:	eor	r3, r3, #1
   149bc:	uxtb	r3, r3
   149c0:	cmp	r3, #0
   149c4:	beq	14a30 <__assert_fail@plt+0x3710>
   149c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   149cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   149d0:	cmp	r2, r3
   149d4:	bcs	149ec <__assert_fail@plt+0x36cc>
   149d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   149dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   149e0:	add	r3, r2, r3
   149e4:	mov	r2, #39	; 0x27
   149e8:	strb	r2, [r3]
   149ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   149f0:	add	r3, r3, #1
   149f4:	str	r3, [fp, #-20]	; 0xffffffec
   149f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   149fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14a00:	cmp	r2, r3
   14a04:	bcs	14a1c <__assert_fail@plt+0x36fc>
   14a08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a10:	add	r3, r2, r3
   14a14:	mov	r2, #39	; 0x27
   14a18:	strb	r2, [r3]
   14a1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a20:	add	r3, r3, #1
   14a24:	str	r3, [fp, #-20]	; 0xffffffec
   14a28:	mov	r3, #0
   14a2c:	strb	r3, [fp, #-35]	; 0xffffffdd
   14a30:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14a38:	cmp	r2, r3
   14a3c:	bcs	14a54 <__assert_fail@plt+0x3734>
   14a40:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14a44:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a48:	add	r3, r2, r3
   14a4c:	ldrb	r2, [fp, #-38]	; 0xffffffda
   14a50:	strb	r2, [r3]
   14a54:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a58:	add	r3, r3, #1
   14a5c:	str	r3, [fp, #-20]	; 0xffffffec
   14a60:	ldr	r3, [fp, #-16]
   14a64:	add	r3, r3, #1
   14a68:	str	r3, [fp, #-16]
   14a6c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14a70:	ldr	r3, [fp, #-16]
   14a74:	add	r3, r2, r3
   14a78:	ldrb	r3, [r3]
   14a7c:	strb	r3, [fp, #-38]	; 0xffffffda
   14a80:	b	14788 <__assert_fail@plt+0x3468>
   14a84:	nop			; (mov r0, r0)
   14a88:	b	14c54 <__assert_fail@plt+0x3934>
   14a8c:	nop			; (mov r0, r0)
   14a90:	b	14ab8 <__assert_fail@plt+0x3798>
   14a94:	nop			; (mov r0, r0)
   14a98:	b	14ab8 <__assert_fail@plt+0x3798>
   14a9c:	nop			; (mov r0, r0)
   14aa0:	b	14ab8 <__assert_fail@plt+0x3798>
   14aa4:	nop			; (mov r0, r0)
   14aa8:	b	14ab8 <__assert_fail@plt+0x3798>
   14aac:	nop			; (mov r0, r0)
   14ab0:	b	14ab8 <__assert_fail@plt+0x3798>
   14ab4:	nop			; (mov r0, r0)
   14ab8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14abc:	eor	r3, r3, #1
   14ac0:	uxtb	r3, r3
   14ac4:	cmp	r3, #0
   14ac8:	bne	14ad8 <__assert_fail@plt+0x37b8>
   14acc:	ldr	r3, [fp, #4]
   14ad0:	cmp	r3, #2
   14ad4:	bne	14aec <__assert_fail@plt+0x37cc>
   14ad8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14adc:	eor	r3, r3, #1
   14ae0:	uxtb	r3, r3
   14ae4:	cmp	r3, #0
   14ae8:	bne	14b2c <__assert_fail@plt+0x380c>
   14aec:	ldr	r3, [fp, #12]
   14af0:	cmp	r3, #0
   14af4:	beq	14b2c <__assert_fail@plt+0x380c>
   14af8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14afc:	lsr	r3, r3, #5
   14b00:	uxtb	r3, r3
   14b04:	lsl	r3, r3, #2
   14b08:	ldr	r2, [fp, #12]
   14b0c:	add	r3, r2, r3
   14b10:	ldr	r2, [r3]
   14b14:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14b18:	and	r3, r3, #31
   14b1c:	lsr	r3, r2, r3
   14b20:	and	r3, r3, #1
   14b24:	cmp	r3, #0
   14b28:	bne	14b40 <__assert_fail@plt+0x3820>
   14b2c:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   14b30:	eor	r3, r3, #1
   14b34:	uxtb	r3, r3
   14b38:	cmp	r3, #0
   14b3c:	bne	14c50 <__assert_fail@plt+0x3930>
   14b40:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14b44:	cmp	r3, #0
   14b48:	bne	14f28 <__assert_fail@plt+0x3c08>
   14b4c:	mov	r3, #1
   14b50:	strb	r3, [fp, #-41]	; 0xffffffd7
   14b54:	ldr	r3, [fp, #4]
   14b58:	cmp	r3, #2
   14b5c:	bne	14c0c <__assert_fail@plt+0x38ec>
   14b60:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14b64:	eor	r3, r3, #1
   14b68:	uxtb	r3, r3
   14b6c:	cmp	r3, #0
   14b70:	beq	14c0c <__assert_fail@plt+0x38ec>
   14b74:	ldr	r2, [fp, #-20]	; 0xffffffec
   14b78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14b7c:	cmp	r2, r3
   14b80:	bcs	14b98 <__assert_fail@plt+0x3878>
   14b84:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14b88:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b8c:	add	r3, r2, r3
   14b90:	mov	r2, #39	; 0x27
   14b94:	strb	r2, [r3]
   14b98:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b9c:	add	r3, r3, #1
   14ba0:	str	r3, [fp, #-20]	; 0xffffffec
   14ba4:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ba8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14bac:	cmp	r2, r3
   14bb0:	bcs	14bc8 <__assert_fail@plt+0x38a8>
   14bb4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14bb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bbc:	add	r3, r2, r3
   14bc0:	mov	r2, #36	; 0x24
   14bc4:	strb	r2, [r3]
   14bc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bcc:	add	r3, r3, #1
   14bd0:	str	r3, [fp, #-20]	; 0xffffffec
   14bd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   14bd8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14bdc:	cmp	r2, r3
   14be0:	bcs	14bf8 <__assert_fail@plt+0x38d8>
   14be4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14be8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bec:	add	r3, r2, r3
   14bf0:	mov	r2, #39	; 0x27
   14bf4:	strb	r2, [r3]
   14bf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bfc:	add	r3, r3, #1
   14c00:	str	r3, [fp, #-20]	; 0xffffffec
   14c04:	mov	r3, #1
   14c08:	strb	r3, [fp, #-35]	; 0xffffffdd
   14c0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c10:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14c14:	cmp	r2, r3
   14c18:	bcs	14c30 <__assert_fail@plt+0x3910>
   14c1c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14c20:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c24:	add	r3, r2, r3
   14c28:	mov	r2, #92	; 0x5c
   14c2c:	strb	r2, [r3]
   14c30:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c34:	add	r3, r3, #1
   14c38:	str	r3, [fp, #-20]	; 0xffffffec
   14c3c:	b	14c54 <__assert_fail@plt+0x3934>
   14c40:	nop			; (mov r0, r0)
   14c44:	b	14c54 <__assert_fail@plt+0x3934>
   14c48:	nop			; (mov r0, r0)
   14c4c:	b	14c54 <__assert_fail@plt+0x3934>
   14c50:	nop			; (mov r0, r0)
   14c54:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14c58:	cmp	r3, #0
   14c5c:	beq	14cdc <__assert_fail@plt+0x39bc>
   14c60:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   14c64:	eor	r3, r3, #1
   14c68:	uxtb	r3, r3
   14c6c:	cmp	r3, #0
   14c70:	beq	14cdc <__assert_fail@plt+0x39bc>
   14c74:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14c7c:	cmp	r2, r3
   14c80:	bcs	14c98 <__assert_fail@plt+0x3978>
   14c84:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14c88:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c8c:	add	r3, r2, r3
   14c90:	mov	r2, #39	; 0x27
   14c94:	strb	r2, [r3]
   14c98:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c9c:	add	r3, r3, #1
   14ca0:	str	r3, [fp, #-20]	; 0xffffffec
   14ca4:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ca8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14cac:	cmp	r2, r3
   14cb0:	bcs	14cc8 <__assert_fail@plt+0x39a8>
   14cb4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14cb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cbc:	add	r3, r2, r3
   14cc0:	mov	r2, #39	; 0x27
   14cc4:	strb	r2, [r3]
   14cc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ccc:	add	r3, r3, #1
   14cd0:	str	r3, [fp, #-20]	; 0xffffffec
   14cd4:	mov	r3, #0
   14cd8:	strb	r3, [fp, #-35]	; 0xffffffdd
   14cdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ce0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14ce4:	cmp	r2, r3
   14ce8:	bcs	14d00 <__assert_fail@plt+0x39e0>
   14cec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14cf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cf4:	add	r3, r2, r3
   14cf8:	ldrb	r2, [fp, #-38]	; 0xffffffda
   14cfc:	strb	r2, [r3]
   14d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d04:	add	r3, r3, #1
   14d08:	str	r3, [fp, #-20]	; 0xffffffec
   14d0c:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   14d10:	eor	r3, r3, #1
   14d14:	uxtb	r3, r3
   14d18:	cmp	r3, #0
   14d1c:	beq	14d28 <__assert_fail@plt+0x3a08>
   14d20:	mov	r3, #0
   14d24:	strb	r3, [fp, #-37]	; 0xffffffdb
   14d28:	ldr	r3, [fp, #-16]
   14d2c:	add	r3, r3, #1
   14d30:	str	r3, [fp, #-16]
   14d34:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14d38:	cmn	r3, #1
   14d3c:	bne	14d64 <__assert_fail@plt+0x3a44>
   14d40:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14d44:	ldr	r3, [fp, #-16]
   14d48:	add	r3, r2, r3
   14d4c:	ldrb	r3, [r3]
   14d50:	cmp	r3, #0
   14d54:	movne	r3, #1
   14d58:	moveq	r3, #0
   14d5c:	uxtb	r3, r3
   14d60:	b	14d7c <__assert_fail@plt+0x3a5c>
   14d64:	ldr	r2, [fp, #-16]
   14d68:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14d6c:	cmp	r2, r3
   14d70:	movne	r3, #1
   14d74:	moveq	r3, #0
   14d78:	uxtb	r3, r3
   14d7c:	cmp	r3, #0
   14d80:	bne	13ba8 <__assert_fail@plt+0x2888>
   14d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d88:	cmp	r3, #0
   14d8c:	bne	14da8 <__assert_fail@plt+0x3a88>
   14d90:	ldr	r3, [fp, #4]
   14d94:	cmp	r3, #2
   14d98:	bne	14da8 <__assert_fail@plt+0x3a88>
   14d9c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14da0:	cmp	r3, #0
   14da4:	bne	14f30 <__assert_fail@plt+0x3c10>
   14da8:	ldr	r3, [fp, #4]
   14dac:	cmp	r3, #2
   14db0:	bne	14e50 <__assert_fail@plt+0x3b30>
   14db4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14db8:	eor	r3, r3, #1
   14dbc:	uxtb	r3, r3
   14dc0:	cmp	r3, #0
   14dc4:	beq	14e50 <__assert_fail@plt+0x3b30>
   14dc8:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   14dcc:	cmp	r3, #0
   14dd0:	beq	14e50 <__assert_fail@plt+0x3b30>
   14dd4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   14dd8:	cmp	r3, #0
   14ddc:	beq	14e24 <__assert_fail@plt+0x3b04>
   14de0:	ldr	r3, [fp, #20]
   14de4:	str	r3, [sp, #16]
   14de8:	ldr	r3, [fp, #16]
   14dec:	str	r3, [sp, #12]
   14df0:	ldr	r3, [fp, #12]
   14df4:	str	r3, [sp, #8]
   14df8:	ldr	r3, [fp, #8]
   14dfc:	str	r3, [sp, #4]
   14e00:	mov	r3, #5
   14e04:	str	r3, [sp]
   14e08:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14e0c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14e10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14e14:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14e18:	bl	138f8 <__assert_fail@plt+0x25d8>
   14e1c:	mov	r3, r0
   14e20:	b	14f98 <__assert_fail@plt+0x3c78>
   14e24:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14e28:	cmp	r3, #0
   14e2c:	bne	14e50 <__assert_fail@plt+0x3b30>
   14e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e34:	cmp	r3, #0
   14e38:	beq	14e50 <__assert_fail@plt+0x3b30>
   14e3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e40:	str	r3, [fp, #-92]	; 0xffffffa4
   14e44:	mov	r3, #0
   14e48:	str	r3, [fp, #-20]	; 0xffffffec
   14e4c:	b	13984 <__assert_fail@plt+0x2664>
   14e50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e54:	cmp	r3, #0
   14e58:	beq	14ec4 <__assert_fail@plt+0x3ba4>
   14e5c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14e60:	eor	r3, r3, #1
   14e64:	uxtb	r3, r3
   14e68:	cmp	r3, #0
   14e6c:	beq	14ec4 <__assert_fail@plt+0x3ba4>
   14e70:	b	14eb4 <__assert_fail@plt+0x3b94>
   14e74:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14e7c:	cmp	r2, r3
   14e80:	bcs	14e9c <__assert_fail@plt+0x3b7c>
   14e84:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14e88:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e8c:	add	r3, r2, r3
   14e90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14e94:	ldrb	r2, [r2]
   14e98:	strb	r2, [r3]
   14e9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ea0:	add	r3, r3, #1
   14ea4:	str	r3, [fp, #-20]	; 0xffffffec
   14ea8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14eac:	add	r3, r3, #1
   14eb0:	str	r3, [fp, #-28]	; 0xffffffe4
   14eb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14eb8:	ldrb	r3, [r3]
   14ebc:	cmp	r3, #0
   14ec0:	bne	14e74 <__assert_fail@plt+0x3b54>
   14ec4:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ec8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14ecc:	cmp	r2, r3
   14ed0:	bcs	14ee8 <__assert_fail@plt+0x3bc8>
   14ed4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14ed8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14edc:	add	r3, r2, r3
   14ee0:	mov	r2, #0
   14ee4:	strb	r2, [r3]
   14ee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14eec:	b	14f98 <__assert_fail@plt+0x3c78>
   14ef0:	nop			; (mov r0, r0)
   14ef4:	b	14f34 <__assert_fail@plt+0x3c14>
   14ef8:	nop			; (mov r0, r0)
   14efc:	b	14f34 <__assert_fail@plt+0x3c14>
   14f00:	nop			; (mov r0, r0)
   14f04:	b	14f34 <__assert_fail@plt+0x3c14>
   14f08:	nop			; (mov r0, r0)
   14f0c:	b	14f34 <__assert_fail@plt+0x3c14>
   14f10:	nop			; (mov r0, r0)
   14f14:	b	14f34 <__assert_fail@plt+0x3c14>
   14f18:	nop			; (mov r0, r0)
   14f1c:	b	14f34 <__assert_fail@plt+0x3c14>
   14f20:	nop			; (mov r0, r0)
   14f24:	b	14f34 <__assert_fail@plt+0x3c14>
   14f28:	nop			; (mov r0, r0)
   14f2c:	b	14f34 <__assert_fail@plt+0x3c14>
   14f30:	nop			; (mov r0, r0)
   14f34:	ldr	r3, [fp, #4]
   14f38:	cmp	r3, #2
   14f3c:	bne	14f54 <__assert_fail@plt+0x3c34>
   14f40:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14f44:	cmp	r3, #0
   14f48:	beq	14f54 <__assert_fail@plt+0x3c34>
   14f4c:	mov	r3, #4
   14f50:	str	r3, [fp, #4]
   14f54:	ldr	r3, [fp, #8]
   14f58:	bic	r3, r3, #2
   14f5c:	ldr	r2, [fp, #20]
   14f60:	str	r2, [sp, #16]
   14f64:	ldr	r2, [fp, #16]
   14f68:	str	r2, [sp, #12]
   14f6c:	mov	r2, #0
   14f70:	str	r2, [sp, #8]
   14f74:	str	r3, [sp, #4]
   14f78:	ldr	r3, [fp, #4]
   14f7c:	str	r3, [sp]
   14f80:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14f84:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14f88:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14f8c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14f90:	bl	138f8 <__assert_fail@plt+0x25d8>
   14f94:	mov	r3, r0
   14f98:	mov	r0, r3
   14f9c:	sub	sp, fp, #8
   14fa0:	pop	{r4, fp, pc}
   14fa4:	push	{fp, lr}
   14fa8:	add	fp, sp, #4
   14fac:	sub	sp, sp, #56	; 0x38
   14fb0:	str	r0, [fp, #-24]	; 0xffffffe8
   14fb4:	str	r1, [fp, #-28]	; 0xffffffe4
   14fb8:	str	r2, [fp, #-32]	; 0xffffffe0
   14fbc:	str	r3, [fp, #-36]	; 0xffffffdc
   14fc0:	ldr	r3, [fp, #4]
   14fc4:	cmp	r3, #0
   14fc8:	beq	14fd4 <__assert_fail@plt+0x3cb4>
   14fcc:	ldr	r3, [fp, #4]
   14fd0:	b	14fd8 <__assert_fail@plt+0x3cb8>
   14fd4:	ldr	r3, [pc, #132]	; 15060 <__assert_fail@plt+0x3d40>
   14fd8:	str	r3, [fp, #-8]
   14fdc:	bl	11224 <__errno_location@plt>
   14fe0:	mov	r3, r0
   14fe4:	ldr	r3, [r3]
   14fe8:	str	r3, [fp, #-12]
   14fec:	ldr	r3, [fp, #-8]
   14ff0:	ldr	r3, [r3]
   14ff4:	ldr	r2, [fp, #-8]
   14ff8:	ldr	r2, [r2, #4]
   14ffc:	ldr	r1, [fp, #-8]
   15000:	add	r1, r1, #8
   15004:	ldr	r0, [fp, #-8]
   15008:	ldr	r0, [r0, #40]	; 0x28
   1500c:	ldr	ip, [fp, #-8]
   15010:	ldr	ip, [ip, #44]	; 0x2c
   15014:	str	ip, [sp, #16]
   15018:	str	r0, [sp, #12]
   1501c:	str	r1, [sp, #8]
   15020:	str	r2, [sp, #4]
   15024:	str	r3, [sp]
   15028:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1502c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15030:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15038:	bl	138f8 <__assert_fail@plt+0x25d8>
   1503c:	str	r0, [fp, #-16]
   15040:	bl	11224 <__errno_location@plt>
   15044:	mov	r2, r0
   15048:	ldr	r3, [fp, #-12]
   1504c:	str	r3, [r2]
   15050:	ldr	r3, [fp, #-16]
   15054:	mov	r0, r3
   15058:	sub	sp, fp, #4
   1505c:	pop	{fp, pc}
   15060:	muleq	r4, r4, r5
   15064:	push	{fp, lr}
   15068:	add	fp, sp, #4
   1506c:	sub	sp, sp, #16
   15070:	str	r0, [fp, #-8]
   15074:	str	r1, [fp, #-12]
   15078:	str	r2, [fp, #-16]
   1507c:	ldr	r3, [fp, #-16]
   15080:	mov	r2, #0
   15084:	ldr	r1, [fp, #-12]
   15088:	ldr	r0, [fp, #-8]
   1508c:	bl	150a0 <__assert_fail@plt+0x3d80>
   15090:	mov	r3, r0
   15094:	mov	r0, r3
   15098:	sub	sp, fp, #4
   1509c:	pop	{fp, pc}
   150a0:	push	{fp, lr}
   150a4:	add	fp, sp, #4
   150a8:	sub	sp, sp, #64	; 0x40
   150ac:	str	r0, [fp, #-32]	; 0xffffffe0
   150b0:	str	r1, [fp, #-36]	; 0xffffffdc
   150b4:	str	r2, [fp, #-40]	; 0xffffffd8
   150b8:	str	r3, [fp, #-44]	; 0xffffffd4
   150bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   150c0:	cmp	r3, #0
   150c4:	beq	150d0 <__assert_fail@plt+0x3db0>
   150c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   150cc:	b	150d4 <__assert_fail@plt+0x3db4>
   150d0:	ldr	r3, [pc, #292]	; 151fc <__assert_fail@plt+0x3edc>
   150d4:	str	r3, [fp, #-8]
   150d8:	bl	11224 <__errno_location@plt>
   150dc:	mov	r3, r0
   150e0:	ldr	r3, [r3]
   150e4:	str	r3, [fp, #-12]
   150e8:	ldr	r3, [fp, #-8]
   150ec:	ldr	r3, [r3, #4]
   150f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   150f4:	cmp	r2, #0
   150f8:	moveq	r2, #1
   150fc:	movne	r2, #0
   15100:	uxtb	r2, r2
   15104:	orr	r3, r3, r2
   15108:	str	r3, [fp, #-16]
   1510c:	ldr	r3, [fp, #-8]
   15110:	ldr	r3, [r3]
   15114:	ldr	r2, [fp, #-8]
   15118:	add	r2, r2, #8
   1511c:	ldr	r1, [fp, #-8]
   15120:	ldr	r1, [r1, #40]	; 0x28
   15124:	ldr	r0, [fp, #-8]
   15128:	ldr	r0, [r0, #44]	; 0x2c
   1512c:	str	r0, [sp, #16]
   15130:	str	r1, [sp, #12]
   15134:	str	r2, [sp, #8]
   15138:	ldr	r2, [fp, #-16]
   1513c:	str	r2, [sp, #4]
   15140:	str	r3, [sp]
   15144:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15148:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1514c:	mov	r1, #0
   15150:	mov	r0, #0
   15154:	bl	138f8 <__assert_fail@plt+0x25d8>
   15158:	mov	r3, r0
   1515c:	add	r3, r3, #1
   15160:	str	r3, [fp, #-20]	; 0xffffffec
   15164:	ldr	r0, [fp, #-20]	; 0xffffffec
   15168:	bl	2f660 <__assert_fail@plt+0x1e340>
   1516c:	mov	r3, r0
   15170:	str	r3, [fp, #-24]	; 0xffffffe8
   15174:	ldr	r3, [fp, #-8]
   15178:	ldr	r3, [r3]
   1517c:	ldr	r2, [fp, #-8]
   15180:	add	r2, r2, #8
   15184:	ldr	r1, [fp, #-8]
   15188:	ldr	r1, [r1, #40]	; 0x28
   1518c:	ldr	r0, [fp, #-8]
   15190:	ldr	r0, [r0, #44]	; 0x2c
   15194:	str	r0, [sp, #16]
   15198:	str	r1, [sp, #12]
   1519c:	str	r2, [sp, #8]
   151a0:	ldr	r2, [fp, #-16]
   151a4:	str	r2, [sp, #4]
   151a8:	str	r3, [sp]
   151ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   151b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   151b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   151b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151bc:	bl	138f8 <__assert_fail@plt+0x25d8>
   151c0:	bl	11224 <__errno_location@plt>
   151c4:	mov	r2, r0
   151c8:	ldr	r3, [fp, #-12]
   151cc:	str	r3, [r2]
   151d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   151d4:	cmp	r3, #0
   151d8:	beq	151ec <__assert_fail@plt+0x3ecc>
   151dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   151e0:	sub	r2, r3, #1
   151e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   151e8:	str	r2, [r3]
   151ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151f0:	mov	r0, r3
   151f4:	sub	sp, fp, #4
   151f8:	pop	{fp, pc}
   151fc:	muleq	r4, r4, r5
   15200:	push	{fp, lr}
   15204:	add	fp, sp, #4
   15208:	sub	sp, sp, #8
   1520c:	ldr	r3, [pc, #196]	; 152d8 <__assert_fail@plt+0x3fb8>
   15210:	ldr	r3, [r3]
   15214:	str	r3, [fp, #-12]
   15218:	mov	r3, #1
   1521c:	str	r3, [fp, #-8]
   15220:	b	1524c <__assert_fail@plt+0x3f2c>
   15224:	ldr	r3, [fp, #-8]
   15228:	lsl	r3, r3, #3
   1522c:	ldr	r2, [fp, #-12]
   15230:	add	r3, r2, r3
   15234:	ldr	r3, [r3, #4]
   15238:	mov	r0, r3
   1523c:	bl	31500 <__assert_fail@plt+0x201e0>
   15240:	ldr	r3, [fp, #-8]
   15244:	add	r3, r3, #1
   15248:	str	r3, [fp, #-8]
   1524c:	ldr	r3, [pc, #136]	; 152dc <__assert_fail@plt+0x3fbc>
   15250:	ldr	r3, [r3]
   15254:	ldr	r2, [fp, #-8]
   15258:	cmp	r2, r3
   1525c:	blt	15224 <__assert_fail@plt+0x3f04>
   15260:	ldr	r3, [fp, #-12]
   15264:	ldr	r3, [r3, #4]
   15268:	ldr	r2, [pc, #112]	; 152e0 <__assert_fail@plt+0x3fc0>
   1526c:	cmp	r3, r2
   15270:	beq	1529c <__assert_fail@plt+0x3f7c>
   15274:	ldr	r3, [fp, #-12]
   15278:	ldr	r3, [r3, #4]
   1527c:	mov	r0, r3
   15280:	bl	31500 <__assert_fail@plt+0x201e0>
   15284:	ldr	r3, [pc, #88]	; 152e4 <__assert_fail@plt+0x3fc4>
   15288:	mov	r2, #256	; 0x100
   1528c:	str	r2, [r3]
   15290:	ldr	r3, [pc, #76]	; 152e4 <__assert_fail@plt+0x3fc4>
   15294:	ldr	r2, [pc, #68]	; 152e0 <__assert_fail@plt+0x3fc0>
   15298:	str	r2, [r3, #4]
   1529c:	ldr	r3, [fp, #-12]
   152a0:	ldr	r2, [pc, #60]	; 152e4 <__assert_fail@plt+0x3fc4>
   152a4:	cmp	r3, r2
   152a8:	beq	152c0 <__assert_fail@plt+0x3fa0>
   152ac:	ldr	r0, [fp, #-12]
   152b0:	bl	31500 <__assert_fail@plt+0x201e0>
   152b4:	ldr	r3, [pc, #28]	; 152d8 <__assert_fail@plt+0x3fb8>
   152b8:	ldr	r2, [pc, #36]	; 152e4 <__assert_fail@plt+0x3fc4>
   152bc:	str	r2, [r3]
   152c0:	ldr	r3, [pc, #20]	; 152dc <__assert_fail@plt+0x3fbc>
   152c4:	mov	r2, #1
   152c8:	str	r2, [r3]
   152cc:	nop			; (mov r0, r0)
   152d0:	sub	sp, fp, #4
   152d4:	pop	{fp, pc}
   152d8:	andeq	r4, r4, r4, lsl #3
   152dc:	andeq	r4, r4, r8, ror r1
   152e0:	andeq	r4, r4, r4, asr #11
   152e4:	andeq	r4, r4, ip, ror r1
   152e8:	push	{r4, fp, lr}
   152ec:	add	fp, sp, #8
   152f0:	sub	sp, sp, #84	; 0x54
   152f4:	str	r0, [fp, #-56]	; 0xffffffc8
   152f8:	str	r1, [fp, #-60]	; 0xffffffc4
   152fc:	str	r2, [fp, #-64]	; 0xffffffc0
   15300:	str	r3, [fp, #-68]	; 0xffffffbc
   15304:	bl	11224 <__errno_location@plt>
   15308:	mov	r3, r0
   1530c:	ldr	r3, [r3]
   15310:	str	r3, [fp, #-24]	; 0xffffffe8
   15314:	ldr	r3, [pc, #640]	; 1559c <__assert_fail@plt+0x427c>
   15318:	ldr	r3, [r3]
   1531c:	str	r3, [fp, #-16]
   15320:	mvn	r3, #-2147483648	; 0x80000000
   15324:	str	r3, [fp, #-28]	; 0xffffffe4
   15328:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1532c:	cmp	r3, #0
   15330:	blt	15344 <__assert_fail@plt+0x4024>
   15334:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15338:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1533c:	cmp	r2, r3
   15340:	blt	15348 <__assert_fail@plt+0x4028>
   15344:	bl	112fc <abort@plt>
   15348:	ldr	r3, [pc, #592]	; 155a0 <__assert_fail@plt+0x4280>
   1534c:	ldr	r2, [r3]
   15350:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15354:	cmp	r2, r3
   15358:	bgt	1542c <__assert_fail@plt+0x410c>
   1535c:	ldr	r3, [fp, #-16]
   15360:	ldr	r2, [pc, #572]	; 155a4 <__assert_fail@plt+0x4284>
   15364:	cmp	r3, r2
   15368:	moveq	r3, #1
   1536c:	movne	r3, #0
   15370:	strb	r3, [fp, #-29]	; 0xffffffe3
   15374:	ldr	r3, [pc, #548]	; 155a0 <__assert_fail@plt+0x4280>
   15378:	ldr	r3, [r3]
   1537c:	str	r3, [fp, #-48]	; 0xffffffd0
   15380:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   15384:	cmp	r3, #0
   15388:	beq	15394 <__assert_fail@plt+0x4074>
   1538c:	mov	r0, #0
   15390:	b	15398 <__assert_fail@plt+0x4078>
   15394:	ldr	r0, [fp, #-16]
   15398:	ldr	r3, [pc, #512]	; 155a0 <__assert_fail@plt+0x4280>
   1539c:	ldr	r3, [r3]
   153a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   153a4:	sub	r3, r2, r3
   153a8:	add	r2, r3, #1
   153ac:	sub	r1, fp, #48	; 0x30
   153b0:	mov	r3, #8
   153b4:	str	r3, [sp]
   153b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   153bc:	bl	2f980 <__assert_fail@plt+0x1e660>
   153c0:	str	r0, [fp, #-16]
   153c4:	ldr	r2, [pc, #464]	; 1559c <__assert_fail@plt+0x427c>
   153c8:	ldr	r3, [fp, #-16]
   153cc:	str	r3, [r2]
   153d0:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   153d4:	cmp	r3, #0
   153d8:	beq	153ec <__assert_fail@plt+0x40cc>
   153dc:	ldr	r3, [fp, #-16]
   153e0:	ldr	r2, [pc, #444]	; 155a4 <__assert_fail@plt+0x4284>
   153e4:	ldm	r2, {r0, r1}
   153e8:	stm	r3, {r0, r1}
   153ec:	ldr	r3, [pc, #428]	; 155a0 <__assert_fail@plt+0x4280>
   153f0:	ldr	r3, [r3]
   153f4:	lsl	r3, r3, #3
   153f8:	ldr	r2, [fp, #-16]
   153fc:	add	r0, r2, r3
   15400:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15404:	ldr	r3, [pc, #404]	; 155a0 <__assert_fail@plt+0x4280>
   15408:	ldr	r3, [r3]
   1540c:	sub	r3, r2, r3
   15410:	lsl	r3, r3, #3
   15414:	mov	r2, r3
   15418:	mov	r1, #0
   1541c:	bl	11248 <memset@plt>
   15420:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15424:	ldr	r2, [pc, #372]	; 155a0 <__assert_fail@plt+0x4280>
   15428:	str	r3, [r2]
   1542c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15430:	lsl	r3, r3, #3
   15434:	ldr	r2, [fp, #-16]
   15438:	add	r3, r2, r3
   1543c:	ldr	r3, [r3]
   15440:	str	r3, [fp, #-36]	; 0xffffffdc
   15444:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15448:	lsl	r3, r3, #3
   1544c:	ldr	r2, [fp, #-16]
   15450:	add	r3, r2, r3
   15454:	ldr	r3, [r3, #4]
   15458:	str	r3, [fp, #-20]	; 0xffffffec
   1545c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15460:	ldr	r3, [r3, #4]
   15464:	orr	r3, r3, #1
   15468:	str	r3, [fp, #-40]	; 0xffffffd8
   1546c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15470:	ldr	r3, [r3]
   15474:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15478:	add	r2, r2, #8
   1547c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15480:	ldr	r1, [r1, #40]	; 0x28
   15484:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15488:	ldr	r0, [r0, #44]	; 0x2c
   1548c:	str	r0, [sp, #16]
   15490:	str	r1, [sp, #12]
   15494:	str	r2, [sp, #8]
   15498:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1549c:	str	r2, [sp, #4]
   154a0:	str	r3, [sp]
   154a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   154a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   154ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   154b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   154b4:	bl	138f8 <__assert_fail@plt+0x25d8>
   154b8:	str	r0, [fp, #-44]	; 0xffffffd4
   154bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   154c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154c4:	cmp	r2, r3
   154c8:	bhi	1557c <__assert_fail@plt+0x425c>
   154cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   154d0:	lsl	r3, r3, #3
   154d4:	ldr	r2, [fp, #-16]
   154d8:	add	r3, r2, r3
   154dc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   154e0:	add	r2, r2, #1
   154e4:	str	r2, [fp, #-36]	; 0xffffffdc
   154e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   154ec:	str	r2, [r3]
   154f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   154f4:	ldr	r2, [pc, #172]	; 155a8 <__assert_fail@plt+0x4288>
   154f8:	cmp	r3, r2
   154fc:	beq	15508 <__assert_fail@plt+0x41e8>
   15500:	ldr	r0, [fp, #-20]	; 0xffffffec
   15504:	bl	31500 <__assert_fail@plt+0x201e0>
   15508:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1550c:	lsl	r3, r3, #3
   15510:	ldr	r2, [fp, #-16]
   15514:	add	r4, r2, r3
   15518:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1551c:	bl	2f660 <__assert_fail@plt+0x1e340>
   15520:	mov	r3, r0
   15524:	str	r3, [fp, #-20]	; 0xffffffec
   15528:	ldr	r3, [fp, #-20]	; 0xffffffec
   1552c:	str	r3, [r4, #4]
   15530:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15534:	ldr	r3, [r3]
   15538:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1553c:	add	r2, r2, #8
   15540:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15544:	ldr	r1, [r1, #40]	; 0x28
   15548:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1554c:	ldr	r0, [r0, #44]	; 0x2c
   15550:	str	r0, [sp, #16]
   15554:	str	r1, [sp, #12]
   15558:	str	r2, [sp, #8]
   1555c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15560:	str	r2, [sp, #4]
   15564:	str	r3, [sp]
   15568:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1556c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15570:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15574:	ldr	r0, [fp, #-20]	; 0xffffffec
   15578:	bl	138f8 <__assert_fail@plt+0x25d8>
   1557c:	bl	11224 <__errno_location@plt>
   15580:	mov	r2, r0
   15584:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15588:	str	r3, [r2]
   1558c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15590:	mov	r0, r3
   15594:	sub	sp, fp, #8
   15598:	pop	{r4, fp, pc}
   1559c:	andeq	r4, r4, r4, lsl #3
   155a0:	andeq	r4, r4, r8, ror r1
   155a4:	andeq	r4, r4, ip, ror r1
   155a8:	andeq	r4, r4, r4, asr #11
   155ac:	push	{fp, lr}
   155b0:	add	fp, sp, #4
   155b4:	sub	sp, sp, #8
   155b8:	str	r0, [fp, #-8]
   155bc:	str	r1, [fp, #-12]
   155c0:	ldr	r3, [pc, #28]	; 155e4 <__assert_fail@plt+0x42c4>
   155c4:	mvn	r2, #0
   155c8:	ldr	r1, [fp, #-12]
   155cc:	ldr	r0, [fp, #-8]
   155d0:	bl	152e8 <__assert_fail@plt+0x3fc8>
   155d4:	mov	r3, r0
   155d8:	mov	r0, r3
   155dc:	sub	sp, fp, #4
   155e0:	pop	{fp, pc}
   155e4:	muleq	r4, r4, r5
   155e8:	push	{fp, lr}
   155ec:	add	fp, sp, #4
   155f0:	sub	sp, sp, #16
   155f4:	str	r0, [fp, #-8]
   155f8:	str	r1, [fp, #-12]
   155fc:	str	r2, [fp, #-16]
   15600:	ldr	r3, [pc, #28]	; 15624 <__assert_fail@plt+0x4304>
   15604:	ldr	r2, [fp, #-16]
   15608:	ldr	r1, [fp, #-12]
   1560c:	ldr	r0, [fp, #-8]
   15610:	bl	152e8 <__assert_fail@plt+0x3fc8>
   15614:	mov	r3, r0
   15618:	mov	r0, r3
   1561c:	sub	sp, fp, #4
   15620:	pop	{fp, pc}
   15624:	muleq	r4, r4, r5
   15628:	push	{fp, lr}
   1562c:	add	fp, sp, #4
   15630:	sub	sp, sp, #8
   15634:	str	r0, [fp, #-8]
   15638:	ldr	r1, [fp, #-8]
   1563c:	mov	r0, #0
   15640:	bl	155ac <__assert_fail@plt+0x428c>
   15644:	mov	r3, r0
   15648:	mov	r0, r3
   1564c:	sub	sp, fp, #4
   15650:	pop	{fp, pc}
   15654:	push	{fp, lr}
   15658:	add	fp, sp, #4
   1565c:	sub	sp, sp, #8
   15660:	str	r0, [fp, #-8]
   15664:	str	r1, [fp, #-12]
   15668:	ldr	r2, [fp, #-12]
   1566c:	ldr	r1, [fp, #-8]
   15670:	mov	r0, #0
   15674:	bl	155e8 <__assert_fail@plt+0x42c8>
   15678:	mov	r3, r0
   1567c:	mov	r0, r3
   15680:	sub	sp, fp, #4
   15684:	pop	{fp, pc}
   15688:	push	{fp, lr}
   1568c:	add	fp, sp, #4
   15690:	sub	sp, sp, #64	; 0x40
   15694:	str	r0, [fp, #-56]	; 0xffffffc8
   15698:	str	r1, [fp, #-60]	; 0xffffffc4
   1569c:	str	r2, [fp, #-64]	; 0xffffffc0
   156a0:	sub	r3, fp, #52	; 0x34
   156a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   156a8:	mov	r0, r3
   156ac:	bl	13794 <__assert_fail@plt+0x2474>
   156b0:	sub	r3, fp, #52	; 0x34
   156b4:	mvn	r2, #0
   156b8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   156bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   156c0:	bl	152e8 <__assert_fail@plt+0x3fc8>
   156c4:	mov	r3, r0
   156c8:	mov	r0, r3
   156cc:	sub	sp, fp, #4
   156d0:	pop	{fp, pc}
   156d4:	push	{fp, lr}
   156d8:	add	fp, sp, #4
   156dc:	sub	sp, sp, #64	; 0x40
   156e0:	str	r0, [fp, #-56]	; 0xffffffc8
   156e4:	str	r1, [fp, #-60]	; 0xffffffc4
   156e8:	str	r2, [fp, #-64]	; 0xffffffc0
   156ec:	str	r3, [fp, #-68]	; 0xffffffbc
   156f0:	sub	r3, fp, #52	; 0x34
   156f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   156f8:	mov	r0, r3
   156fc:	bl	13794 <__assert_fail@plt+0x2474>
   15700:	sub	r3, fp, #52	; 0x34
   15704:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15708:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1570c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15710:	bl	152e8 <__assert_fail@plt+0x3fc8>
   15714:	mov	r3, r0
   15718:	mov	r0, r3
   1571c:	sub	sp, fp, #4
   15720:	pop	{fp, pc}
   15724:	push	{fp, lr}
   15728:	add	fp, sp, #4
   1572c:	sub	sp, sp, #8
   15730:	str	r0, [fp, #-8]
   15734:	str	r1, [fp, #-12]
   15738:	ldr	r2, [fp, #-12]
   1573c:	ldr	r1, [fp, #-8]
   15740:	mov	r0, #0
   15744:	bl	15688 <__assert_fail@plt+0x4368>
   15748:	mov	r3, r0
   1574c:	mov	r0, r3
   15750:	sub	sp, fp, #4
   15754:	pop	{fp, pc}
   15758:	push	{fp, lr}
   1575c:	add	fp, sp, #4
   15760:	sub	sp, sp, #16
   15764:	str	r0, [fp, #-8]
   15768:	str	r1, [fp, #-12]
   1576c:	str	r2, [fp, #-16]
   15770:	ldr	r3, [fp, #-16]
   15774:	ldr	r2, [fp, #-12]
   15778:	ldr	r1, [fp, #-8]
   1577c:	mov	r0, #0
   15780:	bl	156d4 <__assert_fail@plt+0x43b4>
   15784:	mov	r3, r0
   15788:	mov	r0, r3
   1578c:	sub	sp, fp, #4
   15790:	pop	{fp, pc}
   15794:	push	{fp, lr}
   15798:	add	fp, sp, #4
   1579c:	sub	sp, sp, #64	; 0x40
   157a0:	str	r0, [fp, #-56]	; 0xffffffc8
   157a4:	str	r1, [fp, #-60]	; 0xffffffc4
   157a8:	mov	r3, r2
   157ac:	strb	r3, [fp, #-61]	; 0xffffffc3
   157b0:	ldr	r3, [pc, #84]	; 1580c <__assert_fail@plt+0x44ec>
   157b4:	sub	ip, fp, #52	; 0x34
   157b8:	mov	lr, r3
   157bc:	ldm	lr!, {r0, r1, r2, r3}
   157c0:	stmia	ip!, {r0, r1, r2, r3}
   157c4:	ldm	lr!, {r0, r1, r2, r3}
   157c8:	stmia	ip!, {r0, r1, r2, r3}
   157cc:	ldm	lr, {r0, r1, r2, r3}
   157d0:	stm	ip, {r0, r1, r2, r3}
   157d4:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   157d8:	sub	r3, fp, #52	; 0x34
   157dc:	mov	r2, #1
   157e0:	mov	r0, r3
   157e4:	bl	13600 <__assert_fail@plt+0x22e0>
   157e8:	sub	r3, fp, #52	; 0x34
   157ec:	ldr	r2, [fp, #-60]	; 0xffffffc4
   157f0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   157f4:	mov	r0, #0
   157f8:	bl	152e8 <__assert_fail@plt+0x3fc8>
   157fc:	mov	r3, r0
   15800:	mov	r0, r3
   15804:	sub	sp, fp, #4
   15808:	pop	{fp, pc}
   1580c:	muleq	r4, r4, r5
   15810:	push	{fp, lr}
   15814:	add	fp, sp, #4
   15818:	sub	sp, sp, #8
   1581c:	str	r0, [fp, #-8]
   15820:	mov	r3, r1
   15824:	strb	r3, [fp, #-9]
   15828:	ldrb	r3, [fp, #-9]
   1582c:	mov	r2, r3
   15830:	mvn	r1, #0
   15834:	ldr	r0, [fp, #-8]
   15838:	bl	15794 <__assert_fail@plt+0x4474>
   1583c:	mov	r3, r0
   15840:	mov	r0, r3
   15844:	sub	sp, fp, #4
   15848:	pop	{fp, pc}
   1584c:	push	{fp, lr}
   15850:	add	fp, sp, #4
   15854:	sub	sp, sp, #8
   15858:	str	r0, [fp, #-8]
   1585c:	mov	r1, #58	; 0x3a
   15860:	ldr	r0, [fp, #-8]
   15864:	bl	15810 <__assert_fail@plt+0x44f0>
   15868:	mov	r3, r0
   1586c:	mov	r0, r3
   15870:	sub	sp, fp, #4
   15874:	pop	{fp, pc}
   15878:	push	{fp, lr}
   1587c:	add	fp, sp, #4
   15880:	sub	sp, sp, #8
   15884:	str	r0, [fp, #-8]
   15888:	str	r1, [fp, #-12]
   1588c:	mov	r2, #58	; 0x3a
   15890:	ldr	r1, [fp, #-12]
   15894:	ldr	r0, [fp, #-8]
   15898:	bl	15794 <__assert_fail@plt+0x4474>
   1589c:	mov	r3, r0
   158a0:	mov	r0, r3
   158a4:	sub	sp, fp, #4
   158a8:	pop	{fp, pc}
   158ac:	push	{fp, lr}
   158b0:	add	fp, sp, #4
   158b4:	sub	sp, sp, #112	; 0x70
   158b8:	str	r0, [fp, #-56]	; 0xffffffc8
   158bc:	str	r1, [fp, #-60]	; 0xffffffc4
   158c0:	str	r2, [fp, #-64]	; 0xffffffc0
   158c4:	sub	r3, fp, #116	; 0x74
   158c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   158cc:	mov	r0, r3
   158d0:	bl	13794 <__assert_fail@plt+0x2474>
   158d4:	sub	ip, fp, #52	; 0x34
   158d8:	sub	lr, fp, #116	; 0x74
   158dc:	ldm	lr!, {r0, r1, r2, r3}
   158e0:	stmia	ip!, {r0, r1, r2, r3}
   158e4:	ldm	lr!, {r0, r1, r2, r3}
   158e8:	stmia	ip!, {r0, r1, r2, r3}
   158ec:	ldm	lr, {r0, r1, r2, r3}
   158f0:	stm	ip, {r0, r1, r2, r3}
   158f4:	sub	r3, fp, #52	; 0x34
   158f8:	mov	r2, #1
   158fc:	mov	r1, #58	; 0x3a
   15900:	mov	r0, r3
   15904:	bl	13600 <__assert_fail@plt+0x22e0>
   15908:	sub	r3, fp, #52	; 0x34
   1590c:	mvn	r2, #0
   15910:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15914:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15918:	bl	152e8 <__assert_fail@plt+0x3fc8>
   1591c:	mov	r3, r0
   15920:	mov	r0, r3
   15924:	sub	sp, fp, #4
   15928:	pop	{fp, pc}
   1592c:	push	{fp, lr}
   15930:	add	fp, sp, #4
   15934:	sub	sp, sp, #24
   15938:	str	r0, [fp, #-8]
   1593c:	str	r1, [fp, #-12]
   15940:	str	r2, [fp, #-16]
   15944:	str	r3, [fp, #-20]	; 0xffffffec
   15948:	mvn	r3, #0
   1594c:	str	r3, [sp]
   15950:	ldr	r3, [fp, #-20]	; 0xffffffec
   15954:	ldr	r2, [fp, #-16]
   15958:	ldr	r1, [fp, #-12]
   1595c:	ldr	r0, [fp, #-8]
   15960:	bl	15974 <__assert_fail@plt+0x4654>
   15964:	mov	r3, r0
   15968:	mov	r0, r3
   1596c:	sub	sp, fp, #4
   15970:	pop	{fp, pc}
   15974:	push	{fp, lr}
   15978:	add	fp, sp, #4
   1597c:	sub	sp, sp, #64	; 0x40
   15980:	str	r0, [fp, #-56]	; 0xffffffc8
   15984:	str	r1, [fp, #-60]	; 0xffffffc4
   15988:	str	r2, [fp, #-64]	; 0xffffffc0
   1598c:	str	r3, [fp, #-68]	; 0xffffffbc
   15990:	ldr	r3, [pc, #84]	; 159ec <__assert_fail@plt+0x46cc>
   15994:	sub	ip, fp, #52	; 0x34
   15998:	mov	lr, r3
   1599c:	ldm	lr!, {r0, r1, r2, r3}
   159a0:	stmia	ip!, {r0, r1, r2, r3}
   159a4:	ldm	lr!, {r0, r1, r2, r3}
   159a8:	stmia	ip!, {r0, r1, r2, r3}
   159ac:	ldm	lr, {r0, r1, r2, r3}
   159b0:	stm	ip, {r0, r1, r2, r3}
   159b4:	sub	r3, fp, #52	; 0x34
   159b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   159bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   159c0:	mov	r0, r3
   159c4:	bl	13718 <__assert_fail@plt+0x23f8>
   159c8:	sub	r3, fp, #52	; 0x34
   159cc:	ldr	r2, [fp, #4]
   159d0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   159d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   159d8:	bl	152e8 <__assert_fail@plt+0x3fc8>
   159dc:	mov	r3, r0
   159e0:	mov	r0, r3
   159e4:	sub	sp, fp, #4
   159e8:	pop	{fp, pc}
   159ec:	muleq	r4, r4, r5
   159f0:	push	{fp, lr}
   159f4:	add	fp, sp, #4
   159f8:	sub	sp, sp, #16
   159fc:	str	r0, [fp, #-8]
   15a00:	str	r1, [fp, #-12]
   15a04:	str	r2, [fp, #-16]
   15a08:	ldr	r3, [fp, #-16]
   15a0c:	ldr	r2, [fp, #-12]
   15a10:	ldr	r1, [fp, #-8]
   15a14:	mov	r0, #0
   15a18:	bl	1592c <__assert_fail@plt+0x460c>
   15a1c:	mov	r3, r0
   15a20:	mov	r0, r3
   15a24:	sub	sp, fp, #4
   15a28:	pop	{fp, pc}
   15a2c:	push	{fp, lr}
   15a30:	add	fp, sp, #4
   15a34:	sub	sp, sp, #24
   15a38:	str	r0, [fp, #-8]
   15a3c:	str	r1, [fp, #-12]
   15a40:	str	r2, [fp, #-16]
   15a44:	str	r3, [fp, #-20]	; 0xffffffec
   15a48:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a4c:	str	r3, [sp]
   15a50:	ldr	r3, [fp, #-16]
   15a54:	ldr	r2, [fp, #-12]
   15a58:	ldr	r1, [fp, #-8]
   15a5c:	mov	r0, #0
   15a60:	bl	15974 <__assert_fail@plt+0x4654>
   15a64:	mov	r3, r0
   15a68:	mov	r0, r3
   15a6c:	sub	sp, fp, #4
   15a70:	pop	{fp, pc}
   15a74:	push	{fp, lr}
   15a78:	add	fp, sp, #4
   15a7c:	sub	sp, sp, #16
   15a80:	str	r0, [fp, #-8]
   15a84:	str	r1, [fp, #-12]
   15a88:	str	r2, [fp, #-16]
   15a8c:	ldr	r3, [pc, #28]	; 15ab0 <__assert_fail@plt+0x4790>
   15a90:	ldr	r2, [fp, #-16]
   15a94:	ldr	r1, [fp, #-12]
   15a98:	ldr	r0, [fp, #-8]
   15a9c:	bl	152e8 <__assert_fail@plt+0x3fc8>
   15aa0:	mov	r3, r0
   15aa4:	mov	r0, r3
   15aa8:	sub	sp, fp, #4
   15aac:	pop	{fp, pc}
   15ab0:	andeq	r4, r4, r8, lsl #3
   15ab4:	push	{fp, lr}
   15ab8:	add	fp, sp, #4
   15abc:	sub	sp, sp, #8
   15ac0:	str	r0, [fp, #-8]
   15ac4:	str	r1, [fp, #-12]
   15ac8:	ldr	r2, [fp, #-12]
   15acc:	ldr	r1, [fp, #-8]
   15ad0:	mov	r0, #0
   15ad4:	bl	15a74 <__assert_fail@plt+0x4754>
   15ad8:	mov	r3, r0
   15adc:	mov	r0, r3
   15ae0:	sub	sp, fp, #4
   15ae4:	pop	{fp, pc}
   15ae8:	push	{fp, lr}
   15aec:	add	fp, sp, #4
   15af0:	sub	sp, sp, #8
   15af4:	str	r0, [fp, #-8]
   15af8:	str	r1, [fp, #-12]
   15afc:	mvn	r2, #0
   15b00:	ldr	r1, [fp, #-12]
   15b04:	ldr	r0, [fp, #-8]
   15b08:	bl	15a74 <__assert_fail@plt+0x4754>
   15b0c:	mov	r3, r0
   15b10:	mov	r0, r3
   15b14:	sub	sp, fp, #4
   15b18:	pop	{fp, pc}
   15b1c:	push	{fp, lr}
   15b20:	add	fp, sp, #4
   15b24:	sub	sp, sp, #8
   15b28:	str	r0, [fp, #-8]
   15b2c:	ldr	r1, [fp, #-8]
   15b30:	mov	r0, #0
   15b34:	bl	15ae8 <__assert_fail@plt+0x47c8>
   15b38:	mov	r3, r0
   15b3c:	mov	r0, r3
   15b40:	sub	sp, fp, #4
   15b44:	pop	{fp, pc}
   15b48:	push	{fp}		; (str fp, [sp, #-4]!)
   15b4c:	add	fp, sp, #0
   15b50:	mvn	r3, #0
   15b54:	mov	r0, r3
   15b58:	add	sp, fp, #0
   15b5c:	pop	{fp}		; (ldr fp, [sp], #4)
   15b60:	bx	lr
   15b64:	push	{fp}		; (str fp, [sp, #-4]!)
   15b68:	add	fp, sp, #0
   15b6c:	sub	sp, sp, #12
   15b70:	str	r0, [fp, #-8]
   15b74:	str	r1, [fp, #-12]
   15b78:	ldr	r3, [fp, #-12]
   15b7c:	add	r2, r3, #31
   15b80:	cmp	r3, #0
   15b84:	movlt	r3, r2
   15b88:	movge	r3, r3
   15b8c:	asr	r3, r3, #5
   15b90:	mov	r0, r3
   15b94:	mov	r3, r0
   15b98:	lsl	r3, r3, #2
   15b9c:	ldr	r2, [fp, #-8]
   15ba0:	add	r1, r2, r3
   15ba4:	mov	r3, r0
   15ba8:	lsl	r3, r3, #2
   15bac:	ldr	r2, [fp, #-8]
   15bb0:	add	r3, r2, r3
   15bb4:	ldr	r0, [r3]
   15bb8:	ldr	r2, [fp, #-12]
   15bbc:	asr	r3, r2, #31
   15bc0:	lsr	r3, r3, #27
   15bc4:	add	r2, r2, r3
   15bc8:	and	r2, r2, #31
   15bcc:	sub	r3, r2, r3
   15bd0:	mov	r2, r3
   15bd4:	mov	r3, #1
   15bd8:	lsl	r3, r3, r2
   15bdc:	orr	r3, r0, r3
   15be0:	str	r3, [r1]
   15be4:	nop			; (mov r0, r0)
   15be8:	add	sp, fp, #0
   15bec:	pop	{fp}		; (ldr fp, [sp], #4)
   15bf0:	bx	lr
   15bf4:	push	{fp}		; (str fp, [sp, #-4]!)
   15bf8:	add	fp, sp, #0
   15bfc:	sub	sp, sp, #12
   15c00:	str	r0, [fp, #-8]
   15c04:	str	r1, [fp, #-12]
   15c08:	ldr	r3, [fp, #-12]
   15c0c:	add	r2, r3, #31
   15c10:	cmp	r3, #0
   15c14:	movlt	r3, r2
   15c18:	movge	r3, r3
   15c1c:	asr	r3, r3, #5
   15c20:	mov	r0, r3
   15c24:	mov	r3, r0
   15c28:	lsl	r3, r3, #2
   15c2c:	ldr	r2, [fp, #-8]
   15c30:	add	r1, r2, r3
   15c34:	mov	r3, r0
   15c38:	lsl	r3, r3, #2
   15c3c:	ldr	r2, [fp, #-8]
   15c40:	add	r3, r2, r3
   15c44:	ldr	r0, [r3]
   15c48:	ldr	r2, [fp, #-12]
   15c4c:	asr	r3, r2, #31
   15c50:	lsr	r3, r3, #27
   15c54:	add	r2, r2, r3
   15c58:	and	r2, r2, #31
   15c5c:	sub	r3, r2, r3
   15c60:	mov	r2, r3
   15c64:	mov	r3, #1
   15c68:	lsl	r3, r3, r2
   15c6c:	mvn	r3, r3
   15c70:	and	r3, r3, r0
   15c74:	str	r3, [r1]
   15c78:	nop			; (mov r0, r0)
   15c7c:	add	sp, fp, #0
   15c80:	pop	{fp}		; (ldr fp, [sp], #4)
   15c84:	bx	lr
   15c88:	push	{fp}		; (str fp, [sp, #-4]!)
   15c8c:	add	fp, sp, #0
   15c90:	sub	sp, sp, #12
   15c94:	str	r0, [fp, #-8]
   15c98:	str	r1, [fp, #-12]
   15c9c:	ldr	r3, [fp, #-12]
   15ca0:	add	r2, r3, #31
   15ca4:	cmp	r3, #0
   15ca8:	movlt	r3, r2
   15cac:	movge	r3, r3
   15cb0:	asr	r3, r3, #5
   15cb4:	lsl	r3, r3, #2
   15cb8:	ldr	r2, [fp, #-8]
   15cbc:	add	r3, r2, r3
   15cc0:	ldr	r1, [r3]
   15cc4:	ldr	r2, [fp, #-12]
   15cc8:	asr	r3, r2, #31
   15ccc:	lsr	r3, r3, #27
   15cd0:	add	r2, r2, r3
   15cd4:	and	r2, r2, #31
   15cd8:	sub	r3, r2, r3
   15cdc:	lsr	r3, r1, r3
   15ce0:	and	r3, r3, #1
   15ce4:	cmp	r3, #0
   15ce8:	movne	r3, #1
   15cec:	moveq	r3, #0
   15cf0:	uxtb	r3, r3
   15cf4:	mov	r0, r3
   15cf8:	add	sp, fp, #0
   15cfc:	pop	{fp}		; (ldr fp, [sp], #4)
   15d00:	bx	lr
   15d04:	push	{fp, lr}
   15d08:	add	fp, sp, #4
   15d0c:	sub	sp, sp, #8
   15d10:	str	r0, [fp, #-8]
   15d14:	mov	r2, #32
   15d18:	mov	r1, #0
   15d1c:	ldr	r0, [fp, #-8]
   15d20:	bl	11248 <memset@plt>
   15d24:	nop			; (mov r0, r0)
   15d28:	sub	sp, fp, #4
   15d2c:	pop	{fp, pc}
   15d30:	push	{fp, lr}
   15d34:	add	fp, sp, #4
   15d38:	sub	sp, sp, #8
   15d3c:	str	r0, [fp, #-8]
   15d40:	mov	r2, #32
   15d44:	mvn	r1, #0
   15d48:	ldr	r0, [fp, #-8]
   15d4c:	bl	11248 <memset@plt>
   15d50:	nop			; (mov r0, r0)
   15d54:	sub	sp, fp, #4
   15d58:	pop	{fp, pc}
   15d5c:	push	{fp, lr}
   15d60:	add	fp, sp, #4
   15d64:	sub	sp, sp, #8
   15d68:	str	r0, [fp, #-8]
   15d6c:	str	r1, [fp, #-12]
   15d70:	mov	r2, #32
   15d74:	ldr	r1, [fp, #-12]
   15d78:	ldr	r0, [fp, #-8]
   15d7c:	bl	110a4 <memcpy@plt>
   15d80:	nop			; (mov r0, r0)
   15d84:	sub	sp, fp, #4
   15d88:	pop	{fp, pc}
   15d8c:	push	{fp}		; (str fp, [sp, #-4]!)
   15d90:	add	fp, sp, #0
   15d94:	sub	sp, sp, #20
   15d98:	str	r0, [fp, #-16]
   15d9c:	mov	r3, #0
   15da0:	str	r3, [fp, #-8]
   15da4:	b	15de0 <__assert_fail@plt+0x4ac0>
   15da8:	ldr	r3, [fp, #-8]
   15dac:	lsl	r3, r3, #2
   15db0:	ldr	r2, [fp, #-16]
   15db4:	add	r3, r2, r3
   15db8:	ldr	r2, [fp, #-8]
   15dbc:	lsl	r2, r2, #2
   15dc0:	ldr	r1, [fp, #-16]
   15dc4:	add	r2, r1, r2
   15dc8:	ldr	r2, [r2]
   15dcc:	mvn	r2, r2
   15dd0:	str	r2, [r3]
   15dd4:	ldr	r3, [fp, #-8]
   15dd8:	add	r3, r3, #1
   15ddc:	str	r3, [fp, #-8]
   15de0:	ldr	r3, [fp, #-8]
   15de4:	cmp	r3, #7
   15de8:	ble	15da8 <__assert_fail@plt+0x4a88>
   15dec:	nop			; (mov r0, r0)
   15df0:	add	sp, fp, #0
   15df4:	pop	{fp}		; (ldr fp, [sp], #4)
   15df8:	bx	lr
   15dfc:	push	{fp}		; (str fp, [sp, #-4]!)
   15e00:	add	fp, sp, #0
   15e04:	sub	sp, sp, #20
   15e08:	str	r0, [fp, #-16]
   15e0c:	str	r1, [fp, #-20]	; 0xffffffec
   15e10:	mov	r3, #0
   15e14:	str	r3, [fp, #-8]
   15e18:	b	15e68 <__assert_fail@plt+0x4b48>
   15e1c:	ldr	r3, [fp, #-8]
   15e20:	lsl	r3, r3, #2
   15e24:	ldr	r2, [fp, #-16]
   15e28:	add	r3, r2, r3
   15e2c:	ldr	r2, [fp, #-8]
   15e30:	lsl	r2, r2, #2
   15e34:	ldr	r1, [fp, #-16]
   15e38:	add	r2, r1, r2
   15e3c:	ldr	r1, [r2]
   15e40:	ldr	r2, [fp, #-8]
   15e44:	lsl	r2, r2, #2
   15e48:	ldr	r0, [fp, #-20]	; 0xffffffec
   15e4c:	add	r2, r0, r2
   15e50:	ldr	r2, [r2]
   15e54:	orr	r2, r1, r2
   15e58:	str	r2, [r3]
   15e5c:	ldr	r3, [fp, #-8]
   15e60:	add	r3, r3, #1
   15e64:	str	r3, [fp, #-8]
   15e68:	ldr	r3, [fp, #-8]
   15e6c:	cmp	r3, #7
   15e70:	ble	15e1c <__assert_fail@plt+0x4afc>
   15e74:	nop			; (mov r0, r0)
   15e78:	add	sp, fp, #0
   15e7c:	pop	{fp}		; (ldr fp, [sp], #4)
   15e80:	bx	lr
   15e84:	push	{fp}		; (str fp, [sp, #-4]!)
   15e88:	add	fp, sp, #0
   15e8c:	sub	sp, sp, #20
   15e90:	str	r0, [fp, #-16]
   15e94:	str	r1, [fp, #-20]	; 0xffffffec
   15e98:	mov	r3, #0
   15e9c:	str	r3, [fp, #-8]
   15ea0:	b	15ef0 <__assert_fail@plt+0x4bd0>
   15ea4:	ldr	r3, [fp, #-8]
   15ea8:	lsl	r3, r3, #2
   15eac:	ldr	r2, [fp, #-16]
   15eb0:	add	r3, r2, r3
   15eb4:	ldr	r2, [fp, #-8]
   15eb8:	lsl	r2, r2, #2
   15ebc:	ldr	r1, [fp, #-16]
   15ec0:	add	r2, r1, r2
   15ec4:	ldr	r1, [r2]
   15ec8:	ldr	r2, [fp, #-8]
   15ecc:	lsl	r2, r2, #2
   15ed0:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ed4:	add	r2, r0, r2
   15ed8:	ldr	r2, [r2]
   15edc:	and	r2, r2, r1
   15ee0:	str	r2, [r3]
   15ee4:	ldr	r3, [fp, #-8]
   15ee8:	add	r3, r3, #1
   15eec:	str	r3, [fp, #-8]
   15ef0:	ldr	r3, [fp, #-8]
   15ef4:	cmp	r3, #7
   15ef8:	ble	15ea4 <__assert_fail@plt+0x4b84>
   15efc:	nop			; (mov r0, r0)
   15f00:	add	sp, fp, #0
   15f04:	pop	{fp}		; (ldr fp, [sp], #4)
   15f08:	bx	lr
   15f0c:	push	{fp}		; (str fp, [sp, #-4]!)
   15f10:	add	fp, sp, #0
   15f14:	sub	sp, sp, #20
   15f18:	str	r0, [fp, #-16]
   15f1c:	str	r1, [fp, #-20]	; 0xffffffec
   15f20:	ldr	r3, [fp, #-16]
   15f24:	ldr	r3, [r3, #80]	; 0x50
   15f28:	cmp	r3, #1
   15f2c:	bne	15f38 <__assert_fail@plt+0x4c18>
   15f30:	mov	r3, #1
   15f34:	b	15fa0 <__assert_fail@plt+0x4c80>
   15f38:	mov	r3, #1
   15f3c:	str	r3, [fp, #-8]
   15f40:	b	15f78 <__assert_fail@plt+0x4c58>
   15f44:	ldr	r3, [fp, #-16]
   15f48:	ldr	r2, [r3, #8]
   15f4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15f50:	ldr	r3, [fp, #-8]
   15f54:	add	r3, r1, r3
   15f58:	lsl	r3, r3, #2
   15f5c:	add	r3, r2, r3
   15f60:	ldr	r3, [r3]
   15f64:	cmn	r3, #1
   15f68:	bne	15f98 <__assert_fail@plt+0x4c78>
   15f6c:	ldr	r3, [fp, #-8]
   15f70:	add	r3, r3, #1
   15f74:	str	r3, [fp, #-8]
   15f78:	ldr	r2, [fp, #-20]	; 0xffffffec
   15f7c:	ldr	r3, [fp, #-8]
   15f80:	add	r2, r2, r3
   15f84:	ldr	r3, [fp, #-16]
   15f88:	ldr	r3, [r3, #28]
   15f8c:	cmp	r2, r3
   15f90:	blt	15f44 <__assert_fail@plt+0x4c24>
   15f94:	b	15f9c <__assert_fail@plt+0x4c7c>
   15f98:	nop			; (mov r0, r0)
   15f9c:	ldr	r3, [fp, #-8]
   15fa0:	mov	r0, r3
   15fa4:	add	sp, fp, #0
   15fa8:	pop	{fp}		; (ldr fp, [sp], #4)
   15fac:	bx	lr
   15fb0:	push	{fp}		; (str fp, [sp, #-4]!)
   15fb4:	add	fp, sp, #0
   15fb8:	sub	sp, sp, #12
   15fbc:	str	r0, [fp, #-8]
   15fc0:	str	r1, [fp, #-12]
   15fc4:	ldr	r3, [fp, #-8]
   15fc8:	ldr	r3, [r3, #80]	; 0x50
   15fcc:	cmp	r3, #1
   15fd0:	bne	15fec <__assert_fail@plt+0x4ccc>
   15fd4:	ldr	r3, [fp, #-8]
   15fd8:	ldr	r2, [r3, #4]
   15fdc:	ldr	r3, [fp, #-12]
   15fe0:	add	r3, r2, r3
   15fe4:	ldrb	r3, [r3]
   15fe8:	b	16004 <__assert_fail@plt+0x4ce4>
   15fec:	ldr	r3, [fp, #-8]
   15ff0:	ldr	r2, [r3, #8]
   15ff4:	ldr	r3, [fp, #-12]
   15ff8:	lsl	r3, r3, #2
   15ffc:	add	r3, r2, r3
   16000:	ldr	r3, [r3]
   16004:	mov	r0, r3
   16008:	add	sp, fp, #0
   1600c:	pop	{fp}		; (ldr fp, [sp], #4)
   16010:	bx	lr
   16014:	push	{fp}		; (str fp, [sp, #-4]!)
   16018:	add	fp, sp, #0
   1601c:	sub	sp, sp, #12
   16020:	str	r0, [fp, #-8]
   16024:	str	r1, [fp, #-12]
   16028:	mov	r3, #1
   1602c:	mov	r0, r3
   16030:	add	sp, fp, #0
   16034:	pop	{fp}		; (ldr fp, [sp], #4)
   16038:	bx	lr
   1603c:	push	{fp, lr}
   16040:	add	fp, sp, #4
   16044:	sub	sp, sp, #32
   16048:	str	r0, [fp, #-16]
   1604c:	str	r1, [fp, #-20]	; 0xffffffec
   16050:	str	r2, [fp, #-24]	; 0xffffffe8
   16054:	str	r3, [fp, #-28]	; 0xffffffe4
   16058:	ldr	r3, [fp, #12]
   1605c:	ldr	r2, [r3, #92]	; 0x5c
   16060:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16064:	cmp	r2, r3
   16068:	ble	16078 <__assert_fail@plt+0x4d58>
   1606c:	ldr	r3, [fp, #12]
   16070:	ldr	r3, [r3, #92]	; 0x5c
   16074:	str	r3, [fp, #-28]	; 0xffffffe4
   16078:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1607c:	add	r2, r3, #1
   16080:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16084:	cmp	r2, r3
   16088:	movlt	r3, r2
   1608c:	movge	r3, r3
   16090:	str	r3, [fp, #-8]
   16094:	ldr	r3, [fp, #12]
   16098:	str	r3, [sp, #4]
   1609c:	ldrb	r3, [fp, #8]
   160a0:	str	r3, [sp]
   160a4:	ldr	r3, [fp, #4]
   160a8:	ldr	r2, [fp, #-16]
   160ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   160b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   160b4:	bl	16548 <__assert_fail@plt+0x5228>
   160b8:	ldr	r1, [fp, #-8]
   160bc:	ldr	r0, [fp, #-16]
   160c0:	bl	1639c <__assert_fail@plt+0x507c>
   160c4:	str	r0, [fp, #-12]
   160c8:	ldr	r3, [fp, #-12]
   160cc:	cmp	r3, #0
   160d0:	movne	r3, #1
   160d4:	moveq	r3, #0
   160d8:	uxtb	r3, r3
   160dc:	cmp	r3, #0
   160e0:	beq	160ec <__assert_fail@plt+0x4dcc>
   160e4:	ldr	r3, [fp, #-12]
   160e8:	b	1618c <__assert_fail@plt+0x4e6c>
   160ec:	ldr	r3, [fp, #12]
   160f0:	add	r2, r3, #96	; 0x60
   160f4:	ldr	r3, [fp, #-16]
   160f8:	str	r2, [r3, #68]	; 0x44
   160fc:	ldr	r3, [fp, #12]
   16100:	ldrb	r3, [r3, #88]	; 0x58
   16104:	lsr	r3, r3, #4
   16108:	and	r3, r3, #1
   1610c:	uxtb	r3, r3
   16110:	mov	r2, r3
   16114:	ldr	r3, [fp, #-16]
   16118:	strb	r2, [r3, #78]	; 0x4e
   1611c:	ldr	r3, [fp, #-16]
   16120:	ldrb	r3, [r3, #75]	; 0x4b
   16124:	cmp	r3, #0
   16128:	beq	16138 <__assert_fail@plt+0x4e18>
   1612c:	ldr	r3, [fp, #-16]
   16130:	ldr	r3, [r3, #4]
   16134:	b	1613c <__assert_fail@plt+0x4e1c>
   16138:	ldr	r3, [fp, #-20]	; 0xffffffec
   1613c:	ldr	r2, [fp, #-16]
   16140:	str	r3, [r2, #4]
   16144:	ldr	r3, [fp, #-16]
   16148:	ldrb	r3, [r3, #75]	; 0x4b
   1614c:	cmp	r3, #0
   16150:	bne	1616c <__assert_fail@plt+0x4e4c>
   16154:	ldr	r3, [fp, #12]
   16158:	ldr	r3, [r3, #92]	; 0x5c
   1615c:	cmp	r3, #1
   16160:	bgt	1616c <__assert_fail@plt+0x4e4c>
   16164:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16168:	b	16170 <__assert_fail@plt+0x4e50>
   1616c:	mov	r3, #0
   16170:	ldr	r2, [fp, #-16]
   16174:	str	r3, [r2, #28]
   16178:	ldr	r3, [fp, #-16]
   1617c:	ldr	r2, [r3, #28]
   16180:	ldr	r3, [fp, #-16]
   16184:	str	r2, [r3, #32]
   16188:	mov	r3, #0
   1618c:	mov	r0, r3
   16190:	sub	sp, fp, #4
   16194:	pop	{fp, pc}
   16198:	push	{fp, lr}
   1619c:	add	fp, sp, #4
   161a0:	sub	sp, sp, #32
   161a4:	str	r0, [fp, #-16]
   161a8:	str	r1, [fp, #-20]	; 0xffffffec
   161ac:	str	r2, [fp, #-24]	; 0xffffffe8
   161b0:	str	r3, [fp, #-28]	; 0xffffffe4
   161b4:	mov	r2, #84	; 0x54
   161b8:	mov	r1, #0
   161bc:	ldr	r0, [fp, #-16]
   161c0:	bl	11248 <memset@plt>
   161c4:	ldr	r3, [fp, #8]
   161c8:	str	r3, [sp, #4]
   161cc:	ldrb	r3, [fp, #4]
   161d0:	str	r3, [sp]
   161d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   161d8:	ldr	r2, [fp, #-16]
   161dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   161e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   161e4:	bl	16548 <__assert_fail@plt+0x5228>
   161e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   161ec:	cmp	r3, #0
   161f0:	ble	16230 <__assert_fail@plt+0x4f10>
   161f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   161f8:	add	r3, r3, #1
   161fc:	mov	r1, r3
   16200:	ldr	r0, [fp, #-16]
   16204:	bl	1639c <__assert_fail@plt+0x507c>
   16208:	str	r0, [fp, #-8]
   1620c:	ldr	r3, [fp, #-8]
   16210:	cmp	r3, #0
   16214:	movne	r3, #1
   16218:	moveq	r3, #0
   1621c:	uxtb	r3, r3
   16220:	cmp	r3, #0
   16224:	beq	16230 <__assert_fail@plt+0x4f10>
   16228:	ldr	r3, [fp, #-8]
   1622c:	b	16390 <__assert_fail@plt+0x5070>
   16230:	ldr	r3, [fp, #-16]
   16234:	ldrb	r3, [r3, #75]	; 0x4b
   16238:	cmp	r3, #0
   1623c:	beq	1624c <__assert_fail@plt+0x4f2c>
   16240:	ldr	r3, [fp, #-16]
   16244:	ldr	r3, [r3, #4]
   16248:	b	16250 <__assert_fail@plt+0x4f30>
   1624c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16250:	ldr	r2, [fp, #-16]
   16254:	str	r3, [r2, #4]
   16258:	ldrb	r3, [fp, #4]
   1625c:	cmp	r3, #0
   16260:	beq	16328 <__assert_fail@plt+0x5008>
   16264:	ldr	r3, [fp, #8]
   16268:	ldr	r3, [r3, #92]	; 0x5c
   1626c:	cmp	r3, #1
   16270:	ble	1631c <__assert_fail@plt+0x4ffc>
   16274:	ldr	r0, [fp, #-16]
   16278:	bl	169c8 <__assert_fail@plt+0x56a8>
   1627c:	str	r0, [fp, #-8]
   16280:	ldr	r3, [fp, #-8]
   16284:	cmp	r3, #0
   16288:	movne	r3, #1
   1628c:	moveq	r3, #0
   16290:	uxtb	r3, r3
   16294:	cmp	r3, #0
   16298:	beq	162a4 <__assert_fail@plt+0x4f84>
   1629c:	ldr	r3, [fp, #-8]
   162a0:	b	16390 <__assert_fail@plt+0x5070>
   162a4:	ldr	r3, [fp, #-16]
   162a8:	ldr	r2, [r3, #32]
   162ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   162b0:	cmp	r2, r3
   162b4:	bge	16380 <__assert_fail@plt+0x5060>
   162b8:	ldr	r3, [fp, #-16]
   162bc:	ldr	r2, [r3, #36]	; 0x24
   162c0:	ldr	r3, [fp, #-16]
   162c4:	ldr	r1, [r3, #28]
   162c8:	ldr	r3, [fp, #8]
   162cc:	ldr	r3, [r3, #92]	; 0x5c
   162d0:	add	r3, r1, r3
   162d4:	cmp	r2, r3
   162d8:	bgt	16388 <__assert_fail@plt+0x5068>
   162dc:	ldr	r3, [fp, #-16]
   162e0:	ldr	r3, [r3, #36]	; 0x24
   162e4:	lsl	r3, r3, #1
   162e8:	mov	r1, r3
   162ec:	ldr	r0, [fp, #-16]
   162f0:	bl	1639c <__assert_fail@plt+0x507c>
   162f4:	str	r0, [fp, #-8]
   162f8:	ldr	r3, [fp, #-8]
   162fc:	cmp	r3, #0
   16300:	movne	r3, #1
   16304:	moveq	r3, #0
   16308:	uxtb	r3, r3
   1630c:	cmp	r3, #0
   16310:	beq	16274 <__assert_fail@plt+0x4f54>
   16314:	ldr	r3, [fp, #-8]
   16318:	b	16390 <__assert_fail@plt+0x5070>
   1631c:	ldr	r0, [fp, #-16]
   16320:	bl	17694 <__assert_fail@plt+0x6374>
   16324:	b	1638c <__assert_fail@plt+0x506c>
   16328:	ldr	r3, [fp, #8]
   1632c:	ldr	r3, [r3, #92]	; 0x5c
   16330:	cmp	r3, #1
   16334:	ble	16344 <__assert_fail@plt+0x5024>
   16338:	ldr	r0, [fp, #-16]
   1633c:	bl	16650 <__assert_fail@plt+0x5330>
   16340:	b	1638c <__assert_fail@plt+0x506c>
   16344:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16348:	cmp	r3, #0
   1634c:	beq	1635c <__assert_fail@plt+0x503c>
   16350:	ldr	r0, [fp, #-16]
   16354:	bl	17794 <__assert_fail@plt+0x6474>
   16358:	b	1638c <__assert_fail@plt+0x506c>
   1635c:	ldr	r3, [fp, #-16]
   16360:	ldr	r2, [r3, #36]	; 0x24
   16364:	ldr	r3, [fp, #-16]
   16368:	str	r2, [r3, #28]
   1636c:	ldr	r3, [fp, #-16]
   16370:	ldr	r2, [r3, #36]	; 0x24
   16374:	ldr	r3, [fp, #-16]
   16378:	str	r2, [r3, #32]
   1637c:	b	1638c <__assert_fail@plt+0x506c>
   16380:	nop			; (mov r0, r0)
   16384:	b	1638c <__assert_fail@plt+0x506c>
   16388:	nop			; (mov r0, r0)
   1638c:	mov	r3, #0
   16390:	mov	r0, r3
   16394:	sub	sp, fp, #4
   16398:	pop	{fp, pc}
   1639c:	push	{fp, lr}
   163a0:	add	fp, sp, #4
   163a4:	sub	sp, sp, #24
   163a8:	str	r0, [fp, #-24]	; 0xffffffe8
   163ac:	str	r1, [fp, #-28]	; 0xffffffe4
   163b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163b4:	ldr	r3, [r3, #80]	; 0x50
   163b8:	cmp	r3, #1
   163bc:	ble	164d0 <__assert_fail@plt+0x51b0>
   163c0:	mov	r3, #4
   163c4:	str	r3, [fp, #-8]
   163c8:	ldr	r1, [fp, #-8]
   163cc:	mvn	r0, #0
   163d0:	bl	31f78 <__assert_fail@plt+0x20c58>
   163d4:	mov	r3, r0
   163d8:	cmp	r3, #0
   163dc:	blt	163f8 <__assert_fail@plt+0x50d8>
   163e0:	ldr	r1, [fp, #-8]
   163e4:	mvn	r0, #0
   163e8:	bl	31f78 <__assert_fail@plt+0x20c58>
   163ec:	mov	r3, r0
   163f0:	mov	r2, r3
   163f4:	b	163fc <__assert_fail@plt+0x50dc>
   163f8:	mvn	r2, #-2147483648	; 0x80000000
   163fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16400:	cmp	r2, r3
   16404:	movcc	r3, #1
   16408:	movcs	r3, #0
   1640c:	uxtb	r3, r3
   16410:	cmp	r3, #0
   16414:	beq	16420 <__assert_fail@plt+0x5100>
   16418:	mov	r3, #12
   1641c:	b	1653c <__assert_fail@plt+0x521c>
   16420:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16424:	ldr	r2, [r3, #8]
   16428:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1642c:	lsl	r3, r3, #2
   16430:	mov	r1, r3
   16434:	mov	r0, r2
   16438:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   1643c:	str	r0, [fp, #-12]
   16440:	ldr	r3, [fp, #-12]
   16444:	cmp	r3, #0
   16448:	moveq	r3, #1
   1644c:	movne	r3, #0
   16450:	uxtb	r3, r3
   16454:	cmp	r3, #0
   16458:	beq	16464 <__assert_fail@plt+0x5144>
   1645c:	mov	r3, #12
   16460:	b	1653c <__assert_fail@plt+0x521c>
   16464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16468:	ldr	r2, [fp, #-12]
   1646c:	str	r2, [r3, #8]
   16470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16474:	ldr	r3, [r3, #12]
   16478:	cmp	r3, #0
   1647c:	beq	164d0 <__assert_fail@plt+0x51b0>
   16480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16484:	ldr	r2, [r3, #12]
   16488:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1648c:	lsl	r3, r3, #2
   16490:	mov	r1, r3
   16494:	mov	r0, r2
   16498:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   1649c:	str	r0, [fp, #-16]
   164a0:	ldr	r3, [fp, #-16]
   164a4:	cmp	r3, #0
   164a8:	moveq	r3, #1
   164ac:	movne	r3, #0
   164b0:	uxtb	r3, r3
   164b4:	cmp	r3, #0
   164b8:	beq	164c4 <__assert_fail@plt+0x51a4>
   164bc:	mov	r3, #12
   164c0:	b	1653c <__assert_fail@plt+0x521c>
   164c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   164c8:	ldr	r2, [fp, #-16]
   164cc:	str	r2, [r3, #12]
   164d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   164d4:	ldrb	r3, [r3, #75]	; 0x4b
   164d8:	cmp	r3, #0
   164dc:	beq	1652c <__assert_fail@plt+0x520c>
   164e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   164e4:	ldr	r3, [r3, #4]
   164e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   164ec:	mov	r1, r2
   164f0:	mov	r0, r3
   164f4:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   164f8:	str	r0, [fp, #-20]	; 0xffffffec
   164fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   16500:	cmp	r3, #0
   16504:	moveq	r3, #1
   16508:	movne	r3, #0
   1650c:	uxtb	r3, r3
   16510:	cmp	r3, #0
   16514:	beq	16520 <__assert_fail@plt+0x5200>
   16518:	mov	r3, #12
   1651c:	b	1653c <__assert_fail@plt+0x521c>
   16520:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16524:	ldr	r2, [fp, #-20]	; 0xffffffec
   16528:	str	r2, [r3, #4]
   1652c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16530:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16534:	str	r2, [r3, #36]	; 0x24
   16538:	mov	r3, #0
   1653c:	mov	r0, r3
   16540:	sub	sp, fp, #4
   16544:	pop	{fp, pc}
   16548:	push	{fp}		; (str fp, [sp, #-4]!)
   1654c:	add	fp, sp, #0
   16550:	sub	sp, sp, #20
   16554:	str	r0, [fp, #-8]
   16558:	str	r1, [fp, #-12]
   1655c:	str	r2, [fp, #-16]
   16560:	str	r3, [fp, #-20]	; 0xffffffec
   16564:	ldr	r3, [fp, #-16]
   16568:	ldr	r2, [fp, #-8]
   1656c:	str	r2, [r3]
   16570:	ldr	r3, [fp, #-16]
   16574:	ldr	r2, [fp, #-12]
   16578:	str	r2, [r3, #48]	; 0x30
   1657c:	ldr	r3, [fp, #-16]
   16580:	ldr	r2, [fp, #-12]
   16584:	str	r2, [r3, #44]	; 0x2c
   16588:	ldr	r3, [fp, #-16]
   1658c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16590:	str	r2, [r3, #64]	; 0x40
   16594:	ldrb	r2, [fp, #4]
   16598:	ldr	r3, [fp, #-16]
   1659c:	strb	r2, [r3, #72]	; 0x48
   165a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   165a4:	cmp	r3, #0
   165a8:	bne	165b8 <__assert_fail@plt+0x5298>
   165ac:	ldrb	r3, [fp, #4]
   165b0:	cmp	r3, #0
   165b4:	beq	165c0 <__assert_fail@plt+0x52a0>
   165b8:	mov	r3, #1
   165bc:	b	165c4 <__assert_fail@plt+0x52a4>
   165c0:	mov	r3, #0
   165c4:	uxtb	r2, r3
   165c8:	ldr	r3, [fp, #-16]
   165cc:	strb	r2, [r3, #75]	; 0x4b
   165d0:	ldr	r3, [fp, #8]
   165d4:	ldr	r2, [r3, #92]	; 0x5c
   165d8:	ldr	r3, [fp, #-16]
   165dc:	str	r2, [r3, #80]	; 0x50
   165e0:	ldr	r3, [fp, #8]
   165e4:	ldrb	r3, [r3, #88]	; 0x58
   165e8:	lsr	r3, r3, #2
   165ec:	and	r3, r3, #1
   165f0:	uxtb	r3, r3
   165f4:	mov	r2, r3
   165f8:	ldr	r3, [fp, #-16]
   165fc:	strb	r2, [r3, #73]	; 0x49
   16600:	ldr	r3, [fp, #8]
   16604:	ldrb	r3, [r3, #88]	; 0x58
   16608:	lsr	r3, r3, #3
   1660c:	and	r3, r3, #1
   16610:	uxtb	r3, r3
   16614:	mov	r2, r3
   16618:	ldr	r3, [fp, #-16]
   1661c:	strb	r2, [r3, #74]	; 0x4a
   16620:	ldr	r3, [fp, #-16]
   16624:	ldr	r2, [r3, #48]	; 0x30
   16628:	ldr	r3, [fp, #-16]
   1662c:	str	r2, [r3, #56]	; 0x38
   16630:	ldr	r3, [fp, #-16]
   16634:	ldr	r2, [r3, #56]	; 0x38
   16638:	ldr	r3, [fp, #-16]
   1663c:	str	r2, [r3, #52]	; 0x34
   16640:	nop			; (mov r0, r0)
   16644:	add	sp, fp, #0
   16648:	pop	{fp}		; (ldr fp, [sp], #4)
   1664c:	bx	lr
   16650:	push	{fp, lr}
   16654:	add	fp, sp, #4
   16658:	sub	sp, sp, #112	; 0x70
   1665c:	str	r0, [fp, #-112]	; 0xffffff90
   16660:	ldr	r3, [fp, #-112]	; 0xffffff90
   16664:	ldr	r2, [r3, #36]	; 0x24
   16668:	ldr	r3, [fp, #-112]	; 0xffffff90
   1666c:	ldr	r3, [r3, #48]	; 0x30
   16670:	cmp	r2, r3
   16674:	movlt	r3, r2
   16678:	movge	r3, r3
   1667c:	str	r3, [fp, #-24]	; 0xffffffe8
   16680:	ldr	r3, [fp, #-112]	; 0xffffff90
   16684:	ldr	r3, [r3, #28]
   16688:	str	r3, [fp, #-8]
   1668c:	b	16994 <__assert_fail@plt+0x5674>
   16690:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16694:	ldr	r3, [fp, #-8]
   16698:	sub	r3, r2, r3
   1669c:	str	r3, [fp, #-28]	; 0xffffffe4
   166a0:	ldr	r2, [fp, #-112]	; 0xffffff90
   166a4:	sub	r3, fp, #104	; 0x68
   166a8:	add	r2, r2, #16
   166ac:	ldm	r2, {r0, r1}
   166b0:	stm	r3, {r0, r1}
   166b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   166b8:	ldr	r3, [r3, #64]	; 0x40
   166bc:	cmp	r3, #0
   166c0:	movne	r3, #1
   166c4:	moveq	r3, #0
   166c8:	uxtb	r3, r3
   166cc:	cmp	r3, #0
   166d0:	beq	16790 <__assert_fail@plt+0x5470>
   166d4:	mov	r3, #0
   166d8:	str	r3, [fp, #-20]	; 0xffffffec
   166dc:	b	16760 <__assert_fail@plt+0x5440>
   166e0:	ldr	r3, [fp, #-112]	; 0xffffff90
   166e4:	ldr	r3, [r3]
   166e8:	ldr	r2, [fp, #-112]	; 0xffffff90
   166ec:	ldr	r1, [r2, #24]
   166f0:	ldr	r2, [fp, #-8]
   166f4:	add	r1, r1, r2
   166f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   166fc:	add	r2, r1, r2
   16700:	add	r3, r3, r2
   16704:	ldrb	r3, [r3]
   16708:	str	r3, [fp, #-32]	; 0xffffffe0
   1670c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16710:	ldr	r3, [r3, #4]
   16714:	ldr	r1, [fp, #-8]
   16718:	ldr	r2, [fp, #-20]	; 0xffffffec
   1671c:	add	r2, r1, r2
   16720:	add	r3, r3, r2
   16724:	ldr	r2, [fp, #-112]	; 0xffffff90
   16728:	ldr	r1, [r2, #64]	; 0x40
   1672c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16730:	add	r2, r1, r2
   16734:	ldrb	r2, [r2]
   16738:	strb	r2, [r3]
   1673c:	ldrb	r1, [r3]
   16740:	sub	r2, fp, #96	; 0x60
   16744:	ldr	r3, [fp, #-20]	; 0xffffffec
   16748:	add	r3, r2, r3
   1674c:	mov	r2, r1
   16750:	strb	r2, [r3]
   16754:	ldr	r3, [fp, #-20]	; 0xffffffec
   16758:	add	r3, r3, #1
   1675c:	str	r3, [fp, #-20]	; 0xffffffec
   16760:	ldr	r3, [fp, #-112]	; 0xffffff90
   16764:	ldr	r2, [r3, #80]	; 0x50
   16768:	ldr	r3, [fp, #-20]	; 0xffffffec
   1676c:	cmp	r2, r3
   16770:	ble	16784 <__assert_fail@plt+0x5464>
   16774:	ldr	r2, [fp, #-20]	; 0xffffffec
   16778:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1677c:	cmp	r2, r3
   16780:	blt	166e0 <__assert_fail@plt+0x53c0>
   16784:	sub	r3, fp, #96	; 0x60
   16788:	str	r3, [fp, #-16]
   1678c:	b	167b4 <__assert_fail@plt+0x5494>
   16790:	ldr	r3, [fp, #-112]	; 0xffffff90
   16794:	ldr	r2, [r3]
   16798:	ldr	r3, [fp, #-112]	; 0xffffff90
   1679c:	ldr	r3, [r3, #24]
   167a0:	mov	r1, r3
   167a4:	ldr	r3, [fp, #-8]
   167a8:	add	r3, r1, r3
   167ac:	add	r3, r2, r3
   167b0:	str	r3, [fp, #-16]
   167b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   167b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   167bc:	add	r3, r3, #16
   167c0:	sub	r0, fp, #108	; 0x6c
   167c4:	ldr	r1, [fp, #-16]
   167c8:	bl	31724 <__assert_fail@plt+0x20404>
   167cc:	str	r0, [fp, #-12]
   167d0:	ldr	r3, [fp, #-12]
   167d4:	cmn	r3, #1
   167d8:	moveq	r3, #1
   167dc:	movne	r3, #0
   167e0:	uxtb	r3, r3
   167e4:	cmp	r3, #0
   167e8:	bne	16808 <__assert_fail@plt+0x54e8>
   167ec:	ldr	r3, [fp, #-12]
   167f0:	cmp	r3, #0
   167f4:	moveq	r3, #1
   167f8:	movne	r3, #0
   167fc:	uxtb	r3, r3
   16800:	cmp	r3, #0
   16804:	beq	16810 <__assert_fail@plt+0x54f0>
   16808:	mov	r3, #1
   1680c:	b	16814 <__assert_fail@plt+0x54f4>
   16810:	mov	r3, #0
   16814:	cmp	r3, #0
   16818:	bne	16874 <__assert_fail@plt+0x5554>
   1681c:	ldr	r3, [fp, #-12]
   16820:	cmn	r3, #2
   16824:	moveq	r3, #1
   16828:	movne	r3, #0
   1682c:	uxtb	r3, r3
   16830:	cmp	r3, #0
   16834:	beq	16868 <__assert_fail@plt+0x5548>
   16838:	ldr	r3, [fp, #-112]	; 0xffffff90
   1683c:	ldr	r2, [r3, #36]	; 0x24
   16840:	ldr	r3, [fp, #-112]	; 0xffffff90
   16844:	ldr	r3, [r3, #48]	; 0x30
   16848:	cmp	r2, r3
   1684c:	movge	r3, #1
   16850:	movlt	r3, #0
   16854:	uxtb	r3, r3
   16858:	cmp	r3, #0
   1685c:	beq	16868 <__assert_fail@plt+0x5548>
   16860:	mov	r3, #1
   16864:	b	1686c <__assert_fail@plt+0x554c>
   16868:	mov	r3, #0
   1686c:	cmp	r3, #0
   16870:	beq	168f0 <__assert_fail@plt+0x55d0>
   16874:	mov	r3, #1
   16878:	str	r3, [fp, #-12]
   1687c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16880:	ldr	r3, [r3]
   16884:	ldr	r2, [fp, #-112]	; 0xffffff90
   16888:	ldr	r1, [r2, #24]
   1688c:	ldr	r2, [fp, #-8]
   16890:	add	r2, r1, r2
   16894:	add	r3, r3, r2
   16898:	ldrb	r3, [r3]
   1689c:	str	r3, [fp, #-108]	; 0xffffff94
   168a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   168a4:	ldr	r3, [r3, #64]	; 0x40
   168a8:	cmp	r3, #0
   168ac:	movne	r3, #1
   168b0:	moveq	r3, #0
   168b4:	uxtb	r3, r3
   168b8:	cmp	r3, #0
   168bc:	beq	168d8 <__assert_fail@plt+0x55b8>
   168c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   168c4:	ldr	r2, [r3, #64]	; 0x40
   168c8:	ldr	r3, [fp, #-108]	; 0xffffff94
   168cc:	add	r3, r2, r3
   168d0:	ldrb	r3, [r3]
   168d4:	str	r3, [fp, #-108]	; 0xffffff94
   168d8:	ldr	r3, [fp, #-112]	; 0xffffff90
   168dc:	add	r3, r3, #16
   168e0:	sub	r2, fp, #104	; 0x68
   168e4:	ldm	r2, {r0, r1}
   168e8:	stm	r3, {r0, r1}
   168ec:	b	16924 <__assert_fail@plt+0x5604>
   168f0:	ldr	r3, [fp, #-12]
   168f4:	cmn	r3, #2
   168f8:	moveq	r3, #1
   168fc:	movne	r3, #0
   16900:	uxtb	r3, r3
   16904:	cmp	r3, #0
   16908:	beq	16924 <__assert_fail@plt+0x5604>
   1690c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16910:	add	r3, r3, #16
   16914:	sub	r2, fp, #104	; 0x68
   16918:	ldm	r2, {r0, r1}
   1691c:	stm	r3, {r0, r1}
   16920:	b	169a4 <__assert_fail@plt+0x5684>
   16924:	ldr	r3, [fp, #-112]	; 0xffffff90
   16928:	ldr	r2, [r3, #8]
   1692c:	ldr	r3, [fp, #-8]
   16930:	add	r1, r3, #1
   16934:	str	r1, [fp, #-8]
   16938:	lsl	r3, r3, #2
   1693c:	add	r3, r2, r3
   16940:	ldr	r2, [fp, #-108]	; 0xffffff94
   16944:	str	r2, [r3]
   16948:	ldr	r2, [fp, #-8]
   1694c:	ldr	r3, [fp, #-12]
   16950:	add	r3, r2, r3
   16954:	sub	r3, r3, #1
   16958:	str	r3, [fp, #-28]	; 0xffffffe4
   1695c:	b	16984 <__assert_fail@plt+0x5664>
   16960:	ldr	r3, [fp, #-112]	; 0xffffff90
   16964:	ldr	r2, [r3, #8]
   16968:	ldr	r3, [fp, #-8]
   1696c:	add	r1, r3, #1
   16970:	str	r1, [fp, #-8]
   16974:	lsl	r3, r3, #2
   16978:	add	r3, r2, r3
   1697c:	mvn	r2, #0
   16980:	str	r2, [r3]
   16984:	ldr	r2, [fp, #-8]
   16988:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1698c:	cmp	r2, r3
   16990:	blt	16960 <__assert_fail@plt+0x5640>
   16994:	ldr	r2, [fp, #-8]
   16998:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1699c:	cmp	r2, r3
   169a0:	blt	16690 <__assert_fail@plt+0x5370>
   169a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   169a8:	ldr	r2, [fp, #-8]
   169ac:	str	r2, [r3, #28]
   169b0:	ldr	r3, [fp, #-112]	; 0xffffff90
   169b4:	ldr	r2, [fp, #-8]
   169b8:	str	r2, [r3, #32]
   169bc:	nop			; (mov r0, r0)
   169c0:	sub	sp, fp, #4
   169c4:	pop	{fp, pc}
   169c8:	push	{fp, lr}
   169cc:	add	fp, sp, #4
   169d0:	sub	sp, sp, #160	; 0xa0
   169d4:	str	r0, [fp, #-160]	; 0xffffff60
   169d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   169dc:	ldr	r3, [r3, #28]
   169e0:	str	r3, [fp, #-12]
   169e4:	ldr	r3, [fp, #-160]	; 0xffffff60
   169e8:	ldr	r2, [r3, #36]	; 0x24
   169ec:	ldr	r3, [fp, #-160]	; 0xffffff60
   169f0:	ldr	r3, [r3, #48]	; 0x30
   169f4:	cmp	r2, r3
   169f8:	movlt	r3, r2
   169fc:	movge	r3, r3
   16a00:	str	r3, [fp, #-16]
   16a04:	ldr	r3, [fp, #-160]	; 0xffffff60
   16a08:	ldrb	r3, [r3, #74]	; 0x4a
   16a0c:	cmp	r3, #0
   16a10:	bne	16db4 <__assert_fail@plt+0x5a94>
   16a14:	ldr	r3, [fp, #-160]	; 0xffffff60
   16a18:	ldr	r3, [r3, #64]	; 0x40
   16a1c:	cmp	r3, #0
   16a20:	bne	16db4 <__assert_fail@plt+0x5a94>
   16a24:	ldr	r3, [fp, #-160]	; 0xffffff60
   16a28:	ldrb	r3, [r3, #76]	; 0x4c
   16a2c:	cmp	r3, #0
   16a30:	bne	16db4 <__assert_fail@plt+0x5a94>
   16a34:	b	16d84 <__assert_fail@plt+0x5a64>
   16a38:	ldr	r3, [fp, #-160]	; 0xffffff60
   16a3c:	ldr	r3, [r3]
   16a40:	ldr	r2, [fp, #-160]	; 0xffffff60
   16a44:	ldr	r1, [r2, #24]
   16a48:	ldr	r2, [fp, #-12]
   16a4c:	add	r2, r1, r2
   16a50:	add	r3, r3, r2
   16a54:	ldrb	r3, [r3]
   16a58:	strb	r3, [fp, #-37]	; 0xffffffdb
   16a5c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   16a60:	bic	r3, r3, #127	; 0x7f
   16a64:	cmp	r3, #0
   16a68:	bne	16af0 <__assert_fail@plt+0x57d0>
   16a6c:	ldr	r3, [fp, #-160]	; 0xffffff60
   16a70:	add	r3, r3, #16
   16a74:	mov	r0, r3
   16a78:	bl	110d4 <mbsinit@plt>
   16a7c:	mov	r3, r0
   16a80:	cmp	r3, #0
   16a84:	beq	16af0 <__assert_fail@plt+0x57d0>
   16a88:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   16a8c:	mov	r0, r3
   16a90:	bl	112e4 <towupper@plt>
   16a94:	str	r0, [fp, #-44]	; 0xffffffd4
   16a98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16a9c:	bic	r3, r3, #127	; 0x7f
   16aa0:	cmp	r3, #0
   16aa4:	bne	16af0 <__assert_fail@plt+0x57d0>
   16aa8:	ldr	r3, [fp, #-160]	; 0xffffff60
   16aac:	ldr	r2, [r3, #4]
   16ab0:	ldr	r3, [fp, #-12]
   16ab4:	add	r3, r2, r3
   16ab8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16abc:	uxtb	r2, r2
   16ac0:	strb	r2, [r3]
   16ac4:	ldr	r3, [fp, #-160]	; 0xffffff60
   16ac8:	ldr	r2, [r3, #8]
   16acc:	ldr	r3, [fp, #-12]
   16ad0:	lsl	r3, r3, #2
   16ad4:	add	r3, r2, r3
   16ad8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16adc:	str	r2, [r3]
   16ae0:	ldr	r3, [fp, #-12]
   16ae4:	add	r3, r3, #1
   16ae8:	str	r3, [fp, #-12]
   16aec:	b	16d84 <__assert_fail@plt+0x5a64>
   16af0:	ldr	r2, [fp, #-16]
   16af4:	ldr	r3, [fp, #-12]
   16af8:	sub	r3, r2, r3
   16afc:	str	r3, [fp, #-48]	; 0xffffffd0
   16b00:	ldr	r2, [fp, #-160]	; 0xffffff60
   16b04:	sub	r3, fp, #80	; 0x50
   16b08:	add	r2, r2, #16
   16b0c:	ldm	r2, {r0, r1}
   16b10:	stm	r3, {r0, r1}
   16b14:	ldr	r3, [fp, #-160]	; 0xffffff60
   16b18:	ldr	r2, [r3]
   16b1c:	ldr	r3, [fp, #-160]	; 0xffffff60
   16b20:	ldr	r3, [r3, #24]
   16b24:	mov	r1, r3
   16b28:	ldr	r3, [fp, #-12]
   16b2c:	add	r3, r1, r3
   16b30:	add	r1, r2, r3
   16b34:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16b38:	ldr	r3, [fp, #-160]	; 0xffffff60
   16b3c:	add	r3, r3, #16
   16b40:	sub	r0, fp, #148	; 0x94
   16b44:	bl	31724 <__assert_fail@plt+0x20404>
   16b48:	str	r0, [fp, #-52]	; 0xffffffcc
   16b4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16b50:	cmp	r3, #0
   16b54:	movne	r3, #1
   16b58:	moveq	r3, #0
   16b5c:	uxtb	r3, r3
   16b60:	cmp	r3, #0
   16b64:	beq	16cc0 <__assert_fail@plt+0x59a0>
   16b68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16b6c:	cmn	r3, #3
   16b70:	movls	r3, #1
   16b74:	movhi	r3, #0
   16b78:	uxtb	r3, r3
   16b7c:	cmp	r3, #0
   16b80:	beq	16cc0 <__assert_fail@plt+0x59a0>
   16b84:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16b88:	mov	r0, r3
   16b8c:	bl	112e4 <towupper@plt>
   16b90:	str	r0, [fp, #-56]	; 0xffffffc8
   16b94:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16b98:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16b9c:	cmp	r2, r3
   16ba0:	beq	16c10 <__assert_fail@plt+0x58f0>
   16ba4:	sub	r2, fp, #80	; 0x50
   16ba8:	sub	r3, fp, #144	; 0x90
   16bac:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16bb0:	mov	r0, r3
   16bb4:	bl	11020 <wcrtomb@plt>
   16bb8:	str	r0, [fp, #-60]	; 0xffffffc4
   16bbc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16bc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16bc4:	cmp	r2, r3
   16bc8:	moveq	r3, #1
   16bcc:	movne	r3, #0
   16bd0:	uxtb	r3, r3
   16bd4:	cmp	r3, #0
   16bd8:	beq	16c00 <__assert_fail@plt+0x58e0>
   16bdc:	ldr	r3, [fp, #-160]	; 0xffffff60
   16be0:	ldr	r2, [r3, #4]
   16be4:	ldr	r3, [fp, #-12]
   16be8:	add	r3, r2, r3
   16bec:	sub	r1, fp, #144	; 0x90
   16bf0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16bf4:	mov	r0, r3
   16bf8:	bl	110a4 <memcpy@plt>
   16bfc:	b	16c4c <__assert_fail@plt+0x592c>
   16c00:	ldr	r3, [fp, #-12]
   16c04:	str	r3, [fp, #-8]
   16c08:	nop			; (mov r0, r0)
   16c0c:	b	16dc4 <__assert_fail@plt+0x5aa4>
   16c10:	ldr	r3, [fp, #-160]	; 0xffffff60
   16c14:	ldr	r2, [r3, #4]
   16c18:	ldr	r3, [fp, #-12]
   16c1c:	add	r0, r2, r3
   16c20:	ldr	r3, [fp, #-160]	; 0xffffff60
   16c24:	ldr	r2, [r3]
   16c28:	ldr	r3, [fp, #-160]	; 0xffffff60
   16c2c:	ldr	r3, [r3, #24]
   16c30:	mov	r1, r3
   16c34:	ldr	r3, [fp, #-12]
   16c38:	add	r3, r1, r3
   16c3c:	add	r3, r2, r3
   16c40:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16c44:	mov	r1, r3
   16c48:	bl	110a4 <memcpy@plt>
   16c4c:	ldr	r3, [fp, #-160]	; 0xffffff60
   16c50:	ldr	r2, [r3, #8]
   16c54:	ldr	r3, [fp, #-12]
   16c58:	add	r1, r3, #1
   16c5c:	str	r1, [fp, #-12]
   16c60:	lsl	r3, r3, #2
   16c64:	add	r3, r2, r3
   16c68:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16c6c:	str	r2, [r3]
   16c70:	ldr	r2, [fp, #-12]
   16c74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16c78:	add	r3, r2, r3
   16c7c:	sub	r3, r3, #1
   16c80:	str	r3, [fp, #-48]	; 0xffffffd0
   16c84:	b	16cac <__assert_fail@plt+0x598c>
   16c88:	ldr	r3, [fp, #-160]	; 0xffffff60
   16c8c:	ldr	r2, [r3, #8]
   16c90:	ldr	r3, [fp, #-12]
   16c94:	add	r1, r3, #1
   16c98:	str	r1, [fp, #-12]
   16c9c:	lsl	r3, r3, #2
   16ca0:	add	r3, r2, r3
   16ca4:	mvn	r2, #0
   16ca8:	str	r2, [r3]
   16cac:	ldr	r2, [fp, #-12]
   16cb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16cb4:	cmp	r2, r3
   16cb8:	blt	16c88 <__assert_fail@plt+0x5968>
   16cbc:	b	16d84 <__assert_fail@plt+0x5a64>
   16cc0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16cc4:	cmn	r3, #1
   16cc8:	beq	16cfc <__assert_fail@plt+0x59dc>
   16ccc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16cd0:	cmp	r3, #0
   16cd4:	beq	16cfc <__assert_fail@plt+0x59dc>
   16cd8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16cdc:	cmn	r3, #2
   16ce0:	bne	16d6c <__assert_fail@plt+0x5a4c>
   16ce4:	ldr	r3, [fp, #-160]	; 0xffffff60
   16ce8:	ldr	r2, [r3, #36]	; 0x24
   16cec:	ldr	r3, [fp, #-160]	; 0xffffff60
   16cf0:	ldr	r3, [r3, #48]	; 0x30
   16cf4:	cmp	r2, r3
   16cf8:	blt	16d6c <__assert_fail@plt+0x5a4c>
   16cfc:	ldr	r3, [fp, #-160]	; 0xffffff60
   16d00:	ldr	r2, [r3, #4]
   16d04:	ldr	r3, [fp, #-12]
   16d08:	add	r3, r2, r3
   16d0c:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   16d10:	strb	r2, [r3]
   16d14:	ldr	r3, [fp, #-160]	; 0xffffff60
   16d18:	ldr	r2, [r3, #8]
   16d1c:	ldr	r3, [fp, #-12]
   16d20:	add	r1, r3, #1
   16d24:	str	r1, [fp, #-12]
   16d28:	lsl	r3, r3, #2
   16d2c:	add	r3, r2, r3
   16d30:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   16d34:	str	r2, [r3]
   16d38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16d3c:	cmn	r3, #1
   16d40:	moveq	r3, #1
   16d44:	movne	r3, #0
   16d48:	uxtb	r3, r3
   16d4c:	cmp	r3, #0
   16d50:	beq	16d84 <__assert_fail@plt+0x5a64>
   16d54:	ldr	r3, [fp, #-160]	; 0xffffff60
   16d58:	add	r3, r3, #16
   16d5c:	sub	r2, fp, #80	; 0x50
   16d60:	ldm	r2, {r0, r1}
   16d64:	stm	r3, {r0, r1}
   16d68:	b	16d84 <__assert_fail@plt+0x5a64>
   16d6c:	ldr	r3, [fp, #-160]	; 0xffffff60
   16d70:	add	r3, r3, #16
   16d74:	sub	r2, fp, #80	; 0x50
   16d78:	ldm	r2, {r0, r1}
   16d7c:	stm	r3, {r0, r1}
   16d80:	b	16d94 <__assert_fail@plt+0x5a74>
   16d84:	ldr	r2, [fp, #-12]
   16d88:	ldr	r3, [fp, #-16]
   16d8c:	cmp	r2, r3
   16d90:	blt	16a38 <__assert_fail@plt+0x5718>
   16d94:	ldr	r3, [fp, #-160]	; 0xffffff60
   16d98:	ldr	r2, [fp, #-12]
   16d9c:	str	r2, [r3, #28]
   16da0:	ldr	r3, [fp, #-160]	; 0xffffff60
   16da4:	ldr	r2, [fp, #-12]
   16da8:	str	r2, [r3, #32]
   16dac:	mov	r3, #0
   16db0:	b	174f4 <__assert_fail@plt+0x61d4>
   16db4:	ldr	r3, [fp, #-160]	; 0xffffff60
   16db8:	ldr	r3, [r3, #32]
   16dbc:	str	r3, [fp, #-8]
   16dc0:	b	174c8 <__assert_fail@plt+0x61a8>
   16dc4:	ldr	r2, [fp, #-16]
   16dc8:	ldr	r3, [fp, #-12]
   16dcc:	sub	r3, r2, r3
   16dd0:	str	r3, [fp, #-48]	; 0xffffffd0
   16dd4:	ldr	r2, [fp, #-160]	; 0xffffff60
   16dd8:	sub	r3, fp, #80	; 0x50
   16ddc:	add	r2, r2, #16
   16de0:	ldm	r2, {r0, r1}
   16de4:	stm	r3, {r0, r1}
   16de8:	ldr	r3, [fp, #-160]	; 0xffffff60
   16dec:	ldr	r3, [r3, #64]	; 0x40
   16df0:	cmp	r3, #0
   16df4:	movne	r3, #1
   16df8:	moveq	r3, #0
   16dfc:	uxtb	r3, r3
   16e00:	cmp	r3, #0
   16e04:	beq	16ea4 <__assert_fail@plt+0x5b84>
   16e08:	mov	r3, #0
   16e0c:	str	r3, [fp, #-24]	; 0xffffffe8
   16e10:	b	16e74 <__assert_fail@plt+0x5b54>
   16e14:	ldr	r3, [fp, #-160]	; 0xffffff60
   16e18:	ldr	r3, [r3]
   16e1c:	ldr	r2, [fp, #-160]	; 0xffffff60
   16e20:	ldr	r1, [r2, #24]
   16e24:	ldr	r2, [fp, #-8]
   16e28:	add	r1, r1, r2
   16e2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e30:	add	r2, r1, r2
   16e34:	add	r3, r3, r2
   16e38:	ldrb	r3, [r3]
   16e3c:	str	r3, [fp, #-64]	; 0xffffffc0
   16e40:	ldr	r3, [fp, #-160]	; 0xffffff60
   16e44:	ldr	r2, [r3, #64]	; 0x40
   16e48:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16e4c:	add	r3, r2, r3
   16e50:	ldrb	r1, [r3]
   16e54:	sub	r2, fp, #144	; 0x90
   16e58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e5c:	add	r3, r2, r3
   16e60:	mov	r2, r1
   16e64:	strb	r2, [r3]
   16e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e6c:	add	r3, r3, #1
   16e70:	str	r3, [fp, #-24]	; 0xffffffe8
   16e74:	ldr	r3, [fp, #-160]	; 0xffffff60
   16e78:	ldr	r2, [r3, #80]	; 0x50
   16e7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e80:	cmp	r2, r3
   16e84:	ble	16e98 <__assert_fail@plt+0x5b78>
   16e88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16e90:	cmp	r2, r3
   16e94:	blt	16e14 <__assert_fail@plt+0x5af4>
   16e98:	sub	r3, fp, #144	; 0x90
   16e9c:	str	r3, [fp, #-20]	; 0xffffffec
   16ea0:	b	16ec8 <__assert_fail@plt+0x5ba8>
   16ea4:	ldr	r3, [fp, #-160]	; 0xffffff60
   16ea8:	ldr	r2, [r3]
   16eac:	ldr	r3, [fp, #-160]	; 0xffffff60
   16eb0:	ldr	r3, [r3, #24]
   16eb4:	mov	r1, r3
   16eb8:	ldr	r3, [fp, #-8]
   16ebc:	add	r3, r1, r3
   16ec0:	add	r3, r2, r3
   16ec4:	str	r3, [fp, #-20]	; 0xffffffec
   16ec8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16ecc:	ldr	r3, [fp, #-160]	; 0xffffff60
   16ed0:	add	r3, r3, #16
   16ed4:	sub	r0, fp, #152	; 0x98
   16ed8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16edc:	bl	31724 <__assert_fail@plt+0x20404>
   16ee0:	str	r0, [fp, #-52]	; 0xffffffcc
   16ee4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16ee8:	cmp	r3, #0
   16eec:	movne	r3, #1
   16ef0:	moveq	r3, #0
   16ef4:	uxtb	r3, r3
   16ef8:	cmp	r3, #0
   16efc:	beq	17354 <__assert_fail@plt+0x6034>
   16f00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f04:	cmn	r3, #3
   16f08:	movls	r3, #1
   16f0c:	movhi	r3, #0
   16f10:	uxtb	r3, r3
   16f14:	cmp	r3, #0
   16f18:	beq	17354 <__assert_fail@plt+0x6034>
   16f1c:	ldr	r3, [fp, #-152]	; 0xffffff68
   16f20:	mov	r0, r3
   16f24:	bl	112e4 <towupper@plt>
   16f28:	str	r0, [fp, #-68]	; 0xffffffbc
   16f2c:	ldr	r3, [fp, #-152]	; 0xffffff68
   16f30:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16f34:	cmp	r2, r3
   16f38:	beq	1723c <__assert_fail@plt+0x5f1c>
   16f3c:	sub	r2, fp, #80	; 0x50
   16f40:	sub	r3, fp, #144	; 0x90
   16f44:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16f48:	mov	r0, r3
   16f4c:	bl	11020 <wcrtomb@plt>
   16f50:	str	r0, [fp, #-72]	; 0xffffffb8
   16f54:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16f58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16f5c:	cmp	r2, r3
   16f60:	moveq	r3, #1
   16f64:	movne	r3, #0
   16f68:	uxtb	r3, r3
   16f6c:	cmp	r3, #0
   16f70:	beq	16f98 <__assert_fail@plt+0x5c78>
   16f74:	ldr	r3, [fp, #-160]	; 0xffffff60
   16f78:	ldr	r2, [r3, #4]
   16f7c:	ldr	r3, [fp, #-12]
   16f80:	add	r3, r2, r3
   16f84:	sub	r1, fp, #144	; 0x90
   16f88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16f8c:	mov	r0, r3
   16f90:	bl	110a4 <memcpy@plt>
   16f94:	b	1725c <__assert_fail@plt+0x5f3c>
   16f98:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16f9c:	cmn	r3, #1
   16fa0:	beq	17218 <__assert_fail@plt+0x5ef8>
   16fa4:	ldr	r2, [fp, #-12]
   16fa8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16fac:	add	r3, r2, r3
   16fb0:	ldr	r2, [fp, #-160]	; 0xffffff60
   16fb4:	ldr	r2, [r2, #36]	; 0x24
   16fb8:	cmp	r3, r2
   16fbc:	bls	16fd8 <__assert_fail@plt+0x5cb8>
   16fc0:	ldr	r3, [fp, #-160]	; 0xffffff60
   16fc4:	add	r3, r3, #16
   16fc8:	sub	r2, fp, #80	; 0x50
   16fcc:	ldm	r2, {r0, r1}
   16fd0:	stm	r3, {r0, r1}
   16fd4:	b	174d8 <__assert_fail@plt+0x61b8>
   16fd8:	ldr	r3, [fp, #-160]	; 0xffffff60
   16fdc:	ldr	r3, [r3, #12]
   16fe0:	cmp	r3, #0
   16fe4:	bne	17024 <__assert_fail@plt+0x5d04>
   16fe8:	ldr	r3, [fp, #-160]	; 0xffffff60
   16fec:	ldr	r3, [r3, #36]	; 0x24
   16ff0:	lsl	r3, r3, #2
   16ff4:	mov	r0, r3
   16ff8:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   16ffc:	mov	r3, r0
   17000:	mov	r2, r3
   17004:	ldr	r3, [fp, #-160]	; 0xffffff60
   17008:	str	r2, [r3, #12]
   1700c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17010:	ldr	r3, [r3, #12]
   17014:	cmp	r3, #0
   17018:	bne	17024 <__assert_fail@plt+0x5d04>
   1701c:	mov	r3, #12
   17020:	b	174f4 <__assert_fail@plt+0x61d4>
   17024:	ldr	r3, [fp, #-160]	; 0xffffff60
   17028:	ldrb	r3, [r3, #76]	; 0x4c
   1702c:	cmp	r3, #0
   17030:	bne	17084 <__assert_fail@plt+0x5d64>
   17034:	mov	r3, #0
   17038:	str	r3, [fp, #-28]	; 0xffffffe4
   1703c:	b	17068 <__assert_fail@plt+0x5d48>
   17040:	ldr	r3, [fp, #-160]	; 0xffffff60
   17044:	ldr	r2, [r3, #12]
   17048:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1704c:	lsl	r3, r3, #2
   17050:	add	r3, r2, r3
   17054:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17058:	str	r2, [r3]
   1705c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17060:	add	r3, r3, #1
   17064:	str	r3, [fp, #-28]	; 0xffffffe4
   17068:	ldr	r3, [fp, #-12]
   1706c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17070:	cmp	r2, r3
   17074:	bcc	17040 <__assert_fail@plt+0x5d20>
   17078:	ldr	r3, [fp, #-160]	; 0xffffff60
   1707c:	mov	r2, #1
   17080:	strb	r2, [r3, #76]	; 0x4c
   17084:	ldr	r3, [fp, #-160]	; 0xffffff60
   17088:	ldr	r2, [r3, #4]
   1708c:	ldr	r3, [fp, #-12]
   17090:	add	r3, r2, r3
   17094:	sub	r1, fp, #144	; 0x90
   17098:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1709c:	mov	r0, r3
   170a0:	bl	110a4 <memcpy@plt>
   170a4:	ldr	r3, [fp, #-160]	; 0xffffff60
   170a8:	ldr	r2, [r3, #8]
   170ac:	ldr	r3, [fp, #-12]
   170b0:	lsl	r3, r3, #2
   170b4:	add	r3, r2, r3
   170b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   170bc:	str	r2, [r3]
   170c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   170c4:	ldr	r2, [r3, #12]
   170c8:	ldr	r3, [fp, #-12]
   170cc:	lsl	r3, r3, #2
   170d0:	add	r3, r2, r3
   170d4:	ldr	r2, [fp, #-8]
   170d8:	str	r2, [r3]
   170dc:	mov	r3, #1
   170e0:	str	r3, [fp, #-28]	; 0xffffffe4
   170e4:	b	17160 <__assert_fail@plt+0x5e40>
   170e8:	ldr	r3, [fp, #-160]	; 0xffffff60
   170ec:	ldr	r2, [r3, #12]
   170f0:	ldr	r1, [fp, #-12]
   170f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   170f8:	add	r3, r1, r3
   170fc:	lsl	r3, r3, #2
   17100:	add	r2, r2, r3
   17104:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17108:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1710c:	cmp	r1, r3
   17110:	bcc	17120 <__assert_fail@plt+0x5e00>
   17114:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17118:	sub	r3, r3, #1
   1711c:	b	17124 <__assert_fail@plt+0x5e04>
   17120:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17124:	ldr	r1, [fp, #-8]
   17128:	add	r3, r3, r1
   1712c:	str	r3, [r2]
   17130:	ldr	r3, [fp, #-160]	; 0xffffff60
   17134:	ldr	r2, [r3, #8]
   17138:	ldr	r1, [fp, #-12]
   1713c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17140:	add	r3, r1, r3
   17144:	lsl	r3, r3, #2
   17148:	add	r3, r2, r3
   1714c:	mvn	r2, #0
   17150:	str	r2, [r3]
   17154:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17158:	add	r3, r3, #1
   1715c:	str	r3, [fp, #-28]	; 0xffffffe4
   17160:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17164:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17168:	cmp	r2, r3
   1716c:	bcc	170e8 <__assert_fail@plt+0x5dc8>
   17170:	ldr	r3, [fp, #-160]	; 0xffffff60
   17174:	ldr	r3, [r3, #48]	; 0x30
   17178:	mov	r1, r3
   1717c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17180:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17184:	sub	r3, r2, r3
   17188:	add	r3, r1, r3
   1718c:	mov	r2, r3
   17190:	ldr	r3, [fp, #-160]	; 0xffffff60
   17194:	str	r2, [r3, #48]	; 0x30
   17198:	ldr	r3, [fp, #-160]	; 0xffffff60
   1719c:	ldr	r2, [r3, #52]	; 0x34
   171a0:	ldr	r3, [fp, #-8]
   171a4:	cmp	r2, r3
   171a8:	ble	171d4 <__assert_fail@plt+0x5eb4>
   171ac:	ldr	r3, [fp, #-160]	; 0xffffff60
   171b0:	ldr	r3, [r3, #56]	; 0x38
   171b4:	mov	r1, r3
   171b8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   171bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   171c0:	sub	r3, r2, r3
   171c4:	add	r3, r1, r3
   171c8:	mov	r2, r3
   171cc:	ldr	r3, [fp, #-160]	; 0xffffff60
   171d0:	str	r2, [r3, #56]	; 0x38
   171d4:	ldr	r3, [fp, #-160]	; 0xffffff60
   171d8:	ldr	r2, [r3, #36]	; 0x24
   171dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   171e0:	ldr	r3, [r3, #48]	; 0x30
   171e4:	cmp	r2, r3
   171e8:	movlt	r3, r2
   171ec:	movge	r3, r3
   171f0:	str	r3, [fp, #-16]
   171f4:	ldr	r2, [fp, #-12]
   171f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   171fc:	add	r3, r2, r3
   17200:	str	r3, [fp, #-12]
   17204:	ldr	r2, [fp, #-8]
   17208:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1720c:	add	r3, r2, r3
   17210:	str	r3, [fp, #-8]
   17214:	b	174c8 <__assert_fail@plt+0x61a8>
   17218:	ldr	r3, [fp, #-160]	; 0xffffff60
   1721c:	ldr	r2, [r3, #4]
   17220:	ldr	r3, [fp, #-12]
   17224:	add	r3, r2, r3
   17228:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1722c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17230:	mov	r0, r3
   17234:	bl	110a4 <memcpy@plt>
   17238:	b	1725c <__assert_fail@plt+0x5f3c>
   1723c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17240:	ldr	r2, [r3, #4]
   17244:	ldr	r3, [fp, #-12]
   17248:	add	r3, r2, r3
   1724c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17250:	ldr	r1, [fp, #-20]	; 0xffffffec
   17254:	mov	r0, r3
   17258:	bl	110a4 <memcpy@plt>
   1725c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17260:	ldrb	r3, [r3, #76]	; 0x4c
   17264:	cmp	r3, #0
   17268:	movne	r3, #1
   1726c:	moveq	r3, #0
   17270:	uxtb	r3, r3
   17274:	cmp	r3, #0
   17278:	beq	172d0 <__assert_fail@plt+0x5fb0>
   1727c:	mov	r3, #0
   17280:	str	r3, [fp, #-32]	; 0xffffffe0
   17284:	b	172c0 <__assert_fail@plt+0x5fa0>
   17288:	ldr	r3, [fp, #-160]	; 0xffffff60
   1728c:	ldr	r2, [r3, #12]
   17290:	ldr	r1, [fp, #-12]
   17294:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17298:	add	r3, r1, r3
   1729c:	lsl	r3, r3, #2
   172a0:	add	r3, r2, r3
   172a4:	ldr	r1, [fp, #-8]
   172a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   172ac:	add	r2, r1, r2
   172b0:	str	r2, [r3]
   172b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   172b8:	add	r3, r3, #1
   172bc:	str	r3, [fp, #-32]	; 0xffffffe0
   172c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   172c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   172c8:	cmp	r2, r3
   172cc:	bcc	17288 <__assert_fail@plt+0x5f68>
   172d0:	ldr	r2, [fp, #-8]
   172d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   172d8:	add	r3, r2, r3
   172dc:	str	r3, [fp, #-8]
   172e0:	ldr	r3, [fp, #-160]	; 0xffffff60
   172e4:	ldr	r2, [r3, #8]
   172e8:	ldr	r3, [fp, #-12]
   172ec:	add	r1, r3, #1
   172f0:	str	r1, [fp, #-12]
   172f4:	lsl	r3, r3, #2
   172f8:	add	r3, r2, r3
   172fc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17300:	str	r2, [r3]
   17304:	ldr	r2, [fp, #-12]
   17308:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1730c:	add	r3, r2, r3
   17310:	sub	r3, r3, #1
   17314:	str	r3, [fp, #-48]	; 0xffffffd0
   17318:	b	17340 <__assert_fail@plt+0x6020>
   1731c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17320:	ldr	r2, [r3, #8]
   17324:	ldr	r3, [fp, #-12]
   17328:	add	r1, r3, #1
   1732c:	str	r1, [fp, #-12]
   17330:	lsl	r3, r3, #2
   17334:	add	r3, r2, r3
   17338:	mvn	r2, #0
   1733c:	str	r2, [r3]
   17340:	ldr	r2, [fp, #-12]
   17344:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17348:	cmp	r2, r3
   1734c:	blt	1731c <__assert_fail@plt+0x5ffc>
   17350:	b	174c8 <__assert_fail@plt+0x61a8>
   17354:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17358:	cmn	r3, #1
   1735c:	beq	17390 <__assert_fail@plt+0x6070>
   17360:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17364:	cmp	r3, #0
   17368:	beq	17390 <__assert_fail@plt+0x6070>
   1736c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17370:	cmn	r3, #2
   17374:	bne	174a8 <__assert_fail@plt+0x6188>
   17378:	ldr	r3, [fp, #-160]	; 0xffffff60
   1737c:	ldr	r2, [r3, #36]	; 0x24
   17380:	ldr	r3, [fp, #-160]	; 0xffffff60
   17384:	ldr	r3, [r3, #48]	; 0x30
   17388:	cmp	r2, r3
   1738c:	blt	174a8 <__assert_fail@plt+0x6188>
   17390:	ldr	r3, [fp, #-160]	; 0xffffff60
   17394:	ldr	r3, [r3]
   17398:	ldr	r2, [fp, #-160]	; 0xffffff60
   1739c:	ldr	r1, [r2, #24]
   173a0:	ldr	r2, [fp, #-8]
   173a4:	add	r2, r1, r2
   173a8:	add	r3, r3, r2
   173ac:	ldrb	r3, [r3]
   173b0:	str	r3, [fp, #-36]	; 0xffffffdc
   173b4:	ldr	r3, [fp, #-160]	; 0xffffff60
   173b8:	ldr	r3, [r3, #64]	; 0x40
   173bc:	cmp	r3, #0
   173c0:	movne	r3, #1
   173c4:	moveq	r3, #0
   173c8:	uxtb	r3, r3
   173cc:	cmp	r3, #0
   173d0:	beq	173ec <__assert_fail@plt+0x60cc>
   173d4:	ldr	r3, [fp, #-160]	; 0xffffff60
   173d8:	ldr	r2, [r3, #64]	; 0x40
   173dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   173e0:	add	r3, r2, r3
   173e4:	ldrb	r3, [r3]
   173e8:	str	r3, [fp, #-36]	; 0xffffffdc
   173ec:	ldr	r3, [fp, #-160]	; 0xffffff60
   173f0:	ldr	r2, [r3, #4]
   173f4:	ldr	r3, [fp, #-12]
   173f8:	add	r3, r2, r3
   173fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17400:	uxtb	r2, r2
   17404:	strb	r2, [r3]
   17408:	ldr	r3, [fp, #-160]	; 0xffffff60
   1740c:	ldrb	r3, [r3, #76]	; 0x4c
   17410:	cmp	r3, #0
   17414:	movne	r3, #1
   17418:	moveq	r3, #0
   1741c:	uxtb	r3, r3
   17420:	cmp	r3, #0
   17424:	beq	17444 <__assert_fail@plt+0x6124>
   17428:	ldr	r3, [fp, #-160]	; 0xffffff60
   1742c:	ldr	r2, [r3, #12]
   17430:	ldr	r3, [fp, #-12]
   17434:	lsl	r3, r3, #2
   17438:	add	r3, r2, r3
   1743c:	ldr	r2, [fp, #-8]
   17440:	str	r2, [r3]
   17444:	ldr	r3, [fp, #-8]
   17448:	add	r3, r3, #1
   1744c:	str	r3, [fp, #-8]
   17450:	ldr	r3, [fp, #-160]	; 0xffffff60
   17454:	ldr	r2, [r3, #8]
   17458:	ldr	r3, [fp, #-12]
   1745c:	add	r1, r3, #1
   17460:	str	r1, [fp, #-12]
   17464:	lsl	r3, r3, #2
   17468:	add	r3, r2, r3
   1746c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17470:	str	r2, [r3]
   17474:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17478:	cmn	r3, #1
   1747c:	moveq	r3, #1
   17480:	movne	r3, #0
   17484:	uxtb	r3, r3
   17488:	cmp	r3, #0
   1748c:	beq	174c4 <__assert_fail@plt+0x61a4>
   17490:	ldr	r3, [fp, #-160]	; 0xffffff60
   17494:	add	r3, r3, #16
   17498:	sub	r2, fp, #80	; 0x50
   1749c:	ldm	r2, {r0, r1}
   174a0:	stm	r3, {r0, r1}
   174a4:	b	174c4 <__assert_fail@plt+0x61a4>
   174a8:	ldr	r3, [fp, #-160]	; 0xffffff60
   174ac:	add	r3, r3, #16
   174b0:	sub	r2, fp, #80	; 0x50
   174b4:	ldm	r2, {r0, r1}
   174b8:	stm	r3, {r0, r1}
   174bc:	nop			; (mov r0, r0)
   174c0:	b	174d8 <__assert_fail@plt+0x61b8>
   174c4:	nop			; (mov r0, r0)
   174c8:	ldr	r2, [fp, #-12]
   174cc:	ldr	r3, [fp, #-16]
   174d0:	cmp	r2, r3
   174d4:	blt	16dc4 <__assert_fail@plt+0x5aa4>
   174d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   174dc:	ldr	r2, [fp, #-12]
   174e0:	str	r2, [r3, #28]
   174e4:	ldr	r3, [fp, #-160]	; 0xffffff60
   174e8:	ldr	r2, [fp, #-8]
   174ec:	str	r2, [r3, #32]
   174f0:	mov	r3, #0
   174f4:	mov	r0, r3
   174f8:	sub	sp, fp, #4
   174fc:	pop	{fp, pc}
   17500:	push	{fp, lr}
   17504:	add	fp, sp, #4
   17508:	sub	sp, sp, #48	; 0x30
   1750c:	str	r0, [fp, #-40]	; 0xffffffd8
   17510:	str	r1, [fp, #-44]	; 0xffffffd4
   17514:	str	r2, [fp, #-48]	; 0xffffffd0
   17518:	mvn	r3, #0
   1751c:	str	r3, [fp, #-16]
   17520:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17524:	ldr	r2, [r3, #24]
   17528:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1752c:	ldr	r3, [r3, #32]
   17530:	add	r3, r2, r3
   17534:	str	r3, [fp, #-8]
   17538:	b	17668 <__assert_fail@plt+0x6348>
   1753c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17540:	ldr	r2, [r3, #44]	; 0x2c
   17544:	ldr	r3, [fp, #-8]
   17548:	sub	r3, r2, r3
   1754c:	str	r3, [fp, #-20]	; 0xffffffec
   17550:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17554:	sub	r3, fp, #28
   17558:	add	r2, r2, #16
   1755c:	ldm	r2, {r0, r1}
   17560:	stm	r3, {r0, r1}
   17564:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17568:	ldr	r2, [r3]
   1756c:	ldr	r3, [fp, #-8]
   17570:	add	r1, r2, r3
   17574:	ldr	r2, [fp, #-20]	; 0xffffffec
   17578:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1757c:	add	r3, r3, #16
   17580:	sub	r0, fp, #32
   17584:	bl	31724 <__assert_fail@plt+0x20404>
   17588:	str	r0, [fp, #-12]
   1758c:	ldr	r3, [fp, #-12]
   17590:	cmn	r3, #2
   17594:	moveq	r3, #1
   17598:	movne	r3, #0
   1759c:	uxtb	r3, r3
   175a0:	cmp	r3, #0
   175a4:	bne	175c4 <__assert_fail@plt+0x62a4>
   175a8:	ldr	r3, [fp, #-12]
   175ac:	cmn	r3, #1
   175b0:	moveq	r3, #1
   175b4:	movne	r3, #0
   175b8:	uxtb	r3, r3
   175bc:	cmp	r3, #0
   175c0:	beq	175cc <__assert_fail@plt+0x62ac>
   175c4:	mov	r3, #1
   175c8:	b	175d0 <__assert_fail@plt+0x62b0>
   175cc:	mov	r3, #0
   175d0:	cmp	r3, #0
   175d4:	bne	175f4 <__assert_fail@plt+0x62d4>
   175d8:	ldr	r3, [fp, #-12]
   175dc:	cmp	r3, #0
   175e0:	moveq	r3, #1
   175e4:	movne	r3, #0
   175e8:	uxtb	r3, r3
   175ec:	cmp	r3, #0
   175f0:	beq	17650 <__assert_fail@plt+0x6330>
   175f4:	ldr	r3, [fp, #-12]
   175f8:	cmp	r3, #0
   175fc:	beq	1760c <__assert_fail@plt+0x62ec>
   17600:	ldr	r3, [fp, #-20]	; 0xffffffec
   17604:	cmp	r3, #0
   17608:	bne	17618 <__assert_fail@plt+0x62f8>
   1760c:	mov	r3, #0
   17610:	str	r3, [fp, #-16]
   17614:	b	17630 <__assert_fail@plt+0x6310>
   17618:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1761c:	ldr	r2, [r3]
   17620:	ldr	r3, [fp, #-8]
   17624:	add	r3, r2, r3
   17628:	ldrb	r3, [r3]
   1762c:	str	r3, [fp, #-16]
   17630:	mov	r3, #1
   17634:	str	r3, [fp, #-12]
   17638:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1763c:	add	r3, r3, #16
   17640:	sub	r2, fp, #28
   17644:	ldm	r2, {r0, r1}
   17648:	stm	r3, {r0, r1}
   1764c:	b	17658 <__assert_fail@plt+0x6338>
   17650:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17654:	str	r3, [fp, #-16]
   17658:	ldr	r2, [fp, #-8]
   1765c:	ldr	r3, [fp, #-12]
   17660:	add	r3, r2, r3
   17664:	str	r3, [fp, #-8]
   17668:	ldr	r2, [fp, #-8]
   1766c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17670:	cmp	r2, r3
   17674:	blt	1753c <__assert_fail@plt+0x621c>
   17678:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1767c:	ldr	r2, [fp, #-16]
   17680:	str	r2, [r3]
   17684:	ldr	r3, [fp, #-8]
   17688:	mov	r0, r3
   1768c:	sub	sp, fp, #4
   17690:	pop	{fp, pc}
   17694:	push	{r4, fp, lr}
   17698:	add	fp, sp, #8
   1769c:	sub	sp, sp, #28
   176a0:	str	r0, [fp, #-32]	; 0xffffffe0
   176a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   176a8:	ldr	r2, [r3, #36]	; 0x24
   176ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   176b0:	ldr	r3, [r3, #48]	; 0x30
   176b4:	cmp	r2, r3
   176b8:	movlt	r3, r2
   176bc:	movge	r3, r3
   176c0:	str	r3, [fp, #-24]	; 0xffffffe8
   176c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   176c8:	ldr	r3, [r3, #28]
   176cc:	str	r3, [fp, #-16]
   176d0:	b	17760 <__assert_fail@plt+0x6440>
   176d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   176d8:	ldr	r3, [r3]
   176dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   176e0:	ldr	r1, [r2, #24]
   176e4:	ldr	r2, [fp, #-16]
   176e8:	add	r2, r1, r2
   176ec:	add	r3, r3, r2
   176f0:	ldrb	r3, [r3]
   176f4:	str	r3, [fp, #-20]	; 0xffffffec
   176f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   176fc:	ldr	r3, [r3, #64]	; 0x40
   17700:	cmp	r3, #0
   17704:	movne	r3, #1
   17708:	moveq	r3, #0
   1770c:	uxtb	r3, r3
   17710:	cmp	r3, #0
   17714:	beq	17730 <__assert_fail@plt+0x6410>
   17718:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1771c:	ldr	r2, [r3, #64]	; 0x40
   17720:	ldr	r3, [fp, #-20]	; 0xffffffec
   17724:	add	r3, r2, r3
   17728:	ldrb	r3, [r3]
   1772c:	str	r3, [fp, #-20]	; 0xffffffec
   17730:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17734:	ldr	r2, [r3, #4]
   17738:	ldr	r3, [fp, #-16]
   1773c:	add	r4, r2, r3
   17740:	ldr	r0, [fp, #-20]	; 0xffffffec
   17744:	bl	1129c <toupper@plt>
   17748:	mov	r3, r0
   1774c:	uxtb	r3, r3
   17750:	strb	r3, [r4]
   17754:	ldr	r3, [fp, #-16]
   17758:	add	r3, r3, #1
   1775c:	str	r3, [fp, #-16]
   17760:	ldr	r2, [fp, #-16]
   17764:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17768:	cmp	r2, r3
   1776c:	blt	176d4 <__assert_fail@plt+0x63b4>
   17770:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17774:	ldr	r2, [fp, #-16]
   17778:	str	r2, [r3, #28]
   1777c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17780:	ldr	r2, [fp, #-16]
   17784:	str	r2, [r3, #32]
   17788:	nop			; (mov r0, r0)
   1778c:	sub	sp, fp, #8
   17790:	pop	{r4, fp, pc}
   17794:	push	{fp}		; (str fp, [sp, #-4]!)
   17798:	add	fp, sp, #0
   1779c:	sub	sp, sp, #28
   177a0:	str	r0, [fp, #-24]	; 0xffffffe8
   177a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   177a8:	ldr	r2, [r3, #36]	; 0x24
   177ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   177b0:	ldr	r3, [r3, #48]	; 0x30
   177b4:	cmp	r2, r3
   177b8:	movlt	r3, r2
   177bc:	movge	r3, r3
   177c0:	str	r3, [fp, #-12]
   177c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   177c8:	ldr	r3, [r3, #28]
   177cc:	str	r3, [fp, #-8]
   177d0:	b	1782c <__assert_fail@plt+0x650c>
   177d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   177d8:	ldr	r3, [r3]
   177dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177e0:	ldr	r1, [r2, #24]
   177e4:	ldr	r2, [fp, #-8]
   177e8:	add	r2, r1, r2
   177ec:	add	r3, r3, r2
   177f0:	ldrb	r3, [r3]
   177f4:	str	r3, [fp, #-16]
   177f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   177fc:	ldr	r2, [r3, #4]
   17800:	ldr	r3, [fp, #-8]
   17804:	add	r3, r2, r3
   17808:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1780c:	ldr	r1, [r2, #64]	; 0x40
   17810:	ldr	r2, [fp, #-16]
   17814:	add	r2, r1, r2
   17818:	ldrb	r2, [r2]
   1781c:	strb	r2, [r3]
   17820:	ldr	r3, [fp, #-8]
   17824:	add	r3, r3, #1
   17828:	str	r3, [fp, #-8]
   1782c:	ldr	r2, [fp, #-8]
   17830:	ldr	r3, [fp, #-12]
   17834:	cmp	r2, r3
   17838:	blt	177d4 <__assert_fail@plt+0x64b4>
   1783c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17840:	ldr	r2, [fp, #-8]
   17844:	str	r2, [r3, #28]
   17848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1784c:	ldr	r2, [fp, #-8]
   17850:	str	r2, [r3, #32]
   17854:	nop			; (mov r0, r0)
   17858:	add	sp, fp, #0
   1785c:	pop	{fp}		; (ldr fp, [sp], #4)
   17860:	bx	lr
   17864:	push	{fp, lr}
   17868:	add	fp, sp, #4
   1786c:	sub	sp, sp, #104	; 0x68
   17870:	str	r0, [fp, #-96]	; 0xffffffa0
   17874:	str	r1, [fp, #-100]	; 0xffffff9c
   17878:	str	r2, [fp, #-104]	; 0xffffff98
   1787c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17880:	ldr	r2, [r3, #24]
   17884:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17888:	cmp	r2, r3
   1788c:	movle	r3, #1
   17890:	movgt	r3, #0
   17894:	uxtb	r3, r3
   17898:	cmp	r3, #0
   1789c:	beq	178b8 <__assert_fail@plt+0x6598>
   178a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   178a4:	ldr	r3, [r3, #24]
   178a8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   178ac:	sub	r3, r2, r3
   178b0:	str	r3, [fp, #-8]
   178b4:	b	1797c <__assert_fail@plt+0x665c>
   178b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   178bc:	ldr	r3, [r3, #80]	; 0x50
   178c0:	cmp	r3, #1
   178c4:	ble	178e0 <__assert_fail@plt+0x65c0>
   178c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   178cc:	add	r3, r3, #16
   178d0:	mov	r2, #8
   178d4:	mov	r1, #0
   178d8:	mov	r0, r3
   178dc:	bl	11248 <memset@plt>
   178e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   178e4:	ldr	r2, [r3, #44]	; 0x2c
   178e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   178ec:	str	r2, [r3, #48]	; 0x30
   178f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   178f4:	ldr	r2, [r3, #52]	; 0x34
   178f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   178fc:	str	r2, [r3, #56]	; 0x38
   17900:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17904:	mov	r2, #0
   17908:	str	r2, [r3, #28]
   1790c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17910:	mov	r2, #0
   17914:	str	r2, [r3, #24]
   17918:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1791c:	mov	r2, #0
   17920:	str	r2, [r3, #32]
   17924:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17928:	mov	r2, #0
   1792c:	strb	r2, [r3, #76]	; 0x4c
   17930:	ldr	r3, [fp, #-104]	; 0xffffff98
   17934:	and	r3, r3, #1
   17938:	cmp	r3, #0
   1793c:	beq	17948 <__assert_fail@plt+0x6628>
   17940:	mov	r2, #4
   17944:	b	1794c <__assert_fail@plt+0x662c>
   17948:	mov	r2, #6
   1794c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17950:	str	r2, [r3, #60]	; 0x3c
   17954:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17958:	ldrb	r3, [r3, #75]	; 0x4b
   1795c:	cmp	r3, #0
   17960:	bne	17974 <__assert_fail@plt+0x6654>
   17964:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17968:	ldr	r2, [r3]
   1796c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17970:	str	r2, [r3, #4]
   17974:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17978:	str	r3, [fp, #-8]
   1797c:	ldr	r3, [fp, #-8]
   17980:	cmp	r3, #0
   17984:	movne	r3, #1
   17988:	moveq	r3, #0
   1798c:	uxtb	r3, r3
   17990:	cmp	r3, #0
   17994:	beq	183c0 <__assert_fail@plt+0x70a0>
   17998:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1799c:	ldr	r2, [r3, #32]
   179a0:	ldr	r3, [fp, #-8]
   179a4:	cmp	r2, r3
   179a8:	movgt	r3, #1
   179ac:	movle	r3, #0
   179b0:	uxtb	r3, r3
   179b4:	cmp	r3, #0
   179b8:	beq	17eb4 <__assert_fail@plt+0x6b94>
   179bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   179c0:	ldrb	r3, [r3, #76]	; 0x4c
   179c4:	cmp	r3, #0
   179c8:	beq	17dc8 <__assert_fail@plt+0x6aa8>
   179cc:	mov	r3, #0
   179d0:	str	r3, [fp, #-12]
   179d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   179d8:	ldr	r3, [r3, #28]
   179dc:	str	r3, [fp, #-16]
   179e0:	ldr	r2, [fp, #-16]
   179e4:	ldr	r3, [fp, #-12]
   179e8:	add	r3, r2, r3
   179ec:	lsr	r2, r3, #31
   179f0:	add	r3, r2, r3
   179f4:	asr	r3, r3, #1
   179f8:	str	r3, [fp, #-20]	; 0xffffffec
   179fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17a00:	ldr	r2, [r3, #12]
   17a04:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a08:	lsl	r3, r3, #2
   17a0c:	add	r3, r2, r3
   17a10:	ldr	r2, [r3]
   17a14:	ldr	r3, [fp, #-8]
   17a18:	cmp	r2, r3
   17a1c:	ble	17a2c <__assert_fail@plt+0x670c>
   17a20:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a24:	str	r3, [fp, #-16]
   17a28:	b	17a5c <__assert_fail@plt+0x673c>
   17a2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17a30:	ldr	r2, [r3, #12]
   17a34:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a38:	lsl	r3, r3, #2
   17a3c:	add	r3, r2, r3
   17a40:	ldr	r2, [r3]
   17a44:	ldr	r3, [fp, #-8]
   17a48:	cmp	r2, r3
   17a4c:	bge	17a70 <__assert_fail@plt+0x6750>
   17a50:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a54:	add	r3, r3, #1
   17a58:	str	r3, [fp, #-12]
   17a5c:	ldr	r2, [fp, #-12]
   17a60:	ldr	r3, [fp, #-16]
   17a64:	cmp	r2, r3
   17a68:	blt	179e0 <__assert_fail@plt+0x66c0>
   17a6c:	b	17a74 <__assert_fail@plt+0x6754>
   17a70:	nop			; (mov r0, r0)
   17a74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17a78:	ldr	r2, [r3, #12]
   17a7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a80:	lsl	r3, r3, #2
   17a84:	add	r3, r2, r3
   17a88:	ldr	r2, [r3]
   17a8c:	ldr	r3, [fp, #-8]
   17a90:	cmp	r2, r3
   17a94:	bge	17aa4 <__assert_fail@plt+0x6784>
   17a98:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a9c:	add	r3, r3, #1
   17aa0:	str	r3, [fp, #-20]	; 0xffffffec
   17aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17aa8:	sub	r3, r3, #1
   17aac:	ldr	r2, [fp, #-104]	; 0xffffff98
   17ab0:	mov	r1, r3
   17ab4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17ab8:	bl	188b0 <__assert_fail@plt+0x7590>
   17abc:	mov	r2, r0
   17ac0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17ac4:	str	r2, [r3, #60]	; 0x3c
   17ac8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17acc:	ldr	r2, [r3, #28]
   17ad0:	ldr	r3, [fp, #-8]
   17ad4:	cmp	r2, r3
   17ad8:	ble	17c18 <__assert_fail@plt+0x68f8>
   17adc:	ldr	r2, [fp, #-20]	; 0xffffffec
   17ae0:	ldr	r3, [fp, #-8]
   17ae4:	cmp	r2, r3
   17ae8:	bne	17c18 <__assert_fail@plt+0x68f8>
   17aec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17af0:	ldr	r2, [r3, #12]
   17af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17af8:	lsl	r3, r3, #2
   17afc:	add	r3, r2, r3
   17b00:	ldr	r2, [r3]
   17b04:	ldr	r3, [fp, #-8]
   17b08:	cmp	r2, r3
   17b0c:	bne	17c18 <__assert_fail@plt+0x68f8>
   17b10:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17b14:	ldr	r0, [r3, #8]
   17b18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17b1c:	ldr	r2, [r3, #8]
   17b20:	ldr	r3, [fp, #-8]
   17b24:	lsl	r3, r3, #2
   17b28:	add	r1, r2, r3
   17b2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17b30:	ldr	r2, [r3, #28]
   17b34:	ldr	r3, [fp, #-8]
   17b38:	sub	r3, r2, r3
   17b3c:	lsl	r3, r3, #2
   17b40:	mov	r2, r3
   17b44:	bl	11074 <memmove@plt>
   17b48:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17b4c:	ldr	r0, [r3, #4]
   17b50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17b54:	ldr	r2, [r3, #4]
   17b58:	ldr	r3, [fp, #-8]
   17b5c:	add	r1, r2, r3
   17b60:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17b64:	ldr	r2, [r3, #28]
   17b68:	ldr	r3, [fp, #-8]
   17b6c:	sub	r3, r2, r3
   17b70:	mov	r2, r3
   17b74:	bl	11074 <memmove@plt>
   17b78:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17b7c:	ldr	r2, [r3, #28]
   17b80:	ldr	r3, [fp, #-8]
   17b84:	sub	r2, r2, r3
   17b88:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17b8c:	str	r2, [r3, #28]
   17b90:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17b94:	ldr	r2, [r3, #32]
   17b98:	ldr	r3, [fp, #-8]
   17b9c:	sub	r2, r2, r3
   17ba0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17ba4:	str	r2, [r3, #32]
   17ba8:	mov	r3, #0
   17bac:	str	r3, [fp, #-12]
   17bb0:	b	17c00 <__assert_fail@plt+0x68e0>
   17bb4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17bb8:	ldr	r2, [r3, #12]
   17bbc:	ldr	r3, [fp, #-12]
   17bc0:	lsl	r3, r3, #2
   17bc4:	add	r3, r2, r3
   17bc8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17bcc:	ldr	r1, [r2, #12]
   17bd0:	ldr	r0, [fp, #-12]
   17bd4:	ldr	r2, [fp, #-8]
   17bd8:	add	r2, r0, r2
   17bdc:	lsl	r2, r2, #2
   17be0:	add	r2, r1, r2
   17be4:	ldr	r1, [r2]
   17be8:	ldr	r2, [fp, #-8]
   17bec:	sub	r2, r1, r2
   17bf0:	str	r2, [r3]
   17bf4:	ldr	r3, [fp, #-12]
   17bf8:	add	r3, r3, #1
   17bfc:	str	r3, [fp, #-12]
   17c00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17c04:	ldr	r2, [r3, #28]
   17c08:	ldr	r3, [fp, #-12]
   17c0c:	cmp	r2, r3
   17c10:	bgt	17bb4 <__assert_fail@plt+0x6894>
   17c14:	b	18398 <__assert_fail@plt+0x7078>
   17c18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17c1c:	ldr	r2, [r3, #44]	; 0x2c
   17c20:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17c24:	sub	r2, r2, r3
   17c28:	ldr	r3, [fp, #-8]
   17c2c:	add	r2, r2, r3
   17c30:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17c34:	str	r2, [r3, #48]	; 0x30
   17c38:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17c3c:	ldr	r2, [r3, #52]	; 0x34
   17c40:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17c44:	sub	r2, r2, r3
   17c48:	ldr	r3, [fp, #-8]
   17c4c:	add	r2, r2, r3
   17c50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17c54:	str	r2, [r3, #56]	; 0x38
   17c58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17c5c:	mov	r2, #0
   17c60:	strb	r2, [r3, #76]	; 0x4c
   17c64:	b	17c74 <__assert_fail@plt+0x6954>
   17c68:	ldr	r3, [fp, #-20]	; 0xffffffec
   17c6c:	sub	r3, r3, #1
   17c70:	str	r3, [fp, #-20]	; 0xffffffec
   17c74:	ldr	r3, [fp, #-20]	; 0xffffffec
   17c78:	cmp	r3, #0
   17c7c:	ble	17cd8 <__assert_fail@plt+0x69b8>
   17c80:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17c84:	ldr	r2, [r3, #12]
   17c88:	ldr	r3, [fp, #-20]	; 0xffffffec
   17c8c:	sub	r3, r3, #-1073741823	; 0xc0000001
   17c90:	lsl	r3, r3, #2
   17c94:	add	r3, r2, r3
   17c98:	ldr	r2, [r3]
   17c9c:	ldr	r3, [fp, #-8]
   17ca0:	cmp	r2, r3
   17ca4:	beq	17c68 <__assert_fail@plt+0x6948>
   17ca8:	b	17cd8 <__assert_fail@plt+0x69b8>
   17cac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17cb0:	ldr	r2, [r3, #8]
   17cb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17cb8:	lsl	r3, r3, #2
   17cbc:	add	r3, r2, r3
   17cc0:	ldr	r3, [r3]
   17cc4:	cmn	r3, #1
   17cc8:	bne	17cf0 <__assert_fail@plt+0x69d0>
   17ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17cd0:	add	r3, r3, #1
   17cd4:	str	r3, [fp, #-20]	; 0xffffffec
   17cd8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17cdc:	ldr	r2, [r3, #28]
   17ce0:	ldr	r3, [fp, #-20]	; 0xffffffec
   17ce4:	cmp	r2, r3
   17ce8:	bgt	17cac <__assert_fail@plt+0x698c>
   17cec:	b	17cf4 <__assert_fail@plt+0x69d4>
   17cf0:	nop			; (mov r0, r0)
   17cf4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17cf8:	ldr	r2, [r3, #28]
   17cfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d00:	cmp	r2, r3
   17d04:	bne	17d18 <__assert_fail@plt+0x69f8>
   17d08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d0c:	mov	r2, #0
   17d10:	str	r2, [r3, #28]
   17d14:	b	17db4 <__assert_fail@plt+0x6a94>
   17d18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d1c:	ldr	r2, [r3, #12]
   17d20:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d24:	lsl	r3, r3, #2
   17d28:	add	r3, r2, r3
   17d2c:	ldr	r2, [r3]
   17d30:	ldr	r3, [fp, #-8]
   17d34:	sub	r2, r2, r3
   17d38:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d3c:	str	r2, [r3, #28]
   17d40:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d44:	ldr	r3, [r3, #28]
   17d48:	cmp	r3, #0
   17d4c:	beq	17db4 <__assert_fail@plt+0x6a94>
   17d50:	mov	r3, #0
   17d54:	str	r3, [fp, #-12]
   17d58:	b	17d84 <__assert_fail@plt+0x6a64>
   17d5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d60:	ldr	r2, [r3, #8]
   17d64:	ldr	r3, [fp, #-12]
   17d68:	lsl	r3, r3, #2
   17d6c:	add	r3, r2, r3
   17d70:	mvn	r2, #0
   17d74:	str	r2, [r3]
   17d78:	ldr	r3, [fp, #-12]
   17d7c:	add	r3, r3, #1
   17d80:	str	r3, [fp, #-12]
   17d84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d88:	ldr	r2, [r3, #28]
   17d8c:	ldr	r3, [fp, #-12]
   17d90:	cmp	r2, r3
   17d94:	bgt	17d5c <__assert_fail@plt+0x6a3c>
   17d98:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d9c:	ldr	r0, [r3, #4]
   17da0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17da4:	ldr	r3, [r3, #28]
   17da8:	mov	r2, r3
   17dac:	mov	r1, #255	; 0xff
   17db0:	bl	11248 <memset@plt>
   17db4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17db8:	ldr	r2, [r3, #28]
   17dbc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17dc0:	str	r2, [r3, #32]
   17dc4:	b	18398 <__assert_fail@plt+0x7078>
   17dc8:	ldr	r3, [fp, #-8]
   17dcc:	sub	r3, r3, #1
   17dd0:	ldr	r2, [fp, #-104]	; 0xffffff98
   17dd4:	mov	r1, r3
   17dd8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17ddc:	bl	188b0 <__assert_fail@plt+0x7590>
   17de0:	mov	r2, r0
   17de4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17de8:	str	r2, [r3, #60]	; 0x3c
   17dec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17df0:	ldr	r3, [r3, #80]	; 0x50
   17df4:	cmp	r3, #1
   17df8:	ble	17e34 <__assert_fail@plt+0x6b14>
   17dfc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e00:	ldr	r0, [r3, #8]
   17e04:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e08:	ldr	r2, [r3, #8]
   17e0c:	ldr	r3, [fp, #-8]
   17e10:	lsl	r3, r3, #2
   17e14:	add	r1, r2, r3
   17e18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e1c:	ldr	r2, [r3, #28]
   17e20:	ldr	r3, [fp, #-8]
   17e24:	sub	r3, r2, r3
   17e28:	lsl	r3, r3, #2
   17e2c:	mov	r2, r3
   17e30:	bl	11074 <memmove@plt>
   17e34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e38:	ldrb	r3, [r3, #75]	; 0x4b
   17e3c:	cmp	r3, #0
   17e40:	beq	17e74 <__assert_fail@plt+0x6b54>
   17e44:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e48:	ldr	r0, [r3, #4]
   17e4c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e50:	ldr	r2, [r3, #4]
   17e54:	ldr	r3, [fp, #-8]
   17e58:	add	r1, r2, r3
   17e5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e60:	ldr	r2, [r3, #28]
   17e64:	ldr	r3, [fp, #-8]
   17e68:	sub	r3, r2, r3
   17e6c:	mov	r2, r3
   17e70:	bl	11074 <memmove@plt>
   17e74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e78:	ldr	r2, [r3, #28]
   17e7c:	ldr	r3, [fp, #-8]
   17e80:	sub	r2, r2, r3
   17e84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e88:	str	r2, [r3, #28]
   17e8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17e90:	ldr	r2, [r3, #32]
   17e94:	ldr	r3, [fp, #-8]
   17e98:	sub	r2, r2, r3
   17e9c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17ea0:	str	r2, [r3, #32]
   17ea4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17ea8:	ldr	r3, [r3, #28]
   17eac:	cmp	r3, #0
   17eb0:	b	18398 <__assert_fail@plt+0x7078>
   17eb4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17eb8:	ldr	r3, [r3, #28]
   17ebc:	str	r3, [fp, #-48]	; 0xffffffd0
   17ec0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17ec4:	ldrb	r3, [r3, #76]	; 0x4c
   17ec8:	cmp	r3, #0
   17ecc:	beq	17f1c <__assert_fail@plt+0x6bfc>
   17ed0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17ed4:	ldr	r2, [r3, #44]	; 0x2c
   17ed8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17edc:	sub	r2, r2, r3
   17ee0:	ldr	r3, [fp, #-8]
   17ee4:	add	r2, r2, r3
   17ee8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17eec:	str	r2, [r3, #48]	; 0x30
   17ef0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17ef4:	ldr	r2, [r3, #52]	; 0x34
   17ef8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17efc:	sub	r2, r2, r3
   17f00:	ldr	r3, [fp, #-8]
   17f04:	add	r2, r2, r3
   17f08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f0c:	str	r2, [r3, #56]	; 0x38
   17f10:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f14:	mov	r2, #0
   17f18:	strb	r2, [r3, #76]	; 0x4c
   17f1c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f20:	mov	r2, #0
   17f24:	str	r2, [r3, #28]
   17f28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f2c:	ldr	r3, [r3, #80]	; 0x50
   17f30:	cmp	r3, #1
   17f34:	ble	182e4 <__assert_fail@plt+0x6fc4>
   17f38:	mvn	r3, #0
   17f3c:	str	r3, [fp, #-68]	; 0xffffffbc
   17f40:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f44:	ldrb	r3, [r3, #73]	; 0x49
   17f48:	cmp	r3, #0
   17f4c:	beq	18168 <__assert_fail@plt+0x6e48>
   17f50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f54:	ldr	r3, [r3]
   17f58:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17f5c:	ldr	r2, [r2, #24]
   17f60:	add	r3, r3, r2
   17f64:	str	r3, [fp, #-52]	; 0xffffffcc
   17f68:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f6c:	ldr	r3, [r3, #80]	; 0x50
   17f70:	ldr	r2, [fp, #-8]
   17f74:	sub	r3, r2, r3
   17f78:	mov	r2, r3
   17f7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17f80:	add	r3, r3, r2
   17f84:	str	r3, [fp, #-32]	; 0xffffffe0
   17f88:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f8c:	ldr	r2, [r3]
   17f90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f94:	cmp	r2, r3
   17f98:	bls	17fa8 <__assert_fail@plt+0x6c88>
   17f9c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fa0:	ldr	r3, [r3]
   17fa4:	str	r3, [fp, #-32]	; 0xffffffe0
   17fa8:	ldr	r3, [fp, #-8]
   17fac:	sub	r3, r3, #1
   17fb0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17fb4:	add	r3, r2, r3
   17fb8:	str	r3, [fp, #-28]	; 0xffffffe4
   17fbc:	b	18150 <__assert_fail@plt+0x6e30>
   17fc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17fc4:	ldrb	r3, [r3]
   17fc8:	and	r3, r3, #192	; 0xc0
   17fcc:	cmp	r3, #128	; 0x80
   17fd0:	beq	18144 <__assert_fail@plt+0x6e24>
   17fd4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fd8:	ldr	r3, [r3, #48]	; 0x30
   17fdc:	mov	r2, r3
   17fe0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17fe4:	add	r3, r3, r2
   17fe8:	mov	r2, r3
   17fec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ff0:	sub	r3, r2, r3
   17ff4:	str	r3, [fp, #-56]	; 0xffffffc8
   17ff8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ffc:	str	r3, [fp, #-36]	; 0xffffffdc
   18000:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18004:	ldr	r3, [r3, #64]	; 0x40
   18008:	cmp	r3, #0
   1800c:	movne	r3, #1
   18010:	moveq	r3, #0
   18014:	uxtb	r3, r3
   18018:	cmp	r3, #0
   1801c:	beq	1808c <__assert_fail@plt+0x6d6c>
   18020:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18024:	cmp	r3, #6
   18028:	movlt	r3, r3
   1802c:	movge	r3, #6
   18030:	str	r3, [fp, #-40]	; 0xffffffd8
   18034:	b	1806c <__assert_fail@plt+0x6d4c>
   18038:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1803c:	ldr	r3, [r3, #64]	; 0x40
   18040:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18044:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18048:	add	r2, r1, r2
   1804c:	ldrb	r2, [r2]
   18050:	add	r3, r3, r2
   18054:	ldrb	r1, [r3]
   18058:	sub	r2, fp, #88	; 0x58
   1805c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18060:	add	r3, r2, r3
   18064:	mov	r2, r1
   18068:	strb	r2, [r3]
   1806c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18070:	sub	r3, r3, #1
   18074:	str	r3, [fp, #-40]	; 0xffffffd8
   18078:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1807c:	cmp	r3, #0
   18080:	bge	18038 <__assert_fail@plt+0x6d18>
   18084:	sub	r3, fp, #88	; 0x58
   18088:	str	r3, [fp, #-36]	; 0xffffffdc
   1808c:	sub	r3, fp, #76	; 0x4c
   18090:	mov	r2, #8
   18094:	mov	r1, #0
   18098:	mov	r0, r3
   1809c:	bl	11248 <memset@plt>
   180a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   180a4:	sub	r3, fp, #76	; 0x4c
   180a8:	sub	r0, fp, #80	; 0x50
   180ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   180b0:	bl	31724 <__assert_fail@plt+0x20404>
   180b4:	str	r0, [fp, #-60]	; 0xffffffc4
   180b8:	ldr	r3, [fp, #-8]
   180bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   180c0:	add	r3, r2, r3
   180c4:	mov	r2, r3
   180c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   180cc:	sub	r3, r2, r3
   180d0:	mov	r2, r3
   180d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   180d8:	cmp	r2, r3
   180dc:	bhi	18164 <__assert_fail@plt+0x6e44>
   180e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   180e4:	cmn	r3, #3
   180e8:	bhi	18164 <__assert_fail@plt+0x6e44>
   180ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   180f0:	add	r3, r3, #16
   180f4:	mov	r2, #8
   180f8:	mov	r1, #0
   180fc:	mov	r0, r3
   18100:	bl	11248 <memset@plt>
   18104:	ldr	r3, [fp, #-8]
   18108:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1810c:	add	r3, r2, r3
   18110:	mov	r2, r3
   18114:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18118:	sub	r3, r2, r3
   1811c:	mov	r2, r3
   18120:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18124:	sub	r3, r3, r2
   18128:	mov	r2, r3
   1812c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18130:	str	r2, [r3, #28]
   18134:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18138:	str	r3, [fp, #-68]	; 0xffffffbc
   1813c:	nop			; (mov r0, r0)
   18140:	b	18164 <__assert_fail@plt+0x6e44>
   18144:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18148:	sub	r3, r3, #1
   1814c:	str	r3, [fp, #-28]	; 0xffffffe4
   18150:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18154:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18158:	cmp	r2, r3
   1815c:	bcs	17fc0 <__assert_fail@plt+0x6ca0>
   18160:	b	18168 <__assert_fail@plt+0x6e48>
   18164:	nop			; (mov r0, r0)
   18168:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1816c:	cmn	r3, #1
   18170:	bne	1819c <__assert_fail@plt+0x6e7c>
   18174:	sub	r3, fp, #68	; 0x44
   18178:	mov	r2, r3
   1817c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18180:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18184:	bl	17500 <__assert_fail@plt+0x61e0>
   18188:	mov	r2, r0
   1818c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18190:	sub	r2, r2, r3
   18194:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18198:	str	r2, [r3, #28]
   1819c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   181a0:	cmn	r3, #1
   181a4:	bne	181d0 <__assert_fail@plt+0x6eb0>
   181a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   181ac:	sub	r3, r3, #1
   181b0:	ldr	r2, [fp, #-104]	; 0xffffff98
   181b4:	mov	r1, r3
   181b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   181bc:	bl	188b0 <__assert_fail@plt+0x7590>
   181c0:	mov	r2, r0
   181c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   181c8:	str	r2, [r3, #60]	; 0x3c
   181cc:	b	1824c <__assert_fail@plt+0x6f2c>
   181d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   181d4:	ldrb	r3, [r3, #78]	; 0x4e
   181d8:	cmp	r3, #0
   181dc:	movne	r3, #1
   181e0:	moveq	r3, #0
   181e4:	uxtb	r3, r3
   181e8:	cmp	r3, #0
   181ec:	beq	18214 <__assert_fail@plt+0x6ef4>
   181f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   181f4:	mov	r0, r3
   181f8:	bl	11230 <iswalnum@plt>
   181fc:	mov	r3, r0
   18200:	cmp	r3, #0
   18204:	bne	18240 <__assert_fail@plt+0x6f20>
   18208:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1820c:	cmp	r3, #95	; 0x5f
   18210:	beq	18240 <__assert_fail@plt+0x6f20>
   18214:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18218:	cmp	r3, #10
   1821c:	bne	18238 <__assert_fail@plt+0x6f18>
   18220:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18224:	ldrb	r3, [r3, #77]	; 0x4d
   18228:	cmp	r3, #0
   1822c:	beq	18238 <__assert_fail@plt+0x6f18>
   18230:	mov	r3, #2
   18234:	b	18244 <__assert_fail@plt+0x6f24>
   18238:	mov	r3, #0
   1823c:	b	18244 <__assert_fail@plt+0x6f24>
   18240:	mov	r3, #1
   18244:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18248:	str	r3, [r2, #60]	; 0x3c
   1824c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18250:	ldr	r3, [r3, #28]
   18254:	cmp	r3, #0
   18258:	beq	182d0 <__assert_fail@plt+0x6fb0>
   1825c:	mov	r3, #0
   18260:	str	r3, [fp, #-24]	; 0xffffffe8
   18264:	b	18290 <__assert_fail@plt+0x6f70>
   18268:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1826c:	ldr	r2, [r3, #8]
   18270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18274:	lsl	r3, r3, #2
   18278:	add	r3, r2, r3
   1827c:	mvn	r2, #0
   18280:	str	r2, [r3]
   18284:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18288:	add	r3, r3, #1
   1828c:	str	r3, [fp, #-24]	; 0xffffffe8
   18290:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18294:	ldr	r2, [r3, #28]
   18298:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1829c:	cmp	r2, r3
   182a0:	bgt	18268 <__assert_fail@plt+0x6f48>
   182a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182a8:	ldrb	r3, [r3, #75]	; 0x4b
   182ac:	cmp	r3, #0
   182b0:	beq	182d0 <__assert_fail@plt+0x6fb0>
   182b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182b8:	ldr	r0, [r3, #4]
   182bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182c0:	ldr	r3, [r3, #28]
   182c4:	mov	r2, r3
   182c8:	mov	r1, #255	; 0xff
   182cc:	bl	11248 <memset@plt>
   182d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182d4:	ldr	r2, [r3, #28]
   182d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182dc:	str	r2, [r3, #32]
   182e0:	b	18398 <__assert_fail@plt+0x7078>
   182e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182e8:	ldr	r2, [r3]
   182ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182f0:	ldr	r1, [r3, #24]
   182f4:	ldr	r3, [fp, #-8]
   182f8:	add	r3, r1, r3
   182fc:	sub	r3, r3, #1
   18300:	add	r3, r2, r3
   18304:	ldrb	r3, [r3]
   18308:	str	r3, [fp, #-44]	; 0xffffffd4
   1830c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18310:	mov	r2, #0
   18314:	str	r2, [r3, #32]
   18318:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1831c:	ldr	r3, [r3, #64]	; 0x40
   18320:	cmp	r3, #0
   18324:	beq	18340 <__assert_fail@plt+0x7020>
   18328:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1832c:	ldr	r2, [r3, #64]	; 0x40
   18330:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18334:	add	r3, r2, r3
   18338:	ldrb	r3, [r3]
   1833c:	str	r3, [fp, #-44]	; 0xffffffd4
   18340:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18344:	ldr	r3, [r3, #68]	; 0x44
   18348:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1834c:	mov	r0, r3
   18350:	bl	15c88 <__assert_fail@plt+0x4968>
   18354:	mov	r3, r0
   18358:	cmp	r3, #0
   1835c:	bne	1838c <__assert_fail@plt+0x706c>
   18360:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18364:	cmp	r3, #10
   18368:	bne	18384 <__assert_fail@plt+0x7064>
   1836c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18370:	ldrb	r3, [r3, #77]	; 0x4d
   18374:	cmp	r3, #0
   18378:	beq	18384 <__assert_fail@plt+0x7064>
   1837c:	mov	r3, #2
   18380:	b	18390 <__assert_fail@plt+0x7070>
   18384:	mov	r3, #0
   18388:	b	18390 <__assert_fail@plt+0x7070>
   1838c:	mov	r3, #1
   18390:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18394:	str	r3, [r2, #60]	; 0x3c
   18398:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1839c:	ldrb	r3, [r3, #75]	; 0x4b
   183a0:	cmp	r3, #0
   183a4:	bne	183c0 <__assert_fail@plt+0x70a0>
   183a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   183ac:	ldr	r2, [r3, #4]
   183b0:	ldr	r3, [fp, #-8]
   183b4:	add	r2, r2, r3
   183b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   183bc:	str	r2, [r3, #4]
   183c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   183c4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   183c8:	str	r2, [r3, #24]
   183cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   183d0:	ldr	r2, [r3, #48]	; 0x30
   183d4:	ldr	r3, [fp, #-8]
   183d8:	sub	r2, r2, r3
   183dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   183e0:	str	r2, [r3, #48]	; 0x30
   183e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   183e8:	ldr	r2, [r3, #56]	; 0x38
   183ec:	ldr	r3, [fp, #-8]
   183f0:	sub	r2, r2, r3
   183f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   183f8:	str	r2, [r3, #56]	; 0x38
   183fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18400:	ldr	r3, [r3, #80]	; 0x50
   18404:	cmp	r3, #1
   18408:	ble	18458 <__assert_fail@plt+0x7138>
   1840c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18410:	ldrb	r3, [r3, #72]	; 0x48
   18414:	cmp	r3, #0
   18418:	beq	1844c <__assert_fail@plt+0x712c>
   1841c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18420:	bl	169c8 <__assert_fail@plt+0x56a8>
   18424:	str	r0, [fp, #-64]	; 0xffffffc0
   18428:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1842c:	cmp	r3, #0
   18430:	movne	r3, #1
   18434:	moveq	r3, #0
   18438:	uxtb	r3, r3
   1843c:	cmp	r3, #0
   18440:	beq	184b0 <__assert_fail@plt+0x7190>
   18444:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18448:	b	184c0 <__assert_fail@plt+0x71a0>
   1844c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18450:	bl	16650 <__assert_fail@plt+0x5330>
   18454:	b	184b0 <__assert_fail@plt+0x7190>
   18458:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1845c:	ldrb	r3, [r3, #75]	; 0x4b
   18460:	cmp	r3, #0
   18464:	beq	184a0 <__assert_fail@plt+0x7180>
   18468:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1846c:	ldrb	r3, [r3, #72]	; 0x48
   18470:	cmp	r3, #0
   18474:	beq	18484 <__assert_fail@plt+0x7164>
   18478:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1847c:	bl	17694 <__assert_fail@plt+0x6374>
   18480:	b	184b0 <__assert_fail@plt+0x7190>
   18484:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18488:	ldr	r3, [r3, #64]	; 0x40
   1848c:	cmp	r3, #0
   18490:	beq	184b0 <__assert_fail@plt+0x7190>
   18494:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18498:	bl	17794 <__assert_fail@plt+0x6474>
   1849c:	b	184b0 <__assert_fail@plt+0x7190>
   184a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   184a4:	ldr	r2, [r3, #48]	; 0x30
   184a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   184ac:	str	r2, [r3, #28]
   184b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   184b4:	mov	r2, #0
   184b8:	str	r2, [r3, #40]	; 0x28
   184bc:	mov	r3, #0
   184c0:	mov	r0, r3
   184c4:	sub	sp, fp, #4
   184c8:	pop	{fp, pc}
   184cc:	push	{fp}		; (str fp, [sp, #-4]!)
   184d0:	add	fp, sp, #0
   184d4:	sub	sp, sp, #20
   184d8:	str	r0, [fp, #-16]
   184dc:	str	r1, [fp, #-20]	; 0xffffffec
   184e0:	ldr	r3, [fp, #-16]
   184e4:	ldrb	r3, [r3, #75]	; 0x4b
   184e8:	cmp	r3, #0
   184ec:	moveq	r3, #1
   184f0:	movne	r3, #0
   184f4:	uxtb	r3, r3
   184f8:	cmp	r3, #0
   184fc:	beq	18524 <__assert_fail@plt+0x7204>
   18500:	ldr	r3, [fp, #-16]
   18504:	ldr	r3, [r3, #4]
   18508:	ldr	r2, [fp, #-16]
   1850c:	ldr	r1, [r2, #40]	; 0x28
   18510:	ldr	r2, [fp, #-20]	; 0xffffffec
   18514:	add	r2, r1, r2
   18518:	add	r3, r3, r2
   1851c:	ldrb	r3, [r3]
   18520:	b	18688 <__assert_fail@plt+0x7368>
   18524:	ldr	r3, [fp, #-16]
   18528:	ldr	r3, [r3, #80]	; 0x50
   1852c:	cmp	r3, #1
   18530:	ble	185d8 <__assert_fail@plt+0x72b8>
   18534:	ldr	r3, [fp, #-16]
   18538:	ldr	r2, [r3, #8]
   1853c:	ldr	r3, [fp, #-16]
   18540:	ldr	r1, [r3, #40]	; 0x28
   18544:	ldr	r3, [fp, #-20]	; 0xffffffec
   18548:	add	r3, r1, r3
   1854c:	lsl	r3, r3, #2
   18550:	add	r3, r2, r3
   18554:	ldr	r3, [r3]
   18558:	cmn	r3, #1
   1855c:	beq	185b4 <__assert_fail@plt+0x7294>
   18560:	ldr	r3, [fp, #-16]
   18564:	ldr	r2, [r3, #28]
   18568:	ldr	r3, [fp, #-16]
   1856c:	ldr	r1, [r3, #40]	; 0x28
   18570:	ldr	r3, [fp, #-20]	; 0xffffffec
   18574:	add	r3, r1, r3
   18578:	add	r3, r3, #1
   1857c:	cmp	r2, r3
   18580:	beq	185d8 <__assert_fail@plt+0x72b8>
   18584:	ldr	r3, [fp, #-16]
   18588:	ldr	r2, [r3, #8]
   1858c:	ldr	r3, [fp, #-16]
   18590:	ldr	r1, [r3, #40]	; 0x28
   18594:	ldr	r3, [fp, #-20]	; 0xffffffec
   18598:	add	r3, r1, r3
   1859c:	add	r3, r3, #1
   185a0:	lsl	r3, r3, #2
   185a4:	add	r3, r2, r3
   185a8:	ldr	r3, [r3]
   185ac:	cmn	r3, #1
   185b0:	bne	185d8 <__assert_fail@plt+0x72b8>
   185b4:	ldr	r3, [fp, #-16]
   185b8:	ldr	r3, [r3, #4]
   185bc:	ldr	r2, [fp, #-16]
   185c0:	ldr	r1, [r2, #40]	; 0x28
   185c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   185c8:	add	r2, r1, r2
   185cc:	add	r3, r3, r2
   185d0:	ldrb	r3, [r3]
   185d4:	b	18688 <__assert_fail@plt+0x7368>
   185d8:	ldr	r3, [fp, #-16]
   185dc:	ldr	r2, [r3, #40]	; 0x28
   185e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   185e4:	add	r3, r2, r3
   185e8:	str	r3, [fp, #-8]
   185ec:	ldr	r3, [fp, #-16]
   185f0:	ldrb	r3, [r3, #76]	; 0x4c
   185f4:	cmp	r3, #0
   185f8:	beq	18618 <__assert_fail@plt+0x72f8>
   185fc:	ldr	r3, [fp, #-16]
   18600:	ldr	r2, [r3, #12]
   18604:	ldr	r3, [fp, #-8]
   18608:	lsl	r3, r3, #2
   1860c:	add	r3, r2, r3
   18610:	ldr	r3, [r3]
   18614:	str	r3, [fp, #-8]
   18618:	ldr	r3, [fp, #-16]
   1861c:	ldr	r3, [r3]
   18620:	ldr	r2, [fp, #-16]
   18624:	ldr	r1, [r2, #24]
   18628:	ldr	r2, [fp, #-8]
   1862c:	add	r2, r1, r2
   18630:	add	r3, r3, r2
   18634:	ldrb	r3, [r3]
   18638:	str	r3, [fp, #-12]
   1863c:	ldr	r3, [fp, #-16]
   18640:	ldrb	r3, [r3, #76]	; 0x4c
   18644:	cmp	r3, #0
   18648:	beq	18680 <__assert_fail@plt+0x7360>
   1864c:	ldr	r3, [fp, #-12]
   18650:	bic	r3, r3, #127	; 0x7f
   18654:	cmp	r3, #0
   18658:	beq	18680 <__assert_fail@plt+0x7360>
   1865c:	ldr	r3, [fp, #-16]
   18660:	ldr	r3, [r3, #4]
   18664:	ldr	r2, [fp, #-16]
   18668:	ldr	r1, [r2, #40]	; 0x28
   1866c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18670:	add	r2, r1, r2
   18674:	add	r3, r3, r2
   18678:	ldrb	r3, [r3]
   1867c:	b	18688 <__assert_fail@plt+0x7368>
   18680:	ldr	r3, [fp, #-12]
   18684:	uxtb	r3, r3
   18688:	mov	r0, r3
   1868c:	add	sp, fp, #0
   18690:	pop	{fp}		; (ldr fp, [sp], #4)
   18694:	bx	lr
   18698:	push	{r4, fp, lr}
   1869c:	add	fp, sp, #8
   186a0:	sub	sp, sp, #20
   186a4:	str	r0, [fp, #-24]	; 0xffffffe8
   186a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186ac:	ldrb	r3, [r3, #75]	; 0x4b
   186b0:	cmp	r3, #0
   186b4:	moveq	r3, #1
   186b8:	movne	r3, #0
   186bc:	uxtb	r3, r3
   186c0:	cmp	r3, #0
   186c4:	beq	186f0 <__assert_fail@plt+0x73d0>
   186c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186cc:	ldr	r2, [r3, #4]
   186d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186d4:	ldr	r3, [r3, #40]	; 0x28
   186d8:	add	r0, r3, #1
   186dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186e0:	str	r0, [r1, #40]	; 0x28
   186e4:	add	r3, r2, r3
   186e8:	ldrb	r3, [r3]
   186ec:	b	18848 <__assert_fail@plt+0x7528>
   186f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186f4:	ldrb	r3, [r3, #76]	; 0x4c
   186f8:	cmp	r3, #0
   186fc:	beq	18818 <__assert_fail@plt+0x74f8>
   18700:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18704:	ldr	r2, [r3, #40]	; 0x28
   18708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1870c:	ldr	r3, [r3, #28]
   18710:	cmp	r2, r3
   18714:	beq	18764 <__assert_fail@plt+0x7444>
   18718:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1871c:	ldr	r2, [r3, #8]
   18720:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18724:	ldr	r3, [r3, #40]	; 0x28
   18728:	lsl	r3, r3, #2
   1872c:	add	r3, r2, r3
   18730:	ldr	r3, [r3]
   18734:	cmn	r3, #1
   18738:	bne	18764 <__assert_fail@plt+0x7444>
   1873c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18740:	ldr	r2, [r3, #4]
   18744:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18748:	ldr	r3, [r3, #40]	; 0x28
   1874c:	add	r0, r3, #1
   18750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18754:	str	r0, [r1, #40]	; 0x28
   18758:	add	r3, r2, r3
   1875c:	ldrb	r3, [r3]
   18760:	b	18848 <__assert_fail@plt+0x7528>
   18764:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18768:	ldr	r2, [r3, #12]
   1876c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18770:	ldr	r3, [r3, #40]	; 0x28
   18774:	lsl	r3, r3, #2
   18778:	add	r3, r2, r3
   1877c:	ldr	r3, [r3]
   18780:	str	r3, [fp, #-16]
   18784:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18788:	ldr	r3, [r3]
   1878c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18790:	ldr	r1, [r2, #24]
   18794:	ldr	r2, [fp, #-16]
   18798:	add	r2, r1, r2
   1879c:	add	r3, r3, r2
   187a0:	ldrb	r3, [r3]
   187a4:	str	r3, [fp, #-20]	; 0xffffffec
   187a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   187ac:	bic	r3, r3, #127	; 0x7f
   187b0:	cmp	r3, #0
   187b4:	beq	187e0 <__assert_fail@plt+0x74c0>
   187b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187bc:	ldr	r2, [r3, #4]
   187c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187c4:	ldr	r3, [r3, #40]	; 0x28
   187c8:	add	r0, r3, #1
   187cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   187d0:	str	r0, [r1, #40]	; 0x28
   187d4:	add	r3, r2, r3
   187d8:	ldrb	r3, [r3]
   187dc:	b	18848 <__assert_fail@plt+0x7528>
   187e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187e4:	ldr	r4, [r3, #40]	; 0x28
   187e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187ec:	ldr	r3, [r3, #40]	; 0x28
   187f0:	mov	r1, r3
   187f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187f8:	bl	15f0c <__assert_fail@plt+0x4bec>
   187fc:	mov	r3, r0
   18800:	add	r2, r4, r3
   18804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18808:	str	r2, [r3, #40]	; 0x28
   1880c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18810:	uxtb	r3, r3
   18814:	b	18848 <__assert_fail@plt+0x7528>
   18818:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1881c:	ldr	r2, [r3]
   18820:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18824:	ldr	r1, [r3, #24]
   18828:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1882c:	ldr	r3, [r3, #40]	; 0x28
   18830:	add	ip, r3, #1
   18834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18838:	str	ip, [r0, #40]	; 0x28
   1883c:	add	r3, r1, r3
   18840:	add	r3, r2, r3
   18844:	ldrb	r3, [r3]
   18848:	mov	r0, r3
   1884c:	sub	sp, fp, #8
   18850:	pop	{r4, fp, pc}
   18854:	push	{fp, lr}
   18858:	add	fp, sp, #4
   1885c:	sub	sp, sp, #8
   18860:	str	r0, [fp, #-8]
   18864:	ldr	r3, [fp, #-8]
   18868:	ldr	r3, [r3, #8]
   1886c:	mov	r0, r3
   18870:	bl	31500 <__assert_fail@plt+0x201e0>
   18874:	ldr	r3, [fp, #-8]
   18878:	ldr	r3, [r3, #12]
   1887c:	mov	r0, r3
   18880:	bl	31500 <__assert_fail@plt+0x201e0>
   18884:	ldr	r3, [fp, #-8]
   18888:	ldrb	r3, [r3, #75]	; 0x4b
   1888c:	cmp	r3, #0
   18890:	beq	188a4 <__assert_fail@plt+0x7584>
   18894:	ldr	r3, [fp, #-8]
   18898:	ldr	r3, [r3, #4]
   1889c:	mov	r0, r3
   188a0:	bl	31500 <__assert_fail@plt+0x201e0>
   188a4:	nop			; (mov r0, r0)
   188a8:	sub	sp, fp, #4
   188ac:	pop	{fp, pc}
   188b0:	push	{fp, lr}
   188b4:	add	fp, sp, #4
   188b8:	sub	sp, sp, #32
   188bc:	str	r0, [fp, #-24]	; 0xffffffe8
   188c0:	str	r1, [fp, #-28]	; 0xffffffe4
   188c4:	str	r2, [fp, #-32]	; 0xffffffe0
   188c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   188cc:	lsr	r3, r3, #31
   188d0:	uxtb	r3, r3
   188d4:	cmp	r3, #0
   188d8:	beq	188e8 <__assert_fail@plt+0x75c8>
   188dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   188e0:	ldr	r3, [r3, #60]	; 0x3c
   188e4:	b	18a8c <__assert_fail@plt+0x776c>
   188e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   188ec:	ldr	r2, [r3, #48]	; 0x30
   188f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   188f4:	cmp	r2, r3
   188f8:	moveq	r3, #1
   188fc:	movne	r3, #0
   18900:	uxtb	r3, r3
   18904:	cmp	r3, #0
   18908:	beq	1892c <__assert_fail@plt+0x760c>
   1890c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18910:	and	r3, r3, #2
   18914:	cmp	r3, #0
   18918:	beq	18924 <__assert_fail@plt+0x7604>
   1891c:	mov	r3, #8
   18920:	b	18a8c <__assert_fail@plt+0x776c>
   18924:	mov	r3, #10
   18928:	b	18a8c <__assert_fail@plt+0x776c>
   1892c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18930:	ldr	r3, [r3, #80]	; 0x50
   18934:	cmp	r3, #1
   18938:	ble	18a24 <__assert_fail@plt+0x7704>
   1893c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18940:	str	r3, [fp, #-8]
   18944:	b	18974 <__assert_fail@plt+0x7654>
   18948:	ldr	r3, [fp, #-8]
   1894c:	cmp	r3, #0
   18950:	ldr	r3, [fp, #-8]
   18954:	sub	r3, r3, #1
   18958:	str	r3, [fp, #-8]
   1895c:	ldr	r3, [fp, #-8]
   18960:	cmp	r3, #0
   18964:	bge	18974 <__assert_fail@plt+0x7654>
   18968:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1896c:	ldr	r3, [r3, #60]	; 0x3c
   18970:	b	18a8c <__assert_fail@plt+0x776c>
   18974:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18978:	ldr	r2, [r3, #8]
   1897c:	ldr	r3, [fp, #-8]
   18980:	lsl	r3, r3, #2
   18984:	add	r3, r2, r3
   18988:	ldr	r3, [r3]
   1898c:	cmn	r3, #1
   18990:	beq	18948 <__assert_fail@plt+0x7628>
   18994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18998:	ldr	r2, [r3, #8]
   1899c:	ldr	r3, [fp, #-8]
   189a0:	lsl	r3, r3, #2
   189a4:	add	r3, r2, r3
   189a8:	ldr	r3, [r3]
   189ac:	str	r3, [fp, #-12]
   189b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   189b4:	ldrb	r3, [r3, #78]	; 0x4e
   189b8:	cmp	r3, #0
   189bc:	movne	r3, #1
   189c0:	moveq	r3, #0
   189c4:	uxtb	r3, r3
   189c8:	cmp	r3, #0
   189cc:	beq	189f8 <__assert_fail@plt+0x76d8>
   189d0:	ldr	r0, [fp, #-12]
   189d4:	bl	11230 <iswalnum@plt>
   189d8:	mov	r3, r0
   189dc:	cmp	r3, #0
   189e0:	bne	189f0 <__assert_fail@plt+0x76d0>
   189e4:	ldr	r3, [fp, #-12]
   189e8:	cmp	r3, #95	; 0x5f
   189ec:	bne	189f8 <__assert_fail@plt+0x76d8>
   189f0:	mov	r3, #1
   189f4:	b	18a8c <__assert_fail@plt+0x776c>
   189f8:	ldr	r3, [fp, #-12]
   189fc:	cmp	r3, #10
   18a00:	bne	18a1c <__assert_fail@plt+0x76fc>
   18a04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a08:	ldrb	r3, [r3, #77]	; 0x4d
   18a0c:	cmp	r3, #0
   18a10:	beq	18a1c <__assert_fail@plt+0x76fc>
   18a14:	mov	r3, #2
   18a18:	b	18a8c <__assert_fail@plt+0x776c>
   18a1c:	mov	r3, #0
   18a20:	b	18a8c <__assert_fail@plt+0x776c>
   18a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a28:	ldr	r2, [r3, #4]
   18a2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18a30:	add	r3, r2, r3
   18a34:	ldrb	r3, [r3]
   18a38:	str	r3, [fp, #-16]
   18a3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a40:	ldr	r3, [r3, #68]	; 0x44
   18a44:	ldr	r1, [fp, #-16]
   18a48:	mov	r0, r3
   18a4c:	bl	15c88 <__assert_fail@plt+0x4968>
   18a50:	mov	r3, r0
   18a54:	cmp	r3, #0
   18a58:	beq	18a64 <__assert_fail@plt+0x7744>
   18a5c:	mov	r3, #1
   18a60:	b	18a8c <__assert_fail@plt+0x776c>
   18a64:	ldr	r3, [fp, #-16]
   18a68:	cmp	r3, #10
   18a6c:	bne	18a88 <__assert_fail@plt+0x7768>
   18a70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a74:	ldrb	r3, [r3, #77]	; 0x4d
   18a78:	cmp	r3, #0
   18a7c:	beq	18a88 <__assert_fail@plt+0x7768>
   18a80:	mov	r3, #2
   18a84:	b	18a8c <__assert_fail@plt+0x776c>
   18a88:	mov	r3, #0
   18a8c:	mov	r0, r3
   18a90:	sub	sp, fp, #4
   18a94:	pop	{fp, pc}
   18a98:	push	{fp, lr}
   18a9c:	add	fp, sp, #4
   18aa0:	sub	sp, sp, #8
   18aa4:	str	r0, [fp, #-8]
   18aa8:	str	r1, [fp, #-12]
   18aac:	ldr	r3, [fp, #-8]
   18ab0:	ldr	r2, [fp, #-12]
   18ab4:	str	r2, [r3]
   18ab8:	ldr	r3, [fp, #-8]
   18abc:	mov	r2, #0
   18ac0:	str	r2, [r3, #4]
   18ac4:	ldr	r3, [fp, #-12]
   18ac8:	lsl	r3, r3, #2
   18acc:	mov	r0, r3
   18ad0:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   18ad4:	mov	r3, r0
   18ad8:	mov	r2, r3
   18adc:	ldr	r3, [fp, #-8]
   18ae0:	str	r2, [r3, #8]
   18ae4:	ldr	r3, [fp, #-8]
   18ae8:	ldr	r3, [r3, #8]
   18aec:	cmp	r3, #0
   18af0:	moveq	r3, #1
   18af4:	movne	r3, #0
   18af8:	uxtb	r3, r3
   18afc:	cmp	r3, #0
   18b00:	beq	18b0c <__assert_fail@plt+0x77ec>
   18b04:	mov	r3, #12
   18b08:	b	18b10 <__assert_fail@plt+0x77f0>
   18b0c:	mov	r3, #0
   18b10:	mov	r0, r3
   18b14:	sub	sp, fp, #4
   18b18:	pop	{fp, pc}
   18b1c:	push	{fp, lr}
   18b20:	add	fp, sp, #4
   18b24:	sub	sp, sp, #8
   18b28:	str	r0, [fp, #-8]
   18b2c:	str	r1, [fp, #-12]
   18b30:	ldr	r3, [fp, #-8]
   18b34:	mov	r2, #1
   18b38:	str	r2, [r3]
   18b3c:	ldr	r3, [fp, #-8]
   18b40:	mov	r2, #1
   18b44:	str	r2, [r3, #4]
   18b48:	mov	r0, #4
   18b4c:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   18b50:	mov	r3, r0
   18b54:	mov	r2, r3
   18b58:	ldr	r3, [fp, #-8]
   18b5c:	str	r2, [r3, #8]
   18b60:	ldr	r3, [fp, #-8]
   18b64:	ldr	r3, [r3, #8]
   18b68:	cmp	r3, #0
   18b6c:	moveq	r3, #1
   18b70:	movne	r3, #0
   18b74:	uxtb	r3, r3
   18b78:	cmp	r3, #0
   18b7c:	beq	18ba4 <__assert_fail@plt+0x7884>
   18b80:	ldr	r3, [fp, #-8]
   18b84:	mov	r2, #0
   18b88:	str	r2, [r3, #4]
   18b8c:	ldr	r3, [fp, #-8]
   18b90:	ldr	r2, [r3, #4]
   18b94:	ldr	r3, [fp, #-8]
   18b98:	str	r2, [r3]
   18b9c:	mov	r3, #12
   18ba0:	b	18bb8 <__assert_fail@plt+0x7898>
   18ba4:	ldr	r3, [fp, #-8]
   18ba8:	ldr	r3, [r3, #8]
   18bac:	ldr	r2, [fp, #-12]
   18bb0:	str	r2, [r3]
   18bb4:	mov	r3, #0
   18bb8:	mov	r0, r3
   18bbc:	sub	sp, fp, #4
   18bc0:	pop	{fp, pc}
   18bc4:	push	{fp, lr}
   18bc8:	add	fp, sp, #4
   18bcc:	sub	sp, sp, #16
   18bd0:	str	r0, [fp, #-8]
   18bd4:	str	r1, [fp, #-12]
   18bd8:	str	r2, [fp, #-16]
   18bdc:	ldr	r3, [fp, #-8]
   18be0:	mov	r2, #2
   18be4:	str	r2, [r3]
   18be8:	mov	r0, #8
   18bec:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   18bf0:	mov	r3, r0
   18bf4:	mov	r2, r3
   18bf8:	ldr	r3, [fp, #-8]
   18bfc:	str	r2, [r3, #8]
   18c00:	ldr	r3, [fp, #-8]
   18c04:	ldr	r3, [r3, #8]
   18c08:	cmp	r3, #0
   18c0c:	moveq	r3, #1
   18c10:	movne	r3, #0
   18c14:	uxtb	r3, r3
   18c18:	cmp	r3, #0
   18c1c:	beq	18c28 <__assert_fail@plt+0x7908>
   18c20:	mov	r3, #12
   18c24:	b	18cc4 <__assert_fail@plt+0x79a4>
   18c28:	ldr	r2, [fp, #-12]
   18c2c:	ldr	r3, [fp, #-16]
   18c30:	cmp	r2, r3
   18c34:	bne	18c58 <__assert_fail@plt+0x7938>
   18c38:	ldr	r3, [fp, #-8]
   18c3c:	mov	r2, #1
   18c40:	str	r2, [r3, #4]
   18c44:	ldr	r3, [fp, #-8]
   18c48:	ldr	r3, [r3, #8]
   18c4c:	ldr	r2, [fp, #-12]
   18c50:	str	r2, [r3]
   18c54:	b	18cc0 <__assert_fail@plt+0x79a0>
   18c58:	ldr	r3, [fp, #-8]
   18c5c:	mov	r2, #2
   18c60:	str	r2, [r3, #4]
   18c64:	ldr	r2, [fp, #-12]
   18c68:	ldr	r3, [fp, #-16]
   18c6c:	cmp	r2, r3
   18c70:	bge	18c9c <__assert_fail@plt+0x797c>
   18c74:	ldr	r3, [fp, #-8]
   18c78:	ldr	r3, [r3, #8]
   18c7c:	ldr	r2, [fp, #-12]
   18c80:	str	r2, [r3]
   18c84:	ldr	r3, [fp, #-8]
   18c88:	ldr	r3, [r3, #8]
   18c8c:	add	r3, r3, #4
   18c90:	ldr	r2, [fp, #-16]
   18c94:	str	r2, [r3]
   18c98:	b	18cc0 <__assert_fail@plt+0x79a0>
   18c9c:	ldr	r3, [fp, #-8]
   18ca0:	ldr	r3, [r3, #8]
   18ca4:	ldr	r2, [fp, #-16]
   18ca8:	str	r2, [r3]
   18cac:	ldr	r3, [fp, #-8]
   18cb0:	ldr	r3, [r3, #8]
   18cb4:	add	r3, r3, #4
   18cb8:	ldr	r2, [fp, #-12]
   18cbc:	str	r2, [r3]
   18cc0:	mov	r3, #0
   18cc4:	mov	r0, r3
   18cc8:	sub	sp, fp, #4
   18ccc:	pop	{fp, pc}
   18cd0:	push	{fp, lr}
   18cd4:	add	fp, sp, #4
   18cd8:	sub	sp, sp, #8
   18cdc:	str	r0, [fp, #-8]
   18ce0:	str	r1, [fp, #-12]
   18ce4:	ldr	r3, [fp, #-12]
   18ce8:	ldr	r2, [r3, #4]
   18cec:	ldr	r3, [fp, #-8]
   18cf0:	str	r2, [r3, #4]
   18cf4:	ldr	r3, [fp, #-12]
   18cf8:	ldr	r3, [r3, #4]
   18cfc:	cmp	r3, #0
   18d00:	ble	18da4 <__assert_fail@plt+0x7a84>
   18d04:	ldr	r3, [fp, #-8]
   18d08:	ldr	r2, [r3, #4]
   18d0c:	ldr	r3, [fp, #-8]
   18d10:	str	r2, [r3]
   18d14:	ldr	r3, [fp, #-8]
   18d18:	ldr	r3, [r3]
   18d1c:	lsl	r3, r3, #2
   18d20:	mov	r0, r3
   18d24:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   18d28:	mov	r3, r0
   18d2c:	mov	r2, r3
   18d30:	ldr	r3, [fp, #-8]
   18d34:	str	r2, [r3, #8]
   18d38:	ldr	r3, [fp, #-8]
   18d3c:	ldr	r3, [r3, #8]
   18d40:	cmp	r3, #0
   18d44:	moveq	r3, #1
   18d48:	movne	r3, #0
   18d4c:	uxtb	r3, r3
   18d50:	cmp	r3, #0
   18d54:	beq	18d7c <__assert_fail@plt+0x7a5c>
   18d58:	ldr	r3, [fp, #-8]
   18d5c:	mov	r2, #0
   18d60:	str	r2, [r3, #4]
   18d64:	ldr	r3, [fp, #-8]
   18d68:	ldr	r2, [r3, #4]
   18d6c:	ldr	r3, [fp, #-8]
   18d70:	str	r2, [r3]
   18d74:	mov	r3, #12
   18d78:	b	18db8 <__assert_fail@plt+0x7a98>
   18d7c:	ldr	r3, [fp, #-8]
   18d80:	ldr	r0, [r3, #8]
   18d84:	ldr	r3, [fp, #-12]
   18d88:	ldr	r1, [r3, #8]
   18d8c:	ldr	r3, [fp, #-12]
   18d90:	ldr	r3, [r3, #4]
   18d94:	lsl	r3, r3, #2
   18d98:	mov	r2, r3
   18d9c:	bl	110a4 <memcpy@plt>
   18da0:	b	18db4 <__assert_fail@plt+0x7a94>
   18da4:	mov	r2, #12
   18da8:	mov	r1, #0
   18dac:	ldr	r0, [fp, #-8]
   18db0:	bl	11248 <memset@plt>
   18db4:	mov	r3, #0
   18db8:	mov	r0, r3
   18dbc:	sub	sp, fp, #4
   18dc0:	pop	{fp, pc}
   18dc4:	push	{fp, lr}
   18dc8:	add	fp, sp, #4
   18dcc:	sub	sp, sp, #48	; 0x30
   18dd0:	str	r0, [fp, #-40]	; 0xffffffd8
   18dd4:	str	r1, [fp, #-44]	; 0xffffffd4
   18dd8:	str	r2, [fp, #-48]	; 0xffffffd0
   18ddc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18de0:	ldr	r3, [r3, #4]
   18de4:	cmp	r3, #0
   18de8:	beq	18dfc <__assert_fail@plt+0x7adc>
   18dec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18df0:	ldr	r3, [r3, #4]
   18df4:	cmp	r3, #0
   18df8:	bne	18e04 <__assert_fail@plt+0x7ae4>
   18dfc:	mov	r3, #0
   18e00:	b	19250 <__assert_fail@plt+0x7f30>
   18e04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18e08:	ldr	r2, [r3, #4]
   18e0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18e10:	ldr	r3, [r3, #4]
   18e14:	add	r2, r2, r3
   18e18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18e1c:	ldr	r3, [r3, #4]
   18e20:	add	r2, r2, r3
   18e24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18e28:	ldr	r3, [r3]
   18e2c:	cmp	r2, r3
   18e30:	ble	18eb4 <__assert_fail@plt+0x7b94>
   18e34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18e38:	ldr	r2, [r3, #4]
   18e3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18e40:	ldr	r3, [r3, #4]
   18e44:	add	r2, r2, r3
   18e48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18e4c:	ldr	r3, [r3]
   18e50:	add	r3, r2, r3
   18e54:	str	r3, [fp, #-32]	; 0xffffffe0
   18e58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18e5c:	ldr	r2, [r3, #8]
   18e60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e64:	lsl	r3, r3, #2
   18e68:	mov	r1, r3
   18e6c:	mov	r0, r2
   18e70:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   18e74:	str	r0, [fp, #-36]	; 0xffffffdc
   18e78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18e7c:	cmp	r3, #0
   18e80:	moveq	r3, #1
   18e84:	movne	r3, #0
   18e88:	uxtb	r3, r3
   18e8c:	cmp	r3, #0
   18e90:	beq	18e9c <__assert_fail@plt+0x7b7c>
   18e94:	mov	r3, #12
   18e98:	b	19250 <__assert_fail@plt+0x7f30>
   18e9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18ea0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18ea4:	str	r2, [r3, #8]
   18ea8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18eac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18eb0:	str	r2, [r3]
   18eb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18eb8:	ldr	r2, [r3, #4]
   18ebc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18ec0:	ldr	r3, [r3, #4]
   18ec4:	add	r2, r2, r3
   18ec8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18ecc:	ldr	r3, [r3, #4]
   18ed0:	add	r3, r2, r3
   18ed4:	str	r3, [fp, #-28]	; 0xffffffe4
   18ed8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18edc:	ldr	r3, [r3, #4]
   18ee0:	sub	r3, r3, #1
   18ee4:	str	r3, [fp, #-8]
   18ee8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18eec:	ldr	r3, [r3, #4]
   18ef0:	sub	r3, r3, #1
   18ef4:	str	r3, [fp, #-12]
   18ef8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18efc:	ldr	r3, [r3, #4]
   18f00:	sub	r3, r3, #1
   18f04:	str	r3, [fp, #-20]	; 0xffffffec
   18f08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18f0c:	ldr	r2, [r3, #8]
   18f10:	ldr	r3, [fp, #-8]
   18f14:	lsl	r3, r3, #2
   18f18:	add	r3, r2, r3
   18f1c:	ldr	r2, [r3]
   18f20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18f24:	ldr	r1, [r3, #8]
   18f28:	ldr	r3, [fp, #-12]
   18f2c:	lsl	r3, r3, #2
   18f30:	add	r3, r1, r3
   18f34:	ldr	r3, [r3]
   18f38:	cmp	r2, r3
   18f3c:	bne	19048 <__assert_fail@plt+0x7d28>
   18f40:	b	18f50 <__assert_fail@plt+0x7c30>
   18f44:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f48:	sub	r3, r3, #1
   18f4c:	str	r3, [fp, #-20]	; 0xffffffec
   18f50:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f54:	cmp	r3, #0
   18f58:	blt	18f94 <__assert_fail@plt+0x7c74>
   18f5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18f60:	ldr	r2, [r3, #8]
   18f64:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f68:	lsl	r3, r3, #2
   18f6c:	add	r3, r2, r3
   18f70:	ldr	r2, [r3]
   18f74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18f78:	ldr	r1, [r3, #8]
   18f7c:	ldr	r3, [fp, #-8]
   18f80:	lsl	r3, r3, #2
   18f84:	add	r3, r1, r3
   18f88:	ldr	r3, [r3]
   18f8c:	cmp	r2, r3
   18f90:	bgt	18f44 <__assert_fail@plt+0x7c24>
   18f94:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f98:	cmp	r3, #0
   18f9c:	blt	18fd8 <__assert_fail@plt+0x7cb8>
   18fa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18fa4:	ldr	r2, [r3, #8]
   18fa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18fac:	lsl	r3, r3, #2
   18fb0:	add	r3, r2, r3
   18fb4:	ldr	r2, [r3]
   18fb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18fbc:	ldr	r1, [r3, #8]
   18fc0:	ldr	r3, [fp, #-8]
   18fc4:	lsl	r3, r3, #2
   18fc8:	add	r3, r1, r3
   18fcc:	ldr	r3, [r3]
   18fd0:	cmp	r2, r3
   18fd4:	beq	19014 <__assert_fail@plt+0x7cf4>
   18fd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18fdc:	ldr	r2, [r3, #8]
   18fe0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18fe4:	sub	r3, r3, #1
   18fe8:	str	r3, [fp, #-28]	; 0xffffffe4
   18fec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ff0:	lsl	r3, r3, #2
   18ff4:	add	r3, r2, r3
   18ff8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18ffc:	ldr	r1, [r2, #8]
   19000:	ldr	r2, [fp, #-8]
   19004:	lsl	r2, r2, #2
   19008:	add	r2, r1, r2
   1900c:	ldr	r2, [r2]
   19010:	str	r2, [r3]
   19014:	ldr	r3, [fp, #-8]
   19018:	sub	r3, r3, #1
   1901c:	str	r3, [fp, #-8]
   19020:	ldr	r3, [fp, #-8]
   19024:	cmp	r3, #0
   19028:	blt	190bc <__assert_fail@plt+0x7d9c>
   1902c:	ldr	r3, [fp, #-12]
   19030:	sub	r3, r3, #1
   19034:	str	r3, [fp, #-12]
   19038:	ldr	r3, [fp, #-12]
   1903c:	cmp	r3, #0
   19040:	blt	190bc <__assert_fail@plt+0x7d9c>
   19044:	b	18f08 <__assert_fail@plt+0x7be8>
   19048:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1904c:	ldr	r2, [r3, #8]
   19050:	ldr	r3, [fp, #-8]
   19054:	lsl	r3, r3, #2
   19058:	add	r3, r2, r3
   1905c:	ldr	r2, [r3]
   19060:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19064:	ldr	r1, [r3, #8]
   19068:	ldr	r3, [fp, #-12]
   1906c:	lsl	r3, r3, #2
   19070:	add	r3, r1, r3
   19074:	ldr	r3, [r3]
   19078:	cmp	r2, r3
   1907c:	bge	1909c <__assert_fail@plt+0x7d7c>
   19080:	ldr	r3, [fp, #-12]
   19084:	sub	r3, r3, #1
   19088:	str	r3, [fp, #-12]
   1908c:	ldr	r3, [fp, #-12]
   19090:	cmp	r3, #0
   19094:	bge	18f08 <__assert_fail@plt+0x7be8>
   19098:	b	190bc <__assert_fail@plt+0x7d9c>
   1909c:	ldr	r3, [fp, #-8]
   190a0:	sub	r3, r3, #1
   190a4:	str	r3, [fp, #-8]
   190a8:	ldr	r3, [fp, #-8]
   190ac:	cmp	r3, #0
   190b0:	blt	190b8 <__assert_fail@plt+0x7d98>
   190b4:	b	18f08 <__assert_fail@plt+0x7be8>
   190b8:	nop			; (mov r0, r0)
   190bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   190c0:	ldr	r3, [r3, #4]
   190c4:	sub	r3, r3, #1
   190c8:	str	r3, [fp, #-20]	; 0xffffffec
   190cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   190d0:	ldr	r2, [r3, #4]
   190d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   190d8:	ldr	r3, [r3, #4]
   190dc:	add	r2, r2, r3
   190e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   190e4:	ldr	r3, [r3, #4]
   190e8:	add	r3, r2, r3
   190ec:	sub	r3, r3, #1
   190f0:	str	r3, [fp, #-16]
   190f4:	ldr	r2, [fp, #-16]
   190f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   190fc:	sub	r3, r2, r3
   19100:	add	r3, r3, #1
   19104:	str	r3, [fp, #-24]	; 0xffffffe8
   19108:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1910c:	ldr	r2, [r3, #4]
   19110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19114:	add	r2, r2, r3
   19118:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1911c:	str	r2, [r3, #4]
   19120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19124:	cmp	r3, #0
   19128:	ble	19220 <__assert_fail@plt+0x7f00>
   1912c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19130:	cmp	r3, #0
   19134:	blt	19220 <__assert_fail@plt+0x7f00>
   19138:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1913c:	ldr	r2, [r3, #8]
   19140:	ldr	r3, [fp, #-16]
   19144:	lsl	r3, r3, #2
   19148:	add	r3, r2, r3
   1914c:	ldr	r2, [r3]
   19150:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19154:	ldr	r1, [r3, #8]
   19158:	ldr	r3, [fp, #-20]	; 0xffffffec
   1915c:	lsl	r3, r3, #2
   19160:	add	r3, r1, r3
   19164:	ldr	r3, [r3]
   19168:	cmp	r2, r3
   1916c:	ble	191c8 <__assert_fail@plt+0x7ea8>
   19170:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19174:	ldr	r2, [r3, #8]
   19178:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1917c:	sub	r1, r3, #1
   19180:	str	r1, [fp, #-24]	; 0xffffffe8
   19184:	ldr	r1, [fp, #-20]	; 0xffffffec
   19188:	add	r3, r3, r1
   1918c:	lsl	r3, r3, #2
   19190:	add	r2, r2, r3
   19194:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19198:	ldr	r1, [r3, #8]
   1919c:	ldr	r3, [fp, #-16]
   191a0:	sub	r0, r3, #1
   191a4:	str	r0, [fp, #-16]
   191a8:	lsl	r3, r3, #2
   191ac:	add	r3, r1, r3
   191b0:	ldr	r3, [r3]
   191b4:	str	r3, [r2]
   191b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   191bc:	cmp	r3, #0
   191c0:	bne	19138 <__assert_fail@plt+0x7e18>
   191c4:	b	19220 <__assert_fail@plt+0x7f00>
   191c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   191cc:	ldr	r2, [r3, #8]
   191d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   191d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   191d8:	add	r3, r1, r3
   191dc:	lsl	r3, r3, #2
   191e0:	add	r3, r2, r3
   191e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   191e8:	ldr	r1, [r2, #8]
   191ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   191f0:	lsl	r2, r2, #2
   191f4:	add	r2, r1, r2
   191f8:	ldr	r2, [r2]
   191fc:	str	r2, [r3]
   19200:	ldr	r3, [fp, #-20]	; 0xffffffec
   19204:	sub	r3, r3, #1
   19208:	str	r3, [fp, #-20]	; 0xffffffec
   1920c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19210:	cmp	r3, #0
   19214:	blt	1921c <__assert_fail@plt+0x7efc>
   19218:	b	19138 <__assert_fail@plt+0x7e18>
   1921c:	nop			; (mov r0, r0)
   19220:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19224:	ldr	r0, [r3, #8]
   19228:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1922c:	ldr	r2, [r3, #8]
   19230:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19234:	lsl	r3, r3, #2
   19238:	add	r1, r2, r3
   1923c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19240:	lsl	r3, r3, #2
   19244:	mov	r2, r3
   19248:	bl	110a4 <memcpy@plt>
   1924c:	mov	r3, #0
   19250:	mov	r0, r3
   19254:	sub	sp, fp, #4
   19258:	pop	{fp, pc}
   1925c:	push	{fp, lr}
   19260:	add	fp, sp, #4
   19264:	sub	sp, sp, #32
   19268:	str	r0, [fp, #-24]	; 0xffffffe8
   1926c:	str	r1, [fp, #-28]	; 0xffffffe4
   19270:	str	r2, [fp, #-32]	; 0xffffffe0
   19274:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19278:	cmp	r3, #0
   1927c:	beq	19314 <__assert_fail@plt+0x7ff4>
   19280:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19284:	ldr	r3, [r3, #4]
   19288:	cmp	r3, #0
   1928c:	ble	19314 <__assert_fail@plt+0x7ff4>
   19290:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19294:	cmp	r3, #0
   19298:	beq	19314 <__assert_fail@plt+0x7ff4>
   1929c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   192a0:	ldr	r3, [r3, #4]
   192a4:	cmp	r3, #0
   192a8:	ble	19314 <__assert_fail@plt+0x7ff4>
   192ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   192b0:	ldr	r2, [r3, #4]
   192b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   192b8:	ldr	r3, [r3, #4]
   192bc:	add	r2, r2, r3
   192c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192c4:	str	r2, [r3]
   192c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192cc:	ldr	r3, [r3]
   192d0:	lsl	r3, r3, #2
   192d4:	mov	r0, r3
   192d8:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   192dc:	mov	r3, r0
   192e0:	mov	r2, r3
   192e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192e8:	str	r2, [r3, #8]
   192ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192f0:	ldr	r3, [r3, #8]
   192f4:	cmp	r3, #0
   192f8:	moveq	r3, #1
   192fc:	movne	r3, #0
   19300:	uxtb	r3, r3
   19304:	cmp	r3, #0
   19308:	beq	1938c <__assert_fail@plt+0x806c>
   1930c:	mov	r3, #12
   19310:	b	195cc <__assert_fail@plt+0x82ac>
   19314:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19318:	cmp	r3, #0
   1931c:	beq	19344 <__assert_fail@plt+0x8024>
   19320:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19324:	ldr	r3, [r3, #4]
   19328:	cmp	r3, #0
   1932c:	ble	19344 <__assert_fail@plt+0x8024>
   19330:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19338:	bl	18cd0 <__assert_fail@plt+0x79b0>
   1933c:	mov	r3, r0
   19340:	b	195cc <__assert_fail@plt+0x82ac>
   19344:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19348:	cmp	r3, #0
   1934c:	beq	19374 <__assert_fail@plt+0x8054>
   19350:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19354:	ldr	r3, [r3, #4]
   19358:	cmp	r3, #0
   1935c:	ble	19374 <__assert_fail@plt+0x8054>
   19360:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19368:	bl	18cd0 <__assert_fail@plt+0x79b0>
   1936c:	mov	r3, r0
   19370:	b	195cc <__assert_fail@plt+0x82ac>
   19374:	mov	r2, #12
   19378:	mov	r1, #0
   1937c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19380:	bl	11248 <memset@plt>
   19384:	mov	r3, #0
   19388:	b	195cc <__assert_fail@plt+0x82ac>
   1938c:	mov	r3, #0
   19390:	str	r3, [fp, #-16]
   19394:	ldr	r3, [fp, #-16]
   19398:	str	r3, [fp, #-12]
   1939c:	ldr	r3, [fp, #-12]
   193a0:	str	r3, [fp, #-8]
   193a4:	b	194a8 <__assert_fail@plt+0x8188>
   193a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   193ac:	ldr	r2, [r3, #8]
   193b0:	ldr	r3, [fp, #-8]
   193b4:	lsl	r3, r3, #2
   193b8:	add	r3, r2, r3
   193bc:	ldr	r2, [r3]
   193c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   193c4:	ldr	r1, [r3, #8]
   193c8:	ldr	r3, [fp, #-12]
   193cc:	lsl	r3, r3, #2
   193d0:	add	r3, r1, r3
   193d4:	ldr	r3, [r3]
   193d8:	cmp	r2, r3
   193dc:	ble	19424 <__assert_fail@plt+0x8104>
   193e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   193e4:	ldr	r2, [r3, #8]
   193e8:	ldr	r3, [fp, #-16]
   193ec:	add	r1, r3, #1
   193f0:	str	r1, [fp, #-16]
   193f4:	lsl	r3, r3, #2
   193f8:	add	r2, r2, r3
   193fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19400:	ldr	r1, [r3, #8]
   19404:	ldr	r3, [fp, #-12]
   19408:	add	r0, r3, #1
   1940c:	str	r0, [fp, #-12]
   19410:	lsl	r3, r3, #2
   19414:	add	r3, r1, r3
   19418:	ldr	r3, [r3]
   1941c:	str	r3, [r2]
   19420:	b	194a8 <__assert_fail@plt+0x8188>
   19424:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19428:	ldr	r2, [r3, #8]
   1942c:	ldr	r3, [fp, #-8]
   19430:	lsl	r3, r3, #2
   19434:	add	r3, r2, r3
   19438:	ldr	r2, [r3]
   1943c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19440:	ldr	r1, [r3, #8]
   19444:	ldr	r3, [fp, #-12]
   19448:	lsl	r3, r3, #2
   1944c:	add	r3, r1, r3
   19450:	ldr	r3, [r3]
   19454:	cmp	r2, r3
   19458:	bne	19468 <__assert_fail@plt+0x8148>
   1945c:	ldr	r3, [fp, #-12]
   19460:	add	r3, r3, #1
   19464:	str	r3, [fp, #-12]
   19468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1946c:	ldr	r2, [r3, #8]
   19470:	ldr	r3, [fp, #-16]
   19474:	add	r1, r3, #1
   19478:	str	r1, [fp, #-16]
   1947c:	lsl	r3, r3, #2
   19480:	add	r2, r2, r3
   19484:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19488:	ldr	r1, [r3, #8]
   1948c:	ldr	r3, [fp, #-8]
   19490:	add	r0, r3, #1
   19494:	str	r0, [fp, #-8]
   19498:	lsl	r3, r3, #2
   1949c:	add	r3, r1, r3
   194a0:	ldr	r3, [r3]
   194a4:	str	r3, [r2]
   194a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   194ac:	ldr	r2, [r3, #4]
   194b0:	ldr	r3, [fp, #-8]
   194b4:	cmp	r2, r3
   194b8:	ble	194d0 <__assert_fail@plt+0x81b0>
   194bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   194c0:	ldr	r2, [r3, #4]
   194c4:	ldr	r3, [fp, #-12]
   194c8:	cmp	r2, r3
   194cc:	bgt	193a8 <__assert_fail@plt+0x8088>
   194d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   194d4:	ldr	r2, [r3, #4]
   194d8:	ldr	r3, [fp, #-8]
   194dc:	cmp	r2, r3
   194e0:	ble	19548 <__assert_fail@plt+0x8228>
   194e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194e8:	ldr	r2, [r3, #8]
   194ec:	ldr	r3, [fp, #-16]
   194f0:	lsl	r3, r3, #2
   194f4:	add	r0, r2, r3
   194f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   194fc:	ldr	r2, [r3, #8]
   19500:	ldr	r3, [fp, #-8]
   19504:	lsl	r3, r3, #2
   19508:	add	r1, r2, r3
   1950c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19510:	ldr	r2, [r3, #4]
   19514:	ldr	r3, [fp, #-8]
   19518:	sub	r3, r2, r3
   1951c:	lsl	r3, r3, #2
   19520:	mov	r2, r3
   19524:	bl	110a4 <memcpy@plt>
   19528:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1952c:	ldr	r2, [r3, #4]
   19530:	ldr	r3, [fp, #-8]
   19534:	sub	r3, r2, r3
   19538:	ldr	r2, [fp, #-16]
   1953c:	add	r3, r2, r3
   19540:	str	r3, [fp, #-16]
   19544:	b	195bc <__assert_fail@plt+0x829c>
   19548:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1954c:	ldr	r2, [r3, #4]
   19550:	ldr	r3, [fp, #-12]
   19554:	cmp	r2, r3
   19558:	ble	195bc <__assert_fail@plt+0x829c>
   1955c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19560:	ldr	r2, [r3, #8]
   19564:	ldr	r3, [fp, #-16]
   19568:	lsl	r3, r3, #2
   1956c:	add	r0, r2, r3
   19570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19574:	ldr	r2, [r3, #8]
   19578:	ldr	r3, [fp, #-12]
   1957c:	lsl	r3, r3, #2
   19580:	add	r1, r2, r3
   19584:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19588:	ldr	r2, [r3, #4]
   1958c:	ldr	r3, [fp, #-12]
   19590:	sub	r3, r2, r3
   19594:	lsl	r3, r3, #2
   19598:	mov	r2, r3
   1959c:	bl	110a4 <memcpy@plt>
   195a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   195a4:	ldr	r2, [r3, #4]
   195a8:	ldr	r3, [fp, #-12]
   195ac:	sub	r3, r2, r3
   195b0:	ldr	r2, [fp, #-16]
   195b4:	add	r3, r2, r3
   195b8:	str	r3, [fp, #-16]
   195bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   195c0:	ldr	r2, [fp, #-16]
   195c4:	str	r2, [r3, #4]
   195c8:	mov	r3, #0
   195cc:	mov	r0, r3
   195d0:	sub	sp, fp, #4
   195d4:	pop	{fp, pc}
   195d8:	push	{fp, lr}
   195dc:	add	fp, sp, #4
   195e0:	sub	sp, sp, #32
   195e4:	str	r0, [fp, #-32]	; 0xffffffe0
   195e8:	str	r1, [fp, #-36]	; 0xffffffdc
   195ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   195f0:	cmp	r3, #0
   195f4:	beq	19608 <__assert_fail@plt+0x82e8>
   195f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   195fc:	ldr	r3, [r3, #4]
   19600:	cmp	r3, #0
   19604:	bne	19610 <__assert_fail@plt+0x82f0>
   19608:	mov	r3, #0
   1960c:	b	19a20 <__assert_fail@plt+0x8700>
   19610:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19614:	ldr	r2, [r3]
   19618:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1961c:	ldr	r3, [r3, #4]
   19620:	lsl	r1, r3, #1
   19624:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19628:	ldr	r3, [r3, #4]
   1962c:	add	r3, r1, r3
   19630:	cmp	r2, r3
   19634:	bge	196b0 <__assert_fail@plt+0x8390>
   19638:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1963c:	ldr	r2, [r3, #4]
   19640:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19644:	ldr	r3, [r3]
   19648:	add	r3, r2, r3
   1964c:	lsl	r3, r3, #1
   19650:	str	r3, [fp, #-24]	; 0xffffffe8
   19654:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19658:	ldr	r2, [r3, #8]
   1965c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19660:	lsl	r3, r3, #2
   19664:	mov	r1, r3
   19668:	mov	r0, r2
   1966c:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   19670:	str	r0, [fp, #-28]	; 0xffffffe4
   19674:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19678:	cmp	r3, #0
   1967c:	moveq	r3, #1
   19680:	movne	r3, #0
   19684:	uxtb	r3, r3
   19688:	cmp	r3, #0
   1968c:	beq	19698 <__assert_fail@plt+0x8378>
   19690:	mov	r3, #12
   19694:	b	19a20 <__assert_fail@plt+0x8700>
   19698:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1969c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   196a0:	str	r2, [r3, #8]
   196a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   196a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   196ac:	str	r2, [r3]
   196b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   196b4:	ldr	r3, [r3, #4]
   196b8:	cmp	r3, #0
   196bc:	moveq	r3, #1
   196c0:	movne	r3, #0
   196c4:	uxtb	r3, r3
   196c8:	cmp	r3, #0
   196cc:	beq	19718 <__assert_fail@plt+0x83f8>
   196d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   196d4:	ldr	r3, [r3, #8]
   196d8:	cmp	r3, #0
   196dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   196e0:	ldr	r2, [r3, #4]
   196e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   196e8:	str	r2, [r3, #4]
   196ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   196f0:	ldr	r0, [r3, #8]
   196f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   196f8:	ldr	r1, [r3, #8]
   196fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19700:	ldr	r3, [r3, #4]
   19704:	lsl	r3, r3, #2
   19708:	mov	r2, r3
   1970c:	bl	110a4 <memcpy@plt>
   19710:	mov	r3, #0
   19714:	b	19a20 <__assert_fail@plt+0x8700>
   19718:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1971c:	ldr	r2, [r3, #4]
   19720:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19724:	ldr	r3, [r3, #4]
   19728:	lsl	r3, r3, #1
   1972c:	add	r3, r2, r3
   19730:	str	r3, [fp, #-16]
   19734:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19738:	ldr	r3, [r3, #4]
   1973c:	sub	r3, r3, #1
   19740:	str	r3, [fp, #-8]
   19744:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19748:	ldr	r3, [r3, #4]
   1974c:	sub	r3, r3, #1
   19750:	str	r3, [fp, #-12]
   19754:	b	19838 <__assert_fail@plt+0x8518>
   19758:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1975c:	ldr	r2, [r3, #8]
   19760:	ldr	r3, [fp, #-12]
   19764:	lsl	r3, r3, #2
   19768:	add	r3, r2, r3
   1976c:	ldr	r2, [r3]
   19770:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19774:	ldr	r1, [r3, #8]
   19778:	ldr	r3, [fp, #-8]
   1977c:	lsl	r3, r3, #2
   19780:	add	r3, r1, r3
   19784:	ldr	r3, [r3]
   19788:	cmp	r2, r3
   1978c:	bne	197ac <__assert_fail@plt+0x848c>
   19790:	ldr	r3, [fp, #-8]
   19794:	sub	r3, r3, #1
   19798:	str	r3, [fp, #-8]
   1979c:	ldr	r3, [fp, #-12]
   197a0:	sub	r3, r3, #1
   197a4:	str	r3, [fp, #-12]
   197a8:	b	19838 <__assert_fail@plt+0x8518>
   197ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   197b0:	ldr	r2, [r3, #8]
   197b4:	ldr	r3, [fp, #-12]
   197b8:	lsl	r3, r3, #2
   197bc:	add	r3, r2, r3
   197c0:	ldr	r2, [r3]
   197c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   197c8:	ldr	r1, [r3, #8]
   197cc:	ldr	r3, [fp, #-8]
   197d0:	lsl	r3, r3, #2
   197d4:	add	r3, r1, r3
   197d8:	ldr	r3, [r3]
   197dc:	cmp	r2, r3
   197e0:	bge	1982c <__assert_fail@plt+0x850c>
   197e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   197e8:	ldr	r2, [r3, #8]
   197ec:	ldr	r3, [fp, #-16]
   197f0:	sub	r3, r3, #1
   197f4:	str	r3, [fp, #-16]
   197f8:	ldr	r3, [fp, #-16]
   197fc:	lsl	r3, r3, #2
   19800:	add	r2, r2, r3
   19804:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19808:	ldr	r1, [r3, #8]
   1980c:	ldr	r3, [fp, #-8]
   19810:	sub	r0, r3, #1
   19814:	str	r0, [fp, #-8]
   19818:	lsl	r3, r3, #2
   1981c:	add	r3, r1, r3
   19820:	ldr	r3, [r3]
   19824:	str	r3, [r2]
   19828:	b	19838 <__assert_fail@plt+0x8518>
   1982c:	ldr	r3, [fp, #-12]
   19830:	sub	r3, r3, #1
   19834:	str	r3, [fp, #-12]
   19838:	ldr	r3, [fp, #-8]
   1983c:	cmp	r3, #0
   19840:	blt	19850 <__assert_fail@plt+0x8530>
   19844:	ldr	r3, [fp, #-12]
   19848:	cmp	r3, #0
   1984c:	bge	19758 <__assert_fail@plt+0x8438>
   19850:	ldr	r3, [fp, #-8]
   19854:	cmp	r3, #0
   19858:	blt	198a0 <__assert_fail@plt+0x8580>
   1985c:	ldr	r3, [fp, #-8]
   19860:	add	r3, r3, #1
   19864:	ldr	r2, [fp, #-16]
   19868:	sub	r3, r2, r3
   1986c:	str	r3, [fp, #-16]
   19870:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19874:	ldr	r2, [r3, #8]
   19878:	ldr	r3, [fp, #-16]
   1987c:	lsl	r3, r3, #2
   19880:	add	r0, r2, r3
   19884:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19888:	ldr	r1, [r3, #8]
   1988c:	ldr	r3, [fp, #-8]
   19890:	add	r3, r3, #1
   19894:	lsl	r3, r3, #2
   19898:	mov	r2, r3
   1989c:	bl	110a4 <memcpy@plt>
   198a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   198a4:	ldr	r3, [r3, #4]
   198a8:	sub	r3, r3, #1
   198ac:	str	r3, [fp, #-12]
   198b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   198b4:	ldr	r2, [r3, #4]
   198b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   198bc:	ldr	r3, [r3, #4]
   198c0:	lsl	r3, r3, #1
   198c4:	add	r3, r2, r3
   198c8:	sub	r3, r3, #1
   198cc:	str	r3, [fp, #-8]
   198d0:	ldr	r2, [fp, #-8]
   198d4:	ldr	r3, [fp, #-16]
   198d8:	sub	r3, r2, r3
   198dc:	add	r3, r3, #1
   198e0:	str	r3, [fp, #-20]	; 0xffffffec
   198e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   198e8:	cmp	r3, #0
   198ec:	bne	198f8 <__assert_fail@plt+0x85d8>
   198f0:	mov	r3, #0
   198f4:	b	19a20 <__assert_fail@plt+0x8700>
   198f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   198fc:	ldr	r2, [r3, #4]
   19900:	ldr	r3, [fp, #-20]	; 0xffffffec
   19904:	add	r2, r2, r3
   19908:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1990c:	str	r2, [r3, #4]
   19910:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19914:	ldr	r2, [r3, #8]
   19918:	ldr	r3, [fp, #-8]
   1991c:	lsl	r3, r3, #2
   19920:	add	r3, r2, r3
   19924:	ldr	r2, [r3]
   19928:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1992c:	ldr	r1, [r3, #8]
   19930:	ldr	r3, [fp, #-12]
   19934:	lsl	r3, r3, #2
   19938:	add	r3, r1, r3
   1993c:	ldr	r3, [r3]
   19940:	cmp	r2, r3
   19944:	ble	199a0 <__assert_fail@plt+0x8680>
   19948:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1994c:	ldr	r2, [r3, #8]
   19950:	ldr	r3, [fp, #-20]	; 0xffffffec
   19954:	sub	r1, r3, #1
   19958:	str	r1, [fp, #-20]	; 0xffffffec
   1995c:	ldr	r1, [fp, #-12]
   19960:	add	r3, r3, r1
   19964:	lsl	r3, r3, #2
   19968:	add	r2, r2, r3
   1996c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19970:	ldr	r1, [r3, #8]
   19974:	ldr	r3, [fp, #-8]
   19978:	sub	r0, r3, #1
   1997c:	str	r0, [fp, #-8]
   19980:	lsl	r3, r3, #2
   19984:	add	r3, r1, r3
   19988:	ldr	r3, [r3]
   1998c:	str	r3, [r2]
   19990:	ldr	r3, [fp, #-20]	; 0xffffffec
   19994:	cmp	r3, #0
   19998:	bne	19910 <__assert_fail@plt+0x85f0>
   1999c:	b	19a1c <__assert_fail@plt+0x86fc>
   199a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   199a4:	ldr	r2, [r3, #8]
   199a8:	ldr	r1, [fp, #-12]
   199ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   199b0:	add	r3, r1, r3
   199b4:	lsl	r3, r3, #2
   199b8:	add	r3, r2, r3
   199bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   199c0:	ldr	r1, [r2, #8]
   199c4:	ldr	r2, [fp, #-12]
   199c8:	lsl	r2, r2, #2
   199cc:	add	r2, r1, r2
   199d0:	ldr	r2, [r2]
   199d4:	str	r2, [r3]
   199d8:	ldr	r3, [fp, #-12]
   199dc:	sub	r3, r3, #1
   199e0:	str	r3, [fp, #-12]
   199e4:	ldr	r3, [fp, #-12]
   199e8:	cmp	r3, #0
   199ec:	bge	19910 <__assert_fail@plt+0x85f0>
   199f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   199f4:	ldr	r0, [r3, #8]
   199f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   199fc:	ldr	r2, [r3, #8]
   19a00:	ldr	r3, [fp, #-16]
   19a04:	lsl	r3, r3, #2
   19a08:	add	r1, r2, r3
   19a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a10:	lsl	r3, r3, #2
   19a14:	mov	r2, r3
   19a18:	bl	110a4 <memcpy@plt>
   19a1c:	mov	r3, #0
   19a20:	mov	r0, r3
   19a24:	sub	sp, fp, #4
   19a28:	pop	{fp, pc}
   19a2c:	push	{fp, lr}
   19a30:	add	fp, sp, #4
   19a34:	sub	sp, sp, #16
   19a38:	str	r0, [fp, #-16]
   19a3c:	str	r1, [fp, #-20]	; 0xffffffec
   19a40:	ldr	r3, [fp, #-16]
   19a44:	ldr	r3, [r3]
   19a48:	cmp	r3, #0
   19a4c:	bne	19a84 <__assert_fail@plt+0x8764>
   19a50:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a54:	ldr	r0, [fp, #-16]
   19a58:	bl	18b1c <__assert_fail@plt+0x77fc>
   19a5c:	mov	r3, r0
   19a60:	cmp	r3, #0
   19a64:	moveq	r3, #1
   19a68:	movne	r3, #0
   19a6c:	uxtb	r3, r3
   19a70:	cmp	r3, #0
   19a74:	movne	r3, #1
   19a78:	moveq	r3, #0
   19a7c:	uxtb	r3, r3
   19a80:	b	19c94 <__assert_fail@plt+0x8974>
   19a84:	ldr	r3, [fp, #-16]
   19a88:	ldr	r3, [r3, #4]
   19a8c:	cmp	r3, #0
   19a90:	bne	19acc <__assert_fail@plt+0x87ac>
   19a94:	ldr	r3, [fp, #-16]
   19a98:	ldr	r3, [r3, #8]
   19a9c:	cmp	r3, #0
   19aa0:	ldr	r3, [fp, #-16]
   19aa4:	ldr	r3, [r3, #8]
   19aa8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19aac:	str	r2, [r3]
   19ab0:	ldr	r3, [fp, #-16]
   19ab4:	ldr	r3, [r3, #4]
   19ab8:	add	r2, r3, #1
   19abc:	ldr	r3, [fp, #-16]
   19ac0:	str	r2, [r3, #4]
   19ac4:	mov	r3, #1
   19ac8:	b	19c94 <__assert_fail@plt+0x8974>
   19acc:	ldr	r3, [fp, #-16]
   19ad0:	ldr	r2, [r3]
   19ad4:	ldr	r3, [fp, #-16]
   19ad8:	ldr	r3, [r3, #4]
   19adc:	cmp	r2, r3
   19ae0:	bne	19b4c <__assert_fail@plt+0x882c>
   19ae4:	ldr	r3, [fp, #-16]
   19ae8:	ldr	r3, [r3]
   19aec:	lsl	r2, r3, #1
   19af0:	ldr	r3, [fp, #-16]
   19af4:	str	r2, [r3]
   19af8:	ldr	r3, [fp, #-16]
   19afc:	ldr	r2, [r3, #8]
   19b00:	ldr	r3, [fp, #-16]
   19b04:	ldr	r3, [r3]
   19b08:	lsl	r3, r3, #2
   19b0c:	mov	r1, r3
   19b10:	mov	r0, r2
   19b14:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   19b18:	str	r0, [fp, #-12]
   19b1c:	ldr	r3, [fp, #-12]
   19b20:	cmp	r3, #0
   19b24:	moveq	r3, #1
   19b28:	movne	r3, #0
   19b2c:	uxtb	r3, r3
   19b30:	cmp	r3, #0
   19b34:	beq	19b40 <__assert_fail@plt+0x8820>
   19b38:	mov	r3, #0
   19b3c:	b	19c94 <__assert_fail@plt+0x8974>
   19b40:	ldr	r3, [fp, #-16]
   19b44:	ldr	r2, [fp, #-12]
   19b48:	str	r2, [r3, #8]
   19b4c:	ldr	r3, [fp, #-16]
   19b50:	ldr	r3, [r3, #8]
   19b54:	ldr	r2, [r3]
   19b58:	ldr	r3, [fp, #-20]	; 0xffffffec
   19b5c:	cmp	r2, r3
   19b60:	ble	19bc4 <__assert_fail@plt+0x88a4>
   19b64:	ldr	r3, [fp, #-16]
   19b68:	ldr	r3, [r3, #4]
   19b6c:	str	r3, [fp, #-8]
   19b70:	b	19bb4 <__assert_fail@plt+0x8894>
   19b74:	ldr	r3, [fp, #-16]
   19b78:	ldr	r2, [r3, #8]
   19b7c:	ldr	r3, [fp, #-8]
   19b80:	lsl	r3, r3, #2
   19b84:	add	r3, r2, r3
   19b88:	ldr	r2, [fp, #-16]
   19b8c:	ldr	r1, [r2, #8]
   19b90:	ldr	r2, [fp, #-8]
   19b94:	sub	r2, r2, #-1073741823	; 0xc0000001
   19b98:	lsl	r2, r2, #2
   19b9c:	add	r2, r1, r2
   19ba0:	ldr	r2, [r2]
   19ba4:	str	r2, [r3]
   19ba8:	ldr	r3, [fp, #-8]
   19bac:	sub	r3, r3, #1
   19bb0:	str	r3, [fp, #-8]
   19bb4:	ldr	r3, [fp, #-8]
   19bb8:	cmp	r3, #0
   19bbc:	bgt	19b74 <__assert_fail@plt+0x8854>
   19bc0:	b	19c60 <__assert_fail@plt+0x8940>
   19bc4:	ldr	r3, [fp, #-16]
   19bc8:	ldr	r3, [r3, #4]
   19bcc:	str	r3, [fp, #-8]
   19bd0:	b	19c14 <__assert_fail@plt+0x88f4>
   19bd4:	ldr	r3, [fp, #-16]
   19bd8:	ldr	r2, [r3, #8]
   19bdc:	ldr	r3, [fp, #-8]
   19be0:	lsl	r3, r3, #2
   19be4:	add	r3, r2, r3
   19be8:	ldr	r2, [fp, #-16]
   19bec:	ldr	r1, [r2, #8]
   19bf0:	ldr	r2, [fp, #-8]
   19bf4:	sub	r2, r2, #-1073741823	; 0xc0000001
   19bf8:	lsl	r2, r2, #2
   19bfc:	add	r2, r1, r2
   19c00:	ldr	r2, [r2]
   19c04:	str	r2, [r3]
   19c08:	ldr	r3, [fp, #-8]
   19c0c:	sub	r3, r3, #1
   19c10:	str	r3, [fp, #-8]
   19c14:	ldr	r3, [fp, #-16]
   19c18:	ldr	r2, [r3, #8]
   19c1c:	ldr	r3, [fp, #-8]
   19c20:	sub	r3, r3, #-1073741823	; 0xc0000001
   19c24:	lsl	r3, r3, #2
   19c28:	add	r3, r2, r3
   19c2c:	ldr	r2, [r3]
   19c30:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c34:	cmp	r2, r3
   19c38:	bgt	19bd4 <__assert_fail@plt+0x88b4>
   19c3c:	ldr	r3, [fp, #-16]
   19c40:	ldr	r2, [r3, #8]
   19c44:	ldr	r3, [fp, #-8]
   19c48:	sub	r3, r3, #-1073741823	; 0xc0000001
   19c4c:	lsl	r3, r3, #2
   19c50:	add	r3, r2, r3
   19c54:	ldr	r2, [r3]
   19c58:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c5c:	cmp	r2, r3
   19c60:	ldr	r3, [fp, #-16]
   19c64:	ldr	r2, [r3, #8]
   19c68:	ldr	r3, [fp, #-8]
   19c6c:	lsl	r3, r3, #2
   19c70:	add	r3, r2, r3
   19c74:	ldr	r2, [fp, #-20]	; 0xffffffec
   19c78:	str	r2, [r3]
   19c7c:	ldr	r3, [fp, #-16]
   19c80:	ldr	r3, [r3, #4]
   19c84:	add	r2, r3, #1
   19c88:	ldr	r3, [fp, #-16]
   19c8c:	str	r2, [r3, #4]
   19c90:	mov	r3, #1
   19c94:	mov	r0, r3
   19c98:	sub	sp, fp, #4
   19c9c:	pop	{fp, pc}
   19ca0:	push	{fp, lr}
   19ca4:	add	fp, sp, #4
   19ca8:	sub	sp, sp, #16
   19cac:	str	r0, [fp, #-16]
   19cb0:	str	r1, [fp, #-20]	; 0xffffffec
   19cb4:	ldr	r3, [fp, #-16]
   19cb8:	ldr	r2, [r3]
   19cbc:	ldr	r3, [fp, #-16]
   19cc0:	ldr	r3, [r3, #4]
   19cc4:	cmp	r2, r3
   19cc8:	bne	19d38 <__assert_fail@plt+0x8a18>
   19ccc:	ldr	r3, [fp, #-16]
   19cd0:	ldr	r3, [r3]
   19cd4:	add	r3, r3, #1
   19cd8:	lsl	r2, r3, #1
   19cdc:	ldr	r3, [fp, #-16]
   19ce0:	str	r2, [r3]
   19ce4:	ldr	r3, [fp, #-16]
   19ce8:	ldr	r2, [r3, #8]
   19cec:	ldr	r3, [fp, #-16]
   19cf0:	ldr	r3, [r3]
   19cf4:	lsl	r3, r3, #2
   19cf8:	mov	r1, r3
   19cfc:	mov	r0, r2
   19d00:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   19d04:	str	r0, [fp, #-8]
   19d08:	ldr	r3, [fp, #-8]
   19d0c:	cmp	r3, #0
   19d10:	moveq	r3, #1
   19d14:	movne	r3, #0
   19d18:	uxtb	r3, r3
   19d1c:	cmp	r3, #0
   19d20:	beq	19d2c <__assert_fail@plt+0x8a0c>
   19d24:	mov	r3, #0
   19d28:	b	19d68 <__assert_fail@plt+0x8a48>
   19d2c:	ldr	r3, [fp, #-16]
   19d30:	ldr	r2, [fp, #-8]
   19d34:	str	r2, [r3, #8]
   19d38:	ldr	r3, [fp, #-16]
   19d3c:	ldr	r2, [r3, #8]
   19d40:	ldr	r3, [fp, #-16]
   19d44:	ldr	r3, [r3, #4]
   19d48:	add	r0, r3, #1
   19d4c:	ldr	r1, [fp, #-16]
   19d50:	str	r0, [r1, #4]
   19d54:	lsl	r3, r3, #2
   19d58:	add	r3, r2, r3
   19d5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19d60:	str	r2, [r3]
   19d64:	mov	r3, #1
   19d68:	mov	r0, r3
   19d6c:	sub	sp, fp, #4
   19d70:	pop	{fp, pc}
   19d74:	push	{fp}		; (str fp, [sp, #-4]!)
   19d78:	add	fp, sp, #0
   19d7c:	sub	sp, sp, #20
   19d80:	str	r0, [fp, #-16]
   19d84:	str	r1, [fp, #-20]	; 0xffffffec
   19d88:	ldr	r3, [fp, #-16]
   19d8c:	cmp	r3, #0
   19d90:	beq	19db8 <__assert_fail@plt+0x8a98>
   19d94:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d98:	cmp	r3, #0
   19d9c:	beq	19db8 <__assert_fail@plt+0x8a98>
   19da0:	ldr	r3, [fp, #-16]
   19da4:	ldr	r2, [r3, #4]
   19da8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19dac:	ldr	r3, [r3, #4]
   19db0:	cmp	r2, r3
   19db4:	beq	19dc0 <__assert_fail@plt+0x8aa0>
   19db8:	mov	r3, #0
   19dbc:	b	19e2c <__assert_fail@plt+0x8b0c>
   19dc0:	ldr	r3, [fp, #-16]
   19dc4:	ldr	r3, [r3, #4]
   19dc8:	str	r3, [fp, #-8]
   19dcc:	b	19e10 <__assert_fail@plt+0x8af0>
   19dd0:	ldr	r3, [fp, #-16]
   19dd4:	ldr	r2, [r3, #8]
   19dd8:	ldr	r3, [fp, #-8]
   19ddc:	lsl	r3, r3, #2
   19de0:	add	r3, r2, r3
   19de4:	ldr	r2, [r3]
   19de8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19dec:	ldr	r1, [r3, #8]
   19df0:	ldr	r3, [fp, #-8]
   19df4:	lsl	r3, r3, #2
   19df8:	add	r3, r1, r3
   19dfc:	ldr	r3, [r3]
   19e00:	cmp	r2, r3
   19e04:	beq	19e10 <__assert_fail@plt+0x8af0>
   19e08:	mov	r3, #0
   19e0c:	b	19e2c <__assert_fail@plt+0x8b0c>
   19e10:	ldr	r3, [fp, #-8]
   19e14:	sub	r3, r3, #1
   19e18:	str	r3, [fp, #-8]
   19e1c:	ldr	r3, [fp, #-8]
   19e20:	cmp	r3, #0
   19e24:	bge	19dd0 <__assert_fail@plt+0x8ab0>
   19e28:	mov	r3, #1
   19e2c:	mov	r0, r3
   19e30:	add	sp, fp, #0
   19e34:	pop	{fp}		; (ldr fp, [sp], #4)
   19e38:	bx	lr
   19e3c:	push	{fp}		; (str fp, [sp, #-4]!)
   19e40:	add	fp, sp, #0
   19e44:	sub	sp, sp, #28
   19e48:	str	r0, [fp, #-24]	; 0xffffffe8
   19e4c:	str	r1, [fp, #-28]	; 0xffffffe4
   19e50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e54:	ldr	r3, [r3, #4]
   19e58:	cmp	r3, #0
   19e5c:	bgt	19e68 <__assert_fail@plt+0x8b48>
   19e60:	mov	r3, #0
   19e64:	b	19f18 <__assert_fail@plt+0x8bf8>
   19e68:	mov	r3, #0
   19e6c:	str	r3, [fp, #-8]
   19e70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e74:	ldr	r3, [r3, #4]
   19e78:	sub	r3, r3, #1
   19e7c:	str	r3, [fp, #-12]
   19e80:	b	19ed4 <__assert_fail@plt+0x8bb4>
   19e84:	ldr	r2, [fp, #-8]
   19e88:	ldr	r3, [fp, #-12]
   19e8c:	add	r3, r2, r3
   19e90:	lsr	r3, r3, #1
   19e94:	str	r3, [fp, #-16]
   19e98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e9c:	ldr	r2, [r3, #8]
   19ea0:	ldr	r3, [fp, #-16]
   19ea4:	lsl	r3, r3, #2
   19ea8:	add	r3, r2, r3
   19eac:	ldr	r2, [r3]
   19eb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19eb4:	cmp	r2, r3
   19eb8:	bge	19ecc <__assert_fail@plt+0x8bac>
   19ebc:	ldr	r3, [fp, #-16]
   19ec0:	add	r3, r3, #1
   19ec4:	str	r3, [fp, #-8]
   19ec8:	b	19ed4 <__assert_fail@plt+0x8bb4>
   19ecc:	ldr	r3, [fp, #-16]
   19ed0:	str	r3, [fp, #-12]
   19ed4:	ldr	r2, [fp, #-8]
   19ed8:	ldr	r3, [fp, #-12]
   19edc:	cmp	r2, r3
   19ee0:	bcc	19e84 <__assert_fail@plt+0x8b64>
   19ee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ee8:	ldr	r2, [r3, #8]
   19eec:	ldr	r3, [fp, #-8]
   19ef0:	lsl	r3, r3, #2
   19ef4:	add	r3, r2, r3
   19ef8:	ldr	r2, [r3]
   19efc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19f00:	cmp	r2, r3
   19f04:	bne	19f14 <__assert_fail@plt+0x8bf4>
   19f08:	ldr	r3, [fp, #-8]
   19f0c:	add	r3, r3, #1
   19f10:	b	19f18 <__assert_fail@plt+0x8bf8>
   19f14:	mov	r3, #0
   19f18:	mov	r0, r3
   19f1c:	add	sp, fp, #0
   19f20:	pop	{fp}		; (ldr fp, [sp], #4)
   19f24:	bx	lr
   19f28:	push	{fp}		; (str fp, [sp, #-4]!)
   19f2c:	add	fp, sp, #0
   19f30:	sub	sp, sp, #12
   19f34:	str	r0, [fp, #-8]
   19f38:	str	r1, [fp, #-12]
   19f3c:	ldr	r3, [fp, #-12]
   19f40:	cmp	r3, #0
   19f44:	blt	19fcc <__assert_fail@plt+0x8cac>
   19f48:	ldr	r3, [fp, #-8]
   19f4c:	ldr	r2, [r3, #4]
   19f50:	ldr	r3, [fp, #-12]
   19f54:	cmp	r2, r3
   19f58:	ble	19fcc <__assert_fail@plt+0x8cac>
   19f5c:	ldr	r3, [fp, #-8]
   19f60:	ldr	r3, [r3, #4]
   19f64:	sub	r2, r3, #1
   19f68:	ldr	r3, [fp, #-8]
   19f6c:	str	r2, [r3, #4]
   19f70:	b	19fb4 <__assert_fail@plt+0x8c94>
   19f74:	ldr	r3, [fp, #-8]
   19f78:	ldr	r2, [r3, #8]
   19f7c:	ldr	r3, [fp, #-12]
   19f80:	lsl	r3, r3, #2
   19f84:	add	r3, r2, r3
   19f88:	ldr	r2, [fp, #-8]
   19f8c:	ldr	r1, [r2, #8]
   19f90:	ldr	r2, [fp, #-12]
   19f94:	add	r2, r2, #1
   19f98:	lsl	r2, r2, #2
   19f9c:	add	r2, r1, r2
   19fa0:	ldr	r2, [r2]
   19fa4:	str	r2, [r3]
   19fa8:	ldr	r3, [fp, #-12]
   19fac:	add	r3, r3, #1
   19fb0:	str	r3, [fp, #-12]
   19fb4:	ldr	r3, [fp, #-8]
   19fb8:	ldr	r2, [r3, #4]
   19fbc:	ldr	r3, [fp, #-12]
   19fc0:	cmp	r2, r3
   19fc4:	bgt	19f74 <__assert_fail@plt+0x8c54>
   19fc8:	b	19fd0 <__assert_fail@plt+0x8cb0>
   19fcc:	nop			; (mov r0, r0)
   19fd0:	add	sp, fp, #0
   19fd4:	pop	{fp}		; (ldr fp, [sp], #4)
   19fd8:	bx	lr
   19fdc:	push	{fp, lr}
   19fe0:	add	fp, sp, #4
   19fe4:	sub	sp, sp, #48	; 0x30
   19fe8:	str	r0, [fp, #-40]	; 0xffffffd8
   19fec:	sub	r3, fp, #48	; 0x30
   19ff0:	stm	r3, {r1, r2}
   19ff4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19ff8:	ldr	r2, [r3, #8]
   19ffc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a000:	ldr	r3, [r3, #4]
   1a004:	cmp	r2, r3
   1a008:	movcs	r3, #1
   1a00c:	movcc	r3, #0
   1a010:	uxtb	r3, r3
   1a014:	cmp	r3, #0
   1a018:	beq	1a268 <__assert_fail@plt+0x8f48>
   1a01c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a020:	ldr	r3, [r3, #4]
   1a024:	lsl	r3, r3, #1
   1a028:	str	r3, [fp, #-8]
   1a02c:	mov	r3, #12
   1a030:	str	r3, [fp, #-12]
   1a034:	ldr	r1, [fp, #-12]
   1a038:	mvn	r0, #0
   1a03c:	bl	31f78 <__assert_fail@plt+0x20c58>
   1a040:	mov	r3, r0
   1a044:	cmp	r3, #0
   1a048:	blt	1a064 <__assert_fail@plt+0x8d44>
   1a04c:	ldr	r1, [fp, #-12]
   1a050:	mvn	r0, #0
   1a054:	bl	31f78 <__assert_fail@plt+0x20c58>
   1a058:	mov	r3, r0
   1a05c:	mov	r2, r3
   1a060:	b	1a068 <__assert_fail@plt+0x8d48>
   1a064:	mvn	r2, #-2147483648	; 0x80000000
   1a068:	ldr	r3, [fp, #-8]
   1a06c:	cmp	r2, r3
   1a070:	movcc	r3, #1
   1a074:	movcs	r3, #0
   1a078:	uxtb	r3, r3
   1a07c:	cmp	r3, #0
   1a080:	beq	1a08c <__assert_fail@plt+0x8d6c>
   1a084:	mvn	r3, #0
   1a088:	b	1a3c8 <__assert_fail@plt+0x90a8>
   1a08c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a090:	ldr	r2, [r3]
   1a094:	ldr	r3, [fp, #-8]
   1a098:	lsl	r3, r3, #3
   1a09c:	mov	r1, r3
   1a0a0:	mov	r0, r2
   1a0a4:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   1a0a8:	str	r0, [fp, #-16]
   1a0ac:	ldr	r3, [fp, #-16]
   1a0b0:	cmp	r3, #0
   1a0b4:	moveq	r3, #1
   1a0b8:	movne	r3, #0
   1a0bc:	uxtb	r3, r3
   1a0c0:	cmp	r3, #0
   1a0c4:	beq	1a0d0 <__assert_fail@plt+0x8db0>
   1a0c8:	mvn	r3, #0
   1a0cc:	b	1a3c8 <__assert_fail@plt+0x90a8>
   1a0d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a0d4:	ldr	r2, [fp, #-16]
   1a0d8:	str	r2, [r3]
   1a0dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a0e0:	ldr	r2, [r3, #12]
   1a0e4:	ldr	r3, [fp, #-8]
   1a0e8:	lsl	r3, r3, #2
   1a0ec:	mov	r1, r3
   1a0f0:	mov	r0, r2
   1a0f4:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   1a0f8:	str	r0, [fp, #-20]	; 0xffffffec
   1a0fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a100:	ldr	r2, [r3, #16]
   1a104:	ldr	r3, [fp, #-8]
   1a108:	lsl	r3, r3, #2
   1a10c:	mov	r1, r3
   1a110:	mov	r0, r2
   1a114:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   1a118:	str	r0, [fp, #-24]	; 0xffffffe8
   1a11c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a120:	ldr	r0, [r3, #20]
   1a124:	ldr	r2, [fp, #-8]
   1a128:	mov	r3, r2
   1a12c:	lsl	r3, r3, #1
   1a130:	add	r3, r3, r2
   1a134:	lsl	r3, r3, #2
   1a138:	mov	r1, r3
   1a13c:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   1a140:	str	r0, [fp, #-28]	; 0xffffffe4
   1a144:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a148:	ldr	r0, [r3, #24]
   1a14c:	ldr	r2, [fp, #-8]
   1a150:	mov	r3, r2
   1a154:	lsl	r3, r3, #1
   1a158:	add	r3, r3, r2
   1a15c:	lsl	r3, r3, #2
   1a160:	mov	r1, r3
   1a164:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   1a168:	str	r0, [fp, #-32]	; 0xffffffe0
   1a16c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a170:	cmp	r3, #0
   1a174:	moveq	r3, #1
   1a178:	movne	r3, #0
   1a17c:	uxtb	r3, r3
   1a180:	cmp	r3, #0
   1a184:	bne	1a1a4 <__assert_fail@plt+0x8e84>
   1a188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a18c:	cmp	r3, #0
   1a190:	moveq	r3, #1
   1a194:	movne	r3, #0
   1a198:	uxtb	r3, r3
   1a19c:	cmp	r3, #0
   1a1a0:	beq	1a1ac <__assert_fail@plt+0x8e8c>
   1a1a4:	mov	r3, #1
   1a1a8:	b	1a1b0 <__assert_fail@plt+0x8e90>
   1a1ac:	mov	r3, #0
   1a1b0:	cmp	r3, #0
   1a1b4:	bne	1a1d4 <__assert_fail@plt+0x8eb4>
   1a1b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a1bc:	cmp	r3, #0
   1a1c0:	moveq	r3, #1
   1a1c4:	movne	r3, #0
   1a1c8:	uxtb	r3, r3
   1a1cc:	cmp	r3, #0
   1a1d0:	beq	1a1dc <__assert_fail@plt+0x8ebc>
   1a1d4:	mov	r3, #1
   1a1d8:	b	1a1e0 <__assert_fail@plt+0x8ec0>
   1a1dc:	mov	r3, #0
   1a1e0:	cmp	r3, #0
   1a1e4:	bne	1a204 <__assert_fail@plt+0x8ee4>
   1a1e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a1ec:	cmp	r3, #0
   1a1f0:	moveq	r3, #1
   1a1f4:	movne	r3, #0
   1a1f8:	uxtb	r3, r3
   1a1fc:	cmp	r3, #0
   1a200:	beq	1a22c <__assert_fail@plt+0x8f0c>
   1a204:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a208:	bl	31500 <__assert_fail@plt+0x201e0>
   1a20c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a210:	bl	31500 <__assert_fail@plt+0x201e0>
   1a214:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a218:	bl	31500 <__assert_fail@plt+0x201e0>
   1a21c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a220:	bl	31500 <__assert_fail@plt+0x201e0>
   1a224:	mvn	r3, #0
   1a228:	b	1a3c8 <__assert_fail@plt+0x90a8>
   1a22c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a230:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a234:	str	r2, [r3, #12]
   1a238:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a23c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a240:	str	r2, [r3, #16]
   1a244:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a248:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a24c:	str	r2, [r3, #20]
   1a250:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a254:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a258:	str	r2, [r3, #24]
   1a25c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a260:	ldr	r2, [fp, #-8]
   1a264:	str	r2, [r3, #4]
   1a268:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a26c:	ldr	r2, [r3]
   1a270:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a274:	ldr	r3, [r3, #8]
   1a278:	lsl	r3, r3, #3
   1a27c:	add	r3, r2, r3
   1a280:	mov	r2, r3
   1a284:	sub	r3, fp, #48	; 0x30
   1a288:	ldm	r3, {r0, r1}
   1a28c:	stm	r2, {r0, r1}
   1a290:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a294:	ldr	r2, [r3]
   1a298:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a29c:	ldr	r3, [r3, #8]
   1a2a0:	lsl	r3, r3, #3
   1a2a4:	add	r2, r2, r3
   1a2a8:	ldr	r3, [r2, #4]
   1a2ac:	bic	r3, r3, #261120	; 0x3fc00
   1a2b0:	bic	r3, r3, #768	; 0x300
   1a2b4:	str	r3, [r2, #4]
   1a2b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a2bc:	ldr	r2, [r3]
   1a2c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a2c4:	ldr	r3, [r3, #8]
   1a2c8:	lsl	r3, r3, #3
   1a2cc:	add	r1, r2, r3
   1a2d0:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   1a2d4:	cmp	r3, #5
   1a2d8:	bne	1a2ec <__assert_fail@plt+0x8fcc>
   1a2dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a2e0:	ldr	r3, [r3, #92]	; 0x5c
   1a2e4:	cmp	r3, #1
   1a2e8:	bgt	1a2f8 <__assert_fail@plt+0x8fd8>
   1a2ec:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   1a2f0:	cmp	r3, #6
   1a2f4:	bne	1a300 <__assert_fail@plt+0x8fe0>
   1a2f8:	mov	r3, #1
   1a2fc:	b	1a304 <__assert_fail@plt+0x8fe4>
   1a300:	mov	r3, #0
   1a304:	uxtb	r3, r3
   1a308:	and	r3, r3, #1
   1a30c:	uxtb	r3, r3
   1a310:	ldrb	r2, [r1, #6]
   1a314:	and	r3, r3, #1
   1a318:	bic	r2, r2, #16
   1a31c:	lsl	r3, r3, #4
   1a320:	orr	r3, r3, r2
   1a324:	mov	r2, r3
   1a328:	strb	r2, [r1, #6]
   1a32c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a330:	ldr	r2, [r3, #12]
   1a334:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a338:	ldr	r3, [r3, #8]
   1a33c:	lsl	r3, r3, #2
   1a340:	add	r3, r2, r3
   1a344:	mvn	r2, #0
   1a348:	str	r2, [r3]
   1a34c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a350:	ldr	r1, [r3, #20]
   1a354:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a358:	ldr	r2, [r3, #8]
   1a35c:	mov	r3, r2
   1a360:	lsl	r3, r3, #1
   1a364:	add	r3, r3, r2
   1a368:	lsl	r3, r3, #2
   1a36c:	add	r3, r1, r3
   1a370:	mov	r2, #12
   1a374:	mov	r1, #0
   1a378:	mov	r0, r3
   1a37c:	bl	11248 <memset@plt>
   1a380:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a384:	ldr	r1, [r3, #24]
   1a388:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a38c:	ldr	r2, [r3, #8]
   1a390:	mov	r3, r2
   1a394:	lsl	r3, r3, #1
   1a398:	add	r3, r3, r2
   1a39c:	lsl	r3, r3, #2
   1a3a0:	add	r3, r1, r3
   1a3a4:	mov	r2, #12
   1a3a8:	mov	r1, #0
   1a3ac:	mov	r0, r3
   1a3b0:	bl	11248 <memset@plt>
   1a3b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a3b8:	ldr	r3, [r3, #8]
   1a3bc:	add	r1, r3, #1
   1a3c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a3c4:	str	r1, [r2, #8]
   1a3c8:	mov	r0, r3
   1a3cc:	sub	sp, fp, #4
   1a3d0:	pop	{fp, pc}
   1a3d4:	push	{fp}		; (str fp, [sp, #-4]!)
   1a3d8:	add	fp, sp, #0
   1a3dc:	sub	sp, sp, #20
   1a3e0:	str	r0, [fp, #-16]
   1a3e4:	str	r1, [fp, #-20]	; 0xffffffec
   1a3e8:	ldr	r3, [fp, #-16]
   1a3ec:	ldr	r3, [r3, #4]
   1a3f0:	mov	r2, r3
   1a3f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a3f8:	add	r3, r2, r3
   1a3fc:	str	r3, [fp, #-8]
   1a400:	mov	r3, #0
   1a404:	str	r3, [fp, #-12]
   1a408:	b	1a440 <__assert_fail@plt+0x9120>
   1a40c:	ldr	r3, [fp, #-16]
   1a410:	ldr	r2, [r3, #8]
   1a414:	ldr	r3, [fp, #-12]
   1a418:	lsl	r3, r3, #2
   1a41c:	add	r3, r2, r3
   1a420:	ldr	r3, [r3]
   1a424:	mov	r2, r3
   1a428:	ldr	r3, [fp, #-8]
   1a42c:	add	r3, r3, r2
   1a430:	str	r3, [fp, #-8]
   1a434:	ldr	r3, [fp, #-12]
   1a438:	add	r3, r3, #1
   1a43c:	str	r3, [fp, #-12]
   1a440:	ldr	r3, [fp, #-16]
   1a444:	ldr	r2, [r3, #4]
   1a448:	ldr	r3, [fp, #-12]
   1a44c:	cmp	r2, r3
   1a450:	bgt	1a40c <__assert_fail@plt+0x90ec>
   1a454:	ldr	r3, [fp, #-8]
   1a458:	mov	r0, r3
   1a45c:	add	sp, fp, #0
   1a460:	pop	{fp}		; (ldr fp, [sp], #4)
   1a464:	bx	lr
   1a468:	push	{fp, lr}
   1a46c:	add	fp, sp, #4
   1a470:	sub	sp, sp, #40	; 0x28
   1a474:	str	r0, [fp, #-32]	; 0xffffffe0
   1a478:	str	r1, [fp, #-36]	; 0xffffffdc
   1a47c:	str	r2, [fp, #-40]	; 0xffffffd8
   1a480:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a484:	mov	r2, #0
   1a488:	str	r2, [r3]
   1a48c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a490:	ldr	r3, [r3, #4]
   1a494:	cmp	r3, #0
   1a498:	moveq	r3, #1
   1a49c:	movne	r3, #0
   1a4a0:	uxtb	r3, r3
   1a4a4:	cmp	r3, #0
   1a4a8:	beq	1a4c0 <__assert_fail@plt+0x91a0>
   1a4ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a4b0:	mov	r2, #0
   1a4b4:	str	r2, [r3]
   1a4b8:	mov	r3, #0
   1a4bc:	b	1a5c8 <__assert_fail@plt+0x92a8>
   1a4c0:	mov	r1, #0
   1a4c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a4c8:	bl	1a3d4 <__assert_fail@plt+0x90b4>
   1a4cc:	str	r0, [fp, #-12]
   1a4d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a4d4:	ldr	r1, [r3, #32]
   1a4d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a4dc:	ldr	r2, [r3, #68]	; 0x44
   1a4e0:	ldr	r3, [fp, #-12]
   1a4e4:	and	r2, r2, r3
   1a4e8:	mov	r3, r2
   1a4ec:	lsl	r3, r3, #1
   1a4f0:	add	r3, r3, r2
   1a4f4:	lsl	r3, r3, #2
   1a4f8:	add	r3, r1, r3
   1a4fc:	str	r3, [fp, #-16]
   1a500:	mov	r3, #0
   1a504:	str	r3, [fp, #-8]
   1a508:	b	1a574 <__assert_fail@plt+0x9254>
   1a50c:	ldr	r3, [fp, #-16]
   1a510:	ldr	r2, [r3, #8]
   1a514:	ldr	r3, [fp, #-8]
   1a518:	lsl	r3, r3, #2
   1a51c:	add	r3, r2, r3
   1a520:	ldr	r3, [r3]
   1a524:	str	r3, [fp, #-20]	; 0xffffffec
   1a528:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a52c:	ldr	r2, [r3]
   1a530:	ldr	r3, [fp, #-12]
   1a534:	cmp	r2, r3
   1a538:	bne	1a564 <__assert_fail@plt+0x9244>
   1a53c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a540:	add	r3, r3, #4
   1a544:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a548:	mov	r0, r3
   1a54c:	bl	19d74 <__assert_fail@plt+0x8a54>
   1a550:	mov	r3, r0
   1a554:	cmp	r3, #0
   1a558:	beq	1a568 <__assert_fail@plt+0x9248>
   1a55c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a560:	b	1a5c8 <__assert_fail@plt+0x92a8>
   1a564:	nop			; (mov r0, r0)
   1a568:	ldr	r3, [fp, #-8]
   1a56c:	add	r3, r3, #1
   1a570:	str	r3, [fp, #-8]
   1a574:	ldr	r3, [fp, #-16]
   1a578:	ldr	r2, [r3]
   1a57c:	ldr	r3, [fp, #-8]
   1a580:	cmp	r2, r3
   1a584:	bgt	1a50c <__assert_fail@plt+0x91ec>
   1a588:	ldr	r2, [fp, #-12]
   1a58c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a590:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a594:	bl	1aa0c <__assert_fail@plt+0x96ec>
   1a598:	str	r0, [fp, #-24]	; 0xffffffe8
   1a59c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5a0:	cmp	r3, #0
   1a5a4:	moveq	r3, #1
   1a5a8:	movne	r3, #0
   1a5ac:	uxtb	r3, r3
   1a5b0:	cmp	r3, #0
   1a5b4:	beq	1a5c4 <__assert_fail@plt+0x92a4>
   1a5b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a5bc:	mov	r2, #12
   1a5c0:	str	r2, [r3]
   1a5c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5c8:	mov	r0, r3
   1a5cc:	sub	sp, fp, #4
   1a5d0:	pop	{fp, pc}
   1a5d4:	push	{fp, lr}
   1a5d8:	add	fp, sp, #4
   1a5dc:	sub	sp, sp, #40	; 0x28
   1a5e0:	str	r0, [fp, #-32]	; 0xffffffe0
   1a5e4:	str	r1, [fp, #-36]	; 0xffffffdc
   1a5e8:	str	r2, [fp, #-40]	; 0xffffffd8
   1a5ec:	str	r3, [fp, #-44]	; 0xffffffd4
   1a5f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a5f4:	mov	r2, #0
   1a5f8:	str	r2, [r3]
   1a5fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a600:	ldr	r3, [r3, #4]
   1a604:	cmp	r3, #0
   1a608:	bne	1a620 <__assert_fail@plt+0x9300>
   1a60c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a610:	mov	r2, #0
   1a614:	str	r2, [r3]
   1a618:	mov	r3, #0
   1a61c:	b	1a748 <__assert_fail@plt+0x9428>
   1a620:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a624:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a628:	bl	1a3d4 <__assert_fail@plt+0x90b4>
   1a62c:	str	r0, [fp, #-12]
   1a630:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a634:	ldr	r1, [r3, #32]
   1a638:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a63c:	ldr	r2, [r3, #68]	; 0x44
   1a640:	ldr	r3, [fp, #-12]
   1a644:	and	r2, r2, r3
   1a648:	mov	r3, r2
   1a64c:	lsl	r3, r3, #1
   1a650:	add	r3, r3, r2
   1a654:	lsl	r3, r3, #2
   1a658:	add	r3, r1, r3
   1a65c:	str	r3, [fp, #-16]
   1a660:	mov	r3, #0
   1a664:	str	r3, [fp, #-8]
   1a668:	b	1a6f0 <__assert_fail@plt+0x93d0>
   1a66c:	ldr	r3, [fp, #-16]
   1a670:	ldr	r2, [r3, #8]
   1a674:	ldr	r3, [fp, #-8]
   1a678:	lsl	r3, r3, #2
   1a67c:	add	r3, r2, r3
   1a680:	ldr	r3, [r3]
   1a684:	str	r3, [fp, #-20]	; 0xffffffec
   1a688:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a68c:	ldr	r2, [r3]
   1a690:	ldr	r3, [fp, #-12]
   1a694:	cmp	r2, r3
   1a698:	bne	1a6e4 <__assert_fail@plt+0x93c4>
   1a69c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6a0:	ldrb	r3, [r3, #52]	; 0x34
   1a6a4:	and	r3, r3, #15
   1a6a8:	uxtb	r3, r3
   1a6ac:	mov	r2, r3
   1a6b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a6b4:	cmp	r2, r3
   1a6b8:	bne	1a6e4 <__assert_fail@plt+0x93c4>
   1a6bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6c0:	ldr	r3, [r3, #40]	; 0x28
   1a6c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a6c8:	mov	r0, r3
   1a6cc:	bl	19d74 <__assert_fail@plt+0x8a54>
   1a6d0:	mov	r3, r0
   1a6d4:	cmp	r3, #0
   1a6d8:	beq	1a6e4 <__assert_fail@plt+0x93c4>
   1a6dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6e0:	b	1a748 <__assert_fail@plt+0x9428>
   1a6e4:	ldr	r3, [fp, #-8]
   1a6e8:	add	r3, r3, #1
   1a6ec:	str	r3, [fp, #-8]
   1a6f0:	ldr	r3, [fp, #-16]
   1a6f4:	ldr	r2, [r3]
   1a6f8:	ldr	r3, [fp, #-8]
   1a6fc:	cmp	r2, r3
   1a700:	bgt	1a66c <__assert_fail@plt+0x934c>
   1a704:	ldr	r3, [fp, #-12]
   1a708:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a70c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a710:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a714:	bl	1ac58 <__assert_fail@plt+0x9938>
   1a718:	str	r0, [fp, #-24]	; 0xffffffe8
   1a71c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a720:	cmp	r3, #0
   1a724:	moveq	r3, #1
   1a728:	movne	r3, #0
   1a72c:	uxtb	r3, r3
   1a730:	cmp	r3, #0
   1a734:	beq	1a744 <__assert_fail@plt+0x9424>
   1a738:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a73c:	mov	r2, #12
   1a740:	str	r2, [r3]
   1a744:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a748:	mov	r0, r3
   1a74c:	sub	sp, fp, #4
   1a750:	pop	{fp, pc}
   1a754:	push	{fp, lr}
   1a758:	add	fp, sp, #4
   1a75c:	sub	sp, sp, #40	; 0x28
   1a760:	str	r0, [fp, #-32]	; 0xffffffe0
   1a764:	str	r1, [fp, #-36]	; 0xffffffdc
   1a768:	str	r2, [fp, #-40]	; 0xffffffd8
   1a76c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a770:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a774:	str	r2, [r3]
   1a778:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a77c:	add	r2, r3, #16
   1a780:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a784:	ldr	r3, [r3, #8]
   1a788:	mov	r1, r3
   1a78c:	mov	r0, r2
   1a790:	bl	18a98 <__assert_fail@plt+0x7778>
   1a794:	str	r0, [fp, #-12]
   1a798:	ldr	r3, [fp, #-12]
   1a79c:	cmp	r3, #0
   1a7a0:	movne	r3, #1
   1a7a4:	moveq	r3, #0
   1a7a8:	uxtb	r3, r3
   1a7ac:	cmp	r3, #0
   1a7b0:	beq	1a7bc <__assert_fail@plt+0x949c>
   1a7b4:	mov	r3, #12
   1a7b8:	b	1a950 <__assert_fail@plt+0x9630>
   1a7bc:	mov	r3, #0
   1a7c0:	str	r3, [fp, #-8]
   1a7c4:	b	1a844 <__assert_fail@plt+0x9524>
   1a7c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a7cc:	ldr	r2, [r3, #12]
   1a7d0:	ldr	r3, [fp, #-8]
   1a7d4:	lsl	r3, r3, #2
   1a7d8:	add	r3, r2, r3
   1a7dc:	ldr	r3, [r3]
   1a7e0:	str	r3, [fp, #-16]
   1a7e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a7e8:	ldr	r2, [r3]
   1a7ec:	ldr	r3, [fp, #-16]
   1a7f0:	lsl	r3, r3, #3
   1a7f4:	add	r3, r2, r3
   1a7f8:	ldrb	r3, [r3, #4]
   1a7fc:	and	r3, r3, #8
   1a800:	cmp	r3, #0
   1a804:	bne	1a838 <__assert_fail@plt+0x9518>
   1a808:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a80c:	add	r3, r3, #16
   1a810:	ldr	r1, [fp, #-16]
   1a814:	mov	r0, r3
   1a818:	bl	19ca0 <__assert_fail@plt+0x8980>
   1a81c:	mov	r3, r0
   1a820:	eor	r3, r3, #1
   1a824:	uxtb	r3, r3
   1a828:	cmp	r3, #0
   1a82c:	beq	1a838 <__assert_fail@plt+0x9518>
   1a830:	mov	r3, #12
   1a834:	b	1a950 <__assert_fail@plt+0x9630>
   1a838:	ldr	r3, [fp, #-8]
   1a83c:	add	r3, r3, #1
   1a840:	str	r3, [fp, #-8]
   1a844:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a848:	ldr	r2, [r3, #8]
   1a84c:	ldr	r3, [fp, #-8]
   1a850:	cmp	r2, r3
   1a854:	bgt	1a7c8 <__assert_fail@plt+0x94a8>
   1a858:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a85c:	ldr	r1, [r3, #32]
   1a860:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a864:	ldr	r2, [r3, #68]	; 0x44
   1a868:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a86c:	and	r2, r2, r3
   1a870:	mov	r3, r2
   1a874:	lsl	r3, r3, #1
   1a878:	add	r3, r3, r2
   1a87c:	lsl	r3, r3, #2
   1a880:	add	r3, r1, r3
   1a884:	str	r3, [fp, #-20]	; 0xffffffec
   1a888:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a88c:	ldr	r2, [r3, #4]
   1a890:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a894:	ldr	r3, [r3]
   1a898:	cmp	r2, r3
   1a89c:	movle	r3, #1
   1a8a0:	movgt	r3, #0
   1a8a4:	uxtb	r3, r3
   1a8a8:	cmp	r3, #0
   1a8ac:	beq	1a920 <__assert_fail@plt+0x9600>
   1a8b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a8b4:	ldr	r3, [r3]
   1a8b8:	add	r3, r3, #1
   1a8bc:	lsl	r3, r3, #1
   1a8c0:	str	r3, [fp, #-24]	; 0xffffffe8
   1a8c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a8c8:	ldr	r2, [r3, #8]
   1a8cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a8d0:	lsl	r3, r3, #2
   1a8d4:	mov	r1, r3
   1a8d8:	mov	r0, r2
   1a8dc:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   1a8e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a8e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a8e8:	cmp	r3, #0
   1a8ec:	moveq	r3, #1
   1a8f0:	movne	r3, #0
   1a8f4:	uxtb	r3, r3
   1a8f8:	cmp	r3, #0
   1a8fc:	beq	1a908 <__assert_fail@plt+0x95e8>
   1a900:	mov	r3, #12
   1a904:	b	1a950 <__assert_fail@plt+0x9630>
   1a908:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a90c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a910:	str	r2, [r3, #8]
   1a914:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a918:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a91c:	str	r2, [r3, #4]
   1a920:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a924:	ldr	r2, [r3, #8]
   1a928:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a92c:	ldr	r3, [r3]
   1a930:	add	r0, r3, #1
   1a934:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a938:	str	r0, [r1]
   1a93c:	lsl	r3, r3, #2
   1a940:	add	r3, r2, r3
   1a944:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a948:	str	r2, [r3]
   1a94c:	mov	r3, #0
   1a950:	mov	r0, r3
   1a954:	sub	sp, fp, #4
   1a958:	pop	{fp, pc}
   1a95c:	push	{fp, lr}
   1a960:	add	fp, sp, #4
   1a964:	sub	sp, sp, #8
   1a968:	str	r0, [fp, #-8]
   1a96c:	ldr	r3, [fp, #-8]
   1a970:	ldr	r3, [r3, #24]
   1a974:	mov	r0, r3
   1a978:	bl	31500 <__assert_fail@plt+0x201e0>
   1a97c:	ldr	r3, [fp, #-8]
   1a980:	ldr	r3, [r3, #36]	; 0x24
   1a984:	mov	r0, r3
   1a988:	bl	31500 <__assert_fail@plt+0x201e0>
   1a98c:	ldr	r3, [fp, #-8]
   1a990:	ldr	r2, [r3, #40]	; 0x28
   1a994:	ldr	r3, [fp, #-8]
   1a998:	add	r3, r3, #4
   1a99c:	cmp	r2, r3
   1a9a0:	beq	1a9c8 <__assert_fail@plt+0x96a8>
   1a9a4:	ldr	r3, [fp, #-8]
   1a9a8:	ldr	r3, [r3, #40]	; 0x28
   1a9ac:	ldr	r3, [r3, #8]
   1a9b0:	mov	r0, r3
   1a9b4:	bl	31500 <__assert_fail@plt+0x201e0>
   1a9b8:	ldr	r3, [fp, #-8]
   1a9bc:	ldr	r3, [r3, #40]	; 0x28
   1a9c0:	mov	r0, r3
   1a9c4:	bl	31500 <__assert_fail@plt+0x201e0>
   1a9c8:	ldr	r3, [fp, #-8]
   1a9cc:	ldr	r3, [r3, #12]
   1a9d0:	mov	r0, r3
   1a9d4:	bl	31500 <__assert_fail@plt+0x201e0>
   1a9d8:	ldr	r3, [fp, #-8]
   1a9dc:	ldr	r3, [r3, #48]	; 0x30
   1a9e0:	mov	r0, r3
   1a9e4:	bl	31500 <__assert_fail@plt+0x201e0>
   1a9e8:	ldr	r3, [fp, #-8]
   1a9ec:	ldr	r3, [r3, #44]	; 0x2c
   1a9f0:	mov	r0, r3
   1a9f4:	bl	31500 <__assert_fail@plt+0x201e0>
   1a9f8:	ldr	r0, [fp, #-8]
   1a9fc:	bl	31500 <__assert_fail@plt+0x201e0>
   1aa00:	nop			; (mov r0, r0)
   1aa04:	sub	sp, fp, #4
   1aa08:	pop	{fp, pc}
   1aa0c:	push	{fp, lr}
   1aa10:	add	fp, sp, #4
   1aa14:	sub	sp, sp, #40	; 0x28
   1aa18:	str	r0, [fp, #-32]	; 0xffffffe0
   1aa1c:	str	r1, [fp, #-36]	; 0xffffffdc
   1aa20:	str	r2, [fp, #-40]	; 0xffffffd8
   1aa24:	mov	r1, #1
   1aa28:	mov	r0, #56	; 0x38
   1aa2c:	bl	30c58 <__assert_fail@plt+0x1f938>
   1aa30:	mov	r3, r0
   1aa34:	str	r3, [fp, #-12]
   1aa38:	ldr	r3, [fp, #-12]
   1aa3c:	cmp	r3, #0
   1aa40:	moveq	r3, #1
   1aa44:	movne	r3, #0
   1aa48:	uxtb	r3, r3
   1aa4c:	cmp	r3, #0
   1aa50:	beq	1aa5c <__assert_fail@plt+0x973c>
   1aa54:	mov	r3, #0
   1aa58:	b	1ac48 <__assert_fail@plt+0x9928>
   1aa5c:	ldr	r3, [fp, #-12]
   1aa60:	add	r3, r3, #4
   1aa64:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1aa68:	mov	r0, r3
   1aa6c:	bl	18cd0 <__assert_fail@plt+0x79b0>
   1aa70:	str	r0, [fp, #-16]
   1aa74:	ldr	r3, [fp, #-16]
   1aa78:	cmp	r3, #0
   1aa7c:	movne	r3, #1
   1aa80:	moveq	r3, #0
   1aa84:	uxtb	r3, r3
   1aa88:	cmp	r3, #0
   1aa8c:	beq	1aaa0 <__assert_fail@plt+0x9780>
   1aa90:	ldr	r0, [fp, #-12]
   1aa94:	bl	31500 <__assert_fail@plt+0x201e0>
   1aa98:	mov	r3, #0
   1aa9c:	b	1ac48 <__assert_fail@plt+0x9928>
   1aaa0:	ldr	r3, [fp, #-12]
   1aaa4:	add	r2, r3, #4
   1aaa8:	ldr	r3, [fp, #-12]
   1aaac:	str	r2, [r3, #40]	; 0x28
   1aab0:	mov	r3, #0
   1aab4:	str	r3, [fp, #-8]
   1aab8:	b	1abf0 <__assert_fail@plt+0x98d0>
   1aabc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aac0:	ldr	r2, [r3]
   1aac4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1aac8:	ldr	r1, [r3, #8]
   1aacc:	ldr	r3, [fp, #-8]
   1aad0:	lsl	r3, r3, #2
   1aad4:	add	r3, r1, r3
   1aad8:	ldr	r3, [r3]
   1aadc:	lsl	r3, r3, #3
   1aae0:	add	r3, r2, r3
   1aae4:	str	r3, [fp, #-20]	; 0xffffffec
   1aae8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aaec:	ldrb	r3, [r3, #4]
   1aaf0:	str	r3, [fp, #-24]	; 0xffffffe8
   1aaf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aaf8:	cmp	r3, #1
   1aafc:	bne	1ab18 <__assert_fail@plt+0x97f8>
   1ab00:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab04:	ldr	r2, [r3, #4]
   1ab08:	ldr	r3, [pc, #324]	; 1ac54 <__assert_fail@plt+0x9934>
   1ab0c:	and	r3, r3, r2
   1ab10:	cmp	r3, #0
   1ab14:	beq	1abe0 <__assert_fail@plt+0x98c0>
   1ab18:	ldr	r3, [fp, #-12]
   1ab1c:	ldrb	r3, [r3, #52]	; 0x34
   1ab20:	lsr	r3, r3, #5
   1ab24:	and	r3, r3, #1
   1ab28:	uxtb	r2, r3
   1ab2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab30:	ldrb	r3, [r3, #6]
   1ab34:	lsr	r3, r3, #4
   1ab38:	and	r3, r3, #1
   1ab3c:	uxtb	r3, r3
   1ab40:	orr	r3, r2, r3
   1ab44:	uxtb	r3, r3
   1ab48:	ldr	r1, [fp, #-12]
   1ab4c:	ldrb	r2, [r1, #52]	; 0x34
   1ab50:	and	r3, r3, #1
   1ab54:	bic	r2, r2, #32
   1ab58:	lsl	r3, r3, #5
   1ab5c:	orr	r3, r3, r2
   1ab60:	mov	r2, r3
   1ab64:	strb	r2, [r1, #52]	; 0x34
   1ab68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab6c:	cmp	r3, #2
   1ab70:	bne	1ab88 <__assert_fail@plt+0x9868>
   1ab74:	ldr	r2, [fp, #-12]
   1ab78:	ldrb	r3, [r2, #52]	; 0x34
   1ab7c:	orr	r3, r3, #16
   1ab80:	strb	r3, [r2, #52]	; 0x34
   1ab84:	b	1abe4 <__assert_fail@plt+0x98c4>
   1ab88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab8c:	cmp	r3, #4
   1ab90:	bne	1aba8 <__assert_fail@plt+0x9888>
   1ab94:	ldr	r2, [fp, #-12]
   1ab98:	ldrb	r3, [r2, #52]	; 0x34
   1ab9c:	orr	r3, r3, #64	; 0x40
   1aba0:	strb	r3, [r2, #52]	; 0x34
   1aba4:	b	1abe4 <__assert_fail@plt+0x98c4>
   1aba8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1abac:	cmp	r3, #12
   1abb0:	beq	1abcc <__assert_fail@plt+0x98ac>
   1abb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1abb8:	ldr	r2, [r3, #4]
   1abbc:	ldr	r3, [pc, #144]	; 1ac54 <__assert_fail@plt+0x9934>
   1abc0:	and	r3, r3, r2
   1abc4:	cmp	r3, #0
   1abc8:	beq	1abe4 <__assert_fail@plt+0x98c4>
   1abcc:	ldr	r2, [fp, #-12]
   1abd0:	ldrb	r3, [r2, #52]	; 0x34
   1abd4:	orr	r3, r3, #128	; 0x80
   1abd8:	strb	r3, [r2, #52]	; 0x34
   1abdc:	b	1abe4 <__assert_fail@plt+0x98c4>
   1abe0:	nop			; (mov r0, r0)
   1abe4:	ldr	r3, [fp, #-8]
   1abe8:	add	r3, r3, #1
   1abec:	str	r3, [fp, #-8]
   1abf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1abf4:	ldr	r2, [r3, #4]
   1abf8:	ldr	r3, [fp, #-8]
   1abfc:	cmp	r2, r3
   1ac00:	bgt	1aabc <__assert_fail@plt+0x979c>
   1ac04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ac08:	ldr	r1, [fp, #-12]
   1ac0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ac10:	bl	1a754 <__assert_fail@plt+0x9434>
   1ac14:	str	r0, [fp, #-16]
   1ac18:	ldr	r3, [fp, #-16]
   1ac1c:	cmp	r3, #0
   1ac20:	movne	r3, #1
   1ac24:	moveq	r3, #0
   1ac28:	uxtb	r3, r3
   1ac2c:	cmp	r3, #0
   1ac30:	beq	1ac44 <__assert_fail@plt+0x9924>
   1ac34:	ldr	r0, [fp, #-12]
   1ac38:	bl	1a95c <__assert_fail@plt+0x963c>
   1ac3c:	mov	r3, #0
   1ac40:	str	r3, [fp, #-12]
   1ac44:	ldr	r3, [fp, #-12]
   1ac48:	mov	r0, r3
   1ac4c:	sub	sp, fp, #4
   1ac50:	pop	{fp, pc}
   1ac54:	andeq	pc, r3, r0, lsl #30
   1ac58:	push	{fp, lr}
   1ac5c:	add	fp, sp, #4
   1ac60:	sub	sp, sp, #48	; 0x30
   1ac64:	str	r0, [fp, #-40]	; 0xffffffd8
   1ac68:	str	r1, [fp, #-44]	; 0xffffffd4
   1ac6c:	str	r2, [fp, #-48]	; 0xffffffd0
   1ac70:	str	r3, [fp, #-52]	; 0xffffffcc
   1ac74:	mov	r3, #0
   1ac78:	str	r3, [fp, #-12]
   1ac7c:	mov	r1, #1
   1ac80:	mov	r0, #56	; 0x38
   1ac84:	bl	30c58 <__assert_fail@plt+0x1f938>
   1ac88:	mov	r3, r0
   1ac8c:	str	r3, [fp, #-16]
   1ac90:	ldr	r3, [fp, #-16]
   1ac94:	cmp	r3, #0
   1ac98:	moveq	r3, #1
   1ac9c:	movne	r3, #0
   1aca0:	uxtb	r3, r3
   1aca4:	cmp	r3, #0
   1aca8:	beq	1acb4 <__assert_fail@plt+0x9994>
   1acac:	mov	r3, #0
   1acb0:	b	1affc <__assert_fail@plt+0x9cdc>
   1acb4:	ldr	r3, [fp, #-16]
   1acb8:	add	r3, r3, #4
   1acbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1acc0:	mov	r0, r3
   1acc4:	bl	18cd0 <__assert_fail@plt+0x79b0>
   1acc8:	str	r0, [fp, #-20]	; 0xffffffec
   1accc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1acd0:	cmp	r3, #0
   1acd4:	movne	r3, #1
   1acd8:	moveq	r3, #0
   1acdc:	uxtb	r3, r3
   1ace0:	cmp	r3, #0
   1ace4:	beq	1acf8 <__assert_fail@plt+0x99d8>
   1ace8:	ldr	r0, [fp, #-16]
   1acec:	bl	31500 <__assert_fail@plt+0x201e0>
   1acf0:	mov	r3, #0
   1acf4:	b	1affc <__assert_fail@plt+0x9cdc>
   1acf8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1acfc:	uxtb	r3, r3
   1ad00:	and	r3, r3, #15
   1ad04:	uxtb	r1, r3
   1ad08:	ldr	r2, [fp, #-16]
   1ad0c:	ldrb	r3, [r2, #52]	; 0x34
   1ad10:	and	r1, r1, #15
   1ad14:	bic	r3, r3, #15
   1ad18:	orr	r3, r1, r3
   1ad1c:	strb	r3, [r2, #52]	; 0x34
   1ad20:	ldr	r3, [fp, #-16]
   1ad24:	add	r2, r3, #4
   1ad28:	ldr	r3, [fp, #-16]
   1ad2c:	str	r2, [r3, #40]	; 0x28
   1ad30:	mov	r3, #0
   1ad34:	str	r3, [fp, #-8]
   1ad38:	b	1afa4 <__assert_fail@plt+0x9c84>
   1ad3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ad40:	ldr	r2, [r3]
   1ad44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ad48:	ldr	r1, [r3, #8]
   1ad4c:	ldr	r3, [fp, #-8]
   1ad50:	lsl	r3, r3, #2
   1ad54:	add	r3, r1, r3
   1ad58:	ldr	r3, [r3]
   1ad5c:	lsl	r3, r3, #3
   1ad60:	add	r3, r2, r3
   1ad64:	str	r3, [fp, #-24]	; 0xffffffe8
   1ad68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad6c:	ldrb	r3, [r3, #4]
   1ad70:	str	r3, [fp, #-28]	; 0xffffffe4
   1ad74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad78:	ldr	r3, [r3, #4]
   1ad7c:	lsr	r3, r3, #8
   1ad80:	lsl	r3, r3, #22
   1ad84:	lsr	r3, r3, #22
   1ad88:	uxth	r3, r3
   1ad8c:	str	r3, [fp, #-32]	; 0xffffffe0
   1ad90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ad94:	cmp	r3, #1
   1ad98:	bne	1ada8 <__assert_fail@plt+0x9a88>
   1ad9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ada0:	cmp	r3, #0
   1ada4:	beq	1af94 <__assert_fail@plt+0x9c74>
   1ada8:	ldr	r3, [fp, #-16]
   1adac:	ldrb	r3, [r3, #52]	; 0x34
   1adb0:	lsr	r3, r3, #5
   1adb4:	and	r3, r3, #1
   1adb8:	uxtb	r2, r3
   1adbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1adc0:	ldrb	r3, [r3, #6]
   1adc4:	lsr	r3, r3, #4
   1adc8:	and	r3, r3, #1
   1adcc:	uxtb	r3, r3
   1add0:	orr	r3, r2, r3
   1add4:	uxtb	r3, r3
   1add8:	ldr	r1, [fp, #-16]
   1addc:	ldrb	r2, [r1, #52]	; 0x34
   1ade0:	and	r3, r3, #1
   1ade4:	bic	r2, r2, #32
   1ade8:	lsl	r3, r3, #5
   1adec:	orr	r3, r3, r2
   1adf0:	mov	r2, r3
   1adf4:	strb	r2, [r1, #52]	; 0x34
   1adf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1adfc:	cmp	r3, #2
   1ae00:	bne	1ae18 <__assert_fail@plt+0x9af8>
   1ae04:	ldr	r2, [fp, #-16]
   1ae08:	ldrb	r3, [r2, #52]	; 0x34
   1ae0c:	orr	r3, r3, #16
   1ae10:	strb	r3, [r2, #52]	; 0x34
   1ae14:	b	1ae34 <__assert_fail@plt+0x9b14>
   1ae18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ae1c:	cmp	r3, #4
   1ae20:	bne	1ae34 <__assert_fail@plt+0x9b14>
   1ae24:	ldr	r2, [fp, #-16]
   1ae28:	ldrb	r3, [r2, #52]	; 0x34
   1ae2c:	orr	r3, r3, #64	; 0x40
   1ae30:	strb	r3, [r2, #52]	; 0x34
   1ae34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ae38:	cmp	r3, #0
   1ae3c:	beq	1af98 <__assert_fail@plt+0x9c78>
   1ae40:	ldr	r3, [fp, #-16]
   1ae44:	ldr	r2, [r3, #40]	; 0x28
   1ae48:	ldr	r3, [fp, #-16]
   1ae4c:	add	r3, r3, #4
   1ae50:	cmp	r2, r3
   1ae54:	bne	1aee8 <__assert_fail@plt+0x9bc8>
   1ae58:	mov	r0, #12
   1ae5c:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   1ae60:	mov	r3, r0
   1ae64:	str	r3, [fp, #-36]	; 0xffffffdc
   1ae68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ae6c:	cmp	r3, #0
   1ae70:	moveq	r3, #1
   1ae74:	movne	r3, #0
   1ae78:	uxtb	r3, r3
   1ae7c:	cmp	r3, #0
   1ae80:	beq	1ae94 <__assert_fail@plt+0x9b74>
   1ae84:	ldr	r0, [fp, #-16]
   1ae88:	bl	1a95c <__assert_fail@plt+0x963c>
   1ae8c:	mov	r3, #0
   1ae90:	b	1affc <__assert_fail@plt+0x9cdc>
   1ae94:	ldr	r3, [fp, #-16]
   1ae98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ae9c:	str	r2, [r3, #40]	; 0x28
   1aea0:	ldr	r3, [fp, #-16]
   1aea4:	ldr	r3, [r3, #40]	; 0x28
   1aea8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aeac:	mov	r0, r3
   1aeb0:	bl	18cd0 <__assert_fail@plt+0x79b0>
   1aeb4:	mov	r3, r0
   1aeb8:	cmp	r3, #0
   1aebc:	beq	1aed0 <__assert_fail@plt+0x9bb0>
   1aec0:	ldr	r0, [fp, #-16]
   1aec4:	bl	1a95c <__assert_fail@plt+0x963c>
   1aec8:	mov	r3, #0
   1aecc:	b	1affc <__assert_fail@plt+0x9cdc>
   1aed0:	mov	r3, #0
   1aed4:	str	r3, [fp, #-12]
   1aed8:	ldr	r2, [fp, #-16]
   1aedc:	ldrb	r3, [r2, #52]	; 0x34
   1aee0:	orr	r3, r3, #128	; 0x80
   1aee4:	strb	r3, [r2, #52]	; 0x34
   1aee8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aeec:	and	r3, r3, #1
   1aef0:	cmp	r3, #0
   1aef4:	beq	1af08 <__assert_fail@plt+0x9be8>
   1aef8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1aefc:	and	r3, r3, #1
   1af00:	cmp	r3, #0
   1af04:	beq	1af68 <__assert_fail@plt+0x9c48>
   1af08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af0c:	and	r3, r3, #2
   1af10:	cmp	r3, #0
   1af14:	beq	1af28 <__assert_fail@plt+0x9c08>
   1af18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1af1c:	and	r3, r3, #1
   1af20:	cmp	r3, #0
   1af24:	bne	1af68 <__assert_fail@plt+0x9c48>
   1af28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af2c:	and	r3, r3, #16
   1af30:	cmp	r3, #0
   1af34:	beq	1af48 <__assert_fail@plt+0x9c28>
   1af38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1af3c:	and	r3, r3, #2
   1af40:	cmp	r3, #0
   1af44:	beq	1af68 <__assert_fail@plt+0x9c48>
   1af48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af4c:	and	r3, r3, #64	; 0x40
   1af50:	cmp	r3, #0
   1af54:	beq	1af98 <__assert_fail@plt+0x9c78>
   1af58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1af5c:	and	r3, r3, #4
   1af60:	cmp	r3, #0
   1af64:	bne	1af98 <__assert_fail@plt+0x9c78>
   1af68:	ldr	r3, [fp, #-16]
   1af6c:	add	r0, r3, #4
   1af70:	ldr	r2, [fp, #-8]
   1af74:	ldr	r3, [fp, #-12]
   1af78:	sub	r3, r2, r3
   1af7c:	mov	r1, r3
   1af80:	bl	19f28 <__assert_fail@plt+0x8c08>
   1af84:	ldr	r3, [fp, #-12]
   1af88:	add	r3, r3, #1
   1af8c:	str	r3, [fp, #-12]
   1af90:	b	1af98 <__assert_fail@plt+0x9c78>
   1af94:	nop			; (mov r0, r0)
   1af98:	ldr	r3, [fp, #-8]
   1af9c:	add	r3, r3, #1
   1afa0:	str	r3, [fp, #-8]
   1afa4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1afa8:	ldr	r2, [r3, #4]
   1afac:	ldr	r3, [fp, #-8]
   1afb0:	cmp	r2, r3
   1afb4:	bgt	1ad3c <__assert_fail@plt+0x9a1c>
   1afb8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1afbc:	ldr	r1, [fp, #-16]
   1afc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1afc4:	bl	1a754 <__assert_fail@plt+0x9434>
   1afc8:	str	r0, [fp, #-20]	; 0xffffffec
   1afcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1afd0:	cmp	r3, #0
   1afd4:	movne	r3, #1
   1afd8:	moveq	r3, #0
   1afdc:	uxtb	r3, r3
   1afe0:	cmp	r3, #0
   1afe4:	beq	1aff8 <__assert_fail@plt+0x9cd8>
   1afe8:	ldr	r0, [fp, #-16]
   1afec:	bl	1a95c <__assert_fail@plt+0x963c>
   1aff0:	mov	r3, #0
   1aff4:	str	r3, [fp, #-16]
   1aff8:	ldr	r3, [fp, #-16]
   1affc:	mov	r0, r3
   1b000:	sub	sp, fp, #4
   1b004:	pop	{fp, pc}
   1b008:	push	{fp, lr}
   1b00c:	add	fp, sp, #4
   1b010:	sub	sp, sp, #24
   1b014:	str	r0, [fp, #-16]
   1b018:	str	r1, [fp, #-20]	; 0xffffffec
   1b01c:	str	r2, [fp, #-24]	; 0xffffffe8
   1b020:	ldr	r3, [pc, #160]	; 1b0c8 <__assert_fail@plt+0x9da8>
   1b024:	ldr	r3, [r3]
   1b028:	and	r3, r3, #33554432	; 0x2000000
   1b02c:	cmp	r3, #0
   1b030:	movne	r3, #1
   1b034:	moveq	r3, #0
   1b038:	uxtb	r3, r3
   1b03c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b040:	ldrb	r2, [r1, #28]
   1b044:	and	r3, r3, #1
   1b048:	bic	r2, r2, #16
   1b04c:	lsl	r3, r3, #4
   1b050:	orr	r3, r3, r2
   1b054:	mov	r2, r3
   1b058:	strb	r2, [r1, #28]
   1b05c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b060:	ldrb	r3, [r2, #28]
   1b064:	orr	r3, r3, #128	; 0x80
   1b068:	strb	r3, [r2, #28]
   1b06c:	ldr	r3, [pc, #84]	; 1b0c8 <__assert_fail@plt+0x9da8>
   1b070:	ldr	r3, [r3]
   1b074:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b078:	ldr	r1, [fp, #-16]
   1b07c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b080:	bl	1bfc8 <__assert_fail@plt+0xaca8>
   1b084:	str	r0, [fp, #-8]
   1b088:	ldr	r3, [fp, #-8]
   1b08c:	cmp	r3, #0
   1b090:	bne	1b09c <__assert_fail@plt+0x9d7c>
   1b094:	mov	r3, #0
   1b098:	b	1b0bc <__assert_fail@plt+0x9d9c>
   1b09c:	ldr	r2, [pc, #40]	; 1b0cc <__assert_fail@plt+0x9dac>
   1b0a0:	ldr	r3, [fp, #-8]
   1b0a4:	ldr	r3, [r2, r3, lsl #2]
   1b0a8:	ldr	r2, [pc, #32]	; 1b0d0 <__assert_fail@plt+0x9db0>
   1b0ac:	add	r3, r3, r2
   1b0b0:	mov	r0, r3
   1b0b4:	bl	111f4 <gettext@plt>
   1b0b8:	mov	r3, r0
   1b0bc:	mov	r0, r3
   1b0c0:	sub	sp, fp, #4
   1b0c4:	pop	{fp, pc}
   1b0c8:	andeq	r4, r4, r4, asr #13
   1b0cc:			; <UNDEFINED> instruction: 0x000335b4
   1b0d0:	andeq	r3, r3, r4, lsr r4
   1b0d4:	push	{fp}		; (str fp, [sp, #-4]!)
   1b0d8:	add	fp, sp, #0
   1b0dc:	sub	sp, sp, #20
   1b0e0:	str	r0, [fp, #-16]
   1b0e4:	ldr	r3, [pc, #36]	; 1b110 <__assert_fail@plt+0x9df0>
   1b0e8:	ldr	r3, [r3]
   1b0ec:	str	r3, [fp, #-8]
   1b0f0:	ldr	r2, [pc, #24]	; 1b110 <__assert_fail@plt+0x9df0>
   1b0f4:	ldr	r3, [fp, #-16]
   1b0f8:	str	r3, [r2]
   1b0fc:	ldr	r3, [fp, #-8]
   1b100:	mov	r0, r3
   1b104:	add	sp, fp, #0
   1b108:	pop	{fp}		; (ldr fp, [sp], #4)
   1b10c:	bx	lr
   1b110:	andeq	r4, r4, r4, asr #13
   1b114:	push	{fp, lr}
   1b118:	add	fp, sp, #4
   1b11c:	sub	sp, sp, #16
   1b120:	str	r0, [fp, #-16]
   1b124:	ldr	r3, [fp, #-16]
   1b128:	ldr	r3, [r3]
   1b12c:	str	r3, [fp, #-8]
   1b130:	ldr	r3, [fp, #-16]
   1b134:	ldr	r3, [r3, #16]
   1b138:	str	r3, [fp, #-12]
   1b13c:	mov	r2, #256	; 0x100
   1b140:	mov	r1, #0
   1b144:	ldr	r0, [fp, #-12]
   1b148:	bl	11248 <memset@plt>
   1b14c:	ldr	r3, [fp, #-8]
   1b150:	ldr	r3, [r3, #36]	; 0x24
   1b154:	ldr	r2, [fp, #-12]
   1b158:	mov	r1, r3
   1b15c:	ldr	r0, [fp, #-16]
   1b160:	bl	1b214 <__assert_fail@plt+0x9ef4>
   1b164:	ldr	r3, [fp, #-8]
   1b168:	ldr	r2, [r3, #36]	; 0x24
   1b16c:	ldr	r3, [fp, #-8]
   1b170:	ldr	r3, [r3, #40]	; 0x28
   1b174:	cmp	r2, r3
   1b178:	beq	1b194 <__assert_fail@plt+0x9e74>
   1b17c:	ldr	r3, [fp, #-8]
   1b180:	ldr	r3, [r3, #40]	; 0x28
   1b184:	ldr	r2, [fp, #-12]
   1b188:	mov	r1, r3
   1b18c:	ldr	r0, [fp, #-16]
   1b190:	bl	1b214 <__assert_fail@plt+0x9ef4>
   1b194:	ldr	r3, [fp, #-8]
   1b198:	ldr	r2, [r3, #36]	; 0x24
   1b19c:	ldr	r3, [fp, #-8]
   1b1a0:	ldr	r3, [r3, #44]	; 0x2c
   1b1a4:	cmp	r2, r3
   1b1a8:	beq	1b1c4 <__assert_fail@plt+0x9ea4>
   1b1ac:	ldr	r3, [fp, #-8]
   1b1b0:	ldr	r3, [r3, #44]	; 0x2c
   1b1b4:	ldr	r2, [fp, #-12]
   1b1b8:	mov	r1, r3
   1b1bc:	ldr	r0, [fp, #-16]
   1b1c0:	bl	1b214 <__assert_fail@plt+0x9ef4>
   1b1c4:	ldr	r3, [fp, #-8]
   1b1c8:	ldr	r2, [r3, #36]	; 0x24
   1b1cc:	ldr	r3, [fp, #-8]
   1b1d0:	ldr	r3, [r3, #48]	; 0x30
   1b1d4:	cmp	r2, r3
   1b1d8:	beq	1b1f4 <__assert_fail@plt+0x9ed4>
   1b1dc:	ldr	r3, [fp, #-8]
   1b1e0:	ldr	r3, [r3, #48]	; 0x30
   1b1e4:	ldr	r2, [fp, #-12]
   1b1e8:	mov	r1, r3
   1b1ec:	ldr	r0, [fp, #-16]
   1b1f0:	bl	1b214 <__assert_fail@plt+0x9ef4>
   1b1f4:	ldr	r2, [fp, #-16]
   1b1f8:	ldrb	r3, [r2, #28]
   1b1fc:	orr	r3, r3, #8
   1b200:	strb	r3, [r2, #28]
   1b204:	mov	r3, #0
   1b208:	mov	r0, r3
   1b20c:	sub	sp, fp, #4
   1b210:	pop	{fp, pc}
   1b214:	push	{fp, lr}
   1b218:	add	fp, sp, #4
   1b21c:	sub	sp, sp, #440	; 0x1b8
   1b220:	str	r0, [fp, #-432]	; 0xfffffe50
   1b224:	str	r1, [fp, #-436]	; 0xfffffe4c
   1b228:	str	r2, [fp, #-440]	; 0xfffffe48
   1b22c:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1b230:	ldr	r3, [r3]
   1b234:	str	r3, [fp, #-36]	; 0xffffffdc
   1b238:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b23c:	ldr	r3, [r3, #92]	; 0x5c
   1b240:	cmp	r3, #1
   1b244:	bne	1b264 <__assert_fail@plt+0x9f44>
   1b248:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1b24c:	ldr	r3, [r3, #12]
   1b250:	and	r3, r3, #4194304	; 0x400000
   1b254:	cmp	r3, #0
   1b258:	beq	1b264 <__assert_fail@plt+0x9f44>
   1b25c:	mov	r3, #1
   1b260:	b	1b268 <__assert_fail@plt+0x9f48>
   1b264:	mov	r3, #0
   1b268:	strb	r3, [fp, #-37]	; 0xffffffdb
   1b26c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1b270:	and	r3, r3, #1
   1b274:	strb	r3, [fp, #-37]	; 0xffffffdb
   1b278:	mov	r3, #0
   1b27c:	str	r3, [fp, #-8]
   1b280:	b	1b924 <__assert_fail@plt+0xa604>
   1b284:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   1b288:	ldr	r2, [r3, #12]
   1b28c:	ldr	r3, [fp, #-8]
   1b290:	lsl	r3, r3, #2
   1b294:	add	r3, r2, r3
   1b298:	ldr	r3, [r3]
   1b29c:	str	r3, [fp, #-12]
   1b2a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b2a4:	ldr	r2, [r3]
   1b2a8:	ldr	r3, [fp, #-12]
   1b2ac:	lsl	r3, r3, #3
   1b2b0:	add	r3, r2, r3
   1b2b4:	ldrb	r3, [r3, #4]
   1b2b8:	str	r3, [fp, #-44]	; 0xffffffd4
   1b2bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b2c0:	cmp	r3, #1
   1b2c4:	bne	1b4f8 <__assert_fail@plt+0xa1d8>
   1b2c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b2cc:	ldr	r2, [r3]
   1b2d0:	ldr	r3, [fp, #-12]
   1b2d4:	lsl	r3, r3, #3
   1b2d8:	add	r3, r2, r3
   1b2dc:	ldrb	r3, [r3]
   1b2e0:	mov	r2, r3
   1b2e4:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1b2e8:	str	r3, [fp, #-56]	; 0xffffffc8
   1b2ec:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1b2f0:	strb	r3, [fp, #-57]	; 0xffffffc7
   1b2f4:	str	r2, [fp, #-64]	; 0xffffffc0
   1b2f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b2fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b300:	add	r3, r2, r3
   1b304:	mov	r2, #1
   1b308:	strb	r2, [r3]
   1b30c:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   1b310:	cmp	r3, #0
   1b314:	beq	1b338 <__assert_fail@plt+0xa018>
   1b318:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1b31c:	bl	110b0 <tolower@plt>
   1b320:	mov	r3, r0
   1b324:	mov	r2, r3
   1b328:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b32c:	add	r3, r3, r2
   1b330:	mov	r2, #1
   1b334:	strb	r2, [r3]
   1b338:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1b33c:	ldr	r3, [r3, #12]
   1b340:	and	r3, r3, #4194304	; 0x400000
   1b344:	cmp	r3, #0
   1b348:	beq	1b918 <__assert_fail@plt+0xa5f8>
   1b34c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b350:	ldr	r3, [r3, #92]	; 0x5c
   1b354:	cmp	r3, #1
   1b358:	ble	1b918 <__assert_fail@plt+0xa5f8>
   1b35c:	sub	r3, fp, #140	; 0x8c
   1b360:	str	r3, [fp, #-16]
   1b364:	ldr	r3, [fp, #-16]
   1b368:	add	r2, r3, #1
   1b36c:	str	r2, [fp, #-16]
   1b370:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b374:	ldr	r1, [r2]
   1b378:	ldr	r2, [fp, #-12]
   1b37c:	lsl	r2, r2, #3
   1b380:	add	r2, r1, r2
   1b384:	ldrb	r2, [r2]
   1b388:	strb	r2, [r3]
   1b38c:	b	1b3b8 <__assert_fail@plt+0xa098>
   1b390:	ldr	r3, [fp, #-16]
   1b394:	add	r2, r3, #1
   1b398:	str	r2, [fp, #-16]
   1b39c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b3a0:	ldr	r1, [r2]
   1b3a4:	ldr	r2, [fp, #-12]
   1b3a8:	lsl	r2, r2, #3
   1b3ac:	add	r2, r1, r2
   1b3b0:	ldrb	r2, [r2]
   1b3b4:	strb	r2, [r3]
   1b3b8:	ldr	r3, [fp, #-12]
   1b3bc:	add	r3, r3, #1
   1b3c0:	str	r3, [fp, #-12]
   1b3c4:	ldr	r2, [fp, #-12]
   1b3c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b3cc:	ldr	r3, [r3, #8]
   1b3d0:	cmp	r2, r3
   1b3d4:	bcs	1b420 <__assert_fail@plt+0xa100>
   1b3d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b3dc:	ldr	r2, [r3]
   1b3e0:	ldr	r3, [fp, #-12]
   1b3e4:	lsl	r3, r3, #3
   1b3e8:	add	r3, r2, r3
   1b3ec:	ldrb	r3, [r3, #4]
   1b3f0:	cmp	r3, #1
   1b3f4:	bne	1b420 <__assert_fail@plt+0xa100>
   1b3f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b3fc:	ldr	r2, [r3]
   1b400:	ldr	r3, [fp, #-12]
   1b404:	lsl	r3, r3, #3
   1b408:	add	r3, r2, r3
   1b40c:	ldrb	r3, [r3, #6]
   1b410:	and	r3, r3, #32
   1b414:	uxtb	r3, r3
   1b418:	cmp	r3, #0
   1b41c:	bne	1b390 <__assert_fail@plt+0xa070>
   1b420:	sub	r3, fp, #152	; 0x98
   1b424:	mov	r2, #8
   1b428:	mov	r1, #0
   1b42c:	mov	r0, r3
   1b430:	bl	11248 <memset@plt>
   1b434:	ldr	r2, [fp, #-16]
   1b438:	sub	r3, fp, #140	; 0x8c
   1b43c:	sub	r3, r2, r3
   1b440:	mov	r2, r3
   1b444:	sub	r3, fp, #152	; 0x98
   1b448:	sub	r1, fp, #140	; 0x8c
   1b44c:	sub	r0, fp, #144	; 0x90
   1b450:	bl	31724 <__assert_fail@plt+0x20404>
   1b454:	mov	r1, r0
   1b458:	ldr	r2, [fp, #-16]
   1b45c:	sub	r3, fp, #140	; 0x8c
   1b460:	sub	r3, r2, r3
   1b464:	cmp	r1, r3
   1b468:	bne	1b918 <__assert_fail@plt+0xa5f8>
   1b46c:	ldr	r3, [fp, #-144]	; 0xffffff70
   1b470:	mov	r0, r3
   1b474:	bl	110c8 <towlower@plt>
   1b478:	mov	r1, r0
   1b47c:	sub	r2, fp, #152	; 0x98
   1b480:	sub	r3, fp, #140	; 0x8c
   1b484:	mov	r0, r3
   1b488:	bl	11020 <wcrtomb@plt>
   1b48c:	mov	r3, r0
   1b490:	cmn	r3, #1
   1b494:	beq	1b918 <__assert_fail@plt+0xa5f8>
   1b498:	ldrb	r3, [fp, #-140]	; 0xffffff74
   1b49c:	mov	r2, r3
   1b4a0:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1b4a4:	str	r3, [fp, #-68]	; 0xffffffbc
   1b4a8:	mov	r3, #0
   1b4ac:	strb	r3, [fp, #-69]	; 0xffffffbb
   1b4b0:	str	r2, [fp, #-76]	; 0xffffffb4
   1b4b4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b4b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1b4bc:	add	r3, r2, r3
   1b4c0:	mov	r2, #1
   1b4c4:	strb	r2, [r3]
   1b4c8:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   1b4cc:	cmp	r3, #0
   1b4d0:	beq	1b918 <__assert_fail@plt+0xa5f8>
   1b4d4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1b4d8:	bl	110b0 <tolower@plt>
   1b4dc:	mov	r3, r0
   1b4e0:	mov	r2, r3
   1b4e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b4e8:	add	r3, r3, r2
   1b4ec:	mov	r2, #1
   1b4f0:	strb	r2, [r3]
   1b4f4:	b	1b918 <__assert_fail@plt+0xa5f8>
   1b4f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b4fc:	cmp	r3, #3
   1b500:	bne	1b600 <__assert_fail@plt+0xa2e0>
   1b504:	mov	r3, #0
   1b508:	str	r3, [fp, #-20]	; 0xffffffec
   1b50c:	mov	r3, #0
   1b510:	str	r3, [fp, #-24]	; 0xffffffe8
   1b514:	b	1b5f0 <__assert_fail@plt+0xa2d0>
   1b518:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b51c:	ldr	r2, [r3]
   1b520:	ldr	r3, [fp, #-12]
   1b524:	lsl	r3, r3, #3
   1b528:	add	r3, r2, r3
   1b52c:	ldr	r2, [r3]
   1b530:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b534:	lsl	r3, r3, #2
   1b538:	add	r3, r2, r3
   1b53c:	ldr	r3, [r3]
   1b540:	str	r3, [fp, #-48]	; 0xffffffd0
   1b544:	mov	r3, #0
   1b548:	str	r3, [fp, #-28]	; 0xffffffe4
   1b54c:	b	1b5d8 <__assert_fail@plt+0xa2b8>
   1b550:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b554:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b558:	lsr	r3, r2, r3
   1b55c:	and	r3, r3, #1
   1b560:	cmp	r3, #0
   1b564:	beq	1b5c0 <__assert_fail@plt+0xa2a0>
   1b568:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1b56c:	str	r3, [fp, #-80]	; 0xffffffb0
   1b570:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1b574:	strb	r3, [fp, #-81]	; 0xffffffaf
   1b578:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b57c:	str	r3, [fp, #-88]	; 0xffffffa8
   1b580:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1b584:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b588:	add	r3, r2, r3
   1b58c:	mov	r2, #1
   1b590:	strb	r2, [r3]
   1b594:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   1b598:	cmp	r3, #0
   1b59c:	beq	1b5c0 <__assert_fail@plt+0xa2a0>
   1b5a0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1b5a4:	bl	110b0 <tolower@plt>
   1b5a8:	mov	r3, r0
   1b5ac:	mov	r2, r3
   1b5b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b5b4:	add	r3, r3, r2
   1b5b8:	mov	r2, #1
   1b5bc:	strb	r2, [r3]
   1b5c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5c4:	add	r3, r3, #1
   1b5c8:	str	r3, [fp, #-28]	; 0xffffffe4
   1b5cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b5d0:	add	r3, r3, #1
   1b5d4:	str	r3, [fp, #-24]	; 0xffffffe8
   1b5d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5dc:	cmp	r3, #31
   1b5e0:	ble	1b550 <__assert_fail@plt+0xa230>
   1b5e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5e8:	add	r3, r3, #1
   1b5ec:	str	r3, [fp, #-20]	; 0xffffffec
   1b5f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5f4:	cmp	r3, #7
   1b5f8:	ble	1b518 <__assert_fail@plt+0xa1f8>
   1b5fc:	b	1b918 <__assert_fail@plt+0xa5f8>
   1b600:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b604:	cmp	r3, #6
   1b608:	bne	1b8c4 <__assert_fail@plt+0xa5a4>
   1b60c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b610:	ldr	r2, [r3]
   1b614:	ldr	r3, [fp, #-12]
   1b618:	lsl	r3, r3, #3
   1b61c:	add	r3, r2, r3
   1b620:	ldr	r3, [r3]
   1b624:	str	r3, [fp, #-52]	; 0xffffffcc
   1b628:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b62c:	ldr	r3, [r3, #92]	; 0x5c
   1b630:	cmp	r3, #1
   1b634:	ble	1b728 <__assert_fail@plt+0xa408>
   1b638:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b63c:	ldr	r3, [r3, #36]	; 0x24
   1b640:	cmp	r3, #0
   1b644:	bne	1b670 <__assert_fail@plt+0xa350>
   1b648:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b64c:	ldrb	r3, [r3, #16]
   1b650:	and	r3, r3, #1
   1b654:	uxtb	r3, r3
   1b658:	cmp	r3, #0
   1b65c:	bne	1b670 <__assert_fail@plt+0xa350>
   1b660:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b664:	ldr	r3, [r3, #32]
   1b668:	cmp	r3, #0
   1b66c:	beq	1b728 <__assert_fail@plt+0xa408>
   1b670:	mov	r3, #0
   1b674:	strb	r3, [fp, #-153]	; 0xffffff67
   1b678:	sub	r3, fp, #164	; 0xa4
   1b67c:	mov	r2, #8
   1b680:	mov	r1, #0
   1b684:	mov	r0, r3
   1b688:	bl	11248 <memset@plt>
   1b68c:	sub	r3, fp, #164	; 0xa4
   1b690:	sub	r1, fp, #153	; 0x99
   1b694:	mov	r2, #1
   1b698:	mov	r0, #0
   1b69c:	bl	31724 <__assert_fail@plt+0x20404>
   1b6a0:	mov	r3, r0
   1b6a4:	cmn	r3, #2
   1b6a8:	bne	1b708 <__assert_fail@plt+0xa3e8>
   1b6ac:	ldrb	r3, [fp, #-153]	; 0xffffff67
   1b6b0:	mov	r2, r3
   1b6b4:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1b6b8:	str	r3, [fp, #-92]	; 0xffffffa4
   1b6bc:	mov	r3, #0
   1b6c0:	strb	r3, [fp, #-93]	; 0xffffffa3
   1b6c4:	str	r2, [fp, #-100]	; 0xffffff9c
   1b6c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b6cc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1b6d0:	add	r3, r2, r3
   1b6d4:	mov	r2, #1
   1b6d8:	strb	r2, [r3]
   1b6dc:	ldrb	r3, [fp, #-93]	; 0xffffffa3
   1b6e0:	cmp	r3, #0
   1b6e4:	beq	1b708 <__assert_fail@plt+0xa3e8>
   1b6e8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b6ec:	bl	110b0 <tolower@plt>
   1b6f0:	mov	r3, r0
   1b6f4:	mov	r2, r3
   1b6f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1b6fc:	add	r3, r3, r2
   1b700:	mov	r2, #1
   1b704:	strb	r2, [r3]
   1b708:	ldrb	r3, [fp, #-153]	; 0xffffff67
   1b70c:	add	r3, r3, #1
   1b710:	uxtb	r3, r3
   1b714:	strb	r3, [fp, #-153]	; 0xffffff67
   1b718:	ldrb	r3, [fp, #-153]	; 0xffffff67
   1b71c:	cmp	r3, #0
   1b720:	bne	1b678 <__assert_fail@plt+0xa358>
   1b724:	b	1b918 <__assert_fail@plt+0xa5f8>
   1b728:	mov	r3, #0
   1b72c:	str	r3, [fp, #-32]	; 0xffffffe0
   1b730:	b	1b8ac <__assert_fail@plt+0xa58c>
   1b734:	sub	r3, fp, #172	; 0xac
   1b738:	mov	r2, #8
   1b73c:	mov	r1, #0
   1b740:	mov	r0, r3
   1b744:	bl	11248 <memset@plt>
   1b748:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b74c:	ldr	r2, [r3]
   1b750:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b754:	lsl	r3, r3, #2
   1b758:	add	r3, r2, r3
   1b75c:	ldr	r1, [r3]
   1b760:	sub	r2, fp, #172	; 0xac
   1b764:	sub	r3, fp, #428	; 0x1ac
   1b768:	mov	r0, r3
   1b76c:	bl	11020 <wcrtomb@plt>
   1b770:	mov	r3, r0
   1b774:	cmn	r3, #1
   1b778:	beq	1b7dc <__assert_fail@plt+0xa4bc>
   1b77c:	sub	r3, fp, #428	; 0x1ac
   1b780:	ldrb	r3, [r3]
   1b784:	mov	r2, r3
   1b788:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1b78c:	str	r3, [fp, #-104]	; 0xffffff98
   1b790:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1b794:	strb	r3, [fp, #-105]	; 0xffffff97
   1b798:	str	r2, [fp, #-112]	; 0xffffff90
   1b79c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1b7a0:	ldr	r2, [fp, #-104]	; 0xffffff98
   1b7a4:	add	r3, r2, r3
   1b7a8:	mov	r2, #1
   1b7ac:	strb	r2, [r3]
   1b7b0:	ldrb	r3, [fp, #-105]	; 0xffffff97
   1b7b4:	cmp	r3, #0
   1b7b8:	beq	1b7dc <__assert_fail@plt+0xa4bc>
   1b7bc:	ldr	r0, [fp, #-112]	; 0xffffff90
   1b7c0:	bl	110b0 <tolower@plt>
   1b7c4:	mov	r3, r0
   1b7c8:	mov	r2, r3
   1b7cc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b7d0:	add	r3, r3, r2
   1b7d4:	mov	r2, #1
   1b7d8:	strb	r2, [r3]
   1b7dc:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1b7e0:	ldr	r3, [r3, #12]
   1b7e4:	and	r3, r3, #4194304	; 0x400000
   1b7e8:	cmp	r3, #0
   1b7ec:	beq	1b8a0 <__assert_fail@plt+0xa580>
   1b7f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b7f4:	ldr	r3, [r3, #92]	; 0x5c
   1b7f8:	cmp	r3, #1
   1b7fc:	ble	1b8a0 <__assert_fail@plt+0xa580>
   1b800:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b804:	ldr	r2, [r3]
   1b808:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b80c:	lsl	r3, r3, #2
   1b810:	add	r3, r2, r3
   1b814:	ldr	r3, [r3]
   1b818:	mov	r0, r3
   1b81c:	bl	110c8 <towlower@plt>
   1b820:	mov	r1, r0
   1b824:	sub	r2, fp, #172	; 0xac
   1b828:	sub	r3, fp, #428	; 0x1ac
   1b82c:	mov	r0, r3
   1b830:	bl	11020 <wcrtomb@plt>
   1b834:	mov	r3, r0
   1b838:	cmn	r3, #1
   1b83c:	beq	1b8a0 <__assert_fail@plt+0xa580>
   1b840:	sub	r3, fp, #428	; 0x1ac
   1b844:	ldrb	r3, [r3]
   1b848:	mov	r2, r3
   1b84c:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1b850:	str	r3, [fp, #-116]	; 0xffffff8c
   1b854:	mov	r3, #0
   1b858:	strb	r3, [fp, #-117]	; 0xffffff8b
   1b85c:	str	r2, [fp, #-124]	; 0xffffff84
   1b860:	ldr	r3, [fp, #-124]	; 0xffffff84
   1b864:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1b868:	add	r3, r2, r3
   1b86c:	mov	r2, #1
   1b870:	strb	r2, [r3]
   1b874:	ldrb	r3, [fp, #-117]	; 0xffffff8b
   1b878:	cmp	r3, #0
   1b87c:	beq	1b8a0 <__assert_fail@plt+0xa580>
   1b880:	ldr	r0, [fp, #-124]	; 0xffffff84
   1b884:	bl	110b0 <tolower@plt>
   1b888:	mov	r3, r0
   1b88c:	mov	r2, r3
   1b890:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1b894:	add	r3, r3, r2
   1b898:	mov	r2, #1
   1b89c:	strb	r2, [r3]
   1b8a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b8a4:	add	r3, r3, #1
   1b8a8:	str	r3, [fp, #-32]	; 0xffffffe0
   1b8ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1b8b0:	ldr	r2, [r3, #20]
   1b8b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b8b8:	cmp	r2, r3
   1b8bc:	bgt	1b734 <__assert_fail@plt+0xa414>
   1b8c0:	b	1b918 <__assert_fail@plt+0xa5f8>
   1b8c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b8c8:	cmp	r3, #5
   1b8cc:	beq	1b8e8 <__assert_fail@plt+0xa5c8>
   1b8d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b8d4:	cmp	r3, #7
   1b8d8:	beq	1b8e8 <__assert_fail@plt+0xa5c8>
   1b8dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b8e0:	cmp	r3, #2
   1b8e4:	bne	1b918 <__assert_fail@plt+0xa5f8>
   1b8e8:	mov	r2, #256	; 0x100
   1b8ec:	mov	r1, #1
   1b8f0:	ldr	r0, [fp, #-440]	; 0xfffffe48
   1b8f4:	bl	11248 <memset@plt>
   1b8f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b8fc:	cmp	r3, #2
   1b900:	bne	1b93c <__assert_fail@plt+0xa61c>
   1b904:	ldr	r2, [fp, #-432]	; 0xfffffe50
   1b908:	ldrb	r3, [r2, #28]
   1b90c:	orr	r3, r3, #1
   1b910:	strb	r3, [r2, #28]
   1b914:	b	1b93c <__assert_fail@plt+0xa61c>
   1b918:	ldr	r3, [fp, #-8]
   1b91c:	add	r3, r3, #1
   1b920:	str	r3, [fp, #-8]
   1b924:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   1b928:	ldr	r2, [r3, #8]
   1b92c:	ldr	r3, [fp, #-8]
   1b930:	cmp	r2, r3
   1b934:	bgt	1b284 <__assert_fail@plt+0x9f64>
   1b938:	b	1b940 <__assert_fail@plt+0xa620>
   1b93c:	nop			; (mov r0, r0)
   1b940:	sub	sp, fp, #4
   1b944:	pop	{fp, pc}
   1b948:	push	{fp, lr}
   1b94c:	add	fp, sp, #4
   1b950:	sub	sp, sp, #24
   1b954:	str	r0, [fp, #-16]
   1b958:	str	r1, [fp, #-20]	; 0xffffffec
   1b95c:	str	r2, [fp, #-24]	; 0xffffffe8
   1b960:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b964:	and	r3, r3, #1
   1b968:	cmp	r3, #0
   1b96c:	beq	1b978 <__assert_fail@plt+0xa658>
   1b970:	ldr	r3, [pc, #428]	; 1bb24 <__assert_fail@plt+0xa804>
   1b974:	b	1b97c <__assert_fail@plt+0xa65c>
   1b978:	ldr	r3, [pc, #424]	; 1bb28 <__assert_fail@plt+0xa808>
   1b97c:	str	r3, [fp, #-12]
   1b980:	ldr	r3, [fp, #-16]
   1b984:	mov	r2, #0
   1b988:	str	r2, [r3]
   1b98c:	ldr	r3, [fp, #-16]
   1b990:	mov	r2, #0
   1b994:	str	r2, [r3, #4]
   1b998:	ldr	r3, [fp, #-16]
   1b99c:	mov	r2, #0
   1b9a0:	str	r2, [r3, #8]
   1b9a4:	mov	r0, #256	; 0x100
   1b9a8:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   1b9ac:	mov	r3, r0
   1b9b0:	mov	r2, r3
   1b9b4:	ldr	r3, [fp, #-16]
   1b9b8:	str	r2, [r3, #16]
   1b9bc:	ldr	r3, [fp, #-16]
   1b9c0:	ldr	r3, [r3, #16]
   1b9c4:	cmp	r3, #0
   1b9c8:	moveq	r3, #1
   1b9cc:	movne	r3, #0
   1b9d0:	uxtb	r3, r3
   1b9d4:	cmp	r3, #0
   1b9d8:	beq	1b9e4 <__assert_fail@plt+0xa6c4>
   1b9dc:	mov	r3, #12
   1b9e0:	b	1bb18 <__assert_fail@plt+0xa7f8>
   1b9e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b9e8:	and	r3, r3, #2
   1b9ec:	cmp	r3, #0
   1b9f0:	beq	1b9fc <__assert_fail@plt+0xa6dc>
   1b9f4:	mov	r3, #4194304	; 0x400000
   1b9f8:	b	1ba00 <__assert_fail@plt+0xa6e0>
   1b9fc:	mov	r3, #0
   1ba00:	ldr	r2, [fp, #-12]
   1ba04:	orr	r3, r2, r3
   1ba08:	str	r3, [fp, #-12]
   1ba0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba10:	and	r3, r3, #4
   1ba14:	cmp	r3, #0
   1ba18:	beq	1ba48 <__assert_fail@plt+0xa728>
   1ba1c:	ldr	r3, [fp, #-12]
   1ba20:	bic	r3, r3, #64	; 0x40
   1ba24:	str	r3, [fp, #-12]
   1ba28:	ldr	r3, [fp, #-12]
   1ba2c:	orr	r3, r3, #256	; 0x100
   1ba30:	str	r3, [fp, #-12]
   1ba34:	ldr	r2, [fp, #-16]
   1ba38:	ldrb	r3, [r2, #28]
   1ba3c:	orr	r3, r3, #128	; 0x80
   1ba40:	strb	r3, [r2, #28]
   1ba44:	b	1ba58 <__assert_fail@plt+0xa738>
   1ba48:	ldr	r2, [fp, #-16]
   1ba4c:	ldrb	r3, [r2, #28]
   1ba50:	bic	r3, r3, #128	; 0x80
   1ba54:	strb	r3, [r2, #28]
   1ba58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba5c:	and	r3, r3, #8
   1ba60:	cmp	r3, #0
   1ba64:	movne	r3, #1
   1ba68:	moveq	r3, #0
   1ba6c:	uxtb	r3, r3
   1ba70:	ldr	r1, [fp, #-16]
   1ba74:	ldrb	r2, [r1, #28]
   1ba78:	and	r3, r3, #1
   1ba7c:	bic	r2, r2, #16
   1ba80:	lsl	r3, r3, #4
   1ba84:	orr	r3, r3, r2
   1ba88:	mov	r2, r3
   1ba8c:	strb	r2, [r1, #28]
   1ba90:	ldr	r3, [fp, #-16]
   1ba94:	mov	r2, #0
   1ba98:	str	r2, [r3, #20]
   1ba9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1baa0:	bl	11200 <strlen@plt>
   1baa4:	mov	r2, r0
   1baa8:	ldr	r3, [fp, #-12]
   1baac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bab0:	ldr	r0, [fp, #-16]
   1bab4:	bl	1bfc8 <__assert_fail@plt+0xaca8>
   1bab8:	str	r0, [fp, #-8]
   1babc:	ldr	r3, [fp, #-8]
   1bac0:	cmp	r3, #16
   1bac4:	bne	1bad0 <__assert_fail@plt+0xa7b0>
   1bac8:	mov	r3, #8
   1bacc:	str	r3, [fp, #-8]
   1bad0:	ldr	r3, [fp, #-8]
   1bad4:	cmp	r3, #0
   1bad8:	moveq	r3, #1
   1badc:	movne	r3, #0
   1bae0:	uxtb	r3, r3
   1bae4:	cmp	r3, #0
   1bae8:	beq	1baf8 <__assert_fail@plt+0xa7d8>
   1baec:	ldr	r0, [fp, #-16]
   1baf0:	bl	1b114 <__assert_fail@plt+0x9df4>
   1baf4:	b	1bb14 <__assert_fail@plt+0xa7f4>
   1baf8:	ldr	r3, [fp, #-16]
   1bafc:	ldr	r3, [r3, #16]
   1bb00:	mov	r0, r3
   1bb04:	bl	31500 <__assert_fail@plt+0x201e0>
   1bb08:	ldr	r3, [fp, #-16]
   1bb0c:	mov	r2, #0
   1bb10:	str	r2, [r3, #16]
   1bb14:	ldr	r3, [fp, #-8]
   1bb18:	mov	r0, r3
   1bb1c:	sub	sp, fp, #4
   1bb20:	pop	{fp, pc}
   1bb24:	strdeq	fp, [r3], -ip
   1bb28:	smlabteq	r1, r6, r2, r0
   1bb2c:	push	{fp, lr}
   1bb30:	add	fp, sp, #4
   1bb34:	sub	sp, sp, #32
   1bb38:	str	r0, [fp, #-24]	; 0xffffffe8
   1bb3c:	str	r1, [fp, #-28]	; 0xffffffe4
   1bb40:	str	r2, [fp, #-32]	; 0xffffffe0
   1bb44:	str	r3, [fp, #-36]	; 0xffffffdc
   1bb48:	mov	r3, #17
   1bb4c:	str	r3, [fp, #-12]
   1bb50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb54:	lsr	r3, r3, #31
   1bb58:	uxtb	r3, r3
   1bb5c:	cmp	r3, #0
   1bb60:	bne	1bb84 <__assert_fail@plt+0xa864>
   1bb64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bb68:	ldr	r3, [fp, #-12]
   1bb6c:	cmp	r2, r3
   1bb70:	movge	r3, #1
   1bb74:	movlt	r3, #0
   1bb78:	uxtb	r3, r3
   1bb7c:	cmp	r3, #0
   1bb80:	beq	1bb88 <__assert_fail@plt+0xa868>
   1bb84:	bl	112fc <abort@plt>
   1bb88:	ldr	r2, [pc, #176]	; 1bc40 <__assert_fail@plt+0xa920>
   1bb8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb90:	ldr	r3, [r2, r3, lsl #2]
   1bb94:	ldr	r2, [pc, #168]	; 1bc44 <__assert_fail@plt+0xa924>
   1bb98:	add	r3, r3, r2
   1bb9c:	mov	r0, r3
   1bba0:	bl	111f4 <gettext@plt>
   1bba4:	str	r0, [fp, #-16]
   1bba8:	ldr	r0, [fp, #-16]
   1bbac:	bl	11200 <strlen@plt>
   1bbb0:	mov	r3, r0
   1bbb4:	add	r3, r3, #1
   1bbb8:	str	r3, [fp, #-20]	; 0xffffffec
   1bbbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bbc0:	cmp	r3, #0
   1bbc4:	movne	r3, #1
   1bbc8:	moveq	r3, #0
   1bbcc:	uxtb	r3, r3
   1bbd0:	cmp	r3, #0
   1bbd4:	beq	1bc30 <__assert_fail@plt+0xa910>
   1bbd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bbdc:	str	r3, [fp, #-8]
   1bbe0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bbe4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bbe8:	cmp	r2, r3
   1bbec:	movhi	r3, #1
   1bbf0:	movls	r3, #0
   1bbf4:	uxtb	r3, r3
   1bbf8:	cmp	r3, #0
   1bbfc:	beq	1bc20 <__assert_fail@plt+0xa900>
   1bc00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bc04:	sub	r3, r3, #1
   1bc08:	str	r3, [fp, #-8]
   1bc0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bc10:	ldr	r3, [fp, #-8]
   1bc14:	add	r3, r2, r3
   1bc18:	mov	r2, #0
   1bc1c:	strb	r2, [r3]
   1bc20:	ldr	r2, [fp, #-8]
   1bc24:	ldr	r1, [fp, #-16]
   1bc28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bc2c:	bl	110a4 <memcpy@plt>
   1bc30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bc34:	mov	r0, r3
   1bc38:	sub	sp, fp, #4
   1bc3c:	pop	{fp, pc}
   1bc40:			; <UNDEFINED> instruction: 0x000335b4
   1bc44:	andeq	r3, r3, r4, lsr r4
   1bc48:	push	{fp, lr}
   1bc4c:	add	fp, sp, #4
   1bc50:	sub	sp, sp, #24
   1bc54:	str	r0, [fp, #-24]	; 0xffffffe8
   1bc58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bc5c:	ldr	r3, [r3]
   1bc60:	cmp	r3, #0
   1bc64:	beq	1bcb0 <__assert_fail@plt+0xa990>
   1bc68:	mov	r3, #0
   1bc6c:	str	r3, [fp, #-8]
   1bc70:	b	1bc9c <__assert_fail@plt+0xa97c>
   1bc74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bc78:	ldr	r2, [r3]
   1bc7c:	ldr	r3, [fp, #-8]
   1bc80:	lsl	r3, r3, #3
   1bc84:	add	r3, r2, r3
   1bc88:	mov	r0, r3
   1bc8c:	bl	23f0c <__assert_fail@plt+0x12bec>
   1bc90:	ldr	r3, [fp, #-8]
   1bc94:	add	r3, r3, #1
   1bc98:	str	r3, [fp, #-8]
   1bc9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bca0:	ldr	r2, [r3, #8]
   1bca4:	ldr	r3, [fp, #-8]
   1bca8:	cmp	r2, r3
   1bcac:	bhi	1bc74 <__assert_fail@plt+0xa954>
   1bcb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bcb4:	ldr	r3, [r3, #12]
   1bcb8:	mov	r0, r3
   1bcbc:	bl	31500 <__assert_fail@plt+0x201e0>
   1bcc0:	mov	r3, #0
   1bcc4:	str	r3, [fp, #-8]
   1bcc8:	b	1bd8c <__assert_fail@plt+0xaa6c>
   1bccc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bcd0:	ldr	r3, [r3, #24]
   1bcd4:	cmp	r3, #0
   1bcd8:	beq	1bd08 <__assert_fail@plt+0xa9e8>
   1bcdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bce0:	ldr	r1, [r3, #24]
   1bce4:	ldr	r2, [fp, #-8]
   1bce8:	mov	r3, r2
   1bcec:	lsl	r3, r3, #1
   1bcf0:	add	r3, r3, r2
   1bcf4:	lsl	r3, r3, #2
   1bcf8:	add	r3, r1, r3
   1bcfc:	ldr	r3, [r3, #8]
   1bd00:	mov	r0, r3
   1bd04:	bl	31500 <__assert_fail@plt+0x201e0>
   1bd08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd0c:	ldr	r3, [r3, #28]
   1bd10:	cmp	r3, #0
   1bd14:	beq	1bd44 <__assert_fail@plt+0xaa24>
   1bd18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd1c:	ldr	r1, [r3, #28]
   1bd20:	ldr	r2, [fp, #-8]
   1bd24:	mov	r3, r2
   1bd28:	lsl	r3, r3, #1
   1bd2c:	add	r3, r3, r2
   1bd30:	lsl	r3, r3, #2
   1bd34:	add	r3, r1, r3
   1bd38:	ldr	r3, [r3, #8]
   1bd3c:	mov	r0, r3
   1bd40:	bl	31500 <__assert_fail@plt+0x201e0>
   1bd44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd48:	ldr	r3, [r3, #20]
   1bd4c:	cmp	r3, #0
   1bd50:	beq	1bd80 <__assert_fail@plt+0xaa60>
   1bd54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd58:	ldr	r1, [r3, #20]
   1bd5c:	ldr	r2, [fp, #-8]
   1bd60:	mov	r3, r2
   1bd64:	lsl	r3, r3, #1
   1bd68:	add	r3, r3, r2
   1bd6c:	lsl	r3, r3, #2
   1bd70:	add	r3, r1, r3
   1bd74:	ldr	r3, [r3, #8]
   1bd78:	mov	r0, r3
   1bd7c:	bl	31500 <__assert_fail@plt+0x201e0>
   1bd80:	ldr	r3, [fp, #-8]
   1bd84:	add	r3, r3, #1
   1bd88:	str	r3, [fp, #-8]
   1bd8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd90:	ldr	r2, [r3, #8]
   1bd94:	ldr	r3, [fp, #-8]
   1bd98:	cmp	r2, r3
   1bd9c:	bhi	1bccc <__assert_fail@plt+0xa9ac>
   1bda0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bda4:	ldr	r3, [r3, #20]
   1bda8:	mov	r0, r3
   1bdac:	bl	31500 <__assert_fail@plt+0x201e0>
   1bdb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bdb4:	ldr	r3, [r3, #24]
   1bdb8:	mov	r0, r3
   1bdbc:	bl	31500 <__assert_fail@plt+0x201e0>
   1bdc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bdc4:	ldr	r3, [r3, #28]
   1bdc8:	mov	r0, r3
   1bdcc:	bl	31500 <__assert_fail@plt+0x201e0>
   1bdd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bdd4:	ldr	r3, [r3]
   1bdd8:	mov	r0, r3
   1bddc:	bl	31500 <__assert_fail@plt+0x201e0>
   1bde0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bde4:	ldr	r3, [r3, #32]
   1bde8:	cmp	r3, #0
   1bdec:	beq	1bea0 <__assert_fail@plt+0xab80>
   1bdf0:	mov	r3, #0
   1bdf4:	str	r3, [fp, #-8]
   1bdf8:	b	1be8c <__assert_fail@plt+0xab6c>
   1bdfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1be00:	ldr	r1, [r3, #32]
   1be04:	ldr	r2, [fp, #-8]
   1be08:	mov	r3, r2
   1be0c:	lsl	r3, r3, #1
   1be10:	add	r3, r3, r2
   1be14:	lsl	r3, r3, #2
   1be18:	add	r3, r1, r3
   1be1c:	str	r3, [fp, #-16]
   1be20:	mov	r3, #0
   1be24:	str	r3, [fp, #-12]
   1be28:	b	1be5c <__assert_fail@plt+0xab3c>
   1be2c:	ldr	r3, [fp, #-16]
   1be30:	ldr	r2, [r3, #8]
   1be34:	ldr	r3, [fp, #-12]
   1be38:	lsl	r3, r3, #2
   1be3c:	add	r3, r2, r3
   1be40:	ldr	r3, [r3]
   1be44:	str	r3, [fp, #-20]	; 0xffffffec
   1be48:	ldr	r0, [fp, #-20]	; 0xffffffec
   1be4c:	bl	1a95c <__assert_fail@plt+0x963c>
   1be50:	ldr	r3, [fp, #-12]
   1be54:	add	r3, r3, #1
   1be58:	str	r3, [fp, #-12]
   1be5c:	ldr	r3, [fp, #-16]
   1be60:	ldr	r2, [r3]
   1be64:	ldr	r3, [fp, #-12]
   1be68:	cmp	r2, r3
   1be6c:	bgt	1be2c <__assert_fail@plt+0xab0c>
   1be70:	ldr	r3, [fp, #-16]
   1be74:	ldr	r3, [r3, #8]
   1be78:	mov	r0, r3
   1be7c:	bl	31500 <__assert_fail@plt+0x201e0>
   1be80:	ldr	r3, [fp, #-8]
   1be84:	add	r3, r3, #1
   1be88:	str	r3, [fp, #-8]
   1be8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1be90:	ldr	r2, [r3, #68]	; 0x44
   1be94:	ldr	r3, [fp, #-8]
   1be98:	cmp	r2, r3
   1be9c:	bcs	1bdfc <__assert_fail@plt+0xaadc>
   1bea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bea4:	ldr	r3, [r3, #32]
   1bea8:	mov	r0, r3
   1beac:	bl	31500 <__assert_fail@plt+0x201e0>
   1beb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1beb4:	ldr	r3, [r3, #60]	; 0x3c
   1beb8:	ldr	r2, [pc, #56]	; 1bef8 <__assert_fail@plt+0xabd8>
   1bebc:	cmp	r3, r2
   1bec0:	beq	1bed4 <__assert_fail@plt+0xabb4>
   1bec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bec8:	ldr	r3, [r3, #60]	; 0x3c
   1becc:	mov	r0, r3
   1bed0:	bl	31500 <__assert_fail@plt+0x201e0>
   1bed4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bed8:	ldr	r3, [r3, #132]	; 0x84
   1bedc:	mov	r0, r3
   1bee0:	bl	31500 <__assert_fail@plt+0x201e0>
   1bee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bee8:	bl	31500 <__assert_fail@plt+0x201e0>
   1beec:	nop			; (mov r0, r0)
   1bef0:	sub	sp, fp, #4
   1bef4:	pop	{fp, pc}
   1bef8:	strdeq	r3, [r3], -r8
   1befc:	push	{fp, lr}
   1bf00:	add	fp, sp, #4
   1bf04:	sub	sp, sp, #16
   1bf08:	str	r0, [fp, #-16]
   1bf0c:	ldr	r3, [fp, #-16]
   1bf10:	ldr	r3, [r3]
   1bf14:	str	r3, [fp, #-8]
   1bf18:	ldr	r3, [fp, #-8]
   1bf1c:	cmp	r3, #0
   1bf20:	movne	r3, #1
   1bf24:	moveq	r3, #0
   1bf28:	uxtb	r3, r3
   1bf2c:	cmp	r3, #0
   1bf30:	beq	1bf64 <__assert_fail@plt+0xac44>
   1bf34:	ldr	r3, [pc, #132]	; 1bfc0 <__assert_fail@plt+0xaca0>
   1bf38:	cmp	r3, #0
   1bf3c:	bne	1bf4c <__assert_fail@plt+0xac2c>
   1bf40:	ldr	r3, [pc, #124]	; 1bfc4 <__assert_fail@plt+0xaca4>
   1bf44:	cmp	r3, #0
   1bf48:	beq	1bf5c <__assert_fail@plt+0xac3c>
   1bf4c:	ldr	r3, [fp, #-8]
   1bf50:	add	r3, r3, #136	; 0x88
   1bf54:	mov	r0, r3
   1bf58:	bl	1105c <pthread_mutex_destroy@plt>
   1bf5c:	ldr	r0, [fp, #-8]
   1bf60:	bl	1bc48 <__assert_fail@plt+0xa928>
   1bf64:	ldr	r3, [fp, #-16]
   1bf68:	mov	r2, #0
   1bf6c:	str	r2, [r3]
   1bf70:	ldr	r3, [fp, #-16]
   1bf74:	mov	r2, #0
   1bf78:	str	r2, [r3, #4]
   1bf7c:	ldr	r3, [fp, #-16]
   1bf80:	ldr	r3, [r3, #16]
   1bf84:	mov	r0, r3
   1bf88:	bl	31500 <__assert_fail@plt+0x201e0>
   1bf8c:	ldr	r3, [fp, #-16]
   1bf90:	mov	r2, #0
   1bf94:	str	r2, [r3, #16]
   1bf98:	ldr	r3, [fp, #-16]
   1bf9c:	ldr	r3, [r3, #20]
   1bfa0:	mov	r0, r3
   1bfa4:	bl	31500 <__assert_fail@plt+0x201e0>
   1bfa8:	ldr	r3, [fp, #-16]
   1bfac:	mov	r2, #0
   1bfb0:	str	r2, [r3, #20]
   1bfb4:	nop			; (mov r0, r0)
   1bfb8:	sub	sp, fp, #4
   1bfbc:	pop	{fp, pc}
	...
   1bfc8:	push	{fp, lr}
   1bfcc:	add	fp, sp, #4
   1bfd0:	sub	sp, sp, #120	; 0x78
   1bfd4:	str	r0, [fp, #-104]	; 0xffffff98
   1bfd8:	str	r1, [fp, #-108]	; 0xffffff94
   1bfdc:	str	r2, [fp, #-112]	; 0xffffff90
   1bfe0:	str	r3, [fp, #-116]	; 0xffffff8c
   1bfe4:	mov	r3, #0
   1bfe8:	str	r3, [fp, #-12]
   1bfec:	ldr	r2, [fp, #-104]	; 0xffffff98
   1bff0:	ldrb	r3, [r2, #28]
   1bff4:	bic	r3, r3, #8
   1bff8:	strb	r3, [r2, #28]
   1bffc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c000:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1c004:	str	r2, [r3, #12]
   1c008:	ldr	r2, [fp, #-104]	; 0xffffff98
   1c00c:	ldrb	r3, [r2, #28]
   1c010:	bic	r3, r3, #64	; 0x40
   1c014:	strb	r3, [r2, #28]
   1c018:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c01c:	ldrb	r3, [r3, #28]
   1c020:	lsr	r3, r3, #6
   1c024:	and	r3, r3, #1
   1c028:	uxtb	r3, r3
   1c02c:	ldr	r1, [fp, #-104]	; 0xffffff98
   1c030:	ldrb	r2, [r1, #28]
   1c034:	and	r3, r3, #1
   1c038:	bic	r2, r2, #32
   1c03c:	lsl	r3, r3, #5
   1c040:	orr	r3, r3, r2
   1c044:	mov	r2, r3
   1c048:	strb	r2, [r1, #28]
   1c04c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c050:	mov	r2, #0
   1c054:	str	r2, [r3, #8]
   1c058:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c05c:	mov	r2, #0
   1c060:	str	r2, [r3, #24]
   1c064:	ldr	r2, [fp, #-104]	; 0xffffff98
   1c068:	ldrb	r3, [r2, #28]
   1c06c:	bic	r3, r3, #1
   1c070:	strb	r3, [r2, #28]
   1c074:	ldr	r2, [fp, #-104]	; 0xffffff98
   1c078:	ldrb	r3, [r2, #28]
   1c07c:	bic	r3, r3, #6
   1c080:	strb	r3, [r2, #28]
   1c084:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c088:	ldr	r3, [r3]
   1c08c:	str	r3, [fp, #-8]
   1c090:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c094:	ldr	r3, [r3, #4]
   1c098:	cmp	r3, #159	; 0x9f
   1c09c:	movls	r3, #1
   1c0a0:	movhi	r3, #0
   1c0a4:	uxtb	r3, r3
   1c0a8:	cmp	r3, #0
   1c0ac:	beq	1c0f4 <__assert_fail@plt+0xadd4>
   1c0b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c0b4:	ldr	r3, [r3]
   1c0b8:	mov	r1, #160	; 0xa0
   1c0bc:	mov	r0, r3
   1c0c0:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   1c0c4:	str	r0, [fp, #-8]
   1c0c8:	ldr	r3, [fp, #-8]
   1c0cc:	cmp	r3, #0
   1c0d0:	bne	1c0dc <__assert_fail@plt+0xadbc>
   1c0d4:	mov	r3, #12
   1c0d8:	b	1c40c <__assert_fail@plt+0xb0ec>
   1c0dc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c0e0:	mov	r2, #160	; 0xa0
   1c0e4:	str	r2, [r3, #4]
   1c0e8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c0ec:	ldr	r2, [fp, #-8]
   1c0f0:	str	r2, [r3]
   1c0f4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c0f8:	mov	r2, #160	; 0xa0
   1c0fc:	str	r2, [r3, #8]
   1c100:	ldr	r1, [fp, #-112]	; 0xffffff90
   1c104:	ldr	r0, [fp, #-8]
   1c108:	bl	1c420 <__assert_fail@plt+0xb100>
   1c10c:	mov	r3, r0
   1c110:	str	r3, [fp, #-12]
   1c114:	ldr	r3, [fp, #-12]
   1c118:	cmp	r3, #0
   1c11c:	moveq	r3, #1
   1c120:	movne	r3, #0
   1c124:	uxtb	r3, r3
   1c128:	cmp	r3, #0
   1c12c:	beq	1c1a8 <__assert_fail@plt+0xae88>
   1c130:	ldr	r3, [pc, #736]	; 1c418 <__assert_fail@plt+0xb0f8>
   1c134:	cmp	r3, #0
   1c138:	bne	1c148 <__assert_fail@plt+0xae28>
   1c13c:	ldr	r3, [pc, #728]	; 1c41c <__assert_fail@plt+0xb0fc>
   1c140:	cmp	r3, #0
   1c144:	beq	1c150 <__assert_fail@plt+0xae30>
   1c148:	mov	r3, #1
   1c14c:	b	1c154 <__assert_fail@plt+0xae34>
   1c150:	mov	r3, #0
   1c154:	cmp	r3, #0
   1c158:	beq	1c194 <__assert_fail@plt+0xae74>
   1c15c:	ldr	r3, [fp, #-8]
   1c160:	add	r3, r3, #136	; 0x88
   1c164:	mov	r1, #0
   1c168:	mov	r0, r3
   1c16c:	bl	110bc <pthread_mutex_init@plt>
   1c170:	mov	r3, r0
   1c174:	cmp	r3, #0
   1c178:	movne	r3, #1
   1c17c:	moveq	r3, #0
   1c180:	uxtb	r3, r3
   1c184:	cmp	r3, #0
   1c188:	beq	1c194 <__assert_fail@plt+0xae74>
   1c18c:	mov	r3, #1
   1c190:	b	1c198 <__assert_fail@plt+0xae78>
   1c194:	mov	r3, #0
   1c198:	cmp	r3, #0
   1c19c:	beq	1c1a8 <__assert_fail@plt+0xae88>
   1c1a0:	mov	r3, #12
   1c1a4:	str	r3, [fp, #-12]
   1c1a8:	ldr	r3, [fp, #-12]
   1c1ac:	cmp	r3, #0
   1c1b0:	movne	r3, #1
   1c1b4:	moveq	r3, #0
   1c1b8:	uxtb	r3, r3
   1c1bc:	cmp	r3, #0
   1c1c0:	beq	1c1ec <__assert_fail@plt+0xaecc>
   1c1c4:	ldr	r0, [fp, #-8]
   1c1c8:	bl	1bc48 <__assert_fail@plt+0xa928>
   1c1cc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c1d0:	mov	r2, #0
   1c1d4:	str	r2, [r3]
   1c1d8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c1dc:	mov	r2, #0
   1c1e0:	str	r2, [r3, #4]
   1c1e4:	ldr	r3, [fp, #-12]
   1c1e8:	b	1c40c <__assert_fail@plt+0xb0ec>
   1c1ec:	ldr	r1, [fp, #-112]	; 0xffffff90
   1c1f0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c1f4:	ldr	ip, [r3, #20]
   1c1f8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1c1fc:	and	r3, r3, #4194304	; 0x400000
   1c200:	cmp	r3, #0
   1c204:	movne	r3, #1
   1c208:	moveq	r3, #0
   1c20c:	uxtb	r3, r3
   1c210:	sub	r0, fp, #96	; 0x60
   1c214:	ldr	r2, [fp, #-8]
   1c218:	str	r2, [sp, #4]
   1c21c:	str	r3, [sp]
   1c220:	mov	r3, ip
   1c224:	mov	r2, r1
   1c228:	ldr	r1, [fp, #-108]	; 0xffffff94
   1c22c:	bl	16198 <__assert_fail@plt+0x4e78>
   1c230:	mov	r3, r0
   1c234:	str	r3, [fp, #-12]
   1c238:	ldr	r3, [fp, #-12]
   1c23c:	cmp	r3, #0
   1c240:	movne	r3, #1
   1c244:	moveq	r3, #0
   1c248:	uxtb	r3, r3
   1c24c:	cmp	r3, #0
   1c250:	beq	1c2c8 <__assert_fail@plt+0xafa8>
   1c254:	b	1c264 <__assert_fail@plt+0xaf44>
   1c258:	nop			; (mov r0, r0)
   1c25c:	b	1c264 <__assert_fail@plt+0xaf44>
   1c260:	nop			; (mov r0, r0)
   1c264:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c268:	bl	1ca3c <__assert_fail@plt+0xb71c>
   1c26c:	sub	r3, fp, #96	; 0x60
   1c270:	mov	r0, r3
   1c274:	bl	18854 <__assert_fail@plt+0x7534>
   1c278:	ldr	r3, [pc, #408]	; 1c418 <__assert_fail@plt+0xb0f8>
   1c27c:	cmp	r3, #0
   1c280:	bne	1c290 <__assert_fail@plt+0xaf70>
   1c284:	ldr	r3, [pc, #400]	; 1c41c <__assert_fail@plt+0xb0fc>
   1c288:	cmp	r3, #0
   1c28c:	beq	1c2a0 <__assert_fail@plt+0xaf80>
   1c290:	ldr	r3, [fp, #-8]
   1c294:	add	r3, r3, #136	; 0x88
   1c298:	mov	r0, r3
   1c29c:	bl	1105c <pthread_mutex_destroy@plt>
   1c2a0:	ldr	r0, [fp, #-8]
   1c2a4:	bl	1bc48 <__assert_fail@plt+0xa928>
   1c2a8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c2ac:	mov	r2, #0
   1c2b0:	str	r2, [r3]
   1c2b4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c2b8:	mov	r2, #0
   1c2bc:	str	r2, [r3, #4]
   1c2c0:	ldr	r3, [fp, #-12]
   1c2c4:	b	1c40c <__assert_fail@plt+0xb0ec>
   1c2c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c2cc:	mov	r2, #0
   1c2d0:	str	r2, [r3, #24]
   1c2d4:	sub	r3, fp, #12
   1c2d8:	sub	r0, fp, #96	; 0x60
   1c2dc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1c2e0:	ldr	r1, [fp, #-104]	; 0xffffff98
   1c2e4:	bl	20124 <__assert_fail@plt+0xee04>
   1c2e8:	mov	r2, r0
   1c2ec:	ldr	r3, [fp, #-8]
   1c2f0:	str	r2, [r3, #52]	; 0x34
   1c2f4:	ldr	r3, [fp, #-8]
   1c2f8:	ldr	r3, [r3, #52]	; 0x34
   1c2fc:	cmp	r3, #0
   1c300:	moveq	r3, #1
   1c304:	movne	r3, #0
   1c308:	uxtb	r3, r3
   1c30c:	cmp	r3, #0
   1c310:	bne	1c258 <__assert_fail@plt+0xaf38>
   1c314:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c318:	bl	1d1e0 <__assert_fail@plt+0xbec0>
   1c31c:	mov	r3, r0
   1c320:	str	r3, [fp, #-12]
   1c324:	ldr	r3, [fp, #-12]
   1c328:	cmp	r3, #0
   1c32c:	movne	r3, #1
   1c330:	moveq	r3, #0
   1c334:	uxtb	r3, r3
   1c338:	cmp	r3, #0
   1c33c:	bne	1c260 <__assert_fail@plt+0xaf40>
   1c340:	ldr	r3, [fp, #-8]
   1c344:	ldrb	r3, [r3, #88]	; 0x58
   1c348:	and	r3, r3, #4
   1c34c:	uxtb	r3, r3
   1c350:	cmp	r3, #0
   1c354:	beq	1c380 <__assert_fail@plt+0xb060>
   1c358:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1c35c:	and	r3, r3, #4194304	; 0x400000
   1c360:	cmp	r3, #0
   1c364:	bne	1c380 <__assert_fail@plt+0xb060>
   1c368:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c36c:	ldr	r3, [r3, #20]
   1c370:	cmp	r3, #0
   1c374:	bne	1c380 <__assert_fail@plt+0xb060>
   1c378:	ldr	r0, [fp, #-8]
   1c37c:	bl	1cec0 <__assert_fail@plt+0xbba0>
   1c380:	ldr	r0, [fp, #-8]
   1c384:	bl	1cadc <__assert_fail@plt+0xb7bc>
   1c388:	mov	r3, r0
   1c38c:	str	r3, [fp, #-12]
   1c390:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c394:	bl	1ca3c <__assert_fail@plt+0xb71c>
   1c398:	sub	r3, fp, #96	; 0x60
   1c39c:	mov	r0, r3
   1c3a0:	bl	18854 <__assert_fail@plt+0x7534>
   1c3a4:	ldr	r3, [fp, #-12]
   1c3a8:	cmp	r3, #0
   1c3ac:	movne	r3, #1
   1c3b0:	moveq	r3, #0
   1c3b4:	uxtb	r3, r3
   1c3b8:	cmp	r3, #0
   1c3bc:	beq	1c408 <__assert_fail@plt+0xb0e8>
   1c3c0:	ldr	r3, [pc, #80]	; 1c418 <__assert_fail@plt+0xb0f8>
   1c3c4:	cmp	r3, #0
   1c3c8:	bne	1c3d8 <__assert_fail@plt+0xb0b8>
   1c3cc:	ldr	r3, [pc, #72]	; 1c41c <__assert_fail@plt+0xb0fc>
   1c3d0:	cmp	r3, #0
   1c3d4:	beq	1c3e8 <__assert_fail@plt+0xb0c8>
   1c3d8:	ldr	r3, [fp, #-8]
   1c3dc:	add	r3, r3, #136	; 0x88
   1c3e0:	mov	r0, r3
   1c3e4:	bl	1105c <pthread_mutex_destroy@plt>
   1c3e8:	ldr	r0, [fp, #-8]
   1c3ec:	bl	1bc48 <__assert_fail@plt+0xa928>
   1c3f0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c3f4:	mov	r2, #0
   1c3f8:	str	r2, [r3]
   1c3fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c400:	mov	r2, #0
   1c404:	str	r2, [r3, #4]
   1c408:	ldr	r3, [fp, #-12]
   1c40c:	mov	r0, r3
   1c410:	sub	sp, fp, #4
   1c414:	pop	{fp, pc}
	...
   1c420:	push	{fp, lr}
   1c424:	add	fp, sp, #4
   1c428:	sub	sp, sp, #40	; 0x28
   1c42c:	str	r0, [fp, #-40]	; 0xffffffd8
   1c430:	str	r1, [fp, #-44]	; 0xffffffd4
   1c434:	mov	r3, #4
   1c438:	str	r3, [fp, #-24]	; 0xffffffe8
   1c43c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c440:	cmp	r3, #12
   1c444:	bls	1c454 <__assert_fail@plt+0xb134>
   1c448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c44c:	cmp	r3, #8
   1c450:	bls	1c4b8 <__assert_fail@plt+0xb198>
   1c454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c458:	cmp	r3, #12
   1c45c:	bls	1c4b8 <__assert_fail@plt+0xb198>
   1c460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c464:	cmp	r3, #12
   1c468:	bls	1c4b8 <__assert_fail@plt+0xb198>
   1c46c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c470:	cmp	r3, #12
   1c474:	bls	1c484 <__assert_fail@plt+0xb164>
   1c478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c47c:	cmp	r3, #8
   1c480:	bls	1c4ac <__assert_fail@plt+0xb18c>
   1c484:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c488:	cmp	r3, #12
   1c48c:	bls	1c4a4 <__assert_fail@plt+0xb184>
   1c490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c494:	cmp	r3, #8
   1c498:	movcs	r3, r3
   1c49c:	movcc	r3, #8
   1c4a0:	b	1c4b4 <__assert_fail@plt+0xb194>
   1c4a4:	mov	r3, #12
   1c4a8:	b	1c4b4 <__assert_fail@plt+0xb194>
   1c4ac:	mov	r3, #8
   1c4b0:	b	1c4bc <__assert_fail@plt+0xb19c>
   1c4b4:	b	1c4bc <__assert_fail@plt+0xb19c>
   1c4b8:	mov	r3, #12
   1c4bc:	str	r3, [fp, #-28]	; 0xffffffe4
   1c4c0:	mov	r2, #160	; 0xa0
   1c4c4:	mov	r1, #0
   1c4c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c4cc:	bl	11248 <memset@plt>
   1c4d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c4d4:	mov	r2, #31
   1c4d8:	str	r2, [r3, #64]	; 0x40
   1c4dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c4e0:	mvn	r0, #0
   1c4e4:	bl	31f78 <__assert_fail@plt+0x20c58>
   1c4e8:	mov	r3, r0
   1c4ec:	cmp	r3, #0
   1c4f0:	blt	1c50c <__assert_fail@plt+0xb1ec>
   1c4f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c4f8:	mvn	r0, #0
   1c4fc:	bl	31f78 <__assert_fail@plt+0x20c58>
   1c500:	mov	r3, r0
   1c504:	lsr	r3, r3, #1
   1c508:	b	1c510 <__assert_fail@plt+0xb1f0>
   1c50c:	mvn	r3, #-1073741824	; 0xc0000000
   1c510:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c514:	cmp	r3, r2
   1c518:	movls	r3, #1
   1c51c:	movhi	r3, #0
   1c520:	uxtb	r3, r3
   1c524:	cmp	r3, #0
   1c528:	beq	1c534 <__assert_fail@plt+0xb214>
   1c52c:	mov	r3, #12
   1c530:	b	1c85c <__assert_fail@plt+0xb53c>
   1c534:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c538:	add	r2, r3, #1
   1c53c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c540:	str	r2, [r3, #4]
   1c544:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c548:	ldr	r3, [r3, #4]
   1c54c:	lsl	r3, r3, #3
   1c550:	mov	r0, r3
   1c554:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   1c558:	mov	r3, r0
   1c55c:	mov	r2, r3
   1c560:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c564:	str	r2, [r3]
   1c568:	mov	r3, #1
   1c56c:	str	r3, [fp, #-8]
   1c570:	ldr	r2, [fp, #-8]
   1c574:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c578:	cmp	r2, r3
   1c57c:	bhi	1c590 <__assert_fail@plt+0xb270>
   1c580:	ldr	r3, [fp, #-8]
   1c584:	lsl	r3, r3, #1
   1c588:	str	r3, [fp, #-8]
   1c58c:	b	1c570 <__assert_fail@plt+0xb250>
   1c590:	nop			; (mov r0, r0)
   1c594:	ldr	r1, [fp, #-8]
   1c598:	mov	r0, #12
   1c59c:	bl	30c58 <__assert_fail@plt+0x1f938>
   1c5a0:	mov	r3, r0
   1c5a4:	mov	r2, r3
   1c5a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5ac:	str	r2, [r3, #32]
   1c5b0:	ldr	r3, [fp, #-8]
   1c5b4:	sub	r2, r3, #1
   1c5b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5bc:	str	r2, [r3, #68]	; 0x44
   1c5c0:	bl	11158 <__ctype_get_mb_cur_max@plt>
   1c5c4:	mov	r3, r0
   1c5c8:	mov	r2, r3
   1c5cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5d0:	str	r2, [r3, #92]	; 0x5c
   1c5d4:	mov	r0, #14
   1c5d8:	bl	112b4 <nl_langinfo@plt>
   1c5dc:	str	r0, [fp, #-32]	; 0xffffffe0
   1c5e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c5e4:	ldrb	r3, [r3]
   1c5e8:	cmp	r3, #85	; 0x55
   1c5ec:	beq	1c600 <__assert_fail@plt+0xb2e0>
   1c5f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c5f4:	ldrb	r3, [r3]
   1c5f8:	cmp	r3, #117	; 0x75
   1c5fc:	bne	1c6a0 <__assert_fail@plt+0xb380>
   1c600:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c604:	add	r3, r3, #1
   1c608:	ldrb	r3, [r3]
   1c60c:	cmp	r3, #84	; 0x54
   1c610:	beq	1c628 <__assert_fail@plt+0xb308>
   1c614:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c618:	add	r3, r3, #1
   1c61c:	ldrb	r3, [r3]
   1c620:	cmp	r3, #116	; 0x74
   1c624:	bne	1c6a0 <__assert_fail@plt+0xb380>
   1c628:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c62c:	add	r3, r3, #2
   1c630:	ldrb	r3, [r3]
   1c634:	cmp	r3, #70	; 0x46
   1c638:	beq	1c650 <__assert_fail@plt+0xb330>
   1c63c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c640:	add	r3, r3, #2
   1c644:	ldrb	r3, [r3]
   1c648:	cmp	r3, #102	; 0x66
   1c64c:	bne	1c6a0 <__assert_fail@plt+0xb380>
   1c650:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c654:	add	r3, r3, #3
   1c658:	ldrb	r3, [r3]
   1c65c:	cmp	r3, #45	; 0x2d
   1c660:	bne	1c66c <__assert_fail@plt+0xb34c>
   1c664:	mov	r3, #4
   1c668:	b	1c670 <__assert_fail@plt+0xb350>
   1c66c:	mov	r3, #3
   1c670:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c674:	add	r3, r2, r3
   1c678:	ldr	r1, [pc, #488]	; 1c868 <__assert_fail@plt+0xb548>
   1c67c:	mov	r0, r3
   1c680:	bl	11038 <strcmp@plt>
   1c684:	mov	r3, r0
   1c688:	cmp	r3, #0
   1c68c:	bne	1c6a0 <__assert_fail@plt+0xb380>
   1c690:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c694:	ldrb	r3, [r2, #88]	; 0x58
   1c698:	orr	r3, r3, #4
   1c69c:	strb	r3, [r2, #88]	; 0x58
   1c6a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c6a4:	ldrb	r3, [r2, #88]	; 0x58
   1c6a8:	bic	r3, r3, #8
   1c6ac:	strb	r3, [r2, #88]	; 0x58
   1c6b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c6b4:	ldr	r3, [r3, #92]	; 0x5c
   1c6b8:	cmp	r3, #1
   1c6bc:	ble	1c810 <__assert_fail@plt+0xb4f0>
   1c6c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c6c4:	ldrb	r3, [r3, #88]	; 0x58
   1c6c8:	and	r3, r3, #4
   1c6cc:	uxtb	r3, r3
   1c6d0:	cmp	r3, #0
   1c6d4:	beq	1c6e8 <__assert_fail@plt+0xb3c8>
   1c6d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c6dc:	ldr	r2, [pc, #392]	; 1c86c <__assert_fail@plt+0xb54c>
   1c6e0:	str	r2, [r3, #60]	; 0x3c
   1c6e4:	b	1c810 <__assert_fail@plt+0xb4f0>
   1c6e8:	mov	r1, #1
   1c6ec:	mov	r0, #32
   1c6f0:	bl	30c58 <__assert_fail@plt+0x1f938>
   1c6f4:	mov	r3, r0
   1c6f8:	mov	r2, r3
   1c6fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c700:	str	r2, [r3, #60]	; 0x3c
   1c704:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c708:	ldr	r3, [r3, #60]	; 0x3c
   1c70c:	cmp	r3, #0
   1c710:	moveq	r3, #1
   1c714:	movne	r3, #0
   1c718:	uxtb	r3, r3
   1c71c:	cmp	r3, #0
   1c720:	beq	1c72c <__assert_fail@plt+0xb40c>
   1c724:	mov	r3, #12
   1c728:	b	1c85c <__assert_fail@plt+0xb53c>
   1c72c:	mov	r3, #0
   1c730:	str	r3, [fp, #-12]
   1c734:	mov	r3, #0
   1c738:	str	r3, [fp, #-20]	; 0xffffffec
   1c73c:	b	1c804 <__assert_fail@plt+0xb4e4>
   1c740:	mov	r3, #0
   1c744:	str	r3, [fp, #-16]
   1c748:	b	1c7ec <__assert_fail@plt+0xb4cc>
   1c74c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c750:	bl	11254 <btowc@plt>
   1c754:	str	r0, [fp, #-36]	; 0xffffffdc
   1c758:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c75c:	cmn	r3, #1
   1c760:	beq	1c7a4 <__assert_fail@plt+0xb484>
   1c764:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c768:	ldr	r2, [r3, #60]	; 0x3c
   1c76c:	ldr	r3, [fp, #-12]
   1c770:	lsl	r3, r3, #2
   1c774:	add	r3, r2, r3
   1c778:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c77c:	ldr	r1, [r2, #60]	; 0x3c
   1c780:	ldr	r2, [fp, #-12]
   1c784:	lsl	r2, r2, #2
   1c788:	add	r2, r1, r2
   1c78c:	ldr	r1, [r2]
   1c790:	mov	r0, #1
   1c794:	ldr	r2, [fp, #-16]
   1c798:	lsl	r2, r0, r2
   1c79c:	orr	r2, r1, r2
   1c7a0:	str	r2, [r3]
   1c7a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c7a8:	bic	r3, r3, #127	; 0x7f
   1c7ac:	cmp	r3, #0
   1c7b0:	bne	1c7d4 <__assert_fail@plt+0xb4b4>
   1c7b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c7b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c7bc:	cmp	r2, r3
   1c7c0:	beq	1c7d4 <__assert_fail@plt+0xb4b4>
   1c7c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c7c8:	ldrb	r3, [r2, #88]	; 0x58
   1c7cc:	orr	r3, r3, #8
   1c7d0:	strb	r3, [r2, #88]	; 0x58
   1c7d4:	ldr	r3, [fp, #-16]
   1c7d8:	add	r3, r3, #1
   1c7dc:	str	r3, [fp, #-16]
   1c7e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c7e4:	add	r3, r3, #1
   1c7e8:	str	r3, [fp, #-20]	; 0xffffffec
   1c7ec:	ldr	r3, [fp, #-16]
   1c7f0:	cmp	r3, #31
   1c7f4:	ble	1c74c <__assert_fail@plt+0xb42c>
   1c7f8:	ldr	r3, [fp, #-12]
   1c7fc:	add	r3, r3, #1
   1c800:	str	r3, [fp, #-12]
   1c804:	ldr	r3, [fp, #-12]
   1c808:	cmp	r3, #7
   1c80c:	ble	1c740 <__assert_fail@plt+0xb420>
   1c810:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c814:	ldr	r3, [r3]
   1c818:	cmp	r3, #0
   1c81c:	moveq	r3, #1
   1c820:	movne	r3, #0
   1c824:	uxtb	r3, r3
   1c828:	cmp	r3, #0
   1c82c:	bne	1c850 <__assert_fail@plt+0xb530>
   1c830:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c834:	ldr	r3, [r3, #32]
   1c838:	cmp	r3, #0
   1c83c:	moveq	r3, #1
   1c840:	movne	r3, #0
   1c844:	uxtb	r3, r3
   1c848:	cmp	r3, #0
   1c84c:	beq	1c858 <__assert_fail@plt+0xb538>
   1c850:	mov	r3, #12
   1c854:	b	1c85c <__assert_fail@plt+0xb53c>
   1c858:	mov	r3, #0
   1c85c:	mov	r0, r3
   1c860:	sub	sp, fp, #4
   1c864:	pop	{fp, pc}
   1c868:	andeq	r3, r3, r8, lsl r6
   1c86c:	strdeq	r3, [r3], -r8
   1c870:	push	{fp, lr}
   1c874:	add	fp, sp, #4
   1c878:	sub	sp, sp, #40	; 0x28
   1c87c:	str	r0, [fp, #-40]	; 0xffffffd8
   1c880:	mov	r3, #0
   1c884:	str	r3, [fp, #-8]
   1c888:	mov	r3, #0
   1c88c:	str	r3, [fp, #-16]
   1c890:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c894:	ldrb	r3, [r2, #88]	; 0x58
   1c898:	orr	r3, r3, #16
   1c89c:	strb	r3, [r2, #88]	; 0x58
   1c8a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c8a4:	ldrb	r3, [r3, #88]	; 0x58
   1c8a8:	and	r3, r3, #8
   1c8ac:	uxtb	r3, r3
   1c8b0:	cmp	r3, #0
   1c8b4:	moveq	r3, #1
   1c8b8:	movne	r3, #0
   1c8bc:	uxtb	r3, r3
   1c8c0:	cmp	r3, #0
   1c8c4:	beq	1ca24 <__assert_fail@plt+0xb704>
   1c8c8:	mov	r3, #0
   1c8cc:	str	r3, [fp, #-20]	; 0xffffffec
   1c8d0:	ldr	r3, [pc, #352]	; 1ca38 <__assert_fail@plt+0xb718>
   1c8d4:	str	r3, [fp, #-24]	; 0xffffffe8
   1c8d8:	mvn	r3, #2013265921	; 0x78000001
   1c8dc:	str	r3, [fp, #-28]	; 0xffffffe4
   1c8e0:	mvn	r3, #-134217727	; 0xf8000001
   1c8e4:	str	r3, [fp, #-32]	; 0xffffffe0
   1c8e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c8ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c8f0:	str	r2, [r3, #96]	; 0x60
   1c8f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c8f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c8fc:	str	r2, [r3, #100]	; 0x64
   1c900:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c904:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c908:	str	r2, [r3, #104]	; 0x68
   1c90c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c910:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c914:	str	r2, [r3, #108]	; 0x6c
   1c918:	mov	r3, #4
   1c91c:	str	r3, [fp, #-8]
   1c920:	mov	r3, #128	; 0x80
   1c924:	str	r3, [fp, #-16]
   1c928:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c92c:	ldrb	r3, [r3, #88]	; 0x58
   1c930:	lsr	r3, r3, #2
   1c934:	and	r3, r3, #1
   1c938:	uxtb	r3, r3
   1c93c:	cmp	r3, #0
   1c940:	beq	1ca24 <__assert_fail@plt+0xb704>
   1c944:	ldr	r3, [fp, #-8]
   1c948:	add	r3, r3, #24
   1c94c:	lsl	r3, r3, #2
   1c950:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c954:	add	r0, r2, r3
   1c958:	ldr	r3, [fp, #-16]
   1c95c:	rsb	r3, r3, #256	; 0x100
   1c960:	add	r2, r3, #7
   1c964:	cmp	r3, #0
   1c968:	movlt	r3, r2
   1c96c:	movge	r3, r3
   1c970:	asr	r3, r3, #3
   1c974:	mov	r2, r3
   1c978:	mov	r1, #0
   1c97c:	bl	11248 <memset@plt>
   1c980:	b	1ca30 <__assert_fail@plt+0xb710>
   1c984:	mov	r3, #0
   1c988:	str	r3, [fp, #-12]
   1c98c:	b	1ca0c <__assert_fail@plt+0xb6ec>
   1c990:	bl	111dc <__ctype_b_loc@plt>
   1c994:	mov	r3, r0
   1c998:	ldr	r2, [r3]
   1c99c:	ldr	r3, [fp, #-16]
   1c9a0:	lsl	r3, r3, #1
   1c9a4:	add	r3, r2, r3
   1c9a8:	ldrh	r3, [r3]
   1c9ac:	and	r3, r3, #8
   1c9b0:	cmp	r3, #0
   1c9b4:	bne	1c9c4 <__assert_fail@plt+0xb6a4>
   1c9b8:	ldr	r3, [fp, #-16]
   1c9bc:	cmp	r3, #95	; 0x5f
   1c9c0:	bne	1c9f4 <__assert_fail@plt+0xb6d4>
   1c9c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c9c8:	ldr	r2, [fp, #-8]
   1c9cc:	add	r2, r2, #24
   1c9d0:	ldr	r2, [r3, r2, lsl #2]
   1c9d4:	mov	r1, #1
   1c9d8:	ldr	r3, [fp, #-12]
   1c9dc:	lsl	r3, r1, r3
   1c9e0:	orr	r1, r2, r3
   1c9e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c9e8:	ldr	r2, [fp, #-8]
   1c9ec:	add	r2, r2, #24
   1c9f0:	str	r1, [r3, r2, lsl #2]
   1c9f4:	ldr	r3, [fp, #-12]
   1c9f8:	add	r3, r3, #1
   1c9fc:	str	r3, [fp, #-12]
   1ca00:	ldr	r3, [fp, #-16]
   1ca04:	add	r3, r3, #1
   1ca08:	str	r3, [fp, #-16]
   1ca0c:	ldr	r3, [fp, #-12]
   1ca10:	cmp	r3, #31
   1ca14:	ble	1c990 <__assert_fail@plt+0xb670>
   1ca18:	ldr	r3, [fp, #-8]
   1ca1c:	add	r3, r3, #1
   1ca20:	str	r3, [fp, #-8]
   1ca24:	ldr	r3, [fp, #-8]
   1ca28:	cmp	r3, #7
   1ca2c:	ble	1c984 <__assert_fail@plt+0xb664>
   1ca30:	sub	sp, fp, #4
   1ca34:	pop	{fp, pc}
   1ca38:	mvnseq	r0, #0
   1ca3c:	push	{fp, lr}
   1ca40:	add	fp, sp, #4
   1ca44:	sub	sp, sp, #24
   1ca48:	str	r0, [fp, #-24]	; 0xffffffe8
   1ca4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca50:	ldr	r3, [r3]
   1ca54:	str	r3, [fp, #-12]
   1ca58:	ldr	r3, [fp, #-12]
   1ca5c:	ldr	r3, [r3, #56]	; 0x38
   1ca60:	str	r3, [fp, #-8]
   1ca64:	b	1ca84 <__assert_fail@plt+0xb764>
   1ca68:	ldr	r3, [fp, #-8]
   1ca6c:	ldr	r3, [r3]
   1ca70:	str	r3, [fp, #-16]
   1ca74:	ldr	r0, [fp, #-8]
   1ca78:	bl	31500 <__assert_fail@plt+0x201e0>
   1ca7c:	ldr	r3, [fp, #-16]
   1ca80:	str	r3, [fp, #-8]
   1ca84:	ldr	r3, [fp, #-8]
   1ca88:	cmp	r3, #0
   1ca8c:	bne	1ca68 <__assert_fail@plt+0xb748>
   1ca90:	ldr	r3, [fp, #-12]
   1ca94:	mov	r2, #0
   1ca98:	str	r2, [r3, #56]	; 0x38
   1ca9c:	ldr	r3, [fp, #-12]
   1caa0:	mov	r2, #31
   1caa4:	str	r2, [r3, #64]	; 0x40
   1caa8:	ldr	r3, [fp, #-12]
   1caac:	mov	r2, #0
   1cab0:	str	r2, [r3, #52]	; 0x34
   1cab4:	ldr	r3, [fp, #-12]
   1cab8:	ldr	r3, [r3, #16]
   1cabc:	mov	r0, r3
   1cac0:	bl	31500 <__assert_fail@plt+0x201e0>
   1cac4:	ldr	r3, [fp, #-12]
   1cac8:	mov	r2, #0
   1cacc:	str	r2, [r3, #16]
   1cad0:	nop			; (mov r0, r0)
   1cad4:	sub	sp, fp, #4
   1cad8:	pop	{fp, pc}
   1cadc:	push	{fp, lr}
   1cae0:	add	fp, sp, #4
   1cae4:	sub	sp, sp, #56	; 0x38
   1cae8:	str	r0, [fp, #-56]	; 0xffffffc8
   1caec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1caf0:	ldr	r3, [r3, #52]	; 0x34
   1caf4:	ldr	r3, [r3, #12]
   1caf8:	ldr	r3, [r3, #28]
   1cafc:	str	r3, [fp, #-16]
   1cb00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cb04:	ldr	r2, [fp, #-16]
   1cb08:	str	r2, [r3, #72]	; 0x48
   1cb0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cb10:	ldr	r1, [r3, #24]
   1cb14:	ldr	r2, [fp, #-16]
   1cb18:	mov	r3, r2
   1cb1c:	lsl	r3, r3, #1
   1cb20:	add	r3, r3, r2
   1cb24:	lsl	r3, r3, #2
   1cb28:	add	r2, r1, r3
   1cb2c:	sub	r3, fp, #52	; 0x34
   1cb30:	mov	r1, r2
   1cb34:	mov	r0, r3
   1cb38:	bl	18cd0 <__assert_fail@plt+0x79b0>
   1cb3c:	mov	r3, r0
   1cb40:	str	r3, [fp, #-40]	; 0xffffffd8
   1cb44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cb48:	cmp	r3, #0
   1cb4c:	movne	r3, #1
   1cb50:	moveq	r3, #0
   1cb54:	uxtb	r3, r3
   1cb58:	cmp	r3, #0
   1cb5c:	beq	1cb68 <__assert_fail@plt+0xb848>
   1cb60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cb64:	b	1ceb4 <__assert_fail@plt+0xbb94>
   1cb68:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cb6c:	ldr	r3, [r3, #76]	; 0x4c
   1cb70:	cmp	r3, #0
   1cb74:	ble	1cd34 <__assert_fail@plt+0xba14>
   1cb78:	mov	r3, #0
   1cb7c:	str	r3, [fp, #-8]
   1cb80:	b	1cd24 <__assert_fail@plt+0xba04>
   1cb84:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cb88:	ldr	r3, [fp, #-8]
   1cb8c:	lsl	r3, r3, #2
   1cb90:	add	r3, r2, r3
   1cb94:	ldr	r3, [r3]
   1cb98:	str	r3, [fp, #-20]	; 0xffffffec
   1cb9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cba0:	ldr	r2, [r3]
   1cba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cba8:	lsl	r3, r3, #3
   1cbac:	add	r3, r2, r3
   1cbb0:	ldrb	r3, [r3, #4]
   1cbb4:	str	r3, [fp, #-24]	; 0xffffffe8
   1cbb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cbbc:	cmp	r3, #4
   1cbc0:	bne	1cd0c <__assert_fail@plt+0xb9ec>
   1cbc4:	mov	r3, #0
   1cbc8:	str	r3, [fp, #-12]
   1cbcc:	b	1cc3c <__assert_fail@plt+0xb91c>
   1cbd0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cbd4:	ldr	r2, [r3]
   1cbd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cbdc:	ldr	r3, [fp, #-12]
   1cbe0:	lsl	r3, r3, #2
   1cbe4:	add	r3, r1, r3
   1cbe8:	ldr	r3, [r3]
   1cbec:	lsl	r3, r3, #3
   1cbf0:	add	r3, r2, r3
   1cbf4:	str	r3, [fp, #-28]	; 0xffffffe4
   1cbf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cbfc:	ldrb	r3, [r3, #4]
   1cc00:	cmp	r3, #9
   1cc04:	bne	1cc30 <__assert_fail@plt+0xb910>
   1cc08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cc0c:	ldr	r2, [r3]
   1cc10:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cc14:	ldr	r1, [r3]
   1cc18:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc1c:	lsl	r3, r3, #3
   1cc20:	add	r3, r1, r3
   1cc24:	ldr	r3, [r3]
   1cc28:	cmp	r2, r3
   1cc2c:	beq	1cc50 <__assert_fail@plt+0xb930>
   1cc30:	ldr	r3, [fp, #-12]
   1cc34:	add	r3, r3, #1
   1cc38:	str	r3, [fp, #-12]
   1cc3c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cc40:	ldr	r3, [fp, #-12]
   1cc44:	cmp	r2, r3
   1cc48:	bgt	1cbd0 <__assert_fail@plt+0xb8b0>
   1cc4c:	b	1cc54 <__assert_fail@plt+0xb934>
   1cc50:	nop			; (mov r0, r0)
   1cc54:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cc58:	ldr	r3, [fp, #-12]
   1cc5c:	cmp	r2, r3
   1cc60:	beq	1cd14 <__assert_fail@plt+0xb9f4>
   1cc64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc68:	cmp	r3, #4
   1cc6c:	bne	1cd18 <__assert_fail@plt+0xb9f8>
   1cc70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cc74:	ldr	r1, [r3, #20]
   1cc78:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cc7c:	mov	r3, r2
   1cc80:	lsl	r3, r3, #1
   1cc84:	add	r3, r3, r2
   1cc88:	lsl	r3, r3, #2
   1cc8c:	add	r3, r1, r3
   1cc90:	ldr	r3, [r3, #8]
   1cc94:	ldr	r3, [r3]
   1cc98:	str	r3, [fp, #-32]	; 0xffffffe0
   1cc9c:	sub	r3, fp, #52	; 0x34
   1cca0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cca4:	mov	r0, r3
   1cca8:	bl	19e3c <__assert_fail@plt+0x8b1c>
   1ccac:	mov	r3, r0
   1ccb0:	cmp	r3, #0
   1ccb4:	bne	1cd18 <__assert_fail@plt+0xb9f8>
   1ccb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ccbc:	ldr	r1, [r3, #24]
   1ccc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ccc4:	mov	r3, r2
   1ccc8:	lsl	r3, r3, #1
   1cccc:	add	r3, r3, r2
   1ccd0:	lsl	r3, r3, #2
   1ccd4:	add	r2, r1, r3
   1ccd8:	sub	r3, fp, #52	; 0x34
   1ccdc:	mov	r1, r2
   1cce0:	mov	r0, r3
   1cce4:	bl	195d8 <__assert_fail@plt+0x82b8>
   1cce8:	str	r0, [fp, #-36]	; 0xffffffdc
   1ccec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ccf0:	cmp	r3, #0
   1ccf4:	beq	1cd00 <__assert_fail@plt+0xb9e0>
   1ccf8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ccfc:	b	1ceb4 <__assert_fail@plt+0xbb94>
   1cd00:	mov	r3, #0
   1cd04:	str	r3, [fp, #-8]
   1cd08:	b	1cd18 <__assert_fail@plt+0xb9f8>
   1cd0c:	nop			; (mov r0, r0)
   1cd10:	b	1cd18 <__assert_fail@plt+0xb9f8>
   1cd14:	nop			; (mov r0, r0)
   1cd18:	ldr	r3, [fp, #-8]
   1cd1c:	add	r3, r3, #1
   1cd20:	str	r3, [fp, #-8]
   1cd24:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cd28:	ldr	r3, [fp, #-8]
   1cd2c:	cmp	r2, r3
   1cd30:	bgt	1cb84 <__assert_fail@plt+0xb864>
   1cd34:	sub	r2, fp, #52	; 0x34
   1cd38:	sub	r0, fp, #40	; 0x28
   1cd3c:	mov	r3, #0
   1cd40:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1cd44:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   1cd48:	mov	r2, r0
   1cd4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cd50:	str	r2, [r3, #36]	; 0x24
   1cd54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cd58:	ldr	r3, [r3, #36]	; 0x24
   1cd5c:	cmp	r3, #0
   1cd60:	moveq	r3, #1
   1cd64:	movne	r3, #0
   1cd68:	uxtb	r3, r3
   1cd6c:	cmp	r3, #0
   1cd70:	beq	1cd7c <__assert_fail@plt+0xba5c>
   1cd74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cd78:	b	1ceb4 <__assert_fail@plt+0xbb94>
   1cd7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cd80:	ldr	r3, [r3, #36]	; 0x24
   1cd84:	ldrb	r3, [r3, #52]	; 0x34
   1cd88:	bic	r3, r3, #127	; 0x7f
   1cd8c:	uxtb	r3, r3
   1cd90:	cmp	r3, #0
   1cd94:	beq	1ce74 <__assert_fail@plt+0xbb54>
   1cd98:	sub	r2, fp, #52	; 0x34
   1cd9c:	sub	r0, fp, #40	; 0x28
   1cda0:	mov	r3, #1
   1cda4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1cda8:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   1cdac:	mov	r2, r0
   1cdb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cdb4:	str	r2, [r3, #40]	; 0x28
   1cdb8:	sub	r2, fp, #52	; 0x34
   1cdbc:	sub	r0, fp, #40	; 0x28
   1cdc0:	mov	r3, #2
   1cdc4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1cdc8:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   1cdcc:	mov	r2, r0
   1cdd0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cdd4:	str	r2, [r3, #44]	; 0x2c
   1cdd8:	sub	r2, fp, #52	; 0x34
   1cddc:	sub	r0, fp, #40	; 0x28
   1cde0:	mov	r3, #6
   1cde4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1cde8:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   1cdec:	mov	r2, r0
   1cdf0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cdf4:	str	r2, [r3, #48]	; 0x30
   1cdf8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cdfc:	ldr	r3, [r3, #40]	; 0x28
   1ce00:	cmp	r3, #0
   1ce04:	moveq	r3, #1
   1ce08:	movne	r3, #0
   1ce0c:	uxtb	r3, r3
   1ce10:	cmp	r3, #0
   1ce14:	bne	1ce38 <__assert_fail@plt+0xbb18>
   1ce18:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ce1c:	ldr	r3, [r3, #44]	; 0x2c
   1ce20:	cmp	r3, #0
   1ce24:	moveq	r3, #1
   1ce28:	movne	r3, #0
   1ce2c:	uxtb	r3, r3
   1ce30:	cmp	r3, #0
   1ce34:	beq	1ce40 <__assert_fail@plt+0xbb20>
   1ce38:	mov	r3, #1
   1ce3c:	b	1ce44 <__assert_fail@plt+0xbb24>
   1ce40:	mov	r3, #0
   1ce44:	cmp	r3, #0
   1ce48:	bne	1ce6c <__assert_fail@plt+0xbb4c>
   1ce4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ce50:	ldr	r3, [r3, #48]	; 0x30
   1ce54:	cmp	r3, #0
   1ce58:	moveq	r3, #1
   1ce5c:	movne	r3, #0
   1ce60:	uxtb	r3, r3
   1ce64:	cmp	r3, #0
   1ce68:	beq	1cea4 <__assert_fail@plt+0xbb84>
   1ce6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ce70:	b	1ceb4 <__assert_fail@plt+0xbb94>
   1ce74:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ce78:	ldr	r2, [r3, #36]	; 0x24
   1ce7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ce80:	str	r2, [r3, #48]	; 0x30
   1ce84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ce88:	ldr	r2, [r3, #48]	; 0x30
   1ce8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ce90:	str	r2, [r3, #44]	; 0x2c
   1ce94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ce98:	ldr	r2, [r3, #44]	; 0x2c
   1ce9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cea0:	str	r2, [r3, #40]	; 0x28
   1cea4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cea8:	mov	r0, r3
   1ceac:	bl	31500 <__assert_fail@plt+0x201e0>
   1ceb0:	mov	r3, #0
   1ceb4:	mov	r0, r3
   1ceb8:	sub	sp, fp, #4
   1cebc:	pop	{fp, pc}
   1cec0:	push	{fp, lr}
   1cec4:	add	fp, sp, #4
   1cec8:	sub	sp, sp, #24
   1cecc:	str	r0, [fp, #-24]	; 0xffffffe8
   1ced0:	mov	r3, #0
   1ced4:	strb	r3, [fp, #-13]
   1ced8:	mov	r3, #0
   1cedc:	strb	r3, [fp, #-14]
   1cee0:	mov	r3, #0
   1cee4:	str	r3, [fp, #-8]
   1cee8:	b	1d05c <__assert_fail@plt+0xbd3c>
   1ceec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cef0:	ldr	r2, [r3]
   1cef4:	ldr	r3, [fp, #-8]
   1cef8:	lsl	r3, r3, #3
   1cefc:	add	r3, r2, r3
   1cf00:	ldrb	r3, [r3, #4]
   1cf04:	sub	r3, r3, #1
   1cf08:	cmp	r3, #11
   1cf0c:	ldrls	pc, [pc, r3, lsl #2]
   1cf10:	b	1d040 <__assert_fail@plt+0xbd20>
   1cf14:	andeq	ip, r1, r4, asr #30
   1cf18:	andeq	sp, r1, r4, asr #32
   1cf1c:	ldrdeq	ip, [r1], -r0
   1cf20:	andeq	sp, r1, r4, asr #32
   1cf24:	andeq	ip, r1, r4, asr #31
   1cf28:	andeq	sp, r1, ip, asr #3
   1cf2c:	andeq	sp, r1, r0, asr #32
   1cf30:	andeq	sp, r1, r4, asr #32
   1cf34:	andeq	sp, r1, r4, asr #32
   1cf38:	andeq	sp, r1, r4, asr #32
   1cf3c:	andeq	sp, r1, r4, asr #32
   1cf40:	andeq	ip, r1, r4, ror pc
   1cf44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf48:	ldr	r2, [r3]
   1cf4c:	ldr	r3, [fp, #-8]
   1cf50:	lsl	r3, r3, #3
   1cf54:	add	r3, r2, r3
   1cf58:	ldrb	r3, [r3]
   1cf5c:	sxtb	r3, r3
   1cf60:	cmp	r3, #0
   1cf64:	bge	1d04c <__assert_fail@plt+0xbd2c>
   1cf68:	mov	r3, #1
   1cf6c:	strb	r3, [fp, #-13]
   1cf70:	b	1d04c <__assert_fail@plt+0xbd2c>
   1cf74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf78:	ldr	r2, [r3]
   1cf7c:	ldr	r3, [fp, #-8]
   1cf80:	lsl	r3, r3, #3
   1cf84:	add	r3, r2, r3
   1cf88:	ldr	r3, [r3]
   1cf8c:	cmp	r3, #32
   1cf90:	beq	1cfbc <__assert_fail@plt+0xbc9c>
   1cf94:	cmp	r3, #32
   1cf98:	bhi	1cfa8 <__assert_fail@plt+0xbc88>
   1cf9c:	cmp	r3, #16
   1cfa0:	beq	1cfbc <__assert_fail@plt+0xbc9c>
   1cfa4:	b	1d1d8 <__assert_fail@plt+0xbeb8>
   1cfa8:	cmp	r3, #64	; 0x40
   1cfac:	beq	1cfbc <__assert_fail@plt+0xbc9c>
   1cfb0:	cmp	r3, #128	; 0x80
   1cfb4:	beq	1cfbc <__assert_fail@plt+0xbc9c>
   1cfb8:	b	1d1d8 <__assert_fail@plt+0xbeb8>
   1cfbc:	nop			; (mov r0, r0)
   1cfc0:	b	1d050 <__assert_fail@plt+0xbd30>
   1cfc4:	mov	r3, #1
   1cfc8:	strb	r3, [fp, #-14]
   1cfcc:	b	1d050 <__assert_fail@plt+0xbd30>
   1cfd0:	mov	r3, #0
   1cfd4:	str	r3, [fp, #-20]	; 0xffffffec
   1cfd8:	mov	r3, #4
   1cfdc:	str	r3, [fp, #-12]
   1cfe0:	b	1d030 <__assert_fail@plt+0xbd10>
   1cfe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cfe8:	ldr	r2, [r3]
   1cfec:	ldr	r3, [fp, #-8]
   1cff0:	lsl	r3, r3, #3
   1cff4:	add	r3, r2, r3
   1cff8:	ldr	r2, [r3]
   1cffc:	ldr	r3, [fp, #-12]
   1d000:	lsl	r3, r3, #2
   1d004:	add	r3, r2, r3
   1d008:	ldr	r2, [r3]
   1d00c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d010:	lsr	r3, r2, r3
   1d014:	cmp	r3, #0
   1d018:	bne	1d1d4 <__assert_fail@plt+0xbeb4>
   1d01c:	mov	r3, #0
   1d020:	str	r3, [fp, #-20]	; 0xffffffec
   1d024:	ldr	r3, [fp, #-12]
   1d028:	add	r3, r3, #1
   1d02c:	str	r3, [fp, #-12]
   1d030:	ldr	r3, [fp, #-12]
   1d034:	cmp	r3, #7
   1d038:	ble	1cfe4 <__assert_fail@plt+0xbcc4>
   1d03c:	b	1d050 <__assert_fail@plt+0xbd30>
   1d040:	bl	112fc <abort@plt>
   1d044:	nop			; (mov r0, r0)
   1d048:	b	1d050 <__assert_fail@plt+0xbd30>
   1d04c:	nop			; (mov r0, r0)
   1d050:	ldr	r3, [fp, #-8]
   1d054:	add	r3, r3, #1
   1d058:	str	r3, [fp, #-8]
   1d05c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d060:	ldr	r2, [r3, #8]
   1d064:	ldr	r3, [fp, #-8]
   1d068:	cmp	r2, r3
   1d06c:	bhi	1ceec <__assert_fail@plt+0xbbcc>
   1d070:	ldrb	r3, [fp, #-13]
   1d074:	cmp	r3, #0
   1d078:	bne	1d088 <__assert_fail@plt+0xbd68>
   1d07c:	ldrb	r3, [fp, #-14]
   1d080:	cmp	r3, #0
   1d084:	beq	1d158 <__assert_fail@plt+0xbe38>
   1d088:	mov	r3, #0
   1d08c:	str	r3, [fp, #-8]
   1d090:	b	1d144 <__assert_fail@plt+0xbe24>
   1d094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d098:	ldr	r2, [r3]
   1d09c:	ldr	r3, [fp, #-8]
   1d0a0:	lsl	r3, r3, #3
   1d0a4:	add	r3, r2, r3
   1d0a8:	ldrb	r3, [r3, #4]
   1d0ac:	cmp	r3, #1
   1d0b0:	bne	1d0fc <__assert_fail@plt+0xbddc>
   1d0b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d0b8:	ldr	r2, [r3]
   1d0bc:	ldr	r3, [fp, #-8]
   1d0c0:	lsl	r3, r3, #3
   1d0c4:	add	r3, r2, r3
   1d0c8:	ldrb	r3, [r3]
   1d0cc:	sxtb	r3, r3
   1d0d0:	cmp	r3, #0
   1d0d4:	bge	1d0fc <__assert_fail@plt+0xbddc>
   1d0d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d0dc:	ldr	r2, [r3]
   1d0e0:	ldr	r3, [fp, #-8]
   1d0e4:	lsl	r3, r3, #3
   1d0e8:	add	r2, r2, r3
   1d0ec:	ldrb	r3, [r2, #6]
   1d0f0:	bic	r3, r3, #32
   1d0f4:	strb	r3, [r2, #6]
   1d0f8:	b	1d138 <__assert_fail@plt+0xbe18>
   1d0fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d100:	ldr	r2, [r3]
   1d104:	ldr	r3, [fp, #-8]
   1d108:	lsl	r3, r3, #3
   1d10c:	add	r3, r2, r3
   1d110:	ldrb	r3, [r3, #4]
   1d114:	cmp	r3, #5
   1d118:	bne	1d138 <__assert_fail@plt+0xbe18>
   1d11c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d120:	ldr	r2, [r3]
   1d124:	ldr	r3, [fp, #-8]
   1d128:	lsl	r3, r3, #3
   1d12c:	add	r3, r2, r3
   1d130:	mov	r2, #7
   1d134:	strb	r2, [r3, #4]
   1d138:	ldr	r3, [fp, #-8]
   1d13c:	add	r3, r3, #1
   1d140:	str	r3, [fp, #-8]
   1d144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d148:	ldr	r2, [r3, #8]
   1d14c:	ldr	r3, [fp, #-8]
   1d150:	cmp	r2, r3
   1d154:	bhi	1d094 <__assert_fail@plt+0xbd74>
   1d158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d15c:	mov	r2, #1
   1d160:	str	r2, [r3, #92]	; 0x5c
   1d164:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d168:	ldrb	r3, [r2, #88]	; 0x58
   1d16c:	bic	r3, r3, #4
   1d170:	strb	r3, [r2, #88]	; 0x58
   1d174:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d178:	ldr	r3, [r3, #76]	; 0x4c
   1d17c:	cmp	r3, #0
   1d180:	bgt	1d190 <__assert_fail@plt+0xbe70>
   1d184:	ldrb	r3, [fp, #-14]
   1d188:	cmp	r3, #0
   1d18c:	beq	1d198 <__assert_fail@plt+0xbe78>
   1d190:	mov	r3, #1
   1d194:	b	1d19c <__assert_fail@plt+0xbe7c>
   1d198:	mov	r3, #0
   1d19c:	uxtb	r3, r3
   1d1a0:	and	r3, r3, #1
   1d1a4:	uxtb	r3, r3
   1d1a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d1ac:	ldrb	r2, [r1, #88]	; 0x58
   1d1b0:	and	r3, r3, #1
   1d1b4:	bic	r2, r2, #2
   1d1b8:	lsl	r3, r3, #1
   1d1bc:	orr	r3, r3, r2
   1d1c0:	mov	r2, r3
   1d1c4:	strb	r2, [r1, #88]	; 0x58
   1d1c8:	b	1d1d8 <__assert_fail@plt+0xbeb8>
   1d1cc:	nop			; (mov r0, r0)
   1d1d0:	b	1d1d8 <__assert_fail@plt+0xbeb8>
   1d1d4:	nop			; (mov r0, r0)
   1d1d8:	sub	sp, fp, #4
   1d1dc:	pop	{fp, pc}
   1d1e0:	push	{fp, lr}
   1d1e4:	add	fp, sp, #4
   1d1e8:	sub	sp, sp, #24
   1d1ec:	str	r0, [fp, #-24]	; 0xffffffe8
   1d1f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d1f4:	ldr	r3, [r3]
   1d1f8:	str	r3, [fp, #-16]
   1d1fc:	ldr	r3, [fp, #-16]
   1d200:	ldr	r3, [r3, #4]
   1d204:	lsl	r3, r3, #2
   1d208:	mov	r0, r3
   1d20c:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   1d210:	mov	r3, r0
   1d214:	mov	r2, r3
   1d218:	ldr	r3, [fp, #-16]
   1d21c:	str	r2, [r3, #12]
   1d220:	ldr	r3, [fp, #-16]
   1d224:	ldr	r3, [r3, #4]
   1d228:	lsl	r3, r3, #2
   1d22c:	mov	r0, r3
   1d230:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   1d234:	mov	r3, r0
   1d238:	mov	r2, r3
   1d23c:	ldr	r3, [fp, #-16]
   1d240:	str	r2, [r3, #16]
   1d244:	ldr	r3, [fp, #-16]
   1d248:	ldr	r2, [r3, #4]
   1d24c:	mov	r3, r2
   1d250:	lsl	r3, r3, #1
   1d254:	add	r3, r3, r2
   1d258:	lsl	r3, r3, #2
   1d25c:	mov	r0, r3
   1d260:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   1d264:	mov	r3, r0
   1d268:	mov	r2, r3
   1d26c:	ldr	r3, [fp, #-16]
   1d270:	str	r2, [r3, #20]
   1d274:	ldr	r3, [fp, #-16]
   1d278:	ldr	r2, [r3, #4]
   1d27c:	mov	r3, r2
   1d280:	lsl	r3, r3, #1
   1d284:	add	r3, r3, r2
   1d288:	lsl	r3, r3, #2
   1d28c:	mov	r0, r3
   1d290:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   1d294:	mov	r3, r0
   1d298:	mov	r2, r3
   1d29c:	ldr	r3, [fp, #-16]
   1d2a0:	str	r2, [r3, #24]
   1d2a4:	ldr	r3, [fp, #-16]
   1d2a8:	ldr	r3, [r3, #12]
   1d2ac:	cmp	r3, #0
   1d2b0:	moveq	r3, #1
   1d2b4:	movne	r3, #0
   1d2b8:	uxtb	r3, r3
   1d2bc:	cmp	r3, #0
   1d2c0:	bne	1d2e4 <__assert_fail@plt+0xbfc4>
   1d2c4:	ldr	r3, [fp, #-16]
   1d2c8:	ldr	r3, [r3, #16]
   1d2cc:	cmp	r3, #0
   1d2d0:	moveq	r3, #1
   1d2d4:	movne	r3, #0
   1d2d8:	uxtb	r3, r3
   1d2dc:	cmp	r3, #0
   1d2e0:	beq	1d2ec <__assert_fail@plt+0xbfcc>
   1d2e4:	mov	r3, #1
   1d2e8:	b	1d2f0 <__assert_fail@plt+0xbfd0>
   1d2ec:	mov	r3, #0
   1d2f0:	cmp	r3, #0
   1d2f4:	bne	1d318 <__assert_fail@plt+0xbff8>
   1d2f8:	ldr	r3, [fp, #-16]
   1d2fc:	ldr	r3, [r3, #20]
   1d300:	cmp	r3, #0
   1d304:	moveq	r3, #1
   1d308:	movne	r3, #0
   1d30c:	uxtb	r3, r3
   1d310:	cmp	r3, #0
   1d314:	beq	1d320 <__assert_fail@plt+0xc000>
   1d318:	mov	r3, #1
   1d31c:	b	1d324 <__assert_fail@plt+0xc004>
   1d320:	mov	r3, #0
   1d324:	cmp	r3, #0
   1d328:	bne	1d34c <__assert_fail@plt+0xc02c>
   1d32c:	ldr	r3, [fp, #-16]
   1d330:	ldr	r3, [r3, #24]
   1d334:	cmp	r3, #0
   1d338:	moveq	r3, #1
   1d33c:	movne	r3, #0
   1d340:	uxtb	r3, r3
   1d344:	cmp	r3, #0
   1d348:	beq	1d354 <__assert_fail@plt+0xc034>
   1d34c:	mov	r3, #12
   1d350:	b	1d630 <__assert_fail@plt+0xc310>
   1d354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d358:	ldr	r3, [r3, #24]
   1d35c:	lsl	r3, r3, #2
   1d360:	mov	r0, r3
   1d364:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   1d368:	mov	r3, r0
   1d36c:	mov	r2, r3
   1d370:	ldr	r3, [fp, #-16]
   1d374:	str	r2, [r3, #132]	; 0x84
   1d378:	ldr	r3, [fp, #-16]
   1d37c:	ldr	r3, [r3, #132]	; 0x84
   1d380:	cmp	r3, #0
   1d384:	beq	1d470 <__assert_fail@plt+0xc150>
   1d388:	mov	r3, #0
   1d38c:	str	r3, [fp, #-12]
   1d390:	b	1d3bc <__assert_fail@plt+0xc09c>
   1d394:	ldr	r3, [fp, #-16]
   1d398:	ldr	r2, [r3, #132]	; 0x84
   1d39c:	ldr	r3, [fp, #-12]
   1d3a0:	lsl	r3, r3, #2
   1d3a4:	add	r3, r2, r3
   1d3a8:	ldr	r2, [fp, #-12]
   1d3ac:	str	r2, [r3]
   1d3b0:	ldr	r3, [fp, #-12]
   1d3b4:	add	r3, r3, #1
   1d3b8:	str	r3, [fp, #-12]
   1d3bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d3c0:	ldr	r2, [r3, #24]
   1d3c4:	ldr	r3, [fp, #-12]
   1d3c8:	cmp	r2, r3
   1d3cc:	bhi	1d394 <__assert_fail@plt+0xc074>
   1d3d0:	ldr	r3, [fp, #-16]
   1d3d4:	ldr	r3, [r3, #52]	; 0x34
   1d3d8:	ldr	r2, [fp, #-16]
   1d3dc:	ldr	r1, [pc, #600]	; 1d63c <__assert_fail@plt+0xc31c>
   1d3e0:	mov	r0, r3
   1d3e4:	bl	1d764 <__assert_fail@plt+0xc444>
   1d3e8:	mov	r3, #0
   1d3ec:	str	r3, [fp, #-12]
   1d3f0:	b	1d424 <__assert_fail@plt+0xc104>
   1d3f4:	ldr	r3, [fp, #-16]
   1d3f8:	ldr	r2, [r3, #132]	; 0x84
   1d3fc:	ldr	r3, [fp, #-12]
   1d400:	lsl	r3, r3, #2
   1d404:	add	r3, r2, r3
   1d408:	ldr	r2, [r3]
   1d40c:	ldr	r3, [fp, #-12]
   1d410:	cmp	r2, r3
   1d414:	bne	1d43c <__assert_fail@plt+0xc11c>
   1d418:	ldr	r3, [fp, #-12]
   1d41c:	add	r3, r3, #1
   1d420:	str	r3, [fp, #-12]
   1d424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d428:	ldr	r2, [r3, #24]
   1d42c:	ldr	r3, [fp, #-12]
   1d430:	cmp	r2, r3
   1d434:	bhi	1d3f4 <__assert_fail@plt+0xc0d4>
   1d438:	b	1d440 <__assert_fail@plt+0xc120>
   1d43c:	nop			; (mov r0, r0)
   1d440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d444:	ldr	r2, [r3, #24]
   1d448:	ldr	r3, [fp, #-12]
   1d44c:	cmp	r2, r3
   1d450:	bne	1d470 <__assert_fail@plt+0xc150>
   1d454:	ldr	r3, [fp, #-16]
   1d458:	ldr	r3, [r3, #132]	; 0x84
   1d45c:	mov	r0, r3
   1d460:	bl	31500 <__assert_fail@plt+0x201e0>
   1d464:	ldr	r3, [fp, #-16]
   1d468:	mov	r2, #0
   1d46c:	str	r2, [r3, #132]	; 0x84
   1d470:	ldr	r3, [fp, #-16]
   1d474:	ldr	r3, [r3, #52]	; 0x34
   1d478:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d47c:	ldr	r1, [pc, #444]	; 1d640 <__assert_fail@plt+0xc320>
   1d480:	mov	r0, r3
   1d484:	bl	1d650 <__assert_fail@plt+0xc330>
   1d488:	str	r0, [fp, #-8]
   1d48c:	ldr	r3, [fp, #-8]
   1d490:	cmp	r3, #0
   1d494:	movne	r3, #1
   1d498:	moveq	r3, #0
   1d49c:	uxtb	r3, r3
   1d4a0:	cmp	r3, #0
   1d4a4:	beq	1d4b0 <__assert_fail@plt+0xc190>
   1d4a8:	ldr	r3, [fp, #-8]
   1d4ac:	b	1d630 <__assert_fail@plt+0xc310>
   1d4b0:	ldr	r3, [fp, #-16]
   1d4b4:	ldr	r3, [r3, #52]	; 0x34
   1d4b8:	ldr	r2, [fp, #-16]
   1d4bc:	ldr	r1, [pc, #384]	; 1d644 <__assert_fail@plt+0xc324>
   1d4c0:	mov	r0, r3
   1d4c4:	bl	1d650 <__assert_fail@plt+0xc330>
   1d4c8:	str	r0, [fp, #-8]
   1d4cc:	ldr	r3, [fp, #-8]
   1d4d0:	cmp	r3, #0
   1d4d4:	movne	r3, #1
   1d4d8:	moveq	r3, #0
   1d4dc:	uxtb	r3, r3
   1d4e0:	cmp	r3, #0
   1d4e4:	beq	1d4f0 <__assert_fail@plt+0xc1d0>
   1d4e8:	ldr	r3, [fp, #-8]
   1d4ec:	b	1d630 <__assert_fail@plt+0xc310>
   1d4f0:	ldr	r3, [fp, #-16]
   1d4f4:	ldr	r3, [r3, #52]	; 0x34
   1d4f8:	ldr	r2, [fp, #-16]
   1d4fc:	ldr	r1, [pc, #324]	; 1d648 <__assert_fail@plt+0xc328>
   1d500:	mov	r0, r3
   1d504:	bl	1d764 <__assert_fail@plt+0xc444>
   1d508:	ldr	r3, [fp, #-16]
   1d50c:	ldr	r3, [r3, #52]	; 0x34
   1d510:	ldr	r2, [fp, #-16]
   1d514:	ldr	r1, [pc, #304]	; 1d64c <__assert_fail@plt+0xc32c>
   1d518:	mov	r0, r3
   1d51c:	bl	1d764 <__assert_fail@plt+0xc444>
   1d520:	str	r0, [fp, #-8]
   1d524:	ldr	r3, [fp, #-8]
   1d528:	cmp	r3, #0
   1d52c:	movne	r3, #1
   1d530:	moveq	r3, #0
   1d534:	uxtb	r3, r3
   1d538:	cmp	r3, #0
   1d53c:	beq	1d548 <__assert_fail@plt+0xc228>
   1d540:	ldr	r3, [fp, #-8]
   1d544:	b	1d630 <__assert_fail@plt+0xc310>
   1d548:	ldr	r0, [fp, #-16]
   1d54c:	bl	1eb2c <__assert_fail@plt+0xd80c>
   1d550:	str	r0, [fp, #-8]
   1d554:	ldr	r3, [fp, #-8]
   1d558:	cmp	r3, #0
   1d55c:	movne	r3, #1
   1d560:	moveq	r3, #0
   1d564:	uxtb	r3, r3
   1d568:	cmp	r3, #0
   1d56c:	beq	1d578 <__assert_fail@plt+0xc258>
   1d570:	ldr	r3, [fp, #-8]
   1d574:	b	1d630 <__assert_fail@plt+0xc310>
   1d578:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d57c:	ldrb	r3, [r3, #28]
   1d580:	and	r3, r3, #16
   1d584:	uxtb	r3, r3
   1d588:	cmp	r3, #0
   1d58c:	bne	1d5b8 <__assert_fail@plt+0xc298>
   1d590:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d594:	ldr	r3, [r3, #24]
   1d598:	cmp	r3, #0
   1d59c:	beq	1d5b8 <__assert_fail@plt+0xc298>
   1d5a0:	ldr	r3, [fp, #-16]
   1d5a4:	ldrb	r3, [r3, #88]	; 0x58
   1d5a8:	and	r3, r3, #1
   1d5ac:	uxtb	r3, r3
   1d5b0:	cmp	r3, #0
   1d5b4:	bne	1d5c8 <__assert_fail@plt+0xc2a8>
   1d5b8:	ldr	r3, [fp, #-16]
   1d5bc:	ldr	r3, [r3, #76]	; 0x4c
   1d5c0:	cmp	r3, #0
   1d5c4:	beq	1d62c <__assert_fail@plt+0xc30c>
   1d5c8:	ldr	r3, [fp, #-16]
   1d5cc:	ldr	r2, [r3, #8]
   1d5d0:	mov	r3, r2
   1d5d4:	lsl	r3, r3, #1
   1d5d8:	add	r3, r3, r2
   1d5dc:	lsl	r3, r3, #2
   1d5e0:	mov	r0, r3
   1d5e4:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   1d5e8:	mov	r3, r0
   1d5ec:	mov	r2, r3
   1d5f0:	ldr	r3, [fp, #-16]
   1d5f4:	str	r2, [r3, #28]
   1d5f8:	ldr	r3, [fp, #-16]
   1d5fc:	ldr	r3, [r3, #28]
   1d600:	cmp	r3, #0
   1d604:	moveq	r3, #1
   1d608:	movne	r3, #0
   1d60c:	uxtb	r3, r3
   1d610:	cmp	r3, #0
   1d614:	beq	1d620 <__assert_fail@plt+0xc300>
   1d618:	mov	r3, #12
   1d61c:	b	1d630 <__assert_fail@plt+0xc310>
   1d620:	ldr	r0, [fp, #-16]
   1d624:	bl	1e9b0 <__assert_fail@plt+0xd690>
   1d628:	str	r0, [fp, #-8]
   1d62c:	ldr	r3, [fp, #-8]
   1d630:	mov	r0, r3
   1d634:	sub	sp, fp, #4
   1d638:	pop	{fp, pc}
   1d63c:	andeq	sp, r1, r0, asr r8
   1d640:	ldrdeq	sp, [r1], -r0
   1d644:	andeq	sp, r1, r4, lsr #26
   1d648:	andeq	sp, r1, r4, asr #28
   1d64c:	andeq	sp, r1, r8, lsl pc
   1d650:	push	{fp, lr}
   1d654:	add	fp, sp, #4
   1d658:	sub	sp, sp, #32
   1d65c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d660:	str	r1, [fp, #-28]	; 0xffffffe4
   1d664:	str	r2, [fp, #-32]	; 0xffffffe0
   1d668:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d66c:	str	r3, [fp, #-8]
   1d670:	b	1d6a0 <__assert_fail@plt+0xc380>
   1d674:	ldr	r3, [fp, #-8]
   1d678:	ldr	r3, [r3, #4]
   1d67c:	cmp	r3, #0
   1d680:	beq	1d694 <__assert_fail@plt+0xc374>
   1d684:	ldr	r3, [fp, #-8]
   1d688:	ldr	r3, [r3, #4]
   1d68c:	str	r3, [fp, #-8]
   1d690:	b	1d6a0 <__assert_fail@plt+0xc380>
   1d694:	ldr	r3, [fp, #-8]
   1d698:	ldr	r3, [r3, #8]
   1d69c:	str	r3, [fp, #-8]
   1d6a0:	ldr	r3, [fp, #-8]
   1d6a4:	ldr	r3, [r3, #4]
   1d6a8:	cmp	r3, #0
   1d6ac:	bne	1d674 <__assert_fail@plt+0xc354>
   1d6b0:	ldr	r3, [fp, #-8]
   1d6b4:	ldr	r3, [r3, #8]
   1d6b8:	cmp	r3, #0
   1d6bc:	bne	1d674 <__assert_fail@plt+0xc354>
   1d6c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d6c4:	ldr	r1, [fp, #-8]
   1d6c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d6cc:	blx	r3
   1d6d0:	str	r0, [fp, #-12]
   1d6d4:	ldr	r3, [fp, #-12]
   1d6d8:	cmp	r3, #0
   1d6dc:	movne	r3, #1
   1d6e0:	moveq	r3, #0
   1d6e4:	uxtb	r3, r3
   1d6e8:	cmp	r3, #0
   1d6ec:	beq	1d6f8 <__assert_fail@plt+0xc3d8>
   1d6f0:	ldr	r3, [fp, #-12]
   1d6f4:	b	1d758 <__assert_fail@plt+0xc438>
   1d6f8:	ldr	r3, [fp, #-8]
   1d6fc:	ldr	r3, [r3]
   1d700:	cmp	r3, #0
   1d704:	bne	1d710 <__assert_fail@plt+0xc3f0>
   1d708:	mov	r3, #0
   1d70c:	b	1d758 <__assert_fail@plt+0xc438>
   1d710:	ldr	r3, [fp, #-8]
   1d714:	str	r3, [fp, #-16]
   1d718:	ldr	r3, [fp, #-8]
   1d71c:	ldr	r3, [r3]
   1d720:	str	r3, [fp, #-8]
   1d724:	ldr	r3, [fp, #-8]
   1d728:	ldr	r2, [r3, #8]
   1d72c:	ldr	r3, [fp, #-16]
   1d730:	cmp	r2, r3
   1d734:	beq	1d6c0 <__assert_fail@plt+0xc3a0>
   1d738:	ldr	r3, [fp, #-8]
   1d73c:	ldr	r3, [r3, #8]
   1d740:	cmp	r3, #0
   1d744:	beq	1d6c0 <__assert_fail@plt+0xc3a0>
   1d748:	ldr	r3, [fp, #-8]
   1d74c:	ldr	r3, [r3, #8]
   1d750:	str	r3, [fp, #-8]
   1d754:	b	1d6a0 <__assert_fail@plt+0xc380>
   1d758:	mov	r0, r3
   1d75c:	sub	sp, fp, #4
   1d760:	pop	{fp, pc}
   1d764:	push	{fp, lr}
   1d768:	add	fp, sp, #4
   1d76c:	sub	sp, sp, #32
   1d770:	str	r0, [fp, #-24]	; 0xffffffe8
   1d774:	str	r1, [fp, #-28]	; 0xffffffe4
   1d778:	str	r2, [fp, #-32]	; 0xffffffe0
   1d77c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d780:	str	r3, [fp, #-8]
   1d784:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d788:	ldr	r1, [fp, #-8]
   1d78c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d790:	blx	r3
   1d794:	str	r0, [fp, #-16]
   1d798:	ldr	r3, [fp, #-16]
   1d79c:	cmp	r3, #0
   1d7a0:	movne	r3, #1
   1d7a4:	moveq	r3, #0
   1d7a8:	uxtb	r3, r3
   1d7ac:	cmp	r3, #0
   1d7b0:	beq	1d7bc <__assert_fail@plt+0xc49c>
   1d7b4:	ldr	r3, [fp, #-16]
   1d7b8:	b	1d844 <__assert_fail@plt+0xc524>
   1d7bc:	ldr	r3, [fp, #-8]
   1d7c0:	ldr	r3, [r3, #4]
   1d7c4:	cmp	r3, #0
   1d7c8:	beq	1d7dc <__assert_fail@plt+0xc4bc>
   1d7cc:	ldr	r3, [fp, #-8]
   1d7d0:	ldr	r3, [r3, #4]
   1d7d4:	str	r3, [fp, #-8]
   1d7d8:	b	1d784 <__assert_fail@plt+0xc464>
   1d7dc:	mov	r3, #0
   1d7e0:	str	r3, [fp, #-12]
   1d7e4:	b	1d810 <__assert_fail@plt+0xc4f0>
   1d7e8:	ldr	r3, [fp, #-8]
   1d7ec:	str	r3, [fp, #-12]
   1d7f0:	ldr	r3, [fp, #-8]
   1d7f4:	ldr	r3, [r3]
   1d7f8:	str	r3, [fp, #-8]
   1d7fc:	ldr	r3, [fp, #-8]
   1d800:	cmp	r3, #0
   1d804:	bne	1d810 <__assert_fail@plt+0xc4f0>
   1d808:	mov	r3, #0
   1d80c:	b	1d844 <__assert_fail@plt+0xc524>
   1d810:	ldr	r3, [fp, #-8]
   1d814:	ldr	r2, [r3, #8]
   1d818:	ldr	r3, [fp, #-12]
   1d81c:	cmp	r2, r3
   1d820:	beq	1d7e8 <__assert_fail@plt+0xc4c8>
   1d824:	ldr	r3, [fp, #-8]
   1d828:	ldr	r3, [r3, #8]
   1d82c:	cmp	r3, #0
   1d830:	beq	1d7e8 <__assert_fail@plt+0xc4c8>
   1d834:	ldr	r3, [fp, #-8]
   1d838:	ldr	r3, [r3, #8]
   1d83c:	str	r3, [fp, #-8]
   1d840:	b	1d784 <__assert_fail@plt+0xc464>
   1d844:	mov	r0, r3
   1d848:	sub	sp, fp, #4
   1d84c:	pop	{fp, pc}
   1d850:	push	{fp}		; (str fp, [sp, #-4]!)
   1d854:	add	fp, sp, #0
   1d858:	sub	sp, sp, #28
   1d85c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d860:	str	r1, [fp, #-28]	; 0xffffffe4
   1d864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d868:	str	r3, [fp, #-8]
   1d86c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d870:	ldrb	r3, [r3, #24]
   1d874:	cmp	r3, #4
   1d878:	bne	1d8e0 <__assert_fail@plt+0xc5c0>
   1d87c:	ldr	r3, [fp, #-8]
   1d880:	ldr	r3, [r3, #132]	; 0x84
   1d884:	cmp	r3, #0
   1d888:	beq	1d8e0 <__assert_fail@plt+0xc5c0>
   1d88c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d890:	ldr	r3, [r3, #20]
   1d894:	str	r3, [fp, #-12]
   1d898:	ldr	r3, [fp, #-8]
   1d89c:	ldr	r2, [r3, #132]	; 0x84
   1d8a0:	ldr	r3, [fp, #-12]
   1d8a4:	lsl	r3, r3, #2
   1d8a8:	add	r3, r2, r3
   1d8ac:	ldr	r2, [r3]
   1d8b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d8b4:	str	r2, [r3, #20]
   1d8b8:	ldr	r3, [fp, #-8]
   1d8bc:	ldr	r3, [r3, #80]	; 0x50
   1d8c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d8c4:	ldr	r2, [r2, #20]
   1d8c8:	mov	r1, #1
   1d8cc:	lsl	r2, r1, r2
   1d8d0:	orr	r2, r3, r2
   1d8d4:	ldr	r3, [fp, #-8]
   1d8d8:	str	r2, [r3, #80]	; 0x50
   1d8dc:	b	1d9bc <__assert_fail@plt+0xc69c>
   1d8e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d8e4:	ldrb	r3, [r3, #24]
   1d8e8:	cmp	r3, #17
   1d8ec:	bne	1d9bc <__assert_fail@plt+0xc69c>
   1d8f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d8f4:	ldr	r3, [r3, #4]
   1d8f8:	cmp	r3, #0
   1d8fc:	beq	1d9bc <__assert_fail@plt+0xc69c>
   1d900:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d904:	ldr	r3, [r3, #4]
   1d908:	ldrb	r3, [r3, #24]
   1d90c:	cmp	r3, #17
   1d910:	bne	1d9bc <__assert_fail@plt+0xc69c>
   1d914:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d918:	ldr	r3, [r3, #4]
   1d91c:	ldr	r3, [r3, #20]
   1d920:	str	r3, [fp, #-16]
   1d924:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d928:	ldr	r3, [r3, #4]
   1d92c:	ldr	r2, [r3, #4]
   1d930:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d934:	str	r2, [r3, #4]
   1d938:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d93c:	ldr	r3, [r3, #4]
   1d940:	cmp	r3, #0
   1d944:	beq	1d958 <__assert_fail@plt+0xc638>
   1d948:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d94c:	ldr	r3, [r3, #4]
   1d950:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d954:	str	r2, [r3]
   1d958:	ldr	r3, [fp, #-8]
   1d95c:	ldr	r2, [r3, #132]	; 0x84
   1d960:	ldr	r3, [fp, #-16]
   1d964:	lsl	r3, r3, #2
   1d968:	add	r3, r2, r3
   1d96c:	ldr	r2, [fp, #-8]
   1d970:	ldr	r1, [r2, #132]	; 0x84
   1d974:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d978:	ldr	r2, [r2, #20]
   1d97c:	lsl	r2, r2, #2
   1d980:	add	r2, r1, r2
   1d984:	ldr	r2, [r2]
   1d988:	str	r2, [r3]
   1d98c:	ldr	r3, [fp, #-16]
   1d990:	cmp	r3, #31
   1d994:	bgt	1d9bc <__assert_fail@plt+0xc69c>
   1d998:	ldr	r3, [fp, #-8]
   1d99c:	ldr	r2, [r3, #80]	; 0x50
   1d9a0:	mov	r1, #1
   1d9a4:	ldr	r3, [fp, #-16]
   1d9a8:	lsl	r3, r1, r3
   1d9ac:	mvn	r3, r3
   1d9b0:	and	r2, r2, r3
   1d9b4:	ldr	r3, [fp, #-8]
   1d9b8:	str	r2, [r3, #80]	; 0x50
   1d9bc:	mov	r3, #0
   1d9c0:	mov	r0, r3
   1d9c4:	add	sp, fp, #0
   1d9c8:	pop	{fp}		; (ldr fp, [sp], #4)
   1d9cc:	bx	lr
   1d9d0:	push	{fp, lr}
   1d9d4:	add	fp, sp, #4
   1d9d8:	sub	sp, sp, #16
   1d9dc:	str	r0, [fp, #-16]
   1d9e0:	str	r1, [fp, #-20]	; 0xffffffec
   1d9e4:	ldr	r3, [fp, #-16]
   1d9e8:	str	r3, [fp, #-8]
   1d9ec:	mov	r3, #0
   1d9f0:	str	r3, [fp, #-12]
   1d9f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9f8:	ldr	r3, [r3, #4]
   1d9fc:	cmp	r3, #0
   1da00:	beq	1da5c <__assert_fail@plt+0xc73c>
   1da04:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da08:	ldr	r3, [r3, #4]
   1da0c:	ldrb	r3, [r3, #24]
   1da10:	cmp	r3, #17
   1da14:	bne	1da5c <__assert_fail@plt+0xc73c>
   1da18:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da1c:	ldr	r2, [r3, #4]
   1da20:	sub	r3, fp, #12
   1da24:	ldr	r1, [fp, #-8]
   1da28:	mov	r0, r3
   1da2c:	bl	1dad4 <__assert_fail@plt+0xc7b4>
   1da30:	mov	r2, r0
   1da34:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da38:	str	r2, [r3, #4]
   1da3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da40:	ldr	r3, [r3, #4]
   1da44:	cmp	r3, #0
   1da48:	beq	1da5c <__assert_fail@plt+0xc73c>
   1da4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da50:	ldr	r3, [r3, #4]
   1da54:	ldr	r2, [fp, #-20]	; 0xffffffec
   1da58:	str	r2, [r3]
   1da5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da60:	ldr	r3, [r3, #8]
   1da64:	cmp	r3, #0
   1da68:	beq	1dac4 <__assert_fail@plt+0xc7a4>
   1da6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da70:	ldr	r3, [r3, #8]
   1da74:	ldrb	r3, [r3, #24]
   1da78:	cmp	r3, #17
   1da7c:	bne	1dac4 <__assert_fail@plt+0xc7a4>
   1da80:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da84:	ldr	r2, [r3, #8]
   1da88:	sub	r3, fp, #12
   1da8c:	ldr	r1, [fp, #-8]
   1da90:	mov	r0, r3
   1da94:	bl	1dad4 <__assert_fail@plt+0xc7b4>
   1da98:	mov	r2, r0
   1da9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1daa0:	str	r2, [r3, #8]
   1daa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1daa8:	ldr	r3, [r3, #8]
   1daac:	cmp	r3, #0
   1dab0:	beq	1dac4 <__assert_fail@plt+0xc7a4>
   1dab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dab8:	ldr	r3, [r3, #8]
   1dabc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dac0:	str	r2, [r3]
   1dac4:	ldr	r3, [fp, #-12]
   1dac8:	mov	r0, r3
   1dacc:	sub	sp, fp, #4
   1dad0:	pop	{fp, pc}
   1dad4:	push	{fp, lr}
   1dad8:	add	fp, sp, #4
   1dadc:	sub	sp, sp, #40	; 0x28
   1dae0:	str	r0, [fp, #-32]	; 0xffffffe0
   1dae4:	str	r1, [fp, #-36]	; 0xffffffdc
   1dae8:	str	r2, [fp, #-40]	; 0xffffffd8
   1daec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1daf0:	ldr	r3, [r3]
   1daf4:	str	r3, [fp, #-8]
   1daf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dafc:	ldr	r3, [r3, #4]
   1db00:	str	r3, [fp, #-12]
   1db04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1db08:	ldrb	r3, [r3, #28]
   1db0c:	and	r3, r3, #16
   1db10:	uxtb	r3, r3
   1db14:	cmp	r3, #0
   1db18:	beq	1db68 <__assert_fail@plt+0xc848>
   1db1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1db20:	ldr	r3, [r3, #4]
   1db24:	cmp	r3, #0
   1db28:	beq	1db68 <__assert_fail@plt+0xc848>
   1db2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1db30:	ldr	r3, [r3, #20]
   1db34:	cmp	r3, #31
   1db38:	bgt	1db5c <__assert_fail@plt+0xc83c>
   1db3c:	ldr	r3, [fp, #-8]
   1db40:	ldr	r2, [r3, #80]	; 0x50
   1db44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1db48:	ldr	r3, [r3, #20]
   1db4c:	lsr	r3, r2, r3
   1db50:	and	r3, r3, #1
   1db54:	cmp	r3, #0
   1db58:	bne	1db68 <__assert_fail@plt+0xc848>
   1db5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1db60:	ldr	r3, [r3, #4]
   1db64:	b	1dd18 <__assert_fail@plt+0xc9f8>
   1db68:	mov	r3, #8
   1db6c:	mov	r2, #0
   1db70:	mov	r1, #0
   1db74:	ldr	r0, [fp, #-8]
   1db78:	bl	23cdc <__assert_fail@plt+0x129bc>
   1db7c:	str	r0, [fp, #-16]
   1db80:	mov	r3, #9
   1db84:	mov	r2, #0
   1db88:	mov	r1, #0
   1db8c:	ldr	r0, [fp, #-8]
   1db90:	bl	23cdc <__assert_fail@plt+0x129bc>
   1db94:	str	r0, [fp, #-20]	; 0xffffffec
   1db98:	ldr	r3, [fp, #-12]
   1db9c:	cmp	r3, #0
   1dba0:	beq	1dbc0 <__assert_fail@plt+0xc8a0>
   1dba4:	mov	r3, #16
   1dba8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dbac:	ldr	r1, [fp, #-12]
   1dbb0:	ldr	r0, [fp, #-8]
   1dbb4:	bl	23cdc <__assert_fail@plt+0x129bc>
   1dbb8:	mov	r3, r0
   1dbbc:	b	1dbc4 <__assert_fail@plt+0xc8a4>
   1dbc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dbc4:	str	r3, [fp, #-24]	; 0xffffffe8
   1dbc8:	mov	r3, #16
   1dbcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dbd0:	ldr	r1, [fp, #-16]
   1dbd4:	ldr	r0, [fp, #-8]
   1dbd8:	bl	23cdc <__assert_fail@plt+0x129bc>
   1dbdc:	str	r0, [fp, #-28]	; 0xffffffe4
   1dbe0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dbe4:	cmp	r3, #0
   1dbe8:	moveq	r3, #1
   1dbec:	movne	r3, #0
   1dbf0:	uxtb	r3, r3
   1dbf4:	cmp	r3, #0
   1dbf8:	bne	1dc18 <__assert_fail@plt+0xc8f8>
   1dbfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dc00:	cmp	r3, #0
   1dc04:	moveq	r3, #1
   1dc08:	movne	r3, #0
   1dc0c:	uxtb	r3, r3
   1dc10:	cmp	r3, #0
   1dc14:	beq	1dc20 <__assert_fail@plt+0xc900>
   1dc18:	mov	r3, #1
   1dc1c:	b	1dc24 <__assert_fail@plt+0xc904>
   1dc20:	mov	r3, #0
   1dc24:	cmp	r3, #0
   1dc28:	bne	1dc48 <__assert_fail@plt+0xc928>
   1dc2c:	ldr	r3, [fp, #-16]
   1dc30:	cmp	r3, #0
   1dc34:	moveq	r3, #1
   1dc38:	movne	r3, #0
   1dc3c:	uxtb	r3, r3
   1dc40:	cmp	r3, #0
   1dc44:	beq	1dc50 <__assert_fail@plt+0xc930>
   1dc48:	mov	r3, #1
   1dc4c:	b	1dc54 <__assert_fail@plt+0xc934>
   1dc50:	mov	r3, #0
   1dc54:	cmp	r3, #0
   1dc58:	bne	1dc78 <__assert_fail@plt+0xc958>
   1dc5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dc60:	cmp	r3, #0
   1dc64:	moveq	r3, #1
   1dc68:	movne	r3, #0
   1dc6c:	uxtb	r3, r3
   1dc70:	cmp	r3, #0
   1dc74:	beq	1dc8c <__assert_fail@plt+0xc96c>
   1dc78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dc7c:	mov	r2, #12
   1dc80:	str	r2, [r3]
   1dc84:	mov	r3, #0
   1dc88:	b	1dd18 <__assert_fail@plt+0xc9f8>
   1dc8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dc90:	ldr	r2, [r3, #20]
   1dc94:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dc98:	str	r2, [r3, #20]
   1dc9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dca0:	ldr	r2, [r3, #20]
   1dca4:	ldr	r3, [fp, #-16]
   1dca8:	str	r2, [r3, #20]
   1dcac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dcb0:	ldrb	r3, [r3, #26]
   1dcb4:	lsr	r3, r3, #3
   1dcb8:	and	r3, r3, #1
   1dcbc:	uxtb	r3, r3
   1dcc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dcc4:	ldrb	r2, [r1, #26]
   1dcc8:	and	r3, r3, #1
   1dccc:	bic	r2, r2, #8
   1dcd0:	lsl	r3, r3, #3
   1dcd4:	orr	r3, r3, r2
   1dcd8:	mov	r2, r3
   1dcdc:	strb	r2, [r1, #26]
   1dce0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dce4:	ldrb	r3, [r3, #26]
   1dce8:	lsr	r3, r3, #3
   1dcec:	and	r3, r3, #1
   1dcf0:	uxtb	r3, r3
   1dcf4:	ldr	r1, [fp, #-16]
   1dcf8:	ldrb	r2, [r1, #26]
   1dcfc:	and	r3, r3, #1
   1dd00:	bic	r2, r2, #8
   1dd04:	lsl	r3, r3, #3
   1dd08:	orr	r3, r3, r2
   1dd0c:	mov	r2, r3
   1dd10:	strb	r2, [r1, #26]
   1dd14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dd18:	mov	r0, r3
   1dd1c:	sub	sp, fp, #4
   1dd20:	pop	{fp, pc}
   1dd24:	push	{fp, lr}
   1dd28:	add	fp, sp, #4
   1dd2c:	sub	sp, sp, #16
   1dd30:	str	r0, [fp, #-16]
   1dd34:	str	r1, [fp, #-20]	; 0xffffffec
   1dd38:	ldr	r3, [fp, #-16]
   1dd3c:	str	r3, [fp, #-8]
   1dd40:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd44:	ldrb	r3, [r3, #24]
   1dd48:	cmp	r3, #16
   1dd4c:	bne	1dd7c <__assert_fail@plt+0xca5c>
   1dd50:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd54:	ldr	r3, [r3, #4]
   1dd58:	ldr	r2, [r3, #12]
   1dd5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd60:	str	r2, [r3, #12]
   1dd64:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd68:	ldr	r3, [r3, #4]
   1dd6c:	ldr	r2, [r3, #28]
   1dd70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd74:	str	r2, [r3, #28]
   1dd78:	b	1de30 <__assert_fail@plt+0xcb10>
   1dd7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd80:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dd84:	str	r2, [r3, #12]
   1dd88:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd8c:	add	r3, r3, #20
   1dd90:	ldm	r3, {r1, r2}
   1dd94:	ldr	r0, [fp, #-8]
   1dd98:	bl	19fdc <__assert_fail@plt+0x8cbc>
   1dd9c:	mov	r2, r0
   1dda0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dda4:	str	r2, [r3, #28]
   1dda8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ddac:	ldr	r3, [r3, #28]
   1ddb0:	cmn	r3, #1
   1ddb4:	moveq	r3, #1
   1ddb8:	movne	r3, #0
   1ddbc:	uxtb	r3, r3
   1ddc0:	cmp	r3, #0
   1ddc4:	beq	1ddd0 <__assert_fail@plt+0xcab0>
   1ddc8:	mov	r3, #12
   1ddcc:	b	1de34 <__assert_fail@plt+0xcb14>
   1ddd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ddd4:	ldrb	r3, [r3, #24]
   1ddd8:	cmp	r3, #12
   1dddc:	bne	1de30 <__assert_fail@plt+0xcb10>
   1dde0:	ldr	r3, [fp, #-8]
   1dde4:	ldr	r2, [r3]
   1dde8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ddec:	ldr	r3, [r3, #28]
   1ddf0:	lsl	r3, r3, #3
   1ddf4:	add	r0, r2, r3
   1ddf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ddfc:	ldr	r3, [r3, #20]
   1de00:	uxth	r3, r3
   1de04:	lsl	r3, r3, #22
   1de08:	lsr	r3, r3, #22
   1de0c:	uxth	r1, r3
   1de10:	ldr	r2, [r0, #4]
   1de14:	ldr	r3, [pc, #36]	; 1de40 <__assert_fail@plt+0xcb20>
   1de18:	and	r1, r1, r3
   1de1c:	lsl	r3, r3, #8
   1de20:	bic	r3, r2, r3
   1de24:	lsl	r1, r1, #8
   1de28:	orr	r2, r1, r3
   1de2c:	str	r2, [r0, #4]
   1de30:	mov	r3, #0
   1de34:	mov	r0, r3
   1de38:	sub	sp, fp, #4
   1de3c:	pop	{fp, pc}
   1de40:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1de44:	push	{fp}		; (str fp, [sp, #-4]!)
   1de48:	add	fp, sp, #0
   1de4c:	sub	sp, sp, #12
   1de50:	str	r0, [fp, #-8]
   1de54:	str	r1, [fp, #-12]
   1de58:	ldr	r3, [fp, #-12]
   1de5c:	ldrb	r3, [r3, #24]
   1de60:	cmp	r3, #11
   1de64:	beq	1de74 <__assert_fail@plt+0xcb54>
   1de68:	cmp	r3, #16
   1de6c:	beq	1de88 <__assert_fail@plt+0xcb68>
   1de70:	b	1deb8 <__assert_fail@plt+0xcb98>
   1de74:	ldr	r3, [fp, #-12]
   1de78:	ldr	r3, [r3, #4]
   1de7c:	ldr	r2, [fp, #-12]
   1de80:	str	r2, [r3, #16]
   1de84:	b	1df04 <__assert_fail@plt+0xcbe4>
   1de88:	ldr	r3, [fp, #-12]
   1de8c:	ldr	r3, [r3, #4]
   1de90:	ldr	r2, [fp, #-12]
   1de94:	ldr	r2, [r2, #8]
   1de98:	ldr	r2, [r2, #12]
   1de9c:	str	r2, [r3, #16]
   1dea0:	ldr	r3, [fp, #-12]
   1dea4:	ldr	r3, [r3, #8]
   1dea8:	ldr	r2, [fp, #-12]
   1deac:	ldr	r2, [r2, #16]
   1deb0:	str	r2, [r3, #16]
   1deb4:	b	1df04 <__assert_fail@plt+0xcbe4>
   1deb8:	ldr	r3, [fp, #-12]
   1debc:	ldr	r3, [r3, #4]
   1dec0:	cmp	r3, #0
   1dec4:	beq	1dedc <__assert_fail@plt+0xcbbc>
   1dec8:	ldr	r3, [fp, #-12]
   1decc:	ldr	r3, [r3, #4]
   1ded0:	ldr	r2, [fp, #-12]
   1ded4:	ldr	r2, [r2, #16]
   1ded8:	str	r2, [r3, #16]
   1dedc:	ldr	r3, [fp, #-12]
   1dee0:	ldr	r3, [r3, #8]
   1dee4:	cmp	r3, #0
   1dee8:	beq	1df00 <__assert_fail@plt+0xcbe0>
   1deec:	ldr	r3, [fp, #-12]
   1def0:	ldr	r3, [r3, #8]
   1def4:	ldr	r2, [fp, #-12]
   1def8:	ldr	r2, [r2, #16]
   1defc:	str	r2, [r3, #16]
   1df00:	nop			; (mov r0, r0)
   1df04:	mov	r3, #0
   1df08:	mov	r0, r3
   1df0c:	add	sp, fp, #0
   1df10:	pop	{fp}		; (ldr fp, [sp], #4)
   1df14:	bx	lr
   1df18:	push	{fp, lr}
   1df1c:	add	fp, sp, #4
   1df20:	sub	sp, sp, #32
   1df24:	str	r0, [fp, #-32]	; 0xffffffe0
   1df28:	str	r1, [fp, #-36]	; 0xffffffdc
   1df2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1df30:	str	r3, [fp, #-20]	; 0xffffffec
   1df34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1df38:	ldr	r3, [r3, #28]
   1df3c:	str	r3, [fp, #-24]	; 0xffffffe8
   1df40:	mov	r3, #0
   1df44:	str	r3, [fp, #-8]
   1df48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1df4c:	ldrb	r3, [r3, #24]
   1df50:	sub	r3, r3, #2
   1df54:	cmp	r3, #14
   1df58:	ldrls	pc, [pc, r3, lsl #2]
   1df5c:	b	1e130 <__assert_fail@plt+0xce10>
   1df60:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1df64:	andeq	lr, r1, r0, lsr r1
   1df68:	strheq	lr, [r1], -r4
   1df6c:	andeq	lr, r1, r0, lsr r1
   1df70:	andeq	lr, r1, r0, lsr r1
   1df74:	andeq	lr, r1, r0, lsr r1
   1df78:	andeq	lr, r1, r4, ror r0
   1df7c:	andeq	lr, r1, r4, ror r0
   1df80:	andeq	sp, r1, ip, lsr #31
   1df84:	andeq	sp, r1, ip, lsr #31
   1df88:	andeq	lr, r1, r4, ror r0
   1df8c:	andeq	lr, r1, r0, lsr r1
   1df90:	andeq	lr, r1, r0, lsr r1
   1df94:	andeq	lr, r1, r0, lsr r1
   1df98:	andeq	lr, r1, r8, ror #2
   1df9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dfa0:	ldr	r3, [r3, #16]
   1dfa4:	cmp	r3, #0
   1dfa8:	b	1e174 <__assert_fail@plt+0xce54>
   1dfac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dfb0:	ldrb	r3, [r2, #88]	; 0x58
   1dfb4:	orr	r3, r3, #1
   1dfb8:	strb	r3, [r2, #88]	; 0x58
   1dfbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dfc0:	ldr	r3, [r3, #4]
   1dfc4:	cmp	r3, #0
   1dfc8:	beq	1dfe4 <__assert_fail@plt+0xccc4>
   1dfcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dfd0:	ldr	r3, [r3, #4]
   1dfd4:	ldr	r3, [r3, #12]
   1dfd8:	ldr	r3, [r3, #28]
   1dfdc:	str	r3, [fp, #-12]
   1dfe0:	b	1dff4 <__assert_fail@plt+0xccd4>
   1dfe4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dfe8:	ldr	r3, [r3, #16]
   1dfec:	ldr	r3, [r3, #28]
   1dff0:	str	r3, [fp, #-12]
   1dff4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dff8:	ldr	r3, [r3, #8]
   1dffc:	cmp	r3, #0
   1e000:	beq	1e01c <__assert_fail@plt+0xccfc>
   1e004:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e008:	ldr	r3, [r3, #8]
   1e00c:	ldr	r3, [r3, #12]
   1e010:	ldr	r3, [r3, #28]
   1e014:	str	r3, [fp, #-16]
   1e018:	b	1e02c <__assert_fail@plt+0xcd0c>
   1e01c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e020:	ldr	r3, [r3, #16]
   1e024:	ldr	r3, [r3, #28]
   1e028:	str	r3, [fp, #-16]
   1e02c:	ldr	r3, [fp, #-12]
   1e030:	cmp	r3, #0
   1e034:	ldr	r3, [fp, #-16]
   1e038:	cmp	r3, #0
   1e03c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e040:	ldr	r1, [r3, #20]
   1e044:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e048:	mov	r3, r2
   1e04c:	lsl	r3, r3, #1
   1e050:	add	r3, r3, r2
   1e054:	lsl	r3, r3, #2
   1e058:	add	r3, r1, r3
   1e05c:	ldr	r2, [fp, #-16]
   1e060:	ldr	r1, [fp, #-12]
   1e064:	mov	r0, r3
   1e068:	bl	18bc4 <__assert_fail@plt+0x78a4>
   1e06c:	str	r0, [fp, #-8]
   1e070:	b	1e174 <__assert_fail@plt+0xce54>
   1e074:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e078:	ldr	r1, [r3, #20]
   1e07c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e080:	mov	r3, r2
   1e084:	lsl	r3, r3, #1
   1e088:	add	r3, r3, r2
   1e08c:	lsl	r3, r3, #2
   1e090:	add	r2, r1, r3
   1e094:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e098:	ldr	r3, [r3, #16]
   1e09c:	ldr	r3, [r3, #28]
   1e0a0:	mov	r1, r3
   1e0a4:	mov	r0, r2
   1e0a8:	bl	18b1c <__assert_fail@plt+0x77fc>
   1e0ac:	str	r0, [fp, #-8]
   1e0b0:	b	1e174 <__assert_fail@plt+0xce54>
   1e0b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e0b8:	ldr	r2, [r3, #12]
   1e0bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0c0:	lsl	r3, r3, #2
   1e0c4:	add	r3, r2, r3
   1e0c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1e0cc:	ldr	r2, [r2, #16]
   1e0d0:	ldr	r2, [r2, #28]
   1e0d4:	str	r2, [r3]
   1e0d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e0dc:	ldrb	r3, [r3, #24]
   1e0e0:	cmp	r3, #4
   1e0e4:	bne	1e170 <__assert_fail@plt+0xce50>
   1e0e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e0ec:	ldr	r1, [r3, #20]
   1e0f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e0f4:	mov	r3, r2
   1e0f8:	lsl	r3, r3, #1
   1e0fc:	add	r3, r3, r2
   1e100:	lsl	r3, r3, #2
   1e104:	add	r0, r1, r3
   1e108:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e10c:	ldr	r2, [r3, #12]
   1e110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e114:	lsl	r3, r3, #2
   1e118:	add	r3, r2, r3
   1e11c:	ldr	r3, [r3]
   1e120:	mov	r1, r3
   1e124:	bl	18b1c <__assert_fail@plt+0x77fc>
   1e128:	str	r0, [fp, #-8]
   1e12c:	b	1e170 <__assert_fail@plt+0xce50>
   1e130:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e134:	ldrb	r3, [r3, #24]
   1e138:	and	r3, r3, #8
   1e13c:	cmp	r3, #0
   1e140:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e144:	ldr	r2, [r3, #12]
   1e148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e14c:	lsl	r3, r3, #2
   1e150:	add	r3, r2, r3
   1e154:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1e158:	ldr	r2, [r2, #16]
   1e15c:	ldr	r2, [r2, #28]
   1e160:	str	r2, [r3]
   1e164:	b	1e174 <__assert_fail@plt+0xce54>
   1e168:	nop			; (mov r0, r0)
   1e16c:	b	1e174 <__assert_fail@plt+0xce54>
   1e170:	nop			; (mov r0, r0)
   1e174:	ldr	r3, [fp, #-8]
   1e178:	mov	r0, r3
   1e17c:	sub	sp, fp, #4
   1e180:	pop	{fp, pc}
   1e184:	push	{fp, lr}
   1e188:	add	fp, sp, #4
   1e18c:	sub	sp, sp, #56	; 0x38
   1e190:	str	r0, [fp, #-40]	; 0xffffffd8
   1e194:	str	r1, [fp, #-44]	; 0xffffffd4
   1e198:	str	r2, [fp, #-48]	; 0xffffffd0
   1e19c:	str	r3, [fp, #-52]	; 0xffffffcc
   1e1a0:	ldr	r3, [fp, #4]
   1e1a4:	str	r3, [fp, #-16]
   1e1a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e1ac:	str	r3, [fp, #-8]
   1e1b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e1b4:	str	r3, [fp, #-12]
   1e1b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e1bc:	ldr	r2, [r3]
   1e1c0:	ldr	r3, [fp, #-8]
   1e1c4:	lsl	r3, r3, #3
   1e1c8:	add	r3, r2, r3
   1e1cc:	ldrb	r3, [r3, #4]
   1e1d0:	cmp	r3, #4
   1e1d4:	bne	1e2d4 <__assert_fail@plt+0xcfb4>
   1e1d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e1dc:	ldr	r2, [r3, #12]
   1e1e0:	ldr	r3, [fp, #-8]
   1e1e4:	lsl	r3, r3, #2
   1e1e8:	add	r3, r2, r3
   1e1ec:	ldr	r3, [r3]
   1e1f0:	str	r3, [fp, #-20]	; 0xffffffec
   1e1f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e1f8:	ldr	r1, [r3, #20]
   1e1fc:	ldr	r2, [fp, #-12]
   1e200:	mov	r3, r2
   1e204:	lsl	r3, r3, #1
   1e208:	add	r3, r3, r2
   1e20c:	lsl	r3, r3, #2
   1e210:	add	r3, r1, r3
   1e214:	mov	r2, #0
   1e218:	str	r2, [r3, #4]
   1e21c:	ldr	r2, [fp, #-16]
   1e220:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e224:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e228:	bl	1e834 <__assert_fail@plt+0xd514>
   1e22c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e230:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e234:	cmn	r3, #1
   1e238:	moveq	r3, #1
   1e23c:	movne	r3, #0
   1e240:	uxtb	r3, r3
   1e244:	cmp	r3, #0
   1e248:	beq	1e254 <__assert_fail@plt+0xcf34>
   1e24c:	mov	r3, #12
   1e250:	b	1e744 <__assert_fail@plt+0xd424>
   1e254:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e258:	ldr	r2, [r3, #12]
   1e25c:	ldr	r3, [fp, #-12]
   1e260:	lsl	r3, r3, #2
   1e264:	add	r3, r2, r3
   1e268:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e26c:	ldr	r1, [r2, #12]
   1e270:	ldr	r2, [fp, #-8]
   1e274:	lsl	r2, r2, #2
   1e278:	add	r2, r1, r2
   1e27c:	ldr	r2, [r2]
   1e280:	str	r2, [r3]
   1e284:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e288:	ldr	r1, [r3, #20]
   1e28c:	ldr	r2, [fp, #-12]
   1e290:	mov	r3, r2
   1e294:	lsl	r3, r3, #1
   1e298:	add	r3, r3, r2
   1e29c:	lsl	r3, r3, #2
   1e2a0:	add	r3, r1, r3
   1e2a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e2a8:	mov	r0, r3
   1e2ac:	bl	19a2c <__assert_fail@plt+0x870c>
   1e2b0:	mov	r3, r0
   1e2b4:	strb	r3, [fp, #-25]	; 0xffffffe7
   1e2b8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1e2bc:	eor	r3, r3, #1
   1e2c0:	uxtb	r3, r3
   1e2c4:	cmp	r3, #0
   1e2c8:	beq	1e728 <__assert_fail@plt+0xd408>
   1e2cc:	mov	r3, #12
   1e2d0:	b	1e744 <__assert_fail@plt+0xd424>
   1e2d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e2d8:	ldr	r1, [r3, #20]
   1e2dc:	ldr	r2, [fp, #-8]
   1e2e0:	mov	r3, r2
   1e2e4:	lsl	r3, r3, #1
   1e2e8:	add	r3, r3, r2
   1e2ec:	lsl	r3, r3, #2
   1e2f0:	add	r3, r1, r3
   1e2f4:	ldr	r3, [r3, #4]
   1e2f8:	cmp	r3, #0
   1e2fc:	bne	1e334 <__assert_fail@plt+0xd014>
   1e300:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e304:	ldr	r2, [r3, #12]
   1e308:	ldr	r3, [fp, #-12]
   1e30c:	lsl	r3, r3, #2
   1e310:	add	r3, r2, r3
   1e314:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e318:	ldr	r1, [r2, #12]
   1e31c:	ldr	r2, [fp, #-8]
   1e320:	lsl	r2, r2, #2
   1e324:	add	r2, r1, r2
   1e328:	ldr	r2, [r2]
   1e32c:	str	r2, [r3]
   1e330:	b	1e740 <__assert_fail@plt+0xd420>
   1e334:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e338:	ldr	r1, [r3, #20]
   1e33c:	ldr	r2, [fp, #-8]
   1e340:	mov	r3, r2
   1e344:	lsl	r3, r3, #1
   1e348:	add	r3, r3, r2
   1e34c:	lsl	r3, r3, #2
   1e350:	add	r3, r1, r3
   1e354:	ldr	r3, [r3, #4]
   1e358:	cmp	r3, #1
   1e35c:	bne	1e4e4 <__assert_fail@plt+0xd1c4>
   1e360:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e364:	ldr	r1, [r3, #20]
   1e368:	ldr	r2, [fp, #-8]
   1e36c:	mov	r3, r2
   1e370:	lsl	r3, r3, #1
   1e374:	add	r3, r3, r2
   1e378:	lsl	r3, r3, #2
   1e37c:	add	r3, r1, r3
   1e380:	ldr	r3, [r3, #8]
   1e384:	ldr	r3, [r3]
   1e388:	str	r3, [fp, #-20]	; 0xffffffec
   1e38c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e390:	ldr	r1, [r3, #20]
   1e394:	ldr	r2, [fp, #-12]
   1e398:	mov	r3, r2
   1e39c:	lsl	r3, r3, #1
   1e3a0:	add	r3, r3, r2
   1e3a4:	lsl	r3, r3, #2
   1e3a8:	add	r3, r1, r3
   1e3ac:	mov	r2, #0
   1e3b0:	str	r2, [r3, #4]
   1e3b4:	ldr	r2, [fp, #-8]
   1e3b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e3bc:	cmp	r2, r3
   1e3c0:	bne	1e424 <__assert_fail@plt+0xd104>
   1e3c4:	ldr	r2, [fp, #-12]
   1e3c8:	ldr	r3, [fp, #-8]
   1e3cc:	cmp	r2, r3
   1e3d0:	beq	1e424 <__assert_fail@plt+0xd104>
   1e3d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e3d8:	ldr	r1, [r3, #20]
   1e3dc:	ldr	r2, [fp, #-12]
   1e3e0:	mov	r3, r2
   1e3e4:	lsl	r3, r3, #1
   1e3e8:	add	r3, r3, r2
   1e3ec:	lsl	r3, r3, #2
   1e3f0:	add	r3, r1, r3
   1e3f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e3f8:	mov	r0, r3
   1e3fc:	bl	19a2c <__assert_fail@plt+0x870c>
   1e400:	mov	r3, r0
   1e404:	strb	r3, [fp, #-25]	; 0xffffffe7
   1e408:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1e40c:	eor	r3, r3, #1
   1e410:	uxtb	r3, r3
   1e414:	cmp	r3, #0
   1e418:	beq	1e73c <__assert_fail@plt+0xd41c>
   1e41c:	mov	r3, #12
   1e420:	b	1e744 <__assert_fail@plt+0xd424>
   1e424:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e428:	ldr	r2, [r3]
   1e42c:	ldr	r3, [fp, #-8]
   1e430:	lsl	r3, r3, #3
   1e434:	add	r3, r2, r3
   1e438:	ldr	r3, [r3, #4]
   1e43c:	lsr	r3, r3, #8
   1e440:	lsl	r3, r3, #22
   1e444:	lsr	r3, r3, #22
   1e448:	uxth	r3, r3
   1e44c:	mov	r2, r3
   1e450:	ldr	r3, [fp, #-16]
   1e454:	orr	r3, r3, r2
   1e458:	str	r3, [fp, #-16]
   1e45c:	ldr	r2, [fp, #-16]
   1e460:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e464:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e468:	bl	1e834 <__assert_fail@plt+0xd514>
   1e46c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e474:	cmn	r3, #1
   1e478:	moveq	r3, #1
   1e47c:	movne	r3, #0
   1e480:	uxtb	r3, r3
   1e484:	cmp	r3, #0
   1e488:	beq	1e494 <__assert_fail@plt+0xd174>
   1e48c:	mov	r3, #12
   1e490:	b	1e744 <__assert_fail@plt+0xd424>
   1e494:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e498:	ldr	r1, [r3, #20]
   1e49c:	ldr	r2, [fp, #-12]
   1e4a0:	mov	r3, r2
   1e4a4:	lsl	r3, r3, #1
   1e4a8:	add	r3, r3, r2
   1e4ac:	lsl	r3, r3, #2
   1e4b0:	add	r3, r1, r3
   1e4b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e4b8:	mov	r0, r3
   1e4bc:	bl	19a2c <__assert_fail@plt+0x870c>
   1e4c0:	mov	r3, r0
   1e4c4:	strb	r3, [fp, #-25]	; 0xffffffe7
   1e4c8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1e4cc:	eor	r3, r3, #1
   1e4d0:	uxtb	r3, r3
   1e4d4:	cmp	r3, #0
   1e4d8:	beq	1e728 <__assert_fail@plt+0xd408>
   1e4dc:	mov	r3, #12
   1e4e0:	b	1e744 <__assert_fail@plt+0xd424>
   1e4e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e4e8:	ldr	r1, [r3, #20]
   1e4ec:	ldr	r2, [fp, #-8]
   1e4f0:	mov	r3, r2
   1e4f4:	lsl	r3, r3, #1
   1e4f8:	add	r3, r3, r2
   1e4fc:	lsl	r3, r3, #2
   1e500:	add	r3, r1, r3
   1e504:	ldr	r3, [r3, #8]
   1e508:	ldr	r3, [r3]
   1e50c:	str	r3, [fp, #-20]	; 0xffffffec
   1e510:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e514:	ldr	r1, [r3, #20]
   1e518:	ldr	r2, [fp, #-12]
   1e51c:	mov	r3, r2
   1e520:	lsl	r3, r3, #1
   1e524:	add	r3, r3, r2
   1e528:	lsl	r3, r3, #2
   1e52c:	add	r3, r1, r3
   1e530:	mov	r2, #0
   1e534:	str	r2, [r3, #4]
   1e538:	ldr	r2, [fp, #-16]
   1e53c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e540:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e544:	bl	1e750 <__assert_fail@plt+0xd430>
   1e548:	str	r0, [fp, #-24]	; 0xffffffe8
   1e54c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e550:	cmn	r3, #1
   1e554:	bne	1e624 <__assert_fail@plt+0xd304>
   1e558:	ldr	r2, [fp, #-16]
   1e55c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e560:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e564:	bl	1e834 <__assert_fail@plt+0xd514>
   1e568:	str	r0, [fp, #-24]	; 0xffffffe8
   1e56c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e570:	cmn	r3, #1
   1e574:	moveq	r3, #1
   1e578:	movne	r3, #0
   1e57c:	uxtb	r3, r3
   1e580:	cmp	r3, #0
   1e584:	beq	1e590 <__assert_fail@plt+0xd270>
   1e588:	mov	r3, #12
   1e58c:	b	1e744 <__assert_fail@plt+0xd424>
   1e590:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e594:	ldr	r1, [r3, #20]
   1e598:	ldr	r2, [fp, #-12]
   1e59c:	mov	r3, r2
   1e5a0:	lsl	r3, r3, #1
   1e5a4:	add	r3, r3, r2
   1e5a8:	lsl	r3, r3, #2
   1e5ac:	add	r3, r1, r3
   1e5b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5b4:	mov	r0, r3
   1e5b8:	bl	19a2c <__assert_fail@plt+0x870c>
   1e5bc:	mov	r3, r0
   1e5c0:	strb	r3, [fp, #-25]	; 0xffffffe7
   1e5c4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1e5c8:	eor	r3, r3, #1
   1e5cc:	uxtb	r3, r3
   1e5d0:	cmp	r3, #0
   1e5d4:	beq	1e5e0 <__assert_fail@plt+0xd2c0>
   1e5d8:	mov	r3, #12
   1e5dc:	b	1e744 <__assert_fail@plt+0xd424>
   1e5e0:	ldr	r3, [fp, #-16]
   1e5e4:	str	r3, [sp]
   1e5e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e5ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e5f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e5f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e5f8:	bl	1e184 <__assert_fail@plt+0xce64>
   1e5fc:	str	r0, [fp, #-32]	; 0xffffffe0
   1e600:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e604:	cmp	r3, #0
   1e608:	movne	r3, #1
   1e60c:	moveq	r3, #0
   1e610:	uxtb	r3, r3
   1e614:	cmp	r3, #0
   1e618:	beq	1e674 <__assert_fail@plt+0xd354>
   1e61c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e620:	b	1e744 <__assert_fail@plt+0xd424>
   1e624:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e628:	ldr	r1, [r3, #20]
   1e62c:	ldr	r2, [fp, #-12]
   1e630:	mov	r3, r2
   1e634:	lsl	r3, r3, #1
   1e638:	add	r3, r3, r2
   1e63c:	lsl	r3, r3, #2
   1e640:	add	r3, r1, r3
   1e644:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e648:	mov	r0, r3
   1e64c:	bl	19a2c <__assert_fail@plt+0x870c>
   1e650:	mov	r3, r0
   1e654:	strb	r3, [fp, #-25]	; 0xffffffe7
   1e658:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1e65c:	eor	r3, r3, #1
   1e660:	uxtb	r3, r3
   1e664:	cmp	r3, #0
   1e668:	beq	1e674 <__assert_fail@plt+0xd354>
   1e66c:	mov	r3, #12
   1e670:	b	1e744 <__assert_fail@plt+0xd424>
   1e674:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e678:	ldr	r1, [r3, #20]
   1e67c:	ldr	r2, [fp, #-8]
   1e680:	mov	r3, r2
   1e684:	lsl	r3, r3, #1
   1e688:	add	r3, r3, r2
   1e68c:	lsl	r3, r3, #2
   1e690:	add	r3, r1, r3
   1e694:	ldr	r3, [r3, #8]
   1e698:	ldr	r3, [r3, #4]
   1e69c:	str	r3, [fp, #-20]	; 0xffffffec
   1e6a0:	ldr	r2, [fp, #-16]
   1e6a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e6a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e6ac:	bl	1e834 <__assert_fail@plt+0xd514>
   1e6b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1e6b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e6b8:	cmn	r3, #1
   1e6bc:	moveq	r3, #1
   1e6c0:	movne	r3, #0
   1e6c4:	uxtb	r3, r3
   1e6c8:	cmp	r3, #0
   1e6cc:	beq	1e6d8 <__assert_fail@plt+0xd3b8>
   1e6d0:	mov	r3, #12
   1e6d4:	b	1e744 <__assert_fail@plt+0xd424>
   1e6d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e6dc:	ldr	r1, [r3, #20]
   1e6e0:	ldr	r2, [fp, #-12]
   1e6e4:	mov	r3, r2
   1e6e8:	lsl	r3, r3, #1
   1e6ec:	add	r3, r3, r2
   1e6f0:	lsl	r3, r3, #2
   1e6f4:	add	r3, r1, r3
   1e6f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e6fc:	mov	r0, r3
   1e700:	bl	19a2c <__assert_fail@plt+0x870c>
   1e704:	mov	r3, r0
   1e708:	strb	r3, [fp, #-25]	; 0xffffffe7
   1e70c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1e710:	eor	r3, r3, #1
   1e714:	uxtb	r3, r3
   1e718:	cmp	r3, #0
   1e71c:	beq	1e728 <__assert_fail@plt+0xd408>
   1e720:	mov	r3, #12
   1e724:	b	1e744 <__assert_fail@plt+0xd424>
   1e728:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e72c:	str	r3, [fp, #-8]
   1e730:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e734:	str	r3, [fp, #-12]
   1e738:	b	1e1b8 <__assert_fail@plt+0xce98>
   1e73c:	nop			; (mov r0, r0)
   1e740:	mov	r3, #0
   1e744:	mov	r0, r3
   1e748:	sub	sp, fp, #4
   1e74c:	pop	{fp, pc}
   1e750:	push	{fp}		; (str fp, [sp, #-4]!)
   1e754:	add	fp, sp, #0
   1e758:	sub	sp, sp, #28
   1e75c:	str	r0, [fp, #-16]
   1e760:	str	r1, [fp, #-20]	; 0xffffffec
   1e764:	str	r2, [fp, #-24]	; 0xffffffe8
   1e768:	ldr	r3, [fp, #-16]
   1e76c:	ldr	r3, [r3, #8]
   1e770:	sub	r3, r3, #1
   1e774:	str	r3, [fp, #-8]
   1e778:	b	1e7ec <__assert_fail@plt+0xd4cc>
   1e77c:	ldr	r3, [fp, #-16]
   1e780:	ldr	r2, [r3, #16]
   1e784:	ldr	r3, [fp, #-8]
   1e788:	lsl	r3, r3, #2
   1e78c:	add	r3, r2, r3
   1e790:	ldr	r2, [r3]
   1e794:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e798:	cmp	r2, r3
   1e79c:	bne	1e7e0 <__assert_fail@plt+0xd4c0>
   1e7a0:	ldr	r3, [fp, #-16]
   1e7a4:	ldr	r2, [r3]
   1e7a8:	ldr	r3, [fp, #-8]
   1e7ac:	lsl	r3, r3, #3
   1e7b0:	add	r3, r2, r3
   1e7b4:	ldr	r3, [r3, #4]
   1e7b8:	lsr	r3, r3, #8
   1e7bc:	lsl	r3, r3, #22
   1e7c0:	lsr	r3, r3, #22
   1e7c4:	uxth	r3, r3
   1e7c8:	mov	r2, r3
   1e7cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e7d0:	cmp	r2, r3
   1e7d4:	bne	1e7e0 <__assert_fail@plt+0xd4c0>
   1e7d8:	ldr	r3, [fp, #-8]
   1e7dc:	b	1e824 <__assert_fail@plt+0xd504>
   1e7e0:	ldr	r3, [fp, #-8]
   1e7e4:	sub	r3, r3, #1
   1e7e8:	str	r3, [fp, #-8]
   1e7ec:	ldr	r3, [fp, #-16]
   1e7f0:	ldr	r2, [r3]
   1e7f4:	ldr	r3, [fp, #-8]
   1e7f8:	lsl	r3, r3, #3
   1e7fc:	add	r3, r2, r3
   1e800:	ldrb	r3, [r3, #6]
   1e804:	and	r3, r3, #4
   1e808:	uxtb	r3, r3
   1e80c:	cmp	r3, #0
   1e810:	beq	1e820 <__assert_fail@plt+0xd500>
   1e814:	ldr	r3, [fp, #-8]
   1e818:	cmp	r3, #0
   1e81c:	bgt	1e77c <__assert_fail@plt+0xd45c>
   1e820:	mvn	r3, #0
   1e824:	mov	r0, r3
   1e828:	add	sp, fp, #0
   1e82c:	pop	{fp}		; (ldr fp, [sp], #4)
   1e830:	bx	lr
   1e834:	push	{fp, lr}
   1e838:	add	fp, sp, #4
   1e83c:	sub	sp, sp, #24
   1e840:	str	r0, [fp, #-16]
   1e844:	str	r1, [fp, #-20]	; 0xffffffec
   1e848:	str	r2, [fp, #-24]	; 0xffffffe8
   1e84c:	ldr	r3, [fp, #-16]
   1e850:	ldr	r2, [r3]
   1e854:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e858:	lsl	r3, r3, #3
   1e85c:	add	r3, r2, r3
   1e860:	ldm	r3, {r1, r2}
   1e864:	ldr	r0, [fp, #-16]
   1e868:	bl	19fdc <__assert_fail@plt+0x8cbc>
   1e86c:	str	r0, [fp, #-8]
   1e870:	ldr	r3, [fp, #-8]
   1e874:	cmn	r3, #1
   1e878:	movne	r3, #1
   1e87c:	moveq	r3, #0
   1e880:	uxtb	r3, r3
   1e884:	cmp	r3, #0
   1e888:	beq	1e99c <__assert_fail@plt+0xd67c>
   1e88c:	ldr	r3, [fp, #-16]
   1e890:	ldr	r2, [r3]
   1e894:	ldr	r3, [fp, #-8]
   1e898:	lsl	r3, r3, #3
   1e89c:	add	r0, r2, r3
   1e8a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e8a4:	uxth	r3, r3
   1e8a8:	lsl	r3, r3, #22
   1e8ac:	lsr	r3, r3, #22
   1e8b0:	uxth	r1, r3
   1e8b4:	ldr	r2, [r0, #4]
   1e8b8:	ldr	r3, [pc, #236]	; 1e9ac <__assert_fail@plt+0xd68c>
   1e8bc:	and	r1, r1, r3
   1e8c0:	lsl	r3, r3, #8
   1e8c4:	bic	r3, r2, r3
   1e8c8:	lsl	r1, r1, #8
   1e8cc:	orr	r2, r1, r3
   1e8d0:	str	r2, [r0, #4]
   1e8d4:	ldr	r3, [fp, #-16]
   1e8d8:	ldr	r2, [r3]
   1e8dc:	ldr	r3, [fp, #-8]
   1e8e0:	lsl	r3, r3, #3
   1e8e4:	add	r0, r2, r3
   1e8e8:	ldr	r3, [fp, #-16]
   1e8ec:	ldr	r2, [r3]
   1e8f0:	ldr	r3, [fp, #-8]
   1e8f4:	lsl	r3, r3, #3
   1e8f8:	add	r3, r2, r3
   1e8fc:	ldr	r3, [r3, #4]
   1e900:	lsr	r3, r3, #8
   1e904:	lsl	r3, r3, #22
   1e908:	lsr	r3, r3, #22
   1e90c:	uxth	r2, r3
   1e910:	ldr	r3, [fp, #-16]
   1e914:	ldr	r1, [r3]
   1e918:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e91c:	lsl	r3, r3, #3
   1e920:	add	r3, r1, r3
   1e924:	ldr	r3, [r3, #4]
   1e928:	lsr	r3, r3, #8
   1e92c:	lsl	r3, r3, #22
   1e930:	lsr	r3, r3, #22
   1e934:	uxth	r3, r3
   1e938:	orr	r3, r2, r3
   1e93c:	uxth	r1, r3
   1e940:	ldr	r2, [r0, #4]
   1e944:	ldr	r3, [pc, #96]	; 1e9ac <__assert_fail@plt+0xd68c>
   1e948:	and	r1, r1, r3
   1e94c:	lsl	r3, r3, #8
   1e950:	bic	r3, r2, r3
   1e954:	lsl	r1, r1, #8
   1e958:	orr	r2, r1, r3
   1e95c:	str	r2, [r0, #4]
   1e960:	ldr	r3, [fp, #-16]
   1e964:	ldr	r2, [r3]
   1e968:	ldr	r3, [fp, #-8]
   1e96c:	lsl	r3, r3, #3
   1e970:	add	r2, r2, r3
   1e974:	ldrb	r3, [r2, #6]
   1e978:	orr	r3, r3, #4
   1e97c:	strb	r3, [r2, #6]
   1e980:	ldr	r3, [fp, #-16]
   1e984:	ldr	r2, [r3, #16]
   1e988:	ldr	r3, [fp, #-8]
   1e98c:	lsl	r3, r3, #2
   1e990:	add	r3, r2, r3
   1e994:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e998:	str	r2, [r3]
   1e99c:	ldr	r3, [fp, #-8]
   1e9a0:	mov	r0, r3
   1e9a4:	sub	sp, fp, #4
   1e9a8:	pop	{fp, pc}
   1e9ac:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1e9b0:	push	{fp, lr}
   1e9b4:	add	fp, sp, #4
   1e9b8:	sub	sp, sp, #24
   1e9bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1e9c0:	mov	r3, #0
   1e9c4:	str	r3, [fp, #-12]
   1e9c8:	b	1ea08 <__assert_fail@plt+0xd6e8>
   1e9cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e9d0:	ldr	r1, [r3, #28]
   1e9d4:	ldr	r2, [fp, #-12]
   1e9d8:	mov	r3, r2
   1e9dc:	lsl	r3, r3, #1
   1e9e0:	add	r3, r3, r2
   1e9e4:	lsl	r3, r3, #2
   1e9e8:	add	r3, r1, r3
   1e9ec:	mov	r2, #12
   1e9f0:	mov	r1, #0
   1e9f4:	mov	r0, r3
   1e9f8:	bl	11248 <memset@plt>
   1e9fc:	ldr	r3, [fp, #-12]
   1ea00:	add	r3, r3, #1
   1ea04:	str	r3, [fp, #-12]
   1ea08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ea0c:	ldr	r2, [r3, #8]
   1ea10:	ldr	r3, [fp, #-12]
   1ea14:	cmp	r2, r3
   1ea18:	bhi	1e9cc <__assert_fail@plt+0xd6ac>
   1ea1c:	mov	r3, #0
   1ea20:	str	r3, [fp, #-8]
   1ea24:	b	1eb08 <__assert_fail@plt+0xd7e8>
   1ea28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ea2c:	ldr	r1, [r3, #24]
   1ea30:	ldr	r2, [fp, #-8]
   1ea34:	mov	r3, r2
   1ea38:	lsl	r3, r3, #1
   1ea3c:	add	r3, r3, r2
   1ea40:	lsl	r3, r3, #2
   1ea44:	add	r3, r1, r3
   1ea48:	ldr	r3, [r3, #8]
   1ea4c:	str	r3, [fp, #-16]
   1ea50:	mov	r3, #0
   1ea54:	str	r3, [fp, #-12]
   1ea58:	b	1eacc <__assert_fail@plt+0xd7ac>
   1ea5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ea60:	ldr	r2, [r3, #28]
   1ea64:	ldr	r3, [fp, #-12]
   1ea68:	lsl	r3, r3, #2
   1ea6c:	ldr	r1, [fp, #-16]
   1ea70:	add	r3, r1, r3
   1ea74:	ldr	r3, [r3]
   1ea78:	mov	r1, r3
   1ea7c:	mov	r3, r1
   1ea80:	lsl	r3, r3, #1
   1ea84:	add	r3, r3, r1
   1ea88:	lsl	r3, r3, #2
   1ea8c:	add	r3, r2, r3
   1ea90:	ldr	r1, [fp, #-8]
   1ea94:	mov	r0, r3
   1ea98:	bl	19ca0 <__assert_fail@plt+0x8980>
   1ea9c:	mov	r3, r0
   1eaa0:	strb	r3, [fp, #-17]	; 0xffffffef
   1eaa4:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1eaa8:	eor	r3, r3, #1
   1eaac:	uxtb	r3, r3
   1eab0:	cmp	r3, #0
   1eab4:	beq	1eac0 <__assert_fail@plt+0xd7a0>
   1eab8:	mov	r3, #12
   1eabc:	b	1eb20 <__assert_fail@plt+0xd800>
   1eac0:	ldr	r3, [fp, #-12]
   1eac4:	add	r3, r3, #1
   1eac8:	str	r3, [fp, #-12]
   1eacc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ead0:	ldr	r1, [r3, #24]
   1ead4:	ldr	r2, [fp, #-8]
   1ead8:	mov	r3, r2
   1eadc:	lsl	r3, r3, #1
   1eae0:	add	r3, r3, r2
   1eae4:	lsl	r3, r3, #2
   1eae8:	add	r3, r1, r3
   1eaec:	ldr	r2, [r3, #4]
   1eaf0:	ldr	r3, [fp, #-12]
   1eaf4:	cmp	r2, r3
   1eaf8:	bgt	1ea5c <__assert_fail@plt+0xd73c>
   1eafc:	ldr	r3, [fp, #-8]
   1eb00:	add	r3, r3, #1
   1eb04:	str	r3, [fp, #-8]
   1eb08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eb0c:	ldr	r2, [r3, #8]
   1eb10:	ldr	r3, [fp, #-8]
   1eb14:	cmp	r2, r3
   1eb18:	bhi	1ea28 <__assert_fail@plt+0xd708>
   1eb1c:	mov	r3, #0
   1eb20:	mov	r0, r3
   1eb24:	sub	sp, fp, #4
   1eb28:	pop	{fp, pc}
   1eb2c:	push	{fp, lr}
   1eb30:	add	fp, sp, #4
   1eb34:	sub	sp, sp, #32
   1eb38:	str	r0, [fp, #-32]	; 0xffffffe0
   1eb3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eb40:	ldr	r3, [r3, #8]
   1eb44:	cmp	r3, #0
   1eb48:	mov	r3, #0
   1eb4c:	strb	r3, [fp, #-9]
   1eb50:	mov	r3, #0
   1eb54:	str	r3, [fp, #-8]
   1eb58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eb5c:	ldr	r2, [r3, #8]
   1eb60:	ldr	r3, [fp, #-8]
   1eb64:	cmp	r2, r3
   1eb68:	bne	1eb98 <__assert_fail@plt+0xd878>
   1eb6c:	ldrb	r3, [fp, #-9]
   1eb70:	eor	r3, r3, #1
   1eb74:	uxtb	r3, r3
   1eb78:	cmp	r3, #0
   1eb7c:	beq	1eb88 <__assert_fail@plt+0xd868>
   1eb80:	mov	r3, #0
   1eb84:	b	1ec80 <__assert_fail@plt+0xd960>
   1eb88:	mov	r3, #0
   1eb8c:	strb	r3, [fp, #-9]
   1eb90:	mov	r3, #0
   1eb94:	str	r3, [fp, #-8]
   1eb98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eb9c:	ldr	r1, [r3, #24]
   1eba0:	ldr	r2, [fp, #-8]
   1eba4:	mov	r3, r2
   1eba8:	lsl	r3, r3, #1
   1ebac:	add	r3, r3, r2
   1ebb0:	lsl	r3, r3, #2
   1ebb4:	add	r3, r1, r3
   1ebb8:	ldr	r3, [r3, #4]
   1ebbc:	cmn	r3, #1
   1ebc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ebc4:	ldr	r1, [r3, #24]
   1ebc8:	ldr	r2, [fp, #-8]
   1ebcc:	mov	r3, r2
   1ebd0:	lsl	r3, r3, #1
   1ebd4:	add	r3, r3, r2
   1ebd8:	lsl	r3, r3, #2
   1ebdc:	add	r3, r1, r3
   1ebe0:	ldr	r3, [r3, #4]
   1ebe4:	cmp	r3, #0
   1ebe8:	bne	1ec6c <__assert_fail@plt+0xd94c>
   1ebec:	sub	r0, fp, #28
   1ebf0:	mov	r3, #1
   1ebf4:	ldr	r2, [fp, #-8]
   1ebf8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ebfc:	bl	1ec8c <__assert_fail@plt+0xd96c>
   1ec00:	str	r0, [fp, #-16]
   1ec04:	ldr	r3, [fp, #-16]
   1ec08:	cmp	r3, #0
   1ec0c:	movne	r3, #1
   1ec10:	moveq	r3, #0
   1ec14:	uxtb	r3, r3
   1ec18:	cmp	r3, #0
   1ec1c:	beq	1ec28 <__assert_fail@plt+0xd908>
   1ec20:	ldr	r3, [fp, #-16]
   1ec24:	b	1ec80 <__assert_fail@plt+0xd960>
   1ec28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ec2c:	ldr	r1, [r3, #24]
   1ec30:	ldr	r2, [fp, #-8]
   1ec34:	mov	r3, r2
   1ec38:	lsl	r3, r3, #1
   1ec3c:	add	r3, r3, r2
   1ec40:	lsl	r3, r3, #2
   1ec44:	add	r3, r1, r3
   1ec48:	ldr	r3, [r3, #4]
   1ec4c:	cmp	r3, #0
   1ec50:	bne	1ec70 <__assert_fail@plt+0xd950>
   1ec54:	mov	r3, #1
   1ec58:	strb	r3, [fp, #-9]
   1ec5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ec60:	mov	r0, r3
   1ec64:	bl	31500 <__assert_fail@plt+0x201e0>
   1ec68:	b	1ec70 <__assert_fail@plt+0xd950>
   1ec6c:	nop			; (mov r0, r0)
   1ec70:	ldr	r3, [fp, #-8]
   1ec74:	add	r3, r3, #1
   1ec78:	str	r3, [fp, #-8]
   1ec7c:	b	1eb58 <__assert_fail@plt+0xd838>
   1ec80:	mov	r0, r3
   1ec84:	sub	sp, fp, #4
   1ec88:	pop	{fp, pc}
   1ec8c:	push	{fp, lr}
   1ec90:	add	fp, sp, #4
   1ec94:	sub	sp, sp, #64	; 0x40
   1ec98:	str	r0, [fp, #-48]	; 0xffffffd0
   1ec9c:	str	r1, [fp, #-52]	; 0xffffffcc
   1eca0:	str	r2, [fp, #-56]	; 0xffffffc8
   1eca4:	strb	r3, [fp, #-57]	; 0xffffffc7
   1eca8:	mov	r3, #0
   1ecac:	strb	r3, [fp, #-9]
   1ecb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ecb4:	ldr	r1, [r3, #20]
   1ecb8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ecbc:	mov	r3, r2
   1ecc0:	lsl	r3, r3, #1
   1ecc4:	add	r3, r3, r2
   1ecc8:	lsl	r3, r3, #2
   1eccc:	add	r3, r1, r3
   1ecd0:	ldr	r3, [r3, #4]
   1ecd4:	add	r2, r3, #1
   1ecd8:	sub	r3, fp, #32
   1ecdc:	mov	r1, r2
   1ece0:	mov	r0, r3
   1ece4:	bl	18a98 <__assert_fail@plt+0x7778>
   1ece8:	str	r0, [fp, #-16]
   1ecec:	ldr	r3, [fp, #-16]
   1ecf0:	cmp	r3, #0
   1ecf4:	movne	r3, #1
   1ecf8:	moveq	r3, #0
   1ecfc:	uxtb	r3, r3
   1ed00:	cmp	r3, #0
   1ed04:	beq	1ed10 <__assert_fail@plt+0xd9f0>
   1ed08:	ldr	r3, [fp, #-16]
   1ed0c:	b	1f0e0 <__assert_fail@plt+0xddc0>
   1ed10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ed14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ed18:	add	r1, r3, #1
   1ed1c:	str	r1, [fp, #-28]	; 0xffffffe4
   1ed20:	lsl	r3, r3, #2
   1ed24:	add	r3, r2, r3
   1ed28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ed2c:	str	r2, [r3]
   1ed30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ed34:	ldr	r1, [r3, #24]
   1ed38:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ed3c:	mov	r3, r2
   1ed40:	lsl	r3, r3, #1
   1ed44:	add	r3, r3, r2
   1ed48:	lsl	r3, r3, #2
   1ed4c:	add	r3, r1, r3
   1ed50:	mvn	r2, #0
   1ed54:	str	r2, [r3, #4]
   1ed58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ed5c:	ldr	r2, [r3]
   1ed60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ed64:	lsl	r3, r3, #3
   1ed68:	add	r3, r2, r3
   1ed6c:	ldr	r2, [r3, #4]
   1ed70:	ldr	r3, [pc, #884]	; 1f0ec <__assert_fail@plt+0xddcc>
   1ed74:	and	r3, r3, r2
   1ed78:	cmp	r3, #0
   1ed7c:	beq	1ee60 <__assert_fail@plt+0xdb40>
   1ed80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ed84:	ldr	r1, [r3, #20]
   1ed88:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ed8c:	mov	r3, r2
   1ed90:	lsl	r3, r3, #1
   1ed94:	add	r3, r3, r2
   1ed98:	lsl	r3, r3, #2
   1ed9c:	add	r3, r1, r3
   1eda0:	ldr	r3, [r3, #4]
   1eda4:	cmp	r3, #0
   1eda8:	beq	1ee60 <__assert_fail@plt+0xdb40>
   1edac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1edb0:	ldr	r1, [r3]
   1edb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1edb8:	ldr	r0, [r3, #20]
   1edbc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1edc0:	mov	r3, r2
   1edc4:	lsl	r3, r3, #1
   1edc8:	add	r3, r3, r2
   1edcc:	lsl	r3, r3, #2
   1edd0:	add	r3, r0, r3
   1edd4:	ldr	r3, [r3, #8]
   1edd8:	ldr	r3, [r3]
   1eddc:	lsl	r3, r3, #3
   1ede0:	add	r3, r1, r3
   1ede4:	ldrb	r3, [r3, #6]
   1ede8:	and	r3, r3, #4
   1edec:	uxtb	r3, r3
   1edf0:	cmp	r3, #0
   1edf4:	bne	1ee60 <__assert_fail@plt+0xdb40>
   1edf8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1edfc:	ldr	r2, [r3]
   1ee00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ee04:	lsl	r3, r3, #3
   1ee08:	add	r3, r2, r3
   1ee0c:	ldr	r3, [r3, #4]
   1ee10:	lsr	r3, r3, #8
   1ee14:	lsl	r3, r3, #22
   1ee18:	lsr	r3, r3, #22
   1ee1c:	uxth	r3, r3
   1ee20:	str	r3, [sp]
   1ee24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ee28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ee2c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1ee30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ee34:	bl	1e184 <__assert_fail@plt+0xce64>
   1ee38:	str	r0, [fp, #-16]
   1ee3c:	ldr	r3, [fp, #-16]
   1ee40:	cmp	r3, #0
   1ee44:	movne	r3, #1
   1ee48:	moveq	r3, #0
   1ee4c:	uxtb	r3, r3
   1ee50:	cmp	r3, #0
   1ee54:	beq	1ee60 <__assert_fail@plt+0xdb40>
   1ee58:	ldr	r3, [fp, #-16]
   1ee5c:	b	1f0e0 <__assert_fail@plt+0xddc0>
   1ee60:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ee64:	ldr	r2, [r3]
   1ee68:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ee6c:	lsl	r3, r3, #3
   1ee70:	add	r3, r2, r3
   1ee74:	ldrb	r3, [r3, #4]
   1ee78:	and	r3, r3, #8
   1ee7c:	cmp	r3, #0
   1ee80:	beq	1f04c <__assert_fail@plt+0xdd2c>
   1ee84:	mov	r3, #0
   1ee88:	str	r3, [fp, #-8]
   1ee8c:	b	1f01c <__assert_fail@plt+0xdcfc>
   1ee90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ee94:	ldr	r1, [r3, #20]
   1ee98:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ee9c:	mov	r3, r2
   1eea0:	lsl	r3, r3, #1
   1eea4:	add	r3, r3, r2
   1eea8:	lsl	r3, r3, #2
   1eeac:	add	r3, r1, r3
   1eeb0:	ldr	r2, [r3, #8]
   1eeb4:	ldr	r3, [fp, #-8]
   1eeb8:	lsl	r3, r3, #2
   1eebc:	add	r3, r2, r3
   1eec0:	ldr	r3, [r3]
   1eec4:	str	r3, [fp, #-20]	; 0xffffffec
   1eec8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1eecc:	ldr	r1, [r3, #24]
   1eed0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1eed4:	mov	r3, r2
   1eed8:	lsl	r3, r3, #1
   1eedc:	add	r3, r3, r2
   1eee0:	lsl	r3, r3, #2
   1eee4:	add	r3, r1, r3
   1eee8:	ldr	r3, [r3, #4]
   1eeec:	cmn	r3, #1
   1eef0:	bne	1ef00 <__assert_fail@plt+0xdbe0>
   1eef4:	mov	r3, #1
   1eef8:	strb	r3, [fp, #-9]
   1eefc:	b	1f010 <__assert_fail@plt+0xdcf0>
   1ef00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ef04:	ldr	r1, [r3, #24]
   1ef08:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ef0c:	mov	r3, r2
   1ef10:	lsl	r3, r3, #1
   1ef14:	add	r3, r3, r2
   1ef18:	lsl	r3, r3, #2
   1ef1c:	add	r3, r1, r3
   1ef20:	ldr	r3, [r3, #4]
   1ef24:	cmp	r3, #0
   1ef28:	bne	1ef68 <__assert_fail@plt+0xdc48>
   1ef2c:	sub	r0, fp, #44	; 0x2c
   1ef30:	mov	r3, #0
   1ef34:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ef38:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ef3c:	bl	1ec8c <__assert_fail@plt+0xd96c>
   1ef40:	str	r0, [fp, #-16]
   1ef44:	ldr	r3, [fp, #-16]
   1ef48:	cmp	r3, #0
   1ef4c:	movne	r3, #1
   1ef50:	moveq	r3, #0
   1ef54:	uxtb	r3, r3
   1ef58:	cmp	r3, #0
   1ef5c:	beq	1ef94 <__assert_fail@plt+0xdc74>
   1ef60:	ldr	r3, [fp, #-16]
   1ef64:	b	1f0e0 <__assert_fail@plt+0xddc0>
   1ef68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ef6c:	ldr	r1, [r3, #24]
   1ef70:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ef74:	mov	r3, r2
   1ef78:	lsl	r3, r3, #1
   1ef7c:	add	r3, r3, r2
   1ef80:	lsl	r3, r3, #2
   1ef84:	add	r2, r1, r3
   1ef88:	sub	r3, fp, #44	; 0x2c
   1ef8c:	ldm	r2, {r0, r1, r2}
   1ef90:	stm	r3, {r0, r1, r2}
   1ef94:	sub	r2, fp, #44	; 0x2c
   1ef98:	sub	r3, fp, #32
   1ef9c:	mov	r1, r2
   1efa0:	mov	r0, r3
   1efa4:	bl	195d8 <__assert_fail@plt+0x82b8>
   1efa8:	str	r0, [fp, #-16]
   1efac:	ldr	r3, [fp, #-16]
   1efb0:	cmp	r3, #0
   1efb4:	movne	r3, #1
   1efb8:	moveq	r3, #0
   1efbc:	uxtb	r3, r3
   1efc0:	cmp	r3, #0
   1efc4:	beq	1efd0 <__assert_fail@plt+0xdcb0>
   1efc8:	ldr	r3, [fp, #-16]
   1efcc:	b	1f0e0 <__assert_fail@plt+0xddc0>
   1efd0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1efd4:	ldr	r1, [r3, #24]
   1efd8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1efdc:	mov	r3, r2
   1efe0:	lsl	r3, r3, #1
   1efe4:	add	r3, r3, r2
   1efe8:	lsl	r3, r3, #2
   1efec:	add	r3, r1, r3
   1eff0:	ldr	r3, [r3, #4]
   1eff4:	cmp	r3, #0
   1eff8:	bne	1f010 <__assert_fail@plt+0xdcf0>
   1effc:	mov	r3, #1
   1f000:	strb	r3, [fp, #-9]
   1f004:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f008:	mov	r0, r3
   1f00c:	bl	31500 <__assert_fail@plt+0x201e0>
   1f010:	ldr	r3, [fp, #-8]
   1f014:	add	r3, r3, #1
   1f018:	str	r3, [fp, #-8]
   1f01c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f020:	ldr	r1, [r3, #20]
   1f024:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f028:	mov	r3, r2
   1f02c:	lsl	r3, r3, #1
   1f030:	add	r3, r3, r2
   1f034:	lsl	r3, r3, #2
   1f038:	add	r3, r1, r3
   1f03c:	ldr	r2, [r3, #4]
   1f040:	ldr	r3, [fp, #-8]
   1f044:	cmp	r2, r3
   1f048:	bgt	1ee90 <__assert_fail@plt+0xdb70>
   1f04c:	ldrb	r3, [fp, #-9]
   1f050:	cmp	r3, #0
   1f054:	beq	1f098 <__assert_fail@plt+0xdd78>
   1f058:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   1f05c:	eor	r3, r3, #1
   1f060:	uxtb	r3, r3
   1f064:	cmp	r3, #0
   1f068:	beq	1f098 <__assert_fail@plt+0xdd78>
   1f06c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f070:	ldr	r1, [r3, #24]
   1f074:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f078:	mov	r3, r2
   1f07c:	lsl	r3, r3, #1
   1f080:	add	r3, r3, r2
   1f084:	lsl	r3, r3, #2
   1f088:	add	r3, r1, r3
   1f08c:	mov	r2, #0
   1f090:	str	r2, [r3, #4]
   1f094:	b	1f0c8 <__assert_fail@plt+0xdda8>
   1f098:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f09c:	ldr	r1, [r3, #24]
   1f0a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f0a4:	mov	r3, r2
   1f0a8:	lsl	r3, r3, #1
   1f0ac:	add	r3, r3, r2
   1f0b0:	lsl	r3, r3, #2
   1f0b4:	add	r3, r1, r3
   1f0b8:	mov	ip, r3
   1f0bc:	sub	r3, fp, #32
   1f0c0:	ldm	r3, {r0, r1, r2}
   1f0c4:	stm	ip, {r0, r1, r2}
   1f0c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f0cc:	mov	ip, r3
   1f0d0:	sub	r3, fp, #32
   1f0d4:	ldm	r3, {r0, r1, r2}
   1f0d8:	stm	ip, {r0, r1, r2}
   1f0dc:	mov	r3, #0
   1f0e0:	mov	r0, r3
   1f0e4:	sub	sp, fp, #4
   1f0e8:	pop	{fp, pc}
   1f0ec:	andeq	pc, r3, r0, lsl #30
   1f0f0:	push	{fp, lr}
   1f0f4:	add	fp, sp, #4
   1f0f8:	sub	sp, sp, #16
   1f0fc:	str	r0, [fp, #-8]
   1f100:	str	r1, [fp, #-12]
   1f104:	str	r2, [fp, #-16]
   1f108:	ldr	r2, [fp, #-16]
   1f10c:	ldr	r1, [fp, #-12]
   1f110:	ldr	r0, [fp, #-8]
   1f114:	bl	1f13c <__assert_fail@plt+0xde1c>
   1f118:	mov	r2, r0
   1f11c:	ldr	r3, [fp, #-12]
   1f120:	ldr	r3, [r3, #40]	; 0x28
   1f124:	add	r2, r3, r2
   1f128:	ldr	r3, [fp, #-12]
   1f12c:	str	r2, [r3, #40]	; 0x28
   1f130:	nop			; (mov r0, r0)
   1f134:	sub	sp, fp, #4
   1f138:	pop	{fp, pc}
   1f13c:	push	{fp, lr}
   1f140:	add	fp, sp, #4
   1f144:	sub	sp, sp, #40	; 0x28
   1f148:	str	r0, [fp, #-32]	; 0xffffffe0
   1f14c:	str	r1, [fp, #-36]	; 0xffffffdc
   1f150:	str	r2, [fp, #-40]	; 0xffffffd8
   1f154:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f158:	ldr	r2, [r3, #56]	; 0x38
   1f15c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f160:	ldr	r3, [r3, #40]	; 0x28
   1f164:	cmp	r2, r3
   1f168:	bgt	1f180 <__assert_fail@plt+0xde60>
   1f16c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f170:	mov	r2, #2
   1f174:	strb	r2, [r3, #4]
   1f178:	mov	r3, #0
   1f17c:	b	1fe64 <__assert_fail@plt+0xeb44>
   1f180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f184:	ldr	r3, [r3, #4]
   1f188:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f18c:	ldr	r2, [r2, #40]	; 0x28
   1f190:	add	r3, r3, r2
   1f194:	ldrb	r3, [r3]
   1f198:	strb	r3, [fp, #-5]
   1f19c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f1a0:	ldrb	r2, [fp, #-5]
   1f1a4:	strb	r2, [r3]
   1f1a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f1ac:	ldrb	r3, [r2, #6]
   1f1b0:	bic	r3, r3, #64	; 0x40
   1f1b4:	strb	r3, [r2, #6]
   1f1b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f1bc:	ldrb	r3, [r2, #6]
   1f1c0:	bic	r3, r3, #32
   1f1c4:	strb	r3, [r2, #6]
   1f1c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f1cc:	ldr	r3, [r3, #80]	; 0x50
   1f1d0:	cmp	r3, #1
   1f1d4:	ble	1f238 <__assert_fail@plt+0xdf18>
   1f1d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f1dc:	ldr	r2, [r3, #40]	; 0x28
   1f1e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f1e4:	ldr	r3, [r3, #28]
   1f1e8:	cmp	r2, r3
   1f1ec:	beq	1f238 <__assert_fail@plt+0xdf18>
   1f1f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f1f4:	ldr	r2, [r3, #8]
   1f1f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f1fc:	ldr	r3, [r3, #40]	; 0x28
   1f200:	lsl	r3, r3, #2
   1f204:	add	r3, r2, r3
   1f208:	ldr	r3, [r3]
   1f20c:	cmn	r3, #1
   1f210:	bne	1f238 <__assert_fail@plt+0xdf18>
   1f214:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f218:	mov	r2, #1
   1f21c:	strb	r2, [r3, #4]
   1f220:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f224:	ldrb	r3, [r2, #6]
   1f228:	orr	r3, r3, #32
   1f22c:	strb	r3, [r2, #6]
   1f230:	mov	r3, #1
   1f234:	b	1fe64 <__assert_fail@plt+0xeb44>
   1f238:	ldrb	r3, [fp, #-5]
   1f23c:	cmp	r3, #92	; 0x5c
   1f240:	bne	1f890 <__assert_fail@plt+0xe570>
   1f244:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f248:	ldr	r3, [r3, #40]	; 0x28
   1f24c:	add	r2, r3, #1
   1f250:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f254:	ldr	r3, [r3, #48]	; 0x30
   1f258:	cmp	r2, r3
   1f25c:	blt	1f274 <__assert_fail@plt+0xdf54>
   1f260:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f264:	mov	r2, #36	; 0x24
   1f268:	strb	r2, [r3, #4]
   1f26c:	mov	r3, #1
   1f270:	b	1fe64 <__assert_fail@plt+0xeb44>
   1f274:	mov	r1, #1
   1f278:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f27c:	bl	184cc <__assert_fail@plt+0x71ac>
   1f280:	mov	r3, r0
   1f284:	strb	r3, [fp, #-6]
   1f288:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f28c:	ldrb	r2, [fp, #-6]
   1f290:	strb	r2, [r3]
   1f294:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f298:	mov	r2, #1
   1f29c:	strb	r2, [r3, #4]
   1f2a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f2a4:	ldr	r3, [r3, #80]	; 0x50
   1f2a8:	cmp	r3, #1
   1f2ac:	ble	1f32c <__assert_fail@plt+0xe00c>
   1f2b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f2b4:	ldr	r3, [r3, #40]	; 0x28
   1f2b8:	add	r3, r3, #1
   1f2bc:	mov	r1, r3
   1f2c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f2c4:	bl	15fb0 <__assert_fail@plt+0x4c90>
   1f2c8:	str	r0, [fp, #-12]
   1f2cc:	ldr	r0, [fp, #-12]
   1f2d0:	bl	11230 <iswalnum@plt>
   1f2d4:	mov	r3, r0
   1f2d8:	cmp	r3, #0
   1f2dc:	bne	1f2ec <__assert_fail@plt+0xdfcc>
   1f2e0:	ldr	r3, [fp, #-12]
   1f2e4:	cmp	r3, #95	; 0x5f
   1f2e8:	bne	1f2f4 <__assert_fail@plt+0xdfd4>
   1f2ec:	mov	r3, #1
   1f2f0:	b	1f2f8 <__assert_fail@plt+0xdfd8>
   1f2f4:	mov	r3, #0
   1f2f8:	cmp	r3, #0
   1f2fc:	movne	r3, #1
   1f300:	moveq	r3, #0
   1f304:	uxtb	r3, r3
   1f308:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f30c:	ldrb	r2, [r1, #6]
   1f310:	and	r3, r3, #1
   1f314:	bic	r2, r2, #64	; 0x40
   1f318:	lsl	r3, r3, #6
   1f31c:	orr	r3, r3, r2
   1f320:	mov	r2, r3
   1f324:	strb	r2, [r1, #6]
   1f328:	b	1f39c <__assert_fail@plt+0xe07c>
   1f32c:	bl	111dc <__ctype_b_loc@plt>
   1f330:	mov	r3, r0
   1f334:	ldr	r2, [r3]
   1f338:	ldrb	r3, [fp, #-6]
   1f33c:	lsl	r3, r3, #1
   1f340:	add	r3, r2, r3
   1f344:	ldrh	r3, [r3]
   1f348:	and	r3, r3, #8
   1f34c:	cmp	r3, #0
   1f350:	bne	1f360 <__assert_fail@plt+0xe040>
   1f354:	ldrb	r3, [fp, #-6]
   1f358:	cmp	r3, #95	; 0x5f
   1f35c:	bne	1f368 <__assert_fail@plt+0xe048>
   1f360:	mov	r3, #1
   1f364:	b	1f36c <__assert_fail@plt+0xe04c>
   1f368:	mov	r3, #0
   1f36c:	cmp	r3, #0
   1f370:	movne	r3, #1
   1f374:	moveq	r3, #0
   1f378:	uxtb	r3, r3
   1f37c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f380:	ldrb	r2, [r1, #6]
   1f384:	and	r3, r3, #1
   1f388:	bic	r2, r2, #64	; 0x40
   1f38c:	lsl	r3, r3, #6
   1f390:	orr	r3, r3, r2
   1f394:	mov	r2, r3
   1f398:	strb	r2, [r1, #6]
   1f39c:	ldrb	r3, [fp, #-6]
   1f3a0:	sub	r3, r3, #39	; 0x27
   1f3a4:	cmp	r3, #86	; 0x56
   1f3a8:	ldrls	pc, [pc, r3, lsl #2]
   1f3ac:	b	1f7f4 <__assert_fail@plt+0xe4d4>
   1f3b0:	andeq	pc, r1, r8, asr #13
   1f3b4:	strdeq	pc, [r1], -r4
   1f3b8:	andeq	pc, r1, r4, lsl r7	; <UNPREDICTABLE>
   1f3bc:	strdeq	pc, [r1], -r4
   1f3c0:	andeq	pc, r1, r4, lsr r7	; <UNPREDICTABLE>
   1f3c4:	strdeq	pc, [r1], -r4
   1f3c8:	strdeq	pc, [r1], -r4
   1f3cc:	strdeq	pc, [r1], -r4
   1f3d0:	strdeq	pc, [r1], -r4
   1f3d4:	strdeq	pc, [r1], -r4
   1f3d8:	andeq	pc, r1, ip, lsr r5	; <UNPREDICTABLE>
   1f3dc:	andeq	pc, r1, ip, lsr r5	; <UNPREDICTABLE>
   1f3e0:	andeq	pc, r1, ip, lsr r5	; <UNPREDICTABLE>
   1f3e4:	andeq	pc, r1, ip, lsr r5	; <UNPREDICTABLE>
   1f3e8:	andeq	pc, r1, ip, lsr r5	; <UNPREDICTABLE>
   1f3ec:	andeq	pc, r1, ip, lsr r5	; <UNPREDICTABLE>
   1f3f0:	andeq	pc, r1, ip, lsr r5	; <UNPREDICTABLE>
   1f3f4:	andeq	pc, r1, ip, lsr r5	; <UNPREDICTABLE>
   1f3f8:	andeq	pc, r1, ip, lsr r5	; <UNPREDICTABLE>
   1f3fc:	strdeq	pc, [r1], -r4
   1f400:	strdeq	pc, [r1], -r4
   1f404:	andeq	pc, r1, ip, ror #10
   1f408:	strdeq	pc, [r1], -r4
   1f40c:	muleq	r1, r8, r5
   1f410:	andeq	pc, r1, r4, ror #14
   1f414:	strdeq	pc, [r1], -r4
   1f418:	strdeq	pc, [r1], -r4
   1f41c:	strdeq	pc, [r1], -r0
   1f420:	strdeq	pc, [r1], -r4
   1f424:	strdeq	pc, [r1], -r4
   1f428:	strdeq	pc, [r1], -r4
   1f42c:	strdeq	pc, [r1], -r4
   1f430:	strdeq	pc, [r1], -r4
   1f434:	strdeq	pc, [r1], -r4
   1f438:	strdeq	pc, [r1], -r4
   1f43c:	strdeq	pc, [r1], -r4
   1f440:	strdeq	pc, [r1], -r4
   1f444:	strdeq	pc, [r1], -r4
   1f448:	strdeq	pc, [r1], -r4
   1f44c:	strdeq	pc, [r1], -r4
   1f450:	strdeq	pc, [r1], -r4
   1f454:	strdeq	pc, [r1], -r4
   1f458:	strdeq	pc, [r1], -r4
   1f45c:	strdeq	pc, [r1], -r4
   1f460:	andeq	pc, r1, ip, ror r6	; <UNPREDICTABLE>
   1f464:	strdeq	pc, [r1], -r4
   1f468:	strdeq	pc, [r1], -r4
   1f46c:	strdeq	pc, [r1], -r4
   1f470:	andeq	pc, r1, ip, lsr r6	; <UNPREDICTABLE>
   1f474:	strdeq	pc, [r1], -r4
   1f478:	strdeq	pc, [r1], -r4
   1f47c:	strdeq	pc, [r1], -r4
   1f480:	strdeq	pc, [r1], -r4
   1f484:	strdeq	pc, [r1], -r4
   1f488:	strdeq	pc, [r1], -r4
   1f48c:	strdeq	pc, [r1], -r4
   1f490:	strdeq	pc, [r1], -r4
   1f494:	muleq	r1, ip, r6
   1f498:	strdeq	pc, [r1], -r4
   1f49c:	andeq	pc, r1, r4, asr #11
   1f4a0:	strdeq	pc, [r1], -r4
   1f4a4:	strdeq	pc, [r1], -r4
   1f4a8:	strdeq	pc, [r1], -r4
   1f4ac:	strdeq	pc, [r1], -r4
   1f4b0:	strdeq	pc, [r1], -r4
   1f4b4:	strdeq	pc, [r1], -r4
   1f4b8:	strdeq	pc, [r1], -r4
   1f4bc:	strdeq	pc, [r1], -r4
   1f4c0:	strdeq	pc, [r1], -r4
   1f4c4:	strdeq	pc, [r1], -r4
   1f4c8:	strdeq	pc, [r1], -r4
   1f4cc:	strdeq	pc, [r1], -r4
   1f4d0:	strdeq	pc, [r1], -r4
   1f4d4:	strdeq	pc, [r1], -r4
   1f4d8:	strdeq	pc, [r1], -r4
   1f4dc:	strdeq	pc, [r1], -r4
   1f4e0:	andeq	pc, r1, ip, asr r6	; <UNPREDICTABLE>
   1f4e4:	strdeq	pc, [r1], -r4
   1f4e8:	strdeq	pc, [r1], -r4
   1f4ec:	strdeq	pc, [r1], -r4
   1f4f0:	andeq	pc, r1, ip, lsl r6	; <UNPREDICTABLE>
   1f4f4:	strdeq	pc, [r1], -r4
   1f4f8:	strdeq	pc, [r1], -r4
   1f4fc:	strdeq	pc, [r1], -r4
   1f500:	muleq	r1, r4, r7
   1f504:	andeq	pc, r1, ip, lsl #10
   1f508:	andeq	pc, r1, r4, asr #15
   1f50c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f510:	and	r3, r3, #1024	; 0x400
   1f514:	cmp	r3, #0
   1f518:	bne	1f7fc <__assert_fail@plt+0xe4dc>
   1f51c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f520:	and	r3, r3, #32768	; 0x8000
   1f524:	cmp	r3, #0
   1f528:	bne	1f7fc <__assert_fail@plt+0xe4dc>
   1f52c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f530:	mov	r2, #10
   1f534:	strb	r2, [r3, #4]
   1f538:	b	1f7fc <__assert_fail@plt+0xe4dc>
   1f53c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f540:	and	r3, r3, #16384	; 0x4000
   1f544:	cmp	r3, #0
   1f548:	bne	1f804 <__assert_fail@plt+0xe4e4>
   1f54c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f550:	mov	r2, #4
   1f554:	strb	r2, [r3, #4]
   1f558:	ldrb	r3, [fp, #-6]
   1f55c:	sub	r2, r3, #49	; 0x31
   1f560:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f564:	str	r2, [r3]
   1f568:	b	1f804 <__assert_fail@plt+0xe4e4>
   1f56c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f570:	and	r3, r3, #524288	; 0x80000
   1f574:	cmp	r3, #0
   1f578:	bne	1f80c <__assert_fail@plt+0xe4ec>
   1f57c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f580:	mov	r2, #12
   1f584:	strb	r2, [r3, #4]
   1f588:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f58c:	mov	r2, #6
   1f590:	str	r2, [r3]
   1f594:	b	1f80c <__assert_fail@plt+0xe4ec>
   1f598:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f59c:	and	r3, r3, #524288	; 0x80000
   1f5a0:	cmp	r3, #0
   1f5a4:	bne	1f814 <__assert_fail@plt+0xe4f4>
   1f5a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f5ac:	mov	r2, #12
   1f5b0:	strb	r2, [r3, #4]
   1f5b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f5b8:	mov	r2, #9
   1f5bc:	str	r2, [r3]
   1f5c0:	b	1f814 <__assert_fail@plt+0xe4f4>
   1f5c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f5c8:	and	r3, r3, #524288	; 0x80000
   1f5cc:	cmp	r3, #0
   1f5d0:	bne	1f81c <__assert_fail@plt+0xe4fc>
   1f5d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f5d8:	mov	r2, #12
   1f5dc:	strb	r2, [r3, #4]
   1f5e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f5e4:	mov	r2, #256	; 0x100
   1f5e8:	str	r2, [r3]
   1f5ec:	b	1f81c <__assert_fail@plt+0xe4fc>
   1f5f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f5f4:	and	r3, r3, #524288	; 0x80000
   1f5f8:	cmp	r3, #0
   1f5fc:	bne	1f824 <__assert_fail@plt+0xe504>
   1f600:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f604:	mov	r2, #12
   1f608:	strb	r2, [r3, #4]
   1f60c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f610:	mov	r2, #512	; 0x200
   1f614:	str	r2, [r3]
   1f618:	b	1f824 <__assert_fail@plt+0xe504>
   1f61c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f620:	and	r3, r3, #524288	; 0x80000
   1f624:	cmp	r3, #0
   1f628:	bne	1f82c <__assert_fail@plt+0xe50c>
   1f62c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f630:	mov	r2, #32
   1f634:	strb	r2, [r3, #4]
   1f638:	b	1f82c <__assert_fail@plt+0xe50c>
   1f63c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f640:	and	r3, r3, #524288	; 0x80000
   1f644:	cmp	r3, #0
   1f648:	bne	1f834 <__assert_fail@plt+0xe514>
   1f64c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f650:	mov	r2, #33	; 0x21
   1f654:	strb	r2, [r3, #4]
   1f658:	b	1f834 <__assert_fail@plt+0xe514>
   1f65c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f660:	and	r3, r3, #524288	; 0x80000
   1f664:	cmp	r3, #0
   1f668:	bne	1f83c <__assert_fail@plt+0xe51c>
   1f66c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f670:	mov	r2, #34	; 0x22
   1f674:	strb	r2, [r3, #4]
   1f678:	b	1f83c <__assert_fail@plt+0xe51c>
   1f67c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f680:	and	r3, r3, #524288	; 0x80000
   1f684:	cmp	r3, #0
   1f688:	bne	1f844 <__assert_fail@plt+0xe524>
   1f68c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f690:	mov	r2, #35	; 0x23
   1f694:	strb	r2, [r3, #4]
   1f698:	b	1f844 <__assert_fail@plt+0xe524>
   1f69c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f6a0:	and	r3, r3, #524288	; 0x80000
   1f6a4:	cmp	r3, #0
   1f6a8:	bne	1f84c <__assert_fail@plt+0xe52c>
   1f6ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f6b0:	mov	r2, #12
   1f6b4:	strb	r2, [r3, #4]
   1f6b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f6bc:	mov	r2, #64	; 0x40
   1f6c0:	str	r2, [r3]
   1f6c4:	b	1f84c <__assert_fail@plt+0xe52c>
   1f6c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f6cc:	and	r3, r3, #524288	; 0x80000
   1f6d0:	cmp	r3, #0
   1f6d4:	bne	1f854 <__assert_fail@plt+0xe534>
   1f6d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f6dc:	mov	r2, #12
   1f6e0:	strb	r2, [r3, #4]
   1f6e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f6e8:	mov	r2, #128	; 0x80
   1f6ec:	str	r2, [r3]
   1f6f0:	b	1f854 <__assert_fail@plt+0xe534>
   1f6f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f6f8:	and	r3, r3, #8192	; 0x2000
   1f6fc:	cmp	r3, #0
   1f700:	bne	1f85c <__assert_fail@plt+0xe53c>
   1f704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f708:	mov	r2, #8
   1f70c:	strb	r2, [r3, #4]
   1f710:	b	1f85c <__assert_fail@plt+0xe53c>
   1f714:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f718:	and	r3, r3, #8192	; 0x2000
   1f71c:	cmp	r3, #0
   1f720:	bne	1f864 <__assert_fail@plt+0xe544>
   1f724:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f728:	mov	r2, #9
   1f72c:	strb	r2, [r3, #4]
   1f730:	b	1f864 <__assert_fail@plt+0xe544>
   1f734:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f738:	and	r3, r3, #1024	; 0x400
   1f73c:	cmp	r3, #0
   1f740:	bne	1f86c <__assert_fail@plt+0xe54c>
   1f744:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f748:	and	r3, r3, #2
   1f74c:	cmp	r3, #0
   1f750:	beq	1f86c <__assert_fail@plt+0xe54c>
   1f754:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f758:	mov	r2, #18
   1f75c:	strb	r2, [r3, #4]
   1f760:	b	1f86c <__assert_fail@plt+0xe54c>
   1f764:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f768:	and	r3, r3, #1024	; 0x400
   1f76c:	cmp	r3, #0
   1f770:	bne	1f874 <__assert_fail@plt+0xe554>
   1f774:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f778:	and	r3, r3, #2
   1f77c:	cmp	r3, #0
   1f780:	beq	1f874 <__assert_fail@plt+0xe554>
   1f784:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f788:	mov	r2, #19
   1f78c:	strb	r2, [r3, #4]
   1f790:	b	1f874 <__assert_fail@plt+0xe554>
   1f794:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f798:	and	r3, r3, #512	; 0x200
   1f79c:	cmp	r3, #0
   1f7a0:	beq	1f87c <__assert_fail@plt+0xe55c>
   1f7a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f7a8:	and	r3, r3, #4096	; 0x1000
   1f7ac:	cmp	r3, #0
   1f7b0:	bne	1f87c <__assert_fail@plt+0xe55c>
   1f7b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f7b8:	mov	r2, #23
   1f7bc:	strb	r2, [r3, #4]
   1f7c0:	b	1f87c <__assert_fail@plt+0xe55c>
   1f7c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f7c8:	and	r3, r3, #512	; 0x200
   1f7cc:	cmp	r3, #0
   1f7d0:	beq	1f884 <__assert_fail@plt+0xe564>
   1f7d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f7d8:	and	r3, r3, #4096	; 0x1000
   1f7dc:	cmp	r3, #0
   1f7e0:	bne	1f884 <__assert_fail@plt+0xe564>
   1f7e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f7e8:	mov	r2, #24
   1f7ec:	strb	r2, [r3, #4]
   1f7f0:	b	1f884 <__assert_fail@plt+0xe564>
   1f7f4:	nop			; (mov r0, r0)
   1f7f8:	b	1f888 <__assert_fail@plt+0xe568>
   1f7fc:	nop			; (mov r0, r0)
   1f800:	b	1f888 <__assert_fail@plt+0xe568>
   1f804:	nop			; (mov r0, r0)
   1f808:	b	1f888 <__assert_fail@plt+0xe568>
   1f80c:	nop			; (mov r0, r0)
   1f810:	b	1f888 <__assert_fail@plt+0xe568>
   1f814:	nop			; (mov r0, r0)
   1f818:	b	1f888 <__assert_fail@plt+0xe568>
   1f81c:	nop			; (mov r0, r0)
   1f820:	b	1f888 <__assert_fail@plt+0xe568>
   1f824:	nop			; (mov r0, r0)
   1f828:	b	1f888 <__assert_fail@plt+0xe568>
   1f82c:	nop			; (mov r0, r0)
   1f830:	b	1f888 <__assert_fail@plt+0xe568>
   1f834:	nop			; (mov r0, r0)
   1f838:	b	1f888 <__assert_fail@plt+0xe568>
   1f83c:	nop			; (mov r0, r0)
   1f840:	b	1f888 <__assert_fail@plt+0xe568>
   1f844:	nop			; (mov r0, r0)
   1f848:	b	1f888 <__assert_fail@plt+0xe568>
   1f84c:	nop			; (mov r0, r0)
   1f850:	b	1f888 <__assert_fail@plt+0xe568>
   1f854:	nop			; (mov r0, r0)
   1f858:	b	1f888 <__assert_fail@plt+0xe568>
   1f85c:	nop			; (mov r0, r0)
   1f860:	b	1f888 <__assert_fail@plt+0xe568>
   1f864:	nop			; (mov r0, r0)
   1f868:	b	1f888 <__assert_fail@plt+0xe568>
   1f86c:	nop			; (mov r0, r0)
   1f870:	b	1f888 <__assert_fail@plt+0xe568>
   1f874:	nop			; (mov r0, r0)
   1f878:	b	1f888 <__assert_fail@plt+0xe568>
   1f87c:	nop			; (mov r0, r0)
   1f880:	b	1f888 <__assert_fail@plt+0xe568>
   1f884:	nop			; (mov r0, r0)
   1f888:	mov	r3, #2
   1f88c:	b	1fe64 <__assert_fail@plt+0xeb44>
   1f890:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f894:	mov	r2, #1
   1f898:	strb	r2, [r3, #4]
   1f89c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f8a0:	ldr	r3, [r3, #80]	; 0x50
   1f8a4:	cmp	r3, #1
   1f8a8:	ble	1f924 <__assert_fail@plt+0xe604>
   1f8ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f8b0:	ldr	r3, [r3, #40]	; 0x28
   1f8b4:	mov	r1, r3
   1f8b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f8bc:	bl	15fb0 <__assert_fail@plt+0x4c90>
   1f8c0:	str	r0, [fp, #-16]
   1f8c4:	ldr	r0, [fp, #-16]
   1f8c8:	bl	11230 <iswalnum@plt>
   1f8cc:	mov	r3, r0
   1f8d0:	cmp	r3, #0
   1f8d4:	bne	1f8e4 <__assert_fail@plt+0xe5c4>
   1f8d8:	ldr	r3, [fp, #-16]
   1f8dc:	cmp	r3, #95	; 0x5f
   1f8e0:	bne	1f8ec <__assert_fail@plt+0xe5cc>
   1f8e4:	mov	r3, #1
   1f8e8:	b	1f8f0 <__assert_fail@plt+0xe5d0>
   1f8ec:	mov	r3, #0
   1f8f0:	cmp	r3, #0
   1f8f4:	movne	r3, #1
   1f8f8:	moveq	r3, #0
   1f8fc:	uxtb	r3, r3
   1f900:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f904:	ldrb	r2, [r1, #6]
   1f908:	and	r3, r3, #1
   1f90c:	bic	r2, r2, #64	; 0x40
   1f910:	lsl	r3, r3, #6
   1f914:	orr	r3, r3, r2
   1f918:	mov	r2, r3
   1f91c:	strb	r2, [r1, #6]
   1f920:	b	1f998 <__assert_fail@plt+0xe678>
   1f924:	bl	111dc <__ctype_b_loc@plt>
   1f928:	mov	r3, r0
   1f92c:	ldr	r2, [r3]
   1f930:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f934:	ldrb	r3, [r3]
   1f938:	lsl	r3, r3, #1
   1f93c:	add	r3, r2, r3
   1f940:	ldrh	r3, [r3]
   1f944:	and	r3, r3, #8
   1f948:	cmp	r3, #0
   1f94c:	bne	1f960 <__assert_fail@plt+0xe640>
   1f950:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f954:	ldrb	r3, [r3]
   1f958:	cmp	r3, #95	; 0x5f
   1f95c:	bne	1f968 <__assert_fail@plt+0xe648>
   1f960:	mov	r3, #1
   1f964:	b	1f96c <__assert_fail@plt+0xe64c>
   1f968:	mov	r3, #0
   1f96c:	uxtb	r3, r3
   1f970:	and	r3, r3, #1
   1f974:	uxtb	r3, r3
   1f978:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f97c:	ldrb	r2, [r1, #6]
   1f980:	and	r3, r3, #1
   1f984:	bic	r2, r2, #64	; 0x40
   1f988:	lsl	r3, r3, #6
   1f98c:	orr	r3, r3, r2
   1f990:	mov	r2, r3
   1f994:	strb	r2, [r1, #6]
   1f998:	ldrb	r3, [fp, #-5]
   1f99c:	sub	r3, r3, #10
   1f9a0:	cmp	r3, #115	; 0x73
   1f9a4:	ldrls	pc, [pc, r3, lsl #2]
   1f9a8:	b	1fe14 <__assert_fail@plt+0xeaf4>
   1f9ac:	andeq	pc, r1, ip, ror fp	; <UNPREDICTABLE>
   1f9b0:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9b4:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9b8:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9bc:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9c0:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9c4:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9c8:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9cc:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9d0:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9d4:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9d8:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9dc:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9e0:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9e4:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9e8:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9ec:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9f0:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9f4:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9f8:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1f9fc:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa00:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa04:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa08:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa0c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa10:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa14:	andeq	pc, r1, r8, ror sp	; <UNPREDICTABLE>
   1fa18:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa1c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa20:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa24:	muleq	r1, ip, ip
   1fa28:			; <UNDEFINED> instruction: 0x0001fcbc
   1fa2c:	andeq	pc, r1, ip, asr #23
   1fa30:	ldrdeq	pc, [r1], -ip
   1fa34:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa38:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa3c:	andeq	pc, r1, ip, ror #25
   1fa40:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa44:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa48:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa4c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa50:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa54:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa58:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa5c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa60:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa64:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa68:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa6c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa70:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa74:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa78:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa7c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa80:	andeq	pc, r1, ip, lsl #24
   1fa84:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa88:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa8c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa90:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa94:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa98:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fa9c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1faa0:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1faa4:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1faa8:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1faac:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fab0:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fab4:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fab8:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fabc:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fac0:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fac4:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fac8:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1facc:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fad0:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fad4:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fad8:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fadc:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fae0:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fae4:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fae8:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1faec:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1faf0:	ldrdeq	pc, [r1], -ip
   1faf4:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1faf8:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fafc:	strdeq	pc, [r1], -ip
   1fb00:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb04:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb08:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb0c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb10:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb14:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb18:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb1c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb20:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb24:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb28:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb2c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb30:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb34:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb38:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb3c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb40:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb44:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb48:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb4c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb50:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb54:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb58:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb5c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb60:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb64:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb68:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb6c:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fb70:	andeq	pc, r1, ip, lsr ip	; <UNPREDICTABLE>
   1fb74:	muleq	r1, ip, fp
   1fb78:	andeq	pc, r1, ip, ror #24
   1fb7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fb80:	and	r3, r3, #2048	; 0x800
   1fb84:	cmp	r3, #0
   1fb88:	beq	1fe1c <__assert_fail@plt+0xeafc>
   1fb8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fb90:	mov	r2, #10
   1fb94:	strb	r2, [r3, #4]
   1fb98:	b	1fe1c <__assert_fail@plt+0xeafc>
   1fb9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fba0:	and	r3, r3, #1024	; 0x400
   1fba4:	cmp	r3, #0
   1fba8:	bne	1fe24 <__assert_fail@plt+0xeb04>
   1fbac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fbb0:	and	r3, r3, #32768	; 0x8000
   1fbb4:	cmp	r3, #0
   1fbb8:	beq	1fe24 <__assert_fail@plt+0xeb04>
   1fbbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fbc0:	mov	r2, #10
   1fbc4:	strb	r2, [r3, #4]
   1fbc8:	b	1fe24 <__assert_fail@plt+0xeb04>
   1fbcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fbd0:	mov	r2, #11
   1fbd4:	strb	r2, [r3, #4]
   1fbd8:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fbdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fbe0:	and	r3, r3, #1024	; 0x400
   1fbe4:	cmp	r3, #0
   1fbe8:	bne	1fe2c <__assert_fail@plt+0xeb0c>
   1fbec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fbf0:	and	r3, r3, #2
   1fbf4:	cmp	r3, #0
   1fbf8:	bne	1fe2c <__assert_fail@plt+0xeb0c>
   1fbfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc00:	mov	r2, #18
   1fc04:	strb	r2, [r3, #4]
   1fc08:	b	1fe2c <__assert_fail@plt+0xeb0c>
   1fc0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fc10:	and	r3, r3, #1024	; 0x400
   1fc14:	cmp	r3, #0
   1fc18:	bne	1fe34 <__assert_fail@plt+0xeb14>
   1fc1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fc20:	and	r3, r3, #2
   1fc24:	cmp	r3, #0
   1fc28:	bne	1fe34 <__assert_fail@plt+0xeb14>
   1fc2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc30:	mov	r2, #19
   1fc34:	strb	r2, [r3, #4]
   1fc38:	b	1fe34 <__assert_fail@plt+0xeb14>
   1fc3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fc40:	and	r3, r3, #512	; 0x200
   1fc44:	cmp	r3, #0
   1fc48:	beq	1fe3c <__assert_fail@plt+0xeb1c>
   1fc4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fc50:	and	r3, r3, #4096	; 0x1000
   1fc54:	cmp	r3, #0
   1fc58:	beq	1fe3c <__assert_fail@plt+0xeb1c>
   1fc5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc60:	mov	r2, #23
   1fc64:	strb	r2, [r3, #4]
   1fc68:	b	1fe3c <__assert_fail@plt+0xeb1c>
   1fc6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fc70:	and	r3, r3, #512	; 0x200
   1fc74:	cmp	r3, #0
   1fc78:	beq	1fe44 <__assert_fail@plt+0xeb24>
   1fc7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fc80:	and	r3, r3, #4096	; 0x1000
   1fc84:	cmp	r3, #0
   1fc88:	beq	1fe44 <__assert_fail@plt+0xeb24>
   1fc8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc90:	mov	r2, #24
   1fc94:	strb	r2, [r3, #4]
   1fc98:	b	1fe44 <__assert_fail@plt+0xeb24>
   1fc9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fca0:	and	r3, r3, #8192	; 0x2000
   1fca4:	cmp	r3, #0
   1fca8:	beq	1fe4c <__assert_fail@plt+0xeb2c>
   1fcac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fcb0:	mov	r2, #8
   1fcb4:	strb	r2, [r3, #4]
   1fcb8:	b	1fe4c <__assert_fail@plt+0xeb2c>
   1fcbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fcc0:	and	r3, r3, #8192	; 0x2000
   1fcc4:	cmp	r3, #0
   1fcc8:	beq	1fe54 <__assert_fail@plt+0xeb34>
   1fccc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fcd0:	mov	r2, #9
   1fcd4:	strb	r2, [r3, #4]
   1fcd8:	b	1fe54 <__assert_fail@plt+0xeb34>
   1fcdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fce0:	mov	r2, #20
   1fce4:	strb	r2, [r3, #4]
   1fce8:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fcec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fcf0:	mov	r2, #5
   1fcf4:	strb	r2, [r3, #4]
   1fcf8:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fcfc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fd00:	ldr	r3, [pc, #360]	; 1fe70 <__assert_fail@plt+0xeb50>
   1fd04:	and	r3, r3, r2
   1fd08:	cmp	r3, #0
   1fd0c:	bne	1fd5c <__assert_fail@plt+0xea3c>
   1fd10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fd14:	ldr	r3, [r3, #40]	; 0x28
   1fd18:	cmp	r3, #0
   1fd1c:	beq	1fd5c <__assert_fail@plt+0xea3c>
   1fd20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fd24:	ldr	r2, [r3, #4]
   1fd28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fd2c:	ldr	r3, [r3, #40]	; 0x28
   1fd30:	sub	r3, r3, #1
   1fd34:	add	r3, r2, r3
   1fd38:	ldrb	r3, [r3]
   1fd3c:	strb	r3, [fp, #-17]	; 0xffffffef
   1fd40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fd44:	and	r3, r3, #2048	; 0x800
   1fd48:	cmp	r3, #0
   1fd4c:	beq	1fe60 <__assert_fail@plt+0xeb40>
   1fd50:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1fd54:	cmp	r3, #10
   1fd58:	bne	1fe60 <__assert_fail@plt+0xeb40>
   1fd5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fd60:	mov	r2, #12
   1fd64:	strb	r2, [r3, #4]
   1fd68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fd6c:	mov	r2, #16
   1fd70:	str	r2, [r3]
   1fd74:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fd78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fd7c:	and	r3, r3, #8
   1fd80:	cmp	r3, #0
   1fd84:	bne	1fdf8 <__assert_fail@plt+0xead8>
   1fd88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fd8c:	ldr	r3, [r3, #40]	; 0x28
   1fd90:	add	r2, r3, #1
   1fd94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fd98:	ldr	r3, [r3, #48]	; 0x30
   1fd9c:	cmp	r2, r3
   1fda0:	beq	1fdf8 <__assert_fail@plt+0xead8>
   1fda4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fda8:	ldr	r3, [r3, #40]	; 0x28
   1fdac:	add	r2, r3, #1
   1fdb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fdb4:	str	r2, [r3, #40]	; 0x28
   1fdb8:	sub	r3, fp, #28
   1fdbc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fdc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1fdc4:	mov	r0, r3
   1fdc8:	bl	1f13c <__assert_fail@plt+0xde1c>
   1fdcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fdd0:	ldr	r3, [r3, #40]	; 0x28
   1fdd4:	sub	r2, r3, #1
   1fdd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fddc:	str	r2, [r3, #40]	; 0x28
   1fde0:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   1fde4:	cmp	r3, #10
   1fde8:	beq	1fdf8 <__assert_fail@plt+0xead8>
   1fdec:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   1fdf0:	cmp	r3, #9
   1fdf4:	bne	1fe5c <__assert_fail@plt+0xeb3c>
   1fdf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fdfc:	mov	r2, #12
   1fe00:	strb	r2, [r3, #4]
   1fe04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fe08:	mov	r2, #32
   1fe0c:	str	r2, [r3]
   1fe10:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fe14:	nop			; (mov r0, r0)
   1fe18:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fe1c:	nop			; (mov r0, r0)
   1fe20:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fe24:	nop			; (mov r0, r0)
   1fe28:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fe2c:	nop			; (mov r0, r0)
   1fe30:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fe34:	nop			; (mov r0, r0)
   1fe38:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fe3c:	nop			; (mov r0, r0)
   1fe40:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fe44:	nop			; (mov r0, r0)
   1fe48:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fe4c:	nop			; (mov r0, r0)
   1fe50:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fe54:	nop			; (mov r0, r0)
   1fe58:	b	1fe60 <__assert_fail@plt+0xeb40>
   1fe5c:	nop			; (mov r0, r0)
   1fe60:	mov	r3, #1
   1fe64:	mov	r0, r3
   1fe68:	sub	sp, fp, #4
   1fe6c:	pop	{fp, pc}
   1fe70:	addeq	r0, r0, r8
   1fe74:	push	{fp}		; (str fp, [sp, #-4]!)
   1fe78:	add	fp, sp, #0
   1fe7c:	sub	sp, sp, #36	; 0x24
   1fe80:	str	r0, [fp, #-24]	; 0xffffffe8
   1fe84:	str	r1, [fp, #-28]	; 0xffffffe4
   1fe88:	str	r2, [fp, #-32]	; 0xffffffe0
   1fe8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fe90:	ldr	r2, [r3, #56]	; 0x38
   1fe94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fe98:	ldr	r3, [r3, #40]	; 0x28
   1fe9c:	cmp	r2, r3
   1fea0:	bgt	1feb8 <__assert_fail@plt+0xeb98>
   1fea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fea8:	mov	r2, #2
   1feac:	strb	r2, [r3, #4]
   1feb0:	mov	r3, #0
   1feb4:	b	20114 <__assert_fail@plt+0xedf4>
   1feb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1febc:	ldr	r3, [r3, #4]
   1fec0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fec4:	ldr	r2, [r2, #40]	; 0x28
   1fec8:	add	r3, r3, r2
   1fecc:	ldrb	r3, [r3]
   1fed0:	strb	r3, [fp, #-13]
   1fed4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fed8:	ldrb	r2, [fp, #-13]
   1fedc:	strb	r2, [r3]
   1fee0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fee4:	ldr	r3, [r3, #80]	; 0x50
   1fee8:	cmp	r3, #1
   1feec:	ble	1ff40 <__assert_fail@plt+0xec20>
   1fef0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fef4:	ldr	r2, [r3, #40]	; 0x28
   1fef8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fefc:	ldr	r3, [r3, #28]
   1ff00:	cmp	r2, r3
   1ff04:	beq	1ff40 <__assert_fail@plt+0xec20>
   1ff08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff0c:	ldr	r2, [r3, #8]
   1ff10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff14:	ldr	r3, [r3, #40]	; 0x28
   1ff18:	lsl	r3, r3, #2
   1ff1c:	add	r3, r2, r3
   1ff20:	ldr	r3, [r3]
   1ff24:	cmn	r3, #1
   1ff28:	bne	1ff40 <__assert_fail@plt+0xec20>
   1ff2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ff30:	mov	r2, #1
   1ff34:	strb	r2, [r3, #4]
   1ff38:	mov	r3, #1
   1ff3c:	b	20114 <__assert_fail@plt+0xedf4>
   1ff40:	ldrb	r3, [fp, #-13]
   1ff44:	cmp	r3, #92	; 0x5c
   1ff48:	bne	1ffc8 <__assert_fail@plt+0xeca8>
   1ff4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ff50:	and	r3, r3, #1
   1ff54:	cmp	r3, #0
   1ff58:	beq	1ffc8 <__assert_fail@plt+0xeca8>
   1ff5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff60:	ldr	r3, [r3, #40]	; 0x28
   1ff64:	add	r2, r3, #1
   1ff68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff6c:	ldr	r3, [r3, #48]	; 0x30
   1ff70:	cmp	r2, r3
   1ff74:	bge	1ffc8 <__assert_fail@plt+0xeca8>
   1ff78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff7c:	ldr	r3, [r3, #40]	; 0x28
   1ff80:	add	r2, r3, #1
   1ff84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff88:	str	r2, [r3, #40]	; 0x28
   1ff8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff90:	ldr	r3, [r3, #4]
   1ff94:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ff98:	ldr	r2, [r2, #40]	; 0x28
   1ff9c:	add	r3, r3, r2
   1ffa0:	ldrb	r3, [r3]
   1ffa4:	strb	r3, [fp, #-14]
   1ffa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ffac:	ldrb	r2, [fp, #-14]
   1ffb0:	strb	r2, [r3]
   1ffb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ffb8:	mov	r2, #1
   1ffbc:	strb	r2, [r3, #4]
   1ffc0:	mov	r3, #1
   1ffc4:	b	20114 <__assert_fail@plt+0xedf4>
   1ffc8:	ldrb	r3, [fp, #-13]
   1ffcc:	cmp	r3, #91	; 0x5b
   1ffd0:	bne	200b8 <__assert_fail@plt+0xed98>
   1ffd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ffd8:	ldr	r3, [r3, #40]	; 0x28
   1ffdc:	add	r2, r3, #1
   1ffe0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ffe4:	ldr	r3, [r3, #48]	; 0x30
   1ffe8:	cmp	r2, r3
   1ffec:	bge	20014 <__assert_fail@plt+0xecf4>
   1fff0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fff4:	ldr	r2, [r3, #4]
   1fff8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fffc:	ldr	r3, [r3, #40]	; 0x28
   20000:	add	r3, r3, #1
   20004:	add	r3, r2, r3
   20008:	ldrb	r3, [r3]
   2000c:	strb	r3, [fp, #-5]
   20010:	b	2001c <__assert_fail@plt+0xecfc>
   20014:	mov	r3, #0
   20018:	strb	r3, [fp, #-5]
   2001c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20020:	ldrb	r2, [fp, #-5]
   20024:	strb	r2, [r3]
   20028:	mov	r3, #2
   2002c:	str	r3, [fp, #-12]
   20030:	ldrb	r3, [fp, #-5]
   20034:	cmp	r3, #58	; 0x3a
   20038:	beq	2006c <__assert_fail@plt+0xed4c>
   2003c:	cmp	r3, #61	; 0x3d
   20040:	beq	2005c <__assert_fail@plt+0xed3c>
   20044:	cmp	r3, #46	; 0x2e
   20048:	bne	2008c <__assert_fail@plt+0xed6c>
   2004c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20050:	mov	r2, #26
   20054:	strb	r2, [r3, #4]
   20058:	b	200b0 <__assert_fail@plt+0xed90>
   2005c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20060:	mov	r2, #28
   20064:	strb	r2, [r3, #4]
   20068:	b	200b0 <__assert_fail@plt+0xed90>
   2006c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20070:	and	r3, r3, #4
   20074:	cmp	r3, #0
   20078:	beq	2008c <__assert_fail@plt+0xed6c>
   2007c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20080:	mov	r2, #30
   20084:	strb	r2, [r3, #4]
   20088:	b	200b0 <__assert_fail@plt+0xed90>
   2008c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20090:	mov	r2, #1
   20094:	strb	r2, [r3, #4]
   20098:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2009c:	ldrb	r2, [fp, #-13]
   200a0:	strb	r2, [r3]
   200a4:	mov	r3, #1
   200a8:	str	r3, [fp, #-12]
   200ac:	nop			; (mov r0, r0)
   200b0:	ldr	r3, [fp, #-12]
   200b4:	b	20114 <__assert_fail@plt+0xedf4>
   200b8:	ldrb	r3, [fp, #-13]
   200bc:	cmp	r3, #93	; 0x5d
   200c0:	beq	200e4 <__assert_fail@plt+0xedc4>
   200c4:	cmp	r3, #94	; 0x5e
   200c8:	beq	200f4 <__assert_fail@plt+0xedd4>
   200cc:	cmp	r3, #45	; 0x2d
   200d0:	bne	20104 <__assert_fail@plt+0xede4>
   200d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   200d8:	mov	r2, #22
   200dc:	strb	r2, [r3, #4]
   200e0:	b	20110 <__assert_fail@plt+0xedf0>
   200e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   200e8:	mov	r2, #21
   200ec:	strb	r2, [r3, #4]
   200f0:	b	20110 <__assert_fail@plt+0xedf0>
   200f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   200f8:	mov	r2, #25
   200fc:	strb	r2, [r3, #4]
   20100:	b	20110 <__assert_fail@plt+0xedf0>
   20104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20108:	mov	r2, #1
   2010c:	strb	r2, [r3, #4]
   20110:	mov	r3, #1
   20114:	mov	r0, r3
   20118:	add	sp, fp, #0
   2011c:	pop	{fp}		; (ldr fp, [sp], #4)
   20120:	bx	lr
   20124:	push	{fp, lr}
   20128:	add	fp, sp, #4
   2012c:	sub	sp, sp, #48	; 0x30
   20130:	str	r0, [fp, #-32]	; 0xffffffe0
   20134:	str	r1, [fp, #-36]	; 0xffffffdc
   20138:	str	r2, [fp, #-40]	; 0xffffffd8
   2013c:	str	r3, [fp, #-44]	; 0xffffffd4
   20140:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20144:	ldr	r3, [r3]
   20148:	str	r3, [fp, #-12]
   2014c:	ldr	r3, [fp, #-12]
   20150:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20154:	str	r2, [r3, #128]	; 0x80
   20158:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2015c:	orr	r2, r3, #8388608	; 0x800000
   20160:	sub	r3, fp, #28
   20164:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20168:	mov	r0, r3
   2016c:	bl	1f0f0 <__assert_fail@plt+0xddd0>
   20170:	sub	r2, fp, #28
   20174:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20178:	str	r3, [sp, #4]
   2017c:	mov	r3, #0
   20180:	str	r3, [sp]
   20184:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20188:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2018c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20190:	bl	20280 <__assert_fail@plt+0xef60>
   20194:	str	r0, [fp, #-16]
   20198:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2019c:	ldr	r3, [r3]
   201a0:	cmp	r3, #0
   201a4:	movne	r3, #1
   201a8:	moveq	r3, #0
   201ac:	uxtb	r3, r3
   201b0:	cmp	r3, #0
   201b4:	beq	201dc <__assert_fail@plt+0xeebc>
   201b8:	ldr	r3, [fp, #-16]
   201bc:	cmp	r3, #0
   201c0:	moveq	r3, #1
   201c4:	movne	r3, #0
   201c8:	uxtb	r3, r3
   201cc:	cmp	r3, #0
   201d0:	beq	201dc <__assert_fail@plt+0xeebc>
   201d4:	mov	r3, #0
   201d8:	b	20274 <__assert_fail@plt+0xef54>
   201dc:	mov	r3, #2
   201e0:	mov	r2, #0
   201e4:	mov	r1, #0
   201e8:	ldr	r0, [fp, #-12]
   201ec:	bl	23cdc <__assert_fail@plt+0x129bc>
   201f0:	str	r0, [fp, #-20]	; 0xffffffec
   201f4:	ldr	r3, [fp, #-16]
   201f8:	cmp	r3, #0
   201fc:	beq	2021c <__assert_fail@plt+0xeefc>
   20200:	mov	r3, #16
   20204:	ldr	r2, [fp, #-20]	; 0xffffffec
   20208:	ldr	r1, [fp, #-16]
   2020c:	ldr	r0, [fp, #-12]
   20210:	bl	23cdc <__assert_fail@plt+0x129bc>
   20214:	str	r0, [fp, #-8]
   20218:	b	20224 <__assert_fail@plt+0xef04>
   2021c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20220:	str	r3, [fp, #-8]
   20224:	ldr	r3, [fp, #-20]	; 0xffffffec
   20228:	cmp	r3, #0
   2022c:	moveq	r3, #1
   20230:	movne	r3, #0
   20234:	uxtb	r3, r3
   20238:	cmp	r3, #0
   2023c:	bne	2025c <__assert_fail@plt+0xef3c>
   20240:	ldr	r3, [fp, #-8]
   20244:	cmp	r3, #0
   20248:	moveq	r3, #1
   2024c:	movne	r3, #0
   20250:	uxtb	r3, r3
   20254:	cmp	r3, #0
   20258:	beq	20270 <__assert_fail@plt+0xef50>
   2025c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20260:	mov	r2, #12
   20264:	str	r2, [r3]
   20268:	mov	r3, #0
   2026c:	b	20274 <__assert_fail@plt+0xef54>
   20270:	ldr	r3, [fp, #-8]
   20274:	mov	r0, r3
   20278:	sub	sp, fp, #4
   2027c:	pop	{fp, pc}
   20280:	push	{fp, lr}
   20284:	add	fp, sp, #4
   20288:	sub	sp, sp, #48	; 0x30
   2028c:	str	r0, [fp, #-32]	; 0xffffffe0
   20290:	str	r1, [fp, #-36]	; 0xffffffdc
   20294:	str	r2, [fp, #-40]	; 0xffffffd8
   20298:	str	r3, [fp, #-44]	; 0xffffffd4
   2029c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   202a0:	ldr	r3, [r3]
   202a4:	str	r3, [fp, #-16]
   202a8:	mov	r3, #0
   202ac:	str	r3, [fp, #-12]
   202b0:	ldr	r3, [fp, #-16]
   202b4:	ldr	r3, [r3, #84]	; 0x54
   202b8:	str	r3, [fp, #-20]	; 0xffffffec
   202bc:	ldr	r3, [fp, #8]
   202c0:	str	r3, [sp, #4]
   202c4:	ldr	r3, [fp, #4]
   202c8:	str	r3, [sp]
   202cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   202d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   202d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   202d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   202dc:	bl	204ac <__assert_fail@plt+0xf18c>
   202e0:	str	r0, [fp, #-8]
   202e4:	ldr	r3, [fp, #8]
   202e8:	ldr	r3, [r3]
   202ec:	cmp	r3, #0
   202f0:	movne	r3, #1
   202f4:	moveq	r3, #0
   202f8:	uxtb	r3, r3
   202fc:	cmp	r3, #0
   20300:	beq	20488 <__assert_fail@plt+0xf168>
   20304:	ldr	r3, [fp, #-8]
   20308:	cmp	r3, #0
   2030c:	moveq	r3, #1
   20310:	movne	r3, #0
   20314:	uxtb	r3, r3
   20318:	cmp	r3, #0
   2031c:	beq	20488 <__assert_fail@plt+0xf168>
   20320:	mov	r3, #0
   20324:	b	2049c <__assert_fail@plt+0xf17c>
   20328:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2032c:	orr	r3, r3, #8388608	; 0x800000
   20330:	mov	r2, r3
   20334:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20338:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2033c:	bl	1f0f0 <__assert_fail@plt+0xddd0>
   20340:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20344:	ldrb	r3, [r3, #4]
   20348:	cmp	r3, #10
   2034c:	beq	20438 <__assert_fail@plt+0xf118>
   20350:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20354:	ldrb	r3, [r3, #4]
   20358:	cmp	r3, #2
   2035c:	beq	20438 <__assert_fail@plt+0xf118>
   20360:	ldr	r3, [fp, #4]
   20364:	cmp	r3, #0
   20368:	beq	2037c <__assert_fail@plt+0xf05c>
   2036c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20370:	ldrb	r3, [r3, #4]
   20374:	cmp	r3, #9
   20378:	beq	20438 <__assert_fail@plt+0xf118>
   2037c:	ldr	r3, [fp, #-16]
   20380:	ldr	r3, [r3, #84]	; 0x54
   20384:	str	r3, [fp, #-24]	; 0xffffffe8
   20388:	ldr	r3, [fp, #-16]
   2038c:	ldr	r2, [fp, #-20]	; 0xffffffec
   20390:	str	r2, [r3, #84]	; 0x54
   20394:	ldr	r3, [fp, #8]
   20398:	str	r3, [sp, #4]
   2039c:	ldr	r3, [fp, #4]
   203a0:	str	r3, [sp]
   203a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   203a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   203ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   203b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   203b4:	bl	204ac <__assert_fail@plt+0xf18c>
   203b8:	str	r0, [fp, #-12]
   203bc:	ldr	r3, [fp, #8]
   203c0:	ldr	r3, [r3]
   203c4:	cmp	r3, #0
   203c8:	movne	r3, #1
   203cc:	moveq	r3, #0
   203d0:	uxtb	r3, r3
   203d4:	cmp	r3, #0
   203d8:	beq	2041c <__assert_fail@plt+0xf0fc>
   203dc:	ldr	r3, [fp, #-12]
   203e0:	cmp	r3, #0
   203e4:	moveq	r3, #1
   203e8:	movne	r3, #0
   203ec:	uxtb	r3, r3
   203f0:	cmp	r3, #0
   203f4:	beq	2041c <__assert_fail@plt+0xf0fc>
   203f8:	ldr	r3, [fp, #-8]
   203fc:	cmp	r3, #0
   20400:	beq	20414 <__assert_fail@plt+0xf0f4>
   20404:	mov	r2, #0
   20408:	ldr	r1, [pc, #152]	; 204a8 <__assert_fail@plt+0xf188>
   2040c:	ldr	r0, [fp, #-8]
   20410:	bl	1d650 <__assert_fail@plt+0xc330>
   20414:	mov	r3, #0
   20418:	b	2049c <__assert_fail@plt+0xf17c>
   2041c:	ldr	r3, [fp, #-16]
   20420:	ldr	r2, [r3, #84]	; 0x54
   20424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20428:	orr	r2, r2, r3
   2042c:	ldr	r3, [fp, #-16]
   20430:	str	r2, [r3, #84]	; 0x54
   20434:	b	20440 <__assert_fail@plt+0xf120>
   20438:	mov	r3, #0
   2043c:	str	r3, [fp, #-12]
   20440:	mov	r3, #10
   20444:	ldr	r2, [fp, #-12]
   20448:	ldr	r1, [fp, #-8]
   2044c:	ldr	r0, [fp, #-16]
   20450:	bl	23cdc <__assert_fail@plt+0x129bc>
   20454:	str	r0, [fp, #-8]
   20458:	ldr	r3, [fp, #-8]
   2045c:	cmp	r3, #0
   20460:	moveq	r3, #1
   20464:	movne	r3, #0
   20468:	uxtb	r3, r3
   2046c:	cmp	r3, #0
   20470:	beq	20488 <__assert_fail@plt+0xf168>
   20474:	ldr	r3, [fp, #8]
   20478:	mov	r2, #12
   2047c:	str	r2, [r3]
   20480:	mov	r3, #0
   20484:	b	2049c <__assert_fail@plt+0xf17c>
   20488:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2048c:	ldrb	r3, [r3, #4]
   20490:	cmp	r3, #10
   20494:	beq	20328 <__assert_fail@plt+0xf008>
   20498:	ldr	r3, [fp, #-8]
   2049c:	mov	r0, r3
   204a0:	sub	sp, fp, #4
   204a4:	pop	{fp, pc}
   204a8:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   204ac:	push	{fp, lr}
   204b0:	add	fp, sp, #4
   204b4:	sub	sp, sp, #40	; 0x28
   204b8:	str	r0, [fp, #-24]	; 0xffffffe8
   204bc:	str	r1, [fp, #-28]	; 0xffffffe4
   204c0:	str	r2, [fp, #-32]	; 0xffffffe0
   204c4:	str	r3, [fp, #-36]	; 0xffffffdc
   204c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   204cc:	ldr	r3, [r3]
   204d0:	str	r3, [fp, #-12]
   204d4:	ldr	r3, [fp, #8]
   204d8:	str	r3, [sp, #4]
   204dc:	ldr	r3, [fp, #4]
   204e0:	str	r3, [sp]
   204e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   204e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   204ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   204f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   204f4:	bl	206a8 <__assert_fail@plt+0xf388>
   204f8:	str	r0, [fp, #-8]
   204fc:	ldr	r3, [fp, #8]
   20500:	ldr	r3, [r3]
   20504:	cmp	r3, #0
   20508:	movne	r3, #1
   2050c:	moveq	r3, #0
   20510:	uxtb	r3, r3
   20514:	cmp	r3, #0
   20518:	beq	20658 <__assert_fail@plt+0xf338>
   2051c:	ldr	r3, [fp, #-8]
   20520:	cmp	r3, #0
   20524:	moveq	r3, #1
   20528:	movne	r3, #0
   2052c:	uxtb	r3, r3
   20530:	cmp	r3, #0
   20534:	beq	20658 <__assert_fail@plt+0xf338>
   20538:	mov	r3, #0
   2053c:	b	20698 <__assert_fail@plt+0xf378>
   20540:	ldr	r3, [fp, #8]
   20544:	str	r3, [sp, #4]
   20548:	ldr	r3, [fp, #4]
   2054c:	str	r3, [sp]
   20550:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20554:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20558:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2055c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20560:	bl	206a8 <__assert_fail@plt+0xf388>
   20564:	str	r0, [fp, #-16]
   20568:	ldr	r3, [fp, #8]
   2056c:	ldr	r3, [r3]
   20570:	cmp	r3, #0
   20574:	movne	r3, #1
   20578:	moveq	r3, #0
   2057c:	uxtb	r3, r3
   20580:	cmp	r3, #0
   20584:	beq	205c8 <__assert_fail@plt+0xf2a8>
   20588:	ldr	r3, [fp, #-16]
   2058c:	cmp	r3, #0
   20590:	moveq	r3, #1
   20594:	movne	r3, #0
   20598:	uxtb	r3, r3
   2059c:	cmp	r3, #0
   205a0:	beq	205c8 <__assert_fail@plt+0xf2a8>
   205a4:	ldr	r3, [fp, #-8]
   205a8:	cmp	r3, #0
   205ac:	beq	205c0 <__assert_fail@plt+0xf2a0>
   205b0:	mov	r2, #0
   205b4:	ldr	r1, [pc, #232]	; 206a4 <__assert_fail@plt+0xf384>
   205b8:	ldr	r0, [fp, #-8]
   205bc:	bl	1d650 <__assert_fail@plt+0xc330>
   205c0:	mov	r3, #0
   205c4:	b	20698 <__assert_fail@plt+0xf378>
   205c8:	ldr	r3, [fp, #-8]
   205cc:	cmp	r3, #0
   205d0:	beq	20644 <__assert_fail@plt+0xf324>
   205d4:	ldr	r3, [fp, #-16]
   205d8:	cmp	r3, #0
   205dc:	beq	20644 <__assert_fail@plt+0xf324>
   205e0:	mov	r3, #16
   205e4:	ldr	r2, [fp, #-16]
   205e8:	ldr	r1, [fp, #-8]
   205ec:	ldr	r0, [fp, #-12]
   205f0:	bl	23cdc <__assert_fail@plt+0x129bc>
   205f4:	str	r0, [fp, #-20]	; 0xffffffec
   205f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   205fc:	cmp	r3, #0
   20600:	bne	20638 <__assert_fail@plt+0xf318>
   20604:	mov	r2, #0
   20608:	ldr	r1, [pc, #148]	; 206a4 <__assert_fail@plt+0xf384>
   2060c:	ldr	r0, [fp, #-16]
   20610:	bl	1d650 <__assert_fail@plt+0xc330>
   20614:	mov	r2, #0
   20618:	ldr	r1, [pc, #132]	; 206a4 <__assert_fail@plt+0xf384>
   2061c:	ldr	r0, [fp, #-8]
   20620:	bl	1d650 <__assert_fail@plt+0xc330>
   20624:	ldr	r3, [fp, #8]
   20628:	mov	r2, #12
   2062c:	str	r2, [r3]
   20630:	mov	r3, #0
   20634:	b	20698 <__assert_fail@plt+0xf378>
   20638:	ldr	r3, [fp, #-20]	; 0xffffffec
   2063c:	str	r3, [fp, #-8]
   20640:	b	20658 <__assert_fail@plt+0xf338>
   20644:	ldr	r3, [fp, #-8]
   20648:	cmp	r3, #0
   2064c:	bne	20658 <__assert_fail@plt+0xf338>
   20650:	ldr	r3, [fp, #-16]
   20654:	str	r3, [fp, #-8]
   20658:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2065c:	ldrb	r3, [r3, #4]
   20660:	cmp	r3, #10
   20664:	beq	20694 <__assert_fail@plt+0xf374>
   20668:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2066c:	ldrb	r3, [r3, #4]
   20670:	cmp	r3, #2
   20674:	beq	20694 <__assert_fail@plt+0xf374>
   20678:	ldr	r3, [fp, #4]
   2067c:	cmp	r3, #0
   20680:	beq	20540 <__assert_fail@plt+0xf220>
   20684:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20688:	ldrb	r3, [r3, #4]
   2068c:	cmp	r3, #9
   20690:	bne	20540 <__assert_fail@plt+0xf220>
   20694:	ldr	r3, [fp, #-8]
   20698:	mov	r0, r3
   2069c:	sub	sp, fp, #4
   206a0:	pop	{fp, pc}
   206a4:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   206a8:	push	{fp, lr}
   206ac:	add	fp, sp, #4
   206b0:	sub	sp, sp, #48	; 0x30
   206b4:	str	r0, [fp, #-32]	; 0xffffffe0
   206b8:	str	r1, [fp, #-36]	; 0xffffffdc
   206bc:	str	r2, [fp, #-40]	; 0xffffffd8
   206c0:	str	r3, [fp, #-44]	; 0xffffffd4
   206c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   206c8:	ldr	r3, [r3]
   206cc:	str	r3, [fp, #-16]
   206d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   206d4:	ldrb	r3, [r3, #4]
   206d8:	sub	r3, r3, #1
   206dc:	cmp	r3, #35	; 0x23
   206e0:	ldrls	pc, [pc, r3, lsl #2]
   206e4:	b	20ee0 <__assert_fail@plt+0xfbc0>
   206e8:	andeq	r0, r2, r8, ror r7
   206ec:	andeq	r0, r2, r4, asr #29
   206f0:	andeq	r0, r2, r0, ror #29
   206f4:	andeq	r0, r2, ip, lsl #19
   206f8:	andeq	r0, r2, r0, asr sp
   206fc:	andeq	r0, r2, r0, ror #29
   20700:	andeq	r0, r2, r0, ror #29
   20704:			; <UNDEFINED> instruction: 0x000208b8
   20708:	andeq	r0, r2, ip, ror #21
   2070c:	andeq	r0, r2, r4, asr #29
   20710:	andeq	r0, r2, ip, ror sl
   20714:	andeq	r0, r2, r4, ror fp
   20718:	andeq	r0, r2, r0, ror #29
   2071c:	andeq	r0, r2, r0, ror #29
   20720:	andeq	r0, r2, r0, ror #29
   20724:	andeq	r0, r2, r0, ror #29
   20728:	andeq	r0, r2, r0, ror #29
   2072c:	andeq	r0, r2, ip, ror sl
   20730:	andeq	r0, r2, ip, ror sl
   20734:	andeq	r0, r2, r8, lsr #18
   20738:	andeq	r0, r2, r0, ror #29
   2073c:	andeq	r0, r2, r0, ror #29
   20740:	andeq	r0, r2, r8, asr sl
   20744:	andeq	r0, r2, r0, lsr #22
   20748:	andeq	r0, r2, r0, ror #29
   2074c:	andeq	r0, r2, r0, ror #29
   20750:	andeq	r0, r2, r0, ror #29
   20754:	andeq	r0, r2, r0, ror #29
   20758:	andeq	r0, r2, r0, ror #29
   2075c:	andeq	r0, r2, r0, ror #29
   20760:	andeq	r0, r2, r0, ror #29
   20764:			; <UNDEFINED> instruction: 0x00020dbc
   20768:			; <UNDEFINED> instruction: 0x00020dbc
   2076c:	andeq	r0, r2, r0, asr #28
   20770:	andeq	r0, r2, r0, asr #28
   20774:	andeq	r0, r2, ip, asr #29
   20778:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2077c:	mov	r2, #0
   20780:	mov	r1, #0
   20784:	ldr	r0, [fp, #-16]
   20788:	bl	23d38 <__assert_fail@plt+0x12a18>
   2078c:	str	r0, [fp, #-8]
   20790:	ldr	r3, [fp, #-8]
   20794:	cmp	r3, #0
   20798:	moveq	r3, #1
   2079c:	movne	r3, #0
   207a0:	uxtb	r3, r3
   207a4:	cmp	r3, #0
   207a8:	beq	207c0 <__assert_fail@plt+0xf4a0>
   207ac:	ldr	r3, [fp, #8]
   207b0:	mov	r2, #12
   207b4:	str	r2, [r3]
   207b8:	mov	r3, #0
   207bc:	b	2105c <__assert_fail@plt+0xfd3c>
   207c0:	ldr	r3, [fp, #-16]
   207c4:	ldr	r3, [r3, #92]	; 0x5c
   207c8:	cmp	r3, #1
   207cc:	ble	20ee0 <__assert_fail@plt+0xfbc0>
   207d0:	b	20860 <__assert_fail@plt+0xf540>
   207d4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   207d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   207dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   207e0:	bl	1f0f0 <__assert_fail@plt+0xddd0>
   207e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   207e8:	mov	r2, #0
   207ec:	mov	r1, #0
   207f0:	ldr	r0, [fp, #-16]
   207f4:	bl	23d38 <__assert_fail@plt+0x12a18>
   207f8:	str	r0, [fp, #-20]	; 0xffffffec
   207fc:	mov	r3, #16
   20800:	ldr	r2, [fp, #-20]	; 0xffffffec
   20804:	ldr	r1, [fp, #-8]
   20808:	ldr	r0, [fp, #-16]
   2080c:	bl	23cdc <__assert_fail@plt+0x129bc>
   20810:	str	r0, [fp, #-8]
   20814:	ldr	r3, [fp, #-20]	; 0xffffffec
   20818:	cmp	r3, #0
   2081c:	moveq	r3, #1
   20820:	movne	r3, #0
   20824:	uxtb	r3, r3
   20828:	cmp	r3, #0
   2082c:	bne	2084c <__assert_fail@plt+0xf52c>
   20830:	ldr	r3, [fp, #-8]
   20834:	cmp	r3, #0
   20838:	moveq	r3, #1
   2083c:	movne	r3, #0
   20840:	uxtb	r3, r3
   20844:	cmp	r3, #0
   20848:	beq	20860 <__assert_fail@plt+0xf540>
   2084c:	ldr	r3, [fp, #8]
   20850:	mov	r2, #12
   20854:	str	r2, [r3]
   20858:	mov	r3, #0
   2085c:	b	2105c <__assert_fail@plt+0xfd3c>
   20860:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20864:	ldr	r2, [r3, #56]	; 0x38
   20868:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2086c:	ldr	r3, [r3, #40]	; 0x28
   20870:	cmp	r2, r3
   20874:	ble	20ee0 <__assert_fail@plt+0xfbc0>
   20878:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2087c:	ldr	r2, [r3, #40]	; 0x28
   20880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20884:	ldr	r3, [r3, #28]
   20888:	cmp	r2, r3
   2088c:	beq	20ee0 <__assert_fail@plt+0xfbc0>
   20890:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20894:	ldr	r2, [r3, #8]
   20898:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2089c:	ldr	r3, [r3, #40]	; 0x28
   208a0:	lsl	r3, r3, #2
   208a4:	add	r3, r2, r3
   208a8:	ldr	r3, [r3]
   208ac:	cmn	r3, #1
   208b0:	beq	207d4 <__assert_fail@plt+0xf4b4>
   208b4:	b	20ee0 <__assert_fail@plt+0xfbc0>
   208b8:	ldr	r3, [fp, #4]
   208bc:	add	r3, r3, #1
   208c0:	ldr	r2, [fp, #8]
   208c4:	str	r2, [sp, #4]
   208c8:	str	r3, [sp]
   208cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   208d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   208d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   208d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   208dc:	bl	21080 <__assert_fail@plt+0xfd60>
   208e0:	str	r0, [fp, #-8]
   208e4:	ldr	r3, [fp, #8]
   208e8:	ldr	r3, [r3]
   208ec:	cmp	r3, #0
   208f0:	movne	r3, #1
   208f4:	moveq	r3, #0
   208f8:	uxtb	r3, r3
   208fc:	cmp	r3, #0
   20900:	beq	20ee8 <__assert_fail@plt+0xfbc8>
   20904:	ldr	r3, [fp, #-8]
   20908:	cmp	r3, #0
   2090c:	moveq	r3, #1
   20910:	movne	r3, #0
   20914:	uxtb	r3, r3
   20918:	cmp	r3, #0
   2091c:	beq	20ee8 <__assert_fail@plt+0xfbc8>
   20920:	mov	r3, #0
   20924:	b	2105c <__assert_fail@plt+0xfd3c>
   20928:	ldr	r3, [fp, #8]
   2092c:	str	r3, [sp]
   20930:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20934:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20938:	ldr	r1, [fp, #-16]
   2093c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20940:	bl	21df8 <__assert_fail@plt+0x10ad8>
   20944:	str	r0, [fp, #-8]
   20948:	ldr	r3, [fp, #8]
   2094c:	ldr	r3, [r3]
   20950:	cmp	r3, #0
   20954:	movne	r3, #1
   20958:	moveq	r3, #0
   2095c:	uxtb	r3, r3
   20960:	cmp	r3, #0
   20964:	beq	20ef0 <__assert_fail@plt+0xfbd0>
   20968:	ldr	r3, [fp, #-8]
   2096c:	cmp	r3, #0
   20970:	moveq	r3, #1
   20974:	movne	r3, #0
   20978:	uxtb	r3, r3
   2097c:	cmp	r3, #0
   20980:	beq	20ef0 <__assert_fail@plt+0xfbd0>
   20984:	mov	r3, #0
   20988:	b	2105c <__assert_fail@plt+0xfd3c>
   2098c:	ldr	r3, [fp, #-16]
   20990:	ldr	r3, [r3, #84]	; 0x54
   20994:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20998:	ldr	r2, [r2]
   2099c:	mov	r1, #1
   209a0:	lsl	r2, r1, r2
   209a4:	and	r3, r3, r2
   209a8:	cmp	r3, #0
   209ac:	bne	209c4 <__assert_fail@plt+0xf6a4>
   209b0:	ldr	r3, [fp, #8]
   209b4:	mov	r2, #6
   209b8:	str	r2, [r3]
   209bc:	mov	r3, #0
   209c0:	b	2105c <__assert_fail@plt+0xfd3c>
   209c4:	ldr	r3, [fp, #-16]
   209c8:	ldr	r3, [r3, #80]	; 0x50
   209cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   209d0:	ldr	r2, [r2]
   209d4:	mov	r1, #1
   209d8:	lsl	r2, r1, r2
   209dc:	orr	r2, r3, r2
   209e0:	ldr	r3, [fp, #-16]
   209e4:	str	r2, [r3, #80]	; 0x50
   209e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   209ec:	mov	r2, #0
   209f0:	mov	r1, #0
   209f4:	ldr	r0, [fp, #-16]
   209f8:	bl	23d38 <__assert_fail@plt+0x12a18>
   209fc:	str	r0, [fp, #-8]
   20a00:	ldr	r3, [fp, #-8]
   20a04:	cmp	r3, #0
   20a08:	moveq	r3, #1
   20a0c:	movne	r3, #0
   20a10:	uxtb	r3, r3
   20a14:	cmp	r3, #0
   20a18:	beq	20a30 <__assert_fail@plt+0xf710>
   20a1c:	ldr	r3, [fp, #8]
   20a20:	mov	r2, #12
   20a24:	str	r2, [r3]
   20a28:	mov	r3, #0
   20a2c:	b	2105c <__assert_fail@plt+0xfd3c>
   20a30:	ldr	r3, [fp, #-16]
   20a34:	ldr	r3, [r3, #76]	; 0x4c
   20a38:	add	r2, r3, #1
   20a3c:	ldr	r3, [fp, #-16]
   20a40:	str	r2, [r3, #76]	; 0x4c
   20a44:	ldr	r2, [fp, #-16]
   20a48:	ldrb	r3, [r2, #88]	; 0x58
   20a4c:	orr	r3, r3, #2
   20a50:	strb	r3, [r2, #88]	; 0x58
   20a54:	b	20f14 <__assert_fail@plt+0xfbf4>
   20a58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20a5c:	and	r3, r3, #16777216	; 0x1000000
   20a60:	cmp	r3, #0
   20a64:	beq	20a7c <__assert_fail@plt+0xf75c>
   20a68:	ldr	r3, [fp, #8]
   20a6c:	mov	r2, #13
   20a70:	str	r2, [r3]
   20a74:	mov	r3, #0
   20a78:	b	2105c <__assert_fail@plt+0xfd3c>
   20a7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20a80:	and	r3, r3, #32
   20a84:	cmp	r3, #0
   20a88:	beq	20aa0 <__assert_fail@plt+0xf780>
   20a8c:	ldr	r3, [fp, #8]
   20a90:	mov	r2, #13
   20a94:	str	r2, [r3]
   20a98:	mov	r3, #0
   20a9c:	b	2105c <__assert_fail@plt+0xfd3c>
   20aa0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20aa4:	and	r3, r3, #16
   20aa8:	cmp	r3, #0
   20aac:	beq	20aec <__assert_fail@plt+0xf7cc>
   20ab0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   20ab4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20ab8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20abc:	bl	1f0f0 <__assert_fail@plt+0xddd0>
   20ac0:	ldr	r3, [fp, #8]
   20ac4:	str	r3, [sp, #4]
   20ac8:	ldr	r3, [fp, #4]
   20acc:	str	r3, [sp]
   20ad0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20ad4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20ad8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20adc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20ae0:	bl	206a8 <__assert_fail@plt+0xf388>
   20ae4:	mov	r3, r0
   20ae8:	b	2105c <__assert_fail@plt+0xfd3c>
   20aec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20af0:	ldrb	r3, [r3, #4]
   20af4:	cmp	r3, #9
   20af8:	bne	20b20 <__assert_fail@plt+0xf800>
   20afc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20b00:	and	r3, r3, #131072	; 0x20000
   20b04:	cmp	r3, #0
   20b08:	bne	20b20 <__assert_fail@plt+0xf800>
   20b0c:	ldr	r3, [fp, #8]
   20b10:	mov	r2, #16
   20b14:	str	r2, [r3]
   20b18:	mov	r3, #0
   20b1c:	b	2105c <__assert_fail@plt+0xfd3c>
   20b20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20b24:	mov	r2, #1
   20b28:	strb	r2, [r3, #4]
   20b2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20b30:	mov	r2, #0
   20b34:	mov	r1, #0
   20b38:	ldr	r0, [fp, #-16]
   20b3c:	bl	23d38 <__assert_fail@plt+0x12a18>
   20b40:	str	r0, [fp, #-8]
   20b44:	ldr	r3, [fp, #-8]
   20b48:	cmp	r3, #0
   20b4c:	moveq	r3, #1
   20b50:	movne	r3, #0
   20b54:	uxtb	r3, r3
   20b58:	cmp	r3, #0
   20b5c:	beq	20ef8 <__assert_fail@plt+0xfbd8>
   20b60:	ldr	r3, [fp, #8]
   20b64:	mov	r2, #12
   20b68:	str	r2, [r3]
   20b6c:	mov	r3, #0
   20b70:	b	2105c <__assert_fail@plt+0xfd3c>
   20b74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20b78:	ldr	r2, [r3]
   20b7c:	ldr	r3, [pc, #1252]	; 21068 <__assert_fail@plt+0xfd48>
   20b80:	and	r3, r3, r2
   20b84:	cmp	r3, #0
   20b88:	beq	20bac <__assert_fail@plt+0xf88c>
   20b8c:	ldr	r3, [fp, #-16]
   20b90:	ldrb	r3, [r3, #88]	; 0x58
   20b94:	and	r3, r3, #16
   20b98:	uxtb	r3, r3
   20b9c:	cmp	r3, #0
   20ba0:	bne	20bac <__assert_fail@plt+0xf88c>
   20ba4:	ldr	r0, [fp, #-16]
   20ba8:	bl	1c870 <__assert_fail@plt+0xb550>
   20bac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20bb0:	ldr	r3, [r3]
   20bb4:	cmp	r3, #256	; 0x100
   20bb8:	beq	20bcc <__assert_fail@plt+0xf8ac>
   20bbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20bc0:	ldr	r3, [r3]
   20bc4:	cmp	r3, #512	; 0x200
   20bc8:	bne	20cec <__assert_fail@plt+0xf9cc>
   20bcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20bd0:	ldr	r3, [r3]
   20bd4:	cmp	r3, #256	; 0x100
   20bd8:	bne	20c10 <__assert_fail@plt+0xf8f0>
   20bdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20be0:	mov	r2, #6
   20be4:	str	r2, [r3]
   20be8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20bec:	mov	r2, #0
   20bf0:	mov	r1, #0
   20bf4:	ldr	r0, [fp, #-16]
   20bf8:	bl	23d38 <__assert_fail@plt+0x12a18>
   20bfc:	str	r0, [fp, #-12]
   20c00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20c04:	mov	r2, #9
   20c08:	str	r2, [r3]
   20c0c:	b	20c40 <__assert_fail@plt+0xf920>
   20c10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20c14:	mov	r2, #5
   20c18:	str	r2, [r3]
   20c1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20c20:	mov	r2, #0
   20c24:	mov	r1, #0
   20c28:	ldr	r0, [fp, #-16]
   20c2c:	bl	23d38 <__assert_fail@plt+0x12a18>
   20c30:	str	r0, [fp, #-12]
   20c34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20c38:	mov	r2, #10
   20c3c:	str	r2, [r3]
   20c40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20c44:	mov	r2, #0
   20c48:	mov	r1, #0
   20c4c:	ldr	r0, [fp, #-16]
   20c50:	bl	23d38 <__assert_fail@plt+0x12a18>
   20c54:	str	r0, [fp, #-24]	; 0xffffffe8
   20c58:	mov	r3, #10
   20c5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20c60:	ldr	r1, [fp, #-12]
   20c64:	ldr	r0, [fp, #-16]
   20c68:	bl	23cdc <__assert_fail@plt+0x129bc>
   20c6c:	str	r0, [fp, #-8]
   20c70:	ldr	r3, [fp, #-12]
   20c74:	cmp	r3, #0
   20c78:	moveq	r3, #1
   20c7c:	movne	r3, #0
   20c80:	uxtb	r3, r3
   20c84:	cmp	r3, #0
   20c88:	bne	20ca8 <__assert_fail@plt+0xf988>
   20c8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20c90:	cmp	r3, #0
   20c94:	moveq	r3, #1
   20c98:	movne	r3, #0
   20c9c:	uxtb	r3, r3
   20ca0:	cmp	r3, #0
   20ca4:	beq	20cb0 <__assert_fail@plt+0xf990>
   20ca8:	mov	r3, #1
   20cac:	b	20cb4 <__assert_fail@plt+0xf994>
   20cb0:	mov	r3, #0
   20cb4:	cmp	r3, #0
   20cb8:	bne	20cd8 <__assert_fail@plt+0xf9b8>
   20cbc:	ldr	r3, [fp, #-8]
   20cc0:	cmp	r3, #0
   20cc4:	moveq	r3, #1
   20cc8:	movne	r3, #0
   20ccc:	uxtb	r3, r3
   20cd0:	cmp	r3, #0
   20cd4:	beq	20d34 <__assert_fail@plt+0xfa14>
   20cd8:	ldr	r3, [fp, #8]
   20cdc:	mov	r2, #12
   20ce0:	str	r2, [r3]
   20ce4:	mov	r3, #0
   20ce8:	b	2105c <__assert_fail@plt+0xfd3c>
   20cec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20cf0:	mov	r2, #0
   20cf4:	mov	r1, #0
   20cf8:	ldr	r0, [fp, #-16]
   20cfc:	bl	23d38 <__assert_fail@plt+0x12a18>
   20d00:	str	r0, [fp, #-8]
   20d04:	ldr	r3, [fp, #-8]
   20d08:	cmp	r3, #0
   20d0c:	moveq	r3, #1
   20d10:	movne	r3, #0
   20d14:	uxtb	r3, r3
   20d18:	cmp	r3, #0
   20d1c:	beq	20d38 <__assert_fail@plt+0xfa18>
   20d20:	ldr	r3, [fp, #8]
   20d24:	mov	r2, #12
   20d28:	str	r2, [r3]
   20d2c:	mov	r3, #0
   20d30:	b	2105c <__assert_fail@plt+0xfd3c>
   20d34:	nop			; (mov r0, r0)
   20d38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   20d3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20d40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20d44:	bl	1f0f0 <__assert_fail@plt+0xddd0>
   20d48:	ldr	r3, [fp, #-8]
   20d4c:	b	2105c <__assert_fail@plt+0xfd3c>
   20d50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20d54:	mov	r2, #0
   20d58:	mov	r1, #0
   20d5c:	ldr	r0, [fp, #-16]
   20d60:	bl	23d38 <__assert_fail@plt+0x12a18>
   20d64:	str	r0, [fp, #-8]
   20d68:	ldr	r3, [fp, #-8]
   20d6c:	cmp	r3, #0
   20d70:	moveq	r3, #1
   20d74:	movne	r3, #0
   20d78:	uxtb	r3, r3
   20d7c:	cmp	r3, #0
   20d80:	beq	20d98 <__assert_fail@plt+0xfa78>
   20d84:	ldr	r3, [fp, #8]
   20d88:	mov	r2, #12
   20d8c:	str	r2, [r3]
   20d90:	mov	r3, #0
   20d94:	b	2105c <__assert_fail@plt+0xfd3c>
   20d98:	ldr	r3, [fp, #-16]
   20d9c:	ldr	r3, [r3, #92]	; 0x5c
   20da0:	cmp	r3, #1
   20da4:	ble	20f00 <__assert_fail@plt+0xfbe0>
   20da8:	ldr	r2, [fp, #-16]
   20dac:	ldrb	r3, [r2, #88]	; 0x58
   20db0:	orr	r3, r3, #2
   20db4:	strb	r3, [r2, #88]	; 0x58
   20db8:	b	20f00 <__assert_fail@plt+0xfbe0>
   20dbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20dc0:	ldr	r1, [r3, #64]	; 0x40
   20dc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20dc8:	ldrb	r3, [r3, #4]
   20dcc:	cmp	r3, #33	; 0x21
   20dd0:	moveq	r3, #1
   20dd4:	movne	r3, #0
   20dd8:	uxtb	r3, r3
   20ddc:	ldr	r2, [fp, #8]
   20de0:	str	r2, [sp, #4]
   20de4:	str	r3, [sp]
   20de8:	ldr	r3, [pc, #636]	; 2106c <__assert_fail@plt+0xfd4c>
   20dec:	ldr	r2, [pc, #636]	; 21070 <__assert_fail@plt+0xfd50>
   20df0:	ldr	r0, [fp, #-16]
   20df4:	bl	2387c <__assert_fail@plt+0x1255c>
   20df8:	str	r0, [fp, #-8]
   20dfc:	ldr	r3, [fp, #8]
   20e00:	ldr	r3, [r3]
   20e04:	cmp	r3, #0
   20e08:	movne	r3, #1
   20e0c:	moveq	r3, #0
   20e10:	uxtb	r3, r3
   20e14:	cmp	r3, #0
   20e18:	beq	20f08 <__assert_fail@plt+0xfbe8>
   20e1c:	ldr	r3, [fp, #-8]
   20e20:	cmp	r3, #0
   20e24:	moveq	r3, #1
   20e28:	movne	r3, #0
   20e2c:	uxtb	r3, r3
   20e30:	cmp	r3, #0
   20e34:	beq	20f08 <__assert_fail@plt+0xfbe8>
   20e38:	mov	r3, #0
   20e3c:	b	2105c <__assert_fail@plt+0xfd3c>
   20e40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20e44:	ldr	r1, [r3, #64]	; 0x40
   20e48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20e4c:	ldrb	r3, [r3, #4]
   20e50:	cmp	r3, #35	; 0x23
   20e54:	moveq	r3, #1
   20e58:	movne	r3, #0
   20e5c:	uxtb	r3, r3
   20e60:	ldr	r2, [fp, #8]
   20e64:	str	r2, [sp, #4]
   20e68:	str	r3, [sp]
   20e6c:	ldr	r3, [pc, #512]	; 21074 <__assert_fail@plt+0xfd54>
   20e70:	ldr	r2, [pc, #512]	; 21078 <__assert_fail@plt+0xfd58>
   20e74:	ldr	r0, [fp, #-16]
   20e78:	bl	2387c <__assert_fail@plt+0x1255c>
   20e7c:	str	r0, [fp, #-8]
   20e80:	ldr	r3, [fp, #8]
   20e84:	ldr	r3, [r3]
   20e88:	cmp	r3, #0
   20e8c:	movne	r3, #1
   20e90:	moveq	r3, #0
   20e94:	uxtb	r3, r3
   20e98:	cmp	r3, #0
   20e9c:	beq	20f10 <__assert_fail@plt+0xfbf0>
   20ea0:	ldr	r3, [fp, #-8]
   20ea4:	cmp	r3, #0
   20ea8:	moveq	r3, #1
   20eac:	movne	r3, #0
   20eb0:	uxtb	r3, r3
   20eb4:	cmp	r3, #0
   20eb8:	beq	20f10 <__assert_fail@plt+0xfbf0>
   20ebc:	mov	r3, #0
   20ec0:	b	2105c <__assert_fail@plt+0xfd3c>
   20ec4:	mov	r3, #0
   20ec8:	b	2105c <__assert_fail@plt+0xfd3c>
   20ecc:	ldr	r3, [fp, #8]
   20ed0:	mov	r2, #5
   20ed4:	str	r2, [r3]
   20ed8:	mov	r3, #0
   20edc:	b	2105c <__assert_fail@plt+0xfd3c>
   20ee0:	nop			; (mov r0, r0)
   20ee4:	b	20f14 <__assert_fail@plt+0xfbf4>
   20ee8:	nop			; (mov r0, r0)
   20eec:	b	20f14 <__assert_fail@plt+0xfbf4>
   20ef0:	nop			; (mov r0, r0)
   20ef4:	b	20f14 <__assert_fail@plt+0xfbf4>
   20ef8:	nop			; (mov r0, r0)
   20efc:	b	20f14 <__assert_fail@plt+0xfbf4>
   20f00:	nop			; (mov r0, r0)
   20f04:	b	20f14 <__assert_fail@plt+0xfbf4>
   20f08:	nop			; (mov r0, r0)
   20f0c:	b	20f14 <__assert_fail@plt+0xfbf4>
   20f10:	nop			; (mov r0, r0)
   20f14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   20f18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20f1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20f20:	bl	1f0f0 <__assert_fail@plt+0xddd0>
   20f24:	b	21018 <__assert_fail@plt+0xfcf8>
   20f28:	ldr	r3, [fp, #8]
   20f2c:	str	r3, [sp, #4]
   20f30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20f34:	str	r3, [sp]
   20f38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20f3c:	ldr	r2, [fp, #-16]
   20f40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20f44:	ldr	r0, [fp, #-8]
   20f48:	bl	21240 <__assert_fail@plt+0xff20>
   20f4c:	str	r0, [fp, #-28]	; 0xffffffe4
   20f50:	ldr	r3, [fp, #8]
   20f54:	ldr	r3, [r3]
   20f58:	cmp	r3, #0
   20f5c:	movne	r3, #1
   20f60:	moveq	r3, #0
   20f64:	uxtb	r3, r3
   20f68:	cmp	r3, #0
   20f6c:	beq	20fb0 <__assert_fail@plt+0xfc90>
   20f70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20f74:	cmp	r3, #0
   20f78:	moveq	r3, #1
   20f7c:	movne	r3, #0
   20f80:	uxtb	r3, r3
   20f84:	cmp	r3, #0
   20f88:	beq	20fb0 <__assert_fail@plt+0xfc90>
   20f8c:	ldr	r3, [fp, #-8]
   20f90:	cmp	r3, #0
   20f94:	beq	20fa8 <__assert_fail@plt+0xfc88>
   20f98:	mov	r2, #0
   20f9c:	ldr	r1, [pc, #216]	; 2107c <__assert_fail@plt+0xfd5c>
   20fa0:	ldr	r0, [fp, #-8]
   20fa4:	bl	1d650 <__assert_fail@plt+0xc330>
   20fa8:	mov	r3, #0
   20fac:	b	2105c <__assert_fail@plt+0xfd3c>
   20fb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20fb4:	str	r3, [fp, #-8]
   20fb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20fbc:	and	r3, r3, #16777216	; 0x1000000
   20fc0:	cmp	r3, #0
   20fc4:	beq	21018 <__assert_fail@plt+0xfcf8>
   20fc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20fcc:	ldrb	r3, [r3, #4]
   20fd0:	cmp	r3, #11
   20fd4:	beq	20fe8 <__assert_fail@plt+0xfcc8>
   20fd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20fdc:	ldrb	r3, [r3, #4]
   20fe0:	cmp	r3, #23
   20fe4:	bne	21018 <__assert_fail@plt+0xfcf8>
   20fe8:	ldr	r3, [fp, #-8]
   20fec:	cmp	r3, #0
   20ff0:	beq	21004 <__assert_fail@plt+0xfce4>
   20ff4:	mov	r2, #0
   20ff8:	ldr	r1, [pc, #124]	; 2107c <__assert_fail@plt+0xfd5c>
   20ffc:	ldr	r0, [fp, #-8]
   21000:	bl	1d650 <__assert_fail@plt+0xc330>
   21004:	ldr	r3, [fp, #8]
   21008:	mov	r2, #13
   2100c:	str	r2, [r3]
   21010:	mov	r3, #0
   21014:	b	2105c <__assert_fail@plt+0xfd3c>
   21018:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2101c:	ldrb	r3, [r3, #4]
   21020:	cmp	r3, #11
   21024:	beq	20f28 <__assert_fail@plt+0xfc08>
   21028:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2102c:	ldrb	r3, [r3, #4]
   21030:	cmp	r3, #18
   21034:	beq	20f28 <__assert_fail@plt+0xfc08>
   21038:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2103c:	ldrb	r3, [r3, #4]
   21040:	cmp	r3, #19
   21044:	beq	20f28 <__assert_fail@plt+0xfc08>
   21048:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2104c:	ldrb	r3, [r3, #4]
   21050:	cmp	r3, #23
   21054:	beq	20f28 <__assert_fail@plt+0xfc08>
   21058:	ldr	r3, [fp, #-8]
   2105c:	mov	r0, r3
   21060:	sub	sp, fp, #4
   21064:	pop	{fp, pc}
   21068:	andeq	r0, r0, pc, lsl #6
   2106c:	andeq	r3, r3, ip, lsl r6
   21070:	andeq	r3, r3, r0, lsr #12
   21074:	andeq	r3, r3, r8, lsr #12
   21078:	andeq	r3, r3, ip, lsr #12
   2107c:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   21080:	push	{fp, lr}
   21084:	add	fp, sp, #4
   21088:	sub	sp, sp, #40	; 0x28
   2108c:	str	r0, [fp, #-24]	; 0xffffffe8
   21090:	str	r1, [fp, #-28]	; 0xffffffe4
   21094:	str	r2, [fp, #-32]	; 0xffffffe0
   21098:	str	r3, [fp, #-36]	; 0xffffffdc
   2109c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   210a0:	ldr	r3, [r3]
   210a4:	str	r3, [fp, #-12]
   210a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   210ac:	ldr	r3, [r3, #24]
   210b0:	add	r1, r3, #1
   210b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   210b8:	str	r1, [r2, #24]
   210bc:	str	r3, [fp, #-16]
   210c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   210c4:	orr	r3, r3, #8388608	; 0x800000
   210c8:	mov	r2, r3
   210cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   210d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   210d4:	bl	1f0f0 <__assert_fail@plt+0xddd0>
   210d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   210dc:	ldrb	r3, [r3, #4]
   210e0:	cmp	r3, #9
   210e4:	bne	210f4 <__assert_fail@plt+0xfdd4>
   210e8:	mov	r3, #0
   210ec:	str	r3, [fp, #-8]
   210f0:	b	211ac <__assert_fail@plt+0xfe8c>
   210f4:	ldr	r3, [fp, #8]
   210f8:	str	r3, [sp, #4]
   210fc:	ldr	r3, [fp, #4]
   21100:	str	r3, [sp]
   21104:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21108:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2110c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21114:	bl	20280 <__assert_fail@plt+0xef60>
   21118:	str	r0, [fp, #-8]
   2111c:	ldr	r3, [fp, #8]
   21120:	ldr	r3, [r3]
   21124:	cmp	r3, #0
   21128:	moveq	r3, #1
   2112c:	movne	r3, #0
   21130:	uxtb	r3, r3
   21134:	cmp	r3, #0
   21138:	beq	21184 <__assert_fail@plt+0xfe64>
   2113c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21140:	ldrb	r3, [r3, #4]
   21144:	cmp	r3, #9
   21148:	movne	r3, #1
   2114c:	moveq	r3, #0
   21150:	uxtb	r3, r3
   21154:	cmp	r3, #0
   21158:	beq	21184 <__assert_fail@plt+0xfe64>
   2115c:	ldr	r3, [fp, #-8]
   21160:	cmp	r3, #0
   21164:	beq	21178 <__assert_fail@plt+0xfe58>
   21168:	mov	r2, #0
   2116c:	ldr	r1, [pc, #200]	; 2123c <__assert_fail@plt+0xff1c>
   21170:	ldr	r0, [fp, #-8]
   21174:	bl	1d650 <__assert_fail@plt+0xc330>
   21178:	ldr	r3, [fp, #8]
   2117c:	mov	r2, #8
   21180:	str	r2, [r3]
   21184:	ldr	r3, [fp, #8]
   21188:	ldr	r3, [r3]
   2118c:	cmp	r3, #0
   21190:	movne	r3, #1
   21194:	moveq	r3, #0
   21198:	uxtb	r3, r3
   2119c:	cmp	r3, #0
   211a0:	beq	211ac <__assert_fail@plt+0xfe8c>
   211a4:	mov	r3, #0
   211a8:	b	21230 <__assert_fail@plt+0xff10>
   211ac:	ldr	r3, [fp, #-16]
   211b0:	cmp	r3, #8
   211b4:	bhi	211d8 <__assert_fail@plt+0xfeb8>
   211b8:	ldr	r3, [fp, #-12]
   211bc:	ldr	r3, [r3, #84]	; 0x54
   211c0:	mov	r1, #1
   211c4:	ldr	r2, [fp, #-16]
   211c8:	lsl	r2, r1, r2
   211cc:	orr	r2, r3, r2
   211d0:	ldr	r3, [fp, #-12]
   211d4:	str	r2, [r3, #84]	; 0x54
   211d8:	mov	r3, #17
   211dc:	mov	r2, #0
   211e0:	ldr	r1, [fp, #-8]
   211e4:	ldr	r0, [fp, #-12]
   211e8:	bl	23cdc <__assert_fail@plt+0x129bc>
   211ec:	str	r0, [fp, #-8]
   211f0:	ldr	r3, [fp, #-8]
   211f4:	cmp	r3, #0
   211f8:	moveq	r3, #1
   211fc:	movne	r3, #0
   21200:	uxtb	r3, r3
   21204:	cmp	r3, #0
   21208:	beq	21220 <__assert_fail@plt+0xff00>
   2120c:	ldr	r3, [fp, #8]
   21210:	mov	r2, #12
   21214:	str	r2, [r3]
   21218:	mov	r3, #0
   2121c:	b	21230 <__assert_fail@plt+0xff10>
   21220:	ldr	r2, [fp, #-16]
   21224:	ldr	r3, [fp, #-8]
   21228:	str	r2, [r3, #20]
   2122c:	ldr	r3, [fp, #-8]
   21230:	mov	r0, r3
   21234:	sub	sp, fp, #4
   21238:	pop	{fp, pc}
   2123c:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   21240:	push	{fp, lr}
   21244:	add	fp, sp, #4
   21248:	sub	sp, sp, #56	; 0x38
   2124c:	str	r0, [fp, #-48]	; 0xffffffd0
   21250:	str	r1, [fp, #-52]	; 0xffffffcc
   21254:	str	r2, [fp, #-56]	; 0xffffffc8
   21258:	str	r3, [fp, #-60]	; 0xffffffc4
   2125c:	mov	r3, #0
   21260:	str	r3, [fp, #-8]
   21264:	mov	r3, #0
   21268:	str	r3, [fp, #-12]
   2126c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21270:	ldr	r3, [r3, #40]	; 0x28
   21274:	str	r3, [fp, #-28]	; 0xffffffe4
   21278:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2127c:	sub	r3, fp, #40	; 0x28
   21280:	ldm	r2, {r0, r1}
   21284:	stm	r3, {r0, r1}
   21288:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2128c:	ldrb	r3, [r3, #4]
   21290:	cmp	r3, #23
   21294:	bne	21514 <__assert_fail@plt+0x101f4>
   21298:	mov	r3, #0
   2129c:	str	r3, [fp, #-24]	; 0xffffffe8
   212a0:	ldr	r2, [fp, #4]
   212a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   212a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   212ac:	bl	23b5c <__assert_fail@plt+0x1283c>
   212b0:	str	r0, [fp, #-20]	; 0xffffffec
   212b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   212b8:	cmn	r3, #1
   212bc:	bne	21300 <__assert_fail@plt+0xffe0>
   212c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   212c4:	ldrb	r3, [r3, #4]
   212c8:	cmp	r3, #1
   212cc:	bne	212ec <__assert_fail@plt+0xffcc>
   212d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   212d4:	ldrb	r3, [r3]
   212d8:	cmp	r3, #44	; 0x2c
   212dc:	bne	212ec <__assert_fail@plt+0xffcc>
   212e0:	mov	r3, #0
   212e4:	str	r3, [fp, #-20]	; 0xffffffec
   212e8:	b	21300 <__assert_fail@plt+0xffe0>
   212ec:	ldr	r3, [fp, #8]
   212f0:	mov	r2, #10
   212f4:	str	r2, [r3]
   212f8:	mov	r3, #0
   212fc:	b	21860 <__assert_fail@plt+0x10540>
   21300:	ldr	r3, [fp, #-20]	; 0xffffffec
   21304:	cmn	r3, #2
   21308:	movne	r3, #1
   2130c:	moveq	r3, #0
   21310:	uxtb	r3, r3
   21314:	cmp	r3, #0
   21318:	beq	21374 <__assert_fail@plt+0x10054>
   2131c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21320:	ldrb	r3, [r3, #4]
   21324:	cmp	r3, #24
   21328:	beq	2136c <__assert_fail@plt+0x1004c>
   2132c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21330:	ldrb	r3, [r3, #4]
   21334:	cmp	r3, #1
   21338:	bne	21364 <__assert_fail@plt+0x10044>
   2133c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21340:	ldrb	r3, [r3]
   21344:	cmp	r3, #44	; 0x2c
   21348:	bne	21364 <__assert_fail@plt+0x10044>
   2134c:	ldr	r2, [fp, #4]
   21350:	ldr	r1, [fp, #-60]	; 0xffffffc4
   21354:	ldr	r0, [fp, #-52]	; 0xffffffcc
   21358:	bl	23b5c <__assert_fail@plt+0x1283c>
   2135c:	mov	r3, r0
   21360:	b	21370 <__assert_fail@plt+0x10050>
   21364:	mvn	r3, #1
   21368:	b	21370 <__assert_fail@plt+0x10050>
   2136c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21370:	str	r3, [fp, #-24]	; 0xffffffe8
   21374:	ldr	r3, [fp, #-20]	; 0xffffffec
   21378:	cmn	r3, #2
   2137c:	moveq	r3, #1
   21380:	movne	r3, #0
   21384:	uxtb	r3, r3
   21388:	cmp	r3, #0
   2138c:	bne	213ac <__assert_fail@plt+0x1008c>
   21390:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21394:	cmn	r3, #2
   21398:	moveq	r3, #1
   2139c:	movne	r3, #0
   213a0:	uxtb	r3, r3
   213a4:	cmp	r3, #0
   213a8:	beq	21434 <__assert_fail@plt+0x10114>
   213ac:	ldr	r3, [fp, #4]
   213b0:	and	r3, r3, #2097152	; 0x200000
   213b4:	cmp	r3, #0
   213b8:	moveq	r3, #1
   213bc:	movne	r3, #0
   213c0:	uxtb	r3, r3
   213c4:	cmp	r3, #0
   213c8:	beq	21400 <__assert_fail@plt+0x100e0>
   213cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   213d0:	ldrb	r3, [r3, #4]
   213d4:	cmp	r3, #2
   213d8:	bne	213ec <__assert_fail@plt+0x100cc>
   213dc:	ldr	r3, [fp, #8]
   213e0:	mov	r2, #9
   213e4:	str	r2, [r3]
   213e8:	b	213f8 <__assert_fail@plt+0x100d8>
   213ec:	ldr	r3, [fp, #8]
   213f0:	mov	r2, #10
   213f4:	str	r2, [r3]
   213f8:	mov	r3, #0
   213fc:	b	21860 <__assert_fail@plt+0x10540>
   21400:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21404:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21408:	str	r2, [r3, #40]	; 0x28
   2140c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21410:	mov	r2, r3
   21414:	sub	r3, fp, #40	; 0x28
   21418:	ldm	r3, {r0, r1}
   2141c:	stm	r2, {r0, r1}
   21420:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21424:	mov	r2, #1
   21428:	strb	r2, [r3, #4]
   2142c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21430:	b	21860 <__assert_fail@plt+0x10540>
   21434:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21438:	cmn	r3, #1
   2143c:	movne	r3, #1
   21440:	moveq	r3, #0
   21444:	uxtb	r3, r3
   21448:	cmp	r3, #0
   2144c:	beq	21478 <__assert_fail@plt+0x10158>
   21450:	ldr	r2, [fp, #-20]	; 0xffffffec
   21454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21458:	cmp	r2, r3
   2145c:	movgt	r3, #1
   21460:	movle	r3, #0
   21464:	uxtb	r3, r3
   21468:	cmp	r3, #0
   2146c:	beq	21478 <__assert_fail@plt+0x10158>
   21470:	mov	r3, #1
   21474:	b	2147c <__assert_fail@plt+0x1015c>
   21478:	mov	r3, #0
   2147c:	cmp	r3, #0
   21480:	bne	214a4 <__assert_fail@plt+0x10184>
   21484:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21488:	ldrb	r3, [r3, #4]
   2148c:	cmp	r3, #24
   21490:	movne	r3, #1
   21494:	moveq	r3, #0
   21498:	uxtb	r3, r3
   2149c:	cmp	r3, #0
   214a0:	beq	214b8 <__assert_fail@plt+0x10198>
   214a4:	ldr	r3, [fp, #8]
   214a8:	mov	r2, #10
   214ac:	str	r2, [r3]
   214b0:	mov	r3, #0
   214b4:	b	21860 <__assert_fail@plt+0x10540>
   214b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   214bc:	cmn	r3, #1
   214c0:	bne	214e0 <__assert_fail@plt+0x101c0>
   214c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   214c8:	ldr	r2, [pc, #924]	; 2186c <__assert_fail@plt+0x1054c>
   214cc:	cmp	r3, r2
   214d0:	movgt	r3, #1
   214d4:	movle	r3, #0
   214d8:	uxtb	r3, r3
   214dc:	b	214f8 <__assert_fail@plt+0x101d8>
   214e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   214e4:	ldr	r2, [pc, #896]	; 2186c <__assert_fail@plt+0x1054c>
   214e8:	cmp	r3, r2
   214ec:	movgt	r3, #1
   214f0:	movle	r3, #0
   214f4:	uxtb	r3, r3
   214f8:	cmp	r3, #0
   214fc:	beq	21550 <__assert_fail@plt+0x10230>
   21500:	ldr	r3, [fp, #8]
   21504:	mov	r2, #15
   21508:	str	r2, [r3]
   2150c:	mov	r3, #0
   21510:	b	21860 <__assert_fail@plt+0x10540>
   21514:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21518:	ldrb	r3, [r3, #4]
   2151c:	cmp	r3, #18
   21520:	moveq	r3, #1
   21524:	movne	r3, #0
   21528:	uxtb	r3, r3
   2152c:	str	r3, [fp, #-20]	; 0xffffffec
   21530:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21534:	ldrb	r3, [r3, #4]
   21538:	cmp	r3, #19
   2153c:	bne	21548 <__assert_fail@plt+0x10228>
   21540:	mov	r3, #1
   21544:	b	2154c <__assert_fail@plt+0x1022c>
   21548:	mvn	r3, #0
   2154c:	str	r3, [fp, #-24]	; 0xffffffe8
   21550:	ldr	r2, [fp, #4]
   21554:	ldr	r1, [fp, #-52]	; 0xffffffcc
   21558:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2155c:	bl	1f0f0 <__assert_fail@plt+0xddd0>
   21560:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21564:	cmp	r3, #0
   21568:	moveq	r3, #1
   2156c:	movne	r3, #0
   21570:	uxtb	r3, r3
   21574:	cmp	r3, #0
   21578:	beq	21584 <__assert_fail@plt+0x10264>
   2157c:	mov	r3, #0
   21580:	b	21860 <__assert_fail@plt+0x10540>
   21584:	ldr	r3, [fp, #-20]	; 0xffffffec
   21588:	cmp	r3, #0
   2158c:	moveq	r3, #1
   21590:	movne	r3, #0
   21594:	uxtb	r3, r3
   21598:	cmp	r3, #0
   2159c:	beq	215d4 <__assert_fail@plt+0x102b4>
   215a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   215a4:	cmp	r3, #0
   215a8:	moveq	r3, #1
   215ac:	movne	r3, #0
   215b0:	uxtb	r3, r3
   215b4:	cmp	r3, #0
   215b8:	beq	215d4 <__assert_fail@plt+0x102b4>
   215bc:	mov	r2, #0
   215c0:	ldr	r1, [pc, #680]	; 21870 <__assert_fail@plt+0x10550>
   215c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   215c8:	bl	1d650 <__assert_fail@plt+0xc330>
   215cc:	mov	r3, #0
   215d0:	b	21860 <__assert_fail@plt+0x10540>
   215d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   215d8:	cmp	r3, #0
   215dc:	movgt	r3, #1
   215e0:	movle	r3, #0
   215e4:	uxtb	r3, r3
   215e8:	cmp	r3, #0
   215ec:	beq	216d0 <__assert_fail@plt+0x103b0>
   215f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   215f4:	str	r3, [fp, #-8]
   215f8:	mov	r3, #2
   215fc:	str	r3, [fp, #-16]
   21600:	b	21670 <__assert_fail@plt+0x10350>
   21604:	ldr	r1, [fp, #-56]	; 0xffffffc8
   21608:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2160c:	bl	23fd0 <__assert_fail@plt+0x12cb0>
   21610:	str	r0, [fp, #-48]	; 0xffffffd0
   21614:	mov	r3, #16
   21618:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2161c:	ldr	r1, [fp, #-8]
   21620:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21624:	bl	23cdc <__assert_fail@plt+0x129bc>
   21628:	str	r0, [fp, #-8]
   2162c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21630:	cmp	r3, #0
   21634:	moveq	r3, #1
   21638:	movne	r3, #0
   2163c:	uxtb	r3, r3
   21640:	cmp	r3, #0
   21644:	bne	21850 <__assert_fail@plt+0x10530>
   21648:	ldr	r3, [fp, #-8]
   2164c:	cmp	r3, #0
   21650:	moveq	r3, #1
   21654:	movne	r3, #0
   21658:	uxtb	r3, r3
   2165c:	cmp	r3, #0
   21660:	bne	21850 <__assert_fail@plt+0x10530>
   21664:	ldr	r3, [fp, #-16]
   21668:	add	r3, r3, #1
   2166c:	str	r3, [fp, #-16]
   21670:	ldr	r2, [fp, #-16]
   21674:	ldr	r3, [fp, #-20]	; 0xffffffec
   21678:	cmp	r2, r3
   2167c:	ble	21604 <__assert_fail@plt+0x102e4>
   21680:	ldr	r2, [fp, #-20]	; 0xffffffec
   21684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21688:	cmp	r2, r3
   2168c:	bne	21698 <__assert_fail@plt+0x10378>
   21690:	ldr	r3, [fp, #-8]
   21694:	b	21860 <__assert_fail@plt+0x10540>
   21698:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2169c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   216a0:	bl	23fd0 <__assert_fail@plt+0x12cb0>
   216a4:	str	r0, [fp, #-48]	; 0xffffffd0
   216a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   216ac:	cmp	r3, #0
   216b0:	moveq	r3, #1
   216b4:	movne	r3, #0
   216b8:	uxtb	r3, r3
   216bc:	cmp	r3, #0
   216c0:	bne	2183c <__assert_fail@plt+0x1051c>
   216c4:	ldr	r3, [fp, #-8]
   216c8:	str	r3, [fp, #-12]
   216cc:	b	216d8 <__assert_fail@plt+0x103b8>
   216d0:	mov	r3, #0
   216d4:	str	r3, [fp, #-12]
   216d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   216dc:	ldrb	r3, [r3, #24]
   216e0:	cmp	r3, #17
   216e4:	bne	21708 <__assert_fail@plt+0x103e8>
   216e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   216ec:	ldr	r3, [r3, #20]
   216f0:	str	r3, [fp, #-32]	; 0xffffffe0
   216f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   216f8:	mov	r2, r3
   216fc:	ldr	r1, [pc, #368]	; 21874 <__assert_fail@plt+0x10554>
   21700:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21704:	bl	1d650 <__assert_fail@plt+0xc330>
   21708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2170c:	cmn	r3, #1
   21710:	bne	2171c <__assert_fail@plt+0x103fc>
   21714:	mov	r3, #11
   21718:	b	21720 <__assert_fail@plt+0x10400>
   2171c:	mov	r3, #10
   21720:	mov	r2, #0
   21724:	ldr	r1, [fp, #-48]	; 0xffffffd0
   21728:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2172c:	bl	23cdc <__assert_fail@plt+0x129bc>
   21730:	str	r0, [fp, #-8]
   21734:	ldr	r3, [fp, #-8]
   21738:	cmp	r3, #0
   2173c:	moveq	r3, #1
   21740:	movne	r3, #0
   21744:	uxtb	r3, r3
   21748:	cmp	r3, #0
   2174c:	bne	21844 <__assert_fail@plt+0x10524>
   21750:	ldr	r3, [fp, #-20]	; 0xffffffec
   21754:	add	r3, r3, #2
   21758:	str	r3, [fp, #-16]
   2175c:	b	21800 <__assert_fail@plt+0x104e0>
   21760:	ldr	r1, [fp, #-56]	; 0xffffffc8
   21764:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21768:	bl	23fd0 <__assert_fail@plt+0x12cb0>
   2176c:	str	r0, [fp, #-48]	; 0xffffffd0
   21770:	mov	r3, #16
   21774:	ldr	r2, [fp, #-48]	; 0xffffffd0
   21778:	ldr	r1, [fp, #-8]
   2177c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21780:	bl	23cdc <__assert_fail@plt+0x129bc>
   21784:	str	r0, [fp, #-8]
   21788:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2178c:	cmp	r3, #0
   21790:	moveq	r3, #1
   21794:	movne	r3, #0
   21798:	uxtb	r3, r3
   2179c:	cmp	r3, #0
   217a0:	bne	21850 <__assert_fail@plt+0x10530>
   217a4:	ldr	r3, [fp, #-8]
   217a8:	cmp	r3, #0
   217ac:	moveq	r3, #1
   217b0:	movne	r3, #0
   217b4:	uxtb	r3, r3
   217b8:	cmp	r3, #0
   217bc:	bne	21850 <__assert_fail@plt+0x10530>
   217c0:	mov	r3, #10
   217c4:	mov	r2, #0
   217c8:	ldr	r1, [fp, #-8]
   217cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   217d0:	bl	23cdc <__assert_fail@plt+0x129bc>
   217d4:	str	r0, [fp, #-8]
   217d8:	ldr	r3, [fp, #-8]
   217dc:	cmp	r3, #0
   217e0:	moveq	r3, #1
   217e4:	movne	r3, #0
   217e8:	uxtb	r3, r3
   217ec:	cmp	r3, #0
   217f0:	bne	2184c <__assert_fail@plt+0x1052c>
   217f4:	ldr	r3, [fp, #-16]
   217f8:	add	r3, r3, #1
   217fc:	str	r3, [fp, #-16]
   21800:	ldr	r2, [fp, #-16]
   21804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21808:	cmp	r2, r3
   2180c:	ble	21760 <__assert_fail@plt+0x10440>
   21810:	ldr	r3, [fp, #-12]
   21814:	cmp	r3, #0
   21818:	beq	21834 <__assert_fail@plt+0x10514>
   2181c:	mov	r3, #16
   21820:	ldr	r2, [fp, #-8]
   21824:	ldr	r1, [fp, #-12]
   21828:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2182c:	bl	23cdc <__assert_fail@plt+0x129bc>
   21830:	str	r0, [fp, #-8]
   21834:	ldr	r3, [fp, #-8]
   21838:	b	21860 <__assert_fail@plt+0x10540>
   2183c:	nop			; (mov r0, r0)
   21840:	b	21850 <__assert_fail@plt+0x10530>
   21844:	nop			; (mov r0, r0)
   21848:	b	21850 <__assert_fail@plt+0x10530>
   2184c:	nop			; (mov r0, r0)
   21850:	ldr	r3, [fp, #8]
   21854:	mov	r2, #12
   21858:	str	r2, [r3]
   2185c:	mov	r3, #0
   21860:	mov	r0, r3
   21864:	sub	sp, fp, #4
   21868:	pop	{fp, pc}
   2186c:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   21870:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   21874:	andeq	r3, r2, r8, lsr #29
   21878:	push	{fp, lr}
   2187c:	add	fp, sp, #4
   21880:	sub	sp, sp, #8
   21884:	mov	r3, r0
   21888:	str	r1, [fp, #-12]
   2188c:	strb	r3, [fp, #-5]
   21890:	ldr	r3, [fp, #-12]
   21894:	ldr	r3, [r3, #92]	; 0x5c
   21898:	cmp	r3, #1
   2189c:	ble	218b4 <__assert_fail@plt+0x10594>
   218a0:	ldrb	r3, [fp, #-5]
   218a4:	mov	r0, r3
   218a8:	bl	11254 <btowc@plt>
   218ac:	mov	r3, r0
   218b0:	b	218b8 <__assert_fail@plt+0x10598>
   218b4:	ldrb	r3, [fp, #-5]
   218b8:	mov	r0, r3
   218bc:	sub	sp, fp, #4
   218c0:	pop	{fp, pc}
   218c4:	push	{fp, lr}
   218c8:	add	fp, sp, #4
   218cc:	sub	sp, sp, #48	; 0x30
   218d0:	str	r0, [fp, #-40]	; 0xffffffd8
   218d4:	str	r1, [fp, #-44]	; 0xffffffd4
   218d8:	str	r2, [fp, #-48]	; 0xffffffd0
   218dc:	str	r3, [fp, #-52]	; 0xffffffcc
   218e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   218e4:	ldr	r3, [r3]
   218e8:	cmp	r3, #2
   218ec:	moveq	r3, #1
   218f0:	movne	r3, #0
   218f4:	uxtb	r3, r3
   218f8:	cmp	r3, #0
   218fc:	bne	21920 <__assert_fail@plt+0x10600>
   21900:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21904:	ldr	r3, [r3]
   21908:	cmp	r3, #4
   2190c:	moveq	r3, #1
   21910:	movne	r3, #0
   21914:	uxtb	r3, r3
   21918:	cmp	r3, #0
   2191c:	beq	21928 <__assert_fail@plt+0x10608>
   21920:	mov	r3, #1
   21924:	b	2192c <__assert_fail@plt+0x1060c>
   21928:	mov	r3, #0
   2192c:	cmp	r3, #0
   21930:	bne	21954 <__assert_fail@plt+0x10634>
   21934:	ldr	r3, [fp, #4]
   21938:	ldr	r3, [r3]
   2193c:	cmp	r3, #2
   21940:	moveq	r3, #1
   21944:	movne	r3, #0
   21948:	uxtb	r3, r3
   2194c:	cmp	r3, #0
   21950:	beq	2195c <__assert_fail@plt+0x1063c>
   21954:	mov	r3, #1
   21958:	b	21960 <__assert_fail@plt+0x10640>
   2195c:	mov	r3, #0
   21960:	cmp	r3, #0
   21964:	bne	21988 <__assert_fail@plt+0x10668>
   21968:	ldr	r3, [fp, #4]
   2196c:	ldr	r3, [r3]
   21970:	cmp	r3, #4
   21974:	moveq	r3, #1
   21978:	movne	r3, #0
   2197c:	uxtb	r3, r3
   21980:	cmp	r3, #0
   21984:	beq	21990 <__assert_fail@plt+0x10670>
   21988:	mov	r3, #11
   2198c:	b	21d7c <__assert_fail@plt+0x10a5c>
   21990:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21994:	ldr	r3, [r3]
   21998:	cmp	r3, #3
   2199c:	moveq	r3, #1
   219a0:	movne	r3, #0
   219a4:	uxtb	r3, r3
   219a8:	cmp	r3, #0
   219ac:	beq	219e4 <__assert_fail@plt+0x106c4>
   219b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   219b4:	ldr	r3, [r3, #4]
   219b8:	mov	r0, r3
   219bc:	bl	11200 <strlen@plt>
   219c0:	mov	r3, r0
   219c4:	cmp	r3, #1
   219c8:	movhi	r3, #1
   219cc:	movls	r3, #0
   219d0:	uxtb	r3, r3
   219d4:	cmp	r3, #0
   219d8:	beq	219e4 <__assert_fail@plt+0x106c4>
   219dc:	mov	r3, #1
   219e0:	b	219e8 <__assert_fail@plt+0x106c8>
   219e4:	mov	r3, #0
   219e8:	cmp	r3, #0
   219ec:	bne	21a50 <__assert_fail@plt+0x10730>
   219f0:	ldr	r3, [fp, #4]
   219f4:	ldr	r3, [r3]
   219f8:	cmp	r3, #3
   219fc:	moveq	r3, #1
   21a00:	movne	r3, #0
   21a04:	uxtb	r3, r3
   21a08:	cmp	r3, #0
   21a0c:	beq	21a44 <__assert_fail@plt+0x10724>
   21a10:	ldr	r3, [fp, #4]
   21a14:	ldr	r3, [r3, #4]
   21a18:	mov	r0, r3
   21a1c:	bl	11200 <strlen@plt>
   21a20:	mov	r3, r0
   21a24:	cmp	r3, #1
   21a28:	movhi	r3, #1
   21a2c:	movls	r3, #0
   21a30:	uxtb	r3, r3
   21a34:	cmp	r3, #0
   21a38:	beq	21a44 <__assert_fail@plt+0x10724>
   21a3c:	mov	r3, #1
   21a40:	b	21a48 <__assert_fail@plt+0x10728>
   21a44:	mov	r3, #0
   21a48:	cmp	r3, #0
   21a4c:	beq	21a58 <__assert_fail@plt+0x10738>
   21a50:	mov	r3, #3
   21a54:	b	21d7c <__assert_fail@plt+0x10a5c>
   21a58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21a5c:	ldr	r3, [r3]
   21a60:	cmp	r3, #0
   21a64:	bne	21a74 <__assert_fail@plt+0x10754>
   21a68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21a6c:	ldrb	r3, [r3, #4]
   21a70:	b	21a98 <__assert_fail@plt+0x10778>
   21a74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21a78:	ldr	r3, [r3]
   21a7c:	cmp	r3, #3
   21a80:	bne	21a94 <__assert_fail@plt+0x10774>
   21a84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21a88:	ldr	r3, [r3, #4]
   21a8c:	ldrb	r3, [r3]
   21a90:	b	21a98 <__assert_fail@plt+0x10778>
   21a94:	mov	r3, #0
   21a98:	str	r3, [fp, #-12]
   21a9c:	ldr	r3, [fp, #4]
   21aa0:	ldr	r3, [r3]
   21aa4:	cmp	r3, #0
   21aa8:	bne	21ab8 <__assert_fail@plt+0x10798>
   21aac:	ldr	r3, [fp, #4]
   21ab0:	ldrb	r3, [r3, #4]
   21ab4:	b	21adc <__assert_fail@plt+0x107bc>
   21ab8:	ldr	r3, [fp, #4]
   21abc:	ldr	r3, [r3]
   21ac0:	cmp	r3, #3
   21ac4:	bne	21ad8 <__assert_fail@plt+0x107b8>
   21ac8:	ldr	r3, [fp, #4]
   21acc:	ldr	r3, [r3, #4]
   21ad0:	ldrb	r3, [r3]
   21ad4:	b	21adc <__assert_fail@plt+0x107bc>
   21ad8:	mov	r3, #0
   21adc:	str	r3, [fp, #-16]
   21ae0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21ae4:	ldr	r3, [r3]
   21ae8:	cmp	r3, #0
   21aec:	beq	21b00 <__assert_fail@plt+0x107e0>
   21af0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21af4:	ldr	r3, [r3]
   21af8:	cmp	r3, #3
   21afc:	bne	21b1c <__assert_fail@plt+0x107fc>
   21b00:	ldr	r3, [fp, #-12]
   21b04:	uxtb	r3, r3
   21b08:	ldr	r1, [fp, #8]
   21b0c:	mov	r0, r3
   21b10:	bl	21878 <__assert_fail@plt+0x10558>
   21b14:	mov	r3, r0
   21b18:	b	21b24 <__assert_fail@plt+0x10804>
   21b1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21b20:	ldr	r3, [r3, #4]
   21b24:	str	r3, [fp, #-20]	; 0xffffffec
   21b28:	ldr	r3, [fp, #4]
   21b2c:	ldr	r3, [r3]
   21b30:	cmp	r3, #0
   21b34:	beq	21b48 <__assert_fail@plt+0x10828>
   21b38:	ldr	r3, [fp, #4]
   21b3c:	ldr	r3, [r3]
   21b40:	cmp	r3, #3
   21b44:	bne	21b64 <__assert_fail@plt+0x10844>
   21b48:	ldr	r3, [fp, #-16]
   21b4c:	uxtb	r3, r3
   21b50:	ldr	r1, [fp, #8]
   21b54:	mov	r0, r3
   21b58:	bl	21878 <__assert_fail@plt+0x10558>
   21b5c:	mov	r3, r0
   21b60:	b	21b6c <__assert_fail@plt+0x1084c>
   21b64:	ldr	r3, [fp, #4]
   21b68:	ldr	r3, [r3, #4]
   21b6c:	str	r3, [fp, #-24]	; 0xffffffe8
   21b70:	ldr	r3, [fp, #-20]	; 0xffffffec
   21b74:	cmn	r3, #1
   21b78:	beq	21b88 <__assert_fail@plt+0x10868>
   21b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21b80:	cmn	r3, #1
   21b84:	bne	21b90 <__assert_fail@plt+0x10870>
   21b88:	mov	r3, #3
   21b8c:	b	21d7c <__assert_fail@plt+0x10a5c>
   21b90:	ldr	r3, [fp, #12]
   21b94:	and	r3, r3, #65536	; 0x10000
   21b98:	cmp	r3, #0
   21b9c:	movne	r3, #1
   21ba0:	moveq	r3, #0
   21ba4:	uxtb	r3, r3
   21ba8:	cmp	r3, #0
   21bac:	beq	21bd8 <__assert_fail@plt+0x108b8>
   21bb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   21bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21bb8:	cmp	r2, r3
   21bbc:	movhi	r3, #1
   21bc0:	movls	r3, #0
   21bc4:	uxtb	r3, r3
   21bc8:	cmp	r3, #0
   21bcc:	beq	21bd8 <__assert_fail@plt+0x108b8>
   21bd0:	mov	r3, #11
   21bd4:	b	21d7c <__assert_fail@plt+0x10a5c>
   21bd8:	ldr	r3, [fp, #8]
   21bdc:	ldr	r3, [r3, #92]	; 0x5c
   21be0:	cmp	r3, #1
   21be4:	ble	21d24 <__assert_fail@plt+0x10a04>
   21be8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21bec:	ldr	r2, [r3]
   21bf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21bf4:	ldr	r3, [r3, #32]
   21bf8:	cmp	r2, r3
   21bfc:	moveq	r3, #1
   21c00:	movne	r3, #0
   21c04:	uxtb	r3, r3
   21c08:	cmp	r3, #0
   21c0c:	beq	21cd8 <__assert_fail@plt+0x109b8>
   21c10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21c14:	ldr	r3, [r3, #32]
   21c18:	lsl	r3, r3, #1
   21c1c:	add	r3, r3, #1
   21c20:	str	r3, [fp, #-28]	; 0xffffffe4
   21c24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21c28:	ldr	r2, [r3, #4]
   21c2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21c30:	lsl	r3, r3, #2
   21c34:	mov	r1, r3
   21c38:	mov	r0, r2
   21c3c:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   21c40:	str	r0, [fp, #-32]	; 0xffffffe0
   21c44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21c48:	ldr	r2, [r3, #8]
   21c4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21c50:	lsl	r3, r3, #2
   21c54:	mov	r1, r3
   21c58:	mov	r0, r2
   21c5c:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   21c60:	str	r0, [fp, #-36]	; 0xffffffdc
   21c64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21c68:	cmp	r3, #0
   21c6c:	moveq	r3, #1
   21c70:	movne	r3, #0
   21c74:	uxtb	r3, r3
   21c78:	cmp	r3, #0
   21c7c:	bne	21c9c <__assert_fail@plt+0x1097c>
   21c80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21c84:	cmp	r3, #0
   21c88:	moveq	r3, #1
   21c8c:	movne	r3, #0
   21c90:	uxtb	r3, r3
   21c94:	cmp	r3, #0
   21c98:	beq	21cb4 <__assert_fail@plt+0x10994>
   21c9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21ca0:	bl	31500 <__assert_fail@plt+0x201e0>
   21ca4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21ca8:	bl	31500 <__assert_fail@plt+0x201e0>
   21cac:	mov	r3, #12
   21cb0:	b	21d7c <__assert_fail@plt+0x10a5c>
   21cb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21cb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21cbc:	str	r2, [r3, #4]
   21cc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21cc4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   21cc8:	str	r2, [r3, #8]
   21ccc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21cd0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21cd4:	str	r2, [r3]
   21cd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21cdc:	ldr	r2, [r3, #4]
   21ce0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21ce4:	ldr	r3, [r3, #32]
   21ce8:	lsl	r3, r3, #2
   21cec:	add	r3, r2, r3
   21cf0:	ldr	r2, [fp, #-20]	; 0xffffffec
   21cf4:	str	r2, [r3]
   21cf8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21cfc:	ldr	r2, [r3, #8]
   21d00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21d04:	ldr	r3, [r3, #32]
   21d08:	add	r0, r3, #1
   21d0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21d10:	str	r0, [r1, #32]
   21d14:	lsl	r3, r3, #2
   21d18:	add	r3, r2, r3
   21d1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21d20:	str	r2, [r3]
   21d24:	mov	r3, #0
   21d28:	str	r3, [fp, #-8]
   21d2c:	b	21d6c <__assert_fail@plt+0x10a4c>
   21d30:	ldr	r2, [fp, #-20]	; 0xffffffec
   21d34:	ldr	r3, [fp, #-8]
   21d38:	cmp	r2, r3
   21d3c:	bhi	21d60 <__assert_fail@plt+0x10a40>
   21d40:	ldr	r2, [fp, #-8]
   21d44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21d48:	cmp	r2, r3
   21d4c:	bhi	21d60 <__assert_fail@plt+0x10a40>
   21d50:	ldr	r3, [fp, #-8]
   21d54:	mov	r1, r3
   21d58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21d5c:	bl	15b64 <__assert_fail@plt+0x4844>
   21d60:	ldr	r3, [fp, #-8]
   21d64:	add	r3, r3, #1
   21d68:	str	r3, [fp, #-8]
   21d6c:	ldr	r3, [fp, #-8]
   21d70:	cmp	r3, #255	; 0xff
   21d74:	bls	21d30 <__assert_fail@plt+0x10a10>
   21d78:	mov	r3, #0
   21d7c:	mov	r0, r3
   21d80:	sub	sp, fp, #4
   21d84:	pop	{fp, pc}
   21d88:	push	{fp, lr}
   21d8c:	add	fp, sp, #4
   21d90:	sub	sp, sp, #24
   21d94:	str	r0, [fp, #-16]
   21d98:	str	r1, [fp, #-20]	; 0xffffffec
   21d9c:	str	r2, [fp, #-24]	; 0xffffffe8
   21da0:	str	r3, [fp, #-28]	; 0xffffffe4
   21da4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21da8:	bl	11200 <strlen@plt>
   21dac:	str	r0, [fp, #-8]
   21db0:	ldr	r3, [fp, #-8]
   21db4:	cmp	r3, #1
   21db8:	movne	r3, #1
   21dbc:	moveq	r3, #0
   21dc0:	uxtb	r3, r3
   21dc4:	cmp	r3, #0
   21dc8:	beq	21dd4 <__assert_fail@plt+0x10ab4>
   21dcc:	mov	r3, #3
   21dd0:	b	21dec <__assert_fail@plt+0x10acc>
   21dd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21dd8:	ldrb	r3, [r3]
   21ddc:	mov	r1, r3
   21de0:	ldr	r0, [fp, #-16]
   21de4:	bl	15b64 <__assert_fail@plt+0x4844>
   21de8:	mov	r3, #0
   21dec:	mov	r0, r3
   21df0:	sub	sp, fp, #4
   21df4:	pop	{fp, pc}
   21df8:	push	{fp, lr}
   21dfc:	add	fp, sp, #4
   21e00:	sub	sp, sp, #248	; 0xf8
   21e04:	str	r0, [fp, #-200]	; 0xffffff38
   21e08:	str	r1, [fp, #-204]	; 0xffffff34
   21e0c:	str	r2, [fp, #-208]	; 0xffffff30
   21e10:	str	r3, [fp, #-212]	; 0xffffff2c
   21e14:	mov	r3, #0
   21e18:	str	r3, [fp, #-40]	; 0xffffffd8
   21e1c:	mov	r3, #0
   21e20:	str	r3, [fp, #-44]	; 0xffffffd4
   21e24:	mov	r3, #0
   21e28:	str	r3, [fp, #-48]	; 0xffffffd0
   21e2c:	mov	r3, #0
   21e30:	str	r3, [fp, #-52]	; 0xffffffcc
   21e34:	mov	r3, #0
   21e38:	str	r3, [fp, #-56]	; 0xffffffc8
   21e3c:	mov	r3, #0
   21e40:	str	r3, [fp, #-60]	; 0xffffffc4
   21e44:	mov	r3, #0
   21e48:	str	r3, [fp, #-92]	; 0xffffffa4
   21e4c:	mov	r3, #0
   21e50:	str	r3, [fp, #-96]	; 0xffffffa0
   21e54:	mov	r3, #0
   21e58:	str	r3, [fp, #-8]
   21e5c:	mov	r3, #0
   21e60:	str	r3, [fp, #-100]	; 0xffffff9c
   21e64:	mov	r3, #0
   21e68:	str	r3, [fp, #-104]	; 0xffffff98
   21e6c:	mov	r3, #0
   21e70:	strb	r3, [fp, #-9]
   21e74:	mov	r3, #1
   21e78:	strb	r3, [fp, #-21]	; 0xffffffeb
   21e7c:	mov	r1, #1
   21e80:	mov	r0, #32
   21e84:	bl	30c58 <__assert_fail@plt+0x1f938>
   21e88:	mov	r3, r0
   21e8c:	str	r3, [fp, #-64]	; 0xffffffc0
   21e90:	mov	r1, #1
   21e94:	mov	r0, #40	; 0x28
   21e98:	bl	30c58 <__assert_fail@plt+0x1f938>
   21e9c:	mov	r3, r0
   21ea0:	str	r3, [fp, #-68]	; 0xffffffbc
   21ea4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   21ea8:	cmp	r3, #0
   21eac:	moveq	r3, #1
   21eb0:	movne	r3, #0
   21eb4:	uxtb	r3, r3
   21eb8:	cmp	r3, #0
   21ebc:	bne	21edc <__assert_fail@plt+0x10bbc>
   21ec0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   21ec4:	cmp	r3, #0
   21ec8:	moveq	r3, #1
   21ecc:	movne	r3, #0
   21ed0:	uxtb	r3, r3
   21ed4:	cmp	r3, #0
   21ed8:	beq	21f00 <__assert_fail@plt+0x10be0>
   21edc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   21ee0:	bl	31500 <__assert_fail@plt+0x201e0>
   21ee4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   21ee8:	bl	31500 <__assert_fail@plt+0x201e0>
   21eec:	ldr	r3, [fp, #4]
   21ef0:	mov	r2, #12
   21ef4:	str	r2, [r3]
   21ef8:	mov	r3, #0
   21efc:	b	22788 <__assert_fail@plt+0x11468>
   21f00:	ldr	r2, [fp, #-212]	; 0xffffff2c
   21f04:	ldr	r1, [fp, #-200]	; 0xffffff38
   21f08:	ldr	r0, [fp, #-208]	; 0xffffff30
   21f0c:	bl	1fe74 <__assert_fail@plt+0xeb54>
   21f10:	str	r0, [fp, #-20]	; 0xffffffec
   21f14:	ldr	r3, [fp, #-208]	; 0xffffff30
   21f18:	ldrb	r3, [r3, #4]
   21f1c:	cmp	r3, #2
   21f20:	moveq	r3, #1
   21f24:	movne	r3, #0
   21f28:	uxtb	r3, r3
   21f2c:	cmp	r3, #0
   21f30:	beq	21f44 <__assert_fail@plt+0x10c24>
   21f34:	ldr	r3, [fp, #4]
   21f38:	mov	r2, #2
   21f3c:	str	r2, [r3]
   21f40:	b	22774 <__assert_fail@plt+0x11454>
   21f44:	ldr	r3, [fp, #-208]	; 0xffffff30
   21f48:	ldrb	r3, [r3, #4]
   21f4c:	cmp	r3, #25
   21f50:	bne	21fe4 <__assert_fail@plt+0x10cc4>
   21f54:	ldr	r2, [fp, #-68]	; 0xffffffbc
   21f58:	ldrb	r3, [r2, #16]
   21f5c:	orr	r3, r3, #1
   21f60:	strb	r3, [r2, #16]
   21f64:	mov	r3, #1
   21f68:	strb	r3, [fp, #-9]
   21f6c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   21f70:	and	r3, r3, #256	; 0x100
   21f74:	cmp	r3, #0
   21f78:	beq	21f88 <__assert_fail@plt+0x10c68>
   21f7c:	mov	r1, #10
   21f80:	ldr	r0, [fp, #-64]	; 0xffffffc0
   21f84:	bl	15b64 <__assert_fail@plt+0x4844>
   21f88:	ldr	r3, [fp, #-200]	; 0xffffff38
   21f8c:	ldr	r2, [r3, #40]	; 0x28
   21f90:	ldr	r3, [fp, #-20]	; 0xffffffec
   21f94:	add	r2, r2, r3
   21f98:	ldr	r3, [fp, #-200]	; 0xffffff38
   21f9c:	str	r2, [r3, #40]	; 0x28
   21fa0:	ldr	r2, [fp, #-212]	; 0xffffff2c
   21fa4:	ldr	r1, [fp, #-200]	; 0xffffff38
   21fa8:	ldr	r0, [fp, #-208]	; 0xffffff30
   21fac:	bl	1fe74 <__assert_fail@plt+0xeb54>
   21fb0:	str	r0, [fp, #-20]	; 0xffffffec
   21fb4:	ldr	r3, [fp, #-208]	; 0xffffff30
   21fb8:	ldrb	r3, [r3, #4]
   21fbc:	cmp	r3, #2
   21fc0:	moveq	r3, #1
   21fc4:	movne	r3, #0
   21fc8:	uxtb	r3, r3
   21fcc:	cmp	r3, #0
   21fd0:	beq	21fe4 <__assert_fail@plt+0x10cc4>
   21fd4:	ldr	r3, [fp, #4]
   21fd8:	mov	r2, #2
   21fdc:	str	r2, [r3]
   21fe0:	b	22774 <__assert_fail@plt+0x11454>
   21fe4:	ldr	r3, [fp, #-208]	; 0xffffff30
   21fe8:	ldrb	r3, [r3, #4]
   21fec:	cmp	r3, #21
   21ff0:	bne	22000 <__assert_fail@plt+0x10ce0>
   21ff4:	ldr	r3, [fp, #-208]	; 0xffffff30
   21ff8:	mov	r2, #1
   21ffc:	strb	r2, [r3, #4]
   22000:	mov	r3, #0
   22004:	str	r3, [fp, #-28]	; 0xffffffe4
   22008:	mov	r3, #0
   2200c:	strb	r3, [fp, #-29]	; 0xffffffe3
   22010:	sub	r3, fp, #192	; 0xc0
   22014:	str	r3, [fp, #-108]	; 0xffffff94
   22018:	mov	r3, #3
   2201c:	str	r3, [fp, #-112]	; 0xffffff90
   22020:	sub	r0, fp, #112	; 0x70
   22024:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   22028:	str	r3, [sp, #8]
   2202c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   22030:	str	r3, [sp, #4]
   22034:	ldr	r3, [fp, #-204]	; 0xffffff34
   22038:	str	r3, [sp]
   2203c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22040:	ldr	r2, [fp, #-208]	; 0xffffff30
   22044:	ldr	r1, [fp, #-200]	; 0xffffff38
   22048:	bl	22794 <__assert_fail@plt+0x11474>
   2204c:	str	r0, [fp, #-72]	; 0xffffffb8
   22050:	ldr	r3, [fp, #-72]	; 0xffffffb8
   22054:	cmp	r3, #0
   22058:	movne	r3, #1
   2205c:	moveq	r3, #0
   22060:	uxtb	r3, r3
   22064:	cmp	r3, #0
   22068:	beq	2207c <__assert_fail@plt+0x10d5c>
   2206c:	ldr	r3, [fp, #4]
   22070:	ldr	r2, [fp, #-72]	; 0xffffffb8
   22074:	str	r2, [r3]
   22078:	b	22774 <__assert_fail@plt+0x11454>
   2207c:	mov	r3, #0
   22080:	strb	r3, [fp, #-21]	; 0xffffffeb
   22084:	ldr	r2, [fp, #-212]	; 0xffffff2c
   22088:	ldr	r1, [fp, #-200]	; 0xffffff38
   2208c:	ldr	r0, [fp, #-208]	; 0xffffff30
   22090:	bl	1fe74 <__assert_fail@plt+0xeb54>
   22094:	str	r0, [fp, #-20]	; 0xffffffec
   22098:	ldr	r3, [fp, #-112]	; 0xffffff90
   2209c:	cmp	r3, #4
   220a0:	beq	22188 <__assert_fail@plt+0x10e68>
   220a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   220a8:	cmp	r3, #2
   220ac:	beq	22188 <__assert_fail@plt+0x10e68>
   220b0:	ldr	r3, [fp, #-208]	; 0xffffff30
   220b4:	ldrb	r3, [r3, #4]
   220b8:	cmp	r3, #2
   220bc:	moveq	r3, #1
   220c0:	movne	r3, #0
   220c4:	uxtb	r3, r3
   220c8:	cmp	r3, #0
   220cc:	beq	220e0 <__assert_fail@plt+0x10dc0>
   220d0:	ldr	r3, [fp, #4]
   220d4:	mov	r2, #7
   220d8:	str	r2, [r3]
   220dc:	b	22774 <__assert_fail@plt+0x11454>
   220e0:	ldr	r3, [fp, #-208]	; 0xffffff30
   220e4:	ldrb	r3, [r3, #4]
   220e8:	cmp	r3, #22
   220ec:	bne	22188 <__assert_fail@plt+0x10e68>
   220f0:	ldr	r3, [fp, #-200]	; 0xffffff38
   220f4:	ldr	r2, [r3, #40]	; 0x28
   220f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   220fc:	add	r2, r2, r3
   22100:	ldr	r3, [fp, #-200]	; 0xffffff38
   22104:	str	r2, [r3, #40]	; 0x28
   22108:	sub	r3, fp, #128	; 0x80
   2210c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   22110:	ldr	r1, [fp, #-200]	; 0xffffff38
   22114:	mov	r0, r3
   22118:	bl	1fe74 <__assert_fail@plt+0xeb54>
   2211c:	str	r0, [fp, #-28]	; 0xffffffe4
   22120:	ldrb	r3, [fp, #-124]	; 0xffffff84
   22124:	cmp	r3, #2
   22128:	moveq	r3, #1
   2212c:	movne	r3, #0
   22130:	uxtb	r3, r3
   22134:	cmp	r3, #0
   22138:	beq	2214c <__assert_fail@plt+0x10e2c>
   2213c:	ldr	r3, [fp, #4]
   22140:	mov	r2, #7
   22144:	str	r2, [r3]
   22148:	b	22774 <__assert_fail@plt+0x11454>
   2214c:	ldrb	r3, [fp, #-124]	; 0xffffff84
   22150:	cmp	r3, #21
   22154:	bne	22180 <__assert_fail@plt+0x10e60>
   22158:	ldr	r3, [fp, #-200]	; 0xffffff38
   2215c:	ldr	r2, [r3, #40]	; 0x28
   22160:	ldr	r3, [fp, #-20]	; 0xffffffec
   22164:	sub	r2, r2, r3
   22168:	ldr	r3, [fp, #-200]	; 0xffffff38
   2216c:	str	r2, [r3, #40]	; 0x28
   22170:	ldr	r3, [fp, #-208]	; 0xffffff30
   22174:	mov	r2, #1
   22178:	strb	r2, [r3, #4]
   2217c:	b	22188 <__assert_fail@plt+0x10e68>
   22180:	mov	r3, #1
   22184:	strb	r3, [fp, #-29]	; 0xffffffe3
   22188:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   2218c:	cmp	r3, #0
   22190:	beq	222a4 <__assert_fail@plt+0x10f84>
   22194:	sub	r3, fp, #160	; 0xa0
   22198:	str	r3, [fp, #-116]	; 0xffffff8c
   2219c:	mov	r3, #3
   221a0:	str	r3, [fp, #-120]	; 0xffffff88
   221a4:	sub	r2, fp, #128	; 0x80
   221a8:	sub	r0, fp, #120	; 0x78
   221ac:	mov	r3, #1
   221b0:	str	r3, [sp, #8]
   221b4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   221b8:	str	r3, [sp, #4]
   221bc:	ldr	r3, [fp, #-204]	; 0xffffff34
   221c0:	str	r3, [sp]
   221c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   221c8:	ldr	r1, [fp, #-200]	; 0xffffff38
   221cc:	bl	22794 <__assert_fail@plt+0x11474>
   221d0:	str	r0, [fp, #-72]	; 0xffffffb8
   221d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   221d8:	cmp	r3, #0
   221dc:	movne	r3, #1
   221e0:	moveq	r3, #0
   221e4:	uxtb	r3, r3
   221e8:	cmp	r3, #0
   221ec:	beq	22200 <__assert_fail@plt+0x10ee0>
   221f0:	ldr	r3, [fp, #4]
   221f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   221f8:	str	r2, [r3]
   221fc:	b	22774 <__assert_fail@plt+0x11454>
   22200:	ldr	r2, [fp, #-212]	; 0xffffff2c
   22204:	ldr	r1, [fp, #-200]	; 0xffffff38
   22208:	ldr	r0, [fp, #-208]	; 0xffffff30
   2220c:	bl	1fe74 <__assert_fail@plt+0xeb54>
   22210:	str	r0, [fp, #-20]	; 0xffffffec
   22214:	sub	r1, fp, #112	; 0x70
   22218:	sub	r2, fp, #96	; 0x60
   2221c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   22220:	str	r3, [sp, #32]
   22224:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22228:	str	r3, [sp, #28]
   2222c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22230:	str	r3, [sp, #24]
   22234:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22238:	str	r3, [sp, #20]
   2223c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22240:	str	r3, [sp, #16]
   22244:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22248:	str	r3, [sp, #12]
   2224c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   22250:	str	r3, [sp, #8]
   22254:	ldr	r3, [fp, #-204]	; 0xffffff34
   22258:	str	r3, [sp, #4]
   2225c:	sub	r3, fp, #120	; 0x78
   22260:	str	r3, [sp]
   22264:	mov	r3, r1
   22268:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2226c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22270:	bl	218c4 <__assert_fail@plt+0x105a4>
   22274:	mov	r2, r0
   22278:	ldr	r3, [fp, #4]
   2227c:	str	r2, [r3]
   22280:	ldr	r3, [fp, #4]
   22284:	ldr	r3, [r3]
   22288:	cmp	r3, #0
   2228c:	movne	r3, #1
   22290:	moveq	r3, #0
   22294:	uxtb	r3, r3
   22298:	cmp	r3, #0
   2229c:	beq	224a8 <__assert_fail@plt+0x11188>
   222a0:	b	22774 <__assert_fail@plt+0x11454>
   222a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   222a8:	cmp	r3, #4
   222ac:	ldrls	pc, [pc, r3, lsl #2]
   222b0:	b	22494 <__assert_fail@plt+0x11174>
   222b4:	andeq	r2, r2, r8, asr #5
   222b8:	ldrdeq	r2, [r2], -ip
   222bc:	andeq	r2, r2, ip, lsl #7
   222c0:	ldrdeq	r2, [r2], -r0
   222c4:	andeq	r2, r2, r8, lsr r4
   222c8:	ldrb	r3, [fp, #-108]	; 0xffffff94
   222cc:	mov	r1, r3
   222d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   222d4:	bl	15b64 <__assert_fail@plt+0x4844>
   222d8:	b	224a8 <__assert_fail@plt+0x11188>
   222dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   222e0:	ldr	r2, [r3, #20]
   222e4:	ldr	r3, [fp, #-8]
   222e8:	cmp	r2, r3
   222ec:	moveq	r3, #1
   222f0:	movne	r3, #0
   222f4:	uxtb	r3, r3
   222f8:	cmp	r3, #0
   222fc:	beq	2235c <__assert_fail@plt+0x1103c>
   22300:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22304:	ldr	r3, [r3, #20]
   22308:	lsl	r3, r3, #1
   2230c:	add	r3, r3, #1
   22310:	str	r3, [fp, #-8]
   22314:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22318:	ldr	r2, [r3]
   2231c:	ldr	r3, [fp, #-8]
   22320:	lsl	r3, r3, #2
   22324:	mov	r1, r3
   22328:	mov	r0, r2
   2232c:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   22330:	str	r0, [fp, #-76]	; 0xffffffb4
   22334:	ldr	r3, [fp, #-76]	; 0xffffffb4
   22338:	cmp	r3, #0
   2233c:	moveq	r3, #1
   22340:	movne	r3, #0
   22344:	uxtb	r3, r3
   22348:	cmp	r3, #0
   2234c:	bne	2274c <__assert_fail@plt+0x1142c>
   22350:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22354:	ldr	r2, [fp, #-76]	; 0xffffffb4
   22358:	str	r2, [r3]
   2235c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22360:	ldr	r2, [r3]
   22364:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22368:	ldr	r3, [r3, #20]
   2236c:	add	r0, r3, #1
   22370:	ldr	r1, [fp, #-68]	; 0xffffffbc
   22374:	str	r0, [r1, #20]
   22378:	lsl	r3, r3, #2
   2237c:	add	r3, r2, r3
   22380:	ldr	r2, [fp, #-108]	; 0xffffff94
   22384:	str	r2, [r3]
   22388:	b	224a8 <__assert_fail@plt+0x11188>
   2238c:	ldr	r3, [fp, #-108]	; 0xffffff94
   22390:	sub	r2, fp, #100	; 0x64
   22394:	ldr	r1, [fp, #-68]	; 0xffffffbc
   22398:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2239c:	bl	22ac0 <__assert_fail@plt+0x117a0>
   223a0:	mov	r2, r0
   223a4:	ldr	r3, [fp, #4]
   223a8:	str	r2, [r3]
   223ac:	ldr	r3, [fp, #4]
   223b0:	ldr	r3, [r3]
   223b4:	cmp	r3, #0
   223b8:	movne	r3, #1
   223bc:	moveq	r3, #0
   223c0:	uxtb	r3, r3
   223c4:	cmp	r3, #0
   223c8:	beq	22494 <__assert_fail@plt+0x11174>
   223cc:	b	22774 <__assert_fail@plt+0x11454>
   223d0:	ldr	r1, [fp, #-108]	; 0xffffff94
   223d4:	sub	r2, fp, #92	; 0x5c
   223d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   223dc:	str	r3, [sp, #12]
   223e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   223e4:	str	r3, [sp, #8]
   223e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   223ec:	str	r3, [sp, #4]
   223f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   223f4:	str	r3, [sp]
   223f8:	mov	r3, r1
   223fc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   22400:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22404:	bl	21d88 <__assert_fail@plt+0x10a68>
   22408:	mov	r2, r0
   2240c:	ldr	r3, [fp, #4]
   22410:	str	r2, [r3]
   22414:	ldr	r3, [fp, #4]
   22418:	ldr	r3, [r3]
   2241c:	cmp	r3, #0
   22420:	movne	r3, #1
   22424:	moveq	r3, #0
   22428:	uxtb	r3, r3
   2242c:	cmp	r3, #0
   22430:	beq	2249c <__assert_fail@plt+0x1117c>
   22434:	b	22774 <__assert_fail@plt+0x11454>
   22438:	ldr	r3, [fp, #-200]	; 0xffffff38
   2243c:	ldr	r0, [r3, #64]	; 0x40
   22440:	ldr	r3, [fp, #-108]	; 0xffffff94
   22444:	sub	r1, fp, #104	; 0x68
   22448:	ldr	r2, [fp, #-212]	; 0xffffff2c
   2244c:	str	r2, [sp, #4]
   22450:	str	r3, [sp]
   22454:	mov	r3, r1
   22458:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2245c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   22460:	bl	22b2c <__assert_fail@plt+0x1180c>
   22464:	mov	r2, r0
   22468:	ldr	r3, [fp, #4]
   2246c:	str	r2, [r3]
   22470:	ldr	r3, [fp, #4]
   22474:	ldr	r3, [r3]
   22478:	cmp	r3, #0
   2247c:	movne	r3, #1
   22480:	moveq	r3, #0
   22484:	uxtb	r3, r3
   22488:	cmp	r3, #0
   2248c:	beq	224a4 <__assert_fail@plt+0x11184>
   22490:	b	22774 <__assert_fail@plt+0x11454>
   22494:	nop			; (mov r0, r0)
   22498:	b	224a8 <__assert_fail@plt+0x11188>
   2249c:	nop			; (mov r0, r0)
   224a0:	b	224a8 <__assert_fail@plt+0x11188>
   224a4:	nop			; (mov r0, r0)
   224a8:	ldr	r3, [fp, #-208]	; 0xffffff30
   224ac:	ldrb	r3, [r3, #4]
   224b0:	cmp	r3, #2
   224b4:	moveq	r3, #1
   224b8:	movne	r3, #0
   224bc:	uxtb	r3, r3
   224c0:	cmp	r3, #0
   224c4:	beq	224dc <__assert_fail@plt+0x111bc>
   224c8:	ldr	r3, [fp, #4]
   224cc:	mov	r2, #7
   224d0:	str	r2, [r3]
   224d4:	nop			; (mov r0, r0)
   224d8:	b	22774 <__assert_fail@plt+0x11454>
   224dc:	ldr	r3, [fp, #-208]	; 0xffffff30
   224e0:	ldrb	r3, [r3, #4]
   224e4:	cmp	r3, #21
   224e8:	bne	22000 <__assert_fail@plt+0x10ce0>
   224ec:	ldr	r3, [fp, #-200]	; 0xffffff38
   224f0:	ldr	r2, [r3, #40]	; 0x28
   224f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   224f8:	add	r2, r2, r3
   224fc:	ldr	r3, [fp, #-200]	; 0xffffff38
   22500:	str	r2, [r3, #40]	; 0x28
   22504:	ldrb	r3, [fp, #-9]
   22508:	cmp	r3, #0
   2250c:	bne	22514 <__assert_fail@plt+0x111f4>
   22510:	b	2251c <__assert_fail@plt+0x111fc>
   22514:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22518:	bl	15d8c <__assert_fail@plt+0x4a6c>
   2251c:	ldr	r3, [fp, #-204]	; 0xffffff34
   22520:	ldr	r3, [r3, #92]	; 0x5c
   22524:	cmp	r3, #1
   22528:	ble	22540 <__assert_fail@plt+0x11220>
   2252c:	ldr	r3, [fp, #-204]	; 0xffffff34
   22530:	ldr	r3, [r3, #60]	; 0x3c
   22534:	mov	r1, r3
   22538:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2253c:	bl	15e84 <__assert_fail@plt+0x4b64>
   22540:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22544:	ldr	r3, [r3, #20]
   22548:	cmp	r3, #0
   2254c:	bne	225b8 <__assert_fail@plt+0x11298>
   22550:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22554:	ldr	r3, [r3, #24]
   22558:	cmp	r3, #0
   2255c:	bne	225b8 <__assert_fail@plt+0x11298>
   22560:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22564:	ldr	r3, [r3, #28]
   22568:	cmp	r3, #0
   2256c:	bne	225b8 <__assert_fail@plt+0x11298>
   22570:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22574:	ldr	r3, [r3, #32]
   22578:	cmp	r3, #0
   2257c:	bne	225b8 <__assert_fail@plt+0x11298>
   22580:	ldr	r3, [fp, #-204]	; 0xffffff34
   22584:	ldr	r3, [r3, #92]	; 0x5c
   22588:	cmp	r3, #1
   2258c:	ble	226f0 <__assert_fail@plt+0x113d0>
   22590:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22594:	ldr	r3, [r3, #36]	; 0x24
   22598:	cmp	r3, #0
   2259c:	bne	225b8 <__assert_fail@plt+0x11298>
   225a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   225a4:	ldrb	r3, [r3, #16]
   225a8:	and	r3, r3, #1
   225ac:	uxtb	r3, r3
   225b0:	cmp	r3, #0
   225b4:	beq	226f0 <__assert_fail@plt+0x113d0>
   225b8:	ldr	r2, [fp, #-204]	; 0xffffff34
   225bc:	ldrb	r3, [r2, #88]	; 0x58
   225c0:	orr	r3, r3, #2
   225c4:	strb	r3, [r2, #88]	; 0x58
   225c8:	mov	r3, #6
   225cc:	strb	r3, [fp, #-84]	; 0xffffffac
   225d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   225d4:	str	r3, [fp, #-88]	; 0xffffffa8
   225d8:	sub	r3, fp, #88	; 0x58
   225dc:	mov	r2, #0
   225e0:	mov	r1, #0
   225e4:	ldr	r0, [fp, #-204]	; 0xffffff34
   225e8:	bl	23d38 <__assert_fail@plt+0x12a18>
   225ec:	str	r0, [fp, #-80]	; 0xffffffb0
   225f0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   225f4:	cmp	r3, #0
   225f8:	moveq	r3, #1
   225fc:	movne	r3, #0
   22600:	uxtb	r3, r3
   22604:	cmp	r3, #0
   22608:	bne	22754 <__assert_fail@plt+0x11434>
   2260c:	mov	r3, #0
   22610:	str	r3, [fp, #-36]	; 0xffffffdc
   22614:	b	22640 <__assert_fail@plt+0x11320>
   22618:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2261c:	lsl	r3, r3, #2
   22620:	ldr	r2, [fp, #-64]	; 0xffffffc0
   22624:	add	r3, r2, r3
   22628:	ldr	r3, [r3]
   2262c:	cmp	r3, #0
   22630:	bne	22650 <__assert_fail@plt+0x11330>
   22634:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22638:	add	r3, r3, #1
   2263c:	str	r3, [fp, #-36]	; 0xffffffdc
   22640:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22644:	cmp	r3, #7
   22648:	ble	22618 <__assert_fail@plt+0x112f8>
   2264c:	b	22654 <__assert_fail@plt+0x11334>
   22650:	nop			; (mov r0, r0)
   22654:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22658:	cmp	r3, #7
   2265c:	bgt	226dc <__assert_fail@plt+0x113bc>
   22660:	mov	r3, #3
   22664:	strb	r3, [fp, #-84]	; 0xffffffac
   22668:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2266c:	str	r3, [fp, #-88]	; 0xffffffa8
   22670:	sub	r3, fp, #88	; 0x58
   22674:	mov	r2, #0
   22678:	mov	r1, #0
   2267c:	ldr	r0, [fp, #-204]	; 0xffffff34
   22680:	bl	23d38 <__assert_fail@plt+0x12a18>
   22684:	str	r0, [fp, #-16]
   22688:	ldr	r3, [fp, #-16]
   2268c:	cmp	r3, #0
   22690:	moveq	r3, #1
   22694:	movne	r3, #0
   22698:	uxtb	r3, r3
   2269c:	cmp	r3, #0
   226a0:	bne	2275c <__assert_fail@plt+0x1143c>
   226a4:	mov	r3, #10
   226a8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   226ac:	ldr	r1, [fp, #-16]
   226b0:	ldr	r0, [fp, #-204]	; 0xffffff34
   226b4:	bl	23cdc <__assert_fail@plt+0x129bc>
   226b8:	str	r0, [fp, #-16]
   226bc:	ldr	r3, [fp, #-16]
   226c0:	cmp	r3, #0
   226c4:	moveq	r3, #1
   226c8:	movne	r3, #0
   226cc:	uxtb	r3, r3
   226d0:	cmp	r3, #0
   226d4:	beq	22740 <__assert_fail@plt+0x11420>
   226d8:	b	22768 <__assert_fail@plt+0x11448>
   226dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   226e0:	bl	31500 <__assert_fail@plt+0x201e0>
   226e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   226e8:	str	r3, [fp, #-16]
   226ec:	b	22740 <__assert_fail@plt+0x11420>
   226f0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   226f4:	bl	23c78 <__assert_fail@plt+0x12958>
   226f8:	mov	r3, #3
   226fc:	strb	r3, [fp, #-84]	; 0xffffffac
   22700:	ldr	r3, [fp, #-64]	; 0xffffffc0
   22704:	str	r3, [fp, #-88]	; 0xffffffa8
   22708:	sub	r3, fp, #88	; 0x58
   2270c:	mov	r2, #0
   22710:	mov	r1, #0
   22714:	ldr	r0, [fp, #-204]	; 0xffffff34
   22718:	bl	23d38 <__assert_fail@plt+0x12a18>
   2271c:	str	r0, [fp, #-16]
   22720:	ldr	r3, [fp, #-16]
   22724:	cmp	r3, #0
   22728:	moveq	r3, #1
   2272c:	movne	r3, #0
   22730:	uxtb	r3, r3
   22734:	cmp	r3, #0
   22738:	bne	22764 <__assert_fail@plt+0x11444>
   2273c:	b	22744 <__assert_fail@plt+0x11424>
   22740:	nop			; (mov r0, r0)
   22744:	ldr	r3, [fp, #-16]
   22748:	b	22788 <__assert_fail@plt+0x11468>
   2274c:	nop			; (mov r0, r0)
   22750:	b	22768 <__assert_fail@plt+0x11448>
   22754:	nop			; (mov r0, r0)
   22758:	b	22768 <__assert_fail@plt+0x11448>
   2275c:	nop			; (mov r0, r0)
   22760:	b	22768 <__assert_fail@plt+0x11448>
   22764:	nop			; (mov r0, r0)
   22768:	ldr	r3, [fp, #4]
   2276c:	mov	r2, #12
   22770:	str	r2, [r3]
   22774:	ldr	r0, [fp, #-64]	; 0xffffffc0
   22778:	bl	31500 <__assert_fail@plt+0x201e0>
   2277c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   22780:	bl	23c78 <__assert_fail@plt+0x12958>
   22784:	mov	r3, #0
   22788:	mov	r0, r3
   2278c:	sub	sp, fp, #4
   22790:	pop	{fp, pc}
   22794:	push	{fp, lr}
   22798:	add	fp, sp, #4
   2279c:	sub	sp, sp, #32
   227a0:	str	r0, [fp, #-24]	; 0xffffffe8
   227a4:	str	r1, [fp, #-28]	; 0xffffffe4
   227a8:	str	r2, [fp, #-32]	; 0xffffffe0
   227ac:	str	r3, [fp, #-36]	; 0xffffffdc
   227b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   227b4:	ldr	r3, [r3, #40]	; 0x28
   227b8:	mov	r1, r3
   227bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   227c0:	bl	15f0c <__assert_fail@plt+0x4bec>
   227c4:	str	r0, [fp, #-8]
   227c8:	ldr	r3, [fp, #-8]
   227cc:	cmp	r3, #1
   227d0:	ble	22820 <__assert_fail@plt+0x11500>
   227d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   227d8:	mov	r2, #1
   227dc:	str	r2, [r3]
   227e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   227e4:	ldr	r3, [r3, #40]	; 0x28
   227e8:	mov	r1, r3
   227ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   227f0:	bl	15fb0 <__assert_fail@plt+0x4c90>
   227f4:	mov	r2, r0
   227f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   227fc:	str	r2, [r3, #4]
   22800:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22804:	ldr	r2, [r3, #40]	; 0x28
   22808:	ldr	r3, [fp, #-8]
   2280c:	add	r2, r2, r3
   22810:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22814:	str	r2, [r3, #40]	; 0x28
   22818:	mov	r3, #0
   2281c:	b	228fc <__assert_fail@plt+0x115dc>
   22820:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22824:	ldr	r2, [r3, #40]	; 0x28
   22828:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2282c:	add	r2, r2, r3
   22830:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22834:	str	r2, [r3, #40]	; 0x28
   22838:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2283c:	ldrb	r3, [r3, #4]
   22840:	cmp	r3, #26
   22844:	beq	22868 <__assert_fail@plt+0x11548>
   22848:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2284c:	ldrb	r3, [r3, #4]
   22850:	cmp	r3, #30
   22854:	beq	22868 <__assert_fail@plt+0x11548>
   22858:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2285c:	ldrb	r3, [r3, #4]
   22860:	cmp	r3, #28
   22864:	bne	22880 <__assert_fail@plt+0x11560>
   22868:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2286c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22874:	bl	22908 <__assert_fail@plt+0x115e8>
   22878:	mov	r3, r0
   2287c:	b	228fc <__assert_fail@plt+0x115dc>
   22880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22884:	ldrb	r3, [r3, #4]
   22888:	cmp	r3, #22
   2288c:	moveq	r3, #1
   22890:	movne	r3, #0
   22894:	uxtb	r3, r3
   22898:	cmp	r3, #0
   2289c:	beq	228dc <__assert_fail@plt+0x115bc>
   228a0:	ldrb	r3, [fp, #12]
   228a4:	eor	r3, r3, #1
   228a8:	uxtb	r3, r3
   228ac:	cmp	r3, #0
   228b0:	beq	228dc <__assert_fail@plt+0x115bc>
   228b4:	sub	r3, fp, #16
   228b8:	ldr	r2, [fp, #8]
   228bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   228c0:	mov	r0, r3
   228c4:	bl	1fe74 <__assert_fail@plt+0xeb54>
   228c8:	ldrb	r3, [fp, #-12]
   228cc:	cmp	r3, #21
   228d0:	beq	228dc <__assert_fail@plt+0x115bc>
   228d4:	mov	r3, #11
   228d8:	b	228fc <__assert_fail@plt+0x115dc>
   228dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   228e0:	mov	r2, #0
   228e4:	str	r2, [r3]
   228e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   228ec:	ldrb	r2, [r3]
   228f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   228f4:	strb	r2, [r3, #4]
   228f8:	mov	r3, #0
   228fc:	mov	r0, r3
   22900:	sub	sp, fp, #4
   22904:	pop	{fp, pc}
   22908:	push	{fp, lr}
   2290c:	add	fp, sp, #4
   22910:	sub	sp, sp, #32
   22914:	str	r0, [fp, #-24]	; 0xffffffe8
   22918:	str	r1, [fp, #-28]	; 0xffffffe4
   2291c:	str	r2, [fp, #-32]	; 0xffffffe0
   22920:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22924:	ldrb	r3, [r3]
   22928:	strb	r3, [fp, #-13]
   2292c:	mov	r3, #0
   22930:	str	r3, [fp, #-12]
   22934:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22938:	ldr	r2, [r3, #56]	; 0x38
   2293c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22940:	ldr	r3, [r3, #40]	; 0x28
   22944:	cmp	r2, r3
   22948:	bgt	22954 <__assert_fail@plt+0x11634>
   2294c:	mov	r3, #7
   22950:	b	22ab4 <__assert_fail@plt+0x11794>
   22954:	ldr	r3, [fp, #-12]
   22958:	cmp	r3, #31
   2295c:	ble	22968 <__assert_fail@plt+0x11648>
   22960:	mov	r3, #7
   22964:	b	22ab4 <__assert_fail@plt+0x11794>
   22968:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2296c:	ldrb	r3, [r3, #4]
   22970:	cmp	r3, #30
   22974:	bne	2298c <__assert_fail@plt+0x1166c>
   22978:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2297c:	bl	18698 <__assert_fail@plt+0x7378>
   22980:	mov	r3, r0
   22984:	strb	r3, [fp, #-5]
   22988:	b	229b4 <__assert_fail@plt+0x11694>
   2298c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22990:	ldr	r2, [r3, #4]
   22994:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22998:	ldr	r3, [r3, #40]	; 0x28
   2299c:	add	r0, r3, #1
   229a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   229a4:	str	r0, [r1, #40]	; 0x28
   229a8:	add	r3, r2, r3
   229ac:	ldrb	r3, [r3]
   229b0:	strb	r3, [fp, #-5]
   229b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   229b8:	ldr	r2, [r3, #56]	; 0x38
   229bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   229c0:	ldr	r3, [r3, #40]	; 0x28
   229c4:	cmp	r2, r3
   229c8:	bgt	229d4 <__assert_fail@plt+0x116b4>
   229cc:	mov	r3, #7
   229d0:	b	22ab4 <__assert_fail@plt+0x11794>
   229d4:	ldrb	r2, [fp, #-5]
   229d8:	ldrb	r3, [fp, #-13]
   229dc:	cmp	r2, r3
   229e0:	bne	22a04 <__assert_fail@plt+0x116e4>
   229e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   229e8:	ldr	r3, [r3, #4]
   229ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   229f0:	ldr	r2, [r2, #40]	; 0x28
   229f4:	add	r3, r3, r2
   229f8:	ldrb	r3, [r3]
   229fc:	cmp	r3, #93	; 0x5d
   22a00:	beq	22a2c <__assert_fail@plt+0x1170c>
   22a04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22a08:	ldr	r2, [r3, #4]
   22a0c:	ldr	r3, [fp, #-12]
   22a10:	add	r3, r2, r3
   22a14:	ldrb	r2, [fp, #-5]
   22a18:	strb	r2, [r3]
   22a1c:	ldr	r3, [fp, #-12]
   22a20:	add	r3, r3, #1
   22a24:	str	r3, [fp, #-12]
   22a28:	b	22954 <__assert_fail@plt+0x11634>
   22a2c:	nop			; (mov r0, r0)
   22a30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22a34:	ldr	r3, [r3, #40]	; 0x28
   22a38:	add	r2, r3, #1
   22a3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22a40:	str	r2, [r3, #40]	; 0x28
   22a44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22a48:	ldr	r2, [r3, #4]
   22a4c:	ldr	r3, [fp, #-12]
   22a50:	add	r3, r2, r3
   22a54:	mov	r2, #0
   22a58:	strb	r2, [r3]
   22a5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22a60:	ldrb	r3, [r3, #4]
   22a64:	cmp	r3, #28
   22a68:	beq	22a90 <__assert_fail@plt+0x11770>
   22a6c:	cmp	r3, #30
   22a70:	beq	22aa0 <__assert_fail@plt+0x11780>
   22a74:	cmp	r3, #26
   22a78:	beq	22a80 <__assert_fail@plt+0x11760>
   22a7c:	b	22ab0 <__assert_fail@plt+0x11790>
   22a80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22a84:	mov	r2, #3
   22a88:	str	r2, [r3]
   22a8c:	b	22ab0 <__assert_fail@plt+0x11790>
   22a90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22a94:	mov	r2, #2
   22a98:	str	r2, [r3]
   22a9c:	b	22ab0 <__assert_fail@plt+0x11790>
   22aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22aa4:	mov	r2, #4
   22aa8:	str	r2, [r3]
   22aac:	nop			; (mov r0, r0)
   22ab0:	mov	r3, #0
   22ab4:	mov	r0, r3
   22ab8:	sub	sp, fp, #4
   22abc:	pop	{fp, pc}
   22ac0:	push	{fp, lr}
   22ac4:	add	fp, sp, #4
   22ac8:	sub	sp, sp, #16
   22acc:	str	r0, [fp, #-8]
   22ad0:	str	r1, [fp, #-12]
   22ad4:	str	r2, [fp, #-16]
   22ad8:	str	r3, [fp, #-20]	; 0xffffffec
   22adc:	ldr	r0, [fp, #-20]	; 0xffffffec
   22ae0:	bl	11200 <strlen@plt>
   22ae4:	mov	r3, r0
   22ae8:	cmp	r3, #1
   22aec:	movne	r3, #1
   22af0:	moveq	r3, #0
   22af4:	uxtb	r3, r3
   22af8:	cmp	r3, #0
   22afc:	beq	22b08 <__assert_fail@plt+0x117e8>
   22b00:	mov	r3, #3
   22b04:	b	22b20 <__assert_fail@plt+0x11800>
   22b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   22b0c:	ldrb	r3, [r3]
   22b10:	mov	r1, r3
   22b14:	ldr	r0, [fp, #-8]
   22b18:	bl	15b64 <__assert_fail@plt+0x4844>
   22b1c:	mov	r3, #0
   22b20:	mov	r0, r3
   22b24:	sub	sp, fp, #4
   22b28:	pop	{fp, pc}
   22b2c:	push	{r4, fp, lr}
   22b30:	add	fp, sp, #8
   22b34:	sub	sp, sp, #36	; 0x24
   22b38:	str	r0, [fp, #-32]	; 0xffffffe0
   22b3c:	str	r1, [fp, #-36]	; 0xffffffdc
   22b40:	str	r2, [fp, #-40]	; 0xffffffd8
   22b44:	str	r3, [fp, #-44]	; 0xffffffd4
   22b48:	ldr	r3, [fp, #4]
   22b4c:	str	r3, [fp, #-20]	; 0xffffffec
   22b50:	ldr	r3, [fp, #8]
   22b54:	and	r3, r3, #4194304	; 0x400000
   22b58:	cmp	r3, #0
   22b5c:	beq	22b98 <__assert_fail@plt+0x11878>
   22b60:	ldr	r1, [pc, #3300]	; 2384c <__assert_fail@plt+0x1252c>
   22b64:	ldr	r0, [fp, #-20]	; 0xffffffec
   22b68:	bl	11038 <strcmp@plt>
   22b6c:	mov	r3, r0
   22b70:	cmp	r3, #0
   22b74:	beq	22b90 <__assert_fail@plt+0x11870>
   22b78:	ldr	r1, [pc, #3280]	; 23850 <__assert_fail@plt+0x12530>
   22b7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22b80:	bl	11038 <strcmp@plt>
   22b84:	mov	r3, r0
   22b88:	cmp	r3, #0
   22b8c:	bne	22b98 <__assert_fail@plt+0x11878>
   22b90:	ldr	r3, [pc, #3260]	; 23854 <__assert_fail@plt+0x12534>
   22b94:	str	r3, [fp, #-20]	; 0xffffffec
   22b98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22b9c:	ldr	r2, [r3]
   22ba0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22ba4:	ldr	r3, [r3, #36]	; 0x24
   22ba8:	cmp	r2, r3
   22bac:	moveq	r3, #1
   22bb0:	movne	r3, #0
   22bb4:	uxtb	r3, r3
   22bb8:	cmp	r3, #0
   22bbc:	beq	22c30 <__assert_fail@plt+0x11910>
   22bc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22bc4:	ldr	r3, [r3, #36]	; 0x24
   22bc8:	lsl	r3, r3, #1
   22bcc:	add	r3, r3, #1
   22bd0:	str	r3, [fp, #-24]	; 0xffffffe8
   22bd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22bd8:	ldr	r2, [r3, #12]
   22bdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22be0:	lsl	r3, r3, #2
   22be4:	mov	r1, r3
   22be8:	mov	r0, r2
   22bec:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   22bf0:	str	r0, [fp, #-28]	; 0xffffffe4
   22bf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22bf8:	cmp	r3, #0
   22bfc:	moveq	r3, #1
   22c00:	movne	r3, #0
   22c04:	uxtb	r3, r3
   22c08:	cmp	r3, #0
   22c0c:	beq	22c18 <__assert_fail@plt+0x118f8>
   22c10:	mov	r3, #12
   22c14:	b	23840 <__assert_fail@plt+0x12520>
   22c18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22c1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22c20:	str	r2, [r3, #12]
   22c24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22c28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22c2c:	str	r2, [r3]
   22c30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22c34:	ldr	r2, [r3, #12]
   22c38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22c3c:	ldr	r3, [r3, #36]	; 0x24
   22c40:	add	r0, r3, #1
   22c44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   22c48:	str	r0, [r1, #36]	; 0x24
   22c4c:	lsl	r3, r3, #2
   22c50:	add	r4, r2, r3
   22c54:	ldr	r0, [fp, #-20]	; 0xffffffec
   22c58:	bl	11008 <wctype@plt>
   22c5c:	mov	r3, r0
   22c60:	str	r3, [r4]
   22c64:	ldr	r1, [pc, #3052]	; 23858 <__assert_fail@plt+0x12538>
   22c68:	ldr	r0, [fp, #-20]	; 0xffffffec
   22c6c:	bl	11038 <strcmp@plt>
   22c70:	mov	r3, r0
   22c74:	cmp	r3, #0
   22c78:	bne	22d60 <__assert_fail@plt+0x11a40>
   22c7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22c80:	cmp	r3, #0
   22c84:	movne	r3, #1
   22c88:	moveq	r3, #0
   22c8c:	uxtb	r3, r3
   22c90:	cmp	r3, #0
   22c94:	beq	22d04 <__assert_fail@plt+0x119e4>
   22c98:	mov	r3, #0
   22c9c:	str	r3, [fp, #-16]
   22ca0:	b	22cf4 <__assert_fail@plt+0x119d4>
   22ca4:	bl	111dc <__ctype_b_loc@plt>
   22ca8:	mov	r3, r0
   22cac:	ldr	r2, [r3]
   22cb0:	ldr	r3, [fp, #-16]
   22cb4:	lsl	r3, r3, #1
   22cb8:	add	r3, r2, r3
   22cbc:	ldrh	r3, [r3]
   22cc0:	and	r3, r3, #8
   22cc4:	cmp	r3, #0
   22cc8:	beq	22ce8 <__assert_fail@plt+0x119c8>
   22ccc:	ldr	r3, [fp, #-16]
   22cd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22cd4:	add	r3, r2, r3
   22cd8:	ldrb	r3, [r3]
   22cdc:	mov	r1, r3
   22ce0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22ce4:	bl	15b64 <__assert_fail@plt+0x4844>
   22ce8:	ldr	r3, [fp, #-16]
   22cec:	add	r3, r3, #1
   22cf0:	str	r3, [fp, #-16]
   22cf4:	ldr	r3, [fp, #-16]
   22cf8:	cmp	r3, #255	; 0xff
   22cfc:	ble	22ca4 <__assert_fail@plt+0x11984>
   22d00:	b	2383c <__assert_fail@plt+0x1251c>
   22d04:	mov	r3, #0
   22d08:	str	r3, [fp, #-16]
   22d0c:	b	22d50 <__assert_fail@plt+0x11a30>
   22d10:	bl	111dc <__ctype_b_loc@plt>
   22d14:	mov	r3, r0
   22d18:	ldr	r2, [r3]
   22d1c:	ldr	r3, [fp, #-16]
   22d20:	lsl	r3, r3, #1
   22d24:	add	r3, r2, r3
   22d28:	ldrh	r3, [r3]
   22d2c:	and	r3, r3, #8
   22d30:	cmp	r3, #0
   22d34:	beq	22d44 <__assert_fail@plt+0x11a24>
   22d38:	ldr	r1, [fp, #-16]
   22d3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22d40:	bl	15b64 <__assert_fail@plt+0x4844>
   22d44:	ldr	r3, [fp, #-16]
   22d48:	add	r3, r3, #1
   22d4c:	str	r3, [fp, #-16]
   22d50:	ldr	r3, [fp, #-16]
   22d54:	cmp	r3, #255	; 0xff
   22d58:	ble	22d10 <__assert_fail@plt+0x119f0>
   22d5c:	b	2383c <__assert_fail@plt+0x1251c>
   22d60:	ldr	r1, [pc, #2804]	; 2385c <__assert_fail@plt+0x1253c>
   22d64:	ldr	r0, [fp, #-20]	; 0xffffffec
   22d68:	bl	11038 <strcmp@plt>
   22d6c:	mov	r3, r0
   22d70:	cmp	r3, #0
   22d74:	bne	22e5c <__assert_fail@plt+0x11b3c>
   22d78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22d7c:	cmp	r3, #0
   22d80:	movne	r3, #1
   22d84:	moveq	r3, #0
   22d88:	uxtb	r3, r3
   22d8c:	cmp	r3, #0
   22d90:	beq	22e00 <__assert_fail@plt+0x11ae0>
   22d94:	mov	r3, #0
   22d98:	str	r3, [fp, #-16]
   22d9c:	b	22df0 <__assert_fail@plt+0x11ad0>
   22da0:	bl	111dc <__ctype_b_loc@plt>
   22da4:	mov	r3, r0
   22da8:	ldr	r2, [r3]
   22dac:	ldr	r3, [fp, #-16]
   22db0:	lsl	r3, r3, #1
   22db4:	add	r3, r2, r3
   22db8:	ldrh	r3, [r3]
   22dbc:	and	r3, r3, #2
   22dc0:	cmp	r3, #0
   22dc4:	beq	22de4 <__assert_fail@plt+0x11ac4>
   22dc8:	ldr	r3, [fp, #-16]
   22dcc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22dd0:	add	r3, r2, r3
   22dd4:	ldrb	r3, [r3]
   22dd8:	mov	r1, r3
   22ddc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22de0:	bl	15b64 <__assert_fail@plt+0x4844>
   22de4:	ldr	r3, [fp, #-16]
   22de8:	add	r3, r3, #1
   22dec:	str	r3, [fp, #-16]
   22df0:	ldr	r3, [fp, #-16]
   22df4:	cmp	r3, #255	; 0xff
   22df8:	ble	22da0 <__assert_fail@plt+0x11a80>
   22dfc:	b	2383c <__assert_fail@plt+0x1251c>
   22e00:	mov	r3, #0
   22e04:	str	r3, [fp, #-16]
   22e08:	b	22e4c <__assert_fail@plt+0x11b2c>
   22e0c:	bl	111dc <__ctype_b_loc@plt>
   22e10:	mov	r3, r0
   22e14:	ldr	r2, [r3]
   22e18:	ldr	r3, [fp, #-16]
   22e1c:	lsl	r3, r3, #1
   22e20:	add	r3, r2, r3
   22e24:	ldrh	r3, [r3]
   22e28:	and	r3, r3, #2
   22e2c:	cmp	r3, #0
   22e30:	beq	22e40 <__assert_fail@plt+0x11b20>
   22e34:	ldr	r1, [fp, #-16]
   22e38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22e3c:	bl	15b64 <__assert_fail@plt+0x4844>
   22e40:	ldr	r3, [fp, #-16]
   22e44:	add	r3, r3, #1
   22e48:	str	r3, [fp, #-16]
   22e4c:	ldr	r3, [fp, #-16]
   22e50:	cmp	r3, #255	; 0xff
   22e54:	ble	22e0c <__assert_fail@plt+0x11aec>
   22e58:	b	2383c <__assert_fail@plt+0x1251c>
   22e5c:	ldr	r1, [pc, #2540]	; 23850 <__assert_fail@plt+0x12530>
   22e60:	ldr	r0, [fp, #-20]	; 0xffffffec
   22e64:	bl	11038 <strcmp@plt>
   22e68:	mov	r3, r0
   22e6c:	cmp	r3, #0
   22e70:	bne	22f58 <__assert_fail@plt+0x11c38>
   22e74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22e78:	cmp	r3, #0
   22e7c:	movne	r3, #1
   22e80:	moveq	r3, #0
   22e84:	uxtb	r3, r3
   22e88:	cmp	r3, #0
   22e8c:	beq	22efc <__assert_fail@plt+0x11bdc>
   22e90:	mov	r3, #0
   22e94:	str	r3, [fp, #-16]
   22e98:	b	22eec <__assert_fail@plt+0x11bcc>
   22e9c:	bl	111dc <__ctype_b_loc@plt>
   22ea0:	mov	r3, r0
   22ea4:	ldr	r2, [r3]
   22ea8:	ldr	r3, [fp, #-16]
   22eac:	lsl	r3, r3, #1
   22eb0:	add	r3, r2, r3
   22eb4:	ldrh	r3, [r3]
   22eb8:	and	r3, r3, #512	; 0x200
   22ebc:	cmp	r3, #0
   22ec0:	beq	22ee0 <__assert_fail@plt+0x11bc0>
   22ec4:	ldr	r3, [fp, #-16]
   22ec8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22ecc:	add	r3, r2, r3
   22ed0:	ldrb	r3, [r3]
   22ed4:	mov	r1, r3
   22ed8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22edc:	bl	15b64 <__assert_fail@plt+0x4844>
   22ee0:	ldr	r3, [fp, #-16]
   22ee4:	add	r3, r3, #1
   22ee8:	str	r3, [fp, #-16]
   22eec:	ldr	r3, [fp, #-16]
   22ef0:	cmp	r3, #255	; 0xff
   22ef4:	ble	22e9c <__assert_fail@plt+0x11b7c>
   22ef8:	b	2383c <__assert_fail@plt+0x1251c>
   22efc:	mov	r3, #0
   22f00:	str	r3, [fp, #-16]
   22f04:	b	22f48 <__assert_fail@plt+0x11c28>
   22f08:	bl	111dc <__ctype_b_loc@plt>
   22f0c:	mov	r3, r0
   22f10:	ldr	r2, [r3]
   22f14:	ldr	r3, [fp, #-16]
   22f18:	lsl	r3, r3, #1
   22f1c:	add	r3, r2, r3
   22f20:	ldrh	r3, [r3]
   22f24:	and	r3, r3, #512	; 0x200
   22f28:	cmp	r3, #0
   22f2c:	beq	22f3c <__assert_fail@plt+0x11c1c>
   22f30:	ldr	r1, [fp, #-16]
   22f34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22f38:	bl	15b64 <__assert_fail@plt+0x4844>
   22f3c:	ldr	r3, [fp, #-16]
   22f40:	add	r3, r3, #1
   22f44:	str	r3, [fp, #-16]
   22f48:	ldr	r3, [fp, #-16]
   22f4c:	cmp	r3, #255	; 0xff
   22f50:	ble	22f08 <__assert_fail@plt+0x11be8>
   22f54:	b	2383c <__assert_fail@plt+0x1251c>
   22f58:	ldr	r1, [pc, #2304]	; 23860 <__assert_fail@plt+0x12540>
   22f5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22f60:	bl	11038 <strcmp@plt>
   22f64:	mov	r3, r0
   22f68:	cmp	r3, #0
   22f6c:	bne	23054 <__assert_fail@plt+0x11d34>
   22f70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22f74:	cmp	r3, #0
   22f78:	movne	r3, #1
   22f7c:	moveq	r3, #0
   22f80:	uxtb	r3, r3
   22f84:	cmp	r3, #0
   22f88:	beq	22ff8 <__assert_fail@plt+0x11cd8>
   22f8c:	mov	r3, #0
   22f90:	str	r3, [fp, #-16]
   22f94:	b	22fe8 <__assert_fail@plt+0x11cc8>
   22f98:	bl	111dc <__ctype_b_loc@plt>
   22f9c:	mov	r3, r0
   22fa0:	ldr	r2, [r3]
   22fa4:	ldr	r3, [fp, #-16]
   22fa8:	lsl	r3, r3, #1
   22fac:	add	r3, r2, r3
   22fb0:	ldrh	r3, [r3]
   22fb4:	and	r3, r3, #8192	; 0x2000
   22fb8:	cmp	r3, #0
   22fbc:	beq	22fdc <__assert_fail@plt+0x11cbc>
   22fc0:	ldr	r3, [fp, #-16]
   22fc4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22fc8:	add	r3, r2, r3
   22fcc:	ldrb	r3, [r3]
   22fd0:	mov	r1, r3
   22fd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22fd8:	bl	15b64 <__assert_fail@plt+0x4844>
   22fdc:	ldr	r3, [fp, #-16]
   22fe0:	add	r3, r3, #1
   22fe4:	str	r3, [fp, #-16]
   22fe8:	ldr	r3, [fp, #-16]
   22fec:	cmp	r3, #255	; 0xff
   22ff0:	ble	22f98 <__assert_fail@plt+0x11c78>
   22ff4:	b	2383c <__assert_fail@plt+0x1251c>
   22ff8:	mov	r3, #0
   22ffc:	str	r3, [fp, #-16]
   23000:	b	23044 <__assert_fail@plt+0x11d24>
   23004:	bl	111dc <__ctype_b_loc@plt>
   23008:	mov	r3, r0
   2300c:	ldr	r2, [r3]
   23010:	ldr	r3, [fp, #-16]
   23014:	lsl	r3, r3, #1
   23018:	add	r3, r2, r3
   2301c:	ldrh	r3, [r3]
   23020:	and	r3, r3, #8192	; 0x2000
   23024:	cmp	r3, #0
   23028:	beq	23038 <__assert_fail@plt+0x11d18>
   2302c:	ldr	r1, [fp, #-16]
   23030:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23034:	bl	15b64 <__assert_fail@plt+0x4844>
   23038:	ldr	r3, [fp, #-16]
   2303c:	add	r3, r3, #1
   23040:	str	r3, [fp, #-16]
   23044:	ldr	r3, [fp, #-16]
   23048:	cmp	r3, #255	; 0xff
   2304c:	ble	23004 <__assert_fail@plt+0x11ce4>
   23050:	b	2383c <__assert_fail@plt+0x1251c>
   23054:	ldr	r1, [pc, #2040]	; 23854 <__assert_fail@plt+0x12534>
   23058:	ldr	r0, [fp, #-20]	; 0xffffffec
   2305c:	bl	11038 <strcmp@plt>
   23060:	mov	r3, r0
   23064:	cmp	r3, #0
   23068:	bne	23150 <__assert_fail@plt+0x11e30>
   2306c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23070:	cmp	r3, #0
   23074:	movne	r3, #1
   23078:	moveq	r3, #0
   2307c:	uxtb	r3, r3
   23080:	cmp	r3, #0
   23084:	beq	230f4 <__assert_fail@plt+0x11dd4>
   23088:	mov	r3, #0
   2308c:	str	r3, [fp, #-16]
   23090:	b	230e4 <__assert_fail@plt+0x11dc4>
   23094:	bl	111dc <__ctype_b_loc@plt>
   23098:	mov	r3, r0
   2309c:	ldr	r2, [r3]
   230a0:	ldr	r3, [fp, #-16]
   230a4:	lsl	r3, r3, #1
   230a8:	add	r3, r2, r3
   230ac:	ldrh	r3, [r3]
   230b0:	and	r3, r3, #1024	; 0x400
   230b4:	cmp	r3, #0
   230b8:	beq	230d8 <__assert_fail@plt+0x11db8>
   230bc:	ldr	r3, [fp, #-16]
   230c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   230c4:	add	r3, r2, r3
   230c8:	ldrb	r3, [r3]
   230cc:	mov	r1, r3
   230d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   230d4:	bl	15b64 <__assert_fail@plt+0x4844>
   230d8:	ldr	r3, [fp, #-16]
   230dc:	add	r3, r3, #1
   230e0:	str	r3, [fp, #-16]
   230e4:	ldr	r3, [fp, #-16]
   230e8:	cmp	r3, #255	; 0xff
   230ec:	ble	23094 <__assert_fail@plt+0x11d74>
   230f0:	b	2383c <__assert_fail@plt+0x1251c>
   230f4:	mov	r3, #0
   230f8:	str	r3, [fp, #-16]
   230fc:	b	23140 <__assert_fail@plt+0x11e20>
   23100:	bl	111dc <__ctype_b_loc@plt>
   23104:	mov	r3, r0
   23108:	ldr	r2, [r3]
   2310c:	ldr	r3, [fp, #-16]
   23110:	lsl	r3, r3, #1
   23114:	add	r3, r2, r3
   23118:	ldrh	r3, [r3]
   2311c:	and	r3, r3, #1024	; 0x400
   23120:	cmp	r3, #0
   23124:	beq	23134 <__assert_fail@plt+0x11e14>
   23128:	ldr	r1, [fp, #-16]
   2312c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23130:	bl	15b64 <__assert_fail@plt+0x4844>
   23134:	ldr	r3, [fp, #-16]
   23138:	add	r3, r3, #1
   2313c:	str	r3, [fp, #-16]
   23140:	ldr	r3, [fp, #-16]
   23144:	cmp	r3, #255	; 0xff
   23148:	ble	23100 <__assert_fail@plt+0x11de0>
   2314c:	b	2383c <__assert_fail@plt+0x1251c>
   23150:	ldr	r1, [pc, #1804]	; 23864 <__assert_fail@plt+0x12544>
   23154:	ldr	r0, [fp, #-20]	; 0xffffffec
   23158:	bl	11038 <strcmp@plt>
   2315c:	mov	r3, r0
   23160:	cmp	r3, #0
   23164:	bne	2324c <__assert_fail@plt+0x11f2c>
   23168:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2316c:	cmp	r3, #0
   23170:	movne	r3, #1
   23174:	moveq	r3, #0
   23178:	uxtb	r3, r3
   2317c:	cmp	r3, #0
   23180:	beq	231f0 <__assert_fail@plt+0x11ed0>
   23184:	mov	r3, #0
   23188:	str	r3, [fp, #-16]
   2318c:	b	231e0 <__assert_fail@plt+0x11ec0>
   23190:	bl	111dc <__ctype_b_loc@plt>
   23194:	mov	r3, r0
   23198:	ldr	r2, [r3]
   2319c:	ldr	r3, [fp, #-16]
   231a0:	lsl	r3, r3, #1
   231a4:	add	r3, r2, r3
   231a8:	ldrh	r3, [r3]
   231ac:	and	r3, r3, #2048	; 0x800
   231b0:	cmp	r3, #0
   231b4:	beq	231d4 <__assert_fail@plt+0x11eb4>
   231b8:	ldr	r3, [fp, #-16]
   231bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   231c0:	add	r3, r2, r3
   231c4:	ldrb	r3, [r3]
   231c8:	mov	r1, r3
   231cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   231d0:	bl	15b64 <__assert_fail@plt+0x4844>
   231d4:	ldr	r3, [fp, #-16]
   231d8:	add	r3, r3, #1
   231dc:	str	r3, [fp, #-16]
   231e0:	ldr	r3, [fp, #-16]
   231e4:	cmp	r3, #255	; 0xff
   231e8:	ble	23190 <__assert_fail@plt+0x11e70>
   231ec:	b	2383c <__assert_fail@plt+0x1251c>
   231f0:	mov	r3, #0
   231f4:	str	r3, [fp, #-16]
   231f8:	b	2323c <__assert_fail@plt+0x11f1c>
   231fc:	bl	111dc <__ctype_b_loc@plt>
   23200:	mov	r3, r0
   23204:	ldr	r2, [r3]
   23208:	ldr	r3, [fp, #-16]
   2320c:	lsl	r3, r3, #1
   23210:	add	r3, r2, r3
   23214:	ldrh	r3, [r3]
   23218:	and	r3, r3, #2048	; 0x800
   2321c:	cmp	r3, #0
   23220:	beq	23230 <__assert_fail@plt+0x11f10>
   23224:	ldr	r1, [fp, #-16]
   23228:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2322c:	bl	15b64 <__assert_fail@plt+0x4844>
   23230:	ldr	r3, [fp, #-16]
   23234:	add	r3, r3, #1
   23238:	str	r3, [fp, #-16]
   2323c:	ldr	r3, [fp, #-16]
   23240:	cmp	r3, #255	; 0xff
   23244:	ble	231fc <__assert_fail@plt+0x11edc>
   23248:	b	2383c <__assert_fail@plt+0x1251c>
   2324c:	ldr	r1, [pc, #1556]	; 23868 <__assert_fail@plt+0x12548>
   23250:	ldr	r0, [fp, #-20]	; 0xffffffec
   23254:	bl	11038 <strcmp@plt>
   23258:	mov	r3, r0
   2325c:	cmp	r3, #0
   23260:	bne	23348 <__assert_fail@plt+0x12028>
   23264:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23268:	cmp	r3, #0
   2326c:	movne	r3, #1
   23270:	moveq	r3, #0
   23274:	uxtb	r3, r3
   23278:	cmp	r3, #0
   2327c:	beq	232ec <__assert_fail@plt+0x11fcc>
   23280:	mov	r3, #0
   23284:	str	r3, [fp, #-16]
   23288:	b	232dc <__assert_fail@plt+0x11fbc>
   2328c:	bl	111dc <__ctype_b_loc@plt>
   23290:	mov	r3, r0
   23294:	ldr	r2, [r3]
   23298:	ldr	r3, [fp, #-16]
   2329c:	lsl	r3, r3, #1
   232a0:	add	r3, r2, r3
   232a4:	ldrh	r3, [r3]
   232a8:	and	r3, r3, #16384	; 0x4000
   232ac:	cmp	r3, #0
   232b0:	beq	232d0 <__assert_fail@plt+0x11fb0>
   232b4:	ldr	r3, [fp, #-16]
   232b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   232bc:	add	r3, r2, r3
   232c0:	ldrb	r3, [r3]
   232c4:	mov	r1, r3
   232c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   232cc:	bl	15b64 <__assert_fail@plt+0x4844>
   232d0:	ldr	r3, [fp, #-16]
   232d4:	add	r3, r3, #1
   232d8:	str	r3, [fp, #-16]
   232dc:	ldr	r3, [fp, #-16]
   232e0:	cmp	r3, #255	; 0xff
   232e4:	ble	2328c <__assert_fail@plt+0x11f6c>
   232e8:	b	2383c <__assert_fail@plt+0x1251c>
   232ec:	mov	r3, #0
   232f0:	str	r3, [fp, #-16]
   232f4:	b	23338 <__assert_fail@plt+0x12018>
   232f8:	bl	111dc <__ctype_b_loc@plt>
   232fc:	mov	r3, r0
   23300:	ldr	r2, [r3]
   23304:	ldr	r3, [fp, #-16]
   23308:	lsl	r3, r3, #1
   2330c:	add	r3, r2, r3
   23310:	ldrh	r3, [r3]
   23314:	and	r3, r3, #16384	; 0x4000
   23318:	cmp	r3, #0
   2331c:	beq	2332c <__assert_fail@plt+0x1200c>
   23320:	ldr	r1, [fp, #-16]
   23324:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23328:	bl	15b64 <__assert_fail@plt+0x4844>
   2332c:	ldr	r3, [fp, #-16]
   23330:	add	r3, r3, #1
   23334:	str	r3, [fp, #-16]
   23338:	ldr	r3, [fp, #-16]
   2333c:	cmp	r3, #255	; 0xff
   23340:	ble	232f8 <__assert_fail@plt+0x11fd8>
   23344:	b	2383c <__assert_fail@plt+0x1251c>
   23348:	ldr	r1, [pc, #1276]	; 2384c <__assert_fail@plt+0x1252c>
   2334c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23350:	bl	11038 <strcmp@plt>
   23354:	mov	r3, r0
   23358:	cmp	r3, #0
   2335c:	bne	23444 <__assert_fail@plt+0x12124>
   23360:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23364:	cmp	r3, #0
   23368:	movne	r3, #1
   2336c:	moveq	r3, #0
   23370:	uxtb	r3, r3
   23374:	cmp	r3, #0
   23378:	beq	233e8 <__assert_fail@plt+0x120c8>
   2337c:	mov	r3, #0
   23380:	str	r3, [fp, #-16]
   23384:	b	233d8 <__assert_fail@plt+0x120b8>
   23388:	bl	111dc <__ctype_b_loc@plt>
   2338c:	mov	r3, r0
   23390:	ldr	r2, [r3]
   23394:	ldr	r3, [fp, #-16]
   23398:	lsl	r3, r3, #1
   2339c:	add	r3, r2, r3
   233a0:	ldrh	r3, [r3]
   233a4:	and	r3, r3, #256	; 0x100
   233a8:	cmp	r3, #0
   233ac:	beq	233cc <__assert_fail@plt+0x120ac>
   233b0:	ldr	r3, [fp, #-16]
   233b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   233b8:	add	r3, r2, r3
   233bc:	ldrb	r3, [r3]
   233c0:	mov	r1, r3
   233c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   233c8:	bl	15b64 <__assert_fail@plt+0x4844>
   233cc:	ldr	r3, [fp, #-16]
   233d0:	add	r3, r3, #1
   233d4:	str	r3, [fp, #-16]
   233d8:	ldr	r3, [fp, #-16]
   233dc:	cmp	r3, #255	; 0xff
   233e0:	ble	23388 <__assert_fail@plt+0x12068>
   233e4:	b	2383c <__assert_fail@plt+0x1251c>
   233e8:	mov	r3, #0
   233ec:	str	r3, [fp, #-16]
   233f0:	b	23434 <__assert_fail@plt+0x12114>
   233f4:	bl	111dc <__ctype_b_loc@plt>
   233f8:	mov	r3, r0
   233fc:	ldr	r2, [r3]
   23400:	ldr	r3, [fp, #-16]
   23404:	lsl	r3, r3, #1
   23408:	add	r3, r2, r3
   2340c:	ldrh	r3, [r3]
   23410:	and	r3, r3, #256	; 0x100
   23414:	cmp	r3, #0
   23418:	beq	23428 <__assert_fail@plt+0x12108>
   2341c:	ldr	r1, [fp, #-16]
   23420:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23424:	bl	15b64 <__assert_fail@plt+0x4844>
   23428:	ldr	r3, [fp, #-16]
   2342c:	add	r3, r3, #1
   23430:	str	r3, [fp, #-16]
   23434:	ldr	r3, [fp, #-16]
   23438:	cmp	r3, #255	; 0xff
   2343c:	ble	233f4 <__assert_fail@plt+0x120d4>
   23440:	b	2383c <__assert_fail@plt+0x1251c>
   23444:	ldr	r1, [pc, #1056]	; 2386c <__assert_fail@plt+0x1254c>
   23448:	ldr	r0, [fp, #-20]	; 0xffffffec
   2344c:	bl	11038 <strcmp@plt>
   23450:	mov	r3, r0
   23454:	cmp	r3, #0
   23458:	bne	23540 <__assert_fail@plt+0x12220>
   2345c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23460:	cmp	r3, #0
   23464:	movne	r3, #1
   23468:	moveq	r3, #0
   2346c:	uxtb	r3, r3
   23470:	cmp	r3, #0
   23474:	beq	234e4 <__assert_fail@plt+0x121c4>
   23478:	mov	r3, #0
   2347c:	str	r3, [fp, #-16]
   23480:	b	234d4 <__assert_fail@plt+0x121b4>
   23484:	bl	111dc <__ctype_b_loc@plt>
   23488:	mov	r3, r0
   2348c:	ldr	r2, [r3]
   23490:	ldr	r3, [fp, #-16]
   23494:	lsl	r3, r3, #1
   23498:	add	r3, r2, r3
   2349c:	ldrh	r3, [r3]
   234a0:	and	r3, r3, #1
   234a4:	cmp	r3, #0
   234a8:	beq	234c8 <__assert_fail@plt+0x121a8>
   234ac:	ldr	r3, [fp, #-16]
   234b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   234b4:	add	r3, r2, r3
   234b8:	ldrb	r3, [r3]
   234bc:	mov	r1, r3
   234c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   234c4:	bl	15b64 <__assert_fail@plt+0x4844>
   234c8:	ldr	r3, [fp, #-16]
   234cc:	add	r3, r3, #1
   234d0:	str	r3, [fp, #-16]
   234d4:	ldr	r3, [fp, #-16]
   234d8:	cmp	r3, #255	; 0xff
   234dc:	ble	23484 <__assert_fail@plt+0x12164>
   234e0:	b	2383c <__assert_fail@plt+0x1251c>
   234e4:	mov	r3, #0
   234e8:	str	r3, [fp, #-16]
   234ec:	b	23530 <__assert_fail@plt+0x12210>
   234f0:	bl	111dc <__ctype_b_loc@plt>
   234f4:	mov	r3, r0
   234f8:	ldr	r2, [r3]
   234fc:	ldr	r3, [fp, #-16]
   23500:	lsl	r3, r3, #1
   23504:	add	r3, r2, r3
   23508:	ldrh	r3, [r3]
   2350c:	and	r3, r3, #1
   23510:	cmp	r3, #0
   23514:	beq	23524 <__assert_fail@plt+0x12204>
   23518:	ldr	r1, [fp, #-16]
   2351c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23520:	bl	15b64 <__assert_fail@plt+0x4844>
   23524:	ldr	r3, [fp, #-16]
   23528:	add	r3, r3, #1
   2352c:	str	r3, [fp, #-16]
   23530:	ldr	r3, [fp, #-16]
   23534:	cmp	r3, #255	; 0xff
   23538:	ble	234f0 <__assert_fail@plt+0x121d0>
   2353c:	b	2383c <__assert_fail@plt+0x1251c>
   23540:	ldr	r1, [pc, #808]	; 23870 <__assert_fail@plt+0x12550>
   23544:	ldr	r0, [fp, #-20]	; 0xffffffec
   23548:	bl	11038 <strcmp@plt>
   2354c:	mov	r3, r0
   23550:	cmp	r3, #0
   23554:	bne	2363c <__assert_fail@plt+0x1231c>
   23558:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2355c:	cmp	r3, #0
   23560:	movne	r3, #1
   23564:	moveq	r3, #0
   23568:	uxtb	r3, r3
   2356c:	cmp	r3, #0
   23570:	beq	235e0 <__assert_fail@plt+0x122c0>
   23574:	mov	r3, #0
   23578:	str	r3, [fp, #-16]
   2357c:	b	235d0 <__assert_fail@plt+0x122b0>
   23580:	bl	111dc <__ctype_b_loc@plt>
   23584:	mov	r3, r0
   23588:	ldr	r2, [r3]
   2358c:	ldr	r3, [fp, #-16]
   23590:	lsl	r3, r3, #1
   23594:	add	r3, r2, r3
   23598:	ldrh	r3, [r3]
   2359c:	sxth	r3, r3
   235a0:	cmp	r3, #0
   235a4:	bge	235c4 <__assert_fail@plt+0x122a4>
   235a8:	ldr	r3, [fp, #-16]
   235ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   235b0:	add	r3, r2, r3
   235b4:	ldrb	r3, [r3]
   235b8:	mov	r1, r3
   235bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   235c0:	bl	15b64 <__assert_fail@plt+0x4844>
   235c4:	ldr	r3, [fp, #-16]
   235c8:	add	r3, r3, #1
   235cc:	str	r3, [fp, #-16]
   235d0:	ldr	r3, [fp, #-16]
   235d4:	cmp	r3, #255	; 0xff
   235d8:	ble	23580 <__assert_fail@plt+0x12260>
   235dc:	b	2383c <__assert_fail@plt+0x1251c>
   235e0:	mov	r3, #0
   235e4:	str	r3, [fp, #-16]
   235e8:	b	2362c <__assert_fail@plt+0x1230c>
   235ec:	bl	111dc <__ctype_b_loc@plt>
   235f0:	mov	r3, r0
   235f4:	ldr	r2, [r3]
   235f8:	ldr	r3, [fp, #-16]
   235fc:	lsl	r3, r3, #1
   23600:	add	r3, r2, r3
   23604:	ldrh	r3, [r3]
   23608:	sxth	r3, r3
   2360c:	cmp	r3, #0
   23610:	bge	23620 <__assert_fail@plt+0x12300>
   23614:	ldr	r1, [fp, #-16]
   23618:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2361c:	bl	15b64 <__assert_fail@plt+0x4844>
   23620:	ldr	r3, [fp, #-16]
   23624:	add	r3, r3, #1
   23628:	str	r3, [fp, #-16]
   2362c:	ldr	r3, [fp, #-16]
   23630:	cmp	r3, #255	; 0xff
   23634:	ble	235ec <__assert_fail@plt+0x122cc>
   23638:	b	2383c <__assert_fail@plt+0x1251c>
   2363c:	ldr	r1, [pc, #560]	; 23874 <__assert_fail@plt+0x12554>
   23640:	ldr	r0, [fp, #-20]	; 0xffffffec
   23644:	bl	11038 <strcmp@plt>
   23648:	mov	r3, r0
   2364c:	cmp	r3, #0
   23650:	bne	23738 <__assert_fail@plt+0x12418>
   23654:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23658:	cmp	r3, #0
   2365c:	movne	r3, #1
   23660:	moveq	r3, #0
   23664:	uxtb	r3, r3
   23668:	cmp	r3, #0
   2366c:	beq	236dc <__assert_fail@plt+0x123bc>
   23670:	mov	r3, #0
   23674:	str	r3, [fp, #-16]
   23678:	b	236cc <__assert_fail@plt+0x123ac>
   2367c:	bl	111dc <__ctype_b_loc@plt>
   23680:	mov	r3, r0
   23684:	ldr	r2, [r3]
   23688:	ldr	r3, [fp, #-16]
   2368c:	lsl	r3, r3, #1
   23690:	add	r3, r2, r3
   23694:	ldrh	r3, [r3]
   23698:	and	r3, r3, #4
   2369c:	cmp	r3, #0
   236a0:	beq	236c0 <__assert_fail@plt+0x123a0>
   236a4:	ldr	r3, [fp, #-16]
   236a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   236ac:	add	r3, r2, r3
   236b0:	ldrb	r3, [r3]
   236b4:	mov	r1, r3
   236b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   236bc:	bl	15b64 <__assert_fail@plt+0x4844>
   236c0:	ldr	r3, [fp, #-16]
   236c4:	add	r3, r3, #1
   236c8:	str	r3, [fp, #-16]
   236cc:	ldr	r3, [fp, #-16]
   236d0:	cmp	r3, #255	; 0xff
   236d4:	ble	2367c <__assert_fail@plt+0x1235c>
   236d8:	b	2383c <__assert_fail@plt+0x1251c>
   236dc:	mov	r3, #0
   236e0:	str	r3, [fp, #-16]
   236e4:	b	23728 <__assert_fail@plt+0x12408>
   236e8:	bl	111dc <__ctype_b_loc@plt>
   236ec:	mov	r3, r0
   236f0:	ldr	r2, [r3]
   236f4:	ldr	r3, [fp, #-16]
   236f8:	lsl	r3, r3, #1
   236fc:	add	r3, r2, r3
   23700:	ldrh	r3, [r3]
   23704:	and	r3, r3, #4
   23708:	cmp	r3, #0
   2370c:	beq	2371c <__assert_fail@plt+0x123fc>
   23710:	ldr	r1, [fp, #-16]
   23714:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23718:	bl	15b64 <__assert_fail@plt+0x4844>
   2371c:	ldr	r3, [fp, #-16]
   23720:	add	r3, r3, #1
   23724:	str	r3, [fp, #-16]
   23728:	ldr	r3, [fp, #-16]
   2372c:	cmp	r3, #255	; 0xff
   23730:	ble	236e8 <__assert_fail@plt+0x123c8>
   23734:	b	2383c <__assert_fail@plt+0x1251c>
   23738:	ldr	r1, [pc, #312]	; 23878 <__assert_fail@plt+0x12558>
   2373c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23740:	bl	11038 <strcmp@plt>
   23744:	mov	r3, r0
   23748:	cmp	r3, #0
   2374c:	bne	23834 <__assert_fail@plt+0x12514>
   23750:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23754:	cmp	r3, #0
   23758:	movne	r3, #1
   2375c:	moveq	r3, #0
   23760:	uxtb	r3, r3
   23764:	cmp	r3, #0
   23768:	beq	237d8 <__assert_fail@plt+0x124b8>
   2376c:	mov	r3, #0
   23770:	str	r3, [fp, #-16]
   23774:	b	237c8 <__assert_fail@plt+0x124a8>
   23778:	bl	111dc <__ctype_b_loc@plt>
   2377c:	mov	r3, r0
   23780:	ldr	r2, [r3]
   23784:	ldr	r3, [fp, #-16]
   23788:	lsl	r3, r3, #1
   2378c:	add	r3, r2, r3
   23790:	ldrh	r3, [r3]
   23794:	and	r3, r3, #4096	; 0x1000
   23798:	cmp	r3, #0
   2379c:	beq	237bc <__assert_fail@plt+0x1249c>
   237a0:	ldr	r3, [fp, #-16]
   237a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   237a8:	add	r3, r2, r3
   237ac:	ldrb	r3, [r3]
   237b0:	mov	r1, r3
   237b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   237b8:	bl	15b64 <__assert_fail@plt+0x4844>
   237bc:	ldr	r3, [fp, #-16]
   237c0:	add	r3, r3, #1
   237c4:	str	r3, [fp, #-16]
   237c8:	ldr	r3, [fp, #-16]
   237cc:	cmp	r3, #255	; 0xff
   237d0:	ble	23778 <__assert_fail@plt+0x12458>
   237d4:	b	2383c <__assert_fail@plt+0x1251c>
   237d8:	mov	r3, #0
   237dc:	str	r3, [fp, #-16]
   237e0:	b	23824 <__assert_fail@plt+0x12504>
   237e4:	bl	111dc <__ctype_b_loc@plt>
   237e8:	mov	r3, r0
   237ec:	ldr	r2, [r3]
   237f0:	ldr	r3, [fp, #-16]
   237f4:	lsl	r3, r3, #1
   237f8:	add	r3, r2, r3
   237fc:	ldrh	r3, [r3]
   23800:	and	r3, r3, #4096	; 0x1000
   23804:	cmp	r3, #0
   23808:	beq	23818 <__assert_fail@plt+0x124f8>
   2380c:	ldr	r1, [fp, #-16]
   23810:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23814:	bl	15b64 <__assert_fail@plt+0x4844>
   23818:	ldr	r3, [fp, #-16]
   2381c:	add	r3, r3, #1
   23820:	str	r3, [fp, #-16]
   23824:	ldr	r3, [fp, #-16]
   23828:	cmp	r3, #255	; 0xff
   2382c:	ble	237e4 <__assert_fail@plt+0x124c4>
   23830:	b	2383c <__assert_fail@plt+0x1251c>
   23834:	mov	r3, #4
   23838:	b	23840 <__assert_fail@plt+0x12520>
   2383c:	mov	r3, #0
   23840:	mov	r0, r3
   23844:	sub	sp, fp, #8
   23848:	pop	{r4, fp, pc}
   2384c:	andeq	r3, r3, r4, lsr r6
   23850:	andeq	r3, r3, ip, lsr r6
   23854:	andeq	r3, r3, r4, asr #12
   23858:	andeq	r3, r3, r0, lsr #12
   2385c:	andeq	r3, r3, ip, asr #12
   23860:	andeq	r3, r3, ip, lsr #12
   23864:	andeq	r3, r3, r4, asr r6
   23868:	andeq	r3, r3, ip, asr r6
   2386c:	andeq	r3, r3, r4, ror #12
   23870:	andeq	r3, r3, ip, ror #12
   23874:	andeq	r3, r3, r4, ror r6
   23878:	andeq	r3, r3, ip, ror r6
   2387c:	push	{fp, lr}
   23880:	add	fp, sp, #4
   23884:	sub	sp, sp, #56	; 0x38
   23888:	str	r0, [fp, #-40]	; 0xffffffd8
   2388c:	str	r1, [fp, #-44]	; 0xffffffd4
   23890:	str	r2, [fp, #-48]	; 0xffffffd0
   23894:	str	r3, [fp, #-52]	; 0xffffffcc
   23898:	mov	r3, #0
   2389c:	str	r3, [fp, #-28]	; 0xffffffe4
   238a0:	mov	r1, #1
   238a4:	mov	r0, #32
   238a8:	bl	30c58 <__assert_fail@plt+0x1f938>
   238ac:	mov	r3, r0
   238b0:	str	r3, [fp, #-8]
   238b4:	ldr	r3, [fp, #-8]
   238b8:	cmp	r3, #0
   238bc:	moveq	r3, #1
   238c0:	movne	r3, #0
   238c4:	uxtb	r3, r3
   238c8:	cmp	r3, #0
   238cc:	beq	238e4 <__assert_fail@plt+0x125c4>
   238d0:	ldr	r3, [fp, #8]
   238d4:	mov	r2, #12
   238d8:	str	r2, [r3]
   238dc:	mov	r3, #0
   238e0:	b	23b50 <__assert_fail@plt+0x12830>
   238e4:	mov	r1, #1
   238e8:	mov	r0, #40	; 0x28
   238ec:	bl	30c58 <__assert_fail@plt+0x1f938>
   238f0:	mov	r3, r0
   238f4:	str	r3, [fp, #-12]
   238f8:	ldr	r3, [fp, #-12]
   238fc:	cmp	r3, #0
   23900:	moveq	r3, #1
   23904:	movne	r3, #0
   23908:	uxtb	r3, r3
   2390c:	cmp	r3, #0
   23910:	beq	23930 <__assert_fail@plt+0x12610>
   23914:	ldr	r0, [fp, #-8]
   23918:	bl	31500 <__assert_fail@plt+0x201e0>
   2391c:	ldr	r3, [fp, #8]
   23920:	mov	r2, #12
   23924:	str	r2, [r3]
   23928:	mov	r3, #0
   2392c:	b	23b50 <__assert_fail@plt+0x12830>
   23930:	ldr	r2, [fp, #-12]
   23934:	ldrb	r3, [r2, #16]
   23938:	ldrb	r1, [fp, #4]
   2393c:	and	r1, r1, #1
   23940:	bic	r3, r3, #1
   23944:	orr	r3, r1, r3
   23948:	strb	r3, [r2, #16]
   2394c:	sub	r2, fp, #28
   23950:	mov	r3, #0
   23954:	str	r3, [sp, #4]
   23958:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2395c:	str	r3, [sp]
   23960:	mov	r3, r2
   23964:	ldr	r2, [fp, #-12]
   23968:	ldr	r1, [fp, #-8]
   2396c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   23970:	bl	22b2c <__assert_fail@plt+0x1180c>
   23974:	str	r0, [fp, #-16]
   23978:	ldr	r3, [fp, #-16]
   2397c:	cmp	r3, #0
   23980:	movne	r3, #1
   23984:	moveq	r3, #0
   23988:	uxtb	r3, r3
   2398c:	cmp	r3, #0
   23990:	beq	239d8 <__assert_fail@plt+0x126b8>
   23994:	ldr	r0, [fp, #-8]
   23998:	bl	31500 <__assert_fail@plt+0x201e0>
   2399c:	ldr	r0, [fp, #-12]
   239a0:	bl	23c78 <__assert_fail@plt+0x12958>
   239a4:	ldr	r3, [fp, #8]
   239a8:	ldr	r2, [fp, #-16]
   239ac:	str	r2, [r3]
   239b0:	mov	r3, #0
   239b4:	b	23b50 <__assert_fail@plt+0x12830>
   239b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   239bc:	ldrb	r3, [r3]
   239c0:	mov	r1, r3
   239c4:	ldr	r0, [fp, #-8]
   239c8:	bl	15b64 <__assert_fail@plt+0x4844>
   239cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   239d0:	add	r3, r3, #1
   239d4:	str	r3, [fp, #-52]	; 0xffffffcc
   239d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   239dc:	ldrb	r3, [r3]
   239e0:	cmp	r3, #0
   239e4:	bne	239b8 <__assert_fail@plt+0x12698>
   239e8:	ldrb	r3, [fp, #4]
   239ec:	cmp	r3, #0
   239f0:	beq	239fc <__assert_fail@plt+0x126dc>
   239f4:	ldr	r0, [fp, #-8]
   239f8:	bl	15d8c <__assert_fail@plt+0x4a6c>
   239fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23a00:	ldr	r3, [r3, #92]	; 0x5c
   23a04:	cmp	r3, #1
   23a08:	ble	23a20 <__assert_fail@plt+0x12700>
   23a0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23a10:	ldr	r3, [r3, #60]	; 0x3c
   23a14:	mov	r1, r3
   23a18:	ldr	r0, [fp, #-8]
   23a1c:	bl	15e84 <__assert_fail@plt+0x4b64>
   23a20:	sub	r3, fp, #36	; 0x24
   23a24:	mov	r2, #0
   23a28:	str	r2, [r3]
   23a2c:	str	r2, [r3, #4]
   23a30:	ldr	r3, [fp, #-8]
   23a34:	str	r3, [fp, #-36]	; 0xffffffdc
   23a38:	mov	r3, #3
   23a3c:	strb	r3, [fp, #-32]	; 0xffffffe0
   23a40:	sub	r3, fp, #36	; 0x24
   23a44:	mov	r2, #0
   23a48:	mov	r1, #0
   23a4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23a50:	bl	23d38 <__assert_fail@plt+0x12a18>
   23a54:	str	r0, [fp, #-20]	; 0xffffffec
   23a58:	ldr	r3, [fp, #-20]	; 0xffffffec
   23a5c:	cmp	r3, #0
   23a60:	moveq	r3, #1
   23a64:	movne	r3, #0
   23a68:	uxtb	r3, r3
   23a6c:	cmp	r3, #0
   23a70:	bne	23b24 <__assert_fail@plt+0x12804>
   23a74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23a78:	ldr	r3, [r3, #92]	; 0x5c
   23a7c:	cmp	r3, #1
   23a80:	ble	23b14 <__assert_fail@plt+0x127f4>
   23a84:	mov	r3, #6
   23a88:	strb	r3, [fp, #-32]	; 0xffffffe0
   23a8c:	ldr	r3, [fp, #-12]
   23a90:	str	r3, [fp, #-36]	; 0xffffffdc
   23a94:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23a98:	ldrb	r3, [r2, #88]	; 0x58
   23a9c:	orr	r3, r3, #2
   23aa0:	strb	r3, [r2, #88]	; 0x58
   23aa4:	sub	r3, fp, #36	; 0x24
   23aa8:	mov	r2, #0
   23aac:	mov	r1, #0
   23ab0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23ab4:	bl	23d38 <__assert_fail@plt+0x12a18>
   23ab8:	str	r0, [fp, #-24]	; 0xffffffe8
   23abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23ac0:	cmp	r3, #0
   23ac4:	moveq	r3, #1
   23ac8:	movne	r3, #0
   23acc:	uxtb	r3, r3
   23ad0:	cmp	r3, #0
   23ad4:	bne	23b2c <__assert_fail@plt+0x1280c>
   23ad8:	mov	r3, #10
   23adc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23ae0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23ae4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23ae8:	bl	23cdc <__assert_fail@plt+0x129bc>
   23aec:	str	r0, [fp, #-20]	; 0xffffffec
   23af0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23af4:	cmp	r3, #0
   23af8:	movne	r3, #1
   23afc:	moveq	r3, #0
   23b00:	uxtb	r3, r3
   23b04:	cmp	r3, #0
   23b08:	beq	23b30 <__assert_fail@plt+0x12810>
   23b0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23b10:	b	23b50 <__assert_fail@plt+0x12830>
   23b14:	ldr	r0, [fp, #-12]
   23b18:	bl	23c78 <__assert_fail@plt+0x12958>
   23b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23b20:	b	23b50 <__assert_fail@plt+0x12830>
   23b24:	nop			; (mov r0, r0)
   23b28:	b	23b30 <__assert_fail@plt+0x12810>
   23b2c:	nop			; (mov r0, r0)
   23b30:	ldr	r0, [fp, #-8]
   23b34:	bl	31500 <__assert_fail@plt+0x201e0>
   23b38:	ldr	r0, [fp, #-12]
   23b3c:	bl	23c78 <__assert_fail@plt+0x12958>
   23b40:	ldr	r3, [fp, #8]
   23b44:	mov	r2, #12
   23b48:	str	r2, [r3]
   23b4c:	mov	r3, #0
   23b50:	mov	r0, r3
   23b54:	sub	sp, fp, #4
   23b58:	pop	{fp, pc}
   23b5c:	push	{fp, lr}
   23b60:	add	fp, sp, #4
   23b64:	sub	sp, sp, #24
   23b68:	str	r0, [fp, #-16]
   23b6c:	str	r1, [fp, #-20]	; 0xffffffec
   23b70:	str	r2, [fp, #-24]	; 0xffffffe8
   23b74:	mvn	r3, #0
   23b78:	str	r3, [fp, #-8]
   23b7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23b80:	ldr	r1, [fp, #-16]
   23b84:	ldr	r0, [fp, #-20]	; 0xffffffec
   23b88:	bl	1f0f0 <__assert_fail@plt+0xddd0>
   23b8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23b90:	ldrb	r3, [r3]
   23b94:	strb	r3, [fp, #-9]
   23b98:	ldr	r3, [fp, #-20]	; 0xffffffec
   23b9c:	ldrb	r3, [r3, #4]
   23ba0:	cmp	r3, #2
   23ba4:	moveq	r3, #1
   23ba8:	movne	r3, #0
   23bac:	uxtb	r3, r3
   23bb0:	cmp	r3, #0
   23bb4:	beq	23bc0 <__assert_fail@plt+0x128a0>
   23bb8:	mvn	r3, #1
   23bbc:	b	23c6c <__assert_fail@plt+0x1294c>
   23bc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   23bc4:	ldrb	r3, [r3, #4]
   23bc8:	cmp	r3, #24
   23bcc:	beq	23c68 <__assert_fail@plt+0x12948>
   23bd0:	ldrb	r3, [fp, #-9]
   23bd4:	cmp	r3, #44	; 0x2c
   23bd8:	beq	23c68 <__assert_fail@plt+0x12948>
   23bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   23be0:	ldrb	r3, [r3, #4]
   23be4:	cmp	r3, #1
   23be8:	bne	23c5c <__assert_fail@plt+0x1293c>
   23bec:	ldrb	r3, [fp, #-9]
   23bf0:	cmp	r3, #47	; 0x2f
   23bf4:	bls	23c5c <__assert_fail@plt+0x1293c>
   23bf8:	ldrb	r3, [fp, #-9]
   23bfc:	cmp	r3, #57	; 0x39
   23c00:	bhi	23c5c <__assert_fail@plt+0x1293c>
   23c04:	ldr	r3, [fp, #-8]
   23c08:	cmn	r3, #2
   23c0c:	beq	23c5c <__assert_fail@plt+0x1293c>
   23c10:	ldr	r3, [fp, #-8]
   23c14:	cmn	r3, #1
   23c18:	bne	23c28 <__assert_fail@plt+0x12908>
   23c1c:	ldrb	r3, [fp, #-9]
   23c20:	sub	r3, r3, #48	; 0x30
   23c24:	b	23c60 <__assert_fail@plt+0x12940>
   23c28:	ldr	r2, [fp, #-8]
   23c2c:	mov	r3, r2
   23c30:	lsl	r3, r3, #2
   23c34:	add	r3, r3, r2
   23c38:	lsl	r3, r3, #1
   23c3c:	mov	r2, r3
   23c40:	ldrb	r3, [fp, #-9]
   23c44:	add	r3, r2, r3
   23c48:	sub	r3, r3, #48	; 0x30
   23c4c:	cmp	r3, #32768	; 0x8000
   23c50:	movlt	r3, r3
   23c54:	movge	r3, #32768	; 0x8000
   23c58:	b	23c60 <__assert_fail@plt+0x12940>
   23c5c:	mvn	r3, #1
   23c60:	str	r3, [fp, #-8]
   23c64:	b	23b7c <__assert_fail@plt+0x1285c>
   23c68:	ldr	r3, [fp, #-8]
   23c6c:	mov	r0, r3
   23c70:	sub	sp, fp, #4
   23c74:	pop	{fp, pc}
   23c78:	push	{fp, lr}
   23c7c:	add	fp, sp, #4
   23c80:	sub	sp, sp, #8
   23c84:	str	r0, [fp, #-8]
   23c88:	ldr	r3, [fp, #-8]
   23c8c:	ldr	r3, [r3]
   23c90:	mov	r0, r3
   23c94:	bl	31500 <__assert_fail@plt+0x201e0>
   23c98:	ldr	r3, [fp, #-8]
   23c9c:	ldr	r3, [r3, #4]
   23ca0:	mov	r0, r3
   23ca4:	bl	31500 <__assert_fail@plt+0x201e0>
   23ca8:	ldr	r3, [fp, #-8]
   23cac:	ldr	r3, [r3, #8]
   23cb0:	mov	r0, r3
   23cb4:	bl	31500 <__assert_fail@plt+0x201e0>
   23cb8:	ldr	r3, [fp, #-8]
   23cbc:	ldr	r3, [r3, #12]
   23cc0:	mov	r0, r3
   23cc4:	bl	31500 <__assert_fail@plt+0x201e0>
   23cc8:	ldr	r0, [fp, #-8]
   23ccc:	bl	31500 <__assert_fail@plt+0x201e0>
   23cd0:	nop			; (mov r0, r0)
   23cd4:	sub	sp, fp, #4
   23cd8:	pop	{fp, pc}
   23cdc:	push	{fp, lr}
   23ce0:	add	fp, sp, #4
   23ce4:	sub	sp, sp, #24
   23ce8:	str	r0, [fp, #-16]
   23cec:	str	r1, [fp, #-20]	; 0xffffffec
   23cf0:	str	r2, [fp, #-24]	; 0xffffffe8
   23cf4:	str	r3, [fp, #-28]	; 0xffffffe4
   23cf8:	sub	r3, fp, #12
   23cfc:	mov	r2, #0
   23d00:	str	r2, [r3]
   23d04:	str	r2, [r3, #4]
   23d08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23d0c:	uxtb	r3, r3
   23d10:	strb	r3, [fp, #-8]
   23d14:	sub	r3, fp, #12
   23d18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23d1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23d20:	ldr	r0, [fp, #-16]
   23d24:	bl	23d38 <__assert_fail@plt+0x12a18>
   23d28:	mov	r3, r0
   23d2c:	mov	r0, r3
   23d30:	sub	sp, fp, #4
   23d34:	pop	{fp, pc}
   23d38:	push	{fp, lr}
   23d3c:	add	fp, sp, #4
   23d40:	sub	sp, sp, #24
   23d44:	str	r0, [fp, #-16]
   23d48:	str	r1, [fp, #-20]	; 0xffffffec
   23d4c:	str	r2, [fp, #-24]	; 0xffffffe8
   23d50:	str	r3, [fp, #-28]	; 0xffffffe4
   23d54:	ldr	r3, [fp, #-16]
   23d58:	ldr	r3, [r3, #64]	; 0x40
   23d5c:	cmp	r3, #31
   23d60:	moveq	r3, #1
   23d64:	movne	r3, #0
   23d68:	uxtb	r3, r3
   23d6c:	cmp	r3, #0
   23d70:	beq	23dc0 <__assert_fail@plt+0x12aa0>
   23d74:	mov	r0, #996	; 0x3e4
   23d78:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   23d7c:	mov	r3, r0
   23d80:	str	r3, [fp, #-8]
   23d84:	ldr	r3, [fp, #-8]
   23d88:	cmp	r3, #0
   23d8c:	bne	23d98 <__assert_fail@plt+0x12a78>
   23d90:	mov	r3, #0
   23d94:	b	23e9c <__assert_fail@plt+0x12b7c>
   23d98:	ldr	r3, [fp, #-16]
   23d9c:	ldr	r2, [r3, #56]	; 0x38
   23da0:	ldr	r3, [fp, #-8]
   23da4:	str	r2, [r3]
   23da8:	ldr	r3, [fp, #-16]
   23dac:	ldr	r2, [fp, #-8]
   23db0:	str	r2, [r3, #56]	; 0x38
   23db4:	ldr	r3, [fp, #-16]
   23db8:	mov	r2, #0
   23dbc:	str	r2, [r3, #64]	; 0x40
   23dc0:	ldr	r3, [fp, #-16]
   23dc4:	ldr	r2, [r3, #56]	; 0x38
   23dc8:	ldr	r3, [fp, #-16]
   23dcc:	ldr	r3, [r3, #64]	; 0x40
   23dd0:	add	r0, r3, #1
   23dd4:	ldr	r1, [fp, #-16]
   23dd8:	str	r0, [r1, #64]	; 0x40
   23ddc:	lsl	r3, r3, #5
   23de0:	add	r3, r2, r3
   23de4:	add	r3, r3, #4
   23de8:	str	r3, [fp, #-12]
   23dec:	ldr	r3, [fp, #-12]
   23df0:	mov	r2, #0
   23df4:	str	r2, [r3]
   23df8:	ldr	r3, [fp, #-12]
   23dfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   23e00:	str	r2, [r3, #4]
   23e04:	ldr	r3, [fp, #-12]
   23e08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23e0c:	str	r2, [r3, #8]
   23e10:	ldr	r3, [fp, #-12]
   23e14:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23e18:	add	r3, r3, #20
   23e1c:	ldm	r2, {r0, r1}
   23e20:	stm	r3, {r0, r1}
   23e24:	ldr	r2, [fp, #-12]
   23e28:	ldrb	r3, [r2, #26]
   23e2c:	bic	r3, r3, #4
   23e30:	strb	r3, [r2, #26]
   23e34:	ldr	r2, [fp, #-12]
   23e38:	ldrb	r3, [r2, #26]
   23e3c:	bic	r3, r3, #8
   23e40:	strb	r3, [r2, #26]
   23e44:	ldr	r3, [fp, #-12]
   23e48:	mov	r2, #0
   23e4c:	str	r2, [r3, #12]
   23e50:	ldr	r3, [fp, #-12]
   23e54:	mov	r2, #0
   23e58:	str	r2, [r3, #16]
   23e5c:	ldr	r3, [fp, #-12]
   23e60:	mvn	r2, #0
   23e64:	str	r2, [r3, #28]
   23e68:	ldr	r3, [fp, #-20]	; 0xffffffec
   23e6c:	cmp	r3, #0
   23e70:	beq	23e80 <__assert_fail@plt+0x12b60>
   23e74:	ldr	r3, [fp, #-20]	; 0xffffffec
   23e78:	ldr	r2, [fp, #-12]
   23e7c:	str	r2, [r3]
   23e80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23e84:	cmp	r3, #0
   23e88:	beq	23e98 <__assert_fail@plt+0x12b78>
   23e8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23e90:	ldr	r2, [fp, #-12]
   23e94:	str	r2, [r3]
   23e98:	ldr	r3, [fp, #-12]
   23e9c:	mov	r0, r3
   23ea0:	sub	sp, fp, #4
   23ea4:	pop	{fp, pc}
   23ea8:	push	{fp}		; (str fp, [sp, #-4]!)
   23eac:	add	fp, sp, #0
   23eb0:	sub	sp, sp, #20
   23eb4:	str	r0, [fp, #-16]
   23eb8:	str	r1, [fp, #-20]	; 0xffffffec
   23ebc:	ldr	r3, [fp, #-16]
   23ec0:	str	r3, [fp, #-8]
   23ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   23ec8:	ldrb	r3, [r3, #24]
   23ecc:	cmp	r3, #17
   23ed0:	bne	23ef8 <__assert_fail@plt+0x12bd8>
   23ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
   23ed8:	ldr	r2, [r3, #20]
   23edc:	ldr	r3, [fp, #-8]
   23ee0:	cmp	r2, r3
   23ee4:	bne	23ef8 <__assert_fail@plt+0x12bd8>
   23ee8:	ldr	r2, [fp, #-20]	; 0xffffffec
   23eec:	ldrb	r3, [r2, #26]
   23ef0:	orr	r3, r3, #8
   23ef4:	strb	r3, [r2, #26]
   23ef8:	mov	r3, #0
   23efc:	mov	r0, r3
   23f00:	add	sp, fp, #0
   23f04:	pop	{fp}		; (ldr fp, [sp], #4)
   23f08:	bx	lr
   23f0c:	push	{fp, lr}
   23f10:	add	fp, sp, #4
   23f14:	sub	sp, sp, #8
   23f18:	str	r0, [fp, #-8]
   23f1c:	ldr	r3, [fp, #-8]
   23f20:	ldrb	r3, [r3, #4]
   23f24:	cmp	r3, #6
   23f28:	bne	23f58 <__assert_fail@plt+0x12c38>
   23f2c:	ldr	r3, [fp, #-8]
   23f30:	ldrb	r3, [r3, #6]
   23f34:	and	r3, r3, #4
   23f38:	uxtb	r3, r3
   23f3c:	cmp	r3, #0
   23f40:	bne	23f58 <__assert_fail@plt+0x12c38>
   23f44:	ldr	r3, [fp, #-8]
   23f48:	ldr	r3, [r3]
   23f4c:	mov	r0, r3
   23f50:	bl	23c78 <__assert_fail@plt+0x12958>
   23f54:	b	23f90 <__assert_fail@plt+0x12c70>
   23f58:	ldr	r3, [fp, #-8]
   23f5c:	ldrb	r3, [r3, #4]
   23f60:	cmp	r3, #3
   23f64:	bne	23f90 <__assert_fail@plt+0x12c70>
   23f68:	ldr	r3, [fp, #-8]
   23f6c:	ldrb	r3, [r3, #6]
   23f70:	and	r3, r3, #4
   23f74:	uxtb	r3, r3
   23f78:	cmp	r3, #0
   23f7c:	bne	23f90 <__assert_fail@plt+0x12c70>
   23f80:	ldr	r3, [fp, #-8]
   23f84:	ldr	r3, [r3]
   23f88:	mov	r0, r3
   23f8c:	bl	31500 <__assert_fail@plt+0x201e0>
   23f90:	nop			; (mov r0, r0)
   23f94:	sub	sp, fp, #4
   23f98:	pop	{fp, pc}
   23f9c:	push	{fp, lr}
   23fa0:	add	fp, sp, #4
   23fa4:	sub	sp, sp, #8
   23fa8:	str	r0, [fp, #-8]
   23fac:	str	r1, [fp, #-12]
   23fb0:	ldr	r3, [fp, #-12]
   23fb4:	add	r3, r3, #20
   23fb8:	mov	r0, r3
   23fbc:	bl	23f0c <__assert_fail@plt+0x12bec>
   23fc0:	mov	r3, #0
   23fc4:	mov	r0, r3
   23fc8:	sub	sp, fp, #4
   23fcc:	pop	{fp, pc}
   23fd0:	push	{fp, lr}
   23fd4:	add	fp, sp, #4
   23fd8:	sub	sp, sp, #32
   23fdc:	str	r0, [fp, #-32]	; 0xffffffe0
   23fe0:	str	r1, [fp, #-36]	; 0xffffffdc
   23fe4:	sub	r3, fp, #24
   23fe8:	str	r3, [fp, #-12]
   23fec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23ff0:	ldr	r3, [r3]
   23ff4:	str	r3, [fp, #-16]
   23ff8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23ffc:	str	r3, [fp, #-8]
   24000:	ldr	r3, [fp, #-8]
   24004:	add	r3, r3, #20
   24008:	mov	r2, #0
   2400c:	mov	r1, #0
   24010:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24014:	bl	23d38 <__assert_fail@plt+0x12a18>
   24018:	mov	r2, r0
   2401c:	ldr	r3, [fp, #-12]
   24020:	str	r2, [r3]
   24024:	ldr	r3, [fp, #-12]
   24028:	ldr	r3, [r3]
   2402c:	cmp	r3, #0
   24030:	bne	2403c <__assert_fail@plt+0x12d1c>
   24034:	mov	r3, #0
   24038:	b	24118 <__assert_fail@plt+0x12df8>
   2403c:	ldr	r3, [fp, #-12]
   24040:	ldr	r3, [r3]
   24044:	ldr	r2, [fp, #-16]
   24048:	str	r2, [r3]
   2404c:	ldr	r3, [fp, #-12]
   24050:	ldr	r2, [r3]
   24054:	ldrb	r3, [r2, #26]
   24058:	orr	r3, r3, #4
   2405c:	strb	r3, [r2, #26]
   24060:	ldr	r3, [fp, #-12]
   24064:	ldr	r3, [r3]
   24068:	str	r3, [fp, #-16]
   2406c:	ldr	r3, [fp, #-8]
   24070:	ldr	r3, [r3, #4]
   24074:	cmp	r3, #0
   24078:	beq	24098 <__assert_fail@plt+0x12d78>
   2407c:	ldr	r3, [fp, #-8]
   24080:	ldr	r3, [r3, #4]
   24084:	str	r3, [fp, #-8]
   24088:	ldr	r3, [fp, #-16]
   2408c:	add	r3, r3, #4
   24090:	str	r3, [fp, #-12]
   24094:	b	24000 <__assert_fail@plt+0x12ce0>
   24098:	mov	r3, #0
   2409c:	str	r3, [fp, #-20]	; 0xffffffec
   240a0:	b	240d8 <__assert_fail@plt+0x12db8>
   240a4:	ldr	r3, [fp, #-8]
   240a8:	str	r3, [fp, #-20]	; 0xffffffec
   240ac:	ldr	r3, [fp, #-8]
   240b0:	ldr	r3, [r3]
   240b4:	str	r3, [fp, #-8]
   240b8:	ldr	r3, [fp, #-16]
   240bc:	ldr	r3, [r3]
   240c0:	str	r3, [fp, #-16]
   240c4:	ldr	r3, [fp, #-8]
   240c8:	cmp	r3, #0
   240cc:	bne	240d8 <__assert_fail@plt+0x12db8>
   240d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   240d4:	b	24118 <__assert_fail@plt+0x12df8>
   240d8:	ldr	r3, [fp, #-8]
   240dc:	ldr	r2, [r3, #8]
   240e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   240e4:	cmp	r2, r3
   240e8:	beq	240a4 <__assert_fail@plt+0x12d84>
   240ec:	ldr	r3, [fp, #-8]
   240f0:	ldr	r3, [r3, #8]
   240f4:	cmp	r3, #0
   240f8:	beq	240a4 <__assert_fail@plt+0x12d84>
   240fc:	ldr	r3, [fp, #-8]
   24100:	ldr	r3, [r3, #8]
   24104:	str	r3, [fp, #-8]
   24108:	ldr	r3, [fp, #-16]
   2410c:	add	r3, r3, #8
   24110:	str	r3, [fp, #-12]
   24114:	b	24000 <__assert_fail@plt+0x12ce0>
   24118:	mov	r0, r3
   2411c:	sub	sp, fp, #4
   24120:	pop	{fp, pc}
   24124:	push	{fp, lr}
   24128:	add	fp, sp, #4
   2412c:	sub	sp, sp, #56	; 0x38
   24130:	str	r0, [fp, #-24]	; 0xffffffe8
   24134:	str	r1, [fp, #-28]	; 0xffffffe4
   24138:	str	r2, [fp, #-32]	; 0xffffffe0
   2413c:	str	r3, [fp, #-36]	; 0xffffffdc
   24140:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24144:	ldr	r3, [r3]
   24148:	str	r3, [fp, #-20]	; 0xffffffec
   2414c:	ldr	r3, [fp, #4]
   24150:	bic	r3, r3, #7
   24154:	cmp	r3, #0
   24158:	beq	24164 <__assert_fail@plt+0x12e44>
   2415c:	mov	r3, #2
   24160:	b	242a8 <__assert_fail@plt+0x12f88>
   24164:	ldr	r3, [fp, #4]
   24168:	and	r3, r3, #4
   2416c:	cmp	r3, #0
   24170:	beq	24190 <__assert_fail@plt+0x12e70>
   24174:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24178:	ldr	r3, [r3]
   2417c:	str	r3, [fp, #-12]
   24180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24184:	ldr	r3, [r3, #4]
   24188:	str	r3, [fp, #-16]
   2418c:	b	241a8 <__assert_fail@plt+0x12e88>
   24190:	mov	r3, #0
   24194:	str	r3, [fp, #-12]
   24198:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2419c:	bl	11200 <strlen@plt>
   241a0:	mov	r3, r0
   241a4:	str	r3, [fp, #-16]
   241a8:	ldr	r3, [pc, #260]	; 242b4 <__assert_fail@plt+0x12f94>
   241ac:	cmp	r3, #0
   241b0:	bne	241c0 <__assert_fail@plt+0x12ea0>
   241b4:	ldr	r3, [pc, #252]	; 242b8 <__assert_fail@plt+0x12f98>
   241b8:	cmp	r3, #0
   241bc:	beq	241d0 <__assert_fail@plt+0x12eb0>
   241c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   241c4:	add	r3, r3, #136	; 0x88
   241c8:	mov	r0, r3
   241cc:	bl	1108c <pthread_mutex_lock@plt>
   241d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   241d4:	ldrb	r3, [r3, #28]
   241d8:	and	r3, r3, #16
   241dc:	uxtb	r3, r3
   241e0:	cmp	r3, #0
   241e4:	beq	2422c <__assert_fail@plt+0x12f0c>
   241e8:	ldr	r3, [fp, #4]
   241ec:	str	r3, [sp, #16]
   241f0:	mov	r3, #0
   241f4:	str	r3, [sp, #12]
   241f8:	mov	r3, #0
   241fc:	str	r3, [sp, #8]
   24200:	ldr	r3, [fp, #-16]
   24204:	str	r3, [sp, #4]
   24208:	ldr	r3, [fp, #-16]
   2420c:	str	r3, [sp]
   24210:	ldr	r3, [fp, #-12]
   24214:	ldr	r2, [fp, #-16]
   24218:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2421c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24220:	bl	24efc <__assert_fail@plt+0x13bdc>
   24224:	str	r0, [fp, #-8]
   24228:	b	2426c <__assert_fail@plt+0x12f4c>
   2422c:	ldr	r3, [fp, #4]
   24230:	str	r3, [sp, #16]
   24234:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24238:	str	r3, [sp, #12]
   2423c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24240:	str	r3, [sp, #8]
   24244:	ldr	r3, [fp, #-16]
   24248:	str	r3, [sp, #4]
   2424c:	ldr	r3, [fp, #-16]
   24250:	str	r3, [sp]
   24254:	ldr	r3, [fp, #-12]
   24258:	ldr	r2, [fp, #-16]
   2425c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24264:	bl	24efc <__assert_fail@plt+0x13bdc>
   24268:	str	r0, [fp, #-8]
   2426c:	ldr	r3, [pc, #64]	; 242b4 <__assert_fail@plt+0x12f94>
   24270:	cmp	r3, #0
   24274:	bne	24284 <__assert_fail@plt+0x12f64>
   24278:	ldr	r3, [pc, #56]	; 242b8 <__assert_fail@plt+0x12f98>
   2427c:	cmp	r3, #0
   24280:	beq	24294 <__assert_fail@plt+0x12f74>
   24284:	ldr	r3, [fp, #-20]	; 0xffffffec
   24288:	add	r3, r3, #136	; 0x88
   2428c:	mov	r0, r3
   24290:	bl	10fe4 <pthread_mutex_unlock@plt>
   24294:	ldr	r3, [fp, #-8]
   24298:	cmp	r3, #0
   2429c:	movne	r3, #1
   242a0:	moveq	r3, #0
   242a4:	uxtb	r3, r3
   242a8:	mov	r0, r3
   242ac:	sub	sp, fp, #4
   242b0:	pop	{fp, pc}
	...
   242bc:	push	{fp, lr}
   242c0:	add	fp, sp, #4
   242c4:	sub	sp, sp, #32
   242c8:	str	r0, [fp, #-8]
   242cc:	str	r1, [fp, #-12]
   242d0:	str	r2, [fp, #-16]
   242d4:	str	r3, [fp, #-20]	; 0xffffffec
   242d8:	mov	r3, #1
   242dc:	str	r3, [sp, #12]
   242e0:	ldr	r3, [fp, #4]
   242e4:	str	r3, [sp, #8]
   242e8:	ldr	r3, [fp, #-16]
   242ec:	str	r3, [sp, #4]
   242f0:	mov	r3, #0
   242f4:	str	r3, [sp]
   242f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   242fc:	ldr	r2, [fp, #-16]
   24300:	ldr	r1, [fp, #-12]
   24304:	ldr	r0, [fp, #-8]
   24308:	bl	24690 <__assert_fail@plt+0x13370>
   2430c:	mov	r3, r0
   24310:	mov	r0, r3
   24314:	sub	sp, fp, #4
   24318:	pop	{fp, pc}
   2431c:	push	{fp, lr}
   24320:	add	fp, sp, #4
   24324:	sub	sp, sp, #32
   24328:	str	r0, [fp, #-8]
   2432c:	str	r1, [fp, #-12]
   24330:	str	r2, [fp, #-16]
   24334:	str	r3, [fp, #-20]	; 0xffffffec
   24338:	mov	r3, #0
   2433c:	str	r3, [sp, #12]
   24340:	ldr	r3, [fp, #8]
   24344:	str	r3, [sp, #8]
   24348:	ldr	r3, [fp, #-16]
   2434c:	str	r3, [sp, #4]
   24350:	ldr	r3, [fp, #4]
   24354:	str	r3, [sp]
   24358:	ldr	r3, [fp, #-20]	; 0xffffffec
   2435c:	ldr	r2, [fp, #-16]
   24360:	ldr	r1, [fp, #-12]
   24364:	ldr	r0, [fp, #-8]
   24368:	bl	24690 <__assert_fail@plt+0x13370>
   2436c:	mov	r3, r0
   24370:	mov	r0, r3
   24374:	sub	sp, fp, #4
   24378:	pop	{fp, pc}
   2437c:	push	{fp, lr}
   24380:	add	fp, sp, #4
   24384:	sub	sp, sp, #40	; 0x28
   24388:	str	r0, [fp, #-8]
   2438c:	str	r1, [fp, #-12]
   24390:	str	r2, [fp, #-16]
   24394:	str	r3, [fp, #-20]	; 0xffffffec
   24398:	mov	r3, #1
   2439c:	str	r3, [sp, #20]
   243a0:	ldr	r3, [fp, #16]
   243a4:	str	r3, [sp, #16]
   243a8:	ldr	r3, [fp, #12]
   243ac:	str	r3, [sp, #12]
   243b0:	mov	r3, #0
   243b4:	str	r3, [sp, #8]
   243b8:	ldr	r3, [fp, #8]
   243bc:	str	r3, [sp, #4]
   243c0:	ldr	r3, [fp, #4]
   243c4:	str	r3, [sp]
   243c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   243cc:	ldr	r2, [fp, #-16]
   243d0:	ldr	r1, [fp, #-12]
   243d4:	ldr	r0, [fp, #-8]
   243d8:	bl	2445c <__assert_fail@plt+0x1313c>
   243dc:	mov	r3, r0
   243e0:	mov	r0, r3
   243e4:	sub	sp, fp, #4
   243e8:	pop	{fp, pc}
   243ec:	push	{fp, lr}
   243f0:	add	fp, sp, #4
   243f4:	sub	sp, sp, #40	; 0x28
   243f8:	str	r0, [fp, #-8]
   243fc:	str	r1, [fp, #-12]
   24400:	str	r2, [fp, #-16]
   24404:	str	r3, [fp, #-20]	; 0xffffffec
   24408:	mov	r3, #0
   2440c:	str	r3, [sp, #20]
   24410:	ldr	r3, [fp, #20]
   24414:	str	r3, [sp, #16]
   24418:	ldr	r3, [fp, #16]
   2441c:	str	r3, [sp, #12]
   24420:	ldr	r3, [fp, #12]
   24424:	str	r3, [sp, #8]
   24428:	ldr	r3, [fp, #8]
   2442c:	str	r3, [sp, #4]
   24430:	ldr	r3, [fp, #4]
   24434:	str	r3, [sp]
   24438:	ldr	r3, [fp, #-20]	; 0xffffffec
   2443c:	ldr	r2, [fp, #-16]
   24440:	ldr	r1, [fp, #-12]
   24444:	ldr	r0, [fp, #-8]
   24448:	bl	2445c <__assert_fail@plt+0x1313c>
   2444c:	mov	r3, r0
   24450:	mov	r0, r3
   24454:	sub	sp, fp, #4
   24458:	pop	{fp, pc}
   2445c:	push	{fp, lr}
   24460:	add	fp, sp, #4
   24464:	sub	sp, sp, #48	; 0x30
   24468:	str	r0, [fp, #-24]	; 0xffffffe8
   2446c:	str	r1, [fp, #-28]	; 0xffffffe4
   24470:	str	r2, [fp, #-32]	; 0xffffffe0
   24474:	str	r3, [fp, #-36]	; 0xffffffdc
   24478:	mov	r3, #0
   2447c:	str	r3, [fp, #-12]
   24480:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24484:	lsr	r3, r3, #31
   24488:	uxtb	r3, r3
   2448c:	cmp	r3, #0
   24490:	bne	244a8 <__assert_fail@plt+0x13188>
   24494:	ldr	r3, [fp, #4]
   24498:	lsr	r3, r3, #31
   2449c:	uxtb	r3, r3
   244a0:	cmp	r3, #0
   244a4:	beq	244b0 <__assert_fail@plt+0x13190>
   244a8:	mov	r3, #1
   244ac:	b	244b4 <__assert_fail@plt+0x13194>
   244b0:	mov	r3, #0
   244b4:	cmp	r3, #0
   244b8:	bne	244d0 <__assert_fail@plt+0x131b0>
   244bc:	ldr	r3, [fp, #20]
   244c0:	lsr	r3, r3, #31
   244c4:	uxtb	r3, r3
   244c8:	cmp	r3, #0
   244cc:	beq	244d8 <__assert_fail@plt+0x131b8>
   244d0:	mov	r3, #1
   244d4:	b	244dc <__assert_fail@plt+0x131bc>
   244d8:	mov	r3, #0
   244dc:	cmp	r3, #0
   244e0:	bne	24598 <__assert_fail@plt+0x13278>
   244e4:	ldr	r3, [fp, #4]
   244e8:	cmp	r3, #0
   244ec:	bge	24510 <__assert_fail@plt+0x131f0>
   244f0:	ldr	r3, [fp, #4]
   244f4:	rsb	r2, r3, #-2147483648	; 0x80000000
   244f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   244fc:	cmp	r2, r3
   24500:	movgt	r3, #1
   24504:	movle	r3, #0
   24508:	uxtb	r3, r3
   2450c:	b	2455c <__assert_fail@plt+0x1323c>
   24510:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24514:	cmp	r3, #0
   24518:	bge	2453c <__assert_fail@plt+0x1321c>
   2451c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24520:	rsb	r2, r3, #-2147483648	; 0x80000000
   24524:	ldr	r3, [fp, #4]
   24528:	cmp	r2, r3
   2452c:	movgt	r3, #1
   24530:	movle	r3, #0
   24534:	uxtb	r3, r3
   24538:	b	2455c <__assert_fail@plt+0x1323c>
   2453c:	ldr	r2, [fp, #4]
   24540:	mvn	r3, #-2147483648	; 0x80000000
   24544:	sub	r3, r3, r2
   24548:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2454c:	cmp	r3, r2
   24550:	movlt	r3, #1
   24554:	movge	r3, #0
   24558:	uxtb	r3, r3
   2455c:	cmp	r3, #0
   24560:	beq	2457c <__assert_fail@plt+0x1325c>
   24564:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24568:	ldr	r3, [fp, #4]
   2456c:	add	r3, r2, r3
   24570:	str	r3, [fp, #-20]	; 0xffffffec
   24574:	mov	r3, #1
   24578:	b	24590 <__assert_fail@plt+0x13270>
   2457c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24580:	ldr	r3, [fp, #4]
   24584:	add	r3, r2, r3
   24588:	str	r3, [fp, #-20]	; 0xffffffec
   2458c:	mov	r3, #0
   24590:	cmp	r3, #0
   24594:	beq	245a0 <__assert_fail@plt+0x13280>
   24598:	mvn	r3, #1
   2459c:	b	24684 <__assert_fail@plt+0x13364>
   245a0:	ldr	r3, [fp, #4]
   245a4:	cmp	r3, #0
   245a8:	ble	24638 <__assert_fail@plt+0x13318>
   245ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   245b0:	cmp	r3, #0
   245b4:	ble	2462c <__assert_fail@plt+0x1330c>
   245b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   245bc:	mov	r0, r3
   245c0:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   245c4:	mov	r3, r0
   245c8:	str	r3, [fp, #-12]
   245cc:	ldr	r3, [fp, #-12]
   245d0:	cmp	r3, #0
   245d4:	moveq	r3, #1
   245d8:	movne	r3, #0
   245dc:	uxtb	r3, r3
   245e0:	cmp	r3, #0
   245e4:	beq	245f0 <__assert_fail@plt+0x132d0>
   245e8:	mvn	r3, #1
   245ec:	b	24684 <__assert_fail@plt+0x13364>
   245f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   245f4:	mov	r2, r3
   245f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   245fc:	ldr	r0, [fp, #-12]
   24600:	bl	110a4 <memcpy@plt>
   24604:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24608:	ldr	r2, [fp, #-12]
   2460c:	add	r3, r2, r3
   24610:	ldr	r2, [fp, #4]
   24614:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24618:	mov	r0, r3
   2461c:	bl	110a4 <memcpy@plt>
   24620:	ldr	r3, [fp, #-12]
   24624:	str	r3, [fp, #-8]
   24628:	b	24640 <__assert_fail@plt+0x13320>
   2462c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24630:	str	r3, [fp, #-8]
   24634:	b	24640 <__assert_fail@plt+0x13320>
   24638:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2463c:	str	r3, [fp, #-8]
   24640:	ldr	r2, [fp, #-20]	; 0xffffffec
   24644:	ldrb	r3, [fp, #24]
   24648:	str	r3, [sp, #12]
   2464c:	ldr	r3, [fp, #16]
   24650:	str	r3, [sp, #8]
   24654:	ldr	r3, [fp, #20]
   24658:	str	r3, [sp, #4]
   2465c:	ldr	r3, [fp, #12]
   24660:	str	r3, [sp]
   24664:	ldr	r3, [fp, #8]
   24668:	ldr	r1, [fp, #-8]
   2466c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24670:	bl	24690 <__assert_fail@plt+0x13370>
   24674:	str	r0, [fp, #-16]
   24678:	ldr	r0, [fp, #-12]
   2467c:	bl	31500 <__assert_fail@plt+0x201e0>
   24680:	ldr	r3, [fp, #-16]
   24684:	mov	r0, r3
   24688:	sub	sp, fp, #4
   2468c:	pop	{fp, pc}
   24690:	push	{fp, lr}
   24694:	add	fp, sp, #4
   24698:	sub	sp, sp, #72	; 0x48
   2469c:	str	r0, [fp, #-40]	; 0xffffffd8
   246a0:	str	r1, [fp, #-44]	; 0xffffffd4
   246a4:	str	r2, [fp, #-48]	; 0xffffffd0
   246a8:	str	r3, [fp, #-52]	; 0xffffffcc
   246ac:	mov	r3, #0
   246b0:	str	r3, [fp, #-20]	; 0xffffffec
   246b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   246b8:	ldr	r3, [r3]
   246bc:	str	r3, [fp, #-24]	; 0xffffffe8
   246c0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   246c4:	ldr	r3, [fp, #4]
   246c8:	add	r3, r2, r3
   246cc:	str	r3, [fp, #-16]
   246d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   246d4:	lsr	r3, r3, #31
   246d8:	uxtb	r3, r3
   246dc:	cmp	r3, #0
   246e0:	bne	24704 <__assert_fail@plt+0x133e4>
   246e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   246e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   246ec:	cmp	r2, r3
   246f0:	movgt	r3, #1
   246f4:	movle	r3, #0
   246f8:	uxtb	r3, r3
   246fc:	cmp	r3, #0
   24700:	beq	2470c <__assert_fail@plt+0x133ec>
   24704:	mvn	r3, #0
   24708:	b	24b5c <__assert_fail@plt+0x1383c>
   2470c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   24710:	ldr	r3, [fp, #-16]
   24714:	cmp	r2, r3
   24718:	movlt	r3, #1
   2471c:	movge	r3, #0
   24720:	uxtb	r3, r3
   24724:	cmp	r3, #0
   24728:	bne	24778 <__assert_fail@plt+0x13458>
   2472c:	ldr	r3, [fp, #4]
   24730:	mvn	r3, r3
   24734:	lsr	r3, r3, #31
   24738:	uxtb	r3, r3
   2473c:	cmp	r3, #0
   24740:	beq	2476c <__assert_fail@plt+0x1344c>
   24744:	ldr	r2, [fp, #-16]
   24748:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2474c:	cmp	r2, r3
   24750:	movlt	r3, #1
   24754:	movge	r3, #0
   24758:	uxtb	r3, r3
   2475c:	cmp	r3, #0
   24760:	beq	2476c <__assert_fail@plt+0x1344c>
   24764:	mov	r3, #1
   24768:	b	24770 <__assert_fail@plt+0x13450>
   2476c:	mov	r3, #0
   24770:	cmp	r3, #0
   24774:	beq	24784 <__assert_fail@plt+0x13464>
   24778:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2477c:	str	r3, [fp, #-16]
   24780:	b	247e8 <__assert_fail@plt+0x134c8>
   24784:	ldr	r3, [fp, #-16]
   24788:	lsr	r3, r3, #31
   2478c:	uxtb	r3, r3
   24790:	cmp	r3, #0
   24794:	bne	247e0 <__assert_fail@plt+0x134c0>
   24798:	ldr	r3, [fp, #4]
   2479c:	lsr	r3, r3, #31
   247a0:	uxtb	r3, r3
   247a4:	cmp	r3, #0
   247a8:	beq	247d4 <__assert_fail@plt+0x134b4>
   247ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   247b0:	ldr	r3, [fp, #-16]
   247b4:	cmp	r2, r3
   247b8:	movle	r3, #1
   247bc:	movgt	r3, #0
   247c0:	uxtb	r3, r3
   247c4:	cmp	r3, #0
   247c8:	beq	247d4 <__assert_fail@plt+0x134b4>
   247cc:	mov	r3, #1
   247d0:	b	247d8 <__assert_fail@plt+0x134b8>
   247d4:	mov	r3, #0
   247d8:	cmp	r3, #0
   247dc:	beq	247e8 <__assert_fail@plt+0x134c8>
   247e0:	mov	r3, #0
   247e4:	str	r3, [fp, #-16]
   247e8:	ldr	r3, [pc, #888]	; 24b68 <__assert_fail@plt+0x13848>
   247ec:	cmp	r3, #0
   247f0:	bne	24800 <__assert_fail@plt+0x134e0>
   247f4:	ldr	r3, [pc, #880]	; 24b6c <__assert_fail@plt+0x1384c>
   247f8:	cmp	r3, #0
   247fc:	beq	24810 <__assert_fail@plt+0x134f0>
   24800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24804:	add	r3, r3, #136	; 0x88
   24808:	mov	r0, r3
   2480c:	bl	1108c <pthread_mutex_lock@plt>
   24810:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24814:	ldrb	r3, [r3, #28]
   24818:	and	r3, r3, #32
   2481c:	uxtb	r3, r3
   24820:	cmp	r3, #0
   24824:	movne	r3, #1
   24828:	moveq	r3, #0
   2482c:	uxtb	r3, r3
   24830:	mov	r2, r3
   24834:	ldr	r3, [fp, #-20]	; 0xffffffec
   24838:	orr	r3, r3, r2
   2483c:	str	r3, [fp, #-20]	; 0xffffffec
   24840:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24844:	ldrb	r3, [r3, #28]
   24848:	and	r3, r3, #64	; 0x40
   2484c:	uxtb	r3, r3
   24850:	cmp	r3, #0
   24854:	beq	24860 <__assert_fail@plt+0x13540>
   24858:	mov	r3, #2
   2485c:	b	24864 <__assert_fail@plt+0x13544>
   24860:	mov	r3, #0
   24864:	ldr	r2, [fp, #-20]	; 0xffffffec
   24868:	orr	r3, r2, r3
   2486c:	str	r3, [fp, #-20]	; 0xffffffec
   24870:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24874:	ldr	r3, [fp, #-16]
   24878:	cmp	r2, r3
   2487c:	bge	248b0 <__assert_fail@plt+0x13590>
   24880:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24884:	ldr	r3, [r3, #16]
   24888:	cmp	r3, #0
   2488c:	beq	248b0 <__assert_fail@plt+0x13590>
   24890:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24894:	ldrb	r3, [r3, #28]
   24898:	and	r3, r3, #8
   2489c:	uxtb	r3, r3
   248a0:	cmp	r3, #0
   248a4:	bne	248b0 <__assert_fail@plt+0x13590>
   248a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   248ac:	bl	1b114 <__assert_fail@plt+0x9df4>
   248b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   248b4:	ldrb	r3, [r3, #28]
   248b8:	lsr	r3, r3, #4
   248bc:	and	r3, r3, #1
   248c0:	uxtb	r3, r3
   248c4:	cmp	r3, #0
   248c8:	beq	248d4 <__assert_fail@plt+0x135b4>
   248cc:	mov	r3, #0
   248d0:	str	r3, [fp, #12]
   248d4:	ldr	r3, [fp, #12]
   248d8:	cmp	r3, #0
   248dc:	bne	248ec <__assert_fail@plt+0x135cc>
   248e0:	mov	r3, #1
   248e4:	str	r3, [fp, #-8]
   248e8:	b	24988 <__assert_fail@plt+0x13668>
   248ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   248f0:	ldrb	r3, [r3, #28]
   248f4:	and	r3, r3, #6
   248f8:	uxtb	r3, r3
   248fc:	cmp	r3, #4
   24900:	moveq	r3, #1
   24904:	movne	r3, #0
   24908:	uxtb	r3, r3
   2490c:	cmp	r3, #0
   24910:	beq	24978 <__assert_fail@plt+0x13658>
   24914:	ldr	r3, [fp, #12]
   24918:	ldr	r2, [r3]
   2491c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24920:	ldr	r3, [r3, #24]
   24924:	cmp	r2, r3
   24928:	movls	r3, #1
   2492c:	movhi	r3, #0
   24930:	uxtb	r3, r3
   24934:	cmp	r3, #0
   24938:	beq	24978 <__assert_fail@plt+0x13658>
   2493c:	ldr	r3, [fp, #12]
   24940:	ldr	r3, [r3]
   24944:	str	r3, [fp, #-8]
   24948:	ldr	r3, [fp, #-8]
   2494c:	cmp	r3, #0
   24950:	movle	r3, #1
   24954:	movgt	r3, #0
   24958:	uxtb	r3, r3
   2495c:	cmp	r3, #0
   24960:	beq	24988 <__assert_fail@plt+0x13668>
   24964:	mov	r3, #0
   24968:	str	r3, [fp, #12]
   2496c:	mov	r3, #1
   24970:	str	r3, [fp, #-8]
   24974:	b	24988 <__assert_fail@plt+0x13668>
   24978:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2497c:	ldr	r3, [r3, #24]
   24980:	add	r3, r3, #1
   24984:	str	r3, [fp, #-8]
   24988:	ldr	r3, [fp, #-8]
   2498c:	lsl	r3, r3, #3
   24990:	mov	r0, r3
   24994:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   24998:	mov	r3, r0
   2499c:	str	r3, [fp, #-28]	; 0xffffffe4
   249a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   249a4:	cmp	r3, #0
   249a8:	moveq	r3, #1
   249ac:	movne	r3, #0
   249b0:	uxtb	r3, r3
   249b4:	cmp	r3, #0
   249b8:	beq	249c8 <__assert_fail@plt+0x136a8>
   249bc:	mvn	r3, #1
   249c0:	str	r3, [fp, #-12]
   249c4:	b	24b30 <__assert_fail@plt+0x13810>
   249c8:	ldr	r3, [fp, #-8]
   249cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   249d0:	str	r2, [sp, #16]
   249d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   249d8:	str	r2, [sp, #12]
   249dc:	str	r3, [sp, #8]
   249e0:	ldr	r3, [fp, #8]
   249e4:	str	r3, [sp, #4]
   249e8:	ldr	r3, [fp, #-16]
   249ec:	str	r3, [sp]
   249f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   249f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   249f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   249fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24a00:	bl	24efc <__assert_fail@plt+0x13bdc>
   24a04:	str	r0, [fp, #-32]	; 0xffffffe0
   24a08:	mov	r3, #0
   24a0c:	str	r3, [fp, #-12]
   24a10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24a14:	cmp	r3, #0
   24a18:	beq	24a3c <__assert_fail@plt+0x1371c>
   24a1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24a20:	cmp	r3, #1
   24a24:	bne	24a30 <__assert_fail@plt+0x13710>
   24a28:	mvn	r3, #0
   24a2c:	b	24a34 <__assert_fail@plt+0x13714>
   24a30:	mvn	r3, #1
   24a34:	str	r3, [fp, #-12]
   24a38:	b	24acc <__assert_fail@plt+0x137ac>
   24a3c:	ldr	r3, [fp, #12]
   24a40:	cmp	r3, #0
   24a44:	beq	24acc <__assert_fail@plt+0x137ac>
   24a48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24a4c:	ldrb	r3, [r3, #28]
   24a50:	lsr	r3, r3, #1
   24a54:	and	r3, r3, #3
   24a58:	uxtb	r3, r3
   24a5c:	ldr	r2, [fp, #-8]
   24a60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24a64:	ldr	r0, [fp, #12]
   24a68:	bl	24b70 <__assert_fail@plt+0x13850>
   24a6c:	mov	r3, r0
   24a70:	uxtb	r3, r3
   24a74:	and	r3, r3, #3
   24a78:	uxtb	r3, r3
   24a7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24a80:	ldrb	r2, [r1, #28]
   24a84:	and	r3, r3, #3
   24a88:	bic	r2, r2, #6
   24a8c:	lsl	r3, r3, #1
   24a90:	orr	r3, r3, r2
   24a94:	mov	r2, r3
   24a98:	strb	r2, [r1, #28]
   24a9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24aa0:	ldrb	r3, [r3, #28]
   24aa4:	and	r3, r3, #6
   24aa8:	uxtb	r3, r3
   24aac:	cmp	r3, #0
   24ab0:	moveq	r3, #1
   24ab4:	movne	r3, #0
   24ab8:	uxtb	r3, r3
   24abc:	cmp	r3, #0
   24ac0:	beq	24acc <__assert_fail@plt+0x137ac>
   24ac4:	mvn	r3, #1
   24ac8:	str	r3, [fp, #-12]
   24acc:	ldr	r3, [fp, #-12]
   24ad0:	cmp	r3, #0
   24ad4:	moveq	r3, #1
   24ad8:	movne	r3, #0
   24adc:	uxtb	r3, r3
   24ae0:	cmp	r3, #0
   24ae4:	beq	24b28 <__assert_fail@plt+0x13808>
   24ae8:	ldrb	r3, [fp, #16]
   24aec:	cmp	r3, #0
   24af0:	beq	24b1c <__assert_fail@plt+0x137fc>
   24af4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24af8:	ldr	r2, [r3]
   24afc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24b00:	cmp	r2, r3
   24b04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24b08:	ldr	r2, [r3, #4]
   24b0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24b10:	sub	r3, r2, r3
   24b14:	str	r3, [fp, #-12]
   24b18:	b	24b28 <__assert_fail@plt+0x13808>
   24b1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24b20:	ldr	r3, [r3]
   24b24:	str	r3, [fp, #-12]
   24b28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24b2c:	bl	31500 <__assert_fail@plt+0x201e0>
   24b30:	ldr	r3, [pc, #48]	; 24b68 <__assert_fail@plt+0x13848>
   24b34:	cmp	r3, #0
   24b38:	bne	24b48 <__assert_fail@plt+0x13828>
   24b3c:	ldr	r3, [pc, #40]	; 24b6c <__assert_fail@plt+0x1384c>
   24b40:	cmp	r3, #0
   24b44:	beq	24b58 <__assert_fail@plt+0x13838>
   24b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24b4c:	add	r3, r3, #136	; 0x88
   24b50:	mov	r0, r3
   24b54:	bl	10fe4 <pthread_mutex_unlock@plt>
   24b58:	ldr	r3, [fp, #-12]
   24b5c:	mov	r0, r3
   24b60:	sub	sp, fp, #4
   24b64:	pop	{fp, pc}
	...
   24b70:	push	{fp, lr}
   24b74:	add	fp, sp, #4
   24b78:	sub	sp, sp, #40	; 0x28
   24b7c:	str	r0, [fp, #-32]	; 0xffffffe0
   24b80:	str	r1, [fp, #-36]	; 0xffffffdc
   24b84:	str	r2, [fp, #-40]	; 0xffffffd8
   24b88:	str	r3, [fp, #-44]	; 0xffffffd4
   24b8c:	mov	r3, #1
   24b90:	str	r3, [fp, #-8]
   24b94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24b98:	add	r3, r3, #1
   24b9c:	str	r3, [fp, #-16]
   24ba0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24ba4:	cmp	r3, #0
   24ba8:	bne	24c5c <__assert_fail@plt+0x1393c>
   24bac:	ldr	r3, [fp, #-16]
   24bb0:	lsl	r3, r3, #2
   24bb4:	mov	r0, r3
   24bb8:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   24bbc:	mov	r3, r0
   24bc0:	mov	r2, r3
   24bc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24bc8:	str	r2, [r3, #4]
   24bcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24bd0:	ldr	r3, [r3, #4]
   24bd4:	cmp	r3, #0
   24bd8:	moveq	r3, #1
   24bdc:	movne	r3, #0
   24be0:	uxtb	r3, r3
   24be4:	cmp	r3, #0
   24be8:	beq	24bf4 <__assert_fail@plt+0x138d4>
   24bec:	mov	r3, #0
   24bf0:	b	24e44 <__assert_fail@plt+0x13b24>
   24bf4:	ldr	r3, [fp, #-16]
   24bf8:	lsl	r3, r3, #2
   24bfc:	mov	r0, r3
   24c00:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   24c04:	mov	r3, r0
   24c08:	mov	r2, r3
   24c0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24c10:	str	r2, [r3, #8]
   24c14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24c18:	ldr	r3, [r3, #8]
   24c1c:	cmp	r3, #0
   24c20:	moveq	r3, #1
   24c24:	movne	r3, #0
   24c28:	uxtb	r3, r3
   24c2c:	cmp	r3, #0
   24c30:	beq	24c4c <__assert_fail@plt+0x1392c>
   24c34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24c38:	ldr	r3, [r3, #4]
   24c3c:	mov	r0, r3
   24c40:	bl	31500 <__assert_fail@plt+0x201e0>
   24c44:	mov	r3, #0
   24c48:	b	24e44 <__assert_fail@plt+0x13b24>
   24c4c:	ldr	r2, [fp, #-16]
   24c50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24c54:	str	r2, [r3]
   24c58:	b	24d64 <__assert_fail@plt+0x13a44>
   24c5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24c60:	cmp	r3, #1
   24c64:	bne	24d44 <__assert_fail@plt+0x13a24>
   24c68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24c6c:	ldr	r2, [r3]
   24c70:	ldr	r3, [fp, #-16]
   24c74:	cmp	r2, r3
   24c78:	movcc	r3, #1
   24c7c:	movcs	r3, #0
   24c80:	uxtb	r3, r3
   24c84:	cmp	r3, #0
   24c88:	beq	24d64 <__assert_fail@plt+0x13a44>
   24c8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24c90:	ldr	r2, [r3, #4]
   24c94:	ldr	r3, [fp, #-16]
   24c98:	lsl	r3, r3, #2
   24c9c:	mov	r1, r3
   24ca0:	mov	r0, r2
   24ca4:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   24ca8:	str	r0, [fp, #-20]	; 0xffffffec
   24cac:	ldr	r3, [fp, #-20]	; 0xffffffec
   24cb0:	cmp	r3, #0
   24cb4:	moveq	r3, #1
   24cb8:	movne	r3, #0
   24cbc:	uxtb	r3, r3
   24cc0:	cmp	r3, #0
   24cc4:	beq	24cd0 <__assert_fail@plt+0x139b0>
   24cc8:	mov	r3, #0
   24ccc:	b	24e44 <__assert_fail@plt+0x13b24>
   24cd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24cd4:	ldr	r2, [r3, #8]
   24cd8:	ldr	r3, [fp, #-16]
   24cdc:	lsl	r3, r3, #2
   24ce0:	mov	r1, r3
   24ce4:	mov	r0, r2
   24ce8:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   24cec:	str	r0, [fp, #-24]	; 0xffffffe8
   24cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24cf4:	cmp	r3, #0
   24cf8:	moveq	r3, #1
   24cfc:	movne	r3, #0
   24d00:	uxtb	r3, r3
   24d04:	cmp	r3, #0
   24d08:	beq	24d1c <__assert_fail@plt+0x139fc>
   24d0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24d10:	bl	31500 <__assert_fail@plt+0x201e0>
   24d14:	mov	r3, #0
   24d18:	b	24e44 <__assert_fail@plt+0x13b24>
   24d1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d20:	ldr	r2, [fp, #-20]	; 0xffffffec
   24d24:	str	r2, [r3, #4]
   24d28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24d30:	str	r2, [r3, #8]
   24d34:	ldr	r2, [fp, #-16]
   24d38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d3c:	str	r2, [r3]
   24d40:	b	24d64 <__assert_fail@plt+0x13a44>
   24d44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24d48:	cmp	r3, #2
   24d4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d50:	ldr	r2, [r3]
   24d54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24d58:	cmp	r2, r3
   24d5c:	mov	r3, #2
   24d60:	str	r3, [fp, #-8]
   24d64:	mov	r3, #0
   24d68:	str	r3, [fp, #-12]
   24d6c:	b	24dd4 <__assert_fail@plt+0x13ab4>
   24d70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24d74:	ldr	r2, [r3, #4]
   24d78:	ldr	r3, [fp, #-12]
   24d7c:	lsl	r3, r3, #2
   24d80:	add	r3, r2, r3
   24d84:	ldr	r2, [fp, #-12]
   24d88:	lsl	r2, r2, #3
   24d8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24d90:	add	r2, r1, r2
   24d94:	ldr	r2, [r2]
   24d98:	str	r2, [r3]
   24d9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24da0:	ldr	r2, [r3, #8]
   24da4:	ldr	r3, [fp, #-12]
   24da8:	lsl	r3, r3, #2
   24dac:	add	r3, r2, r3
   24db0:	ldr	r2, [fp, #-12]
   24db4:	lsl	r2, r2, #3
   24db8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24dbc:	add	r2, r1, r2
   24dc0:	ldr	r2, [r2, #4]
   24dc4:	str	r2, [r3]
   24dc8:	ldr	r3, [fp, #-12]
   24dcc:	add	r3, r3, #1
   24dd0:	str	r3, [fp, #-12]
   24dd4:	ldr	r2, [fp, #-12]
   24dd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24ddc:	cmp	r2, r3
   24de0:	blt	24d70 <__assert_fail@plt+0x13a50>
   24de4:	b	24e2c <__assert_fail@plt+0x13b0c>
   24de8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24dec:	ldr	r2, [r3, #4]
   24df0:	ldr	r3, [fp, #-12]
   24df4:	lsl	r3, r3, #2
   24df8:	add	r2, r2, r3
   24dfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24e00:	ldr	r1, [r3, #8]
   24e04:	ldr	r3, [fp, #-12]
   24e08:	lsl	r3, r3, #2
   24e0c:	add	r3, r1, r3
   24e10:	mvn	r1, #0
   24e14:	str	r1, [r3]
   24e18:	ldr	r3, [r3]
   24e1c:	str	r3, [r2]
   24e20:	ldr	r3, [fp, #-12]
   24e24:	add	r3, r3, #1
   24e28:	str	r3, [fp, #-12]
   24e2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24e30:	ldr	r2, [r3]
   24e34:	ldr	r3, [fp, #-12]
   24e38:	cmp	r2, r3
   24e3c:	bhi	24de8 <__assert_fail@plt+0x13ac8>
   24e40:	ldr	r3, [fp, #-8]
   24e44:	mov	r0, r3
   24e48:	sub	sp, fp, #4
   24e4c:	pop	{fp, pc}
   24e50:	push	{fp}		; (str fp, [sp, #-4]!)
   24e54:	add	fp, sp, #0
   24e58:	sub	sp, sp, #20
   24e5c:	str	r0, [fp, #-8]
   24e60:	str	r1, [fp, #-12]
   24e64:	str	r2, [fp, #-16]
   24e68:	str	r3, [fp, #-20]	; 0xffffffec
   24e6c:	ldr	r3, [fp, #-16]
   24e70:	cmp	r3, #0
   24e74:	beq	24eb4 <__assert_fail@plt+0x13b94>
   24e78:	ldr	r2, [fp, #-8]
   24e7c:	ldrb	r3, [r2, #28]
   24e80:	bic	r3, r3, #4
   24e84:	orr	r3, r3, #2
   24e88:	strb	r3, [r2, #28]
   24e8c:	ldr	r3, [fp, #-12]
   24e90:	ldr	r2, [fp, #-16]
   24e94:	str	r2, [r3]
   24e98:	ldr	r3, [fp, #-12]
   24e9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24ea0:	str	r2, [r3, #4]
   24ea4:	ldr	r3, [fp, #-12]
   24ea8:	ldr	r2, [fp, #4]
   24eac:	str	r2, [r3, #8]
   24eb0:	b	24eec <__assert_fail@plt+0x13bcc>
   24eb4:	ldr	r2, [fp, #-8]
   24eb8:	ldrb	r3, [r2, #28]
   24ebc:	bic	r3, r3, #6
   24ec0:	strb	r3, [r2, #28]
   24ec4:	ldr	r3, [fp, #-12]
   24ec8:	mov	r2, #0
   24ecc:	str	r2, [r3]
   24ed0:	ldr	r3, [fp, #-12]
   24ed4:	mov	r2, #0
   24ed8:	str	r2, [r3, #8]
   24edc:	ldr	r3, [fp, #-12]
   24ee0:	ldr	r2, [r3, #8]
   24ee4:	ldr	r3, [fp, #-12]
   24ee8:	str	r2, [r3, #4]
   24eec:	nop			; (mov r0, r0)
   24ef0:	add	sp, fp, #0
   24ef4:	pop	{fp}		; (ldr fp, [sp], #4)
   24ef8:	bx	lr
   24efc:	push	{fp, lr}
   24f00:	add	fp, sp, #4
   24f04:	sub	sp, sp, #240	; 0xf0
   24f08:	str	r0, [fp, #-216]	; 0xffffff28
   24f0c:	str	r1, [fp, #-220]	; 0xffffff24
   24f10:	str	r2, [fp, #-224]	; 0xffffff20
   24f14:	str	r3, [fp, #-228]	; 0xffffff1c
   24f18:	ldr	r3, [fp, #-216]	; 0xffffff28
   24f1c:	ldr	r3, [r3]
   24f20:	str	r3, [fp, #-20]	; 0xffffffec
   24f24:	mvn	r3, #0
   24f28:	str	r3, [fp, #-24]	; 0xffffffe8
   24f2c:	sub	r3, fp, #208	; 0xd0
   24f30:	mov	r2, #136	; 0x88
   24f34:	mov	r1, #0
   24f38:	mov	r0, r3
   24f3c:	bl	11248 <memset@plt>
   24f40:	ldr	r3, [fp, #-20]	; 0xffffffec
   24f44:	str	r3, [fp, #-124]	; 0xffffff84
   24f48:	ldr	r3, [fp, #-216]	; 0xffffff28
   24f4c:	ldr	r3, [r3, #16]
   24f50:	cmp	r3, #0
   24f54:	beq	24fa4 <__assert_fail@plt+0x13c84>
   24f58:	ldr	r3, [fp, #-216]	; 0xffffff28
   24f5c:	ldrb	r3, [r3, #28]
   24f60:	and	r3, r3, #8
   24f64:	uxtb	r3, r3
   24f68:	cmp	r3, #0
   24f6c:	beq	24fa4 <__assert_fail@plt+0x13c84>
   24f70:	ldr	r2, [fp, #-228]	; 0xffffff1c
   24f74:	ldr	r3, [fp, #4]
   24f78:	cmp	r2, r3
   24f7c:	beq	24fa4 <__assert_fail@plt+0x13c84>
   24f80:	ldr	r3, [fp, #-216]	; 0xffffff28
   24f84:	ldrb	r3, [r3, #28]
   24f88:	and	r3, r3, #1
   24f8c:	uxtb	r3, r3
   24f90:	cmp	r3, #0
   24f94:	bne	24fa4 <__assert_fail@plt+0x13c84>
   24f98:	ldr	r3, [fp, #-216]	; 0xffffff28
   24f9c:	ldr	r3, [r3, #16]
   24fa0:	b	24fa8 <__assert_fail@plt+0x13c88>
   24fa4:	mov	r3, #0
   24fa8:	str	r3, [fp, #-28]	; 0xffffffe4
   24fac:	ldr	r3, [fp, #-216]	; 0xffffff28
   24fb0:	ldr	r3, [r3, #20]
   24fb4:	str	r3, [fp, #-32]	; 0xffffffe0
   24fb8:	ldr	r3, [fp, #-216]	; 0xffffff28
   24fbc:	ldr	r2, [r3, #24]
   24fc0:	ldr	r3, [fp, #12]
   24fc4:	cmp	r2, r3
   24fc8:	bcs	24fe4 <__assert_fail@plt+0x13cc4>
   24fcc:	ldr	r3, [fp, #-216]	; 0xffffff28
   24fd0:	ldr	r3, [r3, #24]
   24fd4:	ldr	r2, [fp, #12]
   24fd8:	sub	r3, r2, r3
   24fdc:	sub	r3, r3, #1
   24fe0:	b	24fe8 <__assert_fail@plt+0x13cc8>
   24fe4:	mov	r3, #0
   24fe8:	str	r3, [fp, #-36]	; 0xffffffdc
   24fec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24ff0:	ldr	r2, [fp, #12]
   24ff4:	sub	r3, r2, r3
   24ff8:	str	r3, [fp, #12]
   24ffc:	ldr	r3, [fp, #-216]	; 0xffffff28
   25000:	ldr	r3, [r3, #8]
   25004:	cmp	r3, #0
   25008:	moveq	r3, #1
   2500c:	movne	r3, #0
   25010:	uxtb	r3, r3
   25014:	cmp	r3, #0
   25018:	bne	2503c <__assert_fail@plt+0x13d1c>
   2501c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25020:	ldr	r3, [r3, #36]	; 0x24
   25024:	cmp	r3, #0
   25028:	moveq	r3, #1
   2502c:	movne	r3, #0
   25030:	uxtb	r3, r3
   25034:	cmp	r3, #0
   25038:	beq	25044 <__assert_fail@plt+0x13d24>
   2503c:	mov	r3, #1
   25040:	b	25048 <__assert_fail@plt+0x13d28>
   25044:	mov	r3, #0
   25048:	cmp	r3, #0
   2504c:	bne	25070 <__assert_fail@plt+0x13d50>
   25050:	ldr	r3, [fp, #-20]	; 0xffffffec
   25054:	ldr	r3, [r3, #40]	; 0x28
   25058:	cmp	r3, #0
   2505c:	moveq	r3, #1
   25060:	movne	r3, #0
   25064:	uxtb	r3, r3
   25068:	cmp	r3, #0
   2506c:	beq	25078 <__assert_fail@plt+0x13d58>
   25070:	mov	r3, #1
   25074:	b	2507c <__assert_fail@plt+0x13d5c>
   25078:	mov	r3, #0
   2507c:	cmp	r3, #0
   25080:	bne	250a4 <__assert_fail@plt+0x13d84>
   25084:	ldr	r3, [fp, #-20]	; 0xffffffec
   25088:	ldr	r3, [r3, #44]	; 0x2c
   2508c:	cmp	r3, #0
   25090:	moveq	r3, #1
   25094:	movne	r3, #0
   25098:	uxtb	r3, r3
   2509c:	cmp	r3, #0
   250a0:	beq	250ac <__assert_fail@plt+0x13d8c>
   250a4:	mov	r3, #1
   250a8:	b	250b0 <__assert_fail@plt+0x13d90>
   250ac:	mov	r3, #0
   250b0:	cmp	r3, #0
   250b4:	bne	250d8 <__assert_fail@plt+0x13db8>
   250b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   250bc:	ldr	r3, [r3, #48]	; 0x30
   250c0:	cmp	r3, #0
   250c4:	moveq	r3, #1
   250c8:	movne	r3, #0
   250cc:	uxtb	r3, r3
   250d0:	cmp	r3, #0
   250d4:	beq	250e0 <__assert_fail@plt+0x13dc0>
   250d8:	mov	r3, #1
   250dc:	b	25e00 <__assert_fail@plt+0x14ae0>
   250e0:	ldr	r3, [fp, #4]
   250e4:	cmp	r3, #0
   250e8:	blt	250fc <__assert_fail@plt+0x13ddc>
   250ec:	ldr	r2, [fp, #4]
   250f0:	ldr	r3, [fp, #-224]	; 0xffffff20
   250f4:	cmp	r2, r3
   250f8:	ble	250fc <__assert_fail@plt+0x13ddc>
   250fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   25100:	ldr	r3, [r3, #36]	; 0x24
   25104:	ldr	r3, [r3, #8]
   25108:	cmp	r3, #0
   2510c:	bne	25180 <__assert_fail@plt+0x13e60>
   25110:	ldr	r3, [fp, #-20]	; 0xffffffec
   25114:	ldr	r3, [r3, #40]	; 0x28
   25118:	ldr	r3, [r3, #8]
   2511c:	cmp	r3, #0
   25120:	bne	25180 <__assert_fail@plt+0x13e60>
   25124:	ldr	r3, [fp, #-20]	; 0xffffffec
   25128:	ldr	r3, [r3, #44]	; 0x2c
   2512c:	ldr	r3, [r3, #8]
   25130:	cmp	r3, #0
   25134:	beq	25150 <__assert_fail@plt+0x13e30>
   25138:	ldr	r3, [fp, #-216]	; 0xffffff28
   2513c:	ldrb	r3, [r3, #28]
   25140:	bic	r3, r3, #127	; 0x7f
   25144:	uxtb	r3, r3
   25148:	cmp	r3, #0
   2514c:	bne	25180 <__assert_fail@plt+0x13e60>
   25150:	ldr	r3, [fp, #-228]	; 0xffffff1c
   25154:	cmp	r3, #0
   25158:	beq	25170 <__assert_fail@plt+0x13e50>
   2515c:	ldr	r3, [fp, #4]
   25160:	cmp	r3, #0
   25164:	beq	25170 <__assert_fail@plt+0x13e50>
   25168:	mov	r3, #1
   2516c:	b	25e00 <__assert_fail@plt+0x14ae0>
   25170:	mov	r3, #0
   25174:	str	r3, [fp, #4]
   25178:	ldr	r3, [fp, #4]
   2517c:	str	r3, [fp, #-228]	; 0xffffff1c
   25180:	ldr	r3, [fp, #12]
   25184:	cmp	r3, #0
   25188:	bne	2519c <__assert_fail@plt+0x13e7c>
   2518c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25190:	ldr	r3, [r3, #76]	; 0x4c
   25194:	cmp	r3, #0
   25198:	beq	251a4 <__assert_fail@plt+0x13e84>
   2519c:	mov	r3, #1
   251a0:	b	251a8 <__assert_fail@plt+0x13e88>
   251a4:	mov	r3, #0
   251a8:	strb	r3, [fp, #-37]	; 0xffffffdb
   251ac:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   251b0:	and	r3, r3, #1
   251b4:	strb	r3, [fp, #-37]	; 0xffffffdb
   251b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   251bc:	ldr	r3, [r3, #8]
   251c0:	add	r3, r3, #1
   251c4:	mov	ip, r3
   251c8:	ldr	r3, [fp, #-216]	; 0xffffff28
   251cc:	ldr	r3, [r3, #20]
   251d0:	ldr	r2, [fp, #-216]	; 0xffffff28
   251d4:	ldr	r2, [r2, #12]
   251d8:	and	r2, r2, #4194304	; 0x400000
   251dc:	cmp	r2, #0
   251e0:	movne	r2, #1
   251e4:	moveq	r2, #0
   251e8:	uxtb	r2, r2
   251ec:	sub	r0, fp, #208	; 0xd0
   251f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   251f4:	str	r1, [sp, #8]
   251f8:	str	r2, [sp, #4]
   251fc:	str	r3, [sp]
   25200:	mov	r3, ip
   25204:	ldr	r2, [fp, #-224]	; 0xffffff20
   25208:	ldr	r1, [fp, #-220]	; 0xffffff24
   2520c:	bl	1603c <__assert_fail@plt+0x4d1c>
   25210:	str	r0, [fp, #-8]
   25214:	ldr	r3, [fp, #-8]
   25218:	cmp	r3, #0
   2521c:	movne	r3, #1
   25220:	moveq	r3, #0
   25224:	uxtb	r3, r3
   25228:	cmp	r3, #0
   2522c:	bne	25d9c <__assert_fail@plt+0x14a7c>
   25230:	ldr	r3, [fp, #8]
   25234:	str	r3, [fp, #-152]	; 0xffffff68
   25238:	ldr	r3, [fp, #8]
   2523c:	str	r3, [fp, #-156]	; 0xffffff64
   25240:	ldr	r3, [fp, #-216]	; 0xffffff28
   25244:	ldrb	r3, [r3, #28]
   25248:	lsr	r3, r3, #7
   2524c:	uxtb	r3, r3
   25250:	strb	r3, [fp, #-131]	; 0xffffff7d
   25254:	ldr	r3, [fp, #-20]	; 0xffffffec
   25258:	ldr	r3, [r3, #76]	; 0x4c
   2525c:	lsl	r2, r3, #1
   25260:	sub	r3, fp, #208	; 0xd0
   25264:	ldr	r1, [fp, #20]
   25268:	mov	r0, r3
   2526c:	bl	2e3f4 <__assert_fail@plt+0x1d0d4>
   25270:	str	r0, [fp, #-8]
   25274:	ldr	r3, [fp, #-8]
   25278:	cmp	r3, #0
   2527c:	movne	r3, #1
   25280:	moveq	r3, #0
   25284:	uxtb	r3, r3
   25288:	cmp	r3, #0
   2528c:	bne	25da4 <__assert_fail@plt+0x14a84>
   25290:	ldr	r3, [fp, #12]
   25294:	cmp	r3, #1
   25298:	bhi	252b4 <__assert_fail@plt+0x13f94>
   2529c:	ldr	r3, [fp, #-20]	; 0xffffffec
   252a0:	ldrb	r3, [r3, #88]	; 0x58
   252a4:	and	r3, r3, #2
   252a8:	uxtb	r3, r3
   252ac:	cmp	r3, #0
   252b0:	beq	25320 <__assert_fail@plt+0x14000>
   252b4:	ldr	r3, [fp, #-172]	; 0xffffff54
   252b8:	cmn	r3, #-1073741822	; 0xc0000002
   252bc:	movhi	r3, #1
   252c0:	movls	r3, #0
   252c4:	uxtb	r3, r3
   252c8:	cmp	r3, #0
   252cc:	beq	252dc <__assert_fail@plt+0x13fbc>
   252d0:	mov	r3, #12
   252d4:	str	r3, [fp, #-8]
   252d8:	b	25dc8 <__assert_fail@plt+0x14aa8>
   252dc:	ldr	r3, [fp, #-172]	; 0xffffff54
   252e0:	add	r3, r3, #1
   252e4:	lsl	r3, r3, #2
   252e8:	mov	r0, r3
   252ec:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   252f0:	mov	r3, r0
   252f4:	str	r3, [fp, #-108]	; 0xffffff94
   252f8:	ldr	r3, [fp, #-108]	; 0xffffff94
   252fc:	cmp	r3, #0
   25300:	moveq	r3, #1
   25304:	movne	r3, #0
   25308:	uxtb	r3, r3
   2530c:	cmp	r3, #0
   25310:	beq	25320 <__assert_fail@plt+0x14000>
   25314:	mov	r3, #12
   25318:	str	r3, [fp, #-8]
   2531c:	b	25dc8 <__assert_fail@plt+0x14aa8>
   25320:	ldr	r3, [fp, #-228]	; 0xffffff1c
   25324:	str	r3, [fp, #-72]	; 0xffffffb8
   25328:	ldr	r3, [fp, #20]
   2532c:	and	r3, r3, #1
   25330:	cmp	r3, #0
   25334:	beq	25340 <__assert_fail@plt+0x14020>
   25338:	mov	r3, #4
   2533c:	b	25344 <__assert_fail@plt+0x14024>
   25340:	mov	r3, #6
   25344:	str	r3, [fp, #-148]	; 0xffffff6c
   25348:	ldr	r2, [fp, #4]
   2534c:	ldr	r3, [fp, #-228]	; 0xffffff1c
   25350:	cmp	r2, r3
   25354:	bge	25360 <__assert_fail@plt+0x14040>
   25358:	mvn	r3, #0
   2535c:	b	25364 <__assert_fail@plt+0x14044>
   25360:	mov	r3, #1
   25364:	str	r3, [fp, #-44]	; 0xffffffd4
   25368:	ldr	r2, [fp, #-228]	; 0xffffff1c
   2536c:	ldr	r3, [fp, #4]
   25370:	cmp	r2, r3
   25374:	movlt	r3, r2
   25378:	movge	r3, r3
   2537c:	str	r3, [fp, #-48]	; 0xffffffd0
   25380:	ldr	r2, [fp, #4]
   25384:	ldr	r3, [fp, #-228]	; 0xffffff1c
   25388:	cmp	r2, r3
   2538c:	movge	r3, r2
   25390:	movlt	r3, r3
   25394:	str	r3, [fp, #-52]	; 0xffffffcc
   25398:	ldr	r3, [fp, #-20]	; 0xffffffec
   2539c:	ldr	r3, [r3, #92]	; 0x5c
   253a0:	cmp	r3, #1
   253a4:	moveq	r3, #1
   253a8:	movne	r3, #0
   253ac:	strb	r3, [fp, #-53]	; 0xffffffcb
   253b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   253b4:	cmp	r3, #0
   253b8:	beq	25430 <__assert_fail@plt+0x14110>
   253bc:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   253c0:	cmp	r3, #0
   253c4:	bne	253e8 <__assert_fail@plt+0x140c8>
   253c8:	ldr	r3, [fp, #-216]	; 0xffffff28
   253cc:	ldr	r3, [r3, #12]
   253d0:	and	r3, r3, #4194304	; 0x400000
   253d4:	cmp	r3, #0
   253d8:	bne	253f0 <__assert_fail@plt+0x140d0>
   253dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   253e0:	cmp	r3, #0
   253e4:	bne	253f0 <__assert_fail@plt+0x140d0>
   253e8:	mov	r2, #4
   253ec:	b	253f4 <__assert_fail@plt+0x140d4>
   253f0:	mov	r2, #0
   253f4:	ldr	r1, [fp, #-228]	; 0xffffff1c
   253f8:	ldr	r3, [fp, #4]
   253fc:	cmp	r1, r3
   25400:	bgt	2540c <__assert_fail@plt+0x140ec>
   25404:	mov	r3, #2
   25408:	b	25410 <__assert_fail@plt+0x140f0>
   2540c:	mov	r3, #0
   25410:	orr	r3, r2, r3
   25414:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25418:	cmp	r2, #0
   2541c:	movne	r2, #1
   25420:	moveq	r2, #0
   25424:	uxtb	r2, r2
   25428:	orr	r3, r3, r2
   2542c:	b	25434 <__assert_fail@plt+0x14114>
   25430:	mov	r3, #8
   25434:	str	r3, [fp, #-60]	; 0xffffffc4
   25438:	mov	r3, #1
   2543c:	str	r3, [fp, #-8]
   25440:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25444:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25448:	cmp	r2, r3
   2544c:	blt	25dc8 <__assert_fail@plt+0x14aa8>
   25450:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25454:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25458:	cmp	r2, r3
   2545c:	blt	25dc8 <__assert_fail@plt+0x14aa8>
   25460:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25464:	sub	r3, r3, #4
   25468:	cmp	r3, #4
   2546c:	ldrls	pc, [pc, r3, lsl #2]
   25470:	b	25680 <__assert_fail@plt+0x14360>
   25474:	andeq	r5, r2, r4, asr r6
   25478:	andeq	r5, r2, r4, asr r6
   2547c:	andeq	r5, r2, r0, lsl #10
   25480:	muleq	r2, r4, r4
   25484:	andeq	r5, r2, r4, lsl #15
   25488:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2548c:	add	r3, r3, #1
   25490:	str	r3, [fp, #-72]	; 0xffffffb8
   25494:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25498:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2549c:	cmp	r2, r3
   254a0:	movlt	r3, #1
   254a4:	movge	r3, #0
   254a8:	uxtb	r3, r3
   254ac:	cmp	r3, #0
   254b0:	beq	25550 <__assert_fail@plt+0x14230>
   254b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   254b8:	mov	r2, r3
   254bc:	ldr	r3, [fp, #-220]	; 0xffffff24
   254c0:	add	r3, r3, r2
   254c4:	ldrb	r3, [r3]
   254c8:	mov	r2, r3
   254cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   254d0:	add	r3, r3, r2
   254d4:	ldrb	r3, [r3]
   254d8:	mov	r2, r3
   254dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   254e0:	add	r3, r3, r2
   254e4:	ldrb	r3, [r3]
   254e8:	cmp	r3, #0
   254ec:	beq	25488 <__assert_fail@plt+0x14168>
   254f0:	b	25550 <__assert_fail@plt+0x14230>
   254f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   254f8:	add	r3, r3, #1
   254fc:	str	r3, [fp, #-72]	; 0xffffffb8
   25500:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25504:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25508:	cmp	r2, r3
   2550c:	movlt	r3, #1
   25510:	movge	r3, #0
   25514:	uxtb	r3, r3
   25518:	cmp	r3, #0
   2551c:	beq	25554 <__assert_fail@plt+0x14234>
   25520:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25524:	mov	r2, r3
   25528:	ldr	r3, [fp, #-220]	; 0xffffff24
   2552c:	add	r3, r3, r2
   25530:	ldrb	r3, [r3]
   25534:	mov	r2, r3
   25538:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2553c:	add	r3, r3, r2
   25540:	ldrb	r3, [r3]
   25544:	cmp	r3, #0
   25548:	beq	254f4 <__assert_fail@plt+0x141d4>
   2554c:	b	25554 <__assert_fail@plt+0x14234>
   25550:	nop			; (mov r0, r0)
   25554:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25558:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2555c:	cmp	r2, r3
   25560:	moveq	r3, #1
   25564:	movne	r3, #0
   25568:	uxtb	r3, r3
   2556c:	cmp	r3, #0
   25570:	beq	2578c <__assert_fail@plt+0x1446c>
   25574:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25578:	ldr	r3, [fp, #-224]	; 0xffffff20
   2557c:	cmp	r2, r3
   25580:	bge	2559c <__assert_fail@plt+0x1427c>
   25584:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25588:	mov	r2, r3
   2558c:	ldr	r3, [fp, #-220]	; 0xffffff24
   25590:	add	r3, r3, r2
   25594:	ldrb	r3, [r3]
   25598:	b	255a0 <__assert_fail@plt+0x14280>
   2559c:	mov	r3, #0
   255a0:	str	r3, [fp, #-64]	; 0xffffffc0
   255a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   255a8:	cmp	r3, #0
   255ac:	beq	255c4 <__assert_fail@plt+0x142a4>
   255b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   255b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   255b8:	add	r3, r2, r3
   255bc:	ldrb	r3, [r3]
   255c0:	b	255c8 <__assert_fail@plt+0x142a8>
   255c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   255c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   255cc:	add	r3, r2, r3
   255d0:	ldrb	r3, [r3]
   255d4:	cmp	r3, #0
   255d8:	bne	2578c <__assert_fail@plt+0x1446c>
   255dc:	b	25dc8 <__assert_fail@plt+0x14aa8>
   255e0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   255e4:	ldr	r3, [fp, #-224]	; 0xffffff20
   255e8:	cmp	r2, r3
   255ec:	bge	25608 <__assert_fail@plt+0x142e8>
   255f0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   255f4:	mov	r2, r3
   255f8:	ldr	r3, [fp, #-220]	; 0xffffff24
   255fc:	add	r3, r3, r2
   25600:	ldrb	r3, [r3]
   25604:	b	2560c <__assert_fail@plt+0x142ec>
   25608:	mov	r3, #0
   2560c:	str	r3, [fp, #-64]	; 0xffffffc0
   25610:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25614:	cmp	r3, #0
   25618:	beq	25630 <__assert_fail@plt+0x14310>
   2561c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25620:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25624:	add	r3, r2, r3
   25628:	ldrb	r3, [r3]
   2562c:	b	25634 <__assert_fail@plt+0x14314>
   25630:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25634:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25638:	add	r3, r2, r3
   2563c:	ldrb	r3, [r3]
   25640:	cmp	r3, #0
   25644:	bne	25668 <__assert_fail@plt+0x14348>
   25648:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2564c:	sub	r3, r3, #1
   25650:	str	r3, [fp, #-72]	; 0xffffffb8
   25654:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25658:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2565c:	cmp	r2, r3
   25660:	bge	255e0 <__assert_fail@plt+0x142c0>
   25664:	b	2566c <__assert_fail@plt+0x1434c>
   25668:	nop			; (mov r0, r0)
   2566c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25670:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25674:	cmp	r2, r3
   25678:	bge	25794 <__assert_fail@plt+0x14474>
   2567c:	b	25dc8 <__assert_fail@plt+0x14aa8>
   25680:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25684:	ldr	r3, [fp, #-184]	; 0xffffff48
   25688:	sub	r3, r2, r3
   2568c:	str	r3, [fp, #-12]
   25690:	ldr	r3, [fp, #-176]	; 0xffffff50
   25694:	mov	r2, r3
   25698:	ldr	r3, [fp, #-12]
   2569c:	cmp	r2, r3
   256a0:	movls	r3, #1
   256a4:	movhi	r3, #0
   256a8:	uxtb	r3, r3
   256ac:	cmp	r3, #0
   256b0:	beq	256f8 <__assert_fail@plt+0x143d8>
   256b4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   256b8:	sub	r3, fp, #208	; 0xd0
   256bc:	ldr	r2, [fp, #20]
   256c0:	mov	r0, r3
   256c4:	bl	17864 <__assert_fail@plt+0x6544>
   256c8:	str	r0, [fp, #-8]
   256cc:	ldr	r3, [fp, #-8]
   256d0:	cmp	r3, #0
   256d4:	movne	r3, #1
   256d8:	moveq	r3, #0
   256dc:	uxtb	r3, r3
   256e0:	cmp	r3, #0
   256e4:	bne	25dac <__assert_fail@plt+0x14a8c>
   256e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   256ec:	ldr	r3, [fp, #-184]	; 0xffffff48
   256f0:	sub	r3, r2, r3
   256f4:	str	r3, [fp, #-12]
   256f8:	ldr	r3, [fp, #-180]	; 0xffffff4c
   256fc:	mov	r2, r3
   25700:	ldr	r3, [fp, #-12]
   25704:	cmp	r2, r3
   25708:	bls	25720 <__assert_fail@plt+0x14400>
   2570c:	ldr	r2, [fp, #-204]	; 0xffffff34
   25710:	ldr	r3, [fp, #-12]
   25714:	add	r3, r2, r3
   25718:	ldrb	r3, [r3]
   2571c:	b	25724 <__assert_fail@plt+0x14404>
   25720:	mov	r3, #0
   25724:	str	r3, [fp, #-64]	; 0xffffffc0
   25728:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2572c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25730:	add	r3, r2, r3
   25734:	ldrb	r3, [r3]
   25738:	cmp	r3, #0
   2573c:	bne	2577c <__assert_fail@plt+0x1445c>
   25740:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25744:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25748:	add	r3, r2, r3
   2574c:	str	r3, [fp, #-72]	; 0xffffffb8
   25750:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25754:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25758:	cmp	r2, r3
   2575c:	blt	25770 <__assert_fail@plt+0x14450>
   25760:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25764:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25768:	cmp	r2, r3
   2576c:	ble	25680 <__assert_fail@plt+0x14360>
   25770:	mov	r3, #1
   25774:	str	r3, [fp, #-8]
   25778:	b	25dc8 <__assert_fail@plt+0x14aa8>
   2577c:	nop			; (mov r0, r0)
   25780:	b	25798 <__assert_fail@plt+0x14478>
   25784:	nop			; (mov r0, r0)
   25788:	b	25798 <__assert_fail@plt+0x14478>
   2578c:	nop			; (mov r0, r0)
   25790:	b	25798 <__assert_fail@plt+0x14478>
   25794:	nop			; (mov r0, r0)
   25798:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2579c:	sub	r3, fp, #208	; 0xd0
   257a0:	ldr	r2, [fp, #20]
   257a4:	mov	r0, r3
   257a8:	bl	17864 <__assert_fail@plt+0x6544>
   257ac:	str	r0, [fp, #-8]
   257b0:	ldr	r3, [fp, #-8]
   257b4:	cmp	r3, #0
   257b8:	movne	r3, #1
   257bc:	moveq	r3, #0
   257c0:	uxtb	r3, r3
   257c4:	cmp	r3, #0
   257c8:	bne	25db4 <__assert_fail@plt+0x14a94>
   257cc:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   257d0:	eor	r3, r3, #1
   257d4:	uxtb	r3, r3
   257d8:	cmp	r3, #0
   257dc:	beq	257fc <__assert_fail@plt+0x144dc>
   257e0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   257e4:	cmp	r3, #0
   257e8:	beq	257fc <__assert_fail@plt+0x144dc>
   257ec:	ldr	r3, [fp, #-200]	; 0xffffff38
   257f0:	ldr	r3, [r3]
   257f4:	cmn	r3, #1
   257f8:	beq	25984 <__assert_fail@plt+0x14664>
   257fc:	mov	r3, #0
   25800:	str	r3, [fp, #-88]	; 0xffffffa8
   25804:	ldr	r3, [fp, #-88]	; 0xffffffa8
   25808:	str	r3, [fp, #-100]	; 0xffffff9c
   2580c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   25810:	str	r3, [fp, #-104]	; 0xffffff98
   25814:	ldr	r2, [fp, #-228]	; 0xffffff1c
   25818:	ldr	r3, [fp, #4]
   2581c:	cmp	r2, r3
   25820:	bgt	2582c <__assert_fail@plt+0x1450c>
   25824:	sub	r3, fp, #72	; 0x48
   25828:	b	25830 <__assert_fail@plt+0x14510>
   2582c:	mov	r3, #0
   25830:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   25834:	sub	r0, fp, #208	; 0xd0
   25838:	mov	r2, r3
   2583c:	bl	26178 <__assert_fail@plt+0x14e58>
   25840:	str	r0, [fp, #-24]	; 0xffffffe8
   25844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25848:	cmn	r3, #1
   2584c:	beq	25974 <__assert_fail@plt+0x14654>
   25850:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25854:	cmn	r3, #2
   25858:	moveq	r3, #1
   2585c:	movne	r3, #0
   25860:	uxtb	r3, r3
   25864:	cmp	r3, #0
   25868:	beq	25878 <__assert_fail@plt+0x14558>
   2586c:	mov	r3, #12
   25870:	str	r3, [fp, #-8]
   25874:	b	25dc8 <__assert_fail@plt+0x14aa8>
   25878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2587c:	str	r3, [fp, #-116]	; 0xffffff8c
   25880:	ldr	r3, [fp, #-216]	; 0xffffff28
   25884:	ldrb	r3, [r3, #28]
   25888:	and	r3, r3, #16
   2588c:	uxtb	r3, r3
   25890:	cmp	r3, #0
   25894:	bne	258a4 <__assert_fail@plt+0x14584>
   25898:	ldr	r3, [fp, #12]
   2589c:	cmp	r3, #1
   258a0:	bhi	258b4 <__assert_fail@plt+0x14594>
   258a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   258a8:	ldr	r3, [r3, #76]	; 0x4c
   258ac:	cmp	r3, #0
   258b0:	beq	258e8 <__assert_fail@plt+0x145c8>
   258b4:	ldr	r2, [fp, #-108]	; 0xffffff94
   258b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   258bc:	lsl	r3, r3, #2
   258c0:	add	r3, r2, r3
   258c4:	ldr	r3, [r3]
   258c8:	str	r3, [fp, #-68]	; 0xffffffbc
   258cc:	sub	r3, fp, #208	; 0xd0
   258d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   258d4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   258d8:	mov	r0, r3
   258dc:	bl	26858 <__assert_fail@plt+0x15538>
   258e0:	mov	r3, r0
   258e4:	str	r3, [fp, #-112]	; 0xffffff90
   258e8:	ldr	r3, [fp, #-216]	; 0xffffff28
   258ec:	ldrb	r3, [r3, #28]
   258f0:	and	r3, r3, #16
   258f4:	uxtb	r3, r3
   258f8:	cmp	r3, #0
   258fc:	bne	25924 <__assert_fail@plt+0x14604>
   25900:	ldr	r3, [fp, #12]
   25904:	cmp	r3, #1
   25908:	bls	25924 <__assert_fail@plt+0x14604>
   2590c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25910:	ldrb	r3, [r3, #88]	; 0x58
   25914:	and	r3, r3, #1
   25918:	uxtb	r3, r3
   2591c:	cmp	r3, #0
   25920:	bne	25934 <__assert_fail@plt+0x14614>
   25924:	ldr	r3, [fp, #-20]	; 0xffffffec
   25928:	ldr	r3, [r3, #76]	; 0x4c
   2592c:	cmp	r3, #0
   25930:	beq	259a0 <__assert_fail@plt+0x14680>
   25934:	sub	r3, fp, #208	; 0xd0
   25938:	mov	r0, r3
   2593c:	bl	25e0c <__assert_fail@plt+0x14aec>
   25940:	str	r0, [fp, #-8]
   25944:	ldr	r3, [fp, #-8]
   25948:	cmp	r3, #0
   2594c:	beq	2599c <__assert_fail@plt+0x1467c>
   25950:	ldr	r3, [fp, #-8]
   25954:	cmp	r3, #1
   25958:	movne	r3, #1
   2595c:	moveq	r3, #0
   25960:	uxtb	r3, r3
   25964:	cmp	r3, #0
   25968:	bne	25dbc <__assert_fail@plt+0x14a9c>
   2596c:	mvn	r3, #0
   25970:	str	r3, [fp, #-24]	; 0xffffffe8
   25974:	sub	r3, fp, #208	; 0xd0
   25978:	mov	r0, r3
   2597c:	bl	2e558 <__assert_fail@plt+0x1d238>
   25980:	b	25988 <__assert_fail@plt+0x14668>
   25984:	nop			; (mov r0, r0)
   25988:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2598c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25990:	add	r3, r2, r3
   25994:	str	r3, [fp, #-72]	; 0xffffffb8
   25998:	b	25438 <__assert_fail@plt+0x14118>
   2599c:	nop			; (mov r0, r0)
   259a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   259a4:	cmn	r3, #1
   259a8:	ldr	r3, [fp, #-8]
   259ac:	cmp	r3, #0
   259b0:	ldr	r3, [fp, #12]
   259b4:	cmp	r3, #0
   259b8:	beq	25dc8 <__assert_fail@plt+0x14aa8>
   259bc:	mov	r3, #1
   259c0:	str	r3, [fp, #-16]
   259c4:	b	25a04 <__assert_fail@plt+0x146e4>
   259c8:	ldr	r3, [fp, #-16]
   259cc:	lsl	r3, r3, #3
   259d0:	ldr	r2, [fp, #16]
   259d4:	add	r2, r2, r3
   259d8:	ldr	r3, [fp, #-16]
   259dc:	lsl	r3, r3, #3
   259e0:	ldr	r1, [fp, #16]
   259e4:	add	r3, r1, r3
   259e8:	mvn	r1, #0
   259ec:	str	r1, [r3, #4]
   259f0:	ldr	r3, [r3, #4]
   259f4:	str	r3, [r2]
   259f8:	ldr	r3, [fp, #-16]
   259fc:	add	r3, r3, #1
   25a00:	str	r3, [fp, #-16]
   25a04:	ldr	r2, [fp, #-16]
   25a08:	ldr	r3, [fp, #12]
   25a0c:	cmp	r2, r3
   25a10:	bcc	259c8 <__assert_fail@plt+0x146a8>
   25a14:	ldr	r3, [fp, #16]
   25a18:	mov	r2, #0
   25a1c:	str	r2, [r3]
   25a20:	ldr	r2, [fp, #-116]	; 0xffffff8c
   25a24:	ldr	r3, [fp, #16]
   25a28:	str	r2, [r3, #4]
   25a2c:	ldr	r3, [fp, #-216]	; 0xffffff28
   25a30:	ldrb	r3, [r3, #28]
   25a34:	and	r3, r3, #16
   25a38:	uxtb	r3, r3
   25a3c:	cmp	r3, #0
   25a40:	bne	25ac4 <__assert_fail@plt+0x147a4>
   25a44:	ldr	r3, [fp, #12]
   25a48:	cmp	r3, #1
   25a4c:	bls	25ac4 <__assert_fail@plt+0x147a4>
   25a50:	ldr	r3, [fp, #-20]	; 0xffffffec
   25a54:	ldrb	r3, [r3, #88]	; 0x58
   25a58:	and	r3, r3, #1
   25a5c:	uxtb	r3, r3
   25a60:	cmp	r3, #0
   25a64:	beq	25a80 <__assert_fail@plt+0x14760>
   25a68:	ldr	r3, [fp, #-20]	; 0xffffffec
   25a6c:	ldr	r3, [r3, #76]	; 0x4c
   25a70:	cmp	r3, #0
   25a74:	ble	25a80 <__assert_fail@plt+0x14760>
   25a78:	mov	r3, #1
   25a7c:	b	25a84 <__assert_fail@plt+0x14764>
   25a80:	mov	r3, #0
   25a84:	and	r3, r3, #1
   25a88:	uxtb	r3, r3
   25a8c:	sub	r1, fp, #208	; 0xd0
   25a90:	str	r3, [sp]
   25a94:	ldr	r3, [fp, #16]
   25a98:	ldr	r2, [fp, #12]
   25a9c:	ldr	r0, [fp, #-216]	; 0xffffff28
   25aa0:	bl	27748 <__assert_fail@plt+0x16428>
   25aa4:	str	r0, [fp, #-8]
   25aa8:	ldr	r3, [fp, #-8]
   25aac:	cmp	r3, #0
   25ab0:	movne	r3, #1
   25ab4:	moveq	r3, #0
   25ab8:	uxtb	r3, r3
   25abc:	cmp	r3, #0
   25ac0:	bne	25dc4 <__assert_fail@plt+0x14aa4>
   25ac4:	mov	r3, #0
   25ac8:	str	r3, [fp, #-16]
   25acc:	b	25c34 <__assert_fail@plt+0x14914>
   25ad0:	ldr	r3, [fp, #-16]
   25ad4:	lsl	r3, r3, #3
   25ad8:	ldr	r2, [fp, #16]
   25adc:	add	r3, r2, r3
   25ae0:	ldr	r3, [r3]
   25ae4:	cmn	r3, #1
   25ae8:	beq	25c28 <__assert_fail@plt+0x14908>
   25aec:	ldrb	r3, [fp, #-132]	; 0xffffff7c
   25af0:	cmp	r3, #0
   25af4:	movne	r3, #1
   25af8:	moveq	r3, #0
   25afc:	uxtb	r3, r3
   25b00:	cmp	r3, #0
   25b04:	beq	25bc8 <__assert_fail@plt+0x148a8>
   25b08:	ldr	r3, [fp, #-16]
   25b0c:	lsl	r3, r3, #3
   25b10:	ldr	r2, [fp, #16]
   25b14:	add	r2, r2, r3
   25b18:	ldr	r3, [fp, #-16]
   25b1c:	lsl	r3, r3, #3
   25b20:	ldr	r1, [fp, #16]
   25b24:	add	r3, r1, r3
   25b28:	ldr	r1, [r3]
   25b2c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   25b30:	cmp	r1, r3
   25b34:	bne	25b40 <__assert_fail@plt+0x14820>
   25b38:	ldr	r3, [fp, #-176]	; 0xffffff50
   25b3c:	b	25b64 <__assert_fail@plt+0x14844>
   25b40:	ldr	r1, [fp, #-196]	; 0xffffff3c
   25b44:	ldr	r3, [fp, #-16]
   25b48:	lsl	r3, r3, #3
   25b4c:	ldr	r0, [fp, #16]
   25b50:	add	r3, r0, r3
   25b54:	ldr	r3, [r3]
   25b58:	lsl	r3, r3, #2
   25b5c:	add	r3, r1, r3
   25b60:	ldr	r3, [r3]
   25b64:	str	r3, [r2]
   25b68:	ldr	r3, [fp, #-16]
   25b6c:	lsl	r3, r3, #3
   25b70:	ldr	r2, [fp, #16]
   25b74:	add	r2, r2, r3
   25b78:	ldr	r3, [fp, #-16]
   25b7c:	lsl	r3, r3, #3
   25b80:	ldr	r1, [fp, #16]
   25b84:	add	r3, r1, r3
   25b88:	ldr	r1, [r3, #4]
   25b8c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   25b90:	cmp	r1, r3
   25b94:	bne	25ba0 <__assert_fail@plt+0x14880>
   25b98:	ldr	r3, [fp, #-176]	; 0xffffff50
   25b9c:	b	25bc4 <__assert_fail@plt+0x148a4>
   25ba0:	ldr	r1, [fp, #-196]	; 0xffffff3c
   25ba4:	ldr	r3, [fp, #-16]
   25ba8:	lsl	r3, r3, #3
   25bac:	ldr	r0, [fp, #16]
   25bb0:	add	r3, r0, r3
   25bb4:	ldr	r3, [r3, #4]
   25bb8:	lsl	r3, r3, #2
   25bbc:	add	r3, r1, r3
   25bc0:	ldr	r3, [r3]
   25bc4:	str	r3, [r2, #4]
   25bc8:	ldr	r3, [fp, #-16]
   25bcc:	lsl	r3, r3, #3
   25bd0:	ldr	r2, [fp, #16]
   25bd4:	add	r3, r2, r3
   25bd8:	ldr	r2, [fp, #-16]
   25bdc:	lsl	r2, r2, #3
   25be0:	ldr	r1, [fp, #16]
   25be4:	add	r2, r1, r2
   25be8:	ldr	r1, [r2]
   25bec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25bf0:	add	r2, r1, r2
   25bf4:	str	r2, [r3]
   25bf8:	ldr	r3, [fp, #-16]
   25bfc:	lsl	r3, r3, #3
   25c00:	ldr	r2, [fp, #16]
   25c04:	add	r3, r2, r3
   25c08:	ldr	r2, [fp, #-16]
   25c0c:	lsl	r2, r2, #3
   25c10:	ldr	r1, [fp, #16]
   25c14:	add	r2, r1, r2
   25c18:	ldr	r1, [r2, #4]
   25c1c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25c20:	add	r2, r1, r2
   25c24:	str	r2, [r3, #4]
   25c28:	ldr	r3, [fp, #-16]
   25c2c:	add	r3, r3, #1
   25c30:	str	r3, [fp, #-16]
   25c34:	ldr	r2, [fp, #-16]
   25c38:	ldr	r3, [fp, #12]
   25c3c:	cmp	r2, r3
   25c40:	bcc	25ad0 <__assert_fail@plt+0x147b0>
   25c44:	mov	r3, #0
   25c48:	str	r3, [fp, #-16]
   25c4c:	b	25c9c <__assert_fail@plt+0x1497c>
   25c50:	ldr	r2, [fp, #-16]
   25c54:	ldr	r3, [fp, #12]
   25c58:	add	r3, r2, r3
   25c5c:	lsl	r3, r3, #3
   25c60:	ldr	r2, [fp, #16]
   25c64:	add	r3, r2, r3
   25c68:	mvn	r2, #0
   25c6c:	str	r2, [r3]
   25c70:	ldr	r2, [fp, #-16]
   25c74:	ldr	r3, [fp, #12]
   25c78:	add	r3, r2, r3
   25c7c:	lsl	r3, r3, #3
   25c80:	ldr	r2, [fp, #16]
   25c84:	add	r3, r2, r3
   25c88:	mvn	r2, #0
   25c8c:	str	r2, [r3, #4]
   25c90:	ldr	r3, [fp, #-16]
   25c94:	add	r3, r3, #1
   25c98:	str	r3, [fp, #-16]
   25c9c:	ldr	r2, [fp, #-16]
   25ca0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25ca4:	cmp	r2, r3
   25ca8:	blt	25c50 <__assert_fail@plt+0x14930>
   25cac:	ldr	r3, [fp, #-20]	; 0xffffffec
   25cb0:	ldr	r3, [r3, #132]	; 0x84
   25cb4:	cmp	r3, #0
   25cb8:	beq	25dc8 <__assert_fail@plt+0x14aa8>
   25cbc:	mov	r3, #0
   25cc0:	str	r3, [fp, #-16]
   25cc4:	b	25d80 <__assert_fail@plt+0x14a60>
   25cc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   25ccc:	ldr	r2, [r3, #132]	; 0x84
   25cd0:	ldr	r3, [fp, #-16]
   25cd4:	lsl	r3, r3, #2
   25cd8:	add	r3, r2, r3
   25cdc:	ldr	r2, [r3]
   25ce0:	ldr	r3, [fp, #-16]
   25ce4:	cmp	r2, r3
   25ce8:	beq	25d74 <__assert_fail@plt+0x14a54>
   25cec:	ldr	r3, [fp, #-16]
   25cf0:	add	r3, r3, #1
   25cf4:	lsl	r3, r3, #3
   25cf8:	ldr	r2, [fp, #16]
   25cfc:	add	r3, r2, r3
   25d00:	ldr	r2, [fp, #-20]	; 0xffffffec
   25d04:	ldr	r1, [r2, #132]	; 0x84
   25d08:	ldr	r2, [fp, #-16]
   25d0c:	lsl	r2, r2, #2
   25d10:	add	r2, r1, r2
   25d14:	ldr	r2, [r2]
   25d18:	add	r2, r2, #1
   25d1c:	lsl	r2, r2, #3
   25d20:	ldr	r1, [fp, #16]
   25d24:	add	r2, r1, r2
   25d28:	ldr	r2, [r2]
   25d2c:	str	r2, [r3]
   25d30:	ldr	r3, [fp, #-16]
   25d34:	add	r3, r3, #1
   25d38:	lsl	r3, r3, #3
   25d3c:	ldr	r2, [fp, #16]
   25d40:	add	r3, r2, r3
   25d44:	ldr	r2, [fp, #-20]	; 0xffffffec
   25d48:	ldr	r1, [r2, #132]	; 0x84
   25d4c:	ldr	r2, [fp, #-16]
   25d50:	lsl	r2, r2, #2
   25d54:	add	r2, r1, r2
   25d58:	ldr	r2, [r2]
   25d5c:	add	r2, r2, #1
   25d60:	lsl	r2, r2, #3
   25d64:	ldr	r1, [fp, #16]
   25d68:	add	r2, r1, r2
   25d6c:	ldr	r2, [r2, #4]
   25d70:	str	r2, [r3, #4]
   25d74:	ldr	r3, [fp, #-16]
   25d78:	add	r3, r3, #1
   25d7c:	str	r3, [fp, #-16]
   25d80:	ldr	r3, [fp, #-16]
   25d84:	add	r3, r3, #1
   25d88:	mov	r2, r3
   25d8c:	ldr	r3, [fp, #12]
   25d90:	cmp	r2, r3
   25d94:	bcc	25cc8 <__assert_fail@plt+0x149a8>
   25d98:	b	25dc8 <__assert_fail@plt+0x14aa8>
   25d9c:	nop			; (mov r0, r0)
   25da0:	b	25dc8 <__assert_fail@plt+0x14aa8>
   25da4:	nop			; (mov r0, r0)
   25da8:	b	25dc8 <__assert_fail@plt+0x14aa8>
   25dac:	nop			; (mov r0, r0)
   25db0:	b	25dc8 <__assert_fail@plt+0x14aa8>
   25db4:	nop			; (mov r0, r0)
   25db8:	b	25dc8 <__assert_fail@plt+0x14aa8>
   25dbc:	nop			; (mov r0, r0)
   25dc0:	b	25dc8 <__assert_fail@plt+0x14aa8>
   25dc4:	nop			; (mov r0, r0)
   25dc8:	ldr	r3, [fp, #-108]	; 0xffffff94
   25dcc:	mov	r0, r3
   25dd0:	bl	31500 <__assert_fail@plt+0x201e0>
   25dd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   25dd8:	ldr	r3, [r3, #76]	; 0x4c
   25ddc:	cmp	r3, #0
   25de0:	beq	25df0 <__assert_fail@plt+0x14ad0>
   25de4:	sub	r3, fp, #208	; 0xd0
   25de8:	mov	r0, r3
   25dec:	bl	2e680 <__assert_fail@plt+0x1d360>
   25df0:	sub	r3, fp, #208	; 0xd0
   25df4:	mov	r0, r3
   25df8:	bl	18854 <__assert_fail@plt+0x7534>
   25dfc:	ldr	r3, [fp, #-8]
   25e00:	mov	r0, r3
   25e04:	sub	sp, fp, #4
   25e08:	pop	{fp, pc}
   25e0c:	push	{fp, lr}
   25e10:	add	fp, sp, #4
   25e14:	sub	sp, sp, #72	; 0x48
   25e18:	str	r0, [fp, #-64]	; 0xffffffc0
   25e1c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25e20:	ldr	r3, [r3, #84]	; 0x54
   25e24:	str	r3, [fp, #-28]	; 0xffffffe4
   25e28:	mov	r3, #0
   25e2c:	str	r3, [fp, #-24]	; 0xffffffe8
   25e30:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25e34:	ldr	r3, [r3, #100]	; 0x64
   25e38:	cmp	r3, #0
   25e3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25e40:	ldr	r3, [r3, #92]	; 0x5c
   25e44:	str	r3, [fp, #-12]
   25e48:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25e4c:	ldr	r3, [r3, #96]	; 0x60
   25e50:	str	r3, [fp, #-8]
   25e54:	ldr	r3, [fp, #-12]
   25e58:	cmn	r3, #-1073741822	; 0xc0000002
   25e5c:	movhi	r3, #1
   25e60:	movls	r3, #0
   25e64:	uxtb	r3, r3
   25e68:	cmp	r3, #0
   25e6c:	beq	25e78 <__assert_fail@plt+0x14b58>
   25e70:	mov	r3, #12
   25e74:	b	2616c <__assert_fail@plt+0x14e4c>
   25e78:	ldr	r3, [fp, #-12]
   25e7c:	add	r3, r3, #1
   25e80:	lsl	r3, r3, #2
   25e84:	mov	r0, r3
   25e88:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   25e8c:	mov	r3, r0
   25e90:	str	r3, [fp, #-20]	; 0xffffffec
   25e94:	ldr	r3, [fp, #-20]	; 0xffffffec
   25e98:	cmp	r3, #0
   25e9c:	moveq	r3, #1
   25ea0:	movne	r3, #0
   25ea4:	uxtb	r3, r3
   25ea8:	cmp	r3, #0
   25eac:	beq	25ebc <__assert_fail@plt+0x14b9c>
   25eb0:	mov	r3, #12
   25eb4:	str	r3, [fp, #-16]
   25eb8:	b	26158 <__assert_fail@plt+0x14e38>
   25ebc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25ec0:	ldr	r3, [r3, #76]	; 0x4c
   25ec4:	cmp	r3, #0
   25ec8:	beq	26090 <__assert_fail@plt+0x14d70>
   25ecc:	ldr	r3, [fp, #-12]
   25ed0:	add	r3, r3, #1
   25ed4:	lsl	r3, r3, #2
   25ed8:	mov	r0, r3
   25edc:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   25ee0:	mov	r3, r0
   25ee4:	str	r3, [fp, #-24]	; 0xffffffe8
   25ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25eec:	cmp	r3, #0
   25ef0:	moveq	r3, #1
   25ef4:	movne	r3, #0
   25ef8:	uxtb	r3, r3
   25efc:	cmp	r3, #0
   25f00:	beq	25f10 <__assert_fail@plt+0x14bf0>
   25f04:	mov	r3, #12
   25f08:	str	r3, [fp, #-16]
   25f0c:	b	26158 <__assert_fail@plt+0x14e38>
   25f10:	ldr	r3, [fp, #-12]
   25f14:	add	r3, r3, #1
   25f18:	lsl	r3, r3, #2
   25f1c:	mov	r2, r3
   25f20:	mov	r1, #0
   25f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25f28:	bl	11248 <memset@plt>
   25f2c:	sub	r0, fp, #56	; 0x38
   25f30:	ldr	r3, [fp, #-12]
   25f34:	str	r3, [sp]
   25f38:	ldr	r3, [fp, #-8]
   25f3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25f40:	ldr	r1, [fp, #-20]	; 0xffffffec
   25f44:	bl	2ed9c <__assert_fail@plt+0x1da7c>
   25f48:	sub	r3, fp, #56	; 0x38
   25f4c:	mov	r1, r3
   25f50:	ldr	r0, [fp, #-64]	; 0xffffffc0
   25f54:	bl	27d9c <__assert_fail@plt+0x16a7c>
   25f58:	str	r0, [fp, #-16]
   25f5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25f60:	mov	r0, r3
   25f64:	bl	31500 <__assert_fail@plt+0x201e0>
   25f68:	ldr	r3, [fp, #-16]
   25f6c:	cmp	r3, #0
   25f70:	movne	r3, #1
   25f74:	moveq	r3, #0
   25f78:	uxtb	r3, r3
   25f7c:	cmp	r3, #0
   25f80:	bne	2614c <__assert_fail@plt+0x14e2c>
   25f84:	ldr	r3, [fp, #-20]	; 0xffffffec
   25f88:	ldr	r3, [r3]
   25f8c:	cmp	r3, #0
   25f90:	bne	26044 <__assert_fail@plt+0x14d24>
   25f94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25f98:	ldr	r3, [r3]
   25f9c:	cmp	r3, #0
   25fa0:	bne	26044 <__assert_fail@plt+0x14d24>
   25fa4:	ldr	r3, [fp, #-12]
   25fa8:	sub	r3, r3, #1
   25fac:	str	r3, [fp, #-12]
   25fb0:	ldr	r3, [fp, #-12]
   25fb4:	cmp	r3, #0
   25fb8:	bge	25fc8 <__assert_fail@plt+0x14ca8>
   25fbc:	mov	r3, #1
   25fc0:	str	r3, [fp, #-16]
   25fc4:	b	26158 <__assert_fail@plt+0x14e38>
   25fc8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25fcc:	ldr	r2, [r3, #100]	; 0x64
   25fd0:	ldr	r3, [fp, #-12]
   25fd4:	lsl	r3, r3, #2
   25fd8:	add	r3, r2, r3
   25fdc:	ldr	r3, [r3]
   25fe0:	cmp	r3, #0
   25fe4:	beq	25fa4 <__assert_fail@plt+0x14c84>
   25fe8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   25fec:	ldr	r2, [r3, #100]	; 0x64
   25ff0:	ldr	r3, [fp, #-12]
   25ff4:	lsl	r3, r3, #2
   25ff8:	add	r3, r2, r3
   25ffc:	ldr	r3, [r3]
   26000:	ldrb	r3, [r3, #52]	; 0x34
   26004:	and	r3, r3, #16
   26008:	uxtb	r3, r3
   2600c:	cmp	r3, #0
   26010:	beq	25fa4 <__assert_fail@plt+0x14c84>
   26014:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26018:	ldr	r2, [r3, #100]	; 0x64
   2601c:	ldr	r3, [fp, #-12]
   26020:	lsl	r3, r3, #2
   26024:	add	r3, r2, r3
   26028:	ldr	r3, [r3]
   2602c:	ldr	r2, [fp, #-12]
   26030:	mov	r1, r3
   26034:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26038:	bl	26858 <__assert_fail@plt+0x15538>
   2603c:	str	r0, [fp, #-8]
   26040:	b	25f10 <__assert_fail@plt+0x14bf0>
   26044:	ldr	r3, [fp, #-12]
   26048:	add	r3, r3, #1
   2604c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26050:	ldr	r1, [fp, #-20]	; 0xffffffec
   26054:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26058:	bl	28360 <__assert_fail@plt+0x17040>
   2605c:	str	r0, [fp, #-16]
   26060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26064:	bl	31500 <__assert_fail@plt+0x201e0>
   26068:	mov	r3, #0
   2606c:	str	r3, [fp, #-24]	; 0xffffffe8
   26070:	ldr	r3, [fp, #-16]
   26074:	cmp	r3, #0
   26078:	movne	r3, #1
   2607c:	moveq	r3, #0
   26080:	uxtb	r3, r3
   26084:	cmp	r3, #0
   26088:	beq	26104 <__assert_fail@plt+0x14de4>
   2608c:	b	26158 <__assert_fail@plt+0x14e38>
   26090:	sub	r0, fp, #56	; 0x38
   26094:	ldr	r3, [fp, #-12]
   26098:	str	r3, [sp]
   2609c:	ldr	r3, [fp, #-8]
   260a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   260a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   260a8:	bl	2ed9c <__assert_fail@plt+0x1da7c>
   260ac:	sub	r3, fp, #56	; 0x38
   260b0:	mov	r1, r3
   260b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   260b8:	bl	27d9c <__assert_fail@plt+0x16a7c>
   260bc:	str	r0, [fp, #-16]
   260c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   260c4:	mov	r0, r3
   260c8:	bl	31500 <__assert_fail@plt+0x201e0>
   260cc:	ldr	r3, [fp, #-16]
   260d0:	cmp	r3, #0
   260d4:	movne	r3, #1
   260d8:	moveq	r3, #0
   260dc:	uxtb	r3, r3
   260e0:	cmp	r3, #0
   260e4:	bne	26154 <__assert_fail@plt+0x14e34>
   260e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   260ec:	ldr	r3, [r3]
   260f0:	cmp	r3, #0
   260f4:	bne	26104 <__assert_fail@plt+0x14de4>
   260f8:	mov	r3, #1
   260fc:	str	r3, [fp, #-16]
   26100:	b	26158 <__assert_fail@plt+0x14e38>
   26104:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26108:	ldr	r3, [r3, #100]	; 0x64
   2610c:	mov	r0, r3
   26110:	bl	31500 <__assert_fail@plt+0x201e0>
   26114:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26118:	ldr	r2, [fp, #-20]	; 0xffffffec
   2611c:	str	r2, [r3, #100]	; 0x64
   26120:	mov	r3, #0
   26124:	str	r3, [fp, #-20]	; 0xffffffec
   26128:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2612c:	ldr	r2, [fp, #-8]
   26130:	str	r2, [r3, #96]	; 0x60
   26134:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26138:	ldr	r2, [fp, #-12]
   2613c:	str	r2, [r3, #92]	; 0x5c
   26140:	mov	r3, #0
   26144:	str	r3, [fp, #-16]
   26148:	b	26158 <__assert_fail@plt+0x14e38>
   2614c:	nop			; (mov r0, r0)
   26150:	b	26158 <__assert_fail@plt+0x14e38>
   26154:	nop			; (mov r0, r0)
   26158:	ldr	r0, [fp, #-20]	; 0xffffffec
   2615c:	bl	31500 <__assert_fail@plt+0x201e0>
   26160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26164:	bl	31500 <__assert_fail@plt+0x201e0>
   26168:	ldr	r3, [fp, #-16]
   2616c:	mov	r0, r3
   26170:	sub	sp, fp, #4
   26174:	pop	{fp, pc}
   26178:	push	{fp, lr}
   2617c:	add	fp, sp, #4
   26180:	sub	sp, sp, #80	; 0x50
   26184:	str	r0, [fp, #-72]	; 0xffffffb8
   26188:	mov	r3, r1
   2618c:	str	r2, [fp, #-80]	; 0xffffffb0
   26190:	strb	r3, [fp, #-73]	; 0xffffffb7
   26194:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26198:	ldr	r3, [r3, #84]	; 0x54
   2619c:	str	r3, [fp, #-28]	; 0xffffffe4
   261a0:	mov	r3, #0
   261a4:	str	r3, [fp, #-8]
   261a8:	mvn	r3, #0
   261ac:	str	r3, [fp, #-12]
   261b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   261b4:	ldr	r3, [r3, #40]	; 0x28
   261b8:	str	r3, [fp, #-32]	; 0xffffffe0
   261bc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   261c0:	cmp	r3, #0
   261c4:	movne	r3, #1
   261c8:	moveq	r3, #0
   261cc:	strb	r3, [fp, #-17]	; 0xffffffef
   261d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   261d4:	str	r3, [fp, #-24]	; 0xffffffe8
   261d8:	mov	r3, #0
   261dc:	str	r3, [fp, #-64]	; 0xffffffc0
   261e0:	sub	r3, fp, #64	; 0x40
   261e4:	str	r3, [fp, #-44]	; 0xffffffd4
   261e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   261ec:	str	r3, [fp, #-48]	; 0xffffffd0
   261f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   261f4:	str	r3, [fp, #-52]	; 0xffffffcc
   261f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   261fc:	ldr	r3, [r3, #84]	; 0x54
   26200:	str	r3, [fp, #-56]	; 0xffffffc8
   26204:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26208:	ldr	r3, [r3, #36]	; 0x24
   2620c:	ldrb	r3, [r3, #52]	; 0x34
   26210:	bic	r3, r3, #127	; 0x7f
   26214:	uxtb	r3, r3
   26218:	cmp	r3, #0
   2621c:	beq	262fc <__assert_fail@plt+0x14fdc>
   26220:	ldr	r0, [fp, #-48]	; 0xffffffd0
   26224:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26228:	sub	r1, r3, #1
   2622c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26230:	ldr	r3, [r3, #88]	; 0x58
   26234:	mov	r2, r3
   26238:	bl	188b0 <__assert_fail@plt+0x7590>
   2623c:	str	r0, [fp, #-60]	; 0xffffffc4
   26240:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26244:	and	r3, r3, #1
   26248:	cmp	r3, #0
   2624c:	beq	2625c <__assert_fail@plt+0x14f3c>
   26250:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26254:	ldr	r3, [r3, #40]	; 0x28
   26258:	b	26304 <__assert_fail@plt+0x14fe4>
   2625c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26260:	cmp	r3, #0
   26264:	bne	26274 <__assert_fail@plt+0x14f54>
   26268:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2626c:	ldr	r3, [r3, #36]	; 0x24
   26270:	b	26304 <__assert_fail@plt+0x14fe4>
   26274:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26278:	and	r3, r3, #4
   2627c:	cmp	r3, #0
   26280:	beq	262a0 <__assert_fail@plt+0x14f80>
   26284:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26288:	and	r3, r3, #2
   2628c:	cmp	r3, #0
   26290:	beq	262a0 <__assert_fail@plt+0x14f80>
   26294:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26298:	ldr	r3, [r3, #48]	; 0x30
   2629c:	b	26304 <__assert_fail@plt+0x14fe4>
   262a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   262a4:	and	r3, r3, #2
   262a8:	cmp	r3, #0
   262ac:	beq	262bc <__assert_fail@plt+0x14f9c>
   262b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   262b4:	ldr	r3, [r3, #44]	; 0x2c
   262b8:	b	26304 <__assert_fail@plt+0x14fe4>
   262bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   262c0:	and	r3, r3, #4
   262c4:	cmp	r3, #0
   262c8:	beq	262f0 <__assert_fail@plt+0x14fd0>
   262cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   262d0:	ldr	r3, [r3, #36]	; 0x24
   262d4:	ldr	r2, [r3, #40]	; 0x28
   262d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   262dc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   262e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   262e4:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   262e8:	mov	r3, r0
   262ec:	b	26304 <__assert_fail@plt+0x14fe4>
   262f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   262f4:	ldr	r3, [r3, #36]	; 0x24
   262f8:	b	26304 <__assert_fail@plt+0x14fe4>
   262fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26300:	ldr	r3, [r3, #36]	; 0x24
   26304:	str	r3, [fp, #-16]
   26308:	ldr	r3, [fp, #-16]
   2630c:	cmp	r3, #0
   26310:	moveq	r3, #1
   26314:	movne	r3, #0
   26318:	uxtb	r3, r3
   2631c:	cmp	r3, #0
   26320:	beq	26334 <__assert_fail@plt+0x15014>
   26324:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26328:	cmp	r3, #12
   2632c:	mvn	r3, #1
   26330:	b	26728 <__assert_fail@plt+0x15408>
   26334:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26338:	ldr	r3, [r3, #100]	; 0x64
   2633c:	cmp	r3, #0
   26340:	beq	26414 <__assert_fail@plt+0x150f4>
   26344:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26348:	ldr	r2, [r3, #100]	; 0x64
   2634c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26350:	lsl	r3, r3, #2
   26354:	add	r3, r2, r3
   26358:	ldr	r2, [fp, #-16]
   2635c:	str	r2, [r3]
   26360:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26364:	ldr	r3, [r3, #76]	; 0x4c
   26368:	cmp	r3, #0
   2636c:	beq	26414 <__assert_fail@plt+0x150f4>
   26370:	mov	r3, #0
   26374:	strb	r3, [fp, #-17]	; 0xffffffef
   26378:	ldr	r3, [fp, #-16]
   2637c:	add	r3, r3, #4
   26380:	mov	r2, #0
   26384:	mov	r1, r3
   26388:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2638c:	bl	29fac <__assert_fail@plt+0x18c8c>
   26390:	mov	r3, r0
   26394:	str	r3, [fp, #-64]	; 0xffffffc0
   26398:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2639c:	cmp	r3, #0
   263a0:	movne	r3, #1
   263a4:	moveq	r3, #0
   263a8:	uxtb	r3, r3
   263ac:	cmp	r3, #0
   263b0:	beq	263bc <__assert_fail@plt+0x1509c>
   263b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   263b8:	b	26728 <__assert_fail@plt+0x15408>
   263bc:	ldr	r3, [fp, #-16]
   263c0:	ldrb	r3, [r3, #52]	; 0x34
   263c4:	and	r3, r3, #64	; 0x40
   263c8:	uxtb	r3, r3
   263cc:	cmp	r3, #0
   263d0:	beq	26414 <__assert_fail@plt+0x150f4>
   263d4:	ldr	r3, [fp, #-16]
   263d8:	add	r3, r3, #4
   263dc:	mov	r1, r3
   263e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   263e4:	bl	2a508 <__assert_fail@plt+0x191e8>
   263e8:	mov	r3, r0
   263ec:	str	r3, [fp, #-64]	; 0xffffffc0
   263f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   263f4:	cmp	r3, #0
   263f8:	movne	r3, #1
   263fc:	moveq	r3, #0
   26400:	uxtb	r3, r3
   26404:	cmp	r3, #0
   26408:	beq	26414 <__assert_fail@plt+0x150f4>
   2640c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26410:	b	26728 <__assert_fail@plt+0x15408>
   26414:	ldr	r3, [fp, #-16]
   26418:	ldrb	r3, [r3, #52]	; 0x34
   2641c:	lsr	r3, r3, #4
   26420:	and	r3, r3, #1
   26424:	uxtb	r3, r3
   26428:	cmp	r3, #0
   2642c:	beq	266e0 <__assert_fail@plt+0x153c0>
   26430:	ldr	r3, [fp, #-16]
   26434:	ldrb	r3, [r3, #52]	; 0x34
   26438:	bic	r3, r3, #127	; 0x7f
   2643c:	uxtb	r3, r3
   26440:	cmp	r3, #0
   26444:	beq	26464 <__assert_fail@plt+0x15144>
   26448:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2644c:	ldr	r1, [fp, #-16]
   26450:	ldr	r0, [fp, #-72]	; 0xffffffb8
   26454:	bl	26858 <__assert_fail@plt+0x15538>
   26458:	mov	r3, r0
   2645c:	cmp	r3, #0
   26460:	beq	266e0 <__assert_fail@plt+0x153c0>
   26464:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   26468:	eor	r3, r3, #1
   2646c:	uxtb	r3, r3
   26470:	cmp	r3, #0
   26474:	beq	26480 <__assert_fail@plt+0x15160>
   26478:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2647c:	b	26728 <__assert_fail@plt+0x15408>
   26480:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26484:	str	r3, [fp, #-12]
   26488:	mov	r3, #1
   2648c:	str	r3, [fp, #-8]
   26490:	b	266e0 <__assert_fail@plt+0x153c0>
   26494:	ldr	r3, [fp, #-16]
   26498:	str	r3, [fp, #-36]	; 0xffffffdc
   2649c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   264a0:	ldr	r3, [r3, #40]	; 0x28
   264a4:	add	r3, r3, #1
   264a8:	str	r3, [fp, #-40]	; 0xffffffd8
   264ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   264b0:	ldr	r2, [r3, #36]	; 0x24
   264b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   264b8:	cmp	r2, r3
   264bc:	movle	r3, #1
   264c0:	movgt	r3, #0
   264c4:	uxtb	r3, r3
   264c8:	cmp	r3, #0
   264cc:	beq	264e8 <__assert_fail@plt+0x151c8>
   264d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   264d4:	ldr	r2, [r3, #36]	; 0x24
   264d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   264dc:	ldr	r3, [r3, #48]	; 0x30
   264e0:	cmp	r2, r3
   264e4:	blt	26524 <__assert_fail@plt+0x15204>
   264e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   264ec:	ldr	r2, [r3, #28]
   264f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   264f4:	cmp	r2, r3
   264f8:	movle	r3, #1
   264fc:	movgt	r3, #0
   26500:	uxtb	r3, r3
   26504:	cmp	r3, #0
   26508:	beq	2656c <__assert_fail@plt+0x1524c>
   2650c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26510:	ldr	r2, [r3, #28]
   26514:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26518:	ldr	r3, [r3, #48]	; 0x30
   2651c:	cmp	r2, r3
   26520:	bge	2656c <__assert_fail@plt+0x1524c>
   26524:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26528:	add	r3, r3, #1
   2652c:	mov	r1, r3
   26530:	ldr	r0, [fp, #-72]	; 0xffffffb8
   26534:	bl	2e244 <__assert_fail@plt+0x1cf24>
   26538:	mov	r3, r0
   2653c:	str	r3, [fp, #-64]	; 0xffffffc0
   26540:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26544:	cmp	r3, #0
   26548:	movne	r3, #1
   2654c:	moveq	r3, #0
   26550:	uxtb	r3, r3
   26554:	cmp	r3, #0
   26558:	beq	2656c <__assert_fail@plt+0x1524c>
   2655c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26560:	cmp	r3, #12
   26564:	mvn	r3, #1
   26568:	b	26728 <__assert_fail@plt+0x15408>
   2656c:	sub	r3, fp, #64	; 0x40
   26570:	ldr	r2, [fp, #-16]
   26574:	ldr	r1, [fp, #-72]	; 0xffffffb8
   26578:	mov	r0, r3
   2657c:	bl	29a80 <__assert_fail@plt+0x18760>
   26580:	str	r0, [fp, #-16]
   26584:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26588:	ldr	r3, [r3, #100]	; 0x64
   2658c:	cmp	r3, #0
   26590:	beq	265ac <__assert_fail@plt+0x1528c>
   26594:	sub	r3, fp, #64	; 0x40
   26598:	ldr	r2, [fp, #-16]
   2659c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   265a0:	mov	r0, r3
   265a4:	bl	29c30 <__assert_fail@plt+0x18910>
   265a8:	str	r0, [fp, #-16]
   265ac:	ldr	r3, [fp, #-16]
   265b0:	cmp	r3, #0
   265b4:	bne	2662c <__assert_fail@plt+0x1530c>
   265b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   265bc:	cmp	r3, #0
   265c0:	movne	r3, #1
   265c4:	moveq	r3, #0
   265c8:	uxtb	r3, r3
   265cc:	cmp	r3, #0
   265d0:	beq	265dc <__assert_fail@plt+0x152bc>
   265d4:	mvn	r3, #1
   265d8:	b	26728 <__assert_fail@plt+0x15408>
   265dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   265e0:	ldr	r3, [r3, #100]	; 0x64
   265e4:	cmp	r3, #0
   265e8:	beq	26700 <__assert_fail@plt+0x153e0>
   265ec:	ldr	r3, [fp, #-8]
   265f0:	cmp	r3, #0
   265f4:	beq	2660c <__assert_fail@plt+0x152ec>
   265f8:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   265fc:	eor	r3, r3, #1
   26600:	uxtb	r3, r3
   26604:	cmp	r3, #0
   26608:	bne	26700 <__assert_fail@plt+0x153e0>
   2660c:	sub	r3, fp, #64	; 0x40
   26610:	ldr	r1, [fp, #-72]	; 0xffffffb8
   26614:	mov	r0, r3
   26618:	bl	29ee8 <__assert_fail@plt+0x18bc8>
   2661c:	str	r0, [fp, #-16]
   26620:	ldr	r3, [fp, #-16]
   26624:	cmp	r3, #0
   26628:	beq	26700 <__assert_fail@plt+0x153e0>
   2662c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   26630:	cmp	r3, #0
   26634:	beq	2665c <__assert_fail@plt+0x1533c>
   26638:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2663c:	ldr	r3, [fp, #-16]
   26640:	cmp	r2, r3
   26644:	bne	26654 <__assert_fail@plt+0x15334>
   26648:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2664c:	str	r3, [fp, #-24]	; 0xffffffe8
   26650:	b	2665c <__assert_fail@plt+0x1533c>
   26654:	mov	r3, #0
   26658:	strb	r3, [fp, #-17]	; 0xffffffef
   2665c:	ldr	r3, [fp, #-16]
   26660:	ldrb	r3, [r3, #52]	; 0x34
   26664:	and	r3, r3, #16
   26668:	uxtb	r3, r3
   2666c:	cmp	r3, #0
   26670:	beq	266e0 <__assert_fail@plt+0x153c0>
   26674:	ldr	r3, [fp, #-16]
   26678:	ldrb	r3, [r3, #52]	; 0x34
   2667c:	bic	r3, r3, #127	; 0x7f
   26680:	uxtb	r3, r3
   26684:	cmp	r3, #0
   26688:	beq	266b0 <__assert_fail@plt+0x15390>
   2668c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26690:	ldr	r3, [r3, #40]	; 0x28
   26694:	mov	r2, r3
   26698:	ldr	r1, [fp, #-16]
   2669c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   266a0:	bl	26858 <__assert_fail@plt+0x15538>
   266a4:	mov	r3, r0
   266a8:	cmp	r3, #0
   266ac:	beq	266e0 <__assert_fail@plt+0x153c0>
   266b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   266b4:	ldr	r3, [r3, #40]	; 0x28
   266b8:	str	r3, [fp, #-12]
   266bc:	mov	r3, #1
   266c0:	str	r3, [fp, #-8]
   266c4:	mov	r3, #0
   266c8:	str	r3, [fp, #-80]	; 0xffffffb0
   266cc:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   266d0:	eor	r3, r3, #1
   266d4:	uxtb	r3, r3
   266d8:	cmp	r3, #0
   266dc:	bne	266fc <__assert_fail@plt+0x153dc>
   266e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   266e4:	ldr	r2, [r3, #56]	; 0x38
   266e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   266ec:	ldr	r3, [r3, #40]	; 0x28
   266f0:	cmp	r2, r3
   266f4:	bgt	26494 <__assert_fail@plt+0x15174>
   266f8:	b	26700 <__assert_fail@plt+0x153e0>
   266fc:	nop			; (mov r0, r0)
   26700:	ldr	r3, [fp, #-80]	; 0xffffffb0
   26704:	cmp	r3, #0
   26708:	beq	26724 <__assert_fail@plt+0x15404>
   2670c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   26710:	ldr	r2, [r3]
   26714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26718:	add	r2, r2, r3
   2671c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   26720:	str	r2, [r3]
   26724:	ldr	r3, [fp, #-12]
   26728:	mov	r0, r3
   2672c:	sub	sp, fp, #4
   26730:	pop	{fp, pc}
   26734:	push	{fp}		; (str fp, [sp, #-4]!)
   26738:	add	fp, sp, #0
   2673c:	sub	sp, sp, #28
   26740:	str	r0, [fp, #-16]
   26744:	str	r1, [fp, #-20]	; 0xffffffec
   26748:	str	r2, [fp, #-24]	; 0xffffffe8
   2674c:	ldr	r3, [fp, #-16]
   26750:	ldr	r2, [r3]
   26754:	ldr	r3, [fp, #-20]	; 0xffffffec
   26758:	lsl	r3, r3, #3
   2675c:	add	r3, r2, r3
   26760:	ldrb	r3, [r3, #4]
   26764:	str	r3, [fp, #-8]
   26768:	ldr	r3, [fp, #-16]
   2676c:	ldr	r2, [r3]
   26770:	ldr	r3, [fp, #-20]	; 0xffffffec
   26774:	lsl	r3, r3, #3
   26778:	add	r3, r2, r3
   2677c:	ldr	r3, [r3, #4]
   26780:	lsr	r3, r3, #8
   26784:	lsl	r3, r3, #22
   26788:	lsr	r3, r3, #22
   2678c:	uxth	r3, r3
   26790:	str	r3, [fp, #-12]
   26794:	ldr	r3, [fp, #-8]
   26798:	cmp	r3, #2
   2679c:	beq	267a8 <__assert_fail@plt+0x15488>
   267a0:	mov	r3, #0
   267a4:	b	26848 <__assert_fail@plt+0x15528>
   267a8:	ldr	r3, [fp, #-12]
   267ac:	cmp	r3, #0
   267b0:	bne	267bc <__assert_fail@plt+0x1549c>
   267b4:	mov	r3, #1
   267b8:	b	26848 <__assert_fail@plt+0x15528>
   267bc:	ldr	r3, [fp, #-12]
   267c0:	and	r3, r3, #4
   267c4:	cmp	r3, #0
   267c8:	beq	267dc <__assert_fail@plt+0x154bc>
   267cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   267d0:	and	r3, r3, #1
   267d4:	cmp	r3, #0
   267d8:	beq	2683c <__assert_fail@plt+0x1551c>
   267dc:	ldr	r3, [fp, #-12]
   267e0:	and	r3, r3, #8
   267e4:	cmp	r3, #0
   267e8:	beq	267fc <__assert_fail@plt+0x154dc>
   267ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   267f0:	and	r3, r3, #1
   267f4:	cmp	r3, #0
   267f8:	bne	2683c <__assert_fail@plt+0x1551c>
   267fc:	ldr	r3, [fp, #-12]
   26800:	and	r3, r3, #32
   26804:	cmp	r3, #0
   26808:	beq	2681c <__assert_fail@plt+0x154fc>
   2680c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26810:	and	r3, r3, #2
   26814:	cmp	r3, #0
   26818:	beq	2683c <__assert_fail@plt+0x1551c>
   2681c:	ldr	r3, [fp, #-12]
   26820:	and	r3, r3, #128	; 0x80
   26824:	cmp	r3, #0
   26828:	beq	26844 <__assert_fail@plt+0x15524>
   2682c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26830:	and	r3, r3, #8
   26834:	cmp	r3, #0
   26838:	bne	26844 <__assert_fail@plt+0x15524>
   2683c:	mov	r3, #0
   26840:	b	26848 <__assert_fail@plt+0x15528>
   26844:	mov	r3, #1
   26848:	mov	r0, r3
   2684c:	add	sp, fp, #0
   26850:	pop	{fp}		; (ldr fp, [sp], #4)
   26854:	bx	lr
   26858:	push	{fp, lr}
   2685c:	add	fp, sp, #4
   26860:	sub	sp, sp, #24
   26864:	str	r0, [fp, #-16]
   26868:	str	r1, [fp, #-20]	; 0xffffffec
   2686c:	str	r2, [fp, #-24]	; 0xffffffe8
   26870:	ldr	r3, [fp, #-20]	; 0xffffffec
   26874:	ldrb	r3, [r3, #52]	; 0x34
   26878:	and	r3, r3, #16
   2687c:	uxtb	r3, r3
   26880:	cmp	r3, #0
   26884:	ldr	r0, [fp, #-16]
   26888:	ldr	r3, [fp, #-16]
   2688c:	ldr	r3, [r3, #88]	; 0x58
   26890:	mov	r2, r3
   26894:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26898:	bl	188b0 <__assert_fail@plt+0x7590>
   2689c:	str	r0, [fp, #-12]
   268a0:	mov	r3, #0
   268a4:	str	r3, [fp, #-8]
   268a8:	b	2690c <__assert_fail@plt+0x155ec>
   268ac:	ldr	r3, [fp, #-16]
   268b0:	ldr	r0, [r3, #84]	; 0x54
   268b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   268b8:	ldr	r2, [r3, #12]
   268bc:	ldr	r3, [fp, #-8]
   268c0:	lsl	r3, r3, #2
   268c4:	add	r3, r2, r3
   268c8:	ldr	r3, [r3]
   268cc:	ldr	r2, [fp, #-12]
   268d0:	mov	r1, r3
   268d4:	bl	26734 <__assert_fail@plt+0x15414>
   268d8:	mov	r3, r0
   268dc:	cmp	r3, #0
   268e0:	beq	26900 <__assert_fail@plt+0x155e0>
   268e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   268e8:	ldr	r2, [r3, #12]
   268ec:	ldr	r3, [fp, #-8]
   268f0:	lsl	r3, r3, #2
   268f4:	add	r3, r2, r3
   268f8:	ldr	r3, [r3]
   268fc:	b	26924 <__assert_fail@plt+0x15604>
   26900:	ldr	r3, [fp, #-8]
   26904:	add	r3, r3, #1
   26908:	str	r3, [fp, #-8]
   2690c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26910:	ldr	r2, [r3, #8]
   26914:	ldr	r3, [fp, #-8]
   26918:	cmp	r2, r3
   2691c:	bgt	268ac <__assert_fail@plt+0x1558c>
   26920:	mov	r3, #0
   26924:	mov	r0, r3
   26928:	sub	sp, fp, #4
   2692c:	pop	{fp, pc}
   26930:	push	{fp, lr}
   26934:	add	fp, sp, #4
   26938:	sub	sp, sp, #88	; 0x58
   2693c:	str	r0, [fp, #-64]	; 0xffffffc0
   26940:	str	r1, [fp, #-68]	; 0xffffffbc
   26944:	str	r2, [fp, #-72]	; 0xffffffb8
   26948:	str	r3, [fp, #-76]	; 0xffffffb4
   2694c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26950:	ldr	r3, [r3, #84]	; 0x54
   26954:	str	r3, [fp, #-20]	; 0xffffffec
   26958:	ldr	r3, [fp, #-20]	; 0xffffffec
   2695c:	ldr	r2, [r3]
   26960:	ldr	r3, [fp, #8]
   26964:	lsl	r3, r3, #3
   26968:	add	r3, r2, r3
   2696c:	ldrb	r3, [r3, #4]
   26970:	and	r3, r3, #8
   26974:	cmp	r3, #0
   26978:	beq	26b10 <__assert_fail@plt+0x157f0>
   2697c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26980:	ldr	r2, [r3, #100]	; 0x64
   26984:	ldr	r3, [fp, #4]
   26988:	ldr	r3, [r3]
   2698c:	lsl	r3, r3, #2
   26990:	add	r3, r2, r3
   26994:	ldr	r3, [r3]
   26998:	add	r3, r3, #4
   2699c:	str	r3, [fp, #-24]	; 0xffffffe8
   269a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   269a4:	ldr	r1, [r3, #20]
   269a8:	ldr	r2, [fp, #8]
   269ac:	mov	r3, r2
   269b0:	lsl	r3, r3, #1
   269b4:	add	r3, r3, r2
   269b8:	lsl	r3, r3, #2
   269bc:	add	r3, r1, r3
   269c0:	str	r3, [fp, #-28]	; 0xffffffe4
   269c4:	ldr	r1, [fp, #8]
   269c8:	ldr	r0, [fp, #12]
   269cc:	bl	19e3c <__assert_fail@plt+0x8b1c>
   269d0:	mov	r3, r0
   269d4:	cmp	r3, #0
   269d8:	bne	26a0c <__assert_fail@plt+0x156ec>
   269dc:	ldr	r1, [fp, #8]
   269e0:	ldr	r0, [fp, #12]
   269e4:	bl	19a2c <__assert_fail@plt+0x870c>
   269e8:	mov	r3, r0
   269ec:	strb	r3, [fp, #-29]	; 0xffffffe3
   269f0:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   269f4:	eor	r3, r3, #1
   269f8:	uxtb	r3, r3
   269fc:	cmp	r3, #0
   26a00:	beq	26a0c <__assert_fail@plt+0x156ec>
   26a04:	mvn	r3, #1
   26a08:	b	26ea8 <__assert_fail@plt+0x15b88>
   26a0c:	mvn	r3, #0
   26a10:	str	r3, [fp, #-8]
   26a14:	mov	r3, #0
   26a18:	str	r3, [fp, #-12]
   26a1c:	b	26aec <__assert_fail@plt+0x157cc>
   26a20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26a24:	ldr	r2, [r3, #8]
   26a28:	ldr	r3, [fp, #-12]
   26a2c:	lsl	r3, r3, #2
   26a30:	add	r3, r2, r3
   26a34:	ldr	r3, [r3]
   26a38:	str	r3, [fp, #-36]	; 0xffffffdc
   26a3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26a44:	bl	19e3c <__assert_fail@plt+0x8b1c>
   26a48:	mov	r3, r0
   26a4c:	cmp	r3, #0
   26a50:	beq	26adc <__assert_fail@plt+0x157bc>
   26a54:	ldr	r3, [fp, #-8]
   26a58:	cmn	r3, #1
   26a5c:	bne	26a6c <__assert_fail@plt+0x1574c>
   26a60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26a64:	str	r3, [fp, #-8]
   26a68:	b	26ae0 <__assert_fail@plt+0x157c0>
   26a6c:	ldr	r1, [fp, #-8]
   26a70:	ldr	r0, [fp, #12]
   26a74:	bl	19e3c <__assert_fail@plt+0x8b1c>
   26a78:	mov	r3, r0
   26a7c:	cmp	r3, #0
   26a80:	beq	26a8c <__assert_fail@plt+0x1576c>
   26a84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26a88:	b	26ea8 <__assert_fail@plt+0x15b88>
   26a8c:	ldr	r3, [fp, #16]
   26a90:	cmp	r3, #0
   26a94:	beq	26b04 <__assert_fail@plt+0x157e4>
   26a98:	ldr	r3, [fp, #4]
   26a9c:	ldr	r1, [r3]
   26aa0:	ldr	r3, [fp, #12]
   26aa4:	str	r3, [sp, #8]
   26aa8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   26aac:	str	r3, [sp, #4]
   26ab0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26ab4:	str	r3, [sp]
   26ab8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26abc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   26ac0:	ldr	r0, [fp, #16]
   26ac4:	bl	26eb4 <__assert_fail@plt+0x15b94>
   26ac8:	mov	r3, r0
   26acc:	cmp	r3, #0
   26ad0:	beq	26b04 <__assert_fail@plt+0x157e4>
   26ad4:	mvn	r3, #1
   26ad8:	b	26ea8 <__assert_fail@plt+0x15b88>
   26adc:	nop			; (mov r0, r0)
   26ae0:	ldr	r3, [fp, #-12]
   26ae4:	add	r3, r3, #1
   26ae8:	str	r3, [fp, #-12]
   26aec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26af0:	ldr	r2, [r3, #4]
   26af4:	ldr	r3, [fp, #-12]
   26af8:	cmp	r2, r3
   26afc:	bgt	26a20 <__assert_fail@plt+0x15700>
   26b00:	b	26b08 <__assert_fail@plt+0x157e8>
   26b04:	nop			; (mov r0, r0)
   26b08:	ldr	r3, [fp, #-8]
   26b0c:	b	26ea8 <__assert_fail@plt+0x15b88>
   26b10:	mov	r3, #0
   26b14:	str	r3, [fp, #-16]
   26b18:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b1c:	ldr	r2, [r3]
   26b20:	ldr	r3, [fp, #8]
   26b24:	lsl	r3, r3, #3
   26b28:	add	r3, r2, r3
   26b2c:	ldrb	r3, [r3, #4]
   26b30:	str	r3, [fp, #-40]	; 0xffffffd8
   26b34:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b38:	ldr	r2, [r3]
   26b3c:	ldr	r3, [fp, #8]
   26b40:	lsl	r3, r3, #3
   26b44:	add	r3, r2, r3
   26b48:	ldrb	r3, [r3, #6]
   26b4c:	and	r3, r3, #16
   26b50:	uxtb	r3, r3
   26b54:	cmp	r3, #0
   26b58:	beq	26b7c <__assert_fail@plt+0x1585c>
   26b5c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26b60:	ldr	r3, [fp, #4]
   26b64:	ldr	r3, [r3]
   26b68:	ldr	r1, [fp, #8]
   26b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   26b70:	bl	2da90 <__assert_fail@plt+0x1c770>
   26b74:	str	r0, [fp, #-16]
   26b78:	b	26d78 <__assert_fail@plt+0x15a58>
   26b7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26b80:	cmp	r3, #4
   26b84:	bne	26d78 <__assert_fail@plt+0x15a58>
   26b88:	ldr	r3, [fp, #-20]	; 0xffffffec
   26b8c:	ldr	r2, [r3]
   26b90:	ldr	r3, [fp, #8]
   26b94:	lsl	r3, r3, #3
   26b98:	add	r3, r2, r3
   26b9c:	ldr	r3, [r3]
   26ba0:	add	r3, r3, #1
   26ba4:	str	r3, [fp, #-44]	; 0xffffffd4
   26ba8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   26bac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26bb0:	cmp	r2, r3
   26bb4:	bge	26be8 <__assert_fail@plt+0x158c8>
   26bb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26bbc:	lsl	r3, r3, #3
   26bc0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   26bc4:	add	r3, r2, r3
   26bc8:	ldr	r2, [r3, #4]
   26bcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26bd0:	lsl	r3, r3, #3
   26bd4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   26bd8:	add	r3, r1, r3
   26bdc:	ldr	r3, [r3]
   26be0:	sub	r3, r2, r3
   26be4:	str	r3, [fp, #-16]
   26be8:	ldr	r3, [fp, #16]
   26bec:	cmp	r3, #0
   26bf0:	beq	26cd0 <__assert_fail@plt+0x159b0>
   26bf4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   26bf8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26bfc:	cmp	r2, r3
   26c00:	bge	26c3c <__assert_fail@plt+0x1591c>
   26c04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26c08:	lsl	r3, r3, #3
   26c0c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   26c10:	add	r3, r2, r3
   26c14:	ldr	r3, [r3]
   26c18:	cmn	r3, #1
   26c1c:	beq	26c3c <__assert_fail@plt+0x1591c>
   26c20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26c24:	lsl	r3, r3, #3
   26c28:	ldr	r2, [fp, #-72]	; 0xffffffb8
   26c2c:	add	r3, r2, r3
   26c30:	ldr	r3, [r3, #4]
   26c34:	cmn	r3, #1
   26c38:	bne	26c44 <__assert_fail@plt+0x15924>
   26c3c:	mvn	r3, #0
   26c40:	b	26ea8 <__assert_fail@plt+0x15b88>
   26c44:	ldr	r3, [fp, #-16]
   26c48:	cmp	r3, #0
   26c4c:	beq	26cd0 <__assert_fail@plt+0x159b0>
   26c50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26c54:	ldr	r3, [r3, #4]
   26c58:	str	r3, [fp, #-48]	; 0xffffffd0
   26c5c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26c60:	ldr	r2, [r3, #28]
   26c64:	ldr	r3, [fp, #4]
   26c68:	ldr	r3, [r3]
   26c6c:	sub	r2, r2, r3
   26c70:	ldr	r3, [fp, #-16]
   26c74:	cmp	r2, r3
   26c78:	blt	26cc8 <__assert_fail@plt+0x159a8>
   26c7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26c80:	lsl	r3, r3, #3
   26c84:	ldr	r2, [fp, #-72]	; 0xffffffb8
   26c88:	add	r3, r2, r3
   26c8c:	ldr	r3, [r3]
   26c90:	mov	r2, r3
   26c94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26c98:	add	r0, r3, r2
   26c9c:	ldr	r3, [fp, #4]
   26ca0:	ldr	r3, [r3]
   26ca4:	mov	r2, r3
   26ca8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26cac:	add	r3, r3, r2
   26cb0:	ldr	r2, [fp, #-16]
   26cb4:	mov	r1, r3
   26cb8:	bl	110ec <memcmp@plt>
   26cbc:	mov	r3, r0
   26cc0:	cmp	r3, #0
   26cc4:	beq	26cd0 <__assert_fail@plt+0x159b0>
   26cc8:	mvn	r3, #0
   26ccc:	b	26ea8 <__assert_fail@plt+0x15b88>
   26cd0:	ldr	r3, [fp, #-16]
   26cd4:	cmp	r3, #0
   26cd8:	bne	26d78 <__assert_fail@plt+0x15a58>
   26cdc:	ldr	r1, [fp, #8]
   26ce0:	ldr	r0, [fp, #12]
   26ce4:	bl	19a2c <__assert_fail@plt+0x870c>
   26ce8:	mov	r3, r0
   26cec:	strb	r3, [fp, #-49]	; 0xffffffcf
   26cf0:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   26cf4:	eor	r3, r3, #1
   26cf8:	uxtb	r3, r3
   26cfc:	cmp	r3, #0
   26d00:	beq	26d0c <__assert_fail@plt+0x159ec>
   26d04:	mvn	r3, #1
   26d08:	b	26ea8 <__assert_fail@plt+0x15b88>
   26d0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26d10:	ldr	r1, [r3, #20]
   26d14:	ldr	r2, [fp, #8]
   26d18:	mov	r3, r2
   26d1c:	lsl	r3, r3, #1
   26d20:	add	r3, r3, r2
   26d24:	lsl	r3, r3, #2
   26d28:	add	r3, r1, r3
   26d2c:	ldr	r3, [r3, #8]
   26d30:	ldr	r3, [r3]
   26d34:	str	r3, [fp, #-56]	; 0xffffffc8
   26d38:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26d3c:	ldr	r2, [r3, #100]	; 0x64
   26d40:	ldr	r3, [fp, #4]
   26d44:	ldr	r3, [r3]
   26d48:	lsl	r3, r3, #2
   26d4c:	add	r3, r2, r3
   26d50:	ldr	r3, [r3]
   26d54:	add	r3, r3, #4
   26d58:	ldr	r1, [fp, #-56]	; 0xffffffc8
   26d5c:	mov	r0, r3
   26d60:	bl	19e3c <__assert_fail@plt+0x8b1c>
   26d64:	mov	r3, r0
   26d68:	cmp	r3, #0
   26d6c:	beq	26d78 <__assert_fail@plt+0x15a58>
   26d70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26d74:	b	26ea8 <__assert_fail@plt+0x15b88>
   26d78:	ldr	r3, [fp, #-16]
   26d7c:	cmp	r3, #0
   26d80:	bne	26db8 <__assert_fail@plt+0x15a98>
   26d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   26d88:	ldr	r2, [r3]
   26d8c:	ldr	r3, [fp, #8]
   26d90:	lsl	r3, r3, #3
   26d94:	add	r1, r2, r3
   26d98:	ldr	r3, [fp, #4]
   26d9c:	ldr	r3, [r3]
   26da0:	mov	r2, r3
   26da4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   26da8:	bl	2dff0 <__assert_fail@plt+0x1ccd0>
   26dac:	mov	r3, r0
   26db0:	cmp	r3, #0
   26db4:	beq	26ea4 <__assert_fail@plt+0x15b84>
   26db8:	ldr	r3, [fp, #-20]	; 0xffffffec
   26dbc:	ldr	r2, [r3, #12]
   26dc0:	ldr	r3, [fp, #8]
   26dc4:	lsl	r3, r3, #2
   26dc8:	add	r3, r2, r3
   26dcc:	ldr	r3, [r3]
   26dd0:	str	r3, [fp, #-60]	; 0xffffffc4
   26dd4:	ldr	r3, [fp, #-16]
   26dd8:	cmp	r3, #0
   26ddc:	bne	26df0 <__assert_fail@plt+0x15ad0>
   26de0:	ldr	r3, [fp, #4]
   26de4:	ldr	r3, [r3]
   26de8:	add	r3, r3, #1
   26dec:	b	26e00 <__assert_fail@plt+0x15ae0>
   26df0:	ldr	r3, [fp, #4]
   26df4:	ldr	r2, [r3]
   26df8:	ldr	r3, [fp, #-16]
   26dfc:	add	r3, r2, r3
   26e00:	ldr	r2, [fp, #4]
   26e04:	str	r3, [r2]
   26e08:	ldr	r3, [fp, #16]
   26e0c:	cmp	r3, #0
   26e10:	beq	26e90 <__assert_fail@plt+0x15b70>
   26e14:	ldr	r3, [fp, #4]
   26e18:	ldr	r2, [r3]
   26e1c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26e20:	ldr	r3, [r3, #92]	; 0x5c
   26e24:	cmp	r2, r3
   26e28:	bgt	26e88 <__assert_fail@plt+0x15b68>
   26e2c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26e30:	ldr	r2, [r3, #100]	; 0x64
   26e34:	ldr	r3, [fp, #4]
   26e38:	ldr	r3, [r3]
   26e3c:	lsl	r3, r3, #2
   26e40:	add	r3, r2, r3
   26e44:	ldr	r3, [r3]
   26e48:	cmp	r3, #0
   26e4c:	beq	26e88 <__assert_fail@plt+0x15b68>
   26e50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26e54:	ldr	r2, [r3, #100]	; 0x64
   26e58:	ldr	r3, [fp, #4]
   26e5c:	ldr	r3, [r3]
   26e60:	lsl	r3, r3, #2
   26e64:	add	r3, r2, r3
   26e68:	ldr	r3, [r3]
   26e6c:	add	r3, r3, #4
   26e70:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26e74:	mov	r0, r3
   26e78:	bl	19e3c <__assert_fail@plt+0x8b1c>
   26e7c:	mov	r3, r0
   26e80:	cmp	r3, #0
   26e84:	bne	26e90 <__assert_fail@plt+0x15b70>
   26e88:	mvn	r3, #0
   26e8c:	b	26ea8 <__assert_fail@plt+0x15b88>
   26e90:	ldr	r3, [fp, #12]
   26e94:	mov	r2, #0
   26e98:	str	r2, [r3, #4]
   26e9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26ea0:	b	26ea8 <__assert_fail@plt+0x15b88>
   26ea4:	mvn	r3, #0
   26ea8:	mov	r0, r3
   26eac:	sub	sp, fp, #4
   26eb0:	pop	{fp, pc}
   26eb4:	push	{r4, fp, lr}
   26eb8:	add	fp, sp, #8
   26ebc:	sub	sp, sp, #36	; 0x24
   26ec0:	str	r0, [fp, #-32]	; 0xffffffe0
   26ec4:	str	r1, [fp, #-36]	; 0xffffffdc
   26ec8:	str	r2, [fp, #-40]	; 0xffffffd8
   26ecc:	str	r3, [fp, #-44]	; 0xffffffd4
   26ed0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26ed4:	ldr	r3, [r3]
   26ed8:	add	r1, r3, #1
   26edc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26ee0:	str	r1, [r2]
   26ee4:	str	r3, [fp, #-16]
   26ee8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26eec:	ldr	r2, [r3]
   26ef0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26ef4:	ldr	r3, [r3, #4]
   26ef8:	cmp	r2, r3
   26efc:	bne	26f60 <__assert_fail@plt+0x15c40>
   26f00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f04:	ldr	r0, [r3, #8]
   26f08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f0c:	ldr	r2, [r3, #4]
   26f10:	mov	r3, r2
   26f14:	lsl	r3, r3, #1
   26f18:	add	r3, r3, r2
   26f1c:	lsl	r3, r3, #4
   26f20:	mov	r1, r3
   26f24:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   26f28:	str	r0, [fp, #-20]	; 0xffffffec
   26f2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26f30:	cmp	r3, #0
   26f34:	bne	26f40 <__assert_fail@plt+0x15c20>
   26f38:	mov	r3, #12
   26f3c:	b	270d0 <__assert_fail@plt+0x15db0>
   26f40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f44:	ldr	r3, [r3, #4]
   26f48:	lsl	r2, r3, #1
   26f4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f50:	str	r2, [r3, #4]
   26f54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f58:	ldr	r2, [fp, #-20]	; 0xffffffec
   26f5c:	str	r2, [r3, #8]
   26f60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f64:	ldr	r1, [r3, #8]
   26f68:	ldr	r2, [fp, #-16]
   26f6c:	mov	r3, r2
   26f70:	lsl	r3, r3, #1
   26f74:	add	r3, r3, r2
   26f78:	lsl	r3, r3, #3
   26f7c:	add	r3, r1, r3
   26f80:	ldr	r2, [fp, #-36]	; 0xffffffdc
   26f84:	str	r2, [r3]
   26f88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f8c:	ldr	r1, [r3, #8]
   26f90:	ldr	r2, [fp, #-16]
   26f94:	mov	r3, r2
   26f98:	lsl	r3, r3, #1
   26f9c:	add	r3, r3, r2
   26fa0:	lsl	r3, r3, #3
   26fa4:	add	r3, r1, r3
   26fa8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26fac:	str	r2, [r3, #4]
   26fb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26fb4:	ldr	r1, [r3, #8]
   26fb8:	ldr	r2, [fp, #-16]
   26fbc:	mov	r3, r2
   26fc0:	lsl	r3, r3, #1
   26fc4:	add	r3, r3, r2
   26fc8:	lsl	r3, r3, #3
   26fcc:	add	r4, r1, r3
   26fd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26fd4:	lsl	r3, r3, #4
   26fd8:	mov	r0, r3
   26fdc:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   26fe0:	mov	r3, r0
   26fe4:	str	r3, [r4, #8]
   26fe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26fec:	ldr	r1, [r3, #8]
   26ff0:	ldr	r2, [fp, #-16]
   26ff4:	mov	r3, r2
   26ff8:	lsl	r3, r3, #1
   26ffc:	add	r3, r3, r2
   27000:	lsl	r3, r3, #3
   27004:	add	r3, r1, r3
   27008:	ldr	r3, [r3, #8]
   2700c:	cmp	r3, #0
   27010:	bne	2701c <__assert_fail@plt+0x15cfc>
   27014:	mov	r3, #12
   27018:	b	270d0 <__assert_fail@plt+0x15db0>
   2701c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27020:	ldr	r1, [r3, #8]
   27024:	ldr	r2, [fp, #-16]
   27028:	mov	r3, r2
   2702c:	lsl	r3, r3, #1
   27030:	add	r3, r3, r2
   27034:	lsl	r3, r3, #3
   27038:	add	r3, r1, r3
   2703c:	ldr	r0, [r3, #8]
   27040:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27044:	lsl	r3, r3, #3
   27048:	mov	r2, r3
   2704c:	ldr	r1, [fp, #4]
   27050:	bl	110a4 <memcpy@plt>
   27054:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27058:	ldr	r1, [r3, #8]
   2705c:	ldr	r2, [fp, #-16]
   27060:	mov	r3, r2
   27064:	lsl	r3, r3, #1
   27068:	add	r3, r3, r2
   2706c:	lsl	r3, r3, #3
   27070:	add	r3, r1, r3
   27074:	ldr	r2, [r3, #8]
   27078:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2707c:	lsl	r3, r3, #3
   27080:	add	r0, r2, r3
   27084:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27088:	lsl	r3, r3, #3
   2708c:	mov	r2, r3
   27090:	ldr	r1, [fp, #8]
   27094:	bl	110a4 <memcpy@plt>
   27098:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2709c:	ldr	r1, [r3, #8]
   270a0:	ldr	r2, [fp, #-16]
   270a4:	mov	r3, r2
   270a8:	lsl	r3, r3, #1
   270ac:	add	r3, r3, r2
   270b0:	lsl	r3, r3, #3
   270b4:	add	r3, r1, r3
   270b8:	add	r3, r3, #12
   270bc:	ldr	r1, [fp, #12]
   270c0:	mov	r0, r3
   270c4:	bl	18cd0 <__assert_fail@plt+0x79b0>
   270c8:	str	r0, [fp, #-24]	; 0xffffffe8
   270cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   270d0:	mov	r0, r3
   270d4:	sub	sp, fp, #8
   270d8:	pop	{r4, fp, pc}
   270dc:	push	{fp, lr}
   270e0:	add	fp, sp, #4
   270e4:	sub	sp, sp, #24
   270e8:	str	r0, [fp, #-16]
   270ec:	str	r1, [fp, #-20]	; 0xffffffec
   270f0:	str	r2, [fp, #-24]	; 0xffffffe8
   270f4:	str	r3, [fp, #-28]	; 0xffffffe4
   270f8:	ldr	r3, [fp, #-16]
   270fc:	cmp	r3, #0
   27100:	beq	27114 <__assert_fail@plt+0x15df4>
   27104:	ldr	r3, [fp, #-16]
   27108:	ldr	r3, [r3]
   2710c:	cmp	r3, #0
   27110:	bne	2711c <__assert_fail@plt+0x15dfc>
   27114:	mvn	r3, #0
   27118:	b	272a0 <__assert_fail@plt+0x15f80>
   2711c:	ldr	r3, [fp, #-16]
   27120:	ldr	r3, [r3]
   27124:	sub	r2, r3, #1
   27128:	ldr	r3, [fp, #-16]
   2712c:	str	r2, [r3]
   27130:	ldr	r3, [fp, #-16]
   27134:	ldr	r3, [r3]
   27138:	str	r3, [fp, #-8]
   2713c:	ldr	r3, [fp, #-16]
   27140:	ldr	r1, [r3, #8]
   27144:	ldr	r2, [fp, #-8]
   27148:	mov	r3, r2
   2714c:	lsl	r3, r3, #1
   27150:	add	r3, r3, r2
   27154:	lsl	r3, r3, #3
   27158:	add	r3, r1, r3
   2715c:	ldr	r2, [r3]
   27160:	ldr	r3, [fp, #-20]	; 0xffffffec
   27164:	str	r2, [r3]
   27168:	ldr	r3, [fp, #-16]
   2716c:	ldr	r1, [r3, #8]
   27170:	ldr	r2, [fp, #-8]
   27174:	mov	r3, r2
   27178:	lsl	r3, r3, #1
   2717c:	add	r3, r3, r2
   27180:	lsl	r3, r3, #3
   27184:	add	r3, r1, r3
   27188:	ldr	r1, [r3, #8]
   2718c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27190:	lsl	r3, r3, #3
   27194:	mov	r2, r3
   27198:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2719c:	bl	110a4 <memcpy@plt>
   271a0:	ldr	r3, [fp, #-16]
   271a4:	ldr	r1, [r3, #8]
   271a8:	ldr	r2, [fp, #-8]
   271ac:	mov	r3, r2
   271b0:	lsl	r3, r3, #1
   271b4:	add	r3, r3, r2
   271b8:	lsl	r3, r3, #3
   271bc:	add	r3, r1, r3
   271c0:	ldr	r2, [r3, #8]
   271c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   271c8:	lsl	r3, r3, #3
   271cc:	add	r1, r2, r3
   271d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   271d4:	lsl	r3, r3, #3
   271d8:	mov	r2, r3
   271dc:	ldr	r0, [fp, #4]
   271e0:	bl	110a4 <memcpy@plt>
   271e4:	ldr	r3, [fp, #8]
   271e8:	ldr	r3, [r3, #8]
   271ec:	mov	r0, r3
   271f0:	bl	31500 <__assert_fail@plt+0x201e0>
   271f4:	ldr	r3, [fp, #-16]
   271f8:	ldr	r1, [r3, #8]
   271fc:	ldr	r2, [fp, #-8]
   27200:	mov	r3, r2
   27204:	lsl	r3, r3, #1
   27208:	add	r3, r3, r2
   2720c:	lsl	r3, r3, #3
   27210:	add	r3, r1, r3
   27214:	ldr	r3, [r3, #8]
   27218:	mov	r0, r3
   2721c:	bl	31500 <__assert_fail@plt+0x201e0>
   27220:	ldr	r3, [fp, #-16]
   27224:	ldr	r1, [r3, #8]
   27228:	ldr	r2, [fp, #-8]
   2722c:	mov	r3, r2
   27230:	lsl	r3, r3, #1
   27234:	add	r3, r3, r2
   27238:	lsl	r3, r3, #3
   2723c:	add	r3, r1, r3
   27240:	ldr	r2, [fp, #8]
   27244:	mov	ip, r2
   27248:	add	r3, r3, #12
   2724c:	ldm	r3, {r0, r1, r2}
   27250:	stm	ip, {r0, r1, r2}
   27254:	ldr	r3, [fp, #-16]
   27258:	ldr	r1, [r3, #8]
   2725c:	ldr	r2, [fp, #-8]
   27260:	mov	r3, r2
   27264:	lsl	r3, r3, #1
   27268:	add	r3, r3, r2
   2726c:	lsl	r3, r3, #3
   27270:	add	r3, r1, r3
   27274:	ldr	r3, [r3, #4]
   27278:	cmp	r3, #0
   2727c:	ldr	r3, [fp, #-16]
   27280:	ldr	r1, [r3, #8]
   27284:	ldr	r2, [fp, #-8]
   27288:	mov	r3, r2
   2728c:	lsl	r3, r3, #1
   27290:	add	r3, r3, r2
   27294:	lsl	r3, r3, #3
   27298:	add	r3, r1, r3
   2729c:	ldr	r3, [r3, #4]
   272a0:	mov	r0, r3
   272a4:	sub	sp, fp, #4
   272a8:	pop	{fp, pc}
   272ac:	push	{fp}		; (str fp, [sp, #-4]!)
   272b0:	add	fp, sp, #0
   272b4:	sub	sp, sp, #12
   272b8:	str	r0, [fp, #-8]
   272bc:	str	r1, [fp, #-12]
   272c0:	nop			; (mov r0, r0)
   272c4:	add	sp, fp, #0
   272c8:	pop	{fp}		; (ldr fp, [sp], #4)
   272cc:	bx	lr
   272d0:	push	{fp, lr}
   272d4:	add	fp, sp, #4
   272d8:	sub	sp, sp, #8
   272dc:	str	r0, [fp, #-8]
   272e0:	ldr	r3, [fp, #-8]
   272e4:	ldr	r2, [r3, #8]
   272e8:	ldr	r3, [fp, #-8]
   272ec:	add	r3, r3, #12
   272f0:	cmp	r2, r3
   272f4:	beq	27308 <__assert_fail@plt+0x15fe8>
   272f8:	ldr	r3, [fp, #-8]
   272fc:	ldr	r3, [r3, #8]
   27300:	mov	r0, r3
   27304:	bl	31500 <__assert_fail@plt+0x201e0>
   27308:	nop			; (mov r0, r0)
   2730c:	sub	sp, fp, #4
   27310:	pop	{fp, pc}
   27314:	push	{fp}		; (str fp, [sp, #-4]!)
   27318:	add	fp, sp, #0
   2731c:	sub	sp, sp, #12
   27320:	str	r0, [fp, #-8]
   27324:	ldr	r3, [fp, #-8]
   27328:	mov	r2, #0
   2732c:	str	r2, [r3]
   27330:	ldr	r3, [fp, #-8]
   27334:	mov	r2, #16
   27338:	str	r2, [r3, #4]
   2733c:	ldr	r3, [fp, #-8]
   27340:	add	r2, r3, #12
   27344:	ldr	r3, [fp, #-8]
   27348:	str	r2, [r3, #8]
   2734c:	nop			; (mov r0, r0)
   27350:	add	sp, fp, #0
   27354:	pop	{fp}		; (ldr fp, [sp], #4)
   27358:	bx	lr
   2735c:	push	{fp, lr}
   27360:	add	fp, sp, #4
   27364:	sub	sp, sp, #8
   27368:	str	r0, [fp, #-8]
   2736c:	ldr	r3, [fp, #-8]
   27370:	ldr	r2, [r3, #8]
   27374:	ldr	r3, [fp, #-8]
   27378:	ldr	r3, [r3]
   2737c:	mov	r1, r3
   27380:	mov	r0, r2
   27384:	bl	272ac <__assert_fail@plt+0x15f8c>
   27388:	ldr	r0, [fp, #-8]
   2738c:	bl	272d0 <__assert_fail@plt+0x15fb0>
   27390:	ldr	r0, [fp, #-8]
   27394:	bl	27314 <__assert_fail@plt+0x15ff4>
   27398:	nop			; (mov r0, r0)
   2739c:	sub	sp, fp, #4
   273a0:	pop	{fp, pc}
   273a4:	push	{fp, lr}
   273a8:	add	fp, sp, #4
   273ac:	sub	sp, sp, #8
   273b0:	str	r0, [fp, #-8]
   273b4:	ldr	r3, [fp, #-8]
   273b8:	ldr	r2, [r3, #8]
   273bc:	ldr	r3, [fp, #-8]
   273c0:	ldr	r3, [r3]
   273c4:	mov	r1, r3
   273c8:	mov	r0, r2
   273cc:	bl	272ac <__assert_fail@plt+0x15f8c>
   273d0:	ldr	r0, [fp, #-8]
   273d4:	bl	272d0 <__assert_fail@plt+0x15fb0>
   273d8:	ldr	r3, [fp, #-8]
   273dc:	add	r2, r3, #12
   273e0:	ldr	r3, [fp, #-8]
   273e4:	str	r2, [r3, #8]
   273e8:	ldr	r3, [fp, #-8]
   273ec:	mov	r2, #0
   273f0:	str	r2, [r3]
   273f4:	bl	15b48 <__assert_fail@plt+0x4828>
   273f8:	mov	r2, r0
   273fc:	ldr	r3, [fp, #-8]
   27400:	str	r2, [r3, #4]
   27404:	nop			; (mov r0, r0)
   27408:	sub	sp, fp, #4
   2740c:	pop	{fp, pc}
   27410:	push	{fp}		; (str fp, [sp, #-4]!)
   27414:	add	fp, sp, #0
   27418:	sub	sp, sp, #12
   2741c:	str	r0, [fp, #-8]
   27420:	ldr	r3, [fp, #-8]
   27424:	ldr	r3, [r3, #8]
   27428:	mov	r0, r3
   2742c:	add	sp, fp, #0
   27430:	pop	{fp}		; (ldr fp, [sp], #4)
   27434:	bx	lr
   27438:	push	{fp, lr}
   2743c:	add	fp, sp, #4
   27440:	sub	sp, sp, #16
   27444:	str	r0, [fp, #-8]
   27448:	sub	r3, fp, #16
   2744c:	stm	r3, {r1, r2}
   27450:	ldr	r0, [fp, #-8]
   27454:	ldr	r3, [fp, #-8]
   27458:	add	r3, r3, #12
   2745c:	mov	r2, #8
   27460:	mov	r1, r3
   27464:	bl	31004 <__assert_fail@plt+0x1fce4>
   27468:	mov	r3, r0
   2746c:	eor	r3, r3, #1
   27470:	uxtb	r3, r3
   27474:	cmp	r3, #0
   27478:	beq	27488 <__assert_fail@plt+0x16168>
   2747c:	ldr	r0, [fp, #-8]
   27480:	bl	273a4 <__assert_fail@plt+0x16084>
   27484:	b	274bc <__assert_fail@plt+0x1619c>
   27488:	ldr	r3, [fp, #-8]
   2748c:	ldr	r2, [r3, #8]
   27490:	ldr	r3, [fp, #-8]
   27494:	ldr	r3, [r3]
   27498:	add	r0, r3, #1
   2749c:	ldr	r1, [fp, #-8]
   274a0:	str	r0, [r1]
   274a4:	lsl	r3, r3, #3
   274a8:	add	r3, r2, r3
   274ac:	mov	r2, r3
   274b0:	sub	r3, fp, #16
   274b4:	ldm	r3, {r0, r1}
   274b8:	stm	r2, {r0, r1}
   274bc:	sub	sp, fp, #4
   274c0:	pop	{fp, pc}
   274c4:	push	{fp}		; (str fp, [sp, #-4]!)
   274c8:	add	fp, sp, #0
   274cc:	sub	sp, sp, #20
   274d0:	str	r0, [fp, #-16]
   274d4:	ldr	r3, [fp, #-16]
   274d8:	ldr	r2, [r3, #8]
   274dc:	ldr	r3, [fp, #-16]
   274e0:	ldr	r3, [r3]
   274e4:	lsl	r3, r3, #3
   274e8:	add	r3, r2, r3
   274ec:	str	r3, [fp, #-8]
   274f0:	ldr	r3, [fp, #-16]
   274f4:	ldr	r3, [r3]
   274f8:	add	r2, r3, #1
   274fc:	ldr	r3, [fp, #-16]
   27500:	str	r2, [r3]
   27504:	ldr	r3, [fp, #-8]
   27508:	mov	r0, r3
   2750c:	add	sp, fp, #0
   27510:	pop	{fp}		; (ldr fp, [sp], #4)
   27514:	bx	lr
   27518:	push	{fp, lr}
   2751c:	add	fp, sp, #4
   27520:	sub	sp, sp, #8
   27524:	str	r0, [fp, #-8]
   27528:	ldr	r0, [fp, #-8]
   2752c:	ldr	r3, [fp, #-8]
   27530:	add	r3, r3, #12
   27534:	mov	r2, #8
   27538:	mov	r1, r3
   2753c:	bl	31004 <__assert_fail@plt+0x1fce4>
   27540:	mov	r3, r0
   27544:	eor	r3, r3, #1
   27548:	uxtb	r3, r3
   2754c:	cmp	r3, #0
   27550:	beq	27564 <__assert_fail@plt+0x16244>
   27554:	ldr	r0, [fp, #-8]
   27558:	bl	273a4 <__assert_fail@plt+0x16084>
   2755c:	mov	r3, #0
   27560:	b	27570 <__assert_fail@plt+0x16250>
   27564:	ldr	r0, [fp, #-8]
   27568:	bl	274c4 <__assert_fail@plt+0x161a4>
   2756c:	mov	r3, r0
   27570:	mov	r0, r3
   27574:	sub	sp, fp, #4
   27578:	pop	{fp, pc}
   2757c:	push	{fp, lr}
   27580:	add	fp, sp, #4
   27584:	sub	sp, sp, #16
   27588:	str	r0, [fp, #-16]
   2758c:	str	r1, [fp, #-20]	; 0xffffffec
   27590:	ldr	r3, [fp, #-16]
   27594:	ldr	r2, [r3]
   27598:	ldr	r3, [fp, #-20]	; 0xffffffec
   2759c:	cmp	r2, r3
   275a0:	bcs	275e8 <__assert_fail@plt+0x162c8>
   275a4:	ldr	r0, [fp, #-16]
   275a8:	ldr	r3, [fp, #-16]
   275ac:	add	r2, r3, #12
   275b0:	mov	r3, #8
   275b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   275b8:	bl	31374 <__assert_fail@plt+0x20054>
   275bc:	mov	r3, r0
   275c0:	strb	r3, [fp, #-5]
   275c4:	ldrb	r3, [fp, #-5]
   275c8:	eor	r3, r3, #1
   275cc:	uxtb	r3, r3
   275d0:	cmp	r3, #0
   275d4:	beq	275e0 <__assert_fail@plt+0x162c0>
   275d8:	ldr	r0, [fp, #-16]
   275dc:	bl	273a4 <__assert_fail@plt+0x16084>
   275e0:	ldrb	r3, [fp, #-5]
   275e4:	b	27624 <__assert_fail@plt+0x16304>
   275e8:	ldr	r3, [fp, #-16]
   275ec:	ldr	r2, [r3, #8]
   275f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   275f4:	lsl	r3, r3, #3
   275f8:	add	r0, r2, r3
   275fc:	ldr	r3, [fp, #-16]
   27600:	ldr	r2, [r3]
   27604:	ldr	r3, [fp, #-20]	; 0xffffffec
   27608:	sub	r3, r2, r3
   2760c:	mov	r1, r3
   27610:	bl	272ac <__assert_fail@plt+0x15f8c>
   27614:	ldr	r3, [fp, #-16]
   27618:	ldr	r2, [fp, #-20]	; 0xffffffec
   2761c:	str	r2, [r3]
   27620:	mov	r3, #1
   27624:	mov	r0, r3
   27628:	sub	sp, fp, #4
   2762c:	pop	{fp, pc}
   27630:	push	{fp}		; (str fp, [sp, #-4]!)
   27634:	add	fp, sp, #0
   27638:	sub	sp, sp, #20
   2763c:	str	r0, [fp, #-16]
   27640:	ldr	r3, [fp, #-16]
   27644:	ldr	r3, [r3]
   27648:	cmp	r3, #0
   2764c:	beq	2766c <__assert_fail@plt+0x1634c>
   27650:	ldr	r3, [fp, #-16]
   27654:	ldr	r3, [r3]
   27658:	sub	r3, r3, #1
   2765c:	str	r3, [fp, #-8]
   27660:	ldr	r3, [fp, #-16]
   27664:	ldr	r2, [fp, #-8]
   27668:	str	r2, [r3]
   2766c:	nop			; (mov r0, r0)
   27670:	add	sp, fp, #0
   27674:	pop	{fp}		; (ldr fp, [sp], #4)
   27678:	bx	lr
   2767c:	push	{fp, lr}
   27680:	add	fp, sp, #4
   27684:	sub	sp, sp, #8
   27688:	str	r0, [fp, #-8]
   2768c:	ldr	r3, [fp, #-8]
   27690:	ldr	r2, [r3, #8]
   27694:	ldr	r3, [fp, #-8]
   27698:	ldr	r3, [r3]
   2769c:	mov	r1, r3
   276a0:	mov	r0, r2
   276a4:	bl	272ac <__assert_fail@plt+0x15f8c>
   276a8:	ldr	r3, [fp, #-8]
   276ac:	mov	r2, #0
   276b0:	str	r2, [r3]
   276b4:	nop			; (mov r0, r0)
   276b8:	sub	sp, fp, #4
   276bc:	pop	{fp, pc}
   276c0:	push	{fp, lr}
   276c4:	add	fp, sp, #4
   276c8:	sub	sp, sp, #16
   276cc:	str	r0, [fp, #-16]
   276d0:	str	r1, [fp, #-20]	; 0xffffffec
   276d4:	ldr	r0, [fp, #-16]
   276d8:	ldr	r3, [fp, #-16]
   276dc:	add	r1, r3, #12
   276e0:	sub	r3, fp, #12
   276e4:	mov	r2, #8
   276e8:	bl	31238 <__assert_fail@plt+0x1ff18>
   276ec:	mov	r3, r0
   276f0:	cmp	r3, #0
   276f4:	beq	27720 <__assert_fail@plt+0x16400>
   276f8:	ldr	r0, [fp, #-16]
   276fc:	bl	27314 <__assert_fail@plt+0x15ff4>
   27700:	ldr	r3, [fp, #-20]	; 0xffffffec
   27704:	cmp	r3, #0
   27708:	beq	27718 <__assert_fail@plt+0x163f8>
   2770c:	ldr	r2, [fp, #-8]
   27710:	ldr	r3, [fp, #-20]	; 0xffffffec
   27714:	str	r2, [r3]
   27718:	ldr	r3, [fp, #-12]
   2771c:	b	2773c <__assert_fail@plt+0x1641c>
   27720:	ldr	r0, [fp, #-16]
   27724:	bl	2735c <__assert_fail@plt+0x1603c>
   27728:	bl	11224 <__errno_location@plt>
   2772c:	mov	r2, r0
   27730:	mov	r3, #12
   27734:	str	r3, [r2]
   27738:	mov	r3, #0
   2773c:	mov	r0, r3
   27740:	sub	sp, fp, #4
   27744:	pop	{fp, pc}
   27748:	push	{fp, lr}
   2774c:	add	fp, sp, #4
   27750:	sub	sp, sp, #224	; 0xe0
   27754:	str	r0, [fp, #-200]	; 0xffffff38
   27758:	str	r1, [fp, #-204]	; 0xffffff34
   2775c:	str	r2, [fp, #-208]	; 0xffffff30
   27760:	str	r3, [fp, #-212]	; 0xffffff2c
   27764:	ldr	r3, [fp, #-200]	; 0xffffff38
   27768:	ldr	r3, [r3]
   2776c:	str	r3, [fp, #-20]	; 0xffffffec
   27770:	mov	r3, #0
   27774:	str	r3, [fp, #-52]	; 0xffffffcc
   27778:	mov	r3, #2
   2777c:	str	r3, [fp, #-48]	; 0xffffffd0
   27780:	mov	r3, #0
   27784:	str	r3, [fp, #-44]	; 0xffffffd4
   27788:	sub	r3, fp, #192	; 0xc0
   2778c:	mov	r0, r3
   27790:	bl	27314 <__assert_fail@plt+0x15ff4>
   27794:	ldr	r3, [fp, #-208]	; 0xffffff30
   27798:	cmp	r3, #1
   2779c:	ldr	r3, [fp, #-204]	; 0xffffff34
   277a0:	ldr	r3, [r3, #100]	; 0x64
   277a4:	cmp	r3, #0
   277a8:	ldrb	r3, [fp, #4]
   277ac:	cmp	r3, #0
   277b0:	beq	27808 <__assert_fail@plt+0x164e8>
   277b4:	sub	r3, fp, #52	; 0x34
   277b8:	str	r3, [fp, #-12]
   277bc:	ldr	r3, [fp, #-12]
   277c0:	ldr	r3, [r3, #4]
   277c4:	mov	r2, r3
   277c8:	mov	r3, r2
   277cc:	lsl	r3, r3, #1
   277d0:	add	r3, r3, r2
   277d4:	lsl	r3, r3, #3
   277d8:	mov	r0, r3
   277dc:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   277e0:	mov	r3, r0
   277e4:	mov	r2, r3
   277e8:	ldr	r3, [fp, #-12]
   277ec:	str	r2, [r3, #8]
   277f0:	ldr	r3, [fp, #-12]
   277f4:	ldr	r3, [r3, #8]
   277f8:	cmp	r3, #0
   277fc:	bne	27810 <__assert_fail@plt+0x164f0>
   27800:	mov	r3, #12
   27804:	b	27b14 <__assert_fail@plt+0x167f4>
   27808:	mov	r3, #0
   2780c:	str	r3, [fp, #-12]
   27810:	ldr	r3, [fp, #-20]	; 0xffffffec
   27814:	ldr	r3, [r3, #72]	; 0x48
   27818:	str	r3, [fp, #-8]
   2781c:	sub	r3, fp, #40	; 0x28
   27820:	mov	r2, #12
   27824:	mov	r1, #0
   27828:	mov	r0, r3
   2782c:	bl	11248 <memset@plt>
   27830:	sub	r3, fp, #192	; 0xc0
   27834:	ldr	r1, [fp, #-208]	; 0xffffff30
   27838:	mov	r0, r3
   2783c:	bl	2757c <__assert_fail@plt+0x1625c>
   27840:	mov	r3, r0
   27844:	eor	r3, r3, #1
   27848:	uxtb	r3, r3
   2784c:	cmp	r3, #0
   27850:	beq	27870 <__assert_fail@plt+0x16550>
   27854:	sub	r3, fp, #192	; 0xc0
   27858:	mov	r0, r3
   2785c:	bl	2735c <__assert_fail@plt+0x1603c>
   27860:	ldr	r0, [fp, #-12]
   27864:	bl	27b20 <__assert_fail@plt+0x16800>
   27868:	mov	r3, #12
   2786c:	b	27b14 <__assert_fail@plt+0x167f4>
   27870:	sub	r3, fp, #192	; 0xc0
   27874:	mov	r0, r3
   27878:	bl	27410 <__assert_fail@plt+0x160f0>
   2787c:	str	r0, [fp, #-24]	; 0xffffffe8
   27880:	ldr	r3, [fp, #-208]	; 0xffffff30
   27884:	lsl	r3, r3, #3
   27888:	mov	r2, r3
   2788c:	ldr	r1, [fp, #-212]	; 0xffffff2c
   27890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27894:	bl	110a4 <memcpy@plt>
   27898:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2789c:	ldr	r3, [r3]
   278a0:	str	r3, [fp, #-28]	; 0xffffffe4
   278a4:	b	27adc <__assert_fail@plt+0x167bc>
   278a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   278ac:	ldr	r2, [fp, #-208]	; 0xffffff30
   278b0:	str	r2, [sp, #4]
   278b4:	str	r3, [sp]
   278b8:	ldr	r3, [fp, #-8]
   278bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   278c0:	ldr	r1, [fp, #-212]	; 0xffffff2c
   278c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   278c8:	bl	27be0 <__assert_fail@plt+0x168c0>
   278cc:	ldr	r3, [fp, #-212]	; 0xffffff2c
   278d0:	ldr	r2, [r3, #4]
   278d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   278d8:	cmp	r2, r3
   278dc:	bne	278f4 <__assert_fail@plt+0x165d4>
   278e0:	ldr	r3, [fp, #-204]	; 0xffffff34
   278e4:	ldr	r2, [r3, #96]	; 0x60
   278e8:	ldr	r3, [fp, #-8]
   278ec:	cmp	r2, r3
   278f0:	beq	2791c <__assert_fail@plt+0x165fc>
   278f4:	ldr	r3, [fp, #-12]
   278f8:	cmp	r3, #0
   278fc:	beq	279f0 <__assert_fail@plt+0x166d0>
   27900:	sub	r3, fp, #40	; 0x28
   27904:	ldr	r1, [fp, #-8]
   27908:	mov	r0, r3
   2790c:	bl	19e3c <__assert_fail@plt+0x8b1c>
   27910:	mov	r3, r0
   27914:	cmp	r3, #0
   27918:	beq	279f0 <__assert_fail@plt+0x166d0>
   2791c:	mvn	r3, #0
   27920:	str	r3, [fp, #-8]
   27924:	ldr	r3, [fp, #-12]
   27928:	cmp	r3, #0
   2792c:	beq	279bc <__assert_fail@plt+0x1669c>
   27930:	mov	r3, #0
   27934:	str	r3, [fp, #-16]
   27938:	b	279ac <__assert_fail@plt+0x1668c>
   2793c:	ldr	r3, [fp, #-16]
   27940:	lsl	r3, r3, #3
   27944:	ldr	r2, [fp, #-212]	; 0xffffff2c
   27948:	add	r3, r2, r3
   2794c:	ldr	r3, [r3]
   27950:	cmp	r3, #0
   27954:	blt	279a0 <__assert_fail@plt+0x16680>
   27958:	ldr	r3, [fp, #-16]
   2795c:	lsl	r3, r3, #3
   27960:	ldr	r2, [fp, #-212]	; 0xffffff2c
   27964:	add	r3, r2, r3
   27968:	ldr	r3, [r3, #4]
   2796c:	cmn	r3, #1
   27970:	bne	279a0 <__assert_fail@plt+0x16680>
   27974:	ldr	r2, [fp, #-208]	; 0xffffff30
   27978:	sub	r1, fp, #28
   2797c:	sub	r3, fp, #40	; 0x28
   27980:	str	r3, [sp, #4]
   27984:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27988:	str	r3, [sp]
   2798c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   27990:	ldr	r0, [fp, #-12]
   27994:	bl	270dc <__assert_fail@plt+0x15dbc>
   27998:	str	r0, [fp, #-8]
   2799c:	b	279bc <__assert_fail@plt+0x1669c>
   279a0:	ldr	r3, [fp, #-16]
   279a4:	add	r3, r3, #1
   279a8:	str	r3, [fp, #-16]
   279ac:	ldr	r2, [fp, #-16]
   279b0:	ldr	r3, [fp, #-208]	; 0xffffff30
   279b4:	cmp	r2, r3
   279b8:	bcc	2793c <__assert_fail@plt+0x1661c>
   279bc:	ldr	r3, [fp, #-8]
   279c0:	cmp	r3, #0
   279c4:	bge	279f0 <__assert_fail@plt+0x166d0>
   279c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   279cc:	mov	r0, r3
   279d0:	bl	31500 <__assert_fail@plt+0x201e0>
   279d4:	sub	r3, fp, #192	; 0xc0
   279d8:	mov	r0, r3
   279dc:	bl	2735c <__assert_fail@plt+0x1603c>
   279e0:	ldr	r0, [fp, #-12]
   279e4:	bl	27b20 <__assert_fail@plt+0x16800>
   279e8:	mov	r3, r0
   279ec:	b	27b14 <__assert_fail@plt+0x167f4>
   279f0:	ldr	r1, [fp, #-208]	; 0xffffff30
   279f4:	ldr	r3, [fp, #-12]
   279f8:	str	r3, [sp, #12]
   279fc:	sub	r3, fp, #40	; 0x28
   27a00:	str	r3, [sp, #8]
   27a04:	ldr	r3, [fp, #-8]
   27a08:	str	r3, [sp, #4]
   27a0c:	sub	r3, fp, #28
   27a10:	str	r3, [sp]
   27a14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27a18:	ldr	r2, [fp, #-212]	; 0xffffff2c
   27a1c:	ldr	r0, [fp, #-204]	; 0xffffff34
   27a20:	bl	26930 <__assert_fail@plt+0x15610>
   27a24:	str	r0, [fp, #-8]
   27a28:	ldr	r3, [fp, #-8]
   27a2c:	lsr	r3, r3, #31
   27a30:	uxtb	r3, r3
   27a34:	cmp	r3, #0
   27a38:	beq	27adc <__assert_fail@plt+0x167bc>
   27a3c:	ldr	r3, [fp, #-8]
   27a40:	cmn	r3, #2
   27a44:	moveq	r3, #1
   27a48:	movne	r3, #0
   27a4c:	uxtb	r3, r3
   27a50:	cmp	r3, #0
   27a54:	beq	27a80 <__assert_fail@plt+0x16760>
   27a58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27a5c:	mov	r0, r3
   27a60:	bl	31500 <__assert_fail@plt+0x201e0>
   27a64:	sub	r3, fp, #192	; 0xc0
   27a68:	mov	r0, r3
   27a6c:	bl	2735c <__assert_fail@plt+0x1603c>
   27a70:	ldr	r0, [fp, #-12]
   27a74:	bl	27b20 <__assert_fail@plt+0x16800>
   27a78:	mov	r3, #12
   27a7c:	b	27b14 <__assert_fail@plt+0x167f4>
   27a80:	ldr	r2, [fp, #-208]	; 0xffffff30
   27a84:	sub	r1, fp, #28
   27a88:	sub	r3, fp, #40	; 0x28
   27a8c:	str	r3, [sp, #4]
   27a90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27a94:	str	r3, [sp]
   27a98:	ldr	r3, [fp, #-212]	; 0xffffff2c
   27a9c:	ldr	r0, [fp, #-12]
   27aa0:	bl	270dc <__assert_fail@plt+0x15dbc>
   27aa4:	str	r0, [fp, #-8]
   27aa8:	ldr	r3, [fp, #-8]
   27aac:	cmp	r3, #0
   27ab0:	bge	27adc <__assert_fail@plt+0x167bc>
   27ab4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27ab8:	mov	r0, r3
   27abc:	bl	31500 <__assert_fail@plt+0x201e0>
   27ac0:	sub	r3, fp, #192	; 0xc0
   27ac4:	mov	r0, r3
   27ac8:	bl	2735c <__assert_fail@plt+0x1603c>
   27acc:	ldr	r0, [fp, #-12]
   27ad0:	bl	27b20 <__assert_fail@plt+0x16800>
   27ad4:	mov	r3, #1
   27ad8:	b	27b14 <__assert_fail@plt+0x167f4>
   27adc:	ldr	r3, [fp, #-212]	; 0xffffff2c
   27ae0:	ldr	r2, [r3, #4]
   27ae4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27ae8:	cmp	r2, r3
   27aec:	bge	278a8 <__assert_fail@plt+0x16588>
   27af0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27af4:	mov	r0, r3
   27af8:	bl	31500 <__assert_fail@plt+0x201e0>
   27afc:	sub	r3, fp, #192	; 0xc0
   27b00:	mov	r0, r3
   27b04:	bl	2735c <__assert_fail@plt+0x1603c>
   27b08:	ldr	r0, [fp, #-12]
   27b0c:	bl	27b20 <__assert_fail@plt+0x16800>
   27b10:	mov	r3, r0
   27b14:	mov	r0, r3
   27b18:	sub	sp, fp, #4
   27b1c:	pop	{fp, pc}
   27b20:	push	{fp, lr}
   27b24:	add	fp, sp, #4
   27b28:	sub	sp, sp, #16
   27b2c:	str	r0, [fp, #-16]
   27b30:	ldr	r3, [fp, #-16]
   27b34:	cmp	r3, #0
   27b38:	beq	27bd0 <__assert_fail@plt+0x168b0>
   27b3c:	mov	r3, #0
   27b40:	str	r3, [fp, #-8]
   27b44:	b	27bac <__assert_fail@plt+0x1688c>
   27b48:	ldr	r3, [fp, #-16]
   27b4c:	ldr	r1, [r3, #8]
   27b50:	ldr	r2, [fp, #-8]
   27b54:	mov	r3, r2
   27b58:	lsl	r3, r3, #1
   27b5c:	add	r3, r3, r2
   27b60:	lsl	r3, r3, #3
   27b64:	add	r3, r1, r3
   27b68:	ldr	r3, [r3, #20]
   27b6c:	mov	r0, r3
   27b70:	bl	31500 <__assert_fail@plt+0x201e0>
   27b74:	ldr	r3, [fp, #-16]
   27b78:	ldr	r1, [r3, #8]
   27b7c:	ldr	r2, [fp, #-8]
   27b80:	mov	r3, r2
   27b84:	lsl	r3, r3, #1
   27b88:	add	r3, r3, r2
   27b8c:	lsl	r3, r3, #3
   27b90:	add	r3, r1, r3
   27b94:	ldr	r3, [r3, #8]
   27b98:	mov	r0, r3
   27b9c:	bl	31500 <__assert_fail@plt+0x201e0>
   27ba0:	ldr	r3, [fp, #-8]
   27ba4:	add	r3, r3, #1
   27ba8:	str	r3, [fp, #-8]
   27bac:	ldr	r3, [fp, #-16]
   27bb0:	ldr	r2, [r3]
   27bb4:	ldr	r3, [fp, #-8]
   27bb8:	cmp	r2, r3
   27bbc:	bgt	27b48 <__assert_fail@plt+0x16828>
   27bc0:	ldr	r3, [fp, #-16]
   27bc4:	ldr	r3, [r3, #8]
   27bc8:	mov	r0, r3
   27bcc:	bl	31500 <__assert_fail@plt+0x201e0>
   27bd0:	mov	r3, #0
   27bd4:	mov	r0, r3
   27bd8:	sub	sp, fp, #4
   27bdc:	pop	{fp, pc}
   27be0:	push	{fp, lr}
   27be4:	add	fp, sp, #4
   27be8:	sub	sp, sp, #32
   27bec:	str	r0, [fp, #-24]	; 0xffffffe8
   27bf0:	str	r1, [fp, #-28]	; 0xffffffe4
   27bf4:	str	r2, [fp, #-32]	; 0xffffffe0
   27bf8:	str	r3, [fp, #-36]	; 0xffffffdc
   27bfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27c00:	ldr	r2, [r3]
   27c04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27c08:	lsl	r3, r3, #3
   27c0c:	add	r3, r2, r3
   27c10:	ldrb	r3, [r3, #4]
   27c14:	str	r3, [fp, #-8]
   27c18:	ldr	r3, [fp, #-8]
   27c1c:	cmp	r3, #8
   27c20:	bne	27c88 <__assert_fail@plt+0x16968>
   27c24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27c28:	ldr	r2, [r3]
   27c2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27c30:	lsl	r3, r3, #3
   27c34:	add	r3, r2, r3
   27c38:	ldr	r3, [r3]
   27c3c:	add	r3, r3, #1
   27c40:	str	r3, [fp, #-12]
   27c44:	ldr	r2, [fp, #-12]
   27c48:	ldr	r3, [fp, #8]
   27c4c:	cmp	r2, r3
   27c50:	bge	27d90 <__assert_fail@plt+0x16a70>
   27c54:	ldr	r3, [fp, #-12]
   27c58:	lsl	r3, r3, #3
   27c5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27c60:	add	r3, r2, r3
   27c64:	ldr	r2, [fp, #4]
   27c68:	str	r2, [r3]
   27c6c:	ldr	r3, [fp, #-12]
   27c70:	lsl	r3, r3, #3
   27c74:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27c78:	add	r3, r2, r3
   27c7c:	mvn	r2, #0
   27c80:	str	r2, [r3, #4]
   27c84:	b	27d90 <__assert_fail@plt+0x16a70>
   27c88:	ldr	r3, [fp, #-8]
   27c8c:	cmp	r3, #9
   27c90:	bne	27d90 <__assert_fail@plt+0x16a70>
   27c94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27c98:	ldr	r2, [r3]
   27c9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27ca0:	lsl	r3, r3, #3
   27ca4:	add	r3, r2, r3
   27ca8:	ldr	r3, [r3]
   27cac:	add	r3, r3, #1
   27cb0:	str	r3, [fp, #-16]
   27cb4:	ldr	r2, [fp, #-16]
   27cb8:	ldr	r3, [fp, #8]
   27cbc:	cmp	r2, r3
   27cc0:	bge	27d90 <__assert_fail@plt+0x16a70>
   27cc4:	ldr	r3, [fp, #-16]
   27cc8:	lsl	r3, r3, #3
   27ccc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27cd0:	add	r3, r2, r3
   27cd4:	ldr	r2, [r3]
   27cd8:	ldr	r3, [fp, #4]
   27cdc:	cmp	r2, r3
   27ce0:	bge	27d18 <__assert_fail@plt+0x169f8>
   27ce4:	ldr	r3, [fp, #-16]
   27ce8:	lsl	r3, r3, #3
   27cec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27cf0:	add	r3, r2, r3
   27cf4:	ldr	r2, [fp, #4]
   27cf8:	str	r2, [r3, #4]
   27cfc:	ldr	r3, [fp, #8]
   27d00:	lsl	r3, r3, #3
   27d04:	mov	r2, r3
   27d08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27d0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27d10:	bl	110a4 <memcpy@plt>
   27d14:	b	27d90 <__assert_fail@plt+0x16a70>
   27d18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27d1c:	ldr	r2, [r3]
   27d20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27d24:	lsl	r3, r3, #3
   27d28:	add	r3, r2, r3
   27d2c:	ldrb	r3, [r3, #6]
   27d30:	and	r3, r3, #8
   27d34:	uxtb	r3, r3
   27d38:	cmp	r3, #0
   27d3c:	beq	27d78 <__assert_fail@plt+0x16a58>
   27d40:	ldr	r3, [fp, #-16]
   27d44:	lsl	r3, r3, #3
   27d48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27d4c:	add	r3, r2, r3
   27d50:	ldr	r3, [r3]
   27d54:	cmn	r3, #1
   27d58:	beq	27d78 <__assert_fail@plt+0x16a58>
   27d5c:	ldr	r3, [fp, #8]
   27d60:	lsl	r3, r3, #3
   27d64:	mov	r2, r3
   27d68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27d6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27d70:	bl	110a4 <memcpy@plt>
   27d74:	b	27d90 <__assert_fail@plt+0x16a70>
   27d78:	ldr	r3, [fp, #-16]
   27d7c:	lsl	r3, r3, #3
   27d80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27d84:	add	r3, r2, r3
   27d88:	ldr	r2, [fp, #4]
   27d8c:	str	r2, [r3, #4]
   27d90:	nop			; (mov r0, r0)
   27d94:	sub	sp, fp, #4
   27d98:	pop	{fp, pc}
   27d9c:	push	{fp, lr}
   27da0:	add	fp, sp, #4
   27da4:	sub	sp, sp, #32
   27da8:	str	r0, [fp, #-32]	; 0xffffffe0
   27dac:	str	r1, [fp, #-36]	; 0xffffffdc
   27db0:	mov	r3, #0
   27db4:	str	r3, [fp, #-12]
   27db8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27dbc:	ldr	r3, [r3, #12]
   27dc0:	str	r3, [fp, #-16]
   27dc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27dc8:	ldr	r3, [r3, #100]	; 0x64
   27dcc:	cmp	r3, #0
   27dd0:	beq	27df4 <__assert_fail@plt+0x16ad4>
   27dd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27dd8:	ldr	r2, [r3, #100]	; 0x64
   27ddc:	ldr	r3, [fp, #-16]
   27de0:	lsl	r3, r3, #2
   27de4:	add	r3, r2, r3
   27de8:	ldr	r3, [r3]
   27dec:	cmp	r3, #0
   27df0:	bne	27df4 <__assert_fail@plt+0x16ad4>
   27df4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27df8:	ldr	r2, [r3, #8]
   27dfc:	sub	r3, fp, #28
   27e00:	mov	r1, r2
   27e04:	mov	r0, r3
   27e08:	bl	18b1c <__assert_fail@plt+0x77fc>
   27e0c:	str	r0, [fp, #-8]
   27e10:	ldr	r3, [fp, #-8]
   27e14:	cmp	r3, #0
   27e18:	movne	r3, #1
   27e1c:	moveq	r3, #0
   27e20:	uxtb	r3, r3
   27e24:	cmp	r3, #0
   27e28:	beq	27e34 <__assert_fail@plt+0x16b14>
   27e2c:	ldr	r3, [fp, #-8]
   27e30:	b	27fbc <__assert_fail@plt+0x16c9c>
   27e34:	sub	r3, fp, #28
   27e38:	ldr	r2, [fp, #-16]
   27e3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27e44:	bl	284dc <__assert_fail@plt+0x171bc>
   27e48:	str	r0, [fp, #-8]
   27e4c:	ldr	r3, [fp, #-8]
   27e50:	cmp	r3, #0
   27e54:	movne	r3, #1
   27e58:	moveq	r3, #0
   27e5c:	uxtb	r3, r3
   27e60:	cmp	r3, #0
   27e64:	bne	27f98 <__assert_fail@plt+0x16c78>
   27e68:	b	27f80 <__assert_fail@plt+0x16c60>
   27e6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27e70:	ldr	r2, [r3]
   27e74:	ldr	r3, [fp, #-16]
   27e78:	lsl	r3, r3, #2
   27e7c:	add	r3, r2, r3
   27e80:	ldr	r3, [r3]
   27e84:	cmp	r3, #0
   27e88:	bne	27e98 <__assert_fail@plt+0x16b78>
   27e8c:	ldr	r3, [fp, #-12]
   27e90:	add	r3, r3, #1
   27e94:	b	27e9c <__assert_fail@plt+0x16b7c>
   27e98:	mov	r3, #0
   27e9c:	str	r3, [fp, #-12]
   27ea0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27ea4:	ldr	r2, [r3, #120]	; 0x78
   27ea8:	ldr	r3, [fp, #-12]
   27eac:	cmp	r2, r3
   27eb0:	bge	27ee4 <__assert_fail@plt+0x16bc4>
   27eb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27eb8:	ldr	r0, [r3]
   27ebc:	ldr	r3, [fp, #-16]
   27ec0:	lsl	r3, r3, #2
   27ec4:	mov	r2, r3
   27ec8:	mov	r1, #0
   27ecc:	bl	11248 <memset@plt>
   27ed0:	ldr	r3, [fp, #-20]	; 0xffffffec
   27ed4:	mov	r0, r3
   27ed8:	bl	31500 <__assert_fail@plt+0x201e0>
   27edc:	mov	r3, #0
   27ee0:	b	27fbc <__assert_fail@plt+0x16c9c>
   27ee4:	mov	r3, #0
   27ee8:	str	r3, [fp, #-24]	; 0xffffffe8
   27eec:	ldr	r3, [fp, #-16]
   27ef0:	sub	r3, r3, #1
   27ef4:	str	r3, [fp, #-16]
   27ef8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27efc:	ldr	r2, [r3, #100]	; 0x64
   27f00:	ldr	r3, [fp, #-16]
   27f04:	lsl	r3, r3, #2
   27f08:	add	r3, r2, r3
   27f0c:	ldr	r3, [r3]
   27f10:	cmp	r3, #0
   27f14:	beq	27f4c <__assert_fail@plt+0x16c2c>
   27f18:	sub	r3, fp, #28
   27f1c:	ldr	r2, [fp, #-16]
   27f20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27f24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27f28:	bl	27fc8 <__assert_fail@plt+0x16ca8>
   27f2c:	str	r0, [fp, #-8]
   27f30:	ldr	r3, [fp, #-8]
   27f34:	cmp	r3, #0
   27f38:	movne	r3, #1
   27f3c:	moveq	r3, #0
   27f40:	uxtb	r3, r3
   27f44:	cmp	r3, #0
   27f48:	bne	27fa0 <__assert_fail@plt+0x16c80>
   27f4c:	sub	r3, fp, #28
   27f50:	ldr	r2, [fp, #-16]
   27f54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27f58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27f5c:	bl	284dc <__assert_fail@plt+0x171bc>
   27f60:	str	r0, [fp, #-8]
   27f64:	ldr	r3, [fp, #-8]
   27f68:	cmp	r3, #0
   27f6c:	movne	r3, #1
   27f70:	moveq	r3, #0
   27f74:	uxtb	r3, r3
   27f78:	cmp	r3, #0
   27f7c:	bne	27fa8 <__assert_fail@plt+0x16c88>
   27f80:	ldr	r3, [fp, #-16]
   27f84:	cmp	r3, #0
   27f88:	bgt	27e6c <__assert_fail@plt+0x16b4c>
   27f8c:	mov	r3, #0
   27f90:	str	r3, [fp, #-8]
   27f94:	b	27fac <__assert_fail@plt+0x16c8c>
   27f98:	nop			; (mov r0, r0)
   27f9c:	b	27fac <__assert_fail@plt+0x16c8c>
   27fa0:	nop			; (mov r0, r0)
   27fa4:	b	27fac <__assert_fail@plt+0x16c8c>
   27fa8:	nop			; (mov r0, r0)
   27fac:	ldr	r3, [fp, #-20]	; 0xffffffec
   27fb0:	mov	r0, r3
   27fb4:	bl	31500 <__assert_fail@plt+0x201e0>
   27fb8:	ldr	r3, [fp, #-8]
   27fbc:	mov	r0, r3
   27fc0:	sub	sp, fp, #4
   27fc4:	pop	{fp, pc}
   27fc8:	push	{fp, lr}
   27fcc:	add	fp, sp, #4
   27fd0:	sub	sp, sp, #56	; 0x38
   27fd4:	str	r0, [fp, #-40]	; 0xffffffd8
   27fd8:	str	r1, [fp, #-44]	; 0xffffffd4
   27fdc:	str	r2, [fp, #-48]	; 0xffffffd0
   27fe0:	str	r3, [fp, #-52]	; 0xffffffcc
   27fe4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27fe8:	ldr	r3, [r3, #84]	; 0x54
   27fec:	str	r3, [fp, #-16]
   27ff0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27ff4:	ldr	r2, [r3, #100]	; 0x64
   27ff8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27ffc:	lsl	r3, r3, #2
   28000:	add	r3, r2, r3
   28004:	ldr	r3, [r3]
   28008:	add	r3, r3, #16
   2800c:	str	r3, [fp, #-20]	; 0xffffffec
   28010:	mov	r3, #0
   28014:	str	r3, [fp, #-8]
   28018:	b	2821c <__assert_fail@plt+0x16efc>
   2801c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28020:	ldr	r2, [r3, #8]
   28024:	ldr	r3, [fp, #-8]
   28028:	lsl	r3, r3, #2
   2802c:	add	r3, r2, r3
   28030:	ldr	r3, [r3]
   28034:	str	r3, [fp, #-24]	; 0xffffffe8
   28038:	mov	r3, #0
   2803c:	str	r3, [fp, #-12]
   28040:	ldr	r3, [fp, #-16]
   28044:	ldr	r2, [r3]
   28048:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2804c:	lsl	r3, r3, #3
   28050:	add	r3, r2, r3
   28054:	ldrb	r3, [r3, #4]
   28058:	and	r3, r3, #8
   2805c:	cmp	r3, #0
   28060:	ldr	r3, [fp, #-16]
   28064:	ldr	r2, [r3]
   28068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2806c:	lsl	r3, r3, #3
   28070:	add	r3, r2, r3
   28074:	ldrb	r3, [r3, #6]
   28078:	and	r3, r3, #16
   2807c:	uxtb	r3, r3
   28080:	cmp	r3, #0
   28084:	beq	280ac <__assert_fail@plt+0x16d8c>
   28088:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2808c:	ldr	r3, [r3, #12]
   28090:	str	r3, [sp]
   28094:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28098:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2809c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   280a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   280a4:	bl	2998c <__assert_fail@plt+0x1866c>
   280a8:	str	r0, [fp, #-12]
   280ac:	ldr	r3, [fp, #-12]
   280b0:	cmp	r3, #0
   280b4:	bne	28160 <__assert_fail@plt+0x16e40>
   280b8:	ldr	r3, [fp, #-16]
   280bc:	ldr	r2, [r3]
   280c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   280c4:	lsl	r3, r3, #3
   280c8:	add	r3, r2, r3
   280cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   280d0:	mov	r1, r3
   280d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   280d8:	bl	2dff0 <__assert_fail@plt+0x1ccd0>
   280dc:	mov	r3, r0
   280e0:	cmp	r3, #0
   280e4:	beq	28160 <__assert_fail@plt+0x16e40>
   280e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   280ec:	ldr	r2, [r3]
   280f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   280f4:	add	r3, r3, #1
   280f8:	lsl	r3, r3, #2
   280fc:	add	r3, r2, r3
   28100:	ldr	r3, [r3]
   28104:	cmp	r3, #0
   28108:	beq	28160 <__assert_fail@plt+0x16e40>
   2810c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28110:	ldr	r2, [r3]
   28114:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28118:	add	r3, r3, #1
   2811c:	lsl	r3, r3, #2
   28120:	add	r3, r2, r3
   28124:	ldr	r3, [r3]
   28128:	add	r0, r3, #4
   2812c:	ldr	r3, [fp, #-16]
   28130:	ldr	r2, [r3, #12]
   28134:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28138:	lsl	r3, r3, #2
   2813c:	add	r3, r2, r3
   28140:	ldr	r3, [r3]
   28144:	mov	r1, r3
   28148:	bl	19e3c <__assert_fail@plt+0x8b1c>
   2814c:	mov	r3, r0
   28150:	cmp	r3, #0
   28154:	beq	28160 <__assert_fail@plt+0x16e40>
   28158:	mov	r3, #1
   2815c:	str	r3, [fp, #-12]
   28160:	ldr	r3, [fp, #-12]
   28164:	cmp	r3, #0
   28168:	beq	28204 <__assert_fail@plt+0x16ee4>
   2816c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28170:	ldr	r3, [r3, #20]
   28174:	cmp	r3, #0
   28178:	beq	281d4 <__assert_fail@plt+0x16eb4>
   2817c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   28180:	ldr	r3, [fp, #-12]
   28184:	add	r3, r2, r3
   28188:	str	r3, [fp, #-28]	; 0xffffffe4
   2818c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28190:	add	r1, r3, #16
   28194:	ldr	r3, [fp, #-16]
   28198:	ldr	r2, [r3, #12]
   2819c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   281a0:	lsl	r3, r3, #2
   281a4:	add	r3, r2, r3
   281a8:	ldr	r2, [r3]
   281ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   281b0:	str	r3, [sp, #4]
   281b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   281b8:	str	r3, [sp]
   281bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   281c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   281c4:	bl	28b68 <__assert_fail@plt+0x17848>
   281c8:	mov	r3, r0
   281cc:	cmp	r3, #0
   281d0:	bne	2820c <__assert_fail@plt+0x16eec>
   281d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   281d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   281dc:	bl	19a2c <__assert_fail@plt+0x870c>
   281e0:	mov	r3, r0
   281e4:	strb	r3, [fp, #-29]	; 0xffffffe3
   281e8:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   281ec:	eor	r3, r3, #1
   281f0:	uxtb	r3, r3
   281f4:	cmp	r3, #0
   281f8:	beq	28210 <__assert_fail@plt+0x16ef0>
   281fc:	mov	r3, #12
   28200:	b	28234 <__assert_fail@plt+0x16f14>
   28204:	nop			; (mov r0, r0)
   28208:	b	28210 <__assert_fail@plt+0x16ef0>
   2820c:	nop			; (mov r0, r0)
   28210:	ldr	r3, [fp, #-8]
   28214:	add	r3, r3, #1
   28218:	str	r3, [fp, #-8]
   2821c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28220:	ldr	r2, [r3, #4]
   28224:	ldr	r3, [fp, #-8]
   28228:	cmp	r2, r3
   2822c:	bgt	2801c <__assert_fail@plt+0x16cfc>
   28230:	mov	r3, #0
   28234:	mov	r0, r3
   28238:	sub	sp, fp, #4
   2823c:	pop	{fp, pc}
   28240:	push	{fp, lr}
   28244:	add	fp, sp, #4
   28248:	sub	sp, sp, #16
   2824c:	str	r0, [fp, #-16]
   28250:	str	r1, [fp, #-20]	; 0xffffffec
   28254:	ldr	r3, [fp, #-16]
   28258:	ldr	r3, [r3, #104]	; 0x68
   2825c:	str	r3, [fp, #-8]
   28260:	ldr	r3, [fp, #-16]
   28264:	ldr	r2, [r3, #36]	; 0x24
   28268:	ldr	r3, [fp, #-20]	; 0xffffffec
   2826c:	cmp	r2, r3
   28270:	bgt	2828c <__assert_fail@plt+0x16f6c>
   28274:	ldr	r3, [fp, #-16]
   28278:	ldr	r2, [r3, #36]	; 0x24
   2827c:	ldr	r3, [fp, #-16]
   28280:	ldr	r3, [r3, #48]	; 0x30
   28284:	cmp	r2, r3
   28288:	blt	282b8 <__assert_fail@plt+0x16f98>
   2828c:	ldr	r3, [fp, #-16]
   28290:	ldr	r2, [r3, #28]
   28294:	ldr	r3, [fp, #-20]	; 0xffffffec
   28298:	cmp	r2, r3
   2829c:	bgt	282f4 <__assert_fail@plt+0x16fd4>
   282a0:	ldr	r3, [fp, #-16]
   282a4:	ldr	r2, [r3, #28]
   282a8:	ldr	r3, [fp, #-16]
   282ac:	ldr	r3, [r3, #48]	; 0x30
   282b0:	cmp	r2, r3
   282b4:	bge	282f4 <__assert_fail@plt+0x16fd4>
   282b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   282bc:	add	r3, r3, #1
   282c0:	mov	r1, r3
   282c4:	ldr	r0, [fp, #-16]
   282c8:	bl	2e244 <__assert_fail@plt+0x1cf24>
   282cc:	str	r0, [fp, #-12]
   282d0:	ldr	r3, [fp, #-12]
   282d4:	cmp	r3, #0
   282d8:	movne	r3, #1
   282dc:	moveq	r3, #0
   282e0:	uxtb	r3, r3
   282e4:	cmp	r3, #0
   282e8:	beq	282f4 <__assert_fail@plt+0x16fd4>
   282ec:	ldr	r3, [fp, #-12]
   282f0:	b	28354 <__assert_fail@plt+0x17034>
   282f4:	ldr	r2, [fp, #-8]
   282f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   282fc:	cmp	r2, r3
   28300:	bge	28350 <__assert_fail@plt+0x17030>
   28304:	ldr	r3, [fp, #-16]
   28308:	ldr	r3, [r3, #100]	; 0x64
   2830c:	cmp	r3, #0
   28310:	ldr	r3, [fp, #-16]
   28314:	ldr	r2, [r3, #100]	; 0x64
   28318:	ldr	r3, [fp, #-8]
   2831c:	add	r3, r3, #1
   28320:	lsl	r3, r3, #2
   28324:	add	r0, r2, r3
   28328:	ldr	r2, [fp, #-20]	; 0xffffffec
   2832c:	ldr	r3, [fp, #-8]
   28330:	sub	r3, r2, r3
   28334:	lsl	r3, r3, #2
   28338:	mov	r2, r3
   2833c:	mov	r1, #0
   28340:	bl	11248 <memset@plt>
   28344:	ldr	r3, [fp, #-16]
   28348:	ldr	r2, [fp, #-20]	; 0xffffffec
   2834c:	str	r2, [r3, #104]	; 0x68
   28350:	mov	r3, #0
   28354:	mov	r0, r3
   28358:	sub	sp, fp, #4
   2835c:	pop	{fp, pc}
   28360:	push	{r4, fp, lr}
   28364:	add	fp, sp, #8
   28368:	sub	sp, sp, #44	; 0x2c
   2836c:	str	r0, [fp, #-40]	; 0xffffffd8
   28370:	str	r1, [fp, #-44]	; 0xffffffd4
   28374:	str	r2, [fp, #-48]	; 0xffffffd0
   28378:	str	r3, [fp, #-52]	; 0xffffffcc
   2837c:	mov	r3, #0
   28380:	str	r3, [fp, #-16]
   28384:	b	284bc <__assert_fail@plt+0x1719c>
   28388:	ldr	r3, [fp, #-16]
   2838c:	lsl	r3, r3, #2
   28390:	ldr	r2, [fp, #-44]	; 0xffffffd4
   28394:	add	r3, r2, r3
   28398:	ldr	r3, [r3]
   2839c:	cmp	r3, #0
   283a0:	bne	283d0 <__assert_fail@plt+0x170b0>
   283a4:	ldr	r3, [fp, #-16]
   283a8:	lsl	r3, r3, #2
   283ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   283b0:	add	r3, r2, r3
   283b4:	ldr	r2, [fp, #-16]
   283b8:	lsl	r2, r2, #2
   283bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   283c0:	add	r2, r1, r2
   283c4:	ldr	r2, [r2]
   283c8:	str	r2, [r3]
   283cc:	b	284b0 <__assert_fail@plt+0x17190>
   283d0:	ldr	r3, [fp, #-16]
   283d4:	lsl	r3, r3, #2
   283d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   283dc:	add	r3, r2, r3
   283e0:	ldr	r3, [r3]
   283e4:	cmp	r3, #0
   283e8:	beq	284b0 <__assert_fail@plt+0x17190>
   283ec:	ldr	r3, [fp, #-16]
   283f0:	lsl	r3, r3, #2
   283f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   283f8:	add	r3, r2, r3
   283fc:	ldr	r3, [r3]
   28400:	add	r1, r3, #4
   28404:	ldr	r3, [fp, #-16]
   28408:	lsl	r3, r3, #2
   2840c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   28410:	add	r3, r2, r3
   28414:	ldr	r3, [r3]
   28418:	add	r2, r3, #4
   2841c:	sub	r3, fp, #32
   28420:	mov	r0, r3
   28424:	bl	1925c <__assert_fail@plt+0x7f3c>
   28428:	mov	r3, r0
   2842c:	str	r3, [fp, #-20]	; 0xffffffec
   28430:	ldr	r3, [fp, #-20]	; 0xffffffec
   28434:	cmp	r3, #0
   28438:	movne	r3, #1
   2843c:	moveq	r3, #0
   28440:	uxtb	r3, r3
   28444:	cmp	r3, #0
   28448:	beq	28454 <__assert_fail@plt+0x17134>
   2844c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28450:	b	284d0 <__assert_fail@plt+0x171b0>
   28454:	ldr	r3, [fp, #-16]
   28458:	lsl	r3, r3, #2
   2845c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   28460:	add	r4, r2, r3
   28464:	sub	r2, fp, #32
   28468:	sub	r3, fp, #20
   2846c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   28470:	mov	r0, r3
   28474:	bl	1a468 <__assert_fail@plt+0x9148>
   28478:	mov	r3, r0
   2847c:	str	r3, [r4]
   28480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28484:	mov	r0, r3
   28488:	bl	31500 <__assert_fail@plt+0x201e0>
   2848c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28490:	cmp	r3, #0
   28494:	movne	r3, #1
   28498:	moveq	r3, #0
   2849c:	uxtb	r3, r3
   284a0:	cmp	r3, #0
   284a4:	beq	284b0 <__assert_fail@plt+0x17190>
   284a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   284ac:	b	284d0 <__assert_fail@plt+0x171b0>
   284b0:	ldr	r3, [fp, #-16]
   284b4:	add	r3, r3, #1
   284b8:	str	r3, [fp, #-16]
   284bc:	ldr	r2, [fp, #-16]
   284c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   284c4:	cmp	r2, r3
   284c8:	blt	28388 <__assert_fail@plt+0x17068>
   284cc:	mov	r3, #0
   284d0:	mov	r0, r3
   284d4:	sub	sp, fp, #8
   284d8:	pop	{r4, fp, pc}
   284dc:	push	{r4, fp, lr}
   284e0:	add	fp, sp, #8
   284e4:	sub	sp, sp, #44	; 0x2c
   284e8:	str	r0, [fp, #-32]	; 0xffffffe0
   284ec:	str	r1, [fp, #-36]	; 0xffffffdc
   284f0:	str	r2, [fp, #-40]	; 0xffffffd8
   284f4:	str	r3, [fp, #-44]	; 0xffffffd4
   284f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   284fc:	ldr	r3, [r3, #84]	; 0x54
   28500:	str	r3, [fp, #-16]
   28504:	mov	r3, #0
   28508:	str	r3, [fp, #-24]	; 0xffffffe8
   2850c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28510:	ldr	r2, [r3, #100]	; 0x64
   28514:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28518:	lsl	r3, r3, #2
   2851c:	add	r3, r2, r3
   28520:	ldr	r3, [r3]
   28524:	cmp	r3, #0
   28528:	beq	2854c <__assert_fail@plt+0x1722c>
   2852c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28530:	ldr	r2, [r3, #100]	; 0x64
   28534:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28538:	lsl	r3, r3, #2
   2853c:	add	r3, r2, r3
   28540:	ldr	r3, [r3]
   28544:	add	r3, r3, #4
   28548:	b	28550 <__assert_fail@plt+0x17230>
   2854c:	mov	r3, #0
   28550:	str	r3, [fp, #-20]	; 0xffffffec
   28554:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28558:	ldr	r3, [r3, #4]
   2855c:	cmp	r3, #0
   28560:	bne	28584 <__assert_fail@plt+0x17264>
   28564:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28568:	ldr	r2, [r3]
   2856c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28570:	lsl	r3, r3, #2
   28574:	add	r3, r2, r3
   28578:	mov	r2, #0
   2857c:	str	r2, [r3]
   28580:	b	2868c <__assert_fail@plt+0x1736c>
   28584:	ldr	r3, [fp, #-20]	; 0xffffffec
   28588:	cmp	r3, #0
   2858c:	beq	28638 <__assert_fail@plt+0x17318>
   28590:	ldr	r2, [fp, #-20]	; 0xffffffec
   28594:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28598:	ldr	r0, [fp, #-16]
   2859c:	bl	28714 <__assert_fail@plt+0x173f4>
   285a0:	mov	r3, r0
   285a4:	str	r3, [fp, #-24]	; 0xffffffe8
   285a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   285ac:	cmp	r3, #0
   285b0:	movne	r3, #1
   285b4:	moveq	r3, #0
   285b8:	uxtb	r3, r3
   285bc:	cmp	r3, #0
   285c0:	beq	285cc <__assert_fail@plt+0x172ac>
   285c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   285c8:	b	28708 <__assert_fail@plt+0x173e8>
   285cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   285d0:	ldr	r3, [r3, #20]
   285d4:	cmp	r3, #0
   285d8:	beq	28638 <__assert_fail@plt+0x17318>
   285dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   285e0:	add	r1, r3, #16
   285e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   285e8:	ldr	r3, [r3, #116]	; 0x74
   285ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   285f0:	str	r2, [sp, #4]
   285f4:	str	r3, [sp]
   285f8:	mov	r3, r1
   285fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   28600:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28604:	ldr	r0, [fp, #-16]
   28608:	bl	290d4 <__assert_fail@plt+0x17db4>
   2860c:	mov	r3, r0
   28610:	str	r3, [fp, #-24]	; 0xffffffe8
   28614:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28618:	cmp	r3, #0
   2861c:	movne	r3, #1
   28620:	moveq	r3, #0
   28624:	uxtb	r3, r3
   28628:	cmp	r3, #0
   2862c:	beq	28638 <__assert_fail@plt+0x17318>
   28630:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28634:	b	28708 <__assert_fail@plt+0x173e8>
   28638:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2863c:	ldr	r2, [r3]
   28640:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28644:	lsl	r3, r3, #2
   28648:	add	r4, r2, r3
   2864c:	sub	r3, fp, #24
   28650:	ldr	r2, [fp, #-44]	; 0xffffffd4
   28654:	ldr	r1, [fp, #-16]
   28658:	mov	r0, r3
   2865c:	bl	1a468 <__assert_fail@plt+0x9148>
   28660:	mov	r3, r0
   28664:	str	r3, [r4]
   28668:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2866c:	cmp	r3, #0
   28670:	movne	r3, #1
   28674:	moveq	r3, #0
   28678:	uxtb	r3, r3
   2867c:	cmp	r3, #0
   28680:	beq	2868c <__assert_fail@plt+0x1736c>
   28684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28688:	b	28708 <__assert_fail@plt+0x173e8>
   2868c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28690:	cmp	r3, #0
   28694:	beq	28704 <__assert_fail@plt+0x173e4>
   28698:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2869c:	ldr	r2, [r3, #100]	; 0x64
   286a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   286a4:	lsl	r3, r3, #2
   286a8:	add	r3, r2, r3
   286ac:	ldr	r3, [r3]
   286b0:	ldrb	r3, [r3, #52]	; 0x34
   286b4:	and	r3, r3, #64	; 0x40
   286b8:	uxtb	r3, r3
   286bc:	cmp	r3, #0
   286c0:	beq	28704 <__assert_fail@plt+0x173e4>
   286c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   286c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   286cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   286d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   286d4:	bl	294ec <__assert_fail@plt+0x181cc>
   286d8:	mov	r3, r0
   286dc:	str	r3, [fp, #-24]	; 0xffffffe8
   286e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   286e4:	cmp	r3, #0
   286e8:	movne	r3, #1
   286ec:	moveq	r3, #0
   286f0:	uxtb	r3, r3
   286f4:	cmp	r3, #0
   286f8:	beq	28704 <__assert_fail@plt+0x173e4>
   286fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28700:	b	28708 <__assert_fail@plt+0x173e8>
   28704:	mov	r3, #0
   28708:	mov	r0, r3
   2870c:	sub	sp, fp, #8
   28710:	pop	{r4, fp, pc}
   28714:	push	{fp, lr}
   28718:	add	fp, sp, #4
   2871c:	sub	sp, sp, #32
   28720:	str	r0, [fp, #-24]	; 0xffffffe8
   28724:	str	r1, [fp, #-28]	; 0xffffffe4
   28728:	str	r2, [fp, #-32]	; 0xffffffe0
   2872c:	mov	r3, #0
   28730:	str	r3, [fp, #-16]
   28734:	sub	r3, fp, #16
   28738:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2873c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28740:	mov	r0, r3
   28744:	bl	1a468 <__assert_fail@plt+0x9148>
   28748:	str	r0, [fp, #-12]
   2874c:	ldr	r3, [fp, #-16]
   28750:	cmp	r3, #0
   28754:	movne	r3, #1
   28758:	moveq	r3, #0
   2875c:	uxtb	r3, r3
   28760:	cmp	r3, #0
   28764:	beq	28770 <__assert_fail@plt+0x17450>
   28768:	ldr	r3, [fp, #-16]
   2876c:	b	28884 <__assert_fail@plt+0x17564>
   28770:	ldr	r3, [fp, #-12]
   28774:	ldr	r3, [r3, #28]
   28778:	cmp	r3, #0
   2877c:	bne	28868 <__assert_fail@plt+0x17548>
   28780:	ldr	r3, [fp, #-12]
   28784:	add	r2, r3, #28
   28788:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2878c:	ldr	r3, [r3, #4]
   28790:	mov	r1, r3
   28794:	mov	r0, r2
   28798:	bl	18a98 <__assert_fail@plt+0x7778>
   2879c:	mov	r3, r0
   287a0:	str	r3, [fp, #-16]
   287a4:	ldr	r3, [fp, #-16]
   287a8:	cmp	r3, #0
   287ac:	movne	r3, #1
   287b0:	moveq	r3, #0
   287b4:	uxtb	r3, r3
   287b8:	cmp	r3, #0
   287bc:	beq	287c8 <__assert_fail@plt+0x174a8>
   287c0:	mov	r3, #12
   287c4:	b	28884 <__assert_fail@plt+0x17564>
   287c8:	mov	r3, #0
   287cc:	str	r3, [fp, #-8]
   287d0:	b	28854 <__assert_fail@plt+0x17534>
   287d4:	ldr	r3, [fp, #-12]
   287d8:	add	r0, r3, #28
   287dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   287e0:	ldr	r2, [r3, #28]
   287e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   287e8:	ldr	r1, [r3, #8]
   287ec:	ldr	r3, [fp, #-8]
   287f0:	lsl	r3, r3, #2
   287f4:	add	r3, r1, r3
   287f8:	ldr	r3, [r3]
   287fc:	mov	r1, r3
   28800:	mov	r3, r1
   28804:	lsl	r3, r3, #1
   28808:	add	r3, r3, r1
   2880c:	lsl	r3, r3, #2
   28810:	add	r3, r2, r3
   28814:	mov	r1, r3
   28818:	bl	195d8 <__assert_fail@plt+0x82b8>
   2881c:	mov	r3, r0
   28820:	str	r3, [fp, #-16]
   28824:	ldr	r3, [fp, #-16]
   28828:	cmp	r3, #0
   2882c:	movne	r3, #1
   28830:	moveq	r3, #0
   28834:	uxtb	r3, r3
   28838:	cmp	r3, #0
   2883c:	beq	28848 <__assert_fail@plt+0x17528>
   28840:	mov	r3, #12
   28844:	b	28884 <__assert_fail@plt+0x17564>
   28848:	ldr	r3, [fp, #-8]
   2884c:	add	r3, r3, #1
   28850:	str	r3, [fp, #-8]
   28854:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28858:	ldr	r2, [r3, #4]
   2885c:	ldr	r3, [fp, #-8]
   28860:	cmp	r2, r3
   28864:	bgt	287d4 <__assert_fail@plt+0x174b4>
   28868:	ldr	r3, [fp, #-12]
   2886c:	add	r3, r3, #28
   28870:	mov	r2, r3
   28874:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28878:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2887c:	bl	18dc4 <__assert_fail@plt+0x7aa4>
   28880:	mov	r3, r0
   28884:	mov	r0, r3
   28888:	sub	sp, fp, #4
   2888c:	pop	{fp, pc}
   28890:	push	{fp, lr}
   28894:	add	fp, sp, #4
   28898:	sub	sp, sp, #64	; 0x40
   2889c:	str	r0, [fp, #-56]	; 0xffffffc8
   288a0:	str	r1, [fp, #-60]	; 0xffffffc4
   288a4:	str	r2, [fp, #-64]	; 0xffffffc0
   288a8:	str	r3, [fp, #-68]	; 0xffffffbc
   288ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   288b0:	ldr	r1, [r3, #28]
   288b4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   288b8:	mov	r3, r2
   288bc:	lsl	r3, r3, #1
   288c0:	add	r3, r3, r2
   288c4:	lsl	r3, r3, #2
   288c8:	add	r3, r1, r3
   288cc:	str	r3, [fp, #-12]
   288d0:	sub	r3, fp, #48	; 0x30
   288d4:	mov	r2, #12
   288d8:	mov	r1, #0
   288dc:	mov	r0, r3
   288e0:	bl	11248 <memset@plt>
   288e4:	mov	r3, #0
   288e8:	str	r3, [fp, #-8]
   288ec:	b	28ab0 <__assert_fail@plt+0x17790>
   288f0:	ldr	r3, [fp, #-12]
   288f4:	ldr	r2, [r3, #8]
   288f8:	ldr	r3, [fp, #-8]
   288fc:	lsl	r3, r3, #2
   28900:	add	r3, r2, r3
   28904:	ldr	r3, [r3]
   28908:	str	r3, [fp, #-16]
   2890c:	ldr	r2, [fp, #-16]
   28910:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28914:	cmp	r2, r3
   28918:	beq	28aa0 <__assert_fail@plt+0x17780>
   2891c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28920:	ldr	r2, [r3]
   28924:	ldr	r3, [fp, #-16]
   28928:	lsl	r3, r3, #3
   2892c:	add	r3, r2, r3
   28930:	ldrb	r3, [r3, #4]
   28934:	and	r3, r3, #8
   28938:	cmp	r3, #0
   2893c:	beq	28aa4 <__assert_fail@plt+0x17784>
   28940:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28944:	ldr	r1, [r3, #20]
   28948:	ldr	r2, [fp, #-16]
   2894c:	mov	r3, r2
   28950:	lsl	r3, r3, #1
   28954:	add	r3, r3, r2
   28958:	lsl	r3, r3, #2
   2895c:	add	r3, r1, r3
   28960:	ldr	r3, [r3, #8]
   28964:	ldr	r3, [r3]
   28968:	str	r3, [fp, #-20]	; 0xffffffec
   2896c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28970:	ldr	r1, [r3, #20]
   28974:	ldr	r2, [fp, #-16]
   28978:	mov	r3, r2
   2897c:	lsl	r3, r3, #1
   28980:	add	r3, r3, r2
   28984:	lsl	r3, r3, #2
   28988:	add	r3, r1, r3
   2898c:	ldr	r3, [r3, #4]
   28990:	cmp	r3, #1
   28994:	ble	289c8 <__assert_fail@plt+0x176a8>
   28998:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2899c:	ldr	r1, [r3, #20]
   289a0:	ldr	r2, [fp, #-16]
   289a4:	mov	r3, r2
   289a8:	lsl	r3, r3, #1
   289ac:	add	r3, r3, r2
   289b0:	lsl	r3, r3, #2
   289b4:	add	r3, r1, r3
   289b8:	ldr	r3, [r3, #8]
   289bc:	add	r3, r3, #4
   289c0:	ldr	r3, [r3]
   289c4:	b	289cc <__assert_fail@plt+0x176ac>
   289c8:	mvn	r3, #0
   289cc:	str	r3, [fp, #-24]	; 0xffffffe8
   289d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   289d4:	ldr	r0, [fp, #-12]
   289d8:	bl	19e3c <__assert_fail@plt+0x8b1c>
   289dc:	mov	r3, r0
   289e0:	cmp	r3, #0
   289e4:	bne	28a00 <__assert_fail@plt+0x176e0>
   289e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   289ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   289f0:	bl	19e3c <__assert_fail@plt+0x8b1c>
   289f4:	mov	r3, r0
   289f8:	cmp	r3, #0
   289fc:	bne	28a3c <__assert_fail@plt+0x1771c>
   28a00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28a04:	cmp	r3, #0
   28a08:	ble	28aa4 <__assert_fail@plt+0x17784>
   28a0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28a10:	ldr	r0, [fp, #-12]
   28a14:	bl	19e3c <__assert_fail@plt+0x8b1c>
   28a18:	mov	r3, r0
   28a1c:	cmp	r3, #0
   28a20:	bne	28aa4 <__assert_fail@plt+0x17784>
   28a24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28a28:	ldr	r0, [fp, #-64]	; 0xffffffc0
   28a2c:	bl	19e3c <__assert_fail@plt+0x8b1c>
   28a30:	mov	r3, r0
   28a34:	cmp	r3, #0
   28a38:	beq	28aa4 <__assert_fail@plt+0x17784>
   28a3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28a40:	ldr	r1, [r3, #28]
   28a44:	ldr	r2, [fp, #-16]
   28a48:	mov	r3, r2
   28a4c:	lsl	r3, r3, #1
   28a50:	add	r3, r3, r2
   28a54:	lsl	r3, r3, #2
   28a58:	add	r2, r1, r3
   28a5c:	sub	r3, fp, #48	; 0x30
   28a60:	ldr	r1, [fp, #-68]	; 0xffffffbc
   28a64:	mov	r0, r3
   28a68:	bl	18dc4 <__assert_fail@plt+0x7aa4>
   28a6c:	str	r0, [fp, #-28]	; 0xffffffe4
   28a70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28a74:	cmp	r3, #0
   28a78:	movne	r3, #1
   28a7c:	moveq	r3, #0
   28a80:	uxtb	r3, r3
   28a84:	cmp	r3, #0
   28a88:	beq	28aa4 <__assert_fail@plt+0x17784>
   28a8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28a90:	mov	r0, r3
   28a94:	bl	31500 <__assert_fail@plt+0x201e0>
   28a98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28a9c:	b	28b5c <__assert_fail@plt+0x1783c>
   28aa0:	nop			; (mov r0, r0)
   28aa4:	ldr	r3, [fp, #-8]
   28aa8:	add	r3, r3, #1
   28aac:	str	r3, [fp, #-8]
   28ab0:	ldr	r3, [fp, #-12]
   28ab4:	ldr	r2, [r3, #4]
   28ab8:	ldr	r3, [fp, #-8]
   28abc:	cmp	r2, r3
   28ac0:	bgt	288f0 <__assert_fail@plt+0x175d0>
   28ac4:	mov	r3, #0
   28ac8:	str	r3, [fp, #-8]
   28acc:	b	28b38 <__assert_fail@plt+0x17818>
   28ad0:	ldr	r3, [fp, #-12]
   28ad4:	ldr	r2, [r3, #8]
   28ad8:	ldr	r3, [fp, #-8]
   28adc:	lsl	r3, r3, #2
   28ae0:	add	r3, r2, r3
   28ae4:	ldr	r3, [r3]
   28ae8:	str	r3, [fp, #-32]	; 0xffffffe0
   28aec:	sub	r3, fp, #48	; 0x30
   28af0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28af4:	mov	r0, r3
   28af8:	bl	19e3c <__assert_fail@plt+0x8b1c>
   28afc:	mov	r3, r0
   28b00:	cmp	r3, #0
   28b04:	bne	28b2c <__assert_fail@plt+0x1780c>
   28b08:	ldr	r1, [fp, #-32]	; 0xffffffe0
   28b0c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   28b10:	bl	19e3c <__assert_fail@plt+0x8b1c>
   28b14:	mov	r3, r0
   28b18:	sub	r3, r3, #1
   28b1c:	str	r3, [fp, #-36]	; 0xffffffdc
   28b20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28b24:	ldr	r0, [fp, #-64]	; 0xffffffc0
   28b28:	bl	19f28 <__assert_fail@plt+0x8c08>
   28b2c:	ldr	r3, [fp, #-8]
   28b30:	add	r3, r3, #1
   28b34:	str	r3, [fp, #-8]
   28b38:	ldr	r3, [fp, #-12]
   28b3c:	ldr	r2, [r3, #4]
   28b40:	ldr	r3, [fp, #-8]
   28b44:	cmp	r2, r3
   28b48:	bgt	28ad0 <__assert_fail@plt+0x177b0>
   28b4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28b50:	mov	r0, r3
   28b54:	bl	31500 <__assert_fail@plt+0x201e0>
   28b58:	mov	r3, #0
   28b5c:	mov	r0, r3
   28b60:	sub	sp, fp, #4
   28b64:	pop	{fp, pc}
   28b68:	push	{fp, lr}
   28b6c:	add	fp, sp, #4
   28b70:	sub	sp, sp, #56	; 0x38
   28b74:	str	r0, [fp, #-40]	; 0xffffffd8
   28b78:	str	r1, [fp, #-44]	; 0xffffffd4
   28b7c:	str	r2, [fp, #-48]	; 0xffffffd0
   28b80:	str	r3, [fp, #-52]	; 0xffffffcc
   28b84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28b88:	ldr	r3, [r3, #84]	; 0x54
   28b8c:	str	r3, [fp, #-12]
   28b90:	ldr	r1, [fp, #-52]	; 0xffffffcc
   28b94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   28b98:	bl	2e9cc <__assert_fail@plt+0x1d6ac>
   28b9c:	str	r0, [fp, #-16]
   28ba0:	ldr	r1, [fp, #8]
   28ba4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   28ba8:	bl	2e9cc <__assert_fail@plt+0x1d6ac>
   28bac:	str	r0, [fp, #-20]	; 0xffffffec
   28bb0:	mov	r3, #0
   28bb4:	str	r3, [fp, #-8]
   28bb8:	b	28cb8 <__assert_fail@plt+0x17998>
   28bbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28bc0:	ldr	r2, [r3, #116]	; 0x74
   28bc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28bc8:	ldr	r1, [r3, #8]
   28bcc:	ldr	r3, [fp, #-8]
   28bd0:	lsl	r3, r3, #2
   28bd4:	add	r3, r1, r3
   28bd8:	ldr	r3, [r3]
   28bdc:	mov	r1, r3
   28be0:	mov	r3, r1
   28be4:	lsl	r3, r3, #1
   28be8:	add	r3, r3, r1
   28bec:	lsl	r3, r3, #3
   28bf0:	add	r3, r2, r3
   28bf4:	str	r3, [fp, #-24]	; 0xffffffe8
   28bf8:	ldr	r3, [fp, #-12]
   28bfc:	ldr	r2, [r3]
   28c00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28c04:	ldr	r3, [r3]
   28c08:	lsl	r3, r3, #3
   28c0c:	add	r3, r2, r3
   28c10:	ldr	r3, [r3]
   28c14:	str	r3, [fp, #-28]	; 0xffffffe4
   28c18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28c1c:	ldr	r2, [r3, #8]
   28c20:	ldr	r3, [fp, #-8]
   28c24:	lsl	r3, r3, #2
   28c28:	add	r3, r2, r3
   28c2c:	ldr	r1, [r3]
   28c30:	ldr	r3, [fp, #-16]
   28c34:	str	r3, [sp, #4]
   28c38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28c3c:	str	r3, [sp]
   28c40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28c44:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28c48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   28c4c:	bl	28fd0 <__assert_fail@plt+0x17cb0>
   28c50:	str	r0, [fp, #-32]	; 0xffffffe0
   28c54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28c58:	ldr	r2, [r3, #8]
   28c5c:	ldr	r3, [fp, #-8]
   28c60:	lsl	r3, r3, #2
   28c64:	add	r3, r2, r3
   28c68:	ldr	r1, [r3]
   28c6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28c70:	str	r3, [sp, #4]
   28c74:	ldr	r3, [fp, #8]
   28c78:	str	r3, [sp]
   28c7c:	ldr	r3, [fp, #4]
   28c80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28c84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   28c88:	bl	28fd0 <__assert_fail@plt+0x17cb0>
   28c8c:	str	r0, [fp, #-36]	; 0xffffffdc
   28c90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   28c94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28c98:	cmp	r2, r3
   28c9c:	bne	28cb0 <__assert_fail@plt+0x17990>
   28ca0:	ldr	r3, [fp, #-8]
   28ca4:	add	r3, r3, #1
   28ca8:	str	r3, [fp, #-8]
   28cac:	b	28cb8 <__assert_fail@plt+0x17998>
   28cb0:	mov	r3, #1
   28cb4:	b	28cd0 <__assert_fail@plt+0x179b0>
   28cb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28cbc:	ldr	r2, [r3, #4]
   28cc0:	ldr	r3, [fp, #-8]
   28cc4:	cmp	r2, r3
   28cc8:	bgt	28bbc <__assert_fail@plt+0x1789c>
   28ccc:	mov	r3, #0
   28cd0:	mov	r0, r3
   28cd4:	sub	sp, fp, #4
   28cd8:	pop	{fp, pc}
   28cdc:	push	{fp, lr}
   28ce0:	add	fp, sp, #4
   28ce4:	sub	sp, sp, #56	; 0x38
   28ce8:	str	r0, [fp, #-40]	; 0xffffffd8
   28cec:	str	r1, [fp, #-44]	; 0xffffffd4
   28cf0:	str	r2, [fp, #-48]	; 0xffffffd0
   28cf4:	str	r3, [fp, #-52]	; 0xffffffcc
   28cf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28cfc:	ldr	r3, [r3, #84]	; 0x54
   28d00:	str	r3, [fp, #-16]
   28d04:	ldr	r3, [fp, #-16]
   28d08:	ldr	r1, [r3, #24]
   28d0c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   28d10:	mov	r3, r2
   28d14:	lsl	r3, r3, #1
   28d18:	add	r3, r3, r2
   28d1c:	lsl	r3, r3, #2
   28d20:	add	r3, r1, r3
   28d24:	str	r3, [fp, #-20]	; 0xffffffec
   28d28:	mov	r3, #0
   28d2c:	str	r3, [fp, #-8]
   28d30:	b	28f98 <__assert_fail@plt+0x17c78>
   28d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   28d38:	ldr	r2, [r3, #8]
   28d3c:	ldr	r3, [fp, #-8]
   28d40:	lsl	r3, r3, #2
   28d44:	add	r3, r2, r3
   28d48:	ldr	r3, [r3]
   28d4c:	str	r3, [fp, #-24]	; 0xffffffe8
   28d50:	ldr	r3, [fp, #-16]
   28d54:	ldr	r2, [r3]
   28d58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28d5c:	lsl	r3, r3, #3
   28d60:	add	r3, r2, r3
   28d64:	ldrb	r3, [r3, #4]
   28d68:	cmp	r3, #8
   28d6c:	beq	28f00 <__assert_fail@plt+0x17be0>
   28d70:	cmp	r3, #9
   28d74:	beq	28f3c <__assert_fail@plt+0x17c1c>
   28d78:	cmp	r3, #4
   28d7c:	beq	28d84 <__assert_fail@plt+0x17a64>
   28d80:	b	28f8c <__assert_fail@plt+0x17c6c>
   28d84:	ldr	r3, [fp, #4]
   28d88:	cmn	r3, #1
   28d8c:	beq	28f78 <__assert_fail@plt+0x17c58>
   28d90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28d94:	ldr	r1, [r3, #116]	; 0x74
   28d98:	ldr	r2, [fp, #4]
   28d9c:	mov	r3, r2
   28da0:	lsl	r3, r3, #1
   28da4:	add	r3, r3, r2
   28da8:	lsl	r3, r3, #3
   28dac:	add	r3, r1, r3
   28db0:	str	r3, [fp, #-12]
   28db4:	ldr	r3, [fp, #-12]
   28db8:	ldr	r2, [r3]
   28dbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28dc0:	cmp	r2, r3
   28dc4:	bne	28ed8 <__assert_fail@plt+0x17bb8>
   28dc8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28dcc:	cmp	r3, #31
   28dd0:	bgt	28df0 <__assert_fail@plt+0x17ad0>
   28dd4:	ldr	r3, [fp, #-12]
   28dd8:	ldr	r2, [r3, #16]
   28ddc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28de0:	lsr	r3, r2, r3
   28de4:	and	r3, r3, #1
   28de8:	cmp	r3, #0
   28dec:	beq	28ee0 <__assert_fail@plt+0x17bc0>
   28df0:	ldr	r3, [fp, #-16]
   28df4:	ldr	r1, [r3, #20]
   28df8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28dfc:	mov	r3, r2
   28e00:	lsl	r3, r3, #1
   28e04:	add	r3, r3, r2
   28e08:	lsl	r3, r3, #2
   28e0c:	add	r3, r1, r3
   28e10:	ldr	r3, [r3, #8]
   28e14:	ldr	r3, [r3]
   28e18:	str	r3, [fp, #-28]	; 0xffffffe4
   28e1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   28e20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28e24:	cmp	r2, r3
   28e28:	bne	28e4c <__assert_fail@plt+0x17b2c>
   28e2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28e30:	and	r3, r3, #1
   28e34:	cmp	r3, #0
   28e38:	beq	28e44 <__assert_fail@plt+0x17b24>
   28e3c:	mvn	r3, #0
   28e40:	b	28fc4 <__assert_fail@plt+0x17ca4>
   28e44:	mov	r3, #0
   28e48:	b	28fc4 <__assert_fail@plt+0x17ca4>
   28e4c:	ldr	r3, [fp, #4]
   28e50:	str	r3, [sp]
   28e54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28e58:	ldr	r2, [fp, #-48]	; 0xffffffd0
   28e5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28e60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   28e64:	bl	28cdc <__assert_fail@plt+0x179bc>
   28e68:	str	r0, [fp, #-32]	; 0xffffffe0
   28e6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28e70:	cmn	r3, #1
   28e74:	bne	28e80 <__assert_fail@plt+0x17b60>
   28e78:	mvn	r3, #0
   28e7c:	b	28fc4 <__assert_fail@plt+0x17ca4>
   28e80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28e84:	cmp	r3, #0
   28e88:	bne	28ea4 <__assert_fail@plt+0x17b84>
   28e8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28e90:	and	r3, r3, #2
   28e94:	cmp	r3, #0
   28e98:	beq	28ea4 <__assert_fail@plt+0x17b84>
   28e9c:	mov	r3, #0
   28ea0:	b	28fc4 <__assert_fail@plt+0x17ca4>
   28ea4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28ea8:	cmp	r3, #31
   28eac:	bgt	28ee4 <__assert_fail@plt+0x17bc4>
   28eb0:	ldr	r3, [fp, #-12]
   28eb4:	ldr	r2, [r3, #16]
   28eb8:	mov	r1, #1
   28ebc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28ec0:	lsl	r3, r1, r3
   28ec4:	mvn	r3, r3
   28ec8:	and	r2, r2, r3
   28ecc:	ldr	r3, [fp, #-12]
   28ed0:	str	r2, [r3, #16]
   28ed4:	b	28ee4 <__assert_fail@plt+0x17bc4>
   28ed8:	nop			; (mov r0, r0)
   28edc:	b	28ee4 <__assert_fail@plt+0x17bc4>
   28ee0:	nop			; (mov r0, r0)
   28ee4:	ldr	r3, [fp, #-12]
   28ee8:	add	r2, r3, #24
   28eec:	str	r2, [fp, #-12]
   28ef0:	ldrb	r3, [r3, #20]
   28ef4:	cmp	r3, #0
   28ef8:	bne	28db4 <__assert_fail@plt+0x17a94>
   28efc:	b	28f78 <__assert_fail@plt+0x17c58>
   28f00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28f04:	and	r3, r3, #1
   28f08:	cmp	r3, #0
   28f0c:	beq	28f80 <__assert_fail@plt+0x17c60>
   28f10:	ldr	r3, [fp, #-16]
   28f14:	ldr	r2, [r3]
   28f18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28f1c:	lsl	r3, r3, #3
   28f20:	add	r3, r2, r3
   28f24:	ldr	r2, [r3]
   28f28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28f2c:	cmp	r2, r3
   28f30:	bne	28f80 <__assert_fail@plt+0x17c60>
   28f34:	mvn	r3, #0
   28f38:	b	28fc4 <__assert_fail@plt+0x17ca4>
   28f3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28f40:	and	r3, r3, #2
   28f44:	cmp	r3, #0
   28f48:	beq	28f88 <__assert_fail@plt+0x17c68>
   28f4c:	ldr	r3, [fp, #-16]
   28f50:	ldr	r2, [r3]
   28f54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28f58:	lsl	r3, r3, #3
   28f5c:	add	r3, r2, r3
   28f60:	ldr	r2, [r3]
   28f64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28f68:	cmp	r2, r3
   28f6c:	bne	28f88 <__assert_fail@plt+0x17c68>
   28f70:	mov	r3, #0
   28f74:	b	28fc4 <__assert_fail@plt+0x17ca4>
   28f78:	nop			; (mov r0, r0)
   28f7c:	b	28f8c <__assert_fail@plt+0x17c6c>
   28f80:	nop			; (mov r0, r0)
   28f84:	b	28f8c <__assert_fail@plt+0x17c6c>
   28f88:	nop			; (mov r0, r0)
   28f8c:	ldr	r3, [fp, #-8]
   28f90:	add	r3, r3, #1
   28f94:	str	r3, [fp, #-8]
   28f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   28f9c:	ldr	r2, [r3, #4]
   28fa0:	ldr	r3, [fp, #-8]
   28fa4:	cmp	r2, r3
   28fa8:	bgt	28d34 <__assert_fail@plt+0x17a14>
   28fac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28fb0:	and	r3, r3, #2
   28fb4:	cmp	r3, #0
   28fb8:	movne	r3, #1
   28fbc:	moveq	r3, #0
   28fc0:	uxtb	r3, r3
   28fc4:	mov	r0, r3
   28fc8:	sub	sp, fp, #4
   28fcc:	pop	{fp, pc}
   28fd0:	push	{fp, lr}
   28fd4:	add	fp, sp, #4
   28fd8:	sub	sp, sp, #32
   28fdc:	str	r0, [fp, #-16]
   28fe0:	str	r1, [fp, #-20]	; 0xffffffec
   28fe4:	str	r2, [fp, #-24]	; 0xffffffe8
   28fe8:	str	r3, [fp, #-28]	; 0xffffffe4
   28fec:	ldr	r3, [fp, #-16]
   28ff0:	ldr	r1, [r3, #116]	; 0x74
   28ff4:	ldr	r2, [fp, #-20]	; 0xffffffec
   28ff8:	mov	r3, r2
   28ffc:	lsl	r3, r3, #1
   29000:	add	r3, r3, r2
   29004:	lsl	r3, r3, #3
   29008:	add	r3, r1, r3
   2900c:	str	r3, [fp, #-8]
   29010:	ldr	r3, [fp, #-8]
   29014:	ldr	r2, [r3, #8]
   29018:	ldr	r3, [fp, #4]
   2901c:	cmp	r2, r3
   29020:	ble	2902c <__assert_fail@plt+0x17d0c>
   29024:	mvn	r3, #0
   29028:	b	290c8 <__assert_fail@plt+0x17da8>
   2902c:	ldr	r3, [fp, #-8]
   29030:	ldr	r2, [r3, #12]
   29034:	ldr	r3, [fp, #4]
   29038:	cmp	r2, r3
   2903c:	bge	29048 <__assert_fail@plt+0x17d28>
   29040:	mov	r3, #1
   29044:	b	290c8 <__assert_fail@plt+0x17da8>
   29048:	ldr	r3, [fp, #-8]
   2904c:	ldr	r2, [r3, #8]
   29050:	ldr	r3, [fp, #4]
   29054:	cmp	r2, r3
   29058:	moveq	r3, #1
   2905c:	movne	r3, #0
   29060:	uxtb	r3, r3
   29064:	str	r3, [fp, #-12]
   29068:	ldr	r3, [fp, #-8]
   2906c:	ldr	r2, [r3, #12]
   29070:	ldr	r3, [fp, #4]
   29074:	cmp	r2, r3
   29078:	bne	29084 <__assert_fail@plt+0x17d64>
   2907c:	mov	r3, #2
   29080:	b	29088 <__assert_fail@plt+0x17d68>
   29084:	mov	r3, #0
   29088:	ldr	r2, [fp, #-12]
   2908c:	orr	r3, r2, r3
   29090:	str	r3, [fp, #-12]
   29094:	ldr	r3, [fp, #-12]
   29098:	cmp	r3, #0
   2909c:	bne	290a8 <__assert_fail@plt+0x17d88>
   290a0:	mov	r3, #0
   290a4:	b	290c8 <__assert_fail@plt+0x17da8>
   290a8:	ldr	r3, [fp, #8]
   290ac:	str	r3, [sp]
   290b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   290b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   290b8:	ldr	r1, [fp, #-12]
   290bc:	ldr	r0, [fp, #-16]
   290c0:	bl	28cdc <__assert_fail@plt+0x179bc>
   290c4:	mov	r3, r0
   290c8:	mov	r0, r3
   290cc:	sub	sp, fp, #4
   290d0:	pop	{fp, pc}
   290d4:	push	{fp, lr}
   290d8:	add	fp, sp, #4
   290dc:	sub	sp, sp, #64	; 0x40
   290e0:	str	r0, [fp, #-56]	; 0xffffffc8
   290e4:	str	r1, [fp, #-60]	; 0xffffffc4
   290e8:	str	r2, [fp, #-64]	; 0xffffffc0
   290ec:	str	r3, [fp, #-68]	; 0xffffffbc
   290f0:	mov	r3, #0
   290f4:	str	r3, [fp, #-12]
   290f8:	b	294c8 <__assert_fail@plt+0x181a8>
   290fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   29100:	ldr	r2, [r3, #8]
   29104:	ldr	r3, [fp, #-12]
   29108:	lsl	r3, r3, #2
   2910c:	add	r3, r2, r3
   29110:	ldr	r3, [r3]
   29114:	mov	r2, r3
   29118:	mov	r3, r2
   2911c:	lsl	r3, r3, #1
   29120:	add	r3, r3, r2
   29124:	lsl	r3, r3, #3
   29128:	mov	r2, r3
   2912c:	ldr	r3, [fp, #4]
   29130:	add	r3, r3, r2
   29134:	str	r3, [fp, #-24]	; 0xffffffe8
   29138:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2913c:	ldr	r2, [r3, #8]
   29140:	ldr	r3, [fp, #8]
   29144:	cmp	r2, r3
   29148:	bge	294b8 <__assert_fail@plt+0x18198>
   2914c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29150:	ldr	r2, [r3, #4]
   29154:	ldr	r3, [fp, #8]
   29158:	cmp	r2, r3
   2915c:	blt	294b8 <__assert_fail@plt+0x18198>
   29160:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29164:	ldr	r2, [r3]
   29168:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2916c:	ldr	r3, [r3]
   29170:	lsl	r3, r3, #3
   29174:	add	r3, r2, r3
   29178:	ldr	r3, [r3]
   2917c:	str	r3, [fp, #-28]	; 0xffffffe4
   29180:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29184:	ldr	r2, [r3, #12]
   29188:	ldr	r3, [fp, #8]
   2918c:	cmp	r2, r3
   29190:	bne	293d4 <__assert_fail@plt+0x180b4>
   29194:	mvn	r3, #0
   29198:	str	r3, [fp, #-16]
   2919c:	mvn	r3, #0
   291a0:	str	r3, [fp, #-20]	; 0xffffffec
   291a4:	mov	r3, #0
   291a8:	str	r3, [fp, #-8]
   291ac:	b	29268 <__assert_fail@plt+0x17f48>
   291b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   291b4:	ldr	r2, [r3, #8]
   291b8:	ldr	r3, [fp, #-8]
   291bc:	lsl	r3, r3, #2
   291c0:	add	r3, r2, r3
   291c4:	ldr	r3, [r3]
   291c8:	str	r3, [fp, #-44]	; 0xffffffd4
   291cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   291d0:	ldr	r2, [r3]
   291d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   291d8:	lsl	r3, r3, #3
   291dc:	add	r3, r2, r3
   291e0:	ldrb	r3, [r3, #4]
   291e4:	str	r3, [fp, #-48]	; 0xffffffd0
   291e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   291ec:	cmp	r3, #8
   291f0:	bne	29224 <__assert_fail@plt+0x17f04>
   291f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   291f8:	ldr	r2, [r3]
   291fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29200:	lsl	r3, r3, #3
   29204:	add	r3, r2, r3
   29208:	ldr	r2, [r3]
   2920c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29210:	cmp	r2, r3
   29214:	bne	29224 <__assert_fail@plt+0x17f04>
   29218:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2921c:	str	r3, [fp, #-16]
   29220:	b	2925c <__assert_fail@plt+0x17f3c>
   29224:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29228:	cmp	r3, #9
   2922c:	bne	2925c <__assert_fail@plt+0x17f3c>
   29230:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29234:	ldr	r2, [r3]
   29238:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2923c:	lsl	r3, r3, #3
   29240:	add	r3, r2, r3
   29244:	ldr	r2, [r3]
   29248:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2924c:	cmp	r2, r3
   29250:	bne	2925c <__assert_fail@plt+0x17f3c>
   29254:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29258:	str	r3, [fp, #-20]	; 0xffffffec
   2925c:	ldr	r3, [fp, #-8]
   29260:	add	r3, r3, #1
   29264:	str	r3, [fp, #-8]
   29268:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2926c:	ldr	r2, [r3, #4]
   29270:	ldr	r3, [fp, #-8]
   29274:	cmp	r2, r3
   29278:	bgt	291b0 <__assert_fail@plt+0x17e90>
   2927c:	ldr	r3, [fp, #-16]
   29280:	cmp	r3, #0
   29284:	blt	292c4 <__assert_fail@plt+0x17fa4>
   29288:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2928c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   29290:	ldr	r1, [fp, #-16]
   29294:	ldr	r0, [fp, #-56]	; 0xffffffc8
   29298:	bl	28890 <__assert_fail@plt+0x17570>
   2929c:	str	r0, [fp, #-40]	; 0xffffffd8
   292a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   292a4:	cmp	r3, #0
   292a8:	movne	r3, #1
   292ac:	moveq	r3, #0
   292b0:	uxtb	r3, r3
   292b4:	cmp	r3, #0
   292b8:	beq	292c4 <__assert_fail@plt+0x17fa4>
   292bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   292c0:	b	294e0 <__assert_fail@plt+0x181c0>
   292c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   292c8:	cmp	r3, #0
   292cc:	blt	294bc <__assert_fail@plt+0x1819c>
   292d0:	mov	r3, #0
   292d4:	str	r3, [fp, #-8]
   292d8:	b	293bc <__assert_fail@plt+0x1809c>
   292dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   292e0:	ldr	r2, [r3, #8]
   292e4:	ldr	r3, [fp, #-8]
   292e8:	lsl	r3, r3, #2
   292ec:	add	r3, r2, r3
   292f0:	ldr	r3, [r3]
   292f4:	str	r3, [fp, #-52]	; 0xffffffcc
   292f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   292fc:	ldr	r1, [r3, #28]
   29300:	ldr	r2, [fp, #-52]	; 0xffffffcc
   29304:	mov	r3, r2
   29308:	lsl	r3, r3, #1
   2930c:	add	r3, r3, r2
   29310:	lsl	r3, r3, #2
   29314:	add	r3, r1, r3
   29318:	ldr	r1, [fp, #-20]	; 0xffffffec
   2931c:	mov	r0, r3
   29320:	bl	19e3c <__assert_fail@plt+0x8b1c>
   29324:	mov	r3, r0
   29328:	cmp	r3, #0
   2932c:	bne	293b0 <__assert_fail@plt+0x18090>
   29330:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29334:	ldr	r1, [r3, #24]
   29338:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2933c:	mov	r3, r2
   29340:	lsl	r3, r3, #1
   29344:	add	r3, r3, r2
   29348:	lsl	r3, r3, #2
   2934c:	add	r3, r1, r3
   29350:	ldr	r1, [fp, #-20]	; 0xffffffec
   29354:	mov	r0, r3
   29358:	bl	19e3c <__assert_fail@plt+0x8b1c>
   2935c:	mov	r3, r0
   29360:	cmp	r3, #0
   29364:	bne	293b0 <__assert_fail@plt+0x18090>
   29368:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2936c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   29370:	ldr	r1, [fp, #-52]	; 0xffffffcc
   29374:	ldr	r0, [fp, #-56]	; 0xffffffc8
   29378:	bl	28890 <__assert_fail@plt+0x17570>
   2937c:	str	r0, [fp, #-40]	; 0xffffffd8
   29380:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29384:	cmp	r3, #0
   29388:	movne	r3, #1
   2938c:	moveq	r3, #0
   29390:	uxtb	r3, r3
   29394:	cmp	r3, #0
   29398:	beq	293a4 <__assert_fail@plt+0x18084>
   2939c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   293a0:	b	294e0 <__assert_fail@plt+0x181c0>
   293a4:	ldr	r3, [fp, #-8]
   293a8:	sub	r3, r3, #1
   293ac:	str	r3, [fp, #-8]
   293b0:	ldr	r3, [fp, #-8]
   293b4:	add	r3, r3, #1
   293b8:	str	r3, [fp, #-8]
   293bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   293c0:	ldr	r2, [r3, #4]
   293c4:	ldr	r3, [fp, #-8]
   293c8:	cmp	r2, r3
   293cc:	bgt	292dc <__assert_fail@plt+0x17fbc>
   293d0:	b	294bc <__assert_fail@plt+0x1819c>
   293d4:	mov	r3, #0
   293d8:	str	r3, [fp, #-8]
   293dc:	b	294a0 <__assert_fail@plt+0x18180>
   293e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   293e4:	ldr	r2, [r3, #8]
   293e8:	ldr	r3, [fp, #-8]
   293ec:	lsl	r3, r3, #2
   293f0:	add	r3, r2, r3
   293f4:	ldr	r3, [r3]
   293f8:	str	r3, [fp, #-32]	; 0xffffffe0
   293fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29400:	ldr	r2, [r3]
   29404:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29408:	lsl	r3, r3, #3
   2940c:	add	r3, r2, r3
   29410:	ldrb	r3, [r3, #4]
   29414:	str	r3, [fp, #-36]	; 0xffffffdc
   29418:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2941c:	cmp	r3, #9
   29420:	beq	29430 <__assert_fail@plt+0x18110>
   29424:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29428:	cmp	r3, #8
   2942c:	bne	29494 <__assert_fail@plt+0x18174>
   29430:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29434:	ldr	r2, [r3]
   29438:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2943c:	lsl	r3, r3, #3
   29440:	add	r3, r2, r3
   29444:	ldr	r2, [r3]
   29448:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2944c:	cmp	r2, r3
   29450:	bne	29490 <__assert_fail@plt+0x18170>
   29454:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29458:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2945c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29460:	ldr	r0, [fp, #-56]	; 0xffffffc8
   29464:	bl	28890 <__assert_fail@plt+0x17570>
   29468:	str	r0, [fp, #-40]	; 0xffffffd8
   2946c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29470:	cmp	r3, #0
   29474:	movne	r3, #1
   29478:	moveq	r3, #0
   2947c:	uxtb	r3, r3
   29480:	cmp	r3, #0
   29484:	beq	29494 <__assert_fail@plt+0x18174>
   29488:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2948c:	b	294e0 <__assert_fail@plt+0x181c0>
   29490:	nop			; (mov r0, r0)
   29494:	ldr	r3, [fp, #-8]
   29498:	add	r3, r3, #1
   2949c:	str	r3, [fp, #-8]
   294a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   294a4:	ldr	r2, [r3, #4]
   294a8:	ldr	r3, [fp, #-8]
   294ac:	cmp	r2, r3
   294b0:	bgt	293e0 <__assert_fail@plt+0x180c0>
   294b4:	b	294bc <__assert_fail@plt+0x1819c>
   294b8:	nop			; (mov r0, r0)
   294bc:	ldr	r3, [fp, #-12]
   294c0:	add	r3, r3, #1
   294c4:	str	r3, [fp, #-12]
   294c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   294cc:	ldr	r2, [r3, #4]
   294d0:	ldr	r3, [fp, #-12]
   294d4:	cmp	r2, r3
   294d8:	bgt	290fc <__assert_fail@plt+0x17ddc>
   294dc:	mov	r3, #0
   294e0:	mov	r0, r3
   294e4:	sub	sp, fp, #4
   294e8:	pop	{fp, pc}
   294ec:	push	{fp, lr}
   294f0:	add	fp, sp, #4
   294f4:	sub	sp, sp, #104	; 0x68
   294f8:	str	r0, [fp, #-88]	; 0xffffffa8
   294fc:	str	r1, [fp, #-92]	; 0xffffffa4
   29500:	str	r2, [fp, #-96]	; 0xffffffa0
   29504:	str	r3, [fp, #-100]	; 0xffffff9c
   29508:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2950c:	ldr	r3, [r3, #84]	; 0x54
   29510:	str	r3, [fp, #-24]	; 0xffffffe8
   29514:	ldr	r1, [fp, #-96]	; 0xffffffa0
   29518:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2951c:	bl	2e9cc <__assert_fail@plt+0x1d6ac>
   29520:	str	r0, [fp, #-28]	; 0xffffffe4
   29524:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29528:	cmn	r3, #1
   2952c:	bne	29538 <__assert_fail@plt+0x18218>
   29530:	mov	r3, #0
   29534:	b	29980 <__assert_fail@plt+0x18660>
   29538:	mov	r3, #0
   2953c:	str	r3, [fp, #-84]	; 0xffffffac
   29540:	mov	r3, #0
   29544:	str	r3, [fp, #-12]
   29548:	b	29930 <__assert_fail@plt+0x18610>
   2954c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   29550:	ldr	r2, [r3, #8]
   29554:	ldr	r3, [fp, #-12]
   29558:	lsl	r3, r3, #2
   2955c:	add	r3, r2, r3
   29560:	ldr	r3, [r3]
   29564:	str	r3, [fp, #-32]	; 0xffffffe0
   29568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2956c:	ldr	r2, [r3]
   29570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29574:	lsl	r3, r3, #3
   29578:	add	r3, r2, r3
   2957c:	ldrb	r3, [r3, #4]
   29580:	str	r3, [fp, #-36]	; 0xffffffdc
   29584:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29588:	ldr	r2, [r3, #8]
   2958c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29590:	cmp	r2, r3
   29594:	bne	295ac <__assert_fail@plt+0x1828c>
   29598:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2959c:	ldr	r2, [r3, #12]
   295a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   295a4:	cmp	r2, r3
   295a8:	beq	29918 <__assert_fail@plt+0x185f8>
   295ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   295b0:	cmp	r3, #4
   295b4:	bne	29920 <__assert_fail@plt+0x18600>
   295b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   295bc:	ldr	r1, [r3, #116]	; 0x74
   295c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   295c4:	mov	r3, r2
   295c8:	lsl	r3, r3, #1
   295cc:	add	r3, r3, r2
   295d0:	lsl	r3, r3, #3
   295d4:	add	r3, r1, r3
   295d8:	str	r3, [fp, #-20]	; 0xffffffec
   295dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   295e0:	str	r3, [fp, #-16]
   295e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   295e8:	ldr	r2, [r3]
   295ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   295f0:	cmp	r2, r3
   295f4:	bne	298e4 <__assert_fail@plt+0x185c4>
   295f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   295fc:	ldr	r2, [r3, #12]
   29600:	ldr	r3, [fp, #-20]	; 0xffffffec
   29604:	ldr	r3, [r3, #8]
   29608:	sub	r3, r2, r3
   2960c:	str	r3, [fp, #-40]	; 0xffffffd8
   29610:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29614:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29618:	add	r3, r2, r3
   2961c:	str	r3, [fp, #-44]	; 0xffffffd4
   29620:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29624:	cmp	r3, #0
   29628:	beq	29648 <__assert_fail@plt+0x18328>
   2962c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29630:	ldr	r2, [r3, #12]
   29634:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29638:	lsl	r3, r3, #2
   2963c:	add	r3, r2, r3
   29640:	ldr	r3, [r3]
   29644:	b	29670 <__assert_fail@plt+0x18350>
   29648:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2964c:	ldr	r1, [r3, #20]
   29650:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29654:	mov	r3, r2
   29658:	lsl	r3, r3, #1
   2965c:	add	r3, r3, r2
   29660:	lsl	r3, r3, #2
   29664:	add	r3, r1, r3
   29668:	ldr	r3, [r3, #8]
   2966c:	ldr	r3, [r3]
   29670:	str	r3, [fp, #-48]	; 0xffffffd0
   29674:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29678:	ldr	r2, [r3, #12]
   2967c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29680:	cmp	r2, r3
   29684:	blt	298ec <__assert_fail@plt+0x185cc>
   29688:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2968c:	ldr	r2, [r3]
   29690:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29694:	lsl	r3, r3, #2
   29698:	add	r3, r2, r3
   2969c:	ldr	r3, [r3]
   296a0:	cmp	r3, #0
   296a4:	beq	298ec <__assert_fail@plt+0x185cc>
   296a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   296ac:	ldr	r2, [r3]
   296b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   296b4:	lsl	r3, r3, #2
   296b8:	add	r3, r2, r3
   296bc:	ldr	r3, [r3]
   296c0:	cmp	r3, #0
   296c4:	beq	298ec <__assert_fail@plt+0x185cc>
   296c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   296cc:	ldr	r2, [r3]
   296d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   296d4:	lsl	r3, r3, #2
   296d8:	add	r3, r2, r3
   296dc:	ldr	r3, [r3]
   296e0:	add	r3, r3, #4
   296e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   296e8:	mov	r0, r3
   296ec:	bl	19e3c <__assert_fail@plt+0x8b1c>
   296f0:	mov	r3, r0
   296f4:	cmp	r3, #0
   296f8:	beq	298ec <__assert_fail@plt+0x185cc>
   296fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29700:	add	r1, r3, #16
   29704:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29708:	str	r3, [sp, #4]
   2970c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29710:	str	r3, [sp]
   29714:	ldr	r3, [fp, #-96]	; 0xffffffa0
   29718:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2971c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29720:	bl	28b68 <__assert_fail@plt+0x17848>
   29724:	mov	r3, r0
   29728:	cmp	r3, #0
   2972c:	bne	298ec <__assert_fail@plt+0x185cc>
   29730:	ldr	r3, [fp, #-84]	; 0xffffffac
   29734:	cmp	r3, #0
   29738:	bne	29794 <__assert_fail@plt+0x18474>
   2973c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29740:	sub	ip, fp, #84	; 0x54
   29744:	mov	lr, r3
   29748:	ldm	lr!, {r0, r1, r2, r3}
   2974c:	stmia	ip!, {r0, r1, r2, r3}
   29750:	ldm	lr, {r0, r1, r2}
   29754:	stm	ip, {r0, r1, r2}
   29758:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2975c:	add	r2, r3, #16
   29760:	sub	r3, fp, #84	; 0x54
   29764:	add	r3, r3, #16
   29768:	mov	r1, r2
   2976c:	mov	r0, r3
   29770:	bl	18cd0 <__assert_fail@plt+0x79b0>
   29774:	str	r0, [fp, #-8]
   29778:	ldr	r3, [fp, #-8]
   2977c:	cmp	r3, #0
   29780:	movne	r3, #1
   29784:	moveq	r3, #0
   29788:	uxtb	r3, r3
   2978c:	cmp	r3, #0
   29790:	bne	29950 <__assert_fail@plt+0x18630>
   29794:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29798:	str	r3, [fp, #-76]	; 0xffffffb4
   2979c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   297a0:	str	r3, [fp, #-72]	; 0xffffffb8
   297a4:	sub	r3, fp, #84	; 0x54
   297a8:	add	r3, r3, #16
   297ac:	ldr	r1, [fp, #-16]
   297b0:	mov	r0, r3
   297b4:	bl	19a2c <__assert_fail@plt+0x870c>
   297b8:	mov	r3, r0
   297bc:	strb	r3, [fp, #-49]	; 0xffffffcf
   297c0:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   297c4:	eor	r3, r3, #1
   297c8:	uxtb	r3, r3
   297cc:	cmp	r3, #0
   297d0:	beq	297e0 <__assert_fail@plt+0x184c0>
   297d4:	mov	r3, #12
   297d8:	str	r3, [fp, #-8]
   297dc:	b	29964 <__assert_fail@plt+0x18644>
   297e0:	ldr	r2, [fp, #-84]	; 0xffffffac
   297e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   297e8:	lsl	r3, r3, #2
   297ec:	add	r3, r2, r3
   297f0:	ldr	r3, [r3]
   297f4:	str	r3, [fp, #-56]	; 0xffffffc8
   297f8:	sub	r3, fp, #84	; 0x54
   297fc:	mov	r1, r3
   29800:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29804:	bl	27d9c <__assert_fail@plt+0x16a7c>
   29808:	str	r0, [fp, #-8]
   2980c:	ldr	r3, [fp, #-8]
   29810:	cmp	r3, #0
   29814:	movne	r3, #1
   29818:	moveq	r3, #0
   2981c:	uxtb	r3, r3
   29820:	cmp	r3, #0
   29824:	bne	29958 <__assert_fail@plt+0x18638>
   29828:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2982c:	ldr	r3, [r3, #4]
   29830:	cmp	r3, #0
   29834:	beq	29874 <__assert_fail@plt+0x18554>
   29838:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2983c:	ldr	r1, [r3, #4]
   29840:	ldr	r2, [fp, #-84]	; 0xffffffac
   29844:	ldr	r3, [fp, #-96]	; 0xffffffa0
   29848:	add	r3, r3, #1
   2984c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29850:	bl	28360 <__assert_fail@plt+0x17040>
   29854:	str	r0, [fp, #-8]
   29858:	ldr	r3, [fp, #-8]
   2985c:	cmp	r3, #0
   29860:	movne	r3, #1
   29864:	moveq	r3, #0
   29868:	uxtb	r3, r3
   2986c:	cmp	r3, #0
   29870:	bne	29960 <__assert_fail@plt+0x18640>
   29874:	ldr	r2, [fp, #-84]	; 0xffffffac
   29878:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2987c:	lsl	r3, r3, #2
   29880:	add	r3, r2, r3
   29884:	ldr	r2, [fp, #-56]	; 0xffffffc8
   29888:	str	r2, [r3]
   2988c:	sub	r3, fp, #84	; 0x54
   29890:	add	r3, r3, #16
   29894:	ldr	r1, [fp, #-16]
   29898:	mov	r0, r3
   2989c:	bl	19e3c <__assert_fail@plt+0x8b1c>
   298a0:	mov	r3, r0
   298a4:	sub	r2, r3, #1
   298a8:	sub	r3, fp, #84	; 0x54
   298ac:	add	r3, r3, #16
   298b0:	mov	r1, r2
   298b4:	mov	r0, r3
   298b8:	bl	19f28 <__assert_fail@plt+0x8c08>
   298bc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   298c0:	ldr	r1, [r3, #116]	; 0x74
   298c4:	ldr	r2, [fp, #-16]
   298c8:	mov	r3, r2
   298cc:	lsl	r3, r3, #1
   298d0:	add	r3, r3, r2
   298d4:	lsl	r3, r3, #3
   298d8:	add	r3, r1, r3
   298dc:	str	r3, [fp, #-20]	; 0xffffffec
   298e0:	b	298f0 <__assert_fail@plt+0x185d0>
   298e4:	nop			; (mov r0, r0)
   298e8:	b	298f0 <__assert_fail@plt+0x185d0>
   298ec:	nop			; (mov r0, r0)
   298f0:	ldr	r3, [fp, #-16]
   298f4:	add	r3, r3, #1
   298f8:	str	r3, [fp, #-16]
   298fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   29900:	add	r2, r3, #24
   29904:	str	r2, [fp, #-20]	; 0xffffffec
   29908:	ldrb	r3, [r3, #20]
   2990c:	cmp	r3, #0
   29910:	bne	295e4 <__assert_fail@plt+0x182c4>
   29914:	b	29924 <__assert_fail@plt+0x18604>
   29918:	nop			; (mov r0, r0)
   2991c:	b	29924 <__assert_fail@plt+0x18604>
   29920:	nop			; (mov r0, r0)
   29924:	ldr	r3, [fp, #-12]
   29928:	add	r3, r3, #1
   2992c:	str	r3, [fp, #-12]
   29930:	ldr	r3, [fp, #-100]	; 0xffffff9c
   29934:	ldr	r2, [r3, #4]
   29938:	ldr	r3, [fp, #-12]
   2993c:	cmp	r2, r3
   29940:	bgt	2954c <__assert_fail@plt+0x1822c>
   29944:	mov	r3, #0
   29948:	str	r3, [fp, #-8]
   2994c:	b	29964 <__assert_fail@plt+0x18644>
   29950:	nop			; (mov r0, r0)
   29954:	b	29964 <__assert_fail@plt+0x18644>
   29958:	nop			; (mov r0, r0)
   2995c:	b	29964 <__assert_fail@plt+0x18644>
   29960:	nop			; (mov r0, r0)
   29964:	ldr	r3, [fp, #-84]	; 0xffffffac
   29968:	cmp	r3, #0
   2996c:	beq	2997c <__assert_fail@plt+0x1865c>
   29970:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29974:	mov	r0, r3
   29978:	bl	31500 <__assert_fail@plt+0x201e0>
   2997c:	ldr	r3, [fp, #-8]
   29980:	mov	r0, r3
   29984:	sub	sp, fp, #4
   29988:	pop	{fp, pc}
   2998c:	push	{fp, lr}
   29990:	add	fp, sp, #4
   29994:	sub	sp, sp, #24
   29998:	str	r0, [fp, #-16]
   2999c:	str	r1, [fp, #-20]	; 0xffffffec
   299a0:	str	r2, [fp, #-24]	; 0xffffffe8
   299a4:	str	r3, [fp, #-28]	; 0xffffffe4
   299a8:	ldr	r3, [fp, #-16]
   299ac:	ldr	r3, [r3, #84]	; 0x54
   299b0:	str	r3, [fp, #-12]
   299b4:	ldr	r2, [fp, #-16]
   299b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   299bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   299c0:	ldr	r0, [fp, #-12]
   299c4:	bl	2da90 <__assert_fail@plt+0x1c770>
   299c8:	str	r0, [fp, #-8]
   299cc:	ldr	r3, [fp, #-8]
   299d0:	cmp	r3, #0
   299d4:	ble	29a70 <__assert_fail@plt+0x18750>
   299d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   299dc:	ldr	r3, [fp, #-8]
   299e0:	add	r2, r2, r3
   299e4:	ldr	r3, [fp, #4]
   299e8:	cmp	r2, r3
   299ec:	bgt	29a70 <__assert_fail@plt+0x18750>
   299f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   299f4:	ldr	r2, [r3]
   299f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   299fc:	ldr	r3, [fp, #-8]
   29a00:	add	r3, r1, r3
   29a04:	lsl	r3, r3, #2
   29a08:	add	r3, r2, r3
   29a0c:	ldr	r3, [r3]
   29a10:	cmp	r3, #0
   29a14:	beq	29a68 <__assert_fail@plt+0x18748>
   29a18:	ldr	r3, [fp, #-20]	; 0xffffffec
   29a1c:	ldr	r2, [r3]
   29a20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29a24:	ldr	r3, [fp, #-8]
   29a28:	add	r3, r1, r3
   29a2c:	lsl	r3, r3, #2
   29a30:	add	r3, r2, r3
   29a34:	ldr	r3, [r3]
   29a38:	add	r0, r3, #4
   29a3c:	ldr	r3, [fp, #-12]
   29a40:	ldr	r2, [r3, #12]
   29a44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29a48:	lsl	r3, r3, #2
   29a4c:	add	r3, r2, r3
   29a50:	ldr	r3, [r3]
   29a54:	mov	r1, r3
   29a58:	bl	19e3c <__assert_fail@plt+0x8b1c>
   29a5c:	mov	r3, r0
   29a60:	cmp	r3, #0
   29a64:	bne	29a70 <__assert_fail@plt+0x18750>
   29a68:	mov	r3, #0
   29a6c:	str	r3, [fp, #-8]
   29a70:	ldr	r3, [fp, #-8]
   29a74:	mov	r0, r3
   29a78:	sub	sp, fp, #4
   29a7c:	pop	{fp, pc}
   29a80:	push	{fp, lr}
   29a84:	add	fp, sp, #4
   29a88:	sub	sp, sp, #32
   29a8c:	str	r0, [fp, #-24]	; 0xffffffe8
   29a90:	str	r1, [fp, #-28]	; 0xffffffe4
   29a94:	str	r2, [fp, #-32]	; 0xffffffe0
   29a98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29a9c:	ldrb	r3, [r3, #52]	; 0x34
   29aa0:	lsr	r3, r3, #5
   29aa4:	and	r3, r3, #1
   29aa8:	uxtb	r3, r3
   29aac:	cmp	r3, #0
   29ab0:	beq	29af4 <__assert_fail@plt+0x187d4>
   29ab4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29ab8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29abc:	bl	2a0d0 <__assert_fail@plt+0x18db0>
   29ac0:	mov	r2, r0
   29ac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29ac8:	str	r2, [r3]
   29acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29ad0:	ldr	r3, [r3]
   29ad4:	cmp	r3, #0
   29ad8:	movne	r3, #1
   29adc:	moveq	r3, #0
   29ae0:	uxtb	r3, r3
   29ae4:	cmp	r3, #0
   29ae8:	beq	29af4 <__assert_fail@plt+0x187d4>
   29aec:	mov	r3, #0
   29af0:	b	29c24 <__assert_fail@plt+0x18904>
   29af4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29af8:	ldr	r2, [r3, #4]
   29afc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29b00:	ldr	r3, [r3, #40]	; 0x28
   29b04:	add	r0, r3, #1
   29b08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29b0c:	str	r0, [r1, #40]	; 0x28
   29b10:	add	r3, r2, r3
   29b14:	ldrb	r3, [r3]
   29b18:	strb	r3, [fp, #-5]
   29b1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29b20:	ldr	r3, [r3, #44]	; 0x2c
   29b24:	str	r3, [fp, #-12]
   29b28:	ldr	r3, [fp, #-12]
   29b2c:	cmp	r3, #0
   29b30:	movne	r3, #1
   29b34:	moveq	r3, #0
   29b38:	uxtb	r3, r3
   29b3c:	cmp	r3, #0
   29b40:	beq	29b5c <__assert_fail@plt+0x1883c>
   29b44:	ldrb	r3, [fp, #-5]
   29b48:	lsl	r3, r3, #2
   29b4c:	ldr	r2, [fp, #-12]
   29b50:	add	r3, r2, r3
   29b54:	ldr	r3, [r3]
   29b58:	b	29c24 <__assert_fail@plt+0x18904>
   29b5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29b60:	ldr	r3, [r3, #48]	; 0x30
   29b64:	str	r3, [fp, #-12]
   29b68:	ldr	r3, [fp, #-12]
   29b6c:	cmp	r3, #0
   29b70:	movne	r3, #1
   29b74:	moveq	r3, #0
   29b78:	uxtb	r3, r3
   29b7c:	cmp	r3, #0
   29b80:	beq	29bec <__assert_fail@plt+0x188cc>
   29b84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29b88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29b8c:	ldr	r3, [r3, #40]	; 0x28
   29b90:	sub	r1, r3, #1
   29b94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29b98:	ldr	r3, [r3, #88]	; 0x58
   29b9c:	mov	r2, r3
   29ba0:	bl	188b0 <__assert_fail@plt+0x7590>
   29ba4:	str	r0, [fp, #-16]
   29ba8:	ldr	r3, [fp, #-16]
   29bac:	and	r3, r3, #1
   29bb0:	cmp	r3, #0
   29bb4:	beq	29bd4 <__assert_fail@plt+0x188b4>
   29bb8:	ldrb	r3, [fp, #-5]
   29bbc:	add	r3, r3, #256	; 0x100
   29bc0:	lsl	r3, r3, #2
   29bc4:	ldr	r2, [fp, #-12]
   29bc8:	add	r3, r2, r3
   29bcc:	ldr	r3, [r3]
   29bd0:	b	29c24 <__assert_fail@plt+0x18904>
   29bd4:	ldrb	r3, [fp, #-5]
   29bd8:	lsl	r3, r3, #2
   29bdc:	ldr	r2, [fp, #-12]
   29be0:	add	r3, r2, r3
   29be4:	ldr	r3, [r3]
   29be8:	b	29c24 <__assert_fail@plt+0x18904>
   29bec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29bf0:	ldr	r3, [r3, #84]	; 0x54
   29bf4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29bf8:	mov	r0, r3
   29bfc:	bl	2c5b8 <__assert_fail@plt+0x1b298>
   29c00:	mov	r3, r0
   29c04:	eor	r3, r3, #1
   29c08:	uxtb	r3, r3
   29c0c:	cmp	r3, #0
   29c10:	beq	29b1c <__assert_fail@plt+0x187fc>
   29c14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29c18:	mov	r2, #12
   29c1c:	str	r2, [r3]
   29c20:	mov	r3, #0
   29c24:	mov	r0, r3
   29c28:	sub	sp, fp, #4
   29c2c:	pop	{fp, pc}
   29c30:	push	{r4, fp, lr}
   29c34:	add	fp, sp, #8
   29c38:	sub	sp, sp, #60	; 0x3c
   29c3c:	str	r0, [fp, #-56]	; 0xffffffc8
   29c40:	str	r1, [fp, #-60]	; 0xffffffc4
   29c44:	str	r2, [fp, #-64]	; 0xffffffc0
   29c48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29c4c:	ldr	r3, [r3, #84]	; 0x54
   29c50:	str	r3, [fp, #-20]	; 0xffffffec
   29c54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29c58:	ldr	r3, [r3, #40]	; 0x28
   29c5c:	str	r3, [fp, #-24]	; 0xffffffe8
   29c60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29c64:	ldr	r2, [r3, #104]	; 0x68
   29c68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29c6c:	cmp	r2, r3
   29c70:	bge	29ca0 <__assert_fail@plt+0x18980>
   29c74:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29c78:	ldr	r2, [r3, #100]	; 0x64
   29c7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29c80:	lsl	r3, r3, #2
   29c84:	add	r3, r2, r3
   29c88:	ldr	r2, [fp, #-64]	; 0xffffffc0
   29c8c:	str	r2, [r3]
   29c90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29c94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29c98:	str	r2, [r3, #104]	; 0x68
   29c9c:	b	29df4 <__assert_fail@plt+0x18ad4>
   29ca0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29ca4:	ldr	r2, [r3, #100]	; 0x64
   29ca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29cac:	lsl	r3, r3, #2
   29cb0:	add	r3, r2, r3
   29cb4:	ldr	r3, [r3]
   29cb8:	cmp	r3, #0
   29cbc:	bne	29ce0 <__assert_fail@plt+0x189c0>
   29cc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29cc4:	ldr	r2, [r3, #100]	; 0x64
   29cc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29ccc:	lsl	r3, r3, #2
   29cd0:	add	r3, r2, r3
   29cd4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   29cd8:	str	r2, [r3]
   29cdc:	b	29df4 <__assert_fail@plt+0x18ad4>
   29ce0:	mov	r3, #0
   29ce4:	str	r3, [fp, #-16]
   29ce8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29cec:	ldr	r2, [r3, #100]	; 0x64
   29cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29cf4:	lsl	r3, r3, #2
   29cf8:	add	r3, r2, r3
   29cfc:	ldr	r3, [r3]
   29d00:	str	r3, [fp, #-28]	; 0xffffffe4
   29d04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29d08:	ldr	r3, [r3, #40]	; 0x28
   29d0c:	str	r3, [fp, #-32]	; 0xffffffe0
   29d10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29d14:	cmp	r3, #0
   29d18:	beq	29d70 <__assert_fail@plt+0x18a50>
   29d1c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29d20:	ldr	r3, [r3, #40]	; 0x28
   29d24:	str	r3, [fp, #-16]
   29d28:	sub	r3, fp, #48	; 0x30
   29d2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29d30:	ldr	r1, [fp, #-16]
   29d34:	mov	r0, r3
   29d38:	bl	1925c <__assert_fail@plt+0x7f3c>
   29d3c:	mov	r2, r0
   29d40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29d44:	str	r2, [r3]
   29d48:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29d4c:	ldr	r3, [r3]
   29d50:	cmp	r3, #0
   29d54:	movne	r3, #1
   29d58:	moveq	r3, #0
   29d5c:	uxtb	r3, r3
   29d60:	cmp	r3, #0
   29d64:	beq	29d80 <__assert_fail@plt+0x18a60>
   29d68:	mov	r3, #0
   29d6c:	b	29edc <__assert_fail@plt+0x18bbc>
   29d70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29d74:	sub	r3, fp, #48	; 0x30
   29d78:	ldm	r2, {r0, r1, r2}
   29d7c:	stm	r3, {r0, r1, r2}
   29d80:	ldr	r0, [fp, #-60]	; 0xffffffc4
   29d84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29d88:	ldr	r3, [r3, #40]	; 0x28
   29d8c:	sub	r1, r3, #1
   29d90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29d94:	ldr	r3, [r3, #88]	; 0x58
   29d98:	mov	r2, r3
   29d9c:	bl	188b0 <__assert_fail@plt+0x7590>
   29da0:	str	r0, [fp, #-36]	; 0xffffffdc
   29da4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29da8:	ldr	r2, [r3, #100]	; 0x64
   29dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29db0:	lsl	r3, r3, #2
   29db4:	add	r4, r2, r3
   29db8:	sub	r2, fp, #48	; 0x30
   29dbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29dc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   29dc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   29dc8:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   29dcc:	mov	r3, r0
   29dd0:	str	r3, [r4]
   29dd4:	ldr	r3, [r4]
   29dd8:	str	r3, [fp, #-64]	; 0xffffffc0
   29ddc:	ldr	r3, [fp, #-16]
   29de0:	cmp	r3, #0
   29de4:	beq	29df4 <__assert_fail@plt+0x18ad4>
   29de8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29dec:	mov	r0, r3
   29df0:	bl	31500 <__assert_fail@plt+0x201e0>
   29df4:	ldr	r3, [fp, #-20]	; 0xffffffec
   29df8:	ldr	r3, [r3, #76]	; 0x4c
   29dfc:	cmp	r3, #0
   29e00:	beq	29ed8 <__assert_fail@plt+0x18bb8>
   29e04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29e08:	cmp	r3, #0
   29e0c:	beq	29ed8 <__assert_fail@plt+0x18bb8>
   29e10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29e14:	add	r3, r3, #4
   29e18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29e1c:	mov	r1, r3
   29e20:	ldr	r0, [fp, #-60]	; 0xffffffc4
   29e24:	bl	29fac <__assert_fail@plt+0x18c8c>
   29e28:	mov	r2, r0
   29e2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29e30:	str	r2, [r3]
   29e34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29e38:	ldr	r3, [r3]
   29e3c:	cmp	r3, #0
   29e40:	movne	r3, #1
   29e44:	moveq	r3, #0
   29e48:	uxtb	r3, r3
   29e4c:	cmp	r3, #0
   29e50:	beq	29e5c <__assert_fail@plt+0x18b3c>
   29e54:	mov	r3, #0
   29e58:	b	29edc <__assert_fail@plt+0x18bbc>
   29e5c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29e60:	ldrb	r3, [r3, #52]	; 0x34
   29e64:	and	r3, r3, #64	; 0x40
   29e68:	uxtb	r3, r3
   29e6c:	cmp	r3, #0
   29e70:	beq	29ed8 <__assert_fail@plt+0x18bb8>
   29e74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29e78:	add	r3, r3, #4
   29e7c:	mov	r1, r3
   29e80:	ldr	r0, [fp, #-60]	; 0xffffffc4
   29e84:	bl	2a508 <__assert_fail@plt+0x191e8>
   29e88:	mov	r2, r0
   29e8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29e90:	str	r2, [r3]
   29e94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29e98:	ldr	r3, [r3]
   29e9c:	cmp	r3, #0
   29ea0:	movne	r3, #1
   29ea4:	moveq	r3, #0
   29ea8:	uxtb	r3, r3
   29eac:	cmp	r3, #0
   29eb0:	beq	29ebc <__assert_fail@plt+0x18b9c>
   29eb4:	mov	r3, #0
   29eb8:	b	29edc <__assert_fail@plt+0x18bbc>
   29ebc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29ec0:	ldr	r2, [r3, #100]	; 0x64
   29ec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29ec8:	lsl	r3, r3, #2
   29ecc:	add	r3, r2, r3
   29ed0:	ldr	r3, [r3]
   29ed4:	str	r3, [fp, #-64]	; 0xffffffc0
   29ed8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29edc:	mov	r0, r3
   29ee0:	sub	sp, fp, #8
   29ee4:	pop	{r4, fp, pc}
   29ee8:	push	{fp, lr}
   29eec:	add	fp, sp, #4
   29ef0:	sub	sp, sp, #24
   29ef4:	str	r0, [fp, #-24]	; 0xffffffe8
   29ef8:	str	r1, [fp, #-28]	; 0xffffffe4
   29efc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29f00:	ldr	r3, [r3, #104]	; 0x68
   29f04:	str	r3, [fp, #-12]
   29f08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29f0c:	ldr	r3, [r3, #40]	; 0x28
   29f10:	str	r3, [fp, #-8]
   29f14:	ldr	r3, [fp, #-8]
   29f18:	add	r3, r3, #1
   29f1c:	str	r3, [fp, #-8]
   29f20:	ldr	r2, [fp, #-8]
   29f24:	ldr	r3, [fp, #-12]
   29f28:	cmp	r2, r3
   29f2c:	ble	29f38 <__assert_fail@plt+0x18c18>
   29f30:	mov	r3, #0
   29f34:	b	29fa0 <__assert_fail@plt+0x18c80>
   29f38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29f3c:	ldr	r3, [r3, #40]	; 0x28
   29f40:	add	r2, r3, #1
   29f44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29f48:	str	r2, [r3, #40]	; 0x28
   29f4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29f50:	ldr	r2, [r3, #100]	; 0x64
   29f54:	ldr	r3, [fp, #-8]
   29f58:	lsl	r3, r3, #2
   29f5c:	add	r3, r2, r3
   29f60:	ldr	r3, [r3]
   29f64:	cmp	r3, #0
   29f68:	beq	29f14 <__assert_fail@plt+0x18bf4>
   29f6c:	mov	r2, #0
   29f70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29f78:	bl	29c30 <__assert_fail@plt+0x18910>
   29f7c:	str	r0, [fp, #-16]
   29f80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29f84:	ldr	r3, [r3]
   29f88:	cmp	r3, #0
   29f8c:	bne	29f9c <__assert_fail@plt+0x18c7c>
   29f90:	ldr	r3, [fp, #-16]
   29f94:	cmp	r3, #0
   29f98:	beq	29efc <__assert_fail@plt+0x18bdc>
   29f9c:	ldr	r3, [fp, #-16]
   29fa0:	mov	r0, r3
   29fa4:	sub	sp, fp, #4
   29fa8:	pop	{fp, pc}
   29fac:	push	{fp, lr}
   29fb0:	add	fp, sp, #4
   29fb4:	sub	sp, sp, #32
   29fb8:	str	r0, [fp, #-24]	; 0xffffffe8
   29fbc:	str	r1, [fp, #-28]	; 0xffffffe4
   29fc0:	str	r2, [fp, #-32]	; 0xffffffe0
   29fc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29fc8:	ldr	r3, [r3, #84]	; 0x54
   29fcc:	str	r3, [fp, #-12]
   29fd0:	mov	r3, #0
   29fd4:	str	r3, [fp, #-8]
   29fd8:	b	2a0ac <__assert_fail@plt+0x18d8c>
   29fdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29fe0:	ldr	r2, [r3, #8]
   29fe4:	ldr	r3, [fp, #-8]
   29fe8:	lsl	r3, r3, #2
   29fec:	add	r3, r2, r3
   29ff0:	ldr	r3, [r3]
   29ff4:	str	r3, [fp, #-16]
   29ff8:	ldr	r3, [fp, #-12]
   29ffc:	ldr	r2, [r3]
   2a000:	ldr	r3, [fp, #-16]
   2a004:	lsl	r3, r3, #3
   2a008:	add	r3, r2, r3
   2a00c:	ldrb	r3, [r3, #4]
   2a010:	cmp	r3, #8
   2a014:	bne	2a0a0 <__assert_fail@plt+0x18d80>
   2a018:	ldr	r3, [fp, #-12]
   2a01c:	ldr	r2, [r3]
   2a020:	ldr	r3, [fp, #-16]
   2a024:	lsl	r3, r3, #3
   2a028:	add	r3, r2, r3
   2a02c:	ldr	r3, [r3]
   2a030:	cmp	r3, #31
   2a034:	bgt	2a0a0 <__assert_fail@plt+0x18d80>
   2a038:	ldr	r3, [fp, #-12]
   2a03c:	ldr	r2, [r3, #80]	; 0x50
   2a040:	ldr	r3, [fp, #-12]
   2a044:	ldr	r1, [r3]
   2a048:	ldr	r3, [fp, #-16]
   2a04c:	lsl	r3, r3, #3
   2a050:	add	r3, r1, r3
   2a054:	ldr	r3, [r3]
   2a058:	lsr	r3, r2, r3
   2a05c:	and	r3, r3, #1
   2a060:	cmp	r3, #0
   2a064:	beq	2a0a0 <__assert_fail@plt+0x18d80>
   2a068:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a06c:	ldr	r1, [fp, #-16]
   2a070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a074:	bl	2ead0 <__assert_fail@plt+0x1d7b0>
   2a078:	str	r0, [fp, #-20]	; 0xffffffec
   2a07c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a080:	cmp	r3, #0
   2a084:	movne	r3, #1
   2a088:	moveq	r3, #0
   2a08c:	uxtb	r3, r3
   2a090:	cmp	r3, #0
   2a094:	beq	2a0a0 <__assert_fail@plt+0x18d80>
   2a098:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a09c:	b	2a0c4 <__assert_fail@plt+0x18da4>
   2a0a0:	ldr	r3, [fp, #-8]
   2a0a4:	add	r3, r3, #1
   2a0a8:	str	r3, [fp, #-8]
   2a0ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a0b0:	ldr	r2, [r3, #4]
   2a0b4:	ldr	r3, [fp, #-8]
   2a0b8:	cmp	r2, r3
   2a0bc:	bgt	29fdc <__assert_fail@plt+0x18cbc>
   2a0c0:	mov	r3, #0
   2a0c4:	mov	r0, r3
   2a0c8:	sub	sp, fp, #4
   2a0cc:	pop	{fp, pc}
   2a0d0:	push	{r4, fp, lr}
   2a0d4:	add	fp, sp, #8
   2a0d8:	sub	sp, sp, #60	; 0x3c
   2a0dc:	str	r0, [fp, #-64]	; 0xffffffc0
   2a0e0:	str	r1, [fp, #-68]	; 0xffffffbc
   2a0e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a0e8:	ldr	r3, [r3, #84]	; 0x54
   2a0ec:	str	r3, [fp, #-20]	; 0xffffffec
   2a0f0:	mov	r3, #0
   2a0f4:	str	r3, [fp, #-16]
   2a0f8:	b	2a4e0 <__assert_fail@plt+0x191c0>
   2a0fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2a100:	ldr	r2, [r3, #12]
   2a104:	ldr	r3, [fp, #-16]
   2a108:	lsl	r3, r3, #2
   2a10c:	add	r3, r2, r3
   2a110:	ldr	r3, [r3]
   2a114:	str	r3, [fp, #-24]	; 0xffffffe8
   2a118:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a11c:	ldr	r2, [r3]
   2a120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a124:	lsl	r3, r3, #3
   2a128:	add	r3, r2, r3
   2a12c:	ldrb	r3, [r3, #6]
   2a130:	and	r3, r3, #16
   2a134:	uxtb	r3, r3
   2a138:	cmp	r3, #0
   2a13c:	beq	2a4c0 <__assert_fail@plt+0x191a0>
   2a140:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a144:	ldr	r2, [r3]
   2a148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a14c:	lsl	r3, r3, #3
   2a150:	add	r3, r2, r3
   2a154:	ldr	r2, [r3, #4]
   2a158:	ldr	r3, [pc, #932]	; 2a504 <__assert_fail@plt+0x191e4>
   2a15c:	and	r3, r3, r2
   2a160:	cmp	r3, #0
   2a164:	beq	2a298 <__assert_fail@plt+0x18f78>
   2a168:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2a16c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a170:	ldr	r1, [r3, #40]	; 0x28
   2a174:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a178:	ldr	r3, [r3, #88]	; 0x58
   2a17c:	mov	r2, r3
   2a180:	bl	188b0 <__assert_fail@plt+0x7590>
   2a184:	str	r0, [fp, #-28]	; 0xffffffe4
   2a188:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a18c:	ldr	r2, [r3]
   2a190:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a194:	lsl	r3, r3, #3
   2a198:	add	r3, r2, r3
   2a19c:	ldr	r3, [r3, #4]
   2a1a0:	lsr	r3, r3, #8
   2a1a4:	lsl	r3, r3, #22
   2a1a8:	lsr	r3, r3, #22
   2a1ac:	uxth	r3, r3
   2a1b0:	and	r3, r3, #4
   2a1b4:	cmp	r3, #0
   2a1b8:	beq	2a1cc <__assert_fail@plt+0x18eac>
   2a1bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a1c0:	and	r3, r3, #1
   2a1c4:	cmp	r3, #0
   2a1c8:	beq	2a4c8 <__assert_fail@plt+0x191a8>
   2a1cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a1d0:	ldr	r2, [r3]
   2a1d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a1d8:	lsl	r3, r3, #3
   2a1dc:	add	r3, r2, r3
   2a1e0:	ldr	r3, [r3, #4]
   2a1e4:	lsr	r3, r3, #8
   2a1e8:	lsl	r3, r3, #22
   2a1ec:	lsr	r3, r3, #22
   2a1f0:	uxth	r3, r3
   2a1f4:	and	r3, r3, #8
   2a1f8:	cmp	r3, #0
   2a1fc:	beq	2a210 <__assert_fail@plt+0x18ef0>
   2a200:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a204:	and	r3, r3, #1
   2a208:	cmp	r3, #0
   2a20c:	bne	2a4c8 <__assert_fail@plt+0x191a8>
   2a210:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a214:	ldr	r2, [r3]
   2a218:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a21c:	lsl	r3, r3, #3
   2a220:	add	r3, r2, r3
   2a224:	ldr	r3, [r3, #4]
   2a228:	lsr	r3, r3, #8
   2a22c:	lsl	r3, r3, #22
   2a230:	lsr	r3, r3, #22
   2a234:	uxth	r3, r3
   2a238:	and	r3, r3, #32
   2a23c:	cmp	r3, #0
   2a240:	beq	2a254 <__assert_fail@plt+0x18f34>
   2a244:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a248:	and	r3, r3, #2
   2a24c:	cmp	r3, #0
   2a250:	beq	2a4c8 <__assert_fail@plt+0x191a8>
   2a254:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a258:	ldr	r2, [r3]
   2a25c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a260:	lsl	r3, r3, #3
   2a264:	add	r3, r2, r3
   2a268:	ldr	r3, [r3, #4]
   2a26c:	lsr	r3, r3, #8
   2a270:	lsl	r3, r3, #22
   2a274:	lsr	r3, r3, #22
   2a278:	uxth	r3, r3
   2a27c:	and	r3, r3, #128	; 0x80
   2a280:	cmp	r3, #0
   2a284:	beq	2a298 <__assert_fail@plt+0x18f78>
   2a288:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a28c:	and	r3, r3, #8
   2a290:	cmp	r3, #0
   2a294:	beq	2a4c8 <__assert_fail@plt+0x191a8>
   2a298:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2a29c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a2a0:	ldr	r3, [r3, #40]	; 0x28
   2a2a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a2a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a2ac:	bl	2da90 <__assert_fail@plt+0x1c770>
   2a2b0:	str	r0, [fp, #-32]	; 0xffffffe0
   2a2b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a2b8:	cmp	r3, #0
   2a2bc:	beq	2a4d0 <__assert_fail@plt+0x191b0>
   2a2c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a2c4:	ldr	r2, [r3, #40]	; 0x28
   2a2c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a2cc:	add	r3, r2, r3
   2a2d0:	str	r3, [fp, #-36]	; 0xffffffdc
   2a2d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a2d8:	ldr	r2, [r3, #120]	; 0x78
   2a2dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a2e0:	cmp	r2, r3
   2a2e4:	movge	r2, r2
   2a2e8:	movlt	r2, r3
   2a2ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a2f0:	str	r2, [r3, #120]	; 0x78
   2a2f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a2f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2a2fc:	bl	28240 <__assert_fail@plt+0x16f20>
   2a300:	mov	r3, r0
   2a304:	str	r3, [fp, #-48]	; 0xffffffd0
   2a308:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a30c:	cmp	r3, #0
   2a310:	movne	r3, #1
   2a314:	moveq	r3, #0
   2a318:	uxtb	r3, r3
   2a31c:	cmp	r3, #0
   2a320:	beq	2a32c <__assert_fail@plt+0x1900c>
   2a324:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a328:	b	2a4f8 <__assert_fail@plt+0x191d8>
   2a32c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a330:	ldr	r2, [r3, #12]
   2a334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a338:	lsl	r3, r3, #2
   2a33c:	add	r3, r2, r3
   2a340:	ldr	r3, [r3]
   2a344:	cmn	r3, #1
   2a348:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a34c:	ldr	r2, [r3, #24]
   2a350:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a354:	ldr	r1, [r3, #12]
   2a358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a35c:	lsl	r3, r3, #2
   2a360:	add	r3, r1, r3
   2a364:	ldr	r3, [r3]
   2a368:	mov	r1, r3
   2a36c:	mov	r3, r1
   2a370:	lsl	r3, r3, #1
   2a374:	add	r3, r3, r1
   2a378:	lsl	r3, r3, #2
   2a37c:	add	r3, r2, r3
   2a380:	str	r3, [fp, #-40]	; 0xffffffd8
   2a384:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a388:	ldr	r2, [r3, #100]	; 0x64
   2a38c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a390:	lsl	r3, r3, #2
   2a394:	add	r3, r2, r3
   2a398:	ldr	r3, [r3]
   2a39c:	str	r3, [fp, #-44]	; 0xffffffd4
   2a3a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a3a4:	cmp	r3, #0
   2a3a8:	bne	2a3c0 <__assert_fail@plt+0x190a0>
   2a3ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a3b0:	sub	r3, fp, #60	; 0x3c
   2a3b4:	ldm	r2, {r0, r1, r2}
   2a3b8:	stm	r3, {r0, r1, r2}
   2a3bc:	b	2a404 <__assert_fail@plt+0x190e4>
   2a3c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a3c4:	ldr	r1, [r3, #40]	; 0x28
   2a3c8:	sub	r3, fp, #60	; 0x3c
   2a3cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a3d0:	mov	r0, r3
   2a3d4:	bl	1925c <__assert_fail@plt+0x7f3c>
   2a3d8:	mov	r3, r0
   2a3dc:	str	r3, [fp, #-48]	; 0xffffffd0
   2a3e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a3e4:	cmp	r3, #0
   2a3e8:	movne	r3, #1
   2a3ec:	moveq	r3, #0
   2a3f0:	uxtb	r3, r3
   2a3f4:	cmp	r3, #0
   2a3f8:	beq	2a404 <__assert_fail@plt+0x190e4>
   2a3fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a400:	b	2a4f8 <__assert_fail@plt+0x191d8>
   2a404:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2a408:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a40c:	sub	r1, r3, #1
   2a410:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a414:	ldr	r3, [r3, #88]	; 0x58
   2a418:	mov	r2, r3
   2a41c:	bl	188b0 <__assert_fail@plt+0x7590>
   2a420:	str	r0, [fp, #-28]	; 0xffffffe4
   2a424:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a428:	ldr	r2, [r3, #100]	; 0x64
   2a42c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a430:	lsl	r3, r3, #2
   2a434:	add	r4, r2, r3
   2a438:	sub	r2, fp, #60	; 0x3c
   2a43c:	sub	r0, fp, #48	; 0x30
   2a440:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a444:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a448:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   2a44c:	mov	r3, r0
   2a450:	str	r3, [r4]
   2a454:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a458:	cmp	r3, #0
   2a45c:	beq	2a46c <__assert_fail@plt+0x1914c>
   2a460:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2a464:	mov	r0, r3
   2a468:	bl	31500 <__assert_fail@plt+0x201e0>
   2a46c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a470:	ldr	r2, [r3, #100]	; 0x64
   2a474:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a478:	lsl	r3, r3, #2
   2a47c:	add	r3, r2, r3
   2a480:	ldr	r3, [r3]
   2a484:	cmp	r3, #0
   2a488:	moveq	r3, #1
   2a48c:	movne	r3, #0
   2a490:	uxtb	r3, r3
   2a494:	cmp	r3, #0
   2a498:	beq	2a4d4 <__assert_fail@plt+0x191b4>
   2a49c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a4a0:	cmp	r3, #0
   2a4a4:	movne	r3, #1
   2a4a8:	moveq	r3, #0
   2a4ac:	uxtb	r3, r3
   2a4b0:	cmp	r3, #0
   2a4b4:	beq	2a4d4 <__assert_fail@plt+0x191b4>
   2a4b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a4bc:	b	2a4f8 <__assert_fail@plt+0x191d8>
   2a4c0:	nop			; (mov r0, r0)
   2a4c4:	b	2a4d4 <__assert_fail@plt+0x191b4>
   2a4c8:	nop			; (mov r0, r0)
   2a4cc:	b	2a4d4 <__assert_fail@plt+0x191b4>
   2a4d0:	nop			; (mov r0, r0)
   2a4d4:	ldr	r3, [fp, #-16]
   2a4d8:	add	r3, r3, #1
   2a4dc:	str	r3, [fp, #-16]
   2a4e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2a4e4:	ldr	r2, [r3, #8]
   2a4e8:	ldr	r3, [fp, #-16]
   2a4ec:	cmp	r2, r3
   2a4f0:	bgt	2a0fc <__assert_fail@plt+0x18ddc>
   2a4f4:	mov	r3, #0
   2a4f8:	mov	r0, r3
   2a4fc:	sub	sp, fp, #8
   2a500:	pop	{r4, fp, pc}
   2a504:	andeq	pc, r3, r0, lsl #30
   2a508:	push	{r4, fp, lr}
   2a50c:	add	fp, sp, #8
   2a510:	sub	sp, sp, #84	; 0x54
   2a514:	str	r0, [fp, #-88]	; 0xffffffa8
   2a518:	str	r1, [fp, #-92]	; 0xffffffa4
   2a51c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a520:	ldr	r3, [r3, #84]	; 0x54
   2a524:	str	r3, [fp, #-24]	; 0xffffffe8
   2a528:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a52c:	ldr	r3, [r3, #40]	; 0x28
   2a530:	str	r3, [fp, #-28]	; 0xffffffe4
   2a534:	mov	r3, #0
   2a538:	str	r3, [fp, #-16]
   2a53c:	b	2aac8 <__assert_fail@plt+0x197a8>
   2a540:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2a544:	ldr	r2, [r3, #8]
   2a548:	ldr	r3, [fp, #-16]
   2a54c:	lsl	r3, r3, #2
   2a550:	add	r3, r2, r3
   2a554:	ldr	r3, [r3]
   2a558:	str	r3, [fp, #-32]	; 0xffffffe0
   2a55c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a560:	ldr	r2, [r3]
   2a564:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a568:	lsl	r3, r3, #3
   2a56c:	add	r3, r2, r3
   2a570:	str	r3, [fp, #-36]	; 0xffffffdc
   2a574:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a578:	ldrb	r3, [r3, #4]
   2a57c:	cmp	r3, #4
   2a580:	bne	2aab0 <__assert_fail@plt+0x19790>
   2a584:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a588:	ldr	r2, [r3, #4]
   2a58c:	ldr	r3, [pc, #1400]	; 2ab0c <__assert_fail@plt+0x197ec>
   2a590:	and	r3, r3, r2
   2a594:	cmp	r3, #0
   2a598:	beq	2a688 <__assert_fail@plt+0x19368>
   2a59c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a5a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a5a4:	ldr	r3, [r3, #88]	; 0x58
   2a5a8:	mov	r2, r3
   2a5ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a5b0:	bl	188b0 <__assert_fail@plt+0x7590>
   2a5b4:	str	r0, [fp, #-40]	; 0xffffffd8
   2a5b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a5bc:	ldr	r3, [r3, #4]
   2a5c0:	lsr	r3, r3, #8
   2a5c4:	lsl	r3, r3, #22
   2a5c8:	lsr	r3, r3, #22
   2a5cc:	uxth	r3, r3
   2a5d0:	and	r3, r3, #4
   2a5d4:	cmp	r3, #0
   2a5d8:	beq	2a5ec <__assert_fail@plt+0x192cc>
   2a5dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a5e0:	and	r3, r3, #1
   2a5e4:	cmp	r3, #0
   2a5e8:	beq	2aab8 <__assert_fail@plt+0x19798>
   2a5ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a5f0:	ldr	r3, [r3, #4]
   2a5f4:	lsr	r3, r3, #8
   2a5f8:	lsl	r3, r3, #22
   2a5fc:	lsr	r3, r3, #22
   2a600:	uxth	r3, r3
   2a604:	and	r3, r3, #8
   2a608:	cmp	r3, #0
   2a60c:	beq	2a620 <__assert_fail@plt+0x19300>
   2a610:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a614:	and	r3, r3, #1
   2a618:	cmp	r3, #0
   2a61c:	bne	2aab8 <__assert_fail@plt+0x19798>
   2a620:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a624:	ldr	r3, [r3, #4]
   2a628:	lsr	r3, r3, #8
   2a62c:	lsl	r3, r3, #22
   2a630:	lsr	r3, r3, #22
   2a634:	uxth	r3, r3
   2a638:	and	r3, r3, #32
   2a63c:	cmp	r3, #0
   2a640:	beq	2a654 <__assert_fail@plt+0x19334>
   2a644:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a648:	and	r3, r3, #2
   2a64c:	cmp	r3, #0
   2a650:	beq	2aab8 <__assert_fail@plt+0x19798>
   2a654:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a658:	ldr	r3, [r3, #4]
   2a65c:	lsr	r3, r3, #8
   2a660:	lsl	r3, r3, #22
   2a664:	lsr	r3, r3, #22
   2a668:	uxth	r3, r3
   2a66c:	and	r3, r3, #128	; 0x80
   2a670:	cmp	r3, #0
   2a674:	beq	2a688 <__assert_fail@plt+0x19368>
   2a678:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a67c:	and	r3, r3, #8
   2a680:	cmp	r3, #0
   2a684:	beq	2aab8 <__assert_fail@plt+0x19798>
   2a688:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a68c:	ldr	r3, [r3, #108]	; 0x6c
   2a690:	str	r3, [fp, #-20]	; 0xffffffec
   2a694:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a698:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a69c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a6a0:	bl	2ab10 <__assert_fail@plt+0x197f0>
   2a6a4:	mov	r3, r0
   2a6a8:	str	r3, [fp, #-68]	; 0xffffffbc
   2a6ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2a6b0:	cmp	r3, #0
   2a6b4:	movne	r3, #1
   2a6b8:	moveq	r3, #0
   2a6bc:	uxtb	r3, r3
   2a6c0:	cmp	r3, #0
   2a6c4:	bne	2aae8 <__assert_fail@plt+0x197c8>
   2a6c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a6cc:	ldr	r2, [r3, #12]
   2a6d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a6d4:	lsl	r3, r3, #2
   2a6d8:	add	r3, r2, r3
   2a6dc:	ldr	r3, [r3]
   2a6e0:	cmn	r3, #1
   2a6e4:	b	2aa98 <__assert_fail@plt+0x19778>
   2a6e8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a6ec:	ldr	r1, [r3, #116]	; 0x74
   2a6f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a6f4:	mov	r3, r2
   2a6f8:	lsl	r3, r3, #1
   2a6fc:	add	r3, r3, r2
   2a700:	lsl	r3, r3, #3
   2a704:	add	r3, r1, r3
   2a708:	str	r3, [fp, #-44]	; 0xffffffd4
   2a70c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a710:	ldr	r2, [r3]
   2a714:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a718:	cmp	r2, r3
   2a71c:	bne	2aa88 <__assert_fail@plt+0x19768>
   2a720:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a724:	ldr	r2, [r3, #4]
   2a728:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a72c:	cmp	r2, r3
   2a730:	bne	2aa88 <__assert_fail@plt+0x19768>
   2a734:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a738:	ldr	r2, [r3, #12]
   2a73c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a740:	ldr	r3, [r3, #8]
   2a744:	sub	r3, r2, r3
   2a748:	str	r3, [fp, #-48]	; 0xffffffd0
   2a74c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a750:	cmp	r3, #0
   2a754:	bne	2a7a4 <__assert_fail@plt+0x19484>
   2a758:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a75c:	ldr	r1, [r3, #24]
   2a760:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a764:	ldr	r0, [r3, #20]
   2a768:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a76c:	mov	r3, r2
   2a770:	lsl	r3, r3, #1
   2a774:	add	r3, r3, r2
   2a778:	lsl	r3, r3, #2
   2a77c:	add	r3, r0, r3
   2a780:	ldr	r3, [r3, #8]
   2a784:	ldr	r3, [r3]
   2a788:	mov	r2, r3
   2a78c:	mov	r3, r2
   2a790:	lsl	r3, r3, #1
   2a794:	add	r3, r3, r2
   2a798:	lsl	r3, r3, #2
   2a79c:	add	r3, r1, r3
   2a7a0:	b	2a7dc <__assert_fail@plt+0x194bc>
   2a7a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a7a8:	ldr	r2, [r3, #24]
   2a7ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a7b0:	ldr	r1, [r3, #12]
   2a7b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a7b8:	lsl	r3, r3, #2
   2a7bc:	add	r3, r1, r3
   2a7c0:	ldr	r3, [r3]
   2a7c4:	mov	r1, r3
   2a7c8:	mov	r3, r1
   2a7cc:	lsl	r3, r3, #1
   2a7d0:	add	r3, r3, r1
   2a7d4:	lsl	r3, r3, #2
   2a7d8:	add	r3, r2, r3
   2a7dc:	str	r3, [fp, #-52]	; 0xffffffcc
   2a7e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a7e4:	ldr	r2, [r3, #12]
   2a7e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a7ec:	add	r2, r2, r3
   2a7f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a7f4:	ldr	r3, [r3, #8]
   2a7f8:	sub	r3, r2, r3
   2a7fc:	str	r3, [fp, #-56]	; 0xffffffc8
   2a800:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a804:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a808:	sub	r1, r3, #1
   2a80c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a810:	ldr	r3, [r3, #88]	; 0x58
   2a814:	mov	r2, r3
   2a818:	bl	188b0 <__assert_fail@plt+0x7590>
   2a81c:	str	r0, [fp, #-40]	; 0xffffffd8
   2a820:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a824:	ldr	r2, [r3, #100]	; 0x64
   2a828:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a82c:	lsl	r3, r3, #2
   2a830:	add	r3, r2, r3
   2a834:	ldr	r3, [r3]
   2a838:	str	r3, [fp, #-60]	; 0xffffffc4
   2a83c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a840:	ldr	r2, [r3, #100]	; 0x64
   2a844:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a848:	lsl	r3, r3, #2
   2a84c:	add	r3, r2, r3
   2a850:	ldr	r3, [r3]
   2a854:	cmp	r3, #0
   2a858:	beq	2a87c <__assert_fail@plt+0x1955c>
   2a85c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a860:	ldr	r2, [r3, #100]	; 0x64
   2a864:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a868:	lsl	r3, r3, #2
   2a86c:	add	r3, r2, r3
   2a870:	ldr	r3, [r3]
   2a874:	ldr	r3, [r3, #8]
   2a878:	b	2a880 <__assert_fail@plt+0x19560>
   2a87c:	mov	r3, #0
   2a880:	str	r3, [fp, #-64]	; 0xffffffc0
   2a884:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a888:	cmp	r3, #0
   2a88c:	bne	2a910 <__assert_fail@plt+0x195f0>
   2a890:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a894:	ldr	r2, [r3, #100]	; 0x64
   2a898:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a89c:	lsl	r3, r3, #2
   2a8a0:	add	r4, r2, r3
   2a8a4:	sub	r0, fp, #68	; 0x44
   2a8a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a8ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2a8b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a8b4:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   2a8b8:	mov	r3, r0
   2a8bc:	str	r3, [r4]
   2a8c0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a8c4:	ldr	r2, [r3, #100]	; 0x64
   2a8c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a8cc:	lsl	r3, r3, #2
   2a8d0:	add	r3, r2, r3
   2a8d4:	ldr	r3, [r3]
   2a8d8:	cmp	r3, #0
   2a8dc:	moveq	r3, #1
   2a8e0:	movne	r3, #0
   2a8e4:	uxtb	r3, r3
   2a8e8:	cmp	r3, #0
   2a8ec:	beq	2a9ec <__assert_fail@plt+0x196cc>
   2a8f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2a8f4:	cmp	r3, #0
   2a8f8:	movne	r3, #1
   2a8fc:	moveq	r3, #0
   2a900:	uxtb	r3, r3
   2a904:	cmp	r3, #0
   2a908:	beq	2a9ec <__assert_fail@plt+0x196cc>
   2a90c:	b	2aafc <__assert_fail@plt+0x197dc>
   2a910:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a914:	ldr	r1, [r3, #40]	; 0x28
   2a918:	sub	r3, fp, #80	; 0x50
   2a91c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2a920:	mov	r0, r3
   2a924:	bl	1925c <__assert_fail@plt+0x7f3c>
   2a928:	mov	r3, r0
   2a92c:	str	r3, [fp, #-68]	; 0xffffffbc
   2a930:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2a934:	cmp	r3, #0
   2a938:	movne	r3, #1
   2a93c:	moveq	r3, #0
   2a940:	uxtb	r3, r3
   2a944:	cmp	r3, #0
   2a948:	beq	2a95c <__assert_fail@plt+0x1963c>
   2a94c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2a950:	mov	r0, r3
   2a954:	bl	31500 <__assert_fail@plt+0x201e0>
   2a958:	b	2aafc <__assert_fail@plt+0x197dc>
   2a95c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a960:	ldr	r2, [r3, #100]	; 0x64
   2a964:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a968:	lsl	r3, r3, #2
   2a96c:	add	r4, r2, r3
   2a970:	sub	r2, fp, #80	; 0x50
   2a974:	sub	r0, fp, #68	; 0x44
   2a978:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a97c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a980:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   2a984:	mov	r3, r0
   2a988:	str	r3, [r4]
   2a98c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2a990:	mov	r0, r3
   2a994:	bl	31500 <__assert_fail@plt+0x201e0>
   2a998:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a99c:	ldr	r2, [r3, #100]	; 0x64
   2a9a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a9a4:	lsl	r3, r3, #2
   2a9a8:	add	r3, r2, r3
   2a9ac:	ldr	r3, [r3]
   2a9b0:	cmp	r3, #0
   2a9b4:	moveq	r3, #1
   2a9b8:	movne	r3, #0
   2a9bc:	uxtb	r3, r3
   2a9c0:	cmp	r3, #0
   2a9c4:	beq	2a9ec <__assert_fail@plt+0x196cc>
   2a9c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2a9cc:	cmp	r3, #0
   2a9d0:	movne	r3, #1
   2a9d4:	moveq	r3, #0
   2a9d8:	uxtb	r3, r3
   2a9dc:	cmp	r3, #0
   2a9e0:	beq	2a9ec <__assert_fail@plt+0x196cc>
   2a9e4:	nop			; (mov r0, r0)
   2a9e8:	b	2aafc <__assert_fail@plt+0x197dc>
   2a9ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a9f0:	cmp	r3, #0
   2a9f4:	bne	2aa8c <__assert_fail@plt+0x1976c>
   2a9f8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2a9fc:	ldr	r2, [r3, #100]	; 0x64
   2aa00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2aa04:	lsl	r3, r3, #2
   2aa08:	add	r3, r2, r3
   2aa0c:	ldr	r3, [r3]
   2aa10:	ldr	r2, [r3, #8]
   2aa14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2aa18:	cmp	r2, r3
   2aa1c:	ble	2aa8c <__assert_fail@plt+0x1976c>
   2aa20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2aa24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2aa28:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2aa2c:	bl	29fac <__assert_fail@plt+0x18c8c>
   2aa30:	mov	r3, r0
   2aa34:	str	r3, [fp, #-68]	; 0xffffffbc
   2aa38:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2aa3c:	cmp	r3, #0
   2aa40:	movne	r3, #1
   2aa44:	moveq	r3, #0
   2aa48:	uxtb	r3, r3
   2aa4c:	cmp	r3, #0
   2aa50:	bne	2aaf0 <__assert_fail@plt+0x197d0>
   2aa54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2aa58:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2aa5c:	bl	2a508 <__assert_fail@plt+0x191e8>
   2aa60:	mov	r3, r0
   2aa64:	str	r3, [fp, #-68]	; 0xffffffbc
   2aa68:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2aa6c:	cmp	r3, #0
   2aa70:	movne	r3, #1
   2aa74:	moveq	r3, #0
   2aa78:	uxtb	r3, r3
   2aa7c:	cmp	r3, #0
   2aa80:	bne	2aaf8 <__assert_fail@plt+0x197d8>
   2aa84:	b	2aa8c <__assert_fail@plt+0x1976c>
   2aa88:	nop			; (mov r0, r0)
   2aa8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aa90:	add	r3, r3, #1
   2aa94:	str	r3, [fp, #-20]	; 0xffffffec
   2aa98:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2aa9c:	ldr	r2, [r3, #108]	; 0x6c
   2aaa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aaa4:	cmp	r2, r3
   2aaa8:	bgt	2a6e8 <__assert_fail@plt+0x193c8>
   2aaac:	b	2aabc <__assert_fail@plt+0x1979c>
   2aab0:	nop			; (mov r0, r0)
   2aab4:	b	2aabc <__assert_fail@plt+0x1979c>
   2aab8:	nop			; (mov r0, r0)
   2aabc:	ldr	r3, [fp, #-16]
   2aac0:	add	r3, r3, #1
   2aac4:	str	r3, [fp, #-16]
   2aac8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2aacc:	ldr	r2, [r3, #4]
   2aad0:	ldr	r3, [fp, #-16]
   2aad4:	cmp	r2, r3
   2aad8:	bgt	2a540 <__assert_fail@plt+0x19220>
   2aadc:	mov	r3, #0
   2aae0:	str	r3, [fp, #-68]	; 0xffffffbc
   2aae4:	b	2aafc <__assert_fail@plt+0x197dc>
   2aae8:	nop			; (mov r0, r0)
   2aaec:	b	2aafc <__assert_fail@plt+0x197dc>
   2aaf0:	nop			; (mov r0, r0)
   2aaf4:	b	2aafc <__assert_fail@plt+0x197dc>
   2aaf8:	nop			; (mov r0, r0)
   2aafc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ab00:	mov	r0, r3
   2ab04:	sub	sp, fp, #8
   2ab08:	pop	{r4, fp, pc}
   2ab0c:	andeq	pc, r3, r0, lsl #30
   2ab10:	push	{fp, lr}
   2ab14:	add	fp, sp, #4
   2ab18:	sub	sp, sp, #96	; 0x60
   2ab1c:	str	r0, [fp, #-72]	; 0xffffffb8
   2ab20:	str	r1, [fp, #-76]	; 0xffffffb4
   2ab24:	str	r2, [fp, #-80]	; 0xffffffb0
   2ab28:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ab2c:	ldr	r3, [r3, #84]	; 0x54
   2ab30:	str	r3, [fp, #-32]	; 0xffffffe0
   2ab34:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ab38:	ldr	r3, [r3, #4]
   2ab3c:	str	r3, [fp, #-12]
   2ab40:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2ab44:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2ab48:	bl	2e9cc <__assert_fail@plt+0x1d6ac>
   2ab4c:	str	r0, [fp, #-36]	; 0xffffffdc
   2ab50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ab54:	cmn	r3, #1
   2ab58:	beq	2abb4 <__assert_fail@plt+0x19894>
   2ab5c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ab60:	ldr	r1, [r3, #116]	; 0x74
   2ab64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ab68:	mov	r3, r2
   2ab6c:	lsl	r3, r3, #1
   2ab70:	add	r3, r3, r2
   2ab74:	lsl	r3, r3, #3
   2ab78:	add	r3, r1, r3
   2ab7c:	str	r3, [fp, #-16]
   2ab80:	ldr	r3, [fp, #-16]
   2ab84:	ldr	r2, [r3]
   2ab88:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2ab8c:	cmp	r2, r3
   2ab90:	bne	2ab9c <__assert_fail@plt+0x1987c>
   2ab94:	mov	r3, #0
   2ab98:	b	2b134 <__assert_fail@plt+0x19e14>
   2ab9c:	ldr	r3, [fp, #-16]
   2aba0:	add	r2, r3, #24
   2aba4:	str	r2, [fp, #-16]
   2aba8:	ldrb	r3, [r3, #20]
   2abac:	cmp	r3, #0
   2abb0:	bne	2ab80 <__assert_fail@plt+0x19860>
   2abb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2abb8:	ldr	r2, [r3]
   2abbc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2abc0:	lsl	r3, r3, #3
   2abc4:	add	r3, r2, r3
   2abc8:	ldr	r3, [r3]
   2abcc:	str	r3, [fp, #-40]	; 0xffffffd8
   2abd0:	mov	r3, #0
   2abd4:	str	r3, [fp, #-8]
   2abd8:	b	2b11c <__assert_fail@plt+0x19dfc>
   2abdc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2abe0:	ldr	r2, [r3, #132]	; 0x84
   2abe4:	ldr	r3, [fp, #-8]
   2abe8:	lsl	r3, r3, #2
   2abec:	add	r3, r2, r3
   2abf0:	ldr	r3, [r3]
   2abf4:	str	r3, [fp, #-44]	; 0xffffffd4
   2abf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2abfc:	ldr	r2, [r3]
   2ac00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ac04:	ldr	r3, [r3, #4]
   2ac08:	lsl	r3, r3, #3
   2ac0c:	add	r3, r2, r3
   2ac10:	ldr	r2, [r3]
   2ac14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ac18:	cmp	r2, r3
   2ac1c:	bne	2b0f4 <__assert_fail@plt+0x19dd4>
   2ac20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ac24:	ldr	r3, [r3]
   2ac28:	str	r3, [fp, #-24]	; 0xffffffe8
   2ac2c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2ac30:	str	r3, [fp, #-28]	; 0xffffffe4
   2ac34:	mov	r3, #0
   2ac38:	str	r3, [fp, #-20]	; 0xffffffec
   2ac3c:	b	2adcc <__assert_fail@plt+0x19aac>
   2ac40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ac44:	ldr	r2, [r3, #20]
   2ac48:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ac4c:	lsl	r3, r3, #2
   2ac50:	add	r3, r2, r3
   2ac54:	ldr	r3, [r3]
   2ac58:	str	r3, [fp, #-64]	; 0xffffffc0
   2ac5c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ac60:	ldr	r2, [r3, #4]
   2ac64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ac68:	sub	r3, r2, r3
   2ac6c:	str	r3, [fp, #-68]	; 0xffffffbc
   2ac70:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ac74:	cmp	r3, #0
   2ac78:	ble	2ad40 <__assert_fail@plt+0x19a20>
   2ac7c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ac80:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ac84:	add	r2, r2, r3
   2ac88:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ac8c:	ldr	r3, [r3, #28]
   2ac90:	cmp	r2, r3
   2ac94:	movgt	r3, #1
   2ac98:	movle	r3, #0
   2ac9c:	uxtb	r3, r3
   2aca0:	cmp	r3, #0
   2aca4:	beq	2ad10 <__assert_fail@plt+0x199f0>
   2aca8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2acac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2acb0:	add	r2, r2, r3
   2acb4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2acb8:	ldr	r3, [r3, #48]	; 0x30
   2acbc:	cmp	r2, r3
   2acc0:	bgt	2ade4 <__assert_fail@plt+0x19ac4>
   2acc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2acc8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2accc:	add	r3, r2, r3
   2acd0:	mov	r1, r3
   2acd4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2acd8:	bl	28240 <__assert_fail@plt+0x16f20>
   2acdc:	str	r0, [fp, #-60]	; 0xffffffc4
   2ace0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ace4:	cmp	r3, #0
   2ace8:	movne	r3, #1
   2acec:	moveq	r3, #0
   2acf0:	uxtb	r3, r3
   2acf4:	cmp	r3, #0
   2acf8:	beq	2ad04 <__assert_fail@plt+0x199e4>
   2acfc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ad00:	b	2b134 <__assert_fail@plt+0x19e14>
   2ad04:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ad08:	ldr	r3, [r3, #4]
   2ad0c:	str	r3, [fp, #-12]
   2ad10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ad14:	ldr	r2, [fp, #-12]
   2ad18:	add	r0, r2, r3
   2ad1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ad20:	ldr	r2, [fp, #-12]
   2ad24:	add	r3, r2, r3
   2ad28:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2ad2c:	mov	r1, r3
   2ad30:	bl	110ec <memcmp@plt>
   2ad34:	mov	r3, r0
   2ad38:	cmp	r3, #0
   2ad3c:	bne	2adec <__assert_fail@plt+0x19acc>
   2ad40:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ad44:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ad48:	add	r3, r2, r3
   2ad4c:	str	r3, [fp, #-28]	; 0xffffffe4
   2ad50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ad54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ad58:	add	r3, r2, r3
   2ad5c:	str	r3, [fp, #-24]	; 0xffffffe8
   2ad60:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2ad64:	str	r3, [sp]
   2ad68:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2ad6c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2ad70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ad74:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2ad78:	bl	2b140 <__assert_fail@plt+0x19e20>
   2ad7c:	str	r0, [fp, #-60]	; 0xffffffc4
   2ad80:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ad84:	ldr	r3, [r3, #4]
   2ad88:	str	r3, [fp, #-12]
   2ad8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ad90:	cmp	r3, #1
   2ad94:	beq	2adbc <__assert_fail@plt+0x19a9c>
   2ad98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ad9c:	cmp	r3, #0
   2ada0:	movne	r3, #1
   2ada4:	moveq	r3, #0
   2ada8:	uxtb	r3, r3
   2adac:	cmp	r3, #0
   2adb0:	beq	2adc0 <__assert_fail@plt+0x19aa0>
   2adb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2adb8:	b	2b134 <__assert_fail@plt+0x19e14>
   2adbc:	nop			; (mov r0, r0)
   2adc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2adc4:	add	r3, r3, #1
   2adc8:	str	r3, [fp, #-20]	; 0xffffffec
   2adcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2add0:	ldr	r2, [r3, #16]
   2add4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2add8:	cmp	r2, r3
   2addc:	bgt	2ac40 <__assert_fail@plt+0x19920>
   2ade0:	b	2adf0 <__assert_fail@plt+0x19ad0>
   2ade4:	nop			; (mov r0, r0)
   2ade8:	b	2adf0 <__assert_fail@plt+0x19ad0>
   2adec:	nop			; (mov r0, r0)
   2adf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2adf4:	ldr	r2, [r3, #16]
   2adf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2adfc:	cmp	r2, r3
   2ae00:	bgt	2b0fc <__assert_fail@plt+0x19ddc>
   2ae04:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae08:	cmp	r3, #0
   2ae0c:	ble	2b0e0 <__assert_fail@plt+0x19dc0>
   2ae10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ae14:	add	r3, r3, #1
   2ae18:	str	r3, [fp, #-24]	; 0xffffffe8
   2ae1c:	b	2b0e0 <__assert_fail@plt+0x19dc0>
   2ae20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ae24:	ldr	r3, [r3]
   2ae28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ae2c:	sub	r3, r2, r3
   2ae30:	str	r3, [fp, #-48]	; 0xffffffd0
   2ae34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ae38:	cmp	r3, #0
   2ae3c:	ble	2aef8 <__assert_fail@plt+0x19bd8>
   2ae40:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ae44:	ldr	r2, [r3, #28]
   2ae48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ae4c:	cmp	r2, r3
   2ae50:	movle	r3, #1
   2ae54:	movgt	r3, #0
   2ae58:	uxtb	r3, r3
   2ae5c:	cmp	r3, #0
   2ae60:	beq	2aec0 <__assert_fail@plt+0x19ba0>
   2ae64:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ae68:	ldr	r2, [r3, #48]	; 0x30
   2ae6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ae70:	cmp	r2, r3
   2ae74:	ble	2b104 <__assert_fail@plt+0x19de4>
   2ae78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ae7c:	add	r3, r3, #1
   2ae80:	mov	r1, r3
   2ae84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2ae88:	bl	2e244 <__assert_fail@plt+0x1cf24>
   2ae8c:	str	r0, [fp, #-60]	; 0xffffffc4
   2ae90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ae94:	cmp	r3, #0
   2ae98:	movne	r3, #1
   2ae9c:	moveq	r3, #0
   2aea0:	uxtb	r3, r3
   2aea4:	cmp	r3, #0
   2aea8:	beq	2aeb4 <__assert_fail@plt+0x19b94>
   2aeac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2aeb0:	b	2b134 <__assert_fail@plt+0x19e14>
   2aeb4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2aeb8:	ldr	r3, [r3, #4]
   2aebc:	str	r3, [fp, #-12]
   2aec0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2aec4:	add	r2, r3, #1
   2aec8:	str	r2, [fp, #-28]	; 0xffffffe4
   2aecc:	mov	r2, r3
   2aed0:	ldr	r3, [fp, #-12]
   2aed4:	add	r3, r3, r2
   2aed8:	ldrb	r2, [r3]
   2aedc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2aee0:	sub	r3, r3, #1
   2aee4:	ldr	r1, [fp, #-12]
   2aee8:	add	r3, r1, r3
   2aeec:	ldrb	r3, [r3]
   2aef0:	cmp	r2, r3
   2aef4:	bne	2b10c <__assert_fail@plt+0x19dec>
   2aef8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2aefc:	ldr	r2, [r3, #100]	; 0x64
   2af00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2af04:	lsl	r3, r3, #2
   2af08:	add	r3, r2, r3
   2af0c:	ldr	r3, [r3]
   2af10:	cmp	r3, #0
   2af14:	beq	2b0b8 <__assert_fail@plt+0x19d98>
   2af18:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2af1c:	ldr	r2, [r3, #100]	; 0x64
   2af20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2af24:	lsl	r3, r3, #2
   2af28:	add	r3, r2, r3
   2af2c:	ldr	r3, [r3]
   2af30:	add	r3, r3, #4
   2af34:	str	r3, [fp, #-52]	; 0xffffffcc
   2af38:	mov	r3, #9
   2af3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2af40:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2af44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2af48:	bl	2b23c <__assert_fail@plt+0x19f1c>
   2af4c:	str	r0, [fp, #-56]	; 0xffffffc8
   2af50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2af54:	cmn	r3, #1
   2af58:	beq	2b0c0 <__assert_fail@plt+0x19da0>
   2af5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2af60:	ldr	r3, [r3, #8]
   2af64:	cmp	r3, #0
   2af68:	bne	2afb4 <__assert_fail@plt+0x19c94>
   2af6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2af70:	ldr	r3, [r3]
   2af74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2af78:	sub	r3, r2, r3
   2af7c:	add	r3, r3, #1
   2af80:	mov	r1, r3
   2af84:	mov	r0, #12
   2af88:	bl	30c58 <__assert_fail@plt+0x1f938>
   2af8c:	mov	r3, r0
   2af90:	mov	r2, r3
   2af94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2af98:	str	r2, [r3, #8]
   2af9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2afa0:	ldr	r3, [r3, #8]
   2afa4:	cmp	r3, #0
   2afa8:	bne	2afb4 <__assert_fail@plt+0x19c94>
   2afac:	mov	r3, #12
   2afb0:	b	2b134 <__assert_fail@plt+0x19e14>
   2afb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2afb8:	ldr	r1, [r3, #8]
   2afbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2afc0:	ldr	r2, [r3, #4]
   2afc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2afc8:	ldr	r0, [r3]
   2afcc:	mov	r3, #9
   2afd0:	str	r3, [sp, #8]
   2afd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2afd8:	str	r3, [sp, #4]
   2afdc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2afe0:	str	r3, [sp]
   2afe4:	mov	r3, r0
   2afe8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2afec:	bl	2b300 <__assert_fail@plt+0x19fe0>
   2aff0:	str	r0, [fp, #-60]	; 0xffffffc4
   2aff4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2aff8:	cmp	r3, #1
   2affc:	beq	2b0c8 <__assert_fail@plt+0x19da8>
   2b000:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b004:	cmp	r3, #0
   2b008:	movne	r3, #1
   2b00c:	moveq	r3, #0
   2b010:	uxtb	r3, r3
   2b014:	cmp	r3, #0
   2b018:	beq	2b024 <__assert_fail@plt+0x19d04>
   2b01c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b020:	b	2b134 <__assert_fail@plt+0x19e14>
   2b024:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b028:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2b02c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b030:	bl	2ec60 <__assert_fail@plt+0x1d940>
   2b034:	str	r0, [fp, #-64]	; 0xffffffc0
   2b038:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b03c:	cmp	r3, #0
   2b040:	moveq	r3, #1
   2b044:	movne	r3, #0
   2b048:	uxtb	r3, r3
   2b04c:	cmp	r3, #0
   2b050:	beq	2b05c <__assert_fail@plt+0x19d3c>
   2b054:	mov	r3, #12
   2b058:	b	2b134 <__assert_fail@plt+0x19e14>
   2b05c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b060:	str	r3, [sp]
   2b064:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2b068:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2b06c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2b070:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2b074:	bl	2b140 <__assert_fail@plt+0x19e20>
   2b078:	str	r0, [fp, #-60]	; 0xffffffc4
   2b07c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b080:	ldr	r3, [r3, #4]
   2b084:	str	r3, [fp, #-12]
   2b088:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b08c:	cmp	r3, #1
   2b090:	beq	2b0d0 <__assert_fail@plt+0x19db0>
   2b094:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b098:	cmp	r3, #0
   2b09c:	movne	r3, #1
   2b0a0:	moveq	r3, #0
   2b0a4:	uxtb	r3, r3
   2b0a8:	cmp	r3, #0
   2b0ac:	beq	2b0d4 <__assert_fail@plt+0x19db4>
   2b0b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b0b4:	b	2b134 <__assert_fail@plt+0x19e14>
   2b0b8:	nop			; (mov r0, r0)
   2b0bc:	b	2b0d4 <__assert_fail@plt+0x19db4>
   2b0c0:	nop			; (mov r0, r0)
   2b0c4:	b	2b0d4 <__assert_fail@plt+0x19db4>
   2b0c8:	nop			; (mov r0, r0)
   2b0cc:	b	2b0d4 <__assert_fail@plt+0x19db4>
   2b0d0:	nop			; (mov r0, r0)
   2b0d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b0d8:	add	r3, r3, #1
   2b0dc:	str	r3, [fp, #-24]	; 0xffffffe8
   2b0e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b0e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b0e8:	cmp	r2, r3
   2b0ec:	ble	2ae20 <__assert_fail@plt+0x19b00>
   2b0f0:	b	2b110 <__assert_fail@plt+0x19df0>
   2b0f4:	nop			; (mov r0, r0)
   2b0f8:	b	2b110 <__assert_fail@plt+0x19df0>
   2b0fc:	nop			; (mov r0, r0)
   2b100:	b	2b110 <__assert_fail@plt+0x19df0>
   2b104:	nop			; (mov r0, r0)
   2b108:	b	2b110 <__assert_fail@plt+0x19df0>
   2b10c:	nop			; (mov r0, r0)
   2b110:	ldr	r3, [fp, #-8]
   2b114:	add	r3, r3, #1
   2b118:	str	r3, [fp, #-8]
   2b11c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2b120:	ldr	r2, [r3, #124]	; 0x7c
   2b124:	ldr	r3, [fp, #-8]
   2b128:	cmp	r2, r3
   2b12c:	bgt	2abdc <__assert_fail@plt+0x198bc>
   2b130:	mov	r3, #0
   2b134:	mov	r0, r3
   2b138:	sub	sp, fp, #4
   2b13c:	pop	{fp, pc}
   2b140:	push	{fp, lr}
   2b144:	add	fp, sp, #4
   2b148:	sub	sp, sp, #40	; 0x28
   2b14c:	str	r0, [fp, #-16]
   2b150:	str	r1, [fp, #-20]	; 0xffffffec
   2b154:	str	r2, [fp, #-24]	; 0xffffffe8
   2b158:	str	r3, [fp, #-28]	; 0xffffffe4
   2b15c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b160:	add	r1, r3, #8
   2b164:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b168:	ldr	r2, [r3]
   2b16c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b170:	ldr	r0, [r3, #4]
   2b174:	mov	r3, #8
   2b178:	str	r3, [sp, #8]
   2b17c:	ldr	r3, [fp, #4]
   2b180:	str	r3, [sp, #4]
   2b184:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b188:	str	r3, [sp]
   2b18c:	mov	r3, r0
   2b190:	ldr	r0, [fp, #-16]
   2b194:	bl	2b300 <__assert_fail@plt+0x19fe0>
   2b198:	str	r0, [fp, #-8]
   2b19c:	ldr	r3, [fp, #-8]
   2b1a0:	cmp	r3, #0
   2b1a4:	beq	2b1b0 <__assert_fail@plt+0x19e90>
   2b1a8:	ldr	r3, [fp, #-8]
   2b1ac:	b	2b230 <__assert_fail@plt+0x19f10>
   2b1b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b1b4:	ldr	r2, [r3]
   2b1b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b1bc:	ldr	r3, [r3, #4]
   2b1c0:	str	r3, [sp]
   2b1c4:	mov	r3, r2
   2b1c8:	ldr	r2, [fp, #4]
   2b1cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b1d0:	ldr	r0, [fp, #-16]
   2b1d4:	bl	2e6c4 <__assert_fail@plt+0x1d3a4>
   2b1d8:	str	r0, [fp, #-8]
   2b1dc:	ldr	r3, [fp, #-8]
   2b1e0:	cmp	r3, #0
   2b1e4:	movne	r3, #1
   2b1e8:	moveq	r3, #0
   2b1ec:	uxtb	r3, r3
   2b1f0:	cmp	r3, #0
   2b1f4:	beq	2b200 <__assert_fail@plt+0x19ee0>
   2b1f8:	ldr	r3, [fp, #-8]
   2b1fc:	b	2b230 <__assert_fail@plt+0x19f10>
   2b200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b204:	ldr	r2, [r3, #4]
   2b208:	ldr	r3, [fp, #4]
   2b20c:	add	r2, r2, r3
   2b210:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b214:	ldr	r3, [r3]
   2b218:	sub	r3, r2, r3
   2b21c:	str	r3, [fp, #-12]
   2b220:	ldr	r1, [fp, #-12]
   2b224:	ldr	r0, [fp, #-16]
   2b228:	bl	28240 <__assert_fail@plt+0x16f20>
   2b22c:	mov	r3, r0
   2b230:	mov	r0, r3
   2b234:	sub	sp, fp, #4
   2b238:	pop	{fp, pc}
   2b23c:	push	{fp}		; (str fp, [sp, #-4]!)
   2b240:	add	fp, sp, #0
   2b244:	sub	sp, sp, #36	; 0x24
   2b248:	str	r0, [fp, #-24]	; 0xffffffe8
   2b24c:	str	r1, [fp, #-28]	; 0xffffffe4
   2b250:	str	r2, [fp, #-32]	; 0xffffffe0
   2b254:	str	r3, [fp, #-36]	; 0xffffffdc
   2b258:	mov	r3, #0
   2b25c:	str	r3, [fp, #-8]
   2b260:	b	2b2d8 <__assert_fail@plt+0x19fb8>
   2b264:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b268:	ldr	r2, [r3, #8]
   2b26c:	ldr	r3, [fp, #-8]
   2b270:	lsl	r3, r3, #2
   2b274:	add	r3, r2, r3
   2b278:	ldr	r3, [r3]
   2b27c:	str	r3, [fp, #-12]
   2b280:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b284:	ldr	r2, [r3]
   2b288:	ldr	r3, [fp, #-12]
   2b28c:	lsl	r3, r3, #3
   2b290:	add	r3, r2, r3
   2b294:	str	r3, [fp, #-16]
   2b298:	ldr	r3, [fp, #-16]
   2b29c:	ldrb	r3, [r3, #4]
   2b2a0:	mov	r2, r3
   2b2a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b2a8:	cmp	r2, r3
   2b2ac:	bne	2b2cc <__assert_fail@plt+0x19fac>
   2b2b0:	ldr	r3, [fp, #-16]
   2b2b4:	ldr	r2, [r3]
   2b2b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b2bc:	cmp	r2, r3
   2b2c0:	bne	2b2cc <__assert_fail@plt+0x19fac>
   2b2c4:	ldr	r3, [fp, #-12]
   2b2c8:	b	2b2f0 <__assert_fail@plt+0x19fd0>
   2b2cc:	ldr	r3, [fp, #-8]
   2b2d0:	add	r3, r3, #1
   2b2d4:	str	r3, [fp, #-8]
   2b2d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b2dc:	ldr	r2, [r3, #4]
   2b2e0:	ldr	r3, [fp, #-8]
   2b2e4:	cmp	r2, r3
   2b2e8:	bgt	2b264 <__assert_fail@plt+0x19f44>
   2b2ec:	mvn	r3, #0
   2b2f0:	mov	r0, r3
   2b2f4:	add	sp, fp, #0
   2b2f8:	pop	{fp}		; (ldr fp, [sp], #4)
   2b2fc:	bx	lr
   2b300:	push	{fp, lr}
   2b304:	add	fp, sp, #4
   2b308:	sub	sp, sp, #96	; 0x60
   2b30c:	str	r0, [fp, #-80]	; 0xffffffb0
   2b310:	str	r1, [fp, #-84]	; 0xffffffac
   2b314:	str	r2, [fp, #-88]	; 0xffffffa8
   2b318:	str	r3, [fp, #-92]	; 0xffffffa4
   2b31c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b320:	ldr	r3, [r3, #84]	; 0x54
   2b324:	str	r3, [fp, #-20]	; 0xffffffec
   2b328:	mov	r3, #0
   2b32c:	str	r3, [fp, #-60]	; 0xffffffc4
   2b330:	mov	r3, #0
   2b334:	str	r3, [fp, #-16]
   2b338:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b33c:	ldr	r2, [r3]
   2b340:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b344:	lsl	r3, r3, #3
   2b348:	add	r3, r2, r3
   2b34c:	ldr	r3, [r3]
   2b350:	str	r3, [fp, #-24]	; 0xffffffe8
   2b354:	ldr	r3, [fp, #-84]	; 0xffffffac
   2b358:	ldr	r2, [r3, #4]
   2b35c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b360:	ldr	r1, [r3, #120]	; 0x78
   2b364:	ldr	r3, [fp, #8]
   2b368:	add	r3, r1, r3
   2b36c:	add	r3, r3, #1
   2b370:	cmp	r2, r3
   2b374:	movlt	r3, #1
   2b378:	movge	r3, #0
   2b37c:	uxtb	r3, r3
   2b380:	cmp	r3, #0
   2b384:	beq	2b49c <__assert_fail@plt+0x1a17c>
   2b388:	ldr	r3, [fp, #-84]	; 0xffffffac
   2b38c:	ldr	r3, [r3, #4]
   2b390:	str	r3, [fp, #-28]	; 0xffffffe4
   2b394:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b398:	ldr	r2, [r3, #120]	; 0x78
   2b39c:	ldr	r3, [fp, #8]
   2b3a0:	add	r3, r2, r3
   2b3a4:	add	r3, r3, #1
   2b3a8:	str	r3, [fp, #-32]	; 0xffffffe0
   2b3ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b3b0:	mvn	r3, #-2147483648	; 0x80000000
   2b3b4:	sub	r3, r3, r2
   2b3b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2b3bc:	cmp	r3, r2
   2b3c0:	movlt	r3, #1
   2b3c4:	movge	r3, #0
   2b3c8:	uxtb	r3, r3
   2b3cc:	cmp	r3, #0
   2b3d0:	beq	2b3dc <__assert_fail@plt+0x1a0bc>
   2b3d4:	mov	r3, #12
   2b3d8:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b3dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b3e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b3e4:	add	r3, r2, r3
   2b3e8:	str	r3, [fp, #-36]	; 0xffffffdc
   2b3ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b3f0:	cmn	r3, #-1073741823	; 0xc0000001
   2b3f4:	movhi	r3, #1
   2b3f8:	movls	r3, #0
   2b3fc:	uxtb	r3, r3
   2b400:	cmp	r3, #0
   2b404:	beq	2b410 <__assert_fail@plt+0x1a0f0>
   2b408:	mov	r3, #12
   2b40c:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b410:	ldr	r3, [fp, #-84]	; 0xffffffac
   2b414:	ldr	r2, [r3, #8]
   2b418:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b41c:	lsl	r3, r3, #2
   2b420:	mov	r1, r3
   2b424:	mov	r0, r2
   2b428:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   2b42c:	str	r0, [fp, #-40]	; 0xffffffd8
   2b430:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b434:	cmp	r3, #0
   2b438:	moveq	r3, #1
   2b43c:	movne	r3, #0
   2b440:	uxtb	r3, r3
   2b444:	cmp	r3, #0
   2b448:	beq	2b454 <__assert_fail@plt+0x1a134>
   2b44c:	mov	r3, #12
   2b450:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b454:	ldr	r3, [fp, #-84]	; 0xffffffac
   2b458:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b45c:	str	r2, [r3, #8]
   2b460:	ldr	r3, [fp, #-84]	; 0xffffffac
   2b464:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2b468:	str	r2, [r3, #4]
   2b46c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b470:	lsl	r3, r3, #2
   2b474:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b478:	add	r0, r2, r3
   2b47c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2b480:	ldr	r2, [r3, #4]
   2b484:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b488:	sub	r3, r2, r3
   2b48c:	lsl	r3, r3, #2
   2b490:	mov	r2, r3
   2b494:	mov	r1, #0
   2b498:	bl	11248 <memset@plt>
   2b49c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2b4a0:	ldr	r3, [r3]
   2b4a4:	cmp	r3, #0
   2b4a8:	beq	2b4b8 <__assert_fail@plt+0x1a198>
   2b4ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   2b4b0:	ldr	r3, [r3]
   2b4b4:	b	2b4bc <__assert_fail@plt+0x1a19c>
   2b4b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b4bc:	str	r3, [fp, #-8]
   2b4c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b4c4:	ldr	r3, [r3, #100]	; 0x64
   2b4c8:	str	r3, [fp, #-44]	; 0xffffffd4
   2b4cc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b4d0:	ldr	r3, [r3, #40]	; 0x28
   2b4d4:	str	r3, [fp, #-48]	; 0xffffffd0
   2b4d8:	ldr	r3, [fp, #-84]	; 0xffffffac
   2b4dc:	ldr	r2, [r3, #8]
   2b4e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b4e4:	str	r2, [r3, #100]	; 0x64
   2b4e8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b4ec:	ldr	r2, [fp, #-8]
   2b4f0:	str	r2, [r3, #40]	; 0x28
   2b4f4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2b4f8:	ldr	r3, [fp, #-8]
   2b4fc:	sub	r1, r3, #1
   2b500:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b504:	ldr	r3, [r3, #88]	; 0x58
   2b508:	mov	r2, r3
   2b50c:	bl	188b0 <__assert_fail@plt+0x7590>
   2b510:	str	r0, [fp, #-52]	; 0xffffffcc
   2b514:	ldr	r2, [fp, #-8]
   2b518:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b51c:	cmp	r2, r3
   2b520:	bne	2b5ac <__assert_fail@plt+0x1a28c>
   2b524:	sub	r3, fp, #72	; 0x48
   2b528:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2b52c:	mov	r0, r3
   2b530:	bl	18b1c <__assert_fail@plt+0x77fc>
   2b534:	mov	r3, r0
   2b538:	str	r3, [fp, #-60]	; 0xffffffc4
   2b53c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b540:	cmp	r3, #0
   2b544:	movne	r3, #1
   2b548:	moveq	r3, #0
   2b54c:	uxtb	r3, r3
   2b550:	cmp	r3, #0
   2b554:	beq	2b560 <__assert_fail@plt+0x1a240>
   2b558:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b55c:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b560:	sub	r1, fp, #72	; 0x48
   2b564:	ldr	r3, [fp, #12]
   2b568:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b56c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b570:	bl	2bdcc <__assert_fail@plt+0x1aaac>
   2b574:	mov	r3, r0
   2b578:	str	r3, [fp, #-60]	; 0xffffffc4
   2b57c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b580:	cmp	r3, #0
   2b584:	movne	r3, #1
   2b588:	moveq	r3, #0
   2b58c:	uxtb	r3, r3
   2b590:	cmp	r3, #0
   2b594:	beq	2b644 <__assert_fail@plt+0x1a324>
   2b598:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b59c:	mov	r0, r3
   2b5a0:	bl	31500 <__assert_fail@plt+0x201e0>
   2b5a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b5a8:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b5ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b5b0:	ldr	r2, [r3, #100]	; 0x64
   2b5b4:	ldr	r3, [fp, #-8]
   2b5b8:	lsl	r3, r3, #2
   2b5bc:	add	r3, r2, r3
   2b5c0:	ldr	r3, [r3]
   2b5c4:	str	r3, [fp, #-16]
   2b5c8:	ldr	r3, [fp, #-16]
   2b5cc:	cmp	r3, #0
   2b5d0:	beq	2b630 <__assert_fail@plt+0x1a310>
   2b5d4:	ldr	r3, [fp, #-16]
   2b5d8:	ldrb	r3, [r3, #52]	; 0x34
   2b5dc:	and	r3, r3, #64	; 0x40
   2b5e0:	uxtb	r3, r3
   2b5e4:	cmp	r3, #0
   2b5e8:	beq	2b630 <__assert_fail@plt+0x1a310>
   2b5ec:	ldr	r3, [fp, #-16]
   2b5f0:	add	r2, r3, #4
   2b5f4:	sub	r3, fp, #72	; 0x48
   2b5f8:	mov	r1, r2
   2b5fc:	mov	r0, r3
   2b600:	bl	18cd0 <__assert_fail@plt+0x79b0>
   2b604:	mov	r3, r0
   2b608:	str	r3, [fp, #-60]	; 0xffffffc4
   2b60c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b610:	cmp	r3, #0
   2b614:	movne	r3, #1
   2b618:	moveq	r3, #0
   2b61c:	uxtb	r3, r3
   2b620:	cmp	r3, #0
   2b624:	beq	2b644 <__assert_fail@plt+0x1a324>
   2b628:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b62c:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b630:	sub	r3, fp, #72	; 0x48
   2b634:	mov	r2, #12
   2b638:	mov	r1, #0
   2b63c:	mov	r0, r3
   2b640:	bl	11248 <memset@plt>
   2b644:	ldr	r2, [fp, #-8]
   2b648:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b64c:	cmp	r2, r3
   2b650:	beq	2b678 <__assert_fail@plt+0x1a358>
   2b654:	ldr	r3, [fp, #-16]
   2b658:	cmp	r3, #0
   2b65c:	beq	2b758 <__assert_fail@plt+0x1a438>
   2b660:	ldr	r3, [fp, #-16]
   2b664:	ldrb	r3, [r3, #52]	; 0x34
   2b668:	and	r3, r3, #64	; 0x40
   2b66c:	uxtb	r3, r3
   2b670:	cmp	r3, #0
   2b674:	beq	2b758 <__assert_fail@plt+0x1a438>
   2b678:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b67c:	cmp	r3, #0
   2b680:	beq	2b6d8 <__assert_fail@plt+0x1a3b8>
   2b684:	sub	r1, fp, #72	; 0x48
   2b688:	ldr	r3, [fp, #12]
   2b68c:	str	r3, [sp]
   2b690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b694:	ldr	r2, [fp, #-8]
   2b698:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2b69c:	bl	2c194 <__assert_fail@plt+0x1ae74>
   2b6a0:	mov	r3, r0
   2b6a4:	str	r3, [fp, #-60]	; 0xffffffc4
   2b6a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b6ac:	cmp	r3, #0
   2b6b0:	movne	r3, #1
   2b6b4:	moveq	r3, #0
   2b6b8:	uxtb	r3, r3
   2b6bc:	cmp	r3, #0
   2b6c0:	beq	2b6d8 <__assert_fail@plt+0x1a3b8>
   2b6c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b6c8:	mov	r0, r3
   2b6cc:	bl	31500 <__assert_fail@plt+0x201e0>
   2b6d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b6d4:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b6d8:	sub	r2, fp, #72	; 0x48
   2b6dc:	sub	r0, fp, #60	; 0x3c
   2b6e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b6e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b6e8:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   2b6ec:	str	r0, [fp, #-16]
   2b6f0:	ldr	r3, [fp, #-16]
   2b6f4:	cmp	r3, #0
   2b6f8:	moveq	r3, #1
   2b6fc:	movne	r3, #0
   2b700:	uxtb	r3, r3
   2b704:	cmp	r3, #0
   2b708:	beq	2b73c <__assert_fail@plt+0x1a41c>
   2b70c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b710:	cmp	r3, #0
   2b714:	movne	r3, #1
   2b718:	moveq	r3, #0
   2b71c:	uxtb	r3, r3
   2b720:	cmp	r3, #0
   2b724:	beq	2b73c <__assert_fail@plt+0x1a41c>
   2b728:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b72c:	mov	r0, r3
   2b730:	bl	31500 <__assert_fail@plt+0x201e0>
   2b734:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b738:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b73c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b740:	ldr	r2, [r3, #100]	; 0x64
   2b744:	ldr	r3, [fp, #-8]
   2b748:	lsl	r3, r3, #2
   2b74c:	add	r3, r2, r3
   2b750:	ldr	r2, [fp, #-16]
   2b754:	str	r2, [r3]
   2b758:	mov	r3, #0
   2b75c:	str	r3, [fp, #-12]
   2b760:	b	2b9cc <__assert_fail@plt+0x1a6ac>
   2b764:	mov	r3, #0
   2b768:	str	r3, [fp, #-68]	; 0xffffffbc
   2b76c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b770:	ldr	r2, [r3, #100]	; 0x64
   2b774:	ldr	r3, [fp, #-8]
   2b778:	add	r3, r3, #1
   2b77c:	lsl	r3, r3, #2
   2b780:	add	r3, r2, r3
   2b784:	ldr	r3, [r3]
   2b788:	cmp	r3, #0
   2b78c:	beq	2b7f8 <__assert_fail@plt+0x1a4d8>
   2b790:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b794:	ldr	r2, [r3, #100]	; 0x64
   2b798:	ldr	r3, [fp, #-8]
   2b79c:	add	r3, r3, #1
   2b7a0:	lsl	r3, r3, #2
   2b7a4:	add	r3, r2, r3
   2b7a8:	ldr	r3, [r3]
   2b7ac:	add	r2, r3, #4
   2b7b0:	sub	r3, fp, #72	; 0x48
   2b7b4:	mov	r1, r2
   2b7b8:	mov	r0, r3
   2b7bc:	bl	195d8 <__assert_fail@plt+0x82b8>
   2b7c0:	mov	r3, r0
   2b7c4:	str	r3, [fp, #-60]	; 0xffffffc4
   2b7c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b7cc:	cmp	r3, #0
   2b7d0:	movne	r3, #1
   2b7d4:	moveq	r3, #0
   2b7d8:	uxtb	r3, r3
   2b7dc:	cmp	r3, #0
   2b7e0:	beq	2b7f8 <__assert_fail@plt+0x1a4d8>
   2b7e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b7e8:	mov	r0, r3
   2b7ec:	bl	31500 <__assert_fail@plt+0x201e0>
   2b7f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b7f4:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b7f8:	ldr	r3, [fp, #-16]
   2b7fc:	cmp	r3, #0
   2b800:	beq	2b854 <__assert_fail@plt+0x1a534>
   2b804:	ldr	r3, [fp, #-16]
   2b808:	add	r2, r3, #16
   2b80c:	sub	r3, fp, #72	; 0x48
   2b810:	ldr	r1, [fp, #-8]
   2b814:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2b818:	bl	2baa4 <__assert_fail@plt+0x1a784>
   2b81c:	mov	r3, r0
   2b820:	str	r3, [fp, #-60]	; 0xffffffc4
   2b824:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b828:	cmp	r3, #0
   2b82c:	movne	r3, #1
   2b830:	moveq	r3, #0
   2b834:	uxtb	r3, r3
   2b838:	cmp	r3, #0
   2b83c:	beq	2b854 <__assert_fail@plt+0x1a534>
   2b840:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b844:	mov	r0, r3
   2b848:	bl	31500 <__assert_fail@plt+0x201e0>
   2b84c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b850:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b854:	ldr	r3, [fp, #-8]
   2b858:	add	r3, r3, #1
   2b85c:	str	r3, [fp, #-8]
   2b860:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b864:	cmp	r3, #0
   2b868:	beq	2b90c <__assert_fail@plt+0x1a5ec>
   2b86c:	sub	r1, fp, #72	; 0x48
   2b870:	ldr	r3, [fp, #12]
   2b874:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b878:	ldr	r0, [fp, #-20]	; 0xffffffec
   2b87c:	bl	2bdcc <__assert_fail@plt+0x1aaac>
   2b880:	mov	r3, r0
   2b884:	str	r3, [fp, #-60]	; 0xffffffc4
   2b888:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b88c:	cmp	r3, #0
   2b890:	movne	r3, #1
   2b894:	moveq	r3, #0
   2b898:	uxtb	r3, r3
   2b89c:	cmp	r3, #0
   2b8a0:	beq	2b8b8 <__assert_fail@plt+0x1a598>
   2b8a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b8a8:	mov	r0, r3
   2b8ac:	bl	31500 <__assert_fail@plt+0x201e0>
   2b8b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b8b4:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b8b8:	sub	r1, fp, #72	; 0x48
   2b8bc:	ldr	r3, [fp, #12]
   2b8c0:	str	r3, [sp]
   2b8c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b8c8:	ldr	r2, [fp, #-8]
   2b8cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2b8d0:	bl	2c194 <__assert_fail@plt+0x1ae74>
   2b8d4:	mov	r3, r0
   2b8d8:	str	r3, [fp, #-60]	; 0xffffffc4
   2b8dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b8e0:	cmp	r3, #0
   2b8e4:	movne	r3, #1
   2b8e8:	moveq	r3, #0
   2b8ec:	uxtb	r3, r3
   2b8f0:	cmp	r3, #0
   2b8f4:	beq	2b90c <__assert_fail@plt+0x1a5ec>
   2b8f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b8fc:	mov	r0, r3
   2b900:	bl	31500 <__assert_fail@plt+0x201e0>
   2b904:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b908:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b90c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2b910:	ldr	r3, [fp, #-8]
   2b914:	sub	r1, r3, #1
   2b918:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b91c:	ldr	r3, [r3, #88]	; 0x58
   2b920:	mov	r2, r3
   2b924:	bl	188b0 <__assert_fail@plt+0x7590>
   2b928:	str	r0, [fp, #-52]	; 0xffffffcc
   2b92c:	sub	r2, fp, #72	; 0x48
   2b930:	sub	r0, fp, #60	; 0x3c
   2b934:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b938:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b93c:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   2b940:	str	r0, [fp, #-16]
   2b944:	ldr	r3, [fp, #-16]
   2b948:	cmp	r3, #0
   2b94c:	moveq	r3, #1
   2b950:	movne	r3, #0
   2b954:	uxtb	r3, r3
   2b958:	cmp	r3, #0
   2b95c:	beq	2b990 <__assert_fail@plt+0x1a670>
   2b960:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b964:	cmp	r3, #0
   2b968:	movne	r3, #1
   2b96c:	moveq	r3, #0
   2b970:	uxtb	r3, r3
   2b974:	cmp	r3, #0
   2b978:	beq	2b990 <__assert_fail@plt+0x1a670>
   2b97c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b980:	mov	r0, r3
   2b984:	bl	31500 <__assert_fail@plt+0x201e0>
   2b988:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b98c:	b	2ba98 <__assert_fail@plt+0x1a778>
   2b990:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b994:	ldr	r2, [r3, #100]	; 0x64
   2b998:	ldr	r3, [fp, #-8]
   2b99c:	lsl	r3, r3, #2
   2b9a0:	add	r3, r2, r3
   2b9a4:	ldr	r2, [fp, #-16]
   2b9a8:	str	r2, [r3]
   2b9ac:	ldr	r3, [fp, #-16]
   2b9b0:	cmp	r3, #0
   2b9b4:	bne	2b9c4 <__assert_fail@plt+0x1a6a4>
   2b9b8:	ldr	r3, [fp, #-12]
   2b9bc:	add	r3, r3, #1
   2b9c0:	b	2b9c8 <__assert_fail@plt+0x1a6a8>
   2b9c4:	mov	r3, #0
   2b9c8:	str	r3, [fp, #-12]
   2b9cc:	ldr	r2, [fp, #-8]
   2b9d0:	ldr	r3, [fp, #8]
   2b9d4:	cmp	r2, r3
   2b9d8:	bge	2b9f0 <__assert_fail@plt+0x1a6d0>
   2b9dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2b9e0:	ldr	r2, [r3, #120]	; 0x78
   2b9e4:	ldr	r3, [fp, #-12]
   2b9e8:	cmp	r2, r3
   2b9ec:	bge	2b764 <__assert_fail@plt+0x1a444>
   2b9f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b9f4:	mov	r0, r3
   2b9f8:	bl	31500 <__assert_fail@plt+0x201e0>
   2b9fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2ba00:	ldr	r2, [r3, #100]	; 0x64
   2ba04:	ldr	r3, [fp, #8]
   2ba08:	lsl	r3, r3, #2
   2ba0c:	add	r3, r2, r3
   2ba10:	ldr	r3, [r3]
   2ba14:	cmp	r3, #0
   2ba18:	beq	2ba3c <__assert_fail@plt+0x1a71c>
   2ba1c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2ba20:	ldr	r2, [r3, #100]	; 0x64
   2ba24:	ldr	r3, [fp, #8]
   2ba28:	lsl	r3, r3, #2
   2ba2c:	add	r3, r2, r3
   2ba30:	ldr	r3, [r3]
   2ba34:	add	r3, r3, #4
   2ba38:	b	2ba40 <__assert_fail@plt+0x1a720>
   2ba3c:	mov	r3, #0
   2ba40:	str	r3, [fp, #-56]	; 0xffffffc8
   2ba44:	ldr	r3, [fp, #-84]	; 0xffffffac
   2ba48:	ldr	r2, [fp, #-8]
   2ba4c:	str	r2, [r3]
   2ba50:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2ba54:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2ba58:	str	r2, [r3, #100]	; 0x64
   2ba5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2ba60:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2ba64:	str	r2, [r3, #40]	; 0x28
   2ba68:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ba6c:	cmp	r3, #0
   2ba70:	beq	2ba94 <__assert_fail@plt+0x1a774>
   2ba74:	ldr	r1, [fp, #4]
   2ba78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ba7c:	bl	19e3c <__assert_fail@plt+0x8b1c>
   2ba80:	mov	r3, r0
   2ba84:	cmp	r3, #0
   2ba88:	beq	2ba94 <__assert_fail@plt+0x1a774>
   2ba8c:	mov	r3, #0
   2ba90:	b	2ba98 <__assert_fail@plt+0x1a778>
   2ba94:	mov	r3, #1
   2ba98:	mov	r0, r3
   2ba9c:	sub	sp, fp, #4
   2baa0:	pop	{fp, pc}
   2baa4:	push	{r4, fp, lr}
   2baa8:	add	fp, sp, #8
   2baac:	sub	sp, sp, #68	; 0x44
   2bab0:	str	r0, [fp, #-64]	; 0xffffffc0
   2bab4:	str	r1, [fp, #-68]	; 0xffffffbc
   2bab8:	str	r2, [fp, #-72]	; 0xffffffb8
   2babc:	str	r3, [fp, #-76]	; 0xffffffb4
   2bac0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bac4:	ldr	r3, [r3, #84]	; 0x54
   2bac8:	str	r3, [fp, #-24]	; 0xffffffe8
   2bacc:	mov	r3, #0
   2bad0:	str	r3, [fp, #-48]	; 0xffffffd0
   2bad4:	sub	r3, fp, #60	; 0x3c
   2bad8:	mov	r2, #12
   2badc:	mov	r1, #0
   2bae0:	mov	r0, r3
   2bae4:	bl	11248 <memset@plt>
   2bae8:	mov	r3, #0
   2baec:	str	r3, [fp, #-16]
   2baf0:	b	2bd9c <__assert_fail@plt+0x1aa7c>
   2baf4:	mov	r3, #0
   2baf8:	str	r3, [fp, #-20]	; 0xffffffec
   2bafc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2bb00:	ldr	r2, [r3, #8]
   2bb04:	ldr	r3, [fp, #-16]
   2bb08:	lsl	r3, r3, #2
   2bb0c:	add	r3, r2, r3
   2bb10:	ldr	r3, [r3]
   2bb14:	str	r3, [fp, #-28]	; 0xffffffe4
   2bb18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bb1c:	ldr	r2, [r3]
   2bb20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bb24:	lsl	r3, r3, #3
   2bb28:	add	r3, r2, r3
   2bb2c:	ldrb	r3, [r3, #4]
   2bb30:	and	r3, r3, #8
   2bb34:	cmp	r3, #0
   2bb38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bb3c:	ldr	r2, [r3]
   2bb40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bb44:	lsl	r3, r3, #3
   2bb48:	add	r3, r2, r3
   2bb4c:	ldrb	r3, [r3, #6]
   2bb50:	and	r3, r3, #16
   2bb54:	uxtb	r3, r3
   2bb58:	cmp	r3, #0
   2bb5c:	beq	2bd00 <__assert_fail@plt+0x1a9e0>
   2bb60:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2bb64:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2bb68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2bb6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bb70:	bl	2da90 <__assert_fail@plt+0x1c770>
   2bb74:	str	r0, [fp, #-20]	; 0xffffffec
   2bb78:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bb7c:	cmp	r3, #1
   2bb80:	ble	2bd00 <__assert_fail@plt+0x1a9e0>
   2bb84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bb88:	ldr	r2, [r3, #12]
   2bb8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bb90:	lsl	r3, r3, #2
   2bb94:	add	r3, r2, r3
   2bb98:	ldr	r3, [r3]
   2bb9c:	str	r3, [fp, #-36]	; 0xffffffdc
   2bba0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2bba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bba8:	add	r3, r2, r3
   2bbac:	str	r3, [fp, #-40]	; 0xffffffd8
   2bbb0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bbb4:	ldr	r2, [r3, #100]	; 0x64
   2bbb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bbbc:	lsl	r3, r3, #2
   2bbc0:	add	r3, r2, r3
   2bbc4:	ldr	r3, [r3]
   2bbc8:	str	r3, [fp, #-44]	; 0xffffffd4
   2bbcc:	mov	r3, #0
   2bbd0:	str	r3, [fp, #-56]	; 0xffffffc8
   2bbd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bbd8:	cmp	r3, #0
   2bbdc:	beq	2bc30 <__assert_fail@plt+0x1a910>
   2bbe0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bbe4:	add	r2, r3, #4
   2bbe8:	sub	r3, fp, #60	; 0x3c
   2bbec:	mov	r1, r2
   2bbf0:	mov	r0, r3
   2bbf4:	bl	195d8 <__assert_fail@plt+0x82b8>
   2bbf8:	mov	r3, r0
   2bbfc:	str	r3, [fp, #-48]	; 0xffffffd0
   2bc00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2bc04:	cmp	r3, #0
   2bc08:	movne	r3, #1
   2bc0c:	moveq	r3, #0
   2bc10:	uxtb	r3, r3
   2bc14:	cmp	r3, #0
   2bc18:	beq	2bc30 <__assert_fail@plt+0x1a910>
   2bc1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bc20:	mov	r0, r3
   2bc24:	bl	31500 <__assert_fail@plt+0x201e0>
   2bc28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2bc2c:	b	2bdc0 <__assert_fail@plt+0x1aaa0>
   2bc30:	sub	r3, fp, #60	; 0x3c
   2bc34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2bc38:	mov	r0, r3
   2bc3c:	bl	19a2c <__assert_fail@plt+0x870c>
   2bc40:	mov	r3, r0
   2bc44:	strb	r3, [fp, #-29]	; 0xffffffe3
   2bc48:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   2bc4c:	eor	r3, r3, #1
   2bc50:	uxtb	r3, r3
   2bc54:	cmp	r3, #0
   2bc58:	beq	2bc70 <__assert_fail@plt+0x1a950>
   2bc5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bc60:	mov	r0, r3
   2bc64:	bl	31500 <__assert_fail@plt+0x201e0>
   2bc68:	mov	r3, #12
   2bc6c:	b	2bdc0 <__assert_fail@plt+0x1aaa0>
   2bc70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bc74:	ldr	r2, [r3, #100]	; 0x64
   2bc78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bc7c:	lsl	r3, r3, #2
   2bc80:	add	r4, r2, r3
   2bc84:	sub	r2, fp, #60	; 0x3c
   2bc88:	sub	r3, fp, #48	; 0x30
   2bc8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bc90:	mov	r0, r3
   2bc94:	bl	1a468 <__assert_fail@plt+0x9148>
   2bc98:	mov	r3, r0
   2bc9c:	str	r3, [r4]
   2bca0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bca4:	ldr	r2, [r3, #100]	; 0x64
   2bca8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bcac:	lsl	r3, r3, #2
   2bcb0:	add	r3, r2, r3
   2bcb4:	ldr	r3, [r3]
   2bcb8:	cmp	r3, #0
   2bcbc:	moveq	r3, #1
   2bcc0:	movne	r3, #0
   2bcc4:	uxtb	r3, r3
   2bcc8:	cmp	r3, #0
   2bccc:	beq	2bd00 <__assert_fail@plt+0x1a9e0>
   2bcd0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2bcd4:	cmp	r3, #0
   2bcd8:	movne	r3, #1
   2bcdc:	moveq	r3, #0
   2bce0:	uxtb	r3, r3
   2bce4:	cmp	r3, #0
   2bce8:	beq	2bd00 <__assert_fail@plt+0x1a9e0>
   2bcec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bcf0:	mov	r0, r3
   2bcf4:	bl	31500 <__assert_fail@plt+0x201e0>
   2bcf8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2bcfc:	b	2bdc0 <__assert_fail@plt+0x1aaa0>
   2bd00:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd04:	cmp	r3, #0
   2bd08:	bne	2bd3c <__assert_fail@plt+0x1aa1c>
   2bd0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bd10:	ldr	r2, [r3]
   2bd14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bd18:	lsl	r3, r3, #3
   2bd1c:	add	r3, r2, r3
   2bd20:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2bd24:	mov	r1, r3
   2bd28:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2bd2c:	bl	2dff0 <__assert_fail@plt+0x1ccd0>
   2bd30:	mov	r3, r0
   2bd34:	cmp	r3, #0
   2bd38:	beq	2bd90 <__assert_fail@plt+0x1aa70>
   2bd3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bd40:	ldr	r2, [r3, #12]
   2bd44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bd48:	lsl	r3, r3, #2
   2bd4c:	add	r3, r2, r3
   2bd50:	ldr	r3, [r3]
   2bd54:	mov	r1, r3
   2bd58:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2bd5c:	bl	19a2c <__assert_fail@plt+0x870c>
   2bd60:	mov	r3, r0
   2bd64:	strb	r3, [fp, #-29]	; 0xffffffe3
   2bd68:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   2bd6c:	eor	r3, r3, #1
   2bd70:	uxtb	r3, r3
   2bd74:	cmp	r3, #0
   2bd78:	beq	2bd90 <__assert_fail@plt+0x1aa70>
   2bd7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bd80:	mov	r0, r3
   2bd84:	bl	31500 <__assert_fail@plt+0x201e0>
   2bd88:	mov	r3, #12
   2bd8c:	b	2bdc0 <__assert_fail@plt+0x1aaa0>
   2bd90:	ldr	r3, [fp, #-16]
   2bd94:	add	r3, r3, #1
   2bd98:	str	r3, [fp, #-16]
   2bd9c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2bda0:	ldr	r2, [r3, #4]
   2bda4:	ldr	r3, [fp, #-16]
   2bda8:	cmp	r2, r3
   2bdac:	bgt	2baf4 <__assert_fail@plt+0x1a7d4>
   2bdb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bdb4:	mov	r0, r3
   2bdb8:	bl	31500 <__assert_fail@plt+0x201e0>
   2bdbc:	mov	r3, #0
   2bdc0:	mov	r0, r3
   2bdc4:	sub	sp, fp, #8
   2bdc8:	pop	{r4, fp, pc}
   2bdcc:	push	{fp, lr}
   2bdd0:	add	fp, sp, #4
   2bdd4:	sub	sp, sp, #56	; 0x38
   2bdd8:	str	r0, [fp, #-40]	; 0xffffffd8
   2bddc:	str	r1, [fp, #-44]	; 0xffffffd4
   2bde0:	str	r2, [fp, #-48]	; 0xffffffd0
   2bde4:	str	r3, [fp, #-52]	; 0xffffffcc
   2bde8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bdec:	ldr	r3, [r3, #4]
   2bdf0:	cmp	r3, #0
   2bdf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bdf8:	ldr	r2, [r3, #4]
   2bdfc:	sub	r3, fp, #36	; 0x24
   2be00:	mov	r1, r2
   2be04:	mov	r0, r3
   2be08:	bl	18a98 <__assert_fail@plt+0x7778>
   2be0c:	str	r0, [fp, #-12]
   2be10:	ldr	r3, [fp, #-12]
   2be14:	cmp	r3, #0
   2be18:	movne	r3, #1
   2be1c:	moveq	r3, #0
   2be20:	uxtb	r3, r3
   2be24:	cmp	r3, #0
   2be28:	beq	2be34 <__assert_fail@plt+0x1ab14>
   2be2c:	ldr	r3, [fp, #-12]
   2be30:	b	2bf80 <__assert_fail@plt+0x1ac60>
   2be34:	mov	r3, #0
   2be38:	str	r3, [fp, #-8]
   2be3c:	b	2bf44 <__assert_fail@plt+0x1ac24>
   2be40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2be44:	ldr	r2, [r3, #8]
   2be48:	ldr	r3, [fp, #-8]
   2be4c:	lsl	r3, r3, #2
   2be50:	add	r3, r2, r3
   2be54:	ldr	r3, [r3]
   2be58:	str	r3, [fp, #-16]
   2be5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2be60:	ldr	r1, [r3, #24]
   2be64:	ldr	r2, [fp, #-16]
   2be68:	mov	r3, r2
   2be6c:	lsl	r3, r3, #1
   2be70:	add	r3, r3, r2
   2be74:	lsl	r3, r3, #2
   2be78:	add	r3, r1, r3
   2be7c:	str	r3, [fp, #-20]	; 0xffffffec
   2be80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2be84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2be88:	ldr	r1, [fp, #-20]	; 0xffffffec
   2be8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2be90:	bl	2b23c <__assert_fail@plt+0x19f1c>
   2be94:	str	r0, [fp, #-24]	; 0xffffffe8
   2be98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2be9c:	cmn	r3, #1
   2bea0:	bne	2bee8 <__assert_fail@plt+0x1abc8>
   2bea4:	sub	r3, fp, #36	; 0x24
   2bea8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2beac:	mov	r0, r3
   2beb0:	bl	195d8 <__assert_fail@plt+0x82b8>
   2beb4:	str	r0, [fp, #-12]
   2beb8:	ldr	r3, [fp, #-12]
   2bebc:	cmp	r3, #0
   2bec0:	movne	r3, #1
   2bec4:	moveq	r3, #0
   2bec8:	uxtb	r3, r3
   2becc:	cmp	r3, #0
   2bed0:	beq	2bf38 <__assert_fail@plt+0x1ac18>
   2bed4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bed8:	mov	r0, r3
   2bedc:	bl	31500 <__assert_fail@plt+0x201e0>
   2bee0:	ldr	r3, [fp, #-12]
   2bee4:	b	2bf80 <__assert_fail@plt+0x1ac60>
   2bee8:	sub	r1, fp, #36	; 0x24
   2beec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bef0:	str	r3, [sp]
   2bef4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2bef8:	ldr	r2, [fp, #-16]
   2befc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bf00:	bl	2bf8c <__assert_fail@plt+0x1ac6c>
   2bf04:	str	r0, [fp, #-12]
   2bf08:	ldr	r3, [fp, #-12]
   2bf0c:	cmp	r3, #0
   2bf10:	movne	r3, #1
   2bf14:	moveq	r3, #0
   2bf18:	uxtb	r3, r3
   2bf1c:	cmp	r3, #0
   2bf20:	beq	2bf38 <__assert_fail@plt+0x1ac18>
   2bf24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bf28:	mov	r0, r3
   2bf2c:	bl	31500 <__assert_fail@plt+0x201e0>
   2bf30:	ldr	r3, [fp, #-12]
   2bf34:	b	2bf80 <__assert_fail@plt+0x1ac60>
   2bf38:	ldr	r3, [fp, #-8]
   2bf3c:	add	r3, r3, #1
   2bf40:	str	r3, [fp, #-8]
   2bf44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bf48:	ldr	r2, [r3, #4]
   2bf4c:	ldr	r3, [fp, #-8]
   2bf50:	cmp	r2, r3
   2bf54:	bgt	2be40 <__assert_fail@plt+0x1ab20>
   2bf58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bf5c:	ldr	r3, [r3, #8]
   2bf60:	mov	r0, r3
   2bf64:	bl	31500 <__assert_fail@plt+0x201e0>
   2bf68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bf6c:	mov	ip, r3
   2bf70:	sub	r3, fp, #36	; 0x24
   2bf74:	ldm	r3, {r0, r1, r2}
   2bf78:	stm	ip, {r0, r1, r2}
   2bf7c:	mov	r3, #0
   2bf80:	mov	r0, r3
   2bf84:	sub	sp, fp, #4
   2bf88:	pop	{fp, pc}
   2bf8c:	push	{fp, lr}
   2bf90:	add	fp, sp, #4
   2bf94:	sub	sp, sp, #40	; 0x28
   2bf98:	str	r0, [fp, #-24]	; 0xffffffe8
   2bf9c:	str	r1, [fp, #-28]	; 0xffffffe4
   2bfa0:	str	r2, [fp, #-32]	; 0xffffffe0
   2bfa4:	str	r3, [fp, #-36]	; 0xffffffdc
   2bfa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bfac:	str	r3, [fp, #-8]
   2bfb0:	b	2c15c <__assert_fail@plt+0x1ae3c>
   2bfb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bfb8:	ldr	r2, [r3]
   2bfbc:	ldr	r3, [fp, #-8]
   2bfc0:	lsl	r3, r3, #3
   2bfc4:	add	r3, r2, r3
   2bfc8:	ldrb	r3, [r3, #4]
   2bfcc:	mov	r2, r3
   2bfd0:	ldr	r3, [fp, #4]
   2bfd4:	cmp	r2, r3
   2bfd8:	bne	2c03c <__assert_fail@plt+0x1ad1c>
   2bfdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bfe0:	ldr	r2, [r3]
   2bfe4:	ldr	r3, [fp, #-8]
   2bfe8:	lsl	r3, r3, #3
   2bfec:	add	r3, r2, r3
   2bff0:	ldr	r2, [r3]
   2bff4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bff8:	cmp	r2, r3
   2bffc:	bne	2c03c <__assert_fail@plt+0x1ad1c>
   2c000:	ldr	r3, [fp, #4]
   2c004:	cmp	r3, #9
   2c008:	bne	2c178 <__assert_fail@plt+0x1ae58>
   2c00c:	ldr	r1, [fp, #-8]
   2c010:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c014:	bl	19a2c <__assert_fail@plt+0x870c>
   2c018:	mov	r3, r0
   2c01c:	strb	r3, [fp, #-9]
   2c020:	ldrb	r3, [fp, #-9]
   2c024:	eor	r3, r3, #1
   2c028:	uxtb	r3, r3
   2c02c:	cmp	r3, #0
   2c030:	beq	2c178 <__assert_fail@plt+0x1ae58>
   2c034:	mov	r3, #12
   2c038:	b	2c188 <__assert_fail@plt+0x1ae68>
   2c03c:	ldr	r1, [fp, #-8]
   2c040:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c044:	bl	19a2c <__assert_fail@plt+0x870c>
   2c048:	mov	r3, r0
   2c04c:	strb	r3, [fp, #-9]
   2c050:	ldrb	r3, [fp, #-9]
   2c054:	eor	r3, r3, #1
   2c058:	uxtb	r3, r3
   2c05c:	cmp	r3, #0
   2c060:	beq	2c06c <__assert_fail@plt+0x1ad4c>
   2c064:	mov	r3, #12
   2c068:	b	2c188 <__assert_fail@plt+0x1ae68>
   2c06c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c070:	ldr	r1, [r3, #20]
   2c074:	ldr	r2, [fp, #-8]
   2c078:	mov	r3, r2
   2c07c:	lsl	r3, r3, #1
   2c080:	add	r3, r3, r2
   2c084:	lsl	r3, r3, #2
   2c088:	add	r3, r1, r3
   2c08c:	ldr	r3, [r3, #4]
   2c090:	cmp	r3, #0
   2c094:	beq	2c180 <__assert_fail@plt+0x1ae60>
   2c098:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c09c:	ldr	r1, [r3, #20]
   2c0a0:	ldr	r2, [fp, #-8]
   2c0a4:	mov	r3, r2
   2c0a8:	lsl	r3, r3, #1
   2c0ac:	add	r3, r3, r2
   2c0b0:	lsl	r3, r3, #2
   2c0b4:	add	r3, r1, r3
   2c0b8:	ldr	r3, [r3, #4]
   2c0bc:	cmp	r3, #2
   2c0c0:	bne	2c130 <__assert_fail@plt+0x1ae10>
   2c0c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c0c8:	ldr	r1, [r3, #20]
   2c0cc:	ldr	r2, [fp, #-8]
   2c0d0:	mov	r3, r2
   2c0d4:	lsl	r3, r3, #1
   2c0d8:	add	r3, r3, r2
   2c0dc:	lsl	r3, r3, #2
   2c0e0:	add	r3, r1, r3
   2c0e4:	ldr	r3, [r3, #8]
   2c0e8:	add	r3, r3, #4
   2c0ec:	ldr	r2, [r3]
   2c0f0:	ldr	r3, [fp, #4]
   2c0f4:	str	r3, [sp]
   2c0f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c0fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c104:	bl	2bf8c <__assert_fail@plt+0x1ac6c>
   2c108:	str	r0, [fp, #-16]
   2c10c:	ldr	r3, [fp, #-16]
   2c110:	cmp	r3, #0
   2c114:	movne	r3, #1
   2c118:	moveq	r3, #0
   2c11c:	uxtb	r3, r3
   2c120:	cmp	r3, #0
   2c124:	beq	2c130 <__assert_fail@plt+0x1ae10>
   2c128:	ldr	r3, [fp, #-16]
   2c12c:	b	2c188 <__assert_fail@plt+0x1ae68>
   2c130:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c134:	ldr	r1, [r3, #20]
   2c138:	ldr	r2, [fp, #-8]
   2c13c:	mov	r3, r2
   2c140:	lsl	r3, r3, #1
   2c144:	add	r3, r3, r2
   2c148:	lsl	r3, r3, #2
   2c14c:	add	r3, r1, r3
   2c150:	ldr	r3, [r3, #8]
   2c154:	ldr	r3, [r3]
   2c158:	str	r3, [fp, #-8]
   2c15c:	ldr	r1, [fp, #-8]
   2c160:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c164:	bl	19e3c <__assert_fail@plt+0x8b1c>
   2c168:	mov	r3, r0
   2c16c:	cmp	r3, #0
   2c170:	beq	2bfb4 <__assert_fail@plt+0x1ac94>
   2c174:	b	2c184 <__assert_fail@plt+0x1ae64>
   2c178:	nop			; (mov r0, r0)
   2c17c:	b	2c184 <__assert_fail@plt+0x1ae64>
   2c180:	nop			; (mov r0, r0)
   2c184:	mov	r3, #0
   2c188:	mov	r0, r3
   2c18c:	sub	sp, fp, #4
   2c190:	pop	{fp, pc}
   2c194:	push	{r4, fp, lr}
   2c198:	add	fp, sp, #8
   2c19c:	sub	sp, sp, #84	; 0x54
   2c1a0:	str	r0, [fp, #-80]	; 0xffffffb0
   2c1a4:	str	r1, [fp, #-84]	; 0xffffffac
   2c1a8:	str	r2, [fp, #-88]	; 0xffffffa8
   2c1ac:	str	r3, [fp, #-92]	; 0xffffffa4
   2c1b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c1b4:	ldr	r3, [r3, #84]	; 0x54
   2c1b8:	str	r3, [fp, #-20]	; 0xffffffec
   2c1bc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2c1c0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2c1c4:	bl	2e9cc <__assert_fail@plt+0x1d6ac>
   2c1c8:	str	r0, [fp, #-24]	; 0xffffffe8
   2c1cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c1d0:	cmn	r3, #1
   2c1d4:	bne	2c1e0 <__assert_fail@plt+0x1aec0>
   2c1d8:	mov	r3, #0
   2c1dc:	b	2c5ac <__assert_fail@plt+0x1b28c>
   2c1e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c1e4:	ldr	r1, [r3, #116]	; 0x74
   2c1e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c1ec:	mov	r3, r2
   2c1f0:	lsl	r3, r3, #1
   2c1f4:	add	r3, r3, r2
   2c1f8:	lsl	r3, r3, #3
   2c1fc:	add	r3, r1, r3
   2c200:	str	r3, [fp, #-16]
   2c204:	ldr	r3, [fp, #-16]
   2c208:	ldr	r3, [r3]
   2c20c:	mov	r1, r3
   2c210:	ldr	r0, [fp, #-84]	; 0xffffffac
   2c214:	bl	19e3c <__assert_fail@plt+0x8b1c>
   2c218:	mov	r3, r0
   2c21c:	cmp	r3, #0
   2c220:	beq	2c57c <__assert_fail@plt+0x1b25c>
   2c224:	ldr	r3, [fp, #-16]
   2c228:	ldr	r2, [r3, #12]
   2c22c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c230:	add	r2, r2, r3
   2c234:	ldr	r3, [fp, #-16]
   2c238:	ldr	r3, [r3, #8]
   2c23c:	sub	r3, r2, r3
   2c240:	str	r3, [fp, #-28]	; 0xffffffe4
   2c244:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c248:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c24c:	cmp	r2, r3
   2c250:	bne	2c390 <__assert_fail@plt+0x1b070>
   2c254:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c258:	ldr	r2, [r3, #20]
   2c25c:	ldr	r3, [fp, #-16]
   2c260:	ldr	r3, [r3]
   2c264:	mov	r1, r3
   2c268:	mov	r3, r1
   2c26c:	lsl	r3, r3, #1
   2c270:	add	r3, r3, r1
   2c274:	lsl	r3, r3, #2
   2c278:	add	r3, r2, r3
   2c27c:	ldr	r3, [r3, #8]
   2c280:	ldr	r3, [r3]
   2c284:	str	r3, [fp, #-32]	; 0xffffffe0
   2c288:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c28c:	ldr	r0, [fp, #-84]	; 0xffffffac
   2c290:	bl	19e3c <__assert_fail@plt+0x8b1c>
   2c294:	mov	r3, r0
   2c298:	cmp	r3, #0
   2c29c:	bne	2c584 <__assert_fail@plt+0x1b264>
   2c2a0:	sub	r3, fp, #60	; 0x3c
   2c2a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c2a8:	mov	r0, r3
   2c2ac:	bl	18b1c <__assert_fail@plt+0x77fc>
   2c2b0:	mov	r3, r0
   2c2b4:	str	r3, [fp, #-48]	; 0xffffffd0
   2c2b8:	sub	r1, fp, #60	; 0x3c
   2c2bc:	ldr	r3, [fp, #4]
   2c2c0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2c2c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c2c8:	bl	2bdcc <__assert_fail@plt+0x1aaac>
   2c2cc:	str	r0, [fp, #-40]	; 0xffffffd8
   2c2d0:	sub	r3, fp, #60	; 0x3c
   2c2d4:	mov	r1, r3
   2c2d8:	ldr	r0, [fp, #-84]	; 0xffffffac
   2c2dc:	bl	195d8 <__assert_fail@plt+0x82b8>
   2c2e0:	str	r0, [fp, #-44]	; 0xffffffd4
   2c2e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c2e8:	mov	r0, r3
   2c2ec:	bl	31500 <__assert_fail@plt+0x201e0>
   2c2f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c2f4:	cmp	r3, #0
   2c2f8:	movne	r3, #1
   2c2fc:	moveq	r3, #0
   2c300:	uxtb	r3, r3
   2c304:	cmp	r3, #0
   2c308:	bne	2c328 <__assert_fail@plt+0x1b008>
   2c30c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c310:	cmp	r3, #0
   2c314:	movne	r3, #1
   2c318:	moveq	r3, #0
   2c31c:	uxtb	r3, r3
   2c320:	cmp	r3, #0
   2c324:	beq	2c330 <__assert_fail@plt+0x1b010>
   2c328:	mov	r3, #1
   2c32c:	b	2c334 <__assert_fail@plt+0x1b014>
   2c330:	mov	r3, #0
   2c334:	cmp	r3, #0
   2c338:	bne	2c358 <__assert_fail@plt+0x1b038>
   2c33c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c340:	cmp	r3, #0
   2c344:	movne	r3, #1
   2c348:	moveq	r3, #0
   2c34c:	uxtb	r3, r3
   2c350:	cmp	r3, #0
   2c354:	beq	2c1e0 <__assert_fail@plt+0x1aec0>
   2c358:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c35c:	cmp	r3, #0
   2c360:	bne	2c380 <__assert_fail@plt+0x1b060>
   2c364:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c368:	cmp	r3, #0
   2c36c:	beq	2c378 <__assert_fail@plt+0x1b058>
   2c370:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c374:	b	2c384 <__assert_fail@plt+0x1b064>
   2c378:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c37c:	b	2c384 <__assert_fail@plt+0x1b064>
   2c380:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c384:	str	r3, [fp, #-48]	; 0xffffffd0
   2c388:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c38c:	b	2c5ac <__assert_fail@plt+0x1b28c>
   2c390:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c394:	ldr	r2, [r3, #12]
   2c398:	ldr	r3, [fp, #-16]
   2c39c:	ldr	r3, [r3]
   2c3a0:	lsl	r3, r3, #2
   2c3a4:	add	r3, r2, r3
   2c3a8:	ldr	r3, [r3]
   2c3ac:	str	r3, [fp, #-32]	; 0xffffffe0
   2c3b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c3b4:	ldr	r2, [r3, #100]	; 0x64
   2c3b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c3bc:	lsl	r3, r3, #2
   2c3c0:	add	r3, r2, r3
   2c3c4:	ldr	r3, [r3]
   2c3c8:	cmp	r3, #0
   2c3cc:	beq	2c4b0 <__assert_fail@plt+0x1b190>
   2c3d0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c3d4:	ldr	r2, [r3, #100]	; 0x64
   2c3d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c3dc:	lsl	r3, r3, #2
   2c3e0:	add	r3, r2, r3
   2c3e4:	ldr	r3, [r3]
   2c3e8:	add	r3, r3, #4
   2c3ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c3f0:	mov	r0, r3
   2c3f4:	bl	19e3c <__assert_fail@plt+0x8b1c>
   2c3f8:	mov	r3, r0
   2c3fc:	cmp	r3, #0
   2c400:	bne	2c58c <__assert_fail@plt+0x1b26c>
   2c404:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c408:	ldr	r2, [r3, #100]	; 0x64
   2c40c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c410:	lsl	r3, r3, #2
   2c414:	add	r3, r2, r3
   2c418:	ldr	r3, [r3]
   2c41c:	add	r2, r3, #4
   2c420:	sub	r3, fp, #72	; 0x48
   2c424:	mov	r1, r2
   2c428:	mov	r0, r3
   2c42c:	bl	18cd0 <__assert_fail@plt+0x79b0>
   2c430:	mov	r3, r0
   2c434:	str	r3, [fp, #-48]	; 0xffffffd0
   2c438:	sub	r3, fp, #72	; 0x48
   2c43c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c440:	mov	r0, r3
   2c444:	bl	19a2c <__assert_fail@plt+0x870c>
   2c448:	mov	r3, r0
   2c44c:	strb	r3, [fp, #-33]	; 0xffffffdf
   2c450:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c454:	cmp	r3, #0
   2c458:	movne	r3, #1
   2c45c:	moveq	r3, #0
   2c460:	uxtb	r3, r3
   2c464:	cmp	r3, #0
   2c468:	bne	2c480 <__assert_fail@plt+0x1b160>
   2c46c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2c470:	eor	r3, r3, #1
   2c474:	uxtb	r3, r3
   2c478:	cmp	r3, #0
   2c47c:	beq	2c4ec <__assert_fail@plt+0x1b1cc>
   2c480:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c484:	mov	r0, r3
   2c488:	bl	31500 <__assert_fail@plt+0x201e0>
   2c48c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c490:	cmp	r3, #0
   2c494:	beq	2c4a0 <__assert_fail@plt+0x1b180>
   2c498:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c49c:	b	2c4a4 <__assert_fail@plt+0x1b184>
   2c4a0:	mov	r3, #12
   2c4a4:	str	r3, [fp, #-48]	; 0xffffffd0
   2c4a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c4ac:	b	2c5ac <__assert_fail@plt+0x1b28c>
   2c4b0:	sub	r3, fp, #72	; 0x48
   2c4b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c4b8:	mov	r0, r3
   2c4bc:	bl	18b1c <__assert_fail@plt+0x77fc>
   2c4c0:	mov	r3, r0
   2c4c4:	str	r3, [fp, #-48]	; 0xffffffd0
   2c4c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c4cc:	cmp	r3, #0
   2c4d0:	movne	r3, #1
   2c4d4:	moveq	r3, #0
   2c4d8:	uxtb	r3, r3
   2c4dc:	cmp	r3, #0
   2c4e0:	beq	2c4ec <__assert_fail@plt+0x1b1cc>
   2c4e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c4e8:	b	2c5ac <__assert_fail@plt+0x1b28c>
   2c4ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c4f0:	ldr	r2, [r3, #100]	; 0x64
   2c4f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c4f8:	lsl	r3, r3, #2
   2c4fc:	add	r4, r2, r3
   2c500:	sub	r2, fp, #72	; 0x48
   2c504:	sub	r3, fp, #48	; 0x30
   2c508:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c50c:	mov	r0, r3
   2c510:	bl	1a468 <__assert_fail@plt+0x9148>
   2c514:	mov	r3, r0
   2c518:	str	r3, [r4]
   2c51c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c520:	mov	r0, r3
   2c524:	bl	31500 <__assert_fail@plt+0x201e0>
   2c528:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c52c:	ldr	r2, [r3, #100]	; 0x64
   2c530:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c534:	lsl	r3, r3, #2
   2c538:	add	r3, r2, r3
   2c53c:	ldr	r3, [r3]
   2c540:	cmp	r3, #0
   2c544:	moveq	r3, #1
   2c548:	movne	r3, #0
   2c54c:	uxtb	r3, r3
   2c550:	cmp	r3, #0
   2c554:	beq	2c590 <__assert_fail@plt+0x1b270>
   2c558:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c55c:	cmp	r3, #0
   2c560:	movne	r3, #1
   2c564:	moveq	r3, #0
   2c568:	uxtb	r3, r3
   2c56c:	cmp	r3, #0
   2c570:	beq	2c590 <__assert_fail@plt+0x1b270>
   2c574:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c578:	b	2c5ac <__assert_fail@plt+0x1b28c>
   2c57c:	nop			; (mov r0, r0)
   2c580:	b	2c590 <__assert_fail@plt+0x1b270>
   2c584:	nop			; (mov r0, r0)
   2c588:	b	2c590 <__assert_fail@plt+0x1b270>
   2c58c:	nop			; (mov r0, r0)
   2c590:	ldr	r3, [fp, #-16]
   2c594:	add	r2, r3, #24
   2c598:	str	r2, [fp, #-16]
   2c59c:	ldrb	r3, [r3, #20]
   2c5a0:	cmp	r3, #0
   2c5a4:	bne	2c204 <__assert_fail@plt+0x1aee4>
   2c5a8:	mov	r3, #0
   2c5ac:	mov	r0, r3
   2c5b0:	sub	sp, fp, #8
   2c5b4:	pop	{r4, fp, pc}
   2c5b8:	push	{fp, lr}
   2c5bc:	add	fp, sp, #4
   2c5c0:	sub	sp, sp, #14400	; 0x3840
   2c5c4:	sub	sp, sp, #32
   2c5c8:	sub	r3, fp, #12288	; 0x3000
   2c5cc:	sub	r3, r3, #4
   2c5d0:	str	r0, [r3, #-2140]	; 0xfffff7a4
   2c5d4:	sub	r3, fp, #12288	; 0x3000
   2c5d8:	sub	r3, r3, #4
   2c5dc:	str	r1, [r3, #-2144]	; 0xfffff7a0
   2c5e0:	mov	r3, #0
   2c5e4:	strb	r3, [fp, #-17]	; 0xffffffef
   2c5e8:	sub	r3, fp, #12288	; 0x3000
   2c5ec:	sub	r3, r3, #4
   2c5f0:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2c5f4:	mov	r2, #0
   2c5f8:	str	r2, [r3, #44]	; 0x2c
   2c5fc:	sub	r3, fp, #12288	; 0x3000
   2c600:	sub	r3, r3, #4
   2c604:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2c608:	ldr	r2, [r3, #44]	; 0x2c
   2c60c:	sub	r3, fp, #12288	; 0x3000
   2c610:	sub	r3, r3, #4
   2c614:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2c618:	str	r2, [r3, #48]	; 0x30
   2c61c:	sub	r3, fp, #14400	; 0x3840
   2c620:	sub	r3, r3, #4
   2c624:	sub	r3, r3, #20
   2c628:	sub	r2, fp, #6208	; 0x1840
   2c62c:	sub	r2, r2, #4
   2c630:	sub	r2, r2, #20
   2c634:	sub	r1, fp, #12288	; 0x3000
   2c638:	sub	r1, r1, #4
   2c63c:	sub	r0, fp, #12288	; 0x3000
   2c640:	sub	r0, r0, #4
   2c644:	ldr	r1, [r1, #-2144]	; 0xfffff7a0
   2c648:	ldr	r0, [r0, #-2140]	; 0xfffff7a4
   2c64c:	bl	2d054 <__assert_fail@plt+0x1bd34>
   2c650:	str	r0, [fp, #-36]	; 0xffffffdc
   2c654:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c658:	cmp	r3, #0
   2c65c:	movle	r3, #1
   2c660:	movgt	r3, #0
   2c664:	uxtb	r3, r3
   2c668:	cmp	r3, #0
   2c66c:	beq	2c6e0 <__assert_fail@plt+0x1b3c0>
   2c670:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c674:	cmp	r3, #0
   2c678:	bne	2c6d8 <__assert_fail@plt+0x1b3b8>
   2c67c:	mov	r1, #256	; 0x100
   2c680:	mov	r0, #4
   2c684:	bl	30c58 <__assert_fail@plt+0x1f938>
   2c688:	mov	r3, r0
   2c68c:	mov	r2, r3
   2c690:	sub	r3, fp, #12288	; 0x3000
   2c694:	sub	r3, r3, #4
   2c698:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2c69c:	str	r2, [r3, #44]	; 0x2c
   2c6a0:	sub	r3, fp, #12288	; 0x3000
   2c6a4:	sub	r3, r3, #4
   2c6a8:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2c6ac:	ldr	r3, [r3, #44]	; 0x2c
   2c6b0:	cmp	r3, #0
   2c6b4:	moveq	r3, #1
   2c6b8:	movne	r3, #0
   2c6bc:	uxtb	r3, r3
   2c6c0:	cmp	r3, #0
   2c6c4:	beq	2c6d0 <__assert_fail@plt+0x1b3b0>
   2c6c8:	mov	r3, #0
   2c6cc:	b	2d048 <__assert_fail@plt+0x1bd28>
   2c6d0:	mov	r3, #1
   2c6d4:	b	2d048 <__assert_fail@plt+0x1bd28>
   2c6d8:	mov	r3, #0
   2c6dc:	b	2d048 <__assert_fail@plt+0x1bd28>
   2c6e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c6e4:	add	r2, r3, #1
   2c6e8:	sub	r3, fp, #3120	; 0xc30
   2c6ec:	sub	r3, r3, #4
   2c6f0:	sub	r3, r3, #4
   2c6f4:	mov	r1, r2
   2c6f8:	mov	r0, r3
   2c6fc:	bl	18a98 <__assert_fail@plt+0x7778>
   2c700:	mov	r3, r0
   2c704:	str	r3, [fp, #-44]	; 0xffffffd4
   2c708:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c70c:	cmp	r3, #0
   2c710:	movne	r3, #1
   2c714:	moveq	r3, #0
   2c718:	uxtb	r3, r3
   2c71c:	cmp	r3, #0
   2c720:	beq	2c7bc <__assert_fail@plt+0x1b49c>
   2c724:	b	2c74c <__assert_fail@plt+0x1b42c>
   2c728:	nop			; (mov r0, r0)
   2c72c:	b	2c74c <__assert_fail@plt+0x1b42c>
   2c730:	nop			; (mov r0, r0)
   2c734:	b	2c74c <__assert_fail@plt+0x1b42c>
   2c738:	nop			; (mov r0, r0)
   2c73c:	b	2c74c <__assert_fail@plt+0x1b42c>
   2c740:	nop			; (mov r0, r0)
   2c744:	b	2c74c <__assert_fail@plt+0x1b42c>
   2c748:	nop			; (mov r0, r0)
   2c74c:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   2c750:	mov	r0, r3
   2c754:	bl	31500 <__assert_fail@plt+0x201e0>
   2c758:	mov	r3, #0
   2c75c:	str	r3, [fp, #-8]
   2c760:	b	2c7a4 <__assert_fail@plt+0x1b484>
   2c764:	ldr	r2, [fp, #-8]
   2c768:	mov	r3, r2
   2c76c:	lsl	r3, r3, #1
   2c770:	add	r3, r3, r2
   2c774:	lsl	r3, r3, #2
   2c778:	mov	r2, r3
   2c77c:	sub	r3, fp, #6208	; 0x1840
   2c780:	sub	r3, r3, #4
   2c784:	sub	r3, r3, #20
   2c788:	add	r3, r3, r2
   2c78c:	ldr	r3, [r3, #8]
   2c790:	mov	r0, r3
   2c794:	bl	31500 <__assert_fail@plt+0x201e0>
   2c798:	ldr	r3, [fp, #-8]
   2c79c:	add	r3, r3, #1
   2c7a0:	str	r3, [fp, #-8]
   2c7a4:	ldr	r2, [fp, #-8]
   2c7a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c7ac:	cmp	r2, r3
   2c7b0:	blt	2c764 <__assert_fail@plt+0x1b444>
   2c7b4:	mov	r3, #0
   2c7b8:	b	2d048 <__assert_fail@plt+0x1bd28>
   2c7bc:	sub	r3, fp, #3152	; 0xc50
   2c7c0:	sub	r3, r3, #4
   2c7c4:	sub	r3, r3, #4
   2c7c8:	mov	r0, r3
   2c7cc:	bl	15d04 <__assert_fail@plt+0x49e4>
   2c7d0:	mov	r3, #0
   2c7d4:	str	r3, [fp, #-8]
   2c7d8:	b	2cba4 <__assert_fail@plt+0x1b884>
   2c7dc:	mov	r3, #0
   2c7e0:	str	r3, [fp, #-3124]	; 0xfffff3cc
   2c7e4:	mov	r3, #0
   2c7e8:	str	r3, [fp, #-12]
   2c7ec:	b	2c8cc <__assert_fail@plt+0x1b5ac>
   2c7f0:	sub	r3, fp, #12288	; 0x3000
   2c7f4:	sub	r3, r3, #4
   2c7f8:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2c7fc:	ldr	r1, [r3, #12]
   2c800:	sub	r3, fp, #4096	; 0x1000
   2c804:	sub	r3, r3, #4
   2c808:	mov	r0, r3
   2c80c:	ldr	r2, [fp, #-8]
   2c810:	mov	r3, r2
   2c814:	lsl	r3, r3, #1
   2c818:	add	r3, r3, r2
   2c81c:	lsl	r3, r3, #2
   2c820:	add	r3, r0, r3
   2c824:	sub	r3, r3, #2112	; 0x840
   2c828:	sub	r3, r3, #12
   2c82c:	ldr	r2, [r3]
   2c830:	ldr	r3, [fp, #-12]
   2c834:	lsl	r3, r3, #2
   2c838:	add	r3, r2, r3
   2c83c:	ldr	r3, [r3]
   2c840:	lsl	r3, r3, #2
   2c844:	add	r3, r1, r3
   2c848:	ldr	r3, [r3]
   2c84c:	str	r3, [fp, #-40]	; 0xffffffd8
   2c850:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c854:	cmn	r3, #1
   2c858:	beq	2c8c0 <__assert_fail@plt+0x1b5a0>
   2c85c:	sub	r3, fp, #12288	; 0x3000
   2c860:	sub	r3, r3, #4
   2c864:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2c868:	ldr	r1, [r3, #24]
   2c86c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2c870:	mov	r3, r2
   2c874:	lsl	r3, r3, #1
   2c878:	add	r3, r3, r2
   2c87c:	lsl	r3, r3, #2
   2c880:	add	r2, r1, r3
   2c884:	sub	r3, fp, #3120	; 0xc30
   2c888:	sub	r3, r3, #4
   2c88c:	sub	r3, r3, #4
   2c890:	mov	r1, r2
   2c894:	mov	r0, r3
   2c898:	bl	195d8 <__assert_fail@plt+0x82b8>
   2c89c:	mov	r3, r0
   2c8a0:	str	r3, [fp, #-44]	; 0xffffffd4
   2c8a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c8a8:	cmp	r3, #0
   2c8ac:	movne	r3, #1
   2c8b0:	moveq	r3, #0
   2c8b4:	uxtb	r3, r3
   2c8b8:	cmp	r3, #0
   2c8bc:	bne	2c728 <__assert_fail@plt+0x1b408>
   2c8c0:	ldr	r3, [fp, #-12]
   2c8c4:	add	r3, r3, #1
   2c8c8:	str	r3, [fp, #-12]
   2c8cc:	sub	r3, fp, #4096	; 0x1000
   2c8d0:	sub	r3, r3, #4
   2c8d4:	mov	r1, r3
   2c8d8:	ldr	r2, [fp, #-8]
   2c8dc:	mov	r3, r2
   2c8e0:	lsl	r3, r3, #1
   2c8e4:	add	r3, r3, r2
   2c8e8:	lsl	r3, r3, #2
   2c8ec:	add	r3, r1, r3
   2c8f0:	sub	r3, r3, #2128	; 0x850
   2c8f4:	ldr	r2, [r3]
   2c8f8:	ldr	r3, [fp, #-12]
   2c8fc:	cmp	r2, r3
   2c900:	bgt	2c7f0 <__assert_fail@plt+0x1b4d0>
   2c904:	sub	r2, fp, #3120	; 0xc30
   2c908:	sub	r2, r2, #4
   2c90c:	sub	r2, r2, #4
   2c910:	sub	r3, fp, #12288	; 0x3000
   2c914:	sub	r3, r3, #4
   2c918:	mov	r1, r3
   2c91c:	sub	r0, fp, #44	; 0x2c
   2c920:	mov	r3, #0
   2c924:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   2c928:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   2c92c:	mov	r2, r0
   2c930:	ldr	r3, [fp, #-8]
   2c934:	lsl	r3, r3, #2
   2c938:	sub	r1, fp, #4
   2c93c:	add	r3, r1, r3
   2c940:	str	r2, [r3, #-1064]	; 0xfffffbd8
   2c944:	ldr	r3, [fp, #-8]
   2c948:	lsl	r3, r3, #2
   2c94c:	sub	r2, fp, #4
   2c950:	add	r3, r2, r3
   2c954:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2c958:	cmp	r3, #0
   2c95c:	moveq	r3, #1
   2c960:	movne	r3, #0
   2c964:	uxtb	r3, r3
   2c968:	cmp	r3, #0
   2c96c:	beq	2c98c <__assert_fail@plt+0x1b66c>
   2c970:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c974:	cmp	r3, #0
   2c978:	movne	r3, #1
   2c97c:	moveq	r3, #0
   2c980:	uxtb	r3, r3
   2c984:	cmp	r3, #0
   2c988:	bne	2c730 <__assert_fail@plt+0x1b410>
   2c98c:	ldr	r3, [fp, #-8]
   2c990:	lsl	r3, r3, #2
   2c994:	sub	r2, fp, #4
   2c998:	add	r3, r2, r3
   2c99c:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2c9a0:	ldrb	r3, [r3, #52]	; 0x34
   2c9a4:	bic	r3, r3, #127	; 0x7f
   2c9a8:	uxtb	r3, r3
   2c9ac:	cmp	r3, #0
   2c9b0:	beq	2cb18 <__assert_fail@plt+0x1b7f8>
   2c9b4:	sub	r2, fp, #3120	; 0xc30
   2c9b8:	sub	r2, r2, #4
   2c9bc:	sub	r2, r2, #4
   2c9c0:	sub	r3, fp, #12288	; 0x3000
   2c9c4:	sub	r3, r3, #4
   2c9c8:	mov	r1, r3
   2c9cc:	sub	r0, fp, #44	; 0x2c
   2c9d0:	mov	r3, #1
   2c9d4:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   2c9d8:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   2c9dc:	mov	r2, r0
   2c9e0:	ldr	r3, [fp, #-8]
   2c9e4:	lsl	r3, r3, #2
   2c9e8:	sub	r1, fp, #4
   2c9ec:	add	r3, r1, r3
   2c9f0:	str	r2, [r3, #-2088]	; 0xfffff7d8
   2c9f4:	ldr	r3, [fp, #-8]
   2c9f8:	lsl	r3, r3, #2
   2c9fc:	sub	r2, fp, #4
   2ca00:	add	r3, r2, r3
   2ca04:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2ca08:	cmp	r3, #0
   2ca0c:	moveq	r3, #1
   2ca10:	movne	r3, #0
   2ca14:	uxtb	r3, r3
   2ca18:	cmp	r3, #0
   2ca1c:	beq	2ca3c <__assert_fail@plt+0x1b71c>
   2ca20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ca24:	cmp	r3, #0
   2ca28:	movne	r3, #1
   2ca2c:	moveq	r3, #0
   2ca30:	uxtb	r3, r3
   2ca34:	cmp	r3, #0
   2ca38:	bne	2c738 <__assert_fail@plt+0x1b418>
   2ca3c:	ldr	r3, [fp, #-8]
   2ca40:	lsl	r3, r3, #2
   2ca44:	sub	r2, fp, #4
   2ca48:	add	r3, r2, r3
   2ca4c:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   2ca50:	ldr	r3, [fp, #-8]
   2ca54:	lsl	r3, r3, #2
   2ca58:	sub	r1, fp, #4
   2ca5c:	add	r3, r1, r3
   2ca60:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2ca64:	cmp	r2, r3
   2ca68:	beq	2ca8c <__assert_fail@plt+0x1b76c>
   2ca6c:	sub	r3, fp, #12288	; 0x3000
   2ca70:	sub	r3, r3, #4
   2ca74:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2ca78:	ldr	r3, [r3, #92]	; 0x5c
   2ca7c:	cmp	r3, #1
   2ca80:	ble	2ca8c <__assert_fail@plt+0x1b76c>
   2ca84:	mov	r3, #1
   2ca88:	strb	r3, [fp, #-17]	; 0xffffffef
   2ca8c:	sub	r2, fp, #3120	; 0xc30
   2ca90:	sub	r2, r2, #4
   2ca94:	sub	r2, r2, #4
   2ca98:	sub	r3, fp, #12288	; 0x3000
   2ca9c:	sub	r3, r3, #4
   2caa0:	mov	r1, r3
   2caa4:	sub	r0, fp, #44	; 0x2c
   2caa8:	mov	r3, #2
   2caac:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   2cab0:	bl	1a5d4 <__assert_fail@plt+0x92b4>
   2cab4:	mov	r2, r0
   2cab8:	ldr	r3, [fp, #-8]
   2cabc:	lsl	r3, r3, #2
   2cac0:	sub	r1, fp, #4
   2cac4:	add	r3, r1, r3
   2cac8:	str	r2, [r3, #-3112]	; 0xfffff3d8
   2cacc:	ldr	r3, [fp, #-8]
   2cad0:	lsl	r3, r3, #2
   2cad4:	sub	r2, fp, #4
   2cad8:	add	r3, r2, r3
   2cadc:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   2cae0:	cmp	r3, #0
   2cae4:	moveq	r3, #1
   2cae8:	movne	r3, #0
   2caec:	uxtb	r3, r3
   2caf0:	cmp	r3, #0
   2caf4:	beq	2cb68 <__assert_fail@plt+0x1b848>
   2caf8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2cafc:	cmp	r3, #0
   2cb00:	movne	r3, #1
   2cb04:	moveq	r3, #0
   2cb08:	uxtb	r3, r3
   2cb0c:	cmp	r3, #0
   2cb10:	beq	2cb68 <__assert_fail@plt+0x1b848>
   2cb14:	b	2c74c <__assert_fail@plt+0x1b42c>
   2cb18:	ldr	r3, [fp, #-8]
   2cb1c:	lsl	r3, r3, #2
   2cb20:	sub	r2, fp, #4
   2cb24:	add	r3, r2, r3
   2cb28:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   2cb2c:	ldr	r3, [fp, #-8]
   2cb30:	lsl	r3, r3, #2
   2cb34:	sub	r1, fp, #4
   2cb38:	add	r3, r1, r3
   2cb3c:	str	r2, [r3, #-2088]	; 0xfffff7d8
   2cb40:	ldr	r3, [fp, #-8]
   2cb44:	lsl	r3, r3, #2
   2cb48:	sub	r2, fp, #4
   2cb4c:	add	r3, r2, r3
   2cb50:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   2cb54:	ldr	r3, [fp, #-8]
   2cb58:	lsl	r3, r3, #2
   2cb5c:	sub	r1, fp, #4
   2cb60:	add	r3, r1, r3
   2cb64:	str	r2, [r3, #-3112]	; 0xfffff3d8
   2cb68:	sub	r3, fp, #14400	; 0x3840
   2cb6c:	sub	r3, r3, #4
   2cb70:	sub	r3, r3, #20
   2cb74:	ldr	r2, [fp, #-8]
   2cb78:	lsl	r2, r2, #5
   2cb7c:	add	r2, r3, r2
   2cb80:	sub	r3, fp, #3152	; 0xc50
   2cb84:	sub	r3, r3, #4
   2cb88:	sub	r3, r3, #4
   2cb8c:	mov	r1, r2
   2cb90:	mov	r0, r3
   2cb94:	bl	15dfc <__assert_fail@plt+0x4adc>
   2cb98:	ldr	r3, [fp, #-8]
   2cb9c:	add	r3, r3, #1
   2cba0:	str	r3, [fp, #-8]
   2cba4:	ldr	r2, [fp, #-8]
   2cba8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cbac:	cmp	r2, r3
   2cbb0:	blt	2c7dc <__assert_fail@plt+0x1b4bc>
   2cbb4:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2cbb8:	cmp	r3, #0
   2cbbc:	bne	2cd78 <__assert_fail@plt+0x1ba58>
   2cbc0:	mov	r1, #256	; 0x100
   2cbc4:	mov	r0, #4
   2cbc8:	bl	30c58 <__assert_fail@plt+0x1f938>
   2cbcc:	mov	r3, r0
   2cbd0:	mov	r2, r3
   2cbd4:	sub	r3, fp, #12288	; 0x3000
   2cbd8:	sub	r3, r3, #4
   2cbdc:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2cbe0:	str	r2, [r3, #44]	; 0x2c
   2cbe4:	sub	r3, fp, #12288	; 0x3000
   2cbe8:	sub	r3, r3, #4
   2cbec:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2cbf0:	ldr	r3, [r3, #44]	; 0x2c
   2cbf4:	str	r3, [fp, #-32]	; 0xffffffe0
   2cbf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cbfc:	cmp	r3, #0
   2cc00:	moveq	r3, #1
   2cc04:	movne	r3, #0
   2cc08:	uxtb	r3, r3
   2cc0c:	cmp	r3, #0
   2cc10:	bne	2c740 <__assert_fail@plt+0x1b420>
   2cc14:	mov	r3, #0
   2cc18:	str	r3, [fp, #-8]
   2cc1c:	b	2cd68 <__assert_fail@plt+0x1ba48>
   2cc20:	ldr	r3, [fp, #-8]
   2cc24:	lsl	r3, r3, #5
   2cc28:	str	r3, [fp, #-16]
   2cc2c:	ldr	r3, [fp, #-8]
   2cc30:	lsl	r3, r3, #2
   2cc34:	sub	r2, fp, #4
   2cc38:	add	r3, r2, r3
   2cc3c:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   2cc40:	str	r3, [fp, #-24]	; 0xffffffe8
   2cc44:	mov	r3, #1
   2cc48:	str	r3, [fp, #-28]	; 0xffffffe4
   2cc4c:	b	2cd50 <__assert_fail@plt+0x1ba30>
   2cc50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cc54:	and	r3, r3, #1
   2cc58:	cmp	r3, #0
   2cc5c:	beq	2cd2c <__assert_fail@plt+0x1ba0c>
   2cc60:	mov	r3, #0
   2cc64:	str	r3, [fp, #-12]
   2cc68:	b	2cc78 <__assert_fail@plt+0x1b958>
   2cc6c:	ldr	r3, [fp, #-12]
   2cc70:	add	r3, r3, #1
   2cc74:	str	r3, [fp, #-12]
   2cc78:	sub	r3, fp, #12288	; 0x3000
   2cc7c:	sub	r3, r3, #4
   2cc80:	mov	r1, r3
   2cc84:	ldr	r3, [fp, #-12]
   2cc88:	lsl	r2, r3, #3
   2cc8c:	ldr	r3, [fp, #-8]
   2cc90:	add	r3, r2, r3
   2cc94:	lsl	r3, r3, #2
   2cc98:	add	r3, r1, r3
   2cc9c:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   2cca0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cca4:	and	r3, r3, r2
   2cca8:	cmp	r3, #0
   2ccac:	beq	2cc6c <__assert_fail@plt+0x1b94c>
   2ccb0:	sub	r3, fp, #12288	; 0x3000
   2ccb4:	sub	r3, r3, #4
   2ccb8:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2ccbc:	ldr	r2, [fp, #-8]
   2ccc0:	add	r2, r2, #24
   2ccc4:	ldr	r2, [r3, r2, lsl #2]
   2ccc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cccc:	and	r3, r3, r2
   2ccd0:	cmp	r3, #0
   2ccd4:	beq	2cd04 <__assert_fail@plt+0x1b9e4>
   2ccd8:	ldr	r3, [fp, #-16]
   2ccdc:	lsl	r3, r3, #2
   2cce0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2cce4:	add	r2, r2, r3
   2cce8:	ldr	r3, [fp, #-12]
   2ccec:	lsl	r3, r3, #2
   2ccf0:	sub	r1, fp, #4
   2ccf4:	add	r3, r1, r3
   2ccf8:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2ccfc:	str	r3, [r2]
   2cd00:	b	2cd2c <__assert_fail@plt+0x1ba0c>
   2cd04:	ldr	r3, [fp, #-16]
   2cd08:	lsl	r3, r3, #2
   2cd0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2cd10:	add	r2, r2, r3
   2cd14:	ldr	r3, [fp, #-12]
   2cd18:	lsl	r3, r3, #2
   2cd1c:	sub	r1, fp, #4
   2cd20:	add	r3, r1, r3
   2cd24:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2cd28:	str	r3, [r2]
   2cd2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cd30:	lsl	r3, r3, #1
   2cd34:	str	r3, [fp, #-28]	; 0xffffffe4
   2cd38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cd3c:	lsr	r3, r3, #1
   2cd40:	str	r3, [fp, #-24]	; 0xffffffe8
   2cd44:	ldr	r3, [fp, #-16]
   2cd48:	add	r3, r3, #1
   2cd4c:	str	r3, [fp, #-16]
   2cd50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cd54:	cmp	r3, #0
   2cd58:	bne	2cc50 <__assert_fail@plt+0x1b930>
   2cd5c:	ldr	r3, [fp, #-8]
   2cd60:	add	r3, r3, #1
   2cd64:	str	r3, [fp, #-8]
   2cd68:	ldr	r3, [fp, #-8]
   2cd6c:	cmp	r3, #7
   2cd70:	ble	2cc20 <__assert_fail@plt+0x1b900>
   2cd74:	b	2cf04 <__assert_fail@plt+0x1bbe4>
   2cd78:	mov	r1, #512	; 0x200
   2cd7c:	mov	r0, #4
   2cd80:	bl	30c58 <__assert_fail@plt+0x1f938>
   2cd84:	mov	r3, r0
   2cd88:	mov	r2, r3
   2cd8c:	sub	r3, fp, #12288	; 0x3000
   2cd90:	sub	r3, r3, #4
   2cd94:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2cd98:	str	r2, [r3, #48]	; 0x30
   2cd9c:	sub	r3, fp, #12288	; 0x3000
   2cda0:	sub	r3, r3, #4
   2cda4:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2cda8:	ldr	r3, [r3, #48]	; 0x30
   2cdac:	str	r3, [fp, #-32]	; 0xffffffe0
   2cdb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cdb4:	cmp	r3, #0
   2cdb8:	moveq	r3, #1
   2cdbc:	movne	r3, #0
   2cdc0:	uxtb	r3, r3
   2cdc4:	cmp	r3, #0
   2cdc8:	bne	2c748 <__assert_fail@plt+0x1b428>
   2cdcc:	mov	r3, #0
   2cdd0:	str	r3, [fp, #-8]
   2cdd4:	b	2cef8 <__assert_fail@plt+0x1bbd8>
   2cdd8:	ldr	r3, [fp, #-8]
   2cddc:	lsl	r3, r3, #5
   2cde0:	str	r3, [fp, #-16]
   2cde4:	ldr	r3, [fp, #-8]
   2cde8:	lsl	r3, r3, #2
   2cdec:	sub	r2, fp, #4
   2cdf0:	add	r3, r2, r3
   2cdf4:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   2cdf8:	str	r3, [fp, #-24]	; 0xffffffe8
   2cdfc:	mov	r3, #1
   2ce00:	str	r3, [fp, #-28]	; 0xffffffe4
   2ce04:	b	2cee0 <__assert_fail@plt+0x1bbc0>
   2ce08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ce0c:	and	r3, r3, #1
   2ce10:	cmp	r3, #0
   2ce14:	beq	2cebc <__assert_fail@plt+0x1bb9c>
   2ce18:	mov	r3, #0
   2ce1c:	str	r3, [fp, #-12]
   2ce20:	b	2ce30 <__assert_fail@plt+0x1bb10>
   2ce24:	ldr	r3, [fp, #-12]
   2ce28:	add	r3, r3, #1
   2ce2c:	str	r3, [fp, #-12]
   2ce30:	sub	r3, fp, #12288	; 0x3000
   2ce34:	sub	r3, r3, #4
   2ce38:	mov	r1, r3
   2ce3c:	ldr	r3, [fp, #-12]
   2ce40:	lsl	r2, r3, #3
   2ce44:	ldr	r3, [fp, #-8]
   2ce48:	add	r3, r2, r3
   2ce4c:	lsl	r3, r3, #2
   2ce50:	add	r3, r1, r3
   2ce54:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   2ce58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ce5c:	and	r3, r3, r2
   2ce60:	cmp	r3, #0
   2ce64:	beq	2ce24 <__assert_fail@plt+0x1bb04>
   2ce68:	ldr	r3, [fp, #-16]
   2ce6c:	lsl	r3, r3, #2
   2ce70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ce74:	add	r2, r2, r3
   2ce78:	ldr	r3, [fp, #-12]
   2ce7c:	lsl	r3, r3, #2
   2ce80:	sub	r1, fp, #4
   2ce84:	add	r3, r1, r3
   2ce88:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2ce8c:	str	r3, [r2]
   2ce90:	ldr	r3, [fp, #-16]
   2ce94:	add	r3, r3, #256	; 0x100
   2ce98:	lsl	r3, r3, #2
   2ce9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2cea0:	add	r2, r2, r3
   2cea4:	ldr	r3, [fp, #-12]
   2cea8:	lsl	r3, r3, #2
   2ceac:	sub	r1, fp, #4
   2ceb0:	add	r3, r1, r3
   2ceb4:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2ceb8:	str	r3, [r2]
   2cebc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cec0:	lsl	r3, r3, #1
   2cec4:	str	r3, [fp, #-28]	; 0xffffffe4
   2cec8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cecc:	lsr	r3, r3, #1
   2ced0:	str	r3, [fp, #-24]	; 0xffffffe8
   2ced4:	ldr	r3, [fp, #-16]
   2ced8:	add	r3, r3, #1
   2cedc:	str	r3, [fp, #-16]
   2cee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cee4:	cmp	r3, #0
   2cee8:	bne	2ce08 <__assert_fail@plt+0x1bae8>
   2ceec:	ldr	r3, [fp, #-8]
   2cef0:	add	r3, r3, #1
   2cef4:	str	r3, [fp, #-8]
   2cef8:	ldr	r3, [fp, #-8]
   2cefc:	cmp	r3, #7
   2cf00:	ble	2cdd8 <__assert_fail@plt+0x1bab8>
   2cf04:	sub	r3, fp, #3152	; 0xc50
   2cf08:	sub	r3, r3, #4
   2cf0c:	sub	r3, r3, #4
   2cf10:	mov	r1, #10
   2cf14:	mov	r0, r3
   2cf18:	bl	15c88 <__assert_fail@plt+0x4968>
   2cf1c:	mov	r3, r0
   2cf20:	cmp	r3, #0
   2cf24:	beq	2cfdc <__assert_fail@plt+0x1bcbc>
   2cf28:	mov	r3, #0
   2cf2c:	str	r3, [fp, #-12]
   2cf30:	b	2cfc4 <__assert_fail@plt+0x1bca4>
   2cf34:	sub	r3, fp, #14400	; 0x3840
   2cf38:	sub	r3, r3, #4
   2cf3c:	sub	r3, r3, #20
   2cf40:	ldr	r2, [fp, #-12]
   2cf44:	lsl	r2, r2, #5
   2cf48:	add	r3, r3, r2
   2cf4c:	mov	r1, #10
   2cf50:	mov	r0, r3
   2cf54:	bl	15c88 <__assert_fail@plt+0x4968>
   2cf58:	mov	r3, r0
   2cf5c:	cmp	r3, #0
   2cf60:	beq	2cfb8 <__assert_fail@plt+0x1bc98>
   2cf64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cf68:	add	r2, r3, #40	; 0x28
   2cf6c:	ldr	r3, [fp, #-12]
   2cf70:	lsl	r3, r3, #2
   2cf74:	sub	r1, fp, #4
   2cf78:	add	r3, r1, r3
   2cf7c:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   2cf80:	str	r3, [r2]
   2cf84:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2cf88:	cmp	r3, #0
   2cf8c:	beq	2cfd8 <__assert_fail@plt+0x1bcb8>
   2cf90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cf94:	add	r3, r3, #1056	; 0x420
   2cf98:	add	r3, r3, #8
   2cf9c:	ldr	r2, [fp, #-12]
   2cfa0:	lsl	r2, r2, #2
   2cfa4:	sub	r1, fp, #4
   2cfa8:	add	r2, r1, r2
   2cfac:	ldr	r2, [r2, #-3112]	; 0xfffff3d8
   2cfb0:	str	r2, [r3]
   2cfb4:	b	2cfd8 <__assert_fail@plt+0x1bcb8>
   2cfb8:	ldr	r3, [fp, #-12]
   2cfbc:	add	r3, r3, #1
   2cfc0:	str	r3, [fp, #-12]
   2cfc4:	ldr	r2, [fp, #-12]
   2cfc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cfcc:	cmp	r2, r3
   2cfd0:	blt	2cf34 <__assert_fail@plt+0x1bc14>
   2cfd4:	b	2cfdc <__assert_fail@plt+0x1bcbc>
   2cfd8:	nop			; (mov r0, r0)
   2cfdc:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   2cfe0:	mov	r0, r3
   2cfe4:	bl	31500 <__assert_fail@plt+0x201e0>
   2cfe8:	mov	r3, #0
   2cfec:	str	r3, [fp, #-8]
   2cff0:	b	2d034 <__assert_fail@plt+0x1bd14>
   2cff4:	ldr	r2, [fp, #-8]
   2cff8:	mov	r3, r2
   2cffc:	lsl	r3, r3, #1
   2d000:	add	r3, r3, r2
   2d004:	lsl	r3, r3, #2
   2d008:	mov	r2, r3
   2d00c:	sub	r3, fp, #6208	; 0x1840
   2d010:	sub	r3, r3, #4
   2d014:	sub	r3, r3, #20
   2d018:	add	r3, r3, r2
   2d01c:	ldr	r3, [r3, #8]
   2d020:	mov	r0, r3
   2d024:	bl	31500 <__assert_fail@plt+0x201e0>
   2d028:	ldr	r3, [fp, #-8]
   2d02c:	add	r3, r3, #1
   2d030:	str	r3, [fp, #-8]
   2d034:	ldr	r2, [fp, #-8]
   2d038:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d03c:	cmp	r2, r3
   2d040:	blt	2cff4 <__assert_fail@plt+0x1bcd4>
   2d044:	mov	r3, #1
   2d048:	mov	r0, r3
   2d04c:	sub	sp, fp, #4
   2d050:	pop	{fp, pc}
   2d054:	push	{fp, lr}
   2d058:	add	fp, sp, #4
   2d05c:	sub	sp, sp, #176	; 0xb0
   2d060:	str	r0, [fp, #-168]	; 0xffffff58
   2d064:	str	r1, [fp, #-172]	; 0xffffff54
   2d068:	str	r2, [fp, #-176]	; 0xffffff50
   2d06c:	str	r3, [fp, #-180]	; 0xffffff4c
   2d070:	ldr	r3, [fp, #-172]	; 0xffffff54
   2d074:	add	r3, r3, #4
   2d078:	str	r3, [fp, #-44]	; 0xffffffd4
   2d07c:	sub	r3, fp, #100	; 0x64
   2d080:	mov	r0, r3
   2d084:	bl	15d04 <__assert_fail@plt+0x49e4>
   2d088:	mov	r3, #0
   2d08c:	str	r3, [fp, #-20]	; 0xffffffec
   2d090:	mov	r3, #0
   2d094:	str	r3, [fp, #-8]
   2d098:	b	2d9f4 <__assert_fail@plt+0x1c6d4>
   2d09c:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d0a0:	ldr	r2, [r3]
   2d0a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d0a8:	ldr	r1, [r3, #8]
   2d0ac:	ldr	r3, [fp, #-8]
   2d0b0:	lsl	r3, r3, #2
   2d0b4:	add	r3, r1, r3
   2d0b8:	ldr	r3, [r3]
   2d0bc:	lsl	r3, r3, #3
   2d0c0:	add	r3, r2, r3
   2d0c4:	str	r3, [fp, #-48]	; 0xffffffd0
   2d0c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d0cc:	ldrb	r3, [r3, #4]
   2d0d0:	str	r3, [fp, #-52]	; 0xffffffcc
   2d0d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d0d8:	ldr	r3, [r3, #4]
   2d0dc:	lsr	r3, r3, #8
   2d0e0:	lsl	r3, r3, #22
   2d0e4:	lsr	r3, r3, #22
   2d0e8:	uxth	r3, r3
   2d0ec:	str	r3, [fp, #-56]	; 0xffffffc8
   2d0f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d0f4:	cmp	r3, #1
   2d0f8:	bne	2d11c <__assert_fail@plt+0x1bdfc>
   2d0fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d100:	ldrb	r3, [r3]
   2d104:	mov	r2, r3
   2d108:	sub	r3, fp, #100	; 0x64
   2d10c:	mov	r1, r2
   2d110:	mov	r0, r3
   2d114:	bl	15b64 <__assert_fail@plt+0x4844>
   2d118:	b	2d23c <__assert_fail@plt+0x1bf1c>
   2d11c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d120:	cmp	r3, #3
   2d124:	bne	2d144 <__assert_fail@plt+0x1be24>
   2d128:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d12c:	ldr	r2, [r3]
   2d130:	sub	r3, fp, #100	; 0x64
   2d134:	mov	r1, r2
   2d138:	mov	r0, r3
   2d13c:	bl	15dfc <__assert_fail@plt+0x4adc>
   2d140:	b	2d23c <__assert_fail@plt+0x1bf1c>
   2d144:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d148:	cmp	r3, #5
   2d14c:	bne	2d1d4 <__assert_fail@plt+0x1beb4>
   2d150:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d154:	ldr	r3, [r3, #92]	; 0x5c
   2d158:	cmp	r3, #1
   2d15c:	ble	2d17c <__assert_fail@plt+0x1be5c>
   2d160:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d164:	ldr	r2, [r3, #60]	; 0x3c
   2d168:	sub	r3, fp, #100	; 0x64
   2d16c:	mov	r1, r2
   2d170:	mov	r0, r3
   2d174:	bl	15dfc <__assert_fail@plt+0x4adc>
   2d178:	b	2d188 <__assert_fail@plt+0x1be68>
   2d17c:	sub	r3, fp, #100	; 0x64
   2d180:	mov	r0, r3
   2d184:	bl	15d30 <__assert_fail@plt+0x4a10>
   2d188:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d18c:	ldr	r3, [r3, #128]	; 0x80
   2d190:	and	r3, r3, #64	; 0x40
   2d194:	cmp	r3, #0
   2d198:	bne	2d1ac <__assert_fail@plt+0x1be8c>
   2d19c:	sub	r3, fp, #100	; 0x64
   2d1a0:	mov	r1, #10
   2d1a4:	mov	r0, r3
   2d1a8:	bl	15bf4 <__assert_fail@plt+0x48d4>
   2d1ac:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d1b0:	ldr	r3, [r3, #128]	; 0x80
   2d1b4:	and	r3, r3, #128	; 0x80
   2d1b8:	cmp	r3, #0
   2d1bc:	beq	2d23c <__assert_fail@plt+0x1bf1c>
   2d1c0:	sub	r3, fp, #100	; 0x64
   2d1c4:	mov	r1, #0
   2d1c8:	mov	r0, r3
   2d1cc:	bl	15bf4 <__assert_fail@plt+0x48d4>
   2d1d0:	b	2d23c <__assert_fail@plt+0x1bf1c>
   2d1d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d1d8:	cmp	r3, #7
   2d1dc:	bne	2d9cc <__assert_fail@plt+0x1c6ac>
   2d1e0:	sub	r3, fp, #100	; 0x64
   2d1e4:	mov	r2, #16
   2d1e8:	mvn	r1, #0
   2d1ec:	mov	r0, r3
   2d1f0:	bl	11248 <memset@plt>
   2d1f4:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d1f8:	ldr	r3, [r3, #128]	; 0x80
   2d1fc:	and	r3, r3, #64	; 0x40
   2d200:	cmp	r3, #0
   2d204:	bne	2d218 <__assert_fail@plt+0x1bef8>
   2d208:	sub	r3, fp, #100	; 0x64
   2d20c:	mov	r1, #10
   2d210:	mov	r0, r3
   2d214:	bl	15bf4 <__assert_fail@plt+0x48d4>
   2d218:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d21c:	ldr	r3, [r3, #128]	; 0x80
   2d220:	and	r3, r3, #128	; 0x80
   2d224:	cmp	r3, #0
   2d228:	beq	2d23c <__assert_fail@plt+0x1bf1c>
   2d22c:	sub	r3, fp, #100	; 0x64
   2d230:	mov	r1, #0
   2d234:	mov	r0, r3
   2d238:	bl	15bf4 <__assert_fail@plt+0x48d4>
   2d23c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d240:	cmp	r3, #0
   2d244:	beq	2d5d4 <__assert_fail@plt+0x1c2b4>
   2d248:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d24c:	and	r3, r3, #32
   2d250:	cmp	r3, #0
   2d254:	beq	2d298 <__assert_fail@plt+0x1bf78>
   2d258:	sub	r3, fp, #100	; 0x64
   2d25c:	mov	r1, #10
   2d260:	mov	r0, r3
   2d264:	bl	15c88 <__assert_fail@plt+0x4968>
   2d268:	mov	r3, r0
   2d26c:	strb	r3, [fp, #-57]	; 0xffffffc7
   2d270:	sub	r3, fp, #100	; 0x64
   2d274:	mov	r0, r3
   2d278:	bl	15d04 <__assert_fail@plt+0x49e4>
   2d27c:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   2d280:	cmp	r3, #0
   2d284:	beq	2d9d4 <__assert_fail@plt+0x1c6b4>
   2d288:	sub	r3, fp, #100	; 0x64
   2d28c:	mov	r1, #10
   2d290:	mov	r0, r3
   2d294:	bl	15b64 <__assert_fail@plt+0x4844>
   2d298:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d29c:	and	r3, r3, #128	; 0x80
   2d2a0:	cmp	r3, #0
   2d2a4:	beq	2d2b8 <__assert_fail@plt+0x1bf98>
   2d2a8:	sub	r3, fp, #100	; 0x64
   2d2ac:	mov	r0, r3
   2d2b0:	bl	15d04 <__assert_fail@plt+0x49e4>
   2d2b4:	b	2d9e8 <__assert_fail@plt+0x1c6c8>
   2d2b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d2bc:	and	r3, r3, #4
   2d2c0:	cmp	r3, #0
   2d2c4:	beq	2d444 <__assert_fail@plt+0x1c124>
   2d2c8:	mov	r3, #0
   2d2cc:	str	r3, [fp, #-24]	; 0xffffffe8
   2d2d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d2d4:	cmp	r3, #1
   2d2d8:	bne	2d304 <__assert_fail@plt+0x1bfe4>
   2d2dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d2e0:	ldrb	r3, [r3, #6]
   2d2e4:	and	r3, r3, #64	; 0x40
   2d2e8:	uxtb	r3, r3
   2d2ec:	cmp	r3, #0
   2d2f0:	bne	2d304 <__assert_fail@plt+0x1bfe4>
   2d2f4:	sub	r3, fp, #100	; 0x64
   2d2f8:	mov	r0, r3
   2d2fc:	bl	15d04 <__assert_fail@plt+0x49e4>
   2d300:	b	2d9e8 <__assert_fail@plt+0x1c6c8>
   2d304:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d308:	ldr	r3, [r3, #92]	; 0x5c
   2d30c:	cmp	r3, #1
   2d310:	ble	2d3b8 <__assert_fail@plt+0x1c098>
   2d314:	mov	r3, #0
   2d318:	str	r3, [fp, #-12]
   2d31c:	b	2d3a8 <__assert_fail@plt+0x1c088>
   2d320:	ldr	r3, [fp, #-12]
   2d324:	lsl	r3, r3, #2
   2d328:	sub	r2, fp, #4
   2d32c:	add	r3, r2, r3
   2d330:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2d334:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d338:	ldr	r1, [fp, #-12]
   2d33c:	add	r1, r1, #24
   2d340:	ldr	r1, [r3, r1, lsl #2]
   2d344:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d348:	ldr	r0, [r3, #60]	; 0x3c
   2d34c:	ldr	r3, [fp, #-12]
   2d350:	lsl	r3, r3, #2
   2d354:	add	r3, r0, r3
   2d358:	ldr	r3, [r3]
   2d35c:	mvn	r3, r3
   2d360:	orr	r3, r1, r3
   2d364:	and	r2, r2, r3
   2d368:	ldr	r3, [fp, #-12]
   2d36c:	lsl	r3, r3, #2
   2d370:	sub	r1, fp, #4
   2d374:	add	r3, r1, r3
   2d378:	str	r2, [r3, #-96]	; 0xffffffa0
   2d37c:	ldr	r3, [fp, #-12]
   2d380:	lsl	r3, r3, #2
   2d384:	sub	r2, fp, #4
   2d388:	add	r3, r2, r3
   2d38c:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2d390:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d394:	orr	r3, r2, r3
   2d398:	str	r3, [fp, #-24]	; 0xffffffe8
   2d39c:	ldr	r3, [fp, #-12]
   2d3a0:	add	r3, r3, #1
   2d3a4:	str	r3, [fp, #-12]
   2d3a8:	ldr	r3, [fp, #-12]
   2d3ac:	cmp	r3, #7
   2d3b0:	ble	2d320 <__assert_fail@plt+0x1c000>
   2d3b4:	b	2d438 <__assert_fail@plt+0x1c118>
   2d3b8:	mov	r3, #0
   2d3bc:	str	r3, [fp, #-12]
   2d3c0:	b	2d42c <__assert_fail@plt+0x1c10c>
   2d3c4:	ldr	r3, [fp, #-12]
   2d3c8:	lsl	r3, r3, #2
   2d3cc:	sub	r2, fp, #4
   2d3d0:	add	r3, r2, r3
   2d3d4:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2d3d8:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d3dc:	ldr	r1, [fp, #-12]
   2d3e0:	add	r1, r1, #24
   2d3e4:	ldr	r3, [r3, r1, lsl #2]
   2d3e8:	and	r2, r2, r3
   2d3ec:	ldr	r3, [fp, #-12]
   2d3f0:	lsl	r3, r3, #2
   2d3f4:	sub	r1, fp, #4
   2d3f8:	add	r3, r1, r3
   2d3fc:	str	r2, [r3, #-96]	; 0xffffffa0
   2d400:	ldr	r3, [fp, #-12]
   2d404:	lsl	r3, r3, #2
   2d408:	sub	r2, fp, #4
   2d40c:	add	r3, r2, r3
   2d410:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2d414:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d418:	orr	r3, r2, r3
   2d41c:	str	r3, [fp, #-24]	; 0xffffffe8
   2d420:	ldr	r3, [fp, #-12]
   2d424:	add	r3, r3, #1
   2d428:	str	r3, [fp, #-12]
   2d42c:	ldr	r3, [fp, #-12]
   2d430:	cmp	r3, #7
   2d434:	ble	2d3c4 <__assert_fail@plt+0x1c0a4>
   2d438:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d43c:	cmp	r3, #0
   2d440:	beq	2d9dc <__assert_fail@plt+0x1c6bc>
   2d444:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d448:	and	r3, r3, #8
   2d44c:	cmp	r3, #0
   2d450:	beq	2d5d4 <__assert_fail@plt+0x1c2b4>
   2d454:	mov	r3, #0
   2d458:	str	r3, [fp, #-28]	; 0xffffffe4
   2d45c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d460:	cmp	r3, #1
   2d464:	bne	2d490 <__assert_fail@plt+0x1c170>
   2d468:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d46c:	ldrb	r3, [r3, #6]
   2d470:	and	r3, r3, #64	; 0x40
   2d474:	uxtb	r3, r3
   2d478:	cmp	r3, #0
   2d47c:	beq	2d490 <__assert_fail@plt+0x1c170>
   2d480:	sub	r3, fp, #100	; 0x64
   2d484:	mov	r0, r3
   2d488:	bl	15d04 <__assert_fail@plt+0x49e4>
   2d48c:	b	2d9e8 <__assert_fail@plt+0x1c6c8>
   2d490:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d494:	ldr	r3, [r3, #92]	; 0x5c
   2d498:	cmp	r3, #1
   2d49c:	ble	2d544 <__assert_fail@plt+0x1c224>
   2d4a0:	mov	r3, #0
   2d4a4:	str	r3, [fp, #-12]
   2d4a8:	b	2d534 <__assert_fail@plt+0x1c214>
   2d4ac:	ldr	r3, [fp, #-12]
   2d4b0:	lsl	r3, r3, #2
   2d4b4:	sub	r2, fp, #4
   2d4b8:	add	r3, r2, r3
   2d4bc:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2d4c0:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d4c4:	ldr	r1, [fp, #-12]
   2d4c8:	add	r1, r1, #24
   2d4cc:	ldr	r1, [r3, r1, lsl #2]
   2d4d0:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d4d4:	ldr	r0, [r3, #60]	; 0x3c
   2d4d8:	ldr	r3, [fp, #-12]
   2d4dc:	lsl	r3, r3, #2
   2d4e0:	add	r3, r0, r3
   2d4e4:	ldr	r3, [r3]
   2d4e8:	and	r3, r3, r1
   2d4ec:	mvn	r3, r3
   2d4f0:	and	r2, r2, r3
   2d4f4:	ldr	r3, [fp, #-12]
   2d4f8:	lsl	r3, r3, #2
   2d4fc:	sub	r1, fp, #4
   2d500:	add	r3, r1, r3
   2d504:	str	r2, [r3, #-96]	; 0xffffffa0
   2d508:	ldr	r3, [fp, #-12]
   2d50c:	lsl	r3, r3, #2
   2d510:	sub	r2, fp, #4
   2d514:	add	r3, r2, r3
   2d518:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2d51c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d520:	orr	r3, r2, r3
   2d524:	str	r3, [fp, #-28]	; 0xffffffe4
   2d528:	ldr	r3, [fp, #-12]
   2d52c:	add	r3, r3, #1
   2d530:	str	r3, [fp, #-12]
   2d534:	ldr	r3, [fp, #-12]
   2d538:	cmp	r3, #7
   2d53c:	ble	2d4ac <__assert_fail@plt+0x1c18c>
   2d540:	b	2d5c8 <__assert_fail@plt+0x1c2a8>
   2d544:	mov	r3, #0
   2d548:	str	r3, [fp, #-12]
   2d54c:	b	2d5bc <__assert_fail@plt+0x1c29c>
   2d550:	ldr	r3, [fp, #-12]
   2d554:	lsl	r3, r3, #2
   2d558:	sub	r2, fp, #4
   2d55c:	add	r3, r2, r3
   2d560:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2d564:	ldr	r3, [fp, #-168]	; 0xffffff58
   2d568:	ldr	r1, [fp, #-12]
   2d56c:	add	r1, r1, #24
   2d570:	ldr	r3, [r3, r1, lsl #2]
   2d574:	mvn	r3, r3
   2d578:	and	r2, r2, r3
   2d57c:	ldr	r3, [fp, #-12]
   2d580:	lsl	r3, r3, #2
   2d584:	sub	r1, fp, #4
   2d588:	add	r3, r1, r3
   2d58c:	str	r2, [r3, #-96]	; 0xffffffa0
   2d590:	ldr	r3, [fp, #-12]
   2d594:	lsl	r3, r3, #2
   2d598:	sub	r2, fp, #4
   2d59c:	add	r3, r2, r3
   2d5a0:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2d5a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d5a8:	orr	r3, r2, r3
   2d5ac:	str	r3, [fp, #-28]	; 0xffffffe4
   2d5b0:	ldr	r3, [fp, #-12]
   2d5b4:	add	r3, r3, #1
   2d5b8:	str	r3, [fp, #-12]
   2d5bc:	ldr	r3, [fp, #-12]
   2d5c0:	cmp	r3, #7
   2d5c4:	ble	2d550 <__assert_fail@plt+0x1c230>
   2d5c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d5cc:	cmp	r3, #0
   2d5d0:	beq	2d9e4 <__assert_fail@plt+0x1c6c4>
   2d5d4:	mov	r3, #0
   2d5d8:	str	r3, [fp, #-12]
   2d5dc:	b	2d908 <__assert_fail@plt+0x1c5e8>
   2d5e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d5e4:	cmp	r3, #1
   2d5e8:	bne	2d624 <__assert_fail@plt+0x1c304>
   2d5ec:	ldr	r3, [fp, #-12]
   2d5f0:	lsl	r3, r3, #5
   2d5f4:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2d5f8:	add	r2, r2, r3
   2d5fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d600:	ldrb	r3, [r3]
   2d604:	mov	r1, r3
   2d608:	mov	r0, r2
   2d60c:	bl	15c88 <__assert_fail@plt+0x4968>
   2d610:	mov	r3, r0
   2d614:	eor	r3, r3, #1
   2d618:	uxtb	r3, r3
   2d61c:	cmp	r3, #0
   2d620:	bne	2d8f0 <__assert_fail@plt+0x1c5d0>
   2d624:	mov	r3, #0
   2d628:	str	r3, [fp, #-32]	; 0xffffffe0
   2d62c:	mov	r3, #0
   2d630:	str	r3, [fp, #-16]
   2d634:	b	2d6a8 <__assert_fail@plt+0x1c388>
   2d638:	ldr	r3, [fp, #-16]
   2d63c:	lsl	r3, r3, #2
   2d640:	sub	r2, fp, #4
   2d644:	add	r3, r2, r3
   2d648:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2d64c:	ldr	r3, [fp, #-12]
   2d650:	lsl	r3, r3, #5
   2d654:	ldr	r1, [fp, #-180]	; 0xffffff4c
   2d658:	add	r3, r1, r3
   2d65c:	ldr	r1, [fp, #-16]
   2d660:	ldr	r3, [r3, r1, lsl #2]
   2d664:	and	r2, r2, r3
   2d668:	ldr	r3, [fp, #-16]
   2d66c:	lsl	r3, r3, #2
   2d670:	sub	r1, fp, #4
   2d674:	add	r3, r1, r3
   2d678:	str	r2, [r3, #-160]	; 0xffffff60
   2d67c:	ldr	r3, [fp, #-16]
   2d680:	lsl	r3, r3, #2
   2d684:	sub	r2, fp, #4
   2d688:	add	r3, r2, r3
   2d68c:	ldr	r3, [r3, #-160]	; 0xffffff60
   2d690:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d694:	orr	r3, r2, r3
   2d698:	str	r3, [fp, #-32]	; 0xffffffe0
   2d69c:	ldr	r3, [fp, #-16]
   2d6a0:	add	r3, r3, #1
   2d6a4:	str	r3, [fp, #-16]
   2d6a8:	ldr	r3, [fp, #-16]
   2d6ac:	cmp	r3, #7
   2d6b0:	ble	2d638 <__assert_fail@plt+0x1c318>
   2d6b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d6b8:	cmp	r3, #0
   2d6bc:	beq	2d8f8 <__assert_fail@plt+0x1c5d8>
   2d6c0:	mov	r3, #0
   2d6c4:	str	r3, [fp, #-40]	; 0xffffffd8
   2d6c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d6cc:	str	r3, [fp, #-36]	; 0xffffffdc
   2d6d0:	mov	r3, #0
   2d6d4:	str	r3, [fp, #-16]
   2d6d8:	b	2d7b8 <__assert_fail@plt+0x1c498>
   2d6dc:	ldr	r3, [fp, #-16]
   2d6e0:	lsl	r3, r3, #2
   2d6e4:	sub	r2, fp, #4
   2d6e8:	add	r3, r2, r3
   2d6ec:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2d6f0:	mvn	r2, r3
   2d6f4:	ldr	r3, [fp, #-12]
   2d6f8:	lsl	r3, r3, #5
   2d6fc:	ldr	r1, [fp, #-180]	; 0xffffff4c
   2d700:	add	r3, r1, r3
   2d704:	ldr	r1, [fp, #-16]
   2d708:	ldr	r3, [r3, r1, lsl #2]
   2d70c:	and	r2, r2, r3
   2d710:	ldr	r3, [fp, #-16]
   2d714:	lsl	r3, r3, #2
   2d718:	sub	r1, fp, #4
   2d71c:	add	r3, r1, r3
   2d720:	str	r2, [r3, #-128]	; 0xffffff80
   2d724:	ldr	r3, [fp, #-16]
   2d728:	lsl	r3, r3, #2
   2d72c:	sub	r2, fp, #4
   2d730:	add	r3, r2, r3
   2d734:	ldr	r3, [r3, #-128]	; 0xffffff80
   2d738:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d73c:	orr	r3, r2, r3
   2d740:	str	r3, [fp, #-36]	; 0xffffffdc
   2d744:	ldr	r3, [fp, #-16]
   2d748:	lsl	r3, r3, #2
   2d74c:	sub	r2, fp, #4
   2d750:	add	r3, r2, r3
   2d754:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2d758:	ldr	r3, [fp, #-12]
   2d75c:	lsl	r3, r3, #5
   2d760:	ldr	r1, [fp, #-180]	; 0xffffff4c
   2d764:	add	r3, r1, r3
   2d768:	ldr	r1, [fp, #-16]
   2d76c:	ldr	r3, [r3, r1, lsl #2]
   2d770:	mvn	r3, r3
   2d774:	and	r2, r2, r3
   2d778:	ldr	r3, [fp, #-16]
   2d77c:	lsl	r3, r3, #2
   2d780:	sub	r1, fp, #4
   2d784:	add	r3, r1, r3
   2d788:	str	r2, [r3, #-96]	; 0xffffffa0
   2d78c:	ldr	r3, [fp, #-16]
   2d790:	lsl	r3, r3, #2
   2d794:	sub	r2, fp, #4
   2d798:	add	r3, r2, r3
   2d79c:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2d7a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d7a4:	orr	r3, r2, r3
   2d7a8:	str	r3, [fp, #-40]	; 0xffffffd8
   2d7ac:	ldr	r3, [fp, #-16]
   2d7b0:	add	r3, r3, #1
   2d7b4:	str	r3, [fp, #-16]
   2d7b8:	ldr	r3, [fp, #-16]
   2d7bc:	cmp	r3, #7
   2d7c0:	ble	2d6dc <__assert_fail@plt+0x1c3bc>
   2d7c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d7c8:	cmp	r3, #0
   2d7cc:	beq	2d884 <__assert_fail@plt+0x1c564>
   2d7d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d7d4:	lsl	r3, r3, #5
   2d7d8:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2d7dc:	add	r3, r2, r3
   2d7e0:	sub	r2, fp, #132	; 0x84
   2d7e4:	mov	r1, r2
   2d7e8:	mov	r0, r3
   2d7ec:	bl	15d5c <__assert_fail@plt+0x4a3c>
   2d7f0:	ldr	r3, [fp, #-12]
   2d7f4:	lsl	r3, r3, #5
   2d7f8:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2d7fc:	add	r3, r2, r3
   2d800:	sub	r2, fp, #164	; 0xa4
   2d804:	mov	r1, r2
   2d808:	mov	r0, r3
   2d80c:	bl	15d5c <__assert_fail@plt+0x4a3c>
   2d810:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d814:	mov	r3, r2
   2d818:	lsl	r3, r3, #1
   2d81c:	add	r3, r3, r2
   2d820:	lsl	r3, r3, #2
   2d824:	mov	r2, r3
   2d828:	ldr	r3, [fp, #-176]	; 0xffffff50
   2d82c:	add	r0, r3, r2
   2d830:	ldr	r2, [fp, #-12]
   2d834:	mov	r3, r2
   2d838:	lsl	r3, r3, #1
   2d83c:	add	r3, r3, r2
   2d840:	lsl	r3, r3, #2
   2d844:	mov	r2, r3
   2d848:	ldr	r3, [fp, #-176]	; 0xffffff50
   2d84c:	add	r3, r3, r2
   2d850:	mov	r1, r3
   2d854:	bl	18cd0 <__assert_fail@plt+0x79b0>
   2d858:	str	r0, [fp, #-64]	; 0xffffffc0
   2d85c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d860:	cmp	r3, #0
   2d864:	movne	r3, #1
   2d868:	moveq	r3, #0
   2d86c:	uxtb	r3, r3
   2d870:	cmp	r3, #0
   2d874:	bne	2da18 <__assert_fail@plt+0x1c6f8>
   2d878:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d87c:	add	r3, r3, #1
   2d880:	str	r3, [fp, #-20]	; 0xffffffec
   2d884:	ldr	r2, [fp, #-12]
   2d888:	mov	r3, r2
   2d88c:	lsl	r3, r3, #1
   2d890:	add	r3, r3, r2
   2d894:	lsl	r3, r3, #2
   2d898:	mov	r2, r3
   2d89c:	ldr	r3, [fp, #-176]	; 0xffffff50
   2d8a0:	add	r0, r3, r2
   2d8a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d8a8:	ldr	r2, [r3, #8]
   2d8ac:	ldr	r3, [fp, #-8]
   2d8b0:	lsl	r3, r3, #2
   2d8b4:	add	r3, r2, r3
   2d8b8:	ldr	r3, [r3]
   2d8bc:	mov	r1, r3
   2d8c0:	bl	19a2c <__assert_fail@plt+0x870c>
   2d8c4:	mov	r3, r0
   2d8c8:	strb	r3, [fp, #-65]	; 0xffffffbf
   2d8cc:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   2d8d0:	eor	r3, r3, #1
   2d8d4:	uxtb	r3, r3
   2d8d8:	cmp	r3, #0
   2d8dc:	bne	2da20 <__assert_fail@plt+0x1c700>
   2d8e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d8e4:	cmp	r3, #0
   2d8e8:	beq	2d91c <__assert_fail@plt+0x1c5fc>
   2d8ec:	b	2d8fc <__assert_fail@plt+0x1c5dc>
   2d8f0:	nop			; (mov r0, r0)
   2d8f4:	b	2d8fc <__assert_fail@plt+0x1c5dc>
   2d8f8:	nop			; (mov r0, r0)
   2d8fc:	ldr	r3, [fp, #-12]
   2d900:	add	r3, r3, #1
   2d904:	str	r3, [fp, #-12]
   2d908:	ldr	r2, [fp, #-12]
   2d90c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d910:	cmp	r2, r3
   2d914:	blt	2d5e0 <__assert_fail@plt+0x1c2c0>
   2d918:	b	2d920 <__assert_fail@plt+0x1c600>
   2d91c:	nop			; (mov r0, r0)
   2d920:	ldr	r2, [fp, #-12]
   2d924:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d928:	cmp	r2, r3
   2d92c:	bne	2d9e8 <__assert_fail@plt+0x1c6c8>
   2d930:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d934:	lsl	r3, r3, #5
   2d938:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2d93c:	add	r3, r2, r3
   2d940:	sub	r2, fp, #100	; 0x64
   2d944:	mov	r1, r2
   2d948:	mov	r0, r3
   2d94c:	bl	15d5c <__assert_fail@plt+0x4a3c>
   2d950:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d954:	mov	r3, r2
   2d958:	lsl	r3, r3, #1
   2d95c:	add	r3, r3, r2
   2d960:	lsl	r3, r3, #2
   2d964:	mov	r2, r3
   2d968:	ldr	r3, [fp, #-176]	; 0xffffff50
   2d96c:	add	r0, r3, r2
   2d970:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d974:	ldr	r2, [r3, #8]
   2d978:	ldr	r3, [fp, #-8]
   2d97c:	lsl	r3, r3, #2
   2d980:	add	r3, r2, r3
   2d984:	ldr	r3, [r3]
   2d988:	mov	r1, r3
   2d98c:	bl	18b1c <__assert_fail@plt+0x77fc>
   2d990:	str	r0, [fp, #-64]	; 0xffffffc0
   2d994:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d998:	cmp	r3, #0
   2d99c:	movne	r3, #1
   2d9a0:	moveq	r3, #0
   2d9a4:	uxtb	r3, r3
   2d9a8:	cmp	r3, #0
   2d9ac:	bne	2da28 <__assert_fail@plt+0x1c708>
   2d9b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d9b4:	add	r3, r3, #1
   2d9b8:	str	r3, [fp, #-20]	; 0xffffffec
   2d9bc:	sub	r3, fp, #100	; 0x64
   2d9c0:	mov	r0, r3
   2d9c4:	bl	15d04 <__assert_fail@plt+0x49e4>
   2d9c8:	b	2d9e8 <__assert_fail@plt+0x1c6c8>
   2d9cc:	nop			; (mov r0, r0)
   2d9d0:	b	2d9e8 <__assert_fail@plt+0x1c6c8>
   2d9d4:	nop			; (mov r0, r0)
   2d9d8:	b	2d9e8 <__assert_fail@plt+0x1c6c8>
   2d9dc:	nop			; (mov r0, r0)
   2d9e0:	b	2d9e8 <__assert_fail@plt+0x1c6c8>
   2d9e4:	nop			; (mov r0, r0)
   2d9e8:	ldr	r3, [fp, #-8]
   2d9ec:	add	r3, r3, #1
   2d9f0:	str	r3, [fp, #-8]
   2d9f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d9f8:	ldr	r2, [r3, #4]
   2d9fc:	ldr	r3, [fp, #-8]
   2da00:	cmp	r2, r3
   2da04:	bgt	2d09c <__assert_fail@plt+0x1bd7c>
   2da08:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da0c:	cmp	r3, #256	; 0x100
   2da10:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da14:	b	2da84 <__assert_fail@plt+0x1c764>
   2da18:	nop			; (mov r0, r0)
   2da1c:	b	2da2c <__assert_fail@plt+0x1c70c>
   2da20:	nop			; (mov r0, r0)
   2da24:	b	2da2c <__assert_fail@plt+0x1c70c>
   2da28:	nop			; (mov r0, r0)
   2da2c:	mov	r3, #0
   2da30:	str	r3, [fp, #-12]
   2da34:	b	2da70 <__assert_fail@plt+0x1c750>
   2da38:	ldr	r2, [fp, #-12]
   2da3c:	mov	r3, r2
   2da40:	lsl	r3, r3, #1
   2da44:	add	r3, r3, r2
   2da48:	lsl	r3, r3, #2
   2da4c:	mov	r2, r3
   2da50:	ldr	r3, [fp, #-176]	; 0xffffff50
   2da54:	add	r3, r3, r2
   2da58:	ldr	r3, [r3, #8]
   2da5c:	mov	r0, r3
   2da60:	bl	31500 <__assert_fail@plt+0x201e0>
   2da64:	ldr	r3, [fp, #-12]
   2da68:	add	r3, r3, #1
   2da6c:	str	r3, [fp, #-12]
   2da70:	ldr	r2, [fp, #-12]
   2da74:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da78:	cmp	r2, r3
   2da7c:	blt	2da38 <__assert_fail@plt+0x1c718>
   2da80:	mvn	r3, #0
   2da84:	mov	r0, r3
   2da88:	sub	sp, fp, #4
   2da8c:	pop	{fp, pc}
   2da90:	push	{fp, lr}
   2da94:	add	fp, sp, #4
   2da98:	sub	sp, sp, #56	; 0x38
   2da9c:	str	r0, [fp, #-48]	; 0xffffffd0
   2daa0:	str	r1, [fp, #-52]	; 0xffffffcc
   2daa4:	str	r2, [fp, #-56]	; 0xffffffc8
   2daa8:	str	r3, [fp, #-60]	; 0xffffffc4
   2daac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2dab0:	ldr	r2, [r3]
   2dab4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2dab8:	lsl	r3, r3, #3
   2dabc:	add	r3, r2, r3
   2dac0:	str	r3, [fp, #-20]	; 0xffffffec
   2dac4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dac8:	ldrb	r3, [r3, #4]
   2dacc:	cmp	r3, #7
   2dad0:	moveq	r3, #1
   2dad4:	movne	r3, #0
   2dad8:	uxtb	r3, r3
   2dadc:	cmp	r3, #0
   2dae0:	beq	2dcfc <__assert_fail@plt+0x1c9dc>
   2dae4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dae8:	ldr	r2, [r3, #4]
   2daec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2daf0:	add	r3, r2, r3
   2daf4:	ldrb	r3, [r3]
   2daf8:	strb	r3, [fp, #-21]	; 0xffffffeb
   2dafc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2db00:	cmp	r3, #193	; 0xc1
   2db04:	movls	r3, #1
   2db08:	movhi	r3, #0
   2db0c:	uxtb	r3, r3
   2db10:	cmp	r3, #0
   2db14:	beq	2db20 <__assert_fail@plt+0x1c800>
   2db18:	mov	r3, #0
   2db1c:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2db20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2db24:	add	r2, r3, #2
   2db28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2db2c:	ldr	r3, [r3, #48]	; 0x30
   2db30:	cmp	r2, r3
   2db34:	ble	2db40 <__assert_fail@plt+0x1c820>
   2db38:	mov	r3, #0
   2db3c:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2db40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2db44:	ldr	r2, [r3, #4]
   2db48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2db4c:	add	r3, r3, #1
   2db50:	add	r3, r2, r3
   2db54:	ldrb	r3, [r3]
   2db58:	strb	r3, [fp, #-22]	; 0xffffffea
   2db5c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2db60:	cmp	r3, #223	; 0xdf
   2db64:	bhi	2db90 <__assert_fail@plt+0x1c870>
   2db68:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   2db6c:	cmp	r3, #0
   2db70:	bge	2db80 <__assert_fail@plt+0x1c860>
   2db74:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2db78:	cmp	r3, #191	; 0xbf
   2db7c:	bls	2db88 <__assert_fail@plt+0x1c868>
   2db80:	mov	r3, #0
   2db84:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2db88:	mov	r3, #2
   2db8c:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2db90:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2db94:	cmp	r3, #239	; 0xef
   2db98:	bhi	2dbc4 <__assert_fail@plt+0x1c8a4>
   2db9c:	mov	r3, #3
   2dba0:	str	r3, [fp, #-8]
   2dba4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2dba8:	cmp	r3, #224	; 0xe0
   2dbac:	bne	2dc68 <__assert_fail@plt+0x1c948>
   2dbb0:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2dbb4:	cmp	r3, #159	; 0x9f
   2dbb8:	bhi	2dc68 <__assert_fail@plt+0x1c948>
   2dbbc:	mov	r3, #0
   2dbc0:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dbc4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2dbc8:	cmp	r3, #247	; 0xf7
   2dbcc:	bhi	2dbf8 <__assert_fail@plt+0x1c8d8>
   2dbd0:	mov	r3, #4
   2dbd4:	str	r3, [fp, #-8]
   2dbd8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2dbdc:	cmp	r3, #240	; 0xf0
   2dbe0:	bne	2dc68 <__assert_fail@plt+0x1c948>
   2dbe4:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2dbe8:	cmp	r3, #143	; 0x8f
   2dbec:	bhi	2dc68 <__assert_fail@plt+0x1c948>
   2dbf0:	mov	r3, #0
   2dbf4:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dbf8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2dbfc:	cmp	r3, #251	; 0xfb
   2dc00:	bhi	2dc2c <__assert_fail@plt+0x1c90c>
   2dc04:	mov	r3, #5
   2dc08:	str	r3, [fp, #-8]
   2dc0c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2dc10:	cmp	r3, #248	; 0xf8
   2dc14:	bne	2dc68 <__assert_fail@plt+0x1c948>
   2dc18:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2dc1c:	cmp	r3, #135	; 0x87
   2dc20:	bhi	2dc68 <__assert_fail@plt+0x1c948>
   2dc24:	mov	r3, #0
   2dc28:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dc2c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2dc30:	cmp	r3, #253	; 0xfd
   2dc34:	bhi	2dc60 <__assert_fail@plt+0x1c940>
   2dc38:	mov	r3, #6
   2dc3c:	str	r3, [fp, #-8]
   2dc40:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2dc44:	cmp	r3, #252	; 0xfc
   2dc48:	bne	2dc68 <__assert_fail@plt+0x1c948>
   2dc4c:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2dc50:	cmp	r3, #131	; 0x83
   2dc54:	bhi	2dc68 <__assert_fail@plt+0x1c948>
   2dc58:	mov	r3, #0
   2dc5c:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dc60:	mov	r3, #0
   2dc64:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dc68:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2dc6c:	ldr	r3, [fp, #-8]
   2dc70:	add	r2, r2, r3
   2dc74:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dc78:	ldr	r3, [r3, #48]	; 0x30
   2dc7c:	cmp	r2, r3
   2dc80:	ble	2dc8c <__assert_fail@plt+0x1c96c>
   2dc84:	mov	r3, #0
   2dc88:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dc8c:	mov	r3, #1
   2dc90:	str	r3, [fp, #-12]
   2dc94:	b	2dce4 <__assert_fail@plt+0x1c9c4>
   2dc98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dc9c:	ldr	r3, [r3, #4]
   2dca0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2dca4:	ldr	r2, [fp, #-12]
   2dca8:	add	r2, r1, r2
   2dcac:	add	r3, r3, r2
   2dcb0:	ldrb	r3, [r3]
   2dcb4:	strb	r3, [fp, #-22]	; 0xffffffea
   2dcb8:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   2dcbc:	cmp	r3, #0
   2dcc0:	bge	2dcd0 <__assert_fail@plt+0x1c9b0>
   2dcc4:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2dcc8:	cmp	r3, #191	; 0xbf
   2dccc:	bls	2dcd8 <__assert_fail@plt+0x1c9b8>
   2dcd0:	mov	r3, #0
   2dcd4:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dcd8:	ldr	r3, [fp, #-12]
   2dcdc:	add	r3, r3, #1
   2dce0:	str	r3, [fp, #-12]
   2dce4:	ldr	r2, [fp, #-12]
   2dce8:	ldr	r3, [fp, #-8]
   2dcec:	cmp	r2, r3
   2dcf0:	blt	2dc98 <__assert_fail@plt+0x1c978>
   2dcf4:	ldr	r3, [fp, #-8]
   2dcf8:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dcfc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2dd00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2dd04:	bl	15f0c <__assert_fail@plt+0x4bec>
   2dd08:	str	r0, [fp, #-8]
   2dd0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dd10:	ldrb	r3, [r3, #4]
   2dd14:	cmp	r3, #5
   2dd18:	bne	2dda0 <__assert_fail@plt+0x1ca80>
   2dd1c:	ldr	r3, [fp, #-8]
   2dd20:	cmp	r3, #1
   2dd24:	bgt	2dd30 <__assert_fail@plt+0x1ca10>
   2dd28:	mov	r3, #0
   2dd2c:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dd30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2dd34:	ldr	r3, [r3, #128]	; 0x80
   2dd38:	and	r3, r3, #64	; 0x40
   2dd3c:	cmp	r3, #0
   2dd40:	bne	2dd60 <__assert_fail@plt+0x1ca40>
   2dd44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dd48:	ldr	r2, [r3, #4]
   2dd4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dd50:	add	r3, r2, r3
   2dd54:	ldrb	r3, [r3]
   2dd58:	cmp	r3, #10
   2dd5c:	beq	2dd90 <__assert_fail@plt+0x1ca70>
   2dd60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2dd64:	ldr	r3, [r3, #128]	; 0x80
   2dd68:	and	r3, r3, #128	; 0x80
   2dd6c:	cmp	r3, #0
   2dd70:	beq	2dd98 <__assert_fail@plt+0x1ca78>
   2dd74:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dd78:	ldr	r2, [r3, #4]
   2dd7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2dd80:	add	r3, r2, r3
   2dd84:	ldrb	r3, [r3]
   2dd88:	cmp	r3, #0
   2dd8c:	bne	2dd98 <__assert_fail@plt+0x1ca78>
   2dd90:	mov	r3, #0
   2dd94:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dd98:	ldr	r3, [fp, #-8]
   2dd9c:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dda0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2dda4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2dda8:	bl	16014 <__assert_fail@plt+0x4cf4>
   2ddac:	str	r0, [fp, #-28]	; 0xffffffe4
   2ddb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ddb4:	cmp	r3, #1
   2ddb8:	bgt	2ddc8 <__assert_fail@plt+0x1caa8>
   2ddbc:	ldr	r3, [fp, #-8]
   2ddc0:	cmp	r3, #1
   2ddc4:	ble	2ddd4 <__assert_fail@plt+0x1cab4>
   2ddc8:	ldr	r3, [fp, #-8]
   2ddcc:	cmp	r3, #0
   2ddd0:	bne	2dddc <__assert_fail@plt+0x1cabc>
   2ddd4:	mov	r3, #0
   2ddd8:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dddc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dde0:	ldrb	r3, [r3, #4]
   2dde4:	cmp	r3, #6
   2dde8:	bne	2dfe0 <__assert_fail@plt+0x1ccc0>
   2ddec:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ddf0:	ldr	r3, [r3]
   2ddf4:	str	r3, [fp, #-32]	; 0xffffffe0
   2ddf8:	mov	r3, #0
   2ddfc:	str	r3, [fp, #-16]
   2de00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de04:	ldr	r3, [r3, #32]
   2de08:	cmp	r3, #0
   2de0c:	bne	2de30 <__assert_fail@plt+0x1cb10>
   2de10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de14:	ldr	r3, [r3, #36]	; 0x24
   2de18:	cmp	r3, #0
   2de1c:	bne	2de30 <__assert_fail@plt+0x1cb10>
   2de20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de24:	ldr	r3, [r3, #20]
   2de28:	cmp	r3, #0
   2de2c:	beq	2de44 <__assert_fail@plt+0x1cb24>
   2de30:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2de34:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2de38:	bl	15fb0 <__assert_fail@plt+0x4c90>
   2de3c:	mov	r3, r0
   2de40:	b	2de48 <__assert_fail@plt+0x1cb28>
   2de44:	mov	r3, #0
   2de48:	str	r3, [fp, #-36]	; 0xffffffdc
   2de4c:	mov	r3, #0
   2de50:	str	r3, [fp, #-12]
   2de54:	b	2de94 <__assert_fail@plt+0x1cb74>
   2de58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de5c:	ldr	r2, [r3]
   2de60:	ldr	r3, [fp, #-12]
   2de64:	lsl	r3, r3, #2
   2de68:	add	r3, r2, r3
   2de6c:	ldr	r2, [r3]
   2de70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2de74:	cmp	r2, r3
   2de78:	bne	2de88 <__assert_fail@plt+0x1cb68>
   2de7c:	ldr	r3, [fp, #-8]
   2de80:	str	r3, [fp, #-16]
   2de84:	b	2df94 <__assert_fail@plt+0x1cc74>
   2de88:	ldr	r3, [fp, #-12]
   2de8c:	add	r3, r3, #1
   2de90:	str	r3, [fp, #-12]
   2de94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de98:	ldr	r2, [r3, #20]
   2de9c:	ldr	r3, [fp, #-12]
   2dea0:	cmp	r2, r3
   2dea4:	bgt	2de58 <__assert_fail@plt+0x1cb38>
   2dea8:	mov	r3, #0
   2deac:	str	r3, [fp, #-12]
   2deb0:	b	2df00 <__assert_fail@plt+0x1cbe0>
   2deb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2deb8:	ldr	r2, [r3, #12]
   2debc:	ldr	r3, [fp, #-12]
   2dec0:	lsl	r3, r3, #2
   2dec4:	add	r3, r2, r3
   2dec8:	ldr	r3, [r3]
   2decc:	str	r3, [fp, #-40]	; 0xffffffd8
   2ded0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2ded4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ded8:	bl	1102c <iswctype@plt>
   2dedc:	mov	r3, r0
   2dee0:	cmp	r3, #0
   2dee4:	beq	2def4 <__assert_fail@plt+0x1cbd4>
   2dee8:	ldr	r3, [fp, #-8]
   2deec:	str	r3, [fp, #-16]
   2def0:	b	2df94 <__assert_fail@plt+0x1cc74>
   2def4:	ldr	r3, [fp, #-12]
   2def8:	add	r3, r3, #1
   2defc:	str	r3, [fp, #-12]
   2df00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df04:	ldr	r2, [r3, #36]	; 0x24
   2df08:	ldr	r3, [fp, #-12]
   2df0c:	cmp	r2, r3
   2df10:	bgt	2deb4 <__assert_fail@plt+0x1cb94>
   2df14:	mov	r3, #0
   2df18:	str	r3, [fp, #-12]
   2df1c:	b	2df80 <__assert_fail@plt+0x1cc60>
   2df20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df24:	ldr	r2, [r3, #4]
   2df28:	ldr	r3, [fp, #-12]
   2df2c:	lsl	r3, r3, #2
   2df30:	add	r3, r2, r3
   2df34:	ldr	r2, [r3]
   2df38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2df3c:	cmp	r2, r3
   2df40:	bhi	2df74 <__assert_fail@plt+0x1cc54>
   2df44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df48:	ldr	r2, [r3, #8]
   2df4c:	ldr	r3, [fp, #-12]
   2df50:	lsl	r3, r3, #2
   2df54:	add	r3, r2, r3
   2df58:	ldr	r2, [r3]
   2df5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2df60:	cmp	r2, r3
   2df64:	bcc	2df74 <__assert_fail@plt+0x1cc54>
   2df68:	ldr	r3, [fp, #-8]
   2df6c:	str	r3, [fp, #-16]
   2df70:	b	2df94 <__assert_fail@plt+0x1cc74>
   2df74:	ldr	r3, [fp, #-12]
   2df78:	add	r3, r3, #1
   2df7c:	str	r3, [fp, #-12]
   2df80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df84:	ldr	r2, [r3, #32]
   2df88:	ldr	r3, [fp, #-12]
   2df8c:	cmp	r2, r3
   2df90:	bgt	2df20 <__assert_fail@plt+0x1cc00>
   2df94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df98:	ldrb	r3, [r3, #16]
   2df9c:	and	r3, r3, #1
   2dfa0:	uxtb	r3, r3
   2dfa4:	cmp	r3, #0
   2dfa8:	bne	2dfb4 <__assert_fail@plt+0x1cc94>
   2dfac:	ldr	r3, [fp, #-16]
   2dfb0:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dfb4:	ldr	r3, [fp, #-16]
   2dfb8:	cmp	r3, #0
   2dfbc:	ble	2dfc8 <__assert_fail@plt+0x1cca8>
   2dfc0:	mov	r3, #0
   2dfc4:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dfc8:	ldr	r2, [fp, #-8]
   2dfcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2dfd0:	cmp	r2, r3
   2dfd4:	movge	r3, r2
   2dfd8:	movlt	r3, r3
   2dfdc:	b	2dfe4 <__assert_fail@plt+0x1ccc4>
   2dfe0:	mov	r3, #0
   2dfe4:	mov	r0, r3
   2dfe8:	sub	sp, fp, #4
   2dfec:	pop	{fp, pc}
   2dff0:	push	{fp, lr}
   2dff4:	add	fp, sp, #4
   2dff8:	sub	sp, sp, #24
   2dffc:	str	r0, [fp, #-16]
   2e000:	str	r1, [fp, #-20]	; 0xffffffec
   2e004:	str	r2, [fp, #-24]	; 0xffffffe8
   2e008:	ldr	r3, [fp, #-16]
   2e00c:	ldr	r2, [r3, #4]
   2e010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e014:	add	r3, r2, r3
   2e018:	ldrb	r3, [r3]
   2e01c:	strb	r3, [fp, #-5]
   2e020:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e024:	ldrb	r3, [r3, #4]
   2e028:	sub	r3, r3, #1
   2e02c:	cmp	r3, #6
   2e030:	ldrls	pc, [pc, r3, lsl #2]
   2e034:	b	2e108 <__assert_fail@plt+0x1cde8>
   2e038:	andeq	lr, r2, r4, asr r0
   2e03c:	andeq	lr, r2, r8, lsl #2
   2e040:	andeq	lr, r2, r0, ror r0
   2e044:	andeq	lr, r2, r8, lsl #2
   2e048:	strheq	lr, [r2], -r8
   2e04c:	andeq	lr, r2, r8, lsl #2
   2e050:	andeq	lr, r2, r4, lsr #1
   2e054:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e058:	ldrb	r3, [r3]
   2e05c:	ldrb	r2, [fp, #-5]
   2e060:	cmp	r2, r3
   2e064:	beq	2e110 <__assert_fail@plt+0x1cdf0>
   2e068:	mov	r3, #0
   2e06c:	b	2e234 <__assert_fail@plt+0x1cf14>
   2e070:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e074:	ldr	r3, [r3]
   2e078:	ldrb	r2, [fp, #-5]
   2e07c:	mov	r1, r2
   2e080:	mov	r0, r3
   2e084:	bl	15c88 <__assert_fail@plt+0x4968>
   2e088:	mov	r3, r0
   2e08c:	eor	r3, r3, #1
   2e090:	uxtb	r3, r3
   2e094:	cmp	r3, #0
   2e098:	beq	2e118 <__assert_fail@plt+0x1cdf8>
   2e09c:	mov	r3, #0
   2e0a0:	b	2e234 <__assert_fail@plt+0x1cf14>
   2e0a4:	ldrsb	r3, [fp, #-5]
   2e0a8:	cmp	r3, #0
   2e0ac:	bge	2e0b8 <__assert_fail@plt+0x1cd98>
   2e0b0:	mov	r3, #0
   2e0b4:	b	2e234 <__assert_fail@plt+0x1cf14>
   2e0b8:	ldrb	r3, [fp, #-5]
   2e0bc:	cmp	r3, #10
   2e0c0:	bne	2e0dc <__assert_fail@plt+0x1cdbc>
   2e0c4:	ldr	r3, [fp, #-16]
   2e0c8:	ldr	r3, [r3, #84]	; 0x54
   2e0cc:	ldr	r3, [r3, #128]	; 0x80
   2e0d0:	and	r3, r3, #64	; 0x40
   2e0d4:	cmp	r3, #0
   2e0d8:	beq	2e100 <__assert_fail@plt+0x1cde0>
   2e0dc:	ldrb	r3, [fp, #-5]
   2e0e0:	cmp	r3, #0
   2e0e4:	bne	2e120 <__assert_fail@plt+0x1ce00>
   2e0e8:	ldr	r3, [fp, #-16]
   2e0ec:	ldr	r3, [r3, #84]	; 0x54
   2e0f0:	ldr	r3, [r3, #128]	; 0x80
   2e0f4:	and	r3, r3, #128	; 0x80
   2e0f8:	cmp	r3, #0
   2e0fc:	beq	2e120 <__assert_fail@plt+0x1ce00>
   2e100:	mov	r3, #0
   2e104:	b	2e234 <__assert_fail@plt+0x1cf14>
   2e108:	mov	r3, #0
   2e10c:	b	2e234 <__assert_fail@plt+0x1cf14>
   2e110:	nop			; (mov r0, r0)
   2e114:	b	2e124 <__assert_fail@plt+0x1ce04>
   2e118:	nop			; (mov r0, r0)
   2e11c:	b	2e124 <__assert_fail@plt+0x1ce04>
   2e120:	nop			; (mov r0, r0)
   2e124:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e128:	ldr	r2, [r3, #4]
   2e12c:	ldr	r3, [pc, #268]	; 2e240 <__assert_fail@plt+0x1cf20>
   2e130:	and	r3, r3, r2
   2e134:	cmp	r3, #0
   2e138:	beq	2e230 <__assert_fail@plt+0x1cf10>
   2e13c:	ldr	r0, [fp, #-16]
   2e140:	ldr	r3, [fp, #-16]
   2e144:	ldr	r3, [r3, #88]	; 0x58
   2e148:	mov	r2, r3
   2e14c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e150:	bl	188b0 <__assert_fail@plt+0x7590>
   2e154:	str	r0, [fp, #-12]
   2e158:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e15c:	ldr	r3, [r3, #4]
   2e160:	lsr	r3, r3, #8
   2e164:	lsl	r3, r3, #22
   2e168:	lsr	r3, r3, #22
   2e16c:	uxth	r3, r3
   2e170:	and	r3, r3, #4
   2e174:	cmp	r3, #0
   2e178:	beq	2e18c <__assert_fail@plt+0x1ce6c>
   2e17c:	ldr	r3, [fp, #-12]
   2e180:	and	r3, r3, #1
   2e184:	cmp	r3, #0
   2e188:	beq	2e228 <__assert_fail@plt+0x1cf08>
   2e18c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e190:	ldr	r3, [r3, #4]
   2e194:	lsr	r3, r3, #8
   2e198:	lsl	r3, r3, #22
   2e19c:	lsr	r3, r3, #22
   2e1a0:	uxth	r3, r3
   2e1a4:	and	r3, r3, #8
   2e1a8:	cmp	r3, #0
   2e1ac:	beq	2e1c0 <__assert_fail@plt+0x1cea0>
   2e1b0:	ldr	r3, [fp, #-12]
   2e1b4:	and	r3, r3, #1
   2e1b8:	cmp	r3, #0
   2e1bc:	bne	2e228 <__assert_fail@plt+0x1cf08>
   2e1c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e1c4:	ldr	r3, [r3, #4]
   2e1c8:	lsr	r3, r3, #8
   2e1cc:	lsl	r3, r3, #22
   2e1d0:	lsr	r3, r3, #22
   2e1d4:	uxth	r3, r3
   2e1d8:	and	r3, r3, #32
   2e1dc:	cmp	r3, #0
   2e1e0:	beq	2e1f4 <__assert_fail@plt+0x1ced4>
   2e1e4:	ldr	r3, [fp, #-12]
   2e1e8:	and	r3, r3, #2
   2e1ec:	cmp	r3, #0
   2e1f0:	beq	2e228 <__assert_fail@plt+0x1cf08>
   2e1f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e1f8:	ldr	r3, [r3, #4]
   2e1fc:	lsr	r3, r3, #8
   2e200:	lsl	r3, r3, #22
   2e204:	lsr	r3, r3, #22
   2e208:	uxth	r3, r3
   2e20c:	and	r3, r3, #128	; 0x80
   2e210:	cmp	r3, #0
   2e214:	beq	2e230 <__assert_fail@plt+0x1cf10>
   2e218:	ldr	r3, [fp, #-12]
   2e21c:	and	r3, r3, #8
   2e220:	cmp	r3, #0
   2e224:	bne	2e230 <__assert_fail@plt+0x1cf10>
   2e228:	mov	r3, #0
   2e22c:	b	2e234 <__assert_fail@plt+0x1cf14>
   2e230:	mov	r3, #1
   2e234:	mov	r0, r3
   2e238:	sub	sp, fp, #4
   2e23c:	pop	{fp, pc}
   2e240:	andeq	pc, r3, r0, lsl #30
   2e244:	push	{fp, lr}
   2e248:	add	fp, sp, #4
   2e24c:	sub	sp, sp, #24
   2e250:	str	r0, [fp, #-24]	; 0xffffffe8
   2e254:	str	r1, [fp, #-28]	; 0xffffffe4
   2e258:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e25c:	str	r3, [fp, #-8]
   2e260:	ldr	r3, [fp, #-8]
   2e264:	ldr	r3, [r3, #36]	; 0x24
   2e268:	cmn	r3, #-536870910	; 0xe0000002
   2e26c:	movhi	r3, #1
   2e270:	movls	r3, #0
   2e274:	uxtb	r3, r3
   2e278:	cmp	r3, #0
   2e27c:	beq	2e288 <__assert_fail@plt+0x1cf68>
   2e280:	mov	r3, #12
   2e284:	b	2e3e8 <__assert_fail@plt+0x1d0c8>
   2e288:	ldr	r3, [fp, #-8]
   2e28c:	ldr	r3, [r3, #36]	; 0x24
   2e290:	lsl	r2, r3, #1
   2e294:	ldr	r3, [fp, #-8]
   2e298:	ldr	r3, [r3, #48]	; 0x30
   2e29c:	cmp	r2, r3
   2e2a0:	movlt	r2, r2
   2e2a4:	movge	r2, r3
   2e2a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e2ac:	cmp	r2, r3
   2e2b0:	movge	r3, r2
   2e2b4:	movlt	r3, r3
   2e2b8:	mov	r1, r3
   2e2bc:	ldr	r0, [fp, #-8]
   2e2c0:	bl	1639c <__assert_fail@plt+0x507c>
   2e2c4:	str	r0, [fp, #-12]
   2e2c8:	ldr	r3, [fp, #-12]
   2e2cc:	cmp	r3, #0
   2e2d0:	movne	r3, #1
   2e2d4:	moveq	r3, #0
   2e2d8:	uxtb	r3, r3
   2e2dc:	cmp	r3, #0
   2e2e0:	beq	2e2ec <__assert_fail@plt+0x1cfcc>
   2e2e4:	ldr	r3, [fp, #-12]
   2e2e8:	b	2e3e8 <__assert_fail@plt+0x1d0c8>
   2e2ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e2f0:	ldr	r3, [r3, #100]	; 0x64
   2e2f4:	cmp	r3, #0
   2e2f8:	beq	2e354 <__assert_fail@plt+0x1d034>
   2e2fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e300:	ldr	r2, [r3, #100]	; 0x64
   2e304:	ldr	r3, [fp, #-8]
   2e308:	ldr	r3, [r3, #36]	; 0x24
   2e30c:	add	r3, r3, #1
   2e310:	lsl	r3, r3, #2
   2e314:	mov	r1, r3
   2e318:	mov	r0, r2
   2e31c:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   2e320:	str	r0, [fp, #-16]
   2e324:	ldr	r3, [fp, #-16]
   2e328:	cmp	r3, #0
   2e32c:	moveq	r3, #1
   2e330:	movne	r3, #0
   2e334:	uxtb	r3, r3
   2e338:	cmp	r3, #0
   2e33c:	beq	2e348 <__assert_fail@plt+0x1d028>
   2e340:	mov	r3, #12
   2e344:	b	2e3e8 <__assert_fail@plt+0x1d0c8>
   2e348:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e34c:	ldr	r2, [fp, #-16]
   2e350:	str	r2, [r3, #100]	; 0x64
   2e354:	ldr	r3, [fp, #-8]
   2e358:	ldrb	r3, [r3, #72]	; 0x48
   2e35c:	cmp	r3, #0
   2e360:	beq	2e3b0 <__assert_fail@plt+0x1d090>
   2e364:	ldr	r3, [fp, #-8]
   2e368:	ldr	r3, [r3, #80]	; 0x50
   2e36c:	cmp	r3, #1
   2e370:	ble	2e3a4 <__assert_fail@plt+0x1d084>
   2e374:	ldr	r0, [fp, #-8]
   2e378:	bl	169c8 <__assert_fail@plt+0x56a8>
   2e37c:	str	r0, [fp, #-12]
   2e380:	ldr	r3, [fp, #-12]
   2e384:	cmp	r3, #0
   2e388:	movne	r3, #1
   2e38c:	moveq	r3, #0
   2e390:	uxtb	r3, r3
   2e394:	cmp	r3, #0
   2e398:	beq	2e3e4 <__assert_fail@plt+0x1d0c4>
   2e39c:	ldr	r3, [fp, #-12]
   2e3a0:	b	2e3e8 <__assert_fail@plt+0x1d0c8>
   2e3a4:	ldr	r0, [fp, #-8]
   2e3a8:	bl	17694 <__assert_fail@plt+0x6374>
   2e3ac:	b	2e3e4 <__assert_fail@plt+0x1d0c4>
   2e3b0:	ldr	r3, [fp, #-8]
   2e3b4:	ldr	r3, [r3, #80]	; 0x50
   2e3b8:	cmp	r3, #1
   2e3bc:	ble	2e3cc <__assert_fail@plt+0x1d0ac>
   2e3c0:	ldr	r0, [fp, #-8]
   2e3c4:	bl	16650 <__assert_fail@plt+0x5330>
   2e3c8:	b	2e3e4 <__assert_fail@plt+0x1d0c4>
   2e3cc:	ldr	r3, [fp, #-8]
   2e3d0:	ldr	r3, [r3, #64]	; 0x40
   2e3d4:	cmp	r3, #0
   2e3d8:	beq	2e3e4 <__assert_fail@plt+0x1d0c4>
   2e3dc:	ldr	r0, [fp, #-8]
   2e3e0:	bl	17794 <__assert_fail@plt+0x6474>
   2e3e4:	mov	r3, #0
   2e3e8:	mov	r0, r3
   2e3ec:	sub	sp, fp, #4
   2e3f0:	pop	{fp, pc}
   2e3f4:	push	{fp, lr}
   2e3f8:	add	fp, sp, #4
   2e3fc:	sub	sp, sp, #24
   2e400:	str	r0, [fp, #-16]
   2e404:	str	r1, [fp, #-20]	; 0xffffffec
   2e408:	str	r2, [fp, #-24]	; 0xffffffe8
   2e40c:	ldr	r3, [fp, #-16]
   2e410:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e414:	str	r2, [r3, #88]	; 0x58
   2e418:	ldr	r3, [fp, #-16]
   2e41c:	mvn	r2, #0
   2e420:	str	r2, [r3, #92]	; 0x5c
   2e424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e428:	cmp	r3, #0
   2e42c:	ble	2e524 <__assert_fail@plt+0x1d204>
   2e430:	mov	r3, #24
   2e434:	str	r3, [fp, #-8]
   2e438:	ldr	r1, [fp, #-8]
   2e43c:	mvn	r0, #0
   2e440:	bl	31f78 <__assert_fail@plt+0x20c58>
   2e444:	mov	r3, r0
   2e448:	cmp	r3, #0
   2e44c:	blt	2e468 <__assert_fail@plt+0x1d148>
   2e450:	ldr	r1, [fp, #-8]
   2e454:	mvn	r0, #0
   2e458:	bl	31f78 <__assert_fail@plt+0x20c58>
   2e45c:	mov	r3, r0
   2e460:	mov	r2, r3
   2e464:	b	2e46c <__assert_fail@plt+0x1d14c>
   2e468:	mvn	r2, #-2147483648	; 0x80000000
   2e46c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e470:	cmp	r2, r3
   2e474:	movcc	r3, #1
   2e478:	movcs	r3, #0
   2e47c:	uxtb	r3, r3
   2e480:	cmp	r3, #0
   2e484:	beq	2e490 <__assert_fail@plt+0x1d170>
   2e488:	mov	r3, #12
   2e48c:	b	2e54c <__assert_fail@plt+0x1d22c>
   2e490:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e494:	mov	r3, r2
   2e498:	lsl	r3, r3, #1
   2e49c:	add	r3, r3, r2
   2e4a0:	lsl	r3, r3, #3
   2e4a4:	mov	r0, r3
   2e4a8:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   2e4ac:	mov	r3, r0
   2e4b0:	mov	r2, r3
   2e4b4:	ldr	r3, [fp, #-16]
   2e4b8:	str	r2, [r3, #116]	; 0x74
   2e4bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e4c0:	lsl	r3, r3, #2
   2e4c4:	mov	r0, r3
   2e4c8:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   2e4cc:	mov	r3, r0
   2e4d0:	mov	r2, r3
   2e4d4:	ldr	r3, [fp, #-16]
   2e4d8:	str	r2, [r3, #132]	; 0x84
   2e4dc:	ldr	r3, [fp, #-16]
   2e4e0:	ldr	r3, [r3, #116]	; 0x74
   2e4e4:	cmp	r3, #0
   2e4e8:	moveq	r3, #1
   2e4ec:	movne	r3, #0
   2e4f0:	uxtb	r3, r3
   2e4f4:	cmp	r3, #0
   2e4f8:	bne	2e51c <__assert_fail@plt+0x1d1fc>
   2e4fc:	ldr	r3, [fp, #-16]
   2e500:	ldr	r3, [r3, #132]	; 0x84
   2e504:	cmp	r3, #0
   2e508:	moveq	r3, #1
   2e50c:	movne	r3, #0
   2e510:	uxtb	r3, r3
   2e514:	cmp	r3, #0
   2e518:	beq	2e524 <__assert_fail@plt+0x1d204>
   2e51c:	mov	r3, #12
   2e520:	b	2e54c <__assert_fail@plt+0x1d22c>
   2e524:	ldr	r3, [fp, #-16]
   2e528:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e52c:	str	r2, [r3, #112]	; 0x70
   2e530:	ldr	r3, [fp, #-16]
   2e534:	mov	r2, #1
   2e538:	str	r2, [r3, #120]	; 0x78
   2e53c:	ldr	r3, [fp, #-16]
   2e540:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e544:	str	r2, [r3, #128]	; 0x80
   2e548:	mov	r3, #0
   2e54c:	mov	r0, r3
   2e550:	sub	sp, fp, #4
   2e554:	pop	{fp, pc}
   2e558:	push	{fp, lr}
   2e55c:	add	fp, sp, #4
   2e560:	sub	sp, sp, #24
   2e564:	str	r0, [fp, #-24]	; 0xffffffe8
   2e568:	mov	r3, #0
   2e56c:	str	r3, [fp, #-8]
   2e570:	b	2e648 <__assert_fail@plt+0x1d328>
   2e574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e578:	ldr	r2, [r3, #132]	; 0x84
   2e57c:	ldr	r3, [fp, #-8]
   2e580:	lsl	r3, r3, #2
   2e584:	add	r3, r2, r3
   2e588:	ldr	r3, [r3]
   2e58c:	str	r3, [fp, #-16]
   2e590:	mov	r3, #0
   2e594:	str	r3, [fp, #-12]
   2e598:	b	2e5dc <__assert_fail@plt+0x1d2bc>
   2e59c:	ldr	r3, [fp, #-16]
   2e5a0:	ldr	r2, [r3, #20]
   2e5a4:	ldr	r3, [fp, #-12]
   2e5a8:	lsl	r3, r3, #2
   2e5ac:	add	r3, r2, r3
   2e5b0:	ldr	r3, [r3]
   2e5b4:	str	r3, [fp, #-20]	; 0xffffffec
   2e5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e5bc:	ldr	r3, [r3, #16]
   2e5c0:	mov	r0, r3
   2e5c4:	bl	31500 <__assert_fail@plt+0x201e0>
   2e5c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e5cc:	bl	31500 <__assert_fail@plt+0x201e0>
   2e5d0:	ldr	r3, [fp, #-12]
   2e5d4:	add	r3, r3, #1
   2e5d8:	str	r3, [fp, #-12]
   2e5dc:	ldr	r3, [fp, #-16]
   2e5e0:	ldr	r2, [r3, #16]
   2e5e4:	ldr	r3, [fp, #-12]
   2e5e8:	cmp	r2, r3
   2e5ec:	bgt	2e59c <__assert_fail@plt+0x1d27c>
   2e5f0:	ldr	r3, [fp, #-16]
   2e5f4:	ldr	r3, [r3, #20]
   2e5f8:	mov	r0, r3
   2e5fc:	bl	31500 <__assert_fail@plt+0x201e0>
   2e600:	ldr	r3, [fp, #-16]
   2e604:	ldr	r3, [r3, #8]
   2e608:	cmp	r3, #0
   2e60c:	beq	2e634 <__assert_fail@plt+0x1d314>
   2e610:	ldr	r3, [fp, #-16]
   2e614:	ldr	r3, [r3, #8]
   2e618:	ldr	r3, [r3, #8]
   2e61c:	mov	r0, r3
   2e620:	bl	31500 <__assert_fail@plt+0x201e0>
   2e624:	ldr	r3, [fp, #-16]
   2e628:	ldr	r3, [r3, #8]
   2e62c:	mov	r0, r3
   2e630:	bl	31500 <__assert_fail@plt+0x201e0>
   2e634:	ldr	r0, [fp, #-16]
   2e638:	bl	31500 <__assert_fail@plt+0x201e0>
   2e63c:	ldr	r3, [fp, #-8]
   2e640:	add	r3, r3, #1
   2e644:	str	r3, [fp, #-8]
   2e648:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e64c:	ldr	r2, [r3, #124]	; 0x7c
   2e650:	ldr	r3, [fp, #-8]
   2e654:	cmp	r2, r3
   2e658:	bgt	2e574 <__assert_fail@plt+0x1d254>
   2e65c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e660:	mov	r2, #0
   2e664:	str	r2, [r3, #124]	; 0x7c
   2e668:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e66c:	mov	r2, #0
   2e670:	str	r2, [r3, #108]	; 0x6c
   2e674:	nop			; (mov r0, r0)
   2e678:	sub	sp, fp, #4
   2e67c:	pop	{fp, pc}
   2e680:	push	{fp, lr}
   2e684:	add	fp, sp, #4
   2e688:	sub	sp, sp, #8
   2e68c:	str	r0, [fp, #-8]
   2e690:	ldr	r0, [fp, #-8]
   2e694:	bl	2e558 <__assert_fail@plt+0x1d238>
   2e698:	ldr	r3, [fp, #-8]
   2e69c:	ldr	r3, [r3, #132]	; 0x84
   2e6a0:	mov	r0, r3
   2e6a4:	bl	31500 <__assert_fail@plt+0x201e0>
   2e6a8:	ldr	r3, [fp, #-8]
   2e6ac:	ldr	r3, [r3, #116]	; 0x74
   2e6b0:	mov	r0, r3
   2e6b4:	bl	31500 <__assert_fail@plt+0x201e0>
   2e6b8:	nop			; (mov r0, r0)
   2e6bc:	sub	sp, fp, #4
   2e6c0:	pop	{fp, pc}
   2e6c4:	push	{fp, lr}
   2e6c8:	add	fp, sp, #4
   2e6cc:	sub	sp, sp, #24
   2e6d0:	str	r0, [fp, #-16]
   2e6d4:	str	r1, [fp, #-20]	; 0xffffffec
   2e6d8:	str	r2, [fp, #-24]	; 0xffffffe8
   2e6dc:	str	r3, [fp, #-28]	; 0xffffffe4
   2e6e0:	ldr	r3, [fp, #-16]
   2e6e4:	ldr	r2, [r3, #108]	; 0x6c
   2e6e8:	ldr	r3, [fp, #-16]
   2e6ec:	ldr	r3, [r3, #112]	; 0x70
   2e6f0:	cmp	r2, r3
   2e6f4:	blt	2e7c8 <__assert_fail@plt+0x1d4a8>
   2e6f8:	ldr	r3, [fp, #-16]
   2e6fc:	ldr	r0, [r3, #116]	; 0x74
   2e700:	ldr	r3, [fp, #-16]
   2e704:	ldr	r2, [r3, #112]	; 0x70
   2e708:	mov	r3, r2
   2e70c:	lsl	r3, r3, #1
   2e710:	add	r3, r3, r2
   2e714:	lsl	r3, r3, #4
   2e718:	mov	r1, r3
   2e71c:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   2e720:	str	r0, [fp, #-8]
   2e724:	ldr	r3, [fp, #-8]
   2e728:	cmp	r3, #0
   2e72c:	moveq	r3, #1
   2e730:	movne	r3, #0
   2e734:	uxtb	r3, r3
   2e738:	cmp	r3, #0
   2e73c:	beq	2e758 <__assert_fail@plt+0x1d438>
   2e740:	ldr	r3, [fp, #-16]
   2e744:	ldr	r3, [r3, #116]	; 0x74
   2e748:	mov	r0, r3
   2e74c:	bl	31500 <__assert_fail@plt+0x201e0>
   2e750:	mov	r3, #12
   2e754:	b	2e9c0 <__assert_fail@plt+0x1d6a0>
   2e758:	ldr	r3, [fp, #-16]
   2e75c:	ldr	r2, [fp, #-8]
   2e760:	str	r2, [r3, #116]	; 0x74
   2e764:	ldr	r3, [fp, #-16]
   2e768:	ldr	r2, [r3, #116]	; 0x74
   2e76c:	ldr	r3, [fp, #-16]
   2e770:	ldr	r3, [r3, #108]	; 0x6c
   2e774:	mov	r1, r3
   2e778:	mov	r3, r1
   2e77c:	lsl	r3, r3, #1
   2e780:	add	r3, r3, r1
   2e784:	lsl	r3, r3, #3
   2e788:	add	r0, r2, r3
   2e78c:	ldr	r3, [fp, #-16]
   2e790:	ldr	r3, [r3, #112]	; 0x70
   2e794:	mov	r2, r3
   2e798:	mov	r3, r2
   2e79c:	lsl	r3, r3, #1
   2e7a0:	add	r3, r3, r2
   2e7a4:	lsl	r3, r3, #3
   2e7a8:	mov	r2, r3
   2e7ac:	mov	r1, #0
   2e7b0:	bl	11248 <memset@plt>
   2e7b4:	ldr	r3, [fp, #-16]
   2e7b8:	ldr	r3, [r3, #112]	; 0x70
   2e7bc:	lsl	r2, r3, #1
   2e7c0:	ldr	r3, [fp, #-16]
   2e7c4:	str	r2, [r3, #112]	; 0x70
   2e7c8:	ldr	r3, [fp, #-16]
   2e7cc:	ldr	r3, [r3, #108]	; 0x6c
   2e7d0:	cmp	r3, #0
   2e7d4:	ble	2e848 <__assert_fail@plt+0x1d528>
   2e7d8:	ldr	r3, [fp, #-16]
   2e7dc:	ldr	r2, [r3, #116]	; 0x74
   2e7e0:	ldr	r3, [fp, #-16]
   2e7e4:	ldr	r3, [r3, #108]	; 0x6c
   2e7e8:	mov	r1, r3
   2e7ec:	mov	r3, r1
   2e7f0:	lsl	r3, r3, #1
   2e7f4:	add	r3, r3, r1
   2e7f8:	lsl	r3, r3, #3
   2e7fc:	sub	r3, r3, #24
   2e800:	add	r3, r2, r3
   2e804:	ldr	r2, [r3, #4]
   2e808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e80c:	cmp	r2, r3
   2e810:	bne	2e848 <__assert_fail@plt+0x1d528>
   2e814:	ldr	r3, [fp, #-16]
   2e818:	ldr	r2, [r3, #116]	; 0x74
   2e81c:	ldr	r3, [fp, #-16]
   2e820:	ldr	r3, [r3, #108]	; 0x6c
   2e824:	mov	r1, r3
   2e828:	mov	r3, r1
   2e82c:	lsl	r3, r3, #1
   2e830:	add	r3, r3, r1
   2e834:	lsl	r3, r3, #3
   2e838:	sub	r3, r3, #24
   2e83c:	add	r3, r2, r3
   2e840:	mov	r2, #1
   2e844:	strb	r2, [r3, #20]
   2e848:	ldr	r3, [fp, #-16]
   2e84c:	ldr	r2, [r3, #116]	; 0x74
   2e850:	ldr	r3, [fp, #-16]
   2e854:	ldr	r3, [r3, #108]	; 0x6c
   2e858:	mov	r1, r3
   2e85c:	mov	r3, r1
   2e860:	lsl	r3, r3, #1
   2e864:	add	r3, r3, r1
   2e868:	lsl	r3, r3, #3
   2e86c:	add	r3, r2, r3
   2e870:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e874:	str	r2, [r3]
   2e878:	ldr	r3, [fp, #-16]
   2e87c:	ldr	r2, [r3, #116]	; 0x74
   2e880:	ldr	r3, [fp, #-16]
   2e884:	ldr	r3, [r3, #108]	; 0x6c
   2e888:	mov	r1, r3
   2e88c:	mov	r3, r1
   2e890:	lsl	r3, r3, #1
   2e894:	add	r3, r3, r1
   2e898:	lsl	r3, r3, #3
   2e89c:	add	r3, r2, r3
   2e8a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e8a4:	str	r2, [r3, #4]
   2e8a8:	ldr	r3, [fp, #-16]
   2e8ac:	ldr	r2, [r3, #116]	; 0x74
   2e8b0:	ldr	r3, [fp, #-16]
   2e8b4:	ldr	r3, [r3, #108]	; 0x6c
   2e8b8:	mov	r1, r3
   2e8bc:	mov	r3, r1
   2e8c0:	lsl	r3, r3, #1
   2e8c4:	add	r3, r3, r1
   2e8c8:	lsl	r3, r3, #3
   2e8cc:	add	r3, r2, r3
   2e8d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e8d4:	str	r2, [r3, #8]
   2e8d8:	ldr	r3, [fp, #-16]
   2e8dc:	ldr	r2, [r3, #116]	; 0x74
   2e8e0:	ldr	r3, [fp, #-16]
   2e8e4:	ldr	r3, [r3, #108]	; 0x6c
   2e8e8:	mov	r1, r3
   2e8ec:	mov	r3, r1
   2e8f0:	lsl	r3, r3, #1
   2e8f4:	add	r3, r3, r1
   2e8f8:	lsl	r3, r3, #3
   2e8fc:	add	r3, r2, r3
   2e900:	ldr	r2, [fp, #4]
   2e904:	str	r2, [r3, #12]
   2e908:	ldr	r3, [fp, #-16]
   2e90c:	ldr	r2, [r3, #116]	; 0x74
   2e910:	ldr	r3, [fp, #-16]
   2e914:	ldr	r3, [r3, #108]	; 0x6c
   2e918:	mov	r1, r3
   2e91c:	mov	r3, r1
   2e920:	lsl	r3, r3, #1
   2e924:	add	r3, r3, r1
   2e928:	lsl	r3, r3, #3
   2e92c:	add	r3, r2, r3
   2e930:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e934:	ldr	r2, [fp, #4]
   2e938:	cmp	r1, r2
   2e93c:	bne	2e948 <__assert_fail@plt+0x1d628>
   2e940:	mvn	r2, #0
   2e944:	b	2e94c <__assert_fail@plt+0x1d62c>
   2e948:	mov	r2, #0
   2e94c:	str	r2, [r3, #16]
   2e950:	ldr	r3, [fp, #-16]
   2e954:	ldr	r2, [r3, #116]	; 0x74
   2e958:	ldr	r3, [fp, #-16]
   2e95c:	ldr	r3, [r3, #108]	; 0x6c
   2e960:	add	r0, r3, #1
   2e964:	ldr	r1, [fp, #-16]
   2e968:	str	r0, [r1, #108]	; 0x6c
   2e96c:	mov	r1, r3
   2e970:	mov	r3, r1
   2e974:	lsl	r3, r3, #1
   2e978:	add	r3, r3, r1
   2e97c:	lsl	r3, r3, #3
   2e980:	add	r3, r2, r3
   2e984:	mov	r2, #0
   2e988:	strb	r2, [r3, #20]
   2e98c:	ldr	r3, [fp, #-16]
   2e990:	ldr	r2, [r3, #120]	; 0x78
   2e994:	ldr	r1, [fp, #4]
   2e998:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e99c:	sub	r3, r1, r3
   2e9a0:	cmp	r2, r3
   2e9a4:	bge	2e9bc <__assert_fail@plt+0x1d69c>
   2e9a8:	ldr	r2, [fp, #4]
   2e9ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e9b0:	sub	r2, r2, r3
   2e9b4:	ldr	r3, [fp, #-16]
   2e9b8:	str	r2, [r3, #120]	; 0x78
   2e9bc:	mov	r3, #0
   2e9c0:	mov	r0, r3
   2e9c4:	sub	sp, fp, #4
   2e9c8:	pop	{fp, pc}
   2e9cc:	push	{fp}		; (str fp, [sp, #-4]!)
   2e9d0:	add	fp, sp, #0
   2e9d4:	sub	sp, sp, #28
   2e9d8:	str	r0, [fp, #-24]	; 0xffffffe8
   2e9dc:	str	r1, [fp, #-28]	; 0xffffffe4
   2e9e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e9e4:	ldr	r3, [r3, #108]	; 0x6c
   2e9e8:	str	r3, [fp, #-12]
   2e9ec:	ldr	r3, [fp, #-12]
   2e9f0:	str	r3, [fp, #-16]
   2e9f4:	mov	r3, #0
   2e9f8:	str	r3, [fp, #-8]
   2e9fc:	b	2ea64 <__assert_fail@plt+0x1d744>
   2ea00:	ldr	r2, [fp, #-8]
   2ea04:	ldr	r3, [fp, #-12]
   2ea08:	add	r3, r2, r3
   2ea0c:	lsr	r2, r3, #31
   2ea10:	add	r3, r2, r3
   2ea14:	asr	r3, r3, #1
   2ea18:	str	r3, [fp, #-20]	; 0xffffffec
   2ea1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ea20:	ldr	r1, [r3, #116]	; 0x74
   2ea24:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ea28:	mov	r3, r2
   2ea2c:	lsl	r3, r3, #1
   2ea30:	add	r3, r3, r2
   2ea34:	lsl	r3, r3, #3
   2ea38:	add	r3, r1, r3
   2ea3c:	ldr	r2, [r3, #4]
   2ea40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ea44:	cmp	r2, r3
   2ea48:	bge	2ea5c <__assert_fail@plt+0x1d73c>
   2ea4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ea50:	add	r3, r3, #1
   2ea54:	str	r3, [fp, #-8]
   2ea58:	b	2ea64 <__assert_fail@plt+0x1d744>
   2ea5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ea60:	str	r3, [fp, #-12]
   2ea64:	ldr	r2, [fp, #-8]
   2ea68:	ldr	r3, [fp, #-12]
   2ea6c:	cmp	r2, r3
   2ea70:	blt	2ea00 <__assert_fail@plt+0x1d6e0>
   2ea74:	ldr	r2, [fp, #-8]
   2ea78:	ldr	r3, [fp, #-16]
   2ea7c:	cmp	r2, r3
   2ea80:	bge	2eabc <__assert_fail@plt+0x1d79c>
   2ea84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ea88:	ldr	r1, [r3, #116]	; 0x74
   2ea8c:	ldr	r2, [fp, #-8]
   2ea90:	mov	r3, r2
   2ea94:	lsl	r3, r3, #1
   2ea98:	add	r3, r3, r2
   2ea9c:	lsl	r3, r3, #3
   2eaa0:	add	r3, r1, r3
   2eaa4:	ldr	r2, [r3, #4]
   2eaa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eaac:	cmp	r2, r3
   2eab0:	bne	2eabc <__assert_fail@plt+0x1d79c>
   2eab4:	ldr	r3, [fp, #-8]
   2eab8:	b	2eac0 <__assert_fail@plt+0x1d7a0>
   2eabc:	mvn	r3, #0
   2eac0:	mov	r0, r3
   2eac4:	add	sp, fp, #0
   2eac8:	pop	{fp}		; (ldr fp, [sp], #4)
   2eacc:	bx	lr
   2ead0:	push	{r4, fp, lr}
   2ead4:	add	fp, sp, #8
   2ead8:	sub	sp, sp, #28
   2eadc:	str	r0, [fp, #-24]	; 0xffffffe8
   2eae0:	str	r1, [fp, #-28]	; 0xffffffe4
   2eae4:	str	r2, [fp, #-32]	; 0xffffffe0
   2eae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eaec:	ldr	r3, [r3, #132]	; 0x84
   2eaf0:	cmp	r3, #0
   2eaf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eaf8:	ldr	r3, [r3, #128]	; 0x80
   2eafc:	cmp	r3, #0
   2eb00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb04:	ldr	r2, [r3, #124]	; 0x7c
   2eb08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb0c:	ldr	r3, [r3, #128]	; 0x80
   2eb10:	cmp	r2, r3
   2eb14:	moveq	r3, #1
   2eb18:	movne	r3, #0
   2eb1c:	uxtb	r3, r3
   2eb20:	cmp	r3, #0
   2eb24:	beq	2eb94 <__assert_fail@plt+0x1d874>
   2eb28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb2c:	ldr	r3, [r3, #128]	; 0x80
   2eb30:	lsl	r3, r3, #1
   2eb34:	str	r3, [fp, #-16]
   2eb38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb3c:	ldr	r2, [r3, #132]	; 0x84
   2eb40:	ldr	r3, [fp, #-16]
   2eb44:	lsl	r3, r3, #2
   2eb48:	mov	r1, r3
   2eb4c:	mov	r0, r2
   2eb50:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   2eb54:	str	r0, [fp, #-20]	; 0xffffffec
   2eb58:	ldr	r3, [fp, #-20]	; 0xffffffec
   2eb5c:	cmp	r3, #0
   2eb60:	moveq	r3, #1
   2eb64:	movne	r3, #0
   2eb68:	uxtb	r3, r3
   2eb6c:	cmp	r3, #0
   2eb70:	beq	2eb7c <__assert_fail@plt+0x1d85c>
   2eb74:	mov	r3, #12
   2eb78:	b	2ec54 <__assert_fail@plt+0x1d934>
   2eb7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb80:	ldr	r2, [fp, #-20]	; 0xffffffec
   2eb84:	str	r2, [r3, #132]	; 0x84
   2eb88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb8c:	ldr	r2, [fp, #-16]
   2eb90:	str	r2, [r3, #128]	; 0x80
   2eb94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb98:	ldr	r2, [r3, #132]	; 0x84
   2eb9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eba0:	ldr	r3, [r3, #124]	; 0x7c
   2eba4:	lsl	r3, r3, #2
   2eba8:	add	r4, r2, r3
   2ebac:	mov	r1, #24
   2ebb0:	mov	r0, #1
   2ebb4:	bl	30c58 <__assert_fail@plt+0x1f938>
   2ebb8:	mov	r3, r0
   2ebbc:	str	r3, [r4]
   2ebc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ebc4:	ldr	r2, [r3, #132]	; 0x84
   2ebc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ebcc:	ldr	r3, [r3, #124]	; 0x7c
   2ebd0:	lsl	r3, r3, #2
   2ebd4:	add	r3, r2, r3
   2ebd8:	ldr	r3, [r3]
   2ebdc:	cmp	r3, #0
   2ebe0:	moveq	r3, #1
   2ebe4:	movne	r3, #0
   2ebe8:	uxtb	r3, r3
   2ebec:	cmp	r3, #0
   2ebf0:	beq	2ebfc <__assert_fail@plt+0x1d8dc>
   2ebf4:	mov	r3, #12
   2ebf8:	b	2ec54 <__assert_fail@plt+0x1d934>
   2ebfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ec00:	ldr	r2, [r3, #132]	; 0x84
   2ec04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ec08:	ldr	r3, [r3, #124]	; 0x7c
   2ec0c:	lsl	r3, r3, #2
   2ec10:	add	r3, r2, r3
   2ec14:	ldr	r3, [r3]
   2ec18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ec1c:	str	r2, [r3, #4]
   2ec20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ec24:	ldr	r2, [r3, #132]	; 0x84
   2ec28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ec2c:	ldr	r3, [r3, #124]	; 0x7c
   2ec30:	add	r0, r3, #1
   2ec34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ec38:	str	r0, [r1, #124]	; 0x7c
   2ec3c:	lsl	r3, r3, #2
   2ec40:	add	r3, r2, r3
   2ec44:	ldr	r3, [r3]
   2ec48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ec4c:	str	r2, [r3]
   2ec50:	mov	r3, #0
   2ec54:	mov	r0, r3
   2ec58:	sub	sp, fp, #8
   2ec5c:	pop	{r4, fp, pc}
   2ec60:	push	{fp, lr}
   2ec64:	add	fp, sp, #4
   2ec68:	sub	sp, sp, #32
   2ec6c:	str	r0, [fp, #-24]	; 0xffffffe8
   2ec70:	str	r1, [fp, #-28]	; 0xffffffe4
   2ec74:	str	r2, [fp, #-32]	; 0xffffffe0
   2ec78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ec7c:	ldr	r2, [r3, #16]
   2ec80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ec84:	ldr	r3, [r3, #12]
   2ec88:	cmp	r2, r3
   2ec8c:	moveq	r3, #1
   2ec90:	movne	r3, #0
   2ec94:	uxtb	r3, r3
   2ec98:	cmp	r3, #0
   2ec9c:	beq	2ed10 <__assert_fail@plt+0x1d9f0>
   2eca0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eca4:	ldr	r3, [r3, #12]
   2eca8:	lsl	r3, r3, #1
   2ecac:	add	r3, r3, #1
   2ecb0:	str	r3, [fp, #-8]
   2ecb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ecb8:	ldr	r2, [r3, #20]
   2ecbc:	ldr	r3, [fp, #-8]
   2ecc0:	lsl	r3, r3, #2
   2ecc4:	mov	r1, r3
   2ecc8:	mov	r0, r2
   2eccc:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   2ecd0:	str	r0, [fp, #-12]
   2ecd4:	ldr	r3, [fp, #-12]
   2ecd8:	cmp	r3, #0
   2ecdc:	moveq	r3, #1
   2ece0:	movne	r3, #0
   2ece4:	uxtb	r3, r3
   2ece8:	cmp	r3, #0
   2ecec:	beq	2ecf8 <__assert_fail@plt+0x1d9d8>
   2ecf0:	mov	r3, #0
   2ecf4:	b	2ed90 <__assert_fail@plt+0x1da70>
   2ecf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ecfc:	ldr	r2, [fp, #-12]
   2ed00:	str	r2, [r3, #20]
   2ed04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ed08:	ldr	r2, [fp, #-8]
   2ed0c:	str	r2, [r3, #12]
   2ed10:	mov	r1, #20
   2ed14:	mov	r0, #1
   2ed18:	bl	30c58 <__assert_fail@plt+0x1f938>
   2ed1c:	mov	r3, r0
   2ed20:	str	r3, [fp, #-16]
   2ed24:	ldr	r3, [fp, #-16]
   2ed28:	cmp	r3, #0
   2ed2c:	movne	r3, #1
   2ed30:	moveq	r3, #0
   2ed34:	uxtb	r3, r3
   2ed38:	cmp	r3, #0
   2ed3c:	beq	2ed8c <__assert_fail@plt+0x1da6c>
   2ed40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ed44:	ldr	r2, [r3, #20]
   2ed48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ed4c:	ldr	r3, [r3, #16]
   2ed50:	lsl	r3, r3, #2
   2ed54:	add	r3, r2, r3
   2ed58:	ldr	r2, [fp, #-16]
   2ed5c:	str	r2, [r3]
   2ed60:	ldr	r3, [fp, #-16]
   2ed64:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ed68:	str	r2, [r3]
   2ed6c:	ldr	r3, [fp, #-16]
   2ed70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ed74:	str	r2, [r3, #4]
   2ed78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ed7c:	ldr	r3, [r3, #16]
   2ed80:	add	r2, r3, #1
   2ed84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ed88:	str	r2, [r3, #16]
   2ed8c:	ldr	r3, [fp, #-16]
   2ed90:	mov	r0, r3
   2ed94:	sub	sp, fp, #4
   2ed98:	pop	{fp, pc}
   2ed9c:	push	{fp, lr}
   2eda0:	add	fp, sp, #4
   2eda4:	sub	sp, sp, #16
   2eda8:	str	r0, [fp, #-8]
   2edac:	str	r1, [fp, #-12]
   2edb0:	str	r2, [fp, #-16]
   2edb4:	str	r3, [fp, #-20]	; 0xffffffec
   2edb8:	ldr	r3, [fp, #-8]
   2edbc:	ldr	r2, [fp, #-12]
   2edc0:	str	r2, [r3]
   2edc4:	ldr	r3, [fp, #-8]
   2edc8:	ldr	r2, [fp, #-16]
   2edcc:	str	r2, [r3, #4]
   2edd0:	ldr	r3, [fp, #-8]
   2edd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2edd8:	str	r2, [r3, #8]
   2eddc:	ldr	r3, [fp, #-8]
   2ede0:	ldr	r2, [fp, #4]
   2ede4:	str	r2, [r3, #12]
   2ede8:	ldr	r3, [fp, #-8]
   2edec:	add	r3, r3, #16
   2edf0:	mov	r2, #12
   2edf4:	mov	r1, #0
   2edf8:	mov	r0, r3
   2edfc:	bl	11248 <memset@plt>
   2ee00:	nop			; (mov r0, r0)
   2ee04:	sub	sp, fp, #4
   2ee08:	pop	{fp, pc}
   2ee0c:	push	{r4, r5, r6, r7, fp, lr}
   2ee10:	add	fp, sp, #20
   2ee14:	sub	sp, sp, #48	; 0x30
   2ee18:	str	r0, [fp, #-24]	; 0xffffffe8
   2ee1c:	str	r1, [fp, #-28]	; 0xffffffe4
   2ee20:	str	r2, [fp, #-32]	; 0xffffffe0
   2ee24:	str	r3, [fp, #-36]	; 0xffffffdc
   2ee28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ee2c:	cmp	r3, #0
   2ee30:	beq	2ee54 <__assert_fail@plt+0x1db34>
   2ee34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ee38:	str	r3, [sp]
   2ee3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ee40:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ee44:	ldr	r1, [pc, #1260]	; 2f338 <__assert_fail@plt+0x1e018>
   2ee48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee4c:	bl	11218 <fprintf@plt>
   2ee50:	b	2ee68 <__assert_fail@plt+0x1db48>
   2ee54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ee58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ee5c:	ldr	r1, [pc, #1240]	; 2f33c <__assert_fail@plt+0x1e01c>
   2ee60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee64:	bl	11218 <fprintf@plt>
   2ee68:	ldr	r0, [pc, #1232]	; 2f340 <__assert_fail@plt+0x1e020>
   2ee6c:	bl	111f4 <gettext@plt>
   2ee70:	mov	r2, r0
   2ee74:	ldr	r3, [pc, #1224]	; 2f344 <__assert_fail@plt+0x1e024>
   2ee78:	ldr	r1, [pc, #1224]	; 2f348 <__assert_fail@plt+0x1e028>
   2ee7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee80:	bl	11218 <fprintf@plt>
   2ee84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ee88:	mov	r0, #10
   2ee8c:	bl	11104 <fputc_unlocked@plt>
   2ee90:	ldr	r0, [pc, #1204]	; 2f34c <__assert_fail@plt+0x1e02c>
   2ee94:	bl	111f4 <gettext@plt>
   2ee98:	mov	r3, r0
   2ee9c:	ldr	r2, [pc, #1196]	; 2f350 <__assert_fail@plt+0x1e030>
   2eea0:	mov	r1, r3
   2eea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eea8:	bl	11218 <fprintf@plt>
   2eeac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2eeb0:	mov	r0, #10
   2eeb4:	bl	11104 <fputc_unlocked@plt>
   2eeb8:	ldr	r3, [fp, #8]
   2eebc:	cmp	r3, #9
   2eec0:	ldrls	pc, [pc, r3, lsl #2]
   2eec4:	b	2f280 <__assert_fail@plt+0x1df60>
   2eec8:	andeq	pc, r2, r8, lsr #6
   2eecc:	strdeq	lr, [r2], -r0
   2eed0:	andeq	lr, r2, r4, lsl pc
   2eed4:	andeq	lr, r2, r0, asr #30
   2eed8:	andeq	lr, r2, r0, lsl #31
   2eedc:	ldrdeq	lr, [r2], -r8
   2eee0:	andeq	pc, r2, r0, asr #32
   2eee4:	strheq	pc, [r2], -r8	; <UNPREDICTABLE>
   2eee8:	andeq	pc, r2, r0, asr #2
   2eeec:	ldrdeq	pc, [r2], -r8
   2eef0:	ldr	r0, [pc, #1116]	; 2f354 <__assert_fail@plt+0x1e034>
   2eef4:	bl	111f4 <gettext@plt>
   2eef8:	mov	r1, r0
   2eefc:	ldr	r3, [fp, #4]
   2ef00:	ldr	r3, [r3]
   2ef04:	mov	r2, r3
   2ef08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef0c:	bl	11218 <fprintf@plt>
   2ef10:	b	2f32c <__assert_fail@plt+0x1e00c>
   2ef14:	ldr	r0, [pc, #1084]	; 2f358 <__assert_fail@plt+0x1e038>
   2ef18:	bl	111f4 <gettext@plt>
   2ef1c:	mov	r1, r0
   2ef20:	ldr	r3, [fp, #4]
   2ef24:	ldr	r2, [r3]
   2ef28:	ldr	r3, [fp, #4]
   2ef2c:	add	r3, r3, #4
   2ef30:	ldr	r3, [r3]
   2ef34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef38:	bl	11218 <fprintf@plt>
   2ef3c:	b	2f32c <__assert_fail@plt+0x1e00c>
   2ef40:	ldr	r0, [pc, #1044]	; 2f35c <__assert_fail@plt+0x1e03c>
   2ef44:	bl	111f4 <gettext@plt>
   2ef48:	ldr	r3, [fp, #4]
   2ef4c:	ldr	r2, [r3]
   2ef50:	ldr	r3, [fp, #4]
   2ef54:	add	r3, r3, #4
   2ef58:	ldr	r1, [r3]
   2ef5c:	ldr	r3, [fp, #4]
   2ef60:	add	r3, r3, #8
   2ef64:	ldr	r3, [r3]
   2ef68:	str	r3, [sp]
   2ef6c:	mov	r3, r1
   2ef70:	mov	r1, r0
   2ef74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef78:	bl	11218 <fprintf@plt>
   2ef7c:	b	2f32c <__assert_fail@plt+0x1e00c>
   2ef80:	ldr	r0, [pc, #984]	; 2f360 <__assert_fail@plt+0x1e040>
   2ef84:	bl	111f4 <gettext@plt>
   2ef88:	mov	ip, r0
   2ef8c:	ldr	r3, [fp, #4]
   2ef90:	ldr	r1, [r3]
   2ef94:	ldr	r3, [fp, #4]
   2ef98:	add	r3, r3, #4
   2ef9c:	ldr	r0, [r3]
   2efa0:	ldr	r3, [fp, #4]
   2efa4:	add	r3, r3, #8
   2efa8:	ldr	r3, [r3]
   2efac:	ldr	r2, [fp, #4]
   2efb0:	add	r2, r2, #12
   2efb4:	ldr	r2, [r2]
   2efb8:	str	r2, [sp, #4]
   2efbc:	str	r3, [sp]
   2efc0:	mov	r3, r0
   2efc4:	mov	r2, r1
   2efc8:	mov	r1, ip
   2efcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2efd0:	bl	11218 <fprintf@plt>
   2efd4:	b	2f32c <__assert_fail@plt+0x1e00c>
   2efd8:	ldr	r0, [pc, #900]	; 2f364 <__assert_fail@plt+0x1e044>
   2efdc:	bl	111f4 <gettext@plt>
   2efe0:	mov	lr, r0
   2efe4:	ldr	r3, [fp, #4]
   2efe8:	ldr	r0, [r3]
   2efec:	ldr	r3, [fp, #4]
   2eff0:	add	r3, r3, #4
   2eff4:	ldr	ip, [r3]
   2eff8:	ldr	r3, [fp, #4]
   2effc:	add	r3, r3, #8
   2f000:	ldr	r3, [r3]
   2f004:	ldr	r2, [fp, #4]
   2f008:	add	r2, r2, #12
   2f00c:	ldr	r2, [r2]
   2f010:	ldr	r1, [fp, #4]
   2f014:	add	r1, r1, #16
   2f018:	ldr	r1, [r1]
   2f01c:	str	r1, [sp, #8]
   2f020:	str	r2, [sp, #4]
   2f024:	str	r3, [sp]
   2f028:	mov	r3, ip
   2f02c:	mov	r2, r0
   2f030:	mov	r1, lr
   2f034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f038:	bl	11218 <fprintf@plt>
   2f03c:	b	2f32c <__assert_fail@plt+0x1e00c>
   2f040:	ldr	r0, [pc, #800]	; 2f368 <__assert_fail@plt+0x1e048>
   2f044:	bl	111f4 <gettext@plt>
   2f048:	mov	r4, r0
   2f04c:	ldr	r3, [fp, #4]
   2f050:	ldr	ip, [r3]
   2f054:	ldr	r3, [fp, #4]
   2f058:	add	r3, r3, #4
   2f05c:	ldr	lr, [r3]
   2f060:	ldr	r3, [fp, #4]
   2f064:	add	r3, r3, #8
   2f068:	ldr	r3, [r3]
   2f06c:	ldr	r2, [fp, #4]
   2f070:	add	r2, r2, #12
   2f074:	ldr	r2, [r2]
   2f078:	ldr	r1, [fp, #4]
   2f07c:	add	r1, r1, #16
   2f080:	ldr	r1, [r1]
   2f084:	ldr	r0, [fp, #4]
   2f088:	add	r0, r0, #20
   2f08c:	ldr	r0, [r0]
   2f090:	str	r0, [sp, #12]
   2f094:	str	r1, [sp, #8]
   2f098:	str	r2, [sp, #4]
   2f09c:	str	r3, [sp]
   2f0a0:	mov	r3, lr
   2f0a4:	mov	r2, ip
   2f0a8:	mov	r1, r4
   2f0ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f0b0:	bl	11218 <fprintf@plt>
   2f0b4:	b	2f32c <__assert_fail@plt+0x1e00c>
   2f0b8:	ldr	r0, [pc, #684]	; 2f36c <__assert_fail@plt+0x1e04c>
   2f0bc:	bl	111f4 <gettext@plt>
   2f0c0:	mov	r5, r0
   2f0c4:	ldr	r3, [fp, #4]
   2f0c8:	ldr	lr, [r3]
   2f0cc:	ldr	r3, [fp, #4]
   2f0d0:	add	r3, r3, #4
   2f0d4:	ldr	r4, [r3]
   2f0d8:	ldr	r3, [fp, #4]
   2f0dc:	add	r3, r3, #8
   2f0e0:	ldr	r3, [r3]
   2f0e4:	ldr	r2, [fp, #4]
   2f0e8:	add	r2, r2, #12
   2f0ec:	ldr	r2, [r2]
   2f0f0:	ldr	r1, [fp, #4]
   2f0f4:	add	r1, r1, #16
   2f0f8:	ldr	r1, [r1]
   2f0fc:	ldr	r0, [fp, #4]
   2f100:	add	r0, r0, #20
   2f104:	ldr	r0, [r0]
   2f108:	ldr	ip, [fp, #4]
   2f10c:	add	ip, ip, #24
   2f110:	ldr	ip, [ip]
   2f114:	str	ip, [sp, #16]
   2f118:	str	r0, [sp, #12]
   2f11c:	str	r1, [sp, #8]
   2f120:	str	r2, [sp, #4]
   2f124:	str	r3, [sp]
   2f128:	mov	r3, r4
   2f12c:	mov	r2, lr
   2f130:	mov	r1, r5
   2f134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f138:	bl	11218 <fprintf@plt>
   2f13c:	b	2f32c <__assert_fail@plt+0x1e00c>
   2f140:	ldr	r0, [pc, #552]	; 2f370 <__assert_fail@plt+0x1e050>
   2f144:	bl	111f4 <gettext@plt>
   2f148:	mov	r6, r0
   2f14c:	ldr	r3, [fp, #4]
   2f150:	ldr	r4, [r3]
   2f154:	ldr	r3, [fp, #4]
   2f158:	add	r3, r3, #4
   2f15c:	ldr	r5, [r3]
   2f160:	ldr	r3, [fp, #4]
   2f164:	add	r3, r3, #8
   2f168:	ldr	r3, [r3]
   2f16c:	ldr	r2, [fp, #4]
   2f170:	add	r2, r2, #12
   2f174:	ldr	r2, [r2]
   2f178:	ldr	r1, [fp, #4]
   2f17c:	add	r1, r1, #16
   2f180:	ldr	r1, [r1]
   2f184:	ldr	r0, [fp, #4]
   2f188:	add	r0, r0, #20
   2f18c:	ldr	r0, [r0]
   2f190:	ldr	ip, [fp, #4]
   2f194:	add	ip, ip, #24
   2f198:	ldr	ip, [ip]
   2f19c:	ldr	lr, [fp, #4]
   2f1a0:	add	lr, lr, #28
   2f1a4:	ldr	lr, [lr]
   2f1a8:	str	lr, [sp, #20]
   2f1ac:	str	ip, [sp, #16]
   2f1b0:	str	r0, [sp, #12]
   2f1b4:	str	r1, [sp, #8]
   2f1b8:	str	r2, [sp, #4]
   2f1bc:	str	r3, [sp]
   2f1c0:	mov	r3, r5
   2f1c4:	mov	r2, r4
   2f1c8:	mov	r1, r6
   2f1cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f1d0:	bl	11218 <fprintf@plt>
   2f1d4:	b	2f32c <__assert_fail@plt+0x1e00c>
   2f1d8:	ldr	r0, [pc, #404]	; 2f374 <__assert_fail@plt+0x1e054>
   2f1dc:	bl	111f4 <gettext@plt>
   2f1e0:	mov	r7, r0
   2f1e4:	ldr	r3, [fp, #4]
   2f1e8:	ldr	r5, [r3]
   2f1ec:	ldr	r3, [fp, #4]
   2f1f0:	add	r3, r3, #4
   2f1f4:	ldr	r6, [r3]
   2f1f8:	ldr	r3, [fp, #4]
   2f1fc:	add	r3, r3, #8
   2f200:	ldr	r3, [r3]
   2f204:	ldr	r2, [fp, #4]
   2f208:	add	r2, r2, #12
   2f20c:	ldr	r2, [r2]
   2f210:	ldr	r1, [fp, #4]
   2f214:	add	r1, r1, #16
   2f218:	ldr	r1, [r1]
   2f21c:	ldr	r0, [fp, #4]
   2f220:	add	r0, r0, #20
   2f224:	ldr	r0, [r0]
   2f228:	ldr	ip, [fp, #4]
   2f22c:	add	ip, ip, #24
   2f230:	ldr	ip, [ip]
   2f234:	ldr	lr, [fp, #4]
   2f238:	add	lr, lr, #28
   2f23c:	ldr	lr, [lr]
   2f240:	ldr	r4, [fp, #4]
   2f244:	add	r4, r4, #32
   2f248:	ldr	r4, [r4]
   2f24c:	str	r4, [sp, #24]
   2f250:	str	lr, [sp, #20]
   2f254:	str	ip, [sp, #16]
   2f258:	str	r0, [sp, #12]
   2f25c:	str	r1, [sp, #8]
   2f260:	str	r2, [sp, #4]
   2f264:	str	r3, [sp]
   2f268:	mov	r3, r6
   2f26c:	mov	r2, r5
   2f270:	mov	r1, r7
   2f274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f278:	bl	11218 <fprintf@plt>
   2f27c:	b	2f32c <__assert_fail@plt+0x1e00c>
   2f280:	ldr	r0, [pc, #240]	; 2f378 <__assert_fail@plt+0x1e058>
   2f284:	bl	111f4 <gettext@plt>
   2f288:	mov	r7, r0
   2f28c:	ldr	r3, [fp, #4]
   2f290:	ldr	r5, [r3]
   2f294:	ldr	r3, [fp, #4]
   2f298:	add	r3, r3, #4
   2f29c:	ldr	r6, [r3]
   2f2a0:	ldr	r3, [fp, #4]
   2f2a4:	add	r3, r3, #8
   2f2a8:	ldr	r3, [r3]
   2f2ac:	ldr	r2, [fp, #4]
   2f2b0:	add	r2, r2, #12
   2f2b4:	ldr	r2, [r2]
   2f2b8:	ldr	r1, [fp, #4]
   2f2bc:	add	r1, r1, #16
   2f2c0:	ldr	r1, [r1]
   2f2c4:	ldr	r0, [fp, #4]
   2f2c8:	add	r0, r0, #20
   2f2cc:	ldr	r0, [r0]
   2f2d0:	ldr	ip, [fp, #4]
   2f2d4:	add	ip, ip, #24
   2f2d8:	ldr	ip, [ip]
   2f2dc:	ldr	lr, [fp, #4]
   2f2e0:	add	lr, lr, #28
   2f2e4:	ldr	lr, [lr]
   2f2e8:	ldr	r4, [fp, #4]
   2f2ec:	add	r4, r4, #32
   2f2f0:	ldr	r4, [r4]
   2f2f4:	str	r4, [sp, #24]
   2f2f8:	str	lr, [sp, #20]
   2f2fc:	str	ip, [sp, #16]
   2f300:	str	r0, [sp, #12]
   2f304:	str	r1, [sp, #8]
   2f308:	str	r2, [sp, #4]
   2f30c:	str	r3, [sp]
   2f310:	mov	r3, r6
   2f314:	mov	r2, r5
   2f318:	mov	r1, r7
   2f31c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f320:	bl	11218 <fprintf@plt>
   2f324:	b	2f32c <__assert_fail@plt+0x1e00c>
   2f328:	nop			; (mov r0, r0)
   2f32c:	nop			; (mov r0, r0)
   2f330:	sub	sp, fp, #20
   2f334:	pop	{r4, r5, r6, r7, fp, pc}
   2f338:	andeq	r3, r3, r4, lsl #13
   2f33c:	muleq	r3, r0, r6
   2f340:	muleq	r3, r8, r6
   2f344:	andeq	r0, r0, r6, ror #15
   2f348:	andeq	r3, r3, r8, lsr #19
   2f34c:	muleq	r3, ip, r6
   2f350:	andeq	r3, r3, r8, asr #14
   2f354:	andeq	r3, r3, ip, ror #14
   2f358:	andeq	r3, r3, ip, ror r7
   2f35c:	muleq	r3, r4, r7
   2f360:			; <UNDEFINED> instruction: 0x000337b0
   2f364:	ldrdeq	r3, [r3], -r0
   2f368:	strdeq	r3, [r3], -r4
   2f36c:	andeq	r3, r3, ip, lsl r8
   2f370:	andeq	r3, r3, r8, asr #16
   2f374:	andeq	r3, r3, r8, ror r8
   2f378:	andeq	r3, r3, ip, lsr #17
   2f37c:	push	{fp, lr}
   2f380:	add	fp, sp, #4
   2f384:	sub	sp, sp, #32
   2f388:	str	r0, [fp, #-16]
   2f38c:	str	r1, [fp, #-20]	; 0xffffffec
   2f390:	str	r2, [fp, #-24]	; 0xffffffe8
   2f394:	str	r3, [fp, #-28]	; 0xffffffe4
   2f398:	mov	r3, #0
   2f39c:	str	r3, [fp, #-8]
   2f3a0:	b	2f3b0 <__assert_fail@plt+0x1e090>
   2f3a4:	ldr	r3, [fp, #-8]
   2f3a8:	add	r3, r3, #1
   2f3ac:	str	r3, [fp, #-8]
   2f3b0:	ldr	r3, [fp, #-8]
   2f3b4:	lsl	r3, r3, #2
   2f3b8:	ldr	r2, [fp, #4]
   2f3bc:	add	r3, r2, r3
   2f3c0:	ldr	r3, [r3]
   2f3c4:	cmp	r3, #0
   2f3c8:	bne	2f3a4 <__assert_fail@plt+0x1e084>
   2f3cc:	ldr	r3, [fp, #-8]
   2f3d0:	str	r3, [sp, #4]
   2f3d4:	ldr	r3, [fp, #4]
   2f3d8:	str	r3, [sp]
   2f3dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f3e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f3e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f3e8:	ldr	r0, [fp, #-16]
   2f3ec:	bl	2ee0c <__assert_fail@plt+0x1daec>
   2f3f0:	nop			; (mov r0, r0)
   2f3f4:	sub	sp, fp, #4
   2f3f8:	pop	{fp, pc}
   2f3fc:	push	{fp, lr}
   2f400:	add	fp, sp, #4
   2f404:	sub	sp, sp, #72	; 0x48
   2f408:	str	r0, [fp, #-56]	; 0xffffffc8
   2f40c:	str	r1, [fp, #-60]	; 0xffffffc4
   2f410:	str	r2, [fp, #-64]	; 0xffffffc0
   2f414:	str	r3, [fp, #-68]	; 0xffffffbc
   2f418:	mov	r3, #0
   2f41c:	str	r3, [fp, #-8]
   2f420:	b	2f430 <__assert_fail@plt+0x1e110>
   2f424:	ldr	r3, [fp, #-8]
   2f428:	add	r3, r3, #1
   2f42c:	str	r3, [fp, #-8]
   2f430:	ldr	r3, [fp, #-8]
   2f434:	cmp	r3, #9
   2f438:	bhi	2f47c <__assert_fail@plt+0x1e15c>
   2f43c:	ldr	r3, [fp, #4]
   2f440:	add	r2, r3, #4
   2f444:	str	r2, [fp, #4]
   2f448:	ldr	r2, [r3]
   2f44c:	ldr	r3, [fp, #-8]
   2f450:	lsl	r3, r3, #2
   2f454:	sub	r1, fp, #4
   2f458:	add	r3, r1, r3
   2f45c:	str	r2, [r3, #-44]	; 0xffffffd4
   2f460:	ldr	r3, [fp, #-8]
   2f464:	lsl	r3, r3, #2
   2f468:	sub	r2, fp, #4
   2f46c:	add	r3, r2, r3
   2f470:	ldr	r3, [r3, #-44]	; 0xffffffd4
   2f474:	cmp	r3, #0
   2f478:	bne	2f424 <__assert_fail@plt+0x1e104>
   2f47c:	ldr	r3, [fp, #-8]
   2f480:	str	r3, [sp, #4]
   2f484:	sub	r3, fp, #48	; 0x30
   2f488:	str	r3, [sp]
   2f48c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f490:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2f494:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2f498:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f49c:	bl	2ee0c <__assert_fail@plt+0x1daec>
   2f4a0:	nop			; (mov r0, r0)
   2f4a4:	sub	sp, fp, #4
   2f4a8:	pop	{fp, pc}
   2f4ac:	push	{r3}		; (str r3, [sp, #-4]!)
   2f4b0:	push	{fp, lr}
   2f4b4:	add	fp, sp, #4
   2f4b8:	sub	sp, sp, #36	; 0x24
   2f4bc:	str	r0, [fp, #-20]	; 0xffffffec
   2f4c0:	str	r1, [fp, #-24]	; 0xffffffe8
   2f4c4:	str	r2, [fp, #-28]	; 0xffffffe4
   2f4c8:	add	r3, fp, #8
   2f4cc:	str	r3, [fp, #-12]
   2f4d0:	ldr	r3, [fp, #-12]
   2f4d4:	str	r3, [sp]
   2f4d8:	ldr	r3, [fp, #4]
   2f4dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f4e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f4e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f4e8:	bl	2f3fc <__assert_fail@plt+0x1e0dc>
   2f4ec:	nop			; (mov r0, r0)
   2f4f0:	sub	sp, fp, #4
   2f4f4:	pop	{fp, lr}
   2f4f8:	add	sp, sp, #4
   2f4fc:	bx	lr
   2f500:	push	{fp, lr}
   2f504:	add	fp, sp, #4
   2f508:	ldr	r3, [pc, #96]	; 2f570 <__assert_fail@plt+0x1e250>
   2f50c:	ldr	r3, [r3]
   2f510:	mov	r1, r3
   2f514:	mov	r0, #10
   2f518:	bl	11104 <fputc_unlocked@plt>
   2f51c:	ldr	r0, [pc, #80]	; 2f574 <__assert_fail@plt+0x1e254>
   2f520:	bl	111f4 <gettext@plt>
   2f524:	mov	r3, r0
   2f528:	ldr	r1, [pc, #72]	; 2f578 <__assert_fail@plt+0x1e258>
   2f52c:	mov	r0, r3
   2f530:	bl	11050 <printf@plt>
   2f534:	ldr	r0, [pc, #64]	; 2f57c <__assert_fail@plt+0x1e25c>
   2f538:	bl	111f4 <gettext@plt>
   2f53c:	mov	r3, r0
   2f540:	ldr	r2, [pc, #56]	; 2f580 <__assert_fail@plt+0x1e260>
   2f544:	ldr	r1, [pc, #56]	; 2f584 <__assert_fail@plt+0x1e264>
   2f548:	mov	r0, r3
   2f54c:	bl	11050 <printf@plt>
   2f550:	ldr	r0, [pc, #48]	; 2f588 <__assert_fail@plt+0x1e268>
   2f554:	bl	111f4 <gettext@plt>
   2f558:	mov	r3, r0
   2f55c:	ldr	r1, [pc, #40]	; 2f58c <__assert_fail@plt+0x1e26c>
   2f560:	mov	r0, r3
   2f564:	bl	11050 <printf@plt>
   2f568:	nop			; (mov r0, r0)
   2f56c:	pop	{fp, pc}
   2f570:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   2f574:	andeq	r3, r3, r8, ror #17
   2f578:	strdeq	r3, [r3], -ip
   2f57c:	andeq	r3, r3, r4, lsl r9
   2f580:	andeq	r3, r3, r8, lsr #18
   2f584:	andeq	r3, r3, r0, asr r9
   2f588:	andeq	r3, r3, r0, ror #18
   2f58c:	andeq	r3, r3, r8, lsl #19
   2f590:	push	{fp, lr}
   2f594:	add	fp, sp, #4
   2f598:	sub	sp, sp, #16
   2f59c:	str	r0, [fp, #-8]
   2f5a0:	str	r1, [fp, #-12]
   2f5a4:	str	r2, [fp, #-16]
   2f5a8:	ldr	r2, [fp, #-16]
   2f5ac:	ldr	r1, [fp, #-12]
   2f5b0:	ldr	r0, [fp, #-8]
   2f5b4:	bl	2f720 <__assert_fail@plt+0x1e400>
   2f5b8:	mov	r3, r0
   2f5bc:	mov	r0, r3
   2f5c0:	sub	sp, fp, #4
   2f5c4:	pop	{fp, pc}
   2f5c8:	push	{fp, lr}
   2f5cc:	add	fp, sp, #4
   2f5d0:	sub	sp, sp, #8
   2f5d4:	str	r0, [fp, #-8]
   2f5d8:	ldr	r3, [fp, #-8]
   2f5dc:	cmp	r3, #0
   2f5e0:	bne	2f5e8 <__assert_fail@plt+0x1e2c8>
   2f5e4:	bl	30114 <__assert_fail@plt+0x1edf4>
   2f5e8:	ldr	r3, [fp, #-8]
   2f5ec:	mov	r0, r3
   2f5f0:	sub	sp, fp, #4
   2f5f4:	pop	{fp, pc}
   2f5f8:	push	{fp, lr}
   2f5fc:	add	fp, sp, #4
   2f600:	sub	sp, sp, #8
   2f604:	str	r0, [fp, #-8]
   2f608:	ldr	r0, [fp, #-8]
   2f60c:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   2f610:	mov	r3, r0
   2f614:	mov	r0, r3
   2f618:	bl	2f5c8 <__assert_fail@plt+0x1e2a8>
   2f61c:	mov	r3, r0
   2f620:	mov	r0, r3
   2f624:	sub	sp, fp, #4
   2f628:	pop	{fp, pc}
   2f62c:	push	{fp, lr}
   2f630:	add	fp, sp, #4
   2f634:	sub	sp, sp, #8
   2f638:	str	r0, [fp, #-8]
   2f63c:	ldr	r0, [fp, #-8]
   2f640:	bl	315b0 <__assert_fail@plt+0x20290>
   2f644:	mov	r3, r0
   2f648:	mov	r0, r3
   2f64c:	bl	2f5c8 <__assert_fail@plt+0x1e2a8>
   2f650:	mov	r3, r0
   2f654:	mov	r0, r3
   2f658:	sub	sp, fp, #4
   2f65c:	pop	{fp, pc}
   2f660:	push	{fp, lr}
   2f664:	add	fp, sp, #4
   2f668:	sub	sp, sp, #8
   2f66c:	str	r0, [fp, #-8]
   2f670:	ldr	r0, [fp, #-8]
   2f674:	bl	2f5f8 <__assert_fail@plt+0x1e2d8>
   2f678:	mov	r3, r0
   2f67c:	mov	r0, r3
   2f680:	sub	sp, fp, #4
   2f684:	pop	{fp, pc}
   2f688:	push	{fp, lr}
   2f68c:	add	fp, sp, #4
   2f690:	sub	sp, sp, #16
   2f694:	str	r0, [fp, #-16]
   2f698:	str	r1, [fp, #-20]	; 0xffffffec
   2f69c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f6a0:	ldr	r0, [fp, #-16]
   2f6a4:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   2f6a8:	str	r0, [fp, #-8]
   2f6ac:	ldr	r3, [fp, #-8]
   2f6b0:	cmp	r3, #0
   2f6b4:	bne	2f6d4 <__assert_fail@plt+0x1e3b4>
   2f6b8:	ldr	r3, [fp, #-16]
   2f6bc:	cmp	r3, #0
   2f6c0:	beq	2f6d0 <__assert_fail@plt+0x1e3b0>
   2f6c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f6c8:	cmp	r3, #0
   2f6cc:	beq	2f6d4 <__assert_fail@plt+0x1e3b4>
   2f6d0:	bl	30114 <__assert_fail@plt+0x1edf4>
   2f6d4:	ldr	r3, [fp, #-8]
   2f6d8:	mov	r0, r3
   2f6dc:	sub	sp, fp, #4
   2f6e0:	pop	{fp, pc}
   2f6e4:	push	{fp, lr}
   2f6e8:	add	fp, sp, #4
   2f6ec:	sub	sp, sp, #8
   2f6f0:	str	r0, [fp, #-8]
   2f6f4:	str	r1, [fp, #-12]
   2f6f8:	ldr	r1, [fp, #-12]
   2f6fc:	ldr	r0, [fp, #-8]
   2f700:	bl	315dc <__assert_fail@plt+0x202bc>
   2f704:	mov	r3, r0
   2f708:	mov	r0, r3
   2f70c:	bl	2f5c8 <__assert_fail@plt+0x1e2a8>
   2f710:	mov	r3, r0
   2f714:	mov	r0, r3
   2f718:	sub	sp, fp, #4
   2f71c:	pop	{fp, pc}
   2f720:	push	{fp, lr}
   2f724:	add	fp, sp, #4
   2f728:	sub	sp, sp, #24
   2f72c:	str	r0, [fp, #-16]
   2f730:	str	r1, [fp, #-20]	; 0xffffffec
   2f734:	str	r2, [fp, #-24]	; 0xffffffe8
   2f738:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f73c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f740:	ldr	r0, [fp, #-16]
   2f744:	bl	317d0 <__assert_fail@plt+0x204b0>
   2f748:	str	r0, [fp, #-8]
   2f74c:	ldr	r3, [fp, #-8]
   2f750:	cmp	r3, #0
   2f754:	bne	2f780 <__assert_fail@plt+0x1e460>
   2f758:	ldr	r3, [fp, #-16]
   2f75c:	cmp	r3, #0
   2f760:	beq	2f77c <__assert_fail@plt+0x1e45c>
   2f764:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f768:	cmp	r3, #0
   2f76c:	beq	2f780 <__assert_fail@plt+0x1e460>
   2f770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f774:	cmp	r3, #0
   2f778:	beq	2f780 <__assert_fail@plt+0x1e460>
   2f77c:	bl	30114 <__assert_fail@plt+0x1edf4>
   2f780:	ldr	r3, [fp, #-8]
   2f784:	mov	r0, r3
   2f788:	sub	sp, fp, #4
   2f78c:	pop	{fp, pc}
   2f790:	push	{fp, lr}
   2f794:	add	fp, sp, #4
   2f798:	sub	sp, sp, #16
   2f79c:	str	r0, [fp, #-8]
   2f7a0:	str	r1, [fp, #-12]
   2f7a4:	str	r2, [fp, #-16]
   2f7a8:	ldr	r2, [fp, #-16]
   2f7ac:	ldr	r1, [fp, #-12]
   2f7b0:	ldr	r0, [fp, #-8]
   2f7b4:	bl	31664 <__assert_fail@plt+0x20344>
   2f7b8:	mov	r3, r0
   2f7bc:	mov	r0, r3
   2f7c0:	bl	2f5c8 <__assert_fail@plt+0x1e2a8>
   2f7c4:	mov	r3, r0
   2f7c8:	mov	r0, r3
   2f7cc:	sub	sp, fp, #4
   2f7d0:	pop	{fp, pc}
   2f7d4:	push	{fp, lr}
   2f7d8:	add	fp, sp, #4
   2f7dc:	sub	sp, sp, #8
   2f7e0:	str	r0, [fp, #-8]
   2f7e4:	str	r1, [fp, #-12]
   2f7e8:	ldr	r2, [fp, #-12]
   2f7ec:	ldr	r1, [fp, #-8]
   2f7f0:	mov	r0, #0
   2f7f4:	bl	2f720 <__assert_fail@plt+0x1e400>
   2f7f8:	mov	r3, r0
   2f7fc:	mov	r0, r3
   2f800:	sub	sp, fp, #4
   2f804:	pop	{fp, pc}
   2f808:	push	{fp, lr}
   2f80c:	add	fp, sp, #4
   2f810:	sub	sp, sp, #8
   2f814:	str	r0, [fp, #-8]
   2f818:	str	r1, [fp, #-12]
   2f81c:	ldr	r2, [fp, #-12]
   2f820:	ldr	r1, [fp, #-8]
   2f824:	mov	r0, #0
   2f828:	bl	2f790 <__assert_fail@plt+0x1e470>
   2f82c:	mov	r3, r0
   2f830:	mov	r0, r3
   2f834:	sub	sp, fp, #4
   2f838:	pop	{fp, pc}
   2f83c:	push	{fp, lr}
   2f840:	add	fp, sp, #4
   2f844:	sub	sp, sp, #8
   2f848:	str	r0, [fp, #-8]
   2f84c:	str	r1, [fp, #-12]
   2f850:	mov	r2, #1
   2f854:	ldr	r1, [fp, #-12]
   2f858:	ldr	r0, [fp, #-8]
   2f85c:	bl	2f870 <__assert_fail@plt+0x1e550>
   2f860:	mov	r3, r0
   2f864:	mov	r0, r3
   2f868:	sub	sp, fp, #4
   2f86c:	pop	{fp, pc}
   2f870:	push	{fp, lr}
   2f874:	add	fp, sp, #4
   2f878:	sub	sp, sp, #24
   2f87c:	str	r0, [fp, #-16]
   2f880:	str	r1, [fp, #-20]	; 0xffffffec
   2f884:	str	r2, [fp, #-24]	; 0xffffffe8
   2f888:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f88c:	ldr	r3, [r3]
   2f890:	str	r3, [fp, #-8]
   2f894:	ldr	r3, [fp, #-16]
   2f898:	cmp	r3, #0
   2f89c:	bne	2f8e8 <__assert_fail@plt+0x1e5c8>
   2f8a0:	ldr	r3, [fp, #-8]
   2f8a4:	cmp	r3, #0
   2f8a8:	bne	2f94c <__assert_fail@plt+0x1e62c>
   2f8ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f8b0:	mov	r0, #64	; 0x40
   2f8b4:	bl	31f78 <__assert_fail@plt+0x20c58>
   2f8b8:	mov	r3, r0
   2f8bc:	str	r3, [fp, #-8]
   2f8c0:	ldr	r3, [fp, #-8]
   2f8c4:	cmp	r3, #0
   2f8c8:	moveq	r3, #1
   2f8cc:	movne	r3, #0
   2f8d0:	uxtb	r3, r3
   2f8d4:	mov	r2, r3
   2f8d8:	ldr	r3, [fp, #-8]
   2f8dc:	add	r3, r2, r3
   2f8e0:	str	r3, [fp, #-8]
   2f8e4:	b	2f94c <__assert_fail@plt+0x1e62c>
   2f8e8:	ldr	r3, [fp, #-8]
   2f8ec:	lsr	r3, r3, #1
   2f8f0:	add	r3, r3, #1
   2f8f4:	mvn	r2, r3
   2f8f8:	ldr	r3, [fp, #-8]
   2f8fc:	cmp	r2, r3
   2f900:	bcs	2f924 <__assert_fail@plt+0x1e604>
   2f904:	ldr	r3, [fp, #-8]
   2f908:	lsr	r2, r3, #1
   2f90c:	ldr	r3, [fp, #-8]
   2f910:	add	r3, r2, r3
   2f914:	add	r3, r3, #1
   2f918:	str	r3, [fp, #-8]
   2f91c:	mov	r3, #1
   2f920:	b	2f940 <__assert_fail@plt+0x1e620>
   2f924:	ldr	r3, [fp, #-8]
   2f928:	lsr	r2, r3, #1
   2f92c:	ldr	r3, [fp, #-8]
   2f930:	add	r3, r2, r3
   2f934:	add	r3, r3, #1
   2f938:	str	r3, [fp, #-8]
   2f93c:	mov	r3, #0
   2f940:	cmp	r3, #0
   2f944:	beq	2f94c <__assert_fail@plt+0x1e62c>
   2f948:	bl	30114 <__assert_fail@plt+0x1edf4>
   2f94c:	ldr	r3, [fp, #-8]
   2f950:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f954:	mov	r1, r3
   2f958:	ldr	r0, [fp, #-16]
   2f95c:	bl	2f720 <__assert_fail@plt+0x1e400>
   2f960:	str	r0, [fp, #-16]
   2f964:	ldr	r2, [fp, #-8]
   2f968:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f96c:	str	r2, [r3]
   2f970:	ldr	r3, [fp, #-16]
   2f974:	mov	r0, r3
   2f978:	sub	sp, fp, #4
   2f97c:	pop	{fp, pc}
   2f980:	push	{fp, lr}
   2f984:	add	fp, sp, #4
   2f988:	sub	sp, sp, #32
   2f98c:	str	r0, [fp, #-24]	; 0xffffffe8
   2f990:	str	r1, [fp, #-28]	; 0xffffffe4
   2f994:	str	r2, [fp, #-32]	; 0xffffffe0
   2f998:	str	r3, [fp, #-36]	; 0xffffffdc
   2f99c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f9a0:	ldr	r3, [r3]
   2f9a4:	str	r3, [fp, #-8]
   2f9a8:	ldr	r3, [fp, #-8]
   2f9ac:	asr	r3, r3, #1
   2f9b0:	cmp	r3, #0
   2f9b4:	bge	2f9dc <__assert_fail@plt+0x1e6bc>
   2f9b8:	ldr	r3, [fp, #-8]
   2f9bc:	asr	r3, r3, #1
   2f9c0:	rsb	r2, r3, #-2147483648	; 0x80000000
   2f9c4:	ldr	r3, [fp, #-8]
   2f9c8:	cmp	r2, r3
   2f9cc:	movgt	r3, #1
   2f9d0:	movle	r3, #0
   2f9d4:	uxtb	r3, r3
   2f9d8:	b	2fa30 <__assert_fail@plt+0x1e710>
   2f9dc:	ldr	r3, [fp, #-8]
   2f9e0:	cmp	r3, #0
   2f9e4:	bge	2fa0c <__assert_fail@plt+0x1e6ec>
   2f9e8:	ldr	r3, [fp, #-8]
   2f9ec:	asr	r2, r3, #1
   2f9f0:	ldr	r3, [fp, #-8]
   2f9f4:	rsb	r3, r3, #-2147483648	; 0x80000000
   2f9f8:	cmp	r2, r3
   2f9fc:	movlt	r3, #1
   2fa00:	movge	r3, #0
   2fa04:	uxtb	r3, r3
   2fa08:	b	2fa30 <__assert_fail@plt+0x1e710>
   2fa0c:	ldr	r3, [fp, #-8]
   2fa10:	asr	r2, r3, #1
   2fa14:	mvn	r3, #-2147483648	; 0x80000000
   2fa18:	sub	r3, r3, r2
   2fa1c:	ldr	r2, [fp, #-8]
   2fa20:	cmp	r3, r2
   2fa24:	movlt	r3, #1
   2fa28:	movge	r3, #0
   2fa2c:	uxtb	r3, r3
   2fa30:	cmp	r3, #0
   2fa34:	beq	2fa58 <__assert_fail@plt+0x1e738>
   2fa38:	ldr	r3, [fp, #-8]
   2fa3c:	asr	r3, r3, #1
   2fa40:	mov	r2, r3
   2fa44:	ldr	r3, [fp, #-8]
   2fa48:	add	r3, r2, r3
   2fa4c:	str	r3, [fp, #-16]
   2fa50:	mov	r3, #1
   2fa54:	b	2fa74 <__assert_fail@plt+0x1e754>
   2fa58:	ldr	r3, [fp, #-8]
   2fa5c:	asr	r3, r3, #1
   2fa60:	mov	r2, r3
   2fa64:	ldr	r3, [fp, #-8]
   2fa68:	add	r3, r2, r3
   2fa6c:	str	r3, [fp, #-16]
   2fa70:	mov	r3, #0
   2fa74:	cmp	r3, #0
   2fa78:	beq	2fa84 <__assert_fail@plt+0x1e764>
   2fa7c:	mvn	r3, #-2147483648	; 0x80000000
   2fa80:	str	r3, [fp, #-16]
   2fa84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fa88:	cmp	r3, #0
   2fa8c:	blt	2faa8 <__assert_fail@plt+0x1e788>
   2fa90:	ldr	r3, [fp, #-16]
   2fa94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2fa98:	cmp	r2, r3
   2fa9c:	bge	2faa8 <__assert_fail@plt+0x1e788>
   2faa0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2faa4:	str	r3, [fp, #-16]
   2faa8:	ldr	r3, [fp, #4]
   2faac:	cmp	r3, #0
   2fab0:	bge	2fb40 <__assert_fail@plt+0x1e820>
   2fab4:	ldr	r3, [fp, #-16]
   2fab8:	cmp	r3, #0
   2fabc:	bge	2faec <__assert_fail@plt+0x1e7cc>
   2fac0:	ldr	r1, [fp, #4]
   2fac4:	mvn	r0, #-2147483648	; 0x80000000
   2fac8:	bl	32184 <__assert_fail@plt+0x20e64>
   2facc:	mov	r3, r0
   2fad0:	mov	r2, r3
   2fad4:	ldr	r3, [fp, #-16]
   2fad8:	cmp	r2, r3
   2fadc:	movgt	r3, #1
   2fae0:	movle	r3, #0
   2fae4:	uxtb	r3, r3
   2fae8:	b	2fbe0 <__assert_fail@plt+0x1e8c0>
   2faec:	ldr	r3, [fp, #4]
   2faf0:	cmn	r3, #1
   2faf4:	bne	2fb14 <__assert_fail@plt+0x1e7f4>
   2faf8:	ldr	r3, [fp, #-16]
   2fafc:	add	r3, r3, #-2147483648	; 0x80000000
   2fb00:	cmp	r3, #0
   2fb04:	movgt	r3, #1
   2fb08:	movle	r3, #0
   2fb0c:	uxtb	r3, r3
   2fb10:	b	2fbe0 <__assert_fail@plt+0x1e8c0>
   2fb14:	ldr	r1, [fp, #4]
   2fb18:	mov	r0, #-2147483648	; 0x80000000
   2fb1c:	bl	32184 <__assert_fail@plt+0x20e64>
   2fb20:	mov	r3, r0
   2fb24:	mov	r2, r3
   2fb28:	ldr	r3, [fp, #-16]
   2fb2c:	cmp	r2, r3
   2fb30:	movlt	r3, #1
   2fb34:	movge	r3, #0
   2fb38:	uxtb	r3, r3
   2fb3c:	b	2fbe0 <__assert_fail@plt+0x1e8c0>
   2fb40:	ldr	r3, [fp, #4]
   2fb44:	cmp	r3, #0
   2fb48:	beq	2fbdc <__assert_fail@plt+0x1e8bc>
   2fb4c:	ldr	r3, [fp, #-16]
   2fb50:	cmp	r3, #0
   2fb54:	bge	2fbb0 <__assert_fail@plt+0x1e890>
   2fb58:	ldr	r3, [fp, #-16]
   2fb5c:	cmn	r3, #1
   2fb60:	bne	2fb80 <__assert_fail@plt+0x1e860>
   2fb64:	ldr	r3, [fp, #4]
   2fb68:	add	r3, r3, #-2147483648	; 0x80000000
   2fb6c:	cmp	r3, #0
   2fb70:	movgt	r3, #1
   2fb74:	movle	r3, #0
   2fb78:	uxtb	r3, r3
   2fb7c:	b	2fbe0 <__assert_fail@plt+0x1e8c0>
   2fb80:	ldr	r3, [fp, #-16]
   2fb84:	mov	r1, r3
   2fb88:	mov	r0, #-2147483648	; 0x80000000
   2fb8c:	bl	32184 <__assert_fail@plt+0x20e64>
   2fb90:	mov	r3, r0
   2fb94:	mov	r2, r3
   2fb98:	ldr	r3, [fp, #4]
   2fb9c:	cmp	r2, r3
   2fba0:	movlt	r3, #1
   2fba4:	movge	r3, #0
   2fba8:	uxtb	r3, r3
   2fbac:	b	2fbe0 <__assert_fail@plt+0x1e8c0>
   2fbb0:	ldr	r1, [fp, #4]
   2fbb4:	mvn	r0, #-2147483648	; 0x80000000
   2fbb8:	bl	32184 <__assert_fail@plt+0x20e64>
   2fbbc:	mov	r3, r0
   2fbc0:	mov	r2, r3
   2fbc4:	ldr	r3, [fp, #-16]
   2fbc8:	cmp	r2, r3
   2fbcc:	movlt	r3, #1
   2fbd0:	movge	r3, #0
   2fbd4:	uxtb	r3, r3
   2fbd8:	b	2fbe0 <__assert_fail@plt+0x1e8c0>
   2fbdc:	mov	r3, #0
   2fbe0:	cmp	r3, #0
   2fbe4:	beq	2fc04 <__assert_fail@plt+0x1e8e4>
   2fbe8:	ldr	r3, [fp, #-16]
   2fbec:	mov	r2, r3
   2fbf0:	ldr	r3, [fp, #4]
   2fbf4:	mul	r3, r3, r2
   2fbf8:	str	r3, [fp, #-20]	; 0xffffffec
   2fbfc:	mov	r3, #1
   2fc00:	b	2fc1c <__assert_fail@plt+0x1e8fc>
   2fc04:	ldr	r3, [fp, #-16]
   2fc08:	mov	r2, r3
   2fc0c:	ldr	r3, [fp, #4]
   2fc10:	mul	r3, r3, r2
   2fc14:	str	r3, [fp, #-20]	; 0xffffffec
   2fc18:	mov	r3, #0
   2fc1c:	cmp	r3, #0
   2fc20:	beq	2fc2c <__assert_fail@plt+0x1e90c>
   2fc24:	mvn	r3, #-2147483648	; 0x80000000
   2fc28:	b	2fc44 <__assert_fail@plt+0x1e924>
   2fc2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fc30:	cmp	r3, #63	; 0x3f
   2fc34:	bgt	2fc40 <__assert_fail@plt+0x1e920>
   2fc38:	mov	r3, #64	; 0x40
   2fc3c:	b	2fc44 <__assert_fail@plt+0x1e924>
   2fc40:	mov	r3, #0
   2fc44:	str	r3, [fp, #-12]
   2fc48:	ldr	r3, [fp, #-12]
   2fc4c:	cmp	r3, #0
   2fc50:	beq	2fc8c <__assert_fail@plt+0x1e96c>
   2fc54:	ldr	r1, [fp, #4]
   2fc58:	ldr	r0, [fp, #-12]
   2fc5c:	bl	32184 <__assert_fail@plt+0x20e64>
   2fc60:	mov	r3, r0
   2fc64:	str	r3, [fp, #-16]
   2fc68:	ldr	r3, [fp, #-12]
   2fc6c:	ldr	r1, [fp, #4]
   2fc70:	mov	r0, r3
   2fc74:	bl	323a4 <__assert_fail@plt+0x21084>
   2fc78:	mov	r3, r1
   2fc7c:	mov	r2, r3
   2fc80:	ldr	r3, [fp, #-12]
   2fc84:	sub	r3, r3, r2
   2fc88:	str	r3, [fp, #-20]	; 0xffffffec
   2fc8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fc90:	cmp	r3, #0
   2fc94:	bne	2fca4 <__assert_fail@plt+0x1e984>
   2fc98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fc9c:	mov	r2, #0
   2fca0:	str	r2, [r3]
   2fca4:	ldr	r2, [fp, #-16]
   2fca8:	ldr	r3, [fp, #-8]
   2fcac:	sub	r2, r2, r3
   2fcb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fcb4:	cmp	r2, r3
   2fcb8:	bge	2fef0 <__assert_fail@plt+0x1ebd0>
   2fcbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fcc0:	cmp	r3, #0
   2fcc4:	bge	2fce8 <__assert_fail@plt+0x1e9c8>
   2fcc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fccc:	rsb	r2, r3, #-2147483648	; 0x80000000
   2fcd0:	ldr	r3, [fp, #-8]
   2fcd4:	cmp	r2, r3
   2fcd8:	movgt	r3, #1
   2fcdc:	movle	r3, #0
   2fce0:	uxtb	r3, r3
   2fce4:	b	2fd34 <__assert_fail@plt+0x1ea14>
   2fce8:	ldr	r3, [fp, #-8]
   2fcec:	cmp	r3, #0
   2fcf0:	bge	2fd14 <__assert_fail@plt+0x1e9f4>
   2fcf4:	ldr	r3, [fp, #-8]
   2fcf8:	rsb	r2, r3, #-2147483648	; 0x80000000
   2fcfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fd00:	cmp	r2, r3
   2fd04:	movgt	r3, #1
   2fd08:	movle	r3, #0
   2fd0c:	uxtb	r3, r3
   2fd10:	b	2fd34 <__assert_fail@plt+0x1ea14>
   2fd14:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2fd18:	mvn	r3, #-2147483648	; 0x80000000
   2fd1c:	sub	r3, r3, r2
   2fd20:	ldr	r2, [fp, #-8]
   2fd24:	cmp	r3, r2
   2fd28:	movlt	r3, #1
   2fd2c:	movge	r3, #0
   2fd30:	uxtb	r3, r3
   2fd34:	cmp	r3, #0
   2fd38:	beq	2fd50 <__assert_fail@plt+0x1ea30>
   2fd3c:	ldr	r2, [fp, #-8]
   2fd40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fd44:	add	r3, r2, r3
   2fd48:	str	r3, [fp, #-16]
   2fd4c:	b	2feec <__assert_fail@plt+0x1ebcc>
   2fd50:	ldr	r2, [fp, #-8]
   2fd54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fd58:	add	r3, r2, r3
   2fd5c:	str	r3, [fp, #-16]
   2fd60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fd64:	cmp	r3, #0
   2fd68:	blt	2fd7c <__assert_fail@plt+0x1ea5c>
   2fd6c:	ldr	r3, [fp, #-16]
   2fd70:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2fd74:	cmp	r2, r3
   2fd78:	blt	2feec <__assert_fail@plt+0x1ebcc>
   2fd7c:	ldr	r3, [fp, #4]
   2fd80:	cmp	r3, #0
   2fd84:	bge	2fe14 <__assert_fail@plt+0x1eaf4>
   2fd88:	ldr	r3, [fp, #-16]
   2fd8c:	cmp	r3, #0
   2fd90:	bge	2fdc0 <__assert_fail@plt+0x1eaa0>
   2fd94:	ldr	r1, [fp, #4]
   2fd98:	mvn	r0, #-2147483648	; 0x80000000
   2fd9c:	bl	32184 <__assert_fail@plt+0x20e64>
   2fda0:	mov	r3, r0
   2fda4:	mov	r2, r3
   2fda8:	ldr	r3, [fp, #-16]
   2fdac:	cmp	r2, r3
   2fdb0:	movgt	r3, #1
   2fdb4:	movle	r3, #0
   2fdb8:	uxtb	r3, r3
   2fdbc:	b	2feb4 <__assert_fail@plt+0x1eb94>
   2fdc0:	ldr	r3, [fp, #4]
   2fdc4:	cmn	r3, #1
   2fdc8:	bne	2fde8 <__assert_fail@plt+0x1eac8>
   2fdcc:	ldr	r3, [fp, #-16]
   2fdd0:	add	r3, r3, #-2147483648	; 0x80000000
   2fdd4:	cmp	r3, #0
   2fdd8:	movgt	r3, #1
   2fddc:	movle	r3, #0
   2fde0:	uxtb	r3, r3
   2fde4:	b	2feb4 <__assert_fail@plt+0x1eb94>
   2fde8:	ldr	r1, [fp, #4]
   2fdec:	mov	r0, #-2147483648	; 0x80000000
   2fdf0:	bl	32184 <__assert_fail@plt+0x20e64>
   2fdf4:	mov	r3, r0
   2fdf8:	mov	r2, r3
   2fdfc:	ldr	r3, [fp, #-16]
   2fe00:	cmp	r2, r3
   2fe04:	movlt	r3, #1
   2fe08:	movge	r3, #0
   2fe0c:	uxtb	r3, r3
   2fe10:	b	2feb4 <__assert_fail@plt+0x1eb94>
   2fe14:	ldr	r3, [fp, #4]
   2fe18:	cmp	r3, #0
   2fe1c:	beq	2feb0 <__assert_fail@plt+0x1eb90>
   2fe20:	ldr	r3, [fp, #-16]
   2fe24:	cmp	r3, #0
   2fe28:	bge	2fe84 <__assert_fail@plt+0x1eb64>
   2fe2c:	ldr	r3, [fp, #-16]
   2fe30:	cmn	r3, #1
   2fe34:	bne	2fe54 <__assert_fail@plt+0x1eb34>
   2fe38:	ldr	r3, [fp, #4]
   2fe3c:	add	r3, r3, #-2147483648	; 0x80000000
   2fe40:	cmp	r3, #0
   2fe44:	movgt	r3, #1
   2fe48:	movle	r3, #0
   2fe4c:	uxtb	r3, r3
   2fe50:	b	2feb4 <__assert_fail@plt+0x1eb94>
   2fe54:	ldr	r3, [fp, #-16]
   2fe58:	mov	r1, r3
   2fe5c:	mov	r0, #-2147483648	; 0x80000000
   2fe60:	bl	32184 <__assert_fail@plt+0x20e64>
   2fe64:	mov	r3, r0
   2fe68:	mov	r2, r3
   2fe6c:	ldr	r3, [fp, #4]
   2fe70:	cmp	r2, r3
   2fe74:	movlt	r3, #1
   2fe78:	movge	r3, #0
   2fe7c:	uxtb	r3, r3
   2fe80:	b	2feb4 <__assert_fail@plt+0x1eb94>
   2fe84:	ldr	r1, [fp, #4]
   2fe88:	mvn	r0, #-2147483648	; 0x80000000
   2fe8c:	bl	32184 <__assert_fail@plt+0x20e64>
   2fe90:	mov	r3, r0
   2fe94:	mov	r2, r3
   2fe98:	ldr	r3, [fp, #-16]
   2fe9c:	cmp	r2, r3
   2fea0:	movlt	r3, #1
   2fea4:	movge	r3, #0
   2fea8:	uxtb	r3, r3
   2feac:	b	2feb4 <__assert_fail@plt+0x1eb94>
   2feb0:	mov	r3, #0
   2feb4:	cmp	r3, #0
   2feb8:	beq	2fed4 <__assert_fail@plt+0x1ebb4>
   2febc:	ldr	r3, [fp, #-16]
   2fec0:	mov	r2, r3
   2fec4:	ldr	r3, [fp, #4]
   2fec8:	mul	r3, r3, r2
   2fecc:	str	r3, [fp, #-20]	; 0xffffffec
   2fed0:	b	2feec <__assert_fail@plt+0x1ebcc>
   2fed4:	ldr	r3, [fp, #-16]
   2fed8:	mov	r2, r3
   2fedc:	ldr	r3, [fp, #4]
   2fee0:	mul	r3, r3, r2
   2fee4:	str	r3, [fp, #-20]	; 0xffffffec
   2fee8:	b	2fef0 <__assert_fail@plt+0x1ebd0>
   2feec:	bl	30114 <__assert_fail@plt+0x1edf4>
   2fef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fef4:	mov	r1, r3
   2fef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fefc:	bl	2f688 <__assert_fail@plt+0x1e368>
   2ff00:	str	r0, [fp, #-24]	; 0xffffffe8
   2ff04:	ldr	r2, [fp, #-16]
   2ff08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ff0c:	str	r2, [r3]
   2ff10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ff14:	mov	r0, r3
   2ff18:	sub	sp, fp, #4
   2ff1c:	pop	{fp, pc}
   2ff20:	push	{fp, lr}
   2ff24:	add	fp, sp, #4
   2ff28:	sub	sp, sp, #8
   2ff2c:	str	r0, [fp, #-8]
   2ff30:	mov	r1, #1
   2ff34:	ldr	r0, [fp, #-8]
   2ff38:	bl	2ff78 <__assert_fail@plt+0x1ec58>
   2ff3c:	mov	r3, r0
   2ff40:	mov	r0, r3
   2ff44:	sub	sp, fp, #4
   2ff48:	pop	{fp, pc}
   2ff4c:	push	{fp, lr}
   2ff50:	add	fp, sp, #4
   2ff54:	sub	sp, sp, #8
   2ff58:	str	r0, [fp, #-8]
   2ff5c:	mov	r1, #1
   2ff60:	ldr	r0, [fp, #-8]
   2ff64:	bl	2ffb4 <__assert_fail@plt+0x1ec94>
   2ff68:	mov	r3, r0
   2ff6c:	mov	r0, r3
   2ff70:	sub	sp, fp, #4
   2ff74:	pop	{fp, pc}
   2ff78:	push	{fp, lr}
   2ff7c:	add	fp, sp, #4
   2ff80:	sub	sp, sp, #8
   2ff84:	str	r0, [fp, #-8]
   2ff88:	str	r1, [fp, #-12]
   2ff8c:	ldr	r1, [fp, #-12]
   2ff90:	ldr	r0, [fp, #-8]
   2ff94:	bl	30c58 <__assert_fail@plt+0x1f938>
   2ff98:	mov	r3, r0
   2ff9c:	mov	r0, r3
   2ffa0:	bl	2f5c8 <__assert_fail@plt+0x1e2a8>
   2ffa4:	mov	r3, r0
   2ffa8:	mov	r0, r3
   2ffac:	sub	sp, fp, #4
   2ffb0:	pop	{fp, pc}
   2ffb4:	push	{fp, lr}
   2ffb8:	add	fp, sp, #4
   2ffbc:	sub	sp, sp, #8
   2ffc0:	str	r0, [fp, #-8]
   2ffc4:	str	r1, [fp, #-12]
   2ffc8:	ldr	r1, [fp, #-12]
   2ffcc:	ldr	r0, [fp, #-8]
   2ffd0:	bl	3162c <__assert_fail@plt+0x2030c>
   2ffd4:	mov	r3, r0
   2ffd8:	mov	r0, r3
   2ffdc:	bl	2f5c8 <__assert_fail@plt+0x1e2a8>
   2ffe0:	mov	r3, r0
   2ffe4:	mov	r0, r3
   2ffe8:	sub	sp, fp, #4
   2ffec:	pop	{fp, pc}
   2fff0:	push	{fp, lr}
   2fff4:	add	fp, sp, #4
   2fff8:	sub	sp, sp, #8
   2fffc:	str	r0, [fp, #-8]
   30000:	str	r1, [fp, #-12]
   30004:	ldr	r0, [fp, #-12]
   30008:	bl	2f5f8 <__assert_fail@plt+0x1e2d8>
   3000c:	mov	r3, r0
   30010:	ldr	r2, [fp, #-12]
   30014:	ldr	r1, [fp, #-8]
   30018:	mov	r0, r3
   3001c:	bl	110a4 <memcpy@plt>
   30020:	mov	r3, r0
   30024:	mov	r0, r3
   30028:	sub	sp, fp, #4
   3002c:	pop	{fp, pc}
   30030:	push	{fp, lr}
   30034:	add	fp, sp, #4
   30038:	sub	sp, sp, #8
   3003c:	str	r0, [fp, #-8]
   30040:	str	r1, [fp, #-12]
   30044:	ldr	r0, [fp, #-12]
   30048:	bl	2f62c <__assert_fail@plt+0x1e30c>
   3004c:	mov	r3, r0
   30050:	mov	r0, r3
   30054:	ldr	r3, [fp, #-12]
   30058:	mov	r2, r3
   3005c:	ldr	r1, [fp, #-8]
   30060:	bl	110a4 <memcpy@plt>
   30064:	mov	r3, r0
   30068:	mov	r0, r3
   3006c:	sub	sp, fp, #4
   30070:	pop	{fp, pc}
   30074:	push	{fp, lr}
   30078:	add	fp, sp, #4
   3007c:	sub	sp, sp, #16
   30080:	str	r0, [fp, #-16]
   30084:	str	r1, [fp, #-20]	; 0xffffffec
   30088:	ldr	r3, [fp, #-20]	; 0xffffffec
   3008c:	add	r3, r3, #1
   30090:	mov	r0, r3
   30094:	bl	2f62c <__assert_fail@plt+0x1e30c>
   30098:	mov	r3, r0
   3009c:	str	r3, [fp, #-8]
   300a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   300a4:	ldr	r2, [fp, #-8]
   300a8:	add	r3, r2, r3
   300ac:	mov	r2, #0
   300b0:	strb	r2, [r3]
   300b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   300b8:	mov	r2, r3
   300bc:	ldr	r1, [fp, #-16]
   300c0:	ldr	r0, [fp, #-8]
   300c4:	bl	110a4 <memcpy@plt>
   300c8:	mov	r3, r0
   300cc:	mov	r0, r3
   300d0:	sub	sp, fp, #4
   300d4:	pop	{fp, pc}
   300d8:	push	{fp, lr}
   300dc:	add	fp, sp, #4
   300e0:	sub	sp, sp, #8
   300e4:	str	r0, [fp, #-8]
   300e8:	ldr	r0, [fp, #-8]
   300ec:	bl	11200 <strlen@plt>
   300f0:	mov	r3, r0
   300f4:	add	r3, r3, #1
   300f8:	mov	r1, r3
   300fc:	ldr	r0, [fp, #-8]
   30100:	bl	2fff0 <__assert_fail@plt+0x1ecd0>
   30104:	mov	r3, r0
   30108:	mov	r0, r3
   3010c:	sub	sp, fp, #4
   30110:	pop	{fp, pc}
   30114:	push	{r4, r5, fp, lr}
   30118:	add	fp, sp, #12
   3011c:	ldr	r3, [pc, #32]	; 30144 <__assert_fail@plt+0x1ee24>
   30120:	ldr	r4, [r3]
   30124:	ldr	r0, [pc, #28]	; 30148 <__assert_fail@plt+0x1ee28>
   30128:	bl	111f4 <gettext@plt>
   3012c:	mov	r3, r0
   30130:	ldr	r2, [pc, #20]	; 3014c <__assert_fail@plt+0x1ee2c>
   30134:	mov	r1, #0
   30138:	mov	r0, r4
   3013c:	bl	11194 <error@plt>
   30140:	bl	112fc <abort@plt>
   30144:	andeq	r4, r4, r4, ror r1
   30148:	ldrdeq	r3, [r3], -r8
   3014c:	andeq	r3, r3, ip, ror #19
   30150:	push	{r4, r5, fp, lr}
   30154:	add	fp, sp, #12
   30158:	sub	sp, sp, #40	; 0x28
   3015c:	str	r0, [fp, #-32]	; 0xffffffe0
   30160:	str	r1, [fp, #-36]	; 0xffffffdc
   30164:	strd	r2, [fp, #-44]	; 0xffffffd4
   30168:	sub	r2, fp, #28
   3016c:	ldr	r3, [fp, #12]
   30170:	str	r3, [sp]
   30174:	mov	r3, r2
   30178:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3017c:	mov	r1, #0
   30180:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30184:	bl	30684 <__assert_fail@plt+0x1f364>
   30188:	str	r0, [fp, #-16]
   3018c:	ldr	r3, [fp, #-16]
   30190:	cmp	r3, #0
   30194:	bne	30234 <__assert_fail@plt+0x1ef14>
   30198:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   3019c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   301a0:	cmp	r0, r2
   301a4:	sbcs	r3, r1, r3
   301a8:	blt	301c0 <__assert_fail@plt+0x1eea0>
   301ac:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   301b0:	ldrd	r0, [fp, #4]
   301b4:	cmp	r0, r2
   301b8:	sbcs	r3, r1, r3
   301bc:	bge	30270 <__assert_fail@plt+0x1ef50>
   301c0:	mov	r3, #1
   301c4:	str	r3, [fp, #-16]
   301c8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   301cc:	mvn	r0, #-1073741824	; 0xc0000000
   301d0:	mov	r1, #0
   301d4:	cmp	r0, r2
   301d8:	sbcs	r3, r1, r3
   301dc:	bge	301f4 <__assert_fail@plt+0x1eed4>
   301e0:	bl	11224 <__errno_location@plt>
   301e4:	mov	r2, r0
   301e8:	mov	r3, #75	; 0x4b
   301ec:	str	r3, [r2]
   301f0:	b	30270 <__assert_fail@plt+0x1ef50>
   301f4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   301f8:	mov	r0, #-1073741824	; 0xc0000000
   301fc:	mvn	r1, #0
   30200:	cmp	r2, r0
   30204:	sbcs	r3, r3, r1
   30208:	bge	30220 <__assert_fail@plt+0x1ef00>
   3020c:	bl	11224 <__errno_location@plt>
   30210:	mov	r2, r0
   30214:	mov	r3, #75	; 0x4b
   30218:	str	r3, [r2]
   3021c:	b	30270 <__assert_fail@plt+0x1ef50>
   30220:	bl	11224 <__errno_location@plt>
   30224:	mov	r2, r0
   30228:	mov	r3, #34	; 0x22
   3022c:	str	r3, [r2]
   30230:	b	30270 <__assert_fail@plt+0x1ef50>
   30234:	ldr	r3, [fp, #-16]
   30238:	cmp	r3, #1
   3023c:	bne	30254 <__assert_fail@plt+0x1ef34>
   30240:	bl	11224 <__errno_location@plt>
   30244:	mov	r2, r0
   30248:	mov	r3, #75	; 0x4b
   3024c:	str	r3, [r2]
   30250:	b	30270 <__assert_fail@plt+0x1ef50>
   30254:	ldr	r3, [fp, #-16]
   30258:	cmp	r3, #3
   3025c:	bne	30270 <__assert_fail@plt+0x1ef50>
   30260:	bl	11224 <__errno_location@plt>
   30264:	mov	r2, r0
   30268:	mov	r3, #0
   3026c:	str	r3, [r2]
   30270:	ldr	r3, [fp, #-16]
   30274:	cmp	r3, #0
   30278:	beq	302e0 <__assert_fail@plt+0x1efc0>
   3027c:	ldr	r3, [fp, #20]
   30280:	cmp	r3, #0
   30284:	beq	30290 <__assert_fail@plt+0x1ef70>
   30288:	ldr	r4, [fp, #20]
   3028c:	b	30294 <__assert_fail@plt+0x1ef74>
   30290:	mov	r4, #1
   30294:	bl	11224 <__errno_location@plt>
   30298:	mov	r3, r0
   3029c:	ldr	r3, [r3]
   302a0:	cmp	r3, #22
   302a4:	beq	302b8 <__assert_fail@plt+0x1ef98>
   302a8:	bl	11224 <__errno_location@plt>
   302ac:	mov	r3, r0
   302b0:	ldr	r5, [r3]
   302b4:	b	302bc <__assert_fail@plt+0x1ef9c>
   302b8:	mov	r5, #0
   302bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   302c0:	bl	15b1c <__assert_fail@plt+0x47fc>
   302c4:	mov	r3, r0
   302c8:	str	r3, [sp]
   302cc:	ldr	r3, [fp, #16]
   302d0:	ldr	r2, [pc, #28]	; 302f4 <__assert_fail@plt+0x1efd4>
   302d4:	mov	r1, r5
   302d8:	mov	r0, r4
   302dc:	bl	11194 <error@plt>
   302e0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   302e4:	mov	r0, r2
   302e8:	mov	r1, r3
   302ec:	sub	sp, fp, #12
   302f0:	pop	{r4, r5, fp, pc}
   302f4:	strdeq	r3, [r3], -r0
   302f8:	push	{fp, lr}
   302fc:	add	fp, sp, #4
   30300:	sub	sp, sp, #40	; 0x28
   30304:	str	r0, [fp, #-8]
   30308:	strd	r2, [fp, #-20]	; 0xffffffec
   3030c:	ldr	r3, [fp, #20]
   30310:	str	r3, [sp, #16]
   30314:	ldr	r3, [fp, #16]
   30318:	str	r3, [sp, #12]
   3031c:	ldr	r3, [fp, #12]
   30320:	str	r3, [sp, #8]
   30324:	ldrd	r2, [fp, #4]
   30328:	strd	r2, [sp]
   3032c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   30330:	mov	r1, #10
   30334:	ldr	r0, [fp, #-8]
   30338:	bl	30150 <__assert_fail@plt+0x1ee30>
   3033c:	mov	r2, r0
   30340:	mov	r3, r1
   30344:	mov	r0, r2
   30348:	mov	r1, r3
   3034c:	sub	sp, fp, #4
   30350:	pop	{fp, pc}
   30354:	push	{r4, r5, fp, lr}
   30358:	add	fp, sp, #12
   3035c:	sub	sp, sp, #16
   30360:	str	r0, [fp, #-24]	; 0xffffffe8
   30364:	str	r1, [fp, #-28]	; 0xffffffe4
   30368:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3036c:	cmp	r3, #0
   30370:	bge	30444 <__assert_fail@plt+0x1f124>
   30374:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30378:	ldrd	r2, [r3]
   3037c:	cmp	r2, #0
   30380:	sbcs	r3, r3, #0
   30384:	bge	303c8 <__assert_fail@plt+0x1f0a8>
   30388:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3038c:	ldrd	r4, [r3]
   30390:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30394:	mov	r2, r3
   30398:	asr	r3, r2, #31
   3039c:	mvn	r0, #0
   303a0:	mvn	r1, #-2147483648	; 0x80000000
   303a4:	bl	323c4 <__assert_fail@plt+0x210a4>
   303a8:	mov	r2, r0
   303ac:	mov	r3, r1
   303b0:	cmp	r4, r2
   303b4:	sbcs	r3, r5, r3
   303b8:	movlt	r3, #1
   303bc:	movge	r3, #0
   303c0:	uxtb	r3, r3
   303c4:	b	30540 <__assert_fail@plt+0x1f220>
   303c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   303cc:	cmn	r3, #1
   303d0:	bne	303fc <__assert_fail@plt+0x1f0dc>
   303d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   303d8:	ldrd	r2, [r3]
   303dc:	adds	r2, r2, #0
   303e0:	adc	r3, r3, #-2147483648	; 0x80000000
   303e4:	cmp	r2, #1
   303e8:	sbcs	r3, r3, #0
   303ec:	movge	r3, #1
   303f0:	movlt	r3, #0
   303f4:	uxtb	r3, r3
   303f8:	b	30540 <__assert_fail@plt+0x1f220>
   303fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30400:	mov	r2, r3
   30404:	asr	r3, r2, #31
   30408:	mov	r0, #0
   3040c:	mov	r1, #-2147483648	; 0x80000000
   30410:	bl	323c4 <__assert_fail@plt+0x210a4>
   30414:	mov	r2, r0
   30418:	mov	r3, r1
   3041c:	mov	r0, r2
   30420:	mov	r1, r3
   30424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30428:	ldrd	r2, [r3]
   3042c:	cmp	r0, r2
   30430:	sbcs	r3, r1, r3
   30434:	movlt	r3, #1
   30438:	movge	r3, #0
   3043c:	uxtb	r3, r3
   30440:	b	30540 <__assert_fail@plt+0x1f220>
   30444:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30448:	cmp	r3, #0
   3044c:	beq	3053c <__assert_fail@plt+0x1f21c>
   30450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30454:	ldrd	r2, [r3]
   30458:	cmp	r2, #0
   3045c:	sbcs	r3, r3, #0
   30460:	bge	304f4 <__assert_fail@plt+0x1f1d4>
   30464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30468:	ldrd	r2, [r3]
   3046c:	mvn	r0, #0
   30470:	mvn	r1, #0
   30474:	cmp	r3, r1
   30478:	cmpeq	r2, r0
   3047c:	bne	304ac <__assert_fail@plt+0x1f18c>
   30480:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30484:	mov	r2, r3
   30488:	asr	r3, r2, #31
   3048c:	adds	r2, r2, #0
   30490:	adc	r3, r3, #-2147483648	; 0x80000000
   30494:	cmp	r2, #1
   30498:	sbcs	r3, r3, #0
   3049c:	movge	r3, #1
   304a0:	movlt	r3, #0
   304a4:	uxtb	r3, r3
   304a8:	b	30540 <__assert_fail@plt+0x1f220>
   304ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   304b0:	ldrd	r2, [r3]
   304b4:	mov	r0, #0
   304b8:	mov	r1, #-2147483648	; 0x80000000
   304bc:	bl	323c4 <__assert_fail@plt+0x210a4>
   304c0:	mov	r2, r0
   304c4:	mov	r3, r1
   304c8:	mov	r0, r2
   304cc:	mov	r1, r3
   304d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   304d4:	mov	r2, r3
   304d8:	asr	r3, r2, #31
   304dc:	cmp	r0, r2
   304e0:	sbcs	r3, r1, r3
   304e4:	movlt	r3, #1
   304e8:	movge	r3, #0
   304ec:	uxtb	r3, r3
   304f0:	b	30540 <__assert_fail@plt+0x1f220>
   304f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   304f8:	mov	r2, r3
   304fc:	asr	r3, r2, #31
   30500:	mvn	r0, #0
   30504:	mvn	r1, #-2147483648	; 0x80000000
   30508:	bl	323c4 <__assert_fail@plt+0x210a4>
   3050c:	mov	r2, r0
   30510:	mov	r3, r1
   30514:	mov	r0, r2
   30518:	mov	r1, r3
   3051c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30520:	ldrd	r2, [r3]
   30524:	cmp	r0, r2
   30528:	sbcs	r3, r1, r3
   3052c:	movlt	r3, #1
   30530:	movge	r3, #0
   30534:	uxtb	r3, r3
   30538:	b	30540 <__assert_fail@plt+0x1f220>
   3053c:	mov	r3, #0
   30540:	cmp	r3, #0
   30544:	beq	30588 <__assert_fail@plt+0x1f268>
   30548:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3054c:	ldrd	r2, [r3]
   30550:	mov	r0, r2
   30554:	mov	r1, r3
   30558:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3055c:	mov	r2, r3
   30560:	asr	r3, r2, #31
   30564:	mul	lr, r2, r1
   30568:	mul	ip, r0, r3
   3056c:	add	ip, lr, ip
   30570:	umull	r2, r3, r0, r2
   30574:	add	r1, ip, r3
   30578:	mov	r3, r1
   3057c:	strd	r2, [fp, #-20]	; 0xffffffec
   30580:	mov	r3, #1
   30584:	b	305c4 <__assert_fail@plt+0x1f2a4>
   30588:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3058c:	ldrd	r2, [r3]
   30590:	mov	r0, r2
   30594:	mov	r1, r3
   30598:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3059c:	mov	r2, r3
   305a0:	asr	r3, r2, #31
   305a4:	mul	lr, r2, r1
   305a8:	mul	ip, r0, r3
   305ac:	add	ip, lr, ip
   305b0:	umull	r2, r3, r0, r2
   305b4:	add	r1, ip, r3
   305b8:	mov	r3, r1
   305bc:	strd	r2, [fp, #-20]	; 0xffffffec
   305c0:	mov	r3, #0
   305c4:	cmp	r3, #0
   305c8:	beq	30604 <__assert_fail@plt+0x1f2e4>
   305cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   305d0:	ldrd	r2, [r3]
   305d4:	cmp	r2, #0
   305d8:	sbcs	r3, r3, #0
   305dc:	bge	305ec <__assert_fail@plt+0x1f2cc>
   305e0:	mov	r2, #0
   305e4:	mov	r3, #-2147483648	; 0x80000000
   305e8:	b	305f4 <__assert_fail@plt+0x1f2d4>
   305ec:	mvn	r2, #0
   305f0:	mvn	r3, #-2147483648	; 0x80000000
   305f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   305f8:	strd	r2, [r1]
   305fc:	mov	r3, #1
   30600:	b	30614 <__assert_fail@plt+0x1f2f4>
   30604:	ldrd	r2, [fp, #-20]	; 0xffffffec
   30608:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3060c:	strd	r2, [r1]
   30610:	mov	r3, #0
   30614:	mov	r0, r3
   30618:	sub	sp, fp, #12
   3061c:	pop	{r4, r5, fp, pc}
   30620:	push	{fp, lr}
   30624:	add	fp, sp, #4
   30628:	sub	sp, sp, #24
   3062c:	str	r0, [fp, #-16]
   30630:	str	r1, [fp, #-20]	; 0xffffffec
   30634:	str	r2, [fp, #-24]	; 0xffffffe8
   30638:	mov	r3, #0
   3063c:	str	r3, [fp, #-8]
   30640:	b	30660 <__assert_fail@plt+0x1f340>
   30644:	ldr	r1, [fp, #-20]	; 0xffffffec
   30648:	ldr	r0, [fp, #-16]
   3064c:	bl	30354 <__assert_fail@plt+0x1f034>
   30650:	mov	r2, r0
   30654:	ldr	r3, [fp, #-8]
   30658:	orr	r3, r3, r2
   3065c:	str	r3, [fp, #-8]
   30660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30664:	sub	r2, r3, #1
   30668:	str	r2, [fp, #-24]	; 0xffffffe8
   3066c:	cmp	r3, #0
   30670:	bne	30644 <__assert_fail@plt+0x1f324>
   30674:	ldr	r3, [fp, #-8]
   30678:	mov	r0, r3
   3067c:	sub	sp, fp, #4
   30680:	pop	{fp, pc}
   30684:	push	{fp, lr}
   30688:	add	fp, sp, #4
   3068c:	sub	sp, sp, #48	; 0x30
   30690:	str	r0, [fp, #-40]	; 0xffffffd8
   30694:	str	r1, [fp, #-44]	; 0xffffffd4
   30698:	str	r2, [fp, #-48]	; 0xffffffd0
   3069c:	str	r3, [fp, #-52]	; 0xffffffcc
   306a0:	mov	r3, #0
   306a4:	str	r3, [fp, #-8]
   306a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   306ac:	cmp	r3, #0
   306b0:	blt	306c0 <__assert_fail@plt+0x1f3a0>
   306b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   306b8:	cmp	r3, #36	; 0x24
   306bc:	ble	306d4 <__assert_fail@plt+0x1f3b4>
   306c0:	ldr	r3, [pc, #1412]	; 30c4c <__assert_fail@plt+0x1f92c>
   306c4:	mov	r2, #85	; 0x55
   306c8:	ldr	r1, [pc, #1408]	; 30c50 <__assert_fail@plt+0x1f930>
   306cc:	ldr	r0, [pc, #1408]	; 30c54 <__assert_fail@plt+0x1f934>
   306d0:	bl	11320 <__assert_fail@plt>
   306d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   306d8:	cmp	r3, #0
   306dc:	bne	306e8 <__assert_fail@plt+0x1f3c8>
   306e0:	sub	r3, fp, #28
   306e4:	b	306ec <__assert_fail@plt+0x1f3cc>
   306e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   306ec:	str	r3, [fp, #-24]	; 0xffffffe8
   306f0:	bl	11224 <__errno_location@plt>
   306f4:	mov	r2, r0
   306f8:	mov	r3, #0
   306fc:	str	r3, [r2]
   30700:	ldr	r2, [fp, #-48]	; 0xffffffd0
   30704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30708:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3070c:	bl	1126c <strtoimax@plt>
   30710:	mov	r2, r0
   30714:	mov	r3, r1
   30718:	strd	r2, [fp, #-36]	; 0xffffffdc
   3071c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30720:	ldr	r2, [r3]
   30724:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30728:	cmp	r2, r3
   3072c:	bne	3078c <__assert_fail@plt+0x1f46c>
   30730:	ldr	r3, [fp, #4]
   30734:	cmp	r3, #0
   30738:	beq	30784 <__assert_fail@plt+0x1f464>
   3073c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30740:	ldr	r3, [r3]
   30744:	ldrb	r3, [r3]
   30748:	cmp	r3, #0
   3074c:	beq	30784 <__assert_fail@plt+0x1f464>
   30750:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30754:	ldr	r3, [r3]
   30758:	ldrb	r3, [r3]
   3075c:	mov	r1, r3
   30760:	ldr	r0, [fp, #4]
   30764:	bl	1120c <strchr@plt>
   30768:	mov	r3, r0
   3076c:	cmp	r3, #0
   30770:	beq	30784 <__assert_fail@plt+0x1f464>
   30774:	mov	r2, #1
   30778:	mov	r3, #0
   3077c:	strd	r2, [fp, #-36]	; 0xffffffdc
   30780:	b	307c4 <__assert_fail@plt+0x1f4a4>
   30784:	mov	r3, #4
   30788:	b	30c40 <__assert_fail@plt+0x1f920>
   3078c:	bl	11224 <__errno_location@plt>
   30790:	mov	r3, r0
   30794:	ldr	r3, [r3]
   30798:	cmp	r3, #0
   3079c:	beq	307c4 <__assert_fail@plt+0x1f4a4>
   307a0:	bl	11224 <__errno_location@plt>
   307a4:	mov	r3, r0
   307a8:	ldr	r3, [r3]
   307ac:	cmp	r3, #34	; 0x22
   307b0:	beq	307bc <__assert_fail@plt+0x1f49c>
   307b4:	mov	r3, #4
   307b8:	b	30c40 <__assert_fail@plt+0x1f920>
   307bc:	mov	r3, #1
   307c0:	str	r3, [fp, #-8]
   307c4:	ldr	r3, [fp, #4]
   307c8:	cmp	r3, #0
   307cc:	bne	307e4 <__assert_fail@plt+0x1f4c4>
   307d0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   307d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   307d8:	strd	r2, [r1]
   307dc:	ldr	r3, [fp, #-8]
   307e0:	b	30c40 <__assert_fail@plt+0x1f920>
   307e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   307e8:	ldr	r3, [r3]
   307ec:	ldrb	r3, [r3]
   307f0:	cmp	r3, #0
   307f4:	beq	30c30 <__assert_fail@plt+0x1f910>
   307f8:	mov	r3, #1024	; 0x400
   307fc:	str	r3, [fp, #-12]
   30800:	mov	r3, #1
   30804:	str	r3, [fp, #-16]
   30808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3080c:	ldr	r3, [r3]
   30810:	ldrb	r3, [r3]
   30814:	mov	r1, r3
   30818:	ldr	r0, [fp, #4]
   3081c:	bl	1120c <strchr@plt>
   30820:	mov	r3, r0
   30824:	cmp	r3, #0
   30828:	bne	30844 <__assert_fail@plt+0x1f524>
   3082c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   30830:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30834:	strd	r2, [r1]
   30838:	ldr	r3, [fp, #-8]
   3083c:	orr	r3, r3, #2
   30840:	b	30c40 <__assert_fail@plt+0x1f920>
   30844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30848:	ldr	r3, [r3]
   3084c:	ldrb	r3, [r3]
   30850:	sub	r3, r3, #69	; 0x45
   30854:	cmp	r3, #47	; 0x2f
   30858:	ldrls	pc, [pc, r3, lsl #2]
   3085c:	b	309a8 <__assert_fail@plt+0x1f688>
   30860:	andeq	r0, r3, r0, lsr #18
   30864:	andeq	r0, r3, r8, lsr #19
   30868:	andeq	r0, r3, r0, lsr #18
   3086c:	andeq	r0, r3, r8, lsr #19
   30870:	andeq	r0, r3, r8, lsr #19
   30874:	andeq	r0, r3, r8, lsr #19
   30878:	andeq	r0, r3, r0, lsr #18
   3087c:	andeq	r0, r3, r8, lsr #19
   30880:	andeq	r0, r3, r0, lsr #18
   30884:	andeq	r0, r3, r8, lsr #19
   30888:	andeq	r0, r3, r8, lsr #19
   3088c:	andeq	r0, r3, r0, lsr #18
   30890:	andeq	r0, r3, r8, lsr #19
   30894:	andeq	r0, r3, r8, lsr #19
   30898:	andeq	r0, r3, r8, lsr #19
   3089c:	andeq	r0, r3, r0, lsr #18
   308a0:	andeq	r0, r3, r8, lsr #19
   308a4:	andeq	r0, r3, r8, lsr #19
   308a8:	andeq	r0, r3, r8, lsr #19
   308ac:	andeq	r0, r3, r8, lsr #19
   308b0:	andeq	r0, r3, r0, lsr #18
   308b4:	andeq	r0, r3, r0, lsr #18
   308b8:	andeq	r0, r3, r8, lsr #19
   308bc:	andeq	r0, r3, r8, lsr #19
   308c0:	andeq	r0, r3, r8, lsr #19
   308c4:	andeq	r0, r3, r8, lsr #19
   308c8:	andeq	r0, r3, r8, lsr #19
   308cc:	andeq	r0, r3, r8, lsr #19
   308d0:	andeq	r0, r3, r8, lsr #19
   308d4:	andeq	r0, r3, r8, lsr #19
   308d8:	andeq	r0, r3, r8, lsr #19
   308dc:	andeq	r0, r3, r8, lsr #19
   308e0:	andeq	r0, r3, r8, lsr #19
   308e4:	andeq	r0, r3, r8, lsr #19
   308e8:	andeq	r0, r3, r0, lsr #18
   308ec:	andeq	r0, r3, r8, lsr #19
   308f0:	andeq	r0, r3, r8, lsr #19
   308f4:	andeq	r0, r3, r8, lsr #19
   308f8:	andeq	r0, r3, r0, lsr #18
   308fc:	andeq	r0, r3, r8, lsr #19
   30900:	andeq	r0, r3, r0, lsr #18
   30904:	andeq	r0, r3, r8, lsr #19
   30908:	andeq	r0, r3, r8, lsr #19
   3090c:	andeq	r0, r3, r8, lsr #19
   30910:	andeq	r0, r3, r8, lsr #19
   30914:	andeq	r0, r3, r8, lsr #19
   30918:	andeq	r0, r3, r8, lsr #19
   3091c:	andeq	r0, r3, r0, lsr #18
   30920:	mov	r1, #48	; 0x30
   30924:	ldr	r0, [fp, #4]
   30928:	bl	1120c <strchr@plt>
   3092c:	mov	r3, r0
   30930:	cmp	r3, #0
   30934:	beq	309a8 <__assert_fail@plt+0x1f688>
   30938:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3093c:	ldr	r3, [r3]
   30940:	add	r3, r3, #1
   30944:	ldrb	r3, [r3]
   30948:	cmp	r3, #68	; 0x44
   3094c:	beq	3098c <__assert_fail@plt+0x1f66c>
   30950:	cmp	r3, #105	; 0x69
   30954:	beq	30964 <__assert_fail@plt+0x1f644>
   30958:	cmp	r3, #66	; 0x42
   3095c:	beq	3098c <__assert_fail@plt+0x1f66c>
   30960:	b	309a8 <__assert_fail@plt+0x1f688>
   30964:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30968:	ldr	r3, [r3]
   3096c:	add	r3, r3, #2
   30970:	ldrb	r3, [r3]
   30974:	cmp	r3, #66	; 0x42
   30978:	bne	309a4 <__assert_fail@plt+0x1f684>
   3097c:	ldr	r3, [fp, #-16]
   30980:	add	r3, r3, #2
   30984:	str	r3, [fp, #-16]
   30988:	b	309a4 <__assert_fail@plt+0x1f684>
   3098c:	mov	r3, #1000	; 0x3e8
   30990:	str	r3, [fp, #-12]
   30994:	ldr	r3, [fp, #-16]
   30998:	add	r3, r3, #1
   3099c:	str	r3, [fp, #-16]
   309a0:	b	309a8 <__assert_fail@plt+0x1f688>
   309a4:	nop			; (mov r0, r0)
   309a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   309ac:	ldr	r3, [r3]
   309b0:	ldrb	r3, [r3]
   309b4:	sub	r3, r3, #66	; 0x42
   309b8:	cmp	r3, #53	; 0x35
   309bc:	ldrls	pc, [pc, r3, lsl #2]
   309c0:	b	30bd0 <__assert_fail@plt+0x1f8b0>
   309c4:			; <UNDEFINED> instruction: 0x00030ab4
   309c8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   309cc:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   309d0:	ldrdeq	r0, [r3], -r8
   309d4:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   309d8:	strdeq	r0, [r3], -r4
   309dc:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   309e0:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   309e4:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   309e8:	andeq	r0, r3, r0, lsl fp
   309ec:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   309f0:	andeq	r0, r3, ip, lsr #22
   309f4:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   309f8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   309fc:	andeq	r0, r3, r8, asr #22
   30a00:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a04:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a08:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a0c:	andeq	r0, r3, r4, ror #22
   30a10:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a14:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a18:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a1c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a20:	muleq	r3, r8, fp
   30a24:			; <UNDEFINED> instruction: 0x00030bb4
   30a28:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a2c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a30:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a34:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a38:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a3c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a40:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a44:	muleq	r3, ip, sl
   30a48:	andeq	r0, r3, ip, asr #21
   30a4c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a50:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a54:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a58:	strdeq	r0, [r3], -r4
   30a5c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a60:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a64:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a68:	andeq	r0, r3, r0, lsl fp
   30a6c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a70:	andeq	r0, r3, ip, lsr #22
   30a74:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a78:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a7c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a80:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a84:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a88:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a8c:	andeq	r0, r3, r4, ror #22
   30a90:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a94:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30a98:	andeq	r0, r3, r0, lsl #23
   30a9c:	sub	r3, fp, #36	; 0x24
   30aa0:	mov	r1, #512	; 0x200
   30aa4:	mov	r0, r3
   30aa8:	bl	30354 <__assert_fail@plt+0x1f034>
   30aac:	str	r0, [fp, #-20]	; 0xffffffec
   30ab0:	b	30be8 <__assert_fail@plt+0x1f8c8>
   30ab4:	sub	r3, fp, #36	; 0x24
   30ab8:	mov	r1, #1024	; 0x400
   30abc:	mov	r0, r3
   30ac0:	bl	30354 <__assert_fail@plt+0x1f034>
   30ac4:	str	r0, [fp, #-20]	; 0xffffffec
   30ac8:	b	30be8 <__assert_fail@plt+0x1f8c8>
   30acc:	mov	r3, #0
   30ad0:	str	r3, [fp, #-20]	; 0xffffffec
   30ad4:	b	30be8 <__assert_fail@plt+0x1f8c8>
   30ad8:	sub	r3, fp, #36	; 0x24
   30adc:	mov	r2, #6
   30ae0:	ldr	r1, [fp, #-12]
   30ae4:	mov	r0, r3
   30ae8:	bl	30620 <__assert_fail@plt+0x1f300>
   30aec:	str	r0, [fp, #-20]	; 0xffffffec
   30af0:	b	30be8 <__assert_fail@plt+0x1f8c8>
   30af4:	sub	r3, fp, #36	; 0x24
   30af8:	mov	r2, #3
   30afc:	ldr	r1, [fp, #-12]
   30b00:	mov	r0, r3
   30b04:	bl	30620 <__assert_fail@plt+0x1f300>
   30b08:	str	r0, [fp, #-20]	; 0xffffffec
   30b0c:	b	30be8 <__assert_fail@plt+0x1f8c8>
   30b10:	sub	r3, fp, #36	; 0x24
   30b14:	mov	r2, #1
   30b18:	ldr	r1, [fp, #-12]
   30b1c:	mov	r0, r3
   30b20:	bl	30620 <__assert_fail@plt+0x1f300>
   30b24:	str	r0, [fp, #-20]	; 0xffffffec
   30b28:	b	30be8 <__assert_fail@plt+0x1f8c8>
   30b2c:	sub	r3, fp, #36	; 0x24
   30b30:	mov	r2, #2
   30b34:	ldr	r1, [fp, #-12]
   30b38:	mov	r0, r3
   30b3c:	bl	30620 <__assert_fail@plt+0x1f300>
   30b40:	str	r0, [fp, #-20]	; 0xffffffec
   30b44:	b	30be8 <__assert_fail@plt+0x1f8c8>
   30b48:	sub	r3, fp, #36	; 0x24
   30b4c:	mov	r2, #5
   30b50:	ldr	r1, [fp, #-12]
   30b54:	mov	r0, r3
   30b58:	bl	30620 <__assert_fail@plt+0x1f300>
   30b5c:	str	r0, [fp, #-20]	; 0xffffffec
   30b60:	b	30be8 <__assert_fail@plt+0x1f8c8>
   30b64:	sub	r3, fp, #36	; 0x24
   30b68:	mov	r2, #4
   30b6c:	ldr	r1, [fp, #-12]
   30b70:	mov	r0, r3
   30b74:	bl	30620 <__assert_fail@plt+0x1f300>
   30b78:	str	r0, [fp, #-20]	; 0xffffffec
   30b7c:	b	30be8 <__assert_fail@plt+0x1f8c8>
   30b80:	sub	r3, fp, #36	; 0x24
   30b84:	mov	r1, #2
   30b88:	mov	r0, r3
   30b8c:	bl	30354 <__assert_fail@plt+0x1f034>
   30b90:	str	r0, [fp, #-20]	; 0xffffffec
   30b94:	b	30be8 <__assert_fail@plt+0x1f8c8>
   30b98:	sub	r3, fp, #36	; 0x24
   30b9c:	mov	r2, #8
   30ba0:	ldr	r1, [fp, #-12]
   30ba4:	mov	r0, r3
   30ba8:	bl	30620 <__assert_fail@plt+0x1f300>
   30bac:	str	r0, [fp, #-20]	; 0xffffffec
   30bb0:	b	30be8 <__assert_fail@plt+0x1f8c8>
   30bb4:	sub	r3, fp, #36	; 0x24
   30bb8:	mov	r2, #7
   30bbc:	ldr	r1, [fp, #-12]
   30bc0:	mov	r0, r3
   30bc4:	bl	30620 <__assert_fail@plt+0x1f300>
   30bc8:	str	r0, [fp, #-20]	; 0xffffffec
   30bcc:	b	30be8 <__assert_fail@plt+0x1f8c8>
   30bd0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   30bd4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30bd8:	strd	r2, [r1]
   30bdc:	ldr	r3, [fp, #-8]
   30be0:	orr	r3, r3, #2
   30be4:	b	30c40 <__assert_fail@plt+0x1f920>
   30be8:	ldr	r2, [fp, #-8]
   30bec:	ldr	r3, [fp, #-20]	; 0xffffffec
   30bf0:	orr	r3, r2, r3
   30bf4:	str	r3, [fp, #-8]
   30bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30bfc:	ldr	r2, [r3]
   30c00:	ldr	r3, [fp, #-16]
   30c04:	add	r2, r2, r3
   30c08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30c0c:	str	r2, [r3]
   30c10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30c14:	ldr	r3, [r3]
   30c18:	ldrb	r3, [r3]
   30c1c:	cmp	r3, #0
   30c20:	beq	30c30 <__assert_fail@plt+0x1f910>
   30c24:	ldr	r3, [fp, #-8]
   30c28:	orr	r3, r3, #2
   30c2c:	str	r3, [fp, #-8]
   30c30:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   30c34:	ldr	r1, [fp, #-52]	; 0xffffffcc
   30c38:	strd	r2, [r1]
   30c3c:	ldr	r3, [fp, #-8]
   30c40:	mov	r0, r3
   30c44:	sub	sp, fp, #4
   30c48:	pop	{fp, pc}
   30c4c:	andeq	r3, r3, r0, lsr sl
   30c50:	strdeq	r3, [r3], -r8
   30c54:	andeq	r3, r3, r8, lsl #20
   30c58:	push	{r4, r5, fp, lr}
   30c5c:	add	fp, sp, #12
   30c60:	sub	sp, sp, #16
   30c64:	str	r0, [fp, #-24]	; 0xffffffe8
   30c68:	str	r1, [fp, #-28]	; 0xffffffe4
   30c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30c70:	cmp	r3, #0
   30c74:	beq	30c84 <__assert_fail@plt+0x1f964>
   30c78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30c7c:	cmp	r3, #0
   30c80:	bne	30c94 <__assert_fail@plt+0x1f974>
   30c84:	mov	r3, #1
   30c88:	str	r3, [fp, #-28]	; 0xffffffe4
   30c8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30c90:	str	r3, [fp, #-24]	; 0xffffffe8
   30c94:	mov	r1, #0
   30c98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30c9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30ca0:	umull	r2, r3, r2, r3
   30ca4:	mov	r4, r3
   30ca8:	mov	r5, #0
   30cac:	cmp	r4, #0
   30cb0:	beq	30cb8 <__assert_fail@plt+0x1f998>
   30cb4:	mov	r1, #1
   30cb8:	cmp	r2, #0
   30cbc:	bge	30cc4 <__assert_fail@plt+0x1f9a4>
   30cc0:	mov	r1, #1
   30cc4:	mov	r3, r2
   30cc8:	str	r3, [fp, #-20]	; 0xffffffec
   30ccc:	mov	r3, r1
   30cd0:	and	r3, r3, #1
   30cd4:	uxtb	r3, r3
   30cd8:	cmp	r3, #0
   30cdc:	beq	30cf8 <__assert_fail@plt+0x1f9d8>
   30ce0:	bl	11224 <__errno_location@plt>
   30ce4:	mov	r2, r0
   30ce8:	mov	r3, #12
   30cec:	str	r3, [r2]
   30cf0:	mov	r3, #0
   30cf4:	b	30d10 <__assert_fail@plt+0x1f9f0>
   30cf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30d00:	bl	10ff0 <calloc@plt>
   30d04:	mov	r3, r0
   30d08:	str	r3, [fp, #-16]
   30d0c:	ldr	r3, [fp, #-16]
   30d10:	mov	r0, r3
   30d14:	sub	sp, fp, #12
   30d18:	pop	{r4, r5, fp, pc}
   30d1c:	push	{r4, r5, fp, lr}
   30d20:	add	fp, sp, #12
   30d24:	sub	sp, sp, #16
   30d28:	str	r0, [fp, #-24]	; 0xffffffe8
   30d2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d30:	cmp	r3, #0
   30d34:	bne	30d40 <__assert_fail@plt+0x1fa20>
   30d38:	mov	r3, #1
   30d3c:	str	r3, [fp, #-24]	; 0xffffffe8
   30d40:	mov	r1, #0
   30d44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d48:	mov	r2, r3
   30d4c:	mov	r3, #0
   30d50:	mov	r4, r3
   30d54:	mov	r5, #0
   30d58:	cmp	r4, #0
   30d5c:	beq	30d64 <__assert_fail@plt+0x1fa44>
   30d60:	mov	r1, #1
   30d64:	cmp	r2, #0
   30d68:	bge	30d70 <__assert_fail@plt+0x1fa50>
   30d6c:	mov	r1, #1
   30d70:	mov	r3, r2
   30d74:	str	r3, [fp, #-20]	; 0xffffffec
   30d78:	mov	r3, r1
   30d7c:	and	r3, r3, #1
   30d80:	uxtb	r3, r3
   30d84:	cmp	r3, #0
   30d88:	beq	30da4 <__assert_fail@plt+0x1fa84>
   30d8c:	bl	11224 <__errno_location@plt>
   30d90:	mov	r2, r0
   30d94:	mov	r3, #12
   30d98:	str	r3, [r2]
   30d9c:	mov	r3, #0
   30da0:	b	30db8 <__assert_fail@plt+0x1fa98>
   30da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30da8:	bl	111a0 <malloc@plt>
   30dac:	mov	r3, r0
   30db0:	str	r3, [fp, #-16]
   30db4:	ldr	r3, [fp, #-16]
   30db8:	mov	r0, r3
   30dbc:	sub	sp, fp, #12
   30dc0:	pop	{r4, r5, fp, pc}
   30dc4:	push	{r4, r5, fp, lr}
   30dc8:	add	fp, sp, #12
   30dcc:	sub	sp, sp, #16
   30dd0:	str	r0, [fp, #-24]	; 0xffffffe8
   30dd4:	str	r1, [fp, #-28]	; 0xffffffe4
   30dd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30ddc:	cmp	r3, #0
   30de0:	bne	30df4 <__assert_fail@plt+0x1fad4>
   30de4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30de8:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   30dec:	mov	r3, r0
   30df0:	b	30e88 <__assert_fail@plt+0x1fb68>
   30df4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30df8:	cmp	r3, #0
   30dfc:	bne	30e10 <__assert_fail@plt+0x1faf0>
   30e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30e04:	bl	31500 <__assert_fail@plt+0x201e0>
   30e08:	mov	r3, #0
   30e0c:	b	30e88 <__assert_fail@plt+0x1fb68>
   30e10:	mov	r1, #0
   30e14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30e18:	mov	r2, r3
   30e1c:	mov	r3, #0
   30e20:	mov	r4, r3
   30e24:	mov	r5, #0
   30e28:	cmp	r4, #0
   30e2c:	beq	30e34 <__assert_fail@plt+0x1fb14>
   30e30:	mov	r1, #1
   30e34:	cmp	r2, #0
   30e38:	bge	30e40 <__assert_fail@plt+0x1fb20>
   30e3c:	mov	r1, #1
   30e40:	mov	r3, r2
   30e44:	str	r3, [fp, #-20]	; 0xffffffec
   30e48:	mov	r3, r1
   30e4c:	and	r3, r3, #1
   30e50:	uxtb	r3, r3
   30e54:	cmp	r3, #0
   30e58:	beq	30e74 <__assert_fail@plt+0x1fb54>
   30e5c:	bl	11224 <__errno_location@plt>
   30e60:	mov	r2, r0
   30e64:	mov	r3, #12
   30e68:	str	r3, [r2]
   30e6c:	mov	r3, #0
   30e70:	b	30e88 <__assert_fail@plt+0x1fb68>
   30e74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30e7c:	bl	1111c <realloc@plt>
   30e80:	str	r0, [fp, #-16]
   30e84:	ldr	r3, [fp, #-16]
   30e88:	mov	r0, r3
   30e8c:	sub	sp, fp, #12
   30e90:	pop	{r4, r5, fp, pc}
   30e94:	push	{r4, r5, fp, lr}
   30e98:	add	fp, sp, #12
   30e9c:	sub	sp, sp, #16
   30ea0:	str	r0, [fp, #-24]	; 0xffffffe8
   30ea4:	str	r1, [fp, #-28]	; 0xffffffe4
   30ea8:	ldr	r5, [fp, #-24]	; 0xffffffe8
   30eac:	ldr	r4, [fp, #-28]	; 0xffffffe4
   30eb0:	cmp	r5, r4
   30eb4:	bne	30ec0 <__assert_fail@plt+0x1fba0>
   30eb8:	mov	r3, #0
   30ebc:	b	30f20 <__assert_fail@plt+0x1fc00>
   30ec0:	ldrb	r3, [r5]
   30ec4:	mov	r0, r3
   30ec8:	bl	31cf4 <__assert_fail@plt+0x209d4>
   30ecc:	mov	r3, r0
   30ed0:	strb	r3, [fp, #-13]
   30ed4:	ldrb	r3, [r4]
   30ed8:	mov	r0, r3
   30edc:	bl	31cf4 <__assert_fail@plt+0x209d4>
   30ee0:	mov	r3, r0
   30ee4:	strb	r3, [fp, #-14]
   30ee8:	ldrb	r3, [fp, #-13]
   30eec:	cmp	r3, #0
   30ef0:	beq	30f10 <__assert_fail@plt+0x1fbf0>
   30ef4:	add	r5, r5, #1
   30ef8:	add	r4, r4, #1
   30efc:	ldrb	r2, [fp, #-13]
   30f00:	ldrb	r3, [fp, #-14]
   30f04:	cmp	r2, r3
   30f08:	beq	30ec0 <__assert_fail@plt+0x1fba0>
   30f0c:	b	30f14 <__assert_fail@plt+0x1fbf4>
   30f10:	nop			; (mov r0, r0)
   30f14:	ldrb	r2, [fp, #-13]
   30f18:	ldrb	r3, [fp, #-14]
   30f1c:	sub	r3, r2, r3
   30f20:	mov	r0, r3
   30f24:	sub	sp, fp, #12
   30f28:	pop	{r4, r5, fp, pc}
   30f2c:	push	{fp, lr}
   30f30:	add	fp, sp, #4
   30f34:	sub	sp, sp, #16
   30f38:	str	r0, [fp, #-16]
   30f3c:	ldr	r0, [fp, #-16]
   30f40:	bl	11170 <__fpending@plt>
   30f44:	mov	r3, r0
   30f48:	cmp	r3, #0
   30f4c:	movne	r3, #1
   30f50:	moveq	r3, #0
   30f54:	strb	r3, [fp, #-5]
   30f58:	ldr	r0, [fp, #-16]
   30f5c:	bl	1117c <ferror_unlocked@plt>
   30f60:	mov	r3, r0
   30f64:	cmp	r3, #0
   30f68:	movne	r3, #1
   30f6c:	moveq	r3, #0
   30f70:	strb	r3, [fp, #-6]
   30f74:	ldr	r0, [fp, #-16]
   30f78:	bl	12f4c <__assert_fail@plt+0x1c2c>
   30f7c:	mov	r3, r0
   30f80:	cmp	r3, #0
   30f84:	movne	r3, #1
   30f88:	moveq	r3, #0
   30f8c:	strb	r3, [fp, #-7]
   30f90:	ldrb	r3, [fp, #-6]
   30f94:	cmp	r3, #0
   30f98:	bne	30fc8 <__assert_fail@plt+0x1fca8>
   30f9c:	ldrb	r3, [fp, #-7]
   30fa0:	cmp	r3, #0
   30fa4:	beq	30ff4 <__assert_fail@plt+0x1fcd4>
   30fa8:	ldrb	r3, [fp, #-5]
   30fac:	cmp	r3, #0
   30fb0:	bne	30fc8 <__assert_fail@plt+0x1fca8>
   30fb4:	bl	11224 <__errno_location@plt>
   30fb8:	mov	r3, r0
   30fbc:	ldr	r3, [r3]
   30fc0:	cmp	r3, #9
   30fc4:	beq	30ff4 <__assert_fail@plt+0x1fcd4>
   30fc8:	ldrb	r3, [fp, #-7]
   30fcc:	eor	r3, r3, #1
   30fd0:	uxtb	r3, r3
   30fd4:	cmp	r3, #0
   30fd8:	beq	30fec <__assert_fail@plt+0x1fccc>
   30fdc:	bl	11224 <__errno_location@plt>
   30fe0:	mov	r2, r0
   30fe4:	mov	r3, #0
   30fe8:	str	r3, [r2]
   30fec:	mvn	r3, #0
   30ff0:	b	30ff8 <__assert_fail@plt+0x1fcd8>
   30ff4:	mov	r3, #0
   30ff8:	mov	r0, r3
   30ffc:	sub	sp, fp, #4
   31000:	pop	{fp, pc}
   31004:	push	{fp, lr}
   31008:	add	fp, sp, #4
   3100c:	sub	sp, sp, #32
   31010:	str	r0, [fp, #-24]	; 0xffffffe8
   31014:	str	r1, [fp, #-28]	; 0xffffffe4
   31018:	str	r2, [fp, #-32]	; 0xffffffe0
   3101c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31020:	ldr	r3, [r3, #4]
   31024:	cmp	r3, #0
   31028:	bne	31068 <__assert_fail@plt+0x1fd48>
   3102c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31030:	cmp	r3, #3
   31034:	bhi	31044 <__assert_fail@plt+0x1fd24>
   31038:	mov	r3, #16
   3103c:	str	r3, [fp, #-8]
   31040:	b	310b4 <__assert_fail@plt+0x1fd94>
   31044:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31048:	cmp	r3, #7
   3104c:	bhi	3105c <__assert_fail@plt+0x1fd3c>
   31050:	mov	r3, #8
   31054:	str	r3, [fp, #-8]
   31058:	b	310b4 <__assert_fail@plt+0x1fd94>
   3105c:	mov	r3, #4
   31060:	str	r3, [fp, #-8]
   31064:	b	310b4 <__assert_fail@plt+0x1fd94>
   31068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3106c:	ldr	r2, [r3, #4]
   31070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31074:	ldr	r3, [r3, #4]
   31078:	lsr	r3, r3, #1
   3107c:	add	r3, r2, r3
   31080:	add	r3, r3, #1
   31084:	str	r3, [fp, #-8]
   31088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3108c:	ldr	r2, [r3, #4]
   31090:	ldr	r3, [fp, #-8]
   31094:	cmp	r2, r3
   31098:	bcc	310b4 <__assert_fail@plt+0x1fd94>
   3109c:	bl	11224 <__errno_location@plt>
   310a0:	mov	r2, r0
   310a4:	mov	r3, #12
   310a8:	str	r3, [r2]
   310ac:	mov	r3, #0
   310b0:	b	311d4 <__assert_fail@plt+0x1feb4>
   310b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   310b8:	cmp	r3, #0
   310bc:	beq	310f8 <__assert_fail@plt+0x1fdd8>
   310c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   310c4:	mvn	r0, #0
   310c8:	bl	31f78 <__assert_fail@plt+0x20c58>
   310cc:	mov	r3, r0
   310d0:	mov	r2, r3
   310d4:	ldr	r3, [fp, #-8]
   310d8:	cmp	r2, r3
   310dc:	bcs	310f8 <__assert_fail@plt+0x1fdd8>
   310e0:	ldr	r3, [fp, #-8]
   310e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   310e8:	mul	r3, r2, r3
   310ec:	str	r3, [fp, #-16]
   310f0:	mov	r3, #1
   310f4:	b	3110c <__assert_fail@plt+0x1fdec>
   310f8:	ldr	r3, [fp, #-8]
   310fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31100:	mul	r3, r2, r3
   31104:	str	r3, [fp, #-16]
   31108:	mov	r3, #0
   3110c:	cmp	r3, #0
   31110:	beq	3111c <__assert_fail@plt+0x1fdfc>
   31114:	mov	r3, #0
   31118:	b	311d4 <__assert_fail@plt+0x1feb4>
   3111c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31120:	ldr	r2, [r3, #8]
   31124:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31128:	cmp	r2, r3
   3112c:	bne	31188 <__assert_fail@plt+0x1fe68>
   31130:	ldr	r3, [fp, #-16]
   31134:	mov	r0, r3
   31138:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   3113c:	mov	r3, r0
   31140:	str	r3, [fp, #-12]
   31144:	ldr	r3, [fp, #-12]
   31148:	cmp	r3, #0
   3114c:	beq	311a4 <__assert_fail@plt+0x1fe84>
   31150:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31154:	ldr	r3, [r3, #8]
   31158:	cmp	r3, #0
   3115c:	beq	311a4 <__assert_fail@plt+0x1fe84>
   31160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31164:	ldr	r1, [r3, #8]
   31168:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3116c:	ldr	r3, [r3]
   31170:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31174:	mul	r3, r2, r3
   31178:	mov	r2, r3
   3117c:	ldr	r0, [fp, #-12]
   31180:	bl	110a4 <memcpy@plt>
   31184:	b	311a4 <__assert_fail@plt+0x1fe84>
   31188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3118c:	ldr	r3, [r3, #8]
   31190:	ldr	r2, [fp, #-16]
   31194:	mov	r1, r2
   31198:	mov	r0, r3
   3119c:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   311a0:	str	r0, [fp, #-12]
   311a4:	ldr	r3, [fp, #-12]
   311a8:	cmp	r3, #0
   311ac:	bne	311b8 <__assert_fail@plt+0x1fe98>
   311b0:	mov	r3, #0
   311b4:	b	311d4 <__assert_fail@plt+0x1feb4>
   311b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   311bc:	ldr	r2, [fp, #-12]
   311c0:	str	r2, [r3, #8]
   311c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   311c8:	ldr	r2, [fp, #-8]
   311cc:	str	r2, [r3, #4]
   311d0:	mov	r3, #1
   311d4:	mov	r0, r3
   311d8:	sub	sp, fp, #4
   311dc:	pop	{fp, pc}
   311e0:	push	{fp}		; (str fp, [sp, #-4]!)
   311e4:	add	fp, sp, #0
   311e8:	mvn	r3, #0
   311ec:	mov	r0, r3
   311f0:	add	sp, fp, #0
   311f4:	pop	{fp}		; (ldr fp, [sp], #4)
   311f8:	bx	lr
   311fc:	push	{r4, fp, lr}
   31200:	add	fp, sp, #8
   31204:	sub	sp, sp, #12
   31208:	str	r0, [fp, #-16]
   3120c:	ldr	r3, [fp, #-16]
   31210:	ldr	r4, [r3, #4]
   31214:	bl	311e0 <__assert_fail@plt+0x1fec0>
   31218:	mov	r3, r0
   3121c:	cmp	r4, r3
   31220:	moveq	r3, #1
   31224:	movne	r3, #0
   31228:	uxtb	r3, r3
   3122c:	mov	r0, r3
   31230:	sub	sp, fp, #8
   31234:	pop	{r4, fp, pc}
   31238:	push	{fp, lr}
   3123c:	add	fp, sp, #4
   31240:	sub	sp, sp, #32
   31244:	str	r0, [fp, #-24]	; 0xffffffe8
   31248:	str	r1, [fp, #-28]	; 0xffffffe4
   3124c:	str	r2, [fp, #-32]	; 0xffffffe0
   31250:	str	r3, [fp, #-36]	; 0xffffffdc
   31254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31258:	bl	311fc <__assert_fail@plt+0x1fedc>
   3125c:	mov	r3, r0
   31260:	cmp	r3, #0
   31264:	beq	31270 <__assert_fail@plt+0x1ff50>
   31268:	mov	r3, #0
   3126c:	b	31368 <__assert_fail@plt+0x20048>
   31270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31274:	ldr	r3, [r3]
   31278:	str	r3, [fp, #-8]
   3127c:	ldr	r3, [fp, #-8]
   31280:	cmp	r3, #0
   31284:	bne	312cc <__assert_fail@plt+0x1ffac>
   31288:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3128c:	ldr	r2, [r3, #8]
   31290:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31294:	cmp	r2, r3
   31298:	beq	312ac <__assert_fail@plt+0x1ff8c>
   3129c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   312a0:	ldr	r3, [r3, #8]
   312a4:	mov	r0, r3
   312a8:	bl	31500 <__assert_fail@plt+0x201e0>
   312ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   312b0:	mov	r2, #0
   312b4:	str	r2, [r3]
   312b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   312bc:	mov	r2, #0
   312c0:	str	r2, [r3, #4]
   312c4:	mov	r3, #1
   312c8:	b	31368 <__assert_fail@plt+0x20048>
   312cc:	ldr	r3, [fp, #-8]
   312d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   312d4:	mul	r3, r2, r3
   312d8:	str	r3, [fp, #-12]
   312dc:	ldr	r0, [fp, #-12]
   312e0:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   312e4:	mov	r3, r0
   312e8:	str	r3, [fp, #-16]
   312ec:	ldr	r3, [fp, #-16]
   312f0:	cmp	r3, #0
   312f4:	beq	31364 <__assert_fail@plt+0x20044>
   312f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   312fc:	ldr	r3, [r3, #8]
   31300:	cmp	r3, #0
   31304:	beq	31320 <__assert_fail@plt+0x20000>
   31308:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3130c:	ldr	r3, [r3, #8]
   31310:	ldr	r2, [fp, #-12]
   31314:	mov	r1, r3
   31318:	ldr	r0, [fp, #-16]
   3131c:	bl	110a4 <memcpy@plt>
   31320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31324:	ldr	r2, [r3, #8]
   31328:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3132c:	cmp	r2, r3
   31330:	beq	31344 <__assert_fail@plt+0x20024>
   31334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31338:	ldr	r3, [r3, #8]
   3133c:	mov	r0, r3
   31340:	bl	31500 <__assert_fail@plt+0x201e0>
   31344:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31348:	ldr	r2, [fp, #-16]
   3134c:	str	r2, [r3]
   31350:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31354:	ldr	r2, [fp, #-8]
   31358:	str	r2, [r3, #4]
   3135c:	mov	r3, #1
   31360:	b	31368 <__assert_fail@plt+0x20048>
   31364:	mov	r3, #0
   31368:	mov	r0, r3
   3136c:	sub	sp, fp, #4
   31370:	pop	{fp, pc}
   31374:	push	{fp, lr}
   31378:	add	fp, sp, #4
   3137c:	sub	sp, sp, #24
   31380:	str	r0, [fp, #-16]
   31384:	str	r1, [fp, #-20]	; 0xffffffec
   31388:	str	r2, [fp, #-24]	; 0xffffffe8
   3138c:	str	r3, [fp, #-28]	; 0xffffffe4
   31390:	ldr	r3, [fp, #-16]
   31394:	ldr	r2, [r3, #4]
   31398:	ldr	r3, [fp, #-20]	; 0xffffffec
   3139c:	cmp	r2, r3
   313a0:	bcc	313b8 <__assert_fail@plt+0x20098>
   313a4:	ldr	r3, [fp, #-16]
   313a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   313ac:	str	r2, [r3]
   313b0:	mov	r3, #1
   313b4:	b	314f4 <__assert_fail@plt+0x201d4>
   313b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   313bc:	cmp	r3, #0
   313c0:	beq	313fc <__assert_fail@plt+0x200dc>
   313c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   313c8:	mvn	r0, #0
   313cc:	bl	31f78 <__assert_fail@plt+0x20c58>
   313d0:	mov	r3, r0
   313d4:	mov	r2, r3
   313d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   313dc:	cmp	r2, r3
   313e0:	bcs	313fc <__assert_fail@plt+0x200dc>
   313e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   313e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   313ec:	mul	r3, r2, r3
   313f0:	str	r3, [fp, #-12]
   313f4:	mov	r3, #1
   313f8:	b	31410 <__assert_fail@plt+0x200f0>
   313fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   31400:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31404:	mul	r3, r2, r3
   31408:	str	r3, [fp, #-12]
   3140c:	mov	r3, #0
   31410:	cmp	r3, #0
   31414:	beq	31430 <__assert_fail@plt+0x20110>
   31418:	bl	11224 <__errno_location@plt>
   3141c:	mov	r2, r0
   31420:	mov	r3, #12
   31424:	str	r3, [r2]
   31428:	mov	r3, #0
   3142c:	b	314f4 <__assert_fail@plt+0x201d4>
   31430:	ldr	r3, [fp, #-16]
   31434:	ldr	r2, [r3, #8]
   31438:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3143c:	cmp	r2, r3
   31440:	bne	3149c <__assert_fail@plt+0x2017c>
   31444:	ldr	r3, [fp, #-12]
   31448:	mov	r0, r3
   3144c:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   31450:	mov	r3, r0
   31454:	str	r3, [fp, #-8]
   31458:	ldr	r3, [fp, #-8]
   3145c:	cmp	r3, #0
   31460:	beq	314b8 <__assert_fail@plt+0x20198>
   31464:	ldr	r3, [fp, #-16]
   31468:	ldr	r3, [r3, #8]
   3146c:	cmp	r3, #0
   31470:	beq	314b8 <__assert_fail@plt+0x20198>
   31474:	ldr	r3, [fp, #-16]
   31478:	ldr	r1, [r3, #8]
   3147c:	ldr	r3, [fp, #-16]
   31480:	ldr	r3, [r3]
   31484:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31488:	mul	r3, r2, r3
   3148c:	mov	r2, r3
   31490:	ldr	r0, [fp, #-8]
   31494:	bl	110a4 <memcpy@plt>
   31498:	b	314b8 <__assert_fail@plt+0x20198>
   3149c:	ldr	r3, [fp, #-16]
   314a0:	ldr	r3, [r3, #8]
   314a4:	ldr	r2, [fp, #-12]
   314a8:	mov	r1, r2
   314ac:	mov	r0, r3
   314b0:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   314b4:	str	r0, [fp, #-8]
   314b8:	ldr	r3, [fp, #-8]
   314bc:	cmp	r3, #0
   314c0:	bne	314cc <__assert_fail@plt+0x201ac>
   314c4:	mov	r3, #0
   314c8:	b	314f4 <__assert_fail@plt+0x201d4>
   314cc:	ldr	r3, [fp, #-16]
   314d0:	ldr	r2, [fp, #-8]
   314d4:	str	r2, [r3, #8]
   314d8:	ldr	r3, [fp, #-16]
   314dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   314e0:	str	r2, [r3, #4]
   314e4:	ldr	r3, [fp, #-16]
   314e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   314ec:	str	r2, [r3]
   314f0:	mov	r3, #1
   314f4:	mov	r0, r3
   314f8:	sub	sp, fp, #4
   314fc:	pop	{fp, pc}
   31500:	push	{r4, fp, lr}
   31504:	add	fp, sp, #8
   31508:	sub	sp, sp, #20
   3150c:	str	r0, [fp, #-24]	; 0xffffffe8
   31510:	bl	11224 <__errno_location@plt>
   31514:	mov	r3, r0
   31518:	ldr	r3, [r3]
   3151c:	str	r3, [fp, #-20]	; 0xffffffec
   31520:	bl	11224 <__errno_location@plt>
   31524:	mov	r3, r0
   31528:	ldr	r3, [r3]
   3152c:	str	r3, [fp, #-16]
   31530:	bl	11224 <__errno_location@plt>
   31534:	mov	r2, r0
   31538:	mov	r3, #0
   3153c:	str	r3, [r2]
   31540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31544:	bl	11080 <free@plt>
   31548:	bl	11224 <__errno_location@plt>
   3154c:	mov	r4, r0
   31550:	bl	11224 <__errno_location@plt>
   31554:	mov	r3, r0
   31558:	ldr	r3, [r3]
   3155c:	cmp	r3, #0
   31560:	moveq	r3, #1
   31564:	movne	r3, #0
   31568:	uxtb	r3, r3
   3156c:	lsl	r3, r3, #2
   31570:	sub	r2, fp, #12
   31574:	add	r3, r2, r3
   31578:	ldr	r3, [r3, #-8]
   3157c:	str	r3, [r4]
   31580:	nop			; (mov r0, r0)
   31584:	sub	sp, fp, #8
   31588:	pop	{r4, fp, pc}
   3158c:	push	{fp, lr}
   31590:	add	fp, sp, #4
   31594:	bl	11224 <__errno_location@plt>
   31598:	mov	r2, r0
   3159c:	mov	r3, #12
   315a0:	str	r3, [r2]
   315a4:	mov	r3, #0
   315a8:	mov	r0, r3
   315ac:	pop	{fp, pc}
   315b0:	push	{fp, lr}
   315b4:	add	fp, sp, #4
   315b8:	sub	sp, sp, #8
   315bc:	str	r0, [fp, #-8]
   315c0:	ldr	r3, [fp, #-8]
   315c4:	mov	r0, r3
   315c8:	bl	30d1c <__assert_fail@plt+0x1f9fc>
   315cc:	mov	r3, r0
   315d0:	mov	r0, r3
   315d4:	sub	sp, fp, #4
   315d8:	pop	{fp, pc}
   315dc:	push	{fp, lr}
   315e0:	add	fp, sp, #4
   315e4:	sub	sp, sp, #8
   315e8:	str	r0, [fp, #-8]
   315ec:	str	r1, [fp, #-12]
   315f0:	ldr	r3, [fp, #-12]
   315f4:	cmp	r3, #0
   315f8:	moveq	r3, #1
   315fc:	movne	r3, #0
   31600:	uxtb	r3, r3
   31604:	mov	r2, r3
   31608:	ldr	r3, [fp, #-12]
   3160c:	orr	r3, r2, r3
   31610:	mov	r1, r3
   31614:	ldr	r0, [fp, #-8]
   31618:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   3161c:	mov	r3, r0
   31620:	mov	r0, r3
   31624:	sub	sp, fp, #4
   31628:	pop	{fp, pc}
   3162c:	push	{fp, lr}
   31630:	add	fp, sp, #4
   31634:	sub	sp, sp, #8
   31638:	str	r0, [fp, #-8]
   3163c:	str	r1, [fp, #-12]
   31640:	ldr	r3, [fp, #-8]
   31644:	ldr	r2, [fp, #-12]
   31648:	mov	r1, r2
   3164c:	mov	r0, r3
   31650:	bl	30c58 <__assert_fail@plt+0x1f938>
   31654:	mov	r3, r0
   31658:	mov	r0, r3
   3165c:	sub	sp, fp, #4
   31660:	pop	{fp, pc}
   31664:	push	{fp, lr}
   31668:	add	fp, sp, #4
   3166c:	sub	sp, sp, #16
   31670:	str	r0, [fp, #-8]
   31674:	str	r1, [fp, #-12]
   31678:	str	r2, [fp, #-16]
   3167c:	ldr	r3, [fp, #-12]
   31680:	cmp	r3, #0
   31684:	beq	31694 <__assert_fail@plt+0x20374>
   31688:	ldr	r3, [fp, #-16]
   3168c:	cmp	r3, #0
   31690:	bne	316a4 <__assert_fail@plt+0x20384>
   31694:	mov	r3, #1
   31698:	str	r3, [fp, #-16]
   3169c:	ldr	r3, [fp, #-16]
   316a0:	str	r3, [fp, #-12]
   316a4:	ldr	r3, [fp, #-12]
   316a8:	ldr	r2, [fp, #-16]
   316ac:	mov	r1, r3
   316b0:	ldr	r0, [fp, #-8]
   316b4:	bl	317d0 <__assert_fail@plt+0x204b0>
   316b8:	mov	r3, r0
   316bc:	mov	r0, r3
   316c0:	sub	sp, fp, #4
   316c4:	pop	{fp, pc}
   316c8:	push	{fp, lr}
   316cc:	add	fp, sp, #4
   316d0:	sub	sp, sp, #8
   316d4:	mov	r0, #14
   316d8:	bl	112b4 <nl_langinfo@plt>
   316dc:	str	r0, [fp, #-8]
   316e0:	ldr	r3, [fp, #-8]
   316e4:	cmp	r3, #0
   316e8:	bne	316f4 <__assert_fail@plt+0x203d4>
   316ec:	ldr	r3, [pc, #40]	; 3171c <__assert_fail@plt+0x203fc>
   316f0:	str	r3, [fp, #-8]
   316f4:	ldr	r3, [fp, #-8]
   316f8:	ldrb	r3, [r3]
   316fc:	cmp	r3, #0
   31700:	bne	3170c <__assert_fail@plt+0x203ec>
   31704:	ldr	r3, [pc, #20]	; 31720 <__assert_fail@plt+0x20400>
   31708:	str	r3, [fp, #-8]
   3170c:	ldr	r3, [fp, #-8]
   31710:	mov	r0, r3
   31714:	sub	sp, fp, #4
   31718:	pop	{fp, pc}
   3171c:	andeq	r3, r3, ip, lsr sl
   31720:	andeq	r3, r3, r0, asr #20
   31724:	push	{fp, lr}
   31728:	add	fp, sp, #4
   3172c:	sub	sp, sp, #32
   31730:	str	r0, [fp, #-24]	; 0xffffffe8
   31734:	str	r1, [fp, #-28]	; 0xffffffe4
   31738:	str	r2, [fp, #-32]	; 0xffffffe0
   3173c:	str	r3, [fp, #-36]	; 0xffffffdc
   31740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31744:	cmp	r3, #0
   31748:	bne	31754 <__assert_fail@plt+0x20434>
   3174c:	sub	r3, fp, #16
   31750:	str	r3, [fp, #-24]	; 0xffffffe8
   31754:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31758:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3175c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31764:	bl	11188 <mbrtowc@plt>
   31768:	str	r0, [fp, #-8]
   3176c:	ldr	r3, [fp, #-8]
   31770:	cmn	r3, #3
   31774:	bls	317c0 <__assert_fail@plt+0x204a0>
   31778:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3177c:	cmp	r3, #0
   31780:	beq	317c0 <__assert_fail@plt+0x204a0>
   31784:	mov	r0, #0
   31788:	bl	31d74 <__assert_fail@plt+0x20a54>
   3178c:	mov	r3, r0
   31790:	eor	r3, r3, #1
   31794:	uxtb	r3, r3
   31798:	cmp	r3, #0
   3179c:	beq	317c0 <__assert_fail@plt+0x204a0>
   317a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   317a4:	ldrb	r3, [r3]
   317a8:	strb	r3, [fp, #-9]
   317ac:	ldrb	r2, [fp, #-9]
   317b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   317b4:	str	r2, [r3]
   317b8:	mov	r3, #1
   317bc:	b	317c4 <__assert_fail@plt+0x204a4>
   317c0:	ldr	r3, [fp, #-8]
   317c4:	mov	r0, r3
   317c8:	sub	sp, fp, #4
   317cc:	pop	{fp, pc}
   317d0:	push	{fp, lr}
   317d4:	add	fp, sp, #4
   317d8:	sub	sp, sp, #24
   317dc:	str	r0, [fp, #-16]
   317e0:	str	r1, [fp, #-20]	; 0xffffffec
   317e4:	str	r2, [fp, #-24]	; 0xffffffe8
   317e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   317ec:	cmp	r3, #0
   317f0:	beq	3182c <__assert_fail@plt+0x2050c>
   317f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   317f8:	mvn	r0, #0
   317fc:	bl	31f78 <__assert_fail@plt+0x20c58>
   31800:	mov	r3, r0
   31804:	mov	r2, r3
   31808:	ldr	r3, [fp, #-20]	; 0xffffffec
   3180c:	cmp	r2, r3
   31810:	bcs	3182c <__assert_fail@plt+0x2050c>
   31814:	ldr	r3, [fp, #-20]	; 0xffffffec
   31818:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3181c:	mul	r3, r2, r3
   31820:	str	r3, [fp, #-8]
   31824:	mov	r3, #1
   31828:	b	31840 <__assert_fail@plt+0x20520>
   3182c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31830:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31834:	mul	r3, r2, r3
   31838:	str	r3, [fp, #-8]
   3183c:	mov	r3, #0
   31840:	cmp	r3, #0
   31844:	beq	31860 <__assert_fail@plt+0x20540>
   31848:	bl	11224 <__errno_location@plt>
   3184c:	mov	r2, r0
   31850:	mov	r3, #12
   31854:	str	r3, [r2]
   31858:	mov	r3, #0
   3185c:	b	31874 <__assert_fail@plt+0x20554>
   31860:	ldr	r3, [fp, #-8]
   31864:	mov	r1, r3
   31868:	ldr	r0, [fp, #-16]
   3186c:	bl	30dc4 <__assert_fail@plt+0x1faa4>
   31870:	mov	r3, r0
   31874:	mov	r0, r3
   31878:	sub	sp, fp, #4
   3187c:	pop	{fp, pc}
   31880:	push	{fp}		; (str fp, [sp, #-4]!)
   31884:	add	fp, sp, #0
   31888:	sub	sp, sp, #12
   3188c:	str	r0, [fp, #-8]
   31890:	ldr	r3, [fp, #-8]
   31894:	cmp	r3, #90	; 0x5a
   31898:	bgt	318b4 <__assert_fail@plt+0x20594>
   3189c:	cmp	r3, #65	; 0x41
   318a0:	bge	318c0 <__assert_fail@plt+0x205a0>
   318a4:	sub	r3, r3, #48	; 0x30
   318a8:	cmp	r3, #9
   318ac:	bhi	318c8 <__assert_fail@plt+0x205a8>
   318b0:	b	318c0 <__assert_fail@plt+0x205a0>
   318b4:	sub	r3, r3, #97	; 0x61
   318b8:	cmp	r3, #25
   318bc:	bhi	318c8 <__assert_fail@plt+0x205a8>
   318c0:	mov	r3, #1
   318c4:	b	318cc <__assert_fail@plt+0x205ac>
   318c8:	mov	r3, #0
   318cc:	mov	r0, r3
   318d0:	add	sp, fp, #0
   318d4:	pop	{fp}		; (ldr fp, [sp], #4)
   318d8:	bx	lr
   318dc:	push	{fp}		; (str fp, [sp, #-4]!)
   318e0:	add	fp, sp, #0
   318e4:	sub	sp, sp, #12
   318e8:	str	r0, [fp, #-8]
   318ec:	ldr	r3, [fp, #-8]
   318f0:	cmp	r3, #65	; 0x41
   318f4:	blt	31914 <__assert_fail@plt+0x205f4>
   318f8:	cmp	r3, #90	; 0x5a
   318fc:	ble	3190c <__assert_fail@plt+0x205ec>
   31900:	sub	r3, r3, #97	; 0x61
   31904:	cmp	r3, #25
   31908:	bhi	31914 <__assert_fail@plt+0x205f4>
   3190c:	mov	r3, #1
   31910:	b	31918 <__assert_fail@plt+0x205f8>
   31914:	mov	r3, #0
   31918:	mov	r0, r3
   3191c:	add	sp, fp, #0
   31920:	pop	{fp}		; (ldr fp, [sp], #4)
   31924:	bx	lr
   31928:	push	{fp}		; (str fp, [sp, #-4]!)
   3192c:	add	fp, sp, #0
   31930:	sub	sp, sp, #12
   31934:	str	r0, [fp, #-8]
   31938:	ldr	r3, [fp, #-8]
   3193c:	add	r3, r3, #0
   31940:	cmp	r3, #127	; 0x7f
   31944:	bhi	31950 <__assert_fail@plt+0x20630>
   31948:	mov	r3, #1
   3194c:	b	31954 <__assert_fail@plt+0x20634>
   31950:	mov	r3, #0
   31954:	mov	r0, r3
   31958:	add	sp, fp, #0
   3195c:	pop	{fp}		; (ldr fp, [sp], #4)
   31960:	bx	lr
   31964:	push	{fp}		; (str fp, [sp, #-4]!)
   31968:	add	fp, sp, #0
   3196c:	sub	sp, sp, #12
   31970:	str	r0, [fp, #-8]
   31974:	ldr	r3, [fp, #-8]
   31978:	cmp	r3, #32
   3197c:	beq	3198c <__assert_fail@plt+0x2066c>
   31980:	ldr	r3, [fp, #-8]
   31984:	cmp	r3, #9
   31988:	bne	31994 <__assert_fail@plt+0x20674>
   3198c:	mov	r3, #1
   31990:	b	31998 <__assert_fail@plt+0x20678>
   31994:	mov	r3, #0
   31998:	and	r3, r3, #1
   3199c:	uxtb	r3, r3
   319a0:	mov	r0, r3
   319a4:	add	sp, fp, #0
   319a8:	pop	{fp}		; (ldr fp, [sp], #4)
   319ac:	bx	lr
   319b0:	push	{fp}		; (str fp, [sp, #-4]!)
   319b4:	add	fp, sp, #0
   319b8:	sub	sp, sp, #12
   319bc:	str	r0, [fp, #-8]
   319c0:	ldr	r3, [fp, #-8]
   319c4:	cmp	r3, #0
   319c8:	blt	319e4 <__assert_fail@plt+0x206c4>
   319cc:	cmp	r3, #31
   319d0:	ble	319dc <__assert_fail@plt+0x206bc>
   319d4:	cmp	r3, #127	; 0x7f
   319d8:	bne	319e4 <__assert_fail@plt+0x206c4>
   319dc:	mov	r3, #1
   319e0:	b	319e8 <__assert_fail@plt+0x206c8>
   319e4:	mov	r3, #0
   319e8:	mov	r0, r3
   319ec:	add	sp, fp, #0
   319f0:	pop	{fp}		; (ldr fp, [sp], #4)
   319f4:	bx	lr
   319f8:	push	{fp}		; (str fp, [sp, #-4]!)
   319fc:	add	fp, sp, #0
   31a00:	sub	sp, sp, #12
   31a04:	str	r0, [fp, #-8]
   31a08:	ldr	r3, [fp, #-8]
   31a0c:	sub	r3, r3, #48	; 0x30
   31a10:	cmp	r3, #9
   31a14:	bhi	31a20 <__assert_fail@plt+0x20700>
   31a18:	mov	r3, #1
   31a1c:	b	31a24 <__assert_fail@plt+0x20704>
   31a20:	mov	r3, #0
   31a24:	mov	r0, r3
   31a28:	add	sp, fp, #0
   31a2c:	pop	{fp}		; (ldr fp, [sp], #4)
   31a30:	bx	lr
   31a34:	push	{fp}		; (str fp, [sp, #-4]!)
   31a38:	add	fp, sp, #0
   31a3c:	sub	sp, sp, #12
   31a40:	str	r0, [fp, #-8]
   31a44:	ldr	r3, [fp, #-8]
   31a48:	sub	r3, r3, #33	; 0x21
   31a4c:	cmp	r3, #93	; 0x5d
   31a50:	bhi	31a5c <__assert_fail@plt+0x2073c>
   31a54:	mov	r3, #1
   31a58:	b	31a60 <__assert_fail@plt+0x20740>
   31a5c:	mov	r3, #0
   31a60:	mov	r0, r3
   31a64:	add	sp, fp, #0
   31a68:	pop	{fp}		; (ldr fp, [sp], #4)
   31a6c:	bx	lr
   31a70:	push	{fp}		; (str fp, [sp, #-4]!)
   31a74:	add	fp, sp, #0
   31a78:	sub	sp, sp, #12
   31a7c:	str	r0, [fp, #-8]
   31a80:	ldr	r3, [fp, #-8]
   31a84:	sub	r3, r3, #97	; 0x61
   31a88:	cmp	r3, #25
   31a8c:	bhi	31a98 <__assert_fail@plt+0x20778>
   31a90:	mov	r3, #1
   31a94:	b	31a9c <__assert_fail@plt+0x2077c>
   31a98:	mov	r3, #0
   31a9c:	mov	r0, r3
   31aa0:	add	sp, fp, #0
   31aa4:	pop	{fp}		; (ldr fp, [sp], #4)
   31aa8:	bx	lr
   31aac:	push	{fp}		; (str fp, [sp, #-4]!)
   31ab0:	add	fp, sp, #0
   31ab4:	sub	sp, sp, #12
   31ab8:	str	r0, [fp, #-8]
   31abc:	ldr	r3, [fp, #-8]
   31ac0:	sub	r3, r3, #32
   31ac4:	cmp	r3, #94	; 0x5e
   31ac8:	bhi	31ad4 <__assert_fail@plt+0x207b4>
   31acc:	mov	r3, #1
   31ad0:	b	31ad8 <__assert_fail@plt+0x207b8>
   31ad4:	mov	r3, #0
   31ad8:	mov	r0, r3
   31adc:	add	sp, fp, #0
   31ae0:	pop	{fp}		; (ldr fp, [sp], #4)
   31ae4:	bx	lr
   31ae8:	push	{fp}		; (str fp, [sp, #-4]!)
   31aec:	add	fp, sp, #0
   31af0:	sub	sp, sp, #12
   31af4:	str	r0, [fp, #-8]
   31af8:	ldr	r3, [fp, #-8]
   31afc:	cmp	r3, #64	; 0x40
   31b00:	bgt	31b1c <__assert_fail@plt+0x207fc>
   31b04:	cmp	r3, #58	; 0x3a
   31b08:	bge	31b38 <__assert_fail@plt+0x20818>
   31b0c:	sub	r3, r3, #33	; 0x21
   31b10:	cmp	r3, #14
   31b14:	bhi	31b40 <__assert_fail@plt+0x20820>
   31b18:	b	31b38 <__assert_fail@plt+0x20818>
   31b1c:	cmp	r3, #91	; 0x5b
   31b20:	blt	31b40 <__assert_fail@plt+0x20820>
   31b24:	cmp	r3, #96	; 0x60
   31b28:	ble	31b38 <__assert_fail@plt+0x20818>
   31b2c:	sub	r3, r3, #123	; 0x7b
   31b30:	cmp	r3, #3
   31b34:	bhi	31b40 <__assert_fail@plt+0x20820>
   31b38:	mov	r3, #1
   31b3c:	b	31b44 <__assert_fail@plt+0x20824>
   31b40:	mov	r3, #0
   31b44:	mov	r0, r3
   31b48:	add	sp, fp, #0
   31b4c:	pop	{fp}		; (ldr fp, [sp], #4)
   31b50:	bx	lr
   31b54:	push	{fp}		; (str fp, [sp, #-4]!)
   31b58:	add	fp, sp, #0
   31b5c:	sub	sp, sp, #12
   31b60:	str	r0, [fp, #-8]
   31b64:	ldr	r3, [fp, #-8]
   31b68:	cmp	r3, #9
   31b6c:	blt	31b88 <__assert_fail@plt+0x20868>
   31b70:	cmp	r3, #13
   31b74:	ble	31b80 <__assert_fail@plt+0x20860>
   31b78:	cmp	r3, #32
   31b7c:	bne	31b88 <__assert_fail@plt+0x20868>
   31b80:	mov	r3, #1
   31b84:	b	31b8c <__assert_fail@plt+0x2086c>
   31b88:	mov	r3, #0
   31b8c:	mov	r0, r3
   31b90:	add	sp, fp, #0
   31b94:	pop	{fp}		; (ldr fp, [sp], #4)
   31b98:	bx	lr
   31b9c:	push	{fp}		; (str fp, [sp, #-4]!)
   31ba0:	add	fp, sp, #0
   31ba4:	sub	sp, sp, #12
   31ba8:	str	r0, [fp, #-8]
   31bac:	ldr	r3, [fp, #-8]
   31bb0:	sub	r3, r3, #65	; 0x41
   31bb4:	cmp	r3, #25
   31bb8:	bhi	31bc4 <__assert_fail@plt+0x208a4>
   31bbc:	mov	r3, #1
   31bc0:	b	31bc8 <__assert_fail@plt+0x208a8>
   31bc4:	mov	r3, #0
   31bc8:	mov	r0, r3
   31bcc:	add	sp, fp, #0
   31bd0:	pop	{fp}		; (ldr fp, [sp], #4)
   31bd4:	bx	lr
   31bd8:	push	{fp}		; (str fp, [sp, #-4]!)
   31bdc:	add	fp, sp, #0
   31be0:	sub	sp, sp, #12
   31be4:	str	r0, [fp, #-8]
   31be8:	ldr	r3, [fp, #-8]
   31bec:	sub	r3, r3, #48	; 0x30
   31bf0:	cmp	r3, #54	; 0x36
   31bf4:	addls	pc, pc, r3, lsl #2
   31bf8:	b	31ce0 <__assert_fail@plt+0x209c0>
   31bfc:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c00:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c04:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c08:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c0c:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c10:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c14:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c18:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c1c:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c20:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c24:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c28:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c2c:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c30:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c34:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c38:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c3c:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c40:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c44:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c48:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c4c:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c50:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c54:	b	31cd8 <__assert_fail@plt+0x209b8>
   31c58:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c5c:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c60:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c64:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c68:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c6c:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c70:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c74:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c78:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c7c:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c80:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c84:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c88:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c8c:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c90:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c94:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c98:	b	31ce0 <__assert_fail@plt+0x209c0>
   31c9c:	b	31ce0 <__assert_fail@plt+0x209c0>
   31ca0:	b	31ce0 <__assert_fail@plt+0x209c0>
   31ca4:	b	31ce0 <__assert_fail@plt+0x209c0>
   31ca8:	b	31ce0 <__assert_fail@plt+0x209c0>
   31cac:	b	31ce0 <__assert_fail@plt+0x209c0>
   31cb0:	b	31ce0 <__assert_fail@plt+0x209c0>
   31cb4:	b	31ce0 <__assert_fail@plt+0x209c0>
   31cb8:	b	31ce0 <__assert_fail@plt+0x209c0>
   31cbc:	b	31ce0 <__assert_fail@plt+0x209c0>
   31cc0:	b	31cd8 <__assert_fail@plt+0x209b8>
   31cc4:	b	31cd8 <__assert_fail@plt+0x209b8>
   31cc8:	b	31cd8 <__assert_fail@plt+0x209b8>
   31ccc:	b	31cd8 <__assert_fail@plt+0x209b8>
   31cd0:	b	31cd8 <__assert_fail@plt+0x209b8>
   31cd4:	b	31cd8 <__assert_fail@plt+0x209b8>
   31cd8:	mov	r3, #1
   31cdc:	b	31ce4 <__assert_fail@plt+0x209c4>
   31ce0:	mov	r3, #0
   31ce4:	mov	r0, r3
   31ce8:	add	sp, fp, #0
   31cec:	pop	{fp}		; (ldr fp, [sp], #4)
   31cf0:	bx	lr
   31cf4:	push	{fp}		; (str fp, [sp, #-4]!)
   31cf8:	add	fp, sp, #0
   31cfc:	sub	sp, sp, #12
   31d00:	str	r0, [fp, #-8]
   31d04:	ldr	r3, [fp, #-8]
   31d08:	sub	r3, r3, #65	; 0x41
   31d0c:	cmp	r3, #25
   31d10:	bhi	31d20 <__assert_fail@plt+0x20a00>
   31d14:	ldr	r3, [fp, #-8]
   31d18:	add	r3, r3, #32
   31d1c:	b	31d24 <__assert_fail@plt+0x20a04>
   31d20:	ldr	r3, [fp, #-8]
   31d24:	mov	r0, r3
   31d28:	add	sp, fp, #0
   31d2c:	pop	{fp}		; (ldr fp, [sp], #4)
   31d30:	bx	lr
   31d34:	push	{fp}		; (str fp, [sp, #-4]!)
   31d38:	add	fp, sp, #0
   31d3c:	sub	sp, sp, #12
   31d40:	str	r0, [fp, #-8]
   31d44:	ldr	r3, [fp, #-8]
   31d48:	sub	r3, r3, #97	; 0x61
   31d4c:	cmp	r3, #25
   31d50:	bhi	31d60 <__assert_fail@plt+0x20a40>
   31d54:	ldr	r3, [fp, #-8]
   31d58:	sub	r3, r3, #32
   31d5c:	b	31d64 <__assert_fail@plt+0x20a44>
   31d60:	ldr	r3, [fp, #-8]
   31d64:	mov	r0, r3
   31d68:	add	sp, fp, #0
   31d6c:	pop	{fp}		; (ldr fp, [sp], #4)
   31d70:	bx	lr
   31d74:	push	{fp, lr}
   31d78:	add	fp, sp, #4
   31d7c:	sub	sp, sp, #272	; 0x110
   31d80:	str	r0, [fp, #-272]	; 0xfffffef0
   31d84:	sub	r3, fp, #264	; 0x108
   31d88:	ldr	r2, [pc, #116]	; 31e04 <__assert_fail@plt+0x20ae4>
   31d8c:	mov	r1, r3
   31d90:	ldr	r0, [fp, #-272]	; 0xfffffef0
   31d94:	bl	31f18 <__assert_fail@plt+0x20bf8>
   31d98:	mov	r3, r0
   31d9c:	cmp	r3, #0
   31da0:	beq	31dac <__assert_fail@plt+0x20a8c>
   31da4:	mov	r3, #0
   31da8:	b	31df8 <__assert_fail@plt+0x20ad8>
   31dac:	sub	r3, fp, #264	; 0x108
   31db0:	ldr	r1, [pc, #80]	; 31e08 <__assert_fail@plt+0x20ae8>
   31db4:	mov	r0, r3
   31db8:	bl	11038 <strcmp@plt>
   31dbc:	mov	r3, r0
   31dc0:	cmp	r3, #0
   31dc4:	beq	31dec <__assert_fail@plt+0x20acc>
   31dc8:	sub	r3, fp, #264	; 0x108
   31dcc:	ldr	r1, [pc, #56]	; 31e0c <__assert_fail@plt+0x20aec>
   31dd0:	mov	r0, r3
   31dd4:	bl	11038 <strcmp@plt>
   31dd8:	mov	r3, r0
   31ddc:	cmp	r3, #0
   31de0:	beq	31dec <__assert_fail@plt+0x20acc>
   31de4:	mov	r3, #1
   31de8:	b	31df0 <__assert_fail@plt+0x20ad0>
   31dec:	mov	r3, #0
   31df0:	and	r3, r3, #1
   31df4:	uxtb	r3, r3
   31df8:	mov	r0, r3
   31dfc:	sub	sp, fp, #4
   31e00:	pop	{fp, pc}
   31e04:	andeq	r0, r0, r1, lsl #2
   31e08:	andeq	r3, r3, r8, asr #20
   31e0c:	andeq	r3, r3, ip, asr #20
   31e10:	push	{fp, lr}
   31e14:	add	fp, sp, #4
   31e18:	sub	sp, sp, #16
   31e1c:	str	r0, [fp, #-16]
   31e20:	mov	r1, #0
   31e24:	ldr	r0, [fp, #-16]
   31e28:	bl	11290 <setlocale@plt>
   31e2c:	str	r0, [fp, #-8]
   31e30:	ldr	r3, [fp, #-8]
   31e34:	mov	r0, r3
   31e38:	sub	sp, fp, #4
   31e3c:	pop	{fp, pc}
   31e40:	push	{fp, lr}
   31e44:	add	fp, sp, #4
   31e48:	sub	sp, sp, #24
   31e4c:	str	r0, [fp, #-16]
   31e50:	str	r1, [fp, #-20]	; 0xffffffec
   31e54:	str	r2, [fp, #-24]	; 0xffffffe8
   31e58:	ldr	r0, [fp, #-16]
   31e5c:	bl	31e10 <__assert_fail@plt+0x20af0>
   31e60:	str	r0, [fp, #-8]
   31e64:	ldr	r3, [fp, #-8]
   31e68:	cmp	r3, #0
   31e6c:	bne	31e90 <__assert_fail@plt+0x20b70>
   31e70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31e74:	cmp	r3, #0
   31e78:	beq	31e88 <__assert_fail@plt+0x20b68>
   31e7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31e80:	mov	r2, #0
   31e84:	strb	r2, [r3]
   31e88:	mov	r3, #22
   31e8c:	b	31f0c <__assert_fail@plt+0x20bec>
   31e90:	ldr	r0, [fp, #-8]
   31e94:	bl	11200 <strlen@plt>
   31e98:	str	r0, [fp, #-12]
   31e9c:	ldr	r2, [fp, #-12]
   31ea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31ea4:	cmp	r2, r3
   31ea8:	bcs	31ecc <__assert_fail@plt+0x20bac>
   31eac:	ldr	r3, [fp, #-12]
   31eb0:	add	r3, r3, #1
   31eb4:	mov	r2, r3
   31eb8:	ldr	r1, [fp, #-8]
   31ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   31ec0:	bl	110a4 <memcpy@plt>
   31ec4:	mov	r3, #0
   31ec8:	b	31f0c <__assert_fail@plt+0x20bec>
   31ecc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31ed0:	cmp	r3, #0
   31ed4:	beq	31f08 <__assert_fail@plt+0x20be8>
   31ed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31edc:	sub	r3, r3, #1
   31ee0:	mov	r2, r3
   31ee4:	ldr	r1, [fp, #-8]
   31ee8:	ldr	r0, [fp, #-20]	; 0xffffffec
   31eec:	bl	110a4 <memcpy@plt>
   31ef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31ef4:	sub	r3, r3, #1
   31ef8:	ldr	r2, [fp, #-20]	; 0xffffffec
   31efc:	add	r3, r2, r3
   31f00:	mov	r2, #0
   31f04:	strb	r2, [r3]
   31f08:	mov	r3, #34	; 0x22
   31f0c:	mov	r0, r3
   31f10:	sub	sp, fp, #4
   31f14:	pop	{fp, pc}
   31f18:	push	{fp, lr}
   31f1c:	add	fp, sp, #4
   31f20:	sub	sp, sp, #16
   31f24:	str	r0, [fp, #-8]
   31f28:	str	r1, [fp, #-12]
   31f2c:	str	r2, [fp, #-16]
   31f30:	ldr	r2, [fp, #-16]
   31f34:	ldr	r1, [fp, #-12]
   31f38:	ldr	r0, [fp, #-8]
   31f3c:	bl	31e40 <__assert_fail@plt+0x20b20>
   31f40:	mov	r3, r0
   31f44:	mov	r0, r3
   31f48:	sub	sp, fp, #4
   31f4c:	pop	{fp, pc}
   31f50:	push	{fp, lr}
   31f54:	add	fp, sp, #4
   31f58:	sub	sp, sp, #8
   31f5c:	str	r0, [fp, #-8]
   31f60:	ldr	r0, [fp, #-8]
   31f64:	bl	31e10 <__assert_fail@plt+0x20af0>
   31f68:	mov	r3, r0
   31f6c:	mov	r0, r3
   31f70:	sub	sp, fp, #4
   31f74:	pop	{fp, pc}
   31f78:	subs	r2, r1, #1
   31f7c:	bxeq	lr
   31f80:	bcc	32158 <__assert_fail@plt+0x20e38>
   31f84:	cmp	r0, r1
   31f88:	bls	3213c <__assert_fail@plt+0x20e1c>
   31f8c:	tst	r1, r2
   31f90:	beq	32148 <__assert_fail@plt+0x20e28>
   31f94:	clz	r3, r0
   31f98:	clz	r2, r1
   31f9c:	sub	r3, r2, r3
   31fa0:	rsbs	r3, r3, #31
   31fa4:	addne	r3, r3, r3, lsl #1
   31fa8:	mov	r2, #0
   31fac:	addne	pc, pc, r3, lsl #2
   31fb0:	nop			; (mov r0, r0)
   31fb4:	cmp	r0, r1, lsl #31
   31fb8:	adc	r2, r2, r2
   31fbc:	subcs	r0, r0, r1, lsl #31
   31fc0:	cmp	r0, r1, lsl #30
   31fc4:	adc	r2, r2, r2
   31fc8:	subcs	r0, r0, r1, lsl #30
   31fcc:	cmp	r0, r1, lsl #29
   31fd0:	adc	r2, r2, r2
   31fd4:	subcs	r0, r0, r1, lsl #29
   31fd8:	cmp	r0, r1, lsl #28
   31fdc:	adc	r2, r2, r2
   31fe0:	subcs	r0, r0, r1, lsl #28
   31fe4:	cmp	r0, r1, lsl #27
   31fe8:	adc	r2, r2, r2
   31fec:	subcs	r0, r0, r1, lsl #27
   31ff0:	cmp	r0, r1, lsl #26
   31ff4:	adc	r2, r2, r2
   31ff8:	subcs	r0, r0, r1, lsl #26
   31ffc:	cmp	r0, r1, lsl #25
   32000:	adc	r2, r2, r2
   32004:	subcs	r0, r0, r1, lsl #25
   32008:	cmp	r0, r1, lsl #24
   3200c:	adc	r2, r2, r2
   32010:	subcs	r0, r0, r1, lsl #24
   32014:	cmp	r0, r1, lsl #23
   32018:	adc	r2, r2, r2
   3201c:	subcs	r0, r0, r1, lsl #23
   32020:	cmp	r0, r1, lsl #22
   32024:	adc	r2, r2, r2
   32028:	subcs	r0, r0, r1, lsl #22
   3202c:	cmp	r0, r1, lsl #21
   32030:	adc	r2, r2, r2
   32034:	subcs	r0, r0, r1, lsl #21
   32038:	cmp	r0, r1, lsl #20
   3203c:	adc	r2, r2, r2
   32040:	subcs	r0, r0, r1, lsl #20
   32044:	cmp	r0, r1, lsl #19
   32048:	adc	r2, r2, r2
   3204c:	subcs	r0, r0, r1, lsl #19
   32050:	cmp	r0, r1, lsl #18
   32054:	adc	r2, r2, r2
   32058:	subcs	r0, r0, r1, lsl #18
   3205c:	cmp	r0, r1, lsl #17
   32060:	adc	r2, r2, r2
   32064:	subcs	r0, r0, r1, lsl #17
   32068:	cmp	r0, r1, lsl #16
   3206c:	adc	r2, r2, r2
   32070:	subcs	r0, r0, r1, lsl #16
   32074:	cmp	r0, r1, lsl #15
   32078:	adc	r2, r2, r2
   3207c:	subcs	r0, r0, r1, lsl #15
   32080:	cmp	r0, r1, lsl #14
   32084:	adc	r2, r2, r2
   32088:	subcs	r0, r0, r1, lsl #14
   3208c:	cmp	r0, r1, lsl #13
   32090:	adc	r2, r2, r2
   32094:	subcs	r0, r0, r1, lsl #13
   32098:	cmp	r0, r1, lsl #12
   3209c:	adc	r2, r2, r2
   320a0:	subcs	r0, r0, r1, lsl #12
   320a4:	cmp	r0, r1, lsl #11
   320a8:	adc	r2, r2, r2
   320ac:	subcs	r0, r0, r1, lsl #11
   320b0:	cmp	r0, r1, lsl #10
   320b4:	adc	r2, r2, r2
   320b8:	subcs	r0, r0, r1, lsl #10
   320bc:	cmp	r0, r1, lsl #9
   320c0:	adc	r2, r2, r2
   320c4:	subcs	r0, r0, r1, lsl #9
   320c8:	cmp	r0, r1, lsl #8
   320cc:	adc	r2, r2, r2
   320d0:	subcs	r0, r0, r1, lsl #8
   320d4:	cmp	r0, r1, lsl #7
   320d8:	adc	r2, r2, r2
   320dc:	subcs	r0, r0, r1, lsl #7
   320e0:	cmp	r0, r1, lsl #6
   320e4:	adc	r2, r2, r2
   320e8:	subcs	r0, r0, r1, lsl #6
   320ec:	cmp	r0, r1, lsl #5
   320f0:	adc	r2, r2, r2
   320f4:	subcs	r0, r0, r1, lsl #5
   320f8:	cmp	r0, r1, lsl #4
   320fc:	adc	r2, r2, r2
   32100:	subcs	r0, r0, r1, lsl #4
   32104:	cmp	r0, r1, lsl #3
   32108:	adc	r2, r2, r2
   3210c:	subcs	r0, r0, r1, lsl #3
   32110:	cmp	r0, r1, lsl #2
   32114:	adc	r2, r2, r2
   32118:	subcs	r0, r0, r1, lsl #2
   3211c:	cmp	r0, r1, lsl #1
   32120:	adc	r2, r2, r2
   32124:	subcs	r0, r0, r1, lsl #1
   32128:	cmp	r0, r1
   3212c:	adc	r2, r2, r2
   32130:	subcs	r0, r0, r1
   32134:	mov	r0, r2
   32138:	bx	lr
   3213c:	moveq	r0, #1
   32140:	movne	r0, #0
   32144:	bx	lr
   32148:	clz	r2, r1
   3214c:	rsb	r2, r2, #31
   32150:	lsr	r0, r0, r2
   32154:	bx	lr
   32158:	cmp	r0, #0
   3215c:	mvnne	r0, #0
   32160:	b	32498 <__assert_fail@plt+0x21178>
   32164:	cmp	r1, #0
   32168:	beq	32158 <__assert_fail@plt+0x20e38>
   3216c:	push	{r0, r1, lr}
   32170:	bl	31f78 <__assert_fail@plt+0x20c58>
   32174:	pop	{r1, r2, lr}
   32178:	mul	r3, r2, r0
   3217c:	sub	r1, r1, r3
   32180:	bx	lr
   32184:	cmp	r1, #0
   32188:	beq	32394 <__assert_fail@plt+0x21074>
   3218c:	eor	ip, r0, r1
   32190:	rsbmi	r1, r1, #0
   32194:	subs	r2, r1, #1
   32198:	beq	32360 <__assert_fail@plt+0x21040>
   3219c:	movs	r3, r0
   321a0:	rsbmi	r3, r0, #0
   321a4:	cmp	r3, r1
   321a8:	bls	3236c <__assert_fail@plt+0x2104c>
   321ac:	tst	r1, r2
   321b0:	beq	3237c <__assert_fail@plt+0x2105c>
   321b4:	clz	r2, r3
   321b8:	clz	r0, r1
   321bc:	sub	r2, r0, r2
   321c0:	rsbs	r2, r2, #31
   321c4:	addne	r2, r2, r2, lsl #1
   321c8:	mov	r0, #0
   321cc:	addne	pc, pc, r2, lsl #2
   321d0:	nop			; (mov r0, r0)
   321d4:	cmp	r3, r1, lsl #31
   321d8:	adc	r0, r0, r0
   321dc:	subcs	r3, r3, r1, lsl #31
   321e0:	cmp	r3, r1, lsl #30
   321e4:	adc	r0, r0, r0
   321e8:	subcs	r3, r3, r1, lsl #30
   321ec:	cmp	r3, r1, lsl #29
   321f0:	adc	r0, r0, r0
   321f4:	subcs	r3, r3, r1, lsl #29
   321f8:	cmp	r3, r1, lsl #28
   321fc:	adc	r0, r0, r0
   32200:	subcs	r3, r3, r1, lsl #28
   32204:	cmp	r3, r1, lsl #27
   32208:	adc	r0, r0, r0
   3220c:	subcs	r3, r3, r1, lsl #27
   32210:	cmp	r3, r1, lsl #26
   32214:	adc	r0, r0, r0
   32218:	subcs	r3, r3, r1, lsl #26
   3221c:	cmp	r3, r1, lsl #25
   32220:	adc	r0, r0, r0
   32224:	subcs	r3, r3, r1, lsl #25
   32228:	cmp	r3, r1, lsl #24
   3222c:	adc	r0, r0, r0
   32230:	subcs	r3, r3, r1, lsl #24
   32234:	cmp	r3, r1, lsl #23
   32238:	adc	r0, r0, r0
   3223c:	subcs	r3, r3, r1, lsl #23
   32240:	cmp	r3, r1, lsl #22
   32244:	adc	r0, r0, r0
   32248:	subcs	r3, r3, r1, lsl #22
   3224c:	cmp	r3, r1, lsl #21
   32250:	adc	r0, r0, r0
   32254:	subcs	r3, r3, r1, lsl #21
   32258:	cmp	r3, r1, lsl #20
   3225c:	adc	r0, r0, r0
   32260:	subcs	r3, r3, r1, lsl #20
   32264:	cmp	r3, r1, lsl #19
   32268:	adc	r0, r0, r0
   3226c:	subcs	r3, r3, r1, lsl #19
   32270:	cmp	r3, r1, lsl #18
   32274:	adc	r0, r0, r0
   32278:	subcs	r3, r3, r1, lsl #18
   3227c:	cmp	r3, r1, lsl #17
   32280:	adc	r0, r0, r0
   32284:	subcs	r3, r3, r1, lsl #17
   32288:	cmp	r3, r1, lsl #16
   3228c:	adc	r0, r0, r0
   32290:	subcs	r3, r3, r1, lsl #16
   32294:	cmp	r3, r1, lsl #15
   32298:	adc	r0, r0, r0
   3229c:	subcs	r3, r3, r1, lsl #15
   322a0:	cmp	r3, r1, lsl #14
   322a4:	adc	r0, r0, r0
   322a8:	subcs	r3, r3, r1, lsl #14
   322ac:	cmp	r3, r1, lsl #13
   322b0:	adc	r0, r0, r0
   322b4:	subcs	r3, r3, r1, lsl #13
   322b8:	cmp	r3, r1, lsl #12
   322bc:	adc	r0, r0, r0
   322c0:	subcs	r3, r3, r1, lsl #12
   322c4:	cmp	r3, r1, lsl #11
   322c8:	adc	r0, r0, r0
   322cc:	subcs	r3, r3, r1, lsl #11
   322d0:	cmp	r3, r1, lsl #10
   322d4:	adc	r0, r0, r0
   322d8:	subcs	r3, r3, r1, lsl #10
   322dc:	cmp	r3, r1, lsl #9
   322e0:	adc	r0, r0, r0
   322e4:	subcs	r3, r3, r1, lsl #9
   322e8:	cmp	r3, r1, lsl #8
   322ec:	adc	r0, r0, r0
   322f0:	subcs	r3, r3, r1, lsl #8
   322f4:	cmp	r3, r1, lsl #7
   322f8:	adc	r0, r0, r0
   322fc:	subcs	r3, r3, r1, lsl #7
   32300:	cmp	r3, r1, lsl #6
   32304:	adc	r0, r0, r0
   32308:	subcs	r3, r3, r1, lsl #6
   3230c:	cmp	r3, r1, lsl #5
   32310:	adc	r0, r0, r0
   32314:	subcs	r3, r3, r1, lsl #5
   32318:	cmp	r3, r1, lsl #4
   3231c:	adc	r0, r0, r0
   32320:	subcs	r3, r3, r1, lsl #4
   32324:	cmp	r3, r1, lsl #3
   32328:	adc	r0, r0, r0
   3232c:	subcs	r3, r3, r1, lsl #3
   32330:	cmp	r3, r1, lsl #2
   32334:	adc	r0, r0, r0
   32338:	subcs	r3, r3, r1, lsl #2
   3233c:	cmp	r3, r1, lsl #1
   32340:	adc	r0, r0, r0
   32344:	subcs	r3, r3, r1, lsl #1
   32348:	cmp	r3, r1
   3234c:	adc	r0, r0, r0
   32350:	subcs	r3, r3, r1
   32354:	cmp	ip, #0
   32358:	rsbmi	r0, r0, #0
   3235c:	bx	lr
   32360:	teq	ip, r0
   32364:	rsbmi	r0, r0, #0
   32368:	bx	lr
   3236c:	movcc	r0, #0
   32370:	asreq	r0, ip, #31
   32374:	orreq	r0, r0, #1
   32378:	bx	lr
   3237c:	clz	r2, r1
   32380:	rsb	r2, r2, #31
   32384:	cmp	ip, #0
   32388:	lsr	r0, r3, r2
   3238c:	rsbmi	r0, r0, #0
   32390:	bx	lr
   32394:	cmp	r0, #0
   32398:	mvngt	r0, #-2147483648	; 0x80000000
   3239c:	movlt	r0, #-2147483648	; 0x80000000
   323a0:	b	32498 <__assert_fail@plt+0x21178>
   323a4:	cmp	r1, #0
   323a8:	beq	32394 <__assert_fail@plt+0x21074>
   323ac:	push	{r0, r1, lr}
   323b0:	bl	3218c <__assert_fail@plt+0x20e6c>
   323b4:	pop	{r1, r2, lr}
   323b8:	mul	r3, r2, r0
   323bc:	sub	r1, r1, r3
   323c0:	bx	lr
   323c4:	cmp	r3, #0
   323c8:	cmpeq	r2, #0
   323cc:	bne	323f0 <__assert_fail@plt+0x210d0>
   323d0:	cmp	r1, #0
   323d4:	movlt	r1, #-2147483648	; 0x80000000
   323d8:	movlt	r0, #0
   323dc:	blt	323ec <__assert_fail@plt+0x210cc>
   323e0:	cmpeq	r0, #0
   323e4:	mvnne	r1, #-2147483648	; 0x80000000
   323e8:	mvnne	r0, #0
   323ec:	b	32498 <__assert_fail@plt+0x21178>
   323f0:	sub	sp, sp, #8
   323f4:	push	{sp, lr}
   323f8:	cmp	r1, #0
   323fc:	blt	3241c <__assert_fail@plt+0x210fc>
   32400:	cmp	r3, #0
   32404:	blt	32450 <__assert_fail@plt+0x21130>
   32408:	bl	324a8 <__assert_fail@plt+0x21188>
   3240c:	ldr	lr, [sp, #4]
   32410:	add	sp, sp, #8
   32414:	pop	{r2, r3}
   32418:	bx	lr
   3241c:	rsbs	r0, r0, #0
   32420:	sbc	r1, r1, r1, lsl #1
   32424:	cmp	r3, #0
   32428:	blt	32474 <__assert_fail@plt+0x21154>
   3242c:	bl	324a8 <__assert_fail@plt+0x21188>
   32430:	ldr	lr, [sp, #4]
   32434:	add	sp, sp, #8
   32438:	pop	{r2, r3}
   3243c:	rsbs	r0, r0, #0
   32440:	sbc	r1, r1, r1, lsl #1
   32444:	rsbs	r2, r2, #0
   32448:	sbc	r3, r3, r3, lsl #1
   3244c:	bx	lr
   32450:	rsbs	r2, r2, #0
   32454:	sbc	r3, r3, r3, lsl #1
   32458:	bl	324a8 <__assert_fail@plt+0x21188>
   3245c:	ldr	lr, [sp, #4]
   32460:	add	sp, sp, #8
   32464:	pop	{r2, r3}
   32468:	rsbs	r0, r0, #0
   3246c:	sbc	r1, r1, r1, lsl #1
   32470:	bx	lr
   32474:	rsbs	r2, r2, #0
   32478:	sbc	r3, r3, r3, lsl #1
   3247c:	bl	324a8 <__assert_fail@plt+0x21188>
   32480:	ldr	lr, [sp, #4]
   32484:	add	sp, sp, #8
   32488:	pop	{r2, r3}
   3248c:	rsbs	r2, r2, #0
   32490:	sbc	r3, r3, r3, lsl #1
   32494:	bx	lr
   32498:	push	{r1, lr}
   3249c:	mov	r0, #8
   324a0:	bl	11014 <raise@plt>
   324a4:	pop	{r1, pc}
   324a8:	cmp	r1, r3
   324ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   324b0:	cmpeq	r0, r2
   324b4:	mov	r4, r0
   324b8:	mov	r5, r1
   324bc:	ldr	r9, [sp, #28]
   324c0:	movcc	r0, #0
   324c4:	movcc	r1, #0
   324c8:	bcc	325c0 <__assert_fail@plt+0x212a0>
   324cc:	cmp	r3, #0
   324d0:	clzeq	ip, r2
   324d4:	clzne	ip, r3
   324d8:	addeq	ip, ip, #32
   324dc:	cmp	r5, #0
   324e0:	clzeq	r1, r4
   324e4:	addeq	r1, r1, #32
   324e8:	clzne	r1, r5
   324ec:	sub	ip, ip, r1
   324f0:	sub	lr, ip, #32
   324f4:	lsl	r7, r3, ip
   324f8:	rsb	r8, ip, #32
   324fc:	orr	r7, r7, r2, lsl lr
   32500:	orr	r7, r7, r2, lsr r8
   32504:	lsl	r6, r2, ip
   32508:	cmp	r5, r7
   3250c:	cmpeq	r4, r6
   32510:	movcc	r0, #0
   32514:	movcc	r1, #0
   32518:	bcc	32534 <__assert_fail@plt+0x21214>
   3251c:	mov	r3, #1
   32520:	subs	r4, r4, r6
   32524:	lsl	r1, r3, lr
   32528:	lsl	r0, r3, ip
   3252c:	orr	r1, r1, r3, lsr r8
   32530:	sbc	r5, r5, r7
   32534:	cmp	ip, #0
   32538:	beq	325c0 <__assert_fail@plt+0x212a0>
   3253c:	lsrs	r3, r7, #1
   32540:	rrx	r2, r6
   32544:	mov	r6, ip
   32548:	b	3256c <__assert_fail@plt+0x2124c>
   3254c:	subs	r4, r4, r2
   32550:	sbc	r5, r5, r3
   32554:	adds	r4, r4, r4
   32558:	adc	r5, r5, r5
   3255c:	adds	r4, r4, #1
   32560:	adc	r5, r5, #0
   32564:	subs	r6, r6, #1
   32568:	beq	32588 <__assert_fail@plt+0x21268>
   3256c:	cmp	r5, r3
   32570:	cmpeq	r4, r2
   32574:	bcs	3254c <__assert_fail@plt+0x2122c>
   32578:	adds	r4, r4, r4
   3257c:	adc	r5, r5, r5
   32580:	subs	r6, r6, #1
   32584:	bne	3256c <__assert_fail@plt+0x2124c>
   32588:	lsr	r6, r4, ip
   3258c:	lsr	r7, r5, ip
   32590:	orr	r6, r6, r5, lsl r8
   32594:	adds	r2, r0, r4
   32598:	orr	r6, r6, r5, lsr lr
   3259c:	adc	r3, r1, r5
   325a0:	lsl	r1, r7, ip
   325a4:	orr	r1, r1, r6, lsl lr
   325a8:	lsl	r0, r6, ip
   325ac:	orr	r1, r1, r6, lsr r8
   325b0:	subs	r0, r2, r0
   325b4:	mov	r4, r6
   325b8:	mov	r5, r7
   325bc:	sbc	r1, r3, r1
   325c0:	cmp	r9, #0
   325c4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   325c8:	strd	r4, [r9]
   325cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   325d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   325d4:	mov	r7, r0
   325d8:	ldr	r6, [pc, #72]	; 32628 <__assert_fail@plt+0x21308>
   325dc:	ldr	r5, [pc, #72]	; 3262c <__assert_fail@plt+0x2130c>
   325e0:	add	r6, pc, r6
   325e4:	add	r5, pc, r5
   325e8:	sub	r6, r6, r5
   325ec:	mov	r8, r1
   325f0:	mov	r9, r2
   325f4:	bl	10fc4 <pthread_mutex_unlock@plt-0x20>
   325f8:	asrs	r6, r6, #2
   325fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   32600:	mov	r4, #0
   32604:	add	r4, r4, #1
   32608:	ldr	r3, [r5], #4
   3260c:	mov	r2, r9
   32610:	mov	r1, r8
   32614:	mov	r0, r7
   32618:	blx	r3
   3261c:	cmp	r6, r4
   32620:	bne	32604 <__assert_fail@plt+0x212e4>
   32624:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32628:	andeq	r1, r1, r8, lsr #18
   3262c:	andeq	r1, r1, r0, lsr #18
   32630:	bx	lr
   32634:	ldr	r3, [pc, #12]	; 32648 <__assert_fail@plt+0x21328>
   32638:	mov	r1, #0
   3263c:	add	r3, pc, r3
   32640:	ldr	r2, [r3]
   32644:	b	1123c <__cxa_atexit@plt>
   32648:	andeq	r1, r1, r8, ror #21

Disassembly of section .fini:

0003264c <.fini>:
   3264c:	push	{r3, lr}
   32650:	pop	{r3, pc}
