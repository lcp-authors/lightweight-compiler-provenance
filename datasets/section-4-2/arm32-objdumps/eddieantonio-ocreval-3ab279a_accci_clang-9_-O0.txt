
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

000109fc <.init>:
   109fc:	push	{r3, lr}
   10a00:	bl	10bc4 <getc@plt+0x4c>
   10a04:	pop	{r3, pc}

Disassembly of section .plt:

00010a08 <calloc@plt-0x14>:
   10a08:	push	{lr}		; (str lr, [sp, #-4]!)
   10a0c:	ldr	lr, [pc, #4]	; 10a18 <calloc@plt-0x4>
   10a10:	add	lr, pc, lr
   10a14:	ldr	pc, [lr, #8]!
   10a18:	andeq	r5, r1, r8, ror #11

00010a1c <calloc@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #86016	; 0x15000
   10a24:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a28 <strcmp@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #86016	; 0x15000
   10a30:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a34 <printf@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #86016	; 0x15000
   10a3c:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a40 <fopen@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #86016	; 0x15000
   10a48:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a4c <free@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #86016	; 0x15000
   10a54:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a58 <utf8proc_get_property@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #86016	; 0x15000
   10a60:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a64 <fgets@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #86016	; 0x15000
   10a6c:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a70 <utf8proc_encode_char@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #86016	; 0x15000
   10a78:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a7c <strdup@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #86016	; 0x15000
   10a84:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a88 <rewind@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #86016	; 0x15000
   10a90:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a94 <utf8proc_tolower@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #86016	; 0x15000
   10a9c:	ldr	pc, [ip, #1432]!	; 0x598

00010aa0 <__xstat@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #86016	; 0x15000
   10aa8:	ldr	pc, [ip, #1424]!	; 0x590

00010aac <fread@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #86016	; 0x15000
   10ab4:	ldr	pc, [ip, #1416]!	; 0x588

00010ab8 <utf8proc_iterate@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #86016	; 0x15000
   10ac0:	ldr	pc, [ip, #1408]!	; 0x580

00010ac4 <__libc_start_main@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #86016	; 0x15000
   10acc:	ldr	pc, [ip, #1400]!	; 0x578

00010ad0 <__sysv_signal@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #86016	; 0x15000
   10ad8:	ldr	pc, [ip, #1392]!	; 0x570

00010adc <__gmon_start__@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #86016	; 0x15000
   10ae4:	ldr	pc, [ip, #1384]!	; 0x568

00010ae8 <exit@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #86016	; 0x15000
   10af0:	ldr	pc, [ip, #1376]!	; 0x560

00010af4 <utf8proc_category@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #86016	; 0x15000
   10afc:	ldr	pc, [ip, #1368]!	; 0x558

00010b00 <strlen@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #86016	; 0x15000
   10b08:	ldr	pc, [ip, #1360]!	; 0x550

00010b0c <fprintf@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #86016	; 0x15000
   10b14:	ldr	pc, [ip, #1352]!	; 0x548

00010b18 <sqrt@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #86016	; 0x15000
   10b20:	ldr	pc, [ip, #1344]!	; 0x540

00010b24 <__isoc99_sscanf@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #86016	; 0x15000
   10b2c:	ldr	pc, [ip, #1336]!	; 0x538

00010b30 <fclose@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #86016	; 0x15000
   10b38:	ldr	pc, [ip, #1328]!	; 0x530

00010b3c <sprintf@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #86016	; 0x15000
   10b44:	ldr	pc, [ip, #1320]!	; 0x528

00010b48 <utf8proc_errmsg@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #86016	; 0x15000
   10b50:	ldr	pc, [ip, #1312]!	; 0x520

00010b54 <fputs@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #86016	; 0x15000
   10b5c:	ldr	pc, [ip, #1304]!	; 0x518

00010b60 <strncmp@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #86016	; 0x15000
   10b68:	ldr	pc, [ip, #1296]!	; 0x510

00010b6c <abort@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #86016	; 0x15000
   10b74:	ldr	pc, [ip, #1288]!	; 0x508

00010b78 <getc@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #86016	; 0x15000
   10b80:	ldr	pc, [ip, #1280]!	; 0x500

Disassembly of section .text:

00010b88 <error@@Base-0x2a70>:
   10b88:	mov	fp, #0
   10b8c:	mov	lr, #0
   10b90:	pop	{r1}		; (ldr r1, [sp], #4)
   10b94:	mov	r2, sp
   10b98:	push	{r2}		; (str r2, [sp, #-4]!)
   10b9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10ba0:	ldr	ip, [pc, #16]	; 10bb8 <getc@plt+0x40>
   10ba4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ba8:	ldr	r0, [pc, #12]	; 10bbc <getc@plt+0x44>
   10bac:	ldr	r3, [pc, #12]	; 10bc0 <getc@plt+0x48>
   10bb0:	bl	10ac4 <__libc_start_main@plt>
   10bb4:	bl	10b6c <abort@plt>
   10bb8:	andeq	r4, r1, r0, lsr #23
   10bbc:	andeq	r0, r1, r0, ror lr
   10bc0:	andeq	r4, r1, r0, asr #22
   10bc4:	ldr	r3, [pc, #20]	; 10be0 <getc@plt+0x68>
   10bc8:	ldr	r2, [pc, #20]	; 10be4 <getc@plt+0x6c>
   10bcc:	add	r3, pc, r3
   10bd0:	ldr	r2, [r3, r2]
   10bd4:	cmp	r2, #0
   10bd8:	bxeq	lr
   10bdc:	b	10adc <__gmon_start__@plt>
   10be0:	andeq	r5, r1, ip, lsr #8
   10be4:	andeq	r0, r0, r8, asr #1
   10be8:	ldr	r0, [pc, #24]	; 10c08 <getc@plt+0x90>
   10bec:	ldr	r3, [pc, #24]	; 10c0c <getc@plt+0x94>
   10bf0:	cmp	r3, r0
   10bf4:	bxeq	lr
   10bf8:	ldr	r3, [pc, #16]	; 10c10 <getc@plt+0x98>
   10bfc:	cmp	r3, #0
   10c00:	bxeq	lr
   10c04:	bx	r3
   10c08:	andeq	r6, r2, r8, ror #10
   10c0c:	andeq	r6, r2, r8, ror #10
   10c10:	andeq	r0, r0, r0
   10c14:	ldr	r0, [pc, #36]	; 10c40 <getc@plt+0xc8>
   10c18:	ldr	r1, [pc, #36]	; 10c44 <getc@plt+0xcc>
   10c1c:	sub	r1, r1, r0
   10c20:	asr	r1, r1, #2
   10c24:	add	r1, r1, r1, lsr #31
   10c28:	asrs	r1, r1, #1
   10c2c:	bxeq	lr
   10c30:	ldr	r3, [pc, #16]	; 10c48 <getc@plt+0xd0>
   10c34:	cmp	r3, #0
   10c38:	bxeq	lr
   10c3c:	bx	r3
   10c40:	andeq	r6, r2, r8, ror #10
   10c44:	andeq	r6, r2, r8, ror #10
   10c48:	andeq	r0, r0, r0
   10c4c:	push	{r4, lr}
   10c50:	ldr	r4, [pc, #24]	; 10c70 <getc@plt+0xf8>
   10c54:	ldrb	r3, [r4]
   10c58:	cmp	r3, #0
   10c5c:	popne	{r4, pc}
   10c60:	bl	10be8 <getc@plt+0x70>
   10c64:	mov	r3, #1
   10c68:	strb	r3, [r4]
   10c6c:	pop	{r4, pc}
   10c70:	andeq	r6, r2, r8, ror #10
   10c74:	b	10c14 <getc@plt+0x9c>
   10c78:	push	{fp, lr}
   10c7c:	mov	fp, sp
   10c80:	sub	sp, sp, #24
   10c84:	ldr	r1, [pc, #132]	; 10d10 <getc@plt+0x198>
   10c88:	ldr	r1, [pc, r1]
   10c8c:	ldr	r2, [pc, #128]	; 10d14 <getc@plt+0x19c>
   10c90:	ldr	r2, [pc, r2]
   10c94:	str	r0, [fp, #-4]
   10c98:	ldr	r0, [r1]
   10c9c:	str	r0, [fp, #-8]
   10ca0:	ldr	r0, [r1, #4]
   10ca4:	str	r0, [sp, #12]
   10ca8:	ldr	r0, [fp, #-4]
   10cac:	str	r0, [sp, #8]
   10cb0:	mov	r0, r1
   10cb4:	ldr	r1, [sp, #8]
   10cb8:	blx	r2
   10cbc:	ldr	r0, [pc, #64]	; 10d04 <getc@plt+0x18c>
   10cc0:	ldr	r0, [pc, r0]
   10cc4:	ldr	r1, [pc, #60]	; 10d08 <getc@plt+0x190>
   10cc8:	ldr	r1, [pc, r1]
   10ccc:	ldr	r2, [pc, #56]	; 10d0c <getc@plt+0x194>
   10cd0:	ldr	r2, [pc, r2]
   10cd4:	ldr	r3, [r2]
   10cd8:	ldr	ip, [fp, #-8]
   10cdc:	sub	r3, r3, ip
   10ce0:	ldr	r2, [r2, #4]
   10ce4:	ldr	ip, [sp, #12]
   10ce8:	sub	r2, r2, ip
   10cec:	str	r1, [sp, #4]
   10cf0:	mov	r1, r3
   10cf4:	ldr	r3, [sp, #4]
   10cf8:	blx	r3
   10cfc:	mov	sp, fp
   10d00:	pop	{fp, pc}
   10d04:	andeq	r5, r1, r8, lsl #8
   10d08:	ldrdeq	r5, [r1], -ip
   10d0c:			; <UNDEFINED> instruction: 0x000153b4
   10d10:	strdeq	r5, [r1], -ip
   10d14:	andeq	r5, r1, r4, ror #8
   10d18:	push	{fp, lr}
   10d1c:	mov	fp, sp
   10d20:	sub	sp, sp, #56	; 0x38
   10d24:	ldr	r0, [pc, #316]	; 10e68 <getc@plt+0x2f0>
   10d28:	ldr	r0, [pc, r0]
   10d2c:	ldr	r1, [pc, #312]	; 10e6c <getc@plt+0x2f4>
   10d30:	ldr	r1, [pc, r1]
   10d34:	sub	r2, fp, #8
   10d38:	str	r1, [fp, #-20]	; 0xffffffec
   10d3c:	mov	r1, r2
   10d40:	sub	r2, fp, #16
   10d44:	ldr	r3, [fp, #-20]	; 0xffffffec
   10d48:	blx	r3
   10d4c:	ldr	r0, [pc, #268]	; 10e60 <getc@plt+0x2e8>
   10d50:	add	r0, pc, r0
   10d54:	ldr	r1, [pc, #264]	; 10e64 <getc@plt+0x2ec>
   10d58:	ldr	r1, [pc, r1]
   10d5c:	ldr	r1, [r1, #12]
   10d60:	bl	10a34 <printf@plt>
   10d64:	ldr	r1, [pc, #236]	; 10e58 <getc@plt+0x2e0>
   10d68:	add	r1, pc, r1
   10d6c:	ldr	r2, [pc, #232]	; 10e5c <getc@plt+0x2e4>
   10d70:	ldr	r2, [pc, r2]
   10d74:	ldr	r2, [r2]
   10d78:	str	r0, [fp, #-24]	; 0xffffffe8
   10d7c:	mov	r0, r1
   10d80:	mov	r1, r2
   10d84:	bl	10a34 <printf@plt>
   10d88:	ldr	r1, [pc, #192]	; 10e50 <getc@plt+0x2d8>
   10d8c:	add	r1, pc, r1
   10d90:	ldr	r2, [pc, #188]	; 10e54 <getc@plt+0x2dc>
   10d94:	ldr	r2, [pc, r2]
   10d98:	ldr	r2, [r2, #4]
   10d9c:	str	r0, [sp, #28]
   10da0:	mov	r0, r1
   10da4:	mov	r1, r2
   10da8:	bl	10a34 <printf@plt>
   10dac:	ldr	r1, [pc, #148]	; 10e48 <getc@plt+0x2d0>
   10db0:	add	r1, pc, r1
   10db4:	ldr	r2, [pc, #144]	; 10e4c <getc@plt+0x2d4>
   10db8:	ldr	r2, [pc, r2]
   10dbc:	vldr	d16, [pc, #116]	; 10e38 <getc@plt+0x2c0>
   10dc0:	ldr	r3, [r2]
   10dc4:	ldr	ip, [r2, #4]
   10dc8:	sub	r3, r3, ip
   10dcc:	vmov	s0, r3
   10dd0:	vcvt.f64.s32	d17, s0
   10dd4:	vmul.f64	d16, d16, d17
   10dd8:	ldr	r2, [r2]
   10ddc:	vmov	s0, r2
   10de0:	vcvt.f64.s32	d17, s0
   10de4:	vdiv.f64	d16, d16, d17
   10de8:	str	r0, [sp, #24]
   10dec:	mov	r0, r1
   10df0:	vmov	r2, r3, d16
   10df4:	bl	10a34 <printf@plt>
   10df8:	ldr	r1, [pc, #64]	; 10e40 <getc@plt+0x2c8>
   10dfc:	add	r1, pc, r1
   10e00:	ldr	r2, [pc, #60]	; 10e44 <getc@plt+0x2cc>
   10e04:	add	r2, pc, r2
   10e08:	vldr	d16, [fp, #-8]
   10e0c:	vldr	d17, [fp, #-16]
   10e10:	str	r0, [sp, #20]
   10e14:	mov	r0, r1
   10e18:	str	r2, [sp, #16]
   10e1c:	vmov	r2, r3, d16
   10e20:	vstr	d17, [sp]
   10e24:	ldr	r1, [sp, #16]
   10e28:	str	r1, [sp, #8]
   10e2c:	bl	10a34 <printf@plt>
   10e30:	mov	sp, fp
   10e34:	pop	{fp, pc}
   10e38:	andeq	r0, r0, r0
   10e3c:	subsmi	r0, r9, r0
   10e40:	andeq	r3, r0, sl, lsl #28
   10e44:	andeq	r3, r0, r7, lsl lr
   10e48:	andeq	r3, r0, r2, asr #28
   10e4c:	andeq	r5, r1, ip, asr #5
   10e50:	andeq	r3, r0, r6, asr lr
   10e54:	strdeq	r5, [r1], -r0
   10e58:	andeq	r3, r0, r6, ror #28
   10e5c:	andeq	r5, r1, r4, lsl r3
   10e60:	andeq	r3, r0, r8, ror #28
   10e64:	andeq	r5, r1, r0, ror r3
   10e68:	andeq	r5, r1, r0, lsr #7
   10e6c:	andeq	r5, r1, ip, lsr #7
   10e70:	push	{fp, lr}
   10e74:	mov	fp, sp
   10e78:	sub	sp, sp, #24
   10e7c:	ldr	r2, [pc, #156]	; 10f20 <getc@plt+0x3a8>
   10e80:	add	r2, pc, r2
   10e84:	ldr	r3, [pc, #152]	; 10f24 <getc@plt+0x3ac>
   10e88:	ldr	r3, [pc, r3]
   10e8c:	movw	ip, #0
   10e90:	str	ip, [fp, #-4]
   10e94:	str	r0, [fp, #-8]
   10e98:	str	r1, [sp, #12]
   10e9c:	ldr	r1, [sp, #12]
   10ea0:	sub	r0, fp, #8
   10ea4:	str	r3, [sp, #4]
   10ea8:	mov	r3, ip
   10eac:	ldr	ip, [sp, #4]
   10eb0:	blx	ip
   10eb4:	ldr	r0, [fp, #-8]
   10eb8:	cmp	r0, #2
   10ebc:	bge	10ed4 <getc@plt+0x35c>
   10ec0:	ldr	r0, [pc, #100]	; 10f2c <getc@plt+0x3b4>
   10ec4:	add	r0, pc, r0
   10ec8:	ldr	r1, [pc, #96]	; 10f30 <getc@plt+0x3b8>
   10ecc:	ldr	r1, [pc, r1]
   10ed0:	blx	r1
   10ed4:	movw	r0, #0
   10ed8:	str	r0, [sp, #8]
   10edc:	ldr	r0, [sp, #8]
   10ee0:	ldr	r1, [fp, #-8]
   10ee4:	cmp	r0, r1
   10ee8:	bge	10f10 <getc@plt+0x398>
   10eec:	ldr	r0, [sp, #12]
   10ef0:	ldr	r1, [sp, #8]
   10ef4:	add	r0, r0, r1, lsl #2
   10ef8:	ldr	r0, [r0]
   10efc:	bl	10c78 <getc@plt+0x100>
   10f00:	ldr	r0, [sp, #8]
   10f04:	add	r0, r0, #1
   10f08:	str	r0, [sp, #8]
   10f0c:	b	10edc <getc@plt+0x364>
   10f10:	bl	10d18 <getc@plt+0x1a0>
   10f14:	ldr	r0, [pc, #12]	; 10f28 <getc@plt+0x3b0>
   10f18:	ldr	r0, [pc, r0]
   10f1c:	blx	r0
   10f20:	andeq	r3, r0, ip, asr #27
   10f24:	andeq	r5, r1, r8, lsr #4
   10f28:	andeq	r5, r1, r8, asr #3
   10f2c:			; <UNDEFINED> instruction: 0x00003dba
   10f30:	andeq	r5, r1, r0, asr #3
   10f34:	andeq	r0, r0, r0
   10f38:	push	{fp, lr}
   10f3c:	mov	fp, sp
   10f40:	sub	sp, sp, #24
   10f44:	str	r0, [fp, #-4]
   10f48:	str	r1, [fp, #-8]
   10f4c:	str	r2, [sp, #12]
   10f50:	str	r3, [sp, #8]
   10f54:	ldr	r0, [fp, #-4]
   10f58:	ldr	r1, [fp, #-8]
   10f5c:	str	r0, [sp, #4]
   10f60:	mov	r0, r1
   10f64:	bl	12c28 <getc@plt+0x20b0>
   10f68:	ldr	r1, [sp, #4]
   10f6c:	add	r0, r1, r0, lsl #3
   10f70:	add	r0, r0, #68	; 0x44
   10f74:	ldr	r1, [sp, #12]
   10f78:	ldr	r2, [sp, #8]
   10f7c:	bl	10fc0 <getc@plt+0x448>
   10f80:	ldr	r0, [fp, #-4]
   10f84:	movw	r1, #2116	; 0x844
   10f88:	add	r0, r0, r1
   10f8c:	ldr	r1, [sp, #12]
   10f90:	ldr	r2, [sp, #8]
   10f94:	bl	10fc0 <getc@plt+0x448>
   10f98:	ldr	r0, [fp, #-4]
   10f9c:	movw	r1, #10180	; 0x27c4
   10fa0:	add	r0, r0, r1
   10fa4:	ldr	r1, [fp, #-8]
   10fa8:	add	r0, r0, r1, lsl #3
   10fac:	ldr	r1, [sp, #12]
   10fb0:	ldr	r2, [sp, #8]
   10fb4:	bl	10fc0 <getc@plt+0x448>
   10fb8:	mov	sp, fp
   10fbc:	pop	{fp, pc}
   10fc0:	sub	sp, sp, #12
   10fc4:	str	r0, [sp, #8]
   10fc8:	str	r1, [sp, #4]
   10fcc:	str	r2, [sp]
   10fd0:	ldr	r0, [sp, #4]
   10fd4:	ldr	r1, [sp, #8]
   10fd8:	ldr	r2, [r1]
   10fdc:	add	r0, r2, r0
   10fe0:	str	r0, [r1]
   10fe4:	ldr	r0, [sp]
   10fe8:	ldr	r1, [sp, #8]
   10fec:	ldr	r2, [r1, #4]
   10ff0:	add	r0, r2, r0
   10ff4:	str	r0, [r1, #4]
   10ff8:	add	sp, sp, #12
   10ffc:	bx	lr
   11000:	push	{fp, lr}
   11004:	mov	fp, sp
   11008:	sub	sp, sp, #32
   1100c:	ldr	ip, [pc, #224]	; 110f4 <getc@plt+0x57c>
   11010:	ldr	ip, [pc, ip]
   11014:	str	r0, [fp, #-4]
   11018:	str	r1, [fp, #-8]
   1101c:	str	r2, [fp, #-12]
   11020:	str	r3, [sp, #16]
   11024:	ldr	r0, [fp, #-4]
   11028:	movw	r1, #2124	; 0x84c
   1102c:	add	r0, r0, r1
   11030:	ldr	r1, [fp, #-8]
   11034:	blx	ip
   11038:	str	r0, [sp, #12]
   1103c:	ldr	r0, [sp, #12]
   11040:	movw	r1, #0
   11044:	cmp	r0, r1
   11048:	beq	11078 <getc@plt+0x500>
   1104c:	ldr	r0, [fp, #-12]
   11050:	ldr	r1, [sp, #12]
   11054:	ldr	r2, [r1, #12]
   11058:	add	r0, r2, r0
   1105c:	str	r0, [r1, #12]
   11060:	ldr	r0, [sp, #16]
   11064:	ldr	r1, [sp, #12]
   11068:	ldr	r2, [r1, #16]
   1106c:	add	r0, r2, r0
   11070:	str	r0, [r1, #16]
   11074:	b	110ec <getc@plt+0x574>
   11078:	ldr	r0, [pc, #124]	; 110fc <getc@plt+0x584>
   1107c:	ldr	r0, [pc, r0]
   11080:	movw	r1, #1
   11084:	str	r0, [sp, #8]
   11088:	mov	r0, r1
   1108c:	movw	r1, #20
   11090:	ldr	r2, [sp, #8]
   11094:	blx	r2
   11098:	str	r0, [sp, #12]
   1109c:	ldr	r0, [fp, #-8]
   110a0:	bl	10a7c <strdup@plt>
   110a4:	ldr	r1, [pc, #76]	; 110f8 <getc@plt+0x580>
   110a8:	ldr	r1, [pc, r1]
   110ac:	ldr	r2, [sp, #12]
   110b0:	str	r0, [r2, #8]
   110b4:	ldr	r0, [fp, #-12]
   110b8:	ldr	r2, [sp, #12]
   110bc:	str	r0, [r2, #12]
   110c0:	ldr	r0, [sp, #16]
   110c4:	ldr	r2, [sp, #12]
   110c8:	str	r0, [r2, #16]
   110cc:	ldr	r0, [fp, #-4]
   110d0:	movw	r2, #2124	; 0x84c
   110d4:	add	r0, r0, r2
   110d8:	ldr	r2, [sp, #12]
   110dc:	str	r1, [sp, #4]
   110e0:	mov	r1, r2
   110e4:	ldr	r2, [sp, #4]
   110e8:	blx	r2
   110ec:	mov	sp, fp
   110f0:	pop	{fp, pc}
   110f4:	andeq	r5, r1, ip, lsr #1
   110f8:	andeq	r4, r1, r8, ror #31
   110fc:	andeq	r5, r1, r0, lsl #1
   11100:	push	{fp, lr}
   11104:	mov	fp, sp
   11108:	sub	sp, sp, #48	; 0x30
   1110c:	ldr	r2, [pc, #1004]	; 11500 <getc@plt+0x988>
   11110:	add	r2, pc, r2
   11114:	ldr	r3, [pc, #1000]	; 11504 <getc@plt+0x98c>
   11118:	ldr	r3, [pc, r3]
   1111c:	str	r0, [fp, #-4]
   11120:	str	r1, [fp, #-8]
   11124:	ldr	r0, [fp, #-8]
   11128:	mov	r1, r2
   1112c:	blx	r3
   11130:	str	r0, [fp, #-12]
   11134:	ldr	r0, [fp, #-12]
   11138:	bl	11544 <getc@plt+0x9cc>
   1113c:	and	r0, r0, #255	; 0xff
   11140:	cmp	r0, #0
   11144:	beq	1148c <getc@plt+0x914>
   11148:	ldr	r0, [pc, #952]	; 11508 <getc@plt+0x990>
   1114c:	add	r0, pc, r0
   11150:	ldr	r1, [pc, #948]	; 1150c <getc@plt+0x994>
   11154:	add	r1, pc, r1
   11158:	movw	r2, #40	; 0x28
   1115c:	bl	10b60 <strncmp@plt>
   11160:	cmp	r0, #0
   11164:	bne	1148c <getc@plt+0x914>
   11168:	ldr	r0, [fp, #-12]
   1116c:	bl	11544 <getc@plt+0x9cc>
   11170:	and	r0, r0, #255	; 0xff
   11174:	cmp	r0, #0
   11178:	beq	1148c <getc@plt+0x914>
   1117c:	ldr	r0, [pc, #952]	; 1153c <getc@plt+0x9c4>
   11180:	add	r0, pc, r0
   11184:	ldr	r1, [pc, #948]	; 11540 <getc@plt+0x9c8>
   11188:	add	r1, pc, r1
   1118c:	bl	10a28 <strcmp@plt>
   11190:	cmp	r0, #0
   11194:	bne	1148c <getc@plt+0x914>
   11198:	ldr	r0, [fp, #-12]
   1119c:	ldr	r2, [fp, #-4]
   111a0:	sub	r1, fp, #16
   111a4:	bl	11598 <getc@plt+0xa20>
   111a8:	and	r0, r0, #255	; 0xff
   111ac:	cmp	r0, #0
   111b0:	beq	1148c <getc@plt+0x914>
   111b4:	ldr	r0, [fp, #-12]
   111b8:	ldr	r1, [fp, #-4]
   111bc:	add	r2, r1, #4
   111c0:	sub	r1, fp, #20
   111c4:	bl	11598 <getc@plt+0xa20>
   111c8:	and	r0, r0, #255	; 0xff
   111cc:	cmp	r0, #0
   111d0:	beq	1148c <getc@plt+0x914>
   111d4:	ldr	r0, [fp, #-12]
   111d8:	bl	11544 <getc@plt+0x9cc>
   111dc:	and	r0, r0, #255	; 0xff
   111e0:	cmp	r0, #0
   111e4:	beq	1148c <getc@plt+0x914>
   111e8:	ldr	r0, [fp, #-12]
   111ec:	bl	11544 <getc@plt+0x9cc>
   111f0:	and	r0, r0, #255	; 0xff
   111f4:	cmp	r0, #0
   111f8:	beq	1148c <getc@plt+0x914>
   111fc:	ldr	r0, [fp, #-12]
   11200:	ldr	r1, [fp, #-4]
   11204:	add	r2, r1, #8
   11208:	add	r1, sp, #24
   1120c:	bl	11598 <getc@plt+0xa20>
   11210:	and	r0, r0, #255	; 0xff
   11214:	cmp	r0, #0
   11218:	beq	1148c <getc@plt+0x914>
   1121c:	ldr	r0, [fp, #-12]
   11220:	ldr	r1, [fp, #-4]
   11224:	add	r2, r1, #12
   11228:	add	r1, sp, #24
   1122c:	bl	11598 <getc@plt+0xa20>
   11230:	and	r0, r0, #255	; 0xff
   11234:	cmp	r0, #0
   11238:	beq	1148c <getc@plt+0x914>
   1123c:	ldr	r0, [fp, #-12]
   11240:	ldr	r1, [fp, #-4]
   11244:	add	r2, r1, #16
   11248:	add	r1, sp, #24
   1124c:	bl	11598 <getc@plt+0xa20>
   11250:	and	r0, r0, #255	; 0xff
   11254:	cmp	r0, #0
   11258:	beq	1148c <getc@plt+0x914>
   1125c:	ldr	r0, [fp, #-12]
   11260:	bl	11544 <getc@plt+0x9cc>
   11264:	and	r0, r0, #255	; 0xff
   11268:	cmp	r0, #0
   1126c:	beq	1148c <getc@plt+0x914>
   11270:	ldr	r0, [fp, #-12]
   11274:	bl	11544 <getc@plt+0x9cc>
   11278:	and	r0, r0, #255	; 0xff
   1127c:	cmp	r0, #0
   11280:	beq	1148c <getc@plt+0x914>
   11284:	ldr	r0, [fp, #-12]
   11288:	bl	11544 <getc@plt+0x9cc>
   1128c:	and	r0, r0, #255	; 0xff
   11290:	cmp	r0, #0
   11294:	beq	1148c <getc@plt+0x914>
   11298:	ldr	r0, [fp, #-12]
   1129c:	bl	11544 <getc@plt+0x9cc>
   112a0:	and	r0, r0, #255	; 0xff
   112a4:	cmp	r0, #0
   112a8:	beq	1148c <getc@plt+0x914>
   112ac:	ldr	r0, [fp, #-12]
   112b0:	ldr	r1, [fp, #-4]
   112b4:	add	r1, r1, #20
   112b8:	bl	11624 <getc@plt+0xaac>
   112bc:	and	r0, r0, #255	; 0xff
   112c0:	cmp	r0, #0
   112c4:	beq	1148c <getc@plt+0x914>
   112c8:	ldr	r0, [fp, #-12]
   112cc:	ldr	r1, [fp, #-4]
   112d0:	add	r1, r1, #36	; 0x24
   112d4:	bl	11624 <getc@plt+0xaac>
   112d8:	and	r0, r0, #255	; 0xff
   112dc:	cmp	r0, #0
   112e0:	beq	1148c <getc@plt+0x914>
   112e4:	ldr	r0, [fp, #-12]
   112e8:	ldr	r1, [fp, #-4]
   112ec:	add	r1, r1, #52	; 0x34
   112f0:	bl	11624 <getc@plt+0xaac>
   112f4:	and	r0, r0, #255	; 0xff
   112f8:	cmp	r0, #0
   112fc:	beq	1148c <getc@plt+0x914>
   11300:	ldr	r0, [fp, #-12]
   11304:	bl	11544 <getc@plt+0x9cc>
   11308:	and	r0, r0, #255	; 0xff
   1130c:	cmp	r0, #0
   11310:	beq	1148c <getc@plt+0x914>
   11314:	b	11318 <getc@plt+0x7a0>
   11318:	ldr	r0, [fp, #-12]
   1131c:	bl	11544 <getc@plt+0x9cc>
   11320:	and	r0, r0, #255	; 0xff
   11324:	cmp	r0, #0
   11328:	movw	r0, #0
   1132c:	str	r0, [sp, #12]
   11330:	beq	11350 <getc@plt+0x7d8>
   11334:	ldr	r0, [pc, #480]	; 1151c <getc@plt+0x9a4>
   11338:	add	r0, pc, r0
   1133c:	ldrb	r0, [r0]
   11340:	cmp	r0, #10
   11344:	movw	r0, #0
   11348:	movne	r0, #1
   1134c:	str	r0, [sp, #12]
   11350:	ldr	r0, [sp, #12]
   11354:	tst	r0, #1
   11358:	beq	11360 <getc@plt+0x7e8>
   1135c:	b	11318 <getc@plt+0x7a0>
   11360:	ldr	r0, [fp, #-20]	; 0xffffffec
   11364:	cmp	r0, #0
   11368:	ble	113c4 <getc@plt+0x84c>
   1136c:	ldr	r0, [fp, #-12]
   11370:	bl	11544 <getc@plt+0x9cc>
   11374:	and	r0, r0, #255	; 0xff
   11378:	cmp	r0, #0
   1137c:	beq	113c4 <getc@plt+0x84c>
   11380:	b	11384 <getc@plt+0x80c>
   11384:	ldr	r0, [fp, #-12]
   11388:	add	r1, sp, #24
   1138c:	add	r2, sp, #20
   11390:	bl	116f8 <getc@plt+0xb80>
   11394:	sxtb	r0, r0
   11398:	cmp	r0, #0
   1139c:	beq	113c0 <getc@plt+0x848>
   113a0:	ldr	r0, [pc, #400]	; 11538 <getc@plt+0x9c0>
   113a4:	add	r0, pc, r0
   113a8:	add	r1, r0, #20
   113ac:	ldr	r0, [fp, #-4]
   113b0:	ldr	r2, [sp, #24]
   113b4:	ldr	r3, [sp, #20]
   113b8:	bl	11000 <getc@plt+0x488>
   113bc:	b	11384 <getc@plt+0x80c>
   113c0:	b	113c4 <getc@plt+0x84c>
   113c4:	ldr	r0, [fp, #-16]
   113c8:	cmp	r0, #0
   113cc:	ble	11488 <getc@plt+0x910>
   113d0:	ldr	r0, [fp, #-12]
   113d4:	bl	11544 <getc@plt+0x9cc>
   113d8:	and	r0, r0, #255	; 0xff
   113dc:	cmp	r0, #0
   113e0:	beq	11488 <getc@plt+0x910>
   113e4:	b	113e8 <getc@plt+0x870>
   113e8:	ldr	r0, [fp, #-12]
   113ec:	add	r1, sp, #24
   113f0:	add	r2, sp, #20
   113f4:	bl	116f8 <getc@plt+0xb80>
   113f8:	sxtb	r0, r0
   113fc:	cmp	r0, #0
   11400:	beq	11484 <getc@plt+0x90c>
   11404:	ldr	r0, [pc, #280]	; 11524 <getc@plt+0x9ac>
   11408:	add	r0, pc, r0
   1140c:	ldrb	r0, [r0, #31]
   11410:	cmp	r0, #125	; 0x7d
   11414:	bne	1142c <getc@plt+0x8b4>
   11418:	ldr	r0, [pc, #276]	; 11534 <getc@plt+0x9bc>
   1141c:	add	r0, pc, r0
   11420:	ldrb	r0, [r0, #30]
   11424:	str	r0, [sp, #16]
   11428:	b	1146c <getc@plt+0x8f4>
   1142c:	ldr	r0, [pc, #244]	; 11528 <getc@plt+0x9b0>
   11430:	add	r0, pc, r0
   11434:	ldrb	r0, [r0, #31]
   11438:	cmp	r0, #92	; 0x5c
   1143c:	bne	1144c <getc@plt+0x8d4>
   11440:	movw	r0, #10
   11444:	str	r0, [sp, #16]
   11448:	b	11468 <getc@plt+0x8f0>
   1144c:	ldr	r0, [pc, #216]	; 1152c <getc@plt+0x9b4>
   11450:	add	r0, pc, r0
   11454:	add	r0, r0, #31
   11458:	ldr	r1, [pc, #208]	; 11530 <getc@plt+0x9b8>
   1145c:	add	r1, pc, r1
   11460:	add	r2, sp, #16
   11464:	bl	10b24 <__isoc99_sscanf@plt>
   11468:	b	1146c <getc@plt+0x8f4>
   1146c:	ldr	r0, [fp, #-4]
   11470:	ldr	r1, [sp, #16]
   11474:	ldr	r2, [sp, #24]
   11478:	ldr	r3, [sp, #20]
   1147c:	bl	10f38 <getc@plt+0x3c0>
   11480:	b	113e8 <getc@plt+0x870>
   11484:	b	11488 <getc@plt+0x910>
   11488:	b	114dc <getc@plt+0x964>
   1148c:	ldr	r0, [fp, #-8]
   11490:	movw	r1, #0
   11494:	cmp	r0, r1
   11498:	beq	114a8 <getc@plt+0x930>
   1149c:	ldr	r0, [fp, #-8]
   114a0:	str	r0, [sp, #8]
   114a4:	b	114b8 <getc@plt+0x940>
   114a8:	ldr	r0, [pc, #96]	; 11510 <getc@plt+0x998>
   114ac:	add	r0, pc, r0
   114b0:	str	r0, [sp, #8]
   114b4:	b	114b8 <getc@plt+0x940>
   114b8:	ldr	r0, [sp, #8]
   114bc:	ldr	r1, [pc, #80]	; 11514 <getc@plt+0x99c>
   114c0:	add	r1, pc, r1
   114c4:	ldr	r2, [pc, #76]	; 11518 <getc@plt+0x9a0>
   114c8:	ldr	r2, [pc, r2]
   114cc:	str	r0, [sp, #4]
   114d0:	mov	r0, r1
   114d4:	ldr	r1, [sp, #4]
   114d8:	blx	r2
   114dc:	ldr	r0, [pc, #60]	; 11520 <getc@plt+0x9a8>
   114e0:	ldr	r0, [pc, r0]
   114e4:	ldr	r1, [fp, #-12]
   114e8:	str	r0, [sp]
   114ec:	mov	r0, r1
   114f0:	ldr	r1, [sp]
   114f4:	blx	r1
   114f8:	mov	sp, fp
   114fc:	pop	{fp, pc}
   11500:	muleq	r0, ip, r4
   11504:	andeq	r4, r1, r0, lsl #31
   11508:	andeq	r5, r1, r5, lsl r4
   1150c:	andeq	r3, r0, r1, asr #22
   11510:	andeq	r3, r0, sl, lsr #16
   11514:	andeq	r3, r0, r4, lsl #16
   11518:	andeq	r4, r1, r8, lsr ip
   1151c:	andeq	r5, r1, r9, lsr #4
   11520:	muleq	r1, ip, fp
   11524:	andeq	r5, r1, r9, asr r1
   11528:	andeq	r5, r1, r1, lsr r1
   1152c:	andeq	r5, r1, r1, lsl r1
   11530:	andeq	r3, r0, r4, ror #16
   11534:	andeq	r5, r1, r5, asr #2
   11538:			; <UNDEFINED> instruction: 0x000151bd
   1153c:	andeq	r5, r1, r1, ror #7
   11540:	andeq	r4, r0, r3, ror #7
   11544:	push	{fp, lr}
   11548:	mov	fp, sp
   1154c:	sub	sp, sp, #8
   11550:	ldr	r1, [pc, #60]	; 11594 <getc@plt+0xa1c>
   11554:	add	r1, pc, r1
   11558:	str	r0, [sp, #4]
   1155c:	ldr	r2, [sp, #4]
   11560:	mov	r0, r1
   11564:	movw	r1, #99	; 0x63
   11568:	bl	10a64 <fgets@plt>
   1156c:	movw	r1, #0
   11570:	cmp	r0, r1
   11574:	movw	r0, #0
   11578:	movne	r0, #1
   1157c:	tst	r0, #1
   11580:	movw	r0, #1
   11584:	moveq	r0, #0
   11588:	and	r0, r0, #255	; 0xff
   1158c:	mov	sp, fp
   11590:	pop	{fp, pc}
   11594:	andeq	r5, r1, sp
   11598:	push	{fp, lr}
   1159c:	mov	fp, sp
   115a0:	sub	sp, sp, #16
   115a4:	str	r0, [sp, #8]
   115a8:	str	r1, [sp, #4]
   115ac:	str	r2, [sp]
   115b0:	ldr	r0, [sp, #8]
   115b4:	bl	11544 <getc@plt+0x9cc>
   115b8:	and	r0, r0, #255	; 0xff
   115bc:	cmp	r0, #0
   115c0:	beq	11608 <getc@plt+0xa90>
   115c4:	ldr	r0, [pc, #80]	; 1161c <getc@plt+0xaa4>
   115c8:	add	r0, pc, r0
   115cc:	ldr	r1, [pc, #76]	; 11620 <getc@plt+0xaa8>
   115d0:	add	r1, pc, r1
   115d4:	ldr	r2, [sp, #4]
   115d8:	bl	10b24 <__isoc99_sscanf@plt>
   115dc:	cmp	r0, #1
   115e0:	bne	11608 <getc@plt+0xa90>
   115e4:	ldr	r0, [sp, #4]
   115e8:	ldr	r0, [r0]
   115ec:	ldr	r1, [sp]
   115f0:	ldr	r2, [r1]
   115f4:	add	r0, r2, r0
   115f8:	str	r0, [r1]
   115fc:	movw	r0, #1
   11600:	strb	r0, [fp, #-1]
   11604:	b	11610 <getc@plt+0xa98>
   11608:	movw	r0, #0
   1160c:	strb	r0, [fp, #-1]
   11610:	ldrb	r0, [fp, #-1]
   11614:	mov	sp, fp
   11618:	pop	{fp, pc}
   1161c:	muleq	r1, r9, pc	; <UNPREDICTABLE>
   11620:	andeq	r3, r0, r9, lsl r8
   11624:	push	{fp, lr}
   11628:	mov	fp, sp
   1162c:	sub	sp, sp, #40	; 0x28
   11630:	str	r0, [fp, #-8]
   11634:	str	r1, [fp, #-12]
   11638:	ldr	r0, [fp, #-8]
   1163c:	bl	11544 <getc@plt+0x9cc>
   11640:	and	r0, r0, #255	; 0xff
   11644:	cmp	r0, #0
   11648:	beq	116dc <getc@plt+0xb64>
   1164c:	ldr	r0, [pc, #156]	; 116f0 <getc@plt+0xb78>
   11650:	add	r0, pc, r0
   11654:	ldr	r1, [pc, #152]	; 116f4 <getc@plt+0xb7c>
   11658:	add	r1, pc, r1
   1165c:	add	r2, sp, #12
   11660:	add	r3, r2, #4
   11664:	add	ip, r2, #8
   11668:	add	lr, r2, #12
   1166c:	str	ip, [sp]
   11670:	str	lr, [sp, #4]
   11674:	bl	10b24 <__isoc99_sscanf@plt>
   11678:	cmp	r0, #4
   1167c:	bne	116dc <getc@plt+0xb64>
   11680:	ldr	r0, [sp, #12]
   11684:	ldr	r1, [fp, #-12]
   11688:	ldr	r2, [r1]
   1168c:	add	r0, r2, r0
   11690:	str	r0, [r1]
   11694:	ldr	r0, [sp, #16]
   11698:	ldr	r1, [fp, #-12]
   1169c:	ldr	r2, [r1, #4]
   116a0:	add	r0, r2, r0
   116a4:	str	r0, [r1, #4]
   116a8:	ldr	r0, [sp, #20]
   116ac:	ldr	r1, [fp, #-12]
   116b0:	ldr	r2, [r1, #8]
   116b4:	add	r0, r2, r0
   116b8:	str	r0, [r1, #8]
   116bc:	ldr	r0, [sp, #24]
   116c0:	ldr	r1, [fp, #-12]
   116c4:	ldr	r2, [r1, #12]
   116c8:	add	r0, r2, r0
   116cc:	str	r0, [r1, #12]
   116d0:	movw	r0, #1
   116d4:	strb	r0, [fp, #-1]
   116d8:	b	116e4 <getc@plt+0xb6c>
   116dc:	movw	r0, #0
   116e0:	strb	r0, [fp, #-1]
   116e4:	ldrb	r0, [fp, #-1]
   116e8:	mov	sp, fp
   116ec:	pop	{fp, pc}
   116f0:	andeq	r4, r1, r1, lsl pc
   116f4:	andeq	r3, r0, r5, lsl #15
   116f8:	push	{fp, lr}
   116fc:	mov	fp, sp
   11700:	sub	sp, sp, #16
   11704:	str	r0, [fp, #-4]
   11708:	str	r1, [sp, #8]
   1170c:	str	r2, [sp, #4]
   11710:	ldr	r0, [fp, #-4]
   11714:	bl	11544 <getc@plt+0x9cc>
   11718:	and	r0, r0, #255	; 0xff
   1171c:	cmp	r0, #0
   11720:	movw	r0, #0
   11724:	str	r0, [sp]
   11728:	beq	11758 <getc@plt+0xbe0>
   1172c:	ldr	r0, [pc, #64]	; 11774 <getc@plt+0xbfc>
   11730:	add	r0, pc, r0
   11734:	ldr	r1, [pc, #60]	; 11778 <getc@plt+0xc00>
   11738:	add	r1, pc, r1
   1173c:	ldr	r2, [sp, #8]
   11740:	ldr	r3, [sp, #4]
   11744:	bl	10b24 <__isoc99_sscanf@plt>
   11748:	cmp	r0, #2
   1174c:	movw	r0, #0
   11750:	moveq	r0, #1
   11754:	str	r0, [sp]
   11758:	ldr	r0, [sp]
   1175c:	tst	r0, #1
   11760:	movw	r0, #1
   11764:	moveq	r0, #0
   11768:	and	r0, r0, #255	; 0xff
   1176c:	mov	sp, fp
   11770:	pop	{fp, pc}
   11774:	andeq	r4, r1, r1, lsr lr
   11778:	andeq	r3, r0, sp, lsr #13
   1177c:	push	{fp, lr}
   11780:	mov	fp, sp
   11784:	sub	sp, sp, #72	; 0x48
   11788:	ldr	r2, [pc, #1160]	; 11c18 <getc@plt+0x10a0>
   1178c:	add	r2, pc, r2
   11790:	ldr	r3, [pc, #1156]	; 11c1c <getc@plt+0x10a4>
   11794:	ldr	r3, [pc, r3]
   11798:	str	r0, [fp, #-4]
   1179c:	str	r1, [fp, #-8]
   117a0:	ldr	r0, [fp, #-8]
   117a4:	mov	r1, r2
   117a8:	blx	r3
   117ac:	ldr	r1, [pc, #1112]	; 11c0c <getc@plt+0x1094>
   117b0:	add	r1, pc, r1
   117b4:	ldr	r2, [pc, #1108]	; 11c10 <getc@plt+0x1098>
   117b8:	add	r2, pc, r2
   117bc:	ldr	r3, [pc, #1104]	; 11c14 <getc@plt+0x109c>
   117c0:	add	r3, pc, r3
   117c4:	str	r0, [fp, #-12]
   117c8:	ldr	r0, [fp, #-12]
   117cc:	bl	10b0c <fprintf@plt>
   117d0:	ldr	r1, [pc, #1072]	; 11c08 <getc@plt+0x1090>
   117d4:	add	r2, pc, r1
   117d8:	ldr	r1, [fp, #-12]
   117dc:	ldr	r3, [fp, #-4]
   117e0:	ldr	r3, [r3]
   117e4:	str	r0, [fp, #-20]	; 0xffffffec
   117e8:	mov	r0, r1
   117ec:	mov	r1, r3
   117f0:	bl	11c44 <getc@plt+0x10cc>
   117f4:	ldr	r0, [pc, #1032]	; 11c04 <getc@plt+0x108c>
   117f8:	add	r2, pc, r0
   117fc:	ldr	r0, [fp, #-12]
   11800:	ldr	r1, [fp, #-4]
   11804:	ldr	r1, [r1, #4]
   11808:	bl	11c44 <getc@plt+0x10cc>
   1180c:	ldr	r0, [fp, #-12]
   11810:	ldr	r1, [fp, #-4]
   11814:	ldr	r1, [r1]
   11818:	ldr	r2, [fp, #-4]
   1181c:	ldr	r2, [r2, #4]
   11820:	sub	r1, r1, r2
   11824:	ldr	r2, [fp, #-4]
   11828:	ldr	r2, [r2]
   1182c:	bl	11c90 <getc@plt+0x1118>
   11830:	ldr	r0, [pc, #968]	; 11c00 <getc@plt+0x1088>
   11834:	add	r1, pc, r0
   11838:	ldr	r0, [fp, #-12]
   1183c:	bl	10b0c <fprintf@plt>
   11840:	ldr	r1, [pc, #948]	; 11bfc <getc@plt+0x1084>
   11844:	add	r2, pc, r1
   11848:	ldr	r1, [fp, #-12]
   1184c:	ldr	r3, [fp, #-4]
   11850:	ldr	r3, [r3, #8]
   11854:	str	r0, [fp, #-24]	; 0xffffffe8
   11858:	mov	r0, r1
   1185c:	mov	r1, r3
   11860:	bl	11c44 <getc@plt+0x10cc>
   11864:	ldr	r0, [pc, #908]	; 11bf8 <getc@plt+0x1080>
   11868:	add	r2, pc, r0
   1186c:	ldr	r0, [fp, #-12]
   11870:	ldr	r1, [fp, #-4]
   11874:	ldr	r1, [r1, #12]
   11878:	bl	11c44 <getc@plt+0x10cc>
   1187c:	ldr	r0, [pc, #880]	; 11bf4 <getc@plt+0x107c>
   11880:	add	r2, pc, r0
   11884:	ldr	r0, [fp, #-12]
   11888:	ldr	r1, [fp, #-4]
   1188c:	ldr	r1, [r1, #16]
   11890:	bl	11c44 <getc@plt+0x10cc>
   11894:	ldr	r0, [fp, #-12]
   11898:	ldr	r1, [fp, #-4]
   1189c:	ldr	r1, [r1, #8]
   118a0:	ldr	r2, [fp, #-4]
   118a4:	ldr	r2, [r2, #12]
   118a8:	add	r1, r1, r2
   118ac:	ldr	r2, [fp, #-4]
   118b0:	ldr	r2, [r2]
   118b4:	bl	11c90 <getc@plt+0x1118>
   118b8:	ldr	r0, [pc, #816]	; 11bf0 <getc@plt+0x1078>
   118bc:	add	r1, pc, r0
   118c0:	ldr	r0, [fp, #-12]
   118c4:	bl	10b0c <fprintf@plt>
   118c8:	ldr	r1, [fp, #-12]
   118cc:	ldr	r2, [fp, #-4]
   118d0:	ldr	r2, [r2]
   118d4:	ldr	r3, [fp, #-4]
   118d8:	ldr	r3, [r3, #48]	; 0x30
   118dc:	sub	r2, r2, r3
   118e0:	ldr	r3, [fp, #-4]
   118e4:	ldr	r3, [r3]
   118e8:	str	r0, [fp, #-28]	; 0xffffffe4
   118ec:	mov	r0, r1
   118f0:	mov	r1, r2
   118f4:	mov	r2, r3
   118f8:	bl	11c90 <getc@plt+0x1118>
   118fc:	ldr	r0, [pc, #744]	; 11bec <getc@plt+0x1074>
   11900:	add	r1, pc, r0
   11904:	ldr	r0, [fp, #-12]
   11908:	bl	10b0c <fprintf@plt>
   1190c:	ldr	r1, [pc, #724]	; 11be8 <getc@plt+0x1070>
   11910:	add	r1, pc, r1
   11914:	ldr	r2, [fp, #-12]
   11918:	str	r0, [fp, #-32]	; 0xffffffe0
   1191c:	mov	r0, r2
   11920:	bl	10b0c <fprintf@plt>
   11924:	ldr	r1, [pc, #696]	; 11be4 <getc@plt+0x106c>
   11928:	add	r2, pc, r1
   1192c:	ldr	r1, [fp, #-12]
   11930:	ldr	r3, [fp, #-4]
   11934:	add	r3, r3, #20
   11938:	str	r0, [sp, #36]	; 0x24
   1193c:	mov	r0, r1
   11940:	mov	r1, r3
   11944:	bl	11d18 <getc@plt+0x11a0>
   11948:	ldr	r0, [pc, #656]	; 11be0 <getc@plt+0x1068>
   1194c:	add	r2, pc, r0
   11950:	ldr	r0, [fp, #-12]
   11954:	ldr	r1, [fp, #-4]
   11958:	add	r1, r1, #36	; 0x24
   1195c:	bl	11d18 <getc@plt+0x11a0>
   11960:	ldr	r0, [pc, #628]	; 11bdc <getc@plt+0x1064>
   11964:	add	r2, pc, r0
   11968:	ldr	r0, [fp, #-12]
   1196c:	ldr	r1, [fp, #-4]
   11970:	add	r1, r1, #52	; 0x34
   11974:	bl	11d18 <getc@plt+0x11a0>
   11978:	ldr	r0, [pc, #600]	; 11bd8 <getc@plt+0x1060>
   1197c:	add	r1, pc, r0
   11980:	ldr	r0, [fp, #-12]
   11984:	bl	10b0c <fprintf@plt>
   11988:	movw	r1, #0
   1198c:	str	r1, [fp, #-16]
   11990:	ldr	r0, [fp, #-16]
   11994:	cmp	r0, #256	; 0x100
   11998:	bge	11a20 <getc@plt+0xea8>
   1199c:	ldr	r0, [fp, #-4]
   119a0:	add	r0, r0, #68	; 0x44
   119a4:	ldr	r1, [fp, #-16]
   119a8:	add	r0, r0, r1, lsl #3
   119ac:	ldr	r0, [r0]
   119b0:	cmp	r0, #0
   119b4:	ble	11a0c <getc@plt+0xe94>
   119b8:	ldr	r0, [pc, #640]	; 11c40 <getc@plt+0x10c8>
   119bc:	ldr	r0, [pc, r0]
   119c0:	ldr	r1, [fp, #-12]
   119c4:	ldr	r2, [fp, #-4]
   119c8:	add	r2, r2, #68	; 0x44
   119cc:	ldr	r3, [fp, #-16]
   119d0:	add	r2, r2, r3, lsl #3
   119d4:	ldr	r3, [fp, #-16]
   119d8:	str	r0, [sp, #32]
   119dc:	mov	r0, r3
   119e0:	ldr	r3, [sp, #32]
   119e4:	str	r1, [sp, #28]
   119e8:	str	r2, [sp, #24]
   119ec:	blx	r3
   119f0:	ldr	r1, [sp, #28]
   119f4:	str	r0, [sp, #20]
   119f8:	mov	r0, r1
   119fc:	ldr	r1, [sp, #24]
   11a00:	ldr	r2, [sp, #20]
   11a04:	movw	r3, #0
   11a08:	bl	11d88 <getc@plt+0x1210>
   11a0c:	b	11a10 <getc@plt+0xe98>
   11a10:	ldr	r0, [fp, #-16]
   11a14:	add	r0, r0, #1
   11a18:	str	r0, [fp, #-16]
   11a1c:	b	11990 <getc@plt+0xe18>
   11a20:	ldr	r0, [pc, #504]	; 11c20 <getc@plt+0x10a8>
   11a24:	add	r2, pc, r0
   11a28:	ldr	r0, [fp, #-12]
   11a2c:	ldr	r1, [fp, #-4]
   11a30:	movw	r3, #2116	; 0x844
   11a34:	add	r1, r1, r3
   11a38:	movw	r3, #0
   11a3c:	bl	11d88 <getc@plt+0x1210>
   11a40:	ldr	r0, [fp, #-4]
   11a44:	ldr	r0, [r0, #4]
   11a48:	cmp	r0, #0
   11a4c:	ble	11b20 <getc@plt+0xfa8>
   11a50:	ldr	r0, [pc, #472]	; 11c30 <getc@plt+0x10b8>
   11a54:	ldr	r0, [pc, r0]
   11a58:	ldr	r1, [fp, #-4]
   11a5c:	movw	r2, #2124	; 0x84c
   11a60:	add	r1, r1, r2
   11a64:	str	r0, [sp, #16]
   11a68:	mov	r0, r1
   11a6c:	ldr	r1, [sp, #16]
   11a70:	blx	r1
   11a74:	ldr	r0, [pc, #428]	; 11c28 <getc@plt+0x10b0>
   11a78:	add	r0, pc, r0
   11a7c:	ldr	r1, [pc, #424]	; 11c2c <getc@plt+0x10b4>
   11a80:	ldr	r1, [pc, r1]
   11a84:	ldr	r2, [fp, #-4]
   11a88:	add	r2, r2, #10176	; 0x27c0
   11a8c:	ldr	r2, [r2]
   11a90:	ldr	r3, [fp, #-4]
   11a94:	movw	ip, #10172	; 0x27bc
   11a98:	add	r3, r3, ip
   11a9c:	ldr	r3, [r3]
   11aa0:	str	r0, [sp, #12]
   11aa4:	mov	r0, r2
   11aa8:	str	r1, [sp, #8]
   11aac:	mov	r1, r3
   11ab0:	ldr	r2, [sp, #12]
   11ab4:	ldr	r3, [sp, #8]
   11ab8:	blx	r3
   11abc:	ldr	r0, [pc, #352]	; 11c24 <getc@plt+0x10ac>
   11ac0:	add	r1, pc, r0
   11ac4:	ldr	r0, [fp, #-12]
   11ac8:	bl	10b0c <fprintf@plt>
   11acc:	movw	r1, #0
   11ad0:	str	r1, [fp, #-16]
   11ad4:	ldr	r0, [fp, #-16]
   11ad8:	ldr	r1, [fp, #-4]
   11adc:	add	r1, r1, #10176	; 0x27c0
   11ae0:	ldr	r1, [r1]
   11ae4:	cmp	r0, r1
   11ae8:	bge	11b1c <getc@plt+0xfa4>
   11aec:	ldr	r0, [fp, #-12]
   11af0:	ldr	r1, [fp, #-4]
   11af4:	movw	r2, #10172	; 0x27bc
   11af8:	ldr	r1, [r1, r2]
   11afc:	ldr	r2, [fp, #-16]
   11b00:	add	r1, r1, r2, lsl #2
   11b04:	ldr	r1, [r1]
   11b08:	bl	11f34 <getc@plt+0x13bc>
   11b0c:	ldr	r0, [fp, #-16]
   11b10:	add	r0, r0, #1
   11b14:	str	r0, [fp, #-16]
   11b18:	b	11ad4 <getc@plt+0xf5c>
   11b1c:	b	11b20 <getc@plt+0xfa8>
   11b20:	ldr	r0, [fp, #-4]
   11b24:	ldr	r0, [r0]
   11b28:	cmp	r0, #0
   11b2c:	ble	11bb4 <getc@plt+0x103c>
   11b30:	ldr	r0, [pc, #252]	; 11c34 <getc@plt+0x10bc>
   11b34:	add	r1, pc, r0
   11b38:	ldr	r0, [fp, #-12]
   11b3c:	bl	10b0c <fprintf@plt>
   11b40:	movw	r1, #0
   11b44:	str	r1, [fp, #-16]
   11b48:	ldr	r0, [pc, #232]	; 11c38 <getc@plt+0x10c0>
   11b4c:	ldr	r1, [fp, #-16]
   11b50:	cmp	r1, r0
   11b54:	bge	11bb0 <getc@plt+0x1038>
   11b58:	ldr	r0, [fp, #-4]
   11b5c:	movw	r1, #10180	; 0x27c4
   11b60:	add	r0, r0, r1
   11b64:	ldr	r1, [fp, #-16]
   11b68:	add	r0, r0, r1, lsl #3
   11b6c:	ldr	r0, [r0]
   11b70:	cmp	r0, #0
   11b74:	ble	11b9c <getc@plt+0x1024>
   11b78:	ldr	r0, [fp, #-12]
   11b7c:	ldr	r1, [fp, #-4]
   11b80:	movw	r2, #10180	; 0x27c4
   11b84:	add	r1, r1, r2
   11b88:	ldr	r2, [fp, #-16]
   11b8c:	add	r1, r1, r2, lsl #3
   11b90:	ldr	r3, [fp, #-16]
   11b94:	movw	r2, #0
   11b98:	bl	11d88 <getc@plt+0x1210>
   11b9c:	b	11ba0 <getc@plt+0x1028>
   11ba0:	ldr	r0, [fp, #-16]
   11ba4:	add	r0, r0, #1
   11ba8:	str	r0, [fp, #-16]
   11bac:	b	11b48 <getc@plt+0xfd0>
   11bb0:	b	11bb4 <getc@plt+0x103c>
   11bb4:	ldr	r0, [pc, #128]	; 11c3c <getc@plt+0x10c4>
   11bb8:	ldr	r0, [pc, r0]
   11bbc:	ldr	r1, [fp, #-12]
   11bc0:	str	r0, [sp, #4]
   11bc4:	mov	r0, r1
   11bc8:	ldr	r1, [sp, #4]
   11bcc:	blx	r1
   11bd0:	mov	sp, fp
   11bd4:	pop	{fp, pc}
   11bd8:	andeq	r3, r0, fp, lsl r4
   11bdc:	andeq	r3, r0, sp, lsr #8
   11be0:	andeq	r3, r0, ip, lsr r4
   11be4:	andeq	r3, r0, r9, asr r4
   11be8:	andeq	r3, r0, fp, asr #8
   11bec:	andeq	r3, r0, ip, lsr r4
   11bf0:	andeq	r3, r0, r9, ror #8
   11bf4:	muleq	r0, r9, r4
   11bf8:	andeq	r3, r0, r1, lsr #9
   11bfc:			; <UNDEFINED> instruction: 0x000034b3
   11c00:			; <UNDEFINED> instruction: 0x000034b4
   11c04:	andeq	r3, r0, r9, ror #9
   11c08:	andeq	r3, r0, pc, asr r7
   11c0c:	andeq	r3, r0, ip, lsr #10
   11c10:	ldrdeq	r3, [r0], -sp
   11c14:	andeq	r3, r0, fp, lsr #27
   11c18:			; <UNDEFINED> instruction: 0x000038b5
   11c1c:	andeq	r4, r1, r4, lsl #18
   11c20:	andeq	r3, r0, sp, ror #6
   11c24:	strdeq	r3, [r0], -r5
   11c28:	strdeq	r0, [r0], -r8
   11c2c:	andeq	r4, r1, r0, lsr #12
   11c30:	andeq	r4, r1, r8, asr r6
   11c34:	andeq	r3, r0, r3, ror #4
   11c38:			; <UNDEFINED> instruction: 0x0010ffff
   11c3c:	andeq	r4, r1, r4, asr #9
   11c40:	strdeq	r4, [r1], -ip
   11c44:	push	{fp, lr}
   11c48:	mov	fp, sp
   11c4c:	sub	sp, sp, #16
   11c50:	ldr	r3, [pc, #48]	; 11c88 <getc@plt+0x1110>
   11c54:	add	r3, pc, r3
   11c58:	str	r0, [fp, #-4]
   11c5c:	str	r1, [sp, #8]
   11c60:	str	r2, [sp, #4]
   11c64:	ldr	r0, [fp, #-4]
   11c68:	ldr	r2, [sp, #8]
   11c6c:	ldr	r1, [sp, #4]
   11c70:	str	r1, [sp]
   11c74:	mov	r1, r3
   11c78:	ldr	r3, [sp]
   11c7c:	bl	10b0c <fprintf@plt>
   11c80:	mov	sp, fp
   11c84:	pop	{fp, pc}
   11c88:			; <UNDEFINED> instruction: 0x000031b7
   11c8c:	nop	{0}
   11c90:	push	{fp, lr}
   11c94:	mov	fp, sp
   11c98:	sub	sp, sp, #16
   11c9c:	str	r0, [fp, #-4]
   11ca0:	str	r1, [sp, #8]
   11ca4:	str	r2, [sp, #4]
   11ca8:	ldr	r0, [sp, #4]
   11cac:	cmp	r0, #0
   11cb0:	bne	11cc8 <getc@plt+0x1150>
   11cb4:	ldr	r0, [pc, #88]	; 11d14 <getc@plt+0x119c>
   11cb8:	add	r1, pc, r0
   11cbc:	ldr	r0, [fp, #-4]
   11cc0:	bl	10b0c <fprintf@plt>
   11cc4:	b	11d00 <getc@plt+0x1188>
   11cc8:	ldr	r0, [pc, #64]	; 11d10 <getc@plt+0x1198>
   11ccc:	add	r1, pc, r0
   11cd0:	vldr	d16, [pc, #48]	; 11d08 <getc@plt+0x1190>
   11cd4:	ldr	r0, [fp, #-4]
   11cd8:	ldr	r2, [sp, #8]
   11cdc:	vmov	s0, r2
   11ce0:	vcvt.f64.s32	d17, s0
   11ce4:	vmul.f64	d16, d16, d17
   11ce8:	ldr	r2, [sp, #4]
   11cec:	vmov	s0, r2
   11cf0:	vcvt.f64.s32	d17, s0
   11cf4:	vdiv.f64	d16, d16, d17
   11cf8:	vmov	r2, r3, d16
   11cfc:	bl	10b0c <fprintf@plt>
   11d00:	mov	sp, fp
   11d04:	pop	{fp, pc}
   11d08:	andeq	r0, r0, r0
   11d0c:	subsmi	r0, r9, r0
   11d10:	andeq	r3, r0, sl, lsr #2
   11d14:	andeq	r3, r0, r5, lsr r1
   11d18:	push	{r4, sl, fp, lr}
   11d1c:	add	fp, sp, #8
   11d20:	sub	sp, sp, #32
   11d24:	ldr	r3, [pc, #88]	; 11d84 <getc@plt+0x120c>
   11d28:	add	r3, pc, r3
   11d2c:	str	r0, [fp, #-12]
   11d30:	str	r1, [fp, #-16]
   11d34:	str	r2, [sp, #20]
   11d38:	ldr	r0, [fp, #-12]
   11d3c:	ldr	r1, [fp, #-16]
   11d40:	ldr	r2, [r1]
   11d44:	ldr	r1, [fp, #-16]
   11d48:	ldr	r1, [r1, #4]
   11d4c:	ldr	ip, [fp, #-16]
   11d50:	ldr	ip, [ip, #8]
   11d54:	ldr	lr, [fp, #-16]
   11d58:	ldr	lr, [lr, #12]
   11d5c:	ldr	r4, [sp, #20]
   11d60:	str	r1, [sp, #16]
   11d64:	mov	r1, r3
   11d68:	ldr	r3, [sp, #16]
   11d6c:	str	ip, [sp]
   11d70:	str	lr, [sp, #4]
   11d74:	str	r4, [sp, #8]
   11d78:	bl	10b0c <fprintf@plt>
   11d7c:	sub	sp, fp, #8
   11d80:	pop	{r4, sl, fp, pc}
   11d84:	ldrdeq	r3, [r0], -r4
   11d88:	push	{fp, lr}
   11d8c:	mov	fp, sp
   11d90:	sub	sp, sp, #40	; 0x28
   11d94:	ldr	ip, [pc, #204]	; 11e68 <getc@plt+0x12f0>
   11d98:	add	ip, pc, ip
   11d9c:	str	r0, [fp, #-4]
   11da0:	str	r1, [fp, #-8]
   11da4:	str	r2, [fp, #-12]
   11da8:	str	r3, [fp, #-16]
   11dac:	ldr	r0, [fp, #-4]
   11db0:	ldr	r1, [fp, #-8]
   11db4:	ldr	r2, [r1]
   11db8:	ldr	r1, [fp, #-8]
   11dbc:	ldr	r3, [r1, #4]
   11dc0:	mov	r1, ip
   11dc4:	bl	10b0c <fprintf@plt>
   11dc8:	ldr	r1, [fp, #-4]
   11dcc:	ldr	r2, [fp, #-8]
   11dd0:	ldr	r2, [r2]
   11dd4:	ldr	r3, [fp, #-8]
   11dd8:	ldr	r3, [r3, #4]
   11ddc:	sub	r2, r2, r3
   11de0:	ldr	r3, [fp, #-8]
   11de4:	ldr	r3, [r3]
   11de8:	str	r0, [sp, #8]
   11dec:	mov	r0, r1
   11df0:	mov	r1, r2
   11df4:	mov	r2, r3
   11df8:	bl	11c90 <getc@plt+0x1118>
   11dfc:	ldr	r0, [fp, #-12]
   11e00:	movw	r1, #0
   11e04:	cmp	r0, r1
   11e08:	beq	11e24 <getc@plt+0x12ac>
   11e0c:	ldr	r0, [pc, #96]	; 11e74 <getc@plt+0x12fc>
   11e10:	add	r1, pc, r0
   11e14:	ldr	r0, [fp, #-4]
   11e18:	ldr	r2, [fp, #-12]
   11e1c:	bl	10b0c <fprintf@plt>
   11e20:	b	11e60 <getc@plt+0x12e8>
   11e24:	ldr	r0, [pc, #68]	; 11e70 <getc@plt+0x12f8>
   11e28:	ldr	r0, [pc, r0]
   11e2c:	add	r2, sp, #15
   11e30:	ldr	r1, [fp, #-16]
   11e34:	movw	r3, #0
   11e38:	str	r0, [sp, #4]
   11e3c:	mov	r0, r3
   11e40:	movw	r3, #1
   11e44:	ldr	ip, [sp, #4]
   11e48:	blx	ip
   11e4c:	ldr	r0, [pc, #24]	; 11e6c <getc@plt+0x12f4>
   11e50:	add	r1, pc, r0
   11e54:	add	r2, sp, #15
   11e58:	ldr	r0, [fp, #-4]
   11e5c:	bl	10b0c <fprintf@plt>
   11e60:	mov	sp, fp
   11e64:	pop	{fp, pc}
   11e68:	andeq	r3, r0, lr, ror r0
   11e6c:	ldrdeq	r2, [r0], -r1
   11e70:	andeq	r4, r1, r4, asr #5
   11e74:	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
   11e78:	push	{fp, lr}
   11e7c:	mov	fp, sp
   11e80:	sub	sp, sp, #16
   11e84:	str	r0, [sp, #8]
   11e88:	str	r1, [sp, #4]
   11e8c:	ldr	r0, [sp, #8]
   11e90:	ldr	r0, [r0, #12]
   11e94:	ldr	r1, [sp, #4]
   11e98:	ldr	r1, [r1, #12]
   11e9c:	cmp	r0, r1
   11ea0:	beq	11ec0 <getc@plt+0x1348>
   11ea4:	ldr	r0, [sp, #4]
   11ea8:	ldr	r0, [r0, #12]
   11eac:	ldr	r1, [sp, #8]
   11eb0:	ldr	r1, [r1, #12]
   11eb4:	sub	r0, r0, r1
   11eb8:	str	r0, [fp, #-4]
   11ebc:	b	11f24 <getc@plt+0x13ac>
   11ec0:	ldr	r0, [sp, #8]
   11ec4:	ldr	r0, [r0, #16]
   11ec8:	ldr	r1, [sp, #4]
   11ecc:	ldr	r1, [r1, #16]
   11ed0:	cmp	r0, r1
   11ed4:	beq	11ef4 <getc@plt+0x137c>
   11ed8:	ldr	r0, [sp, #4]
   11edc:	ldr	r0, [r0, #16]
   11ee0:	ldr	r1, [sp, #8]
   11ee4:	ldr	r1, [r1, #16]
   11ee8:	sub	r0, r0, r1
   11eec:	str	r0, [fp, #-4]
   11ef0:	b	11f24 <getc@plt+0x13ac>
   11ef4:	ldr	r0, [pc, #52]	; 11f30 <getc@plt+0x13b8>
   11ef8:	ldr	r0, [pc, r0]
   11efc:	ldr	r1, [sp, #8]
   11f00:	ldr	r1, [r1, #8]
   11f04:	ldr	r2, [sp, #4]
   11f08:	ldr	r2, [r2, #8]
   11f0c:	str	r0, [sp]
   11f10:	mov	r0, r1
   11f14:	mov	r1, r2
   11f18:	ldr	r2, [sp]
   11f1c:	blx	r2
   11f20:	str	r0, [fp, #-4]
   11f24:	ldr	r0, [fp, #-4]
   11f28:	mov	sp, fp
   11f2c:	pop	{fp, pc}
   11f30:	strdeq	r4, [r1], -r8
   11f34:	push	{fp, lr}
   11f38:	mov	fp, sp
   11f3c:	sub	sp, sp, #16
   11f40:	ldr	r2, [pc, #64]	; 11f88 <getc@plt+0x1410>
   11f44:	add	r2, pc, r2
   11f48:	str	r0, [fp, #-4]
   11f4c:	str	r1, [sp, #8]
   11f50:	ldr	r0, [fp, #-4]
   11f54:	ldr	r1, [sp, #8]
   11f58:	ldr	r1, [r1, #12]
   11f5c:	ldr	r3, [sp, #8]
   11f60:	ldr	r3, [r3, #16]
   11f64:	ldr	ip, [sp, #8]
   11f68:	ldr	ip, [ip, #8]
   11f6c:	str	r1, [sp, #4]
   11f70:	mov	r1, r2
   11f74:	ldr	r2, [sp, #4]
   11f78:	str	ip, [sp]
   11f7c:	bl	10b0c <fprintf@plt>
   11f80:	mov	sp, fp
   11f84:	pop	{fp, pc}
   11f88:	andeq	r2, r0, r6, ror #29
   11f8c:	push	{fp, lr}
   11f90:	mov	fp, sp
   11f94:	sub	sp, sp, #16
   11f98:	str	r0, [fp, #-4]
   11f9c:	str	r1, [sp, #8]
   11fa0:	str	r2, [sp, #4]
   11fa4:	ldr	r0, [fp, #-4]
   11fa8:	cmp	r0, #2
   11fac:	bge	11fb4 <getc@plt+0x143c>
   11fb0:	b	11fe4 <getc@plt+0x146c>
   11fb4:	ldr	r0, [pc, #48]	; 11fec <getc@plt+0x1474>
   11fb8:	add	r0, pc, r0
   11fbc:	ldr	r1, [pc, #44]	; 11ff0 <getc@plt+0x1478>
   11fc0:	add	r1, pc, r1
   11fc4:	ldr	r2, [sp, #8]
   11fc8:	str	r2, [r1]
   11fcc:	ldr	r1, [sp, #4]
   11fd0:	str	r1, [r0]
   11fd4:	ldr	r0, [fp, #-4]
   11fd8:	sub	r1, r0, #1
   11fdc:	movw	r0, #0
   11fe0:	bl	11ff4 <getc@plt+0x147c>
   11fe4:	mov	sp, fp
   11fe8:	pop	{fp, pc}
   11fec:	andeq	r4, r1, r4, lsl r6
   11ff0:	andeq	r4, r1, r8, lsl #12
   11ff4:	push	{fp, lr}
   11ff8:	mov	fp, sp
   11ffc:	sub	sp, sp, #40	; 0x28
   12000:	str	r0, [fp, #-4]
   12004:	str	r1, [fp, #-8]
   12008:	ldr	r0, [fp, #-4]
   1200c:	str	r0, [fp, #-12]
   12010:	ldr	r0, [fp, #-8]
   12014:	str	r0, [fp, #-16]
   12018:	ldr	r0, [pc, #500]	; 12214 <getc@plt+0x169c>
   1201c:	ldr	r0, [pc, r0]
   12020:	ldr	r1, [fp, #-12]
   12024:	add	r0, r0, r1, lsl #2
   12028:	ldr	r0, [r0]
   1202c:	str	r0, [sp, #20]
   12030:	ldr	r0, [fp, #-12]
   12034:	ldr	r1, [fp, #-16]
   12038:	cmp	r0, r1
   1203c:	bge	121a8 <getc@plt+0x1630>
   12040:	b	12044 <getc@plt+0x14cc>
   12044:	ldr	r0, [fp, #-12]
   12048:	ldr	r1, [fp, #-16]
   1204c:	cmp	r0, r1
   12050:	movw	r0, #0
   12054:	str	r0, [sp, #16]
   12058:	bge	120a0 <getc@plt+0x1528>
   1205c:	ldr	r0, [pc, #436]	; 12218 <getc@plt+0x16a0>
   12060:	ldr	r0, [pc, r0]
   12064:	ldr	r1, [sp, #20]
   12068:	ldr	r2, [pc, #428]	; 1221c <getc@plt+0x16a4>
   1206c:	ldr	r2, [pc, r2]
   12070:	ldr	r3, [fp, #-16]
   12074:	add	r2, r2, r3, lsl #2
   12078:	ldr	r2, [r2]
   1207c:	str	r0, [sp, #12]
   12080:	mov	r0, r1
   12084:	mov	r1, r2
   12088:	ldr	r2, [sp, #12]
   1208c:	blx	r2
   12090:	cmp	r0, #0
   12094:	movw	r0, #0
   12098:	movlt	r0, #1
   1209c:	str	r0, [sp, #16]
   120a0:	ldr	r0, [sp, #16]
   120a4:	tst	r0, #1
   120a8:	beq	120c0 <getc@plt+0x1548>
   120ac:	ldr	r0, [fp, #-16]
   120b0:	mvn	r1, #0
   120b4:	add	r0, r0, r1
   120b8:	str	r0, [fp, #-16]
   120bc:	b	12044 <getc@plt+0x14cc>
   120c0:	ldr	r0, [fp, #-12]
   120c4:	ldr	r1, [fp, #-16]
   120c8:	cmp	r0, r1
   120cc:	beq	120f4 <getc@plt+0x157c>
   120d0:	ldr	r0, [pc, #328]	; 12220 <getc@plt+0x16a8>
   120d4:	ldr	r0, [pc, r0]
   120d8:	ldr	r1, [fp, #-16]
   120dc:	ldr	r1, [r0, r1, lsl #2]
   120e0:	ldr	r2, [fp, #-12]
   120e4:	add	r3, r2, #1
   120e8:	str	r3, [fp, #-12]
   120ec:	add	r0, r0, r2, lsl #2
   120f0:	str	r1, [r0]
   120f4:	b	120f8 <getc@plt+0x1580>
   120f8:	ldr	r0, [fp, #-12]
   120fc:	ldr	r1, [fp, #-16]
   12100:	cmp	r0, r1
   12104:	movw	r0, #0
   12108:	str	r0, [sp, #8]
   1210c:	bge	12154 <getc@plt+0x15dc>
   12110:	ldr	r0, [pc, #268]	; 12224 <getc@plt+0x16ac>
   12114:	ldr	r0, [pc, r0]
   12118:	ldr	r1, [sp, #20]
   1211c:	ldr	r2, [pc, #260]	; 12228 <getc@plt+0x16b0>
   12120:	ldr	r2, [pc, r2]
   12124:	ldr	r3, [fp, #-12]
   12128:	add	r2, r2, r3, lsl #2
   1212c:	ldr	r2, [r2]
   12130:	str	r0, [sp, #4]
   12134:	mov	r0, r1
   12138:	mov	r1, r2
   1213c:	ldr	r2, [sp, #4]
   12140:	blx	r2
   12144:	cmp	r0, #0
   12148:	movw	r0, #0
   1214c:	movgt	r0, #1
   12150:	str	r0, [sp, #8]
   12154:	ldr	r0, [sp, #8]
   12158:	tst	r0, #1
   1215c:	beq	12170 <getc@plt+0x15f8>
   12160:	ldr	r0, [fp, #-12]
   12164:	add	r0, r0, #1
   12168:	str	r0, [fp, #-12]
   1216c:	b	120f8 <getc@plt+0x1580>
   12170:	ldr	r0, [fp, #-12]
   12174:	ldr	r1, [fp, #-16]
   12178:	cmp	r0, r1
   1217c:	beq	121a4 <getc@plt+0x162c>
   12180:	ldr	r0, [pc, #164]	; 1222c <getc@plt+0x16b4>
   12184:	ldr	r0, [pc, r0]
   12188:	ldr	r1, [fp, #-12]
   1218c:	ldr	r1, [r0, r1, lsl #2]
   12190:	ldr	r2, [fp, #-16]
   12194:	sub	r3, r2, #1
   12198:	str	r3, [fp, #-16]
   1219c:	add	r0, r0, r2, lsl #2
   121a0:	str	r1, [r0]
   121a4:	b	12030 <getc@plt+0x14b8>
   121a8:	ldr	r0, [sp, #20]
   121ac:	ldr	r1, [pc, #124]	; 12230 <getc@plt+0x16b8>
   121b0:	ldr	r1, [pc, r1]
   121b4:	ldr	r2, [fp, #-16]
   121b8:	add	r1, r1, r2, lsl #2
   121bc:	str	r0, [r1]
   121c0:	ldr	r0, [fp, #-4]
   121c4:	ldr	r1, [fp, #-16]
   121c8:	mvn	r2, #0
   121cc:	add	r1, r1, r2
   121d0:	str	r1, [fp, #-16]
   121d4:	cmp	r0, r1
   121d8:	bge	121e8 <getc@plt+0x1670>
   121dc:	ldr	r0, [fp, #-4]
   121e0:	ldr	r1, [fp, #-16]
   121e4:	bl	11ff4 <getc@plt+0x147c>
   121e8:	ldr	r0, [fp, #-12]
   121ec:	add	r0, r0, #1
   121f0:	str	r0, [fp, #-12]
   121f4:	ldr	r1, [fp, #-8]
   121f8:	cmp	r0, r1
   121fc:	bge	1220c <getc@plt+0x1694>
   12200:	ldr	r0, [fp, #-12]
   12204:	ldr	r1, [fp, #-8]
   12208:	bl	11ff4 <getc@plt+0x147c>
   1220c:	mov	sp, fp
   12210:	pop	{fp, pc}
   12214:	andeq	r4, r1, ip, lsr #11
   12218:	andeq	r4, r1, ip, ror #10
   1221c:	andeq	r4, r1, ip, asr r5
   12220:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12224:			; <UNDEFINED> instruction: 0x000144b8
   12228:	andeq	r4, r1, r8, lsr #9
   1222c:	andeq	r4, r1, r4, asr #8
   12230:	andeq	r4, r1, r8, lsl r4
   12234:	andeq	r0, r0, r0
   12238:	push	{fp, lr}
   1223c:	mov	fp, sp
   12240:	sub	sp, sp, #24
   12244:	ldr	r3, [pc, #136]	; 122d4 <getc@plt+0x175c>
   12248:	ldr	r3, [pc, r3]
   1224c:	str	r0, [fp, #-4]
   12250:	str	r1, [fp, #-8]
   12254:	str	r2, [sp, #12]
   12258:	movw	r0, #1
   1225c:	movw	r1, #32
   12260:	blx	r3
   12264:	ldr	r1, [pc, #100]	; 122d0 <getc@plt+0x1758>
   12268:	ldr	r1, [pc, r1]
   1226c:	str	r0, [sp, #8]
   12270:	ldr	r0, [fp, #-8]
   12274:	ldr	r2, [sp, #8]
   12278:	str	r0, [r2, #8]
   1227c:	ldr	r0, [sp, #12]
   12280:	ldr	r2, [sp, #8]
   12284:	str	r0, [r2, #12]
   12288:	ldr	r0, [fp, #-8]
   1228c:	ldr	r2, [fp, #-4]
   12290:	ldr	r3, [r2, #24]
   12294:	add	r0, r3, r0
   12298:	str	r0, [r2, #24]
   1229c:	ldr	r0, [sp, #12]
   122a0:	ldr	r2, [fp, #-4]
   122a4:	ldr	r3, [r2, #28]
   122a8:	add	r0, r3, r0
   122ac:	str	r0, [r2, #28]
   122b0:	ldr	r0, [fp, #-4]
   122b4:	ldr	r2, [sp, #8]
   122b8:	str	r1, [sp, #4]
   122bc:	mov	r1, r2
   122c0:	ldr	r2, [sp, #4]
   122c4:	blx	r2
   122c8:	mov	sp, fp
   122cc:	pop	{fp, pc}
   122d0:	andeq	r3, r1, ip, asr #28
   122d4:			; <UNDEFINED> instruction: 0x00013eb4
   122d8:	push	{fp, lr}
   122dc:	mov	fp, sp
   122e0:	sub	sp, sp, #112	; 0x70
   122e4:	vldr	d16, [pc, #884]	; 12660 <getc@plt+0x1ae8>
   122e8:	str	r0, [fp, #-4]
   122ec:	str	r1, [fp, #-8]
   122f0:	str	r2, [fp, #-12]
   122f4:	vstr	d16, [fp, #-32]	; 0xffffffe0
   122f8:	ldr	r0, [fp, #-4]
   122fc:	bl	12680 <getc@plt+0x1b08>
   12300:	sxtb	r0, r0
   12304:	cmp	r0, #0
   12308:	bne	12320 <getc@plt+0x17a8>
   1230c:	ldr	r0, [pc, #868]	; 12678 <getc@plt+0x1b00>
   12310:	add	r0, pc, r0
   12314:	ldr	r1, [pc, #864]	; 1267c <getc@plt+0x1b04>
   12318:	ldr	r1, [pc, r1]
   1231c:	blx	r1
   12320:	ldr	r0, [fp, #-4]
   12324:	ldr	r0, [r0, #12]
   12328:	str	r0, [fp, #-16]
   1232c:	ldr	r0, [fp, #-4]
   12330:	ldr	r0, [r0, #24]
   12334:	ldr	r1, [fp, #-4]
   12338:	ldr	r1, [r1, #28]
   1233c:	bl	12708 <getc@plt+0x1b90>
   12340:	ldr	r0, [fp, #-4]
   12344:	vstr	d0, [r0, #32]
   12348:	ldr	r0, [fp, #-16]
   1234c:	vmov	s2, r0
   12350:	vcvt.f64.s32	d16, s2
   12354:	ldr	r0, [fp, #-4]
   12358:	vldr	d17, [r0, #32]
   1235c:	vmul.f64	d16, d16, d17
   12360:	vstr	d16, [fp, #-24]	; 0xffffffe8
   12364:	ldr	r0, [fp, #-4]
   12368:	ldr	r0, [r0]
   1236c:	str	r0, [fp, #-44]	; 0xffffffd4
   12370:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12374:	movw	r1, #0
   12378:	cmp	r0, r1
   1237c:	beq	12404 <getc@plt+0x188c>
   12380:	ldr	r0, [fp, #-4]
   12384:	ldr	r0, [r0, #24]
   12388:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1238c:	ldr	r1, [r1, #8]
   12390:	sub	r0, r0, r1
   12394:	ldr	r1, [fp, #-4]
   12398:	ldr	r1, [r1, #28]
   1239c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   123a0:	ldr	r2, [r2, #12]
   123a4:	sub	r1, r1, r2
   123a8:	bl	12708 <getc@plt+0x1b90>
   123ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   123b0:	vstr	d0, [r0, #16]
   123b4:	vldr	d16, [fp, #-24]	; 0xffffffe8
   123b8:	ldr	r0, [fp, #-16]
   123bc:	sub	r0, r0, #1
   123c0:	vmov	s2, r0
   123c4:	vcvt.f64.s32	d17, s2
   123c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   123cc:	vldr	d18, [r0, #16]
   123d0:	vmul.f64	d17, d17, d18
   123d4:	vsub.f64	d16, d16, d17
   123d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   123dc:	vstr	d16, [r0, #24]
   123e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   123e4:	vldr	d16, [r0, #16]
   123e8:	vldr	d17, [fp, #-32]	; 0xffffffe0
   123ec:	vadd.f64	d16, d17, d16
   123f0:	vstr	d16, [fp, #-32]	; 0xffffffe0
   123f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   123f8:	ldr	r0, [r0, #4]
   123fc:	str	r0, [fp, #-44]	; 0xffffffd4
   12400:	b	12370 <getc@plt+0x17f8>
   12404:	vldr	d16, [pc, #596]	; 12660 <getc@plt+0x1ae8>
   12408:	vldr	d17, [fp, #-24]	; 0xffffffe8
   1240c:	ldr	r0, [fp, #-16]
   12410:	sub	r0, r0, #1
   12414:	vmov	s0, r0
   12418:	vcvt.f64.s32	d18, s0
   1241c:	vldr	d19, [fp, #-32]	; 0xffffffe0
   12420:	vmul.f64	d18, d18, d19
   12424:	ldr	r0, [fp, #-16]
   12428:	vmov	s0, r0
   1242c:	vcvt.f64.s32	d19, s0
   12430:	vdiv.f64	d18, d18, d19
   12434:	vsub.f64	d17, d17, d18
   12438:	ldr	r0, [fp, #-4]
   1243c:	vstr	d17, [r0, #40]	; 0x28
   12440:	vstr	d16, [fp, #-32]	; 0xffffffe0
   12444:	ldr	r0, [fp, #-4]
   12448:	ldr	r0, [r0]
   1244c:	str	r0, [fp, #-44]	; 0xffffffd4
   12450:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12454:	movw	r1, #0
   12458:	cmp	r0, r1
   1245c:	beq	124a8 <getc@plt+0x1930>
   12460:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12464:	vldr	d16, [r0, #24]
   12468:	ldr	r0, [fp, #-4]
   1246c:	vldr	d17, [r0, #40]	; 0x28
   12470:	vsub.f64	d16, d16, d17
   12474:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12478:	vldr	d17, [r0, #24]
   1247c:	ldr	r0, [fp, #-4]
   12480:	vldr	d18, [r0, #40]	; 0x28
   12484:	vsub.f64	d17, d17, d18
   12488:	vmul.f64	d16, d16, d17
   1248c:	vldr	d17, [fp, #-32]	; 0xffffffe0
   12490:	vadd.f64	d16, d17, d16
   12494:	vstr	d16, [fp, #-32]	; 0xffffffe0
   12498:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1249c:	ldr	r0, [r0, #4]
   124a0:	str	r0, [fp, #-44]	; 0xffffffd4
   124a4:	b	12450 <getc@plt+0x18d8>
   124a8:	vldr	d16, [pc, #440]	; 12668 <getc@plt+0x1af0>
   124ac:	vldr	d17, [pc, #444]	; 12670 <getc@plt+0x1af8>
   124b0:	vldr	d18, [fp, #-32]	; 0xffffffe0
   124b4:	ldr	r0, [fp, #-16]
   124b8:	sub	r0, r0, #1
   124bc:	vmov	s0, r0
   124c0:	vcvt.f64.s32	d19, s0
   124c4:	vdiv.f64	d18, d18, d19
   124c8:	ldr	r0, [fp, #-16]
   124cc:	vmov	s0, r0
   124d0:	vcvt.f64.s32	d19, s0
   124d4:	vdiv.f64	d0, d18, d19
   124d8:	vstr	d16, [sp, #56]	; 0x38
   124dc:	vstr	d17, [sp, #48]	; 0x30
   124e0:	bl	10b18 <sqrt@plt>
   124e4:	vldr	d16, [sp, #48]	; 0x30
   124e8:	vmul.f64	d17, d16, d0
   124ec:	vstr	d17, [fp, #-40]	; 0xffffffd8
   124f0:	ldr	r0, [fp, #-4]
   124f4:	vldr	d17, [r0, #40]	; 0x28
   124f8:	vldr	d18, [fp, #-40]	; 0xffffffd8
   124fc:	vsub.f64	d17, d17, d18
   12500:	vldr	d18, [sp, #56]	; 0x38
   12504:	vcmpe.f64	d18, d17
   12508:	vmrs	APSR_nzcv, fpscr
   1250c:	bpl	1251c <getc@plt+0x19a4>
   12510:	vldr	d16, [pc, #336]	; 12668 <getc@plt+0x1af0>
   12514:	vstr	d16, [sp, #40]	; 0x28
   12518:	b	12530 <getc@plt+0x19b8>
   1251c:	ldr	r0, [fp, #-4]
   12520:	vldr	d16, [r0, #40]	; 0x28
   12524:	vldr	d17, [fp, #-40]	; 0xffffffd8
   12528:	vsub.f64	d16, d16, d17
   1252c:	vstr	d16, [sp, #40]	; 0x28
   12530:	vldr	d16, [sp, #40]	; 0x28
   12534:	vldr	d17, [pc, #292]	; 12660 <getc@plt+0x1ae8>
   12538:	vcmpe.f64	d17, d16
   1253c:	vmrs	APSR_nzcv, fpscr
   12540:	ble	12550 <getc@plt+0x19d8>
   12544:	vldr	d16, [pc, #276]	; 12660 <getc@plt+0x1ae8>
   12548:	vstr	d16, [sp, #32]
   1254c:	b	12598 <getc@plt+0x1a20>
   12550:	vldr	d16, [pc, #272]	; 12668 <getc@plt+0x1af0>
   12554:	ldr	r0, [fp, #-4]
   12558:	vldr	d17, [r0, #40]	; 0x28
   1255c:	vldr	d18, [fp, #-40]	; 0xffffffd8
   12560:	vsub.f64	d17, d17, d18
   12564:	vcmpe.f64	d16, d17
   12568:	vmrs	APSR_nzcv, fpscr
   1256c:	bpl	1257c <getc@plt+0x1a04>
   12570:	vldr	d16, [pc, #240]	; 12668 <getc@plt+0x1af0>
   12574:	vstr	d16, [sp, #24]
   12578:	b	12590 <getc@plt+0x1a18>
   1257c:	ldr	r0, [fp, #-4]
   12580:	vldr	d16, [r0, #40]	; 0x28
   12584:	vldr	d17, [fp, #-40]	; 0xffffffd8
   12588:	vsub.f64	d16, d16, d17
   1258c:	vstr	d16, [sp, #24]
   12590:	vldr	d16, [sp, #24]
   12594:	vstr	d16, [sp, #32]
   12598:	vldr	d16, [sp, #32]
   1259c:	vldr	d17, [pc, #196]	; 12668 <getc@plt+0x1af0>
   125a0:	ldr	r0, [fp, #-8]
   125a4:	vstr	d16, [r0]
   125a8:	ldr	r0, [fp, #-4]
   125ac:	vldr	d16, [r0, #40]	; 0x28
   125b0:	vldr	d18, [fp, #-40]	; 0xffffffd8
   125b4:	vadd.f64	d16, d16, d18
   125b8:	vcmpe.f64	d17, d16
   125bc:	vmrs	APSR_nzcv, fpscr
   125c0:	bpl	125d0 <getc@plt+0x1a58>
   125c4:	vldr	d16, [pc, #156]	; 12668 <getc@plt+0x1af0>
   125c8:	vstr	d16, [sp, #16]
   125cc:	b	125e4 <getc@plt+0x1a6c>
   125d0:	ldr	r0, [fp, #-4]
   125d4:	vldr	d16, [r0, #40]	; 0x28
   125d8:	vldr	d17, [fp, #-40]	; 0xffffffd8
   125dc:	vadd.f64	d16, d16, d17
   125e0:	vstr	d16, [sp, #16]
   125e4:	vldr	d16, [sp, #16]
   125e8:	vldr	d17, [pc, #112]	; 12660 <getc@plt+0x1ae8>
   125ec:	vcmpe.f64	d17, d16
   125f0:	vmrs	APSR_nzcv, fpscr
   125f4:	ble	12604 <getc@plt+0x1a8c>
   125f8:	vldr	d16, [pc, #96]	; 12660 <getc@plt+0x1ae8>
   125fc:	vstr	d16, [sp, #8]
   12600:	b	1264c <getc@plt+0x1ad4>
   12604:	vldr	d16, [pc, #92]	; 12668 <getc@plt+0x1af0>
   12608:	ldr	r0, [fp, #-4]
   1260c:	vldr	d17, [r0, #40]	; 0x28
   12610:	vldr	d18, [fp, #-40]	; 0xffffffd8
   12614:	vadd.f64	d17, d17, d18
   12618:	vcmpe.f64	d16, d17
   1261c:	vmrs	APSR_nzcv, fpscr
   12620:	bpl	12630 <getc@plt+0x1ab8>
   12624:	vldr	d16, [pc, #60]	; 12668 <getc@plt+0x1af0>
   12628:	vstr	d16, [sp]
   1262c:	b	12644 <getc@plt+0x1acc>
   12630:	ldr	r0, [fp, #-4]
   12634:	vldr	d16, [r0, #40]	; 0x28
   12638:	vldr	d17, [fp, #-40]	; 0xffffffd8
   1263c:	vadd.f64	d16, d16, d17
   12640:	vstr	d16, [sp]
   12644:	vldr	d16, [sp]
   12648:	vstr	d16, [sp, #8]
   1264c:	vldr	d16, [sp, #8]
   12650:	ldr	r0, [fp, #-12]
   12654:	vstr	d16, [r0]
   12658:	mov	sp, fp
   1265c:	pop	{fp, pc}
	...
   1266c:	subsmi	r0, r9, r0
   12670:			; <UNDEFINED> instruction: 0xf5c28f5c
   12674:	svccc	0x00ff5c28
   12678:	andeq	r2, r0, r9, lsr #22
   1267c:	andeq	r3, r1, r4, ror sp
   12680:	sub	sp, sp, #12
   12684:	str	r0, [sp, #8]
   12688:	movw	r0, #0
   1268c:	str	r0, [sp, #4]
   12690:	ldr	r0, [sp, #8]
   12694:	ldr	r0, [r0]
   12698:	str	r0, [sp]
   1269c:	ldr	r0, [sp]
   126a0:	movw	r1, #0
   126a4:	cmp	r0, r1
   126a8:	beq	126dc <getc@plt+0x1b64>
   126ac:	ldr	r0, [sp]
   126b0:	ldr	r0, [r0, #8]
   126b4:	cmp	r0, #0
   126b8:	ble	126c8 <getc@plt+0x1b50>
   126bc:	ldr	r0, [sp, #4]
   126c0:	add	r0, r0, #1
   126c4:	str	r0, [sp, #4]
   126c8:	b	126cc <getc@plt+0x1b54>
   126cc:	ldr	r0, [sp]
   126d0:	ldr	r0, [r0, #4]
   126d4:	str	r0, [sp]
   126d8:	b	1269c <getc@plt+0x1b24>
   126dc:	ldr	r0, [sp, #4]
   126e0:	cmp	r0, #1
   126e4:	movw	r0, #0
   126e8:	movgt	r0, #1
   126ec:	tst	r0, #1
   126f0:	movw	r0, #1
   126f4:	moveq	r0, #0
   126f8:	and	r0, r0, #255	; 0xff
   126fc:	add	sp, sp, #12
   12700:	bx	lr
   12704:	nop	{0}
   12708:	sub	sp, sp, #8
   1270c:	vldr	d16, [pc, #52]	; 12748 <getc@plt+0x1bd0>
   12710:	str	r0, [sp, #4]
   12714:	str	r1, [sp]
   12718:	ldr	r0, [sp, #4]
   1271c:	ldr	r1, [sp]
   12720:	sub	r0, r0, r1
   12724:	vmov	s0, r0
   12728:	vcvt.f64.s32	d17, s0
   1272c:	vmul.f64	d16, d16, d17
   12730:	ldr	r0, [sp, #4]
   12734:	vmov	s0, r0
   12738:	vcvt.f64.s32	d17, s0
   1273c:	vdiv.f64	d0, d16, d17
   12740:	add	sp, sp, #8
   12744:	bx	lr
   12748:	andeq	r0, r0, r0
   1274c:	subsmi	r0, r9, r0
   12750:	push	{fp, lr}
   12754:	mov	fp, sp
   12758:	sub	sp, sp, #16
   1275c:	str	r0, [fp, #-4]
   12760:	movw	r0, #0
   12764:	strh	r0, [fp, #-6]
   12768:	ldrsh	r0, [fp, #-6]
   1276c:	movw	r1, #503	; 0x1f7
   12770:	cmp	r0, r1
   12774:	bge	127b0 <getc@plt+0x1c38>
   12778:	ldr	r0, [pc, #92]	; 127dc <getc@plt+0x1c64>
   1277c:	ldr	r0, [pc, r0]
   12780:	ldr	r1, [fp, #-4]
   12784:	ldrsh	r2, [fp, #-6]
   12788:	add	r1, r1, r2, lsl #4
   1278c:	str	r0, [sp, #4]
   12790:	mov	r0, r1
   12794:	ldr	r1, [sp, #4]
   12798:	blx	r1
   1279c:	ldrh	r0, [fp, #-6]
   127a0:	movw	r1, #1
   127a4:	add	r0, r0, r1
   127a8:	strh	r0, [fp, #-6]
   127ac:	b	12768 <getc@plt+0x1bf0>
   127b0:	ldr	r0, [fp, #-4]
   127b4:	movw	r1, #8048	; 0x1f70
   127b8:	add	r0, r0, r1
   127bc:	movw	r1, #0
   127c0:	str	r1, [r0]
   127c4:	ldr	r0, [fp, #-4]
   127c8:	movw	r2, #8052	; 0x1f74
   127cc:	add	r0, r0, r2
   127d0:	str	r1, [r0]
   127d4:	mov	sp, fp
   127d8:	pop	{fp, pc}
   127dc:	andeq	r3, r1, ip, ror #18
   127e0:	push	{fp, lr}
   127e4:	mov	fp, sp
   127e8:	sub	sp, sp, #24
   127ec:	str	r0, [fp, #-4]
   127f0:	str	r1, [fp, #-8]
   127f4:	ldr	r0, [fp, #-4]
   127f8:	ldr	r1, [fp, #-8]
   127fc:	str	r0, [sp, #8]
   12800:	mov	r0, r1
   12804:	bl	12880 <getc@plt+0x1d08>
   12808:	mov	r1, r0
   1280c:	ldr	r2, [sp, #8]
   12810:	add	r0, r2, r0, lsl #4
   12814:	ldr	r0, [r0]
   12818:	str	r0, [sp, #12]
   1281c:	ldr	r0, [sp, #12]
   12820:	movw	r1, #0
   12824:	cmp	r0, r1
   12828:	movw	r0, #0
   1282c:	str	r0, [sp, #4]
   12830:	beq	12854 <getc@plt+0x1cdc>
   12834:	ldr	r0, [fp, #-8]
   12838:	ldr	r1, [sp, #12]
   1283c:	ldr	r1, [r1, #8]
   12840:	bl	10a28 <strcmp@plt>
   12844:	cmp	r0, #0
   12848:	movw	r0, #0
   1284c:	movne	r0, #1
   12850:	str	r0, [sp, #4]
   12854:	ldr	r0, [sp, #4]
   12858:	tst	r0, #1
   1285c:	beq	12874 <getc@plt+0x1cfc>
   12860:	b	12864 <getc@plt+0x1cec>
   12864:	ldr	r0, [sp, #12]
   12868:	ldr	r0, [r0, #4]
   1286c:	str	r0, [sp, #12]
   12870:	b	1281c <getc@plt+0x1ca4>
   12874:	ldr	r0, [sp, #12]
   12878:	mov	sp, fp
   1287c:	pop	{fp, pc}
   12880:	sub	sp, sp, #16
   12884:	str	r0, [sp, #12]
   12888:	ldr	r0, [sp, #12]
   1288c:	str	r0, [sp, #8]
   12890:	movw	r0, #0
   12894:	str	r0, [sp]
   12898:	str	r0, [sp, #4]
   1289c:	ldr	r0, [sp, #8]
   128a0:	ldr	r1, [sp, #4]
   128a4:	add	r0, r0, r1
   128a8:	ldrsb	r0, [r0]
   128ac:	cmp	r0, #0
   128b0:	beq	128e0 <getc@plt+0x1d68>
   128b4:	ldr	r0, [sp, #8]
   128b8:	ldr	r1, [sp, #4]
   128bc:	add	r0, r0, r1
   128c0:	ldrb	r0, [r0]
   128c4:	ldr	r1, [sp]
   128c8:	add	r0, r1, r0
   128cc:	str	r0, [sp]
   128d0:	ldr	r0, [sp, #4]
   128d4:	add	r0, r0, #1
   128d8:	str	r0, [sp, #4]
   128dc:	b	1289c <getc@plt+0x1d24>
   128e0:	ldr	r0, [sp]
   128e4:	movw	r1, #20065	; 0x4e61
   128e8:	movt	r1, #33354	; 0x824a
   128ec:	smmla	r1, r0, r1, r0
   128f0:	asr	r2, r1, #8
   128f4:	add	r1, r2, r1, lsr #31
   128f8:	movw	r2, #503	; 0x1f7
   128fc:	mls	r0, r1, r2, r0
   12900:	sxth	r0, r0
   12904:	add	sp, sp, #16
   12908:	bx	lr
   1290c:	push	{fp, lr}
   12910:	mov	fp, sp
   12914:	sub	sp, sp, #24
   12918:	ldr	r2, [pc, #112]	; 12990 <getc@plt+0x1e18>
   1291c:	ldr	r2, [pc, r2]
   12920:	str	r0, [fp, #-4]
   12924:	str	r1, [fp, #-8]
   12928:	ldr	r0, [fp, #-4]
   1292c:	ldr	r1, [fp, #-8]
   12930:	ldr	r1, [r1, #8]
   12934:	str	r0, [sp, #12]
   12938:	mov	r0, r1
   1293c:	str	r2, [sp, #8]
   12940:	bl	12880 <getc@plt+0x1d08>
   12944:	mov	r1, r0
   12948:	ldr	r2, [sp, #12]
   1294c:	add	r0, r2, r0, lsl #4
   12950:	ldr	r3, [fp, #-8]
   12954:	str	r1, [sp, #4]
   12958:	mov	r1, r3
   1295c:	ldr	r3, [sp, #8]
   12960:	blx	r3
   12964:	ldr	r0, [fp, #-4]
   12968:	bl	12994 <getc@plt+0x1e1c>
   1296c:	ldr	r0, [fp, #-4]
   12970:	movw	r1, #8052	; 0x1f74
   12974:	add	r2, r0, r1
   12978:	ldr	r2, [r2]
   1297c:	add	r2, r2, #1
   12980:	add	r0, r0, r1
   12984:	str	r2, [r0]
   12988:	mov	sp, fp
   1298c:	pop	{fp, pc}
   12990:	andeq	r3, r1, ip, ror #14
   12994:	push	{fp, lr}
   12998:	mov	fp, sp
   1299c:	sub	sp, sp, #8
   129a0:	str	r0, [sp, #4]
   129a4:	ldr	r0, [sp, #4]
   129a8:	movw	r1, #8048	; 0x1f70
   129ac:	add	r0, r0, r1
   129b0:	ldr	r0, [r0]
   129b4:	movw	r1, #0
   129b8:	cmp	r0, r1
   129bc:	beq	129e8 <getc@plt+0x1e70>
   129c0:	ldr	r0, [sp, #4]
   129c4:	movw	r1, #8048	; 0x1f70
   129c8:	add	r0, r0, r1
   129cc:	ldr	r0, [r0]
   129d0:	bl	10a4c <free@plt>
   129d4:	ldr	r0, [sp, #4]
   129d8:	movw	r1, #8048	; 0x1f70
   129dc:	add	r0, r0, r1
   129e0:	movw	r1, #0
   129e4:	str	r1, [r0]
   129e8:	mov	sp, fp
   129ec:	pop	{fp, pc}
   129f0:	push	{fp, lr}
   129f4:	mov	fp, sp
   129f8:	sub	sp, sp, #24
   129fc:	ldr	r2, [pc, #116]	; 12a78 <getc@plt+0x1f00>
   12a00:	ldr	r2, [pc, r2]
   12a04:	str	r0, [fp, #-4]
   12a08:	str	r1, [fp, #-8]
   12a0c:	ldr	r0, [fp, #-4]
   12a10:	ldr	r1, [fp, #-8]
   12a14:	ldr	r1, [r1, #8]
   12a18:	str	r0, [sp, #12]
   12a1c:	mov	r0, r1
   12a20:	str	r2, [sp, #8]
   12a24:	bl	12880 <getc@plt+0x1d08>
   12a28:	mov	r1, r0
   12a2c:	ldr	r2, [sp, #12]
   12a30:	add	r0, r2, r0, lsl #4
   12a34:	ldr	r3, [fp, #-8]
   12a38:	str	r1, [sp, #4]
   12a3c:	mov	r1, r3
   12a40:	ldr	r3, [sp, #8]
   12a44:	blx	r3
   12a48:	ldr	r0, [fp, #-4]
   12a4c:	bl	12994 <getc@plt+0x1e1c>
   12a50:	ldr	r0, [fp, #-4]
   12a54:	movw	r1, #8052	; 0x1f74
   12a58:	add	r2, r0, r1
   12a5c:	ldr	r2, [r2]
   12a60:	mvn	r3, #0
   12a64:	add	r2, r2, r3
   12a68:	add	r0, r0, r1
   12a6c:	str	r2, [r0]
   12a70:	mov	sp, fp
   12a74:	pop	{fp, pc}
   12a78:	andeq	r3, r1, r8, lsl #14
   12a7c:	push	{fp, lr}
   12a80:	mov	fp, sp
   12a84:	sub	sp, sp, #24
   12a88:	str	r0, [fp, #-4]
   12a8c:	movw	r0, #0
   12a90:	str	r0, [sp, #8]
   12a94:	ldr	r1, [fp, #-4]
   12a98:	movw	r2, #8048	; 0x1f70
   12a9c:	add	r1, r1, r2
   12aa0:	ldr	r1, [r1]
   12aa4:	cmp	r1, r0
   12aa8:	bne	12ac4 <getc@plt+0x1f4c>
   12aac:	ldr	r0, [fp, #-4]
   12ab0:	movw	r1, #8052	; 0x1f74
   12ab4:	add	r0, r0, r1
   12ab8:	ldr	r0, [r0]
   12abc:	cmp	r0, #0
   12ac0:	bne	12ac8 <getc@plt+0x1f50>
   12ac4:	b	12b88 <getc@plt+0x2010>
   12ac8:	ldr	r0, [pc, #192]	; 12b90 <getc@plt+0x2018>
   12acc:	ldr	r0, [pc, r0]
   12ad0:	ldr	r1, [fp, #-4]
   12ad4:	movw	r2, #8052	; 0x1f74
   12ad8:	add	r1, r1, r2
   12adc:	ldr	r1, [r1]
   12ae0:	str	r0, [sp, #4]
   12ae4:	mov	r0, r1
   12ae8:	movw	r1, #4
   12aec:	ldr	r2, [sp, #4]
   12af0:	blx	r2
   12af4:	ldr	r1, [fp, #-4]
   12af8:	movw	r2, #8048	; 0x1f70
   12afc:	add	r1, r1, r2
   12b00:	str	r0, [r1]
   12b04:	movw	r0, #0
   12b08:	str	r0, [sp, #12]
   12b0c:	ldr	r0, [sp, #12]
   12b10:	movw	r1, #503	; 0x1f7
   12b14:	cmp	r0, r1
   12b18:	bge	12b88 <getc@plt+0x2010>
   12b1c:	ldr	r0, [fp, #-4]
   12b20:	ldr	r1, [sp, #12]
   12b24:	add	r0, r0, r1, lsl #4
   12b28:	ldr	r0, [r0]
   12b2c:	str	r0, [fp, #-8]
   12b30:	ldr	r0, [fp, #-8]
   12b34:	movw	r1, #0
   12b38:	cmp	r0, r1
   12b3c:	beq	12b74 <getc@plt+0x1ffc>
   12b40:	ldr	r0, [fp, #-8]
   12b44:	ldr	r1, [fp, #-4]
   12b48:	movw	r2, #8048	; 0x1f70
   12b4c:	ldr	r1, [r1, r2]
   12b50:	ldr	r2, [sp, #8]
   12b54:	add	r3, r2, #1
   12b58:	str	r3, [sp, #8]
   12b5c:	add	r1, r1, r2, lsl #2
   12b60:	str	r0, [r1]
   12b64:	ldr	r0, [fp, #-8]
   12b68:	ldr	r0, [r0, #4]
   12b6c:	str	r0, [fp, #-8]
   12b70:	b	12b30 <getc@plt+0x1fb8>
   12b74:	b	12b78 <getc@plt+0x2000>
   12b78:	ldr	r0, [sp, #12]
   12b7c:	add	r0, r0, #1
   12b80:	str	r0, [sp, #12]
   12b84:	b	12b0c <getc@plt+0x1f94>
   12b88:	mov	sp, fp
   12b8c:	pop	{fp, pc}
   12b90:	andeq	r3, r1, r0, lsr r6
   12b94:	push	{fp, lr}
   12b98:	mov	fp, sp
   12b9c:	sub	sp, sp, #16
   12ba0:	str	r0, [fp, #-4]
   12ba4:	str	r1, [sp, #8]
   12ba8:	movw	r0, #0
   12bac:	strh	r0, [sp, #6]
   12bb0:	ldrsh	r0, [sp, #6]
   12bb4:	movw	r1, #503	; 0x1f7
   12bb8:	cmp	r0, r1
   12bbc:	bge	12c00 <getc@plt+0x2088>
   12bc0:	ldr	r0, [pc, #92]	; 12c24 <getc@plt+0x20ac>
   12bc4:	ldr	r0, [pc, r0]
   12bc8:	ldr	r1, [fp, #-4]
   12bcc:	ldrsh	r2, [sp, #6]
   12bd0:	add	r1, r1, r2, lsl #4
   12bd4:	ldr	r2, [sp, #8]
   12bd8:	str	r0, [sp]
   12bdc:	mov	r0, r1
   12be0:	mov	r1, r2
   12be4:	ldr	r2, [sp]
   12be8:	blx	r2
   12bec:	ldrh	r0, [sp, #6]
   12bf0:	movw	r1, #1
   12bf4:	add	r0, r0, r1
   12bf8:	strh	r0, [sp, #6]
   12bfc:	b	12bb0 <getc@plt+0x2038>
   12c00:	ldr	r0, [fp, #-4]
   12c04:	bl	12994 <getc@plt+0x1e1c>
   12c08:	ldr	r0, [fp, #-4]
   12c0c:	movw	r1, #8052	; 0x1f74
   12c10:	add	r0, r0, r1
   12c14:	movw	r1, #0
   12c18:	str	r1, [r0]
   12c1c:	mov	sp, fp
   12c20:	pop	{fp, pc}
   12c24:	andeq	r3, r1, r0, asr #10
   12c28:	push	{fp, lr}
   12c2c:	mov	fp, sp
   12c30:	sub	sp, sp, #8
   12c34:	ldr	r1, [pc, #48]	; 12c6c <getc@plt+0x20f4>
   12c38:	add	r1, pc, r1
   12c3c:	str	r0, [sp, #4]
   12c40:	ldrsh	r0, [r1]
   12c44:	cmp	r0, #0
   12c48:	bne	12c50 <getc@plt+0x20d8>
   12c4c:	bl	12d10 <getc@plt+0x2198>
   12c50:	ldr	r0, [pc, #24]	; 12c70 <getc@plt+0x20f8>
   12c54:	add	r0, pc, r0
   12c58:	ldr	r1, [sp, #4]
   12c5c:	add	r0, r0, r1
   12c60:	ldrb	r0, [r0]
   12c64:	mov	sp, fp
   12c68:	pop	{fp, pc}
   12c6c:	muleq	r1, r8, r9
   12c70:	andeq	r3, r1, lr, ror r9
   12c74:	push	{fp, lr}
   12c78:	mov	fp, sp
   12c7c:	sub	sp, sp, #8
   12c80:	ldr	r1, [pc, #112]	; 12cf8 <getc@plt+0x2180>
   12c84:	add	r1, pc, r1
   12c88:	strb	r0, [fp, #-1]
   12c8c:	ldrsh	r0, [r1]
   12c90:	cmp	r0, #0
   12c94:	bne	12c9c <getc@plt+0x2124>
   12c98:	bl	12d10 <getc@plt+0x2198>
   12c9c:	ldr	r0, [pc, #88]	; 12cfc <getc@plt+0x2184>
   12ca0:	add	r0, pc, r0
   12ca4:	ldrb	r1, [fp, #-1]
   12ca8:	ldrsh	r0, [r0]
   12cac:	cmp	r1, r0
   12cb0:	blt	12cc8 <getc@plt+0x2150>
   12cb4:	ldr	r0, [pc, #72]	; 12d04 <getc@plt+0x218c>
   12cb8:	add	r0, pc, r0
   12cbc:	ldr	r1, [pc, #68]	; 12d08 <getc@plt+0x2190>
   12cc0:	ldr	r1, [pc, r1]
   12cc4:	blx	r1
   12cc8:	ldr	r0, [pc, #48]	; 12d00 <getc@plt+0x2188>
   12ccc:	add	r0, pc, r0
   12cd0:	ldrb	r1, [fp, #-1]
   12cd4:	mov	r2, r1
   12cd8:	ldr	r3, [pc, #44]	; 12d0c <getc@plt+0x2194>
   12cdc:	add	r3, pc, r3
   12ce0:	add	r1, r3, r1, lsl #2
   12ce4:	ldr	r1, [r1]
   12ce8:	str	r0, [sp]
   12cec:	mov	r0, r1
   12cf0:	mov	sp, fp
   12cf4:	pop	{fp, pc}
   12cf8:	andeq	r3, r1, ip, asr #18
   12cfc:	andeq	r3, r1, r0, lsr r9
   12d00:	andseq	r3, r2, r8, lsl #18
   12d04:	muleq	r0, r9, r1
   12d08:	andeq	r3, r1, ip, asr #7
   12d0c:			; <UNDEFINED> instruction: 0x001238f8
   12d10:	push	{fp, lr}
   12d14:	mov	fp, sp
   12d18:	sub	sp, sp, #24
   12d1c:	movw	r0, #0
   12d20:	str	r0, [fp, #-4]
   12d24:	ldr	r0, [fp, #-4]
   12d28:	cmp	r0, #91	; 0x5b
   12d2c:	bcs	12ed8 <getc@plt+0x2360>
   12d30:	movw	r0, #0
   12d34:	str	r0, [fp, #-8]
   12d38:	ldr	r0, [pc, #416]	; 12ee0 <getc@plt+0x2368>
   12d3c:	add	r0, pc, r0
   12d40:	ldr	r1, [fp, #-8]
   12d44:	ldrsh	r0, [r0]
   12d48:	cmp	r1, r0
   12d4c:	movw	r0, #0
   12d50:	str	r0, [sp, #8]
   12d54:	bge	12dac <getc@plt+0x2234>
   12d58:	ldr	r0, [pc, #388]	; 12ee4 <getc@plt+0x236c>
   12d5c:	add	r0, pc, r0
   12d60:	ldr	r1, [fp, #-4]
   12d64:	add	r1, r1, r1, lsl #1
   12d68:	ldr	r2, [pc, #408]	; 12f08 <getc@plt+0x2390>
   12d6c:	add	r2, pc, r2
   12d70:	add	r1, r2, r1, lsl #2
   12d74:	ldr	r1, [r1, #8]
   12d78:	ldr	r2, [fp, #-8]
   12d7c:	ldr	r3, [pc, #392]	; 12f0c <getc@plt+0x2394>
   12d80:	add	r3, pc, r3
   12d84:	add	r2, r3, r2, lsl #2
   12d88:	ldr	r2, [r2]
   12d8c:	str	r0, [sp, #4]
   12d90:	mov	r0, r1
   12d94:	mov	r1, r2
   12d98:	bl	10a28 <strcmp@plt>
   12d9c:	cmp	r0, #0
   12da0:	movw	r0, #0
   12da4:	movne	r0, #1
   12da8:	str	r0, [sp, #8]
   12dac:	ldr	r0, [sp, #8]
   12db0:	tst	r0, #1
   12db4:	beq	12dcc <getc@plt+0x2254>
   12db8:	b	12dbc <getc@plt+0x2244>
   12dbc:	ldr	r0, [fp, #-8]
   12dc0:	add	r0, r0, #1
   12dc4:	str	r0, [fp, #-8]
   12dc8:	b	12d38 <getc@plt+0x21c0>
   12dcc:	ldr	r0, [pc, #276]	; 12ee8 <getc@plt+0x2370>
   12dd0:	add	r0, pc, r0
   12dd4:	ldr	r1, [fp, #-8]
   12dd8:	ldrsh	r0, [r0]
   12ddc:	cmp	r1, r0
   12de0:	bne	12e54 <getc@plt+0x22dc>
   12de4:	ldr	r0, [pc, #256]	; 12eec <getc@plt+0x2374>
   12de8:	add	r0, pc, r0
   12dec:	ldrsh	r0, [r0]
   12df0:	cmp	r0, #256	; 0x100
   12df4:	bne	12e0c <getc@plt+0x2294>
   12df8:	ldr	r0, [pc, #256]	; 12f00 <getc@plt+0x2388>
   12dfc:	add	r0, pc, r0
   12e00:	ldr	r1, [pc, #252]	; 12f04 <getc@plt+0x238c>
   12e04:	ldr	r1, [pc, r1]
   12e08:	blx	r1
   12e0c:	ldr	r0, [pc, #220]	; 12ef0 <getc@plt+0x2378>
   12e10:	add	r0, pc, r0
   12e14:	ldr	r1, [pc, #244]	; 12f10 <getc@plt+0x2398>
   12e18:	add	r1, pc, r1
   12e1c:	ldrh	r2, [r1]
   12e20:	add	r2, r2, #1
   12e24:	strh	r2, [r1]
   12e28:	ldr	r1, [fp, #-4]
   12e2c:	add	r1, r1, r1, lsl #1
   12e30:	ldr	r2, [pc, #220]	; 12f14 <getc@plt+0x239c>
   12e34:	add	r2, pc, r2
   12e38:	add	r1, r2, r1, lsl #2
   12e3c:	ldr	r1, [r1, #8]
   12e40:	ldr	r2, [fp, #-8]
   12e44:	ldr	r3, [pc, #204]	; 12f18 <getc@plt+0x23a0>
   12e48:	add	r3, pc, r3
   12e4c:	add	r2, r3, r2, lsl #2
   12e50:	str	r1, [r2]
   12e54:	ldr	r0, [pc, #152]	; 12ef4 <getc@plt+0x237c>
   12e58:	add	r0, pc, r0
   12e5c:	ldr	r1, [fp, #-4]
   12e60:	movw	r2, #12
   12e64:	mul	r1, r1, r2
   12e68:	add	r0, r0, r1
   12e6c:	ldr	r0, [r0]
   12e70:	str	r0, [sp, #12]
   12e74:	ldr	r0, [pc, #124]	; 12ef8 <getc@plt+0x2380>
   12e78:	add	r0, pc, r0
   12e7c:	ldr	r1, [sp, #12]
   12e80:	ldr	r2, [fp, #-4]
   12e84:	movw	r3, #12
   12e88:	mul	r2, r2, r3
   12e8c:	add	r0, r0, r2
   12e90:	ldr	r0, [r0, #4]
   12e94:	cmp	r1, r0
   12e98:	bhi	12ec4 <getc@plt+0x234c>
   12e9c:	ldr	r0, [pc, #88]	; 12efc <getc@plt+0x2384>
   12ea0:	add	r0, pc, r0
   12ea4:	ldr	r1, [fp, #-8]
   12ea8:	ldr	r2, [sp, #12]
   12eac:	add	r0, r0, r2
   12eb0:	strb	r1, [r0]
   12eb4:	ldr	r0, [sp, #12]
   12eb8:	add	r0, r0, #1
   12ebc:	str	r0, [sp, #12]
   12ec0:	b	12e74 <getc@plt+0x22fc>
   12ec4:	b	12ec8 <getc@plt+0x2350>
   12ec8:	ldr	r0, [fp, #-4]
   12ecc:	add	r0, r0, #1
   12ed0:	str	r0, [fp, #-4]
   12ed4:	b	12d24 <getc@plt+0x21ac>
   12ed8:	mov	sp, fp
   12edc:	pop	{fp, pc}
   12ee0:	muleq	r1, r4, r8
   12ee4:	andseq	r3, r2, r8, ror r8
   12ee8:	andeq	r3, r1, r0, lsl #16
   12eec:	andeq	r3, r1, r8, ror #15
   12ef0:	andseq	r3, r2, r4, asr #15
   12ef4:			; <UNDEFINED> instruction: 0x000132bc
   12ef8:	muleq	r1, ip, r2
   12efc:	andeq	r3, r1, r2, lsr r7
   12f00:	andeq	r2, r0, sp, rrx
   12f04:	andeq	r3, r1, r8, lsl #5
   12f08:	andeq	r3, r1, r8, lsr #7
   12f0c:	andseq	r3, r2, r4, asr r8
   12f10:			; <UNDEFINED> instruction: 0x000137b8
   12f14:	andeq	r3, r1, r0, ror #5
   12f18:	andseq	r3, r2, ip, lsl #15
   12f1c:	push	{fp, lr}
   12f20:	mov	fp, sp
   12f24:	sub	sp, sp, #16
   12f28:	str	r0, [fp, #-4]
   12f2c:	str	r1, [sp, #8]
   12f30:	ldr	r0, [fp, #-4]
   12f34:	ldr	r1, [sp, #8]
   12f38:	bl	10a1c <calloc@plt>
   12f3c:	str	r0, [sp, #4]
   12f40:	ldr	r0, [sp, #4]
   12f44:	movw	r1, #0
   12f48:	cmp	r0, r1
   12f4c:	bne	12f5c <getc@plt+0x23e4>
   12f50:	ldr	r0, [pc, #16]	; 12f68 <getc@plt+0x23f0>
   12f54:	add	r0, pc, r0
   12f58:	bl	135f8 <error@@Base>
   12f5c:	ldr	r0, [sp, #4]
   12f60:	mov	sp, fp
   12f64:	pop	{fp, pc}
   12f68:	andeq	r2, r0, r3, ror #9
   12f6c:	sub	sp, sp, #20
   12f70:	str	r0, [sp, #12]
   12f74:	str	r1, [sp, #8]
   12f78:	movw	r0, #0
   12f7c:	str	r0, [sp, #4]
   12f80:	ldr	r0, [sp, #12]
   12f84:	ldr	r1, [sp, #4]
   12f88:	add	r0, r0, r1
   12f8c:	ldrb	r0, [r0]
   12f90:	cmp	r0, #0
   12f94:	movw	r0, #0
   12f98:	str	r0, [sp]
   12f9c:	beq	12fd0 <getc@plt+0x2458>
   12fa0:	ldr	r0, [sp, #12]
   12fa4:	ldr	r1, [sp, #4]
   12fa8:	add	r0, r0, r1
   12fac:	ldrb	r0, [r0]
   12fb0:	ldr	r1, [sp, #8]
   12fb4:	ldr	r2, [sp, #4]
   12fb8:	add	r1, r1, r2
   12fbc:	ldrb	r1, [r1]
   12fc0:	cmp	r0, r1
   12fc4:	movw	r0, #0
   12fc8:	moveq	r0, #1
   12fcc:	str	r0, [sp]
   12fd0:	ldr	r0, [sp]
   12fd4:	tst	r0, #1
   12fd8:	beq	12ff0 <getc@plt+0x2478>
   12fdc:	b	12fe0 <getc@plt+0x2468>
   12fe0:	ldr	r0, [sp, #4]
   12fe4:	add	r0, r0, #1
   12fe8:	str	r0, [sp, #4]
   12fec:	b	12f80 <getc@plt+0x2408>
   12ff0:	ldr	r0, [sp, #12]
   12ff4:	ldr	r1, [sp, #4]
   12ff8:	add	r0, r0, r1
   12ffc:	ldrb	r0, [r0]
   13000:	cmp	r0, #0
   13004:	bne	13020 <getc@plt+0x24a8>
   13008:	ldr	r0, [sp, #8]
   1300c:	ldr	r1, [sp, #4]
   13010:	add	r0, r0, r1
   13014:	ldrb	r0, [r0]
   13018:	cmp	r0, #0
   1301c:	beq	13060 <getc@plt+0x24e8>
   13020:	ldr	r0, [sp, #12]
   13024:	ldr	r1, [sp, #4]
   13028:	add	r0, r0, r1
   1302c:	ldrb	r0, [r0]
   13030:	ldr	r1, [sp, #8]
   13034:	ldr	r2, [sp, #4]
   13038:	add	r1, r1, r2
   1303c:	ldrb	r1, [r1]
   13040:	cmp	r0, r1
   13044:	movw	r0, #0
   13048:	movlt	r0, #1
   1304c:	tst	r0, #1
   13050:	mvn	r0, #0
   13054:	moveq	r0, #1
   13058:	str	r0, [sp, #16]
   1305c:	b	13068 <getc@plt+0x24f0>
   13060:	movw	r0, #0
   13064:	str	r0, [sp, #16]
   13068:	ldr	r0, [sp, #16]
   1306c:	add	sp, sp, #20
   13070:	bx	lr
   13074:	push	{fp, lr}
   13078:	mov	fp, sp
   1307c:	sub	sp, sp, #24
   13080:	str	r0, [fp, #-8]
   13084:	str	r1, [sp, #12]
   13088:	ldr	r0, [fp, #-8]
   1308c:	movw	r1, #0
   13090:	cmp	r0, r1
   13094:	bne	130d8 <getc@plt+0x2560>
   13098:	ldr	r0, [sp, #12]
   1309c:	ldrb	r0, [r0]
   130a0:	cmp	r0, #114	; 0x72
   130a4:	bne	130bc <getc@plt+0x2544>
   130a8:	ldr	r0, [pc, #148]	; 13144 <getc@plt+0x25cc>
   130ac:	ldr	r0, [pc, r0]
   130b0:	ldr	r0, [r0]
   130b4:	str	r0, [sp, #4]
   130b8:	b	130cc <getc@plt+0x2554>
   130bc:	ldr	r0, [pc, #124]	; 13140 <getc@plt+0x25c8>
   130c0:	ldr	r0, [pc, r0]
   130c4:	ldr	r0, [r0]
   130c8:	str	r0, [sp, #4]
   130cc:	ldr	r0, [sp, #4]
   130d0:	str	r0, [fp, #-4]
   130d4:	b	13134 <getc@plt+0x25bc>
   130d8:	ldr	r0, [fp, #-8]
   130dc:	ldr	r1, [sp, #12]
   130e0:	bl	10a40 <fopen@plt>
   130e4:	str	r0, [sp, #8]
   130e8:	ldr	r0, [sp, #8]
   130ec:	movw	r1, #0
   130f0:	cmp	r0, r1
   130f4:	beq	13104 <getc@plt+0x258c>
   130f8:	ldr	r0, [sp, #8]
   130fc:	str	r0, [fp, #-4]
   13100:	b	13134 <getc@plt+0x25bc>
   13104:	ldr	r0, [sp, #12]
   13108:	ldrb	r0, [r0]
   1310c:	cmp	r0, #119	; 0x77
   13110:	bne	13124 <getc@plt+0x25ac>
   13114:	ldr	r0, [pc, #48]	; 1314c <getc@plt+0x25d4>
   13118:	add	r0, pc, r0
   1311c:	ldr	r1, [fp, #-8]
   13120:	bl	13658 <error@@Base+0x60>
   13124:	ldr	r0, [pc, #28]	; 13148 <getc@plt+0x25d0>
   13128:	add	r0, pc, r0
   1312c:	ldr	r1, [fp, #-8]
   13130:	bl	13658 <error@@Base+0x60>
   13134:	ldr	r0, [fp, #-4]
   13138:	mov	sp, fp
   1313c:	pop	{fp, pc}
   13140:	andeq	r3, r1, r4, lsr #32
   13144:	andeq	r3, r1, ip, lsr #32
   13148:	andeq	r2, r0, pc, lsr r3
   1314c:	andeq	r2, r0, r9, lsr r3
   13150:	push	{fp, lr}
   13154:	mov	fp, sp
   13158:	sub	sp, sp, #8
   1315c:	ldr	r1, [pc, #60]	; 131a0 <getc@plt+0x2628>
   13160:	ldr	r1, [pc, r1]
   13164:	str	r0, [sp, #4]
   13168:	ldr	r0, [sp, #4]
   1316c:	ldr	r1, [r1]
   13170:	cmp	r0, r1
   13174:	beq	13198 <getc@plt+0x2620>
   13178:	ldr	r0, [pc, #36]	; 131a4 <getc@plt+0x262c>
   1317c:	ldr	r0, [pc, r0]
   13180:	ldr	r1, [sp, #4]
   13184:	ldr	r0, [r0]
   13188:	cmp	r1, r0
   1318c:	beq	13198 <getc@plt+0x2620>
   13190:	ldr	r0, [sp, #4]
   13194:	bl	10b30 <fclose@plt>
   13198:	mov	sp, fp
   1319c:	pop	{fp, pc}
   131a0:	andeq	r2, r1, r8, ror pc
   131a4:	andeq	r2, r1, r8, ror #30
   131a8:	push	{fp, lr}
   131ac:	mov	fp, sp
   131b0:	sub	sp, sp, #96	; 0x60
   131b4:	str	r0, [fp, #-4]
   131b8:	ldr	r0, [fp, #-4]
   131bc:	mov	r1, sp
   131c0:	bl	14ba4 <error@@Base+0x15ac>
   131c4:	cmp	r0, #0
   131c8:	movw	r0, #0
   131cc:	moveq	r0, #1
   131d0:	tst	r0, #1
   131d4:	movw	r0, #1
   131d8:	moveq	r0, #0
   131dc:	and	r0, r0, #255	; 0xff
   131e0:	mov	sp, fp
   131e4:	pop	{fp, pc}
   131e8:	push	{fp, lr}
   131ec:	mov	fp, sp
   131f0:	sub	sp, sp, #8
   131f4:	ldr	r0, [pc, #68]	; 13240 <getc@plt+0x26c8>
   131f8:	add	r0, pc, r0
   131fc:	ldrh	r1, [r0]
   13200:	movw	r2, #1
   13204:	add	r1, r1, r2
   13208:	strh	r1, [r0]
   1320c:	sxth	r0, r1
   13210:	bl	13244 <getc@plt+0x26cc>
   13214:	ldr	r1, [pc, #32]	; 1323c <getc@plt+0x26c4>
   13218:	ldr	r1, [pc, r1]
   1321c:	str	r0, [sp, #4]
   13220:	ldr	r0, [sp, #4]
   13224:	blx	r1
   13228:	ldr	r1, [sp, #4]
   1322c:	str	r0, [sp]
   13230:	mov	r0, r1
   13234:	mov	sp, fp
   13238:	pop	{fp, pc}
   1323c:	andeq	r2, r1, r4, lsl #29
   13240:			; <UNDEFINED> instruction: 0x001237dc
   13244:	push	{fp, lr}
   13248:	mov	fp, sp
   1324c:	sub	sp, sp, #128	; 0x80
   13250:	ldr	r1, [pc, #112]	; 132c8 <getc@plt+0x2750>
   13254:	ldr	r1, [pc, r1]
   13258:	ldr	r2, [pc, #108]	; 132cc <getc@plt+0x2754>
   1325c:	ldr	r2, [pc, r2]
   13260:	add	r3, sp, #26
   13264:	strh	r0, [fp, #-2]
   13268:	ldr	r2, [r2]
   1326c:	str	r3, [sp, #20]
   13270:	str	r2, [sp, #16]
   13274:	blx	r1
   13278:	ldr	r1, [pc, #68]	; 132c4 <getc@plt+0x274c>
   1327c:	add	r1, pc, r1
   13280:	ldrsh	r2, [fp, #-2]
   13284:	ldr	r3, [sp, #20]
   13288:	str	r0, [sp, #12]
   1328c:	mov	r0, r3
   13290:	ldr	ip, [sp, #16]
   13294:	str	r2, [sp, #8]
   13298:	mov	r2, ip
   1329c:	ldr	r3, [sp, #12]
   132a0:	ldr	lr, [sp, #8]
   132a4:	str	lr, [sp]
   132a8:	bl	10b3c <sprintf@plt>
   132ac:	add	r1, sp, #26
   132b0:	str	r0, [sp, #4]
   132b4:	mov	r0, r1
   132b8:	bl	10a7c <strdup@plt>
   132bc:	mov	sp, fp
   132c0:	pop	{fp, pc}
   132c4:	andeq	r2, r0, r4, lsl r2
   132c8:	andeq	r2, r1, r8, ror lr
   132cc:	andeq	r2, r1, r8, ror #28
   132d0:	push	{fp, lr}
   132d4:	mov	fp, sp
   132d8:	sub	sp, sp, #16
   132dc:	str	r0, [fp, #-4]
   132e0:	movw	r0, #47	; 0x2f
   132e4:	strb	r0, [fp, #-5]
   132e8:	ldr	r0, [fp, #-4]
   132ec:	bl	10b00 <strlen@plt>
   132f0:	sub	r0, r0, #1
   132f4:	strh	r0, [sp, #8]
   132f8:	ldrsh	r0, [sp, #8]
   132fc:	cmp	r0, #0
   13300:	movw	r0, #0
   13304:	str	r0, [sp, #4]
   13308:	blt	13330 <getc@plt+0x27b8>
   1330c:	ldr	r0, [fp, #-4]
   13310:	ldrsh	r1, [sp, #8]
   13314:	add	r0, r0, r1
   13318:	ldrb	r0, [r0]
   1331c:	ldrb	r1, [fp, #-5]
   13320:	cmp	r0, r1
   13324:	movw	r0, #0
   13328:	movne	r0, #1
   1332c:	str	r0, [sp, #4]
   13330:	ldr	r0, [sp, #4]
   13334:	tst	r0, #1
   13338:	beq	13354 <getc@plt+0x27dc>
   1333c:	b	13340 <getc@plt+0x27c8>
   13340:	ldrh	r0, [sp, #8]
   13344:	movw	r1, #65535	; 0xffff
   13348:	add	r0, r0, r1
   1334c:	strh	r0, [sp, #8]
   13350:	b	132f8 <getc@plt+0x2780>
   13354:	ldr	r0, [fp, #-4]
   13358:	ldrsh	r1, [sp, #8]
   1335c:	add	r1, r1, #1
   13360:	add	r0, r0, r1
   13364:	mov	sp, fp
   13368:	pop	{fp, pc}
   1336c:	push	{fp, lr}
   13370:	mov	fp, sp
   13374:	sub	sp, sp, #16
   13378:	str	r0, [fp, #-4]
   1337c:	str	r1, [sp, #8]
   13380:	str	r2, [sp, #4]
   13384:	str	r3, [sp]
   13388:	ldr	r0, [sp, #8]
   1338c:	ldr	r0, [r0]
   13390:	bl	132d0 <getc@plt+0x2758>
   13394:	ldr	r1, [pc, #36]	; 133c0 <getc@plt+0x2848>
   13398:	ldr	r1, [pc, r1]
   1339c:	str	r0, [r1]
   133a0:	bl	13734 <error@@Base+0x13c>
   133a4:	ldr	r0, [fp, #-4]
   133a8:	ldr	r1, [sp, #8]
   133ac:	ldr	r2, [sp, #4]
   133b0:	ldr	r3, [sp]
   133b4:	bl	133c4 <getc@plt+0x284c>
   133b8:	mov	sp, fp
   133bc:	pop	{fp, pc}
   133c0:	andeq	r2, r1, ip, lsr #26
   133c4:	push	{fp, lr}
   133c8:	mov	fp, sp
   133cc:	sub	sp, sp, #48	; 0x30
   133d0:	str	r0, [fp, #-4]
   133d4:	str	r1, [fp, #-8]
   133d8:	str	r2, [fp, #-12]
   133dc:	str	r3, [fp, #-16]
   133e0:	movw	r0, #0
   133e4:	strh	r0, [fp, #-20]	; 0xffffffec
   133e8:	ldr	r0, [fp, #-4]
   133ec:	ldr	r0, [r0]
   133f0:	cmp	r0, #1
   133f4:	bne	13414 <getc@plt+0x289c>
   133f8:	ldr	r0, [pc, #404]	; 13594 <getc@plt+0x2a1c>
   133fc:	ldr	r0, [pc, r0]
   13400:	ldrb	r0, [r0]
   13404:	cmp	r0, #0
   13408:	beq	13414 <getc@plt+0x289c>
   1340c:	ldr	r0, [fp, #-12]
   13410:	bl	137cc <error@@Base+0x1d4>
   13414:	movw	r0, #1
   13418:	strh	r0, [fp, #-18]	; 0xffffffee
   1341c:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   13420:	ldr	r1, [fp, #-4]
   13424:	ldr	r1, [r1]
   13428:	cmp	r0, r1
   1342c:	bge	13580 <getc@plt+0x2a08>
   13430:	ldr	r0, [fp, #-8]
   13434:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   13438:	add	r0, r0, r1, lsl #2
   1343c:	ldr	r0, [r0]
   13440:	ldrb	r0, [r0]
   13444:	cmp	r0, #45	; 0x2d
   13448:	bne	13548 <getc@plt+0x29d0>
   1344c:	ldr	r0, [fp, #-8]
   13450:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   13454:	add	r0, r0, r1, lsl #2
   13458:	ldr	r0, [r0]
   1345c:	ldrb	r0, [r0, #1]
   13460:	cmp	r0, #0
   13464:	beq	13548 <getc@plt+0x29d0>
   13468:	ldr	r0, [pc, #296]	; 13598 <getc@plt+0x2a20>
   1346c:	add	r0, pc, r0
   13470:	ldr	r1, [fp, #-8]
   13474:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   13478:	ldr	r2, [r1, r2, lsl #2]!
   1347c:	ldr	r1, [r1]
   13480:	str	r0, [sp, #24]
   13484:	mov	r0, r1
   13488:	str	r2, [sp, #20]
   1348c:	bl	10b00 <strlen@plt>
   13490:	ldr	r1, [sp, #24]
   13494:	str	r0, [sp, #16]
   13498:	mov	r0, r1
   1349c:	ldr	r1, [sp, #20]
   134a0:	ldr	r2, [sp, #16]
   134a4:	bl	10b60 <strncmp@plt>
   134a8:	cmp	r0, #0
   134ac:	bne	134b8 <getc@plt+0x2940>
   134b0:	ldr	r0, [fp, #-12]
   134b4:	bl	137cc <error@@Base+0x1d4>
   134b8:	ldr	r0, [fp, #-8]
   134bc:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   134c0:	add	r0, r0, r1, lsl #2
   134c4:	ldr	r0, [r0]
   134c8:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   134cc:	add	r1, r1, #1
   134d0:	ldr	r2, [fp, #-4]
   134d4:	ldr	r2, [r2]
   134d8:	cmp	r1, r2
   134dc:	str	r0, [sp, #12]
   134e0:	bge	13500 <getc@plt+0x2988>
   134e4:	ldr	r0, [fp, #-8]
   134e8:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   134ec:	add	r1, r1, #1
   134f0:	add	r0, r0, r1, lsl #2
   134f4:	ldr	r0, [r0]
   134f8:	str	r0, [sp, #8]
   134fc:	b	1350c <getc@plt+0x2994>
   13500:	movw	r0, #0
   13504:	str	r0, [sp, #8]
   13508:	b	1350c <getc@plt+0x2994>
   1350c:	ldr	r0, [sp, #8]
   13510:	ldr	r2, [fp, #-16]
   13514:	ldr	r1, [sp, #12]
   13518:	str	r0, [sp, #4]
   1351c:	mov	r0, r1
   13520:	ldr	r1, [sp, #4]
   13524:	bl	13854 <error@@Base+0x25c>
   13528:	sxtb	r0, r0
   1352c:	cmp	r0, #0
   13530:	beq	13544 <getc@plt+0x29cc>
   13534:	ldrh	r0, [fp, #-18]	; 0xffffffee
   13538:	movw	r1, #1
   1353c:	add	r0, r0, r1
   13540:	strh	r0, [fp, #-18]	; 0xffffffee
   13544:	b	13568 <getc@plt+0x29f0>
   13548:	ldr	r0, [fp, #-8]
   1354c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   13550:	ldr	r1, [r0, r1, lsl #2]
   13554:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   13558:	add	r3, r2, #1
   1355c:	strh	r3, [fp, #-20]	; 0xffffffec
   13560:	add	r0, r0, r2, lsl #2
   13564:	str	r1, [r0]
   13568:	b	1356c <getc@plt+0x29f4>
   1356c:	ldrh	r0, [fp, #-18]	; 0xffffffee
   13570:	movw	r1, #1
   13574:	add	r0, r0, r1
   13578:	strh	r0, [fp, #-18]	; 0xffffffee
   1357c:	b	1341c <getc@plt+0x28a4>
   13580:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   13584:	ldr	r1, [fp, #-4]
   13588:	str	r0, [r1]
   1358c:	mov	sp, fp
   13590:	pop	{fp, pc}
   13594:	andeq	r2, r1, r4, lsl #25
   13598:	andeq	r2, r0, r1, asr #32
   1359c:	push	{fp, lr}
   135a0:	mov	fp, sp
   135a4:	movw	r0, #0
   135a8:	bl	135ac <getc@plt+0x2a34>
   135ac:	push	{fp, lr}
   135b0:	mov	fp, sp
   135b4:	sub	sp, sp, #8
   135b8:	ldr	r1, [pc, #48]	; 135f0 <getc@plt+0x2a78>
   135bc:	ldr	r1, [pc, r1]
   135c0:	str	r0, [sp, #4]
   135c4:	ldr	r0, [r1]
   135c8:	movw	r1, #0
   135cc:	cmp	r0, r1
   135d0:	beq	135e4 <getc@plt+0x2a6c>
   135d4:	ldr	r0, [pc, #24]	; 135f4 <getc@plt+0x2a7c>
   135d8:	ldr	r0, [pc, r0]
   135dc:	ldr	r0, [r0]
   135e0:	blx	r0
   135e4:	bl	13ac8 <error@@Base+0x4d0>
   135e8:	ldr	r0, [sp, #4]
   135ec:	bl	10ae8 <exit@plt>
   135f0:	andeq	r2, r1, r4, lsl fp
   135f4:	strdeq	r2, [r1], -r8

000135f8 <error@@Base>:
   135f8:	push	{fp, lr}
   135fc:	mov	fp, sp
   13600:	sub	sp, sp, #8
   13604:	ldr	r1, [pc, #64]	; 1364c <error@@Base+0x54>
   13608:	add	r1, pc, r1
   1360c:	ldr	r2, [pc, #60]	; 13650 <error@@Base+0x58>
   13610:	ldr	r2, [pc, r2]
   13614:	ldr	r3, [pc, #56]	; 13654 <error@@Base+0x5c>
   13618:	ldr	r3, [pc, r3]
   1361c:	str	r0, [sp, #4]
   13620:	ldr	r0, [r3]
   13624:	ldr	r2, [r2]
   13628:	ldr	r3, [sp, #4]
   1362c:	bl	10b0c <fprintf@plt>
   13630:	ldr	r1, [pc, #16]	; 13648 <error@@Base+0x50>
   13634:	ldr	r1, [pc, r1]
   13638:	ldr	r1, [r1]
   1363c:	str	r0, [sp]
   13640:	mov	r0, r1
   13644:	bl	135ac <getc@plt+0x2a34>
   13648:	andeq	r2, r1, r4, asr #21
   1364c:	andeq	r1, r0, r3, ror lr
   13650:			; <UNDEFINED> instruction: 0x00012ab4
   13654:	muleq	r1, r0, sl
   13658:	push	{fp, lr}
   1365c:	mov	fp, sp
   13660:	sub	sp, sp, #24
   13664:	ldr	r2, [pc, #88]	; 136c4 <error@@Base+0xcc>
   13668:	add	r2, pc, r2
   1366c:	ldr	r3, [pc, #84]	; 136c8 <error@@Base+0xd0>
   13670:	ldr	r3, [pc, r3]
   13674:	ldr	ip, [pc, #80]	; 136cc <error@@Base+0xd4>
   13678:	ldr	ip, [pc, ip]
   1367c:	str	r0, [fp, #-4]
   13680:	str	r1, [fp, #-8]
   13684:	ldr	r0, [ip]
   13688:	ldr	r1, [r3]
   1368c:	ldr	r3, [fp, #-4]
   13690:	ldr	ip, [fp, #-8]
   13694:	str	r1, [sp, #12]
   13698:	mov	r1, r2
   1369c:	ldr	r2, [sp, #12]
   136a0:	str	ip, [sp]
   136a4:	bl	10b0c <fprintf@plt>
   136a8:	ldr	r1, [pc, #16]	; 136c0 <error@@Base+0xc8>
   136ac:	ldr	r1, [pc, r1]
   136b0:	ldr	r1, [r1]
   136b4:	str	r0, [sp, #8]
   136b8:	mov	r0, r1
   136bc:	bl	135ac <getc@plt+0x2a34>
   136c0:	andeq	r2, r1, ip, asr #20
   136c4:	andeq	r1, r0, fp, lsl lr
   136c8:	andeq	r2, r1, r4, asr sl
   136cc:	andeq	r2, r1, r0, lsr sl
   136d0:	push	{fp, lr}
   136d4:	mov	fp, sp
   136d8:	sub	sp, sp, #16
   136dc:	ldr	r2, [pc, #68]	; 13728 <error@@Base+0x130>
   136e0:	add	r2, pc, r2
   136e4:	ldr	r3, [pc, #64]	; 1372c <error@@Base+0x134>
   136e8:	ldr	r3, [pc, r3]
   136ec:	ldr	ip, [pc, #60]	; 13730 <error@@Base+0x138>
   136f0:	ldr	ip, [pc, ip]
   136f4:	str	r0, [fp, #-4]
   136f8:	str	r1, [sp, #8]
   136fc:	ldr	r0, [ip]
   13700:	ldr	r1, [r3]
   13704:	ldr	r3, [fp, #-4]
   13708:	ldr	ip, [sp, #8]
   1370c:	str	r1, [sp, #4]
   13710:	mov	r1, r2
   13714:	ldr	r2, [sp, #4]
   13718:	str	ip, [sp]
   1371c:	bl	10b0c <fprintf@plt>
   13720:	mov	sp, fp
   13724:	pop	{fp, pc}
   13728:	andeq	r1, r0, r3, lsr #27
   1372c:	ldrdeq	r2, [r1], -ip
   13730:			; <UNDEFINED> instruction: 0x000129b8
   13734:	push	{fp, lr}
   13738:	mov	fp, sp
   1373c:	sub	sp, sp, #8
   13740:	ldr	r0, [pc, #44]	; 13774 <error@@Base+0x17c>
   13744:	add	r1, pc, r0
   13748:	movw	r0, #2
   1374c:	bl	10ad0 <__sysv_signal@plt>
   13750:	ldr	r1, [pc, #24]	; 13770 <error@@Base+0x178>
   13754:	add	r1, pc, r1
   13758:	movw	r2, #15
   1375c:	str	r0, [sp, #4]
   13760:	mov	r0, r2
   13764:	bl	10ad0 <__sysv_signal@plt>
   13768:	mov	sp, fp
   1376c:	pop	{fp, pc}
   13770:	andeq	r0, r0, ip, lsl r0
   13774:	andeq	r0, r0, ip, lsr #32
   13778:	push	{fp, lr}
   1377c:	mov	fp, sp
   13780:	sub	sp, sp, #8
   13784:	ldr	r1, [pc, #52]	; 137c0 <error@@Base+0x1c8>
   13788:	add	r1, pc, r1
   1378c:	str	r0, [sp, #4]
   13790:	ldrsb	r0, [r1]
   13794:	cmp	r0, #0
   13798:	beq	137a4 <error@@Base+0x1ac>
   1379c:	mov	sp, fp
   137a0:	pop	{fp, pc}
   137a4:	ldr	r0, [pc, #24]	; 137c4 <error@@Base+0x1cc>
   137a8:	add	r0, pc, r0
   137ac:	ldr	r1, [pc, #20]	; 137c8 <error@@Base+0x1d0>
   137b0:	add	r1, pc, r1
   137b4:	movw	r2, #1
   137b8:	strb	r2, [r1]
   137bc:	bl	135f8 <error@@Base>
   137c0:	andseq	r3, r2, lr, asr #4
   137c4:	strdeq	r1, [r0], -r6
   137c8:	andseq	r3, r2, r6, lsr #4
   137cc:	push	{fp, lr}
   137d0:	mov	fp, sp
   137d4:	sub	sp, sp, #8
   137d8:	ldr	r1, [pc, #96]	; 13840 <error@@Base+0x248>
   137dc:	ldr	r1, [pc, r1]
   137e0:	str	r0, [sp, #4]
   137e4:	ldr	r0, [r1]
   137e8:	movw	r1, #0
   137ec:	cmp	r0, r1
   137f0:	beq	13808 <error@@Base+0x210>
   137f4:	ldr	r0, [pc, #84]	; 13850 <error@@Base+0x258>
   137f8:	ldr	r0, [pc, r0]
   137fc:	ldr	r0, [r0]
   13800:	blx	r0
   13804:	b	1383c <error@@Base+0x244>
   13808:	ldr	r0, [pc, #52]	; 13844 <error@@Base+0x24c>
   1380c:	add	r1, pc, r0
   13810:	ldr	r0, [pc, #48]	; 13848 <error@@Base+0x250>
   13814:	ldr	r0, [pc, r0]
   13818:	ldr	r2, [pc, #44]	; 1384c <error@@Base+0x254>
   1381c:	ldr	r2, [pc, r2]
   13820:	ldr	r2, [r2]
   13824:	ldr	r0, [r0]
   13828:	ldr	r3, [sp, #4]
   1382c:	str	r0, [sp]
   13830:	mov	r0, r2
   13834:	ldr	r2, [sp]
   13838:	bl	10b0c <fprintf@plt>
   1383c:	bl	1359c <getc@plt+0x2a24>
   13840:			; <UNDEFINED> instruction: 0x000128b8
   13844:	andeq	r1, r0, r7, lsr #25
   13848:			; <UNDEFINED> instruction: 0x000128b0
   1384c:	andeq	r2, r1, ip, lsl #17
   13850:	muleq	r1, ip, r8
   13854:	push	{fp, lr}
   13858:	mov	fp, sp
   1385c:	sub	sp, sp, #32
   13860:	str	r0, [fp, #-8]
   13864:	str	r1, [fp, #-12]
   13868:	str	r2, [sp, #16]
   1386c:	ldr	r0, [sp, #16]
   13870:	movw	r1, #0
   13874:	cmp	r0, r1
   13878:	bne	13880 <error@@Base+0x288>
   1387c:	b	13a94 <error@@Base+0x49c>
   13880:	movw	r0, #0
   13884:	strh	r0, [sp, #14]
   13888:	ldr	r0, [sp, #16]
   1388c:	ldrsh	r1, [sp, #14]
   13890:	movw	r2, #12
   13894:	mul	r1, r1, r2
   13898:	add	r0, r0, r1
   1389c:	ldrb	r0, [r0]
   138a0:	cmp	r0, #0
   138a4:	movw	r0, #0
   138a8:	str	r0, [sp, #8]
   138ac:	beq	138e0 <error@@Base+0x2e8>
   138b0:	ldr	r0, [fp, #-8]
   138b4:	ldrb	r0, [r0, #1]
   138b8:	ldr	r1, [sp, #16]
   138bc:	ldrsh	r2, [sp, #14]
   138c0:	movw	r3, #12
   138c4:	mul	r2, r2, r3
   138c8:	add	r1, r1, r2
   138cc:	ldrb	r1, [r1]
   138d0:	cmp	r0, r1
   138d4:	movw	r0, #0
   138d8:	movne	r0, #1
   138dc:	str	r0, [sp, #8]
   138e0:	ldr	r0, [sp, #8]
   138e4:	tst	r0, #1
   138e8:	beq	13904 <error@@Base+0x30c>
   138ec:	b	138f0 <error@@Base+0x2f8>
   138f0:	ldrh	r0, [sp, #14]
   138f4:	movw	r1, #1
   138f8:	add	r0, r0, r1
   138fc:	strh	r0, [sp, #14]
   13900:	b	13888 <error@@Base+0x290>
   13904:	ldr	r0, [sp, #16]
   13908:	ldrsh	r1, [sp, #14]
   1390c:	movw	r2, #12
   13910:	mul	r1, r1, r2
   13914:	add	r0, r0, r1
   13918:	ldrsb	r0, [r0]
   1391c:	cmp	r0, #0
   13920:	bne	13928 <error@@Base+0x330>
   13924:	b	13a94 <error@@Base+0x49c>
   13928:	ldr	r0, [sp, #16]
   1392c:	ldrsh	r1, [sp, #14]
   13930:	movw	r2, #12
   13934:	mul	r1, r1, r2
   13938:	add	r0, r0, r1
   1393c:	ldr	r0, [r0, #4]
   13940:	movw	r1, #0
   13944:	cmp	r0, r1
   13948:	beq	13a08 <error@@Base+0x410>
   1394c:	ldr	r0, [fp, #-8]
   13950:	ldrb	r0, [r0, #2]
   13954:	cmp	r0, #0
   13958:	bne	1396c <error@@Base+0x374>
   1395c:	ldr	r0, [fp, #-12]
   13960:	movw	r1, #0
   13964:	cmp	r0, r1
   13968:	beq	13a08 <error@@Base+0x410>
   1396c:	ldr	r0, [sp, #16]
   13970:	ldrsh	r1, [sp, #14]
   13974:	movw	r2, #12
   13978:	mul	r1, r1, r2
   1397c:	add	r0, r0, r1
   13980:	ldr	r0, [r0, #4]
   13984:	ldr	r0, [r0]
   13988:	movw	r1, #0
   1398c:	cmp	r0, r1
   13990:	beq	13998 <error@@Base+0x3a0>
   13994:	b	13aa4 <error@@Base+0x4ac>
   13998:	ldr	r0, [fp, #-8]
   1399c:	ldrb	r0, [r0, #2]
   139a0:	cmp	r0, #0
   139a4:	beq	139b8 <error@@Base+0x3c0>
   139a8:	ldr	r0, [fp, #-8]
   139ac:	add	r0, r0, #2
   139b0:	str	r0, [sp, #4]
   139b4:	b	139c0 <error@@Base+0x3c8>
   139b8:	ldr	r0, [fp, #-12]
   139bc:	str	r0, [sp, #4]
   139c0:	ldr	r0, [sp, #4]
   139c4:	ldr	r1, [sp, #16]
   139c8:	ldrsh	r2, [sp, #14]
   139cc:	movw	r3, #12
   139d0:	mul	r2, r2, r3
   139d4:	add	r1, r1, r2
   139d8:	ldr	r1, [r1, #4]
   139dc:	str	r0, [r1]
   139e0:	ldr	r0, [fp, #-8]
   139e4:	ldrb	r0, [r0, #2]
   139e8:	cmp	r0, #0
   139ec:	movw	r0, #0
   139f0:	movne	r0, #1
   139f4:	tst	r0, #1
   139f8:	movw	r0, #0
   139fc:	moveq	r0, #1
   13a00:	strb	r0, [fp, #-1]
   13a04:	b	13ab4 <error@@Base+0x4bc>
   13a08:	ldr	r0, [sp, #16]
   13a0c:	ldrsh	r1, [sp, #14]
   13a10:	movw	r2, #12
   13a14:	mul	r1, r1, r2
   13a18:	add	r0, r0, r1
   13a1c:	ldr	r0, [r0, #8]
   13a20:	movw	r1, #0
   13a24:	cmp	r0, r1
   13a28:	beq	13a90 <error@@Base+0x498>
   13a2c:	ldr	r0, [fp, #-8]
   13a30:	ldrsb	r0, [r0, #2]
   13a34:	cmp	r0, #0
   13a38:	bne	13a90 <error@@Base+0x498>
   13a3c:	ldr	r0, [sp, #16]
   13a40:	ldrsh	r1, [sp, #14]
   13a44:	movw	r2, #12
   13a48:	mul	r1, r1, r2
   13a4c:	add	r0, r0, r1
   13a50:	ldr	r0, [r0, #8]
   13a54:	ldrsb	r0, [r0]
   13a58:	cmp	r0, #0
   13a5c:	beq	13a64 <error@@Base+0x46c>
   13a60:	b	13aa4 <error@@Base+0x4ac>
   13a64:	ldr	r0, [sp, #16]
   13a68:	ldrsh	r1, [sp, #14]
   13a6c:	movw	r2, #12
   13a70:	mul	r1, r1, r2
   13a74:	add	r0, r0, r1
   13a78:	ldr	r0, [r0, #8]
   13a7c:	movw	r1, #1
   13a80:	strb	r1, [r0]
   13a84:	movw	r0, #0
   13a88:	strb	r0, [fp, #-1]
   13a8c:	b	13ab4 <error@@Base+0x4bc>
   13a90:	b	13a94 <error@@Base+0x49c>
   13a94:	ldr	r0, [pc, #36]	; 13ac0 <error@@Base+0x4c8>
   13a98:	add	r0, pc, r0
   13a9c:	ldr	r1, [fp, #-8]
   13aa0:	bl	13658 <error@@Base+0x60>
   13aa4:	ldr	r0, [pc, #24]	; 13ac4 <error@@Base+0x4cc>
   13aa8:	add	r0, pc, r0
   13aac:	ldr	r1, [fp, #-8]
   13ab0:	bl	13658 <error@@Base+0x60>
   13ab4:	ldrb	r0, [fp, #-1]
   13ab8:	mov	sp, fp
   13abc:	pop	{fp, pc}
   13ac0:	andeq	r1, r0, sl, lsr #20
   13ac4:	andeq	r1, r0, r9, lsr #20
   13ac8:	push	{fp, lr}
   13acc:	mov	fp, sp
   13ad0:	sub	sp, sp, #16
   13ad4:	movw	r0, #1
   13ad8:	strh	r0, [fp, #-2]
   13adc:	ldr	r0, [pc, #88]	; 13b3c <error@@Base+0x544>
   13ae0:	add	r0, pc, r0
   13ae4:	ldrsh	r1, [fp, #-2]
   13ae8:	ldrsh	r0, [r0]
   13aec:	cmp	r1, r0
   13af0:	bgt	13b34 <error@@Base+0x53c>
   13af4:	ldrsh	r0, [fp, #-2]
   13af8:	bl	13244 <getc@plt+0x26cc>
   13afc:	ldr	r1, [pc, #60]	; 13b40 <error@@Base+0x548>
   13b00:	ldr	r1, [pc, r1]
   13b04:	str	r0, [sp, #8]
   13b08:	ldr	r0, [sp, #8]
   13b0c:	blx	r1
   13b10:	ldr	r1, [sp, #8]
   13b14:	str	r0, [sp, #4]
   13b18:	mov	r0, r1
   13b1c:	bl	10a4c <free@plt>
   13b20:	ldrh	r0, [fp, #-2]
   13b24:	movw	r1, #1
   13b28:	add	r0, r0, r1
   13b2c:	strh	r0, [fp, #-2]
   13b30:	b	13adc <error@@Base+0x4e4>
   13b34:	mov	sp, fp
   13b38:	pop	{fp, pc}
   13b3c:			; <UNDEFINED> instruction: 0x00122ef4
   13b40:	muleq	r1, ip, r5
   13b44:	push	{fp, lr}
   13b48:	mov	fp, sp
   13b4c:	sub	sp, sp, #24
   13b50:	ldr	r3, [pc, #96]	; 13bb8 <error@@Base+0x5c0>
   13b54:	ldr	r3, [pc, r3]
   13b58:	str	r0, [fp, #-4]
   13b5c:	strb	r1, [fp, #-5]
   13b60:	str	r2, [sp, #12]
   13b64:	movw	r0, #1
   13b68:	movw	r1, #16
   13b6c:	blx	r3
   13b70:	ldr	r1, [pc, #60]	; 13bb4 <error@@Base+0x5bc>
   13b74:	ldr	r1, [pc, r1]
   13b78:	str	r0, [sp, #8]
   13b7c:	ldrb	r0, [fp, #-5]
   13b80:	ldr	r2, [sp, #8]
   13b84:	strb	r0, [r2, #8]
   13b88:	ldr	r0, [sp, #12]
   13b8c:	ldr	r2, [sp, #8]
   13b90:	str	r0, [r2, #12]
   13b94:	ldr	r0, [fp, #-4]
   13b98:	ldr	r2, [sp, #8]
   13b9c:	str	r1, [sp, #4]
   13ba0:	mov	r1, r2
   13ba4:	ldr	r2, [sp, #4]
   13ba8:	blx	r2
   13bac:	mov	sp, fp
   13bb0:	pop	{fp, pc}
   13bb4:	andeq	r2, r1, r0, asr #10
   13bb8:	andeq	r2, r1, r8, lsr #11
   13bbc:	push	{fp, lr}
   13bc0:	mov	fp, sp
   13bc4:	sub	sp, sp, #64	; 0x40
   13bc8:	str	r0, [fp, #-4]
   13bcc:	str	r1, [fp, #-8]
   13bd0:	str	r2, [fp, #-12]
   13bd4:	ldr	r0, [fp, #-12]
   13bd8:	ldrb	r0, [r0]
   13bdc:	cmp	r0, #0
   13be0:	beq	13c10 <error@@Base+0x618>
   13be4:	ldr	r0, [fp, #-8]
   13be8:	movw	r1, #0
   13bec:	cmp	r0, r1
   13bf0:	bne	13c10 <error@@Base+0x618>
   13bf4:	ldr	r0, [pc, #404]	; 13d90 <error@@Base+0x798>
   13bf8:	add	r0, pc, r0
   13bfc:	ldr	r1, [pc, #400]	; 13d94 <error@@Base+0x79c>
   13c00:	add	r1, pc, r1
   13c04:	ldr	r2, [pc, #396]	; 13d98 <error@@Base+0x7a0>
   13c08:	ldr	r2, [pc, r2]
   13c0c:	blx	r2
   13c10:	ldr	r0, [pc, #388]	; 13d9c <error@@Base+0x7a4>
   13c14:	add	r1, pc, r0
   13c18:	ldr	r0, [pc, #384]	; 13da0 <error@@Base+0x7a8>
   13c1c:	ldr	r0, [pc, r0]
   13c20:	ldr	r2, [fp, #-4]
   13c24:	ldr	r2, [r2, #4]
   13c28:	str	r2, [fp, #-16]
   13c2c:	ldr	r2, [fp, #-8]
   13c30:	str	r0, [fp, #-24]	; 0xffffffe8
   13c34:	mov	r0, r2
   13c38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c3c:	blx	r2
   13c40:	str	r0, [fp, #-20]	; 0xffffffec
   13c44:	ldr	r0, [fp, #-12]
   13c48:	ldrsb	r0, [r0]
   13c4c:	cmp	r0, #0
   13c50:	beq	13c64 <error@@Base+0x66c>
   13c54:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c58:	bl	13da8 <error@@Base+0x7b0>
   13c5c:	ldr	r1, [fp, #-12]
   13c60:	strb	r0, [r1, #11]
   13c64:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c68:	ldr	r1, [fp, #-4]
   13c6c:	ldr	r2, [fp, #-12]
   13c70:	ldrb	r2, [r2, #1]
   13c74:	ldr	r3, [fp, #-12]
   13c78:	ldr	r3, [r3, #4]
   13c7c:	cmp	r3, #0
   13c80:	str	r0, [fp, #-28]	; 0xffffffe4
   13c84:	str	r1, [sp, #32]
   13c88:	str	r2, [sp, #28]
   13c8c:	beq	13ca0 <error@@Base+0x6a8>
   13c90:	ldr	r0, [fp, #-12]
   13c94:	ldr	r0, [r0, #4]
   13c98:	str	r0, [sp, #24]
   13c9c:	b	13cac <error@@Base+0x6b4>
   13ca0:	movw	r0, #94	; 0x5e
   13ca4:	str	r0, [sp, #24]
   13ca8:	b	13cac <error@@Base+0x6b4>
   13cac:	ldr	r0, [sp, #24]
   13cb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cb4:	str	r0, [sp, #20]
   13cb8:	mov	r0, r1
   13cbc:	ldr	r1, [sp, #32]
   13cc0:	ldr	r2, [sp, #28]
   13cc4:	ldr	r3, [sp, #20]
   13cc8:	bl	13ea0 <error@@Base+0x8a8>
   13ccc:	ldr	r0, [pc, #208]	; 13da4 <error@@Base+0x7ac>
   13cd0:	ldr	r0, [pc, r0]
   13cd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13cd8:	str	r0, [sp, #16]
   13cdc:	mov	r0, r1
   13ce0:	ldr	r1, [sp, #16]
   13ce4:	blx	r1
   13ce8:	ldr	r0, [fp, #-12]
   13cec:	ldrsb	r0, [r0, #9]
   13cf0:	cmp	r0, #0
   13cf4:	beq	13d44 <error@@Base+0x74c>
   13cf8:	ldr	r0, [fp, #-4]
   13cfc:	ldr	r1, [fp, #-16]
   13d00:	movw	r2, #0
   13d04:	cmp	r1, r2
   13d08:	str	r0, [sp, #12]
   13d0c:	beq	13d20 <error@@Base+0x728>
   13d10:	ldr	r0, [fp, #-16]
   13d14:	ldr	r0, [r0, #4]
   13d18:	str	r0, [sp, #8]
   13d1c:	b	13d2c <error@@Base+0x734>
   13d20:	ldr	r0, [fp, #-4]
   13d24:	ldr	r0, [r0]
   13d28:	str	r0, [sp, #8]
   13d2c:	ldr	r0, [sp, #8]
   13d30:	ldr	r1, [sp, #12]
   13d34:	str	r0, [sp, #4]
   13d38:	mov	r0, r1
   13d3c:	ldr	r1, [sp, #4]
   13d40:	bl	1401c <error@@Base+0xa24>
   13d44:	ldr	r0, [fp, #-12]
   13d48:	ldrsb	r0, [r0, #10]
   13d4c:	cmp	r0, #0
   13d50:	beq	13d88 <error@@Base+0x790>
   13d54:	ldr	r0, [fp, #-16]
   13d58:	movw	r1, #0
   13d5c:	cmp	r0, r1
   13d60:	beq	13d74 <error@@Base+0x77c>
   13d64:	ldr	r0, [fp, #-16]
   13d68:	ldr	r0, [r0, #4]
   13d6c:	str	r0, [sp]
   13d70:	b	13d80 <error@@Base+0x788>
   13d74:	ldr	r0, [fp, #-4]
   13d78:	ldr	r0, [r0]
   13d7c:	str	r0, [sp]
   13d80:	ldr	r0, [sp]
   13d84:	bl	141c4 <error@@Base+0xbcc>
   13d88:	mov	sp, fp
   13d8c:	pop	{fp, pc}
   13d90:	andeq	r1, r0, sl, ror #17
   13d94:	strdeq	r1, [r0], -r2
   13d98:	strdeq	r2, [r1], -r8
   13d9c:	muleq	r0, r8, r9
   13da0:	andeq	r2, r1, ip, ror r4
   13da4:	andeq	r2, r1, ip, lsr #7
   13da8:	push	{fp, lr}
   13dac:	mov	fp, sp
   13db0:	sub	sp, sp, #120	; 0x78
   13db4:	add	r1, sp, #12
   13db8:	str	r0, [fp, #-8]
   13dbc:	movw	r0, #0
   13dc0:	strh	r0, [sp, #10]
   13dc4:	ldr	r2, [fp, #-8]
   13dc8:	mov	r0, r1
   13dcc:	movw	r1, #99	; 0x63
   13dd0:	bl	10a64 <fgets@plt>
   13dd4:	movw	r1, #0
   13dd8:	cmp	r0, r1
   13ddc:	beq	13e7c <error@@Base+0x884>
   13de0:	ldr	r0, [pc, #176]	; 13e98 <error@@Base+0x8a0>
   13de4:	add	r1, pc, r0
   13de8:	add	r0, sp, #12
   13dec:	movw	r2, #51	; 0x33
   13df0:	bl	10b60 <strncmp@plt>
   13df4:	cmp	r0, #0
   13df8:	bne	13e7c <error@@Base+0x884>
   13dfc:	b	13e00 <error@@Base+0x808>
   13e00:	ldrsh	r0, [sp, #10]
   13e04:	cmp	r0, #2
   13e08:	movw	r0, #0
   13e0c:	str	r0, [sp, #4]
   13e10:	bge	13e38 <error@@Base+0x840>
   13e14:	add	r0, sp, #12
   13e18:	ldr	r2, [fp, #-8]
   13e1c:	movw	r1, #99	; 0x63
   13e20:	bl	10a64 <fgets@plt>
   13e24:	movw	r1, #0
   13e28:	cmp	r0, r1
   13e2c:	movw	r0, #0
   13e30:	movne	r0, #1
   13e34:	str	r0, [sp, #4]
   13e38:	ldr	r0, [sp, #4]
   13e3c:	tst	r0, #1
   13e40:	beq	13e70 <error@@Base+0x878>
   13e44:	add	r0, sp, #12
   13e48:	ldr	r1, [pc, #76]	; 13e9c <error@@Base+0x8a4>
   13e4c:	add	r1, pc, r1
   13e50:	bl	10a28 <strcmp@plt>
   13e54:	cmp	r0, #0
   13e58:	bne	13e6c <error@@Base+0x874>
   13e5c:	ldrh	r0, [sp, #10]
   13e60:	movw	r1, #1
   13e64:	add	r0, r0, r1
   13e68:	strh	r0, [sp, #10]
   13e6c:	b	13e00 <error@@Base+0x808>
   13e70:	movw	r0, #1
   13e74:	strb	r0, [fp, #-1]
   13e78:	b	13e8c <error@@Base+0x894>
   13e7c:	ldr	r0, [fp, #-8]
   13e80:	bl	10a88 <rewind@plt>
   13e84:	movw	r0, #0
   13e88:	strb	r0, [fp, #-1]
   13e8c:	ldrb	r0, [fp, #-1]
   13e90:	mov	sp, fp
   13e94:	pop	{fp, pc}
   13e98:	andeq	r1, r0, r2, asr #14
   13e9c:	andeq	r1, r0, r2, lsl r7
   13ea0:	push	{fp, lr}
   13ea4:	mov	fp, sp
   13ea8:	sub	sp, sp, #48	; 0x30
   13eac:	str	r0, [fp, #-4]
   13eb0:	str	r1, [fp, #-8]
   13eb4:	strb	r2, [fp, #-9]
   13eb8:	str	r3, [fp, #-16]
   13ebc:	movw	r0, #0
   13ec0:	strb	r0, [fp, #-17]	; 0xffffffef
   13ec4:	ldr	r0, [fp, #-4]
   13ec8:	bl	10b78 <getc@plt>
   13ecc:	str	r0, [sp, #20]
   13ed0:	ldr	r0, [sp, #20]
   13ed4:	cmn	r0, #1
   13ed8:	beq	13ffc <error@@Base+0xa04>
   13edc:	ldr	r0, [pc, #288]	; 14004 <error@@Base+0xa0c>
   13ee0:	ldr	r0, [pc, r0]
   13ee4:	ldr	r1, [sp, #20]
   13ee8:	add	r0, r0, r1
   13eec:	ldrsb	r0, [r0]
   13ef0:	str	r0, [sp, #8]
   13ef4:	ldr	r0, [sp, #8]
   13ef8:	cmp	r0, #1
   13efc:	bge	13f14 <error@@Base+0x91c>
   13f00:	ldr	r0, [pc, #268]	; 14014 <error@@Base+0xa1c>
   13f04:	add	r0, pc, r0
   13f08:	ldr	r1, [pc, #264]	; 14018 <error@@Base+0xa20>
   13f0c:	ldr	r1, [pc, r1]
   13f10:	blx	r1
   13f14:	ldr	r0, [sp, #20]
   13f18:	strb	r0, [fp, #-21]	; 0xffffffeb
   13f1c:	ldr	r0, [sp, #8]
   13f20:	cmp	r0, #1
   13f24:	ble	13f74 <error@@Base+0x97c>
   13f28:	sub	r0, fp, #21
   13f2c:	add	r0, r0, #1
   13f30:	ldr	r1, [sp, #8]
   13f34:	sub	r2, r1, #1
   13f38:	ldr	r3, [fp, #-4]
   13f3c:	movw	r1, #1
   13f40:	bl	10aac <fread@plt>
   13f44:	str	r0, [sp, #16]
   13f48:	ldr	r0, [sp, #16]
   13f4c:	ldr	r1, [sp, #8]
   13f50:	sub	r1, r1, #1
   13f54:	cmp	r0, r1
   13f58:	beq	13f70 <error@@Base+0x978>
   13f5c:	ldr	r0, [pc, #168]	; 1400c <error@@Base+0xa14>
   13f60:	add	r0, pc, r0
   13f64:	ldr	r1, [pc, #164]	; 14010 <error@@Base+0xa18>
   13f68:	ldr	r1, [pc, r1]
   13f6c:	blx	r1
   13f70:	b	13f74 <error@@Base+0x97c>
   13f74:	sub	r0, fp, #21
   13f78:	movw	r1, #4
   13f7c:	add	r2, sp, #4
   13f80:	bl	10ab8 <utf8proc_iterate@plt>
   13f84:	str	r0, [sp, #12]
   13f88:	ldr	r0, [sp, #12]
   13f8c:	ldr	r1, [sp, #8]
   13f90:	cmp	r0, r1
   13f94:	beq	13fac <error@@Base+0x9b4>
   13f98:	ldr	r0, [sp, #12]
   13f9c:	bl	10b48 <utf8proc_errmsg@plt>
   13fa0:	ldr	r1, [pc, #96]	; 14008 <error@@Base+0xa10>
   13fa4:	ldr	r1, [pc, r1]
   13fa8:	blx	r1
   13fac:	ldrb	r0, [fp, #-9]
   13fb0:	cmp	r0, #0
   13fb4:	beq	13fd4 <error@@Base+0x9dc>
   13fb8:	ldr	r0, [sp, #4]
   13fbc:	ldr	r1, [fp, #-16]
   13fc0:	cmp	r0, r1
   13fc4:	bne	13fd4 <error@@Base+0x9dc>
   13fc8:	movw	r0, #1
   13fcc:	strb	r0, [fp, #-17]	; 0xffffffef
   13fd0:	b	13fec <error@@Base+0x9f4>
   13fd4:	ldr	r0, [fp, #-8]
   13fd8:	ldrb	r1, [fp, #-17]	; 0xffffffef
   13fdc:	ldr	r2, [sp, #4]
   13fe0:	bl	13b44 <error@@Base+0x54c>
   13fe4:	movw	r0, #0
   13fe8:	strb	r0, [fp, #-17]	; 0xffffffef
   13fec:	ldr	r0, [fp, #-4]
   13ff0:	bl	10b78 <getc@plt>
   13ff4:	str	r0, [sp, #20]
   13ff8:	b	13ed0 <error@@Base+0x8d8>
   13ffc:	mov	sp, fp
   14000:	pop	{fp, pc}
   14004:	strdeq	r2, [r1], -r4
   14008:	andeq	r2, r1, r8, ror #1
   1400c:	andeq	r1, r0, lr, asr #12
   14010:	andeq	r2, r1, r4, lsr #2
   14014:	muleq	r0, r2, r6
   14018:	andeq	r2, r1, r0, lsl #3
   1401c:	push	{fp, lr}
   14020:	mov	fp, sp
   14024:	sub	sp, sp, #24
   14028:	str	r0, [fp, #-4]
   1402c:	str	r1, [fp, #-8]
   14030:	movw	r0, #0
   14034:	strb	r0, [fp, #-9]
   14038:	ldr	r0, [fp, #-8]
   1403c:	str	r0, [sp, #8]
   14040:	ldr	r0, [sp, #8]
   14044:	movw	r1, #0
   14048:	cmp	r0, r1
   1404c:	beq	14088 <error@@Base+0xa90>
   14050:	ldr	r0, [sp, #8]
   14054:	ldr	r0, [r0, #12]
   14058:	bl	146a8 <error@@Base+0x10b0>
   1405c:	sxtb	r0, r0
   14060:	cmp	r0, #0
   14064:	beq	14074 <error@@Base+0xa7c>
   14068:	ldr	r0, [sp, #8]
   1406c:	movw	r1, #32
   14070:	str	r1, [r0, #12]
   14074:	b	14078 <error@@Base+0xa80>
   14078:	ldr	r0, [sp, #8]
   1407c:	ldr	r0, [r0, #4]
   14080:	str	r0, [sp, #8]
   14084:	b	14040 <error@@Base+0xa48>
   14088:	ldr	r0, [fp, #-8]
   1408c:	str	r0, [sp, #8]
   14090:	ldr	r0, [sp, #8]
   14094:	movw	r1, #0
   14098:	cmp	r0, r1
   1409c:	beq	141b8 <error@@Base+0xbc0>
   140a0:	ldr	r0, [sp, #8]
   140a4:	ldr	r0, [r0, #4]
   140a8:	str	r0, [sp, #4]
   140ac:	ldr	r0, [sp, #8]
   140b0:	ldr	r0, [r0, #12]
   140b4:	cmp	r0, #32
   140b8:	bne	140f8 <error@@Base+0xb00>
   140bc:	ldrsb	r0, [fp, #-9]
   140c0:	cmp	r0, #0
   140c4:	beq	14114 <error@@Base+0xb1c>
   140c8:	ldr	r0, [sp, #4]
   140cc:	movw	r1, #0
   140d0:	cmp	r0, r1
   140d4:	beq	14114 <error@@Base+0xb1c>
   140d8:	ldr	r0, [sp, #4]
   140dc:	ldr	r0, [r0, #12]
   140e0:	cmp	r0, #32
   140e4:	beq	14114 <error@@Base+0xb1c>
   140e8:	ldr	r0, [sp, #4]
   140ec:	ldr	r0, [r0, #12]
   140f0:	cmp	r0, #10
   140f4:	beq	14114 <error@@Base+0xb1c>
   140f8:	ldr	r0, [sp, #8]
   140fc:	ldr	r0, [r0, #12]
   14100:	cmp	r0, #10
   14104:	bne	14188 <error@@Base+0xb90>
   14108:	ldrsb	r0, [fp, #-9]
   1410c:	cmp	r0, #0
   14110:	bne	14188 <error@@Base+0xb90>
   14114:	ldrb	r0, [fp, #-9]
   14118:	cmp	r0, #0
   1411c:	beq	14158 <error@@Base+0xb60>
   14120:	ldr	r0, [sp, #4]
   14124:	movw	r1, #0
   14128:	cmp	r0, r1
   1412c:	beq	14158 <error@@Base+0xb60>
   14130:	ldr	r0, [sp, #4]
   14134:	ldr	r0, [r0, #12]
   14138:	cmp	r0, #32
   1413c:	bne	14158 <error@@Base+0xb60>
   14140:	ldr	r0, [sp, #8]
   14144:	ldrb	r0, [r0, #8]
   14148:	ldr	r1, [sp, #4]
   1414c:	ldrb	r2, [r1, #8]
   14150:	orr	r0, r2, r0
   14154:	strb	r0, [r1, #8]
   14158:	ldr	r0, [pc, #96]	; 141c0 <error@@Base+0xbc8>
   1415c:	ldr	r0, [pc, r0]
   14160:	ldr	r1, [fp, #-4]
   14164:	ldr	r2, [sp, #8]
   14168:	str	r0, [sp]
   1416c:	mov	r0, r1
   14170:	mov	r1, r2
   14174:	ldr	r2, [sp]
   14178:	blx	r2
   1417c:	ldr	r0, [sp, #8]
   14180:	bl	10a4c <free@plt>
   14184:	b	141ac <error@@Base+0xbb4>
   14188:	ldr	r0, [sp, #8]
   1418c:	ldr	r0, [r0, #12]
   14190:	cmp	r0, #10
   14194:	movw	r0, #0
   14198:	moveq	r0, #1
   1419c:	tst	r0, #1
   141a0:	movw	r0, #0
   141a4:	moveq	r0, #1
   141a8:	strb	r0, [fp, #-9]
   141ac:	ldr	r0, [sp, #4]
   141b0:	str	r0, [sp, #8]
   141b4:	b	14090 <error@@Base+0xa98>
   141b8:	mov	sp, fp
   141bc:	pop	{fp, pc}
   141c0:	andeq	r1, r1, ip, lsr #31
   141c4:	push	{fp, lr}
   141c8:	mov	fp, sp
   141cc:	sub	sp, sp, #8
   141d0:	str	r0, [sp, #4]
   141d4:	ldr	r0, [sp, #4]
   141d8:	str	r0, [sp]
   141dc:	ldr	r0, [sp]
   141e0:	movw	r1, #0
   141e4:	cmp	r0, r1
   141e8:	beq	14210 <error@@Base+0xc18>
   141ec:	ldr	r0, [sp]
   141f0:	ldr	r0, [r0, #12]
   141f4:	bl	10a94 <utf8proc_tolower@plt>
   141f8:	ldr	r1, [sp]
   141fc:	str	r0, [r1, #12]
   14200:	ldr	r0, [sp]
   14204:	ldr	r0, [r0, #4]
   14208:	str	r0, [sp]
   1420c:	b	141dc <error@@Base+0xbe4>
   14210:	mov	sp, fp
   14214:	pop	{fp, pc}
   14218:	push	{fp, lr}
   1421c:	mov	fp, sp
   14220:	sub	sp, sp, #16
   14224:	str	r0, [fp, #-4]
   14228:	str	r1, [sp, #8]
   1422c:	ldr	r0, [fp, #-4]
   14230:	ldr	r1, [sp, #8]
   14234:	bl	10a70 <utf8proc_encode_char@plt>
   14238:	str	r0, [sp, #4]
   1423c:	ldr	r0, [sp, #4]
   14240:	cmp	r0, #1
   14244:	bge	1425c <error@@Base+0xc64>
   14248:	ldr	r0, [pc, #28]	; 1426c <error@@Base+0xc74>
   1424c:	add	r0, pc, r0
   14250:	ldr	r1, [pc, #24]	; 14270 <error@@Base+0xc78>
   14254:	ldr	r1, [pc, r1]
   14258:	blx	r1
   1425c:	ldr	r0, [sp, #4]
   14260:	sxtb	r0, r0
   14264:	mov	sp, fp
   14268:	pop	{fp, pc}
   1426c:			; <UNDEFINED> instruction: 0x000012b0
   14270:	andeq	r1, r1, r8, lsr lr
   14274:	push	{fp, lr}
   14278:	mov	fp, sp
   1427c:	sub	sp, sp, #24
   14280:	strb	r0, [fp, #-1]
   14284:	str	r1, [fp, #-8]
   14288:	str	r2, [sp, #12]
   1428c:	strb	r3, [sp, #11]
   14290:	movw	r0, #0
   14294:	strh	r0, [sp, #8]
   14298:	ldr	r0, [sp, #12]
   1429c:	str	r0, [sp, #4]
   142a0:	ldrsb	r0, [fp, #-1]
   142a4:	cmp	r0, #0
   142a8:	beq	142c8 <error@@Base+0xcd0>
   142ac:	ldr	r1, [sp, #4]
   142b0:	movw	r0, #94	; 0x5e
   142b4:	bl	14218 <error@@Base+0xc20>
   142b8:	sxtb	r0, r0
   142bc:	ldrsh	r1, [sp, #8]
   142c0:	add	r0, r1, r0
   142c4:	strh	r0, [sp, #8]
   142c8:	ldr	r0, [fp, #-8]
   142cc:	cmp	r0, #10
   142d0:	bne	14314 <error@@Base+0xd1c>
   142d4:	ldr	r0, [pc, #304]	; 1440c <error@@Base+0xe14>
   142d8:	add	r0, pc, r0
   142dc:	ldr	r1, [pc, #300]	; 14410 <error@@Base+0xe18>
   142e0:	add	r1, pc, r1
   142e4:	ldr	r2, [sp, #12]
   142e8:	ldrsh	r3, [sp, #8]
   142ec:	add	r2, r2, r3
   142f0:	ldrb	r3, [sp, #11]
   142f4:	cmp	r3, #0
   142f8:	movw	r3, #0
   142fc:	movne	r3, #1
   14300:	tst	r3, #1
   14304:	movne	r1, r0
   14308:	mov	r0, r2
   1430c:	bl	10b3c <sprintf@plt>
   14310:	b	143fc <error@@Base+0xe04>
   14314:	ldr	r0, [fp, #-8]
   14318:	bl	14414 <error@@Base+0xe1c>
   1431c:	sxtb	r0, r0
   14320:	cmp	r0, #0
   14324:	beq	143ac <error@@Base+0xdb4>
   14328:	ldr	r0, [fp, #-8]
   1432c:	bl	14494 <error@@Base+0xe9c>
   14330:	sxtb	r0, r0
   14334:	cmp	r0, #0
   14338:	beq	14360 <error@@Base+0xd68>
   1433c:	ldr	r0, [sp, #4]
   14340:	ldrsh	r1, [sp, #8]
   14344:	add	r1, r0, r1
   14348:	movw	r0, #9676	; 0x25cc
   1434c:	bl	14218 <error@@Base+0xc20>
   14350:	sxtb	r0, r0
   14354:	ldrsh	r1, [sp, #8]
   14358:	add	r0, r1, r0
   1435c:	strh	r0, [sp, #8]
   14360:	ldr	r0, [fp, #-8]
   14364:	ldr	r1, [sp, #4]
   14368:	ldrsh	r2, [sp, #8]
   1436c:	add	r1, r1, r2
   14370:	bl	14218 <error@@Base+0xc20>
   14374:	sxtb	r0, r0
   14378:	ldrsh	r1, [sp, #8]
   1437c:	add	r0, r1, r0
   14380:	strh	r0, [sp, #8]
   14384:	ldr	r0, [sp, #12]
   14388:	ldrh	r1, [sp, #8]
   1438c:	movw	r2, #1
   14390:	add	r2, r1, r2
   14394:	strh	r2, [sp, #8]
   14398:	sxth	r1, r1
   1439c:	add	r0, r0, r1
   143a0:	movw	r1, #0
   143a4:	strb	r1, [r0]
   143a8:	b	143f8 <error@@Base+0xe00>
   143ac:	ldr	r0, [fp, #-8]
   143b0:	cmp	r0, #256	; 0x100
   143b4:	bcs	143d8 <error@@Base+0xde0>
   143b8:	ldr	r0, [pc, #72]	; 14408 <error@@Base+0xe10>
   143bc:	add	r1, pc, r0
   143c0:	ldr	r0, [sp, #12]
   143c4:	ldrsh	r2, [sp, #8]
   143c8:	add	r0, r0, r2
   143cc:	ldr	r2, [fp, #-8]
   143d0:	bl	10b3c <sprintf@plt>
   143d4:	b	143f4 <error@@Base+0xdfc>
   143d8:	ldr	r0, [pc, #36]	; 14404 <error@@Base+0xe0c>
   143dc:	add	r1, pc, r0
   143e0:	ldr	r0, [sp, #12]
   143e4:	ldrsh	r2, [sp, #8]
   143e8:	add	r0, r0, r2
   143ec:	ldr	r2, [fp, #-8]
   143f0:	bl	10b3c <sprintf@plt>
   143f4:	b	143f8 <error@@Base+0xe00>
   143f8:	b	143fc <error@@Base+0xe04>
   143fc:	mov	sp, fp
   14400:	pop	{fp, pc}
   14404:	andeq	r1, r0, r3, asr #2
   14408:	andeq	r1, r0, ip, asr r1
   1440c:	andeq	r1, r0, fp, lsr r2
   14410:	andeq	r0, r0, r5, lsl sl
   14414:	push	{fp, lr}
   14418:	mov	fp, sp
   1441c:	sub	sp, sp, #16
   14420:	str	r0, [sp, #8]
   14424:	ldr	r0, [sp, #8]
   14428:	bl	10a58 <utf8proc_get_property@plt>
   1442c:	str	r0, [sp, #4]
   14430:	ldr	r0, [sp, #8]
   14434:	cmp	r0, #32
   14438:	bne	14448 <error@@Base+0xe50>
   1443c:	movw	r0, #1
   14440:	strb	r0, [fp, #-1]
   14444:	b	14488 <error@@Base+0xe90>
   14448:	ldr	r0, [sp, #4]
   1444c:	ldrsh	r0, [r0]
   14450:	sub	r1, r0, #1
   14454:	cmp	r1, #22
   14458:	str	r0, [sp]
   1445c:	bcc	14474 <error@@Base+0xe7c>
   14460:	b	14464 <error@@Base+0xe6c>
   14464:	ldr	r0, [sp]
   14468:	cmp	r0, #29
   1446c:	bne	14480 <error@@Base+0xe88>
   14470:	b	14474 <error@@Base+0xe7c>
   14474:	movw	r0, #1
   14478:	strb	r0, [fp, #-1]
   1447c:	b	14488 <error@@Base+0xe90>
   14480:	movw	r0, #0
   14484:	strb	r0, [fp, #-1]
   14488:	ldrb	r0, [fp, #-1]
   1448c:	mov	sp, fp
   14490:	pop	{fp, pc}
   14494:	push	{fp, lr}
   14498:	mov	fp, sp
   1449c:	sub	sp, sp, #8
   144a0:	str	r0, [sp]
   144a4:	ldr	r0, [sp]
   144a8:	bl	10af4 <utf8proc_category@plt>
   144ac:	sub	r0, r0, #6
   144b0:	cmp	r0, #2
   144b4:	bhi	144c8 <error@@Base+0xed0>
   144b8:	b	144bc <error@@Base+0xec4>
   144bc:	movw	r0, #1
   144c0:	strb	r0, [fp, #-1]
   144c4:	b	144d0 <error@@Base+0xed8>
   144c8:	movw	r0, #0
   144cc:	strb	r0, [fp, #-1]
   144d0:	ldrb	r0, [fp, #-1]
   144d4:	mov	sp, fp
   144d8:	pop	{fp, pc}
   144dc:	push	{fp, lr}
   144e0:	mov	fp, sp
   144e4:	sub	sp, sp, #48	; 0x30
   144e8:	ldr	r3, [pc, #252]	; 145ec <error@@Base+0xff4>
   144ec:	add	r3, pc, r3
   144f0:	ldr	ip, [pc, #248]	; 145f0 <error@@Base+0xff8>
   144f4:	ldr	ip, [pc, ip]
   144f8:	str	r0, [fp, #-4]
   144fc:	str	r1, [fp, #-8]
   14500:	str	r2, [fp, #-12]
   14504:	ldr	r0, [fp, #-8]
   14508:	mov	r1, r3
   1450c:	blx	ip
   14510:	str	r0, [fp, #-16]
   14514:	ldr	r0, [fp, #-12]
   14518:	movw	r1, #0
   1451c:	cmp	r0, r1
   14520:	beq	14574 <error@@Base+0xf7c>
   14524:	ldr	r0, [pc, #208]	; 145fc <error@@Base+0x1004>
   14528:	add	r0, pc, r0
   1452c:	ldr	r1, [fp, #-16]
   14530:	bl	10b54 <fputs@plt>
   14534:	ldr	r1, [pc, #188]	; 145f8 <error@@Base+0x1000>
   14538:	add	r1, pc, r1
   1453c:	ldr	r2, [fp, #-16]
   14540:	str	r0, [sp, #12]
   14544:	mov	r0, r1
   14548:	mov	r1, r2
   1454c:	bl	10b54 <fputs@plt>
   14550:	ldr	r1, [fp, #-12]
   14554:	ldr	r2, [fp, #-16]
   14558:	str	r0, [sp, #8]
   1455c:	mov	r0, r2
   14560:	blx	r1
   14564:	ldr	r0, [pc, #136]	; 145f4 <error@@Base+0xffc>
   14568:	add	r0, pc, r0
   1456c:	ldr	r1, [fp, #-16]
   14570:	bl	10b54 <fputs@plt>
   14574:	ldr	r0, [fp, #-4]
   14578:	ldr	r0, [r0]
   1457c:	str	r0, [fp, #-20]	; 0xffffffec
   14580:	ldr	r0, [fp, #-20]	; 0xffffffec
   14584:	movw	r1, #0
   14588:	cmp	r0, r1
   1458c:	beq	145c8 <error@@Base+0xfd0>
   14590:	add	r2, sp, #19
   14594:	ldr	r0, [fp, #-20]	; 0xffffffec
   14598:	ldrb	r0, [r0, #8]
   1459c:	ldr	r1, [fp, #-20]	; 0xffffffec
   145a0:	ldr	r1, [r1, #12]
   145a4:	movw	r3, #0
   145a8:	bl	14274 <error@@Base+0xc7c>
   145ac:	add	r0, sp, #19
   145b0:	ldr	r1, [fp, #-16]
   145b4:	bl	10b54 <fputs@plt>
   145b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   145bc:	ldr	r0, [r0, #4]
   145c0:	str	r0, [fp, #-20]	; 0xffffffec
   145c4:	b	14580 <error@@Base+0xf88>
   145c8:	ldr	r0, [pc, #48]	; 14600 <error@@Base+0x1008>
   145cc:	ldr	r0, [pc, r0]
   145d0:	ldr	r1, [fp, #-16]
   145d4:	str	r0, [sp, #4]
   145d8:	mov	r0, r1
   145dc:	ldr	r1, [sp, #4]
   145e0:	blx	r1
   145e4:	mov	sp, fp
   145e8:	pop	{fp, pc}
   145ec:	andeq	r0, r0, r5, asr fp
   145f0:	andeq	r1, r1, r4, lsr #23
   145f4:	strdeq	r0, [r0], -r6
   145f8:	andeq	r1, r0, r6, lsr #32
   145fc:	strdeq	r0, [r0], -lr
   14600:			; <UNDEFINED> instruction: 0x00011ab0
   14604:	push	{fp, lr}
   14608:	mov	fp, sp
   1460c:	sub	sp, sp, #24
   14610:	str	r0, [fp, #-8]
   14614:	str	r1, [sp, #12]
   14618:	ldr	r0, [sp, #12]
   1461c:	str	r0, [sp, #8]
   14620:	movw	r0, #0
   14624:	str	r0, [sp, #4]
   14628:	str	r0, [sp]
   1462c:	ldr	r0, [sp, #12]
   14630:	str	r0, [sp, #8]
   14634:	ldr	r0, [sp, #8]
   14638:	ldrb	r0, [r0]
   1463c:	cmp	r0, #0
   14640:	beq	14694 <error@@Base+0x109c>
   14644:	ldr	r0, [sp, #8]
   14648:	mvn	r1, #0
   1464c:	mov	r2, sp
   14650:	bl	10ab8 <utf8proc_iterate@plt>
   14654:	str	r0, [sp, #4]
   14658:	ldr	r0, [sp, #4]
   1465c:	cmp	r0, #1
   14660:	bge	14670 <error@@Base+0x1078>
   14664:	movw	r0, #0
   14668:	strb	r0, [fp, #-1]
   1466c:	b	1469c <error@@Base+0x10a4>
   14670:	ldr	r0, [fp, #-8]
   14674:	ldr	r2, [sp]
   14678:	movw	r1, #0
   1467c:	bl	13b44 <error@@Base+0x54c>
   14680:	ldr	r0, [sp, #4]
   14684:	ldr	r1, [sp, #8]
   14688:	add	r0, r1, r0
   1468c:	str	r0, [sp, #8]
   14690:	b	14634 <error@@Base+0x103c>
   14694:	movw	r0, #1
   14698:	strb	r0, [fp, #-1]
   1469c:	ldrb	r0, [fp, #-1]
   146a0:	mov	sp, fp
   146a4:	pop	{fp, pc}
   146a8:	push	{fp, lr}
   146ac:	mov	fp, sp
   146b0:	sub	sp, sp, #16
   146b4:	str	r0, [sp, #8]
   146b8:	ldr	r0, [sp, #8]
   146bc:	bl	10a58 <utf8proc_get_property@plt>
   146c0:	str	r0, [sp, #4]
   146c4:	ldr	r0, [sp, #8]
   146c8:	cmp	r0, #9
   146cc:	str	r0, [sp]
   146d0:	beq	14718 <error@@Base+0x1120>
   146d4:	b	146d8 <error@@Base+0x10e0>
   146d8:	ldr	r0, [sp]
   146dc:	cmp	r0, #10
   146e0:	beq	1470c <error@@Base+0x1114>
   146e4:	b	146e8 <error@@Base+0x10f0>
   146e8:	ldr	r0, [sp]
   146ec:	sub	r1, r0, #11
   146f0:	cmp	r1, #3
   146f4:	bcc	14718 <error@@Base+0x1120>
   146f8:	b	146fc <error@@Base+0x1104>
   146fc:	ldr	r0, [sp]
   14700:	cmp	r0, #160	; 0xa0
   14704:	beq	14718 <error@@Base+0x1120>
   14708:	b	14724 <error@@Base+0x112c>
   1470c:	movw	r0, #0
   14710:	strb	r0, [fp, #-1]
   14714:	b	14750 <error@@Base+0x1158>
   14718:	movw	r0, #1
   1471c:	strb	r0, [fp, #-1]
   14720:	b	14750 <error@@Base+0x1158>
   14724:	ldr	r0, [sp, #4]
   14728:	ldrsh	r0, [r0]
   1472c:	sub	r0, r0, #23
   14730:	cmp	r0, #2
   14734:	bhi	14748 <error@@Base+0x1150>
   14738:	b	1473c <error@@Base+0x1144>
   1473c:	movw	r0, #1
   14740:	strb	r0, [fp, #-1]
   14744:	b	14750 <error@@Base+0x1158>
   14748:	movw	r0, #0
   1474c:	strb	r0, [fp, #-1]
   14750:	ldrb	r0, [fp, #-1]
   14754:	mov	sp, fp
   14758:	pop	{fp, pc}
   1475c:	sub	sp, sp, #4
   14760:	str	r0, [sp]
   14764:	ldr	r0, [sp]
   14768:	movw	r1, #0
   1476c:	str	r1, [r0, #4]
   14770:	ldr	r0, [sp]
   14774:	str	r1, [r0]
   14778:	ldr	r0, [sp]
   1477c:	str	r1, [r0, #8]
   14780:	ldr	r0, [sp]
   14784:	str	r1, [r0, #12]
   14788:	add	sp, sp, #4
   1478c:	bx	lr
   14790:	push	{fp, lr}
   14794:	mov	fp, sp
   14798:	sub	sp, sp, #8
   1479c:	str	r0, [sp, #4]
   147a0:	str	r1, [sp]
   147a4:	ldr	r0, [sp, #4]
   147a8:	ldr	r2, [sp]
   147ac:	ldr	r1, [sp, #4]
   147b0:	ldr	r3, [r1]
   147b4:	movw	r1, #0
   147b8:	bl	147c4 <error@@Base+0x11cc>
   147bc:	mov	sp, fp
   147c0:	pop	{fp, pc}
   147c4:	push	{fp, lr}
   147c8:	mov	fp, sp
   147cc:	sub	sp, sp, #16
   147d0:	str	r0, [fp, #-4]
   147d4:	str	r1, [sp, #8]
   147d8:	str	r2, [sp, #4]
   147dc:	str	r3, [sp]
   147e0:	ldr	r0, [sp, #8]
   147e4:	ldr	r1, [sp, #4]
   147e8:	str	r0, [r1]
   147ec:	ldr	r0, [sp]
   147f0:	ldr	r1, [sp, #4]
   147f4:	str	r0, [r1, #4]
   147f8:	ldr	r0, [sp, #8]
   147fc:	movw	r1, #0
   14800:	cmp	r0, r1
   14804:	beq	14818 <error@@Base+0x1220>
   14808:	ldr	r0, [sp, #4]
   1480c:	ldr	r1, [sp, #8]
   14810:	str	r0, [r1, #4]
   14814:	b	14824 <error@@Base+0x122c>
   14818:	ldr	r0, [sp, #4]
   1481c:	ldr	r1, [fp, #-4]
   14820:	str	r0, [r1]
   14824:	ldr	r0, [sp]
   14828:	movw	r1, #0
   1482c:	cmp	r0, r1
   14830:	beq	14844 <error@@Base+0x124c>
   14834:	ldr	r0, [sp, #4]
   14838:	ldr	r1, [sp]
   1483c:	str	r0, [r1]
   14840:	b	14850 <error@@Base+0x1258>
   14844:	ldr	r0, [sp, #4]
   14848:	ldr	r1, [fp, #-4]
   1484c:	str	r0, [r1, #4]
   14850:	ldr	r0, [fp, #-4]
   14854:	bl	149d8 <error@@Base+0x13e0>
   14858:	ldr	r0, [fp, #-4]
   1485c:	ldr	r1, [r0, #12]
   14860:	add	r1, r1, #1
   14864:	str	r1, [r0, #12]
   14868:	mov	sp, fp
   1486c:	pop	{fp, pc}
   14870:	push	{fp, lr}
   14874:	mov	fp, sp
   14878:	sub	sp, sp, #8
   1487c:	str	r0, [sp, #4]
   14880:	str	r1, [sp]
   14884:	ldr	r0, [sp, #4]
   14888:	ldr	r1, [sp, #4]
   1488c:	ldr	r1, [r1, #4]
   14890:	ldr	r2, [sp]
   14894:	movw	r3, #0
   14898:	bl	147c4 <error@@Base+0x11cc>
   1489c:	mov	sp, fp
   148a0:	pop	{fp, pc}
   148a4:	push	{fp, lr}
   148a8:	mov	fp, sp
   148ac:	sub	sp, sp, #16
   148b0:	str	r0, [fp, #-4]
   148b4:	str	r1, [sp, #8]
   148b8:	str	r2, [sp, #4]
   148bc:	ldr	r0, [fp, #-4]
   148c0:	ldr	r1, [sp, #4]
   148c4:	ldr	r1, [r1]
   148c8:	ldr	r2, [sp, #8]
   148cc:	ldr	r3, [sp, #4]
   148d0:	bl	147c4 <error@@Base+0x11cc>
   148d4:	mov	sp, fp
   148d8:	pop	{fp, pc}
   148dc:	push	{fp, lr}
   148e0:	mov	fp, sp
   148e4:	sub	sp, sp, #16
   148e8:	str	r0, [fp, #-4]
   148ec:	str	r1, [sp, #8]
   148f0:	str	r2, [sp, #4]
   148f4:	ldr	r0, [fp, #-4]
   148f8:	ldr	r1, [sp, #8]
   148fc:	ldr	r2, [sp, #4]
   14900:	ldr	r3, [sp, #8]
   14904:	ldr	r3, [r3, #4]
   14908:	bl	147c4 <error@@Base+0x11cc>
   1490c:	mov	sp, fp
   14910:	pop	{fp, pc}
   14914:	push	{fp, lr}
   14918:	mov	fp, sp
   1491c:	sub	sp, sp, #8
   14920:	str	r0, [sp, #4]
   14924:	str	r1, [sp]
   14928:	ldr	r0, [sp]
   1492c:	ldr	r0, [r0]
   14930:	movw	r1, #0
   14934:	cmp	r0, r1
   14938:	beq	14954 <error@@Base+0x135c>
   1493c:	ldr	r0, [sp]
   14940:	ldr	r0, [r0, #4]
   14944:	ldr	r1, [sp]
   14948:	ldr	r1, [r1]
   1494c:	str	r0, [r1, #4]
   14950:	b	14964 <error@@Base+0x136c>
   14954:	ldr	r0, [sp]
   14958:	ldr	r0, [r0, #4]
   1495c:	ldr	r1, [sp, #4]
   14960:	str	r0, [r1]
   14964:	ldr	r0, [sp]
   14968:	ldr	r0, [r0, #4]
   1496c:	movw	r1, #0
   14970:	cmp	r0, r1
   14974:	beq	14990 <error@@Base+0x1398>
   14978:	ldr	r0, [sp]
   1497c:	ldr	r0, [r0]
   14980:	ldr	r1, [sp]
   14984:	ldr	r1, [r1, #4]
   14988:	str	r0, [r1]
   1498c:	b	149a0 <error@@Base+0x13a8>
   14990:	ldr	r0, [sp]
   14994:	ldr	r0, [r0]
   14998:	ldr	r1, [sp, #4]
   1499c:	str	r0, [r1, #4]
   149a0:	ldr	r0, [sp]
   149a4:	movw	r1, #0
   149a8:	str	r1, [r0, #4]
   149ac:	ldr	r0, [sp]
   149b0:	str	r1, [r0]
   149b4:	ldr	r0, [sp, #4]
   149b8:	bl	149d8 <error@@Base+0x13e0>
   149bc:	ldr	r0, [sp, #4]
   149c0:	ldr	r1, [r0, #12]
   149c4:	mvn	r2, #0
   149c8:	add	r1, r1, r2
   149cc:	str	r1, [r0, #12]
   149d0:	mov	sp, fp
   149d4:	pop	{fp, pc}
   149d8:	push	{fp, lr}
   149dc:	mov	fp, sp
   149e0:	sub	sp, sp, #8
   149e4:	str	r0, [sp, #4]
   149e8:	ldr	r0, [sp, #4]
   149ec:	ldr	r0, [r0, #8]
   149f0:	movw	r1, #0
   149f4:	cmp	r0, r1
   149f8:	beq	14a14 <error@@Base+0x141c>
   149fc:	ldr	r0, [sp, #4]
   14a00:	ldr	r0, [r0, #8]
   14a04:	bl	10a4c <free@plt>
   14a08:	ldr	r0, [sp, #4]
   14a0c:	movw	r1, #0
   14a10:	str	r1, [r0, #8]
   14a14:	mov	sp, fp
   14a18:	pop	{fp, pc}
   14a1c:	push	{fp, lr}
   14a20:	mov	fp, sp
   14a24:	sub	sp, sp, #16
   14a28:	str	r0, [fp, #-4]
   14a2c:	movw	r0, #0
   14a30:	str	r0, [sp, #4]
   14a34:	ldr	r1, [fp, #-4]
   14a38:	ldr	r1, [r1, #8]
   14a3c:	cmp	r1, r0
   14a40:	bne	14a54 <error@@Base+0x145c>
   14a44:	ldr	r0, [fp, #-4]
   14a48:	ldr	r0, [r0, #12]
   14a4c:	cmp	r0, #0
   14a50:	bne	14a58 <error@@Base+0x1460>
   14a54:	b	14ad0 <error@@Base+0x14d8>
   14a58:	ldr	r0, [pc, #120]	; 14ad8 <error@@Base+0x14e0>
   14a5c:	ldr	r0, [pc, r0]
   14a60:	ldr	r1, [fp, #-4]
   14a64:	ldr	r1, [r1, #12]
   14a68:	str	r0, [sp]
   14a6c:	mov	r0, r1
   14a70:	movw	r1, #4
   14a74:	ldr	r2, [sp]
   14a78:	blx	r2
   14a7c:	ldr	r1, [fp, #-4]
   14a80:	str	r0, [r1, #8]
   14a84:	ldr	r0, [fp, #-4]
   14a88:	ldr	r0, [r0]
   14a8c:	str	r0, [sp, #8]
   14a90:	ldr	r0, [sp, #8]
   14a94:	movw	r1, #0
   14a98:	cmp	r0, r1
   14a9c:	beq	14ad0 <error@@Base+0x14d8>
   14aa0:	ldr	r0, [sp, #8]
   14aa4:	ldr	r1, [fp, #-4]
   14aa8:	ldr	r1, [r1, #8]
   14aac:	ldr	r2, [sp, #4]
   14ab0:	add	r3, r2, #1
   14ab4:	str	r3, [sp, #4]
   14ab8:	add	r1, r1, r2, lsl #2
   14abc:	str	r0, [r1]
   14ac0:	ldr	r0, [sp, #8]
   14ac4:	ldr	r0, [r0, #4]
   14ac8:	str	r0, [sp, #8]
   14acc:	b	14a90 <error@@Base+0x1498>
   14ad0:	mov	sp, fp
   14ad4:	pop	{fp, pc}
   14ad8:	andeq	r1, r1, r0, lsr #13
   14adc:	push	{fp, lr}
   14ae0:	mov	fp, sp
   14ae4:	sub	sp, sp, #16
   14ae8:	str	r0, [fp, #-4]
   14aec:	str	r1, [sp, #8]
   14af0:	ldr	r0, [fp, #-4]
   14af4:	ldr	r0, [r0]
   14af8:	movw	r1, #0
   14afc:	cmp	r0, r1
   14b00:	beq	14b38 <error@@Base+0x1540>
   14b04:	ldr	r0, [fp, #-4]
   14b08:	ldr	r0, [r0]
   14b0c:	str	r0, [sp, #4]
   14b10:	ldr	r0, [fp, #-4]
   14b14:	ldr	r1, [sp, #4]
   14b18:	bl	14914 <error@@Base+0x131c>
   14b1c:	ldr	r0, [sp, #8]
   14b20:	ldr	r1, [sp, #4]
   14b24:	str	r0, [sp]
   14b28:	mov	r0, r1
   14b2c:	ldr	r1, [sp]
   14b30:	blx	r1
   14b34:	b	14af0 <error@@Base+0x14f8>
   14b38:	mov	sp, fp
   14b3c:	pop	{fp, pc}
   14b40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b44:	mov	r7, r0
   14b48:	ldr	r6, [pc, #72]	; 14b98 <error@@Base+0x15a0>
   14b4c:	ldr	r5, [pc, #72]	; 14b9c <error@@Base+0x15a4>
   14b50:	add	r6, pc, r6
   14b54:	add	r5, pc, r5
   14b58:	sub	r6, r6, r5
   14b5c:	mov	r8, r1
   14b60:	mov	r9, r2
   14b64:	bl	109fc <calloc@plt-0x20>
   14b68:	asrs	r6, r6, #2
   14b6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b70:	mov	r4, #0
   14b74:	add	r4, r4, #1
   14b78:	ldr	r3, [r5], #4
   14b7c:	mov	r2, r9
   14b80:	mov	r1, r8
   14b84:	mov	r0, r7
   14b88:	blx	r3
   14b8c:	cmp	r6, r4
   14b90:	bne	14b74 <error@@Base+0x157c>
   14b94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b98:	andeq	r1, r1, r4, lsr #7
   14b9c:	muleq	r1, ip, r3
   14ba0:	bx	lr
   14ba4:	mov	r2, r1
   14ba8:	mov	r1, r0
   14bac:	mov	r0, #3
   14bb0:	b	10aa0 <__xstat@plt>

Disassembly of section .fini:

00014bb4 <.fini>:
   14bb4:	push	{r3, lr}
   14bb8:	pop	{r3, pc}
