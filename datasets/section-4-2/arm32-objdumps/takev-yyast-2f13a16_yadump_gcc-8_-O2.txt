
../repos/takev-yyast-2f13a16/yyast/yadump:     file format elf32-littlearm


Disassembly of section .init:

000104a4 <.init>:
   104a4:	push	{r3, lr}
   104a8:	bl	10728 <close@plt+0x1bc>
   104ac:	pop	{r3, pc}

Disassembly of section .plt:

000104b0 <free@plt-0x14>:
   104b0:	push	{lr}		; (str lr, [sp, #-4]!)
   104b4:	ldr	lr, [pc, #4]	; 104c0 <free@plt-0x4>
   104b8:	add	lr, pc, lr
   104bc:	ldr	pc, [lr, #8]!
   104c0:	andeq	r0, r1, r0, asr #22

000104c4 <free@plt>:
   104c4:	add	ip, pc, #0, 12
   104c8:	add	ip, ip, #16, 20	; 0x10000
   104cc:	ldr	pc, [ip, #2880]!	; 0xb40

000104d0 <strndup@plt>:
   104d0:	add	ip, pc, #0, 12
   104d4:	add	ip, ip, #16, 20	; 0x10000
   104d8:	ldr	pc, [ip, #2872]!	; 0xb38

000104dc <perror@plt>:
   104dc:	add	ip, pc, #0, 12
   104e0:	add	ip, ip, #16, 20	; 0x10000
   104e4:	ldr	pc, [ip, #2864]!	; 0xb30

000104e8 <fwrite@plt>:
   104e8:	add	ip, pc, #0, 12
   104ec:	add	ip, ip, #16, 20	; 0x10000
   104f0:	ldr	pc, [ip, #2856]!	; 0xb28

000104f4 <__libc_start_main@plt>:
   104f4:	add	ip, pc, #0, 12
   104f8:	add	ip, ip, #16, 20	; 0x10000
   104fc:	ldr	pc, [ip, #2848]!	; 0xb20

00010500 <__fxstat@plt>:
   10500:	add	ip, pc, #0, 12
   10504:	add	ip, ip, #16, 20	; 0x10000
   10508:	ldr	pc, [ip, #2840]!	; 0xb18

0001050c <__gmon_start__@plt>:
   1050c:	add	ip, pc, #0, 12
   10510:	add	ip, ip, #16, 20	; 0x10000
   10514:	ldr	pc, [ip, #2832]!	; 0xb10

00010518 <open@plt>:
   10518:	add	ip, pc, #0, 12
   1051c:	add	ip, ip, #16, 20	; 0x10000
   10520:	ldr	pc, [ip, #2824]!	; 0xb08

00010524 <exit@plt>:
   10524:	add	ip, pc, #0, 12
   10528:	add	ip, ip, #16, 20	; 0x10000
   1052c:	ldr	pc, [ip, #2816]!	; 0xb00

00010530 <mmap@plt>:
   10530:	add	ip, pc, #0, 12
   10534:	add	ip, ip, #16, 20	; 0x10000
   10538:	ldr	pc, [ip, #2808]!	; 0xaf8

0001053c <fprintf@plt>:
   1053c:	add	ip, pc, #0, 12
   10540:	add	ip, ip, #16, 20	; 0x10000
   10544:	ldr	pc, [ip, #2800]!	; 0xaf0

00010548 <munmap@plt>:
   10548:	add	ip, pc, #0, 12
   1054c:	add	ip, ip, #16, 20	; 0x10000
   10550:	ldr	pc, [ip, #2792]!	; 0xae8

00010554 <fputc@plt>:
   10554:	add	ip, pc, #0, 12
   10558:	add	ip, ip, #16, 20	; 0x10000
   1055c:	ldr	pc, [ip, #2784]!	; 0xae0

00010560 <abort@plt>:
   10560:	add	ip, pc, #0, 12
   10564:	add	ip, ip, #16, 20	; 0x10000
   10568:	ldr	pc, [ip, #2776]!	; 0xad8

0001056c <close@plt>:
   1056c:	add	ip, pc, #0, 12
   10570:	add	ip, ip, #16, 20	; 0x10000
   10574:	ldr	pc, [ip, #2768]!	; 0xad0

Disassembly of section .text:

00010578 <.text>:
   10578:	ldr	r3, [pc, #332]	; 106cc <close@plt+0x160>
   1057c:	cmp	r0, #2
   10580:	strd	r4, [sp, #-20]!	; 0xffffffec
   10584:	strd	r6, [sp, #8]
   10588:	str	lr, [sp, #16]
   1058c:	sub	sp, sp, #100	; 0x64
   10590:	add	r3, pc, r3
   10594:	bne	10640 <close@plt+0xd4>
   10598:	mov	r2, r1
   1059c:	mov	r1, #0
   105a0:	ldr	r0, [r2, #4]
   105a4:	bl	10518 <open@plt>
   105a8:	cmn	r0, #1
   105ac:	mov	r4, r0
   105b0:	beq	106b8 <close@plt+0x14c>
   105b4:	mov	r1, r0
   105b8:	add	r2, sp, #8
   105bc:	mov	r0, #3
   105c0:	bl	10500 <__fxstat@plt>
   105c4:	cmn	r0, #1
   105c8:	beq	106a4 <close@plt+0x138>
   105cc:	ldr	r6, [sp, #52]	; 0x34
   105d0:	mov	r5, #0
   105d4:	mov	r3, #1
   105d8:	mov	r0, r5
   105dc:	mov	r2, r3
   105e0:	strd	r4, [sp]
   105e4:	mov	r1, r6
   105e8:	bl	10530 <mmap@plt>
   105ec:	cmn	r0, #1
   105f0:	mov	r7, r0
   105f4:	beq	10690 <close@plt+0x124>
   105f8:	mov	r2, r5
   105fc:	mov	r1, r6
   10600:	bl	108d4 <close@plt+0x368>
   10604:	mov	r1, r6
   10608:	mov	r0, r7
   1060c:	bl	10548 <munmap@plt>
   10610:	cmn	r0, #1
   10614:	beq	1067c <close@plt+0x110>
   10618:	mov	r0, r4
   1061c:	bl	1056c <close@plt>
   10620:	cmn	r0, #1
   10624:	beq	10668 <close@plt+0xfc>
   10628:	mov	r0, r5
   1062c:	add	sp, sp, #100	; 0x64
   10630:	ldrd	r4, [sp]
   10634:	ldrd	r6, [sp, #8]
   10638:	add	sp, sp, #16
   1063c:	pop	{pc}		; (ldr pc, [sp], #4)
   10640:	ldr	ip, [pc, #136]	; 106d0 <close@plt+0x164>
   10644:	mov	r2, #31
   10648:	mov	r1, #1
   1064c:	ldr	r0, [pc, #128]	; 106d4 <close@plt+0x168>
   10650:	ldr	r3, [r3, ip]
   10654:	add	r0, pc, r0
   10658:	ldr	r3, [r3]
   1065c:	bl	104e8 <fwrite@plt>
   10660:	mov	r0, #1
   10664:	bl	10524 <exit@plt>
   10668:	ldr	r0, [pc, #104]	; 106d8 <close@plt+0x16c>
   1066c:	add	r0, pc, r0
   10670:	bl	104dc <perror@plt>
   10674:	mov	r0, #1
   10678:	bl	10524 <exit@plt>
   1067c:	ldr	r0, [pc, #88]	; 106dc <close@plt+0x170>
   10680:	add	r0, pc, r0
   10684:	bl	104dc <perror@plt>
   10688:	mov	r0, #1
   1068c:	bl	10524 <exit@plt>
   10690:	ldr	r0, [pc, #72]	; 106e0 <close@plt+0x174>
   10694:	add	r0, pc, r0
   10698:	bl	104dc <perror@plt>
   1069c:	mov	r0, #1
   106a0:	bl	10524 <exit@plt>
   106a4:	ldr	r0, [pc, #56]	; 106e4 <close@plt+0x178>
   106a8:	add	r0, pc, r0
   106ac:	bl	104dc <perror@plt>
   106b0:	mov	r0, #1
   106b4:	bl	10524 <exit@plt>
   106b8:	ldr	r0, [pc, #40]	; 106e8 <close@plt+0x17c>
   106bc:	add	r0, pc, r0
   106c0:	bl	104dc <perror@plt>
   106c4:	mov	r0, #1
   106c8:	bl	10524 <exit@plt>
   106cc:	andeq	r0, r1, r8, ror #20
   106d0:	andeq	r0, r0, r8, asr #32
   106d4:	andeq	r0, r0, ip, lsl #14
   106d8:	muleq	r0, r4, r7
   106dc:	andeq	r0, r0, r8, asr r7
   106e0:	andeq	r0, r0, r0, lsr #14
   106e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   106e8:	andeq	r0, r0, r4, asr #13
   106ec:	mov	fp, #0
   106f0:	mov	lr, #0
   106f4:	pop	{r1}		; (ldr r1, [sp], #4)
   106f8:	mov	r2, sp
   106fc:	push	{r2}		; (str r2, [sp, #-4]!)
   10700:	push	{r0}		; (str r0, [sp, #-4]!)
   10704:	ldr	ip, [pc, #16]	; 1071c <close@plt+0x1b0>
   10708:	push	{ip}		; (str ip, [sp, #-4]!)
   1070c:	ldr	r0, [pc, #12]	; 10720 <close@plt+0x1b4>
   10710:	ldr	r3, [pc, #12]	; 10724 <close@plt+0x1b8>
   10714:	bl	104f4 <__libc_start_main@plt>
   10718:	bl	10560 <abort@plt>
   1071c:	andeq	r0, r1, r8, ror #24
   10720:	andeq	r0, r1, r8, ror r5
   10724:	andeq	r0, r1, r8, lsl #24
   10728:	ldr	r3, [pc, #20]	; 10744 <close@plt+0x1d8>
   1072c:	ldr	r2, [pc, #20]	; 10748 <close@plt+0x1dc>
   10730:	add	r3, pc, r3
   10734:	ldr	r2, [r3, r2]
   10738:	cmp	r2, #0
   1073c:	bxeq	lr
   10740:	b	1050c <__gmon_start__@plt>
   10744:	andeq	r0, r1, r8, asr #17
   10748:	andeq	r0, r0, ip, asr #32
   1074c:	ldr	r0, [pc, #24]	; 1076c <close@plt+0x200>
   10750:	ldr	r3, [pc, #24]	; 10770 <close@plt+0x204>
   10754:	cmp	r3, r0
   10758:	bxeq	lr
   1075c:	ldr	r3, [pc, #16]	; 10774 <close@plt+0x208>
   10760:	cmp	r3, #0
   10764:	bxeq	lr
   10768:	bx	r3
   1076c:	andeq	r1, r2, ip, asr r0
   10770:	andeq	r1, r2, ip, asr r0
   10774:	andeq	r0, r0, r0
   10778:	ldr	r0, [pc, #36]	; 107a4 <close@plt+0x238>
   1077c:	ldr	r1, [pc, #36]	; 107a8 <close@plt+0x23c>
   10780:	sub	r1, r1, r0
   10784:	asr	r1, r1, #2
   10788:	add	r1, r1, r1, lsr #31
   1078c:	asrs	r1, r1, #1
   10790:	bxeq	lr
   10794:	ldr	r3, [pc, #16]	; 107ac <close@plt+0x240>
   10798:	cmp	r3, #0
   1079c:	bxeq	lr
   107a0:	bx	r3
   107a4:	andeq	r1, r2, ip, asr r0
   107a8:	andeq	r1, r2, ip, asr r0
   107ac:	andeq	r0, r0, r0
   107b0:	push	{r4, lr}
   107b4:	ldr	r4, [pc, #24]	; 107d4 <close@plt+0x268>
   107b8:	ldrb	r3, [r4]
   107bc:	cmp	r3, #0
   107c0:	popne	{r4, pc}
   107c4:	bl	1074c <close@plt+0x1e0>
   107c8:	mov	r3, #1
   107cc:	strb	r3, [r4]
   107d0:	pop	{r4, pc}
   107d4:	andeq	r1, r2, ip, asr r0
   107d8:	b	10778 <close@plt+0x20c>
   107dc:	ldr	r2, [pc, #96]	; 10844 <close@plt+0x2d8>
   107e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   107e4:	subs	r5, r0, #0
   107e8:	strd	r6, [sp, #8]
   107ec:	str	r8, [sp, #16]
   107f0:	str	lr, [sp, #20]
   107f4:	add	r2, pc, r2
   107f8:	beq	10830 <close@plt+0x2c4>
   107fc:	ldr	r3, [pc, #68]	; 10848 <close@plt+0x2dc>
   10800:	mov	r4, #0
   10804:	ldr	r7, [pc, #64]	; 1084c <close@plt+0x2e0>
   10808:	ldr	r6, [r2, r3]
   1080c:	add	r7, pc, r7
   10810:	add	r4, r4, #1
   10814:	mov	r2, #2
   10818:	ldr	r3, [r6]
   1081c:	mov	r1, #1
   10820:	mov	r0, r7
   10824:	bl	104e8 <fwrite@plt>
   10828:	cmp	r5, r4
   1082c:	bne	10810 <close@plt+0x2a4>
   10830:	ldrd	r4, [sp]
   10834:	ldrd	r6, [sp, #8]
   10838:	ldr	r8, [sp, #16]
   1083c:	add	sp, sp, #20
   10840:	pop	{pc}		; (ldr pc, [sp], #4)
   10844:	andeq	r0, r1, r4, lsl #16
   10848:	andeq	r0, r0, r0, asr r0
   1084c:	andeq	r0, r0, r4, ror #8
   10850:	ldr	r3, [pc, #112]	; 108c8 <close@plt+0x35c>
   10854:	uxtb	ip, r0
   10858:	strd	r4, [sp, #-16]!
   1085c:	ubfx	r5, r0, #16, #8
   10860:	ldr	r2, [pc, #100]	; 108cc <close@plt+0x360>
   10864:	str	r6, [sp, #8]
   10868:	uxtb	r6, r1
   1086c:	str	lr, [sp, #12]
   10870:	sub	sp, sp, #24
   10874:	ubfx	lr, r0, #8, #8
   10878:	add	r3, pc, r3
   1087c:	lsr	r0, r0, #24
   10880:	ldr	r4, [r3, r2]
   10884:	ubfx	r3, r1, #8, #8
   10888:	lsr	r2, r1, #24
   1088c:	stm	sp, {r3, r6}
   10890:	ubfx	r3, r1, #16, #8
   10894:	ldr	r1, [pc, #52]	; 108d0 <close@plt+0x364>
   10898:	str	r0, [sp, #8]
   1089c:	str	r5, [sp, #12]
   108a0:	ldr	r0, [r4]
   108a4:	str	lr, [sp, #16]
   108a8:	add	r1, pc, r1
   108ac:	str	ip, [sp, #20]
   108b0:	bl	1053c <fprintf@plt>
   108b4:	add	sp, sp, #24
   108b8:	ldrd	r4, [sp]
   108bc:	ldr	r6, [sp, #8]
   108c0:	add	sp, sp, #12
   108c4:	pop	{pc}		; (ldr pc, [sp], #4)
   108c8:	andeq	r0, r1, r0, lsl #15
   108cc:	andeq	r0, r0, r0, asr r0
   108d0:	andeq	r0, r0, ip, asr #7
   108d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   108d8:	cmp	r1, #31
   108dc:	mov	r4, r0
   108e0:	ldr	r3, [pc, #732]	; 10bc4 <close@plt+0x658>
   108e4:	strd	r8, [sp, #16]
   108e8:	ldr	r9, [pc, #728]	; 10bc8 <close@plt+0x65c>
   108ec:	strd	r6, [sp, #8]
   108f0:	strd	sl, [sp, #24]
   108f4:	str	lr, [sp, #32]
   108f8:	sub	sp, sp, #12
   108fc:	add	r9, pc, r9
   10900:	ldr	r6, [r9, r3]
   10904:	ldr	r0, [r6]
   10908:	bls	10ba4 <close@plt+0x638>
   1090c:	mov	fp, r2
   10910:	mov	ip, #0
   10914:	ldm	r4, {r7, r8}
   10918:	ldr	r5, [r4, #12]
   1091c:	ldr	r2, [r4, #24]
   10920:	rev	r7, r7
   10924:	rev	r8, r8
   10928:	ldrb	sl, [r4, #31]
   1092c:	rev	r5, r5
   10930:	sub	r5, r5, #32
   10934:	cmp	r1, r5
   10938:	rev	r2, r2
   1093c:	bcc	10b84 <close@plt+0x618>
   10940:	cmn	r2, #1
   10944:	beq	109c8 <close@plt+0x45c>
   10948:	ldr	r1, [pc, #636]	; 10bcc <close@plt+0x660>
   1094c:	ldr	ip, [r4, #20]
   10950:	ldr	r3, [r4, #16]
   10954:	add	r1, pc, r1
   10958:	rev	ip, ip
   1095c:	rev	r3, r3
   10960:	str	ip, [sp]
   10964:	bl	1053c <fprintf@plt>
   10968:	ldr	r1, [pc, #608]	; 10bd0 <close@plt+0x664>
   1096c:	mov	r2, r5
   10970:	mov	r3, #0
   10974:	ldr	r0, [r6]
   10978:	add	r1, pc, r1
   1097c:	bl	1053c <fprintf@plt>
   10980:	mov	r0, fp
   10984:	bl	107dc <close@plt+0x270>
   10988:	mov	r0, #32
   1098c:	ldr	r1, [r6]
   10990:	bl	10554 <fputc@plt>
   10994:	mov	r0, r8
   10998:	mov	r1, r7
   1099c:	bl	10850 <close@plt+0x2e4>
   109a0:	cmp	sl, #6
   109a4:	addls	pc, pc, sl, lsl #2
   109a8:	b	10b00 <close@plt+0x594>
   109ac:	b	10a2c <close@plt+0x4c0>
   109b0:	b	10b00 <close@plt+0x594>
   109b4:	b	10a48 <close@plt+0x4dc>
   109b8:	b	10a90 <close@plt+0x524>
   109bc:	b	10ac0 <close@plt+0x554>
   109c0:	b	10ae0 <close@plt+0x574>
   109c4:	b	109e4 <close@plt+0x478>
   109c8:	mov	r3, r0
   109cc:	ldr	r0, [pc, #512]	; 10bd4 <close@plt+0x668>
   109d0:	mov	r2, #11
   109d4:	mov	r1, #1
   109d8:	add	r0, pc, r0
   109dc:	bl	104e8 <fwrite@plt>
   109e0:	b	10968 <close@plt+0x3fc>
   109e4:	cmp	r5, #8
   109e8:	ldr	r0, [r6]
   109ec:	beq	10b24 <close@plt+0x5b8>
   109f0:	ldr	r1, [pc, #480]	; 10bd8 <close@plt+0x66c>
   109f4:	mov	r2, r5
   109f8:	add	r1, pc, r1
   109fc:	bl	1053c <fprintf@plt>
   10a00:	ldr	r0, [r4, #12]
   10a04:	rev	r0, r0
   10a08:	add	r0, r0, #7
   10a0c:	bic	r0, r0, #7
   10a10:	add	sp, sp, #12
   10a14:	ldrd	r4, [sp]
   10a18:	ldrd	r6, [sp, #8]
   10a1c:	ldrd	r8, [sp, #16]
   10a20:	ldrd	sl, [sp, #24]
   10a24:	add	sp, sp, #32
   10a28:	pop	{pc}		; (ldr pc, [sp], #4)
   10a2c:	ldr	r0, [pc, #424]	; 10bdc <close@plt+0x670>
   10a30:	mov	r2, #6
   10a34:	mov	r1, #1
   10a38:	ldr	r3, [r6]
   10a3c:	add	r0, pc, r0
   10a40:	bl	104e8 <fwrite@plt>
   10a44:	b	10a00 <close@plt+0x494>
   10a48:	mov	r0, #10
   10a4c:	ldr	r1, [r6]
   10a50:	bl	10554 <fputc@plt>
   10a54:	cmp	r5, #0
   10a58:	beq	10a00 <close@plt+0x494>
   10a5c:	mov	r6, #0
   10a60:	add	fp, fp, #1
   10a64:	mov	r1, r6
   10a68:	add	r0, r6, #32
   10a6c:	sub	r1, r5, r1
   10a70:	add	r0, r4, r0
   10a74:	mov	r2, fp
   10a78:	bl	108d4 <close@plt+0x368>
   10a7c:	add	r6, r6, r0
   10a80:	cmp	r6, r5
   10a84:	mov	r1, r6
   10a88:	bcc	10a68 <close@plt+0x4fc>
   10a8c:	b	10a00 <close@plt+0x494>
   10a90:	mov	r1, r5
   10a94:	add	r0, r4, #32
   10a98:	bl	104d0 <strndup@plt>
   10a9c:	ldr	r1, [pc, #316]	; 10be0 <close@plt+0x674>
   10aa0:	mov	r5, r0
   10aa4:	mov	r2, r0
   10aa8:	ldr	r0, [r6]
   10aac:	add	r1, pc, r1
   10ab0:	bl	1053c <fprintf@plt>
   10ab4:	mov	r0, r5
   10ab8:	bl	104c4 <free@plt>
   10abc:	b	10a00 <close@plt+0x494>
   10ac0:	cmp	r5, #8
   10ac4:	ldr	r0, [r6]
   10ac8:	beq	10b64 <close@plt+0x5f8>
   10acc:	ldr	r1, [pc, #272]	; 10be4 <close@plt+0x678>
   10ad0:	mov	r2, r5
   10ad4:	add	r1, pc, r1
   10ad8:	bl	1053c <fprintf@plt>
   10adc:	b	10a00 <close@plt+0x494>
   10ae0:	cmp	r5, #8
   10ae4:	ldr	r0, [r6]
   10ae8:	beq	10b44 <close@plt+0x5d8>
   10aec:	ldr	r1, [pc, #244]	; 10be8 <close@plt+0x67c>
   10af0:	mov	r2, r5
   10af4:	add	r1, pc, r1
   10af8:	bl	1053c <fprintf@plt>
   10afc:	b	10a00 <close@plt+0x494>
   10b00:	ldr	r3, [pc, #228]	; 10bec <close@plt+0x680>
   10b04:	mov	r2, #11
   10b08:	mov	r1, #1
   10b0c:	ldr	r0, [pc, #220]	; 10bf0 <close@plt+0x684>
   10b10:	ldr	r3, [r9, r3]
   10b14:	add	r0, pc, r0
   10b18:	ldr	r3, [r3]
   10b1c:	bl	104e8 <fwrite@plt>
   10b20:	b	10a00 <close@plt+0x494>
   10b24:	ldr	r1, [r4, #36]	; 0x24
   10b28:	ldr	ip, [r4, #32]
   10b2c:	rev	r2, r1
   10b30:	ldr	r1, [pc, #188]	; 10bf4 <close@plt+0x688>
   10b34:	rev	r3, ip
   10b38:	add	r1, pc, r1
   10b3c:	bl	1053c <fprintf@plt>
   10b40:	b	10a00 <close@plt+0x494>
   10b44:	ldr	r3, [r4, #32]
   10b48:	ldr	r2, [r4, #36]	; 0x24
   10b4c:	ldr	r1, [pc, #164]	; 10bf8 <close@plt+0x68c>
   10b50:	rev	r3, r3
   10b54:	rev	r2, r2
   10b58:	add	r1, pc, r1
   10b5c:	bl	1053c <fprintf@plt>
   10b60:	b	10a00 <close@plt+0x494>
   10b64:	ldr	r3, [r4, #32]
   10b68:	ldr	r2, [r4, #36]	; 0x24
   10b6c:	ldr	r1, [pc, #136]	; 10bfc <close@plt+0x690>
   10b70:	rev	r3, r3
   10b74:	rev	r2, r2
   10b78:	add	r1, pc, r1
   10b7c:	bl	1053c <fprintf@plt>
   10b80:	b	10a00 <close@plt+0x494>
   10b84:	stm	sp, {r1, ip}
   10b88:	mov	r2, r5
   10b8c:	mov	r3, ip
   10b90:	ldr	r1, [pc, #104]	; 10c00 <close@plt+0x694>
   10b94:	add	r1, pc, r1
   10b98:	bl	1053c <fprintf@plt>
   10b9c:	mov	r0, #1
   10ba0:	bl	10524 <exit@plt>
   10ba4:	mov	r3, r0
   10ba8:	ldr	r0, [pc, #84]	; 10c04 <close@plt+0x698>
   10bac:	mov	r2, #39	; 0x27
   10bb0:	mov	r1, #1
   10bb4:	add	r0, pc, r0
   10bb8:	bl	104e8 <fwrite@plt>
   10bbc:	mov	r0, #1
   10bc0:	bl	10524 <exit@plt>
   10bc4:	andeq	r0, r0, r0, asr r0
   10bc8:	strdeq	r0, [r1], -ip
   10bcc:	muleq	r0, r8, r3
   10bd0:	muleq	r0, r0, r3
   10bd4:	andeq	r0, r0, r4, lsr #6
   10bd8:	andeq	r0, r0, r4, asr #6
   10bdc:	andeq	r0, r0, r0, lsl r3
   10be0:	muleq	r0, r8, r2
   10be4:	andeq	r0, r0, r8, asr #4
   10be8:	andeq	r0, r0, r8, lsr r2
   10bec:	andeq	r0, r0, r8, asr #32
   10bf0:	andeq	r0, r0, r0, asr #4
   10bf4:	strdeq	r0, [r0], -ip
   10bf8:	andeq	r0, r0, ip, asr #3
   10bfc:	muleq	r0, ip, r1
   10c00:	andeq	r0, r0, ip, lsl r1
   10c04:	ldrdeq	r0, [r0], -r4
   10c08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c0c:	mov	r7, r0
   10c10:	ldr	r6, [pc, #72]	; 10c60 <close@plt+0x6f4>
   10c14:	ldr	r5, [pc, #72]	; 10c64 <close@plt+0x6f8>
   10c18:	add	r6, pc, r6
   10c1c:	add	r5, pc, r5
   10c20:	sub	r6, r6, r5
   10c24:	mov	r8, r1
   10c28:	mov	r9, r2
   10c2c:	bl	104a4 <free@plt-0x20>
   10c30:	asrs	r6, r6, #2
   10c34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c38:	mov	r4, #0
   10c3c:	add	r4, r4, #1
   10c40:	ldr	r3, [r5], #4
   10c44:	mov	r2, r9
   10c48:	mov	r1, r8
   10c4c:	mov	r0, r7
   10c50:	blx	r3
   10c54:	cmp	r6, r4
   10c58:	bne	10c3c <close@plt+0x6d0>
   10c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c60:	strdeq	r0, [r1], -r4
   10c64:	andeq	r0, r1, ip, ror #5
   10c68:	bx	lr

Disassembly of section .fini:

00010c6c <.fini>:
   10c6c:	push	{r3, lr}
   10c70:	pop	{r3, pc}
