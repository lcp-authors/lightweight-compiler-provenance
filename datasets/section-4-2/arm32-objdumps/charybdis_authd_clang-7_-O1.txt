
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

000114dc <.init>:
   114dc:	push	{r3, lr}
   114e0:	bl	11940 <sprintf@plt+0x48>
   114e4:	pop	{r3, pc}

Disassembly of section .plt:

000114e8 <sigemptyset@plt-0x14>:
   114e8:	push	{lr}		; (str lr, [sp, #-4]!)
   114ec:	ldr	lr, [pc, #4]	; 114f8 <sigemptyset@plt-0x4>
   114f0:	add	lr, pc, lr
   114f4:	ldr	pc, [lr, #8]!
   114f8:	andeq	r8, r1, r8, lsl #22

000114fc <sigemptyset@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #24, 20	; 0x18000
   11504:	ldr	pc, [ip, #2824]!	; 0xb08

00011508 <strerror@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #24, 20	; 0x18000
   11510:	ldr	pc, [ip, #2816]!	; 0xb00

00011514 <rb_helper_loop@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #24, 20	; 0x18000
   1151c:	ldr	pc, [ip, #2808]!	; 0xaf8

00011520 <abort@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #24, 20	; 0x18000
   11528:	ldr	pc, [ip, #2800]!	; 0xaf0

0001152c <rb_event_addish@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #24, 20	; 0x18000
   11534:	ldr	pc, [ip, #2792]!	; 0xae8

00011538 <getsockname@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #24, 20	; 0x18000
   11540:	ldr	pc, [ip, #2784]!	; 0xae0

00011544 <rb_ignore_errno@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #24, 20	; 0x18000
   1154c:	ldr	pc, [ip, #2776]!	; 0xad8

00011550 <rb_connect_tcp_ssl@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #24, 20	; 0x18000
   11558:	ldr	pc, [ip, #2768]!	; 0xad0

0001155c <rb_connect_tcp@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #24, 20	; 0x18000
   11564:	ldr	pc, [ip, #2760]!	; 0xac8

00011568 <memcmp@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #24, 20	; 0x18000
   11570:	ldr	pc, [ip, #2752]!	; 0xac0

00011574 <__libc_start_main@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #24, 20	; 0x18000
   1157c:	ldr	pc, [ip, #2744]!	; 0xab8

00011580 <rb_event_delete@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #24, 20	; 0x18000
   11588:	ldr	pc, [ip, #2736]!	; 0xab0

0001158c <rb_setselect@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #24, 20	; 0x18000
   11594:	ldr	pc, [ip, #2728]!	; 0xaa8

00011598 <rb_get_fd@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #24, 20	; 0x18000
   115a0:	ldr	pc, [ip, #2720]!	; 0xaa0

000115a4 <__gmon_start__@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #24, 20	; 0x18000
   115ac:	ldr	pc, [ip, #2712]!	; 0xa98

000115b0 <vsnprintf@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #24, 20	; 0x18000
   115b8:	ldr	pc, [ip, #2704]!	; 0xa90

000115bc <rb_socket@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #24, 20	; 0x18000
   115c4:	ldr	pc, [ip, #2696]!	; 0xa88

000115c8 <fclose@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #24, 20	; 0x18000
   115d0:	ldr	pc, [ip, #2688]!	; 0xa80

000115d4 <rb_strtok_r@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #24, 20	; 0x18000
   115dc:	ldr	pc, [ip, #2680]!	; 0xa78

000115e0 <strchr@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #24, 20	; 0x18000
   115e8:	ldr	pc, [ip, #2672]!	; 0xa70

000115ec <rb_dictionary_foreach_cur@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #24, 20	; 0x18000
   115f4:	ldr	pc, [ip, #2664]!	; 0xa68

000115f8 <strcasecmp@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #24, 20	; 0x18000
   11600:	ldr	pc, [ip, #2656]!	; 0xa60

00011604 <calloc@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #24, 20	; 0x18000
   1160c:	ldr	pc, [ip, #2648]!	; 0xa58

00011610 <rb_helper_child@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #24, 20	; 0x18000
   11618:	ldr	pc, [ip, #2640]!	; 0xa50

0001161c <sendto@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #24, 20	; 0x18000
   11624:	ldr	pc, [ip, #2632]!	; 0xa48

00011628 <fopen@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #24, 20	; 0x18000
   11630:	ldr	pc, [ip, #2624]!	; 0xa40

00011634 <memset@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #24, 20	; 0x18000
   1163c:	ldr	pc, [ip, #2616]!	; 0xa38

00011640 <freeaddrinfo@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #24, 20	; 0x18000
   11648:	ldr	pc, [ip, #2608]!	; 0xa30

0001164c <strrchr@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #24, 20	; 0x18000
   11654:	ldr	pc, [ip, #2600]!	; 0xa28

00011658 <rb_write@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #24, 20	; 0x18000
   11660:	ldr	pc, [ip, #2592]!	; 0xa20

00011664 <__assert_fail@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #24, 20	; 0x18000
   1166c:	ldr	pc, [ip, #2584]!	; 0xa18

00011670 <fgets_unlocked@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #24, 20	; 0x18000
   11678:	ldr	pc, [ip, #2576]!	; 0xa10

0001167c <rb_strlcpy@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #24, 20	; 0x18000
   11684:	ldr	pc, [ip, #2568]!	; 0xa08

00011688 <strtoull@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #24, 20	; 0x18000
   11690:	ldr	pc, [ip, #2560]!	; 0xa00

00011694 <rb_dictionary_foreach_next@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #24, 20	; 0x18000
   1169c:	ldr	pc, [ip, #2552]!	; 0x9f8

000116a0 <free@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #24, 20	; 0x18000
   116a8:	ldr	pc, [ip, #2544]!	; 0x9f0

000116ac <rb_string_to_array@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #24, 20	; 0x18000
   116b4:	ldr	pc, [ip, #2536]!	; 0x9e8

000116b8 <rb_read@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #24, 20	; 0x18000
   116c0:	ldr	pc, [ip, #2528]!	; 0x9e0

000116c4 <rb_strcasecmp@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #24, 20	; 0x18000
   116cc:	ldr	pc, [ip, #2520]!	; 0x9d8

000116d0 <getaddrinfo@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #24, 20	; 0x18000
   116d8:	ldr	pc, [ip, #2512]!	; 0x9d0

000116dc <rb_dictionary_foreach_start@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #24, 20	; 0x18000
   116e4:	ldr	pc, [ip, #2504]!	; 0x9c8

000116e8 <rb_inet_pton_sock@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #24, 20	; 0x18000
   116f0:	ldr	pc, [ip, #2496]!	; 0x9c0

000116f4 <strlen@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #24, 20	; 0x18000
   116fc:	ldr	pc, [ip, #2488]!	; 0x9b8

00011700 <rb_current_time@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #24, 20	; 0x18000
   11708:	ldr	pc, [ip, #2480]!	; 0x9b0

0001170c <rb_dictionary_delete@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #24, 20	; 0x18000
   11714:	ldr	pc, [ip, #2472]!	; 0x9a8

00011718 <memcpy@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #24, 20	; 0x18000
   11720:	ldr	pc, [ip, #2464]!	; 0x9a0

00011724 <rb_free_rb_dlink_node@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #24, 20	; 0x18000
   1172c:	ldr	pc, [ip, #2456]!	; 0x998

00011730 <rb_close@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #24, 20	; 0x18000
   11738:	ldr	pc, [ip, #2448]!	; 0x990

0001173c <strtol@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #24, 20	; 0x18000
   11744:	ldr	pc, [ip, #2440]!	; 0x988

00011748 <sigaddset@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #24, 20	; 0x18000
   11750:	ldr	pc, [ip, #2432]!	; 0x980

00011754 <strcpy@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #24, 20	; 0x18000
   1175c:	ldr	pc, [ip, #2424]!	; 0x978

00011760 <atoi@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #24, 20	; 0x18000
   11768:	ldr	pc, [ip, #2416]!	; 0x970

0001176c <rb_dictionary_destroy@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #24, 20	; 0x18000
   11774:	ldr	pc, [ip, #2408]!	; 0x968

00011778 <bind@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #24, 20	; 0x18000
   11780:	ldr	pc, [ip, #2400]!	; 0x960

00011784 <rb_lib_log@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #24, 20	; 0x18000
   1178c:	ldr	pc, [ip, #2392]!	; 0x958

00011790 <strstr@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #24, 20	; 0x18000
   11798:	ldr	pc, [ip, #2384]!	; 0x950

0001179c <fwrite@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #24, 20	; 0x18000
   117a4:	ldr	pc, [ip, #2376]!	; 0x948

000117a8 <rb_init_prng@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #24, 20	; 0x18000
   117b0:	ldr	pc, [ip, #2368]!	; 0x940

000117b4 <rb_dictionary_retrieve@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #24, 20	; 0x18000
   117bc:	ldr	pc, [ip, #2360]!	; 0x938

000117c0 <rb_outofmemory@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #24, 20	; 0x18000
   117c8:	ldr	pc, [ip, #2352]!	; 0x930

000117cc <__ctype_b_loc@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #24, 20	; 0x18000
   117d4:	ldr	pc, [ip, #2344]!	; 0x928

000117d8 <rb_dictionary_add@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #24, 20	; 0x18000
   117e0:	ldr	pc, [ip, #2336]!	; 0x920

000117e4 <rb_set_time@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #24, 20	; 0x18000
   117ec:	ldr	pc, [ip, #2328]!	; 0x918

000117f0 <malloc@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #24, 20	; 0x18000
   117f8:	ldr	pc, [ip, #2320]!	; 0x910

000117fc <sigaction@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #24, 20	; 0x18000
   11804:	ldr	pc, [ip, #2312]!	; 0x908

00011808 <rb_helper_read@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #24, 20	; 0x18000
   11810:	ldr	pc, [ip, #2304]!	; 0x900

00011814 <rb_inet_ntop_sock@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #24, 20	; 0x18000
   1181c:	ldr	pc, [ip, #2296]!	; 0x8f8

00011820 <rb_dictionary_find@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #24, 20	; 0x18000
   11828:	ldr	pc, [ip, #2288]!	; 0x8f0

0001182c <rb_dictionary_create@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #24, 20	; 0x18000
   11834:	ldr	pc, [ip, #2280]!	; 0x8e8

00011838 <memmove@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #24, 20	; 0x18000
   11840:	ldr	pc, [ip, #2272]!	; 0x8e0

00011844 <rb_accept_tcp@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #24, 20	; 0x18000
   1184c:	ldr	pc, [ip, #2264]!	; 0x8d8

00011850 <rb_helper_write@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #24, 20	; 0x18000
   11858:	ldr	pc, [ip, #2256]!	; 0x8d0

0001185c <rb_event_add@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #24, 20	; 0x18000
   11864:	ldr	pc, [ip, #2248]!	; 0x8c8

00011868 <rb_get_random@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #24, 20	; 0x18000
   11870:	ldr	pc, [ip, #2240]!	; 0x8c0

00011874 <rb_make_rb_dlink_node@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #24, 20	; 0x18000
   1187c:	ldr	pc, [ip, #2232]!	; 0x8b8

00011880 <snprintf@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #24, 20	; 0x18000
   11888:	ldr	pc, [ip, #2224]!	; 0x8b0

0001188c <rb_listen@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #24, 20	; 0x18000
   11894:	ldr	pc, [ip, #2216]!	; 0x8a8

00011898 <strncmp@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #24, 20	; 0x18000
   118a0:	ldr	pc, [ip, #2208]!	; 0x8a0

000118a4 <recvfrom@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #24, 20	; 0x18000
   118ac:	ldr	pc, [ip, #2200]!	; 0x898

000118b0 <setsockopt@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #24, 20	; 0x18000
   118b8:	ldr	pc, [ip, #2192]!	; 0x890

000118bc <strpbrk@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #24, 20	; 0x18000
   118c4:	ldr	pc, [ip, #2184]!	; 0x888

000118c8 <memchr@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #24, 20	; 0x18000
   118d0:	ldr	pc, [ip, #2176]!	; 0x880

000118d4 <strcmp@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #24, 20	; 0x18000
   118dc:	ldr	pc, [ip, #2168]!	; 0x878

000118e0 <exit@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #24, 20	; 0x18000
   118e8:	ldr	pc, [ip, #2160]!	; 0x870

000118ec <__errno_location@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #24, 20	; 0x18000
   118f4:	ldr	pc, [ip, #2152]!	; 0x868

000118f8 <sprintf@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #24, 20	; 0x18000
   11900:	ldr	pc, [ip, #2144]!	; 0x860

Disassembly of section .text:

00011904 <.text>:
   11904:	mov	fp, #0
   11908:	mov	lr, #0
   1190c:	pop	{r1}		; (ldr r1, [sp], #4)
   11910:	mov	r2, sp
   11914:	push	{r2}		; (str r2, [sp, #-4]!)
   11918:	push	{r0}		; (str r0, [sp, #-4]!)
   1191c:	ldr	ip, [pc, #16]	; 11934 <sprintf@plt+0x3c>
   11920:	push	{ip}		; (str ip, [sp, #-4]!)
   11924:	ldr	r0, [pc, #12]	; 11938 <sprintf@plt+0x40>
   11928:	ldr	r3, [pc, #12]	; 1193c <sprintf@plt+0x44>
   1192c:	bl	11574 <__libc_start_main@plt>
   11930:	bl	11520 <abort@plt>
   11934:	andeq	r8, r1, r8, lsr r7
   11938:	andeq	r1, r1, r0, ror fp
   1193c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11940:	ldr	r3, [pc, #20]	; 1195c <sprintf@plt+0x64>
   11944:	ldr	r2, [pc, #20]	; 11960 <sprintf@plt+0x68>
   11948:	add	r3, pc, r3
   1194c:	ldr	r2, [r3, r2]
   11950:	cmp	r2, #0
   11954:	bxeq	lr
   11958:	b	115a4 <__gmon_start__@plt>
   1195c:			; <UNDEFINED> instruction: 0x000186b0
   11960:	andeq	r0, r0, r4, ror #2
   11964:	ldr	r0, [pc, #24]	; 11984 <sprintf@plt+0x8c>
   11968:	ldr	r3, [pc, #24]	; 11988 <sprintf@plt+0x90>
   1196c:	cmp	r3, r0
   11970:	bxeq	lr
   11974:	ldr	r3, [pc, #16]	; 1198c <sprintf@plt+0x94>
   11978:	cmp	r3, #0
   1197c:	bxeq	lr
   11980:	bx	r3
   11984:	andeq	sl, r2, ip, asr #30
   11988:	andeq	sl, r2, ip, asr #30
   1198c:	andeq	r0, r0, r0
   11990:	ldr	r0, [pc, #36]	; 119bc <sprintf@plt+0xc4>
   11994:	ldr	r1, [pc, #36]	; 119c0 <sprintf@plt+0xc8>
   11998:	sub	r1, r1, r0
   1199c:	asr	r1, r1, #2
   119a0:	add	r1, r1, r1, lsr #31
   119a4:	asrs	r1, r1, #1
   119a8:	bxeq	lr
   119ac:	ldr	r3, [pc, #16]	; 119c4 <sprintf@plt+0xcc>
   119b0:	cmp	r3, #0
   119b4:	bxeq	lr
   119b8:	bx	r3
   119bc:	andeq	sl, r2, ip, asr #30
   119c0:	andeq	sl, r2, ip, asr #30
   119c4:	andeq	r0, r0, r0
   119c8:	push	{r4, lr}
   119cc:	ldr	r4, [pc, #24]	; 119ec <sprintf@plt+0xf4>
   119d0:	ldrb	r3, [r4]
   119d4:	cmp	r3, #0
   119d8:	popne	{r4, pc}
   119dc:	bl	11964 <sprintf@plt+0x6c>
   119e0:	mov	r3, #1
   119e4:	strb	r3, [r4]
   119e8:	pop	{r4, pc}
   119ec:	andeq	sl, r2, r4, asr pc
   119f0:	b	11990 <sprintf@plt+0x98>
   119f4:	push	{r4, r5, fp, lr}
   119f8:	add	fp, sp, #8
   119fc:	mov	r4, r0
   11a00:	cmp	r0, #1
   11a04:	bgt	11a20 <sprintf@plt+0x128>
   11a08:	movw	r1, #34827	; 0x880b
   11a0c:	movt	r1, #1
   11a10:	mov	r0, #67	; 0x43
   11a14:	mov	r2, r4
   11a18:	pop	{r4, r5, fp, lr}
   11a1c:	b	12428 <sprintf@plt+0xb30>
   11a20:	mov	r5, r1
   11a24:	ldr	r1, [r1, #4]
   11a28:	movw	r0, #61824	; 0xf180
   11a2c:	movt	r0, #2
   11a30:	ldr	r0, [r0]
   11a34:	bl	117b4 <rb_dictionary_retrieve@plt>
   11a38:	cmp	r0, #0
   11a3c:	beq	11a68 <sprintf@plt+0x170>
   11a40:	sub	r1, r4, #2
   11a44:	ldr	r2, [r0, #4]
   11a48:	cmp	r1, r2
   11a4c:	bge	11a80 <sprintf@plt+0x188>
   11a50:	movw	r1, #34950	; 0x8886
   11a54:	movt	r1, #1
   11a58:	mov	r0, #67	; 0x43
   11a5c:	mov	r3, r4
   11a60:	pop	{r4, r5, fp, lr}
   11a64:	b	12428 <sprintf@plt+0xb30>
   11a68:	ldr	r2, [r5, #4]
   11a6c:	movw	r1, #34905	; 0x8859
   11a70:	movt	r1, #1
   11a74:	mov	r0, #67	; 0x43
   11a78:	pop	{r4, r5, fp, lr}
   11a7c:	b	12428 <sprintf@plt+0xb30>
   11a80:	ldr	r3, [r0, #8]
   11a84:	ldr	r0, [r5, #4]
   11a88:	add	r2, r5, #8
   11a8c:	pop	{r4, r5, fp, lr}
   11a90:	bx	r3
   11a94:	push	{r4, r5, fp, lr}
   11a98:	add	fp, sp, #8
   11a9c:	cmp	r0, #2
   11aa0:	bgt	11ad4 <sprintf@plt+0x1dc>
   11aa4:	mov	r4, #0
   11aa8:	movw	r5, #43376	; 0xa970
   11aac:	movt	r5, #2
   11ab0:	ldr	r1, [r5, r4, lsl #2]
   11ab4:	cmp	r1, #0
   11ab8:	beq	11ac4 <sprintf@plt+0x1cc>
   11abc:	mov	r0, #0
   11ac0:	blx	r1
   11ac4:	add	r4, r4, #1
   11ac8:	cmp	r4, #256	; 0x100
   11acc:	bne	11ab0 <sprintf@plt+0x1b8>
   11ad0:	pop	{r4, r5, fp, pc}
   11ad4:	ldr	r0, [r1, #4]
   11ad8:	ldrb	r0, [r0]
   11adc:	movw	r1, #43376	; 0xa970
   11ae0:	movt	r1, #2
   11ae4:	ldr	r1, [r1, r0, lsl #2]
   11ae8:	cmp	r1, #0
   11aec:	popeq	{r4, r5, fp, pc}
   11af0:	pop	{r4, r5, fp, lr}
   11af4:	bx	r1
   11af8:	push	{r4, sl, fp, lr}
   11afc:	add	fp, sp, #8
   11b00:	cmp	r0, #2
   11b04:	bgt	11b18 <sprintf@plt+0x220>
   11b08:	mov	r2, r0
   11b0c:	movw	r1, #34702	; 0x878e
   11b10:	movt	r1, #1
   11b14:	b	11b40 <sprintf@plt+0x248>
   11b18:	mov	r4, r1
   11b1c:	ldr	r0, [r1, #4]
   11b20:	mov	r1, #0
   11b24:	mov	r2, #16
   11b28:	bl	11688 <strtoull@plt>
   11b2c:	cmp	r1, #0
   11b30:	beq	11b4c <sprintf@plt+0x254>
   11b34:	ldr	r2, [r4, #4]
   11b38:	movw	r1, #34777	; 0x87d9
   11b3c:	movt	r1, #1
   11b40:	mov	r0, #67	; 0x43
   11b44:	pop	{r4, sl, fp, lr}
   11b48:	b	12428 <sprintf@plt+0xb30>
   11b4c:	ldr	r1, [r4, #8]
   11b50:	ldrb	r1, [r1]
   11b54:	movw	r2, #42352	; 0xa570
   11b58:	movt	r2, #2
   11b5c:	ldr	r2, [r2, r1, lsl #2]
   11b60:	cmp	r2, #0
   11b64:	popeq	{r4, sl, fp, pc}
   11b68:	pop	{r4, sl, fp, lr}
   11b6c:	bx	r2
   11b70:	push	{fp, lr}
   11b74:	mov	fp, sp
   11b78:	sub	sp, sp, #16
   11b7c:	bl	11c38 <sprintf@plt+0x340>
   11b80:	mov	r0, #256	; 0x100
   11b84:	mov	r1, #0
   11b88:	str	r1, [sp]
   11b8c:	str	r0, [sp, #4]
   11b90:	str	r0, [sp, #8]
   11b94:	str	r0, [sp, #12]
   11b98:	movw	r0, #7400	; 0x1ce8
   11b9c:	movt	r0, #1
   11ba0:	movw	r1, #7540	; 0x1d74
   11ba4:	movt	r1, #1
   11ba8:	mov	r2, #0
   11bac:	mov	r3, #0
   11bb0:	bl	11610 <rb_helper_child@plt>
   11bb4:	movw	r4, #44888	; 0xaf58
   11bb8:	movt	r4, #2
   11bbc:	str	r0, [r4]
   11bc0:	cmp	r0, #0
   11bc4:	bne	11bf0 <sprintf@plt+0x2f8>
   11bc8:	movw	r0, #44880	; 0xaf50
   11bcc:	movt	r0, #2
   11bd0:	ldr	r3, [r0]
   11bd4:	movw	r0, #34632	; 0x8748
   11bd8:	movt	r0, #1
   11bdc:	mov	r1, #46	; 0x2e
   11be0:	mov	r2, #1
   11be4:	bl	1179c <fwrite@plt>
   11be8:	mov	r0, #1
   11bec:	bl	118e0 <exit@plt>
   11bf0:	bl	117e4 <rb_set_time@plt>
   11bf4:	bl	11c38 <sprintf@plt+0x340>
   11bf8:	movw	r0, #34679	; 0x8777
   11bfc:	movt	r0, #1
   11c00:	movw	r1, #5828	; 0x16c4
   11c04:	movt	r1, #1
   11c08:	bl	1182c <rb_dictionary_create@plt>
   11c0c:	movw	r1, #61824	; 0xf180
   11c10:	movt	r1, #2
   11c14:	str	r0, [r1]
   11c18:	bl	13164 <sprintf@plt+0x186c>
   11c1c:	bl	12584 <sprintf@plt+0xc8c>
   11c20:	mov	r0, #0
   11c24:	mov	r1, #1
   11c28:	bl	117a8 <rb_init_prng@plt>
   11c2c:	ldr	r0, [r4]
   11c30:	mov	r1, #0
   11c34:	bl	11514 <rb_helper_loop@plt>
   11c38:	push	{r4, r5, fp, lr}
   11c3c:	add	fp, sp, #8
   11c40:	sub	sp, sp, #144	; 0x90
   11c44:	mov	r0, #1
   11c48:	str	r0, [sp, #4]
   11c4c:	mov	r0, #0
   11c50:	str	r0, [sp, #136]	; 0x88
   11c54:	add	r4, sp, #4
   11c58:	add	r5, r4, #4
   11c5c:	mov	r0, r5
   11c60:	bl	114fc <sigemptyset@plt>
   11c64:	mov	r0, r5
   11c68:	mov	r1, #13
   11c6c:	bl	11748 <sigaddset@plt>
   11c70:	mov	r0, r5
   11c74:	mov	r1, #14
   11c78:	bl	11748 <sigaddset@plt>
   11c7c:	mov	r0, r5
   11c80:	mov	r1, #5
   11c84:	bl	11748 <sigaddset@plt>
   11c88:	mov	r0, r5
   11c8c:	mov	r1, #28
   11c90:	bl	11748 <sigaddset@plt>
   11c94:	mov	r0, #28
   11c98:	mov	r1, r4
   11c9c:	mov	r2, #0
   11ca0:	bl	117fc <sigaction@plt>
   11ca4:	mov	r0, #13
   11ca8:	mov	r1, r4
   11cac:	mov	r2, #0
   11cb0:	bl	117fc <sigaction@plt>
   11cb4:	mov	r0, #5
   11cb8:	mov	r1, r4
   11cbc:	mov	r2, #0
   11cc0:	bl	117fc <sigaction@plt>
   11cc4:	movw	r0, #7556	; 0x1d84
   11cc8:	movt	r0, #1
   11ccc:	str	r0, [sp, #4]
   11cd0:	mov	r0, #14
   11cd4:	mov	r1, r4
   11cd8:	mov	r2, #0
   11cdc:	bl	117fc <sigaction@plt>
   11ce0:	sub	sp, fp, #8
   11ce4:	pop	{r4, r5, fp, pc}
   11ce8:	push	{r4, r5, r6, r7, fp, lr}
   11cec:	add	fp, sp, #16
   11cf0:	mov	r4, r0
   11cf4:	movw	r1, #44936	; 0xaf88
   11cf8:	movt	r1, #2
   11cfc:	mov	r2, #16384	; 0x4000
   11d00:	bl	11808 <rb_helper_read@plt>
   11d04:	cmp	r0, #1
   11d08:	poplt	{r4, r5, r6, r7, fp, pc}
   11d0c:	movw	r5, #44936	; 0xaf88
   11d10:	movt	r5, #2
   11d14:	movw	r6, #44892	; 0xaf5c
   11d18:	movt	r6, #2
   11d1c:	movw	r7, #41328	; 0xa170
   11d20:	movt	r7, #2
   11d24:	mov	r0, r5
   11d28:	mov	r1, r6
   11d2c:	mov	r2, #10
   11d30:	bl	116ac <rb_string_to_array@plt>
   11d34:	cmp	r0, #1
   11d38:	blt	11d58 <sprintf@plt+0x460>
   11d3c:	ldr	r1, [r6]
   11d40:	ldrb	r1, [r1]
   11d44:	ldr	r2, [r7, r1, lsl #2]
   11d48:	cmp	r2, #0
   11d4c:	beq	11d58 <sprintf@plt+0x460>
   11d50:	mov	r1, r6
   11d54:	blx	r2
   11d58:	mov	r0, r4
   11d5c:	mov	r1, r5
   11d60:	mov	r2, #16384	; 0x4000
   11d64:	bl	11808 <rb_helper_read@plt>
   11d68:	cmp	r0, #0
   11d6c:	bgt	11d24 <sprintf@plt+0x42c>
   11d70:	pop	{r4, r5, r6, r7, fp, pc}
   11d74:	push	{fp, lr}
   11d78:	mov	fp, sp
   11d7c:	mov	r0, #1
   11d80:	bl	118e0 <exit@plt>
   11d84:	bx	lr
   11d88:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11d8c:	add	fp, sp, #24
   11d90:	mov	r6, r3
   11d94:	mov	r7, r2
   11d98:	mov	r5, r1
   11d9c:	mov	r8, r0
   11da0:	bl	11e2c <sprintf@plt+0x534>
   11da4:	mov	r4, r0
   11da8:	cmp	r5, #2
   11dac:	beq	11dc4 <sprintf@plt+0x4cc>
   11db0:	cmp	r5, #10
   11db4:	bne	11e18 <sprintf@plt+0x520>
   11db8:	mov	r2, #28
   11dbc:	mov	r0, #54	; 0x36
   11dc0:	b	11dcc <sprintf@plt+0x4d4>
   11dc4:	mov	r2, #1
   11dc8:	mov	r0, #52	; 0x34
   11dcc:	str	r0, [r4, #8]
   11dd0:	movw	r5, #61320	; 0xef88
   11dd4:	movt	r5, #2
   11dd8:	ldm	r5, {r1, r3}
   11ddc:	adds	r0, r1, #1
   11de0:	adc	r9, r3, #0
   11de4:	stm	r5, {r0, r9}
   11de8:	add	r0, r4, #144	; 0x90
   11dec:	stm	r0, {r1, r3, r7}
   11df0:	str	r6, [r4, #156]	; 0x9c
   11df4:	movw	r0, #7768	; 0x1e58
   11df8:	movt	r0, #1
   11dfc:	str	r0, [r4, #4]
   11e00:	str	r4, [r4]
   11e04:	mov	r0, r8
   11e08:	mov	r1, r4
   11e0c:	bl	13264 <sprintf@plt+0x196c>
   11e10:	mov	r0, r4
   11e14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e18:	mov	r0, r4
   11e1c:	bl	11e4c <sprintf@plt+0x554>
   11e20:	mov	r4, #0
   11e24:	mov	r0, r4
   11e28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e2c:	push	{fp, lr}
   11e30:	mov	fp, sp
   11e34:	mov	r0, #1
   11e38:	mov	r1, #160	; 0xa0
   11e3c:	bl	11604 <calloc@plt>
   11e40:	cmp	r0, #0
   11e44:	popne	{fp, pc}
   11e48:	bl	117c0 <rb_outofmemory@plt>
   11e4c:	cmp	r0, #0
   11e50:	bxeq	lr
   11e54:	b	116a0 <free@plt>
   11e58:	push	{r4, r5, fp, lr}
   11e5c:	add	fp, sp, #8
   11e60:	sub	sp, sp, #56	; 0x38
   11e64:	mov	r4, r0
   11e68:	mov	r0, sp
   11e6c:	vmov.i32	q8, #0	; 0x00000000
   11e70:	add	r2, r0, #33	; 0x21
   11e74:	vst1.8	{d16-d17}, [r2]
   11e78:	add	r2, r0, #17
   11e7c:	vst1.8	{d16-d17}, [r2]
   11e80:	orr	r0, r0, #1
   11e84:	vst1.8	{d16-d17}, [r0]
   11e88:	mov	r0, #0
   11e8c:	str	r0, [sp, #49]	; 0x31
   11e90:	mov	r0, #42	; 0x2a
   11e94:	strb	r0, [sp]
   11e98:	cmp	r4, #0
   11e9c:	beq	11f64 <sprintf@plt+0x66c>
   11ea0:	cmp	r1, #0
   11ea4:	beq	11f2c <sprintf@plt+0x634>
   11ea8:	ldr	r2, [r4, #8]
   11eac:	cmp	r2, #54	; 0x36
   11eb0:	beq	11ee0 <sprintf@plt+0x5e8>
   11eb4:	cmp	r2, #52	; 0x34
   11eb8:	bne	11f7c <sprintf@plt+0x684>
   11ebc:	ldrh	r0, [r1, #4]!
   11ec0:	cmp	r0, #2
   11ec4:	bne	11f2c <sprintf@plt+0x634>
   11ec8:	mov	r2, sp
   11ecc:	mov	r0, r1
   11ed0:	mov	r1, r2
   11ed4:	mov	r2, #53	; 0x35
   11ed8:	bl	11814 <rb_inet_ntop_sock@plt>
   11edc:	b	11f2c <sprintf@plt+0x634>
   11ee0:	ldrh	r0, [r1, #4]!
   11ee4:	cmp	r0, #10
   11ee8:	bne	11f2c <sprintf@plt+0x634>
   11eec:	mov	r5, sp
   11ef0:	mov	r0, r1
   11ef4:	mov	r1, r5
   11ef8:	mov	r2, #53	; 0x35
   11efc:	bl	11814 <rb_inet_ntop_sock@plt>
   11f00:	ldrb	r0, [sp]
   11f04:	cmp	r0, #58	; 0x3a
   11f08:	bne	11f2c <sprintf@plt+0x634>
   11f0c:	mov	r0, r5
   11f10:	bl	116f4 <strlen@plt>
   11f14:	mov	r2, r0
   11f18:	orr	r0, r5, #1
   11f1c:	mov	r1, r5
   11f20:	bl	11838 <memmove@plt>
   11f24:	mov	r0, #48	; 0x30
   11f28:	strb	r0, [sp]
   11f2c:	ldr	r5, [r4, #152]	; 0x98
   11f30:	cmp	r5, #0
   11f34:	beq	11f54 <sprintf@plt+0x65c>
   11f38:	ldrb	r0, [sp]
   11f3c:	subs	r1, r0, #42	; 0x2a
   11f40:	movwne	r1, #1
   11f44:	ldr	r2, [r4, #8]
   11f48:	ldr	r3, [r4, #156]	; 0x9c
   11f4c:	mov	r0, sp
   11f50:	blx	r5
   11f54:	mov	r0, r4
   11f58:	bl	11e4c <sprintf@plt+0x554>
   11f5c:	sub	sp, fp, #8
   11f60:	pop	{r4, r5, fp, pc}
   11f64:	movw	r1, #35157	; 0x8955
   11f68:	movt	r1, #1
   11f6c:	mov	r0, #67	; 0x43
   11f70:	bl	12428 <sprintf@plt+0xb30>
   11f74:	mov	r0, #2
   11f78:	bl	118e0 <exit@plt>
   11f7c:	movw	r1, #35201	; 0x8981
   11f80:	movt	r1, #1
   11f84:	mov	r0, #67	; 0x43
   11f88:	bl	12428 <sprintf@plt+0xb30>
   11f8c:	mov	r0, #2
   11f90:	bl	118e0 <exit@plt>
   11f94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11f98:	add	fp, sp, #24
   11f9c:	mov	r8, r2
   11fa0:	mov	r6, r1
   11fa4:	mov	r5, r0
   11fa8:	bl	11e2c <sprintf@plt+0x534>
   11fac:	mov	r4, r0
   11fb0:	add	r7, r0, #12
   11fb4:	mov	r0, r5
   11fb8:	mov	r1, r7
   11fbc:	bl	116e8 <rb_inet_pton_sock@plt>
   11fc0:	cmp	r0, #0
   11fc4:	beq	11fe4 <sprintf@plt+0x6ec>
   11fc8:	ldrh	r0, [r7]
   11fcc:	cmp	r0, #2
   11fd0:	beq	11ff8 <sprintf@plt+0x700>
   11fd4:	cmp	r0, #10
   11fd8:	bne	11fe4 <sprintf@plt+0x6ec>
   11fdc:	mov	r0, #83	; 0x53
   11fe0:	b	11ffc <sprintf@plt+0x704>
   11fe4:	mov	r0, r4
   11fe8:	bl	11e4c <sprintf@plt+0x554>
   11fec:	mov	r4, #0
   11ff0:	mov	r0, r4
   11ff4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11ff8:	mov	r0, #82	; 0x52
   11ffc:	str	r0, [r4, #8]
   12000:	movw	r0, #61320	; 0xef88
   12004:	movt	r0, #2
   12008:	ldrd	r2, [r0]
   1200c:	adds	r1, r2, #1
   12010:	adc	r5, r3, #0
   12014:	stm	r0, {r1, r5}
   12018:	add	r0, r4, #144	; 0x90
   1201c:	stm	r0, {r2, r3, r6, r8}
   12020:	movw	r0, #8260	; 0x2044
   12024:	movt	r0, #1
   12028:	str	r0, [r4, #4]
   1202c:	str	r4, [r4]
   12030:	mov	r0, r7
   12034:	mov	r1, r4
   12038:	bl	13394 <sprintf@plt+0x1a9c>
   1203c:	mov	r0, r4
   12040:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12044:	push	{r4, r5, r6, sl, fp, lr}
   12048:	add	fp, sp, #16
   1204c:	cmp	r0, #0
   12050:	beq	120e0 <sprintf@plt+0x7e8>
   12054:	mov	r6, r1
   12058:	mov	r4, r0
   1205c:	mov	r5, #0
   12060:	cmp	r1, #0
   12064:	beq	120ac <sprintf@plt+0x7b4>
   12068:	ldr	r2, [r4, #8]
   1206c:	cmp	r2, #83	; 0x53
   12070:	beq	12090 <sprintf@plt+0x798>
   12074:	cmp	r2, #82	; 0x52
   12078:	bne	120f8 <sprintf@plt+0x800>
   1207c:	ldr	r0, [r6, #8]
   12080:	ldr	r1, [r4, #16]
   12084:	cmp	r1, r0
   12088:	ldreq	r5, [r6]
   1208c:	b	120ac <sprintf@plt+0x7b4>
   12090:	add	r0, r4, #20
   12094:	add	r1, r6, #12
   12098:	mov	r2, #16
   1209c:	bl	11568 <memcmp@plt>
   120a0:	cmp	r0, #0
   120a4:	bne	120ac <sprintf@plt+0x7b4>
   120a8:	ldr	r5, [r6]
   120ac:	ldr	r6, [r4, #152]	; 0x98
   120b0:	cmp	r6, #0
   120b4:	beq	120d4 <sprintf@plt+0x7dc>
   120b8:	ldr	r2, [r4, #8]
   120bc:	ldr	r3, [r4, #156]	; 0x9c
   120c0:	cmp	r5, #0
   120c4:	mov	r1, r5
   120c8:	movwne	r1, #1
   120cc:	mov	r0, r5
   120d0:	blx	r6
   120d4:	mov	r0, r4
   120d8:	pop	{r4, r5, r6, sl, fp, lr}
   120dc:	b	11e4c <sprintf@plt+0x554>
   120e0:	movw	r1, #35252	; 0x89b4
   120e4:	movt	r1, #1
   120e8:	mov	r0, #67	; 0x43
   120ec:	bl	12428 <sprintf@plt+0xb30>
   120f0:	mov	r0, #2
   120f4:	bl	118e0 <exit@plt>
   120f8:	movw	r1, #35302	; 0x89e6
   120fc:	movt	r1, #1
   12100:	mov	r0, #67	; 0x43
   12104:	bl	12428 <sprintf@plt+0xb30>
   12108:	mov	r0, #2
   1210c:	bl	118e0 <exit@plt>
   12110:	mov	r1, #0
   12114:	str	r1, [r0, #152]	; 0x98
   12118:	str	r1, [r0, #156]	; 0x9c
   1211c:	bx	lr
   12120:	push	{r4, sl, fp, lr}
   12124:	add	fp, sp, #8
   12128:	mov	r4, r1
   1212c:	ldr	r0, [r1, #4]
   12130:	bl	121c4 <sprintf@plt+0x8cc>
   12134:	mov	r3, r0
   12138:	ldr	r1, [r4, #8]
   1213c:	ldr	r0, [r4, #12]
   12140:	ldrb	r4, [r1]
   12144:	sub	r1, r4, #82	; 0x52
   12148:	cmp	r1, #2
   1214c:	bcc	12178 <sprintf@plt+0x880>
   12150:	mov	r1, #2
   12154:	cmp	r4, #52	; 0x34
   12158:	beq	12168 <sprintf@plt+0x870>
   1215c:	cmp	r4, #54	; 0x36
   12160:	bne	121a8 <sprintf@plt+0x8b0>
   12164:	mov	r1, #10
   12168:	movw	r2, #8700	; 0x21fc
   1216c:	movt	r2, #1
   12170:	bl	11d88 <sprintf@plt+0x490>
   12174:	b	12188 <sprintf@plt+0x890>
   12178:	movw	r1, #8700	; 0x21fc
   1217c:	movt	r1, #1
   12180:	mov	r2, r3
   12184:	bl	11f94 <sprintf@plt+0x69c>
   12188:	cmp	r0, #0
   1218c:	popne	{r4, sl, fp, pc}
   12190:	mov	r0, #0
   12194:	mov	r1, #0
   12198:	mov	r2, r4
   1219c:	mov	r3, #0
   121a0:	pop	{r4, sl, fp, lr}
   121a4:	b	121fc <sprintf@plt+0x904>
   121a8:	movw	r1, #35029	; 0x88d5
   121ac:	movt	r1, #1
   121b0:	mov	r0, #67	; 0x43
   121b4:	mov	r2, r4
   121b8:	bl	12428 <sprintf@plt+0xb30>
   121bc:	mov	r0, #2
   121c0:	bl	118e0 <exit@plt>
   121c4:	push	{r4, r5, fp, lr}
   121c8:	add	fp, sp, #8
   121cc:	mov	r4, r0
   121d0:	bl	116f4 <strlen@plt>
   121d4:	add	r0, r0, #1
   121d8:	bl	117f0 <malloc@plt>
   121dc:	cmp	r0, #0
   121e0:	beq	121f8 <sprintf@plt+0x900>
   121e4:	mov	r5, r0
   121e8:	mov	r1, r4
   121ec:	bl	11754 <strcpy@plt>
   121f0:	mov	r0, r5
   121f4:	pop	{r4, r5, fp, pc}
   121f8:	bl	117c0 <rb_outofmemory@plt>
   121fc:	push	{r4, sl, fp, lr}
   12200:	add	fp, sp, #8
   12204:	sub	sp, sp, #8
   12208:	cmp	r2, #0
   1220c:	movne	r4, r3
   12210:	cmpne	r3, #0
   12214:	bne	12230 <sprintf@plt+0x938>
   12218:	movw	r1, #35359	; 0x8a1f
   1221c:	movt	r1, #1
   12220:	mov	r0, #67	; 0x43
   12224:	bl	12428 <sprintf@plt+0xb30>
   12228:	mov	r0, #2
   1222c:	bl	118e0 <exit@plt>
   12230:	mov	r3, r2
   12234:	movw	r2, #44888	; 0xaf58
   12238:	movt	r2, #2
   1223c:	ldr	r2, [r2]
   12240:	cmp	r0, #0
   12244:	cmpne	r1, #0
   12248:	bne	12258 <sprintf@plt+0x960>
   1224c:	movw	r1, #35402	; 0x8a4a
   12250:	movt	r1, #1
   12254:	b	12264 <sprintf@plt+0x96c>
   12258:	str	r0, [sp]
   1225c:	movw	r1, #35414	; 0x8a56
   12260:	movt	r1, #1
   12264:	mov	r0, r2
   12268:	mov	r2, r4
   1226c:	bl	11850 <rb_helper_write@plt>
   12270:	mov	r0, r4
   12274:	sub	sp, fp, #8
   12278:	pop	{r4, sl, fp, lr}
   1227c:	b	11e4c <sprintf@plt+0x554>
   12280:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12284:	add	fp, sp, #28
   12288:	sub	sp, sp, #612	; 0x264
   1228c:	mov	r4, r1
   12290:	mov	r5, r0
   12294:	movw	r8, #61416	; 0xefe8
   12298:	movt	r8, #2
   1229c:	ldr	r0, [r8]
   122a0:	cmp	r0, #0
   122a4:	beq	12394 <sprintf@plt+0xa9c>
   122a8:	ldr	r0, [r8]
   122ac:	cmp	r0, #1
   122b0:	blt	1234c <sprintf@plt+0xa54>
   122b4:	str	r5, [sp, #4]
   122b8:	str	r4, [sp, #8]
   122bc:	mov	r9, #0
   122c0:	movw	r6, #62120	; 0xf2a8
   122c4:	movt	r6, #2
   122c8:	add	r7, sp, #15
   122cc:	movw	r4, #35153	; 0x8951
   122d0:	movt	r4, #1
   122d4:	mov	sl, #0
   122d8:	mov	r0, r6
   122dc:	mov	r1, r7
   122e0:	mov	r2, #53	; 0x35
   122e4:	bl	11814 <rb_inet_ntop_sock@plt>
   122e8:	ldrb	r0, [sp, #15]
   122ec:	cmp	r0, #0
   122f0:	beq	1236c <sprintf@plt+0xa74>
   122f4:	mov	r0, r7
   122f8:	bl	116f4 <strlen@plt>
   122fc:	mov	r5, r0
   12300:	add	r0, sp, #68	; 0x44
   12304:	add	r0, r0, r9
   12308:	rsb	r1, r9, #540	; 0x21c
   1230c:	mov	r2, r4
   12310:	mov	r3, r7
   12314:	bl	11880 <snprintf@plt>
   12318:	add	r0, r9, r5
   1231c:	add	r9, r0, #1
   12320:	add	r6, r6, #128	; 0x80
   12324:	add	sl, sl, #1
   12328:	ldr	r1, [r8]
   1232c:	cmp	sl, r1
   12330:	blt	122d8 <sprintf@plt+0x9e0>
   12334:	cmp	r9, #0
   12338:	ldr	r4, [sp, #8]
   1233c:	ldr	r5, [sp, #4]
   12340:	movne	r1, #0
   12344:	addne	r2, sp, #68	; 0x44
   12348:	strbne	r1, [r2, r0]
   1234c:	movw	r2, #39123	; 0x98d3
   12350:	movt	r2, #1
   12354:	add	r3, sp, #68	; 0x44
   12358:	mov	r0, r5
   1235c:	mov	r1, r4
   12360:	bl	12494 <sprintf@plt+0xb9c>
   12364:	sub	sp, fp, #28
   12368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1236c:	movw	r1, #35114	; 0x892a
   12370:	movt	r1, #1
   12374:	mov	r0, #67	; 0x43
   12378:	bl	12428 <sprintf@plt+0xb30>
   1237c:	movw	r2, #35135	; 0x893f
   12380:	movt	r2, #1
   12384:	ldmib	sp, {r0, r1}
   12388:	bl	124fc <sprintf@plt+0xc04>
   1238c:	mov	r0, #2
   12390:	bl	118e0 <exit@plt>
   12394:	movw	r1, #35078	; 0x8906
   12398:	movt	r1, #1
   1239c:	mov	r0, #67	; 0x43
   123a0:	bl	12428 <sprintf@plt+0xb30>
   123a4:	movw	r2, #35100	; 0x891c
   123a8:	movt	r2, #1
   123ac:	mov	r0, r5
   123b0:	mov	r1, r4
   123b4:	b	12388 <sprintf@plt+0xa90>
   123b8:	b	1322c <sprintf@plt+0x1934>
   123bc:	sub	sp, sp, #8
   123c0:	push	{r4, r5, r6, r7, fp, lr}
   123c4:	add	fp, sp, #16
   123c8:	sub	sp, sp, #520	; 0x208
   123cc:	mov	ip, r1
   123d0:	mov	r4, r0
   123d4:	str	r3, [fp, #12]
   123d8:	str	r2, [fp, #8]
   123dc:	add	r3, fp, #8
   123e0:	str	r3, [sp, #4]
   123e4:	add	r5, sp, #8
   123e8:	mov	r0, r5
   123ec:	mov	r1, #512	; 0x200
   123f0:	mov	r2, ip
   123f4:	bl	115b0 <vsnprintf@plt>
   123f8:	movw	r0, #44888	; 0xaf58
   123fc:	movt	r0, #2
   12400:	ldr	r0, [r0]
   12404:	movw	r1, #35427	; 0x8a63
   12408:	movt	r1, #1
   1240c:	mov	r2, r4
   12410:	mov	r3, r5
   12414:	bl	11850 <rb_helper_write@plt>
   12418:	sub	sp, fp, #16
   1241c:	pop	{r4, r5, r6, r7, fp, lr}
   12420:	add	sp, sp, #8
   12424:	bx	lr
   12428:	sub	sp, sp, #8
   1242c:	push	{r4, r5, r6, r7, fp, lr}
   12430:	add	fp, sp, #16
   12434:	sub	sp, sp, #520	; 0x208
   12438:	mov	ip, r1
   1243c:	mov	r4, r0
   12440:	str	r3, [fp, #12]
   12444:	str	r2, [fp, #8]
   12448:	add	r3, fp, #8
   1244c:	str	r3, [sp, #4]
   12450:	add	r5, sp, #8
   12454:	mov	r0, r5
   12458:	mov	r1, #512	; 0x200
   1245c:	mov	r2, ip
   12460:	bl	115b0 <vsnprintf@plt>
   12464:	movw	r0, #44888	; 0xaf58
   12468:	movt	r0, #2
   1246c:	ldr	r0, [r0]
   12470:	movw	r1, #35436	; 0x8a6c
   12474:	movt	r1, #1
   12478:	mov	r2, r4
   1247c:	mov	r3, r5
   12480:	bl	11850 <rb_helper_write@plt>
   12484:	sub	sp, fp, #16
   12488:	pop	{r4, r5, r6, r7, fp, lr}
   1248c:	add	sp, sp, #8
   12490:	bx	lr
   12494:	sub	sp, sp, #4
   12498:	push	{r4, r5, r6, sl, fp, lr}
   1249c:	add	fp, sp, #16
   124a0:	sub	sp, sp, #524	; 0x20c
   124a4:	mov	r4, r1
   124a8:	mov	r5, r0
   124ac:	str	r3, [fp, #8]
   124b0:	add	r3, fp, #8
   124b4:	str	r3, [sp, #8]
   124b8:	add	r6, sp, #12
   124bc:	mov	r0, r6
   124c0:	mov	r1, #512	; 0x200
   124c4:	bl	115b0 <vsnprintf@plt>
   124c8:	movw	r0, #44888	; 0xaf58
   124cc:	movt	r0, #2
   124d0:	ldr	r0, [r0]
   124d4:	str	r6, [sp]
   124d8:	movw	r1, #35445	; 0x8a75
   124dc:	movt	r1, #1
   124e0:	mov	r2, r5
   124e4:	mov	r3, r4
   124e8:	bl	11850 <rb_helper_write@plt>
   124ec:	sub	sp, fp, #16
   124f0:	pop	{r4, r5, r6, sl, fp, lr}
   124f4:	add	sp, sp, #4
   124f8:	bx	lr
   124fc:	sub	sp, sp, #4
   12500:	push	{r4, r5, r6, sl, fp, lr}
   12504:	add	fp, sp, #16
   12508:	sub	sp, sp, #524	; 0x20c
   1250c:	mov	r4, r1
   12510:	mov	r5, r0
   12514:	str	r3, [fp, #8]
   12518:	add	r3, fp, #8
   1251c:	str	r3, [sp, #8]
   12520:	add	r6, sp, #12
   12524:	mov	r0, r6
   12528:	mov	r1, #512	; 0x200
   1252c:	bl	115b0 <vsnprintf@plt>
   12530:	movw	r0, #44888	; 0xaf58
   12534:	movt	r0, #2
   12538:	ldr	r0, [r0]
   1253c:	str	r6, [sp]
   12540:	movw	r1, #35456	; 0x8a80
   12544:	movt	r1, #1
   12548:	mov	r2, r5
   1254c:	mov	r3, r4
   12550:	bl	11850 <rb_helper_write@plt>
   12554:	sub	sp, fp, #16
   12558:	pop	{r4, r5, r6, sl, fp, lr}
   1255c:	add	sp, sp, #4
   12560:	bx	lr
   12564:	mov	r3, r1
   12568:	mov	r2, r0
   1256c:	movw	r0, #44888	; 0xaf58
   12570:	movt	r0, #2
   12574:	ldr	r0, [r0]
   12578:	movw	r1, #35467	; 0x8a8b
   1257c:	movt	r1, #1
   12580:	b	11850 <rb_helper_write@plt>
   12584:	push	{fp, lr}
   12588:	mov	fp, sp
   1258c:	movw	r0, #35475	; 0x8a93
   12590:	movt	r0, #1
   12594:	movw	r1, #9736	; 0x2608
   12598:	movt	r1, #1
   1259c:	bl	1182c <rb_dictionary_create@plt>
   125a0:	movw	r1, #61828	; 0xf184
   125a4:	movt	r1, #2
   125a8:	str	r0, [r1]
   125ac:	movw	r0, #35496	; 0x8aa8
   125b0:	movt	r0, #1
   125b4:	movw	r1, #9744	; 0x2610
   125b8:	movt	r1, #1
   125bc:	mov	r2, #0
   125c0:	mov	r3, #1
   125c4:	bl	1152c <rb_event_addish@plt>
   125c8:	movw	r1, #61328	; 0xef90
   125cc:	movt	r1, #2
   125d0:	str	r0, [r1]
   125d4:	movw	r0, #44460	; 0xadac
   125d8:	movt	r0, #2
   125dc:	bl	12718 <sprintf@plt+0xe20>
   125e0:	movw	r0, #44812	; 0xaf0c
   125e4:	movt	r0, #2
   125e8:	bl	12718 <sprintf@plt+0xe20>
   125ec:	movw	r0, #44652	; 0xae6c
   125f0:	movt	r0, #2
   125f4:	bl	12718 <sprintf@plt+0xe20>
   125f8:	movw	r0, #44560	; 0xae10
   125fc:	movt	r0, #2
   12600:	pop	{fp, lr}
   12604:	b	12718 <sprintf@plt+0xe20>
   12608:	sub	r0, r1, r0
   1260c:	bx	lr
   12610:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12614:	add	fp, sp, #28
   12618:	sub	sp, sp, #12
   1261c:	bl	11700 <rb_current_time@plt>
   12620:	mov	r4, r0
   12624:	movw	r6, #61828	; 0xf184
   12628:	movt	r6, #2
   1262c:	ldr	r0, [r6]
   12630:	add	r5, sp, #4
   12634:	mov	r1, r5
   12638:	bl	116dc <rb_dictionary_foreach_start@plt>
   1263c:	ldr	r0, [r6]
   12640:	mov	r1, r5
   12644:	bl	115ec <rb_dictionary_foreach_cur@plt>
   12648:	cmp	r0, #0
   1264c:	beq	12710 <sprintf@plt+0xe18>
   12650:	mov	r6, r0
   12654:	add	r8, sp, #4
   12658:	mov	r0, r6
   1265c:	bl	12910 <sprintf@plt+0x1018>
   12660:	movw	r0, #61832	; 0xf188
   12664:	movt	r0, #2
   12668:	ldr	sl, [r0]
   1266c:	cmp	sl, #0
   12670:	bne	12684 <sprintf@plt+0xd8c>
   12674:	b	126d8 <sprintf@plt+0xde0>
   12678:	ldr	sl, [sl, #8]
   1267c:	cmp	sl, #0
   12680:	beq	126d8 <sprintf@plt+0xde0>
   12684:	ldr	r9, [sl]
   12688:	ldr	r5, [r9, #12]
   1268c:	mov	r0, r6
   12690:	mov	r1, r5
   12694:	bl	13154 <sprintf@plt+0x185c>
   12698:	mov	r7, r0
   1269c:	mov	r0, r6
   126a0:	mov	r1, r5
   126a4:	bl	12cd8 <sprintf@plt+0x13e0>
   126a8:	cmp	r0, #0
   126ac:	beq	12678 <sprintf@plt+0xd80>
   126b0:	cmp	r7, r4
   126b4:	bge	12678 <sprintf@plt+0xd80>
   126b8:	cmp	r7, #1
   126bc:	blt	12678 <sprintf@plt+0xd80>
   126c0:	ldr	r1, [r9, #40]	; 0x28
   126c4:	cmp	r1, #0
   126c8:	beq	12678 <sprintf@plt+0xd80>
   126cc:	mov	r0, r6
   126d0:	blx	r1
   126d4:	b	12678 <sprintf@plt+0xd80>
   126d8:	mov	r0, r6
   126dc:	bl	12a04 <sprintf@plt+0x110c>
   126e0:	movw	r0, #61828	; 0xf184
   126e4:	movt	r0, #2
   126e8:	mov	r5, r0
   126ec:	ldr	r0, [r0]
   126f0:	mov	r1, r8
   126f4:	bl	11694 <rb_dictionary_foreach_next@plt>
   126f8:	ldr	r0, [r5]
   126fc:	mov	r1, r8
   12700:	bl	115ec <rb_dictionary_foreach_cur@plt>
   12704:	mov	r6, r0
   12708:	cmp	r0, #0
   1270c:	bne	12658 <sprintf@plt+0xd60>
   12710:	sub	sp, fp, #28
   12714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12718:	push	{r4, r5, r6, sl, fp, lr}
   1271c:	add	fp, sp, #16
   12720:	mov	r4, r0
   12724:	movw	r5, #61332	; 0xef94
   12728:	movt	r5, #2
   1272c:	ldr	r0, [r5, #8]
   12730:	cmp	r0, #0
   12734:	beq	127c8 <sprintf@plt+0xed0>
   12738:	ldr	r0, [r5]
   1273c:	ldr	r1, [r0]
   12740:	str	r1, [r4, #12]
   12744:	mov	r1, r5
   12748:	bl	12a18 <sprintf@plt+0x1120>
   1274c:	ldr	r0, [r5]
   12750:	bl	11724 <rb_free_rb_dlink_node@plt>
   12754:	ldr	r5, [r4, #56]	; 0x38
   12758:	cmp	r5, #0
   1275c:	ldrne	r1, [r5]
   12760:	cmpne	r1, #0
   12764:	beq	12788 <sprintf@plt+0xe90>
   12768:	movw	r6, #61824	; 0xf180
   1276c:	movt	r6, #2
   12770:	ldr	r0, [r6]
   12774:	mov	r2, r5
   12778:	bl	117d8 <rb_dictionary_add@plt>
   1277c:	ldr	r1, [r5, #12]!
   12780:	cmp	r1, #0
   12784:	bne	12770 <sprintf@plt+0xe78>
   12788:	ldrb	r0, [r4, #48]	; 0x30
   1278c:	cmp	r0, #0
   12790:	ldrne	r1, [r4, #52]	; 0x34
   12794:	movwne	r2, #42352	; 0xa570
   12798:	movtne	r2, #2
   1279c:	strne	r1, [r2, r0, lsl #2]
   127a0:	ldr	r0, [r4, #24]
   127a4:	cmp	r0, #0
   127a8:	beq	127b0 <sprintf@plt+0xeb8>
   127ac:	blx	r0
   127b0:	movw	r2, #61832	; 0xf188
   127b4:	movt	r2, #2
   127b8:	mov	r0, r4
   127bc:	mov	r1, r4
   127c0:	pop	{r4, r5, r6, sl, fp, lr}
   127c4:	b	12ab8 <sprintf@plt+0x11c0>
   127c8:	movw	r1, #61344	; 0xefa0
   127cc:	movt	r1, #2
   127d0:	ldr	r0, [r1]
   127d4:	cmp	r0, #32
   127d8:	cmnne	r0, #1
   127dc:	bne	127f4 <sprintf@plt+0xefc>
   127e0:	movw	r1, #35594	; 0x8b0a
   127e4:	movt	r1, #1
   127e8:	mov	r0, #87	; 0x57
   127ec:	pop	{r4, r5, r6, sl, fp, lr}
   127f0:	b	12428 <sprintf@plt+0xb30>
   127f4:	add	r2, r0, #1
   127f8:	str	r2, [r1]
   127fc:	str	r0, [r4, #12]
   12800:	b	12754 <sprintf@plt+0xe5c>
   12804:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12808:	add	fp, sp, #24
   1280c:	sub	sp, sp, #8
   12810:	movw	r8, #61828	; 0xf184
   12814:	movt	r8, #2
   12818:	ldr	r0, [r8]
   1281c:	mov	r4, sp
   12820:	mov	r1, r4
   12824:	bl	116dc <rb_dictionary_foreach_start@plt>
   12828:	ldr	r0, [r8]
   1282c:	mov	r1, r4
   12830:	bl	115ec <rb_dictionary_foreach_cur@plt>
   12834:	cmp	r0, #0
   12838:	beq	1289c <sprintf@plt+0xfa4>
   1283c:	mov	r7, r0
   12840:	movw	r4, #35519	; 0x8abf
   12844:	movt	r4, #1
   12848:	movw	r5, #35527	; 0x8ac7
   1284c:	movt	r5, #1
   12850:	mov	r6, sp
   12854:	mov	r0, r7
   12858:	bl	12910 <sprintf@plt+0x1018>
   1285c:	mov	r0, r7
   12860:	mvn	r1, #0
   12864:	mov	r2, r4
   12868:	mov	r3, r5
   1286c:	bl	12920 <sprintf@plt+0x1028>
   12870:	mov	r0, r7
   12874:	bl	12a04 <sprintf@plt+0x110c>
   12878:	ldr	r0, [r8]
   1287c:	mov	r1, r6
   12880:	bl	11694 <rb_dictionary_foreach_next@plt>
   12884:	ldr	r0, [r8]
   12888:	mov	r1, r6
   1288c:	bl	115ec <rb_dictionary_foreach_cur@plt>
   12890:	mov	r7, r0
   12894:	cmp	r0, #0
   12898:	bne	12854 <sprintf@plt+0xf5c>
   1289c:	movw	r0, #61832	; 0xf188
   128a0:	movt	r0, #2
   128a4:	ldr	r5, [r0]
   128a8:	cmp	r5, #0
   128ac:	beq	128e8 <sprintf@plt+0xff0>
   128b0:	movw	r4, #61832	; 0xf188
   128b4:	movt	r4, #2
   128b8:	ldr	r0, [r5]
   128bc:	ldr	r6, [r5, #8]
   128c0:	ldr	r0, [r0, #28]
   128c4:	cmp	r0, #0
   128c8:	beq	128d0 <sprintf@plt+0xfd8>
   128cc:	blx	r0
   128d0:	mov	r0, r5
   128d4:	mov	r1, r4
   128d8:	bl	12a18 <sprintf@plt+0x1120>
   128dc:	cmp	r6, #0
   128e0:	mov	r5, r6
   128e4:	bne	128b8 <sprintf@plt+0xfc0>
   128e8:	ldr	r0, [r8]
   128ec:	mov	r1, #0
   128f0:	mov	r2, #0
   128f4:	bl	1176c <rb_dictionary_destroy@plt>
   128f8:	movw	r0, #61328	; 0xef90
   128fc:	movt	r0, #2
   12900:	ldr	r0, [r0]
   12904:	bl	11580 <rb_event_delete@plt>
   12908:	sub	sp, fp, #24
   1290c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12910:	ldr	r1, [r0, #460]	; 0x1cc
   12914:	add	r1, r1, #1
   12918:	str	r1, [r0, #460]	; 0x1cc
   1291c:	bx	lr
   12920:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12924:	add	fp, sp, #24
   12928:	sub	sp, sp, #536	; 0x218
   1292c:	mov	r6, r3
   12930:	mov	r7, r2
   12934:	mov	r5, r1
   12938:	mov	r4, r0
   1293c:	add	r3, fp, #8
   12940:	str	r3, [sp, #20]
   12944:	add	r8, sp, #24
   12948:	mov	r0, r8
   1294c:	mov	r1, #512	; 0x200
   12950:	mov	r2, r6
   12954:	bl	115b0 <vsnprintf@plt>
   12958:	ldr	r2, [r4]
   1295c:	movw	r0, #44888	; 0xaf58
   12960:	movt	r0, #2
   12964:	ldr	r0, [r0]
   12968:	cmn	r5, #1
   1296c:	beq	129bc <sprintf@plt+0x10c4>
   12970:	ldr	r1, [r4, #464]	; 0x1d0
   12974:	ldr	r1, [r1, r5, lsl #4]
   12978:	ldrb	r3, [r1, #20]
   1297c:	movw	r1, #35412	; 0x8a54
   12980:	movt	r1, #1
   12984:	cmp	r7, #0
   12988:	movne	r1, r7
   1298c:	add	r7, r4, #376	; 0x178
   12990:	add	r6, r4, #440	; 0x1b8
   12994:	stm	sp, {r6, r7}
   12998:	str	r1, [sp, #8]
   1299c:	str	r8, [sp, #12]
   129a0:	movw	r1, #35640	; 0x8b38
   129a4:	movt	r1, #1
   129a8:	bl	11850 <rb_helper_write@plt>
   129ac:	mov	r0, r4
   129b0:	mov	r1, r5
   129b4:	bl	12d7c <sprintf@plt+0x1484>
   129b8:	b	129f4 <sprintf@plt+0x10fc>
   129bc:	movw	r1, #35412	; 0x8a54
   129c0:	movt	r1, #1
   129c4:	cmp	r7, #0
   129c8:	movne	r1, r7
   129cc:	add	r3, r4, #376	; 0x178
   129d0:	add	r7, r4, #440	; 0x1b8
   129d4:	str	r7, [sp]
   129d8:	str	r3, [sp, #4]
   129dc:	str	r1, [sp, #8]
   129e0:	str	r8, [sp, #12]
   129e4:	movw	r1, #35640	; 0x8b38
   129e8:	movt	r1, #1
   129ec:	mov	r3, #42	; 0x2a
   129f0:	bl	11850 <rb_helper_write@plt>
   129f4:	mov	r0, r4
   129f8:	bl	12c5c <sprintf@plt+0x1364>
   129fc:	sub	sp, fp, #24
   12a00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12a04:	ldr	r1, [r0, #460]	; 0x1cc
   12a08:	subs	r1, r1, #1
   12a0c:	str	r1, [r0, #460]	; 0x1cc
   12a10:	bxne	lr
   12a14:	b	12c1c <sprintf@plt+0x1324>
   12a18:	push	{fp, lr}
   12a1c:	mov	fp, sp
   12a20:	cmp	r0, #0
   12a24:	beq	12a78 <sprintf@plt+0x1180>
   12a28:	cmp	r1, #0
   12a2c:	beq	12a98 <sprintf@plt+0x11a0>
   12a30:	ldr	ip, [r0, #4]
   12a34:	ldr	r3, [r0, #8]
   12a38:	add	r2, r3, #4
   12a3c:	cmp	r3, #0
   12a40:	addeq	r2, r1, #4
   12a44:	str	ip, [r2]
   12a48:	ldmib	r0, {r2, ip}
   12a4c:	cmp	r2, #0
   12a50:	mov	r3, r1
   12a54:	addne	r3, r2, #8
   12a58:	str	ip, [r3]
   12a5c:	mov	r2, #0
   12a60:	str	r2, [r0, #4]
   12a64:	str	r2, [r0, #8]
   12a68:	ldr	r0, [r1, #8]
   12a6c:	sub	r0, r0, #1
   12a70:	str	r0, [r1, #8]
   12a74:	pop	{fp, pc}
   12a78:	movw	r0, #37195	; 0x914b
   12a7c:	movt	r0, #1
   12a80:	movw	r1, #35888	; 0x8c30
   12a84:	movt	r1, #1
   12a88:	movw	r3, #35916	; 0x8c4c
   12a8c:	movt	r3, #1
   12a90:	mov	r2, #235	; 0xeb
   12a94:	bl	11664 <__assert_fail@plt>
   12a98:	movw	r0, #35970	; 0x8c82
   12a9c:	movt	r0, #1
   12aa0:	movw	r1, #35888	; 0x8c30
   12aa4:	movt	r1, #1
   12aa8:	movw	r3, #35916	; 0x8c4c
   12aac:	movt	r3, #1
   12ab0:	mov	r2, #236	; 0xec
   12ab4:	bl	11664 <__assert_fail@plt>
   12ab8:	push	{fp, lr}
   12abc:	mov	fp, sp
   12ac0:	cmp	r0, #0
   12ac4:	beq	12b24 <sprintf@plt+0x122c>
   12ac8:	cmp	r1, #0
   12acc:	beq	12b44 <sprintf@plt+0x124c>
   12ad0:	cmp	r2, #0
   12ad4:	beq	12b64 <sprintf@plt+0x126c>
   12ad8:	mov	r3, #0
   12adc:	stm	r1, {r0, r3}
   12ae0:	ldr	r0, [r2]
   12ae4:	str	r0, [r1, #8]
   12ae8:	ldr	r0, [r2]
   12aec:	cmp	r0, #0
   12af0:	beq	12b00 <sprintf@plt+0x1208>
   12af4:	add	r0, r0, #4
   12af8:	str	r1, [r0]
   12afc:	b	12b10 <sprintf@plt+0x1218>
   12b00:	mov	r0, r2
   12b04:	ldr	r3, [r0, #4]!
   12b08:	cmp	r3, #0
   12b0c:	streq	r1, [r0]
   12b10:	str	r1, [r2]
   12b14:	ldr	r0, [r2, #8]
   12b18:	add	r0, r0, #1
   12b1c:	str	r0, [r2, #8]
   12b20:	pop	{fp, pc}
   12b24:	movw	r0, #35983	; 0x8c8f
   12b28:	movt	r0, #1
   12b2c:	movw	r1, #35888	; 0x8c30
   12b30:	movt	r1, #1
   12b34:	movw	r3, #35996	; 0x8c9c
   12b38:	movt	r3, #1
   12b3c:	mov	r2, #143	; 0x8f
   12b40:	bl	11664 <__assert_fail@plt>
   12b44:	movw	r0, #37195	; 0x914b
   12b48:	movt	r0, #1
   12b4c:	movw	r1, #35888	; 0x8c30
   12b50:	movt	r1, #1
   12b54:	movw	r3, #35996	; 0x8c9c
   12b58:	movt	r3, #1
   12b5c:	mov	r2, #144	; 0x90
   12b60:	bl	11664 <__assert_fail@plt>
   12b64:	movw	r0, #35970	; 0x8c82
   12b68:	movt	r0, #1
   12b6c:	movw	r1, #35888	; 0x8c30
   12b70:	movt	r1, #1
   12b74:	movw	r3, #35996	; 0x8c9c
   12b78:	movt	r3, #1
   12b7c:	mov	r2, #145	; 0x91
   12b80:	bl	11664 <__assert_fail@plt>
   12b84:	push	{r4, r5, r6, sl, fp, lr}
   12b88:	add	fp, sp, #16
   12b8c:	mov	r4, r0
   12b90:	ldr	r0, [r0, #56]	; 0x38
   12b94:	cmp	r0, #0
   12b98:	ldrne	r1, [r0]
   12b9c:	cmpne	r1, #0
   12ba0:	beq	12bc4 <sprintf@plt+0x12cc>
   12ba4:	add	r5, r0, #12
   12ba8:	movw	r6, #61824	; 0xf180
   12bac:	movt	r6, #2
   12bb0:	ldr	r0, [r6]
   12bb4:	bl	1170c <rb_dictionary_delete@plt>
   12bb8:	ldr	r1, [r5], #12
   12bbc:	cmp	r1, #0
   12bc0:	bne	12bb0 <sprintf@plt+0x12b8>
   12bc4:	ldrb	r0, [r4, #48]	; 0x30
   12bc8:	cmp	r0, #0
   12bcc:	movwne	r1, #42352	; 0xa570
   12bd0:	movtne	r1, #2
   12bd4:	movne	r2, #0
   12bd8:	strne	r2, [r1, r0, lsl #2]
   12bdc:	ldr	r0, [r4, #28]
   12be0:	cmp	r0, #0
   12be4:	beq	12bec <sprintf@plt+0x12f4>
   12be8:	blx	r0
   12bec:	movw	r1, #61832	; 0xf188
   12bf0:	movt	r1, #2
   12bf4:	mov	r0, r4
   12bf8:	bl	12a18 <sprintf@plt+0x1120>
   12bfc:	ldr	r4, [r4, #12]
   12c00:	bl	11874 <rb_make_rb_dlink_node@plt>
   12c04:	mov	r1, r0
   12c08:	movw	r2, #61332	; 0xef94
   12c0c:	movt	r2, #2
   12c10:	mov	r0, r4
   12c14:	pop	{r4, r5, r6, sl, fp, lr}
   12c18:	b	12ab8 <sprintf@plt+0x11c0>
   12c1c:	push	{r4, sl, fp, lr}
   12c20:	add	fp, sp, #8
   12c24:	mov	r4, r0
   12c28:	ldr	r1, [r0]
   12c2c:	movw	r0, #61828	; 0xf184
   12c30:	movt	r0, #2
   12c34:	ldr	r0, [r0]
   12c38:	bl	1170c <rb_dictionary_delete@plt>
   12c3c:	ldr	r0, [r4, #464]	; 0x1d0
   12c40:	bl	12c50 <sprintf@plt+0x1358>
   12c44:	mov	r0, r4
   12c48:	pop	{r4, sl, fp, lr}
   12c4c:	b	12c50 <sprintf@plt+0x1358>
   12c50:	cmp	r0, #0
   12c54:	bxeq	lr
   12c58:	b	116a0 <free@plt>
   12c5c:	push	{r4, r5, r6, sl, fp, lr}
   12c60:	add	fp, sp, #16
   12c64:	mov	r4, r0
   12c68:	ldrb	r0, [r0, #452]	; 0x1c4
   12c6c:	cmp	r0, #0
   12c70:	beq	12c78 <sprintf@plt+0x1380>
   12c74:	pop	{r4, r5, r6, sl, fp, pc}
   12c78:	mov	r0, #1
   12c7c:	strb	r0, [r4, #452]	; 0x1c4
   12c80:	ldr	r0, [r4, #456]	; 0x1c8
   12c84:	cmp	r0, #0
   12c88:	beq	12c74 <sprintf@plt+0x137c>
   12c8c:	movw	r0, #61832	; 0xf188
   12c90:	movt	r0, #2
   12c94:	ldr	r5, [r0]
   12c98:	b	12ca0 <sprintf@plt+0x13a8>
   12c9c:	ldr	r5, [r5, #8]
   12ca0:	cmp	r5, #0
   12ca4:	popeq	{r4, r5, r6, sl, fp, pc}
   12ca8:	ldr	r0, [r5]
   12cac:	ldr	r6, [r0, #36]	; 0x24
   12cb0:	cmp	r6, #0
   12cb4:	beq	12c9c <sprintf@plt+0x13a4>
   12cb8:	ldr	r1, [r0, #12]
   12cbc:	mov	r0, r4
   12cc0:	bl	12cd8 <sprintf@plt+0x13e0>
   12cc4:	cmp	r0, #0
   12cc8:	beq	12c9c <sprintf@plt+0x13a4>
   12ccc:	mov	r0, r4
   12cd0:	blx	r6
   12cd4:	b	12c9c <sprintf@plt+0x13a4>
   12cd8:	push	{fp, lr}
   12cdc:	mov	fp, sp
   12ce0:	bl	130f8 <sprintf@plt+0x1800>
   12ce4:	sub	r0, r0, #1
   12ce8:	clz	r0, r0
   12cec:	lsr	r0, r0, #5
   12cf0:	pop	{fp, pc}
   12cf4:	push	{r4, r5, r6, r7, fp, lr}
   12cf8:	add	fp, sp, #16
   12cfc:	mov	r5, r1
   12d00:	mov	r4, r0
   12d04:	bl	12d7c <sprintf@plt+0x1484>
   12d08:	ldr	r0, [r4, #456]	; 0x1c8
   12d0c:	cmp	r0, #0
   12d10:	bne	12d20 <sprintf@plt+0x1428>
   12d14:	ldrb	r0, [r4, #451]	; 0x1c3
   12d18:	cmp	r0, #0
   12d1c:	beq	12d70 <sprintf@plt+0x1478>
   12d20:	movw	r0, #61832	; 0xf188
   12d24:	movt	r0, #2
   12d28:	ldr	r6, [r0]
   12d2c:	b	12d34 <sprintf@plt+0x143c>
   12d30:	ldr	r6, [r6, #8]
   12d34:	cmp	r6, #0
   12d38:	popeq	{r4, r5, r6, r7, fp, pc}
   12d3c:	ldr	r0, [r6]
   12d40:	ldr	r7, [r0, #44]	; 0x2c
   12d44:	cmp	r7, #0
   12d48:	beq	12d30 <sprintf@plt+0x1438>
   12d4c:	ldr	r1, [r0, #12]
   12d50:	mov	r0, r4
   12d54:	bl	12cd8 <sprintf@plt+0x13e0>
   12d58:	cmp	r0, #0
   12d5c:	beq	12d30 <sprintf@plt+0x1438>
   12d60:	mov	r0, r4
   12d64:	mov	r1, r5
   12d68:	blx	r7
   12d6c:	b	12d30 <sprintf@plt+0x1438>
   12d70:	mov	r0, r4
   12d74:	pop	{r4, r5, r6, r7, fp, lr}
   12d78:	b	12da0 <sprintf@plt+0x14a8>
   12d7c:	push	{r4, sl, fp, lr}
   12d80:	add	fp, sp, #8
   12d84:	mov	r4, r0
   12d88:	mov	r2, #2
   12d8c:	bl	13108 <sprintf@plt+0x1810>
   12d90:	ldr	r0, [r4, #456]	; 0x1c8
   12d94:	sub	r0, r0, #1
   12d98:	str	r0, [r4, #456]	; 0x1c8
   12d9c:	pop	{r4, sl, fp, pc}
   12da0:	push	{r4, sl, fp, lr}
   12da4:	add	fp, sp, #8
   12da8:	sub	sp, sp, #8
   12dac:	mov	r4, r0
   12db0:	movw	r0, #44888	; 0xaf58
   12db4:	movt	r0, #2
   12db8:	ldr	r0, [r0]
   12dbc:	mov	r1, r4
   12dc0:	ldr	r2, [r1], #376	; 0x178
   12dc4:	str	r1, [sp]
   12dc8:	add	r3, r4, #440	; 0x1b8
   12dcc:	movw	r1, #35661	; 0x8b4d
   12dd0:	movt	r1, #1
   12dd4:	bl	11850 <rb_helper_write@plt>
   12dd8:	mov	r0, r4
   12ddc:	sub	sp, fp, #8
   12de0:	pop	{r4, sl, fp, lr}
   12de4:	b	12c5c <sprintf@plt+0x1364>
   12de8:	push	{r4, r5, fp, lr}
   12dec:	add	fp, sp, #8
   12df0:	sub	sp, sp, #8
   12df4:	mov	ip, r0
   12df8:	cmp	r0, #5
   12dfc:	ble	12e34 <sprintf@plt+0x153c>
   12e00:	mov	lr, r1
   12e04:	ldmib	r1, {r0, r1}
   12e08:	add	r5, lr, #12
   12e0c:	ldm	r5, {r2, r3, r5}
   12e10:	cmp	ip, #6
   12e14:	ldrne	r4, [lr, #24]
   12e18:	movweq	r4, #36115	; 0x8d13
   12e1c:	movteq	r4, #1
   12e20:	str	r5, [sp]
   12e24:	str	r4, [sp, #4]
   12e28:	bl	12e50 <sprintf@plt+0x1558>
   12e2c:	sub	sp, fp, #8
   12e30:	pop	{r4, r5, fp, pc}
   12e34:	movw	r1, #35672	; 0x8b58
   12e38:	movt	r1, #1
   12e3c:	mov	r0, #67	; 0x43
   12e40:	mov	r2, ip
   12e44:	bl	12428 <sprintf@plt+0xb30>
   12e48:	mov	r0, #3
   12e4c:	bl	118e0 <exit@plt>
   12e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e54:	add	fp, sp, #28
   12e58:	sub	sp, sp, #12
   12e5c:	mov	r4, r3
   12e60:	mov	sl, r2
   12e64:	mov	r6, r1
   12e68:	mov	r5, r0
   12e6c:	mov	r1, #0
   12e70:	mov	r2, #16
   12e74:	bl	11688 <strtoull@plt>
   12e78:	mov	r8, r0
   12e7c:	subs	r0, r0, #1
   12e80:	sbc	r1, r1, #0
   12e84:	mvn	r2, #1
   12e88:	subs	r0, r2, r0
   12e8c:	rscs	r0, r1, #0
   12e90:	subcc	sp, fp, #28
   12e94:	popcc	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e98:	str	r4, [sp, #8]
   12e9c:	ldr	r7, [fp, #12]
   12ea0:	ldr	r0, [fp, #8]
   12ea4:	str	r0, [sp, #4]
   12ea8:	mov	r0, #468	; 0x1d4
   12eac:	bl	13118 <sprintf@plt+0x1820>
   12eb0:	mov	r4, r0
   12eb4:	bl	12910 <sprintf@plt+0x1018>
   12eb8:	str	r8, [r4]
   12ebc:	movw	r9, #61828	; 0xf184
   12ec0:	movt	r9, #2
   12ec4:	ldr	r0, [r9]
   12ec8:	mov	r1, r8
   12ecc:	bl	11820 <rb_dictionary_find@plt>
   12ed0:	cmp	r0, #0
   12ed4:	bne	13038 <sprintf@plt+0x1740>
   12ed8:	ldr	r1, [r4]
   12edc:	ldr	r0, [r9]
   12ee0:	mov	r2, r4
   12ee4:	bl	117d8 <rb_dictionary_add@plt>
   12ee8:	mov	r8, #0
   12eec:	mov	r0, r7
   12ef0:	mov	r1, #0
   12ef4:	mov	r2, #16
   12ef8:	bl	11688 <strtoull@plt>
   12efc:	str	r0, [r4, #4]
   12f00:	add	r0, r4, #8
   12f04:	mov	r1, r6
   12f08:	mov	r2, #54	; 0x36
   12f0c:	bl	1167c <rb_strlcpy@plt>
   12f10:	mov	r0, sl
   12f14:	bl	11760 <atoi@plt>
   12f18:	strh	r0, [r4, #62]	; 0x3e
   12f1c:	add	r1, r4, #64	; 0x40
   12f20:	mov	r0, r6
   12f24:	bl	116e8 <rb_inet_pton_sock@plt>
   12f28:	ldrh	r0, [r4, #62]	; 0x3e
   12f2c:	bl	13138 <sprintf@plt+0x1840>
   12f30:	strh	r0, [r4, #66]	; 0x42
   12f34:	add	r0, r4, #192	; 0xc0
   12f38:	ldr	r5, [sp, #8]
   12f3c:	mov	r1, r5
   12f40:	mov	r2, #54	; 0x36
   12f44:	bl	1167c <rb_strlcpy@plt>
   12f48:	ldr	r0, [sp, #4]
   12f4c:	bl	11760 <atoi@plt>
   12f50:	strh	r0, [r4, #246]	; 0xf6
   12f54:	add	r1, r4, #248	; 0xf8
   12f58:	mov	r0, r5
   12f5c:	bl	116e8 <rb_inet_pton_sock@plt>
   12f60:	ldrh	r0, [r4, #246]	; 0xf6
   12f64:	bl	13138 <sprintf@plt+0x1840>
   12f68:	strh	r0, [r4, #250]	; 0xfa
   12f6c:	add	r0, r4, #376	; 0x178
   12f70:	movw	r5, #35412	; 0x8a54
   12f74:	movt	r5, #1
   12f78:	mov	r1, r5
   12f7c:	mov	r2, #64	; 0x40
   12f80:	bl	1167c <rb_strlcpy@plt>
   12f84:	add	r0, r4, #440	; 0x1b8
   12f88:	mov	r1, r5
   12f8c:	mov	r2, #11
   12f90:	bl	1167c <rb_strlcpy@plt>
   12f94:	movw	r0, #61344	; 0xefa0
   12f98:	movt	r0, #2
   12f9c:	ldr	r0, [r0]
   12fa0:	lsl	r0, r0, #4
   12fa4:	bl	13118 <sprintf@plt+0x1820>
   12fa8:	str	r0, [r4, #464]	; 0x1d0
   12fac:	mov	r0, #1
   12fb0:	strb	r0, [r4, #451]	; 0x1c3
   12fb4:	movw	r0, #61832	; 0xf188
   12fb8:	movt	r0, #2
   12fbc:	ldr	r5, [r0]
   12fc0:	cmp	r5, #0
   12fc4:	bne	12fd8 <sprintf@plt+0x16e0>
   12fc8:	b	13010 <sprintf@plt+0x1718>
   12fcc:	ldr	r5, [r5, #8]
   12fd0:	cmp	r5, #0
   12fd4:	beq	13010 <sprintf@plt+0x1718>
   12fd8:	ldr	r0, [r4, #464]	; 0x1d0
   12fdc:	ldr	r6, [r5]
   12fe0:	ldr	r1, [r6, #12]
   12fe4:	str	r6, [r0, r1, lsl #4]
   12fe8:	mov	r0, r4
   12fec:	bl	13140 <sprintf@plt+0x1848>
   12ff0:	ldr	r1, [r6, #32]
   12ff4:	mov	r0, r4
   12ff8:	blx	r1
   12ffc:	cmp	r0, #0
   13000:	beq	13028 <sprintf@plt+0x1730>
   13004:	ldrb	r0, [r4, #452]	; 0x1c4
   13008:	cmp	r0, #0
   1300c:	beq	12fcc <sprintf@plt+0x16d4>
   13010:	strb	r8, [r4, #451]	; 0x1c3
   13014:	ldr	r0, [r4, #456]	; 0x1c8
   13018:	cmp	r0, #0
   1301c:	bne	13028 <sprintf@plt+0x1730>
   13020:	mov	r0, r4
   13024:	bl	12da0 <sprintf@plt+0x14a8>
   13028:	mov	r0, r4
   1302c:	sub	sp, fp, #28
   13030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13034:	b	12a04 <sprintf@plt+0x110c>
   13038:	movw	r1, #36055	; 0x8cd7
   1303c:	movt	r1, #1
   13040:	mov	r0, #67	; 0x43
   13044:	mov	r2, r5
   13048:	bl	12428 <sprintf@plt+0xb30>
   1304c:	mov	r0, #3
   13050:	bl	118e0 <exit@plt>
   13054:	push	{r4, sl, fp, lr}
   13058:	add	fp, sp, #8
   1305c:	cmp	r0, #1
   13060:	ble	130cc <sprintf@plt+0x17d4>
   13064:	mov	r4, r1
   13068:	ldr	r0, [r1, #4]
   1306c:	mov	r1, #0
   13070:	mov	r2, #16
   13074:	bl	11688 <strtoull@plt>
   13078:	mov	r2, r0
   1307c:	subs	r0, r0, #1
   13080:	sbc	r1, r1, #0
   13084:	mvn	r3, #0
   13088:	subs	r0, r0, r3
   1308c:	sbcs	r0, r1, #0
   13090:	bcs	130dc <sprintf@plt+0x17e4>
   13094:	movw	r0, #61828	; 0xf184
   13098:	movt	r0, #2
   1309c:	ldr	r0, [r0]
   130a0:	mov	r1, r2
   130a4:	bl	117b4 <rb_dictionary_retrieve@plt>
   130a8:	cmp	r0, #0
   130ac:	popeq	{r4, sl, fp, pc}
   130b0:	mov	r4, r0
   130b4:	bl	12910 <sprintf@plt+0x1018>
   130b8:	mov	r0, r4
   130bc:	bl	12c5c <sprintf@plt+0x1364>
   130c0:	mov	r0, r4
   130c4:	pop	{r4, sl, fp, lr}
   130c8:	b	12a04 <sprintf@plt+0x110c>
   130cc:	mov	r2, r0
   130d0:	movw	r1, #35746	; 0x8ba2
   130d4:	movt	r1, #1
   130d8:	b	130e8 <sprintf@plt+0x17f0>
   130dc:	ldr	r2, [r4, #4]
   130e0:	movw	r1, #35820	; 0x8bec
   130e4:	movt	r1, #1
   130e8:	mov	r0, #67	; 0x43
   130ec:	bl	12428 <sprintf@plt+0xb30>
   130f0:	mov	r0, #3
   130f4:	bl	118e0 <exit@plt>
   130f8:	ldr	r0, [r0, #464]	; 0x1d0
   130fc:	add	r0, r0, r1, lsl #4
   13100:	ldr	r0, [r0, #12]
   13104:	bx	lr
   13108:	ldr	r0, [r0, #464]	; 0x1d0
   1310c:	add	r0, r0, r1, lsl #4
   13110:	str	r2, [r0, #12]
   13114:	bx	lr
   13118:	push	{fp, lr}
   1311c:	mov	fp, sp
   13120:	mov	r1, r0
   13124:	mov	r0, #1
   13128:	bl	11604 <calloc@plt>
   1312c:	cmp	r0, #0
   13130:	popne	{fp, pc}
   13134:	bl	117c0 <rb_outofmemory@plt>
   13138:	rev16	r0, r0
   1313c:	bx	lr
   13140:	ldr	r2, [r0, #456]	; 0x1c8
   13144:	add	r2, r2, #1
   13148:	str	r2, [r0, #456]	; 0x1c8
   1314c:	mov	r2, #1
   13150:	b	13108 <sprintf@plt+0x1810>
   13154:	ldr	r0, [r0, #464]	; 0x1d0
   13158:	add	r0, r0, r1, lsl #4
   1315c:	ldr	r0, [r0, #4]
   13160:	bx	lr
   13164:	b	13168 <sprintf@plt+0x1870>
   13168:	push	{r4, sl, fp, lr}
   1316c:	add	fp, sp, #8
   13170:	bl	1428c <sprintf@plt+0x2994>
   13174:	movw	r0, #61416	; 0xefe8
   13178:	movt	r0, #2
   1317c:	ldr	r1, [r0]
   13180:	cmp	r1, #1
   13184:	blt	131a8 <sprintf@plt+0x18b0>
   13188:	ldr	r0, [r0]
   1318c:	cmp	r0, #1
   13190:	movle	r0, #1
   13194:	lsl	r2, r0, #2
   13198:	movw	r0, #61360	; 0xefb0
   1319c:	movt	r0, #2
   131a0:	mov	r1, #0
   131a4:	bl	11634 <memset@plt>
   131a8:	movw	r4, #61352	; 0xefa8
   131ac:	movt	r4, #2
   131b0:	ldr	r0, [r4]
   131b4:	cmp	r0, #0
   131b8:	beq	131c0 <sprintf@plt+0x18c8>
   131bc:	pop	{r4, sl, fp, pc}
   131c0:	movw	r0, #62120	; 0xf2a8
   131c4:	movt	r0, #2
   131c8:	ldrh	r0, [r0]
   131cc:	movw	r3, #36322	; 0x8de2
   131d0:	movt	r3, #1
   131d4:	mov	r1, #2
   131d8:	mov	r2, #0
   131dc:	bl	115bc <rb_socket@plt>
   131e0:	str	r0, [r4]
   131e4:	cmp	r0, #0
   131e8:	popeq	{r4, sl, fp, pc}
   131ec:	movw	r2, #13820	; 0x35fc
   131f0:	movt	r2, #1
   131f4:	mov	r1, #1
   131f8:	mov	r3, #0
   131fc:	bl	1158c <rb_setselect@plt>
   13200:	movw	r0, #36342	; 0x8df6
   13204:	movt	r0, #1
   13208:	movw	r1, #13876	; 0x3634
   1320c:	movt	r1, #1
   13210:	mov	r2, #0
   13214:	mov	r3, #1
   13218:	bl	1185c <rb_event_add@plt>
   1321c:	movw	r1, #61356	; 0xefac
   13220:	movt	r1, #2
   13224:	str	r0, [r1]
   13228:	pop	{r4, sl, fp, pc}
   1322c:	push	{r4, sl, fp, lr}
   13230:	add	fp, sp, #8
   13234:	movw	r4, #61352	; 0xefa8
   13238:	movt	r4, #2
   1323c:	ldr	r0, [r4]
   13240:	bl	11730 <rb_close@plt>
   13244:	mov	r0, #0
   13248:	str	r0, [r4]
   1324c:	movw	r0, #61356	; 0xefac
   13250:	movt	r0, #2
   13254:	ldr	r0, [r0]
   13258:	bl	11580 <rb_event_delete@plt>
   1325c:	pop	{r4, sl, fp, lr}
   13260:	b	13168 <sprintf@plt+0x1870>
   13264:	push	{r4, r5, r6, sl, fp, lr}
   13268:	add	fp, sp, #16
   1326c:	sub	sp, sp, #256	; 0x100
   13270:	cmp	r0, #0
   13274:	beq	132b4 <sprintf@plt+0x19bc>
   13278:	mov	r4, r2
   1327c:	mov	r5, r1
   13280:	mov	r1, r0
   13284:	mov	r6, sp
   13288:	mov	r0, r6
   1328c:	mov	r2, #256	; 0x100
   13290:	bl	1167c <rb_strlcpy@plt>
   13294:	mov	r0, r6
   13298:	bl	132d4 <sprintf@plt+0x19dc>
   1329c:	mov	r0, r6
   132a0:	mov	r1, r5
   132a4:	mov	r2, r4
   132a8:	bl	1334c <sprintf@plt+0x1a54>
   132ac:	sub	sp, fp, #16
   132b0:	pop	{r4, r5, r6, sl, fp, pc}
   132b4:	movw	r0, #36107	; 0x8d0b
   132b8:	movt	r0, #1
   132bc:	movw	r1, #36117	; 0x8d15
   132c0:	movt	r1, #1
   132c4:	movw	r3, #36123	; 0x8d1b
   132c8:	movt	r3, #1
   132cc:	mov	r2, #412	; 0x19c
   132d0:	bl	11664 <__assert_fail@plt>
   132d4:	push	{r4, r5, fp, lr}
   132d8:	add	fp, sp, #8
   132dc:	mov	r4, r0
   132e0:	mov	r1, #46	; 0x2e
   132e4:	bl	115e0 <strchr@plt>
   132e8:	cmp	r0, #0
   132ec:	bne	13348 <sprintf@plt+0x1a50>
   132f0:	movw	r0, #61864	; 0xf1a8
   132f4:	movt	r0, #2
   132f8:	ldrb	r0, [r0]
   132fc:	cmp	r0, #0
   13300:	popeq	{r4, r5, fp, pc}
   13304:	mov	r0, r4
   13308:	bl	116f4 <strlen@plt>
   1330c:	mov	r5, r0
   13310:	movw	r0, #61864	; 0xf1a8
   13314:	movt	r0, #2
   13318:	bl	116f4 <strlen@plt>
   1331c:	add	r0, r5, r0
   13320:	add	r0, r0, #2
   13324:	cmp	r0, #254	; 0xfe
   13328:	bhi	13348 <sprintf@plt+0x1a50>
   1332c:	mov	r0, #46	; 0x2e
   13330:	strb	r0, [r4, r5]!
   13334:	add	r0, r4, #1
   13338:	movw	r1, #61864	; 0xf1a8
   1333c:	movt	r1, #2
   13340:	pop	{r4, r5, fp, lr}
   13344:	b	11754 <strcpy@plt>
   13348:	pop	{r4, r5, fp, pc}
   1334c:	cmp	r0, #0
   13350:	beq	1336c <sprintf@plt+0x1a74>
   13354:	mov	r3, r2
   13358:	mov	r2, r1
   1335c:	mov	r1, r0
   13360:	mov	r0, r2
   13364:	mov	r2, #0
   13368:	b	13da4 <sprintf@plt+0x24ac>
   1336c:	push	{fp, lr}
   13370:	mov	fp, sp
   13374:	movw	r0, #36107	; 0x8d0b
   13378:	movt	r0, #1
   1337c:	movw	r1, #36117	; 0x8d15
   13380:	movt	r1, #1
   13384:	movw	r3, #36494	; 0x8e8e
   13388:	movt	r3, #1
   1338c:	movw	r2, #425	; 0x1a9
   13390:	bl	11664 <__assert_fail@plt>
   13394:	mov	r2, r0
   13398:	mov	r0, r1
   1339c:	mov	r1, r2
   133a0:	mov	r2, #0
   133a4:	b	133a8 <sprintf@plt+0x1ab0>
   133a8:	push	{r4, r5, fp, lr}
   133ac:	add	fp, sp, #8
   133b0:	mov	r4, r2
   133b4:	mov	r5, r1
   133b8:	cmp	r2, #0
   133bc:	bne	133e4 <sprintf@plt+0x1aec>
   133c0:	bl	13df4 <sprintf@plt+0x24fc>
   133c4:	mov	r4, r0
   133c8:	add	r0, r0, #292	; 0x124
   133cc:	mov	r1, r5
   133d0:	mov	r2, #128	; 0x80
   133d4:	bl	11718 <memcpy@plt>
   133d8:	mov	r0, #256	; 0x100
   133dc:	bl	13f08 <sprintf@plt+0x2610>
   133e0:	str	r0, [r4, #420]	; 0x1a4
   133e4:	add	r0, r4, #21
   133e8:	mov	r1, #256	; 0x100
   133ec:	mov	r2, r5
   133f0:	mov	r3, #0
   133f4:	bl	1340c <sprintf@plt+0x1b14>
   133f8:	mov	r0, #12
   133fc:	strb	r0, [r4, #20]
   13400:	mov	r0, r4
   13404:	pop	{r4, r5, fp, lr}
   13408:	b	13e7c <sprintf@plt+0x2584>
   1340c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13410:	add	fp, sp, #28
   13414:	sub	sp, sp, #172	; 0xac
   13418:	ldrh	r7, [r2]
   1341c:	cmp	r7, #10
   13420:	beq	13460 <sprintf@plt+0x1b68>
   13424:	cmp	r7, #2
   13428:	subne	sp, fp, #28
   1342c:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13430:	movw	r7, #36201	; 0x8d69
   13434:	movt	r7, #1
   13438:	cmp	r3, #0
   1343c:	movne	r7, r3
   13440:	ldrb	r6, [r2, #4]
   13444:	ldrb	r5, [r2, #5]
   13448:	ldrb	r4, [r2, #6]
   1344c:	ldrb	r3, [r2, #7]
   13450:	stm	sp, {r4, r5, r6, r7}
   13454:	movw	r2, #36186	; 0x8d5a
   13458:	movt	r2, #1
   1345c:	b	135f0 <sprintf@plt+0x1cf8>
   13460:	movw	r5, #36313	; 0x8dd9
   13464:	movt	r5, #1
   13468:	cmp	r3, #0
   1346c:	movne	r5, r3
   13470:	ldrb	r3, [r2, #23]
   13474:	str	r3, [fp, #-32]	; 0xffffffe0
   13478:	ldrb	r3, [r2, #22]
   1347c:	str	r3, [fp, #-36]	; 0xffffffdc
   13480:	ldrb	r3, [r2, #21]
   13484:	str	r3, [fp, #-40]	; 0xffffffd8
   13488:	ldrb	r3, [r2, #20]
   1348c:	str	r3, [fp, #-48]	; 0xffffffd0
   13490:	ldrb	r3, [r2, #19]
   13494:	str	r3, [fp, #-56]	; 0xffffffc8
   13498:	ldrb	r3, [r2, #18]
   1349c:	str	r3, [fp, #-60]	; 0xffffffc4
   134a0:	ldrb	r3, [r2, #17]
   134a4:	str	r3, [fp, #-64]	; 0xffffffc0
   134a8:	ldrb	r3, [r2, #16]
   134ac:	str	r3, [fp, #-68]	; 0xffffffbc
   134b0:	ldrb	r6, [r2, #15]
   134b4:	ldrb	r3, [r2, #14]
   134b8:	ldrb	ip, [r2, #13]
   134bc:	ldrb	lr, [r2, #12]
   134c0:	ldrb	r8, [r2, #8]
   134c4:	ldrb	r9, [r2, #9]
   134c8:	ldrb	sl, [r2, #10]
   134cc:	ldrb	r2, [r2, #11]
   134d0:	lsr	r4, r8, #4
   134d4:	and	r8, r8, #15
   134d8:	str	r1, [fp, #-44]	; 0xffffffd4
   134dc:	lsr	r1, r9, #4
   134e0:	and	r9, r9, #15
   134e4:	str	r0, [fp, #-52]	; 0xffffffcc
   134e8:	lsr	r0, sl, #4
   134ec:	and	sl, sl, #15
   134f0:	lsr	r7, r2, #4
   134f4:	str	r7, [sp, #96]	; 0x60
   134f8:	str	sl, [sp, #100]	; 0x64
   134fc:	str	r0, [sp, #104]	; 0x68
   13500:	str	r9, [sp, #108]	; 0x6c
   13504:	str	r1, [sp, #112]	; 0x70
   13508:	str	r8, [sp, #116]	; 0x74
   1350c:	str	r4, [sp, #120]	; 0x78
   13510:	str	r5, [sp, #124]	; 0x7c
   13514:	and	r8, r2, #15
   13518:	lsr	r1, lr, #4
   1351c:	and	r2, lr, #15
   13520:	lsr	r7, ip, #4
   13524:	and	r5, ip, #15
   13528:	lsr	r4, r3, #4
   1352c:	and	r3, r3, #15
   13530:	mov	r0, r6
   13534:	lsr	r6, r6, #4
   13538:	str	r6, [sp, #64]	; 0x40
   1353c:	add	ip, sp, #68	; 0x44
   13540:	stm	ip, {r3, r4, r5, r7}
   13544:	str	r2, [sp, #84]	; 0x54
   13548:	str	r1, [sp, #88]	; 0x58
   1354c:	str	r8, [sp, #92]	; 0x5c
   13550:	and	ip, r0, #15
   13554:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13558:	lsr	r1, r0, #4
   1355c:	and	r2, r0, #15
   13560:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13564:	lsr	r3, r0, #4
   13568:	and	r7, r0, #15
   1356c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13570:	lsr	r6, r0, #4
   13574:	and	r5, r0, #15
   13578:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1357c:	lsr	r4, r0, #4
   13580:	add	lr, sp, #32
   13584:	stm	lr, {r4, r5, r6, r7}
   13588:	str	r3, [sp, #48]	; 0x30
   1358c:	str	r2, [sp, #52]	; 0x34
   13590:	str	r1, [sp, #56]	; 0x38
   13594:	str	ip, [sp, #60]	; 0x3c
   13598:	and	ip, r0, #15
   1359c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   135a0:	lsr	r1, r0, #4
   135a4:	and	r2, r0, #15
   135a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   135ac:	lsr	r3, r0, #4
   135b0:	and	r7, r0, #15
   135b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   135b8:	lsr	r6, r0, #4
   135bc:	and	r5, r0, #15
   135c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   135c4:	lsr	r4, r0, #4
   135c8:	stm	sp, {r4, r5, r6, r7}
   135cc:	str	r3, [sp, #16]
   135d0:	str	r2, [sp, #20]
   135d4:	str	r1, [sp, #24]
   135d8:	str	ip, [sp, #28]
   135dc:	and	r3, r0, #15
   135e0:	movw	r2, #36214	; 0x8d76
   135e4:	movt	r2, #1
   135e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   135ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   135f0:	bl	11880 <snprintf@plt>
   135f4:	sub	sp, fp, #28
   135f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135fc:	push	{r4, sl, fp, lr}
   13600:	add	fp, sp, #8
   13604:	mov	r4, r0
   13608:	mov	r0, r4
   1360c:	bl	13648 <sprintf@plt+0x1d50>
   13610:	cmp	r0, #0
   13614:	bne	13608 <sprintf@plt+0x1d10>
   13618:	movw	r2, #13820	; 0x35fc
   1361c:	movt	r2, #1
   13620:	mov	r0, r4
   13624:	mov	r1, #1
   13628:	mov	r3, #0
   1362c:	pop	{r4, sl, fp, lr}
   13630:	b	1158c <rb_setselect@plt>
   13634:	push	{fp, lr}
   13638:	mov	fp, sp
   1363c:	bl	11700 <rb_current_time@plt>
   13640:	pop	{fp, lr}
   13644:	b	1421c <sprintf@plt+0x2924>
   13648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1364c:	add	fp, sp, #28
   13650:	sub	sp, sp, #164	; 0xa4
   13654:	sub	sp, sp, #1024	; 0x400
   13658:	mov	r1, #128	; 0x80
   1365c:	str	r1, [sp, #140]	; 0x8c
   13660:	bl	11598 <rb_get_fd@plt>
   13664:	add	r1, sp, #140	; 0x8c
   13668:	add	r2, sp, #12
   1366c:	str	r2, [sp]
   13670:	str	r1, [sp, #4]
   13674:	add	sl, sp, #144	; 0x90
   13678:	mov	r9, #0
   1367c:	mov	r1, sl
   13680:	movw	r2, #1036	; 0x40c
   13684:	mov	r3, #0
   13688:	bl	118a4 <recvfrom@plt>
   1368c:	mov	r6, r0
   13690:	add	r0, r0, #1
   13694:	cmp	r0, #2
   13698:	bcc	13888 <sprintf@plt+0x1f90>
   1369c:	mov	r9, #1
   136a0:	cmp	r6, #13
   136a4:	blt	13888 <sprintf@plt+0x1f90>
   136a8:	ldr	r8, [sp, #144]	; 0x90
   136ac:	ldr	r7, [sp, #148]	; 0x94
   136b0:	ldr	r4, [sp, #152]	; 0x98
   136b4:	lsr	r0, r7, #16
   136b8:	bl	13894 <sprintf@plt+0x1f9c>
   136bc:	mov	r5, r0
   136c0:	uxth	r0, r7
   136c4:	bl	13894 <sprintf@plt+0x1f9c>
   136c8:	orr	r7, r0, r5, lsl #16
   136cc:	uxth	r0, r4
   136d0:	bl	13894 <sprintf@plt+0x1f9c>
   136d4:	mov	r5, r0
   136d8:	lsr	r0, r4, #16
   136dc:	bl	13894 <sprintf@plt+0x1f9c>
   136e0:	str	r7, [sp, #148]	; 0x94
   136e4:	str	r8, [sp, #144]	; 0x90
   136e8:	orr	r0, r5, r0, lsl #16
   136ec:	str	r0, [sp, #152]	; 0x98
   136f0:	uxth	r0, r8
   136f4:	bl	1389c <sprintf@plt+0x1fa4>
   136f8:	cmp	r0, #0
   136fc:	beq	13888 <sprintf@plt+0x1f90>
   13700:	mov	r5, r0
   13704:	add	r0, sp, #12
   13708:	bl	138dc <sprintf@plt+0x1fe4>
   1370c:	cmn	r0, #1
   13710:	beq	13888 <sprintf@plt+0x1f90>
   13714:	mov	r8, r0
   13718:	ldr	r0, [r5, #288]	; 0x120
   1371c:	cmp	r8, r0
   13720:	beq	13738 <sprintf@plt+0x1e40>
   13724:	movw	r0, #61360	; 0xefb0
   13728:	movt	r0, #2
   1372c:	ldr	r1, [r0, r8, lsl #2]
   13730:	add	r1, r1, #3
   13734:	str	r1, [r0, r8, lsl #2]
   13738:	add	r6, sl, r6
   1373c:	mov	r0, r5
   13740:	mov	r1, sl
   13744:	mov	r2, sl
   13748:	mov	r3, r6
   1374c:	bl	139e0 <sprintf@plt+0x20e8>
   13750:	cmp	r0, #0
   13754:	beq	13888 <sprintf@plt+0x1f90>
   13758:	ldr	r0, [sp, #144]	; 0x90
   1375c:	tst	r0, #251658240	; 0xf000000
   13760:	bne	137c8 <sprintf@plt+0x1ed0>
   13764:	ldr	r1, [sp, #148]	; 0x94
   13768:	bfc	r1, #0, #16
   1376c:	cmp	r1, #0
   13770:	beq	137c8 <sprintf@plt+0x1ed0>
   13774:	add	r1, sp, #144	; 0x90
   13778:	mov	r0, r5
   1377c:	mov	r2, r1
   13780:	mov	r3, r6
   13784:	bl	13aec <sprintf@plt+0x21f4>
   13788:	cmp	r0, #0
   1378c:	beq	137e8 <sprintf@plt+0x1ef0>
   13790:	ldrb	r0, [r5, #20]
   13794:	cmp	r0, #12
   13798:	bne	13808 <sprintf@plt+0x1f10>
   1379c:	ldr	r0, [r5, #420]	; 0x1a4
   137a0:	cmp	r0, #0
   137a4:	beq	137e8 <sprintf@plt+0x1ef0>
   137a8:	mov	r1, #292	; 0x124
   137ac:	ldrh	r2, [r5, r1]
   137b0:	ldr	r1, [r5, #424]	; 0x1a8
   137b4:	cmp	r2, #10
   137b8:	movne	r2, #1
   137bc:	moveq	r2, #28
   137c0:	bl	1334c <sprintf@plt+0x1a54>
   137c4:	b	1382c <sprintf@plt+0x1f34>
   137c8:	ubfx	r0, r0, #24, #4
   137cc:	sub	r1, r0, #4
   137d0:	cmp	r1, #2
   137d4:	bcc	137e8 <sprintf@plt+0x1ef0>
   137d8:	cmp	r0, #3
   137dc:	beq	13854 <sprintf@plt+0x1f5c>
   137e0:	cmp	r0, #2
   137e4:	bne	13870 <sprintf@plt+0x1f78>
   137e8:	movw	r0, #61360	; 0xefb0
   137ec:	movt	r0, #2
   137f0:	ldr	r1, [r0, r8, lsl #2]
   137f4:	add	r1, r1, #1
   137f8:	str	r1, [r0, r8, lsl #2]
   137fc:	mov	r0, r5
   13800:	bl	13a4c <sprintf@plt+0x2154>
   13804:	b	13888 <sprintf@plt+0x1f90>
   13808:	mov	r0, r5
   1380c:	bl	13d08 <sprintf@plt+0x2410>
   13810:	mov	r6, r0
   13814:	ldr	r1, [r5, #424]	; 0x1a8
   13818:	ldm	r1, {r0, r2}
   1381c:	mov	r1, r6
   13820:	blx	r2
   13824:	mov	r0, r6
   13828:	bl	13d98 <sprintf@plt+0x24a0>
   1382c:	mov	r0, r5
   13830:	bl	13ac8 <sprintf@plt+0x21d0>
   13834:	movw	r0, #61360	; 0xefb0
   13838:	movt	r0, #2
   1383c:	ldr	r1, [r0, r8, lsl #2]
   13840:	asr	r2, r1, #31
   13844:	add	r1, r1, r2, lsr #30
   13848:	asr	r1, r1, #2
   1384c:	str	r1, [r0, r8, lsl #2]
   13850:	b	13888 <sprintf@plt+0x1f90>
   13854:	movw	r0, #61360	; 0xefb0
   13858:	movt	r0, #2
   1385c:	ldr	r1, [r0, r8, lsl #2]
   13860:	asr	r2, r1, #31
   13864:	add	r1, r1, r2, lsr #30
   13868:	asr	r1, r1, #2
   1386c:	str	r1, [r0, r8, lsl #2]
   13870:	ldr	r1, [r5, #424]	; 0x1a8
   13874:	ldm	r1, {r0, r2}
   13878:	mov	r1, #0
   1387c:	blx	r2
   13880:	mov	r0, r5
   13884:	bl	13ac8 <sprintf@plt+0x21d0>
   13888:	mov	r0, r9
   1388c:	sub	sp, fp, #28
   13890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13894:	rev16	r0, r0
   13898:	bx	lr
   1389c:	movw	r1, #61400	; 0xefd8
   138a0:	movt	r1, #2
   138a4:	ldr	r2, [r1]
   138a8:	cmp	r2, #0
   138ac:	beq	138d0 <sprintf@plt+0x1fd8>
   138b0:	ldr	r1, [r2]
   138b4:	ldr	r3, [r1, #12]
   138b8:	cmp	r3, r0
   138bc:	moveq	r0, r1
   138c0:	bxeq	lr
   138c4:	ldr	r2, [r2, #8]
   138c8:	cmp	r2, #0
   138cc:	bne	138b0 <sprintf@plt+0x1fb8>
   138d0:	mov	r1, #0
   138d4:	mov	r0, r1
   138d8:	bx	lr
   138dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138e0:	add	fp, sp, #28
   138e4:	sub	sp, sp, #4
   138e8:	mov	r4, r0
   138ec:	movw	r0, #61416	; 0xefe8
   138f0:	movt	r0, #2
   138f4:	ldr	r1, [r0]
   138f8:	cmp	r1, #1
   138fc:	blt	139d0 <sprintf@plt+0x20d8>
   13900:	movw	r1, #62120	; 0xf2a8
   13904:	movt	r1, #2
   13908:	add	r5, r1, #4
   1390c:	add	r9, r4, #8
   13910:	ldr	sl, [r0]
   13914:	mov	r8, #0
   13918:	ldrh	r0, [r5, #-4]
   1391c:	cmp	r0, #2
   13920:	beq	13948 <sprintf@plt+0x2050>
   13924:	cmp	r0, #10
   13928:	ldrheq	r1, [r4]
   1392c:	cmpeq	r0, r1
   13930:	beq	13980 <sprintf@plt+0x2088>
   13934:	add	r5, r5, #128	; 0x80
   13938:	add	r8, r8, #1
   1393c:	cmp	r8, sl
   13940:	blt	13918 <sprintf@plt+0x2020>
   13944:	b	139d0 <sprintf@plt+0x20d8>
   13948:	ldrh	r1, [r4]
   1394c:	cmp	r0, r1
   13950:	bne	13934 <sprintf@plt+0x203c>
   13954:	ldrh	r0, [r4, #2]
   13958:	ldrh	r1, [r5, #-2]
   1395c:	cmp	r1, r0
   13960:	bne	13934 <sprintf@plt+0x203c>
   13964:	ldr	r0, [r5]
   13968:	mov	r7, #1
   1396c:	cmp	r0, #0
   13970:	ldrne	r1, [r4, #4]
   13974:	cmpne	r0, r1
   13978:	beq	139d4 <sprintf@plt+0x20dc>
   1397c:	b	13934 <sprintf@plt+0x203c>
   13980:	ldrh	r0, [r4, #2]
   13984:	ldrh	r1, [r5, #-2]
   13988:	cmp	r1, r0
   1398c:	bne	13934 <sprintf@plt+0x203c>
   13990:	add	r6, r5, #4
   13994:	mov	r0, r6
   13998:	mov	r1, r9
   1399c:	mov	r2, #16
   139a0:	bl	11568 <memcmp@plt>
   139a4:	mov	r7, #1
   139a8:	cmp	r0, #0
   139ac:	beq	139d4 <sprintf@plt+0x20dc>
   139b0:	mov	r0, r6
   139b4:	movw	r1, #40680	; 0x9ee8
   139b8:	movt	r1, #2
   139bc:	mov	r2, #16
   139c0:	bl	11568 <memcmp@plt>
   139c4:	cmp	r0, #0
   139c8:	bne	13934 <sprintf@plt+0x203c>
   139cc:	b	139d4 <sprintf@plt+0x20dc>
   139d0:	mov	r7, #0
   139d4:	mov	r0, r7
   139d8:	sub	sp, fp, #28
   139dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139e0:	push	{r4, r5, r6, sl, fp, lr}
   139e4:	add	fp, sp, #16
   139e8:	sub	sp, sp, #264	; 0x108
   139ec:	mov	r6, r0
   139f0:	ldrh	r0, [r1, #4]
   139f4:	mov	r4, #0
   139f8:	teq	r0, #1
   139fc:	bne	13a40 <sprintf@plt+0x2148>
   13a00:	mov	r0, #256	; 0x100
   13a04:	str	r0, [sp]
   13a08:	add	r5, r2, #12
   13a0c:	add	ip, sp, #8
   13a10:	mov	r0, r2
   13a14:	mov	r1, r3
   13a18:	mov	r2, r5
   13a1c:	mov	r3, ip
   13a20:	bl	144ec <sprintf@plt+0x2bf4>
   13a24:	cmp	r0, #1
   13a28:	blt	13a40 <sprintf@plt+0x2148>
   13a2c:	add	r1, r6, #21
   13a30:	add	r0, sp, #8
   13a34:	bl	116c4 <rb_strcasecmp@plt>
   13a38:	clz	r0, r0
   13a3c:	lsr	r4, r0, #5
   13a40:	mov	r0, r4
   13a44:	sub	sp, fp, #16
   13a48:	pop	{r4, r5, r6, sl, fp, pc}
   13a4c:	push	{r4, sl, fp, lr}
   13a50:	add	fp, sp, #8
   13a54:	mov	r4, r0
   13a58:	ldrb	r0, [r0, #277]	; 0x115
   13a5c:	sub	r0, r0, #1
   13a60:	strb	r0, [r4, #277]	; 0x115
   13a64:	tst	r0, #255	; 0xff
   13a68:	beq	13a90 <sprintf@plt+0x2198>
   13a6c:	ldrb	r3, [r4, #20]
   13a70:	cmp	r3, #1
   13a74:	cmpne	r3, #28
   13a78:	bne	13aac <sprintf@plt+0x21b4>
   13a7c:	ldr	r1, [r4, #420]	; 0x1a4
   13a80:	mov	r0, #0
   13a84:	mov	r2, r4
   13a88:	pop	{r4, sl, fp, lr}
   13a8c:	b	13da4 <sprintf@plt+0x24ac>
   13a90:	ldr	r1, [r4, #424]	; 0x1a8
   13a94:	ldm	r1, {r0, r2}
   13a98:	mov	r1, #0
   13a9c:	blx	r2
   13aa0:	mov	r0, r4
   13aa4:	pop	{r4, sl, fp, lr}
   13aa8:	b	13ac8 <sprintf@plt+0x21d0>
   13aac:	cmp	r3, #12
   13ab0:	popne	{r4, sl, fp, pc}
   13ab4:	add	r1, r4, #292	; 0x124
   13ab8:	mov	r0, #0
   13abc:	mov	r2, r4
   13ac0:	pop	{r4, sl, fp, lr}
   13ac4:	b	133a8 <sprintf@plt+0x1ab0>
   13ac8:	push	{r4, sl, fp, lr}
   13acc:	add	fp, sp, #8
   13ad0:	mov	r4, r0
   13ad4:	bl	141a0 <sprintf@plt+0x28a8>
   13ad8:	ldr	r0, [r4, #420]	; 0x1a4
   13adc:	bl	13d98 <sprintf@plt+0x24a0>
   13ae0:	mov	r0, r4
   13ae4:	pop	{r4, sl, fp, lr}
   13ae8:	b	13d98 <sprintf@plt+0x24a0>
   13aec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13af0:	add	fp, sp, #28
   13af4:	sub	sp, sp, #372	; 0x174
   13af8:	mov	r9, r3
   13afc:	mov	r4, r1
   13b00:	stmib	sp, {r0, r2}
   13b04:	add	r5, r2, #12
   13b08:	ldrh	r0, [r1, #4]
   13b0c:	cmp	r0, #0
   13b10:	beq	13b4c <sprintf@plt+0x2254>
   13b14:	movw	r7, #65535	; 0xffff
   13b18:	mov	r0, r5
   13b1c:	mov	r1, r9
   13b20:	bl	1457c <sprintf@plt+0x2c84>
   13b24:	cmp	r0, #0
   13b28:	blt	13cf8 <sprintf@plt+0x2400>
   13b2c:	ldr	r1, [r4, #4]
   13b30:	sub	r2, r1, #1
   13b34:	pkhbt	r1, r2, r1
   13b38:	str	r1, [r4, #4]
   13b3c:	add	r0, r5, r0
   13b40:	add	r5, r0, #4
   13b44:	tst	r2, r7
   13b48:	bne	13b18 <sprintf@plt+0x2220>
   13b4c:	cmp	r5, r9
   13b50:	bcs	13cf0 <sprintf@plt+0x23f8>
   13b54:	ldr	r1, [r4, #4]
   13b58:	ldr	r0, [r4, #8]
   13b5c:	lsr	r2, r1, #16
   13b60:	orr	r3, r2, r0, lsl #16
   13b64:	uxth	r2, r3
   13b68:	cmp	r2, #0
   13b6c:	beq	13cf0 <sprintf@plt+0x23f8>
   13b70:	ldr	r2, [r4]
   13b74:	mov	r6, #0
   13b78:	movw	r7, #0
   13b7c:	movt	r7, #65535	; 0xffff
   13b80:	add	r3, r7, r3, lsl #16
   13b84:	uxth	r1, r1
   13b88:	orr	r1, r3, r1
   13b8c:	str	r2, [r4]
   13b90:	str	r1, [r4, #4]
   13b94:	str	r0, [r4, #8]
   13b98:	movw	r0, #355	; 0x163
   13b9c:	str	r0, [sp]
   13ba0:	ldr	r0, [sp, #8]
   13ba4:	mov	r1, r9
   13ba8:	mov	r2, r5
   13bac:	add	r3, sp, #13
   13bb0:	bl	144ec <sprintf@plt+0x2bf4>
   13bb4:	cmp	r0, #1
   13bb8:	blt	13cfc <sprintf@plt+0x2404>
   13bbc:	strb	r6, [sp, #268]	; 0x10c
   13bc0:	add	r8, r5, r0
   13bc4:	add	r5, r8, #10
   13bc8:	cmp	r5, r9
   13bcc:	bcs	13cf0 <sprintf@plt+0x23f8>
   13bd0:	mov	r0, r8
   13bd4:	bl	14640 <sprintf@plt+0x2d48>
   13bd8:	mov	sl, r0
   13bdc:	add	r0, r8, #2
   13be0:	bl	14640 <sprintf@plt+0x2d48>
   13be4:	add	r0, r8, #4
   13be8:	bl	14650 <sprintf@plt+0x2d58>
   13bec:	ldr	r7, [sp, #4]
   13bf0:	str	r0, [r7, #16]
   13bf4:	add	r0, r8, #8
   13bf8:	bl	14640 <sprintf@plt+0x2d48>
   13bfc:	cmp	sl, #28
   13c00:	beq	13c48 <sprintf@plt+0x2350>
   13c04:	cmp	sl, #12
   13c08:	beq	13c7c <sprintf@plt+0x2384>
   13c0c:	cmp	sl, #1
   13c10:	beq	13cc4 <sprintf@plt+0x23cc>
   13c14:	add	r5, r5, r0
   13c18:	cmp	r5, r9
   13c1c:	bcs	13cf0 <sprintf@plt+0x23f8>
   13c20:	ldr	r2, [r4]
   13c24:	ldr	r1, [r4, #4]
   13c28:	ldr	r0, [r4, #8]
   13c2c:	lsr	r3, r1, #16
   13c30:	orr	r3, r3, r0, lsl #16
   13c34:	uxth	r7, r3
   13c38:	cmp	r7, #0
   13c3c:	mov	r6, #0
   13c40:	bne	13b78 <sprintf@plt+0x2280>
   13c44:	b	13cf0 <sprintf@plt+0x23f8>
   13c48:	cmp	r0, #16
   13c4c:	bne	13cf8 <sprintf@plt+0x2400>
   13c50:	ldrb	r0, [r7, #20]
   13c54:	cmp	r0, #28
   13c58:	mov	r6, #0
   13c5c:	bne	13cfc <sprintf@plt+0x2404>
   13c60:	mov	r0, #292	; 0x124
   13c64:	mov	r1, #10
   13c68:	strh	r1, [r7, r0]
   13c6c:	vld1.8	{d16-d17}, [r5]
   13c70:	add	r0, r7, #300	; 0x12c
   13c74:	vst1.8	{d16-d17}, [r0]
   13c78:	b	13cf0 <sprintf@plt+0x23f8>
   13c7c:	ldrb	r0, [r7, #20]
   13c80:	cmp	r0, #12
   13c84:	bne	13cf8 <sprintf@plt+0x2400>
   13c88:	movw	r0, #355	; 0x163
   13c8c:	str	r0, [sp]
   13c90:	add	r3, sp, #13
   13c94:	ldr	r0, [sp, #8]
   13c98:	mov	r1, r9
   13c9c:	mov	r2, r5
   13ca0:	bl	144ec <sprintf@plt+0x2bf4>
   13ca4:	cmp	r0, #1
   13ca8:	mov	r6, #0
   13cac:	blt	13cfc <sprintf@plt+0x2404>
   13cb0:	ldr	r0, [r7, #420]	; 0x1a4
   13cb4:	add	r1, sp, #13
   13cb8:	mov	r2, #256	; 0x100
   13cbc:	bl	1167c <rb_strlcpy@plt>
   13cc0:	b	13cf0 <sprintf@plt+0x23f8>
   13cc4:	cmp	r0, #4
   13cc8:	bne	13cf8 <sprintf@plt+0x2400>
   13ccc:	ldrb	r0, [r7, #20]
   13cd0:	cmp	r0, #1
   13cd4:	mov	r6, #0
   13cd8:	bne	13cfc <sprintf@plt+0x2404>
   13cdc:	mov	r0, #292	; 0x124
   13ce0:	mov	r1, #2
   13ce4:	strh	r1, [r7, r0]
   13ce8:	ldr	r0, [r5]
   13cec:	str	r0, [r7, #296]	; 0x128
   13cf0:	mov	r6, #1
   13cf4:	b	13cfc <sprintf@plt+0x2404>
   13cf8:	mov	r6, #0
   13cfc:	mov	r0, r6
   13d00:	sub	sp, fp, #28
   13d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d08:	push	{r4, r5, fp, lr}
   13d0c:	add	fp, sp, #8
   13d10:	sub	sp, sp, #8
   13d14:	cmp	r0, #0
   13d18:	beq	13d4c <sprintf@plt+0x2454>
   13d1c:	mov	r4, r0
   13d20:	mov	r0, #132	; 0x84
   13d24:	bl	13f08 <sprintf@plt+0x2610>
   13d28:	mov	r5, r0
   13d2c:	ldr	r1, [r4, #420]	; 0x1a4
   13d30:	str	r1, [r0], #4
   13d34:	add	r1, r4, #292	; 0x124
   13d38:	mov	r2, #128	; 0x80
   13d3c:	bl	11718 <memcpy@plt>
   13d40:	mov	r0, r5
   13d44:	sub	sp, fp, #8
   13d48:	pop	{r4, r5, fp, pc}
   13d4c:	movw	r0, #36455	; 0x8e67
   13d50:	movt	r0, #1
   13d54:	str	r0, [sp]
   13d58:	movw	r0, #36359	; 0x8e07
   13d5c:	movt	r0, #1
   13d60:	movw	r4, #36117	; 0x8d15
   13d64:	movt	r4, #1
   13d68:	movw	r5, #36406	; 0x8e36
   13d6c:	movt	r5, #1
   13d70:	mov	r1, r4
   13d74:	movw	r2, #878	; 0x36e
   13d78:	mov	r3, r5
   13d7c:	bl	11784 <rb_lib_log@plt>
   13d80:	movw	r0, #36468	; 0x8e74
   13d84:	movt	r0, #1
   13d88:	mov	r1, r4
   13d8c:	movw	r2, #878	; 0x36e
   13d90:	mov	r3, r5
   13d94:	bl	11664 <__assert_fail@plt>
   13d98:	cmp	r0, #0
   13d9c:	bxeq	lr
   13da0:	b	116a0 <free@plt>
   13da4:	push	{r4, r5, r6, sl, fp, lr}
   13da8:	add	fp, sp, #16
   13dac:	mov	r4, r3
   13db0:	mov	r5, r2
   13db4:	mov	r6, r1
   13db8:	cmp	r2, #0
   13dbc:	bne	13dd4 <sprintf@plt+0x24dc>
   13dc0:	bl	13df4 <sprintf@plt+0x24fc>
   13dc4:	mov	r5, r0
   13dc8:	mov	r0, r6
   13dcc:	bl	13e44 <sprintf@plt+0x254c>
   13dd0:	str	r0, [r5, #420]	; 0x1a4
   13dd4:	add	r0, r5, #21
   13dd8:	mov	r1, r6
   13ddc:	mov	r2, #256	; 0x100
   13de0:	bl	1167c <rb_strlcpy@plt>
   13de4:	strb	r4, [r5, #20]
   13de8:	mov	r0, r5
   13dec:	pop	{r4, r5, r6, sl, fp, lr}
   13df0:	b	13e7c <sprintf@plt+0x2584>
   13df4:	push	{r4, r5, fp, lr}
   13df8:	add	fp, sp, #8
   13dfc:	mov	r4, r0
   13e00:	mov	r0, #428	; 0x1ac
   13e04:	bl	13f08 <sprintf@plt+0x2610>
   13e08:	mov	r5, r0
   13e0c:	bl	11700 <rb_current_time@plt>
   13e10:	mov	r1, #3
   13e14:	strb	r1, [r5, #277]	; 0x115
   13e18:	mov	r1, #4
   13e1c:	str	r0, [r5, #280]	; 0x118
   13e20:	str	r1, [r5, #284]	; 0x11c
   13e24:	str	r4, [r5, #424]	; 0x1a8
   13e28:	bl	13f28 <sprintf@plt+0x2630>
   13e2c:	str	r0, [r5, #12]
   13e30:	mov	r0, r5
   13e34:	mov	r1, r5
   13e38:	bl	13f64 <sprintf@plt+0x266c>
   13e3c:	mov	r0, r5
   13e40:	pop	{r4, r5, fp, pc}
   13e44:	push	{r4, r5, fp, lr}
   13e48:	add	fp, sp, #8
   13e4c:	mov	r4, r0
   13e50:	bl	116f4 <strlen@plt>
   13e54:	add	r0, r0, #1
   13e58:	bl	117f0 <malloc@plt>
   13e5c:	cmp	r0, #0
   13e60:	beq	13e78 <sprintf@plt+0x2580>
   13e64:	mov	r5, r0
   13e68:	mov	r1, r4
   13e6c:	bl	11754 <strcpy@plt>
   13e70:	mov	r0, r5
   13e74:	pop	{r4, r5, fp, pc}
   13e78:	bl	117c0 <rb_outofmemory@plt>
   13e7c:	push	{r4, r5, r6, sl, fp, lr}
   13e80:	add	fp, sp, #16
   13e84:	sub	sp, sp, #8
   13e88:	sub	sp, sp, #1024	; 0x400
   13e8c:	mov	r4, r0
   13e90:	add	r5, sp, #8
   13e94:	mov	r6, #1024	; 0x400
   13e98:	mov	r0, r5
   13e9c:	mov	r1, #0
   13ea0:	mov	r2, #1024	; 0x400
   13ea4:	bl	11634 <memset@plt>
   13ea8:	ldrb	r2, [r4, #20]
   13eac:	str	r6, [sp]
   13eb0:	add	r0, r4, #21
   13eb4:	mov	r1, #1
   13eb8:	mov	r3, r5
   13ebc:	bl	1468c <sprintf@plt+0x2d94>
   13ec0:	cmp	r0, #1
   13ec4:	blt	13f00 <sprintf@plt+0x2608>
   13ec8:	mov	r1, r0
   13ecc:	ldrh	r0, [r4, #12]
   13ed0:	ldr	r2, [sp, #8]
   13ed4:	bfc	r2, #0, #16
   13ed8:	orr	r0, r2, r0
   13edc:	str	r0, [sp, #8]
   13ee0:	ldrb	r0, [r4, #278]	; 0x116
   13ee4:	add	r0, r0, #1
   13ee8:	strb	r0, [r4, #278]	; 0x116
   13eec:	uxtb	r2, r0
   13ef0:	add	r0, sp, #8
   13ef4:	bl	1400c <sprintf@plt+0x2714>
   13ef8:	cmn	r0, #1
   13efc:	strne	r0, [r4, #288]	; 0x120
   13f00:	sub	sp, fp, #16
   13f04:	pop	{r4, r5, r6, sl, fp, pc}
   13f08:	push	{fp, lr}
   13f0c:	mov	fp, sp
   13f10:	mov	r1, r0
   13f14:	mov	r0, #1
   13f18:	bl	11604 <calloc@plt>
   13f1c:	cmp	r0, #0
   13f20:	popne	{fp, pc}
   13f24:	bl	117c0 <rb_outofmemory@plt>
   13f28:	push	{r4, r5, fp, lr}
   13f2c:	add	fp, sp, #8
   13f30:	sub	sp, sp, #8
   13f34:	add	r4, sp, #6
   13f38:	mov	r0, r4
   13f3c:	mov	r1, #2
   13f40:	bl	11868 <rb_get_random@plt>
   13f44:	ldrh	r5, [sp, #6]
   13f48:	mov	r0, r5
   13f4c:	bl	1389c <sprintf@plt+0x1fa4>
   13f50:	cmp	r0, #0
   13f54:	bne	13f38 <sprintf@plt+0x2640>
   13f58:	mov	r0, r5
   13f5c:	sub	sp, fp, #8
   13f60:	pop	{r4, r5, fp, pc}
   13f64:	push	{fp, lr}
   13f68:	mov	fp, sp
   13f6c:	cmp	r0, #0
   13f70:	beq	13fcc <sprintf@plt+0x26d4>
   13f74:	cmp	r1, #0
   13f78:	beq	13fec <sprintf@plt+0x26f4>
   13f7c:	mov	r2, #0
   13f80:	stm	r1, {r0, r2}
   13f84:	movw	r0, #61400	; 0xefd8
   13f88:	movt	r0, #2
   13f8c:	ldr	r2, [r0]
   13f90:	str	r2, [r1, #8]
   13f94:	cmp	r2, #0
   13f98:	beq	13fa8 <sprintf@plt+0x26b0>
   13f9c:	add	r2, r2, #4
   13fa0:	str	r1, [r2]
   13fa4:	b	13fb8 <sprintf@plt+0x26c0>
   13fa8:	mov	r2, r0
   13fac:	ldr	r3, [r2, #4]!
   13fb0:	cmp	r3, #0
   13fb4:	streq	r1, [r2]
   13fb8:	str	r1, [r0]
   13fbc:	ldr	r1, [r0, #8]
   13fc0:	add	r1, r1, #1
   13fc4:	str	r1, [r0, #8]
   13fc8:	pop	{fp, pc}
   13fcc:	movw	r0, #35983	; 0x8c8f
   13fd0:	movt	r0, #1
   13fd4:	movw	r1, #35888	; 0x8c30
   13fd8:	movt	r1, #1
   13fdc:	movw	r3, #35996	; 0x8c9c
   13fe0:	movt	r3, #1
   13fe4:	mov	r2, #143	; 0x8f
   13fe8:	bl	11664 <__assert_fail@plt>
   13fec:	movw	r0, #37195	; 0x914b
   13ff0:	movt	r0, #1
   13ff4:	movw	r1, #35888	; 0x8c30
   13ff8:	movt	r1, #1
   13ffc:	movw	r3, #35996	; 0x8c9c
   14000:	movt	r3, #1
   14004:	mov	r2, #144	; 0x90
   14008:	bl	11664 <__assert_fail@plt>
   1400c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14010:	add	fp, sp, #28
   14014:	sub	sp, sp, #12
   14018:	mov	r4, r1
   1401c:	mov	r9, r0
   14020:	movw	r1, #61412	; 0xefe4
   14024:	movt	r1, #2
   14028:	ldr	r0, [r1]
   1402c:	add	r0, r0, #1
   14030:	str	r0, [r1]
   14034:	movw	r8, #61416	; 0xefe8
   14038:	movt	r8, #2
   1403c:	ldr	r0, [r8]
   14040:	cmp	r0, #1
   14044:	blt	14174 <sprintf@plt+0x287c>
   14048:	sub	r7, r2, #1
   1404c:	mov	sl, #0
   14050:	add	r1, r7, sl
   14054:	sdiv	r2, r1, r0
   14058:	mls	r6, r2, r0, r1
   1405c:	movw	r0, #61360	; 0xefb0
   14060:	movt	r0, #2
   14064:	ldr	r0, [r0, r6, lsl #2]
   14068:	cmp	r0, #0
   1406c:	beq	14090 <sprintf@plt+0x2798>
   14070:	movw	r1, #61412	; 0xefe4
   14074:	movt	r1, #2
   14078:	ldr	r5, [r1]
   1407c:	bl	14184 <sprintf@plt+0x288c>
   14080:	sdiv	r1, r5, r0
   14084:	mls	r0, r1, r0, r5
   14088:	cmp	r0, #0
   1408c:	bne	140dc <sprintf@plt+0x27e4>
   14090:	movw	r0, #61352	; 0xefa8
   14094:	movt	r0, #2
   14098:	ldr	r0, [r0]
   1409c:	bl	11598 <rb_get_fd@plt>
   140a0:	lsl	r1, r6, #7
   140a4:	movw	r2, #62120	; 0xf2a8
   140a8:	movt	r2, #2
   140ac:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   140b0:	cmp	r1, #2
   140b4:	mov	r1, #28
   140b8:	movweq	r1, #16
   140bc:	str	r2, [sp]
   140c0:	str	r1, [sp, #4]
   140c4:	mov	r1, r9
   140c8:	mov	r2, r4
   140cc:	mov	r3, #0
   140d0:	bl	1161c <sendto@plt>
   140d4:	cmp	r0, r4
   140d8:	beq	14178 <sprintf@plt+0x2880>
   140dc:	add	sl, sl, #1
   140e0:	ldr	r0, [r8]
   140e4:	cmp	sl, r0
   140e8:	blt	14050 <sprintf@plt+0x2758>
   140ec:	cmp	r0, #1
   140f0:	blt	14174 <sprintf@plt+0x287c>
   140f4:	mov	r5, #0
   140f8:	add	r1, r7, r5
   140fc:	sdiv	r2, r1, r0
   14100:	mls	r6, r2, r0, r1
   14104:	movw	r0, #61360	; 0xefb0
   14108:	movt	r0, #2
   1410c:	ldr	r0, [r0, r6, lsl #2]
   14110:	cmp	r0, #0
   14114:	beq	14164 <sprintf@plt+0x286c>
   14118:	movw	r0, #61352	; 0xefa8
   1411c:	movt	r0, #2
   14120:	ldr	r0, [r0]
   14124:	bl	11598 <rb_get_fd@plt>
   14128:	lsl	r1, r6, #7
   1412c:	movw	r2, #62120	; 0xf2a8
   14130:	movt	r2, #2
   14134:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   14138:	cmp	r1, #2
   1413c:	mov	r1, #28
   14140:	movweq	r1, #16
   14144:	str	r2, [sp]
   14148:	str	r1, [sp, #4]
   1414c:	mov	r1, r9
   14150:	mov	r2, r4
   14154:	mov	r3, #0
   14158:	bl	1161c <sendto@plt>
   1415c:	cmp	r0, r4
   14160:	beq	14178 <sprintf@plt+0x2880>
   14164:	add	r5, r5, #1
   14168:	ldr	r0, [r8]
   1416c:	cmp	r5, r0
   14170:	blt	140f8 <sprintf@plt+0x2800>
   14174:	mvn	r6, #0
   14178:	mov	r0, r6
   1417c:	sub	sp, fp, #28
   14180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14184:	sub	r0, r0, #1
   14188:	cmp	r0, #3
   1418c:	movhi	r0, #243	; 0xf3
   14190:	movwls	r1, #36564	; 0x8ed4
   14194:	movtls	r1, #1
   14198:	ldrls	r0, [r1, r0, lsl #2]
   1419c:	bx	lr
   141a0:	cmp	r0, #0
   141a4:	beq	141f4 <sprintf@plt+0x28fc>
   141a8:	movw	ip, #61400	; 0xefd8
   141ac:	movt	ip, #2
   141b0:	ldmib	r0, {r2, r3}
   141b4:	add	r1, r3, #4
   141b8:	cmp	r3, #0
   141bc:	addeq	r1, ip, #4
   141c0:	str	r2, [r1]
   141c4:	ldmib	r0, {r1, r2}
   141c8:	cmp	r1, #0
   141cc:	mov	r3, ip
   141d0:	addne	r3, r1, #8
   141d4:	str	r2, [r3]
   141d8:	mov	r1, #0
   141dc:	str	r1, [r0, #4]
   141e0:	str	r1, [r0, #8]
   141e4:	ldr	r0, [ip, #8]
   141e8:	sub	r0, r0, #1
   141ec:	str	r0, [ip, #8]
   141f0:	bx	lr
   141f4:	push	{fp, lr}
   141f8:	mov	fp, sp
   141fc:	movw	r0, #37195	; 0x914b
   14200:	movt	r0, #1
   14204:	movw	r1, #35888	; 0x8c30
   14208:	movt	r1, #1
   1420c:	movw	r3, #35916	; 0x8c4c
   14210:	movt	r3, #1
   14214:	mov	r2, #235	; 0xeb
   14218:	bl	11664 <__assert_fail@plt>
   1421c:	push	{r4, r5, r6, sl, fp, lr}
   14220:	add	fp, sp, #16
   14224:	mov	r4, r0
   14228:	movw	r0, #61400	; 0xefd8
   1422c:	movt	r0, #2
   14230:	ldr	r5, [r0]
   14234:	cmp	r5, #0
   14238:	popeq	{r4, r5, r6, sl, fp, pc}
   1423c:	movw	r6, #61360	; 0xefb0
   14240:	movt	r6, #2
   14244:	ldr	r0, [r5]
   14248:	ldr	r5, [r5, #8]
   1424c:	ldr	r2, [r0, #280]	; 0x118
   14250:	ldr	r1, [r0, #284]	; 0x11c
   14254:	add	r2, r1, r2
   14258:	cmp	r2, r4
   1425c:	bgt	14280 <sprintf@plt+0x2988>
   14260:	ldr	r2, [r0, #288]	; 0x120
   14264:	ldr	r3, [r6, r2, lsl #2]
   14268:	add	r3, r3, #1
   1426c:	str	r3, [r6, r2, lsl #2]
   14270:	lsl	r1, r1, #1
   14274:	str	r4, [r0, #280]	; 0x118
   14278:	str	r1, [r0, #284]	; 0x11c
   1427c:	bl	13a4c <sprintf@plt+0x2154>
   14280:	cmp	r5, #0
   14284:	bne	14244 <sprintf@plt+0x294c>
   14288:	pop	{r4, r5, r6, sl, fp, pc}
   1428c:	push	{r4, sl, fp, lr}
   14290:	add	fp, sp, #8
   14294:	movw	r4, #61416	; 0xefe8
   14298:	movt	r4, #2
   1429c:	mov	r0, #0
   142a0:	str	r0, [r4]
   142a4:	bl	142d0 <sprintf@plt+0x29d8>
   142a8:	ldr	r0, [r4]
   142ac:	cmp	r0, #0
   142b0:	beq	142bc <sprintf@plt+0x29c4>
   142b4:	mov	r0, #0
   142b8:	pop	{r4, sl, fp, pc}
   142bc:	movw	r0, #36580	; 0x8ee4
   142c0:	movt	r0, #1
   142c4:	bl	1444c <sprintf@plt+0x2b54>
   142c8:	mov	r0, #0
   142cc:	pop	{r4, sl, fp, pc}
   142d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142d4:	add	fp, sp, #28
   142d8:	sub	sp, sp, #132	; 0x84
   142dc:	movw	r0, #36590	; 0x8eee
   142e0:	movt	r0, #1
   142e4:	movw	r1, #38259	; 0x9573
   142e8:	movt	r1, #1
   142ec:	bl	11628 <fopen@plt>
   142f0:	cmp	r0, #0
   142f4:	beq	14444 <sprintf@plt+0x2b4c>
   142f8:	mov	r4, r0
   142fc:	add	r5, sp, #4
   14300:	mov	r0, r5
   14304:	mov	r1, #128	; 0x80
   14308:	mov	r2, r4
   1430c:	bl	11670 <fgets_unlocked@plt>
   14310:	cmp	r0, #0
   14314:	beq	1443c <sprintf@plt+0x2b44>
   14318:	sub	r8, r5, #1
   1431c:	movw	r6, #38893	; 0x97ed
   14320:	movt	r6, #1
   14324:	mov	r7, #0
   14328:	b	143e0 <sprintf@plt+0x2ae8>
   1432c:	cmp	r2, #59	; 0x3b
   14330:	beq	14424 <sprintf@plt+0x2b2c>
   14334:	ldrb	r2, [sl, #1]!
   14338:	cmp	r2, #0
   1433c:	beq	14350 <sprintf@plt+0x2a58>
   14340:	add	r3, r1, r2, lsl #1
   14344:	ldrh	r3, [r3]
   14348:	ands	r3, r3, #8192	; 0x2000
   1434c:	beq	14334 <sprintf@plt+0x2a3c>
   14350:	cmp	r2, #0
   14354:	beq	14424 <sprintf@plt+0x2b2c>
   14358:	strb	r7, [sl]
   1435c:	ldr	r0, [r0]
   14360:	ldrb	r1, [sl, #1]!
   14364:	add	r1, r0, r1, lsl #1
   14368:	ldrb	r1, [r1, #1]
   1436c:	tst	r1, #32
   14370:	bne	14360 <sprintf@plt+0x2a68>
   14374:	mov	r0, sl
   14378:	movw	r1, #36607	; 0x8eff
   1437c:	movt	r1, #1
   14380:	bl	118bc <strpbrk@plt>
   14384:	cmp	r0, #0
   14388:	strbne	r7, [r0]
   1438c:	mov	r0, r9
   14390:	movw	r1, #36610	; 0x8f02
   14394:	movt	r1, #1
   14398:	bl	116c4 <rb_strcasecmp@plt>
   1439c:	cmp	r0, #0
   143a0:	beq	143c8 <sprintf@plt+0x2ad0>
   143a4:	mov	r0, r9
   143a8:	movw	r1, #36617	; 0x8f09
   143ac:	movt	r1, #1
   143b0:	bl	116c4 <rb_strcasecmp@plt>
   143b4:	cmp	r0, #0
   143b8:	bne	14424 <sprintf@plt+0x2b2c>
   143bc:	mov	r0, sl
   143c0:	bl	1444c <sprintf@plt+0x2b54>
   143c4:	b	14424 <sprintf@plt+0x2b2c>
   143c8:	movw	r0, #61864	; 0xf1a8
   143cc:	movt	r0, #2
   143d0:	mov	r1, sl
   143d4:	mov	r2, #256	; 0x100
   143d8:	bl	1167c <rb_strlcpy@plt>
   143dc:	b	14424 <sprintf@plt+0x2b2c>
   143e0:	mov	r0, r5
   143e4:	mov	r1, r6
   143e8:	bl	118bc <strpbrk@plt>
   143ec:	cmp	r0, #0
   143f0:	strbne	r7, [r0]
   143f4:	bl	117cc <__ctype_b_loc@plt>
   143f8:	ldr	r1, [r0]
   143fc:	mov	r9, r8
   14400:	mov	sl, r9
   14404:	ldrb	r2, [r9, #1]!
   14408:	add	r3, r1, r2, lsl #1
   1440c:	ldrb	r3, [r3, #1]
   14410:	tst	r3, #32
   14414:	bne	14400 <sprintf@plt+0x2b08>
   14418:	cmp	r2, #0
   1441c:	cmpne	r2, #35	; 0x23
   14420:	bne	1432c <sprintf@plt+0x2a34>
   14424:	mov	r0, r5
   14428:	mov	r1, #128	; 0x80
   1442c:	mov	r2, r4
   14430:	bl	11670 <fgets_unlocked@plt>
   14434:	cmp	r0, #0
   14438:	bne	143e0 <sprintf@plt+0x2ae8>
   1443c:	mov	r0, r4
   14440:	bl	115c8 <fclose@plt>
   14444:	sub	sp, fp, #28
   14448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1444c:	push	{r4, r5, r6, sl, fp, lr}
   14450:	add	fp, sp, #16
   14454:	sub	sp, sp, #40	; 0x28
   14458:	movw	r5, #61416	; 0xefe8
   1445c:	movt	r5, #2
   14460:	ldr	r1, [r5]
   14464:	cmp	r1, #9
   14468:	bgt	144e4 <sprintf@plt+0x2bec>
   1446c:	add	r2, sp, #8
   14470:	vmov.i32	q8, #0	; 0x00000000
   14474:	add	r1, r2, #4
   14478:	vst1.32	{d16-d17}, [r1]
   1447c:	add	r1, r2, #16
   14480:	vst1.32	{d16-d17}, [r1]
   14484:	mov	r1, #5
   14488:	str	r1, [sp, #8]
   1448c:	mov	r1, #2
   14490:	str	r1, [sp, #16]
   14494:	movw	r1, #36610	; 0x8f02
   14498:	movt	r1, #1
   1449c:	add	r3, sp, #4
   144a0:	bl	116d0 <getaddrinfo@plt>
   144a4:	cmp	r0, #0
   144a8:	bne	144e4 <sprintf@plt+0x2bec>
   144ac:	ldr	r4, [sp, #4]
   144b0:	cmp	r4, #0
   144b4:	beq	144e4 <sprintf@plt+0x2bec>
   144b8:	ldr	r6, [r5]
   144bc:	movw	r0, #62120	; 0xf2a8
   144c0:	movt	r0, #2
   144c4:	add	r0, r0, r6, lsl #7
   144c8:	ldr	r2, [r4, #16]
   144cc:	ldr	r1, [r4, #20]
   144d0:	bl	11718 <memcpy@plt>
   144d4:	add	r0, r6, #1
   144d8:	str	r0, [r5]
   144dc:	mov	r0, r4
   144e0:	bl	11640 <freeaddrinfo@plt>
   144e4:	sub	sp, fp, #16
   144e8:	pop	{r4, r5, r6, sl, fp, pc}
   144ec:	push	{r4, sl, fp, lr}
   144f0:	add	fp, sp, #8
   144f4:	sub	sp, sp, #8
   144f8:	mov	r4, r3
   144fc:	ldr	r3, [fp, #8]
   14500:	str	r3, [sp]
   14504:	mov	r3, r4
   14508:	bl	1452c <sprintf@plt+0x2c34>
   1450c:	cmp	r0, #1
   14510:	blt	14524 <sprintf@plt+0x2c2c>
   14514:	ldrb	r1, [r4]
   14518:	cmp	r1, #46	; 0x2e
   1451c:	moveq	r1, #0
   14520:	strbeq	r1, [r4]
   14524:	sub	sp, fp, #8
   14528:	pop	{r4, sl, fp, pc}
   1452c:	push	{r4, r5, r6, r7, fp, lr}
   14530:	add	fp, sp, #16
   14534:	sub	sp, sp, #256	; 0x100
   14538:	mov	r5, r3
   1453c:	add	r3, sp, #1
   14540:	bl	14744 <sprintf@plt+0x2e4c>
   14544:	cmn	r0, #1
   14548:	beq	1456c <sprintf@plt+0x2c74>
   1454c:	mov	r4, r0
   14550:	ldr	r2, [fp, #8]
   14554:	add	r0, sp, #1
   14558:	mov	r1, r5
   1455c:	bl	148c8 <sprintf@plt+0x2fd0>
   14560:	cmn	r0, #1
   14564:	moveq	r4, r0
   14568:	b	14570 <sprintf@plt+0x2c78>
   1456c:	mvn	r4, #0
   14570:	mov	r0, r4
   14574:	sub	sp, fp, #16
   14578:	pop	{r4, r5, r6, r7, fp, pc}
   1457c:	push	{r4, sl, fp, lr}
   14580:	add	fp, sp, #8
   14584:	sub	sp, sp, #8
   14588:	mov	r4, r0
   1458c:	str	r0, [sp, #4]
   14590:	add	r0, sp, #4
   14594:	bl	145ac <sprintf@plt+0x2cb4>
   14598:	ldr	r1, [sp, #4]
   1459c:	cmn	r0, #1
   145a0:	subne	r0, r1, r4
   145a4:	sub	sp, fp, #8
   145a8:	pop	{r4, sl, fp, pc}
   145ac:	push	{r4, r5, r6, sl, fp, lr}
   145b0:	add	fp, sp, #16
   145b4:	mov	r5, r1
   145b8:	mov	r4, r0
   145bc:	ldr	r0, [r0]
   145c0:	cmp	r0, r1
   145c4:	bcs	1461c <sprintf@plt+0x2d24>
   145c8:	mov	r6, r0
   145cc:	ldrb	r1, [r6], #1
   145d0:	cmp	r1, #0
   145d4:	beq	14608 <sprintf@plt+0x2d10>
   145d8:	ands	r2, r1, #192	; 0xc0
   145dc:	beq	145f8 <sprintf@plt+0x2d00>
   145e0:	cmp	r2, #64	; 0x40
   145e4:	bne	14610 <sprintf@plt+0x2d18>
   145e8:	bl	14acc <sprintf@plt+0x31d4>
   145ec:	mov	r1, r0
   145f0:	cmn	r0, #1
   145f4:	ble	1462c <sprintf@plt+0x2d34>
   145f8:	add	r0, r6, r1
   145fc:	cmp	r0, r5
   14600:	bcc	145c8 <sprintf@plt+0x2cd0>
   14604:	b	1461c <sprintf@plt+0x2d24>
   14608:	mov	r0, r6
   1460c:	b	1461c <sprintf@plt+0x2d24>
   14610:	cmp	r2, #192	; 0xc0
   14614:	bne	1462c <sprintf@plt+0x2d34>
   14618:	add	r0, r0, #2
   1461c:	cmp	r0, r5
   14620:	strls	r0, [r4]
   14624:	movls	r0, #0
   14628:	popls	{r4, r5, r6, sl, fp, pc}
   1462c:	bl	118ec <__errno_location@plt>
   14630:	mov	r1, #90	; 0x5a
   14634:	str	r1, [r0]
   14638:	mvn	r0, #0
   1463c:	pop	{r4, r5, r6, sl, fp, pc}
   14640:	ldrb	r1, [r0]
   14644:	ldrb	r0, [r0, #1]
   14648:	orr	r0, r0, r1, lsl #8
   1464c:	bx	lr
   14650:	ldr	r0, [r0]
   14654:	rev	r0, r0
   14658:	bx	lr
   1465c:	strb	r0, [r1, #1]
   14660:	lsr	r0, r0, #8
   14664:	strb	r0, [r1]
   14668:	bx	lr
   1466c:	strb	r0, [r1, #3]
   14670:	lsr	r2, r0, #16
   14674:	strb	r2, [r1, #1]
   14678:	lsr	r2, r0, #24
   1467c:	strb	r2, [r1]
   14680:	lsr	r0, r0, #8
   14684:	strb	r0, [r1, #2]
   14688:	bx	lr
   1468c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14690:	add	fp, sp, #24
   14694:	sub	sp, sp, #88	; 0x58
   14698:	mvn	r5, #0
   1469c:	cmp	r3, #0
   146a0:	beq	14734 <sprintf@plt+0x2e3c>
   146a4:	mov	r8, r1
   146a8:	ldr	r1, [fp, #8]
   146ac:	cmp	r1, #12
   146b0:	blt	14734 <sprintf@plt+0x2e3c>
   146b4:	mov	r4, r3
   146b8:	mov	r7, r2
   146bc:	mov	r2, #0
   146c0:	str	r2, [r3, #4]
   146c4:	str	r2, [r3, #8]
   146c8:	mov	r3, #65536	; 0x10000
   146cc:	str	r3, [r4]
   146d0:	str	r2, [sp, #12]
   146d4:	str	r4, [sp, #8]
   146d8:	cmp	r1, #16
   146dc:	blt	14734 <sprintf@plt+0x2e3c>
   146e0:	add	r6, r4, #12
   146e4:	add	r3, sp, #8
   146e8:	add	r2, r3, #80	; 0x50
   146ec:	str	r2, [sp]
   146f0:	sub	r2, r1, #16
   146f4:	mov	r1, r6
   146f8:	bl	14740 <sprintf@plt+0x2e48>
   146fc:	cmp	r0, #0
   14700:	blt	14734 <sprintf@plt+0x2e3c>
   14704:	lsr	r1, r7, #8
   14708:	strb	r1, [r6, r0]!
   1470c:	strb	r7, [r6, #1]
   14710:	lsr	r0, r8, #8
   14714:	strb	r0, [r6, #2]
   14718:	strb	r8, [r6, #3]
   1471c:	ldr	r0, [r4, #4]
   14720:	mov	r1, #256	; 0x100
   14724:	bfi	r0, r1, #0, #16
   14728:	str	r0, [r4, #4]
   1472c:	add	r0, r6, #4
   14730:	sub	r5, r0, r4
   14734:	mov	r0, r5
   14738:	sub	sp, fp, #24
   1473c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14740:	b	14db4 <sprintf@plt+0x34bc>
   14744:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14748:	add	fp, sp, #28
   1474c:	sub	sp, sp, #28
   14750:	cmp	r2, r0
   14754:	bcc	1489c <sprintf@plt+0x2fa4>
   14758:	cmp	r2, r1
   1475c:	bcs	1489c <sprintf@plt+0x2fa4>
   14760:	ldrb	r7, [r2]
   14764:	cmp	r7, #0
   14768:	beq	148b4 <sprintf@plt+0x2fbc>
   1476c:	str	r1, [sp, #24]
   14770:	str	r0, [sp, #12]
   14774:	sub	r0, r1, r0
   14778:	str	r0, [sp, #8]
   1477c:	rsb	r0, r2, #1
   14780:	str	r0, [sp, #4]
   14784:	add	r5, r2, #1
   14788:	mvn	r0, #0
   1478c:	str	r0, [sp, #16]
   14790:	mov	r9, #0
   14794:	str	r3, [sp, #20]
   14798:	mov	r4, r3
   1479c:	str	r2, [sp]
   147a0:	mov	r6, r2
   147a4:	mov	sl, #0
   147a8:	ands	r0, r7, #192	; 0xc0
   147ac:	beq	147c0 <sprintf@plt+0x2ec8>
   147b0:	cmp	r0, #192	; 0xc0
   147b4:	beq	14818 <sprintf@plt+0x2f20>
   147b8:	cmp	r0, #64	; 0x40
   147bc:	bne	1489c <sprintf@plt+0x2fa4>
   147c0:	mov	r0, r6
   147c4:	bl	14acc <sprintf@plt+0x31d4>
   147c8:	cmn	r0, #1
   147cc:	ble	1489c <sprintf@plt+0x2fa4>
   147d0:	mov	r8, r0
   147d4:	add	r0, sl, #1
   147d8:	add	sl, r8, r0
   147dc:	cmp	sl, #254	; 0xfe
   147e0:	bgt	1489c <sprintf@plt+0x2fa4>
   147e4:	add	r6, r5, r8
   147e8:	ldr	r1, [sp, #24]
   147ec:	cmp	r6, r1
   147f0:	bcs	1489c <sprintf@plt+0x2fa4>
   147f4:	strb	r7, [r4]
   147f8:	ldr	r4, [sp, #20]
   147fc:	add	r0, r4, r0
   14800:	mov	r1, r5
   14804:	mov	r2, r8
   14808:	bl	11718 <memcpy@plt>
   1480c:	add	r0, r9, r8
   14810:	add	r9, r0, #1
   14814:	b	14864 <sprintf@plt+0x2f6c>
   14818:	ldr	r2, [sp, #24]
   1481c:	cmp	r5, r2
   14820:	ldrbcc	r0, [r5]
   14824:	andcc	r1, r7, #63	; 0x3f
   14828:	orrcc	r0, r0, r1, lsl #8
   1482c:	ldrcc	r1, [sp, #12]
   14830:	addcc	r6, r1, r0
   14834:	cmpcc	r6, r2
   14838:	bcs	1489c <sprintf@plt+0x2fa4>
   1483c:	ldr	r0, [sp, #16]
   14840:	cmp	r0, #0
   14844:	ldr	r1, [sp, #4]
   14848:	addlt	r0, r1, r5
   1484c:	str	r0, [sp, #16]
   14850:	add	r9, r9, #2
   14854:	ldr	r0, [sp, #8]
   14858:	cmp	r9, r0
   1485c:	ldr	r4, [sp, #20]
   14860:	bge	1489c <sprintf@plt+0x2fa4>
   14864:	add	r4, r4, sl
   14868:	mov	r5, r6
   1486c:	ldrb	r7, [r5], #1
   14870:	cmp	r7, #0
   14874:	bne	147a8 <sprintf@plt+0x2eb0>
   14878:	mov	r0, #0
   1487c:	strb	r0, [r4]
   14880:	ldr	r0, [sp, #16]
   14884:	cmn	r0, #1
   14888:	bgt	148ac <sprintf@plt+0x2fb4>
   1488c:	ldr	r0, [sp]
   14890:	sub	r0, r5, r0
   14894:	sub	sp, fp, #28
   14898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1489c:	bl	118ec <__errno_location@plt>
   148a0:	mov	r1, #90	; 0x5a
   148a4:	str	r1, [r0]
   148a8:	mvn	r0, #0
   148ac:	sub	sp, fp, #28
   148b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148b4:	mov	r0, #0
   148b8:	strb	r0, [r3]
   148bc:	mov	r0, #1
   148c0:	sub	sp, fp, #28
   148c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148cc:	add	fp, sp, #28
   148d0:	sub	sp, sp, #4
   148d4:	mov	r8, r1
   148d8:	add	r1, r0, #1
   148dc:	str	r1, [sp]
   148e0:	add	r5, r8, r2
   148e4:	ldrb	r7, [r0]
   148e8:	cmp	r7, #0
   148ec:	mov	r6, r8
   148f0:	beq	14a7c <sprintf@plt+0x3184>
   148f4:	mov	r9, #92	; 0x5c
   148f8:	mov	r6, r8
   148fc:	uxtb	r4, r7
   14900:	cmp	r4, #192	; 0xc0
   14904:	bcs	14aa8 <sprintf@plt+0x31b0>
   14908:	cmp	r6, r8
   1490c:	beq	14920 <sprintf@plt+0x3028>
   14910:	cmp	r6, r5
   14914:	bcs	14aa8 <sprintf@plt+0x31b0>
   14918:	mov	r0, #46	; 0x2e
   1491c:	strb	r0, [r6], #1
   14920:	ldr	r0, [sp]
   14924:	sub	r0, r0, #1
   14928:	bl	14acc <sprintf@plt+0x31d4>
   1492c:	cmn	r0, #1
   14930:	ble	14aa8 <sprintf@plt+0x31b0>
   14934:	add	r1, r6, r0
   14938:	cmp	r1, r5
   1493c:	bcs	14aa8 <sprintf@plt+0x31b0>
   14940:	and	r1, r7, #192	; 0xc0
   14944:	cmp	r1, #64	; 0x40
   14948:	bne	14974 <sprintf@plt+0x307c>
   1494c:	cmp	r4, #65	; 0x41
   14950:	bne	14ac0 <sprintf@plt+0x31c8>
   14954:	mov	r0, sp
   14958:	mov	r1, r6
   1495c:	mov	r2, r5
   14960:	bl	14b18 <sprintf@plt+0x3220>
   14964:	cmn	r0, #1
   14968:	ble	14aa8 <sprintf@plt+0x31b0>
   1496c:	add	r6, r6, r0
   14970:	b	14a5c <sprintf@plt+0x3164>
   14974:	cmp	r0, #1
   14978:	blt	14a5c <sprintf@plt+0x3164>
   1497c:	add	sl, r0, #1
   14980:	ldr	r0, [sp]
   14984:	add	r1, r0, #1
   14988:	str	r1, [sp]
   1498c:	ldrb	r7, [r0]
   14990:	mov	r0, r7
   14994:	bl	14c90 <sprintf@plt+0x3398>
   14998:	cmp	r0, #0
   1499c:	beq	149bc <sprintf@plt+0x30c4>
   149a0:	add	r0, r6, #1
   149a4:	cmp	r0, r5
   149a8:	bcs	14aa8 <sprintf@plt+0x31b0>
   149ac:	strb	r7, [r6, #1]
   149b0:	strb	r9, [r6]
   149b4:	add	r6, r6, #2
   149b8:	b	14a50 <sprintf@plt+0x3158>
   149bc:	mov	r0, r7
   149c0:	bl	14da0 <sprintf@plt+0x34a8>
   149c4:	cmp	r0, #0
   149c8:	beq	149dc <sprintf@plt+0x30e4>
   149cc:	cmp	r6, r5
   149d0:	bcs	14aa8 <sprintf@plt+0x31b0>
   149d4:	strb	r7, [r6], #1
   149d8:	b	14a50 <sprintf@plt+0x3158>
   149dc:	add	r0, r6, #3
   149e0:	cmp	r0, r5
   149e4:	bcs	14aa8 <sprintf@plt+0x31b0>
   149e8:	strb	r9, [r6]
   149ec:	movw	r0, #34079	; 0x851f
   149f0:	movt	r0, #20971	; 0x51eb
   149f4:	umull	r0, r1, r7, r0
   149f8:	movw	r0, #36642	; 0x8f22
   149fc:	movt	r0, #1
   14a00:	mov	r3, r0
   14a04:	ldrb	r0, [r0, r1, lsr #5]
   14a08:	strb	r0, [r6, #1]
   14a0c:	movw	r0, #52429	; 0xcccd
   14a10:	movt	r0, #52428	; 0xcccc
   14a14:	mov	r4, r0
   14a18:	umull	r0, r2, r7, r0
   14a1c:	lsr	r0, r2, #3
   14a20:	add	r0, r0, r0, lsl #2
   14a24:	sub	r0, r7, r0, lsl #1
   14a28:	ldrb	r0, [r3, r0]
   14a2c:	strb	r0, [r6, #3]
   14a30:	lsr	r0, r1, #5
   14a34:	mov	r1, #100	; 0x64
   14a38:	mls	r0, r0, r1, r7
   14a3c:	uxtb	r0, r0
   14a40:	umull	r0, r1, r0, r4
   14a44:	ldrb	r0, [r3, r1, lsr #3]
   14a48:	strb	r0, [r6, #2]
   14a4c:	add	r6, r6, #4
   14a50:	sub	sl, sl, #1
   14a54:	cmp	sl, #1
   14a58:	bgt	14980 <sprintf@plt+0x3088>
   14a5c:	ldr	r0, [sp]
   14a60:	add	r1, r0, #1
   14a64:	str	r1, [sp]
   14a68:	ldrb	r7, [r0]
   14a6c:	cmp	r7, #0
   14a70:	bne	148fc <sprintf@plt+0x3004>
   14a74:	cmp	r6, r8
   14a78:	bne	14a8c <sprintf@plt+0x3194>
   14a7c:	cmp	r6, r5
   14a80:	bcs	14aa8 <sprintf@plt+0x31b0>
   14a84:	mov	r0, #46	; 0x2e
   14a88:	strb	r0, [r6], #1
   14a8c:	cmp	r6, r5
   14a90:	bcs	14aa8 <sprintf@plt+0x31b0>
   14a94:	mov	r0, #0
   14a98:	strb	r0, [r6], #1
   14a9c:	sub	r0, r6, r8
   14aa0:	sub	sp, fp, #28
   14aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14aa8:	bl	118ec <__errno_location@plt>
   14aac:	mov	r1, #90	; 0x5a
   14ab0:	str	r1, [r0]
   14ab4:	mvn	r0, #0
   14ab8:	sub	sp, fp, #28
   14abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ac0:	bl	118ec <__errno_location@plt>
   14ac4:	mov	r1, #22
   14ac8:	b	14ab0 <sprintf@plt+0x31b8>
   14acc:	mov	r1, r0
   14ad0:	ldrb	r2, [r0]
   14ad4:	and	r3, r2, #192	; 0xc0
   14ad8:	mvn	r0, #0
   14adc:	cmp	r3, #192	; 0xc0
   14ae0:	beq	14b14 <sprintf@plt+0x321c>
   14ae4:	cmp	r3, #64	; 0x40
   14ae8:	bne	14b10 <sprintf@plt+0x3218>
   14aec:	cmp	r2, #65	; 0x41
   14af0:	bxne	lr
   14af4:	ldrb	r1, [r1, #1]
   14af8:	add	r0, r1, #7
   14afc:	mov	r2, #1
   14b00:	add	r0, r2, r0, lsr #3
   14b04:	cmp	r1, #0
   14b08:	movweq	r0, #33	; 0x21
   14b0c:	bx	lr
   14b10:	mov	r0, r2
   14b14:	bx	lr
   14b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b1c:	add	fp, sp, #28
   14b20:	sub	sp, sp, #20
   14b24:	mov	sl, r1
   14b28:	mov	r5, r0
   14b2c:	ldr	r9, [r0]
   14b30:	ldrb	r6, [r9]
   14b34:	cmp	r6, #0
   14b38:	movweq	r6, #256	; 0x100
   14b3c:	mov	r0, #7
   14b40:	cmp	r6, #9
   14b44:	movwhi	r0, #8
   14b48:	cmp	r6, #99	; 0x63
   14b4c:	movwhi	r0, #9
   14b50:	add	r1, r6, #3
   14b54:	add	r0, r0, r1, lsr #2
   14b58:	add	r1, sl, r0
   14b5c:	mvn	r0, #0
   14b60:	cmp	r1, r2
   14b64:	bcs	14c88 <sprintf@plt+0x3390>
   14b68:	movw	r0, #23388	; 0x5b5c
   14b6c:	movt	r0, #120	; 0x78
   14b70:	mov	r7, sl
   14b74:	str	r0, [r7], #3
   14b78:	add	r4, r9, #1
   14b7c:	cmp	r6, #8
   14b80:	bcc	14c30 <sprintf@plt+0x3338>
   14b84:	str	r5, [sp, #16]
   14b88:	mvn	r0, r6
   14b8c:	cmn	r0, #16
   14b90:	mvnls	r0, #15
   14b94:	add	r0, r6, r0
   14b98:	add	r0, r0, #8
   14b9c:	mov	r1, #2
   14ba0:	add	r1, r1, r0, lsr #3
   14ba4:	str	r1, [sp, #4]
   14ba8:	bic	r1, r0, #7
   14bac:	str	r1, [sp, #8]
   14bb0:	add	r0, r9, r0, lsr #3
   14bb4:	add	r0, r0, #1
   14bb8:	str	r0, [sp, #12]
   14bbc:	add	r8, r6, #8
   14bc0:	movw	r5, #36628	; 0x8f14
   14bc4:	movt	r5, #1
   14bc8:	ldrb	r2, [r4], #1
   14bcc:	mov	r0, r7
   14bd0:	mov	r1, r5
   14bd4:	bl	118f8 <sprintf@plt>
   14bd8:	add	r7, r7, r0
   14bdc:	sub	r8, r8, #8
   14be0:	cmp	r8, #15
   14be4:	bgt	14bc8 <sprintf@plt+0x32d0>
   14be8:	ldr	r0, [sp, #4]
   14bec:	add	r4, r9, r0
   14bf0:	sub	r0, r6, #8
   14bf4:	ldr	r1, [sp, #8]
   14bf8:	sub	r0, r0, r1
   14bfc:	ldr	r5, [sp, #16]
   14c00:	ldr	r9, [sp, #12]
   14c04:	cmp	r0, #5
   14c08:	bge	14c3c <sprintf@plt+0x3344>
   14c0c:	cmp	r0, #1
   14c10:	blt	14c68 <sprintf@plt+0x3370>
   14c14:	ldrb	r1, [r4]
   14c18:	lsr	r2, r1, #4
   14c1c:	movw	r1, #36633	; 0x8f19
   14c20:	movt	r1, #1
   14c24:	mov	r3, #15
   14c28:	mov	r4, #4
   14c2c:	b	14c50 <sprintf@plt+0x3358>
   14c30:	mov	r0, r6
   14c34:	cmp	r0, #5
   14c38:	blt	14c0c <sprintf@plt+0x3314>
   14c3c:	ldrb	r2, [r4]
   14c40:	movw	r1, #36628	; 0x8f14
   14c44:	movt	r1, #1
   14c48:	mov	r3, #255	; 0xff
   14c4c:	mov	r4, #8
   14c50:	sub	r0, r4, r0
   14c54:	and	r2, r2, r3, lsl r0
   14c58:	mov	r0, r7
   14c5c:	bl	118f8 <sprintf@plt>
   14c60:	add	r7, r7, r0
   14c64:	add	r4, r9, #2
   14c68:	movw	r1, #36637	; 0x8f1d
   14c6c:	movt	r1, #1
   14c70:	mov	r0, r7
   14c74:	mov	r2, r6
   14c78:	bl	118f8 <sprintf@plt>
   14c7c:	str	r4, [r5]
   14c80:	add	r0, r7, r0
   14c84:	sub	r0, r0, sl
   14c88:	sub	sp, fp, #28
   14c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c90:	sub	r1, r0, #34	; 0x22
   14c94:	cmp	r1, #58	; 0x3a
   14c98:	bhi	14d98 <sprintf@plt+0x34a0>
   14c9c:	mov	r0, #1
   14ca0:	add	r2, pc, #0
   14ca4:	ldr	pc, [r2, r1, lsl #2]
   14ca8:	muleq	r1, r4, sp
   14cac:	muleq	r1, r8, sp
   14cb0:	muleq	r1, r4, sp
   14cb4:	muleq	r1, r8, sp
   14cb8:	muleq	r1, r8, sp
   14cbc:	muleq	r1, r8, sp
   14cc0:	muleq	r1, r4, sp
   14cc4:	muleq	r1, r4, sp
   14cc8:	muleq	r1, r8, sp
   14ccc:	muleq	r1, r8, sp
   14cd0:	muleq	r1, r8, sp
   14cd4:	muleq	r1, r8, sp
   14cd8:	muleq	r1, r4, sp
   14cdc:	muleq	r1, r8, sp
   14ce0:	muleq	r1, r8, sp
   14ce4:	muleq	r1, r8, sp
   14ce8:	muleq	r1, r8, sp
   14cec:	muleq	r1, r8, sp
   14cf0:	muleq	r1, r8, sp
   14cf4:	muleq	r1, r8, sp
   14cf8:	muleq	r1, r8, sp
   14cfc:	muleq	r1, r8, sp
   14d00:	muleq	r1, r8, sp
   14d04:	muleq	r1, r8, sp
   14d08:	muleq	r1, r8, sp
   14d0c:	muleq	r1, r4, sp
   14d10:	muleq	r1, r8, sp
   14d14:	muleq	r1, r8, sp
   14d18:	muleq	r1, r8, sp
   14d1c:	muleq	r1, r8, sp
   14d20:	muleq	r1, r4, sp
   14d24:	muleq	r1, r8, sp
   14d28:	muleq	r1, r8, sp
   14d2c:	muleq	r1, r8, sp
   14d30:	muleq	r1, r8, sp
   14d34:	muleq	r1, r8, sp
   14d38:	muleq	r1, r8, sp
   14d3c:	muleq	r1, r8, sp
   14d40:	muleq	r1, r8, sp
   14d44:	muleq	r1, r8, sp
   14d48:	muleq	r1, r8, sp
   14d4c:	muleq	r1, r8, sp
   14d50:	muleq	r1, r8, sp
   14d54:	muleq	r1, r8, sp
   14d58:	muleq	r1, r8, sp
   14d5c:	muleq	r1, r8, sp
   14d60:	muleq	r1, r8, sp
   14d64:	muleq	r1, r8, sp
   14d68:	muleq	r1, r8, sp
   14d6c:	muleq	r1, r8, sp
   14d70:	muleq	r1, r8, sp
   14d74:	muleq	r1, r8, sp
   14d78:	muleq	r1, r8, sp
   14d7c:	muleq	r1, r8, sp
   14d80:	muleq	r1, r8, sp
   14d84:	muleq	r1, r8, sp
   14d88:	muleq	r1, r8, sp
   14d8c:	muleq	r1, r8, sp
   14d90:	muleq	r1, r4, sp
   14d94:	bx	lr
   14d98:	mov	r0, #0
   14d9c:	bx	lr
   14da0:	sub	r1, r0, #33	; 0x21
   14da4:	mov	r0, #0
   14da8:	cmp	r1, #94	; 0x5e
   14dac:	movwcc	r0, #1
   14db0:	bx	lr
   14db4:	push	{r4, r5, r6, sl, fp, lr}
   14db8:	add	fp, sp, #16
   14dbc:	sub	sp, sp, #264	; 0x108
   14dc0:	mov	r4, r3
   14dc4:	mov	r5, r2
   14dc8:	mov	r6, r1
   14dcc:	add	r1, sp, #9
   14dd0:	bl	14e08 <sprintf@plt+0x3510>
   14dd4:	cmn	r0, #1
   14dd8:	mvneq	r0, #0
   14ddc:	subeq	sp, fp, #16
   14de0:	popeq	{r4, r5, r6, sl, fp, pc}
   14de4:	ldr	r0, [fp, #8]
   14de8:	str	r0, [sp]
   14dec:	add	r0, sp, #9
   14df0:	mov	r1, r6
   14df4:	mov	r2, r5
   14df8:	mov	r3, r4
   14dfc:	bl	150d8 <sprintf@plt+0x37e0>
   14e00:	sub	sp, fp, #16
   14e04:	pop	{r4, r5, r6, sl, fp, pc}
   14e08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e0c:	add	fp, sp, #28
   14e10:	sub	sp, sp, #20
   14e14:	mov	r4, r1
   14e18:	str	r0, [sp, #16]
   14e1c:	str	r1, [sp, #12]
   14e20:	add	r0, r1, #1
   14e24:	str	r0, [sp, #8]
   14e28:	ldr	sl, [sp, #16]
   14e2c:	add	r6, sl, #1
   14e30:	str	r6, [sp, #16]
   14e34:	add	r9, r1, #255	; 0xff
   14e38:	ldrb	r1, [sl]
   14e3c:	cmp	r1, #0
   14e40:	beq	14ff8 <sprintf@plt+0x3700>
   14e44:	mov	r0, #0
   14e48:	movw	r5, #36642	; 0x8f22
   14e4c:	movt	r5, #1
   14e50:	uxtb	r8, r1
   14e54:	cmp	r0, #0
   14e58:	beq	14ec8 <sprintf@plt+0x35d0>
   14e5c:	cmp	r8, #91	; 0x5b
   14e60:	bne	14f28 <sprintf@plt+0x3630>
   14e64:	mov	r0, r6
   14e68:	mov	r1, #93	; 0x5d
   14e6c:	bl	115e0 <strchr@plt>
   14e70:	cmp	r0, #0
   14e74:	beq	15090 <sprintf@plt+0x3798>
   14e78:	str	r9, [sp]
   14e7c:	add	r1, r0, #2
   14e80:	add	r0, sp, #16
   14e84:	add	r2, sp, #12
   14e88:	add	r3, sp, #8
   14e8c:	bl	152e8 <sprintf@plt+0x39f0>
   14e90:	cmp	r0, #0
   14e94:	bne	15070 <sprintf@plt+0x3778>
   14e98:	ldr	r0, [sp, #8]
   14e9c:	str	r0, [sp, #12]
   14ea0:	add	r0, r0, #1
   14ea4:	str	r0, [sp, #8]
   14ea8:	ldr	r0, [sp, #16]
   14eac:	add	r1, r0, #1
   14eb0:	str	r1, [sp, #16]
   14eb4:	ldrb	r1, [r0]
   14eb8:	mov	r0, #0
   14ebc:	cmp	r1, #46	; 0x2e
   14ec0:	beq	14fe0 <sprintf@plt+0x36e8>
   14ec4:	b	15080 <sprintf@plt+0x3788>
   14ec8:	cmp	r8, #92	; 0x5c
   14ecc:	beq	14fdc <sprintf@plt+0x36e4>
   14ed0:	cmp	r8, #46	; 0x2e
   14ed4:	bne	14fbc <sprintf@plt+0x36c4>
   14ed8:	ldr	r1, [sp, #12]
   14edc:	mvn	r0, r1
   14ee0:	ldr	r2, [sp, #8]
   14ee4:	add	r0, r2, r0
   14ee8:	tst	r0, #192	; 0xc0
   14eec:	bne	15058 <sprintf@plt+0x3760>
   14ef0:	cmp	r1, r9
   14ef4:	bcs	15058 <sprintf@plt+0x3760>
   14ef8:	strb	r0, [r1]
   14efc:	ldrb	r1, [r6]
   14f00:	cmp	r1, #0
   14f04:	beq	1509c <sprintf@plt+0x37a4>
   14f08:	cmp	r0, #0
   14f0c:	cmpne	r1, #46	; 0x2e
   14f10:	beq	15058 <sprintf@plt+0x3760>
   14f14:	ldr	r0, [sp, #8]
   14f18:	str	r0, [sp, #12]
   14f1c:	add	r0, r0, #1
   14f20:	str	r0, [sp, #8]
   14f24:	b	14fd4 <sprintf@plt+0x36dc>
   14f28:	mov	r0, r5
   14f2c:	mov	r1, r8
   14f30:	mov	r2, #11
   14f34:	bl	118c8 <memchr@plt>
   14f38:	cmp	r0, #0
   14f3c:	beq	14fbc <sprintf@plt+0x36c4>
   14f40:	mov	r7, r0
   14f44:	add	r0, sl, #2
   14f48:	str	r0, [sp, #16]
   14f4c:	ldrb	r1, [r6]
   14f50:	cmp	r1, #0
   14f54:	beq	15058 <sprintf@plt+0x3760>
   14f58:	mov	r0, r5
   14f5c:	mov	r2, #11
   14f60:	bl	118c8 <memchr@plt>
   14f64:	cmp	r0, #0
   14f68:	movne	r6, r0
   14f6c:	addne	r0, sl, #3
   14f70:	strne	r0, [sp, #16]
   14f74:	ldrbne	r1, [sl, #2]
   14f78:	cmpne	r1, #0
   14f7c:	beq	15058 <sprintf@plt+0x3760>
   14f80:	mov	r0, r5
   14f84:	mov	r2, #11
   14f88:	bl	118c8 <memchr@plt>
   14f8c:	cmp	r0, #0
   14f90:	beq	15058 <sprintf@plt+0x3760>
   14f94:	sub	r1, r7, r5
   14f98:	mov	r2, #100	; 0x64
   14f9c:	mul	r1, r1, r2
   14fa0:	sub	r2, r6, r5
   14fa4:	add	r2, r2, r2, lsl #2
   14fa8:	add	r1, r1, r2, lsl #1
   14fac:	sub	r0, r0, r5
   14fb0:	add	r8, r1, r0
   14fb4:	cmp	r8, #256	; 0x100
   14fb8:	bge	15058 <sprintf@plt+0x3760>
   14fbc:	ldr	r0, [sp, #8]
   14fc0:	cmp	r0, r9
   14fc4:	bcs	15058 <sprintf@plt+0x3760>
   14fc8:	add	r1, r0, #1
   14fcc:	str	r1, [sp, #8]
   14fd0:	strb	r8, [r0]
   14fd4:	mov	r0, #0
   14fd8:	b	14fe0 <sprintf@plt+0x36e8>
   14fdc:	mov	r0, #1
   14fe0:	ldr	sl, [sp, #16]
   14fe4:	add	r6, sl, #1
   14fe8:	str	r6, [sp, #16]
   14fec:	ldrb	r1, [sl]
   14ff0:	cmp	r1, #0
   14ff4:	bne	14e50 <sprintf@plt+0x3558>
   14ff8:	ldr	r0, [sp, #12]
   14ffc:	mvn	r0, r0
   15000:	ldr	r1, [sp, #8]
   15004:	add	r0, r1, r0
   15008:	tst	r0, #192	; 0xc0
   1500c:	bne	15058 <sprintf@plt+0x3760>
   15010:	ldr	r1, [sp, #12]
   15014:	cmp	r1, r9
   15018:	bcs	15058 <sprintf@plt+0x3760>
   1501c:	strb	r0, [r1]
   15020:	cmp	r0, #0
   15024:	beq	15044 <sprintf@plt+0x374c>
   15028:	ldr	r0, [sp, #8]
   1502c:	cmp	r0, r9
   15030:	bcs	15058 <sprintf@plt+0x3760>
   15034:	add	r1, r0, #1
   15038:	str	r1, [sp, #8]
   1503c:	mov	r1, #0
   15040:	strb	r1, [r0]
   15044:	ldr	r0, [sp, #8]
   15048:	sub	r1, r0, r4
   1504c:	mov	r0, #0
   15050:	cmp	r1, #256	; 0x100
   15054:	blt	15068 <sprintf@plt+0x3770>
   15058:	bl	118ec <__errno_location@plt>
   1505c:	mov	r1, #90	; 0x5a
   15060:	str	r1, [r0]
   15064:	mvn	r0, #0
   15068:	sub	sp, fp, #28
   1506c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15070:	mov	r6, r0
   15074:	bl	118ec <__errno_location@plt>
   15078:	str	r6, [r0]
   1507c:	b	15064 <sprintf@plt+0x376c>
   15080:	cmp	r1, #0
   15084:	bne	15090 <sprintf@plt+0x3798>
   15088:	mov	r0, #0
   1508c:	b	15010 <sprintf@plt+0x3718>
   15090:	bl	118ec <__errno_location@plt>
   15094:	mov	r1, #22
   15098:	b	15060 <sprintf@plt+0x3768>
   1509c:	cmp	r0, #0
   150a0:	beq	150c0 <sprintf@plt+0x37c8>
   150a4:	ldr	r0, [sp, #8]
   150a8:	cmp	r0, r9
   150ac:	bcs	15058 <sprintf@plt+0x3760>
   150b0:	add	r1, r0, #1
   150b4:	str	r1, [sp, #8]
   150b8:	mov	r1, #0
   150bc:	strb	r1, [r0]
   150c0:	ldr	r0, [sp, #8]
   150c4:	sub	r1, r0, r4
   150c8:	mov	r0, #1
   150cc:	cmp	r1, #256	; 0x100
   150d0:	bge	15058 <sprintf@plt+0x3760>
   150d4:	b	15068 <sprintf@plt+0x3770>
   150d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150dc:	add	fp, sp, #28
   150e0:	sub	sp, sp, #20
   150e4:	mov	r9, r0
   150e8:	mov	r7, #0
   150ec:	cmp	r3, #0
   150f0:	beq	15120 <sprintf@plt+0x3828>
   150f4:	mov	r5, r3
   150f8:	mov	r0, r3
   150fc:	ldr	r3, [r0], #4
   15100:	str	r0, [sp, #8]
   15104:	str	r3, [sp, #16]
   15108:	cmp	r3, #0
   1510c:	beq	15130 <sprintf@plt+0x3838>
   15110:	ldr	r0, [r5, #4]!
   15114:	cmp	r0, #0
   15118:	bne	15110 <sprintf@plt+0x3818>
   1511c:	b	1513c <sprintf@plt+0x3844>
   15120:	mov	r5, #0
   15124:	mov	r0, #0
   15128:	str	r0, [sp, #8]
   1512c:	b	15134 <sprintf@plt+0x383c>
   15130:	mov	r5, #0
   15134:	mov	r0, #0
   15138:	str	r0, [sp, #16]
   1513c:	mov	r8, r1
   15140:	add	r0, r1, r2
   15144:	str	r0, [sp, #12]
   15148:	mov	r4, r9
   1514c:	ldrb	r6, [r4]
   15150:	cmp	r6, #192	; 0xc0
   15154:	bcs	152d0 <sprintf@plt+0x39d8>
   15158:	mov	r0, r4
   1515c:	bl	14acc <sprintf@plt+0x31d4>
   15160:	cmn	r0, #1
   15164:	ble	15264 <sprintf@plt+0x396c>
   15168:	add	r0, r0, #1
   1516c:	add	r7, r0, r7
   15170:	cmp	r7, #256	; 0x100
   15174:	bge	152d0 <sprintf@plt+0x39d8>
   15178:	add	r4, r4, r0
   1517c:	cmp	r6, #0
   15180:	bne	1514c <sprintf@plt+0x3854>
   15184:	ldr	r0, [fp, #8]
   15188:	sub	r0, r0, #4
   1518c:	str	r0, [sp, #4]
   15190:	mov	sl, #1
   15194:	mov	r4, r8
   15198:	str	r8, [sp]
   1519c:	mov	r6, r5
   151a0:	ldrb	r7, [r9]
   151a4:	ldr	r0, [sp, #16]
   151a8:	cmp	r0, #0
   151ac:	cmpne	r7, #0
   151b0:	bne	15204 <sprintf@plt+0x390c>
   151b4:	cmp	r7, #191	; 0xbf
   151b8:	bhi	152c0 <sprintf@plt+0x39c8>
   151bc:	mov	r0, r9
   151c0:	bl	14acc <sprintf@plt+0x31d4>
   151c4:	mov	r7, r0
   151c8:	add	r0, r4, r0
   151cc:	add	r0, r0, #1
   151d0:	ldr	r1, [sp, #12]
   151d4:	cmp	r0, r1
   151d8:	bcs	152c0 <sprintf@plt+0x39c8>
   151dc:	add	r8, r7, #1
   151e0:	mov	r0, r4
   151e4:	mov	r1, r9
   151e8:	mov	r2, r8
   151ec:	bl	11718 <memcpy@plt>
   151f0:	add	r4, r4, r8
   151f4:	add	r9, r9, r8
   151f8:	cmp	r7, #0
   151fc:	bne	151a0 <sprintf@plt+0x38a8>
   15200:	b	15270 <sprintf@plt+0x3978>
   15204:	mov	r0, r9
   15208:	ldr	r1, [sp, #16]
   1520c:	ldr	r2, [sp, #8]
   15210:	mov	r3, r5
   15214:	bl	1552c <sprintf@plt+0x3c34>
   15218:	cmp	r0, #0
   1521c:	bge	1528c <sprintf@plt+0x3994>
   15220:	ldr	r0, [fp, #8]
   15224:	cmp	r0, #0
   15228:	beq	151b4 <sprintf@plt+0x38bc>
   1522c:	ldr	r0, [sp, #4]
   15230:	cmp	r6, r0
   15234:	bcs	151b4 <sprintf@plt+0x38bc>
   15238:	ldr	r0, [sp, #16]
   1523c:	sub	r0, r4, r0
   15240:	cmp	r0, #16384	; 0x4000
   15244:	bge	151b4 <sprintf@plt+0x38bc>
   15248:	cmp	sl, #0
   1524c:	strne	r4, [r6]
   15250:	movne	sl, #0
   15254:	strne	sl, [r6, #4]!
   15258:	cmp	r7, #191	; 0xbf
   1525c:	bls	151bc <sprintf@plt+0x38c4>
   15260:	b	152c0 <sprintf@plt+0x39c8>
   15264:	bl	118ec <__errno_location@plt>
   15268:	mov	r1, #22
   1526c:	b	152d8 <sprintf@plt+0x39e0>
   15270:	ldr	r0, [sp, #12]
   15274:	cmp	r4, r0
   15278:	ldrls	r0, [sp]
   1527c:	subls	r0, r4, r0
   15280:	subls	sp, fp, #28
   15284:	popls	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15288:	b	152c0 <sprintf@plt+0x39c8>
   1528c:	add	r1, r4, #1
   15290:	ldr	r2, [sp, #12]
   15294:	cmp	r1, r2
   15298:	bcs	152c0 <sprintf@plt+0x39c8>
   1529c:	strb	r0, [r4, #1]
   152a0:	mov	r1, #192	; 0xc0
   152a4:	orr	r0, r1, r0, lsr #8
   152a8:	strb	r0, [r4]
   152ac:	add	r0, r4, #2
   152b0:	ldr	r1, [sp]
   152b4:	sub	r0, r0, r1
   152b8:	sub	sp, fp, #28
   152bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152c0:	ldr	r0, [sp, #16]
   152c4:	cmp	r0, #0
   152c8:	movne	r0, #0
   152cc:	strne	r0, [r5]
   152d0:	bl	118ec <__errno_location@plt>
   152d4:	mov	r1, #90	; 0x5a
   152d8:	str	r1, [r0]
   152dc:	mvn	r0, #0
   152e0:	sub	sp, fp, #28
   152e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152ec:	add	fp, sp, #28
   152f0:	sub	sp, sp, #12
   152f4:	mov	r5, r0
   152f8:	ldr	r6, [r0]
   152fc:	mov	r0, #0
   15300:	str	r0, [sp, #8]
   15304:	sub	r0, r1, r6
   15308:	cmp	r0, #2
   1530c:	blt	15344 <sprintf@plt+0x3a4c>
   15310:	ldrb	r0, [r6], #1
   15314:	cmp	r0, #120	; 0x78
   15318:	bne	15344 <sprintf@plt+0x3a4c>
   1531c:	mov	r9, r3
   15320:	mov	r8, r2
   15324:	mov	r7, r1
   15328:	bl	117cc <__ctype_b_loc@plt>
   1532c:	ldrb	r1, [r6]
   15330:	ldr	r2, [r0]
   15334:	add	r1, r2, r1, lsl #1
   15338:	ldrb	r1, [r1, #1]
   1533c:	tst	r1, #16
   15340:	bne	15350 <sprintf@plt+0x3a58>
   15344:	mov	r0, #22
   15348:	sub	sp, fp, #28
   1534c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15350:	ldr	ip, [fp, #8]
   15354:	add	r4, r9, #4
   15358:	cmp	r6, r7
   1535c:	cmpcc	r4, ip
   15360:	bcc	1537c <sprintf@plt+0x3a84>
   15364:	mov	r0, #0
   15368:	str	r0, [sp]
   1536c:	mov	r0, #0
   15370:	str	r0, [sp, #4]
   15374:	mov	r2, #0
   15378:	b	154a4 <sprintf@plt+0x3bac>
   1537c:	mov	r1, #0
   15380:	str	r1, [sp, #4]
   15384:	mov	sl, #0
   15388:	mov	r1, #0
   1538c:	str	r1, [sp]
   15390:	mov	lr, #0
   15394:	mov	r1, #0
   15398:	ldrb	r2, [r6]
   1539c:	cmp	r2, #47	; 0x2f
   153a0:	beq	153e0 <sprintf@plt+0x3ae8>
   153a4:	cmp	r2, #93	; 0x5d
   153a8:	beq	15450 <sprintf@plt+0x3b58>
   153ac:	ldr	r3, [r0]
   153b0:	add	r3, r3, r2, lsl #1
   153b4:	ldrh	r3, [r3]
   153b8:	cmp	r1, #0
   153bc:	beq	153e8 <sprintf@plt+0x3af0>
   153c0:	tst	r3, #2048	; 0x800
   153c4:	beq	15344 <sprintf@plt+0x3a4c>
   153c8:	cmp	lr, #0
   153cc:	bne	15438 <sprintf@plt+0x3b40>
   153d0:	cmp	r2, #48	; 0x30
   153d4:	mov	lr, r6
   153d8:	bne	15438 <sprintf@plt+0x3b40>
   153dc:	b	15344 <sprintf@plt+0x3a4c>
   153e0:	mov	r1, #1
   153e4:	b	15438 <sprintf@plt+0x3b40>
   153e8:	tst	r3, #4096	; 0x1000
   153ec:	beq	15344 <sprintf@plt+0x3a4c>
   153f0:	ldr	r1, [sp, #4]
   153f4:	cmp	r1, #252	; 0xfc
   153f8:	bgt	15344 <sprintf@plt+0x3a4c>
   153fc:	mov	r3, r1
   15400:	movw	r1, #36653	; 0x8f2d
   15404:	movt	r1, #1
   15408:	ldrb	r1, [r1, r2]
   1540c:	ldr	r2, [sp]
   15410:	add	r2, r1, r2, lsl #4
   15414:	add	r3, r3, #4
   15418:	str	r3, [sp, #4]
   1541c:	add	sl, sl, #4
   15420:	mov	r1, #0
   15424:	cmp	sl, #8
   15428:	str	r2, [sp]
   1542c:	strbeq	r2, [r4], #1
   15430:	moveq	r1, #0
   15434:	moveq	sl, #0
   15438:	add	r6, r6, #1
   1543c:	mov	r2, #0
   15440:	cmp	r6, r7
   15444:	cmpcc	r4, ip
   15448:	bcc	15398 <sprintf@plt+0x3aa0>
   1544c:	b	154a4 <sprintf@plt+0x3bac>
   15450:	cmp	r1, #0
   15454:	beq	1548c <sprintf@plt+0x3b94>
   15458:	cmp	lr, #0
   1545c:	beq	15344 <sprintf@plt+0x3a4c>
   15460:	add	r1, sp, #8
   15464:	mov	r0, lr
   15468:	mov	r2, #10
   1546c:	bl	1173c <strtol@plt>
   15470:	mov	r2, r0
   15474:	ldr	r0, [sp, #8]
   15478:	ldrb	r0, [r0]
   1547c:	cmp	r0, #93	; 0x5d
   15480:	bne	15344 <sprintf@plt+0x3a4c>
   15484:	ldr	ip, [fp, #8]
   15488:	b	15490 <sprintf@plt+0x3b98>
   1548c:	mov	r2, #0
   15490:	cmp	sl, #0
   15494:	ldrne	r0, [sp]
   15498:	lslne	r0, r0, #4
   1549c:	strbne	r0, [r4], #1
   154a0:	add	r6, r6, #1
   154a4:	mov	r0, #90	; 0x5a
   154a8:	cmp	r6, r7
   154ac:	cmpcc	r4, ip
   154b0:	bcc	154bc <sprintf@plt+0x3bc4>
   154b4:	sub	sp, fp, #28
   154b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154bc:	cmp	r2, #1
   154c0:	blt	154f8 <sprintf@plt+0x3c00>
   154c4:	add	r0, r2, #3
   154c8:	bic	r0, r0, #3
   154cc:	ldr	r1, [sp, #4]
   154d0:	cmp	r0, r1
   154d4:	bne	15344 <sprintf@plt+0x3a4c>
   154d8:	rsb	r0, r1, #8
   154dc:	add	r0, r0, r2
   154e0:	mov	r1, #255	; 0xff
   154e4:	ldr	r3, [sp]
   154e8:	tst	r3, r1, lsr r0
   154ec:	mov	r0, #22
   154f0:	bne	154b4 <sprintf@plt+0x3bbc>
   154f4:	b	154fc <sprintf@plt+0x3c04>
   154f8:	ldr	r2, [sp, #4]
   154fc:	ldr	r0, [r8]
   15500:	mov	r1, #65	; 0x41
   15504:	strb	r1, [r0]
   15508:	subs	r0, r2, #256	; 0x100
   1550c:	movne	r0, r2
   15510:	ldr	r1, [r9]
   15514:	strb	r0, [r1]
   15518:	str	r6, [r5]
   1551c:	str	r4, [r9]
   15520:	mov	r0, #0
   15524:	sub	sp, fp, #28
   15528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1552c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15530:	add	fp, sp, #28
   15534:	sub	sp, sp, #20
   15538:	str	r0, [sp, #12]
   1553c:	mov	r4, #2
   15540:	str	r3, [sp, #4]
   15544:	cmp	r2, r3
   15548:	bcs	15688 <sprintf@plt+0x3d90>
   1554c:	mov	r6, r1
   15550:	str	r2, [sp, #8]
   15554:	ldr	r8, [r2]
   15558:	ldrb	r1, [r8]
   1555c:	sub	r0, r1, #1
   15560:	uxtb	r0, r0
   15564:	cmp	r0, #62	; 0x3e
   15568:	bhi	15668 <sprintf@plt+0x3d70>
   1556c:	sub	r4, r8, r6
   15570:	cmp	r4, #16384	; 0x4000
   15574:	bge	15668 <sprintf@plt+0x3d70>
   15578:	str	r1, [sp, #16]
   1557c:	ldr	r5, [sp, #12]
   15580:	mov	r0, r8
   15584:	ldrb	r1, [r0]
   15588:	cmp	r1, #0
   1558c:	bne	155b0 <sprintf@plt+0x3cb8>
   15590:	b	1564c <sprintf@plt+0x3d54>
   15594:	ldrb	r0, [sl]
   15598:	and	r1, r1, #63	; 0x3f
   1559c:	orr	r1, r0, r1, lsl #8
   155a0:	mov	r0, r6
   155a4:	ldrb	r1, [r0, r1]!
   155a8:	cmp	r1, #0
   155ac:	beq	1564c <sprintf@plt+0x3d54>
   155b0:	and	r2, r1, #192	; 0xc0
   155b4:	add	sl, r0, #1
   155b8:	cmp	r2, #192	; 0xc0
   155bc:	beq	15594 <sprintf@plt+0x3c9c>
   155c0:	cmp	r2, #0
   155c4:	bne	15684 <sprintf@plt+0x3d8c>
   155c8:	bl	14acc <sprintf@plt+0x31d4>
   155cc:	mov	r7, r0
   155d0:	ldrb	r0, [r5]
   155d4:	cmp	r7, r0
   155d8:	bne	1564c <sprintf@plt+0x3d54>
   155dc:	mov	r2, r5
   155e0:	ldrb	r1, [r2, #1]!
   155e4:	cmp	r7, #0
   155e8:	beq	15630 <sprintf@plt+0x3d38>
   155ec:	add	r9, r5, #2
   155f0:	uxtb	r0, r1
   155f4:	bl	156a0 <sprintf@plt+0x3da8>
   155f8:	mov	r5, r0
   155fc:	ldrb	r0, [sl]
   15600:	bl	156a0 <sprintf@plt+0x3da8>
   15604:	cmp	r5, r0
   15608:	bne	1564c <sprintf@plt+0x3d54>
   1560c:	subs	r7, r7, #1
   15610:	add	sl, sl, #1
   15614:	ldrb	r1, [r9], #1
   15618:	bne	155f0 <sprintf@plt+0x3cf8>
   1561c:	sub	r5, r9, #1
   15620:	mov	r0, sl
   15624:	cmp	r1, #0
   15628:	bne	15584 <sprintf@plt+0x3c8c>
   1562c:	b	15640 <sprintf@plt+0x3d48>
   15630:	mov	r0, sl
   15634:	mov	r5, r2
   15638:	cmp	r1, #0
   1563c:	bne	15584 <sprintf@plt+0x3c8c>
   15640:	ldrb	r0, [r0]
   15644:	cmp	r0, #0
   15648:	beq	15694 <sprintf@plt+0x3d9c>
   1564c:	ldr	r0, [sp, #16]
   15650:	uxtab	r8, r8, r0
   15654:	ldrb	r1, [r8, #1]!
   15658:	sub	r0, r1, #1
   1565c:	uxtb	r0, r0
   15660:	cmp	r0, #63	; 0x3f
   15664:	bcc	1556c <sprintf@plt+0x3c74>
   15668:	ldr	r2, [sp, #8]
   1566c:	add	r2, r2, #4
   15670:	ldr	r0, [sp, #4]
   15674:	cmp	r2, r0
   15678:	bcc	15550 <sprintf@plt+0x3c58>
   1567c:	mov	r4, #2
   15680:	b	15688 <sprintf@plt+0x3d90>
   15684:	mov	r4, #90	; 0x5a
   15688:	bl	118ec <__errno_location@plt>
   1568c:	str	r4, [r0]
   15690:	mvn	r4, #0
   15694:	mov	r0, r4
   15698:	sub	sp, fp, #28
   1569c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156a0:	sub	r1, r0, #65	; 0x41
   156a4:	cmp	r1, #26
   156a8:	addcc	r0, r0, #32
   156ac:	bx	lr
   156b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156b4:	add	fp, sp, #28
   156b8:	sub	sp, sp, #28
   156bc:	mov	r0, #0
   156c0:	str	r0, [sp, #20]
   156c4:	str	r0, [sp, #16]
   156c8:	str	r0, [sp, #24]
   156cc:	str	r2, [sp, #4]
   156d0:	ldr	r0, [r2, #8]
   156d4:	bl	15a84 <sprintf@plt+0x418c>
   156d8:	str	r0, [sp, #8]
   156dc:	ldrb	r0, [r0]
   156e0:	cmp	r0, #42	; 0x2a
   156e4:	beq	157c4 <sprintf@plt+0x3ecc>
   156e8:	movw	r1, #36945	; 0x9051
   156ec:	movt	r1, #1
   156f0:	add	r2, sp, #12
   156f4:	ldr	r0, [sp, #8]
   156f8:	bl	115d4 <rb_strtok_r@plt>
   156fc:	cmp	r0, #0
   15700:	beq	157c4 <sprintf@plt+0x3ecc>
   15704:	mov	r7, r0
   15708:	add	r5, sp, #12
   1570c:	mov	r0, #72	; 0x48
   15710:	bl	15abc <sprintf@plt+0x41c4>
   15714:	mov	r9, r0
   15718:	mov	sl, #2
   1571c:	mov	r6, #0
   15720:	mov	r4, r7
   15724:	b	1572c <sprintf@plt+0x3e34>
   15728:	add	r4, r4, #1
   1572c:	ldrb	r8, [r4]
   15730:	cmp	r8, #46	; 0x2e
   15734:	beq	1575c <sprintf@plt+0x3e64>
   15738:	cmp	r8, #0
   1573c:	beq	15770 <sprintf@plt+0x3e78>
   15740:	bl	117cc <__ctype_b_loc@plt>
   15744:	ldr	r0, [r0]
   15748:	add	r0, r0, r8, lsl #1
   1574c:	ldrb	r0, [r0, #1]
   15750:	tst	r0, #8
   15754:	bne	15728 <sprintf@plt+0x3e30>
   15758:	b	15814 <sprintf@plt+0x3f1c>
   1575c:	cmp	r6, #3
   15760:	bge	15830 <sprintf@plt+0x3f38>
   15764:	add	r6, r6, #1
   15768:	mov	sl, #1
   1576c:	b	15728 <sprintf@plt+0x3e30>
   15770:	sub	r0, r6, #1
   15774:	cmp	r0, #2
   15778:	bcc	1583c <sprintf@plt+0x3f44>
   1577c:	mov	r6, r9
   15780:	str	sl, [r6], #60	; 0x3c
   15784:	add	r0, r9, #4
   15788:	mov	r1, r7
   1578c:	mov	r2, #53	; 0x35
   15790:	bl	1167c <rb_strlcpy@plt>
   15794:	mov	r0, r9
   15798:	mov	r1, r6
   1579c:	add	r2, sp, #16
   157a0:	bl	15adc <sprintf@plt+0x41e4>
   157a4:	mov	r0, #0
   157a8:	movw	r1, #36945	; 0x9051
   157ac:	movt	r1, #1
   157b0:	mov	r2, r5
   157b4:	bl	115d4 <rb_strtok_r@plt>
   157b8:	mov	r7, r0
   157bc:	cmp	r0, #0
   157c0:	bne	1570c <sprintf@plt+0x3e14>
   157c4:	ldr	r0, [sp, #8]
   157c8:	bl	15ba8 <sprintf@plt+0x42b0>
   157cc:	ldr	r4, [sp, #4]
   157d0:	ldr	r0, [r4, #4]
   157d4:	bl	11760 <atoi@plt>
   157d8:	ldr	r7, [r4]
   157dc:	ldr	r1, [r4, #12]
   157e0:	and	r2, r0, #3
   157e4:	add	r3, sp, #16
   157e8:	mov	r0, r7
   157ec:	bl	15bb4 <sprintf@plt+0x42bc>
   157f0:	cmp	r0, #0
   157f4:	subne	sp, fp, #28
   157f8:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157fc:	movw	r1, #37147	; 0x911b
   15800:	movt	r1, #1
   15804:	mov	r0, #67	; 0x43
   15808:	bl	12428 <sprintf@plt+0xb30>
   1580c:	mov	r0, #3
   15810:	bl	118e0 <exit@plt>
   15814:	movw	r1, #37005	; 0x908d
   15818:	movt	r1, #1
   1581c:	mov	r0, #67	; 0x43
   15820:	mov	r2, r8
   15824:	bl	12428 <sprintf@plt+0xb30>
   15828:	mov	r0, #3
   1582c:	bl	118e0 <exit@plt>
   15830:	movw	r1, #36947	; 0x9053
   15834:	movt	r1, #1
   15838:	b	15804 <sprintf@plt+0x3f0c>
   1583c:	movw	r1, #37085	; 0x90dd
   15840:	movt	r1, #1
   15844:	b	15804 <sprintf@plt+0x3f0c>
   15848:	push	{r4, sl, fp, lr}
   1584c:	add	fp, sp, #8
   15850:	ldr	r4, [r2]
   15854:	mov	r0, r4
   15858:	bl	15c6c <sprintf@plt+0x4374>
   1585c:	cmp	r0, #0
   15860:	beq	1586c <sprintf@plt+0x3f74>
   15864:	pop	{r4, sl, fp, lr}
   15868:	b	15d90 <sprintf@plt+0x4498>
   1586c:	movw	r1, #37272	; 0x9198
   15870:	movt	r1, #1
   15874:	mov	r0, #87	; 0x57
   15878:	mov	r2, r4
   1587c:	pop	{r4, sl, fp, lr}
   15880:	b	12428 <sprintf@plt+0xb30>
   15884:	b	15ea8 <sprintf@plt+0x45b0>
   15888:	push	{fp, lr}
   1588c:	mov	fp, sp
   15890:	ldr	r0, [r2]
   15894:	bl	11760 <atoi@plt>
   15898:	mov	r2, r0
   1589c:	cmn	r0, #1
   158a0:	movwgt	r0, #44520	; 0xade8
   158a4:	movtgt	r0, #2
   158a8:	strgt	r2, [r0]
   158ac:	popgt	{fp, pc}
   158b0:	movw	r1, #37424	; 0x9230
   158b4:	movt	r1, #1
   158b8:	mov	r0, #67	; 0x43
   158bc:	bl	12428 <sprintf@plt+0xb30>
   158c0:	mov	r0, #3
   158c4:	bl	118e0 <exit@plt>
   158c8:	push	{r4, r5, fp, lr}
   158cc:	add	fp, sp, #8
   158d0:	sub	sp, sp, #8
   158d4:	movw	r5, #61828	; 0xf184
   158d8:	movt	r5, #2
   158dc:	ldr	r0, [r5]
   158e0:	mov	r4, sp
   158e4:	mov	r1, r4
   158e8:	bl	116dc <rb_dictionary_foreach_start@plt>
   158ec:	ldr	r0, [r5]
   158f0:	mov	r1, r4
   158f4:	bl	115ec <rb_dictionary_foreach_cur@plt>
   158f8:	cmp	r0, #0
   158fc:	beq	15928 <sprintf@plt+0x4030>
   15900:	mov	r4, sp
   15904:	bl	159e8 <sprintf@plt+0x40f0>
   15908:	ldr	r0, [r5]
   1590c:	mov	r1, r4
   15910:	bl	11694 <rb_dictionary_foreach_next@plt>
   15914:	ldr	r0, [r5]
   15918:	mov	r1, r4
   1591c:	bl	115ec <rb_dictionary_foreach_cur@plt>
   15920:	cmp	r0, #0
   15924:	bne	15904 <sprintf@plt+0x400c>
   15928:	bl	15ea8 <sprintf@plt+0x45b0>
   1592c:	sub	sp, fp, #8
   15930:	pop	{r4, r5, fp, pc}
   15934:	push	{r4, r5, fp, lr}
   15938:	add	fp, sp, #8
   1593c:	mov	r4, r0
   15940:	movw	r0, #61420	; 0xefec
   15944:	movt	r0, #2
   15948:	ldr	r0, [r0, #8]
   1594c:	cmp	r0, #0
   15950:	beq	159cc <sprintf@plt+0x40d4>
   15954:	mov	r0, r4
   15958:	bl	15ed8 <sprintf@plt+0x45e0>
   1595c:	movw	r0, #44460	; 0xadac
   15960:	movt	r0, #2
   15964:	ldr	r5, [r0, #12]
   15968:	mov	r0, #16
   1596c:	bl	15abc <sprintf@plt+0x41c4>
   15970:	mov	r2, r0
   15974:	mov	r0, r4
   15978:	mov	r1, r5
   1597c:	bl	15ee8 <sprintf@plt+0x45f0>
   15980:	movw	r1, #37461	; 0x9255
   15984:	movt	r1, #1
   15988:	mov	r0, r4
   1598c:	bl	15ef8 <sprintf@plt+0x4600>
   15990:	cmp	r0, #0
   15994:	beq	159c4 <sprintf@plt+0x40cc>
   15998:	movw	r1, #37941	; 0x9435
   1599c:	movt	r1, #1
   159a0:	mov	r0, r4
   159a4:	bl	15ef8 <sprintf@plt+0x4600>
   159a8:	cmp	r0, #0
   159ac:	beq	159c4 <sprintf@plt+0x40cc>
   159b0:	mov	r0, r4
   159b4:	bl	15f48 <sprintf@plt+0x4650>
   159b8:	cmp	r0, #0
   159bc:	moveq	r0, r4
   159c0:	bleq	16018 <sprintf@plt+0x4720>
   159c4:	mov	r0, #1
   159c8:	pop	{r4, r5, fp, pc}
   159cc:	movw	r0, #44460	; 0xadac
   159d0:	movt	r0, #2
   159d4:	ldr	r1, [r0, #12]
   159d8:	mov	r0, r4
   159dc:	bl	12cf4 <sprintf@plt+0x13fc>
   159e0:	mov	r0, #1
   159e4:	pop	{r4, r5, fp, pc}
   159e8:	movw	r1, #37676	; 0x932c
   159ec:	movt	r1, #1
   159f0:	b	16508 <sprintf@plt+0x4c10>
   159f4:	movw	r1, #37702	; 0x9346
   159f8:	movt	r1, #1
   159fc:	b	16508 <sprintf@plt+0x4c10>
   15a00:	push	{r4, sl, fp, lr}
   15a04:	add	fp, sp, #8
   15a08:	mov	r4, r0
   15a0c:	movw	r0, #44460	; 0xadac
   15a10:	movt	r0, #2
   15a14:	ldr	r1, [r0, #12]
   15a18:	mov	r0, r4
   15a1c:	bl	160b0 <sprintf@plt+0x47b8>
   15a20:	cmp	r0, #0
   15a24:	beq	15a74 <sprintf@plt+0x417c>
   15a28:	ldrb	r0, [r0]
   15a2c:	cmp	r0, #0
   15a30:	bne	15a74 <sprintf@plt+0x417c>
   15a34:	movw	r1, #37461	; 0x9255
   15a38:	movt	r1, #1
   15a3c:	mov	r0, r4
   15a40:	bl	15ef8 <sprintf@plt+0x4600>
   15a44:	cmp	r0, #0
   15a48:	beq	15a74 <sprintf@plt+0x417c>
   15a4c:	movw	r1, #37941	; 0x9435
   15a50:	movt	r1, #1
   15a54:	mov	r0, r4
   15a58:	bl	15ef8 <sprintf@plt+0x4600>
   15a5c:	cmp	r0, #0
   15a60:	popeq	{r4, sl, fp, pc}
   15a64:	mov	r0, r4
   15a68:	bl	15f48 <sprintf@plt+0x4650>
   15a6c:	cmp	r0, #0
   15a70:	beq	15a78 <sprintf@plt+0x4180>
   15a74:	pop	{r4, sl, fp, pc}
   15a78:	mov	r0, r4
   15a7c:	pop	{r4, sl, fp, lr}
   15a80:	b	16018 <sprintf@plt+0x4720>
   15a84:	push	{r4, r5, fp, lr}
   15a88:	add	fp, sp, #8
   15a8c:	mov	r4, r0
   15a90:	bl	116f4 <strlen@plt>
   15a94:	add	r0, r0, #1
   15a98:	bl	117f0 <malloc@plt>
   15a9c:	cmp	r0, #0
   15aa0:	beq	15ab8 <sprintf@plt+0x41c0>
   15aa4:	mov	r5, r0
   15aa8:	mov	r1, r4
   15aac:	bl	11754 <strcpy@plt>
   15ab0:	mov	r0, r5
   15ab4:	pop	{r4, r5, fp, pc}
   15ab8:	bl	117c0 <rb_outofmemory@plt>
   15abc:	push	{fp, lr}
   15ac0:	mov	fp, sp
   15ac4:	mov	r1, r0
   15ac8:	mov	r0, #1
   15acc:	bl	11604 <calloc@plt>
   15ad0:	cmp	r0, #0
   15ad4:	popne	{fp, pc}
   15ad8:	bl	117c0 <rb_outofmemory@plt>
   15adc:	push	{fp, lr}
   15ae0:	mov	fp, sp
   15ae4:	cmp	r0, #0
   15ae8:	beq	15b48 <sprintf@plt+0x4250>
   15aec:	cmp	r1, #0
   15af0:	beq	15b68 <sprintf@plt+0x4270>
   15af4:	cmp	r2, #0
   15af8:	beq	15b88 <sprintf@plt+0x4290>
   15afc:	mov	r3, #0
   15b00:	stm	r1, {r0, r3}
   15b04:	ldr	r0, [r2]
   15b08:	str	r0, [r1, #8]
   15b0c:	ldr	r0, [r2]
   15b10:	cmp	r0, #0
   15b14:	beq	15b24 <sprintf@plt+0x422c>
   15b18:	add	r0, r0, #4
   15b1c:	str	r1, [r0]
   15b20:	b	15b34 <sprintf@plt+0x423c>
   15b24:	mov	r0, r2
   15b28:	ldr	r3, [r0, #4]!
   15b2c:	cmp	r3, #0
   15b30:	streq	r1, [r0]
   15b34:	str	r1, [r2]
   15b38:	ldr	r0, [r2, #8]
   15b3c:	add	r0, r0, #1
   15b40:	str	r0, [r2, #8]
   15b44:	pop	{fp, pc}
   15b48:	movw	r0, #35983	; 0x8c8f
   15b4c:	movt	r0, #1
   15b50:	movw	r1, #35888	; 0x8c30
   15b54:	movt	r1, #1
   15b58:	movw	r3, #35996	; 0x8c9c
   15b5c:	movt	r3, #1
   15b60:	mov	r2, #143	; 0x8f
   15b64:	bl	11664 <__assert_fail@plt>
   15b68:	movw	r0, #37195	; 0x914b
   15b6c:	movt	r0, #1
   15b70:	movw	r1, #35888	; 0x8c30
   15b74:	movt	r1, #1
   15b78:	movw	r3, #35996	; 0x8c9c
   15b7c:	movt	r3, #1
   15b80:	mov	r2, #144	; 0x90
   15b84:	bl	11664 <__assert_fail@plt>
   15b88:	movw	r0, #35970	; 0x8c82
   15b8c:	movt	r0, #1
   15b90:	movw	r1, #35888	; 0x8c30
   15b94:	movt	r1, #1
   15b98:	movw	r3, #35996	; 0x8c9c
   15b9c:	movt	r3, #1
   15ba0:	mov	r2, #145	; 0x91
   15ba4:	bl	11664 <__assert_fail@plt>
   15ba8:	cmp	r0, #0
   15bac:	bxeq	lr
   15bb0:	b	116a0 <free@plt>
   15bb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15bb8:	add	fp, sp, #24
   15bbc:	mov	r5, #0
   15bc0:	cmp	r0, #0
   15bc4:	beq	15bdc <sprintf@plt+0x42e4>
   15bc8:	mov	r7, r1
   15bcc:	cmp	r1, #0
   15bd0:	movne	r6, r2
   15bd4:	cmpne	r2, #0
   15bd8:	bne	15be4 <sprintf@plt+0x42ec>
   15bdc:	mov	r0, r5
   15be0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15be4:	mov	r8, r3
   15be8:	mov	r4, r0
   15bec:	bl	15c6c <sprintf@plt+0x4374>
   15bf0:	cmp	r0, #0
   15bf4:	beq	15c08 <sprintf@plt+0x4310>
   15bf8:	mov	r5, r0
   15bfc:	mov	r0, #0
   15c00:	strb	r0, [r5, #784]	; 0x310
   15c04:	b	15c2c <sprintf@plt+0x4334>
   15c08:	mov	r0, #800	; 0x320
   15c0c:	bl	15abc <sprintf@plt+0x41c4>
   15c10:	mov	r5, r0
   15c14:	bl	11874 <rb_make_rb_dlink_node@plt>
   15c18:	mov	r1, r0
   15c1c:	movw	r2, #61420	; 0xefec
   15c20:	movt	r2, #2
   15c24:	mov	r0, r5
   15c28:	bl	15adc <sprintf@plt+0x41e4>
   15c2c:	mov	r0, r5
   15c30:	mov	r1, r4
   15c34:	mov	r2, #256	; 0x100
   15c38:	bl	1167c <rb_strlcpy@plt>
   15c3c:	add	r0, r5, #256	; 0x100
   15c40:	mov	r1, r7
   15c44:	mov	r2, #512	; 0x200
   15c48:	bl	1167c <rb_strlcpy@plt>
   15c4c:	strb	r6, [r5, #768]	; 0x300
   15c50:	add	r1, r5, #772	; 0x304
   15c54:	mov	r0, r8
   15c58:	bl	15cc0 <sprintf@plt+0x43c8>
   15c5c:	mov	r0, #0
   15c60:	str	r0, [r5, #796]	; 0x31c
   15c64:	mov	r0, r5
   15c68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15c6c:	push	{r4, r5, r6, sl, fp, lr}
   15c70:	add	fp, sp, #16
   15c74:	mov	r4, r0
   15c78:	movw	r0, #61420	; 0xefec
   15c7c:	movt	r0, #2
   15c80:	ldr	r6, [r0]
   15c84:	cmp	r6, #0
   15c88:	beq	15cb4 <sprintf@plt+0x43bc>
   15c8c:	ldr	r5, [r6]
   15c90:	mov	r0, r5
   15c94:	mov	r1, r4
   15c98:	bl	115f8 <strcasecmp@plt>
   15c9c:	cmp	r0, #0
   15ca0:	moveq	r0, r5
   15ca4:	popeq	{r4, r5, r6, sl, fp, pc}
   15ca8:	ldr	r6, [r6, #8]
   15cac:	cmp	r6, #0
   15cb0:	bne	15c8c <sprintf@plt+0x4394>
   15cb4:	mov	r5, #0
   15cb8:	mov	r0, r5
   15cbc:	pop	{r4, r5, r6, sl, fp, pc}
   15cc0:	push	{fp, lr}
   15cc4:	mov	fp, sp
   15cc8:	cmp	r0, #0
   15ccc:	beq	15d50 <sprintf@plt+0x4458>
   15cd0:	cmp	r1, #0
   15cd4:	beq	15d70 <sprintf@plt+0x4478>
   15cd8:	ldr	r2, [r0]
   15cdc:	cmp	r2, #0
   15ce0:	popeq	{fp, pc}
   15ce4:	ldr	r3, [r1]
   15ce8:	cmp	r3, #0
   15cec:	beq	15d24 <sprintf@plt+0x442c>
   15cf0:	ldr	r2, [r0, #4]
   15cf4:	str	r3, [r2, #8]
   15cf8:	ldr	r2, [r0, #4]
   15cfc:	str	r2, [r3, #4]
   15d00:	ldr	r2, [r0]
   15d04:	str	r2, [r1]
   15d08:	mov	r2, #0
   15d0c:	str	r2, [r0]
   15d10:	str	r2, [r0, #4]
   15d14:	ldr	r2, [r0, #8]!
   15d18:	ldr	r3, [r1, #8]
   15d1c:	add	r2, r3, r2
   15d20:	b	15d40 <sprintf@plt+0x4448>
   15d24:	str	r2, [r1]
   15d28:	ldr	r2, [r0, #4]
   15d2c:	str	r2, [r1, #4]
   15d30:	mov	r2, #0
   15d34:	str	r2, [r0]
   15d38:	str	r2, [r0, #4]
   15d3c:	ldr	r2, [r0, #8]!
   15d40:	str	r2, [r1, #8]
   15d44:	mov	r1, #0
   15d48:	str	r1, [r0]
   15d4c:	pop	{fp, pc}
   15d50:	movw	r0, #37192	; 0x9148
   15d54:	movt	r0, #1
   15d58:	movw	r1, #35888	; 0x8c30
   15d5c:	movt	r1, #1
   15d60:	movw	r3, #37205	; 0x9155
   15d64:	movt	r3, #1
   15d68:	mov	r2, #324	; 0x144
   15d6c:	bl	11664 <__assert_fail@plt>
   15d70:	movw	r0, #37261	; 0x918d
   15d74:	movt	r0, #1
   15d78:	movw	r1, #35888	; 0x8c30
   15d7c:	movt	r1, #1
   15d80:	movw	r3, #37205	; 0x9155
   15d84:	movt	r3, #1
   15d88:	movw	r2, #325	; 0x145
   15d8c:	bl	11664 <__assert_fail@plt>
   15d90:	push	{r4, sl, fp, lr}
   15d94:	add	fp, sp, #8
   15d98:	mov	r4, r0
   15d9c:	ldr	r0, [r0, #788]	; 0x314
   15da0:	cmp	r0, #1
   15da4:	movge	r0, #1
   15da8:	strbge	r0, [r4, #784]	; 0x310
   15dac:	popge	{r4, sl, fp, pc}
   15db0:	mov	r0, r4
   15db4:	bl	15dc4 <sprintf@plt+0x44cc>
   15db8:	mov	r0, r4
   15dbc:	pop	{r4, sl, fp, lr}
   15dc0:	b	15ba8 <sprintf@plt+0x42b0>
   15dc4:	push	{fp, lr}
   15dc8:	mov	fp, sp
   15dcc:	cmp	r0, #0
   15dd0:	beq	15de8 <sprintf@plt+0x44f0>
   15dd4:	bl	15e08 <sprintf@plt+0x4510>
   15dd8:	cmp	r0, #0
   15ddc:	popeq	{fp, pc}
   15de0:	pop	{fp, lr}
   15de4:	b	11724 <rb_free_rb_dlink_node@plt>
   15de8:	movw	r0, #35983	; 0x8c8f
   15dec:	movt	r0, #1
   15df0:	movw	r1, #35888	; 0x8c30
   15df4:	movt	r1, #1
   15df8:	movw	r3, #37316	; 0x91c4
   15dfc:	movt	r3, #1
   15e00:	mov	r2, #288	; 0x120
   15e04:	bl	11664 <__assert_fail@plt>
   15e08:	cmp	r0, #0
   15e0c:	beq	15e80 <sprintf@plt+0x4588>
   15e10:	mov	r1, r0
   15e14:	movw	ip, #61420	; 0xefec
   15e18:	movt	ip, #2
   15e1c:	ldr	r3, [ip]
   15e20:	mov	r0, r3
   15e24:	cmp	r3, #0
   15e28:	bxeq	lr
   15e2c:	ldr	r2, [r0]
   15e30:	ldr	r3, [r0, #8]
   15e34:	cmp	r2, r1
   15e38:	bne	15e20 <sprintf@plt+0x4528>
   15e3c:	add	r1, r3, #4
   15e40:	cmp	r3, #0
   15e44:	addeq	r1, ip, #4
   15e48:	ldr	r2, [r0, #4]
   15e4c:	str	r2, [r1]
   15e50:	ldmib	r0, {r1, r2}
   15e54:	cmp	r1, #0
   15e58:	mov	r3, ip
   15e5c:	addne	r3, r1, #8
   15e60:	str	r2, [r3]
   15e64:	mov	r1, #0
   15e68:	str	r1, [r0, #4]
   15e6c:	str	r1, [r0, #8]
   15e70:	ldr	r1, [ip, #8]
   15e74:	sub	r1, r1, #1
   15e78:	str	r1, [ip, #8]
   15e7c:	bx	lr
   15e80:	push	{fp, lr}
   15e84:	mov	fp, sp
   15e88:	movw	r0, #35983	; 0x8c8f
   15e8c:	movt	r0, #1
   15e90:	movw	r1, #35888	; 0x8c30
   15e94:	movt	r1, #1
   15e98:	movw	r3, #37365	; 0x91f5
   15e9c:	movt	r3, #1
   15ea0:	movw	r2, #259	; 0x103
   15ea4:	bl	11664 <__assert_fail@plt>
   15ea8:	push	{r4, sl, fp, lr}
   15eac:	add	fp, sp, #8
   15eb0:	movw	r0, #61420	; 0xefec
   15eb4:	movt	r0, #2
   15eb8:	ldr	r4, [r0]
   15ebc:	b	15ecc <sprintf@plt+0x45d4>
   15ec0:	ldr	r0, [r4]
   15ec4:	ldr	r4, [r4, #8]
   15ec8:	bl	15d90 <sprintf@plt+0x4498>
   15ecc:	cmp	r4, #0
   15ed0:	popeq	{r4, sl, fp, pc}
   15ed4:	b	15ec0 <sprintf@plt+0x45c8>
   15ed8:	ldr	r1, [r0, #460]	; 0x1cc
   15edc:	add	r1, r1, #1
   15ee0:	str	r1, [r0, #460]	; 0x1cc
   15ee4:	bx	lr
   15ee8:	ldr	r0, [r0, #464]	; 0x1d0
   15eec:	add	r0, r0, r1, lsl #4
   15ef0:	str	r2, [r0, #8]
   15ef4:	bx	lr
   15ef8:	push	{r4, sl, fp, lr}
   15efc:	add	fp, sp, #8
   15f00:	sub	sp, sp, #8
   15f04:	mov	r2, r1
   15f08:	mov	r4, r0
   15f0c:	add	r1, sp, #4
   15f10:	mov	r0, r2
   15f14:	bl	16024 <sprintf@plt+0x472c>
   15f18:	mov	r1, r0
   15f1c:	mov	r0, #1
   15f20:	cmp	r1, #0
   15f24:	beq	15f40 <sprintf@plt+0x4648>
   15f28:	ldr	r1, [sp, #4]
   15f2c:	mov	r0, r4
   15f30:	bl	1604c <sprintf@plt+0x4754>
   15f34:	sub	r0, r0, #2
   15f38:	clz	r0, r0
   15f3c:	lsr	r0, r0, #5
   15f40:	sub	sp, fp, #8
   15f44:	pop	{r4, sl, fp, pc}
   15f48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15f4c:	add	fp, sp, #24
   15f50:	mov	r4, r0
   15f54:	movw	r8, #44460	; 0xadac
   15f58:	movt	r8, #2
   15f5c:	ldr	r1, [r8, #12]
   15f60:	bl	160b0 <sprintf@plt+0x47b8>
   15f64:	mov	r6, r0
   15f68:	ldrh	r1, [r4, #248]	; 0xf8
   15f6c:	mov	r0, #1
   15f70:	mov	r9, #0
   15f74:	cmp	r1, #2
   15f78:	mov	r7, #1
   15f7c:	beq	15f8c <sprintf@plt+0x4694>
   15f80:	cmp	r1, #10
   15f84:	bne	16010 <sprintf@plt+0x4718>
   15f88:	mov	r7, #2
   15f8c:	strb	r0, [r6]
   15f90:	ldr	r0, [r4]
   15f94:	movw	r1, #37466	; 0x925a
   15f98:	movt	r1, #1
   15f9c:	bl	123bc <sprintf@plt+0xac4>
   15fa0:	movw	r0, #61420	; 0xefec
   15fa4:	movt	r0, #2
   15fa8:	ldr	r5, [r0]
   15fac:	cmp	r5, #0
   15fb0:	bne	15fc4 <sprintf@plt+0x46cc>
   15fb4:	b	15fe8 <sprintf@plt+0x46f0>
   15fb8:	ldr	r5, [r5, #8]
   15fbc:	cmp	r5, #0
   15fc0:	beq	15fe8 <sprintf@plt+0x46f0>
   15fc4:	ldr	r0, [r5]
   15fc8:	ldrb	r1, [r0, #784]	; 0x310
   15fcc:	cmp	r1, #0
   15fd0:	bne	15fb8 <sprintf@plt+0x46c0>
   15fd4:	ldrb	r1, [r0, #768]	; 0x300
   15fd8:	tst	r7, r1
   15fdc:	movne	r1, r4
   15fe0:	blne	160c0 <sprintf@plt+0x47c8>
   15fe4:	b	15fb8 <sprintf@plt+0x46c0>
   15fe8:	ldr	r0, [r6, #12]
   15fec:	cmp	r0, #0
   15ff0:	beq	16010 <sprintf@plt+0x4718>
   15ff4:	movw	r0, #44520	; 0xade8
   15ff8:	movt	r0, #2
   15ffc:	ldr	r2, [r0]
   16000:	ldr	r1, [r8, #12]
   16004:	mov	r0, r4
   16008:	bl	1618c <sprintf@plt+0x4894>
   1600c:	mov	r9, #1
   16010:	mov	r0, r9
   16014:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16018:	movw	r1, #37649	; 0x9311
   1601c:	movt	r1, #1
   16020:	b	16508 <sprintf@plt+0x4c10>
   16024:	push	{r4, sl, fp, lr}
   16028:	add	fp, sp, #8
   1602c:	mov	r4, r1
   16030:	bl	1605c <sprintf@plt+0x4764>
   16034:	cmp	r0, #0
   16038:	moveq	r0, #0
   1603c:	ldrne	r0, [r0, #12]
   16040:	strne	r0, [r4]
   16044:	movne	r0, #1
   16048:	pop	{r4, sl, fp, pc}
   1604c:	ldr	r0, [r0, #464]	; 0x1d0
   16050:	add	r0, r0, r1, lsl #4
   16054:	ldr	r0, [r0, #12]
   16058:	bx	lr
   1605c:	push	{r4, r5, r6, sl, fp, lr}
   16060:	add	fp, sp, #16
   16064:	mov	r4, r0
   16068:	movw	r0, #61832	; 0xf188
   1606c:	movt	r0, #2
   16070:	ldr	r6, [r0]
   16074:	cmp	r6, #0
   16078:	beq	160a4 <sprintf@plt+0x47ac>
   1607c:	ldr	r5, [r6]
   16080:	ldr	r0, [r5, #16]
   16084:	mov	r1, r4
   16088:	bl	115f8 <strcasecmp@plt>
   1608c:	cmp	r0, #0
   16090:	moveq	r0, r5
   16094:	popeq	{r4, r5, r6, sl, fp, pc}
   16098:	ldr	r6, [r6, #8]
   1609c:	cmp	r6, #0
   160a0:	bne	1607c <sprintf@plt+0x4784>
   160a4:	mov	r5, #0
   160a8:	mov	r0, r5
   160ac:	pop	{r4, r5, r6, sl, fp, pc}
   160b0:	ldr	r0, [r0, #464]	; 0x1d0
   160b4:	add	r0, r0, r1, lsl #4
   160b8:	ldr	r0, [r0, #8]
   160bc:	bx	lr
   160c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   160c4:	add	fp, sp, #24
   160c8:	sub	sp, sp, #256	; 0x100
   160cc:	mov	r7, r1
   160d0:	mov	r4, r0
   160d4:	mov	r0, #24
   160d8:	bl	15abc <sprintf@plt+0x41c4>
   160dc:	mov	r5, r0
   160e0:	movw	r0, #44460	; 0xadac
   160e4:	movt	r0, #2
   160e8:	ldr	r1, [r0, #12]
   160ec:	mov	r0, r7
   160f0:	bl	160b0 <sprintf@plt+0x47b8>
   160f4:	mov	r8, r0
   160f8:	stm	r5, {r4, r7}
   160fc:	ldrh	r0, [r7, #248]!	; 0xf8
   16100:	cmp	r0, #10
   16104:	beq	16170 <sprintf@plt+0x4878>
   16108:	cmp	r0, #2
   1610c:	ldrbeq	r0, [r4, #768]	; 0x300
   16110:	tsteq	r0, #1
   16114:	beq	1617c <sprintf@plt+0x4884>
   16118:	mov	r6, sp
   1611c:	mov	r0, r6
   16120:	mov	r1, #256	; 0x100
   16124:	mov	r2, r7
   16128:	mov	r3, r4
   1612c:	bl	1340c <sprintf@plt+0x1b14>
   16130:	movw	r2, #25016	; 0x61b8
   16134:	movt	r2, #1
   16138:	mov	r0, r6
   1613c:	mov	r1, #2
   16140:	mov	r3, r5
   16144:	bl	11d88 <sprintf@plt+0x490>
   16148:	str	r0, [r5, #8]
   1614c:	add	r1, r5, #12
   16150:	add	r2, r8, #4
   16154:	mov	r0, r5
   16158:	bl	15adc <sprintf@plt+0x41e4>
   1615c:	ldr	r0, [r4, #788]	; 0x314
   16160:	add	r0, r0, #1
   16164:	str	r0, [r4, #788]	; 0x314
   16168:	sub	sp, fp, #24
   1616c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16170:	ldrb	r0, [r4, #768]	; 0x300
   16174:	tst	r0, #2
   16178:	bne	16118 <sprintf@plt+0x4820>
   1617c:	mov	r0, r5
   16180:	bl	15ba8 <sprintf@plt+0x42b0>
   16184:	sub	sp, fp, #24
   16188:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1618c:	push	{r4, r5, r6, sl, fp, lr}
   16190:	add	fp, sp, #16
   16194:	mov	r4, r2
   16198:	mov	r5, r1
   1619c:	mov	r6, r0
   161a0:	bl	11700 <rb_current_time@plt>
   161a4:	add	r0, r0, r4
   161a8:	ldr	r1, [r6, #464]	; 0x1d0
   161ac:	add	r1, r1, r5, lsl #4
   161b0:	str	r0, [r1, #4]
   161b4:	pop	{r4, r5, r6, sl, fp, pc}
   161b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161bc:	add	fp, sp, #28
   161c0:	sub	sp, sp, #4
   161c4:	mov	r6, r3
   161c8:	mov	r7, r1
   161cc:	mov	r4, r0
   161d0:	movw	sl, #44460	; 0xadac
   161d4:	movt	sl, #2
   161d8:	ldr	r1, [sl, #12]
   161dc:	ldr	r9, [r3]
   161e0:	ldr	r8, [r3, #4]
   161e4:	mov	r0, r8
   161e8:	bl	160b0 <sprintf@plt+0x47b8>
   161ec:	cmp	r0, #0
   161f0:	beq	16234 <sprintf@plt+0x493c>
   161f4:	mov	r5, r0
   161f8:	cmp	r4, #0
   161fc:	cmpne	r7, #0
   16200:	bne	1623c <sprintf@plt+0x4944>
   16204:	mov	r0, r9
   16208:	bl	163cc <sprintf@plt+0x4ad4>
   1620c:	ldr	r0, [r6, #8]
   16210:	bl	12110 <sprintf@plt+0x818>
   16214:	add	r0, r6, #12
   16218:	add	r1, r5, #4
   1621c:	bl	16440 <sprintf@plt+0x4b48>
   16220:	mov	r0, r6
   16224:	bl	15ba8 <sprintf@plt+0x42b0>
   16228:	ldr	r0, [r5, #12]
   1622c:	cmp	r0, #0
   16230:	beq	16280 <sprintf@plt+0x4988>
   16234:	sub	sp, fp, #28
   16238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1623c:	mov	r0, r6
   16240:	mov	r1, r4
   16244:	bl	162d0 <sprintf@plt+0x49d8>
   16248:	cmp	r0, #0
   1624c:	beq	16204 <sprintf@plt+0x490c>
   16250:	ldr	r0, [r9, #792]	; 0x318
   16254:	add	r0, r0, #1
   16258:	str	r0, [r9, #792]	; 0x318
   1625c:	ldr	r1, [sl, #12]
   16260:	add	r3, r9, #256	; 0x100
   16264:	mov	r0, r8
   16268:	mov	r2, r9
   1626c:	bl	12920 <sprintf@plt+0x1028>
   16270:	mov	r0, r8
   16274:	sub	sp, fp, #28
   16278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1627c:	b	159e8 <sprintf@plt+0x40f0>
   16280:	ldr	r0, [r8]
   16284:	movw	r1, #37502	; 0x927e
   16288:	movt	r1, #1
   1628c:	bl	123bc <sprintf@plt+0xac4>
   16290:	mov	r0, r5
   16294:	bl	15ba8 <sprintf@plt+0x42b0>
   16298:	ldr	r1, [sl, #12]
   1629c:	mov	r0, r8
   162a0:	mov	r2, #0
   162a4:	bl	15ee8 <sprintf@plt+0x45f0>
   162a8:	ldr	r1, [sl, #12]
   162ac:	mov	r0, r8
   162b0:	bl	164e0 <sprintf@plt+0x4be8>
   162b4:	ldr	r1, [sl, #12]
   162b8:	mov	r0, r8
   162bc:	bl	12cf4 <sprintf@plt+0x13fc>
   162c0:	mov	r0, r8
   162c4:	sub	sp, fp, #28
   162c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162cc:	b	164f4 <sprintf@plt+0x4bfc>
   162d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   162d4:	add	fp, sp, #24
   162d8:	ldr	r5, [r0]
   162dc:	ldr	r0, [r5, #780]	; 0x30c
   162e0:	mov	r8, #1
   162e4:	cmp	r0, #0
   162e8:	beq	1639c <sprintf@plt+0x4aa4>
   162ec:	mov	r6, r1
   162f0:	mov	r0, r1
   162f4:	mov	r1, #46	; 0x2e
   162f8:	bl	1164c <strrchr@plt>
   162fc:	cmp	r0, #0
   16300:	beq	16364 <sprintf@plt+0x4a6c>
   16304:	mov	r7, r0
   16308:	ldrb	r0, [r7, #1]!
   1630c:	cmp	r0, #0
   16310:	beq	16364 <sprintf@plt+0x4a6c>
   16314:	ldr	r4, [r5, #772]	; 0x304
   16318:	cmp	r4, #0
   1631c:	bne	16330 <sprintf@plt+0x4a38>
   16320:	b	163a4 <sprintf@plt+0x4aac>
   16324:	ldr	r4, [r4, #8]
   16328:	cmp	r4, #0
   1632c:	beq	163a4 <sprintf@plt+0x4aac>
   16330:	ldr	r1, [r4]
   16334:	ldr	r3, [r1]
   16338:	cmp	r3, #1
   1633c:	mov	r0, r6
   16340:	beq	16350 <sprintf@plt+0x4a58>
   16344:	cmp	r3, #2
   16348:	mov	r0, r7
   1634c:	bne	163b0 <sprintf@plt+0x4ab8>
   16350:	add	r1, r1, #4
   16354:	bl	118d4 <strcmp@plt>
   16358:	cmp	r0, #0
   1635c:	bne	16324 <sprintf@plt+0x4a2c>
   16360:	b	1639c <sprintf@plt+0x4aa4>
   16364:	ldr	r0, [r5, #796]	; 0x31c
   16368:	add	r4, r0, #3600	; 0xe10
   1636c:	bl	11700 <rb_current_time@plt>
   16370:	mov	r8, #0
   16374:	cmp	r4, r0
   16378:	bge	1639c <sprintf@plt+0x4aa4>
   1637c:	movw	r1, #37586	; 0x92d2
   16380:	movt	r1, #1
   16384:	mov	r0, #87	; 0x57
   16388:	mov	r2, r5
   1638c:	mov	r3, r6
   16390:	bl	12428 <sprintf@plt+0xb30>
   16394:	bl	11700 <rb_current_time@plt>
   16398:	str	r0, [r5, #796]	; 0x31c
   1639c:	mov	r0, r8
   163a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   163a4:	mov	r8, #0
   163a8:	mov	r0, r8
   163ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   163b0:	movw	r1, #37539	; 0x92a3
   163b4:	movt	r1, #1
   163b8:	mov	r0, #67	; 0x43
   163bc:	mov	r2, r5
   163c0:	bl	12428 <sprintf@plt+0xb30>
   163c4:	mov	r0, #3
   163c8:	bl	118e0 <exit@plt>
   163cc:	push	{r4, r5, r6, r7, fp, lr}
   163d0:	add	fp, sp, #16
   163d4:	mov	r4, r0
   163d8:	ldr	r0, [r0, #788]	; 0x314
   163dc:	subs	r0, r0, #1
   163e0:	str	r0, [r4, #788]	; 0x314
   163e4:	bgt	1643c <sprintf@plt+0x4b44>
   163e8:	ldrb	r0, [r4, #784]	; 0x310
   163ec:	cmp	r0, #0
   163f0:	popeq	{r4, r5, r6, r7, fp, pc}
   163f4:	mov	r5, r4
   163f8:	ldr	r6, [r5, #772]!	; 0x304
   163fc:	cmp	r6, #0
   16400:	beq	16428 <sprintf@plt+0x4b30>
   16404:	ldr	r7, [r6, #8]
   16408:	mov	r0, r6
   1640c:	mov	r1, r5
   16410:	bl	16440 <sprintf@plt+0x4b48>
   16414:	mov	r0, r6
   16418:	bl	15ba8 <sprintf@plt+0x42b0>
   1641c:	cmp	r7, #0
   16420:	mov	r6, r7
   16424:	bne	16404 <sprintf@plt+0x4b0c>
   16428:	mov	r0, r4
   1642c:	bl	15dc4 <sprintf@plt+0x44cc>
   16430:	mov	r0, r4
   16434:	pop	{r4, r5, r6, r7, fp, lr}
   16438:	b	15ba8 <sprintf@plt+0x42b0>
   1643c:	pop	{r4, r5, r6, r7, fp, pc}
   16440:	push	{fp, lr}
   16444:	mov	fp, sp
   16448:	cmp	r0, #0
   1644c:	beq	164a0 <sprintf@plt+0x4ba8>
   16450:	cmp	r1, #0
   16454:	beq	164c0 <sprintf@plt+0x4bc8>
   16458:	ldr	ip, [r0, #4]
   1645c:	ldr	r3, [r0, #8]
   16460:	add	r2, r3, #4
   16464:	cmp	r3, #0
   16468:	addeq	r2, r1, #4
   1646c:	str	ip, [r2]
   16470:	ldmib	r0, {r2, ip}
   16474:	cmp	r2, #0
   16478:	mov	r3, r1
   1647c:	addne	r3, r2, #8
   16480:	str	ip, [r3]
   16484:	mov	r2, #0
   16488:	str	r2, [r0, #4]
   1648c:	str	r2, [r0, #8]
   16490:	ldr	r0, [r1, #8]
   16494:	sub	r0, r0, #1
   16498:	str	r0, [r1, #8]
   1649c:	pop	{fp, pc}
   164a0:	movw	r0, #37195	; 0x914b
   164a4:	movt	r0, #1
   164a8:	movw	r1, #35888	; 0x8c30
   164ac:	movt	r1, #1
   164b0:	movw	r3, #35916	; 0x8c4c
   164b4:	movt	r3, #1
   164b8:	mov	r2, #235	; 0xeb
   164bc:	bl	11664 <__assert_fail@plt>
   164c0:	movw	r0, #35970	; 0x8c82
   164c4:	movt	r0, #1
   164c8:	movw	r1, #35888	; 0x8c30
   164cc:	movt	r1, #1
   164d0:	movw	r3, #35916	; 0x8c4c
   164d4:	movt	r3, #1
   164d8:	mov	r2, #236	; 0xec
   164dc:	bl	11664 <__assert_fail@plt>
   164e0:	ldr	r0, [r0, #464]	; 0x1d0
   164e4:	add	r0, r0, r1, lsl #4
   164e8:	mov	r1, #0
   164ec:	str	r1, [r0, #4]
   164f0:	bx	lr
   164f4:	ldr	r1, [r0, #460]	; 0x1cc
   164f8:	subs	r1, r1, #1
   164fc:	str	r1, [r0, #460]	; 0x1cc
   16500:	bxne	lr
   16504:	b	12c1c <sprintf@plt+0x1324>
   16508:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1650c:	add	fp, sp, #24
   16510:	mov	r7, r1
   16514:	mov	r9, r0
   16518:	movw	r8, #44460	; 0xadac
   1651c:	movt	r8, #2
   16520:	ldr	r1, [r8, #12]
   16524:	bl	160b0 <sprintf@plt+0x47b8>
   16528:	cmp	r0, #0
   1652c:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   16530:	mov	r5, r0
   16534:	ldr	r0, [r0, #12]
   16538:	cmp	r0, #0
   1653c:	beq	16590 <sprintf@plt+0x4c98>
   16540:	add	r6, r5, #4
   16544:	ldr	r0, [r9]
   16548:	mov	r1, r7
   1654c:	bl	123bc <sprintf@plt+0xac4>
   16550:	ldr	r4, [r6]
   16554:	cmp	r4, #0
   16558:	beq	16590 <sprintf@plt+0x4c98>
   1655c:	ldr	r7, [r4]
   16560:	ldr	r4, [r4, #8]
   16564:	ldr	r0, [r7, #8]
   16568:	bl	12110 <sprintf@plt+0x818>
   1656c:	ldr	r0, [r7]
   16570:	bl	163cc <sprintf@plt+0x4ad4>
   16574:	add	r0, r7, #12
   16578:	mov	r1, r6
   1657c:	bl	16440 <sprintf@plt+0x4b48>
   16580:	mov	r0, r7
   16584:	bl	15ba8 <sprintf@plt+0x42b0>
   16588:	cmp	r4, #0
   1658c:	bne	1655c <sprintf@plt+0x4c64>
   16590:	mov	r0, r5
   16594:	bl	15ba8 <sprintf@plt+0x42b0>
   16598:	ldr	r1, [r8, #12]
   1659c:	mov	r0, r9
   165a0:	mov	r2, #0
   165a4:	bl	15ee8 <sprintf@plt+0x45f0>
   165a8:	ldr	r1, [r8, #12]
   165ac:	mov	r0, r9
   165b0:	bl	164e0 <sprintf@plt+0x4be8>
   165b4:	ldr	r1, [r8, #12]
   165b8:	mov	r0, r9
   165bc:	bl	12cf4 <sprintf@plt+0x13fc>
   165c0:	mov	r0, r9
   165c4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   165c8:	b	164f4 <sprintf@plt+0x4bfc>
   165cc:	push	{fp, lr}
   165d0:	mov	fp, sp
   165d4:	ldr	r0, [r2]
   165d8:	bl	11760 <atoi@plt>
   165dc:	mov	r2, r0
   165e0:	cmn	r0, #1
   165e4:	movwgt	r0, #44620	; 0xae4c
   165e8:	movtgt	r0, #2
   165ec:	strgt	r2, [r0]
   165f0:	popgt	{fp, pc}
   165f4:	movw	r1, #37758	; 0x937e
   165f8:	movt	r1, #1
   165fc:	mov	r0, #67	; 0x43
   16600:	bl	12428 <sprintf@plt+0xb30>
   16604:	mov	r0, #3
   16608:	bl	118e0 <exit@plt>
   1660c:	ldr	r0, [r2]
   16610:	ldrb	r0, [r0]
   16614:	sub	r0, r0, #49	; 0x31
   16618:	clz	r0, r0
   1661c:	lsr	r0, r0, #5
   16620:	movw	r1, #44624	; 0xae50
   16624:	movt	r1, #2
   16628:	strb	r0, [r1]
   1662c:	bx	lr
   16630:	push	{r4, r5, r6, r7, fp, lr}
   16634:	add	fp, sp, #16
   16638:	sub	sp, sp, #8
   1663c:	movw	r6, #61828	; 0xf184
   16640:	movt	r6, #2
   16644:	ldr	r0, [r6]
   16648:	mov	r4, sp
   1664c:	mov	r1, r4
   16650:	bl	116dc <rb_dictionary_foreach_start@plt>
   16654:	ldr	r0, [r6]
   16658:	mov	r1, r4
   1665c:	bl	115ec <rb_dictionary_foreach_cur@plt>
   16660:	cmp	r0, #0
   16664:	beq	166bc <sprintf@plt+0x4dc4>
   16668:	mov	r5, r0
   1666c:	movw	r7, #44560	; 0xae10
   16670:	movt	r7, #2
   16674:	mov	r4, sp
   16678:	ldr	r1, [r7, #12]
   1667c:	mov	r0, r5
   16680:	bl	16868 <sprintf@plt+0x4f70>
   16684:	cmp	r0, #0
   16688:	beq	16698 <sprintf@plt+0x4da0>
   1668c:	mov	r0, r5
   16690:	mov	r1, #2
   16694:	bl	16878 <sprintf@plt+0x4f80>
   16698:	ldr	r0, [r6]
   1669c:	mov	r1, r4
   166a0:	bl	11694 <rb_dictionary_foreach_next@plt>
   166a4:	ldr	r0, [r6]
   166a8:	mov	r1, r4
   166ac:	bl	115ec <rb_dictionary_foreach_cur@plt>
   166b0:	mov	r5, r0
   166b4:	cmp	r0, #0
   166b8:	bne	16678 <sprintf@plt+0x4d80>
   166bc:	sub	sp, fp, #16
   166c0:	pop	{r4, r5, r6, r7, fp, pc}
   166c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   166c8:	add	fp, sp, #24
   166cc:	sub	sp, sp, #272	; 0x110
   166d0:	mov	r4, r0
   166d4:	bl	16954 <sprintf@plt+0x505c>
   166d8:	mov	r5, r0
   166dc:	movw	r0, #44624	; 0xae50
   166e0:	movt	r0, #2
   166e4:	ldrb	r0, [r0]
   166e8:	cmp	r0, #0
   166ec:	beq	167c8 <sprintf@plt+0x4ed0>
   166f0:	ldrh	r6, [r4, #248]	; 0xf8
   166f4:	mov	r0, r4
   166f8:	bl	16974 <sprintf@plt+0x507c>
   166fc:	ldr	r0, [r4]
   16700:	movw	r1, #37795	; 0x93a3
   16704:	movt	r1, #1
   16708:	bl	123bc <sprintf@plt+0xac4>
   1670c:	movw	r7, #44560	; 0xae10
   16710:	movt	r7, #2
   16714:	ldr	r1, [r7, #12]
   16718:	mov	r0, r4
   1671c:	mov	r2, r5
   16720:	bl	1691c <sprintf@plt+0x5024>
   16724:	movw	r9, #44620	; 0xae4c
   16728:	movt	r9, #2
   1672c:	ldr	r2, [r9]
   16730:	ldr	r1, [r7, #12]
   16734:	mov	r0, r4
   16738:	bl	16984 <sprintf@plt+0x508c>
   1673c:	ldr	r2, [r4, #4]
   16740:	movw	r3, #37941	; 0x9435
   16744:	movt	r3, #1
   16748:	mov	r0, r6
   1674c:	mov	r1, #1
   16750:	bl	115bc <rb_socket@plt>
   16754:	str	r0, [r5]
   16758:	cmp	r0, #0
   1675c:	beq	167f8 <sprintf@plt+0x4f00>
   16760:	mov	r6, r0
   16764:	add	r5, r4, #248	; 0xf8
   16768:	add	r1, r4, #64	; 0x40
   1676c:	add	r8, sp, #136	; 0x88
   16770:	mov	r0, r8
   16774:	mov	r2, #128	; 0x80
   16778:	bl	11718 <memcpy@plt>
   1677c:	add	r7, sp, #8
   16780:	mov	r0, r7
   16784:	mov	r1, r5
   16788:	mov	r2, #128	; 0x80
   1678c:	bl	11718 <memcpy@plt>
   16790:	mov	r0, #0
   16794:	strh	r0, [sp, #138]	; 0x8a
   16798:	mov	r0, #28928	; 0x7100
   1679c:	strh	r0, [sp, #10]
   167a0:	ldr	r0, [r9]
   167a4:	str	r4, [sp]
   167a8:	str	r0, [sp, #4]
   167ac:	movw	r3, #27056	; 0x69b0
   167b0:	movt	r3, #1
   167b4:	mov	r0, r6
   167b8:	mov	r1, r7
   167bc:	mov	r2, r8
   167c0:	bl	1155c <rb_connect_tcp@plt>
   167c4:	b	16824 <sprintf@plt+0x4f2c>
   167c8:	mov	r0, r5
   167cc:	bl	16910 <sprintf@plt+0x5018>
   167d0:	ldr	r0, [r4]
   167d4:	movw	r1, #37908	; 0x9414
   167d8:	movt	r1, #1
   167dc:	bl	123bc <sprintf@plt+0xac4>
   167e0:	movw	r0, #44560	; 0xae10
   167e4:	movt	r0, #2
   167e8:	ldr	r1, [r0, #12]
   167ec:	mov	r0, r4
   167f0:	bl	12cf4 <sprintf@plt+0x13fc>
   167f4:	b	16824 <sprintf@plt+0x4f2c>
   167f8:	bl	118ec <__errno_location@plt>
   167fc:	ldr	r0, [r0]
   16800:	bl	11508 <strerror@plt>
   16804:	mov	r2, r0
   16808:	movw	r1, #37947	; 0x943b
   1680c:	movt	r1, #1
   16810:	mov	r0, #68	; 0x44
   16814:	bl	12428 <sprintf@plt+0xb30>
   16818:	mov	r0, r4
   1681c:	mov	r1, #2
   16820:	bl	16878 <sprintf@plt+0x4f80>
   16824:	mov	r0, #1
   16828:	sub	sp, fp, #24
   1682c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16830:	push	{r4, sl, fp, lr}
   16834:	add	fp, sp, #8
   16838:	mov	r4, r0
   1683c:	movw	r0, #44560	; 0xae10
   16840:	movt	r0, #2
   16844:	ldr	r1, [r0, #12]
   16848:	mov	r0, r4
   1684c:	bl	16868 <sprintf@plt+0x4f70>
   16850:	cmp	r0, #0
   16854:	popeq	{r4, sl, fp, pc}
   16858:	mov	r0, r4
   1685c:	mov	r1, #2
   16860:	pop	{r4, sl, fp, lr}
   16864:	b	16878 <sprintf@plt+0x4f80>
   16868:	ldr	r0, [r0, #464]	; 0x1d0
   1686c:	add	r0, r0, r1, lsl #4
   16870:	ldr	r0, [r0, #8]
   16874:	bx	lr
   16878:	push	{r4, r5, r6, r7, fp, lr}
   1687c:	add	fp, sp, #16
   16880:	mov	r5, r1
   16884:	mov	r4, r0
   16888:	movw	r7, #44560	; 0xae10
   1688c:	movt	r7, #2
   16890:	ldr	r1, [r7, #12]
   16894:	bl	16868 <sprintf@plt+0x4f70>
   16898:	mov	r6, r0
   1689c:	add	r0, r4, #440	; 0x1b8
   168a0:	movw	r1, #35412	; 0x8a54
   168a4:	movt	r1, #1
   168a8:	mov	r2, #11
   168ac:	bl	1167c <rb_strlcpy@plt>
   168b0:	ldr	r0, [r6]
   168b4:	cmp	r0, #0
   168b8:	beq	168c0 <sprintf@plt+0x4fc8>
   168bc:	bl	11730 <rb_close@plt>
   168c0:	mov	r0, r6
   168c4:	bl	16910 <sprintf@plt+0x5018>
   168c8:	ldr	r1, [r7, #12]
   168cc:	mov	r0, r4
   168d0:	mov	r2, #0
   168d4:	bl	1691c <sprintf@plt+0x5024>
   168d8:	ldr	r1, [r7, #12]
   168dc:	mov	r0, r4
   168e0:	bl	1692c <sprintf@plt+0x5034>
   168e4:	movw	r0, #38000	; 0x9470
   168e8:	movt	r0, #1
   168ec:	ldr	r1, [r0, r5, lsl #2]
   168f0:	ldr	r0, [r4]
   168f4:	bl	123bc <sprintf@plt+0xac4>
   168f8:	ldr	r1, [r7, #12]
   168fc:	mov	r0, r4
   16900:	bl	12cf4 <sprintf@plt+0x13fc>
   16904:	mov	r0, r4
   16908:	pop	{r4, r5, r6, r7, fp, lr}
   1690c:	b	16940 <sprintf@plt+0x5048>
   16910:	cmp	r0, #0
   16914:	bxeq	lr
   16918:	b	116a0 <free@plt>
   1691c:	ldr	r0, [r0, #464]	; 0x1d0
   16920:	add	r0, r0, r1, lsl #4
   16924:	str	r2, [r0, #8]
   16928:	bx	lr
   1692c:	ldr	r0, [r0, #464]	; 0x1d0
   16930:	add	r0, r0, r1, lsl #4
   16934:	mov	r1, #0
   16938:	str	r1, [r0, #4]
   1693c:	bx	lr
   16940:	ldr	r1, [r0, #460]	; 0x1cc
   16944:	subs	r1, r1, #1
   16948:	str	r1, [r0, #460]	; 0x1cc
   1694c:	bxne	lr
   16950:	b	12c1c <sprintf@plt+0x1324>
   16954:	push	{fp, lr}
   16958:	mov	fp, sp
   1695c:	mov	r0, #1
   16960:	mov	r1, #4
   16964:	bl	11604 <calloc@plt>
   16968:	cmp	r0, #0
   1696c:	popne	{fp, pc}
   16970:	bl	117c0 <rb_outofmemory@plt>
   16974:	ldr	r1, [r0, #460]	; 0x1cc
   16978:	add	r1, r1, #1
   1697c:	str	r1, [r0, #460]	; 0x1cc
   16980:	bx	lr
   16984:	push	{r4, r5, r6, sl, fp, lr}
   16988:	add	fp, sp, #16
   1698c:	mov	r4, r2
   16990:	mov	r5, r1
   16994:	mov	r6, r0
   16998:	bl	11700 <rb_current_time@plt>
   1699c:	add	r0, r0, r4
   169a0:	ldr	r1, [r6, #464]	; 0x1d0
   169a4:	add	r1, r1, r5, lsl #4
   169a8:	str	r0, [r1, #4]
   169ac:	pop	{r4, r5, r6, sl, fp, pc}
   169b0:	push	{r4, r5, r6, r7, fp, lr}
   169b4:	add	fp, sp, #16
   169b8:	sub	sp, sp, #40	; 0x28
   169bc:	mov	r4, r2
   169c0:	cmp	r1, #0
   169c4:	bne	16a3c <sprintf@plt+0x5144>
   169c8:	movw	r0, #44560	; 0xae10
   169cc:	movt	r0, #2
   169d0:	ldr	r1, [r0, #12]
   169d4:	mov	r0, r4
   169d8:	bl	16868 <sprintf@plt+0x4f70>
   169dc:	mov	r5, r0
   169e0:	ldrh	r3, [r4, #246]	; 0xf6
   169e4:	ldrh	r0, [r4, #62]	; 0x3e
   169e8:	str	r0, [sp]
   169ec:	add	r6, sp, #8
   169f0:	movw	r2, #37981	; 0x945d
   169f4:	movt	r2, #1
   169f8:	mov	r0, r6
   169fc:	mov	r1, #32
   16a00:	bl	11880 <snprintf@plt>
   16a04:	mov	r0, r6
   16a08:	bl	116f4 <strlen@plt>
   16a0c:	mov	r7, r0
   16a10:	ldr	r0, [r5]
   16a14:	mov	r1, r6
   16a18:	mov	r2, r7
   16a1c:	bl	11658 <rb_write@plt>
   16a20:	cmp	r0, r7
   16a24:	bne	16a3c <sprintf@plt+0x5144>
   16a28:	ldr	r0, [r5]
   16a2c:	mov	r1, r4
   16a30:	bl	16a50 <sprintf@plt+0x5158>
   16a34:	sub	sp, fp, #16
   16a38:	pop	{r4, r5, r6, r7, fp, pc}
   16a3c:	mov	r0, r4
   16a40:	mov	r1, #2
   16a44:	bl	16878 <sprintf@plt+0x4f80>
   16a48:	sub	sp, fp, #16
   16a4c:	pop	{r4, r5, r6, r7, fp, pc}
   16a50:	push	{r4, r5, r6, sl, fp, lr}
   16a54:	add	fp, sp, #16
   16a58:	sub	sp, sp, #136	; 0x88
   16a5c:	mov	r4, r1
   16a60:	mov	r5, r0
   16a64:	mov	r6, sp
   16a68:	mov	r0, r6
   16a6c:	mov	r1, #0
   16a70:	mov	r2, #129	; 0x81
   16a74:	bl	11634 <memset@plt>
   16a78:	mov	r0, r5
   16a7c:	mov	r1, r6
   16a80:	mov	r2, #128	; 0x80
   16a84:	bl	116b8 <rb_read@plt>
   16a88:	cmn	r0, #1
   16a8c:	ble	16b48 <sprintf@plt+0x5250>
   16a90:	cmp	r0, #0
   16a94:	beq	16b7c <sprintf@plt+0x5284>
   16a98:	mov	r0, sp
   16a9c:	bl	16b90 <sprintf@plt+0x5298>
   16aa0:	cmp	r0, #0
   16aa4:	bne	16ab4 <sprintf@plt+0x51bc>
   16aa8:	mov	r1, #3
   16aac:	b	16b80 <sprintf@plt+0x5288>
   16ab0:	add	r0, r0, #1
   16ab4:	ldrb	r6, [r0]
   16ab8:	orr	r1, r6, #32
   16abc:	cmp	r1, #126	; 0x7e
   16ac0:	beq	16ab0 <sprintf@plt+0x51b8>
   16ac4:	add	r1, r4, #440	; 0x1b8
   16ac8:	cmp	r6, #0
   16acc:	beq	16b30 <sprintf@plt+0x5238>
   16ad0:	mov	r2, #10
   16ad4:	mov	r3, #1
   16ad8:	uxtb	r5, r6
   16adc:	cmp	r5, #57	; 0x39
   16ae0:	ble	16afc <sprintf@plt+0x5204>
   16ae4:	cmp	r5, #58	; 0x3a
   16ae8:	cmpne	r5, #91	; 0x5b
   16aec:	beq	16b1c <sprintf@plt+0x5224>
   16af0:	cmp	r5, #64	; 0x40
   16af4:	bne	16b14 <sprintf@plt+0x521c>
   16af8:	b	16b30 <sprintf@plt+0x5238>
   16afc:	cmp	r5, #32
   16b00:	beq	16b1c <sprintf@plt+0x5224>
   16b04:	cmp	r5, #10
   16b08:	beq	16b30 <sprintf@plt+0x5238>
   16b0c:	cmp	r5, #13
   16b10:	beq	16b30 <sprintf@plt+0x5238>
   16b14:	strb	r6, [r1], #1
   16b18:	sub	r2, r2, #1
   16b1c:	ldrb	r6, [r0, r3]
   16b20:	cmp	r6, #0
   16b24:	addne	r3, r3, #1
   16b28:	cmpne	r2, #0
   16b2c:	bne	16ad8 <sprintf@plt+0x51e0>
   16b30:	mov	r0, #0
   16b34:	strb	r0, [r1]
   16b38:	mov	r0, r4
   16b3c:	bl	16c5c <sprintf@plt+0x5364>
   16b40:	sub	sp, fp, #16
   16b44:	pop	{r4, r5, r6, sl, fp, pc}
   16b48:	bl	118ec <__errno_location@plt>
   16b4c:	ldr	r0, [r0]
   16b50:	bl	11544 <rb_ignore_errno@plt>
   16b54:	cmp	r0, #0
   16b58:	beq	16b7c <sprintf@plt+0x5284>
   16b5c:	movw	r2, #27216	; 0x6a50
   16b60:	movt	r2, #1
   16b64:	mov	r0, r5
   16b68:	mov	r1, #1
   16b6c:	mov	r3, r4
   16b70:	bl	1158c <rb_setselect@plt>
   16b74:	sub	sp, fp, #16
   16b78:	pop	{r4, r5, r6, sl, fp, pc}
   16b7c:	mov	r1, #2
   16b80:	mov	r0, r4
   16b84:	bl	16878 <sprintf@plt+0x4f80>
   16b88:	sub	sp, fp, #16
   16b8c:	pop	{r4, r5, r6, sl, fp, pc}
   16b90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16b94:	add	fp, sp, #24
   16b98:	mov	r7, r0
   16b9c:	mov	r1, #58	; 0x3a
   16ba0:	bl	115e0 <strchr@plt>
   16ba4:	cmp	r0, #0
   16ba8:	moveq	r4, #0
   16bac:	moveq	r0, r4
   16bb0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   16bb4:	mov	r5, r0
   16bb8:	mov	r4, #0
   16bbc:	strb	r4, [r5], #1
   16bc0:	mov	r0, r5
   16bc4:	mov	r1, #58	; 0x3a
   16bc8:	bl	115e0 <strchr@plt>
   16bcc:	cmp	r0, #0
   16bd0:	beq	16c54 <sprintf@plt+0x535c>
   16bd4:	mov	r8, r0
   16bd8:	mov	r4, #0
   16bdc:	strb	r4, [r8], #1
   16be0:	mov	r0, r7
   16be4:	mov	r1, #44	; 0x2c
   16be8:	bl	115e0 <strchr@plt>
   16bec:	cmp	r0, #0
   16bf0:	beq	16c54 <sprintf@plt+0x535c>
   16bf4:	mov	r6, r0
   16bf8:	mov	r4, #0
   16bfc:	strb	r4, [r0]
   16c00:	mov	r0, r7
   16c04:	bl	11760 <atoi@plt>
   16c08:	cmp	r0, #0
   16c0c:	beq	16c54 <sprintf@plt+0x535c>
   16c10:	add	r0, r6, #1
   16c14:	bl	11760 <atoi@plt>
   16c18:	cmp	r0, #0
   16c1c:	beq	16c54 <sprintf@plt+0x535c>
   16c20:	movw	r1, #37991	; 0x9467
   16c24:	movt	r1, #1
   16c28:	mov	r0, r5
   16c2c:	bl	11790 <strstr@plt>
   16c30:	cmp	r0, #0
   16c34:	beq	16c54 <sprintf@plt+0x535c>
   16c38:	mov	r0, r8
   16c3c:	mov	r1, #58	; 0x3a
   16c40:	bl	115e0 <strchr@plt>
   16c44:	cmp	r0, #0
   16c48:	movne	r1, #0
   16c4c:	strbne	r1, [r0], #1
   16c50:	movne	r4, r0
   16c54:	mov	r0, r4
   16c58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16c5c:	push	{r4, r5, r6, sl, fp, lr}
   16c60:	add	fp, sp, #16
   16c64:	mov	r4, r0
   16c68:	movw	r6, #44560	; 0xae10
   16c6c:	movt	r6, #2
   16c70:	ldr	r1, [r6, #12]
   16c74:	bl	16868 <sprintf@plt+0x4f70>
   16c78:	mov	r5, r0
   16c7c:	ldr	r0, [r0]
   16c80:	cmp	r0, #0
   16c84:	beq	16c8c <sprintf@plt+0x5394>
   16c88:	bl	11730 <rb_close@plt>
   16c8c:	mov	r0, r5
   16c90:	bl	16910 <sprintf@plt+0x5018>
   16c94:	ldr	r1, [r6, #12]
   16c98:	mov	r0, r4
   16c9c:	mov	r2, #0
   16ca0:	bl	1691c <sprintf@plt+0x5024>
   16ca4:	ldr	r1, [r6, #12]
   16ca8:	mov	r0, r4
   16cac:	bl	1692c <sprintf@plt+0x5034>
   16cb0:	ldr	r0, [r4]
   16cb4:	movw	r1, #37814	; 0x93b6
   16cb8:	movt	r1, #1
   16cbc:	bl	123bc <sprintf@plt+0xac4>
   16cc0:	ldr	r1, [r6, #12]
   16cc4:	mov	r0, r4
   16cc8:	bl	12cf4 <sprintf@plt+0x13fc>
   16ccc:	mov	r0, r4
   16cd0:	pop	{r4, r5, r6, sl, fp, lr}
   16cd4:	b	16940 <sprintf@plt+0x5048>
   16cd8:	push	{fp, lr}
   16cdc:	mov	fp, sp
   16ce0:	ldr	r0, [r2]
   16ce4:	bl	11760 <atoi@plt>
   16ce8:	mov	r2, r0
   16cec:	cmn	r0, #1
   16cf0:	movwgt	r0, #44712	; 0xaea8
   16cf4:	movtgt	r0, #2
   16cf8:	strgt	r2, [r0]
   16cfc:	popgt	{fp, pc}
   16d00:	movw	r1, #38033	; 0x9491
   16d04:	movt	r1, #1
   16d08:	mov	r0, #67	; 0x43
   16d0c:	bl	12428 <sprintf@plt+0xb30>
   16d10:	mov	r0, #3
   16d14:	bl	118e0 <exit@plt>
   16d18:	push	{r4, r5, r6, r7, fp, lr}
   16d1c:	add	fp, sp, #16
   16d20:	sub	sp, sp, #8
   16d24:	movw	r6, #61828	; 0xf184
   16d28:	movt	r6, #2
   16d2c:	ldr	r0, [r6]
   16d30:	mov	r4, sp
   16d34:	mov	r1, r4
   16d38:	bl	116dc <rb_dictionary_foreach_start@plt>
   16d3c:	ldr	r0, [r6]
   16d40:	mov	r1, r4
   16d44:	bl	115ec <rb_dictionary_foreach_cur@plt>
   16d48:	cmp	r0, #0
   16d4c:	beq	16da4 <sprintf@plt+0x54ac>
   16d50:	mov	r5, r0
   16d54:	movw	r7, #44652	; 0xae6c
   16d58:	movt	r7, #2
   16d5c:	mov	r4, sp
   16d60:	ldr	r1, [r7, #12]
   16d64:	mov	r0, r5
   16d68:	bl	16e60 <sprintf@plt+0x5568>
   16d6c:	cmp	r0, #0
   16d70:	beq	16d80 <sprintf@plt+0x5488>
   16d74:	mov	r0, r5
   16d78:	mov	r1, #1
   16d7c:	bl	16e70 <sprintf@plt+0x5578>
   16d80:	ldr	r0, [r6]
   16d84:	mov	r1, r4
   16d88:	bl	11694 <rb_dictionary_foreach_next@plt>
   16d8c:	ldr	r0, [r6]
   16d90:	mov	r1, r4
   16d94:	bl	115ec <rb_dictionary_foreach_cur@plt>
   16d98:	mov	r5, r0
   16d9c:	cmp	r0, #0
   16da0:	bne	16d60 <sprintf@plt+0x5468>
   16da4:	sub	sp, fp, #16
   16da8:	pop	{r4, r5, r6, r7, fp, pc}
   16dac:	push	{r4, r5, r6, sl, fp, lr}
   16db0:	add	fp, sp, #16
   16db4:	mov	r4, r0
   16db8:	bl	16f44 <sprintf@plt+0x564c>
   16dbc:	mov	r5, r0
   16dc0:	mov	r0, r4
   16dc4:	bl	16f64 <sprintf@plt+0x566c>
   16dc8:	movw	r6, #44652	; 0xae6c
   16dcc:	movt	r6, #2
   16dd0:	ldr	r1, [r6, #12]
   16dd4:	mov	r0, r4
   16dd8:	mov	r2, r5
   16ddc:	bl	16f0c <sprintf@plt+0x5614>
   16de0:	movw	r0, #44712	; 0xaea8
   16de4:	movt	r0, #2
   16de8:	ldr	r2, [r0]
   16dec:	ldr	r1, [r6, #12]
   16df0:	mov	r0, r4
   16df4:	bl	16f74 <sprintf@plt+0x567c>
   16df8:	add	r0, r4, #192	; 0xc0
   16dfc:	movw	r1, #28576	; 0x6fa0
   16e00:	movt	r1, #1
   16e04:	mov	r2, r4
   16e08:	bl	11f94 <sprintf@plt+0x69c>
   16e0c:	str	r0, [r5]
   16e10:	ldr	r0, [r4]
   16e14:	movw	r1, #38067	; 0x94b3
   16e18:	movt	r1, #1
   16e1c:	bl	123bc <sprintf@plt+0xac4>
   16e20:	mov	r0, #1
   16e24:	pop	{r4, r5, r6, sl, fp, pc}
   16e28:	push	{r4, sl, fp, lr}
   16e2c:	add	fp, sp, #8
   16e30:	mov	r4, r0
   16e34:	movw	r0, #44652	; 0xae6c
   16e38:	movt	r0, #2
   16e3c:	ldr	r1, [r0, #12]
   16e40:	mov	r0, r4
   16e44:	bl	16e60 <sprintf@plt+0x5568>
   16e48:	cmp	r0, #0
   16e4c:	popeq	{r4, sl, fp, pc}
   16e50:	mov	r0, r4
   16e54:	mov	r1, #1
   16e58:	pop	{r4, sl, fp, lr}
   16e5c:	b	16e70 <sprintf@plt+0x5578>
   16e60:	ldr	r0, [r0, #464]	; 0x1d0
   16e64:	add	r0, r0, r1, lsl #4
   16e68:	ldr	r0, [r0, #8]
   16e6c:	bx	lr
   16e70:	push	{r4, r5, r6, r7, fp, lr}
   16e74:	add	fp, sp, #16
   16e78:	mov	r5, r1
   16e7c:	mov	r4, r0
   16e80:	movw	r7, #44652	; 0xae6c
   16e84:	movt	r7, #2
   16e88:	ldr	r1, [r7, #12]
   16e8c:	bl	16e60 <sprintf@plt+0x5568>
   16e90:	mov	r6, r0
   16e94:	add	r0, r4, #376	; 0x178
   16e98:	movw	r1, #35412	; 0x8a54
   16e9c:	movt	r1, #1
   16ea0:	mov	r2, #64	; 0x40
   16ea4:	bl	1167c <rb_strlcpy@plt>
   16ea8:	movw	r0, #38212	; 0x9544
   16eac:	movt	r0, #1
   16eb0:	ldr	r1, [r0, r5, lsl #2]
   16eb4:	ldr	r0, [r4]
   16eb8:	bl	123bc <sprintf@plt+0xac4>
   16ebc:	ldr	r0, [r6]
   16ec0:	bl	12110 <sprintf@plt+0x818>
   16ec4:	mov	r0, r6
   16ec8:	bl	16f00 <sprintf@plt+0x5608>
   16ecc:	ldr	r1, [r7, #12]
   16ed0:	mov	r0, r4
   16ed4:	mov	r2, #0
   16ed8:	bl	16f0c <sprintf@plt+0x5614>
   16edc:	ldr	r1, [r7, #12]
   16ee0:	mov	r0, r4
   16ee4:	bl	16f1c <sprintf@plt+0x5624>
   16ee8:	ldr	r1, [r7, #12]
   16eec:	mov	r0, r4
   16ef0:	bl	12cf4 <sprintf@plt+0x13fc>
   16ef4:	mov	r0, r4
   16ef8:	pop	{r4, r5, r6, r7, fp, lr}
   16efc:	b	16f30 <sprintf@plt+0x5638>
   16f00:	cmp	r0, #0
   16f04:	bxeq	lr
   16f08:	b	116a0 <free@plt>
   16f0c:	ldr	r0, [r0, #464]	; 0x1d0
   16f10:	add	r0, r0, r1, lsl #4
   16f14:	str	r2, [r0, #8]
   16f18:	bx	lr
   16f1c:	ldr	r0, [r0, #464]	; 0x1d0
   16f20:	add	r0, r0, r1, lsl #4
   16f24:	mov	r1, #0
   16f28:	str	r1, [r0, #4]
   16f2c:	bx	lr
   16f30:	ldr	r1, [r0, #460]	; 0x1cc
   16f34:	subs	r1, r1, #1
   16f38:	str	r1, [r0, #460]	; 0x1cc
   16f3c:	bxne	lr
   16f40:	b	12c1c <sprintf@plt+0x1324>
   16f44:	push	{fp, lr}
   16f48:	mov	fp, sp
   16f4c:	mov	r0, #1
   16f50:	mov	r1, #4
   16f54:	bl	11604 <calloc@plt>
   16f58:	cmp	r0, #0
   16f5c:	popne	{fp, pc}
   16f60:	bl	117c0 <rb_outofmemory@plt>
   16f64:	ldr	r1, [r0, #460]	; 0x1cc
   16f68:	add	r1, r1, #1
   16f6c:	str	r1, [r0, #460]	; 0x1cc
   16f70:	bx	lr
   16f74:	push	{r4, r5, r6, sl, fp, lr}
   16f78:	add	fp, sp, #16
   16f7c:	mov	r4, r2
   16f80:	mov	r5, r1
   16f84:	mov	r6, r0
   16f88:	bl	11700 <rb_current_time@plt>
   16f8c:	add	r0, r0, r4
   16f90:	ldr	r1, [r6, #464]	; 0x1d0
   16f94:	add	r1, r1, r5, lsl #4
   16f98:	str	r0, [r1, #4]
   16f9c:	pop	{r4, r5, r6, sl, fp, pc}
   16fa0:	push	{r4, r5, fp, lr}
   16fa4:	add	fp, sp, #8
   16fa8:	mov	r4, r3
   16fac:	cmp	r0, #0
   16fb0:	cmpne	r1, #0
   16fb4:	bne	16fc8 <sprintf@plt+0x56d0>
   16fb8:	mov	r0, r4
   16fbc:	mov	r1, #1
   16fc0:	pop	{r4, r5, fp, lr}
   16fc4:	b	16e70 <sprintf@plt+0x5578>
   16fc8:	mov	r5, r0
   16fcc:	bl	116f4 <strlen@plt>
   16fd0:	cmp	r0, #64	; 0x40
   16fd4:	bcc	16fe8 <sprintf@plt+0x56f0>
   16fd8:	mov	r0, r4
   16fdc:	mov	r1, #2
   16fe0:	pop	{r4, r5, fp, lr}
   16fe4:	b	16e70 <sprintf@plt+0x5578>
   16fe8:	add	r0, r4, #376	; 0x178
   16fec:	mov	r1, r5
   16ff0:	mov	r2, #64	; 0x40
   16ff4:	bl	1167c <rb_strlcpy@plt>
   16ff8:	mov	r0, r4
   16ffc:	pop	{r4, r5, fp, lr}
   17000:	b	17004 <sprintf@plt+0x570c>
   17004:	push	{r4, r5, r6, sl, fp, lr}
   17008:	add	fp, sp, #16
   1700c:	mov	r4, r0
   17010:	movw	r6, #44652	; 0xae6c
   17014:	movt	r6, #2
   17018:	ldr	r1, [r6, #12]
   1701c:	bl	16e60 <sprintf@plt+0x5568>
   17020:	mov	r5, r0
   17024:	mov	r2, r4
   17028:	ldr	r0, [r2], #376	; 0x178
   1702c:	movw	r1, #38183	; 0x9527
   17030:	movt	r1, #1
   17034:	bl	123bc <sprintf@plt+0xac4>
   17038:	ldr	r0, [r5]
   1703c:	bl	12110 <sprintf@plt+0x818>
   17040:	mov	r0, r5
   17044:	bl	16f00 <sprintf@plt+0x5608>
   17048:	ldr	r1, [r6, #12]
   1704c:	mov	r0, r4
   17050:	mov	r2, #0
   17054:	bl	16f0c <sprintf@plt+0x5614>
   17058:	ldr	r1, [r6, #12]
   1705c:	mov	r0, r4
   17060:	bl	16f1c <sprintf@plt+0x5624>
   17064:	ldr	r1, [r6, #12]
   17068:	mov	r0, r4
   1706c:	bl	12cf4 <sprintf@plt+0x13fc>
   17070:	mov	r0, r4
   17074:	pop	{r4, r5, r6, sl, fp, lr}
   17078:	b	16f30 <sprintf@plt+0x5638>
   1707c:	push	{fp, lr}
   17080:	mov	fp, sp
   17084:	ldr	r0, [r2]
   17088:	bl	11760 <atoi@plt>
   1708c:	mov	r2, r0
   17090:	cmn	r0, #1
   17094:	movwgt	r0, #44872	; 0xaf48
   17098:	movtgt	r0, #2
   1709c:	strgt	r2, [r0]
   170a0:	popgt	{fp, pc}
   170a4:	movw	r1, #38334	; 0x95be
   170a8:	movt	r1, #1
   170ac:	mov	r0, #67	; 0x43
   170b0:	pop	{fp, lr}
   170b4:	b	12428 <sprintf@plt+0xb30>
   170b8:	push	{r4, r5, r6, sl, fp, lr}
   170bc:	add	fp, sp, #16
   170c0:	sub	sp, sp, #8
   170c4:	ldr	r0, [r2]
   170c8:	ldrb	r0, [r0]
   170cc:	subs	r0, r0, #49	; 0x31
   170d0:	clz	r0, r0
   170d4:	lsr	r5, r0, #5
   170d8:	movw	r4, #61432	; 0xeff8
   170dc:	movt	r4, #2
   170e0:	bne	17120 <sprintf@plt+0x5828>
   170e4:	ldrb	r0, [r4]
   170e8:	cmp	r0, #0
   170ec:	ldrhne	r1, [r4, #54]	; 0x36
   170f0:	cmpne	r1, #0
   170f4:	bne	171c0 <sprintf@plt+0x58c8>
   170f8:	ldrb	r0, [r4, #188]	; 0xbc
   170fc:	cmp	r0, #0
   17100:	ldrhne	r1, [r4, #242]	; 0xf2
   17104:	cmpne	r1, #0
   17108:	beq	171ac <sprintf@plt+0x58b4>
   1710c:	ldr	r0, [r4, #372]	; 0x174
   17110:	cmp	r0, #0
   17114:	addeq	r0, r4, #188	; 0xbc
   17118:	bleq	178e8 <sprintf@plt+0x5ff0>
   1711c:	b	171ac <sprintf@plt+0x58b4>
   17120:	ldr	r0, [r4, #184]	; 0xb8
   17124:	ldr	r1, [r4, #372]	; 0x174
   17128:	orrs	r1, r0, r1
   1712c:	beq	171ac <sprintf@plt+0x58b4>
   17130:	cmp	r0, #0
   17134:	beq	1713c <sprintf@plt+0x5844>
   17138:	bl	11730 <rb_close@plt>
   1713c:	ldr	r0, [r4, #372]	; 0x174
   17140:	cmp	r0, #0
   17144:	beq	1714c <sprintf@plt+0x5854>
   17148:	bl	11730 <rb_close@plt>
   1714c:	mov	r0, #0
   17150:	str	r0, [r4, #184]	; 0xb8
   17154:	str	r0, [r4, #372]	; 0x174
   17158:	movw	r6, #61828	; 0xf184
   1715c:	movt	r6, #2
   17160:	ldr	r0, [r6]
   17164:	mov	r4, sp
   17168:	mov	r1, r4
   1716c:	bl	116dc <rb_dictionary_foreach_start@plt>
   17170:	ldr	r0, [r6]
   17174:	mov	r1, r4
   17178:	bl	115ec <rb_dictionary_foreach_cur@plt>
   1717c:	cmp	r0, #0
   17180:	beq	171ac <sprintf@plt+0x58b4>
   17184:	mov	r4, sp
   17188:	bl	177d4 <sprintf@plt+0x5edc>
   1718c:	ldr	r0, [r6]
   17190:	mov	r1, r4
   17194:	bl	11694 <rb_dictionary_foreach_next@plt>
   17198:	ldr	r0, [r6]
   1719c:	mov	r1, r4
   171a0:	bl	115ec <rb_dictionary_foreach_cur@plt>
   171a4:	cmp	r0, #0
   171a8:	bne	17188 <sprintf@plt+0x5890>
   171ac:	movw	r0, #61808	; 0xf170
   171b0:	movt	r0, #2
   171b4:	strb	r5, [r0]
   171b8:	sub	sp, fp, #16
   171bc:	pop	{r4, r5, r6, sl, fp, pc}
   171c0:	ldr	r0, [r4, #184]	; 0xb8
   171c4:	cmp	r0, #0
   171c8:	bne	170f8 <sprintf@plt+0x5800>
   171cc:	movw	r0, #61432	; 0xeff8
   171d0:	movt	r0, #2
   171d4:	bl	178e8 <sprintf@plt+0x5ff0>
   171d8:	b	170f8 <sprintf@plt+0x5800>
   171dc:	push	{r4, r5, fp, lr}
   171e0:	add	fp, sp, #8
   171e4:	ldm	r2, {r4, r5}
   171e8:	mov	r0, r5
   171ec:	bl	11760 <atoi@plt>
   171f0:	sub	r1, r0, #1
   171f4:	movw	r2, #65535	; 0xffff
   171f8:	cmp	r1, r2
   171fc:	bcs	17210 <sprintf@plt+0x5918>
   17200:	uxth	r1, r0
   17204:	mov	r0, r4
   17208:	pop	{r4, r5, fp, lr}
   1720c:	b	178e8 <sprintf@plt+0x5ff0>
   17210:	movw	r1, #38616	; 0x96d8
   17214:	movt	r1, #1
   17218:	mov	r0, #67	; 0x43
   1721c:	mov	r2, r4
   17220:	mov	r3, r5
   17224:	bl	12428 <sprintf@plt+0xb30>
   17228:	mov	r0, #3
   1722c:	bl	118e0 <exit@plt>
   17230:	push	{r4, sl, fp, lr}
   17234:	add	fp, sp, #8
   17238:	movw	r4, #61432	; 0xeff8
   1723c:	movt	r4, #2
   17240:	ldr	r0, [r4, #184]	; 0xb8
   17244:	cmp	r0, #0
   17248:	beq	17250 <sprintf@plt+0x5958>
   1724c:	bl	11730 <rb_close@plt>
   17250:	ldr	r0, [r4, #372]	; 0x174
   17254:	cmp	r0, #0
   17258:	beq	17260 <sprintf@plt+0x5968>
   1725c:	bl	11730 <rb_close@plt>
   17260:	movw	r0, #61432	; 0xeff8
   17264:	movt	r0, #2
   17268:	mov	r1, #0
   1726c:	mov	r2, #376	; 0x178
   17270:	pop	{r4, sl, fp, lr}
   17274:	b	11634 <memset@plt>
   17278:	push	{r4, r5, r6, r7, fp, lr}
   1727c:	add	fp, sp, #16
   17280:	mov	r4, r2
   17284:	ldr	r0, [r2, #4]
   17288:	bl	11760 <atoi@plt>
   1728c:	mov	r6, r0
   17290:	mov	r0, #40	; 0x28
   17294:	bl	17e6c <sprintf@plt+0x6574>
   17298:	mov	r5, r0
   1729c:	sub	r0, r6, #1
   172a0:	movw	r1, #65535	; 0xffff
   172a4:	cmp	r0, r1
   172a8:	bcs	173ec <sprintf@plt+0x5af4>
   172ac:	strh	r6, [r5, #20]
   172b0:	ldr	r7, [r4]
   172b4:	mov	r0, r7
   172b8:	bl	17e8c <sprintf@plt+0x6594>
   172bc:	str	r0, [r5, #16]
   172c0:	sub	r0, r0, #1
   172c4:	cmp	r0, #3
   172c8:	bhi	17400 <sprintf@plt+0x5b08>
   172cc:	add	r1, pc, #0
   172d0:	ldr	pc, [r1, r0, lsl #2]
   172d4:	andeq	r7, r1, r4, ror #5
   172d8:	andeq	r7, r1, ip, ror #6
   172dc:	andeq	r7, r1, r0, lsl r3
   172e0:	andeq	r7, r1, ip, lsr r3
   172e4:	uxth	r3, r6
   172e8:	movw	r2, #38684	; 0x971c
   172ec:	movt	r2, #1
   172f0:	mov	r0, r5
   172f4:	mov	r1, #16
   172f8:	bl	11880 <snprintf@plt>
   172fc:	mov	r0, #0
   17300:	strb	r0, [r5, #22]
   17304:	movw	r0, #32520	; 0x7f08
   17308:	movt	r0, #1
   1730c:	b	17394 <sprintf@plt+0x5a9c>
   17310:	uxth	r3, r6
   17314:	movw	r2, #38706	; 0x9732
   17318:	movt	r2, #1
   1731c:	mov	r0, r5
   17320:	mov	r1, #16
   17324:	bl	11880 <snprintf@plt>
   17328:	mov	r0, #0
   1732c:	strb	r0, [r5, #22]
   17330:	movw	r0, #32840	; 0x8048
   17334:	movt	r0, #1
   17338:	b	17394 <sprintf@plt+0x5a9c>
   1733c:	uxth	r3, r6
   17340:	movw	r2, #38722	; 0x9742
   17344:	movt	r2, #1
   17348:	mov	r0, r5
   1734c:	mov	r1, #16
   17350:	bl	11880 <snprintf@plt>
   17354:	movw	r0, #32840	; 0x8048
   17358:	movt	r0, #1
   1735c:	str	r0, [r5, #24]
   17360:	mov	r0, #1
   17364:	strb	r0, [r5, #22]
   17368:	b	17398 <sprintf@plt+0x5aa0>
   1736c:	uxth	r3, r6
   17370:	movw	r2, #38695	; 0x9727
   17374:	movt	r2, #1
   17378:	mov	r0, r5
   1737c:	mov	r1, #16
   17380:	bl	11880 <snprintf@plt>
   17384:	mov	r0, #0
   17388:	strb	r0, [r5, #22]
   1738c:	movw	r0, #32636	; 0x7f7c
   17390:	movt	r0, #1
   17394:	str	r0, [r5, #24]
   17398:	ldrh	r6, [r5, #20]
   1739c:	ldr	r0, [r5, #16]
   173a0:	mov	r1, r6
   173a4:	bl	180e0 <sprintf@plt+0x67e8>
   173a8:	cmp	r0, #0
   173ac:	beq	173d4 <sprintf@plt+0x5adc>
   173b0:	ldr	r2, [r4]
   173b4:	movw	r1, #38785	; 0x9781
   173b8:	movt	r1, #1
   173bc:	mov	r0, #67	; 0x43
   173c0:	mov	r3, r6
   173c4:	bl	12428 <sprintf@plt+0xb30>
   173c8:	mov	r0, r5
   173cc:	pop	{r4, r5, r6, r7, fp, lr}
   173d0:	b	17e60 <sprintf@plt+0x6568>
   173d4:	add	r1, r5, #28
   173d8:	movw	r2, #61812	; 0xf174
   173dc:	movt	r2, #2
   173e0:	mov	r0, r5
   173e4:	pop	{r4, r5, r6, r7, fp, lr}
   173e8:	b	18130 <sprintf@plt+0x6838>
   173ec:	ldm	r4, {r2, r3}
   173f0:	movw	r1, #38647	; 0x96f7
   173f4:	movt	r1, #1
   173f8:	mov	r0, #67	; 0x43
   173fc:	b	17414 <sprintf@plt+0x5b1c>
   17400:	uxth	r3, r6
   17404:	movw	r1, #38739	; 0x9753
   17408:	movt	r1, #1
   1740c:	mov	r0, #67	; 0x43
   17410:	mov	r2, r7
   17414:	bl	12428 <sprintf@plt+0xb30>
   17418:	mov	r0, #3
   1741c:	bl	118e0 <exit@plt>
   17420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17424:	add	fp, sp, #28
   17428:	sub	sp, sp, #12
   1742c:	mov	r6, r2
   17430:	ldr	r5, [r2]
   17434:	mov	r0, r5
   17438:	bl	17e8c <sprintf@plt+0x6594>
   1743c:	mov	r4, r0
   17440:	ldr	r7, [r6, #4]
   17444:	mov	r0, r7
   17448:	bl	11760 <atoi@plt>
   1744c:	mov	r6, r0
   17450:	sub	r0, r0, #1
   17454:	movw	r1, #65535	; 0xffff
   17458:	cmp	r0, r1
   1745c:	bcs	175bc <sprintf@plt+0x5cc4>
   17460:	cmp	r4, #0
   17464:	beq	175d4 <sprintf@plt+0x5cdc>
   17468:	uxth	r1, r6
   1746c:	mov	r0, r4
   17470:	bl	180e0 <sprintf@plt+0x67e8>
   17474:	cmp	r0, #0
   17478:	beq	175e0 <sprintf@plt+0x5ce8>
   1747c:	mov	r4, r0
   17480:	movw	r9, #61828	; 0xf184
   17484:	movt	r9, #2
   17488:	ldr	r0, [r9]
   1748c:	add	r5, sp, #4
   17490:	mov	r1, r5
   17494:	bl	116dc <rb_dictionary_foreach_start@plt>
   17498:	ldr	r0, [r9]
   1749c:	mov	r1, r5
   174a0:	bl	115ec <rb_dictionary_foreach_cur@plt>
   174a4:	cmp	r0, #0
   174a8:	beq	17574 <sprintf@plt+0x5c7c>
   174ac:	mov	r6, r0
   174b0:	movw	sl, #44812	; 0xaf0c
   174b4:	movt	sl, #2
   174b8:	add	r8, sp, #4
   174bc:	ldr	r1, [sl, #12]
   174c0:	mov	r0, r6
   174c4:	bl	17e50 <sprintf@plt+0x6558>
   174c8:	cmp	r0, #0
   174cc:	beq	17550 <sprintf@plt+0x5c58>
   174d0:	mov	r7, r0
   174d4:	mov	r0, r6
   174d8:	bl	181fc <sprintf@plt+0x6904>
   174dc:	ldr	r0, [r7]
   174e0:	cmp	r0, #0
   174e4:	beq	17548 <sprintf@plt+0x5c50>
   174e8:	ldrh	r1, [r4, #20]
   174ec:	ldr	r5, [r0]
   174f0:	ldr	r2, [r5, #8]
   174f4:	ldrh	r3, [r2, #20]
   174f8:	cmp	r3, r1
   174fc:	bne	17510 <sprintf@plt+0x5c18>
   17500:	ldr	r3, [r4, #16]
   17504:	ldr	r2, [r2, #16]
   17508:	cmp	r2, r3
   1750c:	beq	17520 <sprintf@plt+0x5c28>
   17510:	ldr	r0, [r0, #8]
   17514:	cmp	r0, #0
   17518:	bne	174ec <sprintf@plt+0x5bf4>
   1751c:	b	17548 <sprintf@plt+0x5c50>
   17520:	add	r0, r5, #16
   17524:	mov	r1, r7
   17528:	bl	1820c <sprintf@plt+0x6914>
   1752c:	mov	r0, r5
   17530:	bl	17e60 <sprintf@plt+0x6568>
   17534:	ldr	r0, [r7, #8]
   17538:	cmp	r0, #0
   1753c:	bne	17548 <sprintf@plt+0x5c50>
   17540:	mov	r0, r6
   17544:	bl	177d4 <sprintf@plt+0x5edc>
   17548:	mov	r0, r6
   1754c:	bl	182ac <sprintf@plt+0x69b4>
   17550:	ldr	r0, [r9]
   17554:	mov	r1, r8
   17558:	bl	11694 <rb_dictionary_foreach_next@plt>
   1755c:	ldr	r0, [r9]
   17560:	mov	r1, r8
   17564:	bl	115ec <rb_dictionary_foreach_cur@plt>
   17568:	mov	r6, r0
   1756c:	cmp	r0, #0
   17570:	bne	174bc <sprintf@plt+0x5bc4>
   17574:	add	r0, r4, #28
   17578:	movw	r5, #61812	; 0xf174
   1757c:	movt	r5, #2
   17580:	mov	r1, r5
   17584:	bl	1820c <sprintf@plt+0x6914>
   17588:	mov	r0, r4
   1758c:	bl	17e60 <sprintf@plt+0x6568>
   17590:	ldr	r0, [r5, #8]
   17594:	cmp	r0, #0
   17598:	beq	175a4 <sprintf@plt+0x5cac>
   1759c:	sub	sp, fp, #28
   175a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   175a4:	movw	r0, #61808	; 0xf170
   175a8:	movt	r0, #2
   175ac:	mov	r1, #0
   175b0:	strb	r1, [r0]
   175b4:	sub	sp, fp, #28
   175b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   175bc:	movw	r1, #38896	; 0x97f0
   175c0:	movt	r1, #1
   175c4:	mov	r0, #67	; 0x43
   175c8:	mov	r2, r5
   175cc:	mov	r3, r7
   175d0:	b	175f4 <sprintf@plt+0x5cfc>
   175d4:	movw	r1, #38943	; 0x981f
   175d8:	movt	r1, #1
   175dc:	b	175e8 <sprintf@plt+0x5cf0>
   175e0:	movw	r1, #38998	; 0x9856
   175e4:	movt	r1, #1
   175e8:	mov	r0, #67	; 0x43
   175ec:	mov	r2, r5
   175f0:	mov	r3, r6
   175f4:	bl	12428 <sprintf@plt+0xb30>
   175f8:	mov	r0, #3
   175fc:	bl	118e0 <exit@plt>
   17600:	push	{r4, r5, r6, sl, fp, lr}
   17604:	add	fp, sp, #16
   17608:	sub	sp, sp, #8
   1760c:	movw	r0, #61812	; 0xf174
   17610:	movt	r0, #2
   17614:	ldr	r5, [r0]
   17618:	cmp	r5, #0
   1761c:	beq	1764c <sprintf@plt+0x5d54>
   17620:	movw	r4, #61812	; 0xf174
   17624:	movt	r4, #2
   17628:	ldr	r0, [r5]
   1762c:	ldr	r6, [r5, #8]
   17630:	bl	17e60 <sprintf@plt+0x6568>
   17634:	mov	r0, r5
   17638:	mov	r1, r4
   1763c:	bl	1820c <sprintf@plt+0x6914>
   17640:	cmp	r6, #0
   17644:	mov	r5, r6
   17648:	bne	17628 <sprintf@plt+0x5d30>
   1764c:	movw	r5, #61828	; 0xf184
   17650:	movt	r5, #2
   17654:	ldr	r0, [r5]
   17658:	mov	r4, sp
   1765c:	mov	r1, r4
   17660:	bl	116dc <rb_dictionary_foreach_start@plt>
   17664:	ldr	r0, [r5]
   17668:	mov	r1, r4
   1766c:	bl	115ec <rb_dictionary_foreach_cur@plt>
   17670:	cmp	r0, #0
   17674:	beq	176a0 <sprintf@plt+0x5da8>
   17678:	mov	r4, sp
   1767c:	bl	177d4 <sprintf@plt+0x5edc>
   17680:	ldr	r0, [r5]
   17684:	mov	r1, r4
   17688:	bl	11694 <rb_dictionary_foreach_next@plt>
   1768c:	ldr	r0, [r5]
   17690:	mov	r1, r4
   17694:	bl	115ec <rb_dictionary_foreach_cur@plt>
   17698:	cmp	r0, #0
   1769c:	bne	1767c <sprintf@plt+0x5d84>
   176a0:	movw	r0, #61808	; 0xf170
   176a4:	movt	r0, #2
   176a8:	mov	r1, #0
   176ac:	strb	r1, [r0]
   176b0:	sub	sp, fp, #16
   176b4:	pop	{r4, r5, r6, sl, fp, pc}
   176b8:	push	{r4, r5, fp, lr}
   176bc:	add	fp, sp, #8
   176c0:	sub	sp, sp, #8
   176c4:	movw	r5, #61828	; 0xf184
   176c8:	movt	r5, #2
   176cc:	ldr	r0, [r5]
   176d0:	mov	r4, sp
   176d4:	mov	r1, r4
   176d8:	bl	116dc <rb_dictionary_foreach_start@plt>
   176dc:	ldr	r0, [r5]
   176e0:	mov	r1, r4
   176e4:	bl	115ec <rb_dictionary_foreach_cur@plt>
   176e8:	cmp	r0, #0
   176ec:	beq	17718 <sprintf@plt+0x5e20>
   176f0:	mov	r4, sp
   176f4:	bl	177d4 <sprintf@plt+0x5edc>
   176f8:	ldr	r0, [r5]
   176fc:	mov	r1, r4
   17700:	bl	11694 <rb_dictionary_foreach_next@plt>
   17704:	ldr	r0, [r5]
   17708:	mov	r1, r4
   1770c:	bl	115ec <rb_dictionary_foreach_cur@plt>
   17710:	cmp	r0, #0
   17714:	bne	176f4 <sprintf@plt+0x5dfc>
   17718:	sub	sp, fp, #8
   1771c:	pop	{r4, r5, fp, pc}
   17720:	push	{r4, r5, fp, lr}
   17724:	add	fp, sp, #8
   17728:	mov	r4, r0
   1772c:	movw	r0, #61808	; 0xf170
   17730:	movt	r0, #2
   17734:	ldrb	r0, [r0]
   17738:	cmp	r0, #0
   1773c:	movwne	r0, #61812	; 0xf174
   17740:	movtne	r0, #2
   17744:	ldrne	r0, [r0, #8]
   17748:	cmpne	r0, #0
   1774c:	bne	1776c <sprintf@plt+0x5e74>
   17750:	movw	r0, #44812	; 0xaf0c
   17754:	movt	r0, #2
   17758:	ldr	r1, [r0, #12]
   1775c:	mov	r0, r4
   17760:	bl	12cf4 <sprintf@plt+0x13fc>
   17764:	mov	r0, #1
   17768:	pop	{r4, r5, fp, pc}
   1776c:	mov	r0, r4
   17770:	bl	181fc <sprintf@plt+0x6904>
   17774:	movw	r0, #44812	; 0xaf0c
   17778:	movt	r0, #2
   1777c:	ldr	r5, [r0, #12]
   17780:	mov	r0, #16
   17784:	bl	17e6c <sprintf@plt+0x6574>
   17788:	mov	r2, r0
   1778c:	mov	r0, r4
   17790:	mov	r1, r5
   17794:	bl	182c0 <sprintf@plt+0x69c8>
   17798:	movw	r1, #37461	; 0x9255
   1779c:	movt	r1, #1
   177a0:	mov	r0, r4
   177a4:	bl	182d0 <sprintf@plt+0x69d8>
   177a8:	cmp	r0, #0
   177ac:	beq	177cc <sprintf@plt+0x5ed4>
   177b0:	movw	r1, #37941	; 0x9435
   177b4:	movt	r1, #1
   177b8:	mov	r0, r4
   177bc:	bl	182d0 <sprintf@plt+0x69d8>
   177c0:	cmp	r0, #0
   177c4:	movne	r0, r4
   177c8:	blne	18320 <sprintf@plt+0x6a28>
   177cc:	mov	r0, #1
   177d0:	pop	{r4, r5, fp, pc}
   177d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   177d8:	add	fp, sp, #24
   177dc:	mov	r4, r0
   177e0:	movw	r8, #44812	; 0xaf0c
   177e4:	movt	r8, #2
   177e8:	ldr	r1, [r8, #12]
   177ec:	bl	17e50 <sprintf@plt+0x6558>
   177f0:	cmp	r0, #0
   177f4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   177f8:	mov	r5, r0
   177fc:	ldr	r0, [r4]
   17800:	movw	r1, #39126	; 0x98d6
   17804:	movt	r1, #1
   17808:	bl	123bc <sprintf@plt+0xac4>
   1780c:	ldr	r7, [r5]
   17810:	cmp	r7, #0
   17814:	beq	17838 <sprintf@plt+0x5f40>
   17818:	ldr	r6, [r7]
   1781c:	ldr	r7, [r7, #8]
   17820:	ldr	r0, [r6, #4]
   17824:	bl	11730 <rb_close@plt>
   17828:	mov	r0, r6
   1782c:	bl	17e60 <sprintf@plt+0x6568>
   17830:	cmp	r7, #0
   17834:	bne	17818 <sprintf@plt+0x5f20>
   17838:	mov	r0, r5
   1783c:	bl	17e60 <sprintf@plt+0x6568>
   17840:	ldr	r1, [r8, #12]
   17844:	mov	r0, r4
   17848:	mov	r2, #0
   1784c:	bl	182c0 <sprintf@plt+0x69c8>
   17850:	ldr	r1, [r8, #12]
   17854:	mov	r0, r4
   17858:	bl	186c4 <sprintf@plt+0x6dcc>
   1785c:	ldr	r1, [r8, #12]
   17860:	mov	r0, r4
   17864:	bl	12cf4 <sprintf@plt+0x13fc>
   17868:	mov	r0, r4
   1786c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17870:	b	182ac <sprintf@plt+0x69b4>
   17874:	push	{r4, sl, fp, lr}
   17878:	add	fp, sp, #8
   1787c:	mov	r4, r0
   17880:	movw	r0, #44812	; 0xaf0c
   17884:	movt	r0, #2
   17888:	ldr	r1, [r0, #12]
   1788c:	mov	r0, r4
   17890:	bl	17e50 <sprintf@plt+0x6558>
   17894:	cmp	r0, #0
   17898:	beq	178e4 <sprintf@plt+0x5fec>
   1789c:	ldrb	r0, [r0, #12]
   178a0:	cmp	r0, #0
   178a4:	bne	178e4 <sprintf@plt+0x5fec>
   178a8:	movw	r1, #37461	; 0x9255
   178ac:	movt	r1, #1
   178b0:	mov	r0, r4
   178b4:	bl	182d0 <sprintf@plt+0x69d8>
   178b8:	cmp	r0, #0
   178bc:	popeq	{r4, sl, fp, pc}
   178c0:	movw	r1, #37941	; 0x9435
   178c4:	movt	r1, #1
   178c8:	mov	r0, r4
   178cc:	bl	182d0 <sprintf@plt+0x69d8>
   178d0:	cmp	r0, #0
   178d4:	beq	178e4 <sprintf@plt+0x5fec>
   178d8:	mov	r0, r4
   178dc:	pop	{r4, sl, fp, lr}
   178e0:	b	18320 <sprintf@plt+0x6a28>
   178e4:	pop	{r4, sl, fp, pc}
   178e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   178ec:	add	fp, sp, #24
   178f0:	sub	sp, sp, #144	; 0x90
   178f4:	mov	r8, r1
   178f8:	mov	r5, r0
   178fc:	mov	r0, #1
   17900:	str	r0, [sp, #4]
   17904:	add	r1, sp, #16
   17908:	mov	r0, r5
   1790c:	bl	116e8 <rb_inet_pton_sock@plt>
   17910:	cmp	r0, #0
   17914:	beq	17b64 <sprintf@plt+0x626c>
   17918:	mov	r0, r8
   1791c:	bl	17bc8 <sprintf@plt+0x62d0>
   17920:	mov	r1, r0
   17924:	strh	r0, [sp, #18]
   17928:	ldrh	r0, [sp, #16]
   1792c:	cmp	r0, #10
   17930:	bne	17998 <sprintf@plt+0x60a0>
   17934:	movw	r2, #61432	; 0xeff8
   17938:	movt	r2, #2
   1793c:	add	r6, r2, #188	; 0xbc
   17940:	ldr	r3, [r2, #252]	; 0xfc
   17944:	ldr	r7, [sp, #24]
   17948:	cmp	r7, r3
   1794c:	bne	179d8 <sprintf@plt+0x60e0>
   17950:	ldr	r3, [r2, #256]	; 0x100
   17954:	ldr	r7, [sp, #28]
   17958:	cmp	r7, r3
   1795c:	bne	179d8 <sprintf@plt+0x60e0>
   17960:	ldr	r3, [r2, #260]	; 0x104
   17964:	ldr	r7, [sp, #32]
   17968:	cmp	r7, r3
   1796c:	bne	179d8 <sprintf@plt+0x60e0>
   17970:	ldr	r3, [r2, #264]	; 0x108
   17974:	ldr	r7, [sp, #36]	; 0x24
   17978:	cmp	r7, r3
   1797c:	ldrheq	r3, [r2, #246]	; 0xf6
   17980:	cmpeq	r1, r3
   17984:	bne	179d8 <sprintf@plt+0x60e0>
   17988:	ldr	r1, [r2, #372]	; 0x174
   1798c:	cmp	r1, #0
   17990:	bne	179d0 <sprintf@plt+0x60d8>
   17994:	b	179d8 <sprintf@plt+0x60e0>
   17998:	movw	r6, #61432	; 0xeff8
   1799c:	movt	r6, #2
   179a0:	ldr	r2, [r6, #60]	; 0x3c
   179a4:	ldr	r3, [sp, #20]
   179a8:	cmp	r3, r2
   179ac:	bne	179d8 <sprintf@plt+0x60e0>
   179b0:	movw	r6, #61432	; 0xeff8
   179b4:	movt	r6, #2
   179b8:	ldrh	r2, [r6, #58]	; 0x3a
   179bc:	cmp	r1, r2
   179c0:	bne	179d8 <sprintf@plt+0x60e0>
   179c4:	ldr	r1, [r6, #184]	; 0xb8
   179c8:	cmp	r1, #0
   179cc:	beq	179d8 <sprintf@plt+0x60e0>
   179d0:	sub	sp, fp, #24
   179d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   179d8:	movw	r3, #38399	; 0x95ff
   179dc:	movt	r3, #1
   179e0:	mov	r1, #1
   179e4:	mov	r2, #0
   179e8:	bl	115bc <rb_socket@plt>
   179ec:	cmp	r0, #0
   179f0:	beq	17b84 <sprintf@plt+0x628c>
   179f4:	mov	r7, r0
   179f8:	bl	11598 <rb_get_fd@plt>
   179fc:	mov	r1, #4
   17a00:	str	r1, [sp]
   17a04:	add	r3, sp, #4
   17a08:	mov	r1, #1
   17a0c:	mov	r2, #2
   17a10:	bl	118b0 <setsockopt@plt>
   17a14:	cmp	r0, #0
   17a18:	bne	17ba0 <sprintf@plt+0x62a8>
   17a1c:	mov	r0, r7
   17a20:	bl	11598 <rb_get_fd@plt>
   17a24:	ldrh	r1, [sp, #16]
   17a28:	mov	r2, #28
   17a2c:	cmp	r1, #2
   17a30:	movweq	r2, #16
   17a34:	add	r1, sp, #16
   17a38:	bl	11778 <bind@plt>
   17a3c:	cmp	r0, #0
   17a40:	beq	17a60 <sprintf@plt+0x6168>
   17a44:	bl	118ec <__errno_location@plt>
   17a48:	ldr	r0, [r0]
   17a4c:	bl	11508 <strerror@plt>
   17a50:	mov	r2, r0
   17a54:	movw	r1, #38487	; 0x9657
   17a58:	movt	r1, #1
   17a5c:	b	17a90 <sprintf@plt+0x6198>
   17a60:	mov	r0, r7
   17a64:	mov	r1, #128	; 0x80
   17a68:	mov	r2, #0
   17a6c:	bl	1188c <rb_listen@plt>
   17a70:	cmp	r0, #0
   17a74:	beq	17aa8 <sprintf@plt+0x61b0>
   17a78:	bl	118ec <__errno_location@plt>
   17a7c:	ldr	r0, [r0]
   17a80:	bl	11508 <strerror@plt>
   17a84:	mov	r2, r0
   17a88:	movw	r1, #38518	; 0x9676
   17a8c:	movt	r1, #1
   17a90:	mov	r0, #87	; 0x57
   17a94:	bl	12428 <sprintf@plt+0xb30>
   17a98:	mov	r0, r7
   17a9c:	bl	11730 <rb_close@plt>
   17aa0:	sub	sp, fp, #24
   17aa4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17aa8:	ldr	r0, [r6, #184]	; 0xb8
   17aac:	cmp	r0, #0
   17ab0:	beq	17ab8 <sprintf@plt+0x61c0>
   17ab4:	bl	11730 <rb_close@plt>
   17ab8:	str	r7, [r6, #184]	; 0xb8
   17abc:	movw	r4, #61828	; 0xf184
   17ac0:	movt	r4, #2
   17ac4:	ldr	r0, [r4]
   17ac8:	add	r7, sp, #8
   17acc:	mov	r1, r7
   17ad0:	bl	116dc <rb_dictionary_foreach_start@plt>
   17ad4:	ldr	r0, [r4]
   17ad8:	mov	r1, r7
   17adc:	bl	115ec <rb_dictionary_foreach_cur@plt>
   17ae0:	cmp	r0, #0
   17ae4:	beq	17b10 <sprintf@plt+0x6218>
   17ae8:	add	r7, sp, #8
   17aec:	bl	177d4 <sprintf@plt+0x5edc>
   17af0:	ldr	r0, [r4]
   17af4:	mov	r1, r7
   17af8:	bl	11694 <rb_dictionary_foreach_next@plt>
   17afc:	ldr	r0, [r4]
   17b00:	mov	r1, r7
   17b04:	bl	115ec <rb_dictionary_foreach_cur@plt>
   17b08:	cmp	r0, #0
   17b0c:	bne	17aec <sprintf@plt+0x61f4>
   17b10:	mov	r0, r6
   17b14:	mov	r1, r5
   17b18:	mov	r2, #53	; 0x35
   17b1c:	bl	1167c <rb_strlcpy@plt>
   17b20:	strh	r8, [r6, #54]	; 0x36
   17b24:	add	r0, r6, #56	; 0x38
   17b28:	add	r1, sp, #16
   17b2c:	mov	r2, #128	; 0x80
   17b30:	bl	11718 <memcpy@plt>
   17b34:	movw	r0, #61808	; 0xf170
   17b38:	movt	r0, #2
   17b3c:	mov	r1, #1
   17b40:	strb	r1, [r0]
   17b44:	ldr	r0, [r6, #184]	; 0xb8
   17b48:	movw	r2, #31696	; 0x7bd0
   17b4c:	movt	r2, #1
   17b50:	mov	r1, #0
   17b54:	mov	r3, r6
   17b58:	bl	11844 <rb_accept_tcp@plt>
   17b5c:	sub	sp, fp, #24
   17b60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17b64:	movw	r1, #38367	; 0x95df
   17b68:	movt	r1, #1
   17b6c:	mov	r0, #67	; 0x43
   17b70:	mov	r2, r5
   17b74:	mov	r3, r8
   17b78:	bl	12428 <sprintf@plt+0xb30>
   17b7c:	mov	r0, #3
   17b80:	bl	118e0 <exit@plt>
   17b84:	bl	118ec <__errno_location@plt>
   17b88:	ldr	r0, [r0]
   17b8c:	bl	11508 <strerror@plt>
   17b90:	mov	r2, r0
   17b94:	movw	r1, #38419	; 0x9613
   17b98:	movt	r1, #1
   17b9c:	b	17bb8 <sprintf@plt+0x62c0>
   17ba0:	bl	118ec <__errno_location@plt>
   17ba4:	ldr	r0, [r0]
   17ba8:	bl	11508 <strerror@plt>
   17bac:	mov	r2, r0
   17bb0:	movw	r1, #38449	; 0x9631
   17bb4:	movt	r1, #1
   17bb8:	mov	r0, #67	; 0x43
   17bbc:	bl	12428 <sprintf@plt+0xb30>
   17bc0:	mov	r0, #3
   17bc4:	bl	118e0 <exit@plt>
   17bc8:	rev16	r0, r0
   17bcc:	bx	lr
   17bd0:	push	{r4, r5, r6, sl, fp, lr}
   17bd4:	add	fp, sp, #16
   17bd8:	sub	sp, sp, #144	; 0x90
   17bdc:	mov	r4, r0
   17be0:	mov	r0, #128	; 0x80
   17be4:	str	r0, [sp, #12]
   17be8:	cmp	r1, #0
   17bec:	bne	17ce4 <sprintf@plt+0x63ec>
   17bf0:	ldr	r0, [fp, #8]
   17bf4:	cmp	r0, #0
   17bf8:	beq	17ce4 <sprintf@plt+0x63ec>
   17bfc:	mov	r0, r4
   17c00:	bl	11598 <rb_get_fd@plt>
   17c04:	add	r1, sp, #16
   17c08:	add	r2, sp, #12
   17c0c:	bl	11538 <getsockname@plt>
   17c10:	cmp	r0, #0
   17c14:	bne	17ce4 <sprintf@plt+0x63ec>
   17c18:	movw	r6, #61828	; 0xf184
   17c1c:	movt	r6, #2
   17c20:	ldr	r0, [r6]
   17c24:	add	r5, sp, #4
   17c28:	mov	r1, r5
   17c2c:	bl	116dc <rb_dictionary_foreach_start@plt>
   17c30:	ldr	r0, [r6]
   17c34:	mov	r1, r5
   17c38:	bl	115ec <rb_dictionary_foreach_cur@plt>
   17c3c:	cmp	r0, #0
   17c40:	beq	17ce4 <sprintf@plt+0x63ec>
   17c44:	mov	r3, r0
   17c48:	add	r5, sp, #4
   17c4c:	ldrh	r1, [r3, #248]	; 0xf8
   17c50:	ldrh	r0, [sp, #16]
   17c54:	cmp	r1, r0
   17c58:	bne	17cc0 <sprintf@plt+0x63c8>
   17c5c:	cmp	r0, #10
   17c60:	beq	17c80 <sprintf@plt+0x6388>
   17c64:	cmp	r0, #2
   17c68:	bne	17d10 <sprintf@plt+0x6418>
   17c6c:	ldr	r0, [r3, #252]	; 0xfc
   17c70:	ldr	r1, [sp, #20]
   17c74:	cmp	r1, r0
   17c78:	bne	17cc0 <sprintf@plt+0x63c8>
   17c7c:	b	17cf4 <sprintf@plt+0x63fc>
   17c80:	ldr	r0, [r3, #256]	; 0x100
   17c84:	ldr	r1, [sp, #24]
   17c88:	cmp	r1, r0
   17c8c:	bne	17cc0 <sprintf@plt+0x63c8>
   17c90:	ldr	r0, [r3, #260]	; 0x104
   17c94:	ldr	r1, [sp, #28]
   17c98:	cmp	r1, r0
   17c9c:	bne	17cc0 <sprintf@plt+0x63c8>
   17ca0:	ldr	r0, [r3, #264]	; 0x108
   17ca4:	ldr	r1, [sp, #32]
   17ca8:	cmp	r1, r0
   17cac:	bne	17cc0 <sprintf@plt+0x63c8>
   17cb0:	ldr	r0, [r3, #268]	; 0x10c
   17cb4:	ldr	r1, [sp, #36]	; 0x24
   17cb8:	cmp	r1, r0
   17cbc:	beq	17cf4 <sprintf@plt+0x63fc>
   17cc0:	ldr	r0, [r6]
   17cc4:	mov	r1, r5
   17cc8:	bl	11694 <rb_dictionary_foreach_next@plt>
   17ccc:	ldr	r0, [r6]
   17cd0:	mov	r1, r5
   17cd4:	bl	115ec <rb_dictionary_foreach_cur@plt>
   17cd8:	mov	r3, r0
   17cdc:	cmp	r0, #0
   17ce0:	bne	17c4c <sprintf@plt+0x6354>
   17ce4:	mov	r0, r4
   17ce8:	bl	11730 <rb_close@plt>
   17cec:	sub	sp, fp, #16
   17cf0:	pop	{r4, r5, r6, sl, fp, pc}
   17cf4:	movw	r2, #32040	; 0x7d28
   17cf8:	movt	r2, #1
   17cfc:	mov	r0, r4
   17d00:	mov	r1, #1
   17d04:	bl	1158c <rb_setselect@plt>
   17d08:	sub	sp, fp, #16
   17d0c:	pop	{r4, r5, r6, sl, fp, pc}
   17d10:	movw	r1, #38551	; 0x9697
   17d14:	movt	r1, #1
   17d18:	mov	r0, #67	; 0x43
   17d1c:	bl	12428 <sprintf@plt+0xb30>
   17d20:	mov	r0, #3
   17d24:	bl	118e0 <exit@plt>
   17d28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d2c:	add	fp, sp, #28
   17d30:	sub	sp, sp, #132	; 0x84
   17d34:	mov	sl, r1
   17d38:	mov	r4, r0
   17d3c:	movw	r9, #44812	; 0xaf0c
   17d40:	movt	r9, #2
   17d44:	ldr	r1, [r9, #12]
   17d48:	mov	r0, sl
   17d4c:	bl	17e50 <sprintf@plt+0x6558>
   17d50:	mov	r8, r0
   17d54:	add	r1, sp, #4
   17d58:	mov	r0, r4
   17d5c:	mov	r2, #128	; 0x80
   17d60:	bl	116b8 <rb_read@plt>
   17d64:	cmn	r0, #1
   17d68:	ble	17dc0 <sprintf@plt+0x64c8>
   17d6c:	cmp	r0, #0
   17d70:	beq	17e40 <sprintf@plt+0x6548>
   17d74:	movw	r0, #61812	; 0xf174
   17d78:	movt	r0, #2
   17d7c:	ldr	r5, [r0]
   17d80:	cmp	r5, #0
   17d84:	beq	17e40 <sprintf@plt+0x6548>
   17d88:	add	r7, sp, #4
   17d8c:	ldr	r6, [r5]
   17d90:	mov	r0, r6
   17d94:	bl	116f4 <strlen@plt>
   17d98:	mov	r2, r0
   17d9c:	mov	r0, r6
   17da0:	mov	r1, r7
   17da4:	bl	11898 <strncmp@plt>
   17da8:	cmp	r0, #0
   17dac:	beq	17df4 <sprintf@plt+0x64fc>
   17db0:	ldr	r5, [r5, #8]
   17db4:	cmp	r5, #0
   17db8:	bne	17d8c <sprintf@plt+0x6494>
   17dbc:	b	17e40 <sprintf@plt+0x6548>
   17dc0:	bl	118ec <__errno_location@plt>
   17dc4:	ldr	r0, [r0]
   17dc8:	bl	11544 <rb_ignore_errno@plt>
   17dcc:	cmp	r0, #0
   17dd0:	beq	17e40 <sprintf@plt+0x6548>
   17dd4:	movw	r2, #32040	; 0x7d28
   17dd8:	movt	r2, #1
   17ddc:	mov	r0, r4
   17de0:	mov	r1, #1
   17de4:	mov	r3, sl
   17de8:	bl	1158c <rb_setselect@plt>
   17dec:	sub	sp, fp, #28
   17df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17df4:	ldr	r5, [r8]
   17df8:	cmp	r5, #0
   17dfc:	beq	17e20 <sprintf@plt+0x6528>
   17e00:	ldr	r6, [r5]
   17e04:	ldr	r5, [r5, #8]
   17e08:	ldr	r0, [r6, #4]
   17e0c:	bl	11730 <rb_close@plt>
   17e10:	mov	r0, r6
   17e14:	bl	17e60 <sprintf@plt+0x6568>
   17e18:	cmp	r5, #0
   17e1c:	bne	17e00 <sprintf@plt+0x6508>
   17e20:	mov	r0, r8
   17e24:	bl	17e60 <sprintf@plt+0x6568>
   17e28:	ldr	r1, [r9, #12]
   17e2c:	add	r2, sp, #4
   17e30:	movw	r3, #38596	; 0x96c4
   17e34:	movt	r3, #1
   17e38:	mov	r0, sl
   17e3c:	bl	12920 <sprintf@plt+0x1028>
   17e40:	mov	r0, r4
   17e44:	bl	11730 <rb_close@plt>
   17e48:	sub	sp, fp, #28
   17e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e50:	ldr	r0, [r0, #464]	; 0x1d0
   17e54:	add	r0, r0, r1, lsl #4
   17e58:	ldr	r0, [r0, #8]
   17e5c:	bx	lr
   17e60:	cmp	r0, #0
   17e64:	bxeq	lr
   17e68:	b	116a0 <free@plt>
   17e6c:	push	{fp, lr}
   17e70:	mov	fp, sp
   17e74:	mov	r1, r0
   17e78:	mov	r0, #1
   17e7c:	bl	11604 <calloc@plt>
   17e80:	cmp	r0, #0
   17e84:	popne	{fp, pc}
   17e88:	bl	117c0 <rb_outofmemory@plt>
   17e8c:	push	{r4, sl, fp, lr}
   17e90:	add	fp, sp, #8
   17e94:	mov	r4, r0
   17e98:	movw	r1, #38829	; 0x97ad
   17e9c:	movt	r1, #1
   17ea0:	bl	115f8 <strcasecmp@plt>
   17ea4:	cmp	r0, #0
   17ea8:	moveq	r0, #1
   17eac:	popeq	{r4, sl, fp, pc}
   17eb0:	movw	r1, #38836	; 0x97b4
   17eb4:	movt	r1, #1
   17eb8:	mov	r0, r4
   17ebc:	bl	115f8 <strcasecmp@plt>
   17ec0:	cmp	r0, #0
   17ec4:	moveq	r0, #2
   17ec8:	popeq	{r4, sl, fp, pc}
   17ecc:	movw	r1, #38843	; 0x97bb
   17ed0:	movt	r1, #1
   17ed4:	mov	r0, r4
   17ed8:	bl	115f8 <strcasecmp@plt>
   17edc:	cmp	r0, #0
   17ee0:	moveq	r0, #3
   17ee4:	popeq	{r4, sl, fp, pc}
   17ee8:	movw	r1, #38855	; 0x97c7
   17eec:	movt	r1, #1
   17ef0:	mov	r0, r4
   17ef4:	bl	115f8 <strcasecmp@plt>
   17ef8:	clz	r0, r0
   17efc:	lsr	r0, r0, #5
   17f00:	lsl	r0, r0, #2
   17f04:	pop	{r4, sl, fp, pc}
   17f08:	push	{r4, r5, fp, lr}
   17f0c:	add	fp, sp, #8
   17f10:	sub	sp, sp, #16
   17f14:	mov	r4, r0
   17f18:	mov	r0, #260	; 0x104
   17f1c:	strh	r0, [sp, #6]
   17f20:	ldr	r0, [r4, #12]
   17f24:	ldrh	r1, [r0, #58]	; 0x3a
   17f28:	strh	r1, [sp, #8]
   17f2c:	ldr	r0, [r0, #60]	; 0x3c
   17f30:	mov	r1, #0
   17f34:	strb	r1, [sp, #14]
   17f38:	str	r0, [sp, #10]
   17f3c:	ldr	r0, [r4, #4]
   17f40:	add	r1, sp, #6
   17f44:	mov	r2, #9
   17f48:	bl	11658 <rb_write@plt>
   17f4c:	cmp	r0, #0
   17f50:	blt	17f74 <sprintf@plt+0x667c>
   17f54:	ldr	r5, [r4, #4]
   17f58:	ldr	r4, [r4, #8]
   17f5c:	mov	r0, r4
   17f60:	bl	116f4 <strlen@plt>
   17f64:	add	r2, r0, #1
   17f68:	mov	r0, r5
   17f6c:	mov	r1, r4
   17f70:	bl	11658 <rb_write@plt>
   17f74:	sub	sp, fp, #8
   17f78:	pop	{r4, r5, fp, pc}
   17f7c:	push	{r4, r5, fp, lr}
   17f80:	add	fp, sp, #8
   17f84:	sub	sp, sp, #32
   17f88:	mov	r4, r0
   17f8c:	ldr	r0, [r0]
   17f90:	mov	r1, #1
   17f94:	strh	r1, [sp, #4]
   17f98:	movw	r1, #261	; 0x105
   17f9c:	movt	r1, #1280	; 0x500
   17fa0:	str	r1, [sp]
   17fa4:	ldrh	r0, [r0, #248]	; 0xf8
   17fa8:	cmp	r0, #10
   17fac:	beq	17fd8 <sprintf@plt+0x66e0>
   17fb0:	cmp	r0, #2
   17fb4:	bne	18040 <sprintf@plt+0x6748>
   17fb8:	mov	r0, #1
   17fbc:	strb	r0, [sp, #6]
   17fc0:	ldr	r0, [r4, #12]
   17fc4:	ldr	r1, [r0, #60]	; 0x3c
   17fc8:	str	r1, [sp, #7]
   17fcc:	mvn	r2, #12
   17fd0:	mov	r3, #11
   17fd4:	b	18000 <sprintf@plt+0x6708>
   17fd8:	mov	r0, #4
   17fdc:	strb	r0, [sp, #6]
   17fe0:	ldr	r0, [r4, #12]
   17fe4:	add	r1, r0, #64	; 0x40
   17fe8:	vld1.8	{d16-d17}, [r1]
   17fec:	mov	r1, sp
   17ff0:	orr	r1, r1, #7
   17ff4:	vst1.8	{d16-d17}, [r1]
   17ff8:	mvn	r2, #24
   17ffc:	mov	r3, #23
   18000:	mov	r1, sp
   18004:	add	r3, r1, r3
   18008:	ldrh	r0, [r0, #58]	; 0x3a
   1800c:	strh	r0, [r3]
   18010:	ldr	r0, [r4, #4]
   18014:	bl	11658 <rb_write@plt>
   18018:	cmp	r0, #1
   1801c:	blt	18040 <sprintf@plt+0x6748>
   18020:	ldr	r5, [r4, #4]
   18024:	ldr	r4, [r4, #8]
   18028:	mov	r0, r4
   1802c:	bl	116f4 <strlen@plt>
   18030:	add	r2, r0, #1
   18034:	mov	r0, r5
   18038:	mov	r1, r4
   1803c:	bl	11658 <rb_write@plt>
   18040:	sub	sp, fp, #8
   18044:	pop	{r4, r5, fp, pc}
   18048:	push	{r4, r5, r6, sl, fp, lr}
   1804c:	add	fp, sp, #16
   18050:	sub	sp, sp, #136	; 0x88
   18054:	mov	r4, r0
   18058:	ldr	r3, [r0, #12]
   1805c:	ldrh	r0, [r3, #54]	; 0x36
   18060:	str	r0, [sp]
   18064:	add	r5, sp, #8
   18068:	movw	r2, #38868	; 0x97d4
   1806c:	movt	r2, #1
   18070:	mov	r0, r5
   18074:	mov	r1, #128	; 0x80
   18078:	bl	11880 <snprintf@plt>
   1807c:	ldr	r6, [r4, #4]
   18080:	mov	r0, r5
   18084:	bl	116f4 <strlen@plt>
   18088:	mov	r2, r0
   1808c:	mov	r0, r6
   18090:	mov	r1, r5
   18094:	bl	11658 <rb_write@plt>
   18098:	cmp	r0, #1
   1809c:	blt	180d8 <sprintf@plt+0x67e0>
   180a0:	ldmib	r4, {r5, r6}
   180a4:	mov	r0, r6
   180a8:	bl	116f4 <strlen@plt>
   180ac:	add	r2, r0, #1
   180b0:	mov	r0, r5
   180b4:	mov	r1, r6
   180b8:	bl	11658 <rb_write@plt>
   180bc:	cmp	r0, #1
   180c0:	blt	180d8 <sprintf@plt+0x67e0>
   180c4:	ldr	r0, [r4, #4]
   180c8:	movw	r1, #38893	; 0x97ed
   180cc:	movt	r1, #1
   180d0:	mov	r2, #2
   180d4:	bl	11658 <rb_write@plt>
   180d8:	sub	sp, fp, #16
   180dc:	pop	{r4, r5, r6, sl, fp, pc}
   180e0:	movw	r2, #61812	; 0xf174
   180e4:	movt	r2, #2
   180e8:	ldr	r3, [r2]
   180ec:	cmp	r3, #0
   180f0:	bne	18104 <sprintf@plt+0x680c>
   180f4:	b	18124 <sprintf@plt+0x682c>
   180f8:	ldr	r3, [r3, #8]
   180fc:	cmp	r3, #0
   18100:	beq	18124 <sprintf@plt+0x682c>
   18104:	ldr	ip, [r3]
   18108:	ldr	r2, [ip, #16]
   1810c:	cmp	r2, r0
   18110:	ldrheq	r2, [ip, #20]
   18114:	cmpeq	r2, r1
   18118:	bne	180f8 <sprintf@plt+0x6800>
   1811c:	mov	r0, ip
   18120:	bx	lr
   18124:	mov	ip, #0
   18128:	mov	r0, ip
   1812c:	bx	lr
   18130:	push	{fp, lr}
   18134:	mov	fp, sp
   18138:	cmp	r0, #0
   1813c:	beq	1819c <sprintf@plt+0x68a4>
   18140:	cmp	r1, #0
   18144:	beq	181bc <sprintf@plt+0x68c4>
   18148:	cmp	r2, #0
   1814c:	beq	181dc <sprintf@plt+0x68e4>
   18150:	mov	r3, #0
   18154:	stm	r1, {r0, r3}
   18158:	ldr	r0, [r2]
   1815c:	str	r0, [r1, #8]
   18160:	ldr	r0, [r2]
   18164:	cmp	r0, #0
   18168:	beq	18178 <sprintf@plt+0x6880>
   1816c:	add	r0, r0, #4
   18170:	str	r1, [r0]
   18174:	b	18188 <sprintf@plt+0x6890>
   18178:	mov	r0, r2
   1817c:	ldr	r3, [r0, #4]!
   18180:	cmp	r3, #0
   18184:	streq	r1, [r0]
   18188:	str	r1, [r2]
   1818c:	ldr	r0, [r2, #8]
   18190:	add	r0, r0, #1
   18194:	str	r0, [r2, #8]
   18198:	pop	{fp, pc}
   1819c:	movw	r0, #35983	; 0x8c8f
   181a0:	movt	r0, #1
   181a4:	movw	r1, #35888	; 0x8c30
   181a8:	movt	r1, #1
   181ac:	movw	r3, #35996	; 0x8c9c
   181b0:	movt	r3, #1
   181b4:	mov	r2, #143	; 0x8f
   181b8:	bl	11664 <__assert_fail@plt>
   181bc:	movw	r0, #37195	; 0x914b
   181c0:	movt	r0, #1
   181c4:	movw	r1, #35888	; 0x8c30
   181c8:	movt	r1, #1
   181cc:	movw	r3, #35996	; 0x8c9c
   181d0:	movt	r3, #1
   181d4:	mov	r2, #144	; 0x90
   181d8:	bl	11664 <__assert_fail@plt>
   181dc:	movw	r0, #35970	; 0x8c82
   181e0:	movt	r0, #1
   181e4:	movw	r1, #35888	; 0x8c30
   181e8:	movt	r1, #1
   181ec:	movw	r3, #35996	; 0x8c9c
   181f0:	movt	r3, #1
   181f4:	mov	r2, #145	; 0x91
   181f8:	bl	11664 <__assert_fail@plt>
   181fc:	ldr	r1, [r0, #460]	; 0x1cc
   18200:	add	r1, r1, #1
   18204:	str	r1, [r0, #460]	; 0x1cc
   18208:	bx	lr
   1820c:	push	{fp, lr}
   18210:	mov	fp, sp
   18214:	cmp	r0, #0
   18218:	beq	1826c <sprintf@plt+0x6974>
   1821c:	cmp	r1, #0
   18220:	beq	1828c <sprintf@plt+0x6994>
   18224:	ldr	ip, [r0, #4]
   18228:	ldr	r3, [r0, #8]
   1822c:	add	r2, r3, #4
   18230:	cmp	r3, #0
   18234:	addeq	r2, r1, #4
   18238:	str	ip, [r2]
   1823c:	ldmib	r0, {r2, ip}
   18240:	cmp	r2, #0
   18244:	mov	r3, r1
   18248:	addne	r3, r2, #8
   1824c:	str	ip, [r3]
   18250:	mov	r2, #0
   18254:	str	r2, [r0, #4]
   18258:	str	r2, [r0, #8]
   1825c:	ldr	r0, [r1, #8]
   18260:	sub	r0, r0, #1
   18264:	str	r0, [r1, #8]
   18268:	pop	{fp, pc}
   1826c:	movw	r0, #37195	; 0x914b
   18270:	movt	r0, #1
   18274:	movw	r1, #35888	; 0x8c30
   18278:	movt	r1, #1
   1827c:	movw	r3, #35916	; 0x8c4c
   18280:	movt	r3, #1
   18284:	mov	r2, #235	; 0xeb
   18288:	bl	11664 <__assert_fail@plt>
   1828c:	movw	r0, #35970	; 0x8c82
   18290:	movt	r0, #1
   18294:	movw	r1, #35888	; 0x8c30
   18298:	movt	r1, #1
   1829c:	movw	r3, #35916	; 0x8c4c
   182a0:	movt	r3, #1
   182a4:	mov	r2, #236	; 0xec
   182a8:	bl	11664 <__assert_fail@plt>
   182ac:	ldr	r1, [r0, #460]	; 0x1cc
   182b0:	subs	r1, r1, #1
   182b4:	str	r1, [r0, #460]	; 0x1cc
   182b8:	bxne	lr
   182bc:	b	12c1c <sprintf@plt+0x1324>
   182c0:	ldr	r0, [r0, #464]	; 0x1d0
   182c4:	add	r0, r0, r1, lsl #4
   182c8:	str	r2, [r0, #8]
   182cc:	bx	lr
   182d0:	push	{r4, sl, fp, lr}
   182d4:	add	fp, sp, #8
   182d8:	sub	sp, sp, #8
   182dc:	mov	r2, r1
   182e0:	mov	r4, r0
   182e4:	add	r1, sp, #4
   182e8:	mov	r0, r2
   182ec:	bl	183a8 <sprintf@plt+0x6ab0>
   182f0:	mov	r1, r0
   182f4:	mov	r0, #1
   182f8:	cmp	r1, #0
   182fc:	beq	18318 <sprintf@plt+0x6a20>
   18300:	ldr	r1, [sp, #4]
   18304:	mov	r0, r4
   18308:	bl	183d0 <sprintf@plt+0x6ad8>
   1830c:	sub	r0, r0, #2
   18310:	clz	r0, r0
   18314:	lsr	r0, r0, #5
   18318:	sub	sp, fp, #8
   1831c:	pop	{r4, sl, fp, pc}
   18320:	push	{r4, r5, r6, sl, fp, lr}
   18324:	add	fp, sp, #16
   18328:	mov	r4, r0
   1832c:	movw	r0, #44812	; 0xaf0c
   18330:	movt	r0, #2
   18334:	ldr	r5, [r0, #12]
   18338:	mov	r0, r4
   1833c:	mov	r1, r5
   18340:	bl	17e50 <sprintf@plt+0x6558>
   18344:	mov	r6, r0
   18348:	movw	r0, #44872	; 0xaf48
   1834c:	movt	r0, #2
   18350:	ldr	r2, [r0]
   18354:	mov	r0, r4
   18358:	mov	r1, r5
   1835c:	bl	18434 <sprintf@plt+0x6b3c>
   18360:	mov	r0, #1
   18364:	strb	r0, [r6, #12]
   18368:	movw	r0, #61812	; 0xf174
   1836c:	movt	r0, #2
   18370:	ldr	r5, [r0]
   18374:	cmp	r5, #0
   18378:	beq	18394 <sprintf@plt+0x6a9c>
   1837c:	ldr	r1, [r5]
   18380:	mov	r0, r4
   18384:	bl	18460 <sprintf@plt+0x6b68>
   18388:	ldr	r5, [r5, #8]
   1838c:	cmp	r5, #0
   18390:	bne	1837c <sprintf@plt+0x6a84>
   18394:	ldr	r0, [r4]
   18398:	movw	r1, #39045	; 0x9885
   1839c:	movt	r1, #1
   183a0:	pop	{r4, r5, r6, sl, fp, lr}
   183a4:	b	123bc <sprintf@plt+0xac4>
   183a8:	push	{r4, sl, fp, lr}
   183ac:	add	fp, sp, #8
   183b0:	mov	r4, r1
   183b4:	bl	183e0 <sprintf@plt+0x6ae8>
   183b8:	cmp	r0, #0
   183bc:	moveq	r0, #0
   183c0:	ldrne	r0, [r0, #12]
   183c4:	strne	r0, [r4]
   183c8:	movne	r0, #1
   183cc:	pop	{r4, sl, fp, pc}
   183d0:	ldr	r0, [r0, #464]	; 0x1d0
   183d4:	add	r0, r0, r1, lsl #4
   183d8:	ldr	r0, [r0, #12]
   183dc:	bx	lr
   183e0:	push	{r4, r5, r6, sl, fp, lr}
   183e4:	add	fp, sp, #16
   183e8:	mov	r4, r0
   183ec:	movw	r0, #61832	; 0xf188
   183f0:	movt	r0, #2
   183f4:	ldr	r6, [r0]
   183f8:	cmp	r6, #0
   183fc:	beq	18428 <sprintf@plt+0x6b30>
   18400:	ldr	r5, [r6]
   18404:	ldr	r0, [r5, #16]
   18408:	mov	r1, r4
   1840c:	bl	115f8 <strcasecmp@plt>
   18410:	cmp	r0, #0
   18414:	moveq	r0, r5
   18418:	popeq	{r4, r5, r6, sl, fp, pc}
   1841c:	ldr	r6, [r6, #8]
   18420:	cmp	r6, #0
   18424:	bne	18400 <sprintf@plt+0x6b08>
   18428:	mov	r5, #0
   1842c:	mov	r0, r5
   18430:	pop	{r4, r5, r6, sl, fp, pc}
   18434:	push	{r4, r5, r6, sl, fp, lr}
   18438:	add	fp, sp, #16
   1843c:	mov	r4, r2
   18440:	mov	r5, r1
   18444:	mov	r6, r0
   18448:	bl	11700 <rb_current_time@plt>
   1844c:	add	r0, r0, r4
   18450:	ldr	r1, [r6, #464]	; 0x1d0
   18454:	add	r1, r1, r5, lsl #4
   18458:	str	r0, [r1, #4]
   1845c:	pop	{r4, r5, r6, sl, fp, pc}
   18460:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18464:	add	fp, sp, #24
   18468:	sub	sp, sp, #280	; 0x118
   1846c:	mov	r9, r1
   18470:	mov	r7, r0
   18474:	movw	r0, #44812	; 0xaf0c
   18478:	movt	r0, #2
   1847c:	ldr	r1, [r0, #12]
   18480:	mov	r0, r7
   18484:	bl	17e50 <sprintf@plt+0x6558>
   18488:	mov	r8, r0
   1848c:	mov	r0, #28
   18490:	bl	17e6c <sprintf@plt+0x6574>
   18494:	mov	r4, r0
   18498:	mov	r0, #1
   1849c:	str	r0, [sp, #12]
   184a0:	mov	r1, r7
   184a4:	ldrh	r6, [r1, #248]!	; 0xf8
   184a8:	cmp	r6, #10
   184ac:	bne	184cc <sprintf@plt+0x6bd4>
   184b0:	ldr	r0, [r9, #16]
   184b4:	cmp	r0, #1
   184b8:	beq	185cc <sprintf@plt+0x6cd4>
   184bc:	movw	r0, #61432	; 0xeff8
   184c0:	movt	r0, #2
   184c4:	add	r5, r0, #188	; 0xbc
   184c8:	b	184d4 <sprintf@plt+0x6bdc>
   184cc:	movw	r5, #61432	; 0xeff8
   184d0:	movt	r5, #2
   184d4:	ldr	r0, [r5, #184]	; 0xb8
   184d8:	cmp	r0, #0
   184dc:	beq	185cc <sprintf@plt+0x6cd4>
   184e0:	add	r0, sp, #144	; 0x90
   184e4:	mov	r2, #128	; 0x80
   184e8:	bl	11718 <memcpy@plt>
   184ec:	add	r1, r5, #56	; 0x38
   184f0:	add	r0, sp, #16
   184f4:	mov	r2, #128	; 0x80
   184f8:	bl	11718 <memcpy@plt>
   184fc:	str	r7, [r4]
   18500:	str	r9, [r4, #8]
   18504:	str	r5, [r4, #12]
   18508:	mov	r7, #0
   1850c:	mov	r0, r6
   18510:	mov	r1, #1
   18514:	mov	r2, #0
   18518:	mov	r3, r9
   1851c:	bl	115bc <rb_socket@plt>
   18520:	str	r0, [r4, #4]
   18524:	cmp	r0, #0
   18528:	beq	185a8 <sprintf@plt+0x6cb0>
   1852c:	bl	11598 <rb_get_fd@plt>
   18530:	mov	r1, #4
   18534:	str	r1, [sp]
   18538:	add	r3, sp, #12
   1853c:	mov	r1, #6
   18540:	mov	r2, #1
   18544:	bl	118b0 <setsockopt@plt>
   18548:	strh	r7, [sp, #18]
   1854c:	ldrh	r0, [r9, #20]
   18550:	bl	17bc8 <sprintf@plt+0x62d0>
   18554:	strh	r0, [sp, #146]	; 0x92
   18558:	add	r1, r4, #16
   1855c:	mov	r0, r4
   18560:	mov	r2, r8
   18564:	bl	18130 <sprintf@plt+0x6838>
   18568:	movw	r0, #44872	; 0xaf48
   1856c:	movt	r0, #2
   18570:	ldr	r1, [r0]
   18574:	ldr	r0, [r4, #4]
   18578:	ldrb	r2, [r9, #22]
   1857c:	cmp	r2, #0
   18580:	beq	185dc <sprintf@plt+0x6ce4>
   18584:	str	r4, [sp]
   18588:	str	r1, [sp, #4]
   1858c:	add	r1, sp, #144	; 0x90
   18590:	add	r2, sp, #16
   18594:	movw	r3, #34304	; 0x8600
   18598:	movt	r3, #1
   1859c:	bl	11550 <rb_connect_tcp_ssl@plt>
   185a0:	sub	sp, fp, #24
   185a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   185a8:	bl	118ec <__errno_location@plt>
   185ac:	ldr	r0, [r0]
   185b0:	bl	11508 <strerror@plt>
   185b4:	mov	r3, r0
   185b8:	movw	r1, #39078	; 0x98a6
   185bc:	movt	r1, #1
   185c0:	mov	r0, #87	; 0x57
   185c4:	mov	r2, r9
   185c8:	bl	12428 <sprintf@plt+0xb30>
   185cc:	mov	r0, r4
   185d0:	bl	17e60 <sprintf@plt+0x6568>
   185d4:	sub	sp, fp, #24
   185d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   185dc:	str	r4, [sp]
   185e0:	str	r1, [sp, #4]
   185e4:	add	r1, sp, #144	; 0x90
   185e8:	add	r2, sp, #16
   185ec:	movw	r3, #34304	; 0x8600
   185f0:	movt	r3, #1
   185f4:	bl	1155c <rb_connect_tcp@plt>
   185f8:	sub	sp, fp, #24
   185fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18600:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18604:	add	fp, sp, #24
   18608:	mov	r4, r2
   1860c:	mov	r7, r1
   18610:	movw	r0, #44812	; 0xaf0c
   18614:	movt	r0, #2
   18618:	ldr	r1, [r0, #12]
   1861c:	ldr	r6, [r2]
   18620:	ldr	r8, [r2, #8]
   18624:	mov	r0, r6
   18628:	bl	17e50 <sprintf@plt+0x6558>
   1862c:	mov	r5, r0
   18630:	cmp	r7, #0
   18634:	bne	186a4 <sprintf@plt+0x6dac>
   18638:	movw	r0, #61808	; 0xf170
   1863c:	movt	r0, #2
   18640:	ldrb	r0, [r0]
   18644:	cmp	r0, #0
   18648:	beq	186a4 <sprintf@plt+0x6dac>
   1864c:	ldrh	r0, [r6, #248]	; 0xf8
   18650:	cmp	r0, #10
   18654:	beq	18678 <sprintf@plt+0x6d80>
   18658:	cmp	r0, #2
   1865c:	bne	186a4 <sprintf@plt+0x6dac>
   18660:	movw	r0, #61432	; 0xeff8
   18664:	movt	r0, #2
   18668:	ldr	r0, [r0, #184]	; 0xb8
   1866c:	cmp	r0, #0
   18670:	bne	18698 <sprintf@plt+0x6da0>
   18674:	b	186a4 <sprintf@plt+0x6dac>
   18678:	ldrb	r0, [r8, #23]
   1867c:	cmp	r0, #0
   18680:	beq	186a4 <sprintf@plt+0x6dac>
   18684:	movw	r0, #61432	; 0xeff8
   18688:	movt	r0, #2
   1868c:	ldr	r0, [r0, #372]	; 0x174
   18690:	cmp	r0, #0
   18694:	beq	186a4 <sprintf@plt+0x6dac>
   18698:	ldr	r1, [r8, #24]
   1869c:	mov	r0, r4
   186a0:	blx	r1
   186a4:	ldr	r0, [r4, #4]
   186a8:	bl	11730 <rb_close@plt>
   186ac:	add	r0, r4, #16
   186b0:	mov	r1, r5
   186b4:	bl	1820c <sprintf@plt+0x6914>
   186b8:	mov	r0, r4
   186bc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   186c0:	b	17e60 <sprintf@plt+0x6568>
   186c4:	ldr	r0, [r0, #464]	; 0x1d0
   186c8:	add	r0, r0, r1, lsl #4
   186cc:	mov	r1, #0
   186d0:	str	r1, [r0, #4]
   186d4:	bx	lr
   186d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   186dc:	mov	r7, r0
   186e0:	ldr	r6, [pc, #72]	; 18730 <sprintf@plt+0x6e38>
   186e4:	ldr	r5, [pc, #72]	; 18734 <sprintf@plt+0x6e3c>
   186e8:	add	r6, pc, r6
   186ec:	add	r5, pc, r5
   186f0:	sub	r6, r6, r5
   186f4:	mov	r8, r1
   186f8:	mov	r9, r2
   186fc:	bl	114dc <sigemptyset@plt-0x20>
   18700:	asrs	r6, r6, #2
   18704:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18708:	mov	r4, #0
   1870c:	add	r4, r4, #1
   18710:	ldr	r3, [r5], #4
   18714:	mov	r2, r9
   18718:	mov	r1, r8
   1871c:	mov	r0, r7
   18720:	blx	r3
   18724:	cmp	r6, r4
   18728:	bne	1870c <sprintf@plt+0x6e14>
   1872c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18730:	strdeq	r1, [r1], -r4
   18734:	andeq	r1, r1, ip, ror #15
   18738:	bx	lr

Disassembly of section .fini:

0001873c <.fini>:
   1873c:	push	{r3, lr}
   18740:	pop	{r3, pc}
