
../repos/coreutils/src/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010da4 <.init>:
   10da4:	push	{r3, lr}
   10da8:	bl	11074 <__mempcpy_chk@plt+0x4c>
   10dac:	pop	{r3, pc}

Disassembly of section .plt:

00010db0 <calloc@plt-0x14>:
   10db0:	push	{lr}		; (str lr, [sp, #-4]!)
   10db4:	ldr	lr, [pc, #4]	; 10dc0 <calloc@plt-0x4>
   10db8:	add	lr, pc, lr
   10dbc:	ldr	pc, [lr, #8]!
   10dc0:	andeq	r7, r1, r0, asr #4

00010dc4 <calloc@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #94208	; 0x17000
   10dcc:	ldr	pc, [ip, #576]!	; 0x240

00010dd0 <fputs_unlocked@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #94208	; 0x17000
   10dd8:	ldr	pc, [ip, #568]!	; 0x238

00010ddc <raise@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #94208	; 0x17000
   10de4:	ldr	pc, [ip, #560]!	; 0x230

00010de8 <strcmp@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #94208	; 0x17000
   10df0:	ldr	pc, [ip, #552]!	; 0x228

00010df4 <fflush@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #94208	; 0x17000
   10dfc:	ldr	pc, [ip, #544]!	; 0x220

00010e00 <memmove@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #94208	; 0x17000
   10e08:	ldr	pc, [ip, #536]!	; 0x218

00010e0c <free@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #94208	; 0x17000
   10e14:	ldr	pc, [ip, #528]!	; 0x210

00010e18 <faccessat@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #94208	; 0x17000
   10e20:	ldr	pc, [ip, #520]!	; 0x208

00010e24 <_exit@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #94208	; 0x17000
   10e2c:	ldr	pc, [ip, #512]!	; 0x200

00010e30 <memcpy@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #94208	; 0x17000
   10e38:	ldr	pc, [ip, #504]!	; 0x1f8

00010e3c <mbsinit@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #94208	; 0x17000
   10e44:	ldr	pc, [ip, #496]!	; 0x1f0

00010e48 <dcgettext@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #94208	; 0x17000
   10e50:	ldr	pc, [ip, #488]!	; 0x1e8

00010e54 <realloc@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #94208	; 0x17000
   10e5c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e60 <textdomain@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #94208	; 0x17000
   10e68:	ldr	pc, [ip, #472]!	; 0x1d8

00010e6c <rawmemchr@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #94208	; 0x17000
   10e74:	ldr	pc, [ip, #464]!	; 0x1d0

00010e78 <iswprint@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #94208	; 0x17000
   10e80:	ldr	pc, [ip, #456]!	; 0x1c8

00010e84 <readlink@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #94208	; 0x17000
   10e8c:	ldr	pc, [ip, #448]!	; 0x1c0

00010e90 <fwrite@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #94208	; 0x17000
   10e98:	ldr	pc, [ip, #440]!	; 0x1b8

00010e9c <lseek64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #94208	; 0x17000
   10ea4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ea8 <__ctype_get_mb_cur_max@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #94208	; 0x17000
   10eb0:	ldr	pc, [ip, #424]!	; 0x1a8

00010eb4 <__fpending@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #94208	; 0x17000
   10ebc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ec0 <ferror_unlocked@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #94208	; 0x17000
   10ec8:	ldr	pc, [ip, #408]!	; 0x198

00010ecc <mbrtowc@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #94208	; 0x17000
   10ed4:	ldr	pc, [ip, #400]!	; 0x190

00010ed8 <error@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #94208	; 0x17000
   10ee0:	ldr	pc, [ip, #392]!	; 0x188

00010ee4 <malloc@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #94208	; 0x17000
   10eec:	ldr	pc, [ip, #384]!	; 0x180

00010ef0 <__libc_start_main@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #94208	; 0x17000
   10ef8:	ldr	pc, [ip, #376]!	; 0x178

00010efc <__freading@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #94208	; 0x17000
   10f04:	ldr	pc, [ip, #368]!	; 0x170

00010f08 <__gmon_start__@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #94208	; 0x17000
   10f10:	ldr	pc, [ip, #360]!	; 0x168

00010f14 <getopt_long@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #94208	; 0x17000
   10f1c:	ldr	pc, [ip, #352]!	; 0x160

00010f20 <__ctype_b_loc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #94208	; 0x17000
   10f28:	ldr	pc, [ip, #344]!	; 0x158

00010f2c <getcwd@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #94208	; 0x17000
   10f34:	ldr	pc, [ip, #336]!	; 0x150

00010f38 <exit@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #94208	; 0x17000
   10f40:	ldr	pc, [ip, #328]!	; 0x148

00010f44 <bcmp@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #94208	; 0x17000
   10f4c:	ldr	pc, [ip, #320]!	; 0x140

00010f50 <strlen@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #94208	; 0x17000
   10f58:	ldr	pc, [ip, #312]!	; 0x138

00010f5c <__errno_location@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #94208	; 0x17000
   10f64:	ldr	pc, [ip, #304]!	; 0x130

00010f68 <__cxa_atexit@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #94208	; 0x17000
   10f70:	ldr	pc, [ip, #296]!	; 0x128

00010f74 <memset@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #94208	; 0x17000
   10f7c:	ldr	pc, [ip, #288]!	; 0x120

00010f80 <__printf_chk@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #94208	; 0x17000
   10f88:	ldr	pc, [ip, #280]!	; 0x118

00010f8c <fileno@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #94208	; 0x17000
   10f94:	ldr	pc, [ip, #272]!	; 0x110

00010f98 <__fprintf_chk@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #94208	; 0x17000
   10fa0:	ldr	pc, [ip, #264]!	; 0x108

00010fa4 <fclose@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #94208	; 0x17000
   10fac:	ldr	pc, [ip, #256]!	; 0x100

00010fb0 <fseeko64@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #94208	; 0x17000
   10fb8:	ldr	pc, [ip, #248]!	; 0xf8

00010fbc <setlocale@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #94208	; 0x17000
   10fc4:	ldr	pc, [ip, #240]!	; 0xf0

00010fc8 <strrchr@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #94208	; 0x17000
   10fd0:	ldr	pc, [ip, #232]!	; 0xe8

00010fd4 <nl_langinfo@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #94208	; 0x17000
   10fdc:	ldr	pc, [ip, #224]!	; 0xe0

00010fe0 <bindtextdomain@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #94208	; 0x17000
   10fe8:	ldr	pc, [ip, #216]!	; 0xd8

00010fec <__xstat64@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #94208	; 0x17000
   10ff4:	ldr	pc, [ip, #208]!	; 0xd0

00010ff8 <strncmp@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #94208	; 0x17000
   11000:	ldr	pc, [ip, #200]!	; 0xc8

00011004 <abort@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #94208	; 0x17000
   1100c:	ldr	pc, [ip, #192]!	; 0xc0

00011010 <putchar_unlocked@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #94208	; 0x17000
   11018:	ldr	pc, [ip, #184]!	; 0xb8

0001101c <strspn@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #94208	; 0x17000
   11024:	ldr	pc, [ip, #176]!	; 0xb0

00011028 <__mempcpy_chk@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #94208	; 0x17000
   11030:	ldr	pc, [ip, #168]!	; 0xa8

Disassembly of section .text:

00011038 <.text>:
   11038:	mov	fp, #0
   1103c:	mov	lr, #0
   11040:	pop	{r1}		; (ldr r1, [sp], #4)
   11044:	mov	r2, sp
   11048:	push	{r2}		; (str r2, [sp, #-4]!)
   1104c:	push	{r0}		; (str r0, [sp, #-4]!)
   11050:	ldr	ip, [pc, #16]	; 11068 <__mempcpy_chk@plt+0x40>
   11054:	push	{ip}		; (str ip, [sp, #-4]!)
   11058:	ldr	r0, [pc, #12]	; 1106c <__mempcpy_chk@plt+0x44>
   1105c:	ldr	r3, [pc, #12]	; 11070 <__mempcpy_chk@plt+0x48>
   11060:	bl	10ef0 <__libc_start_main@plt>
   11064:	bl	11004 <abort@plt>
   11068:	andeq	r6, r1, r8, lsl #8
   1106c:	ldrdeq	r1, [r1], -r4
   11070:	andeq	r6, r1, r8, lsr #7
   11074:	ldr	r3, [pc, #20]	; 11090 <__mempcpy_chk@plt+0x68>
   11078:	ldr	r2, [pc, #20]	; 11094 <__mempcpy_chk@plt+0x6c>
   1107c:	add	r3, pc, r3
   11080:	ldr	r2, [r3, r2]
   11084:	cmp	r2, #0
   11088:	bxeq	lr
   1108c:	b	10f08 <__gmon_start__@plt>
   11090:	andeq	r6, r1, ip, ror pc
   11094:	ldrdeq	r0, [r0], -ip
   11098:	ldr	r0, [pc, #24]	; 110b8 <__mempcpy_chk@plt+0x90>
   1109c:	ldr	r3, [pc, #24]	; 110bc <__mempcpy_chk@plt+0x94>
   110a0:	cmp	r3, r0
   110a4:	bxeq	lr
   110a8:	ldr	r3, [pc, #16]	; 110c0 <__mempcpy_chk@plt+0x98>
   110ac:	cmp	r3, #0
   110b0:	bxeq	lr
   110b4:	bx	r3
   110b8:	andeq	r8, r2, r0, lsr r1
   110bc:	andeq	r8, r2, r0, lsr r1
   110c0:	andeq	r0, r0, r0
   110c4:	ldr	r0, [pc, #36]	; 110f0 <__mempcpy_chk@plt+0xc8>
   110c8:	ldr	r1, [pc, #36]	; 110f4 <__mempcpy_chk@plt+0xcc>
   110cc:	sub	r1, r1, r0
   110d0:	asr	r1, r1, #2
   110d4:	add	r1, r1, r1, lsr #31
   110d8:	asrs	r1, r1, #1
   110dc:	bxeq	lr
   110e0:	ldr	r3, [pc, #16]	; 110f8 <__mempcpy_chk@plt+0xd0>
   110e4:	cmp	r3, #0
   110e8:	bxeq	lr
   110ec:	bx	r3
   110f0:	andeq	r8, r2, r0, lsr r1
   110f4:	andeq	r8, r2, r0, lsr r1
   110f8:	andeq	r0, r0, r0
   110fc:	push	{r4, lr}
   11100:	ldr	r4, [pc, #24]	; 11120 <__mempcpy_chk@plt+0xf8>
   11104:	ldrb	r3, [r4]
   11108:	cmp	r3, #0
   1110c:	popne	{r4, pc}
   11110:	bl	11098 <__mempcpy_chk@plt+0x70>
   11114:	mov	r3, #1
   11118:	strb	r3, [r4]
   1111c:	pop	{r4, pc}
   11120:	andeq	r8, r2, r8, asr #2
   11124:	b	110c4 <__mempcpy_chk@plt+0x9c>
   11128:	push	{fp, lr}
   1112c:	mov	fp, sp
   11130:	mov	r4, r0
   11134:	cmp	r0, #0
   11138:	bne	11208 <__mempcpy_chk@plt+0x1e0>
   1113c:	movw	r1, #25707	; 0x646b
   11140:	movt	r1, #1
   11144:	mov	r0, #0
   11148:	mov	r2, #5
   1114c:	bl	10e48 <dcgettext@plt>
   11150:	mov	r1, r0
   11154:	movw	r0, #33108	; 0x8154
   11158:	movt	r0, #2
   1115c:	ldr	r2, [r0]
   11160:	mov	r0, #1
   11164:	bl	10f80 <__printf_chk@plt>
   11168:	movw	r1, #25738	; 0x648a
   1116c:	movt	r1, #1
   11170:	mov	r0, #0
   11174:	mov	r2, #5
   11178:	bl	10e48 <dcgettext@plt>
   1117c:	movw	r5, #33092	; 0x8144
   11180:	movt	r5, #2
   11184:	ldr	r1, [r5]
   11188:	bl	10dd0 <fputs_unlocked@plt>
   1118c:	movw	r1, #25794	; 0x64c2
   11190:	movt	r1, #1
   11194:	mov	r0, #0
   11198:	mov	r2, #5
   1119c:	bl	10e48 <dcgettext@plt>
   111a0:	ldr	r1, [r5]
   111a4:	bl	10dd0 <fputs_unlocked@plt>
   111a8:	movw	r1, #26231	; 0x6677
   111ac:	movt	r1, #1
   111b0:	mov	r0, #0
   111b4:	mov	r2, #5
   111b8:	bl	10e48 <dcgettext@plt>
   111bc:	ldr	r1, [r5]
   111c0:	bl	10dd0 <fputs_unlocked@plt>
   111c4:	movw	r1, #26752	; 0x6880
   111c8:	movt	r1, #1
   111cc:	mov	r0, #0
   111d0:	mov	r2, #5
   111d4:	bl	10e48 <dcgettext@plt>
   111d8:	ldr	r1, [r5]
   111dc:	bl	10dd0 <fputs_unlocked@plt>
   111e0:	movw	r1, #26797	; 0x68ad
   111e4:	movt	r1, #1
   111e8:	mov	r0, #0
   111ec:	mov	r2, #5
   111f0:	bl	10e48 <dcgettext@plt>
   111f4:	ldr	r1, [r5]
   111f8:	bl	10dd0 <fputs_unlocked@plt>
   111fc:	bl	1124c <__mempcpy_chk@plt+0x224>
   11200:	mov	r0, r4
   11204:	bl	10f38 <exit@plt>
   11208:	movw	r0, #33088	; 0x8140
   1120c:	movt	r0, #2
   11210:	ldr	r5, [r0]
   11214:	movw	r1, #25668	; 0x6444
   11218:	movt	r1, #1
   1121c:	mov	r0, #0
   11220:	mov	r2, #5
   11224:	bl	10e48 <dcgettext@plt>
   11228:	mov	r2, r0
   1122c:	movw	r0, #33108	; 0x8154
   11230:	movt	r0, #2
   11234:	ldr	r3, [r0]
   11238:	mov	r0, r5
   1123c:	mov	r1, #1
   11240:	bl	10f98 <__fprintf_chk@plt>
   11244:	mov	r0, r4
   11248:	bl	10f38 <exit@plt>
   1124c:	push	{r4, r5, r6, sl, fp, lr}
   11250:	add	fp, sp, #16
   11254:	sub	sp, sp, #56	; 0x38
   11258:	movw	r0, #27584	; 0x6bc0
   1125c:	movt	r0, #1
   11260:	add	r1, r0, #32
   11264:	mov	r2, #48	; 0x30
   11268:	vld1.64	{d16-d17}, [r1]
   1126c:	mov	r6, sp
   11270:	add	r1, r6, #32
   11274:	add	r3, r0, #16
   11278:	vld1.64	{d18-d19}, [r0], r2
   1127c:	vld1.64	{d20-d21}, [r3]
   11280:	vldr	d22, [r0]
   11284:	vst1.64	{d16-d17}, [r1]
   11288:	add	r0, r6, #16
   1128c:	vst1.64	{d20-d21}, [r0]
   11290:	mov	r0, r6
   11294:	vst1.64	{d18-d19}, [r0], r2
   11298:	vstr	d22, [r0]
   1129c:	ldr	r1, [sp]
   112a0:	cmp	r1, #0
   112a4:	movw	r4, #26851	; 0x68e3
   112a8:	movt	r4, #1
   112ac:	beq	112d4 <__mempcpy_chk@plt+0x2ac>
   112b0:	mov	r6, sp
   112b4:	movw	r5, #26851	; 0x68e3
   112b8:	movt	r5, #1
   112bc:	mov	r0, r5
   112c0:	bl	10de8 <strcmp@plt>
   112c4:	cmp	r0, #0
   112c8:	ldrne	r1, [r6, #8]!
   112cc:	cmpne	r1, #0
   112d0:	bne	112bc <__mempcpy_chk@plt+0x294>
   112d4:	ldr	r5, [r6, #4]
   112d8:	movw	r1, #27080	; 0x69c8
   112dc:	movt	r1, #1
   112e0:	mov	r0, #0
   112e4:	mov	r2, #5
   112e8:	bl	10e48 <dcgettext@plt>
   112ec:	mov	r1, r0
   112f0:	movw	r2, #26893	; 0x690d
   112f4:	movt	r2, #1
   112f8:	movw	r3, #27103	; 0x69df
   112fc:	movt	r3, #1
   11300:	mov	r0, #1
   11304:	bl	10f80 <__printf_chk@plt>
   11308:	cmp	r5, #0
   1130c:	moveq	r5, r4
   11310:	mov	r0, #5
   11314:	mov	r1, #0
   11318:	bl	10fbc <setlocale@plt>
   1131c:	cmp	r0, #0
   11320:	beq	11360 <__mempcpy_chk@plt+0x338>
   11324:	movw	r1, #27143	; 0x6a07
   11328:	movt	r1, #1
   1132c:	mov	r2, #3
   11330:	bl	10ff8 <strncmp@plt>
   11334:	cmp	r0, #0
   11338:	beq	11360 <__mempcpy_chk@plt+0x338>
   1133c:	movw	r1, #27147	; 0x6a0b
   11340:	movt	r1, #1
   11344:	mov	r0, #0
   11348:	mov	r2, #5
   1134c:	bl	10e48 <dcgettext@plt>
   11350:	movw	r1, #33092	; 0x8144
   11354:	movt	r1, #2
   11358:	ldr	r1, [r1]
   1135c:	bl	10dd0 <fputs_unlocked@plt>
   11360:	movw	r1, #27218	; 0x6a52
   11364:	movt	r1, #1
   11368:	mov	r0, #0
   1136c:	mov	r2, #5
   11370:	bl	10e48 <dcgettext@plt>
   11374:	mov	r1, r0
   11378:	movw	r2, #27103	; 0x69df
   1137c:	movt	r2, #1
   11380:	mov	r0, #1
   11384:	mov	r3, r4
   11388:	bl	10f80 <__printf_chk@plt>
   1138c:	movw	r0, #27013	; 0x6985
   11390:	movt	r0, #1
   11394:	movw	r6, #25793	; 0x64c1
   11398:	movt	r6, #1
   1139c:	cmp	r5, r4
   113a0:	moveq	r6, r0
   113a4:	movw	r1, #27245	; 0x6a6d
   113a8:	movt	r1, #1
   113ac:	mov	r0, #0
   113b0:	mov	r2, #5
   113b4:	bl	10e48 <dcgettext@plt>
   113b8:	mov	r1, r0
   113bc:	mov	r0, #1
   113c0:	mov	r2, r5
   113c4:	mov	r3, r6
   113c8:	sub	sp, fp, #16
   113cc:	pop	{r4, r5, r6, sl, fp, lr}
   113d0:	b	10f80 <__printf_chk@plt>
   113d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113d8:	add	fp, sp, #28
   113dc:	sub	sp, sp, #20
   113e0:	mov	r8, r1
   113e4:	mov	r5, r0
   113e8:	ldr	r0, [r1]
   113ec:	bl	1320c <__mempcpy_chk@plt+0x21e4>
   113f0:	movw	r1, #25793	; 0x64c1
   113f4:	movt	r1, #1
   113f8:	mov	r0, #6
   113fc:	bl	10fbc <setlocale@plt>
   11400:	movw	r6, #26897	; 0x6911
   11404:	movt	r6, #1
   11408:	movw	r1, #26860	; 0x68ec
   1140c:	movt	r1, #1
   11410:	mov	r0, r6
   11414:	bl	10fe0 <bindtextdomain@plt>
   11418:	mov	r0, r6
   1141c:	bl	10e60 <textdomain@plt>
   11420:	movw	r0, #8260	; 0x2044
   11424:	movt	r0, #1
   11428:	bl	1640c <__mempcpy_chk@plt+0x53e4>
   1142c:	mvn	r6, #0
   11430:	mov	r4, #0
   11434:	movw	sl, #26884	; 0x6904
   11438:	movt	sl, #1
   1143c:	movw	r7, #27408	; 0x6b10
   11440:	movt	r7, #1
   11444:	mov	r9, #0
   11448:	str	r4, [sp]
   1144c:	mov	r0, r5
   11450:	mov	r1, r8
   11454:	mov	r2, sl
   11458:	mov	r3, r7
   1145c:	bl	10f14 <getopt_long@plt>
   11460:	cmp	r0, #100	; 0x64
   11464:	ble	11524 <__mempcpy_chk@plt+0x4fc>
   11468:	sub	r0, r0, #101	; 0x65
   1146c:	cmp	r0, #21
   11470:	bhi	116f8 <__mempcpy_chk@plt+0x6d0>
   11474:	add	r1, pc, #0
   11478:	ldr	pc, [r1, r0, lsl #2]
   1147c:	andeq	r1, r1, r0, lsl #10
   11480:	andeq	r1, r1, r8, lsl #10
   11484:	strdeq	r1, [r1], -r8
   11488:	strdeq	r1, [r1], -r8
   1148c:	strdeq	r1, [r1], -r8
   11490:	strdeq	r1, [r1], -r8
   11494:	strdeq	r1, [r1], -r8
   11498:	strdeq	r1, [r1], -r8
   1149c:	strdeq	r1, [r1], -r8
   114a0:	andeq	r1, r1, r4, ror #9
   114a4:	strdeq	r1, [r1], -r8
   114a8:	strdeq	r1, [r1], -r8
   114ac:	ldrdeq	r1, [r1], -r4
   114b0:	strdeq	r1, [r1], -r8
   114b4:	ldrdeq	r1, [r1], -r4
   114b8:	strdeq	r1, [r1], -r8
   114bc:	strdeq	r1, [r1], -r8
   114c0:	andeq	r1, r1, r0, lsl r5
   114c4:	strdeq	r1, [r1], -r8
   114c8:	strdeq	r1, [r1], -r8
   114cc:	strdeq	r1, [r1], -r8
   114d0:	strdeq	r1, [r1], -r0
   114d4:	movw	r0, #33098	; 0x814a
   114d8:	movt	r0, #2
   114dc:	strb	r4, [r0]
   114e0:	b	11448 <__mempcpy_chk@plt+0x420>
   114e4:	movw	r0, #33097	; 0x8149
   114e8:	movt	r0, #2
   114ec:	b	11518 <__mempcpy_chk@plt+0x4f0>
   114f0:	mov	r9, #1
   114f4:	b	11448 <__mempcpy_chk@plt+0x420>
   114f8:	mov	r6, #2
   114fc:	b	11448 <__mempcpy_chk@plt+0x420>
   11500:	mov	r6, #0
   11504:	b	11448 <__mempcpy_chk@plt+0x420>
   11508:	mov	r6, #1
   1150c:	b	11448 <__mempcpy_chk@plt+0x420>
   11510:	movw	r0, #33098	; 0x814a
   11514:	movt	r0, #2
   11518:	mov	r1, #1
   1151c:	strb	r1, [r0]
   11520:	b	11448 <__mempcpy_chk@plt+0x420>
   11524:	cmn	r0, #1
   11528:	bne	11698 <__mempcpy_chk@plt+0x670>
   1152c:	movw	sl, #33080	; 0x8138
   11530:	movt	sl, #2
   11534:	ldr	r0, [sl]
   11538:	cmp	r0, r5
   1153c:	movw	r4, #33097	; 0x8149
   11540:	movt	r4, #2
   11544:	bge	11700 <__mempcpy_chk@plt+0x6d8>
   11548:	sub	r0, r5, r0
   1154c:	cmp	r0, #2
   11550:	blt	1158c <__mempcpy_chk@plt+0x564>
   11554:	ldrb	r0, [r4]
   11558:	cmp	r0, #1
   1155c:	bne	11584 <__mempcpy_chk@plt+0x55c>
   11560:	movw	r1, #26939	; 0x693b
   11564:	movt	r1, #1
   11568:	mov	r0, #0
   1156c:	mov	r2, #5
   11570:	bl	10e48 <dcgettext@plt>
   11574:	mov	r2, r0
   11578:	mov	r0, #0
   1157c:	mov	r1, #0
   11580:	bl	10ed8 <error@plt>
   11584:	mov	r0, #0
   11588:	strb	r0, [r4]
   1158c:	ldr	r0, [sl]
   11590:	mov	r1, #0
   11594:	str	r1, [sp, #16]
   11598:	cmp	r0, r5
   1159c:	bge	1168c <__mempcpy_chk@plt+0x664>
   115a0:	mov	r1, #10
   115a4:	tst	r9, #1
   115a8:	movwne	r1, #0
   115ac:	str	r1, [sp, #12]
   115b0:	mov	r1, #0
   115b4:	str	r1, [sp, #16]
   115b8:	b	115d8 <__mempcpy_chk@plt+0x5b0>
   115bc:	mov	r0, r9
   115c0:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   115c4:	ldr	r0, [sl]
   115c8:	add	r0, r0, #1
   115cc:	str	r0, [sl]
   115d0:	cmp	r0, r5
   115d4:	bge	1168c <__mempcpy_chk@plt+0x664>
   115d8:	ldr	r7, [r8, r0, lsl #2]
   115dc:	mov	r0, r7
   115e0:	cmn	r6, #1
   115e4:	beq	115f4 <__mempcpy_chk@plt+0x5cc>
   115e8:	mov	r1, r6
   115ec:	bl	11870 <__mempcpy_chk@plt+0x848>
   115f0:	b	115fc <__mempcpy_chk@plt+0x5d4>
   115f4:	mov	r1, #63	; 0x3f
   115f8:	bl	1172c <__mempcpy_chk@plt+0x704>
   115fc:	mov	r9, r0
   11600:	cmp	r0, #0
   11604:	beq	11634 <__mempcpy_chk@plt+0x60c>
   11608:	movw	r0, #33092	; 0x8144
   1160c:	movt	r0, #2
   11610:	ldr	r1, [r0]
   11614:	mov	r0, r9
   11618:	bl	10dd0 <fputs_unlocked@plt>
   1161c:	ldrb	r0, [r4]
   11620:	cmp	r0, #0
   11624:	bne	115bc <__mempcpy_chk@plt+0x594>
   11628:	ldr	r0, [sp, #12]
   1162c:	bl	11010 <putchar_unlocked@plt>
   11630:	b	115bc <__mempcpy_chk@plt+0x594>
   11634:	movw	r0, #33098	; 0x814a
   11638:	movt	r0, #2
   1163c:	ldrb	r0, [r0]
   11640:	mov	r1, #1
   11644:	str	r1, [sp, #16]
   11648:	cmp	r0, #1
   1164c:	bne	115c4 <__mempcpy_chk@plt+0x59c>
   11650:	bl	10f5c <__errno_location@plt>
   11654:	ldr	r4, [r0]
   11658:	mov	r0, #0
   1165c:	mov	r1, #3
   11660:	mov	r2, r7
   11664:	bl	148c0 <__mempcpy_chk@plt+0x3898>
   11668:	mov	r3, r0
   1166c:	mov	r0, #0
   11670:	mov	r1, r4
   11674:	movw	r4, #33097	; 0x8149
   11678:	movt	r4, #2
   1167c:	movw	r2, #27673	; 0x6c19
   11680:	movt	r2, #1
   11684:	bl	10ed8 <error@plt>
   11688:	b	115c4 <__mempcpy_chk@plt+0x59c>
   1168c:	ldr	r0, [sp, #16]
   11690:	sub	sp, fp, #28
   11694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11698:	cmn	r0, #3
   1169c:	bne	116e8 <__mempcpy_chk@plt+0x6c0>
   116a0:	movw	r0, #33000	; 0x80e8
   116a4:	movt	r0, #2
   116a8:	ldr	r3, [r0]
   116ac:	movw	r0, #33092	; 0x8144
   116b0:	movt	r0, #2
   116b4:	ldr	r0, [r0]
   116b8:	mov	r1, #0
   116bc:	movw	r2, #26907	; 0x691b
   116c0:	movt	r2, #1
   116c4:	str	r2, [sp]
   116c8:	str	r1, [sp, #4]
   116cc:	movw	r1, #26851	; 0x68e3
   116d0:	movt	r1, #1
   116d4:	movw	r2, #26893	; 0x690d
   116d8:	movt	r2, #1
   116dc:	bl	15374 <__mempcpy_chk@plt+0x434c>
   116e0:	mov	r0, #0
   116e4:	bl	10f38 <exit@plt>
   116e8:	cmn	r0, #2
   116ec:	bne	116f8 <__mempcpy_chk@plt+0x6d0>
   116f0:	mov	r0, #0
   116f4:	bl	11128 <__mempcpy_chk@plt+0x100>
   116f8:	mov	r0, #1
   116fc:	bl	11128 <__mempcpy_chk@plt+0x100>
   11700:	movw	r1, #26923	; 0x692b
   11704:	movt	r1, #1
   11708:	mov	r0, #0
   1170c:	mov	r2, #5
   11710:	bl	10e48 <dcgettext@plt>
   11714:	mov	r2, r0
   11718:	mov	r0, #0
   1171c:	mov	r1, #0
   11720:	bl	10ed8 <error@plt>
   11724:	mov	r0, #1
   11728:	bl	11128 <__mempcpy_chk@plt+0x100>
   1172c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11730:	add	fp, sp, #24
   11734:	sub	sp, sp, #128	; 0x80
   11738:	mov	r4, r1
   1173c:	mov	r8, r0
   11740:	cmp	r1, #0
   11744:	beq	11758 <__mempcpy_chk@plt+0x730>
   11748:	movw	r6, #1025	; 0x401
   1174c:	cmp	r4, #1024	; 0x400
   11750:	addls	r6, r4, #1
   11754:	b	1175c <__mempcpy_chk@plt+0x734>
   11758:	mov	r6, #128	; 0x80
   1175c:	mov	r9, sp
   11760:	cmp	r4, #0
   11764:	bne	11778 <__mempcpy_chk@plt+0x750>
   11768:	mov	r5, #0
   1176c:	cmp	r6, #128	; 0x80
   11770:	mov	r7, r9
   11774:	beq	11790 <__mempcpy_chk@plt+0x768>
   11778:	mov	r0, r6
   1177c:	bl	1589c <__mempcpy_chk@plt+0x4874>
   11780:	mov	r7, r0
   11784:	cmp	r0, #0
   11788:	mov	r5, r0
   1178c:	beq	1182c <__mempcpy_chk@plt+0x804>
   11790:	mov	r0, r8
   11794:	mov	r1, r7
   11798:	mov	r2, r6
   1179c:	bl	10e84 <readlink@plt>
   117a0:	cmn	r0, #1
   117a4:	ble	117e4 <__mempcpy_chk@plt+0x7bc>
   117a8:	cmp	r0, r6
   117ac:	bcc	117f4 <__mempcpy_chk@plt+0x7cc>
   117b0:	mov	r0, r5
   117b4:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   117b8:	cmn	r6, #-1073741823	; 0xc0000001
   117bc:	bhi	117c8 <__mempcpy_chk@plt+0x7a0>
   117c0:	lsl	r0, r6, #1
   117c4:	b	117d4 <__mempcpy_chk@plt+0x7ac>
   117c8:	mvn	r0, #-2147483648	; 0x80000000
   117cc:	cmn	r6, #-2147483647	; 0x80000001
   117d0:	bcs	1182c <__mempcpy_chk@plt+0x804>
   117d4:	mov	r6, r0
   117d8:	cmp	r4, #0
   117dc:	beq	11768 <__mempcpy_chk@plt+0x740>
   117e0:	b	11778 <__mempcpy_chk@plt+0x750>
   117e4:	mov	r0, r5
   117e8:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   117ec:	mov	r4, #0
   117f0:	b	11864 <__mempcpy_chk@plt+0x83c>
   117f4:	mov	r4, #0
   117f8:	strb	r4, [r7, r0]
   117fc:	add	r8, r0, #1
   11800:	cmp	r5, #0
   11804:	beq	11840 <__mempcpy_chk@plt+0x818>
   11808:	cmp	r8, r6
   1180c:	bcs	11860 <__mempcpy_chk@plt+0x838>
   11810:	mov	r0, r5
   11814:	mov	r1, r8
   11818:	bl	158cc <__mempcpy_chk@plt+0x48a4>
   1181c:	mov	r4, r0
   11820:	cmp	r0, #0
   11824:	moveq	r4, r5
   11828:	b	11864 <__mempcpy_chk@plt+0x83c>
   1182c:	bl	10f5c <__errno_location@plt>
   11830:	mov	r1, #12
   11834:	str	r1, [r0]
   11838:	mov	r4, #0
   1183c:	b	11864 <__mempcpy_chk@plt+0x83c>
   11840:	mov	r0, r8
   11844:	bl	1589c <__mempcpy_chk@plt+0x4874>
   11848:	cmp	r0, #0
   1184c:	beq	11864 <__mempcpy_chk@plt+0x83c>
   11850:	mov	r5, r0
   11854:	mov	r1, r7
   11858:	mov	r2, r8
   1185c:	bl	10e30 <memcpy@plt>
   11860:	mov	r4, r5
   11864:	mov	r0, r4
   11868:	sub	sp, fp, #24
   1186c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11870:	push	{r4, r5, fp, lr}
   11874:	add	fp, sp, #8
   11878:	sub	sp, sp, #8
   1187c:	sub	sp, sp, #1024	; 0x400
   11880:	mov	r2, sp
   11884:	bl	11890 <__mempcpy_chk@plt+0x868>
   11888:	sub	sp, fp, #8
   1188c:	pop	{r4, r5, fp, pc}
   11890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11894:	add	fp, sp, #28
   11898:	sub	sp, sp, #164	; 0xa4
   1189c:	sub	sp, sp, #2048	; 0x800
   118a0:	mov	sl, r2
   118a4:	mov	r5, r1
   118a8:	mov	r9, r0
   118ac:	mov	r6, #0
   118b0:	str	r6, [fp, #-36]	; 0xffffffdc
   118b4:	and	r0, r1, #3
   118b8:	str	r0, [sp, #28]
   118bc:	bl	11e98 <__mempcpy_chk@plt+0xe70>
   118c0:	cmp	r0, #0
   118c4:	beq	118d8 <__mempcpy_chk@plt+0x8b0>
   118c8:	bl	10f5c <__errno_location@plt>
   118cc:	mov	r1, #22
   118d0:	str	r1, [r0]
   118d4:	b	11e70 <__mempcpy_chk@plt+0xe48>
   118d8:	cmp	r9, #0
   118dc:	beq	11938 <__mempcpy_chk@plt+0x910>
   118e0:	ldrb	r0, [r9]
   118e4:	cmp	r0, #0
   118e8:	beq	11944 <__mempcpy_chk@plt+0x91c>
   118ec:	sub	r0, fp, #1072	; 0x430
   118f0:	bl	11ea8 <__mempcpy_chk@plt+0xe80>
   118f4:	add	r0, sp, #136	; 0x88
   118f8:	bl	11ea8 <__mempcpy_chk@plt+0xe80>
   118fc:	mov	r0, sl
   11900:	bl	11ea8 <__mempcpy_chk@plt+0xe80>
   11904:	ldr	r4, [sl]
   11908:	ldrb	r0, [r9]
   1190c:	cmp	r0, #47	; 0x2f
   11910:	bne	11958 <__mempcpy_chk@plt+0x930>
   11914:	mov	r0, r4
   11918:	mov	r1, r9
   1191c:	mov	r2, #0
   11920:	mvn	r3, #0
   11924:	bl	11028 <__mempcpy_chk@plt>
   11928:	mov	r6, r0
   1192c:	mov	r0, #47	; 0x2f
   11930:	strb	r0, [r6], #1
   11934:	b	1197c <__mempcpy_chk@plt+0x954>
   11938:	bl	10f5c <__errno_location@plt>
   1193c:	mov	r1, #22
   11940:	b	1194c <__mempcpy_chk@plt+0x924>
   11944:	bl	10f5c <__errno_location@plt>
   11948:	mov	r1, #2
   1194c:	str	r1, [r0]
   11950:	mov	r6, #0
   11954:	b	11e70 <__mempcpy_chk@plt+0xe48>
   11958:	ldr	r1, [sl, #4]
   1195c:	mov	r0, r4
   11960:	bl	10f2c <getcwd@plt>
   11964:	cmp	r0, #0
   11968:	beq	11dc8 <__mempcpy_chk@plt+0xda0>
   1196c:	mov	r0, r4
   11970:	mov	r1, #0
   11974:	bl	10e6c <rawmemchr@plt>
   11978:	mov	r6, r0
   1197c:	ldrb	r0, [r9]
   11980:	cmp	r0, #0
   11984:	beq	11da4 <__mempcpy_chk@plt+0xd7c>
   11988:	and	r1, r5, #4
   1198c:	str	r1, [sp, #24]
   11990:	mov	r1, #0
   11994:	str	r1, [sp, #4]
   11998:	mov	r1, #0
   1199c:	str	r1, [sp, #12]
   119a0:	str	sl, [sp, #20]
   119a4:	uxtb	r1, r0
   119a8:	cmp	r1, #47	; 0x2f
   119ac:	bne	119bc <__mempcpy_chk@plt+0x994>
   119b0:	ldrb	r0, [r9, #1]!
   119b4:	cmp	r0, #47	; 0x2f
   119b8:	beq	119b0 <__mempcpy_chk@plt+0x988>
   119bc:	mov	r8, r9
   119c0:	b	119c8 <__mempcpy_chk@plt+0x9a0>
   119c4:	add	r8, r8, #1
   119c8:	ldrb	r1, [r8]
   119cc:	cmp	r1, #0
   119d0:	cmpne	r1, #47	; 0x2f
   119d4:	bne	119c4 <__mempcpy_chk@plt+0x99c>
   119d8:	sub	r7, r8, r9
   119dc:	cmp	r7, #1
   119e0:	beq	119f8 <__mempcpy_chk@plt+0x9d0>
   119e4:	cmp	r7, #2
   119e8:	beq	11a08 <__mempcpy_chk@plt+0x9e0>
   119ec:	cmp	r7, #0
   119f0:	bne	11a50 <__mempcpy_chk@plt+0xa28>
   119f4:	b	11da4 <__mempcpy_chk@plt+0xd7c>
   119f8:	uxtb	r0, r0
   119fc:	cmp	r0, #46	; 0x2e
   11a00:	bne	11a50 <__mempcpy_chk@plt+0xa28>
   11a04:	b	11d40 <__mempcpy_chk@plt+0xd18>
   11a08:	uxtb	r0, r0
   11a0c:	cmp	r0, #46	; 0x2e
   11a10:	bne	11a50 <__mempcpy_chk@plt+0xa28>
   11a14:	ldrb	r0, [r9, #1]
   11a18:	cmp	r0, #46	; 0x2e
   11a1c:	bne	11a50 <__mempcpy_chk@plt+0xa28>
   11a20:	add	r0, r4, #1
   11a24:	cmp	r6, r0
   11a28:	bls	11d40 <__mempcpy_chk@plt+0xd18>
   11a2c:	sub	r0, r6, #1
   11a30:	mov	r6, r0
   11a34:	cmp	r0, r4
   11a38:	bls	11d40 <__mempcpy_chk@plt+0xd18>
   11a3c:	mov	r0, r6
   11a40:	ldrb	r1, [r0, #-1]!
   11a44:	cmp	r1, #47	; 0x2f
   11a48:	bne	11a30 <__mempcpy_chk@plt+0xa08>
   11a4c:	b	11d40 <__mempcpy_chk@plt+0xd18>
   11a50:	ldrb	r0, [r6, #-1]
   11a54:	cmp	r0, #47	; 0x2f
   11a58:	movne	r0, #47	; 0x2f
   11a5c:	strbne	r0, [r6], #1
   11a60:	ldr	r0, [sl, #4]
   11a64:	add	r0, r4, r0
   11a68:	sub	r0, r0, r6
   11a6c:	add	r5, r7, #2
   11a70:	cmp	r0, r5
   11a74:	bcs	11aa8 <__mempcpy_chk@plt+0xa80>
   11a78:	mov	r0, sl
   11a7c:	bl	14f08 <__mempcpy_chk@plt+0x3ee0>
   11a80:	cmp	r0, #0
   11a84:	beq	11e94 <__mempcpy_chk@plt+0xe6c>
   11a88:	sub	r0, r6, r4
   11a8c:	ldr	r4, [sl]
   11a90:	ldr	r1, [sl, #4]
   11a94:	add	r6, r4, r0
   11a98:	add	r0, r4, r1
   11a9c:	sub	r0, r0, r6
   11aa0:	cmp	r0, r5
   11aa4:	bcc	11a78 <__mempcpy_chk@plt+0xa50>
   11aa8:	mov	r0, r6
   11aac:	mov	r1, r9
   11ab0:	str	r7, [sp, #16]
   11ab4:	mov	r2, r7
   11ab8:	mvn	r3, #0
   11abc:	bl	11028 <__mempcpy_chk@plt>
   11ac0:	mov	r6, r0
   11ac4:	mov	r0, #0
   11ac8:	strb	r0, [r6]
   11acc:	ldr	r0, [sp, #24]
   11ad0:	cmp	r0, #0
   11ad4:	bne	11b34 <__mempcpy_chk@plt+0xb0c>
   11ad8:	ldr	r5, [sp, #136]	; 0x88
   11adc:	ldr	r0, [sp, #140]	; 0x8c
   11ae0:	sub	r7, r0, #1
   11ae4:	mov	r0, r4
   11ae8:	mov	r1, r5
   11aec:	mov	r2, r7
   11af0:	bl	10e84 <readlink@plt>
   11af4:	cmp	r0, r7
   11af8:	blt	11b10 <__mempcpy_chk@plt+0xae8>
   11afc:	add	r0, sp, #136	; 0x88
   11b00:	bl	14e84 <__mempcpy_chk@plt+0x3e5c>
   11b04:	cmp	r0, #0
   11b08:	bne	11ad8 <__mempcpy_chk@plt+0xab0>
   11b0c:	b	11e94 <__mempcpy_chk@plt+0xe6c>
   11b10:	mov	sl, r0
   11b14:	cmp	r0, #0
   11b18:	bmi	11b34 <__mempcpy_chk@plt+0xb0c>
   11b1c:	ldr	r0, [sp, #4]
   11b20:	cmp	r0, #19
   11b24:	bgt	11ba4 <__mempcpy_chk@plt+0xb7c>
   11b28:	add	r0, r0, #1
   11b2c:	str	r0, [sp, #4]
   11b30:	b	11c1c <__mempcpy_chk@plt+0xbf4>
   11b34:	ldr	r0, [sp, #28]
   11b38:	cmp	r0, #2
   11b3c:	bne	11b4c <__mempcpy_chk@plt+0xb24>
   11b40:	mov	r9, r8
   11b44:	ldr	sl, [sp, #20]
   11b48:	b	11d98 <__mempcpy_chk@plt+0xd70>
   11b4c:	mov	r0, r8
   11b50:	bl	11f54 <__mempcpy_chk@plt+0xf2c>
   11b54:	cmp	r0, #0
   11b58:	beq	11b78 <__mempcpy_chk@plt+0xb50>
   11b5c:	mov	r0, r4
   11b60:	mov	r1, r6
   11b64:	bl	11fdc <__mempcpy_chk@plt+0xfb4>
   11b68:	cmp	r0, #0
   11b6c:	ldr	sl, [sp, #20]
   11b70:	bne	11d40 <__mempcpy_chk@plt+0xd18>
   11b74:	b	11d58 <__mempcpy_chk@plt+0xd30>
   11b78:	ldr	r0, [sp, #24]
   11b7c:	cmp	r0, #0
   11b80:	ldr	sl, [sp, #20]
   11b84:	beq	11d30 <__mempcpy_chk@plt+0xd08>
   11b88:	ldrb	r0, [r8]
   11b8c:	cmp	r0, #0
   11b90:	beq	11d48 <__mempcpy_chk@plt+0xd20>
   11b94:	mov	r9, r8
   11b98:	cmp	r0, #0
   11b9c:	bne	119a4 <__mempcpy_chk@plt+0x97c>
   11ba0:	b	11da4 <__mempcpy_chk@plt+0xd7c>
   11ba4:	ldrb	r0, [r9]
   11ba8:	cmp	r0, #0
   11bac:	beq	11c1c <__mempcpy_chk@plt+0xbf4>
   11bb0:	mov	r0, #0
   11bb4:	ldr	r7, [sp, #16]
   11bb8:	strb	r0, [r6, -r7]
   11bbc:	ldrb	r0, [r4]
   11bc0:	cmp	r0, #0
   11bc4:	mov	r0, r4
   11bc8:	movw	r1, #27655	; 0x6c07
   11bcc:	movt	r1, #1
   11bd0:	moveq	r0, r1
   11bd4:	add	r1, sp, #32
   11bd8:	bl	16424 <__mempcpy_chk@plt+0x53fc>
   11bdc:	cmp	r0, #0
   11be0:	bne	11e88 <__mempcpy_chk@plt+0xe60>
   11be4:	rsb	r0, r7, #0
   11be8:	ldrb	r1, [r9]
   11bec:	strb	r1, [r6, r0]
   11bf0:	sub	r0, fp, #36	; 0x24
   11bf4:	mov	r1, r9
   11bf8:	add	r2, sp, #32
   11bfc:	bl	11ebc <__mempcpy_chk@plt+0xe94>
   11c00:	cmp	r0, #0
   11c04:	beq	11c1c <__mempcpy_chk@plt+0xbf4>
   11c08:	ldr	r0, [sp, #28]
   11c0c:	cmp	r0, #2
   11c10:	ldr	sl, [sp, #20]
   11c14:	beq	11d40 <__mempcpy_chk@plt+0xd18>
   11c18:	b	11e7c <__mempcpy_chk@plt+0xe54>
   11c1c:	mov	r0, #0
   11c20:	strb	r0, [r5, sl]
   11c24:	ldr	r9, [fp, #-1072]	; 0xfffffbd0
   11c28:	ldr	r0, [sp, #12]
   11c2c:	tst	r0, #1
   11c30:	ldr	r0, [sp, #8]
   11c34:	subne	r0, r8, r9
   11c38:	str	r0, [sp, #8]
   11c3c:	mov	r0, r8
   11c40:	bl	10f50 <strlen@plt>
   11c44:	mvn	r1, sl
   11c48:	cmp	r0, r1
   11c4c:	bhi	11e94 <__mempcpy_chk@plt+0xe6c>
   11c50:	str	r0, [sp, #16]
   11c54:	add	r7, r0, sl
   11c58:	ldr	r0, [fp, #-1068]	; 0xfffffbd4
   11c5c:	cmp	r0, r7
   11c60:	bhi	11c84 <__mempcpy_chk@plt+0xc5c>
   11c64:	sub	r0, fp, #1072	; 0x430
   11c68:	bl	14f08 <__mempcpy_chk@plt+0x3ee0>
   11c6c:	cmp	r0, #0
   11c70:	beq	11e94 <__mempcpy_chk@plt+0xe6c>
   11c74:	ldr	r0, [fp, #-1068]	; 0xfffffbd4
   11c78:	cmp	r0, r7
   11c7c:	bls	11c64 <__mempcpy_chk@plt+0xc3c>
   11c80:	ldr	r9, [fp, #-1072]	; 0xfffffbd0
   11c84:	ldr	r0, [sp, #12]
   11c88:	tst	r0, #1
   11c8c:	ldr	r0, [sp, #8]
   11c90:	addne	r8, r9, r0
   11c94:	add	r0, r9, sl
   11c98:	ldr	r1, [sp, #16]
   11c9c:	add	r2, r1, #1
   11ca0:	mov	r1, r8
   11ca4:	bl	10e00 <memmove@plt>
   11ca8:	mov	r0, r9
   11cac:	mov	r1, r5
   11cb0:	mov	r2, sl
   11cb4:	bl	10e30 <memcpy@plt>
   11cb8:	ldrb	r0, [r5]
   11cbc:	cmp	r0, #47	; 0x2f
   11cc0:	bne	11cf4 <__mempcpy_chk@plt+0xccc>
   11cc4:	mov	r0, r4
   11cc8:	mov	r1, r5
   11ccc:	mov	r2, #0
   11cd0:	mvn	r3, #0
   11cd4:	bl	11028 <__mempcpy_chk@plt>
   11cd8:	mov	r6, r0
   11cdc:	mov	r0, #47	; 0x2f
   11ce0:	strb	r0, [r6], #1
   11ce4:	mov	r0, #1
   11ce8:	str	r0, [sp, #12]
   11cec:	ldr	sl, [sp, #20]
   11cf0:	b	11d98 <__mempcpy_chk@plt+0xd70>
   11cf4:	add	r0, r4, #1
   11cf8:	mov	r1, #1
   11cfc:	str	r1, [sp, #12]
   11d00:	cmp	r6, r0
   11d04:	ldr	sl, [sp, #20]
   11d08:	bls	11d98 <__mempcpy_chk@plt+0xd70>
   11d0c:	sub	r0, r6, #1
   11d10:	mov	r6, r0
   11d14:	cmp	r0, r4
   11d18:	bls	11d98 <__mempcpy_chk@plt+0xd70>
   11d1c:	mov	r0, r6
   11d20:	ldrb	r1, [r0, #-1]!
   11d24:	cmp	r1, #47	; 0x2f
   11d28:	bne	11d10 <__mempcpy_chk@plt+0xce8>
   11d2c:	b	11d98 <__mempcpy_chk@plt+0xd70>
   11d30:	bl	10f5c <__errno_location@plt>
   11d34:	ldr	r0, [r0]
   11d38:	cmp	r0, #22
   11d3c:	bne	11d58 <__mempcpy_chk@plt+0xd30>
   11d40:	mov	r9, r8
   11d44:	b	11d98 <__mempcpy_chk@plt+0xd70>
   11d48:	mov	r0, r4
   11d4c:	bl	11fe8 <__mempcpy_chk@plt+0xfc0>
   11d50:	cmp	r0, #0
   11d54:	bne	11d40 <__mempcpy_chk@plt+0xd18>
   11d58:	mov	r5, #1
   11d5c:	ldr	r0, [sp, #28]
   11d60:	cmp	r0, #1
   11d64:	bne	11e18 <__mempcpy_chk@plt+0xdf0>
   11d68:	bl	10f5c <__errno_location@plt>
   11d6c:	ldr	r0, [r0]
   11d70:	cmp	r0, #2
   11d74:	bne	11e18 <__mempcpy_chk@plt+0xdf0>
   11d78:	mov	r0, r8
   11d7c:	movw	r1, #28791	; 0x7077
   11d80:	movt	r1, #1
   11d84:	bl	1101c <strspn@plt>
   11d88:	ldrb	r0, [r8, r0]
   11d8c:	cmp	r0, #0
   11d90:	mov	r9, r8
   11d94:	bne	11e18 <__mempcpy_chk@plt+0xdf0>
   11d98:	ldrb	r0, [r9]
   11d9c:	cmp	r0, #0
   11da0:	bne	119a4 <__mempcpy_chk@plt+0x97c>
   11da4:	add	r0, r4, #1
   11da8:	mov	r5, #0
   11dac:	cmp	r6, r0
   11db0:	bls	11e18 <__mempcpy_chk@plt+0xdf0>
   11db4:	mov	r0, r6
   11db8:	ldrb	r1, [r0, #-1]!
   11dbc:	cmp	r1, #47	; 0x2f
   11dc0:	moveq	r6, r0
   11dc4:	b	11e18 <__mempcpy_chk@plt+0xdf0>
   11dc8:	bl	10f5c <__errno_location@plt>
   11dcc:	mov	r6, r0
   11dd0:	ldr	r0, [r6]
   11dd4:	cmp	r0, #34	; 0x22
   11dd8:	bne	11e08 <__mempcpy_chk@plt+0xde0>
   11ddc:	mov	r0, sl
   11de0:	bl	14e84 <__mempcpy_chk@plt+0x3e5c>
   11de4:	cmp	r0, #0
   11de8:	beq	11e94 <__mempcpy_chk@plt+0xe6c>
   11dec:	ldr	r4, [sl]
   11df0:	ldr	r1, [sl, #4]
   11df4:	mov	r0, r4
   11df8:	bl	10f2c <getcwd@plt>
   11dfc:	cmp	r0, #0
   11e00:	beq	11dd0 <__mempcpy_chk@plt+0xda8>
   11e04:	b	1196c <__mempcpy_chk@plt+0x944>
   11e08:	cmp	r0, #12
   11e0c:	beq	11e94 <__mempcpy_chk@plt+0xe6c>
   11e10:	mov	r5, #1
   11e14:	mov	r6, r4
   11e18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11e1c:	cmp	r0, #0
   11e20:	beq	11e28 <__mempcpy_chk@plt+0xe00>
   11e24:	bl	12980 <__mempcpy_chk@plt+0x1958>
   11e28:	sub	r0, fp, #1072	; 0x430
   11e2c:	bl	12010 <__mempcpy_chk@plt+0xfe8>
   11e30:	add	r0, sp, #136	; 0x88
   11e34:	bl	12010 <__mempcpy_chk@plt+0xfe8>
   11e38:	cmp	r5, #0
   11e3c:	beq	11e50 <__mempcpy_chk@plt+0xe28>
   11e40:	mov	r0, sl
   11e44:	bl	12010 <__mempcpy_chk@plt+0xfe8>
   11e48:	mov	r6, #0
   11e4c:	b	11e70 <__mempcpy_chk@plt+0xe48>
   11e50:	mov	r0, #0
   11e54:	strb	r0, [r6], -r4
   11e58:	add	r1, r6, #1
   11e5c:	mov	r0, sl
   11e60:	bl	14e18 <__mempcpy_chk@plt+0x3df0>
   11e64:	mov	r6, r0
   11e68:	cmp	r0, #0
   11e6c:	beq	11e94 <__mempcpy_chk@plt+0xe6c>
   11e70:	mov	r0, r6
   11e74:	sub	sp, fp, #28
   11e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e7c:	bl	10f5c <__errno_location@plt>
   11e80:	mov	r1, #40	; 0x28
   11e84:	str	r1, [r0]
   11e88:	mov	r5, #1
   11e8c:	ldr	sl, [sp, #20]
   11e90:	b	11e18 <__mempcpy_chk@plt+0xdf0>
   11e94:	bl	15804 <__mempcpy_chk@plt+0x47dc>
   11e98:	sub	r1, r0, #1
   11e9c:	ands	r0, r0, r1
   11ea0:	movwne	r0, #1
   11ea4:	bx	lr
   11ea8:	mov	r1, #1024	; 0x400
   11eac:	add	r2, r0, #8
   11eb0:	str	r2, [r0]
   11eb4:	str	r1, [r0, #4]
   11eb8:	bx	lr
   11ebc:	push	{r4, r5, r6, sl, fp, lr}
   11ec0:	add	fp, sp, #16
   11ec4:	sub	sp, sp, #8
   11ec8:	mov	r4, r2
   11ecc:	mov	r5, r1
   11ed0:	mov	r6, r0
   11ed4:	ldr	r0, [r0]
   11ed8:	cmp	r0, #0
   11edc:	bne	11f14 <__mempcpy_chk@plt+0xeec>
   11ee0:	movw	r0, #12780	; 0x31ec
   11ee4:	movt	r0, #1
   11ee8:	str	r0, [sp]
   11eec:	movw	r2, #12620	; 0x314c
   11ef0:	movt	r2, #1
   11ef4:	movw	r3, #12676	; 0x3184
   11ef8:	movt	r3, #1
   11efc:	mov	r0, #7
   11f00:	mov	r1, #0
   11f04:	bl	126a4 <__mempcpy_chk@plt+0x167c>
   11f08:	str	r0, [r6]
   11f0c:	cmp	r0, #0
   11f10:	beq	11f50 <__mempcpy_chk@plt+0xf28>
   11f14:	ldr	r0, [r6]
   11f18:	mov	r1, r5
   11f1c:	mov	r2, r4
   11f20:	bl	121a8 <__mempcpy_chk@plt+0x1180>
   11f24:	mov	r1, r0
   11f28:	mov	r0, #1
   11f2c:	cmp	r1, #0
   11f30:	bne	11f48 <__mempcpy_chk@plt+0xf20>
   11f34:	ldr	r0, [r6]
   11f38:	mov	r1, r5
   11f3c:	mov	r2, r4
   11f40:	bl	1212c <__mempcpy_chk@plt+0x1104>
   11f44:	mov	r0, #0
   11f48:	sub	sp, fp, #16
   11f4c:	pop	{r4, r5, r6, sl, fp, pc}
   11f50:	bl	15804 <__mempcpy_chk@plt+0x47dc>
   11f54:	mov	r1, r0
   11f58:	ldrb	r2, [r0]
   11f5c:	mov	r0, #0
   11f60:	cmp	r2, #47	; 0x2f
   11f64:	bxne	lr
   11f68:	mov	r0, #1
   11f6c:	mov	ip, #0
   11f70:	mov	r3, r1
   11f74:	ldrb	r2, [r1, #1]!
   11f78:	cmp	r2, #47	; 0x2f
   11f7c:	beq	11f70 <__mempcpy_chk@plt+0xf48>
   11f80:	cmp	r2, #46	; 0x2e
   11f84:	bne	11fc4 <__mempcpy_chk@plt+0xf9c>
   11f88:	add	r1, r3, #2
   11f8c:	ldrb	r2, [r1]
   11f90:	cmp	r2, #47	; 0x2f
   11f94:	beq	11f70 <__mempcpy_chk@plt+0xf48>
   11f98:	cmp	r2, #0
   11f9c:	moveq	ip, #1
   11fa0:	moveq	r0, ip
   11fa4:	bxeq	lr
   11fa8:	cmp	r2, #46	; 0x2e
   11fac:	bne	11fd4 <__mempcpy_chk@plt+0xfac>
   11fb0:	ldrb	r1, [r3, #3]
   11fb4:	cmp	r1, #0
   11fb8:	cmpne	r1, #47	; 0x2f
   11fbc:	bne	11fd4 <__mempcpy_chk@plt+0xfac>
   11fc0:	bx	lr
   11fc4:	cmp	r2, #0
   11fc8:	movne	r0, ip
   11fcc:	bxne	lr
   11fd0:	bx	lr
   11fd4:	mov	r0, #0
   11fd8:	bx	lr
   11fdc:	mov	r2, #47	; 0x2f
   11fe0:	strh	r2, [r1]
   11fe4:	b	11fe8 <__mempcpy_chk@plt+0xfc0>
   11fe8:	push	{fp, lr}
   11fec:	mov	fp, sp
   11ff0:	mov	r1, r0
   11ff4:	mvn	r0, #99	; 0x63
   11ff8:	mov	r2, #0
   11ffc:	mov	r3, #512	; 0x200
   12000:	bl	10e18 <faccessat@plt>
   12004:	clz	r0, r0
   12008:	lsr	r0, r0, #5
   1200c:	pop	{fp, pc}
   12010:	mov	r1, r0
   12014:	ldr	r0, [r1], #8
   12018:	cmp	r0, r1
   1201c:	bxeq	lr
   12020:	b	121f8 <__mempcpy_chk@plt+0x11d0>
   12024:	movw	r1, #33100	; 0x814c
   12028:	movt	r1, #2
   1202c:	str	r0, [r1]
   12030:	bx	lr
   12034:	movw	r1, #33104	; 0x8150
   12038:	movt	r1, #2
   1203c:	strb	r0, [r1]
   12040:	bx	lr
   12044:	push	{r4, r5, r6, sl, fp, lr}
   12048:	add	fp, sp, #16
   1204c:	sub	sp, sp, #8
   12050:	movw	r0, #33092	; 0x8144
   12054:	movt	r0, #2
   12058:	ldr	r0, [r0]
   1205c:	bl	15d8c <__mempcpy_chk@plt+0x4d64>
   12060:	cmp	r0, #0
   12064:	beq	1208c <__mempcpy_chk@plt+0x1064>
   12068:	movw	r0, #33104	; 0x8150
   1206c:	movt	r0, #2
   12070:	ldrb	r0, [r0]
   12074:	cmp	r0, #0
   12078:	beq	120ac <__mempcpy_chk@plt+0x1084>
   1207c:	bl	10f5c <__errno_location@plt>
   12080:	ldr	r0, [r0]
   12084:	cmp	r0, #32
   12088:	bne	120ac <__mempcpy_chk@plt+0x1084>
   1208c:	movw	r0, #33088	; 0x8140
   12090:	movt	r0, #2
   12094:	ldr	r0, [r0]
   12098:	bl	15d8c <__mempcpy_chk@plt+0x4d64>
   1209c:	cmp	r0, #0
   120a0:	subeq	sp, fp, #16
   120a4:	popeq	{r4, r5, r6, sl, fp, pc}
   120a8:	b	1211c <__mempcpy_chk@plt+0x10f4>
   120ac:	movw	r1, #27657	; 0x6c09
   120b0:	movt	r1, #1
   120b4:	mov	r0, #0
   120b8:	mov	r2, #5
   120bc:	bl	10e48 <dcgettext@plt>
   120c0:	mov	r4, r0
   120c4:	movw	r0, #33100	; 0x814c
   120c8:	movt	r0, #2
   120cc:	ldr	r6, [r0]
   120d0:	bl	10f5c <__errno_location@plt>
   120d4:	ldr	r5, [r0]
   120d8:	cmp	r6, #0
   120dc:	bne	120f8 <__mempcpy_chk@plt+0x10d0>
   120e0:	movw	r2, #27673	; 0x6c19
   120e4:	movt	r2, #1
   120e8:	mov	r0, #0
   120ec:	mov	r1, r5
   120f0:	mov	r3, r4
   120f4:	b	12118 <__mempcpy_chk@plt+0x10f0>
   120f8:	mov	r0, r6
   120fc:	bl	148b0 <__mempcpy_chk@plt+0x3888>
   12100:	mov	r3, r0
   12104:	str	r4, [sp]
   12108:	movw	r2, #27669	; 0x6c15
   1210c:	movt	r2, #1
   12110:	mov	r0, #0
   12114:	mov	r1, r5
   12118:	bl	10ed8 <error@plt>
   1211c:	movw	r0, #33004	; 0x80ec
   12120:	movt	r0, #2
   12124:	ldr	r0, [r0]
   12128:	bl	10e24 <_exit@plt>
   1212c:	push	{r4, r5, r6, r7, fp, lr}
   12130:	add	fp, sp, #16
   12134:	cmp	r0, #0
   12138:	beq	121a0 <__mempcpy_chk@plt+0x1178>
   1213c:	mov	r6, r2
   12140:	mov	r7, r1
   12144:	mov	r5, r0
   12148:	mov	r0, #24
   1214c:	bl	1547c <__mempcpy_chk@plt+0x4454>
   12150:	mov	r4, r0
   12154:	mov	r0, r7
   12158:	bl	157e4 <__mempcpy_chk@plt+0x47bc>
   1215c:	str	r0, [r4]
   12160:	ldrd	r0, [r6, #96]	; 0x60
   12164:	str	r0, [r4, #8]
   12168:	str	r1, [r4, #12]
   1216c:	ldrd	r0, [r6]
   12170:	str	r1, [r4, #20]
   12174:	str	r0, [r4, #16]
   12178:	mov	r0, r5
   1217c:	mov	r1, r4
   12180:	bl	12f40 <__mempcpy_chk@plt+0x1f18>
   12184:	cmp	r0, #0
   12188:	beq	121a4 <__mempcpy_chk@plt+0x117c>
   1218c:	cmp	r0, r4
   12190:	beq	121a0 <__mempcpy_chk@plt+0x1178>
   12194:	mov	r0, r4
   12198:	pop	{r4, r5, r6, r7, fp, lr}
   1219c:	b	131ec <__mempcpy_chk@plt+0x21c4>
   121a0:	pop	{r4, r5, r6, r7, fp, pc}
   121a4:	bl	15804 <__mempcpy_chk@plt+0x47dc>
   121a8:	cmp	r0, #0
   121ac:	moveq	r0, #0
   121b0:	bxeq	lr
   121b4:	push	{r4, r5, fp, lr}
   121b8:	add	fp, sp, #8
   121bc:	sub	sp, sp, #24
   121c0:	mov	ip, sp
   121c4:	add	r3, ip, #8
   121c8:	add	ip, ip, #16
   121cc:	str	r1, [sp]
   121d0:	ldrd	r4, [r2, #96]	; 0x60
   121d4:	strd	r4, [r3]
   121d8:	ldrd	r2, [r2]
   121dc:	strd	r2, [ip]
   121e0:	mov	r1, sp
   121e4:	bl	123f8 <__mempcpy_chk@plt+0x13d0>
   121e8:	cmp	r0, #0
   121ec:	movwne	r0, #1
   121f0:	sub	sp, fp, #8
   121f4:	pop	{r4, r5, fp, pc}
   121f8:	push	{r4, r5, r6, sl, fp, lr}
   121fc:	add	fp, sp, #16
   12200:	mov	r4, r0
   12204:	bl	10f5c <__errno_location@plt>
   12208:	mov	r5, r0
   1220c:	ldr	r6, [r0]
   12210:	mov	r0, r4
   12214:	bl	10e0c <free@plt>
   12218:	str	r6, [r5]
   1221c:	pop	{r4, r5, r6, sl, fp, pc}
   12220:	ldr	r0, [r0, #8]
   12224:	bx	lr
   12228:	ldr	r0, [r0, #12]
   1222c:	bx	lr
   12230:	ldr	r0, [r0, #16]
   12234:	bx	lr
   12238:	mov	r2, r0
   1223c:	ldm	r0, {r1, r3}
   12240:	mov	r0, #0
   12244:	cmp	r1, r3
   12248:	bxcs	lr
   1224c:	ldr	ip, [r2, #4]
   12250:	mov	r0, #0
   12254:	b	12264 <__mempcpy_chk@plt+0x123c>
   12258:	add	r1, r1, #8
   1225c:	cmp	r1, ip
   12260:	bcs	12294 <__mempcpy_chk@plt+0x126c>
   12264:	ldr	r2, [r1]
   12268:	cmp	r2, #0
   1226c:	beq	12258 <__mempcpy_chk@plt+0x1230>
   12270:	mov	r3, #0
   12274:	mov	r2, r1
   12278:	add	r3, r3, #1
   1227c:	ldr	r2, [r2, #4]
   12280:	cmp	r2, #0
   12284:	bne	12278 <__mempcpy_chk@plt+0x1250>
   12288:	cmp	r3, r0
   1228c:	movhi	r0, r3
   12290:	b	12258 <__mempcpy_chk@plt+0x1230>
   12294:	bx	lr
   12298:	push	{fp, lr}
   1229c:	mov	fp, sp
   122a0:	ldr	r3, [r0]
   122a4:	ldr	r1, [r0, #4]
   122a8:	mov	lr, #0
   122ac:	cmp	r3, r1
   122b0:	mov	r1, #0
   122b4:	bcs	122fc <__mempcpy_chk@plt+0x12d4>
   122b8:	ldr	ip, [r0, #4]
   122bc:	mov	r1, #0
   122c0:	mov	lr, #0
   122c4:	b	122d4 <__mempcpy_chk@plt+0x12ac>
   122c8:	add	r3, r3, #8
   122cc:	cmp	r3, ip
   122d0:	bcs	122fc <__mempcpy_chk@plt+0x12d4>
   122d4:	ldr	r2, [r3]
   122d8:	cmp	r2, #0
   122dc:	beq	122c8 <__mempcpy_chk@plt+0x12a0>
   122e0:	mov	r2, r3
   122e4:	add	r1, r1, #1
   122e8:	ldr	r2, [r2, #4]
   122ec:	cmp	r2, #0
   122f0:	bne	122e4 <__mempcpy_chk@plt+0x12bc>
   122f4:	add	lr, lr, #1
   122f8:	b	122c8 <__mempcpy_chk@plt+0x12a0>
   122fc:	ldr	r2, [r0, #12]
   12300:	cmp	lr, r2
   12304:	bne	1231c <__mempcpy_chk@plt+0x12f4>
   12308:	ldr	r2, [r0, #16]
   1230c:	mov	r0, #1
   12310:	cmp	r1, r2
   12314:	movne	r0, #0
   12318:	pop	{fp, pc}
   1231c:	mov	r0, #0
   12320:	pop	{fp, pc}
   12324:	nop	{0}
   12328:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1232c:	add	fp, sp, #24
   12330:	sub	sp, sp, #8
   12334:	mov	r4, r1
   12338:	mov	r5, r0
   1233c:	bl	12230 <__mempcpy_chk@plt+0x1208>
   12340:	mov	r8, r0
   12344:	mov	r0, r5
   12348:	bl	12220 <__mempcpy_chk@plt+0x11f8>
   1234c:	mov	r7, r0
   12350:	mov	r0, r5
   12354:	bl	12228 <__mempcpy_chk@plt+0x1200>
   12358:	mov	r6, r0
   1235c:	mov	r0, r5
   12360:	bl	12238 <__mempcpy_chk@plt+0x1210>
   12364:	mov	r5, r0
   12368:	movw	r2, #27676	; 0x6c1c
   1236c:	movt	r2, #1
   12370:	mov	r0, r4
   12374:	mov	r1, #1
   12378:	mov	r3, r8
   1237c:	bl	10f98 <__fprintf_chk@plt>
   12380:	movw	r2, #27700	; 0x6c34
   12384:	movt	r2, #1
   12388:	mov	r0, r4
   1238c:	mov	r1, #1
   12390:	mov	r3, r7
   12394:	bl	10f98 <__fprintf_chk@plt>
   12398:	vldr	d16, [pc, #80]	; 123f0 <__mempcpy_chk@plt+0x13c8>
   1239c:	vmov	s0, r6
   123a0:	vmov	s2, r7
   123a4:	vcvt.f64.u32	d17, s0
   123a8:	vcvt.f64.u32	d18, s2
   123ac:	vmul.f64	d16, d17, d16
   123b0:	vdiv.f64	d16, d16, d18
   123b4:	vstr	d16, [sp]
   123b8:	movw	r2, #27724	; 0x6c4c
   123bc:	movt	r2, #1
   123c0:	mov	r0, r4
   123c4:	mov	r1, #1
   123c8:	mov	r3, r6
   123cc:	bl	10f98 <__fprintf_chk@plt>
   123d0:	movw	r2, #27757	; 0x6c6d
   123d4:	movt	r2, #1
   123d8:	mov	r0, r4
   123dc:	mov	r1, #1
   123e0:	mov	r3, r5
   123e4:	sub	sp, fp, #24
   123e8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   123ec:	b	10f98 <__fprintf_chk@plt>
   123f0:	andeq	r0, r0, r0
   123f4:	subsmi	r0, r9, r0
   123f8:	push	{r4, r5, r6, r7, fp, lr}
   123fc:	add	fp, sp, #16
   12400:	mov	r5, r1
   12404:	mov	r6, r0
   12408:	bl	12468 <__mempcpy_chk@plt+0x1440>
   1240c:	mov	r7, r0
   12410:	ldr	r0, [r0]
   12414:	mov	r4, #0
   12418:	cmp	r0, #0
   1241c:	beq	12454 <__mempcpy_chk@plt+0x142c>
   12420:	cmp	r7, #0
   12424:	beq	12454 <__mempcpy_chk@plt+0x142c>
   12428:	ldr	r1, [r7]
   1242c:	cmp	r1, r5
   12430:	beq	1245c <__mempcpy_chk@plt+0x1434>
   12434:	ldr	r2, [r6, #28]
   12438:	mov	r0, r5
   1243c:	blx	r2
   12440:	cmp	r0, #0
   12444:	bne	1245c <__mempcpy_chk@plt+0x1434>
   12448:	ldr	r7, [r7, #4]
   1244c:	cmp	r7, #0
   12450:	bne	12428 <__mempcpy_chk@plt+0x1400>
   12454:	mov	r0, r4
   12458:	pop	{r4, r5, r6, r7, fp, pc}
   1245c:	ldr	r4, [r7]
   12460:	mov	r0, r4
   12464:	pop	{r4, r5, r6, r7, fp, pc}
   12468:	push	{r4, sl, fp, lr}
   1246c:	add	fp, sp, #8
   12470:	mov	r2, r1
   12474:	mov	r4, r0
   12478:	ldr	r1, [r0, #8]
   1247c:	ldr	r3, [r0, #24]
   12480:	mov	r0, r2
   12484:	blx	r3
   12488:	ldr	r1, [r4, #8]
   1248c:	cmp	r0, r1
   12490:	ldrcc	r1, [r4]
   12494:	addcc	r0, r1, r0, lsl #3
   12498:	popcc	{r4, sl, fp, pc}
   1249c:	bl	11004 <abort@plt>
   124a0:	push	{fp, lr}
   124a4:	mov	fp, sp
   124a8:	ldr	r1, [r0, #16]
   124ac:	cmp	r1, #0
   124b0:	beq	124d8 <__mempcpy_chk@plt+0x14b0>
   124b4:	ldr	r2, [r0]
   124b8:	ldr	r1, [r0, #4]
   124bc:	cmp	r2, r1
   124c0:	bcs	124e4 <__mempcpy_chk@plt+0x14bc>
   124c4:	ldr	r1, [r2], #8
   124c8:	cmp	r1, #0
   124cc:	beq	124b8 <__mempcpy_chk@plt+0x1490>
   124d0:	mov	r0, r1
   124d4:	pop	{fp, pc}
   124d8:	mov	r1, #0
   124dc:	mov	r0, r1
   124e0:	pop	{fp, pc}
   124e4:	bl	11004 <abort@plt>
   124e8:	push	{r4, r5, fp, lr}
   124ec:	add	fp, sp, #8
   124f0:	mov	r5, r1
   124f4:	mov	r4, r0
   124f8:	bl	12468 <__mempcpy_chk@plt+0x1440>
   124fc:	mov	r1, r0
   12500:	b	12510 <__mempcpy_chk@plt+0x14e8>
   12504:	ldr	r1, [r1, #4]
   12508:	cmp	r1, #0
   1250c:	beq	12530 <__mempcpy_chk@plt+0x1508>
   12510:	ldr	r2, [r1]
   12514:	cmp	r2, r5
   12518:	bne	12504 <__mempcpy_chk@plt+0x14dc>
   1251c:	ldr	r2, [r1, #4]
   12520:	cmp	r2, #0
   12524:	beq	12504 <__mempcpy_chk@plt+0x14dc>
   12528:	ldr	r0, [r2]
   1252c:	pop	{r4, r5, fp, pc}
   12530:	add	r1, r0, #8
   12534:	ldr	r2, [r4, #4]
   12538:	cmp	r1, r2
   1253c:	bcs	12550 <__mempcpy_chk@plt+0x1528>
   12540:	ldr	r0, [r1], #8
   12544:	cmp	r0, #0
   12548:	beq	12538 <__mempcpy_chk@plt+0x1510>
   1254c:	pop	{r4, r5, fp, pc}
   12550:	mov	r0, #0
   12554:	pop	{r4, r5, fp, pc}
   12558:	push	{r4, sl, fp, lr}
   1255c:	add	fp, sp, #8
   12560:	mov	ip, r0
   12564:	ldr	lr, [r0]
   12568:	ldr	r3, [r0, #4]
   1256c:	mov	r0, #0
   12570:	cmp	lr, r3
   12574:	popcs	{r4, sl, fp, pc}
   12578:	mov	r0, #0
   1257c:	b	12590 <__mempcpy_chk@plt+0x1568>
   12580:	ldr	r3, [ip, #4]
   12584:	add	lr, lr, #8
   12588:	cmp	lr, r3
   1258c:	bcs	125c8 <__mempcpy_chk@plt+0x15a0>
   12590:	ldr	r3, [lr]
   12594:	cmp	r3, #0
   12598:	cmpne	lr, #0
   1259c:	beq	12580 <__mempcpy_chk@plt+0x1558>
   125a0:	mov	r3, lr
   125a4:	cmp	r0, r2
   125a8:	bcs	125c8 <__mempcpy_chk@plt+0x15a0>
   125ac:	ldr	r4, [r3]
   125b0:	str	r4, [r1, r0, lsl #2]
   125b4:	add	r0, r0, #1
   125b8:	ldr	r3, [r3, #4]
   125bc:	cmp	r3, #0
   125c0:	bne	125a4 <__mempcpy_chk@plt+0x157c>
   125c4:	b	12580 <__mempcpy_chk@plt+0x1558>
   125c8:	pop	{r4, sl, fp, pc}
   125cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   125d0:	add	fp, sp, #24
   125d4:	mov	r8, r0
   125d8:	ldr	r9, [r0]
   125dc:	ldr	r0, [r0, #4]
   125e0:	mov	r6, #0
   125e4:	cmp	r9, r0
   125e8:	bcs	12648 <__mempcpy_chk@plt+0x1620>
   125ec:	mov	r4, r2
   125f0:	mov	r5, r1
   125f4:	mov	r6, #0
   125f8:	b	1260c <__mempcpy_chk@plt+0x15e4>
   125fc:	ldr	r0, [r8, #4]
   12600:	add	r9, r9, #8
   12604:	cmp	r9, r0
   12608:	bcs	12648 <__mempcpy_chk@plt+0x1620>
   1260c:	ldr	r0, [r9]
   12610:	cmp	r0, #0
   12614:	cmpne	r9, #0
   12618:	beq	125fc <__mempcpy_chk@plt+0x15d4>
   1261c:	mov	r7, r9
   12620:	ldr	r0, [r7]
   12624:	mov	r1, r4
   12628:	blx	r5
   1262c:	cmp	r0, #0
   12630:	beq	12648 <__mempcpy_chk@plt+0x1620>
   12634:	add	r6, r6, #1
   12638:	ldr	r7, [r7, #4]
   1263c:	cmp	r7, #0
   12640:	bne	12620 <__mempcpy_chk@plt+0x15f8>
   12644:	b	125fc <__mempcpy_chk@plt+0x15d4>
   12648:	mov	r0, r6
   1264c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12650:	ldrb	r2, [r0]
   12654:	cmp	r2, #0
   12658:	moveq	r0, #0
   1265c:	bxeq	lr
   12660:	add	r3, r0, #1
   12664:	mov	r0, #0
   12668:	rsb	r0, r0, r0, lsl #5
   1266c:	uxtab	r0, r0, r2
   12670:	udiv	r2, r0, r1
   12674:	mls	r0, r2, r1, r0
   12678:	ldrb	r2, [r3], #1
   1267c:	cmp	r2, #0
   12680:	bne	12668 <__mempcpy_chk@plt+0x1640>
   12684:	bx	lr
   12688:	movw	r1, #27784	; 0x6c88
   1268c:	movt	r1, #1
   12690:	vld1.32	{d16-d17}, [r1]!
   12694:	vst1.32	{d16-d17}, [r0]!
   12698:	ldr	r1, [r1]
   1269c:	str	r1, [r0]
   126a0:	bx	lr
   126a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126a8:	add	fp, sp, #28
   126ac:	sub	sp, sp, #4
   126b0:	mov	r7, r1
   126b4:	mov	r8, r0
   126b8:	movw	sl, #10148	; 0x27a4
   126bc:	movt	sl, #1
   126c0:	cmp	r3, #0
   126c4:	movne	sl, r3
   126c8:	movw	r5, #10116	; 0x2784
   126cc:	movt	r5, #1
   126d0:	cmp	r2, #0
   126d4:	movne	r5, r2
   126d8:	mov	r0, #40	; 0x28
   126dc:	bl	1589c <__mempcpy_chk@plt+0x4874>
   126e0:	mov	r9, #0
   126e4:	cmp	r0, #0
   126e8:	beq	12778 <__mempcpy_chk@plt+0x1750>
   126ec:	mov	r4, r0
   126f0:	movw	r6, #27784	; 0x6c88
   126f4:	movt	r6, #1
   126f8:	cmp	r7, #0
   126fc:	movne	r6, r7
   12700:	str	r6, [r0, #20]
   12704:	bl	127b4 <__mempcpy_chk@plt+0x178c>
   12708:	cmp	r0, #0
   1270c:	beq	12770 <__mempcpy_chk@plt+0x1748>
   12710:	mov	r0, r8
   12714:	mov	r1, r6
   12718:	bl	12860 <__mempcpy_chk@plt+0x1838>
   1271c:	str	r0, [r4, #8]
   12720:	cmp	r0, #0
   12724:	beq	12770 <__mempcpy_chk@plt+0x1748>
   12728:	mov	r1, #8
   1272c:	bl	15848 <__mempcpy_chk@plt+0x4820>
   12730:	str	r0, [r4]
   12734:	cmp	r0, #0
   12738:	beq	12770 <__mempcpy_chk@plt+0x1748>
   1273c:	ldr	r1, [fp, #8]
   12740:	mov	r2, #0
   12744:	str	r5, [r4, #24]
   12748:	str	sl, [r4, #28]
   1274c:	str	r1, [r4, #32]
   12750:	str	r2, [r4, #36]	; 0x24
   12754:	str	r2, [r4, #12]
   12758:	str	r2, [r4, #16]
   1275c:	ldr	r1, [r4, #8]
   12760:	add	r0, r0, r1, lsl #3
   12764:	str	r0, [r4, #4]
   12768:	mov	r9, r4
   1276c:	b	12778 <__mempcpy_chk@plt+0x1750>
   12770:	mov	r0, r4
   12774:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   12778:	mov	r0, r9
   1277c:	sub	sp, fp, #28
   12780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12784:	push	{r4, sl, fp, lr}
   12788:	add	fp, sp, #8
   1278c:	mov	r4, r1
   12790:	mov	r1, #3
   12794:	bl	159f0 <__mempcpy_chk@plt+0x49c8>
   12798:	udiv	r1, r0, r4
   1279c:	mls	r0, r1, r4, r0
   127a0:	pop	{r4, sl, fp, pc}
   127a4:	sub	r0, r0, r1
   127a8:	clz	r0, r0
   127ac:	lsr	r0, r0, #5
   127b0:	bx	lr
   127b4:	mov	r1, r0
   127b8:	ldr	r3, [r0, #20]
   127bc:	mov	r0, #1
   127c0:	movw	r2, #27784	; 0x6c88
   127c4:	movt	r2, #1
   127c8:	cmp	r3, r2
   127cc:	beq	12850 <__mempcpy_chk@plt+0x1828>
   127d0:	vldr	s2, [pc, #124]	; 12854 <__mempcpy_chk@plt+0x182c>
   127d4:	vldr	s0, [r3, #8]
   127d8:	vcmpe.f32	s0, s2
   127dc:	vmrs	APSR_nzcv, fpscr
   127e0:	ble	12848 <__mempcpy_chk@plt+0x1820>
   127e4:	vldr	s4, [pc, #108]	; 12858 <__mempcpy_chk@plt+0x1830>
   127e8:	vcmpe.f32	s0, s4
   127ec:	vmrs	APSR_nzcv, fpscr
   127f0:	bpl	12848 <__mempcpy_chk@plt+0x1820>
   127f4:	vldr	s4, [pc, #96]	; 1285c <__mempcpy_chk@plt+0x1834>
   127f8:	vldr	s6, [r3, #12]
   127fc:	vcmpe.f32	s6, s4
   12800:	vmrs	APSR_nzcv, fpscr
   12804:	ble	12848 <__mempcpy_chk@plt+0x1820>
   12808:	vldr	s4, [r3]
   1280c:	vcmpe.f32	s4, #0.0
   12810:	vmrs	APSR_nzcv, fpscr
   12814:	blt	12848 <__mempcpy_chk@plt+0x1820>
   12818:	vadd.f32	s2, s4, s2
   1281c:	vcmpe.f32	s2, s0
   12820:	vmrs	APSR_nzcv, fpscr
   12824:	bpl	12848 <__mempcpy_chk@plt+0x1820>
   12828:	vldr	s0, [r3, #4]
   1282c:	vmov.f32	s4, #112	; 0x3f800000  1.0
   12830:	vcmpe.f32	s0, s4
   12834:	vmrs	APSR_nzcv, fpscr
   12838:	bhi	12848 <__mempcpy_chk@plt+0x1820>
   1283c:	vcmpe.f32	s2, s0
   12840:	vmrs	APSR_nzcv, fpscr
   12844:	bxmi	lr
   12848:	str	r2, [r1, #20]
   1284c:	mov	r0, #0
   12850:	bx	lr
   12854:	stclcc	12, cr12, [ip, #820]	; 0x334
   12858:	svccc	0x00666666
   1285c:	svccc	0x008ccccd
   12860:	push	{fp, lr}
   12864:	mov	fp, sp
   12868:	ldrb	r2, [r1, #16]
   1286c:	cmp	r2, #0
   12870:	bne	128a0 <__mempcpy_chk@plt+0x1878>
   12874:	vldr	s0, [r1, #8]
   12878:	vmov	s2, r0
   1287c:	vcvt.f32.u32	s2, s2
   12880:	vdiv.f32	s2, s2, s0
   12884:	vcvt.u32.f32	s0, s2
   12888:	vldr	s4, [pc, #32]	; 128b0 <__mempcpy_chk@plt+0x1888>
   1288c:	mov	r0, #0
   12890:	vcmpe.f32	s2, s4
   12894:	vmrs	APSR_nzcv, fpscr
   12898:	popge	{fp, pc}
   1289c:	vmov	r0, s0
   128a0:	bl	13094 <__mempcpy_chk@plt+0x206c>
   128a4:	cmn	r0, #-536870911	; 0xe0000001
   128a8:	movwhi	r0, #0
   128ac:	pop	{fp, pc}
   128b0:	svcmi	0x00800000
   128b4:	push	{r4, r5, r6, r7, fp, lr}
   128b8:	add	fp, sp, #16
   128bc:	mov	r4, r0
   128c0:	ldr	r5, [r0]
   128c4:	ldr	r0, [r0, #4]
   128c8:	cmp	r5, r0
   128cc:	bcs	12970 <__mempcpy_chk@plt+0x1948>
   128d0:	mov	r6, #0
   128d4:	b	128f0 <__mempcpy_chk@plt+0x18c8>
   128d8:	str	r6, [r5]
   128dc:	str	r6, [r5, #4]
   128e0:	ldr	r0, [r4, #4]
   128e4:	add	r5, r5, #8
   128e8:	cmp	r5, r0
   128ec:	bcs	12970 <__mempcpy_chk@plt+0x1948>
   128f0:	ldr	r0, [r5]
   128f4:	cmp	r0, #0
   128f8:	beq	128e0 <__mempcpy_chk@plt+0x18b8>
   128fc:	ldr	r7, [r5, #4]
   12900:	ldr	r1, [r4, #32]
   12904:	cmp	r1, #0
   12908:	mov	r0, r1
   1290c:	movwne	r0, #1
   12910:	cmp	r7, #0
   12914:	bne	1295c <__mempcpy_chk@plt+0x1934>
   12918:	cmp	r0, #0
   1291c:	beq	128d8 <__mempcpy_chk@plt+0x18b0>
   12920:	ldr	r0, [r5]
   12924:	blx	r1
   12928:	b	128d8 <__mempcpy_chk@plt+0x18b0>
   1292c:	str	r6, [r7]
   12930:	ldr	r2, [r7, #4]
   12934:	ldr	r0, [r4, #36]	; 0x24
   12938:	str	r0, [r7, #4]
   1293c:	str	r7, [r4, #36]	; 0x24
   12940:	ldr	r1, [r4, #32]
   12944:	cmp	r1, #0
   12948:	mov	r0, r1
   1294c:	movwne	r0, #1
   12950:	cmp	r2, #0
   12954:	mov	r7, r2
   12958:	beq	12918 <__mempcpy_chk@plt+0x18f0>
   1295c:	tst	r0, #1
   12960:	beq	1292c <__mempcpy_chk@plt+0x1904>
   12964:	ldr	r0, [r7]
   12968:	blx	r1
   1296c:	b	1292c <__mempcpy_chk@plt+0x1904>
   12970:	mov	r0, #0
   12974:	str	r0, [r4, #12]
   12978:	str	r0, [r4, #16]
   1297c:	pop	{r4, r5, r6, r7, fp, pc}
   12980:	push	{r4, r5, r6, sl, fp, lr}
   12984:	add	fp, sp, #16
   12988:	mov	r4, r0
   1298c:	ldr	r0, [r0, #32]
   12990:	cmp	r0, #0
   12994:	beq	129f8 <__mempcpy_chk@plt+0x19d0>
   12998:	ldr	r0, [r4, #16]
   1299c:	cmp	r0, #0
   129a0:	beq	129f8 <__mempcpy_chk@plt+0x19d0>
   129a4:	ldr	r5, [r4]
   129a8:	ldr	r0, [r4, #4]
   129ac:	cmp	r5, r0
   129b0:	bcc	129c8 <__mempcpy_chk@plt+0x19a0>
   129b4:	b	129f8 <__mempcpy_chk@plt+0x19d0>
   129b8:	ldr	r0, [r4, #4]
   129bc:	add	r5, r5, #8
   129c0:	cmp	r5, r0
   129c4:	bcs	129f8 <__mempcpy_chk@plt+0x19d0>
   129c8:	ldr	r0, [r5]
   129cc:	cmp	r0, #0
   129d0:	cmpne	r5, #0
   129d4:	beq	129b8 <__mempcpy_chk@plt+0x1990>
   129d8:	mov	r6, r5
   129dc:	ldr	r0, [r6]
   129e0:	ldr	r1, [r4, #32]
   129e4:	blx	r1
   129e8:	ldr	r6, [r6, #4]
   129ec:	cmp	r6, #0
   129f0:	bne	129dc <__mempcpy_chk@plt+0x19b4>
   129f4:	b	129b8 <__mempcpy_chk@plt+0x1990>
   129f8:	ldr	r5, [r4]
   129fc:	ldr	r0, [r4, #4]
   12a00:	cmp	r5, r0
   12a04:	bcc	12a1c <__mempcpy_chk@plt+0x19f4>
   12a08:	b	12a40 <__mempcpy_chk@plt+0x1a18>
   12a0c:	ldr	r0, [r4, #4]
   12a10:	add	r5, r5, #8
   12a14:	cmp	r5, r0
   12a18:	bcs	12a40 <__mempcpy_chk@plt+0x1a18>
   12a1c:	ldr	r0, [r5, #4]
   12a20:	cmp	r0, #0
   12a24:	beq	12a0c <__mempcpy_chk@plt+0x19e4>
   12a28:	ldr	r6, [r0, #4]
   12a2c:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   12a30:	cmp	r6, #0
   12a34:	mov	r0, r6
   12a38:	bne	12a28 <__mempcpy_chk@plt+0x1a00>
   12a3c:	b	12a0c <__mempcpy_chk@plt+0x19e4>
   12a40:	ldr	r0, [r4, #36]	; 0x24
   12a44:	cmp	r0, #0
   12a48:	beq	12a60 <__mempcpy_chk@plt+0x1a38>
   12a4c:	ldr	r5, [r0, #4]
   12a50:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   12a54:	cmp	r5, #0
   12a58:	mov	r0, r5
   12a5c:	bne	12a4c <__mempcpy_chk@plt+0x1a24>
   12a60:	ldr	r0, [r4]
   12a64:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   12a68:	mov	r0, r4
   12a6c:	pop	{r4, r5, r6, sl, fp, lr}
   12a70:	b	121f8 <__mempcpy_chk@plt+0x11d0>
   12a74:	push	{r4, r5, r6, sl, fp, lr}
   12a78:	add	fp, sp, #16
   12a7c:	sub	sp, sp, #40	; 0x28
   12a80:	mov	r2, r1
   12a84:	mov	r4, r0
   12a88:	ldr	r1, [r0, #20]
   12a8c:	mov	r0, r2
   12a90:	bl	12860 <__mempcpy_chk@plt+0x1838>
   12a94:	mov	r5, #0
   12a98:	cmp	r0, #0
   12a9c:	beq	12b78 <__mempcpy_chk@plt+0x1b50>
   12aa0:	mov	r6, r0
   12aa4:	ldr	r0, [r4, #8]
   12aa8:	cmp	r6, r0
   12aac:	bne	12ab8 <__mempcpy_chk@plt+0x1a90>
   12ab0:	mov	r5, #1
   12ab4:	b	12b78 <__mempcpy_chk@plt+0x1b50>
   12ab8:	mov	r0, r6
   12abc:	mov	r1, #8
   12ac0:	bl	15848 <__mempcpy_chk@plt+0x4820>
   12ac4:	str	r0, [sp]
   12ac8:	cmp	r0, #0
   12acc:	beq	12b78 <__mempcpy_chk@plt+0x1b50>
   12ad0:	mov	r0, #0
   12ad4:	str	r0, [sp, #16]
   12ad8:	str	r0, [sp, #12]
   12adc:	str	r6, [sp, #8]
   12ae0:	ldr	r0, [sp]
   12ae4:	add	r0, r0, r6, lsl #3
   12ae8:	str	r0, [sp, #4]
   12aec:	add	r6, r4, #20
   12af0:	ldm	r6, {r0, r1, r2, r3, r6}
   12af4:	add	ip, sp, #20
   12af8:	stm	ip, {r0, r1, r2, r3, r6}
   12afc:	mov	r0, sp
   12b00:	mov	r1, r4
   12b04:	mov	r2, #0
   12b08:	bl	12b88 <__mempcpy_chk@plt+0x1b60>
   12b0c:	cmp	r0, #0
   12b10:	beq	12b34 <__mempcpy_chk@plt+0x1b0c>
   12b14:	ldr	r0, [r4]
   12b18:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   12b1c:	ldm	sp, {r0, r1, r2, r3}
   12b20:	stm	r4, {r0, r1, r2, r3}
   12b24:	ldr	r0, [sp, #36]	; 0x24
   12b28:	str	r0, [r4, #36]	; 0x24
   12b2c:	mov	r5, #1
   12b30:	b	12b78 <__mempcpy_chk@plt+0x1b50>
   12b34:	ldr	r0, [sp, #36]	; 0x24
   12b38:	str	r0, [r4, #36]	; 0x24
   12b3c:	mov	r1, sp
   12b40:	mov	r0, r4
   12b44:	mov	r2, #1
   12b48:	bl	12b88 <__mempcpy_chk@plt+0x1b60>
   12b4c:	cmp	r0, #0
   12b50:	beq	12b84 <__mempcpy_chk@plt+0x1b5c>
   12b54:	mov	r1, sp
   12b58:	mov	r5, #0
   12b5c:	mov	r0, r4
   12b60:	mov	r2, #0
   12b64:	bl	12b88 <__mempcpy_chk@plt+0x1b60>
   12b68:	cmp	r0, #0
   12b6c:	beq	12b84 <__mempcpy_chk@plt+0x1b5c>
   12b70:	ldr	r0, [sp]
   12b74:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   12b78:	mov	r0, r5
   12b7c:	sub	sp, fp, #16
   12b80:	pop	{r4, r5, r6, sl, fp, pc}
   12b84:	bl	11004 <abort@plt>
   12b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b8c:	add	fp, sp, #28
   12b90:	sub	sp, sp, #4
   12b94:	mov	r7, r0
   12b98:	ldr	r6, [r1]
   12b9c:	ldr	r0, [r1, #4]
   12ba0:	cmp	r6, r0
   12ba4:	bcs	12cb0 <__mempcpy_chk@plt+0x1c88>
   12ba8:	mov	r9, r2
   12bac:	mov	sl, r1
   12bb0:	b	12be8 <__mempcpy_chk@plt+0x1bc0>
   12bb4:	str	r4, [r5]
   12bb8:	ldr	r0, [r7, #12]
   12bbc:	add	r0, r0, #1
   12bc0:	str	r0, [r7, #12]
   12bc4:	mov	r0, #0
   12bc8:	str	r0, [r6]
   12bcc:	ldr	r0, [sl, #12]
   12bd0:	sub	r0, r0, #1
   12bd4:	str	r0, [sl, #12]
   12bd8:	add	r6, r6, #8
   12bdc:	ldr	r0, [sl, #4]
   12be0:	cmp	r6, r0
   12be4:	bcs	12cb0 <__mempcpy_chk@plt+0x1c88>
   12be8:	ldr	r0, [r6]
   12bec:	cmp	r0, #0
   12bf0:	beq	12bd8 <__mempcpy_chk@plt+0x1bb0>
   12bf4:	ldr	r4, [r6, #4]
   12bf8:	cmp	r4, #0
   12bfc:	bne	12c2c <__mempcpy_chk@plt+0x1c04>
   12c00:	b	12c5c <__mempcpy_chk@plt+0x1c34>
   12c04:	str	r5, [r0]
   12c08:	ldr	r0, [r7, #12]
   12c0c:	add	r0, r0, #1
   12c10:	str	r0, [r7, #12]
   12c14:	mov	r0, r7
   12c18:	mov	r1, r4
   12c1c:	bl	13134 <__mempcpy_chk@plt+0x210c>
   12c20:	cmp	r8, #0
   12c24:	mov	r4, r8
   12c28:	beq	12c5c <__mempcpy_chk@plt+0x1c34>
   12c2c:	ldr	r5, [r4]
   12c30:	mov	r0, r7
   12c34:	mov	r1, r5
   12c38:	bl	12468 <__mempcpy_chk@plt+0x1440>
   12c3c:	ldr	r1, [r0]
   12c40:	ldr	r8, [r4, #4]
   12c44:	cmp	r1, #0
   12c48:	beq	12c04 <__mempcpy_chk@plt+0x1bdc>
   12c4c:	ldr	r1, [r0, #4]
   12c50:	str	r1, [r4, #4]
   12c54:	str	r4, [r0, #4]
   12c58:	b	12c20 <__mempcpy_chk@plt+0x1bf8>
   12c5c:	mov	r0, #0
   12c60:	str	r0, [r6, #4]
   12c64:	cmp	r9, #0
   12c68:	bne	12bd8 <__mempcpy_chk@plt+0x1bb0>
   12c6c:	ldr	r4, [r6]
   12c70:	mov	r0, r7
   12c74:	mov	r1, r4
   12c78:	bl	12468 <__mempcpy_chk@plt+0x1440>
   12c7c:	mov	r5, r0
   12c80:	ldr	r0, [r0]
   12c84:	cmp	r0, #0
   12c88:	beq	12bb4 <__mempcpy_chk@plt+0x1b8c>
   12c8c:	mov	r0, r7
   12c90:	bl	12f20 <__mempcpy_chk@plt+0x1ef8>
   12c94:	cmp	r0, #0
   12c98:	beq	12cbc <__mempcpy_chk@plt+0x1c94>
   12c9c:	str	r4, [r0]
   12ca0:	ldr	r1, [r5, #4]
   12ca4:	str	r1, [r0, #4]
   12ca8:	str	r0, [r5, #4]
   12cac:	b	12bc4 <__mempcpy_chk@plt+0x1b9c>
   12cb0:	mov	r0, #1
   12cb4:	sub	sp, fp, #28
   12cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cbc:	mov	r0, #0
   12cc0:	sub	sp, fp, #28
   12cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cc8:	push	{r4, r5, r6, r7, fp, lr}
   12ccc:	add	fp, sp, #16
   12cd0:	sub	sp, sp, #8
   12cd4:	cmp	r1, #0
   12cd8:	beq	12e38 <__mempcpy_chk@plt+0x1e10>
   12cdc:	mov	r7, r2
   12ce0:	mov	r5, r1
   12ce4:	mov	r4, r0
   12ce8:	add	r2, sp, #4
   12cec:	mov	r6, #0
   12cf0:	mov	r3, #0
   12cf4:	bl	12e40 <__mempcpy_chk@plt+0x1e18>
   12cf8:	cmp	r0, #0
   12cfc:	beq	12d0c <__mempcpy_chk@plt+0x1ce4>
   12d00:	cmp	r7, #0
   12d04:	strne	r0, [r7]
   12d08:	b	12e2c <__mempcpy_chk@plt+0x1e04>
   12d0c:	vldr	s0, [r4, #8]
   12d10:	vldr	s2, [r4, #12]
   12d14:	ldr	r0, [r4, #20]
   12d18:	vldr	s4, [r0, #8]
   12d1c:	vcvt.f32.u32	s0, s0
   12d20:	vcvt.f32.u32	s2, s2
   12d24:	vmul.f32	s0, s4, s0
   12d28:	vcmpe.f32	s0, s2
   12d2c:	vmrs	APSR_nzcv, fpscr
   12d30:	bpl	12dc4 <__mempcpy_chk@plt+0x1d9c>
   12d34:	mov	r0, r4
   12d38:	bl	127b4 <__mempcpy_chk@plt+0x178c>
   12d3c:	vldr	s0, [r4, #8]
   12d40:	vldr	s4, [r4, #12]
   12d44:	ldr	r0, [r4, #20]
   12d48:	vcvt.f32.u32	s2, s0
   12d4c:	vldr	s0, [r0, #8]
   12d50:	vcvt.f32.u32	s4, s4
   12d54:	vmul.f32	s6, s0, s2
   12d58:	vcmpe.f32	s6, s4
   12d5c:	vmrs	APSR_nzcv, fpscr
   12d60:	bpl	12dc4 <__mempcpy_chk@plt+0x1d9c>
   12d64:	vldr	s4, [r0, #12]
   12d68:	vmul.f32	s2, s4, s2
   12d6c:	ldrb	r0, [r0, #16]
   12d70:	vmul.f32	s0, s0, s2
   12d74:	mvn	r6, #0
   12d78:	vldr	s4, [pc, #188]	; 12e3c <__mempcpy_chk@plt+0x1e14>
   12d7c:	cmp	r0, #0
   12d80:	vseleq.f32	s0, s0, s2
   12d84:	vcmpe.f32	s0, s4
   12d88:	vmrs	APSR_nzcv, fpscr
   12d8c:	bge	12e2c <__mempcpy_chk@plt+0x1e04>
   12d90:	vcvt.u32.f32	s0, s0
   12d94:	vmov	r1, s0
   12d98:	mov	r0, r4
   12d9c:	bl	12a74 <__mempcpy_chk@plt+0x1a4c>
   12da0:	cmp	r0, #0
   12da4:	beq	12e2c <__mempcpy_chk@plt+0x1e04>
   12da8:	add	r2, sp, #4
   12dac:	mov	r0, r4
   12db0:	mov	r1, r5
   12db4:	mov	r3, #0
   12db8:	bl	12e40 <__mempcpy_chk@plt+0x1e18>
   12dbc:	cmp	r0, #0
   12dc0:	bne	12e38 <__mempcpy_chk@plt+0x1e10>
   12dc4:	ldr	r6, [sp, #4]
   12dc8:	ldr	r0, [r6]
   12dcc:	cmp	r0, #0
   12dd0:	beq	12e04 <__mempcpy_chk@plt+0x1ddc>
   12dd4:	mov	r0, r4
   12dd8:	bl	12f20 <__mempcpy_chk@plt+0x1ef8>
   12ddc:	cmp	r0, #0
   12de0:	beq	12e28 <__mempcpy_chk@plt+0x1e00>
   12de4:	str	r5, [r0]
   12de8:	ldr	r1, [r6, #4]
   12dec:	str	r1, [r0, #4]
   12df0:	str	r0, [r6, #4]
   12df4:	ldr	r0, [r4, #16]
   12df8:	add	r0, r0, #1
   12dfc:	str	r0, [r4, #16]
   12e00:	b	12e20 <__mempcpy_chk@plt+0x1df8>
   12e04:	str	r5, [r6]
   12e08:	ldr	r0, [r4, #12]
   12e0c:	ldr	r1, [r4, #16]
   12e10:	add	r1, r1, #1
   12e14:	add	r0, r0, #1
   12e18:	str	r0, [r4, #12]
   12e1c:	str	r1, [r4, #16]
   12e20:	mov	r6, #1
   12e24:	b	12e2c <__mempcpy_chk@plt+0x1e04>
   12e28:	mvn	r6, #0
   12e2c:	mov	r0, r6
   12e30:	sub	sp, fp, #16
   12e34:	pop	{r4, r5, r6, r7, fp, pc}
   12e38:	bl	11004 <abort@plt>
   12e3c:	svcmi	0x00800000
   12e40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12e44:	add	fp, sp, #24
   12e48:	mov	r8, r3
   12e4c:	mov	r4, r2
   12e50:	mov	r7, r1
   12e54:	mov	r5, r0
   12e58:	bl	12468 <__mempcpy_chk@plt+0x1440>
   12e5c:	str	r0, [r4]
   12e60:	ldr	r1, [r0]
   12e64:	mov	r4, #0
   12e68:	cmp	r1, #0
   12e6c:	beq	12f18 <__mempcpy_chk@plt+0x1ef0>
   12e70:	mov	r6, r0
   12e74:	cmp	r1, r7
   12e78:	beq	12e90 <__mempcpy_chk@plt+0x1e68>
   12e7c:	ldr	r2, [r5, #28]
   12e80:	mov	r0, r7
   12e84:	blx	r2
   12e88:	cmp	r0, #0
   12e8c:	beq	12eb4 <__mempcpy_chk@plt+0x1e8c>
   12e90:	ldr	r4, [r6]
   12e94:	cmp	r8, #0
   12e98:	beq	12f18 <__mempcpy_chk@plt+0x1ef0>
   12e9c:	ldr	r1, [r6, #4]
   12ea0:	cmp	r1, #0
   12ea4:	beq	12f10 <__mempcpy_chk@plt+0x1ee8>
   12ea8:	ldm	r1, {r0, r2}
   12eac:	stm	r6, {r0, r2}
   12eb0:	b	12f00 <__mempcpy_chk@plt+0x1ed8>
   12eb4:	ldr	r0, [r6, #4]!
   12eb8:	cmp	r0, #0
   12ebc:	beq	12f18 <__mempcpy_chk@plt+0x1ef0>
   12ec0:	ldr	r1, [r0]
   12ec4:	cmp	r1, r7
   12ec8:	beq	12ee8 <__mempcpy_chk@plt+0x1ec0>
   12ecc:	ldr	r2, [r5, #28]
   12ed0:	mov	r0, r7
   12ed4:	blx	r2
   12ed8:	cmp	r0, #0
   12edc:	bne	12ee8 <__mempcpy_chk@plt+0x1ec0>
   12ee0:	ldr	r6, [r6]
   12ee4:	b	12eb4 <__mempcpy_chk@plt+0x1e8c>
   12ee8:	ldr	r1, [r6]
   12eec:	ldr	r4, [r1]
   12ef0:	cmp	r8, #0
   12ef4:	beq	12f18 <__mempcpy_chk@plt+0x1ef0>
   12ef8:	ldr	r0, [r1, #4]
   12efc:	str	r0, [r6]
   12f00:	mov	r0, r5
   12f04:	bl	13134 <__mempcpy_chk@plt+0x210c>
   12f08:	mov	r0, r4
   12f0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f10:	mov	r0, #0
   12f14:	str	r0, [r6]
   12f18:	mov	r0, r4
   12f1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f20:	mov	r1, r0
   12f24:	ldr	r0, [r0, #36]	; 0x24
   12f28:	cmp	r0, #0
   12f2c:	ldrne	r2, [r0, #4]
   12f30:	strne	r2, [r1, #36]	; 0x24
   12f34:	bxne	lr
   12f38:	mov	r0, #8
   12f3c:	b	1589c <__mempcpy_chk@plt+0x4874>
   12f40:	push	{r4, sl, fp, lr}
   12f44:	add	fp, sp, #8
   12f48:	sub	sp, sp, #8
   12f4c:	mov	r4, r1
   12f50:	add	r2, sp, #4
   12f54:	bl	12cc8 <__mempcpy_chk@plt+0x1ca0>
   12f58:	cmn	r0, #1
   12f5c:	beq	12f70 <__mempcpy_chk@plt+0x1f48>
   12f60:	ldr	r1, [sp, #4]
   12f64:	cmp	r0, #0
   12f68:	moveq	r4, r1
   12f6c:	b	12f74 <__mempcpy_chk@plt+0x1f4c>
   12f70:	mov	r4, #0
   12f74:	mov	r0, r4
   12f78:	sub	sp, fp, #8
   12f7c:	pop	{r4, sl, fp, pc}
   12f80:	push	{r4, r5, r6, sl, fp, lr}
   12f84:	add	fp, sp, #16
   12f88:	sub	sp, sp, #8
   12f8c:	mov	r4, r0
   12f90:	add	r2, sp, #4
   12f94:	mov	r3, #1
   12f98:	bl	12e40 <__mempcpy_chk@plt+0x1e18>
   12f9c:	mov	r5, r0
   12fa0:	cmp	r0, #0
   12fa4:	beq	13084 <__mempcpy_chk@plt+0x205c>
   12fa8:	ldr	r0, [r4, #16]
   12fac:	sub	r0, r0, #1
   12fb0:	str	r0, [r4, #16]
   12fb4:	ldr	r0, [sp, #4]
   12fb8:	ldr	r0, [r0]
   12fbc:	cmp	r0, #0
   12fc0:	bne	13084 <__mempcpy_chk@plt+0x205c>
   12fc4:	ldr	r0, [r4, #12]
   12fc8:	sub	r0, r0, #1
   12fcc:	vldr	s0, [r4, #8]
   12fd0:	str	r0, [r4, #12]
   12fd4:	ldr	r1, [r4, #20]
   12fd8:	vldr	s2, [r1]
   12fdc:	vcvt.f32.u32	s0, s0
   12fe0:	vmov	s4, r0
   12fe4:	vcvt.f32.u32	s4, s4
   12fe8:	vmul.f32	s0, s2, s0
   12fec:	vcmpe.f32	s0, s4
   12ff0:	vmrs	APSR_nzcv, fpscr
   12ff4:	ble	13084 <__mempcpy_chk@plt+0x205c>
   12ff8:	mov	r0, r4
   12ffc:	bl	127b4 <__mempcpy_chk@plt+0x178c>
   13000:	vldr	s0, [r4, #8]
   13004:	vldr	s2, [r4, #12]
   13008:	ldr	r0, [r4, #20]
   1300c:	vcvt.f32.u32	s0, s0
   13010:	vldr	s4, [r0]
   13014:	vcvt.f32.u32	s2, s2
   13018:	vmul.f32	s4, s4, s0
   1301c:	vcmpe.f32	s4, s2
   13020:	vmrs	APSR_nzcv, fpscr
   13024:	ble	13084 <__mempcpy_chk@plt+0x205c>
   13028:	vldr	s2, [r0, #4]
   1302c:	ldrb	r1, [r0, #16]
   13030:	vmul.f32	s0, s2, s0
   13034:	cmp	r1, #0
   13038:	bne	13044 <__mempcpy_chk@plt+0x201c>
   1303c:	vldr	s2, [r0, #8]
   13040:	vmul.f32	s0, s0, s2
   13044:	vcvt.u32.f32	s0, s0
   13048:	vmov	r1, s0
   1304c:	mov	r0, r4
   13050:	bl	12a74 <__mempcpy_chk@plt+0x1a4c>
   13054:	cmp	r0, #0
   13058:	bne	13084 <__mempcpy_chk@plt+0x205c>
   1305c:	ldr	r0, [r4, #36]	; 0x24
   13060:	cmp	r0, #0
   13064:	beq	1307c <__mempcpy_chk@plt+0x2054>
   13068:	ldr	r6, [r0, #4]
   1306c:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   13070:	cmp	r6, #0
   13074:	mov	r0, r6
   13078:	bne	13068 <__mempcpy_chk@plt+0x2040>
   1307c:	mov	r0, #0
   13080:	str	r0, [r4, #36]	; 0x24
   13084:	mov	r0, r5
   13088:	sub	sp, fp, #16
   1308c:	pop	{r4, r5, r6, sl, fp, pc}
   13090:	b	12f80 <__mempcpy_chk@plt+0x1f58>
   13094:	push	{r4, r5, fp, lr}
   13098:	add	fp, sp, #8
   1309c:	cmp	r0, #10
   130a0:	movls	r0, #10
   130a4:	orr	r5, r0, #1
   130a8:	mvn	r4, #0
   130ac:	cmn	r5, #1
   130b0:	beq	130d0 <__mempcpy_chk@plt+0x20a8>
   130b4:	mov	r0, r5
   130b8:	bl	130e4 <__mempcpy_chk@plt+0x20bc>
   130bc:	cmp	r0, #0
   130c0:	bne	130d8 <__mempcpy_chk@plt+0x20b0>
   130c4:	add	r5, r5, #2
   130c8:	cmn	r5, #1
   130cc:	bne	130b4 <__mempcpy_chk@plt+0x208c>
   130d0:	mov	r0, r4
   130d4:	pop	{r4, r5, fp, pc}
   130d8:	mov	r4, r5
   130dc:	mov	r0, r4
   130e0:	pop	{r4, r5, fp, pc}
   130e4:	mov	ip, #3
   130e8:	cmp	r0, #10
   130ec:	bcc	13120 <__mempcpy_chk@plt+0x20f8>
   130f0:	mov	ip, #3
   130f4:	mov	r2, #9
   130f8:	mov	r3, #16
   130fc:	udiv	r1, r0, ip
   13100:	mls	r1, r1, ip, r0
   13104:	cmp	r1, #0
   13108:	beq	13120 <__mempcpy_chk@plt+0x20f8>
   1310c:	add	r2, r3, r2
   13110:	add	r3, r3, #8
   13114:	add	ip, ip, #2
   13118:	cmp	r2, r0
   1311c:	bcc	130fc <__mempcpy_chk@plt+0x20d4>
   13120:	udiv	r1, r0, ip
   13124:	mls	r0, r1, ip, r0
   13128:	cmp	r0, #0
   1312c:	movwne	r0, #1
   13130:	bx	lr
   13134:	mov	r2, #0
   13138:	str	r2, [r1]
   1313c:	ldr	r2, [r0, #36]	; 0x24
   13140:	str	r2, [r1, #4]
   13144:	str	r1, [r0, #36]	; 0x24
   13148:	bx	lr
   1314c:	push	{r4, r5, fp, lr}
   13150:	add	fp, sp, #8
   13154:	mov	r4, r1
   13158:	mov	r5, r0
   1315c:	ldr	r0, [r0]
   13160:	bl	15fc0 <__mempcpy_chk@plt+0x4f98>
   13164:	ldrd	r2, [r5, #8]
   13168:	eor	r0, r2, r0
   1316c:	mov	r1, r3
   13170:	mov	r2, r4
   13174:	mov	r3, #0
   13178:	bl	16234 <__mempcpy_chk@plt+0x520c>
   1317c:	mov	r0, r2
   13180:	pop	{r4, r5, fp, pc}
   13184:	push	{r4, r5, fp, lr}
   13188:	add	fp, sp, #8
   1318c:	mov	lr, r1
   13190:	ldr	ip, [lr, #8]!
   13194:	mov	r2, r0
   13198:	ldr	r3, [r2, #8]!
   1319c:	eor	ip, r3, ip
   131a0:	ldr	r3, [lr, #4]
   131a4:	ldr	r4, [r2, #4]
   131a8:	eor	r3, r4, r3
   131ac:	orrs	r3, ip, r3
   131b0:	mov	ip, #0
   131b4:	bne	131e4 <__mempcpy_chk@plt+0x21bc>
   131b8:	ldrd	r4, [lr, #8]
   131bc:	ldrd	r2, [r2, #8]
   131c0:	eor	r3, r3, r5
   131c4:	eor	r2, r2, r4
   131c8:	orrs	r2, r2, r3
   131cc:	bne	131e4 <__mempcpy_chk@plt+0x21bc>
   131d0:	ldr	r1, [r1]
   131d4:	ldr	r0, [r0]
   131d8:	bl	10de8 <strcmp@plt>
   131dc:	clz	r0, r0
   131e0:	lsr	ip, r0, #5
   131e4:	mov	r0, ip
   131e8:	pop	{r4, r5, fp, pc}
   131ec:	push	{r4, sl, fp, lr}
   131f0:	add	fp, sp, #8
   131f4:	mov	r4, r0
   131f8:	ldr	r0, [r0]
   131fc:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   13200:	mov	r0, r4
   13204:	pop	{r4, sl, fp, lr}
   13208:	b	121f8 <__mempcpy_chk@plt+0x11d0>
   1320c:	push	{r4, r5, fp, lr}
   13210:	add	fp, sp, #8
   13214:	cmp	r0, #0
   13218:	beq	132ac <__mempcpy_chk@plt+0x2284>
   1321c:	mov	r4, r0
   13220:	mov	r1, #47	; 0x2f
   13224:	bl	10fc8 <strrchr@plt>
   13228:	cmp	r0, #0
   1322c:	mov	r5, r4
   13230:	addne	r5, r0, #1
   13234:	sub	r0, r5, r4
   13238:	cmp	r0, #7
   1323c:	blt	13290 <__mempcpy_chk@plt+0x2268>
   13240:	sub	r0, r5, #7
   13244:	movw	r1, #27860	; 0x6cd4
   13248:	movt	r1, #1
   1324c:	mov	r2, #7
   13250:	bl	10ff8 <strncmp@plt>
   13254:	cmp	r0, #0
   13258:	bne	13290 <__mempcpy_chk@plt+0x2268>
   1325c:	movw	r1, #27868	; 0x6cdc
   13260:	movt	r1, #1
   13264:	mov	r0, r5
   13268:	mov	r2, #3
   1326c:	bl	10ff8 <strncmp@plt>
   13270:	cmp	r0, #0
   13274:	beq	13280 <__mempcpy_chk@plt+0x2258>
   13278:	mov	r4, r5
   1327c:	b	13290 <__mempcpy_chk@plt+0x2268>
   13280:	add	r4, r5, #3
   13284:	movw	r0, #33072	; 0x8130
   13288:	movt	r0, #2
   1328c:	str	r4, [r0]
   13290:	movw	r0, #33076	; 0x8134
   13294:	movt	r0, #2
   13298:	str	r4, [r0]
   1329c:	movw	r0, #33108	; 0x8154
   132a0:	movt	r0, #2
   132a4:	str	r4, [r0]
   132a8:	pop	{r4, r5, fp, pc}
   132ac:	movw	r0, #33088	; 0x8140
   132b0:	movt	r0, #2
   132b4:	ldr	r3, [r0]
   132b8:	movw	r0, #27804	; 0x6c9c
   132bc:	movt	r0, #1
   132c0:	mov	r1, #55	; 0x37
   132c4:	mov	r2, #1
   132c8:	bl	10e90 <fwrite@plt>
   132cc:	bl	11004 <abort@plt>
   132d0:	push	{r4, r5, r6, sl, fp, lr}
   132d4:	add	fp, sp, #16
   132d8:	mov	r4, r0
   132dc:	movw	r0, #33112	; 0x8158
   132e0:	movt	r0, #2
   132e4:	cmp	r4, #0
   132e8:	moveq	r4, r0
   132ec:	bl	10f5c <__errno_location@plt>
   132f0:	mov	r5, r0
   132f4:	ldr	r6, [r0]
   132f8:	mov	r0, r4
   132fc:	mov	r1, #48	; 0x30
   13300:	bl	15764 <__mempcpy_chk@plt+0x473c>
   13304:	str	r6, [r5]
   13308:	pop	{r4, r5, r6, sl, fp, pc}
   1330c:	movw	r1, #33112	; 0x8158
   13310:	movt	r1, #2
   13314:	cmp	r0, #0
   13318:	movne	r1, r0
   1331c:	ldr	r0, [r1]
   13320:	bx	lr
   13324:	movw	r2, #33112	; 0x8158
   13328:	movt	r2, #2
   1332c:	cmp	r0, #0
   13330:	movne	r2, r0
   13334:	str	r1, [r2]
   13338:	bx	lr
   1333c:	movw	r3, #33112	; 0x8158
   13340:	movt	r3, #2
   13344:	cmp	r0, #0
   13348:	movne	r3, r0
   1334c:	ubfx	r0, r1, #5, #3
   13350:	add	ip, r3, r0, lsl #2
   13354:	ldr	r3, [ip, #8]
   13358:	and	r1, r1, #31
   1335c:	mov	r0, #1
   13360:	and	r0, r0, r3, lsr r1
   13364:	and	r2, r2, #1
   13368:	eor	r2, r0, r2
   1336c:	eor	r1, r3, r2, lsl r1
   13370:	str	r1, [ip, #8]
   13374:	bx	lr
   13378:	movw	r2, #33112	; 0x8158
   1337c:	movt	r2, #2
   13380:	cmp	r0, #0
   13384:	movne	r2, r0
   13388:	ldr	r0, [r2, #4]
   1338c:	str	r1, [r2, #4]
   13390:	bx	lr
   13394:	push	{fp, lr}
   13398:	mov	fp, sp
   1339c:	movw	r3, #33112	; 0x8158
   133a0:	movt	r3, #2
   133a4:	cmp	r0, #0
   133a8:	movne	r3, r0
   133ac:	mov	r0, #10
   133b0:	str	r0, [r3]
   133b4:	cmp	r1, #0
   133b8:	cmpne	r2, #0
   133bc:	bne	133c4 <__mempcpy_chk@plt+0x239c>
   133c0:	bl	11004 <abort@plt>
   133c4:	str	r1, [r3, #40]	; 0x28
   133c8:	str	r2, [r3, #44]	; 0x2c
   133cc:	pop	{fp, pc}
   133d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133d4:	add	fp, sp, #28
   133d8:	sub	sp, sp, #20
   133dc:	mov	r8, r3
   133e0:	mov	r9, r2
   133e4:	mov	sl, r1
   133e8:	mov	r7, r0
   133ec:	ldr	r0, [fp, #8]
   133f0:	movw	r5, #33112	; 0x8158
   133f4:	movt	r5, #2
   133f8:	cmp	r0, #0
   133fc:	movne	r5, r0
   13400:	bl	10f5c <__errno_location@plt>
   13404:	mov	r4, r0
   13408:	ldm	r5, {r0, r1}
   1340c:	ldr	r2, [r5, #40]	; 0x28
   13410:	ldr	r3, [r5, #44]	; 0x2c
   13414:	ldr	r6, [r4]
   13418:	add	r5, r5, #8
   1341c:	stm	sp, {r0, r1, r5}
   13420:	str	r2, [sp, #12]
   13424:	str	r3, [sp, #16]
   13428:	mov	r0, r7
   1342c:	mov	r1, sl
   13430:	mov	r2, r9
   13434:	mov	r3, r8
   13438:	bl	13448 <__mempcpy_chk@plt+0x2420>
   1343c:	str	r6, [r4]
   13440:	sub	sp, fp, #28
   13444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1344c:	add	fp, sp, #28
   13450:	sub	sp, sp, #156	; 0x9c
   13454:	mov	r9, r3
   13458:	mov	r7, r1
   1345c:	mov	r6, r0
   13460:	str	r2, [fp, #-80]	; 0xffffffb0
   13464:	add	r0, r2, #1
   13468:	str	r0, [sp, #76]	; 0x4c
   1346c:	ldr	r0, [fp, #12]
   13470:	and	r1, r0, #1
   13474:	str	r1, [sp, #40]	; 0x28
   13478:	and	r1, r0, #4
   1347c:	str	r1, [sp, #36]	; 0x24
   13480:	ubfx	r4, r0, #1, #1
   13484:	bl	10ea8 <__ctype_get_mb_cur_max@plt>
   13488:	str	r0, [sp, #44]	; 0x2c
   1348c:	ldr	r0, [fp, #24]
   13490:	str	r0, [sp, #88]	; 0x58
   13494:	ldr	r0, [fp, #20]
   13498:	str	r0, [sp, #80]	; 0x50
   1349c:	ldr	r1, [fp, #8]
   134a0:	mov	r0, #0
   134a4:	str	r0, [sp, #84]	; 0x54
   134a8:	mov	r0, #0
   134ac:	str	r0, [fp, #-84]	; 0xffffffac
   134b0:	mov	r0, #0
   134b4:	str	r0, [fp, #-72]	; 0xffffffb8
   134b8:	mov	r0, #0
   134bc:	mov	r2, #0
   134c0:	str	r2, [fp, #-56]	; 0xffffffc8
   134c4:	mov	r2, #0
   134c8:	str	r2, [sp, #64]	; 0x40
   134cc:	mov	r2, #1
   134d0:	str	r2, [fp, #-48]	; 0xffffffd0
   134d4:	cmp	r1, #10
   134d8:	bhi	14404 <__mempcpy_chk@plt+0x33dc>
   134dc:	mov	sl, r7
   134e0:	mov	r7, r1
   134e4:	add	r1, pc, #24
   134e8:	mov	r8, #0
   134ec:	mov	r2, #1
   134f0:	mov	r3, #0
   134f4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   134f8:	mov	lr, r9
   134fc:	mov	r5, r6
   13500:	ldr	pc, [r1, r7, lsl #2]
   13504:	ldrdeq	r3, [r1], -r8
   13508:	andeq	r3, r1, r8, lsl r6
   1350c:	andeq	r3, r1, r8, ror #11
   13510:	ldrdeq	r3, [r1], -r0
   13514:	andeq	r3, r1, ip, lsl #12
   13518:	andeq	r3, r1, ip, ror #12
   1351c:	strdeq	r3, [r1], -r8
   13520:	andeq	r3, r1, r8, asr #13
   13524:	andeq	r3, r1, r0, lsr r5
   13528:	andeq	r3, r1, r0, lsr r5
   1352c:	andeq	r3, r1, ip, asr r5
   13530:	movw	r0, #27952	; 0x6d30
   13534:	movt	r0, #1
   13538:	mov	r1, r7
   1353c:	bl	14a0c <__mempcpy_chk@plt+0x39e4>
   13540:	str	r0, [sp, #80]	; 0x50
   13544:	movw	r0, #27954	; 0x6d32
   13548:	movt	r0, #1
   1354c:	mov	r1, r7
   13550:	bl	14a0c <__mempcpy_chk@plt+0x39e4>
   13554:	mov	r5, r6
   13558:	str	r0, [sp, #88]	; 0x58
   1355c:	mov	r8, #0
   13560:	tst	r4, #1
   13564:	str	r7, [fp, #-64]	; 0xffffffc0
   13568:	bne	135a0 <__mempcpy_chk@plt+0x2578>
   1356c:	ldr	r0, [sp, #80]	; 0x50
   13570:	ldrb	r0, [r0]
   13574:	cmp	r0, #0
   13578:	beq	135a0 <__mempcpy_chk@plt+0x2578>
   1357c:	ldr	r1, [sp, #80]	; 0x50
   13580:	add	r1, r1, #1
   13584:	mov	r8, #0
   13588:	cmp	r8, sl
   1358c:	strbcc	r0, [r5, r8]
   13590:	ldrb	r0, [r1, r8]
   13594:	add	r8, r8, #1
   13598:	cmp	r0, #0
   1359c:	bne	13588 <__mempcpy_chk@plt+0x2560>
   135a0:	ldr	r7, [sp, #88]	; 0x58
   135a4:	mov	r0, r7
   135a8:	bl	10f50 <strlen@plt>
   135ac:	mov	r5, r6
   135b0:	str	r0, [fp, #-72]	; 0xffffffb8
   135b4:	str	r7, [fp, #-84]	; 0xffffffac
   135b8:	mov	r2, #1
   135bc:	mov	r3, r4
   135c0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   135c4:	mov	lr, r9
   135c8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   135cc:	b	136c8 <__mempcpy_chk@plt+0x26a0>
   135d0:	mov	r0, #1
   135d4:	b	13618 <__mempcpy_chk@plt+0x25f0>
   135d8:	mov	r7, #0
   135dc:	mov	r8, #0
   135e0:	mov	r2, r0
   135e4:	b	136c4 <__mempcpy_chk@plt+0x269c>
   135e8:	tst	r4, #1
   135ec:	bne	13618 <__mempcpy_chk@plt+0x25f0>
   135f0:	mov	r2, r0
   135f4:	b	13640 <__mempcpy_chk@plt+0x2618>
   135f8:	mov	r0, #1
   135fc:	str	r0, [fp, #-72]	; 0xffffffb8
   13600:	mov	r8, #0
   13604:	mov	r7, #5
   13608:	b	13684 <__mempcpy_chk@plt+0x265c>
   1360c:	mov	r2, #1
   13610:	tst	r4, #1
   13614:	beq	13640 <__mempcpy_chk@plt+0x2618>
   13618:	mov	r1, #1
   1361c:	str	r1, [fp, #-72]	; 0xffffffb8
   13620:	mov	r8, #0
   13624:	mov	r7, #2
   13628:	movw	r1, #27954	; 0x6d32
   1362c:	movt	r1, #1
   13630:	str	r1, [fp, #-84]	; 0xffffffac
   13634:	mov	r2, r0
   13638:	mov	r3, #1
   1363c:	b	136c8 <__mempcpy_chk@plt+0x26a0>
   13640:	mov	r8, #1
   13644:	mov	r7, #2
   13648:	cmp	sl, #0
   1364c:	movne	r0, #39	; 0x27
   13650:	strbne	r0, [r5]
   13654:	movw	r0, #27954	; 0x6d32
   13658:	movt	r0, #1
   1365c:	str	r0, [fp, #-84]	; 0xffffffac
   13660:	mov	r0, #1
   13664:	str	r0, [fp, #-72]	; 0xffffffb8
   13668:	b	136c4 <__mempcpy_chk@plt+0x269c>
   1366c:	mov	r7, #5
   13670:	tst	r4, #1
   13674:	beq	1369c <__mempcpy_chk@plt+0x2674>
   13678:	mov	r0, #1
   1367c:	str	r0, [fp, #-72]	; 0xffffffb8
   13680:	mov	r8, #0
   13684:	movw	r0, #27950	; 0x6d2e
   13688:	movt	r0, #1
   1368c:	str	r0, [fp, #-84]	; 0xffffffac
   13690:	mov	r2, #1
   13694:	mov	r3, #1
   13698:	b	136c8 <__mempcpy_chk@plt+0x26a0>
   1369c:	cmp	sl, #0
   136a0:	movne	r0, #34	; 0x22
   136a4:	strbne	r0, [r5]
   136a8:	mov	r8, #1
   136ac:	movw	r0, #27950	; 0x6d2e
   136b0:	movt	r0, #1
   136b4:	str	r0, [fp, #-84]	; 0xffffffac
   136b8:	mov	r0, #1
   136bc:	str	r0, [fp, #-72]	; 0xffffffb8
   136c0:	mov	r2, #1
   136c4:	mov	r3, #0
   136c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   136cc:	cmp	r0, #0
   136d0:	movwne	r0, #1
   136d4:	and	r1, r0, r3
   136d8:	and	r1, r2, r1
   136dc:	str	r1, [sp, #56]	; 0x38
   136e0:	sub	r1, r7, #2
   136e4:	clz	r1, r1
   136e8:	lsr	r1, r1, #5
   136ec:	and	r1, r1, r3
   136f0:	str	r1, [sp, #68]	; 0x44
   136f4:	str	r7, [fp, #-64]	; 0xffffffc0
   136f8:	subs	r1, r7, #2
   136fc:	movwne	r1, #1
   13700:	eor	r4, r3, #1
   13704:	str	r4, [fp, #-88]	; 0xffffffa8
   13708:	orr	r4, r1, r4
   1370c:	str	r4, [sp, #72]	; 0x48
   13710:	and	r1, r1, r2
   13714:	and	r0, r0, r1
   13718:	str	r0, [fp, #-60]	; 0xffffffc4
   1371c:	str	r3, [fp, #-76]	; 0xffffffb4
   13720:	orr	r0, r1, r3
   13724:	eor	r0, r0, #1
   13728:	ldr	r1, [fp, #16]
   1372c:	clz	r1, r1
   13730:	lsr	r1, r1, #5
   13734:	orr	r0, r1, r0
   13738:	str	r0, [fp, #-68]	; 0xffffffbc
   1373c:	str	r2, [sp, #92]	; 0x5c
   13740:	eor	r0, r2, #1
   13744:	str	r0, [sp, #60]	; 0x3c
   13748:	mov	r7, #0
   1374c:	cmn	lr, #1
   13750:	beq	13760 <__mempcpy_chk@plt+0x2738>
   13754:	cmp	r7, lr
   13758:	bne	1376c <__mempcpy_chk@plt+0x2744>
   1375c:	b	14278 <__mempcpy_chk@plt+0x3250>
   13760:	ldrb	r0, [ip, r7]
   13764:	cmp	r0, #0
   13768:	beq	14278 <__mempcpy_chk@plt+0x3250>
   1376c:	mov	r9, #0
   13770:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13774:	cmp	r0, #0
   13778:	beq	137ac <__mempcpy_chk@plt+0x2784>
   1377c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13780:	add	r4, r7, r0
   13784:	cmp	r0, #2
   13788:	bcc	137a4 <__mempcpy_chk@plt+0x277c>
   1378c:	cmn	lr, #1
   13790:	bne	137a4 <__mempcpy_chk@plt+0x277c>
   13794:	mov	r0, ip
   13798:	bl	10f50 <strlen@plt>
   1379c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   137a0:	mov	lr, r0
   137a4:	cmp	r4, lr
   137a8:	bls	137b8 <__mempcpy_chk@plt+0x2790>
   137ac:	mov	r0, #0
   137b0:	str	r0, [fp, #-52]	; 0xffffffcc
   137b4:	b	137fc <__mempcpy_chk@plt+0x27d4>
   137b8:	mov	r4, lr
   137bc:	add	r0, ip, r7
   137c0:	ldr	r1, [fp, #-84]	; 0xffffffac
   137c4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   137c8:	bl	10f44 <bcmp@plt>
   137cc:	cmp	r0, #0
   137d0:	mov	r1, r0
   137d4:	movwne	r1, #1
   137d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   137dc:	orr	r1, r1, r2
   137e0:	tst	r1, #1
   137e4:	beq	1434c <__mempcpy_chk@plt+0x3324>
   137e8:	clz	r0, r0
   137ec:	lsr	r0, r0, #5
   137f0:	str	r0, [fp, #-52]	; 0xffffffcc
   137f4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   137f8:	mov	lr, r4
   137fc:	ldrb	r4, [ip, r7]
   13800:	cmp	r4, #126	; 0x7e
   13804:	bhi	13d34 <__mempcpy_chk@plt+0x2d0c>
   13808:	mov	r6, #1
   1380c:	mov	r2, #110	; 0x6e
   13810:	mov	r0, #97	; 0x61
   13814:	add	r3, pc, #4
   13818:	mov	r1, #0
   1381c:	ldr	pc, [r3, r4, lsl #2]
   13820:	muleq	r1, r4, fp
   13824:	andeq	r3, r1, r4, lsr sp
   13828:	andeq	r3, r1, r4, lsr sp
   1382c:	andeq	r3, r1, r4, lsr sp
   13830:	andeq	r3, r1, r4, lsr sp
   13834:	andeq	r3, r1, r4, lsr sp
   13838:	andeq	r3, r1, r4, lsr sp
   1383c:	andeq	r3, r1, r8, lsl #28
   13840:	andeq	r3, r1, r4, ror fp
   13844:	andeq	r3, r1, ip, ror #22
   13848:	andeq	r3, r1, r0, lsl #23
   1384c:	muleq	r1, ip, ip
   13850:	andeq	r3, r1, r4, ror #22
   13854:	andeq	r3, r1, ip, ror fp
   13858:	andeq	r3, r1, r4, lsr sp
   1385c:	andeq	r3, r1, r4, lsr sp
   13860:	andeq	r3, r1, r4, lsr sp
   13864:	andeq	r3, r1, r4, lsr sp
   13868:	andeq	r3, r1, r4, lsr sp
   1386c:	andeq	r3, r1, r4, lsr sp
   13870:	andeq	r3, r1, r4, lsr sp
   13874:	andeq	r3, r1, r4, lsr sp
   13878:	andeq	r3, r1, r4, lsr sp
   1387c:	andeq	r3, r1, r4, lsr sp
   13880:	andeq	r3, r1, r4, lsr sp
   13884:	andeq	r3, r1, r4, lsr sp
   13888:	andeq	r3, r1, r4, lsr sp
   1388c:	andeq	r3, r1, r4, lsr sp
   13890:	andeq	r3, r1, r4, lsr sp
   13894:	andeq	r3, r1, r4, lsr sp
   13898:	andeq	r3, r1, r4, lsr sp
   1389c:	andeq	r3, r1, r4, lsr sp
   138a0:	andeq	r3, r1, r8, lsl fp
   138a4:	andeq	r3, r1, ip, lsl fp
   138a8:	andeq	r3, r1, ip, lsl fp
   138ac:	andeq	r3, r1, r4, lsl #22
   138b0:	andeq	r3, r1, ip, lsl fp
   138b4:	andeq	r3, r1, ip, lsl sl
   138b8:	andeq	r3, r1, ip, lsl fp
   138bc:	andeq	r3, r1, r4, lsr #25
   138c0:	andeq	r3, r1, ip, lsl fp
   138c4:	andeq	r3, r1, ip, lsl fp
   138c8:	andeq	r3, r1, ip, lsl fp
   138cc:	andeq	r3, r1, ip, lsl sl
   138d0:	andeq	r3, r1, ip, lsl sl
   138d4:	andeq	r3, r1, ip, lsl sl
   138d8:	andeq	r3, r1, ip, lsl sl
   138dc:	andeq	r3, r1, ip, lsl sl
   138e0:	andeq	r3, r1, ip, lsl sl
   138e4:	andeq	r3, r1, ip, lsl sl
   138e8:	andeq	r3, r1, ip, lsl sl
   138ec:	andeq	r3, r1, ip, lsl sl
   138f0:	andeq	r3, r1, ip, lsl sl
   138f4:	andeq	r3, r1, ip, lsl sl
   138f8:	andeq	r3, r1, ip, lsl sl
   138fc:	andeq	r3, r1, ip, lsl sl
   13900:	andeq	r3, r1, ip, lsl sl
   13904:	andeq	r3, r1, ip, lsl sl
   13908:	andeq	r3, r1, ip, lsl sl
   1390c:	andeq	r3, r1, ip, lsl fp
   13910:	andeq	r3, r1, ip, lsl fp
   13914:	andeq	r3, r1, ip, lsl fp
   13918:	andeq	r3, r1, ip, lsl fp
   1391c:	andeq	r3, r1, ip, ror #24
   13920:	andeq	r3, r1, r4, lsr sp
   13924:	andeq	r3, r1, ip, lsl sl
   13928:	andeq	r3, r1, ip, lsl sl
   1392c:	andeq	r3, r1, ip, lsl sl
   13930:	andeq	r3, r1, ip, lsl sl
   13934:	andeq	r3, r1, ip, lsl sl
   13938:	andeq	r3, r1, ip, lsl sl
   1393c:	andeq	r3, r1, ip, lsl sl
   13940:	andeq	r3, r1, ip, lsl sl
   13944:	andeq	r3, r1, ip, lsl sl
   13948:	andeq	r3, r1, ip, lsl sl
   1394c:	andeq	r3, r1, ip, lsl sl
   13950:	andeq	r3, r1, ip, lsl sl
   13954:	andeq	r3, r1, ip, lsl sl
   13958:	andeq	r3, r1, ip, lsl sl
   1395c:	andeq	r3, r1, ip, lsl sl
   13960:	andeq	r3, r1, ip, lsl sl
   13964:	andeq	r3, r1, ip, lsl sl
   13968:	andeq	r3, r1, ip, lsl sl
   1396c:	andeq	r3, r1, ip, lsl sl
   13970:	andeq	r3, r1, ip, lsl sl
   13974:	andeq	r3, r1, ip, lsl sl
   13978:	andeq	r3, r1, ip, lsl sl
   1397c:	andeq	r3, r1, ip, lsl sl
   13980:	andeq	r3, r1, ip, lsl sl
   13984:	andeq	r3, r1, ip, lsl sl
   13988:	andeq	r3, r1, ip, lsl sl
   1398c:	andeq	r3, r1, ip, lsl fp
   13990:	andeq	r3, r1, r4, asr #22
   13994:	andeq	r3, r1, ip, lsl sl
   13998:	andeq	r3, r1, ip, lsl fp
   1399c:	andeq	r3, r1, ip, lsl sl
   139a0:	andeq	r3, r1, ip, lsl fp
   139a4:	andeq	r3, r1, ip, lsl sl
   139a8:	andeq	r3, r1, ip, lsl sl
   139ac:	andeq	r3, r1, ip, lsl sl
   139b0:	andeq	r3, r1, ip, lsl sl
   139b4:	andeq	r3, r1, ip, lsl sl
   139b8:	andeq	r3, r1, ip, lsl sl
   139bc:	andeq	r3, r1, ip, lsl sl
   139c0:	andeq	r3, r1, ip, lsl sl
   139c4:	andeq	r3, r1, ip, lsl sl
   139c8:	andeq	r3, r1, ip, lsl sl
   139cc:	andeq	r3, r1, ip, lsl sl
   139d0:	andeq	r3, r1, ip, lsl sl
   139d4:	andeq	r3, r1, ip, lsl sl
   139d8:	andeq	r3, r1, ip, lsl sl
   139dc:	andeq	r3, r1, ip, lsl sl
   139e0:	andeq	r3, r1, ip, lsl sl
   139e4:	andeq	r3, r1, ip, lsl sl
   139e8:	andeq	r3, r1, ip, lsl sl
   139ec:	andeq	r3, r1, ip, lsl sl
   139f0:	andeq	r3, r1, ip, lsl sl
   139f4:	andeq	r3, r1, ip, lsl sl
   139f8:	andeq	r3, r1, ip, lsl sl
   139fc:	andeq	r3, r1, ip, lsl sl
   13a00:	andeq	r3, r1, ip, lsl sl
   13a04:	andeq	r3, r1, ip, lsl sl
   13a08:	andeq	r3, r1, ip, lsl sl
   13a0c:	ldrdeq	r3, [r1], -r8
   13a10:	andeq	r3, r1, ip, lsl fp
   13a14:	ldrdeq	r3, [r1], -r8
   13a18:	andeq	r3, r1, r4, lsl #22
   13a1c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13a20:	tst	r0, #1
   13a24:	bne	13a50 <__mempcpy_chk@plt+0x2a28>
   13a28:	ubfx	r0, r4, #5, #3
   13a2c:	ldr	r1, [fp, #16]
   13a30:	ldr	r0, [r1, r0, lsl #2]
   13a34:	and	r1, r4, #31
   13a38:	mov	r2, #1
   13a3c:	tst	r0, r2, lsl r1
   13a40:	beq	13a50 <__mempcpy_chk@plt+0x2a28>
   13a44:	mov	r0, r4
   13a48:	mov	r1, r6
   13a4c:	b	13a64 <__mempcpy_chk@plt+0x2a3c>
   13a50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13a54:	cmp	r0, #0
   13a58:	mov	r0, r4
   13a5c:	mov	r1, r6
   13a60:	beq	13d9c <__mempcpy_chk@plt+0x2d74>
   13a64:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13a68:	tst	r2, #1
   13a6c:	bne	14360 <__mempcpy_chk@plt+0x3338>
   13a70:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13a74:	subs	r2, r2, #2
   13a78:	movwne	r2, #1
   13a7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13a80:	orr	r2, r2, r3
   13a84:	tst	r2, #1
   13a88:	bne	13ac4 <__mempcpy_chk@plt+0x2a9c>
   13a8c:	cmp	r8, sl
   13a90:	movcc	r2, #39	; 0x27
   13a94:	strbcc	r2, [r5, r8]
   13a98:	add	r2, r8, #1
   13a9c:	cmp	r2, sl
   13aa0:	movcc	r3, #36	; 0x24
   13aa4:	strbcc	r3, [r5, r2]
   13aa8:	add	r2, r8, #2
   13aac:	cmp	r2, sl
   13ab0:	movcc	r3, #39	; 0x27
   13ab4:	strbcc	r3, [r5, r2]
   13ab8:	add	r8, r8, #3
   13abc:	mov	r2, #1
   13ac0:	str	r2, [fp, #-56]	; 0xffffffc8
   13ac4:	cmp	r8, sl
   13ac8:	movcc	r2, #92	; 0x5c
   13acc:	strbcc	r2, [r5, r8]
   13ad0:	add	r8, r8, #1
   13ad4:	b	13de0 <__mempcpy_chk@plt+0x2db8>
   13ad8:	cmp	lr, #1
   13adc:	beq	13b04 <__mempcpy_chk@plt+0x2adc>
   13ae0:	mov	r6, #0
   13ae4:	cmn	lr, #1
   13ae8:	bne	13b10 <__mempcpy_chk@plt+0x2ae8>
   13aec:	ldrb	r0, [ip, #1]
   13af0:	cmp	r0, #0
   13af4:	beq	13b04 <__mempcpy_chk@plt+0x2adc>
   13af8:	mvn	lr, #0
   13afc:	mov	r9, #0
   13b00:	b	13a1c <__mempcpy_chk@plt+0x29f4>
   13b04:	mov	r6, #0
   13b08:	cmp	r7, #0
   13b0c:	beq	13b18 <__mempcpy_chk@plt+0x2af0>
   13b10:	mov	r9, #0
   13b14:	b	13a1c <__mempcpy_chk@plt+0x29f4>
   13b18:	mov	r1, #1
   13b1c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13b20:	cmp	r0, #2
   13b24:	bne	13b3c <__mempcpy_chk@plt+0x2b14>
   13b28:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13b2c:	tst	r0, #1
   13b30:	mov	r6, r1
   13b34:	beq	13a1c <__mempcpy_chk@plt+0x29f4>
   13b38:	b	14360 <__mempcpy_chk@plt+0x3338>
   13b3c:	mov	r6, r1
   13b40:	b	13a1c <__mempcpy_chk@plt+0x29f4>
   13b44:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13b48:	cmp	r0, #2
   13b4c:	bne	13d80 <__mempcpy_chk@plt+0x2d58>
   13b50:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13b54:	tst	r0, #1
   13b58:	bne	14360 <__mempcpy_chk@plt+0x3338>
   13b5c:	mov	r9, #0
   13b60:	b	13d94 <__mempcpy_chk@plt+0x2d6c>
   13b64:	mov	r0, #102	; 0x66
   13b68:	b	13e08 <__mempcpy_chk@plt+0x2de0>
   13b6c:	mov	r2, #116	; 0x74
   13b70:	b	13b80 <__mempcpy_chk@plt+0x2b58>
   13b74:	mov	r0, #98	; 0x62
   13b78:	b	13e08 <__mempcpy_chk@plt+0x2de0>
   13b7c:	mov	r2, #114	; 0x72
   13b80:	ldr	r0, [sp, #72]	; 0x48
   13b84:	tst	r0, #1
   13b88:	mov	r0, r2
   13b8c:	bne	13e08 <__mempcpy_chk@plt+0x2de0>
   13b90:	b	14360 <__mempcpy_chk@plt+0x3338>
   13b94:	ldr	r0, [sp, #92]	; 0x5c
   13b98:	tst	r0, #1
   13b9c:	beq	13e24 <__mempcpy_chk@plt+0x2dfc>
   13ba0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13ba4:	tst	r0, #1
   13ba8:	bne	14360 <__mempcpy_chk@plt+0x3338>
   13bac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13bb0:	subs	r0, r0, #2
   13bb4:	movwne	r0, #1
   13bb8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13bbc:	orr	r0, r0, r1
   13bc0:	tst	r0, #1
   13bc4:	bne	13c00 <__mempcpy_chk@plt+0x2bd8>
   13bc8:	cmp	r8, sl
   13bcc:	movcc	r0, #39	; 0x27
   13bd0:	strbcc	r0, [r5, r8]
   13bd4:	add	r0, r8, #1
   13bd8:	cmp	r0, sl
   13bdc:	movcc	r1, #36	; 0x24
   13be0:	strbcc	r1, [r5, r0]
   13be4:	add	r0, r8, #2
   13be8:	cmp	r0, sl
   13bec:	movcc	r1, #39	; 0x27
   13bf0:	strbcc	r1, [r5, r0]
   13bf4:	add	r8, r8, #3
   13bf8:	mov	r0, #1
   13bfc:	str	r0, [fp, #-56]	; 0xffffffc8
   13c00:	cmp	r8, sl
   13c04:	movcc	r0, #92	; 0x5c
   13c08:	strbcc	r0, [r5, r8]
   13c0c:	add	r0, r8, #1
   13c10:	mov	r6, #0
   13c14:	mov	r9, #1
   13c18:	mov	r4, #48	; 0x30
   13c1c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13c20:	cmp	r1, #2
   13c24:	beq	13fe8 <__mempcpy_chk@plt+0x2fc0>
   13c28:	add	r1, r7, #1
   13c2c:	cmp	r1, lr
   13c30:	bcs	13fe8 <__mempcpy_chk@plt+0x2fc0>
   13c34:	ldrb	r1, [ip, r1]
   13c38:	sub	r1, r1, #48	; 0x30
   13c3c:	uxtb	r1, r1
   13c40:	cmp	r1, #9
   13c44:	bhi	13fe8 <__mempcpy_chk@plt+0x2fc0>
   13c48:	cmp	r0, sl
   13c4c:	movcc	r1, #48	; 0x30
   13c50:	strbcc	r1, [r5, r0]
   13c54:	add	r0, r8, #2
   13c58:	cmp	r0, sl
   13c5c:	movcc	r1, #48	; 0x30
   13c60:	strbcc	r1, [r5, r0]
   13c64:	add	r8, r8, #3
   13c68:	b	13a1c <__mempcpy_chk@plt+0x29f4>
   13c6c:	mov	r9, #0
   13c70:	mov	r4, #63	; 0x3f
   13c74:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13c78:	cmp	r0, #5
   13c7c:	beq	13ff0 <__mempcpy_chk@plt+0x2fc8>
   13c80:	cmp	r0, #2
   13c84:	bne	14098 <__mempcpy_chk@plt+0x3070>
   13c88:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13c8c:	tst	r0, #1
   13c90:	mov	r6, #0
   13c94:	beq	13a1c <__mempcpy_chk@plt+0x29f4>
   13c98:	b	14360 <__mempcpy_chk@plt+0x3338>
   13c9c:	mov	r0, #118	; 0x76
   13ca0:	b	13e08 <__mempcpy_chk@plt+0x2de0>
   13ca4:	mov	r4, #39	; 0x27
   13ca8:	mov	r0, #1
   13cac:	str	r0, [sp, #64]	; 0x40
   13cb0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13cb4:	cmp	r0, #2
   13cb8:	bne	13e40 <__mempcpy_chk@plt+0x2e18>
   13cbc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13cc0:	tst	r0, #1
   13cc4:	bne	14360 <__mempcpy_chk@plt+0x3338>
   13cc8:	ldr	r2, [sp, #84]	; 0x54
   13ccc:	cmp	r2, #0
   13cd0:	mov	r0, r2
   13cd4:	movwne	r0, #1
   13cd8:	clz	r1, sl
   13cdc:	lsr	r1, r1, #5
   13ce0:	orrs	r0, r0, r1
   13ce4:	moveq	r2, sl
   13ce8:	str	r2, [sp, #84]	; 0x54
   13cec:	moveq	sl, r0
   13cf0:	cmp	r8, sl
   13cf4:	movcc	r0, #39	; 0x27
   13cf8:	strbcc	r0, [r5, r8]
   13cfc:	add	r0, r8, #1
   13d00:	cmp	r0, sl
   13d04:	movcc	r1, #92	; 0x5c
   13d08:	strbcc	r1, [r5, r0]
   13d0c:	add	r0, r8, #2
   13d10:	cmp	r0, sl
   13d14:	movcc	r1, #39	; 0x27
   13d18:	strbcc	r1, [r5, r0]
   13d1c:	add	r8, r8, #3
   13d20:	mov	r0, #0
   13d24:	str	r0, [fp, #-56]	; 0xffffffc8
   13d28:	mov	r9, #0
   13d2c:	mov	r6, #1
   13d30:	b	13a1c <__mempcpy_chk@plt+0x29f4>
   13d34:	ldr	r0, [sp, #44]	; 0x2c
   13d38:	cmp	r0, #1
   13d3c:	bne	13e48 <__mempcpy_chk@plt+0x2e20>
   13d40:	str	lr, [sp, #32]
   13d44:	bl	10f20 <__ctype_b_loc@plt>
   13d48:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13d4c:	ldr	r0, [r0]
   13d50:	add	r0, r0, r4, lsl #1
   13d54:	ldrb	r0, [r0, #1]
   13d58:	ubfx	r6, r0, #6, #1
   13d5c:	mov	r2, #1
   13d60:	ldr	r0, [sp, #60]	; 0x3c
   13d64:	orr	r1, r6, r0
   13d68:	cmp	r2, #1
   13d6c:	bhi	140a0 <__mempcpy_chk@plt+0x3078>
   13d70:	tst	r1, #1
   13d74:	beq	140a0 <__mempcpy_chk@plt+0x3078>
   13d78:	ldr	lr, [sp, #32]
   13d7c:	b	13a1c <__mempcpy_chk@plt+0x29f4>
   13d80:	mov	r9, #0
   13d84:	mov	r0, #92	; 0x5c
   13d88:	ldr	r1, [sp, #56]	; 0x38
   13d8c:	cmp	r1, #0
   13d90:	beq	13e08 <__mempcpy_chk@plt+0x2de0>
   13d94:	mov	r4, #92	; 0x5c
   13d98:	mov	r6, #0
   13d9c:	cmp	r9, #0
   13da0:	bne	13dd8 <__mempcpy_chk@plt+0x2db0>
   13da4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13da8:	tst	r0, #1
   13dac:	beq	13dd8 <__mempcpy_chk@plt+0x2db0>
   13db0:	cmp	r8, sl
   13db4:	movcc	r0, #39	; 0x27
   13db8:	strbcc	r0, [r5, r8]
   13dbc:	add	r0, r8, #1
   13dc0:	cmp	r0, sl
   13dc4:	movcc	r1, #39	; 0x27
   13dc8:	strbcc	r1, [r5, r0]
   13dcc:	add	r8, r8, #2
   13dd0:	mov	r0, #0
   13dd4:	str	r0, [fp, #-56]	; 0xffffffc8
   13dd8:	mov	r1, r6
   13ddc:	mov	r0, r4
   13de0:	cmp	r8, sl
   13de4:	strbcc	r0, [r5, r8]
   13de8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13dec:	and	r0, r0, r1
   13df0:	str	r0, [fp, #-48]	; 0xffffffd0
   13df4:	add	r8, r8, #1
   13df8:	add	r7, r7, #1
   13dfc:	cmn	lr, #1
   13e00:	bne	13754 <__mempcpy_chk@plt+0x272c>
   13e04:	b	13760 <__mempcpy_chk@plt+0x2738>
   13e08:	mov	r9, #0
   13e0c:	ldr	r1, [sp, #92]	; 0x5c
   13e10:	tst	r1, #1
   13e14:	mov	r6, #0
   13e18:	mov	r1, #0
   13e1c:	beq	13a1c <__mempcpy_chk@plt+0x29f4>
   13e20:	b	13a64 <__mempcpy_chk@plt+0x2a3c>
   13e24:	mov	r4, #0
   13e28:	ldr	r0, [sp, #40]	; 0x28
   13e2c:	cmp	r0, #0
   13e30:	mov	r9, #0
   13e34:	mov	r6, #0
   13e38:	beq	13a1c <__mempcpy_chk@plt+0x29f4>
   13e3c:	b	13df8 <__mempcpy_chk@plt+0x2dd0>
   13e40:	mov	r6, #1
   13e44:	b	13a1c <__mempcpy_chk@plt+0x29f4>
   13e48:	mov	r0, #0
   13e4c:	str	r0, [fp, #-36]	; 0xffffffdc
   13e50:	str	r0, [fp, #-40]	; 0xffffffd8
   13e54:	cmn	lr, #1
   13e58:	bne	13e6c <__mempcpy_chk@plt+0x2e44>
   13e5c:	mov	r0, ip
   13e60:	bl	10f50 <strlen@plt>
   13e64:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13e68:	mov	lr, r0
   13e6c:	ldr	r0, [sp, #76]	; 0x4c
   13e70:	add	r0, r0, r7
   13e74:	str	r0, [sp, #24]
   13e78:	mov	r6, #1
   13e7c:	mov	r2, #0
   13e80:	sub	r0, fp, #40	; 0x28
   13e84:	mov	r3, r0
   13e88:	str	r5, [sp, #28]
   13e8c:	str	lr, [sp, #32]
   13e90:	b	13ed4 <__mempcpy_chk@plt+0x2eac>
   13e94:	ldr	r5, [sp, #52]	; 0x34
   13e98:	add	r5, r0, r5
   13e9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ea0:	bl	10e78 <iswprint@plt>
   13ea4:	cmp	r0, #0
   13ea8:	movwne	r0, #1
   13eac:	and	r6, r6, r0
   13eb0:	sub	r0, fp, #40	; 0x28
   13eb4:	bl	10e3c <mbsinit@plt>
   13eb8:	sub	r3, fp, #40	; 0x28
   13ebc:	mov	r2, r5
   13ec0:	ldr	lr, [sp, #32]
   13ec4:	cmp	r0, #0
   13ec8:	ldr	r5, [sp, #28]
   13ecc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13ed0:	bne	13d60 <__mempcpy_chk@plt+0x2d38>
   13ed4:	str	r2, [sp, #52]	; 0x34
   13ed8:	add	r0, r2, r7
   13edc:	add	r1, ip, r0
   13ee0:	str	r0, [sp, #48]	; 0x30
   13ee4:	sub	r2, lr, r0
   13ee8:	sub	r0, fp, #44	; 0x2c
   13eec:	bl	16084 <__mempcpy_chk@plt+0x505c>
   13ef0:	cmp	r0, #0
   13ef4:	beq	1426c <__mempcpy_chk@plt+0x3244>
   13ef8:	cmn	r0, #1
   13efc:	beq	14228 <__mempcpy_chk@plt+0x3200>
   13f00:	cmn	r0, #2
   13f04:	ldr	lr, [sp, #32]
   13f08:	beq	14230 <__mempcpy_chk@plt+0x3208>
   13f0c:	cmp	r0, #2
   13f10:	mov	r1, #0
   13f14:	movwcc	r1, #1
   13f18:	ldr	r2, [sp, #68]	; 0x44
   13f1c:	eor	r2, r2, #1
   13f20:	orrs	r1, r2, r1
   13f24:	bne	13e94 <__mempcpy_chk@plt+0x2e6c>
   13f28:	ldr	r1, [sp, #52]	; 0x34
   13f2c:	ldr	r2, [sp, #24]
   13f30:	add	r1, r2, r1
   13f34:	sub	r2, r0, #1
   13f38:	b	13f48 <__mempcpy_chk@plt+0x2f20>
   13f3c:	add	r1, r1, #1
   13f40:	subs	r2, r2, #1
   13f44:	beq	13e94 <__mempcpy_chk@plt+0x2e6c>
   13f48:	ldrb	r3, [r1]
   13f4c:	sub	r3, r3, #91	; 0x5b
   13f50:	cmp	r3, #33	; 0x21
   13f54:	bhi	13f3c <__mempcpy_chk@plt+0x2f14>
   13f58:	add	r5, pc, #0
   13f5c:	ldr	pc, [r5, r3, lsl #2]
   13f60:	andeq	r4, r1, r8, asr r3
   13f64:	andeq	r4, r1, r8, asr r3
   13f68:	andeq	r3, r1, ip, lsr pc
   13f6c:	andeq	r4, r1, r8, asr r3
   13f70:	andeq	r3, r1, ip, lsr pc
   13f74:	andeq	r4, r1, r8, asr r3
   13f78:	andeq	r3, r1, ip, lsr pc
   13f7c:	andeq	r3, r1, ip, lsr pc
   13f80:	andeq	r3, r1, ip, lsr pc
   13f84:	andeq	r3, r1, ip, lsr pc
   13f88:	andeq	r3, r1, ip, lsr pc
   13f8c:	andeq	r3, r1, ip, lsr pc
   13f90:	andeq	r3, r1, ip, lsr pc
   13f94:	andeq	r3, r1, ip, lsr pc
   13f98:	andeq	r3, r1, ip, lsr pc
   13f9c:	andeq	r3, r1, ip, lsr pc
   13fa0:	andeq	r3, r1, ip, lsr pc
   13fa4:	andeq	r3, r1, ip, lsr pc
   13fa8:	andeq	r3, r1, ip, lsr pc
   13fac:	andeq	r3, r1, ip, lsr pc
   13fb0:	andeq	r3, r1, ip, lsr pc
   13fb4:	andeq	r3, r1, ip, lsr pc
   13fb8:	andeq	r3, r1, ip, lsr pc
   13fbc:	andeq	r3, r1, ip, lsr pc
   13fc0:	andeq	r3, r1, ip, lsr pc
   13fc4:	andeq	r3, r1, ip, lsr pc
   13fc8:	andeq	r3, r1, ip, lsr pc
   13fcc:	andeq	r3, r1, ip, lsr pc
   13fd0:	andeq	r3, r1, ip, lsr pc
   13fd4:	andeq	r3, r1, ip, lsr pc
   13fd8:	andeq	r3, r1, ip, lsr pc
   13fdc:	andeq	r3, r1, ip, lsr pc
   13fe0:	andeq	r3, r1, ip, lsr pc
   13fe4:	andeq	r4, r1, r8, asr r3
   13fe8:	mov	r8, r0
   13fec:	b	13a1c <__mempcpy_chk@plt+0x29f4>
   13ff0:	ldr	r0, [sp, #36]	; 0x24
   13ff4:	cmp	r0, #0
   13ff8:	beq	14098 <__mempcpy_chk@plt+0x3070>
   13ffc:	add	r0, r7, #2
   14000:	cmp	r0, lr
   14004:	bcs	14098 <__mempcpy_chk@plt+0x3070>
   14008:	add	r1, r7, ip
   1400c:	ldrb	r1, [r1, #1]
   14010:	cmp	r1, #63	; 0x3f
   14014:	bne	14098 <__mempcpy_chk@plt+0x3070>
   14018:	ldrb	r1, [ip, r0]
   1401c:	sub	r2, r1, #33	; 0x21
   14020:	cmp	r2, #29
   14024:	bhi	14098 <__mempcpy_chk@plt+0x3070>
   14028:	mov	r3, #1
   1402c:	movw	r6, #20929	; 0x51c1
   14030:	movt	r6, #14336	; 0x3800
   14034:	tst	r6, r3, lsl r2
   14038:	beq	14098 <__mempcpy_chk@plt+0x3070>
   1403c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14040:	tst	r2, #1
   14044:	bne	14360 <__mempcpy_chk@plt+0x3338>
   14048:	cmp	r8, sl
   1404c:	movcc	r2, #63	; 0x3f
   14050:	strbcc	r2, [r5, r8]
   14054:	add	r2, r8, #1
   14058:	cmp	r2, sl
   1405c:	movcc	r3, #34	; 0x22
   14060:	strbcc	r3, [r5, r2]
   14064:	add	r2, r8, #2
   14068:	cmp	r2, sl
   1406c:	movcc	r3, #34	; 0x22
   14070:	strbcc	r3, [r5, r2]
   14074:	add	r2, r8, #3
   14078:	cmp	r2, sl
   1407c:	movcc	r3, #63	; 0x3f
   14080:	strbcc	r3, [r5, r2]
   14084:	add	r8, r8, #4
   14088:	mov	r7, r0
   1408c:	mov	r4, r1
   14090:	mov	r6, #0
   14094:	b	13a1c <__mempcpy_chk@plt+0x29f4>
   14098:	mov	r6, #0
   1409c:	b	13a1c <__mempcpy_chk@plt+0x29f4>
   140a0:	add	r0, r2, r7
   140a4:	str	r0, [sp, #52]	; 0x34
   140a8:	mov	r2, #0
   140ac:	ldr	lr, [sp, #32]
   140b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   140b4:	str	r1, [sp, #48]	; 0x30
   140b8:	tst	r1, #1
   140bc:	bne	14198 <__mempcpy_chk@plt+0x3170>
   140c0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   140c4:	tst	r1, #1
   140c8:	bne	14360 <__mempcpy_chk@plt+0x3338>
   140cc:	mov	r3, r0
   140d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   140d4:	subs	r1, r0, #2
   140d8:	movwne	r1, #1
   140dc:	orr	r1, r1, r3
   140e0:	tst	r1, #1
   140e4:	bne	1411c <__mempcpy_chk@plt+0x30f4>
   140e8:	cmp	r8, sl
   140ec:	movcc	r0, #39	; 0x27
   140f0:	strbcc	r0, [r5, r8]
   140f4:	add	r2, r8, #1
   140f8:	cmp	r2, sl
   140fc:	movcc	r0, #36	; 0x24
   14100:	strbcc	r0, [r5, r2]
   14104:	add	r2, r8, #2
   14108:	cmp	r2, sl
   1410c:	movcc	r0, #39	; 0x27
   14110:	strbcc	r0, [r5, r2]
   14114:	add	r8, r8, #3
   14118:	mov	r3, #1
   1411c:	cmp	r8, sl
   14120:	movcc	r1, #92	; 0x5c
   14124:	strbcc	r1, [r5, r8]
   14128:	add	r2, r8, #1
   1412c:	cmp	r2, sl
   14130:	bcs	14144 <__mempcpy_chk@plt+0x311c>
   14134:	uxtb	r1, r4
   14138:	mov	r0, #48	; 0x30
   1413c:	orr	r1, r0, r1, lsr #6
   14140:	strb	r1, [r5, r2]
   14144:	add	r2, r8, #2
   14148:	cmp	r2, sl
   1414c:	lsrcc	r1, r4, #3
   14150:	movcc	r0, #6
   14154:	bficc	r1, r0, #3, #29
   14158:	strbcc	r1, [r5, r2]
   1415c:	mov	r0, #6
   14160:	bfi	r4, r0, #3, #29
   14164:	add	r8, r8, #3
   14168:	mov	r2, #1
   1416c:	mov	r0, r3
   14170:	b	141bc <__mempcpy_chk@plt+0x3194>
   14174:	cmp	r8, sl
   14178:	strbcc	r4, [r5, r8]
   1417c:	ldr	r1, [sp, #76]	; 0x4c
   14180:	ldrb	r4, [r1, r7]
   14184:	add	r8, r8, #1
   14188:	mov	r7, r3
   1418c:	ldr	r1, [sp, #48]	; 0x30
   14190:	tst	r1, #1
   14194:	beq	140c0 <__mempcpy_chk@plt+0x3098>
   14198:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1419c:	tst	r1, #1
   141a0:	beq	141b4 <__mempcpy_chk@plt+0x318c>
   141a4:	cmp	r8, sl
   141a8:	movcc	r1, #92	; 0x5c
   141ac:	strbcc	r1, [r5, r8]
   141b0:	add	r8, r8, #1
   141b4:	mov	r1, #0
   141b8:	str	r1, [fp, #-52]	; 0xffffffcc
   141bc:	and	r9, r2, #1
   141c0:	add	r3, r7, #1
   141c4:	ldr	r1, [sp, #52]	; 0x34
   141c8:	cmp	r1, r3
   141cc:	bls	14210 <__mempcpy_chk@plt+0x31e8>
   141d0:	cmp	r9, #0
   141d4:	movwne	r9, #1
   141d8:	mvn	r1, r0
   141dc:	orr	r1, r1, r9
   141e0:	tst	r1, #1
   141e4:	bne	14174 <__mempcpy_chk@plt+0x314c>
   141e8:	cmp	r8, sl
   141ec:	movcc	r1, #39	; 0x27
   141f0:	strbcc	r1, [r5, r8]
   141f4:	add	r1, r8, #1
   141f8:	cmp	r1, sl
   141fc:	movcc	r0, #39	; 0x27
   14200:	strbcc	r0, [r5, r1]
   14204:	add	r8, r8, #2
   14208:	mov	r0, #0
   1420c:	b	14174 <__mempcpy_chk@plt+0x314c>
   14210:	str	r0, [fp, #-56]	; 0xffffffc8
   14214:	cmp	r9, #0
   14218:	movwne	r9, #1
   1421c:	cmp	r9, #0
   14220:	beq	13da4 <__mempcpy_chk@plt+0x2d7c>
   14224:	b	13dd8 <__mempcpy_chk@plt+0x2db0>
   14228:	mov	r6, #0
   1422c:	b	1426c <__mempcpy_chk@plt+0x3244>
   14230:	mov	r6, #0
   14234:	ldr	r0, [sp, #48]	; 0x30
   14238:	cmp	r0, lr
   1423c:	bcs	1426c <__mempcpy_chk@plt+0x3244>
   14240:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14244:	add	r0, ip, r7
   14248:	ldr	r2, [sp, #52]	; 0x34
   1424c:	ldrb	r1, [r0, r2]
   14250:	cmp	r1, #0
   14254:	beq	13d60 <__mempcpy_chk@plt+0x2d38>
   14258:	add	r2, r2, #1
   1425c:	add	r1, r7, r2
   14260:	cmp	r1, lr
   14264:	bcc	1424c <__mempcpy_chk@plt+0x3224>
   14268:	b	13d60 <__mempcpy_chk@plt+0x2d38>
   1426c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14270:	ldr	r2, [sp, #52]	; 0x34
   14274:	b	13d60 <__mempcpy_chk@plt+0x2d38>
   14278:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1427c:	eor	r0, r1, #2
   14280:	orr	r0, r0, r8
   14284:	clz	r0, r0
   14288:	lsr	r0, r0, #5
   1428c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14290:	tst	r3, r0
   14294:	bne	14360 <__mempcpy_chk@plt+0x3338>
   14298:	mov	r6, r5
   1429c:	subs	r0, r1, #2
   142a0:	movwne	r0, #1
   142a4:	orr	r0, r3, r0
   142a8:	tst	r0, #1
   142ac:	ldr	r2, [sp, #92]	; 0x5c
   142b0:	ldreq	r0, [sp, #64]	; 0x40
   142b4:	eoreq	r0, r0, #1
   142b8:	tsteq	r0, #1
   142bc:	bne	142fc <__mempcpy_chk@plt+0x32d4>
   142c0:	mov	r9, lr
   142c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   142c8:	tst	r0, #1
   142cc:	bne	143c8 <__mempcpy_chk@plt+0x33a0>
   142d0:	ldr	r0, [sp, #84]	; 0x54
   142d4:	cmp	r0, #0
   142d8:	beq	142fc <__mempcpy_chk@plt+0x32d4>
   142dc:	mov	r0, #0
   142e0:	str	r0, [fp, #-48]	; 0xffffffd0
   142e4:	mov	r1, #2
   142e8:	cmp	sl, #0
   142ec:	mov	r0, r2
   142f0:	mov	r4, r3
   142f4:	ldr	r7, [sp, #84]	; 0x54
   142f8:	beq	134d4 <__mempcpy_chk@plt+0x24ac>
   142fc:	ldr	r1, [fp, #-84]	; 0xffffffac
   14300:	clz	r0, r1
   14304:	lsr	r0, r0, #5
   14308:	orr	r0, r0, r3
   1430c:	tst	r0, #1
   14310:	bne	1433c <__mempcpy_chk@plt+0x3314>
   14314:	ldrb	r0, [r1]
   14318:	cmp	r0, #0
   1431c:	beq	1433c <__mempcpy_chk@plt+0x3314>
   14320:	add	r1, r1, #1
   14324:	cmp	r8, sl
   14328:	strbcc	r0, [r6, r8]
   1432c:	add	r8, r8, #1
   14330:	ldrb	r0, [r1], #1
   14334:	cmp	r0, #0
   14338:	bne	14324 <__mempcpy_chk@plt+0x32fc>
   1433c:	cmp	r8, sl
   14340:	movcc	r0, #0
   14344:	strbcc	r0, [r6, r8]
   14348:	b	143bc <__mempcpy_chk@plt+0x3394>
   1434c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14350:	mov	lr, r4
   14354:	b	14360 <__mempcpy_chk@plt+0x3338>
   14358:	ldr	r5, [sp, #28]
   1435c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14360:	mov	r0, #0
   14364:	ldr	r1, [fp, #12]
   14368:	bic	r1, r1, #2
   1436c:	mov	r2, #2
   14370:	ldr	r3, [sp, #92]	; 0x5c
   14374:	tst	r3, #1
   14378:	movwne	r2, #4
   1437c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14380:	cmp	r3, #2
   14384:	movne	r2, r3
   14388:	str	r2, [sp]
   1438c:	str	r1, [sp, #4]
   14390:	str	r0, [sp, #8]
   14394:	ldr	r0, [sp, #80]	; 0x50
   14398:	str	r0, [sp, #12]
   1439c:	ldr	r0, [sp, #88]	; 0x58
   143a0:	str	r0, [sp, #16]
   143a4:	mov	r0, r5
   143a8:	mov	r1, sl
   143ac:	mov	r2, ip
   143b0:	mov	r3, lr
   143b4:	bl	13448 <__mempcpy_chk@plt+0x2420>
   143b8:	mov	r8, r0
   143bc:	mov	r0, r8
   143c0:	sub	sp, fp, #28
   143c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143c8:	mov	r0, #5
   143cc:	str	r0, [sp]
   143d0:	ldr	r0, [fp, #12]
   143d4:	str	r0, [sp, #4]
   143d8:	ldr	r0, [fp, #16]
   143dc:	str	r0, [sp, #8]
   143e0:	ldr	r0, [sp, #80]	; 0x50
   143e4:	str	r0, [sp, #12]
   143e8:	ldr	r0, [sp, #88]	; 0x58
   143ec:	str	r0, [sp, #16]
   143f0:	mov	r0, r6
   143f4:	ldr	r1, [sp, #84]	; 0x54
   143f8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   143fc:	mov	r3, r9
   14400:	b	143b4 <__mempcpy_chk@plt+0x338c>
   14404:	bl	11004 <abort@plt>
   14408:	mov	r3, r2
   1440c:	mov	r2, #0
   14410:	b	14414 <__mempcpy_chk@plt+0x33ec>
   14414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14418:	add	fp, sp, #28
   1441c:	sub	sp, sp, #36	; 0x24
   14420:	mov	r4, r2
   14424:	str	r2, [sp, #24]
   14428:	mov	r5, r1
   1442c:	mov	r6, r0
   14430:	str	r0, [sp, #20]
   14434:	movw	r8, #33112	; 0x8158
   14438:	movt	r8, #2
   1443c:	cmp	r3, #0
   14440:	movne	r8, r3
   14444:	bl	10f5c <__errno_location@plt>
   14448:	str	r0, [sp, #28]
   1444c:	ldm	r8, {r3, r9}
   14450:	ldr	r1, [r8, #40]	; 0x28
   14454:	ldr	r2, [r8, #44]	; 0x2c
   14458:	ldr	r7, [r0]
   1445c:	str	r7, [sp, #32]
   14460:	add	sl, r8, #8
   14464:	cmp	r4, #0
   14468:	orreq	r9, r9, #1
   1446c:	stm	sp, {r3, r9, sl}
   14470:	str	r1, [sp, #12]
   14474:	str	r2, [sp, #16]
   14478:	mov	r0, #0
   1447c:	mov	r1, #0
   14480:	mov	r2, r6
   14484:	mov	r3, r5
   14488:	mov	r7, r5
   1448c:	bl	13448 <__mempcpy_chk@plt+0x2420>
   14490:	mov	r5, r0
   14494:	add	r4, r0, #1
   14498:	mov	r0, r4
   1449c:	bl	154b8 <__mempcpy_chk@plt+0x4490>
   144a0:	mov	r6, r0
   144a4:	ldr	r0, [r8]
   144a8:	ldr	r1, [r8, #40]	; 0x28
   144ac:	ldr	r2, [r8, #44]	; 0x2c
   144b0:	stm	sp, {r0, r9, sl}
   144b4:	str	r1, [sp, #12]
   144b8:	str	r2, [sp, #16]
   144bc:	mov	r0, r6
   144c0:	mov	r1, r4
   144c4:	ldr	r2, [sp, #20]
   144c8:	mov	r3, r7
   144cc:	bl	13448 <__mempcpy_chk@plt+0x2420>
   144d0:	ldr	r0, [sp, #24]
   144d4:	ldr	r1, [sp, #32]
   144d8:	ldr	r2, [sp, #28]
   144dc:	str	r1, [r2]
   144e0:	cmp	r0, #0
   144e4:	strne	r5, [r0]
   144e8:	mov	r0, r6
   144ec:	sub	sp, fp, #28
   144f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144f8:	add	fp, sp, #24
   144fc:	movw	r8, #33008	; 0x80f0
   14500:	movt	r8, #2
   14504:	ldr	r4, [r8]
   14508:	movw	r5, #33012	; 0x80f4
   1450c:	movt	r5, #2
   14510:	ldr	r0, [r5]
   14514:	cmp	r0, #2
   14518:	blt	14544 <__mempcpy_chk@plt+0x351c>
   1451c:	add	r7, r4, #12
   14520:	mov	r6, #0
   14524:	ldr	r0, [r7, r6, lsl #3]
   14528:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   1452c:	add	r0, r6, #1
   14530:	ldr	r1, [r5]
   14534:	add	r2, r6, #2
   14538:	cmp	r2, r1
   1453c:	mov	r6, r0
   14540:	blt	14524 <__mempcpy_chk@plt+0x34fc>
   14544:	ldr	r0, [r4, #4]
   14548:	movw	r9, #33160	; 0x8188
   1454c:	movt	r9, #2
   14550:	cmp	r0, r9
   14554:	movw	r7, #33016	; 0x80f8
   14558:	movt	r7, #2
   1455c:	beq	1456c <__mempcpy_chk@plt+0x3544>
   14560:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   14564:	mov	r0, #256	; 0x100
   14568:	stm	r7, {r0, r9}
   1456c:	cmp	r4, r7
   14570:	beq	14580 <__mempcpy_chk@plt+0x3558>
   14574:	mov	r0, r4
   14578:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   1457c:	str	r7, [r8]
   14580:	mov	r0, #1
   14584:	str	r0, [r5]
   14588:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1458c:	movw	r3, #33112	; 0x8158
   14590:	movt	r3, #2
   14594:	mvn	r2, #0
   14598:	b	1459c <__mempcpy_chk@plt+0x3574>
   1459c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145a0:	add	fp, sp, #28
   145a4:	sub	sp, sp, #44	; 0x2c
   145a8:	mov	r7, r3
   145ac:	str	r2, [sp, #36]	; 0x24
   145b0:	str	r1, [sp, #32]
   145b4:	mov	r5, r0
   145b8:	bl	10f5c <__errno_location@plt>
   145bc:	cmp	r5, #0
   145c0:	bmi	14730 <__mempcpy_chk@plt+0x3708>
   145c4:	cmn	r5, #-2147483647	; 0x80000001
   145c8:	beq	14730 <__mempcpy_chk@plt+0x3708>
   145cc:	movw	r4, #33008	; 0x80f0
   145d0:	movt	r4, #2
   145d4:	ldr	r6, [r4]
   145d8:	str	r0, [sp, #28]
   145dc:	ldr	r0, [r0]
   145e0:	str	r0, [sp, #24]
   145e4:	movw	r8, #33012	; 0x80f4
   145e8:	movt	r8, #2
   145ec:	ldr	r1, [r8]
   145f0:	cmp	r1, r5
   145f4:	ble	14600 <__mempcpy_chk@plt+0x35d8>
   145f8:	mov	sl, r6
   145fc:	b	1466c <__mempcpy_chk@plt+0x3644>
   14600:	str	r1, [fp, #-32]	; 0xffffffe0
   14604:	mov	r0, #8
   14608:	str	r0, [sp]
   1460c:	movw	r9, #33016	; 0x80f8
   14610:	movt	r9, #2
   14614:	subs	r0, r6, r9
   14618:	movne	r0, r6
   1461c:	sub	r1, r5, r1
   14620:	add	r2, r1, #1
   14624:	sub	r1, fp, #32
   14628:	mvn	r3, #-2147483648	; 0x80000000
   1462c:	bl	15594 <__mempcpy_chk@plt+0x456c>
   14630:	mov	sl, r0
   14634:	str	r0, [r4]
   14638:	cmp	r6, r9
   1463c:	bne	14648 <__mempcpy_chk@plt+0x3620>
   14640:	ldrd	r0, [r9]
   14644:	stm	sl, {r0, r1}
   14648:	ldr	r1, [r8]
   1464c:	add	r0, sl, r1, lsl #3
   14650:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14654:	sub	r1, r2, r1
   14658:	lsl	r2, r1, #3
   1465c:	mov	r1, #0
   14660:	bl	10f74 <memset@plt>
   14664:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14668:	str	r0, [r8]
   1466c:	mov	r9, sl
   14670:	ldr	r6, [r9, r5, lsl #3]!
   14674:	ldr	r4, [r9, #4]!
   14678:	ldm	r7, {r0, r1}
   1467c:	ldr	r2, [r7, #40]	; 0x28
   14680:	ldr	r3, [r7, #44]	; 0x2c
   14684:	orr	r8, r1, #1
   14688:	add	r1, r7, #8
   1468c:	stm	sp, {r0, r8}
   14690:	str	r1, [sp, #20]
   14694:	add	r0, sp, #8
   14698:	stm	r0, {r1, r2, r3}
   1469c:	mov	r0, r4
   146a0:	mov	r1, r6
   146a4:	ldr	r2, [sp, #32]
   146a8:	ldr	r3, [sp, #36]	; 0x24
   146ac:	bl	13448 <__mempcpy_chk@plt+0x2420>
   146b0:	cmp	r6, r0
   146b4:	bhi	14718 <__mempcpy_chk@plt+0x36f0>
   146b8:	add	r6, r0, #1
   146bc:	str	r6, [sl, r5, lsl #3]
   146c0:	movw	r0, #33160	; 0x8188
   146c4:	movt	r0, #2
   146c8:	cmp	r4, r0
   146cc:	beq	146d8 <__mempcpy_chk@plt+0x36b0>
   146d0:	mov	r0, r4
   146d4:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   146d8:	mov	r0, r6
   146dc:	bl	154b8 <__mempcpy_chk@plt+0x4490>
   146e0:	mov	r4, r0
   146e4:	str	r0, [r9]
   146e8:	ldr	r0, [r7]
   146ec:	ldr	r1, [r7, #40]	; 0x28
   146f0:	ldr	r2, [r7, #44]	; 0x2c
   146f4:	stm	sp, {r0, r8}
   146f8:	ldr	r0, [sp, #20]
   146fc:	add	r3, sp, #8
   14700:	stm	r3, {r0, r1, r2}
   14704:	mov	r0, r4
   14708:	mov	r1, r6
   1470c:	ldr	r2, [sp, #32]
   14710:	ldr	r3, [sp, #36]	; 0x24
   14714:	bl	13448 <__mempcpy_chk@plt+0x2420>
   14718:	ldr	r0, [sp, #28]
   1471c:	ldr	r1, [sp, #24]
   14720:	str	r1, [r0]
   14724:	mov	r0, r4
   14728:	sub	sp, fp, #28
   1472c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14730:	bl	11004 <abort@plt>
   14734:	movw	r3, #33112	; 0x8158
   14738:	movt	r3, #2
   1473c:	b	1459c <__mempcpy_chk@plt+0x3574>
   14740:	mov	r1, r0
   14744:	mov	r0, #0
   14748:	b	1458c <__mempcpy_chk@plt+0x3564>
   1474c:	mov	r2, r1
   14750:	mov	r1, r0
   14754:	mov	r0, #0
   14758:	b	14734 <__mempcpy_chk@plt+0x370c>
   1475c:	push	{r4, r5, r6, sl, fp, lr}
   14760:	add	fp, sp, #16
   14764:	sub	sp, sp, #48	; 0x30
   14768:	mov	r4, r2
   1476c:	mov	r5, r0
   14770:	mov	r6, sp
   14774:	mov	r0, r6
   14778:	bl	14798 <__mempcpy_chk@plt+0x3770>
   1477c:	mov	r0, r5
   14780:	mov	r1, r4
   14784:	mvn	r2, #0
   14788:	mov	r3, r6
   1478c:	bl	1459c <__mempcpy_chk@plt+0x3574>
   14790:	sub	sp, fp, #16
   14794:	pop	{r4, r5, r6, sl, fp, pc}
   14798:	push	{fp, lr}
   1479c:	mov	fp, sp
   147a0:	vmov.i32	q8, #0	; 0x00000000
   147a4:	mov	r2, #32
   147a8:	mov	r3, r0
   147ac:	vst1.32	{d16-d17}, [r3], r2
   147b0:	vst1.32	{d16-d17}, [r3]
   147b4:	add	r2, r0, #16
   147b8:	vst1.32	{d16-d17}, [r2]
   147bc:	cmp	r1, #10
   147c0:	strne	r1, [r0]
   147c4:	popne	{fp, pc}
   147c8:	bl	11004 <abort@plt>
   147cc:	push	{r4, r5, r6, r7, fp, lr}
   147d0:	add	fp, sp, #16
   147d4:	sub	sp, sp, #48	; 0x30
   147d8:	mov	r4, r3
   147dc:	mov	r5, r2
   147e0:	mov	r6, r0
   147e4:	mov	r7, sp
   147e8:	mov	r0, r7
   147ec:	bl	14798 <__mempcpy_chk@plt+0x3770>
   147f0:	mov	r0, r6
   147f4:	mov	r1, r5
   147f8:	mov	r2, r4
   147fc:	mov	r3, r7
   14800:	bl	1459c <__mempcpy_chk@plt+0x3574>
   14804:	sub	sp, fp, #16
   14808:	pop	{r4, r5, r6, r7, fp, pc}
   1480c:	mov	r2, r1
   14810:	mov	r1, r0
   14814:	mov	r0, #0
   14818:	b	1475c <__mempcpy_chk@plt+0x3734>
   1481c:	mov	r3, r2
   14820:	mov	r2, r1
   14824:	mov	r1, r0
   14828:	mov	r0, #0
   1482c:	b	147cc <__mempcpy_chk@plt+0x37a4>
   14830:	push	{r4, r5, r6, sl, fp, lr}
   14834:	add	fp, sp, #16
   14838:	sub	sp, sp, #48	; 0x30
   1483c:	mov	r4, r1
   14840:	mov	r5, r0
   14844:	movw	r0, #33112	; 0x8158
   14848:	movt	r0, #2
   1484c:	add	r1, r0, #16
   14850:	mov	r3, #32
   14854:	vld1.64	{d16-d17}, [r0], r3
   14858:	vld1.64	{d18-d19}, [r1]
   1485c:	mov	r6, sp
   14860:	add	r1, r6, #16
   14864:	vld1.64	{d20-d21}, [r0]
   14868:	vst1.64	{d18-d19}, [r1]
   1486c:	mov	r0, r6
   14870:	vst1.64	{d16-d17}, [r0], r3
   14874:	vst1.64	{d20-d21}, [r0]
   14878:	mov	r0, r6
   1487c:	mov	r1, r2
   14880:	mov	r2, #1
   14884:	bl	1333c <__mempcpy_chk@plt+0x2314>
   14888:	mov	r0, #0
   1488c:	mov	r1, r5
   14890:	mov	r2, r4
   14894:	mov	r3, r6
   14898:	bl	1459c <__mempcpy_chk@plt+0x3574>
   1489c:	sub	sp, fp, #16
   148a0:	pop	{r4, r5, r6, sl, fp, pc}
   148a4:	mov	r2, r1
   148a8:	mvn	r1, #0
   148ac:	b	14830 <__mempcpy_chk@plt+0x3808>
   148b0:	mov	r1, #58	; 0x3a
   148b4:	b	148a4 <__mempcpy_chk@plt+0x387c>
   148b8:	mov	r2, #58	; 0x3a
   148bc:	b	14830 <__mempcpy_chk@plt+0x3808>
   148c0:	push	{r4, r5, r6, sl, fp, lr}
   148c4:	add	fp, sp, #16
   148c8:	sub	sp, sp, #48	; 0x30
   148cc:	mov	r4, r2
   148d0:	mov	r5, r0
   148d4:	mov	r6, sp
   148d8:	mov	r0, r6
   148dc:	bl	14798 <__mempcpy_chk@plt+0x3770>
   148e0:	mov	r0, r6
   148e4:	mov	r1, #58	; 0x3a
   148e8:	mov	r2, #1
   148ec:	bl	1333c <__mempcpy_chk@plt+0x2314>
   148f0:	mov	r0, r5
   148f4:	mov	r1, r4
   148f8:	mvn	r2, #0
   148fc:	mov	r3, r6
   14900:	bl	1459c <__mempcpy_chk@plt+0x3574>
   14904:	sub	sp, fp, #16
   14908:	pop	{r4, r5, r6, sl, fp, pc}
   1490c:	push	{fp, lr}
   14910:	mov	fp, sp
   14914:	sub	sp, sp, #8
   14918:	mvn	ip, #0
   1491c:	str	ip, [sp]
   14920:	bl	1492c <__mempcpy_chk@plt+0x3904>
   14924:	mov	sp, fp
   14928:	pop	{fp, pc}
   1492c:	push	{r4, r5, r6, r7, fp, lr}
   14930:	add	fp, sp, #16
   14934:	sub	sp, sp, #48	; 0x30
   14938:	mov	r7, r3
   1493c:	mov	r5, r0
   14940:	movw	r0, #33112	; 0x8158
   14944:	movt	r0, #2
   14948:	add	r3, r0, #16
   1494c:	mov	r4, #32
   14950:	vld1.64	{d16-d17}, [r0], r4
   14954:	vld1.64	{d18-d19}, [r3]
   14958:	mov	r6, sp
   1495c:	add	r3, r6, #16
   14960:	vld1.64	{d20-d21}, [r0]
   14964:	vst1.64	{d18-d19}, [r3]
   14968:	mov	r0, r6
   1496c:	vst1.64	{d16-d17}, [r0], r4
   14970:	vst1.64	{d20-d21}, [r0]
   14974:	mov	r0, r6
   14978:	bl	13394 <__mempcpy_chk@plt+0x236c>
   1497c:	ldr	r2, [fp, #8]
   14980:	mov	r0, r5
   14984:	mov	r1, r7
   14988:	mov	r3, r6
   1498c:	bl	1459c <__mempcpy_chk@plt+0x3574>
   14990:	sub	sp, fp, #16
   14994:	pop	{r4, r5, r6, r7, fp, pc}
   14998:	mov	r3, r2
   1499c:	mov	r2, r1
   149a0:	mov	r1, r0
   149a4:	mov	r0, #0
   149a8:	b	1490c <__mempcpy_chk@plt+0x38e4>
   149ac:	push	{fp, lr}
   149b0:	mov	fp, sp
   149b4:	sub	sp, sp, #8
   149b8:	mov	ip, r2
   149bc:	mov	r2, r1
   149c0:	mov	r1, r0
   149c4:	str	r3, [sp]
   149c8:	mov	r0, #0
   149cc:	mov	r3, ip
   149d0:	bl	1492c <__mempcpy_chk@plt+0x3904>
   149d4:	mov	sp, fp
   149d8:	pop	{fp, pc}
   149dc:	movw	r3, #33024	; 0x8100
   149e0:	movt	r3, #2
   149e4:	b	1459c <__mempcpy_chk@plt+0x3574>
   149e8:	mov	r2, r1
   149ec:	mov	r1, r0
   149f0:	mov	r0, #0
   149f4:	b	149dc <__mempcpy_chk@plt+0x39b4>
   149f8:	mvn	r2, #0
   149fc:	b	149dc <__mempcpy_chk@plt+0x39b4>
   14a00:	mov	r1, r0
   14a04:	mov	r0, #0
   14a08:	b	149f8 <__mempcpy_chk@plt+0x39d0>
   14a0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a10:	add	fp, sp, #24
   14a14:	sub	sp, sp, #16
   14a18:	mov	r4, r1
   14a1c:	mov	r5, r0
   14a20:	mov	r7, #0
   14a24:	mov	r0, #0
   14a28:	mov	r1, r5
   14a2c:	mov	r2, #5
   14a30:	bl	10e48 <dcgettext@plt>
   14a34:	cmp	r0, r5
   14a38:	beq	14a44 <__mempcpy_chk@plt+0x3a1c>
   14a3c:	sub	sp, fp, #24
   14a40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14a44:	bl	1604c <__mempcpy_chk@plt+0x5024>
   14a48:	mov	r6, r0
   14a4c:	mov	r8, #56	; 0x38
   14a50:	mov	r0, #45	; 0x2d
   14a54:	stm	sp, {r0, r8}
   14a58:	str	r7, [sp, #8]
   14a5c:	str	r7, [sp, #12]
   14a60:	mov	r0, r6
   14a64:	mov	r1, #85	; 0x55
   14a68:	mov	r2, #84	; 0x54
   14a6c:	mov	r3, #70	; 0x46
   14a70:	bl	14b08 <__mempcpy_chk@plt+0x3ae0>
   14a74:	cmp	r0, #0
   14a78:	beq	14a94 <__mempcpy_chk@plt+0x3a6c>
   14a7c:	ldrb	r1, [r5]
   14a80:	movw	r2, #27956	; 0x6d34
   14a84:	movt	r2, #1
   14a88:	movw	r0, #27960	; 0x6d38
   14a8c:	movt	r0, #1
   14a90:	b	14ad8 <__mempcpy_chk@plt+0x3ab0>
   14a94:	mov	r0, #48	; 0x30
   14a98:	mov	r1, #51	; 0x33
   14a9c:	str	r8, [sp]
   14aa0:	stmib	sp, {r0, r1}
   14aa4:	str	r0, [sp, #12]
   14aa8:	mov	r0, r6
   14aac:	mov	r1, #71	; 0x47
   14ab0:	mov	r2, #66	; 0x42
   14ab4:	mov	r3, #49	; 0x31
   14ab8:	bl	14b08 <__mempcpy_chk@plt+0x3ae0>
   14abc:	cmp	r0, #0
   14ac0:	beq	14ae8 <__mempcpy_chk@plt+0x3ac0>
   14ac4:	ldrb	r1, [r5]
   14ac8:	movw	r2, #27964	; 0x6d3c
   14acc:	movt	r2, #1
   14ad0:	movw	r0, #27968	; 0x6d40
   14ad4:	movt	r0, #1
   14ad8:	cmp	r1, #96	; 0x60
   14adc:	moveq	r0, r2
   14ae0:	sub	sp, fp, #24
   14ae4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ae8:	movw	r1, #27950	; 0x6d2e
   14aec:	movt	r1, #1
   14af0:	movw	r0, #27954	; 0x6d32
   14af4:	movt	r0, #1
   14af8:	cmp	r4, #9
   14afc:	moveq	r0, r1
   14b00:	sub	sp, fp, #24
   14b04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14b08:	push	{r4, r5, r6, r7, fp, lr}
   14b0c:	add	fp, sp, #16
   14b10:	sub	sp, sp, #16
   14b14:	mov	r4, r3
   14b18:	mov	r5, r2
   14b1c:	mov	r7, r1
   14b20:	mov	r6, r0
   14b24:	mov	r0, r1
   14b28:	bl	15d1c <__mempcpy_chk@plt+0x4cf4>
   14b2c:	ldrb	r1, [r6]
   14b30:	cmp	r0, #0
   14b34:	andne	r1, r1, #223	; 0xdf
   14b38:	mov	r0, #0
   14b3c:	cmp	r1, r7
   14b40:	bne	14b78 <__mempcpy_chk@plt+0x3b50>
   14b44:	cmp	r7, #0
   14b48:	beq	14b80 <__mempcpy_chk@plt+0x3b58>
   14b4c:	ldr	r0, [fp, #20]
   14b50:	ldr	r1, [fp, #16]
   14b54:	ldr	r2, [fp, #12]
   14b58:	ldr	r3, [fp, #8]
   14b5c:	str	r2, [sp]
   14b60:	str	r1, [sp, #4]
   14b64:	str	r0, [sp, #8]
   14b68:	mov	r0, r6
   14b6c:	mov	r1, r5
   14b70:	mov	r2, r4
   14b74:	bl	14b8c <__mempcpy_chk@plt+0x3b64>
   14b78:	sub	sp, fp, #16
   14b7c:	pop	{r4, r5, r6, r7, fp, pc}
   14b80:	mov	r0, #1
   14b84:	sub	sp, fp, #16
   14b88:	pop	{r4, r5, r6, r7, fp, pc}
   14b8c:	push	{r4, r5, r6, r7, fp, lr}
   14b90:	add	fp, sp, #16
   14b94:	sub	sp, sp, #8
   14b98:	mov	r4, r3
   14b9c:	mov	r5, r2
   14ba0:	mov	r7, r1
   14ba4:	mov	r6, r0
   14ba8:	mov	r0, r1
   14bac:	bl	15d1c <__mempcpy_chk@plt+0x4cf4>
   14bb0:	ldrb	r1, [r6, #1]
   14bb4:	cmp	r0, #0
   14bb8:	andne	r1, r1, #223	; 0xdf
   14bbc:	mov	r0, #0
   14bc0:	cmp	r1, r7
   14bc4:	bne	14bf4 <__mempcpy_chk@plt+0x3bcc>
   14bc8:	cmp	r7, #0
   14bcc:	beq	14bfc <__mempcpy_chk@plt+0x3bd4>
   14bd0:	ldr	r0, [fp, #16]
   14bd4:	ldr	r1, [fp, #12]
   14bd8:	ldr	r3, [fp, #8]
   14bdc:	str	r1, [sp]
   14be0:	str	r0, [sp, #4]
   14be4:	mov	r0, r6
   14be8:	mov	r1, r5
   14bec:	mov	r2, r4
   14bf0:	bl	14c08 <__mempcpy_chk@plt+0x3be0>
   14bf4:	sub	sp, fp, #16
   14bf8:	pop	{r4, r5, r6, r7, fp, pc}
   14bfc:	mov	r0, #1
   14c00:	sub	sp, fp, #16
   14c04:	pop	{r4, r5, r6, r7, fp, pc}
   14c08:	push	{r4, r5, r6, r7, fp, lr}
   14c0c:	add	fp, sp, #16
   14c10:	sub	sp, sp, #8
   14c14:	mov	r4, r3
   14c18:	mov	r5, r2
   14c1c:	mov	r7, r1
   14c20:	mov	r6, r0
   14c24:	mov	r0, r1
   14c28:	bl	15d1c <__mempcpy_chk@plt+0x4cf4>
   14c2c:	ldrb	r1, [r6, #2]
   14c30:	cmp	r0, #0
   14c34:	andne	r1, r1, #223	; 0xdf
   14c38:	mov	r0, #0
   14c3c:	cmp	r1, r7
   14c40:	bne	14c68 <__mempcpy_chk@plt+0x3c40>
   14c44:	cmp	r7, #0
   14c48:	beq	14c70 <__mempcpy_chk@plt+0x3c48>
   14c4c:	ldr	r0, [fp, #12]
   14c50:	ldr	r3, [fp, #8]
   14c54:	str	r0, [sp]
   14c58:	mov	r0, r6
   14c5c:	mov	r1, r5
   14c60:	mov	r2, r4
   14c64:	bl	14c7c <__mempcpy_chk@plt+0x3c54>
   14c68:	sub	sp, fp, #16
   14c6c:	pop	{r4, r5, r6, r7, fp, pc}
   14c70:	mov	r0, #1
   14c74:	sub	sp, fp, #16
   14c78:	pop	{r4, r5, r6, r7, fp, pc}
   14c7c:	push	{r4, r5, r6, r7, fp, lr}
   14c80:	add	fp, sp, #16
   14c84:	mov	r4, r3
   14c88:	mov	r5, r2
   14c8c:	mov	r7, r1
   14c90:	mov	r6, r0
   14c94:	mov	r0, r1
   14c98:	bl	15d1c <__mempcpy_chk@plt+0x4cf4>
   14c9c:	ldrb	r1, [r6, #3]
   14ca0:	ldr	r3, [fp, #8]
   14ca4:	cmp	r0, #0
   14ca8:	andne	r1, r1, #223	; 0xdf
   14cac:	mov	r0, #0
   14cb0:	cmp	r1, r7
   14cb4:	bne	14cd8 <__mempcpy_chk@plt+0x3cb0>
   14cb8:	cmp	r7, #0
   14cbc:	beq	14cd4 <__mempcpy_chk@plt+0x3cac>
   14cc0:	mov	r0, r6
   14cc4:	mov	r1, r5
   14cc8:	mov	r2, r4
   14ccc:	pop	{r4, r5, r6, r7, fp, lr}
   14cd0:	b	14cdc <__mempcpy_chk@plt+0x3cb4>
   14cd4:	mov	r0, #1
   14cd8:	pop	{r4, r5, r6, r7, fp, pc}
   14cdc:	push	{r4, r5, r6, r7, fp, lr}
   14ce0:	add	fp, sp, #16
   14ce4:	mov	r4, r3
   14ce8:	mov	r5, r2
   14cec:	mov	r7, r1
   14cf0:	mov	r6, r0
   14cf4:	mov	r0, r1
   14cf8:	bl	15d1c <__mempcpy_chk@plt+0x4cf4>
   14cfc:	ldrb	r1, [r6, #4]
   14d00:	cmp	r0, #0
   14d04:	andne	r1, r1, #223	; 0xdf
   14d08:	mov	r0, #0
   14d0c:	cmp	r1, r7
   14d10:	bne	14d34 <__mempcpy_chk@plt+0x3d0c>
   14d14:	cmp	r7, #0
   14d18:	beq	14d30 <__mempcpy_chk@plt+0x3d08>
   14d1c:	mov	r0, r6
   14d20:	mov	r1, r5
   14d24:	mov	r2, r4
   14d28:	pop	{r4, r5, r6, r7, fp, lr}
   14d2c:	b	14d38 <__mempcpy_chk@plt+0x3d10>
   14d30:	mov	r0, #1
   14d34:	pop	{r4, r5, r6, r7, fp, pc}
   14d38:	push	{r4, r5, r6, sl, fp, lr}
   14d3c:	add	fp, sp, #16
   14d40:	mov	r4, r2
   14d44:	mov	r6, r1
   14d48:	mov	r5, r0
   14d4c:	mov	r0, r1
   14d50:	bl	15d1c <__mempcpy_chk@plt+0x4cf4>
   14d54:	ldrb	r1, [r5, #5]
   14d58:	cmp	r0, #0
   14d5c:	andne	r1, r1, #223	; 0xdf
   14d60:	mov	r0, #0
   14d64:	cmp	r1, r6
   14d68:	bne	14d88 <__mempcpy_chk@plt+0x3d60>
   14d6c:	cmp	r6, #0
   14d70:	beq	14d84 <__mempcpy_chk@plt+0x3d5c>
   14d74:	mov	r0, r5
   14d78:	mov	r1, r4
   14d7c:	pop	{r4, r5, r6, sl, fp, lr}
   14d80:	b	14d8c <__mempcpy_chk@plt+0x3d64>
   14d84:	mov	r0, #1
   14d88:	pop	{r4, r5, r6, sl, fp, pc}
   14d8c:	push	{r4, r5, fp, lr}
   14d90:	add	fp, sp, #8
   14d94:	mov	r5, r1
   14d98:	mov	r4, r0
   14d9c:	mov	r0, r1
   14da0:	bl	15d1c <__mempcpy_chk@plt+0x4cf4>
   14da4:	ldrb	r1, [r4, #6]
   14da8:	cmp	r0, #0
   14dac:	andne	r1, r1, #223	; 0xdf
   14db0:	mov	r0, #0
   14db4:	cmp	r1, r5
   14db8:	popne	{r4, r5, fp, pc}
   14dbc:	cmp	r5, #0
   14dc0:	beq	14dd0 <__mempcpy_chk@plt+0x3da8>
   14dc4:	mov	r0, r4
   14dc8:	pop	{r4, r5, fp, lr}
   14dcc:	b	14dd8 <__mempcpy_chk@plt+0x3db0>
   14dd0:	mov	r0, #1
   14dd4:	pop	{r4, r5, fp, pc}
   14dd8:	push	{r4, sl, fp, lr}
   14ddc:	add	fp, sp, #8
   14de0:	mov	r4, r0
   14de4:	mov	r0, #0
   14de8:	bl	15d1c <__mempcpy_chk@plt+0x4cf4>
   14dec:	ldrb	r1, [r4, #7]
   14df0:	cmp	r0, #0
   14df4:	beq	14e08 <__mempcpy_chk@plt+0x3de0>
   14df8:	tst	r1, #223	; 0xdf
   14dfc:	bne	14e10 <__mempcpy_chk@plt+0x3de8>
   14e00:	mov	r0, #1
   14e04:	pop	{r4, sl, fp, pc}
   14e08:	cmp	r1, #0
   14e0c:	beq	14e00 <__mempcpy_chk@plt+0x3dd8>
   14e10:	mov	r0, #0
   14e14:	pop	{r4, sl, fp, pc}
   14e18:	push	{r4, r5, r6, sl, fp, lr}
   14e1c:	add	fp, sp, #16
   14e20:	mov	r5, r1
   14e24:	ldr	r4, [r0], #8
   14e28:	cmp	r4, r0
   14e2c:	beq	14e50 <__mempcpy_chk@plt+0x3e28>
   14e30:	mov	r0, r4
   14e34:	mov	r1, r5
   14e38:	bl	158cc <__mempcpy_chk@plt+0x48a4>
   14e3c:	mov	r6, r0
   14e40:	cmp	r0, #0
   14e44:	moveq	r6, r4
   14e48:	mov	r0, r6
   14e4c:	pop	{r4, r5, r6, sl, fp, pc}
   14e50:	mov	r0, r5
   14e54:	bl	1589c <__mempcpy_chk@plt+0x4874>
   14e58:	cmp	r0, #0
   14e5c:	beq	14e78 <__mempcpy_chk@plt+0x3e50>
   14e60:	mov	r6, r0
   14e64:	mov	r1, r4
   14e68:	mov	r2, r5
   14e6c:	bl	10e30 <memcpy@plt>
   14e70:	mov	r0, r6
   14e74:	pop	{r4, r5, r6, sl, fp, pc}
   14e78:	mov	r6, #0
   14e7c:	mov	r0, r6
   14e80:	pop	{r4, r5, r6, sl, fp, pc}
   14e84:	push	{r4, r5, fp, lr}
   14e88:	add	fp, sp, #8
   14e8c:	mov	r4, r0
   14e90:	ldr	r5, [r0, #4]
   14e94:	bl	14ee0 <__mempcpy_chk@plt+0x3eb8>
   14e98:	ldr	r0, [r4, #4]
   14e9c:	cmp	r0, r5, lsl #1
   14ea0:	bhi	14ec4 <__mempcpy_chk@plt+0x3e9c>
   14ea4:	lsl	r5, r5, #1
   14ea8:	mov	r0, r5
   14eac:	bl	1589c <__mempcpy_chk@plt+0x4874>
   14eb0:	cmp	r0, #0
   14eb4:	stmne	r4, {r0, r5}
   14eb8:	movne	r0, #1
   14ebc:	popne	{r4, r5, fp, pc}
   14ec0:	b	14ed0 <__mempcpy_chk@plt+0x3ea8>
   14ec4:	bl	10f5c <__errno_location@plt>
   14ec8:	mov	r1, #12
   14ecc:	str	r1, [r0]
   14ed0:	mov	r0, r4
   14ed4:	bl	14ef4 <__mempcpy_chk@plt+0x3ecc>
   14ed8:	mov	r0, #0
   14edc:	pop	{r4, r5, fp, pc}
   14ee0:	mov	r1, r0
   14ee4:	ldr	r0, [r1], #8
   14ee8:	cmp	r0, r1
   14eec:	bxeq	lr
   14ef0:	b	121f8 <__mempcpy_chk@plt+0x11d0>
   14ef4:	mov	r1, #1024	; 0x400
   14ef8:	add	r2, r0, #8
   14efc:	str	r2, [r0]
   14f00:	str	r1, [r0, #4]
   14f04:	bx	lr
   14f08:	push	{r4, r5, r6, r7, fp, lr}
   14f0c:	add	fp, sp, #16
   14f10:	mov	r4, r0
   14f14:	add	r5, r0, #8
   14f18:	ldrd	r0, [r0]
   14f1c:	lsl	r7, r1, #1
   14f20:	cmp	r0, r5
   14f24:	beq	14f48 <__mempcpy_chk@plt+0x3f20>
   14f28:	cmp	r7, r1
   14f2c:	bcc	14f7c <__mempcpy_chk@plt+0x3f54>
   14f30:	mov	r1, r7
   14f34:	bl	158cc <__mempcpy_chk@plt+0x48a4>
   14f38:	mov	r6, r0
   14f3c:	cmp	r0, #0
   14f40:	bne	14f68 <__mempcpy_chk@plt+0x3f40>
   14f44:	b	14f88 <__mempcpy_chk@plt+0x3f60>
   14f48:	mov	r0, r7
   14f4c:	bl	1589c <__mempcpy_chk@plt+0x4874>
   14f50:	cmp	r0, #0
   14f54:	beq	14f74 <__mempcpy_chk@plt+0x3f4c>
   14f58:	mov	r6, r0
   14f5c:	ldr	r2, [r4, #4]
   14f60:	mov	r1, r5
   14f64:	bl	10e30 <memcpy@plt>
   14f68:	strd	r6, [r4]
   14f6c:	mov	r0, #1
   14f70:	pop	{r4, r5, r6, r7, fp, pc}
   14f74:	mov	r0, #0
   14f78:	pop	{r4, r5, r6, r7, fp, pc}
   14f7c:	bl	10f5c <__errno_location@plt>
   14f80:	mov	r1, #12
   14f84:	str	r1, [r0]
   14f88:	ldr	r0, [r4]
   14f8c:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   14f90:	mov	r0, r4
   14f94:	bl	14fa0 <__mempcpy_chk@plt+0x3f78>
   14f98:	mov	r0, #0
   14f9c:	pop	{r4, r5, r6, r7, fp, pc}
   14fa0:	mov	r1, #1024	; 0x400
   14fa4:	add	r2, r0, #8
   14fa8:	str	r2, [r0]
   14fac:	str	r1, [r0, #4]
   14fb0:	bx	lr
   14fb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14fb8:	add	fp, sp, #24
   14fbc:	sub	sp, sp, #32
   14fc0:	mov	r4, r2
   14fc4:	mov	r8, r0
   14fc8:	ldr	r6, [fp, #12]
   14fcc:	ldr	r7, [fp, #8]
   14fd0:	cmp	r1, #0
   14fd4:	beq	14ffc <__mempcpy_chk@plt+0x3fd4>
   14fd8:	mov	r5, r1
   14fdc:	str	r4, [sp]
   14fe0:	str	r3, [sp, #4]
   14fe4:	movw	r2, #28056	; 0x6d98
   14fe8:	movt	r2, #1
   14fec:	mov	r0, r8
   14ff0:	mov	r1, #1
   14ff4:	mov	r3, r5
   14ff8:	b	15014 <__mempcpy_chk@plt+0x3fec>
   14ffc:	str	r3, [sp]
   15000:	movw	r2, #28068	; 0x6da4
   15004:	movt	r2, #1
   15008:	mov	r0, r8
   1500c:	mov	r1, #1
   15010:	mov	r3, r4
   15014:	bl	10f98 <__fprintf_chk@plt>
   15018:	movw	r1, #28075	; 0x6dab
   1501c:	movt	r1, #1
   15020:	mov	r0, #0
   15024:	mov	r2, #5
   15028:	bl	10e48 <dcgettext@plt>
   1502c:	mov	r3, r0
   15030:	movw	r0, #2022	; 0x7e6
   15034:	str	r0, [sp]
   15038:	movw	r2, #28793	; 0x7079
   1503c:	movt	r2, #1
   15040:	mov	r0, r8
   15044:	mov	r1, #1
   15048:	bl	10f98 <__fprintf_chk@plt>
   1504c:	movw	r4, #25792	; 0x64c0
   15050:	movt	r4, #1
   15054:	mov	r0, r4
   15058:	mov	r1, r8
   1505c:	bl	10dd0 <fputs_unlocked@plt>
   15060:	movw	r1, #28079	; 0x6daf
   15064:	movt	r1, #1
   15068:	mov	r0, #0
   1506c:	mov	r2, #5
   15070:	bl	10e48 <dcgettext@plt>
   15074:	mov	r2, r0
   15078:	movw	r3, #28250	; 0x6e5a
   1507c:	movt	r3, #1
   15080:	mov	r0, r8
   15084:	mov	r1, #1
   15088:	bl	10f98 <__fprintf_chk@plt>
   1508c:	mov	r0, r4
   15090:	mov	r1, r8
   15094:	bl	10dd0 <fputs_unlocked@plt>
   15098:	cmp	r6, #9
   1509c:	bhi	150d8 <__mempcpy_chk@plt+0x40b0>
   150a0:	add	r0, pc, #0
   150a4:	ldr	pc, [r0, r6, lsl #2]
   150a8:	ldrdeq	r5, [r1], -r0
   150ac:	andeq	r5, r1, r4, ror #1
   150b0:	andeq	r5, r1, r4, lsl r1
   150b4:	andeq	r5, r1, ip, lsr r1
   150b8:	andeq	r5, r1, r4, ror #2
   150bc:	andeq	r5, r1, ip, lsl #3
   150c0:			; <UNDEFINED> instruction: 0x000151b4
   150c4:	andeq	r5, r1, ip, ror #3
   150c8:	andeq	r5, r1, ip, lsl #5
   150cc:	andeq	r5, r1, r4, lsr r2
   150d0:	sub	sp, fp, #24
   150d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   150d8:	movw	r1, #28603	; 0x6fbb
   150dc:	movt	r1, #1
   150e0:	b	1523c <__mempcpy_chk@plt+0x4214>
   150e4:	movw	r1, #28284	; 0x6e7c
   150e8:	movt	r1, #1
   150ec:	mov	r0, #0
   150f0:	mov	r2, #5
   150f4:	bl	10e48 <dcgettext@plt>
   150f8:	mov	r2, r0
   150fc:	ldr	r3, [r7]
   15100:	mov	r0, r8
   15104:	mov	r1, #1
   15108:	sub	sp, fp, #24
   1510c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15110:	b	10f98 <__fprintf_chk@plt>
   15114:	movw	r1, #28300	; 0x6e8c
   15118:	movt	r1, #1
   1511c:	mov	r0, #0
   15120:	mov	r2, #5
   15124:	bl	10e48 <dcgettext@plt>
   15128:	mov	r2, r0
   1512c:	ldr	r3, [r7]
   15130:	ldr	r0, [r7, #4]
   15134:	str	r0, [sp]
   15138:	b	15228 <__mempcpy_chk@plt+0x4200>
   1513c:	movw	r1, #28323	; 0x6ea3
   15140:	movt	r1, #1
   15144:	mov	r0, #0
   15148:	mov	r2, #5
   1514c:	bl	10e48 <dcgettext@plt>
   15150:	mov	r2, r0
   15154:	ldr	r3, [r7]
   15158:	ldmib	r7, {r0, r1}
   1515c:	stm	sp, {r0, r1}
   15160:	b	15228 <__mempcpy_chk@plt+0x4200>
   15164:	movw	r1, #28351	; 0x6ebf
   15168:	movt	r1, #1
   1516c:	mov	r0, #0
   15170:	mov	r2, #5
   15174:	bl	10e48 <dcgettext@plt>
   15178:	mov	r2, r0
   1517c:	ldr	r3, [r7]
   15180:	ldmib	r7, {r0, r1, r7}
   15184:	stm	sp, {r0, r1, r7}
   15188:	b	15228 <__mempcpy_chk@plt+0x4200>
   1518c:	movw	r1, #28383	; 0x6edf
   15190:	movt	r1, #1
   15194:	mov	r0, #0
   15198:	mov	r2, #5
   1519c:	bl	10e48 <dcgettext@plt>
   151a0:	mov	r2, r0
   151a4:	ldr	r3, [r7]
   151a8:	ldmib	r7, {r0, r1, r6, r7}
   151ac:	stm	sp, {r0, r1, r6, r7}
   151b0:	b	15228 <__mempcpy_chk@plt+0x4200>
   151b4:	movw	r1, #28419	; 0x6f03
   151b8:	movt	r1, #1
   151bc:	mov	r0, #0
   151c0:	mov	r2, #5
   151c4:	bl	10e48 <dcgettext@plt>
   151c8:	mov	r2, r0
   151cc:	ldr	r3, [r7]
   151d0:	ldmib	r7, {r0, r1, r6}
   151d4:	ldr	r5, [r7, #16]
   151d8:	ldr	r7, [r7, #20]
   151dc:	stm	sp, {r0, r1, r6}
   151e0:	str	r5, [sp, #12]
   151e4:	str	r7, [sp, #16]
   151e8:	b	15228 <__mempcpy_chk@plt+0x4200>
   151ec:	movw	r1, #28459	; 0x6f2b
   151f0:	movt	r1, #1
   151f4:	mov	r0, #0
   151f8:	mov	r2, #5
   151fc:	bl	10e48 <dcgettext@plt>
   15200:	mov	r2, r0
   15204:	ldr	r3, [r7]
   15208:	ldmib	r7, {r0, r1, r6}
   1520c:	ldr	r5, [r7, #16]
   15210:	ldr	r4, [r7, #20]
   15214:	ldr	r7, [r7, #24]
   15218:	stm	sp, {r0, r1, r6}
   1521c:	str	r5, [sp, #12]
   15220:	str	r4, [sp, #16]
   15224:	str	r7, [sp, #20]
   15228:	mov	r0, r8
   1522c:	mov	r1, #1
   15230:	b	152dc <__mempcpy_chk@plt+0x42b4>
   15234:	movw	r1, #28551	; 0x6f87
   15238:	movt	r1, #1
   1523c:	mov	r0, #0
   15240:	mov	r2, #5
   15244:	bl	10e48 <dcgettext@plt>
   15248:	mov	ip, r0
   1524c:	ldr	r3, [r7]
   15250:	ldr	r0, [r7, #4]
   15254:	ldr	r1, [r7, #8]
   15258:	ldr	r6, [r7, #12]
   1525c:	ldr	r5, [r7, #16]
   15260:	ldr	r4, [r7, #20]
   15264:	ldr	r2, [r7, #24]
   15268:	ldr	lr, [r7, #28]
   1526c:	ldr	r7, [r7, #32]
   15270:	stm	sp, {r0, r1, r6}
   15274:	str	r5, [sp, #12]
   15278:	str	r4, [sp, #16]
   1527c:	str	r2, [sp, #20]
   15280:	str	lr, [sp, #24]
   15284:	str	r7, [sp, #28]
   15288:	b	152d0 <__mempcpy_chk@plt+0x42a8>
   1528c:	movw	r1, #28503	; 0x6f57
   15290:	movt	r1, #1
   15294:	mov	r0, #0
   15298:	mov	r2, #5
   1529c:	bl	10e48 <dcgettext@plt>
   152a0:	mov	ip, r0
   152a4:	ldr	r3, [r7]
   152a8:	ldmib	r7, {r0, r1, r6}
   152ac:	ldr	r5, [r7, #16]
   152b0:	ldr	r4, [r7, #20]
   152b4:	ldr	r2, [r7, #24]
   152b8:	ldr	r7, [r7, #28]
   152bc:	stm	sp, {r0, r1, r6}
   152c0:	str	r5, [sp, #12]
   152c4:	str	r4, [sp, #16]
   152c8:	str	r2, [sp, #20]
   152cc:	str	r7, [sp, #24]
   152d0:	mov	r0, r8
   152d4:	mov	r1, #1
   152d8:	mov	r2, ip
   152dc:	bl	10f98 <__fprintf_chk@plt>
   152e0:	sub	sp, fp, #24
   152e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   152e8:	push	{r4, sl, fp, lr}
   152ec:	add	fp, sp, #8
   152f0:	sub	sp, sp, #8
   152f4:	mov	lr, #0
   152f8:	ldr	ip, [fp, #8]
   152fc:	ldr	r4, [ip, lr, lsl #2]
   15300:	add	lr, lr, #1
   15304:	cmp	r4, #0
   15308:	bne	152fc <__mempcpy_chk@plt+0x42d4>
   1530c:	sub	r4, lr, #1
   15310:	str	ip, [sp]
   15314:	str	r4, [sp, #4]
   15318:	bl	14fb4 <__mempcpy_chk@plt+0x3f8c>
   1531c:	sub	sp, fp, #8
   15320:	pop	{r4, sl, fp, pc}
   15324:	push	{r4, r5, fp, lr}
   15328:	add	fp, sp, #8
   1532c:	sub	sp, sp, #48	; 0x30
   15330:	mov	ip, #0
   15334:	ldr	r4, [fp, #8]
   15338:	add	lr, sp, #8
   1533c:	ldr	r5, [r4]
   15340:	str	r5, [lr, ip, lsl #2]
   15344:	cmp	r5, #0
   15348:	beq	15360 <__mempcpy_chk@plt+0x4338>
   1534c:	add	ip, ip, #1
   15350:	add	r4, r4, #4
   15354:	cmp	ip, #10
   15358:	bne	1533c <__mempcpy_chk@plt+0x4314>
   1535c:	mov	ip, #10
   15360:	str	lr, [sp]
   15364:	str	ip, [sp, #4]
   15368:	bl	14fb4 <__mempcpy_chk@plt+0x3f8c>
   1536c:	sub	sp, fp, #8
   15370:	pop	{r4, r5, fp, pc}
   15374:	push	{fp, lr}
   15378:	mov	fp, sp
   1537c:	sub	sp, sp, #8
   15380:	add	ip, fp, #8
   15384:	str	ip, [sp, #4]
   15388:	str	ip, [sp]
   1538c:	bl	15324 <__mempcpy_chk@plt+0x42fc>
   15390:	mov	sp, fp
   15394:	pop	{fp, pc}
   15398:	push	{fp, lr}
   1539c:	mov	fp, sp
   153a0:	movw	r0, #33092	; 0x8144
   153a4:	movt	r0, #2
   153a8:	ldr	r1, [r0]
   153ac:	movw	r0, #25792	; 0x64c0
   153b0:	movt	r0, #1
   153b4:	bl	10dd0 <fputs_unlocked@plt>
   153b8:	movw	r1, #28663	; 0x6ff7
   153bc:	movt	r1, #1
   153c0:	mov	r0, #0
   153c4:	mov	r2, #5
   153c8:	bl	10e48 <dcgettext@plt>
   153cc:	mov	r1, r0
   153d0:	movw	r2, #28683	; 0x700b
   153d4:	movt	r2, #1
   153d8:	mov	r0, #1
   153dc:	bl	10f80 <__printf_chk@plt>
   153e0:	movw	r1, #28705	; 0x7021
   153e4:	movt	r1, #1
   153e8:	mov	r0, #0
   153ec:	mov	r2, #5
   153f0:	bl	10e48 <dcgettext@plt>
   153f4:	mov	r1, r0
   153f8:	movw	r2, #26893	; 0x690d
   153fc:	movt	r2, #1
   15400:	movw	r3, #27103	; 0x69df
   15404:	movt	r3, #1
   15408:	mov	r0, #1
   1540c:	bl	10f80 <__printf_chk@plt>
   15410:	movw	r1, #28725	; 0x7035
   15414:	movt	r1, #1
   15418:	mov	r0, #0
   1541c:	mov	r2, #5
   15420:	bl	10e48 <dcgettext@plt>
   15424:	mov	r1, r0
   15428:	movw	r2, #28764	; 0x705c
   1542c:	movt	r2, #1
   15430:	mov	r0, #1
   15434:	pop	{fp, lr}
   15438:	b	10f80 <__printf_chk@plt>
   1543c:	b	15440 <__mempcpy_chk@plt+0x4418>
   15440:	push	{r4, r5, r6, sl, fp, lr}
   15444:	add	fp, sp, #16
   15448:	mov	r4, r2
   1544c:	mov	r5, r1
   15450:	mov	r6, r0
   15454:	bl	160e8 <__mempcpy_chk@plt+0x50c0>
   15458:	cmp	r0, #0
   1545c:	popne	{r4, r5, r6, sl, fp, pc}
   15460:	cmp	r6, #0
   15464:	beq	15478 <__mempcpy_chk@plt+0x4450>
   15468:	cmp	r5, #0
   1546c:	cmpne	r4, #0
   15470:	bne	15478 <__mempcpy_chk@plt+0x4450>
   15474:	pop	{r4, r5, r6, sl, fp, pc}
   15478:	bl	15804 <__mempcpy_chk@plt+0x47dc>
   1547c:	push	{fp, lr}
   15480:	mov	fp, sp
   15484:	bl	1589c <__mempcpy_chk@plt+0x4874>
   15488:	pop	{fp, lr}
   1548c:	b	15490 <__mempcpy_chk@plt+0x4468>
   15490:	cmp	r0, #0
   15494:	bxne	lr
   15498:	push	{fp, lr}
   1549c:	mov	fp, sp
   154a0:	bl	15804 <__mempcpy_chk@plt+0x47dc>
   154a4:	push	{fp, lr}
   154a8:	mov	fp, sp
   154ac:	bl	16018 <__mempcpy_chk@plt+0x4ff0>
   154b0:	pop	{fp, lr}
   154b4:	b	15490 <__mempcpy_chk@plt+0x4468>
   154b8:	b	1547c <__mempcpy_chk@plt+0x4454>
   154bc:	push	{r4, r5, fp, lr}
   154c0:	add	fp, sp, #8
   154c4:	mov	r4, r1
   154c8:	mov	r5, r0
   154cc:	bl	158cc <__mempcpy_chk@plt+0x48a4>
   154d0:	cmp	r0, #0
   154d4:	popne	{r4, r5, fp, pc}
   154d8:	cmp	r5, #0
   154dc:	beq	154ec <__mempcpy_chk@plt+0x44c4>
   154e0:	cmp	r4, #0
   154e4:	bne	154ec <__mempcpy_chk@plt+0x44c4>
   154e8:	pop	{r4, r5, fp, pc}
   154ec:	bl	15804 <__mempcpy_chk@plt+0x47dc>
   154f0:	push	{fp, lr}
   154f4:	mov	fp, sp
   154f8:	bl	1601c <__mempcpy_chk@plt+0x4ff4>
   154fc:	pop	{fp, lr}
   15500:	b	15490 <__mempcpy_chk@plt+0x4468>
   15504:	push	{fp, lr}
   15508:	mov	fp, sp
   1550c:	bl	1602c <__mempcpy_chk@plt+0x5004>
   15510:	pop	{fp, lr}
   15514:	b	15490 <__mempcpy_chk@plt+0x4468>
   15518:	mov	r2, r1
   1551c:	mov	r1, r0
   15520:	mov	r0, #0
   15524:	b	15440 <__mempcpy_chk@plt+0x4418>
   15528:	mov	r2, r1
   1552c:	mov	r1, r0
   15530:	mov	r0, #0
   15534:	b	15504 <__mempcpy_chk@plt+0x44dc>
   15538:	mov	r2, #1
   1553c:	b	15540 <__mempcpy_chk@plt+0x4518>
   15540:	push	{r4, r5, fp, lr}
   15544:	add	fp, sp, #8
   15548:	mov	r4, r1
   1554c:	ldr	r5, [r1]
   15550:	cmp	r0, #0
   15554:	beq	1556c <__mempcpy_chk@plt+0x4544>
   15558:	mov	r1, #1
   1555c:	add	r1, r1, r5, lsr #1
   15560:	adds	r5, r5, r1
   15564:	bcc	15584 <__mempcpy_chk@plt+0x455c>
   15568:	bl	15804 <__mempcpy_chk@plt+0x47dc>
   1556c:	cmp	r5, #0
   15570:	bne	15584 <__mempcpy_chk@plt+0x455c>
   15574:	mov	r1, #64	; 0x40
   15578:	udiv	r5, r1, r2
   1557c:	cmp	r2, #64	; 0x40
   15580:	addhi	r5, r5, #1
   15584:	mov	r1, r5
   15588:	bl	15440 <__mempcpy_chk@plt+0x4418>
   1558c:	str	r5, [r4]
   15590:	pop	{r4, r5, fp, pc}
   15594:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15598:	add	fp, sp, #24
   1559c:	mov	r8, r1
   155a0:	ldr	r6, [r1]
   155a4:	add	r1, r6, r6, asr #1
   155a8:	cmp	r1, r6
   155ac:	mvnvs	r1, #-2147483648	; 0x80000000
   155b0:	cmp	r1, r3
   155b4:	mov	r5, r1
   155b8:	movgt	r5, r3
   155bc:	cmn	r3, #1
   155c0:	movle	r5, r1
   155c4:	ldr	r4, [fp, #8]
   155c8:	cmn	r4, #1
   155cc:	ble	155f4 <__mempcpy_chk@plt+0x45cc>
   155d0:	cmp	r4, #0
   155d4:	beq	15648 <__mempcpy_chk@plt+0x4620>
   155d8:	cmn	r5, #1
   155dc:	ble	1561c <__mempcpy_chk@plt+0x45f4>
   155e0:	mvn	r7, #-2147483648	; 0x80000000
   155e4:	udiv	r1, r7, r4
   155e8:	cmp	r1, r5
   155ec:	bge	15648 <__mempcpy_chk@plt+0x4620>
   155f0:	b	15658 <__mempcpy_chk@plt+0x4630>
   155f4:	cmn	r5, #1
   155f8:	ble	15638 <__mempcpy_chk@plt+0x4610>
   155fc:	cmn	r4, #1
   15600:	beq	15648 <__mempcpy_chk@plt+0x4620>
   15604:	mov	r1, #-2147483648	; 0x80000000
   15608:	sdiv	r1, r1, r4
   1560c:	mvn	r7, #-2147483648	; 0x80000000
   15610:	cmp	r1, r5
   15614:	bge	15648 <__mempcpy_chk@plt+0x4620>
   15618:	b	15658 <__mempcpy_chk@plt+0x4630>
   1561c:	beq	15648 <__mempcpy_chk@plt+0x4620>
   15620:	mov	r1, #-2147483648	; 0x80000000
   15624:	sdiv	r1, r1, r5
   15628:	mvn	r7, #-2147483648	; 0x80000000
   1562c:	cmp	r1, r4
   15630:	bge	15648 <__mempcpy_chk@plt+0x4620>
   15634:	b	15658 <__mempcpy_chk@plt+0x4630>
   15638:	mvn	r7, #-2147483648	; 0x80000000
   1563c:	sdiv	r1, r7, r4
   15640:	cmp	r5, r1
   15644:	blt	15658 <__mempcpy_chk@plt+0x4630>
   15648:	mul	r1, r5, r4
   1564c:	mov	r7, #64	; 0x40
   15650:	cmp	r1, #63	; 0x3f
   15654:	bgt	15660 <__mempcpy_chk@plt+0x4638>
   15658:	sdiv	r5, r7, r4
   1565c:	mul	r1, r5, r4
   15660:	cmp	r0, #0
   15664:	moveq	r7, #0
   15668:	streq	r7, [r8]
   1566c:	sub	r7, r5, r6
   15670:	cmp	r7, r2
   15674:	bge	15720 <__mempcpy_chk@plt+0x46f8>
   15678:	add	r5, r6, r2
   1567c:	mov	r1, #0
   15680:	cmp	r5, r3
   15684:	mov	r2, #0
   15688:	movwgt	r2, #1
   1568c:	cmn	r3, #1
   15690:	movwgt	r1, #1
   15694:	cmp	r5, r6
   15698:	bvs	15708 <__mempcpy_chk@plt+0x46e0>
   1569c:	ands	r1, r1, r2
   156a0:	bne	15708 <__mempcpy_chk@plt+0x46e0>
   156a4:	cmn	r4, #1
   156a8:	ble	156d0 <__mempcpy_chk@plt+0x46a8>
   156ac:	cmp	r4, #0
   156b0:	beq	1571c <__mempcpy_chk@plt+0x46f4>
   156b4:	cmn	r5, #1
   156b8:	ble	156f4 <__mempcpy_chk@plt+0x46cc>
   156bc:	mvn	r1, #-2147483648	; 0x80000000
   156c0:	udiv	r1, r1, r4
   156c4:	cmp	r1, r5
   156c8:	bge	1571c <__mempcpy_chk@plt+0x46f4>
   156cc:	b	15708 <__mempcpy_chk@plt+0x46e0>
   156d0:	cmn	r5, #1
   156d4:	ble	1570c <__mempcpy_chk@plt+0x46e4>
   156d8:	cmn	r4, #1
   156dc:	beq	1571c <__mempcpy_chk@plt+0x46f4>
   156e0:	mov	r1, #-2147483648	; 0x80000000
   156e4:	sdiv	r1, r1, r4
   156e8:	cmp	r1, r5
   156ec:	bge	1571c <__mempcpy_chk@plt+0x46f4>
   156f0:	b	15708 <__mempcpy_chk@plt+0x46e0>
   156f4:	beq	1571c <__mempcpy_chk@plt+0x46f4>
   156f8:	mov	r1, #-2147483648	; 0x80000000
   156fc:	sdiv	r1, r1, r5
   15700:	cmp	r1, r4
   15704:	bge	1571c <__mempcpy_chk@plt+0x46f4>
   15708:	bl	15804 <__mempcpy_chk@plt+0x47dc>
   1570c:	mvn	r1, #-2147483648	; 0x80000000
   15710:	sdiv	r1, r1, r4
   15714:	cmp	r5, r1
   15718:	blt	15708 <__mempcpy_chk@plt+0x46e0>
   1571c:	mul	r1, r5, r4
   15720:	bl	154bc <__mempcpy_chk@plt+0x4494>
   15724:	str	r5, [r8]
   15728:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1572c:	mov	r1, #1
   15730:	b	15734 <__mempcpy_chk@plt+0x470c>
   15734:	push	{fp, lr}
   15738:	mov	fp, sp
   1573c:	bl	15848 <__mempcpy_chk@plt+0x4820>
   15740:	pop	{fp, lr}
   15744:	b	15490 <__mempcpy_chk@plt+0x4468>
   15748:	mov	r1, #1
   1574c:	b	15750 <__mempcpy_chk@plt+0x4728>
   15750:	push	{fp, lr}
   15754:	mov	fp, sp
   15758:	bl	16028 <__mempcpy_chk@plt+0x5000>
   1575c:	pop	{fp, lr}
   15760:	b	15490 <__mempcpy_chk@plt+0x4468>
   15764:	push	{r4, r5, fp, lr}
   15768:	add	fp, sp, #8
   1576c:	mov	r4, r1
   15770:	mov	r5, r0
   15774:	mov	r0, r1
   15778:	bl	1547c <__mempcpy_chk@plt+0x4454>
   1577c:	mov	r1, r5
   15780:	mov	r2, r4
   15784:	pop	{r4, r5, fp, lr}
   15788:	b	10e30 <memcpy@plt>
   1578c:	push	{r4, r5, fp, lr}
   15790:	add	fp, sp, #8
   15794:	mov	r4, r1
   15798:	mov	r5, r0
   1579c:	mov	r0, r1
   157a0:	bl	154a4 <__mempcpy_chk@plt+0x447c>
   157a4:	mov	r1, r5
   157a8:	mov	r2, r4
   157ac:	pop	{r4, r5, fp, lr}
   157b0:	b	10e30 <memcpy@plt>
   157b4:	push	{r4, r5, fp, lr}
   157b8:	add	fp, sp, #8
   157bc:	mov	r4, r1
   157c0:	mov	r5, r0
   157c4:	add	r0, r1, #1
   157c8:	bl	154a4 <__mempcpy_chk@plt+0x447c>
   157cc:	mov	r1, #0
   157d0:	strb	r1, [r0, r4]
   157d4:	mov	r1, r5
   157d8:	mov	r2, r4
   157dc:	pop	{r4, r5, fp, lr}
   157e0:	b	10e30 <memcpy@plt>
   157e4:	push	{r4, sl, fp, lr}
   157e8:	add	fp, sp, #8
   157ec:	mov	r4, r0
   157f0:	bl	10f50 <strlen@plt>
   157f4:	add	r1, r0, #1
   157f8:	mov	r0, r4
   157fc:	pop	{r4, sl, fp, lr}
   15800:	b	15764 <__mempcpy_chk@plt+0x473c>
   15804:	push	{fp, lr}
   15808:	mov	fp, sp
   1580c:	movw	r0, #33004	; 0x80ec
   15810:	movt	r0, #2
   15814:	ldr	r4, [r0]
   15818:	movw	r1, #28840	; 0x70a8
   1581c:	movt	r1, #1
   15820:	mov	r0, #0
   15824:	mov	r2, #5
   15828:	bl	10e48 <dcgettext@plt>
   1582c:	mov	r3, r0
   15830:	movw	r2, #27673	; 0x6c19
   15834:	movt	r2, #1
   15838:	mov	r0, r4
   1583c:	mov	r1, #0
   15840:	bl	10ed8 <error@plt>
   15844:	bl	11004 <abort@plt>
   15848:	clz	r2, r1
   1584c:	lsr	r2, r2, #5
   15850:	clz	r3, r0
   15854:	lsr	r3, r3, #5
   15858:	orrs	r2, r3, r2
   1585c:	movwne	r1, #1
   15860:	movwne	r0, #1
   15864:	cmp	r1, #0
   15868:	beq	15898 <__mempcpy_chk@plt+0x4870>
   1586c:	mvn	r2, #-2147483648	; 0x80000000
   15870:	udiv	r2, r2, r1
   15874:	cmp	r2, r0
   15878:	bcs	15898 <__mempcpy_chk@plt+0x4870>
   1587c:	push	{fp, lr}
   15880:	mov	fp, sp
   15884:	bl	10f5c <__errno_location@plt>
   15888:	mov	r1, #12
   1588c:	str	r1, [r0]
   15890:	mov	r0, #0
   15894:	pop	{fp, pc}
   15898:	b	10dc4 <calloc@plt>
   1589c:	cmp	r0, #0
   158a0:	movweq	r0, #1
   158a4:	cmn	r0, #1
   158a8:	ble	158b0 <__mempcpy_chk@plt+0x4888>
   158ac:	b	10ee4 <malloc@plt>
   158b0:	push	{fp, lr}
   158b4:	mov	fp, sp
   158b8:	bl	10f5c <__errno_location@plt>
   158bc:	mov	r1, #12
   158c0:	str	r1, [r0]
   158c4:	mov	r0, #0
   158c8:	pop	{fp, pc}
   158cc:	push	{fp, lr}
   158d0:	mov	fp, sp
   158d4:	cmp	r0, #0
   158d8:	beq	158f4 <__mempcpy_chk@plt+0x48cc>
   158dc:	cmp	r1, #0
   158e0:	beq	15900 <__mempcpy_chk@plt+0x48d8>
   158e4:	cmn	r1, #1
   158e8:	ble	1590c <__mempcpy_chk@plt+0x48e4>
   158ec:	pop	{fp, lr}
   158f0:	b	10e54 <realloc@plt>
   158f4:	mov	r0, r1
   158f8:	pop	{fp, lr}
   158fc:	b	1589c <__mempcpy_chk@plt+0x4874>
   15900:	bl	121f8 <__mempcpy_chk@plt+0x11d0>
   15904:	mov	r0, #0
   15908:	pop	{fp, pc}
   1590c:	bl	10f5c <__errno_location@plt>
   15910:	mov	r1, #12
   15914:	str	r1, [r0]
   15918:	mov	r0, #0
   1591c:	pop	{fp, pc}
   15920:	push	{r4, r5, r6, sl, fp, lr}
   15924:	add	fp, sp, #16
   15928:	rsb	lr, r2, #64	; 0x40
   1592c:	lsr	ip, r0, lr
   15930:	rsb	r3, lr, #32
   15934:	orr	r3, ip, r1, lsl r3
   15938:	rsbs	r5, r2, #32
   1593c:	lsrpl	r3, r1, r5
   15940:	lsl	r4, r0, r2
   15944:	subs	r6, r2, #32
   15948:	movwpl	r4, #0
   1594c:	orr	ip, r3, r4
   15950:	lsr	r3, r0, r5
   15954:	orr	r2, r3, r1, lsl r2
   15958:	lslpl	r2, r0, r6
   1595c:	lsr	r0, r1, lr
   15960:	cmp	r5, #0
   15964:	movwpl	r0, #0
   15968:	orr	r1, r0, r2
   1596c:	mov	r0, ip
   15970:	pop	{r4, r5, r6, sl, fp, pc}
   15974:	push	{r4, r5, fp, lr}
   15978:	add	fp, sp, #8
   1597c:	lsr	ip, r0, r2
   15980:	rsb	r3, r2, #32
   15984:	orr	ip, ip, r1, lsl r3
   15988:	subs	lr, r2, #32
   1598c:	lsrpl	ip, r1, lr
   15990:	rsb	r4, r2, #64	; 0x40
   15994:	lsl	r5, r0, r4
   15998:	cmp	r3, #0
   1599c:	movwpl	r5, #0
   159a0:	orr	ip, r5, ip
   159a4:	rsb	r5, r4, #32
   159a8:	lsr	r5, r0, r5
   159ac:	orr	r4, r5, r1, lsl r4
   159b0:	cmp	r3, #0
   159b4:	lslpl	r4, r0, r3
   159b8:	lsr	r0, r1, r2
   159bc:	cmp	lr, #0
   159c0:	movwpl	r0, #0
   159c4:	orr	r1, r4, r0
   159c8:	mov	r0, ip
   159cc:	pop	{r4, r5, fp, pc}
   159d0:	rsb	r1, r1, #32
   159d4:	ror	r0, r0, r1
   159d8:	bx	lr
   159dc:	ror	r0, r0, r1
   159e0:	bx	lr
   159e4:	rsb	r1, r1, #32
   159e8:	ror	r0, r0, r1
   159ec:	bx	lr
   159f0:	ror	r0, r0, r1
   159f4:	bx	lr
   159f8:	and	r2, r1, #15
   159fc:	lsl	r2, r0, r2
   15a00:	rsb	r1, r1, #0
   15a04:	and	r1, r1, #15
   15a08:	orr	r0, r2, r0, lsr r1
   15a0c:	uxth	r0, r0
   15a10:	bx	lr
   15a14:	rsb	r2, r1, #0
   15a18:	and	r2, r2, #15
   15a1c:	lsl	r2, r0, r2
   15a20:	and	r1, r1, #15
   15a24:	orr	r0, r2, r0, lsr r1
   15a28:	uxth	r0, r0
   15a2c:	bx	lr
   15a30:	and	r2, r1, #7
   15a34:	lsl	r2, r0, r2
   15a38:	rsb	r1, r1, #0
   15a3c:	and	r1, r1, #7
   15a40:	orr	r0, r2, r0, lsr r1
   15a44:	uxtb	r0, r0
   15a48:	bx	lr
   15a4c:	rsb	r2, r1, #0
   15a50:	and	r2, r2, #7
   15a54:	lsl	r2, r0, r2
   15a58:	and	r1, r1, #7
   15a5c:	orr	r0, r2, r0, lsr r1
   15a60:	uxtb	r0, r0
   15a64:	bx	lr
   15a68:	mov	r1, r0
   15a6c:	sub	r2, r0, #65	; 0x41
   15a70:	mov	r0, #1
   15a74:	cmp	r2, #26
   15a78:	subcs	r2, r1, #97	; 0x61
   15a7c:	cmpcs	r2, #26
   15a80:	bcs	15a88 <__mempcpy_chk@plt+0x4a60>
   15a84:	bx	lr
   15a88:	sub	r1, r1, #48	; 0x30
   15a8c:	cmp	r1, #10
   15a90:	movcs	r0, #0
   15a94:	bx	lr
   15a98:	mov	r1, r0
   15a9c:	sub	r2, r0, #65	; 0x41
   15aa0:	mov	r0, #1
   15aa4:	cmp	r2, #26
   15aa8:	subcs	r1, r1, #97	; 0x61
   15aac:	cmpcs	r1, #26
   15ab0:	movcs	r0, #0
   15ab4:	bx	lr
   15ab8:	mov	r1, #0
   15abc:	cmp	r0, #128	; 0x80
   15ac0:	movwcc	r1, #1
   15ac4:	mov	r0, r1
   15ac8:	bx	lr
   15acc:	sub	r1, r0, #9
   15ad0:	clz	r1, r1
   15ad4:	lsr	r1, r1, #5
   15ad8:	sub	r0, r0, #32
   15adc:	clz	r0, r0
   15ae0:	lsr	r0, r0, #5
   15ae4:	orr	r0, r0, r1
   15ae8:	bx	lr
   15aec:	mov	r1, r0
   15af0:	mov	r0, #1
   15af4:	cmp	r1, #32
   15af8:	bxcc	lr
   15afc:	cmp	r1, #127	; 0x7f
   15b00:	movne	r0, #0
   15b04:	bx	lr
   15b08:	sub	r1, r0, #48	; 0x30
   15b0c:	mov	r0, #0
   15b10:	cmp	r1, #10
   15b14:	movwcc	r0, #1
   15b18:	bx	lr
   15b1c:	sub	r1, r0, #33	; 0x21
   15b20:	mov	r0, #0
   15b24:	cmp	r1, #94	; 0x5e
   15b28:	movwcc	r0, #1
   15b2c:	bx	lr
   15b30:	sub	r1, r0, #97	; 0x61
   15b34:	mov	r0, #0
   15b38:	cmp	r1, #26
   15b3c:	movwcc	r0, #1
   15b40:	bx	lr
   15b44:	sub	r1, r0, #32
   15b48:	mov	r0, #0
   15b4c:	cmp	r1, #95	; 0x5f
   15b50:	movwcc	r0, #1
   15b54:	bx	lr
   15b58:	sub	r1, r0, #33	; 0x21
   15b5c:	cmp	r1, #93	; 0x5d
   15b60:	bhi	15cec <__mempcpy_chk@plt+0x4cc4>
   15b64:	mov	r0, #1
   15b68:	add	r2, pc, #0
   15b6c:	ldr	pc, [r2, r1, lsl #2]
   15b70:	andeq	r5, r1, r8, ror #25
   15b74:	andeq	r5, r1, r8, ror #25
   15b78:	andeq	r5, r1, r8, ror #25
   15b7c:	andeq	r5, r1, r8, ror #25
   15b80:	andeq	r5, r1, r8, ror #25
   15b84:	andeq	r5, r1, r8, ror #25
   15b88:	andeq	r5, r1, r8, ror #25
   15b8c:	andeq	r5, r1, r8, ror #25
   15b90:	andeq	r5, r1, r8, ror #25
   15b94:	andeq	r5, r1, r8, ror #25
   15b98:	andeq	r5, r1, r8, ror #25
   15b9c:	andeq	r5, r1, r8, ror #25
   15ba0:	andeq	r5, r1, r8, ror #25
   15ba4:	andeq	r5, r1, r8, ror #25
   15ba8:	andeq	r5, r1, r8, ror #25
   15bac:	andeq	r5, r1, ip, ror #25
   15bb0:	andeq	r5, r1, ip, ror #25
   15bb4:	andeq	r5, r1, ip, ror #25
   15bb8:	andeq	r5, r1, ip, ror #25
   15bbc:	andeq	r5, r1, ip, ror #25
   15bc0:	andeq	r5, r1, ip, ror #25
   15bc4:	andeq	r5, r1, ip, ror #25
   15bc8:	andeq	r5, r1, ip, ror #25
   15bcc:	andeq	r5, r1, ip, ror #25
   15bd0:	andeq	r5, r1, ip, ror #25
   15bd4:	andeq	r5, r1, r8, ror #25
   15bd8:	andeq	r5, r1, r8, ror #25
   15bdc:	andeq	r5, r1, r8, ror #25
   15be0:	andeq	r5, r1, r8, ror #25
   15be4:	andeq	r5, r1, r8, ror #25
   15be8:	andeq	r5, r1, r8, ror #25
   15bec:	andeq	r5, r1, r8, ror #25
   15bf0:	andeq	r5, r1, ip, ror #25
   15bf4:	andeq	r5, r1, ip, ror #25
   15bf8:	andeq	r5, r1, ip, ror #25
   15bfc:	andeq	r5, r1, ip, ror #25
   15c00:	andeq	r5, r1, ip, ror #25
   15c04:	andeq	r5, r1, ip, ror #25
   15c08:	andeq	r5, r1, ip, ror #25
   15c0c:	andeq	r5, r1, ip, ror #25
   15c10:	andeq	r5, r1, ip, ror #25
   15c14:	andeq	r5, r1, ip, ror #25
   15c18:	andeq	r5, r1, ip, ror #25
   15c1c:	andeq	r5, r1, ip, ror #25
   15c20:	andeq	r5, r1, ip, ror #25
   15c24:	andeq	r5, r1, ip, ror #25
   15c28:	andeq	r5, r1, ip, ror #25
   15c2c:	andeq	r5, r1, ip, ror #25
   15c30:	andeq	r5, r1, ip, ror #25
   15c34:	andeq	r5, r1, ip, ror #25
   15c38:	andeq	r5, r1, ip, ror #25
   15c3c:	andeq	r5, r1, ip, ror #25
   15c40:	andeq	r5, r1, ip, ror #25
   15c44:	andeq	r5, r1, ip, ror #25
   15c48:	andeq	r5, r1, ip, ror #25
   15c4c:	andeq	r5, r1, ip, ror #25
   15c50:	andeq	r5, r1, ip, ror #25
   15c54:	andeq	r5, r1, ip, ror #25
   15c58:	andeq	r5, r1, r8, ror #25
   15c5c:	andeq	r5, r1, r8, ror #25
   15c60:	andeq	r5, r1, r8, ror #25
   15c64:	andeq	r5, r1, r8, ror #25
   15c68:	andeq	r5, r1, r8, ror #25
   15c6c:	andeq	r5, r1, r8, ror #25
   15c70:	andeq	r5, r1, ip, ror #25
   15c74:	andeq	r5, r1, ip, ror #25
   15c78:	andeq	r5, r1, ip, ror #25
   15c7c:	andeq	r5, r1, ip, ror #25
   15c80:	andeq	r5, r1, ip, ror #25
   15c84:	andeq	r5, r1, ip, ror #25
   15c88:	andeq	r5, r1, ip, ror #25
   15c8c:	andeq	r5, r1, ip, ror #25
   15c90:	andeq	r5, r1, ip, ror #25
   15c94:	andeq	r5, r1, ip, ror #25
   15c98:	andeq	r5, r1, ip, ror #25
   15c9c:	andeq	r5, r1, ip, ror #25
   15ca0:	andeq	r5, r1, ip, ror #25
   15ca4:	andeq	r5, r1, ip, ror #25
   15ca8:	andeq	r5, r1, ip, ror #25
   15cac:	andeq	r5, r1, ip, ror #25
   15cb0:	andeq	r5, r1, ip, ror #25
   15cb4:	andeq	r5, r1, ip, ror #25
   15cb8:	andeq	r5, r1, ip, ror #25
   15cbc:	andeq	r5, r1, ip, ror #25
   15cc0:	andeq	r5, r1, ip, ror #25
   15cc4:	andeq	r5, r1, ip, ror #25
   15cc8:	andeq	r5, r1, ip, ror #25
   15ccc:	andeq	r5, r1, ip, ror #25
   15cd0:	andeq	r5, r1, ip, ror #25
   15cd4:	andeq	r5, r1, ip, ror #25
   15cd8:	andeq	r5, r1, r8, ror #25
   15cdc:	andeq	r5, r1, r8, ror #25
   15ce0:	andeq	r5, r1, r8, ror #25
   15ce4:	andeq	r5, r1, r8, ror #25
   15ce8:	bx	lr
   15cec:	mov	r0, #0
   15cf0:	bx	lr
   15cf4:	sub	r0, r0, #9
   15cf8:	cmp	r0, #23
   15cfc:	movhi	r0, #0
   15d00:	bxhi	lr
   15d04:	bic	r0, r0, #-16777216	; 0xff000000
   15d08:	movw	r1, #31
   15d0c:	movt	r1, #128	; 0x80
   15d10:	mov	r2, #1
   15d14:	and	r0, r2, r1, lsr r0
   15d18:	bx	lr
   15d1c:	sub	r1, r0, #65	; 0x41
   15d20:	mov	r0, #0
   15d24:	cmp	r1, #26
   15d28:	movwcc	r0, #1
   15d2c:	bx	lr
   15d30:	mov	r1, r0
   15d34:	sub	r2, r0, #48	; 0x30
   15d38:	mov	r0, #1
   15d3c:	cmp	r2, #22
   15d40:	bhi	15d58 <__mempcpy_chk@plt+0x4d30>
   15d44:	mov	ip, #1
   15d48:	movw	r3, #1023	; 0x3ff
   15d4c:	movt	r3, #126	; 0x7e
   15d50:	tst	r3, ip, lsl r2
   15d54:	bxne	lr
   15d58:	sub	r1, r1, #97	; 0x61
   15d5c:	cmp	r1, #6
   15d60:	movcs	r0, #0
   15d64:	bxcs	lr
   15d68:	bx	lr
   15d6c:	sub	r1, r0, #65	; 0x41
   15d70:	cmp	r1, #26
   15d74:	addcc	r0, r0, #32
   15d78:	bx	lr
   15d7c:	sub	r1, r0, #97	; 0x61
   15d80:	cmp	r1, #26
   15d84:	subcc	r0, r0, #32
   15d88:	bx	lr
   15d8c:	push	{r4, r5, r6, sl, fp, lr}
   15d90:	add	fp, sp, #16
   15d94:	mov	r4, r0
   15d98:	bl	10eb4 <__fpending@plt>
   15d9c:	mov	r5, r0
   15da0:	mov	r0, r4
   15da4:	bl	10ec0 <ferror_unlocked@plt>
   15da8:	mov	r6, r0
   15dac:	mov	r0, r4
   15db0:	bl	15e10 <__mempcpy_chk@plt+0x4de8>
   15db4:	cmp	r6, #0
   15db8:	beq	15ddc <__mempcpy_chk@plt+0x4db4>
   15dbc:	mvn	r4, #0
   15dc0:	cmp	r0, #0
   15dc4:	bne	15e08 <__mempcpy_chk@plt+0x4de0>
   15dc8:	bl	10f5c <__errno_location@plt>
   15dcc:	mov	r1, #0
   15dd0:	str	r1, [r0]
   15dd4:	mov	r0, r4
   15dd8:	pop	{r4, r5, r6, sl, fp, pc}
   15ddc:	cmp	r0, #0
   15de0:	mov	r4, r0
   15de4:	mvnne	r4, #0
   15de8:	cmp	r5, #0
   15dec:	bne	15e08 <__mempcpy_chk@plt+0x4de0>
   15df0:	cmp	r0, #0
   15df4:	beq	15e08 <__mempcpy_chk@plt+0x4de0>
   15df8:	bl	10f5c <__errno_location@plt>
   15dfc:	ldr	r0, [r0]
   15e00:	subs	r4, r0, #9
   15e04:	mvnne	r4, #0
   15e08:	mov	r0, r4
   15e0c:	pop	{r4, r5, r6, sl, fp, pc}
   15e10:	push	{r4, r5, fp, lr}
   15e14:	add	fp, sp, #8
   15e18:	sub	sp, sp, #8
   15e1c:	mov	r4, r0
   15e20:	bl	10f8c <fileno@plt>
   15e24:	cmn	r0, #1
   15e28:	ble	15ea0 <__mempcpy_chk@plt+0x4e78>
   15e2c:	mov	r0, r4
   15e30:	bl	10efc <__freading@plt>
   15e34:	cmp	r0, #0
   15e38:	beq	15e64 <__mempcpy_chk@plt+0x4e3c>
   15e3c:	mov	r0, r4
   15e40:	bl	10f8c <fileno@plt>
   15e44:	mov	r1, #1
   15e48:	str	r1, [sp]
   15e4c:	mov	r2, #0
   15e50:	mov	r3, #0
   15e54:	bl	10e9c <lseek64@plt>
   15e58:	and	r0, r0, r1
   15e5c:	cmn	r0, #1
   15e60:	beq	15ea0 <__mempcpy_chk@plt+0x4e78>
   15e64:	mov	r0, r4
   15e68:	bl	15eb0 <__mempcpy_chk@plt+0x4e88>
   15e6c:	cmp	r0, #0
   15e70:	beq	15ea0 <__mempcpy_chk@plt+0x4e78>
   15e74:	bl	10f5c <__errno_location@plt>
   15e78:	ldr	r5, [r0]
   15e7c:	mov	r0, r4
   15e80:	bl	10fa4 <fclose@plt>
   15e84:	cmp	r5, #0
   15e88:	beq	15e98 <__mempcpy_chk@plt+0x4e70>
   15e8c:	bl	10f5c <__errno_location@plt>
   15e90:	str	r5, [r0]
   15e94:	mvn	r0, #0
   15e98:	sub	sp, fp, #8
   15e9c:	pop	{r4, r5, fp, pc}
   15ea0:	mov	r0, r4
   15ea4:	sub	sp, fp, #8
   15ea8:	pop	{r4, r5, fp, lr}
   15eac:	b	10fa4 <fclose@plt>
   15eb0:	push	{r4, sl, fp, lr}
   15eb4:	add	fp, sp, #8
   15eb8:	mov	r4, r0
   15ebc:	cmp	r0, #0
   15ec0:	beq	15ed8 <__mempcpy_chk@plt+0x4eb0>
   15ec4:	mov	r0, r4
   15ec8:	bl	10efc <__freading@plt>
   15ecc:	cmp	r0, #0
   15ed0:	movne	r0, r4
   15ed4:	blne	15ee4 <__mempcpy_chk@plt+0x4ebc>
   15ed8:	mov	r0, r4
   15edc:	pop	{r4, sl, fp, lr}
   15ee0:	b	10df4 <fflush@plt>
   15ee4:	push	{fp, lr}
   15ee8:	mov	fp, sp
   15eec:	sub	sp, sp, #8
   15ef0:	ldrb	r1, [r0, #1]
   15ef4:	tst	r1, #1
   15ef8:	beq	15f10 <__mempcpy_chk@plt+0x4ee8>
   15efc:	mov	r1, #1
   15f00:	str	r1, [sp]
   15f04:	mov	r2, #0
   15f08:	mov	r3, #0
   15f0c:	bl	15f18 <__mempcpy_chk@plt+0x4ef0>
   15f10:	mov	sp, fp
   15f14:	pop	{fp, pc}
   15f18:	push	{r4, r5, r6, r7, fp, lr}
   15f1c:	add	fp, sp, #16
   15f20:	sub	sp, sp, #8
   15f24:	mov	r5, r3
   15f28:	mov	r6, r2
   15f2c:	mov	r4, r0
   15f30:	ldr	r0, [r0, #4]
   15f34:	ldr	r1, [r4, #8]
   15f38:	cmp	r1, r0
   15f3c:	bne	15f58 <__mempcpy_chk@plt+0x4f30>
   15f40:	ldrd	r0, [r4, #16]
   15f44:	cmp	r1, r0
   15f48:	bne	15f58 <__mempcpy_chk@plt+0x4f30>
   15f4c:	ldr	r0, [r4, #36]	; 0x24
   15f50:	cmp	r0, #0
   15f54:	beq	15f70 <__mempcpy_chk@plt+0x4f48>
   15f58:	mov	r0, r4
   15f5c:	mov	r2, r6
   15f60:	mov	r3, r5
   15f64:	sub	sp, fp, #16
   15f68:	pop	{r4, r5, r6, r7, fp, lr}
   15f6c:	b	10fb0 <fseeko64@plt>
   15f70:	ldr	r7, [fp, #8]
   15f74:	mov	r0, r4
   15f78:	bl	10f8c <fileno@plt>
   15f7c:	str	r7, [sp]
   15f80:	mov	r2, r6
   15f84:	mov	r3, r5
   15f88:	bl	10e9c <lseek64@plt>
   15f8c:	and	r2, r0, r1
   15f90:	cmn	r2, #1
   15f94:	beq	15fb4 <__mempcpy_chk@plt+0x4f8c>
   15f98:	strd	r0, [r4, #80]	; 0x50
   15f9c:	ldr	r0, [r4]
   15fa0:	bic	r0, r0, #16
   15fa4:	str	r0, [r4]
   15fa8:	mov	r0, #0
   15fac:	sub	sp, fp, #16
   15fb0:	pop	{r4, r5, r6, r7, fp, pc}
   15fb4:	mvn	r0, #0
   15fb8:	sub	sp, fp, #16
   15fbc:	pop	{r4, r5, r6, r7, fp, pc}
   15fc0:	ldrb	r2, [r0]
   15fc4:	cmp	r2, #0
   15fc8:	beq	15fec <__mempcpy_chk@plt+0x4fc4>
   15fcc:	add	r3, r0, #1
   15fd0:	mov	r0, #0
   15fd4:	ror	r0, r0, #23
   15fd8:	uxtab	r0, r0, r2
   15fdc:	ldrb	r2, [r3], #1
   15fe0:	cmp	r2, #0
   15fe4:	bne	15fd4 <__mempcpy_chk@plt+0x4fac>
   15fe8:	b	15ff0 <__mempcpy_chk@plt+0x4fc8>
   15fec:	mov	r0, #0
   15ff0:	udiv	r2, r0, r1
   15ff4:	mls	r0, r2, r1, r0
   15ff8:	bx	lr
   15ffc:	push	{fp, lr}
   16000:	mov	fp, sp
   16004:	bl	10f5c <__errno_location@plt>
   16008:	mov	r1, #12
   1600c:	str	r1, [r0]
   16010:	mov	r0, #0
   16014:	pop	{fp, pc}
   16018:	b	1589c <__mempcpy_chk@plt+0x4874>
   1601c:	cmp	r1, #0
   16020:	orreq	r1, r1, #1
   16024:	b	158cc <__mempcpy_chk@plt+0x48a4>
   16028:	b	15848 <__mempcpy_chk@plt+0x4820>
   1602c:	clz	r3, r2
   16030:	lsr	ip, r3, #5
   16034:	clz	r3, r1
   16038:	lsr	r3, r3, #5
   1603c:	orrs	r3, r3, ip
   16040:	movwne	r1, #1
   16044:	movwne	r2, #1
   16048:	b	160e8 <__mempcpy_chk@plt+0x50c0>
   1604c:	push	{fp, lr}
   16050:	mov	fp, sp
   16054:	mov	r0, #14
   16058:	bl	10fd4 <nl_langinfo@plt>
   1605c:	movw	r1, #25793	; 0x64c1
   16060:	movt	r1, #1
   16064:	cmp	r0, #0
   16068:	movne	r1, r0
   1606c:	ldrb	r2, [r1]
   16070:	movw	r0, #28857	; 0x70b9
   16074:	movt	r0, #1
   16078:	cmp	r2, #0
   1607c:	movne	r0, r1
   16080:	pop	{fp, pc}
   16084:	push	{r4, r5, r6, r7, fp, lr}
   16088:	add	fp, sp, #16
   1608c:	sub	sp, sp, #8
   16090:	mov	r7, r2
   16094:	mov	r4, r1
   16098:	add	r5, sp, #4
   1609c:	cmp	r0, #0
   160a0:	movne	r5, r0
   160a4:	mov	r0, r5
   160a8:	bl	10ecc <mbrtowc@plt>
   160ac:	mov	r6, r0
   160b0:	cmp	r7, #0
   160b4:	beq	160dc <__mempcpy_chk@plt+0x50b4>
   160b8:	cmn	r6, #2
   160bc:	bcc	160dc <__mempcpy_chk@plt+0x50b4>
   160c0:	mov	r0, #0
   160c4:	bl	16124 <__mempcpy_chk@plt+0x50fc>
   160c8:	cmp	r0, #0
   160cc:	bne	160dc <__mempcpy_chk@plt+0x50b4>
   160d0:	ldrb	r0, [r4]
   160d4:	str	r0, [r5]
   160d8:	mov	r6, #1
   160dc:	mov	r0, r6
   160e0:	sub	sp, fp, #16
   160e4:	pop	{r4, r5, r6, r7, fp, pc}
   160e8:	cmp	r2, #0
   160ec:	beq	1611c <__mempcpy_chk@plt+0x50f4>
   160f0:	mvn	r3, #0
   160f4:	udiv	r3, r3, r2
   160f8:	cmp	r3, r1
   160fc:	bcs	1611c <__mempcpy_chk@plt+0x50f4>
   16100:	push	{fp, lr}
   16104:	mov	fp, sp
   16108:	bl	10f5c <__errno_location@plt>
   1610c:	mov	r1, #12
   16110:	str	r1, [r0]
   16114:	mov	r0, #0
   16118:	pop	{fp, pc}
   1611c:	mul	r1, r2, r1
   16120:	b	158cc <__mempcpy_chk@plt+0x48a4>
   16124:	push	{r4, sl, fp, lr}
   16128:	add	fp, sp, #8
   1612c:	sub	sp, sp, #264	; 0x108
   16130:	add	r1, sp, #7
   16134:	movw	r2, #257	; 0x101
   16138:	bl	16190 <__mempcpy_chk@plt+0x5168>
   1613c:	mov	r4, #0
   16140:	cmp	r0, #0
   16144:	bne	16184 <__mempcpy_chk@plt+0x515c>
   16148:	add	r0, sp, #7
   1614c:	movw	r1, #28863	; 0x70bf
   16150:	movt	r1, #1
   16154:	mov	r2, #2
   16158:	bl	10f44 <bcmp@plt>
   1615c:	cmp	r0, #0
   16160:	beq	16184 <__mempcpy_chk@plt+0x515c>
   16164:	add	r0, sp, #7
   16168:	movw	r1, #28865	; 0x70c1
   1616c:	movt	r1, #1
   16170:	mov	r2, #6
   16174:	bl	10f44 <bcmp@plt>
   16178:	mov	r4, r0
   1617c:	cmp	r0, #0
   16180:	movwne	r4, #1
   16184:	mov	r0, r4
   16188:	sub	sp, fp, #8
   1618c:	pop	{r4, sl, fp, pc}
   16190:	b	16194 <__mempcpy_chk@plt+0x516c>
   16194:	push	{r4, r5, r6, r7, fp, lr}
   16198:	add	fp, sp, #16
   1619c:	mov	r6, r2
   161a0:	mov	r4, r1
   161a4:	bl	1622c <__mempcpy_chk@plt+0x5204>
   161a8:	cmp	r0, #0
   161ac:	beq	161dc <__mempcpy_chk@plt+0x51b4>
   161b0:	mov	r7, r0
   161b4:	bl	10f50 <strlen@plt>
   161b8:	cmp	r0, r6
   161bc:	bcs	161f8 <__mempcpy_chk@plt+0x51d0>
   161c0:	add	r2, r0, #1
   161c4:	mov	r0, r4
   161c8:	mov	r1, r7
   161cc:	bl	10e30 <memcpy@plt>
   161d0:	mov	r5, #0
   161d4:	mov	r0, r5
   161d8:	pop	{r4, r5, r6, r7, fp, pc}
   161dc:	mov	r5, #22
   161e0:	cmp	r6, #0
   161e4:	beq	16220 <__mempcpy_chk@plt+0x51f8>
   161e8:	mov	r0, #0
   161ec:	strb	r0, [r4]
   161f0:	mov	r0, r5
   161f4:	pop	{r4, r5, r6, r7, fp, pc}
   161f8:	mov	r5, #34	; 0x22
   161fc:	cmp	r6, #0
   16200:	beq	16220 <__mempcpy_chk@plt+0x51f8>
   16204:	sub	r6, r6, #1
   16208:	mov	r0, r4
   1620c:	mov	r1, r7
   16210:	mov	r2, r6
   16214:	bl	10e30 <memcpy@plt>
   16218:	mov	r0, #0
   1621c:	strb	r0, [r4, r6]
   16220:	mov	r0, r5
   16224:	pop	{r4, r5, r6, r7, fp, pc}
   16228:	b	1622c <__mempcpy_chk@plt+0x5204>
   1622c:	mov	r1, #0
   16230:	b	10fbc <setlocale@plt>
   16234:	cmp	r3, #0
   16238:	cmpeq	r2, #0
   1623c:	bne	16254 <__mempcpy_chk@plt+0x522c>
   16240:	cmp	r1, #0
   16244:	cmpeq	r0, #0
   16248:	mvnne	r1, #0
   1624c:	mvnne	r0, #0
   16250:	b	16270 <__mempcpy_chk@plt+0x5248>
   16254:	sub	sp, sp, #8
   16258:	push	{sp, lr}
   1625c:	bl	16280 <__mempcpy_chk@plt+0x5258>
   16260:	ldr	lr, [sp, #4]
   16264:	add	sp, sp, #8
   16268:	pop	{r2, r3}
   1626c:	bx	lr
   16270:	push	{r1, lr}
   16274:	mov	r0, #8
   16278:	bl	10ddc <raise@plt>
   1627c:	pop	{r1, pc}
   16280:	cmp	r1, r3
   16284:	cmpeq	r0, r2
   16288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1628c:	mov	r4, r0
   16290:	movcc	r0, #0
   16294:	mov	r5, r1
   16298:	ldr	lr, [sp, #36]	; 0x24
   1629c:	movcc	r1, r0
   162a0:	bcc	1639c <__mempcpy_chk@plt+0x5374>
   162a4:	cmp	r3, #0
   162a8:	clzeq	ip, r2
   162ac:	clzne	ip, r3
   162b0:	addeq	ip, ip, #32
   162b4:	cmp	r5, #0
   162b8:	clzeq	r1, r4
   162bc:	addeq	r1, r1, #32
   162c0:	clzne	r1, r5
   162c4:	sub	ip, ip, r1
   162c8:	sub	sl, ip, #32
   162cc:	lsl	r9, r3, ip
   162d0:	rsb	fp, ip, #32
   162d4:	orr	r9, r9, r2, lsl sl
   162d8:	orr	r9, r9, r2, lsr fp
   162dc:	lsl	r8, r2, ip
   162e0:	cmp	r5, r9
   162e4:	cmpeq	r4, r8
   162e8:	movcc	r0, #0
   162ec:	movcc	r1, r0
   162f0:	bcc	1630c <__mempcpy_chk@plt+0x52e4>
   162f4:	mov	r0, #1
   162f8:	subs	r4, r4, r8
   162fc:	lsl	r1, r0, sl
   16300:	orr	r1, r1, r0, lsr fp
   16304:	lsl	r0, r0, ip
   16308:	sbc	r5, r5, r9
   1630c:	cmp	ip, #0
   16310:	beq	1639c <__mempcpy_chk@plt+0x5374>
   16314:	lsr	r6, r8, #1
   16318:	orr	r6, r6, r9, lsl #31
   1631c:	lsr	r7, r9, #1
   16320:	mov	r2, ip
   16324:	b	16348 <__mempcpy_chk@plt+0x5320>
   16328:	subs	r3, r4, r6
   1632c:	sbc	r8, r5, r7
   16330:	adds	r3, r3, r3
   16334:	adc	r8, r8, r8
   16338:	adds	r4, r3, #1
   1633c:	adc	r5, r8, #0
   16340:	subs	r2, r2, #1
   16344:	beq	16364 <__mempcpy_chk@plt+0x533c>
   16348:	cmp	r5, r7
   1634c:	cmpeq	r4, r6
   16350:	bcs	16328 <__mempcpy_chk@plt+0x5300>
   16354:	adds	r4, r4, r4
   16358:	adc	r5, r5, r5
   1635c:	subs	r2, r2, #1
   16360:	bne	16348 <__mempcpy_chk@plt+0x5320>
   16364:	lsr	r3, r4, ip
   16368:	orr	r3, r3, r5, lsl fp
   1636c:	lsr	r2, r5, ip
   16370:	orr	r3, r3, r5, lsr sl
   16374:	adds	r0, r0, r4
   16378:	mov	r4, r3
   1637c:	lsl	r3, r2, ip
   16380:	orr	r3, r3, r4, lsl sl
   16384:	lsl	ip, r4, ip
   16388:	orr	r3, r3, r4, lsr fp
   1638c:	adc	r1, r1, r5
   16390:	subs	r0, r0, ip
   16394:	mov	r5, r2
   16398:	sbc	r1, r1, r3
   1639c:	cmp	lr, #0
   163a0:	strdne	r4, [lr]
   163a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   163ac:	mov	r7, r0
   163b0:	ldr	r6, [pc, #72]	; 16400 <__mempcpy_chk@plt+0x53d8>
   163b4:	ldr	r5, [pc, #72]	; 16404 <__mempcpy_chk@plt+0x53dc>
   163b8:	add	r6, pc, r6
   163bc:	add	r5, pc, r5
   163c0:	sub	r6, r6, r5
   163c4:	mov	r8, r1
   163c8:	mov	r9, r2
   163cc:	bl	10da4 <calloc@plt-0x20>
   163d0:	asrs	r6, r6, #2
   163d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   163d8:	mov	r4, #0
   163dc:	add	r4, r4, #1
   163e0:	ldr	r3, [r5], #4
   163e4:	mov	r2, r9
   163e8:	mov	r1, r8
   163ec:	mov	r0, r7
   163f0:	blx	r3
   163f4:	cmp	r6, r4
   163f8:	bne	163dc <__mempcpy_chk@plt+0x53b4>
   163fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16400:	andeq	r1, r1, ip, asr #22
   16404:	andeq	r1, r1, r4, asr #22
   16408:	bx	lr
   1640c:	ldr	r3, [pc, #12]	; 16420 <__mempcpy_chk@plt+0x53f8>
   16410:	mov	r1, #0
   16414:	add	r3, pc, r3
   16418:	ldr	r2, [r3]
   1641c:	b	10f68 <__cxa_atexit@plt>
   16420:	andeq	r1, r1, r8, asr #25
   16424:	mov	r2, r1
   16428:	mov	r1, r0
   1642c:	mov	r0, #3
   16430:	b	10fec <__xstat64@plt>

Disassembly of section .fini:

00016434 <.fini>:
   16434:	push	{r3, lr}
   16438:	pop	{r3, pc}
