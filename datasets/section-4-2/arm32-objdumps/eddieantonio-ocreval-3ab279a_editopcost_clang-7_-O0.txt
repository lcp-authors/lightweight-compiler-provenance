
../repos/eddieantonio-ocreval-3ab279a/editopcost/editopcost:     file format elf32-littlearm


Disassembly of section .init:

00010748 <.init>:
   10748:	push	{r3, lr}
   1074c:	bl	10888 <abort@plt+0x48>
   10750:	pop	{r3, pc}

Disassembly of section .plt:

00010754 <calloc@plt-0x14>:
   10754:	push	{lr}		; (str lr, [sp, #-4]!)
   10758:	ldr	lr, [pc, #4]	; 10764 <calloc@plt-0x4>
   1075c:	add	lr, pc, lr
   10760:	ldr	pc, [lr, #8]!
   10764:	muleq	r1, ip, r8

00010768 <calloc@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #73728	; 0x12000
   10770:	ldr	pc, [ip, #2204]!	; 0x89c

00010774 <strcmp@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #73728	; 0x12000
   1077c:	ldr	pc, [ip, #2196]!	; 0x894

00010780 <printf@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #73728	; 0x12000
   10788:	ldr	pc, [ip, #2188]!	; 0x88c

0001078c <fopen@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #73728	; 0x12000
   10794:	ldr	pc, [ip, #2180]!	; 0x884

00010798 <free@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #73728	; 0x12000
   107a0:	ldr	pc, [ip, #2172]!	; 0x87c

000107a4 <fgets@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2164]!	; 0x874

000107b0 <strdup@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2156]!	; 0x86c

000107bc <__xstat@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2148]!	; 0x864

000107c8 <__libc_start_main@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2140]!	; 0x85c

000107d4 <__sysv_signal@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2132]!	; 0x854

000107e0 <__gmon_start__@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2124]!	; 0x84c

000107ec <exit@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2116]!	; 0x844

000107f8 <strlen@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2108]!	; 0x83c

00010804 <fprintf@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2100]!	; 0x834

00010810 <__isoc99_sscanf@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2092]!	; 0x82c

0001081c <fclose@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2084]!	; 0x824

00010828 <sprintf@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2076]!	; 0x81c

00010834 <strncmp@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #73728	; 0x12000
   1083c:	ldr	pc, [ip, #2068]!	; 0x814

00010840 <abort@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #73728	; 0x12000
   10848:	ldr	pc, [ip, #2060]!	; 0x80c

Disassembly of section .text:

0001084c <error@@Base-0x1008>:
   1084c:	mov	fp, #0
   10850:	mov	lr, #0
   10854:	pop	{r1}		; (ldr r1, [sp], #4)
   10858:	mov	r2, sp
   1085c:	push	{r2}		; (str r2, [sp, #-4]!)
   10860:	push	{r0}		; (str r0, [sp, #-4]!)
   10864:	ldr	ip, [pc, #16]	; 1087c <abort@plt+0x3c>
   10868:	push	{ip}		; (str ip, [sp, #-4]!)
   1086c:	ldr	r0, [pc, #12]	; 10880 <abort@plt+0x40>
   10870:	ldr	r3, [pc, #12]	; 10884 <abort@plt+0x44>
   10874:	bl	107c8 <__libc_start_main@plt>
   10878:	bl	10840 <abort@plt>
   1087c:	andeq	r1, r1, ip, lsl #28
   10880:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10884:	andeq	r1, r1, ip, lsr #27
   10888:	ldr	r3, [pc, #20]	; 108a4 <abort@plt+0x64>
   1088c:	ldr	r2, [pc, #20]	; 108a8 <abort@plt+0x68>
   10890:	add	r3, pc, r3
   10894:	ldr	r2, [r3, r2]
   10898:	cmp	r2, #0
   1089c:	bxeq	lr
   108a0:	b	107e0 <__gmon_start__@plt>
   108a4:	andeq	r2, r1, r8, ror #14
   108a8:	andeq	r0, r0, r0, lsl #1
   108ac:	ldr	r0, [pc, #24]	; 108cc <abort@plt+0x8c>
   108b0:	ldr	r3, [pc, #24]	; 108d0 <abort@plt+0x90>
   108b4:	cmp	r3, r0
   108b8:	bxeq	lr
   108bc:	ldr	r3, [pc, #16]	; 108d4 <abort@plt+0x94>
   108c0:	cmp	r3, #0
   108c4:	bxeq	lr
   108c8:	bx	r3
   108cc:	strheq	r3, [r2], -r8
   108d0:	strheq	r3, [r2], -r8
   108d4:	andeq	r0, r0, r0
   108d8:	ldr	r0, [pc, #36]	; 10904 <abort@plt+0xc4>
   108dc:	ldr	r1, [pc, #36]	; 10908 <abort@plt+0xc8>
   108e0:	sub	r1, r1, r0
   108e4:	asr	r1, r1, #2
   108e8:	add	r1, r1, r1, lsr #31
   108ec:	asrs	r1, r1, #1
   108f0:	bxeq	lr
   108f4:	ldr	r3, [pc, #16]	; 1090c <abort@plt+0xcc>
   108f8:	cmp	r3, #0
   108fc:	bxeq	lr
   10900:	bx	r3
   10904:	strheq	r3, [r2], -r8
   10908:	strheq	r3, [r2], -r8
   1090c:	andeq	r0, r0, r0
   10910:	push	{r4, lr}
   10914:	ldr	r4, [pc, #24]	; 10934 <abort@plt+0xf4>
   10918:	ldrb	r3, [r4]
   1091c:	cmp	r3, #0
   10920:	popne	{r4, pc}
   10924:	bl	108ac <abort@plt+0x6c>
   10928:	mov	r3, #1
   1092c:	strb	r3, [r4]
   10930:	pop	{r4, pc}
   10934:	strheq	r3, [r2], -r8
   10938:	b	108d8 <abort@plt+0x98>
   1093c:	sub	sp, sp, #8
   10940:	ldr	r0, [pc, #168]	; 109f0 <abort@plt+0x1b0>
   10944:	ldr	r0, [pc, r0]
   10948:	ldr	r1, [pc, #164]	; 109f4 <abort@plt+0x1b4>
   1094c:	ldr	r1, [pc, r1]
   10950:	ldr	r2, [r1]
   10954:	ldr	r3, [r0]
   10958:	sub	r2, r3, r2
   1095c:	str	r2, [r0]
   10960:	ldr	r2, [r1, #4]
   10964:	ldr	r3, [r0, #4]
   10968:	sub	r2, r3, r2
   1096c:	str	r2, [r0, #4]
   10970:	ldr	r1, [r1, #8]
   10974:	ldr	r2, [r0, #8]
   10978:	sub	r1, r2, r1
   1097c:	str	r1, [r0, #8]
   10980:	movw	r0, #1
   10984:	strh	r0, [sp, #6]
   10988:	ldrsh	r0, [sp, #6]
   1098c:	cmp	r0, #100	; 0x64
   10990:	bgt	109e8 <abort@plt+0x1a8>
   10994:	ldr	r0, [pc, #92]	; 109f8 <abort@plt+0x1b8>
   10998:	ldr	r0, [pc, r0]
   1099c:	add	r0, r0, #12
   109a0:	ldrsh	r1, [sp, #6]
   109a4:	ldr	r2, [pc, #80]	; 109fc <abort@plt+0x1bc>
   109a8:	ldr	r2, [pc, r2]
   109ac:	add	r2, r2, r1, lsl #2
   109b0:	ldr	r2, [r2, #12]
   109b4:	ldr	r3, [pc, #68]	; 10a00 <abort@plt+0x1c0>
   109b8:	ldr	r3, [pc, r3]
   109bc:	add	r1, r3, r1, lsl #2
   109c0:	add	r1, r1, #12
   109c4:	ldr	r3, [r1]
   109c8:	sub	r2, r3, r2
   109cc:	str	r2, [r1]
   109d0:	str	r0, [sp]
   109d4:	ldrh	r0, [sp, #6]
   109d8:	movw	r1, #1
   109dc:	add	r0, r0, r1
   109e0:	strh	r0, [sp, #6]
   109e4:	b	10988 <abort@plt+0x148>
   109e8:	add	sp, sp, #8
   109ec:	bx	lr
   109f0:	andeq	r2, r1, ip, asr #14
   109f4:	andeq	r2, r1, r8, lsl #14
   109f8:	strdeq	r2, [r1], -r8
   109fc:	andeq	r2, r1, ip, lsr #13
   10a00:	ldrdeq	r2, [r1], -r8
   10a04:	push	{fp, lr}
   10a08:	mov	fp, sp
   10a0c:	sub	sp, sp, #24
   10a10:	ldr	r0, [pc, #168]	; 10ac0 <abort@plt+0x280>
   10a14:	ldr	r0, [pc, r0]
   10a18:	ldr	r1, [r0]
   10a1c:	str	r1, [fp, #-4]
   10a20:	ldr	r0, [r0, #8]
   10a24:	str	r0, [fp, #-8]
   10a28:	movw	r0, #0
   10a2c:	str	r0, [sp, #12]
   10a30:	ldr	r0, [sp, #12]
   10a34:	cmp	r0, #100	; 0x64
   10a38:	bgt	10ab8 <abort@plt+0x278>
   10a3c:	ldr	r0, [pc, #128]	; 10ac4 <abort@plt+0x284>
   10a40:	ldr	r0, [pc, r0]
   10a44:	add	r0, r0, #12
   10a48:	ldr	r1, [sp, #12]
   10a4c:	ldr	r2, [fp, #-4]
   10a50:	ldr	r3, [fp, #-8]
   10a54:	mla	r2, r1, r3, r2
   10a58:	ldr	r3, [pc, #104]	; 10ac8 <abort@plt+0x288>
   10a5c:	add	r3, pc, r3
   10a60:	str	r0, [sp, #8]
   10a64:	mov	r0, r3
   10a68:	bl	10780 <printf@plt>
   10a6c:	ldr	r1, [sp, #12]
   10a70:	ldr	r2, [pc, #84]	; 10acc <abort@plt+0x28c>
   10a74:	ldr	r2, [pc, r2]
   10a78:	add	r2, r2, #12
   10a7c:	ldr	r3, [r2, r1, lsl #2]
   10a80:	ldr	lr, [fp, #-4]
   10a84:	mla	r1, r1, r3, lr
   10a88:	str	r1, [fp, #-4]
   10a8c:	ldr	r1, [sp, #12]
   10a90:	add	r1, r2, r1, lsl #2
   10a94:	ldr	r1, [r1]
   10a98:	ldr	r2, [fp, #-8]
   10a9c:	sub	r1, r2, r1
   10aa0:	str	r1, [fp, #-8]
   10aa4:	str	r0, [sp, #4]
   10aa8:	ldr	r0, [sp, #12]
   10aac:	add	r0, r0, #1
   10ab0:	str	r0, [sp, #12]
   10ab4:	b	10a30 <abort@plt+0x1f0>
   10ab8:	mov	sp, fp
   10abc:	pop	{fp, pc}
   10ac0:	andeq	r2, r1, ip, ror r6
   10ac4:	andeq	r2, r1, r0, asr r6
   10ac8:	andeq	r1, r0, r8, asr #7
   10acc:	andeq	r2, r1, ip, lsl r6
   10ad0:	push	{fp, lr}
   10ad4:	mov	fp, sp
   10ad8:	sub	sp, sp, #24
   10adc:	ldr	r2, [pc, #204]	; 10bb0 <abort@plt+0x370>
   10ae0:	add	r2, pc, r2
   10ae4:	ldr	r3, [pc, #200]	; 10bb4 <abort@plt+0x374>
   10ae8:	ldr	r3, [pc, r3]
   10aec:	movw	ip, #0
   10af0:	str	ip, [fp, #-4]
   10af4:	str	r0, [fp, #-8]
   10af8:	str	r1, [sp, #12]
   10afc:	ldr	r1, [sp, #12]
   10b00:	sub	r0, fp, #8
   10b04:	str	r3, [sp, #8]
   10b08:	mov	r3, ip
   10b0c:	ldr	ip, [sp, #8]
   10b10:	blx	ip
   10b14:	ldr	r0, [fp, #-8]
   10b18:	cmp	r0, #1
   10b1c:	blt	10b2c <abort@plt+0x2ec>
   10b20:	ldr	r0, [fp, #-8]
   10b24:	cmp	r0, #2
   10b28:	ble	10b40 <abort@plt+0x300>
   10b2c:	ldr	r0, [pc, #152]	; 10bcc <abort@plt+0x38c>
   10b30:	add	r0, pc, r0
   10b34:	ldr	r1, [pc, #148]	; 10bd0 <abort@plt+0x390>
   10b38:	ldr	r1, [pc, r1]
   10b3c:	blx	r1
   10b40:	ldr	r0, [pc, #112]	; 10bb8 <abort@plt+0x378>
   10b44:	ldr	r0, [pc, r0]
   10b48:	ldr	r1, [pc, #108]	; 10bbc <abort@plt+0x37c>
   10b4c:	ldr	r1, [pc, r1]
   10b50:	ldr	r2, [sp, #12]
   10b54:	ldr	r2, [r2]
   10b58:	str	r1, [sp, #4]
   10b5c:	mov	r1, r2
   10b60:	ldr	r2, [sp, #4]
   10b64:	blx	r2
   10b68:	ldr	r0, [fp, #-8]
   10b6c:	cmp	r0, #2
   10b70:	bne	10ba0 <abort@plt+0x360>
   10b74:	ldr	r0, [pc, #68]	; 10bc0 <abort@plt+0x380>
   10b78:	ldr	r0, [pc, r0]
   10b7c:	ldr	r1, [pc, #64]	; 10bc4 <abort@plt+0x384>
   10b80:	ldr	r1, [pc, r1]
   10b84:	ldr	r2, [sp, #12]
   10b88:	ldr	r2, [r2, #4]
   10b8c:	str	r1, [sp]
   10b90:	mov	r1, r2
   10b94:	ldr	r2, [sp]
   10b98:	blx	r2
   10b9c:	bl	1093c <abort@plt+0xfc>
   10ba0:	bl	10a04 <abort@plt+0x1c4>
   10ba4:	ldr	lr, [pc, #28]	; 10bc8 <abort@plt+0x388>
   10ba8:	ldr	lr, [pc, lr]
   10bac:	blx	lr
   10bb0:	andeq	r1, r0, r0, asr r3
   10bb4:	andeq	r2, r1, ip, lsl #11
   10bb8:	andeq	r2, r1, ip, asr #10
   10bbc:	andeq	r2, r1, ip, lsl r5
   10bc0:	ldrdeq	r2, [r1], -ip
   10bc4:	andeq	r2, r1, r8, ror #9
   10bc8:	andeq	r2, r1, r4, ror #9
   10bcc:	andeq	r1, r0, r7, lsr #6
   10bd0:	andeq	r2, r1, r4, lsr #10
   10bd4:	push	{fp, lr}
   10bd8:	mov	fp, sp
   10bdc:	sub	sp, sp, #40	; 0x28
   10be0:	ldr	r2, [pc, #488]	; 10dd0 <abort@plt+0x590>
   10be4:	add	r2, pc, r2
   10be8:	ldr	r3, [pc, #484]	; 10dd4 <abort@plt+0x594>
   10bec:	ldr	r3, [pc, r3]
   10bf0:	str	r0, [fp, #-4]
   10bf4:	str	r1, [fp, #-8]
   10bf8:	ldr	r0, [fp, #-8]
   10bfc:	mov	r1, r2
   10c00:	blx	r3
   10c04:	str	r0, [fp, #-12]
   10c08:	ldr	r0, [fp, #-12]
   10c0c:	bl	10df8 <abort@plt+0x5b8>
   10c10:	and	r0, r0, #255	; 0xff
   10c14:	cmp	r0, #0
   10c18:	beq	10d5c <abort@plt+0x51c>
   10c1c:	ldr	r0, [pc, #436]	; 10dd8 <abort@plt+0x598>
   10c20:	add	r0, pc, r0
   10c24:	ldr	r1, [pc, #432]	; 10ddc <abort@plt+0x59c>
   10c28:	add	r1, pc, r1
   10c2c:	movw	r2, #42	; 0x2a
   10c30:	bl	10834 <strncmp@plt>
   10c34:	cmp	r0, #0
   10c38:	bne	10d5c <abort@plt+0x51c>
   10c3c:	ldr	r0, [fp, #-12]
   10c40:	bl	10df8 <abort@plt+0x5b8>
   10c44:	and	r0, r0, #255	; 0xff
   10c48:	cmp	r0, #0
   10c4c:	beq	10d5c <abort@plt+0x51c>
   10c50:	ldr	r0, [pc, #408]	; 10df0 <abort@plt+0x5b0>
   10c54:	add	r0, pc, r0
   10c58:	ldr	r1, [pc, #404]	; 10df4 <abort@plt+0x5b4>
   10c5c:	add	r1, pc, r1
   10c60:	bl	10774 <strcmp@plt>
   10c64:	cmp	r0, #0
   10c68:	bne	10d5c <abort@plt+0x51c>
   10c6c:	ldr	r0, [fp, #-12]
   10c70:	ldr	r2, [fp, #-4]
   10c74:	add	r1, sp, #20
   10c78:	bl	10e4c <abort@plt+0x60c>
   10c7c:	and	r0, r0, #255	; 0xff
   10c80:	cmp	r0, #0
   10c84:	beq	10d5c <abort@plt+0x51c>
   10c88:	ldr	r0, [fp, #-12]
   10c8c:	ldr	r1, [fp, #-4]
   10c90:	add	r2, r1, #4
   10c94:	add	r1, sp, #20
   10c98:	bl	10e4c <abort@plt+0x60c>
   10c9c:	and	r0, r0, #255	; 0xff
   10ca0:	cmp	r0, #0
   10ca4:	beq	10d5c <abort@plt+0x51c>
   10ca8:	ldr	r0, [fp, #-12]
   10cac:	ldr	r1, [fp, #-4]
   10cb0:	add	r2, r1, #8
   10cb4:	sub	r1, fp, #16
   10cb8:	bl	10e4c <abort@plt+0x60c>
   10cbc:	and	r0, r0, #255	; 0xff
   10cc0:	cmp	r0, #0
   10cc4:	beq	10d5c <abort@plt+0x51c>
   10cc8:	ldr	r0, [fp, #-16]
   10ccc:	cmp	r0, #0
   10cd0:	ble	10d58 <abort@plt+0x518>
   10cd4:	ldr	r0, [fp, #-12]
   10cd8:	bl	10df8 <abort@plt+0x5b8>
   10cdc:	and	r0, r0, #255	; 0xff
   10ce0:	cmp	r0, #0
   10ce4:	beq	10d58 <abort@plt+0x518>
   10ce8:	ldr	r0, [fp, #-12]
   10cec:	bl	10df8 <abort@plt+0x5b8>
   10cf0:	and	r0, r0, #255	; 0xff
   10cf4:	cmp	r0, #0
   10cf8:	beq	10d58 <abort@plt+0x518>
   10cfc:	ldr	r0, [fp, #-12]
   10d00:	bl	10df8 <abort@plt+0x5b8>
   10d04:	and	r0, r0, #255	; 0xff
   10d08:	cmp	r0, #0
   10d0c:	beq	10d58 <abort@plt+0x518>
   10d10:	b	10d14 <abort@plt+0x4d4>
   10d14:	ldr	r0, [fp, #-12]
   10d18:	add	r1, sp, #20
   10d1c:	add	r2, sp, #16
   10d20:	bl	10ed8 <abort@plt+0x698>
   10d24:	sxtb	r0, r0
   10d28:	cmp	r0, #0
   10d2c:	beq	10d54 <abort@plt+0x514>
   10d30:	ldr	r0, [sp, #20]
   10d34:	ldr	r1, [fp, #-4]
   10d38:	add	r1, r1, #12
   10d3c:	ldr	r2, [sp, #16]
   10d40:	add	r1, r1, r2, lsl #2
   10d44:	ldr	r2, [r1]
   10d48:	add	r0, r2, r0
   10d4c:	str	r0, [r1]
   10d50:	b	10d14 <abort@plt+0x4d4>
   10d54:	b	10d58 <abort@plt+0x518>
   10d58:	b	10dac <abort@plt+0x56c>
   10d5c:	ldr	r0, [fp, #-8]
   10d60:	movw	r1, #0
   10d64:	cmp	r0, r1
   10d68:	beq	10d78 <abort@plt+0x538>
   10d6c:	ldr	r0, [fp, #-8]
   10d70:	str	r0, [sp, #12]
   10d74:	b	10d88 <abort@plt+0x548>
   10d78:	ldr	r0, [pc, #96]	; 10de0 <abort@plt+0x5a0>
   10d7c:	add	r0, pc, r0
   10d80:	str	r0, [sp, #12]
   10d84:	b	10d88 <abort@plt+0x548>
   10d88:	ldr	r0, [sp, #12]
   10d8c:	ldr	r1, [pc, #80]	; 10de4 <abort@plt+0x5a4>
   10d90:	add	r1, pc, r1
   10d94:	ldr	r2, [pc, #76]	; 10de8 <abort@plt+0x5a8>
   10d98:	ldr	r2, [pc, r2]
   10d9c:	str	r0, [sp, #8]
   10da0:	mov	r0, r1
   10da4:	ldr	r1, [sp, #8]
   10da8:	blx	r2
   10dac:	ldr	r0, [pc, #56]	; 10dec <abort@plt+0x5ac>
   10db0:	ldr	r0, [pc, r0]
   10db4:	ldr	r1, [fp, #-12]
   10db8:	str	r0, [sp, #4]
   10dbc:	mov	r0, r1
   10dc0:	ldr	r1, [sp, #4]
   10dc4:	blx	r1
   10dc8:	mov	sp, fp
   10dcc:	pop	{fp, pc}
   10dd0:	andeq	r1, r0, fp, lsl #5
   10dd4:	andeq	r2, r1, r8, ror r4
   10dd8:	muleq	r1, r1, r4
   10ddc:	andeq	r1, r0, r9, asr #4
   10de0:	andeq	r1, r0, r1, ror #2
   10de4:	andeq	r1, r0, fp, lsr r1
   10de8:	andeq	r2, r1, r4, lsl #6
   10dec:	andeq	r2, r1, r0, lsr #5
   10df0:	andeq	r2, r1, sp, asr r4
   10df4:	andeq	r1, r0, r2, asr #4
   10df8:	push	{fp, lr}
   10dfc:	mov	fp, sp
   10e00:	sub	sp, sp, #8
   10e04:	ldr	r1, [pc, #60]	; 10e48 <abort@plt+0x608>
   10e08:	add	r1, pc, r1
   10e0c:	str	r0, [sp, #4]
   10e10:	ldr	r2, [sp, #4]
   10e14:	mov	r0, r1
   10e18:	movw	r1, #99	; 0x63
   10e1c:	bl	107a4 <fgets@plt>
   10e20:	movw	r1, #0
   10e24:	cmp	r0, r1
   10e28:	movw	r0, #0
   10e2c:	movne	r0, #1
   10e30:	tst	r0, #1
   10e34:	movw	r0, #1
   10e38:	moveq	r0, #0
   10e3c:	and	r0, r0, #255	; 0xff
   10e40:	mov	sp, fp
   10e44:	pop	{fp, pc}
   10e48:	andeq	r2, r1, r9, lsr #5
   10e4c:	push	{fp, lr}
   10e50:	mov	fp, sp
   10e54:	sub	sp, sp, #16
   10e58:	str	r0, [sp, #8]
   10e5c:	str	r1, [sp, #4]
   10e60:	str	r2, [sp]
   10e64:	ldr	r0, [sp, #8]
   10e68:	bl	10df8 <abort@plt+0x5b8>
   10e6c:	and	r0, r0, #255	; 0xff
   10e70:	cmp	r0, #0
   10e74:	beq	10ebc <abort@plt+0x67c>
   10e78:	ldr	r0, [pc, #80]	; 10ed0 <abort@plt+0x690>
   10e7c:	add	r0, pc, r0
   10e80:	ldr	r1, [pc, #76]	; 10ed4 <abort@plt+0x694>
   10e84:	add	r1, pc, r1
   10e88:	ldr	r2, [sp, #4]
   10e8c:	bl	10810 <__isoc99_sscanf@plt>
   10e90:	cmp	r0, #1
   10e94:	bne	10ebc <abort@plt+0x67c>
   10e98:	ldr	r0, [sp, #4]
   10e9c:	ldr	r0, [r0]
   10ea0:	ldr	r1, [sp]
   10ea4:	ldr	r2, [r1]
   10ea8:	add	r0, r2, r0
   10eac:	str	r0, [r1]
   10eb0:	movw	r0, #1
   10eb4:	strb	r0, [fp, #-1]
   10eb8:	b	10ec4 <abort@plt+0x684>
   10ebc:	movw	r0, #0
   10ec0:	strb	r0, [fp, #-1]
   10ec4:	ldrb	r0, [fp, #-1]
   10ec8:	mov	sp, fp
   10ecc:	pop	{fp, pc}
   10ed0:	andeq	r2, r1, r5, lsr r2
   10ed4:	muleq	r0, pc, r0	; <UNPREDICTABLE>
   10ed8:	push	{fp, lr}
   10edc:	mov	fp, sp
   10ee0:	sub	sp, sp, #16
   10ee4:	str	r0, [fp, #-4]
   10ee8:	str	r1, [sp, #8]
   10eec:	str	r2, [sp, #4]
   10ef0:	ldr	r0, [fp, #-4]
   10ef4:	bl	10df8 <abort@plt+0x5b8>
   10ef8:	and	r0, r0, #255	; 0xff
   10efc:	cmp	r0, #0
   10f00:	movw	r0, #0
   10f04:	str	r0, [sp]
   10f08:	beq	10f38 <abort@plt+0x6f8>
   10f0c:	ldr	r0, [pc, #64]	; 10f54 <abort@plt+0x714>
   10f10:	add	r0, pc, r0
   10f14:	ldr	r1, [pc, #60]	; 10f58 <abort@plt+0x718>
   10f18:	add	r1, pc, r1
   10f1c:	ldr	r2, [sp, #8]
   10f20:	ldr	r3, [sp, #4]
   10f24:	bl	10810 <__isoc99_sscanf@plt>
   10f28:	cmp	r0, #2
   10f2c:	movw	r0, #0
   10f30:	moveq	r0, #1
   10f34:	str	r0, [sp]
   10f38:	ldr	r0, [sp]
   10f3c:	tst	r0, #1
   10f40:	movw	r0, #1
   10f44:	moveq	r0, #0
   10f48:	and	r0, r0, #255	; 0xff
   10f4c:	mov	sp, fp
   10f50:	pop	{fp, pc}
   10f54:	andeq	r2, r1, r1, lsr #3
   10f58:	andeq	r1, r0, r7
   10f5c:	push	{fp, lr}
   10f60:	mov	fp, sp
   10f64:	sub	sp, sp, #32
   10f68:	ldr	r2, [pc, #348]	; 110cc <abort@plt+0x88c>
   10f6c:	add	r2, pc, r2
   10f70:	ldr	r3, [pc, #344]	; 110d0 <abort@plt+0x890>
   10f74:	ldr	r3, [pc, r3]
   10f78:	str	r0, [fp, #-4]
   10f7c:	str	r1, [fp, #-8]
   10f80:	ldr	r0, [fp, #-8]
   10f84:	mov	r1, r2
   10f88:	blx	r3
   10f8c:	ldr	r1, [pc, #300]	; 110c0 <abort@plt+0x880>
   10f90:	add	r1, pc, r1
   10f94:	ldr	r2, [pc, #296]	; 110c4 <abort@plt+0x884>
   10f98:	add	r2, pc, r2
   10f9c:	ldr	r3, [pc, #292]	; 110c8 <abort@plt+0x888>
   10fa0:	add	r3, pc, r3
   10fa4:	str	r0, [fp, #-12]
   10fa8:	ldr	r0, [fp, #-12]
   10fac:	bl	10804 <fprintf@plt>
   10fb0:	ldr	r1, [pc, #260]	; 110bc <abort@plt+0x87c>
   10fb4:	add	r2, pc, r1
   10fb8:	ldr	r1, [fp, #-12]
   10fbc:	ldr	r3, [fp, #-4]
   10fc0:	ldr	r3, [r3]
   10fc4:	str	r0, [sp, #12]
   10fc8:	mov	r0, r1
   10fcc:	mov	r1, r3
   10fd0:	bl	110dc <abort@plt+0x89c>
   10fd4:	ldr	r0, [pc, #220]	; 110b8 <abort@plt+0x878>
   10fd8:	add	r2, pc, r0
   10fdc:	ldr	r0, [fp, #-12]
   10fe0:	ldr	r1, [fp, #-4]
   10fe4:	ldr	r1, [r1, #4]
   10fe8:	bl	110dc <abort@plt+0x89c>
   10fec:	ldr	r0, [pc, #192]	; 110b4 <abort@plt+0x874>
   10ff0:	add	r2, pc, r0
   10ff4:	ldr	r0, [fp, #-12]
   10ff8:	ldr	r1, [fp, #-4]
   10ffc:	ldr	r1, [r1, #8]
   11000:	bl	110dc <abort@plt+0x89c>
   11004:	ldr	r0, [fp, #-4]
   11008:	ldr	r0, [r0, #8]
   1100c:	cmp	r0, #0
   11010:	ble	11090 <abort@plt+0x850>
   11014:	ldr	r0, [pc, #184]	; 110d4 <abort@plt+0x894>
   11018:	add	r1, pc, r0
   1101c:	ldr	r0, [fp, #-12]
   11020:	bl	10804 <fprintf@plt>
   11024:	movw	r1, #1
   11028:	str	r1, [sp, #16]
   1102c:	str	r0, [sp, #8]
   11030:	ldr	r0, [sp, #16]
   11034:	cmp	r0, #100	; 0x64
   11038:	bgt	1108c <abort@plt+0x84c>
   1103c:	ldr	r0, [fp, #-4]
   11040:	add	r0, r0, #12
   11044:	ldr	r1, [sp, #16]
   11048:	add	r0, r0, r1, lsl #2
   1104c:	ldr	r0, [r0]
   11050:	cmp	r0, #0
   11054:	ble	11078 <abort@plt+0x838>
   11058:	ldr	r0, [fp, #-12]
   1105c:	ldr	r1, [fp, #-4]
   11060:	add	r1, r1, #12
   11064:	ldr	r2, [sp, #16]
   11068:	add	r1, r1, r2, lsl #2
   1106c:	ldr	r1, [r1]
   11070:	ldr	r2, [sp, #16]
   11074:	bl	11128 <abort@plt+0x8e8>
   11078:	b	1107c <abort@plt+0x83c>
   1107c:	ldr	r0, [sp, #16]
   11080:	add	r0, r0, #1
   11084:	str	r0, [sp, #16]
   11088:	b	11030 <abort@plt+0x7f0>
   1108c:	b	11090 <abort@plt+0x850>
   11090:	ldr	r0, [pc, #64]	; 110d8 <abort@plt+0x898>
   11094:	ldr	r0, [pc, r0]
   11098:	ldr	r1, [fp, #-12]
   1109c:	str	r0, [sp, #4]
   110a0:	mov	r0, r1
   110a4:	ldr	r1, [sp, #4]
   110a8:	blx	r1
   110ac:	mov	sp, fp
   110b0:	pop	{fp, pc}
   110b4:	andeq	r0, r0, pc, lsl #30
   110b8:	andeq	r0, r0, sp, lsl pc
   110bc:	andeq	r0, r0, r6, lsr pc
   110c0:	andeq	r0, r0, r5, asr pc
   110c4:	ldrdeq	r0, [r0], -r9
   110c8:	strdeq	r0, [r0], -lr
   110cc:	andeq	r0, r0, r7, ror pc
   110d0:	strdeq	r2, [r1], -r0
   110d4:	andeq	r0, r0, sp, ror #29
   110d8:			; <UNDEFINED> instruction: 0x00011fbc
   110dc:	push	{fp, lr}
   110e0:	mov	fp, sp
   110e4:	sub	sp, sp, #24
   110e8:	ldr	r3, [pc, #52]	; 11124 <abort@plt+0x8e4>
   110ec:	add	r3, pc, r3
   110f0:	str	r0, [fp, #-4]
   110f4:	str	r1, [fp, #-8]
   110f8:	str	r2, [sp, #12]
   110fc:	ldr	r0, [fp, #-4]
   11100:	ldr	r2, [fp, #-8]
   11104:	ldr	r1, [sp, #12]
   11108:	str	r1, [sp, #8]
   1110c:	mov	r1, r3
   11110:	ldr	r3, [sp, #8]
   11114:	bl	10804 <fprintf@plt>
   11118:	str	r0, [sp, #4]
   1111c:	mov	sp, fp
   11120:	pop	{fp, pc}
   11124:	andeq	r0, r0, fp, lsr lr
   11128:	push	{fp, lr}
   1112c:	mov	fp, sp
   11130:	sub	sp, sp, #24
   11134:	ldr	r3, [pc, #52]	; 11170 <abort@plt+0x930>
   11138:	add	r3, pc, r3
   1113c:	str	r0, [fp, #-4]
   11140:	str	r1, [fp, #-8]
   11144:	str	r2, [sp, #12]
   11148:	ldr	r0, [fp, #-4]
   1114c:	ldr	r2, [fp, #-8]
   11150:	ldr	r1, [sp, #12]
   11154:	str	r1, [sp, #8]
   11158:	mov	r1, r3
   1115c:	ldr	r3, [sp, #8]
   11160:	bl	10804 <fprintf@plt>
   11164:	str	r0, [sp, #4]
   11168:	mov	sp, fp
   1116c:	pop	{fp, pc}
   11170:	strdeq	r0, [r0], -sl
   11174:	push	{fp, lr}
   11178:	mov	fp, sp
   1117c:	sub	sp, sp, #16
   11180:	str	r0, [fp, #-4]
   11184:	str	r1, [sp, #8]
   11188:	ldr	r0, [fp, #-4]
   1118c:	ldr	r1, [sp, #8]
   11190:	bl	10768 <calloc@plt>
   11194:	str	r0, [sp, #4]
   11198:	ldr	r0, [sp, #4]
   1119c:	movw	r1, #0
   111a0:	cmp	r0, r1
   111a4:	bne	111b4 <abort@plt+0x974>
   111a8:	ldr	r0, [pc, #16]	; 111c0 <abort@plt+0x980>
   111ac:	add	r0, pc, r0
   111b0:	bl	11854 <error@@Base>
   111b4:	ldr	r0, [sp, #4]
   111b8:	mov	sp, fp
   111bc:	pop	{fp, pc}
   111c0:	muleq	r0, r1, sp
   111c4:	sub	sp, sp, #20
   111c8:	str	r0, [sp, #12]
   111cc:	str	r1, [sp, #8]
   111d0:	movw	r0, #0
   111d4:	str	r0, [sp, #4]
   111d8:	ldr	r0, [sp, #12]
   111dc:	ldr	r1, [sp, #4]
   111e0:	add	r0, r0, r1
   111e4:	ldrb	r0, [r0]
   111e8:	cmp	r0, #0
   111ec:	movw	r0, #0
   111f0:	str	r0, [sp]
   111f4:	beq	11228 <abort@plt+0x9e8>
   111f8:	ldr	r0, [sp, #12]
   111fc:	ldr	r1, [sp, #4]
   11200:	add	r0, r0, r1
   11204:	ldrb	r0, [r0]
   11208:	ldr	r1, [sp, #8]
   1120c:	ldr	r2, [sp, #4]
   11210:	add	r1, r1, r2
   11214:	ldrb	r1, [r1]
   11218:	cmp	r0, r1
   1121c:	movw	r0, #0
   11220:	moveq	r0, #1
   11224:	str	r0, [sp]
   11228:	ldr	r0, [sp]
   1122c:	tst	r0, #1
   11230:	beq	11248 <abort@plt+0xa08>
   11234:	b	11238 <abort@plt+0x9f8>
   11238:	ldr	r0, [sp, #4]
   1123c:	add	r0, r0, #1
   11240:	str	r0, [sp, #4]
   11244:	b	111d8 <abort@plt+0x998>
   11248:	ldr	r0, [sp, #12]
   1124c:	ldr	r1, [sp, #4]
   11250:	add	r0, r0, r1
   11254:	ldrb	r0, [r0]
   11258:	cmp	r0, #0
   1125c:	bne	11278 <abort@plt+0xa38>
   11260:	ldr	r0, [sp, #8]
   11264:	ldr	r1, [sp, #4]
   11268:	add	r0, r0, r1
   1126c:	ldrb	r0, [r0]
   11270:	cmp	r0, #0
   11274:	beq	112b8 <abort@plt+0xa78>
   11278:	ldr	r0, [sp, #12]
   1127c:	ldr	r1, [sp, #4]
   11280:	add	r0, r0, r1
   11284:	ldrb	r0, [r0]
   11288:	ldr	r1, [sp, #8]
   1128c:	ldr	r2, [sp, #4]
   11290:	add	r1, r1, r2
   11294:	ldrb	r1, [r1]
   11298:	cmp	r0, r1
   1129c:	movw	r0, #0
   112a0:	movlt	r0, #1
   112a4:	tst	r0, #1
   112a8:	mvn	r0, #0
   112ac:	moveq	r0, #1
   112b0:	str	r0, [sp, #16]
   112b4:	b	112c0 <abort@plt+0xa80>
   112b8:	movw	r0, #0
   112bc:	str	r0, [sp, #16]
   112c0:	ldr	r0, [sp, #16]
   112c4:	add	sp, sp, #20
   112c8:	bx	lr
   112cc:	push	{fp, lr}
   112d0:	mov	fp, sp
   112d4:	sub	sp, sp, #24
   112d8:	str	r0, [fp, #-8]
   112dc:	str	r1, [sp, #12]
   112e0:	ldr	r0, [fp, #-8]
   112e4:	movw	r1, #0
   112e8:	cmp	r0, r1
   112ec:	bne	11330 <abort@plt+0xaf0>
   112f0:	ldr	r0, [sp, #12]
   112f4:	ldrb	r0, [r0]
   112f8:	cmp	r0, #114	; 0x72
   112fc:	bne	11314 <abort@plt+0xad4>
   11300:	ldr	r0, [pc, #148]	; 1139c <abort@plt+0xb5c>
   11304:	ldr	r0, [pc, r0]
   11308:	ldr	r0, [r0]
   1130c:	str	r0, [sp, #4]
   11310:	b	11324 <abort@plt+0xae4>
   11314:	ldr	r0, [pc, #124]	; 11398 <abort@plt+0xb58>
   11318:	ldr	r0, [pc, r0]
   1131c:	ldr	r0, [r0]
   11320:	str	r0, [sp, #4]
   11324:	ldr	r0, [sp, #4]
   11328:	str	r0, [fp, #-4]
   1132c:	b	1138c <abort@plt+0xb4c>
   11330:	ldr	r0, [fp, #-8]
   11334:	ldr	r1, [sp, #12]
   11338:	bl	1078c <fopen@plt>
   1133c:	str	r0, [sp, #8]
   11340:	ldr	r0, [sp, #8]
   11344:	movw	r1, #0
   11348:	cmp	r0, r1
   1134c:	beq	1135c <abort@plt+0xb1c>
   11350:	ldr	r0, [sp, #8]
   11354:	str	r0, [fp, #-4]
   11358:	b	1138c <abort@plt+0xb4c>
   1135c:	ldr	r0, [sp, #12]
   11360:	ldrb	r0, [r0]
   11364:	cmp	r0, #119	; 0x77
   11368:	bne	1137c <abort@plt+0xb3c>
   1136c:	ldr	r0, [pc, #48]	; 113a4 <abort@plt+0xb64>
   11370:	add	r0, pc, r0
   11374:	ldr	r1, [fp, #-8]
   11378:	bl	118b4 <error@@Base+0x60>
   1137c:	ldr	r0, [pc, #28]	; 113a0 <abort@plt+0xb60>
   11380:	add	r0, pc, r0
   11384:	ldr	r1, [fp, #-8]
   11388:	bl	118b4 <error@@Base+0x60>
   1138c:	ldr	r0, [fp, #-4]
   11390:	mov	sp, fp
   11394:	pop	{fp, pc}
   11398:	andeq	r1, r1, ip, ror sp
   1139c:	andeq	r1, r1, r4, lsl #27
   113a0:	andeq	r0, r0, sp, ror #23
   113a4:	andeq	r0, r0, r7, ror #23
   113a8:	push	{fp, lr}
   113ac:	mov	fp, sp
   113b0:	sub	sp, sp, #8
   113b4:	ldr	r1, [pc, #64]	; 113fc <abort@plt+0xbbc>
   113b8:	ldr	r1, [pc, r1]
   113bc:	str	r0, [sp, #4]
   113c0:	ldr	r0, [sp, #4]
   113c4:	ldr	r1, [r1]
   113c8:	cmp	r0, r1
   113cc:	beq	113f4 <abort@plt+0xbb4>
   113d0:	ldr	r0, [pc, #40]	; 11400 <abort@plt+0xbc0>
   113d4:	ldr	r0, [pc, r0]
   113d8:	ldr	r1, [sp, #4]
   113dc:	ldr	r0, [r0]
   113e0:	cmp	r1, r0
   113e4:	beq	113f4 <abort@plt+0xbb4>
   113e8:	ldr	r0, [sp, #4]
   113ec:	bl	1081c <fclose@plt>
   113f0:	str	r0, [sp]
   113f4:	mov	sp, fp
   113f8:	pop	{fp, pc}
   113fc:	ldrdeq	r1, [r1], -r0
   11400:	andeq	r1, r1, r0, asr #25
   11404:	push	{fp, lr}
   11408:	mov	fp, sp
   1140c:	sub	sp, sp, #96	; 0x60
   11410:	str	r0, [fp, #-4]
   11414:	ldr	r0, [fp, #-4]
   11418:	mov	r1, sp
   1141c:	bl	11e10 <error@@Base+0x5bc>
   11420:	cmp	r0, #0
   11424:	movw	r0, #0
   11428:	moveq	r0, #1
   1142c:	tst	r0, #1
   11430:	movw	r0, #1
   11434:	moveq	r0, #0
   11438:	and	r0, r0, #255	; 0xff
   1143c:	mov	sp, fp
   11440:	pop	{fp, pc}
   11444:	push	{fp, lr}
   11448:	mov	fp, sp
   1144c:	sub	sp, sp, #8
   11450:	ldr	r0, [pc, #68]	; 1149c <abort@plt+0xc5c>
   11454:	add	r0, pc, r0
   11458:	ldrh	r1, [r0]
   1145c:	movw	r2, #1
   11460:	add	r1, r1, r2
   11464:	strh	r1, [r0]
   11468:	sxth	r0, r1
   1146c:	bl	114a0 <abort@plt+0xc60>
   11470:	ldr	r1, [pc, #32]	; 11498 <abort@plt+0xc58>
   11474:	ldr	r1, [pc, r1]
   11478:	str	r0, [sp, #4]
   1147c:	ldr	r0, [sp, #4]
   11480:	blx	r1
   11484:	ldr	r1, [sp, #4]
   11488:	str	r0, [sp]
   1148c:	mov	r0, r1
   11490:	mov	sp, fp
   11494:	pop	{fp, pc}
   11498:	strdeq	r1, [r1], -r8
   1149c:	andeq	r1, r1, r2, asr #25
   114a0:	push	{fp, lr}
   114a4:	mov	fp, sp
   114a8:	sub	sp, sp, #128	; 0x80
   114ac:	ldr	r1, [pc, #112]	; 11524 <abort@plt+0xce4>
   114b0:	ldr	r1, [pc, r1]
   114b4:	ldr	r2, [pc, #108]	; 11528 <abort@plt+0xce8>
   114b8:	ldr	r2, [pc, r2]
   114bc:	add	r3, sp, #26
   114c0:	strh	r0, [fp, #-2]
   114c4:	ldr	r2, [r2]
   114c8:	str	r3, [sp, #20]
   114cc:	str	r2, [sp, #16]
   114d0:	blx	r1
   114d4:	ldr	r1, [pc, #68]	; 11520 <abort@plt+0xce0>
   114d8:	add	r1, pc, r1
   114dc:	ldrsh	r2, [fp, #-2]
   114e0:	ldr	r3, [sp, #20]
   114e4:	str	r0, [sp, #12]
   114e8:	mov	r0, r3
   114ec:	ldr	lr, [sp, #16]
   114f0:	str	r2, [sp, #8]
   114f4:	mov	r2, lr
   114f8:	ldr	r3, [sp, #12]
   114fc:	ldr	ip, [sp, #8]
   11500:	str	ip, [sp]
   11504:	bl	10828 <sprintf@plt>
   11508:	add	r1, sp, #26
   1150c:	str	r0, [sp, #4]
   11510:	mov	r0, r1
   11514:	bl	107b0 <strdup@plt>
   11518:	mov	sp, fp
   1151c:	pop	{fp, pc}
   11520:			; <UNDEFINED> instruction: 0x00000abe
   11524:	ldrdeq	r1, [r1], -r0
   11528:	andeq	r1, r1, r4, asr #23
   1152c:	push	{fp, lr}
   11530:	mov	fp, sp
   11534:	sub	sp, sp, #16
   11538:	str	r0, [fp, #-4]
   1153c:	movw	r0, #47	; 0x2f
   11540:	strb	r0, [fp, #-5]
   11544:	ldr	r0, [fp, #-4]
   11548:	bl	107f8 <strlen@plt>
   1154c:	sub	r0, r0, #1
   11550:	strh	r0, [sp, #8]
   11554:	ldrsh	r0, [sp, #8]
   11558:	cmp	r0, #0
   1155c:	movw	r0, #0
   11560:	str	r0, [sp, #4]
   11564:	blt	1158c <abort@plt+0xd4c>
   11568:	ldr	r0, [fp, #-4]
   1156c:	ldrsh	r1, [sp, #8]
   11570:	add	r0, r0, r1
   11574:	ldrb	r0, [r0]
   11578:	ldrb	r1, [fp, #-5]
   1157c:	cmp	r0, r1
   11580:	movw	r0, #0
   11584:	movne	r0, #1
   11588:	str	r0, [sp, #4]
   1158c:	ldr	r0, [sp, #4]
   11590:	tst	r0, #1
   11594:	beq	115b0 <abort@plt+0xd70>
   11598:	b	1159c <abort@plt+0xd5c>
   1159c:	ldrh	r0, [sp, #8]
   115a0:	movw	r1, #65535	; 0xffff
   115a4:	add	r0, r0, r1
   115a8:	strh	r0, [sp, #8]
   115ac:	b	11554 <abort@plt+0xd14>
   115b0:	ldr	r0, [fp, #-4]
   115b4:	ldrsh	r1, [sp, #8]
   115b8:	add	r1, r1, #1
   115bc:	add	r0, r0, r1
   115c0:	mov	sp, fp
   115c4:	pop	{fp, pc}
   115c8:	push	{fp, lr}
   115cc:	mov	fp, sp
   115d0:	sub	sp, sp, #16
   115d4:	str	r0, [fp, #-4]
   115d8:	str	r1, [sp, #8]
   115dc:	str	r2, [sp, #4]
   115e0:	str	r3, [sp]
   115e4:	ldr	r0, [sp, #8]
   115e8:	ldr	r0, [r0]
   115ec:	bl	1152c <abort@plt+0xcec>
   115f0:	ldr	r1, [pc, #36]	; 1161c <abort@plt+0xddc>
   115f4:	ldr	r1, [pc, r1]
   115f8:	str	r0, [r1]
   115fc:	bl	11994 <error@@Base+0x140>
   11600:	ldr	r0, [fp, #-4]
   11604:	ldr	r1, [sp, #8]
   11608:	ldr	r2, [sp, #4]
   1160c:	ldr	r3, [sp]
   11610:	bl	11620 <abort@plt+0xde0>
   11614:	mov	sp, fp
   11618:	pop	{fp, pc}
   1161c:	andeq	r1, r1, r8, lsl #21
   11620:	push	{fp, lr}
   11624:	mov	fp, sp
   11628:	sub	sp, sp, #48	; 0x30
   1162c:	str	r0, [fp, #-4]
   11630:	str	r1, [fp, #-8]
   11634:	str	r2, [fp, #-12]
   11638:	str	r3, [fp, #-16]
   1163c:	movw	r0, #0
   11640:	strh	r0, [fp, #-20]	; 0xffffffec
   11644:	ldr	r0, [fp, #-4]
   11648:	ldr	r0, [r0]
   1164c:	cmp	r0, #1
   11650:	bne	11670 <abort@plt+0xe30>
   11654:	ldr	r0, [pc, #404]	; 117f0 <abort@plt+0xfb0>
   11658:	ldr	r0, [pc, r0]
   1165c:	ldrb	r0, [r0]
   11660:	cmp	r0, #0
   11664:	beq	11670 <abort@plt+0xe30>
   11668:	ldr	r0, [fp, #-12]
   1166c:	bl	11a30 <error@@Base+0x1dc>
   11670:	movw	r0, #1
   11674:	strh	r0, [fp, #-18]	; 0xffffffee
   11678:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   1167c:	ldr	r1, [fp, #-4]
   11680:	ldr	r1, [r1]
   11684:	cmp	r0, r1
   11688:	bge	117dc <abort@plt+0xf9c>
   1168c:	ldr	r0, [fp, #-8]
   11690:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11694:	add	r0, r0, r1, lsl #2
   11698:	ldr	r0, [r0]
   1169c:	ldrb	r0, [r0]
   116a0:	cmp	r0, #45	; 0x2d
   116a4:	bne	117a4 <abort@plt+0xf64>
   116a8:	ldr	r0, [fp, #-8]
   116ac:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   116b0:	add	r0, r0, r1, lsl #2
   116b4:	ldr	r0, [r0]
   116b8:	ldrb	r0, [r0, #1]
   116bc:	cmp	r0, #0
   116c0:	beq	117a4 <abort@plt+0xf64>
   116c4:	ldr	r0, [pc, #296]	; 117f4 <abort@plt+0xfb4>
   116c8:	add	r0, pc, r0
   116cc:	ldr	r1, [fp, #-8]
   116d0:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   116d4:	ldr	r2, [r1, r2, lsl #2]!
   116d8:	ldr	r1, [r1]
   116dc:	str	r0, [sp, #24]
   116e0:	mov	r0, r1
   116e4:	str	r2, [sp, #20]
   116e8:	bl	107f8 <strlen@plt>
   116ec:	ldr	r1, [sp, #24]
   116f0:	str	r0, [sp, #16]
   116f4:	mov	r0, r1
   116f8:	ldr	r1, [sp, #20]
   116fc:	ldr	r2, [sp, #16]
   11700:	bl	10834 <strncmp@plt>
   11704:	cmp	r0, #0
   11708:	bne	11714 <abort@plt+0xed4>
   1170c:	ldr	r0, [fp, #-12]
   11710:	bl	11a30 <error@@Base+0x1dc>
   11714:	ldr	r0, [fp, #-8]
   11718:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   1171c:	add	r0, r0, r1, lsl #2
   11720:	ldr	r0, [r0]
   11724:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11728:	add	r1, r1, #1
   1172c:	ldr	r2, [fp, #-4]
   11730:	ldr	r2, [r2]
   11734:	cmp	r1, r2
   11738:	str	r0, [sp, #12]
   1173c:	bge	1175c <abort@plt+0xf1c>
   11740:	ldr	r0, [fp, #-8]
   11744:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11748:	add	r1, r1, #1
   1174c:	add	r0, r0, r1, lsl #2
   11750:	ldr	r0, [r0]
   11754:	str	r0, [sp, #8]
   11758:	b	11768 <abort@plt+0xf28>
   1175c:	movw	r0, #0
   11760:	str	r0, [sp, #8]
   11764:	b	11768 <abort@plt+0xf28>
   11768:	ldr	r0, [sp, #8]
   1176c:	ldr	r2, [fp, #-16]
   11770:	ldr	r1, [sp, #12]
   11774:	str	r0, [sp, #4]
   11778:	mov	r0, r1
   1177c:	ldr	r1, [sp, #4]
   11780:	bl	11abc <error@@Base+0x268>
   11784:	sxtb	r0, r0
   11788:	cmp	r0, #0
   1178c:	beq	117a0 <abort@plt+0xf60>
   11790:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11794:	movw	r1, #1
   11798:	add	r0, r0, r1
   1179c:	strh	r0, [fp, #-18]	; 0xffffffee
   117a0:	b	117c4 <abort@plt+0xf84>
   117a4:	ldr	r0, [fp, #-8]
   117a8:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   117ac:	ldr	r1, [r0, r1, lsl #2]
   117b0:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   117b4:	add	r3, r2, #1
   117b8:	strh	r3, [fp, #-20]	; 0xffffffec
   117bc:	add	r0, r0, r2, lsl #2
   117c0:	str	r1, [r0]
   117c4:	b	117c8 <abort@plt+0xf88>
   117c8:	ldrh	r0, [fp, #-18]	; 0xffffffee
   117cc:	movw	r1, #1
   117d0:	add	r0, r0, r1
   117d4:	strh	r0, [fp, #-18]	; 0xffffffee
   117d8:	b	11678 <abort@plt+0xe38>
   117dc:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   117e0:	ldr	r1, [fp, #-4]
   117e4:	str	r0, [r1]
   117e8:	mov	sp, fp
   117ec:	pop	{fp, pc}
   117f0:	andeq	r1, r1, r0, lsl #20
   117f4:	andeq	r0, r0, fp, ror #17
   117f8:	push	{fp, lr}
   117fc:	mov	fp, sp
   11800:	movw	r0, #0
   11804:	bl	11808 <abort@plt+0xfc8>
   11808:	push	{fp, lr}
   1180c:	mov	fp, sp
   11810:	sub	sp, sp, #8
   11814:	ldr	r1, [pc, #48]	; 1184c <abort@plt+0x100c>
   11818:	ldr	r1, [pc, r1]
   1181c:	str	r0, [sp, #4]
   11820:	ldr	r0, [r1]
   11824:	movw	r1, #0
   11828:	cmp	r0, r1
   1182c:	beq	11840 <abort@plt+0x1000>
   11830:	ldr	r0, [pc, #24]	; 11850 <abort@plt+0x1010>
   11834:	ldr	r0, [pc, r0]
   11838:	ldr	r0, [r0]
   1183c:	blx	r0
   11840:	bl	11d30 <error@@Base+0x4dc>
   11844:	ldr	r0, [sp, #4]
   11848:	bl	107ec <exit@plt>
   1184c:	andeq	r1, r1, ip, ror #16
   11850:	andeq	r1, r1, r0, asr r8

00011854 <error@@Base>:
   11854:	push	{fp, lr}
   11858:	mov	fp, sp
   1185c:	sub	sp, sp, #8
   11860:	ldr	r1, [pc, #64]	; 118a8 <error@@Base+0x54>
   11864:	add	r1, pc, r1
   11868:	ldr	r2, [pc, #60]	; 118ac <error@@Base+0x58>
   1186c:	ldr	r2, [pc, r2]
   11870:	ldr	r3, [pc, #56]	; 118b0 <error@@Base+0x5c>
   11874:	ldr	r3, [pc, r3]
   11878:	str	r0, [sp, #4]
   1187c:	ldr	r0, [r3]
   11880:	ldr	r2, [r2]
   11884:	ldr	r3, [sp, #4]
   11888:	bl	10804 <fprintf@plt>
   1188c:	ldr	r1, [pc, #16]	; 118a4 <error@@Base+0x50>
   11890:	ldr	r1, [pc, r1]
   11894:	ldr	r1, [r1]
   11898:	str	r0, [sp]
   1189c:	mov	r0, r1
   118a0:	bl	11808 <abort@plt+0xfc8>
   118a4:	andeq	r1, r1, r8, lsl #16
   118a8:	andeq	r0, r0, sp, lsl r7
   118ac:	andeq	r1, r1, r0, lsl r8
   118b0:	strdeq	r1, [r1], -ip
   118b4:	push	{fp, lr}
   118b8:	mov	fp, sp
   118bc:	sub	sp, sp, #24
   118c0:	ldr	r2, [pc, #88]	; 11920 <error@@Base+0xcc>
   118c4:	add	r2, pc, r2
   118c8:	ldr	r3, [pc, #84]	; 11924 <error@@Base+0xd0>
   118cc:	ldr	r3, [pc, r3]
   118d0:	ldr	ip, [pc, #80]	; 11928 <error@@Base+0xd4>
   118d4:	ldr	ip, [pc, ip]
   118d8:	str	r0, [fp, #-4]
   118dc:	str	r1, [fp, #-8]
   118e0:	ldr	r0, [ip]
   118e4:	ldr	r1, [r3]
   118e8:	ldr	r3, [fp, #-4]
   118ec:	ldr	ip, [fp, #-8]
   118f0:	str	r1, [sp, #12]
   118f4:	mov	r1, r2
   118f8:	ldr	r2, [sp, #12]
   118fc:	str	ip, [sp]
   11900:	bl	10804 <fprintf@plt>
   11904:	ldr	r1, [pc, #16]	; 1191c <error@@Base+0xc8>
   11908:	ldr	r1, [pc, r1]
   1190c:	ldr	r1, [r1]
   11910:	str	r0, [sp, #8]
   11914:	mov	r0, r1
   11918:	bl	11808 <abort@plt+0xfc8>
   1191c:	muleq	r1, r0, r7
   11920:	andeq	r0, r0, r5, asr #13
   11924:			; <UNDEFINED> instruction: 0x000117b0
   11928:	muleq	r1, ip, r7
   1192c:	push	{fp, lr}
   11930:	mov	fp, sp
   11934:	sub	sp, sp, #24
   11938:	ldr	r2, [pc, #72]	; 11988 <error@@Base+0x134>
   1193c:	add	r2, pc, r2
   11940:	ldr	r3, [pc, #68]	; 1198c <error@@Base+0x138>
   11944:	ldr	r3, [pc, r3]
   11948:	ldr	ip, [pc, #64]	; 11990 <error@@Base+0x13c>
   1194c:	ldr	ip, [pc, ip]
   11950:	str	r0, [fp, #-4]
   11954:	str	r1, [fp, #-8]
   11958:	ldr	r0, [ip]
   1195c:	ldr	r1, [r3]
   11960:	ldr	r3, [fp, #-4]
   11964:	ldr	ip, [fp, #-8]
   11968:	str	r1, [sp, #12]
   1196c:	mov	r1, r2
   11970:	ldr	r2, [sp, #12]
   11974:	str	ip, [sp]
   11978:	bl	10804 <fprintf@plt>
   1197c:	str	r0, [sp, #8]
   11980:	mov	sp, fp
   11984:	pop	{fp, pc}
   11988:	andeq	r0, r0, sp, asr #12
   1198c:	andeq	r1, r1, r8, lsr r7
   11990:	andeq	r1, r1, r4, lsr #14
   11994:	push	{fp, lr}
   11998:	mov	fp, sp
   1199c:	sub	sp, sp, #8
   119a0:	ldr	r0, [pc, #48]	; 119d8 <error@@Base+0x184>
   119a4:	add	r1, pc, r0
   119a8:	movw	r0, #2
   119ac:	bl	107d4 <__sysv_signal@plt>
   119b0:	ldr	r1, [pc, #28]	; 119d4 <error@@Base+0x180>
   119b4:	add	r1, pc, r1
   119b8:	movw	lr, #15
   119bc:	str	r0, [sp, #4]
   119c0:	mov	r0, lr
   119c4:	bl	107d4 <__sysv_signal@plt>
   119c8:	str	r0, [sp]
   119cc:	mov	sp, fp
   119d0:	pop	{fp, pc}
   119d4:	andeq	r0, r0, r0, lsr #32
   119d8:	andeq	r0, r0, r0, lsr r0
   119dc:	push	{fp, lr}
   119e0:	mov	fp, sp
   119e4:	sub	sp, sp, #8
   119e8:	ldr	r1, [pc, #52]	; 11a24 <error@@Base+0x1d0>
   119ec:	add	r1, pc, r1
   119f0:	str	r0, [sp, #4]
   119f4:	ldrsb	r0, [r1]
   119f8:	cmp	r0, #0
   119fc:	beq	11a08 <error@@Base+0x1b4>
   11a00:	mov	sp, fp
   11a04:	pop	{fp, pc}
   11a08:	ldr	r0, [pc, #24]	; 11a28 <error@@Base+0x1d4>
   11a0c:	add	r0, pc, r0
   11a10:	ldr	r1, [pc, #20]	; 11a2c <error@@Base+0x1d8>
   11a14:	add	r1, pc, r1
   11a18:	movw	r2, #1
   11a1c:	strb	r2, [r1]
   11a20:	bl	11854 <error@@Base>
   11a24:	andeq	r1, r1, ip, lsr #14
   11a28:	muleq	r0, r8, r5
   11a2c:	andeq	r1, r1, r4, lsl #14
   11a30:	push	{fp, lr}
   11a34:	mov	fp, sp
   11a38:	sub	sp, sp, #16
   11a3c:	ldr	r1, [pc, #100]	; 11aa8 <error@@Base+0x254>
   11a40:	ldr	r1, [pc, r1]
   11a44:	str	r0, [fp, #-4]
   11a48:	ldr	r0, [r1]
   11a4c:	movw	r1, #0
   11a50:	cmp	r0, r1
   11a54:	beq	11a6c <error@@Base+0x218>
   11a58:	ldr	r0, [pc, #88]	; 11ab8 <error@@Base+0x264>
   11a5c:	ldr	r0, [pc, r0]
   11a60:	ldr	r0, [r0]
   11a64:	blx	r0
   11a68:	b	11aa4 <error@@Base+0x250>
   11a6c:	ldr	r0, [pc, #56]	; 11aac <error@@Base+0x258>
   11a70:	add	r1, pc, r0
   11a74:	ldr	r0, [pc, #52]	; 11ab0 <error@@Base+0x25c>
   11a78:	ldr	r0, [pc, r0]
   11a7c:	ldr	r2, [pc, #48]	; 11ab4 <error@@Base+0x260>
   11a80:	ldr	r2, [pc, r2]
   11a84:	ldr	r2, [r2]
   11a88:	ldr	r0, [r0]
   11a8c:	ldr	r3, [fp, #-4]
   11a90:	str	r0, [sp, #8]
   11a94:	mov	r0, r2
   11a98:	ldr	r2, [sp, #8]
   11a9c:	bl	10804 <fprintf@plt>
   11aa0:	str	r0, [sp, #4]
   11aa4:	bl	117f8 <abort@plt+0xfb8>
   11aa8:	andeq	r1, r1, r0, lsr #12
   11aac:	andeq	r0, r0, r9, asr #10
   11ab0:	andeq	r1, r1, r4, lsl #12
   11ab4:	strdeq	r1, [r1], -r0
   11ab8:	andeq	r1, r1, r4, lsl #12
   11abc:	push	{fp, lr}
   11ac0:	mov	fp, sp
   11ac4:	sub	sp, sp, #32
   11ac8:	str	r0, [fp, #-8]
   11acc:	str	r1, [fp, #-12]
   11ad0:	str	r2, [sp, #16]
   11ad4:	ldr	r0, [sp, #16]
   11ad8:	movw	r1, #0
   11adc:	cmp	r0, r1
   11ae0:	bne	11ae8 <error@@Base+0x294>
   11ae4:	b	11cfc <error@@Base+0x4a8>
   11ae8:	movw	r0, #0
   11aec:	strh	r0, [sp, #14]
   11af0:	ldr	r0, [sp, #16]
   11af4:	ldrsh	r1, [sp, #14]
   11af8:	movw	r2, #12
   11afc:	mul	r1, r1, r2
   11b00:	add	r0, r0, r1
   11b04:	ldrb	r0, [r0]
   11b08:	cmp	r0, #0
   11b0c:	movw	r0, #0
   11b10:	str	r0, [sp, #8]
   11b14:	beq	11b48 <error@@Base+0x2f4>
   11b18:	ldr	r0, [fp, #-8]
   11b1c:	ldrb	r0, [r0, #1]
   11b20:	ldr	r1, [sp, #16]
   11b24:	ldrsh	r2, [sp, #14]
   11b28:	movw	r3, #12
   11b2c:	mul	r2, r2, r3
   11b30:	add	r1, r1, r2
   11b34:	ldrb	r1, [r1]
   11b38:	cmp	r0, r1
   11b3c:	movw	r0, #0
   11b40:	movne	r0, #1
   11b44:	str	r0, [sp, #8]
   11b48:	ldr	r0, [sp, #8]
   11b4c:	tst	r0, #1
   11b50:	beq	11b6c <error@@Base+0x318>
   11b54:	b	11b58 <error@@Base+0x304>
   11b58:	ldrh	r0, [sp, #14]
   11b5c:	movw	r1, #1
   11b60:	add	r0, r0, r1
   11b64:	strh	r0, [sp, #14]
   11b68:	b	11af0 <error@@Base+0x29c>
   11b6c:	ldr	r0, [sp, #16]
   11b70:	ldrsh	r1, [sp, #14]
   11b74:	movw	r2, #12
   11b78:	mul	r1, r1, r2
   11b7c:	add	r0, r0, r1
   11b80:	ldrsb	r0, [r0]
   11b84:	cmp	r0, #0
   11b88:	bne	11b90 <error@@Base+0x33c>
   11b8c:	b	11cfc <error@@Base+0x4a8>
   11b90:	ldr	r0, [sp, #16]
   11b94:	ldrsh	r1, [sp, #14]
   11b98:	movw	r2, #12
   11b9c:	mul	r1, r1, r2
   11ba0:	add	r0, r0, r1
   11ba4:	ldr	r0, [r0, #4]
   11ba8:	movw	r1, #0
   11bac:	cmp	r0, r1
   11bb0:	beq	11c70 <error@@Base+0x41c>
   11bb4:	ldr	r0, [fp, #-8]
   11bb8:	ldrb	r0, [r0, #2]
   11bbc:	cmp	r0, #0
   11bc0:	bne	11bd4 <error@@Base+0x380>
   11bc4:	ldr	r0, [fp, #-12]
   11bc8:	movw	r1, #0
   11bcc:	cmp	r0, r1
   11bd0:	beq	11c70 <error@@Base+0x41c>
   11bd4:	ldr	r0, [sp, #16]
   11bd8:	ldrsh	r1, [sp, #14]
   11bdc:	movw	r2, #12
   11be0:	mul	r1, r1, r2
   11be4:	add	r0, r0, r1
   11be8:	ldr	r0, [r0, #4]
   11bec:	ldr	r0, [r0]
   11bf0:	movw	r1, #0
   11bf4:	cmp	r0, r1
   11bf8:	beq	11c00 <error@@Base+0x3ac>
   11bfc:	b	11d0c <error@@Base+0x4b8>
   11c00:	ldr	r0, [fp, #-8]
   11c04:	ldrb	r0, [r0, #2]
   11c08:	cmp	r0, #0
   11c0c:	beq	11c20 <error@@Base+0x3cc>
   11c10:	ldr	r0, [fp, #-8]
   11c14:	add	r0, r0, #2
   11c18:	str	r0, [sp, #4]
   11c1c:	b	11c28 <error@@Base+0x3d4>
   11c20:	ldr	r0, [fp, #-12]
   11c24:	str	r0, [sp, #4]
   11c28:	ldr	r0, [sp, #4]
   11c2c:	ldr	r1, [sp, #16]
   11c30:	ldrsh	r2, [sp, #14]
   11c34:	movw	r3, #12
   11c38:	mul	r2, r2, r3
   11c3c:	add	r1, r1, r2
   11c40:	ldr	r1, [r1, #4]
   11c44:	str	r0, [r1]
   11c48:	ldr	r0, [fp, #-8]
   11c4c:	ldrb	r0, [r0, #2]
   11c50:	cmp	r0, #0
   11c54:	movw	r0, #0
   11c58:	movne	r0, #1
   11c5c:	tst	r0, #1
   11c60:	movw	r0, #0
   11c64:	moveq	r0, #1
   11c68:	strb	r0, [fp, #-1]
   11c6c:	b	11d1c <error@@Base+0x4c8>
   11c70:	ldr	r0, [sp, #16]
   11c74:	ldrsh	r1, [sp, #14]
   11c78:	movw	r2, #12
   11c7c:	mul	r1, r1, r2
   11c80:	add	r0, r0, r1
   11c84:	ldr	r0, [r0, #8]
   11c88:	movw	r1, #0
   11c8c:	cmp	r0, r1
   11c90:	beq	11cf8 <error@@Base+0x4a4>
   11c94:	ldr	r0, [fp, #-8]
   11c98:	ldrsb	r0, [r0, #2]
   11c9c:	cmp	r0, #0
   11ca0:	bne	11cf8 <error@@Base+0x4a4>
   11ca4:	ldr	r0, [sp, #16]
   11ca8:	ldrsh	r1, [sp, #14]
   11cac:	movw	r2, #12
   11cb0:	mul	r1, r1, r2
   11cb4:	add	r0, r0, r1
   11cb8:	ldr	r0, [r0, #8]
   11cbc:	ldrsb	r0, [r0]
   11cc0:	cmp	r0, #0
   11cc4:	beq	11ccc <error@@Base+0x478>
   11cc8:	b	11d0c <error@@Base+0x4b8>
   11ccc:	ldr	r0, [sp, #16]
   11cd0:	ldrsh	r1, [sp, #14]
   11cd4:	movw	r2, #12
   11cd8:	mul	r1, r1, r2
   11cdc:	add	r0, r0, r1
   11ce0:	ldr	r0, [r0, #8]
   11ce4:	movw	r1, #1
   11ce8:	strb	r1, [r0]
   11cec:	movw	r0, #0
   11cf0:	strb	r0, [fp, #-1]
   11cf4:	b	11d1c <error@@Base+0x4c8>
   11cf8:	b	11cfc <error@@Base+0x4a8>
   11cfc:	ldr	r0, [pc, #36]	; 11d28 <error@@Base+0x4d4>
   11d00:	add	r0, pc, r0
   11d04:	ldr	r1, [fp, #-8]
   11d08:	bl	118b4 <error@@Base+0x60>
   11d0c:	ldr	r0, [pc, #24]	; 11d2c <error@@Base+0x4d8>
   11d10:	add	r0, pc, r0
   11d14:	ldr	r1, [fp, #-8]
   11d18:	bl	118b4 <error@@Base+0x60>
   11d1c:	ldrb	r0, [fp, #-1]
   11d20:	mov	sp, fp
   11d24:	pop	{fp, pc}
   11d28:	andeq	r0, r0, r8, asr #5
   11d2c:	andeq	r0, r0, r7, asr #5
   11d30:	push	{fp, lr}
   11d34:	mov	fp, sp
   11d38:	sub	sp, sp, #16
   11d3c:	movw	r0, #1
   11d40:	strh	r0, [fp, #-2]
   11d44:	ldr	r0, [pc, #88]	; 11da4 <error@@Base+0x550>
   11d48:	add	r0, pc, r0
   11d4c:	ldrsh	r1, [fp, #-2]
   11d50:	ldrsh	r0, [r0]
   11d54:	cmp	r1, r0
   11d58:	bgt	11d9c <error@@Base+0x548>
   11d5c:	ldrsh	r0, [fp, #-2]
   11d60:	bl	114a0 <abort@plt+0xc60>
   11d64:	ldr	lr, [pc, #60]	; 11da8 <error@@Base+0x554>
   11d68:	ldr	lr, [pc, lr]
   11d6c:	str	r0, [sp, #8]
   11d70:	ldr	r0, [sp, #8]
   11d74:	blx	lr
   11d78:	ldr	lr, [sp, #8]
   11d7c:	str	r0, [sp, #4]
   11d80:	mov	r0, lr
   11d84:	bl	10798 <free@plt>
   11d88:	ldrh	r0, [fp, #-2]
   11d8c:	movw	r1, #1
   11d90:	add	r0, r0, r1
   11d94:	strh	r0, [fp, #-2]
   11d98:	b	11d44 <error@@Base+0x4f0>
   11d9c:	mov	sp, fp
   11da0:	pop	{fp, pc}
   11da4:	andeq	r1, r1, lr, asr #7
   11da8:	andeq	r1, r1, r4, lsl #6
   11dac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11db0:	mov	r7, r0
   11db4:	ldr	r6, [pc, #72]	; 11e04 <error@@Base+0x5b0>
   11db8:	ldr	r5, [pc, #72]	; 11e08 <error@@Base+0x5b4>
   11dbc:	add	r6, pc, r6
   11dc0:	add	r5, pc, r5
   11dc4:	sub	r6, r6, r5
   11dc8:	mov	r8, r1
   11dcc:	mov	r9, r2
   11dd0:	bl	10748 <calloc@plt-0x20>
   11dd4:	asrs	r6, r6, #2
   11dd8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ddc:	mov	r4, #0
   11de0:	add	r4, r4, #1
   11de4:	ldr	r3, [r5], #4
   11de8:	mov	r2, r9
   11dec:	mov	r1, r8
   11df0:	mov	r0, r7
   11df4:	blx	r3
   11df8:	cmp	r6, r4
   11dfc:	bne	11de0 <error@@Base+0x58c>
   11e00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e04:	andeq	r1, r1, r8, lsr r1
   11e08:	andeq	r1, r1, r0, lsr r1
   11e0c:	bx	lr
   11e10:	mov	r2, r1
   11e14:	mov	r1, r0
   11e18:	mov	r0, #3
   11e1c:	b	107bc <__xstat@plt>

Disassembly of section .fini:

00011e20 <.fini>:
   11e20:	push	{r3, lr}
   11e24:	pop	{r3, pc}
