
../repos/charybdis/extensions/.libs/ip_cloaking.so:     file format elf32-littlearm


Disassembly of section .init:

000005f8 <_init>:
 5f8:	push	{r3, lr}
 5fc:	bl	6cc <call_weak_fn>
 600:	pop	{r3, pc}

Disassembly of section .plt:

00000604 <.plt>:
 604:	push	{lr}		; (str lr, [sp, #-4]!)
 608:	ldr	lr, [pc, #4]	; 614 <.plt+0x10>
 60c:	add	lr, pc, lr
 610:	ldr	pc, [lr, #8]!
 614:	.word	0x000119ec

00000618 <calloc@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #69632	; 0x11000
 620:	ldr	pc, [ip, #2540]!	; 0x9ec

00000624 <strcmp@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #69632	; 0x11000
 62c:	ldr	pc, [ip, #2532]!	; 0x9e4

00000630 <__cxa_finalize@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #69632	; 0x11000
 638:	ldr	pc, [ip, #2524]!	; 0x9dc

0000063c <rb_outofmemory@plt>:
 63c:	add	ip, pc, #0, 12
 640:	add	ip, ip, #69632	; 0x11000
 644:	ldr	pc, [ip, #2516]!	; 0x9d4

00000648 <find_umode_slot@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #69632	; 0x11000
 650:	ldr	pc, [ip, #2508]!	; 0x9cc

00000654 <fnv_hash@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #69632	; 0x11000
 65c:	ldr	pc, [ip, #2500]!	; 0x9c4

00000660 <sendto_server@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #69632	; 0x11000
 668:	ldr	pc, [ip, #2492]!	; 0x9bc

0000066c <__gmon_start__@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #69632	; 0x11000
 674:	ldr	pc, [ip, #2484]!	; 0x9b4

00000678 <__ctype_b_loc@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #69632	; 0x11000
 680:	ldr	pc, [ip, #2476]!	; 0x9ac

00000684 <sendto_one_numeric@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #69632	; 0x11000
 68c:	ldr	pc, [ip, #2468]!	; 0x9a4

00000690 <strchr@plt>:
 690:	add	ip, pc, #0, 12
 694:	add	ip, ip, #69632	; 0x11000
 698:	ldr	pc, [ip, #2460]!	; 0x99c

0000069c <change_nick_user_host@plt>:
 69c:	add	ip, pc, #0, 12
 6a0:	add	ip, ip, #69632	; 0x11000
 6a4:	ldr	pc, [ip, #2452]!	; 0x994

000006a8 <rb_strlcpy@plt>:
 6a8:	add	ip, pc, #0, 12
 6ac:	add	ip, ip, #69632	; 0x11000
 6b0:	ldr	pc, [ip, #2444]!	; 0x98c

000006b4 <irccmp@plt>:
 6b4:	add	ip, pc, #0, 12
 6b8:	add	ip, ip, #69632	; 0x11000
 6bc:	ldr	pc, [ip, #2436]!	; 0x984

000006c0 <construct_umodebuf@plt>:
 6c0:	add	ip, pc, #0, 12
 6c4:	add	ip, ip, #69632	; 0x11000
 6c8:	ldr	pc, [ip, #2428]!	; 0x97c

Disassembly of section .text:

000006cc <call_weak_fn>:
 6cc:	ldr	r3, [pc, #20]	; 6e8 <call_weak_fn+0x1c>
 6d0:	ldr	r2, [pc, #20]	; 6ec <call_weak_fn+0x20>
 6d4:	add	r3, pc, r3
 6d8:	ldr	r2, [r3, r2]
 6dc:	cmp	r2, #0
 6e0:	bxeq	lr
 6e4:	b	66c <__gmon_start__@plt>
 6e8:	.word	0x00011924
 6ec:	.word	0x00000058

000006f0 <deregister_tm_clones>:
 6f0:	ldr	r3, [pc, #52]	; 72c <deregister_tm_clones+0x3c>
 6f4:	ldr	r0, [pc, #52]	; 730 <deregister_tm_clones+0x40>
 6f8:	add	r3, pc, r3
 6fc:	add	r0, pc, r0
 700:	add	r3, r3, #3
 704:	sub	r3, r3, r0
 708:	cmp	r3, #6
 70c:	ldr	r3, [pc, #32]	; 734 <deregister_tm_clones+0x44>
 710:	add	r3, pc, r3
 714:	bxls	lr
 718:	ldr	r2, [pc, #24]	; 738 <deregister_tm_clones+0x48>
 71c:	ldr	r3, [r3, r2]
 720:	cmp	r3, #0
 724:	bxeq	lr
 728:	bx	r3
 72c:	.word	0x000119bc
 730:	.word	0x000119b8
 734:	.word	0x000118e8
 738:	.word	0x0000004c

0000073c <register_tm_clones>:
 73c:	ldr	r1, [pc, #56]	; 77c <register_tm_clones+0x40>
 740:	ldr	r0, [pc, #56]	; 780 <register_tm_clones+0x44>
 744:	add	r1, pc, r1
 748:	add	r0, pc, r0
 74c:	sub	r1, r1, r0
 750:	ldr	r3, [pc, #44]	; 784 <register_tm_clones+0x48>
 754:	asr	r1, r1, #2
 758:	add	r3, pc, r3
 75c:	add	r1, r1, r1, lsr #31
 760:	asrs	r1, r1, #1
 764:	bxeq	lr
 768:	ldr	r2, [pc, #24]	; 788 <register_tm_clones+0x4c>
 76c:	ldr	r3, [r3, r2]
 770:	cmp	r3, #0
 774:	bxeq	lr
 778:	bx	r3
 77c:	.word	0x00011970
 780:	.word	0x0001196c
 784:	.word	0x000118a0
 788:	.word	0x00000064

0000078c <__do_global_dtors_aux>:
 78c:	ldr	r3, [pc, #76]	; 7e0 <__do_global_dtors_aux+0x54>
 790:	ldr	r2, [pc, #76]	; 7e4 <__do_global_dtors_aux+0x58>
 794:	add	r3, pc, r3
 798:	add	r2, pc, r2
 79c:	ldrb	r3, [r3]
 7a0:	cmp	r3, #0
 7a4:	bxne	lr
 7a8:	ldr	r3, [pc, #56]	; 7e8 <__do_global_dtors_aux+0x5c>
 7ac:	push	{r4, lr}
 7b0:	ldr	r3, [r2, r3]
 7b4:	cmp	r3, #0
 7b8:	beq	7c8 <__do_global_dtors_aux+0x3c>
 7bc:	ldr	r3, [pc, #40]	; 7ec <__do_global_dtors_aux+0x60>
 7c0:	ldr	r0, [pc, r3]
 7c4:	bl	630 <__cxa_finalize@plt>
 7c8:	bl	6f0 <deregister_tm_clones>
 7cc:	ldr	r3, [pc, #28]	; 7f0 <__do_global_dtors_aux+0x64>
 7d0:	mov	r2, #1
 7d4:	add	r3, pc, r3
 7d8:	strb	r2, [r3]
 7dc:	pop	{r4, pc}
 7e0:	.word	0x00011920
 7e4:	.word	0x00011860
 7e8:	.word	0x00000048
 7ec:	.word	0x000118a4
 7f0:	.word	0x000118e0

000007f4 <frame_dummy>:
 7f4:	ldr	r0, [pc, #56]	; 834 <frame_dummy+0x40>
 7f8:	ldr	r3, [pc, #56]	; 838 <frame_dummy+0x44>
 7fc:	add	r0, pc, r0
 800:	ldr	r2, [r0]
 804:	add	r3, pc, r3
 808:	cmp	r2, #0
 80c:	bne	814 <frame_dummy+0x20>
 810:	b	73c <register_tm_clones>
 814:	ldr	r2, [pc, #32]	; 83c <frame_dummy+0x48>
 818:	ldr	r3, [r3, r2]
 81c:	cmp	r3, #0
 820:	beq	810 <frame_dummy+0x1c>
 824:	push	{r4, lr}
 828:	blx	r3
 82c:	pop	{r4, lr}
 830:	b	73c <register_tm_clones>
 834:	.word	0x000116f8
 838:	.word	0x000117f4
 83c:	.word	0x00000060

00000840 <distribute_hostchange>:
 840:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 844:	add	r8, r0, #227	; 0xe3
 848:	ldr	r7, [pc, #312]	; 988 <distribute_hostchange+0x148>
 84c:	cmp	r8, r1
 850:	sub	sp, sp, #16
 854:	mov	r4, r0
 858:	mov	r6, r1
 85c:	add	r7, pc, r7
 860:	beq	970 <distribute_hostchange+0x130>
 864:	ldr	r2, [pc, #288]	; 98c <distribute_hostchange+0x14c>
 868:	mov	r3, r1
 86c:	add	r2, pc, r2
 870:	mov	r1, #396	; 0x18c
 874:	bl	684 <sendto_one_numeric@plt>
 878:	ldr	r1, [pc, #272]	; 990 <distribute_hostchange+0x150>
 87c:	ldr	r2, [pc, #272]	; 994 <distribute_hostchange+0x154>
 880:	ldr	r3, [pc, #272]	; 998 <distribute_hostchange+0x158>
 884:	ldr	r5, [r7, r1]
 888:	ldr	r9, [r7, r2]
 88c:	ldr	sl, [r7, r3]
 890:	ldrb	r1, [r5, #396]	; 0x18c
 894:	ldr	r2, [r9]
 898:	ldr	r3, [sl]
 89c:	cmp	r1, #0
 8a0:	orr	r2, r2, r3
 8a4:	ldrb	r3, [r4, #396]	; 0x18c
 8a8:	ldr	r1, [pc, #236]	; 99c <distribute_hostchange+0x15c>
 8ac:	addne	ip, r5, #396	; 0x18c
 8b0:	addeq	ip, r5, #88	; 0x58
 8b4:	add	r1, pc, r1
 8b8:	cmp	r3, #0
 8bc:	addeq	r0, r4, #88	; 0x58
 8c0:	addne	r0, r4, #396	; 0x18c
 8c4:	mov	r3, #0
 8c8:	moveq	r7, r0
 8cc:	stm	sp, {r1, ip}
 8d0:	str	r0, [sp, #8]
 8d4:	mov	r1, r3
 8d8:	mov	r0, r3
 8dc:	str	r6, [sp, #12]
 8e0:	addne	r7, r4, #88	; 0x58
 8e4:	bl	660 <sendto_server@plt>
 8e8:	ldrb	r1, [r5, #396]	; 0x18c
 8ec:	ldr	r0, [pc, #172]	; 9a0 <distribute_hostchange+0x160>
 8f0:	ldr	r2, [sl]
 8f4:	cmp	r1, #0
 8f8:	ldrb	r1, [r4, #396]	; 0x18c
 8fc:	addne	r5, r5, #396	; 0x18c
 900:	addeq	r5, r5, #88	; 0x58
 904:	cmp	r1, #0
 908:	addne	r1, r4, #396	; 0x18c
 90c:	moveq	r1, r7
 910:	add	r0, pc, r0
 914:	ldr	r3, [r9]
 918:	str	r1, [sp, #8]
 91c:	mov	r1, #0
 920:	stm	sp, {r0, r5}
 924:	str	r6, [sp, #12]
 928:	mov	r0, r1
 92c:	bl	660 <sendto_server@plt>
 930:	ldr	r3, [pc, #108]	; 9a4 <distribute_hostchange+0x164>
 934:	mov	r2, #0
 938:	add	r3, pc, r3
 93c:	mov	r1, r7
 940:	stm	sp, {r2, r3}
 944:	mov	r0, r4
 948:	mov	r3, r6
 94c:	add	r2, r4, #152	; 0x98
 950:	bl	69c <change_nick_user_host@plt>
 954:	ldrd	r2, [r4, #64]	; 0x40
 958:	cmp	r8, r6
 95c:	orrne	r2, r2, #131072	; 0x20000
 960:	biceq	r2, r2, #131072	; 0x20000
 964:	strd	r2, [r4, #64]	; 0x40
 968:	add	sp, sp, #16
 96c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 970:	ldr	r2, [pc, #48]	; 9a8 <distribute_hostchange+0x168>
 974:	mov	r3, r8
 978:	add	r2, pc, r2
 97c:	mov	r1, #396	; 0x18c
 980:	bl	684 <sendto_one_numeric@plt>
 984:	b	878 <distribute_hostchange+0x38>
 988:	.word	0x0001179c
 98c:	.word	0x00000660
 990:	.word	0x00000068
 994:	.word	0x0000005c
 998:	.word	0x00000050
 99c:	.word	0x00000648
 9a0:	.word	0x00000600
 9a4:	.word	0x000005f4
 9a8:	.word	0x00000570

000009ac <check_umode_change>:
 9ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 9b0:	mov	r9, #0
 9b4:	ldr	r4, [r0]
 9b8:	ldr	r3, [pc, #264]	; ac8 <check_umode_change+0x11c>
 9bc:	ldrd	r6, [r4, #64]	; 0x40
 9c0:	add	r3, pc, r3
 9c4:	and	r8, r6, #8192	; 0x2000
 9c8:	orrs	r2, r8, r9
 9cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 9d0:	ldrh	r2, [r4, #80]	; 0x50
 9d4:	cmp	r2, #64	; 0x40
 9d8:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
 9dc:	ldr	r1, [pc, #232]	; acc <check_umode_change+0x120>
 9e0:	ldr	r2, [r0, #4]
 9e4:	ldr	r5, [r4, #56]	; 0x38
 9e8:	ldr	r1, [r3, r1]
 9ec:	eor	r3, r5, r2
 9f0:	ldr	r8, [r1, #416]	; 0x1a0
 9f4:	tst	r3, r8
 9f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 9fc:	tst	r5, r8
 a00:	beq	a68 <check_umode_change+0xbc>
 a04:	and	r2, r6, #16777216	; 0x1000000
 a08:	mov	r3, #0
 a0c:	orrs	r3, r2, r3
 a10:	bne	a98 <check_umode_change+0xec>
 a14:	ldr	r3, [r4, #432]	; 0x1b0
 a18:	ldr	r9, [r3, #432]	; 0x1b0
 a1c:	cmp	r9, #0
 a20:	beq	a98 <check_umode_change+0xec>
 a24:	and	r6, r6, #131072	; 0x20000
 a28:	mov	r7, #0
 a2c:	orrs	r3, r6, r7
 a30:	add	r6, r4, #163	; 0xa3
 a34:	beq	aa4 <check_umode_change+0xf8>
 a38:	mov	r1, r9
 a3c:	mov	r0, r6
 a40:	bl	624 <strcmp@plt>
 a44:	cmp	r0, #0
 a48:	bne	a98 <check_umode_change+0xec>
 a4c:	ldr	r2, [pc, #124]	; ad0 <check_umode_change+0x124>
 a50:	mov	r3, r6
 a54:	mov	r0, r4
 a58:	add	r2, pc, r2
 a5c:	mov	r1, #396	; 0x18c
 a60:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 a64:	b	684 <sendto_one_numeric@plt>
 a68:	ldr	r3, [r4, #432]	; 0x1b0
 a6c:	ldr	r1, [r3, #432]	; 0x1b0
 a70:	cmp	r1, #0
 a74:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 a78:	add	r0, r4, #163	; 0xa3
 a7c:	bl	624 <strcmp@plt>
 a80:	cmp	r0, #0
 a84:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
 a88:	add	r1, r4, #227	; 0xe3
 a8c:	mov	r0, r4
 a90:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 a94:	b	840 <distribute_hostchange>
 a98:	bic	r5, r5, r8
 a9c:	str	r5, [r4, #56]	; 0x38
 aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 aa4:	mov	r0, r6
 aa8:	mov	r1, r9
 aac:	bl	624 <strcmp@plt>
 ab0:	cmp	r0, #0
 ab4:	beq	a4c <check_umode_change+0xa0>
 ab8:	mov	r1, r9
 abc:	mov	r0, r4
 ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 ac4:	b	840 <distribute_hostchange>
 ac8:	.word	0x00011638
 acc:	.word	0x00000054
 ad0:	.word	0x00000474

00000ad4 <_moddeinit>:
 ad4:	ldr	r3, [pc, #20]	; af0 <_moddeinit+0x1c>
 ad8:	ldr	r2, [pc, #20]	; af4 <_moddeinit+0x20>
 adc:	add	r3, pc, r3
 ae0:	mov	r1, #0
 ae4:	ldr	r3, [r3, r2]
 ae8:	str	r1, [r3, #416]	; 0x1a0
 aec:	b	6c0 <construct_umodebuf@plt>
 af0:	.word	0x0001151c
 af4:	.word	0x00000054

00000af8 <_modinit>:
 af8:	push	{r4, lr}
 afc:	bl	648 <find_umode_slot@plt>
 b00:	ldr	r3, [pc, #24]	; b20 <_modinit+0x28>
 b04:	ldr	r2, [pc, #24]	; b24 <_modinit+0x2c>
 b08:	add	r3, pc, r3
 b0c:	ldr	r3, [r3, r2]
 b10:	str	r0, [r3, #416]	; 0x1a0
 b14:	bl	6c0 <construct_umodebuf@plt>
 b18:	mov	r0, #0
 b1c:	pop	{r4, pc}
 b20:	.word	0x000114f0
 b24:	.word	0x00000054

00000b28 <check_new_user>:
 b28:	ldrd	r2, [r0, #64]	; 0x40
 b2c:	push	{r4, r5, r6, r7, r8, r9, lr}
 b30:	mov	r3, #0
 b34:	ldr	r7, [pc, #844]	; e88 <check_new_user+0x360>
 b38:	and	r2, r2, #16777216	; 0x1000000
 b3c:	orrs	r3, r2, r3
 b40:	add	r7, pc, r7
 b44:	sub	sp, sp, #36	; 0x24
 b48:	beq	b6c <check_new_user+0x44>
 b4c:	ldr	r2, [pc, #824]	; e8c <check_new_user+0x364>
 b50:	ldr	r3, [r0, #56]	; 0x38
 b54:	ldr	r2, [r7, r2]
 b58:	ldr	r2, [r2, #416]	; 0x1a0
 b5c:	bic	r3, r3, r2
 b60:	str	r3, [r0, #56]	; 0x38
 b64:	add	sp, sp, #36	; 0x24
 b68:	pop	{r4, r5, r6, r7, r8, r9, pc}
 b6c:	mov	r5, r0
 b70:	mov	r1, #64	; 0x40
 b74:	mov	r0, #1
 b78:	ldr	r4, [r5, #432]	; 0x1b0
 b7c:	bl	618 <calloc@plt>
 b80:	cmp	r0, #0
 b84:	beq	e10 <check_new_user+0x2e8>
 b88:	add	r8, r5, #227	; 0xe3
 b8c:	add	r1, r5, #288	; 0x120
 b90:	str	r0, [r4, #432]	; 0x1b0
 b94:	add	r1, r1, #3
 b98:	mov	r0, r8
 b9c:	bl	6b4 <irccmp@plt>
 ba0:	subs	r6, r0, #0
 ba4:	beq	d30 <check_new_user+0x208>
 ba8:	ldr	lr, [pc, #736]	; e90 <check_new_user+0x368>
 bac:	add	ip, sp, #4
 bb0:	add	lr, pc, lr
 bb4:	ldr	r4, [r5, #432]	; 0x1b0
 bb8:	ldm	lr!, {r0, r1, r2, r3}
 bbc:	ldr	r6, [r4, #432]	; 0x1b0
 bc0:	stmia	ip!, {r0, r1, r2, r3}
 bc4:	ldm	lr, {r0, r1, r2}
 bc8:	stmia	ip!, {r0, r1}
 bcc:	lsr	r3, r2, #16
 bd0:	mov	r1, #32
 bd4:	mov	r0, r8
 bd8:	strh	r2, [ip], #2
 bdc:	strb	r3, [ip]
 be0:	bl	654 <fnv_hash@plt>
 be4:	mov	r2, #64	; 0x40
 be8:	mov	r1, r8
 bec:	mov	r9, r0
 bf0:	mov	r0, r6
 bf4:	bl	6a8 <rb_strlcpy@plt>
 bf8:	ldrb	r4, [r6]
 bfc:	cmp	r4, #0
 c00:	cmpne	r4, #46	; 0x2e
 c04:	beq	c74 <check_new_user+0x14c>
 c08:	bl	678 <__ctype_b_loc@plt>
 c0c:	ldr	ip, [pc, #640]	; e94 <check_new_user+0x36c>
 c10:	mov	r2, r6
 c14:	mov	r1, #26
 c18:	ldr	lr, [r0]
 c1c:	lsl	r3, r4, #1
 c20:	ldrh	r3, [lr, r3]
 c24:	lsr	r3, r3, #11
 c28:	cmp	r4, #45	; 0x2d
 c2c:	orreq	r3, r3, #1
 c30:	tst	r3, #1
 c34:	bne	c60 <check_new_user+0x138>
 c38:	add	r4, r4, r9
 c3c:	ror	r9, r9, #31
 c40:	umull	lr, r3, ip, r4
 c44:	lsr	r3, r3, #3
 c48:	mul	r3, r1, r3
 c4c:	sub	r4, r4, r3
 c50:	add	r3, sp, #32
 c54:	add	r4, r3, r4
 c58:	ldrb	r3, [r4, #-28]	; 0xffffffe4
 c5c:	strb	r3, [r2]
 c60:	ldrb	r4, [r2, #1]!
 c64:	cmp	r4, #0
 c68:	cmpne	r4, #46	; 0x2e
 c6c:	bne	c18 <check_new_user+0xf0>
 c70:	ldrb	r4, [r6]
 c74:	cmp	r4, #0
 c78:	beq	cc4 <check_new_user+0x19c>
 c7c:	bl	678 <__ctype_b_loc@plt>
 c80:	ldr	r2, [pc, #528]	; e98 <check_new_user+0x370>
 c84:	ldr	r1, [r0]
 c88:	lsl	r3, r4, #1
 c8c:	ldrh	r3, [r1, r3]
 c90:	tst	r3, #2048	; 0x800
 c94:	beq	cb4 <check_new_user+0x18c>
 c98:	add	r4, r4, r9
 c9c:	umull	r1, r3, r2, r4
 ca0:	lsr	r3, r3, #3
 ca4:	add	r3, r3, r3, lsl #2
 ca8:	sub	r4, r4, r3, lsl #1
 cac:	add	r4, r4, #48	; 0x30
 cb0:	strb	r4, [r6]
 cb4:	ldrb	r4, [r6, #1]!
 cb8:	ror	r9, r9, #31
 cbc:	cmp	r4, #0
 cc0:	bne	c84 <check_new_user+0x15c>
 cc4:	ldrd	r2, [r5, #64]	; 0x40
 cc8:	mov	r3, #0
 ccc:	and	r2, r2, #131072	; 0x20000
 cd0:	orrs	r3, r2, r3
 cd4:	ldr	r2, [pc, #432]	; e8c <check_new_user+0x364>
 cd8:	ldr	r3, [r5, #56]	; 0x38
 cdc:	ldr	r2, [r7, r2]
 ce0:	ldrne	r1, [r2, #416]	; 0x1a0
 ce4:	bicne	r3, r3, r1
 ce8:	strne	r3, [r5, #56]	; 0x38
 cec:	ldr	r2, [r2, #416]	; 0x1a0
 cf0:	tst	r3, r2
 cf4:	beq	b64 <check_new_user+0x3c>
 cf8:	ldr	r3, [r5, #432]	; 0x1b0
 cfc:	add	r4, r5, #163	; 0xa3
 d00:	mov	r2, #64	; 0x40
 d04:	ldr	r1, [r3, #432]	; 0x1b0
 d08:	mov	r0, r4
 d0c:	bl	6a8 <rb_strlcpy@plt>
 d10:	mov	r1, r8
 d14:	mov	r0, r4
 d18:	bl	6b4 <irccmp@plt>
 d1c:	cmp	r0, #0
 d20:	ldrdne	r2, [r5, #64]	; 0x40
 d24:	orrne	r2, r2, #131072	; 0x20000
 d28:	strdne	r2, [r5, #64]	; 0x40
 d2c:	b	b64 <check_new_user+0x3c>
 d30:	ldr	lr, [pc, #356]	; e9c <check_new_user+0x374>
 d34:	add	ip, sp, #4
 d38:	add	lr, pc, lr
 d3c:	ldr	r4, [r5, #432]	; 0x1b0
 d40:	ldm	lr!, {r0, r1, r2, r3}
 d44:	ldr	r4, [r4, #432]	; 0x1b0
 d48:	stmia	ip!, {r0, r1, r2, r3}
 d4c:	ldm	lr, {r0, r1}
 d50:	str	r0, [ip], #4
 d54:	mov	r0, r8
 d58:	strb	r1, [ip]
 d5c:	mov	r1, #32
 d60:	bl	654 <fnv_hash@plt>
 d64:	mov	r2, #64	; 0x40
 d68:	mov	r1, r8
 d6c:	mov	r9, r0
 d70:	mov	r0, r4
 d74:	bl	6a8 <rb_strlcpy@plt>
 d78:	mov	r0, r4
 d7c:	mov	r1, #58	; 0x3a
 d80:	bl	690 <strchr@plt>
 d84:	cmp	r0, #0
 d88:	beq	e14 <check_new_user+0x2ec>
 d8c:	ldrb	r3, [r4]
 d90:	cmp	r3, #0
 d94:	beq	cc4 <check_new_user+0x19c>
 d98:	mov	r0, r4
 d9c:	mov	r1, r6
 da0:	mov	r2, r3
 da4:	cmp	r2, #58	; 0x3a
 da8:	addeq	r1, r1, #1
 dac:	ldrb	r2, [r0, #1]!
 db0:	cmp	r2, #0
 db4:	bne	da4 <check_new_user+0x27c>
 db8:	ldr	r0, [pc, #216]	; e98 <check_new_user+0x370>
 dbc:	asr	r1, r1, #1
 dc0:	cmp	r3, #46	; 0x2e
 dc4:	cmpne	r3, #58	; 0x3a
 dc8:	addeq	r6, r6, #1
 dcc:	beq	e00 <check_new_user+0x2d8>
 dd0:	cmp	r6, r1
 dd4:	blt	e00 <check_new_user+0x2d8>
 dd8:	add	r3, r3, r9
 ddc:	ror	r9, r9, #31
 de0:	umull	ip, r2, r0, r3
 de4:	lsr	r2, r2, #4
 de8:	add	r2, r2, r2, lsl #2
 dec:	sub	r3, r3, r2, lsl #2
 df0:	add	r2, sp, #32
 df4:	add	r3, r2, r3
 df8:	ldrb	r3, [r3, #-28]	; 0xffffffe4
 dfc:	strb	r3, [r4]
 e00:	ldrb	r3, [r4, #1]!
 e04:	cmp	r3, #0
 e08:	bne	dc0 <check_new_user+0x298>
 e0c:	b	cc4 <check_new_user+0x19c>
 e10:	bl	63c <rb_outofmemory@plt>
 e14:	mov	r1, #46	; 0x2e
 e18:	mov	r0, r4
 e1c:	bl	690 <strchr@plt>
 e20:	cmp	r0, #0
 e24:	beq	cc4 <check_new_user+0x19c>
 e28:	ldrb	r3, [r4]
 e2c:	cmp	r3, #0
 e30:	beq	cc4 <check_new_user+0x19c>
 e34:	ldr	r1, [pc, #92]	; e98 <check_new_user+0x370>
 e38:	cmp	r3, #58	; 0x3a
 e3c:	cmpne	r3, #46	; 0x2e
 e40:	addeq	r6, r6, #1
 e44:	beq	e78 <check_new_user+0x350>
 e48:	cmp	r6, #1
 e4c:	ble	e78 <check_new_user+0x350>
 e50:	add	r3, r3, r9
 e54:	ror	r9, r9, #31
 e58:	umull	r0, r2, r1, r3
 e5c:	lsr	r2, r2, #4
 e60:	add	r2, r2, r2, lsl #2
 e64:	sub	r3, r3, r2, lsl #2
 e68:	add	r2, sp, #32
 e6c:	add	r3, r2, r3
 e70:	ldrb	r3, [r3, #-28]	; 0xffffffe4
 e74:	strb	r3, [r4]
 e78:	ldrb	r3, [r4, #1]!
 e7c:	cmp	r3, #0
 e80:	bne	e38 <check_new_user+0x310>
 e84:	b	cc4 <check_new_user+0x19c>
 e88:	.word	0x000114b8
 e8c:	.word	0x00000054
 e90:	.word	0x0000038c
 e94:	.word	0x4ec4ec4f
 e98:	.word	0xcccccccd
 e9c:	.word	0x00000220

Disassembly of section .fini:

00000ea0 <_fini>:
 ea0:	push	{r3, lr}
 ea4:	pop	{r3, pc}
