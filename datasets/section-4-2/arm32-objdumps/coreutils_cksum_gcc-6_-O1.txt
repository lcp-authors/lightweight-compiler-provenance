
../repos/coreutils/src/cksum:     file format elf32-littlearm


Disassembly of section .init:

00010fa8 <.init>:
   10fa8:	push	{r3, lr}
   10fac:	bl	11334 <__assert_fail@plt+0x48>
   10fb0:	pop	{r3, pc}

Disassembly of section .plt:

00010fb4 <fdopen@plt-0x14>:
   10fb4:	push	{lr}		; (str lr, [sp, #-4]!)
   10fb8:	ldr	lr, [pc, #4]	; 10fc4 <fdopen@plt-0x4>
   10fbc:	add	lr, pc, lr
   10fc0:	ldr	pc, [lr, #8]!
   10fc4:	andeq	r9, r3, ip, lsr r0

00010fc8 <fdopen@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #233472	; 0x39000
   10fd0:	ldr	pc, [ip, #60]!	; 0x3c

00010fd4 <calloc@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #233472	; 0x39000
   10fdc:	ldr	pc, [ip, #52]!	; 0x34

00010fe0 <fputs_unlocked@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #233472	; 0x39000
   10fe8:	ldr	pc, [ip, #44]!	; 0x2c

00010fec <raise@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #233472	; 0x39000
   10ff4:	ldr	pc, [ip, #36]!	; 0x24

00010ff8 <__getdelim@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #233472	; 0x39000
   11000:	ldr	pc, [ip, #28]!

00011004 <strcmp@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #233472	; 0x39000
   1100c:	ldr	pc, [ip, #20]!

00011010 <posix_fadvise64@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #233472	; 0x39000
   11018:	ldr	pc, [ip, #12]!

0001101c <fflush@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #233472	; 0x39000
   11024:	ldr	pc, [ip, #4]!

00011028 <memmove@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #56, 20	; 0x38000
   11030:	ldr	pc, [ip, #4092]!	; 0xffc

00011034 <free@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #56, 20	; 0x38000
   1103c:	ldr	pc, [ip, #4084]!	; 0xff4

00011040 <ferror@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #56, 20	; 0x38000
   11048:	ldr	pc, [ip, #4076]!	; 0xfec

0001104c <_exit@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #56, 20	; 0x38000
   11054:	ldr	pc, [ip, #4068]!	; 0xfe4

00011058 <memcpy@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #56, 20	; 0x38000
   11060:	ldr	pc, [ip, #4060]!	; 0xfdc

00011064 <__strtoull_internal@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #56, 20	; 0x38000
   1106c:	ldr	pc, [ip, #4052]!	; 0xfd4

00011070 <mbsinit@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #56, 20	; 0x38000
   11078:	ldr	pc, [ip, #4044]!	; 0xfcc

0001107c <fwrite_unlocked@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #56, 20	; 0x38000
   11084:	ldr	pc, [ip, #4036]!	; 0xfc4

00011088 <memcmp@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #56, 20	; 0x38000
   11090:	ldr	pc, [ip, #4028]!	; 0xfbc

00011094 <fputc_unlocked@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #56, 20	; 0x38000
   1109c:	ldr	pc, [ip, #4020]!	; 0xfb4

000110a0 <dcgettext@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #56, 20	; 0x38000
   110a8:	ldr	pc, [ip, #4012]!	; 0xfac

000110ac <realloc@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #56, 20	; 0x38000
   110b4:	ldr	pc, [ip, #4004]!	; 0xfa4

000110b8 <textdomain@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #56, 20	; 0x38000
   110c0:	ldr	pc, [ip, #3996]!	; 0xf9c

000110c4 <iswprint@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #56, 20	; 0x38000
   110cc:	ldr	pc, [ip, #3988]!	; 0xf94

000110d0 <__memcpy_chk@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #56, 20	; 0x38000
   110d8:	ldr	pc, [ip, #3980]!	; 0xf8c

000110dc <fwrite@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #56, 20	; 0x38000
   110e4:	ldr	pc, [ip, #3972]!	; 0xf84

000110e8 <lseek64@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #56, 20	; 0x38000
   110f0:	ldr	pc, [ip, #3964]!	; 0xf7c

000110f4 <__ctype_get_mb_cur_max@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #56, 20	; 0x38000
   110fc:	ldr	pc, [ip, #3956]!	; 0xf74

00011100 <fread@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #56, 20	; 0x38000
   11108:	ldr	pc, [ip, #3948]!	; 0xf6c

0001110c <__fpending@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #56, 20	; 0x38000
   11114:	ldr	pc, [ip, #3940]!	; 0xf64

00011118 <mbrtowc@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #56, 20	; 0x38000
   11120:	ldr	pc, [ip, #3932]!	; 0xf5c

00011124 <error@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #56, 20	; 0x38000
   1112c:	ldr	pc, [ip, #3924]!	; 0xf54

00011130 <getenv@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #56, 20	; 0x38000
   11138:	ldr	pc, [ip, #3916]!	; 0xf4c

0001113c <malloc@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #56, 20	; 0x38000
   11144:	ldr	pc, [ip, #3908]!	; 0xf44

00011148 <__libc_start_main@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #56, 20	; 0x38000
   11150:	ldr	pc, [ip, #3900]!	; 0xf3c

00011154 <__freading@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #56, 20	; 0x38000
   1115c:	ldr	pc, [ip, #3892]!	; 0xf34

00011160 <__ctype_tolower_loc@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #56, 20	; 0x38000
   11168:	ldr	pc, [ip, #3884]!	; 0xf2c

0001116c <__gmon_start__@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #56, 20	; 0x38000
   11174:	ldr	pc, [ip, #3876]!	; 0xf24

00011178 <getopt_long@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #56, 20	; 0x38000
   11180:	ldr	pc, [ip, #3868]!	; 0xf1c

00011184 <__ctype_b_loc@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #56, 20	; 0x38000
   1118c:	ldr	pc, [ip, #3860]!	; 0xf14

00011190 <exit@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #56, 20	; 0x38000
   11198:	ldr	pc, [ip, #3852]!	; 0xf0c

0001119c <feof@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #56, 20	; 0x38000
   111a4:	ldr	pc, [ip, #3844]!	; 0xf04

000111a8 <strlen@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #56, 20	; 0x38000
   111b0:	ldr	pc, [ip, #3836]!	; 0xefc

000111b4 <strchr@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #56, 20	; 0x38000
   111bc:	ldr	pc, [ip, #3828]!	; 0xef4

000111c0 <__errno_location@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #56, 20	; 0x38000
   111c8:	ldr	pc, [ip, #3820]!	; 0xeec

000111cc <__sprintf_chk@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #56, 20	; 0x38000
   111d4:	ldr	pc, [ip, #3812]!	; 0xee4

000111d8 <__cxa_atexit@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #56, 20	; 0x38000
   111e0:	ldr	pc, [ip, #3804]!	; 0xedc

000111e4 <setvbuf@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #56, 20	; 0x38000
   111ec:	ldr	pc, [ip, #3796]!	; 0xed4

000111f0 <memset@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #56, 20	; 0x38000
   111f8:	ldr	pc, [ip, #3788]!	; 0xecc

000111fc <__printf_chk@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #56, 20	; 0x38000
   11204:	ldr	pc, [ip, #3780]!	; 0xec4

00011208 <fileno@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #56, 20	; 0x38000
   11210:	ldr	pc, [ip, #3772]!	; 0xebc

00011214 <__fprintf_chk@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #56, 20	; 0x38000
   1121c:	ldr	pc, [ip, #3764]!	; 0xeb4

00011220 <fclose@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #56, 20	; 0x38000
   11228:	ldr	pc, [ip, #3756]!	; 0xeac

0001122c <fseeko64@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #56, 20	; 0x38000
   11234:	ldr	pc, [ip, #3748]!	; 0xea4

00011238 <fcntl64@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #56, 20	; 0x38000
   11240:	ldr	pc, [ip, #3740]!	; 0xe9c

00011244 <__overflow@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #56, 20	; 0x38000
   1124c:	ldr	pc, [ip, #3732]!	; 0xe94

00011250 <setlocale@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #56, 20	; 0x38000
   11258:	ldr	pc, [ip, #3724]!	; 0xe8c

0001125c <strrchr@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #56, 20	; 0x38000
   11264:	ldr	pc, [ip, #3716]!	; 0xe84

00011268 <nl_langinfo@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #56, 20	; 0x38000
   11270:	ldr	pc, [ip, #3708]!	; 0xe7c

00011274 <__fread_unlocked_chk@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #56, 20	; 0x38000
   1127c:	ldr	pc, [ip, #3700]!	; 0xe74

00011280 <localeconv@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #56, 20	; 0x38000
   11288:	ldr	pc, [ip, #3692]!	; 0xe6c

0001128c <clearerr_unlocked@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #56, 20	; 0x38000
   11294:	ldr	pc, [ip, #3684]!	; 0xe64

00011298 <fopen64@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #56, 20	; 0x38000
   112a0:	ldr	pc, [ip, #3676]!	; 0xe5c

000112a4 <bindtextdomain@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #56, 20	; 0x38000
   112ac:	ldr	pc, [ip, #3668]!	; 0xe54

000112b0 <fread_unlocked@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #56, 20	; 0x38000
   112b8:	ldr	pc, [ip, #3660]!	; 0xe4c

000112bc <strncmp@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #56, 20	; 0x38000
   112c4:	ldr	pc, [ip, #3652]!	; 0xe44

000112c8 <abort@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #56, 20	; 0x38000
   112d0:	ldr	pc, [ip, #3644]!	; 0xe3c

000112d4 <close@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #56, 20	; 0x38000
   112dc:	ldr	pc, [ip, #3636]!	; 0xe34

000112e0 <dcngettext@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #56, 20	; 0x38000
   112e8:	ldr	pc, [ip, #3628]!	; 0xe2c

000112ec <__assert_fail@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #56, 20	; 0x38000
   112f4:	ldr	pc, [ip, #3620]!	; 0xe24

Disassembly of section .text:

000112f8 <.text>:
   112f8:	mov	fp, #0
   112fc:	mov	lr, #0
   11300:	pop	{r1}		; (ldr r1, [sp], #4)
   11304:	mov	r2, sp
   11308:	push	{r2}		; (str r2, [sp, #-4]!)
   1130c:	push	{r0}		; (str r0, [sp, #-4]!)
   11310:	ldr	ip, [pc, #16]	; 11328 <__assert_fail@plt+0x3c>
   11314:	push	{ip}		; (str ip, [sp, #-4]!)
   11318:	ldr	r0, [pc, #12]	; 1132c <__assert_fail@plt+0x40>
   1131c:	ldr	r3, [pc, #12]	; 11330 <__assert_fail@plt+0x44>
   11320:	bl	11148 <__libc_start_main@plt>
   11324:	bl	112c8 <abort@plt>
   11328:	andeq	r6, r3, r0, lsl #11
   1132c:	andeq	r1, r1, r4, lsr #30
   11330:	andeq	r6, r3, r0, lsr #10
   11334:	ldr	r3, [pc, #20]	; 11350 <__assert_fail@plt+0x64>
   11338:	ldr	r2, [pc, #20]	; 11354 <__assert_fail@plt+0x68>
   1133c:	add	r3, pc, r3
   11340:	ldr	r2, [r3, r2]
   11344:	cmp	r2, #0
   11348:	bxeq	lr
   1134c:	b	1116c <__gmon_start__@plt>
   11350:			; <UNDEFINED> instruction: 0x00038cbc
   11354:	andeq	r0, r0, ip, lsl r1
   11358:	ldr	r3, [pc, #28]	; 1137c <__assert_fail@plt+0x90>
   1135c:	ldr	r0, [pc, #28]	; 11380 <__assert_fail@plt+0x94>
   11360:	sub	r3, r3, r0
   11364:	cmp	r3, #6
   11368:	bxls	lr
   1136c:	ldr	r3, [pc, #16]	; 11384 <__assert_fail@plt+0x98>
   11370:	cmp	r3, #0
   11374:	bxeq	lr
   11378:	bx	r3
   1137c:	andeq	sl, r4, r7, lsl #3
   11380:	andeq	sl, r4, r4, lsl #3
   11384:	andeq	r0, r0, r0
   11388:	ldr	r1, [pc, #36]	; 113b4 <__assert_fail@plt+0xc8>
   1138c:	ldr	r0, [pc, #36]	; 113b8 <__assert_fail@plt+0xcc>
   11390:	sub	r1, r1, r0
   11394:	asr	r1, r1, #2
   11398:	add	r1, r1, r1, lsr #31
   1139c:	asrs	r1, r1, #1
   113a0:	bxeq	lr
   113a4:	ldr	r3, [pc, #16]	; 113bc <__assert_fail@plt+0xd0>
   113a8:	cmp	r3, #0
   113ac:	bxeq	lr
   113b0:	bx	r3
   113b4:	andeq	sl, r4, r4, lsl #3
   113b8:	andeq	sl, r4, r4, lsl #3
   113bc:	andeq	r0, r0, r0
   113c0:	push	{r4, lr}
   113c4:	ldr	r4, [pc, #24]	; 113e4 <__assert_fail@plt+0xf8>
   113c8:	ldrb	r3, [r4]
   113cc:	cmp	r3, #0
   113d0:	popne	{r4, pc}
   113d4:	bl	11358 <__assert_fail@plt+0x6c>
   113d8:	mov	r3, #1
   113dc:	strb	r3, [r4]
   113e0:	pop	{r4, pc}
   113e4:	andeq	sl, r4, ip, lsr #3
   113e8:	ldr	r0, [pc, #40]	; 11418 <__assert_fail@plt+0x12c>
   113ec:	ldr	r3, [r0]
   113f0:	cmp	r3, #0
   113f4:	bne	113fc <__assert_fail@plt+0x110>
   113f8:	b	11388 <__assert_fail@plt+0x9c>
   113fc:	ldr	r3, [pc, #24]	; 1141c <__assert_fail@plt+0x130>
   11400:	cmp	r3, #0
   11404:	beq	113f8 <__assert_fail@plt+0x10c>
   11408:	push	{r4, lr}
   1140c:	blx	r3
   11410:	pop	{r4, lr}
   11414:	b	11388 <__assert_fail@plt+0x9c>
   11418:	andeq	r9, r4, r4, lsl pc
   1141c:	andeq	r0, r0, r0
   11420:	cmp	r1, #0
   11424:	bxeq	lr
   11428:	push	{r4, r5, r6, r7, r8, lr}
   1142c:	add	lr, r0, #1
   11430:	mov	ip, r0
   11434:	mov	r3, #0
   11438:	sub	r4, r1, #1
   1143c:	mov	r8, #10
   11440:	mov	r7, #13
   11444:	mov	r6, #92	; 0x5c
   11448:	b	1148c <__assert_fail@plt+0x1a0>
   1144c:	mov	r5, lr
   11450:	strb	r8, [ip]
   11454:	b	11478 <__assert_fail@plt+0x18c>
   11458:	mov	r5, lr
   1145c:	strb	r7, [ip]
   11460:	b	11478 <__assert_fail@plt+0x18c>
   11464:	mov	r5, lr
   11468:	strb	r6, [ip]
   1146c:	b	11478 <__assert_fail@plt+0x18c>
   11470:	mov	r5, lr
   11474:	strb	r2, [ip]
   11478:	add	r3, r3, #1
   1147c:	add	lr, lr, #1
   11480:	add	ip, ip, #1
   11484:	cmp	r1, r3
   11488:	bls	114d0 <__assert_fail@plt+0x1e4>
   1148c:	ldrb	r2, [r0, r3]
   11490:	cmp	r2, #0
   11494:	beq	114e4 <__assert_fail@plt+0x1f8>
   11498:	cmp	r2, #92	; 0x5c
   1149c:	bne	11470 <__assert_fail@plt+0x184>
   114a0:	cmp	r4, r3
   114a4:	beq	114ec <__assert_fail@plt+0x200>
   114a8:	add	r3, r3, #1
   114ac:	ldrb	r2, [r0, r3]
   114b0:	cmp	r2, #110	; 0x6e
   114b4:	beq	1144c <__assert_fail@plt+0x160>
   114b8:	cmp	r2, #114	; 0x72
   114bc:	beq	11458 <__assert_fail@plt+0x16c>
   114c0:	cmp	r2, #92	; 0x5c
   114c4:	beq	11464 <__assert_fail@plt+0x178>
   114c8:	mov	r0, #0
   114cc:	pop	{r4, r5, r6, r7, r8, pc}
   114d0:	add	r1, r0, r1
   114d4:	cmp	r5, r1
   114d8:	movcc	r3, #0
   114dc:	strbcc	r3, [r5]
   114e0:	pop	{r4, r5, r6, r7, r8, pc}
   114e4:	mov	r0, #0
   114e8:	pop	{r4, r5, r6, r7, r8, pc}
   114ec:	mov	r0, #0
   114f0:	pop	{r4, r5, r6, r7, r8, pc}
   114f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114f8:	mov	r4, r0
   114fc:	cmp	r1, #0
   11500:	beq	11530 <__assert_fail@plt+0x244>
   11504:	ldrb	r1, [r0]
   11508:	cmp	r1, #0
   1150c:	beq	1152c <__assert_fail@plt+0x240>
   11510:	ldr	r5, [pc, #188]	; 115d4 <__assert_fail@plt+0x2e8>
   11514:	ldr	sl, [pc, #188]	; 115d8 <__assert_fail@plt+0x2ec>
   11518:	mov	r7, #2
   1151c:	mov	r6, #1
   11520:	ldr	r9, [pc, #180]	; 115dc <__assert_fail@plt+0x2f0>
   11524:	ldr	r8, [pc, #180]	; 115e0 <__assert_fail@plt+0x2f4>
   11528:	b	11560 <__assert_fail@plt+0x274>
   1152c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11530:	ldr	r3, [pc, #156]	; 115d4 <__assert_fail@plt+0x2e8>
   11534:	ldr	r1, [r3]
   11538:	bl	10fe0 <fputs_unlocked@plt>
   1153c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11540:	ldr	r3, [r5]
   11544:	mov	r2, r7
   11548:	mov	r1, r6
   1154c:	mov	r0, r9
   11550:	bl	1107c <fwrite_unlocked@plt>
   11554:	ldrb	r1, [r4, #1]!
   11558:	cmp	r1, #0
   1155c:	beq	115d0 <__assert_fail@plt+0x2e4>
   11560:	cmp	r1, #13
   11564:	beq	115a0 <__assert_fail@plt+0x2b4>
   11568:	cmp	r1, #92	; 0x5c
   1156c:	beq	115b8 <__assert_fail@plt+0x2cc>
   11570:	cmp	r1, #10
   11574:	beq	11540 <__assert_fail@plt+0x254>
   11578:	ldr	r0, [r5]
   1157c:	ldr	r3, [r0, #20]
   11580:	ldr	r2, [r0, #24]
   11584:	cmp	r3, r2
   11588:	addcc	r2, r3, #1
   1158c:	strcc	r2, [r0, #20]
   11590:	strbcc	r1, [r3]
   11594:	bcc	11554 <__assert_fail@plt+0x268>
   11598:	bl	11244 <__overflow@plt>
   1159c:	b	11554 <__assert_fail@plt+0x268>
   115a0:	ldr	r3, [r5]
   115a4:	mov	r2, r7
   115a8:	mov	r1, r6
   115ac:	mov	r0, r8
   115b0:	bl	1107c <fwrite_unlocked@plt>
   115b4:	b	11554 <__assert_fail@plt+0x268>
   115b8:	ldr	r3, [r5]
   115bc:	mov	r2, r7
   115c0:	mov	r1, r6
   115c4:	mov	r0, sl
   115c8:	bl	1107c <fwrite_unlocked@plt>
   115cc:	b	11554 <__assert_fail@plt+0x268>
   115d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   115d4:	andeq	sl, r4, r4, lsr #3
   115d8:	andeq	r6, r3, r0, lsl #16
   115dc:	strdeq	r6, [r3], -r8
   115e0:	strdeq	r6, [r3], -ip
   115e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115e8:	sub	sp, sp, #12
   115ec:	str	r0, [sp, #4]
   115f0:	mov	r5, r2
   115f4:	mov	sl, r3
   115f8:	ldrb	r9, [sp, #48]	; 0x30
   115fc:	cmp	r9, #10
   11600:	movne	fp, #0
   11604:	beq	116e4 <__assert_fail@plt+0x3f8>
   11608:	cmp	sl, #0
   1160c:	bne	11764 <__assert_fail@plt+0x478>
   11610:	ldr	r3, [pc, #528]	; 11828 <__assert_fail@plt+0x53c>
   11614:	ldr	r3, [r3, #8]
   11618:	cmp	r3, #1
   1161c:	bls	1165c <__assert_fail@plt+0x370>
   11620:	sub	r5, r5, #1
   11624:	mov	r4, #0
   11628:	ldr	r8, [pc, #508]	; 1182c <__assert_fail@plt+0x540>
   1162c:	mov	r7, #1
   11630:	ldr	r6, [pc, #496]	; 11828 <__assert_fail@plt+0x53c>
   11634:	ldrb	r2, [r5, #1]!
   11638:	mov	r1, r8
   1163c:	mov	r0, r7
   11640:	bl	111fc <__printf_chk@plt>
   11644:	add	r4, r4, #1
   11648:	ldr	r3, [r6, #8]
   1164c:	cmp	r4, r3, lsr #1
   11650:	bcc	11634 <__assert_fail@plt+0x348>
   11654:	cmp	sl, #0
   11658:	bne	116b8 <__assert_fail@plt+0x3cc>
   1165c:	ldr	r3, [pc, #460]	; 11830 <__assert_fail@plt+0x544>
   11660:	ldr	r0, [r3]
   11664:	ldr	r3, [r0, #20]
   11668:	ldr	r2, [r0, #24]
   1166c:	cmp	r3, r2
   11670:	addcc	r2, r3, #1
   11674:	strcc	r2, [r0, #20]
   11678:	movcc	r2, #32
   1167c:	strbcc	r2, [r3]
   11680:	bcs	11804 <__assert_fail@plt+0x518>
   11684:	ldr	r3, [pc, #420]	; 11830 <__assert_fail@plt+0x544>
   11688:	ldr	r0, [r3]
   1168c:	ldr	r3, [r0, #20]
   11690:	ldr	r2, [r0, #24]
   11694:	cmp	r3, r2
   11698:	addcc	r2, r3, #1
   1169c:	strcc	r2, [r0, #20]
   116a0:	movcc	r2, #32
   116a4:	strbcc	r2, [r3]
   116a8:	bcs	11810 <__assert_fail@plt+0x524>
   116ac:	mov	r1, fp
   116b0:	ldr	r0, [sp, #4]
   116b4:	bl	114f4 <__assert_fail@plt+0x208>
   116b8:	ldr	r3, [pc, #368]	; 11830 <__assert_fail@plt+0x544>
   116bc:	ldr	r0, [r3]
   116c0:	ldr	r3, [r0, #20]
   116c4:	ldr	r2, [r0, #24]
   116c8:	cmp	r3, r2
   116cc:	addcc	r2, r3, #1
   116d0:	strcc	r2, [r0, #20]
   116d4:	strbcc	r9, [r3]
   116d8:	bcs	1181c <__assert_fail@plt+0x530>
   116dc:	add	sp, sp, #12
   116e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116e4:	mov	r1, #92	; 0x5c
   116e8:	bl	111b4 <strchr@plt>
   116ec:	cmp	r0, #0
   116f0:	beq	11724 <__assert_fail@plt+0x438>
   116f4:	ldr	r3, [pc, #308]	; 11830 <__assert_fail@plt+0x544>
   116f8:	ldr	r0, [r3]
   116fc:	ldr	r3, [r0, #20]
   11700:	ldr	r2, [r0, #24]
   11704:	cmp	r3, r2
   11708:	bcs	11754 <__assert_fail@plt+0x468>
   1170c:	add	r2, r3, #1
   11710:	str	r2, [r0, #20]
   11714:	mov	r2, #92	; 0x5c
   11718:	strb	r2, [r3]
   1171c:	mov	fp, #1
   11720:	b	11608 <__assert_fail@plt+0x31c>
   11724:	mov	r1, #10
   11728:	ldr	r0, [sp, #4]
   1172c:	bl	111b4 <strchr@plt>
   11730:	cmp	r0, #0
   11734:	bne	116f4 <__assert_fail@plt+0x408>
   11738:	mov	r1, #13
   1173c:	ldr	r0, [sp, #4]
   11740:	bl	111b4 <strchr@plt>
   11744:	cmp	r0, #0
   11748:	moveq	fp, #0
   1174c:	bne	116f4 <__assert_fail@plt+0x408>
   11750:	b	11608 <__assert_fail@plt+0x31c>
   11754:	mov	r1, #92	; 0x5c
   11758:	bl	11244 <__overflow@plt>
   1175c:	mov	fp, #1
   11760:	b	11608 <__assert_fail@plt+0x31c>
   11764:	ldr	r4, [pc, #200]	; 11834 <__assert_fail@plt+0x548>
   11768:	ldr	r2, [r4]
   1176c:	ldr	r3, [pc, #188]	; 11830 <__assert_fail@plt+0x544>
   11770:	ldr	r1, [r3]
   11774:	ldr	r3, [pc, #188]	; 11838 <__assert_fail@plt+0x54c>
   11778:	ldr	r0, [r3, r2, lsl #2]
   1177c:	bl	10fe0 <fputs_unlocked@plt>
   11780:	ldr	r3, [r4]
   11784:	cmp	r3, #9
   11788:	beq	117d8 <__assert_fail@plt+0x4ec>
   1178c:	ldr	r4, [pc, #156]	; 11830 <__assert_fail@plt+0x544>
   11790:	ldr	r3, [r4]
   11794:	mov	r2, #2
   11798:	mov	r1, #1
   1179c:	ldr	r0, [pc, #152]	; 1183c <__assert_fail@plt+0x550>
   117a0:	bl	1107c <fwrite_unlocked@plt>
   117a4:	mov	r1, fp
   117a8:	ldr	r0, [sp, #4]
   117ac:	bl	114f4 <__assert_fail@plt+0x208>
   117b0:	ldr	r3, [r4]
   117b4:	mov	r2, #4
   117b8:	mov	r1, #1
   117bc:	ldr	r0, [pc, #124]	; 11840 <__assert_fail@plt+0x554>
   117c0:	bl	1107c <fwrite_unlocked@plt>
   117c4:	ldr	r3, [pc, #92]	; 11828 <__assert_fail@plt+0x53c>
   117c8:	ldr	r3, [r3, #8]
   117cc:	cmp	r3, #1
   117d0:	bhi	11620 <__assert_fail@plt+0x334>
   117d4:	b	116b8 <__assert_fail@plt+0x3cc>
   117d8:	ldr	r3, [pc, #72]	; 11828 <__assert_fail@plt+0x53c>
   117dc:	ldrd	r2, [r3]
   117e0:	ldr	r0, [pc, #92]	; 11844 <__assert_fail@plt+0x558>
   117e4:	mov	r1, #0
   117e8:	cmp	r3, r1
   117ec:	cmpeq	r2, r0
   117f0:	bhi	1178c <__assert_fail@plt+0x4a0>
   117f4:	ldr	r1, [pc, #76]	; 11848 <__assert_fail@plt+0x55c>
   117f8:	mov	r0, #1
   117fc:	bl	111fc <__printf_chk@plt>
   11800:	b	1178c <__assert_fail@plt+0x4a0>
   11804:	mov	r1, #32
   11808:	bl	11244 <__overflow@plt>
   1180c:	b	11684 <__assert_fail@plt+0x398>
   11810:	mov	r1, #32
   11814:	bl	11244 <__overflow@plt>
   11818:	b	116ac <__assert_fail@plt+0x3c0>
   1181c:	mov	r1, r9
   11820:	bl	11244 <__overflow@plt>
   11824:	b	116dc <__assert_fail@plt+0x3f0>
   11828:			; <UNDEFINED> instruction: 0x0004a1b0
   1182c:	andeq	r6, r3, r8, lsl r8
   11830:	andeq	sl, r4, r4, lsr #3
   11834:	andeq	sl, r4, r8, lsr #2
   11838:	andeq	r6, r3, ip, lsr #11
   1183c:	andeq	r6, r3, ip, lsl #16
   11840:	andeq	r6, r3, r0, lsl r8
   11844:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   11848:	andeq	r6, r3, r4, lsl #16
   1184c:	push	{r4, r5, r6, lr}
   11850:	mov	r5, r0
   11854:	ldr	r3, [pc, #80]	; 118ac <__assert_fail@plt+0x5c0>
   11858:	ldr	r4, [r3, #8]
   1185c:	cmp	r4, #0
   11860:	beq	11894 <__assert_fail@plt+0x5a8>
   11864:	bl	11184 <__ctype_b_loc@plt>
   11868:	ldr	r0, [r0]
   1186c:	mov	r2, r5
   11870:	add	r1, r5, r4
   11874:	ldrb	r3, [r2], #1
   11878:	lsl	r3, r3, #1
   1187c:	ldrh	r3, [r0, r3]
   11880:	tst	r3, #4096	; 0x1000
   11884:	beq	118a4 <__assert_fail@plt+0x5b8>
   11888:	mov	r5, r2
   1188c:	cmp	r2, r1
   11890:	bne	11874 <__assert_fail@plt+0x588>
   11894:	ldrb	r0, [r5]
   11898:	clz	r0, r0
   1189c:	lsr	r0, r0, #5
   118a0:	pop	{r4, r5, r6, pc}
   118a4:	mov	r0, #0
   118a8:	pop	{r4, r5, r6, pc}
   118ac:			; <UNDEFINED> instruction: 0x0004a1b0
   118b0:	push	{r4, r5, r6, r7, r8, lr}
   118b4:	mov	r6, r0
   118b8:	mov	r8, r2
   118bc:	mov	r5, r3
   118c0:	ldr	r1, [pc, #384]	; 11a48 <__assert_fail@plt+0x75c>
   118c4:	bl	11004 <strcmp@plt>
   118c8:	mov	r3, #0
   118cc:	strb	r3, [r5]
   118d0:	subs	r7, r0, #0
   118d4:	bne	11958 <__assert_fail@plt+0x66c>
   118d8:	mov	r2, #1
   118dc:	ldr	r3, [pc, #360]	; 11a4c <__assert_fail@plt+0x760>
   118e0:	strb	r2, [r3, #12]
   118e4:	ldr	r3, [pc, #356]	; 11a50 <__assert_fail@plt+0x764>
   118e8:	ldr	r4, [r3]
   118ec:	mov	r1, #2
   118f0:	mov	r0, r4
   118f4:	bl	31a30 <__assert_fail@plt+0x20744>
   118f8:	ldr	r3, [pc, #340]	; 11a54 <__assert_fail@plt+0x768>
   118fc:	ldr	r2, [r3]
   11900:	cmp	r2, #9
   11904:	beq	119c8 <__assert_fail@plt+0x6dc>
   11908:	ldr	r3, [pc, #328]	; 11a58 <__assert_fail@plt+0x76c>
   1190c:	add	r3, r3, r2, lsl #2
   11910:	ldr	r3, [r3, #48]	; 0x30
   11914:	ldr	r2, [sp, #24]
   11918:	mov	r1, r8
   1191c:	mov	r0, r4
   11920:	blx	r3
   11924:	subs	r5, r0, #0
   11928:	beq	11934 <__assert_fail@plt+0x648>
   1192c:	bl	111c0 <__errno_location@plt>
   11930:	ldr	r5, [r0]
   11934:	cmp	r7, #0
   11938:	bne	119f0 <__assert_fail@plt+0x704>
   1193c:	mov	r0, r4
   11940:	bl	1128c <clearerr_unlocked@plt>
   11944:	cmp	r5, #0
   11948:	moveq	r4, #1
   1194c:	bne	11a1c <__assert_fail@plt+0x730>
   11950:	mov	r0, r4
   11954:	pop	{r4, r5, r6, r7, r8, pc}
   11958:	ldr	r1, [pc, #252]	; 11a5c <__assert_fail@plt+0x770>
   1195c:	mov	r0, r6
   11960:	bl	31b70 <__assert_fail@plt+0x20884>
   11964:	subs	r4, r0, #0
   11968:	bne	118ec <__assert_fail@plt+0x600>
   1196c:	ldr	r3, [pc, #216]	; 11a4c <__assert_fail@plt+0x760>
   11970:	ldrb	r4, [r3, #13]
   11974:	cmp	r4, #0
   11978:	beq	11994 <__assert_fail@plt+0x6a8>
   1197c:	bl	111c0 <__errno_location@plt>
   11980:	ldr	r3, [r0]
   11984:	cmp	r3, #2
   11988:	moveq	r3, #1
   1198c:	strbeq	r3, [r5]
   11990:	beq	11950 <__assert_fail@plt+0x664>
   11994:	bl	111c0 <__errno_location@plt>
   11998:	ldr	r4, [r0]
   1199c:	mov	r2, r6
   119a0:	mov	r1, #3
   119a4:	mov	r0, #0
   119a8:	bl	3420c <__assert_fail@plt+0x22f20>
   119ac:	mov	r3, r0
   119b0:	ldr	r2, [pc, #168]	; 11a60 <__assert_fail@plt+0x774>
   119b4:	mov	r1, r4
   119b8:	mov	r0, #0
   119bc:	bl	11124 <error@plt>
   119c0:	mov	r4, #0
   119c4:	b	11950 <__assert_fail@plt+0x664>
   119c8:	ldr	r1, [pc, #124]	; 11a4c <__assert_fail@plt+0x760>
   119cc:	ldr	r3, [r1]
   119d0:	ldr	r1, [r1, #4]
   119d4:	lsr	r3, r3, #3
   119d8:	orr	r3, r3, r1, lsl #29
   119dc:	lsr	r1, r1, #3
   119e0:	ldr	r0, [sp, #24]
   119e4:	str	r3, [r0]
   119e8:	str	r1, [r0, #4]
   119ec:	b	11908 <__assert_fail@plt+0x61c>
   119f0:	mov	r0, r4
   119f4:	bl	31a64 <__assert_fail@plt+0x20778>
   119f8:	clz	r3, r5
   119fc:	lsr	r3, r3, #5
   11a00:	cmp	r0, #0
   11a04:	moveq	r3, #0
   11a08:	cmp	r3, #0
   11a0c:	beq	11944 <__assert_fail@plt+0x658>
   11a10:	bl	111c0 <__errno_location@plt>
   11a14:	ldr	r5, [r0]
   11a18:	b	11944 <__assert_fail@plt+0x658>
   11a1c:	mov	r2, r6
   11a20:	mov	r1, #3
   11a24:	mov	r0, #0
   11a28:	bl	3420c <__assert_fail@plt+0x22f20>
   11a2c:	mov	r3, r0
   11a30:	ldr	r2, [pc, #40]	; 11a60 <__assert_fail@plt+0x774>
   11a34:	mov	r1, r5
   11a38:	mov	r0, #0
   11a3c:	bl	11124 <error@plt>
   11a40:	mov	r4, #0
   11a44:	b	11950 <__assert_fail@plt+0x664>
   11a48:	andeq	r6, r3, r0, lsr #16
   11a4c:			; <UNDEFINED> instruction: 0x0004a1b0
   11a50:	andeq	sl, r4, r0, lsr #3
   11a54:	andeq	sl, r4, r8, lsr #2
   11a58:	andeq	r6, r3, ip, lsr #11
   11a5c:	andeq	r6, r3, r4, lsr #16
   11a60:	andeq	r7, r3, ip, asr r1
   11a64:	push	{r4, lr}
   11a68:	bl	2ef04 <__assert_fail@plt+0x1dc18>
   11a6c:	pop	{r4, pc}
   11a70:	push	{r4, lr}
   11a74:	ldr	r2, [r2]
   11a78:	bl	18d48 <__assert_fail@plt+0x7a5c>
   11a7c:	pop	{r4, pc}
   11a80:	push	{r4, lr}
   11a84:	bl	1eabc <__assert_fail@plt+0xd7d0>
   11a88:	pop	{r4, pc}
   11a8c:	push	{r4, lr}
   11a90:	bl	1eaf8 <__assert_fail@plt+0xd80c>
   11a94:	pop	{r4, pc}
   11a98:	push	{r4, lr}
   11a9c:	bl	1c320 <__assert_fail@plt+0xb034>
   11aa0:	pop	{r4, pc}
   11aa4:	push	{r4, lr}
   11aa8:	bl	1c35c <__assert_fail@plt+0xb070>
   11aac:	pop	{r4, pc}
   11ab0:	push	{r4, lr}
   11ab4:	bl	1a958 <__assert_fail@plt+0x966c>
   11ab8:	pop	{r4, pc}
   11abc:	push	{r4, lr}
   11ac0:	bl	19ad0 <__assert_fail@plt+0x87e4>
   11ac4:	pop	{r4, pc}
   11ac8:	push	{lr}		; (str lr, [sp, #-4]!)
   11acc:	sub	sp, sp, #60	; 0x3c
   11ad0:	subs	r6, r0, #0
   11ad4:	beq	11b10 <__assert_fail@plt+0x824>
   11ad8:	ldr	r3, [pc, #968]	; 11ea8 <__assert_fail@plt+0xbbc>
   11adc:	ldr	r4, [r3]
   11ae0:	mov	r2, #5
   11ae4:	ldr	r1, [pc, #960]	; 11eac <__assert_fail@plt+0xbc0>
   11ae8:	mov	r0, #0
   11aec:	bl	110a0 <dcgettext@plt>
   11af0:	ldr	r3, [pc, #952]	; 11eb0 <__assert_fail@plt+0xbc4>
   11af4:	ldr	r3, [r3]
   11af8:	mov	r2, r0
   11afc:	mov	r1, #1
   11b00:	mov	r0, r4
   11b04:	bl	11214 <__fprintf_chk@plt>
   11b08:	mov	r0, r6
   11b0c:	bl	11190 <exit@plt>
   11b10:	mov	r2, #5
   11b14:	ldr	r1, [pc, #920]	; 11eb4 <__assert_fail@plt+0xbc8>
   11b18:	mov	r0, #0
   11b1c:	bl	110a0 <dcgettext@plt>
   11b20:	ldr	r3, [pc, #904]	; 11eb0 <__assert_fail@plt+0xbc4>
   11b24:	ldr	r2, [r3]
   11b28:	mov	r1, r0
   11b2c:	mov	r0, #1
   11b30:	bl	111fc <__printf_chk@plt>
   11b34:	mov	r2, #5
   11b38:	ldr	r1, [pc, #888]	; 11eb8 <__assert_fail@plt+0xbcc>
   11b3c:	mov	r0, #0
   11b40:	bl	110a0 <dcgettext@plt>
   11b44:	ldr	r4, [pc, #880]	; 11ebc <__assert_fail@plt+0xbd0>
   11b48:	ldr	r1, [r4]
   11b4c:	bl	10fe0 <fputs_unlocked@plt>
   11b50:	mov	r2, #5
   11b54:	ldr	r1, [pc, #868]	; 11ec0 <__assert_fail@plt+0xbd4>
   11b58:	mov	r0, #0
   11b5c:	bl	110a0 <dcgettext@plt>
   11b60:	ldr	r1, [r4]
   11b64:	bl	10fe0 <fputs_unlocked@plt>
   11b68:	mov	r2, #5
   11b6c:	ldr	r1, [pc, #848]	; 11ec4 <__assert_fail@plt+0xbd8>
   11b70:	mov	r0, #0
   11b74:	bl	110a0 <dcgettext@plt>
   11b78:	ldr	r1, [r4]
   11b7c:	bl	10fe0 <fputs_unlocked@plt>
   11b80:	mov	r2, #5
   11b84:	ldr	r1, [pc, #828]	; 11ec8 <__assert_fail@plt+0xbdc>
   11b88:	mov	r0, #0
   11b8c:	bl	110a0 <dcgettext@plt>
   11b90:	ldr	r1, [r4]
   11b94:	bl	10fe0 <fputs_unlocked@plt>
   11b98:	mov	r2, #5
   11b9c:	ldr	r1, [pc, #808]	; 11ecc <__assert_fail@plt+0xbe0>
   11ba0:	mov	r0, #0
   11ba4:	bl	110a0 <dcgettext@plt>
   11ba8:	ldr	r1, [r4]
   11bac:	bl	10fe0 <fputs_unlocked@plt>
   11bb0:	mov	r2, #5
   11bb4:	ldr	r1, [pc, #788]	; 11ed0 <__assert_fail@plt+0xbe4>
   11bb8:	mov	r0, #0
   11bbc:	bl	110a0 <dcgettext@plt>
   11bc0:	ldr	r1, [r4]
   11bc4:	bl	10fe0 <fputs_unlocked@plt>
   11bc8:	mov	r2, #5
   11bcc:	ldr	r1, [pc, #768]	; 11ed4 <__assert_fail@plt+0xbe8>
   11bd0:	mov	r0, #0
   11bd4:	bl	110a0 <dcgettext@plt>
   11bd8:	ldr	r1, [r4]
   11bdc:	bl	10fe0 <fputs_unlocked@plt>
   11be0:	mov	r2, #5
   11be4:	ldr	r1, [pc, #748]	; 11ed8 <__assert_fail@plt+0xbec>
   11be8:	mov	r0, #0
   11bec:	bl	110a0 <dcgettext@plt>
   11bf0:	ldr	r1, [r4]
   11bf4:	bl	10fe0 <fputs_unlocked@plt>
   11bf8:	mov	r2, #5
   11bfc:	ldr	r1, [pc, #728]	; 11edc <__assert_fail@plt+0xbf0>
   11c00:	mov	r0, #0
   11c04:	bl	110a0 <dcgettext@plt>
   11c08:	ldr	r1, [r4]
   11c0c:	bl	10fe0 <fputs_unlocked@plt>
   11c10:	mov	r2, #5
   11c14:	ldr	r1, [pc, #708]	; 11ee0 <__assert_fail@plt+0xbf4>
   11c18:	mov	r0, #0
   11c1c:	bl	110a0 <dcgettext@plt>
   11c20:	ldr	r1, [r4]
   11c24:	bl	10fe0 <fputs_unlocked@plt>
   11c28:	mov	r2, #5
   11c2c:	ldr	r1, [pc, #688]	; 11ee4 <__assert_fail@plt+0xbf8>
   11c30:	mov	r0, #0
   11c34:	bl	110a0 <dcgettext@plt>
   11c38:	ldr	r1, [r4]
   11c3c:	bl	10fe0 <fputs_unlocked@plt>
   11c40:	mov	r2, #5
   11c44:	ldr	r1, [pc, #668]	; 11ee8 <__assert_fail@plt+0xbfc>
   11c48:	mov	r0, #0
   11c4c:	bl	110a0 <dcgettext@plt>
   11c50:	ldr	r1, [r4]
   11c54:	bl	10fe0 <fputs_unlocked@plt>
   11c58:	mov	r2, #5
   11c5c:	ldr	r1, [pc, #648]	; 11eec <__assert_fail@plt+0xc00>
   11c60:	mov	r0, #0
   11c64:	bl	110a0 <dcgettext@plt>
   11c68:	ldr	r1, [r4]
   11c6c:	bl	10fe0 <fputs_unlocked@plt>
   11c70:	mov	r2, #5
   11c74:	ldr	r1, [pc, #628]	; 11ef0 <__assert_fail@plt+0xc04>
   11c78:	mov	r0, #0
   11c7c:	bl	110a0 <dcgettext@plt>
   11c80:	ldr	r1, [r4]
   11c84:	bl	10fe0 <fputs_unlocked@plt>
   11c88:	mov	r2, #5
   11c8c:	ldr	r1, [pc, #608]	; 11ef4 <__assert_fail@plt+0xc08>
   11c90:	mov	r0, #0
   11c94:	bl	110a0 <dcgettext@plt>
   11c98:	ldr	r1, [r4]
   11c9c:	bl	10fe0 <fputs_unlocked@plt>
   11ca0:	mov	ip, sp
   11ca4:	ldr	lr, [pc, #588]	; 11ef8 <__assert_fail@plt+0xc0c>
   11ca8:	ldm	lr!, {r0, r1, r2, r3}
   11cac:	stmia	ip!, {r0, r1, r2, r3}
   11cb0:	ldm	lr!, {r0, r1, r2, r3}
   11cb4:	stmia	ip!, {r0, r1, r2, r3}
   11cb8:	ldm	lr!, {r0, r1, r2, r3}
   11cbc:	stmia	ip!, {r0, r1, r2, r3}
   11cc0:	ldm	lr, {r0, r1}
   11cc4:	stm	ip, {r0, r1}
   11cc8:	ldr	r1, [sp]
   11ccc:	cmp	r1, #0
   11cd0:	moveq	r4, sp
   11cd4:	beq	11cfc <__assert_fail@plt+0xa10>
   11cd8:	mov	r4, sp
   11cdc:	ldr	r5, [pc, #536]	; 11efc <__assert_fail@plt+0xc10>
   11ce0:	mov	r0, r5
   11ce4:	bl	11004 <strcmp@plt>
   11ce8:	cmp	r0, #0
   11cec:	beq	11cfc <__assert_fail@plt+0xa10>
   11cf0:	ldr	r1, [r4, #8]!
   11cf4:	cmp	r1, #0
   11cf8:	bne	11ce0 <__assert_fail@plt+0x9f4>
   11cfc:	ldr	r4, [r4, #4]
   11d00:	cmp	r4, #0
   11d04:	beq	11e18 <__assert_fail@plt+0xb2c>
   11d08:	mov	r2, #5
   11d0c:	ldr	r1, [pc, #492]	; 11f00 <__assert_fail@plt+0xc14>
   11d10:	mov	r0, #0
   11d14:	bl	110a0 <dcgettext@plt>
   11d18:	ldr	r3, [pc, #484]	; 11f04 <__assert_fail@plt+0xc18>
   11d1c:	ldr	r2, [pc, #484]	; 11f08 <__assert_fail@plt+0xc1c>
   11d20:	mov	r1, r0
   11d24:	mov	r0, #1
   11d28:	bl	111fc <__printf_chk@plt>
   11d2c:	mov	r1, #0
   11d30:	mov	r0, #5
   11d34:	bl	11250 <setlocale@plt>
   11d38:	cmp	r0, #0
   11d3c:	beq	11d54 <__assert_fail@plt+0xa68>
   11d40:	mov	r2, #3
   11d44:	ldr	r1, [pc, #448]	; 11f0c <__assert_fail@plt+0xc20>
   11d48:	bl	112bc <strncmp@plt>
   11d4c:	cmp	r0, #0
   11d50:	bne	11db4 <__assert_fail@plt+0xac8>
   11d54:	mov	r2, #5
   11d58:	ldr	r1, [pc, #432]	; 11f10 <__assert_fail@plt+0xc24>
   11d5c:	mov	r0, #0
   11d60:	bl	110a0 <dcgettext@plt>
   11d64:	ldr	r5, [pc, #400]	; 11efc <__assert_fail@plt+0xc10>
   11d68:	mov	r3, r5
   11d6c:	ldr	r2, [pc, #400]	; 11f04 <__assert_fail@plt+0xc18>
   11d70:	mov	r1, r0
   11d74:	mov	r0, #1
   11d78:	bl	111fc <__printf_chk@plt>
   11d7c:	mov	r2, #5
   11d80:	ldr	r1, [pc, #396]	; 11f14 <__assert_fail@plt+0xc28>
   11d84:	mov	r0, #0
   11d88:	bl	110a0 <dcgettext@plt>
   11d8c:	mov	r1, r0
   11d90:	ldr	r2, [pc, #384]	; 11f18 <__assert_fail@plt+0xc2c>
   11d94:	ldr	r3, [pc, #384]	; 11f1c <__assert_fail@plt+0xc30>
   11d98:	cmp	r4, r5
   11d9c:	movne	r3, r2
   11da0:	mov	r2, r4
   11da4:	mov	r0, #1
   11da8:	bl	111fc <__printf_chk@plt>
   11dac:	b	11b08 <__assert_fail@plt+0x81c>
   11db0:	ldr	r4, [pc, #324]	; 11efc <__assert_fail@plt+0xc10>
   11db4:	mov	r2, #5
   11db8:	ldr	r1, [pc, #352]	; 11f20 <__assert_fail@plt+0xc34>
   11dbc:	mov	r0, #0
   11dc0:	bl	110a0 <dcgettext@plt>
   11dc4:	ldr	r3, [pc, #240]	; 11ebc <__assert_fail@plt+0xbd0>
   11dc8:	ldr	r1, [r3]
   11dcc:	bl	10fe0 <fputs_unlocked@plt>
   11dd0:	b	11d54 <__assert_fail@plt+0xa68>
   11dd4:	mov	r2, #5
   11dd8:	ldr	r1, [pc, #304]	; 11f10 <__assert_fail@plt+0xc24>
   11ddc:	mov	r0, #0
   11de0:	bl	110a0 <dcgettext@plt>
   11de4:	ldr	r4, [pc, #272]	; 11efc <__assert_fail@plt+0xc10>
   11de8:	mov	r3, r4
   11dec:	ldr	r2, [pc, #272]	; 11f04 <__assert_fail@plt+0xc18>
   11df0:	mov	r1, r0
   11df4:	mov	r0, #1
   11df8:	bl	111fc <__printf_chk@plt>
   11dfc:	mov	r2, #5
   11e00:	ldr	r1, [pc, #268]	; 11f14 <__assert_fail@plt+0xc28>
   11e04:	mov	r0, #0
   11e08:	bl	110a0 <dcgettext@plt>
   11e0c:	mov	r1, r0
   11e10:	ldr	r3, [pc, #260]	; 11f1c <__assert_fail@plt+0xc30>
   11e14:	b	11da0 <__assert_fail@plt+0xab4>
   11e18:	mov	r2, #5
   11e1c:	ldr	r1, [pc, #220]	; 11f00 <__assert_fail@plt+0xc14>
   11e20:	mov	r0, #0
   11e24:	bl	110a0 <dcgettext@plt>
   11e28:	ldr	r3, [pc, #212]	; 11f04 <__assert_fail@plt+0xc18>
   11e2c:	ldr	r2, [pc, #212]	; 11f08 <__assert_fail@plt+0xc1c>
   11e30:	mov	r1, r0
   11e34:	mov	r0, #1
   11e38:	bl	111fc <__printf_chk@plt>
   11e3c:	mov	r1, #0
   11e40:	mov	r0, #5
   11e44:	bl	11250 <setlocale@plt>
   11e48:	cmp	r0, #0
   11e4c:	beq	11dd4 <__assert_fail@plt+0xae8>
   11e50:	mov	r2, #3
   11e54:	ldr	r1, [pc, #176]	; 11f0c <__assert_fail@plt+0xc20>
   11e58:	bl	112bc <strncmp@plt>
   11e5c:	cmp	r0, #0
   11e60:	bne	11db0 <__assert_fail@plt+0xac4>
   11e64:	mov	r2, #5
   11e68:	ldr	r1, [pc, #160]	; 11f10 <__assert_fail@plt+0xc24>
   11e6c:	mov	r0, #0
   11e70:	bl	110a0 <dcgettext@plt>
   11e74:	ldr	r4, [pc, #128]	; 11efc <__assert_fail@plt+0xc10>
   11e78:	mov	r3, r4
   11e7c:	ldr	r2, [pc, #128]	; 11f04 <__assert_fail@plt+0xc18>
   11e80:	mov	r1, r0
   11e84:	mov	r0, #1
   11e88:	bl	111fc <__printf_chk@plt>
   11e8c:	mov	r2, #5
   11e90:	ldr	r1, [pc, #124]	; 11f14 <__assert_fail@plt+0xc28>
   11e94:	mov	r0, #0
   11e98:	bl	110a0 <dcgettext@plt>
   11e9c:	mov	r1, r0
   11ea0:	ldr	r3, [pc, #116]	; 11f1c <__assert_fail@plt+0xc30>
   11ea4:	b	11da0 <__assert_fail@plt+0xab4>
   11ea8:	muleq	r4, r8, r1
   11eac:	andeq	r6, r3, r0, lsr r8
   11eb0:	ldrdeq	sl, [r4], -r8
   11eb4:	andeq	r6, r3, r8, asr r8
   11eb8:	andeq	r6, r3, ip, ror r8
   11ebc:	andeq	sl, r4, r4, lsr #3
   11ec0:	andeq	r6, r3, r4, asr #17
   11ec4:	strdeq	r6, [r3], -ip
   11ec8:	andeq	r6, r3, r8, asr #18
   11ecc:	muleq	r3, r4, r9
   11ed0:	ldrdeq	r6, [r3], -ip
   11ed4:	andeq	r6, r3, r4, ror sl
   11ed8:			; <UNDEFINED> instruction: 0x00036ab8
   11edc:	andeq	r6, r3, r8, lsl #22
   11ee0:	andeq	r6, r3, r8, lsl #23
   11ee4:	andeq	r6, r3, r0, asr #26
   11ee8:	andeq	r6, r3, ip, ror sp
   11eec:	andeq	r6, r3, ip, lsr #27
   11ef0:	andeq	r6, r3, r4, ror #27
   11ef4:	andeq	r6, r3, r0, asr #31
   11ef8:	andeq	r6, r3, r8, lsl #12
   11efc:	andeq	r6, r3, r8, lsr #16
   11f00:	andeq	r7, r3, r8, lsr #32
   11f04:	andeq	r7, r3, r0, asr #32
   11f08:	andeq	r7, r3, r8, rrx
   11f0c:	andeq	r7, r3, r8, ror r0
   11f10:	andeq	r7, r3, r4, asr #1
   11f14:	andeq	r7, r3, r0, ror #1
   11f18:			; <UNDEFINED> instruction: 0x00036fbc
   11f1c:	andeq	r7, r3, r8, asr #11
   11f20:	andeq	r7, r3, ip, ror r0
   11f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f28:	sub	sp, sp, #292	; 0x124
   11f2c:	str	r0, [sp, #32]
   11f30:	mov	r4, r1
   11f34:	ldr	r0, [r1]
   11f38:	bl	32824 <__assert_fail@plt+0x21538>
   11f3c:	ldr	sl, [pc, #3976]	; 12ecc <__assert_fail@plt+0x1be0>
   11f40:	mov	r1, sl
   11f44:	mov	r0, #6
   11f48:	bl	11250 <setlocale@plt>
   11f4c:	ldr	r5, [pc, #3964]	; 12ed0 <__assert_fail@plt+0x1be4>
   11f50:	ldr	r1, [pc, #3964]	; 12ed4 <__assert_fail@plt+0x1be8>
   11f54:	mov	r0, r5
   11f58:	bl	112a4 <bindtextdomain@plt>
   11f5c:	mov	r0, r5
   11f60:	bl	110b8 <textdomain@plt>
   11f64:	ldr	r0, [pc, #3948]	; 12ed8 <__assert_fail@plt+0x1bec>
   11f68:	bl	36584 <__assert_fail@plt+0x25298>
   11f6c:	mov	r3, #0
   11f70:	mov	r2, #1
   11f74:	mov	r1, r3
   11f78:	ldr	r0, [pc, #3932]	; 12edc <__assert_fail@plt+0x1bf0>
   11f7c:	ldr	r0, [r0]
   11f80:	bl	111e4 <setvbuf@plt>
   11f84:	mov	r3, #1
   11f88:	str	r3, [sp, #44]	; 0x2c
   11f8c:	mov	r3, #0
   11f90:	str	r3, [sp, #36]	; 0x24
   11f94:	ldr	r5, [pc, #3908]	; 12ee0 <__assert_fail@plt+0x1bf4>
   11f98:	ldr	r6, [pc, #3908]	; 12ee4 <__assert_fail@plt+0x1bf8>
   11f9c:	ldr	r8, [pc, #3908]	; 12ee8 <__assert_fail@plt+0x1bfc>
   11fa0:	ldr	r7, [pc, #3908]	; 12eec <__assert_fail@plt+0x1c00>
   11fa4:	ldr	fp, [pc, #3908]	; 12ef0 <__assert_fail@plt+0x1c04>
   11fa8:	add	r9, r5, #148	; 0x94
   11fac:	mov	r3, #0
   11fb0:	str	r3, [sp]
   11fb4:	add	r3, r5, #240	; 0xf0
   11fb8:	mov	r2, r6
   11fbc:	mov	r1, r4
   11fc0:	ldr	r0, [sp, #32]
   11fc4:	bl	11178 <getopt_long@plt>
   11fc8:	cmn	r0, #1
   11fcc:	beq	12240 <__assert_fail@plt+0xf54>
   11fd0:	cmp	r0, #122	; 0x7a
   11fd4:	beq	121e0 <__assert_fail@plt+0xef4>
   11fd8:	ble	12014 <__assert_fail@plt+0xd28>
   11fdc:	ldr	r3, [pc, #3856]	; 12ef4 <__assert_fail@plt+0x1c08>
   11fe0:	cmp	r0, r3
   11fe4:	beq	121d4 <__assert_fail@plt+0xee8>
   11fe8:	cmp	r0, #260	; 0x104
   11fec:	bge	12058 <__assert_fail@plt+0xd6c>
   11ff0:	sub	r3, r3, #2
   11ff4:	cmp	r0, r3
   11ff8:	beq	1218c <__assert_fail@plt+0xea0>
   11ffc:	bgt	121bc <__assert_fail@plt+0xed0>
   12000:	cmp	r0, #256	; 0x100
   12004:	bne	12038 <__assert_fail@plt+0xd4c>
   12008:	mov	r3, #1
   1200c:	strb	r3, [r7, #13]
   12010:	b	11fac <__assert_fail@plt+0xcc0>
   12014:	cmp	r0, #97	; 0x61
   12018:	beq	1208c <__assert_fail@plt+0xda0>
   1201c:	ble	12040 <__assert_fail@plt+0xd54>
   12020:	cmp	r0, #108	; 0x6c
   12024:	beq	120d8 <__assert_fail@plt+0xdec>
   12028:	cmp	r0, #119	; 0x77
   1202c:	beq	121a4 <__assert_fail@plt+0xeb8>
   12030:	cmp	r0, #99	; 0x63
   12034:	beq	12228 <__assert_fail@plt+0xf3c>
   12038:	mov	r0, #1
   1203c:	bl	11ac8 <__assert_fail@plt+0x7dc>
   12040:	cmn	r0, #3
   12044:	beq	121ec <__assert_fail@plt+0xf00>
   12048:	cmn	r0, #2
   1204c:	bne	12038 <__assert_fail@plt+0xd4c>
   12050:	mov	r0, #0
   12054:	bl	11ac8 <__assert_fail@plt+0x7dc>
   12058:	ldr	r3, [pc, #3736]	; 12ef8 <__assert_fail@plt+0x1c0c>
   1205c:	cmp	r0, r3
   12060:	beq	12080 <__assert_fail@plt+0xd94>
   12064:	cmp	r0, #260	; 0x104
   12068:	ble	12234 <__assert_fail@plt+0xf48>
   1206c:	cmp	r0, fp
   12070:	bne	12038 <__assert_fail@plt+0xd4c>
   12074:	mov	r3, #1
   12078:	strb	r3, [r7, #15]
   1207c:	b	11fac <__assert_fail@plt+0xcc0>
   12080:	mov	r3, #0
   12084:	str	r3, [sp, #44]	; 0x2c
   12088:	b	11fac <__assert_fail@plt+0xcc0>
   1208c:	mov	r3, #0
   12090:	str	r3, [sp, #8]
   12094:	ldr	r3, [pc, #3680]	; 12efc <__assert_fail@plt+0x1c10>
   12098:	ldr	r3, [r3]
   1209c:	str	r3, [sp, #4]
   120a0:	mov	r3, #4
   120a4:	str	r3, [sp]
   120a8:	mov	r3, r9
   120ac:	add	r2, r5, #192	; 0xc0
   120b0:	ldr	r1, [pc, #3656]	; 12f00 <__assert_fail@plt+0x1c14>
   120b4:	ldr	r1, [r1]
   120b8:	ldr	r0, [pc, #3652]	; 12f04 <__assert_fail@plt+0x1c18>
   120bc:	bl	198e8 <__assert_fail@plt+0x85fc>
   120c0:	add	r0, r5, r0, lsl #2
   120c4:	ldr	r3, [r0, #148]	; 0x94
   120c8:	str	r3, [r8]
   120cc:	mov	r3, #1
   120d0:	strb	r3, [r7, #14]
   120d4:	b	11fac <__assert_fail@plt+0xcc0>
   120d8:	ldr	sl, [pc, #3616]	; 12f00 <__assert_fail@plt+0x1c14>
   120dc:	ldr	r3, [sl]
   120e0:	str	r3, [sp, #24]
   120e4:	mov	r2, #5
   120e8:	ldr	r1, [pc, #3608]	; 12f08 <__assert_fail@plt+0x1c1c>
   120ec:	mov	r0, #0
   120f0:	bl	110a0 <dcgettext@plt>
   120f4:	mov	r3, #0
   120f8:	str	r3, [sp, #16]
   120fc:	str	r0, [sp, #12]
   12100:	ldr	r3, [pc, #3524]	; 12ecc <__assert_fail@plt+0x1be0>
   12104:	str	r3, [sp, #8]
   12108:	mvn	r2, #0
   1210c:	mvn	r3, #0
   12110:	strd	r2, [sp]
   12114:	mov	r2, #0
   12118:	mov	r3, #0
   1211c:	ldr	r0, [sp, #24]
   12120:	bl	3503c <__assert_fail@plt+0x23d50>
   12124:	strd	r0, [r7]
   12128:	ldr	sl, [sl]
   1212c:	and	r0, r0, #7
   12130:	mov	r1, #0
   12134:	orrs	r3, r0, r1
   12138:	beq	11fac <__assert_fail@plt+0xcc0>
   1213c:	mov	r2, #5
   12140:	ldr	r1, [pc, #3524]	; 12f0c <__assert_fail@plt+0x1c20>
   12144:	mov	r0, #0
   12148:	bl	110a0 <dcgettext@plt>
   1214c:	mov	r4, r0
   12150:	mov	r0, sl
   12154:	bl	34374 <__assert_fail@plt+0x23088>
   12158:	mov	r3, r0
   1215c:	mov	r2, r4
   12160:	mov	r1, #0
   12164:	mov	r0, r1
   12168:	bl	11124 <error@plt>
   1216c:	mov	r2, #5
   12170:	ldr	r1, [pc, #3480]	; 12f10 <__assert_fail@plt+0x1c24>
   12174:	mov	r0, #0
   12178:	bl	110a0 <dcgettext@plt>
   1217c:	mov	r2, r0
   12180:	mov	r1, #0
   12184:	mov	r0, #1
   12188:	bl	11124 <error@plt>
   1218c:	mov	r3, #1
   12190:	strb	r3, [r7, #16]
   12194:	mov	r3, #0
   12198:	strb	r3, [r7, #17]
   1219c:	strb	r3, [r7, #18]
   121a0:	b	11fac <__assert_fail@plt+0xcc0>
   121a4:	mov	r3, #0
   121a8:	strb	r3, [r7, #16]
   121ac:	mov	r2, #1
   121b0:	strb	r2, [r7, #17]
   121b4:	strb	r3, [r7, #18]
   121b8:	b	11fac <__assert_fail@plt+0xcc0>
   121bc:	mov	r3, #0
   121c0:	strb	r3, [r7, #16]
   121c4:	strb	r3, [r7, #17]
   121c8:	mov	r3, #1
   121cc:	strb	r3, [r7, #18]
   121d0:	b	11fac <__assert_fail@plt+0xcc0>
   121d4:	mov	r3, #1
   121d8:	strb	r3, [r7, #19]
   121dc:	b	11fac <__assert_fail@plt+0xcc0>
   121e0:	mov	r3, #0
   121e4:	strb	r3, [r8, #4]
   121e8:	b	11fac <__assert_fail@plt+0xcc0>
   121ec:	mov	r4, #0
   121f0:	str	r4, [sp, #8]
   121f4:	ldr	r3, [pc, #3352]	; 12f14 <__assert_fail@plt+0x1c28>
   121f8:	str	r3, [sp, #4]
   121fc:	ldr	r3, [pc, #3348]	; 12f18 <__assert_fail@plt+0x1c2c>
   12200:	str	r3, [sp]
   12204:	ldr	r3, [pc, #3344]	; 12f1c <__assert_fail@plt+0x1c30>
   12208:	ldr	r3, [r3]
   1220c:	ldr	r2, [pc, #3340]	; 12f20 <__assert_fail@plt+0x1c34>
   12210:	ldr	r1, [pc, #3340]	; 12f24 <__assert_fail@plt+0x1c38>
   12214:	ldr	r0, [pc, #3264]	; 12edc <__assert_fail@plt+0x1bf0>
   12218:	ldr	r0, [r0]
   1221c:	bl	34854 <__assert_fail@plt+0x23568>
   12220:	mov	r0, r4
   12224:	bl	11190 <exit@plt>
   12228:	mov	r3, #1
   1222c:	str	r3, [sp, #36]	; 0x24
   12230:	b	11fac <__assert_fail@plt+0xcc0>
   12234:	mov	r3, #1
   12238:	str	r3, [sp, #44]	; 0x2c
   1223c:	b	11fac <__assert_fail@plt+0xcc0>
   12240:	ldr	r3, [pc, #3236]	; 12eec <__assert_fail@plt+0x1c00>
   12244:	mov	r2, #3
   12248:	str	r2, [r3, #20]
   1224c:	ldrd	r2, [r3]
   12250:	orrs	r1, r2, r3
   12254:	beq	12408 <__assert_fail@plt+0x111c>
   12258:	ldr	r1, [pc, #3208]	; 12ee8 <__assert_fail@plt+0x1bfc>
   1225c:	ldr	r1, [r1]
   12260:	cmp	r1, #9
   12264:	bne	12374 <__assert_fail@plt+0x1088>
   12268:	cmp	r3, #0
   1226c:	cmpeq	r2, #512	; 0x200
   12270:	bhi	12394 <__assert_fail@plt+0x10a8>
   12274:	ldr	r2, [pc, #3184]	; 12eec <__assert_fail@plt+0x1c00>
   12278:	ldr	r3, [r2]
   1227c:	ldr	r1, [r2, #4]
   12280:	lsr	r3, r3, #2
   12284:	orr	r3, r3, r1, lsl #30
   12288:	str	r3, [r2, #8]
   1228c:	ldr	r3, [pc, #3156]	; 12ee8 <__assert_fail@plt+0x1bfc>
   12290:	ldrb	r3, [r3, #4]
   12294:	ldr	r2, [sp, #36]	; 0x24
   12298:	cmp	r3, #10
   1229c:	moveq	r2, #0
   122a0:	andne	r2, r2, #1
   122a4:	cmp	r2, #0
   122a8:	bne	12478 <__assert_fail@plt+0x118c>
   122ac:	ldr	r3, [pc, #3128]	; 12eec <__assert_fail@plt+0x1c00>
   122b0:	ldrb	r3, [r3, #13]
   122b4:	eor	r3, r3, #1
   122b8:	ldr	r2, [sp, #36]	; 0x24
   122bc:	orrs	r3, r2, r3
   122c0:	beq	124c0 <__assert_fail@plt+0x11d4>
   122c4:	ldr	r3, [pc, #3104]	; 12eec <__assert_fail@plt+0x1c00>
   122c8:	ldrb	r3, [r3, #16]
   122cc:	eor	r3, r3, #1
   122d0:	ldr	r2, [sp, #36]	; 0x24
   122d4:	orrs	r3, r2, r3
   122d8:	beq	124e8 <__assert_fail@plt+0x11fc>
   122dc:	ldr	r3, [pc, #3080]	; 12eec <__assert_fail@plt+0x1c00>
   122e0:	ldrb	r3, [r3, #17]
   122e4:	eor	r3, r3, #1
   122e8:	ldr	r2, [sp, #36]	; 0x24
   122ec:	orrs	r3, r2, r3
   122f0:	beq	12510 <__assert_fail@plt+0x1224>
   122f4:	ldr	r3, [pc, #3056]	; 12eec <__assert_fail@plt+0x1c00>
   122f8:	ldrb	r3, [r3, #18]
   122fc:	eor	r3, r3, #1
   12300:	ldr	r2, [sp, #36]	; 0x24
   12304:	orrs	r3, r2, r3
   12308:	str	r3, [sp, #64]	; 0x40
   1230c:	beq	12538 <__assert_fail@plt+0x124c>
   12310:	ldr	r3, [sp, #36]	; 0x24
   12314:	eor	r3, r3, #1
   12318:	ldr	r2, [pc, #3020]	; 12eec <__assert_fail@plt+0x1c00>
   1231c:	ldrb	r2, [r2, #19]
   12320:	ands	r3, r2, r3
   12324:	str	r3, [sp, #52]	; 0x34
   12328:	bne	12560 <__assert_fail@plt+0x1274>
   1232c:	ldr	r2, [sp, #32]
   12330:	add	r3, r4, r2, lsl #2
   12334:	str	r3, [sp, #80]	; 0x50
   12338:	ldr	r3, [pc, #3168]	; 12fa0 <__assert_fail@plt+0x1cb4>
   1233c:	ldr	r3, [r3]
   12340:	cmp	r2, r3
   12344:	ldreq	r3, [pc, #3148]	; 12f98 <__assert_fail@plt+0x1cac>
   12348:	streq	r3, [r4, r2, lsl #2]
   1234c:	ldreq	r3, [sp, #80]	; 0x50
   12350:	addeq	r3, r3, #4
   12354:	streq	r3, [sp, #80]	; 0x50
   12358:	ldr	r3, [pc, #3136]	; 12fa0 <__assert_fail@plt+0x1cb4>
   1235c:	ldr	r3, [r3]
   12360:	add	r3, r4, r3, lsl #2
   12364:	str	r3, [sp, #40]	; 0x28
   12368:	add	r3, sp, #144	; 0x90
   1236c:	str	r3, [sp, #108]	; 0x6c
   12370:	b	13064 <__assert_fail@plt+0x1d78>
   12374:	mov	r2, #5
   12378:	ldr	r1, [pc, #2984]	; 12f28 <__assert_fail@plt+0x1c3c>
   1237c:	mov	r0, #0
   12380:	bl	110a0 <dcgettext@plt>
   12384:	mov	r2, r0
   12388:	mov	r1, #0
   1238c:	mov	r0, #1
   12390:	bl	11124 <error@plt>
   12394:	mov	r2, #5
   12398:	ldr	r1, [pc, #2924]	; 12f0c <__assert_fail@plt+0x1c20>
   1239c:	mov	r0, #0
   123a0:	bl	110a0 <dcgettext@plt>
   123a4:	mov	r4, r0
   123a8:	mov	r0, sl
   123ac:	bl	34374 <__assert_fail@plt+0x23088>
   123b0:	mov	r3, r0
   123b4:	mov	r2, r4
   123b8:	mov	r1, #0
   123bc:	mov	r0, r1
   123c0:	bl	11124 <error@plt>
   123c4:	mov	r2, #5
   123c8:	ldr	r1, [pc, #2908]	; 12f2c <__assert_fail@plt+0x1c40>
   123cc:	mov	r0, #0
   123d0:	bl	110a0 <dcgettext@plt>
   123d4:	mov	r4, r0
   123d8:	ldr	r3, [pc, #2824]	; 12ee8 <__assert_fail@plt+0x1bfc>
   123dc:	ldr	r2, [r3]
   123e0:	ldr	r3, [pc, #2808]	; 12ee0 <__assert_fail@plt+0x1bf4>
   123e4:	ldr	r0, [r3, r2, lsl #2]
   123e8:	bl	34374 <__assert_fail@plt+0x23088>
   123ec:	mov	r3, #512	; 0x200
   123f0:	str	r3, [sp]
   123f4:	mov	r3, r0
   123f8:	mov	r2, r4
   123fc:	mov	r1, #0
   12400:	mov	r0, #1
   12404:	bl	11124 <error@plt>
   12408:	ldr	r1, [pc, #2780]	; 12eec <__assert_fail@plt+0x1c00>
   1240c:	ldr	r3, [pc, #2772]	; 12ee8 <__assert_fail@plt+0x1bfc>
   12410:	ldr	r0, [r3]
   12414:	ldr	r3, [pc, #2756]	; 12ee0 <__assert_fail@plt+0x1bf4>
   12418:	add	r3, r3, r0, lsl #2
   1241c:	ldr	r2, [r3, #480]	; 0x1e0
   12420:	asr	r3, r2, #31
   12424:	strd	r2, [r1]
   12428:	ldr	r3, [r1, #4]
   1242c:	lsr	r2, r2, #2
   12430:	orr	r2, r2, r3, lsl #30
   12434:	str	r2, [r1, #8]
   12438:	cmp	r0, #2
   1243c:	bhi	1228c <__assert_fail@plt+0xfa0>
   12440:	ldr	r3, [sp, #36]	; 0x24
   12444:	cmp	r3, #0
   12448:	beq	122ac <__assert_fail@plt+0xfc0>
   1244c:	ldrb	r3, [r1, #14]
   12450:	cmp	r3, #0
   12454:	bne	124a0 <__assert_fail@plt+0x11b4>
   12458:	ldr	r3, [pc, #2696]	; 12ee8 <__assert_fail@plt+0x1bfc>
   1245c:	ldrb	r3, [r3, #4]
   12460:	ldr	r2, [sp, #36]	; 0x24
   12464:	cmp	r3, #10
   12468:	moveq	r2, #0
   1246c:	andne	r2, r2, #1
   12470:	cmp	r2, #0
   12474:	beq	122c4 <__assert_fail@plt+0xfd8>
   12478:	mov	r2, #5
   1247c:	ldr	r1, [pc, #2732]	; 12f30 <__assert_fail@plt+0x1c44>
   12480:	mov	r0, #0
   12484:	bl	110a0 <dcgettext@plt>
   12488:	mov	r2, r0
   1248c:	mov	r1, #0
   12490:	mov	r0, r1
   12494:	bl	11124 <error@plt>
   12498:	mov	r0, #1
   1249c:	bl	11ac8 <__assert_fail@plt+0x7dc>
   124a0:	mov	r2, #5
   124a4:	ldr	r1, [pc, #2696]	; 12f34 <__assert_fail@plt+0x1c48>
   124a8:	mov	r0, #0
   124ac:	bl	110a0 <dcgettext@plt>
   124b0:	mov	r2, r0
   124b4:	mov	r1, #0
   124b8:	mov	r0, #1
   124bc:	bl	11124 <error@plt>
   124c0:	mov	r2, #5
   124c4:	ldr	r1, [pc, #2668]	; 12f38 <__assert_fail@plt+0x1c4c>
   124c8:	mov	r0, #0
   124cc:	bl	110a0 <dcgettext@plt>
   124d0:	mov	r2, r0
   124d4:	mov	r1, #0
   124d8:	mov	r0, r1
   124dc:	bl	11124 <error@plt>
   124e0:	mov	r0, #1
   124e4:	bl	11ac8 <__assert_fail@plt+0x7dc>
   124e8:	mov	r2, #5
   124ec:	ldr	r1, [pc, #2632]	; 12f3c <__assert_fail@plt+0x1c50>
   124f0:	mov	r0, #0
   124f4:	bl	110a0 <dcgettext@plt>
   124f8:	mov	r2, r0
   124fc:	mov	r1, #0
   12500:	mov	r0, r1
   12504:	bl	11124 <error@plt>
   12508:	mov	r0, #1
   1250c:	bl	11ac8 <__assert_fail@plt+0x7dc>
   12510:	mov	r2, #5
   12514:	ldr	r1, [pc, #2596]	; 12f40 <__assert_fail@plt+0x1c54>
   12518:	mov	r0, #0
   1251c:	bl	110a0 <dcgettext@plt>
   12520:	mov	r2, r0
   12524:	mov	r1, #0
   12528:	mov	r0, r1
   1252c:	bl	11124 <error@plt>
   12530:	mov	r0, #1
   12534:	bl	11ac8 <__assert_fail@plt+0x7dc>
   12538:	mov	r2, #5
   1253c:	ldr	r1, [pc, #2560]	; 12f44 <__assert_fail@plt+0x1c58>
   12540:	mov	r0, #0
   12544:	bl	110a0 <dcgettext@plt>
   12548:	mov	r2, r0
   1254c:	mov	r1, #0
   12550:	mov	r0, r1
   12554:	bl	11124 <error@plt>
   12558:	mov	r0, #1
   1255c:	bl	11ac8 <__assert_fail@plt+0x7dc>
   12560:	mov	r2, #5
   12564:	ldr	r1, [pc, #2524]	; 12f48 <__assert_fail@plt+0x1c5c>
   12568:	mov	r0, #0
   1256c:	bl	110a0 <dcgettext@plt>
   12570:	mov	r2, r0
   12574:	mov	r1, #0
   12578:	mov	r0, r1
   1257c:	bl	11124 <error@plt>
   12580:	mov	r0, #1
   12584:	bl	11ac8 <__assert_fail@plt+0x7dc>
   12588:	ldr	r1, [pc, #2492]	; 12f4c <__assert_fail@plt+0x1c60>
   1258c:	mov	r0, r4
   12590:	bl	31b70 <__assert_fail@plt+0x20884>
   12594:	subs	sl, r0, #0
   12598:	strne	r4, [sp, #84]	; 0x54
   1259c:	bne	130c8 <__assert_fail@plt+0x1ddc>
   125a0:	bl	111c0 <__errno_location@plt>
   125a4:	ldr	r5, [r0]
   125a8:	mov	r2, r4
   125ac:	mov	r1, #3
   125b0:	mov	r0, #0
   125b4:	bl	3420c <__assert_fail@plt+0x22f20>
   125b8:	mov	r3, r0
   125bc:	ldr	r2, [pc, #2444]	; 12f50 <__assert_fail@plt+0x1c64>
   125c0:	mov	r1, r5
   125c4:	mov	r0, #0
   125c8:	bl	11124 <error@plt>
   125cc:	ldr	r3, [sp, #52]	; 0x34
   125d0:	b	12ca4 <__assert_fail@plt+0x19b8>
   125d4:	mov	r2, #5
   125d8:	ldr	r1, [pc, #2420]	; 12f54 <__assert_fail@plt+0x1c68>
   125dc:	mov	r0, #0
   125e0:	bl	110a0 <dcgettext@plt>
   125e4:	mov	r4, r0
   125e8:	ldr	r2, [sp, #84]	; 0x54
   125ec:	mov	r1, #3
   125f0:	mov	r0, #0
   125f4:	bl	3420c <__assert_fail@plt+0x22f20>
   125f8:	mov	r3, r0
   125fc:	mov	r2, r4
   12600:	mov	r1, #0
   12604:	mov	r0, #1
   12608:	bl	11124 <error@plt>
   1260c:	mov	r5, #0
   12610:	b	132e8 <__assert_fail@plt+0x1ffc>
   12614:	add	r7, r9, r5
   12618:	ldr	r3, [r8, #24]
   1261c:	cmp	r3, #0
   12620:	beq	126d8 <__assert_fail@plt+0x13ec>
   12624:	ldr	r0, [r8, #24]
   12628:	ldrb	r3, [r7]
   1262c:	tst	r3, #223	; 0xdf
   12630:	beq	131c4 <__assert_fail@plt+0x1ed8>
   12634:	cmp	r3, #9
   12638:	cmpne	r3, #45	; 0x2d
   1263c:	movne	r2, #1
   12640:	moveq	r2, #0
   12644:	cmp	r3, #40	; 0x28
   12648:	moveq	r3, #0
   1264c:	andne	r3, r2, #1
   12650:	cmp	r3, #0
   12654:	moveq	r6, #0
   12658:	beq	126a0 <__assert_fail@plt+0x13b4>
   1265c:	mov	r1, r7
   12660:	mov	r6, #0
   12664:	add	r6, r6, #1
   12668:	cmp	r0, r6
   1266c:	bcc	13214 <__assert_fail@plt+0x1f28>
   12670:	ldrb	r3, [r1, #1]!
   12674:	tst	r3, #223	; 0xdf
   12678:	beq	126a0 <__assert_fail@plt+0x13b4>
   1267c:	cmp	r3, #9
   12680:	cmpne	r3, #45	; 0x2d
   12684:	movne	r2, #1
   12688:	moveq	r2, #0
   1268c:	cmp	r3, #40	; 0x28
   12690:	moveq	r3, #0
   12694:	andne	r3, r2, #1
   12698:	cmp	r3, #0
   1269c:	bne	12664 <__assert_fail@plt+0x1378>
   126a0:	ldrb	r3, [r7, r6]
   126a4:	str	r3, [sp, #48]	; 0x30
   126a8:	mov	r3, #0
   126ac:	strb	r3, [r7, r6]
   126b0:	mov	r1, fp
   126b4:	mov	r0, r7
   126b8:	bl	19714 <__assert_fail@plt+0x8428>
   126bc:	ldrb	r3, [sp, #48]	; 0x30
   126c0:	strb	r3, [r7, r6]
   126c4:	cmp	r0, #2
   126c8:	ldrgt	r3, [pc, #2072]	; 12ee8 <__assert_fail@plt+0x1bfc>
   126cc:	strgt	r0, [r3]
   126d0:	bgt	13308 <__assert_fail@plt+0x201c>
   126d4:	b	13214 <__assert_fail@plt+0x1f28>
   126d8:	ldr	r0, [pc, #2168]	; 12f58 <__assert_fail@plt+0x1c6c>
   126dc:	ldr	r6, [pc, #2044]	; 12ee0 <__assert_fail@plt+0x1bf4>
   126e0:	bl	111a8 <strlen@plt>
   126e4:	ldr	r3, [r8, #24]
   126e8:	cmp	r3, r0
   126ec:	movcs	r0, r3
   126f0:	str	r0, [r8, #24]
   126f4:	ldr	r0, [r6, #4]!
   126f8:	cmp	r0, #0
   126fc:	bne	126e0 <__assert_fail@plt+0x13f4>
   12700:	b	12624 <__assert_fail@plt+0x1338>
   12704:	add	r5, r5, #1
   12708:	mov	r3, #0
   1270c:	str	r3, [sp, #132]	; 0x84
   12710:	subs	r4, r4, r5
   12714:	beq	13214 <__assert_fail@plt+0x1f28>
   12718:	add	r3, r9, r5
   1271c:	str	r3, [sp, #48]	; 0x30
   12720:	sub	r4, r4, #1
   12724:	mov	r2, r3
   12728:	b	12730 <__assert_fail@plt+0x1444>
   1272c:	sub	r4, r4, #1
   12730:	cmp	r4, #0
   12734:	beq	1276c <__assert_fail@plt+0x1480>
   12738:	ldrb	r3, [r2, r4]
   1273c:	cmp	r3, #41	; 0x29
   12740:	bne	1272c <__assert_fail@plt+0x1440>
   12744:	ldr	r3, [sp, #48]	; 0x30
   12748:	add	r5, r3, r4
   1274c:	ldr	r3, [sp, #76]	; 0x4c
   12750:	cmp	r3, #0
   12754:	bne	12780 <__assert_fail@plt+0x1494>
   12758:	add	r4, r4, #1
   1275c:	mov	r3, #0
   12760:	strb	r3, [r5]
   12764:	ldr	r2, [sp, #48]	; 0x30
   12768:	b	1279c <__assert_fail@plt+0x14b0>
   1276c:	ldrb	r3, [r9, r5]
   12770:	cmp	r3, #41	; 0x29
   12774:	bne	13214 <__assert_fail@plt+0x1f28>
   12778:	ldr	r5, [sp, #48]	; 0x30
   1277c:	b	1274c <__assert_fail@plt+0x1460>
   12780:	mov	r1, r4
   12784:	ldr	r0, [sp, #48]	; 0x30
   12788:	bl	11420 <__assert_fail@plt+0x134>
   1278c:	cmp	r0, #0
   12790:	bne	12758 <__assert_fail@plt+0x146c>
   12794:	b	13214 <__assert_fail@plt+0x1f28>
   12798:	add	r4, r4, #1
   1279c:	ldrb	r3, [r2, r4]
   127a0:	cmp	r3, #9
   127a4:	cmpne	r3, #32
   127a8:	beq	12798 <__assert_fail@plt+0x14ac>
   127ac:	cmp	r3, #61	; 0x3d
   127b0:	bne	13214 <__assert_fail@plt+0x1f28>
   127b4:	add	r4, r4, #1
   127b8:	ldr	r3, [sp, #48]	; 0x30
   127bc:	add	r3, r3, r4
   127c0:	mov	r5, r3
   127c4:	ldrb	r2, [r3], #1
   127c8:	cmp	r2, #9
   127cc:	cmpne	r2, #32
   127d0:	beq	127c0 <__assert_fail@plt+0x14d4>
   127d4:	mov	r0, r5
   127d8:	bl	1184c <__assert_fail@plt+0x560>
   127dc:	b	128a0 <__assert_fail@plt+0x15b4>
   127e0:	sub	r2, r4, r5
   127e4:	ldrb	r1, [r9, r5]
   127e8:	ldr	r3, [r8, #20]
   127ec:	cmp	r1, #92	; 0x5c
   127f0:	addeq	r3, r3, #1
   127f4:	cmp	r2, r3
   127f8:	bcc	13214 <__assert_fail@plt+0x1f28>
   127fc:	cmp	r7, #9
   12800:	beq	12998 <__assert_fail@plt+0x16ac>
   12804:	ldr	r3, [r8, #8]
   12808:	add	r5, r5, r3
   1280c:	ldrb	r3, [r9, r5]
   12810:	cmp	r3, #32
   12814:	cmpne	r3, #9
   12818:	bne	13214 <__assert_fail@plt+0x1f28>
   1281c:	mov	r3, #0
   12820:	strb	r3, [r9, r5]
   12824:	mov	r0, r6
   12828:	bl	1184c <__assert_fail@plt+0x560>
   1282c:	cmp	r0, #0
   12830:	beq	13214 <__assert_fail@plt+0x1f28>
   12834:	add	r1, r5, #1
   12838:	sub	r3, r4, r1
   1283c:	cmp	r3, #1
   12840:	beq	12854 <__assert_fail@plt+0x1568>
   12844:	ldrb	r3, [r9, r1]
   12848:	cmp	r3, #32
   1284c:	cmpne	r3, #42	; 0x2a
   12850:	beq	12a08 <__assert_fail@plt+0x171c>
   12854:	ldr	r3, [pc, #1676]	; 12ee8 <__assert_fail@plt+0x1bfc>
   12858:	ldr	r3, [r3, #8]
   1285c:	cmp	r3, #0
   12860:	beq	13214 <__assert_fail@plt+0x1f28>
   12864:	mov	r3, #1
   12868:	ldr	r2, [pc, #1656]	; 12ee8 <__assert_fail@plt+0x1bfc>
   1286c:	str	r3, [r2, #8]
   12870:	add	r3, r9, r1
   12874:	str	r3, [sp, #48]	; 0x30
   12878:	ldr	r3, [sp, #76]	; 0x4c
   1287c:	cmp	r3, #0
   12880:	moveq	r5, r6
   12884:	beq	128a8 <__assert_fail@plt+0x15bc>
   12888:	sub	r1, r4, r1
   1288c:	ldr	r0, [sp, #48]	; 0x30
   12890:	bl	11420 <__assert_fail@plt+0x134>
   12894:	adds	r0, r0, #0
   12898:	movne	r0, #1
   1289c:	mov	r5, r6
   128a0:	cmp	r0, #0
   128a4:	beq	13214 <__assert_fail@plt+0x1f28>
   128a8:	ldr	r3, [sp, #72]	; 0x48
   128ac:	cmp	r3, #0
   128b0:	bne	128c8 <__assert_fail@plt+0x15dc>
   128b4:	ldr	r1, [pc, #1756]	; 12f98 <__assert_fail@plt+0x1cac>
   128b8:	ldr	r0, [sp, #48]	; 0x30
   128bc:	bl	11004 <strcmp@plt>
   128c0:	cmp	r0, #0
   128c4:	beq	13214 <__assert_fail@plt+0x1f28>
   128c8:	ldrb	r3, [r8, #16]
   128cc:	cmp	r3, #0
   128d0:	ldrne	r7, [sp, #52]	; 0x34
   128d4:	bne	128ec <__assert_fail@plt+0x1600>
   128d8:	mov	r1, #10
   128dc:	ldr	r0, [sp, #48]	; 0x30
   128e0:	bl	111b4 <strchr@plt>
   128e4:	adds	r7, r0, #0
   128e8:	movne	r7, #1
   128ec:	and	r7, r7, #1
   128f0:	add	r3, sp, #136	; 0x88
   128f4:	str	r3, [sp]
   128f8:	add	r3, sp, #123	; 0x7b
   128fc:	ldr	r2, [sp, #108]	; 0x6c
   12900:	add	r1, sp, #132	; 0x84
   12904:	ldr	r0, [sp, #48]	; 0x30
   12908:	bl	118b0 <__assert_fail@plt+0x5c4>
   1290c:	subs	r9, r0, #0
   12910:	bne	12a9c <__assert_fail@plt+0x17b0>
   12914:	ldrd	r2, [sp, #88]	; 0x58
   12918:	adds	r2, r2, #1
   1291c:	adc	r3, r3, #0
   12920:	strd	r2, [sp, #88]	; 0x58
   12924:	ldrb	r3, [r8, #16]
   12928:	cmp	r3, #0
   1292c:	bne	1298c <__assert_fail@plt+0x16a0>
   12930:	cmp	r7, #0
   12934:	beq	12960 <__assert_fail@plt+0x1674>
   12938:	ldr	r3, [pc, #1436]	; 12edc <__assert_fail@plt+0x1bf0>
   1293c:	ldr	r0, [r3]
   12940:	ldr	r3, [r0, #20]
   12944:	ldr	r2, [r0, #24]
   12948:	cmp	r3, r2
   1294c:	addcc	r2, r3, #1
   12950:	strcc	r2, [r0, #20]
   12954:	movcc	r2, #92	; 0x5c
   12958:	strbcc	r2, [r3]
   1295c:	bcs	12a90 <__assert_fail@plt+0x17a4>
   12960:	mov	r1, r7
   12964:	ldr	r0, [sp, #48]	; 0x30
   12968:	bl	114f4 <__assert_fail@plt+0x208>
   1296c:	mov	r2, #5
   12970:	ldr	r1, [pc, #1508]	; 12f5c <__assert_fail@plt+0x1c70>
   12974:	mov	r0, #0
   12978:	bl	110a0 <dcgettext@plt>
   1297c:	mov	r2, r0
   12980:	ldr	r1, [pc, #1496]	; 12f60 <__assert_fail@plt+0x1c74>
   12984:	mov	r0, #1
   12988:	bl	111fc <__printf_chk@plt>
   1298c:	ldr	r3, [sp, #36]	; 0x24
   12990:	str	r3, [sp, #104]	; 0x68
   12994:	b	13230 <__assert_fail@plt+0x1f44>
   12998:	mov	r3, #0
   1299c:	str	r3, [r8, #8]
   129a0:	bl	11184 <__ctype_b_loc@plt>
   129a4:	ldr	ip, [r0]
   129a8:	ldr	r0, [sp, #52]	; 0x34
   129ac:	mov	r2, r6
   129b0:	ldr	lr, [sp, #36]	; 0x24
   129b4:	b	129bc <__assert_fail@plt+0x16d0>
   129b8:	mov	r0, lr
   129bc:	sub	r1, r2, r6
   129c0:	ldrb	r3, [r2], #1
   129c4:	lsl	r3, r3, #1
   129c8:	ldrh	r3, [ip, r3]
   129cc:	tst	r3, #4096	; 0x1000
   129d0:	bne	129b8 <__assert_fail@plt+0x16cc>
   129d4:	cmp	r0, #0
   129d8:	beq	13214 <__assert_fail@plt+0x1f28>
   129dc:	str	r1, [r8, #8]
   129e0:	sub	r3, r1, #2
   129e4:	cmp	r3, #126	; 0x7e
   129e8:	bhi	13214 <__assert_fail@plt+0x1f28>
   129ec:	tst	r1, #1
   129f0:	bne	13214 <__assert_fail@plt+0x1f28>
   129f4:	lsl	r1, r1, #2
   129f8:	str	r1, [r8]
   129fc:	mov	r3, #0
   12a00:	str	r3, [r8, #4]
   12a04:	b	12804 <__assert_fail@plt+0x1518>
   12a08:	ldr	r2, [pc, #1240]	; 12ee8 <__assert_fail@plt+0x1bfc>
   12a0c:	ldr	r2, [r2, #8]
   12a10:	cmp	r2, #1
   12a14:	beq	12870 <__assert_fail@plt+0x1584>
   12a18:	mov	r2, #0
   12a1c:	ldr	r1, [pc, #1220]	; 12ee8 <__assert_fail@plt+0x1bfc>
   12a20:	str	r2, [r1, #8]
   12a24:	add	r1, r5, #2
   12a28:	cmp	r3, #42	; 0x2a
   12a2c:	movne	r3, #0
   12a30:	moveq	r3, #1
   12a34:	str	r3, [sp, #132]	; 0x84
   12a38:	b	12870 <__assert_fail@plt+0x1584>
   12a3c:	mov	r2, #5
   12a40:	ldr	r1, [pc, #1308]	; 12f64 <__assert_fail@plt+0x1c78>
   12a44:	mov	r0, #0
   12a48:	bl	110a0 <dcgettext@plt>
   12a4c:	mov	r4, r0
   12a50:	ldr	r2, [sp, #84]	; 0x54
   12a54:	mov	r1, #3
   12a58:	mov	r0, #0
   12a5c:	bl	3420c <__assert_fail@plt+0x22f20>
   12a60:	ldr	r3, [pc, #1152]	; 12ee8 <__assert_fail@plt+0x1bfc>
   12a64:	ldr	r3, [r3]
   12a68:	ldr	r3, [fp, r3, lsl #2]
   12a6c:	str	r3, [sp, #8]
   12a70:	ldrd	r2, [sp, #24]
   12a74:	strd	r2, [sp]
   12a78:	mov	r3, r0
   12a7c:	mov	r2, r4
   12a80:	mov	r1, #0
   12a84:	mov	r0, r1
   12a88:	bl	11124 <error@plt>
   12a8c:	b	13230 <__assert_fail@plt+0x1f44>
   12a90:	mov	r1, #92	; 0x5c
   12a94:	bl	11244 <__overflow@plt>
   12a98:	b	12960 <__assert_fail@plt+0x1674>
   12a9c:	ldrb	r3, [r8, #13]
   12aa0:	cmp	r3, #0
   12aa4:	beq	12ab4 <__assert_fail@plt+0x17c8>
   12aa8:	ldrb	r3, [sp, #123]	; 0x7b
   12aac:	cmp	r3, #0
   12ab0:	bne	1298c <__assert_fail@plt+0x16a0>
   12ab4:	ldr	r6, [r8, #8]
   12ab8:	lsrs	r6, r6, #1
   12abc:	beq	12c1c <__assert_fail@plt+0x1930>
   12ac0:	bl	11160 <__ctype_tolower_loc@plt>
   12ac4:	ldr	r0, [r0]
   12ac8:	mov	r2, r5
   12acc:	ldr	r3, [sp, #108]	; 0x6c
   12ad0:	sub	r1, r3, #1
   12ad4:	mov	r4, #0
   12ad8:	ldrb	r3, [r1, #1]!
   12adc:	ldrb	lr, [r5, r4, lsl #1]
   12ae0:	add	ip, fp, r3, lsr #4
   12ae4:	ldrb	ip, [ip, #528]	; 0x210
   12ae8:	ldr	lr, [r0, lr, lsl #2]
   12aec:	cmp	lr, ip
   12af0:	bne	12bc0 <__assert_fail@plt+0x18d4>
   12af4:	ldrb	ip, [r2, #1]
   12af8:	and	r3, r3, #15
   12afc:	add	r3, fp, r3
   12b00:	ldrb	r3, [r3, #528]	; 0x210
   12b04:	ldr	ip, [r0, ip, lsl #2]
   12b08:	cmp	ip, r3
   12b0c:	bne	12bc0 <__assert_fail@plt+0x18d4>
   12b10:	add	r4, r4, #1
   12b14:	add	r2, r2, #2
   12b18:	cmp	r6, r4
   12b1c:	bne	12ad8 <__assert_fail@plt+0x17ec>
   12b20:	ldrb	r3, [r8, #16]
   12b24:	str	r3, [sp, #112]	; 0x70
   12b28:	cmp	r3, #0
   12b2c:	moveq	r4, r6
   12b30:	bne	1298c <__assert_fail@plt+0x16a0>
   12b34:	ldrb	r3, [r8, #18]
   12b38:	str	r3, [sp, #112]	; 0x70
   12b3c:	cmp	r3, #0
   12b40:	bne	1298c <__assert_fail@plt+0x16a0>
   12b44:	cmp	r7, #0
   12b48:	streq	r9, [sp, #112]	; 0x70
   12b4c:	beq	12b7c <__assert_fail@plt+0x1890>
   12b50:	str	r7, [sp, #112]	; 0x70
   12b54:	ldr	r3, [pc, #896]	; 12edc <__assert_fail@plt+0x1bf0>
   12b58:	ldr	r0, [r3]
   12b5c:	ldr	r3, [r0, #20]
   12b60:	ldr	r2, [r0, #24]
   12b64:	cmp	r3, r2
   12b68:	addcc	r2, r3, #1
   12b6c:	strcc	r2, [r0, #20]
   12b70:	movcc	r2, #92	; 0x5c
   12b74:	strbcc	r2, [r3]
   12b78:	bcs	12c34 <__assert_fail@plt+0x1948>
   12b7c:	mov	r1, r7
   12b80:	ldr	r0, [sp, #48]	; 0x30
   12b84:	bl	114f4 <__assert_fail@plt+0x208>
   12b88:	cmp	r6, r4
   12b8c:	bne	12bf8 <__assert_fail@plt+0x190c>
   12b90:	ldrb	r3, [r8, #18]
   12b94:	cmp	r3, #0
   12b98:	bne	1298c <__assert_fail@plt+0x16a0>
   12b9c:	mov	r2, #5
   12ba0:	ldr	r1, [pc, #960]	; 12f68 <__assert_fail@plt+0x1c7c>
   12ba4:	mov	r0, #0
   12ba8:	bl	110a0 <dcgettext@plt>
   12bac:	mov	r2, r0
   12bb0:	ldr	r1, [pc, #936]	; 12f60 <__assert_fail@plt+0x1c74>
   12bb4:	mov	r0, #1
   12bb8:	bl	111fc <__printf_chk@plt>
   12bbc:	b	1298c <__assert_fail@plt+0x16a0>
   12bc0:	cmp	r6, r4
   12bc4:	beq	12b20 <__assert_fail@plt+0x1834>
   12bc8:	ldrd	r2, [sp, #96]	; 0x60
   12bcc:	adds	r2, r2, #1
   12bd0:	adc	r3, r3, #0
   12bd4:	strd	r2, [sp, #96]	; 0x60
   12bd8:	ldrb	r3, [r8, #16]
   12bdc:	cmp	r3, #0
   12be0:	bne	1298c <__assert_fail@plt+0x16a0>
   12be4:	cmp	r7, #0
   12be8:	bne	12b54 <__assert_fail@plt+0x1868>
   12bec:	mov	r1, r7
   12bf0:	ldr	r0, [sp, #48]	; 0x30
   12bf4:	bl	114f4 <__assert_fail@plt+0x208>
   12bf8:	mov	r2, #5
   12bfc:	ldr	r1, [pc, #872]	; 12f6c <__assert_fail@plt+0x1c80>
   12c00:	mov	r0, #0
   12c04:	bl	110a0 <dcgettext@plt>
   12c08:	mov	r2, r0
   12c0c:	ldr	r1, [pc, #844]	; 12f60 <__assert_fail@plt+0x1c74>
   12c10:	mov	r0, #1
   12c14:	bl	111fc <__printf_chk@plt>
   12c18:	b	1298c <__assert_fail@plt+0x16a0>
   12c1c:	ldrb	r3, [r8, #16]
   12c20:	str	r3, [sp, #112]	; 0x70
   12c24:	cmp	r3, #0
   12c28:	bne	1298c <__assert_fail@plt+0x16a0>
   12c2c:	mov	r4, r6
   12c30:	b	12b34 <__assert_fail@plt+0x1848>
   12c34:	mov	r1, #92	; 0x5c
   12c38:	bl	11244 <__overflow@plt>
   12c3c:	b	12b7c <__assert_fail@plt+0x1890>
   12c40:	ldr	r0, [sp, #124]	; 0x7c
   12c44:	bl	31c0c <__assert_fail@plt+0x20920>
   12c48:	ldr	r3, [sl]
   12c4c:	tst	r3, #32
   12c50:	mvneq	r4, #0
   12c54:	movne	r4, #0
   12c58:	ldr	r3, [sp, #72]	; 0x48
   12c5c:	cmp	r3, #0
   12c60:	bne	12cb4 <__assert_fail@plt+0x19c8>
   12c64:	mov	r0, sl
   12c68:	bl	1128c <clearerr_unlocked@plt>
   12c6c:	cmp	r4, #0
   12c70:	blt	12cf8 <__assert_fail@plt+0x1a0c>
   12c74:	ldrne	r5, [pc, #724]	; 12f50 <__assert_fail@plt+0x1c64>
   12c78:	beq	12ce0 <__assert_fail@plt+0x19f4>
   12c7c:	ldr	r2, [sp, #84]	; 0x54
   12c80:	mov	r1, #3
   12c84:	mov	r0, #0
   12c88:	bl	3420c <__assert_fail@plt+0x22f20>
   12c8c:	mov	r3, r0
   12c90:	mov	r2, r5
   12c94:	mov	r1, r4
   12c98:	mov	r0, #0
   12c9c:	bl	11124 <error@plt>
   12ca0:	ldr	r3, [sp, #52]	; 0x34
   12ca4:	ldr	r2, [sp, #64]	; 0x40
   12ca8:	and	r2, r2, r3
   12cac:	str	r2, [sp, #64]	; 0x40
   12cb0:	b	13064 <__assert_fail@plt+0x1d78>
   12cb4:	mov	r0, sl
   12cb8:	bl	31a64 <__assert_fail@plt+0x20778>
   12cbc:	lsr	r3, r4, #31
   12cc0:	cmp	r0, #0
   12cc4:	moveq	r3, #0
   12cc8:	andne	r3, r3, #1
   12ccc:	cmp	r3, #0
   12cd0:	beq	12c6c <__assert_fail@plt+0x1980>
   12cd4:	bl	111c0 <__errno_location@plt>
   12cd8:	ldr	r4, [r0]
   12cdc:	b	12c6c <__assert_fail@plt+0x1980>
   12ce0:	mov	r2, #5
   12ce4:	ldr	r1, [pc, #644]	; 12f70 <__assert_fail@plt+0x1c84>
   12ce8:	mov	r0, #0
   12cec:	bl	110a0 <dcgettext@plt>
   12cf0:	mov	r5, r0
   12cf4:	b	12c7c <__assert_fail@plt+0x1990>
   12cf8:	ldr	r3, [sp, #104]	; 0x68
   12cfc:	cmp	r3, #0
   12d00:	beq	12fb4 <__assert_fail@plt+0x1cc8>
   12d04:	ldr	r3, [pc, #480]	; 12eec <__assert_fail@plt+0x1c00>
   12d08:	ldrb	r3, [r3, #16]
   12d0c:	cmp	r3, #0
   12d10:	bne	12e80 <__assert_fail@plt+0x1b94>
   12d14:	ldrd	r0, [sp, #56]	; 0x38
   12d18:	mov	r2, r0
   12d1c:	mov	r3, r1
   12d20:	orrs	r3, r2, r3
   12d24:	beq	12d84 <__assert_fail@plt+0x1a98>
   12d28:	mvn	r2, #0
   12d2c:	mov	r3, #0
   12d30:	cmp	r1, r3
   12d34:	cmpeq	r0, r2
   12d38:	ldrls	r3, [sp, #56]	; 0x38
   12d3c:	bls	12d54 <__assert_fail@plt+0x1a68>
   12d40:	ldr	r2, [pc, #556]	; 12f74 <__assert_fail@plt+0x1c88>
   12d44:	mov	r3, #0
   12d48:	bl	36360 <__assert_fail@plt+0x25074>
   12d4c:	add	r3, r2, #999424	; 0xf4000
   12d50:	add	r3, r3, #576	; 0x240
   12d54:	mov	r2, #5
   12d58:	str	r2, [sp]
   12d5c:	ldr	r2, [pc, #532]	; 12f78 <__assert_fail@plt+0x1c8c>
   12d60:	ldr	r1, [pc, #532]	; 12f7c <__assert_fail@plt+0x1c90>
   12d64:	mov	r0, #0
   12d68:	bl	112e0 <dcngettext@plt>
   12d6c:	ldrd	r2, [sp, #56]	; 0x38
   12d70:	strd	r2, [sp]
   12d74:	mov	r2, r0
   12d78:	mov	r1, #0
   12d7c:	mov	r0, r1
   12d80:	bl	11124 <error@plt>
   12d84:	ldrd	r0, [sp, #88]	; 0x58
   12d88:	mov	r2, r0
   12d8c:	mov	r3, r1
   12d90:	orrs	r3, r2, r3
   12d94:	beq	12df4 <__assert_fail@plt+0x1b08>
   12d98:	mvn	r2, #0
   12d9c:	mov	r3, #0
   12da0:	cmp	r1, r3
   12da4:	cmpeq	r0, r2
   12da8:	ldrls	r3, [sp, #88]	; 0x58
   12dac:	bls	12dc4 <__assert_fail@plt+0x1ad8>
   12db0:	ldr	r2, [pc, #444]	; 12f74 <__assert_fail@plt+0x1c88>
   12db4:	mov	r3, #0
   12db8:	bl	36360 <__assert_fail@plt+0x25074>
   12dbc:	add	r3, r2, #999424	; 0xf4000
   12dc0:	add	r3, r3, #576	; 0x240
   12dc4:	mov	r2, #5
   12dc8:	str	r2, [sp]
   12dcc:	ldr	r2, [pc, #428]	; 12f80 <__assert_fail@plt+0x1c94>
   12dd0:	ldr	r1, [pc, #428]	; 12f84 <__assert_fail@plt+0x1c98>
   12dd4:	mov	r0, #0
   12dd8:	bl	112e0 <dcngettext@plt>
   12ddc:	ldrd	r2, [sp, #88]	; 0x58
   12de0:	strd	r2, [sp]
   12de4:	mov	r2, r0
   12de8:	mov	r1, #0
   12dec:	mov	r0, r1
   12df0:	bl	11124 <error@plt>
   12df4:	ldrd	r0, [sp, #96]	; 0x60
   12df8:	mov	r2, r0
   12dfc:	mov	r3, r1
   12e00:	orrs	r3, r2, r3
   12e04:	beq	12e64 <__assert_fail@plt+0x1b78>
   12e08:	mvn	r2, #0
   12e0c:	mov	r3, #0
   12e10:	cmp	r1, r3
   12e14:	cmpeq	r0, r2
   12e18:	ldrls	r3, [sp, #96]	; 0x60
   12e1c:	bls	12e34 <__assert_fail@plt+0x1b48>
   12e20:	ldr	r2, [pc, #332]	; 12f74 <__assert_fail@plt+0x1c88>
   12e24:	mov	r3, #0
   12e28:	bl	36360 <__assert_fail@plt+0x25074>
   12e2c:	add	r3, r2, #999424	; 0xf4000
   12e30:	add	r3, r3, #576	; 0x240
   12e34:	mov	r2, #5
   12e38:	str	r2, [sp]
   12e3c:	ldr	r2, [pc, #324]	; 12f88 <__assert_fail@plt+0x1c9c>
   12e40:	ldr	r1, [pc, #324]	; 12f8c <__assert_fail@plt+0x1ca0>
   12e44:	mov	r0, #0
   12e48:	bl	112e0 <dcngettext@plt>
   12e4c:	ldrd	r2, [sp, #96]	; 0x60
   12e50:	strd	r2, [sp]
   12e54:	mov	r2, r0
   12e58:	mov	r1, #0
   12e5c:	mov	r0, r1
   12e60:	bl	11124 <error@plt>
   12e64:	ldr	r3, [pc, #128]	; 12eec <__assert_fail@plt+0x1c00>
   12e68:	ldrb	r3, [r3, #13]
   12e6c:	eor	r3, r3, #1
   12e70:	ldr	r2, [sp, #112]	; 0x70
   12e74:	orr	r3, r2, r3
   12e78:	tst	r3, #255	; 0xff
   12e7c:	beq	12ff8 <__assert_fail@plt+0x1d0c>
   12e80:	ldr	r3, [sp, #112]	; 0x70
   12e84:	cmp	r3, #0
   12e88:	moveq	r3, #0
   12e8c:	beq	12ff0 <__assert_fail@plt+0x1d04>
   12e90:	ldrd	r2, [sp, #88]	; 0x58
   12e94:	ldrd	r0, [sp, #96]	; 0x60
   12e98:	orr	r2, r2, r0
   12e9c:	orr	r3, r3, r1
   12ea0:	orrs	r3, r2, r3
   12ea4:	movne	r3, #0
   12ea8:	bne	12ff0 <__assert_fail@plt+0x1d04>
   12eac:	ldr	r3, [pc, #56]	; 12eec <__assert_fail@plt+0x1c00>
   12eb0:	ldrb	r3, [r3, #19]
   12eb4:	eor	r3, r3, #1
   12eb8:	ldrd	r0, [sp, #56]	; 0x38
   12ebc:	mov	r2, r0
   12ec0:	orrs	r2, r2, r1
   12ec4:	orreq	r3, r3, #1
   12ec8:	b	12ff0 <__assert_fail@plt+0x1d04>
   12ecc:			; <UNDEFINED> instruction: 0x00036fbc
   12ed0:	andeq	r7, r3, ip, rrx
   12ed4:	andeq	r7, r3, r8, lsl r1
   12ed8:	ldrdeq	r9, [r1], -ip
   12edc:	andeq	sl, r4, r4, lsr #3
   12ee0:	andeq	r6, r3, ip, lsr #11
   12ee4:	andeq	r7, r3, r0, lsr #3
   12ee8:	andeq	sl, r4, r8, lsr #2
   12eec:			; <UNDEFINED> instruction: 0x0004a1b0
   12ef0:	andeq	r0, r0, r6, lsl #2
   12ef4:	andeq	r0, r0, r3, lsl #2
   12ef8:	andeq	r0, r0, r5, lsl #2
   12efc:	andeq	sl, r4, ip, lsr r1
   12f00:	andeq	sl, r4, r8, lsr #3
   12f04:	andeq	r7, r3, r0, lsr r1
   12f08:	andeq	r7, r3, ip, lsr r1
   12f0c:	andeq	r7, r3, ip, asr #2
   12f10:	andeq	r7, r3, r0, ror #2
   12f14:	andeq	r7, r3, r0, lsl #3
   12f18:	muleq	r3, r0, r1
   12f1c:	andeq	sl, r4, r8, lsr r1
   12f20:	andeq	r7, r3, r8, rrx
   12f24:	andeq	r6, r3, r8, lsr #16
   12f28:	andeq	r7, r3, ip, lsr #3
   12f2c:	andeq	r7, r3, r0, ror #3
   12f30:	andeq	r7, r3, r4, asr #4
   12f34:	andeq	r7, r3, r8, lsl #4
   12f38:	andeq	r7, r3, r0, lsl #5
   12f3c:	andeq	r7, r3, r8, asr #5
   12f40:	andeq	r7, r3, r8, lsl #6
   12f44:	andeq	r7, r3, r8, asr #6
   12f48:	andeq	r7, r3, r8, lsl #7
   12f4c:	andeq	r6, r3, r4, lsr #16
   12f50:	andeq	r7, r3, ip, asr r1
   12f54:	ldrdeq	r7, [r3], -r8
   12f58:	andeq	r7, r3, r4, lsl r1
   12f5c:	andeq	r7, r3, r4, lsr #8
   12f60:	andeq	r7, r3, r8, lsr r4
   12f64:	strdeq	r7, [r3], -r4
   12f68:	andeq	r7, r3, r8, asr #8
   12f6c:	andeq	r7, r3, r0, asr #8
   12f70:	andeq	r7, r3, ip, asr #8
   12f74:	andeq	r4, pc, r0, asr #4
   12f78:	andeq	r7, r3, ip, lsl #9
   12f7c:			; <UNDEFINED> instruction: 0x000374bc
   12f80:	andeq	r7, r3, r8, ror #9
   12f84:	andeq	r7, r3, r8, lsl r5
   12f88:	andeq	r7, r3, r4, asr #10
   12f8c:	andeq	r7, r3, r4, ror r5
   12f90:	andeq	r7, r3, ip, asr r4
   12f94:	andeq	r7, r3, r4, lsr #11
   12f98:	andeq	r6, r3, r0, lsr #16
   12f9c:	andeq	r6, r3, ip, lsr #11
   12fa0:	muleq	r4, r0, r1
   12fa4:			; <UNDEFINED> instruction: 0x0004a1b0
   12fa8:	andeq	sl, r4, r0, lsr #3
   12fac:	andeq	r7, r3, r8, asr #7
   12fb0:	andeq	sl, r4, r8, lsr #2
   12fb4:	mov	r2, #5
   12fb8:	ldr	r1, [pc, #-48]	; 12f90 <__assert_fail@plt+0x1ca4>
   12fbc:	mov	r0, #0
   12fc0:	bl	110a0 <dcgettext@plt>
   12fc4:	mov	r4, r0
   12fc8:	ldr	r2, [sp, #84]	; 0x54
   12fcc:	mov	r1, #3
   12fd0:	mov	r0, #0
   12fd4:	bl	3420c <__assert_fail@plt+0x22f20>
   12fd8:	mov	r3, r0
   12fdc:	mov	r2, r4
   12fe0:	mov	r1, #0
   12fe4:	mov	r0, r1
   12fe8:	bl	11124 <error@plt>
   12fec:	mov	r3, #0
   12ff0:	and	r3, r3, #1
   12ff4:	b	12ca4 <__assert_fail@plt+0x19b8>
   12ff8:	mov	r2, #5
   12ffc:	ldr	r1, [pc, #-112]	; 12f94 <__assert_fail@plt+0x1ca8>
   13000:	mov	r0, #0
   13004:	bl	110a0 <dcgettext@plt>
   13008:	mov	r4, r0
   1300c:	ldr	r2, [sp, #84]	; 0x54
   13010:	mov	r1, #3
   13014:	mov	r0, #0
   13018:	bl	3420c <__assert_fail@plt+0x22f20>
   1301c:	mov	r3, r0
   13020:	mov	r2, r4
   13024:	mov	r1, #0
   13028:	mov	r0, r1
   1302c:	bl	11124 <error@plt>
   13030:	b	12e80 <__assert_fail@plt+0x1b94>
   13034:	add	r1, sp, #288	; 0x120
   13038:	mov	r3, #1
   1303c:	str	r3, [r1, #-152]!	; 0xffffff68
   13040:	add	r3, sp, #144	; 0x90
   13044:	str	r3, [sp]
   13048:	add	r3, sp, #132	; 0x84
   1304c:	add	r2, sp, #216	; 0xd8
   13050:	mov	r0, r4
   13054:	bl	118b0 <__assert_fail@plt+0x5c4>
   13058:	cmp	r0, #0
   1305c:	bne	1310c <__assert_fail@plt+0x1e20>
   13060:	str	r0, [sp, #64]	; 0x40
   13064:	ldr	r3, [sp, #80]	; 0x50
   13068:	ldr	r2, [sp, #40]	; 0x28
   1306c:	cmp	r3, r2
   13070:	bls	13164 <__assert_fail@plt+0x1e78>
   13074:	ldr	r3, [sp, #40]	; 0x28
   13078:	ldr	r4, [r3], #4
   1307c:	str	r3, [sp, #40]	; 0x28
   13080:	ldr	r3, [sp, #36]	; 0x24
   13084:	cmp	r3, #0
   13088:	beq	13034 <__assert_fail@plt+0x1d48>
   1308c:	ldr	r1, [pc, #-252]	; 12f98 <__assert_fail@plt+0x1cac>
   13090:	mov	r0, r4
   13094:	bl	11004 <strcmp@plt>
   13098:	subs	r3, r0, #0
   1309c:	str	r3, [sp, #72]	; 0x48
   130a0:	bne	12588 <__assert_fail@plt+0x129c>
   130a4:	mov	r2, #1
   130a8:	ldr	r3, [pc, #-268]	; 12fa4 <__assert_fail@plt+0x1cb8>
   130ac:	strb	r2, [r3, #12]
   130b0:	mov	r2, #5
   130b4:	ldr	r1, [pc, #-272]	; 12fac <__assert_fail@plt+0x1cc0>
   130b8:	bl	110a0 <dcgettext@plt>
   130bc:	str	r0, [sp, #84]	; 0x54
   130c0:	ldr	r3, [pc, #-288]	; 12fa8 <__assert_fail@plt+0x1cbc>
   130c4:	ldr	sl, [r3]
   130c8:	mov	r3, #0
   130cc:	str	r3, [sp, #124]	; 0x7c
   130d0:	str	r3, [sp, #128]	; 0x80
   130d4:	ldr	r3, [sp, #52]	; 0x34
   130d8:	str	r3, [sp, #112]	; 0x70
   130dc:	str	r3, [sp, #104]	; 0x68
   130e0:	mov	r2, #0
   130e4:	mov	r3, #0
   130e8:	strd	r2, [sp, #96]	; 0x60
   130ec:	strd	r2, [sp, #88]	; 0x58
   130f0:	strd	r2, [sp, #56]	; 0x38
   130f4:	mov	r2, #1
   130f8:	mov	r3, #0
   130fc:	strd	r2, [sp, #24]
   13100:	ldr	r8, [pc, #-356]	; 12fa4 <__assert_fail@plt+0x1cb8>
   13104:	ldr	fp, [pc, #-368]	; 12f9c <__assert_fail@plt+0x1cb0>
   13108:	b	13254 <__assert_fail@plt+0x1f68>
   1310c:	ldr	r0, [pc, #-356]	; 12fb0 <__assert_fail@plt+0x1cc4>
   13110:	ldr	r3, [r0]
   13114:	ldr	r1, [pc, #-384]	; 12f9c <__assert_fail@plt+0x1cb0>
   13118:	add	r1, r1, r3, lsl #2
   1311c:	ldrd	r2, [sp, #144]	; 0x90
   13120:	strd	r2, [sp, #8]
   13124:	ldr	r3, [pc, #-396]	; 12fa0 <__assert_fail@plt+0x1cb4>
   13128:	ldr	r3, [r3]
   1312c:	ldr	r2, [sp, #32]
   13130:	subs	r3, r3, r2
   13134:	movne	r3, #1
   13138:	str	r3, [sp, #4]
   1313c:	ldrb	r3, [r0, #4]
   13140:	str	r3, [sp]
   13144:	ldr	r5, [r1, #544]	; 0x220
   13148:	ldr	r3, [sp, #44]	; 0x2c
   1314c:	add	r2, sp, #216	; 0xd8
   13150:	ldr	r1, [sp, #136]	; 0x88
   13154:	mov	r0, r4
   13158:	blx	r5
   1315c:	ldr	r0, [sp, #64]	; 0x40
   13160:	b	13060 <__assert_fail@plt+0x1d74>
   13164:	ldr	r3, [pc, #-456]	; 12fa4 <__assert_fail@plt+0x1cb8>
   13168:	ldrb	r3, [r3, #12]
   1316c:	cmp	r3, #0
   13170:	bne	13188 <__assert_fail@plt+0x1e9c>
   13174:	ldr	r3, [sp, #64]	; 0x40
   13178:	eor	r0, r3, #1
   1317c:	uxtb	r0, r0
   13180:	add	sp, sp, #292	; 0x124
   13184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13188:	ldr	r3, [pc, #-488]	; 12fa8 <__assert_fail@plt+0x1cbc>
   1318c:	ldr	r0, [r3]
   13190:	bl	31a64 <__assert_fail@plt+0x20778>
   13194:	cmn	r0, #1
   13198:	bne	13174 <__assert_fail@plt+0x1e88>
   1319c:	bl	111c0 <__errno_location@plt>
   131a0:	ldr	r4, [r0]
   131a4:	mov	r2, #5
   131a8:	ldr	r1, [pc, #-516]	; 12fac <__assert_fail@plt+0x1cc0>
   131ac:	mov	r0, #0
   131b0:	bl	110a0 <dcgettext@plt>
   131b4:	mov	r2, r0
   131b8:	mov	r1, r4
   131bc:	mov	r0, #1
   131c0:	bl	11124 <error@plt>
   131c4:	mov	r6, #0
   131c8:	b	126a0 <__assert_fail@plt+0x13b4>
   131cc:	mov	r3, #40	; 0x28
   131d0:	ldr	r2, [sp, #116]	; 0x74
   131d4:	strb	r3, [r2]
   131d8:	add	r7, fp, r7, lsl #2
   131dc:	ldr	r2, [r7, #480]	; 0x1e0
   131e0:	asr	r3, r2, #31
   131e4:	strd	r2, [r8]
   131e8:	ldr	r3, [r8]
   131ec:	ldr	r2, [r8, #4]
   131f0:	lsr	r3, r3, #2
   131f4:	orr	r3, r3, r2, lsl #30
   131f8:	str	r3, [r8, #8]
   131fc:	ldrb	r3, [r9, r5]
   13200:	cmp	r3, #32
   13204:	addeq	r5, r5, #1
   13208:	ldrb	r3, [r9, r5]
   1320c:	cmp	r3, #40	; 0x28
   13210:	beq	12704 <__assert_fail@plt+0x1418>
   13214:	ldrd	r2, [sp, #56]	; 0x38
   13218:	adds	r2, r2, #1
   1321c:	adc	r3, r3, #0
   13220:	strd	r2, [sp, #56]	; 0x38
   13224:	ldrb	r3, [r8, #17]
   13228:	cmp	r3, #0
   1322c:	bne	12a3c <__assert_fail@plt+0x1750>
   13230:	ldr	r3, [sl]
   13234:	tst	r3, #48	; 0x30
   13238:	bne	12c40 <__assert_fail@plt+0x1954>
   1323c:	ldrd	r2, [sp, #24]
   13240:	adds	r2, r2, #1
   13244:	adc	r3, r3, #0
   13248:	strd	r2, [sp, #24]
   1324c:	orrs	r3, r2, r3
   13250:	beq	125d4 <__assert_fail@plt+0x12e8>
   13254:	mov	r3, sl
   13258:	mov	r2, #10
   1325c:	add	r1, sp, #128	; 0x80
   13260:	add	r0, sp, #124	; 0x7c
   13264:	bl	10ff8 <__getdelim@plt>
   13268:	subs	r4, r0, #0
   1326c:	ble	12c40 <__assert_fail@plt+0x1954>
   13270:	ldr	r3, [sp, #124]	; 0x7c
   13274:	ldrb	r2, [r3]
   13278:	cmp	r2, #35	; 0x23
   1327c:	beq	13230 <__assert_fail@plt+0x1f44>
   13280:	add	r2, r3, r4
   13284:	ldrb	r0, [r2, #-1]
   13288:	cmp	r0, #10
   1328c:	subeq	r4, r4, #1
   13290:	cmp	r4, #0
   13294:	movle	r2, r4
   13298:	subgt	r2, r4, #1
   1329c:	ldrb	r0, [r3, r2]
   132a0:	cmp	r0, #13
   132a4:	subeq	r4, r4, #1
   132a8:	cmp	r4, #0
   132ac:	beq	13230 <__assert_fail@plt+0x1f44>
   132b0:	mov	r2, #0
   132b4:	strb	r2, [r3, r4]
   132b8:	ldr	r9, [sp, #124]	; 0x7c
   132bc:	ldrb	r3, [r9]
   132c0:	cmp	r3, #9
   132c4:	cmpne	r3, #32
   132c8:	bne	1260c <__assert_fail@plt+0x1320>
   132cc:	mov	r2, r9
   132d0:	mov	r5, #0
   132d4:	add	r5, r5, #1
   132d8:	ldrb	r3, [r2, #1]!
   132dc:	cmp	r3, #9
   132e0:	cmpne	r3, #32
   132e4:	beq	132d4 <__assert_fail@plt+0x1fe8>
   132e8:	cmp	r3, #92	; 0x5c
   132ec:	addeq	r5, r5, #1
   132f0:	ldreq	r3, [sp, #36]	; 0x24
   132f4:	ldrne	r3, [sp, #52]	; 0x34
   132f8:	str	r3, [sp, #76]	; 0x4c
   132fc:	ldrb	r3, [r8, #14]
   13300:	cmp	r3, #0
   13304:	beq	12614 <__assert_fail@plt+0x1328>
   13308:	ldr	r3, [pc, #-864]	; 12fb0 <__assert_fail@plt+0x1cc4>
   1330c:	ldr	r7, [r3]
   13310:	ldr	r3, [fp, r7, lsl #2]
   13314:	str	r3, [sp, #48]	; 0x30
   13318:	mov	r0, r3
   1331c:	bl	111a8 <strlen@plt>
   13320:	add	r6, r9, r5
   13324:	str	r0, [sp, #68]	; 0x44
   13328:	mov	r2, r0
   1332c:	ldr	r1, [sp, #48]	; 0x30
   13330:	mov	r0, r6
   13334:	bl	112bc <strncmp@plt>
   13338:	cmp	r0, #0
   1333c:	bne	127e0 <__assert_fail@plt+0x14f4>
   13340:	ldr	r0, [sp, #68]	; 0x44
   13344:	add	r5, r5, r0
   13348:	add	r2, r9, r5
   1334c:	str	r2, [sp, #116]	; 0x74
   13350:	ldrb	r2, [r9, r5]
   13354:	str	r2, [sp, #68]	; 0x44
   13358:	mov	r3, #0
   1335c:	strb	r3, [r9, r5]
   13360:	ldr	r1, [sp, #48]	; 0x30
   13364:	mov	r0, r6
   13368:	bl	11004 <strcmp@plt>
   1336c:	cmp	r0, #0
   13370:	bne	13214 <__assert_fail@plt+0x1f28>
   13374:	ldr	r1, [sp, #68]	; 0x44
   13378:	cmp	r1, #40	; 0x28
   1337c:	beq	131cc <__assert_fail@plt+0x1ee0>
   13380:	add	r5, r5, #1
   13384:	add	r7, fp, r7, lsl #2
   13388:	ldr	r2, [r7, #480]	; 0x1e0
   1338c:	asr	r3, r2, #31
   13390:	strd	r2, [r8]
   13394:	cmp	r1, #45	; 0x2d
   13398:	bne	131e8 <__assert_fail@plt+0x1efc>
   1339c:	mov	r2, #0
   133a0:	str	r2, [sp]
   133a4:	add	r3, sp, #136	; 0x88
   133a8:	add	r1, sp, #132	; 0x84
   133ac:	add	r0, r9, r5
   133b0:	bl	3515c <__assert_fail@plt+0x23e70>
   133b4:	cmp	r0, #0
   133b8:	bne	13214 <__assert_fail@plt+0x1f28>
   133bc:	ldrd	r0, [sp, #136]	; 0x88
   133c0:	orrs	r3, r0, r1
   133c4:	beq	13214 <__assert_fail@plt+0x1f28>
   133c8:	ldrd	r2, [r8]
   133cc:	cmp	r1, r3
   133d0:	cmpeq	r0, r2
   133d4:	bhi	13214 <__assert_fail@plt+0x1f28>
   133d8:	and	r2, r0, #7
   133dc:	mov	r3, #0
   133e0:	orrs	r3, r2, r3
   133e4:	bne	13214 <__assert_fail@plt+0x1f28>
   133e8:	ldr	r5, [sp, #132]	; 0x84
   133ec:	sub	r5, r5, r9
   133f0:	strd	r0, [r8]
   133f4:	b	131e8 <__assert_fail@plt+0x1efc>
   133f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133fc:	sub	sp, sp, #404	; 0x194
   13400:	mov	ip, r0
   13404:	mov	r2, r1
   13408:	add	lr, sp, #272	; 0x110
   1340c:	add	r4, sp, #400	; 0x190
   13410:	add	r3, sp, #136	; 0x88
   13414:	ldr	r0, [r2]
   13418:	ldr	r1, [r2, #4]
   1341c:	stmia	r3!, {r0, r1}
   13420:	ldrd	r0, [sp, #136]	; 0x88
   13424:	strd	r0, [lr], #8
   13428:	add	r2, r2, #8
   1342c:	cmp	lr, r4
   13430:	bne	13410 <__assert_fail@plt+0x2124>
   13434:	sub	lr, ip, #8
   13438:	add	sl, sp, #144	; 0x90
   1343c:	add	r2, ip, #56	; 0x38
   13440:	mov	r3, sl
   13444:	mov	fp, lr
   13448:	ldrd	r0, [fp, #8]!
   1344c:	strd	r0, [r3], #8
   13450:	cmp	fp, r2
   13454:	bne	13448 <__assert_fail@plt+0x215c>
   13458:	ldrd	r6, [sp, #176]	; 0xb0
   1345c:	ldrd	r4, [sp, #144]	; 0x90
   13460:	adds	r4, r4, r6
   13464:	adc	r5, r5, r7
   13468:	add	r3, sp, #272	; 0x110
   1346c:	ldrd	r2, [r3]
   13470:	adds	r2, r2, r4
   13474:	adc	r3, r3, r5
   13478:	mov	r0, r2
   1347c:	mov	r1, r3
   13480:	add	r3, pc, #872	; 0x368
   13484:	ldrd	r2, [r3]
   13488:	strd	r0, [sp]
   1348c:	eor	r0, r0, r2
   13490:	eor	r1, r1, r3
   13494:	mov	r2, r0
   13498:	mov	r3, r1
   1349c:	ldrd	r0, [ip, #64]	; 0x40
   134a0:	eor	r2, r2, r0
   134a4:	eor	r3, r3, r1
   134a8:	mov	r0, r3
   134ac:	mov	r1, r2
   134b0:	add	r9, pc, #832	; 0x340
   134b4:	ldrd	r8, [r9]
   134b8:	adds	r8, r8, r3
   134bc:	adc	r9, r9, r2
   134c0:	eor	r6, r6, r8
   134c4:	eor	r7, r7, r9
   134c8:	lsr	r3, r6, #24
   134cc:	orr	r2, r3, r7, lsl #8
   134d0:	lsr	r7, r7, #24
   134d4:	orr	r3, r7, r6, lsl #8
   134d8:	add	r4, sp, #280	; 0x118
   134dc:	ldrd	r6, [r4]
   134e0:	ldrd	r4, [sp]
   134e4:	adds	r4, r4, r6
   134e8:	adc	r5, r5, r7
   134ec:	adds	r6, r4, r2
   134f0:	adc	r7, r5, r3
   134f4:	strd	r6, [sp, #48]	; 0x30
   134f8:	mov	r4, r6
   134fc:	mov	r5, r7
   13500:	eor	r4, r4, r0
   13504:	eor	r5, r5, r1
   13508:	mov	r0, r4
   1350c:	mov	r1, r5
   13510:	lsr	r4, r4, #16
   13514:	orr	r5, r4, r5, lsl #16
   13518:	str	r5, [sp]
   1351c:	lsr	r1, r1, #16
   13520:	orr	r1, r1, r0, lsl #16
   13524:	str	r1, [sp, #4]
   13528:	ldrd	r0, [sp]
   1352c:	adds	r0, r0, r8
   13530:	adc	r1, r1, r9
   13534:	mov	r4, r0
   13538:	mov	r5, r1
   1353c:	strd	r4, [sp, #72]	; 0x48
   13540:	eor	r4, r4, r2
   13544:	eor	r5, r5, r3
   13548:	lsl	r1, r5, #1
   1354c:	orr	r1, r1, r4, lsr #31
   13550:	str	r1, [sp, #60]	; 0x3c
   13554:	lsl	r2, r4, #1
   13558:	orr	r3, r2, r5, lsr #31
   1355c:	str	r3, [sp, #56]	; 0x38
   13560:	ldrd	r8, [sp, #184]	; 0xb8
   13564:	ldrd	r6, [sp, #152]	; 0x98
   13568:	adds	r6, r6, r8
   1356c:	adc	r7, r7, r9
   13570:	add	r3, sp, #288	; 0x120
   13574:	ldrd	r0, [r3]
   13578:	adds	r0, r0, r6
   1357c:	adc	r1, r1, r7
   13580:	mov	r6, r0
   13584:	mov	r7, r1
   13588:	add	r1, pc, #624	; 0x270
   1358c:	ldrd	r0, [r1]
   13590:	eor	r0, r0, r6
   13594:	eor	r1, r1, r7
   13598:	ldrd	r2, [ip, #72]	; 0x48
   1359c:	eor	r2, r2, r0
   135a0:	eor	r3, r3, r1
   135a4:	str	r3, [sp, #8]
   135a8:	str	r2, [sp, #12]
   135ac:	add	r5, pc, #596	; 0x254
   135b0:	ldrd	r4, [r5]
   135b4:	ldrd	r2, [sp, #8]
   135b8:	adds	r2, r2, r4
   135bc:	adc	r3, r3, r5
   135c0:	mov	r4, r2
   135c4:	mov	r5, r3
   135c8:	eor	r0, r8, r2
   135cc:	eor	r1, r9, r3
   135d0:	lsr	r8, r0, #24
   135d4:	orr	r2, r8, r1, lsl #8
   135d8:	lsr	r1, r1, #24
   135dc:	orr	r3, r1, r0, lsl #8
   135e0:	add	r1, sp, #296	; 0x128
   135e4:	ldrd	r8, [r1]
   135e8:	adds	r8, r8, r6
   135ec:	adc	r9, r9, r7
   135f0:	adds	r8, r8, r2
   135f4:	adc	r9, r9, r3
   135f8:	ldrd	r0, [sp, #8]
   135fc:	strd	r8, [sp, #64]	; 0x40
   13600:	eor	r0, r0, r8
   13604:	eor	r1, r1, r9
   13608:	lsr	r6, r0, #16
   1360c:	orr	r7, r6, r1, lsl #16
   13610:	str	r7, [sp, #8]
   13614:	lsr	r1, r1, #16
   13618:	orr	r1, r1, r0, lsl #16
   1361c:	str	r1, [sp, #12]
   13620:	ldrd	r8, [sp, #8]
   13624:	adds	r8, r8, r4
   13628:	adc	r9, r9, r5
   1362c:	strd	r8, [sp, #80]	; 0x50
   13630:	mov	r0, r8
   13634:	mov	r1, r9
   13638:	eor	r0, r0, r2
   1363c:	eor	r1, r1, r3
   13640:	mov	r3, r1
   13644:	lsl	r1, r1, #1
   13648:	orr	r1, r1, r0, lsr #31
   1364c:	str	r1, [sp, #20]
   13650:	lsl	r2, r0, #1
   13654:	orr	r3, r2, r3, lsr #31
   13658:	str	r3, [sp, #16]
   1365c:	ldrd	r8, [sp, #192]	; 0xc0
   13660:	ldrd	r6, [sp, #160]	; 0xa0
   13664:	adds	r6, r6, r8
   13668:	adc	r7, r7, r9
   1366c:	add	r3, sp, #304	; 0x130
   13670:	ldrd	r0, [r3]
   13674:	adds	r0, r0, r6
   13678:	adc	r1, r1, r7
   1367c:	mov	r6, r0
   13680:	mov	r7, r1
   13684:	add	r1, pc, #388	; 0x184
   13688:	ldrd	r0, [r1]
   1368c:	eor	r0, r0, r6
   13690:	eor	r1, r1, r7
   13694:	ldrd	r2, [ip, #80]	; 0x50
   13698:	eor	r2, r2, r0
   1369c:	eor	r3, r3, r1
   136a0:	str	r3, [sp, #24]
   136a4:	str	r2, [sp, #28]
   136a8:	add	r5, pc, #360	; 0x168
   136ac:	ldrd	r4, [r5]
   136b0:	ldrd	r2, [sp, #24]
   136b4:	adds	r2, r2, r4
   136b8:	adc	r3, r3, r5
   136bc:	mov	r4, r2
   136c0:	mov	r5, r3
   136c4:	eor	r0, r8, r2
   136c8:	eor	r1, r9, r3
   136cc:	lsr	r8, r0, #24
   136d0:	orr	r2, r8, r1, lsl #8
   136d4:	lsr	r1, r1, #24
   136d8:	orr	r3, r1, r0, lsl #8
   136dc:	add	r1, sp, #312	; 0x138
   136e0:	ldrd	r0, [r1]
   136e4:	adds	r0, r0, r6
   136e8:	adc	r1, r1, r7
   136ec:	adds	r0, r0, r2
   136f0:	adc	r1, r1, r3
   136f4:	mov	r6, r0
   136f8:	mov	r7, r1
   136fc:	ldrd	r0, [sp, #24]
   13700:	strd	r6, [sp, #88]	; 0x58
   13704:	eor	r0, r0, r6
   13708:	eor	r1, r1, r7
   1370c:	lsr	r6, r0, #16
   13710:	orr	r7, r6, r1, lsl #16
   13714:	str	r7, [sp, #24]
   13718:	lsr	r1, r1, #16
   1371c:	orr	r1, r1, r0, lsl #16
   13720:	str	r1, [sp, #28]
   13724:	ldrd	r8, [sp, #24]
   13728:	adds	r8, r8, r4
   1372c:	adc	r9, r9, r5
   13730:	eor	r2, r2, r8
   13734:	eor	r3, r3, r9
   13738:	lsl	r1, r3, #1
   1373c:	orr	r1, r1, r2, lsr #31
   13740:	str	r1, [sp, #36]	; 0x24
   13744:	lsl	r2, r2, #1
   13748:	orr	r3, r2, r3, lsr #31
   1374c:	str	r3, [sp, #32]
   13750:	ldrd	r6, [sp, #200]	; 0xc8
   13754:	ldrd	r0, [sp, #168]	; 0xa8
   13758:	adds	r0, r0, r6
   1375c:	adc	r1, r1, r7
   13760:	add	r3, sp, #320	; 0x140
   13764:	ldrd	r2, [r3]
   13768:	adds	r2, r2, r0
   1376c:	adc	r3, r3, r1
   13770:	mov	r0, r2
   13774:	mov	r1, r3
   13778:	add	r3, pc, #160	; 0xa0
   1377c:	ldrd	r2, [r3]
   13780:	eor	r2, r2, r0
   13784:	eor	r3, r3, r1
   13788:	ldrd	r4, [ip, #88]	; 0x58
   1378c:	eor	r2, r2, r4
   13790:	eor	r3, r3, r5
   13794:	str	r3, [sp, #40]	; 0x28
   13798:	str	r2, [sp, #44]	; 0x2c
   1379c:	add	r5, pc, #132	; 0x84
   137a0:	ldrd	r4, [r5]
   137a4:	ldrd	r2, [sp, #40]	; 0x28
   137a8:	adds	r2, r2, r4
   137ac:	adc	r3, r3, r5
   137b0:	mov	r4, r2
   137b4:	mov	r5, r3
   137b8:	eor	r6, r6, r2
   137bc:	eor	r7, r7, r3
   137c0:	lsr	ip, r6, #24
   137c4:	orr	r2, ip, r7, lsl #8
   137c8:	lsr	ip, r7, #24
   137cc:	orr	r3, ip, r6, lsl #8
   137d0:	add	ip, sp, #328	; 0x148
   137d4:	ldrd	r6, [ip]
   137d8:	adds	r6, r6, r0
   137dc:	adc	r7, r7, r1
   137e0:	adds	r6, r6, r2
   137e4:	adc	r7, r7, r3
   137e8:	ldrd	r0, [sp, #40]	; 0x28
   137ec:	b	13830 <__assert_fail@plt+0x2544>
   137f0:	sfmge	f0, 3, [r6, #836]!	; 0x344
   137f4:	tstpl	lr, pc, ror r2
   137f8:	vtbl.8	d12, {d12-d13}, d8
   137fc:	bvs	28d1a0 <optarg@@GLIBC_2.4+0x242ff8>
   13800:	blcs	fae884 <optarg@@GLIBC_2.4+0xf646dc>
   13804:	blls	16da3c <optarg@@GLIBC_2.4+0x123894>
   13808:	strbhi	sl, [sl], #1851	; 0x73b
   1380c:	bllt	19ff228 <optarg@@GLIBC_2.4+0x19b5080>
   13810:	blx	1082dc6 <optarg@@GLIBC_2.4+0x1038c1e>
   13814:	svcne	0x0083d9ab
   13818:	vcmla.f32	d15, d4, d27[0], #90
   1381c:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   13820:	cmnne	lr, #1073741854	; 0x4000001e
   13824:	blpl	ff846c90 <optarg@@GLIBC_2.4+0xff7fcae8>
   13828:	svcpl	0x001d36f1
   1382c:	strbge	pc, [pc, #-1338]	; 132fa <__assert_fail@plt+0x200e>	; <UNPREDICTABLE>
   13830:	strd	r6, [sp, #96]	; 0x60
   13834:	eor	r0, r0, r6
   13838:	eor	r1, r1, r7
   1383c:	lsr	ip, r0, #16
   13840:	orr	r6, ip, r1, lsl #16
   13844:	lsr	r1, r1, #16
   13848:	orr	r7, r1, r0, lsl #16
   1384c:	adds	r4, r4, r6
   13850:	adc	r5, r5, r7
   13854:	eor	r2, r2, r4
   13858:	eor	r3, r3, r5
   1385c:	lsl	ip, r3, #1
   13860:	orr	r1, ip, r2, lsr #31
   13864:	str	r1, [sp, #44]	; 0x2c
   13868:	lsl	r2, r2, #1
   1386c:	orr	r3, r2, r3, lsr #31
   13870:	str	r3, [sp, #40]	; 0x28
   13874:	add	r3, sp, #336	; 0x150
   13878:	ldrd	r0, [r3]
   1387c:	ldrd	r2, [sp, #48]	; 0x30
   13880:	adds	r0, r0, r2
   13884:	adc	r1, r1, r3
   13888:	ldrd	r2, [sp, #16]
   1388c:	adds	r2, r2, r0
   13890:	adc	r3, r3, r1
   13894:	mov	r0, r2
   13898:	mov	r1, r3
   1389c:	eor	r6, r6, r2
   138a0:	eor	r7, r7, r3
   138a4:	str	r7, [sp, #48]	; 0x30
   138a8:	str	r6, [sp, #52]	; 0x34
   138ac:	ldrd	r6, [sp, #48]	; 0x30
   138b0:	adds	r6, r6, r8
   138b4:	adc	r7, r7, r9
   138b8:	mov	r8, r6
   138bc:	mov	r9, r7
   138c0:	ldrd	r6, [sp, #16]
   138c4:	eor	r6, r6, r8
   138c8:	eor	r7, r7, r9
   138cc:	lsr	ip, r6, #24
   138d0:	orr	r2, ip, r7, lsl #8
   138d4:	lsr	ip, r7, #24
   138d8:	orr	r3, ip, r6, lsl #8
   138dc:	add	ip, sp, #344	; 0x158
   138e0:	ldrd	r6, [ip]
   138e4:	adds	r6, r6, r0
   138e8:	adc	r7, r7, r1
   138ec:	adds	r6, r6, r2
   138f0:	adc	r7, r7, r3
   138f4:	mov	r0, r6
   138f8:	mov	r1, r7
   138fc:	ldrd	r6, [sp, #48]	; 0x30
   13900:	strd	r0, [sp, #104]	; 0x68
   13904:	eor	r6, r6, r0
   13908:	eor	r7, r7, r1
   1390c:	lsr	ip, r6, #16
   13910:	orr	ip, ip, r7, lsl #16
   13914:	str	ip, [sp, #16]
   13918:	lsr	r1, r7, #16
   1391c:	orr	r1, r1, r6, lsl #16
   13920:	str	r1, [sp, #20]
   13924:	ldrd	r6, [sp, #16]
   13928:	adds	r6, r6, r8
   1392c:	adc	r7, r7, r9
   13930:	strd	r6, [sp, #112]	; 0x70
   13934:	mov	r8, r6
   13938:	mov	r9, r7
   1393c:	eor	r8, r8, r2
   13940:	eor	r9, r9, r3
   13944:	lsl	r1, r9, #1
   13948:	orr	r1, r1, r8, lsr #31
   1394c:	str	r1, [sp, #52]	; 0x34
   13950:	lsl	r2, r8, #1
   13954:	orr	r3, r2, r9, lsr #31
   13958:	str	r3, [sp, #48]	; 0x30
   1395c:	add	r3, sp, #352	; 0x160
   13960:	ldrd	r0, [r3]
   13964:	ldrd	r8, [sp, #64]	; 0x40
   13968:	adds	r0, r0, r8
   1396c:	adc	r1, r1, r9
   13970:	ldrd	r8, [sp, #32]
   13974:	adds	r8, r8, r0
   13978:	adc	r9, r9, r1
   1397c:	mov	r0, r8
   13980:	mov	r1, r9
   13984:	ldrd	r2, [sp]
   13988:	eor	r2, r2, r8
   1398c:	eor	r3, r3, r9
   13990:	mov	r8, r3
   13994:	mov	r9, r2
   13998:	adds	r6, r4, r3
   1399c:	adc	r7, r5, r2
   139a0:	ldrd	r4, [sp, #32]
   139a4:	eor	r4, r4, r6
   139a8:	eor	r5, r5, r7
   139ac:	lsr	ip, r4, #24
   139b0:	orr	r2, ip, r5, lsl #8
   139b4:	lsr	ip, r5, #24
   139b8:	orr	r3, ip, r4, lsl #8
   139bc:	add	ip, sp, #360	; 0x168
   139c0:	ldrd	r4, [ip]
   139c4:	adds	r4, r4, r0
   139c8:	adc	r5, r5, r1
   139cc:	adds	r4, r4, r2
   139d0:	adc	r5, r5, r3
   139d4:	mov	r0, r4
   139d8:	mov	r1, r5
   139dc:	strd	r0, [sp, #120]	; 0x78
   139e0:	eor	r0, r0, r8
   139e4:	eor	r1, r1, r9
   139e8:	mov	r9, r1
   139ec:	lsr	ip, r0, #16
   139f0:	orr	r1, ip, r1, lsl #16
   139f4:	str	r1, [sp]
   139f8:	lsr	r1, r9, #16
   139fc:	orr	r1, r1, r0, lsl #16
   13a00:	str	r1, [sp, #4]
   13a04:	ldrd	r0, [sp]
   13a08:	adds	r0, r0, r6
   13a0c:	adc	r1, r1, r7
   13a10:	strd	r0, [sp, #128]	; 0x80
   13a14:	mov	r8, r0
   13a18:	mov	r9, r1
   13a1c:	eor	r8, r8, r2
   13a20:	eor	r9, r9, r3
   13a24:	lsl	r1, r9, #1
   13a28:	orr	r1, r1, r8, lsr #31
   13a2c:	str	r1, [sp, #68]	; 0x44
   13a30:	lsl	r2, r8, #1
   13a34:	orr	r3, r2, r9, lsr #31
   13a38:	str	r3, [sp, #64]	; 0x40
   13a3c:	add	r3, sp, #368	; 0x170
   13a40:	ldrd	r2, [r3]
   13a44:	ldrd	r4, [sp, #88]	; 0x58
   13a48:	adds	r2, r2, r4
   13a4c:	adc	r3, r3, r5
   13a50:	ldrd	r4, [sp, #40]	; 0x28
   13a54:	adds	r4, r4, r2
   13a58:	adc	r5, r5, r3
   13a5c:	mov	r0, r4
   13a60:	mov	r1, r5
   13a64:	ldrd	r2, [sp, #8]
   13a68:	eor	r2, r2, r4
   13a6c:	eor	r3, r3, r5
   13a70:	mov	r8, r3
   13a74:	mov	r9, r2
   13a78:	ldrd	r6, [sp, #72]	; 0x48
   13a7c:	adds	r6, r6, r3
   13a80:	adc	r7, r7, r2
   13a84:	ldrd	r4, [sp, #40]	; 0x28
   13a88:	eor	r4, r4, r6
   13a8c:	eor	r5, r5, r7
   13a90:	lsr	ip, r4, #24
   13a94:	orr	r2, ip, r5, lsl #8
   13a98:	lsr	ip, r5, #24
   13a9c:	orr	r3, ip, r4, lsl #8
   13aa0:	add	ip, sp, #376	; 0x178
   13aa4:	ldrd	r4, [ip]
   13aa8:	adds	r4, r4, r0
   13aac:	adc	r5, r5, r1
   13ab0:	adds	r4, r4, r2
   13ab4:	adc	r5, r5, r3
   13ab8:	strd	r4, [sp, #72]	; 0x48
   13abc:	eor	r4, r4, r8
   13ac0:	eor	r5, r5, r9
   13ac4:	lsr	ip, r4, #16
   13ac8:	orr	r1, ip, r5, lsl #16
   13acc:	str	r1, [sp, #8]
   13ad0:	lsr	r1, r5, #16
   13ad4:	orr	r1, r1, r4, lsl #16
   13ad8:	str	r1, [sp, #12]
   13adc:	ldrd	r4, [sp, #8]
   13ae0:	adds	r4, r4, r6
   13ae4:	adc	r5, r5, r7
   13ae8:	mov	r8, r4
   13aec:	mov	r9, r5
   13af0:	eor	r2, r2, r4
   13af4:	eor	r3, r3, r5
   13af8:	lsl	r1, r3, #1
   13afc:	orr	r1, r1, r2, lsr #31
   13b00:	str	r1, [sp, #36]	; 0x24
   13b04:	lsl	r2, r2, #1
   13b08:	orr	r3, r2, r3, lsr #31
   13b0c:	str	r3, [sp, #32]
   13b10:	add	r3, sp, #384	; 0x180
   13b14:	ldrd	r4, [r3]
   13b18:	ldrd	r6, [sp, #96]	; 0x60
   13b1c:	adds	r4, r4, r6
   13b20:	adc	r5, r5, r7
   13b24:	mov	r0, r4
   13b28:	mov	r1, r5
   13b2c:	ldrd	r6, [sp, #56]	; 0x38
   13b30:	adds	r4, r6, r0
   13b34:	adc	r5, r7, r1
   13b38:	mov	r0, r4
   13b3c:	mov	r1, r5
   13b40:	ldrd	r2, [sp, #24]
   13b44:	eor	r2, r2, r4
   13b48:	eor	r3, r3, r5
   13b4c:	str	r3, [sp, #24]
   13b50:	str	r2, [sp, #28]
   13b54:	ldrd	r4, [sp, #80]	; 0x50
   13b58:	ldrd	r2, [sp, #24]
   13b5c:	adds	r4, r4, r2
   13b60:	adc	r5, r5, r3
   13b64:	mov	r2, r6
   13b68:	mov	r3, r7
   13b6c:	eor	r2, r2, r4
   13b70:	eor	r3, r3, r5
   13b74:	mov	r6, r2
   13b78:	lsr	ip, r2, #24
   13b7c:	orr	r2, ip, r3, lsl #8
   13b80:	lsr	ip, r3, #24
   13b84:	orr	r3, ip, r6, lsl #8
   13b88:	add	ip, sp, #392	; 0x188
   13b8c:	ldrd	r6, [ip]
   13b90:	adds	r6, r6, r0
   13b94:	adc	r7, r7, r1
   13b98:	adds	r6, r6, r2
   13b9c:	adc	r7, r7, r3
   13ba0:	ldrd	r0, [sp, #24]
   13ba4:	strd	r6, [sp, #80]	; 0x50
   13ba8:	eor	r0, r0, r6
   13bac:	eor	r1, r1, r7
   13bb0:	lsr	ip, r0, #16
   13bb4:	orr	ip, ip, r1, lsl #16
   13bb8:	str	ip, [sp, #24]
   13bbc:	lsr	r1, r1, #16
   13bc0:	orr	r1, r1, r0, lsl #16
   13bc4:	str	r1, [sp, #28]
   13bc8:	ldrd	r0, [sp, #24]
   13bcc:	adds	r0, r0, r4
   13bd0:	adc	r1, r1, r5
   13bd4:	mov	r6, r0
   13bd8:	mov	r7, r1
   13bdc:	eor	r2, r2, r0
   13be0:	eor	r3, r3, r1
   13be4:	lsl	r1, r3, #1
   13be8:	orr	r5, r1, r2, lsr #31
   13bec:	lsl	r2, r2, #1
   13bf0:	orr	r4, r2, r3, lsr #31
   13bf4:	add	r3, sp, #384	; 0x180
   13bf8:	ldrd	r0, [r3]
   13bfc:	ldrd	r2, [sp, #104]	; 0x68
   13c00:	adds	r0, r0, r2
   13c04:	adc	r1, r1, r3
   13c08:	adds	r0, r0, r4
   13c0c:	adc	r1, r1, r5
   13c10:	ldrd	r2, [sp]
   13c14:	eor	r2, r2, r0
   13c18:	eor	r3, r3, r1
   13c1c:	strd	r2, [sp, #40]	; 0x28
   13c20:	ldrd	r2, [sp, #40]	; 0x28
   13c24:	str	r3, [sp]
   13c28:	str	r2, [sp, #4]
   13c2c:	ldrd	r2, [sp]
   13c30:	adds	r2, r2, r8
   13c34:	adc	r3, r3, r9
   13c38:	mov	r8, r2
   13c3c:	mov	r9, r3
   13c40:	eor	r4, r4, r2
   13c44:	eor	r5, r5, r3
   13c48:	lsr	ip, r4, #24
   13c4c:	orr	r2, ip, r5, lsl #8
   13c50:	lsr	ip, r5, #24
   13c54:	orr	r3, ip, r4, lsl #8
   13c58:	add	ip, sp, #352	; 0x160
   13c5c:	ldrd	r4, [ip]
   13c60:	adds	r4, r4, r0
   13c64:	adc	r5, r5, r1
   13c68:	adds	r4, r4, r2
   13c6c:	adc	r5, r5, r3
   13c70:	ldrd	r0, [sp]
   13c74:	strd	r4, [sp, #88]	; 0x58
   13c78:	eor	r0, r0, r4
   13c7c:	eor	r1, r1, r5
   13c80:	lsr	ip, r0, #16
   13c84:	orr	ip, ip, r1, lsl #16
   13c88:	str	ip, [sp]
   13c8c:	lsr	r1, r1, #16
   13c90:	orr	r1, r1, r0, lsl #16
   13c94:	str	r1, [sp, #4]
   13c98:	ldrd	r0, [sp]
   13c9c:	adds	r0, r0, r8
   13ca0:	adc	r1, r1, r9
   13ca4:	mov	r4, r0
   13ca8:	mov	r5, r1
   13cac:	strd	r4, [sp, #96]	; 0x60
   13cb0:	eor	r4, r4, r2
   13cb4:	eor	r5, r5, r3
   13cb8:	lsl	r1, r5, #1
   13cbc:	orr	r1, r1, r4, lsr #31
   13cc0:	str	r1, [sp, #60]	; 0x3c
   13cc4:	lsl	r2, r4, #1
   13cc8:	orr	r3, r2, r5, lsr #31
   13ccc:	str	r3, [sp, #56]	; 0x38
   13cd0:	add	r3, sp, #304	; 0x130
   13cd4:	ldrd	r0, [r3]
   13cd8:	ldrd	r8, [sp, #120]	; 0x78
   13cdc:	adds	r0, r0, r8
   13ce0:	adc	r1, r1, r9
   13ce4:	ldrd	r4, [sp, #48]	; 0x30
   13ce8:	adds	r8, r4, r0
   13cec:	adc	r9, r5, r1
   13cf0:	mov	r0, r8
   13cf4:	mov	r1, r9
   13cf8:	ldrd	r2, [sp, #8]
   13cfc:	eor	r2, r2, r8
   13d00:	eor	r3, r3, r9
   13d04:	mov	r8, r3
   13d08:	mov	r9, r2
   13d0c:	adds	r6, r6, r3
   13d10:	adc	r7, r7, r2
   13d14:	eor	r4, r4, r6
   13d18:	eor	r5, r5, r7
   13d1c:	lsr	ip, r4, #24
   13d20:	orr	r2, ip, r5, lsl #8
   13d24:	lsr	ip, r5, #24
   13d28:	orr	r3, ip, r4, lsl #8
   13d2c:	add	ip, sp, #336	; 0x150
   13d30:	ldrd	r4, [ip]
   13d34:	adds	r4, r4, r0
   13d38:	adc	r5, r5, r1
   13d3c:	adds	r4, r4, r2
   13d40:	adc	r5, r5, r3
   13d44:	mov	r0, r4
   13d48:	mov	r1, r5
   13d4c:	strd	r0, [sp, #104]	; 0x68
   13d50:	eor	r0, r0, r8
   13d54:	eor	r1, r1, r9
   13d58:	mov	r9, r1
   13d5c:	lsr	ip, r0, #16
   13d60:	orr	r1, ip, r1, lsl #16
   13d64:	str	r1, [sp, #8]
   13d68:	lsr	r1, r9, #16
   13d6c:	orr	r1, r1, r0, lsl #16
   13d70:	str	r1, [sp, #12]
   13d74:	ldrd	r0, [sp, #8]
   13d78:	adds	r0, r0, r6
   13d7c:	adc	r1, r1, r7
   13d80:	strd	r0, [sp, #120]	; 0x78
   13d84:	mov	r4, r0
   13d88:	mov	r5, r1
   13d8c:	eor	r4, r4, r2
   13d90:	eor	r5, r5, r3
   13d94:	lsl	r1, r5, #1
   13d98:	orr	r1, r1, r4, lsr #31
   13d9c:	str	r1, [sp, #44]	; 0x2c
   13da0:	lsl	r2, r4, #1
   13da4:	orr	r3, r2, r5, lsr #31
   13da8:	str	r3, [sp, #40]	; 0x28
   13dac:	add	r3, sp, #344	; 0x158
   13db0:	ldrd	r0, [r3]
   13db4:	ldrd	r8, [sp, #72]	; 0x48
   13db8:	adds	r0, r0, r8
   13dbc:	adc	r1, r1, r9
   13dc0:	ldrd	r4, [sp, #64]	; 0x40
   13dc4:	adds	r8, r4, r0
   13dc8:	adc	r9, r5, r1
   13dcc:	mov	r0, r8
   13dd0:	mov	r1, r9
   13dd4:	ldrd	r2, [sp, #24]
   13dd8:	eor	r2, r2, r8
   13ddc:	eor	r3, r3, r9
   13de0:	mov	r8, r3
   13de4:	mov	r9, r2
   13de8:	ldrd	r6, [sp, #112]	; 0x70
   13dec:	adds	r6, r6, r3
   13df0:	adc	r7, r7, r2
   13df4:	eor	r4, r4, r6
   13df8:	eor	r5, r5, r7
   13dfc:	lsr	ip, r4, #24
   13e00:	orr	r2, ip, r5, lsl #8
   13e04:	lsr	ip, r5, #24
   13e08:	orr	r3, ip, r4, lsl #8
   13e0c:	add	ip, sp, #392	; 0x188
   13e10:	ldrd	r4, [ip]
   13e14:	adds	r4, r4, r0
   13e18:	adc	r5, r5, r1
   13e1c:	adds	r4, r4, r2
   13e20:	adc	r5, r5, r3
   13e24:	strd	r4, [sp, #64]	; 0x40
   13e28:	mov	r0, r4
   13e2c:	mov	r1, r5
   13e30:	eor	r0, r0, r8
   13e34:	eor	r1, r1, r9
   13e38:	mov	r9, r1
   13e3c:	lsr	ip, r0, #16
   13e40:	orr	r1, ip, r1, lsl #16
   13e44:	str	r1, [sp, #24]
   13e48:	lsr	r1, r9, #16
   13e4c:	orr	r1, r1, r0, lsl #16
   13e50:	str	r1, [sp, #28]
   13e54:	ldrd	r8, [sp, #24]
   13e58:	adds	r8, r8, r6
   13e5c:	adc	r9, r9, r7
   13e60:	mov	r0, r8
   13e64:	mov	r1, r9
   13e68:	strd	r0, [sp, #72]	; 0x48
   13e6c:	eor	r0, r0, r2
   13e70:	eor	r1, r1, r3
   13e74:	mov	r3, r1
   13e78:	lsl	r1, r1, #1
   13e7c:	orr	r1, r1, r0, lsr #31
   13e80:	str	r1, [sp, #52]	; 0x34
   13e84:	lsl	r2, r0, #1
   13e88:	orr	r3, r2, r3, lsr #31
   13e8c:	str	r3, [sp, #48]	; 0x30
   13e90:	add	r3, sp, #376	; 0x178
   13e94:	ldrd	r0, [r3]
   13e98:	ldrd	r6, [sp, #80]	; 0x50
   13e9c:	adds	r0, r0, r6
   13ea0:	adc	r1, r1, r7
   13ea4:	ldrd	r4, [sp, #32]
   13ea8:	adds	r4, r4, r0
   13eac:	adc	r5, r5, r1
   13eb0:	mov	r0, r4
   13eb4:	mov	r1, r5
   13eb8:	ldrd	r2, [sp, #16]
   13ebc:	eor	r2, r2, r4
   13ec0:	eor	r3, r3, r5
   13ec4:	mov	r8, r3
   13ec8:	mov	r9, r2
   13ecc:	ldrd	r6, [sp, #128]	; 0x80
   13ed0:	adds	r6, r6, r8
   13ed4:	adc	r7, r7, r9
   13ed8:	ldrd	r4, [sp, #32]
   13edc:	eor	r4, r4, r6
   13ee0:	eor	r5, r5, r7
   13ee4:	lsr	ip, r4, #24
   13ee8:	orr	r2, ip, r5, lsl #8
   13eec:	lsr	ip, r5, #24
   13ef0:	orr	r3, ip, r4, lsl #8
   13ef4:	add	ip, sp, #320	; 0x140
   13ef8:	ldrd	r4, [ip]
   13efc:	adds	r4, r4, r0
   13f00:	adc	r5, r5, r1
   13f04:	adds	r4, r4, r2
   13f08:	adc	r5, r5, r3
   13f0c:	mov	r0, r8
   13f10:	mov	r1, r9
   13f14:	strd	r4, [sp, #80]	; 0x50
   13f18:	eor	r0, r0, r4
   13f1c:	eor	r1, r1, r5
   13f20:	lsr	ip, r0, #16
   13f24:	orr	r4, ip, r1, lsl #16
   13f28:	lsr	r1, r1, #16
   13f2c:	orr	r5, r1, r0, lsl #16
   13f30:	adds	r6, r6, r4
   13f34:	adc	r7, r7, r5
   13f38:	eor	r2, r2, r6
   13f3c:	eor	r3, r3, r7
   13f40:	lsl	r1, r3, #1
   13f44:	orr	r1, r1, r2, lsr #31
   13f48:	str	r1, [sp, #20]
   13f4c:	lsl	r2, r2, #1
   13f50:	orr	r3, r2, r3, lsr #31
   13f54:	str	r3, [sp, #16]
   13f58:	add	r3, sp, #280	; 0x118
   13f5c:	ldrd	r0, [r3]
   13f60:	ldrd	r2, [sp, #88]	; 0x58
   13f64:	adds	r0, r0, r2
   13f68:	adc	r1, r1, r3
   13f6c:	ldrd	r2, [sp, #40]	; 0x28
   13f70:	adds	r2, r2, r0
   13f74:	adc	r3, r3, r1
   13f78:	mov	r0, r2
   13f7c:	mov	r1, r3
   13f80:	eor	r4, r4, r2
   13f84:	eor	r5, r5, r3
   13f88:	str	r5, [sp, #32]
   13f8c:	str	r4, [sp, #36]	; 0x24
   13f90:	ldrd	r2, [sp, #32]
   13f94:	ldrd	r4, [sp, #72]	; 0x48
   13f98:	adds	r4, r4, r2
   13f9c:	adc	r5, r5, r3
   13fa0:	mov	r2, r4
   13fa4:	mov	r3, r5
   13fa8:	mov	r8, r4
   13fac:	mov	r9, r5
   13fb0:	ldrd	r4, [sp, #40]	; 0x28
   13fb4:	eor	r4, r4, r2
   13fb8:	eor	r5, r5, r3
   13fbc:	lsr	ip, r4, #24
   13fc0:	orr	r2, ip, r5, lsl #8
   13fc4:	lsr	ip, r5, #24
   13fc8:	orr	r3, ip, r4, lsl #8
   13fcc:	add	ip, sp, #368	; 0x170
   13fd0:	ldrd	r4, [ip]
   13fd4:	adds	r4, r4, r0
   13fd8:	adc	r5, r5, r1
   13fdc:	adds	r4, r4, r2
   13fe0:	adc	r5, r5, r3
   13fe4:	ldrd	r0, [sp, #32]
   13fe8:	strd	r4, [sp, #72]	; 0x48
   13fec:	eor	r0, r0, r4
   13ff0:	eor	r1, r1, r5
   13ff4:	lsr	ip, r0, #16
   13ff8:	orr	ip, ip, r1, lsl #16
   13ffc:	str	ip, [sp, #32]
   14000:	lsr	r1, r1, #16
   14004:	orr	r1, r1, r0, lsl #16
   14008:	str	r1, [sp, #36]	; 0x24
   1400c:	ldrd	r0, [sp, #32]
   14010:	adds	r0, r0, r8
   14014:	adc	r1, r1, r9
   14018:	mov	r8, r0
   1401c:	mov	r9, r1
   14020:	strd	r8, [sp, #88]	; 0x58
   14024:	eor	r8, r8, r2
   14028:	eor	r9, r9, r3
   1402c:	lsl	r1, r9, #1
   14030:	orr	r1, r1, r8, lsr #31
   14034:	str	r1, [sp, #44]	; 0x2c
   14038:	lsl	r2, r8, #1
   1403c:	orr	r3, r2, r9, lsr #31
   14040:	str	r3, [sp, #40]	; 0x28
   14044:	add	r3, sp, #272	; 0x110
   14048:	ldrd	r8, [r3]
   1404c:	ldrd	r4, [sp, #104]	; 0x68
   14050:	adds	r8, r8, r4
   14054:	adc	r9, r9, r5
   14058:	ldrd	r4, [sp, #48]	; 0x30
   1405c:	adds	r4, r4, r8
   14060:	adc	r5, r5, r9
   14064:	mov	r0, r4
   14068:	mov	r1, r5
   1406c:	ldrd	r2, [sp]
   14070:	eor	r2, r2, r4
   14074:	eor	r3, r3, r5
   14078:	mov	r8, r3
   1407c:	mov	r9, r2
   14080:	adds	r6, r6, r3
   14084:	adc	r7, r7, r2
   14088:	ldrd	r4, [sp, #48]	; 0x30
   1408c:	eor	r4, r4, r6
   14090:	eor	r5, r5, r7
   14094:	lsr	ip, r4, #24
   14098:	orr	r2, ip, r5, lsl #8
   1409c:	lsr	ip, r5, #24
   140a0:	orr	r3, ip, r4, lsl #8
   140a4:	add	ip, sp, #288	; 0x120
   140a8:	ldrd	r4, [ip]
   140ac:	adds	r4, r4, r0
   140b0:	adc	r5, r5, r1
   140b4:	adds	r4, r4, r2
   140b8:	adc	r5, r5, r3
   140bc:	mov	r0, r4
   140c0:	mov	r1, r5
   140c4:	strd	r0, [sp, #104]	; 0x68
   140c8:	eor	r0, r0, r8
   140cc:	eor	r1, r1, r9
   140d0:	mov	r9, r1
   140d4:	lsr	ip, r0, #16
   140d8:	orr	r1, ip, r1, lsl #16
   140dc:	str	r1, [sp]
   140e0:	lsr	r1, r9, #16
   140e4:	orr	r1, r1, r0, lsl #16
   140e8:	str	r1, [sp, #4]
   140ec:	ldrd	r0, [sp]
   140f0:	adds	r0, r0, r6
   140f4:	adc	r1, r1, r7
   140f8:	mov	r8, r0
   140fc:	mov	r9, r1
   14100:	strd	r8, [sp, #112]	; 0x70
   14104:	eor	r8, r8, r2
   14108:	eor	r9, r9, r3
   1410c:	lsl	r1, r9, #1
   14110:	orr	r1, r1, r8, lsr #31
   14114:	str	r1, [sp, #52]	; 0x34
   14118:	lsl	r2, r8, #1
   1411c:	orr	r3, r2, r9, lsr #31
   14120:	str	r3, [sp, #48]	; 0x30
   14124:	add	r3, sp, #360	; 0x168
   14128:	ldrd	r6, [r3]
   1412c:	ldrd	r4, [sp, #64]	; 0x40
   14130:	adds	r6, r6, r4
   14134:	adc	r7, r7, r5
   14138:	ldrd	r4, [sp, #16]
   1413c:	adds	r4, r4, r6
   14140:	adc	r5, r5, r7
   14144:	mov	r0, r4
   14148:	mov	r1, r5
   1414c:	ldrd	r2, [sp, #8]
   14150:	eor	r2, r2, r4
   14154:	eor	r3, r3, r5
   14158:	mov	r8, r3
   1415c:	mov	r9, r2
   14160:	ldrd	r6, [sp, #96]	; 0x60
   14164:	adds	r6, r6, r3
   14168:	adc	r7, r7, r2
   1416c:	ldrd	r4, [sp, #16]
   14170:	eor	r4, r4, r6
   14174:	eor	r5, r5, r7
   14178:	lsr	ip, r4, #24
   1417c:	orr	r2, ip, r5, lsl #8
   14180:	lsr	ip, r5, #24
   14184:	orr	r3, ip, r4, lsl #8
   14188:	add	ip, sp, #328	; 0x148
   1418c:	ldrd	r4, [ip]
   14190:	adds	r4, r4, r0
   14194:	adc	r5, r5, r1
   14198:	adds	r4, r4, r2
   1419c:	adc	r5, r5, r3
   141a0:	strd	r4, [sp, #64]	; 0x40
   141a4:	eor	r4, r4, r8
   141a8:	eor	r5, r5, r9
   141ac:	lsr	ip, r4, #16
   141b0:	orr	r1, ip, r5, lsl #16
   141b4:	str	r1, [sp, #8]
   141b8:	lsr	r1, r5, #16
   141bc:	orr	r1, r1, r4, lsl #16
   141c0:	str	r1, [sp, #12]
   141c4:	ldrd	r4, [sp, #8]
   141c8:	adds	r4, r4, r6
   141cc:	adc	r5, r5, r7
   141d0:	mov	r8, r4
   141d4:	mov	r9, r5
   141d8:	eor	r2, r2, r4
   141dc:	eor	r3, r3, r5
   141e0:	lsl	r1, r3, #1
   141e4:	orr	r1, r1, r2, lsr #31
   141e8:	str	r1, [sp, #20]
   141ec:	lsl	r2, r2, #1
   141f0:	orr	r3, r2, r3, lsr #31
   141f4:	str	r3, [sp, #16]
   141f8:	add	r3, sp, #312	; 0x138
   141fc:	ldrd	r0, [r3]
   14200:	ldrd	r2, [sp, #80]	; 0x50
   14204:	adds	r0, r0, r2
   14208:	adc	r1, r1, r3
   1420c:	ldrd	r4, [sp, #56]	; 0x38
   14210:	adds	r2, r4, r0
   14214:	adc	r3, r5, r1
   14218:	mov	r0, r2
   1421c:	mov	r1, r3
   14220:	ldrd	r2, [sp, #24]
   14224:	eor	r2, r2, r0
   14228:	eor	r3, r3, r1
   1422c:	str	r3, [sp, #24]
   14230:	str	r2, [sp, #28]
   14234:	ldrd	r6, [sp, #120]	; 0x78
   14238:	ldrd	r2, [sp, #24]
   1423c:	adds	r6, r6, r2
   14240:	adc	r7, r7, r3
   14244:	eor	r4, r4, r6
   14248:	eor	r5, r5, r7
   1424c:	lsr	ip, r4, #24
   14250:	orr	r2, ip, r5, lsl #8
   14254:	lsr	ip, r5, #24
   14258:	orr	r3, ip, r4, lsl #8
   1425c:	add	ip, sp, #296	; 0x128
   14260:	ldrd	r4, [ip]
   14264:	adds	r4, r4, r0
   14268:	adc	r5, r5, r1
   1426c:	adds	r4, r4, r2
   14270:	adc	r5, r5, r3
   14274:	ldrd	r0, [sp, #24]
   14278:	strd	r4, [sp, #80]	; 0x50
   1427c:	eor	r0, r0, r4
   14280:	eor	r1, r1, r5
   14284:	lsr	ip, r0, #16
   14288:	orr	ip, ip, r1, lsl #16
   1428c:	str	ip, [sp, #24]
   14290:	lsr	r1, r1, #16
   14294:	orr	r1, r1, r0, lsl #16
   14298:	str	r1, [sp, #28]
   1429c:	ldrd	r0, [sp, #24]
   142a0:	adds	r0, r0, r6
   142a4:	adc	r1, r1, r7
   142a8:	mov	r6, r0
   142ac:	mov	r7, r1
   142b0:	eor	r2, r2, r0
   142b4:	eor	r3, r3, r1
   142b8:	lsl	r1, r3, #1
   142bc:	orr	r5, r1, r2, lsr #31
   142c0:	lsl	r2, r2, #1
   142c4:	orr	r4, r2, r3, lsr #31
   142c8:	add	r3, sp, #360	; 0x168
   142cc:	ldrd	r0, [r3]
   142d0:	ldrd	r2, [sp, #72]	; 0x48
   142d4:	adds	r0, r0, r2
   142d8:	adc	r1, r1, r3
   142dc:	adds	r0, r0, r4
   142e0:	adc	r1, r1, r5
   142e4:	ldrd	r2, [sp]
   142e8:	eor	r2, r2, r0
   142ec:	eor	r3, r3, r1
   142f0:	strd	r2, [sp, #56]	; 0x38
   142f4:	ldrd	r2, [sp, #56]	; 0x38
   142f8:	str	r3, [sp]
   142fc:	str	r2, [sp, #4]
   14300:	ldrd	r2, [sp]
   14304:	adds	r2, r2, r8
   14308:	adc	r3, r3, r9
   1430c:	mov	r8, r2
   14310:	mov	r9, r3
   14314:	eor	r4, r4, r2
   14318:	eor	r5, r5, r3
   1431c:	lsr	ip, r4, #24
   14320:	orr	r2, ip, r5, lsl #8
   14324:	lsr	ip, r5, #24
   14328:	orr	r3, ip, r4, lsl #8
   1432c:	add	ip, sp, #336	; 0x150
   14330:	ldrd	r4, [ip]
   14334:	adds	r4, r4, r0
   14338:	adc	r5, r5, r1
   1433c:	adds	r4, r4, r2
   14340:	adc	r5, r5, r3
   14344:	ldrd	r0, [sp]
   14348:	strd	r4, [sp, #72]	; 0x48
   1434c:	eor	r0, r0, r4
   14350:	eor	r1, r1, r5
   14354:	lsr	ip, r0, #16
   14358:	orr	ip, ip, r1, lsl #16
   1435c:	str	ip, [sp]
   14360:	lsr	r1, r1, #16
   14364:	orr	r1, r1, r0, lsl #16
   14368:	str	r1, [sp, #4]
   1436c:	ldrd	r4, [sp]
   14370:	adds	r4, r4, r8
   14374:	adc	r5, r5, r9
   14378:	strd	r4, [sp, #96]	; 0x60
   1437c:	mov	r0, r4
   14380:	mov	r1, r5
   14384:	eor	r0, r0, r2
   14388:	eor	r1, r1, r3
   1438c:	mov	r3, r1
   14390:	lsl	r1, r1, #1
   14394:	orr	r1, r1, r0, lsr #31
   14398:	str	r1, [sp, #60]	; 0x3c
   1439c:	lsl	r2, r0, #1
   143a0:	orr	r3, r2, r3, lsr #31
   143a4:	str	r3, [sp, #56]	; 0x38
   143a8:	add	r3, sp, #368	; 0x170
   143ac:	ldrd	r2, [r3]
   143b0:	ldrd	r4, [sp, #104]	; 0x68
   143b4:	adds	r2, r2, r4
   143b8:	adc	r3, r3, r5
   143bc:	mov	r0, r2
   143c0:	mov	r1, r3
   143c4:	ldrd	r2, [sp, #40]	; 0x28
   143c8:	adds	r2, r2, r0
   143cc:	adc	r3, r3, r1
   143d0:	mov	r0, r2
   143d4:	mov	r1, r3
   143d8:	ldrd	r4, [sp, #8]
   143dc:	eor	r4, r4, r2
   143e0:	eor	r5, r5, r3
   143e4:	mov	r8, r5
   143e8:	mov	r9, r4
   143ec:	adds	r6, r6, r5
   143f0:	adc	r7, r7, r4
   143f4:	ldrd	r4, [sp, #40]	; 0x28
   143f8:	eor	r4, r4, r6
   143fc:	eor	r5, r5, r7
   14400:	lsr	ip, r4, #24
   14404:	orr	r2, ip, r5, lsl #8
   14408:	lsr	ip, r5, #24
   1440c:	orr	r3, ip, r4, lsl #8
   14410:	add	ip, sp, #272	; 0x110
   14414:	ldrd	r4, [ip]
   14418:	adds	r4, r4, r0
   1441c:	adc	r5, r5, r1
   14420:	adds	r4, r4, r2
   14424:	adc	r5, r5, r3
   14428:	mov	r0, r4
   1442c:	mov	r1, r5
   14430:	strd	r0, [sp, #104]	; 0x68
   14434:	eor	r0, r0, r8
   14438:	eor	r1, r1, r9
   1443c:	mov	r9, r1
   14440:	lsr	ip, r0, #16
   14444:	orr	r1, ip, r1, lsl #16
   14448:	str	r1, [sp, #8]
   1444c:	lsr	r1, r9, #16
   14450:	orr	r1, r1, r0, lsl #16
   14454:	str	r1, [sp, #12]
   14458:	ldrd	r4, [sp, #8]
   1445c:	adds	r4, r4, r6
   14460:	adc	r5, r5, r7
   14464:	strd	r4, [sp, #120]	; 0x78
   14468:	mov	r0, r4
   1446c:	mov	r1, r5
   14470:	eor	r0, r0, r2
   14474:	eor	r1, r1, r3
   14478:	mov	r3, r1
   1447c:	lsl	r1, r1, #1
   14480:	orr	r1, r1, r0, lsr #31
   14484:	str	r1, [sp, #44]	; 0x2c
   14488:	lsl	r2, r0, #1
   1448c:	orr	r3, r2, r3, lsr #31
   14490:	str	r3, [sp, #40]	; 0x28
   14494:	add	r3, sp, #312	; 0x138
   14498:	ldrd	r8, [r3]
   1449c:	ldrd	r4, [sp, #64]	; 0x40
   144a0:	adds	r8, r8, r4
   144a4:	adc	r9, r9, r5
   144a8:	ldrd	r4, [sp, #48]	; 0x30
   144ac:	adds	r4, r4, r8
   144b0:	adc	r5, r5, r9
   144b4:	mov	r0, r4
   144b8:	mov	r1, r5
   144bc:	ldrd	r2, [sp, #24]
   144c0:	eor	r2, r2, r4
   144c4:	eor	r3, r3, r5
   144c8:	mov	r8, r3
   144cc:	mov	r9, r2
   144d0:	ldrd	r6, [sp, #88]	; 0x58
   144d4:	adds	r6, r6, r3
   144d8:	adc	r7, r7, r2
   144dc:	ldrd	r4, [sp, #48]	; 0x30
   144e0:	eor	r4, r4, r6
   144e4:	eor	r5, r5, r7
   144e8:	lsr	ip, r4, #24
   144ec:	orr	r2, ip, r5, lsl #8
   144f0:	lsr	ip, r5, #24
   144f4:	orr	r3, ip, r4, lsl #8
   144f8:	add	ip, sp, #288	; 0x120
   144fc:	ldrd	r4, [ip]
   14500:	adds	r4, r4, r0
   14504:	adc	r5, r5, r1
   14508:	adds	r4, r4, r2
   1450c:	adc	r5, r5, r3
   14510:	strd	r4, [sp, #64]	; 0x40
   14514:	eor	r4, r4, r8
   14518:	eor	r5, r5, r9
   1451c:	lsr	ip, r4, #16
   14520:	orr	r1, ip, r5, lsl #16
   14524:	str	r1, [sp, #24]
   14528:	lsr	r1, r5, #16
   1452c:	orr	r1, r1, r4, lsl #16
   14530:	str	r1, [sp, #28]
   14534:	ldrd	r8, [sp, #24]
   14538:	adds	r8, r8, r6
   1453c:	adc	r9, r9, r7
   14540:	eor	r2, r2, r8
   14544:	eor	r3, r3, r9
   14548:	lsl	r1, r3, #1
   1454c:	orr	r1, r1, r2, lsr #31
   14550:	str	r1, [sp, #52]	; 0x34
   14554:	lsl	r2, r2, #1
   14558:	orr	r3, r2, r3, lsr #31
   1455c:	str	r3, [sp, #48]	; 0x30
   14560:	add	r3, sp, #392	; 0x188
   14564:	ldrd	r0, [r3]
   14568:	ldrd	r6, [sp, #80]	; 0x50
   1456c:	adds	r0, r0, r6
   14570:	adc	r1, r1, r7
   14574:	ldrd	r4, [sp, #16]
   14578:	adds	r4, r4, r0
   1457c:	adc	r5, r5, r1
   14580:	mov	r0, r4
   14584:	mov	r1, r5
   14588:	ldrd	r2, [sp, #32]
   1458c:	eor	r2, r2, r4
   14590:	eor	r3, r3, r5
   14594:	str	r3, [sp, #32]
   14598:	str	r2, [sp, #36]	; 0x24
   1459c:	ldrd	r6, [sp, #112]	; 0x70
   145a0:	ldrd	r2, [sp, #32]
   145a4:	adds	r6, r6, r2
   145a8:	adc	r7, r7, r3
   145ac:	ldrd	r4, [sp, #16]
   145b0:	eor	r4, r4, r6
   145b4:	eor	r5, r5, r7
   145b8:	lsr	ip, r4, #24
   145bc:	orr	r2, ip, r5, lsl #8
   145c0:	lsr	ip, r5, #24
   145c4:	orr	r3, ip, r4, lsl #8
   145c8:	add	ip, sp, #376	; 0x178
   145cc:	ldrd	r4, [ip]
   145d0:	adds	r4, r4, r0
   145d4:	adc	r5, r5, r1
   145d8:	adds	r4, r4, r2
   145dc:	adc	r5, r5, r3
   145e0:	ldrd	r0, [sp, #32]
   145e4:	strd	r4, [sp, #80]	; 0x50
   145e8:	eor	r0, r0, r4
   145ec:	eor	r1, r1, r5
   145f0:	lsr	ip, r0, #16
   145f4:	orr	r4, ip, r1, lsl #16
   145f8:	lsr	r1, r1, #16
   145fc:	orr	r5, r1, r0, lsl #16
   14600:	adds	r0, r6, r4
   14604:	adc	r1, r7, r5
   14608:	strd	r0, [sp, #88]	; 0x58
   1460c:	eor	r0, r0, r2
   14610:	eor	r1, r1, r3
   14614:	mov	r3, r1
   14618:	lsl	r1, r1, #1
   1461c:	orr	r1, r1, r0, lsr #31
   14620:	str	r1, [sp, #20]
   14624:	lsl	r2, r0, #1
   14628:	orr	r3, r2, r3, lsr #31
   1462c:	str	r3, [sp, #16]
   14630:	add	r3, sp, #352	; 0x160
   14634:	ldrd	r0, [r3]
   14638:	ldrd	r2, [sp, #72]	; 0x48
   1463c:	adds	r0, r0, r2
   14640:	adc	r1, r1, r3
   14644:	ldrd	r2, [sp, #40]	; 0x28
   14648:	adds	r2, r2, r0
   1464c:	adc	r3, r3, r1
   14650:	mov	r0, r2
   14654:	mov	r1, r3
   14658:	eor	r4, r4, r2
   1465c:	eor	r5, r5, r3
   14660:	mov	r2, r5
   14664:	mov	r3, r4
   14668:	mov	r6, r5
   1466c:	mov	r7, r4
   14670:	adds	r4, r2, r8
   14674:	adc	r5, r3, r9
   14678:	mov	r8, r4
   1467c:	mov	r9, r5
   14680:	ldrd	r4, [sp, #40]	; 0x28
   14684:	eor	r4, r4, r8
   14688:	eor	r5, r5, r9
   1468c:	lsr	ip, r4, #24
   14690:	orr	r2, ip, r5, lsl #8
   14694:	lsr	ip, r5, #24
   14698:	orr	r3, ip, r4, lsl #8
   1469c:	add	ip, sp, #384	; 0x180
   146a0:	ldrd	r4, [ip]
   146a4:	adds	r4, r4, r0
   146a8:	adc	r5, r5, r1
   146ac:	adds	r4, r4, r2
   146b0:	adc	r5, r5, r3
   146b4:	mov	r0, r6
   146b8:	mov	r1, r7
   146bc:	strd	r4, [sp, #72]	; 0x48
   146c0:	eor	r0, r0, r4
   146c4:	eor	r1, r1, r5
   146c8:	lsr	ip, r0, #16
   146cc:	orr	ip, ip, r1, lsl #16
   146d0:	str	ip, [sp, #32]
   146d4:	lsr	r1, r1, #16
   146d8:	orr	r1, r1, r0, lsl #16
   146dc:	str	r1, [sp, #36]	; 0x24
   146e0:	ldrd	r0, [sp, #32]
   146e4:	adds	r0, r0, r8
   146e8:	adc	r1, r1, r9
   146ec:	mov	r8, r0
   146f0:	mov	r9, r1
   146f4:	strd	r8, [sp, #112]	; 0x70
   146f8:	eor	r8, r8, r2
   146fc:	eor	r9, r9, r3
   14700:	lsl	r1, r9, #1
   14704:	orr	r1, r1, r8, lsr #31
   14708:	str	r1, [sp, #44]	; 0x2c
   1470c:	lsl	r2, r8, #1
   14710:	orr	r3, r2, r9, lsr #31
   14714:	str	r3, [sp, #40]	; 0x28
   14718:	add	r3, sp, #296	; 0x128
   1471c:	ldrd	r8, [r3]
   14720:	ldrd	r4, [sp, #104]	; 0x68
   14724:	adds	r8, r8, r4
   14728:	adc	r9, r9, r5
   1472c:	ldrd	r4, [sp, #48]	; 0x30
   14730:	adds	r4, r4, r8
   14734:	adc	r5, r5, r9
   14738:	mov	r0, r4
   1473c:	mov	r1, r5
   14740:	ldrd	r2, [sp]
   14744:	eor	r2, r2, r4
   14748:	eor	r3, r3, r5
   1474c:	mov	r8, r3
   14750:	mov	r9, r2
   14754:	ldrd	r6, [sp, #88]	; 0x58
   14758:	adds	r6, r6, r3
   1475c:	adc	r7, r7, r2
   14760:	ldrd	r4, [sp, #48]	; 0x30
   14764:	eor	r4, r4, r6
   14768:	eor	r5, r5, r7
   1476c:	lsr	ip, r4, #24
   14770:	orr	r2, ip, r5, lsl #8
   14774:	lsr	ip, r5, #24
   14778:	orr	r3, ip, r4, lsl #8
   1477c:	add	ip, sp, #320	; 0x140
   14780:	ldrd	r4, [ip]
   14784:	adds	r4, r4, r0
   14788:	adc	r5, r5, r1
   1478c:	adds	r4, r4, r2
   14790:	adc	r5, r5, r3
   14794:	mov	r0, r4
   14798:	mov	r1, r5
   1479c:	strd	r0, [sp, #88]	; 0x58
   147a0:	eor	r0, r0, r8
   147a4:	eor	r1, r1, r9
   147a8:	mov	r9, r1
   147ac:	lsr	ip, r0, #16
   147b0:	orr	r1, ip, r1, lsl #16
   147b4:	str	r1, [sp]
   147b8:	lsr	r1, r9, #16
   147bc:	orr	r1, r1, r0, lsl #16
   147c0:	str	r1, [sp, #4]
   147c4:	ldrd	r4, [sp]
   147c8:	adds	r4, r4, r6
   147cc:	adc	r5, r5, r7
   147d0:	strd	r4, [sp, #104]	; 0x68
   147d4:	mov	r8, r4
   147d8:	mov	r9, r5
   147dc:	eor	r8, r8, r2
   147e0:	eor	r9, r9, r3
   147e4:	lsl	r1, r9, #1
   147e8:	orr	r1, r1, r8, lsr #31
   147ec:	str	r1, [sp, #52]	; 0x34
   147f0:	lsl	r2, r8, #1
   147f4:	orr	r3, r2, r9, lsr #31
   147f8:	str	r3, [sp, #48]	; 0x30
   147fc:	add	r3, sp, #328	; 0x148
   14800:	ldrd	r0, [r3]
   14804:	ldrd	r4, [sp, #64]	; 0x40
   14808:	adds	r0, r0, r4
   1480c:	adc	r1, r1, r5
   14810:	ldrd	r4, [sp, #16]
   14814:	adds	r4, r4, r0
   14818:	adc	r5, r5, r1
   1481c:	mov	r0, r4
   14820:	mov	r1, r5
   14824:	ldrd	r2, [sp, #8]
   14828:	eor	r2, r2, r4
   1482c:	eor	r3, r3, r5
   14830:	mov	r8, r3
   14834:	mov	r9, r2
   14838:	ldrd	r6, [sp, #96]	; 0x60
   1483c:	adds	r6, r6, r3
   14840:	adc	r7, r7, r2
   14844:	ldrd	r4, [sp, #16]
   14848:	eor	r4, r4, r6
   1484c:	eor	r5, r5, r7
   14850:	lsr	ip, r4, #24
   14854:	orr	r2, ip, r5, lsl #8
   14858:	lsr	ip, r5, #24
   1485c:	orr	r3, ip, r4, lsl #8
   14860:	add	ip, sp, #280	; 0x118
   14864:	ldrd	r4, [ip]
   14868:	adds	r4, r4, r0
   1486c:	adc	r5, r5, r1
   14870:	adds	r4, r4, r2
   14874:	adc	r5, r5, r3
   14878:	strd	r4, [sp, #64]	; 0x40
   1487c:	eor	r4, r4, r8
   14880:	eor	r5, r5, r9
   14884:	lsr	ip, r4, #16
   14888:	orr	r1, ip, r5, lsl #16
   1488c:	str	r1, [sp, #8]
   14890:	lsr	r1, r5, #16
   14894:	orr	r1, r1, r4, lsl #16
   14898:	str	r1, [sp, #12]
   1489c:	ldrd	r4, [sp, #8]
   148a0:	adds	r4, r4, r6
   148a4:	adc	r5, r5, r7
   148a8:	mov	r8, r4
   148ac:	mov	r9, r5
   148b0:	eor	r2, r2, r4
   148b4:	eor	r3, r3, r5
   148b8:	lsl	r1, r3, #1
   148bc:	orr	r1, r1, r2, lsr #31
   148c0:	str	r1, [sp, #20]
   148c4:	lsl	r2, r2, #1
   148c8:	orr	r3, r2, r3, lsr #31
   148cc:	str	r3, [sp, #16]
   148d0:	add	r3, sp, #344	; 0x158
   148d4:	ldrd	r0, [r3]
   148d8:	ldrd	r2, [sp, #80]	; 0x50
   148dc:	adds	r0, r0, r2
   148e0:	adc	r1, r1, r3
   148e4:	ldrd	r4, [sp, #56]	; 0x38
   148e8:	adds	r2, r4, r0
   148ec:	adc	r3, r5, r1
   148f0:	mov	r0, r2
   148f4:	mov	r1, r3
   148f8:	ldrd	r2, [sp, #24]
   148fc:	eor	r2, r2, r0
   14900:	eor	r3, r3, r1
   14904:	str	r3, [sp, #24]
   14908:	str	r2, [sp, #28]
   1490c:	ldrd	r6, [sp, #120]	; 0x78
   14910:	ldrd	r2, [sp, #24]
   14914:	adds	r6, r6, r2
   14918:	adc	r7, r7, r3
   1491c:	mov	r2, r4
   14920:	mov	r3, r5
   14924:	eor	r2, r2, r6
   14928:	eor	r3, r3, r7
   1492c:	mov	r4, r2
   14930:	lsr	ip, r2, #24
   14934:	orr	r2, ip, r3, lsl #8
   14938:	lsr	ip, r3, #24
   1493c:	orr	r3, ip, r4, lsl #8
   14940:	add	ip, sp, #304	; 0x130
   14944:	ldrd	r4, [ip]
   14948:	adds	r4, r4, r0
   1494c:	adc	r5, r5, r1
   14950:	adds	r4, r4, r2
   14954:	adc	r5, r5, r3
   14958:	ldrd	r0, [sp, #24]
   1495c:	strd	r4, [sp, #80]	; 0x50
   14960:	eor	r0, r0, r4
   14964:	eor	r1, r1, r5
   14968:	lsr	ip, r0, #16
   1496c:	orr	ip, ip, r1, lsl #16
   14970:	str	ip, [sp, #24]
   14974:	lsr	r1, r1, #16
   14978:	orr	r1, r1, r0, lsl #16
   1497c:	str	r1, [sp, #28]
   14980:	ldrd	r0, [sp, #24]
   14984:	adds	r0, r0, r6
   14988:	adc	r1, r1, r7
   1498c:	mov	r6, r0
   14990:	mov	r7, r1
   14994:	eor	r2, r2, r0
   14998:	eor	r3, r3, r1
   1499c:	lsl	r1, r3, #1
   149a0:	orr	r5, r1, r2, lsr #31
   149a4:	lsl	r2, r2, #1
   149a8:	orr	r4, r2, r3, lsr #31
   149ac:	add	r3, sp, #328	; 0x148
   149b0:	ldrd	r0, [r3]
   149b4:	ldrd	r2, [sp, #72]	; 0x48
   149b8:	adds	r0, r0, r2
   149bc:	adc	r1, r1, r3
   149c0:	adds	r0, r0, r4
   149c4:	adc	r1, r1, r5
   149c8:	ldrd	r2, [sp]
   149cc:	eor	r2, r2, r0
   149d0:	eor	r3, r3, r1
   149d4:	strd	r2, [sp, #56]	; 0x38
   149d8:	ldrd	r2, [sp, #56]	; 0x38
   149dc:	str	r3, [sp]
   149e0:	str	r2, [sp, #4]
   149e4:	ldrd	r2, [sp]
   149e8:	adds	r2, r2, r8
   149ec:	adc	r3, r3, r9
   149f0:	mov	r8, r2
   149f4:	mov	r9, r3
   149f8:	eor	r4, r4, r2
   149fc:	eor	r5, r5, r3
   14a00:	lsr	ip, r4, #24
   14a04:	orr	r2, ip, r5, lsl #8
   14a08:	lsr	ip, r5, #24
   14a0c:	orr	r3, ip, r4, lsl #8
   14a10:	add	ip, sp, #344	; 0x158
   14a14:	ldrd	r4, [ip]
   14a18:	adds	r4, r4, r0
   14a1c:	adc	r5, r5, r1
   14a20:	adds	r4, r4, r2
   14a24:	adc	r5, r5, r3
   14a28:	ldrd	r0, [sp]
   14a2c:	strd	r4, [sp, #72]	; 0x48
   14a30:	eor	r0, r0, r4
   14a34:	eor	r1, r1, r5
   14a38:	lsr	ip, r0, #16
   14a3c:	orr	ip, ip, r1, lsl #16
   14a40:	str	ip, [sp]
   14a44:	lsr	r1, r1, #16
   14a48:	orr	r1, r1, r0, lsl #16
   14a4c:	str	r1, [sp, #4]
   14a50:	ldrd	r4, [sp]
   14a54:	adds	r4, r4, r8
   14a58:	adc	r5, r5, r9
   14a5c:	strd	r4, [sp, #96]	; 0x60
   14a60:	mov	r0, r4
   14a64:	mov	r1, r5
   14a68:	eor	r0, r0, r2
   14a6c:	eor	r1, r1, r3
   14a70:	mov	r3, r1
   14a74:	lsl	r1, r1, #1
   14a78:	orr	r1, r1, r0, lsr #31
   14a7c:	str	r1, [sp, #60]	; 0x3c
   14a80:	lsl	r2, r0, #1
   14a84:	orr	r3, r2, r3, lsr #31
   14a88:	str	r3, [sp, #56]	; 0x38
   14a8c:	add	r3, sp, #296	; 0x128
   14a90:	ldrd	r8, [r3]
   14a94:	ldrd	r4, [sp, #88]	; 0x58
   14a98:	adds	r8, r8, r4
   14a9c:	adc	r9, r9, r5
   14aa0:	ldrd	r2, [sp, #40]	; 0x28
   14aa4:	adds	r2, r2, r8
   14aa8:	adc	r3, r3, r9
   14aac:	mov	r0, r2
   14ab0:	mov	r1, r3
   14ab4:	ldrd	r4, [sp, #8]
   14ab8:	eor	r4, r4, r2
   14abc:	eor	r5, r5, r3
   14ac0:	mov	r8, r5
   14ac4:	mov	r9, r4
   14ac8:	adds	r6, r6, r5
   14acc:	adc	r7, r7, r4
   14ad0:	ldrd	r4, [sp, #40]	; 0x28
   14ad4:	eor	r4, r4, r6
   14ad8:	eor	r5, r5, r7
   14adc:	lsr	ip, r4, #24
   14ae0:	orr	r2, ip, r5, lsl #8
   14ae4:	lsr	ip, r5, #24
   14ae8:	orr	r3, ip, r4, lsl #8
   14aec:	add	ip, sp, #280	; 0x118
   14af0:	ldrd	r4, [ip]
   14af4:	adds	r4, r4, r0
   14af8:	adc	r5, r5, r1
   14afc:	adds	r4, r4, r2
   14b00:	adc	r5, r5, r3
   14b04:	mov	r0, r4
   14b08:	mov	r1, r5
   14b0c:	strd	r0, [sp, #88]	; 0x58
   14b10:	eor	r0, r0, r8
   14b14:	eor	r1, r1, r9
   14b18:	mov	r9, r1
   14b1c:	lsr	ip, r0, #16
   14b20:	orr	r1, ip, r1, lsl #16
   14b24:	str	r1, [sp, #8]
   14b28:	lsr	r1, r9, #16
   14b2c:	orr	r1, r1, r0, lsl #16
   14b30:	str	r1, [sp, #12]
   14b34:	ldrd	r4, [sp, #8]
   14b38:	adds	r4, r4, r6
   14b3c:	adc	r5, r5, r7
   14b40:	strd	r4, [sp, #120]	; 0x78
   14b44:	mov	r0, r4
   14b48:	mov	r1, r5
   14b4c:	eor	r0, r0, r2
   14b50:	eor	r1, r1, r3
   14b54:	mov	r3, r1
   14b58:	lsl	r1, r1, #1
   14b5c:	orr	r1, r1, r0, lsr #31
   14b60:	str	r1, [sp, #44]	; 0x2c
   14b64:	lsl	r2, r0, #1
   14b68:	orr	r3, r2, r3, lsr #31
   14b6c:	str	r3, [sp, #40]	; 0x28
   14b70:	add	r3, sp, #376	; 0x178
   14b74:	ldrd	r8, [r3]
   14b78:	ldrd	r4, [sp, #64]	; 0x40
   14b7c:	adds	r8, r8, r4
   14b80:	adc	r9, r9, r5
   14b84:	ldrd	r4, [sp, #48]	; 0x30
   14b88:	adds	r4, r4, r8
   14b8c:	adc	r5, r5, r9
   14b90:	mov	r0, r4
   14b94:	mov	r1, r5
   14b98:	ldrd	r2, [sp, #24]
   14b9c:	eor	r2, r2, r4
   14ba0:	eor	r3, r3, r5
   14ba4:	mov	r8, r3
   14ba8:	mov	r9, r2
   14bac:	ldrd	r6, [sp, #112]	; 0x70
   14bb0:	adds	r6, r6, r3
   14bb4:	adc	r7, r7, r2
   14bb8:	ldrd	r4, [sp, #48]	; 0x30
   14bbc:	eor	r4, r4, r6
   14bc0:	eor	r5, r5, r7
   14bc4:	lsr	ip, r4, #24
   14bc8:	orr	r2, ip, r5, lsl #8
   14bcc:	lsr	ip, r5, #24
   14bd0:	orr	r3, ip, r4, lsl #8
   14bd4:	add	ip, sp, #368	; 0x170
   14bd8:	ldrd	r4, [ip]
   14bdc:	adds	r4, r4, r0
   14be0:	adc	r5, r5, r1
   14be4:	adds	r4, r4, r2
   14be8:	adc	r5, r5, r3
   14bec:	strd	r4, [sp, #64]	; 0x40
   14bf0:	eor	r4, r4, r8
   14bf4:	eor	r5, r5, r9
   14bf8:	lsr	ip, r4, #16
   14bfc:	orr	r1, ip, r5, lsl #16
   14c00:	str	r1, [sp, #24]
   14c04:	lsr	r1, r5, #16
   14c08:	orr	r1, r1, r4, lsl #16
   14c0c:	str	r1, [sp, #28]
   14c10:	ldrd	r8, [sp, #24]
   14c14:	adds	r8, r8, r6
   14c18:	adc	r9, r9, r7
   14c1c:	mov	r0, r8
   14c20:	mov	r1, r9
   14c24:	strd	r0, [sp, #112]	; 0x70
   14c28:	eor	r0, r0, r2
   14c2c:	eor	r1, r1, r3
   14c30:	mov	r3, r1
   14c34:	lsl	r1, r1, #1
   14c38:	orr	r1, r1, r0, lsr #31
   14c3c:	str	r1, [sp, #52]	; 0x34
   14c40:	lsl	r2, r0, #1
   14c44:	orr	r3, r2, r3, lsr #31
   14c48:	str	r3, [sp, #48]	; 0x30
   14c4c:	add	r3, sp, #360	; 0x168
   14c50:	ldrd	r0, [r3]
   14c54:	ldrd	r6, [sp, #80]	; 0x50
   14c58:	adds	r0, r0, r6
   14c5c:	adc	r1, r1, r7
   14c60:	ldrd	r4, [sp, #16]
   14c64:	adds	r4, r4, r0
   14c68:	adc	r5, r5, r1
   14c6c:	mov	r0, r4
   14c70:	mov	r1, r5
   14c74:	ldrd	r2, [sp, #32]
   14c78:	eor	r2, r2, r4
   14c7c:	eor	r3, r3, r5
   14c80:	mov	r4, r3
   14c84:	mov	r5, r2
   14c88:	ldrd	r6, [sp, #104]	; 0x68
   14c8c:	mov	r8, r3
   14c90:	mov	r9, r2
   14c94:	adds	r6, r6, r4
   14c98:	adc	r7, r7, r5
   14c9c:	ldrd	r4, [sp, #16]
   14ca0:	eor	r4, r4, r6
   14ca4:	eor	r5, r5, r7
   14ca8:	lsr	ip, r4, #24
   14cac:	orr	r2, ip, r5, lsl #8
   14cb0:	lsr	ip, r5, #24
   14cb4:	orr	r3, ip, r4, lsl #8
   14cb8:	add	ip, sp, #384	; 0x180
   14cbc:	ldrd	r4, [ip]
   14cc0:	adds	r4, r4, r0
   14cc4:	adc	r5, r5, r1
   14cc8:	adds	r4, r4, r2
   14ccc:	adc	r5, r5, r3
   14cd0:	mov	r0, r8
   14cd4:	mov	r1, r9
   14cd8:	strd	r4, [sp, #80]	; 0x50
   14cdc:	eor	r0, r0, r4
   14ce0:	eor	r1, r1, r5
   14ce4:	lsr	ip, r0, #16
   14ce8:	orr	r4, ip, r1, lsl #16
   14cec:	lsr	r1, r1, #16
   14cf0:	orr	r5, r1, r0, lsl #16
   14cf4:	adds	r6, r6, r4
   14cf8:	adc	r7, r7, r5
   14cfc:	eor	r2, r2, r6
   14d00:	eor	r3, r3, r7
   14d04:	lsl	r1, r3, #1
   14d08:	orr	r1, r1, r2, lsr #31
   14d0c:	str	r1, [sp, #20]
   14d10:	lsl	r2, r2, #1
   14d14:	orr	r3, r2, r3, lsr #31
   14d18:	str	r3, [sp, #16]
   14d1c:	add	r3, sp, #288	; 0x120
   14d20:	ldrd	r0, [r3]
   14d24:	ldrd	r2, [sp, #72]	; 0x48
   14d28:	adds	r0, r0, r2
   14d2c:	adc	r1, r1, r3
   14d30:	ldrd	r2, [sp, #40]	; 0x28
   14d34:	adds	r2, r2, r0
   14d38:	adc	r3, r3, r1
   14d3c:	mov	r0, r2
   14d40:	mov	r1, r3
   14d44:	eor	r4, r4, r2
   14d48:	eor	r5, r5, r3
   14d4c:	str	r5, [sp, #32]
   14d50:	str	r4, [sp, #36]	; 0x24
   14d54:	ldrd	r4, [sp, #32]
   14d58:	ldrd	r2, [sp, #112]	; 0x70
   14d5c:	adds	r2, r2, r4
   14d60:	adc	r3, r3, r5
   14d64:	mov	r8, r2
   14d68:	mov	r9, r3
   14d6c:	ldrd	r4, [sp, #40]	; 0x28
   14d70:	eor	r4, r4, r2
   14d74:	eor	r5, r5, r3
   14d78:	lsr	ip, r4, #24
   14d7c:	orr	r2, ip, r5, lsl #8
   14d80:	lsr	ip, r5, #24
   14d84:	orr	r3, ip, r4, lsl #8
   14d88:	add	ip, sp, #320	; 0x140
   14d8c:	ldrd	r4, [ip]
   14d90:	adds	r4, r4, r0
   14d94:	adc	r5, r5, r1
   14d98:	adds	r4, r4, r2
   14d9c:	adc	r5, r5, r3
   14da0:	ldrd	r0, [sp, #32]
   14da4:	strd	r4, [sp, #72]	; 0x48
   14da8:	eor	r0, r0, r4
   14dac:	eor	r1, r1, r5
   14db0:	lsr	ip, r0, #16
   14db4:	orr	ip, ip, r1, lsl #16
   14db8:	str	ip, [sp, #32]
   14dbc:	lsr	r1, r1, #16
   14dc0:	orr	r1, r1, r0, lsl #16
   14dc4:	str	r1, [sp, #36]	; 0x24
   14dc8:	ldrd	r0, [sp, #32]
   14dcc:	adds	r0, r0, r8
   14dd0:	adc	r1, r1, r9
   14dd4:	mov	r8, r0
   14dd8:	mov	r9, r1
   14ddc:	strd	r8, [sp, #104]	; 0x68
   14de0:	eor	r8, r8, r2
   14de4:	eor	r9, r9, r3
   14de8:	lsl	r1, r9, #1
   14dec:	orr	r1, r1, r8, lsr #31
   14df0:	str	r1, [sp, #44]	; 0x2c
   14df4:	lsl	r2, r8, #1
   14df8:	orr	r3, r2, r9, lsr #31
   14dfc:	str	r3, [sp, #40]	; 0x28
   14e00:	add	r3, sp, #312	; 0x138
   14e04:	ldrd	r8, [r3]
   14e08:	ldrd	r4, [sp, #88]	; 0x58
   14e0c:	adds	r8, r8, r4
   14e10:	adc	r9, r9, r5
   14e14:	ldrd	r4, [sp, #48]	; 0x30
   14e18:	adds	r4, r4, r8
   14e1c:	adc	r5, r5, r9
   14e20:	mov	r0, r4
   14e24:	mov	r1, r5
   14e28:	ldrd	r2, [sp]
   14e2c:	eor	r2, r2, r4
   14e30:	eor	r3, r3, r5
   14e34:	mov	r8, r3
   14e38:	mov	r9, r2
   14e3c:	adds	r6, r6, r3
   14e40:	adc	r7, r7, r2
   14e44:	ldrd	r4, [sp, #48]	; 0x30
   14e48:	eor	r4, r4, r6
   14e4c:	eor	r5, r5, r7
   14e50:	lsr	ip, r4, #24
   14e54:	orr	r2, ip, r5, lsl #8
   14e58:	lsr	ip, r5, #24
   14e5c:	orr	r3, ip, r4, lsl #8
   14e60:	add	ip, sp, #352	; 0x160
   14e64:	ldrd	r4, [ip]
   14e68:	adds	r4, r4, r0
   14e6c:	adc	r5, r5, r1
   14e70:	adds	r4, r4, r2
   14e74:	adc	r5, r5, r3
   14e78:	mov	r0, r4
   14e7c:	mov	r1, r5
   14e80:	strd	r0, [sp, #88]	; 0x58
   14e84:	eor	r0, r0, r8
   14e88:	eor	r1, r1, r9
   14e8c:	mov	r9, r1
   14e90:	lsr	ip, r0, #16
   14e94:	orr	r1, ip, r1, lsl #16
   14e98:	str	r1, [sp]
   14e9c:	lsr	r1, r9, #16
   14ea0:	orr	r1, r1, r0, lsl #16
   14ea4:	str	r1, [sp, #4]
   14ea8:	ldrd	r4, [sp]
   14eac:	adds	r4, r4, r6
   14eb0:	adc	r5, r5, r7
   14eb4:	strd	r4, [sp, #112]	; 0x70
   14eb8:	mov	r8, r4
   14ebc:	mov	r9, r5
   14ec0:	eor	r8, r8, r2
   14ec4:	eor	r9, r9, r3
   14ec8:	lsl	r1, r9, #1
   14ecc:	orr	r1, r1, r8, lsr #31
   14ed0:	str	r1, [sp, #52]	; 0x34
   14ed4:	lsl	r2, r8, #1
   14ed8:	orr	r3, r2, r9, lsr #31
   14edc:	str	r3, [sp, #48]	; 0x30
   14ee0:	add	r3, sp, #304	; 0x130
   14ee4:	ldrd	r0, [r3]
   14ee8:	ldrd	r4, [sp, #64]	; 0x40
   14eec:	adds	r0, r0, r4
   14ef0:	adc	r1, r1, r5
   14ef4:	ldrd	r4, [sp, #16]
   14ef8:	adds	r4, r4, r0
   14efc:	adc	r5, r5, r1
   14f00:	mov	r0, r4
   14f04:	mov	r1, r5
   14f08:	ldrd	r2, [sp, #8]
   14f0c:	eor	r2, r2, r4
   14f10:	eor	r3, r3, r5
   14f14:	mov	r8, r3
   14f18:	mov	r9, r2
   14f1c:	ldrd	r6, [sp, #96]	; 0x60
   14f20:	adds	r6, r6, r3
   14f24:	adc	r7, r7, r2
   14f28:	ldrd	r4, [sp, #16]
   14f2c:	eor	r4, r4, r6
   14f30:	eor	r5, r5, r7
   14f34:	lsr	ip, r4, #24
   14f38:	orr	r2, ip, r5, lsl #8
   14f3c:	lsr	ip, r5, #24
   14f40:	orr	r3, ip, r4, lsl #8
   14f44:	add	ip, sp, #272	; 0x110
   14f48:	ldrd	r4, [ip]
   14f4c:	adds	r4, r4, r0
   14f50:	adc	r5, r5, r1
   14f54:	adds	r4, r4, r2
   14f58:	adc	r5, r5, r3
   14f5c:	strd	r4, [sp, #64]	; 0x40
   14f60:	eor	r4, r4, r8
   14f64:	eor	r5, r5, r9
   14f68:	lsr	ip, r4, #16
   14f6c:	orr	r1, ip, r5, lsl #16
   14f70:	str	r1, [sp, #8]
   14f74:	lsr	r1, r5, #16
   14f78:	orr	r1, r1, r4, lsl #16
   14f7c:	str	r1, [sp, #12]
   14f80:	ldrd	r4, [sp, #8]
   14f84:	adds	r4, r4, r6
   14f88:	adc	r5, r5, r7
   14f8c:	mov	r8, r4
   14f90:	mov	r9, r5
   14f94:	eor	r2, r2, r4
   14f98:	eor	r3, r3, r5
   14f9c:	lsl	r1, r3, #1
   14fa0:	orr	r1, r1, r2, lsr #31
   14fa4:	str	r1, [sp, #20]
   14fa8:	lsl	r2, r2, #1
   14fac:	orr	r3, r2, r3, lsr #31
   14fb0:	str	r3, [sp, #16]
   14fb4:	add	r3, sp, #392	; 0x188
   14fb8:	ldrd	r0, [r3]
   14fbc:	ldrd	r2, [sp, #80]	; 0x50
   14fc0:	adds	r0, r0, r2
   14fc4:	adc	r1, r1, r3
   14fc8:	ldrd	r4, [sp, #56]	; 0x38
   14fcc:	adds	r2, r4, r0
   14fd0:	adc	r3, r5, r1
   14fd4:	mov	r0, r2
   14fd8:	mov	r1, r3
   14fdc:	ldrd	r2, [sp, #24]
   14fe0:	eor	r2, r2, r0
   14fe4:	eor	r3, r3, r1
   14fe8:	str	r3, [sp, #24]
   14fec:	str	r2, [sp, #28]
   14ff0:	ldrd	r6, [sp, #120]	; 0x78
   14ff4:	ldrd	r2, [sp, #24]
   14ff8:	adds	r6, r6, r2
   14ffc:	adc	r7, r7, r3
   15000:	mov	r2, r4
   15004:	mov	r3, r5
   15008:	eor	r2, r2, r6
   1500c:	eor	r3, r3, r7
   15010:	mov	r4, r2
   15014:	lsr	ip, r2, #24
   15018:	orr	r2, ip, r3, lsl #8
   1501c:	lsr	ip, r3, #24
   15020:	orr	r3, ip, r4, lsl #8
   15024:	add	ip, sp, #336	; 0x150
   15028:	ldrd	r4, [ip]
   1502c:	adds	r4, r4, r0
   15030:	adc	r5, r5, r1
   15034:	adds	r4, r4, r2
   15038:	adc	r5, r5, r3
   1503c:	ldrd	r0, [sp, #24]
   15040:	strd	r4, [sp, #80]	; 0x50
   15044:	eor	r0, r0, r4
   15048:	eor	r1, r1, r5
   1504c:	lsr	ip, r0, #16
   15050:	orr	ip, ip, r1, lsl #16
   15054:	str	ip, [sp, #24]
   15058:	lsr	r1, r1, #16
   1505c:	orr	r1, r1, r0, lsl #16
   15060:	str	r1, [sp, #28]
   15064:	ldrd	r0, [sp, #24]
   15068:	adds	r0, r0, r6
   1506c:	adc	r1, r1, r7
   15070:	mov	r6, r0
   15074:	mov	r7, r1
   15078:	eor	r2, r2, r0
   1507c:	eor	r3, r3, r1
   15080:	lsl	r1, r3, #1
   15084:	orr	r5, r1, r2, lsr #31
   15088:	lsl	r2, r2, #1
   1508c:	orr	r4, r2, r3, lsr #31
   15090:	add	r3, sp, #344	; 0x158
   15094:	ldrd	r0, [r3]
   15098:	ldrd	r2, [sp, #72]	; 0x48
   1509c:	adds	r0, r0, r2
   150a0:	adc	r1, r1, r3
   150a4:	adds	r0, r0, r4
   150a8:	adc	r1, r1, r5
   150ac:	ldrd	r2, [sp]
   150b0:	eor	r2, r2, r0
   150b4:	eor	r3, r3, r1
   150b8:	strd	r2, [sp, #56]	; 0x38
   150bc:	ldrd	r2, [sp, #56]	; 0x38
   150c0:	str	r3, [sp]
   150c4:	str	r2, [sp, #4]
   150c8:	ldrd	r2, [sp]
   150cc:	adds	r2, r2, r8
   150d0:	adc	r3, r3, r9
   150d4:	mov	r8, r2
   150d8:	mov	r9, r3
   150dc:	eor	r4, r4, r2
   150e0:	eor	r5, r5, r3
   150e4:	lsr	ip, r4, #24
   150e8:	orr	r2, ip, r5, lsl #8
   150ec:	lsr	ip, r5, #24
   150f0:	orr	r3, ip, r4, lsl #8
   150f4:	add	ip, sp, #272	; 0x110
   150f8:	ldrd	r4, [ip]
   150fc:	adds	r4, r4, r0
   15100:	adc	r5, r5, r1
   15104:	adds	r4, r4, r2
   15108:	adc	r5, r5, r3
   1510c:	ldrd	r0, [sp]
   15110:	strd	r4, [sp, #72]	; 0x48
   15114:	eor	r0, r0, r4
   15118:	eor	r1, r1, r5
   1511c:	lsr	ip, r0, #16
   15120:	orr	ip, ip, r1, lsl #16
   15124:	str	ip, [sp]
   15128:	lsr	r1, r1, #16
   1512c:	orr	r1, r1, r0, lsl #16
   15130:	str	r1, [sp, #4]
   15134:	ldrd	r4, [sp]
   15138:	adds	r4, r4, r8
   1513c:	adc	r5, r5, r9
   15140:	strd	r4, [sp, #96]	; 0x60
   15144:	mov	r0, r4
   15148:	mov	r1, r5
   1514c:	eor	r0, r0, r2
   15150:	eor	r1, r1, r3
   15154:	mov	r3, r1
   15158:	lsl	r1, r1, #1
   1515c:	orr	r1, r1, r0, lsr #31
   15160:	str	r1, [sp, #60]	; 0x3c
   15164:	lsl	r2, r0, #1
   15168:	orr	r3, r2, r3, lsr #31
   1516c:	str	r3, [sp, #56]	; 0x38
   15170:	add	r3, sp, #312	; 0x138
   15174:	ldrd	r8, [r3]
   15178:	ldrd	r4, [sp, #88]	; 0x58
   1517c:	adds	r8, r8, r4
   15180:	adc	r9, r9, r5
   15184:	ldrd	r2, [sp, #40]	; 0x28
   15188:	adds	r2, r2, r8
   1518c:	adc	r3, r3, r9
   15190:	mov	r0, r2
   15194:	mov	r1, r3
   15198:	ldrd	r4, [sp, #8]
   1519c:	eor	r4, r4, r2
   151a0:	eor	r5, r5, r3
   151a4:	mov	r8, r5
   151a8:	mov	r9, r4
   151ac:	adds	r6, r6, r5
   151b0:	adc	r7, r7, r4
   151b4:	ldrd	r4, [sp, #40]	; 0x28
   151b8:	eor	r4, r4, r6
   151bc:	eor	r5, r5, r7
   151c0:	lsr	ip, r4, #24
   151c4:	orr	r2, ip, r5, lsl #8
   151c8:	lsr	ip, r5, #24
   151cc:	orr	r3, ip, r4, lsl #8
   151d0:	add	ip, sp, #328	; 0x148
   151d4:	ldrd	r4, [ip]
   151d8:	adds	r4, r4, r0
   151dc:	adc	r5, r5, r1
   151e0:	adds	r4, r4, r2
   151e4:	adc	r5, r5, r3
   151e8:	mov	r0, r4
   151ec:	mov	r1, r5
   151f0:	strd	r0, [sp, #88]	; 0x58
   151f4:	eor	r0, r0, r8
   151f8:	eor	r1, r1, r9
   151fc:	mov	r9, r1
   15200:	lsr	ip, r0, #16
   15204:	orr	r1, ip, r1, lsl #16
   15208:	str	r1, [sp, #8]
   1520c:	lsr	r1, r9, #16
   15210:	orr	r1, r1, r0, lsl #16
   15214:	str	r1, [sp, #12]
   15218:	ldrd	r4, [sp, #8]
   1521c:	adds	r4, r4, r6
   15220:	adc	r5, r5, r7
   15224:	strd	r4, [sp, #120]	; 0x78
   15228:	mov	r0, r4
   1522c:	mov	r1, r5
   15230:	eor	r0, r0, r2
   15234:	eor	r1, r1, r3
   15238:	mov	r3, r1
   1523c:	lsl	r1, r1, #1
   15240:	orr	r1, r1, r0, lsr #31
   15244:	str	r1, [sp, #44]	; 0x2c
   15248:	lsl	r2, r0, #1
   1524c:	orr	r3, r2, r3, lsr #31
   15250:	str	r3, [sp, #40]	; 0x28
   15254:	add	r3, sp, #288	; 0x120
   15258:	ldrd	r8, [r3]
   1525c:	ldrd	r4, [sp, #64]	; 0x40
   15260:	adds	r8, r8, r4
   15264:	adc	r9, r9, r5
   15268:	ldrd	r4, [sp, #48]	; 0x30
   1526c:	adds	r4, r4, r8
   15270:	adc	r5, r5, r9
   15274:	mov	r0, r4
   15278:	mov	r1, r5
   1527c:	ldrd	r2, [sp, #24]
   15280:	eor	r2, r2, r4
   15284:	eor	r3, r3, r5
   15288:	mov	r8, r3
   1528c:	mov	r9, r2
   15290:	ldrd	r6, [sp, #104]	; 0x68
   15294:	adds	r6, r6, r3
   15298:	adc	r7, r7, r2
   1529c:	ldrd	r4, [sp, #48]	; 0x30
   152a0:	eor	r4, r4, r6
   152a4:	eor	r5, r5, r7
   152a8:	lsr	ip, r4, #24
   152ac:	orr	r2, ip, r5, lsl #8
   152b0:	lsr	ip, r5, #24
   152b4:	orr	r3, ip, r4, lsl #8
   152b8:	add	ip, sp, #304	; 0x130
   152bc:	ldrd	r4, [ip]
   152c0:	adds	r4, r4, r0
   152c4:	adc	r5, r5, r1
   152c8:	adds	r4, r4, r2
   152cc:	adc	r5, r5, r3
   152d0:	strd	r4, [sp, #64]	; 0x40
   152d4:	eor	r4, r4, r8
   152d8:	eor	r5, r5, r9
   152dc:	lsr	ip, r4, #16
   152e0:	orr	r1, ip, r5, lsl #16
   152e4:	str	r1, [sp, #24]
   152e8:	lsr	r1, r5, #16
   152ec:	orr	r1, r1, r4, lsl #16
   152f0:	str	r1, [sp, #28]
   152f4:	ldrd	r8, [sp, #24]
   152f8:	adds	r8, r8, r6
   152fc:	adc	r9, r9, r7
   15300:	mov	r0, r8
   15304:	mov	r1, r9
   15308:	strd	r0, [sp, #104]	; 0x68
   1530c:	eor	r0, r0, r2
   15310:	eor	r1, r1, r3
   15314:	mov	r3, r1
   15318:	lsl	r1, r1, #1
   1531c:	orr	r1, r1, r0, lsr #31
   15320:	str	r1, [sp, #52]	; 0x34
   15324:	lsl	r2, r0, #1
   15328:	orr	r3, r2, r3, lsr #31
   1532c:	str	r3, [sp, #48]	; 0x30
   15330:	add	r3, sp, #352	; 0x160
   15334:	ldrd	r0, [r3]
   15338:	ldrd	r6, [sp, #80]	; 0x50
   1533c:	adds	r0, r0, r6
   15340:	adc	r1, r1, r7
   15344:	ldrd	r4, [sp, #16]
   15348:	adds	r4, r4, r0
   1534c:	adc	r5, r5, r1
   15350:	mov	r0, r4
   15354:	mov	r1, r5
   15358:	ldrd	r2, [sp, #32]
   1535c:	eor	r2, r2, r4
   15360:	eor	r3, r3, r5
   15364:	mov	r4, r3
   15368:	mov	r5, r2
   1536c:	ldrd	r6, [sp, #112]	; 0x70
   15370:	mov	r8, r3
   15374:	mov	r9, r2
   15378:	adds	r6, r6, r4
   1537c:	adc	r7, r7, r5
   15380:	ldrd	r4, [sp, #16]
   15384:	eor	r4, r4, r6
   15388:	eor	r5, r5, r7
   1538c:	lsr	ip, r4, #24
   15390:	orr	r2, ip, r5, lsl #8
   15394:	lsr	ip, r5, #24
   15398:	orr	r3, ip, r4, lsl #8
   1539c:	add	ip, sp, #392	; 0x188
   153a0:	ldrd	r4, [ip]
   153a4:	adds	r4, r4, r0
   153a8:	adc	r5, r5, r1
   153ac:	adds	r4, r4, r2
   153b0:	adc	r5, r5, r3
   153b4:	mov	r0, r8
   153b8:	mov	r1, r9
   153bc:	strd	r4, [sp, #80]	; 0x50
   153c0:	eor	r0, r0, r4
   153c4:	eor	r1, r1, r5
   153c8:	lsr	ip, r0, #16
   153cc:	orr	r4, ip, r1, lsl #16
   153d0:	lsr	r1, r1, #16
   153d4:	orr	r5, r1, r0, lsl #16
   153d8:	adds	r6, r6, r4
   153dc:	adc	r7, r7, r5
   153e0:	eor	r2, r2, r6
   153e4:	eor	r3, r3, r7
   153e8:	lsl	r1, r3, #1
   153ec:	orr	r1, r1, r2, lsr #31
   153f0:	str	r1, [sp, #20]
   153f4:	lsl	r2, r2, #1
   153f8:	orr	r3, r2, r3, lsr #31
   153fc:	str	r3, [sp, #16]
   15400:	add	r3, sp, #384	; 0x180
   15404:	ldrd	r0, [r3]
   15408:	ldrd	r2, [sp, #72]	; 0x48
   1540c:	adds	r0, r0, r2
   15410:	adc	r1, r1, r3
   15414:	ldrd	r2, [sp, #40]	; 0x28
   15418:	adds	r2, r2, r0
   1541c:	adc	r3, r3, r1
   15420:	mov	r0, r2
   15424:	mov	r1, r3
   15428:	eor	r4, r4, r2
   1542c:	eor	r5, r5, r3
   15430:	str	r5, [sp, #32]
   15434:	str	r4, [sp, #36]	; 0x24
   15438:	ldrd	r4, [sp, #32]
   1543c:	ldrd	r2, [sp, #104]	; 0x68
   15440:	adds	r2, r2, r4
   15444:	adc	r3, r3, r5
   15448:	mov	r8, r2
   1544c:	mov	r9, r3
   15450:	ldrd	r4, [sp, #40]	; 0x28
   15454:	eor	r4, r4, r2
   15458:	eor	r5, r5, r3
   1545c:	lsr	ip, r4, #24
   15460:	orr	r2, ip, r5, lsl #8
   15464:	lsr	ip, r5, #24
   15468:	orr	r3, ip, r4, lsl #8
   1546c:	add	ip, sp, #280	; 0x118
   15470:	ldrd	r4, [ip]
   15474:	adds	r4, r4, r0
   15478:	adc	r5, r5, r1
   1547c:	adds	r4, r4, r2
   15480:	adc	r5, r5, r3
   15484:	ldrd	r0, [sp, #32]
   15488:	strd	r4, [sp, #72]	; 0x48
   1548c:	eor	r0, r0, r4
   15490:	eor	r1, r1, r5
   15494:	lsr	ip, r0, #16
   15498:	orr	ip, ip, r1, lsl #16
   1549c:	str	ip, [sp, #32]
   154a0:	lsr	r1, r1, #16
   154a4:	orr	r1, r1, r0, lsl #16
   154a8:	str	r1, [sp, #36]	; 0x24
   154ac:	ldrd	r0, [sp, #32]
   154b0:	adds	r0, r0, r8
   154b4:	adc	r1, r1, r9
   154b8:	mov	r8, r0
   154bc:	mov	r9, r1
   154c0:	strd	r8, [sp, #104]	; 0x68
   154c4:	eor	r8, r8, r2
   154c8:	eor	r9, r9, r3
   154cc:	lsl	r1, r9, #1
   154d0:	orr	r1, r1, r8, lsr #31
   154d4:	str	r1, [sp, #44]	; 0x2c
   154d8:	lsl	r2, r8, #1
   154dc:	orr	r3, r2, r9, lsr #31
   154e0:	str	r3, [sp, #40]	; 0x28
   154e4:	add	r3, sp, #360	; 0x168
   154e8:	ldrd	r8, [r3]
   154ec:	ldrd	r4, [sp, #88]	; 0x58
   154f0:	adds	r8, r8, r4
   154f4:	adc	r9, r9, r5
   154f8:	ldrd	r4, [sp, #48]	; 0x30
   154fc:	adds	r4, r4, r8
   15500:	adc	r5, r5, r9
   15504:	mov	r0, r4
   15508:	mov	r1, r5
   1550c:	ldrd	r2, [sp]
   15510:	eor	r2, r2, r4
   15514:	eor	r3, r3, r5
   15518:	mov	r8, r3
   1551c:	mov	r9, r2
   15520:	adds	r6, r6, r3
   15524:	adc	r7, r7, r2
   15528:	ldrd	r4, [sp, #48]	; 0x30
   1552c:	eor	r4, r4, r6
   15530:	eor	r5, r5, r7
   15534:	lsr	ip, r4, #24
   15538:	orr	r2, ip, r5, lsl #8
   1553c:	lsr	ip, r5, #24
   15540:	orr	r3, ip, r4, lsl #8
   15544:	add	ip, sp, #368	; 0x170
   15548:	ldrd	r4, [ip]
   1554c:	adds	r4, r4, r0
   15550:	adc	r5, r5, r1
   15554:	adds	r4, r4, r2
   15558:	adc	r5, r5, r3
   1555c:	mov	r0, r4
   15560:	mov	r1, r5
   15564:	strd	r0, [sp, #88]	; 0x58
   15568:	eor	r0, r0, r8
   1556c:	eor	r1, r1, r9
   15570:	mov	r9, r1
   15574:	lsr	ip, r0, #16
   15578:	orr	r1, ip, r1, lsl #16
   1557c:	str	r1, [sp]
   15580:	lsr	r1, r9, #16
   15584:	orr	r1, r1, r0, lsl #16
   15588:	str	r1, [sp, #4]
   1558c:	ldrd	r4, [sp]
   15590:	adds	r4, r4, r6
   15594:	adc	r5, r5, r7
   15598:	strd	r4, [sp, #112]	; 0x70
   1559c:	mov	r8, r4
   155a0:	mov	r9, r5
   155a4:	eor	r8, r8, r2
   155a8:	eor	r9, r9, r3
   155ac:	lsl	r1, r9, #1
   155b0:	orr	r1, r1, r8, lsr #31
   155b4:	str	r1, [sp, #52]	; 0x34
   155b8:	lsl	r2, r8, #1
   155bc:	orr	r3, r2, r9, lsr #31
   155c0:	str	r3, [sp, #48]	; 0x30
   155c4:	add	r3, sp, #320	; 0x140
   155c8:	ldrd	r0, [r3]
   155cc:	ldrd	r4, [sp, #64]	; 0x40
   155d0:	adds	r0, r0, r4
   155d4:	adc	r1, r1, r5
   155d8:	ldrd	r4, [sp, #16]
   155dc:	adds	r4, r4, r0
   155e0:	adc	r5, r5, r1
   155e4:	mov	r0, r4
   155e8:	mov	r1, r5
   155ec:	ldrd	r2, [sp, #8]
   155f0:	eor	r2, r2, r4
   155f4:	eor	r3, r3, r5
   155f8:	mov	r8, r3
   155fc:	mov	r9, r2
   15600:	ldrd	r6, [sp, #96]	; 0x60
   15604:	adds	r6, r6, r3
   15608:	adc	r7, r7, r2
   1560c:	ldrd	r4, [sp, #16]
   15610:	eor	r4, r4, r6
   15614:	eor	r5, r5, r7
   15618:	lsr	ip, r4, #24
   1561c:	orr	r2, ip, r5, lsl #8
   15620:	lsr	ip, r5, #24
   15624:	orr	r3, ip, r4, lsl #8
   15628:	add	ip, sp, #336	; 0x150
   1562c:	ldrd	r4, [ip]
   15630:	adds	r4, r4, r0
   15634:	adc	r5, r5, r1
   15638:	adds	r4, r4, r2
   1563c:	adc	r5, r5, r3
   15640:	strd	r4, [sp, #64]	; 0x40
   15644:	eor	r4, r4, r8
   15648:	eor	r5, r5, r9
   1564c:	lsr	ip, r4, #16
   15650:	orr	r1, ip, r5, lsl #16
   15654:	str	r1, [sp, #8]
   15658:	lsr	r1, r5, #16
   1565c:	orr	r1, r1, r4, lsl #16
   15660:	str	r1, [sp, #12]
   15664:	ldrd	r4, [sp, #8]
   15668:	adds	r4, r4, r6
   1566c:	adc	r5, r5, r7
   15670:	mov	r8, r4
   15674:	mov	r9, r5
   15678:	eor	r2, r2, r4
   1567c:	eor	r3, r3, r5
   15680:	lsl	r1, r3, #1
   15684:	orr	r1, r1, r2, lsr #31
   15688:	str	r1, [sp, #20]
   1568c:	lsl	r2, r2, #1
   15690:	orr	r3, r2, r3, lsr #31
   15694:	str	r3, [sp, #16]
   15698:	add	r3, sp, #296	; 0x128
   1569c:	ldrd	r0, [r3]
   156a0:	ldrd	r2, [sp, #80]	; 0x50
   156a4:	adds	r0, r0, r2
   156a8:	adc	r1, r1, r3
   156ac:	ldrd	r4, [sp, #56]	; 0x38
   156b0:	adds	r2, r4, r0
   156b4:	adc	r3, r5, r1
   156b8:	mov	r0, r2
   156bc:	mov	r1, r3
   156c0:	ldrd	r2, [sp, #24]
   156c4:	eor	r2, r2, r0
   156c8:	eor	r3, r3, r1
   156cc:	str	r3, [sp, #24]
   156d0:	str	r2, [sp, #28]
   156d4:	ldrd	r6, [sp, #120]	; 0x78
   156d8:	ldrd	r2, [sp, #24]
   156dc:	adds	r6, r6, r2
   156e0:	adc	r7, r7, r3
   156e4:	mov	r2, r4
   156e8:	mov	r3, r5
   156ec:	eor	r2, r2, r6
   156f0:	eor	r3, r3, r7
   156f4:	mov	r4, r2
   156f8:	lsr	ip, r2, #24
   156fc:	orr	r2, ip, r3, lsl #8
   15700:	lsr	ip, r3, #24
   15704:	orr	r3, ip, r4, lsl #8
   15708:	add	ip, sp, #376	; 0x178
   1570c:	ldrd	r4, [ip]
   15710:	adds	r4, r4, r0
   15714:	adc	r5, r5, r1
   15718:	adds	r4, r4, r2
   1571c:	adc	r5, r5, r3
   15720:	ldrd	r0, [sp, #24]
   15724:	strd	r4, [sp, #80]	; 0x50
   15728:	eor	r0, r0, r4
   1572c:	eor	r1, r1, r5
   15730:	lsr	ip, r0, #16
   15734:	orr	ip, ip, r1, lsl #16
   15738:	str	ip, [sp, #24]
   1573c:	lsr	r1, r1, #16
   15740:	orr	r1, r1, r0, lsl #16
   15744:	str	r1, [sp, #28]
   15748:	ldrd	r0, [sp, #24]
   1574c:	adds	r0, r0, r6
   15750:	adc	r1, r1, r7
   15754:	mov	r6, r0
   15758:	mov	r7, r1
   1575c:	eor	r2, r2, r0
   15760:	eor	r3, r3, r1
   15764:	lsl	r1, r3, #1
   15768:	orr	r5, r1, r2, lsr #31
   1576c:	lsl	r2, r2, #1
   15770:	orr	r4, r2, r3, lsr #31
   15774:	add	r3, sp, #288	; 0x120
   15778:	ldrd	r0, [r3]
   1577c:	ldrd	r2, [sp, #72]	; 0x48
   15780:	adds	r0, r0, r2
   15784:	adc	r1, r1, r3
   15788:	adds	r0, r0, r4
   1578c:	adc	r1, r1, r5
   15790:	ldrd	r2, [sp]
   15794:	eor	r2, r2, r0
   15798:	eor	r3, r3, r1
   1579c:	strd	r2, [sp, #56]	; 0x38
   157a0:	ldrd	r2, [sp, #56]	; 0x38
   157a4:	str	r3, [sp]
   157a8:	str	r2, [sp, #4]
   157ac:	ldrd	r2, [sp]
   157b0:	adds	r2, r2, r8
   157b4:	adc	r3, r3, r9
   157b8:	mov	r8, r2
   157bc:	mov	r9, r3
   157c0:	eor	r4, r4, r2
   157c4:	eor	r5, r5, r3
   157c8:	lsr	ip, r4, #24
   157cc:	orr	r2, ip, r5, lsl #8
   157d0:	lsr	ip, r5, #24
   157d4:	orr	r3, ip, r4, lsl #8
   157d8:	add	ip, sp, #368	; 0x170
   157dc:	ldrd	r4, [ip]
   157e0:	adds	r4, r4, r0
   157e4:	adc	r5, r5, r1
   157e8:	adds	r4, r4, r2
   157ec:	adc	r5, r5, r3
   157f0:	ldrd	r0, [sp]
   157f4:	strd	r4, [sp, #72]	; 0x48
   157f8:	eor	r0, r0, r4
   157fc:	eor	r1, r1, r5
   15800:	lsr	ip, r0, #16
   15804:	orr	ip, ip, r1, lsl #16
   15808:	str	ip, [sp]
   1580c:	lsr	r1, r1, #16
   15810:	orr	r1, r1, r0, lsl #16
   15814:	str	r1, [sp, #4]
   15818:	ldrd	r4, [sp]
   1581c:	adds	r4, r4, r8
   15820:	adc	r5, r5, r9
   15824:	strd	r4, [sp, #96]	; 0x60
   15828:	mov	r0, r4
   1582c:	mov	r1, r5
   15830:	eor	r0, r0, r2
   15834:	eor	r1, r1, r3
   15838:	mov	r3, r1
   1583c:	lsl	r1, r1, #1
   15840:	orr	r1, r1, r0, lsr #31
   15844:	str	r1, [sp, #60]	; 0x3c
   15848:	lsl	r2, r0, #1
   1584c:	orr	r3, r2, r3, lsr #31
   15850:	str	r3, [sp, #56]	; 0x38
   15854:	add	r3, sp, #320	; 0x140
   15858:	ldrd	r8, [r3]
   1585c:	ldrd	r4, [sp, #88]	; 0x58
   15860:	adds	r8, r8, r4
   15864:	adc	r9, r9, r5
   15868:	ldrd	r2, [sp, #40]	; 0x28
   1586c:	adds	r2, r2, r8
   15870:	adc	r3, r3, r9
   15874:	mov	r0, r2
   15878:	mov	r1, r3
   1587c:	ldrd	r4, [sp, #8]
   15880:	eor	r4, r4, r2
   15884:	eor	r5, r5, r3
   15888:	mov	r8, r5
   1588c:	mov	r9, r4
   15890:	adds	r6, r6, r5
   15894:	adc	r7, r7, r4
   15898:	ldrd	r4, [sp, #40]	; 0x28
   1589c:	eor	r4, r4, r6
   158a0:	eor	r5, r5, r7
   158a4:	lsr	ip, r4, #24
   158a8:	orr	r2, ip, r5, lsl #8
   158ac:	lsr	ip, r5, #24
   158b0:	orr	r3, ip, r4, lsl #8
   158b4:	add	ip, sp, #352	; 0x160
   158b8:	ldrd	r4, [ip]
   158bc:	adds	r4, r4, r0
   158c0:	adc	r5, r5, r1
   158c4:	adds	r4, r4, r2
   158c8:	adc	r5, r5, r3
   158cc:	mov	r0, r4
   158d0:	mov	r1, r5
   158d4:	strd	r0, [sp, #88]	; 0x58
   158d8:	eor	r0, r0, r8
   158dc:	eor	r1, r1, r9
   158e0:	mov	r9, r1
   158e4:	lsr	ip, r0, #16
   158e8:	orr	r1, ip, r1, lsl #16
   158ec:	str	r1, [sp, #8]
   158f0:	lsr	r1, r9, #16
   158f4:	orr	r1, r1, r0, lsl #16
   158f8:	str	r1, [sp, #12]
   158fc:	ldrd	r4, [sp, #8]
   15900:	adds	r4, r4, r6
   15904:	adc	r5, r5, r7
   15908:	strd	r4, [sp, #120]	; 0x78
   1590c:	mov	r0, r4
   15910:	mov	r1, r5
   15914:	eor	r0, r0, r2
   15918:	eor	r1, r1, r3
   1591c:	mov	r3, r1
   15920:	lsl	r1, r1, #1
   15924:	orr	r1, r1, r0, lsr #31
   15928:	str	r1, [sp, #44]	; 0x2c
   1592c:	lsl	r2, r0, #1
   15930:	orr	r3, r2, r3, lsr #31
   15934:	str	r3, [sp, #40]	; 0x28
   15938:	add	r3, sp, #272	; 0x110
   1593c:	ldrd	r8, [r3]
   15940:	ldrd	r4, [sp, #64]	; 0x40
   15944:	adds	r8, r8, r4
   15948:	adc	r9, r9, r5
   1594c:	ldrd	r4, [sp, #48]	; 0x30
   15950:	adds	r4, r4, r8
   15954:	adc	r5, r5, r9
   15958:	mov	r0, r4
   1595c:	mov	r1, r5
   15960:	ldrd	r2, [sp, #24]
   15964:	eor	r2, r2, r4
   15968:	eor	r3, r3, r5
   1596c:	mov	r8, r3
   15970:	mov	r9, r2
   15974:	ldrd	r6, [sp, #104]	; 0x68
   15978:	adds	r6, r6, r3
   1597c:	adc	r7, r7, r2
   15980:	ldrd	r4, [sp, #48]	; 0x30
   15984:	eor	r4, r4, r6
   15988:	eor	r5, r5, r7
   1598c:	lsr	ip, r4, #24
   15990:	orr	r2, ip, r5, lsl #8
   15994:	lsr	ip, r5, #24
   15998:	orr	r3, ip, r4, lsl #8
   1599c:	add	ip, sp, #360	; 0x168
   159a0:	ldrd	r4, [ip]
   159a4:	adds	r4, r4, r0
   159a8:	adc	r5, r5, r1
   159ac:	adds	r4, r4, r2
   159b0:	adc	r5, r5, r3
   159b4:	strd	r4, [sp, #64]	; 0x40
   159b8:	eor	r4, r4, r8
   159bc:	eor	r5, r5, r9
   159c0:	lsr	ip, r4, #16
   159c4:	orr	r1, ip, r5, lsl #16
   159c8:	str	r1, [sp, #24]
   159cc:	lsr	r1, r5, #16
   159d0:	orr	r1, r1, r4, lsl #16
   159d4:	str	r1, [sp, #28]
   159d8:	ldrd	r8, [sp, #24]
   159dc:	adds	r8, r8, r6
   159e0:	adc	r9, r9, r7
   159e4:	mov	r0, r8
   159e8:	mov	r1, r9
   159ec:	strd	r0, [sp, #104]	; 0x68
   159f0:	eor	r0, r0, r2
   159f4:	eor	r1, r1, r3
   159f8:	mov	r3, r1
   159fc:	lsl	r1, r1, #1
   15a00:	orr	r1, r1, r0, lsr #31
   15a04:	str	r1, [sp, #52]	; 0x34
   15a08:	lsl	r2, r0, #1
   15a0c:	orr	r3, r2, r3, lsr #31
   15a10:	str	r3, [sp, #48]	; 0x30
   15a14:	add	r3, sp, #336	; 0x150
   15a18:	ldrd	r0, [r3]
   15a1c:	ldrd	r6, [sp, #80]	; 0x50
   15a20:	adds	r0, r0, r6
   15a24:	adc	r1, r1, r7
   15a28:	ldrd	r4, [sp, #16]
   15a2c:	adds	r4, r4, r0
   15a30:	adc	r5, r5, r1
   15a34:	mov	r0, r4
   15a38:	mov	r1, r5
   15a3c:	ldrd	r2, [sp, #32]
   15a40:	eor	r2, r2, r4
   15a44:	eor	r3, r3, r5
   15a48:	mov	r4, r3
   15a4c:	mov	r5, r2
   15a50:	ldrd	r6, [sp, #112]	; 0x70
   15a54:	mov	r8, r3
   15a58:	mov	r9, r2
   15a5c:	adds	r6, r6, r4
   15a60:	adc	r7, r7, r5
   15a64:	ldrd	r4, [sp, #16]
   15a68:	eor	r4, r4, r6
   15a6c:	eor	r5, r5, r7
   15a70:	lsr	ip, r4, #24
   15a74:	orr	r2, ip, r5, lsl #8
   15a78:	lsr	ip, r5, #24
   15a7c:	orr	r3, ip, r4, lsl #8
   15a80:	add	ip, sp, #296	; 0x128
   15a84:	ldrd	r4, [ip]
   15a88:	adds	r4, r4, r0
   15a8c:	adc	r5, r5, r1
   15a90:	adds	r4, r4, r2
   15a94:	adc	r5, r5, r3
   15a98:	mov	r0, r8
   15a9c:	mov	r1, r9
   15aa0:	strd	r4, [sp, #80]	; 0x50
   15aa4:	eor	r0, r0, r4
   15aa8:	eor	r1, r1, r5
   15aac:	lsr	ip, r0, #16
   15ab0:	orr	r4, ip, r1, lsl #16
   15ab4:	lsr	r1, r1, #16
   15ab8:	orr	r5, r1, r0, lsl #16
   15abc:	adds	r6, r6, r4
   15ac0:	adc	r7, r7, r5
   15ac4:	eor	r2, r2, r6
   15ac8:	eor	r3, r3, r7
   15acc:	lsl	r1, r3, #1
   15ad0:	orr	r1, r1, r2, lsr #31
   15ad4:	str	r1, [sp, #20]
   15ad8:	lsl	r2, r2, #1
   15adc:	orr	r3, r2, r3, lsr #31
   15ae0:	str	r3, [sp, #16]
   15ae4:	add	r3, sp, #304	; 0x130
   15ae8:	ldrd	r0, [r3]
   15aec:	ldrd	r2, [sp, #72]	; 0x48
   15af0:	adds	r0, r0, r2
   15af4:	adc	r1, r1, r3
   15af8:	ldrd	r2, [sp, #40]	; 0x28
   15afc:	adds	r2, r2, r0
   15b00:	adc	r3, r3, r1
   15b04:	mov	r0, r2
   15b08:	mov	r1, r3
   15b0c:	eor	r4, r4, r2
   15b10:	eor	r5, r5, r3
   15b14:	str	r5, [sp, #32]
   15b18:	str	r4, [sp, #36]	; 0x24
   15b1c:	ldrd	r4, [sp, #32]
   15b20:	ldrd	r2, [sp, #104]	; 0x68
   15b24:	adds	r2, r2, r4
   15b28:	adc	r3, r3, r5
   15b2c:	mov	r8, r2
   15b30:	mov	r9, r3
   15b34:	ldrd	r4, [sp, #40]	; 0x28
   15b38:	eor	r4, r4, r2
   15b3c:	eor	r5, r5, r3
   15b40:	lsr	ip, r4, #24
   15b44:	orr	r2, ip, r5, lsl #8
   15b48:	lsr	ip, r5, #24
   15b4c:	orr	r3, ip, r4, lsl #8
   15b50:	add	ip, sp, #376	; 0x178
   15b54:	ldrd	r4, [ip]
   15b58:	adds	r4, r4, r0
   15b5c:	adc	r5, r5, r1
   15b60:	adds	r4, r4, r2
   15b64:	adc	r5, r5, r3
   15b68:	ldrd	r0, [sp, #32]
   15b6c:	strd	r4, [sp, #72]	; 0x48
   15b70:	eor	r0, r0, r4
   15b74:	eor	r1, r1, r5
   15b78:	lsr	ip, r0, #16
   15b7c:	orr	ip, ip, r1, lsl #16
   15b80:	str	ip, [sp, #32]
   15b84:	lsr	r1, r1, #16
   15b88:	orr	r1, r1, r0, lsl #16
   15b8c:	str	r1, [sp, #36]	; 0x24
   15b90:	ldrd	r0, [sp, #32]
   15b94:	adds	r0, r0, r8
   15b98:	adc	r1, r1, r9
   15b9c:	mov	r8, r0
   15ba0:	mov	r9, r1
   15ba4:	strd	r8, [sp, #104]	; 0x68
   15ba8:	eor	r8, r8, r2
   15bac:	eor	r9, r9, r3
   15bb0:	lsl	r1, r9, #1
   15bb4:	orr	r1, r1, r8, lsr #31
   15bb8:	str	r1, [sp, #44]	; 0x2c
   15bbc:	lsl	r2, r8, #1
   15bc0:	orr	r3, r2, r9, lsr #31
   15bc4:	str	r3, [sp, #40]	; 0x28
   15bc8:	add	r3, sp, #328	; 0x148
   15bcc:	ldrd	r8, [r3]
   15bd0:	ldrd	r4, [sp, #88]	; 0x58
   15bd4:	adds	r8, r8, r4
   15bd8:	adc	r9, r9, r5
   15bdc:	ldrd	r4, [sp, #48]	; 0x30
   15be0:	adds	r4, r4, r8
   15be4:	adc	r5, r5, r9
   15be8:	mov	r0, r4
   15bec:	mov	r1, r5
   15bf0:	ldrd	r2, [sp]
   15bf4:	eor	r2, r2, r4
   15bf8:	eor	r3, r3, r5
   15bfc:	mov	r8, r3
   15c00:	mov	r9, r2
   15c04:	adds	r6, r6, r3
   15c08:	adc	r7, r7, r2
   15c0c:	ldrd	r4, [sp, #48]	; 0x30
   15c10:	eor	r4, r4, r6
   15c14:	eor	r5, r5, r7
   15c18:	lsr	ip, r4, #24
   15c1c:	orr	r2, ip, r5, lsl #8
   15c20:	lsr	ip, r5, #24
   15c24:	orr	r3, ip, r4, lsl #8
   15c28:	add	ip, sp, #312	; 0x138
   15c2c:	ldrd	r4, [ip]
   15c30:	adds	r4, r4, r0
   15c34:	adc	r5, r5, r1
   15c38:	adds	r4, r4, r2
   15c3c:	adc	r5, r5, r3
   15c40:	mov	r0, r4
   15c44:	mov	r1, r5
   15c48:	strd	r0, [sp, #88]	; 0x58
   15c4c:	eor	r0, r0, r8
   15c50:	eor	r1, r1, r9
   15c54:	mov	r9, r1
   15c58:	lsr	ip, r0, #16
   15c5c:	orr	r1, ip, r1, lsl #16
   15c60:	str	r1, [sp]
   15c64:	lsr	r1, r9, #16
   15c68:	orr	r1, r1, r0, lsl #16
   15c6c:	str	r1, [sp, #4]
   15c70:	ldrd	r4, [sp]
   15c74:	adds	r4, r4, r6
   15c78:	adc	r5, r5, r7
   15c7c:	strd	r4, [sp, #112]	; 0x70
   15c80:	mov	r8, r4
   15c84:	mov	r9, r5
   15c88:	eor	r8, r8, r2
   15c8c:	eor	r9, r9, r3
   15c90:	lsl	r1, r9, #1
   15c94:	orr	r1, r1, r8, lsr #31
   15c98:	str	r1, [sp, #52]	; 0x34
   15c9c:	lsl	r2, r8, #1
   15ca0:	orr	r3, r2, r9, lsr #31
   15ca4:	str	r3, [sp, #48]	; 0x30
   15ca8:	add	r3, sp, #392	; 0x188
   15cac:	ldrd	r0, [r3]
   15cb0:	ldrd	r4, [sp, #64]	; 0x40
   15cb4:	adds	r0, r0, r4
   15cb8:	adc	r1, r1, r5
   15cbc:	ldrd	r4, [sp, #16]
   15cc0:	adds	r4, r4, r0
   15cc4:	adc	r5, r5, r1
   15cc8:	mov	r0, r4
   15ccc:	mov	r1, r5
   15cd0:	ldrd	r2, [sp, #8]
   15cd4:	eor	r2, r2, r4
   15cd8:	eor	r3, r3, r5
   15cdc:	mov	r8, r3
   15ce0:	mov	r9, r2
   15ce4:	ldrd	r6, [sp, #96]	; 0x60
   15ce8:	adds	r6, r6, r3
   15cec:	adc	r7, r7, r2
   15cf0:	ldrd	r4, [sp, #16]
   15cf4:	eor	r4, r4, r6
   15cf8:	eor	r5, r5, r7
   15cfc:	lsr	ip, r4, #24
   15d00:	orr	r2, ip, r5, lsl #8
   15d04:	lsr	ip, r5, #24
   15d08:	orr	r3, ip, r4, lsl #8
   15d0c:	add	ip, sp, #384	; 0x180
   15d10:	ldrd	r4, [ip]
   15d14:	adds	r4, r4, r0
   15d18:	adc	r5, r5, r1
   15d1c:	adds	r4, r4, r2
   15d20:	adc	r5, r5, r3
   15d24:	strd	r4, [sp, #64]	; 0x40
   15d28:	eor	r4, r4, r8
   15d2c:	eor	r5, r5, r9
   15d30:	lsr	ip, r4, #16
   15d34:	orr	r1, ip, r5, lsl #16
   15d38:	str	r1, [sp, #8]
   15d3c:	lsr	r1, r5, #16
   15d40:	orr	r1, r1, r4, lsl #16
   15d44:	str	r1, [sp, #12]
   15d48:	ldrd	r4, [sp, #8]
   15d4c:	adds	r4, r4, r6
   15d50:	adc	r5, r5, r7
   15d54:	mov	r8, r4
   15d58:	mov	r9, r5
   15d5c:	eor	r2, r2, r4
   15d60:	eor	r3, r3, r5
   15d64:	lsl	r1, r3, #1
   15d68:	orr	r1, r1, r2, lsr #31
   15d6c:	str	r1, [sp, #20]
   15d70:	lsl	r2, r2, #1
   15d74:	orr	r3, r2, r3, lsr #31
   15d78:	str	r3, [sp, #16]
   15d7c:	add	r3, sp, #280	; 0x118
   15d80:	ldrd	r0, [r3]
   15d84:	ldrd	r2, [sp, #80]	; 0x50
   15d88:	adds	r0, r0, r2
   15d8c:	adc	r1, r1, r3
   15d90:	ldrd	r4, [sp, #56]	; 0x38
   15d94:	adds	r2, r4, r0
   15d98:	adc	r3, r5, r1
   15d9c:	mov	r0, r2
   15da0:	mov	r1, r3
   15da4:	ldrd	r2, [sp, #24]
   15da8:	eor	r2, r2, r0
   15dac:	eor	r3, r3, r1
   15db0:	str	r3, [sp, #24]
   15db4:	str	r2, [sp, #28]
   15db8:	ldrd	r6, [sp, #120]	; 0x78
   15dbc:	ldrd	r2, [sp, #24]
   15dc0:	adds	r6, r6, r2
   15dc4:	adc	r7, r7, r3
   15dc8:	mov	r2, r4
   15dcc:	mov	r3, r5
   15dd0:	eor	r2, r2, r6
   15dd4:	eor	r3, r3, r7
   15dd8:	mov	r4, r2
   15ddc:	lsr	ip, r2, #24
   15de0:	orr	r2, ip, r3, lsl #8
   15de4:	lsr	ip, r3, #24
   15de8:	orr	r3, ip, r4, lsl #8
   15dec:	add	ip, sp, #344	; 0x158
   15df0:	ldrd	r4, [ip]
   15df4:	adds	r4, r4, r0
   15df8:	adc	r5, r5, r1
   15dfc:	adds	r4, r4, r2
   15e00:	adc	r5, r5, r3
   15e04:	ldrd	r0, [sp, #24]
   15e08:	strd	r4, [sp, #80]	; 0x50
   15e0c:	eor	r0, r0, r4
   15e10:	eor	r1, r1, r5
   15e14:	lsr	ip, r0, #16
   15e18:	orr	ip, ip, r1, lsl #16
   15e1c:	str	ip, [sp, #24]
   15e20:	lsr	r1, r1, #16
   15e24:	orr	r1, r1, r0, lsl #16
   15e28:	str	r1, [sp, #28]
   15e2c:	ldrd	r0, [sp, #24]
   15e30:	adds	r0, r0, r6
   15e34:	adc	r1, r1, r7
   15e38:	mov	r6, r0
   15e3c:	mov	r7, r1
   15e40:	eor	r2, r2, r0
   15e44:	eor	r3, r3, r1
   15e48:	lsl	r1, r3, #1
   15e4c:	orr	r5, r1, r2, lsr #31
   15e50:	lsl	r2, r2, #1
   15e54:	orr	r4, r2, r3, lsr #31
   15e58:	add	r3, sp, #368	; 0x170
   15e5c:	ldrd	r0, [r3]
   15e60:	ldrd	r2, [sp, #72]	; 0x48
   15e64:	adds	r0, r0, r2
   15e68:	adc	r1, r1, r3
   15e6c:	adds	r0, r0, r4
   15e70:	adc	r1, r1, r5
   15e74:	ldrd	r2, [sp]
   15e78:	eor	r2, r2, r0
   15e7c:	eor	r3, r3, r1
   15e80:	strd	r2, [sp, #56]	; 0x38
   15e84:	ldrd	r2, [sp, #56]	; 0x38
   15e88:	str	r3, [sp]
   15e8c:	str	r2, [sp, #4]
   15e90:	ldrd	r2, [sp]
   15e94:	adds	r2, r2, r8
   15e98:	adc	r3, r3, r9
   15e9c:	mov	r8, r2
   15ea0:	mov	r9, r3
   15ea4:	eor	r4, r4, r2
   15ea8:	eor	r5, r5, r3
   15eac:	lsr	ip, r4, #24
   15eb0:	orr	r2, ip, r5, lsl #8
   15eb4:	lsr	ip, r5, #24
   15eb8:	orr	r3, ip, r4, lsl #8
   15ebc:	add	ip, sp, #312	; 0x138
   15ec0:	ldrd	r4, [ip]
   15ec4:	adds	r4, r4, r0
   15ec8:	adc	r5, r5, r1
   15ecc:	adds	r4, r4, r2
   15ed0:	adc	r5, r5, r3
   15ed4:	ldrd	r0, [sp]
   15ed8:	strd	r4, [sp, #72]	; 0x48
   15edc:	eor	r0, r0, r4
   15ee0:	eor	r1, r1, r5
   15ee4:	lsr	ip, r0, #16
   15ee8:	orr	ip, ip, r1, lsl #16
   15eec:	str	ip, [sp]
   15ef0:	lsr	r1, r1, #16
   15ef4:	orr	r1, r1, r0, lsl #16
   15ef8:	str	r1, [sp, #4]
   15efc:	ldrd	r4, [sp]
   15f00:	adds	r4, r4, r8
   15f04:	adc	r5, r5, r9
   15f08:	strd	r4, [sp, #96]	; 0x60
   15f0c:	mov	r0, r4
   15f10:	mov	r1, r5
   15f14:	eor	r0, r0, r2
   15f18:	eor	r1, r1, r3
   15f1c:	mov	r3, r1
   15f20:	lsl	r1, r1, #1
   15f24:	orr	r1, r1, r0, lsr #31
   15f28:	str	r1, [sp, #60]	; 0x3c
   15f2c:	lsl	r2, r0, #1
   15f30:	orr	r3, r2, r3, lsr #31
   15f34:	str	r3, [sp, #56]	; 0x38
   15f38:	add	r3, sp, #280	; 0x118
   15f3c:	ldrd	r8, [r3]
   15f40:	ldrd	r4, [sp, #88]	; 0x58
   15f44:	adds	r8, r8, r4
   15f48:	adc	r9, r9, r5
   15f4c:	ldrd	r2, [sp, #40]	; 0x28
   15f50:	adds	r2, r2, r8
   15f54:	adc	r3, r3, r9
   15f58:	mov	r0, r2
   15f5c:	mov	r1, r3
   15f60:	ldrd	r4, [sp, #8]
   15f64:	eor	r4, r4, r2
   15f68:	eor	r5, r5, r3
   15f6c:	mov	r8, r5
   15f70:	mov	r9, r4
   15f74:	adds	r6, r6, r5
   15f78:	adc	r7, r7, r4
   15f7c:	ldrd	r4, [sp, #40]	; 0x28
   15f80:	eor	r4, r4, r6
   15f84:	eor	r5, r5, r7
   15f88:	lsr	ip, r4, #24
   15f8c:	orr	r2, ip, r5, lsl #8
   15f90:	lsr	ip, r5, #24
   15f94:	orr	r3, ip, r4, lsl #8
   15f98:	add	ip, sp, #392	; 0x188
   15f9c:	ldrd	r4, [ip]
   15fa0:	adds	r4, r4, r0
   15fa4:	adc	r5, r5, r1
   15fa8:	adds	r4, r4, r2
   15fac:	adc	r5, r5, r3
   15fb0:	mov	r0, r4
   15fb4:	mov	r1, r5
   15fb8:	strd	r0, [sp, #88]	; 0x58
   15fbc:	eor	r0, r0, r8
   15fc0:	eor	r1, r1, r9
   15fc4:	mov	r9, r1
   15fc8:	lsr	ip, r0, #16
   15fcc:	orr	r1, ip, r1, lsl #16
   15fd0:	str	r1, [sp, #8]
   15fd4:	lsr	r1, r9, #16
   15fd8:	orr	r1, r1, r0, lsl #16
   15fdc:	str	r1, [sp, #12]
   15fe0:	ldrd	r4, [sp, #8]
   15fe4:	adds	r4, r4, r6
   15fe8:	adc	r5, r5, r7
   15fec:	strd	r4, [sp, #120]	; 0x78
   15ff0:	mov	r0, r4
   15ff4:	mov	r1, r5
   15ff8:	eor	r0, r0, r2
   15ffc:	eor	r1, r1, r3
   16000:	mov	r3, r1
   16004:	lsl	r1, r1, #1
   16008:	orr	r1, r1, r0, lsr #31
   1600c:	str	r1, [sp, #44]	; 0x2c
   16010:	lsl	r2, r0, #1
   16014:	orr	r3, r2, r3, lsr #31
   16018:	str	r3, [sp, #40]	; 0x28
   1601c:	add	r3, sp, #384	; 0x180
   16020:	ldrd	r8, [r3]
   16024:	ldrd	r4, [sp, #64]	; 0x40
   16028:	adds	r8, r8, r4
   1602c:	adc	r9, r9, r5
   16030:	ldrd	r4, [sp, #48]	; 0x30
   16034:	adds	r4, r4, r8
   16038:	adc	r5, r5, r9
   1603c:	mov	r0, r4
   16040:	mov	r1, r5
   16044:	ldrd	r2, [sp, #24]
   16048:	eor	r2, r2, r4
   1604c:	eor	r3, r3, r5
   16050:	mov	r8, r3
   16054:	mov	r9, r2
   16058:	ldrd	r6, [sp, #104]	; 0x68
   1605c:	adds	r6, r6, r3
   16060:	adc	r7, r7, r2
   16064:	ldrd	r4, [sp, #48]	; 0x30
   16068:	eor	r4, r4, r6
   1606c:	eor	r5, r5, r7
   16070:	lsr	ip, r4, #24
   16074:	orr	r2, ip, r5, lsl #8
   16078:	lsr	ip, r5, #24
   1607c:	orr	r3, ip, r4, lsl #8
   16080:	add	ip, sp, #376	; 0x178
   16084:	ldrd	r4, [ip]
   16088:	adds	r4, r4, r0
   1608c:	adc	r5, r5, r1
   16090:	adds	r4, r4, r2
   16094:	adc	r5, r5, r3
   16098:	strd	r4, [sp, #64]	; 0x40
   1609c:	eor	r4, r4, r8
   160a0:	eor	r5, r5, r9
   160a4:	lsr	ip, r4, #16
   160a8:	orr	r1, ip, r5, lsl #16
   160ac:	str	r1, [sp, #24]
   160b0:	lsr	r1, r5, #16
   160b4:	orr	r1, r1, r4, lsl #16
   160b8:	str	r1, [sp, #28]
   160bc:	ldrd	r8, [sp, #24]
   160c0:	adds	r8, r8, r6
   160c4:	adc	r9, r9, r7
   160c8:	mov	r0, r8
   160cc:	mov	r1, r9
   160d0:	strd	r0, [sp, #104]	; 0x68
   160d4:	eor	r0, r0, r2
   160d8:	eor	r1, r1, r3
   160dc:	mov	r3, r1
   160e0:	lsl	r1, r1, #1
   160e4:	orr	r1, r1, r0, lsr #31
   160e8:	str	r1, [sp, #52]	; 0x34
   160ec:	lsl	r2, r0, #1
   160f0:	orr	r3, r2, r3, lsr #31
   160f4:	str	r3, [sp, #48]	; 0x30
   160f8:	add	r3, sp, #304	; 0x130
   160fc:	ldrd	r0, [r3]
   16100:	ldrd	r6, [sp, #80]	; 0x50
   16104:	adds	r0, r0, r6
   16108:	adc	r1, r1, r7
   1610c:	ldrd	r4, [sp, #16]
   16110:	adds	r4, r4, r0
   16114:	adc	r5, r5, r1
   16118:	mov	r0, r4
   1611c:	mov	r1, r5
   16120:	ldrd	r2, [sp, #32]
   16124:	eor	r2, r2, r4
   16128:	eor	r3, r3, r5
   1612c:	mov	r4, r3
   16130:	mov	r5, r2
   16134:	ldrd	r6, [sp, #112]	; 0x70
   16138:	mov	r8, r3
   1613c:	mov	r9, r2
   16140:	adds	r6, r6, r4
   16144:	adc	r7, r7, r5
   16148:	ldrd	r4, [sp, #16]
   1614c:	eor	r4, r4, r6
   16150:	eor	r5, r5, r7
   16154:	lsr	ip, r4, #24
   16158:	orr	r2, ip, r5, lsl #8
   1615c:	lsr	ip, r5, #24
   16160:	orr	r3, ip, r4, lsl #8
   16164:	add	ip, sp, #352	; 0x160
   16168:	ldrd	r4, [ip]
   1616c:	adds	r4, r4, r0
   16170:	adc	r5, r5, r1
   16174:	adds	r4, r4, r2
   16178:	adc	r5, r5, r3
   1617c:	mov	r0, r8
   16180:	mov	r1, r9
   16184:	strd	r4, [sp, #80]	; 0x50
   16188:	eor	r0, r0, r4
   1618c:	eor	r1, r1, r5
   16190:	lsr	ip, r0, #16
   16194:	orr	r4, ip, r1, lsl #16
   16198:	lsr	r1, r1, #16
   1619c:	orr	r5, r1, r0, lsl #16
   161a0:	adds	r6, r6, r4
   161a4:	adc	r7, r7, r5
   161a8:	eor	r2, r2, r6
   161ac:	eor	r3, r3, r7
   161b0:	lsl	r1, r3, #1
   161b4:	orr	r1, r1, r2, lsr #31
   161b8:	str	r1, [sp, #20]
   161bc:	lsl	r2, r2, #1
   161c0:	orr	r3, r2, r3, lsr #31
   161c4:	str	r3, [sp, #16]
   161c8:	add	r3, sp, #272	; 0x110
   161cc:	ldrd	r0, [r3]
   161d0:	ldrd	r2, [sp, #72]	; 0x48
   161d4:	adds	r0, r0, r2
   161d8:	adc	r1, r1, r3
   161dc:	ldrd	r2, [sp, #40]	; 0x28
   161e0:	adds	r2, r2, r0
   161e4:	adc	r3, r3, r1
   161e8:	mov	r0, r2
   161ec:	mov	r1, r3
   161f0:	eor	r4, r4, r2
   161f4:	eor	r5, r5, r3
   161f8:	str	r5, [sp, #32]
   161fc:	str	r4, [sp, #36]	; 0x24
   16200:	ldrd	r4, [sp, #32]
   16204:	ldrd	r2, [sp, #104]	; 0x68
   16208:	adds	r2, r2, r4
   1620c:	adc	r3, r3, r5
   16210:	mov	r8, r2
   16214:	mov	r9, r3
   16218:	ldrd	r4, [sp, #40]	; 0x28
   1621c:	eor	r4, r4, r2
   16220:	eor	r5, r5, r3
   16224:	lsr	ip, r4, #24
   16228:	orr	r2, ip, r5, lsl #8
   1622c:	lsr	ip, r5, #24
   16230:	orr	r3, ip, r4, lsl #8
   16234:	add	ip, sp, #328	; 0x148
   16238:	ldrd	r4, [ip]
   1623c:	adds	r4, r4, r0
   16240:	adc	r5, r5, r1
   16244:	adds	r4, r4, r2
   16248:	adc	r5, r5, r3
   1624c:	ldrd	r0, [sp, #32]
   16250:	strd	r4, [sp, #72]	; 0x48
   16254:	eor	r0, r0, r4
   16258:	eor	r1, r1, r5
   1625c:	lsr	ip, r0, #16
   16260:	orr	ip, ip, r1, lsl #16
   16264:	str	ip, [sp, #32]
   16268:	lsr	r1, r1, #16
   1626c:	orr	r1, r1, r0, lsl #16
   16270:	str	r1, [sp, #36]	; 0x24
   16274:	ldrd	r0, [sp, #32]
   16278:	adds	r0, r0, r8
   1627c:	adc	r1, r1, r9
   16280:	mov	r8, r0
   16284:	mov	r9, r1
   16288:	strd	r8, [sp, #104]	; 0x68
   1628c:	eor	r8, r8, r2
   16290:	eor	r9, r9, r3
   16294:	lsl	r1, r9, #1
   16298:	orr	r1, r1, r8, lsr #31
   1629c:	str	r1, [sp, #44]	; 0x2c
   162a0:	lsl	r2, r8, #1
   162a4:	orr	r3, r2, r9, lsr #31
   162a8:	str	r3, [sp, #40]	; 0x28
   162ac:	add	r3, sp, #320	; 0x140
   162b0:	ldrd	r8, [r3]
   162b4:	ldrd	r4, [sp, #88]	; 0x58
   162b8:	adds	r8, r8, r4
   162bc:	adc	r9, r9, r5
   162c0:	ldrd	r4, [sp, #48]	; 0x30
   162c4:	adds	r4, r4, r8
   162c8:	adc	r5, r5, r9
   162cc:	mov	r0, r4
   162d0:	mov	r1, r5
   162d4:	ldrd	r2, [sp]
   162d8:	eor	r2, r2, r4
   162dc:	eor	r3, r3, r5
   162e0:	mov	r8, r3
   162e4:	mov	r9, r2
   162e8:	adds	r6, r6, r3
   162ec:	adc	r7, r7, r2
   162f0:	ldrd	r4, [sp, #48]	; 0x30
   162f4:	eor	r4, r4, r6
   162f8:	eor	r5, r5, r7
   162fc:	lsr	ip, r4, #24
   16300:	orr	r2, ip, r5, lsl #8
   16304:	lsr	ip, r5, #24
   16308:	orr	r3, ip, r4, lsl #8
   1630c:	add	ip, sp, #296	; 0x128
   16310:	ldrd	r4, [ip]
   16314:	adds	r4, r4, r0
   16318:	adc	r5, r5, r1
   1631c:	adds	r4, r4, r2
   16320:	adc	r5, r5, r3
   16324:	mov	r0, r4
   16328:	mov	r1, r5
   1632c:	strd	r0, [sp, #88]	; 0x58
   16330:	eor	r0, r0, r8
   16334:	eor	r1, r1, r9
   16338:	mov	r9, r1
   1633c:	lsr	ip, r0, #16
   16340:	orr	r1, ip, r1, lsl #16
   16344:	str	r1, [sp]
   16348:	lsr	r1, r9, #16
   1634c:	orr	r1, r1, r0, lsl #16
   16350:	str	r1, [sp, #4]
   16354:	ldrd	r4, [sp]
   16358:	adds	r4, r4, r6
   1635c:	adc	r5, r5, r7
   16360:	strd	r4, [sp, #112]	; 0x70
   16364:	mov	r8, r4
   16368:	mov	r9, r5
   1636c:	eor	r8, r8, r2
   16370:	eor	r9, r9, r3
   16374:	lsl	r1, r9, #1
   16378:	orr	r1, r1, r8, lsr #31
   1637c:	str	r1, [sp, #52]	; 0x34
   16380:	lsl	r2, r8, #1
   16384:	orr	r3, r2, r9, lsr #31
   16388:	str	r3, [sp, #48]	; 0x30
   1638c:	add	r3, sp, #344	; 0x158
   16390:	ldrd	r0, [r3]
   16394:	ldrd	r4, [sp, #64]	; 0x40
   16398:	adds	r0, r0, r4
   1639c:	adc	r1, r1, r5
   163a0:	ldrd	r4, [sp, #16]
   163a4:	adds	r4, r4, r0
   163a8:	adc	r5, r5, r1
   163ac:	mov	r0, r4
   163b0:	mov	r1, r5
   163b4:	ldrd	r2, [sp, #8]
   163b8:	eor	r2, r2, r4
   163bc:	eor	r3, r3, r5
   163c0:	mov	r8, r3
   163c4:	mov	r9, r2
   163c8:	ldrd	r6, [sp, #96]	; 0x60
   163cc:	adds	r6, r6, r3
   163d0:	adc	r7, r7, r2
   163d4:	ldrd	r4, [sp, #16]
   163d8:	eor	r4, r4, r6
   163dc:	eor	r5, r5, r7
   163e0:	lsr	ip, r4, #24
   163e4:	orr	r2, ip, r5, lsl #8
   163e8:	lsr	ip, r5, #24
   163ec:	orr	r3, ip, r4, lsl #8
   163f0:	add	ip, sp, #288	; 0x120
   163f4:	ldrd	r4, [ip]
   163f8:	adds	r4, r4, r0
   163fc:	adc	r5, r5, r1
   16400:	adds	r4, r4, r2
   16404:	adc	r5, r5, r3
   16408:	strd	r4, [sp, #64]	; 0x40
   1640c:	eor	r4, r4, r8
   16410:	eor	r5, r5, r9
   16414:	lsr	ip, r4, #16
   16418:	orr	r1, ip, r5, lsl #16
   1641c:	str	r1, [sp, #8]
   16420:	lsr	r1, r5, #16
   16424:	orr	r1, r1, r4, lsl #16
   16428:	str	r1, [sp, #12]
   1642c:	ldrd	r4, [sp, #8]
   16430:	adds	r4, r4, r6
   16434:	adc	r5, r5, r7
   16438:	mov	r8, r4
   1643c:	mov	r9, r5
   16440:	eor	r2, r2, r4
   16444:	eor	r3, r3, r5
   16448:	lsl	r1, r3, #1
   1644c:	orr	r1, r1, r2, lsr #31
   16450:	str	r1, [sp, #20]
   16454:	lsl	r2, r2, #1
   16458:	orr	r3, r2, r3, lsr #31
   1645c:	str	r3, [sp, #16]
   16460:	add	r3, sp, #336	; 0x150
   16464:	ldrd	r0, [r3]
   16468:	ldrd	r2, [sp, #80]	; 0x50
   1646c:	adds	r0, r0, r2
   16470:	adc	r1, r1, r3
   16474:	ldrd	r4, [sp, #56]	; 0x38
   16478:	adds	r2, r4, r0
   1647c:	adc	r3, r5, r1
   16480:	mov	r0, r2
   16484:	mov	r1, r3
   16488:	ldrd	r2, [sp, #24]
   1648c:	eor	r2, r2, r0
   16490:	eor	r3, r3, r1
   16494:	str	r3, [sp, #24]
   16498:	str	r2, [sp, #28]
   1649c:	ldrd	r6, [sp, #120]	; 0x78
   164a0:	ldrd	r2, [sp, #24]
   164a4:	adds	r6, r6, r2
   164a8:	adc	r7, r7, r3
   164ac:	mov	r2, r4
   164b0:	mov	r3, r5
   164b4:	eor	r2, r2, r6
   164b8:	eor	r3, r3, r7
   164bc:	mov	r4, r2
   164c0:	lsr	ip, r2, #24
   164c4:	orr	r2, ip, r3, lsl #8
   164c8:	lsr	ip, r3, #24
   164cc:	orr	r3, ip, r4, lsl #8
   164d0:	add	ip, sp, #360	; 0x168
   164d4:	ldrd	r4, [ip]
   164d8:	adds	r4, r4, r0
   164dc:	adc	r5, r5, r1
   164e0:	adds	r4, r4, r2
   164e4:	adc	r5, r5, r3
   164e8:	ldrd	r0, [sp, #24]
   164ec:	strd	r4, [sp, #80]	; 0x50
   164f0:	eor	r0, r0, r4
   164f4:	eor	r1, r1, r5
   164f8:	lsr	ip, r0, #16
   164fc:	orr	ip, ip, r1, lsl #16
   16500:	str	ip, [sp, #24]
   16504:	lsr	r1, r1, #16
   16508:	orr	r1, r1, r0, lsl #16
   1650c:	str	r1, [sp, #28]
   16510:	ldrd	r0, [sp, #24]
   16514:	adds	r0, r0, r6
   16518:	adc	r1, r1, r7
   1651c:	mov	r6, r0
   16520:	mov	r7, r1
   16524:	eor	r2, r2, r0
   16528:	eor	r3, r3, r1
   1652c:	lsl	r1, r3, #1
   16530:	orr	r5, r1, r2, lsr #31
   16534:	lsl	r2, r2, #1
   16538:	orr	r4, r2, r3, lsr #31
   1653c:	add	r3, sp, #376	; 0x178
   16540:	ldrd	r0, [r3]
   16544:	ldrd	r2, [sp, #72]	; 0x48
   16548:	adds	r0, r0, r2
   1654c:	adc	r1, r1, r3
   16550:	adds	r0, r0, r4
   16554:	adc	r1, r1, r5
   16558:	ldrd	r2, [sp]
   1655c:	eor	r2, r2, r0
   16560:	eor	r3, r3, r1
   16564:	strd	r2, [sp, #56]	; 0x38
   16568:	ldrd	r2, [sp, #56]	; 0x38
   1656c:	str	r3, [sp]
   16570:	str	r2, [sp, #4]
   16574:	ldrd	r2, [sp]
   16578:	adds	r2, r2, r8
   1657c:	adc	r3, r3, r9
   16580:	mov	r8, r2
   16584:	mov	r9, r3
   16588:	eor	r4, r4, r2
   1658c:	eor	r5, r5, r3
   16590:	lsr	ip, r4, #24
   16594:	orr	r2, ip, r5, lsl #8
   16598:	lsr	ip, r5, #24
   1659c:	orr	r3, ip, r4, lsl #8
   165a0:	add	ip, sp, #360	; 0x168
   165a4:	ldrd	r4, [ip]
   165a8:	adds	r4, r4, r0
   165ac:	adc	r5, r5, r1
   165b0:	adds	r4, r4, r2
   165b4:	adc	r5, r5, r3
   165b8:	ldrd	r0, [sp]
   165bc:	strd	r4, [sp, #72]	; 0x48
   165c0:	eor	r0, r0, r4
   165c4:	eor	r1, r1, r5
   165c8:	lsr	ip, r0, #16
   165cc:	orr	ip, ip, r1, lsl #16
   165d0:	str	ip, [sp]
   165d4:	lsr	r1, r1, #16
   165d8:	orr	r1, r1, r0, lsl #16
   165dc:	str	r1, [sp, #4]
   165e0:	ldrd	r4, [sp]
   165e4:	adds	r4, r4, r8
   165e8:	adc	r5, r5, r9
   165ec:	strd	r4, [sp, #96]	; 0x60
   165f0:	mov	r0, r4
   165f4:	mov	r1, r5
   165f8:	eor	r0, r0, r2
   165fc:	eor	r1, r1, r3
   16600:	mov	r3, r1
   16604:	lsl	r1, r1, #1
   16608:	orr	r1, r1, r0, lsr #31
   1660c:	str	r1, [sp, #60]	; 0x3c
   16610:	lsl	r2, r0, #1
   16614:	orr	r3, r2, r3, lsr #31
   16618:	str	r3, [sp, #56]	; 0x38
   1661c:	add	r3, sp, #328	; 0x148
   16620:	ldrd	r8, [r3]
   16624:	ldrd	r4, [sp, #88]	; 0x58
   16628:	adds	r8, r8, r4
   1662c:	adc	r9, r9, r5
   16630:	ldrd	r2, [sp, #40]	; 0x28
   16634:	adds	r2, r2, r8
   16638:	adc	r3, r3, r9
   1663c:	mov	r0, r2
   16640:	mov	r1, r3
   16644:	ldrd	r4, [sp, #8]
   16648:	eor	r4, r4, r2
   1664c:	eor	r5, r5, r3
   16650:	mov	r8, r5
   16654:	mov	r9, r4
   16658:	adds	r6, r6, r5
   1665c:	adc	r7, r7, r4
   16660:	ldrd	r4, [sp, #40]	; 0x28
   16664:	eor	r4, r4, r6
   16668:	eor	r5, r5, r7
   1666c:	lsr	ip, r4, #24
   16670:	orr	r2, ip, r5, lsl #8
   16674:	lsr	ip, r5, #24
   16678:	orr	r3, ip, r4, lsl #8
   1667c:	add	ip, sp, #384	; 0x180
   16680:	ldrd	r4, [ip]
   16684:	adds	r4, r4, r0
   16688:	adc	r5, r5, r1
   1668c:	adds	r4, r4, r2
   16690:	adc	r5, r5, r3
   16694:	mov	r0, r4
   16698:	mov	r1, r5
   1669c:	strd	r0, [sp, #88]	; 0x58
   166a0:	eor	r0, r0, r8
   166a4:	eor	r1, r1, r9
   166a8:	mov	r9, r1
   166ac:	lsr	ip, r0, #16
   166b0:	orr	r1, ip, r1, lsl #16
   166b4:	str	r1, [sp, #8]
   166b8:	lsr	r1, r9, #16
   166bc:	orr	r1, r1, r0, lsl #16
   166c0:	str	r1, [sp, #12]
   166c4:	ldrd	r4, [sp, #8]
   166c8:	adds	r4, r4, r6
   166cc:	adc	r5, r5, r7
   166d0:	strd	r4, [sp, #120]	; 0x78
   166d4:	mov	r0, r4
   166d8:	mov	r1, r5
   166dc:	eor	r0, r0, r2
   166e0:	eor	r1, r1, r3
   166e4:	mov	r3, r1
   166e8:	lsl	r1, r1, #1
   166ec:	orr	r1, r1, r0, lsr #31
   166f0:	str	r1, [sp, #44]	; 0x2c
   166f4:	lsl	r2, r0, #1
   166f8:	orr	r3, r2, r3, lsr #31
   166fc:	str	r3, [sp, #40]	; 0x28
   16700:	add	r3, sp, #368	; 0x170
   16704:	ldrd	r8, [r3]
   16708:	ldrd	r4, [sp, #64]	; 0x40
   1670c:	adds	r8, r8, r4
   16710:	adc	r9, r9, r5
   16714:	ldrd	r4, [sp, #48]	; 0x30
   16718:	adds	r4, r4, r8
   1671c:	adc	r5, r5, r9
   16720:	mov	r0, r4
   16724:	mov	r1, r5
   16728:	ldrd	r2, [sp, #24]
   1672c:	eor	r2, r2, r4
   16730:	eor	r3, r3, r5
   16734:	mov	r8, r3
   16738:	mov	r9, r2
   1673c:	ldrd	r6, [sp, #104]	; 0x68
   16740:	adds	r6, r6, r3
   16744:	adc	r7, r7, r2
   16748:	ldrd	r4, [sp, #48]	; 0x30
   1674c:	eor	r4, r4, r6
   16750:	eor	r5, r5, r7
   16754:	lsr	ip, r4, #24
   16758:	orr	r2, ip, r5, lsl #8
   1675c:	lsr	ip, r5, #24
   16760:	orr	r3, ip, r4, lsl #8
   16764:	add	ip, sp, #280	; 0x118
   16768:	ldrd	r4, [ip]
   1676c:	adds	r4, r4, r0
   16770:	adc	r5, r5, r1
   16774:	adds	r4, r4, r2
   16778:	adc	r5, r5, r3
   1677c:	strd	r4, [sp, #64]	; 0x40
   16780:	eor	r4, r4, r8
   16784:	eor	r5, r5, r9
   16788:	lsr	ip, r4, #16
   1678c:	orr	r1, ip, r5, lsl #16
   16790:	str	r1, [sp, #24]
   16794:	lsr	r1, r5, #16
   16798:	orr	r1, r1, r4, lsl #16
   1679c:	str	r1, [sp, #28]
   167a0:	ldrd	r8, [sp, #24]
   167a4:	adds	r8, r8, r6
   167a8:	adc	r9, r9, r7
   167ac:	mov	r0, r8
   167b0:	mov	r1, r9
   167b4:	strd	r0, [sp, #104]	; 0x68
   167b8:	eor	r0, r0, r2
   167bc:	eor	r1, r1, r3
   167c0:	mov	r3, r1
   167c4:	lsl	r1, r1, #1
   167c8:	orr	r1, r1, r0, lsr #31
   167cc:	str	r1, [sp, #52]	; 0x34
   167d0:	lsl	r2, r0, #1
   167d4:	orr	r3, r2, r3, lsr #31
   167d8:	str	r3, [sp, #48]	; 0x30
   167dc:	add	r3, sp, #296	; 0x128
   167e0:	ldrd	r0, [r3]
   167e4:	ldrd	r6, [sp, #80]	; 0x50
   167e8:	adds	r0, r0, r6
   167ec:	adc	r1, r1, r7
   167f0:	ldrd	r4, [sp, #16]
   167f4:	adds	r4, r4, r0
   167f8:	adc	r5, r5, r1
   167fc:	mov	r0, r4
   16800:	mov	r1, r5
   16804:	ldrd	r2, [sp, #32]
   16808:	eor	r2, r2, r4
   1680c:	eor	r3, r3, r5
   16810:	mov	r4, r3
   16814:	mov	r5, r2
   16818:	ldrd	r6, [sp, #112]	; 0x70
   1681c:	mov	r8, r3
   16820:	mov	r9, r2
   16824:	adds	r6, r6, r4
   16828:	adc	r7, r7, r5
   1682c:	ldrd	r4, [sp, #16]
   16830:	eor	r4, r4, r6
   16834:	eor	r5, r5, r7
   16838:	lsr	ip, r4, #24
   1683c:	orr	r2, ip, r5, lsl #8
   16840:	lsr	ip, r5, #24
   16844:	orr	r3, ip, r4, lsl #8
   16848:	add	ip, sp, #344	; 0x158
   1684c:	ldrd	r4, [ip]
   16850:	adds	r4, r4, r0
   16854:	adc	r5, r5, r1
   16858:	adds	r4, r4, r2
   1685c:	adc	r5, r5, r3
   16860:	mov	r0, r8
   16864:	mov	r1, r9
   16868:	strd	r4, [sp, #80]	; 0x50
   1686c:	eor	r0, r0, r4
   16870:	eor	r1, r1, r5
   16874:	lsr	ip, r0, #16
   16878:	orr	r4, ip, r1, lsl #16
   1687c:	lsr	r1, r1, #16
   16880:	orr	r5, r1, r0, lsl #16
   16884:	adds	r6, r6, r4
   16888:	adc	r7, r7, r5
   1688c:	eor	r2, r2, r6
   16890:	eor	r3, r3, r7
   16894:	lsl	r1, r3, #1
   16898:	orr	r1, r1, r2, lsr #31
   1689c:	str	r1, [sp, #20]
   168a0:	lsl	r2, r2, #1
   168a4:	orr	r3, r2, r3, lsr #31
   168a8:	str	r3, [sp, #16]
   168ac:	add	r3, sp, #312	; 0x138
   168b0:	ldrd	r0, [r3]
   168b4:	ldrd	r2, [sp, #72]	; 0x48
   168b8:	adds	r0, r0, r2
   168bc:	adc	r1, r1, r3
   168c0:	ldrd	r2, [sp, #40]	; 0x28
   168c4:	adds	r2, r2, r0
   168c8:	adc	r3, r3, r1
   168cc:	mov	r0, r2
   168d0:	mov	r1, r3
   168d4:	eor	r4, r4, r2
   168d8:	eor	r5, r5, r3
   168dc:	str	r5, [sp, #32]
   168e0:	str	r4, [sp, #36]	; 0x24
   168e4:	ldrd	r4, [sp, #32]
   168e8:	ldrd	r2, [sp, #104]	; 0x68
   168ec:	adds	r2, r2, r4
   168f0:	adc	r3, r3, r5
   168f4:	mov	r8, r2
   168f8:	mov	r9, r3
   168fc:	ldrd	r4, [sp, #40]	; 0x28
   16900:	eor	r4, r4, r2
   16904:	eor	r5, r5, r3
   16908:	lsr	ip, r4, #24
   1690c:	orr	r2, ip, r5, lsl #8
   16910:	lsr	ip, r5, #24
   16914:	orr	r3, ip, r4, lsl #8
   16918:	add	ip, sp, #272	; 0x110
   1691c:	ldrd	r4, [ip]
   16920:	adds	r4, r4, r0
   16924:	adc	r5, r5, r1
   16928:	adds	r4, r4, r2
   1692c:	adc	r5, r5, r3
   16930:	ldrd	r0, [sp, #32]
   16934:	strd	r4, [sp, #72]	; 0x48
   16938:	eor	r0, r0, r4
   1693c:	eor	r1, r1, r5
   16940:	lsr	ip, r0, #16
   16944:	orr	ip, ip, r1, lsl #16
   16948:	str	ip, [sp, #32]
   1694c:	lsr	r1, r1, #16
   16950:	orr	r1, r1, r0, lsl #16
   16954:	str	r1, [sp, #36]	; 0x24
   16958:	ldrd	r0, [sp, #32]
   1695c:	adds	r0, r0, r8
   16960:	adc	r1, r1, r9
   16964:	mov	r8, r0
   16968:	mov	r9, r1
   1696c:	strd	r8, [sp, #104]	; 0x68
   16970:	eor	r8, r8, r2
   16974:	eor	r9, r9, r3
   16978:	lsl	r1, r9, #1
   1697c:	orr	r1, r1, r8, lsr #31
   16980:	str	r1, [sp, #44]	; 0x2c
   16984:	lsl	r2, r8, #1
   16988:	orr	r3, r2, r9, lsr #31
   1698c:	str	r3, [sp, #40]	; 0x28
   16990:	add	r3, sp, #392	; 0x188
   16994:	ldrd	r8, [r3]
   16998:	ldrd	r4, [sp, #88]	; 0x58
   1699c:	adds	r8, r8, r4
   169a0:	adc	r9, r9, r5
   169a4:	ldrd	r4, [sp, #48]	; 0x30
   169a8:	adds	r4, r4, r8
   169ac:	adc	r5, r5, r9
   169b0:	mov	r0, r4
   169b4:	mov	r1, r5
   169b8:	ldrd	r2, [sp]
   169bc:	eor	r2, r2, r4
   169c0:	eor	r3, r3, r5
   169c4:	mov	r8, r3
   169c8:	mov	r9, r2
   169cc:	adds	r6, r6, r3
   169d0:	adc	r7, r7, r2
   169d4:	ldrd	r4, [sp, #48]	; 0x30
   169d8:	eor	r4, r4, r6
   169dc:	eor	r5, r5, r7
   169e0:	lsr	ip, r4, #24
   169e4:	orr	r2, ip, r5, lsl #8
   169e8:	lsr	ip, r5, #24
   169ec:	orr	r3, ip, r4, lsl #8
   169f0:	add	ip, sp, #304	; 0x130
   169f4:	ldrd	r4, [ip]
   169f8:	adds	r4, r4, r0
   169fc:	adc	r5, r5, r1
   16a00:	adds	r4, r4, r2
   16a04:	adc	r5, r5, r3
   16a08:	mov	r0, r4
   16a0c:	mov	r1, r5
   16a10:	strd	r0, [sp, #88]	; 0x58
   16a14:	eor	r0, r0, r8
   16a18:	eor	r1, r1, r9
   16a1c:	mov	r9, r1
   16a20:	lsr	ip, r0, #16
   16a24:	orr	r1, ip, r1, lsl #16
   16a28:	str	r1, [sp]
   16a2c:	lsr	r1, r9, #16
   16a30:	orr	r1, r1, r0, lsl #16
   16a34:	str	r1, [sp, #4]
   16a38:	ldrd	r4, [sp]
   16a3c:	adds	r4, r4, r6
   16a40:	adc	r5, r5, r7
   16a44:	strd	r4, [sp, #112]	; 0x70
   16a48:	mov	r8, r4
   16a4c:	mov	r9, r5
   16a50:	eor	r8, r8, r2
   16a54:	eor	r9, r9, r3
   16a58:	lsl	r1, r9, #1
   16a5c:	orr	r1, r1, r8, lsr #31
   16a60:	str	r1, [sp, #52]	; 0x34
   16a64:	lsl	r2, r8, #1
   16a68:	orr	r3, r2, r9, lsr #31
   16a6c:	str	r3, [sp, #48]	; 0x30
   16a70:	add	r3, sp, #336	; 0x150
   16a74:	ldrd	r0, [r3]
   16a78:	ldrd	r4, [sp, #64]	; 0x40
   16a7c:	adds	r0, r0, r4
   16a80:	adc	r1, r1, r5
   16a84:	ldrd	r4, [sp, #16]
   16a88:	adds	r4, r4, r0
   16a8c:	adc	r5, r5, r1
   16a90:	mov	r0, r4
   16a94:	mov	r1, r5
   16a98:	ldrd	r2, [sp, #8]
   16a9c:	eor	r2, r2, r4
   16aa0:	eor	r3, r3, r5
   16aa4:	mov	r8, r3
   16aa8:	mov	r9, r2
   16aac:	ldrd	r6, [sp, #96]	; 0x60
   16ab0:	adds	r6, r6, r3
   16ab4:	adc	r7, r7, r2
   16ab8:	ldrd	r4, [sp, #16]
   16abc:	eor	r4, r4, r6
   16ac0:	eor	r5, r5, r7
   16ac4:	lsr	ip, r4, #24
   16ac8:	orr	r2, ip, r5, lsl #8
   16acc:	lsr	ip, r5, #24
   16ad0:	orr	r3, ip, r4, lsl #8
   16ad4:	add	ip, sp, #320	; 0x140
   16ad8:	ldrd	r4, [ip]
   16adc:	adds	r4, r4, r0
   16ae0:	adc	r5, r5, r1
   16ae4:	adds	r4, r4, r2
   16ae8:	adc	r5, r5, r3
   16aec:	strd	r4, [sp, #64]	; 0x40
   16af0:	eor	r4, r4, r8
   16af4:	eor	r5, r5, r9
   16af8:	lsr	ip, r4, #16
   16afc:	orr	r1, ip, r5, lsl #16
   16b00:	str	r1, [sp, #8]
   16b04:	lsr	r1, r5, #16
   16b08:	orr	r1, r1, r4, lsl #16
   16b0c:	str	r1, [sp, #12]
   16b10:	ldrd	r4, [sp, #8]
   16b14:	adds	r4, r4, r6
   16b18:	adc	r5, r5, r7
   16b1c:	mov	r8, r4
   16b20:	mov	r9, r5
   16b24:	eor	r2, r2, r4
   16b28:	eor	r3, r3, r5
   16b2c:	lsl	r1, r3, #1
   16b30:	orr	r1, r1, r2, lsr #31
   16b34:	str	r1, [sp, #20]
   16b38:	lsl	r2, r2, #1
   16b3c:	orr	r3, r2, r3, lsr #31
   16b40:	str	r3, [sp, #16]
   16b44:	add	r3, sp, #288	; 0x120
   16b48:	ldrd	r0, [r3]
   16b4c:	ldrd	r2, [sp, #80]	; 0x50
   16b50:	adds	r0, r0, r2
   16b54:	adc	r1, r1, r3
   16b58:	ldrd	r4, [sp, #56]	; 0x38
   16b5c:	adds	r2, r4, r0
   16b60:	adc	r3, r5, r1
   16b64:	mov	r0, r2
   16b68:	mov	r1, r3
   16b6c:	ldrd	r2, [sp, #24]
   16b70:	eor	r2, r2, r0
   16b74:	eor	r3, r3, r1
   16b78:	str	r3, [sp, #24]
   16b7c:	str	r2, [sp, #28]
   16b80:	ldrd	r6, [sp, #120]	; 0x78
   16b84:	ldrd	r2, [sp, #24]
   16b88:	adds	r6, r6, r2
   16b8c:	adc	r7, r7, r3
   16b90:	mov	r2, r4
   16b94:	mov	r3, r5
   16b98:	eor	r2, r2, r6
   16b9c:	eor	r3, r3, r7
   16ba0:	mov	r4, r2
   16ba4:	lsr	ip, r2, #24
   16ba8:	orr	r2, ip, r3, lsl #8
   16bac:	lsr	ip, r3, #24
   16bb0:	orr	r3, ip, r4, lsl #8
   16bb4:	add	ip, sp, #352	; 0x160
   16bb8:	ldrd	r4, [ip]
   16bbc:	adds	r4, r4, r0
   16bc0:	adc	r5, r5, r1
   16bc4:	adds	r4, r4, r2
   16bc8:	adc	r5, r5, r3
   16bcc:	ldrd	r0, [sp, #24]
   16bd0:	strd	r4, [sp, #80]	; 0x50
   16bd4:	eor	r0, r0, r4
   16bd8:	eor	r1, r1, r5
   16bdc:	lsr	ip, r0, #16
   16be0:	orr	ip, ip, r1, lsl #16
   16be4:	str	ip, [sp, #24]
   16be8:	lsr	r1, r1, #16
   16bec:	orr	r1, r1, r0, lsl #16
   16bf0:	str	r1, [sp, #28]
   16bf4:	ldrd	r0, [sp, #24]
   16bf8:	adds	r0, r0, r6
   16bfc:	adc	r1, r1, r7
   16c00:	mov	r6, r0
   16c04:	mov	r7, r1
   16c08:	eor	r2, r2, r0
   16c0c:	eor	r3, r3, r1
   16c10:	lsl	r1, r3, #1
   16c14:	orr	r5, r1, r2, lsr #31
   16c18:	lsl	r2, r2, #1
   16c1c:	orr	r4, r2, r3, lsr #31
   16c20:	add	r3, sp, #320	; 0x140
   16c24:	ldrd	r0, [r3]
   16c28:	ldrd	r2, [sp, #72]	; 0x48
   16c2c:	adds	r0, r0, r2
   16c30:	adc	r1, r1, r3
   16c34:	adds	r0, r0, r4
   16c38:	adc	r1, r1, r5
   16c3c:	ldrd	r2, [sp]
   16c40:	eor	r2, r2, r0
   16c44:	eor	r3, r3, r1
   16c48:	strd	r2, [sp, #56]	; 0x38
   16c4c:	ldrd	r2, [sp, #56]	; 0x38
   16c50:	str	r3, [sp]
   16c54:	str	r2, [sp, #4]
   16c58:	ldrd	r2, [sp]
   16c5c:	adds	r2, r2, r8
   16c60:	adc	r3, r3, r9
   16c64:	mov	r8, r2
   16c68:	mov	r9, r3
   16c6c:	eor	r4, r4, r2
   16c70:	eor	r5, r5, r3
   16c74:	lsr	ip, r4, #24
   16c78:	orr	r2, ip, r5, lsl #8
   16c7c:	lsr	ip, r5, #24
   16c80:	orr	r3, ip, r4, lsl #8
   16c84:	add	ip, sp, #392	; 0x188
   16c88:	ldrd	r4, [ip]
   16c8c:	adds	r4, r4, r0
   16c90:	adc	r5, r5, r1
   16c94:	adds	r4, r4, r2
   16c98:	adc	r5, r5, r3
   16c9c:	ldrd	r0, [sp]
   16ca0:	strd	r4, [sp, #72]	; 0x48
   16ca4:	eor	r0, r0, r4
   16ca8:	eor	r1, r1, r5
   16cac:	lsr	ip, r0, #16
   16cb0:	orr	ip, ip, r1, lsl #16
   16cb4:	str	ip, [sp]
   16cb8:	lsr	r1, r1, #16
   16cbc:	orr	r1, r1, r0, lsl #16
   16cc0:	str	r1, [sp, #4]
   16cc4:	ldrd	r4, [sp]
   16cc8:	adds	r4, r4, r8
   16ccc:	adc	r5, r5, r9
   16cd0:	strd	r4, [sp, #96]	; 0x60
   16cd4:	mov	r0, r4
   16cd8:	mov	r1, r5
   16cdc:	eor	r0, r0, r2
   16ce0:	eor	r1, r1, r3
   16ce4:	mov	r3, r1
   16ce8:	lsl	r1, r1, #1
   16cec:	orr	r1, r1, r0, lsr #31
   16cf0:	str	r1, [sp, #60]	; 0x3c
   16cf4:	lsl	r2, r0, #1
   16cf8:	orr	r3, r2, r3, lsr #31
   16cfc:	str	r3, [sp, #56]	; 0x38
   16d00:	add	r3, sp, #384	; 0x180
   16d04:	ldrd	r8, [r3]
   16d08:	ldrd	r4, [sp, #88]	; 0x58
   16d0c:	adds	r8, r8, r4
   16d10:	adc	r9, r9, r5
   16d14:	ldrd	r2, [sp, #40]	; 0x28
   16d18:	adds	r2, r2, r8
   16d1c:	adc	r3, r3, r9
   16d20:	mov	r0, r2
   16d24:	mov	r1, r3
   16d28:	ldrd	r4, [sp, #8]
   16d2c:	eor	r4, r4, r2
   16d30:	eor	r5, r5, r3
   16d34:	mov	r8, r5
   16d38:	mov	r9, r4
   16d3c:	adds	r6, r6, r5
   16d40:	adc	r7, r7, r4
   16d44:	ldrd	r4, [sp, #40]	; 0x28
   16d48:	eor	r4, r4, r6
   16d4c:	eor	r5, r5, r7
   16d50:	lsr	ip, r4, #24
   16d54:	orr	r2, ip, r5, lsl #8
   16d58:	lsr	ip, r5, #24
   16d5c:	orr	r3, ip, r4, lsl #8
   16d60:	add	ip, sp, #344	; 0x158
   16d64:	ldrd	r4, [ip]
   16d68:	adds	r4, r4, r0
   16d6c:	adc	r5, r5, r1
   16d70:	adds	r4, r4, r2
   16d74:	adc	r5, r5, r3
   16d78:	mov	r0, r4
   16d7c:	mov	r1, r5
   16d80:	strd	r0, [sp, #88]	; 0x58
   16d84:	eor	r0, r0, r8
   16d88:	eor	r1, r1, r9
   16d8c:	mov	r9, r1
   16d90:	lsr	ip, r0, #16
   16d94:	orr	r1, ip, r1, lsl #16
   16d98:	str	r1, [sp, #8]
   16d9c:	lsr	r1, r9, #16
   16da0:	orr	r1, r1, r0, lsl #16
   16da4:	str	r1, [sp, #12]
   16da8:	ldrd	r4, [sp, #8]
   16dac:	adds	r4, r4, r6
   16db0:	adc	r5, r5, r7
   16db4:	strd	r4, [sp, #120]	; 0x78
   16db8:	mov	r0, r4
   16dbc:	mov	r1, r5
   16dc0:	eor	r0, r0, r2
   16dc4:	eor	r1, r1, r3
   16dc8:	mov	r3, r1
   16dcc:	lsl	r1, r1, #1
   16dd0:	orr	r1, r1, r0, lsr #31
   16dd4:	str	r1, [sp, #44]	; 0x2c
   16dd8:	lsl	r2, r0, #1
   16ddc:	orr	r3, r2, r3, lsr #31
   16de0:	str	r3, [sp, #40]	; 0x28
   16de4:	add	r3, sp, #360	; 0x168
   16de8:	ldrd	r8, [r3]
   16dec:	ldrd	r4, [sp, #64]	; 0x40
   16df0:	adds	r8, r8, r4
   16df4:	adc	r9, r9, r5
   16df8:	ldrd	r4, [sp, #48]	; 0x30
   16dfc:	adds	r4, r4, r8
   16e00:	adc	r5, r5, r9
   16e04:	mov	r0, r4
   16e08:	mov	r1, r5
   16e0c:	ldrd	r2, [sp, #24]
   16e10:	eor	r2, r2, r4
   16e14:	eor	r3, r3, r5
   16e18:	mov	r8, r3
   16e1c:	mov	r9, r2
   16e20:	ldrd	r6, [sp, #104]	; 0x68
   16e24:	adds	r6, r6, r3
   16e28:	adc	r7, r7, r2
   16e2c:	ldrd	r4, [sp, #48]	; 0x30
   16e30:	eor	r4, r4, r6
   16e34:	eor	r5, r5, r7
   16e38:	lsr	ip, r4, #24
   16e3c:	orr	r2, ip, r5, lsl #8
   16e40:	lsr	ip, r5, #24
   16e44:	orr	r3, ip, r4, lsl #8
   16e48:	add	ip, sp, #296	; 0x128
   16e4c:	ldrd	r4, [ip]
   16e50:	adds	r4, r4, r0
   16e54:	adc	r5, r5, r1
   16e58:	adds	r4, r4, r2
   16e5c:	adc	r5, r5, r3
   16e60:	strd	r4, [sp, #64]	; 0x40
   16e64:	eor	r4, r4, r8
   16e68:	eor	r5, r5, r9
   16e6c:	lsr	ip, r4, #16
   16e70:	orr	r1, ip, r5, lsl #16
   16e74:	str	r1, [sp, #24]
   16e78:	lsr	r1, r5, #16
   16e7c:	orr	r1, r1, r4, lsl #16
   16e80:	str	r1, [sp, #28]
   16e84:	ldrd	r8, [sp, #24]
   16e88:	adds	r8, r8, r6
   16e8c:	adc	r9, r9, r7
   16e90:	mov	r0, r8
   16e94:	mov	r1, r9
   16e98:	strd	r0, [sp, #104]	; 0x68
   16e9c:	eor	r0, r0, r2
   16ea0:	eor	r1, r1, r3
   16ea4:	mov	r3, r1
   16ea8:	lsl	r1, r1, #1
   16eac:	orr	r1, r1, r0, lsr #31
   16eb0:	str	r1, [sp, #52]	; 0x34
   16eb4:	lsl	r2, r0, #1
   16eb8:	orr	r3, r2, r3, lsr #31
   16ebc:	str	r3, [sp, #48]	; 0x30
   16ec0:	add	r3, sp, #272	; 0x110
   16ec4:	ldrd	r0, [r3]
   16ec8:	ldrd	r6, [sp, #80]	; 0x50
   16ecc:	adds	r0, r0, r6
   16ed0:	adc	r1, r1, r7
   16ed4:	ldrd	r4, [sp, #16]
   16ed8:	adds	r4, r4, r0
   16edc:	adc	r5, r5, r1
   16ee0:	mov	r0, r4
   16ee4:	mov	r1, r5
   16ee8:	ldrd	r2, [sp, #32]
   16eec:	eor	r2, r2, r4
   16ef0:	eor	r3, r3, r5
   16ef4:	mov	r4, r3
   16ef8:	mov	r5, r2
   16efc:	ldrd	r6, [sp, #112]	; 0x70
   16f00:	mov	r8, r3
   16f04:	mov	r9, r2
   16f08:	adds	r6, r6, r4
   16f0c:	adc	r7, r7, r5
   16f10:	ldrd	r4, [sp, #16]
   16f14:	eor	r4, r4, r6
   16f18:	eor	r5, r5, r7
   16f1c:	lsr	ip, r4, #24
   16f20:	orr	r2, ip, r5, lsl #8
   16f24:	lsr	ip, r5, #24
   16f28:	orr	r3, ip, r4, lsl #8
   16f2c:	add	ip, sp, #336	; 0x150
   16f30:	ldrd	r4, [ip]
   16f34:	adds	r4, r4, r0
   16f38:	adc	r5, r5, r1
   16f3c:	adds	r4, r4, r2
   16f40:	adc	r5, r5, r3
   16f44:	mov	r0, r8
   16f48:	mov	r1, r9
   16f4c:	strd	r4, [sp, #80]	; 0x50
   16f50:	eor	r0, r0, r4
   16f54:	eor	r1, r1, r5
   16f58:	lsr	ip, r0, #16
   16f5c:	orr	r4, ip, r1, lsl #16
   16f60:	lsr	r1, r1, #16
   16f64:	orr	r5, r1, r0, lsl #16
   16f68:	adds	r6, r6, r4
   16f6c:	adc	r7, r7, r5
   16f70:	eor	r2, r2, r6
   16f74:	eor	r3, r3, r7
   16f78:	lsl	r1, r3, #1
   16f7c:	orr	r1, r1, r2, lsr #31
   16f80:	str	r1, [sp, #20]
   16f84:	lsl	r2, r2, #1
   16f88:	orr	r3, r2, r3, lsr #31
   16f8c:	str	r3, [sp, #16]
   16f90:	add	r3, sp, #368	; 0x170
   16f94:	ldrd	r0, [r3]
   16f98:	ldrd	r2, [sp, #72]	; 0x48
   16f9c:	adds	r0, r0, r2
   16fa0:	adc	r1, r1, r3
   16fa4:	ldrd	r2, [sp, #40]	; 0x28
   16fa8:	adds	r2, r2, r0
   16fac:	adc	r3, r3, r1
   16fb0:	mov	r0, r2
   16fb4:	mov	r1, r3
   16fb8:	eor	r4, r4, r2
   16fbc:	eor	r5, r5, r3
   16fc0:	str	r5, [sp, #32]
   16fc4:	str	r4, [sp, #36]	; 0x24
   16fc8:	ldrd	r4, [sp, #32]
   16fcc:	ldrd	r2, [sp, #104]	; 0x68
   16fd0:	adds	r2, r2, r4
   16fd4:	adc	r3, r3, r5
   16fd8:	mov	r8, r2
   16fdc:	mov	r9, r3
   16fe0:	ldrd	r4, [sp, #40]	; 0x28
   16fe4:	eor	r4, r4, r2
   16fe8:	eor	r5, r5, r3
   16fec:	lsr	ip, r4, #24
   16ff0:	orr	r2, ip, r5, lsl #8
   16ff4:	lsr	ip, r5, #24
   16ff8:	orr	r3, ip, r4, lsl #8
   16ffc:	add	ip, sp, #288	; 0x120
   17000:	ldrd	r4, [ip]
   17004:	adds	r4, r4, r0
   17008:	adc	r5, r5, r1
   1700c:	adds	r4, r4, r2
   17010:	adc	r5, r5, r3
   17014:	ldrd	r0, [sp, #32]
   17018:	strd	r4, [sp, #72]	; 0x48
   1701c:	eor	r0, r0, r4
   17020:	eor	r1, r1, r5
   17024:	lsr	ip, r0, #16
   17028:	orr	ip, ip, r1, lsl #16
   1702c:	str	ip, [sp, #32]
   17030:	lsr	r1, r1, #16
   17034:	orr	r1, r1, r0, lsl #16
   17038:	str	r1, [sp, #36]	; 0x24
   1703c:	ldrd	r0, [sp, #32]
   17040:	adds	r0, r0, r8
   17044:	adc	r1, r1, r9
   17048:	mov	r8, r0
   1704c:	mov	r9, r1
   17050:	strd	r8, [sp, #104]	; 0x68
   17054:	eor	r8, r8, r2
   17058:	eor	r9, r9, r3
   1705c:	lsl	r1, r9, #1
   17060:	orr	r1, r1, r8, lsr #31
   17064:	str	r1, [sp, #44]	; 0x2c
   17068:	lsl	r2, r8, #1
   1706c:	orr	r3, r2, r9, lsr #31
   17070:	str	r3, [sp, #40]	; 0x28
   17074:	add	r3, sp, #376	; 0x178
   17078:	ldrd	r8, [r3]
   1707c:	ldrd	r4, [sp, #88]	; 0x58
   17080:	adds	r8, r8, r4
   17084:	adc	r9, r9, r5
   17088:	ldrd	r4, [sp, #48]	; 0x30
   1708c:	adds	r4, r4, r8
   17090:	adc	r5, r5, r9
   17094:	mov	r0, r4
   17098:	mov	r1, r5
   1709c:	ldrd	r2, [sp]
   170a0:	eor	r2, r2, r4
   170a4:	eor	r3, r3, r5
   170a8:	mov	r8, r3
   170ac:	mov	r9, r2
   170b0:	adds	r6, r6, r3
   170b4:	adc	r7, r7, r2
   170b8:	ldrd	r4, [sp, #48]	; 0x30
   170bc:	eor	r4, r4, r6
   170c0:	eor	r5, r5, r7
   170c4:	lsr	ip, r4, #24
   170c8:	orr	r2, ip, r5, lsl #8
   170cc:	lsr	ip, r5, #24
   170d0:	orr	r3, ip, r4, lsl #8
   170d4:	add	ip, sp, #328	; 0x148
   170d8:	ldrd	r4, [ip]
   170dc:	adds	r4, r4, r0
   170e0:	adc	r5, r5, r1
   170e4:	adds	r4, r4, r2
   170e8:	adc	r5, r5, r3
   170ec:	mov	r0, r4
   170f0:	mov	r1, r5
   170f4:	strd	r0, [sp, #88]	; 0x58
   170f8:	eor	r0, r0, r8
   170fc:	eor	r1, r1, r9
   17100:	mov	r9, r1
   17104:	lsr	ip, r0, #16
   17108:	orr	r1, ip, r1, lsl #16
   1710c:	str	r1, [sp]
   17110:	lsr	r1, r9, #16
   17114:	orr	r1, r1, r0, lsl #16
   17118:	str	r1, [sp, #4]
   1711c:	ldrd	r4, [sp]
   17120:	adds	r4, r4, r6
   17124:	adc	r5, r5, r7
   17128:	strd	r4, [sp, #112]	; 0x70
   1712c:	mov	r8, r4
   17130:	mov	r9, r5
   17134:	eor	r8, r8, r2
   17138:	eor	r9, r9, r3
   1713c:	lsl	r1, r9, #1
   17140:	orr	r1, r1, r8, lsr #31
   17144:	str	r1, [sp, #52]	; 0x34
   17148:	lsl	r2, r8, #1
   1714c:	orr	r3, r2, r9, lsr #31
   17150:	str	r3, [sp, #48]	; 0x30
   17154:	add	r3, sp, #280	; 0x118
   17158:	ldrd	r0, [r3]
   1715c:	ldrd	r4, [sp, #64]	; 0x40
   17160:	adds	r0, r0, r4
   17164:	adc	r1, r1, r5
   17168:	ldrd	r4, [sp, #16]
   1716c:	adds	r4, r4, r0
   17170:	adc	r5, r5, r1
   17174:	mov	r0, r4
   17178:	mov	r1, r5
   1717c:	ldrd	r2, [sp, #8]
   17180:	eor	r2, r2, r4
   17184:	eor	r3, r3, r5
   17188:	mov	r8, r3
   1718c:	mov	r9, r2
   17190:	ldrd	r6, [sp, #96]	; 0x60
   17194:	adds	r6, r6, r3
   17198:	adc	r7, r7, r2
   1719c:	ldrd	r4, [sp, #16]
   171a0:	eor	r4, r4, r6
   171a4:	eor	r5, r5, r7
   171a8:	lsr	ip, r4, #24
   171ac:	orr	r2, ip, r5, lsl #8
   171b0:	lsr	ip, r5, #24
   171b4:	orr	r3, ip, r4, lsl #8
   171b8:	add	ip, sp, #304	; 0x130
   171bc:	ldrd	r4, [ip]
   171c0:	adds	r4, r4, r0
   171c4:	adc	r5, r5, r1
   171c8:	adds	r4, r4, r2
   171cc:	adc	r5, r5, r3
   171d0:	strd	r4, [sp, #64]	; 0x40
   171d4:	eor	r4, r4, r8
   171d8:	eor	r5, r5, r9
   171dc:	lsr	ip, r4, #16
   171e0:	orr	r1, ip, r5, lsl #16
   171e4:	str	r1, [sp, #8]
   171e8:	lsr	r1, r5, #16
   171ec:	orr	r1, r1, r4, lsl #16
   171f0:	str	r1, [sp, #12]
   171f4:	ldrd	r4, [sp, #8]
   171f8:	adds	r4, r4, r6
   171fc:	adc	r5, r5, r7
   17200:	mov	r8, r4
   17204:	mov	r9, r5
   17208:	eor	r2, r2, r4
   1720c:	eor	r3, r3, r5
   17210:	lsl	r1, r3, #1
   17214:	orr	r1, r1, r2, lsr #31
   17218:	str	r1, [sp, #20]
   1721c:	lsl	r2, r2, #1
   17220:	orr	r3, r2, r3, lsr #31
   17224:	str	r3, [sp, #16]
   17228:	add	r3, sp, #352	; 0x160
   1722c:	ldrd	r0, [r3]
   17230:	ldrd	r2, [sp, #80]	; 0x50
   17234:	adds	r0, r0, r2
   17238:	adc	r1, r1, r3
   1723c:	ldrd	r4, [sp, #56]	; 0x38
   17240:	adds	r2, r4, r0
   17244:	adc	r3, r5, r1
   17248:	mov	r0, r2
   1724c:	mov	r1, r3
   17250:	ldrd	r2, [sp, #24]
   17254:	eor	r2, r2, r0
   17258:	eor	r3, r3, r1
   1725c:	str	r3, [sp, #24]
   17260:	str	r2, [sp, #28]
   17264:	ldrd	r6, [sp, #120]	; 0x78
   17268:	ldrd	r2, [sp, #24]
   1726c:	adds	r6, r6, r2
   17270:	adc	r7, r7, r3
   17274:	mov	r2, r4
   17278:	mov	r3, r5
   1727c:	eor	r2, r2, r6
   17280:	eor	r3, r3, r7
   17284:	mov	r4, r2
   17288:	lsr	ip, r2, #24
   1728c:	orr	r2, ip, r3, lsl #8
   17290:	lsr	ip, r3, #24
   17294:	orr	r3, ip, r4, lsl #8
   17298:	add	ip, sp, #312	; 0x138
   1729c:	ldrd	r4, [ip]
   172a0:	adds	r4, r4, r0
   172a4:	adc	r5, r5, r1
   172a8:	adds	r4, r4, r2
   172ac:	adc	r5, r5, r3
   172b0:	ldrd	r0, [sp, #24]
   172b4:	strd	r4, [sp, #80]	; 0x50
   172b8:	eor	r0, r0, r4
   172bc:	eor	r1, r1, r5
   172c0:	lsr	ip, r0, #16
   172c4:	orr	ip, ip, r1, lsl #16
   172c8:	str	ip, [sp, #24]
   172cc:	lsr	r1, r1, #16
   172d0:	orr	r1, r1, r0, lsl #16
   172d4:	str	r1, [sp, #28]
   172d8:	ldrd	r0, [sp, #24]
   172dc:	adds	r0, r0, r6
   172e0:	adc	r1, r1, r7
   172e4:	mov	r6, r0
   172e8:	mov	r7, r1
   172ec:	eor	r2, r2, r0
   172f0:	eor	r3, r3, r1
   172f4:	lsl	r1, r3, #1
   172f8:	orr	r5, r1, r2, lsr #31
   172fc:	lsl	r2, r2, #1
   17300:	orr	r4, r2, r3, lsr #31
   17304:	add	r3, sp, #352	; 0x160
   17308:	ldrd	r0, [r3]
   1730c:	ldrd	r2, [sp, #72]	; 0x48
   17310:	adds	r0, r0, r2
   17314:	adc	r1, r1, r3
   17318:	adds	r0, r0, r4
   1731c:	adc	r1, r1, r5
   17320:	ldrd	r2, [sp]
   17324:	eor	r2, r2, r0
   17328:	eor	r3, r3, r1
   1732c:	strd	r2, [sp, #56]	; 0x38
   17330:	ldrd	r2, [sp, #56]	; 0x38
   17334:	str	r3, [sp]
   17338:	str	r2, [sp, #4]
   1733c:	ldrd	r2, [sp]
   17340:	adds	r2, r2, r8
   17344:	adc	r3, r3, r9
   17348:	mov	r8, r2
   1734c:	mov	r9, r3
   17350:	eor	r4, r4, r2
   17354:	eor	r5, r5, r3
   17358:	lsr	ip, r4, #24
   1735c:	orr	r2, ip, r5, lsl #8
   17360:	lsr	ip, r5, #24
   17364:	orr	r3, ip, r4, lsl #8
   17368:	add	ip, sp, #288	; 0x120
   1736c:	ldrd	r4, [ip]
   17370:	adds	r4, r4, r0
   17374:	adc	r5, r5, r1
   17378:	adds	r4, r4, r2
   1737c:	adc	r5, r5, r3
   17380:	ldrd	r0, [sp]
   17384:	strd	r4, [sp, #72]	; 0x48
   17388:	eor	r0, r0, r4
   1738c:	eor	r1, r1, r5
   17390:	lsr	ip, r0, #16
   17394:	orr	ip, ip, r1, lsl #16
   17398:	str	ip, [sp]
   1739c:	lsr	r1, r1, #16
   173a0:	orr	r1, r1, r0, lsl #16
   173a4:	str	r1, [sp, #4]
   173a8:	ldrd	r4, [sp]
   173ac:	adds	r4, r4, r8
   173b0:	adc	r5, r5, r9
   173b4:	strd	r4, [sp, #96]	; 0x60
   173b8:	mov	r0, r4
   173bc:	mov	r1, r5
   173c0:	eor	r0, r0, r2
   173c4:	eor	r1, r1, r3
   173c8:	mov	r3, r1
   173cc:	lsl	r1, r1, #1
   173d0:	orr	r1, r1, r0, lsr #31
   173d4:	str	r1, [sp, #60]	; 0x3c
   173d8:	lsl	r2, r0, #1
   173dc:	orr	r3, r2, r3, lsr #31
   173e0:	str	r3, [sp, #56]	; 0x38
   173e4:	add	r3, sp, #336	; 0x150
   173e8:	ldrd	r8, [r3]
   173ec:	ldrd	r4, [sp, #88]	; 0x58
   173f0:	adds	r8, r8, r4
   173f4:	adc	r9, r9, r5
   173f8:	ldrd	r2, [sp, #40]	; 0x28
   173fc:	adds	r2, r2, r8
   17400:	adc	r3, r3, r9
   17404:	mov	r0, r2
   17408:	mov	r1, r3
   1740c:	ldrd	r4, [sp, #8]
   17410:	eor	r4, r4, r2
   17414:	eor	r5, r5, r3
   17418:	mov	r8, r5
   1741c:	mov	r9, r4
   17420:	adds	r6, r6, r5
   17424:	adc	r7, r7, r4
   17428:	ldrd	r4, [sp, #40]	; 0x28
   1742c:	eor	r4, r4, r6
   17430:	eor	r5, r5, r7
   17434:	lsr	ip, r4, #24
   17438:	orr	r2, ip, r5, lsl #8
   1743c:	lsr	ip, r5, #24
   17440:	orr	r3, ip, r4, lsl #8
   17444:	add	ip, sp, #304	; 0x130
   17448:	ldrd	r4, [ip]
   1744c:	adds	r4, r4, r0
   17450:	adc	r5, r5, r1
   17454:	adds	r4, r4, r2
   17458:	adc	r5, r5, r3
   1745c:	mov	r0, r4
   17460:	mov	r1, r5
   17464:	strd	r0, [sp, #88]	; 0x58
   17468:	eor	r0, r0, r8
   1746c:	eor	r1, r1, r9
   17470:	mov	r9, r1
   17474:	lsr	ip, r0, #16
   17478:	orr	r1, ip, r1, lsl #16
   1747c:	str	r1, [sp, #8]
   17480:	lsr	r1, r9, #16
   17484:	orr	r1, r1, r0, lsl #16
   17488:	str	r1, [sp, #12]
   1748c:	ldrd	r4, [sp, #8]
   17490:	adds	r4, r4, r6
   17494:	adc	r5, r5, r7
   17498:	strd	r4, [sp, #120]	; 0x78
   1749c:	mov	r0, r4
   174a0:	mov	r1, r5
   174a4:	eor	r0, r0, r2
   174a8:	eor	r1, r1, r3
   174ac:	mov	r3, r1
   174b0:	lsl	r1, r1, #1
   174b4:	orr	r1, r1, r0, lsr #31
   174b8:	str	r1, [sp, #44]	; 0x2c
   174bc:	lsl	r2, r0, #1
   174c0:	orr	r3, r2, r3, lsr #31
   174c4:	str	r3, [sp, #40]	; 0x28
   174c8:	add	r3, sp, #328	; 0x148
   174cc:	ldrd	r8, [r3]
   174d0:	ldrd	r4, [sp, #64]	; 0x40
   174d4:	adds	r8, r8, r4
   174d8:	adc	r9, r9, r5
   174dc:	ldrd	r4, [sp, #48]	; 0x30
   174e0:	adds	r4, r4, r8
   174e4:	adc	r5, r5, r9
   174e8:	mov	r0, r4
   174ec:	mov	r1, r5
   174f0:	ldrd	r2, [sp, #24]
   174f4:	eor	r2, r2, r4
   174f8:	eor	r3, r3, r5
   174fc:	mov	r8, r3
   17500:	mov	r9, r2
   17504:	ldrd	r6, [sp, #104]	; 0x68
   17508:	adds	r6, r6, r3
   1750c:	adc	r7, r7, r2
   17510:	ldrd	r4, [sp, #48]	; 0x30
   17514:	eor	r4, r4, r6
   17518:	eor	r5, r5, r7
   1751c:	lsr	ip, r4, #24
   17520:	orr	r2, ip, r5, lsl #8
   17524:	lsr	ip, r5, #24
   17528:	orr	r3, ip, r4, lsl #8
   1752c:	add	ip, sp, #320	; 0x140
   17530:	ldrd	r4, [ip]
   17534:	adds	r4, r4, r0
   17538:	adc	r5, r5, r1
   1753c:	adds	r4, r4, r2
   17540:	adc	r5, r5, r3
   17544:	strd	r4, [sp, #64]	; 0x40
   17548:	eor	r4, r4, r8
   1754c:	eor	r5, r5, r9
   17550:	lsr	ip, r4, #16
   17554:	orr	r1, ip, r5, lsl #16
   17558:	str	r1, [sp, #24]
   1755c:	lsr	r1, r5, #16
   17560:	orr	r1, r1, r4, lsl #16
   17564:	str	r1, [sp, #28]
   17568:	ldrd	r8, [sp, #24]
   1756c:	adds	r8, r8, r6
   17570:	adc	r9, r9, r7
   17574:	mov	r0, r8
   17578:	mov	r1, r9
   1757c:	strd	r0, [sp, #104]	; 0x68
   17580:	eor	r0, r0, r2
   17584:	eor	r1, r1, r3
   17588:	mov	r3, r1
   1758c:	lsl	r1, r1, #1
   17590:	orr	r1, r1, r0, lsr #31
   17594:	str	r1, [sp, #52]	; 0x34
   17598:	lsl	r2, r0, #1
   1759c:	orr	r3, r2, r3, lsr #31
   175a0:	str	r3, [sp, #48]	; 0x30
   175a4:	add	r3, sp, #280	; 0x118
   175a8:	ldrd	r0, [r3]
   175ac:	ldrd	r6, [sp, #80]	; 0x50
   175b0:	adds	r0, r0, r6
   175b4:	adc	r1, r1, r7
   175b8:	ldrd	r4, [sp, #16]
   175bc:	adds	r4, r4, r0
   175c0:	adc	r5, r5, r1
   175c4:	mov	r0, r4
   175c8:	mov	r1, r5
   175cc:	ldrd	r2, [sp, #32]
   175d0:	eor	r2, r2, r4
   175d4:	eor	r3, r3, r5
   175d8:	mov	r4, r3
   175dc:	mov	r5, r2
   175e0:	ldrd	r6, [sp, #112]	; 0x70
   175e4:	mov	r8, r3
   175e8:	mov	r9, r2
   175ec:	adds	r6, r6, r4
   175f0:	adc	r7, r7, r5
   175f4:	ldrd	r4, [sp, #16]
   175f8:	eor	r4, r4, r6
   175fc:	eor	r5, r5, r7
   17600:	lsr	ip, r4, #24
   17604:	orr	r2, ip, r5, lsl #8
   17608:	lsr	ip, r5, #24
   1760c:	orr	r3, ip, r4, lsl #8
   17610:	add	ip, sp, #312	; 0x138
   17614:	ldrd	r4, [ip]
   17618:	adds	r4, r4, r0
   1761c:	adc	r5, r5, r1
   17620:	adds	r4, r4, r2
   17624:	adc	r5, r5, r3
   17628:	mov	r0, r8
   1762c:	mov	r1, r9
   17630:	strd	r4, [sp, #80]	; 0x50
   17634:	eor	r0, r0, r4
   17638:	eor	r1, r1, r5
   1763c:	lsr	ip, r0, #16
   17640:	orr	r4, ip, r1, lsl #16
   17644:	lsr	r1, r1, #16
   17648:	orr	r5, r1, r0, lsl #16
   1764c:	adds	r6, r6, r4
   17650:	adc	r7, r7, r5
   17654:	eor	r2, r2, r6
   17658:	eor	r3, r3, r7
   1765c:	lsl	r1, r3, #1
   17660:	orr	r1, r1, r2, lsr #31
   17664:	str	r1, [sp, #20]
   17668:	lsl	r2, r2, #1
   1766c:	orr	r3, r2, r3, lsr #31
   17670:	str	r3, [sp, #16]
   17674:	add	r3, sp, #392	; 0x188
   17678:	ldrd	r0, [r3]
   1767c:	ldrd	r2, [sp, #72]	; 0x48
   17680:	adds	r0, r0, r2
   17684:	adc	r1, r1, r3
   17688:	ldrd	r2, [sp, #40]	; 0x28
   1768c:	adds	r2, r2, r0
   17690:	adc	r3, r3, r1
   17694:	mov	r0, r2
   17698:	mov	r1, r3
   1769c:	eor	r4, r4, r2
   176a0:	eor	r5, r5, r3
   176a4:	str	r5, [sp, #32]
   176a8:	str	r4, [sp, #36]	; 0x24
   176ac:	ldrd	r4, [sp, #32]
   176b0:	ldrd	r2, [sp, #104]	; 0x68
   176b4:	adds	r2, r2, r4
   176b8:	adc	r3, r3, r5
   176bc:	mov	r8, r2
   176c0:	mov	r9, r3
   176c4:	ldrd	r4, [sp, #40]	; 0x28
   176c8:	eor	r4, r4, r2
   176cc:	eor	r5, r5, r3
   176d0:	lsr	ip, r4, #24
   176d4:	orr	r2, ip, r5, lsl #8
   176d8:	lsr	ip, r5, #24
   176dc:	orr	r3, ip, r4, lsl #8
   176e0:	add	ip, sp, #360	; 0x168
   176e4:	ldrd	r4, [ip]
   176e8:	adds	r4, r4, r0
   176ec:	adc	r5, r5, r1
   176f0:	adds	r4, r4, r2
   176f4:	adc	r5, r5, r3
   176f8:	ldrd	r0, [sp, #32]
   176fc:	strd	r4, [sp, #72]	; 0x48
   17700:	eor	r0, r0, r4
   17704:	eor	r1, r1, r5
   17708:	lsr	ip, r0, #16
   1770c:	orr	ip, ip, r1, lsl #16
   17710:	str	ip, [sp, #32]
   17714:	lsr	r1, r1, #16
   17718:	orr	r1, r1, r0, lsl #16
   1771c:	str	r1, [sp, #36]	; 0x24
   17720:	ldrd	r0, [sp, #32]
   17724:	adds	r0, r0, r8
   17728:	adc	r1, r1, r9
   1772c:	mov	r8, r0
   17730:	mov	r9, r1
   17734:	strd	r8, [sp, #104]	; 0x68
   17738:	eor	r8, r8, r2
   1773c:	eor	r9, r9, r3
   17740:	lsl	r1, r9, #1
   17744:	orr	r1, r1, r8, lsr #31
   17748:	str	r1, [sp, #44]	; 0x2c
   1774c:	lsl	r2, r8, #1
   17750:	orr	r3, r2, r9, lsr #31
   17754:	str	r3, [sp, #40]	; 0x28
   17758:	add	r3, sp, #344	; 0x158
   1775c:	ldrd	r8, [r3]
   17760:	ldrd	r4, [sp, #88]	; 0x58
   17764:	adds	r8, r8, r4
   17768:	adc	r9, r9, r5
   1776c:	ldrd	r4, [sp, #48]	; 0x30
   17770:	adds	r4, r4, r8
   17774:	adc	r5, r5, r9
   17778:	mov	r0, r4
   1777c:	mov	r1, r5
   17780:	ldrd	r2, [sp]
   17784:	eor	r2, r2, r4
   17788:	eor	r3, r3, r5
   1778c:	mov	r8, r3
   17790:	mov	r9, r2
   17794:	adds	r6, r6, r3
   17798:	adc	r7, r7, r2
   1779c:	ldrd	r4, [sp, #48]	; 0x30
   177a0:	eor	r4, r4, r6
   177a4:	eor	r5, r5, r7
   177a8:	lsr	ip, r4, #24
   177ac:	orr	r2, ip, r5, lsl #8
   177b0:	lsr	ip, r5, #24
   177b4:	orr	r3, ip, r4, lsl #8
   177b8:	add	ip, sp, #384	; 0x180
   177bc:	ldrd	r4, [ip]
   177c0:	adds	r4, r4, r0
   177c4:	adc	r5, r5, r1
   177c8:	adds	r4, r4, r2
   177cc:	adc	r5, r5, r3
   177d0:	mov	r0, r4
   177d4:	mov	r1, r5
   177d8:	strd	r0, [sp, #88]	; 0x58
   177dc:	eor	r0, r0, r8
   177e0:	eor	r1, r1, r9
   177e4:	mov	r9, r1
   177e8:	lsr	ip, r0, #16
   177ec:	orr	r1, ip, r1, lsl #16
   177f0:	str	r1, [sp]
   177f4:	lsr	r1, r9, #16
   177f8:	orr	r1, r1, r0, lsl #16
   177fc:	str	r1, [sp, #4]
   17800:	ldrd	r4, [sp]
   17804:	adds	r4, r4, r6
   17808:	adc	r5, r5, r7
   1780c:	strd	r4, [sp, #112]	; 0x70
   17810:	mov	r8, r4
   17814:	mov	r9, r5
   17818:	eor	r8, r8, r2
   1781c:	eor	r9, r9, r3
   17820:	lsl	r1, r9, #1
   17824:	orr	r1, r1, r8, lsr #31
   17828:	str	r1, [sp, #52]	; 0x34
   1782c:	lsl	r2, r8, #1
   17830:	orr	r3, r2, r9, lsr #31
   17834:	str	r3, [sp, #48]	; 0x30
   17838:	add	r3, sp, #296	; 0x128
   1783c:	ldrd	r0, [r3]
   17840:	ldrd	r4, [sp, #64]	; 0x40
   17844:	adds	r0, r0, r4
   17848:	adc	r1, r1, r5
   1784c:	ldrd	r4, [sp, #16]
   17850:	adds	r4, r4, r0
   17854:	adc	r5, r5, r1
   17858:	mov	r0, r4
   1785c:	mov	r1, r5
   17860:	ldrd	r2, [sp, #8]
   17864:	eor	r2, r2, r4
   17868:	eor	r3, r3, r5
   1786c:	mov	r8, r3
   17870:	mov	r9, r2
   17874:	ldrd	r6, [sp, #96]	; 0x60
   17878:	adds	r6, r6, r3
   1787c:	adc	r7, r7, r2
   17880:	ldrd	r4, [sp, #16]
   17884:	eor	r4, r4, r6
   17888:	eor	r5, r5, r7
   1788c:	lsr	ip, r4, #24
   17890:	orr	r2, ip, r5, lsl #8
   17894:	lsr	ip, r5, #24
   17898:	orr	r3, ip, r4, lsl #8
   1789c:	add	ip, sp, #368	; 0x170
   178a0:	ldrd	r4, [ip]
   178a4:	adds	r4, r4, r0
   178a8:	adc	r5, r5, r1
   178ac:	adds	r4, r4, r2
   178b0:	adc	r5, r5, r3
   178b4:	strd	r4, [sp, #64]	; 0x40
   178b8:	eor	r4, r4, r8
   178bc:	eor	r5, r5, r9
   178c0:	lsr	ip, r4, #16
   178c4:	orr	r1, ip, r5, lsl #16
   178c8:	str	r1, [sp, #8]
   178cc:	lsr	r1, r5, #16
   178d0:	orr	r1, r1, r4, lsl #16
   178d4:	str	r1, [sp, #12]
   178d8:	ldrd	r4, [sp, #8]
   178dc:	adds	r4, r4, r6
   178e0:	adc	r5, r5, r7
   178e4:	mov	r8, r4
   178e8:	mov	r9, r5
   178ec:	eor	r2, r2, r4
   178f0:	eor	r3, r3, r5
   178f4:	lsl	r1, r3, #1
   178f8:	orr	r1, r1, r2, lsr #31
   178fc:	str	r1, [sp, #20]
   17900:	lsl	r2, r2, #1
   17904:	orr	r3, r2, r3, lsr #31
   17908:	str	r3, [sp, #16]
   1790c:	add	r3, sp, #376	; 0x178
   17910:	ldrd	r0, [r3]
   17914:	ldrd	r2, [sp, #80]	; 0x50
   17918:	adds	r0, r0, r2
   1791c:	adc	r1, r1, r3
   17920:	ldrd	r4, [sp, #56]	; 0x38
   17924:	adds	r2, r4, r0
   17928:	adc	r3, r5, r1
   1792c:	mov	r0, r2
   17930:	mov	r1, r3
   17934:	ldrd	r2, [sp, #24]
   17938:	eor	r2, r2, r0
   1793c:	eor	r3, r3, r1
   17940:	str	r3, [sp, #24]
   17944:	str	r2, [sp, #28]
   17948:	ldrd	r6, [sp, #120]	; 0x78
   1794c:	ldrd	r2, [sp, #24]
   17950:	adds	r6, r6, r2
   17954:	adc	r7, r7, r3
   17958:	mov	r2, r4
   1795c:	mov	r3, r5
   17960:	eor	r2, r2, r6
   17964:	eor	r3, r3, r7
   17968:	mov	r4, r2
   1796c:	lsr	ip, r2, #24
   17970:	orr	r2, ip, r3, lsl #8
   17974:	lsr	ip, r3, #24
   17978:	orr	r3, ip, r4, lsl #8
   1797c:	add	ip, sp, #272	; 0x110
   17980:	ldrd	r4, [ip]
   17984:	adds	r4, r4, r0
   17988:	adc	r5, r5, r1
   1798c:	adds	r4, r4, r2
   17990:	adc	r5, r5, r3
   17994:	ldrd	r0, [sp, #24]
   17998:	strd	r4, [sp, #80]	; 0x50
   1799c:	eor	r0, r0, r4
   179a0:	eor	r1, r1, r5
   179a4:	lsr	ip, r0, #16
   179a8:	orr	ip, ip, r1, lsl #16
   179ac:	str	ip, [sp, #24]
   179b0:	lsr	r1, r1, #16
   179b4:	orr	r1, r1, r0, lsl #16
   179b8:	str	r1, [sp, #28]
   179bc:	ldrd	r0, [sp, #24]
   179c0:	adds	r0, r0, r6
   179c4:	adc	r1, r1, r7
   179c8:	mov	r6, r0
   179cc:	mov	r7, r1
   179d0:	eor	r2, r2, r0
   179d4:	eor	r3, r3, r1
   179d8:	lsl	r1, r3, #1
   179dc:	orr	r5, r1, r2, lsr #31
   179e0:	lsl	r2, r2, #1
   179e4:	orr	r4, r2, r3, lsr #31
   179e8:	add	r3, sp, #272	; 0x110
   179ec:	ldrd	r0, [r3]
   179f0:	ldrd	r2, [sp, #72]	; 0x48
   179f4:	adds	r0, r0, r2
   179f8:	adc	r1, r1, r3
   179fc:	adds	r0, r0, r4
   17a00:	adc	r1, r1, r5
   17a04:	ldrd	r2, [sp]
   17a08:	eor	r2, r2, r0
   17a0c:	eor	r3, r3, r1
   17a10:	strd	r2, [sp, #56]	; 0x38
   17a14:	ldrd	r2, [sp, #56]	; 0x38
   17a18:	str	r3, [sp]
   17a1c:	str	r2, [sp, #4]
   17a20:	ldrd	r2, [sp]
   17a24:	adds	r2, r2, r8
   17a28:	adc	r3, r3, r9
   17a2c:	mov	r8, r2
   17a30:	mov	r9, r3
   17a34:	eor	r4, r4, r2
   17a38:	eor	r5, r5, r3
   17a3c:	lsr	ip, r4, #24
   17a40:	orr	r2, ip, r5, lsl #8
   17a44:	lsr	ip, r5, #24
   17a48:	orr	r3, ip, r4, lsl #8
   17a4c:	add	ip, sp, #280	; 0x118
   17a50:	ldrd	r4, [ip]
   17a54:	adds	r4, r4, r0
   17a58:	adc	r5, r5, r1
   17a5c:	adds	r4, r4, r2
   17a60:	adc	r5, r5, r3
   17a64:	ldrd	r0, [sp]
   17a68:	strd	r4, [sp, #72]	; 0x48
   17a6c:	eor	r0, r0, r4
   17a70:	eor	r1, r1, r5
   17a74:	lsr	ip, r0, #16
   17a78:	orr	ip, ip, r1, lsl #16
   17a7c:	str	ip, [sp]
   17a80:	lsr	r1, r1, #16
   17a84:	orr	r1, r1, r0, lsl #16
   17a88:	str	r1, [sp, #4]
   17a8c:	ldrd	r4, [sp]
   17a90:	adds	r4, r4, r8
   17a94:	adc	r5, r5, r9
   17a98:	strd	r4, [sp, #96]	; 0x60
   17a9c:	mov	r0, r4
   17aa0:	mov	r1, r5
   17aa4:	eor	r0, r0, r2
   17aa8:	eor	r1, r1, r3
   17aac:	mov	r3, r1
   17ab0:	lsl	r1, r1, #1
   17ab4:	orr	r1, r1, r0, lsr #31
   17ab8:	str	r1, [sp, #60]	; 0x3c
   17abc:	lsl	r2, r0, #1
   17ac0:	orr	r3, r2, r3, lsr #31
   17ac4:	str	r3, [sp, #56]	; 0x38
   17ac8:	add	r3, sp, #288	; 0x120
   17acc:	ldrd	r8, [r3]
   17ad0:	ldrd	r4, [sp, #88]	; 0x58
   17ad4:	adds	r8, r8, r4
   17ad8:	adc	r9, r9, r5
   17adc:	ldrd	r2, [sp, #40]	; 0x28
   17ae0:	adds	r2, r2, r8
   17ae4:	adc	r3, r3, r9
   17ae8:	mov	r0, r2
   17aec:	mov	r1, r3
   17af0:	ldrd	r4, [sp, #8]
   17af4:	eor	r4, r4, r2
   17af8:	eor	r5, r5, r3
   17afc:	mov	r8, r5
   17b00:	mov	r9, r4
   17b04:	adds	r6, r6, r5
   17b08:	adc	r7, r7, r4
   17b0c:	ldrd	r4, [sp, #40]	; 0x28
   17b10:	eor	r4, r4, r6
   17b14:	eor	r5, r5, r7
   17b18:	lsr	ip, r4, #24
   17b1c:	orr	r2, ip, r5, lsl #8
   17b20:	lsr	ip, r5, #24
   17b24:	orr	r3, ip, r4, lsl #8
   17b28:	add	ip, sp, #296	; 0x128
   17b2c:	ldrd	r4, [ip]
   17b30:	adds	r4, r4, r0
   17b34:	adc	r5, r5, r1
   17b38:	adds	r4, r4, r2
   17b3c:	adc	r5, r5, r3
   17b40:	mov	r0, r4
   17b44:	mov	r1, r5
   17b48:	strd	r0, [sp, #88]	; 0x58
   17b4c:	eor	r0, r0, r8
   17b50:	eor	r1, r1, r9
   17b54:	mov	r9, r1
   17b58:	lsr	ip, r0, #16
   17b5c:	orr	r1, ip, r1, lsl #16
   17b60:	str	r1, [sp, #8]
   17b64:	lsr	r1, r9, #16
   17b68:	orr	r1, r1, r0, lsl #16
   17b6c:	str	r1, [sp, #12]
   17b70:	ldrd	r4, [sp, #8]
   17b74:	adds	r4, r4, r6
   17b78:	adc	r5, r5, r7
   17b7c:	strd	r4, [sp, #120]	; 0x78
   17b80:	mov	r0, r4
   17b84:	mov	r1, r5
   17b88:	eor	r0, r0, r2
   17b8c:	eor	r1, r1, r3
   17b90:	mov	r3, r1
   17b94:	lsl	r1, r1, #1
   17b98:	orr	r1, r1, r0, lsr #31
   17b9c:	str	r1, [sp, #44]	; 0x2c
   17ba0:	lsl	r2, r0, #1
   17ba4:	orr	r3, r2, r3, lsr #31
   17ba8:	str	r3, [sp, #40]	; 0x28
   17bac:	add	r3, sp, #304	; 0x130
   17bb0:	ldrd	r8, [r3]
   17bb4:	ldrd	r4, [sp, #64]	; 0x40
   17bb8:	adds	r8, r8, r4
   17bbc:	adc	r9, r9, r5
   17bc0:	ldrd	r4, [sp, #48]	; 0x30
   17bc4:	adds	r4, r4, r8
   17bc8:	adc	r5, r5, r9
   17bcc:	mov	r0, r4
   17bd0:	mov	r1, r5
   17bd4:	ldrd	r2, [sp, #24]
   17bd8:	eor	r2, r2, r4
   17bdc:	eor	r3, r3, r5
   17be0:	mov	r8, r3
   17be4:	mov	r9, r2
   17be8:	ldrd	r6, [sp, #104]	; 0x68
   17bec:	adds	r6, r6, r3
   17bf0:	adc	r7, r7, r2
   17bf4:	ldrd	r4, [sp, #48]	; 0x30
   17bf8:	eor	r4, r4, r6
   17bfc:	eor	r5, r5, r7
   17c00:	lsr	ip, r4, #24
   17c04:	orr	r2, ip, r5, lsl #8
   17c08:	lsr	ip, r5, #24
   17c0c:	orr	r3, ip, r4, lsl #8
   17c10:	add	ip, sp, #312	; 0x138
   17c14:	ldrd	r4, [ip]
   17c18:	adds	r4, r4, r0
   17c1c:	adc	r5, r5, r1
   17c20:	adds	r4, r4, r2
   17c24:	adc	r5, r5, r3
   17c28:	strd	r4, [sp, #64]	; 0x40
   17c2c:	eor	r4, r4, r8
   17c30:	eor	r5, r5, r9
   17c34:	lsr	ip, r4, #16
   17c38:	orr	r1, ip, r5, lsl #16
   17c3c:	str	r1, [sp, #24]
   17c40:	lsr	r1, r5, #16
   17c44:	orr	r1, r1, r4, lsl #16
   17c48:	str	r1, [sp, #28]
   17c4c:	ldrd	r8, [sp, #24]
   17c50:	adds	r8, r8, r6
   17c54:	adc	r9, r9, r7
   17c58:	mov	r0, r8
   17c5c:	mov	r1, r9
   17c60:	strd	r0, [sp, #104]	; 0x68
   17c64:	eor	r0, r0, r2
   17c68:	eor	r1, r1, r3
   17c6c:	mov	r3, r1
   17c70:	lsl	r1, r1, #1
   17c74:	orr	r1, r1, r0, lsr #31
   17c78:	str	r1, [sp, #52]	; 0x34
   17c7c:	lsl	r2, r0, #1
   17c80:	orr	r3, r2, r3, lsr #31
   17c84:	str	r3, [sp, #48]	; 0x30
   17c88:	add	r3, sp, #320	; 0x140
   17c8c:	ldrd	r0, [r3]
   17c90:	ldrd	r6, [sp, #80]	; 0x50
   17c94:	adds	r0, r0, r6
   17c98:	adc	r1, r1, r7
   17c9c:	ldrd	r4, [sp, #16]
   17ca0:	adds	r4, r4, r0
   17ca4:	adc	r5, r5, r1
   17ca8:	mov	r0, r4
   17cac:	mov	r1, r5
   17cb0:	ldrd	r2, [sp, #32]
   17cb4:	eor	r2, r2, r4
   17cb8:	eor	r3, r3, r5
   17cbc:	mov	r4, r3
   17cc0:	mov	r5, r2
   17cc4:	ldrd	r6, [sp, #112]	; 0x70
   17cc8:	mov	r8, r3
   17ccc:	mov	r9, r2
   17cd0:	adds	r6, r6, r4
   17cd4:	adc	r7, r7, r5
   17cd8:	ldrd	r4, [sp, #16]
   17cdc:	eor	r4, r4, r6
   17ce0:	eor	r5, r5, r7
   17ce4:	lsr	ip, r4, #24
   17ce8:	orr	r2, ip, r5, lsl #8
   17cec:	lsr	ip, r5, #24
   17cf0:	orr	r3, ip, r4, lsl #8
   17cf4:	add	ip, sp, #328	; 0x148
   17cf8:	ldrd	r4, [ip]
   17cfc:	adds	r4, r4, r0
   17d00:	adc	r5, r5, r1
   17d04:	adds	r4, r4, r2
   17d08:	adc	r5, r5, r3
   17d0c:	mov	r0, r8
   17d10:	mov	r1, r9
   17d14:	strd	r4, [sp, #80]	; 0x50
   17d18:	eor	r0, r0, r4
   17d1c:	eor	r1, r1, r5
   17d20:	lsr	ip, r0, #16
   17d24:	orr	r4, ip, r1, lsl #16
   17d28:	lsr	r1, r1, #16
   17d2c:	orr	r5, r1, r0, lsl #16
   17d30:	adds	r6, r6, r4
   17d34:	adc	r7, r7, r5
   17d38:	eor	r2, r2, r6
   17d3c:	eor	r3, r3, r7
   17d40:	lsl	r1, r3, #1
   17d44:	orr	r1, r1, r2, lsr #31
   17d48:	str	r1, [sp, #36]	; 0x24
   17d4c:	lsl	r2, r2, #1
   17d50:	orr	r3, r2, r3, lsr #31
   17d54:	str	r3, [sp, #32]
   17d58:	add	r3, sp, #336	; 0x150
   17d5c:	ldrd	r0, [r3]
   17d60:	ldrd	r2, [sp, #72]	; 0x48
   17d64:	adds	r0, r0, r2
   17d68:	adc	r1, r1, r3
   17d6c:	ldrd	r2, [sp, #40]	; 0x28
   17d70:	adds	r2, r2, r0
   17d74:	adc	r3, r3, r1
   17d78:	mov	r0, r2
   17d7c:	mov	r1, r3
   17d80:	eor	r4, r4, r2
   17d84:	eor	r5, r5, r3
   17d88:	str	r5, [sp, #16]
   17d8c:	str	r4, [sp, #20]
   17d90:	ldrd	r4, [sp, #16]
   17d94:	ldrd	r2, [sp, #104]	; 0x68
   17d98:	adds	r2, r2, r4
   17d9c:	adc	r3, r3, r5
   17da0:	mov	r8, r2
   17da4:	mov	r9, r3
   17da8:	ldrd	r4, [sp, #40]	; 0x28
   17dac:	eor	r4, r4, r2
   17db0:	eor	r5, r5, r3
   17db4:	lsr	ip, r4, #24
   17db8:	orr	r2, ip, r5, lsl #8
   17dbc:	lsr	ip, r5, #24
   17dc0:	orr	r3, ip, r4, lsl #8
   17dc4:	add	ip, sp, #344	; 0x158
   17dc8:	ldrd	r4, [ip]
   17dcc:	adds	r4, r4, r0
   17dd0:	adc	r5, r5, r1
   17dd4:	adds	r4, r4, r2
   17dd8:	adc	r5, r5, r3
   17ddc:	ldrd	r0, [sp, #16]
   17de0:	strd	r4, [sp, #72]	; 0x48
   17de4:	eor	r0, r0, r4
   17de8:	eor	r1, r1, r5
   17dec:	lsr	ip, r0, #16
   17df0:	orr	ip, ip, r1, lsl #16
   17df4:	str	ip, [sp, #16]
   17df8:	lsr	r1, r1, #16
   17dfc:	orr	r1, r1, r0, lsl #16
   17e00:	str	r1, [sp, #20]
   17e04:	ldrd	r0, [sp, #16]
   17e08:	adds	r0, r0, r8
   17e0c:	adc	r1, r1, r9
   17e10:	mov	r8, r0
   17e14:	mov	r9, r1
   17e18:	strd	r8, [sp, #104]	; 0x68
   17e1c:	eor	r8, r8, r2
   17e20:	eor	r9, r9, r3
   17e24:	lsl	r1, r9, #1
   17e28:	orr	r1, r1, r8, lsr #31
   17e2c:	str	r1, [sp, #44]	; 0x2c
   17e30:	lsl	r2, r8, #1
   17e34:	orr	r3, r2, r9, lsr #31
   17e38:	str	r3, [sp, #40]	; 0x28
   17e3c:	add	r3, sp, #352	; 0x160
   17e40:	ldrd	r8, [r3]
   17e44:	ldrd	r4, [sp, #88]	; 0x58
   17e48:	adds	r8, r8, r4
   17e4c:	adc	r9, r9, r5
   17e50:	ldrd	r4, [sp, #48]	; 0x30
   17e54:	adds	r4, r4, r8
   17e58:	adc	r5, r5, r9
   17e5c:	mov	r0, r4
   17e60:	mov	r1, r5
   17e64:	ldrd	r2, [sp]
   17e68:	eor	r2, r2, r4
   17e6c:	eor	r3, r3, r5
   17e70:	mov	r8, r3
   17e74:	mov	r9, r2
   17e78:	adds	r6, r6, r3
   17e7c:	adc	r7, r7, r2
   17e80:	ldrd	r4, [sp, #48]	; 0x30
   17e84:	eor	r4, r4, r6
   17e88:	eor	r5, r5, r7
   17e8c:	lsr	ip, r4, #24
   17e90:	orr	r2, ip, r5, lsl #8
   17e94:	lsr	ip, r5, #24
   17e98:	orr	r3, ip, r4, lsl #8
   17e9c:	add	ip, sp, #360	; 0x168
   17ea0:	ldrd	r4, [ip]
   17ea4:	adds	r4, r4, r0
   17ea8:	adc	r5, r5, r1
   17eac:	adds	r4, r4, r2
   17eb0:	adc	r5, r5, r3
   17eb4:	strd	r4, [sp, #88]	; 0x58
   17eb8:	eor	r4, r4, r8
   17ebc:	eor	r5, r5, r9
   17ec0:	lsr	ip, r4, #16
   17ec4:	orr	r1, ip, r5, lsl #16
   17ec8:	str	r1, [sp]
   17ecc:	lsr	r1, r5, #16
   17ed0:	orr	r1, r1, r4, lsl #16
   17ed4:	str	r1, [sp, #4]
   17ed8:	ldrd	r4, [sp]
   17edc:	adds	r4, r4, r6
   17ee0:	adc	r5, r5, r7
   17ee4:	strd	r4, [sp, #112]	; 0x70
   17ee8:	mov	r8, r4
   17eec:	mov	r9, r5
   17ef0:	eor	r8, r8, r2
   17ef4:	eor	r9, r9, r3
   17ef8:	lsl	r1, r9, #1
   17efc:	orr	r1, r1, r8, lsr #31
   17f00:	str	r1, [sp, #52]	; 0x34
   17f04:	lsl	r2, r8, #1
   17f08:	orr	r3, r2, r9, lsr #31
   17f0c:	str	r3, [sp, #48]	; 0x30
   17f10:	add	r3, sp, #368	; 0x170
   17f14:	ldrd	r6, [r3]
   17f18:	ldrd	r2, [sp, #64]	; 0x40
   17f1c:	adds	r6, r6, r2
   17f20:	adc	r7, r7, r3
   17f24:	ldrd	r4, [sp, #32]
   17f28:	adds	r2, r4, r6
   17f2c:	adc	r3, r5, r7
   17f30:	mov	r0, r2
   17f34:	mov	r1, r3
   17f38:	ldrd	r2, [sp, #8]
   17f3c:	eor	r2, r2, r0
   17f40:	eor	r3, r3, r1
   17f44:	mov	r8, r3
   17f48:	mov	r9, r2
   17f4c:	ldrd	r6, [sp, #96]	; 0x60
   17f50:	adds	r6, r6, r3
   17f54:	adc	r7, r7, r2
   17f58:	mov	r2, r4
   17f5c:	mov	r3, r5
   17f60:	eor	r2, r2, r6
   17f64:	eor	r3, r3, r7
   17f68:	mov	r4, r2
   17f6c:	lsr	ip, r2, #24
   17f70:	orr	r2, ip, r3, lsl #8
   17f74:	lsr	ip, r3, #24
   17f78:	orr	r3, ip, r4, lsl #8
   17f7c:	add	ip, sp, #376	; 0x178
   17f80:	ldrd	r4, [ip]
   17f84:	adds	r4, r4, r0
   17f88:	adc	r5, r5, r1
   17f8c:	adds	r4, r4, r2
   17f90:	adc	r5, r5, r3
   17f94:	mov	r0, r4
   17f98:	mov	r1, r5
   17f9c:	strd	r0, [sp, #96]	; 0x60
   17fa0:	eor	r0, r0, r8
   17fa4:	eor	r1, r1, r9
   17fa8:	mov	r9, r1
   17fac:	lsr	ip, r0, #16
   17fb0:	orr	r1, ip, r1, lsl #16
   17fb4:	str	r1, [sp, #8]
   17fb8:	lsr	r1, r9, #16
   17fbc:	orr	r1, r1, r0, lsl #16
   17fc0:	str	r1, [sp, #12]
   17fc4:	ldrd	r4, [sp, #8]
   17fc8:	adds	r4, r4, r6
   17fcc:	adc	r5, r5, r7
   17fd0:	mov	r8, r4
   17fd4:	mov	r9, r5
   17fd8:	eor	r2, r2, r4
   17fdc:	eor	r3, r3, r5
   17fe0:	lsl	r1, r3, #1
   17fe4:	orr	r1, r1, r2, lsr #31
   17fe8:	str	r1, [sp, #68]	; 0x44
   17fec:	lsl	r2, r2, #1
   17ff0:	orr	r3, r2, r3, lsr #31
   17ff4:	str	r3, [sp, #64]	; 0x40
   17ff8:	add	r3, sp, #384	; 0x180
   17ffc:	ldrd	r6, [r3]
   18000:	ldrd	r2, [sp, #80]	; 0x50
   18004:	adds	r6, r6, r2
   18008:	adc	r7, r7, r3
   1800c:	ldrd	r4, [sp, #56]	; 0x38
   18010:	adds	r2, r4, r6
   18014:	adc	r3, r5, r7
   18018:	mov	r0, r2
   1801c:	mov	r1, r3
   18020:	ldrd	r2, [sp, #24]
   18024:	eor	r2, r2, r0
   18028:	eor	r3, r3, r1
   1802c:	str	r3, [sp, #24]
   18030:	str	r2, [sp, #28]
   18034:	ldrd	r6, [sp, #120]	; 0x78
   18038:	ldrd	r2, [sp, #24]
   1803c:	adds	r6, r6, r2
   18040:	adc	r7, r7, r3
   18044:	mov	r2, r4
   18048:	mov	r3, r5
   1804c:	eor	r2, r2, r6
   18050:	eor	r3, r3, r7
   18054:	mov	r4, r2
   18058:	lsr	ip, r2, #24
   1805c:	orr	r2, ip, r3, lsl #8
   18060:	lsr	ip, r3, #24
   18064:	orr	r3, ip, r4, lsl #8
   18068:	add	ip, sp, #392	; 0x188
   1806c:	ldrd	r4, [ip]
   18070:	adds	r4, r4, r0
   18074:	adc	r5, r5, r1
   18078:	adds	r4, r4, r2
   1807c:	adc	r5, r5, r3
   18080:	ldrd	r0, [sp, #24]
   18084:	strd	r4, [sp, #56]	; 0x38
   18088:	eor	r0, r0, r4
   1808c:	eor	r1, r1, r5
   18090:	lsr	ip, r0, #16
   18094:	orr	ip, ip, r1, lsl #16
   18098:	str	ip, [sp, #24]
   1809c:	lsr	r1, r1, #16
   180a0:	orr	r1, r1, r0, lsl #16
   180a4:	str	r1, [sp, #28]
   180a8:	ldrd	r4, [sp, #24]
   180ac:	adds	r4, r4, r6
   180b0:	adc	r5, r5, r7
   180b4:	mov	r6, r4
   180b8:	mov	r7, r5
   180bc:	eor	r2, r2, r4
   180c0:	eor	r3, r3, r5
   180c4:	lsl	r1, r3, #1
   180c8:	orr	r5, r1, r2, lsr #31
   180cc:	lsl	r2, r2, #1
   180d0:	orr	r4, r2, r3, lsr #31
   180d4:	add	r3, sp, #384	; 0x180
   180d8:	ldrd	r0, [r3]
   180dc:	ldrd	r2, [sp, #72]	; 0x48
   180e0:	adds	r0, r0, r2
   180e4:	adc	r1, r1, r3
   180e8:	adds	r0, r0, r4
   180ec:	adc	r1, r1, r5
   180f0:	mov	r2, r0
   180f4:	mov	r3, r1
   180f8:	ldrd	r0, [sp]
   180fc:	strd	r2, [sp, #32]
   18100:	eor	r2, r2, r0
   18104:	eor	r3, r3, r1
   18108:	str	r3, [sp]
   1810c:	str	r2, [sp, #4]
   18110:	ldrd	r0, [sp]
   18114:	adds	r0, r0, r8
   18118:	adc	r1, r1, r9
   1811c:	mov	r8, r0
   18120:	mov	r9, r1
   18124:	eor	r4, r4, r0
   18128:	eor	r5, r5, r1
   1812c:	lsr	ip, r4, #24
   18130:	orr	r0, ip, r5, lsl #8
   18134:	lsr	ip, r5, #24
   18138:	orr	r1, ip, r4, lsl #8
   1813c:	add	r3, sp, #352	; 0x160
   18140:	ldrd	r4, [r3]
   18144:	ldrd	r2, [sp, #32]
   18148:	adds	r2, r2, r4
   1814c:	adc	r3, r3, r5
   18150:	adds	r4, r2, r0
   18154:	adc	r5, r3, r1
   18158:	ldrd	r2, [sp]
   1815c:	strd	r4, [sp, #72]	; 0x48
   18160:	eor	r2, r2, r4
   18164:	eor	r3, r3, r5
   18168:	lsr	ip, r2, #16
   1816c:	orr	ip, ip, r3, lsl #16
   18170:	str	ip, [sp]
   18174:	lsr	r3, r3, #16
   18178:	orr	r3, r3, r2, lsl #16
   1817c:	str	r3, [sp, #4]
   18180:	ldrd	r2, [sp]
   18184:	adds	r2, r2, r8
   18188:	adc	r3, r3, r9
   1818c:	strd	r2, [sp, #80]	; 0x50
   18190:	eor	r2, r2, r0
   18194:	eor	r3, r3, r1
   18198:	mov	r1, r3
   1819c:	lsl	r3, r3, #1
   181a0:	orr	r3, r3, r2, lsr #31
   181a4:	str	r3, [sp, #36]	; 0x24
   181a8:	lsl	r3, r2, #1
   181ac:	orr	r3, r3, r1, lsr #31
   181b0:	str	r3, [sp, #32]
   181b4:	add	r3, sp, #304	; 0x130
   181b8:	ldrd	r2, [r3]
   181bc:	ldrd	r4, [sp, #88]	; 0x58
   181c0:	adds	r2, r2, r4
   181c4:	adc	r3, r3, r5
   181c8:	ldrd	r4, [sp, #40]	; 0x28
   181cc:	adds	r8, r4, r2
   181d0:	adc	r9, r5, r3
   181d4:	mov	r2, r8
   181d8:	mov	r3, r9
   181dc:	ldrd	r0, [sp, #8]
   181e0:	eor	r0, r0, r8
   181e4:	eor	r1, r1, r9
   181e8:	mov	r8, r1
   181ec:	mov	r9, r0
   181f0:	adds	r6, r6, r1
   181f4:	adc	r7, r7, r0
   181f8:	eor	r4, r4, r6
   181fc:	eor	r5, r5, r7
   18200:	lsr	ip, r4, #24
   18204:	orr	r0, ip, r5, lsl #8
   18208:	lsr	ip, r5, #24
   1820c:	orr	r1, ip, r4, lsl #8
   18210:	add	ip, sp, #336	; 0x150
   18214:	ldrd	r4, [ip]
   18218:	adds	r4, r4, r2
   1821c:	adc	r5, r5, r3
   18220:	adds	r4, r4, r0
   18224:	adc	r5, r5, r1
   18228:	strd	r4, [sp, #88]	; 0x58
   1822c:	mov	r2, r4
   18230:	mov	r3, r5
   18234:	eor	r2, r2, r8
   18238:	eor	r3, r3, r9
   1823c:	mov	r9, r3
   18240:	lsr	ip, r2, #16
   18244:	orr	r3, ip, r3, lsl #16
   18248:	str	r3, [sp, #8]
   1824c:	lsr	r3, r9, #16
   18250:	orr	r3, r3, r2, lsl #16
   18254:	str	r3, [sp, #12]
   18258:	ldrd	r4, [sp, #8]
   1825c:	adds	r4, r4, r6
   18260:	adc	r5, r5, r7
   18264:	mov	r6, r4
   18268:	mov	r7, r5
   1826c:	strd	r6, [sp, #120]	; 0x78
   18270:	eor	r6, r6, r0
   18274:	eor	r7, r7, r1
   18278:	lsl	r3, r7, #1
   1827c:	orr	r3, r3, r6, lsr #31
   18280:	str	r3, [sp, #44]	; 0x2c
   18284:	lsl	r3, r6, #1
   18288:	orr	r3, r3, r7, lsr #31
   1828c:	str	r3, [sp, #40]	; 0x28
   18290:	add	r3, sp, #344	; 0x158
   18294:	ldrd	r2, [r3]
   18298:	ldrd	r6, [sp, #96]	; 0x60
   1829c:	adds	r2, r2, r6
   182a0:	adc	r3, r3, r7
   182a4:	ldrd	r4, [sp, #48]	; 0x30
   182a8:	adds	r6, r4, r2
   182ac:	adc	r7, r5, r3
   182b0:	mov	r2, r6
   182b4:	mov	r3, r7
   182b8:	ldrd	r0, [sp, #24]
   182bc:	eor	r0, r0, r6
   182c0:	eor	r1, r1, r7
   182c4:	mov	r8, r1
   182c8:	mov	r9, r0
   182cc:	ldrd	r6, [sp, #104]	; 0x68
   182d0:	adds	r6, r6, r1
   182d4:	adc	r7, r7, r0
   182d8:	eor	r4, r4, r6
   182dc:	eor	r5, r5, r7
   182e0:	lsr	ip, r4, #24
   182e4:	orr	r0, ip, r5, lsl #8
   182e8:	lsr	ip, r5, #24
   182ec:	orr	r1, ip, r4, lsl #8
   182f0:	add	ip, sp, #392	; 0x188
   182f4:	ldrd	r4, [ip]
   182f8:	adds	r4, r4, r2
   182fc:	adc	r5, r5, r3
   18300:	adds	r4, r4, r0
   18304:	adc	r5, r5, r1
   18308:	strd	r4, [sp, #96]	; 0x60
   1830c:	eor	r4, r4, r8
   18310:	eor	r5, r5, r9
   18314:	lsr	ip, r4, #16
   18318:	orr	r3, ip, r5, lsl #16
   1831c:	str	r3, [sp, #24]
   18320:	lsr	r3, r5, #16
   18324:	orr	r3, r3, r4, lsl #16
   18328:	str	r3, [sp, #28]
   1832c:	ldrd	r8, [sp, #24]
   18330:	adds	r8, r8, r6
   18334:	adc	r9, r9, r7
   18338:	mov	r6, r8
   1833c:	mov	r7, r9
   18340:	eor	r0, r0, r8
   18344:	eor	r1, r1, r9
   18348:	lsl	r3, r1, #1
   1834c:	orr	r3, r3, r0, lsr #31
   18350:	str	r3, [sp, #52]	; 0x34
   18354:	lsl	r3, r0, #1
   18358:	orr	r3, r3, r1, lsr #31
   1835c:	str	r3, [sp, #48]	; 0x30
   18360:	add	r3, sp, #376	; 0x178
   18364:	ldrd	r2, [r3]
   18368:	ldrd	r8, [sp, #56]	; 0x38
   1836c:	adds	r2, r2, r8
   18370:	adc	r3, r3, r9
   18374:	ldrd	r4, [sp, #64]	; 0x40
   18378:	adds	r8, r4, r2
   1837c:	adc	r9, r5, r3
   18380:	mov	r2, r8
   18384:	mov	r3, r9
   18388:	ldrd	r0, [sp, #16]
   1838c:	eor	r0, r0, r8
   18390:	eor	r1, r1, r9
   18394:	str	r1, [sp, #16]
   18398:	str	r0, [sp, #20]
   1839c:	ldrd	r8, [sp, #112]	; 0x70
   183a0:	ldrd	r0, [sp, #16]
   183a4:	adds	r8, r8, r0
   183a8:	adc	r9, r9, r1
   183ac:	eor	r4, r4, r8
   183b0:	eor	r5, r5, r9
   183b4:	lsr	ip, r4, #24
   183b8:	orr	r0, ip, r5, lsl #8
   183bc:	lsr	ip, r5, #24
   183c0:	orr	r1, ip, r4, lsl #8
   183c4:	add	ip, sp, #320	; 0x140
   183c8:	ldrd	r4, [ip]
   183cc:	adds	r4, r4, r2
   183d0:	adc	r5, r5, r3
   183d4:	adds	r4, r4, r0
   183d8:	adc	r5, r5, r1
   183dc:	ldrd	r2, [sp, #16]
   183e0:	strd	r4, [sp, #56]	; 0x38
   183e4:	eor	r2, r2, r4
   183e8:	eor	r3, r3, r5
   183ec:	lsr	ip, r2, #16
   183f0:	orr	r4, ip, r3, lsl #16
   183f4:	lsr	r3, r3, #16
   183f8:	orr	r5, r3, r2, lsl #16
   183fc:	adds	r2, r8, r4
   18400:	adc	r3, r9, r5
   18404:	mov	r8, r2
   18408:	mov	r9, r3
   1840c:	strd	r8, [sp, #64]	; 0x40
   18410:	eor	r8, r8, r0
   18414:	eor	r9, r9, r1
   18418:	lsl	r3, r9, #1
   1841c:	orr	r3, r3, r8, lsr #31
   18420:	str	r3, [sp, #20]
   18424:	lsl	r3, r8, #1
   18428:	orr	r3, r3, r9, lsr #31
   1842c:	str	r3, [sp, #16]
   18430:	add	r3, sp, #280	; 0x118
   18434:	ldrd	r2, [r3]
   18438:	ldrd	r0, [sp, #72]	; 0x48
   1843c:	adds	r2, r2, r0
   18440:	adc	r3, r3, r1
   18444:	ldrd	r0, [sp, #40]	; 0x28
   18448:	adds	r0, r0, r2
   1844c:	adc	r1, r1, r3
   18450:	mov	r2, r0
   18454:	mov	r3, r1
   18458:	eor	r4, r4, r0
   1845c:	eor	r5, r5, r1
   18460:	mov	r8, r5
   18464:	mov	r9, r4
   18468:	adds	r4, r6, r5
   1846c:	adc	r5, r7, r9
   18470:	ldrd	r6, [sp, #40]	; 0x28
   18474:	eor	r6, r6, r4
   18478:	eor	r7, r7, r5
   1847c:	lsr	ip, r6, #24
   18480:	orr	r0, ip, r7, lsl #8
   18484:	lsr	ip, r7, #24
   18488:	orr	r1, ip, r6, lsl #8
   1848c:	add	ip, sp, #368	; 0x170
   18490:	ldrd	r6, [ip]
   18494:	adds	r6, r6, r2
   18498:	adc	r7, r7, r3
   1849c:	adds	r2, r6, r0
   184a0:	adc	r3, r7, r1
   184a4:	strd	r2, [sp, #144]	; 0x90
   184a8:	eor	r2, r2, r8
   184ac:	eor	r3, r3, r9
   184b0:	lsr	ip, r2, #16
   184b4:	orr	r6, ip, r3, lsl #16
   184b8:	lsr	r3, r3, #16
   184bc:	orr	r7, r3, r2, lsl #16
   184c0:	add	r3, sp, #264	; 0x108
   184c4:	strd	r6, [r3]
   184c8:	adds	r4, r4, r6
   184cc:	adc	r5, r5, r7
   184d0:	strd	r4, [sp, #224]	; 0xe0
   184d4:	eor	r4, r4, r0
   184d8:	eor	r5, r5, r1
   184dc:	lsl	r3, r5, #1
   184e0:	orr	r3, r3, r4, lsr #31
   184e4:	lsl	r2, r4, #1
   184e8:	orr	r2, r2, r5, lsr #31
   184ec:	str	r2, [sp, #184]	; 0xb8
   184f0:	str	r3, [sp, #188]	; 0xbc
   184f4:	add	r3, sp, #272	; 0x110
   184f8:	ldrd	r6, [r3]
   184fc:	ldrd	r0, [sp, #88]	; 0x58
   18500:	adds	r6, r6, r0
   18504:	adc	r7, r7, r1
   18508:	mov	r2, r6
   1850c:	mov	r3, r7
   18510:	ldrd	r6, [sp, #48]	; 0x30
   18514:	adds	r0, r6, r2
   18518:	adc	r1, r7, r3
   1851c:	mov	r2, r0
   18520:	mov	r3, r1
   18524:	ldrd	r0, [sp]
   18528:	eor	r0, r0, r2
   1852c:	eor	r1, r1, r3
   18530:	mov	r8, r1
   18534:	mov	r9, r0
   18538:	ldrd	r4, [sp, #64]	; 0x40
   1853c:	adds	r4, r4, r1
   18540:	adc	r5, r5, r0
   18544:	mov	r0, r6
   18548:	mov	r1, r7
   1854c:	eor	r0, r0, r4
   18550:	eor	r1, r1, r5
   18554:	mov	r6, r0
   18558:	lsr	ip, r0, #24
   1855c:	orr	r0, ip, r1, lsl #8
   18560:	lsr	ip, r1, #24
   18564:	orr	r1, ip, r6, lsl #8
   18568:	add	ip, sp, #288	; 0x120
   1856c:	ldrd	r6, [ip]
   18570:	adds	r6, r6, r2
   18574:	adc	r7, r7, r3
   18578:	adds	r2, r6, r0
   1857c:	adc	r3, r7, r1
   18580:	strd	r2, [sp, #152]	; 0x98
   18584:	eor	r2, r2, r8
   18588:	eor	r3, r3, r9
   1858c:	lsr	ip, r2, #16
   18590:	orr	r6, ip, r3, lsl #16
   18594:	lsr	r3, r3, #16
   18598:	orr	r7, r3, r2, lsl #16
   1859c:	strd	r6, [sp, #240]	; 0xf0
   185a0:	adds	r4, r4, r6
   185a4:	adc	r5, r5, r7
   185a8:	strd	r4, [sp, #232]	; 0xe8
   185ac:	eor	r4, r4, r0
   185b0:	eor	r5, r5, r1
   185b4:	lsl	r3, r5, #1
   185b8:	orr	r3, r3, r4, lsr #31
   185bc:	lsl	r2, r4, #1
   185c0:	orr	r2, r2, r5, lsr #31
   185c4:	str	r2, [sp, #192]	; 0xc0
   185c8:	str	r3, [sp, #196]	; 0xc4
   185cc:	add	r3, sp, #360	; 0x168
   185d0:	ldrd	r2, [r3]
   185d4:	ldrd	r8, [sp, #96]	; 0x60
   185d8:	adds	r2, r2, r8
   185dc:	adc	r3, r3, r9
   185e0:	ldrd	r6, [sp, #16]
   185e4:	adds	r8, r6, r2
   185e8:	adc	r9, r7, r3
   185ec:	mov	r2, r8
   185f0:	mov	r3, r9
   185f4:	ldrd	r0, [sp, #8]
   185f8:	eor	r0, r0, r8
   185fc:	eor	r1, r1, r9
   18600:	mov	r8, r1
   18604:	mov	r9, r0
   18608:	ldrd	r4, [sp, #80]	; 0x50
   1860c:	adds	r4, r4, r1
   18610:	adc	r5, r5, r0
   18614:	mov	r0, r6
   18618:	mov	r1, r7
   1861c:	eor	r0, r0, r4
   18620:	eor	r1, r1, r5
   18624:	mov	r6, r0
   18628:	lsr	ip, r0, #24
   1862c:	orr	r0, ip, r1, lsl #8
   18630:	lsr	ip, r1, #24
   18634:	orr	r1, ip, r6, lsl #8
   18638:	add	ip, sp, #328	; 0x148
   1863c:	ldrd	r6, [ip]
   18640:	adds	r6, r6, r2
   18644:	adc	r7, r7, r3
   18648:	adds	r2, r6, r0
   1864c:	adc	r3, r7, r1
   18650:	strd	r2, [sp, #160]	; 0xa0
   18654:	eor	r2, r2, r8
   18658:	eor	r3, r3, r9
   1865c:	lsr	ip, r2, #16
   18660:	orr	r6, ip, r3, lsl #16
   18664:	lsr	r3, r3, #16
   18668:	orr	r7, r3, r2, lsl #16
   1866c:	strd	r6, [sp, #248]	; 0xf8
   18670:	adds	r4, r4, r6
   18674:	adc	r5, r5, r7
   18678:	strd	r4, [sp, #208]	; 0xd0
   1867c:	eor	r4, r4, r0
   18680:	eor	r5, r5, r1
   18684:	lsl	r3, r5, #1
   18688:	orr	r3, r3, r4, lsr #31
   1868c:	lsl	r2, r4, #1
   18690:	orr	r2, r2, r5, lsr #31
   18694:	str	r2, [sp, #200]	; 0xc8
   18698:	str	r3, [sp, #204]	; 0xcc
   1869c:	add	r3, sp, #312	; 0x138
   186a0:	ldrd	r2, [r3]
   186a4:	ldrd	r4, [sp, #56]	; 0x38
   186a8:	adds	r2, r2, r4
   186ac:	adc	r3, r3, r5
   186b0:	ldrd	r4, [sp, #32]
   186b4:	adds	r4, r4, r2
   186b8:	adc	r5, r5, r3
   186bc:	mov	r2, r4
   186c0:	mov	r3, r5
   186c4:	ldrd	r0, [sp, #24]
   186c8:	eor	r0, r0, r4
   186cc:	eor	r1, r1, r5
   186d0:	mov	r8, r1
   186d4:	mov	r9, r0
   186d8:	ldrd	r6, [sp, #120]	; 0x78
   186dc:	adds	r6, r6, r1
   186e0:	adc	r7, r7, r0
   186e4:	ldrd	r4, [sp, #32]
   186e8:	eor	r4, r4, r6
   186ec:	eor	r5, r5, r7
   186f0:	lsr	ip, r4, #24
   186f4:	orr	r0, ip, r5, lsl #8
   186f8:	lsr	ip, r5, #24
   186fc:	orr	r1, ip, r4, lsl #8
   18700:	add	ip, sp, #296	; 0x128
   18704:	ldrd	r4, [ip]
   18708:	adds	r4, r4, r2
   1870c:	adc	r5, r5, r3
   18710:	adds	r2, r4, r0
   18714:	adc	r3, r5, r1
   18718:	strd	r2, [sp, #168]	; 0xa8
   1871c:	eor	r8, r8, r2
   18720:	eor	r9, r9, r3
   18724:	lsr	ip, r8, #16
   18728:	orr	r2, ip, r9, lsl #16
   1872c:	lsr	ip, r9, #16
   18730:	orr	r3, ip, r8, lsl #16
   18734:	add	ip, sp, #256	; 0x100
   18738:	strd	r2, [ip]
   1873c:	adds	r6, r6, r2
   18740:	adc	r7, r7, r3
   18744:	strd	r6, [sp, #216]	; 0xd8
   18748:	eor	r0, r0, r6
   1874c:	eor	r1, r1, r7
   18750:	lsl	r3, r1, #1
   18754:	orr	r3, r3, r0, lsr #31
   18758:	lsl	r2, r0, #1
   1875c:	orr	r2, r2, r1, lsr #31
   18760:	str	r2, [sp, #176]	; 0xb0
   18764:	str	r3, [sp, #180]	; 0xb4
   18768:	ldrd	r2, [sl], #8
   1876c:	ldrd	r0, [lr, #8]
   18770:	eor	r2, r2, r0
   18774:	eor	r3, r3, r1
   18778:	ldrd	r0, [sl, #56]	; 0x38
   1877c:	eor	r2, r2, r0
   18780:	eor	r3, r3, r1
   18784:	strd	r2, [lr, #8]!
   18788:	cmp	lr, fp
   1878c:	bne	18768 <__assert_fail@plt+0x747c>
   18790:	add	sp, sp, #404	; 0x194
   18794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18798:	push	{r4, r5, r6, r7, lr}
   1879c:	sub	sp, sp, #12
   187a0:	mov	r6, r0
   187a4:	mov	r7, r1
   187a8:	mov	r2, #240	; 0xf0
   187ac:	mov	r1, #0
   187b0:	bl	111f0 <memset@plt>
   187b4:	ldr	r3, [pc, #96]	; 1881c <__assert_fail@plt+0x7530>
   187b8:	sub	r2, r6, #8
   187bc:	add	lr, r6, #56	; 0x38
   187c0:	mov	ip, r2
   187c4:	ldrd	r0, [r3], #8
   187c8:	strd	r0, [ip, #8]!
   187cc:	cmp	ip, lr
   187d0:	bne	187c4 <__assert_fail@plt+0x74d8>
   187d4:	mov	lr, r7
   187d8:	mov	r3, sp
   187dc:	ldr	r0, [lr]
   187e0:	ldr	r1, [lr, #4]
   187e4:	stmia	r3!, {r0, r1}
   187e8:	ldrd	r4, [r2, #8]
   187ec:	ldrd	r0, [sp]
   187f0:	eor	r0, r0, r4
   187f4:	eor	r1, r1, r5
   187f8:	strd	r0, [r2, #8]!
   187fc:	add	lr, lr, #8
   18800:	cmp	r2, ip
   18804:	bne	187d8 <__assert_fail@plt+0x74ec>
   18808:	ldrb	r3, [r7]
   1880c:	str	r3, [r6, #228]	; 0xe4
   18810:	mov	r0, #0
   18814:	add	sp, sp, #12
   18818:	pop	{r4, r5, r6, r7, pc}
   1881c:	andeq	r7, r3, r8, lsr #14
   18820:	sub	r3, r1, #1
   18824:	cmp	r3, #63	; 0x3f
   18828:	bhi	188a0 <__assert_fail@plt+0x75b4>
   1882c:	push	{lr}		; (str lr, [sp, #-4]!)
   18830:	sub	sp, sp, #68	; 0x44
   18834:	strb	r1, [sp]
   18838:	mov	r3, #0
   1883c:	strb	r3, [sp, #1]
   18840:	mov	r2, #1
   18844:	strb	r2, [sp, #2]
   18848:	strb	r2, [sp, #3]
   1884c:	str	r3, [sp, #4]
   18850:	str	r3, [sp, #8]
   18854:	str	r3, [sp, #12]
   18858:	strb	r3, [sp, #16]
   1885c:	strb	r3, [sp, #17]
   18860:	str	r3, [sp, #18]
   18864:	str	r3, [sp, #22]
   18868:	str	r3, [sp, #26]
   1886c:	strh	r3, [sp, #30]
   18870:	str	r3, [sp, #32]
   18874:	str	r3, [sp, #36]	; 0x24
   18878:	str	r3, [sp, #40]	; 0x28
   1887c:	str	r3, [sp, #44]	; 0x2c
   18880:	str	r3, [sp, #48]	; 0x30
   18884:	str	r3, [sp, #52]	; 0x34
   18888:	str	r3, [sp, #56]	; 0x38
   1888c:	str	r3, [sp, #60]	; 0x3c
   18890:	mov	r1, sp
   18894:	bl	18798 <__assert_fail@plt+0x74ac>
   18898:	add	sp, sp, #68	; 0x44
   1889c:	pop	{pc}		; (ldr pc, [sp], #4)
   188a0:	mvn	r0, #0
   188a4:	bx	lr
   188a8:	push	{r4, r5, r6, r7, r8, lr}
   188ac:	subs	r7, r2, #0
   188b0:	beq	188f0 <__assert_fail@plt+0x7604>
   188b4:	mov	r4, r0
   188b8:	mov	r8, r1
   188bc:	ldr	r0, [r0, #224]	; 0xe0
   188c0:	rsb	r5, r0, #128	; 0x80
   188c4:	cmp	r7, r5
   188c8:	bhi	188f8 <__assert_fail@plt+0x760c>
   188cc:	add	r0, r4, #96	; 0x60
   188d0:	ldr	r3, [r4, #224]	; 0xe0
   188d4:	mov	r2, r7
   188d8:	mov	r1, r8
   188dc:	add	r0, r0, r3
   188e0:	bl	11058 <memcpy@plt>
   188e4:	ldr	r3, [r4, #224]	; 0xe0
   188e8:	add	r7, r3, r7
   188ec:	str	r7, [r4, #224]	; 0xe0
   188f0:	mov	r0, #0
   188f4:	pop	{r4, r5, r6, r7, r8, pc}
   188f8:	mov	r3, #0
   188fc:	str	r3, [r4, #224]	; 0xe0
   18900:	add	r6, r4, #96	; 0x60
   18904:	mov	r2, r5
   18908:	add	r0, r6, r0
   1890c:	bl	11058 <memcpy@plt>
   18910:	ldrd	r2, [r4, #64]	; 0x40
   18914:	adds	r2, r2, #128	; 0x80
   18918:	adc	r3, r3, #0
   1891c:	strd	r2, [r4, #64]	; 0x40
   18920:	cmp	r3, #0
   18924:	cmpeq	r2, #127	; 0x7f
   18928:	movls	r1, #1
   1892c:	movhi	r1, #0
   18930:	ldrd	r2, [r4, #72]	; 0x48
   18934:	adds	r2, r2, r1
   18938:	adc	r3, r3, #0
   1893c:	strd	r2, [r4, #72]	; 0x48
   18940:	mov	r1, r6
   18944:	mov	r0, r4
   18948:	bl	133f8 <__assert_fail@plt+0x210c>
   1894c:	add	r8, r8, r5
   18950:	sub	r7, r7, r5
   18954:	cmp	r7, #128	; 0x80
   18958:	bls	188cc <__assert_fail@plt+0x75e0>
   1895c:	mov	r6, r8
   18960:	mov	r5, r7
   18964:	ldrd	r2, [r4, #64]	; 0x40
   18968:	adds	r2, r2, #128	; 0x80
   1896c:	adc	r3, r3, #0
   18970:	strd	r2, [r4, #64]	; 0x40
   18974:	cmp	r3, #0
   18978:	cmpeq	r2, #127	; 0x7f
   1897c:	movls	r1, #1
   18980:	movhi	r1, #0
   18984:	ldrd	r2, [r4, #72]	; 0x48
   18988:	adds	r2, r2, r1
   1898c:	adc	r3, r3, #0
   18990:	strd	r2, [r4, #72]	; 0x48
   18994:	mov	r1, r6
   18998:	mov	r0, r4
   1899c:	bl	133f8 <__assert_fail@plt+0x210c>
   189a0:	add	r6, r6, #128	; 0x80
   189a4:	sub	r5, r5, #128	; 0x80
   189a8:	cmp	r5, #128	; 0x80
   189ac:	bhi	18964 <__assert_fail@plt+0x7678>
   189b0:	sub	r3, r7, #129	; 0x81
   189b4:	bic	r2, r3, #127	; 0x7f
   189b8:	add	r2, r2, #128	; 0x80
   189bc:	add	r8, r8, r2
   189c0:	sub	r7, r7, #128	; 0x80
   189c4:	bic	r3, r3, #127	; 0x7f
   189c8:	sub	r7, r7, r3
   189cc:	b	188cc <__assert_fail@plt+0x75e0>
   189d0:	sub	ip, r1, #1
   189d4:	cmp	ip, #63	; 0x3f
   189d8:	bhi	18ad4 <__assert_fail@plt+0x77e8>
   189dc:	push	{r4, r5, r6, r7, lr}
   189e0:	sub	sp, sp, #196	; 0xc4
   189e4:	sub	lr, r3, #1
   189e8:	clz	ip, r2
   189ec:	lsr	ip, ip, #5
   189f0:	cmp	lr, #63	; 0x3f
   189f4:	orrhi	ip, ip, #1
   189f8:	cmp	ip, #0
   189fc:	bne	18adc <__assert_fail@plt+0x77f0>
   18a00:	mov	r4, r3
   18a04:	mov	r7, r2
   18a08:	mov	r5, r0
   18a0c:	strb	r1, [sp, #128]	; 0x80
   18a10:	strb	r3, [sp, #129]	; 0x81
   18a14:	mov	r3, #1
   18a18:	strb	r3, [sp, #130]	; 0x82
   18a1c:	strb	r3, [sp, #131]	; 0x83
   18a20:	mov	r1, #0
   18a24:	str	r1, [sp, #132]	; 0x84
   18a28:	str	r1, [sp, #136]	; 0x88
   18a2c:	str	r1, [sp, #140]	; 0x8c
   18a30:	strb	r1, [sp, #144]	; 0x90
   18a34:	strb	r1, [sp, #145]	; 0x91
   18a38:	str	r1, [sp, #146]	; 0x92
   18a3c:	str	r1, [sp, #150]	; 0x96
   18a40:	str	r1, [sp, #154]	; 0x9a
   18a44:	strh	r1, [sp, #158]	; 0x9e
   18a48:	str	r1, [sp, #160]	; 0xa0
   18a4c:	str	r1, [sp, #164]	; 0xa4
   18a50:	str	r1, [sp, #168]	; 0xa8
   18a54:	str	r1, [sp, #172]	; 0xac
   18a58:	str	r1, [sp, #176]	; 0xb0
   18a5c:	str	r1, [sp, #180]	; 0xb4
   18a60:	str	r1, [sp, #184]	; 0xb8
   18a64:	str	r1, [sp, #188]	; 0xbc
   18a68:	add	r1, sp, #128	; 0x80
   18a6c:	bl	18798 <__assert_fail@plt+0x74ac>
   18a70:	cmp	r0, #0
   18a74:	blt	18ae4 <__assert_fail@plt+0x77f8>
   18a78:	mov	r6, #128	; 0x80
   18a7c:	mov	r2, r6
   18a80:	mov	r1, #0
   18a84:	mov	r0, sp
   18a88:	bl	111f0 <memset@plt>
   18a8c:	mov	r3, r6
   18a90:	mov	r2, r4
   18a94:	mov	r1, r7
   18a98:	mov	r0, sp
   18a9c:	bl	110d0 <__memcpy_chk@plt>
   18aa0:	mov	r2, r6
   18aa4:	mov	r1, sp
   18aa8:	mov	r0, r5
   18aac:	bl	188a8 <__assert_fail@plt+0x75bc>
   18ab0:	ldr	r3, [pc, #52]	; 18aec <__assert_fail@plt+0x7800>
   18ab4:	ldr	r3, [r3]
   18ab8:	mov	r2, r6
   18abc:	mov	r1, #0
   18ac0:	mov	r0, sp
   18ac4:	blx	r3
   18ac8:	mov	r0, #0
   18acc:	add	sp, sp, #196	; 0xc4
   18ad0:	pop	{r4, r5, r6, r7, pc}
   18ad4:	mvn	r0, #0
   18ad8:	bx	lr
   18adc:	mvn	r0, #0
   18ae0:	b	18acc <__assert_fail@plt+0x77e0>
   18ae4:	mvn	r0, #0
   18ae8:	b	18acc <__assert_fail@plt+0x77e0>
   18aec:	andeq	sl, r4, r4, lsr r1
   18af0:	push	{r4, r5, r6, r7, lr}
   18af4:	sub	sp, sp, #76	; 0x4c
   18af8:	mov	r4, r0
   18afc:	mov	r5, r1
   18b00:	mov	r6, r2
   18b04:	mov	r2, #64	; 0x40
   18b08:	mov	r1, #0
   18b0c:	add	r0, sp, #8
   18b10:	bl	111f0 <memset@plt>
   18b14:	cmp	r5, #0
   18b18:	beq	18c18 <__assert_fail@plt+0x792c>
   18b1c:	ldr	r3, [r4, #228]	; 0xe4
   18b20:	cmp	r3, r6
   18b24:	bhi	18c20 <__assert_fail@plt+0x7934>
   18b28:	ldrd	r2, [r4, #80]	; 0x50
   18b2c:	orrs	r3, r2, r3
   18b30:	bne	18c28 <__assert_fail@plt+0x793c>
   18b34:	ldr	r0, [r4, #224]	; 0xe0
   18b38:	mov	r7, #0
   18b3c:	ldrd	r2, [r4, #64]	; 0x40
   18b40:	adds	r2, r2, r0
   18b44:	adc	r3, r3, r7
   18b48:	strd	r2, [r4, #64]	; 0x40
   18b4c:	cmp	r7, r3
   18b50:	cmpeq	r0, r2
   18b54:	movhi	r1, #1
   18b58:	movls	r1, #0
   18b5c:	ldrd	r2, [r4, #72]	; 0x48
   18b60:	adds	r2, r2, r1
   18b64:	adc	r3, r3, #0
   18b68:	strd	r2, [r4, #72]	; 0x48
   18b6c:	ldrb	r3, [r4, #232]	; 0xe8
   18b70:	cmp	r3, #0
   18b74:	bne	18c08 <__assert_fail@plt+0x791c>
   18b78:	mvn	r2, #0
   18b7c:	mvn	r3, #0
   18b80:	strd	r2, [r4, #80]	; 0x50
   18b84:	add	r6, r4, #96	; 0x60
   18b88:	rsb	r2, r0, #128	; 0x80
   18b8c:	mov	r1, #0
   18b90:	add	r0, r6, r0
   18b94:	bl	111f0 <memset@plt>
   18b98:	mov	r1, r6
   18b9c:	mov	r0, r4
   18ba0:	bl	133f8 <__assert_fail@plt+0x210c>
   18ba4:	sub	ip, r4, #8
   18ba8:	add	r2, sp, #8
   18bac:	add	lr, r4, #56	; 0x38
   18bb0:	ldrd	r0, [ip, #8]!
   18bb4:	strd	r0, [sp]
   18bb8:	mov	r3, sp
   18bbc:	ldm	r3!, {r0, r1}
   18bc0:	str	r0, [r2]
   18bc4:	str	r1, [r2, #4]
   18bc8:	add	r2, r2, #8
   18bcc:	cmp	ip, lr
   18bd0:	bne	18bb0 <__assert_fail@plt+0x78c4>
   18bd4:	ldr	r2, [r4, #228]	; 0xe4
   18bd8:	mov	r1, r3
   18bdc:	mov	r0, r5
   18be0:	bl	11058 <memcpy@plt>
   18be4:	ldr	r3, [pc, #68]	; 18c30 <__assert_fail@plt+0x7944>
   18be8:	ldr	r3, [r3]
   18bec:	mov	r2, #64	; 0x40
   18bf0:	mov	r1, #0
   18bf4:	add	r0, sp, #8
   18bf8:	blx	r3
   18bfc:	mov	r0, #0
   18c00:	add	sp, sp, #76	; 0x4c
   18c04:	pop	{r4, r5, r6, r7, pc}
   18c08:	mvn	r2, #0
   18c0c:	mvn	r3, #0
   18c10:	strd	r2, [r4, #88]	; 0x58
   18c14:	b	18b78 <__assert_fail@plt+0x788c>
   18c18:	mvn	r0, #0
   18c1c:	b	18c00 <__assert_fail@plt+0x7914>
   18c20:	mvn	r0, #0
   18c24:	b	18c00 <__assert_fail@plt+0x7914>
   18c28:	mvn	r0, #0
   18c2c:	b	18c00 <__assert_fail@plt+0x7914>
   18c30:	andeq	sl, r4, r4, lsr r1
   18c34:	push	{r4, r5, r6, r7, lr}
   18c38:	sub	sp, sp, #244	; 0xf4
   18c3c:	ldr	ip, [sp, #268]	; 0x10c
   18c40:	mov	r6, r3
   18c44:	clz	lr, r2
   18c48:	lsr	lr, lr, #5
   18c4c:	cmp	r3, #0
   18c50:	moveq	lr, #0
   18c54:	mov	r3, lr
   18c58:	cmp	r0, #0
   18c5c:	orreq	r3, r3, #1
   18c60:	cmp	r3, #0
   18c64:	bne	18d04 <__assert_fail@plt+0x7a18>
   18c68:	mov	r5, r0
   18c6c:	ldr	r3, [sp, #264]	; 0x108
   18c70:	clz	r3, r3
   18c74:	lsr	r3, r3, #5
   18c78:	cmp	ip, #0
   18c7c:	moveq	r3, #0
   18c80:	cmp	r3, #0
   18c84:	bne	18d0c <__assert_fail@plt+0x7a20>
   18c88:	sub	r3, r1, #1
   18c8c:	cmp	ip, #64	; 0x40
   18c90:	cmpls	r3, #63	; 0x3f
   18c94:	bhi	18d14 <__assert_fail@plt+0x7a28>
   18c98:	mov	r7, r2
   18c9c:	mov	r4, r1
   18ca0:	cmp	ip, #0
   18ca4:	beq	18cec <__assert_fail@plt+0x7a00>
   18ca8:	mov	r3, ip
   18cac:	ldr	r2, [sp, #264]	; 0x108
   18cb0:	mov	r0, sp
   18cb4:	bl	189d0 <__assert_fail@plt+0x76e4>
   18cb8:	cmp	r0, #0
   18cbc:	blt	18d1c <__assert_fail@plt+0x7a30>
   18cc0:	mov	r2, r6
   18cc4:	mov	r1, r7
   18cc8:	mov	r0, sp
   18ccc:	bl	188a8 <__assert_fail@plt+0x75bc>
   18cd0:	mov	r2, r4
   18cd4:	mov	r1, r5
   18cd8:	mov	r0, sp
   18cdc:	bl	18af0 <__assert_fail@plt+0x7804>
   18ce0:	mov	r0, #0
   18ce4:	add	sp, sp, #244	; 0xf4
   18ce8:	pop	{r4, r5, r6, r7, pc}
   18cec:	mov	r0, sp
   18cf0:	bl	18820 <__assert_fail@plt+0x7534>
   18cf4:	cmp	r0, #0
   18cf8:	bge	18cc0 <__assert_fail@plt+0x79d4>
   18cfc:	mvn	r0, #0
   18d00:	b	18ce4 <__assert_fail@plt+0x79f8>
   18d04:	mvn	r0, #0
   18d08:	b	18ce4 <__assert_fail@plt+0x79f8>
   18d0c:	mvn	r0, #0
   18d10:	b	18ce4 <__assert_fail@plt+0x79f8>
   18d14:	mvn	r0, #0
   18d18:	b	18ce4 <__assert_fail@plt+0x79f8>
   18d1c:	mvn	r0, #0
   18d20:	b	18ce4 <__assert_fail@plt+0x79f8>
   18d24:	push	{lr}		; (str lr, [sp, #-4]!)
   18d28:	sub	sp, sp, #12
   18d2c:	ldr	ip, [sp, #20]
   18d30:	str	ip, [sp, #4]
   18d34:	ldr	ip, [sp, #16]
   18d38:	str	ip, [sp]
   18d3c:	bl	18c34 <__assert_fail@plt+0x7948>
   18d40:	add	sp, sp, #12
   18d44:	pop	{pc}		; (ldr pc, [sp], #4)
   18d48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18d4c:	sub	sp, sp, #240	; 0xf0
   18d50:	mov	r5, r0
   18d54:	mov	r9, r1
   18d58:	mov	r8, r2
   18d5c:	mov	r0, #32768	; 0x8000
   18d60:	bl	3562c <__assert_fail@plt+0x24340>
   18d64:	subs	r6, r0, #0
   18d68:	beq	18e2c <__assert_fail@plt+0x7b40>
   18d6c:	mov	r1, r8
   18d70:	mov	r0, sp
   18d74:	bl	18820 <__assert_fail@plt+0x7534>
   18d78:	mov	r7, #1
   18d7c:	mov	sl, #32768	; 0x8000
   18d80:	mov	r4, #0
   18d84:	mov	r3, r5
   18d88:	rsb	r2, r4, #32768	; 0x8000
   18d8c:	mov	r1, r7
   18d90:	add	r0, r6, r4
   18d94:	bl	11100 <fread@plt>
   18d98:	add	r4, r4, r0
   18d9c:	cmp	r4, #32768	; 0x8000
   18da0:	beq	18e04 <__assert_fail@plt+0x7b18>
   18da4:	cmp	r0, #0
   18da8:	beq	18dec <__assert_fail@plt+0x7b00>
   18dac:	mov	r0, r5
   18db0:	bl	1119c <feof@plt>
   18db4:	cmp	r0, #0
   18db8:	beq	18d84 <__assert_fail@plt+0x7a98>
   18dbc:	cmp	r4, #0
   18dc0:	bne	18e18 <__assert_fail@plt+0x7b2c>
   18dc4:	mov	r2, r8
   18dc8:	mov	r1, r9
   18dcc:	mov	r0, sp
   18dd0:	bl	18af0 <__assert_fail@plt+0x7804>
   18dd4:	mov	r4, #0
   18dd8:	mov	r0, r6
   18ddc:	bl	31c0c <__assert_fail@plt+0x20920>
   18de0:	mov	r0, r4
   18de4:	add	sp, sp, #240	; 0xf0
   18de8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18dec:	mov	r0, r5
   18df0:	bl	11040 <ferror@plt>
   18df4:	cmp	r0, #0
   18df8:	mvnne	r4, #0
   18dfc:	bne	18dd8 <__assert_fail@plt+0x7aec>
   18e00:	b	18dbc <__assert_fail@plt+0x7ad0>
   18e04:	mov	r2, sl
   18e08:	mov	r1, r6
   18e0c:	mov	r0, sp
   18e10:	bl	188a8 <__assert_fail@plt+0x75bc>
   18e14:	b	18d80 <__assert_fail@plt+0x7a94>
   18e18:	mov	r2, r4
   18e1c:	mov	r1, r6
   18e20:	mov	r0, sp
   18e24:	bl	188a8 <__assert_fail@plt+0x75bc>
   18e28:	b	18dc4 <__assert_fail@plt+0x7ad8>
   18e2c:	mvn	r4, #0
   18e30:	b	18de0 <__assert_fail@plt+0x7af4>
   18e34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e38:	sub	sp, sp, #12
   18e3c:	mov	r8, r0
   18e40:	str	r1, [sp]
   18e44:	str	r2, [sp, #4]
   18e48:	mov	r0, #32768	; 0x8000
   18e4c:	bl	3562c <__assert_fail@plt+0x24340>
   18e50:	subs	r9, r0, #0
   18e54:	beq	18f80 <__assert_fail@plt+0x7c94>
   18e58:	mov	r4, #0
   18e5c:	mov	r6, #0
   18e60:	mov	r7, #0
   18e64:	mov	sl, #1
   18e68:	add	fp, r9, #32512	; 0x7f00
   18e6c:	add	fp, fp, #255	; 0xff
   18e70:	mov	r5, #0
   18e74:	mov	r3, r8
   18e78:	rsb	r2, r5, #32768	; 0x8000
   18e7c:	mov	r1, sl
   18e80:	add	r0, r9, r5
   18e84:	bl	112b0 <fread_unlocked@plt>
   18e88:	add	r5, r5, r0
   18e8c:	cmp	r5, #32768	; 0x8000
   18e90:	beq	18f24 <__assert_fail@plt+0x7c38>
   18e94:	cmp	r0, #0
   18e98:	beq	18f10 <__assert_fail@plt+0x7c24>
   18e9c:	ldr	r3, [r8]
   18ea0:	tst	r3, #16
   18ea4:	beq	18e74 <__assert_fail@plt+0x7b88>
   18ea8:	cmp	r5, #0
   18eac:	movne	r1, r9
   18eb0:	addne	r0, r9, r5
   18eb4:	beq	18f88 <__assert_fail@plt+0x7c9c>
   18eb8:	ldrb	r2, [r1], #1
   18ebc:	lsl	r3, r4, #15
   18ec0:	uxth	r3, r3
   18ec4:	add	r4, r3, r4, asr #1
   18ec8:	add	r4, r4, r2
   18ecc:	uxth	r4, r4
   18ed0:	cmp	r0, r1
   18ed4:	bne	18eb8 <__assert_fail@plt+0x7bcc>
   18ed8:	adds	r2, r6, r5
   18edc:	adc	r3, r7, #0
   18ee0:	cmp	r7, r3
   18ee4:	cmpeq	r6, r2
   18ee8:	bls	18f90 <__assert_fail@plt+0x7ca4>
   18eec:	bl	111c0 <__errno_location@plt>
   18ef0:	mov	r3, #75	; 0x4b
   18ef4:	str	r3, [r0]
   18ef8:	mvn	r4, #0
   18efc:	mov	r0, r9
   18f00:	bl	31c0c <__assert_fail@plt+0x20920>
   18f04:	mov	r0, r4
   18f08:	add	sp, sp, #12
   18f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f10:	ldr	r3, [r8]
   18f14:	tst	r3, #32
   18f18:	mvnne	r4, #0
   18f1c:	bne	18efc <__assert_fail@plt+0x7c10>
   18f20:	b	18ea8 <__assert_fail@plt+0x7bbc>
   18f24:	sub	r2, r9, #1
   18f28:	mov	r3, r4
   18f2c:	lsl	r4, r3, #15
   18f30:	uxth	r4, r4
   18f34:	add	r4, r4, r3, asr #1
   18f38:	ldrb	r3, [r2, #1]!
   18f3c:	add	r4, r4, r3
   18f40:	uxth	r3, r4
   18f44:	cmp	fp, r2
   18f48:	bne	18f2c <__assert_fail@plt+0x7c40>
   18f4c:	mov	r4, r3
   18f50:	adds	r2, r6, #32768	; 0x8000
   18f54:	adc	r3, r7, #0
   18f58:	cmp	r7, r3
   18f5c:	cmpeq	r6, r2
   18f60:	movls	r6, r2
   18f64:	movls	r7, r3
   18f68:	bls	18e70 <__assert_fail@plt+0x7b84>
   18f6c:	bl	111c0 <__errno_location@plt>
   18f70:	mov	r3, #75	; 0x4b
   18f74:	str	r3, [r0]
   18f78:	mvn	r4, #0
   18f7c:	b	18efc <__assert_fail@plt+0x7c10>
   18f80:	mvn	r4, #0
   18f84:	b	18f04 <__assert_fail@plt+0x7c18>
   18f88:	adds	r2, r6, r5
   18f8c:	adc	r3, r7, #0
   18f90:	ldr	r1, [sp]
   18f94:	str	r4, [r1]
   18f98:	ldr	r1, [sp, #4]
   18f9c:	strd	r2, [r1]
   18fa0:	mov	r4, #0
   18fa4:	b	18efc <__assert_fail@plt+0x7c10>
   18fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18fac:	sub	sp, sp, #12
   18fb0:	mov	r5, r0
   18fb4:	str	r1, [sp]
   18fb8:	str	r2, [sp, #4]
   18fbc:	mov	r0, #32768	; 0x8000
   18fc0:	bl	3562c <__assert_fail@plt+0x24340>
   18fc4:	subs	r9, r0, #0
   18fc8:	beq	190cc <__assert_fail@plt+0x7de0>
   18fcc:	mov	r8, #0
   18fd0:	mov	r6, #0
   18fd4:	mov	r7, #0
   18fd8:	mov	sl, #1
   18fdc:	add	fp, r9, #32512	; 0x7f00
   18fe0:	add	fp, fp, #255	; 0xff
   18fe4:	mov	r4, #0
   18fe8:	mov	r3, r5
   18fec:	rsb	r2, r4, #32768	; 0x8000
   18ff0:	mov	r1, sl
   18ff4:	add	r0, r9, r4
   18ff8:	bl	112b0 <fread_unlocked@plt>
   18ffc:	add	r4, r4, r0
   19000:	cmp	r4, #32768	; 0x8000
   19004:	beq	19088 <__assert_fail@plt+0x7d9c>
   19008:	cmp	r0, #0
   1900c:	beq	19074 <__assert_fail@plt+0x7d88>
   19010:	ldr	r3, [r5]
   19014:	tst	r3, #16
   19018:	beq	18fe8 <__assert_fail@plt+0x7cfc>
   1901c:	cmp	r4, #0
   19020:	movne	r3, r9
   19024:	addne	r1, r9, r4
   19028:	beq	190d4 <__assert_fail@plt+0x7de8>
   1902c:	ldrb	r2, [r3], #1
   19030:	add	r8, r8, r2
   19034:	cmp	r1, r3
   19038:	bne	1902c <__assert_fail@plt+0x7d40>
   1903c:	adds	r2, r6, r4
   19040:	adc	r3, r7, #0
   19044:	cmp	r7, r3
   19048:	cmpeq	r6, r2
   1904c:	bls	190dc <__assert_fail@plt+0x7df0>
   19050:	bl	111c0 <__errno_location@plt>
   19054:	mov	r3, #75	; 0x4b
   19058:	str	r3, [r0]
   1905c:	mvn	r4, #0
   19060:	mov	r0, r9
   19064:	bl	31c0c <__assert_fail@plt+0x20920>
   19068:	mov	r0, r4
   1906c:	add	sp, sp, #12
   19070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19074:	ldr	r3, [r5]
   19078:	tst	r3, #32
   1907c:	mvnne	r4, #0
   19080:	bne	19060 <__assert_fail@plt+0x7d74>
   19084:	b	1901c <__assert_fail@plt+0x7d30>
   19088:	sub	r3, r9, #1
   1908c:	ldrb	r2, [r3, #1]!
   19090:	add	r8, r8, r2
   19094:	cmp	fp, r3
   19098:	bne	1908c <__assert_fail@plt+0x7da0>
   1909c:	adds	r2, r6, #32768	; 0x8000
   190a0:	adc	r3, r7, #0
   190a4:	cmp	r7, r3
   190a8:	cmpeq	r6, r2
   190ac:	movls	r6, r2
   190b0:	movls	r7, r3
   190b4:	bls	18fe4 <__assert_fail@plt+0x7cf8>
   190b8:	bl	111c0 <__errno_location@plt>
   190bc:	mov	r3, #75	; 0x4b
   190c0:	str	r3, [r0]
   190c4:	mvn	r4, #0
   190c8:	b	19060 <__assert_fail@plt+0x7d74>
   190cc:	mvn	r4, #0
   190d0:	b	19068 <__assert_fail@plt+0x7d7c>
   190d4:	adds	r2, r6, r4
   190d8:	adc	r3, r7, #0
   190dc:	lsr	r1, r8, #16
   190e0:	uxtah	r8, r1, r8
   190e4:	asr	r1, r8, #16
   190e8:	uxtah	r8, r1, r8
   190ec:	ldr	r1, [sp]
   190f0:	str	r8, [r1]
   190f4:	ldr	r1, [sp, #4]
   190f8:	strd	r2, [r1]
   190fc:	mov	r4, #0
   19100:	b	19060 <__assert_fail@plt+0x7d74>
   19104:	push	{r4, r5, r6, lr}
   19108:	sub	sp, sp, #672	; 0x2a0
   1910c:	mov	r6, r0
   19110:	ldrb	r4, [sp, #688]	; 0x2b0
   19114:	ldr	r5, [r2]
   19118:	mov	r2, #1024	; 0x400
   1911c:	mov	r3, #0
   19120:	strd	r2, [sp, #8]
   19124:	mov	r2, #1
   19128:	mov	r3, #0
   1912c:	strd	r2, [sp]
   19130:	mov	r3, #0
   19134:	add	r2, sp, #20
   19138:	add	r1, sp, #696	; 0x2b8
   1913c:	ldrd	r0, [r1]
   19140:	bl	31da0 <__assert_fail@plt+0x20ab4>
   19144:	mov	r3, r0
   19148:	mov	r2, r5
   1914c:	ldr	r1, [pc, #92]	; 191b0 <__assert_fail@plt+0x7ec4>
   19150:	mov	r0, #1
   19154:	bl	111fc <__printf_chk@plt>
   19158:	ldrb	r3, [sp, #692]	; 0x2b4
   1915c:	cmp	r3, #0
   19160:	bne	19190 <__assert_fail@plt+0x7ea4>
   19164:	ldr	r3, [pc, #72]	; 191b4 <__assert_fail@plt+0x7ec8>
   19168:	ldr	r0, [r3]
   1916c:	ldr	r3, [r0, #20]
   19170:	ldr	r2, [r0, #24]
   19174:	cmp	r3, r2
   19178:	addcc	r2, r3, #1
   1917c:	strcc	r2, [r0, #20]
   19180:	strbcc	r4, [r3]
   19184:	bcs	191a4 <__assert_fail@plt+0x7eb8>
   19188:	add	sp, sp, #672	; 0x2a0
   1918c:	pop	{r4, r5, r6, pc}
   19190:	mov	r2, r6
   19194:	ldr	r1, [pc, #28]	; 191b8 <__assert_fail@plt+0x7ecc>
   19198:	mov	r0, #1
   1919c:	bl	111fc <__printf_chk@plt>
   191a0:	b	19164 <__assert_fail@plt+0x7e78>
   191a4:	mov	r1, r4
   191a8:	bl	11244 <__overflow@plt>
   191ac:	b	19188 <__assert_fail@plt+0x7e9c>
   191b0:	andeq	r7, r3, r8, ror #14
   191b4:	andeq	sl, r4, r4, lsr #3
   191b8:	andeq	r9, r3, ip, lsl #16
   191bc:	push	{r4, r5, r6, lr}
   191c0:	sub	sp, sp, #672	; 0x2a0
   191c4:	mov	r6, r0
   191c8:	ldrb	r4, [sp, #688]	; 0x2b0
   191cc:	ldr	r5, [r2]
   191d0:	mov	r2, #512	; 0x200
   191d4:	mov	r3, #0
   191d8:	strd	r2, [sp, #8]
   191dc:	mov	r2, #1
   191e0:	mov	r3, #0
   191e4:	strd	r2, [sp]
   191e8:	mov	r3, #0
   191ec:	add	r2, sp, #20
   191f0:	add	r1, sp, #696	; 0x2b8
   191f4:	ldrd	r0, [r1]
   191f8:	bl	31da0 <__assert_fail@plt+0x20ab4>
   191fc:	mov	r3, r0
   19200:	mov	r2, r5
   19204:	ldr	r1, [pc, #92]	; 19268 <__assert_fail@plt+0x7f7c>
   19208:	mov	r0, #1
   1920c:	bl	111fc <__printf_chk@plt>
   19210:	ldrb	r3, [sp, #692]	; 0x2b4
   19214:	cmp	r3, #0
   19218:	bne	19248 <__assert_fail@plt+0x7f5c>
   1921c:	ldr	r3, [pc, #72]	; 1926c <__assert_fail@plt+0x7f80>
   19220:	ldr	r0, [r3]
   19224:	ldr	r3, [r0, #20]
   19228:	ldr	r2, [r0, #24]
   1922c:	cmp	r3, r2
   19230:	addcc	r2, r3, #1
   19234:	strcc	r2, [r0, #20]
   19238:	strbcc	r4, [r3]
   1923c:	bcs	1925c <__assert_fail@plt+0x7f70>
   19240:	add	sp, sp, #672	; 0x2a0
   19244:	pop	{r4, r5, r6, pc}
   19248:	mov	r2, r6
   1924c:	ldr	r1, [pc, #28]	; 19270 <__assert_fail@plt+0x7f84>
   19250:	mov	r0, #1
   19254:	bl	111fc <__printf_chk@plt>
   19258:	b	1921c <__assert_fail@plt+0x7f30>
   1925c:	mov	r1, r4
   19260:	bl	11244 <__overflow@plt>
   19264:	b	19240 <__assert_fail@plt+0x7f54>
   19268:	andeq	r7, r3, r4, ror r7
   1926c:	andeq	sl, r4, r4, lsr #3
   19270:	andeq	r9, r3, ip, lsl #16
   19274:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19278:	sub	sp, sp, #65536	; 0x10000
   1927c:	sub	sp, sp, #28
   19280:	mov	ip, r2
   19284:	cmp	r2, #0
   19288:	cmpne	r1, #0
   1928c:	moveq	r2, #1
   19290:	movne	r2, #0
   19294:	cmp	r0, #0
   19298:	movne	sl, r2
   1929c:	orreq	sl, r2, #1
   192a0:	cmp	sl, #0
   192a4:	bne	19310 <__assert_fail@plt+0x8024>
   192a8:	mov	r8, r0
   192ac:	str	ip, [sp, #16]
   192b0:	str	r1, [sp, #12]
   192b4:	mov	r6, #0
   192b8:	mov	r7, #0
   192bc:	mov	r4, #0
   192c0:	mov	r9, #65536	; 0x10000
   192c4:	ldr	r5, [pc, #420]	; 19470 <__assert_fail@plt+0x8184>
   192c8:	str	sl, [sp, #20]
   192cc:	b	19354 <__assert_fail@plt+0x8068>
   192d0:	ldr	sl, [sp, #20]
   192d4:	bl	111c0 <__errno_location@plt>
   192d8:	mov	r3, #75	; 0x4b
   192dc:	str	r3, [r0]
   192e0:	b	19300 <__assert_fail@plt+0x8014>
   192e4:	mov	r6, r0
   192e8:	mov	r7, r1
   192ec:	ldr	r3, [sp, #12]
   192f0:	str	r4, [r3]
   192f4:	ldr	r3, [sp, #16]
   192f8:	strd	r6, [r3]
   192fc:	mov	sl, #1
   19300:	mov	r0, sl
   19304:	add	sp, sp, #65536	; 0x10000
   19308:	add	sp, sp, #28
   1930c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19310:	mov	sl, #0
   19314:	b	19300 <__assert_fail@plt+0x8014>
   19318:	sub	r3, lr, #1
   1931c:	add	ip, sp, #24
   19320:	sub	r2, ip, #1
   19324:	add	ip, ip, r3
   19328:	ldrb	r3, [r2, #1]!
   1932c:	eor	r3, r3, r4, lsr #24
   19330:	ldr	r3, [r5, r3, lsl #2]
   19334:	eor	r4, r3, r4, lsl #8
   19338:	cmp	ip, r2
   1933c:	bne	19328 <__assert_fail@plt+0x803c>
   19340:	mov	r6, r0
   19344:	mov	r7, r1
   19348:	ldr	r3, [r8]
   1934c:	tst	r3, #16
   19350:	bne	192e4 <__assert_fail@plt+0x7ff8>
   19354:	str	r8, [sp]
   19358:	mov	r3, r9
   1935c:	mov	r2, #1
   19360:	mov	r1, r9
   19364:	add	r0, sp, #24
   19368:	bl	11274 <__fread_unlocked_chk@plt>
   1936c:	subs	lr, r0, #0
   19370:	beq	192ec <__assert_fail@plt+0x8000>
   19374:	adds	r0, r6, lr
   19378:	adc	r1, r7, #0
   1937c:	cmp	r7, r1
   19380:	cmpeq	r6, r0
   19384:	bhi	192d0 <__assert_fail@plt+0x7fe4>
   19388:	cmp	lr, #7
   1938c:	addhi	ip, sp, #32
   19390:	movhi	r6, lr
   19394:	bls	19318 <__assert_fail@plt+0x802c>
   19398:	ldr	r3, [ip, #-8]
   1939c:	rev	r3, r3
   193a0:	eor	r3, r3, r4
   193a4:	ldr	r2, [ip, #-4]
   193a8:	rev	r2, r2
   193ac:	lsr	r4, r3, #8
   193b0:	uxtb	r4, r4
   193b4:	add	r4, r4, #1280	; 0x500
   193b8:	ldr	r7, [r5, r4, lsl #2]
   193bc:	lsr	r4, r2, #24
   193c0:	add	r4, r4, #768	; 0x300
   193c4:	uxtb	fp, r2
   193c8:	ldr	sl, [r5, r4, lsl #2]
   193cc:	ldr	r4, [r5, fp, lsl #2]
   193d0:	eor	sl, sl, r4
   193d4:	lsr	r4, r3, #24
   193d8:	add	r4, r4, #1792	; 0x700
   193dc:	ldr	r4, [r5, r4, lsl #2]
   193e0:	eor	sl, sl, r4
   193e4:	uxtb	r4, r3
   193e8:	add	r4, r4, #1024	; 0x400
   193ec:	ldr	r4, [r5, r4, lsl #2]
   193f0:	eor	sl, sl, r4
   193f4:	lsr	r4, r2, #16
   193f8:	uxtb	r4, r4
   193fc:	add	r4, r4, #512	; 0x200
   19400:	ldr	r4, [r5, r4, lsl #2]
   19404:	eor	r4, r4, sl
   19408:	lsr	r2, r2, #8
   1940c:	uxtb	r2, r2
   19410:	add	r2, r2, #256	; 0x100
   19414:	ldr	sl, [r5, r2, lsl #2]
   19418:	eor	r4, r4, sl
   1941c:	lsr	r3, r3, #16
   19420:	uxtb	r3, r3
   19424:	add	r3, r3, #1536	; 0x600
   19428:	ldr	sl, [r5, r3, lsl #2]
   1942c:	eor	r4, r4, sl
   19430:	eor	r4, r4, r7
   19434:	sub	r6, r6, #8
   19438:	add	ip, ip, #8
   1943c:	cmp	r6, #7
   19440:	bhi	19398 <__assert_fail@plt+0x80ac>
   19444:	sub	r3, lr, #8
   19448:	bic	ip, r3, #7
   1944c:	add	ip, ip, #8
   19450:	add	r2, sp, #24
   19454:	add	ip, r2, ip
   19458:	bic	r3, r3, #7
   1945c:	sub	r2, lr, #9
   19460:	sub	r3, r2, r3
   19464:	tst	lr, #7
   19468:	bne	19320 <__assert_fail@plt+0x8034>
   1946c:	b	19340 <__assert_fail@plt+0x8054>
   19470:	andeq	r7, r3, r4, lsr #15
   19474:	push	{r4, r5, r6, lr}
   19478:	sub	sp, sp, #16
   1947c:	mov	r5, r0
   19480:	mov	r4, r1
   19484:	mov	r6, r2
   19488:	mov	r2, #0
   1948c:	mov	r3, #0
   19490:	strd	r2, [sp, #8]
   19494:	mov	r3, #0
   19498:	str	r3, [sp, #4]
   1949c:	ldr	r3, [pc, #216]	; 1957c <__assert_fail@plt+0x8290>
   194a0:	ldr	r3, [r3]
   194a4:	cmp	r3, #0
   194a8:	beq	1952c <__assert_fail@plt+0x8240>
   194ac:	ldr	r3, [pc, #200]	; 1957c <__assert_fail@plt+0x8290>
   194b0:	ldr	r3, [r3]
   194b4:	add	r2, sp, #8
   194b8:	add	r1, sp, #4
   194bc:	mov	r0, r5
   194c0:	blx	r3
   194c4:	cmp	r0, #0
   194c8:	beq	19574 <__assert_fail@plt+0x8288>
   194cc:	ldrd	r2, [sp, #8]
   194d0:	strd	r2, [r6]
   194d4:	orrs	r1, r2, r3
   194d8:	beq	19514 <__assert_fail@plt+0x8228>
   194dc:	ldr	r0, [sp, #4]
   194e0:	ldr	lr, [pc, #152]	; 19580 <__assert_fail@plt+0x8294>
   194e4:	uxtb	r1, r2
   194e8:	eor	r1, r1, r0, lsr #24
   194ec:	ldr	r1, [lr, r1, lsl #2]
   194f0:	eor	r0, r1, r0, lsl #8
   194f4:	lsr	r1, r2, #8
   194f8:	orr	r1, r1, r3, lsl #24
   194fc:	lsr	ip, r3, #8
   19500:	mov	r2, r1
   19504:	mov	r3, ip
   19508:	orrs	r1, r2, r3
   1950c:	bne	194e4 <__assert_fail@plt+0x81f8>
   19510:	str	r0, [sp, #4]
   19514:	ldr	r3, [sp, #4]
   19518:	mvn	r3, r3
   1951c:	str	r3, [r4]
   19520:	mov	r0, #0
   19524:	add	sp, sp, #16
   19528:	pop	{r4, r5, r6, pc}
   1952c:	ldr	r3, [pc, #80]	; 19584 <__assert_fail@plt+0x8298>
   19530:	ldrb	r3, [r3]
   19534:	cmp	r3, #0
   19538:	bne	1954c <__assert_fail@plt+0x8260>
   1953c:	ldr	r2, [pc, #68]	; 19588 <__assert_fail@plt+0x829c>
   19540:	ldr	r3, [pc, #52]	; 1957c <__assert_fail@plt+0x8290>
   19544:	str	r2, [r3]
   19548:	b	194ac <__assert_fail@plt+0x81c0>
   1954c:	mov	r2, #5
   19550:	ldr	r1, [pc, #52]	; 1958c <__assert_fail@plt+0x82a0>
   19554:	mov	r0, #0
   19558:	bl	110a0 <dcgettext@plt>
   1955c:	mov	r3, r0
   19560:	ldr	r2, [pc, #40]	; 19590 <__assert_fail@plt+0x82a4>
   19564:	mov	r1, #0
   19568:	mov	r0, r1
   1956c:	bl	11124 <error@plt>
   19570:	b	1953c <__assert_fail@plt+0x8250>
   19574:	mvn	r0, #0
   19578:	b	19524 <__assert_fail@plt+0x8238>
   1957c:	andeq	sl, r4, ip, asr #3
   19580:	andeq	r7, r3, r4, lsr #15
   19584:			; <UNDEFINED> instruction: 0x0004a1bf
   19588:	andeq	r9, r1, r4, ror r2
   1958c:	andeq	r7, r3, ip, ror r7
   19590:	andeq	r7, r3, ip, asr r1
   19594:	push	{r4, r5, r6, lr}
   19598:	sub	sp, sp, #24
   1959c:	mov	r6, r0
   195a0:	ldrb	r4, [sp, #40]	; 0x28
   195a4:	ldr	r5, [r2]
   195a8:	mov	r2, sp
   195ac:	ldrd	r0, [sp, #48]	; 0x30
   195b0:	bl	327bc <__assert_fail@plt+0x214d0>
   195b4:	mov	r3, r0
   195b8:	mov	r2, r5
   195bc:	ldr	r1, [pc, #92]	; 19620 <__assert_fail@plt+0x8334>
   195c0:	mov	r0, #1
   195c4:	bl	111fc <__printf_chk@plt>
   195c8:	ldrb	r3, [sp, #44]	; 0x2c
   195cc:	cmp	r3, #0
   195d0:	bne	19600 <__assert_fail@plt+0x8314>
   195d4:	ldr	r3, [pc, #72]	; 19624 <__assert_fail@plt+0x8338>
   195d8:	ldr	r0, [r3]
   195dc:	ldr	r3, [r0, #20]
   195e0:	ldr	r2, [r0, #24]
   195e4:	cmp	r3, r2
   195e8:	addcc	r2, r3, #1
   195ec:	strcc	r2, [r0, #20]
   195f0:	strbcc	r4, [r3]
   195f4:	bcs	19614 <__assert_fail@plt+0x8328>
   195f8:	add	sp, sp, #24
   195fc:	pop	{r4, r5, r6, pc}
   19600:	mov	r2, r6
   19604:	ldr	r1, [pc, #28]	; 19628 <__assert_fail@plt+0x833c>
   19608:	mov	r0, #1
   1960c:	bl	111fc <__printf_chk@plt>
   19610:	b	195d4 <__assert_fail@plt+0x82e8>
   19614:	mov	r1, r4
   19618:	bl	11244 <__overflow@plt>
   1961c:	b	195f8 <__assert_fail@plt+0x830c>
   19620:	muleq	r3, ip, r7
   19624:	andeq	sl, r4, r4, lsr #3
   19628:	andeq	r9, r3, ip, lsl #16
   1962c:	push	{r4, lr}
   19630:	mov	r0, #1
   19634:	bl	11ac8 <__assert_fail@plt+0x7dc>
   19638:	pop	{r4, pc}
   1963c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19640:	sub	sp, sp, #12
   19644:	str	r0, [sp, #4]
   19648:	mov	r6, r1
   1964c:	mov	fp, r2
   19650:	mov	r8, r3
   19654:	bl	111a8 <strlen@plt>
   19658:	str	r0, [sp]
   1965c:	ldr	r4, [r6]
   19660:	cmp	r4, #0
   19664:	beq	1970c <__assert_fail@plt+0x8420>
   19668:	mov	r5, fp
   1966c:	mov	sl, #0
   19670:	mvn	r9, #0
   19674:	mov	r7, sl
   19678:	b	19698 <__assert_fail@plt+0x83ac>
   1967c:	mov	r9, r7
   19680:	b	19700 <__assert_fail@plt+0x8414>
   19684:	add	r7, r7, #1
   19688:	ldr	r4, [r6, #4]!
   1968c:	add	r5, r5, r8
   19690:	cmp	r4, #0
   19694:	beq	196f8 <__assert_fail@plt+0x840c>
   19698:	ldr	r2, [sp]
   1969c:	ldr	r1, [sp, #4]
   196a0:	mov	r0, r4
   196a4:	bl	112bc <strncmp@plt>
   196a8:	cmp	r0, #0
   196ac:	bne	19684 <__assert_fail@plt+0x8398>
   196b0:	mov	r0, r4
   196b4:	bl	111a8 <strlen@plt>
   196b8:	ldr	r3, [sp]
   196bc:	cmp	r3, r0
   196c0:	beq	1967c <__assert_fail@plt+0x8390>
   196c4:	cmn	r9, #1
   196c8:	moveq	r9, r7
   196cc:	beq	19684 <__assert_fail@plt+0x8398>
   196d0:	cmp	fp, #0
   196d4:	moveq	sl, #1
   196d8:	beq	19684 <__assert_fail@plt+0x8398>
   196dc:	mov	r2, r8
   196e0:	mov	r1, r5
   196e4:	mla	r0, r8, r9, fp
   196e8:	bl	11088 <memcmp@plt>
   196ec:	cmp	r0, #0
   196f0:	movne	sl, #1
   196f4:	b	19684 <__assert_fail@plt+0x8398>
   196f8:	cmp	sl, #0
   196fc:	mvnne	r9, #1
   19700:	mov	r0, r9
   19704:	add	sp, sp, #12
   19708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1970c:	mvn	r9, #0
   19710:	b	19700 <__assert_fail@plt+0x8414>
   19714:	push	{r4, r5, r6, lr}
   19718:	mov	r6, r0
   1971c:	ldr	r0, [r1]
   19720:	cmp	r0, #0
   19724:	beq	19760 <__assert_fail@plt+0x8474>
   19728:	mov	r4, r1
   1972c:	mov	r5, #0
   19730:	mov	r1, r6
   19734:	bl	11004 <strcmp@plt>
   19738:	cmp	r0, #0
   1973c:	beq	19758 <__assert_fail@plt+0x846c>
   19740:	add	r5, r5, #1
   19744:	ldr	r0, [r4, #4]!
   19748:	cmp	r0, #0
   1974c:	bne	19730 <__assert_fail@plt+0x8444>
   19750:	mvn	r0, #0
   19754:	pop	{r4, r5, r6, pc}
   19758:	mov	r0, r5
   1975c:	pop	{r4, r5, r6, pc}
   19760:	mvn	r0, #0
   19764:	pop	{r4, r5, r6, pc}
   19768:	push	{r4, r5, r6, lr}
   1976c:	sub	sp, sp, #8
   19770:	mov	r5, r0
   19774:	mov	r4, r1
   19778:	cmn	r2, #1
   1977c:	mov	r2, #5
   19780:	ldreq	r1, [pc, #76]	; 197d4 <__assert_fail@plt+0x84e8>
   19784:	ldrne	r1, [pc, #76]	; 197d8 <__assert_fail@plt+0x84ec>
   19788:	mov	r0, #0
   1978c:	bl	110a0 <dcgettext@plt>
   19790:	mov	r6, r0
   19794:	mov	r2, r4
   19798:	mov	r1, #8
   1979c:	mov	r0, #0
   197a0:	bl	340d4 <__assert_fail@plt+0x22de8>
   197a4:	mov	r4, r0
   197a8:	mov	r1, r5
   197ac:	mov	r0, #1
   197b0:	bl	34364 <__assert_fail@plt+0x23078>
   197b4:	str	r0, [sp]
   197b8:	mov	r3, r4
   197bc:	mov	r2, r6
   197c0:	mov	r1, #0
   197c4:	mov	r0, r1
   197c8:	bl	11124 <error@plt>
   197cc:	add	sp, sp, #8
   197d0:	pop	{r4, r5, r6, pc}
   197d4:			; <UNDEFINED> instruction: 0x000397b4
   197d8:	ldrdeq	r9, [r3], -r0
   197dc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   197e0:	mov	r7, r0
   197e4:	mov	r4, r1
   197e8:	mov	r8, r2
   197ec:	mov	r2, #5
   197f0:	ldr	r1, [pc, #224]	; 198d8 <__assert_fail@plt+0x85ec>
   197f4:	mov	r0, #0
   197f8:	bl	110a0 <dcgettext@plt>
   197fc:	ldr	r3, [pc, #216]	; 198dc <__assert_fail@plt+0x85f0>
   19800:	ldr	r1, [r3]
   19804:	bl	10fe0 <fputs_unlocked@plt>
   19808:	ldr	r5, [r7]
   1980c:	cmp	r5, #0
   19810:	beq	198a0 <__assert_fail@plt+0x85b4>
   19814:	mov	r9, #0
   19818:	mov	r6, r9
   1981c:	ldr	sl, [pc, #184]	; 198dc <__assert_fail@plt+0x85f0>
   19820:	b	1985c <__assert_fail@plt+0x8570>
   19824:	ldr	r9, [sl]
   19828:	mov	r0, r5
   1982c:	bl	34374 <__assert_fail@plt+0x23088>
   19830:	mov	r3, r0
   19834:	ldr	r2, [pc, #164]	; 198e0 <__assert_fail@plt+0x85f4>
   19838:	mov	r1, #1
   1983c:	mov	r0, r9
   19840:	bl	11214 <__fprintf_chk@plt>
   19844:	mov	r9, r4
   19848:	add	r6, r6, #1
   1984c:	ldr	r5, [r7, #4]!
   19850:	add	r4, r4, r8
   19854:	cmp	r5, #0
   19858:	beq	198a0 <__assert_fail@plt+0x85b4>
   1985c:	cmp	r6, #0
   19860:	beq	19824 <__assert_fail@plt+0x8538>
   19864:	mov	r2, r8
   19868:	mov	r1, r4
   1986c:	mov	r0, r9
   19870:	bl	11088 <memcmp@plt>
   19874:	cmp	r0, #0
   19878:	bne	19824 <__assert_fail@plt+0x8538>
   1987c:	ldr	fp, [sl]
   19880:	mov	r0, r5
   19884:	bl	34374 <__assert_fail@plt+0x23088>
   19888:	mov	r3, r0
   1988c:	ldr	r2, [pc, #80]	; 198e4 <__assert_fail@plt+0x85f8>
   19890:	mov	r1, #1
   19894:	mov	r0, fp
   19898:	bl	11214 <__fprintf_chk@plt>
   1989c:	b	19848 <__assert_fail@plt+0x855c>
   198a0:	ldr	r3, [pc, #52]	; 198dc <__assert_fail@plt+0x85f0>
   198a4:	ldr	r0, [r3]
   198a8:	ldr	r3, [r0, #20]
   198ac:	ldr	r2, [r0, #24]
   198b0:	cmp	r3, r2
   198b4:	bcs	198cc <__assert_fail@plt+0x85e0>
   198b8:	add	r2, r3, #1
   198bc:	str	r2, [r0, #20]
   198c0:	mov	r2, #10
   198c4:	strb	r2, [r3]
   198c8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198cc:	mov	r1, #10
   198d0:	bl	11244 <__overflow@plt>
   198d4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198d8:	strdeq	r9, [r3], -r0
   198dc:	muleq	r4, r8, r1
   198e0:	andeq	r9, r3, r8, lsl #16
   198e4:	andeq	r9, r3, r0, lsl r8
   198e8:	push	{r4, r5, r6, r7, r8, lr}
   198ec:	mov	r7, r0
   198f0:	mov	r5, r1
   198f4:	mov	r4, r2
   198f8:	mov	r6, r3
   198fc:	ldrb	r3, [sp, #32]
   19900:	cmp	r3, #0
   19904:	beq	19954 <__assert_fail@plt+0x8668>
   19908:	ldr	r3, [sp, #24]
   1990c:	mov	r2, r6
   19910:	mov	r1, r4
   19914:	mov	r0, r5
   19918:	bl	1963c <__assert_fail@plt+0x8350>
   1991c:	cmp	r0, #0
   19920:	popge	{r4, r5, r6, r7, r8, pc}
   19924:	mov	r2, r0
   19928:	mov	r1, r5
   1992c:	mov	r0, r7
   19930:	bl	19768 <__assert_fail@plt+0x847c>
   19934:	ldr	r2, [sp, #24]
   19938:	mov	r1, r6
   1993c:	mov	r0, r4
   19940:	bl	197dc <__assert_fail@plt+0x84f0>
   19944:	ldr	r3, [sp, #28]
   19948:	blx	r3
   1994c:	mvn	r0, #0
   19950:	pop	{r4, r5, r6, r7, r8, pc}
   19954:	mov	r1, r2
   19958:	mov	r0, r5
   1995c:	bl	19714 <__assert_fail@plt+0x8428>
   19960:	b	1991c <__assert_fail@plt+0x8630>
   19964:	push	{r4, r5, r6, r7, r8, lr}
   19968:	ldr	r6, [r1]
   1996c:	cmp	r6, #0
   19970:	beq	199b4 <__assert_fail@plt+0x86c8>
   19974:	mov	r7, r3
   19978:	mov	r8, r0
   1997c:	mov	r4, r2
   19980:	mov	r5, r1
   19984:	mov	r2, r7
   19988:	mov	r1, r4
   1998c:	mov	r0, r8
   19990:	bl	11088 <memcmp@plt>
   19994:	cmp	r0, #0
   19998:	beq	199ac <__assert_fail@plt+0x86c0>
   1999c:	ldr	r6, [r5, #4]!
   199a0:	add	r4, r4, r7
   199a4:	cmp	r6, #0
   199a8:	bne	19984 <__assert_fail@plt+0x8698>
   199ac:	mov	r0, r6
   199b0:	pop	{r4, r5, r6, r7, r8, pc}
   199b4:	mov	r6, #0
   199b8:	b	199ac <__assert_fail@plt+0x86c0>
   199bc:	ldr	r3, [pc, #4]	; 199c8 <__assert_fail@plt+0x86dc>
   199c0:	str	r0, [r3]
   199c4:	bx	lr
   199c8:	ldrdeq	sl, [r4], -r0
   199cc:	ldr	r3, [pc, #4]	; 199d8 <__assert_fail@plt+0x86ec>
   199d0:	strb	r0, [r3, #4]
   199d4:	bx	lr
   199d8:	ldrdeq	sl, [r4], -r0
   199dc:	push	{r4, r5, r6, lr}
   199e0:	sub	sp, sp, #8
   199e4:	ldr	r3, [pc, #200]	; 19ab4 <__assert_fail@plt+0x87c8>
   199e8:	ldr	r0, [r3]
   199ec:	bl	356ac <__assert_fail@plt+0x243c0>
   199f0:	cmp	r0, #0
   199f4:	beq	19a18 <__assert_fail@plt+0x872c>
   199f8:	ldr	r3, [pc, #184]	; 19ab8 <__assert_fail@plt+0x87cc>
   199fc:	ldrb	r3, [r3, #4]
   19a00:	cmp	r3, #0
   19a04:	beq	19a34 <__assert_fail@plt+0x8748>
   19a08:	bl	111c0 <__errno_location@plt>
   19a0c:	ldr	r3, [r0]
   19a10:	cmp	r3, #32
   19a14:	bne	19a34 <__assert_fail@plt+0x8748>
   19a18:	ldr	r3, [pc, #156]	; 19abc <__assert_fail@plt+0x87d0>
   19a1c:	ldr	r0, [r3]
   19a20:	bl	356ac <__assert_fail@plt+0x243c0>
   19a24:	cmp	r0, #0
   19a28:	bne	19aa8 <__assert_fail@plt+0x87bc>
   19a2c:	add	sp, sp, #8
   19a30:	pop	{r4, r5, r6, pc}
   19a34:	mov	r2, #5
   19a38:	ldr	r1, [pc, #128]	; 19ac0 <__assert_fail@plt+0x87d4>
   19a3c:	mov	r0, #0
   19a40:	bl	110a0 <dcgettext@plt>
   19a44:	mov	r4, r0
   19a48:	ldr	r3, [pc, #104]	; 19ab8 <__assert_fail@plt+0x87cc>
   19a4c:	ldr	r5, [r3]
   19a50:	cmp	r5, #0
   19a54:	beq	19a8c <__assert_fail@plt+0x87a0>
   19a58:	bl	111c0 <__errno_location@plt>
   19a5c:	ldr	r6, [r0]
   19a60:	mov	r0, r5
   19a64:	bl	341ec <__assert_fail@plt+0x22f00>
   19a68:	str	r4, [sp]
   19a6c:	mov	r3, r0
   19a70:	ldr	r2, [pc, #76]	; 19ac4 <__assert_fail@plt+0x87d8>
   19a74:	mov	r1, r6
   19a78:	mov	r0, #0
   19a7c:	bl	11124 <error@plt>
   19a80:	ldr	r3, [pc, #64]	; 19ac8 <__assert_fail@plt+0x87dc>
   19a84:	ldr	r0, [r3]
   19a88:	bl	1104c <_exit@plt>
   19a8c:	bl	111c0 <__errno_location@plt>
   19a90:	mov	r3, r4
   19a94:	ldr	r2, [pc, #48]	; 19acc <__assert_fail@plt+0x87e0>
   19a98:	ldr	r1, [r0]
   19a9c:	mov	r0, #0
   19aa0:	bl	11124 <error@plt>
   19aa4:	b	19a80 <__assert_fail@plt+0x8794>
   19aa8:	ldr	r3, [pc, #24]	; 19ac8 <__assert_fail@plt+0x87dc>
   19aac:	ldr	r0, [r3]
   19ab0:	bl	1104c <_exit@plt>
   19ab4:	andeq	sl, r4, r4, lsr #3
   19ab8:	ldrdeq	sl, [r4], -r0
   19abc:	muleq	r4, r8, r1
   19ac0:	andeq	r9, r3, r8, lsl r8
   19ac4:	andeq	r9, r3, r4, lsr #16
   19ac8:	andeq	sl, r4, r0, asr #2
   19acc:	andeq	r7, r3, ip, asr r1
   19ad0:	push	{r4, r5, r6, r7, r8, r9, lr}
   19ad4:	sub	sp, sp, #164	; 0xa4
   19ad8:	mov	r5, r0
   19adc:	mov	r8, r1
   19ae0:	ldr	r0, [pc, #192]	; 19ba8 <__assert_fail@plt+0x88bc>
   19ae4:	bl	3562c <__assert_fail@plt+0x24340>
   19ae8:	subs	r6, r0, #0
   19aec:	moveq	r0, #1
   19af0:	beq	19b68 <__assert_fail@plt+0x887c>
   19af4:	add	r0, sp, #4
   19af8:	bl	19bac <__assert_fail@plt+0x88c0>
   19afc:	mov	r7, #1
   19b00:	mov	r9, #32768	; 0x8000
   19b04:	mov	r4, #0
   19b08:	ldr	r3, [r5]
   19b0c:	tst	r3, #16
   19b10:	bne	19b48 <__assert_fail@plt+0x885c>
   19b14:	mov	r3, r5
   19b18:	rsb	r2, r4, #32768	; 0x8000
   19b1c:	mov	r1, r7
   19b20:	add	r0, r6, r4
   19b24:	bl	112b0 <fread_unlocked@plt>
   19b28:	add	r4, r4, r0
   19b2c:	cmp	r4, #32768	; 0x8000
   19b30:	beq	19b80 <__assert_fail@plt+0x8894>
   19b34:	cmp	r0, #0
   19b38:	bne	19b08 <__assert_fail@plt+0x881c>
   19b3c:	ldr	r3, [r5]
   19b40:	tst	r3, #32
   19b44:	bne	19b70 <__assert_fail@plt+0x8884>
   19b48:	cmp	r4, #0
   19b4c:	bne	19b94 <__assert_fail@plt+0x88a8>
   19b50:	mov	r1, r8
   19b54:	add	r0, sp, #4
   19b58:	bl	1a6d8 <__assert_fail@plt+0x93ec>
   19b5c:	mov	r0, r6
   19b60:	bl	31c0c <__assert_fail@plt+0x20920>
   19b64:	mov	r0, #0
   19b68:	add	sp, sp, #164	; 0xa4
   19b6c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19b70:	mov	r0, r6
   19b74:	bl	31c0c <__assert_fail@plt+0x20920>
   19b78:	mov	r0, #1
   19b7c:	b	19b68 <__assert_fail@plt+0x887c>
   19b80:	add	r2, sp, #4
   19b84:	mov	r1, r9
   19b88:	mov	r0, r6
   19b8c:	bl	19c18 <__assert_fail@plt+0x892c>
   19b90:	b	19b04 <__assert_fail@plt+0x8818>
   19b94:	add	r2, sp, #4
   19b98:	mov	r1, r4
   19b9c:	mov	r0, r6
   19ba0:	bl	1a76c <__assert_fail@plt+0x9480>
   19ba4:	b	19b50 <__assert_fail@plt+0x8864>
   19ba8:	andeq	r8, r0, r8, asr #32
   19bac:	ldr	r3, [pc, #44]	; 19be0 <__assert_fail@plt+0x88f4>
   19bb0:	str	r3, [r0]
   19bb4:	ldr	r3, [pc, #40]	; 19be4 <__assert_fail@plt+0x88f8>
   19bb8:	str	r3, [r0, #4]
   19bbc:	ldr	r3, [pc, #36]	; 19be8 <__assert_fail@plt+0x88fc>
   19bc0:	str	r3, [r0, #8]
   19bc4:	ldr	r3, [pc, #32]	; 19bec <__assert_fail@plt+0x8900>
   19bc8:	str	r3, [r0, #12]
   19bcc:	mov	r3, #0
   19bd0:	str	r3, [r0, #20]
   19bd4:	str	r3, [r0, #16]
   19bd8:	str	r3, [r0, #24]
   19bdc:	bx	lr
   19be0:	strbvs	r2, [r5, -r1, lsl #6]
   19be4:	svc	0x00cdab89
   19be8:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   19bec:	eorsne	r5, r2, r6, ror r4
   19bf0:	ldr	r3, [r0]
   19bf4:	str	r3, [r1]
   19bf8:	ldr	r3, [r0, #4]
   19bfc:	str	r3, [r1, #4]
   19c00:	ldr	r3, [r0, #8]
   19c04:	str	r3, [r1, #8]
   19c08:	ldr	r3, [r0, #12]
   19c0c:	str	r3, [r1, #12]
   19c10:	mov	r0, r1
   19c14:	bx	lr
   19c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c1c:	sub	sp, sp, #76	; 0x4c
   19c20:	mov	ip, r2
   19c24:	str	r2, [sp, #68]	; 0x44
   19c28:	bic	r3, r1, #3
   19c2c:	add	r3, r0, r3
   19c30:	mov	lr, r3
   19c34:	str	r3, [sp, #64]	; 0x40
   19c38:	ldr	r2, [r2]
   19c3c:	str	r2, [sp, #48]	; 0x30
   19c40:	ldr	r7, [ip, #4]
   19c44:	ldr	r5, [ip, #8]
   19c48:	ldr	r2, [ip, #12]
   19c4c:	str	r2, [sp, #12]
   19c50:	ldr	r3, [ip, #16]
   19c54:	add	r3, r1, r3
   19c58:	str	r3, [ip, #16]
   19c5c:	ldr	r2, [ip, #20]
   19c60:	cmp	r1, r3
   19c64:	movls	r3, r2
   19c68:	addhi	r3, r2, #1
   19c6c:	str	r3, [ip, #20]
   19c70:	cmp	r0, lr
   19c74:	bcs	1a5d0 <__assert_fail@plt+0x92e4>
   19c78:	mov	lr, r0
   19c7c:	str	r7, [sp, #16]
   19c80:	str	r5, [sp, #20]
   19c84:	ldr	r3, [lr]
   19c88:	mov	fp, r3
   19c8c:	ldr	r3, [sp, #48]	; 0x30
   19c90:	add	r3, r3, #-687865856	; 0xd7000000
   19c94:	add	r3, r3, #6946816	; 0x6a0000
   19c98:	add	r3, r3, #41984	; 0xa400
   19c9c:	add	r3, r3, #120	; 0x78
   19ca0:	add	r2, r3, fp
   19ca4:	ldr	r0, [sp, #20]
   19ca8:	mov	r3, r0
   19cac:	ldr	r1, [sp, #12]
   19cb0:	eor	r3, r3, r1
   19cb4:	ldr	r5, [sp, #16]
   19cb8:	and	r3, r3, r5
   19cbc:	eor	r3, r3, r1
   19cc0:	add	r3, r3, r2
   19cc4:	add	r3, r5, r3, ror #25
   19cc8:	ldr	r2, [lr, #4]
   19ccc:	add	r1, r1, #-402653184	; 0xe8000000
   19cd0:	add	r1, r1, #13041664	; 0xc70000
   19cd4:	add	r1, r1, #46848	; 0xb700
   19cd8:	add	r1, r1, #86	; 0x56
   19cdc:	str	r2, [sp, #24]
   19ce0:	add	r2, r1, r2
   19ce4:	mov	r1, r0
   19ce8:	eor	r1, r1, r5
   19cec:	and	r1, r1, r3
   19cf0:	eor	r1, r1, r0
   19cf4:	add	r1, r1, r2
   19cf8:	add	r1, r3, r1, ror #20
   19cfc:	ldr	r4, [lr, #8]
   19d00:	mov	r7, r4
   19d04:	add	r0, r0, #603979776	; 0x24000000
   19d08:	add	r0, r0, #2113536	; 0x204000
   19d0c:	add	r0, r0, #12480	; 0x30c0
   19d10:	add	r0, r0, #27
   19d14:	add	ip, r0, r4
   19d18:	eor	r0, r3, r5
   19d1c:	and	r0, r0, r1
   19d20:	eor	r0, r0, r5
   19d24:	add	r0, r0, ip
   19d28:	add	r0, r1, r0, ror #15
   19d2c:	ldr	r4, [lr, #12]
   19d30:	mov	r8, r4
   19d34:	ldr	ip, [pc, #2232]	; 1a5f4 <__assert_fail@plt+0x9308>
   19d38:	add	ip, r5, ip
   19d3c:	add	ip, ip, r4
   19d40:	eor	r2, r3, r1
   19d44:	and	r2, r2, r0
   19d48:	eor	r2, r2, r3
   19d4c:	add	r2, r2, ip
   19d50:	add	r2, r0, r2, ror #10
   19d54:	ldr	r4, [lr, #16]
   19d58:	ldr	ip, [pc, #2200]	; 1a5f8 <__assert_fail@plt+0x930c>
   19d5c:	str	r4, [sp, #28]
   19d60:	add	ip, r4, ip
   19d64:	add	ip, ip, r3
   19d68:	eor	r3, r1, r0
   19d6c:	and	r3, r3, r2
   19d70:	eor	r3, r3, r1
   19d74:	add	r3, r3, ip
   19d78:	add	r3, r2, r3, ror #25
   19d7c:	ldr	r5, [lr, #20]
   19d80:	mov	r6, r5
   19d84:	ldr	ip, [pc, #2160]	; 1a5fc <__assert_fail@plt+0x9310>
   19d88:	add	ip, r5, ip
   19d8c:	add	r1, ip, r1
   19d90:	eor	ip, r0, r2
   19d94:	and	ip, ip, r3
   19d98:	eor	ip, ip, r0
   19d9c:	add	r1, ip, r1
   19da0:	add	r1, r3, r1, ror #20
   19da4:	ldr	r5, [lr, #24]
   19da8:	ldr	ip, [pc, #2128]	; 1a600 <__assert_fail@plt+0x9314>
   19dac:	add	ip, r5, ip
   19db0:	add	r0, ip, r0
   19db4:	eor	ip, r2, r3
   19db8:	and	ip, ip, r1
   19dbc:	eor	ip, ip, r2
   19dc0:	add	ip, ip, r0
   19dc4:	add	ip, r1, ip, ror #15
   19dc8:	ldr	r9, [lr, #28]
   19dcc:	str	r9, [sp, #32]
   19dd0:	ldr	r0, [pc, #2092]	; 1a604 <__assert_fail@plt+0x9318>
   19dd4:	add	r0, r9, r0
   19dd8:	add	r2, r0, r2
   19ddc:	eor	r0, r3, r1
   19de0:	and	r0, r0, ip
   19de4:	eor	r0, r0, r3
   19de8:	add	r2, r0, r2
   19dec:	add	r2, ip, r2, ror #10
   19df0:	ldr	r9, [lr, #32]
   19df4:	str	r9, [sp, #36]	; 0x24
   19df8:	ldr	r0, [pc, #2056]	; 1a608 <__assert_fail@plt+0x931c>
   19dfc:	add	r0, r9, r0
   19e00:	add	r3, r0, r3
   19e04:	eor	r0, r1, ip
   19e08:	and	r0, r0, r2
   19e0c:	eor	r0, r0, r1
   19e10:	add	r3, r0, r3
   19e14:	add	r3, r2, r3, ror #25
   19e18:	ldr	r4, [lr, #36]	; 0x24
   19e1c:	ldr	r0, [pc, #2024]	; 1a60c <__assert_fail@plt+0x9320>
   19e20:	str	r4, [sp, #40]	; 0x28
   19e24:	add	r0, r4, r0
   19e28:	add	r0, r0, r1
   19e2c:	eor	r1, ip, r2
   19e30:	and	r1, r1, r3
   19e34:	eor	r1, r1, ip
   19e38:	add	r1, r1, r0
   19e3c:	add	r1, r3, r1, ror #20
   19e40:	ldr	r4, [lr, #40]	; 0x28
   19e44:	str	r4, [sp, #44]	; 0x2c
   19e48:	sub	r0, r4, #41984	; 0xa400
   19e4c:	sub	r0, r0, #79	; 0x4f
   19e50:	add	ip, r0, ip
   19e54:	eor	r0, r2, r3
   19e58:	and	r0, r0, r1
   19e5c:	eor	r0, r0, r2
   19e60:	add	r0, r0, ip
   19e64:	add	r0, r1, r0, ror #15
   19e68:	ldr	ip, [lr, #44]	; 0x2c
   19e6c:	mov	sl, ip
   19e70:	add	ip, ip, #-1996488704	; 0x89000000
   19e74:	add	ip, ip, #6029312	; 0x5c0000
   19e78:	add	ip, ip, #55040	; 0xd700
   19e7c:	add	ip, ip, #190	; 0xbe
   19e80:	add	r2, ip, r2
   19e84:	eor	ip, r3, r1
   19e88:	and	ip, ip, r0
   19e8c:	eor	ip, ip, r3
   19e90:	add	r2, ip, r2
   19e94:	add	r2, r0, r2, ror #10
   19e98:	ldr	r9, [lr, #48]	; 0x30
   19e9c:	ldr	ip, [pc, #1900]	; 1a610 <__assert_fail@plt+0x9324>
   19ea0:	add	ip, r9, ip
   19ea4:	add	r3, ip, r3
   19ea8:	eor	ip, r1, r0
   19eac:	and	ip, ip, r2
   19eb0:	eor	ip, ip, r1
   19eb4:	add	r3, ip, r3
   19eb8:	add	r3, r2, r3, ror #25
   19ebc:	ldr	ip, [lr, #52]	; 0x34
   19ec0:	str	ip, [sp, #4]
   19ec4:	ldr	ip, [pc, #1864]	; 1a614 <__assert_fail@plt+0x9328>
   19ec8:	ldr	r4, [sp, #4]
   19ecc:	add	ip, r4, ip
   19ed0:	add	ip, ip, r1
   19ed4:	eor	r1, r0, r2
   19ed8:	and	r1, r1, r3
   19edc:	eor	r1, r1, r0
   19ee0:	add	r1, r1, ip
   19ee4:	add	r1, r3, r1, ror #20
   19ee8:	ldr	ip, [lr, #56]	; 0x38
   19eec:	str	ip, [sp, #8]
   19ef0:	add	ip, ip, #-1509949440	; 0xa6000000
   19ef4:	add	ip, ip, #7929856	; 0x790000
   19ef8:	add	ip, ip, #17152	; 0x4300
   19efc:	add	ip, ip, #142	; 0x8e
   19f00:	add	r0, ip, r0
   19f04:	eor	ip, r2, r3
   19f08:	and	ip, ip, r1
   19f0c:	eor	ip, ip, r2
   19f10:	add	r0, ip, r0
   19f14:	add	r0, r1, r0, ror #15
   19f18:	ldr	r4, [lr, #60]	; 0x3c
   19f1c:	ldr	ip, [pc, #1780]	; 1a618 <__assert_fail@plt+0x932c>
   19f20:	add	ip, r4, ip
   19f24:	add	ip, ip, r2
   19f28:	eor	r2, r3, r1
   19f2c:	and	r2, r2, r0
   19f30:	eor	r2, r2, r3
   19f34:	add	r2, r2, ip
   19f38:	add	lr, lr, #64	; 0x40
   19f3c:	add	r2, r0, r2, ror #10
   19f40:	ldr	ip, [sp, #24]
   19f44:	add	ip, ip, #-167772160	; 0xf6000000
   19f48:	add	ip, ip, #1966080	; 0x1e0000
   19f4c:	add	ip, ip, #9536	; 0x2540
   19f50:	add	ip, ip, #34	; 0x22
   19f54:	add	r3, ip, r3
   19f58:	eor	ip, r0, r2
   19f5c:	and	ip, ip, r1
   19f60:	eor	ip, ip, r0
   19f64:	add	r3, ip, r3
   19f68:	add	r3, r2, r3, ror #27
   19f6c:	ldr	ip, [pc, #1704]	; 1a61c <__assert_fail@plt+0x9330>
   19f70:	add	ip, r5, ip
   19f74:	add	ip, ip, r1
   19f78:	eor	r1, r2, r3
   19f7c:	and	r1, r1, r0
   19f80:	eor	r1, r1, r2
   19f84:	add	r1, r1, ip
   19f88:	add	r1, r3, r1, ror #23
   19f8c:	ldr	ip, [pc, #1676]	; 1a620 <__assert_fail@plt+0x9334>
   19f90:	add	ip, sl, ip
   19f94:	add	ip, ip, r0
   19f98:	eor	r0, r3, r1
   19f9c:	and	r0, r0, r2
   19fa0:	eor	r0, r0, r3
   19fa4:	add	r0, r0, ip
   19fa8:	add	r0, r1, r0, ror #18
   19fac:	ldr	ip, [pc, #1648]	; 1a624 <__assert_fail@plt+0x9338>
   19fb0:	str	fp, [sp, #52]	; 0x34
   19fb4:	add	ip, fp, ip
   19fb8:	add	ip, ip, r2
   19fbc:	eor	r2, r1, r0
   19fc0:	and	r2, r2, r3
   19fc4:	eor	r2, r2, r1
   19fc8:	add	r2, r2, ip
   19fcc:	add	r2, r0, r2, ror #12
   19fd0:	ldr	ip, [pc, #1616]	; 1a628 <__assert_fail@plt+0x933c>
   19fd4:	add	ip, r6, ip
   19fd8:	add	ip, ip, r3
   19fdc:	eor	r3, r0, r2
   19fe0:	and	r3, r3, r1
   19fe4:	eor	r3, r3, r0
   19fe8:	add	r3, r3, ip
   19fec:	add	r3, r2, r3, ror #27
   19ff0:	ldr	ip, [pc, #1588]	; 1a62c <__assert_fail@plt+0x9340>
   19ff4:	ldr	fp, [sp, #44]	; 0x2c
   19ff8:	add	ip, fp, ip
   19ffc:	add	ip, ip, r1
   1a000:	eor	r1, r2, r3
   1a004:	and	r1, r1, r0
   1a008:	eor	r1, r1, r2
   1a00c:	add	r1, r1, ip
   1a010:	add	r1, r3, r1, ror #23
   1a014:	ldr	ip, [pc, #1556]	; 1a630 <__assert_fail@plt+0x9344>
   1a018:	add	ip, r4, ip
   1a01c:	add	ip, ip, r0
   1a020:	eor	r0, r3, r1
   1a024:	and	r0, r0, r2
   1a028:	eor	r0, r0, r3
   1a02c:	add	r0, r0, ip
   1a030:	add	r0, r1, r0, ror #18
   1a034:	ldr	ip, [pc, #1528]	; 1a634 <__assert_fail@plt+0x9348>
   1a038:	ldr	fp, [sp, #28]
   1a03c:	add	ip, fp, ip
   1a040:	add	ip, ip, r2
   1a044:	eor	r2, r1, r0
   1a048:	and	r2, r2, r3
   1a04c:	eor	r2, r2, r1
   1a050:	add	r2, r2, ip
   1a054:	add	r2, r0, r2, ror #12
   1a058:	ldr	ip, [pc, #1496]	; 1a638 <__assert_fail@plt+0x934c>
   1a05c:	ldr	fp, [sp, #40]	; 0x28
   1a060:	add	ip, fp, ip
   1a064:	add	ip, ip, r3
   1a068:	eor	r3, r0, r2
   1a06c:	and	r3, r3, r1
   1a070:	eor	r3, r3, r0
   1a074:	add	r3, r3, ip
   1a078:	add	r3, r2, r3, ror #27
   1a07c:	ldr	ip, [pc, #1464]	; 1a63c <__assert_fail@plt+0x9350>
   1a080:	ldr	fp, [sp, #8]
   1a084:	add	ip, fp, ip
   1a088:	add	ip, ip, r1
   1a08c:	eor	r1, r2, r3
   1a090:	and	r1, r1, r0
   1a094:	eor	r1, r1, r2
   1a098:	add	r1, r1, ip
   1a09c:	add	r1, r3, r1, ror #23
   1a0a0:	ldr	ip, [pc, #1432]	; 1a640 <__assert_fail@plt+0x9354>
   1a0a4:	add	ip, r8, ip
   1a0a8:	add	r0, ip, r0
   1a0ac:	eor	ip, r3, r1
   1a0b0:	and	ip, ip, r2
   1a0b4:	eor	ip, ip, r3
   1a0b8:	add	r0, ip, r0
   1a0bc:	add	r0, r1, r0, ror #18
   1a0c0:	ldr	ip, [pc, #1404]	; 1a644 <__assert_fail@plt+0x9358>
   1a0c4:	ldr	fp, [sp, #36]	; 0x24
   1a0c8:	add	ip, fp, ip
   1a0cc:	add	r2, ip, r2
   1a0d0:	eor	ip, r1, r0
   1a0d4:	and	ip, ip, r3
   1a0d8:	eor	ip, ip, r1
   1a0dc:	add	r2, ip, r2
   1a0e0:	add	r2, r0, r2, ror #12
   1a0e4:	ldr	ip, [pc, #1372]	; 1a648 <__assert_fail@plt+0x935c>
   1a0e8:	ldr	fp, [sp, #4]
   1a0ec:	add	ip, fp, ip
   1a0f0:	add	r3, ip, r3
   1a0f4:	eor	ip, r0, r2
   1a0f8:	and	ip, ip, r1
   1a0fc:	eor	ip, ip, r0
   1a100:	add	r3, ip, r3
   1a104:	add	r3, r2, r3, ror #27
   1a108:	ldr	ip, [pc, #1340]	; 1a64c <__assert_fail@plt+0x9360>
   1a10c:	add	ip, r7, ip
   1a110:	add	r1, ip, r1
   1a114:	eor	ip, r2, r3
   1a118:	and	ip, ip, r0
   1a11c:	eor	ip, ip, r2
   1a120:	add	r1, ip, r1
   1a124:	add	r1, r3, r1, ror #23
   1a128:	ldr	ip, [pc, #1312]	; 1a650 <__assert_fail@plt+0x9364>
   1a12c:	ldr	fp, [sp, #32]
   1a130:	add	ip, fp, ip
   1a134:	add	r0, ip, r0
   1a138:	eor	ip, r3, r1
   1a13c:	and	ip, ip, r2
   1a140:	eor	ip, ip, r3
   1a144:	add	ip, ip, r0
   1a148:	add	ip, r1, ip, ror #18
   1a14c:	eor	r0, r1, ip
   1a150:	ldr	fp, [pc, #1276]	; 1a654 <__assert_fail@plt+0x9368>
   1a154:	add	fp, r9, fp
   1a158:	add	fp, fp, r2
   1a15c:	and	r2, r3, r0
   1a160:	eor	r2, r2, r1
   1a164:	add	r2, r2, fp
   1a168:	add	r2, ip, r2, ror #12
   1a16c:	ldr	fp, [pc, #1252]	; 1a658 <__assert_fail@plt+0x936c>
   1a170:	add	fp, r6, fp
   1a174:	add	r3, fp, r3
   1a178:	eor	r0, r0, r2
   1a17c:	add	r3, r0, r3
   1a180:	add	r3, r2, r3, ror #28
   1a184:	ldr	r0, [pc, #1232]	; 1a65c <__assert_fail@plt+0x9370>
   1a188:	ldr	fp, [sp, #36]	; 0x24
   1a18c:	add	r0, fp, r0
   1a190:	add	r0, r0, r1
   1a194:	eor	r1, ip, r2
   1a198:	eor	r1, r1, r3
   1a19c:	add	r1, r1, r0
   1a1a0:	add	r1, r3, r1, ror #21
   1a1a4:	ldr	r0, [pc, #1204]	; 1a660 <__assert_fail@plt+0x9374>
   1a1a8:	str	sl, [sp, #60]	; 0x3c
   1a1ac:	add	r0, sl, r0
   1a1b0:	add	r0, r0, ip
   1a1b4:	eor	ip, r2, r3
   1a1b8:	eor	ip, ip, r1
   1a1bc:	add	ip, ip, r0
   1a1c0:	add	ip, r1, ip, ror #16
   1a1c4:	ldr	r0, [pc, #1176]	; 1a664 <__assert_fail@plt+0x9378>
   1a1c8:	ldr	sl, [sp, #8]
   1a1cc:	add	r0, sl, r0
   1a1d0:	add	r2, r0, r2
   1a1d4:	eor	r0, r3, r1
   1a1d8:	eor	r0, r0, ip
   1a1dc:	add	r2, r0, r2
   1a1e0:	add	r2, ip, r2, ror #9
   1a1e4:	ldr	r0, [pc, #1148]	; 1a668 <__assert_fail@plt+0x937c>
   1a1e8:	ldr	fp, [sp, #24]
   1a1ec:	add	r0, fp, r0
   1a1f0:	add	r0, r0, r3
   1a1f4:	eor	r3, r1, ip
   1a1f8:	eor	r3, r3, r2
   1a1fc:	add	r3, r3, r0
   1a200:	add	r3, r2, r3, ror #28
   1a204:	ldr	r0, [pc, #1120]	; 1a66c <__assert_fail@plt+0x9380>
   1a208:	ldr	fp, [sp, #28]
   1a20c:	add	r0, fp, r0
   1a210:	add	r0, r0, r1
   1a214:	eor	r1, ip, r2
   1a218:	eor	r1, r1, r3
   1a21c:	add	r1, r1, r0
   1a220:	add	r1, r3, r1, ror #21
   1a224:	ldr	r0, [pc, #1092]	; 1a670 <__assert_fail@plt+0x9384>
   1a228:	ldr	sl, [sp, #32]
   1a22c:	add	r0, sl, r0
   1a230:	add	ip, r0, ip
   1a234:	eor	r0, r2, r3
   1a238:	eor	r0, r0, r1
   1a23c:	add	ip, r0, ip
   1a240:	add	ip, r1, ip, ror #16
   1a244:	ldr	r0, [pc, #1064]	; 1a674 <__assert_fail@plt+0x9388>
   1a248:	ldr	sl, [sp, #44]	; 0x2c
   1a24c:	add	r0, sl, r0
   1a250:	add	r2, r0, r2
   1a254:	eor	r0, r3, r1
   1a258:	eor	r0, r0, ip
   1a25c:	add	r0, r0, r2
   1a260:	add	r0, ip, r0, ror #9
   1a264:	ldr	r2, [pc, #1036]	; 1a678 <__assert_fail@plt+0x938c>
   1a268:	ldr	sl, [sp, #4]
   1a26c:	add	r2, sl, r2
   1a270:	add	r2, r2, r3
   1a274:	eor	r3, r1, ip
   1a278:	eor	r3, r3, r0
   1a27c:	add	r3, r3, r2
   1a280:	add	r3, r0, r3, ror #28
   1a284:	ldr	r2, [pc, #1008]	; 1a67c <__assert_fail@plt+0x9390>
   1a288:	ldr	fp, [sp, #52]	; 0x34
   1a28c:	add	r2, fp, r2
   1a290:	add	r1, r2, r1
   1a294:	eor	r2, ip, r0
   1a298:	eor	r2, r2, r3
   1a29c:	add	r2, r2, r1
   1a2a0:	add	r2, r3, r2, ror #21
   1a2a4:	ldr	r1, [pc, #980]	; 1a680 <__assert_fail@plt+0x9394>
   1a2a8:	str	r8, [sp, #52]	; 0x34
   1a2ac:	add	r1, r8, r1
   1a2b0:	add	ip, r1, ip
   1a2b4:	eor	r1, r0, r3
   1a2b8:	eor	r1, r1, r2
   1a2bc:	add	r1, r1, ip
   1a2c0:	add	r1, r2, r1, ror #16
   1a2c4:	ldr	ip, [pc, #952]	; 1a684 <__assert_fail@plt+0x9398>
   1a2c8:	str	r5, [sp, #56]	; 0x38
   1a2cc:	add	ip, r5, ip
   1a2d0:	add	ip, ip, r0
   1a2d4:	eor	r0, r3, r2
   1a2d8:	eor	r0, r0, r1
   1a2dc:	add	r0, r0, ip
   1a2e0:	add	r0, r1, r0, ror #9
   1a2e4:	ldr	ip, [pc, #924]	; 1a688 <__assert_fail@plt+0x939c>
   1a2e8:	ldr	r8, [sp, #40]	; 0x28
   1a2ec:	add	ip, r8, ip
   1a2f0:	add	ip, ip, r3
   1a2f4:	eor	r3, r2, r1
   1a2f8:	eor	r3, r3, r0
   1a2fc:	add	r3, r3, ip
   1a300:	add	r3, r0, r3, ror #28
   1a304:	ldr	ip, [pc, #896]	; 1a68c <__assert_fail@plt+0x93a0>
   1a308:	mov	r8, r9
   1a30c:	add	ip, r9, ip
   1a310:	add	r2, ip, r2
   1a314:	eor	ip, r1, r0
   1a318:	eor	ip, ip, r3
   1a31c:	add	r2, ip, r2
   1a320:	add	r2, r3, r2, ror #21
   1a324:	ldr	ip, [pc, #868]	; 1a690 <__assert_fail@plt+0x93a4>
   1a328:	mov	r5, r4
   1a32c:	add	ip, r4, ip
   1a330:	add	ip, ip, r1
   1a334:	eor	r1, r0, r3
   1a338:	eor	r1, r1, r2
   1a33c:	add	r1, r1, ip
   1a340:	add	r1, r2, r1, ror #16
   1a344:	ldr	ip, [pc, #840]	; 1a694 <__assert_fail@plt+0x93a8>
   1a348:	add	ip, r7, ip
   1a34c:	add	ip, ip, r0
   1a350:	eor	r0, r3, r2
   1a354:	eor	r0, r0, r1
   1a358:	add	r0, r0, ip
   1a35c:	add	r0, r1, r0, ror #9
   1a360:	ldr	ip, [pc, #816]	; 1a698 <__assert_fail@plt+0x93ac>
   1a364:	add	ip, fp, ip
   1a368:	add	r3, ip, r3
   1a36c:	mvn	ip, r2
   1a370:	orr	ip, ip, r0
   1a374:	eor	ip, ip, r1
   1a378:	add	r3, ip, r3
   1a37c:	add	r3, r0, r3, ror #26
   1a380:	ldr	ip, [pc, #788]	; 1a69c <__assert_fail@plt+0x93b0>
   1a384:	ldr	r9, [sp, #32]
   1a388:	add	ip, r9, ip
   1a38c:	add	r2, ip, r2
   1a390:	mvn	sl, r1
   1a394:	orr	sl, sl, r3
   1a398:	eor	sl, sl, r0
   1a39c:	add	r2, sl, r2
   1a3a0:	add	r2, r3, r2, ror #22
   1a3a4:	ldr	ip, [pc, #756]	; 1a6a0 <__assert_fail@plt+0x93b4>
   1a3a8:	ldr	r4, [sp, #8]
   1a3ac:	add	ip, r4, ip
   1a3b0:	add	r1, ip, r1
   1a3b4:	mvn	r9, r0
   1a3b8:	orr	r9, r9, r2
   1a3bc:	eor	r9, r9, r3
   1a3c0:	add	r1, r9, r1
   1a3c4:	add	r1, r2, r1, ror #17
   1a3c8:	ldr	ip, [pc, #724]	; 1a6a4 <__assert_fail@plt+0x93b8>
   1a3cc:	add	ip, r6, ip
   1a3d0:	add	r0, ip, r0
   1a3d4:	mvn	r9, r3
   1a3d8:	orr	r9, r9, r1
   1a3dc:	eor	r9, r9, r2
   1a3e0:	add	r0, r9, r0
   1a3e4:	add	r0, r1, r0, ror #11
   1a3e8:	ldr	ip, [pc, #696]	; 1a6a8 <__assert_fail@plt+0x93bc>
   1a3ec:	add	ip, r8, ip
   1a3f0:	add	r3, ip, r3
   1a3f4:	mvn	r8, r2
   1a3f8:	orr	r8, r8, r0
   1a3fc:	eor	r8, r8, r1
   1a400:	add	r3, r8, r3
   1a404:	add	r3, r0, r3, ror #26
   1a408:	ldr	ip, [pc, #668]	; 1a6ac <__assert_fail@plt+0x93c0>
   1a40c:	ldr	r8, [sp, #52]	; 0x34
   1a410:	add	ip, r8, ip
   1a414:	add	r2, ip, r2
   1a418:	mvn	r8, r1
   1a41c:	orr	r8, r8, r3
   1a420:	eor	r8, r8, r0
   1a424:	add	r2, r8, r2
   1a428:	add	r2, r3, r2, ror #22
   1a42c:	ldr	ip, [pc, #636]	; 1a6b0 <__assert_fail@plt+0x93c4>
   1a430:	ldr	r4, [sp, #44]	; 0x2c
   1a434:	add	ip, r4, ip
   1a438:	add	r1, ip, r1
   1a43c:	mvn	r6, r0
   1a440:	orr	r6, r6, r2
   1a444:	eor	r6, r6, r3
   1a448:	add	r1, r6, r1
   1a44c:	add	r1, r2, r1, ror #17
   1a450:	ldr	ip, [pc, #604]	; 1a6b4 <__assert_fail@plt+0x93c8>
   1a454:	ldr	fp, [sp, #24]
   1a458:	add	ip, fp, ip
   1a45c:	add	r0, ip, r0
   1a460:	mvn	r6, r3
   1a464:	orr	r6, r6, r1
   1a468:	eor	r6, r6, r2
   1a46c:	add	r0, r6, r0
   1a470:	add	r0, r1, r0, ror #11
   1a474:	ldr	ip, [pc, #572]	; 1a6b8 <__assert_fail@plt+0x93cc>
   1a478:	ldr	r9, [sp, #36]	; 0x24
   1a47c:	add	ip, r9, ip
   1a480:	add	r3, ip, r3
   1a484:	mvn	r6, r2
   1a488:	orr	r6, r6, r0
   1a48c:	eor	r6, r6, r1
   1a490:	add	r3, r6, r3
   1a494:	add	r3, r0, r3, ror #26
   1a498:	ldr	ip, [pc, #540]	; 1a6bc <__assert_fail@plt+0x93d0>
   1a49c:	add	ip, r5, ip
   1a4a0:	add	r2, ip, r2
   1a4a4:	mvn	r5, r1
   1a4a8:	orr	r5, r5, r3
   1a4ac:	eor	r5, r5, r0
   1a4b0:	add	r2, r5, r2
   1a4b4:	add	r2, r3, r2, ror #22
   1a4b8:	ldr	ip, [pc, #512]	; 1a6c0 <__assert_fail@plt+0x93d4>
   1a4bc:	ldr	r5, [sp, #56]	; 0x38
   1a4c0:	add	ip, r5, ip
   1a4c4:	add	r1, ip, r1
   1a4c8:	mvn	r5, r0
   1a4cc:	orr	r5, r5, r2
   1a4d0:	eor	r5, r5, r3
   1a4d4:	add	r1, r5, r1
   1a4d8:	add	r1, r2, r1, ror #17
   1a4dc:	ldr	ip, [pc, #480]	; 1a6c4 <__assert_fail@plt+0x93d8>
   1a4e0:	ldr	r4, [sp, #4]
   1a4e4:	add	ip, r4, ip
   1a4e8:	add	r0, ip, r0
   1a4ec:	mvn	r4, r3
   1a4f0:	orr	r4, r4, r1
   1a4f4:	eor	r4, r4, r2
   1a4f8:	add	r0, r4, r0
   1a4fc:	add	r0, r1, r0, ror #11
   1a500:	ldr	ip, [pc, #448]	; 1a6c8 <__assert_fail@plt+0x93dc>
   1a504:	ldr	fp, [sp, #28]
   1a508:	add	ip, fp, ip
   1a50c:	add	ip, ip, r3
   1a510:	mvn	r3, r2
   1a514:	orr	r3, r3, r0
   1a518:	eor	r3, r3, r1
   1a51c:	add	r3, r3, ip
   1a520:	add	r3, r0, r3, ror #26
   1a524:	ldr	ip, [pc, #416]	; 1a6cc <__assert_fail@plt+0x93e0>
   1a528:	ldr	sl, [sp, #60]	; 0x3c
   1a52c:	add	ip, sl, ip
   1a530:	add	ip, ip, r2
   1a534:	mvn	r2, r1
   1a538:	orr	r2, r2, r3
   1a53c:	eor	r2, r2, r0
   1a540:	add	r2, r2, ip
   1a544:	add	r2, r3, r2, ror #22
   1a548:	ldr	ip, [pc, #384]	; 1a6d0 <__assert_fail@plt+0x93e4>
   1a54c:	add	ip, r7, ip
   1a550:	add	ip, ip, r1
   1a554:	mvn	r1, r0
   1a558:	orr	r1, r1, r2
   1a55c:	eor	r1, r1, r3
   1a560:	add	r1, r1, ip
   1a564:	add	r1, r2, r1, ror #17
   1a568:	ldr	ip, [pc, #356]	; 1a6d4 <__assert_fail@plt+0x93e8>
   1a56c:	ldr	r8, [sp, #40]	; 0x28
   1a570:	add	ip, r8, ip
   1a574:	add	ip, ip, r0
   1a578:	mvn	r0, r3
   1a57c:	orr	r0, r0, r1
   1a580:	eor	r0, r0, r2
   1a584:	add	r0, r0, ip
   1a588:	add	r0, r1, r0, ror #11
   1a58c:	ldr	ip, [sp, #48]	; 0x30
   1a590:	add	r3, ip, r3
   1a594:	str	r3, [sp, #48]	; 0x30
   1a598:	ldr	r3, [sp, #16]
   1a59c:	add	r3, r3, r0
   1a5a0:	str	r3, [sp, #16]
   1a5a4:	ldr	r0, [sp, #20]
   1a5a8:	add	r3, r0, r1
   1a5ac:	str	r3, [sp, #20]
   1a5b0:	ldr	r1, [sp, #12]
   1a5b4:	add	r3, r1, r2
   1a5b8:	str	r3, [sp, #12]
   1a5bc:	ldr	r3, [sp, #64]	; 0x40
   1a5c0:	cmp	r3, lr
   1a5c4:	bhi	19c84 <__assert_fail@plt+0x8998>
   1a5c8:	ldr	r7, [sp, #16]
   1a5cc:	ldr	r5, [sp, #20]
   1a5d0:	ldr	r3, [sp, #68]	; 0x44
   1a5d4:	ldr	r2, [sp, #48]	; 0x30
   1a5d8:	str	r2, [r3]
   1a5dc:	str	r7, [r3, #4]
   1a5e0:	str	r5, [r3, #8]
   1a5e4:	ldr	r2, [sp, #12]
   1a5e8:	str	r2, [r3, #12]
   1a5ec:	add	sp, sp, #76	; 0x4c
   1a5f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5f4:			; <UNDEFINED> instruction: 0xc1bdceee
   1a5f8:			; <UNDEFINED> instruction: 0xf57c0faf
   1a5fc:	strmi	ip, [r7, sl, lsr #12]
   1a600:	ldmdage	r0!, {r0, r1, r4, r9, sl, lr}
   1a604:	stc2l	5, cr9, [r6, #-4]
   1a608:	stmibvs	r0, {r3, r4, r6, r7, fp, ip, pc}
   1a60c:	blhi	11584d0 <optarg@@GLIBC_2.4+0x110e328>
   1a610:	blvs	fe41eaa0 <optarg@@GLIBC_2.4+0xfe3d48f8>
   1a614:	ldc2	1, cr7, [r8, #588]	; 0x24c
   1a618:	ldmibmi	r4!, {r0, r5, fp}
   1a61c:	subgt	fp, r0, r0, asr #6
   1a620:			; <UNDEFINED> instruction: 0x265e5a51
   1a624:	ldmib	r6!, {r1, r3, r5, r7, r8, r9, sl, lr, pc}
   1a628:			; <UNDEFINED> instruction: 0xd62f105d
   1a62c:	subeq	r1, r4, #1392508928	; 0x53000000
   1a630:	stmiale	r1!, {r0, r7, r9, sl, sp, lr, pc}
   1a634:	ldrb	pc, [r3, r8, asr #23]	; <UNPREDICTABLE>
   1a638:	mvncs	ip, r6, ror #27
   1a63c:	teqgt	r7, #56098816	; 0x3580000
   1a640:			; <UNDEFINED> instruction: 0xf4d50d87
   1a644:	ldrbmi	r1, [sl, #-1261]	; 0xfffffb13
   1a648:	stmibge	r3!, {r0, r2, r8, fp, sp, lr, pc}^
   1a64c:	stc2l	3, cr10, [pc], #992	; 1aa34 <__assert_fail@plt+0x9748>
   1a650:			; <UNDEFINED> instruction: 0x676f02d9
   1a654:	stchi	12, cr4, [sl, #-552]!	; 0xfffffdd8
   1a658:			; <UNDEFINED> instruction: 0xfffa3942
   1a65c:	ldrbhi	pc, [r1, -r1, lsl #13]!	; <UNPREDICTABLE>
   1a660:	ldfvss	f6, [sp, #136]	; 0x88
   1a664:	vcmla.f16	d19, d5, d12, #270
   1a668:	ldrtge	lr, [lr], #2628	; 0xa44
   1a66c:	blmi	ff7ce518 <optarg@@GLIBC_2.4+0xff784370>
   1a670:			; <UNDEFINED> instruction: 0xf6bb4b60
   1a674:	mrclt	12, 5, fp, cr15, cr0, {3}
   1a678:	ldmcs	fp, {r1, r2, r6, r7, r9, sl, fp, ip, sp, lr}
   1a67c:	b	fe86466c <optarg@@GLIBC_2.4+0xfe81a4c4>
   1a680:	strbtle	r3, [pc], #133	; 1a688 <__assert_fail@plt+0x939c>
   1a684:	streq	r1, [r8], #3333	; 0xd05
   1a688:	ldmible	r4, {r0, r3, r4, r5, ip, lr, pc}^
   1a68c:	ldrb	r9, [fp], r5, ror #19
   1a690:	svcne	0x00a27cf8
   1a694:	strtgt	r5, [ip], #1637	; 0x665
   1a698:	vld1.16	{d2-d5}, [r9], r4
   1a69c:	msrmi	CPSR_fx, #604	; 0x25c
   1a6a0:	blge	fe523544 <optarg@@GLIBC_2.4+0xfe4d939c>
   1a6a4:	ldc2	0, cr10, [r3], {57}	; 0x39
   1a6a8:	ldrbvs	r5, [fp, #-2499]	; 0xfffff63d
   1a6ac:	svchi	0x000ccc92
   1a6b0:			; <UNDEFINED> instruction: 0xffeff47d
   1a6b4:	strhi	r5, [r4, #3537]	; 0xdd1
   1a6b8:	svcvs	0x00a87e4f
   1a6bc:	cdp2	6, 2, cr14, cr12, cr0, {7}
   1a6c0:	movwge	r4, #4884	; 0x1314
   1a6c4:	adfmi<illegal precision>p	f1, f0, f1
   1a6c8:			; <UNDEFINED> instruction: 0xf7537e82
   1a6cc:	lfmlt	f7, 1, [sl, #-212]!	; 0xffffff2c
   1a6d0:	bcs	ff60f1c4 <optarg@@GLIBC_2.4+0xff5c501c>
   1a6d4:	bl	fe1cf520 <optarg@@GLIBC_2.4+0xfe185378>
   1a6d8:	push	{r4, r5, r6, r7, r8, lr}
   1a6dc:	mov	r4, r0
   1a6e0:	mov	r6, r1
   1a6e4:	ldr	r0, [r0, #24]
   1a6e8:	cmp	r0, #55	; 0x37
   1a6ec:	movls	r5, #16
   1a6f0:	movhi	r5, #32
   1a6f4:	ldr	r3, [r4, #16]
   1a6f8:	add	r3, r0, r3
   1a6fc:	str	r3, [r4, #16]
   1a700:	cmp	r0, r3
   1a704:	ldrhi	r2, [r4, #20]
   1a708:	addhi	r2, r2, #1
   1a70c:	strhi	r2, [r4, #20]
   1a710:	add	r2, r4, r5, lsl #2
   1a714:	lsl	r1, r3, #3
   1a718:	str	r1, [r2, #20]
   1a71c:	ldr	r1, [r4, #20]
   1a720:	lsr	r3, r3, #29
   1a724:	orr	r3, r3, r1, lsl #3
   1a728:	str	r3, [r2, #24]
   1a72c:	add	r7, r4, #28
   1a730:	sub	r5, r5, #-1073741822	; 0xc0000002
   1a734:	lsl	r5, r5, #2
   1a738:	sub	r2, r5, r0
   1a73c:	ldr	r1, [pc, #36]	; 1a768 <__assert_fail@plt+0x947c>
   1a740:	add	r0, r7, r0
   1a744:	bl	11058 <memcpy@plt>
   1a748:	mov	r2, r4
   1a74c:	add	r1, r5, #8
   1a750:	mov	r0, r7
   1a754:	bl	19c18 <__assert_fail@plt+0x892c>
   1a758:	mov	r1, r6
   1a75c:	mov	r0, r4
   1a760:	bl	19bf0 <__assert_fail@plt+0x8904>
   1a764:	pop	{r4, r5, r6, r7, r8, pc}
   1a768:	andeq	r9, r3, ip, lsr #16
   1a76c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a770:	mov	r8, r0
   1a774:	mov	r5, r1
   1a778:	mov	r6, r2
   1a77c:	ldr	r4, [r2, #24]
   1a780:	cmp	r4, #0
   1a784:	bne	1a85c <__assert_fail@plt+0x9570>
   1a788:	cmp	r5, #63	; 0x3f
   1a78c:	bls	1a828 <__assert_fail@plt+0x953c>
   1a790:	tst	r8, #3
   1a794:	beq	1a8d0 <__assert_fail@plt+0x95e4>
   1a798:	cmp	r5, #64	; 0x40
   1a79c:	bls	1a828 <__assert_fail@plt+0x953c>
   1a7a0:	mov	r9, r5
   1a7a4:	mov	r4, r8
   1a7a8:	add	r7, r6, #28
   1a7ac:	mov	sl, #64	; 0x40
   1a7b0:	mov	r3, r4
   1a7b4:	mov	r2, r7
   1a7b8:	add	r1, r4, #64	; 0x40
   1a7bc:	ldr	fp, [r3]
   1a7c0:	ldr	lr, [r3, #4]
   1a7c4:	ldr	ip, [r3, #8]
   1a7c8:	ldr	r0, [r3, #12]
   1a7cc:	str	fp, [r2]
   1a7d0:	str	lr, [r2, #4]
   1a7d4:	str	ip, [r2, #8]
   1a7d8:	str	r0, [r2, #12]
   1a7dc:	add	r3, r3, #16
   1a7e0:	add	r2, r2, #16
   1a7e4:	cmp	r3, r1
   1a7e8:	bne	1a7bc <__assert_fail@plt+0x94d0>
   1a7ec:	mov	r2, r6
   1a7f0:	mov	r1, sl
   1a7f4:	mov	r0, r7
   1a7f8:	bl	19c18 <__assert_fail@plt+0x892c>
   1a7fc:	add	r4, r4, #64	; 0x40
   1a800:	sub	r9, r9, #64	; 0x40
   1a804:	cmp	r9, #64	; 0x40
   1a808:	bhi	1a7b0 <__assert_fail@plt+0x94c4>
   1a80c:	sub	r3, r5, #65	; 0x41
   1a810:	bic	r2, r3, #63	; 0x3f
   1a814:	add	r2, r2, #64	; 0x40
   1a818:	add	r8, r8, r2
   1a81c:	sub	r5, r5, #64	; 0x40
   1a820:	bic	r3, r3, #63	; 0x3f
   1a824:	sub	r5, r5, r3
   1a828:	cmp	r5, #0
   1a82c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a830:	ldr	r4, [r6, #24]
   1a834:	add	r7, r6, #28
   1a838:	mov	r2, r5
   1a83c:	mov	r1, r8
   1a840:	add	r0, r7, r4
   1a844:	bl	11058 <memcpy@plt>
   1a848:	add	r5, r5, r4
   1a84c:	cmp	r5, #63	; 0x3f
   1a850:	bhi	1a8f0 <__assert_fail@plt+0x9604>
   1a854:	str	r5, [r6, #24]
   1a858:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a85c:	rsb	r7, r4, #128	; 0x80
   1a860:	cmp	r7, r1
   1a864:	movcs	r7, r1
   1a868:	add	r9, r2, #28
   1a86c:	mov	r2, r7
   1a870:	mov	r1, r0
   1a874:	add	r0, r9, r4
   1a878:	bl	11058 <memcpy@plt>
   1a87c:	ldr	r1, [r6, #24]
   1a880:	add	r1, r7, r1
   1a884:	str	r1, [r6, #24]
   1a888:	cmp	r1, #64	; 0x40
   1a88c:	bhi	1a89c <__assert_fail@plt+0x95b0>
   1a890:	add	r8, r8, r7
   1a894:	sub	r5, r5, r7
   1a898:	b	1a788 <__assert_fail@plt+0x949c>
   1a89c:	mov	r2, r6
   1a8a0:	bic	r1, r1, #63	; 0x3f
   1a8a4:	mov	r0, r9
   1a8a8:	bl	19c18 <__assert_fail@plt+0x892c>
   1a8ac:	ldr	r2, [r6, #24]
   1a8b0:	and	r2, r2, #63	; 0x3f
   1a8b4:	str	r2, [r6, #24]
   1a8b8:	add	r1, r4, r7
   1a8bc:	bic	r1, r1, #63	; 0x3f
   1a8c0:	add	r1, r9, r1
   1a8c4:	mov	r0, r9
   1a8c8:	bl	11058 <memcpy@plt>
   1a8cc:	b	1a890 <__assert_fail@plt+0x95a4>
   1a8d0:	bic	r4, r5, #63	; 0x3f
   1a8d4:	mov	r2, r6
   1a8d8:	mov	r1, r4
   1a8dc:	mov	r0, r8
   1a8e0:	bl	19c18 <__assert_fail@plt+0x892c>
   1a8e4:	add	r8, r8, r4
   1a8e8:	and	r5, r5, #63	; 0x3f
   1a8ec:	b	1a828 <__assert_fail@plt+0x953c>
   1a8f0:	mov	r2, r6
   1a8f4:	mov	r1, #64	; 0x40
   1a8f8:	mov	r0, r7
   1a8fc:	bl	19c18 <__assert_fail@plt+0x892c>
   1a900:	sub	r5, r5, #64	; 0x40
   1a904:	mov	r2, r5
   1a908:	add	r1, r6, #92	; 0x5c
   1a90c:	mov	r0, r7
   1a910:	bl	11058 <memcpy@plt>
   1a914:	b	1a854 <__assert_fail@plt+0x9568>
   1a918:	push	{r4, r5, r6, lr}
   1a91c:	sub	sp, sp, #160	; 0xa0
   1a920:	mov	r5, r0
   1a924:	mov	r6, r1
   1a928:	mov	r4, r2
   1a92c:	add	r0, sp, #4
   1a930:	bl	19bac <__assert_fail@plt+0x88c0>
   1a934:	add	r2, sp, #4
   1a938:	mov	r1, r6
   1a93c:	mov	r0, r5
   1a940:	bl	1a76c <__assert_fail@plt+0x9480>
   1a944:	mov	r1, r4
   1a948:	add	r0, sp, #4
   1a94c:	bl	1a6d8 <__assert_fail@plt+0x93ec>
   1a950:	add	sp, sp, #160	; 0xa0
   1a954:	pop	{r4, r5, r6, pc}
   1a958:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a95c:	sub	sp, sp, #164	; 0xa4
   1a960:	mov	r5, r0
   1a964:	mov	r8, r1
   1a968:	ldr	r0, [pc, #192]	; 1aa30 <__assert_fail@plt+0x9744>
   1a96c:	bl	3562c <__assert_fail@plt+0x24340>
   1a970:	subs	r6, r0, #0
   1a974:	moveq	r0, #1
   1a978:	beq	1a9f0 <__assert_fail@plt+0x9704>
   1a97c:	mov	r0, sp
   1a980:	bl	1aa3c <__assert_fail@plt+0x9750>
   1a984:	mov	r7, #1
   1a988:	mov	r9, #32768	; 0x8000
   1a98c:	mov	r4, #0
   1a990:	ldr	r3, [r5]
   1a994:	tst	r3, #16
   1a998:	bne	1a9d0 <__assert_fail@plt+0x96e4>
   1a99c:	mov	r3, r5
   1a9a0:	rsb	r2, r4, #32768	; 0x8000
   1a9a4:	mov	r1, r7
   1a9a8:	add	r0, r6, r4
   1a9ac:	bl	112b0 <fread_unlocked@plt>
   1a9b0:	add	r4, r4, r0
   1a9b4:	cmp	r4, #32768	; 0x8000
   1a9b8:	beq	1aa08 <__assert_fail@plt+0x971c>
   1a9bc:	cmp	r0, #0
   1a9c0:	bne	1a990 <__assert_fail@plt+0x96a4>
   1a9c4:	ldr	r3, [r5]
   1a9c8:	tst	r3, #32
   1a9cc:	bne	1a9f8 <__assert_fail@plt+0x970c>
   1a9d0:	cmp	r4, #0
   1a9d4:	bne	1aa1c <__assert_fail@plt+0x9730>
   1a9d8:	mov	r1, r8
   1a9dc:	mov	r0, sp
   1a9e0:	bl	1bfb4 <__assert_fail@plt+0xacc8>
   1a9e4:	mov	r0, r6
   1a9e8:	bl	31c0c <__assert_fail@plt+0x20920>
   1a9ec:	mov	r0, #0
   1a9f0:	add	sp, sp, #164	; 0xa4
   1a9f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a9f8:	mov	r0, r6
   1a9fc:	bl	31c0c <__assert_fail@plt+0x20920>
   1aa00:	mov	r0, #1
   1aa04:	b	1a9f0 <__assert_fail@plt+0x9704>
   1aa08:	mov	r2, sp
   1aa0c:	mov	r1, r9
   1aa10:	mov	r0, r6
   1aa14:	bl	1aaf0 <__assert_fail@plt+0x9804>
   1aa18:	b	1a98c <__assert_fail@plt+0x96a0>
   1aa1c:	mov	r2, sp
   1aa20:	mov	r1, r4
   1aa24:	mov	r0, r6
   1aa28:	bl	1c050 <__assert_fail@plt+0xad64>
   1aa2c:	b	1a9d8 <__assert_fail@plt+0x96ec>
   1aa30:	andeq	r8, r0, r8, asr #32
   1aa34:	str	r1, [r0]
   1aa38:	bx	lr
   1aa3c:	ldr	r3, [pc, #52]	; 1aa78 <__assert_fail@plt+0x978c>
   1aa40:	str	r3, [r0]
   1aa44:	ldr	r3, [pc, #48]	; 1aa7c <__assert_fail@plt+0x9790>
   1aa48:	str	r3, [r0, #4]
   1aa4c:	ldr	r3, [pc, #44]	; 1aa80 <__assert_fail@plt+0x9794>
   1aa50:	str	r3, [r0, #8]
   1aa54:	ldr	r3, [pc, #40]	; 1aa84 <__assert_fail@plt+0x9798>
   1aa58:	str	r3, [r0, #12]
   1aa5c:	ldr	r3, [pc, #36]	; 1aa88 <__assert_fail@plt+0x979c>
   1aa60:	str	r3, [r0, #16]
   1aa64:	mov	r3, #0
   1aa68:	str	r3, [r0, #24]
   1aa6c:	str	r3, [r0, #20]
   1aa70:	str	r3, [r0, #28]
   1aa74:	bx	lr
   1aa78:	strbvs	r2, [r5, -r1, lsl #6]
   1aa7c:	svc	0x00cdab89
   1aa80:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   1aa84:	eorsne	r5, r2, r6, ror r4
   1aa88:	bicsgt	lr, r2, #240, 2	; 0x3c
   1aa8c:	push	{r4, r5, r6, lr}
   1aa90:	mov	r5, r0
   1aa94:	mov	r4, r1
   1aa98:	ldr	r1, [r0]
   1aa9c:	rev	r1, r1
   1aaa0:	mov	r0, r4
   1aaa4:	bl	1aa34 <__assert_fail@plt+0x9748>
   1aaa8:	ldr	r1, [r5, #4]
   1aaac:	rev	r1, r1
   1aab0:	add	r0, r4, #4
   1aab4:	bl	1aa34 <__assert_fail@plt+0x9748>
   1aab8:	ldr	r1, [r5, #8]
   1aabc:	rev	r1, r1
   1aac0:	add	r0, r4, #8
   1aac4:	bl	1aa34 <__assert_fail@plt+0x9748>
   1aac8:	ldr	r1, [r5, #12]
   1aacc:	rev	r1, r1
   1aad0:	add	r0, r4, #12
   1aad4:	bl	1aa34 <__assert_fail@plt+0x9748>
   1aad8:	ldr	r1, [r5, #16]
   1aadc:	rev	r1, r1
   1aae0:	add	r0, r4, #16
   1aae4:	bl	1aa34 <__assert_fail@plt+0x9748>
   1aae8:	mov	r0, r4
   1aaec:	pop	{r4, r5, r6, pc}
   1aaf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aaf4:	sub	sp, sp, #140	; 0x8c
   1aaf8:	mov	r5, r0
   1aafc:	mov	r7, r2
   1ab00:	str	r2, [sp, #68]	; 0x44
   1ab04:	bic	r3, r1, #3
   1ab08:	add	r3, r0, r3
   1ab0c:	mov	r8, r3
   1ab10:	str	r3, [sp, #64]	; 0x40
   1ab14:	ldr	lr, [r2]
   1ab18:	ldr	ip, [r2, #4]
   1ab1c:	ldr	r4, [r2, #8]
   1ab20:	ldr	r2, [r2, #12]
   1ab24:	ldr	r0, [r7, #16]
   1ab28:	ldr	r3, [r7, #20]
   1ab2c:	add	r3, r1, r3
   1ab30:	str	r3, [r7, #20]
   1ab34:	ldr	r6, [r7, #24]
   1ab38:	cmp	r1, r3
   1ab3c:	movls	r3, r6
   1ab40:	addhi	r3, r6, #1
   1ab44:	str	r3, [r7, #24]
   1ab48:	cmp	r5, r8
   1ab4c:	strcc	r5, [sp, #28]
   1ab50:	movcc	r5, lr
   1ab54:	bcs	1bfac <__assert_fail@plt+0xacc0>
   1ab58:	ldr	r3, [sp, #28]
   1ab5c:	sub	r1, r3, #4
   1ab60:	add	lr, sp, #72	; 0x48
   1ab64:	add	r6, r3, #60	; 0x3c
   1ab68:	ldr	r3, [r1, #4]!
   1ab6c:	rev	r3, r3
   1ab70:	str	r3, [lr], #4
   1ab74:	cmp	r1, r6
   1ab78:	bne	1ab68 <__assert_fail@plt+0x987c>
   1ab7c:	ldr	r3, [sp, #28]
   1ab80:	add	r3, r3, #64	; 0x40
   1ab84:	str	r3, [sp, #28]
   1ab88:	ldr	r6, [sp, #72]	; 0x48
   1ab8c:	ldr	r3, [pc, #4088]	; 1bb8c <__assert_fail@plt+0xa8a0>
   1ab90:	add	r3, r6, r3
   1ab94:	add	r3, r3, r0
   1ab98:	add	r1, r3, r5, ror #27
   1ab9c:	eor	r3, r4, r2
   1aba0:	and	r3, r3, ip
   1aba4:	eor	r3, r3, r2
   1aba8:	add	r3, r3, r1
   1abac:	ror	r1, ip, #2
   1abb0:	eor	lr, r1, r4
   1abb4:	and	lr, lr, r5
   1abb8:	eor	lr, lr, r4
   1abbc:	ldr	r0, [sp, #76]	; 0x4c
   1abc0:	add	r0, r0, #1509949440	; 0x5a000000
   1abc4:	add	r0, r0, #8519680	; 0x820000
   1abc8:	add	r0, r0, #30976	; 0x7900
   1abcc:	add	r0, r0, #153	; 0x99
   1abd0:	add	r2, r0, r2
   1abd4:	add	lr, lr, r2
   1abd8:	add	lr, lr, r3, ror #27
   1abdc:	ror	r5, r5, #2
   1abe0:	ldr	r7, [sp, #80]	; 0x50
   1abe4:	eor	ip, r1, r5
   1abe8:	and	ip, ip, r3
   1abec:	eor	ip, ip, r1
   1abf0:	ldr	r2, [pc, #3988]	; 1bb8c <__assert_fail@plt+0xa8a0>
   1abf4:	add	r2, r7, r2
   1abf8:	add	r2, r2, r4
   1abfc:	add	ip, ip, r2
   1ac00:	add	ip, ip, lr, ror #27
   1ac04:	ror	r3, r3, #2
   1ac08:	ldr	r8, [sp, #84]	; 0x54
   1ac0c:	eor	r0, r5, r3
   1ac10:	and	r0, r0, lr
   1ac14:	eor	r0, r0, r5
   1ac18:	ldr	r2, [pc, #3948]	; 1bb8c <__assert_fail@plt+0xa8a0>
   1ac1c:	add	r2, r8, r2
   1ac20:	add	r1, r2, r1
   1ac24:	add	r0, r0, r1
   1ac28:	add	r0, r0, ip, ror #27
   1ac2c:	ror	lr, lr, #2
   1ac30:	ldr	r9, [sp, #88]	; 0x58
   1ac34:	eor	r1, r3, lr
   1ac38:	and	r1, r1, ip
   1ac3c:	eor	r1, r1, r3
   1ac40:	ldr	r2, [pc, #3908]	; 1bb8c <__assert_fail@plt+0xa8a0>
   1ac44:	add	r2, r9, r2
   1ac48:	add	r5, r2, r5
   1ac4c:	add	r1, r1, r5
   1ac50:	add	r1, r1, r0, ror #27
   1ac54:	ror	ip, ip, #2
   1ac58:	ldr	sl, [sp, #92]	; 0x5c
   1ac5c:	eor	r2, lr, ip
   1ac60:	and	r2, r2, r0
   1ac64:	eor	r2, r2, lr
   1ac68:	ldr	r4, [pc, #3868]	; 1bb8c <__assert_fail@plt+0xa8a0>
   1ac6c:	add	r4, sl, r4
   1ac70:	add	r3, r4, r3
   1ac74:	add	r2, r2, r3
   1ac78:	add	r2, r2, r1, ror #27
   1ac7c:	ror	r0, r0, #2
   1ac80:	eor	r3, ip, r0
   1ac84:	and	r3, r3, r1
   1ac88:	eor	r3, r3, ip
   1ac8c:	ldr	r4, [sp, #96]	; 0x60
   1ac90:	add	r4, r4, #1509949440	; 0x5a000000
   1ac94:	add	r4, r4, #8519680	; 0x820000
   1ac98:	add	r4, r4, #30976	; 0x7900
   1ac9c:	add	r4, r4, #153	; 0x99
   1aca0:	add	lr, r4, lr
   1aca4:	add	r3, r3, lr
   1aca8:	add	r3, r3, r2, ror #27
   1acac:	ror	r1, r1, #2
   1acb0:	eor	lr, r0, r1
   1acb4:	and	lr, lr, r2
   1acb8:	eor	lr, lr, r0
   1acbc:	ldr	r4, [sp, #100]	; 0x64
   1acc0:	add	r4, r4, #1509949440	; 0x5a000000
   1acc4:	add	r4, r4, #8519680	; 0x820000
   1acc8:	add	r4, r4, #30976	; 0x7900
   1accc:	add	r4, r4, #153	; 0x99
   1acd0:	add	ip, r4, ip
   1acd4:	add	lr, lr, ip
   1acd8:	add	lr, lr, r3, ror #27
   1acdc:	ror	r2, r2, #2
   1ace0:	ldr	fp, [sp, #104]	; 0x68
   1ace4:	eor	ip, r1, r2
   1ace8:	and	ip, ip, r3
   1acec:	eor	ip, ip, r1
   1acf0:	ldr	r4, [pc, #3732]	; 1bb8c <__assert_fail@plt+0xa8a0>
   1acf4:	add	r4, fp, r4
   1acf8:	add	r0, r4, r0
   1acfc:	add	ip, ip, r0
   1ad00:	add	ip, ip, lr, ror #27
   1ad04:	ror	r3, r3, #2
   1ad08:	eor	r0, r2, r3
   1ad0c:	and	r0, r0, lr
   1ad10:	eor	r0, r0, r2
   1ad14:	ldr	r4, [sp, #108]	; 0x6c
   1ad18:	add	r4, r4, #1509949440	; 0x5a000000
   1ad1c:	add	r4, r4, #8519680	; 0x820000
   1ad20:	add	r4, r4, #30976	; 0x7900
   1ad24:	add	r4, r4, #153	; 0x99
   1ad28:	add	r1, r4, r1
   1ad2c:	add	r0, r0, r1
   1ad30:	add	r0, r0, ip, ror #27
   1ad34:	ror	lr, lr, #2
   1ad38:	eor	r1, r3, lr
   1ad3c:	and	r1, r1, ip
   1ad40:	eor	r1, r1, r3
   1ad44:	ldr	r4, [sp, #112]	; 0x70
   1ad48:	add	r4, r4, #1509949440	; 0x5a000000
   1ad4c:	add	r4, r4, #8519680	; 0x820000
   1ad50:	add	r4, r4, #30976	; 0x7900
   1ad54:	add	r4, r4, #153	; 0x99
   1ad58:	add	r2, r4, r2
   1ad5c:	add	r1, r1, r2
   1ad60:	add	r1, r1, r0, ror #27
   1ad64:	ror	ip, ip, #2
   1ad68:	eor	r2, lr, ip
   1ad6c:	and	r2, r2, r0
   1ad70:	eor	r2, r2, lr
   1ad74:	ldr	r4, [sp, #116]	; 0x74
   1ad78:	add	r4, r4, #1509949440	; 0x5a000000
   1ad7c:	add	r4, r4, #8519680	; 0x820000
   1ad80:	add	r4, r4, #30976	; 0x7900
   1ad84:	add	r4, r4, #153	; 0x99
   1ad88:	add	r3, r4, r3
   1ad8c:	add	r2, r2, r3
   1ad90:	add	r2, r2, r1, ror #27
   1ad94:	ror	r0, r0, #2
   1ad98:	eor	r3, ip, r0
   1ad9c:	and	r3, r3, r1
   1ada0:	eor	r3, r3, ip
   1ada4:	ldr	r4, [sp, #120]	; 0x78
   1ada8:	add	r4, r4, #1509949440	; 0x5a000000
   1adac:	add	r4, r4, #8519680	; 0x820000
   1adb0:	add	r4, r4, #30976	; 0x7900
   1adb4:	add	r4, r4, #153	; 0x99
   1adb8:	add	lr, r4, lr
   1adbc:	add	r3, r3, lr
   1adc0:	add	r3, r3, r2, ror #27
   1adc4:	ror	r1, r1, #2
   1adc8:	eor	r5, r0, r1
   1adcc:	and	r5, r5, r2
   1add0:	eor	r5, r5, r0
   1add4:	ldr	lr, [sp, #124]	; 0x7c
   1add8:	add	lr, lr, #1509949440	; 0x5a000000
   1addc:	add	lr, lr, #8519680	; 0x820000
   1ade0:	add	lr, lr, #30976	; 0x7900
   1ade4:	add	lr, lr, #153	; 0x99
   1ade8:	add	ip, lr, ip
   1adec:	add	r5, r5, ip
   1adf0:	add	r5, r5, r3, ror #27
   1adf4:	ror	r2, r2, #2
   1adf8:	eor	ip, r1, r2
   1adfc:	and	ip, ip, r3
   1ae00:	eor	ip, ip, r1
   1ae04:	ldr	lr, [sp, #128]	; 0x80
   1ae08:	add	lr, lr, #1509949440	; 0x5a000000
   1ae0c:	add	lr, lr, #8519680	; 0x820000
   1ae10:	add	lr, lr, #30976	; 0x7900
   1ae14:	add	lr, lr, #153	; 0x99
   1ae18:	add	r0, lr, r0
   1ae1c:	add	ip, ip, r0
   1ae20:	add	ip, ip, r5, ror #27
   1ae24:	ror	r3, r3, #2
   1ae28:	eor	r0, r2, r3
   1ae2c:	and	r0, r0, r5
   1ae30:	eor	r0, r0, r2
   1ae34:	ldr	lr, [sp, #132]	; 0x84
   1ae38:	add	lr, lr, #1509949440	; 0x5a000000
   1ae3c:	add	lr, lr, #8519680	; 0x820000
   1ae40:	add	lr, lr, #30976	; 0x7900
   1ae44:	add	lr, lr, #153	; 0x99
   1ae48:	add	r1, lr, r1
   1ae4c:	add	r0, r0, r1
   1ae50:	add	r0, r0, ip, ror #27
   1ae54:	ror	r5, r5, #2
   1ae58:	eor	r4, r6, r7
   1ae5c:	eor	r4, r4, fp
   1ae60:	ldr	r1, [sp, #124]	; 0x7c
   1ae64:	eor	r4, r4, r1
   1ae68:	ror	r4, r4, #31
   1ae6c:	eor	r1, r3, r5
   1ae70:	and	r1, r1, ip
   1ae74:	eor	r1, r1, r3
   1ae78:	ldr	lr, [pc, #3340]	; 1bb8c <__assert_fail@plt+0xa8a0>
   1ae7c:	add	lr, r4, lr
   1ae80:	add	r2, lr, r2
   1ae84:	add	r1, r1, r2
   1ae88:	add	r1, r1, r0, ror #27
   1ae8c:	ror	ip, ip, #2
   1ae90:	ldr	r2, [sp, #76]	; 0x4c
   1ae94:	eor	lr, r2, r8
   1ae98:	ldr	r2, [sp, #108]	; 0x6c
   1ae9c:	eor	lr, lr, r2
   1aea0:	ldr	r2, [sp, #128]	; 0x80
   1aea4:	eor	lr, lr, r2
   1aea8:	ror	lr, lr, #31
   1aeac:	eor	r2, r5, ip
   1aeb0:	and	r2, r2, r0
   1aeb4:	eor	r2, r2, r5
   1aeb8:	ldr	r6, [pc, #3276]	; 1bb8c <__assert_fail@plt+0xa8a0>
   1aebc:	add	r6, lr, r6
   1aec0:	add	r3, r6, r3
   1aec4:	add	r2, r2, r3
   1aec8:	add	r2, r2, r1, ror #27
   1aecc:	ror	r0, r0, #2
   1aed0:	eor	r3, r7, r9
   1aed4:	ldr	r6, [sp, #112]	; 0x70
   1aed8:	eor	r3, r3, r6
   1aedc:	ldr	r6, [sp, #132]	; 0x84
   1aee0:	eor	r3, r3, r6
   1aee4:	ror	r3, r3, #31
   1aee8:	mov	r7, r3
   1aeec:	eor	r3, ip, r0
   1aef0:	and	r3, r3, r1
   1aef4:	eor	r3, r3, ip
   1aef8:	add	r6, r7, #1509949440	; 0x5a000000
   1aefc:	add	r6, r6, #8519680	; 0x820000
   1af00:	add	r6, r6, #30976	; 0x7900
   1af04:	add	r6, r6, #153	; 0x99
   1af08:	add	r5, r6, r5
   1af0c:	add	r3, r3, r5
   1af10:	add	r3, r3, r2, ror #27
   1af14:	ror	r1, r1, #2
   1af18:	eor	r5, r8, sl
   1af1c:	ldr	r6, [sp, #116]	; 0x74
   1af20:	eor	r5, r5, r6
   1af24:	eor	r5, r5, r4
   1af28:	ror	r5, r5, #31
   1af2c:	mov	r8, r5
   1af30:	eor	r5, r0, r1
   1af34:	and	r5, r5, r2
   1af38:	eor	r5, r5, r0
   1af3c:	add	r6, r8, #1509949440	; 0x5a000000
   1af40:	add	r6, r6, #8519680	; 0x820000
   1af44:	add	r6, r6, #30976	; 0x7900
   1af48:	add	r6, r6, #153	; 0x99
   1af4c:	add	ip, r6, ip
   1af50:	add	r5, r5, ip
   1af54:	add	r5, r5, r3, ror #27
   1af58:	ror	r2, r2, #2
   1af5c:	ldr	ip, [sp, #96]	; 0x60
   1af60:	eor	ip, r9, ip
   1af64:	ldr	r6, [sp, #120]	; 0x78
   1af68:	eor	ip, ip, r6
   1af6c:	eor	ip, ip, lr
   1af70:	ror	ip, ip, #31
   1af74:	eor	r9, r1, r2
   1af78:	eor	r9, r9, r3
   1af7c:	ldr	r6, [pc, #3084]	; 1bb90 <__assert_fail@plt+0xa8a4>
   1af80:	add	r6, ip, r6
   1af84:	add	r0, r6, r0
   1af88:	add	r9, r9, r0
   1af8c:	add	r9, r9, r5, ror #27
   1af90:	ror	r3, r3, #2
   1af94:	ldr	r0, [sp, #100]	; 0x64
   1af98:	eor	r0, sl, r0
   1af9c:	ldr	r6, [sp, #124]	; 0x7c
   1afa0:	eor	r0, r0, r6
   1afa4:	str	r7, [sp, #8]
   1afa8:	eor	r0, r0, r7
   1afac:	ror	r0, r0, #31
   1afb0:	eor	r7, r2, r3
   1afb4:	eor	r7, r7, r5
   1afb8:	ldr	r6, [pc, #3024]	; 1bb90 <__assert_fail@plt+0xa8a4>
   1afbc:	add	r6, r0, r6
   1afc0:	add	r1, r6, r1
   1afc4:	add	r7, r7, r1
   1afc8:	add	r7, r7, r9, ror #27
   1afcc:	ror	r5, r5, #2
   1afd0:	ldr	r1, [sp, #96]	; 0x60
   1afd4:	eor	r1, r1, fp
   1afd8:	ldr	sl, [sp, #128]	; 0x80
   1afdc:	eor	r1, r1, sl
   1afe0:	str	r8, [sp, #12]
   1afe4:	eor	r1, r1, r8
   1afe8:	ror	r1, r1, #31
   1afec:	eor	r6, r3, r5
   1aff0:	eor	r6, r6, r9
   1aff4:	ldr	r8, [pc, #2964]	; 1bb90 <__assert_fail@plt+0xa8a4>
   1aff8:	add	r8, r1, r8
   1affc:	add	r2, r8, r2
   1b000:	add	r6, r6, r2
   1b004:	add	r6, r6, r7, ror #27
   1b008:	ror	r9, r9, #2
   1b00c:	ldr	r2, [sp, #100]	; 0x64
   1b010:	ldr	sl, [sp, #108]	; 0x6c
   1b014:	eor	r2, r2, sl
   1b018:	ldr	sl, [sp, #132]	; 0x84
   1b01c:	eor	r2, r2, sl
   1b020:	eor	r2, r2, ip
   1b024:	ror	r2, r2, #31
   1b028:	eor	r8, r5, r9
   1b02c:	eor	r8, r8, r7
   1b030:	ldr	sl, [pc, #2904]	; 1bb90 <__assert_fail@plt+0xa8a4>
   1b034:	add	sl, r2, sl
   1b038:	add	r3, sl, r3
   1b03c:	add	r8, r8, r3
   1b040:	add	r8, r8, r6, ror #27
   1b044:	ror	r7, r7, #2
   1b048:	ldr	sl, [sp, #112]	; 0x70
   1b04c:	eor	r3, fp, sl
   1b050:	eor	r3, r3, r4
   1b054:	eor	r3, r3, r0
   1b058:	ror	r3, r3, #31
   1b05c:	eor	fp, r9, r7
   1b060:	eor	fp, fp, r6
   1b064:	ldr	sl, [pc, #2852]	; 1bb90 <__assert_fail@plt+0xa8a4>
   1b068:	add	sl, r3, sl
   1b06c:	add	r5, sl, r5
   1b070:	add	fp, fp, r5
   1b074:	add	fp, fp, r8, ror #27
   1b078:	ror	r6, r6, #2
   1b07c:	ldr	r5, [sp, #108]	; 0x6c
   1b080:	ldr	sl, [sp, #116]	; 0x74
   1b084:	eor	r5, r5, sl
   1b088:	eor	r5, r5, lr
   1b08c:	eor	r5, r5, r1
   1b090:	ror	r5, r5, #31
   1b094:	mov	sl, r5
   1b098:	eor	r5, r7, r6
   1b09c:	eor	r5, r5, r8
   1b0a0:	str	sl, [sp, #16]
   1b0a4:	add	sl, sl, #1845493760	; 0x6e000000
   1b0a8:	add	sl, sl, #14221312	; 0xd90000
   1b0ac:	add	sl, sl, #60160	; 0xeb00
   1b0b0:	add	sl, sl, #161	; 0xa1
   1b0b4:	add	r9, sl, r9
   1b0b8:	add	r5, r5, r9
   1b0bc:	add	r5, r5, fp, ror #27
   1b0c0:	ror	r8, r8, #2
   1b0c4:	ldr	r9, [sp, #112]	; 0x70
   1b0c8:	ldr	sl, [sp, #120]	; 0x78
   1b0cc:	eor	r9, r9, sl
   1b0d0:	ldr	sl, [sp, #8]
   1b0d4:	eor	r9, r9, sl
   1b0d8:	eor	r9, r9, r2
   1b0dc:	ror	r9, r9, #31
   1b0e0:	eor	sl, r6, r8
   1b0e4:	eor	sl, sl, fp
   1b0e8:	str	r9, [sp, #20]
   1b0ec:	add	r9, r9, #1845493760	; 0x6e000000
   1b0f0:	add	r9, r9, #14221312	; 0xd90000
   1b0f4:	add	r9, r9, #60160	; 0xeb00
   1b0f8:	add	r9, r9, #161	; 0xa1
   1b0fc:	add	r7, r9, r7
   1b100:	add	sl, sl, r7
   1b104:	add	sl, sl, r5, ror #27
   1b108:	ror	fp, fp, #2
   1b10c:	ldr	r7, [sp, #116]	; 0x74
   1b110:	ldr	r9, [sp, #124]	; 0x7c
   1b114:	eor	r7, r7, r9
   1b118:	ldr	r9, [sp, #12]
   1b11c:	eor	r7, r7, r9
   1b120:	eor	r7, r7, r3
   1b124:	ror	r7, r7, #31
   1b128:	eor	r9, r8, fp
   1b12c:	eor	r9, r9, r5
   1b130:	str	r7, [sp, #24]
   1b134:	add	r7, r7, #1845493760	; 0x6e000000
   1b138:	add	r7, r7, #14221312	; 0xd90000
   1b13c:	add	r7, r7, #60160	; 0xeb00
   1b140:	add	r7, r7, #161	; 0xa1
   1b144:	add	r6, r7, r6
   1b148:	add	r9, r9, r6
   1b14c:	add	r9, r9, sl, ror #27
   1b150:	ror	r5, r5, #2
   1b154:	ldr	r6, [sp, #120]	; 0x78
   1b158:	ldr	r7, [sp, #128]	; 0x80
   1b15c:	eor	r6, r6, r7
   1b160:	eor	r6, r6, ip
   1b164:	ldr	r7, [sp, #16]
   1b168:	eor	r6, r6, r7
   1b16c:	ror	r6, r6, #31
   1b170:	eor	r7, fp, r5
   1b174:	eor	r7, r7, sl
   1b178:	str	r6, [sp, #32]
   1b17c:	add	r6, r6, #1845493760	; 0x6e000000
   1b180:	add	r6, r6, #14221312	; 0xd90000
   1b184:	add	r6, r6, #60160	; 0xeb00
   1b188:	add	r6, r6, #161	; 0xa1
   1b18c:	add	r8, r6, r8
   1b190:	add	r7, r7, r8
   1b194:	add	r7, r7, r9, ror #27
   1b198:	ror	sl, sl, #2
   1b19c:	ldr	r8, [sp, #124]	; 0x7c
   1b1a0:	ldr	r6, [sp, #132]	; 0x84
   1b1a4:	eor	r6, r8, r6
   1b1a8:	eor	r6, r6, r0
   1b1ac:	ldr	r8, [sp, #20]
   1b1b0:	eor	r6, r6, r8
   1b1b4:	ror	r8, r6, #31
   1b1b8:	mov	r6, r8
   1b1bc:	eor	r8, r5, sl
   1b1c0:	eor	r8, r8, r9
   1b1c4:	str	r6, [sp, #36]	; 0x24
   1b1c8:	add	r6, r6, #1845493760	; 0x6e000000
   1b1cc:	add	r6, r6, #14221312	; 0xd90000
   1b1d0:	add	r6, r6, #60160	; 0xeb00
   1b1d4:	add	r6, r6, #161	; 0xa1
   1b1d8:	add	fp, r6, fp
   1b1dc:	add	r8, r8, fp
   1b1e0:	add	r8, r8, r7, ror #27
   1b1e4:	ror	r9, r9, #2
   1b1e8:	ldr	fp, [sp, #128]	; 0x80
   1b1ec:	eor	r6, fp, r4
   1b1f0:	eor	r6, r6, r1
   1b1f4:	ldr	fp, [sp, #24]
   1b1f8:	eor	r6, r6, fp
   1b1fc:	ror	fp, r6, #31
   1b200:	eor	r6, sl, r9
   1b204:	eor	r6, r6, r7
   1b208:	str	fp, [sp, #40]	; 0x28
   1b20c:	add	fp, fp, #1845493760	; 0x6e000000
   1b210:	add	fp, fp, #14221312	; 0xd90000
   1b214:	add	fp, fp, #60160	; 0xeb00
   1b218:	add	fp, fp, #161	; 0xa1
   1b21c:	add	r5, fp, r5
   1b220:	add	r6, r6, r5
   1b224:	add	r6, r6, r8, ror #27
   1b228:	ror	r7, r7, #2
   1b22c:	ldr	r5, [sp, #132]	; 0x84
   1b230:	eor	r5, r5, lr
   1b234:	eor	r5, r5, r2
   1b238:	ldr	fp, [sp, #32]
   1b23c:	eor	r5, r5, fp
   1b240:	ror	r5, r5, #31
   1b244:	mov	fp, r5
   1b248:	eor	r5, r9, r7
   1b24c:	eor	r5, r5, r8
   1b250:	str	fp, [sp, #4]
   1b254:	add	fp, fp, #1845493760	; 0x6e000000
   1b258:	add	fp, fp, #14221312	; 0xd90000
   1b25c:	add	fp, fp, #60160	; 0xeb00
   1b260:	add	fp, fp, #161	; 0xa1
   1b264:	add	sl, fp, sl
   1b268:	add	r5, r5, sl
   1b26c:	add	r5, r5, r6, ror #27
   1b270:	ror	r8, r8, #2
   1b274:	ldr	fp, [sp, #8]
   1b278:	eor	r4, r4, fp
   1b27c:	eor	r4, r4, r3
   1b280:	ldr	sl, [sp, #36]	; 0x24
   1b284:	eor	r4, r4, sl
   1b288:	ror	r4, r4, #31
   1b28c:	mov	sl, r4
   1b290:	eor	r4, r7, r8
   1b294:	eor	r4, r4, r6
   1b298:	str	sl, [sp, #44]	; 0x2c
   1b29c:	add	sl, sl, #1845493760	; 0x6e000000
   1b2a0:	add	sl, sl, #14221312	; 0xd90000
   1b2a4:	add	sl, sl, #60160	; 0xeb00
   1b2a8:	add	sl, sl, #161	; 0xa1
   1b2ac:	add	r9, sl, r9
   1b2b0:	add	r4, r4, r9
   1b2b4:	add	r4, r4, r5, ror #27
   1b2b8:	ror	r6, r6, #2
   1b2bc:	ldr	r9, [sp, #12]
   1b2c0:	eor	lr, lr, r9
   1b2c4:	ldr	sl, [sp, #16]
   1b2c8:	eor	lr, lr, sl
   1b2cc:	ldr	r9, [sp, #40]	; 0x28
   1b2d0:	eor	lr, lr, r9
   1b2d4:	ror	lr, lr, #31
   1b2d8:	mov	r9, lr
   1b2dc:	eor	lr, r8, r6
   1b2e0:	eor	lr, lr, r5
   1b2e4:	str	r9, [sp, #8]
   1b2e8:	add	r9, r9, #1845493760	; 0x6e000000
   1b2ec:	add	r9, r9, #14221312	; 0xd90000
   1b2f0:	add	r9, r9, #60160	; 0xeb00
   1b2f4:	add	r9, r9, #161	; 0xa1
   1b2f8:	add	r7, r9, r7
   1b2fc:	add	lr, lr, r7
   1b300:	add	lr, lr, r4, ror #27
   1b304:	ror	r5, r5, #2
   1b308:	eor	r7, fp, ip
   1b30c:	ldr	fp, [sp, #20]
   1b310:	eor	r7, r7, fp
   1b314:	ldr	fp, [sp, #4]
   1b318:	eor	r7, r7, fp
   1b31c:	ror	r7, r7, #31
   1b320:	mov	sl, r7
   1b324:	eor	r7, r6, r5
   1b328:	eor	r7, r7, r4
   1b32c:	add	r9, sl, #1845493760	; 0x6e000000
   1b330:	add	r9, r9, #14221312	; 0xd90000
   1b334:	add	r9, r9, #60160	; 0xeb00
   1b338:	add	r9, r9, #161	; 0xa1
   1b33c:	add	r8, r9, r8
   1b340:	add	r7, r7, r8
   1b344:	add	r7, r7, lr, ror #27
   1b348:	ror	r4, r4, #2
   1b34c:	ldr	r9, [sp, #12]
   1b350:	eor	r8, r9, r0
   1b354:	ldr	r9, [sp, #24]
   1b358:	eor	r8, r8, r9
   1b35c:	ldr	r9, [sp, #44]	; 0x2c
   1b360:	eor	r8, r8, r9
   1b364:	ror	r8, r8, #31
   1b368:	mov	r9, r8
   1b36c:	eor	r8, r5, r4
   1b370:	eor	r8, r8, lr
   1b374:	str	r9, [sp, #12]
   1b378:	add	r9, r9, #1845493760	; 0x6e000000
   1b37c:	add	r9, r9, #14221312	; 0xd90000
   1b380:	add	r9, r9, #60160	; 0xeb00
   1b384:	add	r9, r9, #161	; 0xa1
   1b388:	add	r6, r9, r6
   1b38c:	add	r6, r8, r6
   1b390:	add	r8, r6, r7, ror #27
   1b394:	ror	lr, lr, #2
   1b398:	eor	ip, ip, r1
   1b39c:	ldr	r6, [sp, #32]
   1b3a0:	eor	ip, ip, r6
   1b3a4:	ldr	r6, [sp, #8]
   1b3a8:	eor	ip, ip, r6
   1b3ac:	ror	ip, ip, #31
   1b3b0:	mov	r9, ip
   1b3b4:	eor	ip, r4, lr
   1b3b8:	eor	ip, ip, r7
   1b3bc:	add	r6, r9, #1845493760	; 0x6e000000
   1b3c0:	add	r6, r6, #14221312	; 0xd90000
   1b3c4:	add	r6, r6, #60160	; 0xeb00
   1b3c8:	add	r6, r6, #161	; 0xa1
   1b3cc:	add	r5, r6, r5
   1b3d0:	add	ip, ip, r5
   1b3d4:	add	ip, ip, r8, ror #27
   1b3d8:	ror	r7, r7, #2
   1b3dc:	eor	r0, r0, r2
   1b3e0:	ldr	r5, [sp, #36]	; 0x24
   1b3e4:	eor	r0, r0, r5
   1b3e8:	str	sl, [sp, #48]	; 0x30
   1b3ec:	eor	r0, r0, sl
   1b3f0:	ror	r0, r0, #31
   1b3f4:	mov	r6, r0
   1b3f8:	eor	r0, lr, r7
   1b3fc:	eor	r0, r0, r8
   1b400:	str	r6, [sp, #56]	; 0x38
   1b404:	ldr	r5, [pc, #1924]	; 1bb90 <__assert_fail@plt+0xa8a4>
   1b408:	add	r5, r6, r5
   1b40c:	add	r4, r5, r4
   1b410:	add	r0, r0, r4
   1b414:	add	r0, r0, ip, ror #27
   1b418:	ror	r8, r8, #2
   1b41c:	eor	r1, r1, r3
   1b420:	ldr	r4, [sp, #40]	; 0x28
   1b424:	eor	r1, r1, r4
   1b428:	ldr	r4, [sp, #12]
   1b42c:	eor	r1, r1, r4
   1b430:	ror	r6, r1, #31
   1b434:	eor	r1, r7, r8
   1b438:	eor	r1, r1, ip
   1b43c:	ldr	r4, [pc, #1868]	; 1bb90 <__assert_fail@plt+0xa8a4>
   1b440:	add	r4, r6, r4
   1b444:	add	lr, r4, lr
   1b448:	add	r1, r1, lr
   1b44c:	add	r1, r1, r0, ror #27
   1b450:	ror	ip, ip, #2
   1b454:	ldr	sl, [sp, #16]
   1b458:	eor	r2, r2, sl
   1b45c:	eor	r2, r2, fp
   1b460:	str	r9, [sp, #52]	; 0x34
   1b464:	eor	r2, r2, r9
   1b468:	ror	fp, r2, #31
   1b46c:	eor	r2, r8, ip
   1b470:	eor	r2, r2, r0
   1b474:	ldr	lr, [pc, #1812]	; 1bb90 <__assert_fail@plt+0xa8a4>
   1b478:	add	lr, fp, lr
   1b47c:	add	r7, lr, r7
   1b480:	add	r2, r2, r7
   1b484:	add	r2, r2, r1, ror #27
   1b488:	ror	r0, r0, #2
   1b48c:	ldr	r5, [sp, #20]
   1b490:	eor	r3, r3, r5
   1b494:	ldr	r4, [sp, #44]	; 0x2c
   1b498:	eor	r3, r3, r4
   1b49c:	ldr	r7, [sp, #56]	; 0x38
   1b4a0:	eor	r3, r3, r7
   1b4a4:	ror	r3, r3, #31
   1b4a8:	str	r3, [sp, #60]	; 0x3c
   1b4ac:	add	r3, r3, #-1895825408	; 0x8f000000
   1b4b0:	add	r3, r3, #1802240	; 0x1b8000
   1b4b4:	add	r3, r3, #15552	; 0x3cc0
   1b4b8:	add	r3, r3, #28
   1b4bc:	add	r8, r3, r8
   1b4c0:	add	r8, r8, r2, ror #27
   1b4c4:	orr	r3, r1, r0
   1b4c8:	and	r3, r3, ip
   1b4cc:	and	lr, r1, r0
   1b4d0:	orr	r3, r3, lr
   1b4d4:	add	r8, r3, r8
   1b4d8:	ror	r1, r1, #2
   1b4dc:	ldr	r9, [sp, #24]
   1b4e0:	eor	r3, sl, r9
   1b4e4:	ldr	sl, [sp, #8]
   1b4e8:	eor	r3, r3, sl
   1b4ec:	eor	r3, r3, r6
   1b4f0:	ror	lr, r3, #31
   1b4f4:	orr	r4, r2, r1
   1b4f8:	and	r3, r4, r0
   1b4fc:	and	r4, r2, r1
   1b500:	orr	r4, r3, r4
   1b504:	str	lr, [sp, #16]
   1b508:	ldr	r3, [pc, #1668]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b50c:	add	r3, lr, r3
   1b510:	add	ip, r3, ip
   1b514:	add	ip, r4, ip
   1b518:	add	r4, ip, r8, ror #27
   1b51c:	ror	r2, r2, #2
   1b520:	ldr	r7, [sp, #32]
   1b524:	eor	r3, r5, r7
   1b528:	ldr	ip, [sp, #48]	; 0x30
   1b52c:	eor	r3, r3, ip
   1b530:	eor	r3, r3, fp
   1b534:	ror	sl, r3, #31
   1b538:	str	sl, [sp, #24]
   1b53c:	ldr	r3, [pc, #1616]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b540:	add	r3, sl, r3
   1b544:	add	r0, r3, r0
   1b548:	add	r0, r0, r4, ror #27
   1b54c:	orr	r3, r8, r2
   1b550:	and	r3, r3, r1
   1b554:	and	ip, r8, r2
   1b558:	orr	r3, r3, ip
   1b55c:	add	r0, r3, r0
   1b560:	ror	r8, r8, #2
   1b564:	ldr	ip, [sp, #36]	; 0x24
   1b568:	eor	r3, r9, ip
   1b56c:	ldr	r5, [sp, #12]
   1b570:	eor	r3, r3, r5
   1b574:	ldr	sl, [sp, #60]	; 0x3c
   1b578:	eor	r3, r3, sl
   1b57c:	ror	sl, r3, #31
   1b580:	orr	r5, r4, r8
   1b584:	and	r3, r5, r2
   1b588:	and	r5, r4, r8
   1b58c:	orr	r5, r3, r5
   1b590:	ldr	r3, [pc, #1532]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b594:	add	r3, sl, r3
   1b598:	add	r1, r3, r1
   1b59c:	add	r1, r5, r1
   1b5a0:	add	r5, r1, r0, ror #27
   1b5a4:	ror	r4, r4, #2
   1b5a8:	mov	r3, r7
   1b5ac:	ldr	r7, [sp, #40]	; 0x28
   1b5b0:	eor	r3, r3, r7
   1b5b4:	ldr	r1, [sp, #52]	; 0x34
   1b5b8:	eor	r3, r3, r1
   1b5bc:	ldr	r9, [sp, #16]
   1b5c0:	eor	r3, r3, r9
   1b5c4:	ror	r9, r3, #31
   1b5c8:	ldr	r3, [pc, #1476]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b5cc:	add	r3, r9, r3
   1b5d0:	add	r2, r3, r2
   1b5d4:	add	r2, r2, r5, ror #27
   1b5d8:	orr	r3, r0, r4
   1b5dc:	and	r3, r3, r8
   1b5e0:	and	r1, r0, r4
   1b5e4:	orr	r3, r3, r1
   1b5e8:	add	r2, r3, r2
   1b5ec:	ror	r0, r0, #2
   1b5f0:	mov	r3, ip
   1b5f4:	ldr	lr, [sp, #4]
   1b5f8:	eor	r3, r3, lr
   1b5fc:	ldr	ip, [sp, #56]	; 0x38
   1b600:	eor	r3, r3, ip
   1b604:	ldr	r1, [sp, #24]
   1b608:	eor	r3, r3, r1
   1b60c:	ror	r3, r3, #31
   1b610:	mov	ip, r3
   1b614:	orr	lr, r5, r0
   1b618:	and	r3, lr, r4
   1b61c:	and	lr, r5, r0
   1b620:	orr	lr, r3, lr
   1b624:	str	ip, [sp, #20]
   1b628:	add	r3, ip, #-1895825408	; 0x8f000000
   1b62c:	add	r3, r3, #1802240	; 0x1b8000
   1b630:	add	r3, r3, #15552	; 0x3cc0
   1b634:	add	r3, r3, #28
   1b638:	add	r8, r3, r8
   1b63c:	add	lr, lr, r8
   1b640:	add	lr, lr, r2, ror #27
   1b644:	ror	ip, r5, #2
   1b648:	mov	r3, r7
   1b64c:	ldr	r8, [sp, #44]	; 0x2c
   1b650:	eor	r3, r3, r8
   1b654:	eor	r3, r3, r6
   1b658:	eor	r3, r3, sl
   1b65c:	ror	r5, r3, #31
   1b660:	str	r5, [sp, #32]
   1b664:	ldr	r3, [pc, #1320]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b668:	add	r3, r5, r3
   1b66c:	add	r4, r3, r4
   1b670:	add	r4, r4, lr, ror #27
   1b674:	orr	r3, r2, ip
   1b678:	and	r3, r3, r0
   1b67c:	and	r1, r2, ip
   1b680:	orr	r3, r3, r1
   1b684:	add	r3, r3, r4
   1b688:	ror	r2, r2, #2
   1b68c:	ldr	r1, [sp, #4]
   1b690:	ldr	r4, [sp, #8]
   1b694:	eor	r1, r1, r4
   1b698:	eor	r1, r1, fp
   1b69c:	eor	r1, r1, r9
   1b6a0:	ror	r4, r1, #31
   1b6a4:	orr	r5, lr, r2
   1b6a8:	and	r1, r5, ip
   1b6ac:	and	r5, lr, r2
   1b6b0:	orr	r5, r1, r5
   1b6b4:	str	r4, [sp, #36]	; 0x24
   1b6b8:	ldr	r1, [pc, #1236]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b6bc:	add	r1, r4, r1
   1b6c0:	add	r0, r1, r0
   1b6c4:	add	r0, r5, r0
   1b6c8:	add	r0, r0, r3, ror #27
   1b6cc:	ror	r7, lr, #2
   1b6d0:	ldr	r1, [sp, #48]	; 0x30
   1b6d4:	eor	r1, r8, r1
   1b6d8:	ldr	r8, [sp, #60]	; 0x3c
   1b6dc:	eor	r1, r1, r8
   1b6e0:	ldr	r8, [sp, #20]
   1b6e4:	eor	r1, r1, r8
   1b6e8:	ror	r8, r1, #31
   1b6ec:	str	r8, [sp, #40]	; 0x28
   1b6f0:	ldr	r5, [pc, #1180]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b6f4:	add	r5, r8, r5
   1b6f8:	add	r5, r5, ip
   1b6fc:	add	ip, r5, r0, ror #27
   1b700:	orr	r5, r3, r7
   1b704:	and	r5, r5, r2
   1b708:	and	r1, r3, r7
   1b70c:	orr	r5, r5, r1
   1b710:	add	r5, r5, ip
   1b714:	ror	r4, r3, #2
   1b718:	ldr	r3, [sp, #8]
   1b71c:	ldr	lr, [sp, #12]
   1b720:	eor	lr, r3, lr
   1b724:	ldr	r3, [sp, #16]
   1b728:	eor	lr, lr, r3
   1b72c:	ldr	r3, [sp, #32]
   1b730:	eor	lr, lr, r3
   1b734:	ror	r8, lr, #31
   1b738:	orr	r3, r0, r4
   1b73c:	and	r1, r3, r7
   1b740:	and	r3, r0, r4
   1b744:	orr	r3, r1, r3
   1b748:	ldr	r1, [pc, #1092]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b74c:	add	r1, r8, r1
   1b750:	add	r2, r1, r2
   1b754:	add	r2, r3, r2
   1b758:	add	r2, r2, r5, ror #27
   1b75c:	ror	r0, r0, #2
   1b760:	ldr	r1, [sp, #48]	; 0x30
   1b764:	ldr	r3, [sp, #52]	; 0x34
   1b768:	eor	ip, r1, r3
   1b76c:	ldr	r1, [sp, #24]
   1b770:	eor	ip, ip, r1
   1b774:	ldr	lr, [sp, #36]	; 0x24
   1b778:	eor	ip, ip, lr
   1b77c:	ror	ip, ip, #31
   1b780:	str	ip, [sp, #44]	; 0x2c
   1b784:	ldr	lr, [pc, #1032]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b788:	add	lr, ip, lr
   1b78c:	add	lr, lr, r7
   1b790:	add	lr, lr, r2, ror #27
   1b794:	orr	r3, r5, r0
   1b798:	and	r3, r3, r4
   1b79c:	and	r1, r5, r0
   1b7a0:	orr	r3, r3, r1
   1b7a4:	add	r3, r3, lr
   1b7a8:	ror	r5, r5, #2
   1b7ac:	ldr	lr, [sp, #12]
   1b7b0:	ldr	r7, [sp, #56]	; 0x38
   1b7b4:	eor	r1, lr, r7
   1b7b8:	eor	r1, r1, sl
   1b7bc:	ldr	ip, [sp, #40]	; 0x28
   1b7c0:	eor	r1, r1, ip
   1b7c4:	ror	lr, r1, #31
   1b7c8:	mov	ip, lr
   1b7cc:	orr	lr, r2, r5
   1b7d0:	and	r1, lr, r0
   1b7d4:	and	lr, r2, r5
   1b7d8:	orr	lr, r1, lr
   1b7dc:	str	ip, [sp, #48]	; 0x30
   1b7e0:	add	r1, ip, #-1895825408	; 0x8f000000
   1b7e4:	add	r1, r1, #1802240	; 0x1b8000
   1b7e8:	add	r1, r1, #15552	; 0x3cc0
   1b7ec:	add	r1, r1, #28
   1b7f0:	add	r4, r1, r4
   1b7f4:	add	lr, lr, r4
   1b7f8:	add	lr, lr, r3, ror #27
   1b7fc:	ror	r2, r2, #2
   1b800:	ldr	r1, [sp, #52]	; 0x34
   1b804:	eor	r1, r1, r6
   1b808:	eor	r1, r1, r9
   1b80c:	eor	r1, r1, r8
   1b810:	ror	r4, r1, #31
   1b814:	str	r4, [sp, #52]	; 0x34
   1b818:	ldr	r1, [pc, #884]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b81c:	add	r1, r4, r1
   1b820:	add	r0, r1, r0
   1b824:	add	r0, r0, lr, ror #27
   1b828:	orr	ip, r3, r2
   1b82c:	and	ip, ip, r5
   1b830:	and	r1, r3, r2
   1b834:	orr	ip, ip, r1
   1b838:	add	ip, ip, r0
   1b83c:	ror	r3, r3, #2
   1b840:	eor	r7, r7, fp
   1b844:	ldr	r0, [sp, #20]
   1b848:	eor	r7, r7, r0
   1b84c:	ldr	r1, [sp, #44]	; 0x2c
   1b850:	eor	r7, r7, r1
   1b854:	ror	r7, r7, #31
   1b858:	orr	r0, lr, r3
   1b85c:	and	r1, r0, r2
   1b860:	and	r0, lr, r3
   1b864:	orr	r0, r1, r0
   1b868:	ldr	r1, [pc, #804]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b86c:	add	r1, r7, r1
   1b870:	add	r5, r1, r5
   1b874:	add	r0, r0, r5
   1b878:	add	r0, r0, ip, ror #27
   1b87c:	ror	lr, lr, #2
   1b880:	ldr	r5, [sp, #60]	; 0x3c
   1b884:	eor	r6, r6, r5
   1b888:	ldr	r4, [sp, #32]
   1b88c:	eor	r6, r6, r4
   1b890:	ldr	r1, [sp, #48]	; 0x30
   1b894:	eor	r6, r6, r1
   1b898:	ror	r6, r6, #31
   1b89c:	ldr	r1, [pc, #752]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b8a0:	add	r1, r6, r1
   1b8a4:	add	r2, r1, r2
   1b8a8:	add	r2, r2, r0, ror #27
   1b8ac:	orr	r1, ip, lr
   1b8b0:	and	r1, r1, r3
   1b8b4:	and	r4, ip, lr
   1b8b8:	orr	r1, r1, r4
   1b8bc:	add	r1, r1, r2
   1b8c0:	ror	ip, ip, #2
   1b8c4:	ldr	r2, [sp, #16]
   1b8c8:	eor	fp, fp, r2
   1b8cc:	ldr	r4, [sp, #36]	; 0x24
   1b8d0:	eor	fp, fp, r4
   1b8d4:	ldr	r2, [sp, #52]	; 0x34
   1b8d8:	eor	fp, fp, r2
   1b8dc:	ror	fp, fp, #31
   1b8e0:	orr	r2, r0, ip
   1b8e4:	and	r4, r2, lr
   1b8e8:	and	r2, r0, ip
   1b8ec:	orr	r2, r4, r2
   1b8f0:	ldr	r4, [pc, #668]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b8f4:	add	r4, fp, r4
   1b8f8:	add	r3, r4, r3
   1b8fc:	add	r2, r2, r3
   1b900:	add	r2, r2, r1, ror #27
   1b904:	ror	r0, r0, #2
   1b908:	mov	r3, r5
   1b90c:	ldr	r5, [sp, #24]
   1b910:	eor	r3, r3, r5
   1b914:	ldr	r4, [sp, #40]	; 0x28
   1b918:	eor	r3, r3, r4
   1b91c:	eor	r3, r3, r7
   1b920:	ror	r3, r3, #31
   1b924:	str	r3, [sp, #56]	; 0x38
   1b928:	add	r3, r3, #-1895825408	; 0x8f000000
   1b92c:	add	r3, r3, #1802240	; 0x1b8000
   1b930:	add	r3, r3, #15552	; 0x3cc0
   1b934:	add	r3, r3, #28
   1b938:	add	r3, r3, lr
   1b93c:	add	lr, r3, r2, ror #27
   1b940:	orr	r3, r1, r0
   1b944:	and	r3, r3, ip
   1b948:	and	r4, r1, r0
   1b94c:	orr	r3, r3, r4
   1b950:	add	r3, r3, lr
   1b954:	ror	r1, r1, #2
   1b958:	ldr	lr, [sp, #16]
   1b95c:	eor	lr, lr, sl
   1b960:	eor	lr, lr, r8
   1b964:	eor	lr, lr, r6
   1b968:	ror	lr, lr, #31
   1b96c:	str	lr, [sp, #4]
   1b970:	orr	r4, r2, r1
   1b974:	and	lr, r4, r0
   1b978:	and	r4, r2, r1
   1b97c:	orr	r4, lr, r4
   1b980:	ldr	lr, [sp, #4]
   1b984:	add	lr, lr, #-1895825408	; 0x8f000000
   1b988:	add	lr, lr, #1802240	; 0x1b8000
   1b98c:	add	lr, lr, #15552	; 0x3cc0
   1b990:	add	lr, lr, #28
   1b994:	add	ip, lr, ip
   1b998:	add	r4, r4, ip
   1b99c:	add	r4, r4, r3, ror #27
   1b9a0:	ror	r2, r2, #2
   1b9a4:	eor	r5, r5, r9
   1b9a8:	ldr	ip, [sp, #44]	; 0x2c
   1b9ac:	eor	r5, r5, ip
   1b9b0:	eor	r5, r5, fp
   1b9b4:	ror	r5, r5, #31
   1b9b8:	str	r5, [sp, #8]
   1b9bc:	ldr	ip, [pc, #464]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1b9c0:	add	ip, r5, ip
   1b9c4:	add	r0, ip, r0
   1b9c8:	add	r0, r0, r4, ror #27
   1b9cc:	orr	r5, r3, r2
   1b9d0:	and	r5, r5, r1
   1b9d4:	and	ip, r3, r2
   1b9d8:	orr	r5, r5, ip
   1b9dc:	add	r5, r5, r0
   1b9e0:	ror	r3, r3, #2
   1b9e4:	ldr	r0, [sp, #20]
   1b9e8:	eor	sl, sl, r0
   1b9ec:	ldr	lr, [sp, #48]	; 0x30
   1b9f0:	eor	sl, sl, lr
   1b9f4:	ldr	ip, [sp, #56]	; 0x38
   1b9f8:	eor	sl, sl, ip
   1b9fc:	ror	sl, sl, #31
   1ba00:	orr	lr, r4, r3
   1ba04:	and	r0, lr, r2
   1ba08:	and	lr, r4, r3
   1ba0c:	orr	lr, r0, lr
   1ba10:	str	sl, [sp, #12]
   1ba14:	ldr	r0, [pc, #376]	; 1bb94 <__assert_fail@plt+0xa8a8>
   1ba18:	add	r0, sl, r0
   1ba1c:	add	r1, r0, r1
   1ba20:	add	lr, lr, r1
   1ba24:	add	lr, lr, r5, ror #27
   1ba28:	ror	r4, r4, #2
   1ba2c:	ldr	sl, [sp, #32]
   1ba30:	eor	r9, r9, sl
   1ba34:	ldr	r1, [sp, #52]	; 0x34
   1ba38:	eor	r9, r9, r1
   1ba3c:	ldr	r1, [sp, #4]
   1ba40:	eor	r9, r9, r1
   1ba44:	ror	r9, r9, #31
   1ba48:	eor	ip, r3, r4
   1ba4c:	eor	ip, ip, r5
   1ba50:	str	r9, [sp, #16]
   1ba54:	ldr	r1, [pc, #316]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1ba58:	add	r1, r9, r1
   1ba5c:	add	r2, r1, r2
   1ba60:	add	ip, ip, r2
   1ba64:	add	ip, ip, lr, ror #27
   1ba68:	ror	r5, r5, #2
   1ba6c:	ldr	r0, [sp, #20]
   1ba70:	ldr	r9, [sp, #36]	; 0x24
   1ba74:	eor	r2, r0, r9
   1ba78:	eor	r2, r2, r7
   1ba7c:	ldr	r0, [sp, #8]
   1ba80:	eor	r2, r2, r0
   1ba84:	ror	r2, r2, #31
   1ba88:	eor	r0, r4, r5
   1ba8c:	eor	r0, r0, lr
   1ba90:	str	r2, [sp, #20]
   1ba94:	add	r2, r2, #-905969664	; 0xca000000
   1ba98:	add	r2, r2, #6422528	; 0x620000
   1ba9c:	add	r2, r2, #49408	; 0xc100
   1baa0:	add	r2, r2, #214	; 0xd6
   1baa4:	add	r3, r2, r3
   1baa8:	add	r0, r0, r3
   1baac:	add	r0, r0, ip, ror #27
   1bab0:	ror	lr, lr, #2
   1bab4:	mov	r1, sl
   1bab8:	ldr	sl, [sp, #40]	; 0x28
   1babc:	eor	r3, r1, sl
   1bac0:	eor	r3, r3, r6
   1bac4:	ldr	r2, [sp, #12]
   1bac8:	eor	r3, r3, r2
   1bacc:	ror	r3, r3, #31
   1bad0:	eor	r1, r5, lr
   1bad4:	eor	r1, r1, ip
   1bad8:	str	r3, [sp, #24]
   1badc:	add	r3, r3, #-905969664	; 0xca000000
   1bae0:	add	r3, r3, #6422528	; 0x620000
   1bae4:	add	r3, r3, #49408	; 0xc100
   1bae8:	add	r3, r3, #214	; 0xd6
   1baec:	add	r4, r3, r4
   1baf0:	add	r1, r1, r4
   1baf4:	add	r1, r1, r0, ror #27
   1baf8:	ror	ip, ip, #2
   1bafc:	eor	r3, r9, r8
   1bb00:	eor	r3, r3, fp
   1bb04:	ldr	r4, [sp, #16]
   1bb08:	eor	r3, r3, r4
   1bb0c:	ror	r4, r3, #31
   1bb10:	eor	r2, lr, ip
   1bb14:	eor	r2, r2, r0
   1bb18:	str	r4, [sp, #32]
   1bb1c:	ldr	r3, [pc, #116]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1bb20:	add	r3, r4, r3
   1bb24:	add	r5, r3, r5
   1bb28:	add	r2, r2, r5
   1bb2c:	add	r2, r2, r1, ror #27
   1bb30:	ror	r0, r0, #2
   1bb34:	mov	r3, sl
   1bb38:	ldr	r5, [sp, #44]	; 0x2c
   1bb3c:	eor	r3, r3, r5
   1bb40:	ldr	r4, [sp, #56]	; 0x38
   1bb44:	eor	r3, r3, r4
   1bb48:	ldr	sl, [sp, #20]
   1bb4c:	eor	r3, r3, sl
   1bb50:	ror	r3, r3, #31
   1bb54:	mov	r9, r3
   1bb58:	str	r3, [sp, #72]	; 0x48
   1bb5c:	eor	r3, ip, r0
   1bb60:	eor	r3, r3, r1
   1bb64:	str	r9, [sp, #36]	; 0x24
   1bb68:	ldr	r4, [pc, #40]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1bb6c:	add	r4, r9, r4
   1bb70:	add	lr, r4, lr
   1bb74:	add	r3, r3, lr
   1bb78:	add	r3, r3, r2, ror #27
   1bb7c:	ror	r1, r1, #2
   1bb80:	ldr	r9, [sp, #48]	; 0x30
   1bb84:	eor	lr, r8, r9
   1bb88:	b	1bb9c <__assert_fail@plt+0xa8b0>
   1bb8c:	bpl	fe0ba1f8 <optarg@@GLIBC_2.4+0xfe070050>
   1bb90:	vfnmsvs.f64	d30, d25, d17
   1bb94:	svchi	0x001bbcdc
   1bb98:	bgt	18cc2f8 <optarg@@GLIBC_2.4+0x1882150>
   1bb9c:	ldr	r8, [sp, #4]
   1bba0:	eor	lr, lr, r8
   1bba4:	ldr	r8, [sp, #24]
   1bba8:	eor	lr, lr, r8
   1bbac:	ror	lr, lr, #31
   1bbb0:	str	lr, [sp, #76]	; 0x4c
   1bbb4:	eor	r8, r0, r1
   1bbb8:	eor	r8, r8, r2
   1bbbc:	str	lr, [sp, #40]	; 0x28
   1bbc0:	add	lr, lr, #-905969664	; 0xca000000
   1bbc4:	add	lr, lr, #6422528	; 0x620000
   1bbc8:	add	lr, lr, #49408	; 0xc100
   1bbcc:	add	lr, lr, #214	; 0xd6
   1bbd0:	add	ip, lr, ip
   1bbd4:	add	r8, r8, ip
   1bbd8:	add	r8, r8, r3, ror #27
   1bbdc:	ror	r2, r2, #2
   1bbe0:	ldr	sl, [sp, #52]	; 0x34
   1bbe4:	eor	ip, r5, sl
   1bbe8:	ldr	r5, [sp, #8]
   1bbec:	eor	ip, ip, r5
   1bbf0:	ldr	lr, [sp, #32]
   1bbf4:	eor	ip, ip, lr
   1bbf8:	ror	ip, ip, #31
   1bbfc:	str	ip, [sp, #80]	; 0x50
   1bc00:	eor	r4, r1, r2
   1bc04:	eor	r4, r4, r3
   1bc08:	ldr	lr, [pc, #-120]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1bc0c:	add	lr, ip, lr
   1bc10:	add	r0, lr, r0
   1bc14:	add	r4, r4, r0
   1bc18:	add	r4, r4, r8, ror #27
   1bc1c:	ror	r3, r3, #2
   1bc20:	eor	r0, r9, r7
   1bc24:	ldr	lr, [sp, #12]
   1bc28:	eor	r0, r0, lr
   1bc2c:	ldr	r9, [sp, #36]	; 0x24
   1bc30:	eor	r0, r0, r9
   1bc34:	ror	r0, r0, #31
   1bc38:	str	r0, [sp, #84]	; 0x54
   1bc3c:	eor	lr, r2, r3
   1bc40:	eor	lr, lr, r8
   1bc44:	str	r0, [sp, #44]	; 0x2c
   1bc48:	ldr	r5, [pc, #-184]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1bc4c:	add	r5, r0, r5
   1bc50:	add	r1, r5, r1
   1bc54:	add	lr, lr, r1
   1bc58:	add	lr, lr, r4, ror #27
   1bc5c:	ror	r8, r8, #2
   1bc60:	mov	r1, sl
   1bc64:	eor	r1, r1, r6
   1bc68:	ldr	r0, [sp, #16]
   1bc6c:	eor	r1, r1, r0
   1bc70:	ldr	sl, [sp, #40]	; 0x28
   1bc74:	eor	r1, r1, sl
   1bc78:	ror	r1, r1, #31
   1bc7c:	str	r1, [sp, #88]	; 0x58
   1bc80:	eor	r5, r3, r8
   1bc84:	eor	r5, r5, r4
   1bc88:	str	r1, [sp, #48]	; 0x30
   1bc8c:	ldr	r9, [pc, #-252]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1bc90:	add	r9, r1, r9
   1bc94:	add	r2, r9, r2
   1bc98:	add	r5, r5, r2
   1bc9c:	add	r5, r5, lr, ror #27
   1bca0:	ror	r4, r4, #2
   1bca4:	eor	r2, r7, fp
   1bca8:	ldr	sl, [sp, #20]
   1bcac:	eor	r2, r2, sl
   1bcb0:	eor	r2, r2, ip
   1bcb4:	ror	r2, r2, #31
   1bcb8:	str	r2, [sp, #92]	; 0x5c
   1bcbc:	eor	sl, r8, r4
   1bcc0:	eor	sl, sl, lr
   1bcc4:	ldr	r7, [pc, #-308]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1bcc8:	add	r7, r2, r7
   1bccc:	add	r3, r7, r3
   1bcd0:	add	sl, sl, r3
   1bcd4:	add	sl, sl, r5, ror #27
   1bcd8:	ror	lr, lr, #2
   1bcdc:	ldr	r7, [sp, #56]	; 0x38
   1bce0:	eor	r3, r6, r7
   1bce4:	ldr	r6, [sp, #24]
   1bce8:	eor	r3, r3, r6
   1bcec:	ldr	r6, [sp, #44]	; 0x2c
   1bcf0:	eor	r3, r3, r6
   1bcf4:	ror	r3, r3, #31
   1bcf8:	str	r3, [sp, #96]	; 0x60
   1bcfc:	eor	r9, r4, lr
   1bd00:	eor	r9, r9, r5
   1bd04:	ldr	r6, [pc, #-372]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1bd08:	add	r6, r3, r6
   1bd0c:	add	r8, r6, r8
   1bd10:	add	r9, r9, r8
   1bd14:	add	r9, r9, sl, ror #27
   1bd18:	ror	r5, r5, #2
   1bd1c:	ldr	r1, [sp, #4]
   1bd20:	eor	r6, fp, r1
   1bd24:	ldr	fp, [sp, #32]
   1bd28:	eor	r6, r6, fp
   1bd2c:	ldr	r8, [sp, #48]	; 0x30
   1bd30:	eor	r6, r6, r8
   1bd34:	ror	fp, r6, #31
   1bd38:	str	fp, [sp, #100]	; 0x64
   1bd3c:	eor	r8, lr, r5
   1bd40:	eor	r8, r8, sl
   1bd44:	ldr	r6, [pc, #-436]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1bd48:	add	r6, fp, r6
   1bd4c:	add	r4, r6, r4
   1bd50:	add	r8, r8, r4
   1bd54:	add	r8, r8, r9, ror #27
   1bd58:	ror	sl, sl, #2
   1bd5c:	mov	r4, r7
   1bd60:	ldr	r6, [sp, #8]
   1bd64:	eor	r4, r4, r6
   1bd68:	ldr	r7, [sp, #36]	; 0x24
   1bd6c:	eor	r4, r4, r7
   1bd70:	eor	r4, r4, r2
   1bd74:	ror	r4, r4, #31
   1bd78:	str	r4, [sp, #104]	; 0x68
   1bd7c:	eor	r7, r5, sl
   1bd80:	eor	r7, r7, r9
   1bd84:	ldr	r6, [pc, #-500]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1bd88:	add	r6, r4, r6
   1bd8c:	add	lr, r6, lr
   1bd90:	add	r7, r7, lr
   1bd94:	add	r7, r7, r8, ror #27
   1bd98:	ror	r9, r9, #2
   1bd9c:	mov	lr, r1
   1bda0:	ldr	r6, [sp, #12]
   1bda4:	eor	lr, lr, r6
   1bda8:	ldr	r6, [sp, #40]	; 0x28
   1bdac:	eor	lr, lr, r6
   1bdb0:	eor	lr, lr, r3
   1bdb4:	ror	lr, lr, #31
   1bdb8:	str	lr, [sp, #108]	; 0x6c
   1bdbc:	eor	r6, sl, r9
   1bdc0:	eor	r6, r6, r8
   1bdc4:	ldr	r1, [pc, #-564]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1bdc8:	add	r1, lr, r1
   1bdcc:	add	r5, r1, r5
   1bdd0:	add	r6, r6, r5
   1bdd4:	add	r6, r6, r7, ror #27
   1bdd8:	ror	r8, r8, #2
   1bddc:	ldr	r5, [sp, #8]
   1bde0:	eor	r5, r5, r0
   1bde4:	eor	ip, ip, r5
   1bde8:	eor	ip, ip, fp
   1bdec:	ror	ip, ip, #31
   1bdf0:	str	ip, [sp, #112]	; 0x70
   1bdf4:	eor	r5, r9, r8
   1bdf8:	eor	r5, r5, r7
   1bdfc:	ldr	r1, [pc, #-620]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1be00:	add	r1, ip, r1
   1be04:	add	sl, r1, sl
   1be08:	add	r5, r5, sl
   1be0c:	add	r5, r5, r6, ror #27
   1be10:	ror	r7, r7, #2
   1be14:	ldr	sl, [sp, #12]
   1be18:	ldr	r0, [sp, #20]
   1be1c:	eor	sl, sl, r0
   1be20:	ldr	r0, [sp, #44]	; 0x2c
   1be24:	eor	r0, r0, sl
   1be28:	eor	r4, r4, r0
   1be2c:	ror	r4, r4, #31
   1be30:	str	r4, [sp, #116]	; 0x74
   1be34:	eor	r0, r8, r7
   1be38:	eor	r0, r0, r6
   1be3c:	ldr	sl, [pc, #-684]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1be40:	add	sl, r4, sl
   1be44:	add	r9, sl, r9
   1be48:	add	r0, r0, r9
   1be4c:	add	r0, r0, r5, ror #27
   1be50:	ror	r6, r6, #2
   1be54:	ldr	r9, [sp, #16]
   1be58:	ldr	sl, [sp, #24]
   1be5c:	eor	r9, r9, sl
   1be60:	ldr	r1, [sp, #48]	; 0x30
   1be64:	eor	r1, r1, r9
   1be68:	eor	lr, lr, r1
   1be6c:	ror	lr, lr, #31
   1be70:	str	lr, [sp, #120]	; 0x78
   1be74:	ldr	r1, [pc, #-740]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1be78:	add	r1, lr, r1
   1be7c:	add	r8, r1, r8
   1be80:	eor	r1, r7, r6
   1be84:	eor	r1, r1, r5
   1be88:	add	r8, r8, r1
   1be8c:	add	r8, r8, r0, ror #27
   1be90:	ror	r5, r5, #2
   1be94:	ldr	sl, [sp, #20]
   1be98:	ldr	r9, [sp, #32]
   1be9c:	eor	r1, sl, r9
   1bea0:	eor	r2, r2, r1
   1bea4:	eor	r2, r2, ip
   1bea8:	ror	r2, r2, #31
   1beac:	str	r2, [sp, #124]	; 0x7c
   1beb0:	add	r2, r2, #-905969664	; 0xca000000
   1beb4:	add	r2, r2, #6422528	; 0x620000
   1beb8:	add	r2, r2, #49408	; 0xc100
   1bebc:	add	r2, r2, #214	; 0xd6
   1bec0:	add	r7, r2, r7
   1bec4:	eor	r2, r6, r5
   1bec8:	eor	r2, r2, r0
   1becc:	add	r7, r7, r2
   1bed0:	add	r2, r7, r8, ror #27
   1bed4:	ror	r0, r0, #2
   1bed8:	ldr	sl, [sp, #24]
   1bedc:	ldr	r7, [sp, #36]	; 0x24
   1bee0:	eor	r1, sl, r7
   1bee4:	eor	r3, r3, r1
   1bee8:	eor	r4, r4, r3
   1beec:	ror	r4, r4, #31
   1bef0:	str	r4, [sp, #128]	; 0x80
   1bef4:	ldr	r1, [pc, #-868]	; 1bb98 <__assert_fail@plt+0xa8ac>
   1bef8:	add	r1, r4, r1
   1befc:	add	r6, r1, r6
   1bf00:	eor	r1, r5, r0
   1bf04:	eor	r1, r1, r8
   1bf08:	add	r1, r6, r1
   1bf0c:	add	r1, r1, r2, ror #27
   1bf10:	ror	r8, r8, #2
   1bf14:	mov	r3, r9
   1bf18:	ldr	r6, [sp, #40]	; 0x28
   1bf1c:	eor	r3, r3, r6
   1bf20:	eor	r3, r3, fp
   1bf24:	eor	lr, lr, r3
   1bf28:	ror	lr, lr, #31
   1bf2c:	str	lr, [sp, #132]	; 0x84
   1bf30:	ldr	ip, [sp, #68]	; 0x44
   1bf34:	ldr	r3, [ip]
   1bf38:	add	r3, r3, #-905969664	; 0xca000000
   1bf3c:	add	r3, r3, #6422528	; 0x620000
   1bf40:	add	r3, r3, #49408	; 0xc100
   1bf44:	add	r3, r3, #214	; 0xd6
   1bf48:	add	lr, r3, lr
   1bf4c:	add	r5, lr, r5
   1bf50:	eor	r3, r0, r8
   1bf54:	eor	r3, r3, r2
   1bf58:	add	r5, r5, r3
   1bf5c:	add	r5, r5, r1, ror #27
   1bf60:	mov	r3, ip
   1bf64:	str	r5, [ip]
   1bf68:	ldr	ip, [ip, #4]
   1bf6c:	add	ip, r1, ip
   1bf70:	str	ip, [r3, #4]
   1bf74:	mov	r1, r3
   1bf78:	ldr	r4, [r3, #8]
   1bf7c:	add	r4, r4, r2, ror #2
   1bf80:	str	r4, [r3, #8]
   1bf84:	ldr	r2, [r3, #12]
   1bf88:	add	r2, r8, r2
   1bf8c:	str	r2, [r3, #12]
   1bf90:	ldr	r3, [r3, #16]
   1bf94:	add	r0, r0, r3
   1bf98:	str	r0, [r1, #16]
   1bf9c:	ldr	r1, [sp, #64]	; 0x40
   1bfa0:	ldr	r3, [sp, #28]
   1bfa4:	cmp	r1, r3
   1bfa8:	bhi	1ab58 <__assert_fail@plt+0x986c>
   1bfac:	add	sp, sp, #140	; 0x8c
   1bfb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bfb4:	push	{r4, r5, r6, r7, r8, lr}
   1bfb8:	mov	r4, r0
   1bfbc:	mov	r6, r1
   1bfc0:	ldr	r0, [r0, #28]
   1bfc4:	cmp	r0, #55	; 0x37
   1bfc8:	movls	r5, #16
   1bfcc:	movhi	r5, #32
   1bfd0:	ldr	r3, [r4, #20]
   1bfd4:	add	r3, r0, r3
   1bfd8:	str	r3, [r4, #20]
   1bfdc:	cmp	r0, r3
   1bfe0:	ldrhi	r2, [r4, #24]
   1bfe4:	addhi	r2, r2, #1
   1bfe8:	strhi	r2, [r4, #24]
   1bfec:	ldr	r1, [r4, #24]
   1bff0:	lsr	r2, r3, #29
   1bff4:	orr	r2, r2, r1, lsl #3
   1bff8:	rev	r2, r2
   1bffc:	add	r1, r4, r5, lsl #2
   1c000:	str	r2, [r1, #24]
   1c004:	lsl	r3, r3, #3
   1c008:	rev	r3, r3
   1c00c:	str	r3, [r1, #28]
   1c010:	add	r7, r4, #32
   1c014:	sub	r5, r5, #-1073741822	; 0xc0000002
   1c018:	lsl	r5, r5, #2
   1c01c:	sub	r2, r5, r0
   1c020:	ldr	r1, [pc, #36]	; 1c04c <__assert_fail@plt+0xad60>
   1c024:	add	r0, r7, r0
   1c028:	bl	11058 <memcpy@plt>
   1c02c:	mov	r2, r4
   1c030:	add	r1, r5, #8
   1c034:	mov	r0, r7
   1c038:	bl	1aaf0 <__assert_fail@plt+0x9804>
   1c03c:	mov	r1, r6
   1c040:	mov	r0, r4
   1c044:	bl	1aa8c <__assert_fail@plt+0x97a0>
   1c048:	pop	{r4, r5, r6, r7, r8, pc}
   1c04c:	andeq	r9, r3, ip, ror #16
   1c050:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c054:	mov	r8, r0
   1c058:	mov	r5, r1
   1c05c:	mov	r6, r2
   1c060:	ldr	r4, [r2, #28]
   1c064:	cmp	r4, #0
   1c068:	bne	1c140 <__assert_fail@plt+0xae54>
   1c06c:	cmp	r5, #63	; 0x3f
   1c070:	bls	1c10c <__assert_fail@plt+0xae20>
   1c074:	tst	r8, #3
   1c078:	beq	1c1b4 <__assert_fail@plt+0xaec8>
   1c07c:	cmp	r5, #64	; 0x40
   1c080:	bls	1c10c <__assert_fail@plt+0xae20>
   1c084:	mov	r9, r5
   1c088:	mov	r4, r8
   1c08c:	add	r7, r6, #32
   1c090:	mov	sl, #64	; 0x40
   1c094:	mov	r3, r4
   1c098:	mov	r2, r7
   1c09c:	add	r1, r4, #64	; 0x40
   1c0a0:	ldr	fp, [r3]
   1c0a4:	ldr	lr, [r3, #4]
   1c0a8:	ldr	ip, [r3, #8]
   1c0ac:	ldr	r0, [r3, #12]
   1c0b0:	str	fp, [r2]
   1c0b4:	str	lr, [r2, #4]
   1c0b8:	str	ip, [r2, #8]
   1c0bc:	str	r0, [r2, #12]
   1c0c0:	add	r3, r3, #16
   1c0c4:	add	r2, r2, #16
   1c0c8:	cmp	r3, r1
   1c0cc:	bne	1c0a0 <__assert_fail@plt+0xadb4>
   1c0d0:	mov	r2, r6
   1c0d4:	mov	r1, sl
   1c0d8:	mov	r0, r7
   1c0dc:	bl	1aaf0 <__assert_fail@plt+0x9804>
   1c0e0:	add	r4, r4, #64	; 0x40
   1c0e4:	sub	r9, r9, #64	; 0x40
   1c0e8:	cmp	r9, #64	; 0x40
   1c0ec:	bhi	1c094 <__assert_fail@plt+0xada8>
   1c0f0:	sub	r3, r5, #65	; 0x41
   1c0f4:	bic	r2, r3, #63	; 0x3f
   1c0f8:	add	r2, r2, #64	; 0x40
   1c0fc:	add	r8, r8, r2
   1c100:	sub	r5, r5, #64	; 0x40
   1c104:	bic	r3, r3, #63	; 0x3f
   1c108:	sub	r5, r5, r3
   1c10c:	cmp	r5, #0
   1c110:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c114:	ldr	r4, [r6, #28]
   1c118:	add	r7, r6, #32
   1c11c:	mov	r2, r5
   1c120:	mov	r1, r8
   1c124:	add	r0, r7, r4
   1c128:	bl	11058 <memcpy@plt>
   1c12c:	add	r5, r5, r4
   1c130:	cmp	r5, #63	; 0x3f
   1c134:	bhi	1c1d4 <__assert_fail@plt+0xaee8>
   1c138:	str	r5, [r6, #28]
   1c13c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c140:	rsb	r7, r4, #128	; 0x80
   1c144:	cmp	r7, r1
   1c148:	movcs	r7, r1
   1c14c:	add	r9, r2, #32
   1c150:	mov	r2, r7
   1c154:	mov	r1, r0
   1c158:	add	r0, r9, r4
   1c15c:	bl	11058 <memcpy@plt>
   1c160:	ldr	r1, [r6, #28]
   1c164:	add	r1, r7, r1
   1c168:	str	r1, [r6, #28]
   1c16c:	cmp	r1, #64	; 0x40
   1c170:	bhi	1c180 <__assert_fail@plt+0xae94>
   1c174:	add	r8, r8, r7
   1c178:	sub	r5, r5, r7
   1c17c:	b	1c06c <__assert_fail@plt+0xad80>
   1c180:	mov	r2, r6
   1c184:	bic	r1, r1, #63	; 0x3f
   1c188:	mov	r0, r9
   1c18c:	bl	1aaf0 <__assert_fail@plt+0x9804>
   1c190:	ldr	r2, [r6, #28]
   1c194:	and	r2, r2, #63	; 0x3f
   1c198:	str	r2, [r6, #28]
   1c19c:	add	r1, r4, r7
   1c1a0:	bic	r1, r1, #63	; 0x3f
   1c1a4:	add	r1, r9, r1
   1c1a8:	mov	r0, r9
   1c1ac:	bl	11058 <memcpy@plt>
   1c1b0:	b	1c174 <__assert_fail@plt+0xae88>
   1c1b4:	bic	r4, r5, #63	; 0x3f
   1c1b8:	mov	r2, r6
   1c1bc:	mov	r1, r4
   1c1c0:	mov	r0, r8
   1c1c4:	bl	1aaf0 <__assert_fail@plt+0x9804>
   1c1c8:	add	r8, r8, r4
   1c1cc:	and	r5, r5, #63	; 0x3f
   1c1d0:	b	1c10c <__assert_fail@plt+0xae20>
   1c1d4:	mov	r2, r6
   1c1d8:	mov	r1, #64	; 0x40
   1c1dc:	mov	r0, r7
   1c1e0:	bl	1aaf0 <__assert_fail@plt+0x9804>
   1c1e4:	sub	r5, r5, #64	; 0x40
   1c1e8:	mov	r2, r5
   1c1ec:	add	r1, r6, #96	; 0x60
   1c1f0:	mov	r0, r7
   1c1f4:	bl	11058 <memcpy@plt>
   1c1f8:	b	1c138 <__assert_fail@plt+0xae4c>
   1c1fc:	push	{r4, r5, r6, lr}
   1c200:	sub	sp, sp, #160	; 0xa0
   1c204:	mov	r5, r0
   1c208:	mov	r6, r1
   1c20c:	mov	r4, r2
   1c210:	mov	r0, sp
   1c214:	bl	1aa3c <__assert_fail@plt+0x9750>
   1c218:	mov	r2, sp
   1c21c:	mov	r1, r6
   1c220:	mov	r0, r5
   1c224:	bl	1c050 <__assert_fail@plt+0xad64>
   1c228:	mov	r1, r4
   1c22c:	mov	r0, sp
   1c230:	bl	1bfb4 <__assert_fail@plt+0xacc8>
   1c234:	add	sp, sp, #160	; 0xa0
   1c238:	pop	{r4, r5, r6, pc}
   1c23c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c240:	sub	sp, sp, #180	; 0xb4
   1c244:	mov	r5, r0
   1c248:	mov	r8, r2
   1c24c:	ldr	r0, [pc, #200]	; 1c31c <__assert_fail@plt+0xb030>
   1c250:	bl	3562c <__assert_fail@plt+0x24340>
   1c254:	subs	r6, r0, #0
   1c258:	moveq	r0, #1
   1c25c:	beq	1c2dc <__assert_fail@plt+0xaff0>
   1c260:	add	r0, sp, #4
   1c264:	ldr	r3, [sp, #208]	; 0xd0
   1c268:	blx	r3
   1c26c:	mov	r7, #1
   1c270:	mov	r9, #32768	; 0x8000
   1c274:	mov	r4, #0
   1c278:	ldr	r3, [r5]
   1c27c:	tst	r3, #16
   1c280:	bne	1c2b8 <__assert_fail@plt+0xafcc>
   1c284:	mov	r3, r5
   1c288:	rsb	r2, r4, #32768	; 0x8000
   1c28c:	mov	r1, r7
   1c290:	add	r0, r6, r4
   1c294:	bl	112b0 <fread_unlocked@plt>
   1c298:	add	r4, r4, r0
   1c29c:	cmp	r4, #32768	; 0x8000
   1c2a0:	beq	1c2f4 <__assert_fail@plt+0xb008>
   1c2a4:	cmp	r0, #0
   1c2a8:	bne	1c278 <__assert_fail@plt+0xaf8c>
   1c2ac:	ldr	r3, [r5]
   1c2b0:	tst	r3, #32
   1c2b4:	bne	1c2e4 <__assert_fail@plt+0xaff8>
   1c2b8:	cmp	r4, #0
   1c2bc:	bne	1c308 <__assert_fail@plt+0xb01c>
   1c2c0:	mov	r1, r8
   1c2c4:	add	r0, sp, #4
   1c2c8:	ldr	r3, [sp, #212]	; 0xd4
   1c2cc:	blx	r3
   1c2d0:	mov	r0, r6
   1c2d4:	bl	31c0c <__assert_fail@plt+0x20920>
   1c2d8:	mov	r0, #0
   1c2dc:	add	sp, sp, #180	; 0xb4
   1c2e0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c2e4:	mov	r0, r6
   1c2e8:	bl	31c0c <__assert_fail@plt+0x20920>
   1c2ec:	mov	r0, #1
   1c2f0:	b	1c2dc <__assert_fail@plt+0xaff0>
   1c2f4:	add	r2, sp, #4
   1c2f8:	mov	r1, r9
   1c2fc:	mov	r0, r6
   1c300:	bl	1c4d8 <__assert_fail@plt+0xb1ec>
   1c304:	b	1c274 <__assert_fail@plt+0xaf88>
   1c308:	add	r2, sp, #4
   1c30c:	mov	r1, r4
   1c310:	mov	r0, r6
   1c314:	bl	1e7ac <__assert_fail@plt+0xd4c0>
   1c318:	b	1c2c0 <__assert_fail@plt+0xafd4>
   1c31c:	andeq	r8, r0, r8, asr #32
   1c320:	push	{lr}		; (str lr, [sp, #-4]!)
   1c324:	sub	sp, sp, #12
   1c328:	ldr	r3, [pc, #32]	; 1c350 <__assert_fail@plt+0xb064>
   1c32c:	str	r3, [sp, #4]
   1c330:	ldr	r3, [pc, #28]	; 1c354 <__assert_fail@plt+0xb068>
   1c334:	str	r3, [sp]
   1c338:	mov	r3, #32
   1c33c:	mov	r2, r1
   1c340:	ldr	r1, [pc, #16]	; 1c358 <__assert_fail@plt+0xb06c>
   1c344:	bl	1c23c <__assert_fail@plt+0xaf50>
   1c348:	add	sp, sp, #12
   1c34c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c350:	andeq	lr, r1, ip, ror #14
   1c354:	muleq	r1, r8, r3
   1c358:	andeq	r7, r3, r8, lsl #14
   1c35c:	push	{lr}		; (str lr, [sp, #-4]!)
   1c360:	sub	sp, sp, #12
   1c364:	ldr	r3, [pc, #32]	; 1c38c <__assert_fail@plt+0xb0a0>
   1c368:	str	r3, [sp, #4]
   1c36c:	ldr	r3, [pc, #28]	; 1c390 <__assert_fail@plt+0xb0a4>
   1c370:	str	r3, [sp]
   1c374:	mov	r3, #28
   1c378:	mov	r2, r1
   1c37c:	ldr	r1, [pc, #16]	; 1c394 <__assert_fail@plt+0xb0a8>
   1c380:	bl	1c23c <__assert_fail@plt+0xaf50>
   1c384:	add	sp, sp, #12
   1c388:	pop	{pc}		; (ldr pc, [sp], #4)
   1c38c:	andeq	lr, r1, ip, lsl #15
   1c390:	andeq	ip, r1, ip, lsl #8
   1c394:	andeq	r7, r3, r0, lsl #14
   1c398:	ldr	r3, [pc, #76]	; 1c3ec <__assert_fail@plt+0xb100>
   1c39c:	str	r3, [r0]
   1c3a0:	ldr	r3, [pc, #72]	; 1c3f0 <__assert_fail@plt+0xb104>
   1c3a4:	str	r3, [r0, #4]
   1c3a8:	ldr	r3, [pc, #68]	; 1c3f4 <__assert_fail@plt+0xb108>
   1c3ac:	str	r3, [r0, #8]
   1c3b0:	ldr	r3, [pc, #64]	; 1c3f8 <__assert_fail@plt+0xb10c>
   1c3b4:	str	r3, [r0, #12]
   1c3b8:	ldr	r3, [pc, #60]	; 1c3fc <__assert_fail@plt+0xb110>
   1c3bc:	str	r3, [r0, #16]
   1c3c0:	ldr	r3, [pc, #56]	; 1c400 <__assert_fail@plt+0xb114>
   1c3c4:	str	r3, [r0, #20]
   1c3c8:	ldr	r3, [pc, #52]	; 1c404 <__assert_fail@plt+0xb118>
   1c3cc:	str	r3, [r0, #24]
   1c3d0:	ldr	r3, [pc, #48]	; 1c408 <__assert_fail@plt+0xb11c>
   1c3d4:	str	r3, [r0, #28]
   1c3d8:	mov	r3, #0
   1c3dc:	str	r3, [r0, #36]	; 0x24
   1c3e0:	str	r3, [r0, #32]
   1c3e4:	str	r3, [r0, #40]	; 0x28
   1c3e8:	bx	lr
   1c3ec:	bvs	295d90 <optarg@@GLIBC_2.4+0x24bbe8>
   1c3f0:	bllt	1a07e0c <optarg@@GLIBC_2.4+0x19bdc64>
   1c3f4:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   1c3f8:	strbge	pc, [pc, #-1338]	; 1bec6 <__assert_fail@plt+0xabda>	; <UNPREDICTABLE>
   1c3fc:	tstpl	lr, pc, ror r2
   1c400:	blls	176638 <optarg@@GLIBC_2.4+0x12c490>
   1c404:	svcne	0x0083d9ab
   1c408:	blpl	ff84f874 <optarg@@GLIBC_2.4+0xff8056cc>
   1c40c:	ldr	r3, [pc, #76]	; 1c460 <__assert_fail@plt+0xb174>
   1c410:	str	r3, [r0]
   1c414:	ldr	r3, [pc, #72]	; 1c464 <__assert_fail@plt+0xb178>
   1c418:	str	r3, [r0, #4]
   1c41c:	ldr	r3, [pc, #68]	; 1c468 <__assert_fail@plt+0xb17c>
   1c420:	str	r3, [r0, #8]
   1c424:	ldr	r3, [pc, #64]	; 1c46c <__assert_fail@plt+0xb180>
   1c428:	str	r3, [r0, #12]
   1c42c:	ldr	r3, [pc, #60]	; 1c470 <__assert_fail@plt+0xb184>
   1c430:	str	r3, [r0, #16]
   1c434:	ldr	r3, [pc, #56]	; 1c474 <__assert_fail@plt+0xb188>
   1c438:	str	r3, [r0, #20]
   1c43c:	ldr	r3, [pc, #52]	; 1c478 <__assert_fail@plt+0xb18c>
   1c440:	str	r3, [r0, #24]
   1c444:	ldr	r3, [pc, #48]	; 1c47c <__assert_fail@plt+0xb190>
   1c448:	str	r3, [r0, #28]
   1c44c:	mov	r3, #0
   1c450:	str	r3, [r0, #36]	; 0x24
   1c454:	str	r3, [r0, #32]
   1c458:	str	r3, [r0, #40]	; 0x28
   1c45c:	bx	lr
   1c460:	ldrdgt	r9, [r5, -r8]
   1c464:	ldrbtcc	sp, [ip], -r7, lsl #10
   1c468:	rsbscc	sp, r0, r7, lsl sp
   1c46c:			; <UNDEFINED> instruction: 0xf70e5939
   1c470:			; <UNDEFINED> instruction: 0xffc00b31
   1c474:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   1c478:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   1c47c:	cdplt	15, 15, cr4, cr10, cr4, {5}
   1c480:	push	{lr}		; (str lr, [sp, #-4]!)
   1c484:	sub	r2, r0, #4
   1c488:	mov	ip, r1
   1c48c:	add	lr, r0, #28
   1c490:	ldr	r3, [r2, #4]!
   1c494:	rev	r3, r3
   1c498:	str	r3, [ip], #4
   1c49c:	cmp	r2, lr
   1c4a0:	bne	1c490 <__assert_fail@plt+0xb1a4>
   1c4a4:	mov	r0, r1
   1c4a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c4ac:	push	{lr}		; (str lr, [sp, #-4]!)
   1c4b0:	sub	r2, r0, #4
   1c4b4:	mov	ip, r1
   1c4b8:	add	lr, r0, #24
   1c4bc:	ldr	r3, [r2, #4]!
   1c4c0:	rev	r3, r3
   1c4c4:	str	r3, [ip], #4
   1c4c8:	cmp	r2, lr
   1c4cc:	bne	1c4bc <__assert_fail@plt+0xb1d0>
   1c4d0:	mov	r0, r1
   1c4d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c4d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4dc:	sub	sp, sp, #148	; 0x94
   1c4e0:	mov	r8, r2
   1c4e4:	str	r2, [sp, #76]	; 0x4c
   1c4e8:	bic	r3, r1, #3
   1c4ec:	add	r3, r0, r3
   1c4f0:	mov	sl, r3
   1c4f4:	str	r3, [sp, #72]	; 0x48
   1c4f8:	ldr	r3, [r2]
   1c4fc:	ldr	r2, [r2, #4]
   1c500:	ldr	fp, [r8, #8]
   1c504:	ldr	r9, [r8, #12]
   1c508:	ldr	ip, [r8, #16]
   1c50c:	ldr	lr, [r8, #20]
   1c510:	ldr	r4, [r8, #24]
   1c514:	ldr	r6, [r8, #28]
   1c518:	ldr	r5, [r8, #32]
   1c51c:	add	r5, r1, r5
   1c520:	str	r5, [r8, #32]
   1c524:	ldr	r7, [r8, #36]	; 0x24
   1c528:	cmp	r1, r5
   1c52c:	movls	r1, r7
   1c530:	addhi	r1, r7, #1
   1c534:	str	r1, [r8, #36]	; 0x24
   1c538:	cmp	r0, sl
   1c53c:	bcs	1e6d8 <__assert_fail@plt+0xd3ec>
   1c540:	str	r0, [sp, #68]	; 0x44
   1c544:	mov	r7, r3
   1c548:	mov	r0, r9
   1c54c:	mov	r3, r6
   1c550:	mov	r6, r4
   1c554:	mov	r4, r3
   1c558:	ldr	r3, [sp, #68]	; 0x44
   1c55c:	sub	r1, r3, #4
   1c560:	add	r5, sp, #80	; 0x50
   1c564:	add	r8, r3, #60	; 0x3c
   1c568:	ldr	r3, [r1, #4]!
   1c56c:	rev	r3, r3
   1c570:	str	r3, [r5], #4
   1c574:	cmp	r1, r8
   1c578:	bne	1c568 <__assert_fail@plt+0xb27c>
   1c57c:	ldr	r3, [sp, #68]	; 0x44
   1c580:	add	r3, r3, #64	; 0x40
   1c584:	str	r3, [sp, #68]	; 0x44
   1c588:	ror	r3, ip, #11
   1c58c:	eor	r3, r3, ip, ror #6
   1c590:	eor	r3, r3, ip, ror #25
   1c594:	ldr	r1, [sp, #80]	; 0x50
   1c598:	add	r1, r1, #1107296256	; 0x42000000
   1c59c:	add	r1, r1, #9043968	; 0x8a0000
   1c5a0:	add	r1, r1, #12160	; 0x2f80
   1c5a4:	add	r1, r1, #24
   1c5a8:	add	r4, r1, r4
   1c5ac:	add	r3, r3, r4
   1c5b0:	eor	r1, lr, r6
   1c5b4:	and	r1, r1, ip
   1c5b8:	eor	r1, r1, r6
   1c5bc:	add	r3, r3, r1
   1c5c0:	add	r5, r3, r0
   1c5c4:	ror	r0, r7, #13
   1c5c8:	eor	r0, r0, r7, ror #2
   1c5cc:	eor	r0, r0, r7, ror #22
   1c5d0:	orr	r1, r7, r2
   1c5d4:	and	r1, r1, fp
   1c5d8:	and	r4, r7, r2
   1c5dc:	orr	r1, r1, r4
   1c5e0:	add	r0, r0, r1
   1c5e4:	add	r0, r0, r3
   1c5e8:	ldr	sl, [sp, #84]	; 0x54
   1c5ec:	eor	r1, ip, lr
   1c5f0:	and	r1, r1, r5
   1c5f4:	eor	r1, r1, lr
   1c5f8:	ldr	r3, [pc, #4088]	; 1d5f8 <__assert_fail@plt+0xc30c>
   1c5fc:	add	r3, sl, r3
   1c600:	add	r6, r3, r6
   1c604:	add	r1, r1, r6
   1c608:	ror	r3, r5, #11
   1c60c:	eor	r3, r3, r5, ror #6
   1c610:	eor	r4, r3, r5, ror #25
   1c614:	add	r3, r1, r4
   1c618:	add	r4, r3, fp
   1c61c:	ror	r1, r0, #13
   1c620:	eor	r1, r1, r0, ror #2
   1c624:	eor	r1, r1, r0, ror #22
   1c628:	orr	r6, r0, r7
   1c62c:	and	r6, r6, r2
   1c630:	and	r8, r0, r7
   1c634:	orr	r6, r6, r8
   1c638:	add	r1, r1, r6
   1c63c:	add	r1, r1, r3
   1c640:	ldr	fp, [sp, #88]	; 0x58
   1c644:	eor	r6, r5, ip
   1c648:	and	r6, r6, r4
   1c64c:	eor	r6, r6, ip
   1c650:	ldr	r3, [pc, #4004]	; 1d5fc <__assert_fail@plt+0xc310>
   1c654:	add	r3, fp, r3
   1c658:	add	r3, r3, lr
   1c65c:	add	r3, r6, r3
   1c660:	ror	lr, r4, #11
   1c664:	eor	lr, lr, r4, ror #6
   1c668:	eor	lr, lr, r4, ror #25
   1c66c:	add	r3, r3, lr
   1c670:	add	lr, r3, r2
   1c674:	ror	r2, r1, #13
   1c678:	eor	r2, r2, r1, ror #2
   1c67c:	eor	r2, r2, r1, ror #22
   1c680:	orr	r6, r0, r1
   1c684:	and	r6, r6, r7
   1c688:	and	r8, r0, r1
   1c68c:	orr	r6, r6, r8
   1c690:	add	r2, r2, r6
   1c694:	add	r2, r2, r3
   1c698:	eor	r6, r5, r4
   1c69c:	and	r6, r6, lr
   1c6a0:	eor	r6, r6, r5
   1c6a4:	ldr	r8, [sp, #92]	; 0x5c
   1c6a8:	ldr	r3, [pc, #3920]	; 1d600 <__assert_fail@plt+0xc314>
   1c6ac:	add	r3, r8, r3
   1c6b0:	add	ip, r3, ip
   1c6b4:	add	r3, r6, ip
   1c6b8:	ror	ip, lr, #11
   1c6bc:	eor	ip, ip, lr, ror #6
   1c6c0:	eor	r8, ip, lr, ror #25
   1c6c4:	add	ip, r3, r8
   1c6c8:	add	r7, ip, r7
   1c6cc:	ror	r3, r2, #13
   1c6d0:	eor	r3, r3, r2, ror #2
   1c6d4:	eor	r3, r3, r2, ror #22
   1c6d8:	orr	r6, r1, r2
   1c6dc:	and	r6, r6, r0
   1c6e0:	and	r8, r1, r2
   1c6e4:	orr	r6, r6, r8
   1c6e8:	add	r3, r3, r6
   1c6ec:	add	r3, r3, ip
   1c6f0:	eor	r6, r4, lr
   1c6f4:	and	r6, r6, r7
   1c6f8:	eor	r6, r6, r4
   1c6fc:	ldr	ip, [sp, #96]	; 0x60
   1c700:	add	ip, ip, #960495616	; 0x39400000
   1c704:	add	ip, ip, #1490944	; 0x16c000
   1c708:	add	ip, ip, #600	; 0x258
   1c70c:	add	ip, ip, #3
   1c710:	add	r5, ip, r5
   1c714:	add	r5, r6, r5
   1c718:	ror	ip, r7, #11
   1c71c:	eor	ip, ip, r7, ror #6
   1c720:	eor	r8, ip, r7, ror #25
   1c724:	add	ip, r5, r8
   1c728:	add	r0, r0, ip
   1c72c:	ror	r5, r3, #13
   1c730:	eor	r5, r5, r3, ror #2
   1c734:	eor	r5, r5, r3, ror #22
   1c738:	orr	r6, r2, r3
   1c73c:	and	r6, r6, r1
   1c740:	and	r8, r2, r3
   1c744:	orr	r6, r6, r8
   1c748:	add	r5, r5, r6
   1c74c:	add	r5, r5, ip
   1c750:	eor	r6, lr, r7
   1c754:	and	r6, r6, r0
   1c758:	eor	r6, r6, lr
   1c75c:	ldr	ip, [sp, #100]	; 0x64
   1c760:	add	ip, ip, #1493172224	; 0x59000000
   1c764:	add	ip, ip, #15794176	; 0xf10000
   1c768:	add	ip, ip, #4544	; 0x11c0
   1c76c:	add	ip, ip, #49	; 0x31
   1c770:	add	r4, ip, r4
   1c774:	add	r4, r6, r4
   1c778:	ror	ip, r0, #11
   1c77c:	eor	ip, ip, r0, ror #6
   1c780:	eor	r8, ip, r0, ror #25
   1c784:	add	ip, r4, r8
   1c788:	add	r1, r1, ip
   1c78c:	ror	r4, r5, #13
   1c790:	eor	r4, r4, r5, ror #2
   1c794:	eor	r4, r4, r5, ror #22
   1c798:	orr	r6, r3, r5
   1c79c:	and	r6, r6, r2
   1c7a0:	and	r8, r3, r5
   1c7a4:	orr	r6, r6, r8
   1c7a8:	add	r4, r4, r6
   1c7ac:	add	r4, r4, ip
   1c7b0:	eor	r6, r7, r0
   1c7b4:	and	r6, r6, r1
   1c7b8:	eor	r6, r6, r7
   1c7bc:	ldr	ip, [pc, #3648]	; 1d604 <__assert_fail@plt+0xc318>
   1c7c0:	ldr	r8, [sp, #104]	; 0x68
   1c7c4:	add	ip, r8, ip
   1c7c8:	add	lr, ip, lr
   1c7cc:	add	lr, r6, lr
   1c7d0:	ror	ip, r1, #11
   1c7d4:	eor	ip, ip, r1, ror #6
   1c7d8:	eor	ip, ip, r1, ror #25
   1c7dc:	add	ip, lr, ip
   1c7e0:	add	r2, r2, ip
   1c7e4:	ror	lr, r4, #13
   1c7e8:	eor	lr, lr, r4, ror #2
   1c7ec:	eor	lr, lr, r4, ror #22
   1c7f0:	orr	r6, r5, r4
   1c7f4:	and	r6, r6, r3
   1c7f8:	and	r8, r5, r4
   1c7fc:	orr	r6, r6, r8
   1c800:	add	lr, lr, r6
   1c804:	add	lr, lr, ip
   1c808:	eor	r6, r0, r1
   1c80c:	and	r6, r6, r2
   1c810:	eor	r6, r6, r0
   1c814:	ldr	ip, [sp, #108]	; 0x6c
   1c818:	add	ip, ip, #-1426063360	; 0xab000000
   1c81c:	add	ip, ip, #1851392	; 0x1c4000
   1c820:	add	ip, ip, #7872	; 0x1ec0
   1c824:	add	ip, ip, #21
   1c828:	add	ip, ip, r7
   1c82c:	add	ip, r6, ip
   1c830:	ror	r6, r2, #11
   1c834:	eor	r6, r6, r2, ror #6
   1c838:	eor	r8, r6, r2, ror #25
   1c83c:	add	r6, ip, r8
   1c840:	add	r3, r3, r6
   1c844:	ror	ip, lr, #13
   1c848:	eor	ip, ip, lr, ror #2
   1c84c:	eor	ip, ip, lr, ror #22
   1c850:	orr	r7, r4, lr
   1c854:	and	r7, r7, r5
   1c858:	and	r8, r4, lr
   1c85c:	orr	r7, r7, r8
   1c860:	add	ip, ip, r7
   1c864:	add	ip, ip, r6
   1c868:	eor	r7, r1, r2
   1c86c:	and	r7, r7, r3
   1c870:	eor	r7, r7, r1
   1c874:	ldr	r6, [sp, #112]	; 0x70
   1c878:	add	r6, r6, #-671088640	; 0xd8000000
   1c87c:	add	r6, r6, #499712	; 0x7a000
   1c880:	add	r6, r6, #2704	; 0xa90
   1c884:	add	r6, r6, #8
   1c888:	add	r0, r6, r0
   1c88c:	add	r0, r7, r0
   1c890:	ror	r6, r3, #11
   1c894:	eor	r6, r6, r3, ror #6
   1c898:	eor	r8, r6, r3, ror #25
   1c89c:	add	r6, r0, r8
   1c8a0:	add	r5, r5, r6
   1c8a4:	ror	r0, ip, #13
   1c8a8:	eor	r0, r0, ip, ror #2
   1c8ac:	eor	r0, r0, ip, ror #22
   1c8b0:	orr	r7, lr, ip
   1c8b4:	and	r7, r7, r4
   1c8b8:	and	r8, lr, ip
   1c8bc:	orr	r7, r7, r8
   1c8c0:	add	r0, r0, r7
   1c8c4:	add	r0, r0, r6
   1c8c8:	eor	r7, r2, r3
   1c8cc:	and	r7, r7, r5
   1c8d0:	eor	r7, r7, r2
   1c8d4:	ldr	r6, [sp, #116]	; 0x74
   1c8d8:	add	r6, r6, #310378496	; 0x12800000
   1c8dc:	add	r6, r6, #219136	; 0x35800
   1c8e0:	add	r6, r6, #768	; 0x300
   1c8e4:	add	r6, r6, #1
   1c8e8:	add	r1, r6, r1
   1c8ec:	add	r1, r7, r1
   1c8f0:	ror	r6, r5, #11
   1c8f4:	eor	r6, r6, r5, ror #6
   1c8f8:	eor	r8, r6, r5, ror #25
   1c8fc:	add	r6, r1, r8
   1c900:	add	r4, r4, r6
   1c904:	ror	r1, r0, #13
   1c908:	eor	r1, r1, r0, ror #2
   1c90c:	eor	r1, r1, r0, ror #22
   1c910:	orr	r7, ip, r0
   1c914:	and	r7, r7, lr
   1c918:	and	r8, ip, r0
   1c91c:	orr	r7, r7, r8
   1c920:	add	r1, r1, r7
   1c924:	add	r1, r1, r6
   1c928:	eor	r7, r3, r5
   1c92c:	and	r7, r7, r4
   1c930:	eor	r7, r7, r3
   1c934:	ldr	r6, [sp, #120]	; 0x78
   1c938:	add	r6, r6, #603979776	; 0x24000000
   1c93c:	add	r6, r6, #3244032	; 0x318000
   1c940:	add	r6, r6, #1456	; 0x5b0
   1c944:	add	r6, r6, #14
   1c948:	add	r2, r6, r2
   1c94c:	add	r2, r7, r2
   1c950:	ror	r6, r4, #11
   1c954:	eor	r6, r6, r4, ror #6
   1c958:	eor	r8, r6, r4, ror #25
   1c95c:	add	r6, r2, r8
   1c960:	add	lr, lr, r6
   1c964:	ror	r2, r1, #13
   1c968:	eor	r2, r2, r1, ror #2
   1c96c:	eor	r2, r2, r1, ror #22
   1c970:	orr	r7, r0, r1
   1c974:	and	r7, r7, ip
   1c978:	and	r8, r0, r1
   1c97c:	orr	r7, r7, r8
   1c980:	add	r2, r2, r7
   1c984:	add	r2, r2, r6
   1c988:	eor	r7, r5, r4
   1c98c:	and	r7, r7, lr
   1c990:	eor	r7, r7, r5
   1c994:	ldr	r6, [sp, #124]	; 0x7c
   1c998:	add	r6, r6, #1426063360	; 0x55000000
   1c99c:	add	r6, r6, #815104	; 0xc7000
   1c9a0:	add	r6, r6, #3520	; 0xdc0
   1c9a4:	add	r6, r6, #3
   1c9a8:	add	r3, r6, r3
   1c9ac:	add	r3, r7, r3
   1c9b0:	ror	r6, lr, #11
   1c9b4:	eor	r6, r6, lr, ror #6
   1c9b8:	eor	r8, r6, lr, ror #25
   1c9bc:	add	r6, r3, r8
   1c9c0:	add	ip, ip, r6
   1c9c4:	ror	r3, r2, #13
   1c9c8:	eor	r3, r3, r2, ror #2
   1c9cc:	eor	r3, r3, r2, ror #22
   1c9d0:	orr	r7, r1, r2
   1c9d4:	and	r7, r7, r0
   1c9d8:	and	r8, r1, r2
   1c9dc:	orr	r7, r7, r8
   1c9e0:	add	r3, r3, r7
   1c9e4:	add	r3, r3, r6
   1c9e8:	eor	r7, r4, lr
   1c9ec:	and	r7, r7, ip
   1c9f0:	eor	r7, r7, r4
   1c9f4:	ldr	r6, [sp, #128]	; 0x80
   1c9f8:	add	r6, r6, #1912602624	; 0x72000000
   1c9fc:	add	r6, r6, #12451840	; 0xbe0000
   1ca00:	add	r6, r6, #23808	; 0x5d00
   1ca04:	add	r6, r6, #116	; 0x74
   1ca08:	add	r5, r6, r5
   1ca0c:	add	r7, r7, r5
   1ca10:	ror	r5, ip, #11
   1ca14:	eor	r5, r5, ip, ror #6
   1ca18:	eor	r8, r5, ip, ror #25
   1ca1c:	add	r5, r7, r8
   1ca20:	add	r0, r0, r5
   1ca24:	ror	r7, r3, #13
   1ca28:	eor	r7, r7, r3, ror #2
   1ca2c:	eor	r7, r7, r3, ror #22
   1ca30:	orr	r6, r2, r3
   1ca34:	and	r6, r6, r1
   1ca38:	and	r8, r2, r3
   1ca3c:	orr	r6, r6, r8
   1ca40:	add	r7, r7, r6
   1ca44:	add	r7, r7, r5
   1ca48:	eor	r6, lr, ip
   1ca4c:	and	r6, r6, r0
   1ca50:	eor	r6, r6, lr
   1ca54:	ldr	r5, [sp, #132]	; 0x84
   1ca58:	add	r5, r5, #-2147483648	; 0x80000000
   1ca5c:	add	r5, r5, #14548992	; 0xde0000
   1ca60:	add	r5, r5, #45312	; 0xb100
   1ca64:	add	r5, r5, #254	; 0xfe
   1ca68:	add	r4, r5, r4
   1ca6c:	add	r9, r6, r4
   1ca70:	ror	r4, r0, #11
   1ca74:	eor	r4, r4, r0, ror #6
   1ca78:	eor	r8, r4, r0, ror #25
   1ca7c:	add	r4, r9, r8
   1ca80:	add	r1, r1, r4
   1ca84:	ror	r9, r7, #13
   1ca88:	eor	r9, r9, r7, ror #2
   1ca8c:	eor	r9, r9, r7, ror #22
   1ca90:	orr	r5, r3, r7
   1ca94:	and	r5, r5, r2
   1ca98:	and	r6, r3, r7
   1ca9c:	orr	r5, r5, r6
   1caa0:	add	r9, r9, r5
   1caa4:	add	r9, r9, r4
   1caa8:	eor	r5, ip, r0
   1caac:	and	r5, r5, r1
   1cab0:	eor	r5, r5, ip
   1cab4:	ldr	r4, [pc, #2892]	; 1d608 <__assert_fail@plt+0xc31c>
   1cab8:	ldr	r6, [sp, #136]	; 0x88
   1cabc:	add	r4, r6, r4
   1cac0:	add	lr, r4, lr
   1cac4:	add	r8, r5, lr
   1cac8:	ror	lr, r1, #11
   1cacc:	eor	lr, lr, r1, ror #6
   1cad0:	eor	lr, lr, r1, ror #25
   1cad4:	add	lr, r8, lr
   1cad8:	add	r2, r2, lr
   1cadc:	ror	r8, r9, #13
   1cae0:	eor	r8, r8, r9, ror #2
   1cae4:	eor	r8, r8, r9, ror #22
   1cae8:	orr	r4, r7, r9
   1caec:	and	r4, r4, r3
   1caf0:	and	r5, r7, r9
   1caf4:	orr	r4, r4, r5
   1caf8:	add	r8, r8, r4
   1cafc:	add	r8, r8, lr
   1cb00:	eor	r4, r0, r1
   1cb04:	and	r4, r4, r2
   1cb08:	eor	r4, r4, r0
   1cb0c:	ldr	lr, [pc, #2808]	; 1d60c <__assert_fail@plt+0xc320>
   1cb10:	ldr	r5, [sp, #140]	; 0x8c
   1cb14:	add	lr, r5, lr
   1cb18:	add	ip, lr, ip
   1cb1c:	add	lr, r4, ip
   1cb20:	ror	ip, r2, #11
   1cb24:	eor	ip, ip, r2, ror #6
   1cb28:	eor	ip, ip, r2, ror #25
   1cb2c:	add	ip, lr, ip
   1cb30:	add	r3, r3, ip
   1cb34:	ror	lr, r8, #13
   1cb38:	eor	lr, lr, r8, ror #2
   1cb3c:	eor	lr, lr, r8, ror #22
   1cb40:	orr	r4, r9, r8
   1cb44:	and	r4, r4, r7
   1cb48:	and	r5, r9, r8
   1cb4c:	orr	r4, r4, r5
   1cb50:	add	lr, lr, r4
   1cb54:	add	lr, lr, ip
   1cb58:	mov	ip, r6
   1cb5c:	ror	r6, r6, #19
   1cb60:	eor	r6, r6, ip, ror #17
   1cb64:	eor	r6, r6, ip, lsr #10
   1cb68:	ldr	ip, [sp, #80]	; 0x50
   1cb6c:	ldr	r4, [sp, #116]	; 0x74
   1cb70:	add	ip, ip, r4
   1cb74:	add	r6, r6, ip
   1cb78:	ror	ip, sl, #18
   1cb7c:	eor	ip, ip, sl, ror #7
   1cb80:	eor	ip, ip, sl, lsr #3
   1cb84:	add	r5, r6, ip
   1cb88:	mov	r6, r5
   1cb8c:	eor	r4, r1, r2
   1cb90:	and	r4, r4, r3
   1cb94:	eor	r4, r4, r1
   1cb98:	ldr	ip, [pc, #2672]	; 1d610 <__assert_fail@plt+0xc324>
   1cb9c:	add	ip, r5, ip
   1cba0:	add	r0, ip, r0
   1cba4:	add	ip, r4, r0
   1cba8:	ror	r0, r3, #11
   1cbac:	eor	r0, r0, r3, ror #6
   1cbb0:	eor	r0, r0, r3, ror #25
   1cbb4:	add	r0, ip, r0
   1cbb8:	add	r7, r7, r0
   1cbbc:	ror	ip, lr, #13
   1cbc0:	eor	ip, ip, lr, ror #2
   1cbc4:	eor	ip, ip, lr, ror #22
   1cbc8:	orr	r4, r8, lr
   1cbcc:	and	r4, r4, r9
   1cbd0:	and	r5, r8, lr
   1cbd4:	orr	r4, r4, r5
   1cbd8:	add	ip, ip, r4
   1cbdc:	add	ip, ip, r0
   1cbe0:	ldr	r0, [sp, #140]	; 0x8c
   1cbe4:	ror	r5, r0, #19
   1cbe8:	eor	r5, r5, r0, ror #17
   1cbec:	eor	r5, r5, r0, lsr #10
   1cbf0:	ldr	r0, [sp, #120]	; 0x78
   1cbf4:	add	r0, sl, r0
   1cbf8:	add	r5, r5, r0
   1cbfc:	ror	r0, fp, #18
   1cc00:	eor	r0, r0, fp, ror #7
   1cc04:	eor	r0, r0, fp, lsr #3
   1cc08:	add	r5, r5, r0
   1cc0c:	eor	r4, r2, r3
   1cc10:	and	r4, r4, r7
   1cc14:	eor	r4, r4, r2
   1cc18:	ldr	r0, [pc, #2548]	; 1d614 <__assert_fail@plt+0xc328>
   1cc1c:	add	r0, r5, r0
   1cc20:	add	r1, r0, r1
   1cc24:	add	r0, r4, r1
   1cc28:	ror	r1, r7, #11
   1cc2c:	eor	r1, r1, r7, ror #6
   1cc30:	eor	r1, r1, r7, ror #25
   1cc34:	add	r1, r0, r1
   1cc38:	add	r9, r9, r1
   1cc3c:	ror	r0, ip, #13
   1cc40:	eor	r0, r0, ip, ror #2
   1cc44:	eor	r0, r0, ip, ror #22
   1cc48:	orr	r4, lr, ip
   1cc4c:	and	r4, r4, r8
   1cc50:	and	sl, lr, ip
   1cc54:	orr	r4, r4, sl
   1cc58:	add	r0, r0, r4
   1cc5c:	add	r0, r0, r1
   1cc60:	ror	r4, r6, #19
   1cc64:	eor	r4, r4, r6, ror #17
   1cc68:	str	r6, [sp, #52]	; 0x34
   1cc6c:	eor	sl, r4, r6, lsr #10
   1cc70:	ldr	r1, [sp, #92]	; 0x5c
   1cc74:	ror	r1, r1, #18
   1cc78:	ldr	r4, [sp, #92]	; 0x5c
   1cc7c:	eor	r1, r1, r4, ror #7
   1cc80:	eor	r1, r1, r4, lsr #3
   1cc84:	ldr	r4, [sp, #124]	; 0x7c
   1cc88:	add	r4, fp, r4
   1cc8c:	add	r4, r1, r4
   1cc90:	add	r4, r4, sl
   1cc94:	eor	sl, r3, r7
   1cc98:	and	sl, sl, r9
   1cc9c:	eor	sl, sl, r3
   1cca0:	ldr	r1, [pc, #2416]	; 1d618 <__assert_fail@plt+0xc32c>
   1cca4:	add	r1, r4, r1
   1cca8:	add	r2, r1, r2
   1ccac:	add	r1, sl, r2
   1ccb0:	ror	r2, r9, #11
   1ccb4:	eor	r2, r2, r9, ror #6
   1ccb8:	eor	r2, r2, r9, ror #25
   1ccbc:	add	r2, r1, r2
   1ccc0:	add	r8, r8, r2
   1ccc4:	ror	r1, r0, #13
   1ccc8:	eor	r1, r1, r0, ror #2
   1cccc:	eor	r1, r1, r0, ror #22
   1ccd0:	orr	sl, ip, r0
   1ccd4:	and	sl, sl, lr
   1ccd8:	and	fp, ip, r0
   1ccdc:	orr	sl, sl, fp
   1cce0:	add	r1, r1, sl
   1cce4:	add	r1, r1, r2
   1cce8:	ror	fp, r5, #19
   1ccec:	eor	fp, fp, r5, ror #17
   1ccf0:	eor	fp, fp, r5, lsr #10
   1ccf4:	ldr	r2, [sp, #96]	; 0x60
   1ccf8:	ror	r2, r2, #18
   1ccfc:	ldr	sl, [sp, #96]	; 0x60
   1cd00:	eor	r2, r2, sl, ror #7
   1cd04:	eor	r2, r2, sl, lsr #3
   1cd08:	ldr	sl, [sp, #92]	; 0x5c
   1cd0c:	ldr	r6, [sp, #128]	; 0x80
   1cd10:	add	sl, sl, r6
   1cd14:	add	r2, r2, sl
   1cd18:	add	r2, r2, fp
   1cd1c:	mov	fp, r2
   1cd20:	eor	sl, r7, r9
   1cd24:	and	sl, sl, r8
   1cd28:	eor	sl, sl, r7
   1cd2c:	ldr	r2, [pc, #2280]	; 1d61c <__assert_fail@plt+0xc330>
   1cd30:	str	fp, [sp, #4]
   1cd34:	add	r2, fp, r2
   1cd38:	add	r3, r2, r3
   1cd3c:	add	r3, sl, r3
   1cd40:	ror	r2, r8, #11
   1cd44:	eor	r2, r2, r8, ror #6
   1cd48:	eor	r2, r2, r8, ror #25
   1cd4c:	add	r2, r3, r2
   1cd50:	add	lr, lr, r2
   1cd54:	ror	r3, r1, #13
   1cd58:	eor	r3, r3, r1, ror #2
   1cd5c:	eor	r3, r3, r1, ror #22
   1cd60:	orr	sl, r0, r1
   1cd64:	and	sl, sl, ip
   1cd68:	and	fp, r0, r1
   1cd6c:	orr	sl, sl, fp
   1cd70:	add	r3, r3, sl
   1cd74:	add	r3, r3, r2
   1cd78:	ror	fp, r4, #19
   1cd7c:	eor	fp, fp, r4, ror #17
   1cd80:	eor	fp, fp, r4, lsr #10
   1cd84:	ldr	r2, [sp, #100]	; 0x64
   1cd88:	ror	r2, r2, #18
   1cd8c:	ldr	r6, [sp, #100]	; 0x64
   1cd90:	eor	r2, r2, r6, ror #7
   1cd94:	eor	r2, r2, r6, lsr #3
   1cd98:	ldr	r6, [sp, #96]	; 0x60
   1cd9c:	ldr	sl, [sp, #132]	; 0x84
   1cda0:	add	sl, r6, sl
   1cda4:	add	r2, r2, sl
   1cda8:	add	r2, r2, fp
   1cdac:	mov	fp, r2
   1cdb0:	eor	sl, r9, r8
   1cdb4:	and	sl, sl, lr
   1cdb8:	eor	sl, sl, r9
   1cdbc:	ldr	r2, [pc, #2140]	; 1d620 <__assert_fail@plt+0xc334>
   1cdc0:	str	fp, [sp, #8]
   1cdc4:	add	r2, fp, r2
   1cdc8:	add	r2, r2, r7
   1cdcc:	add	r2, sl, r2
   1cdd0:	ror	r7, lr, #11
   1cdd4:	eor	r7, r7, lr, ror #6
   1cdd8:	eor	r7, r7, lr, ror #25
   1cddc:	add	r7, r2, r7
   1cde0:	add	ip, ip, r7
   1cde4:	ror	r2, r3, #13
   1cde8:	eor	r2, r2, r3, ror #2
   1cdec:	eor	r2, r2, r3, ror #22
   1cdf0:	orr	sl, r1, r3
   1cdf4:	and	sl, sl, r0
   1cdf8:	and	fp, r1, r3
   1cdfc:	orr	sl, sl, fp
   1ce00:	add	r2, r2, sl
   1ce04:	add	r2, r2, r7
   1ce08:	ldr	r7, [sp, #4]
   1ce0c:	ror	fp, r7, #19
   1ce10:	eor	fp, fp, r7, ror #17
   1ce14:	eor	fp, fp, r7, lsr #10
   1ce18:	ldr	r6, [sp, #104]	; 0x68
   1ce1c:	ror	r7, r6, #18
   1ce20:	eor	r7, r7, r6, ror #7
   1ce24:	eor	r7, r7, r6, lsr #3
   1ce28:	ldr	r6, [sp, #100]	; 0x64
   1ce2c:	ldr	sl, [sp, #136]	; 0x88
   1ce30:	add	sl, r6, sl
   1ce34:	add	r7, r7, sl
   1ce38:	add	sl, r7, fp
   1ce3c:	mov	fp, sl
   1ce40:	eor	sl, r8, lr
   1ce44:	and	sl, sl, ip
   1ce48:	eor	sl, sl, r8
   1ce4c:	ldr	r7, [pc, #2000]	; 1d624 <__assert_fail@plt+0xc338>
   1ce50:	str	fp, [sp, #12]
   1ce54:	add	r7, fp, r7
   1ce58:	add	r7, r7, r9
   1ce5c:	add	sl, sl, r7
   1ce60:	ror	r7, ip, #11
   1ce64:	eor	r7, r7, ip, ror #6
   1ce68:	eor	r7, r7, ip, ror #25
   1ce6c:	add	r7, sl, r7
   1ce70:	add	r0, r0, r7
   1ce74:	ror	sl, r2, #13
   1ce78:	eor	sl, sl, r2, ror #2
   1ce7c:	eor	sl, sl, r2, ror #22
   1ce80:	orr	r9, r3, r2
   1ce84:	and	r9, r9, r1
   1ce88:	and	fp, r3, r2
   1ce8c:	orr	r9, r9, fp
   1ce90:	add	sl, sl, r9
   1ce94:	add	sl, sl, r7
   1ce98:	ldr	r9, [sp, #8]
   1ce9c:	ror	fp, r9, #19
   1cea0:	eor	fp, fp, r9, ror #17
   1cea4:	eor	fp, fp, r9, lsr #10
   1cea8:	ldr	r6, [sp, #108]	; 0x6c
   1ceac:	ror	r7, r6, #18
   1ceb0:	eor	r7, r7, r6, ror #7
   1ceb4:	eor	r7, r7, r6, lsr #3
   1ceb8:	ldr	r6, [sp, #104]	; 0x68
   1cebc:	ldr	r9, [sp, #140]	; 0x8c
   1cec0:	add	r9, r6, r9
   1cec4:	add	r7, r7, r9
   1cec8:	add	r9, r7, fp
   1cecc:	mov	fp, r9
   1ced0:	eor	r9, lr, ip
   1ced4:	and	r9, r9, r0
   1ced8:	eor	r9, r9, lr
   1cedc:	ldr	r7, [pc, #1860]	; 1d628 <__assert_fail@plt+0xc33c>
   1cee0:	str	fp, [sp, #16]
   1cee4:	add	r7, fp, r7
   1cee8:	add	r7, r7, r8
   1ceec:	add	r9, r9, r7
   1cef0:	ror	r7, r0, #11
   1cef4:	eor	r7, r7, r0, ror #6
   1cef8:	eor	r7, r7, r0, ror #25
   1cefc:	add	r7, r9, r7
   1cf00:	add	r1, r1, r7
   1cf04:	ror	r9, sl, #13
   1cf08:	eor	r9, r9, sl, ror #2
   1cf0c:	eor	r9, r9, sl, ror #22
   1cf10:	orr	r8, r2, sl
   1cf14:	and	r8, r8, r3
   1cf18:	and	fp, r2, sl
   1cf1c:	orr	r8, r8, fp
   1cf20:	add	r9, r9, r8
   1cf24:	add	r9, r9, r7
   1cf28:	ldr	fp, [sp, #12]
   1cf2c:	ror	r8, fp, #19
   1cf30:	eor	r8, r8, fp, ror #17
   1cf34:	eor	r8, r8, fp, lsr #10
   1cf38:	ldr	r6, [sp, #112]	; 0x70
   1cf3c:	ror	r7, r6, #18
   1cf40:	eor	r7, r7, r6, ror #7
   1cf44:	eor	r7, r7, r6, lsr #3
   1cf48:	ldr	r6, [sp, #108]	; 0x6c
   1cf4c:	add	r7, r7, r6
   1cf50:	ldr	r6, [sp, #52]	; 0x34
   1cf54:	add	r7, r7, r6
   1cf58:	add	r8, r8, r7
   1cf5c:	mov	fp, r8
   1cf60:	eor	r8, ip, r0
   1cf64:	and	r8, r8, r1
   1cf68:	eor	r8, r8, ip
   1cf6c:	ldr	r7, [pc, #1720]	; 1d62c <__assert_fail@plt+0xc340>
   1cf70:	str	fp, [sp, #20]
   1cf74:	add	r7, fp, r7
   1cf78:	add	lr, r7, lr
   1cf7c:	add	r8, r8, lr
   1cf80:	ror	lr, r1, #11
   1cf84:	eor	lr, lr, r1, ror #6
   1cf88:	eor	lr, lr, r1, ror #25
   1cf8c:	add	lr, r8, lr
   1cf90:	add	r3, r3, lr
   1cf94:	ror	r8, r9, #13
   1cf98:	eor	r8, r8, r9, ror #2
   1cf9c:	eor	r8, r8, r9, ror #22
   1cfa0:	orr	r7, sl, r9
   1cfa4:	and	r7, r7, r2
   1cfa8:	and	fp, sl, r9
   1cfac:	orr	r7, r7, fp
   1cfb0:	add	r8, r8, r7
   1cfb4:	add	r8, r8, lr
   1cfb8:	ldr	lr, [sp, #16]
   1cfbc:	ror	r7, lr, #19
   1cfc0:	eor	r7, r7, lr, ror #17
   1cfc4:	eor	r7, r7, lr, lsr #10
   1cfc8:	ldr	r6, [sp, #116]	; 0x74
   1cfcc:	ror	lr, r6, #18
   1cfd0:	eor	lr, lr, r6, ror #7
   1cfd4:	eor	lr, lr, r6, lsr #3
   1cfd8:	ldr	r6, [sp, #112]	; 0x70
   1cfdc:	add	lr, lr, r6
   1cfe0:	add	lr, lr, r5
   1cfe4:	add	lr, r7, lr
   1cfe8:	mov	fp, lr
   1cfec:	eor	r7, r0, r1
   1cff0:	and	r7, r7, r3
   1cff4:	eor	r7, r7, r0
   1cff8:	ldr	lr, [pc, #1584]	; 1d630 <__assert_fail@plt+0xc344>
   1cffc:	str	fp, [sp, #24]
   1d000:	add	lr, fp, lr
   1d004:	add	ip, lr, ip
   1d008:	add	r7, r7, ip
   1d00c:	ror	ip, r3, #11
   1d010:	eor	ip, ip, r3, ror #6
   1d014:	eor	ip, ip, r3, ror #25
   1d018:	add	ip, r7, ip
   1d01c:	add	r2, r2, ip
   1d020:	ror	r7, r8, #13
   1d024:	eor	r7, r7, r8, ror #2
   1d028:	eor	r7, r7, r8, ror #22
   1d02c:	orr	lr, r9, r8
   1d030:	and	lr, lr, sl
   1d034:	and	fp, r9, r8
   1d038:	orr	lr, lr, fp
   1d03c:	add	r7, r7, lr
   1d040:	add	r7, r7, ip
   1d044:	ldr	ip, [sp, #20]
   1d048:	ror	lr, ip, #19
   1d04c:	eor	lr, lr, ip, ror #17
   1d050:	eor	lr, lr, ip, lsr #10
   1d054:	ldr	r6, [sp, #120]	; 0x78
   1d058:	ror	ip, r6, #18
   1d05c:	eor	ip, ip, r6, ror #7
   1d060:	eor	ip, ip, r6, lsr #3
   1d064:	ldr	r6, [sp, #116]	; 0x74
   1d068:	add	ip, ip, r6
   1d06c:	add	ip, ip, r4
   1d070:	add	ip, lr, ip
   1d074:	mov	fp, ip
   1d078:	eor	lr, r1, r3
   1d07c:	and	lr, lr, r2
   1d080:	eor	lr, lr, r1
   1d084:	ldr	ip, [pc, #1448]	; 1d634 <__assert_fail@plt+0xc348>
   1d088:	str	fp, [sp, #28]
   1d08c:	add	ip, fp, ip
   1d090:	add	r0, ip, r0
   1d094:	add	lr, lr, r0
   1d098:	ror	r0, r2, #11
   1d09c:	eor	r0, r0, r2, ror #6
   1d0a0:	eor	r0, r0, r2, ror #25
   1d0a4:	add	r0, lr, r0
   1d0a8:	add	sl, sl, r0
   1d0ac:	ror	lr, r7, #13
   1d0b0:	eor	lr, lr, r7, ror #2
   1d0b4:	eor	lr, lr, r7, ror #22
   1d0b8:	orr	ip, r8, r7
   1d0bc:	and	ip, ip, r9
   1d0c0:	and	fp, r8, r7
   1d0c4:	orr	ip, ip, fp
   1d0c8:	add	lr, lr, ip
   1d0cc:	add	lr, lr, r0
   1d0d0:	ldr	r0, [sp, #24]
   1d0d4:	ror	ip, r0, #19
   1d0d8:	eor	ip, ip, r0, ror #17
   1d0dc:	eor	ip, ip, r0, lsr #10
   1d0e0:	ldr	r6, [sp, #124]	; 0x7c
   1d0e4:	ror	r0, r6, #18
   1d0e8:	eor	r0, r0, r6, ror #7
   1d0ec:	eor	r0, r0, r6, lsr #3
   1d0f0:	ldr	r6, [sp, #120]	; 0x78
   1d0f4:	add	r0, r0, r6
   1d0f8:	ldr	fp, [sp, #4]
   1d0fc:	add	r0, r0, fp
   1d100:	add	r0, ip, r0
   1d104:	mov	fp, r0
   1d108:	eor	ip, r3, r2
   1d10c:	and	ip, ip, sl
   1d110:	eor	ip, ip, r3
   1d114:	ldr	r0, [pc, #1308]	; 1d638 <__assert_fail@plt+0xc34c>
   1d118:	str	fp, [sp, #32]
   1d11c:	add	r0, fp, r0
   1d120:	add	r1, r0, r1
   1d124:	add	ip, ip, r1
   1d128:	ror	r1, sl, #11
   1d12c:	eor	r1, r1, sl, ror #6
   1d130:	eor	r1, r1, sl, ror #25
   1d134:	add	r1, ip, r1
   1d138:	add	r9, r9, r1
   1d13c:	ror	ip, lr, #13
   1d140:	eor	ip, ip, lr, ror #2
   1d144:	eor	ip, ip, lr, ror #22
   1d148:	orr	r0, r7, lr
   1d14c:	and	r0, r0, r8
   1d150:	and	fp, r7, lr
   1d154:	orr	r0, r0, fp
   1d158:	add	ip, ip, r0
   1d15c:	add	ip, ip, r1
   1d160:	ldr	r1, [sp, #28]
   1d164:	ror	r0, r1, #19
   1d168:	eor	r0, r0, r1, ror #17
   1d16c:	eor	r0, r0, r1, lsr #10
   1d170:	ldr	r6, [sp, #128]	; 0x80
   1d174:	ror	r1, r6, #18
   1d178:	eor	r1, r1, r6, ror #7
   1d17c:	eor	r1, r1, r6, lsr #3
   1d180:	ldr	r6, [sp, #124]	; 0x7c
   1d184:	add	r1, r1, r6
   1d188:	ldr	fp, [sp, #8]
   1d18c:	add	r1, r1, fp
   1d190:	add	r1, r0, r1
   1d194:	mov	fp, r1
   1d198:	eor	r0, r2, sl
   1d19c:	and	r0, r0, r9
   1d1a0:	eor	r0, r0, r2
   1d1a4:	ldr	r1, [pc, #1168]	; 1d63c <__assert_fail@plt+0xc350>
   1d1a8:	str	fp, [sp, #36]	; 0x24
   1d1ac:	add	r1, fp, r1
   1d1b0:	add	r3, r1, r3
   1d1b4:	add	r3, r0, r3
   1d1b8:	ror	r1, r9, #11
   1d1bc:	eor	r1, r1, r9, ror #6
   1d1c0:	eor	r1, r1, r9, ror #25
   1d1c4:	add	r1, r3, r1
   1d1c8:	add	r8, r8, r1
   1d1cc:	ror	r3, ip, #13
   1d1d0:	eor	r3, r3, ip, ror #2
   1d1d4:	eor	r3, r3, ip, ror #22
   1d1d8:	orr	r0, lr, ip
   1d1dc:	and	r0, r0, r7
   1d1e0:	and	fp, lr, ip
   1d1e4:	orr	r0, r0, fp
   1d1e8:	add	r3, r3, r0
   1d1ec:	add	r3, r3, r1
   1d1f0:	ldr	r1, [sp, #32]
   1d1f4:	ror	r0, r1, #19
   1d1f8:	eor	r0, r0, r1, ror #17
   1d1fc:	eor	r0, r0, r1, lsr #10
   1d200:	ldr	r6, [sp, #132]	; 0x84
   1d204:	ror	r1, r6, #18
   1d208:	eor	r1, r1, r6, ror #7
   1d20c:	eor	r1, r1, r6, lsr #3
   1d210:	ldr	r6, [sp, #128]	; 0x80
   1d214:	add	r1, r1, r6
   1d218:	ldr	fp, [sp, #12]
   1d21c:	add	r1, r1, fp
   1d220:	add	r0, r0, r1
   1d224:	mov	fp, r0
   1d228:	eor	r0, sl, r9
   1d22c:	and	r0, r0, r8
   1d230:	eor	r0, r0, sl
   1d234:	ldr	r1, [pc, #1028]	; 1d640 <__assert_fail@plt+0xc354>
   1d238:	str	fp, [sp, #40]	; 0x28
   1d23c:	add	r1, fp, r1
   1d240:	add	r2, r1, r2
   1d244:	add	r0, r0, r2
   1d248:	ror	r2, r8, #11
   1d24c:	eor	r2, r2, r8, ror #6
   1d250:	eor	r2, r2, r8, ror #25
   1d254:	add	r2, r0, r2
   1d258:	add	r7, r7, r2
   1d25c:	ror	r0, r3, #13
   1d260:	eor	r0, r0, r3, ror #2
   1d264:	eor	r0, r0, r3, ror #22
   1d268:	orr	r1, ip, r3
   1d26c:	and	r1, r1, lr
   1d270:	and	fp, ip, r3
   1d274:	orr	r1, r1, fp
   1d278:	add	r0, r0, r1
   1d27c:	add	r0, r0, r2
   1d280:	ldr	r2, [sp, #36]	; 0x24
   1d284:	ror	r1, r2, #19
   1d288:	eor	r1, r1, r2, ror #17
   1d28c:	eor	r1, r1, r2, lsr #10
   1d290:	ldr	r6, [sp, #136]	; 0x88
   1d294:	ror	r2, r6, #18
   1d298:	eor	r2, r2, r6, ror #7
   1d29c:	eor	r2, r2, r6, lsr #3
   1d2a0:	ldr	r6, [sp, #132]	; 0x84
   1d2a4:	add	r2, r2, r6
   1d2a8:	ldr	fp, [sp, #16]
   1d2ac:	add	r2, r2, fp
   1d2b0:	add	r2, r1, r2
   1d2b4:	mov	fp, r2
   1d2b8:	eor	r1, r9, r8
   1d2bc:	and	r1, r1, r7
   1d2c0:	eor	r1, r1, r9
   1d2c4:	ldr	r2, [pc, #888]	; 1d644 <__assert_fail@plt+0xc358>
   1d2c8:	str	fp, [sp, #44]	; 0x2c
   1d2cc:	add	r2, fp, r2
   1d2d0:	add	r2, r2, sl
   1d2d4:	add	r1, r1, r2
   1d2d8:	ror	r2, r7, #11
   1d2dc:	eor	r2, r2, r7, ror #6
   1d2e0:	eor	r2, r2, r7, ror #25
   1d2e4:	add	r2, r1, r2
   1d2e8:	add	lr, lr, r2
   1d2ec:	ror	r1, r0, #13
   1d2f0:	eor	r1, r1, r0, ror #2
   1d2f4:	eor	r1, r1, r0, ror #22
   1d2f8:	orr	sl, r3, r0
   1d2fc:	and	sl, sl, ip
   1d300:	and	fp, r3, r0
   1d304:	orr	sl, sl, fp
   1d308:	add	r1, r1, sl
   1d30c:	add	r1, r1, r2
   1d310:	ldr	r2, [sp, #40]	; 0x28
   1d314:	ror	sl, r2, #19
   1d318:	eor	sl, sl, r2, ror #17
   1d31c:	eor	sl, sl, r2, lsr #10
   1d320:	ldr	r6, [sp, #140]	; 0x8c
   1d324:	ror	r2, r6, #18
   1d328:	eor	r2, r2, r6, ror #7
   1d32c:	eor	r2, r2, r6, lsr #3
   1d330:	ldr	r6, [sp, #136]	; 0x88
   1d334:	add	r2, r2, r6
   1d338:	ldr	fp, [sp, #20]
   1d33c:	add	r2, r2, fp
   1d340:	add	sl, sl, r2
   1d344:	mov	fp, sl
   1d348:	eor	sl, r8, r7
   1d34c:	and	sl, sl, lr
   1d350:	eor	sl, sl, r8
   1d354:	ldr	r2, [pc, #748]	; 1d648 <__assert_fail@plt+0xc35c>
   1d358:	str	fp, [sp, #48]	; 0x30
   1d35c:	add	r2, fp, r2
   1d360:	add	r2, r2, r9
   1d364:	add	sl, sl, r2
   1d368:	ror	r2, lr, #11
   1d36c:	eor	r2, r2, lr, ror #6
   1d370:	eor	r2, r2, lr, ror #25
   1d374:	add	sl, sl, r2
   1d378:	add	fp, ip, sl
   1d37c:	ror	r2, r1, #13
   1d380:	eor	r2, r2, r1, ror #2
   1d384:	eor	r2, r2, r1, ror #22
   1d388:	orr	ip, r0, r1
   1d38c:	and	ip, ip, r3
   1d390:	and	r9, r0, r1
   1d394:	orr	ip, ip, r9
   1d398:	add	r2, r2, ip
   1d39c:	add	r2, r2, sl
   1d3a0:	ldr	ip, [sp, #44]	; 0x2c
   1d3a4:	ror	sl, ip, #19
   1d3a8:	eor	sl, sl, ip, ror #17
   1d3ac:	eor	sl, sl, ip, lsr #10
   1d3b0:	ldr	r6, [sp, #52]	; 0x34
   1d3b4:	ror	ip, r6, #18
   1d3b8:	eor	ip, ip, r6, ror #7
   1d3bc:	eor	ip, ip, r6, lsr #3
   1d3c0:	ldr	r6, [sp, #140]	; 0x8c
   1d3c4:	add	ip, ip, r6
   1d3c8:	ldr	r9, [sp, #24]
   1d3cc:	add	ip, ip, r9
   1d3d0:	add	r9, sl, ip
   1d3d4:	eor	sl, r7, lr
   1d3d8:	and	sl, sl, fp
   1d3dc:	eor	sl, sl, r7
   1d3e0:	ldr	ip, [pc, #612]	; 1d64c <__assert_fail@plt+0xc360>
   1d3e4:	add	ip, r9, ip
   1d3e8:	add	r8, ip, r8
   1d3ec:	add	r8, sl, r8
   1d3f0:	ror	ip, fp, #11
   1d3f4:	eor	ip, ip, fp, ror #6
   1d3f8:	eor	ip, ip, fp, ror #25
   1d3fc:	add	r8, r8, ip
   1d400:	add	ip, r3, r8
   1d404:	ror	r3, r2, #13
   1d408:	eor	r3, r3, r2, ror #2
   1d40c:	eor	r3, r3, r2, ror #22
   1d410:	orr	sl, r1, r2
   1d414:	and	sl, sl, r0
   1d418:	and	r6, r1, r2
   1d41c:	orr	sl, sl, r6
   1d420:	add	sl, r3, sl
   1d424:	add	r8, sl, r8
   1d428:	ldr	r3, [sp, #48]	; 0x30
   1d42c:	ror	sl, r3, #19
   1d430:	eor	sl, sl, r3, ror #17
   1d434:	eor	sl, sl, r3, lsr #10
   1d438:	ror	r3, r5, #18
   1d43c:	eor	r3, r3, r5, ror #7
   1d440:	eor	r3, r3, r5, lsr #3
   1d444:	ldr	r6, [sp, #52]	; 0x34
   1d448:	add	r3, r3, r6
   1d44c:	ldr	r6, [sp, #28]
   1d450:	add	r3, r3, r6
   1d454:	add	sl, sl, r3
   1d458:	eor	r6, lr, fp
   1d45c:	and	r6, r6, ip
   1d460:	eor	r6, r6, lr
   1d464:	ldr	r3, [pc, #484]	; 1d650 <__assert_fail@plt+0xc364>
   1d468:	str	sl, [sp, #56]	; 0x38
   1d46c:	add	r3, sl, r3
   1d470:	add	r3, r3, r7
   1d474:	add	r3, r6, r3
   1d478:	ror	r6, ip, #11
   1d47c:	eor	r6, r6, ip, ror #6
   1d480:	eor	r6, r6, ip, ror #25
   1d484:	add	r3, r3, r6
   1d488:	add	r0, r0, r3
   1d48c:	ror	r6, r8, #13
   1d490:	eor	r6, r6, r8, ror #2
   1d494:	eor	r6, r6, r8, ror #22
   1d498:	orr	r7, r2, r8
   1d49c:	and	r7, r7, r1
   1d4a0:	and	sl, r2, r8
   1d4a4:	orr	r7, r7, sl
   1d4a8:	add	r6, r6, r7
   1d4ac:	add	r6, r6, r3
   1d4b0:	ror	r7, r9, #19
   1d4b4:	eor	r7, r7, r9, ror #17
   1d4b8:	eor	r7, r7, r9, lsr #10
   1d4bc:	ror	r3, r4, #18
   1d4c0:	eor	r3, r3, r4, ror #7
   1d4c4:	eor	r3, r3, r4, lsr #3
   1d4c8:	add	r3, r3, r5
   1d4cc:	ldr	sl, [sp, #32]
   1d4d0:	add	r3, r3, sl
   1d4d4:	add	sl, r7, r3
   1d4d8:	eor	r5, fp, ip
   1d4dc:	and	r5, r5, r0
   1d4e0:	eor	r5, r5, fp
   1d4e4:	ldr	r3, [pc, #360]	; 1d654 <__assert_fail@plt+0xc368>
   1d4e8:	add	r3, sl, r3
   1d4ec:	add	r3, r3, lr
   1d4f0:	add	r3, r5, r3
   1d4f4:	ror	lr, r0, #11
   1d4f8:	eor	lr, lr, r0, ror #6
   1d4fc:	eor	lr, lr, r0, ror #25
   1d500:	add	r3, r3, lr
   1d504:	add	r1, r1, r3
   1d508:	ror	lr, r6, #13
   1d50c:	eor	lr, lr, r6, ror #2
   1d510:	eor	lr, lr, r6, ror #22
   1d514:	orr	r5, r8, r6
   1d518:	and	r5, r5, r2
   1d51c:	and	r7, r8, r6
   1d520:	orr	r5, r5, r7
   1d524:	add	lr, lr, r5
   1d528:	add	lr, lr, r3
   1d52c:	ldr	r3, [sp, #56]	; 0x38
   1d530:	ror	r5, r3, #19
   1d534:	eor	r5, r5, r3, ror #17
   1d538:	eor	r5, r5, r3, lsr #10
   1d53c:	ldr	r7, [sp, #4]
   1d540:	ror	r3, r7, #18
   1d544:	eor	r3, r3, r7, ror #7
   1d548:	eor	r3, r3, r7, lsr #3
   1d54c:	add	r3, r3, r4
   1d550:	ldr	r4, [sp, #36]	; 0x24
   1d554:	add	r3, r3, r4
   1d558:	add	r4, r5, r3
   1d55c:	mov	r5, r4
   1d560:	eor	r4, ip, r0
   1d564:	and	r4, r4, r1
   1d568:	eor	r4, r4, ip
   1d56c:	ldr	r3, [pc, #228]	; 1d658 <__assert_fail@plt+0xc36c>
   1d570:	str	r5, [sp, #52]	; 0x34
   1d574:	add	r3, r5, r3
   1d578:	add	r3, r3, fp
   1d57c:	add	r3, r4, r3
   1d580:	ror	r4, r1, #11
   1d584:	eor	r4, r4, r1, ror #6
   1d588:	eor	r4, r4, r1, ror #25
   1d58c:	add	r3, r3, r4
   1d590:	add	r2, r2, r3
   1d594:	ror	r4, lr, #13
   1d598:	eor	r4, r4, lr, ror #2
   1d59c:	eor	r4, r4, lr, ror #22
   1d5a0:	orr	r5, r6, lr
   1d5a4:	and	r5, r5, r8
   1d5a8:	and	r7, r6, lr
   1d5ac:	orr	r5, r5, r7
   1d5b0:	add	r4, r4, r5
   1d5b4:	add	r4, r4, r3
   1d5b8:	ror	r5, sl, #19
   1d5bc:	eor	r5, r5, sl, ror #17
   1d5c0:	eor	r5, r5, sl, lsr #10
   1d5c4:	ldr	fp, [sp, #8]
   1d5c8:	ror	r3, fp, #18
   1d5cc:	eor	r3, r3, fp, ror #7
   1d5d0:	eor	r3, r3, fp, lsr #3
   1d5d4:	ldr	r7, [sp, #4]
   1d5d8:	add	r3, r3, r7
   1d5dc:	ldr	r7, [sp, #40]	; 0x28
   1d5e0:	add	r3, r3, r7
   1d5e4:	add	r7, r5, r3
   1d5e8:	eor	r5, r0, r1
   1d5ec:	and	r5, r5, r2
   1d5f0:	eor	r5, r5, r0
   1d5f4:	b	1d6d0 <__assert_fail@plt+0xc3e4>
   1d5f8:	teqvc	r7, r1	; <illegal shifter operand>
   1d5fc:	strblt	pc, [r0, #3023]	; 0xbcf	; <UNPREDICTABLE>
   1d600:	ldmib	r5!, {r0, r2, r5, r7, r8, r9, fp, ip, lr, pc}
   1d604:	eorsls	r8, pc, #164, 4	; 0x4000000a
   1d608:	blls	ff71f0ac <optarg@@GLIBC_2.4+0xff6d4f04>
   1d60c:	orrsgt	pc, fp, r4, ror r1	; <UNPREDICTABLE>
   1d610:	ldr	r6, [fp], #2497	; 0x9c1
   1d614:	svc	0x00be4786
   1d618:	svceq	0x00c19dc6
   1d61c:	strcs	sl, [ip], #-460	; 0xfffffe34
   1d620:	stclcs	12, cr2, [r9, #444]!	; 0x1bc
   1d624:	bmi	1d3e8d4 <optarg@@GLIBC_2.4+0x1cf472c>
   1d628:			; <UNDEFINED> instruction: 0x5cb0a9dc
   1d62c:	usatvc	r8, #25, sl, asr #17
   1d630:	ldmdals	lr!, {r1, r4, r6, r8, ip, lr}
   1d634:	ldmdage	r1!, {r0, r2, r3, r5, r6, r9, sl, lr, pc}
   1d638:	andlt	r2, r3, r8, asr #15
   1d63c:	svclt	0x00597fc7
   1d640:			; <UNDEFINED> instruction: 0xc6e00bf3
   1d644:	strle	r9, [r7, #327]!	; 0x147
   1d648:			; <UNDEFINED> instruction: 0x06ca6351
   1d64c:	strtne	r2, [r9], #-2407	; 0xfffff699
   1d650:	ldrcs	r0, [r7, r5, lsl #21]!
   1d654:	mrccs	1, 0, r2, cr11, cr8, {1}
   1d658:	stcmi	13, cr6, [ip, #-1008]!	; 0xfffffc10
   1d65c:	teqpl	r8, #1216	; 0x4c0
   1d660:	strvs	r7, [sl, #-852]	; 0xfffffcac
   1d664:			; <UNDEFINED> instruction: 0x766a0abb
   1d668:	bichi	ip, r2, lr, lsr #18
   1d66c:	rsbsls	r2, r2, #34048	; 0x8500
   1d670:	adcsge	lr, pc, #10551296	; 0xa10000
   1d674:	ldmdage	sl, {r0, r1, r3, r6, r9, sl, sp, lr}
   1d678:	subgt	r8, fp, #112, 22	; 0x1c000
   1d67c:	strbgt	r5, [ip, -r3, lsr #3]!
   1d680:	orrsle	lr, r2, r9, lsl r8
   1d684:	ldrle	r0, [r9], r4, lsr #12
   1d688:	vst3.32	{d3,d5,d7}, [lr], r5
   1d68c:	rsbne	sl, sl, r0, ror r0
   1d690:	stmibne	r4!, {r1, r2, r4, r8, lr, pc}
   1d694:	cdpne	12, 3, cr6, cr7, cr8, {0}
   1d698:	strbcs	r7, [r8, -ip, asr #14]
   1d69c:	ldrtcc	fp, [r0], #3253	; 0xcb5
   1d6a0:	ldmdbcc	ip, {r0, r1, r4, r5, r7, sl, fp}
   1d6a4:	vfnmami.f32	s21, s16, s20
   1d6a8:	blpl	fe74ffec <optarg@@GLIBC_2.4+0xfe705e44>
   1d6ac:	stmdavs	lr!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
   1d6b0:	strvc	r8, [pc], #750	; 1d6b8 <__assert_fail@plt+0xc3cc>
   1d6b4:	stmiavc	r5!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}
   1d6b8:	strbhi	r7, [r8], #2068	; 0x814
   1d6bc:	sfmhi	f0, 2, [r7], {8}
   1d6c0:	ldrshtls	pc, [lr], sl	; <UNPREDICTABLE>
   1d6c4:	ldrbge	r6, [r0], #-3307	; 0xfffff315
   1d6c8:	mrclt	3, 7, sl, cr9, cr7, {7}
   1d6cc:			; <UNDEFINED> instruction: 0xc67178f2
   1d6d0:	ldr	r3, [pc, #-124]	; 1d65c <__assert_fail@plt+0xc370>
   1d6d4:	str	r7, [sp, #4]
   1d6d8:	add	r3, r7, r3
   1d6dc:	add	r3, r3, ip
   1d6e0:	add	r3, r5, r3
   1d6e4:	ror	ip, r2, #11
   1d6e8:	eor	ip, ip, r2, ror #6
   1d6ec:	eor	ip, ip, r2, ror #25
   1d6f0:	add	r3, r3, ip
   1d6f4:	add	r8, r8, r3
   1d6f8:	ror	ip, r4, #13
   1d6fc:	eor	ip, ip, r4, ror #2
   1d700:	eor	ip, ip, r4, ror #22
   1d704:	orr	r5, lr, r4
   1d708:	and	r5, r5, r6
   1d70c:	and	r7, lr, r4
   1d710:	orr	r5, r5, r7
   1d714:	add	ip, ip, r5
   1d718:	add	ip, ip, r3
   1d71c:	ldr	r5, [sp, #52]	; 0x34
   1d720:	ror	r3, r5, #19
   1d724:	eor	r3, r3, r5, ror #17
   1d728:	eor	r3, r3, r5, lsr #10
   1d72c:	ldr	r7, [sp, #12]
   1d730:	ror	fp, r7, #18
   1d734:	eor	fp, fp, r7, ror #7
   1d738:	eor	fp, fp, r7, lsr #3
   1d73c:	ldr	r5, [sp, #8]
   1d740:	add	fp, fp, r5
   1d744:	ldr	r5, [sp, #44]	; 0x2c
   1d748:	add	fp, fp, r5
   1d74c:	add	r7, r3, fp
   1d750:	eor	r5, r1, r2
   1d754:	and	r5, r5, r8
   1d758:	eor	r5, r5, r1
   1d75c:	ldr	r3, [pc, #-260]	; 1d660 <__assert_fail@plt+0xc374>
   1d760:	str	r7, [sp, #8]
   1d764:	add	r3, r7, r3
   1d768:	add	r3, r3, r0
   1d76c:	add	r3, r5, r3
   1d770:	ror	r0, r8, #11
   1d774:	eor	r0, r0, r8, ror #6
   1d778:	eor	r0, r0, r8, ror #25
   1d77c:	add	r3, r3, r0
   1d780:	add	r6, r6, r3
   1d784:	ror	r0, ip, #13
   1d788:	eor	r0, r0, ip, ror #2
   1d78c:	eor	r0, r0, ip, ror #22
   1d790:	orr	r5, r4, ip
   1d794:	and	r5, r5, lr
   1d798:	and	r7, r4, ip
   1d79c:	orr	r5, r5, r7
   1d7a0:	add	r0, r0, r5
   1d7a4:	add	r0, r0, r3
   1d7a8:	ldr	r7, [sp, #4]
   1d7ac:	ror	r3, r7, #19
   1d7b0:	eor	r3, r3, r7, ror #17
   1d7b4:	eor	r3, r3, r7, lsr #10
   1d7b8:	ldr	r5, [sp, #16]
   1d7bc:	ror	r7, r5, #18
   1d7c0:	eor	r7, r7, r5, ror #7
   1d7c4:	eor	r7, r7, r5, lsr #3
   1d7c8:	ldr	r5, [sp, #12]
   1d7cc:	add	r7, r7, r5
   1d7d0:	ldr	r5, [sp, #48]	; 0x30
   1d7d4:	add	r7, r7, r5
   1d7d8:	add	r3, r3, r7
   1d7dc:	mov	fp, r3
   1d7e0:	eor	r5, r2, r8
   1d7e4:	and	r5, r5, r6
   1d7e8:	eor	r5, r5, r2
   1d7ec:	ldr	r3, [pc, #-400]	; 1d664 <__assert_fail@plt+0xc378>
   1d7f0:	add	r3, fp, r3
   1d7f4:	add	r3, r3, r1
   1d7f8:	add	r3, r5, r3
   1d7fc:	ror	r1, r6, #11
   1d800:	eor	r1, r1, r6, ror #6
   1d804:	eor	r1, r1, r6, ror #25
   1d808:	add	r3, r3, r1
   1d80c:	add	lr, lr, r3
   1d810:	ror	r1, r0, #13
   1d814:	eor	r1, r1, r0, ror #2
   1d818:	eor	r1, r1, r0, ror #22
   1d81c:	orr	r5, ip, r0
   1d820:	and	r5, r5, r4
   1d824:	and	r7, ip, r0
   1d828:	orr	r5, r5, r7
   1d82c:	add	r1, r1, r5
   1d830:	add	r1, r1, r3
   1d834:	ldr	r5, [sp, #8]
   1d838:	ror	r3, r5, #19
   1d83c:	eor	r3, r3, r5, ror #17
   1d840:	eor	r3, r3, r5, lsr #10
   1d844:	ldr	r5, [sp, #20]
   1d848:	ror	r7, r5, #18
   1d84c:	eor	r7, r7, r5, ror #7
   1d850:	eor	r7, r7, r5, lsr #3
   1d854:	ldr	r5, [sp, #16]
   1d858:	add	r7, r7, r5
   1d85c:	add	r7, r7, r9
   1d860:	add	r3, r3, r7
   1d864:	mov	r7, r3
   1d868:	eor	r5, r8, r6
   1d86c:	and	r5, r5, lr
   1d870:	eor	r5, r5, r8
   1d874:	ldr	r3, [pc, #-532]	; 1d668 <__assert_fail@plt+0xc37c>
   1d878:	str	r7, [sp, #60]	; 0x3c
   1d87c:	add	r3, r7, r3
   1d880:	add	r3, r3, r2
   1d884:	add	r3, r5, r3
   1d888:	ror	r2, lr, #11
   1d88c:	eor	r2, r2, lr, ror #6
   1d890:	eor	r2, r2, lr, ror #25
   1d894:	add	r3, r3, r2
   1d898:	add	r4, r4, r3
   1d89c:	ror	r2, r1, #13
   1d8a0:	eor	r2, r2, r1, ror #2
   1d8a4:	eor	r2, r2, r1, ror #22
   1d8a8:	orr	r5, r0, r1
   1d8ac:	and	r5, r5, ip
   1d8b0:	and	r7, r0, r1
   1d8b4:	orr	r5, r5, r7
   1d8b8:	add	r2, r2, r5
   1d8bc:	add	r2, r2, r3
   1d8c0:	ror	r5, fp, #19
   1d8c4:	eor	r5, r5, fp, ror #17
   1d8c8:	eor	r5, r5, fp, lsr #10
   1d8cc:	ldr	r7, [sp, #24]
   1d8d0:	ror	r3, r7, #18
   1d8d4:	eor	r3, r3, r7, ror #7
   1d8d8:	eor	r3, r3, r7, lsr #3
   1d8dc:	ldr	r7, [sp, #20]
   1d8e0:	add	r3, r3, r7
   1d8e4:	ldr	r7, [sp, #56]	; 0x38
   1d8e8:	add	r3, r3, r7
   1d8ec:	add	r3, r5, r3
   1d8f0:	mov	r7, r3
   1d8f4:	eor	r5, r6, lr
   1d8f8:	and	r5, r5, r4
   1d8fc:	eor	r5, r5, r6
   1d900:	ldr	r3, [pc, #-668]	; 1d66c <__assert_fail@plt+0xc380>
   1d904:	str	r7, [sp, #12]
   1d908:	add	r3, r7, r3
   1d90c:	add	r3, r3, r8
   1d910:	add	r3, r5, r3
   1d914:	ror	r5, r4, #11
   1d918:	eor	r5, r5, r4, ror #6
   1d91c:	eor	r5, r5, r4, ror #25
   1d920:	add	r3, r3, r5
   1d924:	add	ip, ip, r3
   1d928:	ror	r5, r2, #13
   1d92c:	eor	r5, r5, r2, ror #2
   1d930:	eor	r5, r5, r2, ror #22
   1d934:	orr	r7, r1, r2
   1d938:	and	r7, r7, r0
   1d93c:	and	r8, r1, r2
   1d940:	orr	r7, r7, r8
   1d944:	add	r5, r5, r7
   1d948:	add	r5, r5, r3
   1d94c:	ldr	r7, [sp, #60]	; 0x3c
   1d950:	ror	r3, r7, #19
   1d954:	eor	r3, r3, r7, ror #17
   1d958:	eor	r3, r3, r7, lsr #10
   1d95c:	ldr	r8, [sp, #28]
   1d960:	ror	r7, r8, #18
   1d964:	eor	r7, r7, r8, ror #7
   1d968:	eor	r7, r7, r8, lsr #3
   1d96c:	ldr	r8, [sp, #24]
   1d970:	add	r7, r7, r8
   1d974:	add	r7, r7, sl
   1d978:	add	r3, r3, r7
   1d97c:	mov	r8, r3
   1d980:	eor	r7, lr, r4
   1d984:	and	r7, r7, ip
   1d988:	eor	r7, r7, lr
   1d98c:	ldr	r3, [pc, #-804]	; 1d670 <__assert_fail@plt+0xc384>
   1d990:	str	r8, [sp, #16]
   1d994:	add	r3, r8, r3
   1d998:	add	r3, r3, r6
   1d99c:	add	r3, r7, r3
   1d9a0:	ror	r6, ip, #11
   1d9a4:	eor	r6, r6, ip, ror #6
   1d9a8:	eor	r6, r6, ip, ror #25
   1d9ac:	add	r3, r3, r6
   1d9b0:	add	r0, r0, r3
   1d9b4:	ror	r6, r5, #13
   1d9b8:	eor	r6, r6, r5, ror #2
   1d9bc:	eor	r6, r6, r5, ror #22
   1d9c0:	orr	r7, r2, r5
   1d9c4:	and	r7, r7, r1
   1d9c8:	and	r8, r2, r5
   1d9cc:	orr	r7, r7, r8
   1d9d0:	add	r6, r6, r7
   1d9d4:	add	r6, r6, r3
   1d9d8:	ldr	r3, [sp, #12]
   1d9dc:	ror	r7, r3, #19
   1d9e0:	eor	r7, r7, r3, ror #17
   1d9e4:	eor	r7, r7, r3, lsr #10
   1d9e8:	ldr	r8, [sp, #32]
   1d9ec:	ror	r3, r8, #18
   1d9f0:	eor	r3, r3, r8, ror #7
   1d9f4:	eor	r3, r3, r8, lsr #3
   1d9f8:	ldr	r8, [sp, #28]
   1d9fc:	add	r3, r3, r8
   1da00:	ldr	r8, [sp, #52]	; 0x34
   1da04:	add	r3, r3, r8
   1da08:	add	r3, r7, r3
   1da0c:	mov	r8, r3
   1da10:	eor	r7, r4, ip
   1da14:	and	r7, r7, r0
   1da18:	eor	r7, r7, r4
   1da1c:	ldr	r3, [pc, #-944]	; 1d674 <__assert_fail@plt+0xc388>
   1da20:	str	r8, [sp, #64]	; 0x40
   1da24:	add	r3, r8, r3
   1da28:	add	r3, r3, lr
   1da2c:	add	r7, r7, r3
   1da30:	ror	r3, r0, #11
   1da34:	eor	r3, r3, r0, ror #6
   1da38:	eor	r3, r3, r0, ror #25
   1da3c:	add	r3, r7, r3
   1da40:	add	r1, r1, r3
   1da44:	ror	r7, r6, #13
   1da48:	eor	r7, r7, r6, ror #2
   1da4c:	eor	r7, r7, r6, ror #22
   1da50:	orr	lr, r5, r6
   1da54:	and	lr, lr, r2
   1da58:	and	r8, r5, r6
   1da5c:	orr	lr, lr, r8
   1da60:	add	r7, r7, lr
   1da64:	add	r7, r7, r3
   1da68:	ldr	r3, [sp, #16]
   1da6c:	ror	lr, r3, #19
   1da70:	eor	lr, lr, r3, ror #17
   1da74:	eor	lr, lr, r3, lsr #10
   1da78:	ldr	r8, [sp, #36]	; 0x24
   1da7c:	ror	r3, r8, #18
   1da80:	eor	r3, r3, r8, ror #7
   1da84:	eor	r3, r3, r8, lsr #3
   1da88:	ldr	r8, [sp, #32]
   1da8c:	add	r3, r3, r8
   1da90:	ldr	r8, [sp, #4]
   1da94:	add	r3, r3, r8
   1da98:	add	lr, lr, r3
   1da9c:	mov	r8, lr
   1daa0:	eor	lr, ip, r0
   1daa4:	and	lr, lr, r1
   1daa8:	eor	lr, lr, ip
   1daac:	ldr	r3, [pc, #-1084]	; 1d678 <__assert_fail@plt+0xc38c>
   1dab0:	str	r8, [sp, #20]
   1dab4:	add	r3, r8, r3
   1dab8:	add	r3, r3, r4
   1dabc:	add	lr, lr, r3
   1dac0:	ror	r3, r1, #11
   1dac4:	eor	r3, r3, r1, ror #6
   1dac8:	eor	r3, r3, r1, ror #25
   1dacc:	add	r3, lr, r3
   1dad0:	add	r2, r2, r3
   1dad4:	ror	lr, r7, #13
   1dad8:	eor	lr, lr, r7, ror #2
   1dadc:	eor	lr, lr, r7, ror #22
   1dae0:	orr	r4, r6, r7
   1dae4:	and	r4, r4, r5
   1dae8:	and	r8, r6, r7
   1daec:	orr	r4, r4, r8
   1daf0:	add	lr, lr, r4
   1daf4:	add	lr, lr, r3
   1daf8:	ldr	r3, [sp, #64]	; 0x40
   1dafc:	ror	r4, r3, #19
   1db00:	eor	r4, r4, r3, ror #17
   1db04:	eor	r4, r4, r3, lsr #10
   1db08:	ldr	r8, [sp, #40]	; 0x28
   1db0c:	ror	r3, r8, #18
   1db10:	eor	r3, r3, r8, ror #7
   1db14:	eor	r3, r3, r8, lsr #3
   1db18:	ldr	r8, [sp, #36]	; 0x24
   1db1c:	add	r3, r3, r8
   1db20:	ldr	r8, [sp, #8]
   1db24:	add	r3, r3, r8
   1db28:	add	r4, r4, r3
   1db2c:	mov	r8, r4
   1db30:	eor	r4, r0, r1
   1db34:	and	r4, r4, r2
   1db38:	eor	r4, r4, r0
   1db3c:	ldr	r3, [pc, #-1224]	; 1d67c <__assert_fail@plt+0xc390>
   1db40:	str	r8, [sp, #24]
   1db44:	add	r3, r8, r3
   1db48:	add	ip, r3, ip
   1db4c:	add	r4, r4, ip
   1db50:	ror	ip, r2, #11
   1db54:	eor	ip, ip, r2, ror #6
   1db58:	eor	ip, ip, r2, ror #25
   1db5c:	add	ip, r4, ip
   1db60:	add	r3, r5, ip
   1db64:	ror	r4, lr, #13
   1db68:	eor	r4, r4, lr, ror #2
   1db6c:	eor	r4, r4, lr, ror #22
   1db70:	orr	r5, r7, lr
   1db74:	and	r5, r5, r6
   1db78:	and	r8, r7, lr
   1db7c:	orr	r5, r5, r8
   1db80:	add	r4, r4, r5
   1db84:	add	r4, r4, ip
   1db88:	ldr	ip, [sp, #20]
   1db8c:	ror	r5, ip, #19
   1db90:	eor	r5, r5, ip, ror #17
   1db94:	eor	r5, r5, ip, lsr #10
   1db98:	ldr	r8, [sp, #44]	; 0x2c
   1db9c:	ror	ip, r8, #18
   1dba0:	eor	ip, ip, r8, ror #7
   1dba4:	eor	ip, ip, r8, lsr #3
   1dba8:	ldr	r8, [sp, #40]	; 0x28
   1dbac:	add	ip, ip, r8
   1dbb0:	add	ip, ip, fp
   1dbb4:	add	ip, r5, ip
   1dbb8:	mov	r8, ip
   1dbbc:	eor	r5, r1, r2
   1dbc0:	and	r5, r5, r3
   1dbc4:	eor	r5, r5, r1
   1dbc8:	ldr	ip, [pc, #-1360]	; 1d680 <__assert_fail@plt+0xc394>
   1dbcc:	str	r8, [sp, #28]
   1dbd0:	add	ip, r8, ip
   1dbd4:	add	r0, ip, r0
   1dbd8:	add	r5, r5, r0
   1dbdc:	ror	r0, r3, #11
   1dbe0:	eor	r0, r0, r3, ror #6
   1dbe4:	eor	r0, r0, r3, ror #25
   1dbe8:	add	r5, r5, r0
   1dbec:	add	ip, r6, r5
   1dbf0:	ror	r0, r4, #13
   1dbf4:	eor	r0, r0, r4, ror #2
   1dbf8:	eor	r0, r0, r4, ror #22
   1dbfc:	orr	r6, lr, r4
   1dc00:	and	r6, r6, r7
   1dc04:	and	r8, lr, r4
   1dc08:	orr	r6, r6, r8
   1dc0c:	add	r0, r0, r6
   1dc10:	add	r0, r0, r5
   1dc14:	ldr	r5, [sp, #24]
   1dc18:	ror	r6, r5, #19
   1dc1c:	eor	r6, r6, r5, ror #17
   1dc20:	eor	r6, r6, r5, lsr #10
   1dc24:	ldr	r8, [sp, #48]	; 0x30
   1dc28:	ror	r5, r8, #18
   1dc2c:	eor	r5, r5, r8, ror #7
   1dc30:	eor	r5, r5, r8, lsr #3
   1dc34:	ldr	r8, [sp, #44]	; 0x2c
   1dc38:	add	r5, r5, r8
   1dc3c:	ldr	r8, [sp, #60]	; 0x3c
   1dc40:	add	r5, r5, r8
   1dc44:	add	r6, r6, r5
   1dc48:	mov	r8, r6
   1dc4c:	eor	r6, r2, r3
   1dc50:	and	r6, r6, ip
   1dc54:	eor	r6, r6, r2
   1dc58:	ldr	r5, [pc, #-1500]	; 1d684 <__assert_fail@plt+0xc398>
   1dc5c:	str	r8, [sp, #32]
   1dc60:	add	r5, r8, r5
   1dc64:	add	r1, r5, r1
   1dc68:	add	r1, r6, r1
   1dc6c:	ror	r5, ip, #11
   1dc70:	eor	r5, r5, ip, ror #6
   1dc74:	eor	r5, r5, ip, ror #25
   1dc78:	add	r5, r1, r5
   1dc7c:	add	r6, r7, r5
   1dc80:	ror	r1, r0, #13
   1dc84:	eor	r1, r1, r0, ror #2
   1dc88:	eor	r1, r1, r0, ror #22
   1dc8c:	orr	r7, r4, r0
   1dc90:	and	r7, r7, lr
   1dc94:	and	r8, r4, r0
   1dc98:	orr	r7, r7, r8
   1dc9c:	add	r1, r1, r7
   1dca0:	add	r1, r1, r5
   1dca4:	ldr	r5, [sp, #28]
   1dca8:	ror	r7, r5, #19
   1dcac:	eor	r7, r7, r5, ror #17
   1dcb0:	eor	r7, r7, r5, lsr #10
   1dcb4:	ror	r5, r9, #18
   1dcb8:	eor	r5, r5, r9, ror #7
   1dcbc:	eor	r5, r5, r9, lsr #3
   1dcc0:	ldr	r8, [sp, #48]	; 0x30
   1dcc4:	add	r5, r5, r8
   1dcc8:	ldr	r8, [sp, #12]
   1dccc:	add	r5, r5, r8
   1dcd0:	add	r7, r7, r5
   1dcd4:	mov	r8, r7
   1dcd8:	eor	r7, r3, ip
   1dcdc:	and	r7, r7, r6
   1dce0:	eor	r7, r7, r3
   1dce4:	ldr	r5, [pc, #-1636]	; 1d688 <__assert_fail@plt+0xc39c>
   1dce8:	str	r8, [sp, #36]	; 0x24
   1dcec:	add	r5, r8, r5
   1dcf0:	add	r2, r5, r2
   1dcf4:	add	r2, r7, r2
   1dcf8:	ror	r5, r6, #11
   1dcfc:	eor	r5, r5, r6, ror #6
   1dd00:	eor	r5, r5, r6, ror #25
   1dd04:	add	r5, r2, r5
   1dd08:	add	lr, lr, r5
   1dd0c:	ror	r2, r1, #13
   1dd10:	eor	r2, r2, r1, ror #2
   1dd14:	eor	r2, r2, r1, ror #22
   1dd18:	orr	r7, r0, r1
   1dd1c:	and	r7, r7, r4
   1dd20:	and	r8, r0, r1
   1dd24:	orr	r7, r7, r8
   1dd28:	add	r2, r2, r7
   1dd2c:	add	r2, r2, r5
   1dd30:	ldr	r5, [sp, #32]
   1dd34:	ror	r7, r5, #19
   1dd38:	eor	r7, r7, r5, ror #17
   1dd3c:	eor	r7, r7, r5, lsr #10
   1dd40:	ldr	r8, [sp, #56]	; 0x38
   1dd44:	ror	r5, r8, #18
   1dd48:	eor	r5, r5, r8, ror #7
   1dd4c:	eor	r5, r5, r8, lsr #3
   1dd50:	add	r5, r5, r9
   1dd54:	ldr	r9, [sp, #16]
   1dd58:	add	r5, r5, r9
   1dd5c:	add	r7, r7, r5
   1dd60:	mov	r9, r7
   1dd64:	eor	r7, ip, r6
   1dd68:	and	r7, r7, lr
   1dd6c:	eor	r7, r7, ip
   1dd70:	ldr	r5, [pc, #-1772]	; 1d68c <__assert_fail@plt+0xc3a0>
   1dd74:	str	r9, [sp, #40]	; 0x28
   1dd78:	add	r5, r9, r5
   1dd7c:	add	r5, r5, r3
   1dd80:	add	r5, r7, r5
   1dd84:	ror	r9, lr, #11
   1dd88:	eor	r9, r9, lr, ror #6
   1dd8c:	eor	r9, r9, lr, ror #25
   1dd90:	add	r5, r5, r9
   1dd94:	add	r3, r4, r5
   1dd98:	ror	r9, r2, #13
   1dd9c:	eor	r9, r9, r2, ror #2
   1dda0:	eor	r9, r9, r2, ror #22
   1dda4:	orr	r4, r1, r2
   1dda8:	and	r4, r4, r0
   1ddac:	and	r7, r1, r2
   1ddb0:	orr	r4, r4, r7
   1ddb4:	add	r9, r9, r4
   1ddb8:	add	r9, r9, r5
   1ddbc:	ldr	r4, [sp, #36]	; 0x24
   1ddc0:	ror	r5, r4, #19
   1ddc4:	eor	r5, r5, r4, ror #17
   1ddc8:	eor	r5, r5, r4, lsr #10
   1ddcc:	ror	r4, sl, #18
   1ddd0:	eor	r4, r4, sl, ror #7
   1ddd4:	eor	r4, r4, sl, lsr #3
   1ddd8:	add	r4, r4, r8
   1dddc:	ldr	r7, [sp, #64]	; 0x40
   1dde0:	add	r4, r4, r7
   1dde4:	add	r7, r5, r4
   1dde8:	str	r7, [sp, #80]	; 0x50
   1ddec:	eor	r5, r6, lr
   1ddf0:	and	r5, r5, r3
   1ddf4:	eor	r5, r5, r6
   1ddf8:	ldr	r4, [pc, #-1904]	; 1d690 <__assert_fail@plt+0xc3a4>
   1ddfc:	str	r7, [sp, #44]	; 0x2c
   1de00:	add	r4, r7, r4
   1de04:	add	ip, r4, ip
   1de08:	add	r4, r5, ip
   1de0c:	ror	ip, r3, #11
   1de10:	eor	ip, ip, r3, ror #6
   1de14:	eor	ip, ip, r3, ror #25
   1de18:	add	ip, r4, ip
   1de1c:	add	r0, r0, ip
   1de20:	ror	r4, r9, #13
   1de24:	eor	r4, r4, r9, ror #2
   1de28:	eor	r4, r4, r9, ror #22
   1de2c:	orr	r5, r2, r9
   1de30:	and	r5, r5, r1
   1de34:	and	r7, r2, r9
   1de38:	orr	r5, r5, r7
   1de3c:	add	r4, r4, r5
   1de40:	add	r4, r4, ip
   1de44:	ldr	ip, [sp, #40]	; 0x28
   1de48:	ror	r7, ip, #19
   1de4c:	eor	r7, r7, ip, ror #17
   1de50:	eor	r7, r7, ip, lsr #10
   1de54:	ldr	r8, [sp, #52]	; 0x34
   1de58:	ror	ip, r8, #18
   1de5c:	eor	ip, ip, r8, ror #7
   1de60:	eor	ip, ip, r8, lsr #3
   1de64:	add	ip, ip, sl
   1de68:	ldr	sl, [sp, #20]
   1de6c:	add	ip, ip, sl
   1de70:	add	r7, r7, ip
   1de74:	str	r7, [sp, #84]	; 0x54
   1de78:	eor	r5, lr, r3
   1de7c:	and	r5, r5, r0
   1de80:	eor	r5, r5, lr
   1de84:	ldr	ip, [pc, #-2040]	; 1d694 <__assert_fail@plt+0xc3a8>
   1de88:	add	ip, r7, ip
   1de8c:	add	ip, ip, r6
   1de90:	add	r8, r5, ip
   1de94:	ror	ip, r0, #11
   1de98:	eor	ip, ip, r0, ror #6
   1de9c:	eor	ip, ip, r0, ror #25
   1dea0:	add	ip, r8, ip
   1dea4:	add	r1, r1, ip
   1dea8:	ror	r8, r4, #13
   1deac:	eor	r8, r8, r4, ror #2
   1deb0:	eor	r8, r8, r4, ror #22
   1deb4:	orr	r5, r9, r4
   1deb8:	and	r5, r5, r2
   1debc:	and	r6, r9, r4
   1dec0:	orr	r5, r5, r6
   1dec4:	add	r8, r8, r5
   1dec8:	add	r8, r8, ip
   1decc:	ldr	ip, [sp, #44]	; 0x2c
   1ded0:	ror	r6, ip, #19
   1ded4:	eor	r6, r6, ip, ror #17
   1ded8:	eor	r6, r6, ip, lsr #10
   1dedc:	ldr	sl, [sp, #4]
   1dee0:	ror	ip, sl, #18
   1dee4:	eor	ip, ip, sl, ror #7
   1dee8:	eor	ip, ip, sl, lsr #3
   1deec:	ldr	r5, [sp, #52]	; 0x34
   1def0:	add	ip, ip, r5
   1def4:	ldr	r5, [sp, #24]
   1def8:	add	ip, ip, r5
   1defc:	add	sl, r6, ip
   1df00:	str	sl, [sp, #88]	; 0x58
   1df04:	eor	r5, r3, r0
   1df08:	and	r5, r5, r1
   1df0c:	eor	r5, r5, r3
   1df10:	ldr	ip, [pc, #-2176]	; 1d698 <__assert_fail@plt+0xc3ac>
   1df14:	str	sl, [sp, #48]	; 0x30
   1df18:	add	ip, sl, ip
   1df1c:	add	lr, ip, lr
   1df20:	add	lr, r5, lr
   1df24:	ror	ip, r1, #11
   1df28:	eor	ip, ip, r1, ror #6
   1df2c:	eor	ip, ip, r1, ror #25
   1df30:	add	lr, lr, ip
   1df34:	add	r2, r2, lr
   1df38:	ror	ip, r8, #13
   1df3c:	eor	ip, ip, r8, ror #2
   1df40:	eor	ip, ip, r8, ror #22
   1df44:	orr	r5, r4, r8
   1df48:	and	r5, r5, r9
   1df4c:	and	sl, r4, r8
   1df50:	orr	r5, r5, sl
   1df54:	add	ip, ip, r5
   1df58:	add	ip, ip, lr
   1df5c:	ror	r5, r7, #19
   1df60:	eor	r5, r5, r7, ror #17
   1df64:	eor	r5, r5, r7, lsr #10
   1df68:	ldr	r6, [sp, #8]
   1df6c:	ror	lr, r6, #18
   1df70:	eor	lr, lr, r6, ror #7
   1df74:	eor	lr, lr, r6, lsr #3
   1df78:	ldr	sl, [sp, #4]
   1df7c:	add	lr, lr, sl
   1df80:	ldr	sl, [sp, #28]
   1df84:	add	lr, lr, sl
   1df88:	add	r5, r5, lr
   1df8c:	str	r5, [sp, #92]	; 0x5c
   1df90:	eor	sl, r0, r1
   1df94:	and	sl, sl, r2
   1df98:	eor	sl, sl, r0
   1df9c:	ldr	lr, [pc, #-2312]	; 1d69c <__assert_fail@plt+0xc3b0>
   1dfa0:	add	lr, r5, lr
   1dfa4:	add	r3, lr, r3
   1dfa8:	add	r3, sl, r3
   1dfac:	ror	lr, r2, #11
   1dfb0:	eor	lr, lr, r2, ror #6
   1dfb4:	eor	lr, lr, r2, ror #25
   1dfb8:	add	lr, r3, lr
   1dfbc:	add	r9, r9, lr
   1dfc0:	ror	r3, ip, #13
   1dfc4:	eor	r3, r3, ip, ror #2
   1dfc8:	eor	r3, r3, ip, ror #22
   1dfcc:	orr	sl, r8, ip
   1dfd0:	and	sl, sl, r4
   1dfd4:	and	r6, r8, ip
   1dfd8:	orr	sl, sl, r6
   1dfdc:	add	r3, r3, sl
   1dfe0:	add	r3, r3, lr
   1dfe4:	ldr	sl, [sp, #48]	; 0x30
   1dfe8:	ror	lr, sl, #19
   1dfec:	eor	lr, lr, sl, ror #17
   1dff0:	eor	lr, lr, sl, lsr #10
   1dff4:	ror	sl, fp, #18
   1dff8:	eor	sl, sl, fp, ror #7
   1dffc:	str	fp, [sp, #52]	; 0x34
   1e000:	eor	sl, sl, fp, lsr #3
   1e004:	ldr	r6, [sp, #8]
   1e008:	add	fp, sl, r6
   1e00c:	ldr	sl, [sp, #32]
   1e010:	add	fp, fp, sl
   1e014:	add	lr, lr, fp
   1e018:	mov	fp, lr
   1e01c:	str	lr, [sp, #96]	; 0x60
   1e020:	eor	sl, r1, r2
   1e024:	and	sl, sl, r9
   1e028:	eor	sl, sl, r1
   1e02c:	ldr	lr, [pc, #-2452]	; 1d6a0 <__assert_fail@plt+0xc3b4>
   1e030:	str	fp, [sp, #4]
   1e034:	add	lr, fp, lr
   1e038:	add	r0, lr, r0
   1e03c:	add	r0, sl, r0
   1e040:	ror	lr, r9, #11
   1e044:	eor	lr, lr, r9, ror #6
   1e048:	eor	lr, lr, r9, ror #25
   1e04c:	add	lr, r0, lr
   1e050:	add	r4, r4, lr
   1e054:	ror	r0, r3, #13
   1e058:	eor	r0, r0, r3, ror #2
   1e05c:	eor	r0, r0, r3, ror #22
   1e060:	orr	sl, ip, r3
   1e064:	and	sl, sl, r8
   1e068:	and	fp, ip, r3
   1e06c:	orr	sl, sl, fp
   1e070:	add	r0, r0, sl
   1e074:	add	r0, r0, lr
   1e078:	ror	sl, r5, #19
   1e07c:	eor	sl, sl, r5, ror #17
   1e080:	eor	sl, sl, r5, lsr #10
   1e084:	ldr	r6, [sp, #60]	; 0x3c
   1e088:	ror	lr, r6, #18
   1e08c:	eor	lr, lr, r6, ror #7
   1e090:	eor	lr, lr, r6, lsr #3
   1e094:	ldr	fp, [sp, #52]	; 0x34
   1e098:	add	lr, lr, fp
   1e09c:	ldr	fp, [sp, #36]	; 0x24
   1e0a0:	add	lr, lr, fp
   1e0a4:	add	lr, sl, lr
   1e0a8:	mov	fp, lr
   1e0ac:	str	lr, [sp, #100]	; 0x64
   1e0b0:	eor	sl, r2, r9
   1e0b4:	and	sl, sl, r4
   1e0b8:	eor	sl, sl, r2
   1e0bc:	ldr	lr, [pc, #-2592]	; 1d6a4 <__assert_fail@plt+0xc3b8>
   1e0c0:	str	fp, [sp, #8]
   1e0c4:	add	lr, fp, lr
   1e0c8:	add	r1, lr, r1
   1e0cc:	add	r1, sl, r1
   1e0d0:	ror	lr, r4, #11
   1e0d4:	eor	lr, lr, r4, ror #6
   1e0d8:	eor	lr, lr, r4, ror #25
   1e0dc:	add	lr, r1, lr
   1e0e0:	add	r8, r8, lr
   1e0e4:	ror	r1, r0, #13
   1e0e8:	eor	r1, r1, r0, ror #2
   1e0ec:	eor	r1, r1, r0, ror #22
   1e0f0:	orr	sl, r3, r0
   1e0f4:	and	sl, sl, ip
   1e0f8:	and	fp, r3, r0
   1e0fc:	orr	sl, sl, fp
   1e100:	add	r1, r1, sl
   1e104:	add	r1, r1, lr
   1e108:	ldr	lr, [sp, #4]
   1e10c:	ror	sl, lr, #19
   1e110:	eor	sl, sl, lr, ror #17
   1e114:	eor	sl, sl, lr, lsr #10
   1e118:	ldr	fp, [sp, #12]
   1e11c:	ror	lr, fp, #18
   1e120:	eor	lr, lr, fp, ror #7
   1e124:	eor	lr, lr, fp, lsr #3
   1e128:	add	lr, lr, r6
   1e12c:	ldr	fp, [sp, #40]	; 0x28
   1e130:	add	lr, lr, fp
   1e134:	add	lr, sl, lr
   1e138:	mov	r6, lr
   1e13c:	str	lr, [sp, #104]	; 0x68
   1e140:	eor	sl, r9, r4
   1e144:	and	sl, sl, r8
   1e148:	eor	sl, sl, r9
   1e14c:	ldr	lr, [pc, #-2732]	; 1d6a8 <__assert_fail@plt+0xc3bc>
   1e150:	add	lr, r6, lr
   1e154:	add	r2, lr, r2
   1e158:	add	sl, sl, r2
   1e15c:	ror	r2, r8, #11
   1e160:	eor	r2, r2, r8, ror #6
   1e164:	eor	r2, r2, r8, ror #25
   1e168:	add	sl, sl, r2
   1e16c:	add	lr, ip, sl
   1e170:	ror	r2, r1, #13
   1e174:	eor	r2, r2, r1, ror #2
   1e178:	eor	r2, r2, r1, ror #22
   1e17c:	orr	ip, r0, r1
   1e180:	and	ip, ip, r3
   1e184:	and	fp, r0, r1
   1e188:	orr	ip, ip, fp
   1e18c:	add	r2, r2, ip
   1e190:	add	r2, r2, sl
   1e194:	ldr	ip, [sp, #8]
   1e198:	ror	sl, ip, #19
   1e19c:	eor	sl, sl, ip, ror #17
   1e1a0:	eor	sl, sl, ip, lsr #10
   1e1a4:	ldr	fp, [sp, #16]
   1e1a8:	ror	ip, fp, #18
   1e1ac:	eor	ip, ip, fp, ror #7
   1e1b0:	eor	ip, ip, fp, lsr #3
   1e1b4:	ldr	fp, [sp, #12]
   1e1b8:	add	ip, ip, fp
   1e1bc:	ldr	fp, [sp, #44]	; 0x2c
   1e1c0:	add	ip, ip, fp
   1e1c4:	add	ip, sl, ip
   1e1c8:	mov	fp, ip
   1e1cc:	str	ip, [sp, #108]	; 0x6c
   1e1d0:	eor	sl, r4, r8
   1e1d4:	and	sl, sl, lr
   1e1d8:	eor	sl, sl, r4
   1e1dc:	ldr	ip, [pc, #-2872]	; 1d6ac <__assert_fail@plt+0xc3c0>
   1e1e0:	str	fp, [sp, #12]
   1e1e4:	add	ip, fp, ip
   1e1e8:	add	r9, ip, r9
   1e1ec:	add	r9, sl, r9
   1e1f0:	ror	ip, lr, #11
   1e1f4:	eor	ip, ip, lr, ror #6
   1e1f8:	eor	ip, ip, lr, ror #25
   1e1fc:	add	r9, r9, ip
   1e200:	add	ip, r3, r9
   1e204:	ror	r3, r2, #13
   1e208:	eor	r3, r3, r2, ror #2
   1e20c:	eor	r3, r3, r2, ror #22
   1e210:	orr	sl, r1, r2
   1e214:	and	sl, sl, r0
   1e218:	and	fp, r1, r2
   1e21c:	orr	sl, sl, fp
   1e220:	add	sl, r3, sl
   1e224:	add	r9, sl, r9
   1e228:	ror	sl, r6, #19
   1e22c:	eor	sl, sl, r6, ror #17
   1e230:	str	r6, [sp, #52]	; 0x34
   1e234:	eor	sl, sl, r6, lsr #10
   1e238:	ldr	r6, [sp, #64]	; 0x40
   1e23c:	ror	r3, r6, #18
   1e240:	eor	r3, r3, r6, ror #7
   1e244:	eor	r3, r3, r6, lsr #3
   1e248:	ldr	fp, [sp, #16]
   1e24c:	add	r3, r3, fp
   1e250:	add	r7, r3, r7
   1e254:	add	fp, sl, r7
   1e258:	str	fp, [sp, #112]	; 0x70
   1e25c:	eor	r7, r8, lr
   1e260:	and	r7, r7, ip
   1e264:	eor	r7, r7, r8
   1e268:	ldr	r3, [pc, #-3008]	; 1d6b0 <__assert_fail@plt+0xc3c4>
   1e26c:	add	r3, fp, r3
   1e270:	add	r3, r3, r4
   1e274:	add	r3, r7, r3
   1e278:	ror	r4, ip, #11
   1e27c:	eor	r4, r4, ip, ror #6
   1e280:	eor	r4, r4, ip, ror #25
   1e284:	add	r3, r3, r4
   1e288:	add	r0, r0, r3
   1e28c:	ror	r4, r9, #13
   1e290:	eor	r4, r4, r9, ror #2
   1e294:	eor	r4, r4, r9, ror #22
   1e298:	orr	r7, r2, r9
   1e29c:	and	r7, r7, r1
   1e2a0:	and	sl, r2, r9
   1e2a4:	orr	r7, r7, sl
   1e2a8:	add	r4, r4, r7
   1e2ac:	add	r4, r4, r3
   1e2b0:	ldr	r3, [sp, #12]
   1e2b4:	ror	r7, r3, #19
   1e2b8:	eor	r7, r7, r3, ror #17
   1e2bc:	eor	r7, r7, r3, lsr #10
   1e2c0:	ldr	sl, [sp, #20]
   1e2c4:	ror	r3, sl, #18
   1e2c8:	eor	r3, r3, sl, ror #7
   1e2cc:	eor	r3, r3, sl, lsr #3
   1e2d0:	add	r3, r3, r6
   1e2d4:	ldr	sl, [sp, #48]	; 0x30
   1e2d8:	add	r6, r3, sl
   1e2dc:	add	r7, r7, r6
   1e2e0:	str	r7, [sp, #116]	; 0x74
   1e2e4:	eor	r6, lr, ip
   1e2e8:	and	r6, r6, r0
   1e2ec:	eor	r6, r6, lr
   1e2f0:	ldr	r3, [pc, #-3140]	; 1d6b4 <__assert_fail@plt+0xc3c8>
   1e2f4:	add	r3, r7, r3
   1e2f8:	add	r3, r3, r8
   1e2fc:	add	r6, r6, r3
   1e300:	ror	r3, r0, #11
   1e304:	eor	r3, r3, r0, ror #6
   1e308:	eor	r3, r3, r0, ror #25
   1e30c:	add	r3, r6, r3
   1e310:	add	r1, r1, r3
   1e314:	ror	r6, r4, #13
   1e318:	eor	r6, r6, r4, ror #2
   1e31c:	eor	r6, r6, r4, ror #22
   1e320:	orr	r8, r9, r4
   1e324:	and	r8, r8, r2
   1e328:	and	sl, r9, r4
   1e32c:	orr	r8, r8, sl
   1e330:	add	r6, r6, r8
   1e334:	add	r6, r6, r3
   1e338:	ror	r8, fp, #19
   1e33c:	eor	r8, r8, fp, ror #17
   1e340:	eor	r8, r8, fp, lsr #10
   1e344:	ldr	sl, [sp, #24]
   1e348:	ror	r3, sl, #18
   1e34c:	eor	r3, r3, sl, ror #7
   1e350:	eor	r3, r3, sl, lsr #3
   1e354:	ldr	sl, [sp, #20]
   1e358:	add	r3, r3, sl
   1e35c:	add	r5, r3, r5
   1e360:	add	r5, r8, r5
   1e364:	str	r5, [sp, #120]	; 0x78
   1e368:	eor	r8, ip, r0
   1e36c:	and	r8, r8, r1
   1e370:	eor	r8, r8, ip
   1e374:	ldr	r3, [pc, #-3268]	; 1d6b8 <__assert_fail@plt+0xc3cc>
   1e378:	add	r3, r5, r3
   1e37c:	add	lr, r3, lr
   1e380:	add	lr, r8, lr
   1e384:	ror	r3, r1, #11
   1e388:	eor	r3, r3, r1, ror #6
   1e38c:	eor	r3, r3, r1, ror #25
   1e390:	add	lr, lr, r3
   1e394:	add	r2, r2, lr
   1e398:	ror	r3, r6, #13
   1e39c:	eor	r3, r3, r6, ror #2
   1e3a0:	eor	r3, r3, r6, ror #22
   1e3a4:	orr	r8, r4, r6
   1e3a8:	and	r8, r8, r9
   1e3ac:	and	sl, r4, r6
   1e3b0:	orr	r8, r8, sl
   1e3b4:	add	r8, r3, r8
   1e3b8:	add	lr, r8, lr
   1e3bc:	ror	r3, r7, #19
   1e3c0:	eor	r3, r3, r7, ror #17
   1e3c4:	eor	r7, r3, r7, lsr #10
   1e3c8:	ldr	r8, [sp, #28]
   1e3cc:	ror	r3, r8, #18
   1e3d0:	eor	r3, r3, r8, ror #7
   1e3d4:	eor	r3, r3, r8, lsr #3
   1e3d8:	ldr	sl, [sp, #24]
   1e3dc:	add	r3, r3, sl
   1e3e0:	ldr	sl, [sp, #4]
   1e3e4:	add	r3, r3, sl
   1e3e8:	add	r7, r7, r3
   1e3ec:	str	r7, [sp, #124]	; 0x7c
   1e3f0:	eor	r8, r0, r1
   1e3f4:	and	r8, r8, r2
   1e3f8:	eor	r8, r8, r0
   1e3fc:	ldr	r3, [pc, #-3400]	; 1d6bc <__assert_fail@plt+0xc3d0>
   1e400:	add	r3, r7, r3
   1e404:	add	r3, r3, ip
   1e408:	add	r3, r8, r3
   1e40c:	ror	ip, r2, #11
   1e410:	eor	ip, ip, r2, ror #6
   1e414:	eor	ip, ip, r2, ror #25
   1e418:	add	r3, r3, ip
   1e41c:	add	r9, r9, r3
   1e420:	ror	ip, lr, #13
   1e424:	eor	ip, ip, lr, ror #2
   1e428:	eor	ip, ip, lr, ror #22
   1e42c:	orr	r8, r6, lr
   1e430:	and	r8, r8, r4
   1e434:	and	sl, r6, lr
   1e438:	orr	r8, r8, sl
   1e43c:	add	ip, ip, r8
   1e440:	add	ip, ip, r3
   1e444:	ror	r3, r5, #19
   1e448:	eor	r3, r3, r5, ror #17
   1e44c:	eor	r5, r3, r5, lsr #10
   1e450:	ldr	sl, [sp, #32]
   1e454:	ror	r3, sl, #18
   1e458:	eor	r3, r3, sl, ror #7
   1e45c:	eor	r3, r3, sl, lsr #3
   1e460:	ldr	r8, [sp, #28]
   1e464:	add	r3, r3, r8
   1e468:	ldr	r8, [sp, #8]
   1e46c:	add	r3, r3, r8
   1e470:	add	r5, r5, r3
   1e474:	str	r5, [sp, #128]	; 0x80
   1e478:	eor	r8, r1, r2
   1e47c:	and	r8, r8, r9
   1e480:	eor	r8, r8, r1
   1e484:	ldr	r3, [pc, #-3532]	; 1d6c0 <__assert_fail@plt+0xc3d4>
   1e488:	add	r3, r5, r3
   1e48c:	add	r0, r3, r0
   1e490:	add	r0, r8, r0
   1e494:	ror	r3, r9, #11
   1e498:	eor	r3, r3, r9, ror #6
   1e49c:	eor	r3, r3, r9, ror #25
   1e4a0:	add	r0, r0, r3
   1e4a4:	add	r4, r4, r0
   1e4a8:	ror	r3, ip, #13
   1e4ac:	eor	r3, r3, ip, ror #2
   1e4b0:	eor	r3, r3, ip, ror #22
   1e4b4:	orr	r8, lr, ip
   1e4b8:	and	r8, r8, r6
   1e4bc:	and	sl, lr, ip
   1e4c0:	orr	r8, r8, sl
   1e4c4:	add	r8, r3, r8
   1e4c8:	add	r0, r8, r0
   1e4cc:	ror	r3, r7, #19
   1e4d0:	eor	r3, r3, r7, ror #17
   1e4d4:	eor	r7, r3, r7, lsr #10
   1e4d8:	ldr	r8, [sp, #36]	; 0x24
   1e4dc:	ror	sl, r8, #18
   1e4e0:	eor	sl, sl, r8, ror #7
   1e4e4:	eor	sl, sl, r8, lsr #3
   1e4e8:	ldr	r3, [sp, #32]
   1e4ec:	add	sl, sl, r3
   1e4f0:	ldr	r3, [sp, #52]	; 0x34
   1e4f4:	add	sl, sl, r3
   1e4f8:	add	r7, r7, sl
   1e4fc:	str	r7, [sp, #132]	; 0x84
   1e500:	eor	r8, r2, r9
   1e504:	and	r8, r8, r4
   1e508:	eor	r8, r8, r2
   1e50c:	ldr	r3, [pc, #-3664]	; 1d6c4 <__assert_fail@plt+0xc3d8>
   1e510:	add	r3, r7, r3
   1e514:	add	r3, r3, r1
   1e518:	add	r3, r8, r3
   1e51c:	ror	r1, r4, #11
   1e520:	eor	r1, r1, r4, ror #6
   1e524:	eor	r1, r1, r4, ror #25
   1e528:	add	r3, r3, r1
   1e52c:	add	r6, r6, r3
   1e530:	ror	r1, r0, #13
   1e534:	eor	r1, r1, r0, ror #2
   1e538:	eor	r1, r1, r0, ror #22
   1e53c:	orr	r8, ip, r0
   1e540:	and	r8, r8, lr
   1e544:	and	sl, ip, r0
   1e548:	orr	r8, r8, sl
   1e54c:	add	r1, r1, r8
   1e550:	add	r1, r1, r3
   1e554:	ror	r3, r5, #19
   1e558:	eor	r3, r3, r5, ror #17
   1e55c:	eor	r5, r3, r5, lsr #10
   1e560:	ldr	sl, [sp, #40]	; 0x28
   1e564:	ror	r3, sl, #18
   1e568:	eor	r3, r3, sl, ror #7
   1e56c:	eor	r3, r3, sl, lsr #3
   1e570:	ldr	r8, [sp, #36]	; 0x24
   1e574:	add	r3, r3, r8
   1e578:	ldr	r8, [sp, #12]
   1e57c:	add	r3, r3, r8
   1e580:	add	r5, r3, r5
   1e584:	str	r5, [sp, #136]	; 0x88
   1e588:	eor	r8, r9, r4
   1e58c:	and	r8, r8, r6
   1e590:	eor	r8, r8, r9
   1e594:	ldr	r3, [pc, #-3796]	; 1d6c8 <__assert_fail@plt+0xc3dc>
   1e598:	add	r3, r5, r3
   1e59c:	add	r3, r3, r2
   1e5a0:	add	r3, r8, r3
   1e5a4:	ror	r2, r6, #11
   1e5a8:	eor	r2, r2, r6, ror #6
   1e5ac:	eor	r2, r2, r6, ror #25
   1e5b0:	add	r3, r3, r2
   1e5b4:	add	lr, lr, r3
   1e5b8:	ror	r2, r1, #13
   1e5bc:	eor	r2, r2, r1, ror #2
   1e5c0:	eor	r2, r2, r1, ror #22
   1e5c4:	orr	r5, r0, r1
   1e5c8:	and	r5, r5, ip
   1e5cc:	and	r8, r0, r1
   1e5d0:	orr	r5, r5, r8
   1e5d4:	add	r2, r2, r5
   1e5d8:	add	r3, r2, r3
   1e5dc:	ror	r2, r7, #19
   1e5e0:	eor	r2, r2, r7, ror #17
   1e5e4:	eor	r7, r2, r7, lsr #10
   1e5e8:	ldr	r2, [sp, #44]	; 0x2c
   1e5ec:	ror	r5, r2, #18
   1e5f0:	eor	r5, r5, r2, ror #7
   1e5f4:	eor	r5, r5, r2, lsr #3
   1e5f8:	add	r5, r5, sl
   1e5fc:	add	sl, r5, fp
   1e600:	add	r7, sl, r7
   1e604:	str	r7, [sp, #140]	; 0x8c
   1e608:	eor	r8, r4, r6
   1e60c:	and	r8, r8, lr
   1e610:	eor	r8, r8, r4
   1e614:	ldr	r2, [pc, #-3920]	; 1d6cc <__assert_fail@plt+0xc3e0>
   1e618:	add	r2, r7, r2
   1e61c:	add	r9, r2, r9
   1e620:	add	r8, r8, r9
   1e624:	ror	r2, lr, #11
   1e628:	eor	r2, r2, lr, ror #6
   1e62c:	eor	r2, r2, lr, ror #25
   1e630:	add	r8, r8, r2
   1e634:	ror	r7, r3, #13
   1e638:	eor	r7, r7, r3, ror #2
   1e63c:	eor	r7, r7, r3, ror #22
   1e640:	orr	r2, r1, r3
   1e644:	and	r2, r2, r0
   1e648:	and	r5, r1, r3
   1e64c:	orr	r2, r2, r5
   1e650:	add	r7, r7, r2
   1e654:	ldr	r5, [sp, #76]	; 0x4c
   1e658:	ldr	r2, [r5]
   1e65c:	add	r7, r7, r2
   1e660:	add	r7, r7, r8
   1e664:	str	r7, [r5]
   1e668:	ldr	r2, [r5, #4]
   1e66c:	add	r2, r3, r2
   1e670:	mov	r3, r5
   1e674:	str	r2, [r5, #4]
   1e678:	ldr	fp, [r5, #8]
   1e67c:	add	fp, r1, fp
   1e680:	str	fp, [r5, #8]
   1e684:	mov	r1, r5
   1e688:	ldr	r5, [r5, #12]
   1e68c:	add	r0, r0, r5
   1e690:	str	r0, [r3, #12]
   1e694:	ldr	r3, [r3, #16]
   1e698:	add	ip, ip, r3
   1e69c:	add	ip, ip, r8
   1e6a0:	str	ip, [r1, #16]
   1e6a4:	ldr	r3, [r1, #20]
   1e6a8:	add	lr, lr, r3
   1e6ac:	str	lr, [r1, #20]
   1e6b0:	ldr	r3, [r1, #24]
   1e6b4:	add	r6, r6, r3
   1e6b8:	str	r6, [r1, #24]
   1e6bc:	ldr	r3, [r1, #28]
   1e6c0:	add	r4, r4, r3
   1e6c4:	str	r4, [r1, #28]
   1e6c8:	ldr	r1, [sp, #72]	; 0x48
   1e6cc:	ldr	r3, [sp, #68]	; 0x44
   1e6d0:	cmp	r1, r3
   1e6d4:	bhi	1c558 <__assert_fail@plt+0xb26c>
   1e6d8:	add	sp, sp, #148	; 0x94
   1e6dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6e0:	push	{r4, r5, r6, lr}
   1e6e4:	mov	r4, r0
   1e6e8:	ldr	r0, [r0, #40]	; 0x28
   1e6ec:	cmp	r0, #55	; 0x37
   1e6f0:	movls	r5, #16
   1e6f4:	movhi	r5, #32
   1e6f8:	ldr	r3, [r4, #32]
   1e6fc:	add	r3, r0, r3
   1e700:	str	r3, [r4, #32]
   1e704:	cmp	r0, r3
   1e708:	ldrhi	r2, [r4, #36]	; 0x24
   1e70c:	addhi	r2, r2, #1
   1e710:	strhi	r2, [r4, #36]	; 0x24
   1e714:	ldr	r1, [r4, #36]	; 0x24
   1e718:	lsr	r2, r3, #29
   1e71c:	orr	r2, r2, r1, lsl #3
   1e720:	rev	r2, r2
   1e724:	add	r1, r4, r5, lsl #2
   1e728:	str	r2, [r1, #36]	; 0x24
   1e72c:	lsl	r3, r3, #3
   1e730:	rev	r3, r3
   1e734:	str	r3, [r1, #40]	; 0x28
   1e738:	add	r6, r4, #44	; 0x2c
   1e73c:	sub	r5, r5, #-1073741822	; 0xc0000002
   1e740:	lsl	r5, r5, #2
   1e744:	sub	r2, r5, r0
   1e748:	ldr	r1, [pc, #24]	; 1e768 <__assert_fail@plt+0xd47c>
   1e74c:	add	r0, r6, r0
   1e750:	bl	11058 <memcpy@plt>
   1e754:	mov	r2, r4
   1e758:	add	r1, r5, #8
   1e75c:	mov	r0, r6
   1e760:	bl	1c4d8 <__assert_fail@plt+0xb1ec>
   1e764:	pop	{r4, r5, r6, pc}
   1e768:	andeq	r9, r3, ip, lsr #17
   1e76c:	push	{r4, r5, r6, lr}
   1e770:	mov	r4, r0
   1e774:	mov	r5, r1
   1e778:	bl	1e6e0 <__assert_fail@plt+0xd3f4>
   1e77c:	mov	r1, r5
   1e780:	mov	r0, r4
   1e784:	bl	1c480 <__assert_fail@plt+0xb194>
   1e788:	pop	{r4, r5, r6, pc}
   1e78c:	push	{r4, r5, r6, lr}
   1e790:	mov	r4, r0
   1e794:	mov	r5, r1
   1e798:	bl	1e6e0 <__assert_fail@plt+0xd3f4>
   1e79c:	mov	r1, r5
   1e7a0:	mov	r0, r4
   1e7a4:	bl	1c4ac <__assert_fail@plt+0xb1c0>
   1e7a8:	pop	{r4, r5, r6, pc}
   1e7ac:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e7b0:	mov	r8, r0
   1e7b4:	mov	r5, r1
   1e7b8:	mov	r6, r2
   1e7bc:	ldr	r4, [r2, #40]	; 0x28
   1e7c0:	cmp	r4, #0
   1e7c4:	bne	1e89c <__assert_fail@plt+0xd5b0>
   1e7c8:	cmp	r5, #63	; 0x3f
   1e7cc:	bls	1e868 <__assert_fail@plt+0xd57c>
   1e7d0:	tst	r8, #3
   1e7d4:	beq	1e910 <__assert_fail@plt+0xd624>
   1e7d8:	cmp	r5, #64	; 0x40
   1e7dc:	bls	1e868 <__assert_fail@plt+0xd57c>
   1e7e0:	mov	r9, r5
   1e7e4:	mov	r4, r8
   1e7e8:	add	r7, r6, #44	; 0x2c
   1e7ec:	mov	sl, #64	; 0x40
   1e7f0:	mov	r3, r4
   1e7f4:	mov	r2, r7
   1e7f8:	add	r1, r4, #64	; 0x40
   1e7fc:	ldr	fp, [r3]
   1e800:	ldr	lr, [r3, #4]
   1e804:	ldr	ip, [r3, #8]
   1e808:	ldr	r0, [r3, #12]
   1e80c:	str	fp, [r2]
   1e810:	str	lr, [r2, #4]
   1e814:	str	ip, [r2, #8]
   1e818:	str	r0, [r2, #12]
   1e81c:	add	r3, r3, #16
   1e820:	add	r2, r2, #16
   1e824:	cmp	r3, r1
   1e828:	bne	1e7fc <__assert_fail@plt+0xd510>
   1e82c:	mov	r2, r6
   1e830:	mov	r1, sl
   1e834:	mov	r0, r7
   1e838:	bl	1c4d8 <__assert_fail@plt+0xb1ec>
   1e83c:	add	r4, r4, #64	; 0x40
   1e840:	sub	r9, r9, #64	; 0x40
   1e844:	cmp	r9, #64	; 0x40
   1e848:	bhi	1e7f0 <__assert_fail@plt+0xd504>
   1e84c:	sub	r3, r5, #65	; 0x41
   1e850:	bic	r2, r3, #63	; 0x3f
   1e854:	add	r2, r2, #64	; 0x40
   1e858:	add	r8, r8, r2
   1e85c:	sub	r5, r5, #64	; 0x40
   1e860:	bic	r3, r3, #63	; 0x3f
   1e864:	sub	r5, r5, r3
   1e868:	cmp	r5, #0
   1e86c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e870:	ldr	r4, [r6, #40]	; 0x28
   1e874:	add	r7, r6, #44	; 0x2c
   1e878:	mov	r2, r5
   1e87c:	mov	r1, r8
   1e880:	add	r0, r7, r4
   1e884:	bl	11058 <memcpy@plt>
   1e888:	add	r5, r5, r4
   1e88c:	cmp	r5, #63	; 0x3f
   1e890:	bhi	1e930 <__assert_fail@plt+0xd644>
   1e894:	str	r5, [r6, #40]	; 0x28
   1e898:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e89c:	rsb	r7, r4, #128	; 0x80
   1e8a0:	cmp	r7, r1
   1e8a4:	movcs	r7, r1
   1e8a8:	add	r9, r2, #44	; 0x2c
   1e8ac:	mov	r2, r7
   1e8b0:	mov	r1, r0
   1e8b4:	add	r0, r9, r4
   1e8b8:	bl	11058 <memcpy@plt>
   1e8bc:	ldr	r1, [r6, #40]	; 0x28
   1e8c0:	add	r1, r7, r1
   1e8c4:	str	r1, [r6, #40]	; 0x28
   1e8c8:	cmp	r1, #64	; 0x40
   1e8cc:	bhi	1e8dc <__assert_fail@plt+0xd5f0>
   1e8d0:	add	r8, r8, r7
   1e8d4:	sub	r5, r5, r7
   1e8d8:	b	1e7c8 <__assert_fail@plt+0xd4dc>
   1e8dc:	mov	r2, r6
   1e8e0:	bic	r1, r1, #63	; 0x3f
   1e8e4:	mov	r0, r9
   1e8e8:	bl	1c4d8 <__assert_fail@plt+0xb1ec>
   1e8ec:	ldr	r2, [r6, #40]	; 0x28
   1e8f0:	and	r2, r2, #63	; 0x3f
   1e8f4:	str	r2, [r6, #40]	; 0x28
   1e8f8:	add	r1, r4, r7
   1e8fc:	bic	r1, r1, #63	; 0x3f
   1e900:	add	r1, r9, r1
   1e904:	mov	r0, r9
   1e908:	bl	11058 <memcpy@plt>
   1e90c:	b	1e8d0 <__assert_fail@plt+0xd5e4>
   1e910:	bic	r4, r5, #63	; 0x3f
   1e914:	mov	r2, r6
   1e918:	mov	r1, r4
   1e91c:	mov	r0, r8
   1e920:	bl	1c4d8 <__assert_fail@plt+0xb1ec>
   1e924:	add	r8, r8, r4
   1e928:	and	r5, r5, #63	; 0x3f
   1e92c:	b	1e868 <__assert_fail@plt+0xd57c>
   1e930:	mov	r2, r6
   1e934:	mov	r1, #64	; 0x40
   1e938:	mov	r0, r7
   1e93c:	bl	1c4d8 <__assert_fail@plt+0xb1ec>
   1e940:	sub	r5, r5, #64	; 0x40
   1e944:	mov	r2, r5
   1e948:	add	r1, r6, #108	; 0x6c
   1e94c:	mov	r0, r7
   1e950:	bl	11058 <memcpy@plt>
   1e954:	b	1e894 <__assert_fail@plt+0xd5a8>
   1e958:	push	{r4, r5, r6, lr}
   1e95c:	sub	sp, sp, #176	; 0xb0
   1e960:	mov	r5, r0
   1e964:	mov	r6, r1
   1e968:	mov	r4, r2
   1e96c:	add	r0, sp, #4
   1e970:	bl	1c398 <__assert_fail@plt+0xb0ac>
   1e974:	add	r2, sp, #4
   1e978:	mov	r1, r6
   1e97c:	mov	r0, r5
   1e980:	bl	1e7ac <__assert_fail@plt+0xd4c0>
   1e984:	mov	r1, r4
   1e988:	add	r0, sp, #4
   1e98c:	bl	1e76c <__assert_fail@plt+0xd480>
   1e990:	add	sp, sp, #176	; 0xb0
   1e994:	pop	{r4, r5, r6, pc}
   1e998:	push	{r4, r5, r6, lr}
   1e99c:	sub	sp, sp, #176	; 0xb0
   1e9a0:	mov	r5, r0
   1e9a4:	mov	r6, r1
   1e9a8:	mov	r4, r2
   1e9ac:	add	r0, sp, #4
   1e9b0:	bl	1c40c <__assert_fail@plt+0xb120>
   1e9b4:	add	r2, sp, #4
   1e9b8:	mov	r1, r6
   1e9bc:	mov	r0, r5
   1e9c0:	bl	1e7ac <__assert_fail@plt+0xd4c0>
   1e9c4:	mov	r1, r4
   1e9c8:	add	r0, sp, #4
   1e9cc:	bl	1e78c <__assert_fail@plt+0xd4a0>
   1e9d0:	add	sp, sp, #176	; 0xb0
   1e9d4:	pop	{r4, r5, r6, pc}
   1e9d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   1e9dc:	sub	sp, sp, #348	; 0x15c
   1e9e0:	mov	r5, r0
   1e9e4:	mov	r8, r2
   1e9e8:	ldr	r0, [pc, #200]	; 1eab8 <__assert_fail@plt+0xd7cc>
   1e9ec:	bl	3562c <__assert_fail@plt+0x24340>
   1e9f0:	subs	r6, r0, #0
   1e9f4:	moveq	r0, #1
   1e9f8:	beq	1ea78 <__assert_fail@plt+0xd78c>
   1e9fc:	mov	r0, sp
   1ea00:	ldr	r3, [sp, #376]	; 0x178
   1ea04:	blx	r3
   1ea08:	mov	r7, #1
   1ea0c:	mov	r9, #32768	; 0x8000
   1ea10:	mov	r4, #0
   1ea14:	ldr	r3, [r5]
   1ea18:	tst	r3, #16
   1ea1c:	bne	1ea54 <__assert_fail@plt+0xd768>
   1ea20:	mov	r3, r5
   1ea24:	rsb	r2, r4, #32768	; 0x8000
   1ea28:	mov	r1, r7
   1ea2c:	add	r0, r6, r4
   1ea30:	bl	112b0 <fread_unlocked@plt>
   1ea34:	add	r4, r4, r0
   1ea38:	cmp	r4, #32768	; 0x8000
   1ea3c:	beq	1ea90 <__assert_fail@plt+0xd7a4>
   1ea40:	cmp	r0, #0
   1ea44:	bne	1ea14 <__assert_fail@plt+0xd728>
   1ea48:	ldr	r3, [r5]
   1ea4c:	tst	r3, #32
   1ea50:	bne	1ea80 <__assert_fail@plt+0xd794>
   1ea54:	cmp	r4, #0
   1ea58:	bne	1eaa4 <__assert_fail@plt+0xd7b8>
   1ea5c:	mov	r1, r8
   1ea60:	mov	r0, sp
   1ea64:	ldr	r3, [sp, #380]	; 0x17c
   1ea68:	blx	r3
   1ea6c:	mov	r0, r6
   1ea70:	bl	31c0c <__assert_fail@plt+0x20920>
   1ea74:	mov	r0, #0
   1ea78:	add	sp, sp, #348	; 0x15c
   1ea7c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ea80:	mov	r0, r6
   1ea84:	bl	31c0c <__assert_fail@plt+0x20920>
   1ea88:	mov	r0, #1
   1ea8c:	b	1ea78 <__assert_fail@plt+0xd78c>
   1ea90:	mov	r2, sp
   1ea94:	mov	r1, r9
   1ea98:	mov	r0, r6
   1ea9c:	bl	1ed68 <__assert_fail@plt+0xda7c>
   1eaa0:	b	1ea10 <__assert_fail@plt+0xd724>
   1eaa4:	mov	r2, sp
   1eaa8:	mov	r1, r4
   1eaac:	mov	r0, r6
   1eab0:	bl	2ed08 <__assert_fail@plt+0x1da1c>
   1eab4:	b	1ea5c <__assert_fail@plt+0xd770>
   1eab8:	andeq	r8, r0, r8, asr #32
   1eabc:	push	{lr}		; (str lr, [sp, #-4]!)
   1eac0:	sub	sp, sp, #12
   1eac4:	ldr	r3, [pc, #32]	; 1eaec <__assert_fail@plt+0xd800>
   1eac8:	str	r3, [sp, #4]
   1eacc:	ldr	r3, [pc, #28]	; 1eaf0 <__assert_fail@plt+0xd804>
   1ead0:	str	r3, [sp]
   1ead4:	mov	r3, #64	; 0x40
   1ead8:	mov	r2, r1
   1eadc:	ldr	r1, [pc, #16]	; 1eaf4 <__assert_fail@plt+0xd808>
   1eae0:	bl	1e9d8 <__assert_fail@plt+0xd6ec>
   1eae4:	add	sp, sp, #12
   1eae8:	pop	{pc}		; (ldr pc, [sp], #4)
   1eaec:	andeq	lr, r2, r8, asr #25
   1eaf0:	andeq	lr, r1, r8, lsr fp
   1eaf4:	andeq	r7, r3, r8, lsl r7
   1eaf8:	push	{lr}		; (str lr, [sp, #-4]!)
   1eafc:	sub	sp, sp, #12
   1eb00:	ldr	r3, [pc, #32]	; 1eb28 <__assert_fail@plt+0xd83c>
   1eb04:	str	r3, [sp, #4]
   1eb08:	ldr	r3, [pc, #28]	; 1eb2c <__assert_fail@plt+0xd840>
   1eb0c:	str	r3, [sp]
   1eb10:	mov	r3, #48	; 0x30
   1eb14:	mov	r2, r1
   1eb18:	ldr	r1, [pc, #16]	; 1eb30 <__assert_fail@plt+0xd844>
   1eb1c:	bl	1e9d8 <__assert_fail@plt+0xd6ec>
   1eb20:	add	sp, sp, #12
   1eb24:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb28:	andeq	lr, r2, r8, ror #25
   1eb2c:	strdeq	lr, [r1], -r8
   1eb30:	andeq	r7, r3, r0, lsl r7
   1eb34:	andeq	r0, r0, r0
   1eb38:	add	r3, pc, #120	; 0x78
   1eb3c:	ldrd	r2, [r3]
   1eb40:	strd	r2, [r0]
   1eb44:	add	r3, pc, #116	; 0x74
   1eb48:	ldrd	r2, [r3]
   1eb4c:	strd	r2, [r0, #8]
   1eb50:	add	r3, pc, #112	; 0x70
   1eb54:	ldrd	r2, [r3]
   1eb58:	strd	r2, [r0, #16]
   1eb5c:	add	r3, pc, #108	; 0x6c
   1eb60:	ldrd	r2, [r3]
   1eb64:	strd	r2, [r0, #24]
   1eb68:	add	r3, pc, #104	; 0x68
   1eb6c:	ldrd	r2, [r3]
   1eb70:	strd	r2, [r0, #32]
   1eb74:	add	r3, pc, #100	; 0x64
   1eb78:	ldrd	r2, [r3]
   1eb7c:	strd	r2, [r0, #40]	; 0x28
   1eb80:	add	r3, pc, #96	; 0x60
   1eb84:	ldrd	r2, [r3]
   1eb88:	strd	r2, [r0, #48]	; 0x30
   1eb8c:	add	r3, pc, #92	; 0x5c
   1eb90:	ldrd	r2, [r3]
   1eb94:	strd	r2, [r0, #56]	; 0x38
   1eb98:	mov	r2, #0
   1eb9c:	mov	r3, #0
   1eba0:	strd	r2, [r0, #72]	; 0x48
   1eba4:	strd	r2, [r0, #64]	; 0x40
   1eba8:	mov	r3, #0
   1ebac:	str	r3, [r0, #80]	; 0x50
   1ebb0:	bx	lr
   1ebb4:	nop			; (mov r0, r0)
   1ebb8:	vtbl.8	d12, {d12-d13}, d8
   1ebbc:	bvs	298560 <optarg@@GLIBC_2.4+0x24e3b8>
   1ebc0:	strbhi	sl, [sl], #1851	; 0x73b
   1ebc4:	bllt	1a0a5e0 <optarg@@GLIBC_2.4+0x19c0438>
   1ebc8:	vcmla.f32	d15, d4, d27[0], #90
   1ebcc:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   1ebd0:	svcpl	0x001d36f1
   1ebd4:	strbge	pc, [pc, #-1338]	; 1e6a2 <__assert_fail@plt+0xd3b6>	; <UNPREDICTABLE>
   1ebd8:	sfmge	f0, 3, [r6, #836]!	; 0x344
   1ebdc:	tstpl	lr, pc, ror r2
   1ebe0:	blcs	fb9c64 <optarg@@GLIBC_2.4+0xf6fabc>
   1ebe4:	blls	178e1c <optarg@@GLIBC_2.4+0x12ec74>
   1ebe8:	blx	108e19e <optarg@@GLIBC_2.4+0x1043ff6>
   1ebec:	svcne	0x0083d9ab
   1ebf0:	cmnne	lr, #1073741854	; 0x4000001e
   1ebf4:	blpl	ff852060 <optarg@@GLIBC_2.4+0xff807eb8>
   1ebf8:	add	r3, pc, #120	; 0x78
   1ebfc:	ldrd	r2, [r3]
   1ec00:	strd	r2, [r0]
   1ec04:	add	r3, pc, #116	; 0x74
   1ec08:	ldrd	r2, [r3]
   1ec0c:	strd	r2, [r0, #8]
   1ec10:	add	r3, pc, #112	; 0x70
   1ec14:	ldrd	r2, [r3]
   1ec18:	strd	r2, [r0, #16]
   1ec1c:	add	r3, pc, #108	; 0x6c
   1ec20:	ldrd	r2, [r3]
   1ec24:	strd	r2, [r0, #24]
   1ec28:	add	r3, pc, #104	; 0x68
   1ec2c:	ldrd	r2, [r3]
   1ec30:	strd	r2, [r0, #32]
   1ec34:	add	r3, pc, #100	; 0x64
   1ec38:	ldrd	r2, [r3]
   1ec3c:	strd	r2, [r0, #40]	; 0x28
   1ec40:	add	r3, pc, #96	; 0x60
   1ec44:	ldrd	r2, [r3]
   1ec48:	strd	r2, [r0, #48]	; 0x30
   1ec4c:	add	r3, pc, #92	; 0x5c
   1ec50:	ldrd	r2, [r3]
   1ec54:	strd	r2, [r0, #56]	; 0x38
   1ec58:	mov	r2, #0
   1ec5c:	mov	r3, #0
   1ec60:	strd	r2, [r0, #72]	; 0x48
   1ec64:	strd	r2, [r0, #64]	; 0x40
   1ec68:	mov	r3, #0
   1ec6c:	str	r3, [r0, #80]	; 0x50
   1ec70:	bx	lr
   1ec74:	nop			; (mov r0, r0)
   1ec78:	ldrdgt	r9, [r5, -r8]
   1ec7c:	blgt	fef061f8 <optarg@@GLIBC_2.4+0xfeebc050>
   1ec80:	ldrbtcc	sp, [ip], -r7, lsl #10
   1ec84:	addsvs	r2, sl, #688128	; 0xa8000
   1ec88:	rsbscc	sp, r0, r7, lsl sp
   1ec8c:	cmpls	r9, sl, asr r1
   1ec90:			; <UNDEFINED> instruction: 0xf70e5939
   1ec94:	strne	lr, [pc, #-3288]!	; 1dfc4 <__assert_fail@plt+0xccd8>
   1ec98:			; <UNDEFINED> instruction: 0xffc00b31
   1ec9c:	ldrvs	r2, [r3, -r7, ror #12]!
   1eca0:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   1eca4:			; <UNDEFINED> instruction: 0x8eb44a87
   1eca8:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   1ecac:	blle	32a4e8 <optarg@@GLIBC_2.4+0x2e0340>
   1ecb0:	cdplt	15, 15, cr4, cr10, cr4, {5}
   1ecb4:			; <UNDEFINED> instruction: 0x47b5481d
   1ecb8:	push	{r4, lr}
   1ecbc:	sub	sp, sp, #8
   1ecc0:	mov	r4, r1
   1ecc4:	sub	ip, r0, #8
   1ecc8:	mov	r2, r1
   1eccc:	add	lr, r0, #56	; 0x38
   1ecd0:	ldr	r3, [ip, #8]!
   1ecd4:	rev	r3, r3
   1ecd8:	ldr	r1, [ip, #4]
   1ecdc:	rev	r1, r1
   1ece0:	str	r1, [sp]
   1ece4:	str	r3, [sp, #4]
   1ece8:	mov	r3, sp
   1ecec:	ldm	r3!, {r0, r1}
   1ecf0:	str	r0, [r2]
   1ecf4:	str	r1, [r2, #4]
   1ecf8:	add	r2, r2, #8
   1ecfc:	cmp	ip, lr
   1ed00:	bne	1ecd0 <__assert_fail@plt+0xd9e4>
   1ed04:	mov	r0, r4
   1ed08:	add	sp, sp, #8
   1ed0c:	pop	{r4, pc}
   1ed10:	push	{r4, lr}
   1ed14:	sub	sp, sp, #8
   1ed18:	mov	r4, r1
   1ed1c:	sub	ip, r0, #8
   1ed20:	mov	r2, r1
   1ed24:	add	lr, r0, #40	; 0x28
   1ed28:	ldr	r3, [ip, #8]!
   1ed2c:	rev	r3, r3
   1ed30:	ldr	r1, [ip, #4]
   1ed34:	rev	r1, r1
   1ed38:	str	r1, [sp]
   1ed3c:	str	r3, [sp, #4]
   1ed40:	mov	r3, sp
   1ed44:	ldm	r3!, {r0, r1}
   1ed48:	str	r0, [r2]
   1ed4c:	str	r1, [r2, #4]
   1ed50:	add	r2, r2, #8
   1ed54:	cmp	ip, lr
   1ed58:	bne	1ed28 <__assert_fail@plt+0xda3c>
   1ed5c:	mov	r0, r4
   1ed60:	add	sp, sp, #8
   1ed64:	pop	{r4, pc}
   1ed68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed6c:	sub	sp, sp, #7232	; 0x1c40
   1ed70:	sub	sp, sp, #20
   1ed74:	mov	lr, r2
   1ed78:	bic	r3, r1, #7
   1ed7c:	add	r3, r0, r3
   1ed80:	mov	ip, r3
   1ed84:	add	r3, sp, #7104	; 0x1bc0
   1ed88:	add	r3, r3, #12
   1ed8c:	str	ip, [r3]
   1ed90:	ldrd	r2, [r2]
   1ed94:	strd	r2, [sp, #8]
   1ed98:	ldrd	r2, [lr, #8]
   1ed9c:	strd	r2, [sp, #48]	; 0x30
   1eda0:	ldrd	r2, [lr, #16]
   1eda4:	strd	r2, [sp, #16]
   1eda8:	ldrd	r2, [lr, #24]
   1edac:	strd	r2, [sp]
   1edb0:	ldrd	sl, [lr, #32]
   1edb4:	ldrd	r2, [lr, #40]	; 0x28
   1edb8:	strd	r2, [sp, #40]	; 0x28
   1edbc:	ldrd	r8, [lr, #48]	; 0x30
   1edc0:	ldrd	r6, [lr, #56]	; 0x38
   1edc4:	mov	r5, #0
   1edc8:	ldrd	r2, [lr, #64]	; 0x40
   1edcc:	adds	r2, r2, r1
   1edd0:	adc	r3, r3, r5
   1edd4:	strd	r2, [lr, #64]	; 0x40
   1edd8:	cmp	r5, r3
   1eddc:	cmpeq	r1, r2
   1ede0:	movhi	r1, #1
   1ede4:	movls	r1, #0
   1ede8:	ldrd	r2, [lr, #72]	; 0x48
   1edec:	adds	r2, r2, r1
   1edf0:	adc	r3, r3, #0
   1edf4:	strd	r2, [lr, #72]	; 0x48
   1edf8:	cmp	r0, ip
   1edfc:	bcs	2ebb0 <__assert_fail@plt+0x1d8c4>
   1ee00:	add	r3, sp, #7104	; 0x1bc0
   1ee04:	add	r3, r3, #8
   1ee08:	str	r0, [r3]
   1ee0c:	ldrd	r4, [sp, #8]
   1ee10:	add	r3, sp, #7104	; 0x1bc0
   1ee14:	add	r3, r3, #8
   1ee18:	ldr	r1, [r3]
   1ee1c:	sub	r2, r1, #8
   1ee20:	add	r3, sp, #7104	; 0x1bc0
   1ee24:	add	r3, r3, #16
   1ee28:	add	ip, r1, #120	; 0x78
   1ee2c:	ldr	r1, [r2, #8]!
   1ee30:	rev	r1, r1
   1ee34:	ldr	r0, [r2, #4]
   1ee38:	rev	r0, r0
   1ee3c:	str	r0, [r3]
   1ee40:	str	r1, [r3, #4]
   1ee44:	add	r3, r3, #8
   1ee48:	cmp	r2, ip
   1ee4c:	bne	1ee2c <__assert_fail@plt+0xdb40>
   1ee50:	add	r3, sp, #7104	; 0x1bc0
   1ee54:	add	r3, r3, #8
   1ee58:	ldr	r3, [r3]
   1ee5c:	add	r3, r3, #128	; 0x80
   1ee60:	add	r2, sp, #7104	; 0x1bc0
   1ee64:	add	r2, r2, #8
   1ee68:	str	r3, [r2]
   1ee6c:	lsr	r3, sl, #14
   1ee70:	orr	r2, r3, fp, lsl #18
   1ee74:	str	r2, [sp, #1224]	; 0x4c8
   1ee78:	lsr	r3, fp, #14
   1ee7c:	orr	r2, r3, sl, lsl #18
   1ee80:	str	r2, [sp, #1228]	; 0x4cc
   1ee84:	lsr	r3, sl, #18
   1ee88:	orr	r2, r3, fp, lsl #14
   1ee8c:	str	r2, [sp, #1232]	; 0x4d0
   1ee90:	lsr	r3, fp, #18
   1ee94:	orr	r2, r3, sl, lsl #14
   1ee98:	str	r2, [sp, #1236]	; 0x4d4
   1ee9c:	add	r3, sp, #1216	; 0x4c0
   1eea0:	add	r3, r3, #8
   1eea4:	ldrd	r2, [r3]
   1eea8:	add	r1, sp, #1232	; 0x4d0
   1eeac:	ldrd	r0, [r1]
   1eeb0:	eor	r2, r2, r0
   1eeb4:	eor	r3, r3, r1
   1eeb8:	lsl	r1, fp, #23
   1eebc:	orr	r1, r1, sl, lsr #9
   1eec0:	str	r1, [sp, #1244]	; 0x4dc
   1eec4:	lsl	r1, sl, #23
   1eec8:	orr	r1, r1, fp, lsr #9
   1eecc:	str	r1, [sp, #1240]	; 0x4d8
   1eed0:	add	r1, sp, #1232	; 0x4d0
   1eed4:	add	r1, r1, #8
   1eed8:	ldrd	r0, [r1]
   1eedc:	eor	r0, r0, r2
   1eee0:	eor	r1, r1, r3
   1eee4:	strd	r0, [sp, #8]
   1eee8:	add	r3, sp, #7104	; 0x1bc0
   1eeec:	add	r3, r3, #16
   1eef0:	ldrd	r0, [r3]
   1eef4:	add	r3, pc, #868	; 0x364
   1eef8:	ldrd	r2, [r3]
   1eefc:	adds	r0, r0, r2
   1ef00:	adc	r1, r1, r3
   1ef04:	adds	r0, r0, r6
   1ef08:	adc	r1, r1, r7
   1ef0c:	ldrd	r2, [sp, #8]
   1ef10:	adds	r2, r2, r0
   1ef14:	adc	r3, r3, r1
   1ef18:	ldrd	r0, [sp, #40]	; 0x28
   1ef1c:	eor	r0, r0, r8
   1ef20:	eor	r1, r1, r9
   1ef24:	and	r0, r0, sl
   1ef28:	and	r1, r1, fp
   1ef2c:	eor	r0, r0, r8
   1ef30:	eor	r1, r1, r9
   1ef34:	adds	r6, r2, r0
   1ef38:	adc	r7, r3, r1
   1ef3c:	ldrd	r2, [sp]
   1ef40:	strd	r6, [sp, #8]
   1ef44:	adds	r0, r6, r2
   1ef48:	adc	r1, r7, r3
   1ef4c:	mov	r2, r0
   1ef50:	mov	r3, r1
   1ef54:	strd	r2, [sp]
   1ef58:	lsr	r3, r4, #28
   1ef5c:	orr	r1, r3, r5, lsl #4
   1ef60:	str	r1, [sp, #1248]	; 0x4e0
   1ef64:	lsr	r3, r5, #28
   1ef68:	orr	r1, r3, r4, lsl #4
   1ef6c:	str	r1, [sp, #1252]	; 0x4e4
   1ef70:	lsl	r3, r5, #30
   1ef74:	orr	r1, r3, r4, lsr #2
   1ef78:	str	r1, [sp, #1260]	; 0x4ec
   1ef7c:	lsl	r3, r4, #30
   1ef80:	orr	r1, r3, r5, lsr #2
   1ef84:	str	r1, [sp, #1256]	; 0x4e8
   1ef88:	add	r3, sp, #1248	; 0x4e0
   1ef8c:	ldrd	r2, [r3]
   1ef90:	add	r1, sp, #1248	; 0x4e0
   1ef94:	add	r1, r1, #8
   1ef98:	ldrd	r6, [r1]
   1ef9c:	eor	r2, r2, r6
   1efa0:	eor	r3, r3, r7
   1efa4:	lsl	r1, r5, #25
   1efa8:	orr	r1, r1, r4, lsr #7
   1efac:	str	r1, [sp, #1268]	; 0x4f4
   1efb0:	lsl	r1, r4, #25
   1efb4:	orr	r1, r1, r5, lsr #7
   1efb8:	str	r1, [sp, #1264]	; 0x4f0
   1efbc:	add	r1, sp, #1264	; 0x4f0
   1efc0:	ldrd	r6, [r1]
   1efc4:	eor	r6, r6, r2
   1efc8:	eor	r7, r7, r3
   1efcc:	strd	r6, [sp, #24]
   1efd0:	ldrd	r2, [sp, #48]	; 0x30
   1efd4:	orr	r0, r2, r4
   1efd8:	orr	r1, r3, r5
   1efdc:	ldrd	r6, [sp, #16]
   1efe0:	and	r6, r6, r0
   1efe4:	and	r7, r7, r1
   1efe8:	and	r2, r2, r4
   1efec:	and	r3, r3, r5
   1eff0:	orr	r2, r2, r6
   1eff4:	orr	r3, r3, r7
   1eff8:	ldrd	r6, [sp, #24]
   1effc:	adds	r6, r6, r2
   1f000:	adc	r7, r7, r3
   1f004:	ldrd	r2, [sp, #8]
   1f008:	adds	r2, r2, r6
   1f00c:	adc	r3, r3, r7
   1f010:	strd	r2, [sp, #8]
   1f014:	ldrd	r0, [sp, #40]	; 0x28
   1f018:	eor	r0, r0, sl
   1f01c:	eor	r1, r1, fp
   1f020:	ldrd	r6, [sp]
   1f024:	and	r6, r6, r0
   1f028:	and	r7, r7, r1
   1f02c:	ldrd	r0, [sp, #40]	; 0x28
   1f030:	eor	r0, r0, r6
   1f034:	eor	r1, r1, r7
   1f038:	mov	r2, r0
   1f03c:	mov	r3, r1
   1f040:	add	r1, sp, #7104	; 0x1bc0
   1f044:	add	r1, r1, #24
   1f048:	ldrd	r0, [r1]
   1f04c:	add	r7, pc, #532	; 0x214
   1f050:	ldrd	r6, [r7]
   1f054:	adds	r0, r0, r6
   1f058:	adc	r1, r1, r7
   1f05c:	adds	r0, r0, r8
   1f060:	adc	r1, r1, r9
   1f064:	adds	r2, r2, r0
   1f068:	adc	r3, r3, r1
   1f06c:	ldrd	r6, [sp]
   1f070:	lsr	r1, r6, #14
   1f074:	orr	r1, r1, r7, lsl #18
   1f078:	str	r1, [sp, #1272]	; 0x4f8
   1f07c:	lsr	r1, r7, #14
   1f080:	orr	r1, r1, r6, lsl #18
   1f084:	str	r1, [sp, #1276]	; 0x4fc
   1f088:	lsr	r1, r6, #18
   1f08c:	orr	r1, r1, r7, lsl #14
   1f090:	str	r1, [sp, #1280]	; 0x500
   1f094:	lsr	r1, r7, #18
   1f098:	orr	r1, r1, r6, lsl #14
   1f09c:	str	r1, [sp, #1284]	; 0x504
   1f0a0:	add	r1, sp, #1264	; 0x4f0
   1f0a4:	add	r1, r1, #8
   1f0a8:	ldrd	r8, [r1]
   1f0ac:	add	r1, sp, #1280	; 0x500
   1f0b0:	ldrd	r0, [r1]
   1f0b4:	eor	r8, r8, r0
   1f0b8:	eor	r9, r9, r1
   1f0bc:	lsl	r1, r7, #23
   1f0c0:	orr	r1, r1, r6, lsr #9
   1f0c4:	str	r1, [sp, #1292]	; 0x50c
   1f0c8:	lsl	r1, r6, #23
   1f0cc:	orr	r1, r1, r7, lsr #9
   1f0d0:	str	r1, [sp, #1288]	; 0x508
   1f0d4:	add	r1, sp, #1280	; 0x500
   1f0d8:	add	r1, r1, #8
   1f0dc:	ldrd	r0, [r1]
   1f0e0:	eor	r0, r0, r8
   1f0e4:	eor	r1, r1, r9
   1f0e8:	adds	r8, r0, r2
   1f0ec:	adc	r9, r1, r3
   1f0f0:	ldrd	r6, [sp, #16]
   1f0f4:	adds	r6, r6, r8
   1f0f8:	adc	r7, r7, r9
   1f0fc:	strd	r6, [sp, #16]
   1f100:	ldrd	r6, [sp, #8]
   1f104:	lsr	r3, r6, #28
   1f108:	orr	r1, r3, r7, lsl #4
   1f10c:	str	r1, [sp, #1296]	; 0x510
   1f110:	lsr	r3, r7, #28
   1f114:	orr	r1, r3, r6, lsl #4
   1f118:	str	r1, [sp, #1300]	; 0x514
   1f11c:	lsl	r3, r7, #30
   1f120:	orr	r1, r3, r6, lsr #2
   1f124:	str	r1, [sp, #1308]	; 0x51c
   1f128:	lsl	r3, r6, #30
   1f12c:	orr	r1, r3, r7, lsr #2
   1f130:	str	r1, [sp, #1304]	; 0x518
   1f134:	add	r3, sp, #1296	; 0x510
   1f138:	ldrd	r2, [r3]
   1f13c:	add	r1, sp, #1296	; 0x510
   1f140:	add	r1, r1, #8
   1f144:	ldrd	r0, [r1]
   1f148:	eor	r2, r2, r0
   1f14c:	eor	r3, r3, r1
   1f150:	lsl	r1, r7, #25
   1f154:	orr	r1, r1, r6, lsr #7
   1f158:	str	r1, [sp, #1316]	; 0x524
   1f15c:	lsl	r1, r6, #25
   1f160:	orr	r1, r1, r7, lsr #7
   1f164:	str	r1, [sp, #1312]	; 0x520
   1f168:	add	r1, sp, #1312	; 0x520
   1f16c:	ldrd	r0, [r1]
   1f170:	eor	r0, r0, r2
   1f174:	eor	r1, r1, r3
   1f178:	mov	r2, r0
   1f17c:	mov	r3, r1
   1f180:	orr	r0, r6, r4
   1f184:	orr	r1, r7, r5
   1f188:	ldrd	r6, [sp, #48]	; 0x30
   1f18c:	and	r6, r6, r0
   1f190:	and	r7, r7, r1
   1f194:	mov	r0, r6
   1f198:	mov	r1, r7
   1f19c:	ldrd	r6, [sp, #8]
   1f1a0:	and	r6, r6, r4
   1f1a4:	and	r7, r7, r5
   1f1a8:	orr	r6, r6, r0
   1f1ac:	orr	r7, r7, r1
   1f1b0:	adds	r0, r6, r2
   1f1b4:	adc	r1, r7, r3
   1f1b8:	adds	r2, r8, r0
   1f1bc:	adc	r3, r9, r1
   1f1c0:	strd	r2, [sp, #24]
   1f1c4:	ldrd	r0, [sp]
   1f1c8:	eor	r0, r0, sl
   1f1cc:	eor	r1, r1, fp
   1f1d0:	ldrd	r6, [sp, #16]
   1f1d4:	mov	r8, r6
   1f1d8:	mov	r9, r7
   1f1dc:	and	r8, r8, r0
   1f1e0:	and	r9, r9, r1
   1f1e4:	eor	r0, r8, sl
   1f1e8:	eor	r1, r9, fp
   1f1ec:	add	r3, pc, #124	; 0x7c
   1f1f0:	ldrd	r2, [r3]
   1f1f4:	add	ip, sp, #7104	; 0x1bc0
   1f1f8:	add	ip, ip, #32
   1f1fc:	ldrd	r8, [ip]
   1f200:	adds	r8, r8, r2
   1f204:	adc	r9, r9, r3
   1f208:	mov	r2, r8
   1f20c:	mov	r3, r9
   1f210:	ldrd	r8, [sp, #40]	; 0x28
   1f214:	adds	r8, r8, r2
   1f218:	adc	r9, r9, r3
   1f21c:	adds	r2, r8, r0
   1f220:	adc	r3, r9, r1
   1f224:	lsr	r1, r6, #14
   1f228:	mov	r8, r6
   1f22c:	mov	r9, r7
   1f230:	orr	r1, r1, r7, lsl #18
   1f234:	str	r1, [sp, #1320]	; 0x528
   1f238:	lsr	r1, r7, #14
   1f23c:	orr	r1, r1, r6, lsl #18
   1f240:	str	r1, [sp, #1324]	; 0x52c
   1f244:	lsr	r1, r6, #18
   1f248:	orr	r1, r1, r7, lsl #14
   1f24c:	str	r1, [sp, #1328]	; 0x530
   1f250:	lsr	r1, r7, #18
   1f254:	orr	r1, r1, r6, lsl #14
   1f258:	str	r1, [sp, #1332]	; 0x534
   1f25c:	b	1f288 <__assert_fail@plt+0xdf9c>
   1f260:	strle	sl, [r8, -r2, lsr #28]!
   1f264:	addmi	r2, sl, #152, 30	; 0x260
   1f268:	mvncs	r6, #859832320	; 0x33400000
   1f26c:	teqvc	r7, r1	; <illegal shifter operand>
   1f270:	mcrr	11, 2, r3, sp, cr15
   1f274:	strblt	pc, [r0, #3023]	; 0xbcf	; <UNPREDICTABLE>
   1f278:			; <UNDEFINED> instruction: 0x8189dbbc
   1f27c:	ldmib	r5!, {r0, r2, r5, r7, r8, r9, fp, ip, lr, pc}
   1f280:	vqrshl.u8	d27, d24, d8
   1f284:	ldmdbcc	r6, {r0, r1, r3, r4, r6, r9, lr, pc}^
   1f288:	add	r1, sp, #1312	; 0x520
   1f28c:	add	r1, r1, #8
   1f290:	ldrd	r0, [r1]
   1f294:	add	ip, sp, #1328	; 0x530
   1f298:	ldrd	r6, [ip]
   1f29c:	eor	r0, r0, r6
   1f2a0:	eor	r1, r1, r7
   1f2a4:	lsl	ip, r9, #23
   1f2a8:	orr	ip, ip, r8, lsr #9
   1f2ac:	str	ip, [sp, #1340]	; 0x53c
   1f2b0:	lsl	ip, r8, #23
   1f2b4:	orr	ip, ip, r9, lsr #9
   1f2b8:	str	ip, [sp, #1336]	; 0x538
   1f2bc:	add	ip, sp, #1328	; 0x530
   1f2c0:	add	ip, ip, #8
   1f2c4:	ldrd	r6, [ip]
   1f2c8:	eor	r6, r6, r0
   1f2cc:	eor	r7, r7, r1
   1f2d0:	adds	r6, r2, r6
   1f2d4:	adc	r7, r3, r7
   1f2d8:	ldrd	r2, [sp, #48]	; 0x30
   1f2dc:	adds	r2, r2, r6
   1f2e0:	adc	r3, r3, r7
   1f2e4:	strd	r2, [sp, #40]	; 0x28
   1f2e8:	ldrd	r8, [sp, #24]
   1f2ec:	lsr	r3, r8, #28
   1f2f0:	orr	r1, r3, r9, lsl #4
   1f2f4:	str	r1, [sp, #1344]	; 0x540
   1f2f8:	lsr	r3, r9, #28
   1f2fc:	orr	r1, r3, r8, lsl #4
   1f300:	str	r1, [sp, #1348]	; 0x544
   1f304:	lsl	r3, r9, #30
   1f308:	orr	r1, r3, r8, lsr #2
   1f30c:	str	r1, [sp, #1356]	; 0x54c
   1f310:	lsl	r3, r8, #30
   1f314:	orr	r1, r3, r9, lsr #2
   1f318:	str	r1, [sp, #1352]	; 0x548
   1f31c:	add	r3, sp, #1344	; 0x540
   1f320:	ldrd	r2, [r3]
   1f324:	add	r1, sp, #1344	; 0x540
   1f328:	add	r1, r1, #8
   1f32c:	ldrd	r0, [r1]
   1f330:	eor	r2, r2, r0
   1f334:	eor	r3, r3, r1
   1f338:	lsl	r1, r9, #25
   1f33c:	orr	r1, r1, r8, lsr #7
   1f340:	str	r1, [sp, #1364]	; 0x554
   1f344:	lsl	r1, r8, #25
   1f348:	orr	r1, r1, r9, lsr #7
   1f34c:	str	r1, [sp, #1360]	; 0x550
   1f350:	add	r1, sp, #1360	; 0x550
   1f354:	ldrd	r0, [r1]
   1f358:	eor	r0, r0, r2
   1f35c:	eor	r1, r1, r3
   1f360:	strd	r0, [sp, #32]
   1f364:	ldrd	r2, [sp, #8]
   1f368:	orr	r0, r2, r8
   1f36c:	orr	r1, r3, r9
   1f370:	and	r0, r0, r4
   1f374:	and	r1, r1, r5
   1f378:	and	r2, r2, r8
   1f37c:	and	r3, r3, r9
   1f380:	orr	r2, r2, r0
   1f384:	orr	r3, r3, r1
   1f388:	mov	r0, r2
   1f38c:	mov	r1, r3
   1f390:	ldrd	r2, [sp, #32]
   1f394:	adds	r2, r2, r0
   1f398:	adc	r3, r3, r1
   1f39c:	adds	r6, r6, r2
   1f3a0:	adc	r7, r7, r3
   1f3a4:	ldrd	r2, [sp]
   1f3a8:	ldrd	r0, [sp, #16]
   1f3ac:	eor	r2, r2, r0
   1f3b0:	eor	r3, r3, r1
   1f3b4:	ldrd	r8, [sp, #40]	; 0x28
   1f3b8:	mov	r0, r8
   1f3bc:	mov	r1, r9
   1f3c0:	and	r0, r0, r2
   1f3c4:	and	r1, r1, r3
   1f3c8:	mov	r2, r0
   1f3cc:	mov	r3, r1
   1f3d0:	ldrd	r0, [sp]
   1f3d4:	eor	r0, r0, r2
   1f3d8:	eor	r1, r1, r3
   1f3dc:	strd	r0, [sp, #32]
   1f3e0:	add	r3, sp, #7104	; 0x1bc0
   1f3e4:	add	r3, r3, #40	; 0x28
   1f3e8:	ldrd	r0, [r3]
   1f3ec:	sub	r3, pc, #380	; 0x17c
   1f3f0:	ldrd	r2, [r3]
   1f3f4:	adds	r0, r0, r2
   1f3f8:	adc	r1, r1, r3
   1f3fc:	adds	sl, sl, r0
   1f400:	adc	fp, fp, r1
   1f404:	ldrd	r0, [sp, #32]
   1f408:	adds	r0, r0, sl
   1f40c:	adc	r1, r1, fp
   1f410:	mov	sl, r0
   1f414:	mov	fp, r1
   1f418:	lsr	r3, r8, #14
   1f41c:	orr	r1, r3, r9, lsl #18
   1f420:	str	r1, [sp, #1368]	; 0x558
   1f424:	lsr	r3, r9, #14
   1f428:	orr	r1, r3, r8, lsl #18
   1f42c:	str	r1, [sp, #1372]	; 0x55c
   1f430:	lsr	r3, r8, #18
   1f434:	orr	r1, r3, r9, lsl #14
   1f438:	str	r1, [sp, #1376]	; 0x560
   1f43c:	lsr	r3, r9, #18
   1f440:	orr	r1, r3, r8, lsl #14
   1f444:	str	r1, [sp, #1380]	; 0x564
   1f448:	add	r3, sp, #1360	; 0x550
   1f44c:	add	r3, r3, #8
   1f450:	ldrd	r2, [r3]
   1f454:	add	r1, sp, #1376	; 0x560
   1f458:	ldrd	r0, [r1]
   1f45c:	eor	r2, r2, r0
   1f460:	eor	r3, r3, r1
   1f464:	lsl	r1, r9, #23
   1f468:	orr	r1, r1, r8, lsr #9
   1f46c:	str	r1, [sp, #1388]	; 0x56c
   1f470:	lsl	r1, r8, #23
   1f474:	orr	r1, r1, r9, lsr #9
   1f478:	str	r1, [sp, #1384]	; 0x568
   1f47c:	add	r1, sp, #1376	; 0x560
   1f480:	add	r1, r1, #8
   1f484:	ldrd	r0, [r1]
   1f488:	eor	r0, r0, r2
   1f48c:	eor	r1, r1, r3
   1f490:	adds	sl, sl, r0
   1f494:	adc	fp, fp, r1
   1f498:	adds	r2, sl, r4
   1f49c:	adc	r3, fp, r5
   1f4a0:	strd	r2, [sp, #32]
   1f4a4:	lsr	r3, r6, #28
   1f4a8:	orr	r1, r3, r7, lsl #4
   1f4ac:	str	r1, [sp, #1392]	; 0x570
   1f4b0:	lsr	r3, r7, #28
   1f4b4:	orr	r1, r3, r6, lsl #4
   1f4b8:	str	r1, [sp, #1396]	; 0x574
   1f4bc:	lsl	r3, r7, #30
   1f4c0:	orr	r1, r3, r6, lsr #2
   1f4c4:	str	r1, [sp, #1404]	; 0x57c
   1f4c8:	lsl	r3, r6, #30
   1f4cc:	orr	r1, r3, r7, lsr #2
   1f4d0:	str	r1, [sp, #1400]	; 0x578
   1f4d4:	add	r3, sp, #1392	; 0x570
   1f4d8:	ldrd	r2, [r3]
   1f4dc:	add	r1, sp, #1392	; 0x570
   1f4e0:	add	r1, r1, #8
   1f4e4:	ldrd	r4, [r1]
   1f4e8:	eor	r2, r2, r4
   1f4ec:	eor	r3, r3, r5
   1f4f0:	lsl	r1, r7, #25
   1f4f4:	orr	r1, r1, r6, lsr #7
   1f4f8:	str	r1, [sp, #1412]	; 0x584
   1f4fc:	lsl	r1, r6, #25
   1f500:	mov	ip, r7
   1f504:	orr	r1, r1, r7, lsr #7
   1f508:	str	r1, [sp, #1408]	; 0x580
   1f50c:	add	r1, sp, #1408	; 0x580
   1f510:	ldrd	r4, [r1]
   1f514:	eor	r4, r4, r2
   1f518:	eor	r5, r5, r3
   1f51c:	mov	r2, r4
   1f520:	mov	r3, r5
   1f524:	ldrd	r4, [sp, #24]
   1f528:	orr	r4, r4, r6
   1f52c:	orr	r5, r5, r7
   1f530:	mov	r0, r4
   1f534:	mov	r1, r5
   1f538:	ldrd	r4, [sp, #8]
   1f53c:	and	r4, r4, r0
   1f540:	and	r5, r5, r1
   1f544:	mov	r0, r4
   1f548:	mov	r1, r5
   1f54c:	strd	r6, [sp, #40]	; 0x28
   1f550:	mov	r4, r6
   1f554:	ldrd	r6, [sp, #24]
   1f558:	and	r6, r6, r4
   1f55c:	and	r7, r7, ip
   1f560:	orr	r0, r0, r6
   1f564:	orr	r1, r1, r7
   1f568:	adds	r0, r0, r2
   1f56c:	adc	r1, r1, r3
   1f570:	adds	sl, sl, r0
   1f574:	adc	fp, fp, r1
   1f578:	strd	r8, [sp, #48]	; 0x30
   1f57c:	mov	r2, r8
   1f580:	mov	r3, r9
   1f584:	ldrd	r8, [sp, #16]
   1f588:	eor	r2, r2, r8
   1f58c:	eor	r3, r3, r9
   1f590:	ldrd	r6, [sp, #32]
   1f594:	mov	r4, r6
   1f598:	mov	r5, r7
   1f59c:	and	r4, r4, r2
   1f5a0:	and	r5, r5, r3
   1f5a4:	eor	r8, r8, r4
   1f5a8:	eor	r9, r9, r5
   1f5ac:	mov	r2, r8
   1f5b0:	mov	r3, r9
   1f5b4:	add	r1, sp, #7104	; 0x1bc0
   1f5b8:	add	r1, r1, #48	; 0x30
   1f5bc:	ldrd	r0, [r1]
   1f5c0:	sub	r9, pc, #840	; 0x348
   1f5c4:	ldrd	r8, [r9]
   1f5c8:	adds	r0, r0, r8
   1f5cc:	adc	r1, r1, r9
   1f5d0:	mov	r4, r0
   1f5d4:	mov	r5, r1
   1f5d8:	ldrd	r0, [sp]
   1f5dc:	adds	r0, r0, r4
   1f5e0:	adc	r1, r1, r5
   1f5e4:	adds	r2, r2, r0
   1f5e8:	adc	r3, r3, r1
   1f5ec:	lsr	r1, r6, #14
   1f5f0:	orr	r1, r1, r7, lsl #18
   1f5f4:	str	r1, [sp, #1416]	; 0x588
   1f5f8:	lsr	r1, r7, #14
   1f5fc:	orr	r1, r1, r6, lsl #18
   1f600:	str	r1, [sp, #1420]	; 0x58c
   1f604:	lsr	r1, r6, #18
   1f608:	orr	r1, r1, r7, lsl #14
   1f60c:	str	r1, [sp, #1424]	; 0x590
   1f610:	lsr	r1, r7, #18
   1f614:	orr	r1, r1, r6, lsl #14
   1f618:	str	r1, [sp, #1428]	; 0x594
   1f61c:	add	r1, sp, #1408	; 0x580
   1f620:	add	r1, r1, #8
   1f624:	ldrd	r0, [r1]
   1f628:	add	ip, sp, #1424	; 0x590
   1f62c:	ldrd	r8, [ip]
   1f630:	eor	r0, r0, r8
   1f634:	eor	r1, r1, r9
   1f638:	lsl	ip, r7, #23
   1f63c:	orr	ip, ip, r6, lsr #9
   1f640:	str	ip, [sp, #1436]	; 0x59c
   1f644:	lsl	ip, r6, #23
   1f648:	orr	ip, ip, r7, lsr #9
   1f64c:	str	ip, [sp, #1432]	; 0x598
   1f650:	add	ip, sp, #1424	; 0x590
   1f654:	add	ip, ip, #8
   1f658:	ldrd	r8, [ip]
   1f65c:	eor	r8, r8, r0
   1f660:	eor	r9, r9, r1
   1f664:	adds	r8, r2, r8
   1f668:	adc	r9, r3, r9
   1f66c:	mov	r4, r8
   1f670:	mov	r5, r9
   1f674:	ldrd	r2, [sp, #8]
   1f678:	adds	r2, r2, r8
   1f67c:	adc	r3, r3, r9
   1f680:	mov	r0, r2
   1f684:	mov	r1, r3
   1f688:	strd	r0, [sp, #8]
   1f68c:	lsr	r3, sl, #28
   1f690:	orr	r1, r3, fp, lsl #4
   1f694:	str	r1, [sp, #1440]	; 0x5a0
   1f698:	lsr	r3, fp, #28
   1f69c:	orr	r1, r3, sl, lsl #4
   1f6a0:	str	r1, [sp, #1444]	; 0x5a4
   1f6a4:	lsl	r3, fp, #30
   1f6a8:	orr	r1, r3, sl, lsr #2
   1f6ac:	str	r1, [sp, #1452]	; 0x5ac
   1f6b0:	lsl	r3, sl, #30
   1f6b4:	orr	r1, r3, fp, lsr #2
   1f6b8:	str	r1, [sp, #1448]	; 0x5a8
   1f6bc:	add	r3, sp, #1440	; 0x5a0
   1f6c0:	ldrd	r2, [r3]
   1f6c4:	add	r1, sp, #1440	; 0x5a0
   1f6c8:	add	r1, r1, #8
   1f6cc:	ldrd	r0, [r1]
   1f6d0:	eor	r2, r2, r0
   1f6d4:	eor	r3, r3, r1
   1f6d8:	lsl	r1, fp, #25
   1f6dc:	orr	r1, r1, sl, lsr #7
   1f6e0:	str	r1, [sp, #1460]	; 0x5b4
   1f6e4:	lsl	r1, sl, #25
   1f6e8:	orr	r1, r1, fp, lsr #7
   1f6ec:	str	r1, [sp, #1456]	; 0x5b0
   1f6f0:	add	r1, sp, #1456	; 0x5b0
   1f6f4:	ldrd	r0, [r1]
   1f6f8:	eor	r0, r0, r2
   1f6fc:	eor	r1, r1, r3
   1f700:	mov	r2, r0
   1f704:	mov	r3, r1
   1f708:	ldrd	r6, [sp, #40]	; 0x28
   1f70c:	orr	r0, r6, sl
   1f710:	orr	r1, r7, fp
   1f714:	ldrd	r8, [sp, #24]
   1f718:	and	r8, r8, r0
   1f71c:	and	r9, r9, r1
   1f720:	mov	r0, r8
   1f724:	mov	r1, r9
   1f728:	mov	r8, r6
   1f72c:	mov	r9, r7
   1f730:	and	r6, r6, sl
   1f734:	and	r7, r7, fp
   1f738:	orr	r0, r0, r6
   1f73c:	orr	r1, r1, r7
   1f740:	adds	r0, r0, r2
   1f744:	adc	r1, r1, r3
   1f748:	adds	r6, r4, r0
   1f74c:	adc	r7, r5, r1
   1f750:	strd	r6, [sp, #40]	; 0x28
   1f754:	ldrd	r4, [sp, #48]	; 0x30
   1f758:	mov	r2, r4
   1f75c:	mov	r3, r5
   1f760:	ldrd	r0, [sp, #32]
   1f764:	eor	r2, r2, r0
   1f768:	eor	r3, r3, r1
   1f76c:	ldrd	r6, [sp, #8]
   1f770:	and	r6, r6, r2
   1f774:	and	r7, r7, r3
   1f778:	strd	r4, [sp]
   1f77c:	mov	r0, r4
   1f780:	mov	r1, r5
   1f784:	eor	r0, r0, r6
   1f788:	eor	r1, r1, r7
   1f78c:	add	r3, pc, #892	; 0x37c
   1f790:	ldrd	r2, [r3]
   1f794:	add	ip, sp, #7104	; 0x1bc0
   1f798:	add	ip, ip, #56	; 0x38
   1f79c:	ldrd	r6, [ip]
   1f7a0:	adds	r6, r6, r2
   1f7a4:	adc	r7, r7, r3
   1f7a8:	mov	r2, r6
   1f7ac:	mov	r3, r7
   1f7b0:	ldrd	r6, [sp, #16]
   1f7b4:	adds	r6, r6, r2
   1f7b8:	adc	r7, r7, r3
   1f7bc:	adds	r2, r6, r0
   1f7c0:	adc	r3, r7, r1
   1f7c4:	ldrd	r6, [sp, #8]
   1f7c8:	lsr	r1, r6, #14
   1f7cc:	orr	r1, r1, r7, lsl #18
   1f7d0:	str	r1, [sp, #1464]	; 0x5b8
   1f7d4:	lsr	r1, r7, #14
   1f7d8:	orr	r1, r1, r6, lsl #18
   1f7dc:	str	r1, [sp, #1468]	; 0x5bc
   1f7e0:	lsr	r1, r6, #18
   1f7e4:	orr	r1, r1, r7, lsl #14
   1f7e8:	str	r1, [sp, #1472]	; 0x5c0
   1f7ec:	lsr	r1, r7, #18
   1f7f0:	mov	r4, r6
   1f7f4:	mov	r5, r7
   1f7f8:	orr	r1, r1, r6, lsl #14
   1f7fc:	str	r1, [sp, #1476]	; 0x5c4
   1f800:	add	r1, sp, #1456	; 0x5b0
   1f804:	add	r1, r1, #8
   1f808:	ldrd	r6, [r1]
   1f80c:	add	r1, sp, #1472	; 0x5c0
   1f810:	ldrd	r0, [r1]
   1f814:	eor	r6, r6, r0
   1f818:	eor	r7, r7, r1
   1f81c:	mov	r0, r6
   1f820:	mov	r1, r7
   1f824:	lsl	ip, r5, #23
   1f828:	orr	ip, ip, r4, lsr #9
   1f82c:	str	ip, [sp, #1484]	; 0x5cc
   1f830:	lsl	ip, r4, #23
   1f834:	orr	ip, ip, r5, lsr #9
   1f838:	str	ip, [sp, #1480]	; 0x5c8
   1f83c:	add	ip, sp, #1472	; 0x5c0
   1f840:	add	ip, ip, #8
   1f844:	ldrd	r6, [ip]
   1f848:	eor	r6, r6, r0
   1f84c:	eor	r7, r7, r1
   1f850:	adds	r6, r2, r6
   1f854:	adc	r7, r3, r7
   1f858:	ldrd	r0, [sp, #24]
   1f85c:	adds	r0, r0, r6
   1f860:	adc	r1, r1, r7
   1f864:	mov	r2, r0
   1f868:	mov	r3, r1
   1f86c:	strd	r2, [sp, #16]
   1f870:	ldrd	r0, [sp, #40]	; 0x28
   1f874:	lsr	r3, r0, #28
   1f878:	mov	r4, r0
   1f87c:	mov	r5, r1
   1f880:	orr	r1, r3, r1, lsl #4
   1f884:	str	r1, [sp, #1488]	; 0x5d0
   1f888:	lsr	r3, r5, #28
   1f88c:	orr	r1, r3, r4, lsl #4
   1f890:	str	r1, [sp, #1492]	; 0x5d4
   1f894:	lsl	r3, r5, #30
   1f898:	orr	r1, r3, r4, lsr #2
   1f89c:	str	r1, [sp, #1500]	; 0x5dc
   1f8a0:	lsl	r3, r4, #30
   1f8a4:	orr	r1, r3, r5, lsr #2
   1f8a8:	str	r1, [sp, #1496]	; 0x5d8
   1f8ac:	add	r3, sp, #1488	; 0x5d0
   1f8b0:	ldrd	r2, [r3]
   1f8b4:	add	r1, sp, #1488	; 0x5d0
   1f8b8:	add	r1, r1, #8
   1f8bc:	ldrd	r0, [r1]
   1f8c0:	eor	r2, r2, r0
   1f8c4:	eor	r3, r3, r1
   1f8c8:	lsl	r1, r5, #25
   1f8cc:	orr	r1, r1, r4, lsr #7
   1f8d0:	str	r1, [sp, #1508]	; 0x5e4
   1f8d4:	lsl	r1, r4, #25
   1f8d8:	orr	r1, r1, r5, lsr #7
   1f8dc:	str	r1, [sp, #1504]	; 0x5e0
   1f8e0:	add	r1, sp, #1504	; 0x5e0
   1f8e4:	ldrd	r0, [r1]
   1f8e8:	eor	r0, r0, r2
   1f8ec:	eor	r1, r1, r3
   1f8f0:	mov	r2, r0
   1f8f4:	mov	r3, r1
   1f8f8:	orr	r0, r4, sl
   1f8fc:	orr	r1, r5, fp
   1f900:	strd	r8, [sp, #24]
   1f904:	and	r8, r8, r0
   1f908:	and	r9, r9, r1
   1f90c:	mov	r0, r8
   1f910:	mov	r1, r9
   1f914:	mov	r8, r4
   1f918:	mov	r9, r5
   1f91c:	and	r8, r8, sl
   1f920:	and	r9, r9, fp
   1f924:	orr	r0, r0, r8
   1f928:	orr	r1, r1, r9
   1f92c:	adds	r0, r0, r2
   1f930:	adc	r1, r1, r3
   1f934:	adds	r6, r6, r0
   1f938:	adc	r7, r7, r1
   1f93c:	mov	r8, r6
   1f940:	mov	r9, r7
   1f944:	ldrd	r6, [sp, #32]
   1f948:	ldrd	r2, [sp, #8]
   1f94c:	eor	r2, r2, r6
   1f950:	eor	r3, r3, r7
   1f954:	ldrd	r0, [sp, #16]
   1f958:	and	r0, r0, r2
   1f95c:	and	r1, r1, r3
   1f960:	mov	r2, r0
   1f964:	mov	r3, r1
   1f968:	mov	r0, r6
   1f96c:	mov	r1, r7
   1f970:	eor	r0, r0, r2
   1f974:	eor	r1, r1, r3
   1f978:	mov	r2, r0
   1f97c:	mov	r3, r1
   1f980:	add	r1, sp, #7168	; 0x1c00
   1f984:	ldrd	r0, [r1]
   1f988:	add	r7, pc, #392	; 0x188
   1f98c:	ldrd	r6, [r7]
   1f990:	adds	r0, r0, r6
   1f994:	adc	r1, r1, r7
   1f998:	ldrd	r4, [sp]
   1f99c:	adds	r4, r4, r0
   1f9a0:	adc	r5, r5, r1
   1f9a4:	adds	r2, r2, r4
   1f9a8:	adc	r3, r3, r5
   1f9ac:	ldrd	r4, [sp, #16]
   1f9b0:	lsr	r1, r4, #14
   1f9b4:	orr	r1, r1, r5, lsl #18
   1f9b8:	str	r1, [sp, #1512]	; 0x5e8
   1f9bc:	lsr	r1, r5, #14
   1f9c0:	orr	r1, r1, r4, lsl #18
   1f9c4:	str	r1, [sp, #1516]	; 0x5ec
   1f9c8:	lsr	r1, r4, #18
   1f9cc:	orr	r1, r1, r5, lsl #14
   1f9d0:	str	r1, [sp, #1520]	; 0x5f0
   1f9d4:	lsr	r1, r5, #18
   1f9d8:	orr	r1, r1, r4, lsl #14
   1f9dc:	str	r1, [sp, #1524]	; 0x5f4
   1f9e0:	add	r1, sp, #1504	; 0x5e0
   1f9e4:	add	r1, r1, #8
   1f9e8:	ldrd	r6, [r1]
   1f9ec:	add	r1, sp, #1520	; 0x5f0
   1f9f0:	ldrd	r0, [r1]
   1f9f4:	eor	r6, r6, r0
   1f9f8:	eor	r7, r7, r1
   1f9fc:	mov	r0, r6
   1fa00:	mov	r1, r7
   1fa04:	lsl	ip, r5, #23
   1fa08:	orr	ip, ip, r4, lsr #9
   1fa0c:	str	ip, [sp, #1532]	; 0x5fc
   1fa10:	lsl	ip, r4, #23
   1fa14:	orr	ip, ip, r5, lsr #9
   1fa18:	str	ip, [sp, #1528]	; 0x5f8
   1fa1c:	add	ip, sp, #1520	; 0x5f0
   1fa20:	add	ip, ip, #8
   1fa24:	ldrd	r6, [ip]
   1fa28:	eor	r6, r6, r0
   1fa2c:	eor	r7, r7, r1
   1fa30:	adds	r4, r2, r6
   1fa34:	adc	r5, r3, r7
   1fa38:	ldrd	r2, [sp, #24]
   1fa3c:	adds	r2, r2, r4
   1fa40:	adc	r3, r3, r5
   1fa44:	strd	r2, [sp]
   1fa48:	lsr	r3, r8, #28
   1fa4c:	orr	r1, r3, r9, lsl #4
   1fa50:	str	r1, [sp, #1536]	; 0x600
   1fa54:	lsr	r3, r9, #28
   1fa58:	orr	r1, r3, r8, lsl #4
   1fa5c:	str	r1, [sp, #1540]	; 0x604
   1fa60:	lsl	r3, r9, #30
   1fa64:	orr	r1, r3, r8, lsr #2
   1fa68:	str	r1, [sp, #1548]	; 0x60c
   1fa6c:	lsl	r3, r8, #30
   1fa70:	orr	r1, r3, r9, lsr #2
   1fa74:	str	r1, [sp, #1544]	; 0x608
   1fa78:	add	r3, sp, #1536	; 0x600
   1fa7c:	ldrd	r6, [r3]
   1fa80:	add	r3, sp, #1536	; 0x600
   1fa84:	add	r3, r3, #8
   1fa88:	ldrd	r2, [r3]
   1fa8c:	eor	r6, r6, r2
   1fa90:	eor	r7, r7, r3
   1fa94:	mov	r2, r6
   1fa98:	mov	r3, r7
   1fa9c:	lsl	r1, r9, #25
   1faa0:	orr	r1, r1, r8, lsr #7
   1faa4:	str	r1, [sp, #1556]	; 0x614
   1faa8:	lsl	r1, r8, #25
   1faac:	orr	r1, r1, r9, lsr #7
   1fab0:	str	r1, [sp, #1552]	; 0x610
   1fab4:	add	r1, sp, #1552	; 0x610
   1fab8:	ldrd	r6, [r1]
   1fabc:	eor	r6, r6, r2
   1fac0:	eor	r7, r7, r3
   1fac4:	mov	r2, r6
   1fac8:	mov	r3, r7
   1facc:	ldrd	r6, [sp, #40]	; 0x28
   1fad0:	orr	r0, r6, r8
   1fad4:	orr	r1, r7, r9
   1fad8:	and	r0, r0, sl
   1fadc:	and	r1, r1, fp
   1fae0:	and	r6, r6, r8
   1fae4:	and	r7, r7, r9
   1fae8:	orr	r6, r6, r0
   1faec:	orr	r7, r7, r1
   1faf0:	adds	r0, r6, r2
   1faf4:	adc	r1, r7, r3
   1faf8:	adds	r4, r4, r0
   1fafc:	adc	r5, r5, r1
   1fb00:	mov	r6, r4
   1fb04:	mov	r7, r5
   1fb08:	ldrd	r2, [sp, #16]
   1fb0c:	b	1fb30 <__assert_fail@plt+0xe844>
   1fb10:			; <UNDEFINED> instruction: 0xb605d019
   1fb14:	ldmibpl	r1!, {r0, r4, r5, r6, r7, r8, ip}^
   1fb18:	svcge	0x00194f9b
   1fb1c:	eorsls	r8, pc, #164, 4	; 0x4000000a
   1fb20:	ble	1b7ff88 <optarg@@GLIBC_2.4+0x1b35de0>
   1fb24:	blge	737680 <optarg@@GLIBC_2.4+0x6ed4d8>
   1fb28:	movwge	r0, #12866	; 0x3242
   1fb2c:	stmdale	r7, {r3, r4, r7, r9, fp, sp, pc}
   1fb30:	ldrd	r4, [sp, #8]
   1fb34:	eor	r4, r4, r2
   1fb38:	eor	r5, r5, r3
   1fb3c:	ldrd	r0, [sp]
   1fb40:	and	r0, r0, r4
   1fb44:	and	r1, r1, r5
   1fb48:	ldrd	r4, [sp, #8]
   1fb4c:	eor	r4, r4, r0
   1fb50:	eor	r5, r5, r1
   1fb54:	mov	r2, r4
   1fb58:	mov	r3, r5
   1fb5c:	add	r1, sp, #7168	; 0x1c00
   1fb60:	add	r1, r1, #8
   1fb64:	ldrd	r0, [r1]
   1fb68:	sub	r5, pc, #80	; 0x50
   1fb6c:	ldrd	r4, [r5]
   1fb70:	adds	r0, r0, r4
   1fb74:	adc	r1, r1, r5
   1fb78:	ldrd	r4, [sp, #32]
   1fb7c:	adds	r4, r4, r0
   1fb80:	adc	r5, r5, r1
   1fb84:	adds	r2, r2, r4
   1fb88:	adc	r3, r3, r5
   1fb8c:	ldrd	r4, [sp]
   1fb90:	lsr	r1, r4, #14
   1fb94:	orr	r1, r1, r5, lsl #18
   1fb98:	str	r1, [sp, #1560]	; 0x618
   1fb9c:	lsr	r1, r5, #14
   1fba0:	orr	r1, r1, r4, lsl #18
   1fba4:	str	r1, [sp, #1564]	; 0x61c
   1fba8:	lsr	r1, r4, #18
   1fbac:	orr	r1, r1, r5, lsl #14
   1fbb0:	str	r1, [sp, #1568]	; 0x620
   1fbb4:	lsr	r1, r5, #18
   1fbb8:	orr	r1, r1, r4, lsl #14
   1fbbc:	str	r1, [sp, #1572]	; 0x624
   1fbc0:	add	r1, sp, #1552	; 0x610
   1fbc4:	add	r1, r1, #8
   1fbc8:	ldrd	r0, [r1]
   1fbcc:	add	ip, sp, #1568	; 0x620
   1fbd0:	ldrd	r4, [ip]
   1fbd4:	eor	r0, r0, r4
   1fbd8:	eor	r1, r1, r5
   1fbdc:	ldrd	r4, [sp]
   1fbe0:	lsl	ip, r5, #23
   1fbe4:	orr	ip, ip, r4, lsr #9
   1fbe8:	str	ip, [sp, #1580]	; 0x62c
   1fbec:	ldrd	r4, [sp]
   1fbf0:	lsl	ip, r4, #23
   1fbf4:	orr	ip, ip, r5, lsr #9
   1fbf8:	str	ip, [sp, #1576]	; 0x628
   1fbfc:	add	ip, sp, #1568	; 0x620
   1fc00:	add	ip, ip, #8
   1fc04:	ldrd	r4, [ip]
   1fc08:	eor	r4, r4, r0
   1fc0c:	eor	r5, r5, r1
   1fc10:	adds	r4, r2, r4
   1fc14:	adc	r5, r3, r5
   1fc18:	strd	r4, [sp, #24]
   1fc1c:	adds	r0, r4, sl
   1fc20:	adc	r1, r5, fp
   1fc24:	strd	r0, [sp, #56]	; 0x38
   1fc28:	lsr	r3, r6, #28
   1fc2c:	orr	r1, r3, r7, lsl #4
   1fc30:	str	r1, [sp, #1584]	; 0x630
   1fc34:	lsr	r3, r7, #28
   1fc38:	orr	r1, r3, r6, lsl #4
   1fc3c:	str	r1, [sp, #1588]	; 0x634
   1fc40:	lsl	r3, r7, #30
   1fc44:	orr	r1, r3, r6, lsr #2
   1fc48:	str	r1, [sp, #1596]	; 0x63c
   1fc4c:	lsl	r3, r6, #30
   1fc50:	orr	r1, r3, r7, lsr #2
   1fc54:	str	r1, [sp, #1592]	; 0x638
   1fc58:	add	r3, sp, #1584	; 0x630
   1fc5c:	ldrd	r2, [r3]
   1fc60:	add	r1, sp, #1584	; 0x630
   1fc64:	add	r1, r1, #8
   1fc68:	ldrd	sl, [r1]
   1fc6c:	eor	r2, r2, sl
   1fc70:	eor	r3, r3, fp
   1fc74:	lsl	r1, r7, #25
   1fc78:	orr	r1, r1, r6, lsr #7
   1fc7c:	str	r1, [sp, #1604]	; 0x644
   1fc80:	lsl	r1, r6, #25
   1fc84:	orr	r1, r1, r7, lsr #7
   1fc88:	str	r1, [sp, #1600]	; 0x640
   1fc8c:	add	r1, sp, #1600	; 0x640
   1fc90:	ldrd	sl, [r1]
   1fc94:	eor	sl, sl, r2
   1fc98:	eor	fp, fp, r3
   1fc9c:	mov	r2, sl
   1fca0:	mov	r3, fp
   1fca4:	orr	r4, r6, r8
   1fca8:	orr	r5, r7, r9
   1fcac:	mov	r0, r4
   1fcb0:	mov	r1, r5
   1fcb4:	ldrd	r4, [sp, #40]	; 0x28
   1fcb8:	and	r4, r4, r0
   1fcbc:	and	r5, r5, r1
   1fcc0:	strd	r6, [sp, #48]	; 0x30
   1fcc4:	and	r6, r6, r8
   1fcc8:	and	r7, r7, r9
   1fccc:	orr	r0, r4, r6
   1fcd0:	orr	r1, r5, r7
   1fcd4:	adds	r0, r0, r2
   1fcd8:	adc	r1, r1, r3
   1fcdc:	ldrd	sl, [sp, #24]
   1fce0:	adds	sl, sl, r0
   1fce4:	adc	fp, fp, r1
   1fce8:	ldrd	r4, [sp, #16]
   1fcec:	mov	r2, r4
   1fcf0:	mov	r3, r5
   1fcf4:	ldrd	r0, [sp]
   1fcf8:	eor	r2, r2, r0
   1fcfc:	eor	r3, r3, r1
   1fd00:	ldrd	r6, [sp, #56]	; 0x38
   1fd04:	mov	r0, r6
   1fd08:	mov	r1, r7
   1fd0c:	and	r0, r0, r2
   1fd10:	and	r1, r1, r3
   1fd14:	mov	r2, r0
   1fd18:	mov	r3, r1
   1fd1c:	mov	r0, r4
   1fd20:	mov	r1, r5
   1fd24:	eor	r0, r0, r2
   1fd28:	eor	r1, r1, r3
   1fd2c:	mov	r2, r0
   1fd30:	mov	r3, r1
   1fd34:	add	r1, sp, #7168	; 0x1c00
   1fd38:	add	r1, r1, #16
   1fd3c:	ldrd	r0, [r1]
   1fd40:	sub	r5, pc, #544	; 0x220
   1fd44:	ldrd	r4, [r5]
   1fd48:	adds	r0, r0, r4
   1fd4c:	adc	r1, r1, r5
   1fd50:	ldrd	r4, [sp, #8]
   1fd54:	adds	r4, r4, r0
   1fd58:	adc	r5, r5, r1
   1fd5c:	adds	r2, r2, r4
   1fd60:	adc	r3, r3, r5
   1fd64:	lsr	r1, r6, #14
   1fd68:	mov	r4, r6
   1fd6c:	mov	r5, r7
   1fd70:	orr	r1, r1, r7, lsl #18
   1fd74:	str	r1, [sp, #1608]	; 0x648
   1fd78:	lsr	r1, r7, #14
   1fd7c:	orr	r1, r1, r6, lsl #18
   1fd80:	str	r1, [sp, #1612]	; 0x64c
   1fd84:	lsr	r1, r6, #18
   1fd88:	orr	r1, r1, r7, lsl #14
   1fd8c:	str	r1, [sp, #1616]	; 0x650
   1fd90:	lsr	r1, r7, #18
   1fd94:	orr	r1, r1, r6, lsl #14
   1fd98:	str	r1, [sp, #1620]	; 0x654
   1fd9c:	add	r1, sp, #1600	; 0x640
   1fda0:	add	r1, r1, #8
   1fda4:	ldrd	r0, [r1]
   1fda8:	add	ip, sp, #1616	; 0x650
   1fdac:	ldrd	r6, [ip]
   1fdb0:	eor	r0, r0, r6
   1fdb4:	eor	r1, r1, r7
   1fdb8:	lsl	ip, r5, #23
   1fdbc:	orr	ip, ip, r4, lsr #9
   1fdc0:	str	ip, [sp, #1628]	; 0x65c
   1fdc4:	lsl	ip, r4, #23
   1fdc8:	orr	ip, ip, r5, lsr #9
   1fdcc:	str	ip, [sp, #1624]	; 0x658
   1fdd0:	add	ip, sp, #1616	; 0x650
   1fdd4:	add	ip, ip, #8
   1fdd8:	ldrd	r6, [ip]
   1fddc:	eor	r6, r6, r0
   1fde0:	eor	r7, r7, r1
   1fde4:	adds	r6, r2, r6
   1fde8:	adc	r7, r3, r7
   1fdec:	mov	r2, r6
   1fdf0:	mov	r3, r7
   1fdf4:	strd	r2, [sp, #24]
   1fdf8:	ldrd	r0, [sp, #40]	; 0x28
   1fdfc:	adds	r0, r0, r6
   1fe00:	adc	r1, r1, r7
   1fe04:	mov	r2, r0
   1fe08:	mov	r3, r1
   1fe0c:	strd	r2, [sp, #8]
   1fe10:	lsr	r3, sl, #28
   1fe14:	orr	r1, r3, fp, lsl #4
   1fe18:	str	r1, [sp, #1632]	; 0x660
   1fe1c:	lsr	r3, fp, #28
   1fe20:	orr	r1, r3, sl, lsl #4
   1fe24:	str	r1, [sp, #1636]	; 0x664
   1fe28:	lsl	r3, fp, #30
   1fe2c:	orr	r1, r3, sl, lsr #2
   1fe30:	str	r1, [sp, #1644]	; 0x66c
   1fe34:	lsl	r3, sl, #30
   1fe38:	orr	r1, r3, fp, lsr #2
   1fe3c:	str	r1, [sp, #1640]	; 0x668
   1fe40:	add	r3, sp, #1632	; 0x660
   1fe44:	ldrd	r0, [r3]
   1fe48:	add	r3, sp, #1632	; 0x660
   1fe4c:	add	r3, r3, #8
   1fe50:	ldrd	r2, [r3]
   1fe54:	eor	r0, r0, r2
   1fe58:	eor	r1, r1, r3
   1fe5c:	mov	r2, r0
   1fe60:	mov	r3, r1
   1fe64:	lsl	r1, fp, #25
   1fe68:	orr	r1, r1, sl, lsr #7
   1fe6c:	str	r1, [sp, #1652]	; 0x674
   1fe70:	lsl	r1, sl, #25
   1fe74:	orr	r1, r1, fp, lsr #7
   1fe78:	str	r1, [sp, #1648]	; 0x670
   1fe7c:	add	r1, sp, #1648	; 0x670
   1fe80:	ldrd	r0, [r1]
   1fe84:	eor	r0, r0, r2
   1fe88:	eor	r1, r1, r3
   1fe8c:	mov	r2, r0
   1fe90:	mov	r3, r1
   1fe94:	ldrd	r6, [sp, #48]	; 0x30
   1fe98:	strd	sl, [sp, #32]
   1fe9c:	orr	sl, sl, r6
   1fea0:	orr	fp, fp, r7
   1fea4:	mov	r0, sl
   1fea8:	mov	r1, fp
   1feac:	and	r0, r0, r8
   1feb0:	and	r1, r1, r9
   1feb4:	ldrd	sl, [sp, #32]
   1feb8:	and	sl, sl, r6
   1febc:	and	fp, fp, r7
   1fec0:	orr	r0, r0, sl
   1fec4:	orr	r1, r1, fp
   1fec8:	adds	r0, r0, r2
   1fecc:	adc	r1, r1, r3
   1fed0:	ldrd	r2, [sp, #24]
   1fed4:	adds	r2, r2, r0
   1fed8:	adc	r3, r3, r1
   1fedc:	strd	r2, [sp, #24]
   1fee0:	strd	r4, [sp, #40]	; 0x28
   1fee4:	mov	r2, r4
   1fee8:	mov	r3, r5
   1feec:	ldrd	sl, [sp]
   1fef0:	eor	r2, r2, sl
   1fef4:	eor	r3, r3, fp
   1fef8:	ldrd	r4, [sp, #8]
   1fefc:	mov	r6, r4
   1ff00:	mov	r7, r5
   1ff04:	and	r6, r6, r2
   1ff08:	and	r7, r7, r3
   1ff0c:	eor	sl, sl, r6
   1ff10:	eor	fp, fp, r7
   1ff14:	mov	r2, sl
   1ff18:	mov	r3, fp
   1ff1c:	add	r1, sp, #7168	; 0x1c00
   1ff20:	add	r1, r1, #24
   1ff24:	ldrd	r0, [r1]
   1ff28:	add	r7, pc, #888	; 0x378
   1ff2c:	ldrd	r6, [r7]
   1ff30:	adds	r0, r0, r6
   1ff34:	adc	r1, r1, r7
   1ff38:	ldrd	sl, [sp, #16]
   1ff3c:	adds	sl, sl, r0
   1ff40:	adc	fp, fp, r1
   1ff44:	adds	r2, r2, sl
   1ff48:	adc	r3, r3, fp
   1ff4c:	lsr	r1, r4, #14
   1ff50:	mov	r6, r4
   1ff54:	mov	r7, r5
   1ff58:	orr	r1, r1, r5, lsl #18
   1ff5c:	str	r1, [sp, #1656]	; 0x678
   1ff60:	lsr	r1, r5, #14
   1ff64:	orr	r1, r1, r4, lsl #18
   1ff68:	str	r1, [sp, #1660]	; 0x67c
   1ff6c:	lsr	r1, r4, #18
   1ff70:	orr	r1, r1, r5, lsl #14
   1ff74:	str	r1, [sp, #1664]	; 0x680
   1ff78:	lsr	r1, r5, #18
   1ff7c:	orr	r1, r1, r4, lsl #14
   1ff80:	str	r1, [sp, #1668]	; 0x684
   1ff84:	add	r1, sp, #1648	; 0x670
   1ff88:	add	r1, r1, #8
   1ff8c:	ldrd	r0, [r1]
   1ff90:	add	ip, sp, #1664	; 0x680
   1ff94:	ldrd	sl, [ip]
   1ff98:	eor	r0, r0, sl
   1ff9c:	eor	r1, r1, fp
   1ffa0:	lsl	ip, r5, #23
   1ffa4:	orr	ip, ip, r4, lsr #9
   1ffa8:	str	ip, [sp, #1676]	; 0x68c
   1ffac:	lsl	ip, r6, #23
   1ffb0:	orr	ip, ip, r7, lsr #9
   1ffb4:	str	ip, [sp, #1672]	; 0x688
   1ffb8:	add	ip, sp, #1664	; 0x680
   1ffbc:	add	ip, ip, #8
   1ffc0:	ldrd	sl, [ip]
   1ffc4:	eor	sl, sl, r0
   1ffc8:	eor	fp, fp, r1
   1ffcc:	adds	sl, r2, sl
   1ffd0:	adc	fp, r3, fp
   1ffd4:	mov	r6, sl
   1ffd8:	mov	r7, fp
   1ffdc:	strd	r6, [sp, #16]
   1ffe0:	adds	r2, sl, r8
   1ffe4:	adc	r3, fp, r9
   1ffe8:	mov	sl, r2
   1ffec:	mov	fp, r3
   1fff0:	ldrd	r4, [sp, #24]
   1fff4:	lsr	r3, r4, #28
   1fff8:	orr	r2, r3, r5, lsl #4
   1fffc:	str	r2, [sp, #1680]	; 0x690
   20000:	lsr	r3, r5, #28
   20004:	orr	r2, r3, r4, lsl #4
   20008:	str	r2, [sp, #1684]	; 0x694
   2000c:	lsl	r3, r5, #30
   20010:	orr	r2, r3, r4, lsr #2
   20014:	str	r2, [sp, #1692]	; 0x69c
   20018:	lsl	r3, r4, #30
   2001c:	orr	r2, r3, r5, lsr #2
   20020:	str	r2, [sp, #1688]	; 0x698
   20024:	add	r3, sp, #1680	; 0x690
   20028:	ldrd	r2, [r3]
   2002c:	add	r1, sp, #1680	; 0x690
   20030:	add	r1, r1, #8
   20034:	ldrd	r8, [r1]
   20038:	eor	r2, r2, r8
   2003c:	eor	r3, r3, r9
   20040:	lsl	r1, r5, #25
   20044:	orr	r1, r1, r4, lsr #7
   20048:	str	r1, [sp, #1700]	; 0x6a4
   2004c:	lsl	r1, r4, #25
   20050:	orr	r1, r1, r5, lsr #7
   20054:	str	r1, [sp, #1696]	; 0x6a0
   20058:	add	r1, sp, #1696	; 0x6a0
   2005c:	ldrd	r8, [r1]
   20060:	eor	r8, r8, r2
   20064:	eor	r9, r9, r3
   20068:	mov	r2, r8
   2006c:	mov	r3, r9
   20070:	ldrd	r6, [sp, #32]
   20074:	orr	r0, r6, r4
   20078:	orr	r1, r7, r5
   2007c:	ldrd	r8, [sp, #48]	; 0x30
   20080:	and	r8, r8, r0
   20084:	and	r9, r9, r1
   20088:	mov	r0, r8
   2008c:	mov	r1, r9
   20090:	mov	r8, r6
   20094:	mov	r9, r7
   20098:	and	r8, r8, r4
   2009c:	and	r9, r9, r5
   200a0:	orr	r0, r0, r8
   200a4:	orr	r1, r1, r9
   200a8:	adds	r0, r0, r2
   200ac:	adc	r1, r1, r3
   200b0:	ldrd	r6, [sp, #16]
   200b4:	adds	r6, r6, r0
   200b8:	adc	r7, r7, r1
   200bc:	mov	r8, r6
   200c0:	mov	r9, r7
   200c4:	ldrd	r4, [sp, #40]	; 0x28
   200c8:	ldrd	r6, [sp, #8]
   200cc:	eor	r6, r6, r4
   200d0:	eor	r7, r7, r5
   200d4:	mov	r2, r6
   200d8:	mov	r3, r7
   200dc:	strd	sl, [sp, #40]	; 0x28
   200e0:	mov	r6, sl
   200e4:	mov	r7, fp
   200e8:	and	r6, r6, r2
   200ec:	and	r7, r7, r3
   200f0:	mov	r0, r4
   200f4:	mov	r1, r5
   200f8:	eor	r0, r0, r6
   200fc:	eor	r1, r1, r7
   20100:	mov	r2, r0
   20104:	mov	r3, r1
   20108:	add	r1, sp, #7168	; 0x1c00
   2010c:	add	r1, r1, #32
   20110:	ldrd	r0, [r1]
   20114:	add	r5, pc, #404	; 0x194
   20118:	ldrd	r4, [r5]
   2011c:	adds	r0, r0, r4
   20120:	adc	r1, r1, r5
   20124:	ldrd	sl, [sp]
   20128:	adds	sl, sl, r0
   2012c:	adc	fp, fp, r1
   20130:	adds	r2, r2, sl
   20134:	adc	r3, r3, fp
   20138:	ldrd	r6, [sp, #40]	; 0x28
   2013c:	lsr	r1, r6, #14
   20140:	orr	r1, r1, r7, lsl #18
   20144:	str	r1, [sp, #1704]	; 0x6a8
   20148:	lsr	r1, r7, #14
   2014c:	orr	r1, r1, r6, lsl #18
   20150:	str	r1, [sp, #1708]	; 0x6ac
   20154:	lsr	r1, r6, #18
   20158:	orr	r1, r1, r7, lsl #14
   2015c:	str	r1, [sp, #1712]	; 0x6b0
   20160:	lsr	r1, r7, #18
   20164:	orr	r1, r1, r6, lsl #14
   20168:	str	r1, [sp, #1716]	; 0x6b4
   2016c:	add	r1, sp, #1696	; 0x6a0
   20170:	add	r1, r1, #8
   20174:	ldrd	r0, [r1]
   20178:	add	ip, sp, #1712	; 0x6b0
   2017c:	ldrd	sl, [ip]
   20180:	eor	r0, r0, sl
   20184:	eor	r1, r1, fp
   20188:	lsl	ip, r7, #23
   2018c:	orr	ip, ip, r6, lsr #9
   20190:	str	ip, [sp, #1724]	; 0x6bc
   20194:	lsl	ip, r6, #23
   20198:	orr	ip, ip, r7, lsr #9
   2019c:	str	ip, [sp, #1720]	; 0x6b8
   201a0:	add	ip, sp, #1712	; 0x6b0
   201a4:	add	ip, ip, #8
   201a8:	ldrd	sl, [ip]
   201ac:	eor	sl, sl, r0
   201b0:	eor	fp, fp, r1
   201b4:	adds	sl, r2, sl
   201b8:	adc	fp, r3, fp
   201bc:	ldrd	r2, [sp, #48]	; 0x30
   201c0:	adds	r2, r2, sl
   201c4:	adc	r3, r3, fp
   201c8:	strd	r2, [sp, #16]
   201cc:	lsr	r3, r8, #28
   201d0:	orr	r1, r3, r9, lsl #4
   201d4:	str	r1, [sp, #1728]	; 0x6c0
   201d8:	lsr	r3, r9, #28
   201dc:	orr	r1, r3, r8, lsl #4
   201e0:	str	r1, [sp, #1732]	; 0x6c4
   201e4:	lsl	r3, r9, #30
   201e8:	orr	r1, r3, r8, lsr #2
   201ec:	str	r1, [sp, #1740]	; 0x6cc
   201f0:	lsl	r3, r8, #30
   201f4:	orr	r1, r3, r9, lsr #2
   201f8:	str	r1, [sp, #1736]	; 0x6c8
   201fc:	add	r3, sp, #1728	; 0x6c0
   20200:	ldrd	r2, [r3]
   20204:	add	r1, sp, #1728	; 0x6c0
   20208:	add	r1, r1, #8
   2020c:	ldrd	r4, [r1]
   20210:	eor	r2, r2, r4
   20214:	eor	r3, r3, r5
   20218:	lsl	r1, r9, #25
   2021c:	orr	r1, r1, r8, lsr #7
   20220:	str	r1, [sp, #1748]	; 0x6d4
   20224:	lsl	r1, r8, #25
   20228:	orr	r1, r1, r9, lsr #7
   2022c:	str	r1, [sp, #1744]	; 0x6d0
   20230:	add	r1, sp, #1744	; 0x6d0
   20234:	ldrd	r0, [r1]
   20238:	eor	r0, r0, r2
   2023c:	eor	r1, r1, r3
   20240:	mov	r2, r0
   20244:	mov	r3, r1
   20248:	ldrd	r0, [sp, #24]
   2024c:	orr	r0, r0, r8
   20250:	orr	r1, r1, r9
   20254:	ldrd	r4, [sp, #32]
   20258:	and	r4, r4, r0
   2025c:	and	r5, r5, r1
   20260:	ldrd	r0, [sp, #24]
   20264:	and	r0, r0, r8
   20268:	and	r1, r1, r9
   2026c:	orr	r0, r0, r4
   20270:	orr	r1, r1, r5
   20274:	adds	r0, r0, r2
   20278:	adc	r1, r1, r3
   2027c:	adds	sl, sl, r0
   20280:	adc	fp, fp, r1
   20284:	mov	r2, r6
   20288:	mov	r3, r7
   2028c:	ldrd	r4, [sp, #8]
   20290:	mov	r6, r4
   20294:	mov	r7, r5
   20298:	eor	r6, r6, r2
   2029c:	eor	r7, r7, r3
   202a0:	mov	r2, r6
   202a4:	b	202c8 <__assert_fail@plt+0xefdc>
   202a8:	ldrbmi	r6, [r0, #-4030]!	; 0xfffff042
   202ac:	addne	r5, r3, #1024	; 0x400
   202b0:	cdpmi	2, 14, cr11, cr4, cr12, {4}
   202b4:	ldrtcs	r8, [r1], #-1470	; 0xfffffa42
   202b8:	ldrble	fp, [pc, #1250]!	; 207a2 <__assert_fail@plt+0xf4b6>
   202bc:	strpl	r7, [ip, #-3523]	; 0xfffff23d
   202c0:	vmla.i<illegal width 64>	q12, <illegal reg q5.5>, <illegal reg q15.5>
   202c4:	adcsvc	r5, lr, #116, 26	; 0x1d00
   202c8:	mov	r3, r7
   202cc:	ldrd	r6, [sp, #16]
   202d0:	mov	r0, r6
   202d4:	mov	r1, r7
   202d8:	and	r0, r0, r2
   202dc:	and	r1, r1, r3
   202e0:	mov	r2, r0
   202e4:	mov	r3, r1
   202e8:	mov	r0, r4
   202ec:	mov	r1, r5
   202f0:	eor	r0, r0, r2
   202f4:	eor	r1, r1, r3
   202f8:	sub	r3, pc, #72	; 0x48
   202fc:	ldrd	r2, [r3]
   20300:	add	ip, sp, #7168	; 0x1c00
   20304:	add	ip, ip, #40	; 0x28
   20308:	ldrd	r4, [ip]
   2030c:	adds	r4, r4, r2
   20310:	adc	r5, r5, r3
   20314:	mov	r2, r4
   20318:	mov	r3, r5
   2031c:	ldrd	r4, [sp, #56]	; 0x38
   20320:	adds	r4, r4, r2
   20324:	adc	r5, r5, r3
   20328:	adds	r2, r4, r0
   2032c:	adc	r3, r5, r1
   20330:	lsr	r1, r6, #14
   20334:	orr	r1, r1, r7, lsl #18
   20338:	str	r1, [sp, #1752]	; 0x6d8
   2033c:	lsr	r1, r7, #14
   20340:	orr	r1, r1, r6, lsl #18
   20344:	str	r1, [sp, #1756]	; 0x6dc
   20348:	lsr	r1, r6, #18
   2034c:	orr	r1, r1, r7, lsl #14
   20350:	str	r1, [sp, #1760]	; 0x6e0
   20354:	lsr	r1, r7, #18
   20358:	orr	r1, r1, r6, lsl #14
   2035c:	str	r1, [sp, #1764]	; 0x6e4
   20360:	add	r1, sp, #1744	; 0x6d0
   20364:	add	r1, r1, #8
   20368:	ldrd	r0, [r1]
   2036c:	add	ip, sp, #1760	; 0x6e0
   20370:	ldrd	r4, [ip]
   20374:	eor	r0, r0, r4
   20378:	eor	r1, r1, r5
   2037c:	lsl	ip, r7, #23
   20380:	orr	ip, ip, r6, lsr #9
   20384:	str	ip, [sp, #1772]	; 0x6ec
   20388:	lsl	ip, r6, #23
   2038c:	orr	ip, ip, r7, lsr #9
   20390:	str	ip, [sp, #1768]	; 0x6e8
   20394:	add	ip, sp, #1760	; 0x6e0
   20398:	add	ip, ip, #8
   2039c:	ldrd	r4, [ip]
   203a0:	eor	r4, r4, r0
   203a4:	eor	r5, r5, r1
   203a8:	adds	r4, r2, r4
   203ac:	adc	r5, r3, r5
   203b0:	mov	r6, r4
   203b4:	mov	r7, r5
   203b8:	ldrd	r2, [sp, #32]
   203bc:	adds	r2, r2, r4
   203c0:	adc	r3, r3, r5
   203c4:	mov	r4, r2
   203c8:	mov	r5, r3
   203cc:	strd	r4, [sp]
   203d0:	lsr	r3, sl, #28
   203d4:	orr	r1, r3, fp, lsl #4
   203d8:	str	r1, [sp, #1776]	; 0x6f0
   203dc:	lsr	r3, fp, #28
   203e0:	orr	r1, r3, sl, lsl #4
   203e4:	str	r1, [sp, #1780]	; 0x6f4
   203e8:	lsl	r3, fp, #30
   203ec:	orr	r1, r3, sl, lsr #2
   203f0:	str	r1, [sp, #1788]	; 0x6fc
   203f4:	lsl	r3, sl, #30
   203f8:	orr	r1, r3, fp, lsr #2
   203fc:	str	r1, [sp, #1784]	; 0x6f8
   20400:	add	r3, sp, #1776	; 0x6f0
   20404:	ldrd	r2, [r3]
   20408:	add	r1, sp, #1776	; 0x6f0
   2040c:	add	r1, r1, #8
   20410:	ldrd	r0, [r1]
   20414:	eor	r2, r2, r0
   20418:	eor	r3, r3, r1
   2041c:	lsl	r1, fp, #25
   20420:	orr	r1, r1, sl, lsr #7
   20424:	str	r1, [sp, #1796]	; 0x704
   20428:	lsl	r1, sl, #25
   2042c:	orr	r1, r1, fp, lsr #7
   20430:	str	r1, [sp, #1792]	; 0x700
   20434:	add	r1, sp, #1792	; 0x700
   20438:	ldrd	r0, [r1]
   2043c:	eor	r0, r0, r2
   20440:	eor	r1, r1, r3
   20444:	mov	r2, r0
   20448:	mov	r3, r1
   2044c:	orr	r0, sl, r8
   20450:	orr	r1, fp, r9
   20454:	ldrd	r4, [sp, #24]
   20458:	and	r4, r4, r0
   2045c:	and	r5, r5, r1
   20460:	strd	sl, [sp, #32]
   20464:	and	sl, sl, r8
   20468:	and	fp, fp, r9
   2046c:	orr	r0, r4, sl
   20470:	orr	r1, r5, fp
   20474:	adds	r0, r0, r2
   20478:	adc	r1, r1, r3
   2047c:	adds	r4, r6, r0
   20480:	adc	r5, r7, r1
   20484:	mov	sl, r4
   20488:	mov	fp, r5
   2048c:	ldrd	r6, [sp, #40]	; 0x28
   20490:	mov	r4, r6
   20494:	mov	r5, r7
   20498:	ldrd	r2, [sp, #16]
   2049c:	eor	r4, r4, r2
   204a0:	eor	r5, r5, r3
   204a4:	mov	r2, r4
   204a8:	mov	r3, r5
   204ac:	ldrd	r4, [sp]
   204b0:	and	r4, r4, r2
   204b4:	and	r5, r5, r3
   204b8:	eor	r6, r6, r4
   204bc:	eor	r7, r7, r5
   204c0:	mov	r0, r6
   204c4:	mov	r1, r7
   204c8:	sub	r3, pc, #528	; 0x210
   204cc:	ldrd	r2, [r3]
   204d0:	add	ip, sp, #7168	; 0x1c00
   204d4:	add	ip, ip, #48	; 0x30
   204d8:	ldrd	r6, [ip]
   204dc:	adds	r6, r6, r2
   204e0:	adc	r7, r7, r3
   204e4:	mov	r2, r6
   204e8:	mov	r3, r7
   204ec:	ldrd	r6, [sp, #8]
   204f0:	adds	r6, r6, r2
   204f4:	adc	r7, r7, r3
   204f8:	adds	r2, r6, r0
   204fc:	adc	r3, r7, r1
   20500:	ldrd	r4, [sp]
   20504:	lsr	r1, r4, #14
   20508:	orr	r1, r1, r5, lsl #18
   2050c:	str	r1, [sp, #1800]	; 0x708
   20510:	lsr	r1, r5, #14
   20514:	orr	r1, r1, r4, lsl #18
   20518:	str	r1, [sp, #1804]	; 0x70c
   2051c:	lsr	r1, r4, #18
   20520:	orr	r1, r1, r5, lsl #14
   20524:	str	r1, [sp, #1808]	; 0x710
   20528:	lsr	r1, r5, #18
   2052c:	orr	r1, r1, r4, lsl #14
   20530:	str	r1, [sp, #1812]	; 0x714
   20534:	add	r1, sp, #1792	; 0x700
   20538:	add	r1, r1, #8
   2053c:	ldrd	r0, [r1]
   20540:	add	ip, sp, #1808	; 0x710
   20544:	ldrd	r6, [ip]
   20548:	eor	r0, r0, r6
   2054c:	eor	r1, r1, r7
   20550:	lsl	ip, r5, #23
   20554:	orr	ip, ip, r4, lsr #9
   20558:	str	ip, [sp, #1820]	; 0x71c
   2055c:	lsl	ip, r4, #23
   20560:	orr	ip, ip, r5, lsr #9
   20564:	str	ip, [sp, #1816]	; 0x718
   20568:	add	ip, sp, #1808	; 0x710
   2056c:	add	ip, ip, #8
   20570:	ldrd	r4, [ip]
   20574:	eor	r4, r4, r0
   20578:	eor	r5, r5, r1
   2057c:	adds	r4, r2, r4
   20580:	adc	r5, r3, r5
   20584:	strd	r4, [sp, #56]	; 0x38
   20588:	ldrd	r2, [sp, #24]
   2058c:	adds	r2, r2, r4
   20590:	adc	r3, r3, r5
   20594:	mov	r4, r2
   20598:	mov	r5, r3
   2059c:	strd	r4, [sp, #8]
   205a0:	lsr	r3, sl, #28
   205a4:	orr	r1, r3, fp, lsl #4
   205a8:	str	r1, [sp, #1824]	; 0x720
   205ac:	lsr	r3, fp, #28
   205b0:	orr	r1, r3, sl, lsl #4
   205b4:	str	r1, [sp, #1828]	; 0x724
   205b8:	lsl	r3, fp, #30
   205bc:	orr	r1, r3, sl, lsr #2
   205c0:	str	r1, [sp, #1836]	; 0x72c
   205c4:	lsl	r3, sl, #30
   205c8:	orr	r1, r3, fp, lsr #2
   205cc:	str	r1, [sp, #1832]	; 0x728
   205d0:	add	r3, sp, #1824	; 0x720
   205d4:	ldrd	r2, [r3]
   205d8:	add	r1, sp, #1824	; 0x720
   205dc:	add	r1, r1, #8
   205e0:	ldrd	r0, [r1]
   205e4:	eor	r2, r2, r0
   205e8:	eor	r3, r3, r1
   205ec:	lsl	r1, fp, #25
   205f0:	orr	r1, r1, sl, lsr #7
   205f4:	str	r1, [sp, #1844]	; 0x734
   205f8:	lsl	r1, sl, #25
   205fc:	orr	r1, r1, fp, lsr #7
   20600:	str	r1, [sp, #1840]	; 0x730
   20604:	add	r1, sp, #1840	; 0x730
   20608:	ldrd	r0, [r1]
   2060c:	eor	r0, r0, r2
   20610:	eor	r1, r1, r3
   20614:	mov	r2, r0
   20618:	mov	r3, r1
   2061c:	ldrd	r4, [sp, #32]
   20620:	orr	r0, r4, sl
   20624:	orr	r1, r5, fp
   20628:	and	r0, r0, r8
   2062c:	and	r1, r1, r9
   20630:	strd	r4, [sp, #48]	; 0x30
   20634:	mov	r6, r4
   20638:	mov	r7, r5
   2063c:	and	r6, r6, sl
   20640:	and	r7, r7, fp
   20644:	orr	r0, r0, r6
   20648:	orr	r1, r1, r7
   2064c:	adds	r0, r0, r2
   20650:	adc	r1, r1, r3
   20654:	ldrd	r2, [sp, #56]	; 0x38
   20658:	adds	r2, r2, r0
   2065c:	adc	r3, r3, r1
   20660:	strd	r2, [sp, #24]
   20664:	ldrd	r2, [sp]
   20668:	ldrd	r0, [sp, #16]
   2066c:	eor	r2, r2, r0
   20670:	eor	r3, r3, r1
   20674:	ldrd	r4, [sp, #8]
   20678:	mov	r6, r4
   2067c:	mov	r7, r5
   20680:	and	r6, r6, r2
   20684:	and	r7, r7, r3
   20688:	mov	r2, r6
   2068c:	mov	r3, r7
   20690:	mov	r6, r0
   20694:	mov	r7, r1
   20698:	eor	r6, r6, r2
   2069c:	eor	r7, r7, r3
   206a0:	mov	r2, r6
   206a4:	mov	r3, r7
   206a8:	add	r1, sp, #7168	; 0x1c00
   206ac:	add	r1, r1, #56	; 0x38
   206b0:	ldrd	r0, [r1]
   206b4:	add	r7, pc, #884	; 0x374
   206b8:	ldrd	r6, [r7]
   206bc:	adds	r0, r0, r6
   206c0:	adc	r1, r1, r7
   206c4:	ldrd	r6, [sp, #40]	; 0x28
   206c8:	adds	r6, r6, r0
   206cc:	adc	r7, r7, r1
   206d0:	adds	r2, r2, r6
   206d4:	adc	r3, r3, r7
   206d8:	lsr	r1, r4, #14
   206dc:	orr	r1, r1, r5, lsl #18
   206e0:	str	r1, [sp, #1848]	; 0x738
   206e4:	lsr	r1, r5, #14
   206e8:	orr	r1, r1, r4, lsl #18
   206ec:	str	r1, [sp, #1852]	; 0x73c
   206f0:	lsr	r1, r4, #18
   206f4:	orr	r1, r1, r5, lsl #14
   206f8:	str	r1, [sp, #1856]	; 0x740
   206fc:	lsr	r1, r5, #18
   20700:	orr	r1, r1, r4, lsl #14
   20704:	str	r1, [sp, #1860]	; 0x744
   20708:	add	r1, sp, #1840	; 0x730
   2070c:	add	r1, r1, #8
   20710:	ldrd	r0, [r1]
   20714:	add	ip, sp, #1856	; 0x740
   20718:	ldrd	r6, [ip]
   2071c:	eor	r0, r0, r6
   20720:	eor	r1, r1, r7
   20724:	lsl	ip, r5, #23
   20728:	orr	ip, ip, r4, lsr #9
   2072c:	str	ip, [sp, #1868]	; 0x74c
   20730:	lsl	ip, r4, #23
   20734:	orr	ip, ip, r5, lsr #9
   20738:	str	ip, [sp, #1864]	; 0x748
   2073c:	add	ip, sp, #1856	; 0x740
   20740:	add	ip, ip, #8
   20744:	ldrd	r6, [ip]
   20748:	eor	r6, r6, r0
   2074c:	eor	r7, r7, r1
   20750:	adds	r6, r2, r6
   20754:	adc	r7, r3, r7
   20758:	mov	r2, r6
   2075c:	mov	r3, r7
   20760:	strd	r2, [sp, #40]	; 0x28
   20764:	adds	r2, r6, r8
   20768:	adc	r3, r7, r9
   2076c:	strd	r2, [sp, #32]
   20770:	ldrd	r6, [sp, #24]
   20774:	lsr	r3, r6, #28
   20778:	orr	r1, r3, r7, lsl #4
   2077c:	str	r1, [sp, #1872]	; 0x750
   20780:	lsr	r3, r7, #28
   20784:	orr	r1, r3, r6, lsl #4
   20788:	str	r1, [sp, #1876]	; 0x754
   2078c:	lsl	r3, r7, #30
   20790:	orr	r1, r3, r6, lsr #2
   20794:	str	r1, [sp, #1884]	; 0x75c
   20798:	lsl	r3, r6, #30
   2079c:	orr	r1, r3, r7, lsr #2
   207a0:	str	r1, [sp, #1880]	; 0x758
   207a4:	add	r3, sp, #1872	; 0x750
   207a8:	ldrd	r8, [r3]
   207ac:	add	r3, sp, #1872	; 0x750
   207b0:	add	r3, r3, #8
   207b4:	ldrd	r0, [r3]
   207b8:	eor	r8, r8, r0
   207bc:	eor	r9, r9, r1
   207c0:	mov	r2, r8
   207c4:	mov	r3, r9
   207c8:	lsl	r1, r7, #25
   207cc:	orr	r1, r1, r6, lsr #7
   207d0:	str	r1, [sp, #1892]	; 0x764
   207d4:	lsl	r1, r6, #25
   207d8:	orr	r1, r1, r7, lsr #7
   207dc:	str	r1, [sp, #1888]	; 0x760
   207e0:	add	r1, sp, #1888	; 0x760
   207e4:	ldrd	r8, [r1]
   207e8:	eor	r8, r8, r2
   207ec:	eor	r9, r9, r3
   207f0:	mov	r2, r8
   207f4:	mov	r3, r9
   207f8:	orr	r0, r6, sl
   207fc:	orr	r1, r7, fp
   20800:	ldrd	r4, [sp, #48]	; 0x30
   20804:	and	r4, r4, r0
   20808:	and	r5, r5, r1
   2080c:	mov	r8, r6
   20810:	mov	r9, r7
   20814:	and	r8, r8, sl
   20818:	and	r9, r9, fp
   2081c:	orr	r8, r8, r4
   20820:	orr	r9, r9, r5
   20824:	adds	r0, r8, r2
   20828:	adc	r1, r9, r3
   2082c:	ldrd	r2, [sp, #40]	; 0x28
   20830:	adds	r2, r2, r0
   20834:	adc	r3, r3, r1
   20838:	mov	r8, r2
   2083c:	mov	r9, r3
   20840:	ldrd	r0, [sp]
   20844:	ldrd	r4, [sp, #8]
   20848:	eor	r4, r4, r0
   2084c:	eor	r5, r5, r1
   20850:	mov	r2, r4
   20854:	mov	r3, r5
   20858:	ldrd	r6, [sp, #32]
   2085c:	mov	r4, r6
   20860:	mov	r5, r7
   20864:	and	r4, r4, r2
   20868:	and	r5, r5, r3
   2086c:	eor	r0, r0, r4
   20870:	eor	r1, r1, r5
   20874:	mov	r2, r0
   20878:	mov	r3, r1
   2087c:	add	r1, sp, #7232	; 0x1c40
   20880:	ldrd	r0, [r1]
   20884:	add	r5, pc, #428	; 0x1ac
   20888:	ldrd	r4, [r5]
   2088c:	adds	r0, r0, r4
   20890:	adc	r1, r1, r5
   20894:	ldrd	r4, [sp, #16]
   20898:	adds	r4, r4, r0
   2089c:	adc	r5, r5, r1
   208a0:	adds	r2, r2, r4
   208a4:	adc	r3, r3, r5
   208a8:	lsr	r1, r6, #14
   208ac:	orr	r1, r1, r7, lsl #18
   208b0:	str	r1, [sp, #1896]	; 0x768
   208b4:	lsr	r1, r7, #14
   208b8:	orr	r1, r1, r6, lsl #18
   208bc:	str	r1, [sp, #1900]	; 0x76c
   208c0:	lsr	r1, r6, #18
   208c4:	orr	r1, r1, r7, lsl #14
   208c8:	str	r1, [sp, #1904]	; 0x770
   208cc:	lsr	r1, r7, #18
   208d0:	orr	r1, r1, r6, lsl #14
   208d4:	str	r1, [sp, #1908]	; 0x774
   208d8:	add	r1, sp, #1888	; 0x760
   208dc:	add	r1, r1, #8
   208e0:	ldrd	r0, [r1]
   208e4:	add	ip, sp, #1904	; 0x770
   208e8:	ldrd	r4, [ip]
   208ec:	eor	r0, r0, r4
   208f0:	eor	r1, r1, r5
   208f4:	lsl	ip, r7, #23
   208f8:	orr	ip, ip, r6, lsr #9
   208fc:	str	ip, [sp, #1916]	; 0x77c
   20900:	lsl	ip, r6, #23
   20904:	orr	ip, ip, r7, lsr #9
   20908:	str	ip, [sp, #1912]	; 0x778
   2090c:	add	ip, sp, #1904	; 0x770
   20910:	add	ip, ip, #8
   20914:	ldrd	r4, [ip]
   20918:	eor	r4, r4, r0
   2091c:	eor	r5, r5, r1
   20920:	adds	r4, r2, r4
   20924:	adc	r5, r3, r5
   20928:	mov	r6, r4
   2092c:	mov	r7, r5
   20930:	ldrd	r4, [sp, #48]	; 0x30
   20934:	adds	r4, r4, r6
   20938:	adc	r5, r5, r7
   2093c:	strd	r4, [sp, #48]	; 0x30
   20940:	lsr	r3, r8, #28
   20944:	orr	r2, r3, r9, lsl #4
   20948:	str	r2, [sp, #1920]	; 0x780
   2094c:	lsr	r3, r9, #28
   20950:	orr	r2, r3, r8, lsl #4
   20954:	str	r2, [sp, #1924]	; 0x784
   20958:	lsl	r3, r9, #30
   2095c:	orr	r2, r3, r8, lsr #2
   20960:	str	r2, [sp, #1932]	; 0x78c
   20964:	lsl	r3, r8, #30
   20968:	orr	r2, r3, r9, lsr #2
   2096c:	str	r2, [sp, #1928]	; 0x788
   20970:	add	r3, sp, #1920	; 0x780
   20974:	ldrd	r2, [r3]
   20978:	add	r1, sp, #1920	; 0x780
   2097c:	add	r1, r1, #8
   20980:	ldrd	r0, [r1]
   20984:	eor	r2, r2, r0
   20988:	eor	r3, r3, r1
   2098c:	lsl	r1, r9, #25
   20990:	orr	r1, r1, r8, lsr #7
   20994:	str	r1, [sp, #1940]	; 0x794
   20998:	lsl	r1, r8, #25
   2099c:	orr	r1, r1, r9, lsr #7
   209a0:	str	r1, [sp, #1936]	; 0x790
   209a4:	add	r1, sp, #1936	; 0x790
   209a8:	ldrd	r0, [r1]
   209ac:	eor	r0, r0, r2
   209b0:	eor	r1, r1, r3
   209b4:	strd	r0, [sp, #16]
   209b8:	ldrd	r4, [sp, #24]
   209bc:	orr	r2, r4, r8
   209c0:	orr	r3, r5, r9
   209c4:	mov	r0, r2
   209c8:	mov	r1, r3
   209cc:	and	r0, r0, sl
   209d0:	and	r1, r1, fp
   209d4:	strd	r8, [sp, #40]	; 0x28
   209d8:	and	r4, r4, r8
   209dc:	and	r5, r5, r9
   209e0:	orr	r8, r4, r0
   209e4:	orr	r9, r5, r1
   209e8:	ldrd	r2, [sp, #16]
   209ec:	adds	r2, r2, r8
   209f0:	adc	r3, r3, r9
   209f4:	mov	r0, r2
   209f8:	mov	r1, r3
   209fc:	adds	r2, r6, r0
   20a00:	adc	r3, r7, r1
   20a04:	mov	r8, r2
   20a08:	mov	r9, r3
   20a0c:	ldrd	r4, [sp, #8]
   20a10:	mov	r0, r4
   20a14:	mov	r1, r5
   20a18:	ldrd	r6, [sp, #32]
   20a1c:	eor	r0, r0, r6
   20a20:	eor	r1, r1, r7
   20a24:	ldrd	r6, [sp, #48]	; 0x30
   20a28:	b	20a48 <__assert_fail@plt+0xf75c>
   20a2c:	nop			; (mov r0, r0)
   20a30:	blcc	5c64fc <optarg@@GLIBC_2.4+0x57c354>
   20a34:	ldrshhi	fp, [lr], #30
   20a38:	strbcs	r1, [r7, #565]	; 0x235
   20a3c:	blls	ff7224e0 <optarg@@GLIBC_2.4+0xff6d8338>
   20a40:	svcgt	0x00692694
   20a44:	orrsgt	pc, fp, r4, ror r1	; <UNPREDICTABLE>
   20a48:	mov	r2, r6
   20a4c:	mov	r3, r7
   20a50:	and	r2, r2, r0
   20a54:	and	r3, r3, r1
   20a58:	mov	r0, r2
   20a5c:	mov	r1, r3
   20a60:	mov	r2, r4
   20a64:	mov	r3, r5
   20a68:	eor	r2, r2, r0
   20a6c:	eor	r3, r3, r1
   20a70:	mov	r0, r2
   20a74:	mov	r1, r3
   20a78:	add	r3, sp, #7232	; 0x1c40
   20a7c:	add	r3, r3, #8
   20a80:	ldrd	r2, [r3]
   20a84:	sub	r5, pc, #76	; 0x4c
   20a88:	ldrd	r4, [r5]
   20a8c:	adds	r2, r2, r4
   20a90:	adc	r3, r3, r5
   20a94:	ldrd	r4, [sp]
   20a98:	adds	r4, r4, r2
   20a9c:	adc	r5, r5, r3
   20aa0:	adds	r0, r0, r4
   20aa4:	adc	r1, r1, r5
   20aa8:	lsr	r3, r6, #14
   20aac:	orr	ip, r3, r7, lsl #18
   20ab0:	str	ip, [sp, #1944]	; 0x798
   20ab4:	lsr	r3, r7, #14
   20ab8:	orr	ip, r3, r6, lsl #18
   20abc:	str	ip, [sp, #1948]	; 0x79c
   20ac0:	lsr	r3, r6, #18
   20ac4:	orr	ip, r3, r7, lsl #14
   20ac8:	str	ip, [sp, #1952]	; 0x7a0
   20acc:	lsr	r3, r7, #18
   20ad0:	orr	ip, r3, r6, lsl #14
   20ad4:	str	ip, [sp, #1956]	; 0x7a4
   20ad8:	add	r3, sp, #1936	; 0x790
   20adc:	add	r3, r3, #8
   20ae0:	ldrd	r2, [r3]
   20ae4:	add	ip, sp, #1952	; 0x7a0
   20ae8:	ldrd	r4, [ip]
   20aec:	eor	r2, r2, r4
   20af0:	eor	r3, r3, r5
   20af4:	lsl	ip, r7, #23
   20af8:	orr	ip, ip, r6, lsr #9
   20afc:	str	ip, [sp, #1964]	; 0x7ac
   20b00:	lsl	ip, r6, #23
   20b04:	orr	ip, ip, r7, lsr #9
   20b08:	str	ip, [sp, #1960]	; 0x7a8
   20b0c:	add	ip, sp, #1952	; 0x7a0
   20b10:	add	ip, ip, #8
   20b14:	ldrd	r4, [ip]
   20b18:	eor	r4, r4, r2
   20b1c:	eor	r5, r5, r3
   20b20:	adds	r4, r0, r4
   20b24:	adc	r5, r1, r5
   20b28:	mov	r0, r4
   20b2c:	mov	r1, r5
   20b30:	strd	r0, [sp, #16]
   20b34:	adds	r0, r4, sl
   20b38:	adc	r1, r5, fp
   20b3c:	strd	r0, [sp]
   20b40:	lsr	r3, r8, #28
   20b44:	mov	r4, r8
   20b48:	mov	r5, r9
   20b4c:	orr	r1, r3, r9, lsl #4
   20b50:	str	r1, [sp, #1968]	; 0x7b0
   20b54:	lsr	r3, r9, #28
   20b58:	orr	r1, r3, r8, lsl #4
   20b5c:	str	r1, [sp, #1972]	; 0x7b4
   20b60:	lsl	r3, r9, #30
   20b64:	orr	r1, r3, r8, lsr #2
   20b68:	str	r1, [sp, #1980]	; 0x7bc
   20b6c:	lsl	r3, r8, #30
   20b70:	orr	r1, r3, r9, lsr #2
   20b74:	str	r1, [sp, #1976]	; 0x7b8
   20b78:	add	r3, sp, #1968	; 0x7b0
   20b7c:	ldrd	r2, [r3]
   20b80:	add	r1, sp, #1968	; 0x7b0
   20b84:	add	r1, r1, #8
   20b88:	ldrd	sl, [r1]
   20b8c:	eor	r2, r2, sl
   20b90:	eor	r3, r3, fp
   20b94:	lsl	r1, r9, #25
   20b98:	orr	r1, r1, r8, lsr #7
   20b9c:	str	r1, [sp, #1988]	; 0x7c4
   20ba0:	lsl	r1, r8, #25
   20ba4:	orr	r1, r1, r9, lsr #7
   20ba8:	str	r1, [sp, #1984]	; 0x7c0
   20bac:	add	r1, sp, #1984	; 0x7c0
   20bb0:	ldrd	sl, [r1]
   20bb4:	eor	sl, sl, r2
   20bb8:	eor	fp, fp, r3
   20bbc:	mov	r2, sl
   20bc0:	mov	r3, fp
   20bc4:	ldrd	r8, [sp, #40]	; 0x28
   20bc8:	orr	r0, r8, r4
   20bcc:	orr	r1, r9, r5
   20bd0:	ldrd	sl, [sp, #24]
   20bd4:	and	sl, sl, r0
   20bd8:	and	fp, fp, r1
   20bdc:	and	r8, r8, r4
   20be0:	and	r9, r9, r5
   20be4:	orr	r8, r8, sl
   20be8:	orr	r9, r9, fp
   20bec:	adds	r0, r8, r2
   20bf0:	adc	r1, r9, r3
   20bf4:	ldrd	r2, [sp, #16]
   20bf8:	adds	r2, r2, r0
   20bfc:	adc	r3, r3, r1
   20c00:	mov	sl, r2
   20c04:	mov	fp, r3
   20c08:	add	r3, sp, #7232	; 0x1c40
   20c0c:	ldr	r2, [r3]
   20c10:	lsr	r3, r2, #19
   20c14:	add	r2, sp, #7232	; 0x1c40
   20c18:	add	r2, r2, #4
   20c1c:	ldr	r2, [r2]
   20c20:	orr	r2, r3, r2, lsl #13
   20c24:	str	r2, [sp, #1992]	; 0x7c8
   20c28:	add	r3, sp, #7232	; 0x1c40
   20c2c:	add	r3, r3, #4
   20c30:	ldr	r2, [r3]
   20c34:	lsr	r3, r2, #19
   20c38:	add	r2, sp, #7232	; 0x1c40
   20c3c:	ldr	r2, [r2]
   20c40:	orr	r2, r3, r2, lsl #13
   20c44:	str	r2, [sp, #1996]	; 0x7cc
   20c48:	add	r3, sp, #7232	; 0x1c40
   20c4c:	add	r3, r3, #4
   20c50:	ldr	r2, [r3]
   20c54:	lsl	r3, r2, #3
   20c58:	add	r2, sp, #7232	; 0x1c40
   20c5c:	ldr	r2, [r2]
   20c60:	orr	r2, r3, r2, lsr #29
   20c64:	str	r2, [sp, #2004]	; 0x7d4
   20c68:	add	r3, sp, #7232	; 0x1c40
   20c6c:	ldr	r2, [r3]
   20c70:	lsl	r3, r2, #3
   20c74:	add	r2, sp, #7232	; 0x1c40
   20c78:	add	r2, r2, #4
   20c7c:	ldr	r2, [r2]
   20c80:	orr	r2, r3, r2, lsr #29
   20c84:	str	r2, [sp, #2000]	; 0x7d0
   20c88:	add	r3, sp, #1984	; 0x7c0
   20c8c:	add	r3, r3, #8
   20c90:	ldrd	r0, [r3]
   20c94:	add	r3, sp, #2000	; 0x7d0
   20c98:	ldrd	r2, [r3]
   20c9c:	eor	r0, r0, r2
   20ca0:	eor	r1, r1, r3
   20ca4:	add	r3, sp, #7232	; 0x1c40
   20ca8:	ldr	r2, [r3]
   20cac:	lsr	r2, r2, #6
   20cb0:	add	r3, sp, #7232	; 0x1c40
   20cb4:	add	r3, r3, #4
   20cb8:	ldr	ip, [r3]
   20cbc:	orr	r2, r2, ip, lsl #26
   20cc0:	str	r2, [sp, #200]	; 0xc8
   20cc4:	lsr	r2, ip, #6
   20cc8:	str	r2, [sp, #204]	; 0xcc
   20ccc:	ldrd	r2, [sp, #200]	; 0xc8
   20cd0:	eor	r2, r2, r0
   20cd4:	eor	r3, r3, r1
   20cd8:	mov	r0, r2
   20cdc:	mov	r1, r3
   20ce0:	add	r3, sp, #7104	; 0x1bc0
   20ce4:	add	r3, r3, #16
   20ce8:	ldrd	r2, [r3]
   20cec:	add	ip, sp, #7168	; 0x1c00
   20cf0:	add	ip, ip, #24
   20cf4:	ldrd	r8, [ip]
   20cf8:	adds	r2, r2, r8
   20cfc:	adc	r3, r3, r9
   20d00:	adds	r2, r2, r0
   20d04:	adc	r3, r3, r1
   20d08:	add	r1, sp, #7104	; 0x1bc0
   20d0c:	add	r1, r1, #24
   20d10:	ldr	r1, [r1]
   20d14:	lsr	r1, r1, #1
   20d18:	add	r0, sp, #7104	; 0x1bc0
   20d1c:	add	r0, r0, #28
   20d20:	ldr	ip, [r0]
   20d24:	orr	r1, r1, ip, lsl #31
   20d28:	str	r1, [sp, #2008]	; 0x7d8
   20d2c:	lsr	r1, ip, #1
   20d30:	add	r0, sp, #7104	; 0x1bc0
   20d34:	add	r0, r0, #24
   20d38:	ldr	ip, [r0]
   20d3c:	orr	r1, r1, ip, lsl #31
   20d40:	str	r1, [sp, #2012]	; 0x7dc
   20d44:	lsr	r1, ip, #8
   20d48:	add	r0, sp, #7104	; 0x1bc0
   20d4c:	add	r0, r0, #28
   20d50:	ldr	ip, [r0]
   20d54:	orr	r1, r1, ip, lsl #24
   20d58:	str	r1, [sp, #2016]	; 0x7e0
   20d5c:	lsr	r1, ip, #8
   20d60:	add	r0, sp, #7104	; 0x1bc0
   20d64:	add	r0, r0, #24
   20d68:	ldr	ip, [r0]
   20d6c:	orr	r1, r1, ip, lsl #24
   20d70:	str	r1, [sp, #2020]	; 0x7e4
   20d74:	add	r1, sp, #2000	; 0x7d0
   20d78:	add	r1, r1, #8
   20d7c:	ldrd	r0, [r1]
   20d80:	add	ip, sp, #2016	; 0x7e0
   20d84:	ldrd	r8, [ip]
   20d88:	eor	r0, r0, r8
   20d8c:	eor	r1, r1, r9
   20d90:	add	ip, sp, #7104	; 0x1bc0
   20d94:	add	ip, ip, #24
   20d98:	ldr	ip, [ip]
   20d9c:	lsr	ip, ip, #7
   20da0:	add	r8, sp, #7104	; 0x1bc0
   20da4:	add	r8, r8, #28
   20da8:	ldr	r9, [r8]
   20dac:	orr	ip, ip, r9, lsl #25
   20db0:	str	ip, [sp, #208]	; 0xd0
   20db4:	lsr	ip, r9, #7
   20db8:	str	ip, [sp, #212]	; 0xd4
   20dbc:	ldrd	r8, [sp, #208]	; 0xd0
   20dc0:	eor	r8, r8, r0
   20dc4:	eor	r9, r9, r1
   20dc8:	adds	r8, r2, r8
   20dcc:	adc	r9, r3, r9
   20dd0:	strd	r6, [sp, #56]	; 0x38
   20dd4:	mov	r0, r6
   20dd8:	mov	r1, r7
   20ddc:	ldrd	r2, [sp, #32]
   20de0:	mov	r6, r2
   20de4:	mov	r7, r3
   20de8:	eor	r6, r6, r0
   20dec:	eor	r7, r7, r1
   20df0:	mov	r0, r6
   20df4:	mov	r1, r7
   20df8:	ldrd	r6, [sp]
   20dfc:	and	r6, r6, r0
   20e00:	and	r7, r7, r1
   20e04:	mov	r0, r6
   20e08:	mov	r1, r7
   20e0c:	mov	r6, r2
   20e10:	mov	r7, r3
   20e14:	eor	r6, r6, r0
   20e18:	eor	r7, r7, r1
   20e1c:	mov	r0, r6
   20e20:	mov	r1, r7
   20e24:	add	r3, pc, #908	; 0x38c
   20e28:	ldrd	r2, [r3]
   20e2c:	strd	r8, [sp, #48]	; 0x30
   20e30:	adds	r6, r8, r2
   20e34:	adc	r7, r9, r3
   20e38:	mov	r2, r6
   20e3c:	mov	r3, r7
   20e40:	ldrd	r6, [sp, #8]
   20e44:	adds	r6, r6, r2
   20e48:	adc	r7, r7, r3
   20e4c:	adds	r0, r0, r6
   20e50:	adc	r1, r1, r7
   20e54:	ldrd	r8, [sp]
   20e58:	lsr	r3, r8, #14
   20e5c:	orr	r2, r3, r9, lsl #18
   20e60:	str	r2, [sp, #2024]	; 0x7e8
   20e64:	lsr	r3, r9, #14
   20e68:	orr	r2, r3, r8, lsl #18
   20e6c:	str	r2, [sp, #2028]	; 0x7ec
   20e70:	lsr	r3, r8, #18
   20e74:	orr	r2, r3, r9, lsl #14
   20e78:	str	r2, [sp, #2032]	; 0x7f0
   20e7c:	lsr	r3, r9, #18
   20e80:	orr	r2, r3, r8, lsl #14
   20e84:	str	r2, [sp, #2036]	; 0x7f4
   20e88:	add	r3, sp, #2016	; 0x7e0
   20e8c:	add	r3, r3, #8
   20e90:	ldrd	r2, [r3]
   20e94:	add	ip, sp, #2032	; 0x7f0
   20e98:	ldrd	r6, [ip]
   20e9c:	eor	r2, r2, r6
   20ea0:	eor	r3, r3, r7
   20ea4:	lsl	ip, r9, #23
   20ea8:	mov	r6, r8
   20eac:	mov	r7, r9
   20eb0:	orr	ip, ip, r8, lsr #9
   20eb4:	str	ip, [sp, #2044]	; 0x7fc
   20eb8:	lsl	ip, r6, #23
   20ebc:	orr	ip, ip, r7, lsr #9
   20ec0:	str	ip, [sp, #2040]	; 0x7f8
   20ec4:	add	ip, sp, #2032	; 0x7f0
   20ec8:	add	ip, ip, #8
   20ecc:	ldrd	r6, [ip]
   20ed0:	eor	r6, r6, r2
   20ed4:	eor	r7, r7, r3
   20ed8:	adds	r6, r0, r6
   20edc:	adc	r7, r1, r7
   20ee0:	ldrd	r2, [sp, #24]
   20ee4:	strd	r6, [sp, #16]
   20ee8:	adds	r2, r2, r6
   20eec:	adc	r3, r3, r7
   20ef0:	strd	r2, [sp, #8]
   20ef4:	lsr	r3, sl, #28
   20ef8:	orr	r2, r3, fp, lsl #4
   20efc:	str	r2, [sp, #2048]	; 0x800
   20f00:	lsr	r3, fp, #28
   20f04:	orr	r2, r3, sl, lsl #4
   20f08:	str	r2, [sp, #2052]	; 0x804
   20f0c:	lsl	r3, fp, #30
   20f10:	orr	r2, r3, sl, lsr #2
   20f14:	str	r2, [sp, #2060]	; 0x80c
   20f18:	lsl	r3, sl, #30
   20f1c:	orr	r2, r3, fp, lsr #2
   20f20:	str	r2, [sp, #2056]	; 0x808
   20f24:	add	r3, sp, #2048	; 0x800
   20f28:	ldrd	r2, [r3]
   20f2c:	add	r1, sp, #2048	; 0x800
   20f30:	add	r1, r1, #8
   20f34:	ldrd	r0, [r1]
   20f38:	eor	r2, r2, r0
   20f3c:	eor	r3, r3, r1
   20f40:	lsl	r1, fp, #25
   20f44:	orr	r1, r1, sl, lsr #7
   20f48:	str	r1, [sp, #2068]	; 0x814
   20f4c:	lsl	r1, sl, #25
   20f50:	orr	r1, r1, fp, lsr #7
   20f54:	str	r1, [sp, #2064]	; 0x810
   20f58:	add	r1, sp, #2064	; 0x810
   20f5c:	ldrd	r0, [r1]
   20f60:	eor	r0, r0, r2
   20f64:	eor	r1, r1, r3
   20f68:	mov	r2, r0
   20f6c:	mov	r3, r1
   20f70:	orr	r0, r4, sl
   20f74:	orr	r1, r5, fp
   20f78:	ldrd	r8, [sp, #40]	; 0x28
   20f7c:	and	r8, r8, r0
   20f80:	and	r9, r9, r1
   20f84:	strd	r4, [sp, #24]
   20f88:	mov	r6, r4
   20f8c:	mov	r7, r5
   20f90:	strd	sl, [sp, #80]	; 0x50
   20f94:	and	r6, r6, sl
   20f98:	and	r7, r7, fp
   20f9c:	orr	r6, r6, r8
   20fa0:	orr	r7, r7, r9
   20fa4:	adds	r0, r6, r2
   20fa8:	adc	r1, r7, r3
   20fac:	ldrd	r4, [sp, #16]
   20fb0:	adds	r4, r4, r0
   20fb4:	adc	r5, r5, r1
   20fb8:	strd	r4, [sp, #16]
   20fbc:	add	r3, sp, #7232	; 0x1c40
   20fc0:	add	r3, r3, #8
   20fc4:	ldr	r2, [r3]
   20fc8:	lsr	r3, r2, #19
   20fcc:	add	r2, sp, #7232	; 0x1c40
   20fd0:	add	r2, r2, #12
   20fd4:	ldr	r2, [r2]
   20fd8:	orr	r2, r3, r2, lsl #13
   20fdc:	str	r2, [sp, #2072]	; 0x818
   20fe0:	add	r3, sp, #7232	; 0x1c40
   20fe4:	add	r3, r3, #12
   20fe8:	ldr	r2, [r3]
   20fec:	lsr	r3, r2, #19
   20ff0:	add	r2, sp, #7232	; 0x1c40
   20ff4:	add	r2, r2, #8
   20ff8:	ldr	r2, [r2]
   20ffc:	orr	r2, r3, r2, lsl #13
   21000:	str	r2, [sp, #2076]	; 0x81c
   21004:	add	r3, sp, #7232	; 0x1c40
   21008:	add	r3, r3, #12
   2100c:	ldr	r2, [r3]
   21010:	lsl	r3, r2, #3
   21014:	add	r2, sp, #7232	; 0x1c40
   21018:	add	r2, r2, #8
   2101c:	ldr	r2, [r2]
   21020:	orr	r2, r3, r2, lsr #29
   21024:	str	r2, [sp, #2084]	; 0x824
   21028:	add	r3, sp, #7232	; 0x1c40
   2102c:	add	r3, r3, #8
   21030:	ldr	r2, [r3]
   21034:	lsl	r3, r2, #3
   21038:	add	r2, sp, #7232	; 0x1c40
   2103c:	add	r2, r2, #12
   21040:	ldr	r2, [r2]
   21044:	orr	r2, r3, r2, lsr #29
   21048:	str	r2, [sp, #2080]	; 0x820
   2104c:	add	r3, sp, #2064	; 0x810
   21050:	add	r3, r3, #8
   21054:	ldrd	r2, [r3]
   21058:	add	r1, sp, #2080	; 0x820
   2105c:	ldrd	r4, [r1]
   21060:	eor	r2, r2, r4
   21064:	eor	r3, r3, r5
   21068:	mov	r0, r2
   2106c:	mov	r1, r3
   21070:	add	r3, sp, #7232	; 0x1c40
   21074:	add	r3, r3, #8
   21078:	ldr	r2, [r3]
   2107c:	lsr	r2, r2, #6
   21080:	add	r3, sp, #7232	; 0x1c40
   21084:	add	r3, r3, #12
   21088:	ldr	ip, [r3]
   2108c:	orr	r2, r2, ip, lsl #26
   21090:	str	r2, [sp, #216]	; 0xd8
   21094:	lsr	r2, ip, #6
   21098:	str	r2, [sp, #220]	; 0xdc
   2109c:	ldrd	r2, [sp, #216]	; 0xd8
   210a0:	eor	r2, r2, r0
   210a4:	eor	r3, r3, r1
   210a8:	mov	r0, r2
   210ac:	mov	r1, r3
   210b0:	add	r3, sp, #7104	; 0x1bc0
   210b4:	add	r3, r3, #24
   210b8:	ldrd	r2, [r3]
   210bc:	add	ip, sp, #7168	; 0x1c00
   210c0:	add	ip, ip, #32
   210c4:	ldrd	r4, [ip]
   210c8:	adds	r2, r2, r4
   210cc:	adc	r3, r3, r5
   210d0:	adds	r2, r2, r0
   210d4:	adc	r3, r3, r1
   210d8:	add	r1, sp, #7104	; 0x1bc0
   210dc:	add	r1, r1, #32
   210e0:	ldr	r1, [r1]
   210e4:	lsr	r1, r1, #1
   210e8:	add	r0, sp, #7104	; 0x1bc0
   210ec:	add	r0, r0, #36	; 0x24
   210f0:	ldr	ip, [r0]
   210f4:	orr	r1, r1, ip, lsl #31
   210f8:	str	r1, [sp, #2088]	; 0x828
   210fc:	lsr	r1, ip, #1
   21100:	add	r0, sp, #7104	; 0x1bc0
   21104:	add	r0, r0, #32
   21108:	ldr	ip, [r0]
   2110c:	orr	r1, r1, ip, lsl #31
   21110:	str	r1, [sp, #2092]	; 0x82c
   21114:	lsr	r1, ip, #8
   21118:	add	r0, sp, #7104	; 0x1bc0
   2111c:	add	r0, r0, #36	; 0x24
   21120:	ldr	ip, [r0]
   21124:	orr	r1, r1, ip, lsl #24
   21128:	str	r1, [sp, #2096]	; 0x830
   2112c:	lsr	r1, ip, #8
   21130:	add	r0, sp, #7104	; 0x1bc0
   21134:	add	r0, r0, #32
   21138:	ldr	ip, [r0]
   2113c:	orr	r1, r1, ip, lsl #24
   21140:	str	r1, [sp, #2100]	; 0x834
   21144:	add	r1, sp, #2080	; 0x820
   21148:	add	r1, r1, #8
   2114c:	ldrd	r4, [r1]
   21150:	add	r1, sp, #2096	; 0x830
   21154:	ldrd	sl, [r1]
   21158:	eor	r4, r4, sl
   2115c:	eor	r5, r5, fp
   21160:	mov	r0, r4
   21164:	mov	r1, r5
   21168:	add	ip, sp, #7104	; 0x1bc0
   2116c:	add	ip, ip, #32
   21170:	ldr	ip, [ip]
   21174:	lsr	ip, ip, #7
   21178:	add	r4, sp, #7104	; 0x1bc0
   2117c:	add	r4, r4, #36	; 0x24
   21180:	ldr	r5, [r4]
   21184:	orr	ip, ip, r5, lsl #25
   21188:	str	ip, [sp, #224]	; 0xe0
   2118c:	lsr	ip, r5, #7
   21190:	str	ip, [sp, #228]	; 0xe4
   21194:	ldrd	r4, [sp, #224]	; 0xe0
   21198:	eor	r4, r4, r0
   2119c:	eor	r5, r5, r1
   211a0:	adds	r4, r2, r4
   211a4:	adc	r5, r3, r5
   211a8:	mov	r8, r4
   211ac:	mov	r9, r5
   211b0:	b	211c8 <__assert_fail@plt+0xfedc>
   211b4:	nop			; (mov r0, r0)
   211b8:			; <UNDEFINED> instruction: 0x9ef14ad2
   211bc:	ldr	r6, [fp], #2497	; 0x9c1
   211c0:	stmdacc	pc, {r0, r1, r5, r6, r7, r8, sl, sp}^	; <UNPREDICTABLE>
   211c4:	svc	0x00be4786
   211c8:	ldrd	r4, [sp, #56]	; 0x38
   211cc:	ldrd	sl, [sp]
   211d0:	eor	sl, sl, r4
   211d4:	eor	fp, fp, r5
   211d8:	ldrd	r6, [sp, #8]
   211dc:	mov	r2, r6
   211e0:	mov	r3, r7
   211e4:	and	r2, r2, sl
   211e8:	and	r3, r3, fp
   211ec:	mov	r0, r2
   211f0:	mov	r1, r3
   211f4:	strd	r4, [sp, #72]	; 0x48
   211f8:	mov	r2, r4
   211fc:	mov	r3, r5
   21200:	eor	r2, r2, r0
   21204:	eor	r3, r3, r1
   21208:	mov	r0, r2
   2120c:	mov	r1, r3
   21210:	sub	r3, pc, #88	; 0x58
   21214:	ldrd	r2, [r3]
   21218:	strd	r8, [sp, #56]	; 0x38
   2121c:	adds	r8, r8, r2
   21220:	adc	r9, r9, r3
   21224:	mov	r2, r8
   21228:	mov	r3, r9
   2122c:	ldrd	r8, [sp, #32]
   21230:	adds	r8, r8, r2
   21234:	adc	r9, r9, r3
   21238:	adds	r0, r0, r8
   2123c:	adc	r1, r1, r9
   21240:	lsr	r3, r6, #14
   21244:	orr	r2, r3, r7, lsl #18
   21248:	str	r2, [sp, #2104]	; 0x838
   2124c:	lsr	r3, r7, #14
   21250:	orr	r2, r3, r6, lsl #18
   21254:	str	r2, [sp, #2108]	; 0x83c
   21258:	lsr	r3, r6, #18
   2125c:	orr	r2, r3, r7, lsl #14
   21260:	str	r2, [sp, #2112]	; 0x840
   21264:	lsr	r3, r7, #18
   21268:	orr	r2, r3, r6, lsl #14
   2126c:	str	r2, [sp, #2116]	; 0x844
   21270:	add	r3, sp, #2096	; 0x830
   21274:	add	r3, r3, #8
   21278:	ldrd	r2, [r3]
   2127c:	add	ip, sp, #2112	; 0x840
   21280:	ldrd	sl, [ip]
   21284:	eor	r2, r2, sl
   21288:	eor	r3, r3, fp
   2128c:	lsl	ip, r7, #23
   21290:	orr	ip, ip, r6, lsr #9
   21294:	str	ip, [sp, #2124]	; 0x84c
   21298:	lsl	ip, r6, #23
   2129c:	orr	ip, ip, r7, lsr #9
   212a0:	str	ip, [sp, #2120]	; 0x848
   212a4:	add	ip, sp, #2112	; 0x840
   212a8:	add	ip, ip, #8
   212ac:	ldrd	sl, [ip]
   212b0:	eor	sl, sl, r2
   212b4:	eor	fp, fp, r3
   212b8:	adds	r6, r0, sl
   212bc:	adc	r7, r1, fp
   212c0:	mov	sl, r6
   212c4:	mov	fp, r7
   212c8:	ldrd	r8, [sp, #40]	; 0x28
   212cc:	adds	r8, r8, r6
   212d0:	adc	r9, r9, r7
   212d4:	ldrd	r4, [sp, #16]
   212d8:	lsr	r3, r4, #28
   212dc:	orr	r2, r3, r5, lsl #4
   212e0:	str	r2, [sp, #2128]	; 0x850
   212e4:	lsr	r3, r5, #28
   212e8:	orr	r2, r3, r4, lsl #4
   212ec:	str	r2, [sp, #2132]	; 0x854
   212f0:	lsl	r3, r5, #30
   212f4:	orr	r2, r3, r4, lsr #2
   212f8:	str	r2, [sp, #2140]	; 0x85c
   212fc:	lsl	r3, r4, #30
   21300:	orr	r2, r3, r5, lsr #2
   21304:	str	r2, [sp, #2136]	; 0x858
   21308:	add	r3, sp, #2128	; 0x850
   2130c:	ldrd	r2, [r3]
   21310:	add	r1, sp, #2128	; 0x850
   21314:	add	r1, r1, #8
   21318:	ldrd	r0, [r1]
   2131c:	eor	r2, r2, r0
   21320:	eor	r3, r3, r1
   21324:	lsl	r1, r5, #25
   21328:	orr	r1, r1, r4, lsr #7
   2132c:	str	r1, [sp, #2148]	; 0x864
   21330:	lsl	r1, r4, #25
   21334:	orr	r1, r1, r5, lsr #7
   21338:	str	r1, [sp, #2144]	; 0x860
   2133c:	add	r1, sp, #2144	; 0x860
   21340:	ldrd	r0, [r1]
   21344:	eor	r0, r0, r2
   21348:	eor	r1, r1, r3
   2134c:	strd	r0, [sp, #32]
   21350:	ldrd	r0, [sp, #80]	; 0x50
   21354:	mov	r2, r4
   21358:	mov	r3, r5
   2135c:	orr	r4, r4, r0
   21360:	orr	r5, r5, r1
   21364:	ldrd	r6, [sp, #24]
   21368:	and	r6, r6, r4
   2136c:	and	r7, r7, r5
   21370:	mov	r0, r6
   21374:	mov	r1, r7
   21378:	ldrd	r6, [sp, #80]	; 0x50
   2137c:	mov	r4, r2
   21380:	mov	r5, r3
   21384:	and	r4, r4, r6
   21388:	and	r5, r5, r7
   2138c:	orr	r6, r4, r0
   21390:	orr	r7, r5, r1
   21394:	ldrd	r2, [sp, #32]
   21398:	adds	r2, r2, r6
   2139c:	adc	r3, r3, r7
   213a0:	mov	r0, r2
   213a4:	mov	r1, r3
   213a8:	adds	r2, sl, r0
   213ac:	adc	r3, fp, r1
   213b0:	mov	sl, r2
   213b4:	mov	fp, r3
   213b8:	add	r3, sp, #7104	; 0x1bc0
   213bc:	add	r3, r3, #40	; 0x28
   213c0:	ldr	r2, [r3]
   213c4:	lsr	r3, r2, #1
   213c8:	add	r2, sp, #7104	; 0x1bc0
   213cc:	add	r2, r2, #44	; 0x2c
   213d0:	ldr	r2, [r2]
   213d4:	orr	r2, r3, r2, lsl #31
   213d8:	str	r2, [sp, #2152]	; 0x868
   213dc:	add	r3, sp, #7104	; 0x1bc0
   213e0:	add	r3, r3, #44	; 0x2c
   213e4:	ldr	r2, [r3]
   213e8:	lsr	r3, r2, #1
   213ec:	add	r2, sp, #7104	; 0x1bc0
   213f0:	add	r2, r2, #40	; 0x28
   213f4:	ldr	r2, [r2]
   213f8:	orr	r2, r3, r2, lsl #31
   213fc:	str	r2, [sp, #2156]	; 0x86c
   21400:	add	r3, sp, #7104	; 0x1bc0
   21404:	add	r3, r3, #40	; 0x28
   21408:	ldr	r2, [r3]
   2140c:	lsr	r3, r2, #8
   21410:	add	r2, sp, #7104	; 0x1bc0
   21414:	add	r2, r2, #44	; 0x2c
   21418:	ldr	r2, [r2]
   2141c:	orr	r2, r3, r2, lsl #24
   21420:	str	r2, [sp, #2160]	; 0x870
   21424:	add	r3, sp, #7104	; 0x1bc0
   21428:	add	r3, r3, #44	; 0x2c
   2142c:	ldr	r2, [r3]
   21430:	lsr	r3, r2, #8
   21434:	add	r2, sp, #7104	; 0x1bc0
   21438:	add	r2, r2, #40	; 0x28
   2143c:	ldr	r2, [r2]
   21440:	orr	r2, r3, r2, lsl #24
   21444:	str	r2, [sp, #2164]	; 0x874
   21448:	add	r3, sp, #2144	; 0x860
   2144c:	add	r3, r3, #8
   21450:	ldrd	r0, [r3]
   21454:	add	r3, sp, #2160	; 0x870
   21458:	ldrd	r2, [r3]
   2145c:	eor	r0, r0, r2
   21460:	eor	r1, r1, r3
   21464:	add	r3, sp, #7104	; 0x1bc0
   21468:	add	r3, r3, #40	; 0x28
   2146c:	ldr	r2, [r3]
   21470:	lsr	r2, r2, #7
   21474:	add	r3, sp, #7104	; 0x1bc0
   21478:	add	r3, r3, #44	; 0x2c
   2147c:	ldr	ip, [r3]
   21480:	orr	r2, r2, ip, lsl #25
   21484:	str	r2, [sp, #232]	; 0xe8
   21488:	lsr	r2, ip, #7
   2148c:	str	r2, [sp, #236]	; 0xec
   21490:	ldrd	r2, [sp, #232]	; 0xe8
   21494:	eor	r2, r2, r0
   21498:	eor	r3, r3, r1
   2149c:	mov	r0, r2
   214a0:	mov	r1, r3
   214a4:	add	r3, sp, #7104	; 0x1bc0
   214a8:	add	r3, r3, #32
   214ac:	ldrd	r2, [r3]
   214b0:	add	ip, sp, #7168	; 0x1c00
   214b4:	add	ip, ip, #40	; 0x28
   214b8:	ldrd	r6, [ip]
   214bc:	adds	r2, r2, r6
   214c0:	adc	r3, r3, r7
   214c4:	adds	r6, r2, r0
   214c8:	adc	r7, r3, r1
   214cc:	mov	r4, r6
   214d0:	mov	r5, r7
   214d4:	ldrd	r6, [sp, #48]	; 0x30
   214d8:	lsr	r1, r6, #19
   214dc:	orr	r2, r1, r7, lsl #13
   214e0:	str	r2, [sp, #2168]	; 0x878
   214e4:	lsr	r1, r7, #19
   214e8:	orr	r2, r1, r6, lsl #13
   214ec:	str	r2, [sp, #2172]	; 0x87c
   214f0:	lsl	r1, r7, #3
   214f4:	orr	r2, r1, r6, lsr #29
   214f8:	str	r2, [sp, #2180]	; 0x884
   214fc:	lsl	r1, r6, #3
   21500:	orr	r2, r1, r7, lsr #29
   21504:	str	r2, [sp, #2176]	; 0x880
   21508:	add	r3, sp, #2160	; 0x870
   2150c:	add	r3, r3, #8
   21510:	ldrd	r0, [r3]
   21514:	add	r3, sp, #2176	; 0x880
   21518:	ldrd	r2, [r3]
   2151c:	eor	r0, r0, r2
   21520:	eor	r1, r1, r3
   21524:	lsr	r2, r6, #6
   21528:	orr	r2, r2, r7, lsl #26
   2152c:	str	r2, [sp, #240]	; 0xf0
   21530:	lsr	r2, r7, #6
   21534:	str	r2, [sp, #244]	; 0xf4
   21538:	ldrd	r6, [sp, #240]	; 0xf0
   2153c:	eor	r6, r6, r0
   21540:	eor	r7, r7, r1
   21544:	mov	r0, r6
   21548:	mov	r1, r7
   2154c:	adds	r6, r4, r0
   21550:	adc	r7, r5, r1
   21554:	ldrd	r4, [sp]
   21558:	mov	r0, r4
   2155c:	mov	r1, r5
   21560:	ldrd	r2, [sp, #8]
   21564:	eor	r0, r0, r2
   21568:	eor	r1, r1, r3
   2156c:	and	r0, r0, r8
   21570:	and	r1, r1, r9
   21574:	eor	r4, r4, r0
   21578:	eor	r5, r5, r1
   2157c:	mov	r0, r4
   21580:	mov	r1, r5
   21584:	add	r3, pc, #900	; 0x384
   21588:	ldrd	r2, [r3]
   2158c:	strd	r6, [sp, #64]	; 0x40
   21590:	adds	r6, r6, r2
   21594:	adc	r7, r7, r3
   21598:	ldrd	r4, [sp, #72]	; 0x48
   2159c:	adds	r4, r4, r6
   215a0:	adc	r5, r5, r7
   215a4:	adds	r0, r0, r4
   215a8:	adc	r1, r1, r5
   215ac:	lsr	r3, r8, #14
   215b0:	orr	r2, r3, r9, lsl #18
   215b4:	str	r2, [sp, #2184]	; 0x888
   215b8:	lsr	r3, r9, #14
   215bc:	orr	r2, r3, r8, lsl #18
   215c0:	str	r2, [sp, #2188]	; 0x88c
   215c4:	lsr	r3, r8, #18
   215c8:	orr	r2, r3, r9, lsl #14
   215cc:	str	r2, [sp, #2192]	; 0x890
   215d0:	lsr	r3, r9, #18
   215d4:	orr	r2, r3, r8, lsl #14
   215d8:	str	r2, [sp, #2196]	; 0x894
   215dc:	add	r3, sp, #2176	; 0x880
   215e0:	add	r3, r3, #8
   215e4:	ldrd	r2, [r3]
   215e8:	add	ip, sp, #2192	; 0x890
   215ec:	ldrd	r4, [ip]
   215f0:	eor	r2, r2, r4
   215f4:	eor	r3, r3, r5
   215f8:	lsl	ip, r9, #23
   215fc:	orr	ip, ip, r8, lsr #9
   21600:	str	ip, [sp, #2204]	; 0x89c
   21604:	lsl	ip, r8, #23
   21608:	orr	ip, ip, r9, lsr #9
   2160c:	str	ip, [sp, #2200]	; 0x898
   21610:	add	ip, sp, #2192	; 0x890
   21614:	add	ip, ip, #8
   21618:	ldrd	r4, [ip]
   2161c:	eor	r4, r4, r2
   21620:	eor	r5, r5, r3
   21624:	adds	r4, r0, r4
   21628:	adc	r5, r1, r5
   2162c:	ldrd	r6, [sp, #24]
   21630:	adds	r6, r6, r4
   21634:	adc	r7, r7, r5
   21638:	lsr	r3, sl, #28
   2163c:	orr	r2, r3, fp, lsl #4
   21640:	str	r2, [sp, #2208]	; 0x8a0
   21644:	lsr	r3, fp, #28
   21648:	orr	r2, r3, sl, lsl #4
   2164c:	str	r2, [sp, #2212]	; 0x8a4
   21650:	lsl	r3, fp, #30
   21654:	orr	r2, r3, sl, lsr #2
   21658:	str	r2, [sp, #2220]	; 0x8ac
   2165c:	lsl	r3, sl, #30
   21660:	orr	r2, r3, fp, lsr #2
   21664:	str	r2, [sp, #2216]	; 0x8a8
   21668:	add	r3, sp, #2208	; 0x8a0
   2166c:	ldrd	r2, [r3]
   21670:	add	r1, sp, #2208	; 0x8a0
   21674:	add	r1, r1, #8
   21678:	ldrd	r0, [r1]
   2167c:	eor	r2, r2, r0
   21680:	eor	r3, r3, r1
   21684:	lsl	r1, fp, #25
   21688:	orr	r1, r1, sl, lsr #7
   2168c:	str	r1, [sp, #2228]	; 0x8b4
   21690:	lsl	r1, sl, #25
   21694:	orr	r1, r1, fp, lsr #7
   21698:	str	r1, [sp, #2224]	; 0x8b0
   2169c:	add	r1, sp, #2224	; 0x8b0
   216a0:	ldrd	r0, [r1]
   216a4:	eor	r0, r0, r2
   216a8:	eor	r1, r1, r3
   216ac:	strd	r0, [sp, #24]
   216b0:	ldrd	r2, [sp, #16]
   216b4:	orr	r2, r2, sl
   216b8:	orr	r3, r3, fp
   216bc:	mov	r0, r2
   216c0:	mov	r1, r3
   216c4:	ldrd	r2, [sp, #80]	; 0x50
   216c8:	and	r2, r2, r0
   216cc:	and	r3, r3, r1
   216d0:	mov	r0, r2
   216d4:	mov	r1, r3
   216d8:	strd	sl, [sp, #40]	; 0x28
   216dc:	ldrd	r2, [sp, #16]
   216e0:	and	r2, r2, sl
   216e4:	and	r3, r3, fp
   216e8:	orr	sl, r2, r0
   216ec:	orr	fp, r3, r1
   216f0:	mov	r0, sl
   216f4:	mov	r1, fp
   216f8:	ldrd	sl, [sp, #24]
   216fc:	adds	sl, sl, r0
   21700:	adc	fp, fp, r1
   21704:	adds	r4, r4, sl
   21708:	adc	r5, r5, fp
   2170c:	strd	r4, [sp, #24]
   21710:	add	r3, sp, #7104	; 0x1bc0
   21714:	add	r3, r3, #48	; 0x30
   21718:	ldr	r1, [r3]
   2171c:	lsr	r3, r1, #1
   21720:	add	r2, sp, #7104	; 0x1bc0
   21724:	add	r2, r2, #52	; 0x34
   21728:	ldr	r1, [r2]
   2172c:	orr	r1, r3, r1, lsl #31
   21730:	str	r1, [sp, #2232]	; 0x8b8
   21734:	ldr	r1, [r2]
   21738:	lsr	r3, r1, #1
   2173c:	add	r2, sp, #7104	; 0x1bc0
   21740:	add	r2, r2, #48	; 0x30
   21744:	ldr	r1, [r2]
   21748:	orr	r1, r3, r1, lsl #31
   2174c:	str	r1, [sp, #2236]	; 0x8bc
   21750:	ldr	r1, [r2]
   21754:	lsr	r3, r1, #8
   21758:	add	r2, sp, #7104	; 0x1bc0
   2175c:	add	r2, r2, #52	; 0x34
   21760:	ldr	r1, [r2]
   21764:	orr	r1, r3, r1, lsl #24
   21768:	str	r1, [sp, #2240]	; 0x8c0
   2176c:	ldr	r1, [r2]
   21770:	lsr	r3, r1, #8
   21774:	add	r2, sp, #7104	; 0x1bc0
   21778:	add	r2, r2, #48	; 0x30
   2177c:	ldr	r1, [r2]
   21780:	orr	r1, r3, r1, lsl #24
   21784:	str	r1, [sp, #2244]	; 0x8c4
   21788:	add	r3, sp, #2224	; 0x8b0
   2178c:	add	r3, r3, #8
   21790:	ldrd	r0, [r3]
   21794:	add	r3, sp, #2240	; 0x8c0
   21798:	ldrd	r2, [r3]
   2179c:	eor	r0, r0, r2
   217a0:	eor	r1, r1, r3
   217a4:	add	r3, sp, #7104	; 0x1bc0
   217a8:	add	r3, r3, #48	; 0x30
   217ac:	ldr	ip, [r3]
   217b0:	lsr	ip, ip, #7
   217b4:	add	r3, sp, #7104	; 0x1bc0
   217b8:	add	r3, r3, #52	; 0x34
   217bc:	ldr	r5, [r3]
   217c0:	orr	ip, ip, r5, lsl #25
   217c4:	str	ip, [sp, #248]	; 0xf8
   217c8:	lsr	ip, r5, #7
   217cc:	str	ip, [sp, #252]	; 0xfc
   217d0:	ldrd	r2, [sp, #248]	; 0xf8
   217d4:	eor	r2, r2, r0
   217d8:	eor	r3, r3, r1
   217dc:	mov	r0, r2
   217e0:	mov	r1, r3
   217e4:	add	r3, sp, #7104	; 0x1bc0
   217e8:	add	r3, r3, #40	; 0x28
   217ec:	ldrd	r2, [r3]
   217f0:	add	ip, sp, #7168	; 0x1c00
   217f4:	add	ip, ip, #48	; 0x30
   217f8:	ldrd	r4, [ip]
   217fc:	adds	r2, r2, r4
   21800:	adc	r3, r3, r5
   21804:	adds	r2, r2, r0
   21808:	adc	r3, r3, r1
   2180c:	ldrd	r4, [sp, #56]	; 0x38
   21810:	lsr	r1, r4, #19
   21814:	orr	r1, r1, r5, lsl #13
   21818:	str	r1, [sp, #2248]	; 0x8c8
   2181c:	lsr	r1, r5, #19
   21820:	orr	r1, r1, r4, lsl #13
   21824:	str	r1, [sp, #2252]	; 0x8cc
   21828:	lsl	r1, r5, #3
   2182c:	orr	r1, r1, r4, lsr #29
   21830:	str	r1, [sp, #2260]	; 0x8d4
   21834:	lsl	r1, r4, #3
   21838:	orr	r1, r1, r5, lsr #29
   2183c:	str	r1, [sp, #2256]	; 0x8d0
   21840:	add	r1, sp, #2240	; 0x8c0
   21844:	add	r1, r1, #8
   21848:	ldrd	r0, [r1]
   2184c:	add	ip, sp, #2256	; 0x8d0
   21850:	ldrd	sl, [ip]
   21854:	eor	r0, r0, sl
   21858:	eor	r1, r1, fp
   2185c:	lsr	ip, r4, #6
   21860:	orr	ip, ip, r5, lsl #26
   21864:	str	ip, [sp, #256]	; 0x100
   21868:	lsr	ip, r5, #6
   2186c:	str	ip, [sp, #260]	; 0x104
   21870:	add	ip, sp, #256	; 0x100
   21874:	ldrd	r4, [ip]
   21878:	eor	r4, r4, r0
   2187c:	eor	r5, r5, r1
   21880:	adds	r4, r2, r4
   21884:	adc	r5, r3, r5
   21888:	mov	sl, r4
   2188c:	mov	fp, r5
   21890:	ldrd	r4, [sp, #8]
   21894:	mov	r0, r4
   21898:	mov	r1, r5
   2189c:	eor	r0, r0, r8
   218a0:	eor	r1, r1, r9
   218a4:	mov	r2, r6
   218a8:	mov	r3, r7
   218ac:	and	r2, r2, r0
   218b0:	and	r3, r3, r1
   218b4:	mov	r0, r2
   218b8:	mov	r1, r3
   218bc:	mov	r2, r4
   218c0:	mov	r3, r5
   218c4:	eor	r2, r2, r0
   218c8:	eor	r3, r3, r1
   218cc:	mov	r0, r2
   218d0:	mov	r1, r3
   218d4:	add	r3, pc, #60	; 0x3c
   218d8:	ldrd	r2, [r3]
   218dc:	strd	sl, [sp, #72]	; 0x48
   218e0:	adds	sl, sl, r2
   218e4:	adc	fp, fp, r3
   218e8:	mov	r2, sl
   218ec:	mov	r3, fp
   218f0:	ldrd	sl, [sp]
   218f4:	adds	sl, sl, r2
   218f8:	adc	fp, fp, r3
   218fc:	adds	r0, r0, sl
   21900:	adc	r1, r1, fp
   21904:	lsr	r3, r6, #14
   21908:	b	21928 <__assert_fail@plt+0x1063c>
   2190c:	nop			; (mov r0, r0)
   21910:	blhi	fe356fec <optarg@@GLIBC_2.4+0xfe30ce44>
   21914:	svceq	0x00c19dc6
   21918:	strvc	r9, [ip, r5, ror #24]!
   2191c:	strcs	sl, [ip], #-460	; 0xfffffe34
   21920:	stmdbpl	fp!, {r0, r2, r4, r5, r6, r9}
   21924:	stclcs	12, cr2, [r9, #444]!	; 0x1bc
   21928:	mov	r4, r6
   2192c:	mov	r5, r7
   21930:	orr	ip, r3, r7, lsl #18
   21934:	str	ip, [sp, #2264]	; 0x8d8
   21938:	lsr	r3, r7, #14
   2193c:	orr	ip, r3, r6, lsl #18
   21940:	str	ip, [sp, #2268]	; 0x8dc
   21944:	lsr	r3, r6, #18
   21948:	orr	ip, r3, r7, lsl #14
   2194c:	str	ip, [sp, #2272]	; 0x8e0
   21950:	lsr	r3, r7, #18
   21954:	orr	ip, r3, r6, lsl #14
   21958:	str	ip, [sp, #2276]	; 0x8e4
   2195c:	add	r3, sp, #2256	; 0x8d0
   21960:	add	r3, r3, #8
   21964:	ldrd	r2, [r3]
   21968:	add	ip, sp, #2272	; 0x8e0
   2196c:	ldrd	r6, [ip]
   21970:	eor	r2, r2, r6
   21974:	eor	r3, r3, r7
   21978:	lsl	ip, r5, #23
   2197c:	orr	ip, ip, r4, lsr #9
   21980:	str	ip, [sp, #2284]	; 0x8ec
   21984:	lsl	ip, r4, #23
   21988:	orr	ip, ip, r5, lsr #9
   2198c:	str	ip, [sp, #2280]	; 0x8e8
   21990:	add	ip, sp, #2272	; 0x8e0
   21994:	add	ip, ip, #8
   21998:	ldrd	r6, [ip]
   2199c:	eor	r6, r6, r2
   219a0:	eor	r7, r7, r3
   219a4:	adds	r6, r0, r6
   219a8:	adc	r7, r1, r7
   219ac:	mov	r0, r6
   219b0:	mov	r1, r7
   219b4:	ldrd	r2, [sp, #80]	; 0x50
   219b8:	strd	r0, [sp]
   219bc:	adds	r2, r2, r6
   219c0:	adc	r3, r3, r7
   219c4:	strd	r2, [sp, #32]
   219c8:	ldrd	r6, [sp, #24]
   219cc:	lsr	r3, r6, #28
   219d0:	orr	r1, r3, r7, lsl #4
   219d4:	str	r1, [sp, #2288]	; 0x8f0
   219d8:	lsr	r3, r7, #28
   219dc:	orr	r1, r3, r6, lsl #4
   219e0:	str	r1, [sp, #2292]	; 0x8f4
   219e4:	lsl	r3, r7, #30
   219e8:	orr	r1, r3, r6, lsr #2
   219ec:	str	r1, [sp, #2300]	; 0x8fc
   219f0:	lsl	r3, r6, #30
   219f4:	orr	r1, r3, r7, lsr #2
   219f8:	str	r1, [sp, #2296]	; 0x8f8
   219fc:	add	r3, sp, #2288	; 0x8f0
   21a00:	ldrd	r2, [r3]
   21a04:	add	r1, sp, #2288	; 0x8f0
   21a08:	add	r1, r1, #8
   21a0c:	ldrd	r0, [r1]
   21a10:	eor	r2, r2, r0
   21a14:	eor	r3, r3, r1
   21a18:	lsl	r1, r7, #25
   21a1c:	orr	r1, r1, r6, lsr #7
   21a20:	str	r1, [sp, #2308]	; 0x904
   21a24:	lsl	r1, r6, #25
   21a28:	orr	r1, r1, r7, lsr #7
   21a2c:	str	r1, [sp, #2304]	; 0x900
   21a30:	add	r1, sp, #2304	; 0x900
   21a34:	ldrd	r0, [r1]
   21a38:	eor	r0, r0, r2
   21a3c:	eor	r1, r1, r3
   21a40:	strd	r0, [sp, #80]	; 0x50
   21a44:	ldrd	sl, [sp, #40]	; 0x28
   21a48:	orr	r0, sl, r6
   21a4c:	orr	r1, fp, r7
   21a50:	ldrd	r2, [sp, #16]
   21a54:	and	r2, r2, r0
   21a58:	and	r3, r3, r1
   21a5c:	and	sl, sl, r6
   21a60:	and	fp, fp, r7
   21a64:	orr	sl, sl, r2
   21a68:	orr	fp, fp, r3
   21a6c:	ldrd	r2, [sp, #80]	; 0x50
   21a70:	adds	r2, r2, sl
   21a74:	adc	r3, r3, fp
   21a78:	mov	r0, r2
   21a7c:	mov	r1, r3
   21a80:	ldrd	r2, [sp]
   21a84:	adds	r2, r2, r0
   21a88:	adc	r3, r3, r1
   21a8c:	strd	r2, [sp]
   21a90:	add	r3, sp, #7104	; 0x1bc0
   21a94:	add	r3, r3, #56	; 0x38
   21a98:	ldr	r1, [r3]
   21a9c:	lsr	r3, r1, #1
   21aa0:	add	r2, sp, #7104	; 0x1bc0
   21aa4:	add	r2, r2, #60	; 0x3c
   21aa8:	ldr	r1, [r2]
   21aac:	orr	r1, r3, r1, lsl #31
   21ab0:	str	r1, [sp, #2312]	; 0x908
   21ab4:	ldr	r1, [r2]
   21ab8:	lsr	r3, r1, #1
   21abc:	add	r2, sp, #7104	; 0x1bc0
   21ac0:	add	r2, r2, #56	; 0x38
   21ac4:	ldr	r1, [r2]
   21ac8:	orr	r1, r3, r1, lsl #31
   21acc:	str	r1, [sp, #2316]	; 0x90c
   21ad0:	ldr	r1, [r2]
   21ad4:	lsr	r3, r1, #8
   21ad8:	add	r2, sp, #7104	; 0x1bc0
   21adc:	add	r2, r2, #60	; 0x3c
   21ae0:	ldr	r1, [r2]
   21ae4:	orr	r1, r3, r1, lsl #24
   21ae8:	str	r1, [sp, #2320]	; 0x910
   21aec:	ldr	r1, [r2]
   21af0:	lsr	r3, r1, #8
   21af4:	add	r2, sp, #7104	; 0x1bc0
   21af8:	add	r2, r2, #56	; 0x38
   21afc:	ldr	r1, [r2]
   21b00:	orr	r1, r3, r1, lsl #24
   21b04:	str	r1, [sp, #2324]	; 0x914
   21b08:	add	r3, sp, #2304	; 0x900
   21b0c:	add	r3, r3, #8
   21b10:	ldrd	r2, [r3]
   21b14:	add	r1, sp, #2320	; 0x910
   21b18:	ldrd	r0, [r1]
   21b1c:	eor	r2, r2, r0
   21b20:	eor	r3, r3, r1
   21b24:	mov	r0, r2
   21b28:	mov	r1, r3
   21b2c:	add	r3, sp, #7104	; 0x1bc0
   21b30:	add	r3, r3, #56	; 0x38
   21b34:	ldr	ip, [r3]
   21b38:	lsr	ip, ip, #7
   21b3c:	add	r3, sp, #7104	; 0x1bc0
   21b40:	add	r3, r3, #60	; 0x3c
   21b44:	ldr	r7, [r3]
   21b48:	orr	ip, ip, r7, lsl #25
   21b4c:	str	ip, [sp, #264]	; 0x108
   21b50:	lsr	ip, r7, #7
   21b54:	str	ip, [sp, #268]	; 0x10c
   21b58:	add	r3, sp, #264	; 0x108
   21b5c:	ldrd	r2, [r3]
   21b60:	eor	r2, r2, r0
   21b64:	eor	r3, r3, r1
   21b68:	mov	r0, r2
   21b6c:	mov	r1, r3
   21b70:	add	r3, sp, #7104	; 0x1bc0
   21b74:	add	r3, r3, #48	; 0x30
   21b78:	ldrd	r2, [r3]
   21b7c:	add	ip, sp, #7168	; 0x1c00
   21b80:	add	ip, ip, #56	; 0x38
   21b84:	ldrd	r6, [ip]
   21b88:	adds	r2, r2, r6
   21b8c:	adc	r3, r3, r7
   21b90:	adds	r2, r2, r0
   21b94:	adc	r3, r3, r1
   21b98:	ldrd	sl, [sp, #64]	; 0x40
   21b9c:	lsr	r1, sl, #19
   21ba0:	orr	r1, r1, fp, lsl #13
   21ba4:	str	r1, [sp, #2328]	; 0x918
   21ba8:	lsr	r1, fp, #19
   21bac:	orr	r1, r1, sl, lsl #13
   21bb0:	str	r1, [sp, #2332]	; 0x91c
   21bb4:	lsl	r1, fp, #3
   21bb8:	orr	r1, r1, sl, lsr #29
   21bbc:	str	r1, [sp, #2340]	; 0x924
   21bc0:	lsl	r1, sl, #3
   21bc4:	orr	r1, r1, fp, lsr #29
   21bc8:	str	r1, [sp, #2336]	; 0x920
   21bcc:	add	r1, sp, #2320	; 0x910
   21bd0:	add	r1, r1, #8
   21bd4:	ldrd	r0, [r1]
   21bd8:	add	ip, sp, #2336	; 0x920
   21bdc:	ldrd	r6, [ip]
   21be0:	eor	r0, r0, r6
   21be4:	eor	r1, r1, r7
   21be8:	lsr	ip, sl, #6
   21bec:	orr	ip, ip, fp, lsl #26
   21bf0:	str	ip, [sp, #272]	; 0x110
   21bf4:	lsr	ip, fp, #6
   21bf8:	str	ip, [sp, #276]	; 0x114
   21bfc:	add	ip, sp, #272	; 0x110
   21c00:	ldrd	r6, [ip]
   21c04:	eor	r6, r6, r0
   21c08:	eor	r7, r7, r1
   21c0c:	adds	r6, r2, r6
   21c10:	adc	r7, r3, r7
   21c14:	strd	r4, [sp, #88]	; 0x58
   21c18:	mov	r0, r4
   21c1c:	mov	r1, r5
   21c20:	eor	r0, r0, r8
   21c24:	eor	r1, r1, r9
   21c28:	ldrd	sl, [sp, #32]
   21c2c:	mov	r4, sl
   21c30:	mov	r5, fp
   21c34:	and	r4, r4, r0
   21c38:	and	r5, r5, r1
   21c3c:	mov	r0, r4
   21c40:	mov	r1, r5
   21c44:	eor	r0, r0, r8
   21c48:	eor	r1, r1, r9
   21c4c:	sub	r3, pc, #820	; 0x334
   21c50:	ldrd	r2, [r3]
   21c54:	strd	r6, [sp, #80]	; 0x50
   21c58:	adds	r6, r6, r2
   21c5c:	adc	r7, r7, r3
   21c60:	mov	r2, r6
   21c64:	mov	r3, r7
   21c68:	ldrd	r6, [sp, #8]
   21c6c:	adds	r6, r6, r2
   21c70:	adc	r7, r7, r3
   21c74:	adds	r0, r0, r6
   21c78:	adc	r1, r1, r7
   21c7c:	lsr	r3, sl, #14
   21c80:	orr	ip, r3, fp, lsl #18
   21c84:	str	ip, [sp, #2344]	; 0x928
   21c88:	lsr	r3, fp, #14
   21c8c:	orr	ip, r3, sl, lsl #18
   21c90:	str	ip, [sp, #2348]	; 0x92c
   21c94:	lsr	r3, sl, #18
   21c98:	orr	ip, r3, fp, lsl #14
   21c9c:	str	ip, [sp, #2352]	; 0x930
   21ca0:	lsr	r3, fp, #18
   21ca4:	orr	ip, r3, sl, lsl #14
   21ca8:	str	ip, [sp, #2356]	; 0x934
   21cac:	add	r3, sp, #2336	; 0x920
   21cb0:	add	r3, r3, #8
   21cb4:	ldrd	r2, [r3]
   21cb8:	add	ip, sp, #2352	; 0x930
   21cbc:	ldrd	r6, [ip]
   21cc0:	eor	r2, r2, r6
   21cc4:	eor	r3, r3, r7
   21cc8:	lsl	ip, fp, #23
   21ccc:	orr	ip, ip, sl, lsr #9
   21cd0:	str	ip, [sp, #2364]	; 0x93c
   21cd4:	lsl	ip, sl, #23
   21cd8:	orr	ip, ip, fp, lsr #9
   21cdc:	str	ip, [sp, #2360]	; 0x938
   21ce0:	add	ip, sp, #2352	; 0x930
   21ce4:	add	ip, ip, #8
   21ce8:	ldrd	r6, [ip]
   21cec:	eor	r6, r6, r2
   21cf0:	eor	r7, r7, r3
   21cf4:	adds	r6, r0, r6
   21cf8:	adc	r7, r1, r7
   21cfc:	mov	r2, r6
   21d00:	mov	r3, r7
   21d04:	strd	r2, [sp, #96]	; 0x60
   21d08:	ldrd	r0, [sp, #16]
   21d0c:	adds	r0, r0, r6
   21d10:	adc	r1, r1, r7
   21d14:	mov	r2, r0
   21d18:	mov	r3, r1
   21d1c:	strd	r2, [sp, #8]
   21d20:	ldrd	sl, [sp]
   21d24:	lsr	r3, sl, #28
   21d28:	orr	r1, r3, fp, lsl #4
   21d2c:	str	r1, [sp, #2368]	; 0x940
   21d30:	lsr	r3, fp, #28
   21d34:	orr	r1, r3, sl, lsl #4
   21d38:	str	r1, [sp, #2372]	; 0x944
   21d3c:	lsl	r3, fp, #30
   21d40:	orr	r1, r3, sl, lsr #2
   21d44:	str	r1, [sp, #2380]	; 0x94c
   21d48:	lsl	r3, sl, #30
   21d4c:	orr	r1, r3, fp, lsr #2
   21d50:	str	r1, [sp, #2376]	; 0x948
   21d54:	add	r3, sp, #2368	; 0x940
   21d58:	ldrd	r2, [r3]
   21d5c:	add	r1, sp, #2368	; 0x940
   21d60:	add	r1, r1, #8
   21d64:	ldrd	r0, [r1]
   21d68:	eor	r2, r2, r0
   21d6c:	eor	r3, r3, r1
   21d70:	lsl	r1, fp, #25
   21d74:	orr	r1, r1, sl, lsr #7
   21d78:	str	r1, [sp, #2388]	; 0x954
   21d7c:	lsl	r1, sl, #25
   21d80:	orr	r1, r1, fp, lsr #7
   21d84:	str	r1, [sp, #2384]	; 0x950
   21d88:	add	r1, sp, #2384	; 0x950
   21d8c:	ldrd	r0, [r1]
   21d90:	eor	r0, r0, r2
   21d94:	eor	r1, r1, r3
   21d98:	mov	r2, r0
   21d9c:	mov	r3, r1
   21da0:	ldrd	r4, [sp, #24]
   21da4:	orr	r6, r4, sl
   21da8:	orr	r7, r5, fp
   21dac:	ldrd	sl, [sp, #40]	; 0x28
   21db0:	and	sl, sl, r6
   21db4:	and	fp, fp, r7
   21db8:	mov	r6, r4
   21dbc:	mov	r7, r5
   21dc0:	ldrd	r4, [sp]
   21dc4:	and	r6, r6, r4
   21dc8:	and	r7, r7, r5
   21dcc:	orr	r0, sl, r6
   21dd0:	orr	r1, fp, r7
   21dd4:	adds	r0, r0, r2
   21dd8:	adc	r1, r1, r3
   21ddc:	ldrd	r2, [sp, #96]	; 0x60
   21de0:	adds	r2, r2, r0
   21de4:	adc	r3, r3, r1
   21de8:	strd	r2, [sp, #16]
   21dec:	add	r3, sp, #7168	; 0x1c00
   21df0:	ldr	r2, [r3]
   21df4:	lsr	r3, r2, #1
   21df8:	add	r2, sp, #7168	; 0x1c00
   21dfc:	add	r2, r2, #4
   21e00:	ldr	r2, [r2]
   21e04:	orr	r2, r3, r2, lsl #31
   21e08:	str	r2, [sp, #2392]	; 0x958
   21e0c:	add	r3, sp, #7168	; 0x1c00
   21e10:	add	r3, r3, #4
   21e14:	ldr	r2, [r3]
   21e18:	lsr	r3, r2, #1
   21e1c:	add	r2, sp, #7168	; 0x1c00
   21e20:	ldr	r2, [r2]
   21e24:	orr	r2, r3, r2, lsl #31
   21e28:	str	r2, [sp, #2396]	; 0x95c
   21e2c:	add	r3, sp, #7168	; 0x1c00
   21e30:	ldr	r2, [r3]
   21e34:	lsr	r3, r2, #8
   21e38:	add	r2, sp, #7168	; 0x1c00
   21e3c:	add	r2, r2, #4
   21e40:	ldr	r2, [r2]
   21e44:	orr	r2, r3, r2, lsl #24
   21e48:	str	r2, [sp, #2400]	; 0x960
   21e4c:	add	r3, sp, #7168	; 0x1c00
   21e50:	add	r3, r3, #4
   21e54:	ldr	r2, [r3]
   21e58:	lsr	r3, r2, #8
   21e5c:	add	r2, sp, #7168	; 0x1c00
   21e60:	ldr	r2, [r2]
   21e64:	orr	r2, r3, r2, lsl #24
   21e68:	str	r2, [sp, #2404]	; 0x964
   21e6c:	add	r3, sp, #2384	; 0x950
   21e70:	add	r3, r3, #8
   21e74:	ldrd	r2, [r3]
   21e78:	add	r1, sp, #2400	; 0x960
   21e7c:	ldrd	r0, [r1]
   21e80:	eor	r2, r2, r0
   21e84:	eor	r3, r3, r1
   21e88:	mov	r0, r2
   21e8c:	mov	r1, r3
   21e90:	add	r3, sp, #7168	; 0x1c00
   21e94:	ldr	r2, [r3]
   21e98:	lsr	r2, r2, #7
   21e9c:	add	r3, sp, #7168	; 0x1c00
   21ea0:	add	r3, r3, #4
   21ea4:	ldr	ip, [r3]
   21ea8:	orr	r2, r2, ip, lsl #25
   21eac:	str	r2, [sp, #280]	; 0x118
   21eb0:	lsr	r2, ip, #7
   21eb4:	str	r2, [sp, #284]	; 0x11c
   21eb8:	add	r3, sp, #280	; 0x118
   21ebc:	ldrd	r2, [r3]
   21ec0:	eor	r2, r2, r0
   21ec4:	eor	r3, r3, r1
   21ec8:	mov	r0, r2
   21ecc:	mov	r1, r3
   21ed0:	add	r3, sp, #7104	; 0x1bc0
   21ed4:	add	r3, r3, #56	; 0x38
   21ed8:	ldrd	r2, [r3]
   21edc:	add	ip, sp, #7232	; 0x1c40
   21ee0:	ldrd	r6, [ip]
   21ee4:	adds	r2, r2, r6
   21ee8:	adc	r3, r3, r7
   21eec:	adds	r2, r2, r0
   21ef0:	adc	r3, r3, r1
   21ef4:	ldrd	sl, [sp, #72]	; 0x48
   21ef8:	lsr	r1, sl, #19
   21efc:	orr	r1, r1, fp, lsl #13
   21f00:	str	r1, [sp, #2408]	; 0x968
   21f04:	lsr	r1, fp, #19
   21f08:	orr	r1, r1, sl, lsl #13
   21f0c:	str	r1, [sp, #2412]	; 0x96c
   21f10:	lsl	r1, fp, #3
   21f14:	orr	r1, r1, sl, lsr #29
   21f18:	str	r1, [sp, #2420]	; 0x974
   21f1c:	lsl	r1, sl, #3
   21f20:	orr	r1, r1, fp, lsr #29
   21f24:	str	r1, [sp, #2416]	; 0x970
   21f28:	add	r1, sp, #2400	; 0x960
   21f2c:	add	r1, r1, #8
   21f30:	ldrd	r0, [r1]
   21f34:	add	ip, sp, #2416	; 0x970
   21f38:	ldrd	r6, [ip]
   21f3c:	eor	r0, r0, r6
   21f40:	eor	r1, r1, r7
   21f44:	lsr	ip, sl, #6
   21f48:	orr	ip, ip, fp, lsl #26
   21f4c:	str	ip, [sp, #288]	; 0x120
   21f50:	lsr	ip, fp, #6
   21f54:	str	ip, [sp, #292]	; 0x124
   21f58:	add	ip, sp, #288	; 0x120
   21f5c:	ldrd	sl, [ip]
   21f60:	eor	sl, sl, r0
   21f64:	eor	fp, fp, r1
   21f68:	adds	r4, r2, sl
   21f6c:	adc	r5, r3, fp
   21f70:	mov	sl, r4
   21f74:	mov	fp, r5
   21f78:	ldrd	r4, [sp, #88]	; 0x58
   21f7c:	ldrd	r2, [sp, #32]
   21f80:	eor	r2, r2, r4
   21f84:	eor	r3, r3, r5
   21f88:	ldrd	r6, [sp, #8]
   21f8c:	and	r6, r6, r2
   21f90:	and	r7, r7, r3
   21f94:	strd	r4, [sp, #104]	; 0x68
   21f98:	mov	r2, r4
   21f9c:	mov	r3, r5
   21fa0:	eor	r2, r2, r6
   21fa4:	eor	r3, r3, r7
   21fa8:	mov	r0, r2
   21fac:	mov	r1, r3
   21fb0:	add	r3, pc, #896	; 0x380
   21fb4:	ldrd	r2, [r3]
   21fb8:	strd	sl, [sp, #88]	; 0x58
   21fbc:	adds	sl, sl, r2
   21fc0:	adc	fp, fp, r3
   21fc4:	adds	r8, r8, sl
   21fc8:	adc	r9, r9, fp
   21fcc:	adds	r0, r0, r8
   21fd0:	adc	r1, r1, r9
   21fd4:	ldrd	r6, [sp, #8]
   21fd8:	lsr	r3, r6, #14
   21fdc:	orr	r2, r3, r7, lsl #18
   21fe0:	str	r2, [sp, #2424]	; 0x978
   21fe4:	lsr	r3, r7, #14
   21fe8:	orr	r2, r3, r6, lsl #18
   21fec:	str	r2, [sp, #2428]	; 0x97c
   21ff0:	lsr	r3, r6, #18
   21ff4:	orr	r2, r3, r7, lsl #14
   21ff8:	str	r2, [sp, #2432]	; 0x980
   21ffc:	lsr	r3, r7, #18
   22000:	orr	r2, r3, r6, lsl #14
   22004:	str	r2, [sp, #2436]	; 0x984
   22008:	add	r3, sp, #2416	; 0x970
   2200c:	add	r3, r3, #8
   22010:	ldrd	r2, [r3]
   22014:	add	ip, sp, #2432	; 0x980
   22018:	ldrd	r8, [ip]
   2201c:	eor	r2, r2, r8
   22020:	eor	r3, r3, r9
   22024:	lsl	ip, r7, #23
   22028:	orr	ip, ip, r6, lsr #9
   2202c:	str	ip, [sp, #2444]	; 0x98c
   22030:	lsl	ip, r6, #23
   22034:	orr	ip, ip, r7, lsr #9
   22038:	str	ip, [sp, #2440]	; 0x988
   2203c:	add	ip, sp, #2432	; 0x980
   22040:	add	ip, ip, #8
   22044:	ldrd	r8, [ip]
   22048:	eor	r8, r8, r2
   2204c:	eor	r9, r9, r3
   22050:	adds	r8, r0, r8
   22054:	adc	r9, r1, r9
   22058:	mov	sl, r8
   2205c:	mov	fp, r9
   22060:	ldrd	r8, [sp, #40]	; 0x28
   22064:	adds	r8, r8, sl
   22068:	adc	r9, r9, fp
   2206c:	ldrd	r4, [sp, #16]
   22070:	lsr	r3, r4, #28
   22074:	orr	r2, r3, r5, lsl #4
   22078:	str	r2, [sp, #2448]	; 0x990
   2207c:	lsr	r3, r5, #28
   22080:	orr	r2, r3, r4, lsl #4
   22084:	str	r2, [sp, #2452]	; 0x994
   22088:	lsl	r3, r5, #30
   2208c:	orr	r2, r3, r4, lsr #2
   22090:	str	r2, [sp, #2460]	; 0x99c
   22094:	lsl	r3, r4, #30
   22098:	orr	r2, r3, r5, lsr #2
   2209c:	str	r2, [sp, #2456]	; 0x998
   220a0:	add	r3, sp, #2448	; 0x990
   220a4:	ldrd	r2, [r3]
   220a8:	add	r1, sp, #2448	; 0x990
   220ac:	add	r1, r1, #8
   220b0:	ldrd	r0, [r1]
   220b4:	eor	r2, r2, r0
   220b8:	eor	r3, r3, r1
   220bc:	lsl	r1, r5, #25
   220c0:	orr	r1, r1, r4, lsr #7
   220c4:	str	r1, [sp, #2468]	; 0x9a4
   220c8:	lsl	r1, r4, #25
   220cc:	orr	r1, r1, r5, lsr #7
   220d0:	str	r1, [sp, #2464]	; 0x9a0
   220d4:	add	r1, sp, #2464	; 0x9a0
   220d8:	ldrd	r0, [r1]
   220dc:	eor	r0, r0, r2
   220e0:	eor	r1, r1, r3
   220e4:	strd	r0, [sp, #40]	; 0x28
   220e8:	ldrd	r2, [sp]
   220ec:	orr	r6, r4, r2
   220f0:	orr	r7, r5, r3
   220f4:	mov	r0, r6
   220f8:	mov	r1, r7
   220fc:	ldrd	r6, [sp, #24]
   22100:	and	r6, r6, r0
   22104:	and	r7, r7, r1
   22108:	mov	r0, r6
   2210c:	mov	r1, r7
   22110:	and	r4, r4, r2
   22114:	and	r5, r5, r3
   22118:	orr	r6, r4, r0
   2211c:	orr	r7, r5, r1
   22120:	ldrd	r2, [sp, #40]	; 0x28
   22124:	adds	r2, r2, r6
   22128:	adc	r3, r3, r7
   2212c:	mov	r0, r2
   22130:	mov	r1, r3
   22134:	adds	r2, sl, r0
   22138:	adc	r3, fp, r1
   2213c:	strd	r2, [sp, #40]	; 0x28
   22140:	add	r3, sp, #7168	; 0x1c00
   22144:	add	r3, r3, #8
   22148:	ldr	r1, [r3]
   2214c:	lsr	r3, r1, #1
   22150:	add	r2, sp, #7168	; 0x1c00
   22154:	add	r2, r2, #12
   22158:	ldr	r1, [r2]
   2215c:	orr	r1, r3, r1, lsl #31
   22160:	str	r1, [sp, #2472]	; 0x9a8
   22164:	ldr	r1, [r2]
   22168:	lsr	r3, r1, #1
   2216c:	add	r2, sp, #7168	; 0x1c00
   22170:	add	r2, r2, #8
   22174:	ldr	r1, [r2]
   22178:	orr	r1, r3, r1, lsl #31
   2217c:	str	r1, [sp, #2476]	; 0x9ac
   22180:	ldr	r1, [r2]
   22184:	lsr	r3, r1, #8
   22188:	add	r2, sp, #7168	; 0x1c00
   2218c:	add	r2, r2, #12
   22190:	ldr	r1, [r2]
   22194:	orr	r1, r3, r1, lsl #24
   22198:	str	r1, [sp, #2480]	; 0x9b0
   2219c:	ldr	r1, [r2]
   221a0:	lsr	r3, r1, #8
   221a4:	add	r2, sp, #7168	; 0x1c00
   221a8:	add	r2, r2, #8
   221ac:	ldr	r1, [r2]
   221b0:	orr	r1, r3, r1, lsl #24
   221b4:	str	r1, [sp, #2484]	; 0x9b4
   221b8:	add	r3, sp, #2464	; 0x9a0
   221bc:	add	r3, r3, #8
   221c0:	ldrd	r2, [r3]
   221c4:	add	r1, sp, #2480	; 0x9b0
   221c8:	ldrd	r0, [r1]
   221cc:	eor	r2, r2, r0
   221d0:	eor	r3, r3, r1
   221d4:	mov	r0, r2
   221d8:	mov	r1, r3
   221dc:	add	r3, sp, #7168	; 0x1c00
   221e0:	add	r3, r3, #8
   221e4:	ldr	ip, [r3]
   221e8:	lsr	ip, ip, #7
   221ec:	add	r3, sp, #7168	; 0x1c00
   221f0:	add	r3, r3, #12
   221f4:	ldr	r7, [r3]
   221f8:	orr	ip, ip, r7, lsl #25
   221fc:	str	ip, [sp, #296]	; 0x128
   22200:	lsr	ip, r7, #7
   22204:	str	ip, [sp, #300]	; 0x12c
   22208:	add	r3, sp, #296	; 0x128
   2220c:	ldrd	r2, [r3]
   22210:	eor	r2, r2, r0
   22214:	eor	r3, r3, r1
   22218:	mov	r0, r2
   2221c:	mov	r1, r3
   22220:	add	r3, sp, #7168	; 0x1c00
   22224:	ldrd	r2, [r3]
   22228:	add	ip, sp, #7232	; 0x1c40
   2222c:	add	ip, ip, #8
   22230:	ldrd	r6, [ip]
   22234:	adds	r2, r2, r6
   22238:	adc	r3, r3, r7
   2223c:	adds	r2, r2, r0
   22240:	adc	r3, r3, r1
   22244:	ldrd	sl, [sp, #80]	; 0x50
   22248:	lsr	r1, sl, #19
   2224c:	orr	r1, r1, fp, lsl #13
   22250:	str	r1, [sp, #2488]	; 0x9b8
   22254:	lsr	r1, fp, #19
   22258:	orr	r1, r1, sl, lsl #13
   2225c:	str	r1, [sp, #2492]	; 0x9bc
   22260:	lsl	r1, fp, #3
   22264:	orr	r1, r1, sl, lsr #29
   22268:	str	r1, [sp, #2500]	; 0x9c4
   2226c:	lsl	r1, sl, #3
   22270:	orr	r1, r1, fp, lsr #29
   22274:	str	r1, [sp, #2496]	; 0x9c0
   22278:	add	r1, sp, #2480	; 0x9b0
   2227c:	add	r1, r1, #8
   22280:	ldrd	r6, [r1]
   22284:	add	r1, sp, #2496	; 0x9c0
   22288:	ldrd	r0, [r1]
   2228c:	eor	r6, r6, r0
   22290:	eor	r7, r7, r1
   22294:	mov	r0, r6
   22298:	mov	r1, r7
   2229c:	lsr	ip, sl, #6
   222a0:	orr	ip, ip, fp, lsl #26
   222a4:	str	ip, [sp, #304]	; 0x130
   222a8:	lsr	ip, fp, #6
   222ac:	str	ip, [sp, #308]	; 0x134
   222b0:	add	ip, sp, #304	; 0x130
   222b4:	ldrd	r6, [ip]
   222b8:	eor	r6, r6, r0
   222bc:	eor	r7, r7, r1
   222c0:	adds	r6, r2, r6
   222c4:	adc	r7, r3, r7
   222c8:	ldrd	sl, [sp, #32]
   222cc:	mov	r0, sl
   222d0:	mov	r1, fp
   222d4:	ldrd	r2, [sp, #8]
   222d8:	eor	r0, r0, r2
   222dc:	eor	r1, r1, r3
   222e0:	and	r0, r0, r8
   222e4:	and	r1, r1, r9
   222e8:	eor	sl, sl, r0
   222ec:	eor	fp, fp, r1
   222f0:	add	r3, pc, #72	; 0x48
   222f4:	ldrd	r2, [r3]
   222f8:	strd	r6, [sp, #96]	; 0x60
   222fc:	adds	r6, r6, r2
   22300:	adc	r7, r7, r3
   22304:	ldrd	r4, [sp, #104]	; 0x68
   22308:	adds	r4, r4, r6
   2230c:	adc	r5, r5, r7
   22310:	adds	r0, sl, r4
   22314:	adc	r1, fp, r5
   22318:	lsr	r3, r8, #14
   2231c:	orr	ip, r3, r9, lsl #18
   22320:	str	ip, [sp, #2504]	; 0x9c8
   22324:	lsr	r3, r9, #14
   22328:	orr	ip, r3, r8, lsl #18
   2232c:	str	ip, [sp, #2508]	; 0x9cc
   22330:	lsr	r3, r8, #18
   22334:	b	22350 <__assert_fail@plt+0x11064>
   22338:	cdpvs	4, 10, cr14, cr6, cr3, {4}
   2233c:	bmi	1d435ec <optarg@@GLIBC_2.4+0x1cf9444>
   22340:	vstrlt	d31, [r1, #-848]	; 0xfffffcb0
   22344:			; <UNDEFINED> instruction: 0x5cb0a9dc
   22348:	tsthi	r1, #-738197502	; 0xd4000002
   2234c:	usatvc	r8, #25, sl, asr #17
   22350:	orr	ip, r3, r9, lsl #14
   22354:	str	ip, [sp, #2512]	; 0x9d0
   22358:	lsr	r3, r9, #18
   2235c:	orr	ip, r3, r8, lsl #14
   22360:	str	ip, [sp, #2516]	; 0x9d4
   22364:	add	r3, sp, #2496	; 0x9c0
   22368:	add	r3, r3, #8
   2236c:	ldrd	r2, [r3]
   22370:	add	ip, sp, #2512	; 0x9d0
   22374:	ldrd	r4, [ip]
   22378:	eor	r2, r2, r4
   2237c:	eor	r3, r3, r5
   22380:	lsl	ip, r9, #23
   22384:	orr	ip, ip, r8, lsr #9
   22388:	str	ip, [sp, #2524]	; 0x9dc
   2238c:	lsl	ip, r8, #23
   22390:	orr	ip, ip, r9, lsr #9
   22394:	str	ip, [sp, #2520]	; 0x9d8
   22398:	add	ip, sp, #2512	; 0x9d0
   2239c:	add	ip, ip, #8
   223a0:	ldrd	r4, [ip]
   223a4:	eor	r4, r4, r2
   223a8:	eor	r5, r5, r3
   223ac:	adds	r4, r0, r4
   223b0:	adc	r5, r1, r5
   223b4:	ldrd	r6, [sp, #24]
   223b8:	adds	r6, r6, r4
   223bc:	adc	r7, r7, r5
   223c0:	ldrd	r0, [sp, #40]	; 0x28
   223c4:	lsr	r3, r0, #28
   223c8:	orr	r2, r3, r1, lsl #4
   223cc:	str	r2, [sp, #2528]	; 0x9e0
   223d0:	lsr	r3, r1, #28
   223d4:	orr	r2, r3, r0, lsl #4
   223d8:	str	r2, [sp, #2532]	; 0x9e4
   223dc:	lsl	r3, r1, #30
   223e0:	orr	r2, r3, r0, lsr #2
   223e4:	str	r2, [sp, #2540]	; 0x9ec
   223e8:	lsl	r3, r0, #30
   223ec:	orr	r2, r3, r1, lsr #2
   223f0:	str	r2, [sp, #2536]	; 0x9e8
   223f4:	add	r3, sp, #2528	; 0x9e0
   223f8:	ldrd	r2, [r3]
   223fc:	add	ip, sp, #2528	; 0x9e0
   22400:	add	ip, ip, #8
   22404:	ldrd	sl, [ip]
   22408:	eor	r2, r2, sl
   2240c:	eor	r3, r3, fp
   22410:	mov	sl, r0
   22414:	mov	fp, r1
   22418:	lsl	r1, r1, #25
   2241c:	orr	r1, r1, sl, lsr #7
   22420:	str	r1, [sp, #2548]	; 0x9f4
   22424:	lsl	r1, sl, #25
   22428:	orr	r1, r1, fp, lsr #7
   2242c:	str	r1, [sp, #2544]	; 0x9f0
   22430:	add	r1, sp, #2544	; 0x9f0
   22434:	ldrd	r0, [r1]
   22438:	eor	r0, r0, r2
   2243c:	eor	r1, r1, r3
   22440:	strd	r0, [sp, #24]
   22444:	ldrd	r2, [sp, #16]
   22448:	orr	r2, r2, sl
   2244c:	orr	r3, r3, fp
   22450:	mov	r0, r2
   22454:	mov	r1, r3
   22458:	ldrd	r2, [sp]
   2245c:	and	r2, r2, r0
   22460:	and	r3, r3, r1
   22464:	mov	r0, r2
   22468:	mov	r1, r3
   2246c:	ldrd	r2, [sp, #16]
   22470:	and	r2, r2, sl
   22474:	and	r3, r3, fp
   22478:	orr	sl, r2, r0
   2247c:	orr	fp, r3, r1
   22480:	ldrd	r2, [sp, #24]
   22484:	adds	r2, r2, sl
   22488:	adc	r3, r3, fp
   2248c:	adds	r4, r4, r2
   22490:	adc	r5, r5, r3
   22494:	strd	r4, [sp, #104]	; 0x68
   22498:	add	r3, sp, #7168	; 0x1c00
   2249c:	add	r3, r3, #16
   224a0:	ldr	r1, [r3]
   224a4:	lsr	r3, r1, #1
   224a8:	add	r2, sp, #7168	; 0x1c00
   224ac:	add	r2, r2, #20
   224b0:	ldr	r1, [r2]
   224b4:	orr	r1, r3, r1, lsl #31
   224b8:	str	r1, [sp, #2552]	; 0x9f8
   224bc:	ldr	r1, [r2]
   224c0:	lsr	r3, r1, #1
   224c4:	add	r2, sp, #7168	; 0x1c00
   224c8:	add	r2, r2, #16
   224cc:	ldr	r1, [r2]
   224d0:	orr	r1, r3, r1, lsl #31
   224d4:	str	r1, [sp, #2556]	; 0x9fc
   224d8:	ldr	r1, [r2]
   224dc:	lsr	r3, r1, #8
   224e0:	add	r2, sp, #7168	; 0x1c00
   224e4:	add	r2, r2, #20
   224e8:	ldr	r1, [r2]
   224ec:	orr	r1, r3, r1, lsl #24
   224f0:	str	r1, [sp, #2560]	; 0xa00
   224f4:	ldr	r1, [r2]
   224f8:	lsr	r3, r1, #8
   224fc:	add	r2, sp, #7168	; 0x1c00
   22500:	add	r2, r2, #16
   22504:	ldr	r1, [r2]
   22508:	orr	r1, r3, r1, lsl #24
   2250c:	str	r1, [sp, #2564]	; 0xa04
   22510:	add	r3, sp, #2544	; 0x9f0
   22514:	add	r3, r3, #8
   22518:	ldrd	r2, [r3]
   2251c:	add	r1, sp, #2560	; 0xa00
   22520:	ldrd	r4, [r1]
   22524:	eor	r2, r2, r4
   22528:	eor	r3, r3, r5
   2252c:	add	r1, sp, #7168	; 0x1c00
   22530:	add	r1, r1, #16
   22534:	ldr	r1, [r1]
   22538:	lsr	r1, r1, #7
   2253c:	add	r0, sp, #7168	; 0x1c00
   22540:	add	r0, r0, #20
   22544:	ldr	ip, [r0]
   22548:	orr	r1, r1, ip, lsl #25
   2254c:	str	r1, [sp, #312]	; 0x138
   22550:	lsr	r1, ip, #7
   22554:	str	r1, [sp, #316]	; 0x13c
   22558:	add	r1, sp, #312	; 0x138
   2255c:	ldrd	r4, [r1]
   22560:	eor	r4, r4, r2
   22564:	eor	r5, r5, r3
   22568:	mov	r2, r4
   2256c:	mov	r3, r5
   22570:	add	r1, sp, #7168	; 0x1c00
   22574:	add	r1, r1, #8
   22578:	ldrd	r4, [r1]
   2257c:	adds	r4, r4, r2
   22580:	adc	r5, r5, r3
   22584:	ldrd	r0, [sp, #48]	; 0x30
   22588:	adds	r0, r0, r4
   2258c:	adc	r1, r1, r5
   22590:	mov	r2, r0
   22594:	mov	r3, r1
   22598:	ldrd	sl, [sp, #88]	; 0x58
   2259c:	lsr	r1, sl, #19
   225a0:	orr	r1, r1, fp, lsl #13
   225a4:	str	r1, [sp, #2568]	; 0xa08
   225a8:	lsr	r1, fp, #19
   225ac:	orr	r1, r1, sl, lsl #13
   225b0:	str	r1, [sp, #2572]	; 0xa0c
   225b4:	lsl	r1, fp, #3
   225b8:	orr	r1, r1, sl, lsr #29
   225bc:	str	r1, [sp, #2580]	; 0xa14
   225c0:	lsl	r1, sl, #3
   225c4:	orr	r1, r1, fp, lsr #29
   225c8:	str	r1, [sp, #2576]	; 0xa10
   225cc:	add	r1, sp, #2560	; 0xa00
   225d0:	add	r1, r1, #8
   225d4:	ldrd	r4, [r1]
   225d8:	add	r1, sp, #2576	; 0xa10
   225dc:	ldrd	r0, [r1]
   225e0:	eor	r4, r4, r0
   225e4:	eor	r5, r5, r1
   225e8:	mov	r0, r4
   225ec:	mov	r1, r5
   225f0:	lsr	ip, sl, #6
   225f4:	orr	ip, ip, fp, lsl #26
   225f8:	str	ip, [sp, #320]	; 0x140
   225fc:	lsr	ip, fp, #6
   22600:	str	ip, [sp, #324]	; 0x144
   22604:	add	ip, sp, #320	; 0x140
   22608:	ldrd	r4, [ip]
   2260c:	eor	r4, r4, r0
   22610:	eor	r5, r5, r1
   22614:	adds	r4, r2, r4
   22618:	adc	r5, r3, r5
   2261c:	mov	sl, r4
   22620:	mov	fp, r5
   22624:	ldrd	r4, [sp, #8]
   22628:	mov	r0, r4
   2262c:	mov	r1, r5
   22630:	eor	r0, r0, r8
   22634:	eor	r1, r1, r9
   22638:	mov	r2, r6
   2263c:	mov	r3, r7
   22640:	and	r2, r2, r0
   22644:	and	r3, r3, r1
   22648:	eor	r4, r4, r2
   2264c:	eor	r5, r5, r3
   22650:	sub	r3, pc, #784	; 0x310
   22654:	ldrd	r2, [r3]
   22658:	strd	sl, [sp, #112]	; 0x70
   2265c:	adds	sl, sl, r2
   22660:	adc	fp, fp, r3
   22664:	mov	r2, sl
   22668:	mov	r3, fp
   2266c:	ldrd	sl, [sp, #32]
   22670:	adds	sl, sl, r2
   22674:	adc	fp, fp, r3
   22678:	adds	r0, r4, sl
   2267c:	adc	r1, r5, fp
   22680:	lsr	r3, r6, #14
   22684:	mov	r4, r6
   22688:	mov	r5, r7
   2268c:	orr	ip, r3, r7, lsl #18
   22690:	str	ip, [sp, #2584]	; 0xa18
   22694:	lsr	r3, r7, #14
   22698:	orr	ip, r3, r6, lsl #18
   2269c:	str	ip, [sp, #2588]	; 0xa1c
   226a0:	lsr	r3, r6, #18
   226a4:	orr	ip, r3, r7, lsl #14
   226a8:	str	ip, [sp, #2592]	; 0xa20
   226ac:	lsr	r3, r7, #18
   226b0:	orr	ip, r3, r6, lsl #14
   226b4:	str	ip, [sp, #2596]	; 0xa24
   226b8:	add	r3, sp, #2576	; 0xa10
   226bc:	add	r3, r3, #8
   226c0:	ldrd	r2, [r3]
   226c4:	add	ip, sp, #2592	; 0xa20
   226c8:	ldrd	r6, [ip]
   226cc:	eor	r2, r2, r6
   226d0:	eor	r3, r3, r7
   226d4:	lsl	ip, r5, #23
   226d8:	orr	ip, ip, r4, lsr #9
   226dc:	str	ip, [sp, #2604]	; 0xa2c
   226e0:	lsl	ip, r4, #23
   226e4:	strd	r4, [sp, #24]
   226e8:	ldr	r7, [sp, #28]
   226ec:	orr	ip, ip, r7, lsr #9
   226f0:	str	ip, [sp, #2600]	; 0xa28
   226f4:	add	ip, sp, #2592	; 0xa20
   226f8:	add	ip, ip, #8
   226fc:	ldrd	r6, [ip]
   22700:	eor	r6, r6, r2
   22704:	eor	r7, r7, r3
   22708:	adds	r6, r0, r6
   2270c:	adc	r7, r1, r7
   22710:	ldrd	r2, [sp]
   22714:	strd	r6, [sp]
   22718:	adds	r2, r2, r6
   2271c:	adc	r3, r3, r7
   22720:	mov	sl, r2
   22724:	mov	fp, r3
   22728:	ldrd	r6, [sp, #104]	; 0x68
   2272c:	lsr	r3, r6, #28
   22730:	orr	r1, r3, r7, lsl #4
   22734:	str	r1, [sp, #2608]	; 0xa30
   22738:	lsr	r3, r7, #28
   2273c:	orr	r1, r3, r6, lsl #4
   22740:	str	r1, [sp, #2612]	; 0xa34
   22744:	lsl	r3, r7, #30
   22748:	orr	r1, r3, r6, lsr #2
   2274c:	str	r1, [sp, #2620]	; 0xa3c
   22750:	lsl	r3, r6, #30
   22754:	orr	r1, r3, r7, lsr #2
   22758:	str	r1, [sp, #2616]	; 0xa38
   2275c:	add	r3, sp, #2608	; 0xa30
   22760:	ldrd	r2, [r3]
   22764:	add	r1, sp, #2608	; 0xa30
   22768:	add	r1, r1, #8
   2276c:	ldrd	r0, [r1]
   22770:	eor	r2, r2, r0
   22774:	eor	r3, r3, r1
   22778:	lsl	r1, r7, #25
   2277c:	orr	r1, r1, r6, lsr #7
   22780:	str	r1, [sp, #2628]	; 0xa44
   22784:	lsl	r1, r6, #25
   22788:	orr	r1, r1, r7, lsr #7
   2278c:	str	r1, [sp, #2624]	; 0xa40
   22790:	add	r1, sp, #2624	; 0xa40
   22794:	ldrd	r0, [r1]
   22798:	eor	r0, r0, r2
   2279c:	eor	r1, r1, r3
   227a0:	strd	r0, [sp, #32]
   227a4:	ldrd	r2, [sp, #40]	; 0x28
   227a8:	orr	r0, r2, r6
   227ac:	orr	r1, r3, r7
   227b0:	ldrd	r4, [sp, #16]
   227b4:	and	r4, r4, r0
   227b8:	and	r5, r5, r1
   227bc:	and	r2, r2, r6
   227c0:	and	r3, r3, r7
   227c4:	orr	r2, r2, r4
   227c8:	orr	r3, r3, r5
   227cc:	mov	r0, r2
   227d0:	mov	r1, r3
   227d4:	ldrd	r2, [sp, #32]
   227d8:	adds	r2, r2, r0
   227dc:	adc	r3, r3, r1
   227e0:	mov	r0, r2
   227e4:	mov	r1, r3
   227e8:	ldrd	r2, [sp]
   227ec:	adds	r2, r2, r0
   227f0:	adc	r3, r3, r1
   227f4:	strd	r2, [sp]
   227f8:	add	r3, sp, #7168	; 0x1c00
   227fc:	add	r3, r3, #24
   22800:	ldr	r1, [r3]
   22804:	lsr	r3, r1, #1
   22808:	add	r2, sp, #7168	; 0x1c00
   2280c:	add	r2, r2, #28
   22810:	ldr	r1, [r2]
   22814:	orr	r1, r3, r1, lsl #31
   22818:	str	r1, [sp, #2632]	; 0xa48
   2281c:	ldr	r1, [r2]
   22820:	lsr	r3, r1, #1
   22824:	add	r2, sp, #7168	; 0x1c00
   22828:	add	r2, r2, #24
   2282c:	ldr	r1, [r2]
   22830:	orr	r1, r3, r1, lsl #31
   22834:	str	r1, [sp, #2636]	; 0xa4c
   22838:	ldr	r1, [r2]
   2283c:	lsr	r3, r1, #8
   22840:	add	r2, sp, #7168	; 0x1c00
   22844:	add	r2, r2, #28
   22848:	ldr	r1, [r2]
   2284c:	orr	r1, r3, r1, lsl #24
   22850:	str	r1, [sp, #2640]	; 0xa50
   22854:	ldr	r1, [r2]
   22858:	lsr	r3, r1, #8
   2285c:	add	r2, sp, #7168	; 0x1c00
   22860:	add	r2, r2, #24
   22864:	ldr	r1, [r2]
   22868:	orr	r1, r3, r1, lsl #24
   2286c:	str	r1, [sp, #2644]	; 0xa54
   22870:	add	r3, sp, #2624	; 0xa40
   22874:	add	r3, r3, #8
   22878:	ldrd	r2, [r3]
   2287c:	add	r1, sp, #2640	; 0xa50
   22880:	ldrd	r0, [r1]
   22884:	eor	r2, r2, r0
   22888:	eor	r3, r3, r1
   2288c:	add	r1, sp, #7168	; 0x1c00
   22890:	add	r1, r1, #24
   22894:	ldr	r1, [r1]
   22898:	lsr	r1, r1, #7
   2289c:	add	r0, sp, #7168	; 0x1c00
   228a0:	add	r0, r0, #28
   228a4:	ldr	ip, [r0]
   228a8:	orr	r1, r1, ip, lsl #25
   228ac:	str	r1, [sp, #328]	; 0x148
   228b0:	lsr	r1, ip, #7
   228b4:	str	r1, [sp, #332]	; 0x14c
   228b8:	add	r1, sp, #328	; 0x148
   228bc:	ldrd	r0, [r1]
   228c0:	eor	r0, r0, r2
   228c4:	eor	r1, r1, r3
   228c8:	mov	r2, r0
   228cc:	mov	r3, r1
   228d0:	add	r1, sp, #7168	; 0x1c00
   228d4:	add	r1, r1, #16
   228d8:	ldrd	r0, [r1]
   228dc:	adds	r0, r0, r2
   228e0:	adc	r1, r1, r3
   228e4:	mov	r2, r0
   228e8:	mov	r3, r1
   228ec:	ldrd	r0, [sp, #56]	; 0x38
   228f0:	adds	r0, r0, r2
   228f4:	adc	r1, r1, r3
   228f8:	mov	r4, r0
   228fc:	mov	r5, r1
   22900:	ldrd	r6, [sp, #96]	; 0x60
   22904:	lsr	r1, r6, #19
   22908:	orr	r1, r1, r7, lsl #13
   2290c:	str	r1, [sp, #2648]	; 0xa58
   22910:	lsr	r1, r7, #19
   22914:	orr	r1, r1, r6, lsl #13
   22918:	str	r1, [sp, #2652]	; 0xa5c
   2291c:	lsl	r1, r7, #3
   22920:	orr	r1, r1, r6, lsr #29
   22924:	str	r1, [sp, #2660]	; 0xa64
   22928:	lsl	r1, r6, #3
   2292c:	orr	r1, r1, r7, lsr #29
   22930:	str	r1, [sp, #2656]	; 0xa60
   22934:	add	r3, sp, #2640	; 0xa50
   22938:	add	r3, r3, #8
   2293c:	ldrd	r0, [r3]
   22940:	add	r3, sp, #2656	; 0xa60
   22944:	ldrd	r2, [r3]
   22948:	eor	r0, r0, r2
   2294c:	eor	r1, r1, r3
   22950:	lsr	ip, r6, #6
   22954:	orr	ip, ip, r7, lsl #26
   22958:	str	ip, [sp, #336]	; 0x150
   2295c:	lsr	ip, r7, #6
   22960:	str	ip, [sp, #340]	; 0x154
   22964:	add	r3, sp, #336	; 0x150
   22968:	ldrd	r6, [r3]
   2296c:	eor	r6, r6, r0
   22970:	eor	r7, r7, r1
   22974:	adds	r2, r4, r6
   22978:	adc	r3, r5, r7
   2297c:	mov	r6, r2
   22980:	mov	r7, r3
   22984:	ldrd	r2, [sp, #24]
   22988:	strd	r2, [sp, #32]
   2298c:	mov	r0, r2
   22990:	mov	r1, r3
   22994:	eor	r0, r0, r8
   22998:	eor	r1, r1, r9
   2299c:	and	r0, r0, sl
   229a0:	and	r1, r1, fp
   229a4:	eor	r0, r0, r8
   229a8:	eor	r1, r1, r9
   229ac:	add	r3, pc, #892	; 0x37c
   229b0:	ldrd	r2, [r3]
   229b4:	strd	r6, [sp, #120]	; 0x78
   229b8:	adds	r6, r6, r2
   229bc:	adc	r7, r7, r3
   229c0:	mov	r2, r6
   229c4:	mov	r3, r7
   229c8:	ldrd	r6, [sp, #8]
   229cc:	adds	r6, r6, r2
   229d0:	adc	r7, r7, r3
   229d4:	adds	r0, r0, r6
   229d8:	adc	r1, r1, r7
   229dc:	lsr	r3, sl, #14
   229e0:	orr	ip, r3, fp, lsl #18
   229e4:	str	ip, [sp, #2664]	; 0xa68
   229e8:	lsr	r3, fp, #14
   229ec:	orr	ip, r3, sl, lsl #18
   229f0:	str	ip, [sp, #2668]	; 0xa6c
   229f4:	lsr	r3, sl, #18
   229f8:	orr	ip, r3, fp, lsl #14
   229fc:	str	ip, [sp, #2672]	; 0xa70
   22a00:	lsr	r3, fp, #18
   22a04:	orr	ip, r3, sl, lsl #14
   22a08:	str	ip, [sp, #2676]	; 0xa74
   22a0c:	add	r3, sp, #2656	; 0xa60
   22a10:	add	r3, r3, #8
   22a14:	ldrd	r2, [r3]
   22a18:	add	ip, sp, #2672	; 0xa70
   22a1c:	ldrd	r4, [ip]
   22a20:	eor	r2, r2, r4
   22a24:	eor	r3, r3, r5
   22a28:	lsl	ip, fp, #23
   22a2c:	orr	ip, ip, sl, lsr #9
   22a30:	str	ip, [sp, #2684]	; 0xa7c
   22a34:	lsl	ip, sl, #23
   22a38:	orr	ip, ip, fp, lsr #9
   22a3c:	str	ip, [sp, #2680]	; 0xa78
   22a40:	add	ip, sp, #2672	; 0xa70
   22a44:	add	ip, ip, #8
   22a48:	ldrd	r4, [ip]
   22a4c:	eor	r4, r4, r2
   22a50:	eor	r5, r5, r3
   22a54:	adds	r4, r0, r4
   22a58:	adc	r5, r1, r5
   22a5c:	mov	r2, r4
   22a60:	mov	r3, r5
   22a64:	strd	r2, [sp, #8]
   22a68:	ldrd	r0, [sp, #16]
   22a6c:	adds	r0, r0, r4
   22a70:	adc	r1, r1, r5
   22a74:	mov	r2, r0
   22a78:	mov	r3, r1
   22a7c:	strd	r2, [sp, #16]
   22a80:	ldrd	r4, [sp]
   22a84:	lsr	r3, r4, #28
   22a88:	orr	r1, r3, r5, lsl #4
   22a8c:	str	r1, [sp, #2688]	; 0xa80
   22a90:	lsr	r3, r5, #28
   22a94:	orr	r1, r3, r4, lsl #4
   22a98:	str	r1, [sp, #2692]	; 0xa84
   22a9c:	lsl	r3, r5, #30
   22aa0:	orr	r1, r3, r4, lsr #2
   22aa4:	str	r1, [sp, #2700]	; 0xa8c
   22aa8:	lsl	r3, r4, #30
   22aac:	orr	r1, r3, r5, lsr #2
   22ab0:	str	r1, [sp, #2696]	; 0xa88
   22ab4:	add	r3, sp, #2688	; 0xa80
   22ab8:	ldrd	r2, [r3]
   22abc:	add	r1, sp, #2688	; 0xa80
   22ac0:	add	r1, r1, #8
   22ac4:	ldrd	r0, [r1]
   22ac8:	eor	r2, r2, r0
   22acc:	eor	r3, r3, r1
   22ad0:	lsl	r1, r5, #25
   22ad4:	orr	r1, r1, r4, lsr #7
   22ad8:	str	r1, [sp, #2708]	; 0xa94
   22adc:	lsl	r1, r4, #25
   22ae0:	orr	r1, r1, r5, lsr #7
   22ae4:	str	r1, [sp, #2704]	; 0xa90
   22ae8:	add	r1, sp, #2704	; 0xa90
   22aec:	ldrd	r6, [r1]
   22af0:	eor	r6, r6, r2
   22af4:	eor	r7, r7, r3
   22af8:	mov	r2, r6
   22afc:	mov	r3, r7
   22b00:	ldrd	r4, [sp, #104]	; 0x68
   22b04:	ldrd	r0, [sp]
   22b08:	orr	r6, r4, r0
   22b0c:	orr	r7, r5, r1
   22b10:	mov	r0, r6
   22b14:	mov	r1, r7
   22b18:	ldrd	r6, [sp, #40]	; 0x28
   22b1c:	and	r6, r6, r0
   22b20:	and	r7, r7, r1
   22b24:	mov	r0, r6
   22b28:	mov	r1, r7
   22b2c:	mov	r6, r4
   22b30:	mov	r7, r5
   22b34:	ldrd	r4, [sp]
   22b38:	and	r6, r6, r4
   22b3c:	and	r7, r7, r5
   22b40:	orr	r0, r0, r6
   22b44:	orr	r1, r1, r7
   22b48:	adds	r0, r0, r2
   22b4c:	adc	r1, r1, r3
   22b50:	ldrd	r2, [sp, #8]
   22b54:	adds	r2, r2, r0
   22b58:	adc	r3, r3, r1
   22b5c:	strd	r2, [sp, #24]
   22b60:	add	r3, sp, #7168	; 0x1c00
   22b64:	add	r3, r3, #32
   22b68:	ldr	r2, [r3]
   22b6c:	lsr	r3, r2, #1
   22b70:	add	r2, sp, #7168	; 0x1c00
   22b74:	add	r2, r2, #36	; 0x24
   22b78:	ldr	r2, [r2]
   22b7c:	orr	r2, r3, r2, lsl #31
   22b80:	str	r2, [sp, #2712]	; 0xa98
   22b84:	add	r3, sp, #7168	; 0x1c00
   22b88:	add	r3, r3, #36	; 0x24
   22b8c:	ldr	r2, [r3]
   22b90:	lsr	r3, r2, #1
   22b94:	add	r2, sp, #7168	; 0x1c00
   22b98:	add	r2, r2, #32
   22b9c:	ldr	r2, [r2]
   22ba0:	orr	r2, r3, r2, lsl #31
   22ba4:	str	r2, [sp, #2716]	; 0xa9c
   22ba8:	add	r3, sp, #7168	; 0x1c00
   22bac:	add	r3, r3, #32
   22bb0:	ldr	r2, [r3]
   22bb4:	lsr	r3, r2, #8
   22bb8:	add	r2, sp, #7168	; 0x1c00
   22bbc:	add	r2, r2, #36	; 0x24
   22bc0:	ldr	r2, [r2]
   22bc4:	orr	r2, r3, r2, lsl #24
   22bc8:	str	r2, [sp, #2720]	; 0xaa0
   22bcc:	add	r3, sp, #7168	; 0x1c00
   22bd0:	add	r3, r3, #36	; 0x24
   22bd4:	ldr	r2, [r3]
   22bd8:	lsr	r3, r2, #8
   22bdc:	add	r2, sp, #7168	; 0x1c00
   22be0:	add	r2, r2, #32
   22be4:	ldr	r2, [r2]
   22be8:	orr	r2, r3, r2, lsl #24
   22bec:	str	r2, [sp, #2724]	; 0xaa4
   22bf0:	add	r3, sp, #2704	; 0xa90
   22bf4:	add	r3, r3, #8
   22bf8:	ldrd	r2, [r3]
   22bfc:	add	r1, sp, #2720	; 0xaa0
   22c00:	ldrd	r4, [r1]
   22c04:	eor	r2, r2, r4
   22c08:	eor	r3, r3, r5
   22c0c:	add	r1, sp, #7168	; 0x1c00
   22c10:	add	r1, r1, #32
   22c14:	ldr	r1, [r1]
   22c18:	lsr	r1, r1, #7
   22c1c:	add	r0, sp, #7168	; 0x1c00
   22c20:	add	r0, r0, #36	; 0x24
   22c24:	ldr	ip, [r0]
   22c28:	orr	r1, r1, ip, lsl #25
   22c2c:	str	r1, [sp, #344]	; 0x158
   22c30:	lsr	r1, ip, #7
   22c34:	str	r1, [sp, #348]	; 0x15c
   22c38:	add	r1, sp, #344	; 0x158
   22c3c:	ldrd	r4, [r1]
   22c40:	eor	r4, r4, r2
   22c44:	eor	r5, r5, r3
   22c48:	mov	r2, r4
   22c4c:	mov	r3, r5
   22c50:	add	r1, sp, #7168	; 0x1c00
   22c54:	add	r1, r1, #24
   22c58:	ldrd	r4, [r1]
   22c5c:	adds	r4, r4, r2
   22c60:	adc	r5, r5, r3
   22c64:	ldrd	r6, [sp, #64]	; 0x40
   22c68:	adds	r6, r6, r4
   22c6c:	adc	r7, r7, r5
   22c70:	mov	r2, r6
   22c74:	mov	r3, r7
   22c78:	ldrd	r4, [sp, #112]	; 0x70
   22c7c:	lsr	r1, r4, #19
   22c80:	orr	r1, r1, r5, lsl #13
   22c84:	str	r1, [sp, #2728]	; 0xaa8
   22c88:	lsr	r1, r5, #19
   22c8c:	orr	r1, r1, r4, lsl #13
   22c90:	str	r1, [sp, #2732]	; 0xaac
   22c94:	lsl	r1, r5, #3
   22c98:	orr	r1, r1, r4, lsr #29
   22c9c:	str	r1, [sp, #2740]	; 0xab4
   22ca0:	lsl	r1, r4, #3
   22ca4:	orr	r1, r1, r5, lsr #29
   22ca8:	str	r1, [sp, #2736]	; 0xab0
   22cac:	add	r1, sp, #2720	; 0xaa0
   22cb0:	add	r1, r1, #8
   22cb4:	ldrd	r0, [r1]
   22cb8:	add	ip, sp, #2736	; 0xab0
   22cbc:	ldrd	r6, [ip]
   22cc0:	eor	r0, r0, r6
   22cc4:	eor	r1, r1, r7
   22cc8:	lsr	ip, r4, #6
   22ccc:	orr	ip, ip, r5, lsl #26
   22cd0:	str	ip, [sp, #352]	; 0x160
   22cd4:	lsr	ip, r5, #6
   22cd8:	str	ip, [sp, #356]	; 0x164
   22cdc:	add	ip, sp, #352	; 0x160
   22ce0:	ldrd	r4, [ip]
   22ce4:	eor	r4, r4, r0
   22ce8:	eor	r5, r5, r1
   22cec:	adds	r4, r2, r4
   22cf0:	adc	r5, r3, r5
   22cf4:	mov	r6, r4
   22cf8:	mov	r7, r5
   22cfc:	ldrd	r4, [sp, #32]
   22d00:	mov	r0, r4
   22d04:	mov	r1, r5
   22d08:	eor	r0, r0, sl
   22d0c:	eor	r1, r1, fp
   22d10:	ldrd	r2, [sp, #16]
   22d14:	and	r2, r2, r0
   22d18:	and	r3, r3, r1
   22d1c:	mov	r0, r2
   22d20:	mov	r1, r3
   22d24:	mov	r2, r4
   22d28:	mov	r3, r5
   22d2c:	b	22d48 <__assert_fail@plt+0x11a5c>
   22d30:	cdp	15, 6, cr13, cr6, cr11, {5}
   22d34:	ldmdals	lr!, {r1, r4, r6, r8, ip, lr}
   22d38:	lfmcs	f3, 4, [r4, #64]!	; 0x40
   22d3c:	ldmdage	r1!, {r0, r2, r3, r5, r6, r9, sl, lr, pc}
   22d40:	ldmls	fp!, {r0, r1, r2, r3, r4, r5, r8, sp}^
   22d44:	andlt	r2, r3, r8, asr #15
   22d48:	eor	r2, r2, r0
   22d4c:	eor	r3, r3, r1
   22d50:	mov	r0, r2
   22d54:	mov	r1, r3
   22d58:	sub	r3, pc, #40	; 0x28
   22d5c:	ldrd	r2, [r3]
   22d60:	strd	r6, [sp, #8]
   22d64:	adds	r6, r6, r2
   22d68:	adc	r7, r7, r3
   22d6c:	adds	r8, r8, r6
   22d70:	adc	r9, r9, r7
   22d74:	adds	r0, r0, r8
   22d78:	adc	r1, r1, r9
   22d7c:	ldrd	r6, [sp, #16]
   22d80:	lsr	r3, r6, #14
   22d84:	orr	r2, r3, r7, lsl #18
   22d88:	str	r2, [sp, #2744]	; 0xab8
   22d8c:	lsr	r3, r7, #14
   22d90:	orr	r2, r3, r6, lsl #18
   22d94:	str	r2, [sp, #2748]	; 0xabc
   22d98:	lsr	r3, r6, #18
   22d9c:	orr	r2, r3, r7, lsl #14
   22da0:	str	r2, [sp, #2752]	; 0xac0
   22da4:	lsr	r3, r7, #18
   22da8:	orr	r2, r3, r6, lsl #14
   22dac:	str	r2, [sp, #2756]	; 0xac4
   22db0:	add	r3, sp, #2736	; 0xab0
   22db4:	add	r3, r3, #8
   22db8:	ldrd	r2, [r3]
   22dbc:	add	ip, sp, #2752	; 0xac0
   22dc0:	ldrd	r8, [ip]
   22dc4:	eor	r2, r2, r8
   22dc8:	eor	r3, r3, r9
   22dcc:	lsl	ip, r7, #23
   22dd0:	mov	r8, r6
   22dd4:	mov	r9, r7
   22dd8:	orr	ip, ip, r6, lsr #9
   22ddc:	str	ip, [sp, #2764]	; 0xacc
   22de0:	lsl	ip, r8, #23
   22de4:	orr	ip, ip, r9, lsr #9
   22de8:	str	ip, [sp, #2760]	; 0xac8
   22dec:	add	ip, sp, #2752	; 0xac0
   22df0:	add	ip, ip, #8
   22df4:	ldrd	r8, [ip]
   22df8:	eor	r8, r8, r2
   22dfc:	eor	r9, r9, r3
   22e00:	adds	r8, r0, r8
   22e04:	adc	r9, r1, r9
   22e08:	mov	r2, r8
   22e0c:	mov	r3, r9
   22e10:	ldrd	r8, [sp, #40]	; 0x28
   22e14:	strd	r2, [sp, #40]	; 0x28
   22e18:	adds	r8, r8, r2
   22e1c:	adc	r9, r9, r3
   22e20:	strd	r8, [sp, #32]
   22e24:	ldrd	r6, [sp, #24]
   22e28:	lsr	r3, r6, #28
   22e2c:	orr	r1, r3, r7, lsl #4
   22e30:	str	r1, [sp, #2768]	; 0xad0
   22e34:	lsr	r3, r7, #28
   22e38:	orr	r1, r3, r6, lsl #4
   22e3c:	str	r1, [sp, #2772]	; 0xad4
   22e40:	lsl	r3, r7, #30
   22e44:	orr	r1, r3, r6, lsr #2
   22e48:	str	r1, [sp, #2780]	; 0xadc
   22e4c:	lsl	r3, r6, #30
   22e50:	orr	r1, r3, r7, lsr #2
   22e54:	str	r1, [sp, #2776]	; 0xad8
   22e58:	add	r3, sp, #2768	; 0xad0
   22e5c:	ldrd	r8, [r3]
   22e60:	add	r3, sp, #2768	; 0xad0
   22e64:	add	r3, r3, #8
   22e68:	ldrd	r2, [r3]
   22e6c:	eor	r8, r8, r2
   22e70:	eor	r9, r9, r3
   22e74:	mov	r2, r8
   22e78:	mov	r3, r9
   22e7c:	lsl	r1, r7, #25
   22e80:	orr	r1, r1, r6, lsr #7
   22e84:	str	r1, [sp, #2788]	; 0xae4
   22e88:	lsl	r1, r6, #25
   22e8c:	orr	r1, r1, r7, lsr #7
   22e90:	str	r1, [sp, #2784]	; 0xae0
   22e94:	add	r1, sp, #2784	; 0xae0
   22e98:	ldrd	r8, [r1]
   22e9c:	eor	r8, r8, r2
   22ea0:	eor	r9, r9, r3
   22ea4:	mov	r2, r8
   22ea8:	mov	r3, r9
   22eac:	ldrd	r8, [sp]
   22eb0:	orr	r0, r6, r8
   22eb4:	orr	r1, r7, r9
   22eb8:	ldrd	r6, [sp, #104]	; 0x68
   22ebc:	and	r6, r6, r0
   22ec0:	and	r7, r7, r1
   22ec4:	mov	r0, r6
   22ec8:	mov	r1, r7
   22ecc:	ldrd	r8, [sp]
   22ed0:	ldrd	r6, [sp, #24]
   22ed4:	and	r6, r6, r8
   22ed8:	and	r7, r7, r9
   22edc:	orr	r8, r6, r0
   22ee0:	orr	r9, r7, r1
   22ee4:	adds	r0, r8, r2
   22ee8:	adc	r1, r9, r3
   22eec:	ldrd	r2, [sp, #40]	; 0x28
   22ef0:	adds	r2, r2, r0
   22ef4:	adc	r3, r3, r1
   22ef8:	mov	r8, r2
   22efc:	mov	r9, r3
   22f00:	add	r3, sp, #7168	; 0x1c00
   22f04:	add	r3, r3, #40	; 0x28
   22f08:	ldr	r1, [r3]
   22f0c:	lsr	r3, r1, #1
   22f10:	add	r2, sp, #7168	; 0x1c00
   22f14:	add	r2, r2, #44	; 0x2c
   22f18:	ldr	r1, [r2]
   22f1c:	orr	r1, r3, r1, lsl #31
   22f20:	str	r1, [sp, #2792]	; 0xae8
   22f24:	ldr	r1, [r2]
   22f28:	lsr	r3, r1, #1
   22f2c:	add	r2, sp, #7168	; 0x1c00
   22f30:	add	r2, r2, #40	; 0x28
   22f34:	ldr	r1, [r2]
   22f38:	orr	r1, r3, r1, lsl #31
   22f3c:	str	r1, [sp, #2796]	; 0xaec
   22f40:	ldr	r1, [r2]
   22f44:	lsr	r3, r1, #8
   22f48:	add	r2, sp, #7168	; 0x1c00
   22f4c:	add	r2, r2, #44	; 0x2c
   22f50:	ldr	r1, [r2]
   22f54:	orr	r1, r3, r1, lsl #24
   22f58:	str	r1, [sp, #2800]	; 0xaf0
   22f5c:	ldr	r1, [r2]
   22f60:	lsr	r3, r1, #8
   22f64:	add	r2, sp, #7168	; 0x1c00
   22f68:	add	r2, r2, #40	; 0x28
   22f6c:	ldr	r1, [r2]
   22f70:	orr	r1, r3, r1, lsl #24
   22f74:	str	r1, [sp, #2804]	; 0xaf4
   22f78:	add	r3, sp, #2784	; 0xae0
   22f7c:	add	r3, r3, #8
   22f80:	ldrd	r2, [r3]
   22f84:	add	r1, sp, #2800	; 0xaf0
   22f88:	ldrd	r0, [r1]
   22f8c:	eor	r2, r2, r0
   22f90:	eor	r3, r3, r1
   22f94:	add	r1, sp, #7168	; 0x1c00
   22f98:	add	r1, r1, #40	; 0x28
   22f9c:	ldr	r1, [r1]
   22fa0:	lsr	r1, r1, #7
   22fa4:	add	r0, sp, #7168	; 0x1c00
   22fa8:	add	r0, r0, #44	; 0x2c
   22fac:	ldr	ip, [r0]
   22fb0:	orr	r1, r1, ip, lsl #25
   22fb4:	str	r1, [sp, #360]	; 0x168
   22fb8:	lsr	r1, ip, #7
   22fbc:	str	r1, [sp, #364]	; 0x16c
   22fc0:	add	r1, sp, #360	; 0x168
   22fc4:	ldrd	r0, [r1]
   22fc8:	eor	r0, r0, r2
   22fcc:	eor	r1, r1, r3
   22fd0:	mov	r2, r0
   22fd4:	mov	r3, r1
   22fd8:	add	r1, sp, #7168	; 0x1c00
   22fdc:	add	r1, r1, #32
   22fe0:	ldrd	r0, [r1]
   22fe4:	adds	r0, r0, r2
   22fe8:	adc	r1, r1, r3
   22fec:	ldrd	r6, [sp, #72]	; 0x48
   22ff0:	adds	r6, r6, r0
   22ff4:	adc	r7, r7, r1
   22ff8:	strd	r6, [sp, #40]	; 0x28
   22ffc:	ldrd	r6, [sp, #120]	; 0x78
   23000:	lsr	r1, r6, #19
   23004:	orr	r1, r1, r7, lsl #13
   23008:	str	r1, [sp, #2808]	; 0xaf8
   2300c:	lsr	r1, r7, #19
   23010:	orr	r1, r1, r6, lsl #13
   23014:	str	r1, [sp, #2812]	; 0xafc
   23018:	lsl	r1, r7, #3
   2301c:	orr	r1, r1, r6, lsr #29
   23020:	str	r1, [sp, #2820]	; 0xb04
   23024:	lsl	r1, r6, #3
   23028:	orr	r1, r1, r7, lsr #29
   2302c:	str	r1, [sp, #2816]	; 0xb00
   23030:	add	r3, sp, #2800	; 0xaf0
   23034:	add	r3, r3, #8
   23038:	ldrd	r0, [r3]
   2303c:	add	r3, sp, #2816	; 0xb00
   23040:	ldrd	r2, [r3]
   23044:	eor	r0, r0, r2
   23048:	eor	r1, r1, r3
   2304c:	lsr	ip, r6, #6
   23050:	orr	ip, ip, r7, lsl #26
   23054:	str	ip, [sp, #368]	; 0x170
   23058:	lsr	ip, r7, #6
   2305c:	str	ip, [sp, #372]	; 0x174
   23060:	add	r3, sp, #368	; 0x170
   23064:	ldrd	r6, [r3]
   23068:	eor	r6, r6, r0
   2306c:	eor	r7, r7, r1
   23070:	ldrd	r2, [sp, #40]	; 0x28
   23074:	adds	r2, r2, r6
   23078:	adc	r3, r3, r7
   2307c:	mov	r6, r2
   23080:	mov	r7, r3
   23084:	ldrd	r0, [sp, #16]
   23088:	eor	r0, r0, sl
   2308c:	eor	r1, r1, fp
   23090:	ldrd	r2, [sp, #32]
   23094:	and	r2, r2, r0
   23098:	and	r3, r3, r1
   2309c:	mov	r0, r2
   230a0:	mov	r1, r3
   230a4:	eor	r0, r0, sl
   230a8:	eor	r1, r1, fp
   230ac:	sub	r3, pc, #884	; 0x374
   230b0:	ldrd	r2, [r3]
   230b4:	strd	r6, [sp, #128]	; 0x80
   230b8:	adds	r6, r6, r2
   230bc:	adc	r7, r7, r3
   230c0:	adds	r4, r4, r6
   230c4:	adc	r5, r5, r7
   230c8:	adds	r0, r0, r4
   230cc:	adc	r1, r1, r5
   230d0:	ldrd	r6, [sp, #32]
   230d4:	lsr	r3, r6, #14
   230d8:	orr	ip, r3, r7, lsl #18
   230dc:	str	ip, [sp, #2824]	; 0xb08
   230e0:	lsr	r3, r7, #14
   230e4:	orr	ip, r3, r6, lsl #18
   230e8:	str	ip, [sp, #2828]	; 0xb0c
   230ec:	lsr	r3, r6, #18
   230f0:	orr	ip, r3, r7, lsl #14
   230f4:	str	ip, [sp, #2832]	; 0xb10
   230f8:	lsr	r3, r7, #18
   230fc:	orr	ip, r3, r6, lsl #14
   23100:	str	ip, [sp, #2836]	; 0xb14
   23104:	add	r3, sp, #2816	; 0xb00
   23108:	add	r3, r3, #8
   2310c:	ldrd	r2, [r3]
   23110:	add	ip, sp, #2832	; 0xb10
   23114:	ldrd	r4, [ip]
   23118:	eor	r2, r2, r4
   2311c:	eor	r3, r3, r5
   23120:	lsl	ip, r7, #23
   23124:	mov	r4, r6
   23128:	mov	r5, r7
   2312c:	orr	ip, ip, r6, lsr #9
   23130:	str	ip, [sp, #2844]	; 0xb1c
   23134:	lsl	ip, r4, #23
   23138:	orr	ip, ip, r5, lsr #9
   2313c:	str	ip, [sp, #2840]	; 0xb18
   23140:	add	ip, sp, #2832	; 0xb10
   23144:	add	ip, ip, #8
   23148:	ldrd	r4, [ip]
   2314c:	eor	r4, r4, r2
   23150:	eor	r5, r5, r3
   23154:	adds	r4, r0, r4
   23158:	adc	r5, r1, r5
   2315c:	ldrd	r6, [sp, #104]	; 0x68
   23160:	adds	r6, r6, r4
   23164:	adc	r7, r7, r5
   23168:	lsr	r3, r8, #28
   2316c:	orr	r1, r3, r9, lsl #4
   23170:	str	r1, [sp, #2848]	; 0xb20
   23174:	lsr	r3, r9, #28
   23178:	orr	r1, r3, r8, lsl #4
   2317c:	str	r1, [sp, #2852]	; 0xb24
   23180:	lsl	r3, r9, #30
   23184:	orr	r1, r3, r8, lsr #2
   23188:	str	r1, [sp, #2860]	; 0xb2c
   2318c:	lsl	r3, r8, #30
   23190:	orr	r1, r3, r9, lsr #2
   23194:	str	r1, [sp, #2856]	; 0xb28
   23198:	add	r3, sp, #2848	; 0xb20
   2319c:	ldrd	r2, [r3]
   231a0:	add	r1, sp, #2848	; 0xb20
   231a4:	add	r1, r1, #8
   231a8:	ldrd	r0, [r1]
   231ac:	eor	r2, r2, r0
   231b0:	eor	r3, r3, r1
   231b4:	lsl	r1, r9, #25
   231b8:	orr	r1, r1, r8, lsr #7
   231bc:	str	r1, [sp, #2868]	; 0xb34
   231c0:	lsl	r1, r8, #25
   231c4:	orr	r1, r1, r9, lsr #7
   231c8:	str	r1, [sp, #2864]	; 0xb30
   231cc:	add	r1, sp, #2864	; 0xb30
   231d0:	ldrd	r0, [r1]
   231d4:	eor	r0, r0, r2
   231d8:	eor	r1, r1, r3
   231dc:	strd	r0, [sp, #40]	; 0x28
   231e0:	ldrd	r2, [sp, #24]
   231e4:	orr	r2, r2, r8
   231e8:	orr	r3, r3, r9
   231ec:	mov	r0, r2
   231f0:	mov	r1, r3
   231f4:	ldrd	r2, [sp]
   231f8:	and	r2, r2, r0
   231fc:	and	r3, r3, r1
   23200:	mov	r0, r2
   23204:	mov	r1, r3
   23208:	strd	r8, [sp, #160]	; 0xa0
   2320c:	ldrd	r2, [sp, #24]
   23210:	and	r2, r2, r8
   23214:	and	r3, r3, r9
   23218:	orr	r8, r2, r0
   2321c:	orr	r9, r3, r1
   23220:	mov	r0, r8
   23224:	mov	r1, r9
   23228:	ldrd	r8, [sp, #40]	; 0x28
   2322c:	adds	r8, r8, r0
   23230:	adc	r9, r9, r1
   23234:	adds	r4, r4, r8
   23238:	adc	r5, r5, r9
   2323c:	add	r3, sp, #7168	; 0x1c00
   23240:	add	r3, r3, #48	; 0x30
   23244:	ldr	r1, [r3]
   23248:	lsr	r3, r1, #1
   2324c:	add	r2, sp, #7168	; 0x1c00
   23250:	add	r2, r2, #52	; 0x34
   23254:	ldr	r1, [r2]
   23258:	orr	r1, r3, r1, lsl #31
   2325c:	str	r1, [sp, #2872]	; 0xb38
   23260:	ldr	r1, [r2]
   23264:	lsr	r3, r1, #1
   23268:	add	r2, sp, #7168	; 0x1c00
   2326c:	add	r2, r2, #48	; 0x30
   23270:	ldr	r1, [r2]
   23274:	orr	r1, r3, r1, lsl #31
   23278:	str	r1, [sp, #2876]	; 0xb3c
   2327c:	ldr	r1, [r2]
   23280:	lsr	r3, r1, #8
   23284:	add	r2, sp, #7168	; 0x1c00
   23288:	add	r2, r2, #52	; 0x34
   2328c:	ldr	r1, [r2]
   23290:	orr	r1, r3, r1, lsl #24
   23294:	str	r1, [sp, #2880]	; 0xb40
   23298:	ldr	r1, [r2]
   2329c:	lsr	r3, r1, #8
   232a0:	add	r2, sp, #7168	; 0x1c00
   232a4:	add	r2, r2, #48	; 0x30
   232a8:	ldr	r1, [r2]
   232ac:	orr	r1, r3, r1, lsl #24
   232b0:	str	r1, [sp, #2884]	; 0xb44
   232b4:	add	r3, sp, #2864	; 0xb30
   232b8:	add	r3, r3, #8
   232bc:	ldrd	r2, [r3]
   232c0:	add	r1, sp, #2880	; 0xb40
   232c4:	ldrd	r8, [r1]
   232c8:	eor	r2, r2, r8
   232cc:	eor	r3, r3, r9
   232d0:	add	r1, sp, #7168	; 0x1c00
   232d4:	add	r1, r1, #48	; 0x30
   232d8:	ldr	r1, [r1]
   232dc:	lsr	r1, r1, #7
   232e0:	add	r0, sp, #7168	; 0x1c00
   232e4:	add	r0, r0, #52	; 0x34
   232e8:	ldr	ip, [r0]
   232ec:	orr	r1, r1, ip, lsl #25
   232f0:	str	r1, [sp, #376]	; 0x178
   232f4:	lsr	r1, ip, #7
   232f8:	str	r1, [sp, #380]	; 0x17c
   232fc:	add	r1, sp, #376	; 0x178
   23300:	ldrd	r8, [r1]
   23304:	eor	r8, r8, r2
   23308:	eor	r9, r9, r3
   2330c:	mov	r2, r8
   23310:	mov	r3, r9
   23314:	add	r1, sp, #7168	; 0x1c00
   23318:	add	r1, r1, #40	; 0x28
   2331c:	ldrd	r8, [r1]
   23320:	adds	r8, r8, r2
   23324:	adc	r9, r9, r3
   23328:	ldrd	r0, [sp, #80]	; 0x50
   2332c:	adds	r0, r0, r8
   23330:	adc	r1, r1, r9
   23334:	mov	r2, r0
   23338:	mov	r3, r1
   2333c:	ldrd	r8, [sp, #8]
   23340:	lsr	r1, r8, #19
   23344:	orr	r1, r1, r9, lsl #13
   23348:	str	r1, [sp, #2888]	; 0xb48
   2334c:	lsr	r1, r9, #19
   23350:	orr	r1, r1, r8, lsl #13
   23354:	str	r1, [sp, #2892]	; 0xb4c
   23358:	lsl	r1, r9, #3
   2335c:	orr	r1, r1, r8, lsr #29
   23360:	str	r1, [sp, #2900]	; 0xb54
   23364:	lsl	r1, r8, #3
   23368:	orr	r1, r1, r9, lsr #29
   2336c:	str	r1, [sp, #2896]	; 0xb50
   23370:	add	r1, sp, #2880	; 0xb40
   23374:	add	r1, r1, #8
   23378:	ldrd	r8, [r1]
   2337c:	add	r1, sp, #2896	; 0xb50
   23380:	ldrd	r0, [r1]
   23384:	eor	r8, r8, r0
   23388:	eor	r9, r9, r1
   2338c:	mov	r0, r8
   23390:	mov	r1, r9
   23394:	ldrd	r8, [sp, #8]
   23398:	lsr	ip, r8, #6
   2339c:	orr	ip, ip, r9, lsl #26
   233a0:	str	ip, [sp, #384]	; 0x180
   233a4:	ldr	ip, [sp, #12]
   233a8:	lsr	ip, ip, #6
   233ac:	str	ip, [sp, #388]	; 0x184
   233b0:	add	ip, sp, #384	; 0x180
   233b4:	ldrd	r8, [ip]
   233b8:	eor	r8, r8, r0
   233bc:	eor	r9, r9, r1
   233c0:	adds	r8, r2, r8
   233c4:	adc	r9, r3, r9
   233c8:	ldrd	r0, [sp, #16]
   233cc:	ldrd	r2, [sp, #32]
   233d0:	eor	r0, r0, r2
   233d4:	eor	r1, r1, r3
   233d8:	mov	r2, r6
   233dc:	mov	r3, r7
   233e0:	and	r2, r2, r0
   233e4:	and	r3, r3, r1
   233e8:	mov	r0, r2
   233ec:	mov	r1, r3
   233f0:	ldrd	r2, [sp, #16]
   233f4:	eor	r2, r2, r0
   233f8:	eor	r3, r3, r1
   233fc:	mov	r0, r2
   23400:	mov	r1, r3
   23404:	add	r3, pc, #900	; 0x384
   23408:	ldrd	r2, [r3]
   2340c:	strd	r8, [sp, #104]	; 0x68
   23410:	adds	r8, r8, r2
   23414:	adc	r9, r9, r3
   23418:	adds	sl, sl, r8
   2341c:	adc	fp, fp, r9
   23420:	adds	r0, r0, sl
   23424:	adc	r1, r1, fp
   23428:	lsr	r3, r6, #14
   2342c:	orr	ip, r3, r7, lsl #18
   23430:	str	ip, [sp, #2904]	; 0xb58
   23434:	lsr	r3, r7, #14
   23438:	orr	ip, r3, r6, lsl #18
   2343c:	str	ip, [sp, #2908]	; 0xb5c
   23440:	lsr	r3, r6, #18
   23444:	orr	ip, r3, r7, lsl #14
   23448:	str	ip, [sp, #2912]	; 0xb60
   2344c:	lsr	r3, r7, #18
   23450:	orr	ip, r3, r6, lsl #14
   23454:	str	ip, [sp, #2916]	; 0xb64
   23458:	add	r3, sp, #2896	; 0xb50
   2345c:	add	r3, r3, #8
   23460:	ldrd	r2, [r3]
   23464:	add	ip, sp, #2912	; 0xb60
   23468:	ldrd	sl, [ip]
   2346c:	eor	r2, r2, sl
   23470:	eor	r3, r3, fp
   23474:	lsl	ip, r7, #23
   23478:	orr	ip, ip, r6, lsr #9
   2347c:	str	ip, [sp, #2924]	; 0xb6c
   23480:	lsl	ip, r6, #23
   23484:	orr	ip, ip, r7, lsr #9
   23488:	str	ip, [sp, #2920]	; 0xb68
   2348c:	add	ip, sp, #2912	; 0xb60
   23490:	add	ip, ip, #8
   23494:	ldrd	sl, [ip]
   23498:	eor	sl, sl, r2
   2349c:	eor	fp, fp, r3
   234a0:	adds	sl, r0, sl
   234a4:	adc	fp, r1, fp
   234a8:	ldrd	r2, [sp]
   234ac:	strd	sl, [sp]
   234b0:	adds	r2, r2, sl
   234b4:	adc	r3, r3, fp
   234b8:	strd	r2, [sp, #40]	; 0x28
   234bc:	lsr	r3, r4, #28
   234c0:	orr	r1, r3, r5, lsl #4
   234c4:	str	r1, [sp, #2928]	; 0xb70
   234c8:	lsr	r3, r5, #28
   234cc:	orr	r1, r3, r4, lsl #4
   234d0:	str	r1, [sp, #2932]	; 0xb74
   234d4:	lsl	r3, r5, #30
   234d8:	orr	r1, r3, r4, lsr #2
   234dc:	str	r1, [sp, #2940]	; 0xb7c
   234e0:	lsl	r3, r4, #30
   234e4:	orr	r1, r3, r5, lsr #2
   234e8:	str	r1, [sp, #2936]	; 0xb78
   234ec:	add	r3, sp, #2928	; 0xb70
   234f0:	ldrd	r2, [r3]
   234f4:	add	r1, sp, #2928	; 0xb70
   234f8:	add	r1, r1, #8
   234fc:	ldrd	sl, [r1]
   23500:	eor	r2, r2, sl
   23504:	eor	r3, r3, fp
   23508:	lsl	r1, r5, #25
   2350c:	orr	r1, r1, r4, lsr #7
   23510:	str	r1, [sp, #2948]	; 0xb84
   23514:	lsl	r1, r4, #25
   23518:	orr	r1, r1, r5, lsr #7
   2351c:	str	r1, [sp, #2944]	; 0xb80
   23520:	add	r1, sp, #2944	; 0xb80
   23524:	ldrd	sl, [r1]
   23528:	eor	sl, sl, r2
   2352c:	eor	fp, fp, r3
   23530:	mov	r2, sl
   23534:	mov	r3, fp
   23538:	ldrd	sl, [sp, #160]	; 0xa0
   2353c:	orr	r8, sl, r4
   23540:	orr	r9, fp, r5
   23544:	mov	r0, r8
   23548:	mov	r1, r9
   2354c:	ldrd	r8, [sp, #24]
   23550:	and	r8, r8, r0
   23554:	and	r9, r9, r1
   23558:	mov	r0, r8
   2355c:	mov	r1, r9
   23560:	mov	r8, sl
   23564:	mov	r9, fp
   23568:	and	r8, r8, r4
   2356c:	and	r9, r9, r5
   23570:	orr	r8, r8, r0
   23574:	orr	r9, r9, r1
   23578:	adds	r0, r8, r2
   2357c:	adc	r1, r9, r3
   23580:	ldrd	r2, [sp]
   23584:	adds	r2, r2, r0
   23588:	adc	r3, r3, r1
   2358c:	strd	r2, [sp, #136]	; 0x88
   23590:	add	r3, sp, #7168	; 0x1c00
   23594:	add	r3, r3, #56	; 0x38
   23598:	ldr	r1, [r3]
   2359c:	lsr	r3, r1, #1
   235a0:	add	r2, sp, #7168	; 0x1c00
   235a4:	add	r2, r2, #60	; 0x3c
   235a8:	ldr	r1, [r2]
   235ac:	orr	r1, r3, r1, lsl #31
   235b0:	str	r1, [sp, #2952]	; 0xb88
   235b4:	ldr	r1, [r2]
   235b8:	lsr	r3, r1, #1
   235bc:	add	r2, sp, #7168	; 0x1c00
   235c0:	add	r2, r2, #56	; 0x38
   235c4:	ldr	r1, [r2]
   235c8:	orr	r1, r3, r1, lsl #31
   235cc:	str	r1, [sp, #2956]	; 0xb8c
   235d0:	ldr	r1, [r2]
   235d4:	lsr	r3, r1, #8
   235d8:	add	r2, sp, #7168	; 0x1c00
   235dc:	add	r2, r2, #60	; 0x3c
   235e0:	ldr	r1, [r2]
   235e4:	orr	r1, r3, r1, lsl #24
   235e8:	str	r1, [sp, #2960]	; 0xb90
   235ec:	ldr	r1, [r2]
   235f0:	lsr	r3, r1, #8
   235f4:	add	r2, sp, #7168	; 0x1c00
   235f8:	add	r2, r2, #56	; 0x38
   235fc:	ldr	r1, [r2]
   23600:	orr	r1, r3, r1, lsl #24
   23604:	str	r1, [sp, #2964]	; 0xb94
   23608:	add	r3, sp, #2944	; 0xb80
   2360c:	add	r3, r3, #8
   23610:	ldrd	r2, [r3]
   23614:	add	r1, sp, #2960	; 0xb90
   23618:	ldrd	sl, [r1]
   2361c:	eor	r2, r2, sl
   23620:	eor	r3, r3, fp
   23624:	add	r1, sp, #7168	; 0x1c00
   23628:	add	r1, r1, #56	; 0x38
   2362c:	ldr	r1, [r1]
   23630:	lsr	r1, r1, #7
   23634:	add	r0, sp, #7168	; 0x1c00
   23638:	add	r0, r0, #60	; 0x3c
   2363c:	ldr	ip, [r0]
   23640:	orr	r1, r1, ip, lsl #25
   23644:	str	r1, [sp, #392]	; 0x188
   23648:	lsr	r1, ip, #7
   2364c:	str	r1, [sp, #396]	; 0x18c
   23650:	add	r1, sp, #392	; 0x188
   23654:	ldrd	sl, [r1]
   23658:	eor	sl, sl, r2
   2365c:	eor	fp, fp, r3
   23660:	mov	r2, sl
   23664:	mov	r3, fp
   23668:	add	r1, sp, #7168	; 0x1c00
   2366c:	add	r1, r1, #48	; 0x30
   23670:	ldrd	sl, [r1]
   23674:	adds	sl, sl, r2
   23678:	adc	fp, fp, r3
   2367c:	mov	r2, sl
   23680:	mov	r3, fp
   23684:	ldrd	sl, [sp, #88]	; 0x58
   23688:	adds	sl, sl, r2
   2368c:	adc	fp, fp, r3
   23690:	mov	r2, sl
   23694:	mov	r3, fp
   23698:	ldrd	r8, [sp, #128]	; 0x80
   2369c:	lsr	r1, r8, #19
   236a0:	orr	r1, r1, r9, lsl #13
   236a4:	str	r1, [sp, #2968]	; 0xb98
   236a8:	lsr	r1, r9, #19
   236ac:	orr	r1, r1, r8, lsl #13
   236b0:	str	r1, [sp, #2972]	; 0xb9c
   236b4:	lsl	r1, r9, #3
   236b8:	orr	r1, r1, r8, lsr #29
   236bc:	str	r1, [sp, #2980]	; 0xba4
   236c0:	lsl	r1, r8, #3
   236c4:	orr	r1, r1, r9, lsr #29
   236c8:	str	r1, [sp, #2976]	; 0xba0
   236cc:	add	r1, sp, #2960	; 0xb90
   236d0:	add	r1, r1, #8
   236d4:	ldrd	sl, [r1]
   236d8:	add	r1, sp, #2976	; 0xba0
   236dc:	ldrd	r0, [r1]
   236e0:	eor	sl, sl, r0
   236e4:	eor	fp, fp, r1
   236e8:	mov	r0, sl
   236ec:	mov	r1, fp
   236f0:	lsr	ip, r8, #6
   236f4:	orr	ip, ip, r9, lsl #26
   236f8:	str	ip, [sp, #400]	; 0x190
   236fc:	lsr	ip, r9, #6
   23700:	str	ip, [sp, #404]	; 0x194
   23704:	add	ip, sp, #400	; 0x190
   23708:	ldrd	sl, [ip]
   2370c:	eor	sl, sl, r0
   23710:	eor	fp, fp, r1
   23714:	adds	sl, r2, sl
   23718:	adc	fp, r3, fp
   2371c:	strd	r6, [sp]
   23720:	mov	r0, r6
   23724:	mov	r1, r7
   23728:	ldrd	r6, [sp, #32]
   2372c:	mov	r2, r6
   23730:	mov	r3, r7
   23734:	eor	r2, r2, r0
   23738:	eor	r3, r3, r1
   2373c:	mov	r0, r2
   23740:	mov	r1, r3
   23744:	ldrd	r8, [sp, #40]	; 0x28
   23748:	mov	r2, r8
   2374c:	mov	r3, r9
   23750:	and	r2, r2, r0
   23754:	and	r3, r3, r1
   23758:	mov	r0, r2
   2375c:	mov	r1, r3
   23760:	mov	r2, r6
   23764:	mov	r3, r7
   23768:	eor	r2, r2, r0
   2376c:	eor	r3, r3, r1
   23770:	mov	r0, r2
   23774:	mov	r1, r3
   23778:	add	r3, pc, #24
   2377c:	ldrd	r2, [r3]
   23780:	strd	sl, [sp, #144]	; 0x90
   23784:	adds	sl, sl, r2
   23788:	adc	fp, fp, r3
   2378c:	b	237a8 <__assert_fail@plt+0x124bc>
   23790:	cdplt	14, 14, cr0, cr15, cr4, {7}
   23794:	svclt	0x00597fc7
   23798:	stccc	15, cr8, [r8, #776]!	; 0x308
   2379c:			; <UNDEFINED> instruction: 0xc6e00bf3
   237a0:	movwls	sl, #42789	; 0xa725
   237a4:	strle	r9, [r7, #327]!	; 0x147
   237a8:	ldrd	r6, [sp, #16]
   237ac:	adds	r6, r6, sl
   237b0:	adc	r7, r7, fp
   237b4:	adds	r0, r0, r6
   237b8:	adc	r1, r1, r7
   237bc:	lsr	r3, r8, #14
   237c0:	mov	r6, r8
   237c4:	mov	r7, r9
   237c8:	orr	ip, r3, r9, lsl #18
   237cc:	str	ip, [sp, #2984]	; 0xba8
   237d0:	lsr	r3, r9, #14
   237d4:	orr	ip, r3, r8, lsl #18
   237d8:	str	ip, [sp, #2988]	; 0xbac
   237dc:	lsr	r3, r8, #18
   237e0:	orr	ip, r3, r9, lsl #14
   237e4:	str	ip, [sp, #2992]	; 0xbb0
   237e8:	lsr	r3, r9, #18
   237ec:	orr	ip, r3, r8, lsl #14
   237f0:	str	ip, [sp, #2996]	; 0xbb4
   237f4:	add	r3, sp, #2976	; 0xba0
   237f8:	add	r3, r3, #8
   237fc:	ldrd	r2, [r3]
   23800:	add	ip, sp, #2992	; 0xbb0
   23804:	ldrd	r8, [ip]
   23808:	eor	r2, r2, r8
   2380c:	eor	r3, r3, r9
   23810:	lsl	ip, r7, #23
   23814:	orr	ip, ip, r6, lsr #9
   23818:	str	ip, [sp, #3004]	; 0xbbc
   2381c:	lsl	ip, r6, #23
   23820:	orr	ip, ip, r7, lsr #9
   23824:	str	ip, [sp, #3000]	; 0xbb8
   23828:	add	ip, sp, #2992	; 0xbb0
   2382c:	add	ip, ip, #8
   23830:	ldrd	r8, [ip]
   23834:	eor	r8, r8, r2
   23838:	eor	r9, r9, r3
   2383c:	adds	r8, r0, r8
   23840:	adc	r9, r1, r9
   23844:	mov	r2, r8
   23848:	mov	r3, r9
   2384c:	strd	r2, [sp, #16]
   23850:	ldrd	r0, [sp, #24]
   23854:	adds	r0, r0, r8
   23858:	adc	r1, r1, r9
   2385c:	mov	r2, r0
   23860:	mov	r3, r1
   23864:	strd	r2, [sp, #24]
   23868:	ldrd	r6, [sp, #136]	; 0x88
   2386c:	lsr	r3, r6, #28
   23870:	orr	r1, r3, r7, lsl #4
   23874:	str	r1, [sp, #3008]	; 0xbc0
   23878:	lsr	r3, r7, #28
   2387c:	orr	r1, r3, r6, lsl #4
   23880:	str	r1, [sp, #3012]	; 0xbc4
   23884:	lsl	r3, r7, #30
   23888:	orr	r1, r3, r6, lsr #2
   2388c:	str	r1, [sp, #3020]	; 0xbcc
   23890:	lsl	r3, r6, #30
   23894:	orr	r1, r3, r7, lsr #2
   23898:	str	r1, [sp, #3016]	; 0xbc8
   2389c:	add	r3, sp, #3008	; 0xbc0
   238a0:	ldrd	r2, [r3]
   238a4:	add	r1, sp, #3008	; 0xbc0
   238a8:	add	r1, r1, #8
   238ac:	ldrd	r8, [r1]
   238b0:	eor	r2, r2, r8
   238b4:	eor	r3, r3, r9
   238b8:	lsl	r1, r7, #25
   238bc:	orr	r1, r1, r6, lsr #7
   238c0:	str	r1, [sp, #3028]	; 0xbd4
   238c4:	lsl	r1, r6, #25
   238c8:	orr	r1, r1, r7, lsr #7
   238cc:	str	r1, [sp, #3024]	; 0xbd0
   238d0:	add	r1, sp, #3024	; 0xbd0
   238d4:	ldrd	r8, [r1]
   238d8:	eor	r8, r8, r2
   238dc:	eor	r9, r9, r3
   238e0:	mov	r2, r8
   238e4:	mov	r3, r9
   238e8:	mov	sl, r4
   238ec:	mov	fp, r5
   238f0:	orr	r4, r4, r6
   238f4:	orr	r5, r5, r7
   238f8:	ldrd	r8, [sp, #160]	; 0xa0
   238fc:	and	r8, r8, r4
   23900:	and	r9, r9, r5
   23904:	mov	r4, sl
   23908:	mov	r5, fp
   2390c:	and	r4, r4, r6
   23910:	and	r5, r5, r7
   23914:	orr	r0, r8, r4
   23918:	orr	r1, r9, r5
   2391c:	adds	r0, r0, r2
   23920:	adc	r1, r1, r3
   23924:	ldrd	r2, [sp, #16]
   23928:	adds	r2, r2, r0
   2392c:	adc	r3, r3, r1
   23930:	mov	r4, r2
   23934:	mov	r5, r3
   23938:	add	r3, sp, #7232	; 0x1c40
   2393c:	ldr	r2, [r3]
   23940:	lsr	r3, r2, #1
   23944:	add	r2, sp, #7232	; 0x1c40
   23948:	add	r2, r2, #4
   2394c:	ldr	r2, [r2]
   23950:	orr	r2, r3, r2, lsl #31
   23954:	str	r2, [sp, #3032]	; 0xbd8
   23958:	add	r3, sp, #7232	; 0x1c40
   2395c:	add	r3, r3, #4
   23960:	ldr	r2, [r3]
   23964:	lsr	r3, r2, #1
   23968:	add	r2, sp, #7232	; 0x1c40
   2396c:	ldr	r2, [r2]
   23970:	orr	r2, r3, r2, lsl #31
   23974:	str	r2, [sp, #3036]	; 0xbdc
   23978:	add	r3, sp, #7232	; 0x1c40
   2397c:	ldr	r2, [r3]
   23980:	lsr	r3, r2, #8
   23984:	add	r2, sp, #7232	; 0x1c40
   23988:	add	r2, r2, #4
   2398c:	ldr	r2, [r2]
   23990:	orr	r2, r3, r2, lsl #24
   23994:	str	r2, [sp, #3040]	; 0xbe0
   23998:	add	r3, sp, #7232	; 0x1c40
   2399c:	add	r3, r3, #4
   239a0:	ldr	r2, [r3]
   239a4:	lsr	r3, r2, #8
   239a8:	add	r2, sp, #7232	; 0x1c40
   239ac:	ldr	r2, [r2]
   239b0:	orr	r2, r3, r2, lsl #24
   239b4:	str	r2, [sp, #3044]	; 0xbe4
   239b8:	add	r3, sp, #3024	; 0xbd0
   239bc:	add	r3, r3, #8
   239c0:	ldrd	r2, [r3]
   239c4:	add	r1, sp, #3040	; 0xbe0
   239c8:	ldrd	r8, [r1]
   239cc:	eor	r2, r2, r8
   239d0:	eor	r3, r3, r9
   239d4:	add	r1, sp, #7232	; 0x1c40
   239d8:	ldr	r1, [r1]
   239dc:	lsr	r1, r1, #7
   239e0:	add	r0, sp, #7232	; 0x1c40
   239e4:	add	r0, r0, #4
   239e8:	ldr	ip, [r0]
   239ec:	orr	r1, r1, ip, lsl #25
   239f0:	str	r1, [sp, #408]	; 0x198
   239f4:	lsr	r1, ip, #7
   239f8:	str	r1, [sp, #412]	; 0x19c
   239fc:	add	r1, sp, #408	; 0x198
   23a00:	ldrd	r8, [r1]
   23a04:	eor	r8, r8, r2
   23a08:	eor	r9, r9, r3
   23a0c:	mov	r2, r8
   23a10:	mov	r3, r9
   23a14:	add	r1, sp, #7168	; 0x1c00
   23a18:	add	r1, r1, #56	; 0x38
   23a1c:	ldrd	r8, [r1]
   23a20:	adds	r8, r8, r2
   23a24:	adc	r9, r9, r3
   23a28:	ldrd	r6, [sp, #96]	; 0x60
   23a2c:	adds	r6, r6, r8
   23a30:	adc	r7, r7, r9
   23a34:	mov	r2, r6
   23a38:	mov	r3, r7
   23a3c:	ldrd	r8, [sp, #104]	; 0x68
   23a40:	lsr	r1, r8, #19
   23a44:	orr	r1, r1, r9, lsl #13
   23a48:	str	r1, [sp, #3048]	; 0xbe8
   23a4c:	lsr	r1, r9, #19
   23a50:	orr	r1, r1, r8, lsl #13
   23a54:	str	r1, [sp, #3052]	; 0xbec
   23a58:	lsl	r1, r9, #3
   23a5c:	orr	r1, r1, r8, lsr #29
   23a60:	str	r1, [sp, #3060]	; 0xbf4
   23a64:	lsl	r1, r8, #3
   23a68:	orr	r1, r1, r9, lsr #29
   23a6c:	str	r1, [sp, #3056]	; 0xbf0
   23a70:	add	r1, sp, #3040	; 0xbe0
   23a74:	add	r1, r1, #8
   23a78:	ldrd	r6, [r1]
   23a7c:	add	r1, sp, #3056	; 0xbf0
   23a80:	ldrd	r0, [r1]
   23a84:	eor	r6, r6, r0
   23a88:	eor	r7, r7, r1
   23a8c:	mov	r1, r7
   23a90:	lsr	ip, r8, #6
   23a94:	orr	ip, ip, r9, lsl #26
   23a98:	str	ip, [sp, #416]	; 0x1a0
   23a9c:	lsr	ip, r9, #6
   23aa0:	str	ip, [sp, #420]	; 0x1a4
   23aa4:	add	ip, sp, #416	; 0x1a0
   23aa8:	ldrd	r8, [ip]
   23aac:	eor	r8, r8, r6
   23ab0:	eor	r9, r9, r1
   23ab4:	adds	r8, r2, r8
   23ab8:	adc	r9, r3, r9
   23abc:	ldrd	r6, [sp]
   23ac0:	ldrd	r2, [sp, #40]	; 0x28
   23ac4:	eor	r2, r2, r6
   23ac8:	eor	r3, r3, r7
   23acc:	mov	r0, r2
   23ad0:	mov	r1, r3
   23ad4:	ldrd	r2, [sp, #24]
   23ad8:	and	r2, r2, r0
   23adc:	and	r3, r3, r1
   23ae0:	mov	r0, r2
   23ae4:	mov	r1, r3
   23ae8:	strd	r6, [sp, #168]	; 0xa8
   23aec:	mov	r2, r6
   23af0:	mov	r3, r7
   23af4:	eor	r2, r2, r0
   23af8:	eor	r3, r3, r1
   23afc:	mov	r0, r2
   23b00:	mov	r1, r3
   23b04:	sub	r3, pc, #876	; 0x36c
   23b08:	ldrd	r2, [r3]
   23b0c:	strd	r8, [sp, #152]	; 0x98
   23b10:	adds	r8, r8, r2
   23b14:	adc	r9, r9, r3
   23b18:	mov	r2, r8
   23b1c:	mov	r3, r9
   23b20:	ldrd	r8, [sp, #32]
   23b24:	adds	r8, r8, r2
   23b28:	adc	r9, r9, r3
   23b2c:	adds	r0, r0, r8
   23b30:	adc	r1, r1, r9
   23b34:	ldrd	r8, [sp, #24]
   23b38:	lsr	r3, r8, #14
   23b3c:	orr	r2, r3, r9, lsl #18
   23b40:	str	r2, [sp, #3064]	; 0xbf8
   23b44:	lsr	r3, r9, #14
   23b48:	orr	r2, r3, r8, lsl #18
   23b4c:	str	r2, [sp, #3068]	; 0xbfc
   23b50:	lsr	r3, r8, #18
   23b54:	orr	r2, r3, r9, lsl #14
   23b58:	str	r2, [sp, #3072]	; 0xc00
   23b5c:	lsr	r3, r9, #18
   23b60:	mov	r6, r8
   23b64:	mov	r7, r9
   23b68:	orr	r2, r3, r8, lsl #14
   23b6c:	str	r2, [sp, #3076]	; 0xc04
   23b70:	add	r3, sp, #3056	; 0xbf0
   23b74:	add	r3, r3, #8
   23b78:	ldrd	r2, [r3]
   23b7c:	add	ip, sp, #3072	; 0xc00
   23b80:	ldrd	r8, [ip]
   23b84:	eor	r2, r2, r8
   23b88:	eor	r3, r3, r9
   23b8c:	lsl	ip, r7, #23
   23b90:	orr	ip, ip, r6, lsr #9
   23b94:	str	ip, [sp, #3084]	; 0xc0c
   23b98:	lsl	ip, r6, #23
   23b9c:	orr	ip, ip, r7, lsr #9
   23ba0:	str	ip, [sp, #3080]	; 0xc08
   23ba4:	add	ip, sp, #3072	; 0xc00
   23ba8:	add	ip, ip, #8
   23bac:	ldrd	r8, [ip]
   23bb0:	eor	r8, r8, r2
   23bb4:	eor	r9, r9, r3
   23bb8:	adds	r8, r0, r8
   23bbc:	adc	r9, r1, r9
   23bc0:	mov	r2, r8
   23bc4:	mov	r3, r9
   23bc8:	ldrd	r8, [sp, #160]	; 0xa0
   23bcc:	strd	r2, [sp]
   23bd0:	adds	r8, r8, r2
   23bd4:	adc	r9, r9, r3
   23bd8:	strd	r8, [sp, #32]
   23bdc:	lsr	r3, r4, #28
   23be0:	orr	r1, r3, r5, lsl #4
   23be4:	str	r1, [sp, #3088]	; 0xc10
   23be8:	lsr	r3, r5, #28
   23bec:	orr	r1, r3, r4, lsl #4
   23bf0:	str	r1, [sp, #3092]	; 0xc14
   23bf4:	lsl	r3, r5, #30
   23bf8:	orr	r1, r3, r4, lsr #2
   23bfc:	str	r1, [sp, #3100]	; 0xc1c
   23c00:	lsl	r3, r4, #30
   23c04:	orr	r1, r3, r5, lsr #2
   23c08:	str	r1, [sp, #3096]	; 0xc18
   23c0c:	add	r3, sp, #3088	; 0xc10
   23c10:	ldrd	r2, [r3]
   23c14:	add	r1, sp, #3088	; 0xc10
   23c18:	add	r1, r1, #8
   23c1c:	ldrd	r8, [r1]
   23c20:	eor	r2, r2, r8
   23c24:	eor	r3, r3, r9
   23c28:	lsl	r1, r5, #25
   23c2c:	orr	r1, r1, r4, lsr #7
   23c30:	str	r1, [sp, #3108]	; 0xc24
   23c34:	lsl	r1, r4, #25
   23c38:	orr	r1, r1, r5, lsr #7
   23c3c:	str	r1, [sp, #3104]	; 0xc20
   23c40:	add	r1, sp, #3104	; 0xc20
   23c44:	ldrd	r8, [r1]
   23c48:	eor	r8, r8, r2
   23c4c:	eor	r9, r9, r3
   23c50:	mov	r2, r8
   23c54:	mov	r3, r9
   23c58:	ldrd	r6, [sp, #136]	; 0x88
   23c5c:	orr	r8, r6, r4
   23c60:	orr	r9, r7, r5
   23c64:	strd	sl, [sp, #160]	; 0xa0
   23c68:	and	sl, sl, r8
   23c6c:	and	fp, fp, r9
   23c70:	mov	r8, r6
   23c74:	mov	r9, r7
   23c78:	and	r8, r8, r4
   23c7c:	and	r9, r9, r5
   23c80:	orr	r8, r8, sl
   23c84:	orr	r9, r9, fp
   23c88:	adds	r0, r8, r2
   23c8c:	adc	r1, r9, r3
   23c90:	ldrd	r2, [sp]
   23c94:	adds	r2, r2, r0
   23c98:	adc	r3, r3, r1
   23c9c:	strd	r2, [sp]
   23ca0:	add	r3, sp, #7232	; 0x1c40
   23ca4:	add	r3, r3, #8
   23ca8:	ldr	r1, [r3]
   23cac:	lsr	r3, r1, #1
   23cb0:	add	r2, sp, #7232	; 0x1c40
   23cb4:	add	r2, r2, #12
   23cb8:	ldr	r1, [r2]
   23cbc:	orr	r1, r3, r1, lsl #31
   23cc0:	str	r1, [sp, #3112]	; 0xc28
   23cc4:	ldr	r1, [r2]
   23cc8:	lsr	r3, r1, #1
   23ccc:	add	r2, sp, #7232	; 0x1c40
   23cd0:	add	r2, r2, #8
   23cd4:	ldr	r1, [r2]
   23cd8:	orr	r1, r3, r1, lsl #31
   23cdc:	str	r1, [sp, #3116]	; 0xc2c
   23ce0:	ldr	r1, [r2]
   23ce4:	lsr	r3, r1, #8
   23ce8:	add	r2, sp, #7232	; 0x1c40
   23cec:	add	r2, r2, #12
   23cf0:	ldr	r1, [r2]
   23cf4:	orr	r1, r3, r1, lsl #24
   23cf8:	str	r1, [sp, #3120]	; 0xc30
   23cfc:	ldr	r1, [r2]
   23d00:	lsr	r3, r1, #8
   23d04:	add	r2, sp, #7232	; 0x1c40
   23d08:	add	r2, r2, #8
   23d0c:	ldr	r1, [r2]
   23d10:	orr	r1, r3, r1, lsl #24
   23d14:	str	r1, [sp, #3124]	; 0xc34
   23d18:	add	r3, sp, #3104	; 0xc20
   23d1c:	add	r3, r3, #8
   23d20:	ldrd	r2, [r3]
   23d24:	add	r1, sp, #3120	; 0xc30
   23d28:	ldrd	r8, [r1]
   23d2c:	eor	r2, r2, r8
   23d30:	eor	r3, r3, r9
   23d34:	add	r1, sp, #7232	; 0x1c40
   23d38:	add	r1, r1, #8
   23d3c:	ldr	r1, [r1]
   23d40:	lsr	r1, r1, #7
   23d44:	add	r0, sp, #7232	; 0x1c40
   23d48:	add	r0, r0, #12
   23d4c:	ldr	ip, [r0]
   23d50:	orr	r1, r1, ip, lsl #25
   23d54:	str	r1, [sp, #424]	; 0x1a8
   23d58:	lsr	r1, ip, #7
   23d5c:	str	r1, [sp, #428]	; 0x1ac
   23d60:	add	r1, sp, #424	; 0x1a8
   23d64:	ldrd	r8, [r1]
   23d68:	eor	r8, r8, r2
   23d6c:	eor	r9, r9, r3
   23d70:	mov	r2, r8
   23d74:	mov	r3, r9
   23d78:	add	r1, sp, #7232	; 0x1c40
   23d7c:	ldrd	r8, [r1]
   23d80:	adds	r8, r8, r2
   23d84:	adc	r9, r9, r3
   23d88:	ldrd	sl, [sp, #112]	; 0x70
   23d8c:	adds	sl, sl, r8
   23d90:	adc	fp, fp, r9
   23d94:	mov	r2, sl
   23d98:	mov	r3, fp
   23d9c:	ldrd	sl, [sp, #144]	; 0x90
   23da0:	lsr	r1, sl, #19
   23da4:	orr	r1, r1, fp, lsl #13
   23da8:	str	r1, [sp, #3128]	; 0xc38
   23dac:	lsr	r1, fp, #19
   23db0:	orr	r1, r1, sl, lsl #13
   23db4:	str	r1, [sp, #3132]	; 0xc3c
   23db8:	lsl	r1, fp, #3
   23dbc:	orr	r1, r1, sl, lsr #29
   23dc0:	str	r1, [sp, #3140]	; 0xc44
   23dc4:	lsl	r1, sl, #3
   23dc8:	orr	r1, r1, fp, lsr #29
   23dcc:	str	r1, [sp, #3136]	; 0xc40
   23dd0:	add	r1, sp, #3120	; 0xc30
   23dd4:	add	r1, r1, #8
   23dd8:	ldrd	r8, [r1]
   23ddc:	add	r1, sp, #3136	; 0xc40
   23de0:	ldrd	r0, [r1]
   23de4:	eor	r8, r8, r0
   23de8:	eor	r9, r9, r1
   23dec:	mov	r0, r8
   23df0:	mov	r1, r9
   23df4:	lsr	ip, sl, #6
   23df8:	orr	ip, ip, fp, lsl #26
   23dfc:	str	ip, [sp, #432]	; 0x1b0
   23e00:	lsr	ip, fp, #6
   23e04:	str	ip, [sp, #436]	; 0x1b4
   23e08:	add	ip, sp, #432	; 0x1b0
   23e0c:	ldrd	r8, [ip]
   23e10:	eor	r8, r8, r0
   23e14:	eor	r9, r9, r1
   23e18:	adds	sl, r2, r8
   23e1c:	adc	fp, r3, r9
   23e20:	ldrd	r2, [sp, #40]	; 0x28
   23e24:	mov	r0, r2
   23e28:	mov	r1, r3
   23e2c:	ldrd	r8, [sp, #24]
   23e30:	eor	r0, r0, r8
   23e34:	eor	r1, r1, r9
   23e38:	ldrd	r8, [sp, #32]
   23e3c:	and	r8, r8, r0
   23e40:	and	r9, r9, r1
   23e44:	eor	r2, r2, r8
   23e48:	eor	r3, r3, r9
   23e4c:	mov	r0, r2
   23e50:	mov	r1, r3
   23e54:	add	r3, pc, #876	; 0x36c
   23e58:	ldrd	r2, [r3]
   23e5c:	strd	sl, [sp, #16]
   23e60:	adds	sl, sl, r2
   23e64:	adc	fp, fp, r3
   23e68:	ldrd	r6, [sp, #168]	; 0xa8
   23e6c:	adds	r6, r6, sl
   23e70:	adc	r7, r7, fp
   23e74:	adds	r0, r0, r6
   23e78:	adc	r1, r1, r7
   23e7c:	ldrd	r6, [sp, #32]
   23e80:	lsr	r3, r6, #14
   23e84:	orr	ip, r3, r7, lsl #18
   23e88:	str	ip, [sp, #3144]	; 0xc48
   23e8c:	lsr	r3, r7, #14
   23e90:	orr	ip, r3, r6, lsl #18
   23e94:	str	ip, [sp, #3148]	; 0xc4c
   23e98:	lsr	r3, r6, #18
   23e9c:	orr	ip, r3, r7, lsl #14
   23ea0:	str	ip, [sp, #3152]	; 0xc50
   23ea4:	lsr	r3, r7, #18
   23ea8:	orr	ip, r3, r6, lsl #14
   23eac:	str	ip, [sp, #3156]	; 0xc54
   23eb0:	add	r3, sp, #3136	; 0xc40
   23eb4:	add	r3, r3, #8
   23eb8:	ldrd	r2, [r3]
   23ebc:	add	ip, sp, #3152	; 0xc50
   23ec0:	ldrd	r8, [ip]
   23ec4:	eor	r2, r2, r8
   23ec8:	eor	r3, r3, r9
   23ecc:	lsl	ip, r7, #23
   23ed0:	orr	ip, ip, r6, lsr #9
   23ed4:	str	ip, [sp, #3164]	; 0xc5c
   23ed8:	lsl	ip, r6, #23
   23edc:	orr	ip, ip, r7, lsr #9
   23ee0:	str	ip, [sp, #3160]	; 0xc58
   23ee4:	add	ip, sp, #3152	; 0xc50
   23ee8:	add	ip, ip, #8
   23eec:	ldrd	r8, [ip]
   23ef0:	eor	r8, r8, r2
   23ef4:	eor	r9, r9, r3
   23ef8:	adds	r6, r0, r8
   23efc:	adc	r7, r1, r9
   23f00:	ldrd	sl, [sp, #160]	; 0xa0
   23f04:	adds	sl, sl, r6
   23f08:	adc	fp, fp, r7
   23f0c:	ldrd	r0, [sp]
   23f10:	lsr	r3, r0, #28
   23f14:	orr	r2, r3, r1, lsl #4
   23f18:	str	r2, [sp, #3168]	; 0xc60
   23f1c:	lsr	r3, r1, #28
   23f20:	orr	r2, r3, r0, lsl #4
   23f24:	str	r2, [sp, #3172]	; 0xc64
   23f28:	lsl	r3, r1, #30
   23f2c:	orr	r2, r3, r0, lsr #2
   23f30:	str	r2, [sp, #3180]	; 0xc6c
   23f34:	lsl	r3, r0, #30
   23f38:	orr	r2, r3, r1, lsr #2
   23f3c:	str	r2, [sp, #3176]	; 0xc68
   23f40:	add	r3, sp, #3168	; 0xc60
   23f44:	ldrd	r2, [r3]
   23f48:	add	ip, sp, #3168	; 0xc60
   23f4c:	add	ip, ip, #8
   23f50:	ldrd	r8, [ip]
   23f54:	eor	r2, r2, r8
   23f58:	eor	r3, r3, r9
   23f5c:	mov	r8, r0
   23f60:	mov	r9, r1
   23f64:	lsl	r1, r1, #25
   23f68:	orr	r1, r1, r8, lsr #7
   23f6c:	str	r1, [sp, #3188]	; 0xc74
   23f70:	lsl	r1, r8, #25
   23f74:	orr	r1, r1, r9, lsr #7
   23f78:	str	r1, [sp, #3184]	; 0xc70
   23f7c:	add	r1, sp, #3184	; 0xc70
   23f80:	ldrd	r8, [r1]
   23f84:	eor	r8, r8, r2
   23f88:	eor	r9, r9, r3
   23f8c:	strd	r8, [sp, #160]	; 0xa0
   23f90:	ldrd	r2, [sp]
   23f94:	orr	r0, r2, r4
   23f98:	orr	r1, r3, r5
   23f9c:	ldrd	r8, [sp, #136]	; 0x88
   23fa0:	and	r8, r8, r0
   23fa4:	and	r9, r9, r1
   23fa8:	and	r2, r2, r4
   23fac:	and	r3, r3, r5
   23fb0:	orr	r2, r2, r8
   23fb4:	orr	r3, r3, r9
   23fb8:	ldrd	r8, [sp, #160]	; 0xa0
   23fbc:	adds	r8, r8, r2
   23fc0:	adc	r9, r9, r3
   23fc4:	adds	r6, r6, r8
   23fc8:	adc	r7, r7, r9
   23fcc:	strd	r6, [sp, #192]	; 0xc0
   23fd0:	ldrd	r0, [sp, #48]	; 0x30
   23fd4:	lsr	r3, r0, #1
   23fd8:	orr	ip, r3, r1, lsl #31
   23fdc:	str	ip, [sp, #3192]	; 0xc78
   23fe0:	lsr	r3, r1, #1
   23fe4:	orr	ip, r3, r0, lsl #31
   23fe8:	str	ip, [sp, #3196]	; 0xc7c
   23fec:	lsr	r3, r0, #8
   23ff0:	orr	ip, r3, r1, lsl #24
   23ff4:	str	ip, [sp, #3200]	; 0xc80
   23ff8:	lsr	r3, r1, #8
   23ffc:	orr	ip, r3, r0, lsl #24
   24000:	str	ip, [sp, #3204]	; 0xc84
   24004:	add	r3, sp, #3184	; 0xc70
   24008:	add	r3, r3, #8
   2400c:	ldrd	r2, [r3]
   24010:	add	ip, sp, #3200	; 0xc80
   24014:	ldrd	r8, [ip]
   24018:	eor	r2, r2, r8
   2401c:	eor	r3, r3, r9
   24020:	lsr	ip, r0, #7
   24024:	orr	ip, ip, r1, lsl #25
   24028:	str	ip, [sp, #440]	; 0x1b8
   2402c:	lsr	r1, r1, #7
   24030:	str	r1, [sp, #444]	; 0x1bc
   24034:	add	r1, sp, #440	; 0x1b8
   24038:	ldrd	r8, [r1]
   2403c:	eor	r8, r8, r2
   24040:	eor	r9, r9, r3
   24044:	mov	r2, r8
   24048:	mov	r3, r9
   2404c:	add	r1, sp, #7232	; 0x1c40
   24050:	add	r1, r1, #8
   24054:	ldrd	r8, [r1]
   24058:	adds	r8, r8, r2
   2405c:	adc	r9, r9, r3
   24060:	ldrd	r6, [sp, #120]	; 0x78
   24064:	adds	r6, r6, r8
   24068:	adc	r7, r7, r9
   2406c:	mov	r2, r6
   24070:	mov	r3, r7
   24074:	ldrd	r6, [sp, #152]	; 0x98
   24078:	lsr	r1, r6, #19
   2407c:	orr	r1, r1, r7, lsl #13
   24080:	str	r1, [sp, #3208]	; 0xc88
   24084:	lsr	r1, r7, #19
   24088:	orr	r1, r1, r6, lsl #13
   2408c:	str	r1, [sp, #3212]	; 0xc8c
   24090:	lsl	r1, r7, #3
   24094:	orr	r1, r1, r6, lsr #29
   24098:	str	r1, [sp, #3220]	; 0xc94
   2409c:	lsl	r1, r6, #3
   240a0:	orr	r1, r1, r7, lsr #29
   240a4:	str	r1, [sp, #3216]	; 0xc90
   240a8:	add	r1, sp, #3200	; 0xc80
   240ac:	add	r1, r1, #8
   240b0:	ldrd	r8, [r1]
   240b4:	add	r1, sp, #3216	; 0xc90
   240b8:	ldrd	r0, [r1]
   240bc:	eor	r8, r8, r0
   240c0:	eor	r9, r9, r1
   240c4:	mov	r0, r8
   240c8:	mov	r1, r9
   240cc:	lsr	ip, r6, #6
   240d0:	orr	ip, ip, r7, lsl #26
   240d4:	str	ip, [sp, #448]	; 0x1c0
   240d8:	lsr	ip, r7, #6
   240dc:	str	ip, [sp, #452]	; 0x1c4
   240e0:	add	ip, sp, #448	; 0x1c0
   240e4:	ldrd	r8, [ip]
   240e8:	eor	r8, r8, r0
   240ec:	eor	r9, r9, r1
   240f0:	adds	r6, r2, r8
   240f4:	adc	r7, r3, r9
   240f8:	mov	r8, r6
   240fc:	mov	r9, r7
   24100:	ldrd	r0, [sp, #24]
   24104:	ldrd	r6, [sp, #32]
   24108:	eor	r0, r0, r6
   2410c:	eor	r1, r1, r7
   24110:	mov	r6, sl
   24114:	mov	r7, fp
   24118:	mov	r2, sl
   2411c:	mov	r3, fp
   24120:	and	r2, r2, r0
   24124:	and	r3, r3, r1
   24128:	ldrd	sl, [sp, #24]
   2412c:	eor	sl, sl, r2
   24130:	eor	fp, fp, r3
   24134:	mov	r0, sl
   24138:	mov	r1, fp
   2413c:	add	r3, pc, #140	; 0x8c
   24140:	ldrd	r2, [r3]
   24144:	strd	r8, [sp, #160]	; 0xa0
   24148:	adds	sl, r8, r2
   2414c:	adc	fp, r9, r3
   24150:	mov	r2, sl
   24154:	mov	r3, fp
   24158:	ldrd	sl, [sp, #40]	; 0x28
   2415c:	adds	sl, sl, r2
   24160:	adc	fp, fp, r3
   24164:	adds	r0, r0, sl
   24168:	adc	r1, r1, fp
   2416c:	lsr	r3, r6, #14
   24170:	orr	ip, r3, r7, lsl #18
   24174:	str	ip, [sp, #3224]	; 0xc98
   24178:	lsr	r3, r7, #14
   2417c:	orr	ip, r3, r6, lsl #18
   24180:	str	ip, [sp, #3228]	; 0xc9c
   24184:	lsr	r3, r6, #18
   24188:	orr	ip, r3, r7, lsl #14
   2418c:	str	ip, [sp, #3232]	; 0xca0
   24190:	lsr	r3, r7, #18
   24194:	orr	ip, r3, r6, lsl #14
   24198:	str	ip, [sp, #3236]	; 0xca4
   2419c:	add	r3, sp, #3216	; 0xc90
   241a0:	add	r3, r3, #8
   241a4:	ldrd	r2, [r3]
   241a8:	add	ip, sp, #3232	; 0xca0
   241ac:	ldrd	r8, [ip]
   241b0:	eor	r2, r2, r8
   241b4:	eor	r3, r3, r9
   241b8:	lsl	ip, r7, #23
   241bc:	orr	ip, ip, r6, lsr #9
   241c0:	str	ip, [sp, #3244]	; 0xcac
   241c4:	b	241e0 <__assert_fail@plt+0x12ef4>
   241c8:	and	r8, r3, pc, ror #4
   241cc:			; <UNDEFINED> instruction: 0x06ca6351
   241d0:	beq	3bfb98 <optarg@@GLIBC_2.4+0x3759f0>
   241d4:	strtne	r2, [r9], #-2407	; 0xfffff699
   241d8:			; <UNDEFINED> instruction: 0x46d22ffc
   241dc:	ldrcs	r0, [r7, r5, lsl #21]!
   241e0:	lsl	ip, r6, #23
   241e4:	orr	ip, ip, r7, lsr #9
   241e8:	str	ip, [sp, #3240]	; 0xca8
   241ec:	add	ip, sp, #3232	; 0xca0
   241f0:	add	ip, ip, #8
   241f4:	ldrd	r8, [ip]
   241f8:	eor	r8, r8, r2
   241fc:	eor	r9, r9, r3
   24200:	adds	r8, r0, r8
   24204:	adc	r9, r1, r9
   24208:	mov	r2, r8
   2420c:	mov	r3, r9
   24210:	ldrd	r8, [sp, #136]	; 0x88
   24214:	strd	r2, [sp, #136]	; 0x88
   24218:	adds	r8, r8, r2
   2421c:	adc	r9, r9, r3
   24220:	strd	r8, [sp, #40]	; 0x28
   24224:	ldrd	sl, [sp, #192]	; 0xc0
   24228:	lsr	r3, sl, #28
   2422c:	orr	r1, r3, fp, lsl #4
   24230:	str	r1, [sp, #3248]	; 0xcb0
   24234:	lsr	r3, fp, #28
   24238:	orr	r1, r3, sl, lsl #4
   2423c:	str	r1, [sp, #3252]	; 0xcb4
   24240:	lsl	r3, fp, #30
   24244:	orr	r1, r3, sl, lsr #2
   24248:	str	r1, [sp, #3260]	; 0xcbc
   2424c:	lsl	r3, sl, #30
   24250:	orr	r1, r3, fp, lsr #2
   24254:	str	r1, [sp, #3256]	; 0xcb8
   24258:	add	r3, sp, #3248	; 0xcb0
   2425c:	ldrd	r8, [r3]
   24260:	add	r3, sp, #3248	; 0xcb0
   24264:	add	r3, r3, #8
   24268:	ldrd	r2, [r3]
   2426c:	eor	r8, r8, r2
   24270:	eor	r9, r9, r3
   24274:	mov	r2, r8
   24278:	mov	r3, r9
   2427c:	lsl	r1, fp, #25
   24280:	orr	r1, r1, sl, lsr #7
   24284:	str	r1, [sp, #3268]	; 0xcc4
   24288:	lsl	r1, sl, #25
   2428c:	orr	r1, r1, fp, lsr #7
   24290:	str	r1, [sp, #3264]	; 0xcc0
   24294:	add	r1, sp, #3264	; 0xcc0
   24298:	ldrd	r8, [r1]
   2429c:	eor	r8, r8, r2
   242a0:	eor	r9, r9, r3
   242a4:	strd	r8, [sp, #168]	; 0xa8
   242a8:	ldrd	r8, [sp]
   242ac:	orr	r2, r8, sl
   242b0:	orr	r3, r9, fp
   242b4:	mov	r0, r2
   242b8:	mov	r1, r3
   242bc:	and	r0, r0, r4
   242c0:	and	r1, r1, r5
   242c4:	mov	r2, r8
   242c8:	mov	r3, r9
   242cc:	and	r2, r2, sl
   242d0:	and	r3, r3, fp
   242d4:	orr	r2, r2, r0
   242d8:	orr	r3, r3, r1
   242dc:	mov	r0, r2
   242e0:	mov	r1, r3
   242e4:	ldrd	r2, [sp, #168]	; 0xa8
   242e8:	adds	r2, r2, r0
   242ec:	adc	r3, r3, r1
   242f0:	ldrd	r8, [sp, #136]	; 0x88
   242f4:	adds	r8, r8, r2
   242f8:	adc	r9, r9, r3
   242fc:	strd	r8, [sp, #136]	; 0x88
   24300:	ldrd	r0, [sp, #56]	; 0x38
   24304:	lsr	r3, r0, #1
   24308:	orr	ip, r3, r1, lsl #31
   2430c:	str	ip, [sp, #3272]	; 0xcc8
   24310:	lsr	r3, r1, #1
   24314:	orr	ip, r3, r0, lsl #31
   24318:	str	ip, [sp, #3276]	; 0xccc
   2431c:	lsr	r3, r0, #8
   24320:	orr	ip, r3, r1, lsl #24
   24324:	str	ip, [sp, #3280]	; 0xcd0
   24328:	lsr	r3, r1, #8
   2432c:	orr	ip, r3, r0, lsl #24
   24330:	str	ip, [sp, #3284]	; 0xcd4
   24334:	add	r3, sp, #3264	; 0xcc0
   24338:	add	r3, r3, #8
   2433c:	ldrd	r2, [r3]
   24340:	add	ip, sp, #3280	; 0xcd0
   24344:	ldrd	r8, [ip]
   24348:	eor	r2, r2, r8
   2434c:	eor	r3, r3, r9
   24350:	lsr	ip, r0, #7
   24354:	orr	ip, ip, r1, lsl #25
   24358:	str	ip, [sp, #456]	; 0x1c8
   2435c:	lsr	r1, r1, #7
   24360:	str	r1, [sp, #460]	; 0x1cc
   24364:	add	r1, sp, #456	; 0x1c8
   24368:	ldrd	r8, [r1]
   2436c:	eor	r8, r8, r2
   24370:	eor	r9, r9, r3
   24374:	ldrd	r0, [sp, #48]	; 0x30
   24378:	adds	r0, r0, r8
   2437c:	adc	r1, r1, r9
   24380:	mov	r2, r0
   24384:	mov	r3, r1
   24388:	ldrd	r0, [sp, #8]
   2438c:	adds	r0, r0, r2
   24390:	adc	r1, r1, r3
   24394:	mov	r2, r0
   24398:	mov	r3, r1
   2439c:	ldrd	r8, [sp, #16]
   243a0:	lsr	r1, r8, #19
   243a4:	orr	r1, r1, r9, lsl #13
   243a8:	str	r1, [sp, #3288]	; 0xcd8
   243ac:	lsr	r1, r9, #19
   243b0:	orr	r1, r1, r8, lsl #13
   243b4:	str	r1, [sp, #3292]	; 0xcdc
   243b8:	lsl	r1, r9, #3
   243bc:	orr	r1, r1, r8, lsr #29
   243c0:	str	r1, [sp, #3300]	; 0xce4
   243c4:	lsl	r1, r8, #3
   243c8:	orr	r1, r1, r9, lsr #29
   243cc:	str	r1, [sp, #3296]	; 0xce0
   243d0:	add	r1, sp, #3280	; 0xcd0
   243d4:	add	r1, r1, #8
   243d8:	ldrd	r8, [r1]
   243dc:	add	r1, sp, #3296	; 0xce0
   243e0:	ldrd	r0, [r1]
   243e4:	eor	r8, r8, r0
   243e8:	eor	r9, r9, r1
   243ec:	mov	r0, r8
   243f0:	mov	r1, r9
   243f4:	ldrd	r8, [sp, #16]
   243f8:	lsr	ip, r8, #6
   243fc:	orr	ip, ip, r9, lsl #26
   24400:	str	ip, [sp, #464]	; 0x1d0
   24404:	ldr	ip, [sp, #20]
   24408:	lsr	ip, ip, #6
   2440c:	str	ip, [sp, #468]	; 0x1d4
   24410:	add	ip, sp, #464	; 0x1d0
   24414:	ldrd	r8, [ip]
   24418:	eor	r8, r8, r0
   2441c:	eor	r9, r9, r1
   24420:	adds	r8, r2, r8
   24424:	adc	r9, r3, r9
   24428:	strd	r6, [sp, #176]	; 0xb0
   2442c:	mov	r0, r6
   24430:	mov	r1, r7
   24434:	ldrd	r6, [sp, #32]
   24438:	eor	r6, r6, r0
   2443c:	eor	r7, r7, r1
   24440:	ldrd	r2, [sp, #40]	; 0x28
   24444:	and	r2, r2, r6
   24448:	and	r3, r3, r7
   2444c:	ldrd	r6, [sp, #32]
   24450:	eor	r6, r6, r2
   24454:	eor	r7, r7, r3
   24458:	mov	r0, r6
   2445c:	mov	r1, r7
   24460:	sub	r3, pc, #656	; 0x290
   24464:	ldrd	r2, [r3]
   24468:	strd	r8, [sp, #168]	; 0xa8
   2446c:	adds	r8, r8, r2
   24470:	adc	r9, r9, r3
   24474:	ldrd	r6, [sp, #24]
   24478:	adds	r6, r6, r8
   2447c:	adc	r7, r7, r9
   24480:	adds	r0, r0, r6
   24484:	adc	r1, r1, r7
   24488:	ldrd	r8, [sp, #40]	; 0x28
   2448c:	lsr	r3, r8, #14
   24490:	orr	ip, r3, r9, lsl #18
   24494:	str	ip, [sp, #3304]	; 0xce8
   24498:	lsr	r3, r9, #14
   2449c:	orr	ip, r3, r8, lsl #18
   244a0:	str	ip, [sp, #3308]	; 0xcec
   244a4:	lsr	r3, r8, #18
   244a8:	orr	ip, r3, r9, lsl #14
   244ac:	str	ip, [sp, #3312]	; 0xcf0
   244b0:	lsr	r3, r9, #18
   244b4:	orr	ip, r3, r8, lsl #14
   244b8:	str	ip, [sp, #3316]	; 0xcf4
   244bc:	add	r3, sp, #3296	; 0xce0
   244c0:	add	r3, r3, #8
   244c4:	ldrd	r2, [r3]
   244c8:	add	ip, sp, #3312	; 0xcf0
   244cc:	ldrd	r6, [ip]
   244d0:	eor	r2, r2, r6
   244d4:	eor	r3, r3, r7
   244d8:	lsl	ip, r9, #23
   244dc:	mov	r6, r8
   244e0:	mov	r7, r9
   244e4:	orr	ip, ip, r8, lsr #9
   244e8:	str	ip, [sp, #3324]	; 0xcfc
   244ec:	lsl	ip, r6, #23
   244f0:	orr	ip, ip, r7, lsr #9
   244f4:	str	ip, [sp, #3320]	; 0xcf8
   244f8:	add	ip, sp, #3312	; 0xcf0
   244fc:	add	ip, ip, #8
   24500:	ldrd	r6, [ip]
   24504:	eor	r6, r6, r2
   24508:	eor	r7, r7, r3
   2450c:	adds	r6, r0, r6
   24510:	adc	r7, r1, r7
   24514:	mov	r2, r6
   24518:	mov	r3, r7
   2451c:	strd	r2, [sp, #24]
   24520:	adds	r2, r6, r4
   24524:	adc	r3, r7, r5
   24528:	mov	r6, r2
   2452c:	mov	r7, r3
   24530:	ldrd	r8, [sp, #136]	; 0x88
   24534:	lsr	r3, r8, #28
   24538:	orr	r1, r3, r9, lsl #4
   2453c:	str	r1, [sp, #3328]	; 0xd00
   24540:	lsr	r3, r9, #28
   24544:	orr	r1, r3, r8, lsl #4
   24548:	str	r1, [sp, #3332]	; 0xd04
   2454c:	lsl	r3, r9, #30
   24550:	orr	r1, r3, r8, lsr #2
   24554:	str	r1, [sp, #3340]	; 0xd0c
   24558:	lsl	r3, r8, #30
   2455c:	orr	r1, r3, r9, lsr #2
   24560:	str	r1, [sp, #3336]	; 0xd08
   24564:	add	r3, sp, #3328	; 0xd00
   24568:	ldrd	r2, [r3]
   2456c:	add	r1, sp, #3328	; 0xd00
   24570:	add	r1, r1, #8
   24574:	ldrd	r4, [r1]
   24578:	eor	r2, r2, r4
   2457c:	eor	r3, r3, r5
   24580:	lsl	r1, r9, #25
   24584:	orr	r1, r1, r8, lsr #7
   24588:	str	r1, [sp, #3348]	; 0xd14
   2458c:	lsl	r1, r8, #25
   24590:	orr	r1, r1, r9, lsr #7
   24594:	str	r1, [sp, #3344]	; 0xd10
   24598:	add	r1, sp, #3344	; 0xd10
   2459c:	ldrd	r4, [r1]
   245a0:	eor	r4, r4, r2
   245a4:	eor	r5, r5, r3
   245a8:	mov	r2, r4
   245ac:	mov	r3, r5
   245b0:	mov	r4, sl
   245b4:	mov	r5, fp
   245b8:	orr	sl, sl, r8
   245bc:	orr	fp, fp, r9
   245c0:	mov	r0, sl
   245c4:	mov	r1, fp
   245c8:	ldrd	sl, [sp]
   245cc:	and	sl, sl, r0
   245d0:	and	fp, fp, r1
   245d4:	mov	r0, sl
   245d8:	mov	r1, fp
   245dc:	mov	sl, r4
   245e0:	mov	fp, r5
   245e4:	and	sl, sl, r8
   245e8:	and	fp, fp, r9
   245ec:	orr	r0, r0, sl
   245f0:	orr	r1, r1, fp
   245f4:	adds	r0, r0, r2
   245f8:	adc	r1, r1, r3
   245fc:	ldrd	r2, [sp, #24]
   24600:	adds	r2, r2, r0
   24604:	adc	r3, r3, r1
   24608:	strd	r2, [sp, #48]	; 0x30
   2460c:	ldrd	r4, [sp, #64]	; 0x40
   24610:	lsr	r3, r4, #1
   24614:	orr	r1, r3, r5, lsl #31
   24618:	str	r1, [sp, #3352]	; 0xd18
   2461c:	lsr	r3, r5, #1
   24620:	orr	r1, r3, r4, lsl #31
   24624:	str	r1, [sp, #3356]	; 0xd1c
   24628:	lsr	r3, r4, #8
   2462c:	orr	r1, r3, r5, lsl #24
   24630:	str	r1, [sp, #3360]	; 0xd20
   24634:	lsr	r3, r5, #8
   24638:	orr	r1, r3, r4, lsl #24
   2463c:	str	r1, [sp, #3364]	; 0xd24
   24640:	add	r3, sp, #3344	; 0xd10
   24644:	add	r3, r3, #8
   24648:	ldrd	r2, [r3]
   2464c:	add	r1, sp, #3360	; 0xd20
   24650:	ldrd	r8, [r1]
   24654:	eor	r2, r2, r8
   24658:	eor	r3, r3, r9
   2465c:	lsr	r1, r4, #7
   24660:	orr	r1, r1, r5, lsl #25
   24664:	str	r1, [sp, #472]	; 0x1d8
   24668:	lsr	r1, r5, #7
   2466c:	str	r1, [sp, #476]	; 0x1dc
   24670:	add	r1, sp, #472	; 0x1d8
   24674:	ldrd	r8, [r1]
   24678:	eor	r8, r8, r2
   2467c:	eor	r9, r9, r3
   24680:	ldrd	r0, [sp, #56]	; 0x38
   24684:	adds	r0, r0, r8
   24688:	adc	r1, r1, r9
   2468c:	ldrd	sl, [sp, #128]	; 0x80
   24690:	adds	sl, sl, r0
   24694:	adc	fp, fp, r1
   24698:	ldrd	r4, [sp, #160]	; 0xa0
   2469c:	lsr	r1, r4, #19
   246a0:	orr	r1, r1, r5, lsl #13
   246a4:	str	r1, [sp, #3368]	; 0xd28
   246a8:	lsr	r1, r5, #19
   246ac:	orr	r1, r1, r4, lsl #13
   246b0:	str	r1, [sp, #3372]	; 0xd2c
   246b4:	lsl	r1, r5, #3
   246b8:	orr	r1, r1, r4, lsr #29
   246bc:	str	r1, [sp, #3380]	; 0xd34
   246c0:	lsl	r1, r4, #3
   246c4:	orr	r1, r1, r5, lsr #29
   246c8:	str	r1, [sp, #3376]	; 0xd30
   246cc:	add	r1, sp, #3360	; 0xd20
   246d0:	add	r1, r1, #8
   246d4:	ldrd	r8, [r1]
   246d8:	add	r1, sp, #3376	; 0xd30
   246dc:	ldrd	r0, [r1]
   246e0:	eor	r8, r8, r0
   246e4:	eor	r9, r9, r1
   246e8:	mov	r0, r8
   246ec:	mov	r1, r9
   246f0:	lsr	ip, r4, #6
   246f4:	orr	ip, ip, r5, lsl #26
   246f8:	str	ip, [sp, #480]	; 0x1e0
   246fc:	lsr	ip, r5, #6
   24700:	str	ip, [sp, #484]	; 0x1e4
   24704:	add	ip, sp, #480	; 0x1e0
   24708:	ldrd	r8, [ip]
   2470c:	eor	r8, r8, r0
   24710:	eor	r9, r9, r1
   24714:	adds	r8, sl, r8
   24718:	adc	r9, fp, r9
   2471c:	ldrd	r4, [sp, #176]	; 0xb0
   24720:	ldrd	r2, [sp, #40]	; 0x28
   24724:	eor	r2, r2, r4
   24728:	eor	r3, r3, r5
   2472c:	mov	r0, r2
   24730:	mov	r1, r3
   24734:	and	r0, r0, r6
   24738:	and	r1, r1, r7
   2473c:	mov	r2, r4
   24740:	mov	r3, r5
   24744:	eor	r2, r2, r0
   24748:	eor	r3, r3, r1
   2474c:	mov	r0, r2
   24750:	mov	r1, r3
   24754:	add	r3, pc, #876	; 0x36c
   24758:	ldrd	r2, [r3]
   2475c:	strd	r8, [sp, #176]	; 0xb0
   24760:	adds	r8, r8, r2
   24764:	adc	r9, r9, r3
   24768:	mov	r2, r8
   2476c:	mov	r3, r9
   24770:	ldrd	r8, [sp, #32]
   24774:	adds	r8, r8, r2
   24778:	adc	r9, r9, r3
   2477c:	adds	r0, r0, r8
   24780:	adc	r1, r1, r9
   24784:	lsr	r3, r6, #14
   24788:	orr	ip, r3, r7, lsl #18
   2478c:	str	ip, [sp, #3384]	; 0xd38
   24790:	lsr	r3, r7, #14
   24794:	orr	ip, r3, r6, lsl #18
   24798:	str	ip, [sp, #3388]	; 0xd3c
   2479c:	lsr	r3, r6, #18
   247a0:	orr	ip, r3, r7, lsl #14
   247a4:	str	ip, [sp, #3392]	; 0xd40
   247a8:	lsr	r3, r7, #18
   247ac:	orr	ip, r3, r6, lsl #14
   247b0:	str	ip, [sp, #3396]	; 0xd44
   247b4:	add	r3, sp, #3376	; 0xd30
   247b8:	add	r3, r3, #8
   247bc:	ldrd	r2, [r3]
   247c0:	add	ip, sp, #3392	; 0xd40
   247c4:	ldrd	r8, [ip]
   247c8:	eor	r2, r2, r8
   247cc:	eor	r3, r3, r9
   247d0:	lsl	ip, r7, #23
   247d4:	orr	ip, ip, r6, lsr #9
   247d8:	str	ip, [sp, #3404]	; 0xd4c
   247dc:	lsl	ip, r6, #23
   247e0:	orr	ip, ip, r7, lsr #9
   247e4:	str	ip, [sp, #3400]	; 0xd48
   247e8:	add	ip, sp, #3392	; 0xd40
   247ec:	add	ip, ip, #8
   247f0:	ldrd	r8, [ip]
   247f4:	eor	r8, r8, r2
   247f8:	eor	r9, r9, r3
   247fc:	adds	r8, r0, r8
   24800:	adc	r9, r1, r9
   24804:	ldrd	r2, [sp]
   24808:	strd	r8, [sp]
   2480c:	adds	r2, r2, r8
   24810:	adc	r3, r3, r9
   24814:	strd	r2, [sp, #184]	; 0xb8
   24818:	ldrd	sl, [sp, #48]	; 0x30
   2481c:	lsr	r3, sl, #28
   24820:	orr	r1, r3, fp, lsl #4
   24824:	str	r1, [sp, #3408]	; 0xd50
   24828:	lsr	r3, fp, #28
   2482c:	orr	r1, r3, sl, lsl #4
   24830:	str	r1, [sp, #3412]	; 0xd54
   24834:	lsl	r3, fp, #30
   24838:	orr	r1, r3, sl, lsr #2
   2483c:	str	r1, [sp, #3420]	; 0xd5c
   24840:	lsl	r3, sl, #30
   24844:	orr	r1, r3, fp, lsr #2
   24848:	str	r1, [sp, #3416]	; 0xd58
   2484c:	add	r3, sp, #3408	; 0xd50
   24850:	ldrd	r2, [r3]
   24854:	add	r1, sp, #3408	; 0xd50
   24858:	add	r1, r1, #8
   2485c:	ldrd	r8, [r1]
   24860:	eor	r2, r2, r8
   24864:	eor	r3, r3, r9
   24868:	lsl	r1, fp, #25
   2486c:	orr	r1, r1, sl, lsr #7
   24870:	str	r1, [sp, #3428]	; 0xd64
   24874:	lsl	r1, sl, #25
   24878:	orr	r1, r1, fp, lsr #7
   2487c:	str	r1, [sp, #3424]	; 0xd60
   24880:	add	r1, sp, #3424	; 0xd60
   24884:	ldrd	r8, [r1]
   24888:	eor	r8, r8, r2
   2488c:	eor	r9, r9, r3
   24890:	mov	r2, r8
   24894:	mov	r3, r9
   24898:	ldrd	r8, [sp, #136]	; 0x88
   2489c:	orr	r0, sl, r8
   248a0:	orr	r1, fp, r9
   248a4:	ldrd	sl, [sp, #192]	; 0xc0
   248a8:	and	sl, sl, r0
   248ac:	and	fp, fp, r1
   248b0:	mov	r0, sl
   248b4:	mov	r1, fp
   248b8:	ldrd	r8, [sp, #136]	; 0x88
   248bc:	ldrd	sl, [sp, #48]	; 0x30
   248c0:	and	sl, sl, r8
   248c4:	and	fp, fp, r9
   248c8:	orr	r8, sl, r0
   248cc:	orr	r9, fp, r1
   248d0:	adds	r0, r8, r2
   248d4:	adc	r1, r9, r3
   248d8:	ldrd	r2, [sp]
   248dc:	adds	r2, r2, r0
   248e0:	adc	r3, r3, r1
   248e4:	strd	r2, [sp, #32]
   248e8:	ldrd	r0, [sp, #72]	; 0x48
   248ec:	lsr	r3, r0, #1
   248f0:	orr	ip, r3, r1, lsl #31
   248f4:	str	ip, [sp, #3432]	; 0xd68
   248f8:	lsr	r3, r1, #1
   248fc:	orr	ip, r3, r0, lsl #31
   24900:	str	ip, [sp, #3436]	; 0xd6c
   24904:	lsr	r3, r0, #8
   24908:	orr	ip, r3, r1, lsl #24
   2490c:	str	ip, [sp, #3440]	; 0xd70
   24910:	lsr	r3, r1, #8
   24914:	orr	ip, r3, r0, lsl #24
   24918:	str	ip, [sp, #3444]	; 0xd74
   2491c:	add	r3, sp, #3424	; 0xd60
   24920:	add	r3, r3, #8
   24924:	ldrd	r2, [r3]
   24928:	add	ip, sp, #3440	; 0xd70
   2492c:	ldrd	r8, [ip]
   24930:	eor	r2, r2, r8
   24934:	eor	r3, r3, r9
   24938:	lsr	ip, r0, #7
   2493c:	orr	ip, ip, r1, lsl #25
   24940:	str	ip, [sp, #488]	; 0x1e8
   24944:	lsr	r1, r1, #7
   24948:	str	r1, [sp, #492]	; 0x1ec
   2494c:	add	r1, sp, #488	; 0x1e8
   24950:	ldrd	r8, [r1]
   24954:	eor	r8, r8, r2
   24958:	eor	r9, r9, r3
   2495c:	ldrd	r0, [sp, #64]	; 0x40
   24960:	adds	r0, r0, r8
   24964:	adc	r1, r1, r9
   24968:	mov	r2, r0
   2496c:	mov	r3, r1
   24970:	ldrd	r0, [sp, #104]	; 0x68
   24974:	adds	r0, r0, r2
   24978:	adc	r1, r1, r3
   2497c:	mov	r2, r0
   24980:	mov	r3, r1
   24984:	ldrd	sl, [sp, #168]	; 0xa8
   24988:	lsr	r1, sl, #19
   2498c:	orr	r1, r1, fp, lsl #13
   24990:	str	r1, [sp, #3448]	; 0xd78
   24994:	lsr	r1, fp, #19
   24998:	orr	r1, r1, sl, lsl #13
   2499c:	str	r1, [sp, #3452]	; 0xd7c
   249a0:	lsl	r1, fp, #3
   249a4:	orr	r1, r1, sl, lsr #29
   249a8:	str	r1, [sp, #3460]	; 0xd84
   249ac:	lsl	r1, sl, #3
   249b0:	orr	r1, r1, fp, lsr #29
   249b4:	str	r1, [sp, #3456]	; 0xd80
   249b8:	add	r1, sp, #3440	; 0xd70
   249bc:	add	r1, r1, #8
   249c0:	ldrd	r8, [r1]
   249c4:	add	r1, sp, #3456	; 0xd80
   249c8:	ldrd	r0, [r1]
   249cc:	eor	r8, r8, r0
   249d0:	eor	r9, r9, r1
   249d4:	mov	r0, r8
   249d8:	mov	r1, r9
   249dc:	lsr	ip, sl, #6
   249e0:	orr	ip, ip, fp, lsl #26
   249e4:	str	ip, [sp, #496]	; 0x1f0
   249e8:	lsr	ip, fp, #6
   249ec:	str	ip, [sp, #500]	; 0x1f4
   249f0:	add	ip, sp, #496	; 0x1f0
   249f4:	ldrd	r8, [ip]
   249f8:	eor	r8, r8, r0
   249fc:	eor	r9, r9, r1
   24a00:	adds	sl, r2, r8
   24a04:	adc	fp, r3, r9
   24a08:	ldrd	r0, [sp, #40]	; 0x28
   24a0c:	eor	r0, r0, r6
   24a10:	eor	r1, r1, r7
   24a14:	ldrd	r8, [sp, #184]	; 0xb8
   24a18:	mov	r2, r8
   24a1c:	mov	r3, r9
   24a20:	and	r2, r2, r0
   24a24:	and	r3, r3, r1
   24a28:	mov	r0, r2
   24a2c:	mov	r1, r3
   24a30:	ldrd	r2, [sp, #40]	; 0x28
   24a34:	eor	r2, r2, r0
   24a38:	eor	r3, r3, r1
   24a3c:	mov	r0, r2
   24a40:	mov	r1, r3
   24a44:	add	r3, pc, #132	; 0x84
   24a48:	ldrd	r2, [r3]
   24a4c:	strd	sl, [sp, #24]
   24a50:	adds	sl, sl, r2
   24a54:	adc	fp, fp, r3
   24a58:	adds	r4, r4, sl
   24a5c:	adc	r5, r5, fp
   24a60:	adds	r0, r0, r4
   24a64:	adc	r1, r1, r5
   24a68:	lsr	r3, r8, #14
   24a6c:	mov	r4, r8
   24a70:	mov	r5, r9
   24a74:	orr	ip, r3, r9, lsl #18
   24a78:	str	ip, [sp, #3464]	; 0xd88
   24a7c:	lsr	r3, r9, #14
   24a80:	orr	ip, r3, r8, lsl #18
   24a84:	str	ip, [sp, #3468]	; 0xd8c
   24a88:	lsr	r3, r8, #18
   24a8c:	orr	ip, r3, r9, lsl #14
   24a90:	str	ip, [sp, #3472]	; 0xd90
   24a94:	lsr	r3, r9, #18
   24a98:	orr	ip, r3, r8, lsl #14
   24a9c:	str	ip, [sp, #3476]	; 0xd94
   24aa0:	add	r3, sp, #3456	; 0xd80
   24aa4:	add	r3, r3, #8
   24aa8:	ldrd	r2, [r3]
   24aac:	add	ip, sp, #3472	; 0xd90
   24ab0:	ldrd	r8, [ip]
   24ab4:	eor	r2, r2, r8
   24ab8:	eor	r3, r3, r9
   24abc:	lsl	ip, r5, #23
   24ac0:	b	24ae0 <__assert_fail@plt+0x137f4>
   24ac4:	nop			; (mov r0, r0)
   24ac8:			; <UNDEFINED> instruction: 0x5c26c926
   24acc:	mrccs	1, 0, r2, cr11, cr8, {1}
   24ad0:	bpl	ff12f68c <optarg@@GLIBC_2.4+0xff0e54e4>
   24ad4:	stcmi	13, cr6, [ip, #-1008]!	; 0xfffffc10
   24ad8:	ldcls	3, cr11, [r5, #892]	; 0x37c
   24adc:	teqpl	r8, #1216	; 0x4c0
   24ae0:	orr	ip, ip, r4, lsr #9
   24ae4:	str	ip, [sp, #3484]	; 0xd9c
   24ae8:	lsl	ip, r4, #23
   24aec:	orr	ip, ip, r5, lsr #9
   24af0:	str	ip, [sp, #3480]	; 0xd98
   24af4:	add	ip, sp, #3472	; 0xd90
   24af8:	add	ip, ip, #8
   24afc:	ldrd	r8, [ip]
   24b00:	eor	r8, r8, r2
   24b04:	eor	r9, r9, r3
   24b08:	adds	r4, r0, r8
   24b0c:	adc	r5, r1, r9
   24b10:	ldrd	sl, [sp, #192]	; 0xc0
   24b14:	adds	sl, sl, r4
   24b18:	adc	fp, fp, r5
   24b1c:	ldrd	r0, [sp, #32]
   24b20:	lsr	r3, r0, #28
   24b24:	orr	r2, r3, r1, lsl #4
   24b28:	str	r2, [sp, #3488]	; 0xda0
   24b2c:	lsr	r3, r1, #28
   24b30:	orr	r2, r3, r0, lsl #4
   24b34:	str	r2, [sp, #3492]	; 0xda4
   24b38:	lsl	r3, r1, #30
   24b3c:	orr	r2, r3, r0, lsr #2
   24b40:	str	r2, [sp, #3500]	; 0xdac
   24b44:	lsl	r3, r0, #30
   24b48:	orr	r2, r3, r1, lsr #2
   24b4c:	str	r2, [sp, #3496]	; 0xda8
   24b50:	add	r3, sp, #3488	; 0xda0
   24b54:	ldrd	r2, [r3]
   24b58:	add	ip, sp, #3488	; 0xda0
   24b5c:	add	ip, ip, #8
   24b60:	ldrd	r8, [ip]
   24b64:	eor	r2, r2, r8
   24b68:	eor	r3, r3, r9
   24b6c:	mov	r8, r0
   24b70:	mov	r9, r1
   24b74:	lsl	r1, r1, #25
   24b78:	orr	r1, r1, r8, lsr #7
   24b7c:	str	r1, [sp, #3508]	; 0xdb4
   24b80:	lsl	r1, r8, #25
   24b84:	orr	r1, r1, r9, lsr #7
   24b88:	str	r1, [sp, #3504]	; 0xdb0
   24b8c:	add	r1, sp, #3504	; 0xdb0
   24b90:	ldrd	r8, [r1]
   24b94:	eor	r8, r8, r2
   24b98:	eor	r9, r9, r3
   24b9c:	strd	r8, [sp]
   24ba0:	ldrd	r2, [sp, #32]
   24ba4:	ldrd	r8, [sp, #48]	; 0x30
   24ba8:	orr	r8, r8, r2
   24bac:	orr	r9, r9, r3
   24bb0:	mov	r0, r8
   24bb4:	mov	r1, r9
   24bb8:	ldrd	r8, [sp, #136]	; 0x88
   24bbc:	and	r8, r8, r0
   24bc0:	and	r9, r9, r1
   24bc4:	mov	r0, r8
   24bc8:	mov	r1, r9
   24bcc:	ldrd	r8, [sp, #48]	; 0x30
   24bd0:	and	r8, r8, r2
   24bd4:	and	r9, r9, r3
   24bd8:	orr	r2, r8, r0
   24bdc:	orr	r3, r9, r1
   24be0:	mov	r0, r2
   24be4:	mov	r1, r3
   24be8:	ldrd	r2, [sp]
   24bec:	adds	r2, r2, r0
   24bf0:	adc	r3, r3, r1
   24bf4:	adds	r4, r4, r2
   24bf8:	adc	r5, r5, r3
   24bfc:	strd	r4, [sp, #192]	; 0xc0
   24c00:	ldrd	r4, [sp, #80]	; 0x50
   24c04:	lsr	r3, r4, #1
   24c08:	orr	r1, r3, r5, lsl #31
   24c0c:	str	r1, [sp, #3512]	; 0xdb8
   24c10:	lsr	r3, r5, #1
   24c14:	orr	r1, r3, r4, lsl #31
   24c18:	str	r1, [sp, #3516]	; 0xdbc
   24c1c:	lsr	r3, r4, #8
   24c20:	orr	r1, r3, r5, lsl #24
   24c24:	str	r1, [sp, #3520]	; 0xdc0
   24c28:	lsr	r3, r5, #8
   24c2c:	orr	r1, r3, r4, lsl #24
   24c30:	str	r1, [sp, #3524]	; 0xdc4
   24c34:	add	r3, sp, #3504	; 0xdb0
   24c38:	add	r3, r3, #8
   24c3c:	ldrd	r2, [r3]
   24c40:	add	r1, sp, #3520	; 0xdc0
   24c44:	ldrd	r8, [r1]
   24c48:	eor	r2, r2, r8
   24c4c:	eor	r3, r3, r9
   24c50:	lsr	r1, r4, #7
   24c54:	orr	r1, r1, r5, lsl #25
   24c58:	str	r1, [sp, #504]	; 0x1f8
   24c5c:	lsr	r1, r5, #7
   24c60:	str	r1, [sp, #508]	; 0x1fc
   24c64:	add	r1, sp, #504	; 0x1f8
   24c68:	ldrd	r8, [r1]
   24c6c:	eor	r8, r8, r2
   24c70:	eor	r9, r9, r3
   24c74:	ldrd	r0, [sp, #72]	; 0x48
   24c78:	adds	r0, r0, r8
   24c7c:	adc	r1, r1, r9
   24c80:	ldrd	r4, [sp, #144]	; 0x90
   24c84:	adds	r4, r4, r0
   24c88:	adc	r5, r5, r1
   24c8c:	mov	r2, r4
   24c90:	mov	r3, r5
   24c94:	ldrd	r4, [sp, #176]	; 0xb0
   24c98:	lsr	r1, r4, #19
   24c9c:	orr	r1, r1, r5, lsl #13
   24ca0:	str	r1, [sp, #3528]	; 0xdc8
   24ca4:	lsr	r1, r5, #19
   24ca8:	orr	r1, r1, r4, lsl #13
   24cac:	str	r1, [sp, #3532]	; 0xdcc
   24cb0:	lsl	r1, r5, #3
   24cb4:	orr	r1, r1, r4, lsr #29
   24cb8:	str	r1, [sp, #3540]	; 0xdd4
   24cbc:	lsl	r1, r4, #3
   24cc0:	orr	r1, r1, r5, lsr #29
   24cc4:	str	r1, [sp, #3536]	; 0xdd0
   24cc8:	add	r1, sp, #3520	; 0xdc0
   24ccc:	add	r1, r1, #8
   24cd0:	ldrd	r8, [r1]
   24cd4:	add	r1, sp, #3536	; 0xdd0
   24cd8:	ldrd	r0, [r1]
   24cdc:	eor	r8, r8, r0
   24ce0:	eor	r9, r9, r1
   24ce4:	mov	r0, r8
   24ce8:	mov	r1, r9
   24cec:	lsr	ip, r4, #6
   24cf0:	orr	ip, ip, r5, lsl #26
   24cf4:	str	ip, [sp, #512]	; 0x200
   24cf8:	lsr	ip, r5, #6
   24cfc:	str	ip, [sp, #516]	; 0x204
   24d00:	add	ip, sp, #512	; 0x200
   24d04:	ldrd	r8, [ip]
   24d08:	eor	r8, r8, r0
   24d0c:	eor	r9, r9, r1
   24d10:	adds	r4, r2, r8
   24d14:	adc	r5, r3, r9
   24d18:	mov	r8, r4
   24d1c:	mov	r9, r5
   24d20:	ldrd	r0, [sp, #184]	; 0xb8
   24d24:	eor	r0, r0, r6
   24d28:	eor	r1, r1, r7
   24d2c:	mov	r4, sl
   24d30:	mov	r5, fp
   24d34:	mov	r2, sl
   24d38:	mov	r3, fp
   24d3c:	and	r2, r2, r0
   24d40:	and	r3, r3, r1
   24d44:	mov	r0, r2
   24d48:	mov	r1, r3
   24d4c:	eor	r0, r0, r6
   24d50:	eor	r1, r1, r7
   24d54:	sub	r3, pc, #644	; 0x284
   24d58:	ldrd	r2, [r3]
   24d5c:	strd	r8, [sp, #72]	; 0x48
   24d60:	adds	sl, r8, r2
   24d64:	adc	fp, r9, r3
   24d68:	mov	r2, sl
   24d6c:	mov	r3, fp
   24d70:	ldrd	sl, [sp, #40]	; 0x28
   24d74:	adds	sl, sl, r2
   24d78:	adc	fp, fp, r3
   24d7c:	adds	r0, r0, sl
   24d80:	adc	r1, r1, fp
   24d84:	lsr	r3, r4, #14
   24d88:	orr	ip, r3, r5, lsl #18
   24d8c:	str	ip, [sp, #3544]	; 0xdd8
   24d90:	lsr	r3, r5, #14
   24d94:	orr	ip, r3, r4, lsl #18
   24d98:	str	ip, [sp, #3548]	; 0xddc
   24d9c:	lsr	r3, r4, #18
   24da0:	orr	ip, r3, r5, lsl #14
   24da4:	str	ip, [sp, #3552]	; 0xde0
   24da8:	lsr	r3, r5, #18
   24dac:	orr	ip, r3, r4, lsl #14
   24db0:	str	ip, [sp, #3556]	; 0xde4
   24db4:	add	r3, sp, #3536	; 0xdd0
   24db8:	add	r3, r3, #8
   24dbc:	ldrd	r2, [r3]
   24dc0:	add	ip, sp, #3552	; 0xde0
   24dc4:	ldrd	r8, [ip]
   24dc8:	eor	r2, r2, r8
   24dcc:	eor	r3, r3, r9
   24dd0:	lsl	ip, r5, #23
   24dd4:	orr	ip, ip, r4, lsr #9
   24dd8:	str	ip, [sp, #3564]	; 0xdec
   24ddc:	lsl	ip, r4, #23
   24de0:	orr	ip, ip, r5, lsr #9
   24de4:	str	ip, [sp, #3560]	; 0xde8
   24de8:	add	ip, sp, #3552	; 0xde0
   24dec:	add	ip, ip, #8
   24df0:	ldrd	r8, [ip]
   24df4:	eor	r8, r8, r2
   24df8:	eor	r9, r9, r3
   24dfc:	adds	r8, r0, r8
   24e00:	adc	r9, r1, r9
   24e04:	mov	r2, r8
   24e08:	mov	r3, r9
   24e0c:	ldrd	r8, [sp, #136]	; 0x88
   24e10:	strd	r2, [sp]
   24e14:	adds	r8, r8, r2
   24e18:	adc	r9, r9, r3
   24e1c:	strd	r8, [sp, #56]	; 0x38
   24e20:	ldrd	sl, [sp, #192]	; 0xc0
   24e24:	lsr	r3, sl, #28
   24e28:	orr	r1, r3, fp, lsl #4
   24e2c:	str	r1, [sp, #3568]	; 0xdf0
   24e30:	lsr	r3, fp, #28
   24e34:	orr	r1, r3, sl, lsl #4
   24e38:	str	r1, [sp, #3572]	; 0xdf4
   24e3c:	lsl	r3, fp, #30
   24e40:	orr	r1, r3, sl, lsr #2
   24e44:	str	r1, [sp, #3580]	; 0xdfc
   24e48:	lsl	r3, sl, #30
   24e4c:	orr	r1, r3, fp, lsr #2
   24e50:	str	r1, [sp, #3576]	; 0xdf8
   24e54:	add	r3, sp, #3568	; 0xdf0
   24e58:	ldrd	r8, [r3]
   24e5c:	add	r3, sp, #3568	; 0xdf0
   24e60:	add	r3, r3, #8
   24e64:	ldrd	r2, [r3]
   24e68:	eor	r8, r8, r2
   24e6c:	eor	r9, r9, r3
   24e70:	mov	r2, r8
   24e74:	mov	r3, r9
   24e78:	lsl	r1, fp, #25
   24e7c:	orr	r1, r1, sl, lsr #7
   24e80:	str	r1, [sp, #3588]	; 0xe04
   24e84:	lsl	r1, sl, #25
   24e88:	orr	r1, r1, fp, lsr #7
   24e8c:	str	r1, [sp, #3584]	; 0xe00
   24e90:	add	r1, sp, #3584	; 0xe00
   24e94:	ldrd	r8, [r1]
   24e98:	eor	r8, r8, r2
   24e9c:	eor	r9, r9, r3
   24ea0:	strd	r8, [sp, #40]	; 0x28
   24ea4:	ldrd	r8, [sp, #32]
   24ea8:	orr	r2, r8, sl
   24eac:	orr	r3, r9, fp
   24eb0:	mov	r0, r2
   24eb4:	mov	r1, r3
   24eb8:	ldrd	r2, [sp, #48]	; 0x30
   24ebc:	and	r2, r2, r0
   24ec0:	and	r3, r3, r1
   24ec4:	mov	r0, r2
   24ec8:	mov	r1, r3
   24ecc:	mov	r2, r8
   24ed0:	mov	r3, r9
   24ed4:	and	r2, r2, sl
   24ed8:	and	r3, r3, fp
   24edc:	orr	r2, r2, r0
   24ee0:	orr	r3, r3, r1
   24ee4:	ldrd	r8, [sp, #40]	; 0x28
   24ee8:	adds	r8, r8, r2
   24eec:	adc	r9, r9, r3
   24ef0:	mov	r0, r8
   24ef4:	mov	r1, r9
   24ef8:	ldrd	r8, [sp]
   24efc:	adds	r8, r8, r0
   24f00:	adc	r9, r9, r1
   24f04:	strd	r8, [sp, #64]	; 0x40
   24f08:	ldrd	r0, [sp, #88]	; 0x58
   24f0c:	lsr	r3, r0, #1
   24f10:	orr	ip, r3, r1, lsl #31
   24f14:	str	ip, [sp, #3592]	; 0xe08
   24f18:	lsr	r3, r1, #1
   24f1c:	orr	ip, r3, r0, lsl #31
   24f20:	str	ip, [sp, #3596]	; 0xe0c
   24f24:	lsr	r3, r0, #8
   24f28:	orr	ip, r3, r1, lsl #24
   24f2c:	str	ip, [sp, #3600]	; 0xe10
   24f30:	lsr	r3, r1, #8
   24f34:	orr	ip, r3, r0, lsl #24
   24f38:	str	ip, [sp, #3604]	; 0xe14
   24f3c:	add	r3, sp, #3584	; 0xe00
   24f40:	add	r3, r3, #8
   24f44:	ldrd	r2, [r3]
   24f48:	add	ip, sp, #3600	; 0xe10
   24f4c:	ldrd	r8, [ip]
   24f50:	eor	r2, r2, r8
   24f54:	eor	r3, r3, r9
   24f58:	lsr	ip, r0, #7
   24f5c:	orr	ip, ip, r1, lsl #25
   24f60:	str	ip, [sp, #520]	; 0x208
   24f64:	strd	r0, [sp, #88]	; 0x58
   24f68:	lsr	r1, r1, #7
   24f6c:	str	r1, [sp, #524]	; 0x20c
   24f70:	add	r1, sp, #520	; 0x208
   24f74:	ldrd	r8, [r1]
   24f78:	eor	r8, r8, r2
   24f7c:	eor	r9, r9, r3
   24f80:	ldrd	r0, [sp, #80]	; 0x50
   24f84:	adds	r0, r0, r8
   24f88:	adc	r1, r1, r9
   24f8c:	mov	r2, r0
   24f90:	mov	r3, r1
   24f94:	ldrd	r0, [sp, #152]	; 0x98
   24f98:	adds	r0, r0, r2
   24f9c:	adc	r1, r1, r3
   24fa0:	mov	r2, r0
   24fa4:	mov	r3, r1
   24fa8:	ldrd	r8, [sp, #24]
   24fac:	lsr	r1, r8, #19
   24fb0:	orr	r1, r1, r9, lsl #13
   24fb4:	str	r1, [sp, #3608]	; 0xe18
   24fb8:	lsr	r1, r9, #19
   24fbc:	orr	r1, r1, r8, lsl #13
   24fc0:	str	r1, [sp, #3612]	; 0xe1c
   24fc4:	lsl	r1, r9, #3
   24fc8:	orr	r1, r1, r8, lsr #29
   24fcc:	str	r1, [sp, #3620]	; 0xe24
   24fd0:	lsl	r1, r8, #3
   24fd4:	orr	r1, r1, r9, lsr #29
   24fd8:	str	r1, [sp, #3616]	; 0xe20
   24fdc:	add	r1, sp, #3600	; 0xe10
   24fe0:	add	r1, r1, #8
   24fe4:	ldrd	r8, [r1]
   24fe8:	add	r1, sp, #3616	; 0xe20
   24fec:	ldrd	r0, [r1]
   24ff0:	eor	r8, r8, r0
   24ff4:	eor	r9, r9, r1
   24ff8:	mov	r0, r8
   24ffc:	mov	r1, r9
   25000:	ldrd	r8, [sp, #24]
   25004:	lsr	ip, r8, #6
   25008:	orr	ip, ip, r9, lsl #26
   2500c:	str	ip, [sp, #528]	; 0x210
   25010:	ldr	ip, [sp, #28]
   25014:	lsr	ip, ip, #6
   25018:	str	ip, [sp, #532]	; 0x214
   2501c:	add	ip, sp, #528	; 0x210
   25020:	ldrd	r8, [ip]
   25024:	eor	r8, r8, r0
   25028:	eor	r9, r9, r1
   2502c:	adds	r8, r2, r8
   25030:	adc	r9, r3, r9
   25034:	strd	r4, [sp, #40]	; 0x28
   25038:	ldrd	r2, [sp, #184]	; 0xb8
   2503c:	eor	r2, r2, r4
   25040:	eor	r3, r3, r5
   25044:	ldrd	r4, [sp, #56]	; 0x38
   25048:	and	r4, r4, r2
   2504c:	and	r5, r5, r3
   25050:	ldrd	r2, [sp, #184]	; 0xb8
   25054:	eor	r2, r2, r4
   25058:	eor	r3, r3, r5
   2505c:	mov	r0, r2
   25060:	mov	r1, r3
   25064:	add	r3, pc, #884	; 0x374
   25068:	ldrd	r2, [r3]
   2506c:	strd	r8, [sp, #80]	; 0x50
   25070:	adds	r8, r8, r2
   25074:	adc	r9, r9, r3
   25078:	adds	r6, r6, r8
   2507c:	adc	r7, r7, r9
   25080:	adds	r0, r0, r6
   25084:	adc	r1, r1, r7
   25088:	ldrd	r4, [sp, #56]	; 0x38
   2508c:	lsr	r3, r4, #14
   25090:	orr	ip, r3, r5, lsl #18
   25094:	str	ip, [sp, #3624]	; 0xe28
   25098:	lsr	r3, r5, #14
   2509c:	orr	ip, r3, r4, lsl #18
   250a0:	str	ip, [sp, #3628]	; 0xe2c
   250a4:	lsr	r3, r4, #18
   250a8:	orr	ip, r3, r5, lsl #14
   250ac:	str	ip, [sp, #3632]	; 0xe30
   250b0:	lsr	r3, r5, #18
   250b4:	orr	ip, r3, r4, lsl #14
   250b8:	str	ip, [sp, #3636]	; 0xe34
   250bc:	add	r3, sp, #3616	; 0xe20
   250c0:	add	r3, r3, #8
   250c4:	ldrd	r2, [r3]
   250c8:	add	ip, sp, #3632	; 0xe30
   250cc:	ldrd	r8, [ip]
   250d0:	eor	r2, r2, r8
   250d4:	eor	r3, r3, r9
   250d8:	lsl	ip, r5, #23
   250dc:	orr	ip, ip, r4, lsr #9
   250e0:	str	ip, [sp, #3644]	; 0xe3c
   250e4:	lsl	ip, r4, #23
   250e8:	orr	ip, ip, r5, lsr #9
   250ec:	str	ip, [sp, #3640]	; 0xe38
   250f0:	add	ip, sp, #3632	; 0xe30
   250f4:	add	ip, ip, #8
   250f8:	ldrd	r8, [ip]
   250fc:	eor	r8, r8, r2
   25100:	eor	r9, r9, r3
   25104:	adds	r8, r0, r8
   25108:	adc	r9, r1, r9
   2510c:	ldrd	r0, [sp, #48]	; 0x30
   25110:	adds	r0, r0, r8
   25114:	adc	r1, r1, r9
   25118:	mov	r2, r0
   2511c:	mov	r3, r1
   25120:	strd	r2, [sp, #48]	; 0x30
   25124:	ldrd	r6, [sp, #64]	; 0x40
   25128:	lsr	r3, r6, #28
   2512c:	orr	r1, r3, r7, lsl #4
   25130:	str	r1, [sp, #3648]	; 0xe40
   25134:	lsr	r3, r7, #28
   25138:	orr	r1, r3, r6, lsl #4
   2513c:	str	r1, [sp, #3652]	; 0xe44
   25140:	lsl	r3, r7, #30
   25144:	orr	r1, r3, r6, lsr #2
   25148:	str	r1, [sp, #3660]	; 0xe4c
   2514c:	lsl	r3, r6, #30
   25150:	orr	r1, r3, r7, lsr #2
   25154:	str	r1, [sp, #3656]	; 0xe48
   25158:	add	r3, sp, #3648	; 0xe40
   2515c:	ldrd	r2, [r3]
   25160:	add	r1, sp, #3648	; 0xe40
   25164:	add	r1, r1, #8
   25168:	ldrd	r4, [r1]
   2516c:	eor	r2, r2, r4
   25170:	eor	r3, r3, r5
   25174:	lsl	r1, r7, #25
   25178:	orr	r1, r1, r6, lsr #7
   2517c:	str	r1, [sp, #3668]	; 0xe54
   25180:	lsl	r1, r6, #25
   25184:	orr	r1, r1, r7, lsr #7
   25188:	str	r1, [sp, #3664]	; 0xe50
   2518c:	add	r1, sp, #3664	; 0xe50
   25190:	ldrd	r4, [r1]
   25194:	eor	r4, r4, r2
   25198:	eor	r5, r5, r3
   2519c:	mov	r2, r4
   251a0:	mov	r3, r5
   251a4:	mov	r4, sl
   251a8:	mov	r5, fp
   251ac:	orr	sl, sl, r6
   251b0:	orr	fp, fp, r7
   251b4:	mov	r0, sl
   251b8:	mov	r1, fp
   251bc:	ldrd	sl, [sp, #32]
   251c0:	and	sl, sl, r0
   251c4:	and	fp, fp, r1
   251c8:	mov	r0, sl
   251cc:	mov	r1, fp
   251d0:	mov	sl, r4
   251d4:	mov	fp, r5
   251d8:	and	sl, sl, r6
   251dc:	and	fp, fp, r7
   251e0:	orr	r0, r0, sl
   251e4:	orr	r1, r1, fp
   251e8:	adds	r0, r0, r2
   251ec:	adc	r1, r1, r3
   251f0:	adds	r2, r8, r0
   251f4:	adc	r3, r9, r1
   251f8:	strd	r2, [sp]
   251fc:	ldrd	sl, [sp, #96]	; 0x60
   25200:	lsr	r3, sl, #1
   25204:	orr	r1, r3, fp, lsl #31
   25208:	str	r1, [sp, #3672]	; 0xe58
   2520c:	lsr	r3, fp, #1
   25210:	orr	r1, r3, sl, lsl #31
   25214:	str	r1, [sp, #3676]	; 0xe5c
   25218:	lsr	r3, sl, #8
   2521c:	orr	r1, r3, fp, lsl #24
   25220:	str	r1, [sp, #3680]	; 0xe60
   25224:	lsr	r3, fp, #8
   25228:	orr	r1, r3, sl, lsl #24
   2522c:	str	r1, [sp, #3684]	; 0xe64
   25230:	add	r3, sp, #3664	; 0xe50
   25234:	add	r3, r3, #8
   25238:	ldrd	r2, [r3]
   2523c:	add	r1, sp, #3680	; 0xe60
   25240:	ldrd	r8, [r1]
   25244:	eor	r2, r2, r8
   25248:	eor	r3, r3, r9
   2524c:	lsr	r1, sl, #7
   25250:	orr	r1, r1, fp, lsl #25
   25254:	str	r1, [sp, #536]	; 0x218
   25258:	strd	sl, [sp, #96]	; 0x60
   2525c:	lsr	r1, fp, #7
   25260:	str	r1, [sp, #540]	; 0x21c
   25264:	add	r1, sp, #536	; 0x218
   25268:	ldrd	r8, [r1]
   2526c:	eor	r8, r8, r2
   25270:	eor	r9, r9, r3
   25274:	ldrd	r0, [sp, #88]	; 0x58
   25278:	adds	r0, r0, r8
   2527c:	adc	r1, r1, r9
   25280:	ldrd	sl, [sp, #16]
   25284:	adds	sl, sl, r0
   25288:	adc	fp, fp, r1
   2528c:	ldrd	r4, [sp, #72]	; 0x48
   25290:	lsr	r1, r4, #19
   25294:	orr	r1, r1, r5, lsl #13
   25298:	str	r1, [sp, #3688]	; 0xe68
   2529c:	lsr	r1, r5, #19
   252a0:	orr	r1, r1, r4, lsl #13
   252a4:	str	r1, [sp, #3692]	; 0xe6c
   252a8:	lsl	r1, r5, #3
   252ac:	orr	r1, r1, r4, lsr #29
   252b0:	str	r1, [sp, #3700]	; 0xe74
   252b4:	lsl	r1, r4, #3
   252b8:	orr	r1, r1, r5, lsr #29
   252bc:	str	r1, [sp, #3696]	; 0xe70
   252c0:	add	r1, sp, #3680	; 0xe60
   252c4:	add	r1, r1, #8
   252c8:	ldrd	r8, [r1]
   252cc:	add	r1, sp, #3696	; 0xe70
   252d0:	ldrd	r0, [r1]
   252d4:	eor	r8, r8, r0
   252d8:	eor	r9, r9, r1
   252dc:	mov	r0, r8
   252e0:	mov	r1, r9
   252e4:	lsr	ip, r4, #6
   252e8:	orr	ip, ip, r5, lsl #26
   252ec:	str	ip, [sp, #544]	; 0x220
   252f0:	lsr	ip, r5, #6
   252f4:	str	ip, [sp, #548]	; 0x224
   252f8:	add	ip, sp, #544	; 0x220
   252fc:	ldrd	r8, [ip]
   25300:	eor	r8, r8, r0
   25304:	eor	r9, r9, r1
   25308:	adds	r8, sl, r8
   2530c:	adc	r9, fp, r9
   25310:	ldrd	r4, [sp, #40]	; 0x28
   25314:	ldrd	r2, [sp, #56]	; 0x38
   25318:	eor	r2, r2, r4
   2531c:	eor	r3, r3, r5
   25320:	ldrd	sl, [sp, #48]	; 0x30
   25324:	and	sl, sl, r2
   25328:	and	fp, fp, r3
   2532c:	mov	r2, r4
   25330:	mov	r3, r5
   25334:	eor	r2, r2, sl
   25338:	eor	r3, r3, fp
   2533c:	mov	r0, r2
   25340:	mov	r1, r3
   25344:	add	r3, pc, #156	; 0x9c
   25348:	ldrd	r2, [r3]
   2534c:	strd	r8, [sp, #88]	; 0x58
   25350:	adds	r8, r8, r2
   25354:	adc	r9, r9, r3
   25358:	mov	r2, r8
   2535c:	mov	r3, r9
   25360:	ldrd	r8, [sp, #184]	; 0xb8
   25364:	adds	r8, r8, r2
   25368:	adc	r9, r9, r3
   2536c:	adds	r0, r0, r8
   25370:	adc	r1, r1, r9
   25374:	ldrd	sl, [sp, #48]	; 0x30
   25378:	lsr	r3, sl, #14
   2537c:	orr	ip, r3, fp, lsl #18
   25380:	str	ip, [sp, #3704]	; 0xe78
   25384:	lsr	r3, fp, #14
   25388:	orr	ip, r3, sl, lsl #18
   2538c:	str	ip, [sp, #3708]	; 0xe7c
   25390:	lsr	r3, sl, #18
   25394:	orr	ip, r3, fp, lsl #14
   25398:	str	ip, [sp, #3712]	; 0xe80
   2539c:	lsr	r3, fp, #18
   253a0:	orr	ip, r3, sl, lsl #14
   253a4:	str	ip, [sp, #3716]	; 0xe84
   253a8:	add	r3, sp, #3696	; 0xe70
   253ac:	add	r3, r3, #8
   253b0:	ldrd	r2, [r3]
   253b4:	add	ip, sp, #3712	; 0xe80
   253b8:	ldrd	r8, [ip]
   253bc:	eor	r2, r2, r8
   253c0:	eor	r3, r3, r9
   253c4:	lsl	ip, fp, #23
   253c8:	mov	r8, sl
   253cc:	mov	r9, fp
   253d0:	orr	ip, ip, sl, lsr #9
   253d4:	str	ip, [sp, #3724]	; 0xe8c
   253d8:	b	253f8 <__assert_fail@plt+0x1410c>
   253dc:	nop			; (mov r0, r0)
   253e0:	blhi	febfe360 <optarg@@GLIBC_2.4+0xfebb41b8>
   253e4:	strvs	r7, [sl, #-852]	; 0xfffffcac
   253e8:	lfmcc	f3, 3, [r7], #-672	; 0xfffffd60
   253ec:			; <UNDEFINED> instruction: 0x766a0abb
   253f0:	strbmi	sl, [sp, r6, ror #29]!
   253f4:	bichi	ip, r2, lr, lsr #18
   253f8:	lsl	ip, r8, #23
   253fc:	orr	ip, ip, r9, lsr #9
   25400:	str	ip, [sp, #3720]	; 0xe88
   25404:	add	ip, sp, #3712	; 0xe80
   25408:	add	ip, ip, #8
   2540c:	ldrd	r8, [ip]
   25410:	eor	r8, r8, r2
   25414:	eor	r9, r9, r3
   25418:	adds	r8, r0, r8
   2541c:	adc	r9, r1, r9
   25420:	ldrd	r2, [sp, #32]
   25424:	strd	r8, [sp, #32]
   25428:	adds	r2, r2, r8
   2542c:	adc	r3, r3, r9
   25430:	mov	r8, r2
   25434:	mov	r9, r3
   25438:	ldrd	sl, [sp]
   2543c:	lsr	r3, sl, #28
   25440:	orr	r1, r3, fp, lsl #4
   25444:	str	r1, [sp, #3728]	; 0xe90
   25448:	lsr	r3, fp, #28
   2544c:	orr	r1, r3, sl, lsl #4
   25450:	str	r1, [sp, #3732]	; 0xe94
   25454:	lsl	r3, fp, #30
   25458:	orr	r1, r3, sl, lsr #2
   2545c:	str	r1, [sp, #3740]	; 0xe9c
   25460:	lsl	r3, sl, #30
   25464:	orr	r1, r3, fp, lsr #2
   25468:	str	r1, [sp, #3736]	; 0xe98
   2546c:	add	r3, sp, #3728	; 0xe90
   25470:	ldrd	r2, [r3]
   25474:	add	r1, sp, #3728	; 0xe90
   25478:	add	r1, r1, #8
   2547c:	ldrd	sl, [r1]
   25480:	eor	r2, r2, sl
   25484:	eor	r3, r3, fp
   25488:	ldrd	sl, [sp]
   2548c:	lsl	r1, fp, #25
   25490:	orr	r1, r1, sl, lsr #7
   25494:	str	r1, [sp, #3748]	; 0xea4
   25498:	lsl	r1, sl, #25
   2549c:	orr	r1, r1, fp, lsr #7
   254a0:	str	r1, [sp, #3744]	; 0xea0
   254a4:	add	r1, sp, #3744	; 0xea0
   254a8:	ldrd	sl, [r1]
   254ac:	eor	sl, sl, r2
   254b0:	eor	fp, fp, r3
   254b4:	mov	r2, sl
   254b8:	mov	r3, fp
   254bc:	ldrd	r0, [sp]
   254c0:	orr	r0, r0, r6
   254c4:	orr	r1, r1, r7
   254c8:	ldrd	sl, [sp, #192]	; 0xc0
   254cc:	and	sl, sl, r0
   254d0:	and	fp, fp, r1
   254d4:	mov	r0, sl
   254d8:	mov	r1, fp
   254dc:	ldrd	r6, [sp, #64]	; 0x40
   254e0:	ldrd	sl, [sp]
   254e4:	and	sl, sl, r6
   254e8:	and	fp, fp, r7
   254ec:	orr	r6, sl, r0
   254f0:	orr	r7, fp, r1
   254f4:	adds	r0, r6, r2
   254f8:	adc	r1, r7, r3
   254fc:	ldrd	r2, [sp, #32]
   25500:	adds	r2, r2, r0
   25504:	adc	r3, r3, r1
   25508:	strd	r2, [sp, #40]	; 0x28
   2550c:	ldrd	r0, [sp, #112]	; 0x70
   25510:	lsr	r3, r0, #1
   25514:	orr	ip, r3, r1, lsl #31
   25518:	str	ip, [sp, #3752]	; 0xea8
   2551c:	lsr	r3, r1, #1
   25520:	orr	ip, r3, r0, lsl #31
   25524:	str	ip, [sp, #3756]	; 0xeac
   25528:	lsr	r3, r0, #8
   2552c:	orr	ip, r3, r1, lsl #24
   25530:	str	ip, [sp, #3760]	; 0xeb0
   25534:	lsr	r3, r1, #8
   25538:	orr	ip, r3, r0, lsl #24
   2553c:	str	ip, [sp, #3764]	; 0xeb4
   25540:	add	r3, sp, #3744	; 0xea0
   25544:	add	r3, r3, #8
   25548:	ldrd	r2, [r3]
   2554c:	add	ip, sp, #3760	; 0xeb0
   25550:	ldrd	r6, [ip]
   25554:	eor	r2, r2, r6
   25558:	eor	r3, r3, r7
   2555c:	lsr	ip, r0, #7
   25560:	orr	ip, ip, r1, lsl #25
   25564:	str	ip, [sp, #552]	; 0x228
   25568:	strd	r0, [sp, #112]	; 0x70
   2556c:	lsr	r1, r1, #7
   25570:	str	r1, [sp, #556]	; 0x22c
   25574:	add	r1, sp, #552	; 0x228
   25578:	ldrd	r6, [r1]
   2557c:	eor	r6, r6, r2
   25580:	eor	r7, r7, r3
   25584:	ldrd	r0, [sp, #96]	; 0x60
   25588:	adds	r0, r0, r6
   2558c:	adc	r1, r1, r7
   25590:	ldrd	sl, [sp, #160]	; 0xa0
   25594:	adds	sl, sl, r0
   25598:	adc	fp, fp, r1
   2559c:	mov	r2, sl
   255a0:	mov	r3, fp
   255a4:	ldrd	sl, [sp, #80]	; 0x50
   255a8:	lsr	r1, sl, #19
   255ac:	orr	r1, r1, fp, lsl #13
   255b0:	str	r1, [sp, #3768]	; 0xeb8
   255b4:	lsr	r1, fp, #19
   255b8:	orr	r1, r1, sl, lsl #13
   255bc:	str	r1, [sp, #3772]	; 0xebc
   255c0:	lsl	r1, fp, #3
   255c4:	orr	r1, r1, sl, lsr #29
   255c8:	str	r1, [sp, #3780]	; 0xec4
   255cc:	lsl	r1, sl, #3
   255d0:	orr	r1, r1, fp, lsr #29
   255d4:	str	r1, [sp, #3776]	; 0xec0
   255d8:	add	r1, sp, #3760	; 0xeb0
   255dc:	add	r1, r1, #8
   255e0:	ldrd	r6, [r1]
   255e4:	add	r1, sp, #3776	; 0xec0
   255e8:	ldrd	r0, [r1]
   255ec:	eor	r6, r6, r0
   255f0:	eor	r7, r7, r1
   255f4:	mov	r0, r6
   255f8:	mov	r1, r7
   255fc:	lsr	ip, sl, #6
   25600:	orr	ip, ip, fp, lsl #26
   25604:	str	ip, [sp, #560]	; 0x230
   25608:	lsr	ip, fp, #6
   2560c:	str	ip, [sp, #564]	; 0x234
   25610:	add	ip, sp, #560	; 0x230
   25614:	ldrd	r6, [ip]
   25618:	eor	r6, r6, r0
   2561c:	eor	r7, r7, r1
   25620:	adds	sl, r2, r6
   25624:	adc	fp, r3, r7
   25628:	ldrd	r2, [sp, #56]	; 0x38
   2562c:	mov	r0, r2
   25630:	mov	r1, r3
   25634:	ldrd	r6, [sp, #48]	; 0x30
   25638:	eor	r0, r0, r6
   2563c:	eor	r1, r1, r7
   25640:	and	r0, r0, r8
   25644:	and	r1, r1, r9
   25648:	eor	r2, r2, r0
   2564c:	eor	r3, r3, r1
   25650:	mov	r0, r2
   25654:	mov	r1, r3
   25658:	sub	r3, pc, #624	; 0x270
   2565c:	ldrd	r2, [r3]
   25660:	strd	sl, [sp, #32]
   25664:	adds	sl, sl, r2
   25668:	adc	fp, fp, r3
   2566c:	adds	r4, r4, sl
   25670:	adc	r5, r5, fp
   25674:	adds	r0, r0, r4
   25678:	adc	r1, r1, r5
   2567c:	lsr	r3, r8, #14
   25680:	orr	ip, r3, r9, lsl #18
   25684:	str	ip, [sp, #3784]	; 0xec8
   25688:	lsr	r3, r9, #14
   2568c:	orr	ip, r3, r8, lsl #18
   25690:	str	ip, [sp, #3788]	; 0xecc
   25694:	lsr	r3, r8, #18
   25698:	orr	ip, r3, r9, lsl #14
   2569c:	str	ip, [sp, #3792]	; 0xed0
   256a0:	lsr	r3, r9, #18
   256a4:	orr	ip, r3, r8, lsl #14
   256a8:	str	ip, [sp, #3796]	; 0xed4
   256ac:	add	r3, sp, #3776	; 0xec0
   256b0:	add	r3, r3, #8
   256b4:	ldrd	r2, [r3]
   256b8:	add	ip, sp, #3792	; 0xed0
   256bc:	ldrd	r6, [ip]
   256c0:	eor	r2, r2, r6
   256c4:	eor	r3, r3, r7
   256c8:	lsl	ip, r9, #23
   256cc:	orr	ip, ip, r8, lsr #9
   256d0:	str	ip, [sp, #3804]	; 0xedc
   256d4:	lsl	ip, r8, #23
   256d8:	orr	ip, ip, r9, lsr #9
   256dc:	str	ip, [sp, #3800]	; 0xed8
   256e0:	add	ip, sp, #3792	; 0xed0
   256e4:	add	ip, ip, #8
   256e8:	ldrd	r6, [ip]
   256ec:	eor	r6, r6, r2
   256f0:	eor	r7, r7, r3
   256f4:	adds	r4, r0, r6
   256f8:	adc	r5, r1, r7
   256fc:	ldrd	sl, [sp, #192]	; 0xc0
   25700:	adds	sl, sl, r4
   25704:	adc	fp, fp, r5
   25708:	ldrd	r0, [sp, #40]	; 0x28
   2570c:	lsr	r3, r0, #28
   25710:	orr	r2, r3, r1, lsl #4
   25714:	str	r2, [sp, #3808]	; 0xee0
   25718:	lsr	r3, r1, #28
   2571c:	orr	r2, r3, r0, lsl #4
   25720:	str	r2, [sp, #3812]	; 0xee4
   25724:	lsl	r3, r1, #30
   25728:	orr	r2, r3, r0, lsr #2
   2572c:	str	r2, [sp, #3820]	; 0xeec
   25730:	lsl	r3, r0, #30
   25734:	orr	r2, r3, r1, lsr #2
   25738:	str	r2, [sp, #3816]	; 0xee8
   2573c:	add	r3, sp, #3808	; 0xee0
   25740:	ldrd	r2, [r3]
   25744:	add	ip, sp, #3808	; 0xee0
   25748:	add	ip, ip, #8
   2574c:	ldrd	r6, [ip]
   25750:	eor	r2, r2, r6
   25754:	eor	r3, r3, r7
   25758:	mov	r6, r0
   2575c:	mov	r7, r1
   25760:	lsl	r1, r1, #25
   25764:	orr	r1, r1, r6, lsr #7
   25768:	str	r1, [sp, #3828]	; 0xef4
   2576c:	lsl	r1, r6, #25
   25770:	orr	r1, r1, r7, lsr #7
   25774:	str	r1, [sp, #3824]	; 0xef0
   25778:	add	r1, sp, #3824	; 0xef0
   2577c:	ldrd	r6, [r1]
   25780:	eor	r6, r6, r2
   25784:	eor	r7, r7, r3
   25788:	strd	r6, [sp, #96]	; 0x60
   2578c:	ldrd	r2, [sp, #40]	; 0x28
   25790:	ldrd	r6, [sp]
   25794:	orr	r6, r6, r2
   25798:	orr	r7, r7, r3
   2579c:	mov	r0, r6
   257a0:	mov	r1, r7
   257a4:	ldrd	r6, [sp, #64]	; 0x40
   257a8:	and	r6, r6, r0
   257ac:	and	r7, r7, r1
   257b0:	mov	r0, r6
   257b4:	mov	r1, r7
   257b8:	ldrd	r6, [sp]
   257bc:	and	r6, r6, r2
   257c0:	and	r7, r7, r3
   257c4:	orr	r2, r6, r0
   257c8:	orr	r3, r7, r1
   257cc:	mov	r0, r2
   257d0:	mov	r1, r3
   257d4:	ldrd	r2, [sp, #96]	; 0x60
   257d8:	adds	r2, r2, r0
   257dc:	adc	r3, r3, r1
   257e0:	adds	r4, r4, r2
   257e4:	adc	r5, r5, r3
   257e8:	strd	r4, [sp, #184]	; 0xb8
   257ec:	ldrd	r4, [sp, #120]	; 0x78
   257f0:	lsr	r3, r4, #1
   257f4:	orr	r1, r3, r5, lsl #31
   257f8:	str	r1, [sp, #3832]	; 0xef8
   257fc:	lsr	r3, r5, #1
   25800:	orr	r1, r3, r4, lsl #31
   25804:	str	r1, [sp, #3836]	; 0xefc
   25808:	lsr	r3, r4, #8
   2580c:	orr	r1, r3, r5, lsl #24
   25810:	str	r1, [sp, #3840]	; 0xf00
   25814:	lsr	r3, r5, #8
   25818:	orr	r1, r3, r4, lsl #24
   2581c:	str	r1, [sp, #3844]	; 0xf04
   25820:	add	r3, sp, #3824	; 0xef0
   25824:	add	r3, r3, #8
   25828:	ldrd	r2, [r3]
   2582c:	add	r1, sp, #3840	; 0xf00
   25830:	ldrd	r6, [r1]
   25834:	eor	r2, r2, r6
   25838:	eor	r3, r3, r7
   2583c:	lsr	r1, r4, #7
   25840:	orr	r1, r1, r5, lsl #25
   25844:	str	r1, [sp, #568]	; 0x238
   25848:	lsr	r1, r5, #7
   2584c:	str	r1, [sp, #572]	; 0x23c
   25850:	add	r1, sp, #568	; 0x238
   25854:	ldrd	r6, [r1]
   25858:	eor	r6, r6, r2
   2585c:	eor	r7, r7, r3
   25860:	ldrd	r0, [sp, #112]	; 0x70
   25864:	adds	r0, r0, r6
   25868:	adc	r1, r1, r7
   2586c:	ldrd	r4, [sp, #168]	; 0xa8
   25870:	adds	r4, r4, r0
   25874:	adc	r5, r5, r1
   25878:	mov	r2, r4
   2587c:	mov	r3, r5
   25880:	ldrd	r4, [sp, #88]	; 0x58
   25884:	lsr	r1, r4, #19
   25888:	orr	r1, r1, r5, lsl #13
   2588c:	str	r1, [sp, #3848]	; 0xf08
   25890:	lsr	r1, r5, #19
   25894:	orr	r1, r1, r4, lsl #13
   25898:	str	r1, [sp, #3852]	; 0xf0c
   2589c:	lsl	r1, r5, #3
   258a0:	orr	r1, r1, r4, lsr #29
   258a4:	str	r1, [sp, #3860]	; 0xf14
   258a8:	lsl	r1, r4, #3
   258ac:	orr	r1, r1, r5, lsr #29
   258b0:	str	r1, [sp, #3856]	; 0xf10
   258b4:	add	r1, sp, #3840	; 0xf00
   258b8:	add	r1, r1, #8
   258bc:	ldrd	r6, [r1]
   258c0:	add	r1, sp, #3856	; 0xf10
   258c4:	ldrd	r0, [r1]
   258c8:	eor	r6, r6, r0
   258cc:	eor	r7, r7, r1
   258d0:	mov	r0, r6
   258d4:	mov	r1, r7
   258d8:	lsr	ip, r4, #6
   258dc:	orr	ip, ip, r5, lsl #26
   258e0:	str	ip, [sp, #576]	; 0x240
   258e4:	lsr	ip, r5, #6
   258e8:	str	ip, [sp, #580]	; 0x244
   258ec:	add	ip, sp, #576	; 0x240
   258f0:	ldrd	r6, [ip]
   258f4:	eor	r6, r6, r0
   258f8:	eor	r7, r7, r1
   258fc:	adds	r4, r2, r6
   25900:	adc	r5, r3, r7
   25904:	mov	r6, r4
   25908:	mov	r7, r5
   2590c:	ldrd	r0, [sp, #48]	; 0x30
   25910:	eor	r0, r0, r8
   25914:	eor	r1, r1, r9
   25918:	mov	r4, sl
   2591c:	mov	r5, fp
   25920:	mov	r2, sl
   25924:	mov	r3, fp
   25928:	and	r2, r2, r0
   2592c:	and	r3, r3, r1
   25930:	ldrd	sl, [sp, #48]	; 0x30
   25934:	eor	sl, sl, r2
   25938:	eor	fp, fp, r3
   2593c:	mov	r0, sl
   25940:	mov	r1, fp
   25944:	add	r3, pc, #876	; 0x36c
   25948:	ldrd	r2, [r3]
   2594c:	strd	r6, [sp, #96]	; 0x60
   25950:	adds	sl, r6, r2
   25954:	adc	fp, r7, r3
   25958:	mov	r2, sl
   2595c:	mov	r3, fp
   25960:	ldrd	sl, [sp, #56]	; 0x38
   25964:	adds	sl, sl, r2
   25968:	adc	fp, fp, r3
   2596c:	adds	r0, r0, sl
   25970:	adc	r1, r1, fp
   25974:	lsr	r3, r4, #14
   25978:	orr	ip, r3, r5, lsl #18
   2597c:	str	ip, [sp, #3864]	; 0xf18
   25980:	lsr	r3, r5, #14
   25984:	orr	ip, r3, r4, lsl #18
   25988:	str	ip, [sp, #3868]	; 0xf1c
   2598c:	lsr	r3, r4, #18
   25990:	orr	ip, r3, r5, lsl #14
   25994:	str	ip, [sp, #3872]	; 0xf20
   25998:	lsr	r3, r5, #18
   2599c:	orr	ip, r3, r4, lsl #14
   259a0:	str	ip, [sp, #3876]	; 0xf24
   259a4:	add	r3, sp, #3856	; 0xf10
   259a8:	add	r3, r3, #8
   259ac:	ldrd	r2, [r3]
   259b0:	add	ip, sp, #3872	; 0xf20
   259b4:	ldrd	r6, [ip]
   259b8:	eor	r2, r2, r6
   259bc:	eor	r3, r3, r7
   259c0:	lsl	ip, r5, #23
   259c4:	orr	ip, ip, r4, lsr #9
   259c8:	str	ip, [sp, #3884]	; 0xf2c
   259cc:	lsl	ip, r4, #23
   259d0:	orr	ip, ip, r5, lsr #9
   259d4:	str	ip, [sp, #3880]	; 0xf28
   259d8:	add	ip, sp, #3872	; 0xf20
   259dc:	add	ip, ip, #8
   259e0:	ldrd	r6, [ip]
   259e4:	eor	r6, r6, r2
   259e8:	eor	r7, r7, r3
   259ec:	adds	r6, r0, r6
   259f0:	adc	r7, r1, r7
   259f4:	mov	r2, r6
   259f8:	mov	r3, r7
   259fc:	ldrd	r6, [sp, #64]	; 0x40
   25a00:	strd	r2, [sp, #64]	; 0x40
   25a04:	adds	r6, r6, r2
   25a08:	adc	r7, r7, r3
   25a0c:	strd	r6, [sp, #56]	; 0x38
   25a10:	ldrd	sl, [sp, #184]	; 0xb8
   25a14:	lsr	r3, sl, #28
   25a18:	orr	r1, r3, fp, lsl #4
   25a1c:	str	r1, [sp, #3888]	; 0xf30
   25a20:	lsr	r3, fp, #28
   25a24:	orr	r1, r3, sl, lsl #4
   25a28:	str	r1, [sp, #3892]	; 0xf34
   25a2c:	lsl	r3, fp, #30
   25a30:	orr	r1, r3, sl, lsr #2
   25a34:	str	r1, [sp, #3900]	; 0xf3c
   25a38:	lsl	r3, sl, #30
   25a3c:	orr	r1, r3, fp, lsr #2
   25a40:	str	r1, [sp, #3896]	; 0xf38
   25a44:	add	r3, sp, #3888	; 0xf30
   25a48:	ldrd	r6, [r3]
   25a4c:	add	r3, sp, #3888	; 0xf30
   25a50:	add	r3, r3, #8
   25a54:	ldrd	r2, [r3]
   25a58:	eor	r6, r6, r2
   25a5c:	eor	r7, r7, r3
   25a60:	mov	r2, r6
   25a64:	mov	r3, r7
   25a68:	lsl	r1, fp, #25
   25a6c:	orr	r1, r1, sl, lsr #7
   25a70:	str	r1, [sp, #3908]	; 0xf44
   25a74:	lsl	r1, sl, #25
   25a78:	orr	r1, r1, fp, lsr #7
   25a7c:	str	r1, [sp, #3904]	; 0xf40
   25a80:	add	r1, sp, #3904	; 0xf40
   25a84:	ldrd	r6, [r1]
   25a88:	eor	r6, r6, r2
   25a8c:	eor	r7, r7, r3
   25a90:	strd	r6, [sp, #112]	; 0x70
   25a94:	ldrd	r6, [sp, #40]	; 0x28
   25a98:	orr	r2, r6, sl
   25a9c:	orr	r3, r7, fp
   25aa0:	mov	r0, r2
   25aa4:	mov	r1, r3
   25aa8:	ldrd	r2, [sp]
   25aac:	and	r2, r2, r0
   25ab0:	and	r3, r3, r1
   25ab4:	mov	r0, r2
   25ab8:	mov	r1, r3
   25abc:	mov	r2, r6
   25ac0:	mov	r3, r7
   25ac4:	and	r2, r2, sl
   25ac8:	and	r3, r3, fp
   25acc:	orr	r2, r2, r0
   25ad0:	orr	r3, r3, r1
   25ad4:	mov	r0, r2
   25ad8:	mov	r1, r3
   25adc:	ldrd	r2, [sp, #112]	; 0x70
   25ae0:	adds	r2, r2, r0
   25ae4:	adc	r3, r3, r1
   25ae8:	ldrd	r6, [sp, #64]	; 0x40
   25aec:	adds	r6, r6, r2
   25af0:	adc	r7, r7, r3
   25af4:	strd	r6, [sp, #136]	; 0x88
   25af8:	ldrd	r0, [sp, #8]
   25afc:	lsr	r3, r0, #1
   25b00:	orr	ip, r3, r1, lsl #31
   25b04:	str	ip, [sp, #3912]	; 0xf48
   25b08:	lsr	r3, r1, #1
   25b0c:	orr	ip, r3, r0, lsl #31
   25b10:	str	ip, [sp, #3916]	; 0xf4c
   25b14:	lsr	r3, r0, #8
   25b18:	orr	ip, r3, r1, lsl #24
   25b1c:	str	ip, [sp, #3920]	; 0xf50
   25b20:	lsr	r3, r1, #8
   25b24:	orr	ip, r3, r0, lsl #24
   25b28:	str	ip, [sp, #3924]	; 0xf54
   25b2c:	add	r3, sp, #3904	; 0xf40
   25b30:	add	r3, r3, #8
   25b34:	ldrd	r2, [r3]
   25b38:	add	ip, sp, #3920	; 0xf50
   25b3c:	ldrd	r6, [ip]
   25b40:	eor	r2, r2, r6
   25b44:	eor	r3, r3, r7
   25b48:	lsr	ip, r0, #7
   25b4c:	orr	ip, ip, r1, lsl #25
   25b50:	str	ip, [sp, #584]	; 0x248
   25b54:	lsr	r1, r1, #7
   25b58:	str	r1, [sp, #588]	; 0x24c
   25b5c:	add	r1, sp, #584	; 0x248
   25b60:	ldrd	r6, [r1]
   25b64:	eor	r6, r6, r2
   25b68:	eor	r7, r7, r3
   25b6c:	ldrd	r0, [sp, #120]	; 0x78
   25b70:	adds	r0, r0, r6
   25b74:	adc	r1, r1, r7
   25b78:	mov	r2, r0
   25b7c:	mov	r3, r1
   25b80:	ldrd	r0, [sp, #176]	; 0xb0
   25b84:	adds	r0, r0, r2
   25b88:	adc	r1, r1, r3
   25b8c:	mov	r2, r0
   25b90:	mov	r3, r1
   25b94:	ldrd	r6, [sp, #32]
   25b98:	lsr	r1, r6, #19
   25b9c:	orr	r1, r1, r7, lsl #13
   25ba0:	str	r1, [sp, #3928]	; 0xf58
   25ba4:	lsr	r1, r7, #19
   25ba8:	orr	r1, r1, r6, lsl #13
   25bac:	str	r1, [sp, #3932]	; 0xf5c
   25bb0:	lsl	r1, r7, #3
   25bb4:	orr	r1, r1, r6, lsr #29
   25bb8:	str	r1, [sp, #3940]	; 0xf64
   25bbc:	lsl	r1, r6, #3
   25bc0:	orr	r1, r1, r7, lsr #29
   25bc4:	str	r1, [sp, #3936]	; 0xf60
   25bc8:	add	r1, sp, #3920	; 0xf50
   25bcc:	add	r1, r1, #8
   25bd0:	ldrd	r6, [r1]
   25bd4:	add	r1, sp, #3936	; 0xf60
   25bd8:	ldrd	r0, [r1]
   25bdc:	eor	r6, r6, r0
   25be0:	eor	r7, r7, r1
   25be4:	mov	r0, r6
   25be8:	mov	r1, r7
   25bec:	ldrd	r6, [sp, #32]
   25bf0:	lsr	ip, r6, #6
   25bf4:	orr	ip, ip, r7, lsl #26
   25bf8:	str	ip, [sp, #592]	; 0x250
   25bfc:	ldr	ip, [sp, #36]	; 0x24
   25c00:	lsr	ip, ip, #6
   25c04:	str	ip, [sp, #596]	; 0x254
   25c08:	add	ip, sp, #592	; 0x250
   25c0c:	ldrd	r6, [ip]
   25c10:	eor	r6, r6, r0
   25c14:	eor	r7, r7, r1
   25c18:	adds	r6, r2, r6
   25c1c:	adc	r7, r3, r7
   25c20:	strd	r4, [sp, #120]	; 0x78
   25c24:	mov	r0, r4
   25c28:	mov	r1, r5
   25c2c:	eor	r0, r0, r8
   25c30:	eor	r1, r1, r9
   25c34:	ldrd	r4, [sp, #56]	; 0x38
   25c38:	and	r4, r4, r0
   25c3c:	and	r5, r5, r1
   25c40:	mov	r0, r4
   25c44:	mov	r1, r5
   25c48:	eor	r0, r0, r8
   25c4c:	eor	r1, r1, r9
   25c50:	add	r3, pc, #104	; 0x68
   25c54:	ldrd	r2, [r3]
   25c58:	strd	r6, [sp, #112]	; 0x70
   25c5c:	adds	r6, r6, r2
   25c60:	adc	r7, r7, r3
   25c64:	mov	r2, r6
   25c68:	mov	r3, r7
   25c6c:	ldrd	r6, [sp, #48]	; 0x30
   25c70:	adds	r6, r6, r2
   25c74:	adc	r7, r7, r3
   25c78:	adds	r0, r0, r6
   25c7c:	adc	r1, r1, r7
   25c80:	ldrd	r4, [sp, #56]	; 0x38
   25c84:	lsr	r3, r4, #14
   25c88:	orr	ip, r3, r5, lsl #18
   25c8c:	str	ip, [sp, #3944]	; 0xf68
   25c90:	lsr	r3, r5, #14
   25c94:	orr	ip, r3, r4, lsl #18
   25c98:	str	ip, [sp, #3948]	; 0xf6c
   25c9c:	lsr	r3, r4, #18
   25ca0:	orr	ip, r3, r5, lsl #14
   25ca4:	str	ip, [sp, #3952]	; 0xf70
   25ca8:	lsr	r3, r5, #18
   25cac:	orr	ip, r3, r4, lsl #14
   25cb0:	b	25cd0 <__assert_fail@plt+0x149e4>
   25cb4:	nop			; (mov r0, r0)
   25cb8:	strne	r3, [r2], #1339	; 0x53b
   25cbc:	rsbsls	r2, r2, #34048	; 0x8500
   25cc0:	ldclmi	3, cr0, [r1], #400	; 0x190
   25cc4:	adcsge	lr, pc, #10551296	; 0xa10000
   25cc8:	mcrrlt	0, 0, r3, r2, cr1
   25ccc:	ldmdage	sl, {r0, r1, r3, r6, r9, sl, sp, lr}
   25cd0:	str	ip, [sp, #3956]	; 0xf74
   25cd4:	add	r3, sp, #3936	; 0xf60
   25cd8:	add	r3, r3, #8
   25cdc:	ldrd	r2, [r3]
   25ce0:	add	ip, sp, #3952	; 0xf70
   25ce4:	ldrd	r6, [ip]
   25ce8:	eor	r2, r2, r6
   25cec:	eor	r3, r3, r7
   25cf0:	lsl	ip, r5, #23
   25cf4:	orr	ip, ip, r4, lsr #9
   25cf8:	str	ip, [sp, #3964]	; 0xf7c
   25cfc:	lsl	ip, r4, #23
   25d00:	orr	ip, ip, r5, lsr #9
   25d04:	str	ip, [sp, #3960]	; 0xf78
   25d08:	add	ip, sp, #3952	; 0xf70
   25d0c:	add	ip, ip, #8
   25d10:	ldrd	r6, [ip]
   25d14:	eor	r6, r6, r2
   25d18:	eor	r7, r7, r3
   25d1c:	adds	r6, r0, r6
   25d20:	adc	r7, r1, r7
   25d24:	mov	r2, r6
   25d28:	mov	r3, r7
   25d2c:	strd	r2, [sp, #64]	; 0x40
   25d30:	ldrd	r0, [sp]
   25d34:	adds	r0, r0, r6
   25d38:	adc	r1, r1, r7
   25d3c:	mov	r2, r0
   25d40:	mov	r3, r1
   25d44:	strd	r2, [sp, #48]	; 0x30
   25d48:	ldrd	r6, [sp, #136]	; 0x88
   25d4c:	lsr	r3, r6, #28
   25d50:	orr	r1, r3, r7, lsl #4
   25d54:	str	r1, [sp, #3968]	; 0xf80
   25d58:	lsr	r3, r7, #28
   25d5c:	orr	r1, r3, r6, lsl #4
   25d60:	str	r1, [sp, #3972]	; 0xf84
   25d64:	lsl	r3, r7, #30
   25d68:	orr	r1, r3, r6, lsr #2
   25d6c:	str	r1, [sp, #3980]	; 0xf8c
   25d70:	lsl	r3, r6, #30
   25d74:	orr	r1, r3, r7, lsr #2
   25d78:	str	r1, [sp, #3976]	; 0xf88
   25d7c:	add	r3, sp, #3968	; 0xf80
   25d80:	ldrd	r2, [r3]
   25d84:	add	r1, sp, #3968	; 0xf80
   25d88:	add	r1, r1, #8
   25d8c:	ldrd	r4, [r1]
   25d90:	eor	r2, r2, r4
   25d94:	eor	r3, r3, r5
   25d98:	lsl	r1, r7, #25
   25d9c:	orr	r1, r1, r6, lsr #7
   25da0:	str	r1, [sp, #3988]	; 0xf94
   25da4:	lsl	r1, r6, #25
   25da8:	orr	r1, r1, r7, lsr #7
   25dac:	str	r1, [sp, #3984]	; 0xf90
   25db0:	add	r1, sp, #3984	; 0xf90
   25db4:	ldrd	r4, [r1]
   25db8:	eor	r4, r4, r2
   25dbc:	eor	r5, r5, r3
   25dc0:	mov	r2, r4
   25dc4:	mov	r3, r5
   25dc8:	mov	r4, sl
   25dcc:	mov	r5, fp
   25dd0:	orr	sl, sl, r6
   25dd4:	orr	fp, fp, r7
   25dd8:	mov	r0, sl
   25ddc:	mov	r1, fp
   25de0:	ldrd	sl, [sp, #40]	; 0x28
   25de4:	and	sl, sl, r0
   25de8:	and	fp, fp, r1
   25dec:	mov	r0, sl
   25df0:	mov	r1, fp
   25df4:	mov	sl, r4
   25df8:	mov	fp, r5
   25dfc:	and	sl, sl, r6
   25e00:	and	fp, fp, r7
   25e04:	orr	r0, r0, sl
   25e08:	orr	r1, r1, fp
   25e0c:	adds	r0, r0, r2
   25e10:	adc	r1, r1, r3
   25e14:	ldrd	r2, [sp, #64]	; 0x40
   25e18:	adds	r2, r2, r0
   25e1c:	adc	r3, r3, r1
   25e20:	strd	r2, [sp, #64]	; 0x40
   25e24:	ldrd	sl, [sp, #128]	; 0x80
   25e28:	lsr	r3, sl, #1
   25e2c:	orr	r2, r3, fp, lsl #31
   25e30:	str	r2, [sp, #3992]	; 0xf98
   25e34:	lsr	r3, fp, #1
   25e38:	orr	r2, r3, sl, lsl #31
   25e3c:	str	r2, [sp, #3996]	; 0xf9c
   25e40:	lsr	r3, sl, #8
   25e44:	orr	r2, r3, fp, lsl #24
   25e48:	str	r2, [sp, #4000]	; 0xfa0
   25e4c:	lsr	r3, fp, #8
   25e50:	orr	r2, r3, sl, lsl #24
   25e54:	str	r2, [sp, #4004]	; 0xfa4
   25e58:	add	r3, sp, #3984	; 0xf90
   25e5c:	add	r3, r3, #8
   25e60:	ldrd	r2, [r3]
   25e64:	add	r1, sp, #4000	; 0xfa0
   25e68:	ldrd	r4, [r1]
   25e6c:	eor	r2, r2, r4
   25e70:	eor	r3, r3, r5
   25e74:	lsr	r1, sl, #7
   25e78:	orr	r1, r1, fp, lsl #25
   25e7c:	str	r1, [sp, #600]	; 0x258
   25e80:	lsr	r1, fp, #7
   25e84:	str	r1, [sp, #604]	; 0x25c
   25e88:	add	r1, sp, #600	; 0x258
   25e8c:	ldrd	r4, [r1]
   25e90:	eor	r4, r4, r2
   25e94:	eor	r5, r5, r3
   25e98:	ldrd	r0, [sp, #8]
   25e9c:	adds	r0, r0, r4
   25ea0:	adc	r1, r1, r5
   25ea4:	ldrd	sl, [sp, #24]
   25ea8:	adds	sl, sl, r0
   25eac:	adc	fp, fp, r1
   25eb0:	mov	r2, sl
   25eb4:	mov	r3, fp
   25eb8:	ldrd	r4, [sp, #96]	; 0x60
   25ebc:	lsr	r1, r4, #19
   25ec0:	orr	r1, r1, r5, lsl #13
   25ec4:	str	r1, [sp, #4008]	; 0xfa8
   25ec8:	lsr	r1, r5, #19
   25ecc:	orr	r1, r1, r4, lsl #13
   25ed0:	str	r1, [sp, #4012]	; 0xfac
   25ed4:	lsl	r1, r5, #3
   25ed8:	orr	r1, r1, r4, lsr #29
   25edc:	str	r1, [sp, #4020]	; 0xfb4
   25ee0:	lsl	r1, r4, #3
   25ee4:	orr	r1, r1, r5, lsr #29
   25ee8:	str	r1, [sp, #4016]	; 0xfb0
   25eec:	add	r1, sp, #4000	; 0xfa0
   25ef0:	add	r1, r1, #8
   25ef4:	ldrd	r0, [r1]
   25ef8:	add	ip, sp, #4016	; 0xfb0
   25efc:	ldrd	sl, [ip]
   25f00:	eor	r0, r0, sl
   25f04:	eor	r1, r1, fp
   25f08:	lsr	ip, r4, #6
   25f0c:	orr	ip, ip, r5, lsl #26
   25f10:	str	ip, [sp, #608]	; 0x260
   25f14:	lsr	ip, r5, #6
   25f18:	str	ip, [sp, #612]	; 0x264
   25f1c:	add	ip, sp, #608	; 0x260
   25f20:	ldrd	r4, [ip]
   25f24:	eor	r4, r4, r0
   25f28:	eor	r5, r5, r1
   25f2c:	adds	r4, r2, r4
   25f30:	adc	r5, r3, r5
   25f34:	mov	sl, r4
   25f38:	mov	fp, r5
   25f3c:	ldrd	r4, [sp, #120]	; 0x78
   25f40:	ldrd	r2, [sp, #56]	; 0x38
   25f44:	eor	r2, r2, r4
   25f48:	eor	r3, r3, r5
   25f4c:	mov	r0, r2
   25f50:	mov	r1, r3
   25f54:	ldrd	r2, [sp, #48]	; 0x30
   25f58:	and	r2, r2, r0
   25f5c:	and	r3, r3, r1
   25f60:	mov	r0, r2
   25f64:	mov	r1, r3
   25f68:	mov	r2, r4
   25f6c:	mov	r3, r5
   25f70:	eor	r2, r2, r0
   25f74:	eor	r3, r3, r1
   25f78:	mov	r0, r2
   25f7c:	mov	r1, r3
   25f80:	sub	r3, pc, #704	; 0x2c0
   25f84:	ldrd	r2, [r3]
   25f88:	strd	sl, [sp, #120]	; 0x78
   25f8c:	adds	sl, sl, r2
   25f90:	adc	fp, fp, r3
   25f94:	adds	r8, r8, sl
   25f98:	adc	r9, r9, fp
   25f9c:	adds	r0, r0, r8
   25fa0:	adc	r1, r1, r9
   25fa4:	ldrd	sl, [sp, #48]	; 0x30
   25fa8:	lsr	r3, sl, #14
   25fac:	orr	r2, r3, fp, lsl #18
   25fb0:	str	r2, [sp, #4024]	; 0xfb8
   25fb4:	lsr	r3, fp, #14
   25fb8:	orr	r2, r3, sl, lsl #18
   25fbc:	str	r2, [sp, #4028]	; 0xfbc
   25fc0:	lsr	r3, sl, #18
   25fc4:	orr	r2, r3, fp, lsl #14
   25fc8:	str	r2, [sp, #4032]	; 0xfc0
   25fcc:	lsr	r3, fp, #18
   25fd0:	orr	r2, r3, sl, lsl #14
   25fd4:	str	r2, [sp, #4036]	; 0xfc4
   25fd8:	add	r3, sp, #4016	; 0xfb0
   25fdc:	add	r3, r3, #8
   25fe0:	ldrd	r2, [r3]
   25fe4:	add	ip, sp, #4032	; 0xfc0
   25fe8:	ldrd	r8, [ip]
   25fec:	eor	r2, r2, r8
   25ff0:	eor	r3, r3, r9
   25ff4:	lsl	ip, fp, #23
   25ff8:	mov	r8, sl
   25ffc:	mov	r9, fp
   26000:	orr	ip, ip, sl, lsr #9
   26004:	str	ip, [sp, #4044]	; 0xfcc
   26008:	lsl	ip, r8, #23
   2600c:	orr	ip, ip, r9, lsr #9
   26010:	str	ip, [sp, #4040]	; 0xfc8
   26014:	add	ip, sp, #4032	; 0xfc0
   26018:	add	ip, ip, #8
   2601c:	ldrd	r8, [ip]
   26020:	eor	r8, r8, r2
   26024:	eor	r9, r9, r3
   26028:	adds	r8, r0, r8
   2602c:	adc	r9, r1, r9
   26030:	mov	r2, r8
   26034:	mov	r3, r9
   26038:	ldrd	r8, [sp, #40]	; 0x28
   2603c:	strd	r2, [sp]
   26040:	adds	r8, r8, r2
   26044:	adc	r9, r9, r3
   26048:	ldrd	sl, [sp, #64]	; 0x40
   2604c:	lsr	r3, sl, #28
   26050:	orr	r1, r3, fp, lsl #4
   26054:	str	r1, [sp, #4048]	; 0xfd0
   26058:	lsr	r3, fp, #28
   2605c:	orr	r1, r3, sl, lsl #4
   26060:	str	r1, [sp, #4052]	; 0xfd4
   26064:	lsl	r3, fp, #30
   26068:	orr	r1, r3, sl, lsr #2
   2606c:	str	r1, [sp, #4060]	; 0xfdc
   26070:	lsl	r3, sl, #30
   26074:	orr	r1, r3, fp, lsr #2
   26078:	str	r1, [sp, #4056]	; 0xfd8
   2607c:	add	r3, sp, #4048	; 0xfd0
   26080:	ldrd	r2, [r3]
   26084:	add	r1, sp, #4048	; 0xfd0
   26088:	add	r1, r1, #8
   2608c:	ldrd	r0, [r1]
   26090:	eor	r2, r2, r0
   26094:	eor	r3, r3, r1
   26098:	lsl	r1, fp, #25
   2609c:	orr	r1, r1, sl, lsr #7
   260a0:	str	r1, [sp, #4068]	; 0xfe4
   260a4:	lsl	r1, sl, #25
   260a8:	orr	r1, r1, fp, lsr #7
   260ac:	str	r1, [sp, #4064]	; 0xfe0
   260b0:	add	r1, sp, #4064	; 0xfe0
   260b4:	ldrd	r0, [r1]
   260b8:	eor	r0, r0, r2
   260bc:	eor	r1, r1, r3
   260c0:	mov	r2, r0
   260c4:	mov	r3, r1
   260c8:	orr	r0, sl, r6
   260cc:	orr	r1, fp, r7
   260d0:	ldrd	sl, [sp, #184]	; 0xb8
   260d4:	and	sl, sl, r0
   260d8:	and	fp, fp, r1
   260dc:	mov	r0, sl
   260e0:	mov	r1, fp
   260e4:	ldrd	r6, [sp, #136]	; 0x88
   260e8:	ldrd	sl, [sp, #64]	; 0x40
   260ec:	and	sl, sl, r6
   260f0:	and	fp, fp, r7
   260f4:	orr	r6, sl, r0
   260f8:	orr	r7, fp, r1
   260fc:	adds	r0, r6, r2
   26100:	adc	r1, r7, r3
   26104:	ldrd	r2, [sp]
   26108:	adds	r2, r2, r0
   2610c:	adc	r3, r3, r1
   26110:	strd	r2, [sp]
   26114:	ldrd	r0, [sp, #104]	; 0x68
   26118:	lsr	r3, r0, #1
   2611c:	orr	ip, r3, r1, lsl #31
   26120:	str	ip, [sp, #4072]	; 0xfe8
   26124:	lsr	r3, r1, #1
   26128:	orr	ip, r3, r0, lsl #31
   2612c:	str	ip, [sp, #4076]	; 0xfec
   26130:	lsr	r3, r0, #8
   26134:	orr	ip, r3, r1, lsl #24
   26138:	str	ip, [sp, #4080]	; 0xff0
   2613c:	lsr	r3, r1, #8
   26140:	orr	ip, r3, r0, lsl #24
   26144:	str	ip, [sp, #4084]	; 0xff4
   26148:	add	r3, sp, #4064	; 0xfe0
   2614c:	add	r3, r3, #8
   26150:	ldrd	r2, [r3]
   26154:	add	ip, sp, #4080	; 0xff0
   26158:	ldrd	r6, [ip]
   2615c:	eor	r2, r2, r6
   26160:	eor	r3, r3, r7
   26164:	lsr	ip, r0, #7
   26168:	orr	ip, ip, r1, lsl #25
   2616c:	str	ip, [sp, #616]	; 0x268
   26170:	lsr	r1, r1, #7
   26174:	str	r1, [sp, #620]	; 0x26c
   26178:	add	r1, sp, #616	; 0x268
   2617c:	ldrd	r6, [r1]
   26180:	eor	r6, r6, r2
   26184:	eor	r7, r7, r3
   26188:	ldrd	r0, [sp, #128]	; 0x80
   2618c:	adds	r0, r0, r6
   26190:	adc	r1, r1, r7
   26194:	mov	r2, r0
   26198:	mov	r3, r1
   2619c:	ldrd	r0, [sp, #72]	; 0x48
   261a0:	adds	r0, r0, r2
   261a4:	adc	r1, r1, r3
   261a8:	mov	r2, r0
   261ac:	mov	r3, r1
   261b0:	ldrd	sl, [sp, #112]	; 0x70
   261b4:	lsr	r1, sl, #19
   261b8:	orr	r1, r1, fp, lsl #13
   261bc:	str	r1, [sp, #4088]	; 0xff8
   261c0:	lsr	r1, fp, #19
   261c4:	orr	r1, r1, sl, lsl #13
   261c8:	str	r1, [sp, #4092]	; 0xffc
   261cc:	lsl	r1, fp, #3
   261d0:	orr	r1, r1, sl, lsr #29
   261d4:	add	r0, sp, #4096	; 0x1000
   261d8:	add	r0, r0, #4
   261dc:	str	r1, [r0]
   261e0:	lsl	r1, sl, #3
   261e4:	orr	r1, r1, fp, lsr #29
   261e8:	add	r0, sp, #4096	; 0x1000
   261ec:	str	r1, [r0]
   261f0:	add	r1, sp, #4080	; 0xff0
   261f4:	add	r1, r1, #8
   261f8:	ldrd	r6, [r1]
   261fc:	ldrd	r0, [r0]
   26200:	eor	r6, r6, r0
   26204:	eor	r7, r7, r1
   26208:	mov	r0, r6
   2620c:	mov	r1, r7
   26210:	lsr	ip, sl, #6
   26214:	orr	ip, ip, fp, lsl #26
   26218:	str	ip, [sp, #624]	; 0x270
   2621c:	lsr	ip, fp, #6
   26220:	str	ip, [sp, #628]	; 0x274
   26224:	add	ip, sp, #624	; 0x270
   26228:	ldrd	r6, [ip]
   2622c:	eor	r6, r6, r0
   26230:	eor	r7, r7, r1
   26234:	adds	sl, r2, r6
   26238:	adc	fp, r3, r7
   2623c:	ldrd	r2, [sp, #56]	; 0x38
   26240:	mov	r0, r2
   26244:	mov	r1, r3
   26248:	ldrd	r6, [sp, #48]	; 0x30
   2624c:	eor	r0, r0, r6
   26250:	eor	r1, r1, r7
   26254:	and	r0, r0, r8
   26258:	and	r1, r1, r9
   2625c:	eor	r2, r2, r0
   26260:	eor	r3, r3, r1
   26264:	mov	r0, r2
   26268:	mov	r1, r3
   2626c:	add	r3, pc, #892	; 0x37c
   26270:	ldrd	r2, [r3]
   26274:	strd	sl, [sp, #8]
   26278:	adds	sl, sl, r2
   2627c:	adc	fp, fp, r3
   26280:	adds	r4, r4, sl
   26284:	adc	r5, r5, fp
   26288:	adds	r0, r0, r4
   2628c:	adc	r1, r1, r5
   26290:	lsr	r3, r8, #14
   26294:	orr	ip, r3, r9, lsl #18
   26298:	add	r3, sp, #4096	; 0x1000
   2629c:	add	r3, r3, #8
   262a0:	str	ip, [r3]
   262a4:	lsr	r3, r9, #14
   262a8:	orr	ip, r3, r8, lsl #18
   262ac:	add	r3, sp, #4096	; 0x1000
   262b0:	add	r3, r3, #12
   262b4:	str	ip, [r3]
   262b8:	lsr	r3, r8, #18
   262bc:	orr	ip, r3, r9, lsl #14
   262c0:	add	r3, sp, #4096	; 0x1000
   262c4:	add	r3, r3, #16
   262c8:	str	ip, [r3]
   262cc:	lsr	r3, r9, #18
   262d0:	orr	ip, r3, r8, lsl #14
   262d4:	add	r3, sp, #4096	; 0x1000
   262d8:	add	r3, r3, #20
   262dc:	str	ip, [r3]
   262e0:	add	r3, sp, #4096	; 0x1000
   262e4:	add	r3, r3, #8
   262e8:	ldrd	r2, [r3]
   262ec:	add	ip, sp, #4096	; 0x1000
   262f0:	add	ip, ip, #16
   262f4:	ldrd	r6, [ip]
   262f8:	eor	r2, r2, r6
   262fc:	eor	r3, r3, r7
   26300:	lsl	ip, r9, #23
   26304:	orr	ip, ip, r8, lsr #9
   26308:	add	r4, sp, #4096	; 0x1000
   2630c:	add	r4, r4, #28
   26310:	str	ip, [r4]
   26314:	lsl	ip, r8, #23
   26318:	orr	ip, ip, r9, lsr #9
   2631c:	add	r4, sp, #4096	; 0x1000
   26320:	add	r4, r4, #24
   26324:	str	ip, [r4]
   26328:	ldrd	r6, [r4]
   2632c:	eor	r6, r6, r2
   26330:	eor	r7, r7, r3
   26334:	adds	r4, r0, r6
   26338:	adc	r5, r1, r7
   2633c:	ldrd	sl, [sp, #184]	; 0xb8
   26340:	adds	sl, sl, r4
   26344:	adc	fp, fp, r5
   26348:	ldrd	r0, [sp]
   2634c:	lsr	r3, r0, #28
   26350:	orr	r2, r3, r1, lsl #4
   26354:	add	r3, sp, #4096	; 0x1000
   26358:	add	r3, r3, #32
   2635c:	str	r2, [r3]
   26360:	lsr	r3, r1, #28
   26364:	orr	r2, r3, r0, lsl #4
   26368:	add	r3, sp, #4096	; 0x1000
   2636c:	add	r3, r3, #36	; 0x24
   26370:	str	r2, [r3]
   26374:	lsl	r3, r1, #30
   26378:	orr	r2, r3, r0, lsr #2
   2637c:	add	r3, sp, #4096	; 0x1000
   26380:	add	r3, r3, #44	; 0x2c
   26384:	str	r2, [r3]
   26388:	lsl	r3, r0, #30
   2638c:	orr	r2, r3, r1, lsr #2
   26390:	add	r3, sp, #4096	; 0x1000
   26394:	add	r3, r3, #40	; 0x28
   26398:	str	r2, [r3]
   2639c:	add	r3, sp, #4096	; 0x1000
   263a0:	add	r3, r3, #32
   263a4:	ldrd	r2, [r3]
   263a8:	add	ip, sp, #4096	; 0x1000
   263ac:	add	ip, ip, #40	; 0x28
   263b0:	ldrd	r6, [ip]
   263b4:	eor	r2, r2, r6
   263b8:	eor	r3, r3, r7
   263bc:	mov	r6, r0
   263c0:	mov	r7, r1
   263c4:	lsl	r1, r1, #25
   263c8:	orr	r1, r1, r6, lsr #7
   263cc:	add	r0, sp, #4096	; 0x1000
   263d0:	add	r0, r0, #52	; 0x34
   263d4:	str	r1, [r0]
   263d8:	lsl	r1, r6, #25
   263dc:	orr	r1, r1, r7, lsr #7
   263e0:	add	r0, sp, #4096	; 0x1000
   263e4:	add	r0, r0, #48	; 0x30
   263e8:	str	r1, [r0]
   263ec:	ldrd	r6, [r0]
   263f0:	eor	r6, r6, r2
   263f4:	eor	r7, r7, r3
   263f8:	strd	r6, [sp, #40]	; 0x28
   263fc:	ldrd	r2, [sp]
   26400:	ldrd	r6, [sp, #64]	; 0x40
   26404:	orr	r6, r6, r2
   26408:	orr	r7, r7, r3
   2640c:	mov	r0, r6
   26410:	mov	r1, r7
   26414:	ldrd	r6, [sp, #136]	; 0x88
   26418:	and	r6, r6, r0
   2641c:	and	r7, r7, r1
   26420:	mov	r0, r6
   26424:	mov	r1, r7
   26428:	ldrd	r6, [sp, #64]	; 0x40
   2642c:	and	r6, r6, r2
   26430:	and	r7, r7, r3
   26434:	orr	r2, r6, r0
   26438:	orr	r3, r7, r1
   2643c:	mov	r0, r2
   26440:	mov	r1, r3
   26444:	ldrd	r2, [sp, #40]	; 0x28
   26448:	adds	r2, r2, r0
   2644c:	adc	r3, r3, r1
   26450:	adds	r4, r4, r2
   26454:	adc	r5, r5, r3
   26458:	strd	r4, [sp, #192]	; 0xc0
   2645c:	ldrd	r4, [sp, #144]	; 0x90
   26460:	lsr	r3, r4, #1
   26464:	orr	r1, r3, r5, lsl #31
   26468:	add	r3, sp, #4096	; 0x1000
   2646c:	add	r3, r3, #56	; 0x38
   26470:	str	r1, [r3]
   26474:	lsr	r3, r5, #1
   26478:	orr	r1, r3, r4, lsl #31
   2647c:	add	r3, sp, #4096	; 0x1000
   26480:	add	r3, r3, #60	; 0x3c
   26484:	str	r1, [r3]
   26488:	lsr	r3, r4, #8
   2648c:	orr	r1, r3, r5, lsl #24
   26490:	add	r3, sp, #4160	; 0x1040
   26494:	str	r1, [r3]
   26498:	lsr	r3, r5, #8
   2649c:	orr	r1, r3, r4, lsl #24
   264a0:	add	r3, sp, #4160	; 0x1040
   264a4:	add	r3, r3, #4
   264a8:	str	r1, [r3]
   264ac:	add	r3, sp, #4096	; 0x1000
   264b0:	add	r3, r3, #56	; 0x38
   264b4:	ldrd	r2, [r3]
   264b8:	add	r1, sp, #4160	; 0x1040
   264bc:	ldrd	r6, [r1]
   264c0:	eor	r2, r2, r6
   264c4:	eor	r3, r3, r7
   264c8:	lsr	r1, r4, #7
   264cc:	orr	r1, r1, r5, lsl #25
   264d0:	str	r1, [sp, #632]	; 0x278
   264d4:	lsr	r1, r5, #7
   264d8:	str	r1, [sp, #636]	; 0x27c
   264dc:	add	r1, sp, #632	; 0x278
   264e0:	ldrd	r6, [r1]
   264e4:	eor	r6, r6, r2
   264e8:	eor	r7, r7, r3
   264ec:	ldrd	r0, [sp, #104]	; 0x68
   264f0:	adds	r0, r0, r6
   264f4:	adc	r1, r1, r7
   264f8:	ldrd	r4, [sp, #80]	; 0x50
   264fc:	adds	r4, r4, r0
   26500:	adc	r5, r5, r1
   26504:	mov	r2, r4
   26508:	mov	r3, r5
   2650c:	ldrd	r4, [sp, #120]	; 0x78
   26510:	lsr	r1, r4, #19
   26514:	orr	r1, r1, r5, lsl #13
   26518:	add	r0, sp, #4160	; 0x1040
   2651c:	add	r0, r0, #8
   26520:	str	r1, [r0]
   26524:	lsr	r1, r5, #19
   26528:	orr	r1, r1, r4, lsl #13
   2652c:	add	r0, sp, #4160	; 0x1040
   26530:	add	r0, r0, #12
   26534:	str	r1, [r0]
   26538:	lsl	r1, r5, #3
   2653c:	orr	r1, r1, r4, lsr #29
   26540:	add	r0, sp, #4160	; 0x1040
   26544:	add	r0, r0, #20
   26548:	str	r1, [r0]
   2654c:	lsl	r1, r4, #3
   26550:	orr	r1, r1, r5, lsr #29
   26554:	add	r0, sp, #4160	; 0x1040
   26558:	add	r0, r0, #16
   2655c:	str	r1, [r0]
   26560:	add	r1, sp, #4160	; 0x1040
   26564:	add	r1, r1, #8
   26568:	ldrd	r6, [r1]
   2656c:	ldrd	r0, [r0]
   26570:	eor	r6, r6, r0
   26574:	eor	r7, r7, r1
   26578:	mov	r0, r6
   2657c:	mov	r1, r7
   26580:	lsr	ip, r4, #6
   26584:	orr	ip, ip, r5, lsl #26
   26588:	str	ip, [sp, #640]	; 0x280
   2658c:	lsr	ip, r5, #6
   26590:	str	ip, [sp, #644]	; 0x284
   26594:	add	ip, sp, #640	; 0x280
   26598:	ldrd	r6, [ip]
   2659c:	eor	r6, r6, r0
   265a0:	eor	r7, r7, r1
   265a4:	adds	r4, r2, r6
   265a8:	adc	r5, r3, r7
   265ac:	mov	r6, r4
   265b0:	mov	r7, r5
   265b4:	ldrd	r0, [sp, #48]	; 0x30
   265b8:	eor	r0, r0, r8
   265bc:	eor	r1, r1, r9
   265c0:	mov	r4, sl
   265c4:	mov	r5, fp
   265c8:	mov	r2, sl
   265cc:	mov	r3, fp
   265d0:	and	r2, r2, r0
   265d4:	and	r3, r3, r1
   265d8:	ldrd	sl, [sp, #48]	; 0x30
   265dc:	eor	sl, sl, r2
   265e0:	eor	fp, fp, r3
   265e4:	mov	r0, sl
   265e8:	mov	r1, fp
   265ec:	b	26600 <__assert_fail@plt+0x15314>
   265f0:	smlalsle	r9, r8, r1, r7
   265f4:	subgt	r8, fp, #112, 22	; 0x1c000
   265f8:			; <UNDEFINED> instruction: 0x0654be30
   265fc:	strbgt	r5, [ip, -r3, lsr #3]!
   26600:	sub	r3, pc, #16
   26604:	ldrd	r2, [r3]
   26608:	strd	r6, [sp, #104]	; 0x68
   2660c:	adds	sl, r6, r2
   26610:	adc	fp, r7, r3
   26614:	mov	r2, sl
   26618:	mov	r3, fp
   2661c:	ldrd	sl, [sp, #56]	; 0x38
   26620:	adds	sl, sl, r2
   26624:	adc	fp, fp, r3
   26628:	adds	r0, r0, sl
   2662c:	adc	r1, r1, fp
   26630:	lsr	r3, r4, #14
   26634:	orr	ip, r3, r5, lsl #18
   26638:	add	r3, sp, #4160	; 0x1040
   2663c:	add	r3, r3, #24
   26640:	str	ip, [r3]
   26644:	lsr	r3, r5, #14
   26648:	orr	ip, r3, r4, lsl #18
   2664c:	add	r3, sp, #4160	; 0x1040
   26650:	add	r3, r3, #28
   26654:	str	ip, [r3]
   26658:	lsr	r3, r4, #18
   2665c:	orr	ip, r3, r5, lsl #14
   26660:	add	r3, sp, #4160	; 0x1040
   26664:	add	r3, r3, #32
   26668:	str	ip, [r3]
   2666c:	lsr	r3, r5, #18
   26670:	orr	ip, r3, r4, lsl #14
   26674:	add	r3, sp, #4160	; 0x1040
   26678:	add	r3, r3, #36	; 0x24
   2667c:	str	ip, [r3]
   26680:	add	r3, sp, #4160	; 0x1040
   26684:	add	r3, r3, #24
   26688:	ldrd	r2, [r3]
   2668c:	add	ip, sp, #4160	; 0x1040
   26690:	add	ip, ip, #32
   26694:	ldrd	r6, [ip]
   26698:	eor	r2, r2, r6
   2669c:	eor	r3, r3, r7
   266a0:	lsl	ip, r5, #23
   266a4:	orr	ip, ip, r4, lsr #9
   266a8:	add	r6, sp, #4160	; 0x1040
   266ac:	add	r6, r6, #44	; 0x2c
   266b0:	str	ip, [r6]
   266b4:	lsl	ip, r4, #23
   266b8:	orr	ip, ip, r5, lsr #9
   266bc:	add	r6, sp, #4160	; 0x1040
   266c0:	add	r6, r6, #40	; 0x28
   266c4:	str	ip, [r6]
   266c8:	ldrd	r6, [r6]
   266cc:	eor	r6, r6, r2
   266d0:	eor	r7, r7, r3
   266d4:	adds	r6, r0, r6
   266d8:	adc	r7, r1, r7
   266dc:	mov	r2, r6
   266e0:	mov	r3, r7
   266e4:	ldrd	r6, [sp, #136]	; 0x88
   266e8:	strd	r2, [sp, #56]	; 0x38
   266ec:	adds	r6, r6, r2
   266f0:	adc	r7, r7, r3
   266f4:	strd	r6, [sp, #40]	; 0x28
   266f8:	ldrd	sl, [sp, #192]	; 0xc0
   266fc:	lsr	r3, sl, #28
   26700:	orr	r1, r3, fp, lsl #4
   26704:	add	r3, sp, #4160	; 0x1040
   26708:	add	r3, r3, #48	; 0x30
   2670c:	str	r1, [r3]
   26710:	lsr	r3, fp, #28
   26714:	orr	r1, r3, sl, lsl #4
   26718:	add	r3, sp, #4160	; 0x1040
   2671c:	add	r3, r3, #52	; 0x34
   26720:	str	r1, [r3]
   26724:	lsl	r3, fp, #30
   26728:	orr	r1, r3, sl, lsr #2
   2672c:	add	r3, sp, #4160	; 0x1040
   26730:	add	r3, r3, #60	; 0x3c
   26734:	str	r1, [r3]
   26738:	lsl	r3, sl, #30
   2673c:	orr	r1, r3, fp, lsr #2
   26740:	add	r3, sp, #4160	; 0x1040
   26744:	add	r3, r3, #56	; 0x38
   26748:	str	r1, [r3]
   2674c:	add	r3, sp, #4160	; 0x1040
   26750:	add	r3, r3, #48	; 0x30
   26754:	ldrd	r6, [r3]
   26758:	add	r3, sp, #4160	; 0x1040
   2675c:	add	r3, r3, #56	; 0x38
   26760:	ldrd	r2, [r3]
   26764:	eor	r6, r6, r2
   26768:	eor	r7, r7, r3
   2676c:	mov	r2, r6
   26770:	mov	r3, r7
   26774:	lsl	r1, fp, #25
   26778:	orr	r1, r1, sl, lsr #7
   2677c:	add	r0, sp, #4224	; 0x1080
   26780:	add	r0, r0, #4
   26784:	str	r1, [r0]
   26788:	lsl	r1, sl, #25
   2678c:	orr	r1, r1, fp, lsr #7
   26790:	add	r0, sp, #4224	; 0x1080
   26794:	str	r1, [r0]
   26798:	ldrd	r6, [r0]
   2679c:	eor	r6, r6, r2
   267a0:	eor	r7, r7, r3
   267a4:	strd	r6, [sp, #128]	; 0x80
   267a8:	ldrd	r6, [sp]
   267ac:	orr	r2, r6, sl
   267b0:	orr	r3, r7, fp
   267b4:	mov	r0, r2
   267b8:	mov	r1, r3
   267bc:	ldrd	r2, [sp, #64]	; 0x40
   267c0:	and	r2, r2, r0
   267c4:	and	r3, r3, r1
   267c8:	mov	r0, r2
   267cc:	mov	r1, r3
   267d0:	mov	r2, r6
   267d4:	mov	r3, r7
   267d8:	and	r2, r2, sl
   267dc:	and	r3, r3, fp
   267e0:	orr	r2, r2, r0
   267e4:	orr	r3, r3, r1
   267e8:	mov	r0, r2
   267ec:	mov	r1, r3
   267f0:	ldrd	r2, [sp, #128]	; 0x80
   267f4:	adds	r2, r2, r0
   267f8:	adc	r3, r3, r1
   267fc:	ldrd	r6, [sp, #56]	; 0x38
   26800:	adds	r6, r6, r2
   26804:	adc	r7, r7, r3
   26808:	strd	r6, [sp, #184]	; 0xb8
   2680c:	ldrd	r0, [sp, #152]	; 0x98
   26810:	lsr	r3, r0, #1
   26814:	orr	ip, r3, r1, lsl #31
   26818:	add	r3, sp, #4224	; 0x1080
   2681c:	add	r3, r3, #8
   26820:	str	ip, [r3]
   26824:	lsr	r3, r1, #1
   26828:	orr	ip, r3, r0, lsl #31
   2682c:	add	r3, sp, #4224	; 0x1080
   26830:	add	r3, r3, #12
   26834:	str	ip, [r3]
   26838:	lsr	r3, r0, #8
   2683c:	orr	ip, r3, r1, lsl #24
   26840:	add	r3, sp, #4224	; 0x1080
   26844:	add	r3, r3, #16
   26848:	str	ip, [r3]
   2684c:	lsr	r3, r1, #8
   26850:	orr	ip, r3, r0, lsl #24
   26854:	add	r3, sp, #4224	; 0x1080
   26858:	add	r3, r3, #20
   2685c:	str	ip, [r3]
   26860:	add	r3, sp, #4224	; 0x1080
   26864:	add	r3, r3, #8
   26868:	ldrd	r2, [r3]
   2686c:	add	ip, sp, #4224	; 0x1080
   26870:	add	ip, ip, #16
   26874:	ldrd	r6, [ip]
   26878:	eor	r2, r2, r6
   2687c:	eor	r3, r3, r7
   26880:	lsr	ip, r0, #7
   26884:	orr	ip, ip, r1, lsl #25
   26888:	str	ip, [sp, #648]	; 0x288
   2688c:	lsr	r1, r1, #7
   26890:	str	r1, [sp, #652]	; 0x28c
   26894:	add	r1, sp, #648	; 0x288
   26898:	ldrd	r6, [r1]
   2689c:	eor	r6, r6, r2
   268a0:	eor	r7, r7, r3
   268a4:	ldrd	r0, [sp, #144]	; 0x90
   268a8:	adds	r0, r0, r6
   268ac:	adc	r1, r1, r7
   268b0:	mov	r2, r0
   268b4:	mov	r3, r1
   268b8:	ldrd	r0, [sp, #88]	; 0x58
   268bc:	adds	r0, r0, r2
   268c0:	adc	r1, r1, r3
   268c4:	mov	r2, r0
   268c8:	mov	r3, r1
   268cc:	ldrd	r6, [sp, #8]
   268d0:	lsr	r1, r6, #19
   268d4:	orr	r1, r1, r7, lsl #13
   268d8:	add	r0, sp, #4224	; 0x1080
   268dc:	add	r0, r0, #24
   268e0:	str	r1, [r0]
   268e4:	lsr	r1, r7, #19
   268e8:	orr	r1, r1, r6, lsl #13
   268ec:	add	r0, sp, #4224	; 0x1080
   268f0:	add	r0, r0, #28
   268f4:	str	r1, [r0]
   268f8:	lsl	r1, r7, #3
   268fc:	orr	r1, r1, r6, lsr #29
   26900:	add	r0, sp, #4224	; 0x1080
   26904:	add	r0, r0, #36	; 0x24
   26908:	str	r1, [r0]
   2690c:	lsl	r1, r6, #3
   26910:	orr	r1, r1, r7, lsr #29
   26914:	add	r0, sp, #4224	; 0x1080
   26918:	add	r0, r0, #32
   2691c:	str	r1, [r0]
   26920:	add	r1, sp, #4224	; 0x1080
   26924:	add	r1, r1, #24
   26928:	ldrd	r6, [r1]
   2692c:	ldrd	r0, [r0]
   26930:	eor	r6, r6, r0
   26934:	eor	r7, r7, r1
   26938:	mov	r0, r6
   2693c:	mov	r1, r7
   26940:	ldrd	r6, [sp, #8]
   26944:	lsr	ip, r6, #6
   26948:	orr	ip, ip, r7, lsl #26
   2694c:	str	ip, [sp, #656]	; 0x290
   26950:	ldr	ip, [sp, #12]
   26954:	lsr	ip, ip, #6
   26958:	str	ip, [sp, #660]	; 0x294
   2695c:	add	ip, sp, #656	; 0x290
   26960:	ldrd	r6, [ip]
   26964:	eor	r6, r6, r0
   26968:	eor	r7, r7, r1
   2696c:	adds	r6, r2, r6
   26970:	adc	r7, r3, r7
   26974:	strd	r4, [sp, #136]	; 0x88
   26978:	mov	r0, r4
   2697c:	mov	r1, r5
   26980:	eor	r0, r0, r8
   26984:	eor	r1, r1, r9
   26988:	ldrd	r4, [sp, #40]	; 0x28
   2698c:	and	r4, r4, r0
   26990:	and	r5, r5, r1
   26994:	mov	r0, r4
   26998:	mov	r1, r5
   2699c:	eor	r0, r0, r8
   269a0:	eor	r1, r1, r9
   269a4:	add	r3, pc, #892	; 0x37c
   269a8:	ldrd	r2, [r3]
   269ac:	strd	r6, [sp, #128]	; 0x80
   269b0:	adds	r6, r6, r2
   269b4:	adc	r7, r7, r3
   269b8:	mov	r2, r6
   269bc:	mov	r3, r7
   269c0:	ldrd	r6, [sp, #48]	; 0x30
   269c4:	adds	r6, r6, r2
   269c8:	adc	r7, r7, r3
   269cc:	adds	r0, r0, r6
   269d0:	adc	r1, r1, r7
   269d4:	ldrd	r4, [sp, #40]	; 0x28
   269d8:	lsr	r3, r4, #14
   269dc:	orr	ip, r3, r5, lsl #18
   269e0:	add	r3, sp, #4224	; 0x1080
   269e4:	add	r3, r3, #40	; 0x28
   269e8:	str	ip, [r3]
   269ec:	lsr	r3, r5, #14
   269f0:	orr	ip, r3, r4, lsl #18
   269f4:	add	r3, sp, #4224	; 0x1080
   269f8:	add	r3, r3, #44	; 0x2c
   269fc:	str	ip, [r3]
   26a00:	lsr	r3, r4, #18
   26a04:	orr	ip, r3, r5, lsl #14
   26a08:	add	r3, sp, #4224	; 0x1080
   26a0c:	add	r3, r3, #48	; 0x30
   26a10:	str	ip, [r3]
   26a14:	lsr	r3, r5, #18
   26a18:	orr	ip, r3, r4, lsl #14
   26a1c:	add	r3, sp, #4224	; 0x1080
   26a20:	add	r3, r3, #52	; 0x34
   26a24:	str	ip, [r3]
   26a28:	add	r3, sp, #4224	; 0x1080
   26a2c:	add	r3, r3, #40	; 0x28
   26a30:	ldrd	r2, [r3]
   26a34:	add	ip, sp, #4224	; 0x1080
   26a38:	add	ip, ip, #48	; 0x30
   26a3c:	ldrd	r6, [ip]
   26a40:	eor	r2, r2, r6
   26a44:	eor	r3, r3, r7
   26a48:	lsl	ip, r5, #23
   26a4c:	orr	ip, ip, r4, lsr #9
   26a50:	add	r6, sp, #4224	; 0x1080
   26a54:	add	r6, r6, #60	; 0x3c
   26a58:	str	ip, [r6]
   26a5c:	lsl	ip, r4, #23
   26a60:	orr	ip, ip, r5, lsr #9
   26a64:	add	r4, sp, #4224	; 0x1080
   26a68:	add	r4, r4, #56	; 0x38
   26a6c:	str	ip, [r4]
   26a70:	ldrd	r6, [r4]
   26a74:	eor	r6, r6, r2
   26a78:	eor	r7, r7, r3
   26a7c:	adds	r6, r0, r6
   26a80:	adc	r7, r1, r7
   26a84:	mov	r2, r6
   26a88:	mov	r3, r7
   26a8c:	strd	r2, [sp, #56]	; 0x38
   26a90:	ldrd	r0, [sp, #64]	; 0x40
   26a94:	adds	r0, r0, r6
   26a98:	adc	r1, r1, r7
   26a9c:	mov	r2, r0
   26aa0:	mov	r3, r1
   26aa4:	strd	r2, [sp, #48]	; 0x30
   26aa8:	ldrd	r6, [sp, #184]	; 0xb8
   26aac:	lsr	r3, r6, #28
   26ab0:	orr	r1, r3, r7, lsl #4
   26ab4:	add	r3, sp, #4288	; 0x10c0
   26ab8:	str	r1, [r3]
   26abc:	lsr	r3, r7, #28
   26ac0:	orr	r1, r3, r6, lsl #4
   26ac4:	add	r3, sp, #4288	; 0x10c0
   26ac8:	add	r3, r3, #4
   26acc:	str	r1, [r3]
   26ad0:	lsl	r3, r7, #30
   26ad4:	orr	r1, r3, r6, lsr #2
   26ad8:	add	r3, sp, #4288	; 0x10c0
   26adc:	add	r3, r3, #12
   26ae0:	str	r1, [r3]
   26ae4:	lsl	r3, r6, #30
   26ae8:	orr	r1, r3, r7, lsr #2
   26aec:	add	r3, sp, #4288	; 0x10c0
   26af0:	add	r3, r3, #8
   26af4:	str	r1, [r3]
   26af8:	add	r3, sp, #4288	; 0x10c0
   26afc:	ldrd	r2, [r3]
   26b00:	add	r1, sp, #4288	; 0x10c0
   26b04:	add	r1, r1, #8
   26b08:	ldrd	r4, [r1]
   26b0c:	eor	r2, r2, r4
   26b10:	eor	r3, r3, r5
   26b14:	lsl	r1, r7, #25
   26b18:	orr	r1, r1, r6, lsr #7
   26b1c:	add	r0, sp, #4288	; 0x10c0
   26b20:	add	r0, r0, #20
   26b24:	str	r1, [r0]
   26b28:	lsl	r1, r6, #25
   26b2c:	orr	r1, r1, r7, lsr #7
   26b30:	add	r0, sp, #4288	; 0x10c0
   26b34:	add	r0, r0, #16
   26b38:	str	r1, [r0]
   26b3c:	ldrd	r4, [r0]
   26b40:	eor	r4, r4, r2
   26b44:	eor	r5, r5, r3
   26b48:	mov	r2, r4
   26b4c:	mov	r3, r5
   26b50:	mov	r4, sl
   26b54:	mov	r5, fp
   26b58:	orr	sl, sl, r6
   26b5c:	orr	fp, fp, r7
   26b60:	mov	r0, sl
   26b64:	mov	r1, fp
   26b68:	ldrd	sl, [sp]
   26b6c:	and	sl, sl, r0
   26b70:	and	fp, fp, r1
   26b74:	mov	r0, sl
   26b78:	mov	r1, fp
   26b7c:	mov	sl, r4
   26b80:	mov	fp, r5
   26b84:	and	sl, sl, r6
   26b88:	and	fp, fp, r7
   26b8c:	orr	r0, r0, sl
   26b90:	orr	r1, r1, fp
   26b94:	adds	r0, r0, r2
   26b98:	adc	r1, r1, r3
   26b9c:	ldrd	r2, [sp, #56]	; 0x38
   26ba0:	adds	r2, r2, r0
   26ba4:	adc	r3, r3, r1
   26ba8:	strd	r2, [sp, #56]	; 0x38
   26bac:	ldrd	sl, [sp, #16]
   26bb0:	lsr	r3, sl, #1
   26bb4:	orr	r2, r3, fp, lsl #31
   26bb8:	add	r3, sp, #4288	; 0x10c0
   26bbc:	add	r3, r3, #24
   26bc0:	str	r2, [r3]
   26bc4:	lsr	r3, fp, #1
   26bc8:	orr	r2, r3, sl, lsl #31
   26bcc:	add	r3, sp, #4288	; 0x10c0
   26bd0:	add	r3, r3, #28
   26bd4:	str	r2, [r3]
   26bd8:	lsr	r3, sl, #8
   26bdc:	orr	r2, r3, fp, lsl #24
   26be0:	add	r3, sp, #4288	; 0x10c0
   26be4:	add	r3, r3, #32
   26be8:	str	r2, [r3]
   26bec:	lsr	r3, fp, #8
   26bf0:	orr	r2, r3, sl, lsl #24
   26bf4:	add	r3, sp, #4288	; 0x10c0
   26bf8:	add	r3, r3, #36	; 0x24
   26bfc:	str	r2, [r3]
   26c00:	add	r3, sp, #4288	; 0x10c0
   26c04:	add	r3, r3, #24
   26c08:	ldrd	r2, [r3]
   26c0c:	add	r1, sp, #4288	; 0x10c0
   26c10:	add	r1, r1, #32
   26c14:	ldrd	r0, [r1]
   26c18:	eor	r2, r2, r0
   26c1c:	eor	r3, r3, r1
   26c20:	lsr	r1, sl, #7
   26c24:	orr	r1, r1, fp, lsl #25
   26c28:	str	r1, [sp, #664]	; 0x298
   26c2c:	lsr	r1, fp, #7
   26c30:	str	r1, [sp, #668]	; 0x29c
   26c34:	add	r1, sp, #664	; 0x298
   26c38:	ldrd	sl, [r1]
   26c3c:	eor	sl, sl, r2
   26c40:	eor	fp, fp, r3
   26c44:	ldrd	r0, [sp, #152]	; 0x98
   26c48:	adds	r0, r0, sl
   26c4c:	adc	r1, r1, fp
   26c50:	ldrd	sl, [sp, #32]
   26c54:	adds	sl, sl, r0
   26c58:	adc	fp, fp, r1
   26c5c:	mov	r2, sl
   26c60:	mov	r3, fp
   26c64:	ldrd	r4, [sp, #104]	; 0x68
   26c68:	lsr	r1, r4, #19
   26c6c:	orr	r1, r1, r5, lsl #13
   26c70:	add	r0, sp, #4288	; 0x10c0
   26c74:	add	r0, r0, #40	; 0x28
   26c78:	str	r1, [r0]
   26c7c:	lsr	r1, r5, #19
   26c80:	orr	r1, r1, r4, lsl #13
   26c84:	add	r0, sp, #4288	; 0x10c0
   26c88:	add	r0, r0, #44	; 0x2c
   26c8c:	str	r1, [r0]
   26c90:	lsl	r1, r5, #3
   26c94:	orr	r1, r1, r4, lsr #29
   26c98:	add	r0, sp, #4288	; 0x10c0
   26c9c:	add	r0, r0, #52	; 0x34
   26ca0:	str	r1, [r0]
   26ca4:	lsl	r1, r4, #3
   26ca8:	orr	r1, r1, r5, lsr #29
   26cac:	add	r0, sp, #4288	; 0x10c0
   26cb0:	add	r0, r0, #48	; 0x30
   26cb4:	str	r1, [r0]
   26cb8:	add	r1, sp, #4288	; 0x10c0
   26cbc:	add	r1, r1, #40	; 0x28
   26cc0:	ldrd	r0, [r1]
   26cc4:	add	ip, sp, #4288	; 0x10c0
   26cc8:	add	ip, ip, #48	; 0x30
   26ccc:	ldrd	sl, [ip]
   26cd0:	eor	r0, r0, sl
   26cd4:	eor	r1, r1, fp
   26cd8:	lsr	ip, r4, #6
   26cdc:	orr	ip, ip, r5, lsl #26
   26ce0:	str	ip, [sp, #672]	; 0x2a0
   26ce4:	lsr	ip, r5, #6
   26ce8:	str	ip, [sp, #676]	; 0x2a4
   26cec:	add	ip, sp, #672	; 0x2a0
   26cf0:	ldrd	r4, [ip]
   26cf4:	eor	r4, r4, r0
   26cf8:	eor	r5, r5, r1
   26cfc:	adds	r4, r2, r4
   26d00:	adc	r5, r3, r5
   26d04:	mov	sl, r4
   26d08:	mov	fp, r5
   26d0c:	ldrd	r4, [sp, #136]	; 0x88
   26d10:	ldrd	r2, [sp, #40]	; 0x28
   26d14:	eor	r2, r2, r4
   26d18:	eor	r3, r3, r5
   26d1c:	mov	r0, r2
   26d20:	mov	r1, r3
   26d24:	b	26d38 <__assert_fail@plt+0x15a4c>
   26d28:	usatle	r5, #15, r8, lsl #4
   26d2c:	orrsle	lr, r2, r9, lsl r8
   26d30:	strbpl	sl, [r5, #-2320]!	; 0xfffff6f0
   26d34:	ldrle	r0, [r9], r4, lsr #12
   26d38:	ldrd	r2, [sp, #48]	; 0x30
   26d3c:	and	r2, r2, r0
   26d40:	and	r3, r3, r1
   26d44:	mov	r0, r2
   26d48:	mov	r1, r3
   26d4c:	mov	r2, r4
   26d50:	mov	r3, r5
   26d54:	eor	r2, r2, r0
   26d58:	eor	r3, r3, r1
   26d5c:	mov	r0, r2
   26d60:	mov	r1, r3
   26d64:	sub	r3, pc, #60	; 0x3c
   26d68:	ldrd	r2, [r3]
   26d6c:	strd	sl, [sp, #136]	; 0x88
   26d70:	adds	sl, sl, r2
   26d74:	adc	fp, fp, r3
   26d78:	adds	r8, r8, sl
   26d7c:	adc	r9, r9, fp
   26d80:	adds	r0, r0, r8
   26d84:	adc	r1, r1, r9
   26d88:	ldrd	sl, [sp, #48]	; 0x30
   26d8c:	lsr	r3, sl, #14
   26d90:	orr	r2, r3, fp, lsl #18
   26d94:	add	r3, sp, #4288	; 0x10c0
   26d98:	add	r3, r3, #56	; 0x38
   26d9c:	str	r2, [r3]
   26da0:	lsr	r3, fp, #14
   26da4:	orr	r2, r3, sl, lsl #18
   26da8:	add	r3, sp, #4288	; 0x10c0
   26dac:	add	r3, r3, #60	; 0x3c
   26db0:	str	r2, [r3]
   26db4:	lsr	r3, sl, #18
   26db8:	orr	r2, r3, fp, lsl #14
   26dbc:	add	r3, sp, #4352	; 0x1100
   26dc0:	str	r2, [r3]
   26dc4:	lsr	r3, fp, #18
   26dc8:	orr	r2, r3, sl, lsl #14
   26dcc:	add	r3, sp, #4352	; 0x1100
   26dd0:	add	r3, r3, #4
   26dd4:	str	r2, [r3]
   26dd8:	add	r3, sp, #4288	; 0x10c0
   26ddc:	add	r3, r3, #56	; 0x38
   26de0:	ldrd	r2, [r3]
   26de4:	add	ip, sp, #4352	; 0x1100
   26de8:	ldrd	r8, [ip]
   26dec:	eor	r2, r2, r8
   26df0:	eor	r3, r3, r9
   26df4:	lsl	ip, fp, #23
   26df8:	mov	r8, sl
   26dfc:	mov	r9, fp
   26e00:	orr	ip, ip, sl, lsr #9
   26e04:	add	sl, sp, #4352	; 0x1100
   26e08:	add	sl, sl, #12
   26e0c:	str	ip, [sl]
   26e10:	lsl	ip, r8, #23
   26e14:	orr	ip, ip, r9, lsr #9
   26e18:	add	r8, sp, #4352	; 0x1100
   26e1c:	add	r8, r8, #8
   26e20:	str	ip, [r8]
   26e24:	ldrd	r8, [r8]
   26e28:	eor	r8, r8, r2
   26e2c:	eor	r9, r9, r3
   26e30:	adds	r8, r0, r8
   26e34:	adc	r9, r1, r9
   26e38:	mov	r2, r8
   26e3c:	mov	r3, r9
   26e40:	ldrd	r8, [sp]
   26e44:	strd	r2, [sp]
   26e48:	adds	r8, r8, r2
   26e4c:	adc	r9, r9, r3
   26e50:	ldrd	sl, [sp, #56]	; 0x38
   26e54:	lsr	r3, sl, #28
   26e58:	orr	r1, r3, fp, lsl #4
   26e5c:	add	r3, sp, #4352	; 0x1100
   26e60:	add	r3, r3, #16
   26e64:	str	r1, [r3]
   26e68:	lsr	r3, fp, #28
   26e6c:	orr	r1, r3, sl, lsl #4
   26e70:	add	r3, sp, #4352	; 0x1100
   26e74:	add	r3, r3, #20
   26e78:	str	r1, [r3]
   26e7c:	lsl	r3, fp, #30
   26e80:	orr	r1, r3, sl, lsr #2
   26e84:	add	r3, sp, #4352	; 0x1100
   26e88:	add	r3, r3, #28
   26e8c:	str	r1, [r3]
   26e90:	lsl	r3, sl, #30
   26e94:	orr	r1, r3, fp, lsr #2
   26e98:	add	r3, sp, #4352	; 0x1100
   26e9c:	add	r3, r3, #24
   26ea0:	str	r1, [r3]
   26ea4:	add	r3, sp, #4352	; 0x1100
   26ea8:	add	r3, r3, #16
   26eac:	ldrd	r2, [r3]
   26eb0:	add	r1, sp, #4352	; 0x1100
   26eb4:	add	r1, r1, #24
   26eb8:	ldrd	r0, [r1]
   26ebc:	eor	r2, r2, r0
   26ec0:	eor	r3, r3, r1
   26ec4:	lsl	r1, fp, #25
   26ec8:	orr	r1, r1, sl, lsr #7
   26ecc:	add	r0, sp, #4352	; 0x1100
   26ed0:	add	r0, r0, #36	; 0x24
   26ed4:	str	r1, [r0]
   26ed8:	lsl	r1, sl, #25
   26edc:	orr	r1, r1, fp, lsr #7
   26ee0:	add	r0, sp, #4352	; 0x1100
   26ee4:	add	r0, r0, #32
   26ee8:	str	r1, [r0]
   26eec:	ldrd	r0, [r0]
   26ef0:	eor	r0, r0, r2
   26ef4:	eor	r1, r1, r3
   26ef8:	mov	r2, r0
   26efc:	mov	r3, r1
   26f00:	orr	r0, sl, r6
   26f04:	orr	r1, fp, r7
   26f08:	ldrd	sl, [sp, #192]	; 0xc0
   26f0c:	and	sl, sl, r0
   26f10:	and	fp, fp, r1
   26f14:	mov	r0, sl
   26f18:	mov	r1, fp
   26f1c:	ldrd	r6, [sp, #184]	; 0xb8
   26f20:	ldrd	sl, [sp, #56]	; 0x38
   26f24:	and	sl, sl, r6
   26f28:	and	fp, fp, r7
   26f2c:	orr	r6, sl, r0
   26f30:	orr	r7, fp, r1
   26f34:	adds	r0, r6, r2
   26f38:	adc	r1, r7, r3
   26f3c:	ldrd	r2, [sp]
   26f40:	adds	r2, r2, r0
   26f44:	adc	r3, r3, r1
   26f48:	strd	r2, [sp]
   26f4c:	ldrd	r0, [sp, #160]	; 0xa0
   26f50:	lsr	r3, r0, #1
   26f54:	orr	ip, r3, r1, lsl #31
   26f58:	add	r3, sp, #4352	; 0x1100
   26f5c:	add	r3, r3, #40	; 0x28
   26f60:	str	ip, [r3]
   26f64:	lsr	r3, r1, #1
   26f68:	orr	ip, r3, r0, lsl #31
   26f6c:	add	r3, sp, #4352	; 0x1100
   26f70:	add	r3, r3, #44	; 0x2c
   26f74:	str	ip, [r3]
   26f78:	lsr	r3, r0, #8
   26f7c:	orr	ip, r3, r1, lsl #24
   26f80:	add	r3, sp, #4352	; 0x1100
   26f84:	add	r3, r3, #48	; 0x30
   26f88:	str	ip, [r3]
   26f8c:	lsr	r3, r1, #8
   26f90:	orr	ip, r3, r0, lsl #24
   26f94:	add	r3, sp, #4352	; 0x1100
   26f98:	add	r3, r3, #52	; 0x34
   26f9c:	str	ip, [r3]
   26fa0:	add	r3, sp, #4352	; 0x1100
   26fa4:	add	r3, r3, #40	; 0x28
   26fa8:	ldrd	r2, [r3]
   26fac:	add	ip, sp, #4352	; 0x1100
   26fb0:	add	ip, ip, #48	; 0x30
   26fb4:	ldrd	r6, [ip]
   26fb8:	eor	r2, r2, r6
   26fbc:	eor	r3, r3, r7
   26fc0:	lsr	ip, r0, #7
   26fc4:	orr	ip, ip, r1, lsl #25
   26fc8:	str	ip, [sp, #680]	; 0x2a8
   26fcc:	lsr	r1, r1, #7
   26fd0:	str	r1, [sp, #684]	; 0x2ac
   26fd4:	add	r1, sp, #680	; 0x2a8
   26fd8:	ldrd	r6, [r1]
   26fdc:	eor	r6, r6, r2
   26fe0:	eor	r7, r7, r3
   26fe4:	ldrd	r0, [sp, #16]
   26fe8:	adds	r0, r0, r6
   26fec:	adc	r1, r1, r7
   26ff0:	ldrd	sl, [sp, #96]	; 0x60
   26ff4:	adds	sl, sl, r0
   26ff8:	adc	fp, fp, r1
   26ffc:	mov	r2, sl
   27000:	mov	r3, fp
   27004:	ldrd	sl, [sp, #128]	; 0x80
   27008:	lsr	r1, sl, #19
   2700c:	orr	r1, r1, fp, lsl #13
   27010:	add	r0, sp, #4352	; 0x1100
   27014:	add	r0, r0, #56	; 0x38
   27018:	str	r1, [r0]
   2701c:	lsr	r1, fp, #19
   27020:	orr	r1, r1, sl, lsl #13
   27024:	add	r0, sp, #4352	; 0x1100
   27028:	add	r0, r0, #60	; 0x3c
   2702c:	str	r1, [r0]
   27030:	lsl	r1, fp, #3
   27034:	orr	r1, r1, sl, lsr #29
   27038:	add	r0, sp, #4416	; 0x1140
   2703c:	add	r0, r0, #4
   27040:	str	r1, [r0]
   27044:	lsl	r1, sl, #3
   27048:	orr	r1, r1, fp, lsr #29
   2704c:	add	r0, sp, #4416	; 0x1140
   27050:	str	r1, [r0]
   27054:	add	r1, sp, #4352	; 0x1100
   27058:	add	r1, r1, #56	; 0x38
   2705c:	ldrd	r6, [r1]
   27060:	ldrd	r0, [r0]
   27064:	eor	r6, r6, r0
   27068:	eor	r7, r7, r1
   2706c:	mov	r0, r6
   27070:	mov	r1, r7
   27074:	lsr	ip, sl, #6
   27078:	orr	ip, ip, fp, lsl #26
   2707c:	str	ip, [sp, #688]	; 0x2b0
   27080:	lsr	ip, fp, #6
   27084:	str	ip, [sp, #692]	; 0x2b4
   27088:	add	ip, sp, #688	; 0x2b0
   2708c:	ldrd	r6, [ip]
   27090:	eor	r6, r6, r0
   27094:	eor	r7, r7, r1
   27098:	adds	sl, r2, r6
   2709c:	adc	fp, r3, r7
   270a0:	ldrd	r2, [sp, #40]	; 0x28
   270a4:	mov	r0, r2
   270a8:	mov	r1, r3
   270ac:	ldrd	r6, [sp, #48]	; 0x30
   270b0:	eor	r0, r0, r6
   270b4:	eor	r1, r1, r7
   270b8:	and	r0, r0, r8
   270bc:	and	r1, r1, r9
   270c0:	eor	r2, r2, r0
   270c4:	eor	r3, r3, r1
   270c8:	mov	r0, r2
   270cc:	mov	r1, r3
   270d0:	add	r3, pc, #896	; 0x380
   270d4:	ldrd	r2, [r3]
   270d8:	strd	sl, [sp, #16]
   270dc:	adds	sl, sl, r2
   270e0:	adc	fp, fp, r3
   270e4:	adds	r4, r4, sl
   270e8:	adc	r5, r5, fp
   270ec:	adds	r0, r0, r4
   270f0:	adc	r1, r1, r5
   270f4:	lsr	r3, r8, #14
   270f8:	orr	ip, r3, r9, lsl #18
   270fc:	add	r3, sp, #4416	; 0x1140
   27100:	add	r3, r3, #8
   27104:	str	ip, [r3]
   27108:	lsr	r3, r9, #14
   2710c:	orr	ip, r3, r8, lsl #18
   27110:	add	r3, sp, #4416	; 0x1140
   27114:	add	r3, r3, #12
   27118:	str	ip, [r3]
   2711c:	lsr	r3, r8, #18
   27120:	orr	ip, r3, r9, lsl #14
   27124:	add	r3, sp, #4416	; 0x1140
   27128:	add	r3, r3, #16
   2712c:	str	ip, [r3]
   27130:	lsr	r3, r9, #18
   27134:	orr	ip, r3, r8, lsl #14
   27138:	add	r3, sp, #4416	; 0x1140
   2713c:	add	r3, r3, #20
   27140:	str	ip, [r3]
   27144:	add	r3, sp, #4416	; 0x1140
   27148:	add	r3, r3, #8
   2714c:	ldrd	r2, [r3]
   27150:	add	ip, sp, #4416	; 0x1140
   27154:	add	ip, ip, #16
   27158:	ldrd	r6, [ip]
   2715c:	eor	r2, r2, r6
   27160:	eor	r3, r3, r7
   27164:	lsl	ip, r9, #23
   27168:	orr	ip, ip, r8, lsr #9
   2716c:	add	r4, sp, #4416	; 0x1140
   27170:	add	r4, r4, #28
   27174:	str	ip, [r4]
   27178:	lsl	ip, r8, #23
   2717c:	orr	ip, ip, r9, lsr #9
   27180:	add	r4, sp, #4416	; 0x1140
   27184:	add	r4, r4, #24
   27188:	str	ip, [r4]
   2718c:	ldrd	r6, [r4]
   27190:	eor	r6, r6, r2
   27194:	eor	r7, r7, r3
   27198:	adds	r4, r0, r6
   2719c:	adc	r5, r1, r7
   271a0:	ldrd	sl, [sp, #192]	; 0xc0
   271a4:	adds	sl, sl, r4
   271a8:	adc	fp, fp, r5
   271ac:	ldrd	r0, [sp]
   271b0:	lsr	r3, r0, #28
   271b4:	orr	r2, r3, r1, lsl #4
   271b8:	add	r3, sp, #4416	; 0x1140
   271bc:	add	r3, r3, #32
   271c0:	str	r2, [r3]
   271c4:	lsr	r3, r1, #28
   271c8:	orr	r2, r3, r0, lsl #4
   271cc:	add	r3, sp, #4416	; 0x1140
   271d0:	add	r3, r3, #36	; 0x24
   271d4:	str	r2, [r3]
   271d8:	lsl	r3, r1, #30
   271dc:	orr	r2, r3, r0, lsr #2
   271e0:	add	r3, sp, #4416	; 0x1140
   271e4:	add	r3, r3, #44	; 0x2c
   271e8:	str	r2, [r3]
   271ec:	lsl	r3, r0, #30
   271f0:	orr	r2, r3, r1, lsr #2
   271f4:	add	r3, sp, #4416	; 0x1140
   271f8:	add	r3, r3, #40	; 0x28
   271fc:	str	r2, [r3]
   27200:	add	r3, sp, #4416	; 0x1140
   27204:	add	r3, r3, #32
   27208:	ldrd	r2, [r3]
   2720c:	add	ip, sp, #4416	; 0x1140
   27210:	add	ip, ip, #40	; 0x28
   27214:	ldrd	r6, [ip]
   27218:	eor	r2, r2, r6
   2721c:	eor	r3, r3, r7
   27220:	mov	r6, r0
   27224:	mov	r7, r1
   27228:	lsl	r1, r1, #25
   2722c:	orr	r1, r1, r6, lsr #7
   27230:	add	r0, sp, #4416	; 0x1140
   27234:	add	r0, r0, #52	; 0x34
   27238:	str	r1, [r0]
   2723c:	lsl	r1, r6, #25
   27240:	orr	r1, r1, r7, lsr #7
   27244:	add	r0, sp, #4416	; 0x1140
   27248:	add	r0, r0, #48	; 0x30
   2724c:	str	r1, [r0]
   27250:	ldrd	r6, [r0]
   27254:	eor	r6, r6, r2
   27258:	eor	r7, r7, r3
   2725c:	strd	r6, [sp, #64]	; 0x40
   27260:	ldrd	r2, [sp]
   27264:	ldrd	r6, [sp, #56]	; 0x38
   27268:	orr	r6, r6, r2
   2726c:	orr	r7, r7, r3
   27270:	mov	r0, r6
   27274:	mov	r1, r7
   27278:	ldrd	r6, [sp, #184]	; 0xb8
   2727c:	and	r6, r6, r0
   27280:	and	r7, r7, r1
   27284:	mov	r0, r6
   27288:	mov	r1, r7
   2728c:	ldrd	r6, [sp, #56]	; 0x38
   27290:	and	r6, r6, r2
   27294:	and	r7, r7, r3
   27298:	orr	r2, r6, r0
   2729c:	orr	r3, r7, r1
   272a0:	mov	r0, r2
   272a4:	mov	r1, r3
   272a8:	ldrd	r2, [sp, #64]	; 0x40
   272ac:	adds	r2, r2, r0
   272b0:	adc	r3, r3, r1
   272b4:	adds	r4, r4, r2
   272b8:	adc	r5, r5, r3
   272bc:	strd	r4, [sp, #192]	; 0xc0
   272c0:	ldrd	r4, [sp, #168]	; 0xa8
   272c4:	lsr	r3, r4, #1
   272c8:	orr	r1, r3, r5, lsl #31
   272cc:	add	r3, sp, #4416	; 0x1140
   272d0:	add	r3, r3, #56	; 0x38
   272d4:	str	r1, [r3]
   272d8:	lsr	r3, r5, #1
   272dc:	orr	r1, r3, r4, lsl #31
   272e0:	add	r3, sp, #4416	; 0x1140
   272e4:	add	r3, r3, #60	; 0x3c
   272e8:	str	r1, [r3]
   272ec:	lsr	r3, r4, #8
   272f0:	orr	r1, r3, r5, lsl #24
   272f4:	add	r3, sp, #4480	; 0x1180
   272f8:	str	r1, [r3]
   272fc:	lsr	r3, r5, #8
   27300:	orr	r1, r3, r4, lsl #24
   27304:	add	r3, sp, #4480	; 0x1180
   27308:	add	r3, r3, #4
   2730c:	str	r1, [r3]
   27310:	add	r3, sp, #4416	; 0x1140
   27314:	add	r3, r3, #56	; 0x38
   27318:	ldrd	r2, [r3]
   2731c:	add	r1, sp, #4480	; 0x1180
   27320:	ldrd	r6, [r1]
   27324:	eor	r2, r2, r6
   27328:	eor	r3, r3, r7
   2732c:	lsr	r1, r4, #7
   27330:	orr	r1, r1, r5, lsl #25
   27334:	str	r1, [sp, #696]	; 0x2b8
   27338:	lsr	r1, r5, #7
   2733c:	str	r1, [sp, #700]	; 0x2bc
   27340:	add	r1, sp, #696	; 0x2b8
   27344:	ldrd	r6, [r1]
   27348:	eor	r6, r6, r2
   2734c:	eor	r7, r7, r3
   27350:	ldrd	r0, [sp, #160]	; 0xa0
   27354:	adds	r0, r0, r6
   27358:	adc	r1, r1, r7
   2735c:	ldrd	r4, [sp, #112]	; 0x70
   27360:	adds	r4, r4, r0
   27364:	adc	r5, r5, r1
   27368:	mov	r2, r4
   2736c:	mov	r3, r5
   27370:	ldrd	r4, [sp, #136]	; 0x88
   27374:	lsr	r1, r4, #19
   27378:	orr	r1, r1, r5, lsl #13
   2737c:	add	r0, sp, #4480	; 0x1180
   27380:	add	r0, r0, #8
   27384:	str	r1, [r0]
   27388:	lsr	r1, r5, #19
   2738c:	orr	r1, r1, r4, lsl #13
   27390:	add	r0, sp, #4480	; 0x1180
   27394:	add	r0, r0, #12
   27398:	str	r1, [r0]
   2739c:	lsl	r1, r5, #3
   273a0:	orr	r1, r1, r4, lsr #29
   273a4:	add	r0, sp, #4480	; 0x1180
   273a8:	add	r0, r0, #20
   273ac:	str	r1, [r0]
   273b0:	lsl	r1, r4, #3
   273b4:	orr	r1, r1, r5, lsr #29
   273b8:	add	r0, sp, #4480	; 0x1180
   273bc:	add	r0, r0, #16
   273c0:	str	r1, [r0]
   273c4:	add	r1, sp, #4480	; 0x1180
   273c8:	add	r1, r1, #8
   273cc:	ldrd	r6, [r1]
   273d0:	ldrd	r0, [r0]
   273d4:	eor	r6, r6, r0
   273d8:	eor	r7, r7, r1
   273dc:	mov	r0, r6
   273e0:	mov	r1, r7
   273e4:	lsr	ip, r4, #6
   273e8:	orr	ip, ip, r5, lsl #26
   273ec:	str	ip, [sp, #704]	; 0x2c0
   273f0:	lsr	ip, r5, #6
   273f4:	str	ip, [sp, #708]	; 0x2c4
   273f8:	add	ip, sp, #704	; 0x2c0
   273fc:	ldrd	r6, [ip]
   27400:	eor	r6, r6, r0
   27404:	eor	r7, r7, r1
   27408:	adds	r4, r2, r6
   2740c:	adc	r5, r3, r7
   27410:	mov	r6, r4
   27414:	mov	r7, r5
   27418:	ldrd	r0, [sp, #48]	; 0x30
   2741c:	eor	r0, r0, r8
   27420:	eor	r1, r1, r9
   27424:	mov	r4, sl
   27428:	mov	r5, fp
   2742c:	mov	r2, sl
   27430:	mov	r3, fp
   27434:	and	r2, r2, r0
   27438:	and	r3, r3, r1
   2743c:	ldrd	sl, [sp, #48]	; 0x30
   27440:	eor	sl, sl, r2
   27444:	eor	fp, fp, r3
   27448:	mov	r0, sl
   2744c:	mov	r1, fp
   27450:	b	27468 <__assert_fail@plt+0x1617c>
   27454:	nop			; (mov r0, r0)
   27458:	ldrbpl	r2, [r1, -sl, lsr #32]!
   2745c:	vst3.32	{d3,d5,d7}, [lr], r5
   27460:	adcscc	sp, fp, #184, 2	; 0x2e
   27464:	rsbne	sl, sl, r0, ror r0
   27468:	sub	r3, pc, #16
   2746c:	ldrd	r2, [r3]
   27470:	strd	r6, [sp, #144]	; 0x90
   27474:	adds	sl, r6, r2
   27478:	adc	fp, r7, r3
   2747c:	mov	r2, sl
   27480:	mov	r3, fp
   27484:	ldrd	sl, [sp, #40]	; 0x28
   27488:	adds	sl, sl, r2
   2748c:	adc	fp, fp, r3
   27490:	adds	r0, r0, sl
   27494:	adc	r1, r1, fp
   27498:	lsr	r3, r4, #14
   2749c:	orr	ip, r3, r5, lsl #18
   274a0:	add	r3, sp, #4480	; 0x1180
   274a4:	add	r3, r3, #24
   274a8:	str	ip, [r3]
   274ac:	lsr	r3, r5, #14
   274b0:	orr	ip, r3, r4, lsl #18
   274b4:	add	r3, sp, #4480	; 0x1180
   274b8:	add	r3, r3, #28
   274bc:	str	ip, [r3]
   274c0:	lsr	r3, r4, #18
   274c4:	orr	ip, r3, r5, lsl #14
   274c8:	add	r3, sp, #4480	; 0x1180
   274cc:	add	r3, r3, #32
   274d0:	str	ip, [r3]
   274d4:	lsr	r3, r5, #18
   274d8:	orr	ip, r3, r4, lsl #14
   274dc:	add	r3, sp, #4480	; 0x1180
   274e0:	add	r3, r3, #36	; 0x24
   274e4:	str	ip, [r3]
   274e8:	add	r3, sp, #4480	; 0x1180
   274ec:	add	r3, r3, #24
   274f0:	ldrd	r2, [r3]
   274f4:	add	ip, sp, #4480	; 0x1180
   274f8:	add	ip, ip, #32
   274fc:	ldrd	r6, [ip]
   27500:	eor	r2, r2, r6
   27504:	eor	r3, r3, r7
   27508:	lsl	ip, r5, #23
   2750c:	orr	ip, ip, r4, lsr #9
   27510:	add	r6, sp, #4480	; 0x1180
   27514:	add	r6, r6, #44	; 0x2c
   27518:	str	ip, [r6]
   2751c:	lsl	ip, r4, #23
   27520:	orr	ip, ip, r5, lsr #9
   27524:	add	r6, sp, #4480	; 0x1180
   27528:	add	r6, r6, #40	; 0x28
   2752c:	str	ip, [r6]
   27530:	ldrd	r6, [r6]
   27534:	eor	r6, r6, r2
   27538:	eor	r7, r7, r3
   2753c:	adds	r6, r0, r6
   27540:	adc	r7, r1, r7
   27544:	mov	r2, r6
   27548:	mov	r3, r7
   2754c:	ldrd	r6, [sp, #184]	; 0xb8
   27550:	strd	r2, [sp, #64]	; 0x40
   27554:	adds	r6, r6, r2
   27558:	adc	r7, r7, r3
   2755c:	strd	r6, [sp, #40]	; 0x28
   27560:	ldrd	sl, [sp, #192]	; 0xc0
   27564:	lsr	r3, sl, #28
   27568:	orr	r1, r3, fp, lsl #4
   2756c:	add	r3, sp, #4480	; 0x1180
   27570:	add	r3, r3, #48	; 0x30
   27574:	str	r1, [r3]
   27578:	lsr	r3, fp, #28
   2757c:	orr	r1, r3, sl, lsl #4
   27580:	add	r3, sp, #4480	; 0x1180
   27584:	add	r3, r3, #52	; 0x34
   27588:	str	r1, [r3]
   2758c:	lsl	r3, fp, #30
   27590:	orr	r1, r3, sl, lsr #2
   27594:	add	r3, sp, #4480	; 0x1180
   27598:	add	r3, r3, #60	; 0x3c
   2759c:	str	r1, [r3]
   275a0:	lsl	r3, sl, #30
   275a4:	orr	r1, r3, fp, lsr #2
   275a8:	add	r3, sp, #4480	; 0x1180
   275ac:	add	r3, r3, #56	; 0x38
   275b0:	str	r1, [r3]
   275b4:	add	r3, sp, #4480	; 0x1180
   275b8:	add	r3, r3, #48	; 0x30
   275bc:	ldrd	r6, [r3]
   275c0:	add	r3, sp, #4480	; 0x1180
   275c4:	add	r3, r3, #56	; 0x38
   275c8:	ldrd	r2, [r3]
   275cc:	eor	r6, r6, r2
   275d0:	eor	r7, r7, r3
   275d4:	mov	r2, r6
   275d8:	mov	r3, r7
   275dc:	lsl	r1, fp, #25
   275e0:	orr	r1, r1, sl, lsr #7
   275e4:	add	r0, sp, #4544	; 0x11c0
   275e8:	add	r0, r0, #4
   275ec:	str	r1, [r0]
   275f0:	lsl	r1, sl, #25
   275f4:	orr	r1, r1, fp, lsr #7
   275f8:	add	r0, sp, #4544	; 0x11c0
   275fc:	str	r1, [r0]
   27600:	ldrd	r6, [r0]
   27604:	eor	r6, r6, r2
   27608:	eor	r7, r7, r3
   2760c:	strd	r6, [sp, #152]	; 0x98
   27610:	ldrd	r6, [sp]
   27614:	orr	r2, r6, sl
   27618:	orr	r3, r7, fp
   2761c:	mov	r0, r2
   27620:	mov	r1, r3
   27624:	ldrd	r2, [sp, #56]	; 0x38
   27628:	and	r2, r2, r0
   2762c:	and	r3, r3, r1
   27630:	mov	r0, r2
   27634:	mov	r1, r3
   27638:	mov	r2, r6
   2763c:	mov	r3, r7
   27640:	and	r2, r2, sl
   27644:	and	r3, r3, fp
   27648:	orr	r2, r2, r0
   2764c:	orr	r3, r3, r1
   27650:	mov	r0, r2
   27654:	mov	r1, r3
   27658:	ldrd	r2, [sp, #152]	; 0x98
   2765c:	adds	r2, r2, r0
   27660:	adc	r3, r3, r1
   27664:	ldrd	r6, [sp, #64]	; 0x40
   27668:	adds	r6, r6, r2
   2766c:	adc	r7, r7, r3
   27670:	strd	r6, [sp, #64]	; 0x40
   27674:	ldrd	r0, [sp, #176]	; 0xb0
   27678:	lsr	r3, r0, #1
   2767c:	orr	ip, r3, r1, lsl #31
   27680:	add	r3, sp, #4544	; 0x11c0
   27684:	add	r3, r3, #8
   27688:	str	ip, [r3]
   2768c:	lsr	r3, r1, #1
   27690:	orr	ip, r3, r0, lsl #31
   27694:	add	r3, sp, #4544	; 0x11c0
   27698:	add	r3, r3, #12
   2769c:	str	ip, [r3]
   276a0:	lsr	r3, r0, #8
   276a4:	orr	ip, r3, r1, lsl #24
   276a8:	add	r3, sp, #4544	; 0x11c0
   276ac:	add	r3, r3, #16
   276b0:	str	ip, [r3]
   276b4:	lsr	r3, r1, #8
   276b8:	orr	ip, r3, r0, lsl #24
   276bc:	add	r3, sp, #4544	; 0x11c0
   276c0:	add	r3, r3, #20
   276c4:	str	ip, [r3]
   276c8:	add	r3, sp, #4544	; 0x11c0
   276cc:	add	r3, r3, #8
   276d0:	ldrd	r2, [r3]
   276d4:	add	ip, sp, #4544	; 0x11c0
   276d8:	add	ip, ip, #16
   276dc:	ldrd	r6, [ip]
   276e0:	eor	r2, r2, r6
   276e4:	eor	r3, r3, r7
   276e8:	lsr	ip, r0, #7
   276ec:	orr	ip, ip, r1, lsl #25
   276f0:	str	ip, [sp, #712]	; 0x2c8
   276f4:	lsr	r1, r1, #7
   276f8:	str	r1, [sp, #716]	; 0x2cc
   276fc:	add	r1, sp, #712	; 0x2c8
   27700:	ldrd	r6, [r1]
   27704:	eor	r6, r6, r2
   27708:	eor	r7, r7, r3
   2770c:	ldrd	r0, [sp, #168]	; 0xa8
   27710:	adds	r0, r0, r6
   27714:	adc	r1, r1, r7
   27718:	mov	r2, r0
   2771c:	mov	r3, r1
   27720:	ldrd	r0, [sp, #120]	; 0x78
   27724:	adds	r0, r0, r2
   27728:	adc	r1, r1, r3
   2772c:	mov	r2, r0
   27730:	mov	r3, r1
   27734:	ldrd	r6, [sp, #16]
   27738:	lsr	r1, r6, #19
   2773c:	orr	r1, r1, r7, lsl #13
   27740:	add	r0, sp, #4544	; 0x11c0
   27744:	add	r0, r0, #24
   27748:	str	r1, [r0]
   2774c:	lsr	r1, r7, #19
   27750:	orr	r1, r1, r6, lsl #13
   27754:	add	r0, sp, #4544	; 0x11c0
   27758:	add	r0, r0, #28
   2775c:	str	r1, [r0]
   27760:	lsl	r1, r7, #3
   27764:	orr	r1, r1, r6, lsr #29
   27768:	add	r0, sp, #4544	; 0x11c0
   2776c:	add	r0, r0, #36	; 0x24
   27770:	str	r1, [r0]
   27774:	lsl	r1, r6, #3
   27778:	orr	r1, r1, r7, lsr #29
   2777c:	add	r0, sp, #4544	; 0x11c0
   27780:	add	r0, r0, #32
   27784:	str	r1, [r0]
   27788:	add	r1, sp, #4544	; 0x11c0
   2778c:	add	r1, r1, #24
   27790:	ldrd	r6, [r1]
   27794:	ldrd	r0, [r0]
   27798:	eor	r6, r6, r0
   2779c:	eor	r7, r7, r1
   277a0:	mov	r0, r6
   277a4:	mov	r1, r7
   277a8:	ldrd	r6, [sp, #16]
   277ac:	lsr	ip, r6, #6
   277b0:	orr	ip, ip, r7, lsl #26
   277b4:	str	ip, [sp, #720]	; 0x2d0
   277b8:	ldr	ip, [sp, #20]
   277bc:	lsr	ip, ip, #6
   277c0:	str	ip, [sp, #724]	; 0x2d4
   277c4:	add	ip, sp, #720	; 0x2d0
   277c8:	ldrd	r6, [ip]
   277cc:	eor	r6, r6, r0
   277d0:	eor	r7, r7, r1
   277d4:	adds	r6, r2, r6
   277d8:	adc	r7, r3, r7
   277dc:	strd	r4, [sp, #160]	; 0xa0
   277e0:	mov	r0, r4
   277e4:	mov	r1, r5
   277e8:	eor	r0, r0, r8
   277ec:	eor	r1, r1, r9
   277f0:	ldrd	r4, [sp, #40]	; 0x28
   277f4:	and	r4, r4, r0
   277f8:	and	r5, r5, r1
   277fc:	mov	r0, r4
   27800:	mov	r1, r5
   27804:	eor	r0, r0, r8
   27808:	eor	r1, r1, r9
   2780c:	add	r3, pc, #892	; 0x37c
   27810:	ldrd	r2, [r3]
   27814:	strd	r6, [sp, #152]	; 0x98
   27818:	adds	r6, r6, r2
   2781c:	adc	r7, r7, r3
   27820:	mov	r2, r6
   27824:	mov	r3, r7
   27828:	ldrd	r6, [sp, #48]	; 0x30
   2782c:	adds	r6, r6, r2
   27830:	adc	r7, r7, r3
   27834:	adds	r0, r0, r6
   27838:	adc	r1, r1, r7
   2783c:	ldrd	r4, [sp, #40]	; 0x28
   27840:	lsr	r3, r4, #14
   27844:	orr	ip, r3, r5, lsl #18
   27848:	add	r3, sp, #4544	; 0x11c0
   2784c:	add	r3, r3, #40	; 0x28
   27850:	str	ip, [r3]
   27854:	lsr	r3, r5, #14
   27858:	orr	ip, r3, r4, lsl #18
   2785c:	add	r3, sp, #4544	; 0x11c0
   27860:	add	r3, r3, #44	; 0x2c
   27864:	str	ip, [r3]
   27868:	lsr	r3, r4, #18
   2786c:	orr	ip, r3, r5, lsl #14
   27870:	add	r3, sp, #4544	; 0x11c0
   27874:	add	r3, r3, #48	; 0x30
   27878:	str	ip, [r3]
   2787c:	lsr	r3, r5, #18
   27880:	orr	ip, r3, r4, lsl #14
   27884:	add	r3, sp, #4544	; 0x11c0
   27888:	add	r3, r3, #52	; 0x34
   2788c:	str	ip, [r3]
   27890:	add	r3, sp, #4544	; 0x11c0
   27894:	add	r3, r3, #40	; 0x28
   27898:	ldrd	r2, [r3]
   2789c:	add	ip, sp, #4544	; 0x11c0
   278a0:	add	ip, ip, #48	; 0x30
   278a4:	ldrd	r6, [ip]
   278a8:	eor	r2, r2, r6
   278ac:	eor	r3, r3, r7
   278b0:	lsl	ip, r5, #23
   278b4:	orr	ip, ip, r4, lsr #9
   278b8:	add	r6, sp, #4544	; 0x11c0
   278bc:	add	r6, r6, #60	; 0x3c
   278c0:	str	ip, [r6]
   278c4:	lsl	ip, r4, #23
   278c8:	orr	ip, ip, r5, lsr #9
   278cc:	add	r4, sp, #4544	; 0x11c0
   278d0:	add	r4, r4, #56	; 0x38
   278d4:	str	ip, [r4]
   278d8:	ldrd	r6, [r4]
   278dc:	eor	r6, r6, r2
   278e0:	eor	r7, r7, r3
   278e4:	adds	r6, r0, r6
   278e8:	adc	r7, r1, r7
   278ec:	mov	r2, r6
   278f0:	mov	r3, r7
   278f4:	strd	r2, [sp, #168]	; 0xa8
   278f8:	ldrd	r0, [sp, #56]	; 0x38
   278fc:	adds	r0, r0, r6
   27900:	adc	r1, r1, r7
   27904:	mov	r2, r0
   27908:	mov	r3, r1
   2790c:	strd	r2, [sp, #48]	; 0x30
   27910:	ldrd	r6, [sp, #64]	; 0x40
   27914:	lsr	r3, r6, #28
   27918:	orr	r1, r3, r7, lsl #4
   2791c:	add	r3, sp, #4608	; 0x1200
   27920:	str	r1, [r3]
   27924:	lsr	r3, r7, #28
   27928:	orr	r1, r3, r6, lsl #4
   2792c:	add	r3, sp, #4608	; 0x1200
   27930:	add	r3, r3, #4
   27934:	str	r1, [r3]
   27938:	lsl	r3, r7, #30
   2793c:	orr	r1, r3, r6, lsr #2
   27940:	add	r3, sp, #4608	; 0x1200
   27944:	add	r3, r3, #12
   27948:	str	r1, [r3]
   2794c:	lsl	r3, r6, #30
   27950:	orr	r1, r3, r7, lsr #2
   27954:	add	r3, sp, #4608	; 0x1200
   27958:	add	r3, r3, #8
   2795c:	str	r1, [r3]
   27960:	add	r3, sp, #4608	; 0x1200
   27964:	ldrd	r2, [r3]
   27968:	add	r1, sp, #4608	; 0x1200
   2796c:	add	r1, r1, #8
   27970:	ldrd	r4, [r1]
   27974:	eor	r2, r2, r4
   27978:	eor	r3, r3, r5
   2797c:	lsl	r1, r7, #25
   27980:	orr	r1, r1, r6, lsr #7
   27984:	add	r0, sp, #4608	; 0x1200
   27988:	add	r0, r0, #20
   2798c:	str	r1, [r0]
   27990:	lsl	r1, r6, #25
   27994:	orr	r1, r1, r7, lsr #7
   27998:	add	r0, sp, #4608	; 0x1200
   2799c:	add	r0, r0, #16
   279a0:	str	r1, [r0]
   279a4:	ldrd	r4, [r0]
   279a8:	eor	r4, r4, r2
   279ac:	eor	r5, r5, r3
   279b0:	mov	r2, r4
   279b4:	mov	r3, r5
   279b8:	mov	r4, sl
   279bc:	mov	r5, fp
   279c0:	orr	sl, sl, r6
   279c4:	orr	fp, fp, r7
   279c8:	mov	r0, sl
   279cc:	mov	r1, fp
   279d0:	ldrd	sl, [sp]
   279d4:	and	sl, sl, r0
   279d8:	and	fp, fp, r1
   279dc:	mov	r0, sl
   279e0:	mov	r1, fp
   279e4:	mov	sl, r4
   279e8:	mov	fp, r5
   279ec:	and	sl, sl, r6
   279f0:	and	fp, fp, r7
   279f4:	orr	r0, r0, sl
   279f8:	orr	r1, r1, fp
   279fc:	adds	r0, r0, r2
   27a00:	adc	r1, r1, r3
   27a04:	ldrd	r2, [sp, #168]	; 0xa8
   27a08:	adds	r2, r2, r0
   27a0c:	adc	r3, r3, r1
   27a10:	strd	r2, [sp, #56]	; 0x38
   27a14:	ldrd	sl, [sp, #24]
   27a18:	lsr	r3, sl, #1
   27a1c:	orr	r2, r3, fp, lsl #31
   27a20:	add	r3, sp, #4608	; 0x1200
   27a24:	add	r3, r3, #24
   27a28:	str	r2, [r3]
   27a2c:	lsr	r3, fp, #1
   27a30:	orr	r2, r3, sl, lsl #31
   27a34:	add	r3, sp, #4608	; 0x1200
   27a38:	add	r3, r3, #28
   27a3c:	str	r2, [r3]
   27a40:	lsr	r3, sl, #8
   27a44:	orr	r2, r3, fp, lsl #24
   27a48:	add	r3, sp, #4608	; 0x1200
   27a4c:	add	r3, r3, #32
   27a50:	str	r2, [r3]
   27a54:	lsr	r3, fp, #8
   27a58:	orr	r2, r3, sl, lsl #24
   27a5c:	add	r3, sp, #4608	; 0x1200
   27a60:	add	r3, r3, #36	; 0x24
   27a64:	str	r2, [r3]
   27a68:	add	r3, sp, #4608	; 0x1200
   27a6c:	add	r3, r3, #24
   27a70:	ldrd	r2, [r3]
   27a74:	add	r1, sp, #4608	; 0x1200
   27a78:	add	r1, r1, #32
   27a7c:	ldrd	r4, [r1]
   27a80:	eor	r2, r2, r4
   27a84:	eor	r3, r3, r5
   27a88:	lsr	r1, sl, #7
   27a8c:	orr	r1, r1, fp, lsl #25
   27a90:	str	r1, [sp, #728]	; 0x2d8
   27a94:	lsr	r1, fp, #7
   27a98:	str	r1, [sp, #732]	; 0x2dc
   27a9c:	add	r1, sp, #728	; 0x2d8
   27aa0:	ldrd	sl, [r1]
   27aa4:	eor	sl, sl, r2
   27aa8:	eor	fp, fp, r3
   27aac:	ldrd	r0, [sp, #176]	; 0xb0
   27ab0:	adds	r0, r0, sl
   27ab4:	adc	r1, r1, fp
   27ab8:	ldrd	sl, [sp, #8]
   27abc:	adds	sl, sl, r0
   27ac0:	adc	fp, fp, r1
   27ac4:	mov	r2, sl
   27ac8:	mov	r3, fp
   27acc:	ldrd	r4, [sp, #144]	; 0x90
   27ad0:	lsr	r1, r4, #19
   27ad4:	orr	r1, r1, r5, lsl #13
   27ad8:	add	r0, sp, #4608	; 0x1200
   27adc:	add	r0, r0, #40	; 0x28
   27ae0:	str	r1, [r0]
   27ae4:	lsr	r1, r5, #19
   27ae8:	orr	r1, r1, r4, lsl #13
   27aec:	add	r0, sp, #4608	; 0x1200
   27af0:	add	r0, r0, #44	; 0x2c
   27af4:	str	r1, [r0]
   27af8:	lsl	r1, r5, #3
   27afc:	orr	r1, r1, r4, lsr #29
   27b00:	add	r0, sp, #4608	; 0x1200
   27b04:	add	r0, r0, #52	; 0x34
   27b08:	str	r1, [r0]
   27b0c:	lsl	r1, r4, #3
   27b10:	orr	r1, r1, r5, lsr #29
   27b14:	add	r0, sp, #4608	; 0x1200
   27b18:	add	r0, r0, #48	; 0x30
   27b1c:	str	r1, [r0]
   27b20:	add	r1, sp, #4608	; 0x1200
   27b24:	add	r1, r1, #40	; 0x28
   27b28:	ldrd	r0, [r1]
   27b2c:	add	ip, sp, #4608	; 0x1200
   27b30:	add	ip, ip, #48	; 0x30
   27b34:	ldrd	sl, [ip]
   27b38:	eor	r0, r0, sl
   27b3c:	eor	r1, r1, fp
   27b40:	lsr	ip, r4, #6
   27b44:	orr	ip, ip, r5, lsl #26
   27b48:	str	ip, [sp, #736]	; 0x2e0
   27b4c:	lsr	ip, r5, #6
   27b50:	str	ip, [sp, #740]	; 0x2e4
   27b54:	add	ip, sp, #736	; 0x2e0
   27b58:	ldrd	r4, [ip]
   27b5c:	eor	r4, r4, r0
   27b60:	eor	r5, r5, r1
   27b64:	adds	r4, r2, r4
   27b68:	adc	r5, r3, r5
   27b6c:	mov	sl, r4
   27b70:	mov	fp, r5
   27b74:	ldrd	r4, [sp, #160]	; 0xa0
   27b78:	ldrd	r2, [sp, #40]	; 0x28
   27b7c:	eor	r2, r2, r4
   27b80:	eor	r3, r3, r5
   27b84:	mov	r0, r2
   27b88:	mov	r1, r3
   27b8c:	b	27ba0 <__assert_fail@plt+0x168b4>
   27b90:	ldmlt	r2, {r3, r6, r7, ip, lr, pc}^
   27b94:	stmibne	r4!, {r1, r2, r4, r8, lr, pc}
   27b98:	cmppl	r1, r3, asr fp
   27b9c:	cdpne	12, 3, cr6, cr7, cr8, {0}
   27ba0:	ldrd	r2, [sp, #48]	; 0x30
   27ba4:	and	r2, r2, r0
   27ba8:	and	r3, r3, r1
   27bac:	mov	r0, r2
   27bb0:	mov	r1, r3
   27bb4:	mov	r2, r4
   27bb8:	mov	r3, r5
   27bbc:	eor	r2, r2, r0
   27bc0:	eor	r3, r3, r1
   27bc4:	mov	r0, r2
   27bc8:	mov	r1, r3
   27bcc:	sub	r3, pc, #60	; 0x3c
   27bd0:	ldrd	r2, [r3]
   27bd4:	strd	sl, [sp, #160]	; 0xa0
   27bd8:	adds	sl, sl, r2
   27bdc:	adc	fp, fp, r3
   27be0:	adds	r8, r8, sl
   27be4:	adc	r9, r9, fp
   27be8:	adds	r0, r0, r8
   27bec:	adc	r1, r1, r9
   27bf0:	ldrd	sl, [sp, #48]	; 0x30
   27bf4:	lsr	r3, sl, #14
   27bf8:	orr	r2, r3, fp, lsl #18
   27bfc:	add	r3, sp, #4608	; 0x1200
   27c00:	add	r3, r3, #56	; 0x38
   27c04:	str	r2, [r3]
   27c08:	lsr	r3, fp, #14
   27c0c:	orr	r2, r3, sl, lsl #18
   27c10:	add	r3, sp, #4608	; 0x1200
   27c14:	add	r3, r3, #60	; 0x3c
   27c18:	str	r2, [r3]
   27c1c:	lsr	r3, sl, #18
   27c20:	orr	r2, r3, fp, lsl #14
   27c24:	add	r3, sp, #4672	; 0x1240
   27c28:	str	r2, [r3]
   27c2c:	lsr	r3, fp, #18
   27c30:	orr	r2, r3, sl, lsl #14
   27c34:	add	r3, sp, #4672	; 0x1240
   27c38:	add	r3, r3, #4
   27c3c:	str	r2, [r3]
   27c40:	add	r3, sp, #4608	; 0x1200
   27c44:	add	r3, r3, #56	; 0x38
   27c48:	ldrd	r2, [r3]
   27c4c:	add	ip, sp, #4672	; 0x1240
   27c50:	ldrd	r8, [ip]
   27c54:	eor	r2, r2, r8
   27c58:	eor	r3, r3, r9
   27c5c:	lsl	ip, fp, #23
   27c60:	mov	r8, sl
   27c64:	mov	r9, fp
   27c68:	orr	ip, ip, sl, lsr #9
   27c6c:	add	sl, sp, #4672	; 0x1240
   27c70:	add	sl, sl, #12
   27c74:	str	ip, [sl]
   27c78:	lsl	ip, r8, #23
   27c7c:	orr	ip, ip, r9, lsr #9
   27c80:	add	r8, sp, #4672	; 0x1240
   27c84:	add	r8, r8, #8
   27c88:	str	ip, [r8]
   27c8c:	ldrd	r8, [r8]
   27c90:	eor	r8, r8, r2
   27c94:	eor	r9, r9, r3
   27c98:	adds	r8, r0, r8
   27c9c:	adc	r9, r1, r9
   27ca0:	mov	r2, r8
   27ca4:	mov	r3, r9
   27ca8:	ldrd	r8, [sp]
   27cac:	strd	r2, [sp]
   27cb0:	adds	r8, r8, r2
   27cb4:	adc	r9, r9, r3
   27cb8:	ldrd	sl, [sp, #56]	; 0x38
   27cbc:	lsr	r3, sl, #28
   27cc0:	orr	r1, r3, fp, lsl #4
   27cc4:	add	r3, sp, #4672	; 0x1240
   27cc8:	add	r3, r3, #16
   27ccc:	str	r1, [r3]
   27cd0:	lsr	r3, fp, #28
   27cd4:	orr	r1, r3, sl, lsl #4
   27cd8:	add	r3, sp, #4672	; 0x1240
   27cdc:	add	r3, r3, #20
   27ce0:	str	r1, [r3]
   27ce4:	lsl	r3, fp, #30
   27ce8:	orr	r1, r3, sl, lsr #2
   27cec:	add	r3, sp, #4672	; 0x1240
   27cf0:	add	r3, r3, #28
   27cf4:	str	r1, [r3]
   27cf8:	lsl	r3, sl, #30
   27cfc:	orr	r1, r3, fp, lsr #2
   27d00:	add	r3, sp, #4672	; 0x1240
   27d04:	add	r3, r3, #24
   27d08:	str	r1, [r3]
   27d0c:	add	r3, sp, #4672	; 0x1240
   27d10:	add	r3, r3, #16
   27d14:	ldrd	r2, [r3]
   27d18:	add	r1, sp, #4672	; 0x1240
   27d1c:	add	r1, r1, #24
   27d20:	ldrd	r0, [r1]
   27d24:	eor	r2, r2, r0
   27d28:	eor	r3, r3, r1
   27d2c:	lsl	r1, fp, #25
   27d30:	orr	r1, r1, sl, lsr #7
   27d34:	add	r0, sp, #4672	; 0x1240
   27d38:	add	r0, r0, #36	; 0x24
   27d3c:	str	r1, [r0]
   27d40:	lsl	r1, sl, #25
   27d44:	orr	r1, r1, fp, lsr #7
   27d48:	add	r0, sp, #4672	; 0x1240
   27d4c:	add	r0, r0, #32
   27d50:	str	r1, [r0]
   27d54:	ldrd	r0, [r0]
   27d58:	eor	r0, r0, r2
   27d5c:	eor	r1, r1, r3
   27d60:	mov	r2, r0
   27d64:	mov	r3, r1
   27d68:	orr	r0, sl, r6
   27d6c:	orr	r1, fp, r7
   27d70:	ldrd	sl, [sp, #192]	; 0xc0
   27d74:	and	sl, sl, r0
   27d78:	and	fp, fp, r1
   27d7c:	mov	r0, sl
   27d80:	mov	r1, fp
   27d84:	ldrd	r6, [sp, #64]	; 0x40
   27d88:	ldrd	sl, [sp, #56]	; 0x38
   27d8c:	and	sl, sl, r6
   27d90:	and	fp, fp, r7
   27d94:	orr	r6, sl, r0
   27d98:	orr	r7, fp, r1
   27d9c:	adds	r0, r6, r2
   27da0:	adc	r1, r7, r3
   27da4:	ldrd	r2, [sp]
   27da8:	adds	r2, r2, r0
   27dac:	adc	r3, r3, r1
   27db0:	strd	r2, [sp]
   27db4:	ldrd	r0, [sp, #72]	; 0x48
   27db8:	lsr	r3, r0, #1
   27dbc:	orr	ip, r3, r1, lsl #31
   27dc0:	add	r3, sp, #4672	; 0x1240
   27dc4:	add	r3, r3, #40	; 0x28
   27dc8:	str	ip, [r3]
   27dcc:	lsr	r3, r1, #1
   27dd0:	orr	ip, r3, r0, lsl #31
   27dd4:	add	r3, sp, #4672	; 0x1240
   27dd8:	add	r3, r3, #44	; 0x2c
   27ddc:	str	ip, [r3]
   27de0:	lsr	r3, r0, #8
   27de4:	orr	ip, r3, r1, lsl #24
   27de8:	add	r3, sp, #4672	; 0x1240
   27dec:	add	r3, r3, #48	; 0x30
   27df0:	str	ip, [r3]
   27df4:	lsr	r3, r1, #8
   27df8:	orr	ip, r3, r0, lsl #24
   27dfc:	add	r3, sp, #4672	; 0x1240
   27e00:	add	r3, r3, #52	; 0x34
   27e04:	str	ip, [r3]
   27e08:	add	r3, sp, #4672	; 0x1240
   27e0c:	add	r3, r3, #40	; 0x28
   27e10:	ldrd	r2, [r3]
   27e14:	add	ip, sp, #4672	; 0x1240
   27e18:	add	ip, ip, #48	; 0x30
   27e1c:	ldrd	r6, [ip]
   27e20:	eor	r2, r2, r6
   27e24:	eor	r3, r3, r7
   27e28:	lsr	ip, r0, #7
   27e2c:	orr	ip, ip, r1, lsl #25
   27e30:	str	ip, [sp, #744]	; 0x2e8
   27e34:	lsr	r1, r1, #7
   27e38:	str	r1, [sp, #748]	; 0x2ec
   27e3c:	add	r1, sp, #744	; 0x2e8
   27e40:	ldrd	r6, [r1]
   27e44:	eor	r6, r6, r2
   27e48:	eor	r7, r7, r3
   27e4c:	ldrd	r0, [sp, #24]
   27e50:	adds	r0, r0, r6
   27e54:	adc	r1, r1, r7
   27e58:	mov	r2, r0
   27e5c:	mov	r3, r1
   27e60:	ldrd	r0, [sp, #104]	; 0x68
   27e64:	adds	r0, r0, r2
   27e68:	adc	r1, r1, r3
   27e6c:	mov	r2, r0
   27e70:	mov	r3, r1
   27e74:	ldrd	sl, [sp, #152]	; 0x98
   27e78:	lsr	r1, sl, #19
   27e7c:	orr	r1, r1, fp, lsl #13
   27e80:	add	r0, sp, #4672	; 0x1240
   27e84:	add	r0, r0, #56	; 0x38
   27e88:	str	r1, [r0]
   27e8c:	lsr	r1, fp, #19
   27e90:	orr	r1, r1, sl, lsl #13
   27e94:	add	r0, sp, #4672	; 0x1240
   27e98:	add	r0, r0, #60	; 0x3c
   27e9c:	str	r1, [r0]
   27ea0:	lsl	r1, fp, #3
   27ea4:	orr	r1, r1, sl, lsr #29
   27ea8:	add	r0, sp, #4736	; 0x1280
   27eac:	add	r0, r0, #4
   27eb0:	str	r1, [r0]
   27eb4:	lsl	r1, sl, #3
   27eb8:	orr	r1, r1, fp, lsr #29
   27ebc:	add	r0, sp, #4736	; 0x1280
   27ec0:	str	r1, [r0]
   27ec4:	add	r1, sp, #4672	; 0x1240
   27ec8:	add	r1, r1, #56	; 0x38
   27ecc:	ldrd	r6, [r1]
   27ed0:	ldrd	r0, [r0]
   27ed4:	eor	r6, r6, r0
   27ed8:	eor	r7, r7, r1
   27edc:	mov	r0, r6
   27ee0:	mov	r1, r7
   27ee4:	lsr	ip, sl, #6
   27ee8:	orr	ip, ip, fp, lsl #26
   27eec:	str	ip, [sp, #752]	; 0x2f0
   27ef0:	lsr	ip, fp, #6
   27ef4:	str	ip, [sp, #756]	; 0x2f4
   27ef8:	add	ip, sp, #752	; 0x2f0
   27efc:	ldrd	r6, [ip]
   27f00:	eor	r6, r6, r0
   27f04:	eor	r7, r7, r1
   27f08:	adds	sl, r2, r6
   27f0c:	adc	fp, r3, r7
   27f10:	ldrd	r2, [sp, #40]	; 0x28
   27f14:	mov	r0, r2
   27f18:	mov	r1, r3
   27f1c:	ldrd	r6, [sp, #48]	; 0x30
   27f20:	eor	r0, r0, r6
   27f24:	eor	r1, r1, r7
   27f28:	and	r0, r0, r8
   27f2c:	and	r1, r1, r9
   27f30:	eor	r2, r2, r0
   27f34:	eor	r3, r3, r1
   27f38:	mov	r0, r2
   27f3c:	mov	r1, r3
   27f40:	add	r3, pc, #896	; 0x380
   27f44:	ldrd	r2, [r3]
   27f48:	strd	sl, [sp, #24]
   27f4c:	adds	sl, sl, r2
   27f50:	adc	fp, fp, r3
   27f54:	adds	r4, r4, sl
   27f58:	adc	r5, r5, fp
   27f5c:	adds	r0, r0, r4
   27f60:	adc	r1, r1, r5
   27f64:	lsr	r3, r8, #14
   27f68:	orr	ip, r3, r9, lsl #18
   27f6c:	add	r3, sp, #4736	; 0x1280
   27f70:	add	r3, r3, #8
   27f74:	str	ip, [r3]
   27f78:	lsr	r3, r9, #14
   27f7c:	orr	ip, r3, r8, lsl #18
   27f80:	add	r3, sp, #4736	; 0x1280
   27f84:	add	r3, r3, #12
   27f88:	str	ip, [r3]
   27f8c:	lsr	r3, r8, #18
   27f90:	orr	ip, r3, r9, lsl #14
   27f94:	add	r3, sp, #4736	; 0x1280
   27f98:	add	r3, r3, #16
   27f9c:	str	ip, [r3]
   27fa0:	lsr	r3, r9, #18
   27fa4:	orr	ip, r3, r8, lsl #14
   27fa8:	add	r3, sp, #4736	; 0x1280
   27fac:	add	r3, r3, #20
   27fb0:	str	ip, [r3]
   27fb4:	add	r3, sp, #4736	; 0x1280
   27fb8:	add	r3, r3, #8
   27fbc:	ldrd	r2, [r3]
   27fc0:	add	ip, sp, #4736	; 0x1280
   27fc4:	add	ip, ip, #16
   27fc8:	ldrd	r6, [ip]
   27fcc:	eor	r2, r2, r6
   27fd0:	eor	r3, r3, r7
   27fd4:	lsl	ip, r9, #23
   27fd8:	orr	ip, ip, r8, lsr #9
   27fdc:	add	r4, sp, #4736	; 0x1280
   27fe0:	add	r4, r4, #28
   27fe4:	str	ip, [r4]
   27fe8:	lsl	ip, r8, #23
   27fec:	orr	ip, ip, r9, lsr #9
   27ff0:	add	r4, sp, #4736	; 0x1280
   27ff4:	add	r4, r4, #24
   27ff8:	str	ip, [r4]
   27ffc:	ldrd	r6, [r4]
   28000:	eor	r6, r6, r2
   28004:	eor	r7, r7, r3
   28008:	adds	r4, r0, r6
   2800c:	adc	r5, r1, r7
   28010:	ldrd	sl, [sp, #192]	; 0xc0
   28014:	adds	sl, sl, r4
   28018:	adc	fp, fp, r5
   2801c:	ldrd	r0, [sp]
   28020:	lsr	r3, r0, #28
   28024:	orr	r2, r3, r1, lsl #4
   28028:	add	r3, sp, #4736	; 0x1280
   2802c:	add	r3, r3, #32
   28030:	str	r2, [r3]
   28034:	lsr	r3, r1, #28
   28038:	orr	r2, r3, r0, lsl #4
   2803c:	add	r3, sp, #4736	; 0x1280
   28040:	add	r3, r3, #36	; 0x24
   28044:	str	r2, [r3]
   28048:	lsl	r3, r1, #30
   2804c:	orr	r2, r3, r0, lsr #2
   28050:	add	r3, sp, #4736	; 0x1280
   28054:	add	r3, r3, #44	; 0x2c
   28058:	str	r2, [r3]
   2805c:	lsl	r3, r0, #30
   28060:	orr	r2, r3, r1, lsr #2
   28064:	add	r3, sp, #4736	; 0x1280
   28068:	add	r3, r3, #40	; 0x28
   2806c:	str	r2, [r3]
   28070:	add	r3, sp, #4736	; 0x1280
   28074:	add	r3, r3, #32
   28078:	ldrd	r2, [r3]
   2807c:	add	ip, sp, #4736	; 0x1280
   28080:	add	ip, ip, #40	; 0x28
   28084:	ldrd	r6, [ip]
   28088:	eor	r2, r2, r6
   2808c:	eor	r3, r3, r7
   28090:	mov	r6, r0
   28094:	mov	r7, r1
   28098:	lsl	r1, r1, #25
   2809c:	orr	r1, r1, r6, lsr #7
   280a0:	add	r0, sp, #4736	; 0x1280
   280a4:	add	r0, r0, #52	; 0x34
   280a8:	str	r1, [r0]
   280ac:	lsl	r1, r6, #25
   280b0:	orr	r1, r1, r7, lsr #7
   280b4:	add	r0, sp, #4736	; 0x1280
   280b8:	add	r0, r0, #48	; 0x30
   280bc:	str	r1, [r0]
   280c0:	ldrd	r6, [r0]
   280c4:	eor	r6, r6, r2
   280c8:	eor	r7, r7, r3
   280cc:	strd	r6, [sp, #168]	; 0xa8
   280d0:	ldrd	r2, [sp]
   280d4:	ldrd	r6, [sp, #56]	; 0x38
   280d8:	orr	r6, r6, r2
   280dc:	orr	r7, r7, r3
   280e0:	mov	r0, r6
   280e4:	mov	r1, r7
   280e8:	ldrd	r6, [sp, #64]	; 0x40
   280ec:	and	r6, r6, r0
   280f0:	and	r7, r7, r1
   280f4:	mov	r0, r6
   280f8:	mov	r1, r7
   280fc:	ldrd	r6, [sp, #56]	; 0x38
   28100:	and	r6, r6, r2
   28104:	and	r7, r7, r3
   28108:	orr	r2, r6, r0
   2810c:	orr	r3, r7, r1
   28110:	mov	r0, r2
   28114:	mov	r1, r3
   28118:	ldrd	r2, [sp, #168]	; 0xa8
   2811c:	adds	r2, r2, r0
   28120:	adc	r3, r3, r1
   28124:	adds	r4, r4, r2
   28128:	adc	r5, r5, r3
   2812c:	strd	r4, [sp, #176]	; 0xb0
   28130:	ldrd	r4, [sp, #80]	; 0x50
   28134:	lsr	r3, r4, #1
   28138:	orr	r1, r3, r5, lsl #31
   2813c:	add	r3, sp, #4736	; 0x1280
   28140:	add	r3, r3, #56	; 0x38
   28144:	str	r1, [r3]
   28148:	lsr	r3, r5, #1
   2814c:	orr	r1, r3, r4, lsl #31
   28150:	add	r3, sp, #4736	; 0x1280
   28154:	add	r3, r3, #60	; 0x3c
   28158:	str	r1, [r3]
   2815c:	lsr	r3, r4, #8
   28160:	orr	r1, r3, r5, lsl #24
   28164:	add	r3, sp, #4800	; 0x12c0
   28168:	str	r1, [r3]
   2816c:	lsr	r3, r5, #8
   28170:	orr	r1, r3, r4, lsl #24
   28174:	add	r3, sp, #4800	; 0x12c0
   28178:	add	r3, r3, #4
   2817c:	str	r1, [r3]
   28180:	add	r3, sp, #4736	; 0x1280
   28184:	add	r3, r3, #56	; 0x38
   28188:	ldrd	r2, [r3]
   2818c:	add	r1, sp, #4800	; 0x12c0
   28190:	ldrd	r6, [r1]
   28194:	eor	r2, r2, r6
   28198:	eor	r3, r3, r7
   2819c:	lsr	r1, r4, #7
   281a0:	orr	r1, r1, r5, lsl #25
   281a4:	str	r1, [sp, #760]	; 0x2f8
   281a8:	lsr	r1, r5, #7
   281ac:	str	r1, [sp, #764]	; 0x2fc
   281b0:	add	r1, sp, #760	; 0x2f8
   281b4:	ldrd	r6, [r1]
   281b8:	eor	r6, r6, r2
   281bc:	eor	r7, r7, r3
   281c0:	ldrd	r0, [sp, #72]	; 0x48
   281c4:	adds	r0, r0, r6
   281c8:	adc	r1, r1, r7
   281cc:	ldrd	r4, [sp, #128]	; 0x80
   281d0:	adds	r4, r4, r0
   281d4:	adc	r5, r5, r1
   281d8:	mov	r2, r4
   281dc:	mov	r3, r5
   281e0:	ldrd	r4, [sp, #160]	; 0xa0
   281e4:	lsr	r1, r4, #19
   281e8:	orr	r1, r1, r5, lsl #13
   281ec:	add	r0, sp, #4800	; 0x12c0
   281f0:	add	r0, r0, #8
   281f4:	str	r1, [r0]
   281f8:	lsr	r1, r5, #19
   281fc:	orr	r1, r1, r4, lsl #13
   28200:	add	r0, sp, #4800	; 0x12c0
   28204:	add	r0, r0, #12
   28208:	str	r1, [r0]
   2820c:	lsl	r1, r5, #3
   28210:	orr	r1, r1, r4, lsr #29
   28214:	add	r0, sp, #4800	; 0x12c0
   28218:	add	r0, r0, #20
   2821c:	str	r1, [r0]
   28220:	lsl	r1, r4, #3
   28224:	orr	r1, r1, r5, lsr #29
   28228:	add	r0, sp, #4800	; 0x12c0
   2822c:	add	r0, r0, #16
   28230:	str	r1, [r0]
   28234:	add	r1, sp, #4800	; 0x12c0
   28238:	add	r1, r1, #8
   2823c:	ldrd	r6, [r1]
   28240:	ldrd	r0, [r0]
   28244:	eor	r6, r6, r0
   28248:	eor	r7, r7, r1
   2824c:	mov	r0, r6
   28250:	mov	r1, r7
   28254:	lsr	ip, r4, #6
   28258:	orr	ip, ip, r5, lsl #26
   2825c:	str	ip, [sp, #768]	; 0x300
   28260:	lsr	ip, r5, #6
   28264:	str	ip, [sp, #772]	; 0x304
   28268:	add	ip, sp, #768	; 0x300
   2826c:	ldrd	r6, [ip]
   28270:	eor	r6, r6, r0
   28274:	eor	r7, r7, r1
   28278:	adds	r4, r2, r6
   2827c:	adc	r5, r3, r7
   28280:	mov	r6, r4
   28284:	mov	r7, r5
   28288:	ldrd	r0, [sp, #48]	; 0x30
   2828c:	eor	r0, r0, r8
   28290:	eor	r1, r1, r9
   28294:	mov	r4, sl
   28298:	mov	r5, fp
   2829c:	mov	r2, sl
   282a0:	mov	r3, fp
   282a4:	and	r2, r2, r0
   282a8:	and	r3, r3, r1
   282ac:	ldrd	sl, [sp, #48]	; 0x30
   282b0:	eor	sl, sl, r2
   282b4:	eor	fp, fp, r3
   282b8:	mov	r0, sl
   282bc:	mov	r1, fp
   282c0:	b	282d8 <__assert_fail@plt+0x16fec>
   282c4:	nop			; (mov r0, r0)
   282c8:	svcle	0x008eeb99
   282cc:	strbcs	r7, [r8, -ip, asr #14]
   282d0:	orrs	r4, fp, r8, lsr #17
   282d4:	ldrtcc	fp, [r0], #3253	; 0xcb5
   282d8:	sub	r3, pc, #16
   282dc:	ldrd	r2, [r3]
   282e0:	strd	r6, [sp, #72]	; 0x48
   282e4:	adds	sl, r6, r2
   282e8:	adc	fp, r7, r3
   282ec:	mov	r2, sl
   282f0:	mov	r3, fp
   282f4:	ldrd	sl, [sp, #40]	; 0x28
   282f8:	adds	sl, sl, r2
   282fc:	adc	fp, fp, r3
   28300:	adds	r0, r0, sl
   28304:	adc	r1, r1, fp
   28308:	lsr	r3, r4, #14
   2830c:	orr	ip, r3, r5, lsl #18
   28310:	add	r3, sp, #4800	; 0x12c0
   28314:	add	r3, r3, #24
   28318:	str	ip, [r3]
   2831c:	lsr	r3, r5, #14
   28320:	orr	ip, r3, r4, lsl #18
   28324:	add	r3, sp, #4800	; 0x12c0
   28328:	add	r3, r3, #28
   2832c:	str	ip, [r3]
   28330:	lsr	r3, r4, #18
   28334:	orr	ip, r3, r5, lsl #14
   28338:	add	r3, sp, #4800	; 0x12c0
   2833c:	add	r3, r3, #32
   28340:	str	ip, [r3]
   28344:	lsr	r3, r5, #18
   28348:	orr	ip, r3, r4, lsl #14
   2834c:	add	r3, sp, #4800	; 0x12c0
   28350:	add	r3, r3, #36	; 0x24
   28354:	str	ip, [r3]
   28358:	add	r3, sp, #4800	; 0x12c0
   2835c:	add	r3, r3, #24
   28360:	ldrd	r2, [r3]
   28364:	add	ip, sp, #4800	; 0x12c0
   28368:	add	ip, ip, #32
   2836c:	ldrd	r6, [ip]
   28370:	eor	r2, r2, r6
   28374:	eor	r3, r3, r7
   28378:	lsl	ip, r5, #23
   2837c:	orr	ip, ip, r4, lsr #9
   28380:	add	r6, sp, #4800	; 0x12c0
   28384:	add	r6, r6, #44	; 0x2c
   28388:	str	ip, [r6]
   2838c:	lsl	ip, r4, #23
   28390:	orr	ip, ip, r5, lsr #9
   28394:	add	r6, sp, #4800	; 0x12c0
   28398:	add	r6, r6, #40	; 0x28
   2839c:	str	ip, [r6]
   283a0:	ldrd	r6, [r6]
   283a4:	eor	r6, r6, r2
   283a8:	eor	r7, r7, r3
   283ac:	adds	r6, r0, r6
   283b0:	adc	r7, r1, r7
   283b4:	mov	r2, r6
   283b8:	mov	r3, r7
   283bc:	ldrd	r6, [sp, #64]	; 0x40
   283c0:	strd	r2, [sp, #40]	; 0x28
   283c4:	adds	r6, r6, r2
   283c8:	adc	r7, r7, r3
   283cc:	strd	r6, [sp, #64]	; 0x40
   283d0:	ldrd	sl, [sp, #176]	; 0xb0
   283d4:	lsr	r3, sl, #28
   283d8:	orr	r1, r3, fp, lsl #4
   283dc:	add	r3, sp, #4800	; 0x12c0
   283e0:	add	r3, r3, #48	; 0x30
   283e4:	str	r1, [r3]
   283e8:	lsr	r3, fp, #28
   283ec:	orr	r1, r3, sl, lsl #4
   283f0:	add	r3, sp, #4800	; 0x12c0
   283f4:	add	r3, r3, #52	; 0x34
   283f8:	str	r1, [r3]
   283fc:	lsl	r3, fp, #30
   28400:	orr	r1, r3, sl, lsr #2
   28404:	add	r3, sp, #4800	; 0x12c0
   28408:	add	r3, r3, #60	; 0x3c
   2840c:	str	r1, [r3]
   28410:	lsl	r3, sl, #30
   28414:	orr	r1, r3, fp, lsr #2
   28418:	add	r3, sp, #4800	; 0x12c0
   2841c:	add	r3, r3, #56	; 0x38
   28420:	str	r1, [r3]
   28424:	add	r3, sp, #4800	; 0x12c0
   28428:	add	r3, r3, #48	; 0x30
   2842c:	ldrd	r6, [r3]
   28430:	add	r3, sp, #4800	; 0x12c0
   28434:	add	r3, r3, #56	; 0x38
   28438:	ldrd	r2, [r3]
   2843c:	eor	r6, r6, r2
   28440:	eor	r7, r7, r3
   28444:	mov	r2, r6
   28448:	mov	r3, r7
   2844c:	lsl	r1, fp, #25
   28450:	orr	r1, r1, sl, lsr #7
   28454:	add	r0, sp, #4864	; 0x1300
   28458:	add	r0, r0, #4
   2845c:	str	r1, [r0]
   28460:	lsl	r1, sl, #25
   28464:	orr	r1, r1, fp, lsr #7
   28468:	add	r0, sp, #4864	; 0x1300
   2846c:	str	r1, [r0]
   28470:	ldrd	r6, [r0]
   28474:	eor	r6, r6, r2
   28478:	eor	r7, r7, r3
   2847c:	strd	r6, [sp, #168]	; 0xa8
   28480:	ldrd	r6, [sp]
   28484:	orr	r2, r6, sl
   28488:	orr	r3, r7, fp
   2848c:	mov	r0, r2
   28490:	mov	r1, r3
   28494:	ldrd	r2, [sp, #56]	; 0x38
   28498:	and	r2, r2, r0
   2849c:	and	r3, r3, r1
   284a0:	mov	r0, r2
   284a4:	mov	r1, r3
   284a8:	mov	r2, r6
   284ac:	mov	r3, r7
   284b0:	and	r2, r2, sl
   284b4:	and	r3, r3, fp
   284b8:	orr	r2, r2, r0
   284bc:	orr	r3, r3, r1
   284c0:	mov	r0, r2
   284c4:	mov	r1, r3
   284c8:	ldrd	r2, [sp, #168]	; 0xa8
   284cc:	adds	r2, r2, r0
   284d0:	adc	r3, r3, r1
   284d4:	ldrd	r6, [sp, #40]	; 0x28
   284d8:	adds	r6, r6, r2
   284dc:	adc	r7, r7, r3
   284e0:	strd	r6, [sp, #168]	; 0xa8
   284e4:	ldrd	r0, [sp, #88]	; 0x58
   284e8:	lsr	r3, r0, #1
   284ec:	orr	ip, r3, r1, lsl #31
   284f0:	add	r3, sp, #4864	; 0x1300
   284f4:	add	r3, r3, #8
   284f8:	str	ip, [r3]
   284fc:	lsr	r3, r1, #1
   28500:	orr	ip, r3, r0, lsl #31
   28504:	add	r3, sp, #4864	; 0x1300
   28508:	add	r3, r3, #12
   2850c:	str	ip, [r3]
   28510:	lsr	r3, r0, #8
   28514:	orr	ip, r3, r1, lsl #24
   28518:	add	r3, sp, #4864	; 0x1300
   2851c:	add	r3, r3, #16
   28520:	str	ip, [r3]
   28524:	lsr	r3, r1, #8
   28528:	orr	ip, r3, r0, lsl #24
   2852c:	add	r3, sp, #4864	; 0x1300
   28530:	add	r3, r3, #20
   28534:	str	ip, [r3]
   28538:	add	r3, sp, #4864	; 0x1300
   2853c:	add	r3, r3, #8
   28540:	ldrd	r2, [r3]
   28544:	add	ip, sp, #4864	; 0x1300
   28548:	add	ip, ip, #16
   2854c:	ldrd	r6, [ip]
   28550:	eor	r2, r2, r6
   28554:	eor	r3, r3, r7
   28558:	lsr	ip, r0, #7
   2855c:	orr	ip, ip, r1, lsl #25
   28560:	str	ip, [sp, #776]	; 0x308
   28564:	lsr	r1, r1, #7
   28568:	str	r1, [sp, #780]	; 0x30c
   2856c:	add	r1, sp, #776	; 0x308
   28570:	ldrd	r6, [r1]
   28574:	eor	r6, r6, r2
   28578:	eor	r7, r7, r3
   2857c:	ldrd	r0, [sp, #80]	; 0x50
   28580:	adds	r0, r0, r6
   28584:	adc	r1, r1, r7
   28588:	mov	r2, r0
   2858c:	mov	r3, r1
   28590:	ldrd	r0, [sp, #136]	; 0x88
   28594:	adds	r0, r0, r2
   28598:	adc	r1, r1, r3
   2859c:	mov	r2, r0
   285a0:	mov	r3, r1
   285a4:	ldrd	r6, [sp, #24]
   285a8:	lsr	r1, r6, #19
   285ac:	orr	r1, r1, r7, lsl #13
   285b0:	add	r0, sp, #4864	; 0x1300
   285b4:	add	r0, r0, #24
   285b8:	str	r1, [r0]
   285bc:	lsr	r1, r7, #19
   285c0:	orr	r1, r1, r6, lsl #13
   285c4:	add	r0, sp, #4864	; 0x1300
   285c8:	add	r0, r0, #28
   285cc:	str	r1, [r0]
   285d0:	lsl	r1, r7, #3
   285d4:	orr	r1, r1, r6, lsr #29
   285d8:	add	r0, sp, #4864	; 0x1300
   285dc:	add	r0, r0, #36	; 0x24
   285e0:	str	r1, [r0]
   285e4:	lsl	r1, r6, #3
   285e8:	orr	r1, r1, r7, lsr #29
   285ec:	add	r0, sp, #4864	; 0x1300
   285f0:	add	r0, r0, #32
   285f4:	str	r1, [r0]
   285f8:	add	r1, sp, #4864	; 0x1300
   285fc:	add	r1, r1, #24
   28600:	ldrd	r6, [r1]
   28604:	ldrd	r0, [r0]
   28608:	eor	r6, r6, r0
   2860c:	eor	r7, r7, r1
   28610:	mov	r0, r6
   28614:	mov	r1, r7
   28618:	ldrd	r6, [sp, #24]
   2861c:	lsr	ip, r6, #6
   28620:	orr	ip, ip, r7, lsl #26
   28624:	str	ip, [sp, #784]	; 0x310
   28628:	ldr	ip, [sp, #28]
   2862c:	lsr	ip, ip, #6
   28630:	str	ip, [sp, #788]	; 0x314
   28634:	add	ip, sp, #784	; 0x310
   28638:	ldrd	r6, [ip]
   2863c:	eor	r6, r6, r0
   28640:	eor	r7, r7, r1
   28644:	adds	r6, r2, r6
   28648:	adc	r7, r3, r7
   2864c:	strd	r4, [sp, #40]	; 0x28
   28650:	mov	r0, r4
   28654:	mov	r1, r5
   28658:	eor	r0, r0, r8
   2865c:	eor	r1, r1, r9
   28660:	ldrd	r4, [sp, #64]	; 0x40
   28664:	and	r4, r4, r0
   28668:	and	r5, r5, r1
   2866c:	mov	r0, r4
   28670:	mov	r1, r5
   28674:	eor	r0, r0, r8
   28678:	eor	r1, r1, r9
   2867c:	add	r3, pc, #892	; 0x37c
   28680:	ldrd	r2, [r3]
   28684:	strd	r6, [sp, #80]	; 0x50
   28688:	adds	r6, r6, r2
   2868c:	adc	r7, r7, r3
   28690:	mov	r2, r6
   28694:	mov	r3, r7
   28698:	ldrd	r6, [sp, #48]	; 0x30
   2869c:	adds	r6, r6, r2
   286a0:	adc	r7, r7, r3
   286a4:	adds	r0, r0, r6
   286a8:	adc	r1, r1, r7
   286ac:	ldrd	r4, [sp, #64]	; 0x40
   286b0:	lsr	r3, r4, #14
   286b4:	orr	ip, r3, r5, lsl #18
   286b8:	add	r3, sp, #4864	; 0x1300
   286bc:	add	r3, r3, #40	; 0x28
   286c0:	str	ip, [r3]
   286c4:	lsr	r3, r5, #14
   286c8:	orr	ip, r3, r4, lsl #18
   286cc:	add	r3, sp, #4864	; 0x1300
   286d0:	add	r3, r3, #44	; 0x2c
   286d4:	str	ip, [r3]
   286d8:	lsr	r3, r4, #18
   286dc:	orr	ip, r3, r5, lsl #14
   286e0:	add	r3, sp, #4864	; 0x1300
   286e4:	add	r3, r3, #48	; 0x30
   286e8:	str	ip, [r3]
   286ec:	lsr	r3, r5, #18
   286f0:	orr	ip, r3, r4, lsl #14
   286f4:	add	r3, sp, #4864	; 0x1300
   286f8:	add	r3, r3, #52	; 0x34
   286fc:	str	ip, [r3]
   28700:	add	r3, sp, #4864	; 0x1300
   28704:	add	r3, r3, #40	; 0x28
   28708:	ldrd	r2, [r3]
   2870c:	add	ip, sp, #4864	; 0x1300
   28710:	add	ip, ip, #48	; 0x30
   28714:	ldrd	r6, [ip]
   28718:	eor	r2, r2, r6
   2871c:	eor	r3, r3, r7
   28720:	lsl	ip, r5, #23
   28724:	orr	ip, ip, r4, lsr #9
   28728:	add	r6, sp, #4864	; 0x1300
   2872c:	add	r6, r6, #60	; 0x3c
   28730:	str	ip, [r6]
   28734:	lsl	ip, r4, #23
   28738:	orr	ip, ip, r5, lsr #9
   2873c:	add	r4, sp, #4864	; 0x1300
   28740:	add	r4, r4, #56	; 0x38
   28744:	str	ip, [r4]
   28748:	ldrd	r6, [r4]
   2874c:	eor	r6, r6, r2
   28750:	eor	r7, r7, r3
   28754:	adds	r6, r0, r6
   28758:	adc	r7, r1, r7
   2875c:	mov	r2, r6
   28760:	mov	r3, r7
   28764:	strd	r2, [sp, #184]	; 0xb8
   28768:	ldrd	r0, [sp, #56]	; 0x38
   2876c:	adds	r0, r0, r6
   28770:	adc	r1, r1, r7
   28774:	mov	r2, r0
   28778:	mov	r3, r1
   2877c:	strd	r2, [sp, #48]	; 0x30
   28780:	ldrd	r6, [sp, #168]	; 0xa8
   28784:	lsr	r3, r6, #28
   28788:	orr	r1, r3, r7, lsl #4
   2878c:	add	r3, sp, #4928	; 0x1340
   28790:	str	r1, [r3]
   28794:	lsr	r3, r7, #28
   28798:	orr	r1, r3, r6, lsl #4
   2879c:	add	r3, sp, #4928	; 0x1340
   287a0:	add	r3, r3, #4
   287a4:	str	r1, [r3]
   287a8:	lsl	r3, r7, #30
   287ac:	orr	r1, r3, r6, lsr #2
   287b0:	add	r3, sp, #4928	; 0x1340
   287b4:	add	r3, r3, #12
   287b8:	str	r1, [r3]
   287bc:	lsl	r3, r6, #30
   287c0:	orr	r1, r3, r7, lsr #2
   287c4:	add	r3, sp, #4928	; 0x1340
   287c8:	add	r3, r3, #8
   287cc:	str	r1, [r3]
   287d0:	add	r3, sp, #4928	; 0x1340
   287d4:	ldrd	r2, [r3]
   287d8:	add	r1, sp, #4928	; 0x1340
   287dc:	add	r1, r1, #8
   287e0:	ldrd	r4, [r1]
   287e4:	eor	r2, r2, r4
   287e8:	eor	r3, r3, r5
   287ec:	lsl	r1, r7, #25
   287f0:	orr	r1, r1, r6, lsr #7
   287f4:	add	r0, sp, #4928	; 0x1340
   287f8:	add	r0, r0, #20
   287fc:	str	r1, [r0]
   28800:	lsl	r1, r6, #25
   28804:	orr	r1, r1, r7, lsr #7
   28808:	add	r0, sp, #4928	; 0x1340
   2880c:	add	r0, r0, #16
   28810:	str	r1, [r0]
   28814:	ldrd	r4, [r0]
   28818:	eor	r4, r4, r2
   2881c:	eor	r5, r5, r3
   28820:	mov	r2, r4
   28824:	mov	r3, r5
   28828:	mov	r4, sl
   2882c:	mov	r5, fp
   28830:	orr	sl, sl, r6
   28834:	orr	fp, fp, r7
   28838:	mov	r0, sl
   2883c:	mov	r1, fp
   28840:	ldrd	sl, [sp]
   28844:	and	sl, sl, r0
   28848:	and	fp, fp, r1
   2884c:	mov	r0, sl
   28850:	mov	r1, fp
   28854:	mov	sl, r4
   28858:	mov	fp, r5
   2885c:	and	sl, sl, r6
   28860:	and	fp, fp, r7
   28864:	orr	r0, r0, sl
   28868:	orr	r1, r1, fp
   2886c:	adds	r0, r0, r2
   28870:	adc	r1, r1, r3
   28874:	ldrd	r2, [sp, #184]	; 0xb8
   28878:	adds	r2, r2, r0
   2887c:	adc	r3, r3, r1
   28880:	strd	r2, [sp, #56]	; 0x38
   28884:	ldrd	sl, [sp, #32]
   28888:	lsr	r3, sl, #1
   2888c:	orr	r2, r3, fp, lsl #31
   28890:	add	r3, sp, #4928	; 0x1340
   28894:	add	r3, r3, #24
   28898:	str	r2, [r3]
   2889c:	lsr	r3, fp, #1
   288a0:	orr	r2, r3, sl, lsl #31
   288a4:	add	r3, sp, #4928	; 0x1340
   288a8:	add	r3, r3, #28
   288ac:	str	r2, [r3]
   288b0:	lsr	r3, sl, #8
   288b4:	orr	r2, r3, fp, lsl #24
   288b8:	add	r3, sp, #4928	; 0x1340
   288bc:	add	r3, r3, #32
   288c0:	str	r2, [r3]
   288c4:	lsr	r3, fp, #8
   288c8:	orr	r2, r3, sl, lsl #24
   288cc:	add	r3, sp, #4928	; 0x1340
   288d0:	add	r3, r3, #36	; 0x24
   288d4:	str	r2, [r3]
   288d8:	add	r3, sp, #4928	; 0x1340
   288dc:	add	r3, r3, #24
   288e0:	ldrd	r2, [r3]
   288e4:	add	r1, sp, #4928	; 0x1340
   288e8:	add	r1, r1, #32
   288ec:	ldrd	r4, [r1]
   288f0:	eor	r2, r2, r4
   288f4:	eor	r3, r3, r5
   288f8:	lsr	r1, sl, #7
   288fc:	orr	r1, r1, fp, lsl #25
   28900:	str	r1, [sp, #792]	; 0x318
   28904:	lsr	r1, fp, #7
   28908:	str	r1, [sp, #796]	; 0x31c
   2890c:	add	r1, sp, #792	; 0x318
   28910:	ldrd	r4, [r1]
   28914:	eor	r4, r4, r2
   28918:	eor	r5, r5, r3
   2891c:	ldrd	r0, [sp, #88]	; 0x58
   28920:	adds	r0, r0, r4
   28924:	adc	r1, r1, r5
   28928:	ldrd	sl, [sp, #16]
   2892c:	adds	sl, sl, r0
   28930:	adc	fp, fp, r1
   28934:	mov	r2, sl
   28938:	mov	r3, fp
   2893c:	ldrd	r4, [sp, #72]	; 0x48
   28940:	lsr	r1, r4, #19
   28944:	orr	r1, r1, r5, lsl #13
   28948:	add	r0, sp, #4928	; 0x1340
   2894c:	add	r0, r0, #40	; 0x28
   28950:	str	r1, [r0]
   28954:	lsr	r1, r5, #19
   28958:	orr	r1, r1, r4, lsl #13
   2895c:	add	r0, sp, #4928	; 0x1340
   28960:	add	r0, r0, #44	; 0x2c
   28964:	str	r1, [r0]
   28968:	lsl	r1, r5, #3
   2896c:	orr	r1, r1, r4, lsr #29
   28970:	add	r0, sp, #4928	; 0x1340
   28974:	add	r0, r0, #52	; 0x34
   28978:	str	r1, [r0]
   2897c:	lsl	r1, r4, #3
   28980:	orr	r1, r1, r5, lsr #29
   28984:	add	r0, sp, #4928	; 0x1340
   28988:	add	r0, r0, #48	; 0x30
   2898c:	str	r1, [r0]
   28990:	add	r1, sp, #4928	; 0x1340
   28994:	add	r1, r1, #40	; 0x28
   28998:	ldrd	sl, [r1]
   2899c:	ldrd	r0, [r0]
   289a0:	eor	sl, sl, r0
   289a4:	eor	fp, fp, r1
   289a8:	mov	r1, fp
   289ac:	lsr	ip, r4, #6
   289b0:	orr	ip, ip, r5, lsl #26
   289b4:	str	ip, [sp, #800]	; 0x320
   289b8:	lsr	ip, r5, #6
   289bc:	str	ip, [sp, #804]	; 0x324
   289c0:	add	ip, sp, #800	; 0x320
   289c4:	ldrd	r4, [ip]
   289c8:	eor	r4, r4, sl
   289cc:	eor	r5, r5, r1
   289d0:	adds	r4, r2, r4
   289d4:	adc	r5, r3, r5
   289d8:	mov	sl, r4
   289dc:	mov	fp, r5
   289e0:	ldrd	r4, [sp, #40]	; 0x28
   289e4:	ldrd	r2, [sp, #64]	; 0x40
   289e8:	eor	r2, r2, r4
   289ec:	eor	r3, r3, r5
   289f0:	mov	r0, r2
   289f4:	mov	r1, r3
   289f8:	ldrd	r2, [sp, #48]	; 0x30
   289fc:	b	28a10 <__assert_fail@plt+0x17724>
   28a00:	strbgt	r5, [r9, #2659]	; 0xa63
   28a04:	ldmdbcc	ip, {r0, r1, r4, r5, r7, sl, fp}
   28a08:	movt	r8, #6859	; 0x1acb
   28a0c:	vfnmami.f32	s21, s16, s20
   28a10:	and	r2, r2, r0
   28a14:	and	r3, r3, r1
   28a18:	mov	r0, r2
   28a1c:	mov	r1, r3
   28a20:	mov	r2, r4
   28a24:	mov	r3, r5
   28a28:	eor	r2, r2, r0
   28a2c:	eor	r3, r3, r1
   28a30:	mov	r0, r2
   28a34:	mov	r1, r3
   28a38:	sub	r3, pc, #56	; 0x38
   28a3c:	ldrd	r2, [r3]
   28a40:	strd	sl, [sp, #88]	; 0x58
   28a44:	adds	sl, sl, r2
   28a48:	adc	fp, fp, r3
   28a4c:	adds	r8, r8, sl
   28a50:	adc	r9, r9, fp
   28a54:	adds	r0, r0, r8
   28a58:	adc	r1, r1, r9
   28a5c:	ldrd	sl, [sp, #48]	; 0x30
   28a60:	lsr	r3, sl, #14
   28a64:	orr	r2, r3, fp, lsl #18
   28a68:	add	r3, sp, #4928	; 0x1340
   28a6c:	add	r3, r3, #56	; 0x38
   28a70:	str	r2, [r3]
   28a74:	lsr	r3, fp, #14
   28a78:	orr	r2, r3, sl, lsl #18
   28a7c:	add	r3, sp, #4928	; 0x1340
   28a80:	add	r3, r3, #60	; 0x3c
   28a84:	str	r2, [r3]
   28a88:	lsr	r3, sl, #18
   28a8c:	orr	r2, r3, fp, lsl #14
   28a90:	add	r3, sp, #4992	; 0x1380
   28a94:	str	r2, [r3]
   28a98:	lsr	r3, fp, #18
   28a9c:	orr	r2, r3, sl, lsl #14
   28aa0:	add	r3, sp, #4992	; 0x1380
   28aa4:	add	r3, r3, #4
   28aa8:	str	r2, [r3]
   28aac:	add	r3, sp, #4928	; 0x1340
   28ab0:	add	r3, r3, #56	; 0x38
   28ab4:	ldrd	r2, [r3]
   28ab8:	add	ip, sp, #4992	; 0x1380
   28abc:	ldrd	r8, [ip]
   28ac0:	eor	r2, r2, r8
   28ac4:	eor	r3, r3, r9
   28ac8:	lsl	ip, fp, #23
   28acc:	mov	r8, sl
   28ad0:	mov	r9, fp
   28ad4:	orr	ip, ip, sl, lsr #9
   28ad8:	add	sl, sp, #4992	; 0x1380
   28adc:	add	sl, sl, #12
   28ae0:	str	ip, [sl]
   28ae4:	lsl	ip, r8, #23
   28ae8:	orr	ip, ip, r9, lsr #9
   28aec:	add	r8, sp, #4992	; 0x1380
   28af0:	add	r8, r8, #8
   28af4:	str	ip, [r8]
   28af8:	ldrd	r8, [r8]
   28afc:	eor	r8, r8, r2
   28b00:	eor	r9, r9, r3
   28b04:	adds	r8, r0, r8
   28b08:	adc	r9, r1, r9
   28b0c:	mov	r2, r8
   28b10:	mov	r3, r9
   28b14:	ldrd	r8, [sp]
   28b18:	strd	r2, [sp]
   28b1c:	adds	r8, r8, r2
   28b20:	adc	r9, r9, r3
   28b24:	ldrd	sl, [sp, #56]	; 0x38
   28b28:	lsr	r3, sl, #28
   28b2c:	orr	r1, r3, fp, lsl #4
   28b30:	add	r3, sp, #4992	; 0x1380
   28b34:	add	r3, r3, #16
   28b38:	str	r1, [r3]
   28b3c:	lsr	r3, fp, #28
   28b40:	orr	r1, r3, sl, lsl #4
   28b44:	add	r3, sp, #4992	; 0x1380
   28b48:	add	r3, r3, #20
   28b4c:	str	r1, [r3]
   28b50:	lsl	r3, fp, #30
   28b54:	orr	r1, r3, sl, lsr #2
   28b58:	add	r3, sp, #4992	; 0x1380
   28b5c:	add	r3, r3, #28
   28b60:	str	r1, [r3]
   28b64:	lsl	r3, sl, #30
   28b68:	orr	r1, r3, fp, lsr #2
   28b6c:	add	r3, sp, #4992	; 0x1380
   28b70:	add	r3, r3, #24
   28b74:	str	r1, [r3]
   28b78:	add	r3, sp, #4992	; 0x1380
   28b7c:	add	r3, r3, #16
   28b80:	ldrd	r2, [r3]
   28b84:	add	r1, sp, #4992	; 0x1380
   28b88:	add	r1, r1, #24
   28b8c:	ldrd	r0, [r1]
   28b90:	eor	r2, r2, r0
   28b94:	eor	r3, r3, r1
   28b98:	lsl	r1, fp, #25
   28b9c:	orr	r1, r1, sl, lsr #7
   28ba0:	add	r0, sp, #4992	; 0x1380
   28ba4:	add	r0, r0, #36	; 0x24
   28ba8:	str	r1, [r0]
   28bac:	lsl	r1, sl, #25
   28bb0:	orr	r1, r1, fp, lsr #7
   28bb4:	add	r0, sp, #4992	; 0x1380
   28bb8:	add	r0, r0, #32
   28bbc:	str	r1, [r0]
   28bc0:	ldrd	r0, [r0]
   28bc4:	eor	r0, r0, r2
   28bc8:	eor	r1, r1, r3
   28bcc:	mov	r2, r0
   28bd0:	mov	r3, r1
   28bd4:	orr	r0, sl, r6
   28bd8:	orr	r1, fp, r7
   28bdc:	ldrd	sl, [sp, #176]	; 0xb0
   28be0:	and	sl, sl, r0
   28be4:	and	fp, fp, r1
   28be8:	mov	r0, sl
   28bec:	mov	r1, fp
   28bf0:	ldrd	r6, [sp, #168]	; 0xa8
   28bf4:	ldrd	sl, [sp, #56]	; 0x38
   28bf8:	and	sl, sl, r6
   28bfc:	and	fp, fp, r7
   28c00:	orr	r6, sl, r0
   28c04:	orr	r7, fp, r1
   28c08:	adds	r0, r6, r2
   28c0c:	adc	r1, r7, r3
   28c10:	ldrd	r2, [sp]
   28c14:	adds	r2, r2, r0
   28c18:	adc	r3, r3, r1
   28c1c:	strd	r2, [sp, #40]	; 0x28
   28c20:	ldrd	r0, [sp, #96]	; 0x60
   28c24:	lsr	r3, r0, #1
   28c28:	orr	ip, r3, r1, lsl #31
   28c2c:	add	r3, sp, #4992	; 0x1380
   28c30:	add	r3, r3, #40	; 0x28
   28c34:	str	ip, [r3]
   28c38:	lsr	r3, r1, #1
   28c3c:	orr	ip, r3, r0, lsl #31
   28c40:	add	r3, sp, #4992	; 0x1380
   28c44:	add	r3, r3, #44	; 0x2c
   28c48:	str	ip, [r3]
   28c4c:	lsr	r3, r0, #8
   28c50:	orr	ip, r3, r1, lsl #24
   28c54:	add	r3, sp, #4992	; 0x1380
   28c58:	add	r3, r3, #48	; 0x30
   28c5c:	str	ip, [r3]
   28c60:	lsr	r3, r1, #8
   28c64:	orr	ip, r3, r0, lsl #24
   28c68:	add	r3, sp, #4992	; 0x1380
   28c6c:	add	r3, r3, #52	; 0x34
   28c70:	str	ip, [r3]
   28c74:	add	r3, sp, #4992	; 0x1380
   28c78:	add	r3, r3, #40	; 0x28
   28c7c:	ldrd	r2, [r3]
   28c80:	add	ip, sp, #4992	; 0x1380
   28c84:	add	ip, ip, #48	; 0x30
   28c88:	ldrd	r6, [ip]
   28c8c:	eor	r2, r2, r6
   28c90:	eor	r3, r3, r7
   28c94:	lsr	ip, r0, #7
   28c98:	orr	ip, ip, r1, lsl #25
   28c9c:	str	ip, [sp, #808]	; 0x328
   28ca0:	lsr	r1, r1, #7
   28ca4:	str	r1, [sp, #812]	; 0x32c
   28ca8:	add	r1, sp, #808	; 0x328
   28cac:	ldrd	r6, [r1]
   28cb0:	eor	r6, r6, r2
   28cb4:	eor	r7, r7, r3
   28cb8:	ldrd	r0, [sp, #32]
   28cbc:	adds	r0, r0, r6
   28cc0:	adc	r1, r1, r7
   28cc4:	ldrd	sl, [sp, #144]	; 0x90
   28cc8:	adds	sl, sl, r0
   28ccc:	adc	fp, fp, r1
   28cd0:	mov	r2, sl
   28cd4:	mov	r3, fp
   28cd8:	ldrd	sl, [sp, #80]	; 0x50
   28cdc:	lsr	r1, sl, #19
   28ce0:	orr	r1, r1, fp, lsl #13
   28ce4:	add	r0, sp, #4992	; 0x1380
   28ce8:	add	r0, r0, #56	; 0x38
   28cec:	str	r1, [r0]
   28cf0:	lsr	r1, fp, #19
   28cf4:	orr	r1, r1, sl, lsl #13
   28cf8:	add	r0, sp, #4992	; 0x1380
   28cfc:	add	r0, r0, #60	; 0x3c
   28d00:	str	r1, [r0]
   28d04:	lsl	r1, fp, #3
   28d08:	orr	r1, r1, sl, lsr #29
   28d0c:	add	r0, sp, #5056	; 0x13c0
   28d10:	add	r0, r0, #4
   28d14:	str	r1, [r0]
   28d18:	lsl	r1, sl, #3
   28d1c:	orr	r1, r1, fp, lsr #29
   28d20:	add	r0, sp, #5056	; 0x13c0
   28d24:	str	r1, [r0]
   28d28:	add	r1, sp, #4992	; 0x1380
   28d2c:	add	r1, r1, #56	; 0x38
   28d30:	ldrd	r6, [r1]
   28d34:	ldrd	r0, [r0]
   28d38:	eor	r6, r6, r0
   28d3c:	eor	r7, r7, r1
   28d40:	mov	r0, r6
   28d44:	mov	r1, r7
   28d48:	lsr	ip, sl, #6
   28d4c:	orr	ip, ip, fp, lsl #26
   28d50:	str	ip, [sp, #816]	; 0x330
   28d54:	lsr	ip, fp, #6
   28d58:	str	ip, [sp, #820]	; 0x334
   28d5c:	add	ip, sp, #816	; 0x330
   28d60:	ldrd	r6, [ip]
   28d64:	eor	r6, r6, r0
   28d68:	eor	r7, r7, r1
   28d6c:	adds	sl, r2, r6
   28d70:	adc	fp, r3, r7
   28d74:	ldrd	r2, [sp, #64]	; 0x40
   28d78:	mov	r0, r2
   28d7c:	mov	r1, r3
   28d80:	ldrd	r6, [sp, #48]	; 0x30
   28d84:	eor	r0, r0, r6
   28d88:	eor	r1, r1, r7
   28d8c:	and	r0, r0, r8
   28d90:	and	r1, r1, r9
   28d94:	eor	r2, r2, r0
   28d98:	eor	r3, r3, r1
   28d9c:	mov	r0, r2
   28da0:	mov	r1, r3
   28da4:	add	r3, pc, #892	; 0x37c
   28da8:	ldrd	r2, [r3]
   28dac:	strd	sl, [sp, #32]
   28db0:	adds	sl, sl, r2
   28db4:	adc	fp, fp, r3
   28db8:	adds	r4, r4, sl
   28dbc:	adc	r5, r5, fp
   28dc0:	adds	r0, r0, r4
   28dc4:	adc	r1, r1, r5
   28dc8:	lsr	r3, r8, #14
   28dcc:	orr	ip, r3, r9, lsl #18
   28dd0:	add	r3, sp, #5056	; 0x13c0
   28dd4:	add	r3, r3, #8
   28dd8:	str	ip, [r3]
   28ddc:	lsr	r3, r9, #14
   28de0:	orr	ip, r3, r8, lsl #18
   28de4:	add	r3, sp, #5056	; 0x13c0
   28de8:	add	r3, r3, #12
   28dec:	str	ip, [r3]
   28df0:	lsr	r3, r8, #18
   28df4:	orr	ip, r3, r9, lsl #14
   28df8:	add	r3, sp, #5056	; 0x13c0
   28dfc:	add	r3, r3, #16
   28e00:	str	ip, [r3]
   28e04:	lsr	r3, r9, #18
   28e08:	orr	ip, r3, r8, lsl #14
   28e0c:	add	r3, sp, #5056	; 0x13c0
   28e10:	add	r3, r3, #20
   28e14:	str	ip, [r3]
   28e18:	add	r3, sp, #5056	; 0x13c0
   28e1c:	add	r3, r3, #8
   28e20:	ldrd	r2, [r3]
   28e24:	add	ip, sp, #5056	; 0x13c0
   28e28:	add	ip, ip, #16
   28e2c:	ldrd	r6, [ip]
   28e30:	eor	r2, r2, r6
   28e34:	eor	r3, r3, r7
   28e38:	lsl	ip, r9, #23
   28e3c:	orr	ip, ip, r8, lsr #9
   28e40:	add	r4, sp, #5056	; 0x13c0
   28e44:	add	r4, r4, #28
   28e48:	str	ip, [r4]
   28e4c:	lsl	ip, r8, #23
   28e50:	orr	ip, ip, r9, lsr #9
   28e54:	add	r4, sp, #5056	; 0x13c0
   28e58:	add	r4, r4, #24
   28e5c:	str	ip, [r4]
   28e60:	ldrd	r6, [r4]
   28e64:	eor	r6, r6, r2
   28e68:	eor	r7, r7, r3
   28e6c:	adds	r4, r0, r6
   28e70:	adc	r5, r1, r7
   28e74:	ldrd	sl, [sp, #176]	; 0xb0
   28e78:	adds	sl, sl, r4
   28e7c:	adc	fp, fp, r5
   28e80:	ldrd	r0, [sp, #40]	; 0x28
   28e84:	lsr	r3, r0, #28
   28e88:	orr	r2, r3, r1, lsl #4
   28e8c:	add	r3, sp, #5056	; 0x13c0
   28e90:	add	r3, r3, #32
   28e94:	str	r2, [r3]
   28e98:	lsr	r3, r1, #28
   28e9c:	orr	r2, r3, r0, lsl #4
   28ea0:	add	r3, sp, #5056	; 0x13c0
   28ea4:	add	r3, r3, #36	; 0x24
   28ea8:	str	r2, [r3]
   28eac:	lsl	r3, r1, #30
   28eb0:	orr	r2, r3, r0, lsr #2
   28eb4:	add	r3, sp, #5056	; 0x13c0
   28eb8:	add	r3, r3, #44	; 0x2c
   28ebc:	str	r2, [r3]
   28ec0:	lsl	r3, r0, #30
   28ec4:	orr	r2, r3, r1, lsr #2
   28ec8:	add	r3, sp, #5056	; 0x13c0
   28ecc:	add	r3, r3, #40	; 0x28
   28ed0:	str	r2, [r3]
   28ed4:	add	r3, sp, #5056	; 0x13c0
   28ed8:	add	r3, r3, #32
   28edc:	ldrd	r2, [r3]
   28ee0:	add	ip, sp, #5056	; 0x13c0
   28ee4:	add	ip, ip, #40	; 0x28
   28ee8:	ldrd	r6, [ip]
   28eec:	eor	r2, r2, r6
   28ef0:	eor	r3, r3, r7
   28ef4:	mov	r6, r0
   28ef8:	mov	r7, r1
   28efc:	lsl	r1, r1, #25
   28f00:	orr	r1, r1, r6, lsr #7
   28f04:	add	r0, sp, #5056	; 0x13c0
   28f08:	add	r0, r0, #52	; 0x34
   28f0c:	str	r1, [r0]
   28f10:	lsl	r1, r6, #25
   28f14:	orr	r1, r1, r7, lsr #7
   28f18:	add	r0, sp, #5056	; 0x13c0
   28f1c:	add	r0, r0, #48	; 0x30
   28f20:	str	r1, [r0]
   28f24:	ldrd	r6, [r0]
   28f28:	eor	r6, r6, r2
   28f2c:	eor	r7, r7, r3
   28f30:	strd	r6, [sp]
   28f34:	ldrd	r2, [sp, #40]	; 0x28
   28f38:	ldrd	r6, [sp, #56]	; 0x38
   28f3c:	orr	r6, r6, r2
   28f40:	orr	r7, r7, r3
   28f44:	mov	r0, r6
   28f48:	mov	r1, r7
   28f4c:	ldrd	r6, [sp, #168]	; 0xa8
   28f50:	and	r6, r6, r0
   28f54:	and	r7, r7, r1
   28f58:	mov	r0, r6
   28f5c:	mov	r1, r7
   28f60:	ldrd	r6, [sp, #56]	; 0x38
   28f64:	and	r6, r6, r2
   28f68:	and	r7, r7, r3
   28f6c:	orr	r2, r6, r0
   28f70:	orr	r3, r7, r1
   28f74:	mov	r0, r2
   28f78:	mov	r1, r3
   28f7c:	ldrd	r2, [sp]
   28f80:	adds	r2, r2, r0
   28f84:	adc	r3, r3, r1
   28f88:	adds	r4, r4, r2
   28f8c:	adc	r5, r5, r3
   28f90:	strd	r4, [sp, #176]	; 0xb0
   28f94:	ldrd	r4, [sp, #112]	; 0x70
   28f98:	lsr	r3, r4, #1
   28f9c:	orr	r1, r3, r5, lsl #31
   28fa0:	add	r3, sp, #5056	; 0x13c0
   28fa4:	add	r3, r3, #56	; 0x38
   28fa8:	str	r1, [r3]
   28fac:	lsr	r3, r5, #1
   28fb0:	orr	r1, r3, r4, lsl #31
   28fb4:	add	r3, sp, #5056	; 0x13c0
   28fb8:	add	r3, r3, #60	; 0x3c
   28fbc:	str	r1, [r3]
   28fc0:	lsr	r3, r4, #8
   28fc4:	orr	r1, r3, r5, lsl #24
   28fc8:	add	r3, sp, #5120	; 0x1400
   28fcc:	str	r1, [r3]
   28fd0:	lsr	r3, r5, #8
   28fd4:	orr	r1, r3, r4, lsl #24
   28fd8:	add	r3, sp, #5120	; 0x1400
   28fdc:	add	r3, r3, #4
   28fe0:	str	r1, [r3]
   28fe4:	add	r3, sp, #5056	; 0x13c0
   28fe8:	add	r3, r3, #56	; 0x38
   28fec:	ldrd	r2, [r3]
   28ff0:	add	r1, sp, #5120	; 0x1400
   28ff4:	ldrd	r6, [r1]
   28ff8:	eor	r2, r2, r6
   28ffc:	eor	r3, r3, r7
   29000:	lsr	r1, r4, #7
   29004:	orr	r1, r1, r5, lsl #25
   29008:	str	r1, [sp, #824]	; 0x338
   2900c:	lsr	r1, r5, #7
   29010:	str	r1, [sp, #828]	; 0x33c
   29014:	add	r1, sp, #824	; 0x338
   29018:	ldrd	r6, [r1]
   2901c:	eor	r6, r6, r2
   29020:	eor	r7, r7, r3
   29024:	ldrd	r0, [sp, #96]	; 0x60
   29028:	adds	r0, r0, r6
   2902c:	adc	r1, r1, r7
   29030:	ldrd	r4, [sp, #152]	; 0x98
   29034:	adds	r4, r4, r0
   29038:	adc	r5, r5, r1
   2903c:	mov	r2, r4
   29040:	mov	r3, r5
   29044:	ldrd	r4, [sp, #88]	; 0x58
   29048:	lsr	r1, r4, #19
   2904c:	orr	r1, r1, r5, lsl #13
   29050:	add	r0, sp, #5120	; 0x1400
   29054:	add	r0, r0, #8
   29058:	str	r1, [r0]
   2905c:	lsr	r1, r5, #19
   29060:	orr	r1, r1, r4, lsl #13
   29064:	add	r0, sp, #5120	; 0x1400
   29068:	add	r0, r0, #12
   2906c:	str	r1, [r0]
   29070:	lsl	r1, r5, #3
   29074:	orr	r1, r1, r4, lsr #29
   29078:	add	r0, sp, #5120	; 0x1400
   2907c:	add	r0, r0, #20
   29080:	str	r1, [r0]
   29084:	lsl	r1, r4, #3
   29088:	orr	r1, r1, r5, lsr #29
   2908c:	add	r0, sp, #5120	; 0x1400
   29090:	add	r0, r0, #16
   29094:	str	r1, [r0]
   29098:	add	r1, sp, #5120	; 0x1400
   2909c:	add	r1, r1, #8
   290a0:	ldrd	r6, [r1]
   290a4:	ldrd	r0, [r0]
   290a8:	eor	r6, r6, r0
   290ac:	eor	r7, r7, r1
   290b0:	mov	r0, r6
   290b4:	mov	r1, r7
   290b8:	lsr	ip, r4, #6
   290bc:	orr	ip, ip, r5, lsl #26
   290c0:	str	ip, [sp, #832]	; 0x340
   290c4:	lsr	ip, r5, #6
   290c8:	str	ip, [sp, #836]	; 0x344
   290cc:	add	ip, sp, #832	; 0x340
   290d0:	ldrd	r6, [ip]
   290d4:	eor	r6, r6, r0
   290d8:	eor	r7, r7, r1
   290dc:	adds	r4, r2, r6
   290e0:	adc	r5, r3, r7
   290e4:	mov	r6, r4
   290e8:	mov	r7, r5
   290ec:	ldrd	r0, [sp, #48]	; 0x30
   290f0:	eor	r0, r0, r8
   290f4:	eor	r1, r1, r9
   290f8:	mov	r4, sl
   290fc:	mov	r5, fp
   29100:	mov	r2, sl
   29104:	mov	r3, fp
   29108:	and	r2, r2, r0
   2910c:	and	r3, r3, r1
   29110:	ldrd	sl, [sp, #48]	; 0x30
   29114:	eor	sl, sl, r2
   29118:	eor	fp, fp, r3
   2911c:	mov	r0, sl
   29120:	mov	r1, fp
   29124:	b	29138 <__assert_fail@plt+0x17e4c>
   29128:			; <UNDEFINED> instruction: 0x7763e373
   2912c:	blpl	fe75ba70 <optarg@@GLIBC_2.4+0xfe7118c8>
   29130:	ldrtle	fp, [r2], r3, lsr #17
   29134:	stmdavs	lr!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
   29138:	sub	r3, pc, #16
   2913c:	ldrd	r2, [r3]
   29140:	strd	r6, [sp, #96]	; 0x60
   29144:	adds	sl, r6, r2
   29148:	adc	fp, r7, r3
   2914c:	mov	r2, sl
   29150:	mov	r3, fp
   29154:	ldrd	sl, [sp, #64]	; 0x40
   29158:	adds	sl, sl, r2
   2915c:	adc	fp, fp, r3
   29160:	adds	r0, r0, sl
   29164:	adc	r1, r1, fp
   29168:	lsr	r3, r4, #14
   2916c:	orr	ip, r3, r5, lsl #18
   29170:	add	r3, sp, #5120	; 0x1400
   29174:	add	r3, r3, #24
   29178:	str	ip, [r3]
   2917c:	lsr	r3, r5, #14
   29180:	orr	ip, r3, r4, lsl #18
   29184:	add	r3, sp, #5120	; 0x1400
   29188:	add	r3, r3, #28
   2918c:	str	ip, [r3]
   29190:	lsr	r3, r4, #18
   29194:	orr	ip, r3, r5, lsl #14
   29198:	add	r3, sp, #5120	; 0x1400
   2919c:	add	r3, r3, #32
   291a0:	str	ip, [r3]
   291a4:	lsr	r3, r5, #18
   291a8:	orr	ip, r3, r4, lsl #14
   291ac:	add	r3, sp, #5120	; 0x1400
   291b0:	add	r3, r3, #36	; 0x24
   291b4:	str	ip, [r3]
   291b8:	add	r3, sp, #5120	; 0x1400
   291bc:	add	r3, r3, #24
   291c0:	ldrd	r2, [r3]
   291c4:	add	ip, sp, #5120	; 0x1400
   291c8:	add	ip, ip, #32
   291cc:	ldrd	r6, [ip]
   291d0:	eor	r2, r2, r6
   291d4:	eor	r3, r3, r7
   291d8:	lsl	ip, r5, #23
   291dc:	orr	ip, ip, r4, lsr #9
   291e0:	add	r6, sp, #5120	; 0x1400
   291e4:	add	r6, r6, #44	; 0x2c
   291e8:	str	ip, [r6]
   291ec:	lsl	ip, r4, #23
   291f0:	orr	ip, ip, r5, lsr #9
   291f4:	add	r6, sp, #5120	; 0x1400
   291f8:	add	r6, r6, #40	; 0x28
   291fc:	str	ip, [r6]
   29200:	ldrd	r6, [r6]
   29204:	eor	r6, r6, r2
   29208:	eor	r7, r7, r3
   2920c:	adds	r6, r0, r6
   29210:	adc	r7, r1, r7
   29214:	mov	r2, r6
   29218:	mov	r3, r7
   2921c:	ldrd	r6, [sp, #168]	; 0xa8
   29220:	strd	r2, [sp]
   29224:	adds	r6, r6, r2
   29228:	adc	r7, r7, r3
   2922c:	strd	r6, [sp, #64]	; 0x40
   29230:	ldrd	sl, [sp, #176]	; 0xb0
   29234:	lsr	r3, sl, #28
   29238:	orr	r1, r3, fp, lsl #4
   2923c:	add	r3, sp, #5120	; 0x1400
   29240:	add	r3, r3, #48	; 0x30
   29244:	str	r1, [r3]
   29248:	lsr	r3, fp, #28
   2924c:	orr	r1, r3, sl, lsl #4
   29250:	add	r3, sp, #5120	; 0x1400
   29254:	add	r3, r3, #52	; 0x34
   29258:	str	r1, [r3]
   2925c:	lsl	r3, fp, #30
   29260:	orr	r1, r3, sl, lsr #2
   29264:	add	r3, sp, #5120	; 0x1400
   29268:	add	r3, r3, #60	; 0x3c
   2926c:	str	r1, [r3]
   29270:	lsl	r3, sl, #30
   29274:	orr	r1, r3, fp, lsr #2
   29278:	add	r3, sp, #5120	; 0x1400
   2927c:	add	r3, r3, #56	; 0x38
   29280:	str	r1, [r3]
   29284:	add	r3, sp, #5120	; 0x1400
   29288:	add	r3, r3, #48	; 0x30
   2928c:	ldrd	r6, [r3]
   29290:	add	r3, sp, #5120	; 0x1400
   29294:	add	r3, r3, #56	; 0x38
   29298:	ldrd	r2, [r3]
   2929c:	eor	r6, r6, r2
   292a0:	eor	r7, r7, r3
   292a4:	mov	r2, r6
   292a8:	mov	r3, r7
   292ac:	lsl	r1, fp, #25
   292b0:	orr	r1, r1, sl, lsr #7
   292b4:	add	r0, sp, #5184	; 0x1440
   292b8:	add	r0, r0, #4
   292bc:	str	r1, [r0]
   292c0:	lsl	r1, sl, #25
   292c4:	orr	r1, r1, fp, lsr #7
   292c8:	add	r0, sp, #5184	; 0x1440
   292cc:	str	r1, [r0]
   292d0:	ldrd	r6, [r0]
   292d4:	eor	r6, r6, r2
   292d8:	eor	r7, r7, r3
   292dc:	strd	r6, [sp, #168]	; 0xa8
   292e0:	ldrd	r6, [sp, #40]	; 0x28
   292e4:	orr	r2, r6, sl
   292e8:	orr	r3, r7, fp
   292ec:	mov	r0, r2
   292f0:	mov	r1, r3
   292f4:	ldrd	r2, [sp, #56]	; 0x38
   292f8:	and	r2, r2, r0
   292fc:	and	r3, r3, r1
   29300:	mov	r0, r2
   29304:	mov	r1, r3
   29308:	mov	r2, r6
   2930c:	mov	r3, r7
   29310:	and	r2, r2, sl
   29314:	and	r3, r3, fp
   29318:	orr	r2, r2, r0
   2931c:	orr	r3, r3, r1
   29320:	mov	r0, r2
   29324:	mov	r1, r3
   29328:	ldrd	r2, [sp, #168]	; 0xa8
   2932c:	adds	r2, r2, r0
   29330:	adc	r3, r3, r1
   29334:	ldrd	r6, [sp]
   29338:	adds	r6, r6, r2
   2933c:	adc	r7, r7, r3
   29340:	strd	r6, [sp, #168]	; 0xa8
   29344:	ldrd	r0, [sp, #120]	; 0x78
   29348:	lsr	r3, r0, #1
   2934c:	orr	ip, r3, r1, lsl #31
   29350:	add	r3, sp, #5184	; 0x1440
   29354:	add	r3, r3, #8
   29358:	str	ip, [r3]
   2935c:	lsr	r3, r1, #1
   29360:	orr	ip, r3, r0, lsl #31
   29364:	add	r3, sp, #5184	; 0x1440
   29368:	add	r3, r3, #12
   2936c:	str	ip, [r3]
   29370:	lsr	r3, r0, #8
   29374:	orr	ip, r3, r1, lsl #24
   29378:	add	r3, sp, #5184	; 0x1440
   2937c:	add	r3, r3, #16
   29380:	str	ip, [r3]
   29384:	lsr	r3, r1, #8
   29388:	orr	ip, r3, r0, lsl #24
   2938c:	add	r3, sp, #5184	; 0x1440
   29390:	add	r3, r3, #20
   29394:	str	ip, [r3]
   29398:	add	r3, sp, #5184	; 0x1440
   2939c:	add	r3, r3, #8
   293a0:	ldrd	r2, [r3]
   293a4:	add	ip, sp, #5184	; 0x1440
   293a8:	add	ip, ip, #16
   293ac:	ldrd	r6, [ip]
   293b0:	eor	r2, r2, r6
   293b4:	eor	r3, r3, r7
   293b8:	lsr	ip, r0, #7
   293bc:	orr	ip, ip, r1, lsl #25
   293c0:	str	ip, [sp, #840]	; 0x348
   293c4:	lsr	r1, r1, #7
   293c8:	str	r1, [sp, #844]	; 0x34c
   293cc:	add	r1, sp, #840	; 0x348
   293d0:	ldrd	r6, [r1]
   293d4:	eor	r6, r6, r2
   293d8:	eor	r7, r7, r3
   293dc:	ldrd	r0, [sp, #112]	; 0x70
   293e0:	adds	r0, r0, r6
   293e4:	adc	r1, r1, r7
   293e8:	mov	r2, r0
   293ec:	mov	r3, r1
   293f0:	ldrd	r0, [sp, #160]	; 0xa0
   293f4:	adds	r0, r0, r2
   293f8:	adc	r1, r1, r3
   293fc:	mov	r2, r0
   29400:	mov	r3, r1
   29404:	ldrd	r6, [sp, #32]
   29408:	lsr	r1, r6, #19
   2940c:	orr	r1, r1, r7, lsl #13
   29410:	add	r0, sp, #5184	; 0x1440
   29414:	add	r0, r0, #24
   29418:	str	r1, [r0]
   2941c:	lsr	r1, r7, #19
   29420:	orr	r1, r1, r6, lsl #13
   29424:	add	r0, sp, #5184	; 0x1440
   29428:	add	r0, r0, #28
   2942c:	str	r1, [r0]
   29430:	lsl	r1, r7, #3
   29434:	orr	r1, r1, r6, lsr #29
   29438:	add	r0, sp, #5184	; 0x1440
   2943c:	add	r0, r0, #36	; 0x24
   29440:	str	r1, [r0]
   29444:	lsl	r1, r6, #3
   29448:	orr	r1, r1, r7, lsr #29
   2944c:	add	r0, sp, #5184	; 0x1440
   29450:	add	r0, r0, #32
   29454:	str	r1, [r0]
   29458:	add	r1, sp, #5184	; 0x1440
   2945c:	add	r1, r1, #24
   29460:	ldrd	r6, [r1]
   29464:	ldrd	r0, [r0]
   29468:	eor	r6, r6, r0
   2946c:	eor	r7, r7, r1
   29470:	mov	r0, r6
   29474:	mov	r1, r7
   29478:	ldrd	r6, [sp, #32]
   2947c:	lsr	ip, r6, #6
   29480:	orr	ip, ip, r7, lsl #26
   29484:	str	ip, [sp, #848]	; 0x350
   29488:	ldr	ip, [sp, #36]	; 0x24
   2948c:	lsr	ip, ip, #6
   29490:	str	ip, [sp, #852]	; 0x354
   29494:	add	ip, sp, #848	; 0x350
   29498:	ldrd	r6, [ip]
   2949c:	eor	r6, r6, r0
   294a0:	eor	r7, r7, r1
   294a4:	adds	r6, r2, r6
   294a8:	adc	r7, r3, r7
   294ac:	strd	r4, [sp, #184]	; 0xb8
   294b0:	mov	r0, r4
   294b4:	mov	r1, r5
   294b8:	eor	r0, r0, r8
   294bc:	eor	r1, r1, r9
   294c0:	ldrd	r4, [sp, #64]	; 0x40
   294c4:	and	r4, r4, r0
   294c8:	and	r5, r5, r1
   294cc:	mov	r0, r4
   294d0:	mov	r1, r5
   294d4:	eor	r0, r0, r8
   294d8:	eor	r1, r1, r9
   294dc:	add	r3, pc, #892	; 0x37c
   294e0:	ldrd	r2, [r3]
   294e4:	strd	r6, [sp, #112]	; 0x70
   294e8:	adds	r6, r6, r2
   294ec:	adc	r7, r7, r3
   294f0:	mov	r2, r6
   294f4:	mov	r3, r7
   294f8:	ldrd	r6, [sp, #48]	; 0x30
   294fc:	adds	r6, r6, r2
   29500:	adc	r7, r7, r3
   29504:	adds	r0, r0, r6
   29508:	adc	r1, r1, r7
   2950c:	ldrd	r4, [sp, #64]	; 0x40
   29510:	lsr	r3, r4, #14
   29514:	orr	ip, r3, r5, lsl #18
   29518:	add	r3, sp, #5184	; 0x1440
   2951c:	add	r3, r3, #40	; 0x28
   29520:	str	ip, [r3]
   29524:	lsr	r3, r5, #14
   29528:	orr	ip, r3, r4, lsl #18
   2952c:	add	r3, sp, #5184	; 0x1440
   29530:	add	r3, r3, #44	; 0x2c
   29534:	str	ip, [r3]
   29538:	lsr	r3, r4, #18
   2953c:	orr	ip, r3, r5, lsl #14
   29540:	add	r3, sp, #5184	; 0x1440
   29544:	add	r3, r3, #48	; 0x30
   29548:	str	ip, [r3]
   2954c:	lsr	r3, r5, #18
   29550:	orr	ip, r3, r4, lsl #14
   29554:	add	r3, sp, #5184	; 0x1440
   29558:	add	r3, r3, #52	; 0x34
   2955c:	str	ip, [r3]
   29560:	add	r3, sp, #5184	; 0x1440
   29564:	add	r3, r3, #40	; 0x28
   29568:	ldrd	r2, [r3]
   2956c:	add	ip, sp, #5184	; 0x1440
   29570:	add	ip, ip, #48	; 0x30
   29574:	ldrd	r6, [ip]
   29578:	eor	r2, r2, r6
   2957c:	eor	r3, r3, r7
   29580:	lsl	ip, r5, #23
   29584:	orr	ip, ip, r4, lsr #9
   29588:	add	r6, sp, #5184	; 0x1440
   2958c:	add	r6, r6, #60	; 0x3c
   29590:	str	ip, [r6]
   29594:	lsl	ip, r4, #23
   29598:	orr	ip, ip, r5, lsr #9
   2959c:	add	r4, sp, #5184	; 0x1440
   295a0:	add	r4, r4, #56	; 0x38
   295a4:	str	ip, [r4]
   295a8:	ldrd	r6, [r4]
   295ac:	eor	r6, r6, r2
   295b0:	eor	r7, r7, r3
   295b4:	adds	r6, r0, r6
   295b8:	adc	r7, r1, r7
   295bc:	mov	r2, r6
   295c0:	mov	r3, r7
   295c4:	strd	r2, [sp]
   295c8:	ldrd	r0, [sp, #56]	; 0x38
   295cc:	adds	r0, r0, r6
   295d0:	adc	r1, r1, r7
   295d4:	mov	r2, r0
   295d8:	mov	r3, r1
   295dc:	strd	r2, [sp, #56]	; 0x38
   295e0:	ldrd	r6, [sp, #168]	; 0xa8
   295e4:	lsr	r3, r6, #28
   295e8:	orr	r1, r3, r7, lsl #4
   295ec:	add	r3, sp, #5248	; 0x1480
   295f0:	str	r1, [r3]
   295f4:	lsr	r3, r7, #28
   295f8:	orr	r1, r3, r6, lsl #4
   295fc:	add	r3, sp, #5248	; 0x1480
   29600:	add	r3, r3, #4
   29604:	str	r1, [r3]
   29608:	lsl	r3, r7, #30
   2960c:	orr	r1, r3, r6, lsr #2
   29610:	add	r3, sp, #5248	; 0x1480
   29614:	add	r3, r3, #12
   29618:	str	r1, [r3]
   2961c:	lsl	r3, r6, #30
   29620:	orr	r1, r3, r7, lsr #2
   29624:	add	r3, sp, #5248	; 0x1480
   29628:	add	r3, r3, #8
   2962c:	str	r1, [r3]
   29630:	add	r3, sp, #5248	; 0x1480
   29634:	ldrd	r2, [r3]
   29638:	add	r1, sp, #5248	; 0x1480
   2963c:	add	r1, r1, #8
   29640:	ldrd	r4, [r1]
   29644:	eor	r2, r2, r4
   29648:	eor	r3, r3, r5
   2964c:	lsl	r1, r7, #25
   29650:	orr	r1, r1, r6, lsr #7
   29654:	add	r0, sp, #5248	; 0x1480
   29658:	add	r0, r0, #20
   2965c:	str	r1, [r0]
   29660:	lsl	r1, r6, #25
   29664:	orr	r1, r1, r7, lsr #7
   29668:	add	r0, sp, #5248	; 0x1480
   2966c:	add	r0, r0, #16
   29670:	str	r1, [r0]
   29674:	ldrd	r4, [r0]
   29678:	eor	r4, r4, r2
   2967c:	eor	r5, r5, r3
   29680:	mov	r2, r4
   29684:	mov	r3, r5
   29688:	mov	r4, sl
   2968c:	mov	r5, fp
   29690:	orr	sl, sl, r6
   29694:	orr	fp, fp, r7
   29698:	mov	r0, sl
   2969c:	mov	r1, fp
   296a0:	ldrd	sl, [sp, #40]	; 0x28
   296a4:	and	sl, sl, r0
   296a8:	and	fp, fp, r1
   296ac:	mov	r0, sl
   296b0:	mov	r1, fp
   296b4:	mov	sl, r4
   296b8:	mov	fp, r5
   296bc:	and	sl, sl, r6
   296c0:	and	fp, fp, r7
   296c4:	orr	r0, r0, sl
   296c8:	orr	r1, r1, fp
   296cc:	adds	r0, r0, r2
   296d0:	adc	r1, r1, r3
   296d4:	ldrd	r2, [sp]
   296d8:	adds	r2, r2, r0
   296dc:	adc	r3, r3, r1
   296e0:	strd	r2, [sp]
   296e4:	ldrd	sl, [sp, #8]
   296e8:	lsr	r3, sl, #1
   296ec:	orr	r2, r3, fp, lsl #31
   296f0:	add	r3, sp, #5248	; 0x1480
   296f4:	add	r3, r3, #24
   296f8:	str	r2, [r3]
   296fc:	lsr	r3, fp, #1
   29700:	orr	r2, r3, sl, lsl #31
   29704:	add	r3, sp, #5248	; 0x1480
   29708:	add	r3, r3, #28
   2970c:	str	r2, [r3]
   29710:	lsr	r3, sl, #8
   29714:	orr	r2, r3, fp, lsl #24
   29718:	add	r3, sp, #5248	; 0x1480
   2971c:	add	r3, r3, #32
   29720:	str	r2, [r3]
   29724:	lsr	r3, fp, #8
   29728:	orr	r2, r3, sl, lsl #24
   2972c:	add	r3, sp, #5248	; 0x1480
   29730:	add	r3, r3, #36	; 0x24
   29734:	str	r2, [r3]
   29738:	add	r3, sp, #5248	; 0x1480
   2973c:	add	r3, r3, #24
   29740:	ldrd	r2, [r3]
   29744:	add	r1, sp, #5248	; 0x1480
   29748:	add	r1, r1, #32
   2974c:	ldrd	r4, [r1]
   29750:	eor	r2, r2, r4
   29754:	eor	r3, r3, r5
   29758:	lsr	r1, sl, #7
   2975c:	orr	r1, r1, fp, lsl #25
   29760:	str	r1, [sp, #856]	; 0x358
   29764:	lsr	r1, fp, #7
   29768:	str	r1, [sp, #860]	; 0x35c
   2976c:	add	r1, sp, #856	; 0x358
   29770:	ldrd	r4, [r1]
   29774:	eor	r4, r4, r2
   29778:	eor	r5, r5, r3
   2977c:	ldrd	r0, [sp, #120]	; 0x78
   29780:	adds	r0, r0, r4
   29784:	adc	r1, r1, r5
   29788:	ldrd	sl, [sp, #24]
   2978c:	adds	sl, sl, r0
   29790:	adc	fp, fp, r1
   29794:	mov	r2, sl
   29798:	mov	r3, fp
   2979c:	ldrd	sl, [sp, #96]	; 0x60
   297a0:	lsr	r1, sl, #19
   297a4:	orr	r1, r1, fp, lsl #13
   297a8:	add	r0, sp, #5248	; 0x1480
   297ac:	add	r0, r0, #40	; 0x28
   297b0:	str	r1, [r0]
   297b4:	lsr	r1, fp, #19
   297b8:	orr	r1, r1, sl, lsl #13
   297bc:	add	r0, sp, #5248	; 0x1480
   297c0:	add	r0, r0, #44	; 0x2c
   297c4:	str	r1, [r0]
   297c8:	lsl	r1, fp, #3
   297cc:	orr	r1, r1, sl, lsr #29
   297d0:	add	r0, sp, #5248	; 0x1480
   297d4:	add	r0, r0, #52	; 0x34
   297d8:	str	r1, [r0]
   297dc:	lsl	r1, sl, #3
   297e0:	orr	r1, r1, fp, lsr #29
   297e4:	add	r0, sp, #5248	; 0x1480
   297e8:	add	r0, r0, #48	; 0x30
   297ec:	str	r1, [r0]
   297f0:	add	r1, sp, #5248	; 0x1480
   297f4:	add	r1, r1, #40	; 0x28
   297f8:	ldrd	r4, [r1]
   297fc:	ldrd	r0, [r0]
   29800:	eor	r4, r4, r0
   29804:	eor	r5, r5, r1
   29808:	mov	r0, r4
   2980c:	mov	r1, r5
   29810:	lsr	ip, sl, #6
   29814:	orr	ip, ip, fp, lsl #26
   29818:	str	ip, [sp, #864]	; 0x360
   2981c:	lsr	ip, fp, #6
   29820:	str	ip, [sp, #868]	; 0x364
   29824:	add	ip, sp, #864	; 0x360
   29828:	ldrd	r4, [ip]
   2982c:	eor	r4, r4, r0
   29830:	eor	r5, r5, r1
   29834:	adds	r4, r2, r4
   29838:	adc	r5, r3, r5
   2983c:	mov	sl, r4
   29840:	mov	fp, r5
   29844:	ldrd	r4, [sp, #184]	; 0xb8
   29848:	ldrd	r2, [sp, #64]	; 0x40
   2984c:	eor	r2, r2, r4
   29850:	eor	r3, r3, r5
   29854:	mov	r0, r2
   29858:	mov	r1, r3
   2985c:	b	29870 <__assert_fail@plt+0x18584>
   29860:	sfmpl	f3, 3, [pc, #1008]!	; 29c58 <__assert_fail@plt+0x1896c>
   29864:	strvc	r8, [pc], #750	; 2986c <__assert_fail@plt+0x18580>
   29868:	tstmi	r7, #96, 30	; 0x180
   2986c:	stmiavc	r5!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}
   29870:	ldrd	r2, [sp, #56]	; 0x38
   29874:	and	r2, r2, r0
   29878:	and	r3, r3, r1
   2987c:	mov	r0, r2
   29880:	mov	r1, r3
   29884:	mov	r2, r4
   29888:	mov	r3, r5
   2988c:	eor	r2, r2, r0
   29890:	eor	r3, r3, r1
   29894:	mov	r0, r2
   29898:	mov	r1, r3
   2989c:	sub	r3, pc, #60	; 0x3c
   298a0:	ldrd	r2, [r3]
   298a4:	strd	sl, [sp, #48]	; 0x30
   298a8:	adds	sl, sl, r2
   298ac:	adc	fp, fp, r3
   298b0:	adds	r8, r8, sl
   298b4:	adc	r9, r9, fp
   298b8:	adds	r0, r0, r8
   298bc:	adc	r1, r1, r9
   298c0:	ldrd	sl, [sp, #56]	; 0x38
   298c4:	lsr	r3, sl, #14
   298c8:	orr	r2, r3, fp, lsl #18
   298cc:	add	r3, sp, #5248	; 0x1480
   298d0:	add	r3, r3, #56	; 0x38
   298d4:	str	r2, [r3]
   298d8:	lsr	r3, fp, #14
   298dc:	orr	r2, r3, sl, lsl #18
   298e0:	add	r3, sp, #5248	; 0x1480
   298e4:	add	r3, r3, #60	; 0x3c
   298e8:	str	r2, [r3]
   298ec:	lsr	r3, sl, #18
   298f0:	orr	r2, r3, fp, lsl #14
   298f4:	add	r3, sp, #5312	; 0x14c0
   298f8:	str	r2, [r3]
   298fc:	lsr	r3, fp, #18
   29900:	orr	r2, r3, sl, lsl #14
   29904:	add	r3, sp, #5312	; 0x14c0
   29908:	add	r3, r3, #4
   2990c:	str	r2, [r3]
   29910:	add	r3, sp, #5248	; 0x1480
   29914:	add	r3, r3, #56	; 0x38
   29918:	ldrd	r2, [r3]
   2991c:	add	ip, sp, #5312	; 0x14c0
   29920:	ldrd	r8, [ip]
   29924:	eor	r2, r2, r8
   29928:	eor	r3, r3, r9
   2992c:	lsl	ip, fp, #23
   29930:	mov	r8, sl
   29934:	mov	r9, fp
   29938:	orr	ip, ip, sl, lsr #9
   2993c:	add	sl, sp, #5312	; 0x14c0
   29940:	add	sl, sl, #12
   29944:	str	ip, [sl]
   29948:	lsl	ip, r8, #23
   2994c:	orr	ip, ip, r9, lsr #9
   29950:	add	r8, sp, #5312	; 0x14c0
   29954:	add	r8, r8, #8
   29958:	str	ip, [r8]
   2995c:	ldrd	r8, [r8]
   29960:	eor	r8, r8, r2
   29964:	eor	r9, r9, r3
   29968:	adds	r8, r0, r8
   2996c:	adc	r9, r1, r9
   29970:	mov	r2, r8
   29974:	mov	r3, r9
   29978:	ldrd	r8, [sp, #40]	; 0x28
   2997c:	strd	r2, [sp, #40]	; 0x28
   29980:	adds	r8, r8, r2
   29984:	adc	r9, r9, r3
   29988:	ldrd	sl, [sp]
   2998c:	lsr	r3, sl, #28
   29990:	orr	r1, r3, fp, lsl #4
   29994:	add	r3, sp, #5312	; 0x14c0
   29998:	add	r3, r3, #16
   2999c:	str	r1, [r3]
   299a0:	lsr	r3, fp, #28
   299a4:	orr	r1, r3, sl, lsl #4
   299a8:	add	r3, sp, #5312	; 0x14c0
   299ac:	add	r3, r3, #20
   299b0:	str	r1, [r3]
   299b4:	lsl	r3, fp, #30
   299b8:	orr	r1, r3, sl, lsr #2
   299bc:	add	r3, sp, #5312	; 0x14c0
   299c0:	add	r3, r3, #28
   299c4:	str	r1, [r3]
   299c8:	lsl	r3, sl, #30
   299cc:	orr	r1, r3, fp, lsr #2
   299d0:	add	r3, sp, #5312	; 0x14c0
   299d4:	add	r3, r3, #24
   299d8:	str	r1, [r3]
   299dc:	add	r3, sp, #5312	; 0x14c0
   299e0:	add	r3, r3, #16
   299e4:	ldrd	r2, [r3]
   299e8:	add	r1, sp, #5312	; 0x14c0
   299ec:	add	r1, r1, #24
   299f0:	ldrd	sl, [r1]
   299f4:	eor	r2, r2, sl
   299f8:	eor	r3, r3, fp
   299fc:	ldrd	sl, [sp]
   29a00:	lsl	r1, fp, #25
   29a04:	orr	r1, r1, sl, lsr #7
   29a08:	add	r0, sp, #5312	; 0x14c0
   29a0c:	add	r0, r0, #36	; 0x24
   29a10:	str	r1, [r0]
   29a14:	lsl	r1, sl, #25
   29a18:	orr	r1, r1, fp, lsr #7
   29a1c:	add	r0, sp, #5312	; 0x14c0
   29a20:	add	r0, r0, #32
   29a24:	str	r1, [r0]
   29a28:	ldrd	sl, [r0]
   29a2c:	eor	sl, sl, r2
   29a30:	eor	fp, fp, r3
   29a34:	mov	r2, sl
   29a38:	mov	r3, fp
   29a3c:	ldrd	r0, [sp]
   29a40:	orr	r0, r0, r6
   29a44:	orr	r1, r1, r7
   29a48:	ldrd	sl, [sp, #176]	; 0xb0
   29a4c:	and	sl, sl, r0
   29a50:	and	fp, fp, r1
   29a54:	mov	r0, sl
   29a58:	mov	r1, fp
   29a5c:	ldrd	r6, [sp, #168]	; 0xa8
   29a60:	ldrd	sl, [sp]
   29a64:	and	sl, sl, r6
   29a68:	and	fp, fp, r7
   29a6c:	orr	r6, sl, r0
   29a70:	orr	r7, fp, r1
   29a74:	adds	r0, r6, r2
   29a78:	adc	r1, r7, r3
   29a7c:	ldrd	r2, [sp, #40]	; 0x28
   29a80:	adds	r2, r2, r0
   29a84:	adc	r3, r3, r1
   29a88:	strd	r2, [sp, #40]	; 0x28
   29a8c:	ldrd	r0, [sp, #104]	; 0x68
   29a90:	lsr	r3, r0, #1
   29a94:	orr	ip, r3, r1, lsl #31
   29a98:	add	r3, sp, #5312	; 0x14c0
   29a9c:	add	r3, r3, #40	; 0x28
   29aa0:	str	ip, [r3]
   29aa4:	lsr	r3, r1, #1
   29aa8:	orr	ip, r3, r0, lsl #31
   29aac:	add	r3, sp, #5312	; 0x14c0
   29ab0:	add	r3, r3, #44	; 0x2c
   29ab4:	str	ip, [r3]
   29ab8:	lsr	r3, r0, #8
   29abc:	orr	ip, r3, r1, lsl #24
   29ac0:	add	r3, sp, #5312	; 0x14c0
   29ac4:	add	r3, r3, #48	; 0x30
   29ac8:	str	ip, [r3]
   29acc:	lsr	r3, r1, #8
   29ad0:	orr	ip, r3, r0, lsl #24
   29ad4:	add	r3, sp, #5312	; 0x14c0
   29ad8:	add	r3, r3, #52	; 0x34
   29adc:	str	ip, [r3]
   29ae0:	add	r3, sp, #5312	; 0x14c0
   29ae4:	add	r3, r3, #40	; 0x28
   29ae8:	ldrd	r2, [r3]
   29aec:	add	ip, sp, #5312	; 0x14c0
   29af0:	add	ip, ip, #48	; 0x30
   29af4:	ldrd	r6, [ip]
   29af8:	eor	r2, r2, r6
   29afc:	eor	r3, r3, r7
   29b00:	lsr	ip, r0, #7
   29b04:	orr	ip, ip, r1, lsl #25
   29b08:	str	ip, [sp, #872]	; 0x368
   29b0c:	lsr	r1, r1, #7
   29b10:	str	r1, [sp, #876]	; 0x36c
   29b14:	add	r1, sp, #872	; 0x368
   29b18:	ldrd	r6, [r1]
   29b1c:	eor	r6, r6, r2
   29b20:	eor	r7, r7, r3
   29b24:	ldrd	r0, [sp, #8]
   29b28:	adds	r0, r0, r6
   29b2c:	adc	r1, r1, r7
   29b30:	ldrd	sl, [sp, #72]	; 0x48
   29b34:	adds	sl, sl, r0
   29b38:	adc	fp, fp, r1
   29b3c:	mov	r2, sl
   29b40:	mov	r3, fp
   29b44:	ldrd	sl, [sp, #112]	; 0x70
   29b48:	lsr	r1, sl, #19
   29b4c:	orr	r1, r1, fp, lsl #13
   29b50:	add	r0, sp, #5312	; 0x14c0
   29b54:	add	r0, r0, #56	; 0x38
   29b58:	str	r1, [r0]
   29b5c:	lsr	r1, fp, #19
   29b60:	orr	r1, r1, sl, lsl #13
   29b64:	add	r0, sp, #5312	; 0x14c0
   29b68:	add	r0, r0, #60	; 0x3c
   29b6c:	str	r1, [r0]
   29b70:	lsl	r1, fp, #3
   29b74:	orr	r1, r1, sl, lsr #29
   29b78:	add	r0, sp, #5376	; 0x1500
   29b7c:	add	r0, r0, #4
   29b80:	str	r1, [r0]
   29b84:	lsl	r1, sl, #3
   29b88:	orr	r1, r1, fp, lsr #29
   29b8c:	add	r0, sp, #5376	; 0x1500
   29b90:	str	r1, [r0]
   29b94:	add	r1, sp, #5312	; 0x14c0
   29b98:	add	r1, r1, #56	; 0x38
   29b9c:	ldrd	r6, [r1]
   29ba0:	ldrd	r0, [r0]
   29ba4:	eor	r6, r6, r0
   29ba8:	eor	r7, r7, r1
   29bac:	mov	r0, r6
   29bb0:	mov	r1, r7
   29bb4:	lsr	ip, sl, #6
   29bb8:	orr	ip, ip, fp, lsl #26
   29bbc:	str	ip, [sp, #880]	; 0x370
   29bc0:	lsr	ip, fp, #6
   29bc4:	str	ip, [sp, #884]	; 0x374
   29bc8:	add	ip, sp, #880	; 0x370
   29bcc:	ldrd	r6, [ip]
   29bd0:	eor	r6, r6, r0
   29bd4:	eor	r7, r7, r1
   29bd8:	adds	sl, r2, r6
   29bdc:	adc	fp, r3, r7
   29be0:	ldrd	r2, [sp, #64]	; 0x40
   29be4:	mov	r0, r2
   29be8:	mov	r1, r3
   29bec:	ldrd	r6, [sp, #56]	; 0x38
   29bf0:	eor	r0, r0, r6
   29bf4:	eor	r1, r1, r7
   29bf8:	and	r0, r0, r8
   29bfc:	and	r1, r1, r9
   29c00:	eor	r2, r2, r0
   29c04:	eor	r3, r3, r1
   29c08:	mov	r0, r2
   29c0c:	mov	r1, r3
   29c10:	add	r3, pc, #896	; 0x380
   29c14:	ldrd	r2, [r3]
   29c18:	strd	sl, [sp, #8]
   29c1c:	adds	sl, sl, r2
   29c20:	adc	fp, fp, r3
   29c24:	adds	r4, r4, sl
   29c28:	adc	r5, r5, fp
   29c2c:	adds	r0, r0, r4
   29c30:	adc	r1, r1, r5
   29c34:	lsr	r3, r8, #14
   29c38:	orr	ip, r3, r9, lsl #18
   29c3c:	add	r3, sp, #5376	; 0x1500
   29c40:	add	r3, r3, #8
   29c44:	str	ip, [r3]
   29c48:	lsr	r3, r9, #14
   29c4c:	orr	ip, r3, r8, lsl #18
   29c50:	add	r3, sp, #5376	; 0x1500
   29c54:	add	r3, r3, #12
   29c58:	str	ip, [r3]
   29c5c:	lsr	r3, r8, #18
   29c60:	orr	ip, r3, r9, lsl #14
   29c64:	add	r3, sp, #5376	; 0x1500
   29c68:	add	r3, r3, #16
   29c6c:	str	ip, [r3]
   29c70:	lsr	r3, r9, #18
   29c74:	orr	ip, r3, r8, lsl #14
   29c78:	add	r3, sp, #5376	; 0x1500
   29c7c:	add	r3, r3, #20
   29c80:	str	ip, [r3]
   29c84:	add	r3, sp, #5376	; 0x1500
   29c88:	add	r3, r3, #8
   29c8c:	ldrd	r2, [r3]
   29c90:	add	ip, sp, #5376	; 0x1500
   29c94:	add	ip, ip, #16
   29c98:	ldrd	r6, [ip]
   29c9c:	eor	r2, r2, r6
   29ca0:	eor	r3, r3, r7
   29ca4:	lsl	ip, r9, #23
   29ca8:	orr	ip, ip, r8, lsr #9
   29cac:	add	r4, sp, #5376	; 0x1500
   29cb0:	add	r4, r4, #28
   29cb4:	str	ip, [r4]
   29cb8:	lsl	ip, r8, #23
   29cbc:	orr	ip, ip, r9, lsr #9
   29cc0:	add	r4, sp, #5376	; 0x1500
   29cc4:	add	r4, r4, #24
   29cc8:	str	ip, [r4]
   29ccc:	ldrd	r6, [r4]
   29cd0:	eor	r6, r6, r2
   29cd4:	eor	r7, r7, r3
   29cd8:	adds	r4, r0, r6
   29cdc:	adc	r5, r1, r7
   29ce0:	ldrd	sl, [sp, #176]	; 0xb0
   29ce4:	adds	sl, sl, r4
   29ce8:	adc	fp, fp, r5
   29cec:	ldrd	r0, [sp, #40]	; 0x28
   29cf0:	lsr	r3, r0, #28
   29cf4:	orr	r2, r3, r1, lsl #4
   29cf8:	add	r3, sp, #5376	; 0x1500
   29cfc:	add	r3, r3, #32
   29d00:	str	r2, [r3]
   29d04:	lsr	r3, r1, #28
   29d08:	orr	r2, r3, r0, lsl #4
   29d0c:	add	r3, sp, #5376	; 0x1500
   29d10:	add	r3, r3, #36	; 0x24
   29d14:	str	r2, [r3]
   29d18:	lsl	r3, r1, #30
   29d1c:	orr	r2, r3, r0, lsr #2
   29d20:	add	r3, sp, #5376	; 0x1500
   29d24:	add	r3, r3, #44	; 0x2c
   29d28:	str	r2, [r3]
   29d2c:	lsl	r3, r0, #30
   29d30:	orr	r2, r3, r1, lsr #2
   29d34:	add	r3, sp, #5376	; 0x1500
   29d38:	add	r3, r3, #40	; 0x28
   29d3c:	str	r2, [r3]
   29d40:	add	r3, sp, #5376	; 0x1500
   29d44:	add	r3, r3, #32
   29d48:	ldrd	r2, [r3]
   29d4c:	add	ip, sp, #5376	; 0x1500
   29d50:	add	ip, ip, #40	; 0x28
   29d54:	ldrd	r6, [ip]
   29d58:	eor	r2, r2, r6
   29d5c:	eor	r3, r3, r7
   29d60:	mov	r6, r0
   29d64:	mov	r7, r1
   29d68:	lsl	r1, r1, #25
   29d6c:	orr	r1, r1, r6, lsr #7
   29d70:	add	r0, sp, #5376	; 0x1500
   29d74:	add	r0, r0, #52	; 0x34
   29d78:	str	r1, [r0]
   29d7c:	lsl	r1, r6, #25
   29d80:	orr	r1, r1, r7, lsr #7
   29d84:	add	r0, sp, #5376	; 0x1500
   29d88:	add	r0, r0, #48	; 0x30
   29d8c:	str	r1, [r0]
   29d90:	ldrd	r6, [r0]
   29d94:	eor	r6, r6, r2
   29d98:	eor	r7, r7, r3
   29d9c:	strd	r6, [sp, #120]	; 0x78
   29da0:	ldrd	r2, [sp, #40]	; 0x28
   29da4:	ldrd	r6, [sp]
   29da8:	orr	r6, r6, r2
   29dac:	orr	r7, r7, r3
   29db0:	mov	r0, r6
   29db4:	mov	r1, r7
   29db8:	ldrd	r6, [sp, #168]	; 0xa8
   29dbc:	and	r6, r6, r0
   29dc0:	and	r7, r7, r1
   29dc4:	mov	r0, r6
   29dc8:	mov	r1, r7
   29dcc:	ldrd	r6, [sp]
   29dd0:	and	r6, r6, r2
   29dd4:	and	r7, r7, r3
   29dd8:	orr	r2, r6, r0
   29ddc:	orr	r3, r7, r1
   29de0:	mov	r0, r2
   29de4:	mov	r1, r3
   29de8:	ldrd	r2, [sp, #120]	; 0x78
   29dec:	adds	r2, r2, r0
   29df0:	adc	r3, r3, r1
   29df4:	adds	r4, r4, r2
   29df8:	adc	r5, r5, r3
   29dfc:	strd	r4, [sp, #176]	; 0xb0
   29e00:	ldrd	r4, [sp, #128]	; 0x80
   29e04:	lsr	r3, r4, #1
   29e08:	orr	r1, r3, r5, lsl #31
   29e0c:	add	r3, sp, #5376	; 0x1500
   29e10:	add	r3, r3, #56	; 0x38
   29e14:	str	r1, [r3]
   29e18:	lsr	r3, r5, #1
   29e1c:	orr	r1, r3, r4, lsl #31
   29e20:	add	r3, sp, #5376	; 0x1500
   29e24:	add	r3, r3, #60	; 0x3c
   29e28:	str	r1, [r3]
   29e2c:	lsr	r3, r4, #8
   29e30:	orr	r1, r3, r5, lsl #24
   29e34:	add	r3, sp, #5440	; 0x1540
   29e38:	str	r1, [r3]
   29e3c:	lsr	r3, r5, #8
   29e40:	orr	r1, r3, r4, lsl #24
   29e44:	add	r3, sp, #5440	; 0x1540
   29e48:	add	r3, r3, #4
   29e4c:	str	r1, [r3]
   29e50:	add	r3, sp, #5376	; 0x1500
   29e54:	add	r3, r3, #56	; 0x38
   29e58:	ldrd	r2, [r3]
   29e5c:	add	r1, sp, #5440	; 0x1540
   29e60:	ldrd	r6, [r1]
   29e64:	eor	r2, r2, r6
   29e68:	eor	r3, r3, r7
   29e6c:	lsr	r1, r4, #7
   29e70:	orr	r1, r1, r5, lsl #25
   29e74:	str	r1, [sp, #888]	; 0x378
   29e78:	lsr	r1, r5, #7
   29e7c:	str	r1, [sp, #892]	; 0x37c
   29e80:	add	r1, sp, #888	; 0x378
   29e84:	ldrd	r6, [r1]
   29e88:	eor	r6, r6, r2
   29e8c:	eor	r7, r7, r3
   29e90:	ldrd	r0, [sp, #104]	; 0x68
   29e94:	adds	r0, r0, r6
   29e98:	adc	r1, r1, r7
   29e9c:	ldrd	r4, [sp, #80]	; 0x50
   29ea0:	adds	r4, r4, r0
   29ea4:	adc	r5, r5, r1
   29ea8:	mov	r2, r4
   29eac:	mov	r3, r5
   29eb0:	ldrd	r4, [sp, #48]	; 0x30
   29eb4:	lsr	r1, r4, #19
   29eb8:	orr	r1, r1, r5, lsl #13
   29ebc:	add	r0, sp, #5440	; 0x1540
   29ec0:	add	r0, r0, #8
   29ec4:	str	r1, [r0]
   29ec8:	lsr	r1, r5, #19
   29ecc:	orr	r1, r1, r4, lsl #13
   29ed0:	add	r0, sp, #5440	; 0x1540
   29ed4:	add	r0, r0, #12
   29ed8:	str	r1, [r0]
   29edc:	lsl	r1, r5, #3
   29ee0:	orr	r1, r1, r4, lsr #29
   29ee4:	add	r0, sp, #5440	; 0x1540
   29ee8:	add	r0, r0, #20
   29eec:	str	r1, [r0]
   29ef0:	lsl	r1, r4, #3
   29ef4:	orr	r1, r1, r5, lsr #29
   29ef8:	add	r0, sp, #5440	; 0x1540
   29efc:	add	r0, r0, #16
   29f00:	str	r1, [r0]
   29f04:	add	r1, sp, #5440	; 0x1540
   29f08:	add	r1, r1, #8
   29f0c:	ldrd	r6, [r1]
   29f10:	ldrd	r0, [r0]
   29f14:	eor	r6, r6, r0
   29f18:	eor	r7, r7, r1
   29f1c:	mov	r0, r6
   29f20:	mov	r1, r7
   29f24:	lsr	ip, r4, #6
   29f28:	orr	ip, ip, r5, lsl #26
   29f2c:	str	ip, [sp, #896]	; 0x380
   29f30:	lsr	ip, r5, #6
   29f34:	str	ip, [sp, #900]	; 0x384
   29f38:	add	ip, sp, #896	; 0x380
   29f3c:	ldrd	r6, [ip]
   29f40:	eor	r6, r6, r0
   29f44:	eor	r7, r7, r1
   29f48:	adds	r4, r2, r6
   29f4c:	adc	r5, r3, r7
   29f50:	mov	r6, r4
   29f54:	mov	r7, r5
   29f58:	ldrd	r0, [sp, #56]	; 0x38
   29f5c:	eor	r0, r0, r8
   29f60:	eor	r1, r1, r9
   29f64:	mov	r4, sl
   29f68:	mov	r5, fp
   29f6c:	mov	r2, sl
   29f70:	mov	r3, fp
   29f74:	and	r2, r2, r0
   29f78:	and	r3, r3, r1
   29f7c:	ldrd	sl, [sp, #56]	; 0x38
   29f80:	eor	sl, sl, r2
   29f84:	eor	fp, fp, r3
   29f88:	mov	r0, sl
   29f8c:	mov	r1, fp
   29f90:	b	29fa8 <__assert_fail@plt+0x18cbc>
   29f94:	nop			; (mov r0, r0)
   29f98:	mvnsge	sl, r2, ror fp
   29f9c:	strbhi	r7, [r8], #2068	; 0x814
   29fa0:	bne	1938758 <optarg@@GLIBC_2.4+0x18ee5b0>
   29fa4:	sfmhi	f0, 2, [r7], {8}
   29fa8:	sub	r3, pc, #16
   29fac:	ldrd	r2, [r3]
   29fb0:	strd	r6, [sp, #104]	; 0x68
   29fb4:	adds	sl, r6, r2
   29fb8:	adc	fp, r7, r3
   29fbc:	mov	r2, sl
   29fc0:	mov	r3, fp
   29fc4:	ldrd	sl, [sp, #64]	; 0x40
   29fc8:	adds	sl, sl, r2
   29fcc:	adc	fp, fp, r3
   29fd0:	adds	r0, r0, sl
   29fd4:	adc	r1, r1, fp
   29fd8:	lsr	r3, r4, #14
   29fdc:	orr	ip, r3, r5, lsl #18
   29fe0:	add	r3, sp, #5440	; 0x1540
   29fe4:	add	r3, r3, #24
   29fe8:	str	ip, [r3]
   29fec:	lsr	r3, r5, #14
   29ff0:	orr	ip, r3, r4, lsl #18
   29ff4:	add	r3, sp, #5440	; 0x1540
   29ff8:	add	r3, r3, #28
   29ffc:	str	ip, [r3]
   2a000:	lsr	r3, r4, #18
   2a004:	orr	ip, r3, r5, lsl #14
   2a008:	add	r3, sp, #5440	; 0x1540
   2a00c:	add	r3, r3, #32
   2a010:	str	ip, [r3]
   2a014:	lsr	r3, r5, #18
   2a018:	orr	ip, r3, r4, lsl #14
   2a01c:	add	r3, sp, #5440	; 0x1540
   2a020:	add	r3, r3, #36	; 0x24
   2a024:	str	ip, [r3]
   2a028:	add	r3, sp, #5440	; 0x1540
   2a02c:	add	r3, r3, #24
   2a030:	ldrd	r2, [r3]
   2a034:	add	ip, sp, #5440	; 0x1540
   2a038:	add	ip, ip, #32
   2a03c:	ldrd	r6, [ip]
   2a040:	eor	r2, r2, r6
   2a044:	eor	r3, r3, r7
   2a048:	lsl	ip, r5, #23
   2a04c:	orr	ip, ip, r4, lsr #9
   2a050:	add	r6, sp, #5440	; 0x1540
   2a054:	add	r6, r6, #44	; 0x2c
   2a058:	str	ip, [r6]
   2a05c:	lsl	ip, r4, #23
   2a060:	orr	ip, ip, r5, lsr #9
   2a064:	add	r6, sp, #5440	; 0x1540
   2a068:	add	r6, r6, #40	; 0x28
   2a06c:	str	ip, [r6]
   2a070:	ldrd	r6, [r6]
   2a074:	eor	r6, r6, r2
   2a078:	eor	r7, r7, r3
   2a07c:	adds	r6, r0, r6
   2a080:	adc	r7, r1, r7
   2a084:	mov	r2, r6
   2a088:	mov	r3, r7
   2a08c:	ldrd	r6, [sp, #168]	; 0xa8
   2a090:	strd	r2, [sp, #120]	; 0x78
   2a094:	adds	r6, r6, r2
   2a098:	adc	r7, r7, r3
   2a09c:	strd	r6, [sp, #64]	; 0x40
   2a0a0:	ldrd	sl, [sp, #176]	; 0xb0
   2a0a4:	lsr	r3, sl, #28
   2a0a8:	orr	r1, r3, fp, lsl #4
   2a0ac:	add	r3, sp, #5440	; 0x1540
   2a0b0:	add	r3, r3, #48	; 0x30
   2a0b4:	str	r1, [r3]
   2a0b8:	lsr	r3, fp, #28
   2a0bc:	orr	r1, r3, sl, lsl #4
   2a0c0:	add	r3, sp, #5440	; 0x1540
   2a0c4:	add	r3, r3, #52	; 0x34
   2a0c8:	str	r1, [r3]
   2a0cc:	lsl	r3, fp, #30
   2a0d0:	orr	r1, r3, sl, lsr #2
   2a0d4:	add	r3, sp, #5440	; 0x1540
   2a0d8:	add	r3, r3, #60	; 0x3c
   2a0dc:	str	r1, [r3]
   2a0e0:	lsl	r3, sl, #30
   2a0e4:	orr	r1, r3, fp, lsr #2
   2a0e8:	add	r3, sp, #5440	; 0x1540
   2a0ec:	add	r3, r3, #56	; 0x38
   2a0f0:	str	r1, [r3]
   2a0f4:	add	r3, sp, #5440	; 0x1540
   2a0f8:	add	r3, r3, #48	; 0x30
   2a0fc:	ldrd	r6, [r3]
   2a100:	add	r3, sp, #5440	; 0x1540
   2a104:	add	r3, r3, #56	; 0x38
   2a108:	ldrd	r2, [r3]
   2a10c:	eor	r6, r6, r2
   2a110:	eor	r7, r7, r3
   2a114:	mov	r2, r6
   2a118:	mov	r3, r7
   2a11c:	lsl	r1, fp, #25
   2a120:	orr	r1, r1, sl, lsr #7
   2a124:	add	r0, sp, #5504	; 0x1580
   2a128:	add	r0, r0, #4
   2a12c:	str	r1, [r0]
   2a130:	lsl	r1, sl, #25
   2a134:	orr	r1, r1, fp, lsr #7
   2a138:	add	r0, sp, #5504	; 0x1580
   2a13c:	str	r1, [r0]
   2a140:	ldrd	r6, [r0]
   2a144:	eor	r6, r6, r2
   2a148:	eor	r7, r7, r3
   2a14c:	strd	r6, [sp, #168]	; 0xa8
   2a150:	ldrd	r6, [sp, #40]	; 0x28
   2a154:	orr	r2, r6, sl
   2a158:	orr	r3, r7, fp
   2a15c:	mov	r0, r2
   2a160:	mov	r1, r3
   2a164:	ldrd	r2, [sp]
   2a168:	and	r2, r2, r0
   2a16c:	and	r3, r3, r1
   2a170:	mov	r0, r2
   2a174:	mov	r1, r3
   2a178:	mov	r2, r6
   2a17c:	mov	r3, r7
   2a180:	and	r2, r2, sl
   2a184:	and	r3, r3, fp
   2a188:	orr	r2, r2, r0
   2a18c:	orr	r3, r3, r1
   2a190:	mov	r0, r2
   2a194:	mov	r1, r3
   2a198:	ldrd	r2, [sp, #168]	; 0xa8
   2a19c:	adds	r2, r2, r0
   2a1a0:	adc	r3, r3, r1
   2a1a4:	ldrd	r6, [sp, #120]	; 0x78
   2a1a8:	adds	r6, r6, r2
   2a1ac:	adc	r7, r7, r3
   2a1b0:	strd	r6, [sp, #168]	; 0xa8
   2a1b4:	ldrd	r0, [sp, #136]	; 0x88
   2a1b8:	lsr	r3, r0, #1
   2a1bc:	orr	ip, r3, r1, lsl #31
   2a1c0:	add	r3, sp, #5504	; 0x1580
   2a1c4:	add	r3, r3, #8
   2a1c8:	str	ip, [r3]
   2a1cc:	lsr	r3, r1, #1
   2a1d0:	orr	ip, r3, r0, lsl #31
   2a1d4:	add	r3, sp, #5504	; 0x1580
   2a1d8:	add	r3, r3, #12
   2a1dc:	str	ip, [r3]
   2a1e0:	lsr	r3, r0, #8
   2a1e4:	orr	ip, r3, r1, lsl #24
   2a1e8:	add	r3, sp, #5504	; 0x1580
   2a1ec:	add	r3, r3, #16
   2a1f0:	str	ip, [r3]
   2a1f4:	lsr	r3, r1, #8
   2a1f8:	orr	ip, r3, r0, lsl #24
   2a1fc:	add	r3, sp, #5504	; 0x1580
   2a200:	add	r3, r3, #20
   2a204:	str	ip, [r3]
   2a208:	add	r3, sp, #5504	; 0x1580
   2a20c:	add	r3, r3, #8
   2a210:	ldrd	r2, [r3]
   2a214:	add	ip, sp, #5504	; 0x1580
   2a218:	add	ip, ip, #16
   2a21c:	ldrd	r6, [ip]
   2a220:	eor	r2, r2, r6
   2a224:	eor	r3, r3, r7
   2a228:	lsr	ip, r0, #7
   2a22c:	orr	ip, ip, r1, lsl #25
   2a230:	str	ip, [sp, #904]	; 0x388
   2a234:	lsr	r1, r1, #7
   2a238:	str	r1, [sp, #908]	; 0x38c
   2a23c:	add	r1, sp, #904	; 0x388
   2a240:	ldrd	r6, [r1]
   2a244:	eor	r6, r6, r2
   2a248:	eor	r7, r7, r3
   2a24c:	ldrd	r0, [sp, #128]	; 0x80
   2a250:	adds	r0, r0, r6
   2a254:	adc	r1, r1, r7
   2a258:	mov	r2, r0
   2a25c:	mov	r3, r1
   2a260:	ldrd	r0, [sp, #88]	; 0x58
   2a264:	adds	r0, r0, r2
   2a268:	adc	r1, r1, r3
   2a26c:	mov	r2, r0
   2a270:	mov	r3, r1
   2a274:	ldrd	r6, [sp, #8]
   2a278:	lsr	r1, r6, #19
   2a27c:	orr	r1, r1, r7, lsl #13
   2a280:	add	r0, sp, #5504	; 0x1580
   2a284:	add	r0, r0, #24
   2a288:	str	r1, [r0]
   2a28c:	lsr	r1, r7, #19
   2a290:	orr	r1, r1, r6, lsl #13
   2a294:	add	r0, sp, #5504	; 0x1580
   2a298:	add	r0, r0, #28
   2a29c:	str	r1, [r0]
   2a2a0:	lsl	r1, r7, #3
   2a2a4:	orr	r1, r1, r6, lsr #29
   2a2a8:	add	r0, sp, #5504	; 0x1580
   2a2ac:	add	r0, r0, #36	; 0x24
   2a2b0:	str	r1, [r0]
   2a2b4:	lsl	r1, r6, #3
   2a2b8:	orr	r1, r1, r7, lsr #29
   2a2bc:	add	r0, sp, #5504	; 0x1580
   2a2c0:	add	r0, r0, #32
   2a2c4:	str	r1, [r0]
   2a2c8:	add	r1, sp, #5504	; 0x1580
   2a2cc:	add	r1, r1, #24
   2a2d0:	ldrd	r6, [r1]
   2a2d4:	ldrd	r0, [r0]
   2a2d8:	eor	r6, r6, r0
   2a2dc:	eor	r7, r7, r1
   2a2e0:	mov	r0, r6
   2a2e4:	mov	r1, r7
   2a2e8:	ldrd	r6, [sp, #8]
   2a2ec:	lsr	ip, r6, #6
   2a2f0:	orr	ip, ip, r7, lsl #26
   2a2f4:	str	ip, [sp, #912]	; 0x390
   2a2f8:	ldr	ip, [sp, #12]
   2a2fc:	lsr	ip, ip, #6
   2a300:	str	ip, [sp, #916]	; 0x394
   2a304:	add	ip, sp, #912	; 0x390
   2a308:	ldrd	r6, [ip]
   2a30c:	eor	r6, r6, r0
   2a310:	eor	r7, r7, r1
   2a314:	adds	r6, r2, r6
   2a318:	adc	r7, r3, r7
   2a31c:	strd	r4, [sp, #128]	; 0x80
   2a320:	mov	r0, r4
   2a324:	mov	r1, r5
   2a328:	eor	r0, r0, r8
   2a32c:	eor	r1, r1, r9
   2a330:	ldrd	r4, [sp, #64]	; 0x40
   2a334:	and	r4, r4, r0
   2a338:	and	r5, r5, r1
   2a33c:	mov	r0, r4
   2a340:	mov	r1, r5
   2a344:	eor	r0, r0, r8
   2a348:	eor	r1, r1, r9
   2a34c:	add	r3, pc, #900	; 0x384
   2a350:	ldrd	r2, [r3]
   2a354:	strd	r6, [sp, #120]	; 0x78
   2a358:	adds	r6, r6, r2
   2a35c:	adc	r7, r7, r3
   2a360:	mov	r2, r6
   2a364:	mov	r3, r7
   2a368:	ldrd	r6, [sp, #56]	; 0x38
   2a36c:	adds	r6, r6, r2
   2a370:	adc	r7, r7, r3
   2a374:	adds	r0, r0, r6
   2a378:	adc	r1, r1, r7
   2a37c:	ldrd	r4, [sp, #64]	; 0x40
   2a380:	lsr	r3, r4, #14
   2a384:	orr	ip, r3, r5, lsl #18
   2a388:	add	r3, sp, #5504	; 0x1580
   2a38c:	add	r3, r3, #40	; 0x28
   2a390:	str	ip, [r3]
   2a394:	lsr	r3, r5, #14
   2a398:	orr	ip, r3, r4, lsl #18
   2a39c:	add	r3, sp, #5504	; 0x1580
   2a3a0:	add	r3, r3, #44	; 0x2c
   2a3a4:	str	ip, [r3]
   2a3a8:	lsr	r3, r4, #18
   2a3ac:	orr	ip, r3, r5, lsl #14
   2a3b0:	add	r3, sp, #5504	; 0x1580
   2a3b4:	add	r3, r3, #48	; 0x30
   2a3b8:	str	ip, [r3]
   2a3bc:	lsr	r3, r5, #18
   2a3c0:	orr	ip, r3, r4, lsl #14
   2a3c4:	add	r3, sp, #5504	; 0x1580
   2a3c8:	add	r3, r3, #52	; 0x34
   2a3cc:	str	ip, [r3]
   2a3d0:	add	r3, sp, #5504	; 0x1580
   2a3d4:	add	r3, r3, #40	; 0x28
   2a3d8:	ldrd	r2, [r3]
   2a3dc:	add	ip, sp, #5504	; 0x1580
   2a3e0:	add	ip, ip, #48	; 0x30
   2a3e4:	ldrd	r6, [ip]
   2a3e8:	eor	r2, r2, r6
   2a3ec:	eor	r3, r3, r7
   2a3f0:	lsl	ip, r5, #23
   2a3f4:	mov	r6, r4
   2a3f8:	orr	ip, ip, r4, lsr #9
   2a3fc:	add	r4, sp, #5504	; 0x1580
   2a400:	add	r4, r4, #60	; 0x3c
   2a404:	str	ip, [r4]
   2a408:	lsl	ip, r6, #23
   2a40c:	orr	ip, ip, r5, lsr #9
   2a410:	add	r4, sp, #5504	; 0x1580
   2a414:	add	r4, r4, #56	; 0x38
   2a418:	str	ip, [r4]
   2a41c:	ldrd	r6, [r4]
   2a420:	eor	r6, r6, r2
   2a424:	eor	r7, r7, r3
   2a428:	adds	r6, r0, r6
   2a42c:	adc	r7, r1, r7
   2a430:	mov	r2, r6
   2a434:	mov	r3, r7
   2a438:	strd	r2, [sp, #56]	; 0x38
   2a43c:	ldrd	r0, [sp]
   2a440:	adds	r0, r0, r6
   2a444:	adc	r1, r1, r7
   2a448:	mov	r2, r0
   2a44c:	mov	r3, r1
   2a450:	strd	r2, [sp]
   2a454:	ldrd	r6, [sp, #168]	; 0xa8
   2a458:	lsr	r3, r6, #28
   2a45c:	orr	r1, r3, r7, lsl #4
   2a460:	add	r3, sp, #5568	; 0x15c0
   2a464:	str	r1, [r3]
   2a468:	lsr	r3, r7, #28
   2a46c:	orr	r1, r3, r6, lsl #4
   2a470:	add	r3, sp, #5568	; 0x15c0
   2a474:	add	r3, r3, #4
   2a478:	str	r1, [r3]
   2a47c:	lsl	r3, r7, #30
   2a480:	orr	r1, r3, r6, lsr #2
   2a484:	add	r3, sp, #5568	; 0x15c0
   2a488:	add	r3, r3, #12
   2a48c:	str	r1, [r3]
   2a490:	lsl	r3, r6, #30
   2a494:	orr	r1, r3, r7, lsr #2
   2a498:	add	r3, sp, #5568	; 0x15c0
   2a49c:	add	r3, r3, #8
   2a4a0:	str	r1, [r3]
   2a4a4:	add	r3, sp, #5568	; 0x15c0
   2a4a8:	ldrd	r2, [r3]
   2a4ac:	add	r1, sp, #5568	; 0x15c0
   2a4b0:	add	r1, r1, #8
   2a4b4:	ldrd	r4, [r1]
   2a4b8:	eor	r2, r2, r4
   2a4bc:	eor	r3, r3, r5
   2a4c0:	lsl	r1, r7, #25
   2a4c4:	orr	r1, r1, r6, lsr #7
   2a4c8:	add	r0, sp, #5568	; 0x15c0
   2a4cc:	add	r0, r0, #20
   2a4d0:	str	r1, [r0]
   2a4d4:	lsl	r1, r6, #25
   2a4d8:	orr	r1, r1, r7, lsr #7
   2a4dc:	add	r0, sp, #5568	; 0x15c0
   2a4e0:	add	r0, r0, #16
   2a4e4:	str	r1, [r0]
   2a4e8:	ldrd	r4, [r0]
   2a4ec:	eor	r4, r4, r2
   2a4f0:	eor	r5, r5, r3
   2a4f4:	mov	r2, r4
   2a4f8:	mov	r3, r5
   2a4fc:	mov	r4, sl
   2a500:	mov	r5, fp
   2a504:	orr	sl, sl, r6
   2a508:	orr	fp, fp, r7
   2a50c:	mov	r0, sl
   2a510:	mov	r1, fp
   2a514:	ldrd	sl, [sp, #40]	; 0x28
   2a518:	and	sl, sl, r0
   2a51c:	and	fp, fp, r1
   2a520:	mov	r0, sl
   2a524:	mov	r1, fp
   2a528:	mov	sl, r4
   2a52c:	mov	fp, r5
   2a530:	and	sl, sl, r6
   2a534:	and	fp, fp, r7
   2a538:	orr	r0, r0, sl
   2a53c:	orr	r1, r1, fp
   2a540:	adds	r0, r0, r2
   2a544:	adc	r1, r1, r3
   2a548:	ldrd	r2, [sp, #56]	; 0x38
   2a54c:	adds	r2, r2, r0
   2a550:	adc	r3, r3, r1
   2a554:	strd	r2, [sp, #56]	; 0x38
   2a558:	ldrd	sl, [sp, #16]
   2a55c:	lsr	r3, sl, #1
   2a560:	orr	r2, r3, fp, lsl #31
   2a564:	add	r3, sp, #5568	; 0x15c0
   2a568:	add	r3, r3, #24
   2a56c:	str	r2, [r3]
   2a570:	lsr	r3, fp, #1
   2a574:	orr	r2, r3, sl, lsl #31
   2a578:	add	r3, sp, #5568	; 0x15c0
   2a57c:	add	r3, r3, #28
   2a580:	str	r2, [r3]
   2a584:	lsr	r3, sl, #8
   2a588:	orr	r2, r3, fp, lsl #24
   2a58c:	add	r3, sp, #5568	; 0x15c0
   2a590:	add	r3, r3, #32
   2a594:	str	r2, [r3]
   2a598:	lsr	r3, fp, #8
   2a59c:	orr	r2, r3, sl, lsl #24
   2a5a0:	add	r3, sp, #5568	; 0x15c0
   2a5a4:	add	r3, r3, #36	; 0x24
   2a5a8:	str	r2, [r3]
   2a5ac:	add	r3, sp, #5568	; 0x15c0
   2a5b0:	add	r3, r3, #24
   2a5b4:	ldrd	r2, [r3]
   2a5b8:	add	r1, sp, #5568	; 0x15c0
   2a5bc:	add	r1, r1, #32
   2a5c0:	ldrd	r6, [r1]
   2a5c4:	eor	r2, r2, r6
   2a5c8:	eor	r3, r3, r7
   2a5cc:	lsr	r1, sl, #7
   2a5d0:	orr	r1, r1, fp, lsl #25
   2a5d4:	str	r1, [sp, #920]	; 0x398
   2a5d8:	lsr	r1, fp, #7
   2a5dc:	str	r1, [sp, #924]	; 0x39c
   2a5e0:	add	r1, sp, #920	; 0x398
   2a5e4:	ldrd	r6, [r1]
   2a5e8:	eor	r6, r6, r2
   2a5ec:	eor	r7, r7, r3
   2a5f0:	ldrd	r0, [sp, #136]	; 0x88
   2a5f4:	adds	r0, r0, r6
   2a5f8:	adc	r1, r1, r7
   2a5fc:	ldrd	r4, [sp, #32]
   2a600:	adds	r4, r4, r0
   2a604:	adc	r5, r5, r1
   2a608:	mov	r2, r4
   2a60c:	mov	r3, r5
   2a610:	ldrd	r4, [sp, #104]	; 0x68
   2a614:	lsr	r1, r4, #19
   2a618:	orr	r1, r1, r5, lsl #13
   2a61c:	add	r0, sp, #5568	; 0x15c0
   2a620:	add	r0, r0, #40	; 0x28
   2a624:	str	r1, [r0]
   2a628:	lsr	r1, r5, #19
   2a62c:	orr	r1, r1, r4, lsl #13
   2a630:	add	r0, sp, #5568	; 0x15c0
   2a634:	add	r0, r0, #44	; 0x2c
   2a638:	str	r1, [r0]
   2a63c:	lsl	r1, r5, #3
   2a640:	orr	r1, r1, r4, lsr #29
   2a644:	add	r0, sp, #5568	; 0x15c0
   2a648:	add	r0, r0, #52	; 0x34
   2a64c:	str	r1, [r0]
   2a650:	lsl	r1, r4, #3
   2a654:	orr	r1, r1, r5, lsr #29
   2a658:	add	r0, sp, #5568	; 0x15c0
   2a65c:	add	r0, r0, #48	; 0x30
   2a660:	str	r1, [r0]
   2a664:	add	r1, sp, #5568	; 0x15c0
   2a668:	add	r1, r1, #40	; 0x28
   2a66c:	ldrd	r6, [r1]
   2a670:	ldrd	sl, [r0]
   2a674:	eor	r6, r6, sl
   2a678:	eor	r7, r7, fp
   2a67c:	mov	r0, r6
   2a680:	mov	r1, r7
   2a684:	lsr	ip, r4, #6
   2a688:	orr	ip, ip, r5, lsl #26
   2a68c:	str	ip, [sp, #928]	; 0x3a0
   2a690:	lsr	ip, r5, #6
   2a694:	str	ip, [sp, #932]	; 0x3a4
   2a698:	add	ip, sp, #928	; 0x3a0
   2a69c:	ldrd	r6, [ip]
   2a6a0:	eor	r6, r6, r0
   2a6a4:	eor	r7, r7, r1
   2a6a8:	adds	r4, r2, r6
   2a6ac:	adc	r5, r3, r7
   2a6b0:	mov	sl, r4
   2a6b4:	mov	fp, r5
   2a6b8:	ldrd	r4, [sp, #128]	; 0x80
   2a6bc:	ldrd	r2, [sp, #64]	; 0x40
   2a6c0:	eor	r2, r2, r4
   2a6c4:	eor	r3, r3, r5
   2a6c8:	mov	r0, r2
   2a6cc:	mov	r1, r3
   2a6d0:	b	2a6e8 <__assert_fail@plt+0x193fc>
   2a6d4:	nop			; (mov r0, r0)
   2a6d8:	cmncs	r3, #40, 28	; 0x280
   2a6dc:	ldrshtls	pc, [lr], sl	; <UNPREDICTABLE>
   2a6e0:	cdple	13, 8, cr11, cr2, cr9, {7}
   2a6e4:	ldrbge	r6, [r0], #-3307	; 0xfffff315
   2a6e8:	ldrd	r6, [sp]
   2a6ec:	mov	r2, r6
   2a6f0:	mov	r3, r7
   2a6f4:	and	r2, r2, r0
   2a6f8:	and	r3, r3, r1
   2a6fc:	mov	r0, r2
   2a700:	mov	r1, r3
   2a704:	strd	r4, [sp, #184]	; 0xb8
   2a708:	mov	r2, r4
   2a70c:	mov	r3, r5
   2a710:	eor	r2, r2, r0
   2a714:	eor	r3, r3, r1
   2a718:	mov	r0, r2
   2a71c:	mov	r1, r3
   2a720:	sub	r3, pc, #72	; 0x48
   2a724:	ldrd	r2, [r3]
   2a728:	strd	sl, [sp, #128]	; 0x80
   2a72c:	adds	sl, sl, r2
   2a730:	adc	fp, fp, r3
   2a734:	adds	r8, r8, sl
   2a738:	adc	r9, r9, fp
   2a73c:	adds	r0, r0, r8
   2a740:	adc	r1, r1, r9
   2a744:	lsr	r3, r6, #14
   2a748:	orr	r2, r3, r7, lsl #18
   2a74c:	add	r3, sp, #5568	; 0x15c0
   2a750:	add	r3, r3, #56	; 0x38
   2a754:	str	r2, [r3]
   2a758:	lsr	r3, r7, #14
   2a75c:	orr	r2, r3, r6, lsl #18
   2a760:	add	r3, sp, #5568	; 0x15c0
   2a764:	add	r3, r3, #60	; 0x3c
   2a768:	str	r2, [r3]
   2a76c:	lsr	r3, r6, #18
   2a770:	orr	r2, r3, r7, lsl #14
   2a774:	add	r3, sp, #5632	; 0x1600
   2a778:	str	r2, [r3]
   2a77c:	lsr	r3, r7, #18
   2a780:	orr	r2, r3, r6, lsl #14
   2a784:	add	r3, sp, #5632	; 0x1600
   2a788:	add	r3, r3, #4
   2a78c:	str	r2, [r3]
   2a790:	add	r3, sp, #5568	; 0x15c0
   2a794:	add	r3, r3, #56	; 0x38
   2a798:	ldrd	r2, [r3]
   2a79c:	add	ip, sp, #5632	; 0x1600
   2a7a0:	ldrd	r8, [ip]
   2a7a4:	eor	r2, r2, r8
   2a7a8:	eor	r3, r3, r9
   2a7ac:	lsl	ip, r7, #23
   2a7b0:	orr	ip, ip, r6, lsr #9
   2a7b4:	add	r4, sp, #5632	; 0x1600
   2a7b8:	add	r4, r4, #12
   2a7bc:	str	ip, [r4]
   2a7c0:	lsl	ip, r6, #23
   2a7c4:	orr	ip, ip, r7, lsr #9
   2a7c8:	add	r4, sp, #5632	; 0x1600
   2a7cc:	add	r4, r4, #8
   2a7d0:	str	ip, [r4]
   2a7d4:	ldrd	r8, [r4]
   2a7d8:	eor	r8, r8, r2
   2a7dc:	eor	r9, r9, r3
   2a7e0:	adds	r8, r0, r8
   2a7e4:	adc	r9, r1, r9
   2a7e8:	mov	r6, r8
   2a7ec:	mov	r7, r9
   2a7f0:	ldrd	r8, [sp, #40]	; 0x28
   2a7f4:	adds	r8, r8, r6
   2a7f8:	adc	r9, r9, r7
   2a7fc:	strd	r8, [sp, #40]	; 0x28
   2a800:	ldrd	r4, [sp, #56]	; 0x38
   2a804:	lsr	r3, r4, #28
   2a808:	orr	r2, r3, r5, lsl #4
   2a80c:	add	r3, sp, #5632	; 0x1600
   2a810:	add	r3, r3, #16
   2a814:	str	r2, [r3]
   2a818:	lsr	r3, r5, #28
   2a81c:	orr	r2, r3, r4, lsl #4
   2a820:	add	r3, sp, #5632	; 0x1600
   2a824:	add	r3, r3, #20
   2a828:	str	r2, [r3]
   2a82c:	lsl	r3, r5, #30
   2a830:	orr	r2, r3, r4, lsr #2
   2a834:	add	r3, sp, #5632	; 0x1600
   2a838:	add	r3, r3, #28
   2a83c:	str	r2, [r3]
   2a840:	lsl	r3, r4, #30
   2a844:	orr	r2, r3, r5, lsr #2
   2a848:	add	r3, sp, #5632	; 0x1600
   2a84c:	add	r3, r3, #24
   2a850:	str	r2, [r3]
   2a854:	add	r3, sp, #5632	; 0x1600
   2a858:	add	r3, r3, #16
   2a85c:	ldrd	r2, [r3]
   2a860:	add	r1, sp, #5632	; 0x1600
   2a864:	add	r1, r1, #24
   2a868:	ldrd	sl, [r1]
   2a86c:	eor	r2, r2, sl
   2a870:	eor	r3, r3, fp
   2a874:	lsl	r1, r5, #25
   2a878:	orr	r1, r1, r4, lsr #7
   2a87c:	add	r0, sp, #5632	; 0x1600
   2a880:	add	r0, r0, #36	; 0x24
   2a884:	str	r1, [r0]
   2a888:	lsl	r1, r4, #25
   2a88c:	orr	r1, r1, r5, lsr #7
   2a890:	add	r0, sp, #5632	; 0x1600
   2a894:	add	r0, r0, #32
   2a898:	str	r1, [r0]
   2a89c:	ldrd	sl, [r0]
   2a8a0:	eor	sl, sl, r2
   2a8a4:	eor	fp, fp, r3
   2a8a8:	mov	r2, sl
   2a8ac:	mov	r3, fp
   2a8b0:	ldrd	r8, [sp, #168]	; 0xa8
   2a8b4:	orr	r0, r4, r8
   2a8b8:	orr	r1, r5, r9
   2a8bc:	ldrd	sl, [sp, #176]	; 0xb0
   2a8c0:	and	sl, sl, r0
   2a8c4:	and	fp, fp, r1
   2a8c8:	mov	r0, sl
   2a8cc:	mov	r1, fp
   2a8d0:	and	r4, r4, r8
   2a8d4:	and	r5, r5, r9
   2a8d8:	orr	sl, r4, r0
   2a8dc:	orr	fp, r5, r1
   2a8e0:	adds	r0, sl, r2
   2a8e4:	adc	r1, fp, r3
   2a8e8:	adds	r2, r6, r0
   2a8ec:	adc	r3, r7, r1
   2a8f0:	strd	r2, [sp, #136]	; 0x88
   2a8f4:	ldrd	r0, [sp, #144]	; 0x90
   2a8f8:	lsr	r3, r0, #1
   2a8fc:	orr	ip, r3, r1, lsl #31
   2a900:	add	r3, sp, #5632	; 0x1600
   2a904:	add	r3, r3, #40	; 0x28
   2a908:	str	ip, [r3]
   2a90c:	lsr	r3, r1, #1
   2a910:	orr	ip, r3, r0, lsl #31
   2a914:	add	r3, sp, #5632	; 0x1600
   2a918:	add	r3, r3, #44	; 0x2c
   2a91c:	str	ip, [r3]
   2a920:	lsr	r3, r0, #8
   2a924:	orr	ip, r3, r1, lsl #24
   2a928:	add	r3, sp, #5632	; 0x1600
   2a92c:	add	r3, r3, #48	; 0x30
   2a930:	str	ip, [r3]
   2a934:	lsr	r3, r1, #8
   2a938:	orr	ip, r3, r0, lsl #24
   2a93c:	add	r3, sp, #5632	; 0x1600
   2a940:	add	r3, r3, #52	; 0x34
   2a944:	str	ip, [r3]
   2a948:	add	r3, sp, #5632	; 0x1600
   2a94c:	add	r3, r3, #40	; 0x28
   2a950:	ldrd	r2, [r3]
   2a954:	add	ip, sp, #5632	; 0x1600
   2a958:	add	ip, ip, #48	; 0x30
   2a95c:	ldrd	sl, [ip]
   2a960:	eor	r2, r2, sl
   2a964:	eor	r3, r3, fp
   2a968:	lsr	ip, r0, #7
   2a96c:	orr	ip, ip, r1, lsl #25
   2a970:	str	ip, [sp, #936]	; 0x3a8
   2a974:	lsr	r1, r1, #7
   2a978:	str	r1, [sp, #940]	; 0x3ac
   2a97c:	add	r1, sp, #936	; 0x3a8
   2a980:	ldrd	sl, [r1]
   2a984:	eor	sl, sl, r2
   2a988:	eor	fp, fp, r3
   2a98c:	ldrd	r0, [sp, #16]
   2a990:	adds	r0, r0, sl
   2a994:	adc	r1, r1, fp
   2a998:	ldrd	sl, [sp, #96]	; 0x60
   2a99c:	adds	sl, sl, r0
   2a9a0:	adc	fp, fp, r1
   2a9a4:	mov	r2, sl
   2a9a8:	mov	r3, fp
   2a9ac:	ldrd	sl, [sp, #120]	; 0x78
   2a9b0:	lsr	r1, sl, #19
   2a9b4:	orr	r1, r1, fp, lsl #13
   2a9b8:	add	r0, sp, #5632	; 0x1600
   2a9bc:	add	r0, r0, #56	; 0x38
   2a9c0:	str	r1, [r0]
   2a9c4:	lsr	r1, fp, #19
   2a9c8:	orr	r1, r1, sl, lsl #13
   2a9cc:	add	r0, sp, #5632	; 0x1600
   2a9d0:	add	r0, r0, #60	; 0x3c
   2a9d4:	str	r1, [r0]
   2a9d8:	lsl	r1, fp, #3
   2a9dc:	orr	r1, r1, sl, lsr #29
   2a9e0:	add	r0, sp, #5696	; 0x1640
   2a9e4:	add	r0, r0, #4
   2a9e8:	str	r1, [r0]
   2a9ec:	lsl	r1, sl, #3
   2a9f0:	orr	r1, r1, fp, lsr #29
   2a9f4:	add	r0, sp, #5696	; 0x1640
   2a9f8:	str	r1, [r0]
   2a9fc:	add	r1, sp, #5632	; 0x1600
   2aa00:	add	r1, r1, #56	; 0x38
   2aa04:	ldrd	r0, [r1]
   2aa08:	add	ip, sp, #5696	; 0x1640
   2aa0c:	ldrd	r6, [ip]
   2aa10:	eor	r0, r0, r6
   2aa14:	eor	r1, r1, r7
   2aa18:	lsr	ip, sl, #6
   2aa1c:	orr	ip, ip, fp, lsl #26
   2aa20:	str	ip, [sp, #944]	; 0x3b0
   2aa24:	lsr	ip, fp, #6
   2aa28:	str	ip, [sp, #948]	; 0x3b4
   2aa2c:	add	ip, sp, #944	; 0x3b0
   2aa30:	ldrd	sl, [ip]
   2aa34:	eor	sl, sl, r0
   2aa38:	eor	fp, fp, r1
   2aa3c:	adds	sl, r2, sl
   2aa40:	adc	fp, r3, fp
   2aa44:	ldrd	r6, [sp, #64]	; 0x40
   2aa48:	mov	r0, r6
   2aa4c:	mov	r1, r7
   2aa50:	ldrd	r2, [sp]
   2aa54:	eor	r0, r0, r2
   2aa58:	eor	r1, r1, r3
   2aa5c:	ldrd	r2, [sp, #40]	; 0x28
   2aa60:	and	r2, r2, r0
   2aa64:	and	r3, r3, r1
   2aa68:	eor	r6, r6, r2
   2aa6c:	eor	r7, r7, r3
   2aa70:	add	r3, pc, #896	; 0x380
   2aa74:	ldrd	r2, [r3]
   2aa78:	strd	sl, [sp, #168]	; 0xa8
   2aa7c:	adds	sl, sl, r2
   2aa80:	adc	fp, fp, r3
   2aa84:	ldrd	r4, [sp, #184]	; 0xb8
   2aa88:	adds	r4, r4, sl
   2aa8c:	adc	r5, r5, fp
   2aa90:	adds	r0, r6, r4
   2aa94:	adc	r1, r7, r5
   2aa98:	ldrd	sl, [sp, #40]	; 0x28
   2aa9c:	lsr	r3, sl, #14
   2aaa0:	orr	ip, r3, fp, lsl #18
   2aaa4:	add	r3, sp, #5696	; 0x1640
   2aaa8:	add	r3, r3, #8
   2aaac:	str	ip, [r3]
   2aab0:	lsr	r3, fp, #14
   2aab4:	orr	ip, r3, sl, lsl #18
   2aab8:	add	r3, sp, #5696	; 0x1640
   2aabc:	add	r3, r3, #12
   2aac0:	str	ip, [r3]
   2aac4:	lsr	r3, sl, #18
   2aac8:	orr	ip, r3, fp, lsl #14
   2aacc:	add	r3, sp, #5696	; 0x1640
   2aad0:	add	r3, r3, #16
   2aad4:	str	ip, [r3]
   2aad8:	lsr	r3, fp, #18
   2aadc:	orr	ip, r3, sl, lsl #14
   2aae0:	add	r3, sp, #5696	; 0x1640
   2aae4:	add	r3, r3, #20
   2aae8:	str	ip, [r3]
   2aaec:	add	r3, sp, #5696	; 0x1640
   2aaf0:	add	r3, r3, #8
   2aaf4:	ldrd	r2, [r3]
   2aaf8:	add	ip, sp, #5696	; 0x1640
   2aafc:	add	ip, ip, #16
   2ab00:	ldrd	r6, [ip]
   2ab04:	eor	r2, r2, r6
   2ab08:	eor	r3, r3, r7
   2ab0c:	lsl	ip, fp, #23
   2ab10:	orr	ip, ip, sl, lsr #9
   2ab14:	add	r4, sp, #5696	; 0x1640
   2ab18:	add	r4, r4, #28
   2ab1c:	str	ip, [r4]
   2ab20:	lsl	ip, sl, #23
   2ab24:	orr	ip, ip, fp, lsr #9
   2ab28:	add	r4, sp, #5696	; 0x1640
   2ab2c:	add	r4, r4, #24
   2ab30:	str	ip, [r4]
   2ab34:	ldrd	r4, [r4]
   2ab38:	eor	r4, r4, r2
   2ab3c:	eor	r5, r5, r3
   2ab40:	adds	r4, r0, r4
   2ab44:	adc	r5, r1, r5
   2ab48:	ldrd	sl, [sp, #176]	; 0xb0
   2ab4c:	adds	sl, sl, r4
   2ab50:	adc	fp, fp, r5
   2ab54:	ldrd	r6, [sp, #136]	; 0x88
   2ab58:	lsr	r3, r6, #28
   2ab5c:	orr	r1, r3, r7, lsl #4
   2ab60:	add	r3, sp, #5696	; 0x1640
   2ab64:	add	r3, r3, #32
   2ab68:	str	r1, [r3]
   2ab6c:	lsr	r3, r7, #28
   2ab70:	orr	r1, r3, r6, lsl #4
   2ab74:	add	r3, sp, #5696	; 0x1640
   2ab78:	add	r3, r3, #36	; 0x24
   2ab7c:	str	r1, [r3]
   2ab80:	lsl	r3, r7, #30
   2ab84:	orr	r1, r3, r6, lsr #2
   2ab88:	add	r3, sp, #5696	; 0x1640
   2ab8c:	add	r3, r3, #44	; 0x2c
   2ab90:	str	r1, [r3]
   2ab94:	lsl	r3, r6, #30
   2ab98:	orr	r1, r3, r7, lsr #2
   2ab9c:	add	r3, sp, #5696	; 0x1640
   2aba0:	add	r3, r3, #40	; 0x28
   2aba4:	str	r1, [r3]
   2aba8:	add	r3, sp, #5696	; 0x1640
   2abac:	add	r3, r3, #32
   2abb0:	ldrd	r2, [r3]
   2abb4:	add	r1, sp, #5696	; 0x1640
   2abb8:	add	r1, r1, #40	; 0x28
   2abbc:	ldrd	r0, [r1]
   2abc0:	eor	r2, r2, r0
   2abc4:	eor	r3, r3, r1
   2abc8:	lsl	r1, r7, #25
   2abcc:	orr	r1, r1, r6, lsr #7
   2abd0:	add	r0, sp, #5696	; 0x1640
   2abd4:	add	r0, r0, #52	; 0x34
   2abd8:	str	r1, [r0]
   2abdc:	lsl	r1, r6, #25
   2abe0:	mov	ip, r7
   2abe4:	orr	r1, r1, r7, lsr #7
   2abe8:	add	r0, sp, #5696	; 0x1640
   2abec:	add	r0, r0, #48	; 0x30
   2abf0:	str	r1, [r0]
   2abf4:	ldrd	r0, [r0]
   2abf8:	eor	r0, r0, r2
   2abfc:	eor	r1, r1, r3
   2ac00:	strd	r0, [sp, #16]
   2ac04:	ldrd	r2, [sp, #56]	; 0x38
   2ac08:	orr	r2, r2, r6
   2ac0c:	orr	r3, r3, r7
   2ac10:	mov	r0, r2
   2ac14:	mov	r1, r3
   2ac18:	mov	r2, r8
   2ac1c:	mov	r3, r9
   2ac20:	and	r2, r2, r0
   2ac24:	and	r3, r3, r1
   2ac28:	mov	r0, r2
   2ac2c:	mov	r1, r3
   2ac30:	mov	r2, r6
   2ac34:	ldrd	r6, [sp, #56]	; 0x38
   2ac38:	and	r6, r6, r2
   2ac3c:	and	r7, r7, ip
   2ac40:	orr	r2, r6, r0
   2ac44:	orr	r3, r7, r1
   2ac48:	mov	r0, r2
   2ac4c:	mov	r1, r3
   2ac50:	ldrd	r2, [sp, #16]
   2ac54:	adds	r2, r2, r0
   2ac58:	adc	r3, r3, r1
   2ac5c:	adds	r4, r4, r2
   2ac60:	adc	r5, r5, r3
   2ac64:	strd	r4, [sp, #184]	; 0xb8
   2ac68:	ldrd	r4, [sp, #152]	; 0x98
   2ac6c:	lsr	r3, r4, #1
   2ac70:	orr	ip, r3, r5, lsl #31
   2ac74:	add	r3, sp, #5696	; 0x1640
   2ac78:	add	r3, r3, #56	; 0x38
   2ac7c:	str	ip, [r3]
   2ac80:	lsr	r3, r5, #1
   2ac84:	orr	ip, r3, r4, lsl #31
   2ac88:	add	r3, sp, #5696	; 0x1640
   2ac8c:	add	r3, r3, #60	; 0x3c
   2ac90:	str	ip, [r3]
   2ac94:	lsr	r3, r4, #8
   2ac98:	orr	ip, r3, r5, lsl #24
   2ac9c:	add	r3, sp, #5760	; 0x1680
   2aca0:	str	ip, [r3]
   2aca4:	lsr	r3, r5, #8
   2aca8:	orr	r1, r3, r4, lsl #24
   2acac:	add	r3, sp, #5760	; 0x1680
   2acb0:	add	r3, r3, #4
   2acb4:	str	r1, [r3]
   2acb8:	add	r3, sp, #5696	; 0x1640
   2acbc:	add	r3, r3, #56	; 0x38
   2acc0:	ldrd	r2, [r3]
   2acc4:	add	r1, sp, #5760	; 0x1680
   2acc8:	ldrd	r0, [r1]
   2accc:	eor	r2, r2, r0
   2acd0:	eor	r3, r3, r1
   2acd4:	mov	r0, r2
   2acd8:	mov	r1, r3
   2acdc:	lsr	ip, r4, #7
   2ace0:	orr	ip, ip, r5, lsl #25
   2ace4:	str	ip, [sp, #952]	; 0x3b8
   2ace8:	lsr	ip, r5, #7
   2acec:	str	ip, [sp, #956]	; 0x3bc
   2acf0:	add	r3, sp, #952	; 0x3b8
   2acf4:	ldrd	r2, [r3]
   2acf8:	eor	r2, r2, r0
   2acfc:	eor	r3, r3, r1
   2ad00:	mov	r0, r2
   2ad04:	mov	r1, r3
   2ad08:	ldrd	r2, [sp, #144]	; 0x90
   2ad0c:	adds	r2, r2, r0
   2ad10:	adc	r3, r3, r1
   2ad14:	mov	r0, r2
   2ad18:	mov	r1, r3
   2ad1c:	ldrd	r2, [sp, #112]	; 0x70
   2ad20:	adds	r2, r2, r0
   2ad24:	adc	r3, r3, r1
   2ad28:	mov	r0, r2
   2ad2c:	mov	r1, r3
   2ad30:	ldrd	r4, [sp, #128]	; 0x80
   2ad34:	lsr	r3, r4, #19
   2ad38:	orr	ip, r3, r5, lsl #13
   2ad3c:	add	r3, sp, #5760	; 0x1680
   2ad40:	add	r3, r3, #8
   2ad44:	str	ip, [r3]
   2ad48:	lsr	r3, r5, #19
   2ad4c:	orr	ip, r3, r4, lsl #13
   2ad50:	add	r3, sp, #5760	; 0x1680
   2ad54:	add	r3, r3, #12
   2ad58:	str	ip, [r3]
   2ad5c:	lsl	r3, r5, #3
   2ad60:	orr	ip, r3, r4, lsr #29
   2ad64:	add	r3, sp, #5760	; 0x1680
   2ad68:	add	r3, r3, #20
   2ad6c:	str	ip, [r3]
   2ad70:	lsl	r3, r4, #3
   2ad74:	orr	ip, r3, r5, lsr #29
   2ad78:	add	r3, sp, #5760	; 0x1680
   2ad7c:	add	r3, r3, #16
   2ad80:	str	ip, [r3]
   2ad84:	add	r3, sp, #5760	; 0x1680
   2ad88:	add	r3, r3, #8
   2ad8c:	ldrd	r2, [r3]
   2ad90:	add	ip, sp, #5760	; 0x1680
   2ad94:	add	ip, ip, #16
   2ad98:	ldrd	r6, [ip]
   2ad9c:	eor	r2, r2, r6
   2ada0:	eor	r3, r3, r7
   2ada4:	lsr	ip, r4, #6
   2ada8:	orr	ip, ip, r5, lsl #26
   2adac:	str	ip, [sp, #960]	; 0x3c0
   2adb0:	lsr	ip, r5, #6
   2adb4:	str	ip, [sp, #964]	; 0x3c4
   2adb8:	add	ip, sp, #960	; 0x3c0
   2adbc:	ldrd	r4, [ip]
   2adc0:	eor	r4, r4, r2
   2adc4:	eor	r5, r5, r3
   2adc8:	adds	r4, r0, r4
   2adcc:	adc	r5, r1, r5
   2add0:	mov	r6, r4
   2add4:	mov	r7, r5
   2add8:	ldrd	r0, [sp]
   2addc:	ldrd	r4, [sp, #40]	; 0x28
   2ade0:	eor	r0, r0, r4
   2ade4:	eor	r1, r1, r5
   2ade8:	mov	r4, sl
   2adec:	mov	r5, fp
   2adf0:	mov	r2, sl
   2adf4:	b	2ae08 <__assert_fail@plt+0x19b1c>
   2adf8:	sbclt	r7, r6, #344064	; 0x54000
   2adfc:	mrclt	3, 7, sl, cr9, cr7, {7}
   2ae00:	cmn	r2, #-1409286144	; 0xac000000
   2ae04:			; <UNDEFINED> instruction: 0xc67178f2
   2ae08:	mov	r3, fp
   2ae0c:	and	r2, r2, r0
   2ae10:	and	r3, r3, r1
   2ae14:	mov	r0, r2
   2ae18:	mov	r1, r3
   2ae1c:	ldrd	r2, [sp]
   2ae20:	eor	r2, r2, r0
   2ae24:	eor	r3, r3, r1
   2ae28:	mov	r0, r2
   2ae2c:	mov	r1, r3
   2ae30:	sub	r3, pc, #56	; 0x38
   2ae34:	ldrd	r2, [r3]
   2ae38:	strd	r6, [sp, #144]	; 0x90
   2ae3c:	adds	sl, r6, r2
   2ae40:	adc	fp, r7, r3
   2ae44:	mov	r2, sl
   2ae48:	mov	r3, fp
   2ae4c:	ldrd	sl, [sp, #64]	; 0x40
   2ae50:	adds	sl, sl, r2
   2ae54:	adc	fp, fp, r3
   2ae58:	adds	r0, r0, sl
   2ae5c:	adc	r1, r1, fp
   2ae60:	lsr	r3, r4, #14
   2ae64:	orr	ip, r3, r5, lsl #18
   2ae68:	add	r3, sp, #5760	; 0x1680
   2ae6c:	add	r3, r3, #24
   2ae70:	str	ip, [r3]
   2ae74:	lsr	r3, r5, #14
   2ae78:	orr	ip, r3, r4, lsl #18
   2ae7c:	add	r3, sp, #5760	; 0x1680
   2ae80:	add	r3, r3, #28
   2ae84:	str	ip, [r3]
   2ae88:	lsr	r3, r4, #18
   2ae8c:	orr	ip, r3, r5, lsl #14
   2ae90:	add	r3, sp, #5760	; 0x1680
   2ae94:	add	r3, r3, #32
   2ae98:	str	ip, [r3]
   2ae9c:	lsr	r3, r5, #18
   2aea0:	orr	ip, r3, r4, lsl #14
   2aea4:	add	r3, sp, #5760	; 0x1680
   2aea8:	add	r3, r3, #36	; 0x24
   2aeac:	str	ip, [r3]
   2aeb0:	add	r3, sp, #5760	; 0x1680
   2aeb4:	add	r3, r3, #24
   2aeb8:	ldrd	r2, [r3]
   2aebc:	add	ip, sp, #5760	; 0x1680
   2aec0:	add	ip, ip, #32
   2aec4:	ldrd	r6, [ip]
   2aec8:	eor	r2, r2, r6
   2aecc:	eor	r3, r3, r7
   2aed0:	lsl	ip, r5, #23
   2aed4:	orr	ip, ip, r4, lsr #9
   2aed8:	add	r6, sp, #5760	; 0x1680
   2aedc:	add	r6, r6, #44	; 0x2c
   2aee0:	str	ip, [r6]
   2aee4:	lsl	ip, r4, #23
   2aee8:	strd	r4, [sp, #176]	; 0xb0
   2aeec:	orr	ip, ip, r5, lsr #9
   2aef0:	add	r4, sp, #5760	; 0x1680
   2aef4:	add	r4, r4, #40	; 0x28
   2aef8:	str	ip, [r4]
   2aefc:	ldrd	sl, [r4]
   2af00:	eor	sl, sl, r2
   2af04:	eor	fp, fp, r3
   2af08:	adds	sl, r0, sl
   2af0c:	adc	fp, r1, fp
   2af10:	mov	r2, r8
   2af14:	mov	r3, r9
   2af18:	mov	r8, sl
   2af1c:	mov	r9, fp
   2af20:	adds	r2, r2, sl
   2af24:	adc	r3, r3, fp
   2af28:	mov	sl, r2
   2af2c:	mov	fp, r3
   2af30:	ldrd	r4, [sp, #184]	; 0xb8
   2af34:	lsr	r3, r4, #28
   2af38:	orr	r1, r3, r5, lsl #4
   2af3c:	add	r3, sp, #5760	; 0x1680
   2af40:	add	r3, r3, #48	; 0x30
   2af44:	str	r1, [r3]
   2af48:	lsr	r3, r5, #28
   2af4c:	orr	r1, r3, r4, lsl #4
   2af50:	add	r3, sp, #5760	; 0x1680
   2af54:	add	r3, r3, #52	; 0x34
   2af58:	str	r1, [r3]
   2af5c:	lsl	r3, r5, #30
   2af60:	orr	r1, r3, r4, lsr #2
   2af64:	add	r3, sp, #5760	; 0x1680
   2af68:	add	r3, r3, #60	; 0x3c
   2af6c:	str	r1, [r3]
   2af70:	lsl	r3, r4, #30
   2af74:	orr	r1, r3, r5, lsr #2
   2af78:	add	r3, sp, #5760	; 0x1680
   2af7c:	add	r3, r3, #56	; 0x38
   2af80:	str	r1, [r3]
   2af84:	add	r3, sp, #5760	; 0x1680
   2af88:	add	r3, r3, #48	; 0x30
   2af8c:	ldrd	r2, [r3]
   2af90:	add	r1, sp, #5760	; 0x1680
   2af94:	add	r1, r1, #56	; 0x38
   2af98:	ldrd	r6, [r1]
   2af9c:	eor	r2, r2, r6
   2afa0:	eor	r3, r3, r7
   2afa4:	lsl	r1, r5, #25
   2afa8:	orr	r1, r1, r4, lsr #7
   2afac:	add	r0, sp, #5824	; 0x16c0
   2afb0:	add	r0, r0, #4
   2afb4:	str	r1, [r0]
   2afb8:	lsl	r1, r4, #25
   2afbc:	orr	r1, r1, r5, lsr #7
   2afc0:	add	r0, sp, #5824	; 0x16c0
   2afc4:	str	r1, [r0]
   2afc8:	ldrd	r0, [r0]
   2afcc:	eor	r0, r0, r2
   2afd0:	eor	r1, r1, r3
   2afd4:	strd	r0, [sp, #16]
   2afd8:	ldrd	r6, [sp, #136]	; 0x88
   2afdc:	orr	r2, r6, r4
   2afe0:	orr	r3, r7, r5
   2afe4:	mov	r0, r2
   2afe8:	mov	r1, r3
   2afec:	ldrd	r2, [sp, #56]	; 0x38
   2aff0:	and	r2, r2, r0
   2aff4:	and	r3, r3, r1
   2aff8:	mov	r0, r2
   2affc:	mov	r1, r3
   2b000:	and	r6, r6, r4
   2b004:	and	r7, r7, r5
   2b008:	orr	r6, r6, r0
   2b00c:	orr	r7, r7, r1
   2b010:	mov	r0, r6
   2b014:	mov	r1, r7
   2b018:	ldrd	r6, [sp, #16]
   2b01c:	adds	r6, r6, r0
   2b020:	adc	r7, r7, r1
   2b024:	adds	r2, r8, r6
   2b028:	adc	r3, r9, r7
   2b02c:	strd	r2, [sp, #64]	; 0x40
   2b030:	ldrd	r0, [sp, #160]	; 0xa0
   2b034:	lsr	r3, r0, #1
   2b038:	orr	ip, r3, r1, lsl #31
   2b03c:	add	r3, sp, #5824	; 0x16c0
   2b040:	add	r3, r3, #8
   2b044:	str	ip, [r3]
   2b048:	lsr	r3, r1, #1
   2b04c:	orr	ip, r3, r0, lsl #31
   2b050:	add	r3, sp, #5824	; 0x16c0
   2b054:	add	r3, r3, #12
   2b058:	str	ip, [r3]
   2b05c:	lsr	r3, r0, #8
   2b060:	orr	ip, r3, r1, lsl #24
   2b064:	add	r3, sp, #5824	; 0x16c0
   2b068:	add	r3, r3, #16
   2b06c:	str	ip, [r3]
   2b070:	lsr	r3, r1, #8
   2b074:	orr	ip, r3, r0, lsl #24
   2b078:	add	r3, sp, #5824	; 0x16c0
   2b07c:	add	r3, r3, #20
   2b080:	str	ip, [r3]
   2b084:	add	r3, sp, #5824	; 0x16c0
   2b088:	add	r3, r3, #8
   2b08c:	ldrd	r2, [r3]
   2b090:	add	ip, sp, #5824	; 0x16c0
   2b094:	add	ip, ip, #16
   2b098:	ldrd	r6, [ip]
   2b09c:	eor	r2, r2, r6
   2b0a0:	eor	r3, r3, r7
   2b0a4:	lsr	ip, r0, #7
   2b0a8:	orr	ip, ip, r1, lsl #25
   2b0ac:	str	ip, [sp, #968]	; 0x3c8
   2b0b0:	lsr	r1, r1, #7
   2b0b4:	str	r1, [sp, #972]	; 0x3cc
   2b0b8:	add	r1, sp, #968	; 0x3c8
   2b0bc:	ldrd	r6, [r1]
   2b0c0:	eor	r6, r6, r2
   2b0c4:	eor	r7, r7, r3
   2b0c8:	ldrd	r0, [sp, #152]	; 0x98
   2b0cc:	adds	r0, r0, r6
   2b0d0:	adc	r1, r1, r7
   2b0d4:	mov	r2, r0
   2b0d8:	mov	r3, r1
   2b0dc:	ldrd	r0, [sp, #48]	; 0x30
   2b0e0:	adds	r0, r0, r2
   2b0e4:	adc	r1, r1, r3
   2b0e8:	strd	r0, [sp, #16]
   2b0ec:	ldrd	r6, [sp, #168]	; 0xa8
   2b0f0:	lsr	r1, r6, #19
   2b0f4:	orr	r1, r1, r7, lsl #13
   2b0f8:	add	r3, sp, #5824	; 0x16c0
   2b0fc:	add	r3, r3, #24
   2b100:	str	r1, [r3]
   2b104:	lsr	r1, r7, #19
   2b108:	orr	r1, r1, r6, lsl #13
   2b10c:	add	r3, sp, #5824	; 0x16c0
   2b110:	add	r3, r3, #28
   2b114:	str	r1, [r3]
   2b118:	lsl	r1, r7, #3
   2b11c:	orr	r1, r1, r6, lsr #29
   2b120:	add	r3, sp, #5824	; 0x16c0
   2b124:	add	r3, r3, #36	; 0x24
   2b128:	str	r1, [r3]
   2b12c:	lsl	r1, r6, #3
   2b130:	orr	r1, r1, r7, lsr #29
   2b134:	add	r3, sp, #5824	; 0x16c0
   2b138:	add	r3, r3, #32
   2b13c:	str	r1, [r3]
   2b140:	add	r3, sp, #5824	; 0x16c0
   2b144:	add	r3, r3, #24
   2b148:	ldrd	r0, [r3]
   2b14c:	add	r3, sp, #5824	; 0x16c0
   2b150:	add	r3, r3, #32
   2b154:	ldrd	r2, [r3]
   2b158:	eor	r0, r0, r2
   2b15c:	eor	r1, r1, r3
   2b160:	lsr	ip, r6, #6
   2b164:	orr	ip, ip, r7, lsl #26
   2b168:	str	ip, [sp, #976]	; 0x3d0
   2b16c:	lsr	ip, r7, #6
   2b170:	str	ip, [sp, #980]	; 0x3d4
   2b174:	add	r3, sp, #976	; 0x3d0
   2b178:	ldrd	r6, [r3]
   2b17c:	eor	r6, r6, r0
   2b180:	eor	r7, r7, r1
   2b184:	ldrd	r8, [sp, #16]
   2b188:	adds	r8, r8, r6
   2b18c:	adc	r9, r9, r7
   2b190:	mov	r6, r8
   2b194:	mov	r7, r9
   2b198:	mov	r2, r8
   2b19c:	mov	r3, r9
   2b1a0:	add	r1, sp, #7104	; 0x1bc0
   2b1a4:	add	r1, r1, #16
   2b1a8:	strd	r2, [r1]
   2b1ac:	ldrd	r0, [sp, #176]	; 0xb0
   2b1b0:	ldrd	r2, [sp, #40]	; 0x28
   2b1b4:	mov	r8, r2
   2b1b8:	mov	r9, r3
   2b1bc:	eor	r8, r8, r0
   2b1c0:	eor	r9, r9, r1
   2b1c4:	mov	r0, r8
   2b1c8:	mov	r1, r9
   2b1cc:	and	r0, r0, sl
   2b1d0:	and	r1, r1, fp
   2b1d4:	mov	r8, r2
   2b1d8:	mov	r9, r3
   2b1dc:	eor	r8, r8, r0
   2b1e0:	eor	r9, r9, r1
   2b1e4:	add	r3, pc, #900	; 0x384
   2b1e8:	ldrd	r2, [r3]
   2b1ec:	strd	r6, [sp, #192]	; 0xc0
   2b1f0:	adds	r6, r6, r2
   2b1f4:	adc	r7, r7, r3
   2b1f8:	mov	r2, r6
   2b1fc:	mov	r3, r7
   2b200:	ldrd	r6, [sp]
   2b204:	adds	r6, r6, r2
   2b208:	adc	r7, r7, r3
   2b20c:	adds	r0, r8, r6
   2b210:	adc	r1, r9, r7
   2b214:	lsr	r3, sl, #14
   2b218:	orr	ip, r3, fp, lsl #18
   2b21c:	add	r3, sp, #5824	; 0x16c0
   2b220:	add	r3, r3, #40	; 0x28
   2b224:	str	ip, [r3]
   2b228:	lsr	r3, fp, #14
   2b22c:	orr	ip, r3, sl, lsl #18
   2b230:	add	r3, sp, #5824	; 0x16c0
   2b234:	add	r3, r3, #44	; 0x2c
   2b238:	str	ip, [r3]
   2b23c:	lsr	r3, sl, #18
   2b240:	orr	ip, r3, fp, lsl #14
   2b244:	add	r3, sp, #5824	; 0x16c0
   2b248:	add	r3, r3, #48	; 0x30
   2b24c:	str	ip, [r3]
   2b250:	lsr	r3, fp, #18
   2b254:	orr	ip, r3, sl, lsl #14
   2b258:	add	r3, sp, #5824	; 0x16c0
   2b25c:	add	r3, r3, #52	; 0x34
   2b260:	str	ip, [r3]
   2b264:	add	r3, sp, #5824	; 0x16c0
   2b268:	add	r3, r3, #40	; 0x28
   2b26c:	ldrd	r2, [r3]
   2b270:	add	ip, sp, #5824	; 0x16c0
   2b274:	add	ip, ip, #48	; 0x30
   2b278:	ldrd	r6, [ip]
   2b27c:	eor	r2, r2, r6
   2b280:	eor	r3, r3, r7
   2b284:	lsl	ip, fp, #23
   2b288:	orr	ip, ip, sl, lsr #9
   2b28c:	add	r6, sp, #5824	; 0x16c0
   2b290:	add	r6, r6, #60	; 0x3c
   2b294:	str	ip, [r6]
   2b298:	lsl	ip, sl, #23
   2b29c:	orr	ip, ip, fp, lsr #9
   2b2a0:	add	r6, sp, #5824	; 0x16c0
   2b2a4:	add	r6, r6, #56	; 0x38
   2b2a8:	str	ip, [r6]
   2b2ac:	ldrd	r6, [r6]
   2b2b0:	eor	r6, r6, r2
   2b2b4:	eor	r7, r7, r3
   2b2b8:	adds	r6, r0, r6
   2b2bc:	adc	r7, r1, r7
   2b2c0:	mov	r2, r6
   2b2c4:	mov	r3, r7
   2b2c8:	strd	r2, [sp]
   2b2cc:	ldrd	r0, [sp, #56]	; 0x38
   2b2d0:	adds	r0, r0, r6
   2b2d4:	adc	r1, r1, r7
   2b2d8:	mov	r6, r0
   2b2dc:	mov	r7, r1
   2b2e0:	ldrd	r0, [sp, #64]	; 0x40
   2b2e4:	lsr	r3, r0, #28
   2b2e8:	orr	ip, r3, r1, lsl #4
   2b2ec:	add	r3, sp, #5888	; 0x1700
   2b2f0:	str	ip, [r3]
   2b2f4:	lsr	r3, r1, #28
   2b2f8:	orr	ip, r3, r0, lsl #4
   2b2fc:	add	r3, sp, #5888	; 0x1700
   2b300:	add	r3, r3, #4
   2b304:	str	ip, [r3]
   2b308:	lsl	r3, r1, #30
   2b30c:	orr	ip, r3, r0, lsr #2
   2b310:	add	r3, sp, #5888	; 0x1700
   2b314:	add	r3, r3, #12
   2b318:	str	ip, [r3]
   2b31c:	lsl	r3, r0, #30
   2b320:	orr	ip, r3, r1, lsr #2
   2b324:	add	r3, sp, #5888	; 0x1700
   2b328:	add	r3, r3, #8
   2b32c:	str	ip, [r3]
   2b330:	add	r3, sp, #5888	; 0x1700
   2b334:	ldrd	r2, [r3]
   2b338:	add	ip, sp, #5888	; 0x1700
   2b33c:	add	ip, ip, #8
   2b340:	ldrd	r8, [ip]
   2b344:	eor	r2, r2, r8
   2b348:	eor	r3, r3, r9
   2b34c:	mov	r8, r0
   2b350:	mov	r9, r1
   2b354:	lsl	r1, r1, #25
   2b358:	orr	r1, r1, r8, lsr #7
   2b35c:	add	r0, sp, #5888	; 0x1700
   2b360:	add	r0, r0, #20
   2b364:	str	r1, [r0]
   2b368:	lsl	r1, r8, #25
   2b36c:	orr	r1, r1, r9, lsr #7
   2b370:	add	r0, sp, #5888	; 0x1700
   2b374:	add	r0, r0, #16
   2b378:	str	r1, [r0]
   2b37c:	ldrd	r0, [r0]
   2b380:	eor	r0, r0, r2
   2b384:	eor	r1, r1, r3
   2b388:	strd	r0, [sp, #16]
   2b38c:	orr	r0, r4, r8
   2b390:	orr	r1, r5, r9
   2b394:	ldrd	r2, [sp, #136]	; 0x88
   2b398:	and	r2, r2, r0
   2b39c:	and	r3, r3, r1
   2b3a0:	mov	r0, r2
   2b3a4:	mov	r1, r3
   2b3a8:	and	r4, r4, r8
   2b3ac:	and	r5, r5, r9
   2b3b0:	orr	r0, r0, r4
   2b3b4:	orr	r1, r1, r5
   2b3b8:	ldrd	r2, [sp, #16]
   2b3bc:	adds	r2, r2, r0
   2b3c0:	adc	r3, r3, r1
   2b3c4:	mov	r0, r2
   2b3c8:	mov	r1, r3
   2b3cc:	ldrd	r2, [sp]
   2b3d0:	adds	r2, r2, r0
   2b3d4:	adc	r3, r3, r1
   2b3d8:	strd	r2, [sp]
   2b3dc:	ldrd	r0, [sp, #24]
   2b3e0:	lsr	r3, r0, #1
   2b3e4:	orr	ip, r3, r1, lsl #31
   2b3e8:	add	r3, sp, #5888	; 0x1700
   2b3ec:	add	r3, r3, #24
   2b3f0:	str	ip, [r3]
   2b3f4:	lsr	r3, r1, #1
   2b3f8:	orr	ip, r3, r0, lsl #31
   2b3fc:	add	r3, sp, #5888	; 0x1700
   2b400:	add	r3, r3, #28
   2b404:	str	ip, [r3]
   2b408:	lsr	r3, r0, #8
   2b40c:	orr	ip, r3, r1, lsl #24
   2b410:	add	r3, sp, #5888	; 0x1700
   2b414:	add	r3, r3, #32
   2b418:	str	ip, [r3]
   2b41c:	lsr	r3, r1, #8
   2b420:	orr	ip, r3, r0, lsl #24
   2b424:	add	r3, sp, #5888	; 0x1700
   2b428:	add	r3, r3, #36	; 0x24
   2b42c:	str	ip, [r3]
   2b430:	add	r3, sp, #5888	; 0x1700
   2b434:	add	r3, r3, #24
   2b438:	ldrd	r2, [r3]
   2b43c:	add	ip, sp, #5888	; 0x1700
   2b440:	add	ip, ip, #32
   2b444:	ldrd	r8, [ip]
   2b448:	eor	r2, r2, r8
   2b44c:	eor	r3, r3, r9
   2b450:	lsr	ip, r0, #7
   2b454:	orr	ip, ip, r1, lsl #25
   2b458:	str	ip, [sp, #984]	; 0x3d8
   2b45c:	lsr	r1, r1, #7
   2b460:	str	r1, [sp, #988]	; 0x3dc
   2b464:	add	r1, sp, #984	; 0x3d8
   2b468:	ldrd	r4, [r1]
   2b46c:	eor	r4, r4, r2
   2b470:	eor	r5, r5, r3
   2b474:	ldrd	r0, [sp, #160]	; 0xa0
   2b478:	adds	r0, r0, r4
   2b47c:	adc	r1, r1, r5
   2b480:	ldrd	r4, [sp, #8]
   2b484:	adds	r4, r4, r0
   2b488:	adc	r5, r5, r1
   2b48c:	mov	r2, r4
   2b490:	mov	r3, r5
   2b494:	ldrd	r4, [sp, #144]	; 0x90
   2b498:	lsr	r1, r4, #19
   2b49c:	orr	r1, r1, r5, lsl #13
   2b4a0:	add	r0, sp, #5888	; 0x1700
   2b4a4:	add	r0, r0, #40	; 0x28
   2b4a8:	str	r1, [r0]
   2b4ac:	lsr	r1, r5, #19
   2b4b0:	orr	r1, r1, r4, lsl #13
   2b4b4:	add	r0, sp, #5888	; 0x1700
   2b4b8:	add	r0, r0, #44	; 0x2c
   2b4bc:	str	r1, [r0]
   2b4c0:	lsl	r1, r5, #3
   2b4c4:	orr	r1, r1, r4, lsr #29
   2b4c8:	add	r0, sp, #5888	; 0x1700
   2b4cc:	add	r0, r0, #52	; 0x34
   2b4d0:	str	r1, [r0]
   2b4d4:	lsl	r1, r4, #3
   2b4d8:	orr	r1, r1, r5, lsr #29
   2b4dc:	add	r0, sp, #5888	; 0x1700
   2b4e0:	add	r0, r0, #48	; 0x30
   2b4e4:	str	r1, [r0]
   2b4e8:	add	r1, sp, #5888	; 0x1700
   2b4ec:	add	r1, r1, #40	; 0x28
   2b4f0:	ldrd	r0, [r1]
   2b4f4:	add	ip, sp, #5888	; 0x1700
   2b4f8:	add	ip, ip, #48	; 0x30
   2b4fc:	ldrd	r8, [ip]
   2b500:	eor	r0, r0, r8
   2b504:	eor	r1, r1, r9
   2b508:	lsr	ip, r4, #6
   2b50c:	orr	ip, ip, r5, lsl #26
   2b510:	str	ip, [sp, #992]	; 0x3e0
   2b514:	lsr	ip, r5, #6
   2b518:	str	ip, [sp, #996]	; 0x3e4
   2b51c:	add	ip, sp, #992	; 0x3e0
   2b520:	ldrd	r4, [ip]
   2b524:	eor	r4, r4, r0
   2b528:	eor	r5, r5, r1
   2b52c:	adds	r4, r2, r4
   2b530:	adc	r5, r3, r5
   2b534:	mov	r8, r4
   2b538:	mov	r9, r5
   2b53c:	mov	r2, r4
   2b540:	mov	r3, r5
   2b544:	add	r1, sp, #7104	; 0x1bc0
   2b548:	add	r1, r1, #24
   2b54c:	strd	r2, [r1]
   2b550:	ldrd	r4, [sp, #176]	; 0xb0
   2b554:	mov	r0, r4
   2b558:	mov	r1, r5
   2b55c:	eor	r0, r0, sl
   2b560:	eor	r1, r1, fp
   2b564:	and	r0, r0, r6
   2b568:	b	2b580 <__assert_fail@plt+0x1a294>
   2b56c:	nop			; (mov r0, r0)
   2b570:	b	9c3be8 <optarg@@GLIBC_2.4+0x979a40>
   2b574:	bgt	9fb0b4 <optarg@@GLIBC_2.4+0x9b0f0c>
   2b578:	biccs	ip, r0, r7, lsl #4
   2b57c:	orrle	fp, r6, r7, asr #17
   2b580:	and	r1, r1, r7
   2b584:	mov	r2, r4
   2b588:	mov	r3, r5
   2b58c:	eor	r2, r2, r0
   2b590:	eor	r3, r3, r1
   2b594:	mov	r0, r2
   2b598:	mov	r1, r3
   2b59c:	sub	r3, pc, #44	; 0x2c
   2b5a0:	ldrd	r2, [r3]
   2b5a4:	strd	r8, [sp, #152]	; 0x98
   2b5a8:	adds	r4, r8, r2
   2b5ac:	adc	r5, r9, r3
   2b5b0:	mov	r2, r4
   2b5b4:	mov	r3, r5
   2b5b8:	ldrd	r4, [sp, #40]	; 0x28
   2b5bc:	adds	r4, r4, r2
   2b5c0:	adc	r5, r5, r3
   2b5c4:	adds	r0, r0, r4
   2b5c8:	adc	r1, r1, r5
   2b5cc:	lsr	r3, r6, #14
   2b5d0:	orr	ip, r3, r7, lsl #18
   2b5d4:	add	r3, sp, #5888	; 0x1700
   2b5d8:	add	r3, r3, #56	; 0x38
   2b5dc:	str	ip, [r3]
   2b5e0:	lsr	r3, r7, #14
   2b5e4:	orr	ip, r3, r6, lsl #18
   2b5e8:	add	r3, sp, #5888	; 0x1700
   2b5ec:	add	r3, r3, #60	; 0x3c
   2b5f0:	str	ip, [r3]
   2b5f4:	lsr	r3, r6, #18
   2b5f8:	orr	ip, r3, r7, lsl #14
   2b5fc:	add	r3, sp, #5952	; 0x1740
   2b600:	str	ip, [r3]
   2b604:	lsr	r3, r7, #18
   2b608:	orr	ip, r3, r6, lsl #14
   2b60c:	add	r3, sp, #5952	; 0x1740
   2b610:	add	r3, r3, #4
   2b614:	str	ip, [r3]
   2b618:	add	r3, sp, #5888	; 0x1700
   2b61c:	add	r3, r3, #56	; 0x38
   2b620:	ldrd	r8, [r3]
   2b624:	add	r3, sp, #5952	; 0x1740
   2b628:	ldrd	r2, [r3]
   2b62c:	eor	r8, r8, r2
   2b630:	eor	r9, r9, r3
   2b634:	mov	r2, r8
   2b638:	mov	r3, r9
   2b63c:	lsl	ip, r7, #23
   2b640:	orr	ip, ip, r6, lsr #9
   2b644:	add	r4, sp, #5952	; 0x1740
   2b648:	add	r4, r4, #12
   2b64c:	str	ip, [r4]
   2b650:	lsl	ip, r6, #23
   2b654:	orr	ip, ip, r7, lsr #9
   2b658:	add	r4, sp, #5952	; 0x1740
   2b65c:	add	r4, r4, #8
   2b660:	str	ip, [r4]
   2b664:	ldrd	r8, [r4]
   2b668:	eor	r8, r8, r2
   2b66c:	eor	r9, r9, r3
   2b670:	adds	r8, r0, r8
   2b674:	adc	r9, r1, r9
   2b678:	mov	r4, r8
   2b67c:	mov	r5, r9
   2b680:	ldrd	r8, [sp, #136]	; 0x88
   2b684:	adds	r8, r8, r4
   2b688:	adc	r9, r9, r5
   2b68c:	strd	r8, [sp, #16]
   2b690:	ldrd	r8, [sp]
   2b694:	lsr	r3, r8, #28
   2b698:	orr	r1, r3, r9, lsl #4
   2b69c:	add	r3, sp, #5952	; 0x1740
   2b6a0:	add	r3, r3, #16
   2b6a4:	str	r1, [r3]
   2b6a8:	lsr	r3, r9, #28
   2b6ac:	orr	r1, r3, r8, lsl #4
   2b6b0:	add	r3, sp, #5952	; 0x1740
   2b6b4:	add	r3, r3, #20
   2b6b8:	str	r1, [r3]
   2b6bc:	lsl	r3, r9, #30
   2b6c0:	orr	r1, r3, r8, lsr #2
   2b6c4:	add	r3, sp, #5952	; 0x1740
   2b6c8:	add	r3, r3, #28
   2b6cc:	str	r1, [r3]
   2b6d0:	lsl	r3, r8, #30
   2b6d4:	orr	r1, r3, r9, lsr #2
   2b6d8:	add	r3, sp, #5952	; 0x1740
   2b6dc:	add	r3, r3, #24
   2b6e0:	str	r1, [r3]
   2b6e4:	add	r3, sp, #5952	; 0x1740
   2b6e8:	add	r3, r3, #16
   2b6ec:	ldrd	r8, [r3]
   2b6f0:	add	r3, sp, #5952	; 0x1740
   2b6f4:	add	r3, r3, #24
   2b6f8:	ldrd	r2, [r3]
   2b6fc:	eor	r8, r8, r2
   2b700:	eor	r9, r9, r3
   2b704:	mov	r2, r8
   2b708:	mov	r3, r9
   2b70c:	ldrd	r8, [sp]
   2b710:	lsl	r1, r9, #25
   2b714:	orr	r1, r1, r8, lsr #7
   2b718:	add	r0, sp, #5952	; 0x1740
   2b71c:	add	r0, r0, #36	; 0x24
   2b720:	str	r1, [r0]
   2b724:	lsl	r1, r8, #25
   2b728:	orr	r1, r1, r9, lsr #7
   2b72c:	add	r0, sp, #5952	; 0x1740
   2b730:	add	r0, r0, #32
   2b734:	str	r1, [r0]
   2b738:	ldrd	r8, [r0]
   2b73c:	eor	r8, r8, r2
   2b740:	eor	r9, r9, r3
   2b744:	strd	r8, [sp, #40]	; 0x28
   2b748:	ldrd	r8, [sp, #64]	; 0x40
   2b74c:	ldrd	r0, [sp]
   2b750:	orr	r0, r0, r8
   2b754:	orr	r1, r1, r9
   2b758:	ldrd	r2, [sp, #184]	; 0xb8
   2b75c:	and	r2, r2, r0
   2b760:	and	r3, r3, r1
   2b764:	mov	r0, r2
   2b768:	mov	r1, r3
   2b76c:	ldrd	r8, [sp, #64]	; 0x40
   2b770:	ldrd	r2, [sp]
   2b774:	and	r2, r2, r8
   2b778:	and	r3, r3, r9
   2b77c:	orr	r8, r2, r0
   2b780:	orr	r9, r3, r1
   2b784:	mov	r0, r8
   2b788:	mov	r1, r9
   2b78c:	ldrd	r8, [sp, #40]	; 0x28
   2b790:	adds	r8, r8, r0
   2b794:	adc	r9, r9, r1
   2b798:	adds	r2, r4, r8
   2b79c:	adc	r3, r5, r9
   2b7a0:	strd	r2, [sp, #40]	; 0x28
   2b7a4:	ldrd	r0, [sp, #72]	; 0x48
   2b7a8:	lsr	r3, r0, #1
   2b7ac:	orr	ip, r3, r1, lsl #31
   2b7b0:	add	r3, sp, #5952	; 0x1740
   2b7b4:	add	r3, r3, #40	; 0x28
   2b7b8:	str	ip, [r3]
   2b7bc:	lsr	r3, r1, #1
   2b7c0:	orr	ip, r3, r0, lsl #31
   2b7c4:	add	r3, sp, #5952	; 0x1740
   2b7c8:	add	r3, r3, #44	; 0x2c
   2b7cc:	str	ip, [r3]
   2b7d0:	lsr	r3, r0, #8
   2b7d4:	orr	ip, r3, r1, lsl #24
   2b7d8:	add	r3, sp, #5952	; 0x1740
   2b7dc:	add	r3, r3, #48	; 0x30
   2b7e0:	str	ip, [r3]
   2b7e4:	lsr	r3, r1, #8
   2b7e8:	orr	ip, r3, r0, lsl #24
   2b7ec:	add	r3, sp, #5952	; 0x1740
   2b7f0:	add	r3, r3, #52	; 0x34
   2b7f4:	str	ip, [r3]
   2b7f8:	add	r3, sp, #5952	; 0x1740
   2b7fc:	add	r3, r3, #40	; 0x28
   2b800:	ldrd	r2, [r3]
   2b804:	add	ip, sp, #5952	; 0x1740
   2b808:	add	ip, ip, #48	; 0x30
   2b80c:	ldrd	r4, [ip]
   2b810:	eor	r2, r2, r4
   2b814:	eor	r3, r3, r5
   2b818:	lsr	ip, r0, #7
   2b81c:	orr	ip, ip, r1, lsl #25
   2b820:	str	ip, [sp, #1000]	; 0x3e8
   2b824:	lsr	r1, r1, #7
   2b828:	str	r1, [sp, #1004]	; 0x3ec
   2b82c:	add	r1, sp, #1000	; 0x3e8
   2b830:	ldrd	r4, [r1]
   2b834:	eor	r4, r4, r2
   2b838:	eor	r5, r5, r3
   2b83c:	ldrd	r0, [sp, #24]
   2b840:	adds	r0, r0, r4
   2b844:	adc	r1, r1, r5
   2b848:	ldrd	r4, [sp, #104]	; 0x68
   2b84c:	adds	r4, r4, r0
   2b850:	adc	r5, r5, r1
   2b854:	mov	r2, r4
   2b858:	mov	r3, r5
   2b85c:	ldrd	r4, [sp, #192]	; 0xc0
   2b860:	lsr	r1, r4, #19
   2b864:	orr	r1, r1, r5, lsl #13
   2b868:	add	r0, sp, #5952	; 0x1740
   2b86c:	add	r0, r0, #56	; 0x38
   2b870:	str	r1, [r0]
   2b874:	lsr	r1, r5, #19
   2b878:	orr	r1, r1, r4, lsl #13
   2b87c:	add	r0, sp, #5952	; 0x1740
   2b880:	add	r0, r0, #60	; 0x3c
   2b884:	str	r1, [r0]
   2b888:	lsl	r1, r5, #3
   2b88c:	orr	r1, r1, r4, lsr #29
   2b890:	add	r0, sp, #6016	; 0x1780
   2b894:	add	r0, r0, #4
   2b898:	str	r1, [r0]
   2b89c:	lsl	r1, r4, #3
   2b8a0:	orr	r1, r1, r5, lsr #29
   2b8a4:	add	r0, sp, #6016	; 0x1780
   2b8a8:	str	r1, [r0]
   2b8ac:	add	r1, sp, #5952	; 0x1740
   2b8b0:	add	r1, r1, #56	; 0x38
   2b8b4:	ldrd	r0, [r1]
   2b8b8:	add	ip, sp, #6016	; 0x1780
   2b8bc:	ldrd	r8, [ip]
   2b8c0:	eor	r0, r0, r8
   2b8c4:	eor	r1, r1, r9
   2b8c8:	lsr	ip, r4, #6
   2b8cc:	orr	ip, ip, r5, lsl #26
   2b8d0:	str	ip, [sp, #1008]	; 0x3f0
   2b8d4:	lsr	ip, r5, #6
   2b8d8:	str	ip, [sp, #1012]	; 0x3f4
   2b8dc:	add	ip, sp, #1008	; 0x3f0
   2b8e0:	ldrd	r4, [ip]
   2b8e4:	eor	r4, r4, r0
   2b8e8:	eor	r5, r5, r1
   2b8ec:	adds	r4, r2, r4
   2b8f0:	adc	r5, r3, r5
   2b8f4:	mov	r2, r4
   2b8f8:	mov	r3, r5
   2b8fc:	add	r1, sp, #7104	; 0x1bc0
   2b900:	add	r1, r1, #32
   2b904:	strd	r2, [r1]
   2b908:	eor	r0, sl, r6
   2b90c:	eor	r1, fp, r7
   2b910:	ldrd	r8, [sp, #16]
   2b914:	and	r8, r8, r0
   2b918:	and	r9, r9, r1
   2b91c:	mov	r0, r8
   2b920:	mov	r1, r9
   2b924:	eor	r0, r0, sl
   2b928:	eor	r1, r1, fp
   2b92c:	add	r3, pc, #884	; 0x374
   2b930:	ldrd	r2, [r3]
   2b934:	strd	r4, [sp, #56]	; 0x38
   2b938:	adds	r4, r4, r2
   2b93c:	adc	r5, r5, r3
   2b940:	mov	r2, r4
   2b944:	mov	r3, r5
   2b948:	ldrd	r4, [sp, #176]	; 0xb0
   2b94c:	adds	r4, r4, r2
   2b950:	adc	r5, r5, r3
   2b954:	adds	r0, r0, r4
   2b958:	adc	r1, r1, r5
   2b95c:	ldrd	r4, [sp, #16]
   2b960:	lsr	r3, r4, #14
   2b964:	orr	ip, r3, r5, lsl #18
   2b968:	add	r3, sp, #6016	; 0x1780
   2b96c:	add	r3, r3, #8
   2b970:	str	ip, [r3]
   2b974:	lsr	r3, r5, #14
   2b978:	orr	ip, r3, r4, lsl #18
   2b97c:	add	r3, sp, #6016	; 0x1780
   2b980:	add	r3, r3, #12
   2b984:	str	ip, [r3]
   2b988:	lsr	r3, r4, #18
   2b98c:	orr	ip, r3, r5, lsl #14
   2b990:	add	r3, sp, #6016	; 0x1780
   2b994:	add	r3, r3, #16
   2b998:	str	ip, [r3]
   2b99c:	lsr	r3, r5, #18
   2b9a0:	orr	ip, r3, r4, lsl #14
   2b9a4:	add	r3, sp, #6016	; 0x1780
   2b9a8:	add	r3, r3, #20
   2b9ac:	str	ip, [r3]
   2b9b0:	add	r3, sp, #6016	; 0x1780
   2b9b4:	add	r3, r3, #8
   2b9b8:	ldrd	r2, [r3]
   2b9bc:	add	ip, sp, #6016	; 0x1780
   2b9c0:	add	ip, ip, #16
   2b9c4:	ldrd	r8, [ip]
   2b9c8:	eor	r2, r2, r8
   2b9cc:	eor	r3, r3, r9
   2b9d0:	lsl	ip, r5, #23
   2b9d4:	orr	ip, ip, r4, lsr #9
   2b9d8:	add	r8, sp, #6016	; 0x1780
   2b9dc:	add	r8, r8, #28
   2b9e0:	str	ip, [r8]
   2b9e4:	lsl	ip, r4, #23
   2b9e8:	orr	ip, ip, r5, lsr #9
   2b9ec:	add	r4, sp, #6016	; 0x1780
   2b9f0:	add	r4, r4, #24
   2b9f4:	str	ip, [r4]
   2b9f8:	ldrd	r4, [r4]
   2b9fc:	eor	r4, r4, r2
   2ba00:	eor	r5, r5, r3
   2ba04:	adds	r4, r0, r4
   2ba08:	adc	r5, r1, r5
   2ba0c:	ldrd	r2, [sp, #184]	; 0xb8
   2ba10:	strd	r4, [sp, #24]
   2ba14:	adds	r2, r2, r4
   2ba18:	adc	r3, r3, r5
   2ba1c:	mov	r4, r2
   2ba20:	mov	r5, r3
   2ba24:	ldrd	r8, [sp, #40]	; 0x28
   2ba28:	lsr	r3, r8, #28
   2ba2c:	orr	r1, r3, r9, lsl #4
   2ba30:	add	r3, sp, #6016	; 0x1780
   2ba34:	add	r3, r3, #32
   2ba38:	str	r1, [r3]
   2ba3c:	lsr	r3, r9, #28
   2ba40:	orr	r1, r3, r8, lsl #4
   2ba44:	add	r3, sp, #6016	; 0x1780
   2ba48:	add	r3, r3, #36	; 0x24
   2ba4c:	str	r1, [r3]
   2ba50:	lsl	r3, r9, #30
   2ba54:	orr	r1, r3, r8, lsr #2
   2ba58:	add	r3, sp, #6016	; 0x1780
   2ba5c:	add	r3, r3, #44	; 0x2c
   2ba60:	str	r1, [r3]
   2ba64:	lsl	r3, r8, #30
   2ba68:	orr	r1, r3, r9, lsr #2
   2ba6c:	add	r3, sp, #6016	; 0x1780
   2ba70:	add	r3, r3, #40	; 0x28
   2ba74:	str	r1, [r3]
   2ba78:	add	r3, sp, #6016	; 0x1780
   2ba7c:	add	r3, r3, #32
   2ba80:	ldrd	r2, [r3]
   2ba84:	add	r1, sp, #6016	; 0x1780
   2ba88:	add	r1, r1, #40	; 0x28
   2ba8c:	ldrd	r0, [r1]
   2ba90:	eor	r2, r2, r0
   2ba94:	eor	r3, r3, r1
   2ba98:	lsl	r1, r9, #25
   2ba9c:	orr	r1, r1, r8, lsr #7
   2baa0:	add	r0, sp, #6016	; 0x1780
   2baa4:	add	r0, r0, #52	; 0x34
   2baa8:	str	r1, [r0]
   2baac:	lsl	r1, r8, #25
   2bab0:	mov	ip, r9
   2bab4:	orr	r1, r1, r9, lsr #7
   2bab8:	add	r0, sp, #6016	; 0x1780
   2babc:	add	r0, r0, #48	; 0x30
   2bac0:	str	r1, [r0]
   2bac4:	ldrd	r0, [r0]
   2bac8:	eor	r0, r0, r2
   2bacc:	eor	r1, r1, r3
   2bad0:	strd	r0, [sp, #136]	; 0x88
   2bad4:	ldrd	r2, [sp]
   2bad8:	orr	r2, r2, r8
   2badc:	orr	r3, r3, r9
   2bae0:	mov	r0, r2
   2bae4:	mov	r1, r3
   2bae8:	ldrd	r2, [sp, #64]	; 0x40
   2baec:	and	r2, r2, r0
   2baf0:	and	r3, r3, r1
   2baf4:	mov	r0, r2
   2baf8:	mov	r1, r3
   2bafc:	mov	r2, r8
   2bb00:	ldrd	r8, [sp]
   2bb04:	and	r8, r8, r2
   2bb08:	and	r9, r9, ip
   2bb0c:	orr	r2, r8, r0
   2bb10:	orr	r3, r9, r1
   2bb14:	ldrd	r8, [sp, #136]	; 0x88
   2bb18:	adds	r8, r8, r2
   2bb1c:	adc	r9, r9, r3
   2bb20:	ldrd	r2, [sp, #24]
   2bb24:	adds	r2, r2, r8
   2bb28:	adc	r3, r3, r9
   2bb2c:	strd	r2, [sp, #136]	; 0x88
   2bb30:	ldrd	r0, [sp, #80]	; 0x50
   2bb34:	lsr	r3, r0, #1
   2bb38:	orr	ip, r3, r1, lsl #31
   2bb3c:	add	r3, sp, #6016	; 0x1780
   2bb40:	add	r3, r3, #56	; 0x38
   2bb44:	str	ip, [r3]
   2bb48:	lsr	r3, r1, #1
   2bb4c:	orr	ip, r3, r0, lsl #31
   2bb50:	add	r3, sp, #6016	; 0x1780
   2bb54:	add	r3, r3, #60	; 0x3c
   2bb58:	str	ip, [r3]
   2bb5c:	lsr	r3, r0, #8
   2bb60:	orr	ip, r3, r1, lsl #24
   2bb64:	add	r3, sp, #6080	; 0x17c0
   2bb68:	str	ip, [r3]
   2bb6c:	lsr	r3, r1, #8
   2bb70:	orr	ip, r3, r0, lsl #24
   2bb74:	add	r3, sp, #6080	; 0x17c0
   2bb78:	add	r3, r3, #4
   2bb7c:	str	ip, [r3]
   2bb80:	add	r3, sp, #6016	; 0x1780
   2bb84:	add	r3, r3, #56	; 0x38
   2bb88:	ldrd	r8, [r3]
   2bb8c:	add	r3, sp, #6080	; 0x17c0
   2bb90:	ldrd	r2, [r3]
   2bb94:	eor	r8, r8, r2
   2bb98:	eor	r9, r9, r3
   2bb9c:	mov	r2, r8
   2bba0:	mov	r3, r9
   2bba4:	lsr	ip, r0, #7
   2bba8:	orr	ip, ip, r1, lsl #25
   2bbac:	str	ip, [sp, #1016]	; 0x3f8
   2bbb0:	lsr	r1, r1, #7
   2bbb4:	str	r1, [sp, #1020]	; 0x3fc
   2bbb8:	add	r1, sp, #1016	; 0x3f8
   2bbbc:	ldrd	r8, [r1]
   2bbc0:	eor	r8, r8, r2
   2bbc4:	eor	r9, r9, r3
   2bbc8:	ldrd	r0, [sp, #72]	; 0x48
   2bbcc:	adds	r0, r0, r8
   2bbd0:	adc	r1, r1, r9
   2bbd4:	mov	r2, r0
   2bbd8:	mov	r3, r1
   2bbdc:	ldrd	r0, [sp, #120]	; 0x78
   2bbe0:	adds	r0, r0, r2
   2bbe4:	adc	r1, r1, r3
   2bbe8:	mov	r2, r0
   2bbec:	mov	r3, r1
   2bbf0:	ldrd	r8, [sp, #152]	; 0x98
   2bbf4:	lsr	r1, r8, #19
   2bbf8:	orr	r1, r1, r9, lsl #13
   2bbfc:	add	r0, sp, #6080	; 0x17c0
   2bc00:	add	r0, r0, #8
   2bc04:	str	r1, [r0]
   2bc08:	lsr	r1, r9, #19
   2bc0c:	orr	r1, r1, r8, lsl #13
   2bc10:	add	r0, sp, #6080	; 0x17c0
   2bc14:	add	r0, r0, #12
   2bc18:	str	r1, [r0]
   2bc1c:	lsl	r1, r9, #3
   2bc20:	orr	r1, r1, r8, lsr #29
   2bc24:	add	r0, sp, #6080	; 0x17c0
   2bc28:	add	r0, r0, #20
   2bc2c:	str	r1, [r0]
   2bc30:	lsl	r1, r8, #3
   2bc34:	orr	r1, r1, r9, lsr #29
   2bc38:	add	r0, sp, #6080	; 0x17c0
   2bc3c:	add	r0, r0, #16
   2bc40:	str	r1, [r0]
   2bc44:	add	r1, sp, #6080	; 0x17c0
   2bc48:	add	r1, r1, #8
   2bc4c:	ldrd	r0, [r1]
   2bc50:	add	ip, sp, #6080	; 0x17c0
   2bc54:	add	ip, ip, #16
   2bc58:	ldrd	r8, [ip]
   2bc5c:	eor	r0, r0, r8
   2bc60:	eor	r1, r1, r9
   2bc64:	strd	r0, [sp, #24]
   2bc68:	ldrd	r8, [sp, #152]	; 0x98
   2bc6c:	lsr	ip, r8, #6
   2bc70:	orr	ip, ip, r9, lsl #26
   2bc74:	str	ip, [sp, #1024]	; 0x400
   2bc78:	lsr	r1, r9, #6
   2bc7c:	str	r1, [sp, #1028]	; 0x404
   2bc80:	add	r1, sp, #1024	; 0x400
   2bc84:	ldrd	r8, [r1]
   2bc88:	ldrd	r0, [sp, #24]
   2bc8c:	eor	r0, r0, r8
   2bc90:	eor	r1, r1, r9
   2bc94:	adds	r8, r2, r0
   2bc98:	adc	r9, r3, r1
   2bc9c:	add	r3, sp, #7104	; 0x1bc0
   2bca0:	b	2bcb8 <__assert_fail@plt+0x1a9cc>
   2bca4:	nop			; (mov r0, r0)
   2bca8:			; <UNDEFINED> instruction: 0xcde0eb1e
   2bcac:	b	ff6cb40c <optarg@@GLIBC_2.4+0xff681264>
   2bcb0:	mcr	1, 3, sp, cr14, cr8, {3}
   2bcb4:			; <UNDEFINED> instruction: 0xf57d4f7f
   2bcb8:	add	r3, r3, #40	; 0x28
   2bcbc:	strd	r8, [r3]
   2bcc0:	ldrd	r0, [sp, #16]
   2bcc4:	eor	r0, r0, r6
   2bcc8:	eor	r1, r1, r7
   2bccc:	strd	r4, [sp, #72]	; 0x48
   2bcd0:	and	r4, r4, r0
   2bcd4:	and	r5, r5, r1
   2bcd8:	mov	r0, r4
   2bcdc:	mov	r1, r5
   2bce0:	eor	r0, r0, r6
   2bce4:	eor	r1, r1, r7
   2bce8:	sub	r3, pc, #64	; 0x40
   2bcec:	ldrd	r2, [r3]
   2bcf0:	strd	r8, [sp, #160]	; 0xa0
   2bcf4:	adds	r8, r8, r2
   2bcf8:	adc	r9, r9, r3
   2bcfc:	adds	sl, sl, r8
   2bd00:	adc	fp, fp, r9
   2bd04:	adds	r0, r0, sl
   2bd08:	adc	r1, r1, fp
   2bd0c:	ldrd	r4, [sp, #72]	; 0x48
   2bd10:	lsr	r3, r4, #14
   2bd14:	orr	ip, r3, r5, lsl #18
   2bd18:	add	r3, sp, #6080	; 0x17c0
   2bd1c:	add	r3, r3, #24
   2bd20:	str	ip, [r3]
   2bd24:	lsr	r3, r5, #14
   2bd28:	orr	ip, r3, r4, lsl #18
   2bd2c:	add	r3, sp, #6080	; 0x17c0
   2bd30:	add	r3, r3, #28
   2bd34:	str	ip, [r3]
   2bd38:	lsr	r3, r4, #18
   2bd3c:	orr	ip, r3, r5, lsl #14
   2bd40:	add	r3, sp, #6080	; 0x17c0
   2bd44:	add	r3, r3, #32
   2bd48:	str	ip, [r3]
   2bd4c:	lsr	r3, r5, #18
   2bd50:	orr	ip, r3, r4, lsl #14
   2bd54:	add	r3, sp, #6080	; 0x17c0
   2bd58:	add	r3, r3, #36	; 0x24
   2bd5c:	str	ip, [r3]
   2bd60:	add	r3, sp, #6080	; 0x17c0
   2bd64:	add	r3, r3, #24
   2bd68:	ldrd	sl, [r3]
   2bd6c:	add	r3, sp, #6080	; 0x17c0
   2bd70:	add	r3, r3, #32
   2bd74:	ldrd	r2, [r3]
   2bd78:	eor	sl, sl, r2
   2bd7c:	eor	fp, fp, r3
   2bd80:	mov	r2, sl
   2bd84:	mov	r3, fp
   2bd88:	lsl	ip, r5, #23
   2bd8c:	orr	ip, ip, r4, lsr #9
   2bd90:	add	r8, sp, #6080	; 0x17c0
   2bd94:	add	r8, r8, #44	; 0x2c
   2bd98:	str	ip, [r8]
   2bd9c:	lsl	ip, r4, #23
   2bda0:	orr	ip, ip, r5, lsr #9
   2bda4:	add	r4, sp, #6080	; 0x17c0
   2bda8:	add	r4, r4, #40	; 0x28
   2bdac:	str	ip, [r4]
   2bdb0:	ldrd	sl, [r4]
   2bdb4:	eor	sl, sl, r2
   2bdb8:	eor	fp, fp, r3
   2bdbc:	adds	r8, r0, sl
   2bdc0:	adc	r9, r1, fp
   2bdc4:	ldrd	sl, [sp, #64]	; 0x40
   2bdc8:	strd	r8, [sp, #64]	; 0x40
   2bdcc:	adds	sl, sl, r8
   2bdd0:	adc	fp, fp, r9
   2bdd4:	strd	sl, [sp, #24]
   2bdd8:	ldrd	r4, [sp, #136]	; 0x88
   2bddc:	lsr	r3, r4, #28
   2bde0:	orr	r1, r3, r5, lsl #4
   2bde4:	add	r3, sp, #6080	; 0x17c0
   2bde8:	add	r3, r3, #48	; 0x30
   2bdec:	str	r1, [r3]
   2bdf0:	lsr	r3, r5, #28
   2bdf4:	orr	r1, r3, r4, lsl #4
   2bdf8:	add	r3, sp, #6080	; 0x17c0
   2bdfc:	add	r3, r3, #52	; 0x34
   2be00:	str	r1, [r3]
   2be04:	lsl	r3, r5, #30
   2be08:	orr	r1, r3, r4, lsr #2
   2be0c:	add	r3, sp, #6080	; 0x17c0
   2be10:	add	r3, r3, #60	; 0x3c
   2be14:	str	r1, [r3]
   2be18:	lsl	r3, r4, #30
   2be1c:	orr	r1, r3, r5, lsr #2
   2be20:	add	r3, sp, #6080	; 0x17c0
   2be24:	add	r3, r3, #56	; 0x38
   2be28:	str	r1, [r3]
   2be2c:	add	r3, sp, #6080	; 0x17c0
   2be30:	add	r3, r3, #48	; 0x30
   2be34:	ldrd	sl, [r3]
   2be38:	add	r3, sp, #6080	; 0x17c0
   2be3c:	add	r3, r3, #56	; 0x38
   2be40:	ldrd	r2, [r3]
   2be44:	eor	sl, sl, r2
   2be48:	eor	fp, fp, r3
   2be4c:	mov	r2, sl
   2be50:	mov	r3, fp
   2be54:	lsl	r1, r5, #25
   2be58:	orr	r1, r1, r4, lsr #7
   2be5c:	add	r0, sp, #6144	; 0x1800
   2be60:	add	r0, r0, #4
   2be64:	str	r1, [r0]
   2be68:	lsl	r1, r4, #25
   2be6c:	orr	r1, r1, r5, lsr #7
   2be70:	add	r0, sp, #6144	; 0x1800
   2be74:	str	r1, [r0]
   2be78:	ldrd	sl, [r0]
   2be7c:	eor	sl, sl, r2
   2be80:	eor	fp, fp, r3
   2be84:	ldrd	r8, [sp, #40]	; 0x28
   2be88:	orr	r2, r8, r4
   2be8c:	orr	r3, r9, r5
   2be90:	mov	r0, r2
   2be94:	mov	r1, r3
   2be98:	ldrd	r2, [sp]
   2be9c:	and	r2, r2, r0
   2bea0:	and	r3, r3, r1
   2bea4:	mov	r0, r2
   2bea8:	mov	r1, r3
   2beac:	and	r8, r8, r4
   2beb0:	and	r9, r9, r5
   2beb4:	orr	r8, r8, r0
   2beb8:	orr	r9, r9, r1
   2bebc:	adds	r0, r8, sl
   2bec0:	adc	r1, r9, fp
   2bec4:	ldrd	r2, [sp, #64]	; 0x40
   2bec8:	adds	r2, r2, r0
   2becc:	adc	r3, r3, r1
   2bed0:	mov	r8, r2
   2bed4:	mov	r9, r3
   2bed8:	ldrd	r0, [sp, #88]	; 0x58
   2bedc:	lsr	r3, r0, #1
   2bee0:	orr	ip, r3, r1, lsl #31
   2bee4:	add	r3, sp, #6144	; 0x1800
   2bee8:	add	r3, r3, #8
   2beec:	str	ip, [r3]
   2bef0:	lsr	r3, r1, #1
   2bef4:	orr	ip, r3, r0, lsl #31
   2bef8:	add	r3, sp, #6144	; 0x1800
   2befc:	add	r3, r3, #12
   2bf00:	str	ip, [r3]
   2bf04:	lsr	r3, r0, #8
   2bf08:	orr	ip, r3, r1, lsl #24
   2bf0c:	add	r3, sp, #6144	; 0x1800
   2bf10:	add	r3, r3, #16
   2bf14:	str	ip, [r3]
   2bf18:	lsr	r3, r1, #8
   2bf1c:	orr	ip, r3, r0, lsl #24
   2bf20:	add	r3, sp, #6144	; 0x1800
   2bf24:	add	r3, r3, #20
   2bf28:	str	ip, [r3]
   2bf2c:	add	r3, sp, #6144	; 0x1800
   2bf30:	add	r3, r3, #8
   2bf34:	ldrd	sl, [r3]
   2bf38:	add	r3, sp, #6144	; 0x1800
   2bf3c:	add	r3, r3, #16
   2bf40:	ldrd	r2, [r3]
   2bf44:	eor	sl, sl, r2
   2bf48:	eor	fp, fp, r3
   2bf4c:	mov	r2, sl
   2bf50:	mov	r3, fp
   2bf54:	lsr	ip, r0, #7
   2bf58:	orr	ip, ip, r1, lsl #25
   2bf5c:	str	ip, [sp, #1032]	; 0x408
   2bf60:	lsr	r1, r1, #7
   2bf64:	str	r1, [sp, #1036]	; 0x40c
   2bf68:	add	r1, sp, #1024	; 0x400
   2bf6c:	add	r1, r1, #8
   2bf70:	ldrd	sl, [r1]
   2bf74:	eor	sl, sl, r2
   2bf78:	eor	fp, fp, r3
   2bf7c:	ldrd	r0, [sp, #80]	; 0x50
   2bf80:	adds	r0, r0, sl
   2bf84:	adc	r1, r1, fp
   2bf88:	mov	r2, r0
   2bf8c:	mov	r3, r1
   2bf90:	ldrd	r0, [sp, #128]	; 0x80
   2bf94:	adds	r0, r0, r2
   2bf98:	adc	r1, r1, r3
   2bf9c:	mov	r2, r0
   2bfa0:	mov	r3, r1
   2bfa4:	ldrd	sl, [sp, #56]	; 0x38
   2bfa8:	lsr	r1, sl, #19
   2bfac:	orr	r1, r1, fp, lsl #13
   2bfb0:	add	r0, sp, #6144	; 0x1800
   2bfb4:	add	r0, r0, #24
   2bfb8:	str	r1, [r0]
   2bfbc:	lsr	r1, fp, #19
   2bfc0:	orr	r1, r1, sl, lsl #13
   2bfc4:	add	r0, sp, #6144	; 0x1800
   2bfc8:	add	r0, r0, #28
   2bfcc:	str	r1, [r0]
   2bfd0:	lsl	r1, fp, #3
   2bfd4:	orr	r1, r1, sl, lsr #29
   2bfd8:	add	r0, sp, #6144	; 0x1800
   2bfdc:	add	r0, r0, #36	; 0x24
   2bfe0:	str	r1, [r0]
   2bfe4:	lsl	r1, sl, #3
   2bfe8:	orr	r1, r1, fp, lsr #29
   2bfec:	add	r0, sp, #6144	; 0x1800
   2bff0:	add	r0, r0, #32
   2bff4:	str	r1, [r0]
   2bff8:	add	r1, sp, #6144	; 0x1800
   2bffc:	add	r1, r1, #24
   2c000:	ldrd	sl, [r1]
   2c004:	ldrd	r0, [r0]
   2c008:	eor	sl, sl, r0
   2c00c:	eor	fp, fp, r1
   2c010:	mov	r0, sl
   2c014:	mov	r1, fp
   2c018:	ldrd	sl, [sp, #56]	; 0x38
   2c01c:	lsr	ip, sl, #6
   2c020:	orr	ip, ip, fp, lsl #26
   2c024:	str	ip, [sp, #1040]	; 0x410
   2c028:	ldr	ip, [sp, #60]	; 0x3c
   2c02c:	lsr	ip, ip, #6
   2c030:	str	ip, [sp, #1044]	; 0x414
   2c034:	add	ip, sp, #1040	; 0x410
   2c038:	ldrd	sl, [ip]
   2c03c:	eor	sl, sl, r0
   2c040:	eor	fp, fp, r1
   2c044:	adds	sl, r2, sl
   2c048:	adc	fp, r3, fp
   2c04c:	add	r3, sp, #7104	; 0x1bc0
   2c050:	add	r3, r3, #48	; 0x30
   2c054:	strd	sl, [r3]
   2c058:	ldrd	r0, [sp, #72]	; 0x48
   2c05c:	ldrd	r2, [sp, #16]
   2c060:	eor	r2, r2, r0
   2c064:	eor	r3, r3, r1
   2c068:	mov	r0, r2
   2c06c:	mov	r1, r3
   2c070:	ldrd	r2, [sp, #24]
   2c074:	and	r2, r2, r0
   2c078:	and	r3, r3, r1
   2c07c:	mov	r0, r2
   2c080:	mov	r1, r3
   2c084:	ldrd	r2, [sp, #16]
   2c088:	eor	r2, r2, r0
   2c08c:	eor	r3, r3, r1
   2c090:	mov	r0, r2
   2c094:	mov	r1, r3
   2c098:	add	r3, pc, #904	; 0x388
   2c09c:	ldrd	r2, [r3]
   2c0a0:	strd	sl, [sp, #176]	; 0xb0
   2c0a4:	adds	sl, sl, r2
   2c0a8:	adc	fp, fp, r3
   2c0ac:	adds	r6, r6, sl
   2c0b0:	adc	r7, r7, fp
   2c0b4:	adds	r0, r0, r6
   2c0b8:	adc	r1, r1, r7
   2c0bc:	ldrd	sl, [sp, #24]
   2c0c0:	lsr	r3, sl, #14
   2c0c4:	orr	ip, r3, fp, lsl #18
   2c0c8:	add	r3, sp, #6144	; 0x1800
   2c0cc:	add	r3, r3, #40	; 0x28
   2c0d0:	str	ip, [r3]
   2c0d4:	lsr	r3, fp, #14
   2c0d8:	orr	ip, r3, sl, lsl #18
   2c0dc:	add	r3, sp, #6144	; 0x1800
   2c0e0:	add	r3, r3, #44	; 0x2c
   2c0e4:	str	ip, [r3]
   2c0e8:	lsr	r3, sl, #18
   2c0ec:	orr	ip, r3, fp, lsl #14
   2c0f0:	add	r3, sp, #6144	; 0x1800
   2c0f4:	add	r3, r3, #48	; 0x30
   2c0f8:	str	ip, [r3]
   2c0fc:	lsr	r3, fp, #18
   2c100:	orr	ip, r3, sl, lsl #14
   2c104:	add	r3, sp, #6144	; 0x1800
   2c108:	add	r3, r3, #52	; 0x34
   2c10c:	str	ip, [r3]
   2c110:	add	r3, sp, #6144	; 0x1800
   2c114:	add	r3, r3, #40	; 0x28
   2c118:	ldrd	r2, [r3]
   2c11c:	add	ip, sp, #6144	; 0x1800
   2c120:	add	ip, ip, #48	; 0x30
   2c124:	ldrd	r6, [ip]
   2c128:	eor	r2, r2, r6
   2c12c:	eor	r3, r3, r7
   2c130:	lsl	ip, fp, #23
   2c134:	mov	r6, sl
   2c138:	orr	ip, ip, sl, lsr #9
   2c13c:	add	sl, sp, #6144	; 0x1800
   2c140:	add	sl, sl, #60	; 0x3c
   2c144:	str	ip, [sl]
   2c148:	lsl	ip, r6, #23
   2c14c:	orr	ip, ip, fp, lsr #9
   2c150:	add	r6, sp, #6144	; 0x1800
   2c154:	add	r6, r6, #56	; 0x38
   2c158:	str	ip, [r6]
   2c15c:	ldrd	r6, [r6]
   2c160:	eor	r6, r6, r2
   2c164:	eor	r7, r7, r3
   2c168:	adds	r6, r0, r6
   2c16c:	adc	r7, r1, r7
   2c170:	mov	sl, r6
   2c174:	mov	fp, r7
   2c178:	ldrd	r2, [sp]
   2c17c:	adds	r2, r2, r6
   2c180:	adc	r3, r3, r7
   2c184:	mov	r6, r2
   2c188:	mov	r7, r3
   2c18c:	lsr	r3, r8, #28
   2c190:	orr	r1, r3, r9, lsl #4
   2c194:	add	r3, sp, #6208	; 0x1840
   2c198:	str	r1, [r3]
   2c19c:	lsr	r3, r9, #28
   2c1a0:	orr	r1, r3, r8, lsl #4
   2c1a4:	add	r3, sp, #6208	; 0x1840
   2c1a8:	add	r3, r3, #4
   2c1ac:	str	r1, [r3]
   2c1b0:	lsl	r3, r9, #30
   2c1b4:	orr	r1, r3, r8, lsr #2
   2c1b8:	add	r3, sp, #6208	; 0x1840
   2c1bc:	add	r3, r3, #12
   2c1c0:	str	r1, [r3]
   2c1c4:	lsl	r3, r8, #30
   2c1c8:	orr	r1, r3, r9, lsr #2
   2c1cc:	add	r3, sp, #6208	; 0x1840
   2c1d0:	add	r3, r3, #8
   2c1d4:	str	r1, [r3]
   2c1d8:	add	r3, sp, #6208	; 0x1840
   2c1dc:	ldrd	r2, [r3]
   2c1e0:	add	r1, sp, #6208	; 0x1840
   2c1e4:	add	r1, r1, #8
   2c1e8:	ldrd	r0, [r1]
   2c1ec:	eor	r2, r2, r0
   2c1f0:	eor	r3, r3, r1
   2c1f4:	lsl	r1, r9, #25
   2c1f8:	orr	r1, r1, r8, lsr #7
   2c1fc:	add	r0, sp, #6208	; 0x1840
   2c200:	add	r0, r0, #20
   2c204:	str	r1, [r0]
   2c208:	lsl	r1, r8, #25
   2c20c:	orr	r1, r1, r9, lsr #7
   2c210:	add	r0, sp, #6208	; 0x1840
   2c214:	add	r0, r0, #16
   2c218:	str	r1, [r0]
   2c21c:	ldrd	r0, [r0]
   2c220:	eor	r0, r0, r2
   2c224:	eor	r1, r1, r3
   2c228:	mov	r2, r0
   2c22c:	mov	r3, r1
   2c230:	strd	r8, [sp, #80]	; 0x50
   2c234:	orr	r0, r4, r8
   2c238:	orr	r1, r5, r9
   2c23c:	ldrd	r8, [sp, #40]	; 0x28
   2c240:	and	r8, r8, r0
   2c244:	and	r9, r9, r1
   2c248:	mov	r0, r8
   2c24c:	mov	r1, r9
   2c250:	ldrd	r8, [sp, #80]	; 0x50
   2c254:	and	r4, r4, r8
   2c258:	and	r5, r5, r9
   2c25c:	orr	r0, r0, r4
   2c260:	orr	r1, r1, r5
   2c264:	adds	r0, r0, r2
   2c268:	adc	r1, r1, r3
   2c26c:	adds	r2, sl, r0
   2c270:	adc	r3, fp, r1
   2c274:	strd	r2, [sp]
   2c278:	ldrd	r0, [sp, #32]
   2c27c:	lsr	r3, r0, #1
   2c280:	orr	ip, r3, r1, lsl #31
   2c284:	add	r3, sp, #6208	; 0x1840
   2c288:	add	r3, r3, #24
   2c28c:	str	ip, [r3]
   2c290:	lsr	r3, r1, #1
   2c294:	orr	ip, r3, r0, lsl #31
   2c298:	add	r3, sp, #6208	; 0x1840
   2c29c:	add	r3, r3, #28
   2c2a0:	str	ip, [r3]
   2c2a4:	lsr	r3, r0, #8
   2c2a8:	orr	ip, r3, r1, lsl #24
   2c2ac:	add	r3, sp, #6208	; 0x1840
   2c2b0:	add	r3, r3, #32
   2c2b4:	str	ip, [r3]
   2c2b8:	lsr	r3, r1, #8
   2c2bc:	orr	ip, r3, r0, lsl #24
   2c2c0:	add	r3, sp, #6208	; 0x1840
   2c2c4:	add	r3, r3, #36	; 0x24
   2c2c8:	str	ip, [r3]
   2c2cc:	add	r3, sp, #6208	; 0x1840
   2c2d0:	add	r3, r3, #24
   2c2d4:	ldrd	r2, [r3]
   2c2d8:	add	ip, sp, #6208	; 0x1840
   2c2dc:	add	ip, ip, #32
   2c2e0:	ldrd	sl, [ip]
   2c2e4:	eor	r2, r2, sl
   2c2e8:	eor	r3, r3, fp
   2c2ec:	lsr	ip, r0, #7
   2c2f0:	orr	ip, ip, r1, lsl #25
   2c2f4:	str	ip, [sp, #1048]	; 0x418
   2c2f8:	lsr	r1, r1, #7
   2c2fc:	str	r1, [sp, #1052]	; 0x41c
   2c300:	add	r1, sp, #1040	; 0x410
   2c304:	add	r1, r1, #8
   2c308:	ldrd	sl, [r1]
   2c30c:	eor	sl, sl, r2
   2c310:	eor	fp, fp, r3
   2c314:	ldrd	r0, [sp, #88]	; 0x58
   2c318:	adds	r0, r0, sl
   2c31c:	adc	r1, r1, fp
   2c320:	ldrd	r4, [sp, #168]	; 0xa8
   2c324:	adds	r4, r4, r0
   2c328:	adc	r5, r5, r1
   2c32c:	mov	r2, r4
   2c330:	mov	r3, r5
   2c334:	ldrd	r8, [sp, #160]	; 0xa0
   2c338:	lsr	r1, r8, #19
   2c33c:	orr	r1, r1, r9, lsl #13
   2c340:	add	r0, sp, #6208	; 0x1840
   2c344:	add	r0, r0, #40	; 0x28
   2c348:	str	r1, [r0]
   2c34c:	lsr	r1, r9, #19
   2c350:	orr	r1, r1, r8, lsl #13
   2c354:	add	r0, sp, #6208	; 0x1840
   2c358:	add	r0, r0, #44	; 0x2c
   2c35c:	str	r1, [r0]
   2c360:	lsl	r1, r9, #3
   2c364:	orr	r1, r1, r8, lsr #29
   2c368:	add	r0, sp, #6208	; 0x1840
   2c36c:	add	r0, r0, #52	; 0x34
   2c370:	str	r1, [r0]
   2c374:	lsl	r1, r8, #3
   2c378:	orr	r1, r1, r9, lsr #29
   2c37c:	add	r0, sp, #6208	; 0x1840
   2c380:	add	r0, r0, #48	; 0x30
   2c384:	str	r1, [r0]
   2c388:	add	r1, sp, #6208	; 0x1840
   2c38c:	add	r1, r1, #40	; 0x28
   2c390:	ldrd	sl, [r1]
   2c394:	ldrd	r4, [r0]
   2c398:	eor	sl, sl, r4
   2c39c:	eor	fp, fp, r5
   2c3a0:	mov	r0, sl
   2c3a4:	mov	r1, fp
   2c3a8:	lsr	ip, r8, #6
   2c3ac:	orr	ip, ip, r9, lsl #26
   2c3b0:	str	ip, [sp, #1056]	; 0x420
   2c3b4:	lsr	ip, r9, #6
   2c3b8:	str	ip, [sp, #1060]	; 0x424
   2c3bc:	add	ip, sp, #1056	; 0x420
   2c3c0:	ldrd	sl, [ip]
   2c3c4:	eor	sl, sl, r0
   2c3c8:	eor	fp, fp, r1
   2c3cc:	adds	sl, r2, sl
   2c3d0:	adc	fp, r3, fp
   2c3d4:	mov	r2, sl
   2c3d8:	mov	r3, fp
   2c3dc:	add	r1, sp, #7104	; 0x1bc0
   2c3e0:	add	r1, r1, #56	; 0x38
   2c3e4:	strd	r2, [r1]
   2c3e8:	ldrd	r4, [sp, #72]	; 0x48
   2c3ec:	ldrd	r2, [sp, #24]
   2c3f0:	eor	r2, r2, r4
   2c3f4:	eor	r3, r3, r5
   2c3f8:	mov	r0, r2
   2c3fc:	mov	r1, r3
   2c400:	and	r0, r0, r6
   2c404:	and	r1, r1, r7
   2c408:	mov	r2, r4
   2c40c:	mov	r3, r5
   2c410:	eor	r2, r2, r0
   2c414:	eor	r3, r3, r1
   2c418:	mov	r0, r2
   2c41c:	mov	r1, r3
   2c420:	b	2c438 <__assert_fail@plt+0x1b14c>
   2c424:	nop			; (mov r0, r0)
   2c428:	andsvc	r6, r7, #744	; 0x2e8
   2c42c:	ldrbteq	r6, [r0], sl, lsr #15
   2c430:	sbcge	r9, r8, #10878976	; 0xa60000
   2c434:	beq	190bb50 <optarg@@GLIBC_2.4+0x18c19a8>
   2c438:	sub	r3, pc, #16
   2c43c:	ldrd	r2, [r3]
   2c440:	strd	sl, [sp, #88]	; 0x58
   2c444:	adds	sl, sl, r2
   2c448:	adc	fp, fp, r3
   2c44c:	ldrd	r8, [sp, #16]
   2c450:	adds	r8, r8, sl
   2c454:	adc	r9, r9, fp
   2c458:	adds	r0, r0, r8
   2c45c:	adc	r1, r1, r9
   2c460:	lsr	r3, r6, #14
   2c464:	orr	ip, r3, r7, lsl #18
   2c468:	add	r3, sp, #6208	; 0x1840
   2c46c:	add	r3, r3, #56	; 0x38
   2c470:	str	ip, [r3]
   2c474:	lsr	r3, r7, #14
   2c478:	orr	ip, r3, r6, lsl #18
   2c47c:	add	r3, sp, #6208	; 0x1840
   2c480:	add	r3, r3, #60	; 0x3c
   2c484:	str	ip, [r3]
   2c488:	lsr	r3, r6, #18
   2c48c:	orr	ip, r3, r7, lsl #14
   2c490:	add	r3, sp, #6272	; 0x1880
   2c494:	str	ip, [r3]
   2c498:	lsr	r3, r7, #18
   2c49c:	orr	ip, r3, r6, lsl #14
   2c4a0:	add	r3, sp, #6272	; 0x1880
   2c4a4:	add	r3, r3, #4
   2c4a8:	str	ip, [r3]
   2c4ac:	add	r3, sp, #6208	; 0x1840
   2c4b0:	add	r3, r3, #56	; 0x38
   2c4b4:	ldrd	r2, [r3]
   2c4b8:	add	ip, sp, #6272	; 0x1880
   2c4bc:	ldrd	r8, [ip]
   2c4c0:	eor	r2, r2, r8
   2c4c4:	eor	r3, r3, r9
   2c4c8:	lsl	ip, r7, #23
   2c4cc:	orr	ip, ip, r6, lsr #9
   2c4d0:	add	r4, sp, #6272	; 0x1880
   2c4d4:	add	r4, r4, #12
   2c4d8:	str	ip, [r4]
   2c4dc:	lsl	ip, r6, #23
   2c4e0:	orr	ip, ip, r7, lsr #9
   2c4e4:	add	r4, sp, #6272	; 0x1880
   2c4e8:	add	r4, r4, #8
   2c4ec:	str	ip, [r4]
   2c4f0:	ldrd	r8, [r4]
   2c4f4:	eor	r8, r8, r2
   2c4f8:	eor	r9, r9, r3
   2c4fc:	adds	r8, r0, r8
   2c500:	adc	r9, r1, r9
   2c504:	mov	r4, r8
   2c508:	mov	r5, r9
   2c50c:	ldrd	r8, [sp, #40]	; 0x28
   2c510:	adds	r8, r8, r4
   2c514:	adc	r9, r9, r5
   2c518:	strd	r8, [sp, #16]
   2c51c:	ldrd	sl, [sp]
   2c520:	lsr	r3, sl, #28
   2c524:	orr	r1, r3, fp, lsl #4
   2c528:	add	r3, sp, #6272	; 0x1880
   2c52c:	add	r3, r3, #16
   2c530:	str	r1, [r3]
   2c534:	lsr	r3, fp, #28
   2c538:	orr	r1, r3, sl, lsl #4
   2c53c:	add	r3, sp, #6272	; 0x1880
   2c540:	add	r3, r3, #20
   2c544:	str	r1, [r3]
   2c548:	lsl	r3, fp, #30
   2c54c:	orr	r1, r3, sl, lsr #2
   2c550:	add	r3, sp, #6272	; 0x1880
   2c554:	add	r3, r3, #28
   2c558:	str	r1, [r3]
   2c55c:	lsl	r3, sl, #30
   2c560:	orr	r1, r3, fp, lsr #2
   2c564:	add	r3, sp, #6272	; 0x1880
   2c568:	add	r3, r3, #24
   2c56c:	str	r1, [r3]
   2c570:	add	r3, sp, #6272	; 0x1880
   2c574:	add	r3, r3, #16
   2c578:	ldrd	r2, [r3]
   2c57c:	add	r1, sp, #6272	; 0x1880
   2c580:	add	r1, r1, #24
   2c584:	ldrd	r8, [r1]
   2c588:	eor	r2, r2, r8
   2c58c:	eor	r3, r3, r9
   2c590:	lsl	r1, fp, #25
   2c594:	orr	r1, r1, sl, lsr #7
   2c598:	add	r0, sp, #6272	; 0x1880
   2c59c:	add	r0, r0, #36	; 0x24
   2c5a0:	str	r1, [r0]
   2c5a4:	lsl	r1, sl, #25
   2c5a8:	orr	r1, r1, fp, lsr #7
   2c5ac:	add	r0, sp, #6272	; 0x1880
   2c5b0:	add	r0, r0, #32
   2c5b4:	str	r1, [r0]
   2c5b8:	ldrd	r8, [r0]
   2c5bc:	eor	r8, r8, r2
   2c5c0:	eor	r9, r9, r3
   2c5c4:	mov	sl, r8
   2c5c8:	mov	fp, r9
   2c5cc:	ldrd	r8, [sp, #80]	; 0x50
   2c5d0:	ldrd	r0, [sp]
   2c5d4:	orr	r0, r0, r8
   2c5d8:	orr	r1, r1, r9
   2c5dc:	ldrd	r2, [sp, #136]	; 0x88
   2c5e0:	and	r2, r2, r0
   2c5e4:	and	r3, r3, r1
   2c5e8:	mov	r0, r2
   2c5ec:	mov	r1, r3
   2c5f0:	mov	r2, r8
   2c5f4:	mov	r3, r9
   2c5f8:	ldrd	r8, [sp]
   2c5fc:	and	r8, r8, r2
   2c600:	and	r9, r9, r3
   2c604:	orr	r2, r8, r0
   2c608:	orr	r3, r9, r1
   2c60c:	adds	r0, r2, sl
   2c610:	adc	r1, r3, fp
   2c614:	adds	r2, r4, r0
   2c618:	adc	r3, r5, r1
   2c61c:	strd	r2, [sp, #40]	; 0x28
   2c620:	ldrd	r0, [sp, #96]	; 0x60
   2c624:	lsr	r3, r0, #1
   2c628:	orr	ip, r3, r1, lsl #31
   2c62c:	add	r3, sp, #6272	; 0x1880
   2c630:	add	r3, r3, #40	; 0x28
   2c634:	str	ip, [r3]
   2c638:	lsr	r3, r1, #1
   2c63c:	orr	ip, r3, r0, lsl #31
   2c640:	add	r3, sp, #6272	; 0x1880
   2c644:	add	r3, r3, #44	; 0x2c
   2c648:	str	ip, [r3]
   2c64c:	lsr	r3, r0, #8
   2c650:	orr	ip, r3, r1, lsl #24
   2c654:	add	r3, sp, #6272	; 0x1880
   2c658:	add	r3, r3, #48	; 0x30
   2c65c:	str	ip, [r3]
   2c660:	lsr	r3, r1, #8
   2c664:	orr	ip, r3, r0, lsl #24
   2c668:	add	r3, sp, #6272	; 0x1880
   2c66c:	add	r3, r3, #52	; 0x34
   2c670:	str	ip, [r3]
   2c674:	add	r3, sp, #6272	; 0x1880
   2c678:	add	r3, r3, #40	; 0x28
   2c67c:	ldrd	r8, [r3]
   2c680:	add	r3, sp, #6272	; 0x1880
   2c684:	add	r3, r3, #48	; 0x30
   2c688:	ldrd	r2, [r3]
   2c68c:	eor	r8, r8, r2
   2c690:	eor	r9, r9, r3
   2c694:	mov	r2, r8
   2c698:	mov	r3, r9
   2c69c:	lsr	ip, r0, #7
   2c6a0:	orr	ip, ip, r1, lsl #25
   2c6a4:	str	ip, [sp, #1064]	; 0x428
   2c6a8:	lsr	r1, r1, #7
   2c6ac:	str	r1, [sp, #1068]	; 0x42c
   2c6b0:	add	r1, sp, #1056	; 0x420
   2c6b4:	add	r1, r1, #8
   2c6b8:	ldrd	r8, [r1]
   2c6bc:	eor	r8, r8, r2
   2c6c0:	eor	r9, r9, r3
   2c6c4:	ldrd	r0, [sp, #32]
   2c6c8:	adds	r0, r0, r8
   2c6cc:	adc	r1, r1, r9
   2c6d0:	ldrd	r4, [sp, #144]	; 0x90
   2c6d4:	adds	r4, r4, r0
   2c6d8:	adc	r5, r5, r1
   2c6dc:	mov	r2, r4
   2c6e0:	mov	r3, r5
   2c6e4:	ldrd	sl, [sp, #176]	; 0xb0
   2c6e8:	lsr	r1, sl, #19
   2c6ec:	orr	r1, r1, fp, lsl #13
   2c6f0:	add	r0, sp, #6272	; 0x1880
   2c6f4:	add	r0, r0, #56	; 0x38
   2c6f8:	str	r1, [r0]
   2c6fc:	lsr	r1, fp, #19
   2c700:	orr	r1, r1, sl, lsl #13
   2c704:	add	r0, sp, #6272	; 0x1880
   2c708:	add	r0, r0, #60	; 0x3c
   2c70c:	str	r1, [r0]
   2c710:	lsl	r1, fp, #3
   2c714:	orr	r1, r1, sl, lsr #29
   2c718:	add	r0, sp, #6336	; 0x18c0
   2c71c:	add	r0, r0, #4
   2c720:	str	r1, [r0]
   2c724:	lsl	r1, sl, #3
   2c728:	orr	r1, r1, fp, lsr #29
   2c72c:	add	r0, sp, #6336	; 0x18c0
   2c730:	str	r1, [r0]
   2c734:	add	r1, sp, #6272	; 0x1880
   2c738:	add	r1, r1, #56	; 0x38
   2c73c:	ldrd	r8, [r1]
   2c740:	ldrd	r4, [r0]
   2c744:	eor	r8, r8, r4
   2c748:	eor	r9, r9, r5
   2c74c:	mov	r0, r8
   2c750:	mov	r1, r9
   2c754:	lsr	ip, sl, #6
   2c758:	orr	ip, ip, fp, lsl #26
   2c75c:	str	ip, [sp, #1072]	; 0x430
   2c760:	lsr	ip, fp, #6
   2c764:	str	ip, [sp, #1076]	; 0x434
   2c768:	add	ip, sp, #1072	; 0x430
   2c76c:	ldrd	r8, [ip]
   2c770:	eor	r8, r8, r0
   2c774:	eor	r9, r9, r1
   2c778:	adds	sl, r2, r8
   2c77c:	adc	fp, r3, r9
   2c780:	add	r3, sp, #7168	; 0x1c00
   2c784:	strd	sl, [r3]
   2c788:	ldrd	r4, [sp, #24]
   2c78c:	mov	r0, r4
   2c790:	mov	r1, r5
   2c794:	eor	r0, r0, r6
   2c798:	eor	r1, r1, r7
   2c79c:	ldrd	r8, [sp, #16]
   2c7a0:	mov	r2, r8
   2c7a4:	mov	r3, r9
   2c7a8:	and	r2, r2, r0
   2c7ac:	and	r3, r3, r1
   2c7b0:	mov	r0, r2
   2c7b4:	mov	r1, r3
   2c7b8:	mov	r2, r4
   2c7bc:	mov	r3, r5
   2c7c0:	eor	r2, r2, r0
   2c7c4:	eor	r3, r3, r1
   2c7c8:	mov	r0, r2
   2c7cc:	mov	r1, r3
   2c7d0:	add	r3, pc, #888	; 0x378
   2c7d4:	ldrd	r2, [r3]
   2c7d8:	strd	sl, [sp, #64]	; 0x40
   2c7dc:	adds	sl, sl, r2
   2c7e0:	adc	fp, fp, r3
   2c7e4:	ldrd	r4, [sp, #72]	; 0x48
   2c7e8:	adds	r4, r4, sl
   2c7ec:	adc	r5, r5, fp
   2c7f0:	adds	r0, r0, r4
   2c7f4:	adc	r1, r1, r5
   2c7f8:	lsr	r3, r8, #14
   2c7fc:	mov	r4, r8
   2c800:	mov	r5, r9
   2c804:	orr	ip, r3, r9, lsl #18
   2c808:	add	r3, sp, #6336	; 0x18c0
   2c80c:	add	r3, r3, #8
   2c810:	str	ip, [r3]
   2c814:	lsr	r3, r9, #14
   2c818:	orr	ip, r3, r8, lsl #18
   2c81c:	add	r3, sp, #6336	; 0x18c0
   2c820:	add	r3, r3, #12
   2c824:	str	ip, [r3]
   2c828:	lsr	r3, r8, #18
   2c82c:	orr	ip, r3, r9, lsl #14
   2c830:	add	r3, sp, #6336	; 0x18c0
   2c834:	add	r3, r3, #16
   2c838:	str	ip, [r3]
   2c83c:	lsr	r3, r9, #18
   2c840:	orr	ip, r3, r8, lsl #14
   2c844:	add	r3, sp, #6336	; 0x18c0
   2c848:	add	r3, r3, #20
   2c84c:	str	ip, [r3]
   2c850:	add	r3, sp, #6336	; 0x18c0
   2c854:	add	r3, r3, #8
   2c858:	ldrd	r8, [r3]
   2c85c:	add	r3, sp, #6336	; 0x18c0
   2c860:	add	r3, r3, #16
   2c864:	ldrd	r2, [r3]
   2c868:	eor	r8, r8, r2
   2c86c:	eor	r9, r9, r3
   2c870:	mov	r2, r8
   2c874:	mov	r3, r9
   2c878:	lsl	ip, r5, #23
   2c87c:	orr	ip, ip, r4, lsr #9
   2c880:	add	r8, sp, #6336	; 0x18c0
   2c884:	add	r8, r8, #28
   2c888:	str	ip, [r8]
   2c88c:	lsl	ip, r4, #23
   2c890:	orr	ip, ip, r5, lsr #9
   2c894:	add	r4, sp, #6336	; 0x18c0
   2c898:	add	r4, r4, #24
   2c89c:	str	ip, [r4]
   2c8a0:	ldrd	r8, [r4]
   2c8a4:	eor	r8, r8, r2
   2c8a8:	eor	r9, r9, r3
   2c8ac:	adds	r4, r0, r8
   2c8b0:	adc	r5, r1, r9
   2c8b4:	ldrd	r2, [sp, #136]	; 0x88
   2c8b8:	strd	r4, [sp, #32]
   2c8bc:	adds	r2, r2, r4
   2c8c0:	adc	r3, r3, r5
   2c8c4:	mov	r4, r2
   2c8c8:	mov	r5, r3
   2c8cc:	ldrd	sl, [sp, #40]	; 0x28
   2c8d0:	lsr	r3, sl, #28
   2c8d4:	orr	ip, r3, fp, lsl #4
   2c8d8:	add	r3, sp, #6336	; 0x18c0
   2c8dc:	add	r3, r3, #32
   2c8e0:	str	ip, [r3]
   2c8e4:	lsr	r3, fp, #28
   2c8e8:	orr	ip, r3, sl, lsl #4
   2c8ec:	add	r3, sp, #6336	; 0x18c0
   2c8f0:	add	r3, r3, #36	; 0x24
   2c8f4:	str	ip, [r3]
   2c8f8:	lsl	r3, fp, #30
   2c8fc:	orr	ip, r3, sl, lsr #2
   2c900:	add	r3, sp, #6336	; 0x18c0
   2c904:	add	r3, r3, #44	; 0x2c
   2c908:	str	ip, [r3]
   2c90c:	lsl	r3, sl, #30
   2c910:	orr	ip, r3, fp, lsr #2
   2c914:	add	r3, sp, #6336	; 0x18c0
   2c918:	add	r3, r3, #40	; 0x28
   2c91c:	str	ip, [r3]
   2c920:	add	r3, sp, #6336	; 0x18c0
   2c924:	add	r3, r3, #32
   2c928:	ldrd	r8, [r3]
   2c92c:	add	r3, sp, #6336	; 0x18c0
   2c930:	add	r3, r3, #40	; 0x28
   2c934:	ldrd	r2, [r3]
   2c938:	eor	r8, r8, r2
   2c93c:	eor	r9, r9, r3
   2c940:	mov	r2, r8
   2c944:	mov	r3, r9
   2c948:	lsl	r1, fp, #25
   2c94c:	orr	r1, r1, sl, lsr #7
   2c950:	add	r0, sp, #6336	; 0x18c0
   2c954:	add	r0, r0, #52	; 0x34
   2c958:	str	r1, [r0]
   2c95c:	lsl	r1, sl, #25
   2c960:	mov	ip, fp
   2c964:	orr	r1, r1, fp, lsr #7
   2c968:	add	r0, sp, #6336	; 0x18c0
   2c96c:	add	r0, r0, #48	; 0x30
   2c970:	str	r1, [r0]
   2c974:	ldrd	r8, [r0]
   2c978:	eor	r8, r8, r2
   2c97c:	eor	r9, r9, r3
   2c980:	strd	r8, [sp, #72]	; 0x48
   2c984:	mov	r8, sl
   2c988:	ldrd	sl, [sp]
   2c98c:	orr	sl, sl, r8
   2c990:	orr	fp, fp, ip
   2c994:	ldrd	r2, [sp, #80]	; 0x50
   2c998:	and	r2, r2, sl
   2c99c:	and	r3, r3, fp
   2c9a0:	mov	r0, r2
   2c9a4:	mov	r1, r3
   2c9a8:	mov	r2, r8
   2c9ac:	ldrd	r8, [sp]
   2c9b0:	and	r8, r8, r2
   2c9b4:	and	r9, r9, ip
   2c9b8:	orr	r2, r8, r0
   2c9bc:	orr	r3, r9, r1
   2c9c0:	ldrd	sl, [sp, #72]	; 0x48
   2c9c4:	adds	sl, sl, r2
   2c9c8:	adc	fp, fp, r3
   2c9cc:	ldrd	r2, [sp, #32]
   2c9d0:	adds	r2, r2, sl
   2c9d4:	adc	r3, r3, fp
   2c9d8:	strd	r2, [sp, #72]	; 0x48
   2c9dc:	ldrd	r0, [sp, #112]	; 0x70
   2c9e0:	lsr	r3, r0, #1
   2c9e4:	orr	ip, r3, r1, lsl #31
   2c9e8:	add	r3, sp, #6336	; 0x18c0
   2c9ec:	add	r3, r3, #56	; 0x38
   2c9f0:	str	ip, [r3]
   2c9f4:	lsr	r3, r1, #1
   2c9f8:	orr	ip, r3, r0, lsl #31
   2c9fc:	add	r3, sp, #6336	; 0x18c0
   2ca00:	add	r3, r3, #60	; 0x3c
   2ca04:	str	ip, [r3]
   2ca08:	lsr	r3, r0, #8
   2ca0c:	orr	ip, r3, r1, lsl #24
   2ca10:	add	r3, sp, #6400	; 0x1900
   2ca14:	str	ip, [r3]
   2ca18:	lsr	r3, r1, #8
   2ca1c:	orr	ip, r3, r0, lsl #24
   2ca20:	add	r3, sp, #6400	; 0x1900
   2ca24:	add	r3, r3, #4
   2ca28:	str	ip, [r3]
   2ca2c:	add	r3, sp, #6336	; 0x18c0
   2ca30:	add	r3, r3, #56	; 0x38
   2ca34:	ldrd	r8, [r3]
   2ca38:	add	r3, sp, #6400	; 0x1900
   2ca3c:	ldrd	r2, [r3]
   2ca40:	eor	r8, r8, r2
   2ca44:	eor	r9, r9, r3
   2ca48:	mov	r2, r8
   2ca4c:	mov	r3, r9
   2ca50:	lsr	ip, r0, #7
   2ca54:	orr	ip, ip, r1, lsl #25
   2ca58:	str	ip, [sp, #1080]	; 0x438
   2ca5c:	lsr	r1, r1, #7
   2ca60:	str	r1, [sp, #1084]	; 0x43c
   2ca64:	add	r1, sp, #1072	; 0x430
   2ca68:	add	r1, r1, #8
   2ca6c:	ldrd	r8, [r1]
   2ca70:	eor	r8, r8, r2
   2ca74:	eor	r9, r9, r3
   2ca78:	ldrd	r0, [sp, #96]	; 0x60
   2ca7c:	adds	r0, r0, r8
   2ca80:	adc	r1, r1, r9
   2ca84:	mov	r2, r0
   2ca88:	mov	r3, r1
   2ca8c:	ldrd	r0, [sp, #192]	; 0xc0
   2ca90:	adds	r0, r0, r2
   2ca94:	adc	r1, r1, r3
   2ca98:	mov	r2, r0
   2ca9c:	mov	r3, r1
   2caa0:	ldrd	sl, [sp, #88]	; 0x58
   2caa4:	lsr	r1, sl, #19
   2caa8:	orr	r1, r1, fp, lsl #13
   2caac:	add	r0, sp, #6400	; 0x1900
   2cab0:	add	r0, r0, #8
   2cab4:	str	r1, [r0]
   2cab8:	lsr	r1, fp, #19
   2cabc:	orr	r1, r1, sl, lsl #13
   2cac0:	add	r0, sp, #6400	; 0x1900
   2cac4:	add	r0, r0, #12
   2cac8:	str	r1, [r0]
   2cacc:	lsl	r1, fp, #3
   2cad0:	orr	r1, r1, sl, lsr #29
   2cad4:	add	r0, sp, #6400	; 0x1900
   2cad8:	add	r0, r0, #20
   2cadc:	str	r1, [r0]
   2cae0:	lsl	r1, sl, #3
   2cae4:	orr	r1, r1, fp, lsr #29
   2cae8:	add	r0, sp, #6400	; 0x1900
   2caec:	add	r0, r0, #16
   2caf0:	str	r1, [r0]
   2caf4:	add	r1, sp, #6400	; 0x1900
   2caf8:	add	r1, r1, #8
   2cafc:	ldrd	r8, [r1]
   2cb00:	ldrd	r0, [r0]
   2cb04:	eor	r8, r8, r0
   2cb08:	eor	r9, r9, r1
   2cb0c:	mov	r0, r8
   2cb10:	mov	r1, r9
   2cb14:	lsr	ip, sl, #6
   2cb18:	orr	ip, ip, fp, lsl #26
   2cb1c:	str	ip, [sp, #1088]	; 0x440
   2cb20:	lsr	ip, fp, #6
   2cb24:	str	ip, [sp, #1092]	; 0x444
   2cb28:	add	ip, sp, #1088	; 0x440
   2cb2c:	ldrd	r8, [ip]
   2cb30:	eor	r8, r8, r0
   2cb34:	eor	r9, r9, r1
   2cb38:	adds	sl, r2, r8
   2cb3c:	adc	fp, r3, r9
   2cb40:	add	r3, sp, #7168	; 0x1c00
   2cb44:	add	r3, r3, #8
   2cb48:	strd	sl, [r3]
   2cb4c:	b	2cb60 <__assert_fail@plt+0x1b874>
   2cb50:	cdplt	13, 15, cr0, cr9, cr14, {5}
   2cb54:	teqne	pc, r4, lsl #16
   2cb58:	tstne	ip, #7077888	; 0x6c0000
   2cb5c:	blne	1c6f838 <optarg@@GLIBC_2.4+0x1c25690>
   2cb60:	ldrd	r0, [sp, #16]
   2cb64:	eor	r0, r0, r6
   2cb68:	eor	r1, r1, r7
   2cb6c:	mov	r8, r4
   2cb70:	mov	r9, r5
   2cb74:	and	r4, r4, r0
   2cb78:	and	r5, r5, r1
   2cb7c:	mov	r0, r4
   2cb80:	mov	r1, r5
   2cb84:	eor	r0, r0, r6
   2cb88:	eor	r1, r1, r7
   2cb8c:	sub	r3, pc, #60	; 0x3c
   2cb90:	ldrd	r2, [r3]
   2cb94:	strd	sl, [sp, #96]	; 0x60
   2cb98:	adds	sl, sl, r2
   2cb9c:	adc	fp, fp, r3
   2cba0:	mov	r2, sl
   2cba4:	mov	r3, fp
   2cba8:	ldrd	sl, [sp, #24]
   2cbac:	adds	sl, sl, r2
   2cbb0:	adc	fp, fp, r3
   2cbb4:	adds	r0, r0, sl
   2cbb8:	adc	r1, r1, fp
   2cbbc:	lsr	r3, r8, #14
   2cbc0:	mov	r4, r8
   2cbc4:	mov	r5, r9
   2cbc8:	orr	ip, r3, r9, lsl #18
   2cbcc:	add	r3, sp, #6400	; 0x1900
   2cbd0:	add	r3, r3, #24
   2cbd4:	str	ip, [r3]
   2cbd8:	lsr	r3, r9, #14
   2cbdc:	orr	ip, r3, r8, lsl #18
   2cbe0:	add	r3, sp, #6400	; 0x1900
   2cbe4:	add	r3, r3, #28
   2cbe8:	str	ip, [r3]
   2cbec:	lsr	r3, r8, #18
   2cbf0:	orr	ip, r3, r9, lsl #14
   2cbf4:	add	r3, sp, #6400	; 0x1900
   2cbf8:	add	r3, r3, #32
   2cbfc:	str	ip, [r3]
   2cc00:	lsr	r3, r9, #18
   2cc04:	orr	ip, r3, r8, lsl #14
   2cc08:	add	r3, sp, #6400	; 0x1900
   2cc0c:	add	r3, r3, #36	; 0x24
   2cc10:	str	ip, [r3]
   2cc14:	add	r3, sp, #6400	; 0x1900
   2cc18:	add	r3, r3, #24
   2cc1c:	ldrd	r8, [r3]
   2cc20:	add	r3, sp, #6400	; 0x1900
   2cc24:	add	r3, r3, #32
   2cc28:	ldrd	r2, [r3]
   2cc2c:	eor	r8, r8, r2
   2cc30:	eor	r9, r9, r3
   2cc34:	mov	r2, r8
   2cc38:	mov	r3, r9
   2cc3c:	lsl	ip, r5, #23
   2cc40:	orr	ip, ip, r4, lsr #9
   2cc44:	add	r8, sp, #6400	; 0x1900
   2cc48:	add	r8, r8, #44	; 0x2c
   2cc4c:	str	ip, [r8]
   2cc50:	lsl	ip, r4, #23
   2cc54:	strd	r4, [sp, #32]
   2cc58:	orr	ip, ip, r5, lsr #9
   2cc5c:	add	r4, sp, #6400	; 0x1900
   2cc60:	add	r4, r4, #40	; 0x28
   2cc64:	str	ip, [r4]
   2cc68:	ldrd	r8, [r4]
   2cc6c:	eor	r8, r8, r2
   2cc70:	eor	r9, r9, r3
   2cc74:	adds	sl, r0, r8
   2cc78:	adc	fp, r1, r9
   2cc7c:	mov	r2, sl
   2cc80:	mov	r3, fp
   2cc84:	ldrd	sl, [sp, #80]	; 0x50
   2cc88:	strd	r2, [sp, #24]
   2cc8c:	adds	sl, sl, r2
   2cc90:	adc	fp, fp, r3
   2cc94:	ldrd	r4, [sp, #72]	; 0x48
   2cc98:	lsr	r3, r4, #28
   2cc9c:	orr	r1, r3, r5, lsl #4
   2cca0:	add	r3, sp, #6400	; 0x1900
   2cca4:	add	r3, r3, #48	; 0x30
   2cca8:	str	r1, [r3]
   2ccac:	lsr	r3, r5, #28
   2ccb0:	orr	r1, r3, r4, lsl #4
   2ccb4:	add	r3, sp, #6400	; 0x1900
   2ccb8:	add	r3, r3, #52	; 0x34
   2ccbc:	str	r1, [r3]
   2ccc0:	lsl	r3, r5, #30
   2ccc4:	orr	r1, r3, r4, lsr #2
   2ccc8:	add	r3, sp, #6400	; 0x1900
   2cccc:	add	r3, r3, #60	; 0x3c
   2ccd0:	str	r1, [r3]
   2ccd4:	lsl	r3, r4, #30
   2ccd8:	orr	r1, r3, r5, lsr #2
   2ccdc:	add	r3, sp, #6400	; 0x1900
   2cce0:	add	r3, r3, #56	; 0x38
   2cce4:	str	r1, [r3]
   2cce8:	add	r3, sp, #6400	; 0x1900
   2ccec:	add	r3, r3, #48	; 0x30
   2ccf0:	ldrd	r8, [r3]
   2ccf4:	add	r3, sp, #6400	; 0x1900
   2ccf8:	add	r3, r3, #56	; 0x38
   2ccfc:	ldrd	r2, [r3]
   2cd00:	eor	r8, r8, r2
   2cd04:	eor	r9, r9, r3
   2cd08:	mov	r2, r8
   2cd0c:	mov	r3, r9
   2cd10:	lsl	r1, r5, #25
   2cd14:	orr	r1, r1, r4, lsr #7
   2cd18:	add	r0, sp, #6464	; 0x1940
   2cd1c:	add	r0, r0, #4
   2cd20:	str	r1, [r0]
   2cd24:	lsl	r1, r4, #25
   2cd28:	orr	r1, r1, r5, lsr #7
   2cd2c:	add	r0, sp, #6464	; 0x1940
   2cd30:	str	r1, [r0]
   2cd34:	ldrd	r8, [r0]
   2cd38:	eor	r8, r8, r2
   2cd3c:	eor	r9, r9, r3
   2cd40:	strd	r8, [sp, #72]	; 0x48
   2cd44:	ldrd	r8, [sp, #40]	; 0x28
   2cd48:	orr	r2, r8, r4
   2cd4c:	orr	r3, r9, r5
   2cd50:	mov	r0, r2
   2cd54:	mov	r1, r3
   2cd58:	ldrd	r2, [sp]
   2cd5c:	and	r2, r2, r0
   2cd60:	and	r3, r3, r1
   2cd64:	strd	r2, [sp, #80]	; 0x50
   2cd68:	mov	r0, r8
   2cd6c:	mov	r1, r9
   2cd70:	and	r0, r0, r4
   2cd74:	and	r1, r1, r5
   2cd78:	mov	r2, r0
   2cd7c:	mov	r3, r1
   2cd80:	ldrd	r0, [sp, #80]	; 0x50
   2cd84:	orr	r0, r0, r2
   2cd88:	orr	r1, r1, r3
   2cd8c:	ldrd	r8, [sp, #72]	; 0x48
   2cd90:	adds	r8, r8, r0
   2cd94:	adc	r9, r9, r1
   2cd98:	ldrd	r2, [sp, #24]
   2cd9c:	adds	r2, r2, r8
   2cda0:	adc	r3, r3, r9
   2cda4:	strd	r2, [sp, #24]
   2cda8:	ldrd	r0, [sp, #48]	; 0x30
   2cdac:	lsr	r3, r0, #1
   2cdb0:	orr	ip, r3, r1, lsl #31
   2cdb4:	add	r3, sp, #6464	; 0x1940
   2cdb8:	add	r3, r3, #8
   2cdbc:	str	ip, [r3]
   2cdc0:	lsr	r3, r1, #1
   2cdc4:	orr	ip, r3, r0, lsl #31
   2cdc8:	add	r3, sp, #6464	; 0x1940
   2cdcc:	add	r3, r3, #12
   2cdd0:	str	ip, [r3]
   2cdd4:	lsr	r3, r0, #8
   2cdd8:	orr	ip, r3, r1, lsl #24
   2cddc:	add	r3, sp, #6464	; 0x1940
   2cde0:	add	r3, r3, #16
   2cde4:	str	ip, [r3]
   2cde8:	lsr	r3, r1, #8
   2cdec:	orr	r1, r3, r0, lsl #24
   2cdf0:	add	r3, sp, #6464	; 0x1940
   2cdf4:	add	r3, r3, #20
   2cdf8:	str	r1, [r3]
   2cdfc:	add	r3, sp, #6464	; 0x1940
   2ce00:	add	r3, r3, #8
   2ce04:	ldrd	r8, [r3]
   2ce08:	add	r3, sp, #6464	; 0x1940
   2ce0c:	add	r3, r3, #16
   2ce10:	ldrd	r2, [r3]
   2ce14:	eor	r8, r8, r2
   2ce18:	eor	r9, r9, r3
   2ce1c:	mov	r0, r8
   2ce20:	mov	r1, r9
   2ce24:	ldrd	r2, [sp, #48]	; 0x30
   2ce28:	lsr	ip, r2, #7
   2ce2c:	orr	ip, ip, r3, lsl #25
   2ce30:	str	ip, [sp, #1096]	; 0x448
   2ce34:	lsr	ip, r3, #7
   2ce38:	str	ip, [sp, #1100]	; 0x44c
   2ce3c:	add	r3, sp, #1088	; 0x440
   2ce40:	add	r3, r3, #8
   2ce44:	ldrd	r8, [r3]
   2ce48:	eor	r8, r8, r0
   2ce4c:	eor	r9, r9, r1
   2ce50:	ldrd	r2, [sp, #112]	; 0x70
   2ce54:	adds	r2, r2, r8
   2ce58:	adc	r3, r3, r9
   2ce5c:	mov	r0, r2
   2ce60:	mov	r1, r3
   2ce64:	ldrd	r2, [sp, #152]	; 0x98
   2ce68:	adds	r2, r2, r0
   2ce6c:	adc	r3, r3, r1
   2ce70:	mov	r0, r2
   2ce74:	mov	r1, r3
   2ce78:	ldrd	r8, [sp, #64]	; 0x40
   2ce7c:	lsr	r3, r8, #19
   2ce80:	orr	ip, r3, r9, lsl #13
   2ce84:	add	r3, sp, #6464	; 0x1940
   2ce88:	add	r3, r3, #24
   2ce8c:	str	ip, [r3]
   2ce90:	lsr	r3, r9, #19
   2ce94:	orr	ip, r3, r8, lsl #13
   2ce98:	add	r3, sp, #6464	; 0x1940
   2ce9c:	add	r3, r3, #28
   2cea0:	str	ip, [r3]
   2cea4:	lsl	r3, r9, #3
   2cea8:	orr	ip, r3, r8, lsr #29
   2ceac:	add	r3, sp, #6464	; 0x1940
   2ceb0:	add	r3, r3, #36	; 0x24
   2ceb4:	str	ip, [r3]
   2ceb8:	lsl	r3, r8, #3
   2cebc:	orr	ip, r3, r9, lsr #29
   2cec0:	add	r3, sp, #6464	; 0x1940
   2cec4:	add	r3, r3, #32
   2cec8:	str	ip, [r3]
   2cecc:	add	r3, sp, #6464	; 0x1940
   2ced0:	add	r3, r3, #24
   2ced4:	ldrd	r8, [r3]
   2ced8:	add	r3, sp, #6464	; 0x1940
   2cedc:	add	r3, r3, #32
   2cee0:	ldrd	r2, [r3]
   2cee4:	eor	r8, r8, r2
   2cee8:	eor	r9, r9, r3
   2ceec:	mov	r2, r8
   2cef0:	mov	r3, r9
   2cef4:	ldrd	r8, [sp, #64]	; 0x40
   2cef8:	lsr	ip, r8, #6
   2cefc:	orr	ip, ip, r9, lsl #26
   2cf00:	str	ip, [sp, #1104]	; 0x450
   2cf04:	ldr	ip, [sp, #68]	; 0x44
   2cf08:	lsr	ip, ip, #6
   2cf0c:	str	ip, [sp, #1108]	; 0x454
   2cf10:	add	ip, sp, #1104	; 0x450
   2cf14:	ldrd	r8, [ip]
   2cf18:	eor	r8, r8, r2
   2cf1c:	eor	r9, r9, r3
   2cf20:	adds	r8, r0, r8
   2cf24:	adc	r9, r1, r9
   2cf28:	add	r3, sp, #7168	; 0x1c00
   2cf2c:	add	r3, r3, #16
   2cf30:	strd	r8, [r3]
   2cf34:	ldrd	r0, [sp, #32]
   2cf38:	ldrd	r2, [sp, #16]
   2cf3c:	eor	r2, r2, r0
   2cf40:	eor	r3, r3, r1
   2cf44:	mov	r0, r2
   2cf48:	mov	r1, r3
   2cf4c:	and	r0, r0, sl
   2cf50:	and	r1, r1, fp
   2cf54:	ldrd	r2, [sp, #16]
   2cf58:	eor	r2, r2, r0
   2cf5c:	eor	r3, r3, r1
   2cf60:	mov	r0, r2
   2cf64:	mov	r1, r3
   2cf68:	add	r3, pc, #896	; 0x380
   2cf6c:	ldrd	r2, [r3]
   2cf70:	strd	r8, [sp, #80]	; 0x50
   2cf74:	adds	r8, r8, r2
   2cf78:	adc	r9, r9, r3
   2cf7c:	adds	r6, r6, r8
   2cf80:	adc	r7, r7, r9
   2cf84:	adds	r0, r0, r6
   2cf88:	adc	r1, r1, r7
   2cf8c:	lsr	r3, sl, #14
   2cf90:	orr	ip, r3, fp, lsl #18
   2cf94:	add	r3, sp, #6464	; 0x1940
   2cf98:	add	r3, r3, #40	; 0x28
   2cf9c:	str	ip, [r3]
   2cfa0:	lsr	r3, fp, #14
   2cfa4:	orr	ip, r3, sl, lsl #18
   2cfa8:	add	r3, sp, #6464	; 0x1940
   2cfac:	add	r3, r3, #44	; 0x2c
   2cfb0:	str	ip, [r3]
   2cfb4:	lsr	r3, sl, #18
   2cfb8:	orr	ip, r3, fp, lsl #14
   2cfbc:	add	r3, sp, #6464	; 0x1940
   2cfc0:	add	r3, r3, #48	; 0x30
   2cfc4:	str	ip, [r3]
   2cfc8:	lsr	r3, fp, #18
   2cfcc:	orr	ip, r3, sl, lsl #14
   2cfd0:	add	r3, sp, #6464	; 0x1940
   2cfd4:	add	r3, r3, #52	; 0x34
   2cfd8:	str	ip, [r3]
   2cfdc:	add	r3, sp, #6464	; 0x1940
   2cfe0:	add	r3, r3, #40	; 0x28
   2cfe4:	ldrd	r2, [r3]
   2cfe8:	add	ip, sp, #6464	; 0x1940
   2cfec:	add	ip, ip, #48	; 0x30
   2cff0:	ldrd	r6, [ip]
   2cff4:	eor	r2, r2, r6
   2cff8:	eor	r3, r3, r7
   2cffc:	lsl	ip, fp, #23
   2d000:	orr	ip, ip, sl, lsr #9
   2d004:	add	r6, sp, #6464	; 0x1940
   2d008:	add	r6, r6, #60	; 0x3c
   2d00c:	str	ip, [r6]
   2d010:	lsl	ip, sl, #23
   2d014:	orr	ip, ip, fp, lsr #9
   2d018:	add	r6, sp, #6464	; 0x1940
   2d01c:	add	r6, r6, #56	; 0x38
   2d020:	str	ip, [r6]
   2d024:	ldrd	r6, [r6]
   2d028:	eor	r6, r6, r2
   2d02c:	eor	r7, r7, r3
   2d030:	adds	r6, r0, r6
   2d034:	adc	r7, r1, r7
   2d038:	strd	r6, [sp, #112]	; 0x70
   2d03c:	ldrd	r2, [sp]
   2d040:	adds	r2, r2, r6
   2d044:	adc	r3, r3, r7
   2d048:	mov	r6, r2
   2d04c:	mov	r7, r3
   2d050:	ldrd	r0, [sp, #24]
   2d054:	lsr	r3, r0, #28
   2d058:	orr	ip, r3, r1, lsl #4
   2d05c:	add	r3, sp, #6528	; 0x1980
   2d060:	str	ip, [r3]
   2d064:	lsr	r3, r1, #28
   2d068:	orr	ip, r3, r0, lsl #4
   2d06c:	add	r3, sp, #6528	; 0x1980
   2d070:	add	r3, r3, #4
   2d074:	str	ip, [r3]
   2d078:	lsl	r3, r1, #30
   2d07c:	orr	ip, r3, r0, lsr #2
   2d080:	add	r3, sp, #6528	; 0x1980
   2d084:	add	r3, r3, #12
   2d088:	str	ip, [r3]
   2d08c:	lsl	r3, r0, #30
   2d090:	orr	ip, r3, r1, lsr #2
   2d094:	add	r3, sp, #6528	; 0x1980
   2d098:	add	r3, r3, #8
   2d09c:	str	ip, [r3]
   2d0a0:	add	r3, sp, #6528	; 0x1980
   2d0a4:	ldrd	r2, [r3]
   2d0a8:	add	ip, sp, #6528	; 0x1980
   2d0ac:	add	ip, ip, #8
   2d0b0:	ldrd	r8, [ip]
   2d0b4:	eor	r2, r2, r8
   2d0b8:	eor	r3, r3, r9
   2d0bc:	mov	r8, r0
   2d0c0:	mov	r9, r1
   2d0c4:	lsl	r1, r1, #25
   2d0c8:	orr	r1, r1, r8, lsr #7
   2d0cc:	add	r0, sp, #6528	; 0x1980
   2d0d0:	add	r0, r0, #20
   2d0d4:	str	r1, [r0]
   2d0d8:	lsl	r1, r8, #25
   2d0dc:	orr	r1, r1, r9, lsr #7
   2d0e0:	add	r0, sp, #6528	; 0x1980
   2d0e4:	add	r0, r0, #16
   2d0e8:	str	r1, [r0]
   2d0ec:	ldrd	r0, [r0]
   2d0f0:	eor	r0, r0, r2
   2d0f4:	eor	r1, r1, r3
   2d0f8:	strd	r0, [sp]
   2d0fc:	orr	r0, r4, r8
   2d100:	orr	r1, r5, r9
   2d104:	ldrd	r2, [sp, #40]	; 0x28
   2d108:	and	r2, r2, r0
   2d10c:	and	r3, r3, r1
   2d110:	mov	r0, r2
   2d114:	mov	r1, r3
   2d118:	strd	r4, [sp, #72]	; 0x48
   2d11c:	and	r4, r4, r8
   2d120:	and	r5, r5, r9
   2d124:	orr	r0, r0, r4
   2d128:	orr	r1, r1, r5
   2d12c:	ldrd	r4, [sp]
   2d130:	adds	r4, r4, r0
   2d134:	adc	r5, r5, r1
   2d138:	ldrd	r8, [sp, #112]	; 0x70
   2d13c:	adds	r8, r8, r4
   2d140:	adc	r9, r9, r5
   2d144:	strd	r8, [sp]
   2d148:	ldrd	r0, [sp, #8]
   2d14c:	lsr	r3, r0, #1
   2d150:	orr	ip, r3, r1, lsl #31
   2d154:	add	r3, sp, #6528	; 0x1980
   2d158:	add	r3, r3, #24
   2d15c:	str	ip, [r3]
   2d160:	lsr	r3, r1, #1
   2d164:	orr	ip, r3, r0, lsl #31
   2d168:	add	r3, sp, #6528	; 0x1980
   2d16c:	add	r3, r3, #28
   2d170:	str	ip, [r3]
   2d174:	lsr	r3, r0, #8
   2d178:	orr	ip, r3, r1, lsl #24
   2d17c:	add	r3, sp, #6528	; 0x1980
   2d180:	add	r3, r3, #32
   2d184:	str	ip, [r3]
   2d188:	lsr	r3, r1, #8
   2d18c:	orr	ip, r3, r0, lsl #24
   2d190:	add	r3, sp, #6528	; 0x1980
   2d194:	add	r3, r3, #36	; 0x24
   2d198:	str	ip, [r3]
   2d19c:	add	r3, sp, #6528	; 0x1980
   2d1a0:	add	r3, r3, #24
   2d1a4:	ldrd	r8, [r3]
   2d1a8:	add	r3, sp, #6528	; 0x1980
   2d1ac:	add	r3, r3, #32
   2d1b0:	ldrd	r2, [r3]
   2d1b4:	eor	r8, r8, r2
   2d1b8:	eor	r9, r9, r3
   2d1bc:	mov	r2, r8
   2d1c0:	mov	r3, r9
   2d1c4:	lsr	ip, r0, #7
   2d1c8:	orr	ip, ip, r1, lsl #25
   2d1cc:	str	ip, [sp, #1112]	; 0x458
   2d1d0:	lsr	r1, r1, #7
   2d1d4:	str	r1, [sp, #1116]	; 0x45c
   2d1d8:	add	r1, sp, #1104	; 0x450
   2d1dc:	add	r1, r1, #8
   2d1e0:	ldrd	r8, [r1]
   2d1e4:	eor	r8, r8, r2
   2d1e8:	eor	r9, r9, r3
   2d1ec:	ldrd	r0, [sp, #48]	; 0x30
   2d1f0:	adds	r0, r0, r8
   2d1f4:	adc	r1, r1, r9
   2d1f8:	mov	r2, r0
   2d1fc:	mov	r3, r1
   2d200:	ldrd	r0, [sp, #56]	; 0x38
   2d204:	adds	r0, r0, r2
   2d208:	adc	r1, r1, r3
   2d20c:	mov	r2, r0
   2d210:	mov	r3, r1
   2d214:	ldrd	r4, [sp, #96]	; 0x60
   2d218:	lsr	r1, r4, #19
   2d21c:	orr	r1, r1, r5, lsl #13
   2d220:	add	r0, sp, #6528	; 0x1980
   2d224:	add	r0, r0, #40	; 0x28
   2d228:	str	r1, [r0]
   2d22c:	lsr	r1, r5, #19
   2d230:	orr	r1, r1, r4, lsl #13
   2d234:	add	r0, sp, #6528	; 0x1980
   2d238:	add	r0, r0, #44	; 0x2c
   2d23c:	str	r1, [r0]
   2d240:	lsl	r1, r5, #3
   2d244:	orr	r1, r1, r4, lsr #29
   2d248:	add	r0, sp, #6528	; 0x1980
   2d24c:	add	r0, r0, #52	; 0x34
   2d250:	str	r1, [r0]
   2d254:	lsl	r1, r4, #3
   2d258:	orr	r1, r1, r5, lsr #29
   2d25c:	add	r0, sp, #6528	; 0x1980
   2d260:	add	r0, r0, #48	; 0x30
   2d264:	str	r1, [r0]
   2d268:	add	r1, sp, #6528	; 0x1980
   2d26c:	add	r1, r1, #40	; 0x28
   2d270:	ldrd	r8, [r1]
   2d274:	ldrd	r0, [r0]
   2d278:	eor	r8, r8, r0
   2d27c:	eor	r9, r9, r1
   2d280:	mov	r0, r8
   2d284:	mov	r1, r9
   2d288:	lsr	ip, r4, #6
   2d28c:	orr	ip, ip, r5, lsl #26
   2d290:	str	ip, [sp, #1120]	; 0x460
   2d294:	lsr	ip, r5, #6
   2d298:	str	ip, [sp, #1124]	; 0x464
   2d29c:	add	ip, sp, #1120	; 0x460
   2d2a0:	ldrd	r8, [ip]
   2d2a4:	eor	r8, r8, r0
   2d2a8:	eor	r9, r9, r1
   2d2ac:	adds	r8, r2, r8
   2d2b0:	adc	r9, r3, r9
   2d2b4:	add	r3, sp, #7168	; 0x1c00
   2d2b8:	add	r3, r3, #24
   2d2bc:	strd	r8, [r3]
   2d2c0:	ldrd	r4, [sp, #32]
   2d2c4:	mov	r0, r4
   2d2c8:	mov	r1, r5
   2d2cc:	eor	r0, r0, sl
   2d2d0:	eor	r1, r1, fp
   2d2d4:	and	r0, r0, r6
   2d2d8:	and	r1, r1, r7
   2d2dc:	mov	r2, r4
   2d2e0:	mov	r3, r5
   2d2e4:	eor	r2, r2, r0
   2d2e8:	eor	r3, r3, r1
   2d2ec:	b	2d300 <__assert_fail@plt+0x1c014>
   2d2f0:	movwcs	r7, #19844	; 0x4d84
   2d2f4:	ldmcs	fp, {r0, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}^
   2d2f8:	smullmi	r2, r7, r3, r4
   2d2fc:	sbccc	sl, sl, #125952	; 0x1ec00
   2d300:	mov	r0, r2
   2d304:	mov	r1, r3
   2d308:	sub	r3, pc, #24
   2d30c:	ldrd	r2, [r3]
   2d310:	strd	r8, [sp, #48]	; 0x30
   2d314:	adds	r8, r8, r2
   2d318:	adc	r9, r9, r3
   2d31c:	mov	r2, r8
   2d320:	mov	r3, r9
   2d324:	ldrd	r8, [sp, #16]
   2d328:	adds	r8, r8, r2
   2d32c:	adc	r9, r9, r3
   2d330:	adds	r0, r0, r8
   2d334:	adc	r1, r1, r9
   2d338:	lsr	r3, r6, #14
   2d33c:	orr	ip, r3, r7, lsl #18
   2d340:	add	r3, sp, #6528	; 0x1980
   2d344:	add	r3, r3, #56	; 0x38
   2d348:	str	ip, [r3]
   2d34c:	lsr	r3, r7, #14
   2d350:	orr	ip, r3, r6, lsl #18
   2d354:	add	r3, sp, #6528	; 0x1980
   2d358:	add	r3, r3, #60	; 0x3c
   2d35c:	str	ip, [r3]
   2d360:	lsr	r3, r6, #18
   2d364:	orr	ip, r3, r7, lsl #14
   2d368:	add	r3, sp, #6592	; 0x19c0
   2d36c:	str	ip, [r3]
   2d370:	lsr	r3, r7, #18
   2d374:	orr	ip, r3, r6, lsl #14
   2d378:	add	r3, sp, #6592	; 0x19c0
   2d37c:	add	r3, r3, #4
   2d380:	str	ip, [r3]
   2d384:	add	r3, sp, #6528	; 0x1980
   2d388:	add	r3, r3, #56	; 0x38
   2d38c:	ldrd	r2, [r3]
   2d390:	add	ip, sp, #6592	; 0x19c0
   2d394:	ldrd	r8, [ip]
   2d398:	eor	r2, r2, r8
   2d39c:	eor	r3, r3, r9
   2d3a0:	lsl	ip, r7, #23
   2d3a4:	orr	ip, ip, r6, lsr #9
   2d3a8:	add	r4, sp, #6592	; 0x19c0
   2d3ac:	add	r4, r4, #12
   2d3b0:	str	ip, [r4]
   2d3b4:	lsl	ip, r6, #23
   2d3b8:	orr	ip, ip, r7, lsr #9
   2d3bc:	add	r4, sp, #6592	; 0x19c0
   2d3c0:	add	r4, r4, #8
   2d3c4:	str	ip, [r4]
   2d3c8:	ldrd	r8, [r4]
   2d3cc:	eor	r8, r8, r2
   2d3d0:	eor	r9, r9, r3
   2d3d4:	adds	r8, r0, r8
   2d3d8:	adc	r9, r1, r9
   2d3dc:	mov	r4, r8
   2d3e0:	mov	r5, r9
   2d3e4:	ldrd	r2, [sp, #40]	; 0x28
   2d3e8:	strd	r4, [sp, #16]
   2d3ec:	adds	r2, r2, r8
   2d3f0:	adc	r3, r3, r9
   2d3f4:	mov	r8, r2
   2d3f8:	mov	r9, r3
   2d3fc:	ldrd	r4, [sp]
   2d400:	lsr	r3, r4, #28
   2d404:	orr	r1, r3, r5, lsl #4
   2d408:	add	r3, sp, #6592	; 0x19c0
   2d40c:	add	r3, r3, #16
   2d410:	str	r1, [r3]
   2d414:	lsr	r3, r5, #28
   2d418:	orr	r1, r3, r4, lsl #4
   2d41c:	add	r3, sp, #6592	; 0x19c0
   2d420:	add	r3, r3, #20
   2d424:	str	r1, [r3]
   2d428:	lsl	r3, r5, #30
   2d42c:	orr	r1, r3, r4, lsr #2
   2d430:	add	r3, sp, #6592	; 0x19c0
   2d434:	add	r3, r3, #28
   2d438:	str	r1, [r3]
   2d43c:	lsl	r3, r4, #30
   2d440:	orr	r1, r3, r5, lsr #2
   2d444:	add	r3, sp, #6592	; 0x19c0
   2d448:	add	r3, r3, #24
   2d44c:	str	r1, [r3]
   2d450:	add	r3, sp, #6592	; 0x19c0
   2d454:	add	r3, r3, #16
   2d458:	ldrd	r2, [r3]
   2d45c:	add	r1, sp, #6592	; 0x19c0
   2d460:	add	r1, r1, #24
   2d464:	ldrd	r0, [r1]
   2d468:	eor	r2, r2, r0
   2d46c:	eor	r3, r3, r1
   2d470:	lsl	r1, r5, #25
   2d474:	orr	r1, r1, r4, lsr #7
   2d478:	add	r0, sp, #6592	; 0x19c0
   2d47c:	add	r0, r0, #36	; 0x24
   2d480:	str	r1, [r0]
   2d484:	lsl	r1, r4, #25
   2d488:	orr	r1, r1, r5, lsr #7
   2d48c:	add	r0, sp, #6592	; 0x19c0
   2d490:	add	r0, r0, #32
   2d494:	str	r1, [r0]
   2d498:	ldrd	r0, [r0]
   2d49c:	eor	r0, r0, r2
   2d4a0:	eor	r1, r1, r3
   2d4a4:	strd	r0, [sp, #40]	; 0x28
   2d4a8:	ldrd	r2, [sp, #24]
   2d4ac:	orr	r0, r4, r2
   2d4b0:	orr	r1, r5, r3
   2d4b4:	ldrd	r2, [sp, #72]	; 0x48
   2d4b8:	and	r2, r2, r0
   2d4bc:	and	r3, r3, r1
   2d4c0:	mov	r0, r2
   2d4c4:	mov	r1, r3
   2d4c8:	ldrd	r2, [sp, #24]
   2d4cc:	and	r4, r4, r2
   2d4d0:	and	r5, r5, r3
   2d4d4:	orr	r2, r4, r0
   2d4d8:	orr	r3, r5, r1
   2d4dc:	mov	r0, r2
   2d4e0:	mov	r1, r3
   2d4e4:	ldrd	r2, [sp, #40]	; 0x28
   2d4e8:	adds	r2, r2, r0
   2d4ec:	adc	r3, r3, r1
   2d4f0:	ldrd	r4, [sp, #16]
   2d4f4:	adds	r4, r4, r2
   2d4f8:	adc	r5, r5, r3
   2d4fc:	strd	r4, [sp, #40]	; 0x28
   2d500:	ldrd	r0, [sp, #104]	; 0x68
   2d504:	lsr	r3, r0, #1
   2d508:	orr	ip, r3, r1, lsl #31
   2d50c:	add	r3, sp, #6592	; 0x19c0
   2d510:	add	r3, r3, #40	; 0x28
   2d514:	str	ip, [r3]
   2d518:	lsr	r3, r1, #1
   2d51c:	orr	ip, r3, r0, lsl #31
   2d520:	add	r3, sp, #6592	; 0x19c0
   2d524:	add	r3, r3, #44	; 0x2c
   2d528:	str	ip, [r3]
   2d52c:	lsr	r3, r0, #8
   2d530:	orr	ip, r3, r1, lsl #24
   2d534:	add	r3, sp, #6592	; 0x19c0
   2d538:	add	r3, r3, #48	; 0x30
   2d53c:	str	ip, [r3]
   2d540:	lsr	r3, r1, #8
   2d544:	orr	ip, r3, r0, lsl #24
   2d548:	add	r3, sp, #6592	; 0x19c0
   2d54c:	add	r3, r3, #52	; 0x34
   2d550:	str	ip, [r3]
   2d554:	add	r3, sp, #6592	; 0x19c0
   2d558:	add	r3, r3, #40	; 0x28
   2d55c:	ldrd	r2, [r3]
   2d560:	add	ip, sp, #6592	; 0x19c0
   2d564:	add	ip, ip, #48	; 0x30
   2d568:	ldrd	r4, [ip]
   2d56c:	eor	r2, r2, r4
   2d570:	eor	r3, r3, r5
   2d574:	lsr	ip, r0, #7
   2d578:	orr	ip, ip, r1, lsl #25
   2d57c:	str	ip, [sp, #1128]	; 0x468
   2d580:	lsr	r1, r1, #7
   2d584:	str	r1, [sp, #1132]	; 0x46c
   2d588:	add	r1, sp, #1120	; 0x460
   2d58c:	add	r1, r1, #8
   2d590:	ldrd	r0, [r1]
   2d594:	eor	r0, r0, r2
   2d598:	eor	r1, r1, r3
   2d59c:	mov	r2, r0
   2d5a0:	mov	r3, r1
   2d5a4:	ldrd	r0, [sp, #8]
   2d5a8:	adds	r0, r0, r2
   2d5ac:	adc	r1, r1, r3
   2d5b0:	mov	r2, r0
   2d5b4:	mov	r3, r1
   2d5b8:	ldrd	r0, [sp, #160]	; 0xa0
   2d5bc:	adds	r0, r0, r2
   2d5c0:	adc	r1, r1, r3
   2d5c4:	strd	r0, [sp, #8]
   2d5c8:	ldrd	r4, [sp, #80]	; 0x50
   2d5cc:	lsr	r1, r4, #19
   2d5d0:	orr	r1, r1, r5, lsl #13
   2d5d4:	add	r3, sp, #6592	; 0x19c0
   2d5d8:	add	r3, r3, #56	; 0x38
   2d5dc:	str	r1, [r3]
   2d5e0:	lsr	r1, r5, #19
   2d5e4:	orr	r1, r1, r4, lsl #13
   2d5e8:	add	r3, sp, #6592	; 0x19c0
   2d5ec:	add	r3, r3, #60	; 0x3c
   2d5f0:	str	r1, [r3]
   2d5f4:	lsl	r1, r5, #3
   2d5f8:	orr	r1, r1, r4, lsr #29
   2d5fc:	add	r3, sp, #6656	; 0x1a00
   2d600:	add	r3, r3, #4
   2d604:	str	r1, [r3]
   2d608:	lsl	r1, r4, #3
   2d60c:	orr	r1, r1, r5, lsr #29
   2d610:	add	r3, sp, #6656	; 0x1a00
   2d614:	str	r1, [r3]
   2d618:	add	r3, sp, #6592	; 0x19c0
   2d61c:	add	r3, r3, #56	; 0x38
   2d620:	ldrd	r0, [r3]
   2d624:	add	r3, sp, #6656	; 0x1a00
   2d628:	ldrd	r2, [r3]
   2d62c:	eor	r0, r0, r2
   2d630:	eor	r1, r1, r3
   2d634:	lsr	ip, r4, #6
   2d638:	orr	ip, ip, r5, lsl #26
   2d63c:	str	ip, [sp, #1136]	; 0x470
   2d640:	lsr	ip, r5, #6
   2d644:	str	ip, [sp, #1140]	; 0x474
   2d648:	add	r3, sp, #1136	; 0x470
   2d64c:	ldrd	r4, [r3]
   2d650:	eor	r4, r4, r0
   2d654:	eor	r5, r5, r1
   2d658:	ldrd	r2, [sp, #8]
   2d65c:	adds	r2, r2, r4
   2d660:	adc	r3, r3, r5
   2d664:	mov	r4, r2
   2d668:	mov	r5, r3
   2d66c:	add	r1, sp, #7168	; 0x1c00
   2d670:	add	r1, r1, #32
   2d674:	strd	r2, [r1]
   2d678:	eor	r0, sl, r6
   2d67c:	eor	r1, fp, r7
   2d680:	and	r0, r0, r8
   2d684:	and	r1, r1, r9
   2d688:	eor	r0, r0, sl
   2d68c:	eor	r1, r1, fp
   2d690:	add	r3, pc, #880	; 0x370
   2d694:	ldrd	r2, [r3]
   2d698:	strd	r4, [sp, #112]	; 0x70
   2d69c:	adds	r4, r4, r2
   2d6a0:	adc	r5, r5, r3
   2d6a4:	mov	r2, r4
   2d6a8:	mov	r3, r5
   2d6ac:	ldrd	r4, [sp, #32]
   2d6b0:	adds	r4, r4, r2
   2d6b4:	adc	r5, r5, r3
   2d6b8:	adds	r0, r0, r4
   2d6bc:	adc	r1, r1, r5
   2d6c0:	lsr	r3, r8, #14
   2d6c4:	orr	ip, r3, r9, lsl #18
   2d6c8:	add	r3, sp, #6656	; 0x1a00
   2d6cc:	add	r3, r3, #8
   2d6d0:	str	ip, [r3]
   2d6d4:	lsr	r3, r9, #14
   2d6d8:	orr	ip, r3, r8, lsl #18
   2d6dc:	add	r3, sp, #6656	; 0x1a00
   2d6e0:	add	r3, r3, #12
   2d6e4:	str	ip, [r3]
   2d6e8:	lsr	r3, r8, #18
   2d6ec:	orr	ip, r3, r9, lsl #14
   2d6f0:	add	r3, sp, #6656	; 0x1a00
   2d6f4:	add	r3, r3, #16
   2d6f8:	str	ip, [r3]
   2d6fc:	lsr	r3, r9, #18
   2d700:	orr	ip, r3, r8, lsl #14
   2d704:	add	r3, sp, #6656	; 0x1a00
   2d708:	add	r3, r3, #20
   2d70c:	str	ip, [r3]
   2d710:	add	r3, sp, #6656	; 0x1a00
   2d714:	add	r3, r3, #8
   2d718:	ldrd	r2, [r3]
   2d71c:	add	ip, sp, #6656	; 0x1a00
   2d720:	add	ip, ip, #16
   2d724:	ldrd	r4, [ip]
   2d728:	eor	r2, r2, r4
   2d72c:	eor	r3, r3, r5
   2d730:	lsl	ip, r9, #23
   2d734:	orr	ip, ip, r8, lsr #9
   2d738:	add	r4, sp, #6656	; 0x1a00
   2d73c:	add	r4, r4, #28
   2d740:	str	ip, [r4]
   2d744:	lsl	ip, r8, #23
   2d748:	orr	ip, ip, r9, lsr #9
   2d74c:	add	r4, sp, #6656	; 0x1a00
   2d750:	add	r4, r4, #24
   2d754:	str	ip, [r4]
   2d758:	ldrd	r4, [r4]
   2d75c:	eor	r4, r4, r2
   2d760:	eor	r5, r5, r3
   2d764:	adds	r4, r0, r4
   2d768:	adc	r5, r1, r5
   2d76c:	mov	r0, r4
   2d770:	mov	r1, r5
   2d774:	ldrd	r2, [sp, #72]	; 0x48
   2d778:	strd	r0, [sp, #8]
   2d77c:	adds	r2, r2, r4
   2d780:	adc	r3, r3, r5
   2d784:	strd	r2, [sp, #56]	; 0x38
   2d788:	ldrd	r4, [sp, #40]	; 0x28
   2d78c:	lsr	r3, r4, #28
   2d790:	orr	r1, r3, r5, lsl #4
   2d794:	add	r3, sp, #6656	; 0x1a00
   2d798:	add	r3, r3, #32
   2d79c:	str	r1, [r3]
   2d7a0:	lsr	r3, r5, #28
   2d7a4:	orr	r1, r3, r4, lsl #4
   2d7a8:	add	r3, sp, #6656	; 0x1a00
   2d7ac:	add	r3, r3, #36	; 0x24
   2d7b0:	str	r1, [r3]
   2d7b4:	lsl	r3, r5, #30
   2d7b8:	orr	r1, r3, r4, lsr #2
   2d7bc:	add	r3, sp, #6656	; 0x1a00
   2d7c0:	add	r3, r3, #44	; 0x2c
   2d7c4:	str	r1, [r3]
   2d7c8:	lsl	r3, r4, #30
   2d7cc:	orr	r1, r3, r5, lsr #2
   2d7d0:	add	r3, sp, #6656	; 0x1a00
   2d7d4:	add	r3, r3, #40	; 0x28
   2d7d8:	str	r1, [r3]
   2d7dc:	add	r3, sp, #6656	; 0x1a00
   2d7e0:	add	r3, r3, #32
   2d7e4:	ldrd	r2, [r3]
   2d7e8:	add	r1, sp, #6656	; 0x1a00
   2d7ec:	add	r1, r1, #40	; 0x28
   2d7f0:	ldrd	r0, [r1]
   2d7f4:	eor	r2, r2, r0
   2d7f8:	eor	r3, r3, r1
   2d7fc:	lsl	r1, r5, #25
   2d800:	orr	r1, r1, r4, lsr #7
   2d804:	add	r0, sp, #6656	; 0x1a00
   2d808:	add	r0, r0, #52	; 0x34
   2d80c:	str	r1, [r0]
   2d810:	lsl	r1, r4, #25
   2d814:	mov	ip, r5
   2d818:	orr	r1, r1, r5, lsr #7
   2d81c:	add	r0, sp, #6656	; 0x1a00
   2d820:	add	r0, r0, #48	; 0x30
   2d824:	str	r1, [r0]
   2d828:	ldrd	r0, [r0]
   2d82c:	eor	r0, r0, r2
   2d830:	eor	r1, r1, r3
   2d834:	strd	r0, [sp, #16]
   2d838:	mov	r2, r4
   2d83c:	ldrd	r4, [sp]
   2d840:	orr	r4, r4, r2
   2d844:	orr	r5, r5, ip
   2d848:	mov	r0, r4
   2d84c:	mov	r1, r5
   2d850:	ldrd	r4, [sp, #24]
   2d854:	and	r4, r4, r0
   2d858:	and	r5, r5, r1
   2d85c:	mov	r0, r4
   2d860:	mov	r1, r5
   2d864:	ldrd	r4, [sp]
   2d868:	and	r4, r4, r2
   2d86c:	and	r5, r5, ip
   2d870:	orr	r4, r4, r0
   2d874:	orr	r5, r5, r1
   2d878:	ldrd	r2, [sp, #16]
   2d87c:	adds	r2, r2, r4
   2d880:	adc	r3, r3, r5
   2d884:	ldrd	r4, [sp, #8]
   2d888:	adds	r4, r4, r2
   2d88c:	adc	r5, r5, r3
   2d890:	strd	r4, [sp, #8]
   2d894:	ldrd	r4, [sp, #120]	; 0x78
   2d898:	lsr	r3, r4, #1
   2d89c:	orr	r1, r3, r5, lsl #31
   2d8a0:	add	r3, sp, #6656	; 0x1a00
   2d8a4:	add	r3, r3, #56	; 0x38
   2d8a8:	str	r1, [r3]
   2d8ac:	lsr	r3, r5, #1
   2d8b0:	orr	r1, r3, r4, lsl #31
   2d8b4:	add	r3, sp, #6656	; 0x1a00
   2d8b8:	add	r3, r3, #60	; 0x3c
   2d8bc:	str	r1, [r3]
   2d8c0:	lsr	r3, r4, #8
   2d8c4:	orr	r1, r3, r5, lsl #24
   2d8c8:	add	r3, sp, #6720	; 0x1a40
   2d8cc:	str	r1, [r3]
   2d8d0:	lsr	r3, r5, #8
   2d8d4:	orr	r1, r3, r4, lsl #24
   2d8d8:	add	r3, sp, #6720	; 0x1a40
   2d8dc:	add	r3, r3, #4
   2d8e0:	str	r1, [r3]
   2d8e4:	add	r3, sp, #6656	; 0x1a00
   2d8e8:	add	r3, r3, #56	; 0x38
   2d8ec:	ldrd	r2, [r3]
   2d8f0:	add	r1, sp, #6720	; 0x1a40
   2d8f4:	ldrd	r0, [r1]
   2d8f8:	eor	r2, r2, r0
   2d8fc:	eor	r3, r3, r1
   2d900:	lsr	r1, r4, #7
   2d904:	orr	r1, r1, r5, lsl #25
   2d908:	str	r1, [sp, #1144]	; 0x478
   2d90c:	lsr	r1, r5, #7
   2d910:	str	r1, [sp, #1148]	; 0x47c
   2d914:	add	r1, sp, #1136	; 0x470
   2d918:	add	r1, r1, #8
   2d91c:	ldrd	r0, [r1]
   2d920:	eor	r0, r0, r2
   2d924:	eor	r1, r1, r3
   2d928:	mov	r2, r0
   2d92c:	mov	r3, r1
   2d930:	ldrd	r0, [sp, #104]	; 0x68
   2d934:	adds	r0, r0, r2
   2d938:	adc	r1, r1, r3
   2d93c:	mov	r2, r0
   2d940:	mov	r3, r1
   2d944:	ldrd	r0, [sp, #176]	; 0xb0
   2d948:	adds	r0, r0, r2
   2d94c:	adc	r1, r1, r3
   2d950:	strd	r0, [sp, #16]
   2d954:	ldrd	r4, [sp, #48]	; 0x30
   2d958:	lsr	r1, r4, #19
   2d95c:	orr	r1, r1, r5, lsl #13
   2d960:	add	r3, sp, #6720	; 0x1a40
   2d964:	add	r3, r3, #8
   2d968:	str	r1, [r3]
   2d96c:	lsr	r1, r5, #19
   2d970:	orr	r1, r1, r4, lsl #13
   2d974:	add	r3, sp, #6720	; 0x1a40
   2d978:	add	r3, r3, #12
   2d97c:	str	r1, [r3]
   2d980:	lsl	r1, r5, #3
   2d984:	orr	r1, r1, r4, lsr #29
   2d988:	add	r3, sp, #6720	; 0x1a40
   2d98c:	add	r3, r3, #20
   2d990:	str	r1, [r3]
   2d994:	lsl	r1, r4, #3
   2d998:	orr	r1, r1, r5, lsr #29
   2d99c:	add	r3, sp, #6720	; 0x1a40
   2d9a0:	add	r3, r3, #16
   2d9a4:	str	r1, [r3]
   2d9a8:	add	r3, sp, #6720	; 0x1a40
   2d9ac:	add	r3, r3, #8
   2d9b0:	ldrd	r0, [r3]
   2d9b4:	add	r3, sp, #6720	; 0x1a40
   2d9b8:	add	r3, r3, #16
   2d9bc:	ldrd	r2, [r3]
   2d9c0:	eor	r0, r0, r2
   2d9c4:	eor	r1, r1, r3
   2d9c8:	lsr	ip, r4, #6
   2d9cc:	orr	ip, ip, r5, lsl #26
   2d9d0:	str	ip, [sp, #1152]	; 0x480
   2d9d4:	lsr	ip, r5, #6
   2d9d8:	str	ip, [sp, #1156]	; 0x484
   2d9dc:	add	r3, sp, #1152	; 0x480
   2d9e0:	ldrd	r4, [r3]
   2d9e4:	eor	r4, r4, r0
   2d9e8:	eor	r5, r5, r1
   2d9ec:	ldrd	r2, [sp, #16]
   2d9f0:	adds	r2, r2, r4
   2d9f4:	adc	r3, r3, r5
   2d9f8:	strd	r2, [sp, #48]	; 0x30
   2d9fc:	add	r1, sp, #7168	; 0x1c00
   2da00:	add	r1, r1, #40	; 0x28
   2da04:	b	2da18 <__assert_fail@plt+0x1c72c>
   2da08:	strbne	fp, [r9, #3772]	; 0xebc
   2da0c:	ldccc	14, cr11, [lr], {10}
   2da10:	ldcls	13, cr0, [r0], {76}	; 0x4c
   2da14:	tstmi	sp, #196, 14	; 0x3100000
   2da18:	strd	r2, [r1]
   2da1c:	eor	r0, r6, r8
   2da20:	eor	r1, r7, r9
   2da24:	ldrd	r4, [sp, #56]	; 0x38
   2da28:	and	r4, r4, r0
   2da2c:	and	r5, r5, r1
   2da30:	mov	r0, r4
   2da34:	mov	r1, r5
   2da38:	eor	r0, r0, r6
   2da3c:	eor	r1, r1, r7
   2da40:	sub	r3, pc, #56	; 0x38
   2da44:	ldrd	r2, [r3]
   2da48:	ldrd	r4, [sp, #48]	; 0x30
   2da4c:	adds	r4, r4, r2
   2da50:	adc	r5, r5, r3
   2da54:	adds	sl, sl, r4
   2da58:	adc	fp, fp, r5
   2da5c:	adds	r0, r0, sl
   2da60:	adc	r1, r1, fp
   2da64:	ldrd	r4, [sp, #56]	; 0x38
   2da68:	lsr	r3, r4, #14
   2da6c:	orr	ip, r3, r5, lsl #18
   2da70:	add	r3, sp, #6720	; 0x1a40
   2da74:	add	r3, r3, #24
   2da78:	str	ip, [r3]
   2da7c:	lsr	r3, r5, #14
   2da80:	orr	ip, r3, r4, lsl #18
   2da84:	add	r3, sp, #6720	; 0x1a40
   2da88:	add	r3, r3, #28
   2da8c:	str	ip, [r3]
   2da90:	lsr	r3, r4, #18
   2da94:	orr	ip, r3, r5, lsl #14
   2da98:	add	r3, sp, #6720	; 0x1a40
   2da9c:	add	r3, r3, #32
   2daa0:	str	ip, [r3]
   2daa4:	lsr	r3, r5, #18
   2daa8:	orr	ip, r3, r4, lsl #14
   2daac:	add	r3, sp, #6720	; 0x1a40
   2dab0:	add	r3, r3, #36	; 0x24
   2dab4:	str	ip, [r3]
   2dab8:	add	r3, sp, #6720	; 0x1a40
   2dabc:	add	r3, r3, #24
   2dac0:	ldrd	r2, [r3]
   2dac4:	add	ip, sp, #6720	; 0x1a40
   2dac8:	add	ip, ip, #32
   2dacc:	ldrd	sl, [ip]
   2dad0:	eor	r2, r2, sl
   2dad4:	eor	r3, r3, fp
   2dad8:	lsl	ip, r5, #23
   2dadc:	orr	ip, ip, r4, lsr #9
   2dae0:	add	sl, sp, #6720	; 0x1a40
   2dae4:	add	sl, sl, #44	; 0x2c
   2dae8:	str	ip, [sl]
   2daec:	lsl	ip, r4, #23
   2daf0:	orr	ip, ip, r5, lsr #9
   2daf4:	add	r4, sp, #6720	; 0x1a40
   2daf8:	add	r4, r4, #40	; 0x28
   2dafc:	str	ip, [r4]
   2db00:	ldrd	sl, [r4]
   2db04:	eor	sl, sl, r2
   2db08:	eor	fp, fp, r3
   2db0c:	adds	sl, r0, sl
   2db10:	adc	fp, r1, fp
   2db14:	mov	r2, sl
   2db18:	mov	r3, fp
   2db1c:	ldrd	sl, [sp, #24]
   2db20:	strd	r2, [sp, #24]
   2db24:	adds	sl, sl, r2
   2db28:	adc	fp, fp, r3
   2db2c:	strd	sl, [sp, #16]
   2db30:	ldrd	sl, [sp, #8]
   2db34:	lsr	r3, sl, #28
   2db38:	orr	r1, r3, fp, lsl #4
   2db3c:	add	r3, sp, #6720	; 0x1a40
   2db40:	add	r3, r3, #48	; 0x30
   2db44:	str	r1, [r3]
   2db48:	lsr	r3, fp, #28
   2db4c:	orr	r1, r3, sl, lsl #4
   2db50:	add	r3, sp, #6720	; 0x1a40
   2db54:	add	r3, r3, #52	; 0x34
   2db58:	str	r1, [r3]
   2db5c:	lsl	r3, fp, #30
   2db60:	orr	r1, r3, sl, lsr #2
   2db64:	add	r3, sp, #6720	; 0x1a40
   2db68:	add	r3, r3, #60	; 0x3c
   2db6c:	str	r1, [r3]
   2db70:	lsl	r3, sl, #30
   2db74:	orr	r1, r3, fp, lsr #2
   2db78:	add	r3, sp, #6720	; 0x1a40
   2db7c:	add	r3, r3, #56	; 0x38
   2db80:	str	r1, [r3]
   2db84:	add	r3, sp, #6720	; 0x1a40
   2db88:	add	r3, r3, #48	; 0x30
   2db8c:	ldrd	r2, [r3]
   2db90:	add	r1, sp, #6720	; 0x1a40
   2db94:	add	r1, r1, #56	; 0x38
   2db98:	ldrd	r0, [r1]
   2db9c:	eor	r2, r2, r0
   2dba0:	eor	r3, r3, r1
   2dba4:	lsl	r1, fp, #25
   2dba8:	orr	r1, r1, sl, lsr #7
   2dbac:	add	r0, sp, #6784	; 0x1a80
   2dbb0:	add	r0, r0, #4
   2dbb4:	str	r1, [r0]
   2dbb8:	lsl	r1, sl, #25
   2dbbc:	orr	r1, r1, fp, lsr #7
   2dbc0:	add	r0, sp, #6784	; 0x1a80
   2dbc4:	str	r1, [r0]
   2dbc8:	ldrd	r0, [r0]
   2dbcc:	eor	r0, r0, r2
   2dbd0:	eor	r1, r1, r3
   2dbd4:	strd	r0, [sp, #32]
   2dbd8:	ldrd	r2, [sp, #40]	; 0x28
   2dbdc:	orr	r0, r2, sl
   2dbe0:	orr	r1, r3, fp
   2dbe4:	ldrd	r4, [sp]
   2dbe8:	and	r4, r4, r0
   2dbec:	and	r5, r5, r1
   2dbf0:	mov	r0, r4
   2dbf4:	mov	r1, r5
   2dbf8:	and	r2, r2, sl
   2dbfc:	and	r3, r3, fp
   2dc00:	orr	r2, r2, r0
   2dc04:	orr	r3, r3, r1
   2dc08:	mov	r0, r2
   2dc0c:	mov	r1, r3
   2dc10:	ldrd	r2, [sp, #32]
   2dc14:	adds	r2, r2, r0
   2dc18:	adc	r3, r3, r1
   2dc1c:	mov	r0, r2
   2dc20:	mov	r1, r3
   2dc24:	ldrd	r2, [sp, #24]
   2dc28:	adds	r2, r2, r0
   2dc2c:	adc	r3, r3, r1
   2dc30:	strd	r2, [sp, #24]
   2dc34:	ldrd	r0, [sp, #128]	; 0x80
   2dc38:	lsr	r3, r0, #1
   2dc3c:	orr	ip, r3, r1, lsl #31
   2dc40:	add	r3, sp, #6784	; 0x1a80
   2dc44:	add	r3, r3, #8
   2dc48:	str	ip, [r3]
   2dc4c:	lsr	r3, r1, #1
   2dc50:	orr	ip, r3, r0, lsl #31
   2dc54:	add	r3, sp, #6784	; 0x1a80
   2dc58:	add	r3, r3, #12
   2dc5c:	str	ip, [r3]
   2dc60:	lsr	r3, r0, #8
   2dc64:	orr	ip, r3, r1, lsl #24
   2dc68:	add	r3, sp, #6784	; 0x1a80
   2dc6c:	add	r3, r3, #16
   2dc70:	str	ip, [r3]
   2dc74:	lsr	r3, r1, #8
   2dc78:	orr	ip, r3, r0, lsl #24
   2dc7c:	add	r3, sp, #6784	; 0x1a80
   2dc80:	add	r3, r3, #20
   2dc84:	str	ip, [r3]
   2dc88:	add	r3, sp, #6784	; 0x1a80
   2dc8c:	add	r3, r3, #8
   2dc90:	ldrd	r2, [r3]
   2dc94:	add	ip, sp, #6784	; 0x1a80
   2dc98:	add	ip, ip, #16
   2dc9c:	ldrd	r4, [ip]
   2dca0:	eor	r2, r2, r4
   2dca4:	eor	r3, r3, r5
   2dca8:	lsr	ip, r0, #7
   2dcac:	orr	ip, ip, r1, lsl #25
   2dcb0:	str	ip, [sp, #1160]	; 0x488
   2dcb4:	lsr	r1, r1, #7
   2dcb8:	str	r1, [sp, #1164]	; 0x48c
   2dcbc:	add	r1, sp, #1152	; 0x480
   2dcc0:	add	r1, r1, #8
   2dcc4:	ldrd	r0, [r1]
   2dcc8:	eor	r0, r0, r2
   2dccc:	eor	r1, r1, r3
   2dcd0:	ldrd	r4, [sp, #120]	; 0x78
   2dcd4:	adds	r4, r4, r0
   2dcd8:	adc	r5, r5, r1
   2dcdc:	ldrd	r0, [sp, #88]	; 0x58
   2dce0:	adds	r0, r0, r4
   2dce4:	adc	r1, r1, r5
   2dce8:	mov	r2, r0
   2dcec:	mov	r3, r1
   2dcf0:	ldrd	r4, [sp, #112]	; 0x70
   2dcf4:	lsr	r1, r4, #19
   2dcf8:	orr	r1, r1, r5, lsl #13
   2dcfc:	add	r0, sp, #6784	; 0x1a80
   2dd00:	add	r0, r0, #24
   2dd04:	str	r1, [r0]
   2dd08:	lsr	r1, r5, #19
   2dd0c:	orr	r1, r1, r4, lsl #13
   2dd10:	add	r0, sp, #6784	; 0x1a80
   2dd14:	add	r0, r0, #28
   2dd18:	str	r1, [r0]
   2dd1c:	lsl	r1, r5, #3
   2dd20:	orr	r1, r1, r4, lsr #29
   2dd24:	add	r0, sp, #6784	; 0x1a80
   2dd28:	add	r0, r0, #36	; 0x24
   2dd2c:	str	r1, [r0]
   2dd30:	lsl	r1, r4, #3
   2dd34:	orr	r1, r1, r5, lsr #29
   2dd38:	add	r0, sp, #6784	; 0x1a80
   2dd3c:	add	r0, r0, #32
   2dd40:	str	r1, [r0]
   2dd44:	add	r1, sp, #6784	; 0x1a80
   2dd48:	add	r1, r1, #24
   2dd4c:	ldrd	r0, [r1]
   2dd50:	add	ip, sp, #6784	; 0x1a80
   2dd54:	add	ip, ip, #32
   2dd58:	ldrd	sl, [ip]
   2dd5c:	eor	r0, r0, sl
   2dd60:	eor	r1, r1, fp
   2dd64:	lsr	ip, r4, #6
   2dd68:	orr	ip, ip, r5, lsl #26
   2dd6c:	str	ip, [sp, #1168]	; 0x490
   2dd70:	lsr	ip, r5, #6
   2dd74:	str	ip, [sp, #1172]	; 0x494
   2dd78:	add	ip, sp, #1168	; 0x490
   2dd7c:	ldrd	r4, [ip]
   2dd80:	eor	r4, r4, r0
   2dd84:	eor	r5, r5, r1
   2dd88:	adds	r4, r2, r4
   2dd8c:	adc	r5, r3, r5
   2dd90:	mov	r2, r4
   2dd94:	mov	r3, r5
   2dd98:	add	r1, sp, #7168	; 0x1c00
   2dd9c:	add	r1, r1, #48	; 0x30
   2dda0:	strd	r2, [r1]
   2dda4:	ldrd	r0, [sp, #56]	; 0x38
   2dda8:	eor	r0, r0, r8
   2ddac:	eor	r1, r1, r9
   2ddb0:	ldrd	sl, [sp, #16]
   2ddb4:	and	sl, sl, r0
   2ddb8:	and	fp, fp, r1
   2ddbc:	mov	r0, sl
   2ddc0:	mov	r1, fp
   2ddc4:	eor	r0, r0, r8
   2ddc8:	eor	r1, r1, r9
   2ddcc:	add	r3, pc, #892	; 0x37c
   2ddd0:	ldrd	r2, [r3]
   2ddd4:	strd	r4, [sp, #72]	; 0x48
   2ddd8:	adds	r4, r4, r2
   2dddc:	adc	r5, r5, r3
   2dde0:	adds	r6, r6, r4
   2dde4:	adc	r7, r7, r5
   2dde8:	adds	r0, r0, r6
   2ddec:	adc	r1, r1, r7
   2ddf0:	ldrd	r4, [sp, #16]
   2ddf4:	lsr	r3, r4, #14
   2ddf8:	orr	ip, r3, r5, lsl #18
   2ddfc:	add	r3, sp, #6784	; 0x1a80
   2de00:	add	r3, r3, #40	; 0x28
   2de04:	str	ip, [r3]
   2de08:	lsr	r3, r5, #14
   2de0c:	orr	ip, r3, r4, lsl #18
   2de10:	add	r3, sp, #6784	; 0x1a80
   2de14:	add	r3, r3, #44	; 0x2c
   2de18:	str	ip, [r3]
   2de1c:	lsr	r3, r4, #18
   2de20:	orr	ip, r3, r5, lsl #14
   2de24:	add	r3, sp, #6784	; 0x1a80
   2de28:	add	r3, r3, #48	; 0x30
   2de2c:	str	ip, [r3]
   2de30:	lsr	r3, r5, #18
   2de34:	orr	ip, r3, r4, lsl #14
   2de38:	add	r3, sp, #6784	; 0x1a80
   2de3c:	add	r3, r3, #52	; 0x34
   2de40:	str	ip, [r3]
   2de44:	add	r3, sp, #6784	; 0x1a80
   2de48:	add	r3, r3, #40	; 0x28
   2de4c:	ldrd	r2, [r3]
   2de50:	add	ip, sp, #6784	; 0x1a80
   2de54:	add	ip, ip, #48	; 0x30
   2de58:	ldrd	sl, [ip]
   2de5c:	eor	r2, r2, sl
   2de60:	eor	r3, r3, fp
   2de64:	mov	r6, r2
   2de68:	mov	r7, r3
   2de6c:	lsl	r3, r5, #23
   2de70:	orr	ip, r3, r4, lsr #9
   2de74:	add	r3, sp, #6784	; 0x1a80
   2de78:	add	r3, r3, #60	; 0x3c
   2de7c:	str	ip, [r3]
   2de80:	lsl	r3, r4, #23
   2de84:	orr	ip, r3, r5, lsr #9
   2de88:	add	r3, sp, #6784	; 0x1a80
   2de8c:	add	r3, r3, #56	; 0x38
   2de90:	str	ip, [r3]
   2de94:	ldrd	r2, [r3]
   2de98:	eor	r2, r2, r6
   2de9c:	eor	r3, r3, r7
   2dea0:	adds	r6, r0, r2
   2dea4:	adc	r7, r1, r3
   2dea8:	ldrd	r2, [sp]
   2deac:	adds	r2, r2, r6
   2deb0:	adc	r3, r3, r7
   2deb4:	strd	r2, [sp, #32]
   2deb8:	ldrd	r4, [sp, #24]
   2debc:	lsr	r3, r4, #28
   2dec0:	orr	r1, r3, r5, lsl #4
   2dec4:	add	r3, sp, #6848	; 0x1ac0
   2dec8:	str	r1, [r3]
   2decc:	lsr	r3, r5, #28
   2ded0:	orr	r1, r3, r4, lsl #4
   2ded4:	add	r3, sp, #6848	; 0x1ac0
   2ded8:	add	r3, r3, #4
   2dedc:	str	r1, [r3]
   2dee0:	lsl	r3, r5, #30
   2dee4:	orr	r1, r3, r4, lsr #2
   2dee8:	add	r3, sp, #6848	; 0x1ac0
   2deec:	add	r3, r3, #12
   2def0:	str	r1, [r3]
   2def4:	lsl	r3, r4, #30
   2def8:	orr	r1, r3, r5, lsr #2
   2defc:	add	r3, sp, #6848	; 0x1ac0
   2df00:	add	r3, r3, #8
   2df04:	str	r1, [r3]
   2df08:	add	r3, sp, #6848	; 0x1ac0
   2df0c:	ldrd	r2, [r3]
   2df10:	add	r1, sp, #6848	; 0x1ac0
   2df14:	add	r1, r1, #8
   2df18:	ldrd	sl, [r1]
   2df1c:	eor	r2, r2, sl
   2df20:	eor	r3, r3, fp
   2df24:	mov	r0, r2
   2df28:	mov	r1, r3
   2df2c:	lsl	r3, r5, #25
   2df30:	orr	ip, r3, r4, lsr #7
   2df34:	add	r3, sp, #6848	; 0x1ac0
   2df38:	add	r3, r3, #20
   2df3c:	str	ip, [r3]
   2df40:	lsl	r3, r4, #25
   2df44:	orr	ip, r3, r5, lsr #7
   2df48:	add	r3, sp, #6848	; 0x1ac0
   2df4c:	add	r3, r3, #16
   2df50:	str	ip, [r3]
   2df54:	ldrd	r2, [r3]
   2df58:	eor	r2, r2, r0
   2df5c:	eor	r3, r3, r1
   2df60:	mov	r4, r2
   2df64:	mov	r5, r3
   2df68:	ldrd	sl, [sp, #8]
   2df6c:	ldrd	r0, [sp, #24]
   2df70:	orr	r2, sl, r0
   2df74:	orr	r3, fp, r1
   2df78:	ldrd	r0, [sp, #40]	; 0x28
   2df7c:	and	r0, r0, r2
   2df80:	and	r1, r1, r3
   2df84:	mov	r2, r0
   2df88:	mov	r3, r1
   2df8c:	mov	r0, sl
   2df90:	mov	r1, fp
   2df94:	ldrd	sl, [sp, #24]
   2df98:	and	r0, r0, sl
   2df9c:	and	r1, r1, fp
   2dfa0:	orr	r2, r2, r0
   2dfa4:	orr	r3, r3, r1
   2dfa8:	adds	r2, r2, r4
   2dfac:	adc	r3, r3, r5
   2dfb0:	adds	r0, r6, r2
   2dfb4:	adc	r1, r7, r3
   2dfb8:	strd	r0, [sp]
   2dfbc:	ldrd	r6, [sp, #168]	; 0xa8
   2dfc0:	lsr	r3, r6, #1
   2dfc4:	orr	r1, r3, r7, lsl #31
   2dfc8:	add	r3, sp, #6848	; 0x1ac0
   2dfcc:	add	r3, r3, #24
   2dfd0:	str	r1, [r3]
   2dfd4:	lsr	r3, r7, #1
   2dfd8:	orr	r1, r3, r6, lsl #31
   2dfdc:	add	r3, sp, #6848	; 0x1ac0
   2dfe0:	add	r3, r3, #28
   2dfe4:	str	r1, [r3]
   2dfe8:	lsr	r3, r6, #8
   2dfec:	orr	r1, r3, r7, lsl #24
   2dff0:	add	r3, sp, #6848	; 0x1ac0
   2dff4:	add	r3, r3, #32
   2dff8:	str	r1, [r3]
   2dffc:	lsr	r3, r7, #8
   2e000:	orr	r1, r3, r6, lsl #24
   2e004:	add	r3, sp, #6848	; 0x1ac0
   2e008:	add	r3, r3, #36	; 0x24
   2e00c:	str	r1, [r3]
   2e010:	add	r3, sp, #6848	; 0x1ac0
   2e014:	add	r3, r3, #24
   2e018:	ldrd	r2, [r3]
   2e01c:	add	r1, sp, #6848	; 0x1ac0
   2e020:	add	r1, r1, #32
   2e024:	ldrd	r0, [r1]
   2e028:	eor	r2, r2, r0
   2e02c:	eor	r3, r3, r1
   2e030:	lsr	r1, r6, #7
   2e034:	orr	r1, r1, r7, lsl #25
   2e038:	str	r1, [sp, #1176]	; 0x498
   2e03c:	lsr	r1, r7, #7
   2e040:	str	r1, [sp, #1180]	; 0x49c
   2e044:	add	r1, sp, #1168	; 0x490
   2e048:	add	r1, r1, #8
   2e04c:	ldrd	r6, [r1]
   2e050:	eor	r6, r6, r2
   2e054:	eor	r7, r7, r3
   2e058:	mov	r2, r6
   2e05c:	mov	r3, r7
   2e060:	ldrd	r6, [sp, #128]	; 0x80
   2e064:	adds	r6, r6, r2
   2e068:	adc	r7, r7, r3
   2e06c:	mov	r2, r6
   2e070:	mov	r3, r7
   2e074:	ldrd	r6, [sp, #64]	; 0x40
   2e078:	adds	r6, r6, r2
   2e07c:	adc	r7, r7, r3
   2e080:	mov	r2, r6
   2e084:	mov	r3, r7
   2e088:	ldrd	r6, [sp, #48]	; 0x30
   2e08c:	lsr	r1, r6, #19
   2e090:	orr	r1, r1, r7, lsl #13
   2e094:	add	r0, sp, #6848	; 0x1ac0
   2e098:	add	r0, r0, #40	; 0x28
   2e09c:	str	r1, [r0]
   2e0a0:	lsr	r1, r7, #19
   2e0a4:	orr	r1, r1, r6, lsl #13
   2e0a8:	add	r0, sp, #6848	; 0x1ac0
   2e0ac:	add	r0, r0, #44	; 0x2c
   2e0b0:	str	r1, [r0]
   2e0b4:	lsl	r1, r7, #3
   2e0b8:	orr	r1, r1, r6, lsr #29
   2e0bc:	add	r0, sp, #6848	; 0x1ac0
   2e0c0:	add	r0, r0, #52	; 0x34
   2e0c4:	str	r1, [r0]
   2e0c8:	lsl	r1, r6, #3
   2e0cc:	orr	r1, r1, r7, lsr #29
   2e0d0:	add	r0, sp, #6848	; 0x1ac0
   2e0d4:	add	r0, r0, #48	; 0x30
   2e0d8:	str	r1, [r0]
   2e0dc:	add	r1, sp, #6848	; 0x1ac0
   2e0e0:	add	r1, r1, #40	; 0x28
   2e0e4:	ldrd	r0, [r1]
   2e0e8:	add	ip, sp, #6848	; 0x1ac0
   2e0ec:	add	ip, ip, #48	; 0x30
   2e0f0:	ldrd	r4, [ip]
   2e0f4:	eor	r0, r0, r4
   2e0f8:	eor	r1, r1, r5
   2e0fc:	lsr	ip, r6, #6
   2e100:	orr	ip, ip, r7, lsl #26
   2e104:	str	ip, [sp, #1184]	; 0x4a0
   2e108:	lsr	ip, r7, #6
   2e10c:	str	ip, [sp, #1188]	; 0x4a4
   2e110:	add	ip, sp, #1184	; 0x4a0
   2e114:	ldrd	r6, [ip]
   2e118:	eor	r6, r6, r0
   2e11c:	eor	r7, r7, r1
   2e120:	adds	r4, r2, r6
   2e124:	adc	r5, r3, r7
   2e128:	strd	r4, [sp, #48]	; 0x30
   2e12c:	mov	r2, r4
   2e130:	mov	r3, r5
   2e134:	add	r1, sp, #7168	; 0x1c00
   2e138:	add	r1, r1, #56	; 0x38
   2e13c:	strd	r2, [r1]
   2e140:	ldrd	r4, [sp, #56]	; 0x38
   2e144:	ldrd	r6, [sp, #16]
   2e148:	b	2e160 <__assert_fail@plt+0x1ce74>
   2e14c:	nop			; (mov r0, r0)
   2e150:	blgt	fbec30 <optarg@@GLIBC_2.4+0xf74a88>
   2e154:	cfstrdmi	mvd13, [r5], {190}	; 0xbe
   2e158:	stc2l	14, cr7, [r5], #-168	; 0xffffff58
   2e15c:	ldmdbpl	pc!, {r2, r3, r4, r7, r8, fp, sp}^	; <UNPREDICTABLE>
   2e160:	eor	r6, r6, r4
   2e164:	eor	r7, r7, r5
   2e168:	mov	r0, r6
   2e16c:	mov	r1, r7
   2e170:	ldrd	r6, [sp, #32]
   2e174:	and	r6, r6, r0
   2e178:	and	r7, r7, r1
   2e17c:	mov	r2, r4
   2e180:	mov	r3, r5
   2e184:	eor	r2, r2, r6
   2e188:	eor	r3, r3, r7
   2e18c:	mov	r0, r2
   2e190:	mov	r1, r3
   2e194:	sub	r3, pc, #68	; 0x44
   2e198:	ldrd	r2, [r3]
   2e19c:	ldrd	r6, [sp, #48]	; 0x30
   2e1a0:	adds	r6, r6, r2
   2e1a4:	adc	r7, r7, r3
   2e1a8:	adds	r2, r6, r8
   2e1ac:	adc	r3, r7, r9
   2e1b0:	adds	r0, r0, r2
   2e1b4:	adc	r1, r1, r3
   2e1b8:	ldrd	r8, [sp, #32]
   2e1bc:	lsr	r3, r8, #14
   2e1c0:	orr	ip, r3, r9, lsl #18
   2e1c4:	add	r3, sp, #6848	; 0x1ac0
   2e1c8:	add	r3, r3, #56	; 0x38
   2e1cc:	str	ip, [r3]
   2e1d0:	lsr	r3, r9, #14
   2e1d4:	orr	ip, r3, r8, lsl #18
   2e1d8:	add	r3, sp, #6848	; 0x1ac0
   2e1dc:	add	r3, r3, #60	; 0x3c
   2e1e0:	str	ip, [r3]
   2e1e4:	lsr	r3, r8, #18
   2e1e8:	orr	ip, r3, r9, lsl #14
   2e1ec:	add	r3, sp, #6912	; 0x1b00
   2e1f0:	str	ip, [r3]
   2e1f4:	lsr	r3, r9, #18
   2e1f8:	orr	ip, r3, r8, lsl #14
   2e1fc:	add	r3, sp, #6912	; 0x1b00
   2e200:	add	r3, r3, #4
   2e204:	str	ip, [r3]
   2e208:	add	r3, sp, #6848	; 0x1ac0
   2e20c:	add	r3, r3, #56	; 0x38
   2e210:	ldrd	r2, [r3]
   2e214:	add	ip, sp, #6912	; 0x1b00
   2e218:	ldrd	r6, [ip]
   2e21c:	eor	r2, r2, r6
   2e220:	eor	r3, r3, r7
   2e224:	lsl	ip, r9, #23
   2e228:	orr	ip, ip, r8, lsr #9
   2e22c:	add	r6, sp, #6912	; 0x1b00
   2e230:	add	r6, r6, #12
   2e234:	str	ip, [r6]
   2e238:	lsl	ip, r8, #23
   2e23c:	orr	ip, ip, r9, lsr #9
   2e240:	add	r6, sp, #6912	; 0x1b00
   2e244:	add	r6, r6, #8
   2e248:	str	ip, [r6]
   2e24c:	ldrd	r6, [r6]
   2e250:	eor	r6, r6, r2
   2e254:	eor	r7, r7, r3
   2e258:	adds	r8, r0, r6
   2e25c:	adc	r9, r1, r7
   2e260:	mov	r2, r8
   2e264:	mov	r3, r9
   2e268:	ldrd	r0, [sp, #40]	; 0x28
   2e26c:	strd	r2, [sp, #40]	; 0x28
   2e270:	adds	r2, r8, r0
   2e274:	adc	r3, r9, r1
   2e278:	mov	r6, r2
   2e27c:	mov	r7, r3
   2e280:	ldrd	r8, [sp]
   2e284:	lsr	r3, r8, #28
   2e288:	orr	r1, r3, r9, lsl #4
   2e28c:	add	r3, sp, #6912	; 0x1b00
   2e290:	add	r3, r3, #16
   2e294:	str	r1, [r3]
   2e298:	lsr	r3, r9, #28
   2e29c:	orr	r1, r3, r8, lsl #4
   2e2a0:	add	r3, sp, #6912	; 0x1b00
   2e2a4:	add	r3, r3, #20
   2e2a8:	str	r1, [r3]
   2e2ac:	lsl	r3, r9, #30
   2e2b0:	orr	r1, r3, r8, lsr #2
   2e2b4:	add	r3, sp, #6912	; 0x1b00
   2e2b8:	add	r3, r3, #28
   2e2bc:	str	r1, [r3]
   2e2c0:	lsl	r3, r8, #30
   2e2c4:	orr	r1, r3, r9, lsr #2
   2e2c8:	add	r3, sp, #6912	; 0x1b00
   2e2cc:	add	r3, r3, #24
   2e2d0:	str	r1, [r3]
   2e2d4:	add	r3, sp, #6912	; 0x1b00
   2e2d8:	add	r3, r3, #16
   2e2dc:	ldrd	r2, [r3]
   2e2e0:	add	r1, sp, #6912	; 0x1b00
   2e2e4:	add	r1, r1, #24
   2e2e8:	ldrd	r8, [r1]
   2e2ec:	eor	r2, r2, r8
   2e2f0:	eor	r3, r3, r9
   2e2f4:	ldrd	r8, [sp]
   2e2f8:	lsl	r1, r9, #25
   2e2fc:	orr	r1, r1, r8, lsr #7
   2e300:	add	r0, sp, #6912	; 0x1b00
   2e304:	add	r0, r0, #36	; 0x24
   2e308:	str	r1, [r0]
   2e30c:	lsl	r1, r8, #25
   2e310:	orr	r1, r1, r9, lsr #7
   2e314:	add	r0, sp, #6912	; 0x1b00
   2e318:	add	r0, r0, #32
   2e31c:	str	r1, [r0]
   2e320:	ldrd	r8, [r0]
   2e324:	eor	r8, r8, r2
   2e328:	eor	r9, r9, r3
   2e32c:	mov	r2, r8
   2e330:	mov	r3, r9
   2e334:	ldrd	r0, [sp]
   2e338:	orr	r0, r0, sl
   2e33c:	orr	r1, r1, fp
   2e340:	ldrd	r8, [sp, #8]
   2e344:	and	r8, r8, r0
   2e348:	and	r9, r9, r1
   2e34c:	mov	r0, r8
   2e350:	mov	r1, r9
   2e354:	mov	r8, sl
   2e358:	mov	r9, fp
   2e35c:	ldrd	sl, [sp]
   2e360:	and	sl, sl, r8
   2e364:	and	fp, fp, r9
   2e368:	orr	r8, sl, r0
   2e36c:	orr	r9, fp, r1
   2e370:	adds	r0, r8, r2
   2e374:	adc	r1, r9, r3
   2e378:	ldrd	r8, [sp, #40]	; 0x28
   2e37c:	adds	r8, r8, r0
   2e380:	adc	r9, r9, r1
   2e384:	ldrd	r0, [sp, #144]	; 0x90
   2e388:	lsr	r3, r0, #1
   2e38c:	orr	ip, r3, r1, lsl #31
   2e390:	add	r3, sp, #6912	; 0x1b00
   2e394:	add	r3, r3, #40	; 0x28
   2e398:	str	ip, [r3]
   2e39c:	lsr	r3, r1, #1
   2e3a0:	orr	ip, r3, r0, lsl #31
   2e3a4:	add	r3, sp, #6912	; 0x1b00
   2e3a8:	add	r3, r3, #44	; 0x2c
   2e3ac:	str	ip, [r3]
   2e3b0:	lsr	r3, r0, #8
   2e3b4:	orr	ip, r3, r1, lsl #24
   2e3b8:	add	r3, sp, #6912	; 0x1b00
   2e3bc:	add	r3, r3, #48	; 0x30
   2e3c0:	str	ip, [r3]
   2e3c4:	lsr	r3, r1, #8
   2e3c8:	orr	ip, r3, r0, lsl #24
   2e3cc:	add	r3, sp, #6912	; 0x1b00
   2e3d0:	add	r3, r3, #52	; 0x34
   2e3d4:	str	ip, [r3]
   2e3d8:	add	r3, sp, #6912	; 0x1b00
   2e3dc:	add	r3, r3, #40	; 0x28
   2e3e0:	ldrd	r2, [r3]
   2e3e4:	add	ip, sp, #6912	; 0x1b00
   2e3e8:	add	ip, ip, #48	; 0x30
   2e3ec:	ldrd	sl, [ip]
   2e3f0:	eor	r2, r2, sl
   2e3f4:	eor	r3, r3, fp
   2e3f8:	lsr	ip, r0, #7
   2e3fc:	orr	ip, ip, r1, lsl #25
   2e400:	str	ip, [sp, #1192]	; 0x4a8
   2e404:	lsr	r1, r1, #7
   2e408:	str	r1, [sp, #1196]	; 0x4ac
   2e40c:	add	r1, sp, #1184	; 0x4a0
   2e410:	add	r1, r1, #8
   2e414:	ldrd	r0, [r1]
   2e418:	eor	r0, r0, r2
   2e41c:	eor	r1, r1, r3
   2e420:	mov	r2, r0
   2e424:	mov	r3, r1
   2e428:	ldrd	r0, [sp, #168]	; 0xa8
   2e42c:	adds	r0, r0, r2
   2e430:	adc	r1, r1, r3
   2e434:	mov	r2, r0
   2e438:	mov	r3, r1
   2e43c:	ldrd	r0, [sp, #96]	; 0x60
   2e440:	adds	r0, r0, r2
   2e444:	adc	r1, r1, r3
   2e448:	mov	r2, r0
   2e44c:	mov	r3, r1
   2e450:	ldrd	sl, [sp, #72]	; 0x48
   2e454:	lsr	r1, sl, #19
   2e458:	orr	r1, r1, fp, lsl #13
   2e45c:	add	r0, sp, #6912	; 0x1b00
   2e460:	add	r0, r0, #56	; 0x38
   2e464:	str	r1, [r0]
   2e468:	lsr	r1, fp, #19
   2e46c:	orr	r1, r1, sl, lsl #13
   2e470:	add	r0, sp, #6912	; 0x1b00
   2e474:	add	r0, r0, #60	; 0x3c
   2e478:	str	r1, [r0]
   2e47c:	lsl	r1, fp, #3
   2e480:	orr	r1, r1, sl, lsr #29
   2e484:	add	r0, sp, #6976	; 0x1b40
   2e488:	add	r0, r0, #4
   2e48c:	str	r1, [r0]
   2e490:	lsl	r1, sl, #3
   2e494:	orr	r1, r1, fp, lsr #29
   2e498:	add	r0, sp, #6976	; 0x1b40
   2e49c:	str	r1, [r0]
   2e4a0:	add	r1, sp, #6912	; 0x1b00
   2e4a4:	add	r1, r1, #56	; 0x38
   2e4a8:	ldrd	r0, [r1]
   2e4ac:	add	ip, sp, #6976	; 0x1b40
   2e4b0:	ldrd	sl, [ip]
   2e4b4:	eor	r0, r0, sl
   2e4b8:	eor	r1, r1, fp
   2e4bc:	ldrd	sl, [sp, #72]	; 0x48
   2e4c0:	lsr	ip, sl, #6
   2e4c4:	orr	ip, ip, fp, lsl #26
   2e4c8:	str	ip, [sp, #1200]	; 0x4b0
   2e4cc:	ldr	ip, [sp, #76]	; 0x4c
   2e4d0:	lsr	ip, ip, #6
   2e4d4:	str	ip, [sp, #1204]	; 0x4b4
   2e4d8:	add	ip, sp, #1200	; 0x4b0
   2e4dc:	ldrd	sl, [ip]
   2e4e0:	eor	sl, sl, r0
   2e4e4:	eor	fp, fp, r1
   2e4e8:	adds	r2, r2, sl
   2e4ec:	adc	r3, r3, fp
   2e4f0:	add	r1, sp, #7232	; 0x1c40
   2e4f4:	strd	r2, [r1]
   2e4f8:	ldrd	r0, [sp, #32]
   2e4fc:	ldrd	sl, [sp, #16]
   2e500:	eor	sl, sl, r0
   2e504:	eor	fp, fp, r1
   2e508:	strd	r6, [sp, #40]	; 0x28
   2e50c:	and	r6, r6, sl
   2e510:	and	r7, r7, fp
   2e514:	mov	r0, r6
   2e518:	mov	r1, r7
   2e51c:	ldrd	r6, [sp, #16]
   2e520:	eor	r6, r6, r0
   2e524:	eor	r7, r7, r1
   2e528:	add	fp, pc, #904	; 0x388
   2e52c:	ldrd	sl, [fp]
   2e530:	adds	sl, sl, r2
   2e534:	adc	fp, fp, r3
   2e538:	adds	r4, r4, sl
   2e53c:	adc	r5, r5, fp
   2e540:	adds	r0, r6, r4
   2e544:	adc	r1, r7, r5
   2e548:	ldrd	r6, [sp, #40]	; 0x28
   2e54c:	lsr	r3, r6, #14
   2e550:	orr	r2, r3, r7, lsl #18
   2e554:	add	r3, sp, #6976	; 0x1b40
   2e558:	add	r3, r3, #8
   2e55c:	str	r2, [r3]
   2e560:	lsr	r3, r7, #14
   2e564:	orr	r2, r3, r6, lsl #18
   2e568:	add	r3, sp, #6976	; 0x1b40
   2e56c:	add	r3, r3, #12
   2e570:	str	r2, [r3]
   2e574:	lsr	r3, r6, #18
   2e578:	orr	r2, r3, r7, lsl #14
   2e57c:	add	r3, sp, #6976	; 0x1b40
   2e580:	add	r3, r3, #16
   2e584:	str	r2, [r3]
   2e588:	lsr	r3, r7, #18
   2e58c:	orr	r2, r3, r6, lsl #14
   2e590:	add	r3, sp, #6976	; 0x1b40
   2e594:	add	r3, r3, #20
   2e598:	str	r2, [r3]
   2e59c:	add	r3, sp, #6976	; 0x1b40
   2e5a0:	add	r3, r3, #8
   2e5a4:	ldrd	r2, [r3]
   2e5a8:	add	ip, sp, #6976	; 0x1b40
   2e5ac:	add	ip, ip, #16
   2e5b0:	ldrd	sl, [ip]
   2e5b4:	eor	r2, r2, sl
   2e5b8:	eor	r3, r3, fp
   2e5bc:	lsl	ip, r7, #23
   2e5c0:	orr	ip, ip, r6, lsr #9
   2e5c4:	add	r4, sp, #6976	; 0x1b40
   2e5c8:	add	r4, r4, #28
   2e5cc:	str	ip, [r4]
   2e5d0:	lsl	ip, r6, #23
   2e5d4:	orr	ip, ip, r7, lsr #9
   2e5d8:	add	r4, sp, #6976	; 0x1b40
   2e5dc:	add	r4, r4, #24
   2e5e0:	str	ip, [r4]
   2e5e4:	ldrd	sl, [r4]
   2e5e8:	eor	sl, sl, r2
   2e5ec:	eor	fp, fp, r3
   2e5f0:	adds	r4, r0, sl
   2e5f4:	adc	r5, r1, fp
   2e5f8:	mov	r2, r4
   2e5fc:	mov	r3, r5
   2e600:	ldrd	r0, [sp, #8]
   2e604:	strd	r2, [sp, #8]
   2e608:	adds	r0, r0, r4
   2e60c:	adc	r1, r1, r5
   2e610:	mov	sl, r0
   2e614:	mov	fp, r1
   2e618:	lsr	r3, r8, #28
   2e61c:	orr	r1, r3, r9, lsl #4
   2e620:	add	r3, sp, #6976	; 0x1b40
   2e624:	add	r3, r3, #32
   2e628:	str	r1, [r3]
   2e62c:	lsr	r3, r9, #28
   2e630:	orr	r1, r3, r8, lsl #4
   2e634:	add	r3, sp, #6976	; 0x1b40
   2e638:	add	r3, r3, #36	; 0x24
   2e63c:	str	r1, [r3]
   2e640:	lsl	r3, r9, #30
   2e644:	orr	r1, r3, r8, lsr #2
   2e648:	add	r3, sp, #6976	; 0x1b40
   2e64c:	add	r3, r3, #44	; 0x2c
   2e650:	str	r1, [r3]
   2e654:	lsl	r3, r8, #30
   2e658:	orr	r1, r3, r9, lsr #2
   2e65c:	add	r3, sp, #6976	; 0x1b40
   2e660:	add	r3, r3, #40	; 0x28
   2e664:	str	r1, [r3]
   2e668:	add	r3, sp, #6976	; 0x1b40
   2e66c:	add	r3, r3, #32
   2e670:	ldrd	r2, [r3]
   2e674:	add	r1, sp, #6976	; 0x1b40
   2e678:	add	r1, r1, #40	; 0x28
   2e67c:	ldrd	r0, [r1]
   2e680:	eor	r2, r2, r0
   2e684:	eor	r3, r3, r1
   2e688:	lsl	r1, r9, #25
   2e68c:	orr	r1, r1, r8, lsr #7
   2e690:	add	r0, sp, #6976	; 0x1b40
   2e694:	add	r0, r0, #52	; 0x34
   2e698:	str	r1, [r0]
   2e69c:	lsl	r1, r8, #25
   2e6a0:	orr	r1, r1, r9, lsr #7
   2e6a4:	add	r0, sp, #6976	; 0x1b40
   2e6a8:	add	r0, r0, #48	; 0x30
   2e6ac:	str	r1, [r0]
   2e6b0:	ldrd	r0, [r0]
   2e6b4:	eor	r0, r0, r2
   2e6b8:	eor	r1, r1, r3
   2e6bc:	mov	r2, r0
   2e6c0:	mov	r3, r1
   2e6c4:	ldrd	r0, [sp]
   2e6c8:	orr	r0, r0, r8
   2e6cc:	orr	r1, r1, r9
   2e6d0:	ldrd	r4, [sp, #24]
   2e6d4:	and	r4, r4, r0
   2e6d8:	and	r5, r5, r1
   2e6dc:	mov	r0, r4
   2e6e0:	mov	r1, r5
   2e6e4:	ldrd	r4, [sp]
   2e6e8:	and	r4, r4, r8
   2e6ec:	and	r5, r5, r9
   2e6f0:	orr	r4, r4, r0
   2e6f4:	orr	r5, r5, r1
   2e6f8:	adds	r2, r2, r4
   2e6fc:	adc	r3, r3, r5
   2e700:	ldrd	r0, [sp, #8]
   2e704:	adds	r0, r0, r2
   2e708:	adc	r1, r1, r3
   2e70c:	strd	r0, [sp, #8]
   2e710:	ldrd	r4, [sp, #192]	; 0xc0
   2e714:	lsr	r1, r4, #1
   2e718:	orr	r2, r1, r5, lsl #31
   2e71c:	add	r3, sp, #6976	; 0x1b40
   2e720:	add	r3, r3, #56	; 0x38
   2e724:	str	r2, [r3]
   2e728:	lsr	r1, r5, #1
   2e72c:	orr	r2, r1, r4, lsl #31
   2e730:	add	r3, sp, #6976	; 0x1b40
   2e734:	add	r3, r3, #60	; 0x3c
   2e738:	str	r2, [r3]
   2e73c:	lsr	r1, r4, #8
   2e740:	orr	r2, r1, r5, lsl #24
   2e744:	add	r3, sp, #7040	; 0x1b80
   2e748:	str	r2, [r3]
   2e74c:	lsr	r1, r5, #8
   2e750:	orr	r2, r1, r4, lsl #24
   2e754:	add	r3, sp, #7040	; 0x1b80
   2e758:	add	r3, r3, #4
   2e75c:	str	r2, [r3]
   2e760:	add	r3, sp, #6976	; 0x1b40
   2e764:	add	r3, r3, #56	; 0x38
   2e768:	ldrd	r0, [r3]
   2e76c:	add	r3, sp, #7040	; 0x1b80
   2e770:	ldrd	r2, [r3]
   2e774:	eor	r0, r0, r2
   2e778:	eor	r1, r1, r3
   2e77c:	lsr	r2, r4, #7
   2e780:	orr	r2, r2, r5, lsl #25
   2e784:	str	r2, [sp, #1208]	; 0x4b8
   2e788:	lsr	r2, r5, #7
   2e78c:	str	r2, [sp, #1212]	; 0x4bc
   2e790:	add	r3, sp, #1200	; 0x4b0
   2e794:	add	r3, r3, #8
   2e798:	ldrd	r4, [r3]
   2e79c:	eor	r4, r4, r0
   2e7a0:	eor	r5, r5, r1
   2e7a4:	mov	r0, r4
   2e7a8:	mov	r1, r5
   2e7ac:	ldrd	r4, [sp, #144]	; 0x90
   2e7b0:	adds	r4, r4, r0
   2e7b4:	adc	r5, r5, r1
   2e7b8:	mov	r0, r4
   2e7bc:	mov	r1, r5
   2e7c0:	ldrd	r4, [sp, #80]	; 0x50
   2e7c4:	adds	r4, r4, r0
   2e7c8:	adc	r5, r5, r1
   2e7cc:	mov	r0, r4
   2e7d0:	mov	r1, r5
   2e7d4:	ldrd	r4, [sp, #48]	; 0x30
   2e7d8:	lsr	ip, r4, #19
   2e7dc:	orr	r2, ip, r5, lsl #13
   2e7e0:	add	r3, sp, #7040	; 0x1b80
   2e7e4:	add	r3, r3, #8
   2e7e8:	str	r2, [r3]
   2e7ec:	lsr	ip, r5, #19
   2e7f0:	orr	r2, ip, r4, lsl #13
   2e7f4:	add	r3, sp, #7040	; 0x1b80
   2e7f8:	add	r3, r3, #12
   2e7fc:	str	r2, [r3]
   2e800:	lsl	ip, r5, #3
   2e804:	orr	r2, ip, r4, lsr #29
   2e808:	add	r3, sp, #7040	; 0x1b80
   2e80c:	add	r3, r3, #20
   2e810:	str	r2, [r3]
   2e814:	lsl	ip, r4, #3
   2e818:	orr	r2, ip, r5, lsr #29
   2e81c:	add	r3, sp, #7040	; 0x1b80
   2e820:	add	r3, r3, #16
   2e824:	str	r2, [r3]
   2e828:	add	r3, sp, #7040	; 0x1b80
   2e82c:	add	r3, r3, #8
   2e830:	ldrd	r4, [r3]
   2e834:	add	r3, sp, #7040	; 0x1b80
   2e838:	add	r3, r3, #16
   2e83c:	ldrd	r2, [r3]
   2e840:	eor	r4, r4, r2
   2e844:	eor	r5, r5, r3
   2e848:	ldr	r3, [sp, #48]	; 0x30
   2e84c:	lsr	r2, r3, #6
   2e850:	ldr	r3, [sp, #52]	; 0x34
   2e854:	orr	r2, r2, r3, lsl #26
   2e858:	str	r2, [sp, #1216]	; 0x4c0
   2e85c:	lsr	r2, r3, #6
   2e860:	str	r2, [sp, #1220]	; 0x4c4
   2e864:	add	r3, sp, #1216	; 0x4c0
   2e868:	ldrd	r2, [r3]
   2e86c:	eor	r2, r2, r4
   2e870:	eor	r3, r3, r5
   2e874:	adds	r0, r0, r2
   2e878:	adc	r1, r1, r3
   2e87c:	add	r3, sp, #7232	; 0x1c40
   2e880:	add	r3, r3, #8
   2e884:	strd	r0, [r3]
   2e888:	ldrd	r2, [sp, #32]
   2e88c:	mov	r4, r2
   2e890:	mov	r5, r3
   2e894:	eor	r4, r4, r6
   2e898:	eor	r5, r5, r7
   2e89c:	strd	sl, [sp, #40]	; 0x28
   2e8a0:	and	sl, sl, r4
   2e8a4:	and	fp, fp, r5
   2e8a8:	mov	r4, sl
   2e8ac:	mov	r5, fp
   2e8b0:	b	2e8c8 <__assert_fail@plt+0x1d5dc>
   2e8b4:	nop			; (mov r0, r0)
   2e8b8:	bcc	ff5ed470 <optarg@@GLIBC_2.4+0xff5a32c8>
   2e8bc:	svcpl	0x00cb6fab
   2e8c0:	bmi	1204924 <optarg@@GLIBC_2.4+0x11ba77c>
   2e8c4:	mcrrvs	9, 8, r1, r4, cr12	; <UNPREDICTABLE>
   2e8c8:	mov	sl, r2
   2e8cc:	mov	fp, r3
   2e8d0:	eor	sl, sl, r4
   2e8d4:	eor	fp, fp, r5
   2e8d8:	sub	r3, pc, #32
   2e8dc:	ldrd	r2, [r3]
   2e8e0:	adds	r2, r2, r0
   2e8e4:	adc	r3, r3, r1
   2e8e8:	mov	r0, r2
   2e8ec:	mov	r1, r3
   2e8f0:	ldrd	r2, [sp, #16]
   2e8f4:	adds	r2, r2, r0
   2e8f8:	adc	r3, r3, r1
   2e8fc:	adds	r4, sl, r2
   2e900:	adc	r5, fp, r3
   2e904:	ldrd	sl, [sp, #40]	; 0x28
   2e908:	lsr	r1, sl, #14
   2e90c:	orr	r2, r1, fp, lsl #18
   2e910:	add	r3, sp, #7040	; 0x1b80
   2e914:	add	r3, r3, #24
   2e918:	str	r2, [r3]
   2e91c:	lsr	r1, fp, #14
   2e920:	orr	r2, r1, sl, lsl #18
   2e924:	add	r3, sp, #7040	; 0x1b80
   2e928:	add	r3, r3, #28
   2e92c:	str	r2, [r3]
   2e930:	lsr	r1, sl, #18
   2e934:	orr	r2, r1, fp, lsl #14
   2e938:	add	r3, sp, #7040	; 0x1b80
   2e93c:	add	r3, r3, #32
   2e940:	str	r2, [r3]
   2e944:	lsr	r1, fp, #18
   2e948:	orr	r2, r1, sl, lsl #14
   2e94c:	add	r3, sp, #7040	; 0x1b80
   2e950:	add	r3, r3, #36	; 0x24
   2e954:	str	r2, [r3]
   2e958:	add	r3, sp, #7040	; 0x1b80
   2e95c:	add	r3, r3, #24
   2e960:	ldrd	r2, [r3]
   2e964:	add	r1, sp, #7040	; 0x1b80
   2e968:	add	r1, r1, #32
   2e96c:	ldrd	r0, [r1]
   2e970:	eor	r2, r2, r0
   2e974:	eor	r3, r3, r1
   2e978:	mov	sl, r2
   2e97c:	mov	fp, r3
   2e980:	ldr	r2, [sp, #44]	; 0x2c
   2e984:	lsl	r1, r2, #23
   2e988:	ldr	r2, [sp, #40]	; 0x28
   2e98c:	orr	r2, r1, r2, lsr #9
   2e990:	add	r3, sp, #7040	; 0x1b80
   2e994:	add	r3, r3, #44	; 0x2c
   2e998:	str	r2, [r3]
   2e99c:	ldr	r2, [sp, #40]	; 0x28
   2e9a0:	lsl	r1, r2, #23
   2e9a4:	ldr	r2, [sp, #44]	; 0x2c
   2e9a8:	orr	r2, r1, r2, lsr #9
   2e9ac:	add	r3, sp, #7040	; 0x1b80
   2e9b0:	add	r3, r3, #40	; 0x28
   2e9b4:	str	r2, [r3]
   2e9b8:	ldrd	r2, [r3]
   2e9bc:	eor	r2, r2, sl
   2e9c0:	eor	r3, r3, fp
   2e9c4:	adds	sl, r2, r4
   2e9c8:	adc	fp, r3, r5
   2e9cc:	ldrd	r4, [sp, #8]
   2e9d0:	lsr	r1, r4, #28
   2e9d4:	orr	r2, r1, r5, lsl #4
   2e9d8:	add	r3, sp, #7040	; 0x1b80
   2e9dc:	add	r3, r3, #48	; 0x30
   2e9e0:	str	r2, [r3]
   2e9e4:	lsr	r1, r5, #28
   2e9e8:	orr	r2, r1, r4, lsl #4
   2e9ec:	add	r3, sp, #7040	; 0x1b80
   2e9f0:	add	r3, r3, #52	; 0x34
   2e9f4:	str	r2, [r3]
   2e9f8:	lsl	r1, r5, #30
   2e9fc:	orr	r2, r1, r4, lsr #2
   2ea00:	add	r3, sp, #7040	; 0x1b80
   2ea04:	add	r3, r3, #60	; 0x3c
   2ea08:	str	r2, [r3]
   2ea0c:	lsl	r1, r4, #30
   2ea10:	orr	r2, r1, r5, lsr #2
   2ea14:	add	r3, sp, #7040	; 0x1b80
   2ea18:	add	r3, r3, #56	; 0x38
   2ea1c:	str	r2, [r3]
   2ea20:	add	r3, sp, #7040	; 0x1b80
   2ea24:	add	r3, r3, #48	; 0x30
   2ea28:	ldrd	r2, [r3]
   2ea2c:	add	r1, sp, #7040	; 0x1b80
   2ea30:	add	r1, r1, #56	; 0x38
   2ea34:	ldrd	r0, [r1]
   2ea38:	eor	r2, r2, r0
   2ea3c:	eor	r3, r3, r1
   2ea40:	mov	r4, r2
   2ea44:	mov	r5, r3
   2ea48:	ldrd	r2, [sp, #8]
   2ea4c:	lsl	r1, r3, #25
   2ea50:	orr	r2, r1, r2, lsr #7
   2ea54:	add	r3, sp, #7104	; 0x1bc0
   2ea58:	add	r3, r3, #4
   2ea5c:	str	r2, [r3]
   2ea60:	ldrd	r2, [sp, #8]
   2ea64:	lsl	r1, r2, #25
   2ea68:	orr	r2, r1, r3, lsr #7
   2ea6c:	add	r3, sp, #7104	; 0x1bc0
   2ea70:	str	r2, [r3]
   2ea74:	ldrd	r2, [r3]
   2ea78:	eor	r2, r2, r4
   2ea7c:	eor	r3, r3, r5
   2ea80:	mov	r4, r2
   2ea84:	mov	r5, r3
   2ea88:	ldrd	r0, [sp, #8]
   2ea8c:	orr	r0, r0, r8
   2ea90:	orr	r1, r1, r9
   2ea94:	ldrd	r2, [sp]
   2ea98:	and	r2, r2, r0
   2ea9c:	and	r3, r3, r1
   2eaa0:	mov	r0, r2
   2eaa4:	mov	r1, r3
   2eaa8:	ldrd	r2, [sp, #8]
   2eaac:	and	r2, r2, r8
   2eab0:	and	r3, r3, r9
   2eab4:	orr	r2, r2, r0
   2eab8:	orr	r3, r3, r1
   2eabc:	adds	r4, r4, r2
   2eac0:	adc	r5, r5, r3
   2eac4:	ldrd	r0, [lr]
   2eac8:	adds	r4, r4, r0
   2eacc:	adc	r5, r5, r1
   2ead0:	adds	r4, r4, sl
   2ead4:	adc	r5, r5, fp
   2ead8:	strd	r4, [lr]
   2eadc:	ldrd	r0, [lr, #8]
   2eae0:	ldrd	r2, [sp, #8]
   2eae4:	adds	r2, r2, r0
   2eae8:	adc	r3, r3, r1
   2eaec:	strd	r2, [sp, #48]	; 0x30
   2eaf0:	strd	r2, [lr, #8]
   2eaf4:	ldrd	r2, [lr, #16]
   2eaf8:	adds	r0, r8, r2
   2eafc:	adc	r1, r9, r3
   2eb00:	mov	r2, r0
   2eb04:	mov	r3, r1
   2eb08:	strd	r2, [sp, #16]
   2eb0c:	strd	r2, [lr, #16]
   2eb10:	ldrd	r2, [lr, #24]
   2eb14:	ldrd	r0, [sp]
   2eb18:	adds	r0, r0, r2
   2eb1c:	adc	r1, r1, r3
   2eb20:	mov	r2, r0
   2eb24:	mov	r3, r1
   2eb28:	strd	r2, [sp]
   2eb2c:	strd	r2, [lr, #24]
   2eb30:	ldrd	r2, [lr, #32]
   2eb34:	ldrd	r8, [sp, #24]
   2eb38:	adds	r8, r8, r2
   2eb3c:	adc	r9, r9, r3
   2eb40:	adds	sl, sl, r8
   2eb44:	adc	fp, fp, r9
   2eb48:	strd	sl, [lr, #32]
   2eb4c:	ldrd	r2, [lr, #40]	; 0x28
   2eb50:	ldrd	r0, [sp, #40]	; 0x28
   2eb54:	adds	r0, r0, r2
   2eb58:	adc	r1, r1, r3
   2eb5c:	strd	r0, [sp, #40]	; 0x28
   2eb60:	strd	r0, [lr, #40]	; 0x28
   2eb64:	ldrd	r8, [lr, #48]	; 0x30
   2eb68:	adds	r6, r6, r8
   2eb6c:	adc	r7, r7, r9
   2eb70:	mov	r8, r6
   2eb74:	mov	r9, r7
   2eb78:	strd	r8, [lr, #48]	; 0x30
   2eb7c:	ldrd	r2, [lr, #56]	; 0x38
   2eb80:	ldrd	r6, [sp, #32]
   2eb84:	adds	r6, r6, r2
   2eb88:	adc	r7, r7, r3
   2eb8c:	strd	r6, [lr, #56]	; 0x38
   2eb90:	add	r3, sp, #7104	; 0x1bc0
   2eb94:	add	r3, r3, #12
   2eb98:	ldr	r2, [r3]
   2eb9c:	add	r3, sp, #7104	; 0x1bc0
   2eba0:	add	r3, r3, #8
   2eba4:	ldr	r3, [r3]
   2eba8:	cmp	r2, r3
   2ebac:	bhi	1ee10 <__assert_fail@plt+0xdb24>
   2ebb0:	add	sp, sp, #7232	; 0x1c40
   2ebb4:	add	sp, sp, #20
   2ebb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ebbc:	push	{r4, r5, r6, r7, lr}
   2ebc0:	sub	sp, sp, #20
   2ebc4:	mov	r4, r0
   2ebc8:	ldr	ip, [r0, #80]	; 0x50
   2ebcc:	cmp	ip, #111	; 0x6f
   2ebd0:	movls	lr, #16
   2ebd4:	movhi	lr, #32
   2ebd8:	mov	r3, #0
   2ebdc:	ldrd	r0, [r0, #64]	; 0x40
   2ebe0:	adds	r0, r0, ip
   2ebe4:	adc	r1, r1, r3
   2ebe8:	strd	r0, [r4, #64]	; 0x40
   2ebec:	cmp	r3, r1
   2ebf0:	cmpeq	ip, r0
   2ebf4:	bls	2ec08 <__assert_fail@plt+0x1d91c>
   2ebf8:	ldrd	r2, [r4, #72]	; 0x48
   2ebfc:	adds	r2, r2, #1
   2ec00:	adc	r3, r3, #0
   2ec04:	strd	r2, [r4, #72]	; 0x48
   2ec08:	add	lr, lr, #9
   2ec0c:	lsl	r5, lr, #3
   2ec10:	ldr	r0, [r4, #72]	; 0x48
   2ec14:	ldr	r6, [r4, #76]	; 0x4c
   2ec18:	lsl	r3, r6, #3
   2ec1c:	orr	r3, r3, r0, lsr #29
   2ec20:	lsl	r2, r0, #3
   2ec24:	lsr	r6, r1, #29
   2ec28:	mov	r7, #0
   2ec2c:	orr	r2, r2, r6
   2ec30:	orr	r3, r3, r7
   2ec34:	rev	r2, r2
   2ec38:	rev	r3, r3
   2ec3c:	str	r3, [sp, #8]
   2ec40:	str	r2, [sp, #12]
   2ec44:	add	r2, r4, r5
   2ec48:	add	r3, sp, #8
   2ec4c:	ldm	r3!, {r0, r1}
   2ec50:	str	r0, [r4, lr, lsl #3]
   2ec54:	str	r1, [r2, #4]
   2ec58:	ldr	r2, [r4, #64]	; 0x40
   2ec5c:	ldr	r3, [r4, #68]	; 0x44
   2ec60:	lsl	r3, r3, #3
   2ec64:	orr	r3, r3, r2, lsr #29
   2ec68:	lsl	r2, r2, #3
   2ec6c:	rev	r2, r2
   2ec70:	rev	r3, r3
   2ec74:	str	r3, [sp]
   2ec78:	str	r2, [sp, #4]
   2ec7c:	add	r2, r5, #8
   2ec80:	add	lr, r4, r2
   2ec84:	mov	r3, sp
   2ec88:	ldm	r3!, {r0, r1}
   2ec8c:	str	r0, [r4, r2]
   2ec90:	str	r1, [lr, #4]
   2ec94:	add	r6, r4, #88	; 0x58
   2ec98:	sub	r2, r5, #88	; 0x58
   2ec9c:	sub	r2, r2, ip
   2eca0:	ldr	r1, [pc, #28]	; 2ecc4 <__assert_fail@plt+0x1d9d8>
   2eca4:	add	r0, r6, ip
   2eca8:	bl	11058 <memcpy@plt>
   2ecac:	mov	r2, r4
   2ecb0:	sub	r1, r5, #72	; 0x48
   2ecb4:	mov	r0, r6
   2ecb8:	bl	1ed68 <__assert_fail@plt+0xda7c>
   2ecbc:	add	sp, sp, #20
   2ecc0:	pop	{r4, r5, r6, r7, pc}
   2ecc4:	andeq	r9, r3, ip, ror #17
   2ecc8:	push	{r4, r5, r6, lr}
   2eccc:	mov	r4, r0
   2ecd0:	mov	r5, r1
   2ecd4:	bl	2ebbc <__assert_fail@plt+0x1d8d0>
   2ecd8:	mov	r1, r5
   2ecdc:	mov	r0, r4
   2ece0:	bl	1ecb8 <__assert_fail@plt+0xd9cc>
   2ece4:	pop	{r4, r5, r6, pc}
   2ece8:	push	{r4, r5, r6, lr}
   2ecec:	mov	r4, r0
   2ecf0:	mov	r5, r1
   2ecf4:	bl	2ebbc <__assert_fail@plt+0x1d8d0>
   2ecf8:	mov	r1, r5
   2ecfc:	mov	r0, r4
   2ed00:	bl	1ed10 <__assert_fail@plt+0xda24>
   2ed04:	pop	{r4, r5, r6, pc}
   2ed08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ed0c:	mov	r9, r0
   2ed10:	mov	r6, r1
   2ed14:	mov	r7, r2
   2ed18:	ldr	r4, [r2, #80]	; 0x50
   2ed1c:	cmp	r4, #0
   2ed20:	bne	2edc8 <__assert_fail@plt+0x1dadc>
   2ed24:	cmp	r6, #127	; 0x7f
   2ed28:	bls	2ed94 <__assert_fail@plt+0x1daa8>
   2ed2c:	tst	r9, #7
   2ed30:	beq	2ee3c <__assert_fail@plt+0x1db50>
   2ed34:	cmp	r6, #128	; 0x80
   2ed38:	bls	2ed94 <__assert_fail@plt+0x1daa8>
   2ed3c:	mov	r5, r6
   2ed40:	mov	r4, r9
   2ed44:	add	sl, r7, #88	; 0x58
   2ed48:	mov	r8, #128	; 0x80
   2ed4c:	mov	r2, r8
   2ed50:	mov	r1, r4
   2ed54:	mov	r0, sl
   2ed58:	bl	11058 <memcpy@plt>
   2ed5c:	mov	r2, r7
   2ed60:	mov	r1, r8
   2ed64:	bl	1ed68 <__assert_fail@plt+0xda7c>
   2ed68:	add	r4, r4, #128	; 0x80
   2ed6c:	sub	r5, r5, #128	; 0x80
   2ed70:	cmp	r5, #128	; 0x80
   2ed74:	bhi	2ed4c <__assert_fail@plt+0x1da60>
   2ed78:	sub	r3, r6, #129	; 0x81
   2ed7c:	bic	r2, r3, #127	; 0x7f
   2ed80:	add	r2, r2, #128	; 0x80
   2ed84:	add	r9, r9, r2
   2ed88:	sub	r6, r6, #128	; 0x80
   2ed8c:	bic	r3, r3, #127	; 0x7f
   2ed90:	sub	r6, r6, r3
   2ed94:	cmp	r6, #0
   2ed98:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ed9c:	ldr	r4, [r7, #80]	; 0x50
   2eda0:	add	r5, r7, #88	; 0x58
   2eda4:	mov	r2, r6
   2eda8:	mov	r1, r9
   2edac:	add	r0, r5, r4
   2edb0:	bl	11058 <memcpy@plt>
   2edb4:	add	r6, r6, r4
   2edb8:	cmp	r6, #127	; 0x7f
   2edbc:	bhi	2ee5c <__assert_fail@plt+0x1db70>
   2edc0:	str	r6, [r7, #80]	; 0x50
   2edc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2edc8:	rsb	r5, r4, #256	; 0x100
   2edcc:	cmp	r5, r1
   2edd0:	movcs	r5, r1
   2edd4:	add	r8, r2, #88	; 0x58
   2edd8:	mov	r2, r5
   2eddc:	mov	r1, r0
   2ede0:	add	r0, r8, r4
   2ede4:	bl	11058 <memcpy@plt>
   2ede8:	ldr	r1, [r7, #80]	; 0x50
   2edec:	add	r1, r5, r1
   2edf0:	str	r1, [r7, #80]	; 0x50
   2edf4:	cmp	r1, #128	; 0x80
   2edf8:	bhi	2ee08 <__assert_fail@plt+0x1db1c>
   2edfc:	add	r9, r9, r5
   2ee00:	sub	r6, r6, r5
   2ee04:	b	2ed24 <__assert_fail@plt+0x1da38>
   2ee08:	mov	r2, r7
   2ee0c:	bic	r1, r1, #127	; 0x7f
   2ee10:	mov	r0, r8
   2ee14:	bl	1ed68 <__assert_fail@plt+0xda7c>
   2ee18:	ldr	r2, [r7, #80]	; 0x50
   2ee1c:	and	r2, r2, #127	; 0x7f
   2ee20:	str	r2, [r7, #80]	; 0x50
   2ee24:	add	r1, r4, r5
   2ee28:	bic	r1, r1, #127	; 0x7f
   2ee2c:	add	r1, r8, r1
   2ee30:	mov	r0, r8
   2ee34:	bl	11058 <memcpy@plt>
   2ee38:	b	2edfc <__assert_fail@plt+0x1db10>
   2ee3c:	bic	r4, r6, #127	; 0x7f
   2ee40:	mov	r2, r7
   2ee44:	mov	r1, r4
   2ee48:	mov	r0, r9
   2ee4c:	bl	1ed68 <__assert_fail@plt+0xda7c>
   2ee50:	add	r9, r9, r4
   2ee54:	and	r6, r6, #127	; 0x7f
   2ee58:	b	2ed94 <__assert_fail@plt+0x1daa8>
   2ee5c:	mov	r2, r7
   2ee60:	mov	r1, #128	; 0x80
   2ee64:	mov	r0, r5
   2ee68:	bl	1ed68 <__assert_fail@plt+0xda7c>
   2ee6c:	sub	r6, r6, #128	; 0x80
   2ee70:	mov	r2, r6
   2ee74:	add	r1, r7, #216	; 0xd8
   2ee78:	mov	r0, r5
   2ee7c:	bl	11058 <memcpy@plt>
   2ee80:	b	2edc0 <__assert_fail@plt+0x1dad4>
   2ee84:	push	{r4, r5, r6, lr}
   2ee88:	sub	sp, sp, #344	; 0x158
   2ee8c:	mov	r5, r0
   2ee90:	mov	r6, r1
   2ee94:	mov	r4, r2
   2ee98:	mov	r0, sp
   2ee9c:	bl	1eb38 <__assert_fail@plt+0xd84c>
   2eea0:	mov	r2, sp
   2eea4:	mov	r1, r6
   2eea8:	mov	r0, r5
   2eeac:	bl	2ed08 <__assert_fail@plt+0x1da1c>
   2eeb0:	mov	r1, r4
   2eeb4:	mov	r0, sp
   2eeb8:	bl	2ecc8 <__assert_fail@plt+0x1d9dc>
   2eebc:	add	sp, sp, #344	; 0x158
   2eec0:	pop	{r4, r5, r6, pc}
   2eec4:	push	{r4, r5, r6, lr}
   2eec8:	sub	sp, sp, #344	; 0x158
   2eecc:	mov	r5, r0
   2eed0:	mov	r6, r1
   2eed4:	mov	r4, r2
   2eed8:	mov	r0, sp
   2eedc:	bl	1ebf8 <__assert_fail@plt+0xd90c>
   2eee0:	mov	r2, sp
   2eee4:	mov	r1, r6
   2eee8:	mov	r0, r5
   2eeec:	bl	2ed08 <__assert_fail@plt+0x1da1c>
   2eef0:	mov	r1, r4
   2eef4:	mov	r0, sp
   2eef8:	bl	2ece8 <__assert_fail@plt+0x1d9fc>
   2eefc:	add	sp, sp, #344	; 0x158
   2ef00:	pop	{r4, r5, r6, pc}
   2ef04:	push	{r4, r5, r6, r7, r8, r9, lr}
   2ef08:	sub	sp, sp, #180	; 0xb4
   2ef0c:	mov	r5, r0
   2ef10:	mov	r8, r1
   2ef14:	ldr	r0, [pc, #192]	; 2efdc <__assert_fail@plt+0x1dcf0>
   2ef18:	bl	3562c <__assert_fail@plt+0x24340>
   2ef1c:	subs	r6, r0, #0
   2ef20:	moveq	r0, #1
   2ef24:	beq	2ef90 <__assert_fail@plt+0x1dca4>
   2ef28:	add	r0, sp, #4
   2ef2c:	bl	2efe0 <__assert_fail@plt+0x1dcf4>
   2ef30:	mov	r7, #1
   2ef34:	mov	r9, #32768	; 0x8000
   2ef38:	mov	r4, #0
   2ef3c:	mov	r3, r5
   2ef40:	rsb	r2, r4, #32768	; 0x8000
   2ef44:	mov	r1, r7
   2ef48:	add	r0, r6, r4
   2ef4c:	bl	112b0 <fread_unlocked@plt>
   2ef50:	add	r4, r4, r0
   2ef54:	cmp	r4, #32768	; 0x8000
   2ef58:	beq	2efb4 <__assert_fail@plt+0x1dcc8>
   2ef5c:	cmp	r0, #0
   2ef60:	beq	2ef98 <__assert_fail@plt+0x1dcac>
   2ef64:	ldr	r3, [r5]
   2ef68:	tst	r3, #16
   2ef6c:	beq	2ef3c <__assert_fail@plt+0x1dc50>
   2ef70:	cmp	r4, #0
   2ef74:	bne	2efc8 <__assert_fail@plt+0x1dcdc>
   2ef78:	mov	r1, r8
   2ef7c:	add	r0, sp, #4
   2ef80:	bl	31784 <__assert_fail@plt+0x20498>
   2ef84:	mov	r0, r6
   2ef88:	bl	31c0c <__assert_fail@plt+0x20920>
   2ef8c:	mov	r0, #0
   2ef90:	add	sp, sp, #180	; 0xb4
   2ef94:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2ef98:	ldr	r3, [r5]
   2ef9c:	tst	r3, #32
   2efa0:	beq	2ef70 <__assert_fail@plt+0x1dc84>
   2efa4:	mov	r0, r6
   2efa8:	bl	31c0c <__assert_fail@plt+0x20920>
   2efac:	mov	r0, #1
   2efb0:	b	2ef90 <__assert_fail@plt+0x1dca4>
   2efb4:	add	r2, sp, #4
   2efb8:	mov	r1, r9
   2efbc:	mov	r0, r6
   2efc0:	bl	2f080 <__assert_fail@plt+0x1dd94>
   2efc4:	b	2ef38 <__assert_fail@plt+0x1dc4c>
   2efc8:	add	r2, sp, #4
   2efcc:	mov	r1, r4
   2efd0:	mov	r0, r6
   2efd4:	bl	31820 <__assert_fail@plt+0x20534>
   2efd8:	b	2ef78 <__assert_fail@plt+0x1dc8c>
   2efdc:	andeq	r8, r0, r8, asr #32
   2efe0:	ldr	r3, [pc, #76]	; 2f034 <__assert_fail@plt+0x1dd48>
   2efe4:	str	r3, [r0]
   2efe8:	ldr	r3, [pc, #72]	; 2f038 <__assert_fail@plt+0x1dd4c>
   2efec:	str	r3, [r0, #4]
   2eff0:	ldr	r3, [pc, #68]	; 2f03c <__assert_fail@plt+0x1dd50>
   2eff4:	str	r3, [r0, #8]
   2eff8:	ldr	r3, [pc, #64]	; 2f040 <__assert_fail@plt+0x1dd54>
   2effc:	str	r3, [r0, #12]
   2f000:	ldr	r3, [pc, #60]	; 2f044 <__assert_fail@plt+0x1dd58>
   2f004:	str	r3, [r0, #16]
   2f008:	ldr	r3, [pc, #56]	; 2f048 <__assert_fail@plt+0x1dd5c>
   2f00c:	str	r3, [r0, #20]
   2f010:	ldr	r3, [pc, #52]	; 2f04c <__assert_fail@plt+0x1dd60>
   2f014:	str	r3, [r0, #24]
   2f018:	ldr	r3, [pc, #48]	; 2f050 <__assert_fail@plt+0x1dd64>
   2f01c:	str	r3, [r0, #28]
   2f020:	mov	r3, #0
   2f024:	str	r3, [r0, #36]	; 0x24
   2f028:	str	r3, [r0, #32]
   2f02c:	str	r3, [r0, #40]	; 0x28
   2f030:	bx	lr
   2f034:	orrvc	r1, r0, #116391936	; 0x6f00000
   2f038:	ldmdbmi	r4, {r0, r3, r4, r5, r7, r9, ip, sp, pc}
   2f03c:			; <UNDEFINED> instruction: 0x172442d7
   2f040:	ble	fe2b0848 <optarg@@GLIBC_2.4+0xfe2666a0>
   2f044:	stmdbge	pc!, {r2, r3, r4, r5, r7, ip, sp}^	; <UNPREDICTABLE>
   2f048:	ldrtne	r3, [r1], -sl, lsr #17
   2f04c:	orr	lr, sp, #1232	; 0x4d0
   2f050:	rscslt	r0, fp, lr, asr #28
   2f054:	push	{lr}		; (str lr, [sp, #-4]!)
   2f058:	sub	r2, r0, #4
   2f05c:	mov	ip, r1
   2f060:	add	lr, r0, #28
   2f064:	ldr	r3, [r2, #4]!
   2f068:	rev	r3, r3
   2f06c:	str	r3, [ip], #4
   2f070:	cmp	r2, lr
   2f074:	bne	2f064 <__assert_fail@plt+0x1dd78>
   2f078:	mov	r0, r1
   2f07c:	pop	{pc}		; (ldr pc, [sp], #4)
   2f080:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f084:	sub	sp, sp, #156	; 0x9c
   2f088:	mov	r9, r2
   2f08c:	str	r2, [sp, #84]	; 0x54
   2f090:	bic	r3, r1, #3
   2f094:	add	r3, r0, r3
   2f098:	mov	sl, r3
   2f09c:	str	r3, [sp, #80]	; 0x50
   2f0a0:	ldr	r8, [r2]
   2f0a4:	ldr	r3, [r2, #4]
   2f0a8:	ldr	r7, [r2, #8]
   2f0ac:	ldr	ip, [r2, #12]
   2f0b0:	ldr	fp, [r2, #16]
   2f0b4:	ldr	r6, [r2, #20]
   2f0b8:	ldr	lr, [r2, #24]
   2f0bc:	ldr	r4, [r2, #28]
   2f0c0:	ldr	r2, [r2, #32]
   2f0c4:	add	r2, r1, r2
   2f0c8:	str	r2, [r9, #32]
   2f0cc:	ldr	r5, [r9, #36]	; 0x24
   2f0d0:	cmp	r1, r2
   2f0d4:	movls	r2, r5
   2f0d8:	addhi	r2, r5, #1
   2f0dc:	str	r2, [r9, #36]	; 0x24
   2f0e0:	cmp	r0, sl
   2f0e4:	bcs	3175c <__assert_fail@plt+0x20470>
   2f0e8:	str	r0, [sp, #72]	; 0x48
   2f0ec:	mov	r9, r7
   2f0f0:	mov	r5, r6
   2f0f4:	mov	r2, lr
   2f0f8:	mov	r1, r4
   2f0fc:	ldr	r0, [sp, #72]	; 0x48
   2f100:	sub	lr, r0, #4
   2f104:	add	r4, sp, #88	; 0x58
   2f108:	add	r6, r0, #60	; 0x3c
   2f10c:	ldr	r0, [lr, #4]!
   2f110:	rev	r0, r0
   2f114:	str	r0, [r4], #4
   2f118:	cmp	lr, r6
   2f11c:	bne	2f10c <__assert_fail@plt+0x1de20>
   2f120:	ldr	r0, [sp, #72]	; 0x48
   2f124:	add	r0, r0, #64	; 0x40
   2f128:	str	r0, [sp, #72]	; 0x48
   2f12c:	ror	lr, r8, #20
   2f130:	ldr	r0, [pc, #4088]	; 30130 <__assert_fail@plt+0x1ee44>
   2f134:	add	r0, fp, r0
   2f138:	add	r0, r0, lr
   2f13c:	ror	r0, r0, #25
   2f140:	eor	r4, r8, r3
   2f144:	eor	r4, r4, r9
   2f148:	ldr	r6, [sp, #88]	; 0x58
   2f14c:	ldr	r7, [sp, #104]	; 0x68
   2f150:	eor	r6, r6, r7
   2f154:	add	r6, r6, ip
   2f158:	add	r6, r4, r6
   2f15c:	eor	r4, lr, r0
   2f160:	add	r4, r4, r6
   2f164:	eor	ip, fp, r5
   2f168:	eor	ip, ip, r2
   2f16c:	ldr	lr, [sp, #88]	; 0x58
   2f170:	add	r1, lr, r1
   2f174:	add	r1, ip, r1
   2f178:	add	r0, r0, r1
   2f17c:	ror	r3, r3, #23
   2f180:	ror	sl, r5, #13
   2f184:	ror	r1, r0, #15
   2f188:	eor	r1, r1, r0, ror #23
   2f18c:	eor	r0, r0, r1
   2f190:	ror	lr, r4, #20
   2f194:	ldr	r1, [pc, #3992]	; 30134 <__assert_fail@plt+0x1ee48>
   2f198:	add	r1, lr, r1
   2f19c:	add	r1, r1, r0
   2f1a0:	ror	r1, r1, #25
   2f1a4:	eor	r5, r3, r8
   2f1a8:	eor	r5, r5, r4
   2f1ac:	ldr	ip, [sp, #92]	; 0x5c
   2f1b0:	ldr	r6, [sp, #108]	; 0x6c
   2f1b4:	eor	ip, ip, r6
   2f1b8:	add	r9, ip, r9
   2f1bc:	add	r9, r5, r9
   2f1c0:	eor	r5, lr, r1
   2f1c4:	add	r5, r5, r9
   2f1c8:	eor	ip, sl, fp
   2f1cc:	eor	ip, ip, r0
   2f1d0:	ldr	lr, [sp, #92]	; 0x5c
   2f1d4:	add	r2, lr, r2
   2f1d8:	add	r2, ip, r2
   2f1dc:	add	r1, r1, r2
   2f1e0:	ror	r7, r8, #23
   2f1e4:	ror	r6, fp, #13
   2f1e8:	ror	r2, r1, #15
   2f1ec:	eor	r2, r2, r1, ror #23
   2f1f0:	eor	r1, r1, r2
   2f1f4:	ror	r8, r5, #20
   2f1f8:	ldr	r2, [pc, #3896]	; 30138 <__assert_fail@plt+0x1ee4c>
   2f1fc:	add	r2, r8, r2
   2f200:	add	r2, r2, r1
   2f204:	ror	r2, r2, #25
   2f208:	eor	lr, r4, r7
   2f20c:	eor	lr, lr, r5
   2f210:	ldr	ip, [sp, #96]	; 0x60
   2f214:	ldr	r9, [sp, #112]	; 0x70
   2f218:	eor	ip, ip, r9
   2f21c:	add	r3, ip, r3
   2f220:	add	r3, lr, r3
   2f224:	eor	lr, r8, r2
   2f228:	add	lr, lr, r3
   2f22c:	eor	r3, r0, r6
   2f230:	eor	r3, r3, r1
   2f234:	ldr	ip, [sp, #96]	; 0x60
   2f238:	add	sl, sl, ip
   2f23c:	add	sl, r3, sl
   2f240:	add	r2, r2, sl
   2f244:	ror	r4, r4, #23
   2f248:	ror	r0, r0, #13
   2f24c:	ror	r3, r2, #15
   2f250:	eor	r3, r3, r2, ror #23
   2f254:	eor	r2, r2, r3
   2f258:	ror	r9, lr, #20
   2f25c:	ldr	r3, [pc, #3800]	; 3013c <__assert_fail@plt+0x1ee50>
   2f260:	add	r3, r9, r3
   2f264:	add	r3, r3, r2
   2f268:	ror	r3, r3, #25
   2f26c:	eor	ip, r5, r4
   2f270:	eor	ip, ip, lr
   2f274:	ldr	r8, [sp, #100]	; 0x64
   2f278:	ldr	sl, [sp, #116]	; 0x74
   2f27c:	eor	r8, r8, sl
   2f280:	add	r7, r8, r7
   2f284:	add	r7, ip, r7
   2f288:	eor	ip, r9, r3
   2f28c:	add	ip, ip, r7
   2f290:	eor	r7, r1, r0
   2f294:	eor	r7, r7, r2
   2f298:	ldr	r8, [sp, #100]	; 0x64
   2f29c:	add	r6, r6, r8
   2f2a0:	add	r6, r7, r6
   2f2a4:	add	r3, r3, r6
   2f2a8:	ror	r5, r5, #23
   2f2ac:	ror	r1, r1, #13
   2f2b0:	ror	r6, r3, #15
   2f2b4:	eor	r6, r6, r3, ror #23
   2f2b8:	eor	r3, r3, r6
   2f2bc:	ror	r9, ip, #20
   2f2c0:	ldr	r7, [pc, #3704]	; 30140 <__assert_fail@plt+0x1ee54>
   2f2c4:	add	r7, r9, r7
   2f2c8:	add	r7, r7, r3
   2f2cc:	ror	r7, r7, #25
   2f2d0:	eor	r6, lr, r5
   2f2d4:	eor	r6, r6, ip
   2f2d8:	ldr	r8, [sp, #104]	; 0x68
   2f2dc:	ldr	sl, [sp, #120]	; 0x78
   2f2e0:	eor	r8, r8, sl
   2f2e4:	add	r4, r8, r4
   2f2e8:	add	r4, r6, r4
   2f2ec:	eor	r6, r9, r7
   2f2f0:	add	r6, r6, r4
   2f2f4:	eor	r4, r2, r1
   2f2f8:	eor	r4, r4, r3
   2f2fc:	ldr	r8, [sp, #104]	; 0x68
   2f300:	add	r0, r8, r0
   2f304:	add	r0, r4, r0
   2f308:	add	r0, r7, r0
   2f30c:	ror	lr, lr, #23
   2f310:	ror	r2, r2, #13
   2f314:	ror	r4, r0, #15
   2f318:	eor	r4, r4, r0, ror #23
   2f31c:	eor	r0, r0, r4
   2f320:	ror	r9, r6, #20
   2f324:	ldr	r7, [pc, #3608]	; 30144 <__assert_fail@plt+0x1ee58>
   2f328:	add	r7, r9, r7
   2f32c:	add	r7, r7, r0
   2f330:	ror	r7, r7, #25
   2f334:	eor	r4, ip, lr
   2f338:	eor	r4, r4, r6
   2f33c:	ldr	r8, [sp, #108]	; 0x6c
   2f340:	ldr	sl, [sp, #124]	; 0x7c
   2f344:	eor	r8, r8, sl
   2f348:	add	r5, r8, r5
   2f34c:	add	r5, r4, r5
   2f350:	eor	r4, r9, r7
   2f354:	add	r4, r4, r5
   2f358:	eor	r5, r3, r2
   2f35c:	eor	r5, r5, r0
   2f360:	ldr	r8, [sp, #108]	; 0x6c
   2f364:	add	r1, r8, r1
   2f368:	add	r1, r5, r1
   2f36c:	add	r1, r7, r1
   2f370:	ror	ip, ip, #23
   2f374:	ror	r3, r3, #13
   2f378:	ror	r5, r1, #15
   2f37c:	eor	r5, r5, r1, ror #23
   2f380:	eor	r1, r1, r5
   2f384:	ror	r9, r4, #20
   2f388:	ldr	r7, [pc, #3512]	; 30148 <__assert_fail@plt+0x1ee5c>
   2f38c:	add	r7, r9, r7
   2f390:	add	r7, r7, r1
   2f394:	ror	r7, r7, #25
   2f398:	eor	r5, r6, ip
   2f39c:	eor	r5, r5, r4
   2f3a0:	ldr	r8, [sp, #112]	; 0x70
   2f3a4:	ldr	sl, [sp, #128]	; 0x80
   2f3a8:	eor	r8, r8, sl
   2f3ac:	add	lr, r8, lr
   2f3b0:	add	lr, r5, lr
   2f3b4:	eor	r5, r9, r7
   2f3b8:	add	r5, r5, lr
   2f3bc:	eor	lr, r0, r3
   2f3c0:	eor	lr, lr, r1
   2f3c4:	ldr	r8, [sp, #112]	; 0x70
   2f3c8:	add	r2, r8, r2
   2f3cc:	add	r2, lr, r2
   2f3d0:	add	r2, r7, r2
   2f3d4:	ror	r6, r6, #23
   2f3d8:	ror	r0, r0, #13
   2f3dc:	ror	lr, r2, #15
   2f3e0:	eor	lr, lr, r2, ror #23
   2f3e4:	eor	r2, r2, lr
   2f3e8:	ror	r9, r5, #20
   2f3ec:	ldr	r7, [pc, #3416]	; 3014c <__assert_fail@plt+0x1ee60>
   2f3f0:	add	r7, r9, r7
   2f3f4:	add	r7, r7, r2
   2f3f8:	ror	r7, r7, #25
   2f3fc:	eor	lr, r4, r6
   2f400:	eor	lr, lr, r5
   2f404:	ldr	r8, [sp, #116]	; 0x74
   2f408:	ldr	sl, [sp, #132]	; 0x84
   2f40c:	eor	r8, r8, sl
   2f410:	add	ip, r8, ip
   2f414:	add	ip, lr, ip
   2f418:	eor	lr, r9, r7
   2f41c:	add	lr, lr, ip
   2f420:	eor	ip, r1, r0
   2f424:	eor	ip, ip, r2
   2f428:	ldr	r8, [sp, #116]	; 0x74
   2f42c:	add	r3, r8, r3
   2f430:	add	r3, ip, r3
   2f434:	add	r3, r7, r3
   2f438:	ror	r4, r4, #23
   2f43c:	ror	r1, r1, #13
   2f440:	ror	ip, r3, #15
   2f444:	eor	ip, ip, r3, ror #23
   2f448:	eor	r3, r3, ip
   2f44c:	ror	r9, lr, #20
   2f450:	ldr	r7, [pc, #3320]	; 30150 <__assert_fail@plt+0x1ee64>
   2f454:	add	r7, r9, r7
   2f458:	add	r7, r7, r3
   2f45c:	ror	r7, r7, #25
   2f460:	eor	ip, r5, r4
   2f464:	eor	ip, ip, lr
   2f468:	ldr	r8, [sp, #120]	; 0x78
   2f46c:	ldr	sl, [sp, #136]	; 0x88
   2f470:	eor	r8, r8, sl
   2f474:	add	r6, r8, r6
   2f478:	add	r6, ip, r6
   2f47c:	eor	ip, r9, r7
   2f480:	add	ip, ip, r6
   2f484:	eor	r6, r2, r1
   2f488:	eor	r6, r6, r3
   2f48c:	ldr	r8, [sp, #120]	; 0x78
   2f490:	add	r0, r8, r0
   2f494:	add	r0, r6, r0
   2f498:	add	r0, r7, r0
   2f49c:	ror	r5, r5, #23
   2f4a0:	ror	r2, r2, #13
   2f4a4:	ror	r6, r0, #15
   2f4a8:	eor	r6, r6, r0, ror #23
   2f4ac:	eor	r0, r0, r6
   2f4b0:	ror	r9, ip, #20
   2f4b4:	ldr	r7, [pc, #3224]	; 30154 <__assert_fail@plt+0x1ee68>
   2f4b8:	add	r7, r9, r7
   2f4bc:	add	r7, r7, r0
   2f4c0:	ror	r7, r7, #25
   2f4c4:	eor	r6, lr, r5
   2f4c8:	eor	r6, r6, ip
   2f4cc:	ldr	r8, [sp, #124]	; 0x7c
   2f4d0:	ldr	sl, [sp, #140]	; 0x8c
   2f4d4:	eor	r8, r8, sl
   2f4d8:	add	r4, r8, r4
   2f4dc:	add	r4, r6, r4
   2f4e0:	eor	r6, r9, r7
   2f4e4:	add	r6, r6, r4
   2f4e8:	eor	r4, r3, r2
   2f4ec:	eor	r4, r4, r0
   2f4f0:	ldr	r8, [sp, #124]	; 0x7c
   2f4f4:	add	r1, r8, r1
   2f4f8:	add	r1, r4, r1
   2f4fc:	add	r1, r7, r1
   2f500:	ror	lr, lr, #23
   2f504:	ror	r3, r3, #13
   2f508:	ror	r4, r1, #15
   2f50c:	eor	r4, r4, r1, ror #23
   2f510:	eor	r1, r1, r4
   2f514:	ror	r9, r6, #20
   2f518:	ldr	r7, [pc, #3128]	; 30158 <__assert_fail@plt+0x1ee6c>
   2f51c:	add	r7, r9, r7
   2f520:	add	r7, r7, r1
   2f524:	ror	r7, r7, #25
   2f528:	eor	r4, ip, lr
   2f52c:	eor	r4, r4, r6
   2f530:	ldr	r8, [sp, #128]	; 0x80
   2f534:	ldr	sl, [sp, #144]	; 0x90
   2f538:	eor	r8, r8, sl
   2f53c:	add	r5, r8, r5
   2f540:	add	r5, r4, r5
   2f544:	eor	r4, r9, r7
   2f548:	add	r4, r4, r5
   2f54c:	eor	r5, r0, r3
   2f550:	eor	r5, r5, r1
   2f554:	ldr	r8, [sp, #128]	; 0x80
   2f558:	add	r2, r8, r2
   2f55c:	add	r2, r5, r2
   2f560:	add	r2, r7, r2
   2f564:	ror	ip, ip, #23
   2f568:	ror	r0, r0, #13
   2f56c:	ror	r5, r2, #15
   2f570:	eor	r5, r5, r2, ror #23
   2f574:	eor	r2, r2, r5
   2f578:	ror	r8, r4, #20
   2f57c:	ldr	r5, [pc, #3032]	; 3015c <__assert_fail@plt+0x1ee70>
   2f580:	add	r5, r8, r5
   2f584:	add	r5, r5, r2
   2f588:	ror	r5, r5, #25
   2f58c:	eor	r9, r6, ip
   2f590:	eor	r9, r9, r4
   2f594:	ldr	r7, [sp, #132]	; 0x84
   2f598:	ldr	sl, [sp, #148]	; 0x94
   2f59c:	eor	r7, r7, sl
   2f5a0:	add	lr, r7, lr
   2f5a4:	add	lr, r9, lr
   2f5a8:	eor	r9, r8, r5
   2f5ac:	add	r9, r9, lr
   2f5b0:	eor	lr, r1, r0
   2f5b4:	eor	lr, lr, r2
   2f5b8:	ldr	r7, [sp, #132]	; 0x84
   2f5bc:	add	r3, r7, r3
   2f5c0:	add	r3, lr, r3
   2f5c4:	add	r3, r5, r3
   2f5c8:	ror	r6, r6, #23
   2f5cc:	ror	r1, r1, #13
   2f5d0:	ror	lr, r3, #15
   2f5d4:	eor	lr, lr, r3, ror #23
   2f5d8:	eor	r3, r3, lr
   2f5dc:	ror	sl, r9, #20
   2f5e0:	ldr	r5, [pc, #2936]	; 30160 <__assert_fail@plt+0x1ee74>
   2f5e4:	add	r5, sl, r5
   2f5e8:	add	r5, r5, r3
   2f5ec:	ror	r5, r5, #25
   2f5f0:	ldr	lr, [sp, #88]	; 0x58
   2f5f4:	ldr	r7, [sp, #116]	; 0x74
   2f5f8:	eor	lr, lr, r7
   2f5fc:	ldr	r7, [sp, #140]	; 0x8c
   2f600:	eor	r7, lr, r7, ror #17
   2f604:	ldr	lr, [sp, #128]	; 0x80
   2f608:	ldr	r8, [sp, #100]	; 0x64
   2f60c:	eor	lr, lr, r8, ror #25
   2f610:	eor	lr, lr, r7
   2f614:	eor	lr, lr, r7, ror #17
   2f618:	eor	r8, lr, r7, ror #9
   2f61c:	eor	r7, r4, r6
   2f620:	eor	r7, r7, r9
   2f624:	ldr	lr, [sp, #136]	; 0x88
   2f628:	str	r8, [sp, #4]
   2f62c:	eor	r8, lr, r8
   2f630:	add	ip, r8, ip
   2f634:	add	ip, r7, ip
   2f638:	eor	r7, sl, r5
   2f63c:	add	r7, r7, ip
   2f640:	eor	ip, r2, r1
   2f644:	eor	ip, ip, r3
   2f648:	add	r0, lr, r0
   2f64c:	add	r0, ip, r0
   2f650:	add	r5, r5, r0
   2f654:	ror	r4, r4, #23
   2f658:	ror	r2, r2, #13
   2f65c:	ror	r0, r5, #15
   2f660:	eor	r0, r0, r5, ror #23
   2f664:	eor	r0, r0, r5
   2f668:	ror	fp, r7, #20
   2f66c:	ldr	r8, [pc, #2800]	; 30164 <__assert_fail@plt+0x1ee78>
   2f670:	add	r8, fp, r8
   2f674:	add	r8, r8, r0
   2f678:	ror	r8, r8, #25
   2f67c:	ldr	ip, [sp, #92]	; 0x5c
   2f680:	ldr	lr, [sp, #120]	; 0x78
   2f684:	eor	ip, ip, lr
   2f688:	ldr	lr, [sp, #144]	; 0x90
   2f68c:	eor	r5, ip, lr, ror #17
   2f690:	ldr	ip, [sp, #132]	; 0x84
   2f694:	ldr	lr, [sp, #104]	; 0x68
   2f698:	eor	ip, ip, lr, ror #25
   2f69c:	eor	ip, ip, r5
   2f6a0:	eor	ip, ip, r5, ror #17
   2f6a4:	eor	lr, ip, r5, ror #9
   2f6a8:	eor	r5, r9, r4
   2f6ac:	eor	r5, r5, r7
   2f6b0:	ldr	ip, [sp, #140]	; 0x8c
   2f6b4:	str	lr, [sp, #8]
   2f6b8:	eor	sl, ip, lr
   2f6bc:	add	r6, sl, r6
   2f6c0:	add	r6, r5, r6
   2f6c4:	eor	r5, fp, r8
   2f6c8:	add	r5, r5, r6
   2f6cc:	eor	r6, r3, r2
   2f6d0:	eor	r6, r6, r0
   2f6d4:	add	r1, ip, r1
   2f6d8:	add	r1, r6, r1
   2f6dc:	add	r8, r8, r1
   2f6e0:	ror	r9, r9, #23
   2f6e4:	ror	r3, r3, #13
   2f6e8:	ror	r1, r8, #15
   2f6ec:	eor	r1, r1, r8, ror #23
   2f6f0:	eor	r1, r1, r8
   2f6f4:	ror	fp, r5, #20
   2f6f8:	ldr	r6, [pc, #2664]	; 30168 <__assert_fail@plt+0x1ee7c>
   2f6fc:	add	r6, fp, r6
   2f700:	add	r6, r6, r1
   2f704:	ror	r6, r6, #25
   2f708:	ldr	ip, [sp, #96]	; 0x60
   2f70c:	ldr	lr, [sp, #124]	; 0x7c
   2f710:	eor	r8, ip, lr
   2f714:	ldr	ip, [sp, #148]	; 0x94
   2f718:	eor	r8, r8, ip, ror #17
   2f71c:	ldr	ip, [sp, #136]	; 0x88
   2f720:	ldr	lr, [sp, #108]	; 0x6c
   2f724:	eor	sl, ip, lr, ror #25
   2f728:	eor	sl, sl, r8
   2f72c:	eor	sl, sl, r8, ror #17
   2f730:	eor	r8, sl, r8, ror #9
   2f734:	mov	sl, r8
   2f738:	eor	r8, r7, r9
   2f73c:	eor	r8, r8, r5
   2f740:	ldr	ip, [sp, #144]	; 0x90
   2f744:	str	sl, [sp, #12]
   2f748:	eor	sl, ip, sl
   2f74c:	add	r4, sl, r4
   2f750:	add	r4, r8, r4
   2f754:	eor	r8, fp, r6
   2f758:	add	r8, r8, r4
   2f75c:	eor	r4, r0, r3
   2f760:	eor	r4, r4, r1
   2f764:	add	r2, ip, r2
   2f768:	add	r4, r4, r2
   2f76c:	add	r6, r6, r4
   2f770:	ror	r7, r7, #23
   2f774:	ror	r0, r0, #13
   2f778:	ror	r4, r6, #15
   2f77c:	eor	r4, r4, r6, ror #23
   2f780:	eor	r4, r4, r6
   2f784:	ror	fp, r8, #20
   2f788:	ldr	sl, [pc, #2524]	; 3016c <__assert_fail@plt+0x1ee80>
   2f78c:	add	sl, fp, sl
   2f790:	add	sl, sl, r4
   2f794:	ror	sl, sl, #25
   2f798:	ldr	r2, [sp, #100]	; 0x64
   2f79c:	ldr	ip, [sp, #128]	; 0x80
   2f7a0:	eor	r2, r2, ip
   2f7a4:	ldr	r6, [sp, #4]
   2f7a8:	eor	r2, r2, r6, ror #17
   2f7ac:	ldr	ip, [sp, #140]	; 0x8c
   2f7b0:	ldr	lr, [sp, #112]	; 0x70
   2f7b4:	eor	r6, ip, lr, ror #25
   2f7b8:	eor	r6, r6, r2
   2f7bc:	eor	r6, r6, r2, ror #17
   2f7c0:	eor	r2, r6, r2, ror #9
   2f7c4:	eor	r6, r5, r7
   2f7c8:	eor	r6, r6, r8
   2f7cc:	ldr	ip, [sp, #148]	; 0x94
   2f7d0:	str	r2, [sp, #16]
   2f7d4:	eor	r2, ip, r2
   2f7d8:	add	r9, r2, r9
   2f7dc:	add	r9, r6, r9
   2f7e0:	eor	r6, fp, sl
   2f7e4:	add	r6, r6, r9
   2f7e8:	eor	r2, r1, r0
   2f7ec:	eor	r2, r2, r4
   2f7f0:	add	r3, ip, r3
   2f7f4:	add	r2, r2, r3
   2f7f8:	add	sl, sl, r2
   2f7fc:	ror	r5, r5, #23
   2f800:	ror	r1, r1, #13
   2f804:	ror	r2, sl, #15
   2f808:	eor	r2, r2, sl, ror #23
   2f80c:	eor	r2, r2, sl
   2f810:	ror	fp, r6, #20
   2f814:	ldr	r9, [pc, #2484]	; 301d0 <__assert_fail@plt+0x1eee4>
   2f818:	add	r9, fp, r9
   2f81c:	add	r9, r9, r2
   2f820:	ror	r9, r9, #25
   2f824:	ldr	r3, [sp, #104]	; 0x68
   2f828:	ldr	ip, [sp, #132]	; 0x84
   2f82c:	eor	r3, r3, ip
   2f830:	ldr	ip, [sp, #8]
   2f834:	eor	r3, r3, ip, ror #17
   2f838:	ldr	ip, [sp, #144]	; 0x90
   2f83c:	ldr	lr, [sp, #116]	; 0x74
   2f840:	eor	sl, ip, lr, ror #25
   2f844:	eor	sl, sl, r3
   2f848:	eor	sl, sl, r3, ror #17
   2f84c:	eor	r3, sl, r3, ror #9
   2f850:	mov	ip, r3
   2f854:	orr	sl, r8, r5
   2f858:	and	r3, sl, r6
   2f85c:	and	sl, r8, r5
   2f860:	orr	sl, r3, sl
   2f864:	str	ip, [sp, #20]
   2f868:	mov	r3, ip
   2f86c:	ldr	lr, [sp, #4]
   2f870:	eor	r3, r3, lr
   2f874:	add	r7, r3, r7
   2f878:	add	r7, sl, r7
   2f87c:	eor	sl, fp, r9
   2f880:	add	sl, sl, r7
   2f884:	add	r0, lr, r0
   2f888:	add	r9, r0, r9
   2f88c:	eor	r3, r4, r1
   2f890:	and	r3, r3, r2
   2f894:	eor	r3, r3, r1
   2f898:	add	r3, r3, r9
   2f89c:	ror	r0, r8, #23
   2f8a0:	ror	r4, r4, #13
   2f8a4:	ror	r7, r3, #15
   2f8a8:	eor	r7, r7, r3, ror #23
   2f8ac:	eor	r7, r7, r3
   2f8b0:	ror	fp, sl, #20
   2f8b4:	ldr	r8, [pc, #2328]	; 301d4 <__assert_fail@plt+0x1eee8>
   2f8b8:	add	r8, fp, r8
   2f8bc:	add	r8, r8, r7
   2f8c0:	ror	r8, r8, #25
   2f8c4:	ldr	ip, [sp, #108]	; 0x6c
   2f8c8:	ldr	lr, [sp, #136]	; 0x88
   2f8cc:	eor	r3, ip, lr
   2f8d0:	ldr	r9, [sp, #12]
   2f8d4:	eor	r3, r3, r9, ror #17
   2f8d8:	ldr	ip, [sp, #148]	; 0x94
   2f8dc:	ldr	lr, [sp, #120]	; 0x78
   2f8e0:	eor	r9, ip, lr, ror #25
   2f8e4:	eor	r9, r9, r3
   2f8e8:	eor	r9, r9, r3, ror #17
   2f8ec:	eor	r9, r9, r3, ror #9
   2f8f0:	mov	ip, r9
   2f8f4:	orr	r9, r6, r0
   2f8f8:	and	r3, r9, sl
   2f8fc:	and	r9, r6, r0
   2f900:	orr	r9, r3, r9
   2f904:	str	ip, [sp, #52]	; 0x34
   2f908:	mov	r3, ip
   2f90c:	ldr	ip, [sp, #8]
   2f910:	eor	r3, r3, ip
   2f914:	add	r5, r3, r5
   2f918:	add	r5, r9, r5
   2f91c:	eor	r9, fp, r8
   2f920:	add	r9, r9, r5
   2f924:	add	r1, ip, r1
   2f928:	add	r8, r1, r8
   2f92c:	eor	r5, r2, r4
   2f930:	and	r5, r5, r7
   2f934:	eor	r5, r5, r4
   2f938:	add	r5, r5, r8
   2f93c:	ror	r6, r6, #23
   2f940:	ror	r2, r2, #13
   2f944:	ror	r3, r5, #15
   2f948:	eor	r3, r3, r5, ror #23
   2f94c:	eor	r5, r5, r3
   2f950:	ror	r3, r9, #20
   2f954:	ldr	fp, [pc, #2172]	; 301d8 <__assert_fail@plt+0x1eeec>
   2f958:	add	fp, r3, fp
   2f95c:	add	fp, fp, r5
   2f960:	ror	fp, fp, #25
   2f964:	ldr	r1, [sp, #112]	; 0x70
   2f968:	ldr	ip, [sp, #140]	; 0x8c
   2f96c:	eor	r1, r1, ip
   2f970:	ldr	r8, [sp, #16]
   2f974:	eor	r1, r1, r8, ror #17
   2f978:	ldr	ip, [sp, #124]	; 0x7c
   2f97c:	ldr	lr, [sp, #4]
   2f980:	eor	r8, lr, ip, ror #25
   2f984:	eor	r8, r8, r1
   2f988:	eor	r8, r8, r1, ror #17
   2f98c:	eor	r1, r8, r1, ror #9
   2f990:	mov	ip, r1
   2f994:	orr	r8, sl, r6
   2f998:	and	r1, r8, r9
   2f99c:	and	r8, sl, r6
   2f9a0:	orr	r8, r1, r8
   2f9a4:	ldr	lr, [sp, #12]
   2f9a8:	mov	r1, lr
   2f9ac:	eor	r1, r1, ip
   2f9b0:	add	r0, r1, r0
   2f9b4:	add	r0, r8, r0
   2f9b8:	eor	r3, r3, fp
   2f9bc:	add	r8, r3, r0
   2f9c0:	add	r4, lr, r4
   2f9c4:	add	fp, r4, fp
   2f9c8:	eor	r1, r7, r2
   2f9cc:	and	r1, r1, r5
   2f9d0:	eor	r1, r1, r2
   2f9d4:	add	r1, r1, fp
   2f9d8:	ror	r0, sl, #23
   2f9dc:	ror	r3, r7, #13
   2f9e0:	ror	r4, r1, #15
   2f9e4:	eor	r4, r4, r1, ror #23
   2f9e8:	eor	r1, r1, r4
   2f9ec:	ror	fp, r8, #20
   2f9f0:	ldr	sl, [pc, #2020]	; 301dc <__assert_fail@plt+0x1eef0>
   2f9f4:	add	sl, fp, sl
   2f9f8:	add	sl, sl, r1
   2f9fc:	ror	sl, sl, #25
   2fa00:	ldr	lr, [sp, #116]	; 0x74
   2fa04:	ldr	r7, [sp, #144]	; 0x90
   2fa08:	eor	r7, lr, r7
   2fa0c:	ldr	r4, [sp, #20]
   2fa10:	eor	r7, r7, r4, ror #17
   2fa14:	ldr	lr, [sp, #128]	; 0x80
   2fa18:	ldr	r4, [sp, #8]
   2fa1c:	eor	r4, r4, lr, ror #25
   2fa20:	eor	r4, r4, r7
   2fa24:	eor	r4, r4, r7, ror #17
   2fa28:	eor	r7, r4, r7, ror #9
   2fa2c:	mov	lr, r7
   2fa30:	orr	r4, r9, r0
   2fa34:	and	r7, r4, r8
   2fa38:	and	r4, r9, r0
   2fa3c:	orr	r4, r7, r4
   2fa40:	ldr	r7, [sp, #16]
   2fa44:	eor	r7, r7, lr
   2fa48:	add	r6, r7, r6
   2fa4c:	add	r6, r4, r6
   2fa50:	eor	r4, fp, sl
   2fa54:	add	r4, r4, r6
   2fa58:	ldr	r7, [sp, #16]
   2fa5c:	add	r2, r7, r2
   2fa60:	add	sl, r2, sl
   2fa64:	eor	r7, r5, r3
   2fa68:	and	r7, r7, r1
   2fa6c:	eor	r7, r7, r3
   2fa70:	add	r7, r7, sl
   2fa74:	ror	r6, r9, #23
   2fa78:	str	r6, [sp, #32]
   2fa7c:	ror	r5, r5, #13
   2fa80:	ror	r6, r7, #15
   2fa84:	eor	r6, r6, r7, ror #23
   2fa88:	eor	r7, r7, r6
   2fa8c:	ror	fp, r4, #20
   2fa90:	ldr	sl, [pc, #1864]	; 301e0 <__assert_fail@plt+0x1eef4>
   2fa94:	add	sl, fp, sl
   2fa98:	add	sl, sl, r7
   2fa9c:	ror	sl, sl, #25
   2faa0:	ldr	r2, [sp, #120]	; 0x78
   2faa4:	ldr	r6, [sp, #148]	; 0x94
   2faa8:	eor	r9, r2, r6
   2faac:	ldr	r6, [sp, #52]	; 0x34
   2fab0:	eor	r9, r9, r6, ror #17
   2fab4:	ldr	r6, [sp, #12]
   2fab8:	ldr	r2, [sp, #132]	; 0x84
   2fabc:	eor	r6, r6, r2, ror #25
   2fac0:	eor	r6, r6, r9
   2fac4:	eor	r6, r6, r9, ror #17
   2fac8:	eor	r9, r6, r9, ror #9
   2facc:	mov	r2, r9
   2fad0:	ldr	r6, [sp, #32]
   2fad4:	orr	r6, r8, r6
   2fad8:	and	r9, r6, r4
   2fadc:	ldr	r6, [sp, #32]
   2fae0:	and	r6, r8, r6
   2fae4:	orr	r6, r9, r6
   2fae8:	ldr	r9, [sp, #20]
   2faec:	str	r2, [sp, #24]
   2faf0:	eor	r9, r9, r2
   2faf4:	add	r0, r9, r0
   2faf8:	add	r0, r6, r0
   2fafc:	eor	r6, fp, sl
   2fb00:	add	r6, r6, r0
   2fb04:	ldr	r9, [sp, #20]
   2fb08:	add	r0, r9, r3
   2fb0c:	add	sl, r0, sl
   2fb10:	eor	r0, r1, r5
   2fb14:	and	r0, r0, r7
   2fb18:	eor	r0, r0, r5
   2fb1c:	add	r0, r0, sl
   2fb20:	ror	r3, r8, #23
   2fb24:	ror	r1, r1, #13
   2fb28:	ror	r8, r0, #15
   2fb2c:	eor	r8, r8, r0, ror #23
   2fb30:	eor	r0, r0, r8
   2fb34:	ror	fp, r6, #20
   2fb38:	ldr	r9, [pc, #1700]	; 301e4 <__assert_fail@plt+0x1eef8>
   2fb3c:	add	r9, fp, r9
   2fb40:	add	r9, r9, r0
   2fb44:	ror	r9, r9, #25
   2fb48:	ldr	r8, [sp, #124]	; 0x7c
   2fb4c:	ldr	r2, [sp, #4]
   2fb50:	eor	r8, r8, r2
   2fb54:	eor	r8, r8, ip, ror #17
   2fb58:	ldr	sl, [sp, #16]
   2fb5c:	ldr	r2, [sp, #136]	; 0x88
   2fb60:	eor	sl, sl, r2, ror #25
   2fb64:	eor	sl, sl, r8
   2fb68:	eor	sl, sl, r8, ror #17
   2fb6c:	eor	r8, sl, r8, ror #9
   2fb70:	mov	r2, r8
   2fb74:	orr	sl, r4, r3
   2fb78:	and	r8, sl, r6
   2fb7c:	and	sl, r4, r3
   2fb80:	orr	sl, r8, sl
   2fb84:	ldr	r8, [sp, #52]	; 0x34
   2fb88:	str	r2, [sp, #28]
   2fb8c:	eor	r8, r8, r2
   2fb90:	ldr	r2, [sp, #32]
   2fb94:	add	r2, r8, r2
   2fb98:	add	r2, sl, r2
   2fb9c:	eor	sl, fp, r9
   2fba0:	add	sl, sl, r2
   2fba4:	ldr	r8, [sp, #52]	; 0x34
   2fba8:	add	r5, r8, r5
   2fbac:	add	r9, r5, r9
   2fbb0:	eor	r2, r7, r1
   2fbb4:	and	r2, r2, r0
   2fbb8:	eor	r2, r2, r1
   2fbbc:	add	r2, r2, r9
   2fbc0:	ror	r4, r4, #23
   2fbc4:	ror	r7, r7, #13
   2fbc8:	str	r7, [sp, #36]	; 0x24
   2fbcc:	ror	r7, r2, #15
   2fbd0:	eor	r7, r7, r2, ror #23
   2fbd4:	eor	r2, r2, r7
   2fbd8:	ror	fp, sl, #20
   2fbdc:	ldr	r8, [pc, #1540]	; 301e8 <__assert_fail@plt+0x1eefc>
   2fbe0:	add	r8, fp, r8
   2fbe4:	add	r8, r8, r2
   2fbe8:	ror	r8, r8, #25
   2fbec:	ldr	r7, [sp, #128]	; 0x80
   2fbf0:	ldr	r5, [sp, #8]
   2fbf4:	eor	r7, r7, r5
   2fbf8:	eor	r7, r7, lr, ror #17
   2fbfc:	ldr	r9, [sp, #20]
   2fc00:	ldr	r5, [sp, #140]	; 0x8c
   2fc04:	eor	r9, r9, r5, ror #25
   2fc08:	eor	r9, r9, r7
   2fc0c:	eor	r9, r9, r7, ror #17
   2fc10:	eor	r7, r9, r7, ror #9
   2fc14:	mov	r5, r7
   2fc18:	orr	r9, r6, r4
   2fc1c:	and	r7, r9, sl
   2fc20:	and	r9, r6, r4
   2fc24:	orr	r9, r7, r9
   2fc28:	str	r5, [sp, #32]
   2fc2c:	eor	r7, ip, r5
   2fc30:	add	r3, r7, r3
   2fc34:	add	r3, r9, r3
   2fc38:	eor	r9, fp, r8
   2fc3c:	add	r9, r9, r3
   2fc40:	add	r1, ip, r1
   2fc44:	add	r8, r1, r8
   2fc48:	ldr	r7, [sp, #36]	; 0x24
   2fc4c:	eor	r3, r0, r7
   2fc50:	and	r3, r3, r2
   2fc54:	eor	r3, r3, r7
   2fc58:	add	r3, r3, r8
   2fc5c:	ror	r6, r6, #23
   2fc60:	ror	r1, r0, #13
   2fc64:	ror	r0, r3, #15
   2fc68:	eor	r0, r0, r3, ror #23
   2fc6c:	eor	r3, r3, r0
   2fc70:	ror	fp, r9, #20
   2fc74:	ldr	r7, [pc, #1392]	; 301ec <__assert_fail@plt+0x1ef00>
   2fc78:	add	r7, fp, r7
   2fc7c:	add	r7, r7, r3
   2fc80:	ror	r7, r7, #25
   2fc84:	ldr	r5, [sp, #132]	; 0x84
   2fc88:	ldr	r0, [sp, #12]
   2fc8c:	eor	r0, r5, r0
   2fc90:	ldr	r8, [sp, #24]
   2fc94:	eor	r0, r0, r8, ror #17
   2fc98:	ldr	r8, [sp, #52]	; 0x34
   2fc9c:	ldr	r5, [sp, #144]	; 0x90
   2fca0:	eor	r8, r8, r5, ror #25
   2fca4:	eor	r8, r8, r0
   2fca8:	eor	r8, r8, r0, ror #17
   2fcac:	eor	r0, r8, r0, ror #9
   2fcb0:	mov	r5, r0
   2fcb4:	orr	r8, sl, r6
   2fcb8:	and	r0, r8, r9
   2fcbc:	and	r8, sl, r6
   2fcc0:	orr	r8, r0, r8
   2fcc4:	str	r5, [sp, #64]	; 0x40
   2fcc8:	eor	r0, lr, r5
   2fccc:	add	r4, r0, r4
   2fcd0:	add	r4, r8, r4
   2fcd4:	eor	r8, fp, r7
   2fcd8:	add	r8, r8, r4
   2fcdc:	ldr	r0, [sp, #36]	; 0x24
   2fce0:	add	r5, lr, r0
   2fce4:	add	r7, r5, r7
   2fce8:	eor	r0, r2, r1
   2fcec:	and	r0, r0, r3
   2fcf0:	eor	r0, r0, r1
   2fcf4:	add	r0, r0, r7
   2fcf8:	ror	fp, sl, #23
   2fcfc:	str	fp, [sp, #44]	; 0x2c
   2fd00:	ror	r2, r2, #13
   2fd04:	ror	r5, r0, #15
   2fd08:	eor	r5, r5, r0, ror #23
   2fd0c:	eor	r5, r5, r0
   2fd10:	ror	r7, r8, #20
   2fd14:	ldr	r4, [pc, #1108]	; 30170 <__assert_fail@plt+0x1ee84>
   2fd18:	add	r4, r7, r4
   2fd1c:	add	r4, r4, r5
   2fd20:	ror	r4, r4, #25
   2fd24:	ldr	sl, [sp, #136]	; 0x88
   2fd28:	ldr	fp, [sp, #16]
   2fd2c:	eor	r0, sl, fp
   2fd30:	ldr	fp, [sp, #28]
   2fd34:	eor	r0, r0, fp, ror #17
   2fd38:	ldr	sl, [sp, #148]	; 0x94
   2fd3c:	eor	fp, ip, sl, ror #25
   2fd40:	eor	fp, fp, r0
   2fd44:	eor	fp, fp, r0, ror #17
   2fd48:	eor	fp, fp, r0, ror #9
   2fd4c:	mov	sl, fp
   2fd50:	ldr	fp, [sp, #44]	; 0x2c
   2fd54:	orr	fp, r9, fp
   2fd58:	and	r0, fp, r8
   2fd5c:	ldr	fp, [sp, #44]	; 0x2c
   2fd60:	and	fp, r9, fp
   2fd64:	orr	fp, r0, fp
   2fd68:	ldr	r0, [sp, #24]
   2fd6c:	str	sl, [sp, #36]	; 0x24
   2fd70:	eor	r0, r0, sl
   2fd74:	add	r6, r0, r6
   2fd78:	add	r6, fp, r6
   2fd7c:	eor	r7, r7, r4
   2fd80:	add	r6, r7, r6
   2fd84:	ldr	r7, [sp, #24]
   2fd88:	add	r1, r7, r1
   2fd8c:	add	r4, r1, r4
   2fd90:	eor	r1, r3, r2
   2fd94:	and	r1, r1, r5
   2fd98:	eor	r1, r1, r2
   2fd9c:	add	r1, r1, r4
   2fda0:	ror	r9, r9, #23
   2fda4:	ror	r3, r3, #13
   2fda8:	ror	r0, r1, #15
   2fdac:	eor	r0, r0, r1, ror #23
   2fdb0:	eor	r1, r1, r0
   2fdb4:	ror	fp, r6, #20
   2fdb8:	ldr	r0, [pc, #948]	; 30174 <__assert_fail@plt+0x1ee88>
   2fdbc:	add	r0, fp, r0
   2fdc0:	add	r0, r0, r1
   2fdc4:	ror	r0, r0, #25
   2fdc8:	ldr	sl, [sp, #140]	; 0x8c
   2fdcc:	ldr	r4, [sp, #20]
   2fdd0:	eor	r4, sl, r4
   2fdd4:	ldr	r7, [sp, #32]
   2fdd8:	eor	r4, r4, r7, ror #17
   2fddc:	ldr	r7, [sp, #4]
   2fde0:	eor	r7, lr, r7, ror #25
   2fde4:	eor	r7, r7, r4
   2fde8:	eor	r7, r7, r4, ror #17
   2fdec:	eor	r4, r7, r4, ror #9
   2fdf0:	mov	sl, r4
   2fdf4:	orr	r7, r8, r9
   2fdf8:	and	r4, r7, r6
   2fdfc:	and	r7, r8, r9
   2fe00:	orr	r7, r4, r7
   2fe04:	ldr	r4, [sp, #28]
   2fe08:	str	sl, [sp, #40]	; 0x28
   2fe0c:	eor	r4, r4, sl
   2fe10:	ldr	sl, [sp, #44]	; 0x2c
   2fe14:	add	sl, r4, sl
   2fe18:	add	sl, r7, sl
   2fe1c:	eor	r7, fp, r0
   2fe20:	add	r7, r7, sl
   2fe24:	ldr	sl, [sp, #28]
   2fe28:	add	r2, sl, r2
   2fe2c:	add	r0, r2, r0
   2fe30:	eor	r2, r5, r3
   2fe34:	and	r2, r2, r1
   2fe38:	eor	r2, r2, r3
   2fe3c:	add	r2, r2, r0
   2fe40:	ror	r8, r8, #23
   2fe44:	str	r8, [sp, #56]	; 0x38
   2fe48:	ror	r0, r5, #13
   2fe4c:	ror	r4, r2, #15
   2fe50:	eor	r4, r4, r2, ror #23
   2fe54:	eor	r2, r2, r4
   2fe58:	ror	fp, r7, #20
   2fe5c:	ldr	sl, [pc, #788]	; 30178 <__assert_fail@plt+0x1ee8c>
   2fe60:	add	sl, fp, sl
   2fe64:	add	sl, sl, r2
   2fe68:	ror	sl, sl, #25
   2fe6c:	ldr	r8, [sp, #144]	; 0x90
   2fe70:	ldr	r5, [sp, #52]	; 0x34
   2fe74:	eor	r4, r8, r5
   2fe78:	ldr	r5, [sp, #64]	; 0x40
   2fe7c:	eor	r4, r4, r5, ror #17
   2fe80:	ldr	r5, [sp, #24]
   2fe84:	ldr	r8, [sp, #8]
   2fe88:	eor	r5, r5, r8, ror #25
   2fe8c:	eor	r5, r5, r4
   2fe90:	eor	r5, r5, r4, ror #17
   2fe94:	eor	r4, r5, r4, ror #9
   2fe98:	mov	r8, r4
   2fe9c:	ldr	r5, [sp, #56]	; 0x38
   2fea0:	orr	r5, r6, r5
   2fea4:	and	r4, r5, r7
   2fea8:	ldr	r5, [sp, #56]	; 0x38
   2feac:	and	r5, r6, r5
   2feb0:	orr	r5, r4, r5
   2feb4:	ldr	r4, [sp, #32]
   2feb8:	str	r8, [sp, #44]	; 0x2c
   2febc:	eor	r4, r4, r8
   2fec0:	add	r9, r4, r9
   2fec4:	add	r9, r5, r9
   2fec8:	eor	r5, fp, sl
   2fecc:	add	r5, r5, r9
   2fed0:	ldr	r4, [sp, #32]
   2fed4:	add	r3, r4, r3
   2fed8:	add	sl, r3, sl
   2fedc:	eor	r3, r1, r0
   2fee0:	and	r3, r3, r2
   2fee4:	eor	r3, r3, r0
   2fee8:	add	r3, r3, sl
   2feec:	ror	sl, r6, #23
   2fef0:	ror	r6, r1, #13
   2fef4:	str	r6, [sp, #60]	; 0x3c
   2fef8:	ror	r4, r3, #15
   2fefc:	eor	r4, r4, r3, ror #23
   2ff00:	eor	r3, r3, r4
   2ff04:	ror	r4, r5, #20
   2ff08:	ldr	r9, [pc, #620]	; 3017c <__assert_fail@plt+0x1ee90>
   2ff0c:	add	r9, r4, r9
   2ff10:	add	r9, r9, r3
   2ff14:	ror	r9, r9, #25
   2ff18:	ldr	r1, [sp, #148]	; 0x94
   2ff1c:	str	ip, [sp, #68]	; 0x44
   2ff20:	eor	r6, r1, ip
   2ff24:	ldr	fp, [sp, #36]	; 0x24
   2ff28:	eor	r6, r6, fp, ror #17
   2ff2c:	ldr	ip, [sp, #28]
   2ff30:	ldr	fp, [sp, #12]
   2ff34:	eor	fp, ip, fp, ror #25
   2ff38:	eor	fp, fp, r6
   2ff3c:	eor	fp, fp, r6, ror #17
   2ff40:	eor	r6, fp, r6, ror #9
   2ff44:	mov	r8, r6
   2ff48:	orr	fp, r7, sl
   2ff4c:	and	r6, fp, r5
   2ff50:	and	fp, r7, sl
   2ff54:	orr	fp, r6, fp
   2ff58:	ldr	ip, [sp, #64]	; 0x40
   2ff5c:	mov	r6, ip
   2ff60:	str	r8, [sp, #48]	; 0x30
   2ff64:	eor	r6, r6, r8
   2ff68:	ldr	r8, [sp, #56]	; 0x38
   2ff6c:	add	r8, r6, r8
   2ff70:	add	r8, fp, r8
   2ff74:	eor	r4, r4, r9
   2ff78:	add	r4, r4, r8
   2ff7c:	mov	fp, ip
   2ff80:	add	r0, ip, r0
   2ff84:	add	r9, r0, r9
   2ff88:	ldr	r6, [sp, #60]	; 0x3c
   2ff8c:	eor	r0, r2, r6
   2ff90:	and	r0, r0, r3
   2ff94:	eor	r0, r0, r6
   2ff98:	add	r0, r0, r9
   2ff9c:	ror	r7, r7, #23
   2ffa0:	ror	r2, r2, #13
   2ffa4:	ror	r6, r0, #15
   2ffa8:	eor	r6, r6, r0, ror #23
   2ffac:	eor	r0, r0, r6
   2ffb0:	ror	r8, r4, #20
   2ffb4:	ldr	r9, [pc, #452]	; 30180 <__assert_fail@plt+0x1ee94>
   2ffb8:	add	r9, r8, r9
   2ffbc:	add	r9, r9, r0
   2ffc0:	ror	r9, r9, #25
   2ffc4:	str	lr, [sp, #76]	; 0x4c
   2ffc8:	ldr	r1, [sp, #4]
   2ffcc:	eor	r1, r1, lr
   2ffd0:	ldr	r6, [sp, #40]	; 0x28
   2ffd4:	eor	lr, r1, r6, ror #17
   2ffd8:	ldr	ip, [sp, #32]
   2ffdc:	ldr	r6, [sp, #16]
   2ffe0:	eor	r6, ip, r6, ror #25
   2ffe4:	eor	r6, r6, lr
   2ffe8:	eor	r6, r6, lr, ror #17
   2ffec:	eor	lr, r6, lr, ror #9
   2fff0:	mov	r1, lr
   2fff4:	orr	lr, r5, r7
   2fff8:	and	r6, lr, r4
   2fffc:	and	lr, r5, r7
   30000:	orr	lr, r6, lr
   30004:	ldr	ip, [sp, #36]	; 0x24
   30008:	mov	r6, ip
   3000c:	str	r1, [sp, #4]
   30010:	eor	r6, r6, r1
   30014:	add	r6, r6, sl
   30018:	add	r6, lr, r6
   3001c:	eor	r8, r8, r9
   30020:	add	r8, r8, r6
   30024:	ldr	r1, [sp, #60]	; 0x3c
   30028:	add	r1, ip, r1
   3002c:	add	r9, r1, r9
   30030:	eor	r1, r3, r2
   30034:	and	r1, r1, r0
   30038:	eor	r1, r1, r2
   3003c:	add	r1, r1, r9
   30040:	ror	r5, r5, #23
   30044:	ror	r3, r3, #13
   30048:	ror	lr, r1, #15
   3004c:	eor	lr, lr, r1, ror #23
   30050:	eor	r1, r1, lr
   30054:	ror	lr, r8, #20
   30058:	ldr	r6, [pc, #292]	; 30184 <__assert_fail@plt+0x1ee98>
   3005c:	add	r6, lr, r6
   30060:	add	r6, r6, r1
   30064:	ror	r6, r6, #25
   30068:	ldr	sl, [sp, #24]
   3006c:	ldr	ip, [sp, #8]
   30070:	eor	ip, ip, sl
   30074:	ldr	r9, [sp, #44]	; 0x2c
   30078:	eor	ip, ip, r9, ror #17
   3007c:	ldr	r9, [sp, #20]
   30080:	eor	r9, fp, r9, ror #25
   30084:	eor	r9, r9, ip
   30088:	eor	r9, r9, ip, ror #17
   3008c:	eor	r9, r9, ip, ror #9
   30090:	mov	fp, r9
   30094:	orr	r9, r4, r5
   30098:	and	ip, r9, r8
   3009c:	and	r9, r4, r5
   300a0:	orr	r9, ip, r9
   300a4:	ldr	sl, [sp, #40]	; 0x28
   300a8:	str	fp, [sp, #8]
   300ac:	eor	ip, sl, fp
   300b0:	add	r7, ip, r7
   300b4:	add	r7, r9, r7
   300b8:	eor	lr, lr, r6
   300bc:	add	r9, lr, r7
   300c0:	add	r2, sl, r2
   300c4:	add	r6, r2, r6
   300c8:	eor	ip, r0, r3
   300cc:	and	ip, ip, r1
   300d0:	eor	ip, ip, r3
   300d4:	add	ip, ip, r6
   300d8:	ror	r4, r4, #23
   300dc:	ror	r2, r0, #13
   300e0:	str	r2, [sp, #56]	; 0x38
   300e4:	ror	r2, ip, #15
   300e8:	eor	r2, r2, ip, ror #23
   300ec:	eor	ip, ip, r2
   300f0:	ror	r2, r9, #20
   300f4:	ldr	r6, [pc, #140]	; 30188 <__assert_fail@plt+0x1ee9c>
   300f8:	add	r6, r2, r6
   300fc:	add	r6, r6, ip
   30100:	ror	r6, r6, #25
   30104:	ldr	fp, [sp, #12]
   30108:	ldr	r7, [sp, #28]
   3010c:	eor	lr, fp, r7
   30110:	ldr	r7, [sp, #48]	; 0x30
   30114:	eor	lr, lr, r7, ror #17
   30118:	ldr	sl, [sp, #36]	; 0x24
   3011c:	ldr	fp, [sp, #52]	; 0x34
   30120:	eor	r7, sl, fp, ror #25
   30124:	eor	r7, r7, lr
   30128:	eor	r7, r7, lr, ror #17
   3012c:	b	301f0 <__assert_fail@plt+0x1ef04>
   30130:	stmibvc	ip, {r0, r3, r4, r8, sl, lr}^
   30134:	vshll.u16	q4, d18, #8
   30138:	ldr	r1, [r1, -r5, ror #8]!
   3013c:	cdpgt	8, 6, cr2, cr2, cr11, {6}
   30140:	stflse	f5, [r4], {151}	; 0x97
   30144:	stmibcc	r8, {r0, r1, r2, r3, r5, r8, r9, sp, pc}
   30148:	tstvc	r1, #98566144	; 0x5e00000
   3014c:			; <UNDEFINED> instruction: 0xe6228cbc
   30150:	mcrrgt	9, 7, r1, r5, cr9	; <UNPREDICTABLE>
   30154:	stmls	sl, {r0, r1, r4, r5, r6, r7, r9, ip, sp}
   30158:	tstcc	r4, r7, ror #11
   3015c:	eorvs	ip, r8, #210944	; 0x33800
   30160:	ldrbgt	r9, [r1], #-1948	; 0xfffff864
   30164:	stmiahi	r3!, {r0, r3, r4, r5, r8, r9, sl, fp, sp}
   30168:	hvcne	26083	; 0x65e3
   3016c:	addcs	fp, ip, #58880	; 0xe600
   30170:	bhi	1ed1fec <optarg@@GLIBC_2.4+0x1e87e44>
   30174:	ldrbtne	r0, [r5], #3899	; 0xf3b
   30178:	stmibcs	sl!, {r1, r2, r4, r5, r6, r9, sl, fp, ip}^
   3017c:	bicspl	r3, r4, #236, 24	; 0xec00
   30180:	sbfxge	r7, r8, #19, #9
   30184:	svcmi	0x0050f3b1
   30188:	cdpls	7, 10, cr14, cr1, cr2, {3}
   3018c:	stclcc	14, cr12, [r3, #-788]	; 0xfffffcec
   30190:	bvc	fe2177c0 <optarg@@GLIBC_2.4+0xfe1cd618>
   30194:			; <UNDEFINED> instruction: 0xf50f3b14
   30198:	b	7cda44 <optarg@@GLIBC_2.4+0x78389c>
   3019c:	ldrtle	lr, [ip], #-3155	; 0xfffff3ad
   301a0:	ldmdage	r9!, {r0, r1, r2, r5, r7, fp, ip, lr, pc}^
   301a4:	rscspl	fp, r3, pc, asr #2
   301a8:			; <UNDEFINED> instruction: 0xa1e7629e
   301ac:	bicmi	ip, lr, #255852544	; 0xf400000
   301b0:			; <UNDEFINED> instruction: 0x879d8a7a
   301b4:	svceq	0x003b14f5
   301b8:	vsubne.f16	s5, s13, s21	; <UNPREDICTABLE>
   301bc:	stclcc	3, cr5, [ip], #848	; 0x350
   301c0:	ldmibvc	r8, {r3, r5, r7, r8, r9, sl, sp, pc}^
   301c4:	vcvt.u32.f32	q2, q0, #15
   301c8:	strb	r9, [r2, -r1, lsr #29]!
   301cc:	cdpgt	13, 12, cr3, cr5, cr3, {2}
   301d0:	vstrls	s14, [sl, #540]	; 0x21c
   301d4:	blcc	56d618 <optarg@@GLIBC_2.4+0x523470>
   301d8:			; <UNDEFINED> instruction: 0x7629ea1e
   301dc:	cfldrd	mvd13, [r3], {60}	; 0x3c
   301e0:	stmiale	r7!, {r0, r3, r4, r5, r6, fp, sp, pc}
   301e4:	strdlt	r5, [pc, #-3]	; 301e9 <__assert_fail@plt+0x1eefd>
   301e8:	addsvs	sl, lr, #-1073741767	; 0xc0000039
   301ec:	ldrgt	r4, [sp, #-974]!	; 0xfffffc32
   301f0:	eor	r7, r7, lr, ror #9
   301f4:	mov	r0, r7
   301f8:	orr	r7, r8, r4
   301fc:	and	lr, r7, r9
   30200:	and	r7, r8, r4
   30204:	orr	r7, lr, r7
   30208:	ldr	sl, [sp, #44]	; 0x2c
   3020c:	mov	lr, sl
   30210:	str	r0, [sp, #12]
   30214:	eor	lr, lr, r0
   30218:	add	r5, lr, r5
   3021c:	add	r5, r7, r5
   30220:	eor	r2, r2, r6
   30224:	add	r7, r2, r5
   30228:	add	r3, sl, r3
   3022c:	add	r6, r3, r6
   30230:	ldr	r3, [sp, #56]	; 0x38
   30234:	eor	r5, r1, r3
   30238:	and	r5, r5, ip
   3023c:	eor	r5, r5, r3
   30240:	add	r5, r5, r6
   30244:	ror	r8, r8, #23
   30248:	ror	r1, r1, #13
   3024c:	ror	r3, r5, #15
   30250:	eor	r3, r3, r5, ror #23
   30254:	eor	r5, r5, r3
   30258:	ror	r3, r7, #20
   3025c:	ldr	sl, [pc, #-216]	; 3018c <__assert_fail@plt+0x1eea0>
   30260:	add	sl, r3, sl
   30264:	add	sl, sl, r5
   30268:	ror	sl, sl, #25
   3026c:	ldr	r6, [sp, #16]
   30270:	ldr	r2, [sp, #32]
   30274:	eor	r6, r6, r2
   30278:	ldr	r2, [sp, #4]
   3027c:	eor	r6, r6, r2, ror #17
   30280:	ldr	lr, [sp, #40]	; 0x28
   30284:	ldr	r2, [sp, #68]	; 0x44
   30288:	eor	r2, lr, r2, ror #25
   3028c:	eor	r2, r2, r6
   30290:	eor	r2, r2, r6, ror #17
   30294:	eor	r6, r2, r6, ror #9
   30298:	mov	r0, r6
   3029c:	orr	lr, r9, r8
   302a0:	and	r2, lr, r7
   302a4:	str	r8, [sp, #52]	; 0x34
   302a8:	and	lr, r9, r8
   302ac:	orr	lr, r2, lr
   302b0:	ldr	r6, [sp, #48]	; 0x30
   302b4:	str	r0, [sp, #16]
   302b8:	eor	r2, r6, r0
   302bc:	add	r4, r2, r4
   302c0:	add	r4, lr, r4
   302c4:	eor	r3, r3, sl
   302c8:	add	lr, r3, r4
   302cc:	ldr	r3, [sp, #56]	; 0x38
   302d0:	add	r0, r6, r3
   302d4:	add	sl, r0, sl
   302d8:	eor	r0, ip, r1
   302dc:	and	r0, r0, r5
   302e0:	eor	r0, r0, r1
   302e4:	add	r0, r0, sl
   302e8:	ror	r6, r9, #23
   302ec:	ror	ip, ip, #13
   302f0:	ror	r3, r0, #15
   302f4:	eor	r3, r3, r0, ror #23
   302f8:	eor	r0, r0, r3
   302fc:	ror	r2, lr, #20
   30300:	ldr	r4, [pc, #-376]	; 30190 <__assert_fail@plt+0x1eea4>
   30304:	add	r4, r2, r4
   30308:	add	r4, r4, r0
   3030c:	ror	r4, r4, #25
   30310:	ldr	r9, [sp, #20]
   30314:	ldr	r3, [sp, #64]	; 0x40
   30318:	eor	sl, r9, r3
   3031c:	ldr	r9, [sp, #8]
   30320:	eor	sl, sl, r9, ror #17
   30324:	ldr	r9, [sp, #44]	; 0x2c
   30328:	ldr	r3, [sp, #76]	; 0x4c
   3032c:	eor	r3, r9, r3, ror #25
   30330:	eor	r3, r3, sl
   30334:	eor	r3, r3, sl, ror #17
   30338:	eor	r3, r3, sl, ror #9
   3033c:	mov	r8, r3
   30340:	orr	r9, r7, r6
   30344:	and	r3, r9, lr
   30348:	and	r9, r7, r6
   3034c:	orr	r9, r3, r9
   30350:	ldr	sl, [sp, #4]
   30354:	mov	r3, sl
   30358:	str	r8, [sp, #20]
   3035c:	eor	r3, r3, r8
   30360:	ldr	r8, [sp, #52]	; 0x34
   30364:	add	r8, r3, r8
   30368:	add	r8, r9, r8
   3036c:	eor	r2, r2, r4
   30370:	add	r2, r2, r8
   30374:	add	r1, sl, r1
   30378:	add	r4, r1, r4
   3037c:	eor	r3, r5, ip
   30380:	and	r3, r3, r0
   30384:	eor	r3, r3, ip
   30388:	add	r4, r3, r4
   3038c:	ror	r7, r7, #23
   30390:	ror	r5, r5, #13
   30394:	ror	r3, r4, #15
   30398:	eor	r3, r3, r4, ror #23
   3039c:	eor	r4, r4, r3
   303a0:	ror	r1, r2, #20
   303a4:	ldr	r8, [pc, #-536]	; 30194 <__assert_fail@plt+0x1eea8>
   303a8:	add	r8, r1, r8
   303ac:	add	r8, r8, r4
   303b0:	ror	r8, r8, #25
   303b4:	ldr	r9, [sp, #36]	; 0x24
   303b8:	eor	r9, fp, r9
   303bc:	ldr	r3, [sp, #12]
   303c0:	eor	r9, r9, r3, ror #17
   303c4:	ldr	fp, [sp, #48]	; 0x30
   303c8:	ldr	sl, [sp, #24]
   303cc:	eor	r3, fp, sl, ror #25
   303d0:	eor	r3, r3, r9
   303d4:	eor	r3, r3, r9, ror #17
   303d8:	eor	r3, r3, r9, ror #9
   303dc:	mov	sl, r3
   303e0:	orr	r3, lr, r7
   303e4:	and	r9, r3, r2
   303e8:	and	r3, lr, r7
   303ec:	orr	r3, r9, r3
   303f0:	ldr	fp, [sp, #8]
   303f4:	str	sl, [sp, #52]	; 0x34
   303f8:	eor	r9, fp, sl
   303fc:	add	r9, r9, r6
   30400:	add	r9, r3, r9
   30404:	eor	r3, r1, r8
   30408:	add	r3, r3, r9
   3040c:	add	ip, fp, ip
   30410:	add	r8, ip, r8
   30414:	eor	ip, r0, r5
   30418:	and	ip, ip, r4
   3041c:	eor	ip, ip, r5
   30420:	add	ip, ip, r8
   30424:	ror	lr, lr, #23
   30428:	ror	r0, r0, #13
   3042c:	ror	r1, ip, #15
   30430:	eor	r1, r1, ip, ror #23
   30434:	eor	ip, ip, r1
   30438:	ror	r6, r3, #20
   3043c:	ldr	r9, [pc, #-684]	; 30198 <__assert_fail@plt+0x1eeac>
   30440:	add	r9, r6, r9
   30444:	add	r9, r9, ip
   30448:	ror	r9, r9, #25
   3044c:	ldr	r1, [sp, #68]	; 0x44
   30450:	ldr	r8, [sp, #40]	; 0x28
   30454:	eor	r8, r1, r8
   30458:	ldr	r1, [sp, #16]
   3045c:	eor	r8, r8, r1, ror #17
   30460:	ldr	fp, [sp, #4]
   30464:	ldr	r1, [sp, #28]
   30468:	eor	r1, fp, r1, ror #25
   3046c:	eor	r1, r1, r8
   30470:	eor	r1, r1, r8, ror #17
   30474:	eor	r1, r1, r8, ror #9
   30478:	mov	fp, r1
   3047c:	orr	r8, r2, lr
   30480:	and	r1, r8, r3
   30484:	and	r8, r2, lr
   30488:	orr	r8, r1, r8
   3048c:	ldr	sl, [sp, #12]
   30490:	mov	r1, sl
   30494:	str	fp, [sp, #56]	; 0x38
   30498:	eor	r1, r1, fp
   3049c:	add	r7, r1, r7
   304a0:	add	r7, r8, r7
   304a4:	eor	r6, r6, r9
   304a8:	add	r8, r6, r7
   304ac:	add	r5, sl, r5
   304b0:	add	r9, r5, r9
   304b4:	eor	r5, r4, r0
   304b8:	and	r5, r5, ip
   304bc:	eor	r5, r5, r0
   304c0:	add	r5, r5, r9
   304c4:	ror	r2, r2, #23
   304c8:	ror	fp, r4, #13
   304cc:	ror	r1, r5, #15
   304d0:	eor	r1, r1, r5, ror #23
   304d4:	eor	r5, r5, r1
   304d8:	ror	r1, r8, #20
   304dc:	ldr	sl, [pc, #-840]	; 3019c <__assert_fail@plt+0x1eeb0>
   304e0:	add	sl, r1, sl
   304e4:	add	sl, sl, r5
   304e8:	ror	sl, sl, #25
   304ec:	ldr	r4, [sp, #76]	; 0x4c
   304f0:	ldr	r6, [sp, #44]	; 0x2c
   304f4:	eor	r4, r4, r6
   304f8:	ldr	r7, [sp, #20]
   304fc:	eor	r6, r4, r7, ror #17
   30500:	ldr	r4, [sp, #8]
   30504:	ldr	r7, [sp, #32]
   30508:	eor	r4, r4, r7, ror #25
   3050c:	eor	r4, r4, r6
   30510:	eor	r4, r4, r6, ror #17
   30514:	eor	r4, r4, r6, ror #9
   30518:	mov	r7, r4
   3051c:	orr	r6, r3, r2
   30520:	and	r4, r6, r8
   30524:	and	r6, r3, r2
   30528:	orr	r6, r4, r6
   3052c:	ldr	r9, [sp, #16]
   30530:	str	r7, [sp, #60]	; 0x3c
   30534:	eor	r4, r9, r7
   30538:	add	lr, r4, lr
   3053c:	add	lr, r6, lr
   30540:	eor	r1, r1, sl
   30544:	add	r1, r1, lr
   30548:	add	r0, r9, r0
   3054c:	add	sl, r0, sl
   30550:	eor	r0, ip, fp
   30554:	and	r0, r0, r5
   30558:	eor	r0, r0, fp
   3055c:	add	r0, r0, sl
   30560:	ror	r3, r3, #23
   30564:	ror	ip, ip, #13
   30568:	ror	lr, r0, #15
   3056c:	eor	lr, lr, r0, ror #23
   30570:	eor	r0, r0, lr
   30574:	ror	lr, r1, #20
   30578:	ldr	sl, [pc, #-992]	; 301a0 <__assert_fail@plt+0x1eeb4>
   3057c:	add	sl, lr, sl
   30580:	add	sl, sl, r0
   30584:	ror	sl, sl, #25
   30588:	ldr	r4, [sp, #24]
   3058c:	ldr	r6, [sp, #48]	; 0x30
   30590:	eor	r6, r4, r6
   30594:	ldr	r4, [sp, #52]	; 0x34
   30598:	eor	r7, r6, r4, ror #17
   3059c:	ldr	r9, [sp, #12]
   305a0:	ldr	r4, [sp, #64]	; 0x40
   305a4:	eor	r4, r9, r4, ror #25
   305a8:	eor	r4, r4, r7
   305ac:	eor	r4, r4, r7, ror #17
   305b0:	eor	r6, r4, r7, ror #9
   305b4:	mov	r9, r6
   305b8:	orr	r6, r8, r3
   305bc:	and	r4, r6, r1
   305c0:	and	r6, r8, r3
   305c4:	orr	r6, r4, r6
   305c8:	ldr	r7, [sp, #20]
   305cc:	mov	r4, r7
   305d0:	str	r9, [sp, #68]	; 0x44
   305d4:	eor	r4, r4, r9
   305d8:	add	r2, r4, r2
   305dc:	add	r2, r6, r2
   305e0:	eor	lr, lr, sl
   305e4:	add	lr, lr, r2
   305e8:	add	r2, r7, fp
   305ec:	add	sl, r2, sl
   305f0:	eor	r2, r5, ip
   305f4:	and	r2, r2, r0
   305f8:	eor	r2, r2, ip
   305fc:	add	r2, r2, sl
   30600:	ror	r6, r8, #23
   30604:	ror	r5, r5, #13
   30608:	ror	r4, r2, #15
   3060c:	eor	r4, r4, r2, ror #23
   30610:	eor	r2, r2, r4
   30614:	ror	r4, lr, #20
   30618:	ldr	r7, [pc, #-1148]	; 301a4 <__assert_fail@plt+0x1eeb8>
   3061c:	add	r7, r4, r7
   30620:	add	r7, r7, r2
   30624:	ror	r7, r7, #25
   30628:	ldr	r8, [sp, #28]
   3062c:	ldr	fp, [sp, #4]
   30630:	eor	sl, r8, fp
   30634:	ldr	r8, [sp, #56]	; 0x38
   30638:	eor	sl, sl, r8, ror #17
   3063c:	ldr	r8, [sp, #16]
   30640:	ldr	r9, [sp, #36]	; 0x24
   30644:	eor	r8, r8, r9, ror #25
   30648:	eor	r8, r8, sl
   3064c:	eor	r8, r8, sl, ror #17
   30650:	eor	sl, r8, sl, ror #9
   30654:	mov	fp, sl
   30658:	orr	r9, r1, r6
   3065c:	and	r8, r9, lr
   30660:	and	r9, r1, r6
   30664:	orr	r9, r8, r9
   30668:	ldr	sl, [sp, #52]	; 0x34
   3066c:	str	fp, [sp, #24]
   30670:	eor	r8, sl, fp
   30674:	add	r3, r8, r3
   30678:	add	r3, r9, r3
   3067c:	eor	r4, r4, r7
   30680:	add	r4, r4, r3
   30684:	add	ip, sl, ip
   30688:	add	r7, ip, r7
   3068c:	eor	r3, r0, r5
   30690:	and	r3, r3, r2
   30694:	eor	r3, r3, r5
   30698:	add	r3, r3, r7
   3069c:	ror	r1, r1, #23
   306a0:	ror	fp, r0, #13
   306a4:	ror	r0, r3, #15
   306a8:	eor	r0, r0, r3, ror #23
   306ac:	eor	r3, r3, r0
   306b0:	ror	ip, r4, #20
   306b4:	ldr	sl, [pc, #-1300]	; 301a8 <__assert_fail@plt+0x1eebc>
   306b8:	add	sl, ip, sl
   306bc:	add	sl, sl, r3
   306c0:	ror	sl, sl, #25
   306c4:	ldr	r7, [sp, #32]
   306c8:	ldr	r0, [sp, #8]
   306cc:	eor	r9, r7, r0
   306d0:	ldr	r0, [sp, #60]	; 0x3c
   306d4:	eor	r9, r9, r0, ror #17
   306d8:	ldr	r7, [sp, #20]
   306dc:	ldr	r8, [sp, #40]	; 0x28
   306e0:	eor	r0, r7, r8, ror #25
   306e4:	eor	r0, r0, r9
   306e8:	eor	r0, r0, r9, ror #17
   306ec:	eor	r0, r0, r9, ror #9
   306f0:	mov	r8, r0
   306f4:	orr	r0, lr, r1
   306f8:	and	r7, r0, r4
   306fc:	and	r0, lr, r1
   30700:	orr	r0, r7, r0
   30704:	ldr	r7, [sp, #56]	; 0x38
   30708:	str	r8, [sp, #28]
   3070c:	eor	r8, r7, r8
   30710:	add	r8, r8, r6
   30714:	add	r8, r0, r8
   30718:	eor	ip, ip, sl
   3071c:	add	ip, ip, r8
   30720:	add	r5, r7, r5
   30724:	add	sl, r5, sl
   30728:	eor	r5, r2, fp
   3072c:	and	r5, r5, r3
   30730:	eor	r5, r5, fp
   30734:	add	r5, r5, sl
   30738:	ror	lr, lr, #23
   3073c:	ror	r2, r2, #13
   30740:	ror	r0, r5, #15
   30744:	eor	r0, r0, r5, ror #23
   30748:	eor	r5, r5, r0
   3074c:	ror	r7, ip, #20
   30750:	ldr	r9, [pc, #-1452]	; 301ac <__assert_fail@plt+0x1eec0>
   30754:	add	r9, r7, r9
   30758:	add	r9, r9, r5
   3075c:	ror	r9, r9, #25
   30760:	ldr	r0, [sp, #64]	; 0x40
   30764:	ldr	sl, [sp, #12]
   30768:	eor	r8, r0, sl
   3076c:	ldr	r6, [sp, #68]	; 0x44
   30770:	eor	r8, r8, r6, ror #17
   30774:	ldr	r0, [sp, #52]	; 0x34
   30778:	ldr	r6, [sp, #44]	; 0x2c
   3077c:	eor	r0, r0, r6, ror #25
   30780:	eor	r0, r0, r8
   30784:	eor	r0, r0, r8, ror #17
   30788:	eor	r6, r0, r8, ror #9
   3078c:	mov	r8, r6
   30790:	orr	r6, r4, lr
   30794:	and	r0, r6, ip
   30798:	and	r6, r4, lr
   3079c:	orr	r6, r0, r6
   307a0:	ldr	sl, [sp, #60]	; 0x3c
   307a4:	mov	r0, sl
   307a8:	str	r8, [sp, #32]
   307ac:	eor	r0, r0, r8
   307b0:	add	r1, r0, r1
   307b4:	add	r1, r6, r1
   307b8:	eor	r7, r7, r9
   307bc:	add	r8, r7, r1
   307c0:	add	r1, sl, fp
   307c4:	add	r9, r1, r9
   307c8:	eor	r1, r3, r2
   307cc:	and	r1, r1, r5
   307d0:	eor	r1, r1, r2
   307d4:	add	r1, r1, r9
   307d8:	ror	r9, r4, #23
   307dc:	ror	r3, r3, #13
   307e0:	ror	r0, r1, #15
   307e4:	eor	r0, r0, r1, ror #23
   307e8:	eor	r1, r1, r0
   307ec:	ror	r6, r8, #20
   307f0:	ldr	r7, [pc, #-1608]	; 301b0 <__assert_fail@plt+0x1eec4>
   307f4:	add	r7, r6, r7
   307f8:	add	r7, r7, r1
   307fc:	ror	r7, r7, #25
   30800:	ldr	sl, [sp, #36]	; 0x24
   30804:	ldr	r0, [sp, #16]
   30808:	eor	fp, sl, r0
   3080c:	ldr	sl, [sp, #24]
   30810:	eor	fp, fp, sl, ror #17
   30814:	ldr	sl, [sp, #56]	; 0x38
   30818:	ldr	r0, [sp, #48]	; 0x30
   3081c:	eor	r0, sl, r0, ror #25
   30820:	eor	r0, r0, fp
   30824:	eor	r0, r0, fp, ror #17
   30828:	eor	r4, r0, fp, ror #9
   3082c:	mov	sl, r4
   30830:	orr	r4, ip, r9
   30834:	and	r0, r4, r8
   30838:	and	r4, ip, r9
   3083c:	orr	r4, r0, r4
   30840:	ldr	fp, [sp, #68]	; 0x44
   30844:	str	sl, [sp, #36]	; 0x24
   30848:	eor	r0, fp, sl
   3084c:	add	lr, r0, lr
   30850:	add	lr, r4, lr
   30854:	eor	r6, r6, r7
   30858:	add	r6, r6, lr
   3085c:	add	r2, fp, r2
   30860:	add	r7, r2, r7
   30864:	eor	r2, r5, r3
   30868:	and	r2, r2, r1
   3086c:	eor	r2, r2, r3
   30870:	add	r2, r2, r7
   30874:	ror	ip, ip, #23
   30878:	ror	r0, r5, #13
   3087c:	ror	lr, r2, #15
   30880:	eor	lr, lr, r2, ror #23
   30884:	eor	r2, r2, lr
   30888:	ror	lr, r6, #20
   3088c:	ldr	sl, [pc, #-1760]	; 301b4 <__assert_fail@plt+0x1eec8>
   30890:	add	sl, lr, sl
   30894:	add	sl, sl, r2
   30898:	ror	sl, sl, #25
   3089c:	ldr	r4, [sp, #40]	; 0x28
   308a0:	ldr	r7, [sp, #20]
   308a4:	eor	r7, r4, r7
   308a8:	ldr	r5, [sp, #28]
   308ac:	eor	r7, r7, r5, ror #17
   308b0:	ldr	r5, [sp, #60]	; 0x3c
   308b4:	ldr	fp, [sp, #4]
   308b8:	eor	r4, r5, fp, ror #25
   308bc:	eor	r4, r4, r7
   308c0:	eor	r4, r4, r7, ror #17
   308c4:	eor	r4, r4, r7, ror #9
   308c8:	mov	fp, r4
   308cc:	orr	r5, r8, ip
   308d0:	and	r4, r5, r6
   308d4:	and	r5, r8, ip
   308d8:	orr	r5, r4, r5
   308dc:	ldr	r7, [sp, #24]
   308e0:	str	fp, [sp, #64]	; 0x40
   308e4:	eor	r4, r7, fp
   308e8:	add	r4, r4, r9
   308ec:	add	r4, r5, r4
   308f0:	eor	lr, lr, sl
   308f4:	add	lr, lr, r4
   308f8:	add	r3, r7, r3
   308fc:	add	sl, r3, sl
   30900:	eor	r3, r1, r0
   30904:	and	r3, r3, r2
   30908:	eor	r3, r3, r0
   3090c:	add	r3, r3, sl
   30910:	ror	r8, r8, #23
   30914:	ror	r1, r1, #13
   30918:	ror	r4, r3, #15
   3091c:	eor	r4, r4, r3, ror #23
   30920:	eor	r3, r3, r4
   30924:	ror	r9, lr, #20
   30928:	ldr	sl, [pc, #-1912]	; 301b8 <__assert_fail@plt+0x1eecc>
   3092c:	add	sl, r9, sl
   30930:	add	sl, sl, r3
   30934:	ror	sl, sl, #25
   30938:	ldr	r4, [sp, #44]	; 0x2c
   3093c:	ldr	r5, [sp, #52]	; 0x34
   30940:	eor	r5, r4, r5
   30944:	ldr	r4, [sp, #32]
   30948:	eor	r5, r5, r4, ror #17
   3094c:	ldr	r7, [sp, #68]	; 0x44
   30950:	ldr	r4, [sp, #8]
   30954:	eor	r4, r7, r4, ror #25
   30958:	eor	r4, r4, r5
   3095c:	eor	r4, r4, r5, ror #17
   30960:	eor	r5, r4, r5, ror #9
   30964:	mov	r7, r5
   30968:	orr	r5, r6, r8
   3096c:	and	r4, r5, lr
   30970:	and	r5, r6, r8
   30974:	orr	r5, r4, r5
   30978:	ldr	fp, [sp, #28]
   3097c:	mov	r4, fp
   30980:	str	r7, [sp, #40]	; 0x28
   30984:	eor	r4, r4, r7
   30988:	add	ip, r4, ip
   3098c:	add	ip, r5, ip
   30990:	eor	r9, r9, sl
   30994:	add	r9, r9, ip
   30998:	add	r0, fp, r0
   3099c:	add	sl, r0, sl
   309a0:	eor	r0, r2, r1
   309a4:	and	r0, r0, r3
   309a8:	eor	r0, r0, r1
   309ac:	add	r0, r0, sl
   309b0:	ror	r4, r6, #23
   309b4:	ror	r2, r2, #13
   309b8:	ror	ip, r0, #15
   309bc:	eor	ip, ip, r0, ror #23
   309c0:	eor	r0, r0, ip
   309c4:	ror	ip, r9, #20
   309c8:	ldr	r5, [pc, #-2068]	; 301bc <__assert_fail@plt+0x1eed0>
   309cc:	add	r5, ip, r5
   309d0:	add	r5, r5, r0
   309d4:	ror	r5, r5, #25
   309d8:	ldr	r6, [sp, #48]	; 0x30
   309dc:	ldr	sl, [sp, #56]	; 0x38
   309e0:	eor	fp, r6, sl
   309e4:	ldr	r6, [sp, #36]	; 0x24
   309e8:	eor	fp, fp, r6, ror #17
   309ec:	ldr	r6, [sp, #24]
   309f0:	ldr	sl, [sp, #12]
   309f4:	eor	r6, r6, sl, ror #25
   309f8:	eor	r6, r6, fp
   309fc:	eor	r6, r6, fp, ror #17
   30a00:	eor	r6, r6, fp, ror #9
   30a04:	mov	fp, r6
   30a08:	orr	r7, lr, r4
   30a0c:	and	r6, r7, r9
   30a10:	and	r7, lr, r4
   30a14:	orr	r7, r6, r7
   30a18:	ldr	sl, [sp, #32]
   30a1c:	mov	r6, sl
   30a20:	str	fp, [sp, #44]	; 0x2c
   30a24:	eor	r6, r6, fp
   30a28:	add	r8, r6, r8
   30a2c:	add	r8, r7, r8
   30a30:	eor	ip, ip, r5
   30a34:	add	r7, ip, r8
   30a38:	add	r1, sl, r1
   30a3c:	add	r5, r1, r5
   30a40:	eor	r1, r3, r2
   30a44:	and	r1, r1, r0
   30a48:	eor	r1, r1, r2
   30a4c:	add	r1, r1, r5
   30a50:	ror	lr, lr, #23
   30a54:	ror	r3, r3, #13
   30a58:	ror	ip, r1, #15
   30a5c:	eor	ip, ip, r1, ror #23
   30a60:	eor	r1, r1, ip
   30a64:	ror	r5, r7, #20
   30a68:	ldr	ip, [pc, #-2224]	; 301c0 <__assert_fail@plt+0x1eed4>
   30a6c:	add	ip, r5, ip
   30a70:	add	ip, ip, r1
   30a74:	ror	ip, ip, #25
   30a78:	ldr	fp, [sp, #4]
   30a7c:	ldr	r6, [sp, #60]	; 0x3c
   30a80:	eor	r6, fp, r6
   30a84:	ldr	r8, [sp, #64]	; 0x40
   30a88:	eor	r6, r6, r8, ror #17
   30a8c:	ldr	fp, [sp, #28]
   30a90:	ldr	r8, [sp, #16]
   30a94:	eor	r8, fp, r8, ror #25
   30a98:	eor	r8, r8, r6
   30a9c:	eor	r8, r8, r6, ror #17
   30aa0:	eor	r8, r8, r6, ror #9
   30aa4:	mov	sl, r8
   30aa8:	orr	r8, r9, lr
   30aac:	and	r6, r8, r7
   30ab0:	and	r8, r9, lr
   30ab4:	orr	r8, r6, r8
   30ab8:	ldr	fp, [sp, #36]	; 0x24
   30abc:	str	sl, [sp, #4]
   30ac0:	eor	r6, fp, sl
   30ac4:	add	r6, r6, r4
   30ac8:	add	r6, r8, r6
   30acc:	eor	r5, r5, ip
   30ad0:	add	r6, r5, r6
   30ad4:	add	r2, fp, r2
   30ad8:	add	ip, r2, ip
   30adc:	eor	r4, r0, r3
   30ae0:	and	r4, r4, r1
   30ae4:	eor	r4, r4, r3
   30ae8:	add	r4, r4, ip
   30aec:	ror	r5, r9, #23
   30af0:	ror	r0, r0, #13
   30af4:	ror	r2, r4, #15
   30af8:	eor	r2, r2, r4, ror #23
   30afc:	eor	r4, r4, r2
   30b00:	ror	fp, r6, #20
   30b04:	ldr	sl, [pc, #-2376]	; 301c4 <__assert_fail@plt+0x1eed8>
   30b08:	add	sl, fp, sl
   30b0c:	add	sl, sl, r4
   30b10:	ror	sl, sl, #25
   30b14:	ldr	r2, [sp, #8]
   30b18:	ldr	ip, [sp, #68]	; 0x44
   30b1c:	eor	r9, r2, ip
   30b20:	ldr	r2, [sp, #40]	; 0x28
   30b24:	eor	r9, r9, r2, ror #17
   30b28:	ldr	r2, [sp, #32]
   30b2c:	ldr	ip, [sp, #20]
   30b30:	eor	r2, r2, ip, ror #25
   30b34:	eor	r2, r2, r9
   30b38:	eor	r2, r2, r9, ror #17
   30b3c:	eor	ip, r2, r9, ror #9
   30b40:	mov	r2, ip
   30b44:	orr	ip, r7, r5
   30b48:	and	r8, ip, r6
   30b4c:	and	ip, r7, r5
   30b50:	orr	ip, r8, ip
   30b54:	ldr	r9, [sp, #64]	; 0x40
   30b58:	str	r2, [sp, #8]
   30b5c:	eor	r2, r9, r2
   30b60:	add	lr, r2, lr
   30b64:	add	lr, ip, lr
   30b68:	eor	r8, fp, sl
   30b6c:	add	r8, r8, lr
   30b70:	add	r3, r9, r3
   30b74:	add	sl, r3, sl
   30b78:	eor	ip, r1, r0
   30b7c:	and	ip, ip, r4
   30b80:	eor	ip, ip, r0
   30b84:	add	ip, ip, sl
   30b88:	ror	sl, r7, #23
   30b8c:	ror	r3, r1, #13
   30b90:	ror	r2, ip, #15
   30b94:	eor	r2, r2, ip, ror #23
   30b98:	eor	ip, ip, r2
   30b9c:	ror	fp, r8, #20
   30ba0:	ldr	r2, [pc, #-2528]	; 301c8 <__assert_fail@plt+0x1eedc>
   30ba4:	add	r2, fp, r2
   30ba8:	add	r2, r2, ip
   30bac:	ror	r2, r2, #25
   30bb0:	ldr	r9, [sp, #12]
   30bb4:	ldr	r1, [sp, #24]
   30bb8:	eor	r7, r9, r1
   30bbc:	ldr	r9, [sp, #44]	; 0x2c
   30bc0:	eor	r7, r7, r9, ror #17
   30bc4:	ldr	lr, [sp, #36]	; 0x24
   30bc8:	ldr	r1, [sp, #52]	; 0x34
   30bcc:	eor	r1, lr, r1, ror #25
   30bd0:	eor	r1, r1, r7
   30bd4:	eor	r1, r1, r7, ror #17
   30bd8:	eor	r9, r1, r7, ror #9
   30bdc:	mov	lr, r9
   30be0:	orr	r1, r6, sl
   30be4:	and	r9, r1, r8
   30be8:	and	r1, r6, sl
   30bec:	orr	r1, r9, r1
   30bf0:	ldr	r7, [sp, #40]	; 0x28
   30bf4:	mov	r9, r7
   30bf8:	str	lr, [sp, #12]
   30bfc:	eor	r9, r9, lr
   30c00:	add	r9, r9, r5
   30c04:	add	r9, r1, r9
   30c08:	eor	r1, fp, r2
   30c0c:	add	r9, r1, r9
   30c10:	add	r0, r7, r0
   30c14:	add	r2, r0, r2
   30c18:	eor	r0, r4, r3
   30c1c:	and	r0, r0, ip
   30c20:	eor	r0, r0, r3
   30c24:	add	r2, r0, r2
   30c28:	ror	fp, r6, #23
   30c2c:	ror	r4, r4, #13
   30c30:	ror	r0, r2, #15
   30c34:	eor	r0, r0, r2, ror #23
   30c38:	eor	r0, r0, r2
   30c3c:	ror	r1, r9, #20
   30c40:	ldr	lr, [pc, #-2684]	; 301cc <__assert_fail@plt+0x1eee0>
   30c44:	add	lr, r1, lr
   30c48:	add	lr, lr, r0
   30c4c:	ror	lr, lr, #25
   30c50:	ldr	r2, [sp, #16]
   30c54:	ldr	r7, [sp, #28]
   30c58:	eor	r2, r2, r7
   30c5c:	ldr	r6, [sp, #4]
   30c60:	eor	r2, r2, r6, ror #17
   30c64:	ldr	r7, [sp, #64]	; 0x40
   30c68:	ldr	r5, [sp, #56]	; 0x38
   30c6c:	eor	r5, r7, r5, ror #25
   30c70:	eor	r5, r5, r2
   30c74:	eor	r5, r5, r2, ror #17
   30c78:	eor	r5, r5, r2, ror #9
   30c7c:	mov	r6, r5
   30c80:	orr	r2, r8, fp
   30c84:	and	r7, r2, r9
   30c88:	and	r2, r8, fp
   30c8c:	orr	r2, r7, r2
   30c90:	ldr	r5, [sp, #44]	; 0x2c
   30c94:	str	r6, [sp, #16]
   30c98:	eor	r7, r5, r6
   30c9c:	add	r7, r7, sl
   30ca0:	add	r7, r2, r7
   30ca4:	eor	r1, r1, lr
   30ca8:	add	r7, r1, r7
   30cac:	add	r3, r5, r3
   30cb0:	add	lr, r3, lr
   30cb4:	eor	r3, ip, r4
   30cb8:	and	r3, r3, r0
   30cbc:	eor	r3, r3, r4
   30cc0:	add	r3, r3, lr
   30cc4:	ror	r8, r8, #23
   30cc8:	ror	lr, ip, #13
   30ccc:	ror	r6, r3, #15
   30cd0:	eor	r6, r6, r3, ror #23
   30cd4:	eor	r6, r6, r3
   30cd8:	ror	ip, r7, #20
   30cdc:	ldr	r1, [pc, #-2836]	; 301d0 <__assert_fail@plt+0x1eee4>
   30ce0:	add	r1, ip, r1
   30ce4:	add	r1, r1, r6
   30ce8:	ror	r1, r1, #25
   30cec:	ldr	r3, [sp, #20]
   30cf0:	ldr	r2, [sp, #32]
   30cf4:	eor	r2, r3, r2
   30cf8:	ldr	r3, [sp, #8]
   30cfc:	eor	r2, r2, r3, ror #17
   30d00:	ldr	r3, [sp, #40]	; 0x28
   30d04:	ldr	r5, [sp, #60]	; 0x3c
   30d08:	eor	r3, r3, r5, ror #25
   30d0c:	eor	r3, r3, r2
   30d10:	eor	r3, r3, r2, ror #17
   30d14:	eor	r2, r3, r2, ror #9
   30d18:	str	r2, [sp, #20]
   30d1c:	str	r2, [sp, #104]	; 0x68
   30d20:	orr	r2, r9, r8
   30d24:	and	r5, r2, r7
   30d28:	and	r2, r9, r8
   30d2c:	orr	r2, r5, r2
   30d30:	ldr	sl, [sp, #4]
   30d34:	mov	r3, sl
   30d38:	ldr	r5, [sp, #20]
   30d3c:	eor	r3, r3, r5
   30d40:	add	fp, r3, fp
   30d44:	add	fp, r2, fp
   30d48:	eor	r5, ip, r1
   30d4c:	add	r5, r5, fp
   30d50:	add	r4, sl, r4
   30d54:	add	r1, r4, r1
   30d58:	eor	ip, r0, lr
   30d5c:	and	ip, ip, r6
   30d60:	eor	ip, ip, lr
   30d64:	add	ip, ip, r1
   30d68:	ror	r4, r9, #23
   30d6c:	str	r4, [sp, #76]	; 0x4c
   30d70:	ror	r2, r0, #13
   30d74:	ror	r3, ip, #15
   30d78:	eor	r3, r3, ip, ror #23
   30d7c:	eor	ip, ip, r3
   30d80:	ror	sl, r5, #20
   30d84:	ldr	r0, [pc, #-3000]	; 301d4 <__assert_fail@plt+0x1eee8>
   30d88:	add	r0, sl, r0
   30d8c:	add	r0, r0, ip
   30d90:	ror	r0, r0, #25
   30d94:	ldr	r3, [sp, #52]	; 0x34
   30d98:	ldr	r4, [sp, #36]	; 0x24
   30d9c:	eor	r3, r3, r4
   30da0:	ldr	r9, [sp, #12]
   30da4:	eor	r3, r3, r9, ror #17
   30da8:	ldr	r9, [sp, #44]	; 0x2c
   30dac:	ldr	fp, [sp, #68]	; 0x44
   30db0:	eor	r4, r9, fp, ror #25
   30db4:	eor	r4, r4, r3
   30db8:	eor	r4, r4, r3, ror #17
   30dbc:	eor	r4, r4, r3, ror #9
   30dc0:	mov	r1, r4
   30dc4:	str	r4, [sp, #108]	; 0x6c
   30dc8:	ldr	r9, [sp, #76]	; 0x4c
   30dcc:	orr	r4, r7, r9
   30dd0:	and	r3, r4, r5
   30dd4:	and	r4, r7, r9
   30dd8:	orr	r4, r3, r4
   30ddc:	ldr	r9, [sp, #8]
   30de0:	mov	r3, r9
   30de4:	str	r1, [sp, #48]	; 0x30
   30de8:	eor	r3, r3, r1
   30dec:	add	r8, r3, r8
   30df0:	add	r8, r4, r8
   30df4:	eor	r4, sl, r0
   30df8:	add	r4, r4, r8
   30dfc:	add	lr, r9, lr
   30e00:	add	r0, lr, r0
   30e04:	eor	r3, r6, r2
   30e08:	and	r3, r3, ip
   30e0c:	eor	r3, r3, r2
   30e10:	add	r0, r3, r0
   30e14:	ror	r7, r7, #23
   30e18:	ror	r3, r6, #13
   30e1c:	ror	lr, r0, #15
   30e20:	eor	lr, lr, r0, ror #23
   30e24:	eor	r0, r0, lr
   30e28:	ror	r9, r4, #20
   30e2c:	ldr	r6, [pc, #-3164]	; 301d8 <__assert_fail@plt+0x1eeec>
   30e30:	add	r6, r9, r6
   30e34:	add	r6, r6, r0
   30e38:	ror	r6, r6, #25
   30e3c:	ldr	sl, [sp, #56]	; 0x38
   30e40:	ldr	r8, [sp, #64]	; 0x40
   30e44:	eor	r8, sl, r8
   30e48:	ldr	lr, [sp, #16]
   30e4c:	eor	lr, r8, lr, ror #17
   30e50:	ldr	sl, [sp, #4]
   30e54:	ldr	r8, [sp, #24]
   30e58:	eor	r8, sl, r8, ror #25
   30e5c:	eor	r8, r8, lr
   30e60:	eor	r8, r8, lr, ror #17
   30e64:	eor	r1, r8, lr, ror #9
   30e68:	str	r1, [sp, #112]	; 0x70
   30e6c:	orr	lr, r5, r7
   30e70:	and	r8, lr, r4
   30e74:	and	lr, r5, r7
   30e78:	orr	lr, r8, lr
   30e7c:	ldr	r8, [sp, #12]
   30e80:	str	r1, [sp, #52]	; 0x34
   30e84:	eor	r8, r8, r1
   30e88:	ldr	r1, [sp, #76]	; 0x4c
   30e8c:	add	r1, r8, r1
   30e90:	add	r1, lr, r1
   30e94:	eor	lr, r9, r6
   30e98:	add	lr, lr, r1
   30e9c:	ldr	r1, [sp, #12]
   30ea0:	add	r2, r1, r2
   30ea4:	add	r6, r2, r6
   30ea8:	eor	r2, ip, r3
   30eac:	and	r2, r2, r0
   30eb0:	eor	r2, r2, r3
   30eb4:	add	r2, r2, r6
   30eb8:	ror	r1, r5, #23
   30ebc:	str	r1, [sp, #4]
   30ec0:	ror	ip, ip, #13
   30ec4:	str	ip, [sp, #68]	; 0x44
   30ec8:	ror	r1, r2, #15
   30ecc:	eor	r1, r1, r2, ror #23
   30ed0:	eor	r2, r2, r1
   30ed4:	ror	r9, lr, #20
   30ed8:	ldr	r8, [pc, #-3332]	; 301dc <__assert_fail@plt+0x1eef0>
   30edc:	add	r8, r9, r8
   30ee0:	add	r8, r8, r2
   30ee4:	ror	r8, r8, #25
   30ee8:	ldr	r6, [sp, #60]	; 0x3c
   30eec:	ldr	r1, [sp, #40]	; 0x28
   30ef0:	eor	r6, r6, r1
   30ef4:	ldr	ip, [sp, #20]
   30ef8:	eor	r6, r6, ip, ror #17
   30efc:	ldr	ip, [sp, #8]
   30f00:	ldr	r1, [sp, #28]
   30f04:	eor	r1, ip, r1, ror #25
   30f08:	eor	r1, r1, r6
   30f0c:	eor	r1, r1, r6, ror #17
   30f10:	eor	r6, r1, r6, ror #9
   30f14:	mov	r5, r6
   30f18:	str	r6, [sp, #116]	; 0x74
   30f1c:	ldr	ip, [sp, #4]
   30f20:	orr	r1, r4, ip
   30f24:	and	r6, r1, lr
   30f28:	and	r1, r4, ip
   30f2c:	orr	r1, r6, r1
   30f30:	ldr	ip, [sp, #16]
   30f34:	mov	r6, ip
   30f38:	str	r5, [sp, #56]	; 0x38
   30f3c:	eor	r6, r6, r5
   30f40:	add	r7, r6, r7
   30f44:	add	r7, r1, r7
   30f48:	eor	r1, r9, r8
   30f4c:	add	r1, r1, r7
   30f50:	add	r3, ip, r3
   30f54:	add	r8, r3, r8
   30f58:	ldr	ip, [sp, #68]	; 0x44
   30f5c:	eor	r3, r0, ip
   30f60:	and	r3, r3, r2
   30f64:	eor	r3, r3, ip
   30f68:	add	r3, r3, r8
   30f6c:	ror	r4, r4, #23
   30f70:	ror	r0, r0, #13
   30f74:	ror	r6, r3, #15
   30f78:	eor	r6, r6, r3, ror #23
   30f7c:	eor	r3, r3, r6
   30f80:	ror	r9, r1, #20
   30f84:	ldr	r6, [pc, #-3500]	; 301e0 <__assert_fail@plt+0x1eef4>
   30f88:	add	r6, r9, r6
   30f8c:	add	r6, r6, r3
   30f90:	ror	r6, r6, #25
   30f94:	mov	r7, fp
   30f98:	ldr	fp, [sp, #44]	; 0x2c
   30f9c:	eor	r7, r7, fp
   30fa0:	ldr	fp, [sp, #48]	; 0x30
   30fa4:	eor	r7, r7, fp, ror #17
   30fa8:	ldr	ip, [sp, #12]
   30fac:	ldr	r8, [sp, #32]
   30fb0:	eor	r8, ip, r8, ror #25
   30fb4:	eor	r8, r8, r7
   30fb8:	eor	r8, r8, r7, ror #17
   30fbc:	eor	r7, r8, r7, ror #9
   30fc0:	mov	r5, r7
   30fc4:	str	r7, [sp, #120]	; 0x78
   30fc8:	orr	r7, lr, r4
   30fcc:	and	r8, r7, r1
   30fd0:	and	r7, lr, r4
   30fd4:	orr	r7, r8, r7
   30fd8:	ldr	fp, [sp, #20]
   30fdc:	str	r5, [sp, #60]	; 0x3c
   30fe0:	eor	r8, fp, r5
   30fe4:	ldr	r5, [sp, #4]
   30fe8:	add	r5, r8, r5
   30fec:	add	r5, r7, r5
   30ff0:	eor	r7, r9, r6
   30ff4:	add	r7, r7, r5
   30ff8:	ldr	ip, [sp, #68]	; 0x44
   30ffc:	add	ip, fp, ip
   31000:	add	r6, ip, r6
   31004:	eor	ip, r2, r0
   31008:	and	ip, ip, r3
   3100c:	eor	ip, ip, r0
   31010:	add	ip, ip, r6
   31014:	ror	lr, lr, #23
   31018:	ror	r2, r2, #13
   3101c:	ror	r5, ip, #15
   31020:	eor	r5, r5, ip, ror #23
   31024:	eor	ip, ip, r5
   31028:	ror	r9, r7, #20
   3102c:	ldr	r6, [pc, #-3664]	; 301e4 <__assert_fail@plt+0x1eef8>
   31030:	add	r6, r9, r6
   31034:	add	r6, r6, ip
   31038:	ror	r6, r6, #25
   3103c:	ldr	r8, [sp, #24]
   31040:	str	sl, [sp, #4]
   31044:	eor	sl, r8, sl
   31048:	ldr	r5, [sp, #52]	; 0x34
   3104c:	eor	sl, sl, r5, ror #17
   31050:	ldr	r8, [sp, #16]
   31054:	ldr	r5, [sp, #36]	; 0x24
   31058:	eor	r5, r8, r5, ror #25
   3105c:	eor	r5, r5, sl
   31060:	eor	r5, r5, sl, ror #17
   31064:	eor	sl, r5, sl, ror #9
   31068:	str	sl, [sp, #24]
   3106c:	str	sl, [sp, #124]	; 0x7c
   31070:	orr	r5, r1, lr
   31074:	and	r8, r5, r7
   31078:	and	r5, r1, lr
   3107c:	orr	r5, r8, r5
   31080:	ldr	sl, [sp, #48]	; 0x30
   31084:	ldr	r8, [sp, #24]
   31088:	eor	r8, sl, r8
   3108c:	add	r4, r8, r4
   31090:	add	r4, r5, r4
   31094:	eor	r5, r9, r6
   31098:	add	r5, r5, r4
   3109c:	add	r4, sl, r0
   310a0:	add	r6, r4, r6
   310a4:	eor	r4, r3, r2
   310a8:	and	r4, r4, ip
   310ac:	eor	r4, r4, r2
   310b0:	add	r4, r4, r6
   310b4:	ror	r1, r1, #23
   310b8:	ror	r3, r3, #13
   310bc:	ror	r0, r4, #15
   310c0:	eor	r0, r0, r4, ror #23
   310c4:	eor	r4, r4, r0
   310c8:	ror	r8, r5, #20
   310cc:	str	r8, [sp, #68]	; 0x44
   310d0:	ldr	r6, [pc, #-3824]	; 301e8 <__assert_fail@plt+0x1eefc>
   310d4:	add	r6, r8, r6
   310d8:	add	r6, r6, r4
   310dc:	ror	r6, r6, #25
   310e0:	ldr	r0, [sp, #28]
   310e4:	ldr	r8, [sp, #8]
   310e8:	eor	r0, r0, r8
   310ec:	ldr	sl, [sp, #56]	; 0x38
   310f0:	eor	r0, r0, sl, ror #17
   310f4:	ldr	sl, [sp, #64]	; 0x40
   310f8:	eor	r8, fp, sl, ror #25
   310fc:	eor	r8, r8, r0
   31100:	eor	r8, r8, r0, ror #17
   31104:	eor	r0, r8, r0, ror #9
   31108:	mov	r9, r0
   3110c:	str	r0, [sp, #128]	; 0x80
   31110:	orr	r8, r7, r1
   31114:	and	r0, r8, r5
   31118:	and	r8, r7, r1
   3111c:	orr	r8, r0, r8
   31120:	ldr	fp, [sp, #52]	; 0x34
   31124:	mov	r0, fp
   31128:	str	r9, [sp, #28]
   3112c:	eor	r0, r0, r9
   31130:	add	lr, r0, lr
   31134:	add	lr, r8, lr
   31138:	ldr	r8, [sp, #68]	; 0x44
   3113c:	eor	r8, r8, r6
   31140:	add	r8, r8, lr
   31144:	add	lr, fp, r2
   31148:	add	r6, lr, r6
   3114c:	eor	lr, ip, r3
   31150:	and	lr, lr, r4
   31154:	eor	lr, lr, r3
   31158:	add	lr, lr, r6
   3115c:	ror	r7, r7, #23
   31160:	str	r7, [sp, #64]	; 0x40
   31164:	ror	ip, ip, #13
   31168:	ror	r2, lr, #15
   3116c:	eor	r2, r2, lr, ror #23
   31170:	eor	lr, lr, r2
   31174:	ror	r9, r8, #20
   31178:	ldr	r0, [pc, #-3988]	; 301ec <__assert_fail@plt+0x1ef00>
   3117c:	add	r0, r9, r0
   31180:	add	r0, r0, lr
   31184:	ror	r0, r0, #25
   31188:	ldr	r2, [sp, #32]
   3118c:	ldr	r6, [sp, #12]
   31190:	eor	r2, r2, r6
   31194:	ldr	r7, [sp, #60]	; 0x3c
   31198:	eor	r2, r2, r7, ror #17
   3119c:	ldr	fp, [sp, #48]	; 0x30
   311a0:	ldr	r6, [sp, #40]	; 0x28
   311a4:	eor	fp, fp, r6, ror #25
   311a8:	eor	fp, fp, r2
   311ac:	eor	fp, fp, r2, ror #17
   311b0:	eor	fp, fp, r2, ror #9
   311b4:	str	fp, [sp, #132]	; 0x84
   311b8:	ldr	r7, [sp, #64]	; 0x40
   311bc:	orr	r6, r5, r7
   311c0:	and	r2, r6, r8
   311c4:	and	r6, r5, r7
   311c8:	orr	r6, r2, r6
   311cc:	ldr	r7, [sp, #56]	; 0x38
   311d0:	mov	r2, r7
   311d4:	eor	r2, r2, fp
   311d8:	add	r1, r2, r1
   311dc:	add	r1, r6, r1
   311e0:	eor	r6, r9, r0
   311e4:	add	r6, r6, r1
   311e8:	add	r3, r7, r3
   311ec:	add	r0, r3, r0
   311f0:	eor	r3, r4, ip
   311f4:	and	r3, r3, lr
   311f8:	eor	r3, r3, ip
   311fc:	add	r0, r3, r0
   31200:	ror	r5, r5, #23
   31204:	ror	r4, r4, #13
   31208:	ror	r3, r0, #15
   3120c:	eor	r3, r3, r0, ror #23
   31210:	eor	r0, r0, r3
   31214:	ror	r9, r6, #20
   31218:	ldr	r2, [pc, #1348]	; 31764 <__assert_fail@plt+0x20478>
   3121c:	add	r2, r9, r2
   31220:	add	r2, r2, r0
   31224:	ror	r2, r2, #25
   31228:	ldr	r3, [sp, #36]	; 0x24
   3122c:	ldr	r1, [sp, #16]
   31230:	eor	r3, r3, r1
   31234:	ldr	r1, [sp, #24]
   31238:	eor	r3, r3, r1, ror #17
   3123c:	ldr	r7, [sp, #52]	; 0x34
   31240:	ldr	r1, [sp, #44]	; 0x2c
   31244:	eor	r1, r7, r1, ror #25
   31248:	eor	r1, r1, r3
   3124c:	eor	r1, r1, r3, ror #17
   31250:	eor	r3, r1, r3, ror #9
   31254:	mov	r7, r3
   31258:	str	r3, [sp, #136]	; 0x88
   3125c:	orr	r1, r8, r5
   31260:	and	r3, r1, r6
   31264:	and	r1, r8, r5
   31268:	orr	r1, r3, r1
   3126c:	ldr	r3, [sp, #60]	; 0x3c
   31270:	str	r7, [sp, #36]	; 0x24
   31274:	eor	r3, r3, r7
   31278:	ldr	r7, [sp, #64]	; 0x40
   3127c:	add	r7, r3, r7
   31280:	add	r7, r1, r7
   31284:	eor	r1, r9, r2
   31288:	add	r1, r1, r7
   3128c:	ldr	r3, [sp, #60]	; 0x3c
   31290:	add	ip, r3, ip
   31294:	add	r2, ip, r2
   31298:	eor	r3, lr, r4
   3129c:	and	r3, r3, r0
   312a0:	eor	r3, r3, r4
   312a4:	add	r2, r3, r2
   312a8:	ror	r8, r8, #23
   312ac:	ror	lr, lr, #13
   312b0:	ror	r3, r2, #15
   312b4:	eor	r3, r3, r2, ror #23
   312b8:	eor	r2, r2, r3
   312bc:	ror	r9, r1, #20
   312c0:	ldr	r3, [pc, #1184]	; 31768 <__assert_fail@plt+0x2047c>
   312c4:	add	r3, r9, r3
   312c8:	add	r3, r3, r2
   312cc:	ror	r3, r3, #25
   312d0:	ldr	ip, [sp, #20]
   312d4:	eor	ip, sl, ip
   312d8:	ldr	r7, [sp, #28]
   312dc:	eor	ip, ip, r7, ror #17
   312e0:	ldr	r7, [sp, #56]	; 0x38
   312e4:	ldr	sl, [sp, #4]
   312e8:	eor	r7, r7, sl, ror #25
   312ec:	eor	r7, r7, ip
   312f0:	eor	r7, r7, ip, ror #17
   312f4:	eor	ip, r7, ip, ror #9
   312f8:	str	ip, [sp, #32]
   312fc:	str	ip, [sp, #140]	; 0x8c
   31300:	orr	ip, r6, r8
   31304:	and	r7, ip, r1
   31308:	and	ip, r6, r8
   3130c:	orr	ip, r7, ip
   31310:	ldr	sl, [sp, #24]
   31314:	ldr	r7, [sp, #32]
   31318:	eor	r7, sl, r7
   3131c:	add	r5, r7, r5
   31320:	add	r5, ip, r5
   31324:	eor	ip, r9, r3
   31328:	add	ip, ip, r5
   3132c:	add	r4, sl, r4
   31330:	add	r3, r4, r3
   31334:	eor	r4, r0, lr
   31338:	and	r4, r4, r2
   3133c:	eor	r4, r4, lr
   31340:	add	r3, r4, r3
   31344:	ror	r6, r6, #23
   31348:	ror	r0, r0, #13
   3134c:	ror	r4, r3, #15
   31350:	eor	r4, r4, r3, ror #23
   31354:	eor	r3, r3, r4
   31358:	ror	sl, ip, #20
   3135c:	ldr	r9, [pc, #1032]	; 3176c <__assert_fail@plt+0x20480>
   31360:	add	r9, sl, r9
   31364:	add	r9, r9, r3
   31368:	ror	r9, r9, #25
   3136c:	ldr	r4, [sp, #40]	; 0x28
   31370:	ldr	r5, [sp, #48]	; 0x30
   31374:	eor	r5, r4, r5
   31378:	eor	r4, r5, fp, ror #17
   3137c:	ldr	r7, [sp, #60]	; 0x3c
   31380:	ldr	r5, [sp, #8]
   31384:	eor	r5, r7, r5, ror #25
   31388:	eor	r5, r5, r4
   3138c:	eor	r5, r5, r4, ror #17
   31390:	eor	r5, r5, r4, ror #9
   31394:	str	r5, [sp, #144]	; 0x90
   31398:	orr	r7, r1, r6
   3139c:	and	r4, r7, ip
   313a0:	and	r7, r1, r6
   313a4:	orr	r7, r4, r7
   313a8:	ldr	r4, [sp, #28]
   313ac:	eor	r4, r4, r5
   313b0:	add	r8, r4, r8
   313b4:	add	r8, r7, r8
   313b8:	eor	r7, sl, r9
   313bc:	add	r7, r7, r8
   313c0:	ldr	r4, [sp, #28]
   313c4:	add	r4, r4, lr
   313c8:	add	r9, r4, r9
   313cc:	eor	r4, r2, r0
   313d0:	and	r4, r4, r3
   313d4:	eor	r4, r4, r0
   313d8:	add	r4, r4, r9
   313dc:	ror	r1, r1, #23
   313e0:	ror	r2, r2, #13
   313e4:	ror	lr, r4, #15
   313e8:	eor	lr, lr, r4, ror #23
   313ec:	eor	r4, r4, lr
   313f0:	ror	sl, r7, #20
   313f4:	ldr	r8, [pc, #884]	; 31770 <__assert_fail@plt+0x20484>
   313f8:	add	r8, sl, r8
   313fc:	str	r4, [sp, #40]	; 0x28
   31400:	add	r8, r8, r4
   31404:	ror	r8, r8, #25
   31408:	ldr	lr, [sp, #44]	; 0x2c
   3140c:	ldr	r9, [sp, #52]	; 0x34
   31410:	eor	lr, lr, r9
   31414:	ldr	r4, [sp, #36]	; 0x24
   31418:	eor	lr, lr, r4, ror #17
   3141c:	ldr	r4, [sp, #24]
   31420:	ldr	r9, [sp, #12]
   31424:	eor	r9, r4, r9, ror #25
   31428:	eor	r9, r9, lr
   3142c:	eor	r9, r9, lr, ror #17
   31430:	eor	lr, r9, lr, ror #9
   31434:	mov	r4, lr
   31438:	str	lr, [sp, #148]	; 0x94
   3143c:	orr	lr, ip, r1
   31440:	and	r9, lr, r7
   31444:	and	lr, ip, r1
   31448:	orr	lr, r9, lr
   3144c:	str	r4, [sp, #44]	; 0x2c
   31450:	eor	r9, fp, r4
   31454:	add	r6, r9, r6
   31458:	add	r6, lr, r6
   3145c:	eor	lr, sl, r8
   31460:	add	lr, lr, r6
   31464:	add	r0, fp, r0
   31468:	add	r8, r0, r8
   3146c:	eor	r0, r3, r2
   31470:	ldr	r4, [sp, #40]	; 0x28
   31474:	and	r0, r0, r4
   31478:	eor	r0, r0, r2
   3147c:	add	r0, r0, r8
   31480:	ror	ip, ip, #23
   31484:	ror	r3, r3, #13
   31488:	ror	r6, r0, #15
   3148c:	eor	r6, r6, r0, ror #23
   31490:	eor	r0, r0, r6
   31494:	ror	sl, lr, #20
   31498:	ldr	r8, [pc, #724]	; 31774 <__assert_fail@plt+0x20488>
   3149c:	add	r8, sl, r8
   314a0:	add	r8, r8, r0
   314a4:	ror	r8, r8, #25
   314a8:	ldr	r6, [sp, #4]
   314ac:	ldr	r9, [sp, #56]	; 0x38
   314b0:	eor	r6, r6, r9
   314b4:	ldr	r9, [sp, #32]
   314b8:	eor	r6, r6, r9, ror #17
   314bc:	ldr	r4, [sp, #28]
   314c0:	ldr	r9, [sp, #16]
   314c4:	eor	r9, r4, r9, ror #25
   314c8:	eor	r9, r9, r6
   314cc:	eor	r9, r9, r6, ror #17
   314d0:	eor	r6, r9, r6, ror #9
   314d4:	str	r6, [sp, #4]
   314d8:	str	r6, [sp, #88]	; 0x58
   314dc:	orr	r6, r7, ip
   314e0:	and	r9, r6, lr
   314e4:	and	r6, r7, ip
   314e8:	orr	r6, r9, r6
   314ec:	ldr	r4, [sp, #36]	; 0x24
   314f0:	ldr	r9, [sp, #4]
   314f4:	eor	r9, r4, r9
   314f8:	add	r1, r9, r1
   314fc:	add	r1, r6, r1
   31500:	eor	r6, sl, r8
   31504:	add	r6, r6, r1
   31508:	add	r1, r4, r2
   3150c:	add	r8, r1, r8
   31510:	ldr	r2, [sp, #40]	; 0x28
   31514:	eor	r1, r2, r3
   31518:	and	r1, r1, r0
   3151c:	eor	r1, r1, r3
   31520:	add	r1, r1, r8
   31524:	ror	r7, r7, #23
   31528:	ror	r4, r2, #13
   3152c:	ror	r2, r1, #15
   31530:	eor	r2, r2, r1, ror #23
   31534:	eor	r1, r1, r2
   31538:	ror	sl, r6, #20
   3153c:	ldr	r8, [pc, #564]	; 31778 <__assert_fail@plt+0x2048c>
   31540:	add	r8, sl, r8
   31544:	add	r8, r8, r1
   31548:	ror	r8, r8, #25
   3154c:	ldr	r2, [sp, #8]
   31550:	ldr	r9, [sp, #60]	; 0x3c
   31554:	eor	r2, r2, r9
   31558:	eor	r9, r2, r5, ror #17
   3155c:	ldr	r2, [sp, #20]
   31560:	eor	r2, fp, r2, ror #25
   31564:	eor	r2, r2, r9
   31568:	eor	r2, r2, r9, ror #17
   3156c:	eor	r2, r2, r9, ror #9
   31570:	str	r2, [sp, #92]	; 0x5c
   31574:	orr	fp, lr, r7
   31578:	and	fp, fp, r6
   3157c:	and	r9, lr, r7
   31580:	orr	r9, fp, r9
   31584:	ldr	fp, [sp, #32]
   31588:	eor	r2, r2, fp
   3158c:	add	r2, r2, ip
   31590:	add	r9, r9, r2
   31594:	eor	sl, sl, r8
   31598:	add	r9, sl, r9
   3159c:	add	r2, fp, r3
   315a0:	add	r8, r2, r8
   315a4:	eor	r2, r0, r4
   315a8:	and	r2, r2, r1
   315ac:	eor	r2, r2, r4
   315b0:	add	r2, r2, r8
   315b4:	ror	lr, lr, #23
   315b8:	ror	r0, r0, #13
   315bc:	ror	r3, r2, #15
   315c0:	eor	r3, r3, r2, ror #23
   315c4:	eor	r2, r2, r3
   315c8:	ror	ip, r9, #20
   315cc:	ldr	r8, [pc, #424]	; 3177c <__assert_fail@plt+0x20490>
   315d0:	add	r8, ip, r8
   315d4:	add	r8, r8, r2
   315d8:	ror	r8, r8, #25
   315dc:	ldr	r3, [sp, #12]
   315e0:	ldr	sl, [sp, #24]
   315e4:	eor	r3, r3, sl
   315e8:	ldr	sl, [sp, #44]	; 0x2c
   315ec:	eor	sl, r3, sl, ror #17
   315f0:	ldr	r3, [sp, #36]	; 0x24
   315f4:	ldr	fp, [sp, #48]	; 0x30
   315f8:	eor	r3, r3, fp, ror #25
   315fc:	eor	r3, r3, sl
   31600:	eor	r3, r3, sl, ror #17
   31604:	eor	r3, r3, sl, ror #9
   31608:	str	r3, [sp, #96]	; 0x60
   3160c:	orr	fp, r6, lr
   31610:	and	fp, fp, r9
   31614:	and	sl, r6, lr
   31618:	orr	sl, fp, sl
   3161c:	eor	r3, r3, r5
   31620:	add	r3, r3, r7
   31624:	add	r3, sl, r3
   31628:	eor	ip, ip, r8
   3162c:	add	r3, ip, r3
   31630:	add	r5, r5, r4
   31634:	add	r8, r5, r8
   31638:	eor	r5, r1, r0
   3163c:	and	r5, r5, r2
   31640:	eor	r5, r5, r0
   31644:	add	r8, r5, r8
   31648:	ror	r6, r6, #23
   3164c:	ror	r1, r1, #13
   31650:	ror	r5, r8, #15
   31654:	eor	r5, r5, r8, ror #23
   31658:	eor	r5, r5, r8
   3165c:	ror	ip, r3, #20
   31660:	ldr	r4, [pc, #280]	; 31780 <__assert_fail@plt+0x20494>
   31664:	add	r4, ip, r4
   31668:	add	r4, r4, r5
   3166c:	ror	r4, r4, #25
   31670:	ldr	r7, [sp, #16]
   31674:	ldr	r8, [sp, #28]
   31678:	eor	r8, r7, r8
   3167c:	ldr	r7, [sp, #4]
   31680:	eor	r8, r8, r7, ror #17
   31684:	ldr	fp, [sp, #32]
   31688:	ldr	r7, [sp, #52]	; 0x34
   3168c:	eor	r7, fp, r7, ror #25
   31690:	eor	r7, r7, r8
   31694:	eor	r7, r7, r8, ror #17
   31698:	eor	r8, r7, r8, ror #9
   3169c:	str	r8, [sp, #100]	; 0x64
   316a0:	orr	sl, r9, r6
   316a4:	and	sl, sl, r3
   316a8:	and	r7, r9, r6
   316ac:	orr	r7, sl, r7
   316b0:	ldr	sl, [sp, #44]	; 0x2c
   316b4:	eor	r8, r8, sl
   316b8:	add	lr, r8, lr
   316bc:	add	r7, r7, lr
   316c0:	add	r0, sl, r0
   316c4:	add	r0, r0, r4
   316c8:	eor	fp, r2, r1
   316cc:	and	fp, fp, r5
   316d0:	eor	fp, fp, r1
   316d4:	add	r0, fp, r0
   316d8:	eor	ip, ip, r4
   316dc:	add	r7, ip, r7
   316e0:	ldr	lr, [sp, #84]	; 0x54
   316e4:	ldr	r8, [lr]
   316e8:	eor	r8, r8, r7
   316ec:	str	r8, [lr]
   316f0:	ldr	ip, [lr, #4]
   316f4:	eor	r3, r3, ip
   316f8:	str	r3, [lr, #4]
   316fc:	ldr	ip, [lr, #8]
   31700:	eor	r9, ip, r9, ror #23
   31704:	str	r9, [lr, #8]
   31708:	ldr	ip, [lr, #12]
   3170c:	eor	ip, ip, r6
   31710:	str	ip, [lr, #12]
   31714:	ldr	r6, [lr, #16]
   31718:	eor	r6, r6, r0
   3171c:	eor	r6, r6, r0, ror #23
   31720:	eor	fp, r6, r0, ror #15
   31724:	str	fp, [lr, #16]
   31728:	ldr	sl, [lr, #20]
   3172c:	eor	r5, r5, sl
   31730:	str	r5, [lr, #20]
   31734:	ldr	r0, [lr, #24]
   31738:	eor	r2, r0, r2, ror #13
   3173c:	str	r2, [lr, #24]
   31740:	ldr	r0, [lr, #28]
   31744:	eor	r1, r1, r0
   31748:	str	r1, [lr, #28]
   3174c:	ldr	lr, [sp, #80]	; 0x50
   31750:	ldr	r0, [sp, #72]	; 0x48
   31754:	cmp	lr, r0
   31758:	bhi	2f0fc <__assert_fail@plt+0x1de10>
   3175c:	add	sp, sp, #156	; 0x9c
   31760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31764:	bhi	1ed35e0 <optarg@@GLIBC_2.4+0x1e89438>
   31768:	ldrbtne	r0, [r5], #3899	; 0xf3b
   3176c:	stmibcs	sl!, {r1, r2, r4, r5, r6, r9, sl, fp, ip}^
   31770:	bicspl	r3, r4, #236, 24	; 0xec00
   31774:	sbfxge	r7, r8, #19, #9
   31778:	svcmi	0x0050f3b1
   3177c:	cdpls	7, 10, cr14, cr1, cr2, {3}
   31780:	stclcc	14, cr12, [r3, #-788]	; 0xfffffcec
   31784:	push	{r4, r5, r6, r7, r8, lr}
   31788:	mov	r4, r0
   3178c:	mov	r6, r1
   31790:	ldr	r0, [r0, #40]	; 0x28
   31794:	cmp	r0, #55	; 0x37
   31798:	movls	r5, #16
   3179c:	movhi	r5, #32
   317a0:	ldr	r3, [r4, #32]
   317a4:	add	r3, r0, r3
   317a8:	str	r3, [r4, #32]
   317ac:	cmp	r0, r3
   317b0:	ldrhi	r2, [r4, #36]	; 0x24
   317b4:	addhi	r2, r2, #1
   317b8:	strhi	r2, [r4, #36]	; 0x24
   317bc:	ldr	r1, [r4, #36]	; 0x24
   317c0:	lsr	r2, r3, #29
   317c4:	orr	r2, r2, r1, lsl #3
   317c8:	rev	r2, r2
   317cc:	add	r1, r4, r5, lsl #2
   317d0:	str	r2, [r1, #36]	; 0x24
   317d4:	lsl	r3, r3, #3
   317d8:	rev	r3, r3
   317dc:	str	r3, [r1, #40]	; 0x28
   317e0:	add	r7, r4, #44	; 0x2c
   317e4:	sub	r5, r5, #-1073741822	; 0xc0000002
   317e8:	lsl	r5, r5, #2
   317ec:	sub	r2, r5, r0
   317f0:	ldr	r1, [pc, #36]	; 3181c <__assert_fail@plt+0x20530>
   317f4:	add	r0, r7, r0
   317f8:	bl	11058 <memcpy@plt>
   317fc:	mov	r2, r4
   31800:	add	r1, r5, #8
   31804:	mov	r0, r7
   31808:	bl	2f080 <__assert_fail@plt+0x1dd94>
   3180c:	mov	r1, r6
   31810:	mov	r0, r4
   31814:	bl	2f054 <__assert_fail@plt+0x1dd68>
   31818:	pop	{r4, r5, r6, r7, r8, pc}
   3181c:	andeq	r9, r3, ip, ror #18
   31820:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31824:	mov	r8, r0
   31828:	mov	r5, r1
   3182c:	mov	r6, r2
   31830:	ldr	r4, [r2, #40]	; 0x28
   31834:	cmp	r4, #0
   31838:	bne	31910 <__assert_fail@plt+0x20624>
   3183c:	cmp	r5, #63	; 0x3f
   31840:	bls	318dc <__assert_fail@plt+0x205f0>
   31844:	tst	r8, #3
   31848:	beq	31984 <__assert_fail@plt+0x20698>
   3184c:	cmp	r5, #64	; 0x40
   31850:	bls	318dc <__assert_fail@plt+0x205f0>
   31854:	mov	r9, r5
   31858:	mov	r4, r8
   3185c:	add	r7, r6, #44	; 0x2c
   31860:	mov	sl, #64	; 0x40
   31864:	mov	r3, r4
   31868:	mov	r2, r7
   3186c:	add	r1, r4, #64	; 0x40
   31870:	ldr	fp, [r3]
   31874:	ldr	lr, [r3, #4]
   31878:	ldr	ip, [r3, #8]
   3187c:	ldr	r0, [r3, #12]
   31880:	str	fp, [r2]
   31884:	str	lr, [r2, #4]
   31888:	str	ip, [r2, #8]
   3188c:	str	r0, [r2, #12]
   31890:	add	r3, r3, #16
   31894:	add	r2, r2, #16
   31898:	cmp	r3, r1
   3189c:	bne	31870 <__assert_fail@plt+0x20584>
   318a0:	mov	r2, r6
   318a4:	mov	r1, sl
   318a8:	mov	r0, r7
   318ac:	bl	2f080 <__assert_fail@plt+0x1dd94>
   318b0:	add	r4, r4, #64	; 0x40
   318b4:	sub	r9, r9, #64	; 0x40
   318b8:	cmp	r9, #64	; 0x40
   318bc:	bhi	31864 <__assert_fail@plt+0x20578>
   318c0:	sub	r3, r5, #65	; 0x41
   318c4:	bic	r2, r3, #63	; 0x3f
   318c8:	add	r2, r2, #64	; 0x40
   318cc:	add	r8, r8, r2
   318d0:	sub	r5, r5, #64	; 0x40
   318d4:	bic	r3, r3, #63	; 0x3f
   318d8:	sub	r5, r5, r3
   318dc:	cmp	r5, #0
   318e0:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   318e4:	ldr	r4, [r6, #40]	; 0x28
   318e8:	add	r7, r6, #44	; 0x2c
   318ec:	mov	r2, r5
   318f0:	mov	r1, r8
   318f4:	add	r0, r7, r4
   318f8:	bl	11058 <memcpy@plt>
   318fc:	add	r5, r5, r4
   31900:	cmp	r5, #63	; 0x3f
   31904:	bhi	319a4 <__assert_fail@plt+0x206b8>
   31908:	str	r5, [r6, #40]	; 0x28
   3190c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31910:	rsb	r7, r4, #128	; 0x80
   31914:	cmp	r7, r1
   31918:	movcs	r7, r1
   3191c:	add	r9, r2, #44	; 0x2c
   31920:	mov	r2, r7
   31924:	mov	r1, r0
   31928:	add	r0, r9, r4
   3192c:	bl	11058 <memcpy@plt>
   31930:	ldr	r1, [r6, #40]	; 0x28
   31934:	add	r1, r7, r1
   31938:	str	r1, [r6, #40]	; 0x28
   3193c:	cmp	r1, #64	; 0x40
   31940:	bhi	31950 <__assert_fail@plt+0x20664>
   31944:	add	r8, r8, r7
   31948:	sub	r5, r5, r7
   3194c:	b	3183c <__assert_fail@plt+0x20550>
   31950:	mov	r2, r6
   31954:	bic	r1, r1, #63	; 0x3f
   31958:	mov	r0, r9
   3195c:	bl	2f080 <__assert_fail@plt+0x1dd94>
   31960:	ldr	r2, [r6, #40]	; 0x28
   31964:	and	r2, r2, #63	; 0x3f
   31968:	str	r2, [r6, #40]	; 0x28
   3196c:	add	r1, r4, r7
   31970:	bic	r1, r1, #63	; 0x3f
   31974:	add	r1, r9, r1
   31978:	mov	r0, r9
   3197c:	bl	11058 <memcpy@plt>
   31980:	b	31944 <__assert_fail@plt+0x20658>
   31984:	bic	r4, r5, #63	; 0x3f
   31988:	mov	r2, r6
   3198c:	mov	r1, r4
   31990:	mov	r0, r8
   31994:	bl	2f080 <__assert_fail@plt+0x1dd94>
   31998:	add	r8, r8, r4
   3199c:	and	r5, r5, #63	; 0x3f
   319a0:	b	318dc <__assert_fail@plt+0x205f0>
   319a4:	mov	r2, r6
   319a8:	mov	r1, #64	; 0x40
   319ac:	mov	r0, r7
   319b0:	bl	2f080 <__assert_fail@plt+0x1dd94>
   319b4:	sub	r5, r5, #64	; 0x40
   319b8:	mov	r2, r5
   319bc:	add	r1, r6, #108	; 0x6c
   319c0:	mov	r0, r7
   319c4:	bl	11058 <memcpy@plt>
   319c8:	b	31908 <__assert_fail@plt+0x2061c>
   319cc:	push	{r4, r5, r6, lr}
   319d0:	sub	sp, sp, #176	; 0xb0
   319d4:	mov	r5, r0
   319d8:	mov	r6, r1
   319dc:	mov	r4, r2
   319e0:	add	r0, sp, #4
   319e4:	bl	2efe0 <__assert_fail@plt+0x1dcf4>
   319e8:	add	r2, sp, #4
   319ec:	mov	r1, r6
   319f0:	mov	r0, r5
   319f4:	bl	31820 <__assert_fail@plt+0x20534>
   319f8:	mov	r1, r4
   319fc:	add	r0, sp, #4
   31a00:	bl	31784 <__assert_fail@plt+0x20498>
   31a04:	add	sp, sp, #176	; 0xb0
   31a08:	pop	{r4, r5, r6, pc}
   31a0c:	push	{r4, r5, lr}
   31a10:	sub	sp, sp, #20
   31a14:	ldr	r1, [sp, #40]	; 0x28
   31a18:	str	r1, [sp, #8]
   31a1c:	ldrd	r4, [sp, #32]
   31a20:	strd	r4, [sp]
   31a24:	bl	11010 <posix_fadvise64@plt>
   31a28:	add	sp, sp, #20
   31a2c:	pop	{r4, r5, pc}
   31a30:	cmp	r0, #0
   31a34:	bxeq	lr
   31a38:	push	{r4, lr}
   31a3c:	sub	sp, sp, #16
   31a40:	mov	r4, r1
   31a44:	bl	11208 <fileno@plt>
   31a48:	str	r4, [sp, #8]
   31a4c:	mov	r2, #0
   31a50:	mov	r3, #0
   31a54:	strd	r2, [sp]
   31a58:	bl	11010 <posix_fadvise64@plt>
   31a5c:	add	sp, sp, #16
   31a60:	pop	{r4, pc}
   31a64:	push	{r4, r5, r6, lr}
   31a68:	sub	sp, sp, #8
   31a6c:	mov	r4, r0
   31a70:	bl	11208 <fileno@plt>
   31a74:	cmp	r0, #0
   31a78:	blt	31af0 <__assert_fail@plt+0x20804>
   31a7c:	mov	r0, r4
   31a80:	bl	11154 <__freading@plt>
   31a84:	cmp	r0, #0
   31a88:	beq	31abc <__assert_fail@plt+0x207d0>
   31a8c:	mov	r0, r4
   31a90:	bl	11208 <fileno@plt>
   31a94:	mov	r3, #1
   31a98:	str	r3, [sp]
   31a9c:	mov	r2, #0
   31aa0:	mov	r3, #0
   31aa4:	bl	110e8 <lseek64@plt>
   31aa8:	mvn	r2, #0
   31aac:	mvn	r3, #0
   31ab0:	cmp	r1, r3
   31ab4:	cmpeq	r0, r2
   31ab8:	beq	31afc <__assert_fail@plt+0x20810>
   31abc:	mov	r0, r4
   31ac0:	bl	31b0c <__assert_fail@plt+0x20820>
   31ac4:	cmp	r0, #0
   31ac8:	beq	31afc <__assert_fail@plt+0x20810>
   31acc:	bl	111c0 <__errno_location@plt>
   31ad0:	mov	r5, r0
   31ad4:	ldr	r6, [r0]
   31ad8:	mov	r0, r4
   31adc:	bl	11220 <fclose@plt>
   31ae0:	cmp	r6, #0
   31ae4:	strne	r6, [r5]
   31ae8:	mvnne	r0, #0
   31aec:	b	31b04 <__assert_fail@plt+0x20818>
   31af0:	mov	r0, r4
   31af4:	bl	11220 <fclose@plt>
   31af8:	b	31b04 <__assert_fail@plt+0x20818>
   31afc:	mov	r0, r4
   31b00:	bl	11220 <fclose@plt>
   31b04:	add	sp, sp, #8
   31b08:	pop	{r4, r5, r6, pc}
   31b0c:	push	{r4, lr}
   31b10:	sub	sp, sp, #8
   31b14:	subs	r4, r0, #0
   31b18:	beq	31b2c <__assert_fail@plt+0x20840>
   31b1c:	mov	r0, r4
   31b20:	bl	11154 <__freading@plt>
   31b24:	cmp	r0, #0
   31b28:	bne	31b3c <__assert_fail@plt+0x20850>
   31b2c:	mov	r0, r4
   31b30:	bl	1101c <fflush@plt>
   31b34:	add	sp, sp, #8
   31b38:	pop	{r4, pc}
   31b3c:	ldr	r3, [r4]
   31b40:	tst	r3, #256	; 0x100
   31b44:	bne	31b54 <__assert_fail@plt+0x20868>
   31b48:	mov	r0, r4
   31b4c:	bl	1101c <fflush@plt>
   31b50:	b	31b34 <__assert_fail@plt+0x20848>
   31b54:	mov	r3, #1
   31b58:	str	r3, [sp]
   31b5c:	mov	r2, #0
   31b60:	mov	r3, #0
   31b64:	mov	r0, r4
   31b68:	bl	31c64 <__assert_fail@plt+0x20978>
   31b6c:	b	31b48 <__assert_fail@plt+0x2085c>
   31b70:	push	{r4, r5, r6, lr}
   31b74:	mov	r5, r1
   31b78:	bl	11298 <fopen64@plt>
   31b7c:	subs	r4, r0, #0
   31b80:	beq	31b94 <__assert_fail@plt+0x208a8>
   31b84:	mov	r0, r4
   31b88:	bl	11208 <fileno@plt>
   31b8c:	cmp	r0, #2
   31b90:	bls	31b9c <__assert_fail@plt+0x208b0>
   31b94:	mov	r0, r4
   31b98:	pop	{r4, r5, r6, pc}
   31b9c:	bl	34388 <__assert_fail@plt+0x2309c>
   31ba0:	subs	r6, r0, #0
   31ba4:	blt	31bec <__assert_fail@plt+0x20900>
   31ba8:	mov	r0, r4
   31bac:	bl	31a64 <__assert_fail@plt+0x20778>
   31bb0:	cmp	r0, #0
   31bb4:	bne	31bcc <__assert_fail@plt+0x208e0>
   31bb8:	mov	r1, r5
   31bbc:	mov	r0, r6
   31bc0:	bl	10fc8 <fdopen@plt>
   31bc4:	subs	r4, r0, #0
   31bc8:	bne	31b94 <__assert_fail@plt+0x208a8>
   31bcc:	bl	111c0 <__errno_location@plt>
   31bd0:	mov	r4, r0
   31bd4:	ldr	r5, [r0]
   31bd8:	mov	r0, r6
   31bdc:	bl	112d4 <close@plt>
   31be0:	str	r5, [r4]
   31be4:	mov	r4, #0
   31be8:	b	31b94 <__assert_fail@plt+0x208a8>
   31bec:	bl	111c0 <__errno_location@plt>
   31bf0:	mov	r5, r0
   31bf4:	ldr	r6, [r0]
   31bf8:	mov	r0, r4
   31bfc:	bl	31a64 <__assert_fail@plt+0x20778>
   31c00:	str	r6, [r5]
   31c04:	mov	r4, #0
   31c08:	b	31b94 <__assert_fail@plt+0x208a8>
   31c0c:	push	{r4, r5, lr}
   31c10:	sub	sp, sp, #12
   31c14:	mov	r5, r0
   31c18:	bl	111c0 <__errno_location@plt>
   31c1c:	mov	r4, r0
   31c20:	ldr	r3, [r0]
   31c24:	str	r3, [sp]
   31c28:	str	r3, [sp, #4]
   31c2c:	mov	r3, #0
   31c30:	str	r3, [r0]
   31c34:	mov	r0, r5
   31c38:	bl	11034 <free@plt>
   31c3c:	ldr	r3, [r4]
   31c40:	cmp	r3, #0
   31c44:	moveq	r3, #4
   31c48:	movne	r3, #0
   31c4c:	add	r2, sp, #8
   31c50:	add	r3, r2, r3
   31c54:	ldr	r3, [r3, #-8]
   31c58:	str	r3, [r4]
   31c5c:	add	sp, sp, #12
   31c60:	pop	{r4, r5, pc}
   31c64:	push	{r4, r5, r6, r7, lr}
   31c68:	sub	sp, sp, #12
   31c6c:	mov	r4, r0
   31c70:	mov	r6, r2
   31c74:	mov	r7, r3
   31c78:	ldr	r5, [sp, #32]
   31c7c:	ldr	r2, [r0, #8]
   31c80:	ldr	r3, [r0, #4]
   31c84:	cmp	r2, r3
   31c88:	beq	31ca8 <__assert_fail@plt+0x209bc>
   31c8c:	str	r5, [sp]
   31c90:	mov	r2, r6
   31c94:	mov	r3, r7
   31c98:	mov	r0, r4
   31c9c:	bl	1122c <fseeko64@plt>
   31ca0:	add	sp, sp, #12
   31ca4:	pop	{r4, r5, r6, r7, pc}
   31ca8:	ldr	r2, [r0, #20]
   31cac:	ldr	r3, [r0, #16]
   31cb0:	cmp	r2, r3
   31cb4:	bne	31c8c <__assert_fail@plt+0x209a0>
   31cb8:	ldr	r3, [r0, #36]	; 0x24
   31cbc:	cmp	r3, #0
   31cc0:	bne	31c8c <__assert_fail@plt+0x209a0>
   31cc4:	bl	11208 <fileno@plt>
   31cc8:	str	r5, [sp]
   31ccc:	mov	r2, r6
   31cd0:	mov	r3, r7
   31cd4:	bl	110e8 <lseek64@plt>
   31cd8:	mvn	r2, #0
   31cdc:	mvn	r3, #0
   31ce0:	cmp	r1, r3
   31ce4:	cmpeq	r0, r2
   31ce8:	beq	31d04 <__assert_fail@plt+0x20a18>
   31cec:	ldr	r3, [r4]
   31cf0:	bic	r3, r3, #16
   31cf4:	str	r3, [r4]
   31cf8:	strd	r0, [r4, #80]	; 0x50
   31cfc:	mov	r0, #0
   31d00:	b	31ca0 <__assert_fail@plt+0x209b4>
   31d04:	mvn	r0, #0
   31d08:	b	31ca0 <__assert_fail@plt+0x209b4>
   31d0c:	andeq	r0, r0, r0
   31d10:	push	{r4, r6, r7, lr}
   31d14:	vpush	{d8}
   31d18:	vmov.f64	d8, d0
   31d1c:	cmp	r0, #1
   31d20:	beq	31d88 <__assert_fail@plt+0x20a9c>
   31d24:	mov	r4, r0
   31d28:	vldr	d7, [pc, #104]	; 31d98 <__assert_fail@plt+0x20aac>
   31d2c:	vcmpe.f64	d0, d7
   31d30:	vmrs	APSR_nzcv, fpscr
   31d34:	bpl	31d88 <__assert_fail@plt+0x20a9c>
   31d38:	vmov	r0, r1, d0
   31d3c:	bl	363b0 <__assert_fail@plt+0x250c4>
   31d40:	mov	r6, r0
   31d44:	mov	r7, r1
   31d48:	cmp	r4, #0
   31d4c:	movne	r0, #0
   31d50:	bne	31d70 <__assert_fail@plt+0x20a84>
   31d54:	mov	r0, r6
   31d58:	bl	362ec <__assert_fail@plt+0x25000>
   31d5c:	vmov	d7, r0, r1
   31d60:	vcmp.f64	d7, d8
   31d64:	vmrs	APSR_nzcv, fpscr
   31d68:	movne	r0, #1
   31d6c:	moveq	r0, #0
   31d70:	adds	r2, r6, r0
   31d74:	adc	r3, r7, r0, asr #31
   31d78:	mov	r0, r2
   31d7c:	mov	r1, r3
   31d80:	bl	362ec <__assert_fail@plt+0x25000>
   31d84:	vmov	d8, r0, r1
   31d88:	vmov.f64	d0, d8
   31d8c:	vpop	{d8}
   31d90:	pop	{r4, r6, r7, pc}
   31d94:	nop			; (mov r0, r0)
   31d98:	andeq	r0, r0, r0
   31d9c:	mvnsmi	r0, #0
   31da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31da4:	vpush	{d8-d9}
   31da8:	sub	sp, sp, #124	; 0x7c
   31dac:	strd	r0, [sp, #32]
   31db0:	mov	r7, r2
   31db4:	str	r2, [sp, #24]
   31db8:	mov	r8, r3
   31dbc:	and	r3, r3, #3
   31dc0:	str	r3, [sp, #28]
   31dc4:	and	r3, r8, #32
   31dc8:	str	r3, [sp, #40]	; 0x28
   31dcc:	cmp	r3, #0
   31dd0:	movne	r3, #1024	; 0x400
   31dd4:	moveq	r3, #1000	; 0x3e8
   31dd8:	str	r3, [sp, #44]	; 0x2c
   31ddc:	bl	11280 <localeconv@plt>
   31de0:	mov	r5, r0
   31de4:	ldr	r6, [r0]
   31de8:	mov	r0, r6
   31dec:	bl	111a8 <strlen@plt>
   31df0:	mov	r4, r0
   31df4:	sub	r3, r0, #1
   31df8:	ldr	r2, [pc, #1112]	; 32258 <__assert_fail@plt+0x20f6c>
   31dfc:	cmp	r3, #15
   31e00:	movhi	r6, r2
   31e04:	str	r6, [sp, #64]	; 0x40
   31e08:	cmp	r3, #15
   31e0c:	movhi	r4, #1
   31e10:	ldr	r9, [r5, #8]
   31e14:	ldr	r5, [r5, #4]
   31e18:	mov	r0, r5
   31e1c:	bl	111a8 <strlen@plt>
   31e20:	ldr	r3, [pc, #1076]	; 3225c <__assert_fail@plt+0x20f70>
   31e24:	cmp	r0, #16
   31e28:	movhi	r5, r3
   31e2c:	str	r5, [sp, #12]
   31e30:	add	sl, r7, #644	; 0x284
   31e34:	add	sl, sl, #3
   31e38:	ldrd	r2, [sp, #184]	; 0xb8
   31e3c:	ldrd	r6, [sp, #176]	; 0xb0
   31e40:	cmp	r3, r7
   31e44:	cmpeq	r2, r6
   31e48:	bhi	31fcc <__assert_fail@plt+0x20ce0>
   31e4c:	mov	r0, r6
   31e50:	mov	r1, r7
   31e54:	bl	36360 <__assert_fail@plt+0x25074>
   31e58:	orrs	r3, r2, r3
   31e5c:	bne	31ea4 <__assert_fail@plt+0x20bb8>
   31e60:	ldrd	r2, [sp, #184]	; 0xb8
   31e64:	ldrd	r0, [sp, #176]	; 0xb0
   31e68:	bl	36360 <__assert_fail@plt+0x25074>
   31e6c:	mov	r2, r0
   31e70:	mov	r3, r1
   31e74:	ldrd	r6, [sp, #32]
   31e78:	mul	r0, r2, r7
   31e7c:	mla	ip, r6, r3, r0
   31e80:	umull	r0, r1, r2, r6
   31e84:	strd	r0, [sp, #16]
   31e88:	add	r1, ip, r1
   31e8c:	str	r1, [sp, #20]
   31e90:	ldrd	r0, [sp, #16]
   31e94:	bl	36360 <__assert_fail@plt+0x25074>
   31e98:	cmp	r7, r1
   31e9c:	cmpeq	r6, r0
   31ea0:	beq	32144 <__assert_fail@plt+0x20e58>
   31ea4:	ldrd	r0, [sp, #176]	; 0xb0
   31ea8:	bl	362ec <__assert_fail@plt+0x25000>
   31eac:	vmov	d9, r0, r1
   31eb0:	ldrd	r0, [sp, #184]	; 0xb8
   31eb4:	bl	362ec <__assert_fail@plt+0x25000>
   31eb8:	vmov	d7, r0, r1
   31ebc:	vdiv.f64	d8, d9, d7
   31ec0:	ldrd	r0, [sp, #32]
   31ec4:	bl	362ec <__assert_fail@plt+0x25000>
   31ec8:	vmov	d7, r0, r1
   31ecc:	vmul.f64	d0, d8, d7
   31ed0:	tst	r8, #16
   31ed4:	beq	3209c <__assert_fail@plt+0x20db0>
   31ed8:	vldr	d7, [pc, #872]	; 32248 <__assert_fail@plt+0x20f5c>
   31edc:	mov	r7, #0
   31ee0:	vldr	s13, [sp, #44]	; 0x2c
   31ee4:	vcvt.f64.u32	d6, s13
   31ee8:	vmul.f64	d7, d7, d6
   31eec:	add	r7, r7, #1
   31ef0:	vmul.f64	d5, d6, d7
   31ef4:	vcmpe.f64	d0, d5
   31ef8:	vmrs	APSR_nzcv, fpscr
   31efc:	movge	r3, #1
   31f00:	movlt	r3, #0
   31f04:	cmp	r7, #7
   31f08:	movgt	r3, #0
   31f0c:	andle	r3, r3, #1
   31f10:	cmp	r3, #0
   31f14:	bne	31ee8 <__assert_fail@plt+0x20bfc>
   31f18:	vdiv.f64	d8, d0, d7
   31f1c:	vmov.f64	d0, d8
   31f20:	ldr	r0, [sp, #28]
   31f24:	bl	31d10 <__assert_fail@plt+0x20a24>
   31f28:	vstr	d0, [sp]
   31f2c:	ldr	r3, [pc, #812]	; 32260 <__assert_fail@plt+0x20f74>
   31f30:	mvn	r2, #0
   31f34:	mov	r1, #1
   31f38:	ldr	r6, [sp, #24]
   31f3c:	mov	r0, r6
   31f40:	bl	111cc <__sprintf_chk@plt>
   31f44:	mov	r0, r6
   31f48:	bl	111a8 <strlen@plt>
   31f4c:	mov	r5, r0
   31f50:	add	r4, r4, #1
   31f54:	ldr	r3, [sp, #40]	; 0x28
   31f58:	cmp	r3, #0
   31f5c:	movne	r3, #1
   31f60:	moveq	r3, #2
   31f64:	add	r3, r3, r4
   31f68:	cmp	r0, r3
   31f6c:	bhi	31f88 <__assert_fail@plt+0x20c9c>
   31f70:	tst	r8, #8
   31f74:	beq	320d4 <__assert_fail@plt+0x20de8>
   31f78:	add	r3, r6, r0
   31f7c:	ldrb	r3, [r3, #-1]
   31f80:	cmp	r3, #48	; 0x30
   31f84:	bne	320d4 <__assert_fail@plt+0x20de8>
   31f88:	vldr	d9, [pc, #704]	; 32250 <__assert_fail@plt+0x20f64>
   31f8c:	vmul.f64	d0, d8, d9
   31f90:	ldr	r0, [sp, #28]
   31f94:	bl	31d10 <__assert_fail@plt+0x20a24>
   31f98:	vdiv.f64	d0, d0, d9
   31f9c:	vstr	d0, [sp]
   31fa0:	ldr	r3, [pc, #700]	; 32264 <__assert_fail@plt+0x20f78>
   31fa4:	mvn	r2, #0
   31fa8:	mov	r1, #1
   31fac:	ldr	r4, [sp, #24]
   31fb0:	mov	r0, r4
   31fb4:	bl	111cc <__sprintf_chk@plt>
   31fb8:	mov	r0, r4
   31fbc:	bl	111a8 <strlen@plt>
   31fc0:	mov	r5, r0
   31fc4:	mov	r4, #0
   31fc8:	b	320d4 <__assert_fail@plt+0x20de8>
   31fcc:	ldrd	r2, [sp, #176]	; 0xb0
   31fd0:	orrs	r3, r2, r3
   31fd4:	beq	31ea4 <__assert_fail@plt+0x20bb8>
   31fd8:	ldrd	r2, [sp, #176]	; 0xb0
   31fdc:	ldrd	r0, [sp, #184]	; 0xb8
   31fe0:	bl	36360 <__assert_fail@plt+0x25074>
   31fe4:	orrs	r3, r2, r3
   31fe8:	bne	31ea4 <__assert_fail@plt+0x20bb8>
   31fec:	ldrd	r2, [sp, #176]	; 0xb0
   31ff0:	ldrd	r0, [sp, #184]	; 0xb8
   31ff4:	bl	36360 <__assert_fail@plt+0x25074>
   31ff8:	strd	r0, [sp, #48]	; 0x30
   31ffc:	mov	r2, r0
   32000:	mov	r3, r1
   32004:	ldrd	r0, [sp, #32]
   32008:	bl	36360 <__assert_fail@plt+0x25074>
   3200c:	mov	r1, #10
   32010:	umull	r6, r7, r2, r1
   32014:	mla	r7, r1, r3, r7
   32018:	ldrd	r2, [sp, #48]	; 0x30
   3201c:	mov	r0, r6
   32020:	mov	r1, r7
   32024:	bl	36360 <__assert_fail@plt+0x25074>
   32028:	lsls	r0, r2, #1
   3202c:	adc	r1, r3, r3
   32030:	strd	r0, [sp, #56]	; 0x38
   32034:	ldrd	r2, [sp, #48]	; 0x30
   32038:	ldrd	r0, [sp, #32]
   3203c:	bl	36360 <__assert_fail@plt+0x25074>
   32040:	strd	r0, [sp, #16]
   32044:	ldrd	r2, [sp, #48]	; 0x30
   32048:	mov	r0, r6
   3204c:	mov	r1, r7
   32050:	bl	36360 <__assert_fail@plt+0x25074>
   32054:	mov	r6, r0
   32058:	ldrd	r2, [sp, #48]	; 0x30
   3205c:	ldrd	r0, [sp, #56]	; 0x38
   32060:	cmp	r3, r1
   32064:	cmpeq	r2, r0
   32068:	bls	32080 <__assert_fail@plt+0x20d94>
   3206c:	mov	r3, r0
   32070:	orrs	r3, r3, r1
   32074:	movne	fp, #1
   32078:	moveq	fp, #0
   3207c:	b	3214c <__assert_fail@plt+0x20e60>
   32080:	ldrd	r2, [sp, #48]	; 0x30
   32084:	ldrd	r0, [sp, #56]	; 0x38
   32088:	cmp	r3, r1
   3208c:	cmpeq	r2, r0
   32090:	movcc	fp, #3
   32094:	movcs	fp, #2
   32098:	b	3214c <__assert_fail@plt+0x20e60>
   3209c:	ldr	r0, [sp, #28]
   320a0:	bl	31d10 <__assert_fail@plt+0x20a24>
   320a4:	vstr	d0, [sp]
   320a8:	ldr	r3, [pc, #436]	; 32264 <__assert_fail@plt+0x20f78>
   320ac:	mvn	r2, #0
   320b0:	mov	r1, #1
   320b4:	ldr	r4, [sp, #24]
   320b8:	mov	r0, r4
   320bc:	bl	111cc <__sprintf_chk@plt>
   320c0:	mov	r0, r4
   320c4:	bl	111a8 <strlen@plt>
   320c8:	mov	r5, r0
   320cc:	mov	r4, #0
   320d0:	mvn	r7, #0
   320d4:	sub	r6, sl, r5
   320d8:	mov	r2, r5
   320dc:	ldr	r1, [sp, #24]
   320e0:	mov	r0, r6
   320e4:	bl	11028 <memmove@plt>
   320e8:	sub	r5, r5, r4
   320ec:	add	r5, r6, r5
   320f0:	tst	r8, #4
   320f4:	bne	324cc <__assert_fail@plt+0x211e0>
   320f8:	tst	r8, #128	; 0x80
   320fc:	beq	325f8 <__assert_fail@plt+0x2130c>
   32100:	cmp	r7, #0
   32104:	blt	3255c <__assert_fail@plt+0x21270>
   32108:	and	r3, r8, #256	; 0x100
   3210c:	orrs	r2, r7, r3
   32110:	beq	3212c <__assert_fail@plt+0x20e40>
   32114:	tst	r8, #64	; 0x40
   32118:	beq	3212c <__assert_fail@plt+0x20e40>
   3211c:	ldr	r1, [sp, #24]
   32120:	add	sl, r1, #648	; 0x288
   32124:	mov	r2, #32
   32128:	strb	r2, [r1, #647]	; 0x287
   3212c:	cmp	r7, #0
   32130:	bne	325b0 <__assert_fail@plt+0x212c4>
   32134:	cmp	r3, #0
   32138:	beq	325f8 <__assert_fail@plt+0x2130c>
   3213c:	mov	r2, sl
   32140:	b	325ec <__assert_fail@plt+0x21300>
   32144:	mov	fp, #0
   32148:	mov	r6, fp
   3214c:	ands	r3, r8, #16
   32150:	str	r3, [sp, #48]	; 0x30
   32154:	streq	sl, [sp, #32]
   32158:	mvneq	r7, #0
   3215c:	beq	32310 <__assert_fail@plt+0x21024>
   32160:	ldr	ip, [sp, #44]	; 0x2c
   32164:	mov	r3, #0
   32168:	ldrd	r0, [sp, #16]
   3216c:	cmp	r1, r3
   32170:	cmpeq	r0, ip
   32174:	strcc	sl, [sp, #32]
   32178:	movcc	r7, #0
   3217c:	bcc	32310 <__assert_fail@plt+0x21024>
   32180:	mov	r7, #0
   32184:	str	sl, [sp, #32]
   32188:	mov	sl, ip
   3218c:	str	r9, [sp, #56]	; 0x38
   32190:	str	r8, [sp, #68]	; 0x44
   32194:	mov	r8, ip
   32198:	mov	r9, r3
   3219c:	b	321dc <__assert_fail@plt+0x20ef0>
   321a0:	add	fp, fp, r5
   321a4:	cmp	sl, fp
   321a8:	movcc	fp, #3
   321ac:	movcs	fp, #2
   321b0:	add	r7, r7, #1
   321b4:	ldrd	r2, [sp, #16]
   321b8:	cmp	r9, r3
   321bc:	cmpeq	r8, r2
   321c0:	movls	r3, #1
   321c4:	movhi	r3, #0
   321c8:	cmp	r7, #7
   321cc:	movgt	r3, #0
   321d0:	andle	r3, r3, #1
   321d4:	cmp	r3, #0
   321d8:	beq	3226c <__assert_fail@plt+0x20f80>
   321dc:	mov	r2, r8
   321e0:	mov	r3, r9
   321e4:	ldrd	r0, [sp, #16]
   321e8:	bl	36360 <__assert_fail@plt+0x25074>
   321ec:	add	r2, r2, r2, lsl #2
   321f0:	add	r6, r6, r2, lsl #1
   321f4:	mov	r1, sl
   321f8:	mov	r0, r6
   321fc:	bl	35d48 <__assert_fail@plt+0x24a5c>
   32200:	asr	r5, fp, #1
   32204:	add	r5, r5, r1, lsl #1
   32208:	mov	r2, r8
   3220c:	mov	r3, r9
   32210:	ldrd	r0, [sp, #16]
   32214:	bl	36360 <__assert_fail@plt+0x25074>
   32218:	strd	r0, [sp, #16]
   3221c:	mov	r1, sl
   32220:	mov	r0, r6
   32224:	bl	35b5c <__assert_fail@plt+0x24870>
   32228:	mov	r6, r0
   3222c:	cmp	sl, r5
   32230:	bls	321a0 <__assert_fail@plt+0x20eb4>
   32234:	cmn	fp, r5
   32238:	movne	fp, #1
   3223c:	moveq	fp, #0
   32240:	b	321b0 <__assert_fail@plt+0x20ec4>
   32244:	nop			; (mov r0, r0)
   32248:	andeq	r0, r0, r0
   3224c:	svccc	0x00f00000	; IMB
   32250:	andeq	r0, r0, r0
   32254:	eormi	r0, r4, r0
   32258:	andeq	r9, r3, ip, asr #19
   3225c:			; <UNDEFINED> instruction: 0x00036fbc
   32260:	ldrdeq	r9, [r3], -r8
   32264:	ldrdeq	r9, [r3], -r0
   32268:	andeq	r9, r3, ip, lsr #19
   3226c:	ldr	sl, [sp, #32]
   32270:	ldr	r9, [sp, #56]	; 0x38
   32274:	ldr	r8, [sp, #68]	; 0x44
   32278:	ldrd	r2, [sp, #16]
   3227c:	cmp	r3, #0
   32280:	cmpeq	r2, #9
   32284:	strhi	sl, [sp, #32]
   32288:	bhi	32310 <__assert_fail@plt+0x21024>
   3228c:	ldr	r3, [sp, #28]
   32290:	cmp	r3, #1
   32294:	beq	323b8 <__assert_fail@plt+0x210cc>
   32298:	ldr	r3, [sp, #28]
   3229c:	clz	r3, r3
   322a0:	lsr	r3, r3, #5
   322a4:	cmp	fp, #0
   322a8:	moveq	r3, #0
   322ac:	cmp	r3, #0
   322b0:	beq	322c4 <__assert_fail@plt+0x20fd8>
   322b4:	add	r6, r6, #1
   322b8:	cmp	r6, #10
   322bc:	movne	fp, #0
   322c0:	beq	323d0 <__assert_fail@plt+0x210e4>
   322c4:	cmp	r6, #0
   322c8:	bne	322dc <__assert_fail@plt+0x20ff0>
   322cc:	ands	r6, r8, #8
   322d0:	strne	sl, [sp, #32]
   322d4:	movne	r6, #0
   322d8:	bne	32310 <__assert_fail@plt+0x21024>
   322dc:	ldr	r3, [sp, #24]
   322e0:	add	r5, r3, #644	; 0x284
   322e4:	add	r5, r5, #2
   322e8:	add	r6, r6, #48	; 0x30
   322ec:	strb	r6, [r3, #646]	; 0x286
   322f0:	sub	r3, r5, r4
   322f4:	str	r3, [sp, #32]
   322f8:	mov	r2, r4
   322fc:	ldr	r1, [sp, #64]	; 0x40
   32300:	mov	r0, r3
   32304:	bl	11058 <memcpy@plt>
   32308:	mov	r6, #0
   3230c:	mov	fp, r6
   32310:	ldr	r3, [sp, #28]
   32314:	cmp	r3, #1
   32318:	beq	32400 <__assert_fail@plt+0x21114>
   3231c:	ldr	r3, [sp, #28]
   32320:	cmp	r3, #0
   32324:	movne	fp, #0
   32328:	bne	3233c <__assert_fail@plt+0x21050>
   3232c:	add	fp, r6, fp
   32330:	cmp	fp, #0
   32334:	movle	fp, #0
   32338:	movgt	fp, #1
   3233c:	cmp	fp, #0
   32340:	beq	3245c <__assert_fail@plt+0x21170>
   32344:	ldrd	r2, [sp, #16]
   32348:	adds	r2, r2, #1
   3234c:	adc	r3, r3, #0
   32350:	mov	r0, r2
   32354:	mov	r1, r3
   32358:	strd	r0, [sp, #16]
   3235c:	ldr	r3, [sp, #48]	; 0x30
   32360:	cmp	r3, #0
   32364:	beq	3245c <__assert_fail@plt+0x21170>
   32368:	ldr	r2, [sp, #44]	; 0x2c
   3236c:	mov	r3, #0
   32370:	cmp	r3, r1
   32374:	cmpeq	r2, r0
   32378:	moveq	r3, #1
   3237c:	movne	r3, #0
   32380:	cmp	r7, #7
   32384:	movgt	r3, #0
   32388:	andle	r3, r3, #1
   3238c:	cmp	r3, #0
   32390:	beq	3245c <__assert_fail@plt+0x21170>
   32394:	add	r7, r7, #1
   32398:	tst	r8, #8
   3239c:	beq	32430 <__assert_fail@plt+0x21144>
   323a0:	ldr	r2, [sp, #32]
   323a4:	sub	r6, r2, #1
   323a8:	mov	r3, #49	; 0x31
   323ac:	strb	r3, [r2, #-1]
   323b0:	mov	r5, r2
   323b4:	b	320f0 <__assert_fail@plt+0x20e04>
   323b8:	and	r3, r6, #1
   323bc:	add	r3, r3, fp
   323c0:	cmp	r3, #2
   323c4:	movle	r3, #0
   323c8:	movgt	r3, #1
   323cc:	b	322ac <__assert_fail@plt+0x20fc0>
   323d0:	ldrd	r2, [sp, #16]
   323d4:	adds	r2, r2, #1
   323d8:	adc	r3, r3, #0
   323dc:	strd	r2, [sp, #16]
   323e0:	cmp	r3, #0
   323e4:	cmpeq	r2, #9
   323e8:	strhi	sl, [sp, #32]
   323ec:	movhi	fp, #0
   323f0:	movhi	r6, fp
   323f4:	bhi	32310 <__assert_fail@plt+0x21024>
   323f8:	mov	fp, #0
   323fc:	b	322cc <__assert_fail@plt+0x20fe0>
   32400:	ldrd	r2, [sp, #16]
   32404:	and	r2, r2, #1
   32408:	mov	r3, #0
   3240c:	adds	r2, r2, fp
   32410:	adc	r3, r3, fp, asr #31
   32414:	orr	r2, r2, r3
   32418:	cmp	r2, #0
   3241c:	addne	r6, r6, #1
   32420:	cmp	r6, #5
   32424:	movle	fp, #0
   32428:	movgt	fp, #1
   3242c:	b	3233c <__assert_fail@plt+0x21050>
   32430:	mov	r3, #48	; 0x30
   32434:	ldr	r2, [sp, #32]
   32438:	strb	r3, [r2, #-1]
   3243c:	mvn	r3, r4
   32440:	add	r3, r2, r3
   32444:	str	r3, [sp, #32]
   32448:	mov	r2, r4
   3244c:	ldr	r1, [sp, #64]	; 0x40
   32450:	mov	r0, r3
   32454:	bl	11058 <memcpy@plt>
   32458:	b	323a0 <__assert_fail@plt+0x210b4>
   3245c:	ldr	r6, [sp, #32]
   32460:	mov	r4, #10
   32464:	mov	r5, #0
   32468:	mov	fp, r6
   3246c:	str	r8, [sp, #28]
   32470:	mov	r8, r7
   32474:	ldrd	r6, [sp, #16]
   32478:	mov	r2, r4
   3247c:	mov	r3, r5
   32480:	mov	r0, r6
   32484:	mov	r1, r7
   32488:	bl	36360 <__assert_fail@plt+0x25074>
   3248c:	add	r2, r2, #48	; 0x30
   32490:	strb	r2, [fp, #-1]!
   32494:	mov	r2, r4
   32498:	mov	r3, r5
   3249c:	mov	r0, r6
   324a0:	mov	r1, r7
   324a4:	bl	36360 <__assert_fail@plt+0x25074>
   324a8:	mov	r6, r0
   324ac:	mov	r7, r1
   324b0:	orrs	r3, r6, r7
   324b4:	bne	32478 <__assert_fail@plt+0x2118c>
   324b8:	mov	r7, r8
   324bc:	mov	r6, fp
   324c0:	ldr	r8, [sp, #28]
   324c4:	ldr	r5, [sp, #32]
   324c8:	b	320f0 <__assert_fail@plt+0x20e04>
   324cc:	sub	r4, r5, r6
   324d0:	ldr	r0, [sp, #12]
   324d4:	bl	111a8 <strlen@plt>
   324d8:	mov	fp, r0
   324dc:	mov	r3, #41	; 0x29
   324e0:	mov	r2, r4
   324e4:	mov	r1, r6
   324e8:	add	r0, sp, #76	; 0x4c
   324ec:	bl	110d0 <__memcpy_chk@plt>
   324f0:	mov	r6, r5
   324f4:	mvn	r5, #0
   324f8:	b	3253c <__assert_fail@plt+0x21250>
   324fc:	cmp	r5, r4
   32500:	movcs	r5, r4
   32504:	sub	r6, r6, r5
   32508:	sub	r4, r4, r5
   3250c:	mov	r2, r5
   32510:	add	r3, sp, #76	; 0x4c
   32514:	add	r1, r3, r4
   32518:	mov	r0, r6
   3251c:	bl	11058 <memcpy@plt>
   32520:	cmp	r4, #0
   32524:	beq	320f8 <__assert_fail@plt+0x20e0c>
   32528:	sub	r6, r6, fp
   3252c:	mov	r2, fp
   32530:	ldr	r1, [sp, #12]
   32534:	mov	r0, r6
   32538:	bl	11058 <memcpy@plt>
   3253c:	ldrb	r3, [r9]
   32540:	cmp	r3, #0
   32544:	beq	324fc <__assert_fail@plt+0x21210>
   32548:	cmp	r3, #255	; 0xff
   3254c:	movne	r5, r3
   32550:	moveq	r5, r4
   32554:	add	r9, r9, #1
   32558:	b	324fc <__assert_fail@plt+0x21210>
   3255c:	ldrd	r2, [sp, #184]	; 0xb8
   32560:	cmp	r3, #0
   32564:	cmpeq	r2, #1
   32568:	bls	32618 <__assert_fail@plt+0x2132c>
   3256c:	mov	r7, #1
   32570:	mov	r2, #1
   32574:	mov	r3, #0
   32578:	ldr	r1, [sp, #44]	; 0x2c
   3257c:	ldrd	r4, [sp, #184]	; 0xb8
   32580:	mul	r0, r1, r3
   32584:	umull	r2, r3, r2, r1
   32588:	add	r3, r0, r3
   3258c:	cmp	r5, r3
   32590:	cmpeq	r4, r2
   32594:	bls	32108 <__assert_fail@plt+0x20e1c>
   32598:	add	r7, r7, #1
   3259c:	cmp	r7, #8
   325a0:	bne	32580 <__assert_fail@plt+0x21294>
   325a4:	and	r3, r8, #256	; 0x100
   325a8:	tst	r8, #64	; 0x40
   325ac:	bne	3211c <__assert_fail@plt+0x20e30>
   325b0:	add	r2, sl, #1
   325b4:	ldr	r1, [sp, #40]	; 0x28
   325b8:	cmp	r1, #0
   325bc:	cmpeq	r7, #1
   325c0:	ldrne	r1, [pc, #-864]	; 32268 <__assert_fail@plt+0x20f7c>
   325c4:	ldrbne	r1, [r1, r7]
   325c8:	moveq	r1, #107	; 0x6b
   325cc:	strb	r1, [sl]
   325d0:	cmp	r3, #0
   325d4:	beq	32610 <__assert_fail@plt+0x21324>
   325d8:	ldr	r3, [sp, #40]	; 0x28
   325dc:	cmp	r3, #0
   325e0:	addne	r2, sl, #2
   325e4:	movne	r3, #105	; 0x69
   325e8:	strbne	r3, [sl, #1]
   325ec:	add	sl, r2, #1
   325f0:	mov	r3, #66	; 0x42
   325f4:	strb	r3, [r2]
   325f8:	mov	r3, #0
   325fc:	strb	r3, [sl]
   32600:	mov	r0, r6
   32604:	add	sp, sp, #124	; 0x7c
   32608:	vpop	{d8-d9}
   3260c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32610:	mov	sl, r2
   32614:	b	325f8 <__assert_fail@plt+0x2130c>
   32618:	ands	r3, r8, #256	; 0x100
   3261c:	movne	r7, #0
   32620:	bne	32114 <__assert_fail@plt+0x20e28>
   32624:	b	32134 <__assert_fail@plt+0x20e48>
   32628:	push	{r4, r5, r6, r7, lr}
   3262c:	sub	sp, sp, #20
   32630:	mov	r7, r1
   32634:	mov	r6, r2
   32638:	subs	r4, r0, #0
   3263c:	beq	326ac <__assert_fail@plt+0x213c0>
   32640:	ldrb	r3, [r4]
   32644:	cmp	r3, #39	; 0x27
   32648:	addeq	r4, r4, #1
   3264c:	moveq	r5, #4
   32650:	movne	r5, #0
   32654:	ldr	r1, [pc, #332]	; 327a8 <__assert_fail@plt+0x214bc>
   32658:	mov	r3, #4
   3265c:	add	r2, r1, #12
   32660:	add	r1, r1, #20
   32664:	mov	r0, r4
   32668:	bl	1963c <__assert_fail@plt+0x8350>
   3266c:	cmp	r0, #0
   32670:	blt	326f0 <__assert_fail@plt+0x21404>
   32674:	ldr	r3, [pc, #300]	; 327a8 <__assert_fail@plt+0x214bc>
   32678:	add	r0, r3, r0, lsl #2
   3267c:	ldr	r3, [r0, #12]
   32680:	orr	r5, r5, r3
   32684:	mov	r2, #1
   32688:	mov	r3, #0
   3268c:	strd	r2, [r6]
   32690:	str	r5, [r7]
   32694:	mov	r0, #0
   32698:	ldrd	r2, [r6]
   3269c:	orrs	r3, r2, r3
   326a0:	beq	32784 <__assert_fail@plt+0x21498>
   326a4:	add	sp, sp, #20
   326a8:	pop	{r4, r5, r6, r7, pc}
   326ac:	ldr	r0, [pc, #248]	; 327ac <__assert_fail@plt+0x214c0>
   326b0:	bl	11130 <getenv@plt>
   326b4:	subs	r4, r0, #0
   326b8:	bne	32640 <__assert_fail@plt+0x21354>
   326bc:	ldr	r0, [pc, #236]	; 327b0 <__assert_fail@plt+0x214c4>
   326c0:	bl	11130 <getenv@plt>
   326c4:	subs	r4, r0, #0
   326c8:	bne	32640 <__assert_fail@plt+0x21354>
   326cc:	ldr	r0, [pc, #224]	; 327b4 <__assert_fail@plt+0x214c8>
   326d0:	bl	11130 <getenv@plt>
   326d4:	cmp	r0, #0
   326d8:	moveq	r2, #1024	; 0x400
   326dc:	movne	r2, #512	; 0x200
   326e0:	mov	r3, #0
   326e4:	strd	r2, [r6]
   326e8:	mov	r5, #0
   326ec:	b	32690 <__assert_fail@plt+0x213a4>
   326f0:	ldr	r3, [pc, #192]	; 327b8 <__assert_fail@plt+0x214cc>
   326f4:	str	r3, [sp]
   326f8:	mov	r3, r6
   326fc:	mov	r2, #0
   32700:	add	r1, sp, #12
   32704:	mov	r0, r4
   32708:	bl	3515c <__assert_fail@plt+0x23e70>
   3270c:	cmp	r0, #0
   32710:	movne	r3, #0
   32714:	strne	r3, [r7]
   32718:	bne	32698 <__assert_fail@plt+0x213ac>
   3271c:	ldrb	r3, [r4]
   32720:	sub	r3, r3, #48	; 0x30
   32724:	uxtb	r3, r3
   32728:	cmp	r3, #9
   3272c:	bls	32690 <__assert_fail@plt+0x213a4>
   32730:	ldr	r2, [sp, #12]
   32734:	cmp	r4, r2
   32738:	beq	32758 <__assert_fail@plt+0x2146c>
   3273c:	ldrb	r3, [r4, #1]!
   32740:	sub	r3, r3, #48	; 0x30
   32744:	uxtb	r3, r3
   32748:	cmp	r3, #9
   3274c:	bls	32690 <__assert_fail@plt+0x213a4>
   32750:	cmp	r4, r2
   32754:	bne	3273c <__assert_fail@plt+0x21450>
   32758:	ldrb	r3, [r2, #-1]
   3275c:	cmp	r3, #66	; 0x42
   32760:	orrne	r5, r5, #128	; 0x80
   32764:	beq	32770 <__assert_fail@plt+0x21484>
   32768:	orr	r5, r5, #32
   3276c:	b	32690 <__assert_fail@plt+0x213a4>
   32770:	orr	r5, r5, #384	; 0x180
   32774:	ldrb	r3, [r2, #-2]
   32778:	cmp	r3, #105	; 0x69
   3277c:	bne	32690 <__assert_fail@plt+0x213a4>
   32780:	b	32768 <__assert_fail@plt+0x2147c>
   32784:	ldr	r0, [pc, #40]	; 327b4 <__assert_fail@plt+0x214c8>
   32788:	bl	11130 <getenv@plt>
   3278c:	cmp	r0, #0
   32790:	moveq	r2, #1024	; 0x400
   32794:	movne	r2, #512	; 0x200
   32798:	mov	r3, #0
   3279c:	strd	r2, [r6]
   327a0:	mov	r0, #4
   327a4:	b	326a4 <__assert_fail@plt+0x213b8>
   327a8:	andeq	r9, r3, ip, lsr #19
   327ac:	andeq	r9, r3, r0, ror #19
   327b0:	andeq	r9, r3, ip, ror #19
   327b4:	strdeq	r9, [r3], -r8
   327b8:	andeq	r9, r3, r8, lsl #20
   327bc:	push	{r4, r5, r6, r8, r9, lr}
   327c0:	mov	r4, r0
   327c4:	mov	r5, r1
   327c8:	add	r6, r2, #20
   327cc:	mov	r3, #0
   327d0:	strb	r3, [r2, #20]
   327d4:	mov	r8, #10
   327d8:	mov	r9, #0
   327dc:	mov	r2, r8
   327e0:	mov	r3, r9
   327e4:	mov	r0, r4
   327e8:	mov	r1, r5
   327ec:	bl	36360 <__assert_fail@plt+0x25074>
   327f0:	add	r2, r2, #48	; 0x30
   327f4:	strb	r2, [r6, #-1]!
   327f8:	mov	r2, r8
   327fc:	mov	r3, r9
   32800:	mov	r0, r4
   32804:	mov	r1, r5
   32808:	bl	36360 <__assert_fail@plt+0x25074>
   3280c:	mov	r4, r0
   32810:	mov	r5, r1
   32814:	orrs	r3, r4, r5
   32818:	bne	327dc <__assert_fail@plt+0x214f0>
   3281c:	mov	r0, r6
   32820:	pop	{r4, r5, r6, r8, r9, pc}
   32824:	push	{r4, r5, r6, lr}
   32828:	subs	r4, r0, #0
   3282c:	beq	328a4 <__assert_fail@plt+0x215b8>
   32830:	mov	r1, #47	; 0x2f
   32834:	mov	r0, r4
   32838:	bl	1125c <strrchr@plt>
   3283c:	cmp	r0, #0
   32840:	addne	r5, r0, #1
   32844:	moveq	r5, r4
   32848:	sub	r3, r5, r4
   3284c:	cmp	r3, #6
   32850:	ble	32890 <__assert_fail@plt+0x215a4>
   32854:	mov	r2, #7
   32858:	ldr	r1, [pc, #96]	; 328c0 <__assert_fail@plt+0x215d4>
   3285c:	sub	r0, r5, #7
   32860:	bl	112bc <strncmp@plt>
   32864:	cmp	r0, #0
   32868:	bne	32890 <__assert_fail@plt+0x215a4>
   3286c:	mov	r2, #3
   32870:	ldr	r1, [pc, #76]	; 328c4 <__assert_fail@plt+0x215d8>
   32874:	mov	r0, r5
   32878:	bl	112bc <strncmp@plt>
   3287c:	cmp	r0, #0
   32880:	addeq	r4, r5, #3
   32884:	ldreq	r3, [pc, #60]	; 328c8 <__assert_fail@plt+0x215dc>
   32888:	streq	r4, [r3]
   3288c:	movne	r4, r5
   32890:	ldr	r3, [pc, #52]	; 328cc <__assert_fail@plt+0x215e0>
   32894:	str	r4, [r3]
   32898:	ldr	r3, [pc, #48]	; 328d0 <__assert_fail@plt+0x215e4>
   3289c:	str	r4, [r3]
   328a0:	pop	{r4, r5, r6, pc}
   328a4:	ldr	r3, [pc, #40]	; 328d4 <__assert_fail@plt+0x215e8>
   328a8:	ldr	r3, [r3]
   328ac:	mov	r2, #55	; 0x37
   328b0:	mov	r1, #1
   328b4:	ldr	r0, [pc, #28]	; 328d8 <__assert_fail@plt+0x215ec>
   328b8:	bl	110dc <fwrite@plt>
   328bc:	bl	112c8 <abort@plt>
   328c0:	andeq	r9, r3, r8, ror #20
   328c4:	andeq	r9, r3, r0, ror sl
   328c8:	andeq	sl, r4, r8, lsl #3
   328cc:	ldrdeq	sl, [r4], -r8
   328d0:	andeq	sl, r4, ip, lsl #3
   328d4:	muleq	r4, r8, r1
   328d8:	andeq	r9, r3, r0, lsr sl
   328dc:	push	{r4, r5, r6, lr}
   328e0:	mov	r5, r0
   328e4:	mov	r4, r1
   328e8:	mov	r2, #48	; 0x30
   328ec:	mov	r1, #0
   328f0:	bl	111f0 <memset@plt>
   328f4:	cmp	r4, #10
   328f8:	beq	32908 <__assert_fail@plt+0x2161c>
   328fc:	str	r4, [r5]
   32900:	mov	r0, r5
   32904:	pop	{r4, r5, r6, pc}
   32908:	bl	112c8 <abort@plt>
   3290c:	push	{r4, r5, r6, lr}
   32910:	mov	r4, r0
   32914:	mov	r5, r1
   32918:	mov	r2, #5
   3291c:	mov	r1, r0
   32920:	mov	r0, #0
   32924:	bl	110a0 <dcgettext@plt>
   32928:	cmp	r4, r0
   3292c:	popne	{r4, r5, r6, pc}
   32930:	bl	3597c <__assert_fail@plt+0x24690>
   32934:	ldrb	r3, [r0]
   32938:	bic	r3, r3, #32
   3293c:	cmp	r3, #85	; 0x55
   32940:	beq	329bc <__assert_fail@plt+0x216d0>
   32944:	cmp	r3, #71	; 0x47
   32948:	bne	32a18 <__assert_fail@plt+0x2172c>
   3294c:	ldrb	r3, [r0, #1]
   32950:	bic	r3, r3, #32
   32954:	cmp	r3, #66	; 0x42
   32958:	bne	32a18 <__assert_fail@plt+0x2172c>
   3295c:	ldrb	r3, [r0, #2]
   32960:	cmp	r3, #49	; 0x31
   32964:	bne	32a18 <__assert_fail@plt+0x2172c>
   32968:	ldrb	r3, [r0, #3]
   3296c:	cmp	r3, #56	; 0x38
   32970:	bne	32a18 <__assert_fail@plt+0x2172c>
   32974:	ldrb	r3, [r0, #4]
   32978:	cmp	r3, #48	; 0x30
   3297c:	bne	32a18 <__assert_fail@plt+0x2172c>
   32980:	ldrb	r3, [r0, #5]
   32984:	cmp	r3, #51	; 0x33
   32988:	bne	32a18 <__assert_fail@plt+0x2172c>
   3298c:	ldrb	r3, [r0, #6]
   32990:	cmp	r3, #48	; 0x30
   32994:	bne	32a18 <__assert_fail@plt+0x2172c>
   32998:	ldrb	r3, [r0, #7]
   3299c:	cmp	r3, #0
   329a0:	bne	32a18 <__assert_fail@plt+0x2172c>
   329a4:	ldrb	r2, [r4]
   329a8:	ldr	r3, [pc, #124]	; 32a2c <__assert_fail@plt+0x21740>
   329ac:	ldr	r0, [pc, #124]	; 32a30 <__assert_fail@plt+0x21744>
   329b0:	cmp	r2, #96	; 0x60
   329b4:	movne	r0, r3
   329b8:	pop	{r4, r5, r6, pc}
   329bc:	ldrb	r3, [r0, #1]
   329c0:	bic	r3, r3, #32
   329c4:	cmp	r3, #84	; 0x54
   329c8:	bne	32a18 <__assert_fail@plt+0x2172c>
   329cc:	ldrb	r3, [r0, #2]
   329d0:	bic	r3, r3, #32
   329d4:	cmp	r3, #70	; 0x46
   329d8:	bne	32a18 <__assert_fail@plt+0x2172c>
   329dc:	ldrb	r3, [r0, #3]
   329e0:	cmp	r3, #45	; 0x2d
   329e4:	bne	32a18 <__assert_fail@plt+0x2172c>
   329e8:	ldrb	r3, [r0, #4]
   329ec:	cmp	r3, #56	; 0x38
   329f0:	bne	32a18 <__assert_fail@plt+0x2172c>
   329f4:	ldrb	r3, [r0, #5]
   329f8:	cmp	r3, #0
   329fc:	bne	32a18 <__assert_fail@plt+0x2172c>
   32a00:	ldrb	r2, [r4]
   32a04:	ldr	r3, [pc, #40]	; 32a34 <__assert_fail@plt+0x21748>
   32a08:	ldr	r0, [pc, #40]	; 32a38 <__assert_fail@plt+0x2174c>
   32a0c:	cmp	r2, #96	; 0x60
   32a10:	movne	r0, r3
   32a14:	pop	{r4, r5, r6, pc}
   32a18:	ldr	r3, [pc, #28]	; 32a3c <__assert_fail@plt+0x21750>
   32a1c:	ldr	r0, [pc, #28]	; 32a40 <__assert_fail@plt+0x21754>
   32a20:	cmp	r5, #9
   32a24:	movne	r0, r3
   32a28:	pop	{r4, r5, r6, pc}
   32a2c:	andeq	r9, r3, ip, asr #21
   32a30:	ldrdeq	r9, [r3], -r8
   32a34:	andeq	r9, r3, r8, asr #21
   32a38:	ldrdeq	r9, [r3], -ip
   32a3c:	ldrdeq	r9, [r3], -r0
   32a40:	ldrdeq	r9, [r3], -r4
   32a44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32a48:	sub	sp, sp, #116	; 0x74
   32a4c:	str	r0, [sp, #36]	; 0x24
   32a50:	mov	sl, r1
   32a54:	str	r2, [sp, #52]	; 0x34
   32a58:	str	r3, [sp, #28]
   32a5c:	ldr	r8, [sp, #152]	; 0x98
   32a60:	bl	110f4 <__ctype_get_mb_cur_max@plt>
   32a64:	str	r0, [sp, #84]	; 0x54
   32a68:	ldr	r3, [sp, #156]	; 0x9c
   32a6c:	lsr	r3, r3, #1
   32a70:	and	r3, r3, #1
   32a74:	str	r3, [sp, #32]
   32a78:	mov	r3, #1
   32a7c:	str	r3, [sp, #40]	; 0x28
   32a80:	mov	r3, #0
   32a84:	str	r3, [sp, #80]	; 0x50
   32a88:	str	r3, [sp, #44]	; 0x2c
   32a8c:	str	r3, [sp, #48]	; 0x30
   32a90:	str	r3, [sp, #60]	; 0x3c
   32a94:	str	r3, [sp, #72]	; 0x48
   32a98:	str	r3, [sp, #76]	; 0x4c
   32a9c:	mov	r7, sl
   32aa0:	mov	sl, r8
   32aa4:	cmp	sl, #10
   32aa8:	ldrls	pc, [pc, sl, lsl #2]
   32aac:	b	32c64 <__assert_fail@plt+0x21978>
   32ab0:	andeq	r2, r3, r4, lsl fp
   32ab4:	andeq	r2, r3, r4, ror #21
   32ab8:	andeq	r2, r3, r0, asr #24
   32abc:	ldrdeq	r2, [r3], -ip
   32ac0:	strdeq	r2, [r3], -r4
   32ac4:	andeq	r2, r3, r4, lsr #22
   32ac8:	muleq	r3, r0, fp
   32acc:	andeq	r2, r3, r8, ror #24
   32ad0:	andeq	r2, r3, r0, ror #22
   32ad4:	andeq	r2, r3, r0, ror #22
   32ad8:	andeq	r2, r3, r0, ror #22
   32adc:	mov	r3, #1
   32ae0:	str	r3, [sp, #48]	; 0x30
   32ae4:	mov	r3, #1
   32ae8:	str	r3, [sp, #32]
   32aec:	str	r3, [sp, #60]	; 0x3c
   32af0:	ldr	r3, [pc, #4068]	; 33adc <__assert_fail@plt+0x227f0>
   32af4:	str	r3, [sp, #72]	; 0x48
   32af8:	mov	fp, #0
   32afc:	mov	sl, #2
   32b00:	mov	r6, #0
   32b04:	ldr	r3, [sp, #48]	; 0x30
   32b08:	eor	r3, r3, #1
   32b0c:	str	r3, [sp, #68]	; 0x44
   32b10:	b	333f8 <__assert_fail@plt+0x2210c>
   32b14:	mov	r3, #0
   32b18:	str	r3, [sp, #32]
   32b1c:	mov	fp, r3
   32b20:	b	32b00 <__assert_fail@plt+0x21814>
   32b24:	ldr	r3, [sp, #32]
   32b28:	cmp	r3, #0
   32b2c:	bne	32c80 <__assert_fail@plt+0x21994>
   32b30:	cmp	r7, #0
   32b34:	beq	32ca0 <__assert_fail@plt+0x219b4>
   32b38:	ldr	r3, [sp, #36]	; 0x24
   32b3c:	mov	r2, #34	; 0x22
   32b40:	strb	r2, [r3]
   32b44:	mov	r3, #1
   32b48:	str	r3, [sp, #48]	; 0x30
   32b4c:	str	r3, [sp, #60]	; 0x3c
   32b50:	ldr	r3, [pc, #3980]	; 33ae4 <__assert_fail@plt+0x227f8>
   32b54:	str	r3, [sp, #72]	; 0x48
   32b58:	mov	fp, #1
   32b5c:	b	32b00 <__assert_fail@plt+0x21814>
   32b60:	cmp	sl, #10
   32b64:	beq	32b88 <__assert_fail@plt+0x2189c>
   32b68:	mov	r1, sl
   32b6c:	ldr	r0, [pc, #3948]	; 33ae0 <__assert_fail@plt+0x227f4>
   32b70:	bl	3290c <__assert_fail@plt+0x21620>
   32b74:	str	r0, [sp, #164]	; 0xa4
   32b78:	mov	r1, sl
   32b7c:	ldr	r0, [pc, #3928]	; 33adc <__assert_fail@plt+0x227f0>
   32b80:	bl	3290c <__assert_fail@plt+0x21620>
   32b84:	str	r0, [sp, #168]	; 0xa8
   32b88:	ldr	r3, [sp, #32]
   32b8c:	cmp	r3, #0
   32b90:	movne	fp, #0
   32b94:	bne	32bcc <__assert_fail@plt+0x218e0>
   32b98:	ldr	r3, [sp, #164]	; 0xa4
   32b9c:	ldrb	r3, [r3]
   32ba0:	cmp	r3, #0
   32ba4:	beq	32bec <__assert_fail@plt+0x21900>
   32ba8:	ldr	r2, [sp, #164]	; 0xa4
   32bac:	mov	fp, #0
   32bb0:	ldr	r1, [sp, #36]	; 0x24
   32bb4:	cmp	r7, fp
   32bb8:	strbhi	r3, [r1, fp]
   32bbc:	add	fp, fp, #1
   32bc0:	ldrb	r3, [r2, #1]!
   32bc4:	cmp	r3, #0
   32bc8:	bne	32bb4 <__assert_fail@plt+0x218c8>
   32bcc:	ldr	r0, [sp, #168]	; 0xa8
   32bd0:	bl	111a8 <strlen@plt>
   32bd4:	str	r0, [sp, #60]	; 0x3c
   32bd8:	ldr	r3, [sp, #168]	; 0xa8
   32bdc:	str	r3, [sp, #72]	; 0x48
   32be0:	mov	r3, #1
   32be4:	str	r3, [sp, #48]	; 0x30
   32be8:	b	32b00 <__assert_fail@plt+0x21814>
   32bec:	mov	fp, #0
   32bf0:	b	32bcc <__assert_fail@plt+0x218e0>
   32bf4:	ldr	r3, [sp, #32]
   32bf8:	cmp	r3, #0
   32bfc:	bne	32cbc <__assert_fail@plt+0x219d0>
   32c00:	mov	r3, #1
   32c04:	str	r3, [sp, #48]	; 0x30
   32c08:	cmp	r7, #0
   32c0c:	beq	32cd8 <__assert_fail@plt+0x219ec>
   32c10:	ldr	r3, [sp, #36]	; 0x24
   32c14:	mov	r2, #39	; 0x27
   32c18:	strb	r2, [r3]
   32c1c:	mov	r3, #0
   32c20:	str	r3, [sp, #32]
   32c24:	mov	r3, #1
   32c28:	str	r3, [sp, #60]	; 0x3c
   32c2c:	ldr	r3, [pc, #3752]	; 33adc <__assert_fail@plt+0x227f0>
   32c30:	str	r3, [sp, #72]	; 0x48
   32c34:	mov	fp, #1
   32c38:	mov	sl, #2
   32c3c:	b	32b00 <__assert_fail@plt+0x21814>
   32c40:	ldr	r3, [sp, #32]
   32c44:	cmp	r3, #0
   32c48:	beq	32c08 <__assert_fail@plt+0x2191c>
   32c4c:	mov	r3, #1
   32c50:	str	r3, [sp, #60]	; 0x3c
   32c54:	ldr	r3, [pc, #3712]	; 33adc <__assert_fail@plt+0x227f0>
   32c58:	str	r3, [sp, #72]	; 0x48
   32c5c:	mov	fp, #0
   32c60:	b	32b00 <__assert_fail@plt+0x21814>
   32c64:	bl	112c8 <abort@plt>
   32c68:	mov	r3, #0
   32c6c:	str	r3, [sp, #32]
   32c70:	mov	r3, #1
   32c74:	str	r3, [sp, #48]	; 0x30
   32c78:	mov	fp, #0
   32c7c:	b	32b00 <__assert_fail@plt+0x21814>
   32c80:	ldr	r3, [sp, #32]
   32c84:	str	r3, [sp, #48]	; 0x30
   32c88:	mov	r3, #1
   32c8c:	str	r3, [sp, #60]	; 0x3c
   32c90:	ldr	r3, [pc, #3660]	; 33ae4 <__assert_fail@plt+0x227f8>
   32c94:	str	r3, [sp, #72]	; 0x48
   32c98:	mov	fp, #0
   32c9c:	b	32b00 <__assert_fail@plt+0x21814>
   32ca0:	mov	r3, #1
   32ca4:	str	r3, [sp, #48]	; 0x30
   32ca8:	str	r3, [sp, #60]	; 0x3c
   32cac:	ldr	r3, [pc, #3632]	; 33ae4 <__assert_fail@plt+0x227f8>
   32cb0:	str	r3, [sp, #72]	; 0x48
   32cb4:	mov	fp, #1
   32cb8:	b	32b00 <__assert_fail@plt+0x21814>
   32cbc:	mov	r3, #1
   32cc0:	str	r3, [sp, #60]	; 0x3c
   32cc4:	ldr	r3, [pc, #3600]	; 33adc <__assert_fail@plt+0x227f0>
   32cc8:	str	r3, [sp, #72]	; 0x48
   32ccc:	mov	fp, #0
   32cd0:	mov	sl, #2
   32cd4:	b	32b00 <__assert_fail@plt+0x21814>
   32cd8:	mov	r3, #0
   32cdc:	str	r3, [sp, #32]
   32ce0:	mov	r3, #1
   32ce4:	str	r3, [sp, #60]	; 0x3c
   32ce8:	ldr	r3, [pc, #3564]	; 33adc <__assert_fail@plt+0x227f0>
   32cec:	str	r3, [sp, #72]	; 0x48
   32cf0:	mov	fp, #1
   32cf4:	mov	sl, #2
   32cf8:	b	32b00 <__assert_fail@plt+0x21814>
   32cfc:	mov	r3, #0
   32d00:	str	r3, [sp, #56]	; 0x38
   32d04:	ldr	r3, [sp, #52]	; 0x34
   32d08:	add	r2, r3, r6
   32d0c:	str	r2, [sp, #64]	; 0x40
   32d10:	ldrb	r4, [r3, r6]
   32d14:	cmp	r4, #126	; 0x7e
   32d18:	ldrls	pc, [pc, r4, lsl #2]
   32d1c:	b	33558 <__assert_fail@plt+0x2226c>
   32d20:	andeq	r2, r3, r8, lsr pc
   32d24:	andeq	r3, r3, r8, asr r5
   32d28:	andeq	r3, r3, r8, asr r5
   32d2c:	andeq	r3, r3, r8, asr r5
   32d30:	andeq	r3, r3, r8, asr r5
   32d34:	andeq	r3, r3, r8, asr r5
   32d38:	andeq	r3, r3, r8, asr r5
   32d3c:	muleq	r3, r4, r2
   32d40:	andeq	r2, r3, r0, lsr pc
   32d44:	andeq	r3, r3, ip, asr #4
   32d48:	andeq	r3, r3, r4, asr #4
   32d4c:			; <UNDEFINED> instruction: 0x000331b4
   32d50:	andeq	r3, r3, ip, lsr #3
   32d54:	andeq	r2, r3, r8, lsr #30
   32d58:	andeq	r3, r3, r8, asr r5
   32d5c:	andeq	r3, r3, r8, asr r5
   32d60:	andeq	r3, r3, r8, asr r5
   32d64:	andeq	r3, r3, r8, asr r5
   32d68:	andeq	r3, r3, r8, asr r5
   32d6c:	andeq	r3, r3, r8, asr r5
   32d70:	andeq	r3, r3, r8, asr r5
   32d74:	andeq	r3, r3, r8, asr r5
   32d78:	andeq	r3, r3, r8, asr r5
   32d7c:	andeq	r3, r3, r8, asr r5
   32d80:	andeq	r3, r3, r8, asr r5
   32d84:	andeq	r3, r3, r8, asr r5
   32d88:	andeq	r3, r3, r8, asr r5
   32d8c:	andeq	r3, r3, r8, asr r5
   32d90:	andeq	r3, r3, r8, asr r5
   32d94:	andeq	r3, r3, r8, asr r5
   32d98:	andeq	r3, r3, r8, asr r5
   32d9c:	andeq	r3, r3, r8, asr r5
   32da0:	andeq	r3, r3, r8, ror #5
   32da4:	andeq	r3, r3, r4, ror #5
   32da8:	andeq	r3, r3, r4, ror #5
   32dac:			; <UNDEFINED> instruction: 0x000332bc
   32db0:	andeq	r3, r3, r4, ror #5
   32db4:	andeq	r3, r3, ip, lsr #18
   32db8:	andeq	r3, r3, r4, ror #5
   32dbc:			; <UNDEFINED> instruction: 0x000334bc
   32dc0:	andeq	r3, r3, r4, ror #5
   32dc4:	andeq	r3, r3, r4, ror #5
   32dc8:	andeq	r3, r3, r4, ror #5
   32dcc:	andeq	r3, r3, ip, lsr #18
   32dd0:	andeq	r3, r3, ip, lsr #18
   32dd4:	andeq	r3, r3, ip, lsr #18
   32dd8:	andeq	r3, r3, ip, lsr #18
   32ddc:	andeq	r3, r3, ip, lsr #18
   32de0:	andeq	r3, r3, ip, lsr #18
   32de4:	andeq	r3, r3, ip, lsr #18
   32de8:	andeq	r3, r3, ip, lsr #18
   32dec:	andeq	r3, r3, ip, lsr #18
   32df0:	andeq	r3, r3, ip, lsr #18
   32df4:	andeq	r3, r3, ip, lsr #18
   32df8:	andeq	r3, r3, ip, lsr #18
   32dfc:	andeq	r3, r3, ip, lsr #18
   32e00:	andeq	r3, r3, ip, lsr #18
   32e04:	andeq	r3, r3, ip, lsr #18
   32e08:	andeq	r3, r3, ip, lsr #18
   32e0c:	andeq	r3, r3, r4, ror #5
   32e10:	andeq	r3, r3, r4, ror #5
   32e14:	andeq	r3, r3, r4, ror #5
   32e18:	andeq	r3, r3, r4, ror #5
   32e1c:	andeq	r3, r3, r0, asr #32
   32e20:	andeq	r3, r3, r8, asr r5
   32e24:	andeq	r3, r3, ip, lsr #18
   32e28:	andeq	r3, r3, ip, lsr #18
   32e2c:	andeq	r3, r3, ip, lsr #18
   32e30:	andeq	r3, r3, ip, lsr #18
   32e34:	andeq	r3, r3, ip, lsr #18
   32e38:	andeq	r3, r3, ip, lsr #18
   32e3c:	andeq	r3, r3, ip, lsr #18
   32e40:	andeq	r3, r3, ip, lsr #18
   32e44:	andeq	r3, r3, ip, lsr #18
   32e48:	andeq	r3, r3, ip, lsr #18
   32e4c:	andeq	r3, r3, ip, lsr #18
   32e50:	andeq	r3, r3, ip, lsr #18
   32e54:	andeq	r3, r3, ip, lsr #18
   32e58:	andeq	r3, r3, ip, lsr #18
   32e5c:	andeq	r3, r3, ip, lsr #18
   32e60:	andeq	r3, r3, ip, lsr #18
   32e64:	andeq	r3, r3, ip, lsr #18
   32e68:	andeq	r3, r3, ip, lsr #18
   32e6c:	andeq	r3, r3, ip, lsr #18
   32e70:	andeq	r3, r3, ip, lsr #18
   32e74:	andeq	r3, r3, ip, lsr #18
   32e78:	andeq	r3, r3, ip, lsr #18
   32e7c:	andeq	r3, r3, ip, lsr #18
   32e80:	andeq	r3, r3, ip, lsr #18
   32e84:	andeq	r3, r3, ip, lsr #18
   32e88:	andeq	r3, r3, ip, lsr #18
   32e8c:	andeq	r3, r3, r4, ror #5
   32e90:			; <UNDEFINED> instruction: 0x000331bc
   32e94:	andeq	r3, r3, ip, lsr #18
   32e98:	andeq	r3, r3, r4, ror #5
   32e9c:	andeq	r3, r3, ip, lsr #18
   32ea0:	andeq	r3, r3, r4, ror #5
   32ea4:	andeq	r3, r3, ip, lsr #18
   32ea8:	andeq	r3, r3, ip, lsr #18
   32eac:	andeq	r3, r3, ip, lsr #18
   32eb0:	andeq	r3, r3, ip, lsr #18
   32eb4:	andeq	r3, r3, ip, lsr #18
   32eb8:	andeq	r3, r3, ip, lsr #18
   32ebc:	andeq	r3, r3, ip, lsr #18
   32ec0:	andeq	r3, r3, ip, lsr #18
   32ec4:	andeq	r3, r3, ip, lsr #18
   32ec8:	andeq	r3, r3, ip, lsr #18
   32ecc:	andeq	r3, r3, ip, lsr #18
   32ed0:	andeq	r3, r3, ip, lsr #18
   32ed4:	andeq	r3, r3, ip, lsr #18
   32ed8:	andeq	r3, r3, ip, lsr #18
   32edc:	andeq	r3, r3, ip, lsr #18
   32ee0:	andeq	r3, r3, ip, lsr #18
   32ee4:	andeq	r3, r3, ip, lsr #18
   32ee8:	andeq	r3, r3, ip, lsr #18
   32eec:	andeq	r3, r3, ip, lsr #18
   32ef0:	andeq	r3, r3, ip, lsr #18
   32ef4:	andeq	r3, r3, ip, lsr #18
   32ef8:	andeq	r3, r3, ip, lsr #18
   32efc:	andeq	r3, r3, ip, lsr #18
   32f00:	andeq	r3, r3, ip, lsr #18
   32f04:	andeq	r3, r3, ip, lsr #18
   32f08:	andeq	r3, r3, ip, lsr #18
   32f0c:	muleq	r3, ip, r2
   32f10:	andeq	r3, r3, r4, ror #5
   32f14:	muleq	r3, ip, r2
   32f18:			; <UNDEFINED> instruction: 0x000332bc
   32f1c:	mov	r3, #0
   32f20:	str	r3, [sp, #56]	; 0x38
   32f24:	b	32d04 <__assert_fail@plt+0x21a18>
   32f28:	mov	r3, #114	; 0x72
   32f2c:	b	33250 <__assert_fail@plt+0x21f64>
   32f30:	mov	r3, #98	; 0x62
   32f34:	b	33268 <__assert_fail@plt+0x21f7c>
   32f38:	ldr	r3, [sp, #48]	; 0x30
   32f3c:	cmp	r3, #0
   32f40:	beq	33028 <__assert_fail@plt+0x21d3c>
   32f44:	ldr	r3, [sp, #32]
   32f48:	cmp	r3, #0
   32f4c:	bne	33ab0 <__assert_fail@plt+0x227c4>
   32f50:	ldr	r3, [sp, #44]	; 0x2c
   32f54:	eor	r3, r3, #1
   32f58:	cmp	sl, #2
   32f5c:	movne	r3, #0
   32f60:	andeq	r3, r3, #1
   32f64:	cmp	r3, #0
   32f68:	moveq	r2, fp
   32f6c:	beq	32fb0 <__assert_fail@plt+0x21cc4>
   32f70:	cmp	r7, fp
   32f74:	ldrhi	r2, [sp, #36]	; 0x24
   32f78:	movhi	r1, #39	; 0x27
   32f7c:	strbhi	r1, [r2, fp]
   32f80:	add	r2, fp, #1
   32f84:	cmp	r7, r2
   32f88:	ldrhi	r1, [sp, #36]	; 0x24
   32f8c:	movhi	r0, #36	; 0x24
   32f90:	strbhi	r0, [r1, r2]
   32f94:	add	r2, fp, #2
   32f98:	cmp	r7, r2
   32f9c:	ldrhi	r1, [sp, #36]	; 0x24
   32fa0:	movhi	r0, #39	; 0x27
   32fa4:	strbhi	r0, [r1, r2]
   32fa8:	add	r2, fp, #3
   32fac:	str	r3, [sp, #44]	; 0x2c
   32fb0:	cmp	r7, r2
   32fb4:	ldrhi	r3, [sp, #36]	; 0x24
   32fb8:	movhi	r1, #92	; 0x5c
   32fbc:	strbhi	r1, [r3, r2]
   32fc0:	add	fp, r2, #1
   32fc4:	cmp	r5, #0
   32fc8:	beq	33934 <__assert_fail@plt+0x22648>
   32fcc:	add	r3, r6, #1
   32fd0:	ldr	r1, [sp, #28]
   32fd4:	cmp	r1, r3
   32fd8:	bls	33944 <__assert_fail@plt+0x22658>
   32fdc:	ldr	r1, [sp, #52]	; 0x34
   32fe0:	ldrb	r3, [r1, r3]
   32fe4:	sub	r3, r3, #48	; 0x30
   32fe8:	uxtb	r3, r3
   32fec:	cmp	r3, #9
   32ff0:	bhi	33950 <__assert_fail@plt+0x22664>
   32ff4:	cmp	r7, fp
   32ff8:	movhi	r3, #48	; 0x30
   32ffc:	ldrhi	r1, [sp, #36]	; 0x24
   33000:	strbhi	r3, [r1, fp]
   33004:	add	r3, r2, #2
   33008:	cmp	r7, r3
   3300c:	movhi	r1, #48	; 0x30
   33010:	ldrhi	r0, [sp, #36]	; 0x24
   33014:	strbhi	r1, [r0, r3]
   33018:	add	fp, r2, #3
   3301c:	ldr	r8, [sp, #32]
   33020:	mov	r4, #48	; 0x30
   33024:	b	33300 <__assert_fail@plt+0x22014>
   33028:	ldr	r3, [sp, #156]	; 0x9c
   3302c:	tst	r3, #1
   33030:	bne	333f4 <__assert_fail@plt+0x22108>
   33034:	ldr	r5, [sp, #48]	; 0x30
   33038:	mov	r8, r5
   3303c:	b	33300 <__assert_fail@plt+0x22014>
   33040:	cmp	sl, #2
   33044:	beq	3305c <__assert_fail@plt+0x21d70>
   33048:	cmp	sl, #5
   3304c:	beq	33074 <__assert_fail@plt+0x21d88>
   33050:	mov	r8, #0
   33054:	mov	r5, r8
   33058:	b	33300 <__assert_fail@plt+0x22014>
   3305c:	ldr	r3, [sp, #32]
   33060:	cmp	r3, #0
   33064:	bne	33ac4 <__assert_fail@plt+0x227d8>
   33068:	mov	r8, r3
   3306c:	mov	r5, r3
   33070:	b	33300 <__assert_fail@plt+0x22014>
   33074:	ldr	r3, [sp, #156]	; 0x9c
   33078:	tst	r3, #4
   3307c:	beq	3395c <__assert_fail@plt+0x22670>
   33080:	add	r3, r6, #2
   33084:	ldr	r2, [sp, #28]
   33088:	cmp	r2, r3
   3308c:	bls	33968 <__assert_fail@plt+0x2267c>
   33090:	ldr	r2, [sp, #52]	; 0x34
   33094:	add	r2, r2, r6
   33098:	ldrb	r2, [r2, #1]
   3309c:	cmp	r2, #63	; 0x3f
   330a0:	movne	r8, #0
   330a4:	movne	r5, r8
   330a8:	bne	33300 <__assert_fail@plt+0x22014>
   330ac:	ldr	r2, [sp, #52]	; 0x34
   330b0:	ldrb	r2, [r2, r3]
   330b4:	sub	r1, r2, #33	; 0x21
   330b8:	cmp	r1, #29
   330bc:	ldrls	pc, [pc, r1, lsl #2]
   330c0:	b	33974 <__assert_fail@plt+0x22688>
   330c4:	andeq	r3, r3, ip, lsr r1
   330c8:	andeq	r3, r3, r4, ror r9
   330cc:	andeq	r3, r3, r4, ror r9
   330d0:	andeq	r3, r3, r4, ror r9
   330d4:	andeq	r3, r3, r4, ror r9
   330d8:	andeq	r3, r3, r4, ror r9
   330dc:	andeq	r3, r3, ip, lsr r1
   330e0:	andeq	r3, r3, ip, lsr r1
   330e4:	andeq	r3, r3, ip, lsr r1
   330e8:	andeq	r3, r3, r4, ror r9
   330ec:	andeq	r3, r3, r4, ror r9
   330f0:	andeq	r3, r3, r4, ror r9
   330f4:	andeq	r3, r3, ip, lsr r1
   330f8:	andeq	r3, r3, r4, ror r9
   330fc:	andeq	r3, r3, ip, lsr r1
   33100:	andeq	r3, r3, r4, ror r9
   33104:	andeq	r3, r3, r4, ror r9
   33108:	andeq	r3, r3, r4, ror r9
   3310c:	andeq	r3, r3, r4, ror r9
   33110:	andeq	r3, r3, r4, ror r9
   33114:	andeq	r3, r3, r4, ror r9
   33118:	andeq	r3, r3, r4, ror r9
   3311c:	andeq	r3, r3, r4, ror r9
   33120:	andeq	r3, r3, r4, ror r9
   33124:	andeq	r3, r3, r4, ror r9
   33128:	andeq	r3, r3, r4, ror r9
   3312c:	andeq	r3, r3, r4, ror r9
   33130:	andeq	r3, r3, ip, lsr r1
   33134:	andeq	r3, r3, ip, lsr r1
   33138:	andeq	r3, r3, ip, lsr r1
   3313c:	ldr	r1, [sp, #32]
   33140:	cmp	r1, #0
   33144:	bne	33b84 <__assert_fail@plt+0x22898>
   33148:	cmp	r7, fp
   3314c:	movhi	r1, #63	; 0x3f
   33150:	ldrhi	r0, [sp, #36]	; 0x24
   33154:	strbhi	r1, [r0, fp]
   33158:	add	r1, fp, #1
   3315c:	cmp	r7, r1
   33160:	ldrhi	r0, [sp, #36]	; 0x24
   33164:	movhi	ip, #34	; 0x22
   33168:	strbhi	ip, [r0, r1]
   3316c:	add	r1, fp, #2
   33170:	cmp	r7, r1
   33174:	ldrhi	r0, [sp, #36]	; 0x24
   33178:	movhi	ip, #34	; 0x22
   3317c:	strbhi	ip, [r0, r1]
   33180:	add	r1, fp, #3
   33184:	cmp	r7, r1
   33188:	movhi	r0, #63	; 0x3f
   3318c:	ldrhi	ip, [sp, #36]	; 0x24
   33190:	strbhi	r0, [ip, r1]
   33194:	add	fp, fp, #4
   33198:	ldr	r5, [sp, #32]
   3319c:	mov	r8, r5
   331a0:	mov	r4, r2
   331a4:	mov	r6, r3
   331a8:	b	33300 <__assert_fail@plt+0x22014>
   331ac:	mov	r3, #102	; 0x66
   331b0:	b	33268 <__assert_fail@plt+0x21f7c>
   331b4:	mov	r3, #118	; 0x76
   331b8:	b	33268 <__assert_fail@plt+0x21f7c>
   331bc:	cmp	sl, #2
   331c0:	beq	3322c <__assert_fail@plt+0x21f40>
   331c4:	ldr	r3, [sp, #48]	; 0x30
   331c8:	ldr	r2, [sp, #32]
   331cc:	and	r3, r3, r2
   331d0:	tst	r9, r3
   331d4:	moveq	r3, r4
   331d8:	beq	33268 <__assert_fail@plt+0x21f7c>
   331dc:	mov	r8, #0
   331e0:	mov	r5, r8
   331e4:	eor	r5, r5, #1
   331e8:	ldr	r3, [sp, #44]	; 0x2c
   331ec:	and	r5, r5, r3
   331f0:	tst	r5, #255	; 0xff
   331f4:	beq	333d4 <__assert_fail@plt+0x220e8>
   331f8:	cmp	r7, fp
   331fc:	ldrhi	r3, [sp, #36]	; 0x24
   33200:	movhi	r2, #39	; 0x27
   33204:	strbhi	r2, [r3, fp]
   33208:	add	r3, fp, #1
   3320c:	cmp	r7, r3
   33210:	ldrhi	r2, [sp, #36]	; 0x24
   33214:	movhi	r1, #39	; 0x27
   33218:	strbhi	r1, [r2, r3]
   3321c:	add	fp, fp, #2
   33220:	mov	r3, #0
   33224:	str	r3, [sp, #44]	; 0x2c
   33228:	b	333d4 <__assert_fail@plt+0x220e8>
   3322c:	ldr	r3, [sp, #32]
   33230:	cmp	r3, #0
   33234:	bne	33ad0 <__assert_fail@plt+0x227e4>
   33238:	mov	r8, r3
   3323c:	mov	r5, r3
   33240:	b	331e4 <__assert_fail@plt+0x21ef8>
   33244:	mov	r3, #110	; 0x6e
   33248:	b	33250 <__assert_fail@plt+0x21f64>
   3324c:	mov	r3, #116	; 0x74
   33250:	ldr	r2, [sp, #32]
   33254:	cmp	sl, #2
   33258:	movne	r2, #0
   3325c:	andeq	r2, r2, #1
   33260:	cmp	r2, #0
   33264:	bne	33288 <__assert_fail@plt+0x21f9c>
   33268:	ldr	r2, [sp, #48]	; 0x30
   3326c:	cmp	r2, #0
   33270:	moveq	r8, r2
   33274:	moveq	r5, r2
   33278:	beq	33300 <__assert_fail@plt+0x22014>
   3327c:	mov	r4, r3
   33280:	mov	r8, #0
   33284:	b	33358 <__assert_fail@plt+0x2206c>
   33288:	mov	r8, sl
   3328c:	mov	sl, r7
   33290:	b	33afc <__assert_fail@plt+0x22810>
   33294:	mov	r3, #97	; 0x61
   33298:	b	33268 <__assert_fail@plt+0x21f7c>
   3329c:	ldr	r3, [sp, #28]
   332a0:	cmn	r3, #1
   332a4:	beq	332d0 <__assert_fail@plt+0x21fe4>
   332a8:	ldr	r3, [sp, #28]
   332ac:	subs	r3, r3, #1
   332b0:	movne	r3, #1
   332b4:	cmp	r3, #0
   332b8:	bne	33980 <__assert_fail@plt+0x22694>
   332bc:	cmp	r6, #0
   332c0:	beq	332e8 <__assert_fail@plt+0x21ffc>
   332c4:	mov	r8, #0
   332c8:	mov	r5, r8
   332cc:	b	33300 <__assert_fail@plt+0x22014>
   332d0:	ldr	r3, [sp, #52]	; 0x34
   332d4:	ldrb	r3, [r3, #1]
   332d8:	adds	r3, r3, #0
   332dc:	movne	r3, #1
   332e0:	b	332b4 <__assert_fail@plt+0x21fc8>
   332e4:	mov	r8, #0
   332e8:	ldr	r5, [sp, #32]
   332ec:	cmp	sl, #2
   332f0:	movne	r5, #0
   332f4:	andeq	r5, r5, #1
   332f8:	cmp	r5, #0
   332fc:	bne	334b0 <__assert_fail@plt+0x221c4>
   33300:	ldr	r3, [sp, #68]	; 0x44
   33304:	cmp	sl, #2
   33308:	orreq	r3, r3, #1
   3330c:	eor	r3, r3, #1
   33310:	ldr	r2, [sp, #32]
   33314:	orr	r3, r2, r3
   33318:	tst	r3, #255	; 0xff
   3331c:	beq	3334c <__assert_fail@plt+0x22060>
   33320:	ldr	r3, [sp, #160]	; 0xa0
   33324:	cmp	r3, #0
   33328:	beq	3334c <__assert_fail@plt+0x22060>
   3332c:	lsr	r2, r4, #5
   33330:	uxtb	r2, r2
   33334:	and	r3, r4, #31
   33338:	ldr	r1, [sp, #160]	; 0xa0
   3333c:	ldr	r2, [r1, r2, lsl #2]
   33340:	lsr	r3, r2, r3
   33344:	tst	r3, #1
   33348:	bne	33358 <__assert_fail@plt+0x2206c>
   3334c:	ldr	r3, [sp, #56]	; 0x38
   33350:	cmp	r3, #0
   33354:	beq	331e4 <__assert_fail@plt+0x21ef8>
   33358:	ldr	r3, [sp, #32]
   3335c:	cmp	r3, #0
   33360:	bne	33b6c <__assert_fail@plt+0x22880>
   33364:	ldr	r3, [sp, #44]	; 0x2c
   33368:	eor	r3, r3, #1
   3336c:	cmp	sl, #2
   33370:	movne	r3, #0
   33374:	andeq	r3, r3, #1
   33378:	cmp	r3, #0
   3337c:	beq	333c0 <__assert_fail@plt+0x220d4>
   33380:	cmp	r7, fp
   33384:	ldrhi	r2, [sp, #36]	; 0x24
   33388:	movhi	r1, #39	; 0x27
   3338c:	strbhi	r1, [r2, fp]
   33390:	add	r2, fp, #1
   33394:	cmp	r7, r2
   33398:	ldrhi	r1, [sp, #36]	; 0x24
   3339c:	movhi	r0, #36	; 0x24
   333a0:	strbhi	r0, [r1, r2]
   333a4:	add	r2, fp, #2
   333a8:	cmp	r7, r2
   333ac:	ldrhi	r1, [sp, #36]	; 0x24
   333b0:	movhi	r0, #39	; 0x27
   333b4:	strbhi	r0, [r1, r2]
   333b8:	add	fp, fp, #3
   333bc:	str	r3, [sp, #44]	; 0x2c
   333c0:	cmp	r7, fp
   333c4:	ldrhi	r3, [sp, #36]	; 0x24
   333c8:	movhi	r2, #92	; 0x5c
   333cc:	strbhi	r2, [r3, fp]
   333d0:	add	fp, fp, #1
   333d4:	cmp	fp, r7
   333d8:	ldrcc	r3, [sp, #36]	; 0x24
   333dc:	strbcc	r4, [r3, fp]
   333e0:	add	fp, fp, #1
   333e4:	ldr	r3, [sp, #40]	; 0x28
   333e8:	cmp	r8, #0
   333ec:	moveq	r3, #0
   333f0:	str	r3, [sp, #40]	; 0x28
   333f4:	add	r6, r6, #1
   333f8:	ldr	r3, [sp, #28]
   333fc:	cmn	r3, #1
   33400:	beq	3398c <__assert_fail@plt+0x226a0>
   33404:	ldr	r3, [sp, #28]
   33408:	subs	r8, r3, r6
   3340c:	movne	r8, #1
   33410:	cmp	r8, #0
   33414:	beq	339a0 <__assert_fail@plt+0x226b4>
   33418:	ldr	r5, [sp, #48]	; 0x30
   3341c:	cmp	sl, #2
   33420:	moveq	r5, #0
   33424:	andne	r5, r5, #1
   33428:	ldr	r3, [sp, #60]	; 0x3c
   3342c:	adds	r9, r3, #0
   33430:	movne	r9, #1
   33434:	ands	r2, r5, r9
   33438:	str	r2, [sp, #56]	; 0x38
   3343c:	beq	32d04 <__assert_fail@plt+0x21a18>
   33440:	add	r4, r6, r3
   33444:	ldr	r2, [sp, #28]
   33448:	cmp	r3, #1
   3344c:	movls	r3, #0
   33450:	movhi	r3, #1
   33454:	cmn	r2, #1
   33458:	movne	r3, #0
   3345c:	cmp	r3, #0
   33460:	beq	33470 <__assert_fail@plt+0x22184>
   33464:	ldr	r0, [sp, #52]	; 0x34
   33468:	bl	111a8 <strlen@plt>
   3346c:	str	r0, [sp, #28]
   33470:	ldr	r3, [sp, #28]
   33474:	cmp	r3, r4
   33478:	bcc	32cfc <__assert_fail@plt+0x21a10>
   3347c:	ldr	r2, [sp, #60]	; 0x3c
   33480:	ldr	r1, [sp, #72]	; 0x48
   33484:	ldr	r3, [sp, #52]	; 0x34
   33488:	add	r0, r3, r6
   3348c:	bl	11088 <memcmp@plt>
   33490:	cmp	r0, #0
   33494:	bne	32f1c <__assert_fail@plt+0x21c30>
   33498:	ldr	r3, [sp, #32]
   3349c:	cmp	r3, #0
   334a0:	beq	32d04 <__assert_fail@plt+0x21a18>
   334a4:	mov	r8, sl
   334a8:	mov	sl, r7
   334ac:	b	33afc <__assert_fail@plt+0x22810>
   334b0:	mov	r8, sl
   334b4:	mov	sl, r7
   334b8:	b	33afc <__assert_fail@plt+0x22810>
   334bc:	cmp	sl, #2
   334c0:	strne	r8, [sp, #80]	; 0x50
   334c4:	movne	r5, #0
   334c8:	bne	33300 <__assert_fail@plt+0x22014>
   334cc:	ldr	r3, [sp, #32]
   334d0:	cmp	r3, #0
   334d4:	bne	33ae8 <__assert_fail@plt+0x227fc>
   334d8:	ldr	r2, [sp, #76]	; 0x4c
   334dc:	adds	r3, r7, #0
   334e0:	movne	r3, #1
   334e4:	cmp	r2, #0
   334e8:	movne	r3, #0
   334ec:	cmp	r3, #0
   334f0:	movne	r3, #0
   334f4:	bne	33524 <__assert_fail@plt+0x22238>
   334f8:	cmp	r7, fp
   334fc:	ldrhi	r3, [sp, #36]	; 0x24
   33500:	movhi	r2, #39	; 0x27
   33504:	strbhi	r2, [r3, fp]
   33508:	add	r3, fp, #1
   3350c:	cmp	r7, r3
   33510:	ldrhi	r2, [sp, #36]	; 0x24
   33514:	movhi	r1, #92	; 0x5c
   33518:	strbhi	r1, [r2, r3]
   3351c:	mov	r3, r7
   33520:	ldr	r7, [sp, #76]	; 0x4c
   33524:	add	r2, fp, #2
   33528:	cmp	r2, r3
   3352c:	ldrcc	r1, [sp, #36]	; 0x24
   33530:	movcc	r0, #39	; 0x27
   33534:	strbcc	r0, [r1, r2]
   33538:	add	fp, fp, #3
   3353c:	ldr	r2, [sp, #32]
   33540:	mov	r5, r2
   33544:	str	r8, [sp, #80]	; 0x50
   33548:	str	r2, [sp, #44]	; 0x2c
   3354c:	str	r7, [sp, #76]	; 0x4c
   33550:	mov	r7, r3
   33554:	b	33300 <__assert_fail@plt+0x22014>
   33558:	ldr	r5, [sp, #84]	; 0x54
   3355c:	cmp	r5, #1
   33560:	beq	33590 <__assert_fail@plt+0x222a4>
   33564:	mov	r3, #0
   33568:	str	r3, [sp, #104]	; 0x68
   3356c:	str	r3, [sp, #108]	; 0x6c
   33570:	ldr	r3, [sp, #28]
   33574:	cmn	r3, #1
   33578:	beq	335c4 <__assert_fail@plt+0x222d8>
   3357c:	mov	r3, #0
   33580:	str	r4, [sp, #88]	; 0x58
   33584:	str	fp, [sp, #92]	; 0x5c
   33588:	mov	fp, r3
   3358c:	b	336ec <__assert_fail@plt+0x22400>
   33590:	bl	11184 <__ctype_b_loc@plt>
   33594:	ldr	r2, [r0]
   33598:	lsl	r3, r4, #1
   3359c:	ldrh	r8, [r2, r3]
   335a0:	lsr	r8, r8, #14
   335a4:	and	r8, r8, #1
   335a8:	mov	r2, r5
   335ac:	eor	r5, r8, #1
   335b0:	ldr	r3, [sp, #48]	; 0x30
   335b4:	and	r5, r5, r3
   335b8:	ands	r5, r5, #255	; 0xff
   335bc:	beq	33300 <__assert_fail@plt+0x22014>
   335c0:	b	33784 <__assert_fail@plt+0x22498>
   335c4:	ldr	r0, [sp, #52]	; 0x34
   335c8:	bl	111a8 <strlen@plt>
   335cc:	str	r0, [sp, #28]
   335d0:	b	3357c <__assert_fail@plt+0x22290>
   335d4:	mov	r2, fp
   335d8:	mov	r1, r4
   335dc:	ldr	r4, [sp, #88]	; 0x58
   335e0:	ldr	fp, [sp, #92]	; 0x5c
   335e4:	ldr	r0, [sp, #28]
   335e8:	cmp	r0, r5
   335ec:	bls	337b8 <__assert_fail@plt+0x224cc>
   335f0:	ldrb	r3, [r1]
   335f4:	cmp	r3, #0
   335f8:	beq	337c0 <__assert_fail@plt+0x224d4>
   335fc:	mov	r3, r1
   33600:	add	r2, r2, #1
   33604:	add	r1, r6, r2
   33608:	cmp	r0, r1
   3360c:	bls	337c8 <__assert_fail@plt+0x224dc>
   33610:	ldrb	r1, [r3, #1]!
   33614:	cmp	r1, #0
   33618:	bne	33600 <__assert_fail@plt+0x22314>
   3361c:	mov	r8, #0
   33620:	b	3377c <__assert_fail@plt+0x22490>
   33624:	cmp	r4, r5
   33628:	beq	336c8 <__assert_fail@plt+0x223dc>
   3362c:	ldrb	r3, [r4, #1]!
   33630:	sub	r3, r3, #91	; 0x5b
   33634:	cmp	r3, #33	; 0x21
   33638:	ldrls	pc, [pc, r3, lsl #2]
   3363c:	b	33624 <__assert_fail@plt+0x22338>
   33640:	strdeq	r3, [r3], -r4
   33644:	strdeq	r3, [r3], -r4
   33648:	andeq	r3, r3, r4, lsr #12
   3364c:	strdeq	r3, [r3], -r4
   33650:	andeq	r3, r3, r4, lsr #12
   33654:	strdeq	r3, [r3], -r4
   33658:	andeq	r3, r3, r4, lsr #12
   3365c:	andeq	r3, r3, r4, lsr #12
   33660:	andeq	r3, r3, r4, lsr #12
   33664:	andeq	r3, r3, r4, lsr #12
   33668:	andeq	r3, r3, r4, lsr #12
   3366c:	andeq	r3, r3, r4, lsr #12
   33670:	andeq	r3, r3, r4, lsr #12
   33674:	andeq	r3, r3, r4, lsr #12
   33678:	andeq	r3, r3, r4, lsr #12
   3367c:	andeq	r3, r3, r4, lsr #12
   33680:	andeq	r3, r3, r4, lsr #12
   33684:	andeq	r3, r3, r4, lsr #12
   33688:	andeq	r3, r3, r4, lsr #12
   3368c:	andeq	r3, r3, r4, lsr #12
   33690:	andeq	r3, r3, r4, lsr #12
   33694:	andeq	r3, r3, r4, lsr #12
   33698:	andeq	r3, r3, r4, lsr #12
   3369c:	andeq	r3, r3, r4, lsr #12
   336a0:	andeq	r3, r3, r4, lsr #12
   336a4:	andeq	r3, r3, r4, lsr #12
   336a8:	andeq	r3, r3, r4, lsr #12
   336ac:	andeq	r3, r3, r4, lsr #12
   336b0:	andeq	r3, r3, r4, lsr #12
   336b4:	andeq	r3, r3, r4, lsr #12
   336b8:	andeq	r3, r3, r4, lsr #12
   336bc:	andeq	r3, r3, r4, lsr #12
   336c0:	andeq	r3, r3, r4, lsr #12
   336c4:	strdeq	r3, [r3], -r4
   336c8:	ldr	r0, [sp, #100]	; 0x64
   336cc:	bl	110c4 <iswprint@plt>
   336d0:	cmp	r0, #0
   336d4:	moveq	r8, #0
   336d8:	add	fp, fp, r9
   336dc:	add	r0, sp, #104	; 0x68
   336e0:	bl	11070 <mbsinit@plt>
   336e4:	cmp	r0, #0
   336e8:	bne	3375c <__assert_fail@plt+0x22470>
   336ec:	add	r5, r6, fp
   336f0:	ldr	r3, [sp, #52]	; 0x34
   336f4:	add	r4, r3, r5
   336f8:	add	r3, sp, #104	; 0x68
   336fc:	ldr	r2, [sp, #28]
   33700:	sub	r2, r2, r5
   33704:	mov	r1, r4
   33708:	add	r0, sp, #100	; 0x64
   3370c:	bl	359b0 <__assert_fail@plt+0x246c4>
   33710:	subs	r9, r0, #0
   33714:	beq	337d0 <__assert_fail@plt+0x224e4>
   33718:	cmn	r9, #1
   3371c:	beq	3376c <__assert_fail@plt+0x22480>
   33720:	cmn	r9, #2
   33724:	beq	335d4 <__assert_fail@plt+0x222e8>
   33728:	ldr	r3, [sp, #32]
   3372c:	cmp	sl, #2
   33730:	movne	r3, #0
   33734:	andeq	r3, r3, #1
   33738:	cmp	r3, #0
   3373c:	beq	336c8 <__assert_fail@plt+0x223dc>
   33740:	cmp	r9, #1
   33744:	bls	336c8 <__assert_fail@plt+0x223dc>
   33748:	sub	r3, r9, #1
   3374c:	add	r5, r3, r5
   33750:	ldr	r3, [sp, #52]	; 0x34
   33754:	add	r5, r3, r5
   33758:	b	3362c <__assert_fail@plt+0x22340>
   3375c:	ldr	r4, [sp, #88]	; 0x58
   33760:	mov	r2, fp
   33764:	ldr	fp, [sp, #92]	; 0x5c
   33768:	b	3377c <__assert_fail@plt+0x22490>
   3376c:	ldr	r4, [sp, #88]	; 0x58
   33770:	mov	r2, fp
   33774:	ldr	fp, [sp, #92]	; 0x5c
   33778:	mov	r8, #0
   3377c:	cmp	r2, #1
   33780:	bls	335ac <__assert_fail@plt+0x222c0>
   33784:	add	r1, r6, r2
   33788:	ldr	ip, [sp, #64]	; 0x40
   3378c:	mov	r5, #0
   33790:	eor	r3, r8, #1
   33794:	ldr	r2, [sp, #48]	; 0x30
   33798:	and	r3, r3, r2
   3379c:	uxtb	r3, r3
   337a0:	ldr	r9, [sp, #32]
   337a4:	ldr	lr, [sp, #44]	; 0x2c
   337a8:	ldr	r2, [sp, #56]	; 0x38
   337ac:	str	r8, [sp, #56]	; 0x38
   337b0:	ldr	r0, [sp, #36]	; 0x24
   337b4:	b	33850 <__assert_fail@plt+0x22564>
   337b8:	mov	r8, #0
   337bc:	b	3377c <__assert_fail@plt+0x22490>
   337c0:	mov	r8, #0
   337c4:	b	3377c <__assert_fail@plt+0x22490>
   337c8:	mov	r8, #0
   337cc:	b	3377c <__assert_fail@plt+0x22490>
   337d0:	ldr	r4, [sp, #88]	; 0x58
   337d4:	mov	r2, fp
   337d8:	ldr	fp, [sp, #92]	; 0x5c
   337dc:	b	3377c <__assert_fail@plt+0x22490>
   337e0:	cmp	r2, #0
   337e4:	beq	337f8 <__assert_fail@plt+0x2250c>
   337e8:	cmp	r7, fp
   337ec:	movhi	r2, #92	; 0x5c
   337f0:	strbhi	r2, [r0, fp]
   337f4:	add	fp, fp, #1
   337f8:	add	r8, r6, #1
   337fc:	cmp	r1, r8
   33800:	bls	33908 <__assert_fail@plt+0x2261c>
   33804:	eor	r2, r5, #1
   33808:	and	r2, r2, lr
   3380c:	ands	r2, r2, #255	; 0xff
   33810:	beq	33924 <__assert_fail@plt+0x22638>
   33814:	cmp	r7, fp
   33818:	movhi	r2, #39	; 0x27
   3381c:	strbhi	r2, [r0, fp]
   33820:	add	r2, fp, #1
   33824:	cmp	r7, r2
   33828:	movhi	lr, #39	; 0x27
   3382c:	strbhi	lr, [r0, r2]
   33830:	add	fp, fp, #2
   33834:	mov	r6, r8
   33838:	mov	r2, r3
   3383c:	mov	lr, r3
   33840:	cmp	r7, fp
   33844:	strbhi	r4, [r0, fp]
   33848:	add	fp, fp, #1
   3384c:	ldrb	r4, [ip, #1]!
   33850:	cmp	r3, #0
   33854:	beq	337e0 <__assert_fail@plt+0x224f4>
   33858:	cmp	r9, #0
   3385c:	bne	33b60 <__assert_fail@plt+0x22874>
   33860:	eor	r5, lr, #1
   33864:	cmp	sl, #2
   33868:	movne	r5, #0
   3386c:	andeq	r5, r5, #1
   33870:	cmp	r5, #0
   33874:	beq	338ac <__assert_fail@plt+0x225c0>
   33878:	cmp	r7, fp
   3387c:	movhi	lr, #39	; 0x27
   33880:	strbhi	lr, [r0, fp]
   33884:	add	lr, fp, #1
   33888:	cmp	r7, lr
   3388c:	movhi	r8, #36	; 0x24
   33890:	strbhi	r8, [r0, lr]
   33894:	add	lr, fp, #2
   33898:	cmp	r7, lr
   3389c:	movhi	r8, #39	; 0x27
   338a0:	strbhi	r8, [r0, lr]
   338a4:	add	fp, fp, #3
   338a8:	mov	lr, r5
   338ac:	cmp	r7, fp
   338b0:	movhi	r5, #92	; 0x5c
   338b4:	strbhi	r5, [r0, fp]
   338b8:	add	r5, fp, #1
   338bc:	cmp	r7, r5
   338c0:	lsrhi	r8, r4, #6
   338c4:	addhi	r8, r8, #48	; 0x30
   338c8:	strbhi	r8, [r0, r5]
   338cc:	add	r8, fp, #2
   338d0:	cmp	r7, r8
   338d4:	lsrhi	r5, r4, #3
   338d8:	andhi	r5, r5, #7
   338dc:	addhi	r5, r5, #48	; 0x30
   338e0:	strbhi	r5, [r0, r8]
   338e4:	add	fp, fp, #3
   338e8:	and	r4, r4, #7
   338ec:	add	r4, r4, #48	; 0x30
   338f0:	add	r5, r6, #1
   338f4:	cmp	r1, r5
   338f8:	bls	33914 <__assert_fail@plt+0x22628>
   338fc:	mov	r6, r5
   33900:	mov	r5, r3
   33904:	b	33840 <__assert_fail@plt+0x22554>
   33908:	str	lr, [sp, #44]	; 0x2c
   3390c:	ldr	r8, [sp, #56]	; 0x38
   33910:	b	331e4 <__assert_fail@plt+0x21ef8>
   33914:	str	lr, [sp, #44]	; 0x2c
   33918:	ldr	r8, [sp, #56]	; 0x38
   3391c:	mov	r5, r3
   33920:	b	331e4 <__assert_fail@plt+0x21ef8>
   33924:	mov	r6, r8
   33928:	b	33840 <__assert_fail@plt+0x22554>
   3392c:	mov	r5, #0
   33930:	b	33300 <__assert_fail@plt+0x22014>
   33934:	mov	r8, r5
   33938:	ldr	r5, [sp, #48]	; 0x30
   3393c:	mov	r4, #48	; 0x30
   33940:	b	33300 <__assert_fail@plt+0x22014>
   33944:	ldr	r8, [sp, #32]
   33948:	mov	r4, #48	; 0x30
   3394c:	b	33300 <__assert_fail@plt+0x22014>
   33950:	ldr	r8, [sp, #32]
   33954:	mov	r4, #48	; 0x30
   33958:	b	33300 <__assert_fail@plt+0x22014>
   3395c:	mov	r8, #0
   33960:	mov	r5, r8
   33964:	b	33300 <__assert_fail@plt+0x22014>
   33968:	mov	r8, #0
   3396c:	mov	r5, r8
   33970:	b	33300 <__assert_fail@plt+0x22014>
   33974:	mov	r8, #0
   33978:	mov	r5, r8
   3397c:	b	33300 <__assert_fail@plt+0x22014>
   33980:	mov	r8, #0
   33984:	mov	r5, r8
   33988:	b	33300 <__assert_fail@plt+0x22014>
   3398c:	ldr	r3, [sp, #52]	; 0x34
   33990:	ldrb	r8, [r3, r6]
   33994:	adds	r8, r8, #0
   33998:	movne	r8, #1
   3399c:	b	33410 <__assert_fail@plt+0x22124>
   339a0:	cmp	sl, #2
   339a4:	movne	r3, #0
   339a8:	moveq	r3, #1
   339ac:	ldr	r1, [sp, #32]
   339b0:	mov	r2, r1
   339b4:	and	r2, r2, r3
   339b8:	cmp	fp, #0
   339bc:	movne	r2, #0
   339c0:	andeq	r2, r2, #1
   339c4:	cmp	r2, #0
   339c8:	bne	33b78 <__assert_fail@plt+0x2288c>
   339cc:	eor	r2, r1, #1
   339d0:	and	r3, r3, r2
   339d4:	ldr	r1, [sp, #80]	; 0x50
   339d8:	tst	r1, r3
   339dc:	beq	33a54 <__assert_fail@plt+0x22768>
   339e0:	ldr	r3, [sp, #40]	; 0x28
   339e4:	cmp	r3, #0
   339e8:	bne	33a10 <__assert_fail@plt+0x22724>
   339ec:	ldr	r1, [sp, #76]	; 0x4c
   339f0:	clz	r3, r7
   339f4:	lsr	r3, r3, #5
   339f8:	cmp	r1, #0
   339fc:	moveq	r3, #0
   33a00:	cmp	r3, #0
   33a04:	beq	33a54 <__assert_fail@plt+0x22768>
   33a08:	ldr	r7, [sp, #76]	; 0x4c
   33a0c:	b	32aa4 <__assert_fail@plt+0x217b8>
   33a10:	ldr	r3, [sp, #168]	; 0xa8
   33a14:	str	r3, [sp, #16]
   33a18:	ldr	r3, [sp, #164]	; 0xa4
   33a1c:	str	r3, [sp, #12]
   33a20:	ldr	r3, [sp, #160]	; 0xa0
   33a24:	str	r3, [sp, #8]
   33a28:	ldr	r3, [sp, #156]	; 0x9c
   33a2c:	str	r3, [sp, #4]
   33a30:	mov	r3, #5
   33a34:	str	r3, [sp]
   33a38:	ldr	r3, [sp, #28]
   33a3c:	ldr	r2, [sp, #52]	; 0x34
   33a40:	ldr	r1, [sp, #76]	; 0x4c
   33a44:	ldr	r0, [sp, #36]	; 0x24
   33a48:	bl	32a44 <__assert_fail@plt+0x21758>
   33a4c:	mov	fp, r0
   33a50:	b	33b54 <__assert_fail@plt+0x22868>
   33a54:	mov	sl, r7
   33a58:	ldr	r3, [sp, #72]	; 0x48
   33a5c:	cmp	r3, #0
   33a60:	moveq	r2, #0
   33a64:	andne	r2, r2, #1
   33a68:	cmp	r2, #0
   33a6c:	beq	33a9c <__assert_fail@plt+0x227b0>
   33a70:	mov	r2, r3
   33a74:	ldrb	r3, [r3]
   33a78:	cmp	r3, #0
   33a7c:	beq	33a9c <__assert_fail@plt+0x227b0>
   33a80:	ldr	r1, [sp, #36]	; 0x24
   33a84:	cmp	sl, fp
   33a88:	strbhi	r3, [r1, fp]
   33a8c:	add	fp, fp, #1
   33a90:	ldrb	r3, [r2, #1]!
   33a94:	cmp	r3, #0
   33a98:	bne	33a84 <__assert_fail@plt+0x22798>
   33a9c:	cmp	sl, fp
   33aa0:	movhi	r3, #0
   33aa4:	ldrhi	r2, [sp, #36]	; 0x24
   33aa8:	strbhi	r3, [r2, fp]
   33aac:	b	33b54 <__assert_fail@plt+0x22868>
   33ab0:	mov	r8, sl
   33ab4:	mov	sl, r7
   33ab8:	ldr	r3, [sp, #32]
   33abc:	str	r3, [sp, #48]	; 0x30
   33ac0:	b	33afc <__assert_fail@plt+0x22810>
   33ac4:	mov	r8, sl
   33ac8:	mov	sl, r7
   33acc:	b	33afc <__assert_fail@plt+0x22810>
   33ad0:	mov	r8, sl
   33ad4:	mov	sl, r7
   33ad8:	b	33afc <__assert_fail@plt+0x22810>
   33adc:	ldrdeq	r9, [r3], -r0
   33ae0:	andeq	r9, r3, r0, ror #21
   33ae4:	ldrdeq	r9, [r3], -r4
   33ae8:	mov	r8, sl
   33aec:	mov	sl, r7
   33af0:	b	33afc <__assert_fail@plt+0x22810>
   33af4:	mov	r8, sl
   33af8:	mov	sl, r7
   33afc:	ldr	r3, [sp, #48]	; 0x30
   33b00:	cmp	r8, #2
   33b04:	movne	r3, #0
   33b08:	andeq	r3, r3, #1
   33b0c:	cmp	r3, #0
   33b10:	movne	r8, #4
   33b14:	ldr	r3, [sp, #168]	; 0xa8
   33b18:	str	r3, [sp, #16]
   33b1c:	ldr	r3, [sp, #164]	; 0xa4
   33b20:	str	r3, [sp, #12]
   33b24:	mov	r3, #0
   33b28:	str	r3, [sp, #8]
   33b2c:	ldr	r3, [sp, #156]	; 0x9c
   33b30:	bic	r3, r3, #2
   33b34:	str	r3, [sp, #4]
   33b38:	str	r8, [sp]
   33b3c:	ldr	r3, [sp, #28]
   33b40:	ldr	r2, [sp, #52]	; 0x34
   33b44:	mov	r1, sl
   33b48:	ldr	r0, [sp, #36]	; 0x24
   33b4c:	bl	32a44 <__assert_fail@plt+0x21758>
   33b50:	mov	fp, r0
   33b54:	mov	r0, fp
   33b58:	add	sp, sp, #116	; 0x74
   33b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33b60:	mov	r8, sl
   33b64:	mov	sl, r7
   33b68:	b	33afc <__assert_fail@plt+0x22810>
   33b6c:	mov	r8, sl
   33b70:	mov	sl, r7
   33b74:	b	33afc <__assert_fail@plt+0x22810>
   33b78:	mov	r8, sl
   33b7c:	mov	sl, r7
   33b80:	b	33afc <__assert_fail@plt+0x22810>
   33b84:	mov	r8, sl
   33b88:	mov	sl, r7
   33b8c:	b	33b14 <__assert_fail@plt+0x22828>
   33b90:	mov	r3, #1
   33b94:	str	r3, [sp, #32]
   33b98:	str	r3, [sp, #48]	; 0x30
   33b9c:	str	r3, [sp, #60]	; 0x3c
   33ba0:	ldr	r3, [pc, #-196]	; 33ae4 <__assert_fail@plt+0x227f8>
   33ba4:	str	r3, [sp, #72]	; 0x48
   33ba8:	mov	fp, #0
   33bac:	mov	sl, #5
   33bb0:	b	32b00 <__assert_fail@plt+0x21814>
   33bb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33bb8:	sub	sp, sp, #52	; 0x34
   33bbc:	mov	r5, r0
   33bc0:	str	r1, [sp, #24]
   33bc4:	str	r2, [sp, #28]
   33bc8:	mov	r4, r3
   33bcc:	bl	111c0 <__errno_location@plt>
   33bd0:	str	r0, [sp, #32]
   33bd4:	ldr	r3, [r0]
   33bd8:	str	r3, [sp, #36]	; 0x24
   33bdc:	ldr	r3, [pc, #396]	; 33d70 <__assert_fail@plt+0x22a84>
   33be0:	ldr	r6, [r3]
   33be4:	cmn	r5, #-2147483647	; 0x80000001
   33be8:	movne	r3, #0
   33bec:	moveq	r3, #1
   33bf0:	orrs	r3, r3, r5, lsr #31
   33bf4:	bne	33d34 <__assert_fail@plt+0x22a48>
   33bf8:	ldr	r3, [pc, #368]	; 33d70 <__assert_fail@plt+0x22a84>
   33bfc:	ldr	r2, [r3, #4]
   33c00:	cmp	r5, r2
   33c04:	blt	33c6c <__assert_fail@plt+0x22980>
   33c08:	str	r2, [sp, #44]	; 0x2c
   33c0c:	add	r3, r3, #8
   33c10:	cmp	r6, r3
   33c14:	beq	33d38 <__assert_fail@plt+0x22a4c>
   33c18:	sub	r2, r5, r2
   33c1c:	mov	r3, #8
   33c20:	str	r3, [sp]
   33c24:	mvn	r3, #-2147483648	; 0x80000000
   33c28:	add	r2, r2, #1
   33c2c:	add	r1, sp, #44	; 0x2c
   33c30:	mov	r0, r6
   33c34:	bl	34acc <__assert_fail@plt+0x237e0>
   33c38:	mov	r6, r0
   33c3c:	ldr	r3, [pc, #300]	; 33d70 <__assert_fail@plt+0x22a84>
   33c40:	str	r0, [r3]
   33c44:	ldr	r7, [pc, #292]	; 33d70 <__assert_fail@plt+0x22a84>
   33c48:	ldr	r0, [r7, #4]
   33c4c:	ldr	r2, [sp, #44]	; 0x2c
   33c50:	sub	r2, r2, r0
   33c54:	lsl	r2, r2, #3
   33c58:	mov	r1, #0
   33c5c:	add	r0, r6, r0, lsl #3
   33c60:	bl	111f0 <memset@plt>
   33c64:	ldr	r3, [sp, #44]	; 0x2c
   33c68:	str	r3, [r7, #4]
   33c6c:	add	fp, r6, r5, lsl #3
   33c70:	ldr	r8, [r6, r5, lsl #3]
   33c74:	ldr	r7, [fp, #4]
   33c78:	ldr	r9, [r4, #4]
   33c7c:	orr	r9, r9, #1
   33c80:	add	sl, r4, #8
   33c84:	ldr	r3, [r4, #44]	; 0x2c
   33c88:	str	r3, [sp, #16]
   33c8c:	ldr	r3, [r4, #40]	; 0x28
   33c90:	str	r3, [sp, #12]
   33c94:	str	sl, [sp, #8]
   33c98:	str	r9, [sp, #4]
   33c9c:	ldr	r3, [r4]
   33ca0:	str	r3, [sp]
   33ca4:	ldr	r3, [sp, #28]
   33ca8:	ldr	r2, [sp, #24]
   33cac:	mov	r1, r8
   33cb0:	mov	r0, r7
   33cb4:	bl	32a44 <__assert_fail@plt+0x21758>
   33cb8:	cmp	r8, r0
   33cbc:	bhi	33d1c <__assert_fail@plt+0x22a30>
   33cc0:	add	r8, r0, #1
   33cc4:	str	r8, [r6, r5, lsl #3]
   33cc8:	ldr	r3, [pc, #164]	; 33d74 <__assert_fail@plt+0x22a88>
   33ccc:	cmp	r7, r3
   33cd0:	beq	33cdc <__assert_fail@plt+0x229f0>
   33cd4:	mov	r0, r7
   33cd8:	bl	31c0c <__assert_fail@plt+0x20920>
   33cdc:	mov	r0, r8
   33ce0:	bl	34948 <__assert_fail@plt+0x2365c>
   33ce4:	mov	r7, r0
   33ce8:	str	r0, [fp, #4]
   33cec:	ldr	r3, [r4, #44]	; 0x2c
   33cf0:	str	r3, [sp, #16]
   33cf4:	ldr	r3, [r4, #40]	; 0x28
   33cf8:	str	r3, [sp, #12]
   33cfc:	str	sl, [sp, #8]
   33d00:	str	r9, [sp, #4]
   33d04:	ldr	r3, [r4]
   33d08:	str	r3, [sp]
   33d0c:	ldr	r3, [sp, #28]
   33d10:	ldr	r2, [sp, #24]
   33d14:	mov	r1, r8
   33d18:	bl	32a44 <__assert_fail@plt+0x21758>
   33d1c:	ldr	r3, [sp, #32]
   33d20:	ldr	r2, [sp, #36]	; 0x24
   33d24:	str	r2, [r3]
   33d28:	mov	r0, r7
   33d2c:	add	sp, sp, #52	; 0x34
   33d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33d34:	bl	112c8 <abort@plt>
   33d38:	sub	r2, r5, r2
   33d3c:	mov	r3, #8
   33d40:	str	r3, [sp]
   33d44:	mvn	r3, #-2147483648	; 0x80000000
   33d48:	add	r2, r2, #1
   33d4c:	add	r1, sp, #44	; 0x2c
   33d50:	mov	r0, #0
   33d54:	bl	34acc <__assert_fail@plt+0x237e0>
   33d58:	mov	r6, r0
   33d5c:	ldr	r3, [pc, #12]	; 33d70 <__assert_fail@plt+0x22a84>
   33d60:	str	r0, [r3], #8
   33d64:	ldm	r3, {r0, r1}
   33d68:	stm	r6, {r0, r1}
   33d6c:	b	33c44 <__assert_fail@plt+0x22958>
   33d70:	andeq	sl, r4, r4, asr #2
   33d74:	ldrdeq	sl, [r4], -ip
   33d78:	push	{r4, r5, r6, lr}
   33d7c:	mov	r4, r0
   33d80:	bl	111c0 <__errno_location@plt>
   33d84:	mov	r5, r0
   33d88:	ldr	r6, [r0]
   33d8c:	cmp	r4, #0
   33d90:	ldr	r3, [pc, #20]	; 33dac <__assert_fail@plt+0x22ac0>
   33d94:	moveq	r4, r3
   33d98:	mov	r1, #48	; 0x30
   33d9c:	mov	r0, r4
   33da0:	bl	34e34 <__assert_fail@plt+0x23b48>
   33da4:	str	r6, [r5]
   33da8:	pop	{r4, r5, r6, pc}
   33dac:	ldrdeq	sl, [r4], -ip
   33db0:	subs	r3, r0, #0
   33db4:	ldr	r2, [pc, #8]	; 33dc4 <__assert_fail@plt+0x22ad8>
   33db8:	moveq	r3, r2
   33dbc:	ldr	r0, [r3]
   33dc0:	bx	lr
   33dc4:	ldrdeq	sl, [r4], -ip
   33dc8:	subs	r3, r0, #0
   33dcc:	ldr	r2, [pc, #8]	; 33ddc <__assert_fail@plt+0x22af0>
   33dd0:	moveq	r3, r2
   33dd4:	str	r1, [r3]
   33dd8:	bx	lr
   33ddc:	ldrdeq	sl, [r4], -ip
   33de0:	push	{lr}		; (str lr, [sp, #-4]!)
   33de4:	subs	r3, r0, #0
   33de8:	ldr	r0, [pc, #44]	; 33e1c <__assert_fail@plt+0x22b30>
   33dec:	moveq	r3, r0
   33df0:	add	r3, r3, #8
   33df4:	lsr	lr, r1, #5
   33df8:	and	r1, r1, #31
   33dfc:	ldr	ip, [r3, lr, lsl #2]
   33e00:	lsr	r0, ip, r1
   33e04:	eor	r2, r2, r0
   33e08:	and	r2, r2, #1
   33e0c:	eor	r1, ip, r2, lsl r1
   33e10:	str	r1, [r3, lr, lsl #2]
   33e14:	and	r0, r0, #1
   33e18:	pop	{pc}		; (ldr pc, [sp], #4)
   33e1c:	ldrdeq	sl, [r4], -ip
   33e20:	subs	r3, r0, #0
   33e24:	ldr	r2, [pc, #12]	; 33e38 <__assert_fail@plt+0x22b4c>
   33e28:	moveq	r3, r2
   33e2c:	ldr	r0, [r3, #4]
   33e30:	str	r1, [r3, #4]
   33e34:	bx	lr
   33e38:	ldrdeq	sl, [r4], -ip
   33e3c:	subs	r3, r0, #0
   33e40:	ldr	r0, [pc, #40]	; 33e70 <__assert_fail@plt+0x22b84>
   33e44:	moveq	r3, r0
   33e48:	mov	r0, #10
   33e4c:	str	r0, [r3]
   33e50:	cmp	r2, #0
   33e54:	cmpne	r1, #0
   33e58:	beq	33e68 <__assert_fail@plt+0x22b7c>
   33e5c:	str	r1, [r3, #40]	; 0x28
   33e60:	str	r2, [r3, #44]	; 0x2c
   33e64:	bx	lr
   33e68:	push	{r4, lr}
   33e6c:	bl	112c8 <abort@plt>
   33e70:	ldrdeq	sl, [r4], -ip
   33e74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33e78:	sub	sp, sp, #24
   33e7c:	mov	r7, r0
   33e80:	mov	r8, r1
   33e84:	mov	r9, r2
   33e88:	mov	sl, r3
   33e8c:	ldr	r4, [sp, #56]	; 0x38
   33e90:	cmp	r4, #0
   33e94:	ldr	r3, [pc, #84]	; 33ef0 <__assert_fail@plt+0x22c04>
   33e98:	moveq	r4, r3
   33e9c:	bl	111c0 <__errno_location@plt>
   33ea0:	mov	r5, r0
   33ea4:	ldr	r6, [r0]
   33ea8:	ldr	r3, [r4, #44]	; 0x2c
   33eac:	str	r3, [sp, #16]
   33eb0:	ldr	r3, [r4, #40]	; 0x28
   33eb4:	str	r3, [sp, #12]
   33eb8:	add	r3, r4, #8
   33ebc:	str	r3, [sp, #8]
   33ec0:	ldr	r3, [r4, #4]
   33ec4:	str	r3, [sp, #4]
   33ec8:	ldr	r3, [r4]
   33ecc:	str	r3, [sp]
   33ed0:	mov	r3, sl
   33ed4:	mov	r2, r9
   33ed8:	mov	r1, r8
   33edc:	mov	r0, r7
   33ee0:	bl	32a44 <__assert_fail@plt+0x21758>
   33ee4:	str	r6, [r5]
   33ee8:	add	sp, sp, #24
   33eec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   33ef0:	ldrdeq	sl, [r4], -ip
   33ef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33ef8:	sub	sp, sp, #44	; 0x2c
   33efc:	str	r0, [sp, #28]
   33f00:	str	r1, [sp, #32]
   33f04:	mov	r6, r2
   33f08:	subs	r4, r3, #0
   33f0c:	ldr	r3, [pc, #172]	; 33fc0 <__assert_fail@plt+0x22cd4>
   33f10:	moveq	r4, r3
   33f14:	bl	111c0 <__errno_location@plt>
   33f18:	mov	r7, r0
   33f1c:	ldr	fp, [r0]
   33f20:	ldr	r5, [r4, #4]
   33f24:	cmp	r6, #0
   33f28:	orreq	r5, r5, #1
   33f2c:	add	r9, r4, #8
   33f30:	ldr	r3, [r4, #44]	; 0x2c
   33f34:	str	r3, [sp, #16]
   33f38:	ldr	r3, [r4, #40]	; 0x28
   33f3c:	str	r3, [sp, #12]
   33f40:	str	r9, [sp, #8]
   33f44:	str	r5, [sp, #4]
   33f48:	ldr	r3, [r4]
   33f4c:	str	r3, [sp]
   33f50:	ldr	r3, [sp, #32]
   33f54:	ldr	r2, [sp, #28]
   33f58:	mov	r1, #0
   33f5c:	mov	r0, r1
   33f60:	bl	32a44 <__assert_fail@plt+0x21758>
   33f64:	mov	sl, r0
   33f68:	add	r8, r0, #1
   33f6c:	mov	r0, r8
   33f70:	bl	34948 <__assert_fail@plt+0x2365c>
   33f74:	str	r0, [sp, #36]	; 0x24
   33f78:	ldr	r3, [r4, #44]	; 0x2c
   33f7c:	str	r3, [sp, #16]
   33f80:	ldr	r3, [r4, #40]	; 0x28
   33f84:	str	r3, [sp, #12]
   33f88:	str	r9, [sp, #8]
   33f8c:	str	r5, [sp, #4]
   33f90:	ldr	r3, [r4]
   33f94:	str	r3, [sp]
   33f98:	ldr	r3, [sp, #32]
   33f9c:	ldr	r2, [sp, #28]
   33fa0:	mov	r1, r8
   33fa4:	bl	32a44 <__assert_fail@plt+0x21758>
   33fa8:	str	fp, [r7]
   33fac:	cmp	r6, #0
   33fb0:	strne	sl, [r6]
   33fb4:	ldr	r0, [sp, #36]	; 0x24
   33fb8:	add	sp, sp, #44	; 0x2c
   33fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33fc0:	ldrdeq	sl, [r4], -ip
   33fc4:	push	{r4, lr}
   33fc8:	mov	r3, r2
   33fcc:	mov	r2, #0
   33fd0:	bl	33ef4 <__assert_fail@plt+0x22c08>
   33fd4:	pop	{r4, pc}
   33fd8:	push	{r4, r5, r6, r7, r8, lr}
   33fdc:	ldr	r3, [pc, #140]	; 34070 <__assert_fail@plt+0x22d84>
   33fe0:	ldr	r7, [r3]
   33fe4:	ldr	r3, [r3, #4]
   33fe8:	cmp	r3, #1
   33fec:	ble	34018 <__assert_fail@plt+0x22d2c>
   33ff0:	mov	r5, r7
   33ff4:	mov	r4, #1
   33ff8:	ldr	r6, [pc, #112]	; 34070 <__assert_fail@plt+0x22d84>
   33ffc:	ldr	r0, [r5, #12]
   34000:	bl	31c0c <__assert_fail@plt+0x20920>
   34004:	add	r4, r4, #1
   34008:	add	r5, r5, #8
   3400c:	ldr	r3, [r6, #4]
   34010:	cmp	r3, r4
   34014:	bgt	33ffc <__assert_fail@plt+0x22d10>
   34018:	ldr	r0, [r7, #4]
   3401c:	ldr	r3, [pc, #80]	; 34074 <__assert_fail@plt+0x22d88>
   34020:	cmp	r0, r3
   34024:	beq	34040 <__assert_fail@plt+0x22d54>
   34028:	bl	31c0c <__assert_fail@plt+0x20920>
   3402c:	ldr	r3, [pc, #60]	; 34070 <__assert_fail@plt+0x22d84>
   34030:	mov	r2, #256	; 0x100
   34034:	str	r2, [r3, #8]
   34038:	ldr	r2, [pc, #52]	; 34074 <__assert_fail@plt+0x22d88>
   3403c:	str	r2, [r3, #12]
   34040:	ldr	r3, [pc, #48]	; 34078 <__assert_fail@plt+0x22d8c>
   34044:	cmp	r7, r3
   34048:	beq	34060 <__assert_fail@plt+0x22d74>
   3404c:	mov	r0, r7
   34050:	bl	31c0c <__assert_fail@plt+0x20920>
   34054:	ldr	r3, [pc, #20]	; 34070 <__assert_fail@plt+0x22d84>
   34058:	add	r2, r3, #8
   3405c:	str	r2, [r3]
   34060:	mov	r2, #1
   34064:	ldr	r3, [pc, #4]	; 34070 <__assert_fail@plt+0x22d84>
   34068:	str	r2, [r3, #4]
   3406c:	pop	{r4, r5, r6, r7, r8, pc}
   34070:	andeq	sl, r4, r4, asr #2
   34074:	ldrdeq	sl, [r4], -ip
   34078:	andeq	sl, r4, ip, asr #2
   3407c:	push	{r4, lr}
   34080:	ldr	r3, [pc, #8]	; 34090 <__assert_fail@plt+0x22da4>
   34084:	mvn	r2, #0
   34088:	bl	33bb4 <__assert_fail@plt+0x228c8>
   3408c:	pop	{r4, pc}
   34090:	ldrdeq	sl, [r4], -ip
   34094:	push	{r4, lr}
   34098:	ldr	r3, [pc, #4]	; 340a4 <__assert_fail@plt+0x22db8>
   3409c:	bl	33bb4 <__assert_fail@plt+0x228c8>
   340a0:	pop	{r4, pc}
   340a4:	ldrdeq	sl, [r4], -ip
   340a8:	push	{r4, lr}
   340ac:	mov	r1, r0
   340b0:	mov	r0, #0
   340b4:	bl	3407c <__assert_fail@plt+0x22d90>
   340b8:	pop	{r4, pc}
   340bc:	push	{r4, lr}
   340c0:	mov	r2, r1
   340c4:	mov	r1, r0
   340c8:	mov	r0, #0
   340cc:	bl	34094 <__assert_fail@plt+0x22da8>
   340d0:	pop	{r4, pc}
   340d4:	push	{r4, r5, lr}
   340d8:	sub	sp, sp, #52	; 0x34
   340dc:	mov	r4, r0
   340e0:	mov	r5, r2
   340e4:	mov	r0, sp
   340e8:	bl	328dc <__assert_fail@plt+0x215f0>
   340ec:	mov	r3, sp
   340f0:	mvn	r2, #0
   340f4:	mov	r1, r5
   340f8:	mov	r0, r4
   340fc:	bl	33bb4 <__assert_fail@plt+0x228c8>
   34100:	add	sp, sp, #52	; 0x34
   34104:	pop	{r4, r5, pc}
   34108:	push	{r4, r5, r6, lr}
   3410c:	sub	sp, sp, #48	; 0x30
   34110:	mov	r4, r0
   34114:	mov	r5, r2
   34118:	mov	r6, r3
   3411c:	mov	r0, sp
   34120:	bl	328dc <__assert_fail@plt+0x215f0>
   34124:	mov	r3, sp
   34128:	mov	r2, r6
   3412c:	mov	r1, r5
   34130:	mov	r0, r4
   34134:	bl	33bb4 <__assert_fail@plt+0x228c8>
   34138:	add	sp, sp, #48	; 0x30
   3413c:	pop	{r4, r5, r6, pc}
   34140:	push	{r4, lr}
   34144:	mov	r2, r1
   34148:	mov	r1, r0
   3414c:	mov	r0, #0
   34150:	bl	340d4 <__assert_fail@plt+0x22de8>
   34154:	pop	{r4, pc}
   34158:	push	{r4, lr}
   3415c:	mov	r3, r2
   34160:	mov	r2, r1
   34164:	mov	r1, r0
   34168:	mov	r0, #0
   3416c:	bl	34108 <__assert_fail@plt+0x22e1c>
   34170:	pop	{r4, pc}
   34174:	push	{r4, r5, r6, lr}
   34178:	sub	sp, sp, #48	; 0x30
   3417c:	mov	r4, r0
   34180:	mov	r5, r1
   34184:	mov	r6, r2
   34188:	mov	ip, sp
   3418c:	ldr	lr, [pc, #64]	; 341d4 <__assert_fail@plt+0x22ee8>
   34190:	ldm	lr!, {r0, r1, r2, r3}
   34194:	stmia	ip!, {r0, r1, r2, r3}
   34198:	ldm	lr!, {r0, r1, r2, r3}
   3419c:	stmia	ip!, {r0, r1, r2, r3}
   341a0:	ldm	lr, {r0, r1, r2, r3}
   341a4:	stm	ip, {r0, r1, r2, r3}
   341a8:	mov	r2, #1
   341ac:	mov	r1, r6
   341b0:	mov	r0, sp
   341b4:	bl	33de0 <__assert_fail@plt+0x22af4>
   341b8:	mov	r3, sp
   341bc:	mov	r2, r5
   341c0:	mov	r1, r4
   341c4:	mov	r0, #0
   341c8:	bl	33bb4 <__assert_fail@plt+0x228c8>
   341cc:	add	sp, sp, #48	; 0x30
   341d0:	pop	{r4, r5, r6, pc}
   341d4:	ldrdeq	sl, [r4], -ip
   341d8:	push	{r4, lr}
   341dc:	mov	r2, r1
   341e0:	mvn	r1, #0
   341e4:	bl	34174 <__assert_fail@plt+0x22e88>
   341e8:	pop	{r4, pc}
   341ec:	push	{r4, lr}
   341f0:	mov	r1, #58	; 0x3a
   341f4:	bl	341d8 <__assert_fail@plt+0x22eec>
   341f8:	pop	{r4, pc}
   341fc:	push	{r4, lr}
   34200:	mov	r2, #58	; 0x3a
   34204:	bl	34174 <__assert_fail@plt+0x22e88>
   34208:	pop	{r4, pc}
   3420c:	push	{r4, r5, lr}
   34210:	sub	sp, sp, #100	; 0x64
   34214:	mov	r4, r0
   34218:	mov	r5, r2
   3421c:	mov	r0, sp
   34220:	bl	328dc <__assert_fail@plt+0x215f0>
   34224:	add	lr, sp, #48	; 0x30
   34228:	mov	ip, sp
   3422c:	ldm	ip!, {r0, r1, r2, r3}
   34230:	stmia	lr!, {r0, r1, r2, r3}
   34234:	ldm	ip!, {r0, r1, r2, r3}
   34238:	stmia	lr!, {r0, r1, r2, r3}
   3423c:	ldm	ip, {r0, r1, r2, r3}
   34240:	stm	lr, {r0, r1, r2, r3}
   34244:	mov	r2, #1
   34248:	mov	r1, #58	; 0x3a
   3424c:	add	r0, sp, #48	; 0x30
   34250:	bl	33de0 <__assert_fail@plt+0x22af4>
   34254:	add	r3, sp, #48	; 0x30
   34258:	mvn	r2, #0
   3425c:	mov	r1, r5
   34260:	mov	r0, r4
   34264:	bl	33bb4 <__assert_fail@plt+0x228c8>
   34268:	add	sp, sp, #100	; 0x64
   3426c:	pop	{r4, r5, pc}
   34270:	push	{r4, r5, r6, r7, lr}
   34274:	sub	sp, sp, #52	; 0x34
   34278:	mov	r4, r0
   3427c:	mov	r6, r1
   34280:	mov	r7, r2
   34284:	mov	r5, r3
   34288:	mov	ip, sp
   3428c:	ldr	lr, [pc, #64]	; 342d4 <__assert_fail@plt+0x22fe8>
   34290:	ldm	lr!, {r0, r1, r2, r3}
   34294:	stmia	ip!, {r0, r1, r2, r3}
   34298:	ldm	lr!, {r0, r1, r2, r3}
   3429c:	stmia	ip!, {r0, r1, r2, r3}
   342a0:	ldm	lr, {r0, r1, r2, r3}
   342a4:	stm	ip, {r0, r1, r2, r3}
   342a8:	mov	r2, r7
   342ac:	mov	r1, r6
   342b0:	mov	r0, sp
   342b4:	bl	33e3c <__assert_fail@plt+0x22b50>
   342b8:	mov	r3, sp
   342bc:	ldr	r2, [sp, #72]	; 0x48
   342c0:	mov	r1, r5
   342c4:	mov	r0, r4
   342c8:	bl	33bb4 <__assert_fail@plt+0x228c8>
   342cc:	add	sp, sp, #52	; 0x34
   342d0:	pop	{r4, r5, r6, r7, pc}
   342d4:	ldrdeq	sl, [r4], -ip
   342d8:	push	{lr}		; (str lr, [sp, #-4]!)
   342dc:	sub	sp, sp, #12
   342e0:	mvn	ip, #0
   342e4:	str	ip, [sp]
   342e8:	bl	34270 <__assert_fail@plt+0x22f84>
   342ec:	add	sp, sp, #12
   342f0:	pop	{pc}		; (ldr pc, [sp], #4)
   342f4:	push	{r4, lr}
   342f8:	mov	r3, r2
   342fc:	mov	r2, r1
   34300:	mov	r1, r0
   34304:	mov	r0, #0
   34308:	bl	342d8 <__assert_fail@plt+0x22fec>
   3430c:	pop	{r4, pc}
   34310:	push	{lr}		; (str lr, [sp, #-4]!)
   34314:	sub	sp, sp, #12
   34318:	str	r3, [sp]
   3431c:	mov	r3, r2
   34320:	mov	r2, r1
   34324:	mov	r1, r0
   34328:	mov	r0, #0
   3432c:	bl	34270 <__assert_fail@plt+0x22f84>
   34330:	add	sp, sp, #12
   34334:	pop	{pc}		; (ldr pc, [sp], #4)
   34338:	push	{r4, lr}
   3433c:	ldr	r3, [pc, #4]	; 34348 <__assert_fail@plt+0x2305c>
   34340:	bl	33bb4 <__assert_fail@plt+0x228c8>
   34344:	pop	{r4, pc}
   34348:	andeq	sl, r4, r4, asr r1
   3434c:	push	{r4, lr}
   34350:	mov	r2, r1
   34354:	mov	r1, r0
   34358:	mov	r0, #0
   3435c:	bl	34338 <__assert_fail@plt+0x2304c>
   34360:	pop	{r4, pc}
   34364:	push	{r4, lr}
   34368:	mvn	r2, #0
   3436c:	bl	34338 <__assert_fail@plt+0x2304c>
   34370:	pop	{r4, pc}
   34374:	push	{r4, lr}
   34378:	mov	r1, r0
   3437c:	mov	r0, #0
   34380:	bl	34364 <__assert_fail@plt+0x23078>
   34384:	pop	{r4, pc}
   34388:	push	{r4, lr}
   3438c:	mov	r2, #3
   34390:	mov	r1, #0
   34394:	bl	35724 <__assert_fail@plt+0x24438>
   34398:	pop	{r4, pc}
   3439c:	push	{r4, r5, r6, lr}
   343a0:	sub	sp, sp, #32
   343a4:	mov	r4, r0
   343a8:	ldr	r5, [sp, #48]	; 0x30
   343ac:	ldr	r6, [sp, #52]	; 0x34
   343b0:	cmp	r1, #0
   343b4:	beq	3446c <__assert_fail@plt+0x23180>
   343b8:	str	r3, [sp, #4]
   343bc:	str	r2, [sp]
   343c0:	mov	r3, r1
   343c4:	ldr	r2, [pc, #940]	; 34778 <__assert_fail@plt+0x2348c>
   343c8:	mov	r1, #1
   343cc:	bl	11214 <__fprintf_chk@plt>
   343d0:	mov	r2, #5
   343d4:	ldr	r1, [pc, #928]	; 3477c <__assert_fail@plt+0x23490>
   343d8:	mov	r0, #0
   343dc:	bl	110a0 <dcgettext@plt>
   343e0:	ldr	r3, [pc, #920]	; 34780 <__assert_fail@plt+0x23494>
   343e4:	str	r3, [sp]
   343e8:	mov	r3, r0
   343ec:	ldr	r2, [pc, #912]	; 34784 <__assert_fail@plt+0x23498>
   343f0:	mov	r1, #1
   343f4:	mov	r0, r4
   343f8:	bl	11214 <__fprintf_chk@plt>
   343fc:	mov	r1, r4
   34400:	mov	r0, #10
   34404:	bl	11094 <fputc_unlocked@plt>
   34408:	mov	r2, #5
   3440c:	ldr	r1, [pc, #884]	; 34788 <__assert_fail@plt+0x2349c>
   34410:	mov	r0, #0
   34414:	bl	110a0 <dcgettext@plt>
   34418:	ldr	r3, [pc, #876]	; 3478c <__assert_fail@plt+0x234a0>
   3441c:	mov	r2, r0
   34420:	mov	r1, #1
   34424:	mov	r0, r4
   34428:	bl	11214 <__fprintf_chk@plt>
   3442c:	mov	r1, r4
   34430:	mov	r0, #10
   34434:	bl	11094 <fputc_unlocked@plt>
   34438:	cmp	r6, #9
   3443c:	ldrls	pc, [pc, r6, lsl #2]
   34440:	b	34710 <__assert_fail@plt+0x23424>
   34444:	andeq	r4, r3, r8, lsr #9
   34448:	andeq	r4, r3, r4, lsl #9
   3444c:			; <UNDEFINED> instruction: 0x000344b0
   34450:	andeq	r4, r3, r0, ror #9
   34454:	andeq	r4, r3, r8, lsl r5
   34458:	andeq	r4, r3, r8, asr r5
   3445c:	andeq	r4, r3, r0, lsr #11
   34460:	strdeq	r4, [r3], -r0
   34464:	andeq	r4, r3, r8, asr #12
   34468:	andeq	r4, r3, r8, lsr #13
   3446c:	str	r3, [sp]
   34470:	mov	r3, r2
   34474:	ldr	r2, [pc, #788]	; 34790 <__assert_fail@plt+0x234a4>
   34478:	mov	r1, #1
   3447c:	bl	11214 <__fprintf_chk@plt>
   34480:	b	343d0 <__assert_fail@plt+0x230e4>
   34484:	mov	r2, #5
   34488:	ldr	r1, [pc, #772]	; 34794 <__assert_fail@plt+0x234a8>
   3448c:	mov	r0, #0
   34490:	bl	110a0 <dcgettext@plt>
   34494:	ldr	r3, [r5]
   34498:	mov	r2, r0
   3449c:	mov	r1, #1
   344a0:	mov	r0, r4
   344a4:	bl	11214 <__fprintf_chk@plt>
   344a8:	add	sp, sp, #32
   344ac:	pop	{r4, r5, r6, pc}
   344b0:	mov	r2, #5
   344b4:	ldr	r1, [pc, #732]	; 34798 <__assert_fail@plt+0x234ac>
   344b8:	mov	r0, #0
   344bc:	bl	110a0 <dcgettext@plt>
   344c0:	ldr	r3, [r5]
   344c4:	ldr	r2, [r5, #4]
   344c8:	str	r2, [sp]
   344cc:	mov	r2, r0
   344d0:	mov	r1, #1
   344d4:	mov	r0, r4
   344d8:	bl	11214 <__fprintf_chk@plt>
   344dc:	b	344a8 <__assert_fail@plt+0x231bc>
   344e0:	mov	r2, #5
   344e4:	ldr	r1, [pc, #688]	; 3479c <__assert_fail@plt+0x234b0>
   344e8:	mov	r0, #0
   344ec:	bl	110a0 <dcgettext@plt>
   344f0:	ldr	r3, [r5]
   344f4:	ldr	r2, [r5, #8]
   344f8:	str	r2, [sp, #4]
   344fc:	ldr	r2, [r5, #4]
   34500:	str	r2, [sp]
   34504:	mov	r2, r0
   34508:	mov	r1, #1
   3450c:	mov	r0, r4
   34510:	bl	11214 <__fprintf_chk@plt>
   34514:	b	344a8 <__assert_fail@plt+0x231bc>
   34518:	mov	r2, #5
   3451c:	ldr	r1, [pc, #636]	; 347a0 <__assert_fail@plt+0x234b4>
   34520:	mov	r0, #0
   34524:	bl	110a0 <dcgettext@plt>
   34528:	ldr	r3, [r5]
   3452c:	ldr	r2, [r5, #12]
   34530:	str	r2, [sp, #8]
   34534:	ldr	r2, [r5, #8]
   34538:	str	r2, [sp, #4]
   3453c:	ldr	r2, [r5, #4]
   34540:	str	r2, [sp]
   34544:	mov	r2, r0
   34548:	mov	r1, #1
   3454c:	mov	r0, r4
   34550:	bl	11214 <__fprintf_chk@plt>
   34554:	b	344a8 <__assert_fail@plt+0x231bc>
   34558:	mov	r2, #5
   3455c:	ldr	r1, [pc, #576]	; 347a4 <__assert_fail@plt+0x234b8>
   34560:	mov	r0, #0
   34564:	bl	110a0 <dcgettext@plt>
   34568:	ldr	r3, [r5]
   3456c:	ldr	r2, [r5, #16]
   34570:	str	r2, [sp, #12]
   34574:	ldr	r2, [r5, #12]
   34578:	str	r2, [sp, #8]
   3457c:	ldr	r2, [r5, #8]
   34580:	str	r2, [sp, #4]
   34584:	ldr	r2, [r5, #4]
   34588:	str	r2, [sp]
   3458c:	mov	r2, r0
   34590:	mov	r1, #1
   34594:	mov	r0, r4
   34598:	bl	11214 <__fprintf_chk@plt>
   3459c:	b	344a8 <__assert_fail@plt+0x231bc>
   345a0:	mov	r2, #5
   345a4:	ldr	r1, [pc, #508]	; 347a8 <__assert_fail@plt+0x234bc>
   345a8:	mov	r0, #0
   345ac:	bl	110a0 <dcgettext@plt>
   345b0:	ldr	r3, [r5]
   345b4:	ldr	r2, [r5, #20]
   345b8:	str	r2, [sp, #16]
   345bc:	ldr	r2, [r5, #16]
   345c0:	str	r2, [sp, #12]
   345c4:	ldr	r2, [r5, #12]
   345c8:	str	r2, [sp, #8]
   345cc:	ldr	r2, [r5, #8]
   345d0:	str	r2, [sp, #4]
   345d4:	ldr	r2, [r5, #4]
   345d8:	str	r2, [sp]
   345dc:	mov	r2, r0
   345e0:	mov	r1, #1
   345e4:	mov	r0, r4
   345e8:	bl	11214 <__fprintf_chk@plt>
   345ec:	b	344a8 <__assert_fail@plt+0x231bc>
   345f0:	mov	r2, #5
   345f4:	ldr	r1, [pc, #432]	; 347ac <__assert_fail@plt+0x234c0>
   345f8:	mov	r0, #0
   345fc:	bl	110a0 <dcgettext@plt>
   34600:	ldr	r3, [r5]
   34604:	ldr	r2, [r5, #24]
   34608:	str	r2, [sp, #20]
   3460c:	ldr	r2, [r5, #20]
   34610:	str	r2, [sp, #16]
   34614:	ldr	r2, [r5, #16]
   34618:	str	r2, [sp, #12]
   3461c:	ldr	r2, [r5, #12]
   34620:	str	r2, [sp, #8]
   34624:	ldr	r2, [r5, #8]
   34628:	str	r2, [sp, #4]
   3462c:	ldr	r2, [r5, #4]
   34630:	str	r2, [sp]
   34634:	mov	r2, r0
   34638:	mov	r1, #1
   3463c:	mov	r0, r4
   34640:	bl	11214 <__fprintf_chk@plt>
   34644:	b	344a8 <__assert_fail@plt+0x231bc>
   34648:	mov	r2, #5
   3464c:	ldr	r1, [pc, #348]	; 347b0 <__assert_fail@plt+0x234c4>
   34650:	mov	r0, #0
   34654:	bl	110a0 <dcgettext@plt>
   34658:	ldr	r3, [r5]
   3465c:	ldr	r2, [r5, #28]
   34660:	str	r2, [sp, #24]
   34664:	ldr	r2, [r5, #24]
   34668:	str	r2, [sp, #20]
   3466c:	ldr	r2, [r5, #20]
   34670:	str	r2, [sp, #16]
   34674:	ldr	r2, [r5, #16]
   34678:	str	r2, [sp, #12]
   3467c:	ldr	r2, [r5, #12]
   34680:	str	r2, [sp, #8]
   34684:	ldr	r2, [r5, #8]
   34688:	str	r2, [sp, #4]
   3468c:	ldr	r2, [r5, #4]
   34690:	str	r2, [sp]
   34694:	mov	r2, r0
   34698:	mov	r1, #1
   3469c:	mov	r0, r4
   346a0:	bl	11214 <__fprintf_chk@plt>
   346a4:	b	344a8 <__assert_fail@plt+0x231bc>
   346a8:	mov	r2, #5
   346ac:	ldr	r1, [pc, #256]	; 347b4 <__assert_fail@plt+0x234c8>
   346b0:	mov	r0, #0
   346b4:	bl	110a0 <dcgettext@plt>
   346b8:	ldr	r3, [r5]
   346bc:	ldr	r2, [r5, #32]
   346c0:	str	r2, [sp, #28]
   346c4:	ldr	r2, [r5, #28]
   346c8:	str	r2, [sp, #24]
   346cc:	ldr	r2, [r5, #24]
   346d0:	str	r2, [sp, #20]
   346d4:	ldr	r2, [r5, #20]
   346d8:	str	r2, [sp, #16]
   346dc:	ldr	r2, [r5, #16]
   346e0:	str	r2, [sp, #12]
   346e4:	ldr	r2, [r5, #12]
   346e8:	str	r2, [sp, #8]
   346ec:	ldr	r2, [r5, #8]
   346f0:	str	r2, [sp, #4]
   346f4:	ldr	r2, [r5, #4]
   346f8:	str	r2, [sp]
   346fc:	mov	r2, r0
   34700:	mov	r1, #1
   34704:	mov	r0, r4
   34708:	bl	11214 <__fprintf_chk@plt>
   3470c:	b	344a8 <__assert_fail@plt+0x231bc>
   34710:	mov	r2, #5
   34714:	ldr	r1, [pc, #156]	; 347b8 <__assert_fail@plt+0x234cc>
   34718:	mov	r0, #0
   3471c:	bl	110a0 <dcgettext@plt>
   34720:	ldr	r3, [r5]
   34724:	ldr	r2, [r5, #32]
   34728:	str	r2, [sp, #28]
   3472c:	ldr	r2, [r5, #28]
   34730:	str	r2, [sp, #24]
   34734:	ldr	r2, [r5, #24]
   34738:	str	r2, [sp, #20]
   3473c:	ldr	r2, [r5, #20]
   34740:	str	r2, [sp, #16]
   34744:	ldr	r2, [r5, #16]
   34748:	str	r2, [sp, #12]
   3474c:	ldr	r2, [r5, #12]
   34750:	str	r2, [sp, #8]
   34754:	ldr	r2, [r5, #8]
   34758:	str	r2, [sp, #4]
   3475c:	ldr	r2, [r5, #4]
   34760:	str	r2, [sp]
   34764:	mov	r2, r0
   34768:	mov	r1, #1
   3476c:	mov	r0, r4
   34770:	bl	11214 <__fprintf_chk@plt>
   34774:	b	344a8 <__assert_fail@plt+0x231bc>
   34778:	andeq	r9, r3, r8, asr #22
   3477c:	andeq	r9, r3, ip, asr fp
   34780:	andeq	r0, r0, r6, ror #15
   34784:	andeq	r9, r3, r4, lsr lr
   34788:	andeq	r9, r3, r0, ror #22
   3478c:	andeq	r9, r3, ip, lsl #24
   34790:	andeq	r9, r3, r4, asr fp
   34794:	andeq	r9, r3, r0, lsr ip
   34798:	andeq	r9, r3, r0, asr #24
   3479c:	andeq	r9, r3, r8, asr ip
   347a0:	andeq	r9, r3, r4, ror ip
   347a4:	muleq	r3, r4, ip
   347a8:			; <UNDEFINED> instruction: 0x00039cb8
   347ac:	andeq	r9, r3, r0, ror #25
   347b0:	andeq	r9, r3, ip, lsl #26
   347b4:	andeq	r9, r3, ip, lsr sp
   347b8:	andeq	r9, r3, r0, ror sp
   347bc:	push	{r4, r5, lr}
   347c0:	sub	sp, sp, #12
   347c4:	ldr	r5, [sp, #24]
   347c8:	ldr	ip, [r5]
   347cc:	cmp	ip, #0
   347d0:	beq	34800 <__assert_fail@plt+0x23514>
   347d4:	mov	lr, r5
   347d8:	mov	ip, #0
   347dc:	add	ip, ip, #1
   347e0:	ldr	r4, [lr, #4]!
   347e4:	cmp	r4, #0
   347e8:	bne	347dc <__assert_fail@plt+0x234f0>
   347ec:	str	ip, [sp, #4]
   347f0:	str	r5, [sp]
   347f4:	bl	3439c <__assert_fail@plt+0x230b0>
   347f8:	add	sp, sp, #12
   347fc:	pop	{r4, r5, pc}
   34800:	mov	ip, #0
   34804:	b	347ec <__assert_fail@plt+0x23500>
   34808:	push	{r4, r5, lr}
   3480c:	sub	sp, sp, #52	; 0x34
   34810:	ldr	r4, [sp, #64]	; 0x40
   34814:	sub	r4, r4, #4
   34818:	add	r5, sp, #4
   3481c:	mov	ip, #0
   34820:	ldr	lr, [r4, #4]!
   34824:	str	lr, [r5, #4]!
   34828:	cmp	lr, #0
   3482c:	beq	3483c <__assert_fail@plt+0x23550>
   34830:	add	ip, ip, #1
   34834:	cmp	ip, #10
   34838:	bne	34820 <__assert_fail@plt+0x23534>
   3483c:	str	ip, [sp, #4]
   34840:	add	ip, sp, #8
   34844:	str	ip, [sp]
   34848:	bl	3439c <__assert_fail@plt+0x230b0>
   3484c:	add	sp, sp, #52	; 0x34
   34850:	pop	{r4, r5, pc}
   34854:	push	{r3}		; (str r3, [sp, #-4]!)
   34858:	push	{lr}		; (str lr, [sp, #-4]!)
   3485c:	sub	sp, sp, #16
   34860:	add	r3, sp, #24
   34864:	str	r3, [sp, #12]
   34868:	str	r3, [sp]
   3486c:	ldr	r3, [sp, #20]
   34870:	bl	34808 <__assert_fail@plt+0x2351c>
   34874:	add	sp, sp, #16
   34878:	pop	{lr}		; (ldr lr, [sp], #4)
   3487c:	add	sp, sp, #4
   34880:	bx	lr
   34884:	push	{r4, lr}
   34888:	ldr	r3, [pc, #112]	; 34900 <__assert_fail@plt+0x23614>
   3488c:	ldr	r1, [r3]
   34890:	mov	r0, #10
   34894:	bl	11094 <fputc_unlocked@plt>
   34898:	mov	r2, #5
   3489c:	ldr	r1, [pc, #96]	; 34904 <__assert_fail@plt+0x23618>
   348a0:	mov	r0, #0
   348a4:	bl	110a0 <dcgettext@plt>
   348a8:	ldr	r2, [pc, #88]	; 34908 <__assert_fail@plt+0x2361c>
   348ac:	mov	r1, r0
   348b0:	mov	r0, #1
   348b4:	bl	111fc <__printf_chk@plt>
   348b8:	mov	r2, #5
   348bc:	ldr	r1, [pc, #72]	; 3490c <__assert_fail@plt+0x23620>
   348c0:	mov	r0, #0
   348c4:	bl	110a0 <dcgettext@plt>
   348c8:	ldr	r3, [pc, #64]	; 34910 <__assert_fail@plt+0x23624>
   348cc:	ldr	r2, [pc, #64]	; 34914 <__assert_fail@plt+0x23628>
   348d0:	mov	r1, r0
   348d4:	mov	r0, #1
   348d8:	bl	111fc <__printf_chk@plt>
   348dc:	mov	r2, #5
   348e0:	ldr	r1, [pc, #48]	; 34918 <__assert_fail@plt+0x2362c>
   348e4:	mov	r0, #0
   348e8:	bl	110a0 <dcgettext@plt>
   348ec:	ldr	r2, [pc, #40]	; 3491c <__assert_fail@plt+0x23630>
   348f0:	mov	r1, r0
   348f4:	mov	r0, #1
   348f8:	bl	111fc <__printf_chk@plt>
   348fc:	pop	{r4, pc}
   34900:	andeq	sl, r4, r4, lsr #3
   34904:	andeq	r9, r3, ip, lsr #27
   34908:	andeq	r9, r3, r0, asr #27
   3490c:	ldrdeq	r9, [r3], -r8
   34910:	andeq	r7, r3, r0, asr #32
   34914:	andeq	r7, r3, r8, rrx
   34918:	andeq	r9, r3, ip, ror #27
   3491c:	andeq	r9, r3, r4, lsl lr
   34920:	push	{r4, lr}
   34924:	bl	3562c <__assert_fail@plt+0x24340>
   34928:	cmp	r0, #0
   3492c:	popne	{r4, pc}
   34930:	bl	34ec4 <__assert_fail@plt+0x23bd8>
   34934:	push	{r4, lr}
   34938:	bl	3562c <__assert_fail@plt+0x24340>
   3493c:	cmp	r0, #0
   34940:	popne	{r4, pc}
   34944:	bl	34ec4 <__assert_fail@plt+0x23bd8>
   34948:	push	{r4, lr}
   3494c:	bl	34920 <__assert_fail@plt+0x23634>
   34950:	pop	{r4, pc}
   34954:	push	{r4, r5, r6, lr}
   34958:	mov	r5, r0
   3495c:	mov	r4, r1
   34960:	bl	3565c <__assert_fail@plt+0x24370>
   34964:	cmp	r0, #0
   34968:	popne	{r4, r5, r6, pc}
   3496c:	adds	r4, r4, #0
   34970:	movne	r4, #1
   34974:	cmp	r5, #0
   34978:	orreq	r4, r4, #1
   3497c:	cmp	r4, #0
   34980:	popeq	{r4, r5, r6, pc}
   34984:	bl	34ec4 <__assert_fail@plt+0x23bd8>
   34988:	push	{r4, lr}
   3498c:	cmp	r1, #0
   34990:	orreq	r1, r1, #1
   34994:	bl	3565c <__assert_fail@plt+0x24370>
   34998:	cmp	r0, #0
   3499c:	popne	{r4, pc}
   349a0:	bl	34ec4 <__assert_fail@plt+0x23bd8>
   349a4:	push	{r4, r5, r6, lr}
   349a8:	mov	r6, r0
   349ac:	mov	r5, r1
   349b0:	mov	r4, r2
   349b4:	bl	35a08 <__assert_fail@plt+0x2471c>
   349b8:	cmp	r0, #0
   349bc:	popne	{r4, r5, r6, pc}
   349c0:	cmp	r6, #0
   349c4:	beq	349d4 <__assert_fail@plt+0x236e8>
   349c8:	cmp	r5, #0
   349cc:	cmpne	r4, #0
   349d0:	popeq	{r4, r5, r6, pc}
   349d4:	bl	34ec4 <__assert_fail@plt+0x23bd8>
   349d8:	push	{r4, lr}
   349dc:	bl	349a4 <__assert_fail@plt+0x236b8>
   349e0:	pop	{r4, pc}
   349e4:	push	{r4, lr}
   349e8:	mov	ip, r1
   349ec:	mov	r3, r2
   349f0:	cmp	r2, #0
   349f4:	cmpne	r1, #0
   349f8:	moveq	r3, #1
   349fc:	moveq	ip, r3
   34a00:	mov	r2, r3
   34a04:	mov	r1, ip
   34a08:	bl	35a08 <__assert_fail@plt+0x2471c>
   34a0c:	cmp	r0, #0
   34a10:	popne	{r4, pc}
   34a14:	bl	34ec4 <__assert_fail@plt+0x23bd8>
   34a18:	push	{r4, lr}
   34a1c:	mov	r2, r1
   34a20:	mov	r1, r0
   34a24:	mov	r0, #0
   34a28:	bl	349a4 <__assert_fail@plt+0x236b8>
   34a2c:	pop	{r4, pc}
   34a30:	push	{r4, lr}
   34a34:	mov	r2, r1
   34a38:	mov	r1, r0
   34a3c:	mov	r0, #0
   34a40:	bl	349e4 <__assert_fail@plt+0x236f8>
   34a44:	pop	{r4, pc}
   34a48:	push	{r4, r5, r6, r7, r8, lr}
   34a4c:	mov	r5, r1
   34a50:	mov	r6, r2
   34a54:	ldr	r4, [r1]
   34a58:	subs	r7, r0, #0
   34a5c:	beq	34a78 <__assert_fail@plt+0x2378c>
   34a60:	lsr	r2, r4, #1
   34a64:	add	r3, r2, #1
   34a68:	mvn	r3, r3
   34a6c:	cmp	r4, r3
   34a70:	bls	34a9c <__assert_fail@plt+0x237b0>
   34a74:	bl	34ec4 <__assert_fail@plt+0x23bd8>
   34a78:	cmp	r4, #0
   34a7c:	bne	34aa4 <__assert_fail@plt+0x237b8>
   34a80:	mov	r1, r2
   34a84:	mov	r0, #64	; 0x40
   34a88:	bl	35b5c <__assert_fail@plt+0x24870>
   34a8c:	cmp	r0, #0
   34a90:	movne	r4, r0
   34a94:	addeq	r4, r0, #1
   34a98:	b	34aa4 <__assert_fail@plt+0x237b8>
   34a9c:	add	r4, r4, #1
   34aa0:	add	r4, r4, r2
   34aa4:	mov	r2, r6
   34aa8:	mov	r1, r4
   34aac:	mov	r0, r7
   34ab0:	bl	349a4 <__assert_fail@plt+0x236b8>
   34ab4:	str	r4, [r5]
   34ab8:	pop	{r4, r5, r6, r7, r8, pc}
   34abc:	push	{r4, lr}
   34ac0:	mov	r2, #1
   34ac4:	bl	34a48 <__assert_fail@plt+0x2375c>
   34ac8:	pop	{r4, pc}
   34acc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34ad0:	sub	sp, sp, #12
   34ad4:	mov	fp, r0
   34ad8:	mov	sl, r1
   34adc:	mov	r9, r2
   34ae0:	mov	r7, r3
   34ae4:	ldr	r6, [sp, #48]	; 0x30
   34ae8:	ldr	r5, [r1]
   34aec:	asrs	r4, r5, #1
   34af0:	bmi	34c4c <__assert_fail@plt+0x23960>
   34af4:	cmp	r5, #0
   34af8:	blt	34c60 <__assert_fail@plt+0x23974>
   34afc:	mvn	r3, #-2147483648	; 0x80000000
   34b00:	sub	r3, r3, r4
   34b04:	cmp	r5, r3
   34b08:	movle	r3, #0
   34b0c:	movgt	r3, #1
   34b10:	cmp	r3, #0
   34b14:	addeq	r4, r4, r5
   34b18:	mvnne	r4, #-2147483648	; 0x80000000
   34b1c:	mvn	r8, r7
   34b20:	lsr	r8, r8, #31
   34b24:	cmp	r7, r4
   34b28:	movge	r3, #0
   34b2c:	andlt	r3, r8, #1
   34b30:	cmp	r3, #0
   34b34:	movne	r4, r7
   34b38:	cmp	r6, #0
   34b3c:	blt	34c74 <__assert_fail@plt+0x23988>
   34b40:	cmp	r6, #0
   34b44:	beq	34d20 <__assert_fail@plt+0x23a34>
   34b48:	cmp	r4, #0
   34b4c:	blt	34cd0 <__assert_fail@plt+0x239e4>
   34b50:	mov	r1, r6
   34b54:	mvn	r0, #-2147483648	; 0x80000000
   34b58:	bl	35d68 <__assert_fail@plt+0x24a7c>
   34b5c:	cmp	r0, r4
   34b60:	movge	r0, #0
   34b64:	movlt	r0, #1
   34b68:	cmp	r0, #0
   34b6c:	mvnne	r3, #-2147483648	; 0x80000000
   34b70:	strne	r3, [sp, #4]
   34b74:	beq	34d08 <__assert_fail@plt+0x23a1c>
   34b78:	mov	r1, r6
   34b7c:	ldr	r0, [sp, #4]
   34b80:	bl	35d68 <__assert_fail@plt+0x24a7c>
   34b84:	mov	r4, r0
   34b88:	mov	r1, r6
   34b8c:	ldr	r0, [sp, #4]
   34b90:	bl	35f88 <__assert_fail@plt+0x24c9c>
   34b94:	ldr	r3, [sp, #4]
   34b98:	sub	r1, r3, r1
   34b9c:	cmp	fp, #0
   34ba0:	moveq	r3, #0
   34ba4:	streq	r3, [sl]
   34ba8:	sub	r3, r4, r5
   34bac:	cmp	r3, r9
   34bb0:	bge	34c38 <__assert_fail@plt+0x2394c>
   34bb4:	cmp	r9, #0
   34bb8:	blt	34d2c <__assert_fail@plt+0x23a40>
   34bbc:	cmp	r5, #0
   34bc0:	blt	34d40 <__assert_fail@plt+0x23a54>
   34bc4:	mvn	r3, #-2147483648	; 0x80000000
   34bc8:	sub	r3, r3, r9
   34bcc:	cmp	r5, r3
   34bd0:	movle	r3, #0
   34bd4:	movgt	r3, #1
   34bd8:	cmp	r3, #0
   34bdc:	bne	34de8 <__assert_fail@plt+0x23afc>
   34be0:	add	r5, r5, r9
   34be4:	mov	r4, r5
   34be8:	cmp	r7, r5
   34bec:	movge	r7, #0
   34bf0:	andlt	r7, r8, #1
   34bf4:	cmp	r7, #0
   34bf8:	bne	34de8 <__assert_fail@plt+0x23afc>
   34bfc:	cmp	r6, #0
   34c00:	blt	34d54 <__assert_fail@plt+0x23a68>
   34c04:	cmp	r6, #0
   34c08:	beq	34c34 <__assert_fail@plt+0x23948>
   34c0c:	cmp	r5, #0
   34c10:	blt	34db0 <__assert_fail@plt+0x23ac4>
   34c14:	mov	r1, r6
   34c18:	mvn	r0, #-2147483648	; 0x80000000
   34c1c:	bl	35d68 <__assert_fail@plt+0x24a7c>
   34c20:	cmp	r5, r0
   34c24:	movle	r0, #0
   34c28:	movgt	r0, #1
   34c2c:	cmp	r0, #0
   34c30:	bne	34de8 <__assert_fail@plt+0x23afc>
   34c34:	mul	r1, r5, r6
   34c38:	mov	r0, fp
   34c3c:	bl	34954 <__assert_fail@plt+0x23668>
   34c40:	str	r4, [sl]
   34c44:	add	sp, sp, #12
   34c48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34c4c:	rsb	r3, r4, #-2147483648	; 0x80000000
   34c50:	cmp	r5, r3
   34c54:	movge	r3, #0
   34c58:	movlt	r3, #1
   34c5c:	b	34b10 <__assert_fail@plt+0x23824>
   34c60:	rsb	r3, r5, #-2147483648	; 0x80000000
   34c64:	cmp	r4, r3
   34c68:	movge	r3, #0
   34c6c:	movlt	r3, #1
   34c70:	b	34b10 <__assert_fail@plt+0x23824>
   34c74:	cmp	r4, #0
   34c78:	blt	34ca0 <__assert_fail@plt+0x239b4>
   34c7c:	cmn	r6, #1
   34c80:	beq	34cbc <__assert_fail@plt+0x239d0>
   34c84:	mov	r1, r6
   34c88:	mov	r0, #-2147483648	; 0x80000000
   34c8c:	bl	35d68 <__assert_fail@plt+0x24a7c>
   34c90:	cmp	r0, r4
   34c94:	movge	r0, #0
   34c98:	movlt	r0, #1
   34c9c:	b	34b68 <__assert_fail@plt+0x2387c>
   34ca0:	mov	r1, r6
   34ca4:	mvn	r0, #-2147483648	; 0x80000000
   34ca8:	bl	35d68 <__assert_fail@plt+0x24a7c>
   34cac:	cmp	r0, r4
   34cb0:	movle	r0, #0
   34cb4:	movgt	r0, #1
   34cb8:	b	34b68 <__assert_fail@plt+0x2387c>
   34cbc:	add	r0, r4, #-2147483648	; 0x80000000
   34cc0:	cmp	r0, #0
   34cc4:	movle	r0, #0
   34cc8:	movgt	r0, #1
   34ccc:	b	34b68 <__assert_fail@plt+0x2387c>
   34cd0:	cmn	r4, #1
   34cd4:	beq	34cf4 <__assert_fail@plt+0x23a08>
   34cd8:	mov	r1, r4
   34cdc:	mov	r0, #-2147483648	; 0x80000000
   34ce0:	bl	35d68 <__assert_fail@plt+0x24a7c>
   34ce4:	cmp	r6, r0
   34ce8:	movle	r0, #0
   34cec:	movgt	r0, #1
   34cf0:	b	34b68 <__assert_fail@plt+0x2387c>
   34cf4:	add	r0, r6, #-2147483648	; 0x80000000
   34cf8:	cmp	r0, #0
   34cfc:	movle	r0, #0
   34d00:	movgt	r0, #1
   34d04:	b	34b68 <__assert_fail@plt+0x2387c>
   34d08:	mul	r1, r6, r4
   34d0c:	cmp	r1, #63	; 0x3f
   34d10:	movle	r3, #64	; 0x40
   34d14:	strle	r3, [sp, #4]
   34d18:	bgt	34b9c <__assert_fail@plt+0x238b0>
   34d1c:	b	34b78 <__assert_fail@plt+0x2388c>
   34d20:	mov	r3, #64	; 0x40
   34d24:	str	r3, [sp, #4]
   34d28:	b	34b78 <__assert_fail@plt+0x2388c>
   34d2c:	rsb	r3, r9, #-2147483648	; 0x80000000
   34d30:	cmp	r5, r3
   34d34:	movge	r3, #0
   34d38:	movlt	r3, #1
   34d3c:	b	34bd8 <__assert_fail@plt+0x238ec>
   34d40:	rsb	r3, r5, #-2147483648	; 0x80000000
   34d44:	cmp	r9, r3
   34d48:	movge	r3, #0
   34d4c:	movlt	r3, #1
   34d50:	b	34bd8 <__assert_fail@plt+0x238ec>
   34d54:	cmp	r5, #0
   34d58:	blt	34d80 <__assert_fail@plt+0x23a94>
   34d5c:	cmn	r6, #1
   34d60:	beq	34d9c <__assert_fail@plt+0x23ab0>
   34d64:	mov	r1, r6
   34d68:	mov	r0, #-2147483648	; 0x80000000
   34d6c:	bl	35d68 <__assert_fail@plt+0x24a7c>
   34d70:	cmp	r5, r0
   34d74:	movle	r0, #0
   34d78:	movgt	r0, #1
   34d7c:	b	34c2c <__assert_fail@plt+0x23940>
   34d80:	mov	r1, r6
   34d84:	mvn	r0, #-2147483648	; 0x80000000
   34d88:	bl	35d68 <__assert_fail@plt+0x24a7c>
   34d8c:	cmp	r5, r0
   34d90:	movge	r0, #0
   34d94:	movlt	r0, #1
   34d98:	b	34c2c <__assert_fail@plt+0x23940>
   34d9c:	add	r0, r5, #-2147483648	; 0x80000000
   34da0:	cmp	r0, #0
   34da4:	movle	r0, #0
   34da8:	movgt	r0, #1
   34dac:	b	34c2c <__assert_fail@plt+0x23940>
   34db0:	cmn	r5, #1
   34db4:	beq	34dd4 <__assert_fail@plt+0x23ae8>
   34db8:	mov	r1, r5
   34dbc:	mov	r0, #-2147483648	; 0x80000000
   34dc0:	bl	35d68 <__assert_fail@plt+0x24a7c>
   34dc4:	cmp	r6, r0
   34dc8:	movle	r0, #0
   34dcc:	movgt	r0, #1
   34dd0:	b	34c2c <__assert_fail@plt+0x23940>
   34dd4:	add	r0, r6, #-2147483648	; 0x80000000
   34dd8:	cmp	r0, #0
   34ddc:	movle	r0, #0
   34de0:	movgt	r0, #1
   34de4:	b	34c2c <__assert_fail@plt+0x23940>
   34de8:	bl	34ec4 <__assert_fail@plt+0x23bd8>
   34dec:	push	{r4, lr}
   34df0:	bl	355dc <__assert_fail@plt+0x242f0>
   34df4:	cmp	r0, #0
   34df8:	popne	{r4, pc}
   34dfc:	bl	34ec4 <__assert_fail@plt+0x23bd8>
   34e00:	push	{r4, lr}
   34e04:	mov	r1, #1
   34e08:	bl	34dec <__assert_fail@plt+0x23b00>
   34e0c:	pop	{r4, pc}
   34e10:	push	{r4, lr}
   34e14:	bl	355dc <__assert_fail@plt+0x242f0>
   34e18:	cmp	r0, #0
   34e1c:	popne	{r4, pc}
   34e20:	bl	34ec4 <__assert_fail@plt+0x23bd8>
   34e24:	push	{r4, lr}
   34e28:	mov	r1, #1
   34e2c:	bl	34e10 <__assert_fail@plt+0x23b24>
   34e30:	pop	{r4, pc}
   34e34:	push	{r4, r5, r6, lr}
   34e38:	mov	r5, r0
   34e3c:	mov	r4, r1
   34e40:	mov	r0, r1
   34e44:	bl	34920 <__assert_fail@plt+0x23634>
   34e48:	mov	r2, r4
   34e4c:	mov	r1, r5
   34e50:	bl	11058 <memcpy@plt>
   34e54:	pop	{r4, r5, r6, pc}
   34e58:	push	{r4, r5, r6, lr}
   34e5c:	mov	r5, r0
   34e60:	mov	r4, r1
   34e64:	mov	r0, r1
   34e68:	bl	34934 <__assert_fail@plt+0x23648>
   34e6c:	mov	r2, r4
   34e70:	mov	r1, r5
   34e74:	bl	11058 <memcpy@plt>
   34e78:	pop	{r4, r5, r6, pc}
   34e7c:	push	{r4, r5, r6, lr}
   34e80:	mov	r5, r0
   34e84:	mov	r4, r1
   34e88:	add	r0, r1, #1
   34e8c:	bl	34934 <__assert_fail@plt+0x23648>
   34e90:	mov	r2, #0
   34e94:	strb	r2, [r0, r4]
   34e98:	mov	r2, r4
   34e9c:	mov	r1, r5
   34ea0:	bl	11058 <memcpy@plt>
   34ea4:	pop	{r4, r5, r6, pc}
   34ea8:	push	{r4, lr}
   34eac:	mov	r4, r0
   34eb0:	bl	111a8 <strlen@plt>
   34eb4:	add	r1, r0, #1
   34eb8:	mov	r0, r4
   34ebc:	bl	34e34 <__assert_fail@plt+0x23b48>
   34ec0:	pop	{r4, pc}
   34ec4:	push	{r4, lr}
   34ec8:	ldr	r3, [pc, #40]	; 34ef8 <__assert_fail@plt+0x23c0c>
   34ecc:	ldr	r4, [r3]
   34ed0:	mov	r2, #5
   34ed4:	ldr	r1, [pc, #32]	; 34efc <__assert_fail@plt+0x23c10>
   34ed8:	mov	r0, #0
   34edc:	bl	110a0 <dcgettext@plt>
   34ee0:	mov	r3, r0
   34ee4:	ldr	r2, [pc, #20]	; 34f00 <__assert_fail@plt+0x23c14>
   34ee8:	mov	r1, #0
   34eec:	mov	r0, r4
   34ef0:	bl	11124 <error@plt>
   34ef4:	bl	112c8 <abort@plt>
   34ef8:	andeq	sl, r4, r0, asr #2
   34efc:	andeq	r9, r3, r4, ror #28
   34f00:	andeq	r7, r3, ip, asr r1
   34f04:	push	{r4, r5, r6, r7, lr}
   34f08:	sub	sp, sp, #20
   34f0c:	mov	r7, r0
   34f10:	mov	r4, r2
   34f14:	mov	r5, r3
   34f18:	ldr	r6, [sp, #56]	; 0x38
   34f1c:	ldr	r3, [sp, #48]	; 0x30
   34f20:	str	r3, [sp]
   34f24:	add	r3, sp, #8
   34f28:	mov	r2, r1
   34f2c:	mov	r1, #0
   34f30:	bl	3515c <__assert_fail@plt+0x23e70>
   34f34:	cmp	r0, #0
   34f38:	bne	34fb8 <__assert_fail@plt+0x23ccc>
   34f3c:	ldrd	r0, [sp, #8]
   34f40:	ldrd	r2, [sp, #40]	; 0x28
   34f44:	cmp	r1, r3
   34f48:	cmpeq	r0, r2
   34f4c:	movhi	r3, #1
   34f50:	movls	r3, #0
   34f54:	cmp	r1, r5
   34f58:	cmpeq	r0, r4
   34f5c:	orrcc	r3, r3, #1
   34f60:	cmp	r3, #0
   34f64:	beq	35030 <__assert_fail@plt+0x23d44>
   34f68:	mvn	r2, #-1073741824	; 0xc0000000
   34f6c:	mov	r3, #0
   34f70:	cmp	r1, r3
   34f74:	cmpeq	r0, r2
   34f78:	bls	34fa8 <__assert_fail@plt+0x23cbc>
   34f7c:	bl	111c0 <__errno_location@plt>
   34f80:	mov	r3, #75	; 0x4b
   34f84:	str	r3, [r0]
   34f88:	cmp	r6, #0
   34f8c:	bne	35008 <__assert_fail@plt+0x23d1c>
   34f90:	mov	r6, #1
   34f94:	bl	111c0 <__errno_location@plt>
   34f98:	ldr	r4, [r0]
   34f9c:	cmp	r4, #22
   34fa0:	moveq	r4, #0
   34fa4:	b	35010 <__assert_fail@plt+0x23d24>
   34fa8:	bl	111c0 <__errno_location@plt>
   34fac:	mov	r3, #34	; 0x22
   34fb0:	str	r3, [r0]
   34fb4:	b	34f88 <__assert_fail@plt+0x23c9c>
   34fb8:	cmp	r0, #1
   34fbc:	beq	34fd4 <__assert_fail@plt+0x23ce8>
   34fc0:	cmp	r0, #3
   34fc4:	beq	34ff8 <__assert_fail@plt+0x23d0c>
   34fc8:	cmp	r6, #0
   34fcc:	moveq	r6, #1
   34fd0:	b	34f94 <__assert_fail@plt+0x23ca8>
   34fd4:	bl	111c0 <__errno_location@plt>
   34fd8:	mov	r3, #75	; 0x4b
   34fdc:	str	r3, [r0]
   34fe0:	cmp	r6, #0
   34fe4:	bne	34f94 <__assert_fail@plt+0x23ca8>
   34fe8:	bl	111c0 <__errno_location@plt>
   34fec:	ldr	r4, [r0]
   34ff0:	mov	r6, #1
   34ff4:	b	35010 <__assert_fail@plt+0x23d24>
   34ff8:	bl	111c0 <__errno_location@plt>
   34ffc:	mov	r3, #0
   35000:	str	r3, [r0]
   35004:	b	34fe0 <__assert_fail@plt+0x23cf4>
   35008:	bl	111c0 <__errno_location@plt>
   3500c:	ldr	r4, [r0]
   35010:	mov	r0, r7
   35014:	bl	34374 <__assert_fail@plt+0x23088>
   35018:	str	r0, [sp]
   3501c:	ldr	r3, [sp, #52]	; 0x34
   35020:	ldr	r2, [pc, #16]	; 35038 <__assert_fail@plt+0x23d4c>
   35024:	mov	r1, r4
   35028:	mov	r0, r6
   3502c:	bl	11124 <error@plt>
   35030:	add	sp, sp, #20
   35034:	pop	{r4, r5, r6, r7, pc}
   35038:	andeq	r9, r3, r4, lsr #16
   3503c:	push	{r4, r5, lr}
   35040:	sub	sp, sp, #28
   35044:	ldr	r1, [sp, #56]	; 0x38
   35048:	str	r1, [sp, #16]
   3504c:	ldr	r1, [sp, #52]	; 0x34
   35050:	str	r1, [sp, #12]
   35054:	ldr	r1, [sp, #48]	; 0x30
   35058:	str	r1, [sp, #8]
   3505c:	ldrd	r4, [sp, #40]	; 0x28
   35060:	strd	r4, [sp]
   35064:	mov	r1, #10
   35068:	bl	34f04 <__assert_fail@plt+0x23c18>
   3506c:	add	sp, sp, #28
   35070:	pop	{r4, r5, pc}
   35074:	push	{r4, r5, r6, lr}
   35078:	mov	r5, r0
   3507c:	subs	r4, r1, #0
   35080:	blt	350d4 <__assert_fail@plt+0x23de8>
   35084:	cmp	r4, #0
   35088:	moveq	r3, #0
   3508c:	beq	350b8 <__assert_fail@plt+0x23dcc>
   35090:	mov	r2, r4
   35094:	asr	r3, r4, #31
   35098:	mvn	r0, #0
   3509c:	mvn	r1, #0
   350a0:	bl	36360 <__assert_fail@plt+0x25074>
   350a4:	ldrd	r2, [r5]
   350a8:	cmp	r1, r3
   350ac:	cmpeq	r0, r2
   350b0:	movcc	r3, #1
   350b4:	movcs	r3, #0
   350b8:	cmp	r3, #0
   350bc:	beq	350f4 <__assert_fail@plt+0x23e08>
   350c0:	mvn	r2, #0
   350c4:	mvn	r3, #0
   350c8:	strd	r2, [r5]
   350cc:	mov	r0, #1
   350d0:	pop	{r4, r5, r6, pc}
   350d4:	mov	r1, r4
   350d8:	mov	r0, #0
   350dc:	bl	35d68 <__assert_fail@plt+0x24a7c>
   350e0:	ldrd	r2, [r5]
   350e4:	orrs	r3, r2, r3
   350e8:	movne	r3, #1
   350ec:	moveq	r3, #0
   350f0:	b	350b8 <__assert_fail@plt+0x23dcc>
   350f4:	asr	r3, r4, #31
   350f8:	ldr	r1, [r5, #4]
   350fc:	ldr	r2, [r5]
   35100:	mul	r3, r3, r2
   35104:	mla	r1, r4, r1, r3
   35108:	umull	r2, r3, r2, r4
   3510c:	add	r3, r1, r3
   35110:	strd	r2, [r5]
   35114:	mov	r0, #0
   35118:	pop	{r4, r5, r6, pc}
   3511c:	push	{r4, r5, r6, r7, r8, lr}
   35120:	subs	r4, r2, #0
   35124:	beq	35154 <__assert_fail@plt+0x23e68>
   35128:	mov	r7, r1
   3512c:	mov	r6, r0
   35130:	mov	r5, #0
   35134:	mov	r1, r7
   35138:	mov	r0, r6
   3513c:	bl	35074 <__assert_fail@plt+0x23d88>
   35140:	orr	r5, r5, r0
   35144:	subs	r4, r4, #1
   35148:	bne	35134 <__assert_fail@plt+0x23e48>
   3514c:	mov	r0, r5
   35150:	pop	{r4, r5, r6, r7, r8, pc}
   35154:	mov	r5, #0
   35158:	b	3514c <__assert_fail@plt+0x23e60>
   3515c:	push	{r4, r5, r6, r7, r8, r9, lr}
   35160:	sub	sp, sp, #20
   35164:	cmp	r2, #36	; 0x24
   35168:	bhi	351a8 <__assert_fail@plt+0x23ebc>
   3516c:	mov	r5, r0
   35170:	mov	r6, r1
   35174:	mov	r7, r2
   35178:	mov	r9, r3
   3517c:	cmp	r1, #0
   35180:	addeq	r6, sp, #12
   35184:	bl	111c0 <__errno_location@plt>
   35188:	mov	r8, r0
   3518c:	mov	r3, #0
   35190:	str	r3, [r0]
   35194:	ldrb	r4, [r5]
   35198:	bl	11184 <__ctype_b_loc@plt>
   3519c:	ldr	r1, [r0]
   351a0:	mov	r2, r5
   351a4:	b	351c0 <__assert_fail@plt+0x23ed4>
   351a8:	ldr	r3, [pc, #1056]	; 355d0 <__assert_fail@plt+0x242e4>
   351ac:	mov	r2, #85	; 0x55
   351b0:	ldr	r1, [pc, #1052]	; 355d4 <__assert_fail@plt+0x242e8>
   351b4:	ldr	r0, [pc, #1052]	; 355d8 <__assert_fail@plt+0x242ec>
   351b8:	bl	112ec <__assert_fail@plt>
   351bc:	ldrb	r4, [r2, #1]!
   351c0:	lsl	r3, r4, #1
   351c4:	ldrh	r3, [r1, r3]
   351c8:	tst	r3, #8192	; 0x2000
   351cc:	bne	351bc <__assert_fail@plt+0x23ed0>
   351d0:	cmp	r4, #45	; 0x2d
   351d4:	moveq	r4, #4
   351d8:	bne	351e8 <__assert_fail@plt+0x23efc>
   351dc:	mov	r0, r4
   351e0:	add	sp, sp, #20
   351e4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   351e8:	mov	r3, #0
   351ec:	mov	r2, r7
   351f0:	mov	r1, r6
   351f4:	mov	r0, r5
   351f8:	bl	11064 <__strtoull_internal@plt>
   351fc:	strd	r0, [sp]
   35200:	ldr	r7, [r6]
   35204:	cmp	r5, r7
   35208:	beq	3522c <__assert_fail@plt+0x23f40>
   3520c:	ldr	r3, [r8]
   35210:	cmp	r3, #0
   35214:	beq	35274 <__assert_fail@plt+0x23f88>
   35218:	cmp	r3, #34	; 0x22
   3521c:	moveq	r4, #1
   35220:	beq	35278 <__assert_fail@plt+0x23f8c>
   35224:	mov	r4, #4
   35228:	b	351dc <__assert_fail@plt+0x23ef0>
   3522c:	ldr	r3, [sp, #48]	; 0x30
   35230:	cmp	r3, #0
   35234:	moveq	r4, #4
   35238:	beq	351dc <__assert_fail@plt+0x23ef0>
   3523c:	ldrb	r1, [r7]
   35240:	cmp	r1, #0
   35244:	moveq	r4, #4
   35248:	beq	351dc <__assert_fail@plt+0x23ef0>
   3524c:	mov	r0, r3
   35250:	bl	111b4 <strchr@plt>
   35254:	cmp	r0, #0
   35258:	moveq	r4, #4
   3525c:	beq	351dc <__assert_fail@plt+0x23ef0>
   35260:	mov	r2, #1
   35264:	mov	r3, #0
   35268:	strd	r2, [sp]
   3526c:	mov	r4, #0
   35270:	b	35284 <__assert_fail@plt+0x23f98>
   35274:	mov	r4, #0
   35278:	ldr	r3, [sp, #48]	; 0x30
   3527c:	cmp	r3, #0
   35280:	beq	35374 <__assert_fail@plt+0x24088>
   35284:	ldrb	r5, [r7]
   35288:	cmp	r5, #0
   3528c:	beq	3550c <__assert_fail@plt+0x24220>
   35290:	mov	r1, r5
   35294:	ldr	r0, [sp, #48]	; 0x30
   35298:	bl	111b4 <strchr@plt>
   3529c:	cmp	r0, #0
   352a0:	beq	3537c <__assert_fail@plt+0x24090>
   352a4:	sub	r3, r5, #69	; 0x45
   352a8:	cmp	r3, #47	; 0x2f
   352ac:	ldrls	pc, [pc, r3, lsl #2]
   352b0:	b	353e8 <__assert_fail@plt+0x240fc>
   352b4:	andeq	r5, r3, ip, lsl #7
   352b8:	andeq	r5, r3, r8, ror #7
   352bc:	andeq	r5, r3, ip, lsl #7
   352c0:	andeq	r5, r3, r8, ror #7
   352c4:	andeq	r5, r3, r8, ror #7
   352c8:	andeq	r5, r3, r8, ror #7
   352cc:	andeq	r5, r3, ip, lsl #7
   352d0:	andeq	r5, r3, r8, ror #7
   352d4:	andeq	r5, r3, ip, lsl #7
   352d8:	andeq	r5, r3, r8, ror #7
   352dc:	andeq	r5, r3, r8, ror #7
   352e0:	andeq	r5, r3, ip, lsl #7
   352e4:	andeq	r5, r3, r8, ror #7
   352e8:	andeq	r5, r3, r8, ror #7
   352ec:	andeq	r5, r3, r8, ror #7
   352f0:	andeq	r5, r3, ip, lsl #7
   352f4:	andeq	r5, r3, r8, ror #7
   352f8:	andeq	r5, r3, r8, ror #7
   352fc:	andeq	r5, r3, r8, ror #7
   35300:	andeq	r5, r3, r8, ror #7
   35304:	andeq	r5, r3, ip, lsl #7
   35308:	andeq	r5, r3, ip, lsl #7
   3530c:	andeq	r5, r3, r8, ror #7
   35310:	andeq	r5, r3, r8, ror #7
   35314:	andeq	r5, r3, r8, ror #7
   35318:	andeq	r5, r3, r8, ror #7
   3531c:	andeq	r5, r3, r8, ror #7
   35320:	andeq	r5, r3, r8, ror #7
   35324:	andeq	r5, r3, r8, ror #7
   35328:	andeq	r5, r3, r8, ror #7
   3532c:	andeq	r5, r3, r8, ror #7
   35330:	andeq	r5, r3, r8, ror #7
   35334:	andeq	r5, r3, r8, ror #7
   35338:	andeq	r5, r3, r8, ror #7
   3533c:	andeq	r5, r3, ip, lsl #7
   35340:	andeq	r5, r3, r8, ror #7
   35344:	andeq	r5, r3, r8, ror #7
   35348:	andeq	r5, r3, r8, ror #7
   3534c:	andeq	r5, r3, ip, lsl #7
   35350:	andeq	r5, r3, r8, ror #7
   35354:	andeq	r5, r3, ip, lsl #7
   35358:	andeq	r5, r3, r8, ror #7
   3535c:	andeq	r5, r3, r8, ror #7
   35360:	andeq	r5, r3, r8, ror #7
   35364:	andeq	r5, r3, r8, ror #7
   35368:	andeq	r5, r3, r8, ror #7
   3536c:	andeq	r5, r3, r8, ror #7
   35370:	andeq	r5, r3, ip, lsl #7
   35374:	strd	r0, [r9]
   35378:	b	351dc <__assert_fail@plt+0x23ef0>
   3537c:	ldrd	r2, [sp]
   35380:	strd	r2, [r9]
   35384:	orr	r4, r4, #2
   35388:	b	351dc <__assert_fail@plt+0x23ef0>
   3538c:	mov	r1, #48	; 0x30
   35390:	ldr	r0, [sp, #48]	; 0x30
   35394:	bl	111b4 <strchr@plt>
   35398:	cmp	r0, #0
   3539c:	beq	354d8 <__assert_fail@plt+0x241ec>
   353a0:	ldrb	r3, [r7, #1]
   353a4:	cmp	r3, #68	; 0x44
   353a8:	beq	353c4 <__assert_fail@plt+0x240d8>
   353ac:	cmp	r3, #105	; 0x69
   353b0:	beq	353d0 <__assert_fail@plt+0x240e4>
   353b4:	cmp	r3, #66	; 0x42
   353b8:	movne	r7, #1
   353bc:	movne	r1, #1024	; 0x400
   353c0:	bne	353f0 <__assert_fail@plt+0x24104>
   353c4:	mov	r7, #2
   353c8:	mov	r1, #1000	; 0x3e8
   353cc:	b	353f0 <__assert_fail@plt+0x24104>
   353d0:	ldrb	r7, [r7, #2]
   353d4:	cmp	r7, #66	; 0x42
   353d8:	movne	r7, #1
   353dc:	moveq	r7, #3
   353e0:	mov	r1, #1024	; 0x400
   353e4:	b	353f0 <__assert_fail@plt+0x24104>
   353e8:	mov	r7, #1
   353ec:	mov	r1, #1024	; 0x400
   353f0:	sub	r5, r5, #66	; 0x42
   353f4:	cmp	r5, #53	; 0x35
   353f8:	ldrls	pc, [pc, r5, lsl #2]
   353fc:	b	355b8 <__assert_fail@plt+0x242cc>
   35400:	andeq	r5, r3, r8, lsl r5
   35404:			; <UNDEFINED> instruction: 0x000355b8
   35408:			; <UNDEFINED> instruction: 0x000355b8
   3540c:	andeq	r5, r3, r8, lsr #10
   35410:			; <UNDEFINED> instruction: 0x000355b8
   35414:	andeq	r5, r3, r8, lsr r5
   35418:			; <UNDEFINED> instruction: 0x000355b8
   3541c:			; <UNDEFINED> instruction: 0x000355b8
   35420:			; <UNDEFINED> instruction: 0x000355b8
   35424:	andeq	r5, r3, r8, asr #10
   35428:			; <UNDEFINED> instruction: 0x000355b8
   3542c:	andeq	r5, r3, r8, asr r5
   35430:			; <UNDEFINED> instruction: 0x000355b8
   35434:			; <UNDEFINED> instruction: 0x000355b8
   35438:	andeq	r5, r3, r8, ror #10
   3543c:			; <UNDEFINED> instruction: 0x000355b8
   35440:			; <UNDEFINED> instruction: 0x000355b8
   35444:			; <UNDEFINED> instruction: 0x000355b8
   35448:	andeq	r5, r3, r8, ror r5
   3544c:			; <UNDEFINED> instruction: 0x000355b8
   35450:			; <UNDEFINED> instruction: 0x000355b8
   35454:			; <UNDEFINED> instruction: 0x000355b8
   35458:			; <UNDEFINED> instruction: 0x000355b8
   3545c:	muleq	r3, r8, r5
   35460:	andeq	r5, r3, r8, lsr #11
   35464:			; <UNDEFINED> instruction: 0x000355b8
   35468:			; <UNDEFINED> instruction: 0x000355b8
   3546c:			; <UNDEFINED> instruction: 0x000355b8
   35470:			; <UNDEFINED> instruction: 0x000355b8
   35474:			; <UNDEFINED> instruction: 0x000355b8
   35478:			; <UNDEFINED> instruction: 0x000355b8
   3547c:			; <UNDEFINED> instruction: 0x000355b8
   35480:	andeq	r5, r3, r4, ror #9
   35484:	andeq	r5, r3, r8, asr #11
   35488:			; <UNDEFINED> instruction: 0x000355b8
   3548c:			; <UNDEFINED> instruction: 0x000355b8
   35490:			; <UNDEFINED> instruction: 0x000355b8
   35494:	andeq	r5, r3, r8, lsr r5
   35498:			; <UNDEFINED> instruction: 0x000355b8
   3549c:			; <UNDEFINED> instruction: 0x000355b8
   354a0:			; <UNDEFINED> instruction: 0x000355b8
   354a4:	andeq	r5, r3, r8, asr #10
   354a8:			; <UNDEFINED> instruction: 0x000355b8
   354ac:	andeq	r5, r3, r8, asr r5
   354b0:			; <UNDEFINED> instruction: 0x000355b8
   354b4:			; <UNDEFINED> instruction: 0x000355b8
   354b8:			; <UNDEFINED> instruction: 0x000355b8
   354bc:			; <UNDEFINED> instruction: 0x000355b8
   354c0:			; <UNDEFINED> instruction: 0x000355b8
   354c4:			; <UNDEFINED> instruction: 0x000355b8
   354c8:	andeq	r5, r3, r8, ror r5
   354cc:			; <UNDEFINED> instruction: 0x000355b8
   354d0:			; <UNDEFINED> instruction: 0x000355b8
   354d4:	andeq	r5, r3, r8, lsl #11
   354d8:	mov	r7, #1
   354dc:	mov	r1, #1024	; 0x400
   354e0:	b	353f0 <__assert_fail@plt+0x24104>
   354e4:	mov	r1, #512	; 0x200
   354e8:	mov	r0, sp
   354ec:	bl	35074 <__assert_fail@plt+0x23d88>
   354f0:	orr	r4, r4, r0
   354f4:	ldr	r3, [r6]
   354f8:	add	r2, r3, r7
   354fc:	str	r2, [r6]
   35500:	ldrb	r3, [r3, r7]
   35504:	cmp	r3, #0
   35508:	orrne	r4, r4, #2
   3550c:	ldrd	r2, [sp]
   35510:	strd	r2, [r9]
   35514:	b	351dc <__assert_fail@plt+0x23ef0>
   35518:	mov	r1, #1024	; 0x400
   3551c:	mov	r0, sp
   35520:	bl	35074 <__assert_fail@plt+0x23d88>
   35524:	b	354f0 <__assert_fail@plt+0x24204>
   35528:	mov	r2, #6
   3552c:	mov	r0, sp
   35530:	bl	3511c <__assert_fail@plt+0x23e30>
   35534:	b	354f0 <__assert_fail@plt+0x24204>
   35538:	mov	r2, #3
   3553c:	mov	r0, sp
   35540:	bl	3511c <__assert_fail@plt+0x23e30>
   35544:	b	354f0 <__assert_fail@plt+0x24204>
   35548:	mov	r2, #1
   3554c:	mov	r0, sp
   35550:	bl	3511c <__assert_fail@plt+0x23e30>
   35554:	b	354f0 <__assert_fail@plt+0x24204>
   35558:	mov	r2, #2
   3555c:	mov	r0, sp
   35560:	bl	3511c <__assert_fail@plt+0x23e30>
   35564:	b	354f0 <__assert_fail@plt+0x24204>
   35568:	mov	r2, #5
   3556c:	mov	r0, sp
   35570:	bl	3511c <__assert_fail@plt+0x23e30>
   35574:	b	354f0 <__assert_fail@plt+0x24204>
   35578:	mov	r2, #4
   3557c:	mov	r0, sp
   35580:	bl	3511c <__assert_fail@plt+0x23e30>
   35584:	b	354f0 <__assert_fail@plt+0x24204>
   35588:	mov	r1, #2
   3558c:	mov	r0, sp
   35590:	bl	35074 <__assert_fail@plt+0x23d88>
   35594:	b	354f0 <__assert_fail@plt+0x24204>
   35598:	mov	r2, #8
   3559c:	mov	r0, sp
   355a0:	bl	3511c <__assert_fail@plt+0x23e30>
   355a4:	b	354f0 <__assert_fail@plt+0x24204>
   355a8:	mov	r2, #7
   355ac:	mov	r0, sp
   355b0:	bl	3511c <__assert_fail@plt+0x23e30>
   355b4:	b	354f0 <__assert_fail@plt+0x24204>
   355b8:	ldrd	r2, [sp]
   355bc:	strd	r2, [r9]
   355c0:	orr	r4, r4, #2
   355c4:	b	351dc <__assert_fail@plt+0x23ef0>
   355c8:	mov	r0, #0
   355cc:	b	354f0 <__assert_fail@plt+0x24204>
   355d0:	andeq	r9, r3, r8, ror lr
   355d4:	andeq	r9, r3, r4, lsl #29
   355d8:	muleq	r3, r4, lr
   355dc:	push	{r4, lr}
   355e0:	mov	r2, r0
   355e4:	mov	r3, r1
   355e8:	cmp	r1, #0
   355ec:	cmpne	r0, #0
   355f0:	moveq	r3, #1
   355f4:	moveq	r2, r3
   355f8:	umull	r0, r1, r2, r3
   355fc:	cmp	r0, #0
   35600:	cmpge	r1, #0
   35604:	bne	35618 <__assert_fail@plt+0x2432c>
   35608:	mov	r1, r3
   3560c:	mov	r0, r2
   35610:	bl	10fd4 <calloc@plt>
   35614:	pop	{r4, pc}
   35618:	bl	111c0 <__errno_location@plt>
   3561c:	mov	r3, #12
   35620:	str	r3, [r0]
   35624:	mov	r0, #0
   35628:	pop	{r4, pc}
   3562c:	push	{r4, lr}
   35630:	cmp	r0, #0
   35634:	moveq	r0, #1
   35638:	cmp	r0, #0
   3563c:	blt	35648 <__assert_fail@plt+0x2435c>
   35640:	bl	1113c <malloc@plt>
   35644:	pop	{r4, pc}
   35648:	bl	111c0 <__errno_location@plt>
   3564c:	mov	r3, #12
   35650:	str	r3, [r0]
   35654:	mov	r0, #0
   35658:	pop	{r4, pc}
   3565c:	push	{r4, lr}
   35660:	cmp	r0, #0
   35664:	beq	35680 <__assert_fail@plt+0x24394>
   35668:	cmp	r1, #0
   3566c:	beq	3568c <__assert_fail@plt+0x243a0>
   35670:	cmp	r1, #0
   35674:	blt	35698 <__assert_fail@plt+0x243ac>
   35678:	bl	110ac <realloc@plt>
   3567c:	pop	{r4, pc}
   35680:	mov	r0, r1
   35684:	bl	3562c <__assert_fail@plt+0x24340>
   35688:	pop	{r4, pc}
   3568c:	bl	31c0c <__assert_fail@plt+0x20920>
   35690:	mov	r0, #0
   35694:	pop	{r4, pc}
   35698:	bl	111c0 <__errno_location@plt>
   3569c:	mov	r3, #12
   356a0:	str	r3, [r0]
   356a4:	mov	r0, #0
   356a8:	pop	{r4, pc}
   356ac:	push	{r4, r5, r6, lr}
   356b0:	mov	r5, r0
   356b4:	bl	1110c <__fpending@plt>
   356b8:	mov	r6, r0
   356bc:	ldr	r4, [r5]
   356c0:	and	r4, r4, #32
   356c4:	mov	r0, r5
   356c8:	bl	31a64 <__assert_fail@plt+0x20778>
   356cc:	cmp	r4, #0
   356d0:	bne	356f8 <__assert_fail@plt+0x2440c>
   356d4:	cmp	r0, #0
   356d8:	popeq	{r4, r5, r6, pc}
   356dc:	cmp	r6, #0
   356e0:	bne	35714 <__assert_fail@plt+0x24428>
   356e4:	bl	111c0 <__errno_location@plt>
   356e8:	ldr	r0, [r0]
   356ec:	subs	r0, r0, #9
   356f0:	mvnne	r0, #0
   356f4:	pop	{r4, r5, r6, pc}
   356f8:	cmp	r0, #0
   356fc:	bne	3571c <__assert_fail@plt+0x24430>
   35700:	bl	111c0 <__errno_location@plt>
   35704:	mov	r3, #0
   35708:	str	r3, [r0]
   3570c:	mvn	r0, #0
   35710:	pop	{r4, r5, r6, pc}
   35714:	mvn	r0, #0
   35718:	pop	{r4, r5, r6, pc}
   3571c:	mvn	r0, #0
   35720:	pop	{r4, r5, r6, pc}
   35724:	push	{r1, r2, r3}
   35728:	push	{r4, r5, r6, lr}
   3572c:	sub	sp, sp, #12
   35730:	mov	r5, r0
   35734:	ldr	r1, [sp, #28]
   35738:	add	r3, sp, #32
   3573c:	str	r3, [sp, #4]
   35740:	cmp	r1, #0
   35744:	beq	3578c <__assert_fail@plt+0x244a0>
   35748:	ldr	r3, [pc, #540]	; 3596c <__assert_fail@plt+0x24680>
   3574c:	cmp	r1, r3
   35750:	beq	357bc <__assert_fail@plt+0x244d0>
   35754:	cmp	r1, #11
   35758:	beq	3595c <__assert_fail@plt+0x24670>
   3575c:	bgt	358e8 <__assert_fail@plt+0x245fc>
   35760:	cmp	r1, #3
   35764:	beq	3595c <__assert_fail@plt+0x24670>
   35768:	ble	358a8 <__assert_fail@plt+0x245bc>
   3576c:	cmp	r1, #8
   35770:	beq	358c8 <__assert_fail@plt+0x245dc>
   35774:	ble	358c0 <__assert_fail@plt+0x245d4>
   35778:	cmp	r1, #9
   3577c:	beq	3595c <__assert_fail@plt+0x24670>
   35780:	cmp	r1, #10
   35784:	bne	35920 <__assert_fail@plt+0x24634>
   35788:	b	358c8 <__assert_fail@plt+0x245dc>
   3578c:	ldr	r3, [sp, #4]
   35790:	add	r2, r3, #4
   35794:	str	r2, [sp, #4]
   35798:	ldr	r2, [r3]
   3579c:	mov	r1, #0
   357a0:	bl	11238 <fcntl64@plt>
   357a4:	mov	r4, r0
   357a8:	mov	r0, r4
   357ac:	add	sp, sp, #12
   357b0:	pop	{r4, r5, r6, lr}
   357b4:	add	sp, sp, #12
   357b8:	bx	lr
   357bc:	ldr	r3, [sp, #4]
   357c0:	add	r2, r3, #4
   357c4:	str	r2, [sp, #4]
   357c8:	ldr	r6, [r3]
   357cc:	ldr	r3, [pc, #412]	; 35970 <__assert_fail@plt+0x24684>
   357d0:	ldr	r3, [r3]
   357d4:	cmp	r3, #0
   357d8:	blt	35838 <__assert_fail@plt+0x2454c>
   357dc:	mov	r2, r6
   357e0:	ldr	r1, [pc, #388]	; 3596c <__assert_fail@plt+0x24680>
   357e4:	bl	11238 <fcntl64@plt>
   357e8:	subs	r4, r0, #0
   357ec:	blt	35800 <__assert_fail@plt+0x24514>
   357f0:	mov	r2, #1
   357f4:	ldr	r3, [pc, #372]	; 35970 <__assert_fail@plt+0x24684>
   357f8:	str	r2, [r3]
   357fc:	b	357a8 <__assert_fail@plt+0x244bc>
   35800:	bl	111c0 <__errno_location@plt>
   35804:	ldr	r3, [r0]
   35808:	cmp	r3, #22
   3580c:	bne	357f0 <__assert_fail@plt+0x24504>
   35810:	mov	r2, r6
   35814:	mov	r1, #0
   35818:	mov	r0, r5
   3581c:	bl	11238 <fcntl64@plt>
   35820:	subs	r4, r0, #0
   35824:	blt	357a8 <__assert_fail@plt+0x244bc>
   35828:	mvn	r2, #0
   3582c:	ldr	r3, [pc, #316]	; 35970 <__assert_fail@plt+0x24684>
   35830:	str	r2, [r3]
   35834:	b	3585c <__assert_fail@plt+0x24570>
   35838:	mov	r2, r6
   3583c:	mov	r1, #0
   35840:	bl	11238 <fcntl64@plt>
   35844:	subs	r4, r0, #0
   35848:	blt	357a8 <__assert_fail@plt+0x244bc>
   3584c:	ldr	r3, [pc, #284]	; 35970 <__assert_fail@plt+0x24684>
   35850:	ldr	r3, [r3]
   35854:	cmn	r3, #1
   35858:	bne	357a8 <__assert_fail@plt+0x244bc>
   3585c:	mov	r1, #1
   35860:	mov	r0, r4
   35864:	bl	11238 <fcntl64@plt>
   35868:	subs	r2, r0, #0
   3586c:	blt	35888 <__assert_fail@plt+0x2459c>
   35870:	orr	r2, r2, #1
   35874:	mov	r1, #2
   35878:	mov	r0, r4
   3587c:	bl	11238 <fcntl64@plt>
   35880:	cmn	r0, #1
   35884:	bne	357a8 <__assert_fail@plt+0x244bc>
   35888:	bl	111c0 <__errno_location@plt>
   3588c:	mov	r5, r0
   35890:	ldr	r6, [r0]
   35894:	mov	r0, r4
   35898:	bl	112d4 <close@plt>
   3589c:	str	r6, [r5]
   358a0:	mvn	r4, #0
   358a4:	b	357a8 <__assert_fail@plt+0x244bc>
   358a8:	cmp	r1, #1
   358ac:	beq	3595c <__assert_fail@plt+0x24670>
   358b0:	bgt	358c8 <__assert_fail@plt+0x245dc>
   358b4:	cmp	r1, #0
   358b8:	bne	35920 <__assert_fail@plt+0x24634>
   358bc:	b	358c8 <__assert_fail@plt+0x245dc>
   358c0:	cmp	r1, #4
   358c4:	bne	35920 <__assert_fail@plt+0x24634>
   358c8:	ldr	r3, [sp, #4]
   358cc:	add	r2, r3, #4
   358d0:	str	r2, [sp, #4]
   358d4:	ldr	r2, [r3]
   358d8:	mov	r0, r5
   358dc:	bl	11238 <fcntl64@plt>
   358e0:	mov	r4, r0
   358e4:	b	357a8 <__assert_fail@plt+0x244bc>
   358e8:	ldr	r3, [pc, #132]	; 35974 <__assert_fail@plt+0x24688>
   358ec:	cmp	r1, r3
   358f0:	bgt	35940 <__assert_fail@plt+0x24654>
   358f4:	sub	r3, r3, #1
   358f8:	cmp	r1, r3
   358fc:	bge	358c8 <__assert_fail@plt+0x245dc>
   35900:	sub	r3, r3, #5
   35904:	cmp	r1, r3
   35908:	beq	3595c <__assert_fail@plt+0x24670>
   3590c:	add	r3, r3, #1
   35910:	cmp	r1, r3
   35914:	beq	358c8 <__assert_fail@plt+0x245dc>
   35918:	cmp	r1, #1024	; 0x400
   3591c:	beq	358c8 <__assert_fail@plt+0x245dc>
   35920:	ldr	r3, [sp, #4]
   35924:	add	r2, r3, #4
   35928:	str	r2, [sp, #4]
   3592c:	ldr	r2, [r3]
   35930:	mov	r0, r5
   35934:	bl	11238 <fcntl64@plt>
   35938:	mov	r4, r0
   3593c:	b	357a8 <__assert_fail@plt+0x244bc>
   35940:	ldr	r3, [pc, #48]	; 35978 <__assert_fail@plt+0x2468c>
   35944:	cmp	r1, r3
   35948:	beq	358c8 <__assert_fail@plt+0x245dc>
   3594c:	blt	3595c <__assert_fail@plt+0x24670>
   35950:	add	r3, r3, #1
   35954:	cmp	r1, r3
   35958:	bne	35920 <__assert_fail@plt+0x24634>
   3595c:	mov	r0, r5
   35960:	bl	11238 <fcntl64@plt>
   35964:	mov	r4, r0
   35968:	b	357a8 <__assert_fail@plt+0x244bc>
   3596c:	andeq	r0, r0, r6, lsl #8
   35970:	andeq	sl, r4, ip, lsl #6
   35974:	andeq	r0, r0, r7, lsl #8
   35978:	andeq	r0, r0, r9, lsl #8
   3597c:	push	{r4, lr}
   35980:	mov	r0, #14
   35984:	bl	11268 <nl_langinfo@plt>
   35988:	cmp	r0, #0
   3598c:	beq	359a4 <__assert_fail@plt+0x246b8>
   35990:	ldrb	r2, [r0]
   35994:	ldr	r3, [pc, #16]	; 359ac <__assert_fail@plt+0x246c0>
   35998:	cmp	r2, #0
   3599c:	moveq	r0, r3
   359a0:	pop	{r4, pc}
   359a4:	ldr	r0, [pc]	; 359ac <__assert_fail@plt+0x246c0>
   359a8:	pop	{r4, pc}
   359ac:			; <UNDEFINED> instruction: 0x00039ebc
   359b0:	push	{r4, r5, r6, r7, lr}
   359b4:	sub	sp, sp, #12
   359b8:	mov	r7, r1
   359bc:	mov	r5, r2
   359c0:	subs	r6, r0, #0
   359c4:	addeq	r6, sp, #4
   359c8:	mov	r0, r6
   359cc:	bl	11118 <mbrtowc@plt>
   359d0:	mov	r4, r0
   359d4:	cmp	r5, #0
   359d8:	cmnne	r0, #3
   359dc:	bhi	359ec <__assert_fail@plt+0x24700>
   359e0:	mov	r0, r4
   359e4:	add	sp, sp, #12
   359e8:	pop	{r4, r5, r6, r7, pc}
   359ec:	mov	r0, #0
   359f0:	bl	35a54 <__assert_fail@plt+0x24768>
   359f4:	cmp	r0, #0
   359f8:	ldrbeq	r3, [r7]
   359fc:	streq	r3, [r6]
   35a00:	moveq	r4, #1
   35a04:	b	359e0 <__assert_fail@plt+0x246f4>
   35a08:	push	{r4, r5, r6, lr}
   35a0c:	mov	r6, r0
   35a10:	mov	r5, r1
   35a14:	subs	r4, r2, #0
   35a18:	beq	35a44 <__assert_fail@plt+0x24758>
   35a1c:	mov	r1, r4
   35a20:	mvn	r0, #0
   35a24:	bl	35b5c <__assert_fail@plt+0x24870>
   35a28:	cmp	r0, r5
   35a2c:	bcs	35a44 <__assert_fail@plt+0x24758>
   35a30:	bl	111c0 <__errno_location@plt>
   35a34:	mov	r3, #12
   35a38:	str	r3, [r0]
   35a3c:	mov	r0, #0
   35a40:	pop	{r4, r5, r6, pc}
   35a44:	mul	r1, r5, r4
   35a48:	mov	r0, r6
   35a4c:	bl	3565c <__assert_fail@plt+0x24370>
   35a50:	pop	{r4, r5, r6, pc}
   35a54:	push	{lr}		; (str lr, [sp, #-4]!)
   35a58:	sub	sp, sp, #268	; 0x10c
   35a5c:	ldr	r2, [pc, #68]	; 35aa8 <__assert_fail@plt+0x247bc>
   35a60:	add	r1, sp, #4
   35a64:	bl	35ab4 <__assert_fail@plt+0x247c8>
   35a68:	cmp	r0, #0
   35a6c:	movne	r0, #0
   35a70:	bne	35aa0 <__assert_fail@plt+0x247b4>
   35a74:	ldr	r1, [pc, #48]	; 35aac <__assert_fail@plt+0x247c0>
   35a78:	add	r0, sp, #4
   35a7c:	bl	11004 <strcmp@plt>
   35a80:	cmp	r0, #0
   35a84:	moveq	r0, #0
   35a88:	beq	35aa0 <__assert_fail@plt+0x247b4>
   35a8c:	ldr	r1, [pc, #28]	; 35ab0 <__assert_fail@plt+0x247c4>
   35a90:	add	r0, sp, #4
   35a94:	bl	11004 <strcmp@plt>
   35a98:	adds	r0, r0, #0
   35a9c:	movne	r0, #1
   35aa0:	add	sp, sp, #268	; 0x10c
   35aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   35aa8:	andeq	r0, r0, r1, lsl #2
   35aac:	andeq	r9, r3, r4, asr #29
   35ab0:	andeq	r9, r3, r8, asr #29
   35ab4:	push	{r4, r5, r6, lr}
   35ab8:	mov	r6, r1
   35abc:	mov	r4, r2
   35ac0:	mov	r1, #0
   35ac4:	bl	11250 <setlocale@plt>
   35ac8:	subs	r5, r0, #0
   35acc:	beq	35af0 <__assert_fail@plt+0x24804>
   35ad0:	mov	r0, r5
   35ad4:	bl	111a8 <strlen@plt>
   35ad8:	cmp	r4, r0
   35adc:	bhi	35b08 <__assert_fail@plt+0x2481c>
   35ae0:	cmp	r4, #0
   35ae4:	bne	35b20 <__assert_fail@plt+0x24834>
   35ae8:	mov	r0, #34	; 0x22
   35aec:	pop	{r4, r5, r6, pc}
   35af0:	cmp	r4, #0
   35af4:	beq	35b44 <__assert_fail@plt+0x24858>
   35af8:	mov	r3, #0
   35afc:	strb	r3, [r6]
   35b00:	mov	r0, #22
   35b04:	pop	{r4, r5, r6, pc}
   35b08:	add	r2, r0, #1
   35b0c:	mov	r1, r5
   35b10:	mov	r0, r6
   35b14:	bl	11058 <memcpy@plt>
   35b18:	mov	r0, #0
   35b1c:	pop	{r4, r5, r6, pc}
   35b20:	sub	r4, r4, #1
   35b24:	mov	r2, r4
   35b28:	mov	r1, r5
   35b2c:	mov	r0, r6
   35b30:	bl	11058 <memcpy@plt>
   35b34:	mov	r3, #0
   35b38:	strb	r3, [r6, r4]
   35b3c:	mov	r0, #34	; 0x22
   35b40:	pop	{r4, r5, r6, pc}
   35b44:	mov	r0, #22
   35b48:	pop	{r4, r5, r6, pc}
   35b4c:	push	{r4, lr}
   35b50:	mov	r1, #0
   35b54:	bl	11250 <setlocale@plt>
   35b58:	pop	{r4, pc}
   35b5c:	subs	r2, r1, #1
   35b60:	bxeq	lr
   35b64:	bcc	35d3c <__assert_fail@plt+0x24a50>
   35b68:	cmp	r0, r1
   35b6c:	bls	35d20 <__assert_fail@plt+0x24a34>
   35b70:	tst	r1, r2
   35b74:	beq	35d2c <__assert_fail@plt+0x24a40>
   35b78:	clz	r3, r0
   35b7c:	clz	r2, r1
   35b80:	sub	r3, r2, r3
   35b84:	rsbs	r3, r3, #31
   35b88:	addne	r3, r3, r3, lsl #1
   35b8c:	mov	r2, #0
   35b90:	addne	pc, pc, r3, lsl #2
   35b94:	nop			; (mov r0, r0)
   35b98:	cmp	r0, r1, lsl #31
   35b9c:	adc	r2, r2, r2
   35ba0:	subcs	r0, r0, r1, lsl #31
   35ba4:	cmp	r0, r1, lsl #30
   35ba8:	adc	r2, r2, r2
   35bac:	subcs	r0, r0, r1, lsl #30
   35bb0:	cmp	r0, r1, lsl #29
   35bb4:	adc	r2, r2, r2
   35bb8:	subcs	r0, r0, r1, lsl #29
   35bbc:	cmp	r0, r1, lsl #28
   35bc0:	adc	r2, r2, r2
   35bc4:	subcs	r0, r0, r1, lsl #28
   35bc8:	cmp	r0, r1, lsl #27
   35bcc:	adc	r2, r2, r2
   35bd0:	subcs	r0, r0, r1, lsl #27
   35bd4:	cmp	r0, r1, lsl #26
   35bd8:	adc	r2, r2, r2
   35bdc:	subcs	r0, r0, r1, lsl #26
   35be0:	cmp	r0, r1, lsl #25
   35be4:	adc	r2, r2, r2
   35be8:	subcs	r0, r0, r1, lsl #25
   35bec:	cmp	r0, r1, lsl #24
   35bf0:	adc	r2, r2, r2
   35bf4:	subcs	r0, r0, r1, lsl #24
   35bf8:	cmp	r0, r1, lsl #23
   35bfc:	adc	r2, r2, r2
   35c00:	subcs	r0, r0, r1, lsl #23
   35c04:	cmp	r0, r1, lsl #22
   35c08:	adc	r2, r2, r2
   35c0c:	subcs	r0, r0, r1, lsl #22
   35c10:	cmp	r0, r1, lsl #21
   35c14:	adc	r2, r2, r2
   35c18:	subcs	r0, r0, r1, lsl #21
   35c1c:	cmp	r0, r1, lsl #20
   35c20:	adc	r2, r2, r2
   35c24:	subcs	r0, r0, r1, lsl #20
   35c28:	cmp	r0, r1, lsl #19
   35c2c:	adc	r2, r2, r2
   35c30:	subcs	r0, r0, r1, lsl #19
   35c34:	cmp	r0, r1, lsl #18
   35c38:	adc	r2, r2, r2
   35c3c:	subcs	r0, r0, r1, lsl #18
   35c40:	cmp	r0, r1, lsl #17
   35c44:	adc	r2, r2, r2
   35c48:	subcs	r0, r0, r1, lsl #17
   35c4c:	cmp	r0, r1, lsl #16
   35c50:	adc	r2, r2, r2
   35c54:	subcs	r0, r0, r1, lsl #16
   35c58:	cmp	r0, r1, lsl #15
   35c5c:	adc	r2, r2, r2
   35c60:	subcs	r0, r0, r1, lsl #15
   35c64:	cmp	r0, r1, lsl #14
   35c68:	adc	r2, r2, r2
   35c6c:	subcs	r0, r0, r1, lsl #14
   35c70:	cmp	r0, r1, lsl #13
   35c74:	adc	r2, r2, r2
   35c78:	subcs	r0, r0, r1, lsl #13
   35c7c:	cmp	r0, r1, lsl #12
   35c80:	adc	r2, r2, r2
   35c84:	subcs	r0, r0, r1, lsl #12
   35c88:	cmp	r0, r1, lsl #11
   35c8c:	adc	r2, r2, r2
   35c90:	subcs	r0, r0, r1, lsl #11
   35c94:	cmp	r0, r1, lsl #10
   35c98:	adc	r2, r2, r2
   35c9c:	subcs	r0, r0, r1, lsl #10
   35ca0:	cmp	r0, r1, lsl #9
   35ca4:	adc	r2, r2, r2
   35ca8:	subcs	r0, r0, r1, lsl #9
   35cac:	cmp	r0, r1, lsl #8
   35cb0:	adc	r2, r2, r2
   35cb4:	subcs	r0, r0, r1, lsl #8
   35cb8:	cmp	r0, r1, lsl #7
   35cbc:	adc	r2, r2, r2
   35cc0:	subcs	r0, r0, r1, lsl #7
   35cc4:	cmp	r0, r1, lsl #6
   35cc8:	adc	r2, r2, r2
   35ccc:	subcs	r0, r0, r1, lsl #6
   35cd0:	cmp	r0, r1, lsl #5
   35cd4:	adc	r2, r2, r2
   35cd8:	subcs	r0, r0, r1, lsl #5
   35cdc:	cmp	r0, r1, lsl #4
   35ce0:	adc	r2, r2, r2
   35ce4:	subcs	r0, r0, r1, lsl #4
   35ce8:	cmp	r0, r1, lsl #3
   35cec:	adc	r2, r2, r2
   35cf0:	subcs	r0, r0, r1, lsl #3
   35cf4:	cmp	r0, r1, lsl #2
   35cf8:	adc	r2, r2, r2
   35cfc:	subcs	r0, r0, r1, lsl #2
   35d00:	cmp	r0, r1, lsl #1
   35d04:	adc	r2, r2, r2
   35d08:	subcs	r0, r0, r1, lsl #1
   35d0c:	cmp	r0, r1
   35d10:	adc	r2, r2, r2
   35d14:	subcs	r0, r0, r1
   35d18:	mov	r0, r2
   35d1c:	bx	lr
   35d20:	moveq	r0, #1
   35d24:	movne	r0, #0
   35d28:	bx	lr
   35d2c:	clz	r2, r1
   35d30:	rsb	r2, r2, #31
   35d34:	lsr	r0, r0, r2
   35d38:	bx	lr
   35d3c:	cmp	r0, #0
   35d40:	mvnne	r0, #0
   35d44:	b	3639c <__assert_fail@plt+0x250b0>
   35d48:	cmp	r1, #0
   35d4c:	beq	35d3c <__assert_fail@plt+0x24a50>
   35d50:	push	{r0, r1, lr}
   35d54:	bl	35b5c <__assert_fail@plt+0x24870>
   35d58:	pop	{r1, r2, lr}
   35d5c:	mul	r3, r2, r0
   35d60:	sub	r1, r1, r3
   35d64:	bx	lr
   35d68:	cmp	r1, #0
   35d6c:	beq	35f78 <__assert_fail@plt+0x24c8c>
   35d70:	eor	ip, r0, r1
   35d74:	rsbmi	r1, r1, #0
   35d78:	subs	r2, r1, #1
   35d7c:	beq	35f44 <__assert_fail@plt+0x24c58>
   35d80:	movs	r3, r0
   35d84:	rsbmi	r3, r0, #0
   35d88:	cmp	r3, r1
   35d8c:	bls	35f50 <__assert_fail@plt+0x24c64>
   35d90:	tst	r1, r2
   35d94:	beq	35f60 <__assert_fail@plt+0x24c74>
   35d98:	clz	r2, r3
   35d9c:	clz	r0, r1
   35da0:	sub	r2, r0, r2
   35da4:	rsbs	r2, r2, #31
   35da8:	addne	r2, r2, r2, lsl #1
   35dac:	mov	r0, #0
   35db0:	addne	pc, pc, r2, lsl #2
   35db4:	nop			; (mov r0, r0)
   35db8:	cmp	r3, r1, lsl #31
   35dbc:	adc	r0, r0, r0
   35dc0:	subcs	r3, r3, r1, lsl #31
   35dc4:	cmp	r3, r1, lsl #30
   35dc8:	adc	r0, r0, r0
   35dcc:	subcs	r3, r3, r1, lsl #30
   35dd0:	cmp	r3, r1, lsl #29
   35dd4:	adc	r0, r0, r0
   35dd8:	subcs	r3, r3, r1, lsl #29
   35ddc:	cmp	r3, r1, lsl #28
   35de0:	adc	r0, r0, r0
   35de4:	subcs	r3, r3, r1, lsl #28
   35de8:	cmp	r3, r1, lsl #27
   35dec:	adc	r0, r0, r0
   35df0:	subcs	r3, r3, r1, lsl #27
   35df4:	cmp	r3, r1, lsl #26
   35df8:	adc	r0, r0, r0
   35dfc:	subcs	r3, r3, r1, lsl #26
   35e00:	cmp	r3, r1, lsl #25
   35e04:	adc	r0, r0, r0
   35e08:	subcs	r3, r3, r1, lsl #25
   35e0c:	cmp	r3, r1, lsl #24
   35e10:	adc	r0, r0, r0
   35e14:	subcs	r3, r3, r1, lsl #24
   35e18:	cmp	r3, r1, lsl #23
   35e1c:	adc	r0, r0, r0
   35e20:	subcs	r3, r3, r1, lsl #23
   35e24:	cmp	r3, r1, lsl #22
   35e28:	adc	r0, r0, r0
   35e2c:	subcs	r3, r3, r1, lsl #22
   35e30:	cmp	r3, r1, lsl #21
   35e34:	adc	r0, r0, r0
   35e38:	subcs	r3, r3, r1, lsl #21
   35e3c:	cmp	r3, r1, lsl #20
   35e40:	adc	r0, r0, r0
   35e44:	subcs	r3, r3, r1, lsl #20
   35e48:	cmp	r3, r1, lsl #19
   35e4c:	adc	r0, r0, r0
   35e50:	subcs	r3, r3, r1, lsl #19
   35e54:	cmp	r3, r1, lsl #18
   35e58:	adc	r0, r0, r0
   35e5c:	subcs	r3, r3, r1, lsl #18
   35e60:	cmp	r3, r1, lsl #17
   35e64:	adc	r0, r0, r0
   35e68:	subcs	r3, r3, r1, lsl #17
   35e6c:	cmp	r3, r1, lsl #16
   35e70:	adc	r0, r0, r0
   35e74:	subcs	r3, r3, r1, lsl #16
   35e78:	cmp	r3, r1, lsl #15
   35e7c:	adc	r0, r0, r0
   35e80:	subcs	r3, r3, r1, lsl #15
   35e84:	cmp	r3, r1, lsl #14
   35e88:	adc	r0, r0, r0
   35e8c:	subcs	r3, r3, r1, lsl #14
   35e90:	cmp	r3, r1, lsl #13
   35e94:	adc	r0, r0, r0
   35e98:	subcs	r3, r3, r1, lsl #13
   35e9c:	cmp	r3, r1, lsl #12
   35ea0:	adc	r0, r0, r0
   35ea4:	subcs	r3, r3, r1, lsl #12
   35ea8:	cmp	r3, r1, lsl #11
   35eac:	adc	r0, r0, r0
   35eb0:	subcs	r3, r3, r1, lsl #11
   35eb4:	cmp	r3, r1, lsl #10
   35eb8:	adc	r0, r0, r0
   35ebc:	subcs	r3, r3, r1, lsl #10
   35ec0:	cmp	r3, r1, lsl #9
   35ec4:	adc	r0, r0, r0
   35ec8:	subcs	r3, r3, r1, lsl #9
   35ecc:	cmp	r3, r1, lsl #8
   35ed0:	adc	r0, r0, r0
   35ed4:	subcs	r3, r3, r1, lsl #8
   35ed8:	cmp	r3, r1, lsl #7
   35edc:	adc	r0, r0, r0
   35ee0:	subcs	r3, r3, r1, lsl #7
   35ee4:	cmp	r3, r1, lsl #6
   35ee8:	adc	r0, r0, r0
   35eec:	subcs	r3, r3, r1, lsl #6
   35ef0:	cmp	r3, r1, lsl #5
   35ef4:	adc	r0, r0, r0
   35ef8:	subcs	r3, r3, r1, lsl #5
   35efc:	cmp	r3, r1, lsl #4
   35f00:	adc	r0, r0, r0
   35f04:	subcs	r3, r3, r1, lsl #4
   35f08:	cmp	r3, r1, lsl #3
   35f0c:	adc	r0, r0, r0
   35f10:	subcs	r3, r3, r1, lsl #3
   35f14:	cmp	r3, r1, lsl #2
   35f18:	adc	r0, r0, r0
   35f1c:	subcs	r3, r3, r1, lsl #2
   35f20:	cmp	r3, r1, lsl #1
   35f24:	adc	r0, r0, r0
   35f28:	subcs	r3, r3, r1, lsl #1
   35f2c:	cmp	r3, r1
   35f30:	adc	r0, r0, r0
   35f34:	subcs	r3, r3, r1
   35f38:	cmp	ip, #0
   35f3c:	rsbmi	r0, r0, #0
   35f40:	bx	lr
   35f44:	teq	ip, r0
   35f48:	rsbmi	r0, r0, #0
   35f4c:	bx	lr
   35f50:	movcc	r0, #0
   35f54:	asreq	r0, ip, #31
   35f58:	orreq	r0, r0, #1
   35f5c:	bx	lr
   35f60:	clz	r2, r1
   35f64:	rsb	r2, r2, #31
   35f68:	cmp	ip, #0
   35f6c:	lsr	r0, r3, r2
   35f70:	rsbmi	r0, r0, #0
   35f74:	bx	lr
   35f78:	cmp	r0, #0
   35f7c:	mvngt	r0, #-2147483648	; 0x80000000
   35f80:	movlt	r0, #-2147483648	; 0x80000000
   35f84:	b	3639c <__assert_fail@plt+0x250b0>
   35f88:	cmp	r1, #0
   35f8c:	beq	35f78 <__assert_fail@plt+0x24c8c>
   35f90:	push	{r0, r1, lr}
   35f94:	bl	35d70 <__assert_fail@plt+0x24a84>
   35f98:	pop	{r1, r2, lr}
   35f9c:	mul	r3, r2, r0
   35fa0:	sub	r1, r1, r3
   35fa4:	bx	lr
   35fa8:	eor	r1, r1, #-2147483648	; 0x80000000
   35fac:	b	35fb4 <__assert_fail@plt+0x24cc8>
   35fb0:	eor	r3, r3, #-2147483648	; 0x80000000
   35fb4:	push	{r4, r5, lr}
   35fb8:	lsl	r4, r1, #1
   35fbc:	lsl	r5, r3, #1
   35fc0:	teq	r4, r5
   35fc4:	teqeq	r0, r2
   35fc8:	orrsne	ip, r4, r0
   35fcc:	orrsne	ip, r5, r2
   35fd0:	mvnsne	ip, r4, asr #21
   35fd4:	mvnsne	ip, r5, asr #21
   35fd8:	beq	361c4 <__assert_fail@plt+0x24ed8>
   35fdc:	lsr	r4, r4, #21
   35fe0:	rsbs	r5, r4, r5, lsr #21
   35fe4:	rsblt	r5, r5, #0
   35fe8:	ble	36008 <__assert_fail@plt+0x24d1c>
   35fec:	add	r4, r4, r5
   35ff0:	eor	r2, r0, r2
   35ff4:	eor	r3, r1, r3
   35ff8:	eor	r0, r2, r0
   35ffc:	eor	r1, r3, r1
   36000:	eor	r2, r0, r2
   36004:	eor	r3, r1, r3
   36008:	cmp	r5, #54	; 0x36
   3600c:	pophi	{r4, r5, pc}
   36010:	tst	r1, #-2147483648	; 0x80000000
   36014:	lsl	r1, r1, #12
   36018:	mov	ip, #1048576	; 0x100000
   3601c:	orr	r1, ip, r1, lsr #12
   36020:	beq	3602c <__assert_fail@plt+0x24d40>
   36024:	rsbs	r0, r0, #0
   36028:	rsc	r1, r1, #0
   3602c:	tst	r3, #-2147483648	; 0x80000000
   36030:	lsl	r3, r3, #12
   36034:	orr	r3, ip, r3, lsr #12
   36038:	beq	36044 <__assert_fail@plt+0x24d58>
   3603c:	rsbs	r2, r2, #0
   36040:	rsc	r3, r3, #0
   36044:	teq	r4, r5
   36048:	beq	361ac <__assert_fail@plt+0x24ec0>
   3604c:	sub	r4, r4, #1
   36050:	rsbs	lr, r5, #32
   36054:	blt	36070 <__assert_fail@plt+0x24d84>
   36058:	lsl	ip, r2, lr
   3605c:	adds	r0, r0, r2, lsr r5
   36060:	adc	r1, r1, #0
   36064:	adds	r0, r0, r3, lsl lr
   36068:	adcs	r1, r1, r3, asr r5
   3606c:	b	3608c <__assert_fail@plt+0x24da0>
   36070:	sub	r5, r5, #32
   36074:	add	lr, lr, #32
   36078:	cmp	r2, #1
   3607c:	lsl	ip, r3, lr
   36080:	orrcs	ip, ip, #2
   36084:	adds	r0, r0, r3, asr r5
   36088:	adcs	r1, r1, r3, asr #31
   3608c:	and	r5, r1, #-2147483648	; 0x80000000
   36090:	bpl	360a0 <__assert_fail@plt+0x24db4>
   36094:	rsbs	ip, ip, #0
   36098:	rscs	r0, r0, #0
   3609c:	rsc	r1, r1, #0
   360a0:	cmp	r1, #1048576	; 0x100000
   360a4:	bcc	360e4 <__assert_fail@plt+0x24df8>
   360a8:	cmp	r1, #2097152	; 0x200000
   360ac:	bcc	360cc <__assert_fail@plt+0x24de0>
   360b0:	lsrs	r1, r1, #1
   360b4:	rrxs	r0, r0
   360b8:	rrx	ip, ip
   360bc:	add	r4, r4, #1
   360c0:	lsl	r2, r4, #21
   360c4:	cmn	r2, #4194304	; 0x400000
   360c8:	bcs	36224 <__assert_fail@plt+0x24f38>
   360cc:	cmp	ip, #-2147483648	; 0x80000000
   360d0:	lsrseq	ip, r0, #1
   360d4:	adcs	r0, r0, #0
   360d8:	adc	r1, r1, r4, lsl #20
   360dc:	orr	r1, r1, r5
   360e0:	pop	{r4, r5, pc}
   360e4:	lsls	ip, ip, #1
   360e8:	adcs	r0, r0, r0
   360ec:	adc	r1, r1, r1
   360f0:	tst	r1, #1048576	; 0x100000
   360f4:	sub	r4, r4, #1
   360f8:	bne	360cc <__assert_fail@plt+0x24de0>
   360fc:	teq	r1, #0
   36100:	moveq	r1, r0
   36104:	moveq	r0, #0
   36108:	clz	r3, r1
   3610c:	addeq	r3, r3, #32
   36110:	sub	r3, r3, #11
   36114:	subs	r2, r3, #32
   36118:	bge	3613c <__assert_fail@plt+0x24e50>
   3611c:	adds	r2, r2, #12
   36120:	ble	36138 <__assert_fail@plt+0x24e4c>
   36124:	add	ip, r2, #20
   36128:	rsb	r2, r2, #12
   3612c:	lsl	r0, r1, ip
   36130:	lsr	r1, r1, r2
   36134:	b	3614c <__assert_fail@plt+0x24e60>
   36138:	add	r2, r2, #20
   3613c:	rsble	ip, r2, #32
   36140:	lsl	r1, r1, r2
   36144:	orrle	r1, r1, r0, lsr ip
   36148:	lslle	r0, r0, r2
   3614c:	subs	r4, r4, r3
   36150:	addge	r1, r1, r4, lsl #20
   36154:	orrge	r1, r1, r5
   36158:	popge	{r4, r5, pc}
   3615c:	mvn	r4, r4
   36160:	subs	r4, r4, #31
   36164:	bge	361a0 <__assert_fail@plt+0x24eb4>
   36168:	adds	r4, r4, #12
   3616c:	bgt	36188 <__assert_fail@plt+0x24e9c>
   36170:	add	r4, r4, #20
   36174:	rsb	r2, r4, #32
   36178:	lsr	r0, r0, r4
   3617c:	orr	r0, r0, r1, lsl r2
   36180:	orr	r1, r5, r1, lsr r4
   36184:	pop	{r4, r5, pc}
   36188:	rsb	r4, r4, #12
   3618c:	rsb	r2, r4, #32
   36190:	lsr	r0, r0, r2
   36194:	orr	r0, r0, r1, lsl r4
   36198:	mov	r1, r5
   3619c:	pop	{r4, r5, pc}
   361a0:	lsr	r0, r1, r4
   361a4:	mov	r1, r5
   361a8:	pop	{r4, r5, pc}
   361ac:	teq	r4, #0
   361b0:	eor	r3, r3, #1048576	; 0x100000
   361b4:	eoreq	r1, r1, #1048576	; 0x100000
   361b8:	addeq	r4, r4, #1
   361bc:	subne	r5, r5, #1
   361c0:	b	3604c <__assert_fail@plt+0x24d60>
   361c4:	mvns	ip, r4, asr #21
   361c8:	mvnsne	ip, r5, asr #21
   361cc:	beq	36234 <__assert_fail@plt+0x24f48>
   361d0:	teq	r4, r5
   361d4:	teqeq	r0, r2
   361d8:	beq	361ec <__assert_fail@plt+0x24f00>
   361dc:	orrs	ip, r4, r0
   361e0:	moveq	r1, r3
   361e4:	moveq	r0, r2
   361e8:	pop	{r4, r5, pc}
   361ec:	teq	r1, r3
   361f0:	movne	r1, #0
   361f4:	movne	r0, #0
   361f8:	popne	{r4, r5, pc}
   361fc:	lsrs	ip, r4, #21
   36200:	bne	36214 <__assert_fail@plt+0x24f28>
   36204:	lsls	r0, r0, #1
   36208:	adcs	r1, r1, r1
   3620c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   36210:	pop	{r4, r5, pc}
   36214:	adds	r4, r4, #4194304	; 0x400000
   36218:	addcc	r1, r1, #1048576	; 0x100000
   3621c:	popcc	{r4, r5, pc}
   36220:	and	r5, r1, #-2147483648	; 0x80000000
   36224:	orr	r1, r5, #2130706432	; 0x7f000000
   36228:	orr	r1, r1, #15728640	; 0xf00000
   3622c:	mov	r0, #0
   36230:	pop	{r4, r5, pc}
   36234:	mvns	ip, r4, asr #21
   36238:	movne	r1, r3
   3623c:	movne	r0, r2
   36240:	mvnseq	ip, r5, asr #21
   36244:	movne	r3, r1
   36248:	movne	r2, r0
   3624c:	orrs	r4, r0, r1, lsl #12
   36250:	orrseq	r5, r2, r3, lsl #12
   36254:	teqeq	r1, r3
   36258:	orrne	r1, r1, #524288	; 0x80000
   3625c:	pop	{r4, r5, pc}
   36260:	teq	r0, #0
   36264:	moveq	r1, #0
   36268:	bxeq	lr
   3626c:	push	{r4, r5, lr}
   36270:	mov	r4, #1024	; 0x400
   36274:	add	r4, r4, #50	; 0x32
   36278:	mov	r5, #0
   3627c:	mov	r1, #0
   36280:	b	360fc <__assert_fail@plt+0x24e10>
   36284:	teq	r0, #0
   36288:	moveq	r1, #0
   3628c:	bxeq	lr
   36290:	push	{r4, r5, lr}
   36294:	mov	r4, #1024	; 0x400
   36298:	add	r4, r4, #50	; 0x32
   3629c:	ands	r5, r0, #-2147483648	; 0x80000000
   362a0:	rsbmi	r0, r0, #0
   362a4:	mov	r1, #0
   362a8:	b	360fc <__assert_fail@plt+0x24e10>
   362ac:	lsls	r2, r0, #1
   362b0:	asr	r1, r2, #3
   362b4:	rrx	r1, r1
   362b8:	lsl	r0, r2, #28
   362bc:	andsne	r3, r2, #-16777216	; 0xff000000
   362c0:	teqne	r3, #-16777216	; 0xff000000
   362c4:	eorne	r1, r1, #939524096	; 0x38000000
   362c8:	bxne	lr
   362cc:	teq	r2, #0
   362d0:	teqne	r3, #-16777216	; 0xff000000
   362d4:	bxeq	lr
   362d8:	push	{r4, r5, lr}
   362dc:	mov	r4, #896	; 0x380
   362e0:	and	r5, r1, #-2147483648	; 0x80000000
   362e4:	bic	r1, r1, #-2147483648	; 0x80000000
   362e8:	b	360fc <__assert_fail@plt+0x24e10>
   362ec:	orrs	r2, r0, r1
   362f0:	bxeq	lr
   362f4:	push	{r4, r5, lr}
   362f8:	mov	r5, #0
   362fc:	b	3631c <__assert_fail@plt+0x25030>
   36300:	orrs	r2, r0, r1
   36304:	bxeq	lr
   36308:	push	{r4, r5, lr}
   3630c:	ands	r5, r1, #-2147483648	; 0x80000000
   36310:	bpl	3631c <__assert_fail@plt+0x25030>
   36314:	rsbs	r0, r0, #0
   36318:	rsc	r1, r1, #0
   3631c:	mov	r4, #1024	; 0x400
   36320:	add	r4, r4, #50	; 0x32
   36324:	lsrs	ip, r1, #22
   36328:	beq	360a0 <__assert_fail@plt+0x24db4>
   3632c:	mov	r2, #3
   36330:	lsrs	ip, ip, #3
   36334:	addne	r2, r2, #3
   36338:	lsrs	ip, ip, #3
   3633c:	addne	r2, r2, #3
   36340:	add	r2, r2, ip, lsr #3
   36344:	rsb	r3, r2, #32
   36348:	lsl	ip, r0, r3
   3634c:	lsr	r0, r0, r2
   36350:	orr	r0, r0, r1, lsl r3
   36354:	lsr	r1, r1, r2
   36358:	add	r4, r4, r2
   3635c:	b	360a0 <__assert_fail@plt+0x24db4>
   36360:	cmp	r3, #0
   36364:	cmpeq	r2, #0
   36368:	bne	36380 <__assert_fail@plt+0x25094>
   3636c:	cmp	r1, #0
   36370:	cmpeq	r0, #0
   36374:	mvnne	r1, #0
   36378:	mvnne	r0, #0
   3637c:	b	3639c <__assert_fail@plt+0x250b0>
   36380:	sub	sp, sp, #8
   36384:	push	{sp, lr}
   36388:	bl	363f8 <__assert_fail@plt+0x2510c>
   3638c:	ldr	lr, [sp, #4]
   36390:	add	sp, sp, #8
   36394:	pop	{r2, r3}
   36398:	bx	lr
   3639c:	push	{r1, lr}
   363a0:	mov	r0, #8
   363a4:	bl	10fec <raise@plt>
   363a8:	pop	{r1, pc}
   363ac:	andeq	r0, r0, r0
   363b0:	vmov	d7, r0, r1
   363b4:	vldr	d6, [pc, #44]	; 363e8 <__assert_fail@plt+0x250fc>
   363b8:	vldr	d5, [pc, #48]	; 363f0 <__assert_fail@plt+0x25104>
   363bc:	mov	r0, #0
   363c0:	vmul.f64	d6, d7, d6
   363c4:	vcvt.u32.f64	s12, d6
   363c8:	vcvt.f64.u32	d4, s12
   363cc:	vmov	r1, s12
   363d0:	vmls.f64	d7, d4, d5
   363d4:	vcvt.u32.f64	s14, d7
   363d8:	vmov	r3, s14
   363dc:	orr	r0, r0, r3
   363e0:	bx	lr
   363e4:	nop			; (mov r0, r0)
   363e8:	andeq	r0, r0, r0
   363ec:	ldclcc	0, cr0, [r0]
   363f0:	andeq	r0, r0, r0
   363f4:	mvnsmi	r0, r0
   363f8:	cmp	r1, r3
   363fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   36400:	cmpeq	r0, r2
   36404:	mov	r4, r0
   36408:	mov	r5, r1
   3640c:	ldr	r9, [sp, #28]
   36410:	movcc	r0, #0
   36414:	movcc	r1, #0
   36418:	bcc	36510 <__assert_fail@plt+0x25224>
   3641c:	cmp	r3, #0
   36420:	clzeq	ip, r2
   36424:	clzne	ip, r3
   36428:	addeq	ip, ip, #32
   3642c:	cmp	r5, #0
   36430:	clzeq	r1, r4
   36434:	addeq	r1, r1, #32
   36438:	clzne	r1, r5
   3643c:	sub	ip, ip, r1
   36440:	sub	lr, ip, #32
   36444:	lsl	r7, r3, ip
   36448:	rsb	r8, ip, #32
   3644c:	orr	r7, r7, r2, lsl lr
   36450:	orr	r7, r7, r2, lsr r8
   36454:	lsl	r6, r2, ip
   36458:	cmp	r5, r7
   3645c:	cmpeq	r4, r6
   36460:	movcc	r0, #0
   36464:	movcc	r1, #0
   36468:	bcc	36484 <__assert_fail@plt+0x25198>
   3646c:	mov	r3, #1
   36470:	subs	r4, r4, r6
   36474:	lsl	r1, r3, lr
   36478:	lsl	r0, r3, ip
   3647c:	orr	r1, r1, r3, lsr r8
   36480:	sbc	r5, r5, r7
   36484:	cmp	ip, #0
   36488:	beq	36510 <__assert_fail@plt+0x25224>
   3648c:	lsrs	r3, r7, #1
   36490:	rrx	r2, r6
   36494:	mov	r6, ip
   36498:	b	364bc <__assert_fail@plt+0x251d0>
   3649c:	subs	r4, r4, r2
   364a0:	sbc	r5, r5, r3
   364a4:	adds	r4, r4, r4
   364a8:	adc	r5, r5, r5
   364ac:	adds	r4, r4, #1
   364b0:	adc	r5, r5, #0
   364b4:	subs	r6, r6, #1
   364b8:	beq	364d8 <__assert_fail@plt+0x251ec>
   364bc:	cmp	r5, r3
   364c0:	cmpeq	r4, r2
   364c4:	bcs	3649c <__assert_fail@plt+0x251b0>
   364c8:	adds	r4, r4, r4
   364cc:	adc	r5, r5, r5
   364d0:	subs	r6, r6, #1
   364d4:	bne	364bc <__assert_fail@plt+0x251d0>
   364d8:	lsr	r6, r4, ip
   364dc:	lsr	r7, r5, ip
   364e0:	orr	r6, r6, r5, lsl r8
   364e4:	adds	r2, r0, r4
   364e8:	orr	r6, r6, r5, lsr lr
   364ec:	adc	r3, r1, r5
   364f0:	lsl	r1, r7, ip
   364f4:	orr	r1, r1, r6, lsl lr
   364f8:	lsl	r0, r6, ip
   364fc:	orr	r1, r1, r6, lsr r8
   36500:	subs	r0, r2, r0
   36504:	mov	r4, r6
   36508:	mov	r5, r7
   3650c:	sbc	r1, r3, r1
   36510:	cmp	r9, #0
   36514:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   36518:	strd	r4, [r9]
   3651c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   36520:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   36524:	mov	r7, r0
   36528:	ldr	r6, [pc, #72]	; 36578 <__assert_fail@plt+0x2528c>
   3652c:	ldr	r5, [pc, #72]	; 3657c <__assert_fail@plt+0x25290>
   36530:	add	r6, pc, r6
   36534:	add	r5, pc, r5
   36538:	sub	r6, r6, r5
   3653c:	mov	r8, r1
   36540:	mov	r9, r2
   36544:	bl	10fa8 <fdopen@plt-0x20>
   36548:	asrs	r6, r6, #2
   3654c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   36550:	mov	r4, #0
   36554:	add	r4, r4, #1
   36558:	ldr	r3, [r5], #4
   3655c:	mov	r2, r9
   36560:	mov	r1, r8
   36564:	mov	r0, r7
   36568:	blx	r3
   3656c:	cmp	r6, r4
   36570:	bne	36554 <__assert_fail@plt+0x25268>
   36574:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   36578:	ldrdeq	r3, [r1], -r8
   3657c:	ldrdeq	r3, [r1], -r0
   36580:	bx	lr
   36584:	ldr	r3, [pc, #12]	; 36598 <__assert_fail@plt+0x252ac>
   36588:	mov	r1, #0
   3658c:	add	r3, pc, r3
   36590:	ldr	r2, [r3]
   36594:	b	111d8 <__cxa_atexit@plt>
   36598:	muleq	r1, r0, fp

Disassembly of section .fini:

0003659c <.fini>:
   3659c:	push	{r3, lr}
   365a0:	pop	{r3, pc}
