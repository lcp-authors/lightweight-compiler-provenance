
../repos/charybdis/extensions/.libs/hurt.so:     file format elf32-littlearm


Disassembly of section .init:

00000a5c <_init>:
 a5c:	push	{r3, lr}
 a60:	bl	bfc <call_weak_fn>
 a64:	pop	{r3, pc}

Disassembly of section .plt:

00000a68 <.plt>:
 a68:	push	{lr}		; (str lr, [sp, #-4]!)
 a6c:	ldr	lr, [pc, #4]	; a78 <.plt+0x10>
 a70:	add	lr, pc, lr
 a74:	ldr	pc, [lr, #8]!
 a78:	.word	0x00012588

00000a7c <calloc@plt>:
 a7c:	add	ip, pc, #0, 12
 a80:	add	ip, ip, #73728	; 0x12000
 a84:	ldr	pc, [ip, #1416]!	; 0x588

00000a88 <get_client_name@plt>:
 a88:	add	ip, pc, #0, 12
 a8c:	add	ip, ip, #73728	; 0x12000
 a90:	ldr	pc, [ip, #1408]!	; 0x580

00000a94 <rb_current_time@plt>:
 a94:	add	ip, pc, #0, 12
 a98:	add	ip, ip, #73728	; 0x12000
 a9c:	ldr	pc, [ip, #1400]!	; 0x578

00000aa0 <rb_event_add@plt>:
 aa0:	add	ip, pc, #0, 12
 aa4:	add	ip, ip, #73728	; 0x12000
 aa8:	ldr	pc, [ip, #1392]!	; 0x570

00000aac <__cxa_finalize@plt>:
 aac:	add	ip, pc, #0, 12
 ab0:	add	ip, ip, #73728	; 0x12000
 ab4:	ldr	pc, [ip, #1384]!	; 0x568

00000ab8 <strtol@plt>:
 ab8:	add	ip, pc, #0, 12
 abc:	add	ip, ip, #73728	; 0x12000
 ac0:	ldr	pc, [ip, #1376]!	; 0x560

00000ac4 <sendto_one@plt>:
 ac4:	add	ip, pc, #0, 12
 ac8:	add	ip, ip, #73728	; 0x12000
 acc:	ldr	pc, [ip, #1368]!	; 0x558

00000ad0 <rb_event_delete@plt>:
 ad0:	add	ip, pc, #0, 12
 ad4:	add	ip, ip, #73728	; 0x12000
 ad8:	ldr	pc, [ip, #1360]!	; 0x550

00000adc <free@plt>:
 adc:	add	ip, pc, #0, 12
 ae0:	add	ip, ip, #73728	; 0x12000
 ae4:	ldr	pc, [ip, #1352]!	; 0x548

00000ae8 <rb_strcasecmp@plt>:
 ae8:	add	ip, pc, #0, 12
 aec:	add	ip, ip, #73728	; 0x12000
 af0:	ldr	pc, [ip, #1344]!	; 0x540

00000af4 <rb_outofmemory@plt>:
 af4:	add	ip, pc, #0, 12
 af8:	add	ip, ip, #73728	; 0x12000
 afc:	ldr	pc, [ip, #1336]!	; 0x538

00000b00 <sendto_realops_snomask@plt>:
 b00:	add	ip, pc, #0, 12
 b04:	add	ip, ip, #73728	; 0x12000
 b08:	ldr	pc, [ip, #1328]!	; 0x530

00000b0c <get_oper_name@plt>:
 b0c:	add	ip, pc, #0, 12
 b10:	add	ip, ip, #73728	; 0x12000
 b14:	ldr	pc, [ip, #1320]!	; 0x528

00000b18 <rb_free_rb_dlink_node@plt>:
 b18:	add	ip, pc, #0, 12
 b1c:	add	ip, ip, #73728	; 0x12000
 b20:	ldr	pc, [ip, #1312]!	; 0x520

00000b24 <strcpy@plt>:
 b24:	add	ip, pc, #0, 12
 b28:	add	ip, ip, #73728	; 0x12000
 b2c:	ldr	pc, [ip, #1304]!	; 0x518

00000b30 <sendto_server@plt>:
 b30:	add	ip, pc, #0, 12
 b34:	add	ip, ip, #73728	; 0x12000
 b38:	ldr	pc, [ip, #1296]!	; 0x510

00000b3c <malloc@plt>:
 b3c:	add	ip, pc, #0, 12
 b40:	add	ip, ip, #73728	; 0x12000
 b44:	ldr	pc, [ip, #1288]!	; 0x508

00000b48 <__gmon_start__@plt>:
 b48:	add	ip, pc, #0, 12
 b4c:	add	ip, ip, #73728	; 0x12000
 b50:	ldr	pc, [ip, #1280]!	; 0x500

00000b54 <rb_make_rb_dlink_node@plt>:
 b54:	add	ip, pc, #0, 12
 b58:	add	ip, ip, #73728	; 0x12000
 b5c:	ldr	pc, [ip, #1272]!	; 0x4f8

00000b60 <sendto_one_numeric@plt>:
 b60:	add	ip, pc, #0, 12
 b64:	add	ip, ip, #73728	; 0x12000
 b68:	ldr	pc, [ip, #1264]!	; 0x4f0

00000b6c <strlen@plt>:
 b6c:	add	ip, pc, #0, 12
 b70:	add	ip, ip, #73728	; 0x12000
 b74:	ldr	pc, [ip, #1256]!	; 0x4e8

00000b78 <strchr@plt>:
 b78:	add	ip, pc, #0, 12
 b7c:	add	ip, ip, #73728	; 0x12000
 b80:	ldr	pc, [ip, #1248]!	; 0x4e0

00000b84 <clean_nick@plt>:
 b84:	add	ip, pc, #0, 12
 b88:	add	ip, ip, #73728	; 0x12000
 b8c:	ldr	pc, [ip, #1240]!	; 0x4d8

00000b90 <match@plt>:
 b90:	add	ip, pc, #0, 12
 b94:	add	ip, ip, #73728	; 0x12000
 b98:	ldr	pc, [ip, #1232]!	; 0x4d0

00000b9c <find_person@plt>:
 b9c:	add	ip, pc, #0, 12
 ba0:	add	ip, ip, #73728	; 0x12000
 ba4:	ldr	pc, [ip, #1224]!	; 0x4c8

00000ba8 <valid_temp_time@plt>:
 ba8:	add	ip, pc, #0, 12
 bac:	add	ip, ip, #73728	; 0x12000
 bb0:	ldr	pc, [ip, #1216]!	; 0x4c0

00000bb4 <sendto_one_notice@plt>:
 bb4:	add	ip, pc, #0, 12
 bb8:	add	ip, ip, #73728	; 0x12000
 bbc:	ldr	pc, [ip, #1208]!	; 0x4b8

00000bc0 <find_named_person@plt>:
 bc0:	add	ip, pc, #0, 12
 bc4:	add	ip, ip, #73728	; 0x12000
 bc8:	ldr	pc, [ip, #1200]!	; 0x4b0

00000bcc <exit_client@plt>:
 bcc:	add	ip, pc, #0, 12
 bd0:	add	ip, ip, #73728	; 0x12000
 bd4:	ldr	pc, [ip, #1192]!	; 0x4a8

00000bd8 <privilegeset_in_set@plt>:
 bd8:	add	ip, pc, #0, 12
 bdc:	add	ip, ip, #73728	; 0x12000
 be0:	ldr	pc, [ip, #1184]!	; 0x4a0

00000be4 <strncmp@plt>:
 be4:	add	ip, pc, #0, 12
 be8:	add	ip, ip, #73728	; 0x12000
 bec:	ldr	pc, [ip, #1176]!	; 0x498

00000bf0 <__assert_fail@plt>:
 bf0:	add	ip, pc, #0, 12
 bf4:	add	ip, ip, #73728	; 0x12000
 bf8:	ldr	pc, [ip, #1168]!	; 0x490

Disassembly of section .text:

00000bfc <call_weak_fn>:
     bfc:	ldr	r3, [pc, #20]	; c18 <call_weak_fn+0x1c>
     c00:	ldr	r2, [pc, #20]	; c1c <call_weak_fn+0x20>
     c04:	add	r3, pc, r3
     c08:	ldr	r2, [r3, r2]
     c0c:	cmp	r2, #0
     c10:	bxeq	lr
     c14:	b	b48 <__gmon_start__@plt>
     c18:	.word	0x000123f4
     c1c:	.word	0x000000a4

00000c20 <deregister_tm_clones>:
     c20:	ldr	r0, [pc, #44]	; c54 <deregister_tm_clones+0x34>
     c24:	ldr	r3, [pc, #44]	; c58 <deregister_tm_clones+0x38>
     c28:	add	r0, pc, r0
     c2c:	add	r3, pc, r3
     c30:	cmp	r3, r0
     c34:	ldr	r3, [pc, #32]	; c5c <deregister_tm_clones+0x3c>
     c38:	add	r3, pc, r3
     c3c:	bxeq	lr
     c40:	ldr	r2, [pc, #24]	; c60 <deregister_tm_clones+0x40>
     c44:	ldr	r3, [r3, r2]
     c48:	cmp	r3, #0
     c4c:	bxeq	lr
     c50:	bx	r3
     c54:	.word	0x00012594
     c58:	.word	0x00012590
     c5c:	.word	0x000123c0
     c60:	.word	0x00000094

00000c64 <register_tm_clones>:
     c64:	ldr	r0, [pc, #56]	; ca4 <register_tm_clones+0x40>
     c68:	ldr	r3, [pc, #56]	; ca8 <register_tm_clones+0x44>
     c6c:	add	r0, pc, r0
     c70:	add	r3, pc, r3
     c74:	sub	r1, r3, r0
     c78:	ldr	r3, [pc, #44]	; cac <register_tm_clones+0x48>
     c7c:	asr	r1, r1, #2
     c80:	add	r3, pc, r3
     c84:	add	r1, r1, r1, lsr #31
     c88:	asrs	r1, r1, #1
     c8c:	bxeq	lr
     c90:	ldr	r2, [pc, #24]	; cb0 <register_tm_clones+0x4c>
     c94:	ldr	r3, [r3, r2]
     c98:	cmp	r3, #0
     c9c:	bxeq	lr
     ca0:	bx	r3
     ca4:	.word	0x00012550
     ca8:	.word	0x0001254c
     cac:	.word	0x00012378
     cb0:	.word	0x000000a8

00000cb4 <__do_global_dtors_aux>:
     cb4:	ldr	r3, [pc, #76]	; d08 <__do_global_dtors_aux+0x54>
     cb8:	ldr	r2, [pc, #76]	; d0c <__do_global_dtors_aux+0x58>
     cbc:	add	r3, pc, r3
     cc0:	add	r2, pc, r2
     cc4:	ldrb	r3, [r3]
     cc8:	cmp	r3, #0
     ccc:	bxne	lr
     cd0:	ldr	r3, [pc, #56]	; d10 <__do_global_dtors_aux+0x5c>
     cd4:	push	{r4, lr}
     cd8:	ldr	r3, [r2, r3]
     cdc:	cmp	r3, #0
     ce0:	beq	cf0 <__do_global_dtors_aux+0x3c>
     ce4:	ldr	r3, [pc, #40]	; d14 <__do_global_dtors_aux+0x60>
     ce8:	ldr	r0, [pc, r3]
     cec:	bl	aac <__cxa_finalize@plt>
     cf0:	bl	c20 <deregister_tm_clones>
     cf4:	ldr	r3, [pc, #28]	; d18 <__do_global_dtors_aux+0x64>
     cf8:	mov	r2, #1
     cfc:	add	r3, pc, r3
     d00:	strb	r2, [r3]
     d04:	pop	{r4, pc}
     d08:	.word	0x00012500
     d0c:	.word	0x00012338
     d10:	.word	0x0000008c
     d14:	.word	0x000123c4
     d18:	.word	0x000124c0

00000d1c <frame_dummy>:
     d1c:	b	c64 <register_tm_clones>

00000d20 <me_hurt>:
     d20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     d24:	add	fp, sp, #28
     d28:	sub	sp, sp, #12
     d2c:	cmp	r3, #4
     d30:	blt	dcc <me_hurt+0xac>
     d34:	ldrh	r0, [r2, #80]	; 0x50
     d38:	mov	r5, r2
     d3c:	cmp	r0, #64	; 0x40
     d40:	bne	dcc <me_hurt+0xac>
     d44:	ldr	r0, [r5, #24]
     d48:	cmp	r0, #0
     d4c:	beq	dcc <me_hurt+0xac>
     d50:	ldr	r8, [fp, #8]
     d54:	mov	r1, #0
     d58:	mov	r2, #10
     d5c:	ldr	r0, [r8, #4]
     d60:	bl	ab8 <strtol@plt>
     d64:	cmp	r0, #1
     d68:	blt	dcc <me_hurt+0xac>
     d6c:	ldr	sl, [pc, #420]	; f18 <me_hurt+0x1f8>
     d70:	mov	r9, r0
     d74:	ldr	sl, [pc, sl]
     d78:	ldr	r4, [sl]
     d7c:	cmp	r4, #0
     d80:	beq	db8 <me_hurt+0x98>
     d84:	ldr	r6, [r8, #8]
     d88:	ldr	r7, [r4]
     d8c:	mov	r1, r6
     d90:	ldr	r0, [r7]
     d94:	bl	b90 <match@plt>
     d98:	cmp	r0, #0
     d9c:	bne	db0 <me_hurt+0x90>
     da0:	ldr	r4, [r4, #8]
     da4:	cmp	r4, #0
     da8:	bne	d88 <me_hurt+0x68>
     dac:	b	db8 <me_hurt+0x98>
     db0:	cmp	r7, #0
     db4:	bne	dcc <me_hurt+0xac>
     db8:	ldr	r0, [r8, #12]
     dbc:	cmp	r0, #0
     dc0:	ldrbne	r0, [r0]
     dc4:	cmpne	r0, #0
     dc8:	bne	dd4 <me_hurt+0xb4>
     dcc:	sub	sp, fp, #28
     dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     dd4:	mov	r0, r5
     dd8:	mov	r4, sl
     ddc:	bl	b0c <get_oper_name@plt>
     de0:	movw	r2, #34953	; 0x8889
     de4:	mov	r3, r0
     de8:	ldr	r0, [r8, #8]
     dec:	ldr	r1, [r8, #12]
     df0:	movt	r2, #34952	; 0x8888
     df4:	smmla	r2, r9, r2, r9
     df8:	asr	r7, r2, #5
     dfc:	add	r2, r7, r2, lsr #31
     e00:	stm	sp, {r0, r2}
     e04:	str	r1, [sp, #8]
     e08:	mov	r0, #256	; 0x100
     e0c:	mov	r1, #0
     e10:	ldr	r2, [pc, #260]	; f1c <me_hurt+0x1fc>
     e14:	add	r2, pc, r2
     e18:	bl	b00 <sendto_realops_snomask@plt>
     e1c:	ldr	sl, [r8, #8]
     e20:	ldr	r8, [r8, #12]
     e24:	mov	r0, #1
     e28:	mov	r1, #20
     e2c:	bl	a7c <calloc@plt>
     e30:	cmp	r0, #0
     e34:	beq	ef4 <me_hurt+0x1d4>
     e38:	mov	r5, r0
     e3c:	mov	r0, sl
     e40:	bl	b6c <strlen@plt>
     e44:	add	r0, r0, #1
     e48:	bl	b3c <malloc@plt>
     e4c:	cmp	r0, #0
     e50:	beq	ef4 <me_hurt+0x1d4>
     e54:	mov	r1, sl
     e58:	mov	r6, r0
     e5c:	bl	b24 <strcpy@plt>
     e60:	mov	r0, r8
     e64:	str	r6, [r5]
     e68:	bl	b6c <strlen@plt>
     e6c:	add	r0, r0, #1
     e70:	bl	b3c <malloc@plt>
     e74:	cmp	r0, #0
     e78:	beq	ef4 <me_hurt+0x1d4>
     e7c:	mov	r1, r8
     e80:	mov	r6, r0
     e84:	bl	b24 <strcpy@plt>
     e88:	str	r6, [r5, #12]
     e8c:	bl	a94 <rb_current_time@plt>
     e90:	add	r0, r0, r9
     e94:	str	r0, [r5, #16]
     e98:	bl	b54 <rb_make_rb_dlink_node@plt>
     e9c:	cmp	r0, #0
     ea0:	beq	ef8 <me_hurt+0x1d8>
     ea4:	mov	r1, #0
     ea8:	str	r1, [r0, #4]
     eac:	str	r5, [r0]
     eb0:	ldr	r1, [r4]
     eb4:	cmp	r1, #0
     eb8:	str	r1, [r0, #8]
     ebc:	beq	ecc <me_hurt+0x1ac>
     ec0:	add	r1, r1, #4
     ec4:	str	r0, [r1]
     ec8:	b	edc <me_hurt+0x1bc>
     ecc:	mov	r1, r4
     ed0:	ldr	r2, [r1, #4]!
     ed4:	cmp	r2, #0
     ed8:	streq	r0, [r1]
     edc:	str	r0, [r4]
     ee0:	ldr	r0, [r4, #8]
     ee4:	add	r0, r0, #1
     ee8:	str	r0, [r4, #8]
     eec:	sub	sp, fp, #28
     ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     ef4:	bl	af4 <rb_outofmemory@plt>
     ef8:	ldr	r0, [pc, #32]	; f20 <me_hurt+0x200>
     efc:	ldr	r1, [pc, #32]	; f24 <me_hurt+0x204>
     f00:	ldr	r3, [pc, #32]	; f28 <me_hurt+0x208>
     f04:	mov	r2, #144	; 0x90
     f08:	add	r0, pc, r0
     f0c:	add	r1, pc, r1
     f10:	add	r3, pc, r3
     f14:	bl	bf0 <__assert_fail@plt>
     f18:	.word	0x00012314
     f1c:	.word	0x000014e4
     f20:	.word	0x00001321
     f24:	.word	0x00001298
     f28:	.word	0x0000141f

00000f2c <mo_hurt>:
     f2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f30:	add	fp, sp, #28
     f34:	sub	sp, sp, #20
     f38:	ldr	r0, [r2, #24]
     f3c:	mov	r4, r2
     f40:	cmp	r0, #0
     f44:	ldrne	r0, [r0, #36]	; 0x24
     f48:	cmpne	r0, #0
     f4c:	bne	f84 <mo_hurt+0x58>
     f50:	ldr	r0, [pc, #872]	; 12c0 <mo_hurt+0x394>
     f54:	add	r3, r4, #88	; 0x58
     f58:	add	r0, pc, r0
     f5c:	str	r0, [sp]
     f60:	ldr	r0, [pc, #860]	; 12c4 <mo_hurt+0x398>
     f64:	ldr	r0, [pc, r0]
     f68:	ldr	r1, [pc, #856]	; 12c8 <mo_hurt+0x39c>
     f6c:	add	r2, r0, #88	; 0x58
     f70:	add	r1, pc, r1
     f74:	mov	r0, r4
     f78:	bl	ac4 <sendto_one@plt>
     f7c:	sub	sp, fp, #28
     f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f84:	ldr	r6, [fp, #8]
     f88:	ldr	r1, [pc, #780]	; 129c <mo_hurt+0x370>
     f8c:	mov	r5, r3
     f90:	add	r1, pc, r1
     f94:	bl	bd8 <privilegeset_in_set@plt>
     f98:	cmp	r0, #0
     f9c:	beq	f50 <mo_hurt+0x24>
     fa0:	cmp	r5, #3
     fa4:	bne	fb0 <mo_hurt+0x84>
     fa8:	ldmib	r6, {r7, sl}
     fac:	b	fd8 <mo_hurt+0xac>
     fb0:	ldmib	r6, {r0, r7, sl}
     fb4:	cmp	r0, #0
     fb8:	beq	fd8 <mo_hurt+0xac>
     fbc:	bl	ba8 <valid_temp_time@plt>
     fc0:	mov	r9, r0
     fc4:	cmp	r0, #0
     fc8:	bgt	fdc <mo_hurt+0xb0>
     fcc:	ldr	r1, [pc, #720]	; 12a4 <mo_hurt+0x378>
     fd0:	add	r1, pc, r1
     fd4:	b	ff4 <mo_hurt+0xc8>
     fd8:	movw	r9, #10080	; 0x2760
     fdc:	cmp	sl, #0
     fe0:	ldrbne	r0, [sl]
     fe4:	cmpne	r0, #0
     fe8:	bne	1004 <mo_hurt+0xd8>
     fec:	ldr	r1, [pc, #684]	; 12a0 <mo_hurt+0x374>
     ff0:	add	r1, pc, r1
     ff4:	mov	r0, r4
     ff8:	sub	sp, fp, #28
     ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1000:	b	bb4 <sendto_one_notice@plt>
    1004:	mov	r0, r7
    1008:	mov	r1, #46	; 0x2e
    100c:	bl	b78 <strchr@plt>
    1010:	cmp	r0, #0
    1014:	bne	102c <mo_hurt+0x100>
    1018:	mov	r0, r7
    101c:	mov	r1, #58	; 0x3a
    1020:	bl	b78 <strchr@plt>
    1024:	cmp	r0, #0
    1028:	beq	108c <mo_hurt+0x160>
    102c:	ldr	r1, [pc, #628]	; 12a8 <mo_hurt+0x37c>
    1030:	mov	r0, r7
    1034:	mov	r2, #2
    1038:	add	r1, pc, r1
    103c:	bl	be4 <strncmp@plt>
    1040:	cmp	r0, #0
    1044:	mov	r1, #33	; 0x21
    1048:	addeq	r7, r7, #2
    104c:	mov	r0, r7
    1050:	bl	b78 <strchr@plt>
    1054:	cmp	r0, #0
    1058:	bne	1070 <mo_hurt+0x144>
    105c:	mov	r0, r7
    1060:	mov	r1, #64	; 0x40
    1064:	bl	b78 <strchr@plt>
    1068:	cmp	r0, #0
    106c:	beq	10a0 <mo_hurt+0x174>
    1070:	ldr	r1, [pc, #600]	; 12d0 <mo_hurt+0x3a4>
    1074:	mov	r0, r4
    1078:	mov	r2, r7
    107c:	add	r1, pc, r1
    1080:	sub	sp, fp, #28
    1084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1088:	b	bb4 <sendto_one_notice@plt>
    108c:	mov	r0, r7
    1090:	bl	bc0 <find_named_person@plt>
    1094:	cmp	r0, #0
    1098:	beq	1258 <mo_hurt+0x32c>
    109c:	add	r7, r0, #227	; 0xe3
    10a0:	ldr	r0, [pc, #516]	; 12ac <mo_hurt+0x380>
    10a4:	ldr	r0, [pc, r0]
    10a8:	ldr	r6, [r0]
    10ac:	cmp	r6, #0
    10b0:	bne	10c4 <mo_hurt+0x198>
    10b4:	b	1100 <mo_hurt+0x1d4>
    10b8:	ldr	r6, [r6, #8]
    10bc:	cmp	r6, #0
    10c0:	beq	1100 <mo_hurt+0x1d4>
    10c4:	ldr	r5, [r6]
    10c8:	mov	r1, r7
    10cc:	ldr	r0, [r5]
    10d0:	bl	b90 <match@plt>
    10d4:	cmp	r0, #0
    10d8:	beq	10b8 <mo_hurt+0x18c>
    10dc:	cmp	r5, #0
    10e0:	beq	1100 <mo_hurt+0x1d4>
    10e4:	ldr	r1, [pc, #488]	; 12d4 <mo_hurt+0x3a8>
    10e8:	mov	r0, r4
    10ec:	mov	r2, r7
    10f0:	add	r1, pc, r1
    10f4:	sub	sp, fp, #28
    10f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    10fc:	b	ac4 <sendto_one@plt>
    1100:	mov	r0, r4
    1104:	bl	b0c <get_oper_name@plt>
    1108:	mov	r3, r0
    110c:	movw	r0, #34953	; 0x8889
    1110:	str	r7, [sp]
    1114:	movt	r0, #34952	; 0x8888
    1118:	smmla	r0, r9, r0, r9
    111c:	asr	r1, r0, #5
    1120:	add	r0, r1, r0, lsr #31
    1124:	mov	r1, #0
    1128:	stmib	sp, {r0, sl}
    112c:	mov	r0, #256	; 0x100
    1130:	ldr	r2, [pc, #376]	; 12b0 <mo_hurt+0x384>
    1134:	add	r2, pc, r2
    1138:	bl	b00 <sendto_realops_snomask@plt>
    113c:	mov	r0, #1
    1140:	mov	r1, #20
    1144:	bl	a7c <calloc@plt>
    1148:	cmp	r0, #0
    114c:	beq	1278 <mo_hurt+0x34c>
    1150:	mov	r8, r0
    1154:	mov	r0, r7
    1158:	bl	b6c <strlen@plt>
    115c:	add	r0, r0, #1
    1160:	bl	b3c <malloc@plt>
    1164:	cmp	r0, #0
    1168:	beq	1278 <mo_hurt+0x34c>
    116c:	mov	r1, r7
    1170:	mov	r6, r0
    1174:	bl	b24 <strcpy@plt>
    1178:	mov	r0, sl
    117c:	str	r6, [r8]
    1180:	bl	b6c <strlen@plt>
    1184:	add	r0, r0, #1
    1188:	bl	b3c <malloc@plt>
    118c:	cmp	r0, #0
    1190:	beq	1278 <mo_hurt+0x34c>
    1194:	mov	r1, sl
    1198:	mov	r6, r0
    119c:	bl	b24 <strcpy@plt>
    11a0:	str	r6, [r8, #12]
    11a4:	bl	a94 <rb_current_time@plt>
    11a8:	add	r5, r0, r9
    11ac:	str	r5, [r8, #16]
    11b0:	bl	b54 <rb_make_rb_dlink_node@plt>
    11b4:	cmp	r0, #0
    11b8:	beq	127c <mo_hurt+0x350>
    11bc:	mov	r1, #0
    11c0:	str	r1, [r0, #4]
    11c4:	str	r8, [r0]
    11c8:	ldr	r3, [pc, #228]	; 12b4 <mo_hurt+0x388>
    11cc:	ldr	r3, [pc, r3]
    11d0:	ldr	r1, [r3]
    11d4:	cmp	r1, #0
    11d8:	str	r1, [r0, #8]
    11dc:	beq	11ec <mo_hurt+0x2c0>
    11e0:	add	r1, r1, #4
    11e4:	str	r0, [r1]
    11e8:	b	11fc <mo_hurt+0x2d0>
    11ec:	mov	r1, r3
    11f0:	ldr	r2, [r1, #4]!
    11f4:	cmp	r2, #0
    11f8:	streq	r0, [r1]
    11fc:	str	r0, [r3]
    1200:	ldr	r0, [r3, #8]
    1204:	add	r0, r0, #1
    1208:	str	r0, [r3, #8]
    120c:	bl	a94 <rb_current_time@plt>
    1210:	ldr	r1, [r8]
    1214:	ldr	r2, [r8, #12]
    1218:	ldr	r7, [pc, #152]	; 12b8 <mo_hurt+0x38c>
    121c:	add	r3, r4, #88	; 0x58
    1220:	sub	r0, r5, r0
    1224:	str	r3, [sp, #4]
    1228:	add	r3, sp, #8
    122c:	add	r7, pc, r7
    1230:	str	r7, [sp]
    1234:	stm	r3, {r0, r1, r2}
    1238:	mov	r1, #0
    123c:	mov	r2, #0
    1240:	mov	r3, #0
    1244:	ldr	r0, [pc, #112]	; 12bc <mo_hurt+0x390>
    1248:	ldr	r0, [pc, r0]
    124c:	bl	b30 <sendto_server@plt>
    1250:	sub	sp, fp, #28
    1254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1258:	ldr	r2, [pc, #108]	; 12cc <mo_hurt+0x3a0>
    125c:	mov	r0, r4
    1260:	movw	r1, #401	; 0x191
    1264:	mov	r3, r7
    1268:	add	r2, pc, r2
    126c:	sub	sp, fp, #28
    1270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1274:	b	b60 <sendto_one_numeric@plt>
    1278:	bl	af4 <rb_outofmemory@plt>
    127c:	ldr	r0, [pc, #84]	; 12d8 <mo_hurt+0x3ac>
    1280:	ldr	r1, [pc, #84]	; 12dc <mo_hurt+0x3b0>
    1284:	ldr	r3, [pc, #84]	; 12e0 <mo_hurt+0x3b4>
    1288:	mov	r2, #144	; 0x90
    128c:	add	r0, pc, r0
    1290:	add	r1, pc, r1
    1294:	add	r3, pc, r3
    1298:	bl	bf0 <__assert_fail@plt>
    129c:	.word	0x000012a3
    12a0:	.word	0x00001298
    12a4:	.word	0x00001295
    12a8:	.word	0x00001292
    12ac:	.word	0x00011fe4
    12b0:	.word	0x000011c4
    12b4:	.word	0x00011ebc
    12b8:	.word	0x0000113e
    12bc:	.word	0x00011e5c
    12c0:	.word	0x000012e0
    12c4:	.word	0x00012140
    12c8:	.word	0x000012ce
    12cc:	.word	0x00001049
    12d0:	.word	0x00001251
    12d4:	.word	0x000011f5
    12d8:	.word	0x00000f9d
    12dc:	.word	0x00000f14
    12e0:	.word	0x0000109b

000012e4 <me_heal>:
    12e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    12e8:	add	fp, sp, #24
    12ec:	sub	sp, sp, #8
    12f0:	cmp	r3, #2
    12f4:	bge	1300 <me_heal+0x1c>
    12f8:	sub	sp, fp, #24
    12fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1300:	ldr	r7, [fp, #8]
    1304:	mov	r1, #0
    1308:	mov	r9, r2
    130c:	ldr	r0, [r7, #4]
    1310:	bl	b84 <clean_nick@plt>
    1314:	ldr	r5, [r7, #4]
    1318:	cmp	r0, #0
    131c:	beq	1350 <me_heal+0x6c>
    1320:	mov	r0, r5
    1324:	bl	b9c <find_person@plt>
    1328:	cmp	r0, #0
    132c:	beq	12f8 <me_heal+0x14>
    1330:	mov	r1, r0
    1334:	ldrb	r0, [r0, #65]	; 0x41
    1338:	tst	r0, #32
    133c:	beq	12f8 <me_heal+0x14>
    1340:	mov	r0, r9
    1344:	sub	sp, fp, #24
    1348:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    134c:	b	1ff0 <heal_nick>
    1350:	mov	r0, r5
    1354:	mov	r1, #46	; 0x2e
    1358:	bl	b78 <strchr@plt>
    135c:	cmp	r0, #0
    1360:	beq	12f8 <me_heal+0x14>
    1364:	ldr	r8, [pc, #336]	; 14bc <me_heal+0x1d8>
    1368:	ldr	r8, [pc, r8]
    136c:	ldr	r4, [r8]
    1370:	cmp	r4, #0
    1374:	bne	1388 <me_heal+0xa4>
    1378:	b	12f8 <me_heal+0x14>
    137c:	ldr	r4, [r4, #8]
    1380:	cmp	r4, #0
    1384:	beq	12f8 <me_heal+0x14>
    1388:	ldr	r6, [r4]
    138c:	mov	r0, r5
    1390:	ldr	r1, [r6]
    1394:	bl	ae8 <rb_strcasecmp@plt>
    1398:	cmp	r0, #0
    139c:	bne	137c <me_heal+0x98>
    13a0:	cmp	r6, #0
    13a4:	beq	12f8 <me_heal+0x14>
    13a8:	ldr	r4, [r8]
    13ac:	cmp	r4, #0
    13b0:	beq	13dc <me_heal+0xf8>
    13b4:	ldr	r6, [r7, #4]
    13b8:	ldr	r5, [r4]
    13bc:	mov	r0, r6
    13c0:	ldr	r1, [r5]
    13c4:	bl	ae8 <rb_strcasecmp@plt>
    13c8:	cmp	r0, #0
    13cc:	beq	13fc <me_heal+0x118>
    13d0:	ldr	r4, [r4, #8]
    13d4:	cmp	r4, #0
    13d8:	bne	13b8 <me_heal+0xd4>
    13dc:	ldr	r0, [pc, #224]	; 14c4 <me_heal+0x1e0>
    13e0:	ldr	r1, [pc, #224]	; 14c8 <me_heal+0x1e4>
    13e4:	ldr	r3, [pc, #224]	; 14cc <me_heal+0x1e8>
    13e8:	mov	r2, #288	; 0x120
    13ec:	add	r0, pc, r0
    13f0:	add	r1, pc, r1
    13f4:	add	r3, pc, r3
    13f8:	bl	bf0 <__assert_fail@plt>
    13fc:	cmp	r5, #0
    1400:	beq	13dc <me_heal+0xf8>
    1404:	ldr	r1, [r8]
    1408:	cmp	r1, #0
    140c:	beq	1464 <me_heal+0x180>
    1410:	ldr	r2, [r1]
    1414:	mov	r0, r1
    1418:	ldr	r1, [r1, #8]
    141c:	cmp	r2, r5
    1420:	bne	1408 <me_heal+0x124>
    1424:	ldr	r2, [r0, #4]
    1428:	cmp	r1, #0
    142c:	mov	r3, r8
    1430:	streq	r2, [r8, #4]
    1434:	strne	r2, [r1, #4]
    1438:	ldrne	r2, [r0, #4]
    143c:	cmp	r2, #0
    1440:	addne	r3, r2, #8
    1444:	str	r1, [r3]
    1448:	mov	r1, #0
    144c:	str	r1, [r0, #4]
    1450:	str	r1, [r0, #8]
    1454:	ldr	r1, [r8, #8]
    1458:	sub	r1, r1, #1
    145c:	str	r1, [r8, #8]
    1460:	bl	b18 <rb_free_rb_dlink_node@plt>
    1464:	ldr	r0, [r5]
    1468:	cmp	r0, #0
    146c:	beq	1474 <me_heal+0x190>
    1470:	bl	adc <free@plt>
    1474:	ldr	r0, [r5, #12]
    1478:	cmp	r0, #0
    147c:	beq	1484 <me_heal+0x1a0>
    1480:	bl	adc <free@plt>
    1484:	mov	r0, r5
    1488:	bl	adc <free@plt>
    148c:	mov	r0, r9
    1490:	bl	b0c <get_oper_name@plt>
    1494:	mov	r3, r0
    1498:	ldr	r0, [r7, #4]
    149c:	mov	r1, #0
    14a0:	str	r0, [sp]
    14a4:	mov	r0, #256	; 0x100
    14a8:	ldr	r2, [pc, #16]	; 14c0 <me_heal+0x1dc>
    14ac:	add	r2, pc, r2
    14b0:	bl	b00 <sendto_realops_snomask@plt>
    14b4:	sub	sp, fp, #24
    14b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    14bc:	.word	0x00011d20
    14c0:	.word	0x00000f13
    14c4:	.word	0x00000e05
    14c8:	.word	0x00000db4
    14cc:	.word	0x00000dcc

000014d0 <mo_heal>:
    14d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    14d4:	add	fp, sp, #24
    14d8:	sub	sp, sp, #16
    14dc:	ldr	r0, [r2, #24]
    14e0:	mov	r4, r2
    14e4:	cmp	r0, #0
    14e8:	ldrne	r0, [r0, #36]	; 0x24
    14ec:	cmpne	r0, #0
    14f0:	bne	1528 <mo_heal+0x58>
    14f4:	ldr	r0, [pc, #756]	; 17f0 <mo_heal+0x320>
    14f8:	add	r3, r4, #88	; 0x58
    14fc:	add	r0, pc, r0
    1500:	str	r0, [sp]
    1504:	ldr	r0, [pc, #744]	; 17f4 <mo_heal+0x324>
    1508:	ldr	r0, [pc, r0]
    150c:	ldr	r1, [pc, #740]	; 17f8 <mo_heal+0x328>
    1510:	add	r2, r0, #88	; 0x58
    1514:	add	r1, pc, r1
    1518:	mov	r0, r4
    151c:	bl	ac4 <sendto_one@plt>
    1520:	sub	sp, fp, #24
    1524:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1528:	ldr	r9, [fp, #8]
    152c:	ldr	r1, [pc, #696]	; 17ec <mo_heal+0x31c>
    1530:	add	r1, pc, r1
    1534:	bl	bd8 <privilegeset_in_set@plt>
    1538:	cmp	r0, #0
    153c:	beq	14f4 <mo_heal+0x24>
    1540:	ldr	r0, [r9, #4]
    1544:	mov	r1, #0
    1548:	bl	b84 <clean_nick@plt>
    154c:	ldr	r5, [r9, #4]
    1550:	cmp	r0, #0
    1554:	beq	15b4 <mo_heal+0xe4>
    1558:	mov	r0, r5
    155c:	bl	bc0 <find_named_person@plt>
    1560:	cmp	r0, #0
    1564:	beq	1608 <mo_heal+0x138>
    1568:	mov	r2, r0
    156c:	ldrb	r0, [r0, #65]	; 0x41
    1570:	tst	r0, #32
    1574:	bne	1628 <mo_heal+0x158>
    1578:	ldr	r0, [r2, #36]	; 0x24
    157c:	ldrh	r1, [r0, #80]	; 0x50
    1580:	cmp	r1, #32
    1584:	bne	1658 <mo_heal+0x188>
    1588:	ldrb	r0, [r0, #396]	; 0x18c
    158c:	cmp	r0, #0
    1590:	beq	1658 <mo_heal+0x188>
    1594:	mov	r0, r2
    1598:	ldrb	r1, [r0, #396]!	; 0x18c
    159c:	cmp	r1, #0
    15a0:	ldrb	r1, [r4, #396]!	; 0x18c
    15a4:	subeq	r0, r0, #308	; 0x134
    15a8:	cmp	r1, #0
    15ac:	subeq	r4, r4, #308	; 0x134
    15b0:	b	1660 <mo_heal+0x190>
    15b4:	mov	r0, r5
    15b8:	mov	r1, #46	; 0x2e
    15bc:	bl	b78 <strchr@plt>
    15c0:	cmp	r0, #0
    15c4:	beq	163c <mo_heal+0x16c>
    15c8:	ldr	r8, [pc, #560]	; 1800 <mo_heal+0x330>
    15cc:	ldr	r8, [pc, r8]
    15d0:	ldr	r6, [r8]
    15d4:	cmp	r6, #0
    15d8:	beq	17b0 <mo_heal+0x2e0>
    15dc:	ldr	r7, [r6]
    15e0:	mov	r0, r5
    15e4:	ldr	r1, [r7]
    15e8:	bl	ae8 <rb_strcasecmp@plt>
    15ec:	cmp	r0, #0
    15f0:	beq	1680 <mo_heal+0x1b0>
    15f4:	ldr	r6, [r6, #8]
    15f8:	cmp	r6, #0
    15fc:	bne	15dc <mo_heal+0x10c>
    1600:	ldr	r5, [r9, #4]
    1604:	b	17b0 <mo_heal+0x2e0>
    1608:	ldr	r3, [r9, #4]
    160c:	ldr	r2, [pc, #520]	; 181c <mo_heal+0x34c>
    1610:	mov	r0, r4
    1614:	movw	r1, #401	; 0x191
    1618:	add	r2, pc, r2
    161c:	sub	sp, fp, #24
    1620:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    1624:	b	b60 <sendto_one_numeric@plt>
    1628:	mov	r0, r4
    162c:	mov	r1, r2
    1630:	sub	sp, fp, #24
    1634:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    1638:	b	1ff0 <heal_nick>
    163c:	ldr	r1, [pc, #468]	; 1818 <mo_heal+0x348>
    1640:	mov	r0, r4
    1644:	mov	r2, r5
    1648:	add	r1, pc, r1
    164c:	sub	sp, fp, #24
    1650:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    1654:	b	ac4 <sendto_one@plt>
    1658:	add	r0, r2, #88	; 0x58
    165c:	add	r4, r4, #88	; 0x58
    1660:	ldr	r1, [r2, #32]
    1664:	str	r0, [sp]
    1668:	mov	r0, r2
    166c:	mov	r2, r4
    1670:	add	r3, r1, #88	; 0x58
    1674:	ldr	r1, [pc, #384]	; 17fc <mo_heal+0x32c>
    1678:	add	r1, pc, r1
    167c:	b	151c <mo_heal+0x4c>
    1680:	ldr	r5, [r9, #4]
    1684:	cmp	r7, #0
    1688:	beq	17b0 <mo_heal+0x2e0>
    168c:	ldr	r7, [r8]
    1690:	cmp	r7, #0
    1694:	bne	16a8 <mo_heal+0x1d8>
    1698:	b	17cc <mo_heal+0x2fc>
    169c:	ldr	r7, [r7, #8]
    16a0:	cmp	r7, #0
    16a4:	beq	17cc <mo_heal+0x2fc>
    16a8:	ldr	r6, [r7]
    16ac:	mov	r0, r5
    16b0:	ldr	r1, [r6]
    16b4:	bl	ae8 <rb_strcasecmp@plt>
    16b8:	cmp	r0, #0
    16bc:	bne	169c <mo_heal+0x1cc>
    16c0:	cmp	r6, #0
    16c4:	beq	17cc <mo_heal+0x2fc>
    16c8:	ldr	r1, [r8]
    16cc:	cmp	r1, #0
    16d0:	beq	1728 <mo_heal+0x258>
    16d4:	ldr	r2, [r1]
    16d8:	mov	r0, r1
    16dc:	ldr	r1, [r1, #8]
    16e0:	cmp	r2, r6
    16e4:	bne	16cc <mo_heal+0x1fc>
    16e8:	ldr	r2, [r0, #4]
    16ec:	cmp	r1, #0
    16f0:	mov	r3, r8
    16f4:	streq	r2, [r8, #4]
    16f8:	strne	r2, [r1, #4]
    16fc:	ldrne	r2, [r0, #4]
    1700:	cmp	r2, #0
    1704:	addne	r3, r2, #8
    1708:	str	r1, [r3]
    170c:	mov	r1, #0
    1710:	str	r1, [r0, #4]
    1714:	str	r1, [r0, #8]
    1718:	ldr	r1, [r8, #8]
    171c:	sub	r1, r1, #1
    1720:	str	r1, [r8, #8]
    1724:	bl	b18 <rb_free_rb_dlink_node@plt>
    1728:	ldr	r0, [r6]
    172c:	cmp	r0, #0
    1730:	beq	1738 <mo_heal+0x268>
    1734:	bl	adc <free@plt>
    1738:	ldr	r0, [r6, #12]
    173c:	cmp	r0, #0
    1740:	beq	1748 <mo_heal+0x278>
    1744:	bl	adc <free@plt>
    1748:	mov	r0, r6
    174c:	bl	adc <free@plt>
    1750:	mov	r0, r4
    1754:	bl	b0c <get_oper_name@plt>
    1758:	mov	r3, r0
    175c:	ldr	r0, [r9, #4]
    1760:	mov	r1, #0
    1764:	str	r0, [sp]
    1768:	mov	r0, #256	; 0x100
    176c:	ldr	r2, [pc, #156]	; 1810 <mo_heal+0x340>
    1770:	add	r2, pc, r2
    1774:	bl	b00 <sendto_realops_snomask@plt>
    1778:	ldr	r0, [r9, #4]
    177c:	ldr	r2, [pc, #144]	; 1814 <mo_heal+0x344>
    1780:	add	r1, r4, #88	; 0x58
    1784:	mov	r3, #0
    1788:	str	r1, [sp, #4]
    178c:	mov	r1, #0
    1790:	add	r2, pc, r2
    1794:	str	r0, [sp, #8]
    1798:	mov	r0, #0
    179c:	str	r2, [sp]
    17a0:	mov	r2, #0
    17a4:	bl	b30 <sendto_server@plt>
    17a8:	sub	sp, fp, #24
    17ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    17b0:	ldr	r1, [pc, #104]	; 1820 <mo_heal+0x350>
    17b4:	mov	r0, r4
    17b8:	mov	r2, r5
    17bc:	add	r1, pc, r1
    17c0:	sub	sp, fp, #24
    17c4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    17c8:	b	bb4 <sendto_one_notice@plt>
    17cc:	ldr	r0, [pc, #48]	; 1804 <mo_heal+0x334>
    17d0:	ldr	r1, [pc, #48]	; 1808 <mo_heal+0x338>
    17d4:	ldr	r3, [pc, #48]	; 180c <mo_heal+0x33c>
    17d8:	mov	r2, #288	; 0x120
    17dc:	add	r0, pc, r0
    17e0:	add	r1, pc, r1
    17e4:	add	r3, pc, r3
    17e8:	bl	bf0 <__assert_fail@plt>
    17ec:	.word	0x00000e56
    17f0:	.word	0x00000e8f
    17f4:	.word	0x00011b9c
    17f8:	.word	0x00000d2a
    17fc:	.word	0x00000d1b
    1800:	.word	0x00011abc
    1804:	.word	0x00000a15
    1808:	.word	0x000009c4
    180c:	.word	0x000009dc
    1810:	.word	0x00000c4f
    1814:	.word	0x00000c45
    1818:	.word	0x00000da1
    181c:	.word	0x00000c99
    1820:	.word	0x00000bec

00001824 <client_exit_hook>:
    1824:	ldr	r3, [r0, #4]
    1828:	cmp	r3, #0
    182c:	beq	1898 <client_exit_hook+0x74>
    1830:	ldr	ip, [pc, #136]	; 18c0 <client_exit_hook+0x9c>
    1834:	ldr	ip, [pc, ip]
    1838:	ldr	r2, [ip, #8]
    183c:	cmp	r2, #0
    1840:	bxeq	lr
    1844:	ldr	r1, [r2]
    1848:	mov	r0, r2
    184c:	ldr	r2, [r2, #8]
    1850:	cmp	r1, r3
    1854:	bne	183c <client_exit_hook+0x18>
    1858:	ldr	r3, [r0, #4]
    185c:	cmp	r2, #0
    1860:	streq	r3, [ip, #12]
    1864:	strne	r3, [r2, #4]
    1868:	ldrne	r3, [r0, #4]
    186c:	add	r1, r3, #8
    1870:	cmp	r3, #0
    1874:	addeq	r1, ip, #8
    1878:	str	r2, [r1]
    187c:	mov	r1, #0
    1880:	str	r1, [r0, #4]
    1884:	str	r1, [r0, #8]
    1888:	ldr	r1, [ip, #16]
    188c:	sub	r1, r1, #1
    1890:	str	r1, [ip, #16]
    1894:	b	b18 <rb_free_rb_dlink_node@plt>
    1898:	push	{fp, lr}
    189c:	mov	fp, sp
    18a0:	ldr	r0, [pc, #28]	; 18c4 <client_exit_hook+0xa0>
    18a4:	ldr	r1, [pc, #28]	; 18c8 <client_exit_hook+0xa4>
    18a8:	ldr	r3, [pc, #28]	; 18cc <client_exit_hook+0xa8>
    18ac:	mov	r2, #288	; 0x120
    18b0:	add	r0, pc, r0
    18b4:	add	r1, pc, r1
    18b8:	add	r3, pc, r3
    18bc:	bl	bf0 <__assert_fail@plt>
    18c0:	.word	0x00011860
    18c4:	.word	0x00000941
    18c8:	.word	0x000008f0
    18cc:	.word	0x00000908

000018d0 <new_local_user_hook>:
    18d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    18d4:	add	fp, sp, #24
    18d8:	mov	r6, r0
    18dc:	mov	r9, r0
    18e0:	movw	r1, #16418	; 0x4022
    18e4:	ldr	r0, [r6, #64]!	; 0x40
    18e8:	tst	r0, r1
    18ec:	bne	1904 <new_local_user_hook+0x34>
    18f0:	tst	r0, #4194304	; 0x400000
    18f4:	ldreq	r0, [r9, #24]
    18f8:	ldrbeq	r0, [r0, #40]	; 0x28
    18fc:	cmpeq	r0, #0
    1900:	beq	1908 <new_local_user_hook+0x38>
    1904:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1908:	ldr	r8, [pc, #344]	; 1a68 <new_local_user_hook+0x198>
    190c:	ldr	r8, [pc, r8]
    1910:	ldr	r7, [r8]
    1914:	cmp	r7, #0
    1918:	beq	1904 <new_local_user_hook+0x34>
    191c:	movw	r0, #291	; 0x123
    1920:	add	r5, r9, r0
    1924:	ldr	r4, [r7]
    1928:	mov	r1, r5
    192c:	ldr	r0, [r4]
    1930:	bl	b90 <match@plt>
    1934:	cmp	r0, #0
    1938:	bne	194c <new_local_user_hook+0x7c>
    193c:	ldr	r7, [r7, #8]
    1940:	cmp	r7, #0
    1944:	bne	1924 <new_local_user_hook+0x54>
    1948:	b	1954 <new_local_user_hook+0x84>
    194c:	cmp	r4, #0
    1950:	bne	1994 <new_local_user_hook+0xc4>
    1954:	ldr	r7, [r8]
    1958:	cmp	r7, #0
    195c:	beq	1904 <new_local_user_hook+0x34>
    1960:	add	r5, r9, #227	; 0xe3
    1964:	ldr	r4, [r7]
    1968:	mov	r1, r5
    196c:	ldr	r0, [r4]
    1970:	bl	b90 <match@plt>
    1974:	cmp	r0, #0
    1978:	bne	198c <new_local_user_hook+0xbc>
    197c:	ldr	r7, [r7, #8]
    1980:	cmp	r7, #0
    1984:	bne	1964 <new_local_user_hook+0x94>
    1988:	b	1904 <new_local_user_hook+0x34>
    198c:	cmp	r4, #0
    1990:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
    1994:	bl	a94 <rb_current_time@plt>
    1998:	ldr	r1, [r9, #432]	; 0x1b0
    199c:	add	r0, r0, #600	; 0x258
    19a0:	str	r0, [r1, #416]	; 0x1a0
    19a4:	ldr	r0, [r6]
    19a8:	orr	r0, r0, #65536	; 0x10000
    19ac:	str	r0, [r6]
    19b0:	bl	b54 <rb_make_rb_dlink_node@plt>
    19b4:	cmp	r9, #0
    19b8:	beq	1a28 <new_local_user_hook+0x158>
    19bc:	cmp	r0, #0
    19c0:	beq	1a48 <new_local_user_hook+0x178>
    19c4:	mov	r1, #0
    19c8:	str	r1, [r0, #4]
    19cc:	str	r9, [r0]
    19d0:	ldr	r1, [pc, #148]	; 1a6c <new_local_user_hook+0x19c>
    19d4:	ldr	r1, [pc, r1]
    19d8:	ldr	r2, [r1, #8]
    19dc:	cmp	r2, #0
    19e0:	str	r2, [r0, #8]
    19e4:	beq	19f4 <new_local_user_hook+0x124>
    19e8:	add	r2, r2, #4
    19ec:	str	r0, [r2]
    19f0:	b	1a04 <new_local_user_hook+0x134>
    19f4:	mov	r2, r1
    19f8:	ldr	r3, [r2, #12]!
    19fc:	cmp	r3, #0
    1a00:	streq	r0, [r2]
    1a04:	str	r0, [r1, #8]
    1a08:	ldr	r0, [r1, #16]
    1a0c:	add	r0, r0, #1
    1a10:	str	r0, [r1, #16]
    1a14:	mov	r0, r9
    1a18:	ldr	r1, [pc, #80]	; 1a70 <new_local_user_hook+0x1a0>
    1a1c:	add	r1, pc, r1
    1a20:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    1a24:	b	bb4 <sendto_one_notice@plt>
    1a28:	ldr	r0, [pc, #68]	; 1a74 <new_local_user_hook+0x1a4>
    1a2c:	ldr	r1, [pc, #68]	; 1a78 <new_local_user_hook+0x1a8>
    1a30:	ldr	r3, [pc, #68]	; 1a7c <new_local_user_hook+0x1ac>
    1a34:	mov	r2, #143	; 0x8f
    1a38:	add	r0, pc, r0
    1a3c:	add	r1, pc, r1
    1a40:	add	r3, pc, r3
    1a44:	bl	bf0 <__assert_fail@plt>
    1a48:	ldr	r0, [pc, #48]	; 1a80 <new_local_user_hook+0x1b0>
    1a4c:	ldr	r1, [pc, #48]	; 1a84 <new_local_user_hook+0x1b4>
    1a50:	ldr	r3, [pc, #48]	; 1a88 <new_local_user_hook+0x1b8>
    1a54:	mov	r2, #144	; 0x90
    1a58:	add	r0, pc, r0
    1a5c:	add	r1, pc, r1
    1a60:	add	r3, pc, r3
    1a64:	bl	bf0 <__assert_fail@plt>
    1a68:	.word	0x0001177c
    1a6c:	.word	0x000116c0
    1a70:	.word	0x00000a74
    1a74:	.word	0x000007b9
    1a78:	.word	0x00000768
    1a7c:	.word	0x000008ef
    1a80:	.word	0x000007d1
    1a84:	.word	0x00000748
    1a88:	.word	0x000008cf

00001a8c <doing_stats_hook>:
    1a8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1a90:	add	fp, sp, #24
    1a94:	sub	sp, sp, #24
    1a98:	ldr	r1, [r0, #8]
    1a9c:	cmp	r1, #115	; 0x73
    1aa0:	bne	1c5c <doing_stats_hook+0x1d0>
    1aa4:	ldr	r8, [r0]
    1aa8:	ldr	r5, [pc, #512]	; 1cb0 <doing_stats_hook+0x224>
    1aac:	ldr	r5, [pc, r5]
    1ab0:	ldr	r0, [r5, #164]	; 0xa4
    1ab4:	cmp	r0, #2
    1ab8:	bne	1b0c <doing_stats_hook+0x80>
    1abc:	ldr	r0, [r8, #24]
    1ac0:	cmp	r0, #0
    1ac4:	ldrne	r0, [r0, #36]	; 0x24
    1ac8:	cmpne	r0, #0
    1acc:	bne	1af4 <doing_stats_hook+0x68>
    1ad0:	ldrb	r0, [r8, #57]	; 0x39
    1ad4:	tst	r0, #16
    1ad8:	ldrne	r0, [r8, #24]
    1adc:	cmpne	r0, #0
    1ae0:	beq	1c5c <doing_stats_hook+0x1d0>
    1ae4:	ldr	r0, [r0, #36]	; 0x24
    1ae8:	cmp	r0, #0
    1aec:	bne	1c5c <doing_stats_hook+0x1d0>
    1af0:	b	1b08 <doing_stats_hook+0x7c>
    1af4:	ldr	r1, [pc, #440]	; 1cb4 <doing_stats_hook+0x228>
    1af8:	add	r1, pc, r1
    1afc:	bl	bd8 <privilegeset_in_set@plt>
    1b00:	cmp	r0, #0
    1b04:	beq	1ad0 <doing_stats_hook+0x44>
    1b08:	ldr	r0, [r5, #164]	; 0xa4
    1b0c:	cmp	r0, #1
    1b10:	bne	1bf0 <doing_stats_hook+0x164>
    1b14:	ldr	r0, [r8, #24]
    1b18:	cmp	r0, #0
    1b1c:	ldrne	r0, [r0, #36]	; 0x24
    1b20:	cmpne	r0, #0
    1b24:	bne	1b80 <doing_stats_hook+0xf4>
    1b28:	ldrb	r0, [r8, #57]	; 0x39
    1b2c:	tst	r0, #16
    1b30:	ldrne	r0, [r8, #24]
    1b34:	cmpne	r0, #0
    1b38:	bne	1be4 <doing_stats_hook+0x158>
    1b3c:	ldr	r6, [pc, #376]	; 1cbc <doing_stats_hook+0x230>
    1b40:	ldr	r6, [pc, r6]
    1b44:	ldr	r4, [r6]
    1b48:	cmp	r4, #0
    1b4c:	beq	1c5c <doing_stats_hook+0x1d0>
    1b50:	movw	r0, #291	; 0x123
    1b54:	add	r5, r8, r0
    1b58:	ldr	r7, [r4]
    1b5c:	mov	r1, r5
    1b60:	ldr	r0, [r7]
    1b64:	bl	b90 <match@plt>
    1b68:	cmp	r0, #0
    1b6c:	bne	1b98 <doing_stats_hook+0x10c>
    1b70:	ldr	r4, [r4, #8]
    1b74:	cmp	r4, #0
    1b78:	bne	1b58 <doing_stats_hook+0xcc>
    1b7c:	b	1bac <doing_stats_hook+0x120>
    1b80:	ldr	r1, [pc, #304]	; 1cb8 <doing_stats_hook+0x22c>
    1b84:	add	r1, pc, r1
    1b88:	bl	bd8 <privilegeset_in_set@plt>
    1b8c:	cmp	r0, #0
    1b90:	bne	1bf0 <doing_stats_hook+0x164>
    1b94:	b	1b28 <doing_stats_hook+0x9c>
    1b98:	cmp	r7, #0
    1b9c:	beq	1bac <doing_stats_hook+0x120>
    1ba0:	ldr	r0, [r7]
    1ba4:	ldr	r1, [r7, #12]
    1ba8:	b	1c74 <doing_stats_hook+0x1e8>
    1bac:	ldr	r4, [r6]
    1bb0:	cmp	r4, #0
    1bb4:	beq	1c5c <doing_stats_hook+0x1d0>
    1bb8:	add	r5, r8, #227	; 0xe3
    1bbc:	ldr	r6, [r4]
    1bc0:	mov	r1, r5
    1bc4:	ldr	r0, [r6]
    1bc8:	bl	b90 <match@plt>
    1bcc:	cmp	r0, #0
    1bd0:	bne	1c64 <doing_stats_hook+0x1d8>
    1bd4:	ldr	r4, [r4, #8]
    1bd8:	cmp	r4, #0
    1bdc:	bne	1bbc <doing_stats_hook+0x130>
    1be0:	b	1c5c <doing_stats_hook+0x1d0>
    1be4:	ldr	r0, [r0, #36]	; 0x24
    1be8:	cmp	r0, #0
    1bec:	bne	1b3c <doing_stats_hook+0xb0>
    1bf0:	ldr	r0, [pc, #212]	; 1ccc <doing_stats_hook+0x240>
    1bf4:	ldr	r0, [pc, r0]
    1bf8:	ldr	r6, [r0]
    1bfc:	cmp	r6, #0
    1c00:	beq	1c5c <doing_stats_hook+0x1d0>
    1c04:	ldr	r7, [pc, #196]	; 1cd0 <doing_stats_hook+0x244>
    1c08:	ldr	r4, [pc, #196]	; 1cd4 <doing_stats_hook+0x248>
    1c0c:	ldr	r5, [pc, #196]	; 1cd8 <doing_stats_hook+0x24c>
    1c10:	add	r7, pc, r7
    1c14:	add	r4, pc, r4
    1c18:	add	r5, pc, r5
    1c1c:	ldr	r0, [r6]
    1c20:	mov	r2, r5
    1c24:	mov	r3, #115	; 0x73
    1c28:	ldr	r1, [r0]
    1c2c:	ldr	r0, [r0, #12]
    1c30:	str	r4, [sp]
    1c34:	str	r7, [sp, #12]
    1c38:	str	r7, [sp, #16]
    1c3c:	str	r1, [sp, #4]
    1c40:	str	r0, [sp, #8]
    1c44:	mov	r0, r8
    1c48:	mov	r1, #216	; 0xd8
    1c4c:	bl	b60 <sendto_one_numeric@plt>
    1c50:	ldr	r6, [r6, #8]
    1c54:	cmp	r6, #0
    1c58:	bne	1c1c <doing_stats_hook+0x190>
    1c5c:	sub	sp, fp, #24
    1c60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1c64:	cmp	r6, #0
    1c68:	beq	1c5c <doing_stats_hook+0x1d0>
    1c6c:	ldr	r0, [r6]
    1c70:	ldr	r1, [r6, #12]
    1c74:	ldr	r2, [pc, #68]	; 1cc0 <doing_stats_hook+0x234>
    1c78:	ldr	r3, [pc, #68]	; 1cc4 <doing_stats_hook+0x238>
    1c7c:	add	r3, pc, r3
    1c80:	add	r2, pc, r2
    1c84:	str	r3, [sp]
    1c88:	stmib	sp, {r0, r1, r2}
    1c8c:	str	r2, [sp, #16]
    1c90:	mov	r0, r8
    1c94:	mov	r1, #216	; 0xd8
    1c98:	mov	r3, #115	; 0x73
    1c9c:	ldr	r2, [pc, #36]	; 1cc8 <doing_stats_hook+0x23c>
    1ca0:	add	r2, pc, r2
    1ca4:	bl	b60 <sendto_one_numeric@plt>
    1ca8:	sub	sp, fp, #24
    1cac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1cb0:	.word	0x000115fc
    1cb4:	.word	0x000009f0
    1cb8:	.word	0x00000964
    1cbc:	.word	0x00011548
    1cc0:	.word	0x00000570
    1cc4:	.word	0x0000088c
    1cc8:	.word	0x00000855
    1ccc:	.word	0x00011494
    1cd0:	.word	0x000005e0
    1cd4:	.word	0x000008f4
    1cd8:	.word	0x000008dd

00001cdc <modinit>:
    1cdc:	push	{fp, lr}
    1ce0:	mov	fp, sp
    1ce4:	bl	a94 <rb_current_time@plt>
    1ce8:	ldr	r1, [pc, #92]	; 1d4c <modinit+0x70>
    1cec:	mov	r2, #0
    1cf0:	mov	r3, #60	; 0x3c
    1cf4:	ldr	r1, [pc, r1]
    1cf8:	str	r0, [r1]
    1cfc:	ldr	r0, [pc, #76]	; 1d50 <modinit+0x74>
    1d00:	ldr	r1, [pc, #76]	; 1d54 <modinit+0x78>
    1d04:	add	r0, pc, r0
    1d08:	add	r1, pc, r1
    1d0c:	bl	aa0 <rb_event_add@plt>
    1d10:	ldr	r1, [pc, #64]	; 1d58 <modinit+0x7c>
    1d14:	mov	r2, #0
    1d18:	mov	r3, #5
    1d1c:	ldr	r1, [pc, r1]
    1d20:	str	r0, [r1]
    1d24:	ldr	r0, [pc, #48]	; 1d5c <modinit+0x80>
    1d28:	ldr	r1, [pc, #48]	; 1d60 <modinit+0x84>
    1d2c:	add	r0, pc, r0
    1d30:	add	r1, pc, r1
    1d34:	bl	aa0 <rb_event_add@plt>
    1d38:	ldr	r1, [pc, #36]	; 1d64 <modinit+0x88>
    1d3c:	ldr	r1, [pc, r1]
    1d40:	str	r0, [r1]
    1d44:	mov	r0, #0
    1d48:	pop	{fp, pc}
    1d4c:	.word	0x000113a0
    1d50:	.word	0x00000489
    1d54:	.word	0x000000f0
    1d58:	.word	0x00011374
    1d5c:	.word	0x0000046d
    1d60:	.word	0x000001c8
    1d64:	.word	0x0001135c

00001d68 <modfini>:
    1d68:	push	{r4, r5, r6, sl, fp, lr}
    1d6c:	add	fp, sp, #16
    1d70:	ldr	r0, [pc, #124]	; 1df4 <modfini+0x8c>
    1d74:	ldr	r0, [pc, r0]
    1d78:	ldr	r0, [r0]
    1d7c:	bl	ad0 <rb_event_delete@plt>
    1d80:	ldr	r0, [pc, #112]	; 1df8 <modfini+0x90>
    1d84:	ldr	r0, [pc, r0]
    1d88:	ldr	r0, [r0]
    1d8c:	bl	ad0 <rb_event_delete@plt>
    1d90:	ldr	r4, [pc, #100]	; 1dfc <modfini+0x94>
    1d94:	ldr	r4, [pc, r4]
    1d98:	ldr	r0, [r4, #8]
    1d9c:	cmp	r0, #0
    1da0:	popeq	{r4, r5, r6, sl, fp, pc}
    1da4:	mov	r5, #0
    1da8:	ldmib	r0, {r1, r6}
    1dac:	cmp	r6, #0
    1db0:	streq	r1, [r4, #12]
    1db4:	strne	r1, [r6, #4]
    1db8:	ldrne	r1, [r0, #4]
    1dbc:	add	r2, r1, #8
    1dc0:	cmp	r1, #0
    1dc4:	addeq	r2, r4, #8
    1dc8:	str	r6, [r2]
    1dcc:	str	r5, [r0, #4]
    1dd0:	str	r5, [r0, #8]
    1dd4:	ldr	r1, [r4, #16]
    1dd8:	sub	r1, r1, #1
    1ddc:	str	r1, [r4, #16]
    1de0:	bl	b18 <rb_free_rb_dlink_node@plt>
    1de4:	cmp	r6, #0
    1de8:	mov	r0, r6
    1dec:	bne	1da8 <modfini+0x40>
    1df0:	pop	{r4, r5, r6, sl, fp, pc}
    1df4:	.word	0x0001131c
    1df8:	.word	0x00011314
    1dfc:	.word	0x00011300

00001e00 <hurt_expire_event>:
    1e00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1e04:	add	fp, sp, #24
    1e08:	ldr	r5, [pc, #224]	; 1ef0 <hurt_expire_event+0xf0>
    1e0c:	ldr	r5, [pc, r5]
    1e10:	ldr	r6, [r5]
    1e14:	cmp	r6, #0
    1e18:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
    1e1c:	mov	r8, #0
    1e20:	ldr	r4, [r6]
    1e24:	ldr	r6, [r6, #8]
    1e28:	ldr	r7, [r4, #16]
    1e2c:	bl	a94 <rb_current_time@plt>
    1e30:	cmp	r7, r0
    1e34:	bgt	1ec4 <hurt_expire_event+0xc4>
    1e38:	cmp	r4, #0
    1e3c:	beq	1ed0 <hurt_expire_event+0xd0>
    1e40:	ldr	r1, [r5]
    1e44:	cmp	r1, #0
    1e48:	beq	1e9c <hurt_expire_event+0x9c>
    1e4c:	ldr	r2, [r1]
    1e50:	mov	r0, r1
    1e54:	ldr	r1, [r1, #8]
    1e58:	cmp	r2, r4
    1e5c:	bne	1e44 <hurt_expire_event+0x44>
    1e60:	ldr	r2, [r0, #4]
    1e64:	cmp	r1, #0
    1e68:	mov	r3, r5
    1e6c:	streq	r2, [r5, #4]
    1e70:	strne	r2, [r1, #4]
    1e74:	ldrne	r2, [r0, #4]
    1e78:	cmp	r2, #0
    1e7c:	addne	r3, r2, #8
    1e80:	str	r1, [r3]
    1e84:	str	r8, [r0, #4]
    1e88:	str	r8, [r0, #8]
    1e8c:	ldr	r1, [r5, #8]
    1e90:	sub	r1, r1, #1
    1e94:	str	r1, [r5, #8]
    1e98:	bl	b18 <rb_free_rb_dlink_node@plt>
    1e9c:	ldr	r0, [r4]
    1ea0:	cmp	r0, #0
    1ea4:	beq	1eac <hurt_expire_event+0xac>
    1ea8:	bl	adc <free@plt>
    1eac:	ldr	r0, [r4, #12]
    1eb0:	cmp	r0, #0
    1eb4:	beq	1ebc <hurt_expire_event+0xbc>
    1eb8:	bl	adc <free@plt>
    1ebc:	mov	r0, r4
    1ec0:	bl	adc <free@plt>
    1ec4:	cmp	r6, #0
    1ec8:	bne	1e20 <hurt_expire_event+0x20>
    1ecc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1ed0:	ldr	r0, [pc, #28]	; 1ef4 <hurt_expire_event+0xf4>
    1ed4:	ldr	r1, [pc, #28]	; 1ef8 <hurt_expire_event+0xf8>
    1ed8:	ldr	r3, [pc, #28]	; 1efc <hurt_expire_event+0xfc>
    1edc:	mov	r2, #288	; 0x120
    1ee0:	add	r0, pc, r0
    1ee4:	add	r1, pc, r1
    1ee8:	add	r3, pc, r3
    1eec:	bl	bf0 <__assert_fail@plt>
    1ef0:	.word	0x0001127c
    1ef4:	.word	0x00000311
    1ef8:	.word	0x000002c0
    1efc:	.word	0x000002d8

00001f00 <hurt_check_event>:
    1f00:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1f04:	add	fp, sp, #24
    1f08:	ldr	r7, [pc, #212]	; 1fe4 <hurt_check_event+0xe4>
    1f0c:	ldr	r7, [pc, r7]
    1f10:	ldr	r4, [r7, #8]
    1f14:	cmp	r4, #0
    1f18:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
    1f1c:	ldr	r8, [pc, #196]	; 1fe8 <hurt_check_event+0xe8>
    1f20:	mov	r5, #0
    1f24:	ldr	r8, [pc, r8]
    1f28:	ldr	r9, [pc, #188]	; 1fec <hurt_check_event+0xec>
    1f2c:	add	r9, pc, r9
    1f30:	ldr	r6, [r4]
    1f34:	mov	r0, r4
    1f38:	ldr	r4, [r4, #8]
    1f3c:	ldr	r1, [r6, #24]
    1f40:	ldrb	r1, [r1, #40]	; 0x28
    1f44:	cmp	r1, #0
    1f48:	beq	1fb0 <hurt_check_event+0xb0>
    1f4c:	ldr	r1, [r0, #8]
    1f50:	ldr	r2, [r0, #4]
    1f54:	cmp	r1, #0
    1f58:	streq	r2, [r7, #12]
    1f5c:	strne	r2, [r1, #4]
    1f60:	ldrne	r2, [r0, #4]
    1f64:	add	r3, r2, #8
    1f68:	cmp	r2, #0
    1f6c:	addeq	r3, r7, #8
    1f70:	str	r1, [r3]
    1f74:	str	r5, [r0, #4]
    1f78:	str	r5, [r0, #8]
    1f7c:	ldr	r1, [r7, #16]
    1f80:	sub	r1, r1, #1
    1f84:	str	r1, [r7, #16]
    1f88:	bl	b18 <rb_free_rb_dlink_node@plt>
    1f8c:	mov	r0, r6
    1f90:	mov	r1, r9
    1f94:	bl	bb4 <sendto_one_notice@plt>
    1f98:	bl	a94 <rb_current_time@plt>
    1f9c:	ldr	r1, [r6, #432]	; 0x1b0
    1fa0:	str	r0, [r1, #416]	; 0x1a0
    1fa4:	cmp	r4, #0
    1fa8:	bne	1f30 <hurt_check_event+0x30>
    1fac:	b	1fe0 <hurt_check_event+0xe0>
    1fb0:	ldr	r1, [r6, #432]	; 0x1b0
    1fb4:	ldrh	r0, [r7, #20]
    1fb8:	ldr	r1, [r1, #116]	; 0x74
    1fbc:	cmp	r1, r0
    1fc0:	bls	1fd8 <hurt_check_event+0xd8>
    1fc4:	ldr	r3, [r7, #28]
    1fc8:	mov	r0, #0
    1fcc:	mov	r1, r6
    1fd0:	mov	r2, r8
    1fd4:	bl	bcc <exit_client@plt>
    1fd8:	cmp	r4, #0
    1fdc:	bne	1f30 <hurt_check_event+0x30>
    1fe0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1fe4:	.word	0x00011188
    1fe8:	.word	0x00011180
    1fec:	.word	0x000002d2

00001ff0 <heal_nick>:
    1ff0:	push	{r4, r5, r6, sl, fp, lr}
    1ff4:	add	fp, sp, #16
    1ff8:	sub	sp, sp, #8
    1ffc:	cmp	r1, #0
    2000:	beq	20fc <heal_nick+0x10c>
    2004:	mov	r4, r1
    2008:	ldr	r1, [pc, #268]	; 211c <heal_nick+0x12c>
    200c:	mov	r5, r0
    2010:	ldr	r1, [pc, r1]
    2014:	ldr	r2, [r1, #8]
    2018:	cmp	r2, #0
    201c:	beq	20e0 <heal_nick+0xf0>
    2020:	ldr	r3, [r2]
    2024:	mov	r0, r2
    2028:	ldr	r2, [r2, #8]
    202c:	cmp	r3, r4
    2030:	bne	2018 <heal_nick+0x28>
    2034:	ldr	r3, [r0, #4]
    2038:	cmp	r2, #0
    203c:	streq	r3, [r1, #12]
    2040:	strne	r3, [r2, #4]
    2044:	ldrne	r3, [r0, #4]
    2048:	add	r6, r3, #8
    204c:	cmp	r3, #0
    2050:	addeq	r6, r1, #8
    2054:	str	r2, [r6]
    2058:	mov	r2, #0
    205c:	str	r2, [r0, #4]
    2060:	str	r2, [r0, #8]
    2064:	ldr	r2, [r1, #16]
    2068:	sub	r2, r2, #1
    206c:	str	r2, [r1, #16]
    2070:	bl	b18 <rb_free_rb_dlink_node@plt>
    2074:	mov	r0, r5
    2078:	bl	b0c <get_oper_name@plt>
    207c:	mov	r6, r0
    2080:	mov	r0, r4
    2084:	mov	r1, #0
    2088:	bl	a88 <get_client_name@plt>
    208c:	str	r0, [sp]
    2090:	mov	r0, #256	; 0x100
    2094:	mov	r1, #0
    2098:	mov	r3, r6
    209c:	ldr	r2, [pc, #124]	; 2120 <heal_nick+0x130>
    20a0:	add	r2, pc, r2
    20a4:	bl	b00 <sendto_realops_snomask@plt>
    20a8:	ldr	r1, [pc, #116]	; 2124 <heal_nick+0x134>
    20ac:	mov	r0, r4
    20b0:	add	r1, pc, r1
    20b4:	bl	bb4 <sendto_one_notice@plt>
    20b8:	ldr	r1, [pc, #104]	; 2128 <heal_nick+0x138>
    20bc:	add	r2, r4, #88	; 0x58
    20c0:	mov	r0, r5
    20c4:	add	r1, pc, r1
    20c8:	bl	bb4 <sendto_one_notice@plt>
    20cc:	bl	a94 <rb_current_time@plt>
    20d0:	ldr	r1, [r4, #432]	; 0x1b0
    20d4:	str	r0, [r1, #416]	; 0x1a0
    20d8:	sub	sp, fp, #16
    20dc:	pop	{r4, r5, r6, sl, fp, pc}
    20e0:	ldr	r1, [pc, #68]	; 212c <heal_nick+0x13c>
    20e4:	add	r2, r4, #88	; 0x58
    20e8:	mov	r0, r5
    20ec:	add	r1, pc, r1
    20f0:	sub	sp, fp, #16
    20f4:	pop	{r4, r5, r6, sl, fp, lr}
    20f8:	b	bb4 <sendto_one_notice@plt>
    20fc:	ldr	r0, [pc, #44]	; 2130 <heal_nick+0x140>
    2100:	ldr	r1, [pc, #44]	; 2134 <heal_nick+0x144>
    2104:	ldr	r3, [pc, #44]	; 2138 <heal_nick+0x148>
    2108:	mov	r2, #288	; 0x120
    210c:	add	r0, pc, r0
    2110:	add	r1, pc, r1
    2114:	add	r3, pc, r3
    2118:	bl	bf0 <__assert_fail@plt>
    211c:	.word	0x00011084
    2120:	.word	0x0000036e
    2124:	.word	0x00000371
    2128:	.word	0x0000038f
    212c:	.word	0x00000393
    2130:	.word	0x000000e5
    2134:	.word	0x00000094
    2138:	.word	0x000000ac

Disassembly of section .fini:

0000213c <_fini>:
    213c:	push	{r3, lr}
    2140:	pop	{r3, pc}
