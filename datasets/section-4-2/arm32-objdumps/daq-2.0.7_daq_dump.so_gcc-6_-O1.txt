
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

0000057c <_init>:
 57c:	push	{r3, lr}
 580:	bl	65c <call_weak_fn>
 584:	pop	{r3, pc}

Disassembly of section .plt:

00000588 <.plt>:
 588:	push	{lr}		; (str lr, [sp, #-4]!)
 58c:	ldr	lr, [pc, #4]	; 598 <.plt+0x10>
 590:	add	lr, pc, lr
 594:	ldr	pc, [lr, #8]!
 598:	.word	0x00011a68

0000059c <calloc@plt>:
 59c:	add	ip, pc, #0, 12
 5a0:	add	ip, ip, #69632	; 0x11000
 5a4:	ldr	pc, [ip, #2664]!	; 0xa68

000005a8 <strcmp@plt>:
 5a8:	add	ip, pc, #0, 12
 5ac:	add	ip, ip, #69632	; 0x11000
 5b0:	ldr	pc, [ip, #2656]!	; 0xa60

000005b4 <__cxa_finalize@plt>:
 5b4:	add	ip, pc, #0, 12
 5b8:	add	ip, ip, #69632	; 0x11000
 5bc:	ldr	pc, [ip, #2648]!	; 0xa58

000005c0 <free@plt>:
 5c0:	add	ip, pc, #0, 12
 5c4:	add	ip, ip, #69632	; 0x11000
 5c8:	ldr	pc, [ip, #2640]!	; 0xa50

000005cc <ferror@plt>:
 5cc:	add	ip, pc, #0, 12
 5d0:	add	ip, ip, #69632	; 0x11000
 5d4:	ldr	pc, [ip, #2632]!	; 0xa48

000005d8 <strdup@plt>:
 5d8:	add	ip, pc, #0, 12
 5dc:	add	ip, ip, #69632	; 0x11000
 5e0:	ldr	pc, [ip, #2624]!	; 0xa40

000005e4 <pcap_close@plt>:
 5e4:	add	ip, pc, #0, 12
 5e8:	add	ip, ip, #69632	; 0x11000
 5ec:	ldr	pc, [ip, #2616]!	; 0xa38

000005f0 <strcasecmp@plt>:
 5f0:	add	ip, pc, #0, 12
 5f4:	add	ip, ip, #69632	; 0x11000
 5f8:	ldr	pc, [ip, #2608]!	; 0xa30

000005fc <pcap_open_dead@plt>:
 5fc:	add	ip, pc, #0, 12
 600:	add	ip, ip, #69632	; 0x11000
 604:	ldr	pc, [ip, #2600]!	; 0xa28

00000608 <pcap_dump@plt>:
 608:	add	ip, pc, #0, 12
 60c:	add	ip, ip, #69632	; 0x11000
 610:	ldr	pc, [ip, #2592]!	; 0xa20

00000614 <__gmon_start__@plt>:
 614:	add	ip, pc, #0, 12
 618:	add	ip, ip, #69632	; 0x11000
 61c:	ldr	pc, [ip, #2584]!	; 0xa18

00000620 <snprintf@plt>:
 620:	add	ip, pc, #0, 12
 624:	add	ip, ip, #69632	; 0x11000
 628:	ldr	pc, [ip, #2576]!	; 0xa10

0000062c <pcap_dump_file@plt>:
 62c:	add	ip, pc, #0, 12
 630:	add	ip, ip, #69632	; 0x11000
 634:	ldr	pc, [ip, #2568]!	; 0xa08

00000638 <memset@plt>:
 638:	add	ip, pc, #0, 12
 63c:	add	ip, ip, #69632	; 0x11000
 640:	ldr	pc, [ip, #2560]!	; 0xa00

00000644 <pcap_dump_close@plt>:
 644:	add	ip, pc, #0, 12
 648:	add	ip, ip, #69632	; 0x11000
 64c:	ldr	pc, [ip, #2552]!	; 0x9f8

00000650 <pcap_dump_open@plt>:
 650:	add	ip, pc, #0, 12
 654:	add	ip, ip, #69632	; 0x11000
 658:	ldr	pc, [ip, #2544]!	; 0x9f0

Disassembly of section .text:

0000065c <call_weak_fn>:
 65c:	ldr	r3, [pc, #20]	; 678 <call_weak_fn+0x1c>
 660:	ldr	r2, [pc, #20]	; 67c <call_weak_fn+0x20>
 664:	add	r3, pc, r3
 668:	ldr	r2, [r3, r2]
 66c:	cmp	r2, #0
 670:	bxeq	lr
 674:	b	614 <__gmon_start__@plt>
 678:	.word	0x00011994
 67c:	.word	0x00000054

00000680 <deregister_tm_clones>:
 680:	ldr	r3, [pc, #52]	; 6bc <deregister_tm_clones+0x3c>
 684:	ldr	r0, [pc, #52]	; 6c0 <deregister_tm_clones+0x40>
 688:	add	r3, pc, r3
 68c:	add	r0, pc, r0
 690:	add	r3, r3, #3
 694:	sub	r3, r3, r0
 698:	cmp	r3, #6
 69c:	ldr	r3, [pc, #32]	; 6c4 <deregister_tm_clones+0x44>
 6a0:	add	r3, pc, r3
 6a4:	bxls	lr
 6a8:	ldr	r2, [pc, #24]	; 6c8 <deregister_tm_clones+0x48>
 6ac:	ldr	r3, [r3, r2]
 6b0:	cmp	r3, #0
 6b4:	bxeq	lr
 6b8:	bx	r3
 6bc:	.word	0x00011a3c
 6c0:	.word	0x00011a38
 6c4:	.word	0x00011958
 6c8:	.word	0x00000050

000006cc <register_tm_clones>:
 6cc:	ldr	r1, [pc, #56]	; 70c <register_tm_clones+0x40>
 6d0:	ldr	r0, [pc, #56]	; 710 <register_tm_clones+0x44>
 6d4:	add	r1, pc, r1
 6d8:	add	r0, pc, r0
 6dc:	sub	r1, r1, r0
 6e0:	ldr	r3, [pc, #44]	; 714 <register_tm_clones+0x48>
 6e4:	asr	r1, r1, #2
 6e8:	add	r3, pc, r3
 6ec:	add	r1, r1, r1, lsr #31
 6f0:	asrs	r1, r1, #1
 6f4:	bxeq	lr
 6f8:	ldr	r2, [pc, #24]	; 718 <register_tm_clones+0x4c>
 6fc:	ldr	r3, [r3, r2]
 700:	cmp	r3, #0
 704:	bxeq	lr
 708:	bx	r3
 70c:	.word	0x000119f0
 710:	.word	0x000119ec
 714:	.word	0x00011910
 718:	.word	0x0000005c

0000071c <__do_global_dtors_aux>:
 71c:	ldr	r3, [pc, #76]	; 770 <__do_global_dtors_aux+0x54>
 720:	ldr	r2, [pc, #76]	; 774 <__do_global_dtors_aux+0x58>
 724:	add	r3, pc, r3
 728:	add	r2, pc, r2
 72c:	ldrb	r3, [r3]
 730:	cmp	r3, #0
 734:	bxne	lr
 738:	ldr	r3, [pc, #56]	; 778 <__do_global_dtors_aux+0x5c>
 73c:	push	{r4, lr}
 740:	ldr	r3, [r2, r3]
 744:	cmp	r3, #0
 748:	beq	758 <__do_global_dtors_aux+0x3c>
 74c:	ldr	r3, [pc, #40]	; 77c <__do_global_dtors_aux+0x60>
 750:	ldr	r0, [pc, r3]
 754:	bl	5b4 <__cxa_finalize@plt>
 758:	bl	680 <deregister_tm_clones>
 75c:	ldr	r3, [pc, #28]	; 780 <__do_global_dtors_aux+0x64>
 760:	mov	r2, #1
 764:	add	r3, pc, r3
 768:	strb	r2, [r3]
 76c:	pop	{r4, pc}
 770:	.word	0x000119a0
 774:	.word	0x000118d0
 778:	.word	0x0000004c
 77c:	.word	0x00011908
 780:	.word	0x00011960

00000784 <frame_dummy>:
 784:	ldr	r0, [pc, #56]	; 7c4 <frame_dummy+0x40>
 788:	ldr	r3, [pc, #56]	; 7c8 <frame_dummy+0x44>
 78c:	add	r0, pc, r0
 790:	ldr	r2, [r0]
 794:	add	r3, pc, r3
 798:	cmp	r2, #0
 79c:	bne	7a4 <frame_dummy+0x20>
 7a0:	b	6cc <register_tm_clones>
 7a4:	ldr	r2, [pc, #32]	; 7cc <frame_dummy+0x48>
 7a8:	ldr	r3, [r3, r2]
 7ac:	cmp	r3, #0
 7b0:	beq	7a0 <frame_dummy+0x1c>
 7b4:	push	{r4, lr}
 7b8:	blx	r3
 7bc:	pop	{r4, lr}
 7c0:	b	6cc <register_tm_clones>
 7c4:	.word	0x00011778
 7c8:	.word	0x00011864
 7cc:	.word	0x00000058

000007d0 <dump_daq_acquire>:
 7d0:	push	{r4, lr}
 7d4:	sub	sp, sp, #8
 7d8:	str	r2, [r0, #16]
 7dc:	ldr	r2, [sp, #16]
 7e0:	str	r2, [r0, #20]
 7e4:	ldr	ip, [r0, #4]
 7e8:	ldr	r2, [r0]
 7ec:	str	r0, [sp]
 7f0:	ldr	r4, [r2, #28]
 7f4:	ldr	r2, [pc, #16]	; 80c <dump_daq_acquire+0x3c>
 7f8:	add	r2, pc, r2
 7fc:	mov	r0, ip
 800:	blx	r4
 804:	add	sp, sp, #8
 808:	pop	{r4, pc}
 80c:	.word	0x000001e8

00000810 <dump_daq_set_filter>:
 810:	push	{r4, lr}
 814:	ldr	r3, [r0]
 818:	ldr	r3, [r3, #20]
 81c:	ldr	r0, [r0, #4]
 820:	blx	r3
 824:	pop	{r4, pc}

00000828 <dump_daq_breakloop>:
 828:	push	{r4, lr}
 82c:	ldr	r3, [r0]
 830:	ldr	r3, [r3, #36]	; 0x24
 834:	ldr	r0, [r0, #4]
 838:	blx	r3
 83c:	pop	{r4, pc}

00000840 <dump_daq_check_status>:
 840:	push	{r4, lr}
 844:	ldr	r3, [r0]
 848:	ldr	r3, [r3, #48]	; 0x30
 84c:	ldr	r0, [r0, #4]
 850:	blx	r3
 854:	pop	{r4, pc}

00000858 <dump_daq_get_stats>:
 858:	push	{r4, r5, r6, r7, r8, lr}
 85c:	mov	r5, r0
 860:	mov	r8, r1
 864:	mov	r4, r0
 868:	ldr	r3, [r4], #64	; 0x40
 86c:	ldr	r3, [r3, #52]	; 0x34
 870:	ldr	r0, [r0, #4]
 874:	blx	r3
 878:	add	r3, r8, #40	; 0x28
 87c:	add	r2, r5, #120	; 0x78
 880:	ldrd	r6, [r4], #8
 884:	strd	r6, [r3], #8
 888:	cmp	r4, r2
 88c:	bne	880 <dump_daq_get_stats+0x28>
 890:	ldrd	r2, [r5, #56]	; 0x38
 894:	strd	r2, [r8, #32]
 898:	pop	{r4, r5, r6, r7, r8, pc}

0000089c <dump_daq_get_snaplen>:
 89c:	push	{r4, lr}
 8a0:	ldr	r3, [r0]
 8a4:	ldr	r3, [r3, #60]	; 0x3c
 8a8:	ldr	r0, [r0, #4]
 8ac:	blx	r3
 8b0:	pop	{r4, pc}

000008b4 <dump_daq_get_capabilities>:
 8b4:	push	{r4, lr}
 8b8:	ldr	r3, [r0]
 8bc:	ldr	r3, [r3, #64]	; 0x40
 8c0:	ldr	r0, [r0, #4]
 8c4:	blx	r3
 8c8:	orr	r0, r0, #7
 8cc:	pop	{r4, pc}

000008d0 <dump_daq_get_datalink_type>:
 8d0:	push	{r4, lr}
 8d4:	ldr	r3, [r0]
 8d8:	ldr	r3, [r3, #68]	; 0x44
 8dc:	ldr	r0, [r0, #4]
 8e0:	blx	r3
 8e4:	pop	{r4, pc}

000008e8 <dump_daq_get_errbuf>:
 8e8:	push	{r4, lr}
 8ec:	ldr	r3, [r0]
 8f0:	ldr	r3, [r3, #72]	; 0x48
 8f4:	ldr	r0, [r0, #4]
 8f8:	blx	r3
 8fc:	pop	{r4, pc}

00000900 <dump_daq_set_errbuf>:
 900:	push	{r4, lr}
 904:	ldr	r3, [r0]
 908:	ldr	r3, [r3, #76]	; 0x4c
 90c:	ldr	r0, [r0, #4]
 910:	cmp	r1, #0
 914:	beq	920 <dump_daq_set_errbuf+0x20>
 918:	blx	r3
 91c:	pop	{r4, pc}
 920:	ldr	r1, [pc, #4]	; 92c <dump_daq_set_errbuf+0x2c>
 924:	add	r1, pc, r1
 928:	b	918 <dump_daq_set_errbuf+0x18>
 92c:	.word	0x000005bc

00000930 <dump_daq_get_device_index>:
 930:	push	{r4, lr}
 934:	ldr	r3, [r0]
 938:	ldr	r3, [r3, #80]	; 0x50
 93c:	ldr	r0, [r0, #4]
 940:	blx	r3
 944:	pop	{r4, pc}

00000948 <dump_daq_reset_stats>:
 948:	push	{r4, lr}
 94c:	mov	r4, r0
 950:	ldr	r3, [r4], #24
 954:	ldr	r3, [r3, #56]	; 0x38
 958:	ldr	r0, [r0, #4]
 95c:	blx	r3
 960:	mov	r2, #96	; 0x60
 964:	mov	r1, #0
 968:	mov	r0, r4
 96c:	bl	638 <memset@plt>
 970:	pop	{r4, pc}

00000974 <dump_daq_shutdown>:
 974:	push	{r4, lr}
 978:	mov	r4, r0
 97c:	ldr	r3, [r0]
 980:	ldr	r3, [r3, #44]	; 0x2c
 984:	ldr	r0, [r0, #4]
 988:	blx	r3
 98c:	ldr	r0, [r4, #12]
 990:	cmp	r0, #0
 994:	beq	99c <dump_daq_shutdown+0x28>
 998:	bl	5c0 <free@plt>
 99c:	mov	r0, r4
 9a0:	bl	5c0 <free@plt>
 9a4:	pop	{r4, pc}

000009a8 <dump_daq_stop>:
 9a8:	push	{r4, r5, r6, lr}
 9ac:	mov	r4, r0
 9b0:	ldr	r3, [r0]
 9b4:	ldr	r3, [r3, #40]	; 0x28
 9b8:	ldr	r0, [r0, #4]
 9bc:	blx	r3
 9c0:	subs	r5, r0, #0
 9c4:	bne	9e0 <dump_daq_stop+0x38>
 9c8:	ldr	r0, [r4, #8]
 9cc:	cmp	r0, #0
 9d0:	beq	9e0 <dump_daq_stop+0x38>
 9d4:	bl	644 <pcap_dump_close@plt>
 9d8:	mov	r3, #0
 9dc:	str	r3, [r4, #8]
 9e0:	mov	r0, r5
 9e4:	pop	{r4, r5, r6, pc}

000009e8 <daq_dump_capture>:
 9e8:	push	{r4, r5, r6, r7, r8, lr}
 9ec:	mov	r4, r0
 9f0:	mov	r6, r1
 9f4:	mov	r7, r2
 9f8:	ldr	r3, [r0, #16]
 9fc:	ldr	r0, [r0, #20]
 a00:	blx	r3
 a04:	cmp	r0, #6
 a08:	bhi	a4c <daq_dump_capture+0x64>
 a0c:	mov	r5, r0
 a10:	add	r1, r4, r0, lsl #3
 a14:	ldrd	r2, [r1, #64]	; 0x40
 a18:	adds	r2, r2, #1
 a1c:	adc	r3, r3, #0
 a20:	strd	r2, [r1, #64]	; 0x40
 a24:	ldr	r3, [pc, #60]	; a68 <daq_dump_capture+0x80>
 a28:	add	r3, pc, r3
 a2c:	ldr	r3, [r3, r0, lsl #2]
 a30:	cmp	r3, #0
 a34:	beq	a60 <daq_dump_capture+0x78>
 a38:	mov	r2, r7
 a3c:	mov	r1, r6
 a40:	ldr	r0, [r4, #8]
 a44:	bl	608 <pcap_dump@plt>
 a48:	b	a60 <daq_dump_capture+0x78>
 a4c:	ldrd	r2, [r4, #72]	; 0x48
 a50:	adds	r2, r2, #1
 a54:	adc	r3, r3, #0
 a58:	strd	r2, [r4, #72]	; 0x48
 a5c:	mov	r5, #1
 a60:	mov	r0, r5
 a64:	pop	{r4, r5, r6, r7, r8, pc}
 a68:	.word	0x000003ec

00000a6c <dump_daq_inject>:
 a6c:	push	{r4, r5, r6, lr}
 a70:	sub	sp, sp, #56	; 0x38
 a74:	mov	r4, r0
 a78:	mov	r6, r2
 a7c:	mov	r5, r3
 a80:	add	ip, sp, #4
 a84:	mov	lr, r1
 a88:	ldm	lr!, {r0, r1, r2, r3}
 a8c:	stmia	ip!, {r0, r1, r2, r3}
 a90:	ldm	lr!, {r0, r1, r2, r3}
 a94:	stmia	ip!, {r0, r1, r2, r3}
 a98:	ldm	lr!, {r0, r1, r2, r3}
 a9c:	stmia	ip!, {r0, r1, r2, r3}
 aa0:	ldr	r3, [lr]
 aa4:	str	r3, [ip]
 aa8:	str	r5, [sp, #12]
 aac:	str	r5, [sp, #16]
 ab0:	mov	r2, r6
 ab4:	add	r1, sp, #4
 ab8:	ldr	r0, [r4, #8]
 abc:	bl	608 <pcap_dump@plt>
 ac0:	ldr	r0, [r4, #8]
 ac4:	bl	62c <pcap_dump_file@plt>
 ac8:	bl	5cc <ferror@plt>
 acc:	cmp	r0, #0
 ad0:	bne	aec <dump_daq_inject+0x80>
 ad4:	ldrd	r2, [r4, #56]	; 0x38
 ad8:	adds	r2, r2, #1
 adc:	adc	r3, r3, #0
 ae0:	strd	r2, [r4, #56]	; 0x38
 ae4:	add	sp, sp, #56	; 0x38
 ae8:	pop	{r4, r5, r6, pc}
 aec:	ldr	r3, [r4]
 af0:	ldr	r3, [r3, #76]	; 0x4c
 af4:	ldr	r1, [pc, #16]	; b0c <dump_daq_inject+0xa0>
 af8:	add	r1, pc, r1
 afc:	ldr	r0, [r4, #4]
 b00:	blx	r3
 b04:	mvn	r0, #0
 b08:	b	ae4 <dump_daq_inject+0x78>
 b0c:	.word	0x0000034c

00000b10 <dump_daq_start>:
 b10:	push	{r4, r5, r6, r7, r8, lr}
 b14:	mov	r4, r0
 b18:	ldr	r1, [r0, #12]
 b1c:	cmp	r1, #0
 b20:	movne	r5, r1
 b24:	beq	b48 <dump_daq_start+0x38>
 b28:	ldr	r3, [r4]
 b2c:	ldr	r3, [r3, #24]
 b30:	ldr	r0, [r4, #4]
 b34:	blx	r3
 b38:	subs	r6, r0, #0
 b3c:	beq	b54 <dump_daq_start+0x44>
 b40:	mov	r0, r6
 b44:	pop	{r4, r5, r6, r7, r8, pc}
 b48:	ldr	r5, [pc, #152]	; be8 <dump_daq_start+0xd8>
 b4c:	add	r5, pc, r5
 b50:	b	b28 <dump_daq_start+0x18>
 b54:	ldr	r3, [r4]
 b58:	ldr	r3, [r3, #68]	; 0x44
 b5c:	ldr	r0, [r4, #4]
 b60:	blx	r3
 b64:	mov	r7, r0
 b68:	ldr	r3, [r4]
 b6c:	ldr	r3, [r3, #60]	; 0x3c
 b70:	ldr	r0, [r4, #4]
 b74:	blx	r3
 b78:	mov	r1, r0
 b7c:	mov	r0, r7
 b80:	bl	5fc <pcap_open_dead@plt>
 b84:	subs	r7, r0, #0
 b88:	beq	bb0 <dump_daq_start+0xa0>
 b8c:	mov	r1, r5
 b90:	mov	r0, r7
 b94:	bl	650 <pcap_dump_open@plt>
 b98:	str	r0, [r4, #8]
 b9c:	cmp	r0, #0
 ba0:	beq	bb8 <dump_daq_start+0xa8>
 ba4:	mov	r0, r7
 ba8:	bl	5e4 <pcap_close@plt>
 bac:	b	b40 <dump_daq_start+0x30>
 bb0:	mov	r3, #0
 bb4:	str	r3, [r4, #8]
 bb8:	ldr	r3, [r4]
 bbc:	ldr	r3, [r3, #40]	; 0x28
 bc0:	ldr	r0, [r4, #4]
 bc4:	blx	r3
 bc8:	ldr	r3, [r4]
 bcc:	ldr	r3, [r3, #76]	; 0x4c
 bd0:	ldr	r1, [pc, #20]	; bec <dump_daq_start+0xdc>
 bd4:	add	r1, pc, r1
 bd8:	ldr	r0, [r4, #4]
 bdc:	blx	r3
 be0:	mvn	r6, #0
 be4:	b	b40 <dump_daq_start+0x30>
 be8:	.word	0x00000318
 bec:	.word	0x000002a0

00000bf0 <dump_daq_initialize>:
 bf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 bf4:	sub	sp, sp, #44	; 0x2c
 bf8:	mov	r4, r0
 bfc:	mov	fp, r1
 c00:	str	r2, [sp]
 c04:	str	r3, [sp, #4]
 c08:	mov	r1, #120	; 0x78
 c0c:	mov	r0, #1
 c10:	bl	59c <calloc@plt>
 c14:	mov	r8, r0
 c18:	ldr	sl, [r4, #24]
 c1c:	add	lr, sp, #12
 c20:	mov	ip, r4
 c24:	ldm	ip!, {r0, r1, r2, r3}
 c28:	stmia	lr!, {r0, r1, r2, r3}
 c2c:	ldm	ip, {r0, r1, r2}
 c30:	stm	lr, {r0, r1, r2}
 c34:	cmp	r8, #0
 c38:	beq	c74 <dump_daq_initialize+0x84>
 c3c:	cmp	sl, #0
 c40:	beq	c9c <dump_daq_initialize+0xac>
 c44:	ldr	r3, [sl, #12]
 c48:	tst	r3, #1
 c4c:	beq	c9c <dump_daq_initialize+0xac>
 c50:	ldr	r4, [sp, #32]
 c54:	cmp	r4, #0
 c58:	beq	d84 <dump_daq_initialize+0x194>
 c5c:	mov	r7, #0
 c60:	ldr	r6, [pc, #388]	; dec <dump_daq_initialize+0x1fc>
 c64:	add	r6, pc, r6
 c68:	ldr	r9, [pc, #384]	; df0 <dump_daq_initialize+0x200>
 c6c:	add	r9, pc, r9
 c70:	b	cec <dump_daq_initialize+0xfc>
 c74:	ldr	r3, [pc, #376]	; df4 <dump_daq_initialize+0x204>
 c78:	add	r3, pc, r3
 c7c:	add	r3, r3, #28
 c80:	ldr	r2, [pc, #368]	; df8 <dump_daq_initialize+0x208>
 c84:	add	r2, pc, r2
 c88:	ldr	r1, [sp, #4]
 c8c:	ldr	r0, [sp]
 c90:	bl	620 <snprintf@plt>
 c94:	mvn	r4, #1
 c98:	b	dac <dump_daq_initialize+0x1bc>
 c9c:	ldr	r3, [pc, #344]	; dfc <dump_daq_initialize+0x20c>
 ca0:	add	r3, pc, r3
 ca4:	add	r3, r3, #28
 ca8:	ldr	r2, [pc, #336]	; e00 <dump_daq_initialize+0x210>
 cac:	add	r2, pc, r2
 cb0:	ldr	r1, [sp, #4]
 cb4:	ldr	r0, [sp]
 cb8:	bl	620 <snprintf@plt>
 cbc:	mov	r0, r8
 cc0:	bl	5c0 <free@plt>
 cc4:	mvn	r4, #0
 cc8:	b	dac <dump_daq_initialize+0x1bc>
 ccc:	mov	r1, r9
 cd0:	mov	r0, r5
 cd4:	bl	5a8 <strcmp@plt>
 cd8:	cmp	r0, #0
 cdc:	beq	d0c <dump_daq_initialize+0x11c>
 ce0:	ldr	r4, [r4, #8]
 ce4:	cmp	r4, #0
 ce8:	beq	d1c <dump_daq_initialize+0x12c>
 cec:	ldr	r5, [r4]
 cf0:	mov	r1, r6
 cf4:	mov	r0, r5
 cf8:	bl	5a8 <strcmp@plt>
 cfc:	cmp	r0, #0
 d00:	bne	ccc <dump_daq_initialize+0xdc>
 d04:	ldr	r7, [r4, #4]
 d08:	b	ce0 <dump_daq_initialize+0xf0>
 d0c:	ldr	r0, [r4, #4]
 d10:	bl	5d8 <strdup@plt>
 d14:	str	r0, [r8, #12]
 d18:	b	ce0 <dump_daq_initialize+0xf0>
 d1c:	cmp	r7, #0
 d20:	beq	d84 <dump_daq_initialize+0x194>
 d24:	ldr	r1, [pc, #216]	; e04 <dump_daq_initialize+0x214>
 d28:	add	r1, pc, r1
 d2c:	mov	r0, r7
 d30:	bl	5f0 <strcasecmp@plt>
 d34:	cmp	r0, #0
 d38:	moveq	r3, #2
 d3c:	streq	r3, [sp, #24]
 d40:	beq	d84 <dump_daq_initialize+0x194>
 d44:	ldr	r1, [pc, #188]	; e08 <dump_daq_initialize+0x218>
 d48:	add	r1, pc, r1
 d4c:	mov	r0, r7
 d50:	bl	5f0 <strcasecmp@plt>
 d54:	cmp	r0, #0
 d58:	moveq	r3, #0
 d5c:	streq	r3, [sp, #24]
 d60:	beq	d84 <dump_daq_initialize+0x194>
 d64:	ldr	r1, [pc, #160]	; e0c <dump_daq_initialize+0x21c>
 d68:	add	r1, pc, r1
 d6c:	mov	r0, r7
 d70:	bl	5f0 <strcasecmp@plt>
 d74:	cmp	r0, #0
 d78:	moveq	r3, #1
 d7c:	streq	r3, [sp, #24]
 d80:	bne	db8 <dump_daq_initialize+0x1c8>
 d84:	ldr	r4, [sl, #16]
 d88:	ldr	r3, [sp, #4]
 d8c:	ldr	r2, [sp]
 d90:	add	r1, r8, #4
 d94:	add	r0, sp, #12
 d98:	blx	r4
 d9c:	subs	r4, r0, #0
 da0:	streq	sl, [r8]
 da4:	streq	r8, [fp]
 da8:	bne	de0 <dump_daq_initialize+0x1f0>
 dac:	mov	r0, r4
 db0:	add	sp, sp, #44	; 0x2c
 db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 db8:	mov	r3, r7
 dbc:	ldr	r2, [pc, #76]	; e10 <dump_daq_initialize+0x220>
 dc0:	add	r2, pc, r2
 dc4:	ldr	r1, [sp, #4]
 dc8:	ldr	r0, [sp]
 dcc:	bl	620 <snprintf@plt>
 dd0:	mov	r0, r8
 dd4:	bl	5c0 <free@plt>
 dd8:	mvn	r4, #0
 ddc:	b	dac <dump_daq_initialize+0x1bc>
 de0:	mov	r0, r8
 de4:	bl	5c0 <free@plt>
 de8:	b	dac <dump_daq_initialize+0x1bc>
 dec:	.word	0x00000280
 df0:	.word	0x00000218
 df4:	.word	0x0000019c
 df8:	.word	0x00000208
 dfc:	.word	0x00000174
 e00:	.word	0x00000214
 e04:	.word	0x000001c8
 e08:	.word	0x000001b4
 e0c:	.word	0x0000019c
 e10:	.word	0x0000014c

Disassembly of section .fini:

00000e14 <_fini>:
 e14:	push	{r3, lr}
 e18:	pop	{r3, pc}
