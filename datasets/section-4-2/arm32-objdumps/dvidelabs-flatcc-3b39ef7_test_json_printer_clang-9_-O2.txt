
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

00012850 <.init>:
   12850:	push	{r3, lr}
   12854:	bl	129dc <_start@@Base+0x3c>
   12858:	pop	{r3, pc}

Disassembly of section .plt:

0001285c <raise@plt-0x14>:
   1285c:	push	{lr}		; (str lr, [sp, #-4]!)
   12860:	ldr	lr, [pc, #4]	; 1286c <raise@plt-0x4>
   12864:	add	lr, pc, lr
   12868:	ldr	pc, [lr, #8]!
   1286c:	muleq	r2, r4, r7

00012870 <raise@plt>:
   12870:	add	ip, pc, #0, 12
   12874:	add	ip, ip, #32, 20	; 0x20000
   12878:	ldr	pc, [ip, #1940]!	; 0x794

0001287c <strcmp@plt>:
   1287c:	add	ip, pc, #0, 12
   12880:	add	ip, ip, #32, 20	; 0x20000
   12884:	ldr	pc, [ip, #1932]!	; 0x78c

00012888 <fopen@plt>:
   12888:	add	ip, pc, #0, 12
   1288c:	add	ip, ip, #32, 20	; 0x20000
   12890:	ldr	pc, [ip, #1924]!	; 0x784

00012894 <memmove@plt>:
   12894:	add	ip, pc, #0, 12
   12898:	add	ip, ip, #32, 20	; 0x20000
   1289c:	ldr	pc, [ip, #1916]!	; 0x77c

000128a0 <free@plt>:
   128a0:	add	ip, pc, #0, 12
   128a4:	add	ip, ip, #32, 20	; 0x20000
   128a8:	ldr	pc, [ip, #1908]!	; 0x774

000128ac <memcpy@plt>:
   128ac:	add	ip, pc, #0, 12
   128b0:	add	ip, ip, #32, 20	; 0x20000
   128b4:	ldr	pc, [ip, #1900]!	; 0x76c

000128b8 <ftell@plt>:
   128b8:	add	ip, pc, #0, 12
   128bc:	add	ip, ip, #32, 20	; 0x20000
   128c0:	ldr	pc, [ip, #1892]!	; 0x764

000128c4 <rewind@plt>:
   128c4:	add	ip, pc, #0, 12
   128c8:	add	ip, ip, #32, 20	; 0x20000
   128cc:	ldr	pc, [ip, #1884]!	; 0x75c

000128d0 <realloc@plt>:
   128d0:	add	ip, pc, #0, 12
   128d4:	add	ip, ip, #32, 20	; 0x20000
   128d8:	ldr	pc, [ip, #1876]!	; 0x754

000128dc <fwrite@plt>:
   128dc:	add	ip, pc, #0, 12
   128e0:	add	ip, ip, #32, 20	; 0x20000
   128e4:	ldr	pc, [ip, #1868]!	; 0x74c

000128e8 <puts@plt>:
   128e8:	add	ip, pc, #0, 12
   128ec:	add	ip, ip, #32, 20	; 0x20000
   128f0:	ldr	pc, [ip, #1860]!	; 0x744

000128f4 <malloc@plt>:
   128f4:	add	ip, pc, #0, 12
   128f8:	add	ip, ip, #32, 20	; 0x20000
   128fc:	ldr	pc, [ip, #1852]!	; 0x73c

00012900 <__libc_start_main@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #32, 20	; 0x20000
   12908:	ldr	pc, [ip, #1844]!	; 0x734

0001290c <__gmon_start__@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #32, 20	; 0x20000
   12914:	ldr	pc, [ip, #1836]!	; 0x72c

00012918 <exit@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #32, 20	; 0x20000
   12920:	ldr	pc, [ip, #1828]!	; 0x724

00012924 <bcmp@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #32, 20	; 0x20000
   1292c:	ldr	pc, [ip, #1820]!	; 0x71c

00012930 <fprintf@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #32, 20	; 0x20000
   12938:	ldr	pc, [ip, #1812]!	; 0x714

0001293c <memset@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #32, 20	; 0x20000
   12944:	ldr	pc, [ip, #1804]!	; 0x70c

00012948 <strncpy@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #32, 20	; 0x20000
   12950:	ldr	pc, [ip, #1796]!	; 0x704

00012954 <fclose@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #32, 20	; 0x20000
   1295c:	ldr	pc, [ip, #1788]!	; 0x6fc

00012960 <sprintf@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #32, 20	; 0x20000
   12968:	ldr	pc, [ip, #1780]!	; 0x6f4

0001296c <fread_unlocked@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #32, 20	; 0x20000
   12974:	ldr	pc, [ip, #1772]!	; 0x6ec

00012978 <fseek@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #32, 20	; 0x20000
   12980:	ldr	pc, [ip, #1764]!	; 0x6e4

00012984 <abort@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #32, 20	; 0x20000
   1298c:	ldr	pc, [ip, #1756]!	; 0x6dc

00012990 <__assert_fail@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #32, 20	; 0x20000
   12998:	ldr	pc, [ip, #1748]!	; 0x6d4

Disassembly of section .text:

000129a0 <_start@@Base>:
   129a0:	mov	fp, #0
   129a4:	mov	lr, #0
   129a8:	pop	{r1}		; (ldr r1, [sp], #4)
   129ac:	mov	r2, sp
   129b0:	push	{r2}		; (str r2, [sp, #-4]!)
   129b4:	push	{r0}		; (str r0, [sp, #-4]!)
   129b8:	ldr	ip, [pc, #16]	; 129d0 <_start@@Base+0x30>
   129bc:	push	{ip}		; (str ip, [sp, #-4]!)
   129c0:	ldr	r0, [pc, #12]	; 129d4 <_start@@Base+0x34>
   129c4:	ldr	r3, [pc, #12]	; 129d8 <_start@@Base+0x38>
   129c8:	bl	12900 <__libc_start_main@plt>
   129cc:	bl	12984 <abort@plt>
   129d0:	andeq	r1, r2, r0, asr #5
   129d4:	muleq	r1, r8, lr
   129d8:	andeq	r1, r2, r0, ror #4
   129dc:	ldr	r3, [pc, #20]	; 129f8 <_start@@Base+0x58>
   129e0:	ldr	r2, [pc, #20]	; 129fc <_start@@Base+0x5c>
   129e4:	add	r3, pc, r3
   129e8:	ldr	r2, [r3, r2]
   129ec:	cmp	r2, #0
   129f0:	bxeq	lr
   129f4:	b	1290c <__gmon_start__@plt>
   129f8:	andeq	r0, r2, r4, lsl r6
   129fc:	andeq	r0, r0, r8, ror r0
   12a00:	ldr	r0, [pc, #24]	; 12a20 <_start@@Base+0x80>
   12a04:	ldr	r3, [pc, #24]	; 12a24 <_start@@Base+0x84>
   12a08:	cmp	r3, r0
   12a0c:	bxeq	lr
   12a10:	ldr	r3, [pc, #16]	; 12a28 <_start@@Base+0x88>
   12a14:	cmp	r3, #0
   12a18:	bxeq	lr
   12a1c:	bx	r3
   12a20:	muleq	r3, r8, r0
   12a24:	muleq	r3, r8, r0
   12a28:	andeq	r0, r0, r0
   12a2c:	ldr	r0, [pc, #36]	; 12a58 <_start@@Base+0xb8>
   12a30:	ldr	r1, [pc, #36]	; 12a5c <_start@@Base+0xbc>
   12a34:	sub	r1, r1, r0
   12a38:	asr	r1, r1, #2
   12a3c:	add	r1, r1, r1, lsr #31
   12a40:	asrs	r1, r1, #1
   12a44:	bxeq	lr
   12a48:	ldr	r3, [pc, #16]	; 12a60 <_start@@Base+0xc0>
   12a4c:	cmp	r3, #0
   12a50:	bxeq	lr
   12a54:	bx	r3
   12a58:	muleq	r3, r8, r0
   12a5c:	muleq	r3, r8, r0
   12a60:	andeq	r0, r0, r0
   12a64:	push	{r4, lr}
   12a68:	ldr	r4, [pc, #24]	; 12a88 <_start@@Base+0xe8>
   12a6c:	ldrb	r3, [r4]
   12a70:	cmp	r3, #0
   12a74:	popne	{r4, pc}
   12a78:	bl	12a00 <_start@@Base+0x60>
   12a7c:	mov	r3, #1
   12a80:	strb	r3, [r4]
   12a84:	pop	{r4, pc}
   12a88:	muleq	r3, r8, r0
   12a8c:	b	12a2c <_start@@Base+0x8c>

00012a90 <test_print@@Base>:
   12a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a94:	add	fp, sp, #28
   12a98:	sub	sp, sp, #68	; 0x44
   12a9c:	mov	r4, #0
   12aa0:	str	r4, [fp, #-32]	; 0xffffffe0
   12aa4:	str	r4, [fp, #-36]	; 0xffffffdc
   12aa8:	str	r4, [fp, #-40]	; 0xffffffd8
   12aac:	ldr	sl, [pc, #672]	; 12d54 <test_print@@Base+0x2c4>
   12ab0:	ldr	sl, [pc, sl]
   12ab4:	ldr	r0, [sl]
   12ab8:	ldr	r1, [pc, #664]	; 12d58 <test_print@@Base+0x2c8>
   12abc:	add	r1, pc, r1
   12ac0:	bl	12888 <fopen@plt>
   12ac4:	cmp	r0, #0
   12ac8:	bne	12af0 <test_print@@Base+0x60>
   12acc:	ldr	r2, [sl]
   12ad0:	ldr	r0, [pc, #644]	; 12d5c <test_print@@Base+0x2cc>
   12ad4:	ldr	r0, [pc, r0]
   12ad8:	ldr	r0, [r0]
   12adc:	ldr	r1, [pc, #636]	; 12d60 <test_print@@Base+0x2d0>
   12ae0:	add	r1, pc, r1
   12ae4:	bl	12930 <fprintf@plt>
   12ae8:	mvn	r4, #0
   12aec:	b	12d34 <test_print@@Base+0x2a4>
   12af0:	mov	r5, r0
   12af4:	add	r0, sp, #8
   12af8:	mov	r1, r5
   12afc:	bl	20b78 <flatcc_json_printer_init@@Base>
   12b00:	movw	r0, #258	; 0x102
   12b04:	strb	r4, [sp, #35]	; 0x23
   12b08:	strh	r0, [sp, #33]	; 0x21
   12b0c:	ldr	r9, [pc, #592]	; 12d64 <test_print@@Base+0x2d4>
   12b10:	ldr	r9, [pc, r9]
   12b14:	ldr	r4, [r9]
   12b18:	cmp	r4, #0
   12b1c:	beq	12b38 <test_print@@Base+0xa8>
   12b20:	ldr	r1, [pc, #576]	; 12d68 <test_print@@Base+0x2d8>
   12b24:	mov	r0, r4
   12b28:	add	r1, pc, r1
   12b2c:	bl	1287c <strcmp@plt>
   12b30:	cmp	r0, #0
   12b34:	bne	12c28 <test_print@@Base+0x198>
   12b38:	mov	r0, #288	; 0x120
   12b3c:	str	r0, [fp, #-32]	; 0xffffffe0
   12b40:	ldr	r8, [pc, #548]	; 12d6c <test_print@@Base+0x2dc>
   12b44:	add	r8, pc, r8
   12b48:	ldr	r4, [pc, #544]	; 12d70 <test_print@@Base+0x2e0>
   12b4c:	sub	r1, fp, #36	; 0x24
   12b50:	ldr	r4, [pc, r4]
   12b54:	ldr	r0, [r4]
   12b58:	bl	12da8 <test_print@@Base+0x318>
   12b5c:	cmp	r0, #0
   12b60:	bne	12b90 <test_print@@Base+0x100>
   12b64:	ldr	r2, [r4]
   12b68:	ldr	r0, [pc, #516]	; 12d74 <test_print@@Base+0x2e4>
   12b6c:	ldr	r0, [pc, r0]
   12b70:	ldr	r0, [r0]
   12b74:	ldr	r1, [pc, #508]	; 12d78 <test_print@@Base+0x2e8>
   12b78:	add	r1, pc, r1
   12b7c:	bl	12930 <fprintf@plt>
   12b80:	mov	r6, #0
   12b84:	mvn	r4, #0
   12b88:	mov	r7, #0
   12b8c:	b	12cec <test_print@@Base+0x25c>
   12b90:	mov	r6, r0
   12b94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12b98:	ldr	r0, [pc, #484]	; 12d84 <test_print@@Base+0x2f4>
   12b9c:	add	r4, sp, #8
   12ba0:	mov	r1, r8
   12ba4:	add	r0, pc, r0
   12ba8:	str	r0, [sp]
   12bac:	mov	r0, r4
   12bb0:	ldr	r3, [pc, #464]	; 12d88 <test_print@@Base+0x2f8>
   12bb4:	add	r3, pc, r3
   12bb8:	bl	203e4 <flatcc_json_printer_table_as_root@@Base>
   12bbc:	ldr	r2, [sp, #52]	; 0x34
   12bc0:	mov	r0, r4
   12bc4:	mov	r1, #1
   12bc8:	blx	r2
   12bcc:	ldr	r0, [sp, #44]	; 0x2c
   12bd0:	cmp	r0, #0
   12bd4:	beq	12be4 <test_print@@Base+0x154>
   12bd8:	ldr	r0, [pc, #428]	; 12d8c <test_print@@Base+0x2fc>
   12bdc:	add	r0, pc, r0
   12be0:	bl	128e8 <puts@plt>
   12be4:	mov	r0, r5
   12be8:	bl	12954 <fclose@plt>
   12bec:	ldr	r0, [sl]
   12bf0:	sub	r1, fp, #40	; 0x28
   12bf4:	bl	12da8 <test_print@@Base+0x318>
   12bf8:	cmp	r0, #0
   12bfc:	bne	12c70 <test_print@@Base+0x1e0>
   12c00:	ldr	r2, [sl]
   12c04:	ldr	r0, [pc, #388]	; 12d90 <test_print@@Base+0x300>
   12c08:	ldr	r0, [pc, r0]
   12c0c:	ldr	r0, [r0]
   12c10:	ldr	r1, [pc, #380]	; 12d94 <test_print@@Base+0x304>
   12c14:	add	r1, pc, r1
   12c18:	bl	12930 <fprintf@plt>
   12c1c:	mov	r7, #0
   12c20:	mvn	r4, #0
   12c24:	b	12cbc <test_print@@Base+0x22c>
   12c28:	sub	r1, fp, #32
   12c2c:	mov	r0, r4
   12c30:	bl	12da8 <test_print@@Base+0x318>
   12c34:	mov	r8, r0
   12c38:	cmp	r0, #0
   12c3c:	bne	12b48 <test_print@@Base+0xb8>
   12c40:	ldr	r2, [r9]
   12c44:	ldr	r0, [pc, #304]	; 12d7c <test_print@@Base+0x2ec>
   12c48:	ldr	r0, [pc, r0]
   12c4c:	ldr	r0, [r0]
   12c50:	ldr	r1, [pc, #296]	; 12d80 <test_print@@Base+0x2f0>
   12c54:	add	r1, pc, r1
   12c58:	bl	12930 <fprintf@plt>
   12c5c:	mvn	r4, #0
   12c60:	mov	r8, #0
   12c64:	mov	r6, #0
   12c68:	mov	r7, #0
   12c6c:	b	12cec <test_print@@Base+0x25c>
   12c70:	mov	r7, r0
   12c74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12c7c:	cmp	r2, r0
   12c80:	bne	12cc4 <test_print@@Base+0x234>
   12c84:	mov	r0, r7
   12c88:	mov	r1, r6
   12c8c:	bl	12924 <bcmp@plt>
   12c90:	cmp	r0, #0
   12c94:	bne	12cc4 <test_print@@Base+0x234>
   12c98:	ldr	r0, [pc, #256]	; 12da0 <test_print@@Base+0x310>
   12c9c:	mov	r1, #26
   12ca0:	mov	r2, #1
   12ca4:	ldr	r0, [pc, r0]
   12ca8:	ldr	r3, [r0]
   12cac:	ldr	r0, [pc, #240]	; 12da4 <test_print@@Base+0x314>
   12cb0:	add	r0, pc, r0
   12cb4:	bl	128dc <fwrite@plt>
   12cb8:	mov	r4, #0
   12cbc:	mov	r5, #0
   12cc0:	b	12cec <test_print@@Base+0x25c>
   12cc4:	ldr	r0, [pc, #204]	; 12d98 <test_print@@Base+0x308>
   12cc8:	mov	r1, #54	; 0x36
   12ccc:	mov	r2, #1
   12cd0:	ldr	r0, [pc, r0]
   12cd4:	ldr	r3, [r0]
   12cd8:	ldr	r0, [pc, #188]	; 12d9c <test_print@@Base+0x30c>
   12cdc:	add	r0, pc, r0
   12ce0:	bl	128dc <fwrite@plt>
   12ce4:	mov	r5, #0
   12ce8:	mvn	r4, #0
   12cec:	add	r0, sp, #8
   12cf0:	bl	20f54 <flatcc_json_printer_clear@@Base>
   12cf4:	cmp	r8, #0
   12cf8:	ldrne	r0, [r9]
   12cfc:	cmpne	r0, #0
   12d00:	bne	12d40 <test_print@@Base+0x2b0>
   12d04:	cmp	r6, #0
   12d08:	beq	12d14 <test_print@@Base+0x284>
   12d0c:	mov	r0, r6
   12d10:	bl	128a0 <free@plt>
   12d14:	cmp	r7, #0
   12d18:	beq	12d24 <test_print@@Base+0x294>
   12d1c:	mov	r0, r7
   12d20:	bl	128a0 <free@plt>
   12d24:	cmp	r5, #0
   12d28:	beq	12d34 <test_print@@Base+0x2a4>
   12d2c:	mov	r0, r5
   12d30:	bl	12954 <fclose@plt>
   12d34:	mov	r0, r4
   12d38:	sub	sp, fp, #28
   12d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d40:	mov	r0, r8
   12d44:	bl	128a0 <free@plt>
   12d48:	cmp	r6, #0
   12d4c:	bne	12d0c <test_print@@Base+0x27c>
   12d50:	b	12d14 <test_print@@Base+0x284>
   12d54:	andeq	r0, r2, ip, asr #11
   12d58:	andeq	lr, r0, r2, asr #16
   12d5c:	muleq	r2, r4, r5
   12d60:	andeq	lr, r0, r1, lsr #16
   12d64:	andeq	r0, r2, r4, ror #10
   12d68:	strdeq	lr, [r0], -r9
   12d6c:	andeq	lr, r0, r6, lsr sp
   12d70:	andeq	r0, r2, ip, lsl r5
   12d74:	strdeq	r0, [r2], -ip
   12d78:	ldrdeq	lr, [r0], -r5
   12d7c:	andeq	r0, r2, r0, lsr #8
   12d80:	andeq	lr, r0, pc, asr #13
   12d84:	muleq	r0, r4, r3
   12d88:	andeq	lr, r0, r4, asr #15
   12d8c:	andeq	lr, r0, r1, lsl #25
   12d90:	andeq	r0, r2, r0, ror #8
   12d94:	andeq	lr, r0, r9, ror #14
   12d98:	muleq	r2, r8, r3
   12d9c:	andeq	lr, r0, r6, asr #13
   12da0:	andeq	r0, r2, r4, asr #7
   12da4:	andeq	lr, r0, r9, lsr #14
   12da8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12dac:	add	fp, sp, #24
   12db0:	sub	sp, sp, #8
   12db4:	cmp	r1, #0
   12db8:	add	r9, sp, #4
   12dbc:	movne	r9, r1
   12dc0:	ldr	r1, [pc, #204]	; 12e94 <test_print@@Base+0x404>
   12dc4:	add	r1, pc, r1
   12dc8:	bl	12888 <fopen@plt>
   12dcc:	cmp	r0, #0
   12dd0:	beq	12e70 <test_print@@Base+0x3e0>
   12dd4:	mov	r1, #0
   12dd8:	mov	r2, #2
   12ddc:	mov	r5, r0
   12de0:	mov	r8, #0
   12de4:	bl	12978 <fseek@plt>
   12de8:	mov	r0, r5
   12dec:	bl	128b8 <ftell@plt>
   12df0:	mov	r4, r0
   12df4:	cmp	r0, #10240	; 0x2800
   12df8:	str	r0, [r9]
   12dfc:	bhi	12e64 <test_print@@Base+0x3d4>
   12e00:	mov	r0, r5
   12e04:	bl	128c4 <rewind@plt>
   12e08:	cmp	r4, #0
   12e0c:	mov	r0, r4
   12e10:	movweq	r0, #1
   12e14:	bl	128f4 <malloc@plt>
   12e18:	cmp	r0, #0
   12e1c:	beq	12e64 <test_print@@Base+0x3d4>
   12e20:	mov	r7, r0
   12e24:	mov	r1, #0
   12e28:	mov	r6, r1
   12e2c:	add	r0, r7, r1
   12e30:	sub	r2, r4, r1
   12e34:	mov	r1, #1
   12e38:	mov	r3, r5
   12e3c:	bl	1296c <fread_unlocked@plt>
   12e40:	add	r1, r0, r6
   12e44:	cmp	r0, #0
   12e48:	bne	12e28 <test_print@@Base+0x398>
   12e4c:	mov	r0, r5
   12e50:	bl	12954 <fclose@plt>
   12e54:	cmp	r4, r6
   12e58:	bne	12e78 <test_print@@Base+0x3e8>
   12e5c:	mov	r8, r7
   12e60:	b	12e84 <test_print@@Base+0x3f4>
   12e64:	mov	r0, r5
   12e68:	bl	12954 <fclose@plt>
   12e6c:	b	12e84 <test_print@@Base+0x3f4>
   12e70:	mov	r4, #0
   12e74:	b	12e80 <test_print@@Base+0x3f0>
   12e78:	mov	r0, r7
   12e7c:	bl	128a0 <free@plt>
   12e80:	mov	r8, #0
   12e84:	str	r4, [r9]
   12e88:	mov	r0, r8
   12e8c:	sub	sp, fp, #24
   12e90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e94:	andeq	lr, r0, r9, lsl #14

00012e98 <main@@Base>:
   12e98:	push	{r4, r5, r6, sl, fp, lr}
   12e9c:	add	fp, sp, #16
   12ea0:	ldr	r6, [pc, #128]	; 12f28 <main@@Base+0x90>
   12ea4:	mov	r5, r0
   12ea8:	mov	r4, r1
   12eac:	mov	r1, #24
   12eb0:	mov	r2, #1
   12eb4:	ldr	r6, [pc, r6]
   12eb8:	ldr	r3, [r6]
   12ebc:	ldr	r0, [pc, #104]	; 12f2c <main@@Base+0x94>
   12ec0:	add	r0, pc, r0
   12ec4:	bl	128dc <fwrite@plt>
   12ec8:	cmp	r5, #1
   12ecc:	beq	12f00 <main@@Base+0x68>
   12ed0:	cmp	r5, #4
   12ed4:	bne	12f08 <main@@Base+0x70>
   12ed8:	ldmib	r4, {r0, r1, r2}
   12edc:	ldr	r3, [pc, #76]	; 12f30 <main@@Base+0x98>
   12ee0:	ldr	r3, [pc, r3]
   12ee4:	str	r0, [r3]
   12ee8:	ldr	r0, [pc, #68]	; 12f34 <main@@Base+0x9c>
   12eec:	ldr	r0, [pc, r0]
   12ef0:	str	r1, [r0]
   12ef4:	ldr	r0, [pc, #60]	; 12f38 <main@@Base+0xa0>
   12ef8:	ldr	r0, [pc, r0]
   12efc:	str	r2, [r0]
   12f00:	pop	{r4, r5, r6, sl, fp, lr}
   12f04:	b	12a90 <test_print@@Base>
   12f08:	ldr	r3, [r6]
   12f0c:	ldr	r0, [pc, #40]	; 12f3c <main@@Base+0xa4>
   12f10:	mov	r1, #191	; 0xbf
   12f14:	mov	r2, #1
   12f18:	add	r0, pc, r0
   12f1c:	bl	128dc <fwrite@plt>
   12f20:	mov	r0, #1
   12f24:	bl	12918 <exit@plt>
   12f28:			; <UNDEFINED> instruction: 0x000201b4
   12f2c:	andeq	lr, r0, r4, lsr r5
   12f30:	muleq	r2, r4, r1
   12f34:	andeq	r0, r2, r0, lsl #3
   12f38:	andeq	r0, r2, r4, lsl #3
   12f3c:	strdeq	lr, [r0], -r5
   12f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f44:	add	fp, sp, #28
   12f48:	sub	sp, sp, #20
   12f4c:	mov	r5, r0
   12f50:	ldr	r0, [pc, #1268]	; 1344c <main@@Base+0x5b4>
   12f54:	mov	r4, r1
   12f58:	mov	r1, #3
   12f5c:	mov	r2, #0
   12f60:	mov	r8, #0
   12f64:	str	r1, [sp]
   12f68:	mov	r1, r4
   12f6c:	add	r0, pc, r0
   12f70:	str	r0, [sp, #4]
   12f74:	mov	r0, r5
   12f78:	ldr	r3, [pc, #1232]	; 13450 <main@@Base+0x5b8>
   12f7c:	add	r3, pc, r3
   12f80:	bl	2000c <flatcc_json_printer_struct_field@@Base>
   12f84:	mov	r0, #150	; 0x96
   12f88:	mov	r1, #4
   12f8c:	mov	r2, #1
   12f90:	mov	r6, #4
   12f94:	str	r1, [sp]
   12f98:	str	r0, [sp, #4]
   12f9c:	mov	r0, r5
   12fa0:	mov	r1, r4
   12fa4:	ldr	r3, [pc, #1192]	; 13454 <main@@Base+0x5bc>
   12fa8:	add	r3, pc, r3
   12fac:	bl	16e7c <flatcc_json_printer_int16_field@@Base>
   12fb0:	mov	r0, #100	; 0x64
   12fb4:	mov	r1, #2
   12fb8:	mov	r2, #2
   12fbc:	str	r1, [sp]
   12fc0:	str	r0, [sp, #4]
   12fc4:	mov	r0, r5
   12fc8:	mov	r1, r4
   12fcc:	ldr	r3, [pc, #1156]	; 13458 <main@@Base+0x5c0>
   12fd0:	add	r3, pc, r3
   12fd4:	bl	16e7c <flatcc_json_printer_int16_field@@Base>
   12fd8:	str	r6, [sp]
   12fdc:	mov	r0, r5
   12fe0:	mov	r1, r4
   12fe4:	mov	r2, #3
   12fe8:	ldr	r3, [pc, #1132]	; 1345c <main@@Base+0x5c4>
   12fec:	add	r3, pc, r3
   12ff0:	bl	16494 <flatcc_json_printer_string_field@@Base>
   12ff4:	mov	r0, #9
   12ff8:	mov	r1, r4
   12ffc:	mov	r2, #5
   13000:	mov	r7, #5
   13004:	str	r0, [sp]
   13008:	mov	r0, r5
   1300c:	ldr	r3, [pc, #1100]	; 13460 <main@@Base+0x5c8>
   13010:	add	r3, pc, r3
   13014:	bl	19004 <flatcc_json_printer_uint8_vector_field@@Base>
   13018:	ldr	r0, [pc, #1092]	; 13464 <main@@Base+0x5cc>
   1301c:	mov	r1, #8
   13020:	str	r7, [sp]
   13024:	mov	r2, #6
   13028:	mov	r7, #5
   1302c:	str	r1, [sp, #4]
   13030:	mov	r1, r4
   13034:	add	r0, pc, r0
   13038:	str	r0, [sp, #8]
   1303c:	mov	r0, r5
   13040:	ldr	r3, [pc, #1056]	; 13468 <main@@Base+0x5d0>
   13044:	add	r3, pc, r3
   13048:	bl	17844 <flatcc_json_printer_int8_enum_field@@Base>
   1304c:	ldr	r0, [pc, #1048]	; 1346c <main@@Base+0x5d4>
   13050:	ldr	r1, [pc, #1048]	; 13470 <main@@Base+0x5d8>
   13054:	str	r6, [sp]
   13058:	mov	r2, #8
   1305c:	add	r0, pc, r0
   13060:	add	r1, pc, r1
   13064:	str	r1, [sp, #4]
   13068:	str	r0, [sp, #8]
   1306c:	mov	r0, r5
   13070:	mov	r1, r4
   13074:	ldr	r3, [pc, #1016]	; 13474 <main@@Base+0x5dc>
   13078:	add	r3, pc, r3
   1307c:	bl	1f700 <flatcc_json_printer_union_field@@Base>
   13080:	ldr	r0, [pc, #1008]	; 13478 <main@@Base+0x5e0>
   13084:	str	r7, [sp]
   13088:	str	r6, [sp, #4]
   1308c:	mov	r1, r4
   13090:	mov	r2, #9
   13094:	mov	sl, #5
   13098:	add	r0, pc, r0
   1309c:	str	r0, [sp, #8]
   130a0:	mov	r0, r5
   130a4:	ldr	r3, [pc, #976]	; 1347c <main@@Base+0x5e4>
   130a8:	add	r3, pc, r3
   130ac:	bl	1e33c <flatcc_json_printer_struct_vector_field@@Base>
   130b0:	mov	r7, #17
   130b4:	mov	r0, r5
   130b8:	mov	r1, r4
   130bc:	mov	r2, #10
   130c0:	str	r7, [sp]
   130c4:	ldr	r3, [pc, #948]	; 13480 <main@@Base+0x5e8>
   130c8:	add	r3, pc, r3
   130cc:	bl	1e8e4 <flatcc_json_printer_string_vector_field@@Base>
   130d0:	ldr	r9, [pc, #940]	; 13484 <main@@Base+0x5ec>
   130d4:	mov	r0, r5
   130d8:	mov	r1, r4
   130dc:	mov	r2, #11
   130e0:	add	r9, pc, r9
   130e4:	stm	sp, {r7, r9}
   130e8:	ldr	r3, [pc, #920]	; 13488 <main@@Base+0x5f0>
   130ec:	add	r3, pc, r3
   130f0:	bl	1eca8 <flatcc_json_printer_table_vector_field@@Base>
   130f4:	str	sl, [sp]
   130f8:	str	r9, [sp, #4]
   130fc:	mov	r0, r5
   13100:	mov	r1, r4
   13104:	mov	r2, #12
   13108:	mov	sl, #5
   1310c:	ldr	r3, [pc, #888]	; 1348c <main@@Base+0x5f4>
   13110:	add	r3, pc, r3
   13114:	bl	1f514 <flatcc_json_printer_table_field@@Base>
   13118:	mov	r0, #20
   1311c:	mov	r1, r4
   13120:	mov	r2, #13
   13124:	stm	sp, {r0, r8, r9}
   13128:	mov	r0, r5
   1312c:	ldr	r3, [pc, #860]	; 13490 <main@@Base+0x5f8>
   13130:	add	r3, pc, r3
   13134:	bl	208c4 <flatcc_json_printer_table_as_nested_root@@Base>
   13138:	ldr	r0, [pc, #852]	; 13494 <main@@Base+0x5fc>
   1313c:	mov	r1, #9
   13140:	mov	r2, #14
   13144:	str	r1, [sp]
   13148:	mov	r1, r4
   1314c:	add	r0, pc, r0
   13150:	str	r0, [sp, #4]
   13154:	mov	r0, r5
   13158:	ldr	r3, [pc, #824]	; 13498 <main@@Base+0x600>
   1315c:	add	r3, pc, r3
   13160:	bl	1f514 <flatcc_json_printer_table_field@@Base>
   13164:	mov	r9, #8
   13168:	mov	r0, #1
   1316c:	mov	r1, r4
   13170:	mov	r2, #15
   13174:	str	r0, [sp, #4]
   13178:	str	r9, [sp]
   1317c:	mov	r0, r5
   13180:	ldr	r3, [pc, #788]	; 1349c <main@@Base+0x604>
   13184:	add	r3, pc, r3
   13188:	bl	1713c <flatcc_json_printer_bool_field@@Base>
   1318c:	mov	r6, #16
   13190:	mov	r0, r5
   13194:	mov	r1, r4
   13198:	mov	r2, #16
   1319c:	stm	sp, {r6, r8}
   131a0:	ldr	r3, [pc, #760]	; 134a0 <main@@Base+0x608>
   131a4:	add	r3, pc, r3
   131a8:	bl	16f64 <flatcc_json_printer_int32_field@@Base>
   131ac:	stm	sp, {r6, r8}
   131b0:	mov	r0, r5
   131b4:	mov	r1, r4
   131b8:	mov	r2, #17
   131bc:	ldr	r3, [pc, #736]	; 134a4 <main@@Base+0x60c>
   131c0:	add	r3, pc, r3
   131c4:	bl	16b40 <flatcc_json_printer_uint32_field@@Base>
   131c8:	str	r8, [sp, #8]
   131cc:	str	r8, [sp, #12]
   131d0:	str	r6, [sp]
   131d4:	mov	r0, r5
   131d8:	mov	r1, r4
   131dc:	mov	r2, #18
   131e0:	ldr	r3, [pc, #704]	; 134a8 <main@@Base+0x610>
   131e4:	add	r3, pc, r3
   131e8:	bl	17040 <flatcc_json_printer_int64_field@@Base>
   131ec:	str	r8, [sp, #8]
   131f0:	str	r8, [sp, #12]
   131f4:	str	r6, [sp]
   131f8:	mov	r0, r5
   131fc:	mov	r1, r4
   13200:	mov	r2, #19
   13204:	ldr	r3, [pc, #672]	; 134ac <main@@Base+0x614>
   13208:	add	r3, pc, r3
   1320c:	bl	16c04 <flatcc_json_printer_uint64_field@@Base>
   13210:	stm	sp, {r7, r8}
   13214:	mov	r0, r5
   13218:	mov	r1, r4
   1321c:	mov	r2, #20
   13220:	ldr	r3, [pc, #648]	; 134b0 <main@@Base+0x618>
   13224:	add	r3, pc, r3
   13228:	bl	16f64 <flatcc_json_printer_int32_field@@Base>
   1322c:	stm	sp, {r7, r8}
   13230:	mov	r0, r5
   13234:	mov	r1, r4
   13238:	mov	r2, #21
   1323c:	ldr	r3, [pc, #624]	; 134b4 <main@@Base+0x61c>
   13240:	add	r3, pc, r3
   13244:	bl	16b40 <flatcc_json_printer_uint32_field@@Base>
   13248:	str	r8, [sp, #8]
   1324c:	str	r8, [sp, #12]
   13250:	str	r7, [sp]
   13254:	mov	r0, r5
   13258:	mov	r1, r4
   1325c:	mov	r2, #22
   13260:	ldr	r3, [pc, #592]	; 134b8 <main@@Base+0x620>
   13264:	add	r3, pc, r3
   13268:	bl	17040 <flatcc_json_printer_int64_field@@Base>
   1326c:	str	r8, [sp, #8]
   13270:	str	r8, [sp, #12]
   13274:	str	r7, [sp]
   13278:	mov	r0, r5
   1327c:	mov	r1, r4
   13280:	mov	r2, #23
   13284:	mov	r8, #23
   13288:	ldr	r3, [pc, #556]	; 134bc <main@@Base+0x624>
   1328c:	add	r3, pc, r3
   13290:	bl	16c04 <flatcc_json_printer_uint64_field@@Base>
   13294:	str	r6, [sp]
   13298:	mov	r0, r5
   1329c:	mov	r1, r4
   132a0:	mov	r2, #24
   132a4:	ldr	r3, [pc, #532]	; 134c0 <main@@Base+0x628>
   132a8:	add	r3, pc, r3
   132ac:	bl	1b1ac <flatcc_json_printer_bool_vector_field@@Base>
   132b0:	str	sl, [sp]
   132b4:	vldr	s0, [pc, #392]	; 13444 <main@@Base+0x5ac>
   132b8:	mov	r0, r5
   132bc:	mov	r1, r4
   132c0:	mov	r2, #25
   132c4:	ldr	r3, [pc, #504]	; 134c4 <main@@Base+0x62c>
   132c8:	add	r3, pc, r3
   132cc:	bl	17234 <flatcc_json_printer_float_field@@Base>
   132d0:	mov	r6, #6
   132d4:	vmov.f32	s0, #8	; 0x40400000  3.0
   132d8:	mov	r0, r5
   132dc:	mov	r1, r4
   132e0:	mov	r2, #26
   132e4:	str	r6, [sp]
   132e8:	ldr	r3, [pc, #472]	; 134c8 <main@@Base+0x630>
   132ec:	add	r3, pc, r3
   132f0:	bl	17234 <flatcc_json_printer_float_field@@Base>
   132f4:	str	r6, [sp]
   132f8:	vldr	s0, [pc, #328]	; 13448 <main@@Base+0x5b0>
   132fc:	mov	r0, r5
   13300:	mov	r1, r4
   13304:	mov	r2, #27
   13308:	ldr	r3, [pc, #444]	; 134cc <main@@Base+0x634>
   1330c:	add	r3, pc, r3
   13310:	bl	17234 <flatcc_json_printer_float_field@@Base>
   13314:	mov	r0, #18
   13318:	mov	r1, r4
   1331c:	mov	r2, #28
   13320:	str	r0, [sp]
   13324:	mov	r0, r5
   13328:	ldr	r3, [pc, #416]	; 134d0 <main@@Base+0x638>
   1332c:	add	r3, pc, r3
   13330:	bl	1e8e4 <flatcc_json_printer_string_vector_field@@Base>
   13334:	ldr	r0, [pc, #408]	; 134d4 <main@@Base+0x63c>
   13338:	stm	sp, {r8, r9}
   1333c:	mov	r1, r4
   13340:	mov	r2, #29
   13344:	add	r0, pc, r0
   13348:	str	r0, [sp, #8]
   1334c:	mov	r0, r5
   13350:	ldr	r3, [pc, #384]	; 134d8 <main@@Base+0x640>
   13354:	add	r3, pc, r3
   13358:	bl	1e33c <flatcc_json_printer_struct_vector_field@@Base>
   1335c:	mov	r6, #4
   13360:	mov	r0, r5
   13364:	mov	r1, r4
   13368:	mov	r2, #30
   1336c:	str	r6, [sp]
   13370:	ldr	r3, [pc, #356]	; 134dc <main@@Base+0x644>
   13374:	add	r3, pc, r3
   13378:	bl	19004 <flatcc_json_printer_uint8_vector_field@@Base>
   1337c:	str	sl, [sp]
   13380:	str	r6, [sp, #4]
   13384:	mov	r1, r4
   13388:	mov	r2, #31
   1338c:	ldr	r0, [pc, #332]	; 134e0 <main@@Base+0x648>
   13390:	add	r0, pc, r0
   13394:	str	r0, [sp, #8]
   13398:	mov	r0, r5
   1339c:	ldr	r3, [pc, #320]	; 134e4 <main@@Base+0x64c>
   133a0:	add	r3, pc, r3
   133a4:	bl	1e33c <flatcc_json_printer_struct_vector_field@@Base>
   133a8:	mov	r0, #15
   133ac:	mov	r1, r4
   133b0:	mov	r2, #32
   133b4:	str	r0, [sp]
   133b8:	mov	r0, r5
   133bc:	ldr	r3, [pc, #292]	; 134e8 <main@@Base+0x650>
   133c0:	add	r3, pc, r3
   133c4:	bl	1ada8 <flatcc_json_printer_int64_vector_field@@Base>
   133c8:	str	r7, [sp]
   133cc:	mov	r0, r5
   133d0:	mov	r1, r4
   133d4:	mov	r2, #33	; 0x21
   133d8:	ldr	r3, [pc, #268]	; 134ec <main@@Base+0x654>
   133dc:	add	r3, pc, r3
   133e0:	bl	1b9a0 <flatcc_json_printer_double_vector_field@@Base>
   133e4:	ldr	r0, [pc, #260]	; 134f0 <main@@Base+0x658>
   133e8:	mov	r1, #21
   133ec:	mov	r2, #34	; 0x22
   133f0:	str	r1, [sp]
   133f4:	mov	r1, r4
   133f8:	add	r0, pc, r0
   133fc:	str	r0, [sp, #4]
   13400:	mov	r0, r5
   13404:	ldr	r3, [pc, #232]	; 134f4 <main@@Base+0x65c>
   13408:	add	r3, pc, r3
   1340c:	bl	1f514 <flatcc_json_printer_table_field@@Base>
   13410:	ldr	r0, [pc, #224]	; 134f8 <main@@Base+0x660>
   13414:	mov	r1, #10
   13418:	mov	r2, #35	; 0x23
   1341c:	str	r1, [sp]
   13420:	mov	r1, r4
   13424:	add	r0, pc, r0
   13428:	str	r0, [sp, #4]
   1342c:	mov	r0, r5
   13430:	ldr	r3, [pc, #196]	; 134fc <main@@Base+0x664>
   13434:	add	r3, pc, r3
   13438:	bl	1f514 <flatcc_json_printer_table_field@@Base>
   1343c:	sub	sp, fp, #28
   13440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13444:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   13448:	andeq	r0, r0, r0
   1344c:	andeq	r0, r0, ip, lsl #11
   13450:	andeq	lr, r0, r4, asr r5
   13454:	andeq	lr, r0, ip, lsr #10
   13458:	andeq	lr, r0, r9, lsl #10
   1345c:	strdeq	lr, [r0], -r0
   13460:	ldrdeq	lr, [r0], -r1
   13464:	andeq	r0, r0, r0, ror #11
   13468:	andeq	lr, r0, r7, lsr #9
   1346c:	andeq	r0, r0, r8, lsr #14
   13470:	muleq	r0, r8, r6
   13474:	andeq	lr, r0, fp, ror #11
   13478:	andeq	r0, r0, r8, lsl r7
   1347c:	andeq	lr, r0, r9, asr #8
   13480:	andeq	lr, r0, pc, lsr #8
   13484:			; <UNDEFINED> instruction: 0xfffffe58
   13488:	andeq	lr, r0, sp, lsl r4
   1348c:	andeq	lr, r0, fp, lsl #8
   13490:	strdeq	lr, [r0], -r1
   13494:	andeq	r0, r0, ip, asr #13
   13498:	ldrdeq	lr, [r0], -sl
   1349c:			; <UNDEFINED> instruction: 0x0000e3bc
   134a0:	andeq	lr, r0, r5, lsr #7
   134a4:	muleq	r0, sl, r3
   134a8:	andeq	lr, r0, r7, lsl #7
   134ac:	andeq	lr, r0, r4, ror r3
   134b0:	andeq	lr, r0, r9, ror #6
   134b4:	andeq	lr, r0, pc, asr r3
   134b8:	andeq	lr, r0, sp, asr #6
   134bc:	andeq	lr, r0, r7, lsr r3
   134c0:	andeq	lr, r0, sp, lsr #6
   134c4:	andeq	lr, r0, lr, lsl r3
   134c8:	andeq	lr, r0, r0, lsl #6
   134cc:	andeq	lr, r0, r7, ror #5
   134d0:	andeq	lr, r0, lr, asr #5
   134d4:	andeq	r0, r0, r4, ror #10
   134d8:			; <UNDEFINED> instruction: 0x0000e2b9
   134dc:			; <UNDEFINED> instruction: 0x0000e2b1
   134e0:	andeq	r0, r0, r0, lsr #8
   134e4:	andeq	lr, r0, sl, lsl #5
   134e8:	andeq	lr, r0, r0, ror r2
   134ec:	andeq	lr, r0, r4, ror #4
   134f0:	andeq	r0, r0, r4, lsr #10
   134f4:	andeq	lr, r0, sl, asr #4
   134f8:	strdeq	r0, [r0], -ip
   134fc:	andeq	lr, r0, r4, lsr r2
   13500:	push	{r4, r5, r6, sl, fp, lr}
   13504:	add	fp, sp, #16
   13508:	sub	sp, sp, #16
   1350c:	mov	r5, r0
   13510:	ldr	r0, [pc, #228]	; 135fc <main@@Base+0x764>
   13514:	mov	r4, r1
   13518:	mov	r6, #1
   1351c:	mov	r1, #0
   13520:	mov	r3, #0
   13524:	mov	r2, r4
   13528:	add	r0, pc, r0
   1352c:	stm	sp, {r0, r6}
   13530:	mov	r0, r5
   13534:	bl	183ac <flatcc_json_printer_float_struct_field@@Base>
   13538:	ldr	r0, [pc, #192]	; 13600 <main@@Base+0x768>
   1353c:	mov	r1, #1
   13540:	mov	r2, r4
   13544:	mov	r3, #4
   13548:	add	r0, pc, r0
   1354c:	stm	sp, {r0, r6}
   13550:	mov	r0, r5
   13554:	bl	183ac <flatcc_json_printer_float_struct_field@@Base>
   13558:	ldr	r0, [pc, #164]	; 13604 <main@@Base+0x76c>
   1355c:	mov	r1, #2
   13560:	mov	r2, r4
   13564:	mov	r3, #8
   13568:	add	r0, pc, r0
   1356c:	stm	sp, {r0, r6}
   13570:	mov	r0, r5
   13574:	bl	183ac <flatcc_json_printer_float_struct_field@@Base>
   13578:	ldr	r0, [pc, #136]	; 13608 <main@@Base+0x770>
   1357c:	mov	r6, #5
   13580:	mov	r1, #3
   13584:	mov	r2, r4
   13588:	mov	r3, #16
   1358c:	add	r0, pc, r0
   13590:	stm	sp, {r0, r6}
   13594:	mov	r0, r5
   13598:	bl	18414 <flatcc_json_printer_double_struct_field@@Base>
   1359c:	ldr	r0, [pc, #104]	; 1360c <main@@Base+0x774>
   135a0:	ldr	r1, [pc, #104]	; 13610 <main@@Base+0x778>
   135a4:	mov	r2, r4
   135a8:	mov	r3, #24
   135ac:	add	r1, pc, r1
   135b0:	add	r0, pc, r0
   135b4:	stm	sp, {r1, r6}
   135b8:	str	r0, [sp, #8]
   135bc:	mov	r0, r5
   135c0:	mov	r1, #4
   135c4:	bl	18720 <flatcc_json_printer_int8_enum_struct_field@@Base>
   135c8:	ldr	r0, [pc, #68]	; 13614 <main@@Base+0x77c>
   135cc:	ldr	r1, [pc, #68]	; 13618 <main@@Base+0x780>
   135d0:	mov	r2, r4
   135d4:	mov	r3, #26
   135d8:	add	r1, pc, r1
   135dc:	add	r0, pc, r0
   135e0:	stm	sp, {r1, r6}
   135e4:	str	r0, [sp, #8]
   135e8:	mov	r0, r5
   135ec:	mov	r1, #5
   135f0:	bl	1febc <flatcc_json_printer_embedded_struct_field@@Base>
   135f4:	sub	sp, fp, #16
   135f8:	pop	{r4, r5, r6, sl, fp, pc}
   135fc:	andeq	lr, r0, r0, lsl #2
   13600:	ldrdeq	sp, [r0], -r7
   13604:	andeq	lr, r0, fp, lsl #2
   13608:	andeq	lr, r0, r9, ror #1
   1360c:	andeq	r0, r0, r4, rrx
   13610:	andeq	lr, r0, pc, asr #1
   13614:	ldrdeq	r0, [r0], -r4
   13618:	andeq	lr, r0, r9, lsr #1
   1361c:	push	{r4, r5, r6, r7, fp, lr}
   13620:	add	fp, sp, #16
   13624:	mov	r4, r0
   13628:	mvn	r0, #0
   1362c:	uxtb	r7, r1
   13630:	uxtab	r0, r0, r1
   13634:	ands	r5, r0, r7
   13638:	movwne	r5, #1
   1363c:	cmp	r1, #0
   13640:	beq	1369c <main@@Base+0x804>
   13644:	ands	r0, r1, #244	; 0xf4
   13648:	bne	1369c <main@@Base+0x804>
   1364c:	mov	r0, r4
   13650:	mov	r1, r5
   13654:	bl	16394 <flatcc_json_printer_delimit_enum_flags@@Base>
   13658:	mov	r6, #0
   1365c:	tst	r7, #1
   13660:	bne	136a8 <main@@Base+0x810>
   13664:	tst	r7, #2
   13668:	bne	136cc <main@@Base+0x834>
   1366c:	tst	r7, #8
   13670:	beq	1368c <main@@Base+0x7f4>
   13674:	ldr	r2, [pc, #128]	; 136fc <main@@Base+0x864>
   13678:	mov	r0, r4
   1367c:	mov	r1, r6
   13680:	mov	r3, #4
   13684:	add	r2, pc, r2
   13688:	bl	163c8 <flatcc_json_printer_enum_flag@@Base>
   1368c:	mov	r0, r4
   13690:	mov	r1, r5
   13694:	pop	{r4, r5, r6, r7, fp, lr}
   13698:	b	16394 <flatcc_json_printer_delimit_enum_flags@@Base>
   1369c:	mov	r0, r4
   136a0:	pop	{r4, r5, r6, r7, fp, lr}
   136a4:	b	16090 <flatcc_json_printer_int8@@Base>
   136a8:	ldr	r2, [pc, #68]	; 136f4 <main@@Base+0x85c>
   136ac:	mov	r0, r4
   136b0:	mov	r1, #0
   136b4:	mov	r3, #3
   136b8:	add	r2, pc, r2
   136bc:	bl	163c8 <flatcc_json_printer_enum_flag@@Base>
   136c0:	mov	r6, #1
   136c4:	tst	r7, #2
   136c8:	beq	1366c <main@@Base+0x7d4>
   136cc:	ldr	r2, [pc, #36]	; 136f8 <main@@Base+0x860>
   136d0:	mov	r0, r4
   136d4:	mov	r1, r6
   136d8:	mov	r3, #5
   136dc:	add	r2, pc, r2
   136e0:	bl	163c8 <flatcc_json_printer_enum_flag@@Base>
   136e4:	add	r6, r6, #1
   136e8:	tst	r7, #8
   136ec:	bne	13674 <main@@Base+0x7dc>
   136f0:	b	1368c <main@@Base+0x7f4>
   136f4:	andeq	sp, r0, pc, asr #31
   136f8:	andeq	sp, r0, pc, lsr #31
   136fc:	andeq	lr, r0, sp
   13700:	sub	r1, r1, #1
   13704:	cmp	r1, #3
   13708:	bhi	13738 <main@@Base+0x8a0>
   1370c:	add	r2, pc, #4
   13710:	ldr	r1, [r2, r1, lsl #2]
   13714:	add	pc, r2, r1
   13718:	andeq	r0, r0, r0, lsl r0
   1371c:	andeq	r0, r0, r0, lsr r0
   13720:	andeq	r0, r0, r0, asr #32
   13724:	andeq	r0, r0, r0, asr r0
   13728:	ldr	r1, [pc, #72]	; 13778 <main@@Base+0x8e0>
   1372c:	mov	r2, #7
   13730:	add	r1, pc, r1
   13734:	b	162a8 <flatcc_json_printer_enum@@Base>
   13738:	ldr	r1, [pc, #72]	; 13788 <main@@Base+0x8f0>
   1373c:	mov	r2, #4
   13740:	add	r1, pc, r1
   13744:	b	162a8 <flatcc_json_printer_enum@@Base>
   13748:	ldr	r1, [pc, #44]	; 1377c <main@@Base+0x8e4>
   1374c:	mov	r2, #23
   13750:	add	r1, pc, r1
   13754:	b	162a8 <flatcc_json_printer_enum@@Base>
   13758:	ldr	r1, [pc, #32]	; 13780 <main@@Base+0x8e8>
   1375c:	mov	r2, #8
   13760:	add	r1, pc, r1
   13764:	b	162a8 <flatcc_json_printer_enum@@Base>
   13768:	ldr	r1, [pc, #20]	; 13784 <main@@Base+0x8ec>
   1376c:	mov	r2, #3
   13770:	add	r1, pc, r1
   13774:	b	162a8 <flatcc_json_printer_enum@@Base>
   13778:	andeq	sp, r0, r6, ror #30
   1377c:	andeq	sp, r0, lr, asr #30
   13780:	andeq	sp, r0, r6, asr pc
   13784:	andeq	sp, r0, pc, asr #30
   13788:	andeq	sp, r0, r3, lsl #31
   1378c:	ldrb	r2, [r1, #8]
   13790:	sub	r2, r2, #1
   13794:	uxtb	r3, r2
   13798:	cmp	r3, #3
   1379c:	bxhi	lr
   137a0:	ldr	r3, [pc, #12]	; 137b4 <main@@Base+0x91c>
   137a4:	sxtb	r2, r2
   137a8:	add	r3, pc, r3
   137ac:	ldr	r2, [r3, r2, lsl #2]
   137b0:	b	1fc08 <flatcc_json_printer_union_table@@Base>
   137b4:	andeq	pc, r1, r0, asr #14
   137b8:	push	{r4, r5, r6, sl, fp, lr}
   137bc:	add	fp, sp, #16
   137c0:	sub	sp, sp, #8
   137c4:	mov	r5, r0
   137c8:	ldr	r0, [pc, #72]	; 13818 <main@@Base+0x980>
   137cc:	mov	r4, r1
   137d0:	mov	r6, #1
   137d4:	mov	r1, #0
   137d8:	mov	r3, #0
   137dc:	mov	r2, r4
   137e0:	add	r0, pc, r0
   137e4:	stm	sp, {r0, r6}
   137e8:	mov	r0, r5
   137ec:	bl	181a8 <flatcc_json_printer_int16_struct_field@@Base>
   137f0:	ldr	r0, [pc, #36]	; 1381c <main@@Base+0x984>
   137f4:	mov	r1, #1
   137f8:	mov	r2, r4
   137fc:	mov	r3, #2
   13800:	add	r0, pc, r0
   13804:	stm	sp, {r0, r6}
   13808:	mov	r0, r5
   1380c:	bl	1807c <flatcc_json_printer_int8_struct_field@@Base>
   13810:	sub	sp, fp, #16
   13814:	pop	{r4, r5, r6, sl, fp, pc}
   13818:			; <UNDEFINED> instruction: 0x0000ddbd
   1381c:	andeq	sp, r0, r1, asr #30
   13820:	push	{r4, r5, r6, sl, fp, lr}
   13824:	add	fp, sp, #16
   13828:	sub	sp, sp, #16
   1382c:	mov	r5, r0
   13830:	mov	r0, #2
   13834:	mov	r2, #0
   13838:	mov	r4, r1
   1383c:	mov	r6, #0
   13840:	str	r0, [sp]
   13844:	mov	r0, r5
   13848:	ldr	r3, [pc, #84]	; 138a4 <main@@Base+0xa0c>
   1384c:	add	r3, pc, r3
   13850:	bl	16494 <flatcc_json_printer_string_field@@Base>
   13854:	mov	r0, #3
   13858:	str	r6, [sp, #8]
   1385c:	str	r6, [sp, #12]
   13860:	mov	r1, r4
   13864:	mov	r2, #1
   13868:	str	r0, [sp]
   1386c:	mov	r0, r5
   13870:	ldr	r3, [pc, #48]	; 138a8 <main@@Base+0xa10>
   13874:	add	r3, pc, r3
   13878:	bl	17040 <flatcc_json_printer_int64_field@@Base>
   1387c:	mov	r0, #5
   13880:	mov	r1, r4
   13884:	mov	r2, #2
   13888:	stm	sp, {r0, r6}
   1388c:	mov	r0, r5
   13890:	ldr	r3, [pc, #20]	; 138ac <main@@Base+0xa14>
   13894:	add	r3, pc, r3
   13898:	bl	16a7c <flatcc_json_printer_uint16_field@@Base>
   1389c:	sub	sp, fp, #16
   138a0:	pop	{r4, r5, r6, sl, fp, pc}
   138a4:	andeq	sp, r0, ip, ror #31
   138a8:	andeq	sp, r0, r7, asr #31
   138ac:	andeq	sp, r0, fp, lsr #31
   138b0:	push	{r4, r5, fp, lr}
   138b4:	add	fp, sp, #8
   138b8:	sub	sp, sp, #8
   138bc:	mov	r4, r1
   138c0:	ldr	r1, [pc, #84]	; 1391c <main@@Base+0xa84>
   138c4:	mov	r5, r0
   138c8:	mov	r0, #2
   138cc:	mov	r3, #0
   138d0:	str	r0, [sp, #4]
   138d4:	mov	r0, r5
   138d8:	mov	r2, r4
   138dc:	add	r1, pc, r1
   138e0:	str	r1, [sp]
   138e4:	mov	r1, #0
   138e8:	bl	17fbc <flatcc_json_printer_uint32_struct_field@@Base>
   138ec:	ldr	r1, [pc, #44]	; 13920 <main@@Base+0xa88>
   138f0:	mov	r0, #8
   138f4:	mov	r2, r4
   138f8:	mov	r3, #4
   138fc:	str	r0, [sp, #4]
   13900:	mov	r0, r5
   13904:	add	r1, pc, r1
   13908:	str	r1, [sp]
   1390c:	mov	r1, #1
   13910:	bl	17fbc <flatcc_json_printer_uint32_struct_field@@Base>
   13914:	sub	sp, fp, #8
   13918:	pop	{r4, r5, fp, pc}
   1391c:	andeq	sp, r0, ip, asr pc
   13920:	andeq	sp, r0, r1, asr #30
   13924:	bx	lr
   13928:	push	{r4, r5, r6, sl, fp, lr}
   1392c:	add	fp, sp, #16
   13930:	sub	sp, sp, #8
   13934:	mov	r5, r0
   13938:	mov	r0, #4
   1393c:	mov	r6, #0
   13940:	mov	r2, #0
   13944:	mov	r4, r1
   13948:	stm	sp, {r0, r6}
   1394c:	mov	r0, r5
   13950:	ldr	r3, [pc, #84]	; 139ac <main@@Base+0xb14>
   13954:	add	r3, pc, r3
   13958:	bl	16720 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   1395c:	mov	r0, #1
   13960:	mov	r1, #7
   13964:	mov	r2, #1
   13968:	str	r1, [sp]
   1396c:	str	r0, [sp, #4]
   13970:	mov	r0, r5
   13974:	mov	r1, r4
   13978:	ldr	r3, [pc, #48]	; 139b0 <main@@Base+0xb18>
   1397c:	add	r3, pc, r3
   13980:	bl	16720 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13984:	mov	r0, #6
   13988:	mov	r1, r4
   1398c:	mov	r2, #2
   13990:	stm	sp, {r0, r6}
   13994:	mov	r0, r5
   13998:	ldr	r3, [pc, #20]	; 139b4 <main@@Base+0xb1c>
   1399c:	add	r3, pc, r3
   139a0:	bl	16720 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   139a4:	sub	sp, fp, #16
   139a8:	pop	{r4, r5, r6, sl, fp, pc}
   139ac:	andeq	sp, r0, r1, lsr #30
   139b0:	ldrdeq	sp, [r0], -r2
   139b4:			; <UNDEFINED> instruction: 0x0000deba
   139b8:	push	{r4, r5, r6, r7, fp, lr}
   139bc:	add	fp, sp, #16
   139c0:	sub	sp, sp, #16
   139c4:	ldr	r7, [pc, #144]	; 13a5c <main@@Base+0xbc4>
   139c8:	mov	r5, r0
   139cc:	mov	r0, #5
   139d0:	mov	r6, #2
   139d4:	mov	r2, #0
   139d8:	mov	r4, r1
   139dc:	add	r7, pc, r7
   139e0:	stm	sp, {r0, r6, r7}
   139e4:	mov	r0, r5
   139e8:	ldr	r3, [pc, #112]	; 13a60 <main@@Base+0xbc8>
   139ec:	add	r3, pc, r3
   139f0:	bl	17844 <flatcc_json_printer_int8_enum_field@@Base>
   139f4:	mov	r0, #6
   139f8:	mov	r1, r4
   139fc:	mov	r2, #1
   13a00:	stm	sp, {r0, r6, r7}
   13a04:	mov	r0, r5
   13a08:	ldr	r3, [pc, #84]	; 13a64 <main@@Base+0xbcc>
   13a0c:	add	r3, pc, r3
   13a10:	bl	17844 <flatcc_json_printer_int8_enum_field@@Base>
   13a14:	str	r6, [sp]
   13a18:	str	r6, [sp, #4]
   13a1c:	mov	r0, r5
   13a20:	mov	r1, r4
   13a24:	mov	r2, #2
   13a28:	ldr	r3, [pc, #56]	; 13a68 <main@@Base+0xbd0>
   13a2c:	add	r3, pc, r3
   13a30:	bl	16914 <flatcc_json_printer_uint8_field@@Base>
   13a34:	mov	r0, #3
   13a38:	mov	r1, r4
   13a3c:	mov	r2, #3
   13a40:	stm	sp, {r0, r6}
   13a44:	mov	r0, r5
   13a48:	ldr	r3, [pc, #28]	; 13a6c <main@@Base+0xbd4>
   13a4c:	add	r3, pc, r3
   13a50:	bl	16914 <flatcc_json_printer_uint8_field@@Base>
   13a54:	sub	sp, fp, #16
   13a58:	pop	{r4, r5, r6, r7, fp, pc}
   13a5c:			; <UNDEFINED> instruction: 0xfffffc38
   13a60:	strdeq	sp, [r0], -pc	; <UNPREDICTABLE>
   13a64:			; <UNDEFINED> instruction: 0x0000dcbc
   13a68:	andeq	sp, r0, r3, lsr #25
   13a6c:	andeq	sp, r0, r6, lsl #25
   13a70:	bx	lr
   13a74:	push	{r4, r5, fp, lr}
   13a78:	add	fp, sp, #8
   13a7c:	sub	sp, sp, #16
   13a80:	mov	r5, r0
   13a84:	ldr	r0, [pc, #148]	; 13b20 <main@@Base+0xc88>
   13a88:	mov	r4, r1
   13a8c:	mov	r1, #6
   13a90:	mov	r2, #0
   13a94:	str	r1, [sp]
   13a98:	mov	r1, r4
   13a9c:	add	r0, pc, r0
   13aa0:	str	r0, [sp, #4]
   13aa4:	mov	r0, r5
   13aa8:	ldr	r3, [pc, #116]	; 13b24 <main@@Base+0xc8c>
   13aac:	add	r3, pc, r3
   13ab0:	bl	1f514 <flatcc_json_printer_table_field@@Base>
   13ab4:	ldr	r0, [pc, #108]	; 13b28 <main@@Base+0xc90>
   13ab8:	mov	r1, #5
   13abc:	mov	r2, #1
   13ac0:	str	r1, [sp]
   13ac4:	mov	r1, r4
   13ac8:	add	r0, pc, r0
   13acc:	str	r0, [sp, #4]
   13ad0:	mov	r0, r5
   13ad4:	ldr	r3, [pc, #80]	; 13b2c <main@@Base+0xc94>
   13ad8:	add	r3, pc, r3
   13adc:	bl	1f514 <flatcc_json_printer_table_field@@Base>
   13ae0:	ldr	r0, [pc, #72]	; 13b30 <main@@Base+0xc98>
   13ae4:	ldr	r1, [pc, #72]	; 13b34 <main@@Base+0xc9c>
   13ae8:	mov	r2, #7
   13aec:	str	r2, [sp]
   13af0:	mov	r2, #3
   13af4:	add	r0, pc, r0
   13af8:	add	r1, pc, r1
   13afc:	str	r1, [sp, #4]
   13b00:	str	r0, [sp, #8]
   13b04:	mov	r0, r5
   13b08:	mov	r1, r4
   13b0c:	ldr	r3, [pc, #36]	; 13b38 <main@@Base+0xca0>
   13b10:	add	r3, pc, r3
   13b14:	bl	1f144 <flatcc_json_printer_union_vector_field@@Base>
   13b18:	sub	sp, fp, #8
   13b1c:	pop	{r4, r5, fp, pc}
   13b20:	muleq	r0, r8, r0
   13b24:	andeq	sp, r0, sl, lsr #24
   13b28:	andeq	r0, r0, r0, lsr #2
   13b2c:	andeq	sp, r0, r5, lsl #24
   13b30:			; <UNDEFINED> instruction: 0xfffffc90
   13b34:			; <UNDEFINED> instruction: 0xfffffc00
   13b38:	ldrdeq	sp, [r0], -r3
   13b3c:	push	{r4, r5, r6, sl, fp, lr}
   13b40:	add	fp, sp, #16
   13b44:	sub	sp, sp, #8
   13b48:	mov	r5, r0
   13b4c:	ldr	r0, [pc, #132]	; 13bd8 <main@@Base+0xd40>
   13b50:	mov	r4, r1
   13b54:	mov	r1, #21
   13b58:	mov	r2, #0
   13b5c:	str	r1, [sp]
   13b60:	mov	r1, r4
   13b64:	add	r0, pc, r0
   13b68:	str	r0, [sp, #4]
   13b6c:	mov	r0, r5
   13b70:	ldr	r3, [pc, #100]	; 13bdc <main@@Base+0xd44>
   13b74:	add	r3, pc, r3
   13b78:	bl	1f514 <flatcc_json_printer_table_field@@Base>
   13b7c:	ldr	r0, [pc, #92]	; 13be0 <main@@Base+0xd48>
   13b80:	mov	r6, #22
   13b84:	mov	r1, r4
   13b88:	mov	r2, #1
   13b8c:	str	r6, [sp]
   13b90:	add	r0, pc, r0
   13b94:	str	r0, [sp, #4]
   13b98:	mov	r0, r5
   13b9c:	ldr	r3, [pc, #64]	; 13be4 <main@@Base+0xd4c>
   13ba0:	add	r3, pc, r3
   13ba4:	bl	1f514 <flatcc_json_printer_table_field@@Base>
   13ba8:	ldr	r0, [pc, #56]	; 13be8 <main@@Base+0xd50>
   13bac:	str	r6, [sp]
   13bb0:	mov	r1, r4
   13bb4:	mov	r2, #2
   13bb8:	add	r0, pc, r0
   13bbc:	str	r0, [sp, #4]
   13bc0:	mov	r0, r5
   13bc4:	ldr	r3, [pc, #32]	; 13bec <main@@Base+0xd54>
   13bc8:	add	r3, pc, r3
   13bcc:	bl	1f514 <flatcc_json_printer_table_field@@Base>
   13bd0:	sub	sp, fp, #16
   13bd4:	pop	{r4, r5, r6, sl, fp, pc}
   13bd8:	andeq	r0, r0, r4, lsl #3
   13bdc:	andeq	sp, r0, r7, ror fp
   13be0:	andeq	r0, r0, r0, asr #5
   13be4:	andeq	sp, r0, r1, ror #22
   13be8:	andeq	r0, r0, r4, lsl #6
   13bec:	andeq	sp, r0, r0, asr fp
   13bf0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13bf4:	add	fp, sp, #24
   13bf8:	sub	sp, sp, #16
   13bfc:	ldr	r6, [pc, #208]	; 13cd4 <main@@Base+0xe3c>
   13c00:	ldr	r7, [pc, #208]	; 13cd8 <main@@Base+0xe40>
   13c04:	mov	r5, r0
   13c08:	mov	r0, #14
   13c0c:	mov	r2, #1
   13c10:	mov	r4, r1
   13c14:	add	r6, pc, r6
   13c18:	add	r7, pc, r7
   13c1c:	stm	sp, {r0, r7}
   13c20:	mov	r0, r5
   13c24:	str	r6, [sp, #8]
   13c28:	ldr	r3, [pc, #172]	; 13cdc <main@@Base+0xe44>
   13c2c:	add	r3, pc, r3
   13c30:	bl	1f700 <flatcc_json_printer_union_field@@Base>
   13c34:	mov	r8, #10
   13c38:	str	r7, [sp, #4]
   13c3c:	str	r6, [sp, #8]
   13c40:	mov	r0, r5
   13c44:	mov	r1, r4
   13c48:	mov	r2, #3
   13c4c:	str	r8, [sp]
   13c50:	ldr	r3, [pc, #136]	; 13ce0 <main@@Base+0xe48>
   13c54:	add	r3, pc, r3
   13c58:	bl	1f700 <flatcc_json_printer_union_field@@Base>
   13c5c:	mov	r0, #9
   13c60:	mov	r1, r4
   13c64:	mov	r2, #5
   13c68:	mov	r9, #5
   13c6c:	stm	sp, {r0, r7}
   13c70:	str	r6, [sp, #8]
   13c74:	mov	r0, r5
   13c78:	ldr	r3, [pc, #100]	; 13ce4 <main@@Base+0xe4c>
   13c7c:	add	r3, pc, r3
   13c80:	bl	1f700 <flatcc_json_printer_union_field@@Base>
   13c84:	str	r9, [sp]
   13c88:	str	r7, [sp, #4]
   13c8c:	str	r6, [sp, #8]
   13c90:	mov	r0, r5
   13c94:	mov	r1, r4
   13c98:	mov	r2, #7
   13c9c:	ldr	r3, [pc, #68]	; 13ce8 <main@@Base+0xe50>
   13ca0:	add	r3, pc, r3
   13ca4:	bl	1f700 <flatcc_json_printer_union_field@@Base>
   13ca8:	str	r8, [sp]
   13cac:	str	r7, [sp, #4]
   13cb0:	str	r6, [sp, #8]
   13cb4:	mov	r0, r5
   13cb8:	mov	r1, r4
   13cbc:	mov	r2, #9
   13cc0:	ldr	r3, [pc, #36]	; 13cec <main@@Base+0xe54>
   13cc4:	add	r3, pc, r3
   13cc8:	bl	1f144 <flatcc_json_printer_union_vector_field@@Base>
   13ccc:	sub	sp, fp, #24
   13cd0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13cd4:	andeq	r0, r0, r8, ror #7
   13cd8:	andeq	r0, r0, r0, lsl r3
   13cdc:	andeq	sp, r0, r2, lsl #23
   13ce0:	andeq	sp, r0, r9, ror #22
   13ce4:	andeq	sp, r0, ip, asr #22
   13ce8:	andeq	sp, r0, r2, lsr fp
   13cec:	andeq	sp, r0, r4, lsl fp
   13cf0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13cf4:	add	fp, sp, #24
   13cf8:	sub	sp, sp, #16
   13cfc:	mov	r9, #4
   13d00:	mov	r2, #0
   13d04:	mov	r4, r1
   13d08:	mov	r5, r0
   13d0c:	mov	r6, #0
   13d10:	str	r9, [sp]
   13d14:	ldr	r3, [pc, #280]	; 13e34 <main@@Base+0xf9c>
   13d18:	add	r3, pc, r3
   13d1c:	bl	16494 <flatcc_json_printer_string_field@@Base>
   13d20:	mov	r8, #9
   13d24:	str	r6, [sp, #4]
   13d28:	mov	r0, r5
   13d2c:	mov	r1, r4
   13d30:	mov	r2, #1
   13d34:	str	r8, [sp]
   13d38:	ldr	r3, [pc, #248]	; 13e38 <main@@Base+0xfa0>
   13d3c:	add	r3, pc, r3
   13d40:	bl	16b40 <flatcc_json_printer_uint32_field@@Base>
   13d44:	str	r9, [sp]
   13d48:	mov	r0, r5
   13d4c:	mov	r1, r4
   13d50:	mov	r2, #2
   13d54:	ldr	r3, [pc, #224]	; 13e3c <main@@Base+0xfa4>
   13d58:	add	r3, pc, r3
   13d5c:	bl	16494 <flatcc_json_printer_string_field@@Base>
   13d60:	mov	r7, #8
   13d64:	str	r6, [sp, #8]
   13d68:	str	r6, [sp, #12]
   13d6c:	mov	r0, r5
   13d70:	mov	r1, r4
   13d74:	mov	r2, #3
   13d78:	str	r7, [sp]
   13d7c:	ldr	r3, [pc, #188]	; 13e40 <main@@Base+0xfa8>
   13d80:	add	r3, pc, r3
   13d84:	bl	17040 <flatcc_json_printer_int64_field@@Base>
   13d88:	str	r9, [sp]
   13d8c:	mov	r0, r5
   13d90:	mov	r1, r4
   13d94:	mov	r2, #4
   13d98:	ldr	r3, [pc, #164]	; 13e44 <main@@Base+0xfac>
   13d9c:	add	r3, pc, r3
   13da0:	bl	16494 <flatcc_json_printer_string_field@@Base>
   13da4:	str	r6, [sp, #8]
   13da8:	str	r6, [sp, #12]
   13dac:	str	r7, [sp]
   13db0:	mov	r0, r5
   13db4:	mov	r1, r4
   13db8:	mov	r2, #5
   13dbc:	ldr	r3, [pc, #132]	; 13e48 <main@@Base+0xfb0>
   13dc0:	add	r3, pc, r3
   13dc4:	bl	17040 <flatcc_json_printer_int64_field@@Base>
   13dc8:	str	r8, [sp]
   13dcc:	str	r6, [sp, #4]
   13dd0:	mov	r0, r5
   13dd4:	mov	r1, r4
   13dd8:	mov	r2, #6
   13ddc:	ldr	r3, [pc, #104]	; 13e4c <main@@Base+0xfb4>
   13de0:	add	r3, pc, r3
   13de4:	bl	16b40 <flatcc_json_printer_uint32_field@@Base>
   13de8:	str	r6, [sp, #8]
   13dec:	str	r6, [sp, #12]
   13df0:	str	r7, [sp]
   13df4:	mov	r0, r5
   13df8:	mov	r1, r4
   13dfc:	mov	r2, #7
   13e00:	ldr	r3, [pc, #72]	; 13e50 <main@@Base+0xfb8>
   13e04:	add	r3, pc, r3
   13e08:	bl	17040 <flatcc_json_printer_int64_field@@Base>
   13e0c:	str	r8, [sp]
   13e10:	str	r6, [sp, #4]
   13e14:	mov	r0, r5
   13e18:	mov	r1, r4
   13e1c:	mov	r2, #8
   13e20:	ldr	r3, [pc, #44]	; 13e54 <main@@Base+0xfbc>
   13e24:	add	r3, pc, r3
   13e28:	bl	16b40 <flatcc_json_printer_uint32_field@@Base>
   13e2c:	sub	sp, fp, #24
   13e30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13e34:	andeq	sp, r0, r7, lsl sl
   13e38:	strdeq	sp, [r0], -r8
   13e3c:	andeq	sp, r0, r6, ror #19
   13e40:	andeq	sp, r0, r3, asr #19
   13e44:			; <UNDEFINED> instruction: 0x0000d9b0
   13e48:	muleq	r0, r1, r9
   13e4c:	andeq	sp, r0, sl, ror r9
   13e50:	andeq	sp, r0, r0, ror #18
   13e54:	andeq	sp, r0, r9, asr #18
   13e58:	push	{r4, r5, r6, sl, fp, lr}
   13e5c:	add	fp, sp, #16
   13e60:	sub	sp, sp, #16
   13e64:	mov	r6, #0
   13e68:	mov	r5, r0
   13e6c:	mov	r0, #15
   13e70:	mov	r2, #0
   13e74:	mov	r4, r1
   13e78:	str	r0, [sp]
   13e7c:	str	r6, [sp, #8]
   13e80:	str	r6, [sp, #12]
   13e84:	mov	r0, r5
   13e88:	ldr	r3, [pc, #44]	; 13ebc <main@@Base+0x1024>
   13e8c:	add	r3, pc, r3
   13e90:	bl	17040 <flatcc_json_printer_int64_field@@Base>
   13e94:	mov	r0, #16
   13e98:	mov	r1, r4
   13e9c:	mov	r2, #1
   13ea0:	stm	sp, {r0, r6}
   13ea4:	mov	r0, r5
   13ea8:	ldr	r3, [pc, #16]	; 13ec0 <main@@Base+0x1028>
   13eac:	add	r3, pc, r3
   13eb0:	bl	16b40 <flatcc_json_printer_uint32_field@@Base>
   13eb4:	sub	sp, fp, #16
   13eb8:	pop	{r4, r5, r6, sl, fp, pc}
   13ebc:	andeq	sp, r0, fp, ror #17
   13ec0:	ldrdeq	sp, [r0], -fp
   13ec4:	push	{r4, r5, r6, sl, fp, lr}
   13ec8:	add	fp, sp, #16
   13ecc:	sub	sp, sp, #16
   13ed0:	mov	r6, #0
   13ed4:	mov	r5, r0
   13ed8:	mov	r0, #15
   13edc:	mov	r2, #0
   13ee0:	mov	r4, r1
   13ee4:	str	r0, [sp]
   13ee8:	str	r6, [sp, #8]
   13eec:	str	r6, [sp, #12]
   13ef0:	mov	r0, r5
   13ef4:	ldr	r3, [pc, #44]	; 13f28 <main@@Base+0x1090>
   13ef8:	add	r3, pc, r3
   13efc:	bl	17040 <flatcc_json_printer_int64_field@@Base>
   13f00:	mov	r0, #21
   13f04:	mov	r1, r4
   13f08:	mov	r2, #1
   13f0c:	stm	sp, {r0, r6}
   13f10:	mov	r0, r5
   13f14:	ldr	r3, [pc, #16]	; 13f2c <main@@Base+0x1094>
   13f18:	add	r3, pc, r3
   13f1c:	bl	16b40 <flatcc_json_printer_uint32_field@@Base>
   13f20:	sub	sp, fp, #16
   13f24:	pop	{r4, r5, r6, sl, fp, pc}
   13f28:	andeq	sp, r0, pc, ror r8
   13f2c:	andeq	sp, r0, r0, lsl #17
   13f30:	sub	r2, r1, #2
   13f34:	cmp	r2, #9
   13f38:	bhi	13f80 <main@@Base+0x10e8>
   13f3c:	add	r1, pc, #4
   13f40:	ldr	r2, [r1, r2, lsl #2]
   13f44:	add	pc, r1, r2
   13f48:	andeq	r0, r0, r8, lsr #32
   13f4c:	andeq	r0, r0, r0, asr r0
   13f50:	andeq	r0, r0, r0, asr r0
   13f54:	andeq	r0, r0, r0, asr r0
   13f58:	andeq	r0, r0, r0, asr r0
   13f5c:	andeq	r0, r0, r0, asr r0
   13f60:	andeq	r0, r0, r0, rrx
   13f64:	andeq	r0, r0, r0, ror r0
   13f68:	andeq	r0, r0, r0, lsl #1
   13f6c:	muleq	r0, r0, r0
   13f70:	ldr	r1, [pc, #116]	; 13fec <main@@Base+0x1154>
   13f74:	mov	r2, #5
   13f78:	add	r1, pc, r1
   13f7c:	b	162a8 <flatcc_json_printer_enum@@Base>
   13f80:	cmp	r1, #255	; 0xff
   13f84:	bne	13f98 <main@@Base+0x1100>
   13f88:	ldr	r1, [pc, #88]	; 13fe8 <main@@Base+0x1150>
   13f8c:	mov	r2, #6
   13f90:	add	r1, pc, r1
   13f94:	b	162a8 <flatcc_json_printer_enum@@Base>
   13f98:	ldr	r1, [pc, #96]	; 14000 <main@@Base+0x1168>
   13f9c:	mov	r2, #4
   13fa0:	add	r1, pc, r1
   13fa4:	b	162a8 <flatcc_json_printer_enum@@Base>
   13fa8:	ldr	r1, [pc, #64]	; 13ff0 <main@@Base+0x1158>
   13fac:	mov	r2, #8
   13fb0:	add	r1, pc, r1
   13fb4:	b	162a8 <flatcc_json_printer_enum@@Base>
   13fb8:	ldr	r1, [pc, #52]	; 13ff4 <main@@Base+0x115c>
   13fbc:	mov	r2, #5
   13fc0:	add	r1, pc, r1
   13fc4:	b	162a8 <flatcc_json_printer_enum@@Base>
   13fc8:	ldr	r1, [pc, #40]	; 13ff8 <main@@Base+0x1160>
   13fcc:	mov	r2, #7
   13fd0:	add	r1, pc, r1
   13fd4:	b	162a8 <flatcc_json_printer_enum@@Base>
   13fd8:	ldr	r1, [pc, #28]	; 13ffc <main@@Base+0x1164>
   13fdc:	mov	r2, #5
   13fe0:	add	r1, pc, r1
   13fe4:	b	162a8 <flatcc_json_printer_enum@@Base>
   13fe8:	andeq	sp, r0, r6, ror r8
   13fec:	andeq	sp, r0, fp, ror #16
   13ff0:	andeq	sp, r0, r9, lsr r8
   13ff4:	andeq	sp, r0, r2, lsr r8
   13ff8:	andeq	sp, r0, r8, lsr #16
   13ffc:	andeq	sp, r0, r0, lsr #16
   14000:	andeq	sp, r0, r3, lsr #14
   14004:	ldrb	r3, [r1, #8]
   14008:	sub	r2, r3, #2
   1400c:	cmp	r2, #9
   14010:	bhi	14054 <main@@Base+0x11bc>
   14014:	add	r3, pc, #4
   14018:	ldr	r2, [r3, r2, lsl #2]
   1401c:	add	pc, r3, r2
   14020:	andeq	r0, r0, r0, asr #32
   14024:	andeq	r0, r0, r8, asr r0
   14028:	andeq	r0, r0, r8, asr r0
   1402c:	andeq	r0, r0, r8, asr r0
   14030:	andeq	r0, r0, r8, asr r0
   14034:	andeq	r0, r0, r8, asr r0
   14038:	andeq	r0, r0, ip, asr #32
   1403c:	andeq	r0, r0, r8, lsr #32
   14040:	andeq	r0, r0, r8, lsr #32
   14044:	andeq	r0, r0, ip, lsr r0
   14048:	ldr	r2, [pc, #52]	; 14084 <main@@Base+0x11ec>
   1404c:	add	r2, pc, r2
   14050:	b	1fd88 <flatcc_json_printer_union_struct@@Base>
   14054:	cmp	r3, #255	; 0xff
   14058:	bxne	lr
   1405c:	b	1fea8 <flatcc_json_printer_union_string@@Base>
   14060:	ldr	r2, [pc, #20]	; 1407c <main@@Base+0x11e4>
   14064:	add	r2, pc, r2
   14068:	b	1fc08 <flatcc_json_printer_union_table@@Base>
   1406c:	ldr	r2, [pc, #12]	; 14080 <main@@Base+0x11e8>
   14070:	add	r2, pc, r2
   14074:	b	1fd88 <flatcc_json_printer_union_struct@@Base>
   14078:	bx	lr
   1407c:	andeq	r0, r0, ip, lsl r0
   14080:	andeq	r0, r0, r8, asr #32
   14084:	andeq	r0, r0, r8, lsr #1
   14088:	push	{fp, lr}
   1408c:	mov	fp, sp
   14090:	sub	sp, sp, #8
   14094:	mov	r2, #0
   14098:	mov	r3, #19
   1409c:	str	r2, [sp, #4]
   140a0:	str	r3, [sp]
   140a4:	mov	r2, #0
   140a8:	ldr	r3, [pc, #12]	; 140bc <main@@Base+0x1224>
   140ac:	add	r3, pc, r3
   140b0:	bl	16f64 <flatcc_json_printer_int32_field@@Base>
   140b4:	mov	sp, fp
   140b8:	pop	{fp, pc}
   140bc:	andeq	sp, r0, r1, ror #14
   140c0:	push	{fp, lr}
   140c4:	mov	fp, sp
   140c8:	sub	sp, sp, #8
   140cc:	ldr	r3, [pc, #36]	; 140f8 <main@@Base+0x1260>
   140d0:	mov	r2, r1
   140d4:	mov	r1, #11
   140d8:	str	r1, [sp, #4]
   140dc:	mov	r1, #0
   140e0:	add	r3, pc, r3
   140e4:	str	r3, [sp]
   140e8:	mov	r3, #0
   140ec:	bl	17f5c <flatcc_json_printer_uint16_struct_field@@Base>
   140f0:	mov	sp, fp
   140f4:	pop	{fp, pc}
   140f8:	andeq	sp, r0, r1, asr #14
   140fc:	push	{fp, lr}
   14100:	mov	fp, sp
   14104:	sub	sp, sp, #8
   14108:	ldr	r3, [pc, #36]	; 14134 <main@@Base+0x129c>
   1410c:	mov	r2, r1
   14110:	mov	r1, #10
   14114:	str	r1, [sp, #4]
   14118:	mov	r1, #0
   1411c:	add	r3, pc, r3
   14120:	str	r3, [sp]
   14124:	mov	r3, #0
   14128:	bl	18224 <flatcc_json_printer_int32_struct_field@@Base>
   1412c:	mov	sp, fp
   14130:	pop	{fp, pc}
   14134:	andeq	sp, r0, r1, lsl r7

00014138 <flatcc_json_printer_error_string@@Base>:
   14138:	cmp	r0, #3
   1413c:	bhi	14150 <flatcc_json_printer_error_string@@Base+0x18>
   14140:	ldr	r1, [pc, #20]	; 1415c <flatcc_json_printer_error_string@@Base+0x24>
   14144:	add	r1, pc, r1
   14148:	ldr	r0, [r1, r0, lsl #2]
   1414c:	bx	lr
   14150:	ldr	r0, [pc, #8]	; 14160 <flatcc_json_printer_error_string@@Base+0x28>
   14154:	add	r0, pc, r0
   14158:	bx	lr
   1415c:			; <UNDEFINED> instruction: 0x0001edb4
   14160:	andeq	sp, r0, fp, ror #16

00014164 <flatcc_json_printer_fmt_float@@Base>:
   14164:	vcvt.f64.f32	d0, s0
   14168:	b	14170 <flatcc_json_printer_fmt_float@@Base+0xc>
   1416c:	nop	{0}
   14170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14174:	add	fp, sp, #28
   14178:	sub	sp, sp, #92	; 0x5c
   1417c:	cmp	r0, #0
   14180:	beq	14ff4 <flatcc_json_printer_fmt_float@@Base+0xe90>
   14184:	vmov	r3, r2, d0
   14188:	mov	ip, r0
   1418c:	mov	r0, #-2147483648	; 0x80000000
   14190:	mov	r6, #0
   14194:	orr	r1, r0, #266338304	; 0xfe00000
   14198:	orr	r1, r1, #1879048192	; 0x70000000
   1419c:	lsl	r7, r2, #1
   141a0:	subs	r6, r6, r3, lsl #1
   141a4:	orr	r7, r7, r3, lsr #31
   141a8:	sbcs	r1, r1, r7
   141ac:	bcs	141c8 <flatcc_json_printer_fmt_float@@Base+0x64>
   141b0:	ldr	r1, [pc, #3796]	; 1508c <flatcc_json_printer_fmt_float@@Base+0xf28>
   141b4:	mov	r0, ip
   141b8:	add	r1, pc, r1
   141bc:	sub	sp, fp, #28
   141c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141c4:	b	12960 <sprintf@plt>
   141c8:	cmn	r2, #1
   141cc:	ble	141d8 <flatcc_json_printer_fmt_float@@Base+0x74>
   141d0:	mov	r5, ip
   141d4:	b	141ec <flatcc_json_printer_fmt_float@@Base+0x88>
   141d8:	vneg.f64	d0, d0
   141dc:	mov	r1, #45	; 0x2d
   141e0:	mov	r5, ip
   141e4:	eor	r2, r2, r0
   141e8:	strb	r1, [r5], #1
   141ec:	movw	r0, #0
   141f0:	movt	r0, #32752	; 0x7ff0
   141f4:	eor	r1, r2, r0
   141f8:	orrs	r1, r3, r1
   141fc:	beq	1421c <flatcc_json_printer_fmt_float@@Base+0xb8>
   14200:	orrs	r1, r3, r2
   14204:	bne	14234 <flatcc_json_printer_fmt_float@@Base+0xd0>
   14208:	mov	r0, #48	; 0x30
   1420c:	strh	r0, [r5], -ip
   14210:	add	r0, r5, #1
   14214:	sub	sp, fp, #28
   14218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1421c:	movw	r0, #28265	; 0x6e69
   14220:	movt	r0, #102	; 0x66
   14224:	str	r0, [r5], -ip
   14228:	add	r0, r5, #3
   1422c:	sub	sp, fp, #28
   14230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14234:	vmov	lr, r9, d0
   14238:	str	r5, [fp, #-32]	; 0xffffffe0
   1423c:	ands	r1, r9, r0
   14240:	bfc	r9, #20, #12
   14244:	str	r1, [fp, #-40]	; 0xffffffd8
   14248:	beq	14260 <flatcc_json_printer_fmt_float@@Base+0xfc>
   1424c:	movw	r0, #64461	; 0xfbcd
   14250:	orr	r4, r9, #1048576	; 0x100000
   14254:	movt	r0, #65535	; 0xffff
   14258:	add	r3, r0, r1, lsr #20
   1425c:	b	14274 <flatcc_json_printer_fmt_float@@Base+0x110>
   14260:	orrs	r0, lr, r9
   14264:	beq	15054 <flatcc_json_printer_fmt_float@@Base+0xef0>
   14268:	movw	r3, #64462	; 0xfbce
   1426c:	mov	r4, r9
   14270:	movt	r3, #65535	; 0xffff
   14274:	mov	r0, lr
   14278:	mov	r2, r4
   1427c:	mov	r7, r3
   14280:	lsl	r1, r2, #10
   14284:	sub	r7, r7, #10
   14288:	orr	r2, r1, r0, lsr #22
   1428c:	lsl	r0, r0, #10
   14290:	cmp	r2, #4194304	; 0x400000
   14294:	bcc	14280 <flatcc_json_printer_fmt_float@@Base+0x11c>
   14298:	mvn	r5, #0
   1429c:	cmp	r2, #0
   142a0:	bmi	142c8 <flatcc_json_printer_fmt_float@@Base+0x164>
   142a4:	lsl	r1, r2, #1
   142a8:	sub	r7, r7, #1
   142ac:	orr	r2, r1, r0, lsr #31
   142b0:	lsl	r1, r0, #1
   142b4:	subs	r0, r5, r0, lsl #1
   142b8:	sbcs	r0, r5, r2
   142bc:	mov	r0, r1
   142c0:	blt	142a4 <flatcc_json_printer_fmt_float@@Base+0x140>
   142c4:	b	142cc <flatcc_json_printer_fmt_float@@Base+0x168>
   142c8:	mov	r1, r0
   142cc:	lsl	r6, r4, #1
   142d0:	mov	r0, #1
   142d4:	sub	sl, r3, #1
   142d8:	str	r4, [fp, #-44]	; 0xffffffd4
   142dc:	str	r3, [fp, #-36]	; 0xffffffdc
   142e0:	orr	r8, r6, lr, lsr #31
   142e4:	mov	r6, #0
   142e8:	orr	r0, r0, lr, lsl #1
   142ec:	cmp	r6, r8, lsr #22
   142f0:	bne	14318 <flatcc_json_printer_fmt_float@@Base+0x1b4>
   142f4:	mov	r6, r8
   142f8:	mov	r4, sl
   142fc:	lsl	r3, r6, #10
   14300:	sub	r4, r4, #10
   14304:	orr	r6, r3, r0, lsr #22
   14308:	lsl	r0, r0, #10
   1430c:	cmp	r6, #4194304	; 0x400000
   14310:	bcc	142fc <flatcc_json_printer_fmt_float@@Base+0x198>
   14314:	b	14320 <flatcc_json_printer_fmt_float@@Base+0x1bc>
   14318:	mov	r4, sl
   1431c:	mov	r6, r8
   14320:	subs	r3, r5, r0
   14324:	str	ip, [sp, #44]	; 0x2c
   14328:	sbcs	r3, r5, r6
   1432c:	bge	14354 <flatcc_json_printer_fmt_float@@Base+0x1f0>
   14330:	lsl	r3, r6, #1
   14334:	lsl	ip, r0, #1
   14338:	sub	r4, r4, #1
   1433c:	orr	r6, r3, r0, lsr #31
   14340:	subs	r0, r5, r0, lsl #1
   14344:	sbcs	r0, r5, r6
   14348:	mov	r0, ip
   1434c:	blt	14330 <flatcc_json_printer_fmt_float@@Base+0x1cc>
   14350:	b	14358 <flatcc_json_printer_fmt_float@@Base+0x1f4>
   14354:	mov	ip, r0
   14358:	vcmpe.f64	d0, #0.0
   1435c:	vmrs	APSR_nzcv, fpscr
   14360:	ble	15034 <flatcc_json_printer_fmt_float@@Base+0xed0>
   14364:	vldr	d16, [pc, #748]	; 14658 <flatcc_json_printer_fmt_float@@Base+0x4f4>
   14368:	vcmpe.f64	d0, d16
   1436c:	vmrs	APSR_nzcv, fpscr
   14370:	bhi	15034 <flatcc_json_printer_fmt_float@@Base+0xed0>
   14374:	ldr	r5, [fp, #-40]	; 0xffffffd8
   14378:	orrs	r3, lr, r9
   1437c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14380:	vldr	d16, [pc, #728]	; 14660 <flatcc_json_printer_fmt_float@@Base+0x4fc>
   14384:	movwne	r3, #1
   14388:	clz	r5, r5
   1438c:	lsl	r0, r0, #2
   14390:	lsr	r5, r5, #5
   14394:	orrs	r3, r3, r5
   14398:	mvn	r5, #60	; 0x3c
   1439c:	sub	r5, r5, r7
   143a0:	orreq	r8, r0, lr, lsr #30
   143a4:	lsl	r0, lr, #2
   143a8:	lslne	r0, lr, #1
   143ac:	vmov	s2, r5
   143b0:	subs	r5, r0, #1
   143b4:	sbc	lr, r8, #0
   143b8:	cmp	r3, #0
   143bc:	vcvt.f64.s32	d17, s2
   143c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   143c4:	subeq	sl, r0, #2
   143c8:	vmul.f64	d16, d17, d16
   143cc:	sub	r3, sl, r4
   143d0:	rsb	r0, r3, #32
   143d4:	lsl	sl, r5, r3
   143d8:	lsr	r0, r5, r0
   143dc:	orr	r0, r0, lr, lsl r3
   143e0:	subs	lr, r3, #32
   143e4:	lslpl	r0, r5, lr
   143e8:	movwpl	sl, #0
   143ec:	vcvt.s32.f64	s2, d16
   143f0:	vcmpe.f64	d16, #0.0
   143f4:	str	r0, [fp, #-36]	; 0xffffffdc
   143f8:	vmrs	APSR_nzcv, fpscr
   143fc:	vmov	r5, s2
   14400:	bmi	14418 <flatcc_json_printer_fmt_float@@Base+0x2b4>
   14404:	vcvt.f64.s32	d17, s2
   14408:	vsub.f64	d16, d16, d17
   1440c:	vcmp.f64	d16, #0.0
   14410:	vmrs	APSR_nzcv, fpscr
   14414:	addne	r5, r5, #1
   14418:	movw	r0, #347	; 0x15b
   1441c:	bic	r1, r1, #1
   14420:	add	r0, r5, r0
   14424:	asr	r5, r0, #31
   14428:	add	r0, r0, r5, lsr #29
   1442c:	mvn	r5, #14
   14430:	and	r0, r5, r0, lsl #1
   14434:	ldr	r5, [pc, #3128]	; 15074 <flatcc_json_printer_fmt_float@@Base+0xf10>
   14438:	add	r5, pc, r5
   1443c:	add	r0, r0, r5
   14440:	ldrd	r8, [r0, #16]
   14444:	str	r0, [sp, #48]	; 0x30
   14448:	umull	r0, r5, r9, ip
   1444c:	str	r0, [fp, #-40]	; 0xffffffd8
   14450:	umull	r0, lr, r8, r6
   14454:	umaal	lr, r5, r9, r6
   14458:	umull	r6, r3, r8, ip
   1445c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   14460:	adds	r0, r0, r3
   14464:	mov	r3, #0
   14468:	adc	r3, r3, #0
   1446c:	adds	r0, r0, r6
   14470:	adc	r3, r3, #0
   14474:	adds	r0, r0, #-2147483648	; 0x80000000
   14478:	adcs	r0, lr, r3
   1447c:	adc	r3, r5, #0
   14480:	adds	r0, r0, #1
   14484:	str	r0, [sp, #52]	; 0x34
   14488:	adc	ip, r3, #0
   1448c:	umull	r0, r3, r9, sl
   14490:	str	r0, [fp, #-40]	; 0xffffffd8
   14494:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14498:	umull	lr, r5, r8, r0
   1449c:	umaal	r5, r3, r9, r0
   144a0:	umull	r0, r6, r8, sl
   144a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144a8:	adds	sl, lr, r6
   144ac:	mov	r6, #0
   144b0:	mov	lr, ip
   144b4:	adc	r6, r6, #0
   144b8:	adds	r0, sl, r0
   144bc:	adc	r6, r6, #0
   144c0:	adds	r0, r0, #-2147483648	; 0x80000000
   144c4:	adcs	r0, r5, r6
   144c8:	umull	r6, r5, r9, r1
   144cc:	adc	r3, r3, #0
   144d0:	subs	ip, r0, #1
   144d4:	sbc	sl, r3, #0
   144d8:	umull	r0, r3, r8, r2
   144dc:	umaal	r3, r5, r9, r2
   144e0:	umull	r1, r2, r8, r1
   144e4:	mov	r1, #0
   144e8:	ldr	r8, [sp, #52]	; 0x34
   144ec:	str	r1, [sp, #56]	; 0x38
   144f0:	mov	r1, #0
   144f4:	adds	r0, r0, r2
   144f8:	bic	r2, r6, #1
   144fc:	adc	r1, r1, #0
   14500:	adds	r0, r0, r2
   14504:	adc	r1, r1, #0
   14508:	adds	r0, r0, #-2147483648	; 0x80000000
   1450c:	adcs	r0, r3, r1
   14510:	str	r0, [sp, #32]
   14514:	adc	r0, r5, #0
   14518:	subs	r9, r8, ip
   1451c:	str	r0, [sp, #36]	; 0x24
   14520:	sbcs	r0, lr, sl
   14524:	str	r0, [fp, #-36]	; 0xffffffdc
   14528:	bcc	15014 <flatcc_json_printer_fmt_float@@Base+0xeb0>
   1452c:	ldr	r0, [sp, #48]	; 0x30
   14530:	ldrsh	r0, [r0, #24]
   14534:	add	r0, r0, #64	; 0x40
   14538:	add	r1, r0, r4
   1453c:	add	r2, r0, r7
   14540:	movw	r7, #1233	; 0x4d1
   14544:	str	r1, [sp, #28]
   14548:	mvn	r1, #31
   1454c:	str	r2, [sp, #24]
   14550:	rsb	ip, r2, #0
   14554:	add	r3, r2, #32
   14558:	subs	r5, r1, r2
   1455c:	movw	r1, #14609	; 0x3911
   14560:	lsr	r0, r8, ip
   14564:	movt	r1, #1
   14568:	orr	r0, r0, lr, lsl r3
   1456c:	lsrpl	r0, lr, r5
   14570:	mla	r6, r2, r7, r1
   14574:	mov	r1, #1
   14578:	mov	r2, #1
   1457c:	lsr	r3, r2, r3
   14580:	add	r4, r1, r6, asr #12
   14584:	ldr	r1, [pc, #2796]	; 15078 <flatcc_json_printer_fmt_float@@Base+0xf14>
   14588:	add	r1, pc, r1
   1458c:	ldr	r7, [r1, r4, lsl #2]
   14590:	cmp	r7, r0
   14594:	lsl	r7, r2, ip
   14598:	asrhi	r4, r6, #12
   1459c:	cmp	r5, #0
   145a0:	movwpl	r7, #0
   145a4:	lslpl	r3, r2, r5
   145a8:	subs	r5, r7, #1
   145ac:	str	r7, [sp, #60]	; 0x3c
   145b0:	sbc	r6, r3, #0
   145b4:	and	r8, r8, r5
   145b8:	cmp	r4, #0
   145bc:	str	r3, [sp, #20]
   145c0:	str	lr, [sp, #40]	; 0x28
   145c4:	str	ip, [fp, #-40]	; 0xffffffd8
   145c8:	str	r5, [fp, #-44]	; 0xffffffd4
   145cc:	and	r2, lr, r6
   145d0:	str	r6, [fp, #-48]	; 0xffffffd0
   145d4:	ble	14650 <flatcc_json_printer_fmt_float@@Base+0x4ec>
   145d8:	ldr	sl, [r1, r4, lsl #2]
   145dc:	sub	r1, r4, #1
   145e0:	mov	lr, #0
   145e4:	str	r1, [fp, #-52]	; 0xffffffcc
   145e8:	udiv	r1, r0, sl
   145ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   145f0:	subs	r4, ip, #32
   145f4:	mls	r0, r1, sl, r0
   145f8:	add	r6, r1, #48	; 0x30
   145fc:	rsb	r1, ip, #32
   14600:	strb	r6, [r3, lr]
   14604:	lsr	r3, r0, r1
   14608:	lsl	r7, r0, ip
   1460c:	lslpl	r3, r0, r4
   14610:	movwpl	r7, #0
   14614:	adds	r7, r7, r8
   14618:	adc	r3, r3, r2
   1461c:	subs	r5, r7, r9
   14620:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14624:	sbcs	r5, r3, r5
   14628:	bcc	14668 <flatcc_json_printer_fmt_float@@Base+0x504>
   1462c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14630:	cmp	r1, lr
   14634:	beq	147b4 <flatcc_json_printer_fmt_float@@Base+0x650>
   14638:	movw	r1, #52429	; 0xcccd
   1463c:	add	lr, lr, #1
   14640:	movt	r1, #52428	; 0xcccc
   14644:	umull	r1, r3, sl, r1
   14648:	lsr	sl, r3, #3
   1464c:	b	145e8 <flatcc_json_printer_fmt_float@@Base+0x484>
   14650:	mov	r1, r2
   14654:	b	147c8 <flatcc_json_printer_fmt_float@@Base+0x664>
   14658:			; <UNDEFINED> instruction: 0xffffffff
   1465c:	svcvc	0x00efffff
   14660:			; <UNDEFINED> instruction: 0x509f79fe
   14664:	svccc	0x00d34413
   14668:	str	lr, [fp, #-44]	; 0xffffffd4
   1466c:	ldr	r8, [sp, #52]	; 0x34
   14670:	ldr	r0, [sp, #32]
   14674:	subs	r2, r8, r0
   14678:	str	r2, [sp, #60]	; 0x3c
   1467c:	ldr	lr, [sp, #40]	; 0x28
   14680:	ldr	r5, [sp, #36]	; 0x24
   14684:	sbc	r2, lr, r5
   14688:	str	r2, [sp, #56]	; 0x38
   1468c:	ldr	r2, [sp, #28]
   14690:	ldr	ip, [sp, #24]
   14694:	cmp	r2, ip
   14698:	bne	15014 <flatcc_json_printer_fmt_float@@Base+0xeb0>
   1469c:	subs	r0, r8, r0
   146a0:	sbcs	r0, lr, r5
   146a4:	bcc	15014 <flatcc_json_printer_fmt_float@@Base+0xeb0>
   146a8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   146ac:	lsr	lr, sl, r1
   146b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   146b4:	subs	r0, r9, r7
   146b8:	sbc	r2, r5, r3
   146bc:	cmp	r4, #0
   146c0:	lsl	r8, sl, r1
   146c4:	mov	r1, #0
   146c8:	lslpl	lr, sl, r4
   146cc:	movwpl	r8, #0
   146d0:	str	r2, [fp, #-40]	; 0xffffffd8
   146d4:	subs	r5, r0, r8
   146d8:	sbcs	r5, r2, lr
   146dc:	ldr	r5, [sp, #60]	; 0x3c
   146e0:	movwcc	r1, #1
   146e4:	adds	r2, r5, #1
   146e8:	str	r2, [fp, #-48]	; 0xffffffd0
   146ec:	ldr	r4, [sp, #56]	; 0x38
   146f0:	adc	r2, r4, #0
   146f4:	subs	sl, r5, #1
   146f8:	sbc	ip, r4, #0
   146fc:	subs	r4, r7, sl
   14700:	str	r2, [fp, #-56]	; 0xffffffc8
   14704:	sbcs	r4, r3, ip
   14708:	bcs	14aa8 <flatcc_json_printer_fmt_float@@Base+0x944>
   1470c:	subs	r0, r0, r8
   14710:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14714:	sbcs	r0, r0, lr
   14718:	bcc	14aa8 <flatcc_json_printer_fmt_float@@Base+0x944>
   1471c:	adds	r0, r7, r8
   14720:	adc	r4, r3, lr
   14724:	subs	r1, r0, sl
   14728:	sbcs	r1, r4, ip
   1472c:	bcc	14764 <flatcc_json_printer_fmt_float@@Base+0x600>
   14730:	subs	r1, r0, sl
   14734:	mov	r5, lr
   14738:	mov	lr, r8
   1473c:	sbc	r2, r4, ip
   14740:	str	r2, [fp, #-40]	; 0xffffffd8
   14744:	subs	r2, sl, r7
   14748:	sbc	r8, ip, r3
   1474c:	subs	r1, r2, r1
   14750:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14754:	sbcs	r1, r8, r1
   14758:	mov	r8, lr
   1475c:	mov	lr, r5
   14760:	bcc	14aa4 <flatcc_json_printer_fmt_float@@Base+0x940>
   14764:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14768:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1476c:	sub	r6, r6, #1
   14770:	subs	r3, r9, r0
   14774:	strb	r6, [r2, r1]
   14778:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1477c:	sbc	r7, r1, r4
   14780:	subs	r1, r3, r8
   14784:	sbcs	r1, r7, lr
   14788:	mov	r1, #0
   1478c:	movwcc	r1, #1
   14790:	subs	r5, r0, sl
   14794:	sbcs	r5, r4, ip
   14798:	bcs	14ab0 <flatcc_json_printer_fmt_float@@Base+0x94c>
   1479c:	subs	r3, r3, r8
   147a0:	sbcs	r3, r7, lr
   147a4:	mov	r7, r0
   147a8:	mov	r3, r4
   147ac:	bcs	1471c <flatcc_json_printer_fmt_float@@Base+0x5b8>
   147b0:	b	14ab0 <flatcc_json_printer_fmt_float@@Base+0x94c>
   147b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   147b8:	mov	r1, r2
   147bc:	sub	r4, r0, lr
   147c0:	add	r0, lr, #1
   147c4:	str	r0, [sp, #56]	; 0x38
   147c8:	rsb	r0, ip, #32
   147cc:	mov	r3, r1
   147d0:	mov	r5, #0
   147d4:	mov	r1, r8
   147d8:	str	r0, [fp, #-52]	; 0xffffffcc
   147dc:	sub	r0, ip, #32
   147e0:	mov	ip, #1
   147e4:	str	r0, [fp, #-56]	; 0xffffffc8
   147e8:	mov	r0, r9
   147ec:	ldr	lr, [sp, #56]	; 0x38
   147f0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   147f4:	mov	r2, #10
   147f8:	mov	sl, r5
   147fc:	mov	r8, ip
   14800:	add	r6, r6, r6, lsl #2
   14804:	umull	r2, r7, r1, r2
   14808:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1480c:	add	r9, sl, sl, lsl #2
   14810:	lsr	r5, r2, r1
   14814:	mov	r1, r4
   14818:	add	r4, r3, r3, lsl #2
   1481c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14820:	add	r4, r7, r4, lsl #1
   14824:	orr	r7, r5, r4, lsl r3
   14828:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1482c:	cmp	r3, #0
   14830:	lsrpl	r7, r4, r3
   14834:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14838:	add	r7, r7, #48	; 0x30
   1483c:	strb	r7, [r3, lr]
   14840:	mov	r3, #10
   14844:	add	lr, lr, #1
   14848:	umull	ip, r5, ip, r3
   1484c:	umull	r0, r3, r0, r3
   14850:	add	r6, r3, r6, lsl #1
   14854:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14858:	add	r5, r5, r9, lsl #1
   1485c:	and	r3, r4, r3
   14860:	mov	r4, r1
   14864:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14868:	sub	r4, r4, #1
   1486c:	and	r1, r2, r1
   14870:	subs	r2, r1, r0
   14874:	sbcs	r2, r3, r6
   14878:	bcs	147f4 <flatcc_json_printer_fmt_float@@Base+0x690>
   1487c:	str	r1, [fp, #-52]	; 0xffffffcc
   14880:	str	r3, [sp, #16]
   14884:	str	r9, [sp, #12]
   14888:	str	r8, [fp, #-56]	; 0xffffffc8
   1488c:	stmib	sp, {r4, sl}
   14890:	str	r0, [fp, #-40]	; 0xffffffd8
   14894:	str	lr, [sp, #56]	; 0x38
   14898:	ldr	r0, [sp, #28]
   1489c:	ldr	r1, [sp, #24]
   148a0:	ldr	r2, [sp, #52]	; 0x34
   148a4:	ldr	r3, [sp, #36]	; 0x24
   148a8:	ldr	r4, [sp, #32]
   148ac:	cmp	r0, r1
   148b0:	ldr	r0, [sp, #40]	; 0x28
   148b4:	bne	15014 <flatcc_json_printer_fmt_float@@Base+0xeb0>
   148b8:	subs	r1, r2, r4
   148bc:	sbcs	r1, r0, r3
   148c0:	bcc	15014 <flatcc_json_printer_fmt_float@@Base+0xeb0>
   148c4:	subs	r1, r2, r4
   148c8:	sbc	r2, r0, r3
   148cc:	umull	r3, r4, ip, r1
   148d0:	mla	r2, ip, r2, r4
   148d4:	mla	r1, r5, r1, r2
   148d8:	adds	r8, r3, ip
   148dc:	adc	r0, r1, r5
   148e0:	subs	r4, r3, ip
   148e4:	mov	ip, #0
   148e8:	str	r0, [sp, #52]	; 0x34
   148ec:	sbc	r3, r1, r5
   148f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   148f4:	ldr	r9, [fp, #-52]	; 0xffffffcc
   148f8:	ldr	sl, [sp, #16]
   148fc:	ldr	lr, [sp, #20]
   14900:	subs	r1, r0, r9
   14904:	ldr	r0, [sp, #60]	; 0x3c
   14908:	str	r6, [fp, #-36]	; 0xffffffdc
   1490c:	str	r8, [sp, #40]	; 0x28
   14910:	sbc	r2, r6, sl
   14914:	subs	r1, r1, r0
   14918:	sbcs	r1, r2, lr
   1491c:	movwcc	ip, #1
   14920:	cmp	ip, #0
   14924:	bne	149ec <flatcc_json_printer_fmt_float@@Base+0x888>
   14928:	subs	r1, r9, r4
   1492c:	sbcs	r1, sl, r3
   14930:	bcs	149dc <flatcc_json_printer_fmt_float@@Base+0x878>
   14934:	str	r4, [fp, #-44]	; 0xffffffd4
   14938:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1493c:	ldr	r2, [sp, #56]	; 0x38
   14940:	add	r1, r1, r2
   14944:	str	r1, [fp, #-48]	; 0xffffffd0
   14948:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1494c:	ldr	r8, [fp, #-44]	; 0xffffffd4
   14950:	adds	r9, r1, r0
   14954:	mov	r4, r1
   14958:	adc	r2, sl, lr
   1495c:	subs	r1, r9, r8
   14960:	sbcs	r1, r2, r3
   14964:	bcc	14988 <flatcc_json_printer_fmt_float@@Base+0x824>
   14968:	subs	r1, r9, r8
   1496c:	sbc	ip, r2, r3
   14970:	subs	r5, r8, r4
   14974:	sbc	r6, r3, sl
   14978:	subs	r1, r5, r1
   1497c:	sbcs	r1, r6, ip
   14980:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14984:	bcc	149e4 <flatcc_json_printer_fmt_float@@Base+0x880>
   14988:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1498c:	sub	r7, r7, #1
   14990:	mov	ip, #0
   14994:	strb	r7, [r0, #-1]
   14998:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1499c:	subs	r5, r0, r9
   149a0:	ldr	r0, [sp, #60]	; 0x3c
   149a4:	sbc	r1, r6, r2
   149a8:	subs	r6, r5, r0
   149ac:	sbcs	r6, r1, lr
   149b0:	movwcc	ip, #1
   149b4:	subs	r4, r9, r8
   149b8:	sbcs	r4, r2, r3
   149bc:	bcs	149f0 <flatcc_json_printer_fmt_float@@Base+0x88c>
   149c0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   149c4:	subs	r4, r5, r0
   149c8:	mov	sl, r2
   149cc:	sbcs	r1, r1, lr
   149d0:	mov	r1, r9
   149d4:	bcs	14950 <flatcc_json_printer_fmt_float@@Base+0x7ec>
   149d8:	b	149f0 <flatcc_json_printer_fmt_float@@Base+0x88c>
   149dc:	ldr	r9, [fp, #-52]	; 0xffffffcc
   149e0:	b	149ec <flatcc_json_printer_fmt_float@@Base+0x888>
   149e4:	mov	ip, #0
   149e8:	mov	r9, r4
   149ec:	mov	r2, sl
   149f0:	ldr	r5, [sp, #40]	; 0x28
   149f4:	ldr	r3, [sp, #52]	; 0x34
   149f8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   149fc:	subs	r1, r9, r5
   14a00:	sbcs	r1, r2, r3
   14a04:	bcs	14a40 <flatcc_json_printer_fmt_float@@Base+0x8dc>
   14a08:	cmp	ip, #0
   14a0c:	bne	14a40 <flatcc_json_printer_fmt_float@@Base+0x8dc>
   14a10:	adds	r1, r9, r0
   14a14:	adc	r7, r2, lr
   14a18:	subs	r6, r1, r5
   14a1c:	sbcs	r6, r7, r3
   14a20:	bcc	14b30 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   14a24:	subs	r6, r5, r9
   14a28:	sbc	r0, r3, r2
   14a2c:	subs	r1, r1, r5
   14a30:	sbc	r7, r7, r3
   14a34:	subs	r1, r1, r6
   14a38:	sbcs	r1, r7, r0
   14a3c:	bcc	14b30 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   14a40:	mov	r1, #20
   14a44:	ldr	r0, [sp, #12]
   14a48:	umull	r1, r7, r4, r1
   14a4c:	add	r7, r7, r0, lsl #2
   14a50:	subs	r1, r9, r1
   14a54:	sbcs	r1, r2, r7
   14a58:	bcc	14b30 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   14a5c:	mvn	r5, #0
   14a60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14a64:	subs	r1, r5, #39	; 0x27
   14a68:	umull	r7, r6, r4, r1
   14a6c:	sbc	r5, r5, #0
   14a70:	mla	r0, r4, r5, r6
   14a74:	ldr	r6, [sp, #8]
   14a78:	mla	r0, r6, r1, r0
   14a7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14a80:	adds	r1, r7, r1
   14a84:	adc	r0, r0, r3
   14a88:	subs	r1, r1, r9
   14a8c:	sbcs	r0, r0, r2
   14a90:	bcc	14b30 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   14a94:	ldr	r4, [sp, #56]	; 0x38
   14a98:	ldr	r5, [sp, #4]
   14a9c:	sub	r2, r4, #1
   14aa0:	b	14b6c <flatcc_json_printer_fmt_float@@Base+0xa08>
   14aa4:	mov	r1, #0
   14aa8:	mov	r0, r7
   14aac:	mov	r4, r3
   14ab0:	ldr	r6, [fp, #-48]	; 0xffffffd0
   14ab4:	ldr	r5, [fp, #-56]	; 0xffffffc8
   14ab8:	subs	r3, r0, r6
   14abc:	sbcs	r3, r4, r5
   14ac0:	bcs	14b0c <flatcc_json_printer_fmt_float@@Base+0x9a8>
   14ac4:	cmp	r1, #0
   14ac8:	bne	14b0c <flatcc_json_printer_fmt_float@@Base+0x9a8>
   14acc:	adds	r1, r0, r8
   14ad0:	adc	r3, r4, lr
   14ad4:	subs	r7, r1, r6
   14ad8:	sbcs	r7, r3, r5
   14adc:	bcc	14b30 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   14ae0:	subs	r1, r1, r6
   14ae4:	sbc	r3, r3, r5
   14ae8:	subs	r7, r6, r0
   14aec:	sbc	r6, r5, r4
   14af0:	subs	r5, r0, #2
   14af4:	sbcs	r5, r4, #0
   14af8:	bcc	14b30 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   14afc:	subs	r1, r1, r7
   14b00:	sbcs	r1, r3, r6
   14b04:	bcs	14b18 <flatcc_json_printer_fmt_float@@Base+0x9b4>
   14b08:	b	14b30 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   14b0c:	subs	r1, r0, #2
   14b10:	sbcs	r1, r4, #0
   14b14:	bcc	14b30 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   14b18:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14b1c:	subs	r1, r9, #4
   14b20:	sbc	r2, r2, #0
   14b24:	subs	r0, r1, r0
   14b28:	sbcs	r0, r2, r4
   14b2c:	bcs	14b5c <flatcc_json_printer_fmt_float@@Base+0x9f8>
   14b30:	ldr	r1, [pc, #1348]	; 1507c <flatcc_json_printer_fmt_float@@Base+0xf18>
   14b34:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14b38:	vmov	r2, r3, d0
   14b3c:	add	r1, pc, r1
   14b40:	mov	r0, r4
   14b44:	bl	12960 <sprintf@plt>
   14b48:	ldr	r1, [sp, #44]	; 0x2c
   14b4c:	sub	r1, r4, r1
   14b50:	add	r0, r1, r0
   14b54:	sub	sp, fp, #28
   14b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b5c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14b60:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14b64:	sub	r5, r0, r2
   14b68:	add	r4, r2, #1
   14b6c:	ldr	r0, [sp, #48]	; 0x30
   14b70:	cmp	r4, #3
   14b74:	ldrsh	r9, [r0, #26]
   14b78:	sub	r0, r4, #1
   14b7c:	movwlt	r0, #1
   14b80:	sub	r8, r5, r9
   14b84:	rsb	r3, r8, #0
   14b88:	cmp	r0, r3
   14b8c:	movge	r0, r3
   14b90:	cmn	r8, #1
   14b94:	ble	14bbc <flatcc_json_printer_fmt_float@@Base+0xa58>
   14b98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14b9c:	cmp	r8, #3
   14ba0:	bcc	14c78 <flatcc_json_printer_fmt_float@@Base+0xb14>
   14ba4:	add	lr, r4, #1
   14ba8:	mov	r0, #101	; 0x65
   14bac:	add	r9, r1, lr
   14bb0:	strb	r0, [r1, r4]
   14bb4:	mov	sl, r9
   14bb8:	b	14da4 <flatcc_json_printer_fmt_float@@Base+0xc40>
   14bbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14bc0:	cmp	r4, r3
   14bc4:	bgt	14ca4 <flatcc_json_printer_fmt_float@@Base+0xb40>
   14bc8:	add	r6, r8, r4
   14bcc:	cmn	r6, #2
   14bd0:	blt	14ca4 <flatcc_json_printer_fmt_float@@Base+0xb40>
   14bd4:	add	r7, r1, #2
   14bd8:	mvn	r0, r2
   14bdc:	add	r2, r7, r3
   14be0:	add	r0, r2, r0
   14be4:	mov	r2, r4
   14be8:	bl	12894 <memmove@plt>
   14bec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14bf0:	movw	r0, #11824	; 0x2e30
   14bf4:	rsb	r6, r6, #2
   14bf8:	cmp	r6, #3
   14bfc:	strh	r0, [r1]
   14c00:	mov	r0, #2
   14c04:	blt	14c6c <flatcc_json_printer_fmt_float@@Base+0xb08>
   14c08:	sub	r0, r9, r5
   14c0c:	mov	r1, #48	; 0x30
   14c10:	sub	r8, r0, r4
   14c14:	mov	r0, r7
   14c18:	mov	r2, r8
   14c1c:	bl	1293c <memset@plt>
   14c20:	mvn	r0, r5
   14c24:	mov	r2, r4
   14c28:	add	r0, r0, r9
   14c2c:	sub	r1, r0, r4
   14c30:	and	r0, r8, #7
   14c34:	cmp	r1, #7
   14c38:	bcc	14c50 <flatcc_json_printer_fmt_float@@Base+0xaec>
   14c3c:	add	r1, r5, r2
   14c40:	add	r1, r1, r0
   14c44:	sub	r1, r1, r9
   14c48:	adds	r1, r1, #8
   14c4c:	bne	14c48 <flatcc_json_printer_fmt_float@@Base+0xae4>
   14c50:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14c54:	cmp	r0, #0
   14c58:	beq	14c64 <flatcc_json_printer_fmt_float@@Base+0xb00>
   14c5c:	subs	r0, r0, #1
   14c60:	bne	14c5c <flatcc_json_printer_fmt_float@@Base+0xaf8>
   14c64:	mov	r0, r6
   14c68:	mov	r4, r2
   14c6c:	ldr	ip, [sp, #44]	; 0x2c
   14c70:	add	r4, r0, r4
   14c74:	b	14eec <flatcc_json_printer_fmt_float@@Base+0xd88>
   14c78:	cmp	r8, #0
   14c7c:	beq	14d44 <flatcc_json_printer_fmt_float@@Base+0xbe0>
   14c80:	add	r0, r1, r4
   14c84:	mov	r1, #48	; 0x30
   14c88:	mov	r2, r8
   14c8c:	bl	1293c <memset@plt>
   14c90:	cmp	r8, #4
   14c94:	bcs	14d4c <flatcc_json_printer_fmt_float@@Base+0xbe8>
   14c98:	ldr	ip, [sp, #44]	; 0x2c
   14c9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14ca0:	b	14edc <flatcc_json_printer_fmt_float@@Base+0xd78>
   14ca4:	cmp	r4, #2
   14ca8:	blt	14d88 <flatcc_json_printer_fmt_float@@Base+0xc24>
   14cac:	ldr	ip, [sp, #44]	; 0x2c
   14cb0:	cmp	r0, #1
   14cb4:	blt	14d0c <flatcc_json_printer_fmt_float@@Base+0xba8>
   14cb8:	and	r7, r0, #1
   14cbc:	mov	r2, #0
   14cc0:	beq	14cf4 <flatcc_json_printer_fmt_float@@Base+0xb90>
   14cc4:	mov	lr, r4
   14cc8:	add	r2, r1, r4
   14ccc:	sub	r6, r7, r0
   14cd0:	mov	r3, #0
   14cd4:	add	r5, r2, r3
   14cd8:	sub	r3, r3, #2
   14cdc:	ldrh	r4, [r5, #-2]
   14ce0:	cmp	r6, r3
   14ce4:	strh	r4, [r5, #-1]
   14ce8:	bne	14cd4 <flatcc_json_printer_fmt_float@@Base+0xb70>
   14cec:	rsb	r2, r3, #0
   14cf0:	mov	r4, lr
   14cf4:	cmp	r7, #0
   14cf8:	beq	14d0c <flatcc_json_printer_fmt_float@@Base+0xba8>
   14cfc:	sub	r3, r4, r2
   14d00:	add	r2, r1, r3
   14d04:	ldrb	r2, [r2, #-1]
   14d08:	strb	r2, [r1, r3]
   14d0c:	sub	r3, r4, r0
   14d10:	mov	r2, #46	; 0x2e
   14d14:	adds	r7, r0, r8
   14d18:	add	r0, r4, #1
   14d1c:	strb	r2, [r1, r3]
   14d20:	beq	14f00 <flatcc_json_printer_fmt_float@@Base+0xd9c>
   14d24:	add	lr, r4, #2
   14d28:	mov	r2, #101	; 0x65
   14d2c:	cmn	r7, #1
   14d30:	add	r8, r1, lr
   14d34:	strb	r2, [r1, r0]
   14d38:	ble	14f08 <flatcc_json_printer_fmt_float@@Base+0xda4>
   14d3c:	mov	r9, r8
   14d40:	b	14f18 <flatcc_json_printer_fmt_float@@Base+0xdb4>
   14d44:	ldr	ip, [sp, #44]	; 0x2c
   14d48:	b	14eec <flatcc_json_printer_fmt_float@@Base+0xd88>
   14d4c:	mov	r0, #0
   14d50:	mov	r1, #1
   14d54:	vdup.32	q8, r0
   14d58:	bic	r0, r8, #3
   14d5c:	sub	r3, r0, #4
   14d60:	add	r2, r1, r3, lsr #2
   14d64:	cmp	r3, #12
   14d68:	and	r7, r2, #3
   14d6c:	vmov.32	d16[0], r4
   14d70:	bcs	14e84 <flatcc_json_printer_fmt_float@@Base+0xd20>
   14d74:	ldr	ip, [sp, #44]	; 0x2c
   14d78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14d7c:	cmp	r7, #0
   14d80:	bne	14ea8 <flatcc_json_printer_fmt_float@@Base+0xd44>
   14d84:	b	14ebc <flatcc_json_printer_fmt_float@@Base+0xd58>
   14d88:	add	lr, r4, #1
   14d8c:	add	r0, r1, r4
   14d90:	movw	r2, #11621	; 0x2d65
   14d94:	mov	r8, r3
   14d98:	add	r9, r1, lr
   14d9c:	strh	r2, [r0]
   14da0:	add	sl, r9, #1
   14da4:	movw	r0, #26215	; 0x6667
   14da8:	mov	r3, sl
   14dac:	movt	r0, #26214	; 0x6666
   14db0:	smmul	r6, r8, r0
   14db4:	asr	r5, r6, #2
   14db8:	add	r7, r5, r6, lsr #31
   14dbc:	add	r6, r7, r7, lsl #2
   14dc0:	sub	r6, r8, r6, lsl #1
   14dc4:	add	r6, r6, #48	; 0x30
   14dc8:	strb	r6, [r3], #1
   14dcc:	add	r6, r8, #9
   14dd0:	mov	r8, r7
   14dd4:	cmp	r6, #18
   14dd8:	bhi	14db0 <flatcc_json_printer_fmt_float@@Base+0xc4c>
   14ddc:	mov	r5, #0
   14de0:	mov	r8, r3
   14de4:	strb	r5, [r8], -sl
   14de8:	cmp	r8, #2
   14dec:	blt	14e70 <flatcc_json_printer_fmt_float@@Base+0xd0c>
   14df0:	add	r0, r8, r8, lsr #31
   14df4:	bic	r4, r8, #1
   14df8:	cmp	r4, #2
   14dfc:	asr	r0, r0, #1
   14e00:	and	ip, r0, #1
   14e04:	beq	14e50 <flatcc_json_printer_fmt_float@@Base+0xcec>
   14e08:	sub	r5, ip, r0
   14e0c:	sub	r4, r3, #2
   14e10:	add	r0, sl, #1
   14e14:	mov	r6, #0
   14e18:	add	r1, r4, r6
   14e1c:	ldrb	r7, [r0, #-1]
   14e20:	ldrb	r2, [r1, #1]
   14e24:	strb	r2, [r0, #-1]
   14e28:	strb	r7, [r1, #1]
   14e2c:	ldrb	r1, [r4, r6]
   14e30:	ldrb	r2, [r0]
   14e34:	strb	r1, [r0]
   14e38:	strb	r2, [r4, r6]
   14e3c:	sub	r6, r6, #2
   14e40:	add	r0, r0, #2
   14e44:	cmp	r5, r6
   14e48:	bne	14e18 <flatcc_json_printer_fmt_float@@Base+0xcb4>
   14e4c:	rsb	r5, r6, #0
   14e50:	cmp	ip, #0
   14e54:	beq	14e70 <flatcc_json_printer_fmt_float@@Base+0xd0c>
   14e58:	mvn	r1, r5
   14e5c:	ldrb	r0, [sl, r5]
   14e60:	add	r1, r8, r1
   14e64:	ldrb	r2, [sl, r1]
   14e68:	strb	r2, [sl, r5]
   14e6c:	strb	r0, [sl, r1]
   14e70:	ldr	ip, [sp, #44]	; 0x2c
   14e74:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14e78:	sub	r0, lr, r9
   14e7c:	add	r4, r0, r3
   14e80:	b	14eec <flatcc_json_printer_fmt_float@@Base+0xd88>
   14e84:	ldr	ip, [sp, #44]	; 0x2c
   14e88:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14e8c:	vmov.i32	q9, #4	; 0x00000004
   14e90:	sub	r2, r7, r2
   14e94:	vadd.i32	q8, q8, q9
   14e98:	adds	r2, r2, #4
   14e9c:	bne	14e94 <flatcc_json_printer_fmt_float@@Base+0xd30>
   14ea0:	cmp	r7, #0
   14ea4:	beq	14ebc <flatcc_json_printer_fmt_float@@Base+0xd58>
   14ea8:	vmov.i32	q9, #1	; 0x00000001
   14eac:	rsb	r2, r7, #0
   14eb0:	vadd.i32	q8, q8, q9
   14eb4:	adds	r2, r2, #1
   14eb8:	bcc	14eb0 <flatcc_json_printer_fmt_float@@Base+0xd4c>
   14ebc:	vext.8	q9, q8, q8, #8
   14ec0:	cmp	r8, r0
   14ec4:	vadd.i32	q8, q8, q9
   14ec8:	vdup.32	q9, d16[1]
   14ecc:	vadd.i32	q8, q8, q9
   14ed0:	vmov.32	r4, d16[0]
   14ed4:	beq	14eec <flatcc_json_printer_fmt_float@@Base+0xd88>
   14ed8:	sub	r8, r8, r0
   14edc:	sub	r8, r8, #1
   14ee0:	add	r4, r4, #1
   14ee4:	cmp	r8, #0
   14ee8:	bgt	14edc <flatcc_json_printer_fmt_float@@Base+0xd78>
   14eec:	mov	r0, #0
   14ef0:	strb	r0, [r1, r4]!
   14ef4:	sub	r0, r1, ip
   14ef8:	sub	sp, fp, #28
   14efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f00:	mov	r4, r0
   14f04:	b	14eec <flatcc_json_printer_fmt_float@@Base+0xd88>
   14f08:	mov	r0, #45	; 0x2d
   14f0c:	mov	r9, r8
   14f10:	rsb	r7, r7, #0
   14f14:	strb	r0, [r9], #1
   14f18:	movw	r0, #26215	; 0x6667
   14f1c:	mov	r3, r9
   14f20:	movt	r0, #26214	; 0x6666
   14f24:	smmul	r6, r7, r0
   14f28:	asr	r5, r6, #2
   14f2c:	add	r6, r5, r6, lsr #31
   14f30:	add	r5, r6, r6, lsl #2
   14f34:	sub	r5, r7, r5, lsl #1
   14f38:	add	r7, r7, #9
   14f3c:	cmp	r7, #18
   14f40:	mov	r7, r6
   14f44:	add	r5, r5, #48	; 0x30
   14f48:	strb	r5, [r3], #1
   14f4c:	bhi	14f24 <flatcc_json_printer_fmt_float@@Base+0xdc0>
   14f50:	mov	r5, #0
   14f54:	mov	sl, r3
   14f58:	strb	r5, [sl], -r9
   14f5c:	cmp	sl, #2
   14f60:	blt	14fe8 <flatcc_json_printer_fmt_float@@Base+0xe84>
   14f64:	add	r0, sl, sl, lsr #31
   14f68:	bic	r4, sl, #1
   14f6c:	cmp	r4, #2
   14f70:	asr	r0, r0, #1
   14f74:	and	ip, r0, #1
   14f78:	beq	14fc4 <flatcc_json_printer_fmt_float@@Base+0xe60>
   14f7c:	sub	r5, ip, r0
   14f80:	sub	r4, r3, #2
   14f84:	add	r0, r9, #1
   14f88:	mov	r6, #0
   14f8c:	add	r1, r4, r6
   14f90:	ldrb	r7, [r0, #-1]
   14f94:	ldrb	r2, [r1, #1]
   14f98:	strb	r2, [r0, #-1]
   14f9c:	strb	r7, [r1, #1]
   14fa0:	ldrb	r1, [r4, r6]
   14fa4:	ldrb	r2, [r0]
   14fa8:	strb	r1, [r0]
   14fac:	strb	r2, [r4, r6]
   14fb0:	sub	r6, r6, #2
   14fb4:	add	r0, r0, #2
   14fb8:	cmp	r5, r6
   14fbc:	bne	14f8c <flatcc_json_printer_fmt_float@@Base+0xe28>
   14fc0:	rsb	r5, r6, #0
   14fc4:	cmp	ip, #0
   14fc8:	ldr	ip, [sp, #44]	; 0x2c
   14fcc:	beq	14fe8 <flatcc_json_printer_fmt_float@@Base+0xe84>
   14fd0:	mvn	r1, r5
   14fd4:	ldrb	r0, [r9, r5]
   14fd8:	add	r1, sl, r1
   14fdc:	ldrb	r2, [r9, r1]
   14fe0:	strb	r2, [r9, r5]
   14fe4:	strb	r0, [r9, r1]
   14fe8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14fec:	sub	r0, lr, r8
   14ff0:	b	14e7c <flatcc_json_printer_fmt_float@@Base+0xd18>
   14ff4:	ldr	r0, [pc, #132]	; 15080 <flatcc_json_printer_fmt_float@@Base+0xf1c>
   14ff8:	ldr	r1, [pc, #132]	; 15084 <flatcc_json_printer_fmt_float@@Base+0xf20>
   14ffc:	ldr	r3, [pc, #132]	; 15088 <flatcc_json_printer_fmt_float@@Base+0xf24>
   15000:	mov	r2, #189	; 0xbd
   15004:	add	r0, pc, r0
   15008:	add	r1, pc, r1
   1500c:	add	r3, pc, r3
   15010:	bl	12990 <__assert_fail@plt>
   15014:	ldr	r0, [pc, #128]	; 1509c <flatcc_json_printer_fmt_float@@Base+0xf38>
   15018:	ldr	r1, [pc, #128]	; 150a0 <flatcc_json_printer_fmt_float@@Base+0xf3c>
   1501c:	ldr	r3, [pc, #128]	; 150a4 <flatcc_json_printer_fmt_float@@Base+0xf40>
   15020:	mov	r2, #239	; 0xef
   15024:	add	r0, pc, r0
   15028:	add	r1, pc, r1
   1502c:	add	r3, pc, r3
   15030:	bl	12990 <__assert_fail@plt>
   15034:	ldr	r0, [pc, #84]	; 15090 <flatcc_json_printer_fmt_float@@Base+0xf2c>
   15038:	ldr	r1, [pc, #84]	; 15094 <flatcc_json_printer_fmt_float@@Base+0xf30>
   1503c:	ldr	r3, [pc, #84]	; 15098 <flatcc_json_printer_fmt_float@@Base+0xf34>
   15040:	mov	r2, #138	; 0x8a
   15044:	add	r0, pc, r0
   15048:	add	r1, pc, r1
   1504c:	add	r3, pc, r3
   15050:	bl	12990 <__assert_fail@plt>
   15054:	ldr	r0, [pc, #76]	; 150a8 <flatcc_json_printer_fmt_float@@Base+0xf44>
   15058:	ldr	r1, [pc, #76]	; 150ac <flatcc_json_printer_fmt_float@@Base+0xf48>
   1505c:	ldr	r3, [pc, #76]	; 150b0 <flatcc_json_printer_fmt_float@@Base+0xf4c>
   15060:	mov	r2, #260	; 0x104
   15064:	add	r0, pc, r0
   15068:	add	r1, pc, r1
   1506c:	add	r3, pc, r3
   15070:	bl	12990 <__assert_fail@plt>
   15074:	muleq	r0, r0, fp
   15078:			; <UNDEFINED> instruction: 0x0000dfb0
   1507c:	strdeq	sp, [r0], -ip
   15080:	andeq	ip, r0, ip, lsl #23
   15084:	andeq	ip, r0, ip, lsl #23
   15088:	strdeq	ip, [r0], -r6
   1508c:	andeq	sp, r0, r2, ror sl
   15090:	strdeq	ip, [r0], -sl
   15094:	andeq	ip, r0, ip, asr #22
   15098:	andeq	ip, r0, r7, lsl ip
   1509c:	andeq	ip, r0, r7, lsl sp
   150a0:	andeq	ip, r0, sp, ror #24
   150a4:	andeq	ip, r0, r8, lsr #26
   150a8:	andeq	ip, r0, r8, lsr #24
   150ac:	andeq	ip, r0, sp, lsr #24
   150b0:	muleq	r0, r6, ip

000150b4 <flatcc_json_printer_fmt_double@@Base>:
   150b4:	b	14170 <flatcc_json_printer_fmt_float@@Base+0xc>

000150b8 <flatcc_json_printer_fmt_bool@@Base>:
   150b8:	cmp	r1, #0
   150bc:	movwne	r1, #29300	; 0x7274
   150c0:	movtne	r1, #25973	; 0x6575
   150c4:	strne	r1, [r0]
   150c8:	movne	r0, #4
   150cc:	bxne	lr
   150d0:	mov	r1, #101	; 0x65
   150d4:	strb	r1, [r0, #4]
   150d8:	movw	r1, #24934	; 0x6166
   150dc:	movt	r1, #29548	; 0x736c
   150e0:	str	r1, [r0]
   150e4:	mov	r0, #5
   150e8:	bx	lr

000150ec <flatcc_json_printer_string@@Base>:
   150ec:	b	150f0 <flatcc_json_printer_string@@Base+0x4>
   150f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150f4:	add	fp, sp, #28
   150f8:	sub	sp, sp, #12
   150fc:	mov	r5, r0
   15100:	mov	r4, r0
   15104:	mov	r6, r1
   15108:	mov	r3, r2
   1510c:	ldr	r0, [r5, #20]!
   15110:	str	r5, [sp, #4]
   15114:	add	r1, r0, #1
   15118:	str	r1, [r5]
   1511c:	mov	r1, #34	; 0x22
   15120:	strb	r1, [r0]
   15124:	b	151ac <flatcc_json_printer_string@@Base+0xc0>
   15128:	ldr	r2, [r5]
   1512c:	mov	r7, #48	; 0x30
   15130:	cmp	r1, #160	; 0xa0
   15134:	add	r3, r2, #1
   15138:	str	r3, [r5]
   1513c:	mov	r3, #117	; 0x75
   15140:	strb	r3, [r2]
   15144:	ldr	r2, [r5]
   15148:	add	r3, r2, #1
   1514c:	str	r3, [r5]
   15150:	strb	r7, [r2]
   15154:	ldr	r2, [r5]
   15158:	add	r3, r2, #1
   1515c:	str	r3, [r5]
   15160:	strb	r7, [r2]
   15164:	ldr	r2, [r5]
   15168:	add	r3, r2, #1
   1516c:	str	r3, [r5]
   15170:	mov	r3, #87	; 0x57
   15174:	movwcc	r3, #48	; 0x30
   15178:	add	r1, r3, r1, lsr #4
   1517c:	mov	r3, #87	; 0x57
   15180:	strb	r1, [r2]
   15184:	ldr	r1, [r5]
   15188:	add	r2, r1, #1
   1518c:	str	r2, [r5]
   15190:	and	r2, sl, #15
   15194:	cmp	r2, #10
   15198:	movwcc	r3, #48	; 0x30
   1519c:	add	r2, r3, r2
   151a0:	strb	r2, [r1]
   151a4:	sub	r3, r0, #1
   151a8:	add	r6, r8, #1
   151ac:	ldrb	sl, [r6]
   151b0:	mov	r8, r6
   151b4:	cmp	sl, #32
   151b8:	bcc	151d8 <flatcc_json_printer_string@@Base+0xec>
   151bc:	uxtb	r0, sl
   151c0:	cmp	r0, #34	; 0x22
   151c4:	cmpne	r0, #92	; 0x5c
   151c8:	beq	151d8 <flatcc_json_printer_string@@Base+0xec>
   151cc:	ldrb	sl, [r8, #1]!
   151d0:	cmp	sl, #31
   151d4:	bhi	151bc <flatcc_json_printer_string@@Base+0xd0>
   151d8:	ldr	r0, [r4, #20]
   151dc:	ldr	r1, [r4, #16]
   151e0:	sub	r9, r8, r6
   151e4:	add	r2, r0, r9
   151e8:	cmp	r2, r1
   151ec:	bcs	1520c <flatcc_json_printer_string@@Base+0x120>
   151f0:	mov	r1, r6
   151f4:	mov	r2, r9
   151f8:	mov	r6, r3
   151fc:	bl	128ac <memcpy@plt>
   15200:	mov	r2, r6
   15204:	mov	r7, r9
   15208:	b	15298 <flatcc_json_printer_string@@Base+0x1ac>
   1520c:	cmp	r0, r1
   15210:	str	r3, [sp, #8]
   15214:	bcc	15230 <flatcc_json_printer_string@@Base+0x144>
   15218:	ldr	r2, [r4, #44]	; 0x2c
   1521c:	mov	r0, r4
   15220:	mov	r1, #0
   15224:	blx	r2
   15228:	ldr	r1, [r4, #16]
   1522c:	ldr	r0, [r4, #20]
   15230:	sub	r5, r1, r0
   15234:	mov	r7, r9
   15238:	cmp	r5, r9
   1523c:	bcs	15284 <flatcc_json_printer_string@@Base+0x198>
   15240:	mov	r1, r6
   15244:	mov	r2, r5
   15248:	bl	128ac <memcpy@plt>
   1524c:	ldr	r0, [r4, #20]
   15250:	ldr	r2, [r4, #44]	; 0x2c
   15254:	mov	r1, #0
   15258:	add	r0, r0, r5
   1525c:	str	r0, [r4, #20]
   15260:	mov	r0, r4
   15264:	blx	r2
   15268:	ldr	r1, [r4, #16]
   1526c:	ldr	r0, [r4, #20]
   15270:	sub	r7, r7, r5
   15274:	add	r6, r6, r5
   15278:	sub	r5, r1, r0
   1527c:	cmp	r7, r5
   15280:	bhi	15240 <flatcc_json_printer_string@@Base+0x154>
   15284:	ldr	r5, [sp, #4]
   15288:	mov	r1, r6
   1528c:	mov	r2, r7
   15290:	bl	128ac <memcpy@plt>
   15294:	ldr	r2, [sp, #8]
   15298:	ldr	r0, [r5]
   1529c:	add	r1, r0, r7
   152a0:	add	r0, r1, #1
   152a4:	str	r0, [r5]
   152a8:	subs	r0, r2, r9
   152ac:	beq	153d8 <flatcc_json_printer_string@@Base+0x2ec>
   152b0:	mov	r2, #92	; 0x5c
   152b4:	strb	r2, [r1]
   152b8:	mvn	r1, #7
   152bc:	uxtab	r2, r1, sl
   152c0:	uxtb	r1, sl
   152c4:	cmp	r2, #26
   152c8:	bhi	15358 <flatcc_json_printer_string@@Base+0x26c>
   152cc:	add	r3, pc, #4
   152d0:	ldr	r2, [r3, r2, lsl #2]
   152d4:	add	pc, r3, r2
   152d8:	andeq	r0, r0, ip, rrx
   152dc:	muleq	r0, ip, r0
   152e0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   152e4:			; <UNDEFINED> instruction: 0xfffffe50
   152e8:	andeq	r0, r0, r4, asr #1
   152ec:	ldrdeq	r0, [r0], -r8
   152f0:			; <UNDEFINED> instruction: 0xfffffe50
   152f4:			; <UNDEFINED> instruction: 0xfffffe50
   152f8:			; <UNDEFINED> instruction: 0xfffffe50
   152fc:			; <UNDEFINED> instruction: 0xfffffe50
   15300:			; <UNDEFINED> instruction: 0xfffffe50
   15304:			; <UNDEFINED> instruction: 0xfffffe50
   15308:			; <UNDEFINED> instruction: 0xfffffe50
   1530c:			; <UNDEFINED> instruction: 0xfffffe50
   15310:			; <UNDEFINED> instruction: 0xfffffe50
   15314:			; <UNDEFINED> instruction: 0xfffffe50
   15318:			; <UNDEFINED> instruction: 0xfffffe50
   1531c:			; <UNDEFINED> instruction: 0xfffffe50
   15320:			; <UNDEFINED> instruction: 0xfffffe50
   15324:			; <UNDEFINED> instruction: 0xfffffe50
   15328:			; <UNDEFINED> instruction: 0xfffffe50
   1532c:			; <UNDEFINED> instruction: 0xfffffe50
   15330:			; <UNDEFINED> instruction: 0xfffffe50
   15334:			; <UNDEFINED> instruction: 0xfffffe50
   15338:			; <UNDEFINED> instruction: 0xfffffe50
   1533c:			; <UNDEFINED> instruction: 0xfffffe50
   15340:	andeq	r0, r0, ip, ror #1
   15344:	ldr	r1, [r5]
   15348:	add	r2, r1, #1
   1534c:	str	r2, [r5]
   15350:	mov	r2, #98	; 0x62
   15354:	b	151a0 <flatcc_json_printer_string@@Base+0xb4>
   15358:	cmp	r1, #92	; 0x5c
   1535c:	bne	15128 <flatcc_json_printer_string@@Base+0x3c>
   15360:	ldr	r1, [r5]
   15364:	add	r2, r1, #1
   15368:	str	r2, [r5]
   1536c:	mov	r2, #92	; 0x5c
   15370:	b	151a0 <flatcc_json_printer_string@@Base+0xb4>
   15374:	ldr	r1, [r5]
   15378:	add	r2, r1, #1
   1537c:	str	r2, [r5]
   15380:	mov	r2, #116	; 0x74
   15384:	b	151a0 <flatcc_json_printer_string@@Base+0xb4>
   15388:	ldr	r1, [r5]
   1538c:	add	r2, r1, #1
   15390:	str	r2, [r5]
   15394:	mov	r2, #110	; 0x6e
   15398:	b	151a0 <flatcc_json_printer_string@@Base+0xb4>
   1539c:	ldr	r1, [r5]
   153a0:	add	r2, r1, #1
   153a4:	str	r2, [r5]
   153a8:	mov	r2, #102	; 0x66
   153ac:	b	151a0 <flatcc_json_printer_string@@Base+0xb4>
   153b0:	ldr	r1, [r5]
   153b4:	add	r2, r1, #1
   153b8:	str	r2, [r5]
   153bc:	mov	r2, #114	; 0x72
   153c0:	b	151a0 <flatcc_json_printer_string@@Base+0xb4>
   153c4:	ldr	r1, [r5]
   153c8:	add	r2, r1, #1
   153cc:	str	r2, [r5]
   153d0:	mov	r2, #34	; 0x22
   153d4:	b	151a0 <flatcc_json_printer_string@@Base+0xb4>
   153d8:	mov	r0, #34	; 0x22
   153dc:	strb	r0, [r1]
   153e0:	sub	sp, fp, #28
   153e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000153e8 <flatcc_json_printer_write@@Base>:
   153e8:	push	{r4, r5, r6, r7, fp, lr}
   153ec:	add	fp, sp, #16
   153f0:	mov	r6, r1
   153f4:	mov	r5, r0
   153f8:	ldr	r1, [r0, #16]
   153fc:	ldr	r0, [r0, #20]
   15400:	mov	r4, r2
   15404:	add	r2, r0, r2
   15408:	cmp	r2, r1
   1540c:	bcc	15480 <flatcc_json_printer_write@@Base+0x98>
   15410:	cmp	r0, r1
   15414:	bcc	15430 <flatcc_json_printer_write@@Base+0x48>
   15418:	ldr	r2, [r5, #44]	; 0x2c
   1541c:	mov	r0, r5
   15420:	mov	r1, #0
   15424:	blx	r2
   15428:	ldr	r1, [r5, #16]
   1542c:	ldr	r0, [r5, #20]
   15430:	sub	r7, r1, r0
   15434:	cmp	r7, r4
   15438:	bcs	15480 <flatcc_json_printer_write@@Base+0x98>
   1543c:	mov	r1, r6
   15440:	mov	r2, r7
   15444:	bl	128ac <memcpy@plt>
   15448:	ldr	r0, [r5, #20]
   1544c:	ldr	r2, [r5, #44]	; 0x2c
   15450:	mov	r1, #0
   15454:	add	r0, r0, r7
   15458:	str	r0, [r5, #20]
   1545c:	mov	r0, r5
   15460:	blx	r2
   15464:	ldr	r1, [r5, #16]
   15468:	ldr	r0, [r5, #20]
   1546c:	sub	r4, r4, r7
   15470:	add	r6, r6, r7
   15474:	sub	r7, r1, r0
   15478:	cmp	r4, r7
   1547c:	bhi	1543c <flatcc_json_printer_write@@Base+0x54>
   15480:	mov	r1, r6
   15484:	mov	r2, r4
   15488:	bl	128ac <memcpy@plt>
   1548c:	ldr	r0, [r5, #20]
   15490:	add	r0, r0, r4
   15494:	str	r0, [r5, #20]
   15498:	pop	{r4, r5, r6, r7, fp, pc}

0001549c <flatcc_json_printer_nl@@Base>:
   1549c:	ldr	r1, [r0, #20]
   154a0:	add	r2, r1, #1
   154a4:	str	r2, [r0, #20]
   154a8:	mov	r2, #10
   154ac:	strb	r2, [r1]
   154b0:	ldr	r1, [r0, #16]
   154b4:	ldr	r2, [r0, #20]
   154b8:	cmp	r2, r1
   154bc:	bxcc	lr
   154c0:	ldr	r2, [r0, #44]	; 0x2c
   154c4:	mov	r1, #0
   154c8:	bx	r2

000154cc <flatcc_json_printer_char@@Base>:
   154cc:	ldr	r2, [r0, #20]
   154d0:	add	r3, r2, #1
   154d4:	str	r3, [r0, #20]
   154d8:	strb	r1, [r2]
   154dc:	bx	lr

000154e0 <flatcc_json_printer_indent@@Base>:
   154e0:	push	{r4, r5, r6, sl, fp, lr}
   154e4:	add	fp, sp, #16
   154e8:	mov	r4, r0
   154ec:	ldr	r1, [r0, #16]
   154f0:	ldr	r0, [r0, #20]
   154f4:	ldrb	r2, [r4, #25]
   154f8:	ldr	r3, [r4, #32]
   154fc:	mla	r6, r3, r2, r0
   15500:	mul	r5, r3, r2
   15504:	cmp	r6, r1
   15508:	bls	15578 <flatcc_json_printer_indent@@Base+0x98>
   1550c:	cmp	r0, r1
   15510:	bcc	1552c <flatcc_json_printer_indent@@Base+0x4c>
   15514:	ldr	r2, [r4, #44]	; 0x2c
   15518:	mov	r0, r4
   1551c:	mov	r1, #0
   15520:	blx	r2
   15524:	ldr	r1, [r4, #16]
   15528:	ldr	r0, [r4, #20]
   1552c:	sub	r6, r1, r0
   15530:	cmp	r6, r5
   15534:	bcs	15578 <flatcc_json_printer_indent@@Base+0x98>
   15538:	mov	r1, #32
   1553c:	mov	r2, r6
   15540:	bl	1293c <memset@plt>
   15544:	ldr	r0, [r4, #20]
   15548:	ldr	r2, [r4, #44]	; 0x2c
   1554c:	mov	r1, #0
   15550:	add	r0, r0, r6
   15554:	str	r0, [r4, #20]
   15558:	mov	r0, r4
   1555c:	blx	r2
   15560:	ldr	r1, [r4, #16]
   15564:	ldr	r0, [r4, #20]
   15568:	sub	r5, r5, r6
   1556c:	sub	r6, r1, r0
   15570:	cmp	r5, r6
   15574:	bhi	15538 <flatcc_json_printer_indent@@Base+0x58>
   15578:	mov	r1, #32
   1557c:	mov	r2, r5
   15580:	bl	1293c <memset@plt>
   15584:	ldr	r0, [r4, #20]
   15588:	add	r0, r0, r5
   1558c:	str	r0, [r4, #20]
   15590:	pop	{r4, r5, r6, sl, fp, pc}

00015594 <flatcc_json_printer_add_level@@Base>:
   15594:	ldr	r2, [r0, #32]
   15598:	add	r1, r2, r1
   1559c:	str	r1, [r0, #32]
   155a0:	bx	lr

000155a4 <flatcc_json_printer_get_level@@Base>:
   155a4:	ldr	r0, [r0, #32]
   155a8:	bx	lr

000155ac <flatcc_json_printer_uint8@@Base>:
   155ac:	push	{fp, lr}
   155b0:	mov	fp, sp
   155b4:	ldr	lr, [r0, #20]
   155b8:	cmp	r1, #100	; 0x64
   155bc:	bcc	1560c <flatcc_json_printer_uint8@@Base+0x60>
   155c0:	mov	r3, #0
   155c4:	strb	r3, [lr, #3]
   155c8:	movw	r3, #34079	; 0x851f
   155cc:	movt	r3, #20971	; 0x51eb
   155d0:	umull	r3, ip, r1, r3
   155d4:	mov	r3, #48	; 0x30
   155d8:	orr	r3, r3, ip, lsr #5
   155dc:	lsr	ip, ip, #5
   155e0:	strb	r3, [lr]
   155e4:	mov	r3, #100	; 0x64
   155e8:	mls	r1, ip, r3, r1
   155ec:	ldr	r3, [pc, #128]	; 15674 <flatcc_json_printer_uint8@@Base+0xc8>
   155f0:	uxtb	r1, r1
   155f4:	add	r3, pc, r3
   155f8:	add	r1, r3, r1, lsl #1
   155fc:	ldrh	r1, [r1]
   15600:	strh	r1, [lr, #1]
   15604:	mov	r1, #3
   15608:	b	15664 <flatcc_json_printer_uint8@@Base+0xb8>
   1560c:	cmp	r1, #10
   15610:	bcc	15650 <flatcc_json_printer_uint8@@Base+0xa4>
   15614:	mov	r3, #0
   15618:	strb	r3, [lr, #2]
   1561c:	movw	r3, #34079	; 0x851f
   15620:	movt	r3, #20971	; 0x51eb
   15624:	umull	r3, r2, r1, r3
   15628:	mov	r3, #100	; 0x64
   1562c:	lsr	r2, r2, #5
   15630:	mls	r1, r2, r3, r1
   15634:	ldr	r2, [pc, #60]	; 15678 <flatcc_json_printer_uint8@@Base+0xcc>
   15638:	add	r2, pc, r2
   1563c:	add	r1, r2, r1, lsl #1
   15640:	ldrh	r1, [r1]
   15644:	strh	r1, [lr]
   15648:	mov	r1, #2
   1564c:	b	15664 <flatcc_json_printer_uint8@@Base+0xb8>
   15650:	mov	r2, #0
   15654:	add	r1, r1, #48	; 0x30
   15658:	strb	r2, [lr, #1]
   1565c:	strb	r1, [lr]
   15660:	mov	r1, #1
   15664:	ldr	r2, [r0, #20]
   15668:	add	r1, r2, r1
   1566c:	str	r1, [r0, #20]
   15670:	pop	{fp, pc}
   15674:	andeq	ip, r0, r6, lsr #15
   15678:	andeq	ip, r0, r2, ror #14

0001567c <flatcc_json_printer_uint16@@Base>:
   1567c:	push	{r4, sl, fp, lr}
   15680:	add	fp, sp, #8
   15684:	mov	r2, r1
   15688:	ldr	r1, [r0, #20]
   1568c:	mov	r4, r0
   15690:	mov	r0, r2
   15694:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   15698:	ldr	r1, [r4, #20]
   1569c:	add	r0, r1, r0
   156a0:	str	r0, [r4, #20]
   156a4:	pop	{r4, sl, fp, pc}
   156a8:	push	{fp, lr}
   156ac:	mov	fp, sp
   156b0:	mov	lr, r0
   156b4:	cmp	r0, #1000	; 0x3e8
   156b8:	bcc	156d0 <flatcc_json_printer_uint16@@Base+0x54>
   156bc:	movw	r3, #9999	; 0x270f
   156c0:	mov	r0, #4
   156c4:	cmp	lr, r3
   156c8:	movwhi	r0, #5
   156cc:	b	156f4 <flatcc_json_printer_uint16@@Base+0x78>
   156d0:	cmp	lr, #100	; 0x64
   156d4:	bcc	156e8 <flatcc_json_printer_uint16@@Base+0x6c>
   156d8:	mov	r0, #0
   156dc:	strb	r0, [r1, #3]!
   156e0:	mov	r0, #3
   156e4:	b	15798 <flatcc_json_printer_uint16@@Base+0x11c>
   156e8:	cmp	lr, #9
   156ec:	mov	r0, #1
   156f0:	movwhi	r0, #2
   156f4:	mov	r3, #0
   156f8:	tst	r0, #1
   156fc:	strb	r3, [r1, r0]!
   15700:	bne	15748 <flatcc_json_printer_uint16@@Base+0xcc>
   15704:	cmp	r0, #2
   15708:	beq	157d8 <flatcc_json_printer_uint16@@Base+0x15c>
   1570c:	cmp	r0, #4
   15710:	popne	{fp, pc}
   15714:	movw	r2, #34079	; 0x851f
   15718:	movt	r2, #20971	; 0x51eb
   1571c:	umull	r2, r3, lr, r2
   15720:	mov	r2, #100	; 0x64
   15724:	lsr	r3, r3, #5
   15728:	mls	r2, r3, r2, lr
   1572c:	uxth	ip, r2
   15730:	ldr	r2, [pc, #232]	; 15820 <flatcc_json_printer_uint16@@Base+0x1a4>
   15734:	add	r2, pc, r2
   15738:	add	r2, r2, ip, lsl #1
   1573c:	ldrh	r2, [r2]
   15740:	strh	r2, [r1, #-2]!
   15744:	b	157dc <flatcc_json_printer_uint16@@Base+0x160>
   15748:	cmp	r0, #1
   1574c:	beq	15810 <flatcc_json_printer_uint16@@Base+0x194>
   15750:	cmp	r0, #3
   15754:	beq	15798 <flatcc_json_printer_uint16@@Base+0x11c>
   15758:	cmp	r0, #5
   1575c:	bne	1580c <flatcc_json_printer_uint16@@Base+0x190>
   15760:	movw	r0, #34079	; 0x851f
   15764:	ldr	r2, [pc, #172]	; 15818 <flatcc_json_printer_uint16@@Base+0x19c>
   15768:	movt	r0, #20971	; 0x51eb
   1576c:	umull	r0, r3, lr, r0
   15770:	mov	r0, #100	; 0x64
   15774:	add	r2, pc, r2
   15778:	lsr	r3, r3, #5
   1577c:	mls	r0, r3, r0, lr
   15780:	mov	lr, r3
   15784:	uxth	r0, r0
   15788:	add	r0, r2, r0, lsl #1
   1578c:	ldrh	r0, [r0]
   15790:	strh	r0, [r1, #-2]!
   15794:	mov	r0, #5
   15798:	movw	r3, #34079	; 0x851f
   1579c:	uxth	ip, lr
   157a0:	movt	r3, #20971	; 0x51eb
   157a4:	umull	r3, r2, ip, r3
   157a8:	lsr	r3, r2, #5
   157ac:	mov	r2, #100	; 0x64
   157b0:	mls	r2, r3, r2, lr
   157b4:	uxth	ip, r2
   157b8:	ldr	r2, [pc, #92]	; 1581c <flatcc_json_printer_uint16@@Base+0x1a0>
   157bc:	add	r2, pc, r2
   157c0:	add	r2, r2, ip, lsl #1
   157c4:	ldrh	r2, [r2]
   157c8:	strh	r2, [r1, #-2]!
   157cc:	add	r2, r3, #48	; 0x30
   157d0:	strb	r2, [r1, #-1]
   157d4:	pop	{fp, pc}
   157d8:	mov	r3, lr
   157dc:	uxth	ip, r3
   157e0:	movw	r3, #34079	; 0x851f
   157e4:	movt	r3, #20971	; 0x51eb
   157e8:	umull	r3, r2, ip, r3
   157ec:	mov	r3, #100	; 0x64
   157f0:	lsr	r2, r2, #5
   157f4:	mls	r2, r2, r3, ip
   157f8:	ldr	r3, [pc, #36]	; 15824 <flatcc_json_printer_uint16@@Base+0x1a8>
   157fc:	add	r3, pc, r3
   15800:	add	r2, r3, r2, lsl #1
   15804:	ldrh	r2, [r2]
   15808:	strh	r2, [r1, #-2]
   1580c:	pop	{fp, pc}
   15810:	mov	r3, lr
   15814:	b	157cc <flatcc_json_printer_uint16@@Base+0x150>
   15818:	andeq	ip, r0, r6, lsr #12
   1581c:	ldrdeq	ip, [r0], -lr
   15820:	andeq	ip, r0, r6, ror #12
   15824:	muleq	r0, lr, r5

00015828 <flatcc_json_printer_uint32@@Base>:
   15828:	push	{r4, sl, fp, lr}
   1582c:	add	fp, sp, #8
   15830:	mov	r2, r1
   15834:	ldr	r1, [r0, #20]
   15838:	mov	r4, r0
   1583c:	mov	r0, r2
   15840:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   15844:	ldr	r1, [r4, #20]
   15848:	add	r0, r1, r0
   1584c:	str	r0, [r4, #20]
   15850:	pop	{r4, sl, fp, pc}
   15854:	push	{fp, lr}
   15858:	mov	fp, sp
   1585c:	mov	lr, r0
   15860:	movw	r0, #10000	; 0x2710
   15864:	cmp	lr, r0
   15868:	bcc	158cc <flatcc_json_printer_uint32@@Base+0xa4>
   1586c:	movw	r0, #38528	; 0x9680
   15870:	movt	r0, #152	; 0x98
   15874:	cmp	lr, r0
   15878:	bcc	158e8 <flatcc_json_printer_uint32@@Base+0xc0>
   1587c:	movw	r0, #51712	; 0xca00
   15880:	movt	r0, #15258	; 0x3b9a
   15884:	cmp	lr, r0
   15888:	bcc	15918 <flatcc_json_printer_uint32@@Base+0xf0>
   1588c:	movw	r0, #34079	; 0x851f
   15890:	ldr	r2, [pc, #700]	; 15b54 <flatcc_json_printer_uint32@@Base+0x32c>
   15894:	movt	r0, #20971	; 0x51eb
   15898:	umull	r0, r3, lr, r0
   1589c:	mov	r0, #100	; 0x64
   158a0:	add	r2, pc, r2
   158a4:	lsr	r3, r3, #5
   158a8:	mls	r0, r3, r0, lr
   158ac:	mov	lr, r3
   158b0:	add	r0, r2, r0, lsl #1
   158b4:	ldrh	r0, [r0]
   158b8:	strh	r0, [r1, #8]!
   158bc:	mov	r0, #0
   158c0:	strb	r0, [r1, #2]
   158c4:	mov	r0, #10
   158c8:	b	15988 <flatcc_json_printer_uint32@@Base+0x160>
   158cc:	cmp	lr, #100	; 0x64
   158d0:	bcc	15908 <flatcc_json_printer_uint32@@Base+0xe0>
   158d4:	lsr	r3, lr, #3
   158d8:	mov	r0, #3
   158dc:	cmp	r3, #124	; 0x7c
   158e0:	movwhi	r0, #4
   158e4:	b	15944 <flatcc_json_printer_uint32@@Base+0x11c>
   158e8:	movw	r0, #16960	; 0x4240
   158ec:	movt	r0, #15
   158f0:	cmp	lr, r0
   158f4:	bcc	15930 <flatcc_json_printer_uint32@@Base+0x108>
   158f8:	mov	r0, #0
   158fc:	strb	r0, [r1, #7]!
   15900:	mov	r0, #7
   15904:	b	15ab8 <flatcc_json_printer_uint32@@Base+0x290>
   15908:	cmp	lr, #9
   1590c:	mov	r0, #1
   15910:	movwhi	r0, #2
   15914:	b	15944 <flatcc_json_printer_uint32@@Base+0x11c>
   15918:	movw	r3, #57599	; 0xe0ff
   1591c:	mov	r0, #8
   15920:	movt	r3, #1525	; 0x5f5
   15924:	cmp	lr, r3
   15928:	movwhi	r0, #9
   1592c:	b	15944 <flatcc_json_printer_uint32@@Base+0x11c>
   15930:	movw	r3, #34463	; 0x869f
   15934:	mov	r0, #5
   15938:	movt	r3, #1
   1593c:	cmp	lr, r3
   15940:	movwhi	r0, #6
   15944:	mov	r3, #0
   15948:	tst	r0, #1
   1594c:	strb	r3, [r1, r0]!
   15950:	bne	15a48 <flatcc_json_printer_uint32@@Base+0x220>
   15954:	sub	r3, r0, #2
   15958:	cmp	r3, #6
   1595c:	bhi	15b50 <flatcc_json_printer_uint32@@Base+0x328>
   15960:	add	r2, pc, #4
   15964:	ldr	r3, [r2, r3, lsl #2]
   15968:	add	pc, r2, r3
   1596c:	andeq	r0, r0, ip, lsr #1
   15970:	andeq	r0, r0, r4, ror #3
   15974:	andeq	r0, r0, ip, ror r0
   15978:	andeq	r0, r0, r4, ror #3
   1597c:	andeq	r0, r0, ip, asr #32
   15980:	andeq	r0, r0, r4, ror #3
   15984:	andeq	r0, r0, ip, lsl r0
   15988:	movw	r2, #34079	; 0x851f
   1598c:	movt	r2, #20971	; 0x51eb
   15990:	umull	r2, r3, lr, r2
   15994:	lsr	r2, r3, #5
   15998:	mov	r3, #100	; 0x64
   1599c:	mls	ip, r2, r3, lr
   159a0:	ldr	r3, [pc, #432]	; 15b58 <flatcc_json_printer_uint32@@Base+0x330>
   159a4:	mov	lr, r2
   159a8:	add	r3, pc, r3
   159ac:	add	r3, r3, ip, lsl #1
   159b0:	ldrh	r3, [r3]
   159b4:	strh	r3, [r1, #-2]!
   159b8:	movw	r2, #34079	; 0x851f
   159bc:	movt	r2, #20971	; 0x51eb
   159c0:	umull	r2, r3, lr, r2
   159c4:	lsr	r2, r3, #5
   159c8:	mov	r3, #100	; 0x64
   159cc:	mls	ip, r2, r3, lr
   159d0:	ldr	r3, [pc, #388]	; 15b5c <flatcc_json_printer_uint32@@Base+0x334>
   159d4:	mov	lr, r2
   159d8:	add	r3, pc, r3
   159dc:	add	r3, r3, ip, lsl #1
   159e0:	ldrh	r3, [r3]
   159e4:	strh	r3, [r1, #-2]!
   159e8:	movw	r2, #34079	; 0x851f
   159ec:	movt	r2, #20971	; 0x51eb
   159f0:	umull	r2, r3, lr, r2
   159f4:	lsr	r2, r3, #5
   159f8:	mov	r3, #100	; 0x64
   159fc:	mls	ip, r2, r3, lr
   15a00:	ldr	r3, [pc, #344]	; 15b60 <flatcc_json_printer_uint32@@Base+0x338>
   15a04:	mov	lr, r2
   15a08:	add	r3, pc, r3
   15a0c:	add	r3, r3, ip, lsl #1
   15a10:	ldrh	r3, [r3]
   15a14:	strh	r3, [r1, #-2]!
   15a18:	movw	r2, #34079	; 0x851f
   15a1c:	movt	r2, #20971	; 0x51eb
   15a20:	umull	r2, r3, lr, r2
   15a24:	lsr	r2, r3, #5
   15a28:	mov	r3, #100	; 0x64
   15a2c:	mls	r2, r2, r3, lr
   15a30:	ldr	r3, [pc, #300]	; 15b64 <flatcc_json_printer_uint32@@Base+0x33c>
   15a34:	add	r3, pc, r3
   15a38:	add	r2, r3, r2, lsl #1
   15a3c:	ldrh	r2, [r2]
   15a40:	strh	r2, [r1, #-2]
   15a44:	pop	{fp, pc}
   15a48:	sub	r3, r0, #1
   15a4c:	cmp	r3, #8
   15a50:	bhi	15b50 <flatcc_json_printer_uint32@@Base+0x328>
   15a54:	add	ip, pc, #4
   15a58:	ldr	r3, [ip, r3, lsl #2]
   15a5c:	add	pc, ip, r3
   15a60:	andeq	r0, r0, r8, ror #1
   15a64:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15a68:	strheq	r0, [r0], -r8
   15a6c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15a70:	andeq	r0, r0, r8, lsl #1
   15a74:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15a78:	andeq	r0, r0, r8, asr r0
   15a7c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15a80:	andeq	r0, r0, r4, lsr #32
   15a84:	movw	r0, #34079	; 0x851f
   15a88:	ldr	r2, [pc, #216]	; 15b68 <flatcc_json_printer_uint32@@Base+0x340>
   15a8c:	movt	r0, #20971	; 0x51eb
   15a90:	umull	r0, r3, lr, r0
   15a94:	mov	r0, #100	; 0x64
   15a98:	add	r2, pc, r2
   15a9c:	lsr	r3, r3, #5
   15aa0:	mls	r0, r3, r0, lr
   15aa4:	mov	lr, r3
   15aa8:	add	r0, r2, r0, lsl #1
   15aac:	ldrh	r0, [r0]
   15ab0:	strh	r0, [r1, #-2]!
   15ab4:	mov	r0, #9
   15ab8:	movw	r3, #34079	; 0x851f
   15abc:	movt	r3, #20971	; 0x51eb
   15ac0:	umull	r3, r2, lr, r3
   15ac4:	mov	r3, #100	; 0x64
   15ac8:	lsr	r2, r2, #5
   15acc:	mls	ip, r2, r3, lr
   15ad0:	ldr	r3, [pc, #148]	; 15b6c <flatcc_json_printer_uint32@@Base+0x344>
   15ad4:	mov	lr, r2
   15ad8:	add	r3, pc, r3
   15adc:	add	r3, r3, ip, lsl #1
   15ae0:	ldrh	r3, [r3]
   15ae4:	strh	r3, [r1, #-2]!
   15ae8:	movw	r2, #34079	; 0x851f
   15aec:	movt	r2, #20971	; 0x51eb
   15af0:	umull	r2, r3, lr, r2
   15af4:	lsr	r2, r3, #5
   15af8:	mov	r3, #100	; 0x64
   15afc:	mls	ip, r2, r3, lr
   15b00:	ldr	r3, [pc, #104]	; 15b70 <flatcc_json_printer_uint32@@Base+0x348>
   15b04:	mov	lr, r2
   15b08:	add	r3, pc, r3
   15b0c:	add	r3, r3, ip, lsl #1
   15b10:	ldrh	r3, [r3]
   15b14:	strh	r3, [r1, #-2]!
   15b18:	movw	r2, #34079	; 0x851f
   15b1c:	movt	r2, #20971	; 0x51eb
   15b20:	umull	r2, r3, lr, r2
   15b24:	lsr	r2, r3, #5
   15b28:	mov	r3, #100	; 0x64
   15b2c:	mls	ip, r2, r3, lr
   15b30:	ldr	r3, [pc, #60]	; 15b74 <flatcc_json_printer_uint32@@Base+0x34c>
   15b34:	mov	lr, r2
   15b38:	add	r3, pc, r3
   15b3c:	add	r3, r3, ip, lsl #1
   15b40:	ldrh	r3, [r3]
   15b44:	strh	r3, [r1, #-2]!
   15b48:	add	r2, lr, #48	; 0x30
   15b4c:	strb	r2, [r1, #-1]
   15b50:	pop	{fp, pc}
   15b54:	strdeq	ip, [r0], -sl
   15b58:	strdeq	ip, [r0], -r2
   15b5c:	andeq	ip, r0, r2, asr #7
   15b60:	muleq	r0, r2, r3
   15b64:	andeq	ip, r0, r6, ror #6
   15b68:	andeq	ip, r0, r2, lsl #6
   15b6c:	andeq	ip, r0, r2, asr #5
   15b70:	muleq	r0, r2, r2
   15b74:	andeq	ip, r0, r2, ror #4

00015b78 <flatcc_json_printer_uint64@@Base>:
   15b78:	push	{r4, sl, fp, lr}
   15b7c:	add	fp, sp, #8
   15b80:	mov	r1, r3
   15b84:	mov	r3, r2
   15b88:	ldr	r2, [r0, #20]
   15b8c:	mov	r4, r0
   15b90:	mov	r0, r3
   15b94:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   15b98:	ldr	r1, [r4, #20]
   15b9c:	add	r0, r1, r0
   15ba0:	str	r0, [r4, #20]
   15ba4:	pop	{r4, sl, fp, pc}
   15ba8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bac:	add	fp, sp, #28
   15bb0:	sub	sp, sp, #4
   15bb4:	mov	r7, r0
   15bb8:	movw	r0, #51711	; 0xc9ff
   15bbc:	mov	r4, r2
   15bc0:	movt	r0, #15258	; 0x3b9a
   15bc4:	subs	r0, r0, r7
   15bc8:	rscs	r0, r1, #0
   15bcc:	bcc	15be4 <flatcc_json_printer_uint64@@Base+0x6c>
   15bd0:	mov	r0, r7
   15bd4:	mov	r1, r4
   15bd8:	sub	sp, fp, #28
   15bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15be0:	b	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   15be4:	ldr	r9, [pc, #1184]	; 1608c <flatcc_json_printer_uint64@@Base+0x514>
   15be8:	mov	r6, r1
   15bec:	movw	r1, #40960	; 0xa000
   15bf0:	movw	r0, #2328	; 0x918
   15bf4:	movt	r1, #20082	; 0x4e72
   15bf8:	subs	r1, r7, r1
   15bfc:	sbcs	r0, r6, r0
   15c00:	add	r9, pc, r9
   15c04:	bcc	15c64 <flatcc_json_printer_uint64@@Base+0xec>
   15c08:	movw	r1, #0
   15c0c:	movw	r0, #34546	; 0x86f2
   15c10:	movt	r1, #28609	; 0x6fc1
   15c14:	movt	r0, #35	; 0x23
   15c18:	subs	r1, r7, r1
   15c1c:	sbcs	r0, r6, r0
   15c20:	bcc	15c94 <flatcc_json_printer_uint64@@Base+0x11c>
   15c24:	movw	r1, #0
   15c28:	movw	r0, #46771	; 0xb6b3
   15c2c:	movt	r1, #42852	; 0xa764
   15c30:	movt	r0, #3552	; 0xde0
   15c34:	subs	r1, r7, r1
   15c38:	sbcs	r0, r6, r0
   15c3c:	bcc	15cdc <flatcc_json_printer_uint64@@Base+0x164>
   15c40:	movw	r1, #65535	; 0xffff
   15c44:	movw	r0, #8964	; 0x2304
   15c48:	mov	r8, #19
   15c4c:	movt	r1, #35303	; 0x89e7
   15c50:	movt	r0, #35527	; 0x8ac7
   15c54:	subs	r1, r1, r7
   15c58:	sbcs	r0, r0, r6
   15c5c:	movwcc	r8, #20
   15c60:	b	15d1c <flatcc_json_printer_uint64@@Base+0x1a4>
   15c64:	movw	r0, #59392	; 0xe800
   15c68:	movt	r0, #18550	; 0x4876
   15c6c:	subs	r0, r7, r0
   15c70:	sbcs	r0, r6, #23
   15c74:	bcc	15cc0 <flatcc_json_printer_uint64@@Base+0x148>
   15c78:	movw	r0, #4095	; 0xfff
   15c7c:	mov	r8, #12
   15c80:	movt	r0, #54437	; 0xd4a5
   15c84:	subs	r0, r0, r7
   15c88:	rscs	r0, r6, #232	; 0xe8
   15c8c:	movwcc	r8, #13
   15c90:	b	15d1c <flatcc_json_printer_uint64@@Base+0x1a4>
   15c94:	movw	r1, #32768	; 0x8000
   15c98:	movw	r0, #36222	; 0x8d7e
   15c9c:	movt	r1, #42182	; 0xa4c6
   15ca0:	movt	r0, #3
   15ca4:	subs	r1, r7, r1
   15ca8:	sbcs	r0, r6, r0
   15cac:	bcc	15d00 <flatcc_json_printer_uint64@@Base+0x188>
   15cb0:	mov	r0, #0
   15cb4:	mov	r8, #16
   15cb8:	strb	r0, [r4, #16]!
   15cbc:	b	15dd0 <flatcc_json_printer_uint64@@Base+0x258>
   15cc0:	movw	r0, #58367	; 0xe3ff
   15cc4:	mov	r8, #10
   15cc8:	movt	r0, #21515	; 0x540b
   15ccc:	subs	r0, r0, r7
   15cd0:	rscs	r0, r6, #2
   15cd4:	movwcc	r8, #11
   15cd8:	b	15d1c <flatcc_json_printer_uint64@@Base+0x1a4>
   15cdc:	movw	r1, #65535	; 0xffff
   15ce0:	movw	r0, #17784	; 0x4578
   15ce4:	mov	r8, #17
   15ce8:	movt	r1, #23945	; 0x5d89
   15cec:	movt	r0, #355	; 0x163
   15cf0:	subs	r1, r1, r7
   15cf4:	sbcs	r0, r0, r6
   15cf8:	movwcc	r8, #18
   15cfc:	b	15d1c <flatcc_json_printer_uint64@@Base+0x1a4>
   15d00:	movw	r1, #16383	; 0x3fff
   15d04:	movw	r0, #23283	; 0x5af3
   15d08:	mov	r8, #14
   15d0c:	movt	r1, #4218	; 0x107a
   15d10:	subs	r1, r1, r7
   15d14:	sbcs	r0, r0, r6
   15d18:	movwcc	r8, #15
   15d1c:	mov	r0, #0
   15d20:	tst	r8, #1
   15d24:	strb	r0, [r4, r8]!
   15d28:	bne	15e94 <flatcc_json_printer_uint64@@Base+0x31c>
   15d2c:	sub	r0, r8, #10
   15d30:	cmp	r0, #10
   15d34:	bhi	15fe4 <flatcc_json_printer_uint64@@Base+0x46c>
   15d38:	add	r1, pc, #4
   15d3c:	ldr	r0, [r1, r0, lsl #2]
   15d40:	add	pc, r1, r0
   15d44:	andeq	r0, r0, ip, lsl r1
   15d48:	andeq	r0, r0, r0, lsr #5
   15d4c:	andeq	r0, r0, ip, ror #1
   15d50:	andeq	r0, r0, r0, lsr #5
   15d54:	strheq	r0, [r0], -ip
   15d58:	andeq	r0, r0, r0, lsr #5
   15d5c:	andeq	r0, r0, ip, lsl #1
   15d60:	andeq	r0, r0, r0, lsr #5
   15d64:	andeq	r0, r0, ip, asr r0
   15d68:	andeq	r0, r0, r0, lsr #5
   15d6c:	andeq	r0, r0, ip, lsr #32
   15d70:	mov	r0, r7
   15d74:	mov	r1, r6
   15d78:	mov	r2, #100	; 0x64
   15d7c:	mov	r3, #0
   15d80:	mov	r5, #100	; 0x64
   15d84:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15d88:	mov	r6, r1
   15d8c:	mls	r1, r0, r5, r7
   15d90:	mov	r7, r0
   15d94:	add	r1, r9, r1, lsl #1
   15d98:	ldrh	r1, [r1]
   15d9c:	strh	r1, [r4, #-2]!
   15da0:	mov	r0, r7
   15da4:	mov	r1, r6
   15da8:	mov	r2, #100	; 0x64
   15dac:	mov	r3, #0
   15db0:	mov	r5, #100	; 0x64
   15db4:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15db8:	mov	r6, r1
   15dbc:	mls	r1, r0, r5, r7
   15dc0:	mov	r7, r0
   15dc4:	add	r1, r9, r1, lsl #1
   15dc8:	ldrh	r1, [r1]
   15dcc:	strh	r1, [r4, #-2]!
   15dd0:	mov	r0, r7
   15dd4:	mov	r1, r6
   15dd8:	mov	r2, #100	; 0x64
   15ddc:	mov	r3, #0
   15de0:	mov	r5, #100	; 0x64
   15de4:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15de8:	mov	r6, r1
   15dec:	mls	r1, r0, r5, r7
   15df0:	mov	r7, r0
   15df4:	add	r1, r9, r1, lsl #1
   15df8:	ldrh	r1, [r1]
   15dfc:	strh	r1, [r4, #-2]!
   15e00:	mov	r0, r7
   15e04:	mov	r1, r6
   15e08:	mov	r2, #100	; 0x64
   15e0c:	mov	r3, #0
   15e10:	mov	r5, #100	; 0x64
   15e14:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15e18:	mov	r6, r1
   15e1c:	mls	r1, r0, r5, r7
   15e20:	mov	r7, r0
   15e24:	add	r1, r9, r1, lsl #1
   15e28:	ldrh	r1, [r1]
   15e2c:	strh	r1, [r4, #-2]!
   15e30:	mov	r0, r7
   15e34:	mov	r1, r6
   15e38:	mov	r2, #100	; 0x64
   15e3c:	mov	r3, #0
   15e40:	mov	r5, #100	; 0x64
   15e44:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15e48:	mov	r6, r1
   15e4c:	mls	r1, r0, r5, r7
   15e50:	mov	r7, r0
   15e54:	add	r1, r9, r1, lsl #1
   15e58:	ldrh	r1, [r1]
   15e5c:	strh	r1, [r4, #-2]!
   15e60:	mov	r0, r7
   15e64:	mov	r1, r6
   15e68:	mov	r2, #100	; 0x64
   15e6c:	mov	r3, #0
   15e70:	mov	r5, #100	; 0x64
   15e74:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15e78:	mov	r6, r1
   15e7c:	mls	r1, r0, r5, r7
   15e80:	mov	r7, r0
   15e84:	add	r1, r9, r1, lsl #1
   15e88:	ldrh	r1, [r1]
   15e8c:	strh	r1, [r4, #-2]!
   15e90:	b	15fe4 <flatcc_json_printer_uint64@@Base+0x46c>
   15e94:	sub	r0, r8, #11
   15e98:	cmp	r0, #8
   15e9c:	bhi	15fe4 <flatcc_json_printer_uint64@@Base+0x46c>
   15ea0:	add	r1, pc, #4
   15ea4:	ldr	r0, [r1, r0, lsl #2]
   15ea8:	add	pc, r1, r0
   15eac:	ldrdeq	r0, [r0], -ip
   15eb0:	andeq	r0, r0, r8, lsr r1
   15eb4:	andeq	r0, r0, ip, lsr #1
   15eb8:	andeq	r0, r0, r8, lsr r1
   15ebc:	andeq	r0, r0, ip, ror r0
   15ec0:	andeq	r0, r0, r8, lsr r1
   15ec4:	andeq	r0, r0, ip, asr #32
   15ec8:	andeq	r0, r0, r8, lsr r1
   15ecc:	andeq	r0, r0, r4, lsr #32
   15ed0:	mov	r0, r7
   15ed4:	mov	r1, r6
   15ed8:	mov	r2, #100	; 0x64
   15edc:	mov	r3, #0
   15ee0:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15ee4:	mov	r7, r0
   15ee8:	add	r0, r9, r2, lsl #1
   15eec:	mov	r6, r1
   15ef0:	ldrh	r0, [r0]
   15ef4:	strh	r0, [r4, #-2]!
   15ef8:	mov	r0, r7
   15efc:	mov	r1, r6
   15f00:	mov	r2, #100	; 0x64
   15f04:	mov	r3, #0
   15f08:	mov	r5, #100	; 0x64
   15f0c:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15f10:	mov	r6, r1
   15f14:	mls	r1, r0, r5, r7
   15f18:	mov	r7, r0
   15f1c:	add	r1, r9, r1, lsl #1
   15f20:	ldrh	r1, [r1]
   15f24:	strh	r1, [r4, #-2]!
   15f28:	mov	r0, r7
   15f2c:	mov	r1, r6
   15f30:	mov	r2, #100	; 0x64
   15f34:	mov	r3, #0
   15f38:	mov	r5, #100	; 0x64
   15f3c:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15f40:	mov	r6, r1
   15f44:	mls	r1, r0, r5, r7
   15f48:	mov	r7, r0
   15f4c:	add	r1, r9, r1, lsl #1
   15f50:	ldrh	r1, [r1]
   15f54:	strh	r1, [r4, #-2]!
   15f58:	mov	r0, r7
   15f5c:	mov	r1, r6
   15f60:	mov	r2, #100	; 0x64
   15f64:	mov	r3, #0
   15f68:	mov	r5, #100	; 0x64
   15f6c:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15f70:	mov	r6, r1
   15f74:	mls	r1, r0, r5, r7
   15f78:	mov	r7, r0
   15f7c:	add	r1, r9, r1, lsl #1
   15f80:	ldrh	r1, [r1]
   15f84:	strh	r1, [r4, #-2]!
   15f88:	mov	r0, r7
   15f8c:	mov	r1, r6
   15f90:	mov	r2, #100	; 0x64
   15f94:	mov	r3, #0
   15f98:	mov	sl, #100	; 0x64
   15f9c:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15fa0:	mov	r2, #10
   15fa4:	mov	r3, #0
   15fa8:	mov	r5, r0
   15fac:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15fb0:	orr	r0, r2, #48	; 0x30
   15fb4:	mov	r1, r6
   15fb8:	mov	r2, #1000	; 0x3e8
   15fbc:	mov	r3, #0
   15fc0:	strb	r0, [r4, #-3]!
   15fc4:	mls	r0, r5, sl, r7
   15fc8:	add	r0, r9, r0, lsl #1
   15fcc:	ldrh	r0, [r0]
   15fd0:	strh	r0, [r4, #1]
   15fd4:	mov	r0, r7
   15fd8:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15fdc:	mov	r7, r0
   15fe0:	mov	r6, r1
   15fe4:	mov	r0, r7
   15fe8:	mov	r1, r6
   15fec:	mov	r2, #100	; 0x64
   15ff0:	mov	r3, #0
   15ff4:	mov	r5, #100	; 0x64
   15ff8:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   15ffc:	mls	r2, r0, r5, r7
   16000:	mov	r3, #0
   16004:	add	r2, r9, r2, lsl #1
   16008:	ldrh	r2, [r2]
   1600c:	strh	r2, [r4, #-2]
   16010:	mov	r2, #100	; 0x64
   16014:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   16018:	add	r0, r9, r2, lsl #1
   1601c:	mov	r1, r6
   16020:	movw	r2, #10000	; 0x2710
   16024:	mov	r3, #0
   16028:	ldrh	r0, [r0]
   1602c:	strh	r0, [r4, #-4]
   16030:	mov	r0, r7
   16034:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   16038:	mov	r2, #100	; 0x64
   1603c:	mov	r3, #0
   16040:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   16044:	add	r0, r9, r2, lsl #1
   16048:	movw	r2, #16960	; 0x4240
   1604c:	mov	r1, r6
   16050:	mov	r3, #0
   16054:	movt	r2, #15
   16058:	ldrh	r0, [r0]
   1605c:	strh	r0, [r4, #-6]
   16060:	mov	r0, r7
   16064:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   16068:	mov	r2, #100	; 0x64
   1606c:	mov	r3, #0
   16070:	bl	210ec <flatcc_json_printer_clear@@Base+0x198>
   16074:	add	r0, r9, r2, lsl #1
   16078:	ldrh	r0, [r0]
   1607c:	strh	r0, [r4, #-8]
   16080:	mov	r0, r8
   16084:	sub	sp, fp, #28
   16088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1608c:	muleq	r0, sl, r1

00016090 <flatcc_json_printer_int8@@Base>:
   16090:	push	{fp, lr}
   16094:	mov	fp, sp
   16098:	ldr	lr, [r0, #20]
   1609c:	cmn	r1, #1
   160a0:	uxtb	ip, r1
   160a4:	movle	r3, #45	; 0x2d
   160a8:	rsble	r1, r1, #0
   160ac:	lsr	ip, ip, #7
   160b0:	strble	r3, [lr], #1
   160b4:	uxtb	r3, r1
   160b8:	cmp	r3, #100	; 0x64
   160bc:	bcc	1610c <flatcc_json_printer_int8@@Base+0x7c>
   160c0:	mov	r1, #0
   160c4:	strb	r1, [lr, #3]
   160c8:	movw	r1, #34079	; 0x851f
   160cc:	movt	r1, #20971	; 0x51eb
   160d0:	umull	r1, r2, r3, r1
   160d4:	mov	r1, #48	; 0x30
   160d8:	orr	r1, r1, r2, lsr #5
   160dc:	strb	r1, [lr]
   160e0:	lsr	r1, r2, #5
   160e4:	mov	r2, #100	; 0x64
   160e8:	mls	r1, r1, r2, r3
   160ec:	ldr	r2, [pc, #132]	; 16178 <flatcc_json_printer_int8@@Base+0xe8>
   160f0:	uxtb	r1, r1
   160f4:	add	r2, pc, r2
   160f8:	add	r1, r2, r1, lsl #1
   160fc:	ldrh	r1, [r1]
   16100:	strh	r1, [lr, #1]
   16104:	mov	r1, #3
   16108:	b	16164 <flatcc_json_printer_int8@@Base+0xd4>
   1610c:	cmp	r3, #10
   16110:	bcc	16150 <flatcc_json_printer_int8@@Base+0xc0>
   16114:	mov	r1, #0
   16118:	strb	r1, [lr, #2]
   1611c:	movw	r1, #34079	; 0x851f
   16120:	movt	r1, #20971	; 0x51eb
   16124:	umull	r1, r2, r3, r1
   16128:	lsr	r1, r2, #5
   1612c:	mov	r2, #100	; 0x64
   16130:	mls	r1, r1, r2, r3
   16134:	ldr	r2, [pc, #64]	; 1617c <flatcc_json_printer_int8@@Base+0xec>
   16138:	add	r2, pc, r2
   1613c:	add	r1, r2, r1, lsl #1
   16140:	ldrh	r1, [r1]
   16144:	strh	r1, [lr]
   16148:	mov	r1, #2
   1614c:	b	16164 <flatcc_json_printer_int8@@Base+0xd4>
   16150:	mov	r2, #0
   16154:	add	r1, r1, #48	; 0x30
   16158:	strb	r2, [lr, #1]
   1615c:	strb	r1, [lr]
   16160:	mov	r1, #1
   16164:	ldr	r2, [r0, #20]
   16168:	add	r1, r1, ip
   1616c:	add	r1, r2, r1
   16170:	str	r1, [r0, #20]
   16174:	pop	{fp, pc}
   16178:	andeq	fp, r0, r6, lsr #25
   1617c:	andeq	fp, r0, r2, ror #24

00016180 <flatcc_json_printer_int16@@Base>:
   16180:	push	{r4, r5, fp, lr}
   16184:	add	fp, sp, #8
   16188:	mov	r2, r1
   1618c:	ldr	r1, [r0, #20]
   16190:	mov	r4, r0
   16194:	uxth	r0, r2
   16198:	cmn	r2, #1
   1619c:	rsble	r2, r2, #0
   161a0:	lsr	r5, r0, #15
   161a4:	movle	r0, #45	; 0x2d
   161a8:	strble	r0, [r1], #1
   161ac:	uxth	r0, r2
   161b0:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   161b4:	ldr	r1, [r4, #20]
   161b8:	add	r0, r0, r5
   161bc:	add	r0, r1, r0
   161c0:	str	r0, [r4, #20]
   161c4:	pop	{r4, r5, fp, pc}

000161c8 <flatcc_json_printer_int32@@Base>:
   161c8:	push	{r4, r5, fp, lr}
   161cc:	add	fp, sp, #8
   161d0:	mov	r2, r1
   161d4:	lsr	r5, r1, #31
   161d8:	ldr	r1, [r0, #20]
   161dc:	mov	r4, r0
   161e0:	cmn	r2, #1
   161e4:	movle	r0, #45	; 0x2d
   161e8:	rsble	r2, r2, #0
   161ec:	strble	r0, [r1], #1
   161f0:	mov	r0, r2
   161f4:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   161f8:	ldr	r1, [r4, #20]
   161fc:	add	r0, r0, r5
   16200:	add	r0, r1, r0
   16204:	str	r0, [r4, #20]
   16208:	pop	{r4, r5, fp, pc}

0001620c <flatcc_json_printer_int64@@Base>:
   1620c:	push	{r4, r5, fp, lr}
   16210:	add	fp, sp, #8
   16214:	mov	r1, r3
   16218:	mov	r3, r2
   1621c:	ldr	r2, [r0, #20]
   16220:	mov	r4, r0
   16224:	lsr	r5, r1, #31
   16228:	cmn	r1, #1
   1622c:	bgt	16240 <flatcc_json_printer_int64@@Base+0x34>
   16230:	mov	r0, #45	; 0x2d
   16234:	rsbs	r3, r3, #0
   16238:	strb	r0, [r2], #1
   1623c:	rsc	r1, r1, #0
   16240:	mov	r0, r3
   16244:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   16248:	ldr	r1, [r4, #20]
   1624c:	add	r0, r0, r5
   16250:	add	r0, r1, r0
   16254:	str	r0, [r4, #20]
   16258:	pop	{r4, r5, fp, pc}

0001625c <flatcc_json_printer_float@@Base>:
   1625c:	push	{r4, sl, fp, lr}
   16260:	add	fp, sp, #8
   16264:	vcvt.f64.f32	d0, s0
   16268:	mov	r4, r0
   1626c:	ldr	r0, [r0, #20]
   16270:	bl	14170 <flatcc_json_printer_fmt_float@@Base+0xc>
   16274:	ldr	r1, [r4, #20]
   16278:	add	r0, r1, r0
   1627c:	str	r0, [r4, #20]
   16280:	pop	{r4, sl, fp, pc}

00016284 <flatcc_json_printer_double@@Base>:
   16284:	push	{r4, sl, fp, lr}
   16288:	add	fp, sp, #8
   1628c:	mov	r4, r0
   16290:	ldr	r0, [r0, #20]
   16294:	bl	14170 <flatcc_json_printer_fmt_float@@Base+0xc>
   16298:	ldr	r1, [r4, #20]
   1629c:	add	r0, r1, r0
   162a0:	str	r0, [r4, #20]
   162a4:	pop	{r4, sl, fp, pc}

000162a8 <flatcc_json_printer_enum@@Base>:
   162a8:	push	{r4, r5, r6, r7, fp, lr}
   162ac:	add	fp, sp, #16
   162b0:	mov	r4, r0
   162b4:	ldr	r0, [r0, #20]
   162b8:	mov	r6, r1
   162bc:	mov	r1, #34	; 0x22
   162c0:	mov	r5, r2
   162c4:	strb	r1, [r0]
   162c8:	ldrb	r2, [r4, #26]
   162cc:	ldr	r0, [r4, #20]
   162d0:	ldr	r1, [r4, #16]
   162d4:	cmp	r2, #0
   162d8:	addeq	r0, r0, #1
   162dc:	add	r2, r0, r5
   162e0:	str	r0, [r4, #20]
   162e4:	cmp	r2, r1
   162e8:	bcc	1635c <flatcc_json_printer_enum@@Base+0xb4>
   162ec:	cmp	r0, r1
   162f0:	bcc	1630c <flatcc_json_printer_enum@@Base+0x64>
   162f4:	ldr	r2, [r4, #44]	; 0x2c
   162f8:	mov	r0, r4
   162fc:	mov	r1, #0
   16300:	blx	r2
   16304:	ldr	r1, [r4, #16]
   16308:	ldr	r0, [r4, #20]
   1630c:	sub	r7, r1, r0
   16310:	cmp	r7, r5
   16314:	bcs	1635c <flatcc_json_printer_enum@@Base+0xb4>
   16318:	mov	r1, r6
   1631c:	mov	r2, r7
   16320:	bl	128ac <memcpy@plt>
   16324:	ldr	r0, [r4, #20]
   16328:	ldr	r2, [r4, #44]	; 0x2c
   1632c:	mov	r1, #0
   16330:	add	r0, r0, r7
   16334:	str	r0, [r4, #20]
   16338:	mov	r0, r4
   1633c:	blx	r2
   16340:	ldr	r1, [r4, #16]
   16344:	ldr	r0, [r4, #20]
   16348:	sub	r5, r5, r7
   1634c:	add	r6, r6, r7
   16350:	sub	r7, r1, r0
   16354:	cmp	r5, r7
   16358:	bhi	16318 <flatcc_json_printer_enum@@Base+0x70>
   1635c:	mov	r1, r6
   16360:	mov	r2, r5
   16364:	bl	128ac <memcpy@plt>
   16368:	ldr	r0, [r4, #20]
   1636c:	add	r1, r0, r5
   16370:	str	r1, [r4, #20]
   16374:	mov	r1, #34	; 0x22
   16378:	strb	r1, [r0, r5]
   1637c:	ldrb	r0, [r4, #26]
   16380:	ldr	r1, [r4, #20]
   16384:	cmp	r0, #0
   16388:	addeq	r1, r1, #1
   1638c:	str	r1, [r4, #20]
   16390:	pop	{r4, r5, r6, r7, fp, pc}

00016394 <flatcc_json_printer_delimit_enum_flags@@Base>:
   16394:	ldrb	ip, [r0, #26]
   16398:	ldr	r3, [r0, #20]
   1639c:	mov	r2, #34	; 0x22
   163a0:	cmp	r1, #0
   163a4:	movwne	r1, #1
   163a8:	strb	r2, [r3]
   163ac:	clz	r2, ip
   163b0:	lsr	r2, r2, #5
   163b4:	orr	r1, r1, r2
   163b8:	ldr	r2, [r0, #20]
   163bc:	add	r1, r2, r1
   163c0:	str	r1, [r0, #20]
   163c4:	bx	lr

000163c8 <flatcc_json_printer_enum_flag@@Base>:
   163c8:	push	{r4, r5, r6, r7, fp, lr}
   163cc:	add	fp, sp, #16
   163d0:	mov	r5, r0
   163d4:	ldr	r0, [r0, #20]
   163d8:	mov	r6, r2
   163dc:	mov	r2, #32
   163e0:	cmp	r1, #0
   163e4:	mov	r4, r3
   163e8:	strb	r2, [r0]
   163ec:	ldr	r0, [r5, #20]
   163f0:	ldr	r2, [r5, #16]
   163f4:	addgt	r0, r0, #1
   163f8:	add	r1, r0, r3
   163fc:	str	r0, [r5, #20]
   16400:	cmp	r1, r2
   16404:	bcc	16478 <flatcc_json_printer_enum_flag@@Base+0xb0>
   16408:	cmp	r0, r2
   1640c:	bcc	16428 <flatcc_json_printer_enum_flag@@Base+0x60>
   16410:	ldr	r2, [r5, #44]	; 0x2c
   16414:	mov	r0, r5
   16418:	mov	r1, #0
   1641c:	blx	r2
   16420:	ldr	r2, [r5, #16]
   16424:	ldr	r0, [r5, #20]
   16428:	sub	r7, r2, r0
   1642c:	cmp	r7, r4
   16430:	bcs	16478 <flatcc_json_printer_enum_flag@@Base+0xb0>
   16434:	mov	r1, r6
   16438:	mov	r2, r7
   1643c:	bl	128ac <memcpy@plt>
   16440:	ldr	r0, [r5, #20]
   16444:	ldr	r2, [r5, #44]	; 0x2c
   16448:	mov	r1, #0
   1644c:	add	r0, r0, r7
   16450:	str	r0, [r5, #20]
   16454:	mov	r0, r5
   16458:	blx	r2
   1645c:	ldr	r1, [r5, #16]
   16460:	ldr	r0, [r5, #20]
   16464:	sub	r4, r4, r7
   16468:	add	r6, r6, r7
   1646c:	sub	r7, r1, r0
   16470:	cmp	r4, r7
   16474:	bhi	16434 <flatcc_json_printer_enum_flag@@Base+0x6c>
   16478:	mov	r1, r6
   1647c:	mov	r2, r4
   16480:	bl	128ac <memcpy@plt>
   16484:	ldr	r0, [r5, #20]
   16488:	add	r0, r0, r4
   1648c:	str	r0, [r5, #20]
   16490:	pop	{r4, r5, r6, r7, fp, pc}

00016494 <flatcc_json_printer_string_field@@Base>:
   16494:	push	{r4, r5, fp, lr}
   16498:	add	fp, sp, #8
   1649c:	mov	r4, r0
   164a0:	mov	r0, #4
   164a4:	add	r0, r0, r2, lsl #1
   164a8:	ldr	r2, [r1, #8]
   164ac:	cmp	r0, r2
   164b0:	popge	{r4, r5, fp, pc}
   164b4:	ldr	r2, [r1, #4]
   164b8:	add	r0, r2, r0
   164bc:	ldrh	r0, [r0]
   164c0:	cmp	r0, #0
   164c4:	ldrne	r2, [r1]
   164c8:	addsne	r5, r2, r0
   164cc:	bne	164d4 <flatcc_json_printer_string_field@@Base+0x40>
   164d0:	pop	{r4, r5, fp, pc}
   164d4:	ldr	ip, [r1, #16]
   164d8:	ldr	r2, [fp, #8]
   164dc:	add	r0, ip, #1
   164e0:	cmp	ip, #0
   164e4:	str	r0, [r1, #16]
   164e8:	beq	16500 <flatcc_json_printer_string_field@@Base+0x6c>
   164ec:	ldr	r0, [r4, #20]
   164f0:	add	r1, r0, #1
   164f4:	str	r1, [r4, #20]
   164f8:	mov	r1, #44	; 0x2c
   164fc:	strb	r1, [r0]
   16500:	mov	r0, r4
   16504:	mov	r1, r3
   16508:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1650c:	ldr	r0, [r5]
   16510:	ldr	r2, [r5, r0]!
   16514:	mov	r0, r4
   16518:	add	r1, r5, #4
   1651c:	pop	{r4, r5, fp, lr}
   16520:	b	150f0 <flatcc_json_printer_string@@Base+0x4>
   16524:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16528:	add	fp, sp, #24
   1652c:	mov	r4, r0
   16530:	mov	r6, r1
   16534:	ldr	r0, [r0, #20]
   16538:	mov	r8, r2
   1653c:	ldrb	r1, [r4, #25]
   16540:	cmp	r1, #0
   16544:	beq	16600 <flatcc_json_printer_string_field@@Base+0x16c>
   16548:	add	r1, r0, #1
   1654c:	str	r1, [r4, #20]
   16550:	mov	r1, #10
   16554:	strb	r1, [r0]
   16558:	ldr	r0, [r4, #20]
   1655c:	ldrb	r2, [r4, #25]
   16560:	ldr	r3, [r4, #32]
   16564:	ldr	r1, [r4, #16]
   16568:	mla	r5, r3, r2, r0
   1656c:	mul	r7, r3, r2
   16570:	cmp	r5, r1
   16574:	bls	165e4 <flatcc_json_printer_string_field@@Base+0x150>
   16578:	cmp	r0, r1
   1657c:	bcc	16598 <flatcc_json_printer_string_field@@Base+0x104>
   16580:	ldr	r2, [r4, #44]	; 0x2c
   16584:	mov	r0, r4
   16588:	mov	r1, #0
   1658c:	blx	r2
   16590:	ldr	r1, [r4, #16]
   16594:	ldr	r0, [r4, #20]
   16598:	sub	r5, r1, r0
   1659c:	cmp	r5, r7
   165a0:	bcs	165e4 <flatcc_json_printer_string_field@@Base+0x150>
   165a4:	mov	r1, #32
   165a8:	mov	r2, r5
   165ac:	bl	1293c <memset@plt>
   165b0:	ldr	r0, [r4, #20]
   165b4:	ldr	r2, [r4, #44]	; 0x2c
   165b8:	mov	r1, #0
   165bc:	add	r0, r0, r5
   165c0:	str	r0, [r4, #20]
   165c4:	mov	r0, r4
   165c8:	blx	r2
   165cc:	ldr	r1, [r4, #16]
   165d0:	ldr	r0, [r4, #20]
   165d4:	sub	r7, r7, r5
   165d8:	sub	r5, r1, r0
   165dc:	cmp	r7, r5
   165e0:	bhi	165a4 <flatcc_json_printer_string_field@@Base+0x110>
   165e4:	mov	r1, #32
   165e8:	mov	r2, r7
   165ec:	bl	1293c <memset@plt>
   165f0:	ldr	r0, [r4, #20]
   165f4:	add	r0, r0, r7
   165f8:	str	r0, [r4, #20]
   165fc:	b	16620 <flatcc_json_printer_string_field@@Base+0x18c>
   16600:	ldr	r1, [r4, #16]
   16604:	cmp	r0, r1
   16608:	bcc	16620 <flatcc_json_printer_string_field@@Base+0x18c>
   1660c:	ldr	r2, [r4, #44]	; 0x2c
   16610:	mov	r0, r4
   16614:	mov	r1, #0
   16618:	blx	r2
   1661c:	ldr	r0, [r4, #20]
   16620:	mov	r1, #34	; 0x22
   16624:	strb	r1, [r0]
   16628:	ldrb	r2, [r4, #26]
   1662c:	ldr	r0, [r4, #20]
   16630:	ldr	r1, [r4, #16]
   16634:	cmp	r2, #0
   16638:	addeq	r0, r0, #1
   1663c:	add	r2, r0, r8
   16640:	str	r0, [r4, #20]
   16644:	cmp	r2, r1
   16648:	bcc	166bc <flatcc_json_printer_string_field@@Base+0x228>
   1664c:	cmp	r0, r1
   16650:	bcc	1666c <flatcc_json_printer_string_field@@Base+0x1d8>
   16654:	ldr	r2, [r4, #44]	; 0x2c
   16658:	mov	r0, r4
   1665c:	mov	r1, #0
   16660:	blx	r2
   16664:	ldr	r1, [r4, #16]
   16668:	ldr	r0, [r4, #20]
   1666c:	sub	r7, r1, r0
   16670:	cmp	r7, r8
   16674:	bcs	166bc <flatcc_json_printer_string_field@@Base+0x228>
   16678:	mov	r1, r6
   1667c:	mov	r2, r7
   16680:	bl	128ac <memcpy@plt>
   16684:	ldr	r0, [r4, #20]
   16688:	ldr	r2, [r4, #44]	; 0x2c
   1668c:	mov	r1, #0
   16690:	add	r0, r0, r7
   16694:	str	r0, [r4, #20]
   16698:	mov	r0, r4
   1669c:	blx	r2
   166a0:	ldr	r1, [r4, #16]
   166a4:	ldr	r0, [r4, #20]
   166a8:	sub	r8, r8, r7
   166ac:	add	r6, r6, r7
   166b0:	sub	r7, r1, r0
   166b4:	cmp	r8, r7
   166b8:	bhi	16678 <flatcc_json_printer_string_field@@Base+0x1e4>
   166bc:	mov	r1, r6
   166c0:	mov	r2, r8
   166c4:	bl	128ac <memcpy@plt>
   166c8:	ldr	r0, [r4, #20]
   166cc:	add	r1, r0, r8
   166d0:	str	r1, [r4, #20]
   166d4:	mov	r1, #34	; 0x22
   166d8:	strb	r1, [r0, r8]
   166dc:	ldrb	r0, [r4, #26]
   166e0:	ldr	r1, [r4, #20]
   166e4:	cmp	r0, #0
   166e8:	addeq	r1, r1, #1
   166ec:	add	r0, r1, #1
   166f0:	str	r0, [r4, #20]
   166f4:	mov	r0, #58	; 0x3a
   166f8:	strb	r0, [r1]
   166fc:	mov	r1, #32
   16700:	ldr	r0, [r4, #20]
   16704:	strb	r1, [r0]
   16708:	ldrb	r0, [r4, #25]
   1670c:	ldr	r1, [r4, #20]
   16710:	cmp	r0, #0
   16714:	addne	r1, r1, #1
   16718:	str	r1, [r4, #20]
   1671c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016720 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   16720:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16724:	add	fp, sp, #28
   16728:	sub	sp, sp, #12
   1672c:	mov	r4, r0
   16730:	mov	r0, #4
   16734:	add	r0, r0, r2, lsl #1
   16738:	ldr	r2, [r1, #8]
   1673c:	cmp	r0, r2
   16740:	bge	168e0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   16744:	ldr	r2, [r1, #4]
   16748:	add	r0, r2, r0
   1674c:	ldrh	r0, [r0]
   16750:	cmp	r0, #0
   16754:	beq	168e0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   16758:	ldr	r5, [fp, #12]
   1675c:	ldr	r2, [r1]
   16760:	cmp	r5, #0
   16764:	add	r6, r2, r0
   16768:	movwne	r5, #1
   1676c:	cmp	r6, #0
   16770:	beq	168e0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   16774:	ldr	r0, [r1, #16]
   16778:	ldr	r2, [fp, #8]
   1677c:	add	r7, r0, #1
   16780:	cmp	r0, #0
   16784:	str	r7, [r1, #16]
   16788:	beq	167a0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x80>
   1678c:	ldr	r0, [r4, #20]
   16790:	add	r1, r0, #1
   16794:	str	r1, [r4, #20]
   16798:	mov	r1, #44	; 0x2c
   1679c:	strb	r1, [r0]
   167a0:	mov	r0, r4
   167a4:	mov	r1, r3
   167a8:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   167ac:	ldr	r0, [r6]
   167b0:	ldr	r0, [r6, r0]!
   167b4:	str	r0, [sp, #8]
   167b8:	ldr	r0, [r4, #20]
   167bc:	add	r1, r0, #1
   167c0:	str	r1, [r4, #20]
   167c4:	mov	r1, #34	; 0x22
   167c8:	strb	r1, [r0]
   167cc:	movw	r1, #43691	; 0xaaab
   167d0:	ldr	r0, [sp, #8]
   167d4:	movt	r1, #43690	; 0xaaaa
   167d8:	lsl	r0, r0, #2
   167dc:	umull	r0, r1, r0, r1
   167e0:	mov	r0, #3
   167e4:	add	r0, r0, r1, lsr #1
   167e8:	ldr	r1, [r4, #16]
   167ec:	bic	r7, r0, #3
   167f0:	ldr	r0, [r4, #20]
   167f4:	add	r2, r0, r7
   167f8:	cmp	r2, r1
   167fc:	bcc	16818 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   16800:	ldr	r2, [r4, #44]	; 0x2c
   16804:	mov	r0, r4
   16808:	mov	r1, #0
   1680c:	blx	r2
   16810:	ldr	r1, [r4, #16]
   16814:	ldr	r0, [r4, #20]
   16818:	add	r2, r0, r7
   1681c:	add	r6, r6, #4
   16820:	cmp	r2, r1
   16824:	bls	168b8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   16828:	add	r9, sp, #4
   1682c:	mov	sl, #3
   16830:	sub	r1, r1, r0
   16834:	bic	r7, r1, #3
   16838:	add	r1, r7, r7, lsl #1
   1683c:	cmp	r1, #0
   16840:	beq	168e8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c8>
   16844:	lsr	r8, r1, #2
   16848:	mov	r1, r6
   1684c:	mov	r2, r9
   16850:	mov	r3, r5
   16854:	str	r8, [sp, #4]
   16858:	bl	20f98 <flatcc_json_printer_clear@@Base+0x44>
   1685c:	ldr	r0, [r4, #20]
   16860:	mov	r1, #0
   16864:	add	r0, r0, r7
   16868:	str	r0, [r4, #20]
   1686c:	ldr	r0, [sp, #8]
   16870:	sub	r0, r0, r8
   16874:	str	r0, [sp, #8]
   16878:	mov	r0, r4
   1687c:	ldr	r2, [r4, #44]	; 0x2c
   16880:	blx	r2
   16884:	ldr	r0, [sp, #8]
   16888:	movw	r1, #43691	; 0xaaab
   1688c:	add	r6, r6, r8
   16890:	movt	r1, #43690	; 0xaaaa
   16894:	lsl	r0, r0, #2
   16898:	umull	r0, r1, r0, r1
   1689c:	add	r0, sl, r1, lsr #1
   168a0:	ldr	r1, [r4, #16]
   168a4:	bic	r7, r0, #3
   168a8:	ldr	r0, [r4, #20]
   168ac:	add	r2, r0, r7
   168b0:	cmp	r2, r1
   168b4:	bhi	16830 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x110>
   168b8:	orr	r3, r5, #128	; 0x80
   168bc:	add	r2, sp, #8
   168c0:	mov	r1, r6
   168c4:	bl	20f98 <flatcc_json_printer_clear@@Base+0x44>
   168c8:	ldr	r0, [r4, #20]
   168cc:	add	r1, r0, r7
   168d0:	add	r1, r1, #1
   168d4:	str	r1, [r4, #20]
   168d8:	mov	r1, #34	; 0x22
   168dc:	strb	r1, [r0, r7]
   168e0:	sub	sp, fp, #28
   168e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168e8:	ldr	r0, [pc, #24]	; 16908 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e8>
   168ec:	ldr	r1, [pc, #24]	; 1690c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1ec>
   168f0:	ldr	r3, [pc, #24]	; 16910 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1f0>
   168f4:	movw	r2, #277	; 0x115
   168f8:	add	r0, pc, r0
   168fc:	add	r1, pc, r1
   16900:	add	r3, pc, r3
   16904:	bl	12990 <__assert_fail@plt>
   16908:	andeq	fp, r0, fp, ror #10
   1690c:	andeq	fp, r0, ip, ror #1
   16910:	andeq	fp, r0, r9, ror #10

00016914 <flatcc_json_printer_uint8_field@@Base>:
   16914:	push	{r4, r5, r6, sl, fp, lr}
   16918:	add	fp, sp, #16
   1691c:	mov	r6, r0
   16920:	mov	r0, #4
   16924:	ldr	r5, [r1, #8]
   16928:	add	r2, r0, r2, lsl #1
   1692c:	ldr	r0, [fp, #12]
   16930:	cmp	r2, r5
   16934:	bge	16954 <flatcc_json_printer_uint8_field@@Base+0x40>
   16938:	ldr	r5, [r1, #4]
   1693c:	add	r2, r5, r2
   16940:	ldrh	r2, [r2]
   16944:	cmp	r2, #0
   16948:	ldrne	r5, [r1]
   1694c:	addsne	r2, r5, r2
   16950:	bne	16a54 <flatcc_json_printer_uint8_field@@Base+0x140>
   16954:	ldrb	r2, [r6, #29]
   16958:	mov	r5, r0
   1695c:	cmp	r2, #0
   16960:	beq	16a50 <flatcc_json_printer_uint8_field@@Base+0x13c>
   16964:	ldr	r0, [r1, #16]
   16968:	ldr	r2, [fp, #8]
   1696c:	add	r4, r0, #1
   16970:	cmp	r0, #0
   16974:	str	r4, [r1, #16]
   16978:	beq	16990 <flatcc_json_printer_uint8_field@@Base+0x7c>
   1697c:	ldr	r0, [r6, #20]
   16980:	add	r1, r0, #1
   16984:	str	r1, [r6, #20]
   16988:	mov	r1, #44	; 0x2c
   1698c:	strb	r1, [r0]
   16990:	mov	r0, r6
   16994:	mov	r1, r3
   16998:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1699c:	ldr	r0, [r6, #20]
   169a0:	mov	r1, #0
   169a4:	cmp	r5, #100	; 0x64
   169a8:	bcc	169f4 <flatcc_json_printer_uint8_field@@Base+0xe0>
   169ac:	strb	r1, [r0, #3]
   169b0:	movw	r1, #34079	; 0x851f
   169b4:	movt	r1, #20971	; 0x51eb
   169b8:	umull	r1, r2, r5, r1
   169bc:	mov	r1, #48	; 0x30
   169c0:	orr	r1, r1, r2, lsr #5
   169c4:	strb	r1, [r0]
   169c8:	lsr	r1, r2, #5
   169cc:	mov	r2, #100	; 0x64
   169d0:	mls	r1, r1, r2, r5
   169d4:	ldr	r2, [pc, #152]	; 16a74 <flatcc_json_printer_uint8_field@@Base+0x160>
   169d8:	uxtb	r1, r1
   169dc:	add	r2, pc, r2
   169e0:	add	r1, r2, r1, lsl #1
   169e4:	ldrh	r1, [r1]
   169e8:	strh	r1, [r0, #1]
   169ec:	mov	r0, #3
   169f0:	b	16a44 <flatcc_json_printer_uint8_field@@Base+0x130>
   169f4:	cmp	r5, #10
   169f8:	bcc	16a34 <flatcc_json_printer_uint8_field@@Base+0x120>
   169fc:	strb	r1, [r0, #2]
   16a00:	movw	r1, #34079	; 0x851f
   16a04:	movt	r1, #20971	; 0x51eb
   16a08:	umull	r1, r2, r5, r1
   16a0c:	lsr	r1, r2, #5
   16a10:	mov	r2, #100	; 0x64
   16a14:	mls	r1, r1, r2, r5
   16a18:	ldr	r2, [pc, #88]	; 16a78 <flatcc_json_printer_uint8_field@@Base+0x164>
   16a1c:	add	r2, pc, r2
   16a20:	add	r1, r2, r1, lsl #1
   16a24:	ldrh	r1, [r1]
   16a28:	strh	r1, [r0]
   16a2c:	mov	r0, #2
   16a30:	b	16a44 <flatcc_json_printer_uint8_field@@Base+0x130>
   16a34:	strb	r1, [r0, #1]
   16a38:	add	r1, r5, #48	; 0x30
   16a3c:	strb	r1, [r0]
   16a40:	mov	r0, #1
   16a44:	ldr	r1, [r6, #20]
   16a48:	add	r0, r1, r0
   16a4c:	str	r0, [r6, #20]
   16a50:	pop	{r4, r5, r6, sl, fp, pc}
   16a54:	ldrb	r5, [r2]
   16a58:	cmp	r5, r0
   16a5c:	bne	16964 <flatcc_json_printer_uint8_field@@Base+0x50>
   16a60:	ldrb	r2, [r6, #28]
   16a64:	mov	r5, r0
   16a68:	cmp	r2, #0
   16a6c:	popne	{r4, r5, r6, sl, fp, pc}
   16a70:	b	16964 <flatcc_json_printer_uint8_field@@Base+0x50>
   16a74:			; <UNDEFINED> instruction: 0x0000b3be
   16a78:	andeq	fp, r0, lr, ror r3

00016a7c <flatcc_json_printer_uint16_field@@Base>:
   16a7c:	push	{r4, r5, r6, sl, fp, lr}
   16a80:	add	fp, sp, #16
   16a84:	mov	r4, r0
   16a88:	mov	r0, #4
   16a8c:	ldr	r5, [r1, #8]
   16a90:	add	r2, r0, r2, lsl #1
   16a94:	ldr	r0, [fp, #12]
   16a98:	cmp	r2, r5
   16a9c:	bge	16abc <flatcc_json_printer_uint16_field@@Base+0x40>
   16aa0:	ldr	r5, [r1, #4]
   16aa4:	add	r2, r5, r2
   16aa8:	ldrh	r2, [r2]
   16aac:	cmp	r2, #0
   16ab0:	ldrne	r5, [r1]
   16ab4:	addsne	r2, r5, r2
   16ab8:	bne	16b20 <flatcc_json_printer_uint16_field@@Base+0xa4>
   16abc:	ldrb	r2, [r4, #29]
   16ac0:	mov	r6, r0
   16ac4:	cmp	r2, #0
   16ac8:	beq	16b1c <flatcc_json_printer_uint16_field@@Base+0xa0>
   16acc:	ldr	r0, [r1, #16]
   16ad0:	ldr	r2, [fp, #8]
   16ad4:	add	r5, r0, #1
   16ad8:	cmp	r0, #0
   16adc:	str	r5, [r1, #16]
   16ae0:	beq	16af8 <flatcc_json_printer_uint16_field@@Base+0x7c>
   16ae4:	ldr	r0, [r4, #20]
   16ae8:	add	r1, r0, #1
   16aec:	str	r1, [r4, #20]
   16af0:	mov	r1, #44	; 0x2c
   16af4:	strb	r1, [r0]
   16af8:	mov	r0, r4
   16afc:	mov	r1, r3
   16b00:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   16b04:	ldr	r1, [r4, #20]
   16b08:	mov	r0, r6
   16b0c:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   16b10:	ldr	r1, [r4, #20]
   16b14:	add	r0, r1, r0
   16b18:	str	r0, [r4, #20]
   16b1c:	pop	{r4, r5, r6, sl, fp, pc}
   16b20:	ldrh	r6, [r2]
   16b24:	cmp	r6, r0
   16b28:	bne	16acc <flatcc_json_printer_uint16_field@@Base+0x50>
   16b2c:	ldrb	r2, [r4, #28]
   16b30:	mov	r6, r0
   16b34:	cmp	r2, #0
   16b38:	popne	{r4, r5, r6, sl, fp, pc}
   16b3c:	b	16acc <flatcc_json_printer_uint16_field@@Base+0x50>

00016b40 <flatcc_json_printer_uint32_field@@Base>:
   16b40:	push	{r4, r5, r6, sl, fp, lr}
   16b44:	add	fp, sp, #16
   16b48:	mov	r4, r0
   16b4c:	mov	r0, #4
   16b50:	ldr	r5, [r1, #8]
   16b54:	add	r2, r0, r2, lsl #1
   16b58:	ldr	r0, [fp, #12]
   16b5c:	cmp	r2, r5
   16b60:	bge	16b80 <flatcc_json_printer_uint32_field@@Base+0x40>
   16b64:	ldr	r5, [r1, #4]
   16b68:	add	r2, r5, r2
   16b6c:	ldrh	r2, [r2]
   16b70:	cmp	r2, #0
   16b74:	ldrne	r5, [r1]
   16b78:	addsne	r2, r5, r2
   16b7c:	bne	16be4 <flatcc_json_printer_uint32_field@@Base+0xa4>
   16b80:	ldrb	r2, [r4, #29]
   16b84:	mov	r6, r0
   16b88:	cmp	r2, #0
   16b8c:	beq	16be0 <flatcc_json_printer_uint32_field@@Base+0xa0>
   16b90:	ldr	r0, [r1, #16]
   16b94:	ldr	r2, [fp, #8]
   16b98:	add	r5, r0, #1
   16b9c:	cmp	r0, #0
   16ba0:	str	r5, [r1, #16]
   16ba4:	beq	16bbc <flatcc_json_printer_uint32_field@@Base+0x7c>
   16ba8:	ldr	r0, [r4, #20]
   16bac:	add	r1, r0, #1
   16bb0:	str	r1, [r4, #20]
   16bb4:	mov	r1, #44	; 0x2c
   16bb8:	strb	r1, [r0]
   16bbc:	mov	r0, r4
   16bc0:	mov	r1, r3
   16bc4:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   16bc8:	ldr	r1, [r4, #20]
   16bcc:	mov	r0, r6
   16bd0:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   16bd4:	ldr	r1, [r4, #20]
   16bd8:	add	r0, r1, r0
   16bdc:	str	r0, [r4, #20]
   16be0:	pop	{r4, r5, r6, sl, fp, pc}
   16be4:	ldr	r6, [r2]
   16be8:	cmp	r6, r0
   16bec:	bne	16b90 <flatcc_json_printer_uint32_field@@Base+0x50>
   16bf0:	ldrb	r2, [r4, #28]
   16bf4:	mov	r6, r0
   16bf8:	cmp	r2, #0
   16bfc:	popne	{r4, r5, r6, sl, fp, pc}
   16c00:	b	16b90 <flatcc_json_printer_uint32_field@@Base+0x50>

00016c04 <flatcc_json_printer_uint64_field@@Base>:
   16c04:	push	{r4, r6, r7, r8, fp, lr}
   16c08:	add	fp, sp, #16
   16c0c:	mov	r4, r0
   16c10:	mov	r0, #4
   16c14:	ldr	r6, [r1, #8]
   16c18:	ldr	lr, [fp, #20]
   16c1c:	add	r7, r0, r2, lsl #1
   16c20:	ldr	r2, [fp, #16]
   16c24:	cmp	r7, r6
   16c28:	bge	16c48 <flatcc_json_printer_uint64_field@@Base+0x44>
   16c2c:	ldr	r6, [r1, #4]
   16c30:	add	r7, r6, r7
   16c34:	ldrh	r7, [r7]
   16c38:	cmp	r7, #0
   16c3c:	ldrne	r6, [r1]
   16c40:	addsne	r7, r6, r7
   16c44:	bne	16cb4 <flatcc_json_printer_uint64_field@@Base+0xb0>
   16c48:	ldrb	r0, [r4, #29]
   16c4c:	mov	r8, r2
   16c50:	mov	r7, lr
   16c54:	cmp	r0, #0
   16c58:	beq	16cb0 <flatcc_json_printer_uint64_field@@Base+0xac>
   16c5c:	ldr	r0, [r1, #16]
   16c60:	ldr	r2, [fp, #8]
   16c64:	add	r6, r0, #1
   16c68:	cmp	r0, #0
   16c6c:	str	r6, [r1, #16]
   16c70:	beq	16c88 <flatcc_json_printer_uint64_field@@Base+0x84>
   16c74:	ldr	r0, [r4, #20]
   16c78:	add	r1, r0, #1
   16c7c:	str	r1, [r4, #20]
   16c80:	mov	r1, #44	; 0x2c
   16c84:	strb	r1, [r0]
   16c88:	mov	r0, r4
   16c8c:	mov	r1, r3
   16c90:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   16c94:	ldr	r2, [r4, #20]
   16c98:	mov	r0, r8
   16c9c:	mov	r1, r7
   16ca0:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   16ca4:	ldr	r1, [r4, #20]
   16ca8:	add	r0, r1, r0
   16cac:	str	r0, [r4, #20]
   16cb0:	pop	{r4, r6, r7, r8, fp, pc}
   16cb4:	ldr	r8, [r7]
   16cb8:	ldr	r7, [r7, #4]
   16cbc:	eor	ip, r7, lr
   16cc0:	eor	r0, r8, r2
   16cc4:	orrs	r0, r0, ip
   16cc8:	bne	16c5c <flatcc_json_printer_uint64_field@@Base+0x58>
   16ccc:	ldrb	r0, [r4, #28]
   16cd0:	mov	r8, r2
   16cd4:	mov	r7, lr
   16cd8:	cmp	r0, #0
   16cdc:	popne	{r4, r6, r7, r8, fp, pc}
   16ce0:	b	16c5c <flatcc_json_printer_uint64_field@@Base+0x58>

00016ce4 <flatcc_json_printer_int8_field@@Base>:
   16ce4:	push	{r4, r5, r6, sl, fp, lr}
   16ce8:	add	fp, sp, #16
   16cec:	mov	r6, r0
   16cf0:	mov	r0, #4
   16cf4:	ldr	r5, [r1, #8]
   16cf8:	add	r2, r0, r2, lsl #1
   16cfc:	ldr	r0, [fp, #12]
   16d00:	cmp	r2, r5
   16d04:	bge	16d24 <flatcc_json_printer_int8_field@@Base+0x40>
   16d08:	ldr	r5, [r1, #4]
   16d0c:	add	r2, r5, r2
   16d10:	ldrh	r2, [r2]
   16d14:	cmp	r2, #0
   16d18:	ldrne	r5, [r1]
   16d1c:	addsne	r2, r5, r2
   16d20:	bne	16e50 <flatcc_json_printer_int8_field@@Base+0x16c>
   16d24:	ldrb	r2, [r6, #29]
   16d28:	mov	r5, r0
   16d2c:	cmp	r2, #0
   16d30:	beq	16e4c <flatcc_json_printer_int8_field@@Base+0x168>
   16d34:	ldr	r0, [r1, #16]
   16d38:	ldr	r2, [fp, #8]
   16d3c:	add	r4, r0, #1
   16d40:	cmp	r0, #0
   16d44:	str	r4, [r1, #16]
   16d48:	beq	16d60 <flatcc_json_printer_int8_field@@Base+0x7c>
   16d4c:	ldr	r0, [r6, #20]
   16d50:	add	r1, r0, #1
   16d54:	str	r1, [r6, #20]
   16d58:	mov	r1, #44	; 0x2c
   16d5c:	strb	r1, [r0]
   16d60:	mov	r0, r6
   16d64:	mov	r1, r3
   16d68:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   16d6c:	sxtb	r2, r5
   16d70:	ldr	r0, [r6, #20]
   16d74:	uxtb	r1, r5
   16d78:	cmn	r2, #1
   16d7c:	lsr	r1, r1, #7
   16d80:	movle	r2, #45	; 0x2d
   16d84:	rsble	r5, r5, #0
   16d88:	strble	r2, [r0], #1
   16d8c:	uxtb	r2, r5
   16d90:	cmp	r2, #100	; 0x64
   16d94:	bcc	16de4 <flatcc_json_printer_int8_field@@Base+0x100>
   16d98:	mov	r3, #0
   16d9c:	strb	r3, [r0, #3]
   16da0:	movw	r3, #34079	; 0x851f
   16da4:	movt	r3, #20971	; 0x51eb
   16da8:	umull	r3, r5, r2, r3
   16dac:	mov	r3, #48	; 0x30
   16db0:	orr	r3, r3, r5, lsr #5
   16db4:	strb	r3, [r0]
   16db8:	lsr	r3, r5, #5
   16dbc:	mov	r5, #100	; 0x64
   16dc0:	mls	r2, r3, r5, r2
   16dc4:	ldr	r3, [pc, #168]	; 16e74 <flatcc_json_printer_int8_field@@Base+0x190>
   16dc8:	uxtb	r2, r2
   16dcc:	add	r3, pc, r3
   16dd0:	add	r2, r3, r2, lsl #1
   16dd4:	ldrh	r2, [r2]
   16dd8:	strh	r2, [r0, #1]
   16ddc:	mov	r0, #3
   16de0:	b	16e3c <flatcc_json_printer_int8_field@@Base+0x158>
   16de4:	cmp	r2, #10
   16de8:	bcc	16e28 <flatcc_json_printer_int8_field@@Base+0x144>
   16dec:	mov	r3, #0
   16df0:	strb	r3, [r0, #2]
   16df4:	movw	r3, #34079	; 0x851f
   16df8:	movt	r3, #20971	; 0x51eb
   16dfc:	umull	r3, r5, r2, r3
   16e00:	lsr	r3, r5, #5
   16e04:	mov	r5, #100	; 0x64
   16e08:	mls	r2, r3, r5, r2
   16e0c:	ldr	r3, [pc, #100]	; 16e78 <flatcc_json_printer_int8_field@@Base+0x194>
   16e10:	add	r3, pc, r3
   16e14:	add	r2, r3, r2, lsl #1
   16e18:	ldrh	r2, [r2]
   16e1c:	strh	r2, [r0]
   16e20:	mov	r0, #2
   16e24:	b	16e3c <flatcc_json_printer_int8_field@@Base+0x158>
   16e28:	mov	r2, #0
   16e2c:	strb	r2, [r0, #1]
   16e30:	add	r2, r5, #48	; 0x30
   16e34:	strb	r2, [r0]
   16e38:	mov	r0, #1
   16e3c:	add	r0, r0, r1
   16e40:	ldr	r1, [r6, #20]
   16e44:	add	r0, r1, r0
   16e48:	str	r0, [r6, #20]
   16e4c:	pop	{r4, r5, r6, sl, fp, pc}
   16e50:	ldrb	r5, [r2]
   16e54:	uxtb	r2, r0
   16e58:	cmp	r5, r2
   16e5c:	bne	16d34 <flatcc_json_printer_int8_field@@Base+0x50>
   16e60:	ldrb	r2, [r6, #28]
   16e64:	mov	r5, r0
   16e68:	cmp	r2, #0
   16e6c:	popne	{r4, r5, r6, sl, fp, pc}
   16e70:	b	16d34 <flatcc_json_printer_int8_field@@Base+0x50>
   16e74:	andeq	sl, r0, lr, asr #31
   16e78:	andeq	sl, r0, sl, lsl #31

00016e7c <flatcc_json_printer_int16_field@@Base>:
   16e7c:	push	{r4, r5, r6, sl, fp, lr}
   16e80:	add	fp, sp, #16
   16e84:	mov	r4, r0
   16e88:	mov	r0, #4
   16e8c:	ldr	r6, [r1, #8]
   16e90:	add	r2, r0, r2, lsl #1
   16e94:	ldr	r0, [fp, #12]
   16e98:	cmp	r2, r6
   16e9c:	bge	16ebc <flatcc_json_printer_int16_field@@Base+0x40>
   16ea0:	ldr	r6, [r1, #4]
   16ea4:	add	r2, r6, r2
   16ea8:	ldrh	r2, [r2]
   16eac:	cmp	r2, #0
   16eb0:	ldrne	r6, [r1]
   16eb4:	addsne	r2, r6, r2
   16eb8:	bne	16f40 <flatcc_json_printer_int16_field@@Base+0xc4>
   16ebc:	ldrb	r2, [r4, #29]
   16ec0:	mov	r5, r0
   16ec4:	cmp	r2, #0
   16ec8:	beq	16f3c <flatcc_json_printer_int16_field@@Base+0xc0>
   16ecc:	ldr	r0, [r1, #16]
   16ed0:	ldr	r2, [fp, #8]
   16ed4:	add	r6, r0, #1
   16ed8:	cmp	r0, #0
   16edc:	str	r6, [r1, #16]
   16ee0:	beq	16ef8 <flatcc_json_printer_int16_field@@Base+0x7c>
   16ee4:	ldr	r0, [r4, #20]
   16ee8:	add	r1, r0, #1
   16eec:	str	r1, [r4, #20]
   16ef0:	mov	r1, #44	; 0x2c
   16ef4:	strb	r1, [r0]
   16ef8:	mov	r0, r4
   16efc:	mov	r1, r3
   16f00:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   16f04:	uxth	r0, r5
   16f08:	ldr	r1, [r4, #20]
   16f0c:	lsr	r6, r0, #15
   16f10:	sxth	r0, r5
   16f14:	cmn	r0, #1
   16f18:	movle	r0, #45	; 0x2d
   16f1c:	rsble	r5, r5, #0
   16f20:	strble	r0, [r1], #1
   16f24:	uxth	r0, r5
   16f28:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   16f2c:	ldr	r1, [r4, #20]
   16f30:	add	r0, r0, r6
   16f34:	add	r0, r1, r0
   16f38:	str	r0, [r4, #20]
   16f3c:	pop	{r4, r5, r6, sl, fp, pc}
   16f40:	ldrh	r5, [r2]
   16f44:	uxth	r2, r0
   16f48:	cmp	r5, r2
   16f4c:	bne	16ecc <flatcc_json_printer_int16_field@@Base+0x50>
   16f50:	ldrb	r2, [r4, #28]
   16f54:	mov	r5, r0
   16f58:	cmp	r2, #0
   16f5c:	popne	{r4, r5, r6, sl, fp, pc}
   16f60:	b	16ecc <flatcc_json_printer_int16_field@@Base+0x50>

00016f64 <flatcc_json_printer_int32_field@@Base>:
   16f64:	push	{r4, r5, r6, sl, fp, lr}
   16f68:	add	fp, sp, #16
   16f6c:	mov	r4, r0
   16f70:	mov	r0, #4
   16f74:	ldr	r6, [r1, #8]
   16f78:	add	r2, r0, r2, lsl #1
   16f7c:	ldr	r0, [fp, #12]
   16f80:	cmp	r2, r6
   16f84:	bge	16fa4 <flatcc_json_printer_int32_field@@Base+0x40>
   16f88:	ldr	r6, [r1, #4]
   16f8c:	add	r2, r6, r2
   16f90:	ldrh	r2, [r2]
   16f94:	cmp	r2, #0
   16f98:	ldrne	r6, [r1]
   16f9c:	addsne	r2, r6, r2
   16fa0:	bne	17020 <flatcc_json_printer_int32_field@@Base+0xbc>
   16fa4:	ldrb	r2, [r4, #29]
   16fa8:	mov	r5, r0
   16fac:	cmp	r2, #0
   16fb0:	beq	1701c <flatcc_json_printer_int32_field@@Base+0xb8>
   16fb4:	ldr	r0, [r1, #16]
   16fb8:	ldr	r2, [fp, #8]
   16fbc:	add	r6, r0, #1
   16fc0:	cmp	r0, #0
   16fc4:	str	r6, [r1, #16]
   16fc8:	beq	16fe0 <flatcc_json_printer_int32_field@@Base+0x7c>
   16fcc:	ldr	r0, [r4, #20]
   16fd0:	add	r1, r0, #1
   16fd4:	str	r1, [r4, #20]
   16fd8:	mov	r1, #44	; 0x2c
   16fdc:	strb	r1, [r0]
   16fe0:	mov	r0, r4
   16fe4:	mov	r1, r3
   16fe8:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   16fec:	ldr	r1, [r4, #20]
   16ff0:	cmn	r5, #1
   16ff4:	lsr	r6, r5, #31
   16ff8:	movle	r0, #45	; 0x2d
   16ffc:	rsble	r5, r5, #0
   17000:	strble	r0, [r1], #1
   17004:	mov	r0, r5
   17008:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   1700c:	ldr	r1, [r4, #20]
   17010:	add	r0, r0, r6
   17014:	add	r0, r1, r0
   17018:	str	r0, [r4, #20]
   1701c:	pop	{r4, r5, r6, sl, fp, pc}
   17020:	ldr	r5, [r2]
   17024:	cmp	r5, r0
   17028:	bne	16fb4 <flatcc_json_printer_int32_field@@Base+0x50>
   1702c:	ldrb	r2, [r4, #28]
   17030:	mov	r5, r0
   17034:	cmp	r2, #0
   17038:	popne	{r4, r5, r6, sl, fp, pc}
   1703c:	b	16fb4 <flatcc_json_printer_int32_field@@Base+0x50>

00017040 <flatcc_json_printer_int64_field@@Base>:
   17040:	push	{r4, r5, r6, r7, fp, lr}
   17044:	add	fp, sp, #16
   17048:	mov	r4, r0
   1704c:	mov	r0, #4
   17050:	ldr	r6, [r1, #8]
   17054:	add	r7, r0, r2, lsl #1
   17058:	ldr	r0, [fp, #20]
   1705c:	ldr	r2, [fp, #16]
   17060:	cmp	r7, r6
   17064:	bge	17084 <flatcc_json_printer_int64_field@@Base+0x44>
   17068:	ldr	r6, [r1, #4]
   1706c:	add	r7, r6, r7
   17070:	ldrh	r7, [r7]
   17074:	cmp	r7, #0
   17078:	ldrne	r6, [r1]
   1707c:	addsne	r7, r6, r7
   17080:	bne	17110 <flatcc_json_printer_int64_field@@Base+0xd0>
   17084:	ldrb	r7, [r4, #29]
   17088:	mov	r6, r2
   1708c:	cmp	r7, #0
   17090:	mov	r7, r0
   17094:	beq	1710c <flatcc_json_printer_int64_field@@Base+0xcc>
   17098:	ldr	r0, [r1, #16]
   1709c:	ldr	r2, [fp, #8]
   170a0:	add	r5, r0, #1
   170a4:	cmp	r0, #0
   170a8:	str	r5, [r1, #16]
   170ac:	beq	170c4 <flatcc_json_printer_int64_field@@Base+0x84>
   170b0:	ldr	r0, [r4, #20]
   170b4:	add	r1, r0, #1
   170b8:	str	r1, [r4, #20]
   170bc:	mov	r1, #44	; 0x2c
   170c0:	strb	r1, [r0]
   170c4:	mov	r0, r4
   170c8:	mov	r1, r3
   170cc:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   170d0:	ldr	r2, [r4, #20]
   170d4:	lsr	r5, r7, #31
   170d8:	cmn	r7, #1
   170dc:	bgt	170f0 <flatcc_json_printer_int64_field@@Base+0xb0>
   170e0:	mov	r0, #45	; 0x2d
   170e4:	rsbs	r6, r6, #0
   170e8:	strb	r0, [r2], #1
   170ec:	rsc	r7, r7, #0
   170f0:	mov	r0, r6
   170f4:	mov	r1, r7
   170f8:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   170fc:	ldr	r1, [r4, #20]
   17100:	add	r0, r0, r5
   17104:	add	r0, r1, r0
   17108:	str	r0, [r4, #20]
   1710c:	pop	{r4, r5, r6, r7, fp, pc}
   17110:	ldrd	r6, [r7]
   17114:	eor	ip, r7, r0
   17118:	eor	r5, r6, r2
   1711c:	orrs	r5, r5, ip
   17120:	bne	17098 <flatcc_json_printer_int64_field@@Base+0x58>
   17124:	ldrb	r7, [r4, #28]
   17128:	mov	r6, r2
   1712c:	cmp	r7, #0
   17130:	mov	r7, r0
   17134:	popne	{r4, r5, r6, r7, fp, pc}
   17138:	b	17098 <flatcc_json_printer_int64_field@@Base+0x58>

0001713c <flatcc_json_printer_bool_field@@Base>:
   1713c:	push	{r4, r5, r6, sl, fp, lr}
   17140:	add	fp, sp, #16
   17144:	mov	r4, r0
   17148:	mov	r0, #4
   1714c:	ldr	r5, [r1, #8]
   17150:	add	r2, r0, r2, lsl #1
   17154:	ldr	r0, [fp, #12]
   17158:	cmp	r2, r5
   1715c:	bge	1717c <flatcc_json_printer_bool_field@@Base+0x40>
   17160:	ldr	r5, [r1, #4]
   17164:	add	r2, r5, r2
   17168:	ldrh	r2, [r2]
   1716c:	cmp	r2, #0
   17170:	ldrne	r5, [r1]
   17174:	addsne	r2, r5, r2
   17178:	bne	17214 <flatcc_json_printer_bool_field@@Base+0xd8>
   1717c:	ldrb	r2, [r4, #29]
   17180:	mov	r6, r0
   17184:	cmp	r2, #0
   17188:	beq	17210 <flatcc_json_printer_bool_field@@Base+0xd4>
   1718c:	ldr	r0, [r1, #16]
   17190:	ldr	r2, [fp, #8]
   17194:	add	r5, r0, #1
   17198:	cmp	r0, #0
   1719c:	str	r5, [r1, #16]
   171a0:	beq	171b8 <flatcc_json_printer_bool_field@@Base+0x7c>
   171a4:	ldr	r0, [r4, #20]
   171a8:	add	r1, r0, #1
   171ac:	str	r1, [r4, #20]
   171b0:	mov	r1, #44	; 0x2c
   171b4:	strb	r1, [r0]
   171b8:	mov	r0, r4
   171bc:	mov	r1, r3
   171c0:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   171c4:	ldr	r0, [r4, #20]
   171c8:	cmp	r6, #0
   171cc:	beq	171ec <flatcc_json_printer_bool_field@@Base+0xb0>
   171d0:	mov	r1, #0
   171d4:	strb	r1, [r0, #4]
   171d8:	movw	r1, #29300	; 0x7274
   171dc:	movt	r1, #25973	; 0x6575
   171e0:	str	r1, [r0]
   171e4:	mov	r0, #4
   171e8:	b	17204 <flatcc_json_printer_bool_field@@Base+0xc8>
   171ec:	mov	r1, #101	; 0x65
   171f0:	strh	r1, [r0, #4]
   171f4:	movw	r1, #24934	; 0x6166
   171f8:	movt	r1, #29548	; 0x736c
   171fc:	str	r1, [r0]
   17200:	mov	r0, #5
   17204:	ldr	r1, [r4, #20]
   17208:	add	r0, r1, r0
   1720c:	str	r0, [r4, #20]
   17210:	pop	{r4, r5, r6, sl, fp, pc}
   17214:	ldrb	r6, [r2]
   17218:	cmp	r6, r0
   1721c:	bne	1718c <flatcc_json_printer_bool_field@@Base+0x50>
   17220:	ldrb	r2, [r4, #28]
   17224:	mov	r6, r0
   17228:	cmp	r2, #0
   1722c:	popne	{r4, r5, r6, sl, fp, pc}
   17230:	b	1718c <flatcc_json_printer_bool_field@@Base+0x50>

00017234 <flatcc_json_printer_float_field@@Base>:
   17234:	push	{r4, r5, fp, lr}
   17238:	add	fp, sp, #8
   1723c:	vpush	{d8}
   17240:	mov	r5, r0
   17244:	mov	r0, #4
   17248:	vmov.f32	s16, s0
   1724c:	add	r0, r0, r2, lsl #1
   17250:	ldr	r2, [r1, #8]
   17254:	cmp	r0, r2
   17258:	bge	17278 <flatcc_json_printer_float_field@@Base+0x44>
   1725c:	ldr	r2, [r1, #4]
   17260:	add	r0, r2, r0
   17264:	ldrh	r0, [r0]
   17268:	cmp	r0, #0
   1726c:	ldrne	r2, [r1]
   17270:	addsne	r0, r2, r0
   17274:	bne	172dc <flatcc_json_printer_float_field@@Base+0xa8>
   17278:	ldrb	r0, [r5, #29]
   1727c:	cmp	r0, #0
   17280:	beq	172d4 <flatcc_json_printer_float_field@@Base+0xa0>
   17284:	ldr	r0, [r1, #16]
   17288:	ldr	r2, [fp, #8]
   1728c:	add	r4, r0, #1
   17290:	cmp	r0, #0
   17294:	str	r4, [r1, #16]
   17298:	beq	172b0 <flatcc_json_printer_float_field@@Base+0x7c>
   1729c:	ldr	r0, [r5, #20]
   172a0:	add	r1, r0, #1
   172a4:	str	r1, [r5, #20]
   172a8:	mov	r1, #44	; 0x2c
   172ac:	strb	r1, [r0]
   172b0:	mov	r0, r5
   172b4:	mov	r1, r3
   172b8:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   172bc:	vcvt.f64.f32	d0, s16
   172c0:	ldr	r0, [r5, #20]
   172c4:	bl	14170 <flatcc_json_printer_fmt_float@@Base+0xc>
   172c8:	ldr	r1, [r5, #20]
   172cc:	add	r0, r1, r0
   172d0:	str	r0, [r5, #20]
   172d4:	vpop	{d8}
   172d8:	pop	{r4, r5, fp, pc}
   172dc:	vldr	s0, [r0]
   172e0:	vcmp.f32	s0, s16
   172e4:	vmrs	APSR_nzcv, fpscr
   172e8:	bne	17300 <flatcc_json_printer_float_field@@Base+0xcc>
   172ec:	ldrb	r0, [r5, #28]
   172f0:	vmov.f32	s16, s0
   172f4:	cmp	r0, #0
   172f8:	bne	172d4 <flatcc_json_printer_float_field@@Base+0xa0>
   172fc:	b	17284 <flatcc_json_printer_float_field@@Base+0x50>
   17300:	vmov.f32	s16, s0
   17304:	b	17284 <flatcc_json_printer_float_field@@Base+0x50>

00017308 <flatcc_json_printer_double_field@@Base>:
   17308:	push	{r4, r5, fp, lr}
   1730c:	add	fp, sp, #8
   17310:	vpush	{d8}
   17314:	mov	r5, r0
   17318:	mov	r0, #4
   1731c:	vmov.f64	d8, d0
   17320:	add	r0, r0, r2, lsl #1
   17324:	ldr	r2, [r1, #8]
   17328:	cmp	r0, r2
   1732c:	bge	1734c <flatcc_json_printer_double_field@@Base+0x44>
   17330:	ldr	r2, [r1, #4]
   17334:	add	r0, r2, r0
   17338:	ldrh	r0, [r0]
   1733c:	cmp	r0, #0
   17340:	ldrne	r2, [r1]
   17344:	addsne	r0, r2, r0
   17348:	bne	173b0 <flatcc_json_printer_double_field@@Base+0xa8>
   1734c:	ldrb	r0, [r5, #29]
   17350:	cmp	r0, #0
   17354:	beq	173a8 <flatcc_json_printer_double_field@@Base+0xa0>
   17358:	ldr	r0, [r1, #16]
   1735c:	ldr	r2, [fp, #8]
   17360:	add	r4, r0, #1
   17364:	cmp	r0, #0
   17368:	str	r4, [r1, #16]
   1736c:	beq	17384 <flatcc_json_printer_double_field@@Base+0x7c>
   17370:	ldr	r0, [r5, #20]
   17374:	add	r1, r0, #1
   17378:	str	r1, [r5, #20]
   1737c:	mov	r1, #44	; 0x2c
   17380:	strb	r1, [r0]
   17384:	mov	r0, r5
   17388:	mov	r1, r3
   1738c:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   17390:	ldr	r0, [r5, #20]
   17394:	vmov.f64	d0, d8
   17398:	bl	14170 <flatcc_json_printer_fmt_float@@Base+0xc>
   1739c:	ldr	r1, [r5, #20]
   173a0:	add	r0, r1, r0
   173a4:	str	r0, [r5, #20]
   173a8:	vpop	{d8}
   173ac:	pop	{r4, r5, fp, pc}
   173b0:	vldr	d16, [r0]
   173b4:	vcmp.f64	d16, d8
   173b8:	vmrs	APSR_nzcv, fpscr
   173bc:	bne	173d4 <flatcc_json_printer_double_field@@Base+0xcc>
   173c0:	ldrb	r0, [r5, #28]
   173c4:	vmov.f64	d8, d16
   173c8:	cmp	r0, #0
   173cc:	bne	173a8 <flatcc_json_printer_double_field@@Base+0xa0>
   173d0:	b	17358 <flatcc_json_printer_double_field@@Base+0x50>
   173d4:	vmov.f64	d8, d16
   173d8:	b	17358 <flatcc_json_printer_double_field@@Base+0x50>

000173dc <flatcc_json_printer_uint8_enum_field@@Base>:
   173dc:	push	{r4, r5, r6, r7, fp, lr}
   173e0:	add	fp, sp, #16
   173e4:	mov	r6, r0
   173e8:	mov	r0, #4
   173ec:	ldr	r4, [r1, #8]
   173f0:	ldr	ip, [fp, #16]
   173f4:	add	r5, r0, r2, lsl #1
   173f8:	ldr	r0, [fp, #12]
   173fc:	ldr	r2, [fp, #8]
   17400:	cmp	r5, r4
   17404:	bge	17424 <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   17408:	ldr	r4, [r1, #4]
   1740c:	add	r5, r4, r5
   17410:	ldrh	r5, [r5]
   17414:	cmp	r5, #0
   17418:	ldrne	r4, [r1]
   1741c:	addsne	r5, r4, r5
   17420:	bne	17524 <flatcc_json_printer_uint8_enum_field@@Base+0x148>
   17424:	ldrb	r5, [r6, #29]
   17428:	cmp	r5, #0
   1742c:	mov	r5, r0
   17430:	beq	17560 <flatcc_json_printer_uint8_enum_field@@Base+0x184>
   17434:	ldr	r0, [r1, #16]
   17438:	mov	r7, ip
   1743c:	add	r4, r0, #1
   17440:	cmp	r0, #0
   17444:	str	r4, [r1, #16]
   17448:	beq	17460 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   1744c:	ldr	r0, [r6, #20]
   17450:	add	r1, r0, #1
   17454:	str	r1, [r6, #20]
   17458:	mov	r1, #44	; 0x2c
   1745c:	strb	r1, [r0]
   17460:	mov	r0, r6
   17464:	mov	r1, r3
   17468:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1746c:	ldrb	r0, [r6, #27]
   17470:	cmp	r0, #0
   17474:	beq	174d0 <flatcc_json_printer_uint8_enum_field@@Base+0xf4>
   17478:	ldr	r0, [r6, #20]
   1747c:	mov	r1, #0
   17480:	cmp	r5, #100	; 0x64
   17484:	bcc	174e4 <flatcc_json_printer_uint8_enum_field@@Base+0x108>
   17488:	strb	r1, [r0, #3]
   1748c:	movw	r1, #34079	; 0x851f
   17490:	movt	r1, #20971	; 0x51eb
   17494:	umull	r1, r2, r5, r1
   17498:	mov	r1, #48	; 0x30
   1749c:	orr	r1, r1, r2, lsr #5
   174a0:	strb	r1, [r0]
   174a4:	lsr	r1, r2, #5
   174a8:	mov	r2, #100	; 0x64
   174ac:	mls	r1, r1, r2, r5
   174b0:	ldr	r2, [pc, #172]	; 17564 <flatcc_json_printer_uint8_enum_field@@Base+0x188>
   174b4:	uxtb	r1, r1
   174b8:	add	r2, pc, r2
   174bc:	add	r1, r2, r1, lsl #1
   174c0:	ldrh	r1, [r1]
   174c4:	strh	r1, [r0, #1]
   174c8:	mov	r0, #3
   174cc:	b	17554 <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   174d0:	mov	r0, r6
   174d4:	mov	r1, r5
   174d8:	mov	r2, r7
   174dc:	pop	{r4, r5, r6, r7, fp, lr}
   174e0:	bx	r2
   174e4:	cmp	r5, #10
   174e8:	bcc	17544 <flatcc_json_printer_uint8_enum_field@@Base+0x168>
   174ec:	strb	r1, [r0, #2]
   174f0:	movw	r1, #34079	; 0x851f
   174f4:	movt	r1, #20971	; 0x51eb
   174f8:	umull	r1, r2, r5, r1
   174fc:	lsr	r1, r2, #5
   17500:	mov	r2, #100	; 0x64
   17504:	mls	r1, r1, r2, r5
   17508:	ldr	r2, [pc, #88]	; 17568 <flatcc_json_printer_uint8_enum_field@@Base+0x18c>
   1750c:	add	r2, pc, r2
   17510:	add	r1, r2, r1, lsl #1
   17514:	ldrh	r1, [r1]
   17518:	strh	r1, [r0]
   1751c:	mov	r0, #2
   17520:	b	17554 <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   17524:	ldrb	r5, [r5]
   17528:	cmp	r5, r0
   1752c:	bne	17434 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   17530:	ldrb	r5, [r6, #28]
   17534:	cmp	r5, #0
   17538:	mov	r5, r0
   1753c:	popne	{r4, r5, r6, r7, fp, pc}
   17540:	b	17434 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   17544:	strb	r1, [r0, #1]
   17548:	add	r1, r5, #48	; 0x30
   1754c:	strb	r1, [r0]
   17550:	mov	r0, #1
   17554:	ldr	r1, [r6, #20]
   17558:	add	r0, r1, r0
   1755c:	str	r0, [r6, #20]
   17560:	pop	{r4, r5, r6, r7, fp, pc}
   17564:	andeq	sl, r0, r2, ror #17
   17568:	andeq	sl, r0, lr, lsl #17

0001756c <flatcc_json_printer_uint16_enum_field@@Base>:
   1756c:	push	{r4, r5, r6, r7, fp, lr}
   17570:	add	fp, sp, #16
   17574:	mov	r4, r0
   17578:	mov	r0, #4
   1757c:	ldr	r7, [fp, #16]
   17580:	ldr	ip, [fp, #12]
   17584:	add	r5, r0, r2, lsl #1
   17588:	ldr	r0, [r1, #8]
   1758c:	ldr	r2, [fp, #8]
   17590:	cmp	r5, r0
   17594:	bge	175b4 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   17598:	ldr	r0, [r1, #4]
   1759c:	add	r0, r0, r5
   175a0:	ldrh	r5, [r0]
   175a4:	cmp	r5, #0
   175a8:	ldrne	r0, [r1]
   175ac:	addsne	r5, r0, r5
   175b0:	bne	17634 <flatcc_json_printer_uint16_enum_field@@Base+0xc8>
   175b4:	ldrb	r0, [r4, #29]
   175b8:	mov	r6, ip
   175bc:	cmp	r0, #0
   175c0:	beq	1761c <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   175c4:	ldr	r0, [r1, #16]
   175c8:	add	r5, r0, #1
   175cc:	cmp	r0, #0
   175d0:	str	r5, [r1, #16]
   175d4:	beq	175ec <flatcc_json_printer_uint16_enum_field@@Base+0x80>
   175d8:	ldr	r0, [r4, #20]
   175dc:	add	r1, r0, #1
   175e0:	str	r1, [r4, #20]
   175e4:	mov	r1, #44	; 0x2c
   175e8:	strb	r1, [r0]
   175ec:	mov	r0, r4
   175f0:	mov	r1, r3
   175f4:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   175f8:	ldrb	r0, [r4, #27]
   175fc:	cmp	r0, #0
   17600:	beq	17620 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   17604:	ldr	r1, [r4, #20]
   17608:	mov	r0, r6
   1760c:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   17610:	ldr	r1, [r4, #20]
   17614:	add	r0, r1, r0
   17618:	str	r0, [r4, #20]
   1761c:	pop	{r4, r5, r6, r7, fp, pc}
   17620:	mov	r0, r4
   17624:	mov	r1, r6
   17628:	mov	r2, r7
   1762c:	pop	{r4, r5, r6, r7, fp, lr}
   17630:	bx	r2
   17634:	ldrh	r6, [r5]
   17638:	cmp	r6, ip
   1763c:	bne	175c4 <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   17640:	ldrb	r0, [r4, #28]
   17644:	mov	r6, ip
   17648:	cmp	r0, #0
   1764c:	popne	{r4, r5, r6, r7, fp, pc}
   17650:	b	175c4 <flatcc_json_printer_uint16_enum_field@@Base+0x58>

00017654 <flatcc_json_printer_uint32_enum_field@@Base>:
   17654:	push	{r4, r5, r6, r7, fp, lr}
   17658:	add	fp, sp, #16
   1765c:	mov	r4, r0
   17660:	mov	r0, #4
   17664:	ldr	r7, [fp, #16]
   17668:	ldr	ip, [fp, #12]
   1766c:	add	r5, r0, r2, lsl #1
   17670:	ldr	r0, [r1, #8]
   17674:	ldr	r2, [fp, #8]
   17678:	cmp	r5, r0
   1767c:	bge	1769c <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   17680:	ldr	r0, [r1, #4]
   17684:	add	r0, r0, r5
   17688:	ldrh	r5, [r0]
   1768c:	cmp	r5, #0
   17690:	ldrne	r0, [r1]
   17694:	addsne	r5, r0, r5
   17698:	bne	1771c <flatcc_json_printer_uint32_enum_field@@Base+0xc8>
   1769c:	ldrb	r0, [r4, #29]
   176a0:	mov	r6, ip
   176a4:	cmp	r0, #0
   176a8:	beq	17704 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   176ac:	ldr	r0, [r1, #16]
   176b0:	add	r5, r0, #1
   176b4:	cmp	r0, #0
   176b8:	str	r5, [r1, #16]
   176bc:	beq	176d4 <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   176c0:	ldr	r0, [r4, #20]
   176c4:	add	r1, r0, #1
   176c8:	str	r1, [r4, #20]
   176cc:	mov	r1, #44	; 0x2c
   176d0:	strb	r1, [r0]
   176d4:	mov	r0, r4
   176d8:	mov	r1, r3
   176dc:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   176e0:	ldrb	r0, [r4, #27]
   176e4:	cmp	r0, #0
   176e8:	beq	17708 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   176ec:	ldr	r1, [r4, #20]
   176f0:	mov	r0, r6
   176f4:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   176f8:	ldr	r1, [r4, #20]
   176fc:	add	r0, r1, r0
   17700:	str	r0, [r4, #20]
   17704:	pop	{r4, r5, r6, r7, fp, pc}
   17708:	mov	r0, r4
   1770c:	mov	r1, r6
   17710:	mov	r2, r7
   17714:	pop	{r4, r5, r6, r7, fp, lr}
   17718:	bx	r2
   1771c:	ldr	r6, [r5]
   17720:	cmp	r6, ip
   17724:	bne	176ac <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   17728:	ldrb	r0, [r4, #28]
   1772c:	mov	r6, ip
   17730:	cmp	r0, #0
   17734:	popne	{r4, r5, r6, r7, fp, pc}
   17738:	b	176ac <flatcc_json_printer_uint32_enum_field@@Base+0x58>

0001773c <flatcc_json_printer_uint64_enum_field@@Base>:
   1773c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17740:	add	fp, sp, #24
   17744:	mov	r4, r0
   17748:	mov	r0, #4
   1774c:	ldr	ip, [fp, #20]
   17750:	ldr	r6, [fp, #16]
   17754:	ldr	r5, [fp, #24]
   17758:	add	r7, r0, r2, lsl #1
   1775c:	ldr	r0, [r1, #8]
   17760:	ldr	r2, [fp, #8]
   17764:	cmp	r7, r0
   17768:	bge	17788 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   1776c:	ldr	r0, [r1, #4]
   17770:	add	r0, r0, r7
   17774:	ldrh	r7, [r0]
   17778:	cmp	r7, #0
   1777c:	ldrne	r0, [r1]
   17780:	addsne	r7, r0, r7
   17784:	bne	17814 <flatcc_json_printer_uint64_enum_field@@Base+0xd8>
   17788:	ldrb	r0, [r4, #29]
   1778c:	mov	r8, r6
   17790:	mov	r7, ip
   17794:	cmp	r0, #0
   17798:	beq	177f8 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   1779c:	ldr	r0, [r1, #16]
   177a0:	add	r6, r0, #1
   177a4:	cmp	r0, #0
   177a8:	str	r6, [r1, #16]
   177ac:	beq	177c4 <flatcc_json_printer_uint64_enum_field@@Base+0x88>
   177b0:	ldr	r0, [r4, #20]
   177b4:	add	r1, r0, #1
   177b8:	str	r1, [r4, #20]
   177bc:	mov	r1, #44	; 0x2c
   177c0:	strb	r1, [r0]
   177c4:	mov	r0, r4
   177c8:	mov	r1, r3
   177cc:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   177d0:	ldrb	r0, [r4, #27]
   177d4:	cmp	r0, #0
   177d8:	beq	177fc <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   177dc:	ldr	r2, [r4, #20]
   177e0:	mov	r0, r8
   177e4:	mov	r1, r7
   177e8:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   177ec:	ldr	r1, [r4, #20]
   177f0:	add	r0, r1, r0
   177f4:	str	r0, [r4, #20]
   177f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   177fc:	mov	r0, r4
   17800:	mov	r2, r8
   17804:	mov	r3, r7
   17808:	mov	r1, r5
   1780c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17810:	bx	r1
   17814:	ldr	r8, [r7]
   17818:	ldr	r7, [r7, #4]
   1781c:	eor	lr, r7, ip
   17820:	eor	r0, r8, r6
   17824:	orrs	r0, r0, lr
   17828:	bne	1779c <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   1782c:	ldrb	r0, [r4, #28]
   17830:	mov	r8, r6
   17834:	mov	r7, ip
   17838:	cmp	r0, #0
   1783c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   17840:	b	1779c <flatcc_json_printer_uint64_enum_field@@Base+0x60>

00017844 <flatcc_json_printer_int8_enum_field@@Base>:
   17844:	push	{r4, r5, r6, r7, fp, lr}
   17848:	add	fp, sp, #16
   1784c:	mov	r6, r0
   17850:	mov	r0, #4
   17854:	ldr	r4, [r1, #8]
   17858:	ldr	ip, [fp, #16]
   1785c:	add	r5, r0, r2, lsl #1
   17860:	ldr	r0, [fp, #12]
   17864:	ldr	r2, [fp, #8]
   17868:	cmp	r5, r4
   1786c:	bge	1788c <flatcc_json_printer_int8_enum_field@@Base+0x48>
   17870:	ldr	r4, [r1, #4]
   17874:	add	r5, r4, r5
   17878:	ldrh	r5, [r5]
   1787c:	cmp	r5, #0
   17880:	ldrne	r4, [r1]
   17884:	addsne	r5, r4, r5
   17888:	bne	179b0 <flatcc_json_printer_int8_enum_field@@Base+0x16c>
   1788c:	ldrb	r5, [r6, #29]
   17890:	cmp	r5, #0
   17894:	mov	r5, r0
   17898:	beq	179f8 <flatcc_json_printer_int8_enum_field@@Base+0x1b4>
   1789c:	ldr	r0, [r1, #16]
   178a0:	mov	r7, ip
   178a4:	add	r4, r0, #1
   178a8:	cmp	r0, #0
   178ac:	str	r4, [r1, #16]
   178b0:	beq	178c8 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   178b4:	ldr	r0, [r6, #20]
   178b8:	add	r1, r0, #1
   178bc:	str	r1, [r6, #20]
   178c0:	mov	r1, #44	; 0x2c
   178c4:	strb	r1, [r0]
   178c8:	mov	r0, r6
   178cc:	mov	r1, r3
   178d0:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   178d4:	ldrb	r0, [r6, #27]
   178d8:	cmp	r0, #0
   178dc:	beq	17958 <flatcc_json_printer_int8_enum_field@@Base+0x114>
   178e0:	sxtb	r2, r5
   178e4:	ldr	r0, [r6, #20]
   178e8:	uxtb	r1, r5
   178ec:	cmn	r2, #1
   178f0:	lsr	r1, r1, #7
   178f4:	movle	r2, #45	; 0x2d
   178f8:	rsble	r5, r5, #0
   178fc:	strble	r2, [r0], #1
   17900:	uxtb	r2, r5
   17904:	cmp	r2, #100	; 0x64
   17908:	bcc	1796c <flatcc_json_printer_int8_enum_field@@Base+0x128>
   1790c:	mov	r3, #0
   17910:	strb	r3, [r0, #3]
   17914:	movw	r3, #34079	; 0x851f
   17918:	movt	r3, #20971	; 0x51eb
   1791c:	umull	r3, r5, r2, r3
   17920:	mov	r3, #48	; 0x30
   17924:	orr	r3, r3, r5, lsr #5
   17928:	strb	r3, [r0]
   1792c:	lsr	r3, r5, #5
   17930:	mov	r5, #100	; 0x64
   17934:	mls	r2, r3, r5, r2
   17938:	ldr	r3, [pc, #188]	; 179fc <flatcc_json_printer_int8_enum_field@@Base+0x1b8>
   1793c:	uxtb	r2, r2
   17940:	add	r3, pc, r3
   17944:	add	r2, r3, r2, lsl #1
   17948:	ldrh	r2, [r2]
   1794c:	strh	r2, [r0, #1]
   17950:	mov	r0, #3
   17954:	b	179e8 <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   17958:	sxtb	r1, r5
   1795c:	mov	r0, r6
   17960:	mov	r2, r7
   17964:	pop	{r4, r5, r6, r7, fp, lr}
   17968:	bx	r2
   1796c:	cmp	r2, #10
   17970:	bcc	179d4 <flatcc_json_printer_int8_enum_field@@Base+0x190>
   17974:	mov	r3, #0
   17978:	strb	r3, [r0, #2]
   1797c:	movw	r3, #34079	; 0x851f
   17980:	movt	r3, #20971	; 0x51eb
   17984:	umull	r3, r5, r2, r3
   17988:	lsr	r3, r5, #5
   1798c:	mov	r5, #100	; 0x64
   17990:	mls	r2, r3, r5, r2
   17994:	ldr	r3, [pc, #100]	; 17a00 <flatcc_json_printer_int8_enum_field@@Base+0x1bc>
   17998:	add	r3, pc, r3
   1799c:	add	r2, r3, r2, lsl #1
   179a0:	ldrh	r2, [r2]
   179a4:	strh	r2, [r0]
   179a8:	mov	r0, #2
   179ac:	b	179e8 <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   179b0:	ldrb	r5, [r5]
   179b4:	uxtb	r4, r0
   179b8:	cmp	r5, r4
   179bc:	bne	1789c <flatcc_json_printer_int8_enum_field@@Base+0x58>
   179c0:	ldrb	r5, [r6, #28]
   179c4:	cmp	r5, #0
   179c8:	mov	r5, r0
   179cc:	popne	{r4, r5, r6, r7, fp, pc}
   179d0:	b	1789c <flatcc_json_printer_int8_enum_field@@Base+0x58>
   179d4:	mov	r2, #0
   179d8:	strb	r2, [r0, #1]
   179dc:	add	r2, r5, #48	; 0x30
   179e0:	strb	r2, [r0]
   179e4:	mov	r0, #1
   179e8:	add	r0, r0, r1
   179ec:	ldr	r1, [r6, #20]
   179f0:	add	r0, r1, r0
   179f4:	str	r0, [r6, #20]
   179f8:	pop	{r4, r5, r6, r7, fp, pc}
   179fc:	andeq	sl, r0, sl, asr r4
   17a00:	andeq	sl, r0, r2, lsl #8

00017a04 <flatcc_json_printer_int16_enum_field@@Base>:
   17a04:	push	{r4, r5, r6, r7, fp, lr}
   17a08:	add	fp, sp, #16
   17a0c:	mov	r4, r0
   17a10:	mov	r0, #4
   17a14:	ldr	r5, [r1, #8]
   17a18:	ldr	ip, [fp, #16]
   17a1c:	add	r6, r0, r2, lsl #1
   17a20:	ldr	r0, [fp, #12]
   17a24:	ldr	r2, [fp, #8]
   17a28:	cmp	r6, r5
   17a2c:	bge	17a4c <flatcc_json_printer_int16_enum_field@@Base+0x48>
   17a30:	ldr	r5, [r1, #4]
   17a34:	add	r6, r5, r6
   17a38:	ldrh	r6, [r6]
   17a3c:	cmp	r6, #0
   17a40:	ldrne	r5, [r1]
   17a44:	addsne	r6, r5, r6
   17a48:	bne	17af0 <flatcc_json_printer_int16_enum_field@@Base+0xec>
   17a4c:	ldrb	r6, [r4, #29]
   17a50:	mov	r5, r0
   17a54:	cmp	r6, #0
   17a58:	beq	17ad8 <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   17a5c:	ldr	r0, [r1, #16]
   17a60:	mov	r7, ip
   17a64:	add	r6, r0, #1
   17a68:	cmp	r0, #0
   17a6c:	str	r6, [r1, #16]
   17a70:	beq	17a88 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   17a74:	ldr	r0, [r4, #20]
   17a78:	add	r1, r0, #1
   17a7c:	str	r1, [r4, #20]
   17a80:	mov	r1, #44	; 0x2c
   17a84:	strb	r1, [r0]
   17a88:	mov	r0, r4
   17a8c:	mov	r1, r3
   17a90:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   17a94:	ldrb	r0, [r4, #27]
   17a98:	cmp	r0, #0
   17a9c:	beq	17adc <flatcc_json_printer_int16_enum_field@@Base+0xd8>
   17aa0:	uxth	r0, r5
   17aa4:	ldr	r1, [r4, #20]
   17aa8:	lsr	r6, r0, #15
   17aac:	sxth	r0, r5
   17ab0:	cmn	r0, #1
   17ab4:	movle	r0, #45	; 0x2d
   17ab8:	rsble	r5, r5, #0
   17abc:	strble	r0, [r1], #1
   17ac0:	uxth	r0, r5
   17ac4:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   17ac8:	ldr	r1, [r4, #20]
   17acc:	add	r0, r0, r6
   17ad0:	add	r0, r1, r0
   17ad4:	str	r0, [r4, #20]
   17ad8:	pop	{r4, r5, r6, r7, fp, pc}
   17adc:	sxth	r1, r5
   17ae0:	mov	r0, r4
   17ae4:	mov	r2, r7
   17ae8:	pop	{r4, r5, r6, r7, fp, lr}
   17aec:	bx	r2
   17af0:	ldrh	r5, [r6]
   17af4:	uxth	r6, r0
   17af8:	cmp	r5, r6
   17afc:	bne	17a5c <flatcc_json_printer_int16_enum_field@@Base+0x58>
   17b00:	ldrb	r6, [r4, #28]
   17b04:	mov	r5, r0
   17b08:	cmp	r6, #0
   17b0c:	popne	{r4, r5, r6, r7, fp, pc}
   17b10:	b	17a5c <flatcc_json_printer_int16_enum_field@@Base+0x58>

00017b14 <flatcc_json_printer_int32_enum_field@@Base>:
   17b14:	push	{r4, r5, r6, r7, fp, lr}
   17b18:	add	fp, sp, #16
   17b1c:	mov	r4, r0
   17b20:	mov	r0, #4
   17b24:	ldr	r5, [r1, #8]
   17b28:	ldr	ip, [fp, #16]
   17b2c:	add	r6, r0, r2, lsl #1
   17b30:	ldr	r0, [fp, #12]
   17b34:	ldr	r2, [fp, #8]
   17b38:	cmp	r6, r5
   17b3c:	bge	17b5c <flatcc_json_printer_int32_enum_field@@Base+0x48>
   17b40:	ldr	r5, [r1, #4]
   17b44:	add	r6, r5, r6
   17b48:	ldrh	r6, [r6]
   17b4c:	cmp	r6, #0
   17b50:	ldrne	r5, [r1]
   17b54:	addsne	r6, r5, r6
   17b58:	bne	17bf8 <flatcc_json_printer_int32_enum_field@@Base+0xe4>
   17b5c:	ldrb	r6, [r4, #29]
   17b60:	mov	r5, r0
   17b64:	cmp	r6, #0
   17b68:	beq	17be0 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   17b6c:	ldr	r0, [r1, #16]
   17b70:	mov	r7, ip
   17b74:	add	r6, r0, #1
   17b78:	cmp	r0, #0
   17b7c:	str	r6, [r1, #16]
   17b80:	beq	17b98 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   17b84:	ldr	r0, [r4, #20]
   17b88:	add	r1, r0, #1
   17b8c:	str	r1, [r4, #20]
   17b90:	mov	r1, #44	; 0x2c
   17b94:	strb	r1, [r0]
   17b98:	mov	r0, r4
   17b9c:	mov	r1, r3
   17ba0:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   17ba4:	ldrb	r0, [r4, #27]
   17ba8:	cmp	r0, #0
   17bac:	beq	17be4 <flatcc_json_printer_int32_enum_field@@Base+0xd0>
   17bb0:	ldr	r1, [r4, #20]
   17bb4:	cmn	r5, #1
   17bb8:	lsr	r6, r5, #31
   17bbc:	movle	r0, #45	; 0x2d
   17bc0:	rsble	r5, r5, #0
   17bc4:	strble	r0, [r1], #1
   17bc8:	mov	r0, r5
   17bcc:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   17bd0:	ldr	r1, [r4, #20]
   17bd4:	add	r0, r0, r6
   17bd8:	add	r0, r1, r0
   17bdc:	str	r0, [r4, #20]
   17be0:	pop	{r4, r5, r6, r7, fp, pc}
   17be4:	mov	r0, r4
   17be8:	mov	r1, r5
   17bec:	mov	r2, r7
   17bf0:	pop	{r4, r5, r6, r7, fp, lr}
   17bf4:	bx	r2
   17bf8:	ldr	r5, [r6]
   17bfc:	cmp	r5, r0
   17c00:	bne	17b6c <flatcc_json_printer_int32_enum_field@@Base+0x58>
   17c04:	ldrb	r6, [r4, #28]
   17c08:	mov	r5, r0
   17c0c:	cmp	r6, #0
   17c10:	popne	{r4, r5, r6, r7, fp, pc}
   17c14:	b	17b6c <flatcc_json_printer_int32_enum_field@@Base+0x58>

00017c18 <flatcc_json_printer_int64_enum_field@@Base>:
   17c18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17c1c:	add	fp, sp, #24
   17c20:	mov	r4, r0
   17c24:	mov	r0, #4
   17c28:	ldr	r5, [r1, #8]
   17c2c:	ldr	r6, [fp, #16]
   17c30:	ldr	r9, [fp, #24]
   17c34:	add	r7, r0, r2, lsl #1
   17c38:	ldr	r0, [fp, #20]
   17c3c:	ldr	r2, [fp, #8]
   17c40:	cmp	r7, r5
   17c44:	bge	17c64 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   17c48:	ldr	r5, [r1, #4]
   17c4c:	add	r7, r5, r7
   17c50:	ldrh	r7, [r7]
   17c54:	cmp	r7, #0
   17c58:	ldrne	r5, [r1]
   17c5c:	addsne	r7, r5, r7
   17c60:	bne	17d10 <flatcc_json_printer_int64_enum_field@@Base+0xf8>
   17c64:	ldrb	r7, [r4, #29]
   17c68:	mov	r8, r6
   17c6c:	cmp	r7, #0
   17c70:	mov	r7, r0
   17c74:	beq	17cf4 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   17c78:	ldr	r0, [r1, #16]
   17c7c:	add	r6, r0, #1
   17c80:	cmp	r0, #0
   17c84:	str	r6, [r1, #16]
   17c88:	beq	17ca0 <flatcc_json_printer_int64_enum_field@@Base+0x88>
   17c8c:	ldr	r0, [r4, #20]
   17c90:	add	r1, r0, #1
   17c94:	str	r1, [r4, #20]
   17c98:	mov	r1, #44	; 0x2c
   17c9c:	strb	r1, [r0]
   17ca0:	mov	r0, r4
   17ca4:	mov	r1, r3
   17ca8:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   17cac:	ldrb	r0, [r4, #27]
   17cb0:	cmp	r0, #0
   17cb4:	beq	17cf8 <flatcc_json_printer_int64_enum_field@@Base+0xe0>
   17cb8:	ldr	r2, [r4, #20]
   17cbc:	lsr	r5, r7, #31
   17cc0:	cmn	r7, #1
   17cc4:	bgt	17cd8 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   17cc8:	mov	r0, #45	; 0x2d
   17ccc:	rsbs	r8, r8, #0
   17cd0:	strb	r0, [r2], #1
   17cd4:	rsc	r7, r7, #0
   17cd8:	mov	r0, r8
   17cdc:	mov	r1, r7
   17ce0:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   17ce4:	ldr	r1, [r4, #20]
   17ce8:	add	r0, r0, r5
   17cec:	add	r0, r1, r0
   17cf0:	str	r0, [r4, #20]
   17cf4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17cf8:	mov	r0, r4
   17cfc:	mov	r2, r8
   17d00:	mov	r3, r7
   17d04:	mov	r1, r9
   17d08:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17d0c:	bx	r1
   17d10:	ldr	r8, [r7]
   17d14:	ldr	r7, [r7, #4]
   17d18:	eor	ip, r7, r0
   17d1c:	eor	r5, r8, r6
   17d20:	orrs	r5, r5, ip
   17d24:	bne	17c78 <flatcc_json_printer_int64_enum_field@@Base+0x60>
   17d28:	ldrb	r7, [r4, #28]
   17d2c:	mov	r8, r6
   17d30:	cmp	r7, #0
   17d34:	mov	r7, r0
   17d38:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   17d3c:	b	17c78 <flatcc_json_printer_int64_enum_field@@Base+0x60>

00017d40 <flatcc_json_printer_bool_enum_field@@Base>:
   17d40:	push	{r4, r5, r6, r7, fp, lr}
   17d44:	add	fp, sp, #16
   17d48:	mov	r4, r0
   17d4c:	mov	r0, #4
   17d50:	ldr	r7, [fp, #16]
   17d54:	ldr	ip, [fp, #12]
   17d58:	add	r5, r0, r2, lsl #1
   17d5c:	ldr	r0, [r1, #8]
   17d60:	ldr	r2, [fp, #8]
   17d64:	cmp	r5, r0
   17d68:	bge	17d88 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   17d6c:	ldr	r0, [r1, #4]
   17d70:	add	r0, r0, r5
   17d74:	ldrh	r5, [r0]
   17d78:	cmp	r5, #0
   17d7c:	ldrne	r0, [r1]
   17d80:	addsne	r5, r0, r5
   17d84:	bne	17e3c <flatcc_json_printer_bool_enum_field@@Base+0xfc>
   17d88:	ldrb	r0, [r4, #29]
   17d8c:	mov	r6, ip
   17d90:	cmp	r0, #0
   17d94:	beq	17e38 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   17d98:	ldr	r0, [r1, #16]
   17d9c:	add	r5, r0, #1
   17da0:	cmp	r0, #0
   17da4:	str	r5, [r1, #16]
   17da8:	beq	17dc0 <flatcc_json_printer_bool_enum_field@@Base+0x80>
   17dac:	ldr	r0, [r4, #20]
   17db0:	add	r1, r0, #1
   17db4:	str	r1, [r4, #20]
   17db8:	mov	r1, #44	; 0x2c
   17dbc:	strb	r1, [r0]
   17dc0:	mov	r0, r4
   17dc4:	mov	r1, r3
   17dc8:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   17dcc:	ldrb	r0, [r4, #27]
   17dd0:	cmp	r0, #0
   17dd4:	beq	17e00 <flatcc_json_printer_bool_enum_field@@Base+0xc0>
   17dd8:	ldr	r0, [r4, #20]
   17ddc:	cmp	r6, #0
   17de0:	beq	17e14 <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   17de4:	mov	r1, #0
   17de8:	strb	r1, [r0, #4]
   17dec:	movw	r1, #29300	; 0x7274
   17df0:	movt	r1, #25973	; 0x6575
   17df4:	str	r1, [r0]
   17df8:	mov	r0, #4
   17dfc:	b	17e2c <flatcc_json_printer_bool_enum_field@@Base+0xec>
   17e00:	mov	r0, r4
   17e04:	mov	r1, r6
   17e08:	mov	r2, r7
   17e0c:	pop	{r4, r5, r6, r7, fp, lr}
   17e10:	bx	r2
   17e14:	mov	r1, #101	; 0x65
   17e18:	strh	r1, [r0, #4]
   17e1c:	movw	r1, #24934	; 0x6166
   17e20:	movt	r1, #29548	; 0x736c
   17e24:	str	r1, [r0]
   17e28:	mov	r0, #5
   17e2c:	ldr	r1, [r4, #20]
   17e30:	add	r0, r1, r0
   17e34:	str	r0, [r4, #20]
   17e38:	pop	{r4, r5, r6, r7, fp, pc}
   17e3c:	ldrb	r6, [r5]
   17e40:	cmp	r6, ip
   17e44:	bne	17d98 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   17e48:	ldrb	r0, [r4, #28]
   17e4c:	mov	r6, ip
   17e50:	cmp	r0, #0
   17e54:	popne	{r4, r5, r6, r7, fp, pc}
   17e58:	b	17d98 <flatcc_json_printer_bool_enum_field@@Base+0x58>

00017e5c <flatcc_json_printer_uint8_struct_field@@Base>:
   17e5c:	push	{r4, r5, r6, sl, fp, lr}
   17e60:	add	fp, sp, #16
   17e64:	mov	r4, r1
   17e68:	ldrb	r6, [r2, r3]
   17e6c:	ldr	r2, [fp, #12]
   17e70:	ldr	r1, [fp, #8]
   17e74:	mov	r5, r0
   17e78:	cmp	r4, #0
   17e7c:	beq	17e94 <flatcc_json_printer_uint8_struct_field@@Base+0x38>
   17e80:	ldr	r0, [r5, #20]
   17e84:	add	r3, r0, #1
   17e88:	str	r3, [r5, #20]
   17e8c:	mov	r3, #44	; 0x2c
   17e90:	strb	r3, [r0]
   17e94:	mov	r0, r5
   17e98:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   17e9c:	ldr	r0, [r5, #20]
   17ea0:	mov	r1, #0
   17ea4:	cmp	r6, #100	; 0x64
   17ea8:	bcc	17ef4 <flatcc_json_printer_uint8_struct_field@@Base+0x98>
   17eac:	strb	r1, [r0, #3]
   17eb0:	movw	r1, #34079	; 0x851f
   17eb4:	movt	r1, #20971	; 0x51eb
   17eb8:	umull	r1, r2, r6, r1
   17ebc:	mov	r1, #48	; 0x30
   17ec0:	orr	r1, r1, r2, lsr #5
   17ec4:	strb	r1, [r0]
   17ec8:	lsr	r1, r2, #5
   17ecc:	mov	r2, #100	; 0x64
   17ed0:	mls	r1, r1, r2, r6
   17ed4:	ldr	r2, [pc, #120]	; 17f54 <flatcc_json_printer_uint8_struct_field@@Base+0xf8>
   17ed8:	uxtb	r1, r1
   17edc:	add	r2, pc, r2
   17ee0:	add	r1, r2, r1, lsl #1
   17ee4:	ldrh	r1, [r1]
   17ee8:	strh	r1, [r0, #1]
   17eec:	mov	r0, #3
   17ef0:	b	17f44 <flatcc_json_printer_uint8_struct_field@@Base+0xe8>
   17ef4:	cmp	r6, #10
   17ef8:	bcc	17f34 <flatcc_json_printer_uint8_struct_field@@Base+0xd8>
   17efc:	strb	r1, [r0, #2]
   17f00:	movw	r1, #34079	; 0x851f
   17f04:	movt	r1, #20971	; 0x51eb
   17f08:	umull	r1, r2, r6, r1
   17f0c:	lsr	r1, r2, #5
   17f10:	mov	r2, #100	; 0x64
   17f14:	mls	r1, r1, r2, r6
   17f18:	ldr	r2, [pc, #56]	; 17f58 <flatcc_json_printer_uint8_struct_field@@Base+0xfc>
   17f1c:	add	r2, pc, r2
   17f20:	add	r1, r2, r1, lsl #1
   17f24:	ldrh	r1, [r1]
   17f28:	strh	r1, [r0]
   17f2c:	mov	r0, #2
   17f30:	b	17f44 <flatcc_json_printer_uint8_struct_field@@Base+0xe8>
   17f34:	strb	r1, [r0, #1]
   17f38:	add	r1, r6, #48	; 0x30
   17f3c:	strb	r1, [r0]
   17f40:	mov	r0, #1
   17f44:	ldr	r1, [r5, #20]
   17f48:	add	r0, r1, r0
   17f4c:	str	r0, [r5, #20]
   17f50:	pop	{r4, r5, r6, sl, fp, pc}
   17f54:			; <UNDEFINED> instruction: 0x00009ebe
   17f58:	andeq	r9, r0, lr, ror lr

00017f5c <flatcc_json_printer_uint16_struct_field@@Base>:
   17f5c:	push	{r4, r5, r6, sl, fp, lr}
   17f60:	add	fp, sp, #16
   17f64:	mov	r4, r0
   17f68:	add	r0, r2, r3
   17f6c:	mov	r5, r1
   17f70:	ldr	r2, [fp, #12]
   17f74:	ldr	r1, [fp, #8]
   17f78:	ldrh	r6, [r0]
   17f7c:	cmp	r5, #0
   17f80:	beq	17f98 <flatcc_json_printer_uint16_struct_field@@Base+0x3c>
   17f84:	ldr	r0, [r4, #20]
   17f88:	add	r3, r0, #1
   17f8c:	str	r3, [r4, #20]
   17f90:	mov	r3, #44	; 0x2c
   17f94:	strb	r3, [r0]
   17f98:	mov	r0, r4
   17f9c:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   17fa0:	ldr	r1, [r4, #20]
   17fa4:	mov	r0, r6
   17fa8:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   17fac:	ldr	r1, [r4, #20]
   17fb0:	add	r0, r1, r0
   17fb4:	str	r0, [r4, #20]
   17fb8:	pop	{r4, r5, r6, sl, fp, pc}

00017fbc <flatcc_json_printer_uint32_struct_field@@Base>:
   17fbc:	push	{r4, r5, r6, sl, fp, lr}
   17fc0:	add	fp, sp, #16
   17fc4:	mov	r5, r1
   17fc8:	ldr	r6, [r2, r3]
   17fcc:	ldr	r2, [fp, #12]
   17fd0:	ldr	r1, [fp, #8]
   17fd4:	mov	r4, r0
   17fd8:	cmp	r5, #0
   17fdc:	beq	17ff4 <flatcc_json_printer_uint32_struct_field@@Base+0x38>
   17fe0:	ldr	r0, [r4, #20]
   17fe4:	add	r3, r0, #1
   17fe8:	str	r3, [r4, #20]
   17fec:	mov	r3, #44	; 0x2c
   17ff0:	strb	r3, [r0]
   17ff4:	mov	r0, r4
   17ff8:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   17ffc:	ldr	r1, [r4, #20]
   18000:	mov	r0, r6
   18004:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   18008:	ldr	r1, [r4, #20]
   1800c:	add	r0, r1, r0
   18010:	str	r0, [r4, #20]
   18014:	pop	{r4, r5, r6, sl, fp, pc}

00018018 <flatcc_json_printer_uint64_struct_field@@Base>:
   18018:	push	{r4, r5, r6, r7, fp, lr}
   1801c:	add	fp, sp, #16
   18020:	ldr	r7, [r2, r3]!
   18024:	mov	r5, r1
   18028:	ldr	r1, [fp, #8]
   1802c:	mov	r4, r0
   18030:	cmp	r5, #0
   18034:	ldr	r6, [r2, #4]
   18038:	ldr	r2, [fp, #12]
   1803c:	beq	18054 <flatcc_json_printer_uint64_struct_field@@Base+0x3c>
   18040:	ldr	r0, [r4, #20]
   18044:	add	r3, r0, #1
   18048:	str	r3, [r4, #20]
   1804c:	mov	r3, #44	; 0x2c
   18050:	strb	r3, [r0]
   18054:	mov	r0, r4
   18058:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1805c:	ldr	r2, [r4, #20]
   18060:	mov	r0, r7
   18064:	mov	r1, r6
   18068:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   1806c:	ldr	r1, [r4, #20]
   18070:	add	r0, r1, r0
   18074:	str	r0, [r4, #20]
   18078:	pop	{r4, r5, r6, r7, fp, pc}

0001807c <flatcc_json_printer_int8_struct_field@@Base>:
   1807c:	push	{r4, r5, r6, sl, fp, lr}
   18080:	add	fp, sp, #16
   18084:	mov	r5, r0
   18088:	add	r0, r2, r3
   1808c:	mov	r4, r1
   18090:	ldr	r2, [fp, #12]
   18094:	ldr	r1, [fp, #8]
   18098:	ldrsb	r6, [r0]
   1809c:	cmp	r4, #0
   180a0:	beq	180b8 <flatcc_json_printer_int8_struct_field@@Base+0x3c>
   180a4:	ldr	r0, [r5, #20]
   180a8:	add	r3, r0, #1
   180ac:	str	r3, [r5, #20]
   180b0:	mov	r3, #44	; 0x2c
   180b4:	strb	r3, [r0]
   180b8:	mov	r0, r5
   180bc:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   180c0:	ldr	r0, [r5, #20]
   180c4:	cmn	r6, #1
   180c8:	uxtb	r1, r6
   180cc:	movle	r2, #45	; 0x2d
   180d0:	rsble	r6, r6, #0
   180d4:	lsr	r1, r1, #7
   180d8:	strble	r2, [r0], #1
   180dc:	uxtb	r2, r6
   180e0:	cmp	r2, #100	; 0x64
   180e4:	bcc	18134 <flatcc_json_printer_int8_struct_field@@Base+0xb8>
   180e8:	mov	r3, #0
   180ec:	strb	r3, [r0, #3]
   180f0:	movw	r3, #34079	; 0x851f
   180f4:	movt	r3, #20971	; 0x51eb
   180f8:	umull	r3, r6, r2, r3
   180fc:	mov	r3, #48	; 0x30
   18100:	orr	r3, r3, r6, lsr #5
   18104:	strb	r3, [r0]
   18108:	lsr	r3, r6, #5
   1810c:	mov	r6, #100	; 0x64
   18110:	mls	r2, r3, r6, r2
   18114:	ldr	r3, [pc, #132]	; 181a0 <flatcc_json_printer_int8_struct_field@@Base+0x124>
   18118:	uxtb	r2, r2
   1811c:	add	r3, pc, r3
   18120:	add	r2, r3, r2, lsl #1
   18124:	ldrh	r2, [r2]
   18128:	strh	r2, [r0, #1]
   1812c:	mov	r0, #3
   18130:	b	1818c <flatcc_json_printer_int8_struct_field@@Base+0x110>
   18134:	cmp	r2, #10
   18138:	bcc	18178 <flatcc_json_printer_int8_struct_field@@Base+0xfc>
   1813c:	mov	r3, #0
   18140:	strb	r3, [r0, #2]
   18144:	movw	r3, #34079	; 0x851f
   18148:	movt	r3, #20971	; 0x51eb
   1814c:	umull	r3, r6, r2, r3
   18150:	lsr	r3, r6, #5
   18154:	mov	r6, #100	; 0x64
   18158:	mls	r2, r3, r6, r2
   1815c:	ldr	r3, [pc, #64]	; 181a4 <flatcc_json_printer_int8_struct_field@@Base+0x128>
   18160:	add	r3, pc, r3
   18164:	add	r2, r3, r2, lsl #1
   18168:	ldrh	r2, [r2]
   1816c:	strh	r2, [r0]
   18170:	mov	r0, #2
   18174:	b	1818c <flatcc_json_printer_int8_struct_field@@Base+0x110>
   18178:	mov	r2, #0
   1817c:	strb	r2, [r0, #1]
   18180:	add	r2, r6, #48	; 0x30
   18184:	strb	r2, [r0]
   18188:	mov	r0, #1
   1818c:	add	r0, r0, r1
   18190:	ldr	r1, [r5, #20]
   18194:	add	r0, r1, r0
   18198:	str	r0, [r5, #20]
   1819c:	pop	{r4, r5, r6, sl, fp, pc}
   181a0:	andeq	r9, r0, lr, ror ip
   181a4:	andeq	r9, r0, sl, lsr ip

000181a8 <flatcc_json_printer_int16_struct_field@@Base>:
   181a8:	push	{r4, r5, r6, sl, fp, lr}
   181ac:	add	fp, sp, #16
   181b0:	mov	r4, r0
   181b4:	add	r0, r2, r3
   181b8:	mov	ip, r1
   181bc:	ldr	r2, [fp, #12]
   181c0:	ldr	r1, [fp, #8]
   181c4:	ldrsh	r5, [r0]
   181c8:	cmp	ip, #0
   181cc:	beq	181e4 <flatcc_json_printer_int16_struct_field@@Base+0x3c>
   181d0:	ldr	r0, [r4, #20]
   181d4:	add	r3, r0, #1
   181d8:	str	r3, [r4, #20]
   181dc:	mov	r3, #44	; 0x2c
   181e0:	strb	r3, [r0]
   181e4:	mov	r0, r4
   181e8:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   181ec:	ldr	r1, [r4, #20]
   181f0:	uxth	r0, r5
   181f4:	cmn	r5, #1
   181f8:	rsble	r5, r5, #0
   181fc:	lsr	r6, r0, #15
   18200:	movle	r0, #45	; 0x2d
   18204:	strble	r0, [r1], #1
   18208:	uxth	r0, r5
   1820c:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   18210:	ldr	r1, [r4, #20]
   18214:	add	r0, r0, r6
   18218:	add	r0, r1, r0
   1821c:	str	r0, [r4, #20]
   18220:	pop	{r4, r5, r6, sl, fp, pc}

00018224 <flatcc_json_printer_int32_struct_field@@Base>:
   18224:	push	{r4, r5, r6, sl, fp, lr}
   18228:	add	fp, sp, #16
   1822c:	mov	ip, r1
   18230:	ldr	r5, [r2, r3]
   18234:	ldr	r2, [fp, #12]
   18238:	ldr	r1, [fp, #8]
   1823c:	mov	r4, r0
   18240:	cmp	ip, #0
   18244:	beq	1825c <flatcc_json_printer_int32_struct_field@@Base+0x38>
   18248:	ldr	r0, [r4, #20]
   1824c:	add	r3, r0, #1
   18250:	str	r3, [r4, #20]
   18254:	mov	r3, #44	; 0x2c
   18258:	strb	r3, [r0]
   1825c:	mov	r0, r4
   18260:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   18264:	ldr	r1, [r4, #20]
   18268:	cmn	r5, #1
   1826c:	lsr	r6, r5, #31
   18270:	movle	r0, #45	; 0x2d
   18274:	rsble	r5, r5, #0
   18278:	strble	r0, [r1], #1
   1827c:	mov	r0, r5
   18280:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   18284:	ldr	r1, [r4, #20]
   18288:	add	r0, r0, r6
   1828c:	add	r0, r1, r0
   18290:	str	r0, [r4, #20]
   18294:	pop	{r4, r5, r6, sl, fp, pc}

00018298 <flatcc_json_printer_int64_struct_field@@Base>:
   18298:	push	{r4, r5, r6, r7, fp, lr}
   1829c:	add	fp, sp, #16
   182a0:	ldr	r7, [r2, r3]!
   182a4:	mov	r5, r1
   182a8:	ldr	r1, [fp, #8]
   182ac:	mov	r4, r0
   182b0:	cmp	r5, #0
   182b4:	ldr	r6, [r2, #4]
   182b8:	ldr	r2, [fp, #12]
   182bc:	beq	182d4 <flatcc_json_printer_int64_struct_field@@Base+0x3c>
   182c0:	ldr	r0, [r4, #20]
   182c4:	add	r3, r0, #1
   182c8:	str	r3, [r4, #20]
   182cc:	mov	r3, #44	; 0x2c
   182d0:	strb	r3, [r0]
   182d4:	mov	r0, r4
   182d8:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   182dc:	ldr	r2, [r4, #20]
   182e0:	lsr	r5, r6, #31
   182e4:	cmn	r6, #1
   182e8:	bgt	182fc <flatcc_json_printer_int64_struct_field@@Base+0x64>
   182ec:	mov	r0, #45	; 0x2d
   182f0:	rsbs	r7, r7, #0
   182f4:	strb	r0, [r2], #1
   182f8:	rsc	r6, r6, #0
   182fc:	mov	r0, r7
   18300:	mov	r1, r6
   18304:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   18308:	ldr	r1, [r4, #20]
   1830c:	add	r0, r0, r5
   18310:	add	r0, r1, r0
   18314:	str	r0, [r4, #20]
   18318:	pop	{r4, r5, r6, r7, fp, pc}

0001831c <flatcc_json_printer_bool_struct_field@@Base>:
   1831c:	push	{r4, r5, fp, lr}
   18320:	add	fp, sp, #8
   18324:	mov	ip, r1
   18328:	ldrb	r5, [r2, r3]
   1832c:	ldr	r2, [fp, #12]
   18330:	ldr	r1, [fp, #8]
   18334:	mov	r4, r0
   18338:	cmp	ip, #0
   1833c:	beq	18354 <flatcc_json_printer_bool_struct_field@@Base+0x38>
   18340:	ldr	r0, [r4, #20]
   18344:	add	r3, r0, #1
   18348:	str	r3, [r4, #20]
   1834c:	mov	r3, #44	; 0x2c
   18350:	strb	r3, [r0]
   18354:	mov	r0, r4
   18358:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1835c:	ldr	r0, [r4, #20]
   18360:	cmp	r5, #0
   18364:	beq	18384 <flatcc_json_printer_bool_struct_field@@Base+0x68>
   18368:	mov	r1, #0
   1836c:	strb	r1, [r0, #4]
   18370:	movw	r1, #29300	; 0x7274
   18374:	movt	r1, #25973	; 0x6575
   18378:	str	r1, [r0]
   1837c:	mov	r0, #4
   18380:	b	1839c <flatcc_json_printer_bool_struct_field@@Base+0x80>
   18384:	mov	r1, #101	; 0x65
   18388:	strh	r1, [r0, #4]
   1838c:	movw	r1, #24934	; 0x6166
   18390:	movt	r1, #29548	; 0x736c
   18394:	str	r1, [r0]
   18398:	mov	r0, #5
   1839c:	ldr	r1, [r4, #20]
   183a0:	add	r0, r1, r0
   183a4:	str	r0, [r4, #20]
   183a8:	pop	{r4, r5, fp, pc}

000183ac <flatcc_json_printer_float_struct_field@@Base>:
   183ac:	push	{r4, sl, fp, lr}
   183b0:	add	fp, sp, #8
   183b4:	vpush	{d8}
   183b8:	mov	r4, r0
   183bc:	add	r0, r2, r3
   183c0:	mov	ip, r1
   183c4:	ldr	r2, [fp, #12]
   183c8:	ldr	r1, [fp, #8]
   183cc:	vldr	s16, [r0]
   183d0:	cmp	ip, #0
   183d4:	beq	183ec <flatcc_json_printer_float_struct_field@@Base+0x40>
   183d8:	ldr	r0, [r4, #20]
   183dc:	add	r3, r0, #1
   183e0:	str	r3, [r4, #20]
   183e4:	mov	r3, #44	; 0x2c
   183e8:	strb	r3, [r0]
   183ec:	mov	r0, r4
   183f0:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   183f4:	vcvt.f64.f32	d0, s16
   183f8:	ldr	r0, [r4, #20]
   183fc:	bl	14170 <flatcc_json_printer_fmt_float@@Base+0xc>
   18400:	ldr	r1, [r4, #20]
   18404:	add	r0, r1, r0
   18408:	str	r0, [r4, #20]
   1840c:	vpop	{d8}
   18410:	pop	{r4, sl, fp, pc}

00018414 <flatcc_json_printer_double_struct_field@@Base>:
   18414:	push	{r4, sl, fp, lr}
   18418:	add	fp, sp, #8
   1841c:	vpush	{d8}
   18420:	mov	r4, r0
   18424:	add	r0, r2, r3
   18428:	mov	ip, r1
   1842c:	ldr	r2, [fp, #12]
   18430:	ldr	r1, [fp, #8]
   18434:	vldr	d8, [r0]
   18438:	cmp	ip, #0
   1843c:	beq	18454 <flatcc_json_printer_double_struct_field@@Base+0x40>
   18440:	ldr	r0, [r4, #20]
   18444:	add	r3, r0, #1
   18448:	str	r3, [r4, #20]
   1844c:	mov	r3, #44	; 0x2c
   18450:	strb	r3, [r0]
   18454:	mov	r0, r4
   18458:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1845c:	ldr	r0, [r4, #20]
   18460:	vorr	d0, d8, d8
   18464:	bl	14170 <flatcc_json_printer_fmt_float@@Base+0xc>
   18468:	ldr	r1, [r4, #20]
   1846c:	add	r0, r1, r0
   18470:	str	r0, [r4, #20]
   18474:	vpop	{d8}
   18478:	pop	{r4, sl, fp, pc}

0001847c <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   1847c:	push	{r4, r5, r6, r7, fp, lr}
   18480:	add	fp, sp, #16
   18484:	add	r7, fp, #8
   18488:	mov	r5, r1
   1848c:	ldrb	r6, [r2, r3]
   18490:	mov	r4, r0
   18494:	ldm	r7, {r1, r2, r7}
   18498:	cmp	r5, #0
   1849c:	beq	184b4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x38>
   184a0:	ldr	r0, [r4, #20]
   184a4:	add	r3, r0, #1
   184a8:	str	r3, [r4, #20]
   184ac:	mov	r3, #44	; 0x2c
   184b0:	strb	r3, [r0]
   184b4:	mov	r0, r4
   184b8:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   184bc:	ldrb	r0, [r4, #27]
   184c0:	cmp	r0, #0
   184c4:	beq	18520 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xa4>
   184c8:	ldr	r0, [r4, #20]
   184cc:	mov	r1, #0
   184d0:	cmp	r6, #100	; 0x64
   184d4:	bcc	18534 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb8>
   184d8:	strb	r1, [r0, #3]
   184dc:	movw	r1, #34079	; 0x851f
   184e0:	movt	r1, #20971	; 0x51eb
   184e4:	umull	r1, r2, r6, r1
   184e8:	mov	r1, #48	; 0x30
   184ec:	orr	r1, r1, r2, lsr #5
   184f0:	strb	r1, [r0]
   184f4:	lsr	r1, r2, #5
   184f8:	mov	r2, #100	; 0x64
   184fc:	mls	r1, r1, r2, r6
   18500:	ldr	r2, [pc, #140]	; 18594 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x118>
   18504:	uxtb	r1, r1
   18508:	add	r2, pc, r2
   1850c:	add	r1, r2, r1, lsl #1
   18510:	ldrh	r1, [r1]
   18514:	strh	r1, [r0, #1]
   18518:	mov	r0, #3
   1851c:	b	18584 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x108>
   18520:	mov	r0, r4
   18524:	mov	r1, r6
   18528:	mov	r2, r7
   1852c:	pop	{r4, r5, r6, r7, fp, lr}
   18530:	bx	r2
   18534:	cmp	r6, #10
   18538:	bcc	18574 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xf8>
   1853c:	strb	r1, [r0, #2]
   18540:	movw	r1, #34079	; 0x851f
   18544:	movt	r1, #20971	; 0x51eb
   18548:	umull	r1, r2, r6, r1
   1854c:	lsr	r1, r2, #5
   18550:	mov	r2, #100	; 0x64
   18554:	mls	r1, r1, r2, r6
   18558:	ldr	r2, [pc, #56]	; 18598 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x11c>
   1855c:	add	r2, pc, r2
   18560:	add	r1, r2, r1, lsl #1
   18564:	ldrh	r1, [r1]
   18568:	strh	r1, [r0]
   1856c:	mov	r0, #2
   18570:	b	18584 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x108>
   18574:	strb	r1, [r0, #1]
   18578:	add	r1, r6, #48	; 0x30
   1857c:	strb	r1, [r0]
   18580:	mov	r0, #1
   18584:	ldr	r1, [r4, #20]
   18588:	add	r0, r1, r0
   1858c:	str	r0, [r4, #20]
   18590:	pop	{r4, r5, r6, r7, fp, pc}
   18594:	muleq	r0, r2, r8
   18598:	andeq	r9, r0, lr, lsr r8

0001859c <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   1859c:	push	{r4, r5, r6, r7, fp, lr}
   185a0:	add	fp, sp, #16
   185a4:	mov	r4, r0
   185a8:	add	r0, r2, r3
   185ac:	add	r7, fp, #8
   185b0:	mov	r5, r1
   185b4:	ldrh	r6, [r0]
   185b8:	ldm	r7, {r1, r2, r7}
   185bc:	cmp	r5, #0
   185c0:	beq	185d8 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x3c>
   185c4:	ldr	r0, [r4, #20]
   185c8:	add	r3, r0, #1
   185cc:	str	r3, [r4, #20]
   185d0:	mov	r3, #44	; 0x2c
   185d4:	strb	r3, [r0]
   185d8:	mov	r0, r4
   185dc:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   185e0:	ldrb	r0, [r4, #27]
   185e4:	cmp	r0, #0
   185e8:	beq	18608 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x6c>
   185ec:	ldr	r1, [r4, #20]
   185f0:	mov	r0, r6
   185f4:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   185f8:	ldr	r1, [r4, #20]
   185fc:	add	r0, r1, r0
   18600:	str	r0, [r4, #20]
   18604:	pop	{r4, r5, r6, r7, fp, pc}
   18608:	mov	r0, r4
   1860c:	mov	r1, r6
   18610:	mov	r2, r7
   18614:	pop	{r4, r5, r6, r7, fp, lr}
   18618:	bx	r2

0001861c <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   1861c:	push	{r4, r5, r6, r7, fp, lr}
   18620:	add	fp, sp, #16
   18624:	add	r7, fp, #8
   18628:	mov	r5, r1
   1862c:	ldr	r6, [r2, r3]
   18630:	mov	r4, r0
   18634:	ldm	r7, {r1, r2, r7}
   18638:	cmp	r5, #0
   1863c:	beq	18654 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x38>
   18640:	ldr	r0, [r4, #20]
   18644:	add	r3, r0, #1
   18648:	str	r3, [r4, #20]
   1864c:	mov	r3, #44	; 0x2c
   18650:	strb	r3, [r0]
   18654:	mov	r0, r4
   18658:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1865c:	ldrb	r0, [r4, #27]
   18660:	cmp	r0, #0
   18664:	beq	18684 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x68>
   18668:	ldr	r1, [r4, #20]
   1866c:	mov	r0, r6
   18670:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   18674:	ldr	r1, [r4, #20]
   18678:	add	r0, r1, r0
   1867c:	str	r0, [r4, #20]
   18680:	pop	{r4, r5, r6, r7, fp, pc}
   18684:	mov	r0, r4
   18688:	mov	r1, r6
   1868c:	mov	r2, r7
   18690:	pop	{r4, r5, r6, r7, fp, lr}
   18694:	bx	r2

00018698 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   18698:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1869c:	add	fp, sp, #24
   186a0:	ldr	r6, [r2, r3]!
   186a4:	add	r8, fp, #8
   186a8:	mov	r5, r1
   186ac:	mov	r4, r0
   186b0:	cmp	r5, #0
   186b4:	ldr	r7, [r2, #4]
   186b8:	ldm	r8, {r1, r2, r8}
   186bc:	beq	186d4 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x3c>
   186c0:	ldr	r0, [r4, #20]
   186c4:	add	r3, r0, #1
   186c8:	str	r3, [r4, #20]
   186cc:	mov	r3, #44	; 0x2c
   186d0:	strb	r3, [r0]
   186d4:	mov	r0, r4
   186d8:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   186dc:	ldrb	r0, [r4, #27]
   186e0:	cmp	r0, #0
   186e4:	beq	18708 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   186e8:	ldr	r2, [r4, #20]
   186ec:	mov	r0, r6
   186f0:	mov	r1, r7
   186f4:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   186f8:	ldr	r1, [r4, #20]
   186fc:	add	r0, r1, r0
   18700:	str	r0, [r4, #20]
   18704:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18708:	mov	r0, r4
   1870c:	mov	r2, r6
   18710:	mov	r3, r7
   18714:	mov	r1, r8
   18718:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1871c:	bx	r1

00018720 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   18720:	push	{r4, r5, r6, r7, fp, lr}
   18724:	add	fp, sp, #16
   18728:	mov	r4, r0
   1872c:	add	r0, r2, r3
   18730:	add	r7, fp, #8
   18734:	mov	r5, r1
   18738:	ldrsb	r6, [r0]
   1873c:	ldm	r7, {r1, r2, r7}
   18740:	cmp	r5, #0
   18744:	beq	1875c <flatcc_json_printer_int8_enum_struct_field@@Base+0x3c>
   18748:	ldr	r0, [r4, #20]
   1874c:	add	r3, r0, #1
   18750:	str	r3, [r4, #20]
   18754:	mov	r3, #44	; 0x2c
   18758:	strb	r3, [r0]
   1875c:	mov	r0, r4
   18760:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   18764:	ldrb	r0, [r4, #27]
   18768:	cmp	r0, #0
   1876c:	beq	187e4 <flatcc_json_printer_int8_enum_struct_field@@Base+0xc4>
   18770:	ldr	r0, [r4, #20]
   18774:	cmn	r6, #1
   18778:	uxtb	r1, r6
   1877c:	movle	r2, #45	; 0x2d
   18780:	rsble	r6, r6, #0
   18784:	lsr	r1, r1, #7
   18788:	strble	r2, [r0], #1
   1878c:	uxtb	r2, r6
   18790:	cmp	r2, #100	; 0x64
   18794:	bcc	187f8 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd8>
   18798:	mov	r3, #0
   1879c:	strb	r3, [r0, #3]
   187a0:	movw	r3, #34079	; 0x851f
   187a4:	movt	r3, #20971	; 0x51eb
   187a8:	umull	r3, r6, r2, r3
   187ac:	mov	r3, #48	; 0x30
   187b0:	orr	r3, r3, r6, lsr #5
   187b4:	strb	r3, [r0]
   187b8:	lsr	r3, r6, #5
   187bc:	mov	r6, #100	; 0x64
   187c0:	mls	r2, r3, r6, r2
   187c4:	ldr	r3, [pc, #152]	; 18864 <flatcc_json_printer_int8_enum_struct_field@@Base+0x144>
   187c8:	uxtb	r2, r2
   187cc:	add	r3, pc, r3
   187d0:	add	r2, r3, r2, lsl #1
   187d4:	ldrh	r2, [r2]
   187d8:	strh	r2, [r0, #1]
   187dc:	mov	r0, #3
   187e0:	b	18850 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   187e4:	mov	r0, r4
   187e8:	mov	r1, r6
   187ec:	mov	r2, r7
   187f0:	pop	{r4, r5, r6, r7, fp, lr}
   187f4:	bx	r2
   187f8:	cmp	r2, #10
   187fc:	bcc	1883c <flatcc_json_printer_int8_enum_struct_field@@Base+0x11c>
   18800:	mov	r3, #0
   18804:	strb	r3, [r0, #2]
   18808:	movw	r3, #34079	; 0x851f
   1880c:	movt	r3, #20971	; 0x51eb
   18810:	umull	r3, r6, r2, r3
   18814:	lsr	r3, r6, #5
   18818:	mov	r6, #100	; 0x64
   1881c:	mls	r2, r3, r6, r2
   18820:	ldr	r3, [pc, #64]	; 18868 <flatcc_json_printer_int8_enum_struct_field@@Base+0x148>
   18824:	add	r3, pc, r3
   18828:	add	r2, r3, r2, lsl #1
   1882c:	ldrh	r2, [r2]
   18830:	strh	r2, [r0]
   18834:	mov	r0, #2
   18838:	b	18850 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   1883c:	mov	r2, #0
   18840:	strb	r2, [r0, #1]
   18844:	add	r2, r6, #48	; 0x30
   18848:	strb	r2, [r0]
   1884c:	mov	r0, #1
   18850:	add	r0, r0, r1
   18854:	ldr	r1, [r4, #20]
   18858:	add	r0, r1, r0
   1885c:	str	r0, [r4, #20]
   18860:	pop	{r4, r5, r6, r7, fp, pc}
   18864:	andeq	r9, r0, lr, asr #11
   18868:	andeq	r9, r0, r6, ror r5

0001886c <flatcc_json_printer_int16_enum_struct_field@@Base>:
   1886c:	push	{r4, r5, r6, r7, fp, lr}
   18870:	add	fp, sp, #16
   18874:	mov	r4, r0
   18878:	add	r0, r2, r3
   1887c:	add	r7, fp, #8
   18880:	mov	r5, r1
   18884:	ldrsh	r6, [r0]
   18888:	ldm	r7, {r1, r2, r7}
   1888c:	cmp	r5, #0
   18890:	beq	188a8 <flatcc_json_printer_int16_enum_struct_field@@Base+0x3c>
   18894:	ldr	r0, [r4, #20]
   18898:	add	r3, r0, #1
   1889c:	str	r3, [r4, #20]
   188a0:	mov	r3, #44	; 0x2c
   188a4:	strb	r3, [r0]
   188a8:	mov	r0, r4
   188ac:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   188b0:	ldrb	r0, [r4, #27]
   188b4:	cmp	r0, #0
   188b8:	beq	188f4 <flatcc_json_printer_int16_enum_struct_field@@Base+0x88>
   188bc:	ldr	r1, [r4, #20]
   188c0:	uxth	r0, r6
   188c4:	cmn	r6, #1
   188c8:	rsble	r6, r6, #0
   188cc:	lsr	r5, r0, #15
   188d0:	movle	r0, #45	; 0x2d
   188d4:	strble	r0, [r1], #1
   188d8:	uxth	r0, r6
   188dc:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   188e0:	ldr	r1, [r4, #20]
   188e4:	add	r0, r0, r5
   188e8:	add	r0, r1, r0
   188ec:	str	r0, [r4, #20]
   188f0:	pop	{r4, r5, r6, r7, fp, pc}
   188f4:	mov	r0, r4
   188f8:	mov	r1, r6
   188fc:	mov	r2, r7
   18900:	pop	{r4, r5, r6, r7, fp, lr}
   18904:	bx	r2

00018908 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   18908:	push	{r4, r5, r6, r7, fp, lr}
   1890c:	add	fp, sp, #16
   18910:	add	r7, fp, #8
   18914:	mov	r5, r1
   18918:	ldr	r6, [r2, r3]
   1891c:	mov	r4, r0
   18920:	ldm	r7, {r1, r2, r7}
   18924:	cmp	r5, #0
   18928:	beq	18940 <flatcc_json_printer_int32_enum_struct_field@@Base+0x38>
   1892c:	ldr	r0, [r4, #20]
   18930:	add	r3, r0, #1
   18934:	str	r3, [r4, #20]
   18938:	mov	r3, #44	; 0x2c
   1893c:	strb	r3, [r0]
   18940:	mov	r0, r4
   18944:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   18948:	ldrb	r0, [r4, #27]
   1894c:	cmp	r0, #0
   18950:	beq	18988 <flatcc_json_printer_int32_enum_struct_field@@Base+0x80>
   18954:	ldr	r1, [r4, #20]
   18958:	cmn	r6, #1
   1895c:	lsr	r5, r6, #31
   18960:	movle	r0, #45	; 0x2d
   18964:	rsble	r6, r6, #0
   18968:	strble	r0, [r1], #1
   1896c:	mov	r0, r6
   18970:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   18974:	ldr	r1, [r4, #20]
   18978:	add	r0, r0, r5
   1897c:	add	r0, r1, r0
   18980:	str	r0, [r4, #20]
   18984:	pop	{r4, r5, r6, r7, fp, pc}
   18988:	mov	r0, r4
   1898c:	mov	r1, r6
   18990:	mov	r2, r7
   18994:	pop	{r4, r5, r6, r7, fp, lr}
   18998:	bx	r2

0001899c <flatcc_json_printer_int64_enum_struct_field@@Base>:
   1899c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   189a0:	add	fp, sp, #24
   189a4:	ldr	r7, [r2, r3]!
   189a8:	add	r8, fp, #8
   189ac:	mov	r6, r1
   189b0:	mov	r4, r0
   189b4:	cmp	r6, #0
   189b8:	ldr	r5, [r2, #4]
   189bc:	ldm	r8, {r1, r2, r8}
   189c0:	beq	189d8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x3c>
   189c4:	ldr	r0, [r4, #20]
   189c8:	add	r3, r0, #1
   189cc:	str	r3, [r4, #20]
   189d0:	mov	r3, #44	; 0x2c
   189d4:	strb	r3, [r0]
   189d8:	mov	r0, r4
   189dc:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   189e0:	ldrb	r0, [r4, #27]
   189e4:	cmp	r0, #0
   189e8:	beq	18a2c <flatcc_json_printer_int64_enum_struct_field@@Base+0x90>
   189ec:	ldr	r2, [r4, #20]
   189f0:	lsr	r6, r5, #31
   189f4:	cmn	r5, #1
   189f8:	bgt	18a0c <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   189fc:	mov	r0, #45	; 0x2d
   18a00:	rsbs	r7, r7, #0
   18a04:	strb	r0, [r2], #1
   18a08:	rsc	r5, r5, #0
   18a0c:	mov	r0, r7
   18a10:	mov	r1, r5
   18a14:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   18a18:	ldr	r1, [r4, #20]
   18a1c:	add	r0, r0, r6
   18a20:	add	r0, r1, r0
   18a24:	str	r0, [r4, #20]
   18a28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18a2c:	mov	r0, r4
   18a30:	mov	r2, r7
   18a34:	mov	r3, r5
   18a38:	mov	r1, r8
   18a3c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18a40:	bx	r1

00018a44 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   18a44:	push	{r4, r5, r6, r7, fp, lr}
   18a48:	add	fp, sp, #16
   18a4c:	add	r7, fp, #8
   18a50:	mov	r5, r1
   18a54:	ldrb	r6, [r2, r3]
   18a58:	mov	r4, r0
   18a5c:	ldm	r7, {r1, r2, r7}
   18a60:	cmp	r5, #0
   18a64:	beq	18a7c <flatcc_json_printer_bool_enum_struct_field@@Base+0x38>
   18a68:	ldr	r0, [r4, #20]
   18a6c:	add	r3, r0, #1
   18a70:	str	r3, [r4, #20]
   18a74:	mov	r3, #44	; 0x2c
   18a78:	strb	r3, [r0]
   18a7c:	mov	r0, r4
   18a80:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   18a84:	ldrb	r0, [r4, #27]
   18a88:	cmp	r0, #0
   18a8c:	beq	18ab8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x74>
   18a90:	ldr	r0, [r4, #20]
   18a94:	cmp	r6, #0
   18a98:	beq	18acc <flatcc_json_printer_bool_enum_struct_field@@Base+0x88>
   18a9c:	mov	r1, #0
   18aa0:	strb	r1, [r0, #4]
   18aa4:	movw	r1, #29300	; 0x7274
   18aa8:	movt	r1, #25973	; 0x6575
   18aac:	str	r1, [r0]
   18ab0:	mov	r0, #4
   18ab4:	b	18ae4 <flatcc_json_printer_bool_enum_struct_field@@Base+0xa0>
   18ab8:	mov	r0, r4
   18abc:	mov	r1, r6
   18ac0:	mov	r2, r7
   18ac4:	pop	{r4, r5, r6, r7, fp, lr}
   18ac8:	bx	r2
   18acc:	mov	r1, #101	; 0x65
   18ad0:	strh	r1, [r0, #4]
   18ad4:	movw	r1, #24934	; 0x6166
   18ad8:	movt	r1, #29548	; 0x736c
   18adc:	str	r1, [r0]
   18ae0:	mov	r0, #5
   18ae4:	ldr	r1, [r4, #20]
   18ae8:	add	r0, r1, r0
   18aec:	str	r0, [r4, #20]
   18af0:	pop	{r4, r5, r6, r7, fp, pc}

00018af4 <flatcc_json_printer_utype_vector_field@@Base>:
   18af4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18af8:	add	fp, sp, #28
   18afc:	sub	sp, sp, #4
   18b00:	mov	r4, r0
   18b04:	mov	r0, #4
   18b08:	add	r0, r0, r2, lsl #1
   18b0c:	ldr	r2, [r1, #8]
   18b10:	cmp	r0, r2
   18b14:	bge	18b34 <flatcc_json_printer_utype_vector_field@@Base+0x40>
   18b18:	ldr	r2, [r1, #4]
   18b1c:	add	r0, r2, r0
   18b20:	ldrh	r0, [r0]
   18b24:	cmp	r0, #0
   18b28:	ldrne	r2, [r1]
   18b2c:	addsne	r9, r2, r0
   18b30:	bne	18b3c <flatcc_json_printer_utype_vector_field@@Base+0x48>
   18b34:	sub	sp, fp, #28
   18b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b3c:	ldr	r0, [r1, #16]
   18b40:	ldr	r2, [fp, #8]
   18b44:	add	r7, r0, #1
   18b48:	cmp	r0, #0
   18b4c:	str	r7, [r1, #16]
   18b50:	beq	18b68 <flatcc_json_printer_utype_vector_field@@Base+0x74>
   18b54:	ldr	r0, [r4, #20]
   18b58:	add	r1, r0, #1
   18b5c:	str	r1, [r4, #20]
   18b60:	mov	r1, #44	; 0x2c
   18b64:	strb	r1, [r0]
   18b68:	ldr	r0, [r9]
   18b6c:	mov	r1, r3
   18b70:	ldr	r8, [r9, r0]!
   18b74:	mov	r0, r4
   18b78:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   18b7c:	ldr	r1, [r4, #32]
   18b80:	ldr	r0, [r4, #20]
   18b84:	cmp	r8, #0
   18b88:	add	r1, r1, #1
   18b8c:	str	r1, [r4, #32]
   18b90:	add	r1, r0, #1
   18b94:	str	r1, [r4, #20]
   18b98:	mov	r1, #91	; 0x5b
   18b9c:	strb	r1, [r0]
   18ba0:	beq	18f10 <flatcc_json_printer_utype_vector_field@@Base+0x41c>
   18ba4:	ldrb	r1, [r4, #25]
   18ba8:	ldr	r0, [r4, #20]
   18bac:	cmp	r1, #0
   18bb0:	beq	18c6c <flatcc_json_printer_utype_vector_field@@Base+0x178>
   18bb4:	add	r1, r0, #1
   18bb8:	str	r1, [r4, #20]
   18bbc:	mov	r1, #10
   18bc0:	strb	r1, [r0]
   18bc4:	ldr	r0, [r4, #20]
   18bc8:	ldrb	r2, [r4, #25]
   18bcc:	ldr	r3, [r4, #32]
   18bd0:	ldr	r1, [r4, #16]
   18bd4:	mla	r7, r3, r2, r0
   18bd8:	mul	r5, r3, r2
   18bdc:	cmp	r7, r1
   18be0:	bls	18c50 <flatcc_json_printer_utype_vector_field@@Base+0x15c>
   18be4:	cmp	r0, r1
   18be8:	bcc	18c04 <flatcc_json_printer_utype_vector_field@@Base+0x110>
   18bec:	ldr	r2, [r4, #44]	; 0x2c
   18bf0:	mov	r0, r4
   18bf4:	mov	r1, #0
   18bf8:	blx	r2
   18bfc:	ldr	r1, [r4, #16]
   18c00:	ldr	r0, [r4, #20]
   18c04:	sub	r6, r1, r0
   18c08:	cmp	r6, r5
   18c0c:	bcs	18c50 <flatcc_json_printer_utype_vector_field@@Base+0x15c>
   18c10:	mov	r1, #32
   18c14:	mov	r2, r6
   18c18:	bl	1293c <memset@plt>
   18c1c:	ldr	r0, [r4, #20]
   18c20:	ldr	r2, [r4, #44]	; 0x2c
   18c24:	mov	r1, #0
   18c28:	add	r0, r0, r6
   18c2c:	str	r0, [r4, #20]
   18c30:	mov	r0, r4
   18c34:	blx	r2
   18c38:	ldr	r1, [r4, #16]
   18c3c:	ldr	r0, [r4, #20]
   18c40:	sub	r5, r5, r6
   18c44:	sub	r6, r1, r0
   18c48:	cmp	r5, r6
   18c4c:	bhi	18c10 <flatcc_json_printer_utype_vector_field@@Base+0x11c>
   18c50:	mov	r1, #32
   18c54:	mov	r2, r5
   18c58:	bl	1293c <memset@plt>
   18c5c:	ldr	r0, [r4, #20]
   18c60:	add	r0, r0, r5
   18c64:	str	r0, [r4, #20]
   18c68:	b	18c8c <flatcc_json_printer_utype_vector_field@@Base+0x198>
   18c6c:	ldr	r1, [r4, #16]
   18c70:	cmp	r0, r1
   18c74:	bcc	18c8c <flatcc_json_printer_utype_vector_field@@Base+0x198>
   18c78:	ldr	r2, [r4, #44]	; 0x2c
   18c7c:	mov	r0, r4
   18c80:	mov	r1, #0
   18c84:	blx	r2
   18c88:	ldr	r0, [r4, #20]
   18c8c:	ldrb	r1, [r9, #4]
   18c90:	mov	r2, #0
   18c94:	cmp	r1, #100	; 0x64
   18c98:	bcc	18ce4 <flatcc_json_printer_utype_vector_field@@Base+0x1f0>
   18c9c:	strb	r2, [r0, #3]
   18ca0:	movw	r2, #34079	; 0x851f
   18ca4:	movt	r2, #20971	; 0x51eb
   18ca8:	umull	r2, r3, r1, r2
   18cac:	mov	r2, #48	; 0x30
   18cb0:	orr	r2, r2, r3, lsr #5
   18cb4:	strb	r2, [r0]
   18cb8:	lsr	r2, r3, #5
   18cbc:	mov	r3, #100	; 0x64
   18cc0:	mls	r1, r2, r3, r1
   18cc4:	ldr	r2, [pc, #808]	; 18ff4 <flatcc_json_printer_utype_vector_field@@Base+0x500>
   18cc8:	uxtb	r1, r1
   18ccc:	add	r2, pc, r2
   18cd0:	add	r1, r2, r1, lsl #1
   18cd4:	ldrh	r1, [r1]
   18cd8:	strh	r1, [r0, #1]
   18cdc:	mov	r0, #3
   18ce0:	b	18d34 <flatcc_json_printer_utype_vector_field@@Base+0x240>
   18ce4:	cmp	r1, #10
   18ce8:	bcc	18d24 <flatcc_json_printer_utype_vector_field@@Base+0x230>
   18cec:	strb	r2, [r0, #2]
   18cf0:	movw	r2, #34079	; 0x851f
   18cf4:	movt	r2, #20971	; 0x51eb
   18cf8:	umull	r2, r3, r1, r2
   18cfc:	lsr	r2, r3, #5
   18d00:	mov	r3, #100	; 0x64
   18d04:	mls	r1, r2, r3, r1
   18d08:	ldr	r2, [pc, #744]	; 18ff8 <flatcc_json_printer_utype_vector_field@@Base+0x504>
   18d0c:	add	r2, pc, r2
   18d10:	add	r1, r2, r1, lsl #1
   18d14:	ldrh	r1, [r1]
   18d18:	strh	r1, [r0]
   18d1c:	mov	r0, #2
   18d20:	b	18d34 <flatcc_json_printer_utype_vector_field@@Base+0x240>
   18d24:	add	r1, r1, #48	; 0x30
   18d28:	strb	r2, [r0, #1]
   18d2c:	strb	r1, [r0]
   18d30:	mov	r0, #1
   18d34:	ldr	r1, [r4, #20]
   18d38:	subs	r8, r8, #1
   18d3c:	add	r0, r1, r0
   18d40:	str	r0, [r4, #20]
   18d44:	beq	18f10 <flatcc_json_printer_utype_vector_field@@Base+0x41c>
   18d48:	ldr	r0, [r4, #20]
   18d4c:	add	r7, r9, #5
   18d50:	mov	r9, #44	; 0x2c
   18d54:	mov	sl, #0
   18d58:	b	18db8 <flatcc_json_printer_utype_vector_field@@Base+0x2c4>
   18d5c:	movw	r2, #34079	; 0x851f
   18d60:	strb	sl, [r0, #3]
   18d64:	movt	r2, #20971	; 0x51eb
   18d68:	umull	r2, r3, r1, r2
   18d6c:	mov	r2, #48	; 0x30
   18d70:	orr	r2, r2, r3, lsr #5
   18d74:	strb	r2, [r0]
   18d78:	lsr	r2, r3, #5
   18d7c:	mov	r3, #100	; 0x64
   18d80:	mls	r1, r2, r3, r1
   18d84:	ldr	r2, [pc, #624]	; 18ffc <flatcc_json_printer_utype_vector_field@@Base+0x508>
   18d88:	uxtb	r1, r1
   18d8c:	add	r2, pc, r2
   18d90:	add	r1, r2, r1, lsl #1
   18d94:	ldrh	r1, [r1]
   18d98:	strh	r1, [r0, #1]
   18d9c:	mov	r0, #3
   18da0:	ldr	r1, [r4, #20]
   18da4:	add	r7, r7, #1
   18da8:	cmp	r8, #0
   18dac:	add	r0, r1, r0
   18db0:	str	r0, [r4, #20]
   18db4:	beq	18f10 <flatcc_json_printer_utype_vector_field@@Base+0x41c>
   18db8:	add	r1, r0, #1
   18dbc:	str	r1, [r4, #20]
   18dc0:	strb	r9, [r0]
   18dc4:	ldrb	r1, [r4, #25]
   18dc8:	ldr	r0, [r4, #20]
   18dcc:	cmp	r1, #0
   18dd0:	beq	18e8c <flatcc_json_printer_utype_vector_field@@Base+0x398>
   18dd4:	add	r1, r0, #1
   18dd8:	str	r1, [r4, #20]
   18ddc:	mov	r1, #10
   18de0:	strb	r1, [r0]
   18de4:	ldr	r0, [r4, #20]
   18de8:	ldrb	r2, [r4, #25]
   18dec:	ldr	r3, [r4, #32]
   18df0:	ldr	r1, [r4, #16]
   18df4:	mla	r6, r3, r2, r0
   18df8:	mul	r5, r3, r2
   18dfc:	cmp	r6, r1
   18e00:	bls	18e70 <flatcc_json_printer_utype_vector_field@@Base+0x37c>
   18e04:	cmp	r0, r1
   18e08:	bcc	18e24 <flatcc_json_printer_utype_vector_field@@Base+0x330>
   18e0c:	ldr	r2, [r4, #44]	; 0x2c
   18e10:	mov	r0, r4
   18e14:	mov	r1, #0
   18e18:	blx	r2
   18e1c:	ldr	r1, [r4, #16]
   18e20:	ldr	r0, [r4, #20]
   18e24:	sub	r6, r1, r0
   18e28:	cmp	r6, r5
   18e2c:	bcs	18e70 <flatcc_json_printer_utype_vector_field@@Base+0x37c>
   18e30:	mov	r1, #32
   18e34:	mov	r2, r6
   18e38:	bl	1293c <memset@plt>
   18e3c:	ldr	r0, [r4, #20]
   18e40:	ldr	r2, [r4, #44]	; 0x2c
   18e44:	mov	r1, #0
   18e48:	add	r0, r0, r6
   18e4c:	str	r0, [r4, #20]
   18e50:	mov	r0, r4
   18e54:	blx	r2
   18e58:	ldr	r1, [r4, #16]
   18e5c:	ldr	r0, [r4, #20]
   18e60:	sub	r5, r5, r6
   18e64:	sub	r6, r1, r0
   18e68:	cmp	r5, r6
   18e6c:	bhi	18e30 <flatcc_json_printer_utype_vector_field@@Base+0x33c>
   18e70:	mov	r1, #32
   18e74:	mov	r2, r5
   18e78:	bl	1293c <memset@plt>
   18e7c:	ldr	r0, [r4, #20]
   18e80:	add	r0, r0, r5
   18e84:	str	r0, [r4, #20]
   18e88:	b	18eac <flatcc_json_printer_utype_vector_field@@Base+0x3b8>
   18e8c:	ldr	r1, [r4, #16]
   18e90:	cmp	r0, r1
   18e94:	bcc	18eac <flatcc_json_printer_utype_vector_field@@Base+0x3b8>
   18e98:	ldr	r2, [r4, #44]	; 0x2c
   18e9c:	mov	r0, r4
   18ea0:	mov	r1, #0
   18ea4:	blx	r2
   18ea8:	ldr	r0, [r4, #20]
   18eac:	ldrb	r1, [r7]
   18eb0:	sub	r8, r8, #1
   18eb4:	cmp	r1, #100	; 0x64
   18eb8:	bcs	18d5c <flatcc_json_printer_utype_vector_field@@Base+0x268>
   18ebc:	cmp	r1, #10
   18ec0:	bcc	18efc <flatcc_json_printer_utype_vector_field@@Base+0x408>
   18ec4:	movw	r2, #34079	; 0x851f
   18ec8:	strb	sl, [r0, #2]
   18ecc:	movt	r2, #20971	; 0x51eb
   18ed0:	umull	r2, r3, r1, r2
   18ed4:	lsr	r2, r3, #5
   18ed8:	mov	r3, #100	; 0x64
   18edc:	mls	r1, r2, r3, r1
   18ee0:	ldr	r2, [pc, #280]	; 19000 <flatcc_json_printer_utype_vector_field@@Base+0x50c>
   18ee4:	add	r2, pc, r2
   18ee8:	add	r1, r2, r1, lsl #1
   18eec:	ldrh	r1, [r1]
   18ef0:	strh	r1, [r0]
   18ef4:	mov	r0, #2
   18ef8:	b	18da0 <flatcc_json_printer_utype_vector_field@@Base+0x2ac>
   18efc:	add	r1, r1, #48	; 0x30
   18f00:	strb	sl, [r0, #1]
   18f04:	strb	r1, [r0]
   18f08:	mov	r0, #1
   18f0c:	b	18da0 <flatcc_json_printer_utype_vector_field@@Base+0x2ac>
   18f10:	ldrb	r1, [r4, #25]
   18f14:	ldr	r0, [r4, #20]
   18f18:	cmp	r1, #0
   18f1c:	beq	18fdc <flatcc_json_printer_utype_vector_field@@Base+0x4e8>
   18f20:	add	r1, r0, #1
   18f24:	str	r1, [r4, #20]
   18f28:	mov	r1, #10
   18f2c:	strb	r1, [r0]
   18f30:	ldr	r0, [r4, #32]
   18f34:	sub	r2, r0, #1
   18f38:	str	r2, [r4, #32]
   18f3c:	ldrb	r3, [r4, #25]
   18f40:	ldr	r0, [r4, #20]
   18f44:	ldr	r1, [r4, #16]
   18f48:	mla	r7, r2, r3, r0
   18f4c:	mul	r5, r2, r3
   18f50:	cmp	r7, r1
   18f54:	bls	18fc4 <flatcc_json_printer_utype_vector_field@@Base+0x4d0>
   18f58:	cmp	r0, r1
   18f5c:	bcc	18f78 <flatcc_json_printer_utype_vector_field@@Base+0x484>
   18f60:	ldr	r2, [r4, #44]	; 0x2c
   18f64:	mov	r0, r4
   18f68:	mov	r1, #0
   18f6c:	blx	r2
   18f70:	ldr	r1, [r4, #16]
   18f74:	ldr	r0, [r4, #20]
   18f78:	sub	r6, r1, r0
   18f7c:	cmp	r6, r5
   18f80:	bcs	18fc4 <flatcc_json_printer_utype_vector_field@@Base+0x4d0>
   18f84:	mov	r1, #32
   18f88:	mov	r2, r6
   18f8c:	bl	1293c <memset@plt>
   18f90:	ldr	r0, [r4, #20]
   18f94:	ldr	r2, [r4, #44]	; 0x2c
   18f98:	mov	r1, #0
   18f9c:	add	r0, r0, r6
   18fa0:	str	r0, [r4, #20]
   18fa4:	mov	r0, r4
   18fa8:	blx	r2
   18fac:	ldr	r1, [r4, #16]
   18fb0:	ldr	r0, [r4, #20]
   18fb4:	sub	r5, r5, r6
   18fb8:	sub	r6, r1, r0
   18fbc:	cmp	r5, r6
   18fc0:	bhi	18f84 <flatcc_json_printer_utype_vector_field@@Base+0x490>
   18fc4:	mov	r1, #32
   18fc8:	mov	r2, r5
   18fcc:	bl	1293c <memset@plt>
   18fd0:	ldr	r0, [r4, #20]
   18fd4:	add	r0, r0, r5
   18fd8:	str	r0, [r4, #20]
   18fdc:	add	r1, r0, #1
   18fe0:	str	r1, [r4, #20]
   18fe4:	mov	r1, #93	; 0x5d
   18fe8:	strb	r1, [r0]
   18fec:	sub	sp, fp, #28
   18ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ff4:	andeq	r9, r0, lr, asr #1
   18ff8:	andeq	r9, r0, lr, lsl #1
   18ffc:	andeq	r9, r0, lr
   19000:			; <UNDEFINED> instruction: 0x00008eb6

00019004 <flatcc_json_printer_uint8_vector_field@@Base>:
   19004:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19008:	add	fp, sp, #28
   1900c:	sub	sp, sp, #4
   19010:	mov	r4, r0
   19014:	mov	r0, #4
   19018:	add	r0, r0, r2, lsl #1
   1901c:	ldr	r2, [r1, #8]
   19020:	cmp	r0, r2
   19024:	bge	19044 <flatcc_json_printer_uint8_vector_field@@Base+0x40>
   19028:	ldr	r2, [r1, #4]
   1902c:	add	r0, r2, r0
   19030:	ldrh	r0, [r0]
   19034:	cmp	r0, #0
   19038:	ldrne	r2, [r1]
   1903c:	addsne	r9, r2, r0
   19040:	bne	1904c <flatcc_json_printer_uint8_vector_field@@Base+0x48>
   19044:	sub	sp, fp, #28
   19048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1904c:	ldr	r0, [r1, #16]
   19050:	ldr	r2, [fp, #8]
   19054:	add	r7, r0, #1
   19058:	cmp	r0, #0
   1905c:	str	r7, [r1, #16]
   19060:	beq	19078 <flatcc_json_printer_uint8_vector_field@@Base+0x74>
   19064:	ldr	r0, [r4, #20]
   19068:	add	r1, r0, #1
   1906c:	str	r1, [r4, #20]
   19070:	mov	r1, #44	; 0x2c
   19074:	strb	r1, [r0]
   19078:	ldr	r0, [r9]
   1907c:	mov	r1, r3
   19080:	ldr	r8, [r9, r0]!
   19084:	mov	r0, r4
   19088:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1908c:	ldr	r1, [r4, #32]
   19090:	ldr	r0, [r4, #20]
   19094:	cmp	r8, #0
   19098:	add	r1, r1, #1
   1909c:	str	r1, [r4, #32]
   190a0:	add	r1, r0, #1
   190a4:	str	r1, [r4, #20]
   190a8:	mov	r1, #91	; 0x5b
   190ac:	strb	r1, [r0]
   190b0:	beq	19420 <flatcc_json_printer_uint8_vector_field@@Base+0x41c>
   190b4:	ldrb	r1, [r4, #25]
   190b8:	ldr	r0, [r4, #20]
   190bc:	cmp	r1, #0
   190c0:	beq	1917c <flatcc_json_printer_uint8_vector_field@@Base+0x178>
   190c4:	add	r1, r0, #1
   190c8:	str	r1, [r4, #20]
   190cc:	mov	r1, #10
   190d0:	strb	r1, [r0]
   190d4:	ldr	r0, [r4, #20]
   190d8:	ldrb	r2, [r4, #25]
   190dc:	ldr	r3, [r4, #32]
   190e0:	ldr	r1, [r4, #16]
   190e4:	mla	r7, r3, r2, r0
   190e8:	mul	r5, r3, r2
   190ec:	cmp	r7, r1
   190f0:	bls	19160 <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
   190f4:	cmp	r0, r1
   190f8:	bcc	19114 <flatcc_json_printer_uint8_vector_field@@Base+0x110>
   190fc:	ldr	r2, [r4, #44]	; 0x2c
   19100:	mov	r0, r4
   19104:	mov	r1, #0
   19108:	blx	r2
   1910c:	ldr	r1, [r4, #16]
   19110:	ldr	r0, [r4, #20]
   19114:	sub	r6, r1, r0
   19118:	cmp	r6, r5
   1911c:	bcs	19160 <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
   19120:	mov	r1, #32
   19124:	mov	r2, r6
   19128:	bl	1293c <memset@plt>
   1912c:	ldr	r0, [r4, #20]
   19130:	ldr	r2, [r4, #44]	; 0x2c
   19134:	mov	r1, #0
   19138:	add	r0, r0, r6
   1913c:	str	r0, [r4, #20]
   19140:	mov	r0, r4
   19144:	blx	r2
   19148:	ldr	r1, [r4, #16]
   1914c:	ldr	r0, [r4, #20]
   19150:	sub	r5, r5, r6
   19154:	sub	r6, r1, r0
   19158:	cmp	r5, r6
   1915c:	bhi	19120 <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   19160:	mov	r1, #32
   19164:	mov	r2, r5
   19168:	bl	1293c <memset@plt>
   1916c:	ldr	r0, [r4, #20]
   19170:	add	r0, r0, r5
   19174:	str	r0, [r4, #20]
   19178:	b	1919c <flatcc_json_printer_uint8_vector_field@@Base+0x198>
   1917c:	ldr	r1, [r4, #16]
   19180:	cmp	r0, r1
   19184:	bcc	1919c <flatcc_json_printer_uint8_vector_field@@Base+0x198>
   19188:	ldr	r2, [r4, #44]	; 0x2c
   1918c:	mov	r0, r4
   19190:	mov	r1, #0
   19194:	blx	r2
   19198:	ldr	r0, [r4, #20]
   1919c:	ldrb	r1, [r9, #4]
   191a0:	mov	r2, #0
   191a4:	cmp	r1, #100	; 0x64
   191a8:	bcc	191f4 <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
   191ac:	strb	r2, [r0, #3]
   191b0:	movw	r2, #34079	; 0x851f
   191b4:	movt	r2, #20971	; 0x51eb
   191b8:	umull	r2, r3, r1, r2
   191bc:	mov	r2, #48	; 0x30
   191c0:	orr	r2, r2, r3, lsr #5
   191c4:	strb	r2, [r0]
   191c8:	lsr	r2, r3, #5
   191cc:	mov	r3, #100	; 0x64
   191d0:	mls	r1, r2, r3, r1
   191d4:	ldr	r2, [pc, #808]	; 19504 <flatcc_json_printer_uint8_vector_field@@Base+0x500>
   191d8:	uxtb	r1, r1
   191dc:	add	r2, pc, r2
   191e0:	add	r1, r2, r1, lsl #1
   191e4:	ldrh	r1, [r1]
   191e8:	strh	r1, [r0, #1]
   191ec:	mov	r0, #3
   191f0:	b	19244 <flatcc_json_printer_uint8_vector_field@@Base+0x240>
   191f4:	cmp	r1, #10
   191f8:	bcc	19234 <flatcc_json_printer_uint8_vector_field@@Base+0x230>
   191fc:	strb	r2, [r0, #2]
   19200:	movw	r2, #34079	; 0x851f
   19204:	movt	r2, #20971	; 0x51eb
   19208:	umull	r2, r3, r1, r2
   1920c:	lsr	r2, r3, #5
   19210:	mov	r3, #100	; 0x64
   19214:	mls	r1, r2, r3, r1
   19218:	ldr	r2, [pc, #744]	; 19508 <flatcc_json_printer_uint8_vector_field@@Base+0x504>
   1921c:	add	r2, pc, r2
   19220:	add	r1, r2, r1, lsl #1
   19224:	ldrh	r1, [r1]
   19228:	strh	r1, [r0]
   1922c:	mov	r0, #2
   19230:	b	19244 <flatcc_json_printer_uint8_vector_field@@Base+0x240>
   19234:	add	r1, r1, #48	; 0x30
   19238:	strb	r2, [r0, #1]
   1923c:	strb	r1, [r0]
   19240:	mov	r0, #1
   19244:	ldr	r1, [r4, #20]
   19248:	subs	r8, r8, #1
   1924c:	add	r0, r1, r0
   19250:	str	r0, [r4, #20]
   19254:	beq	19420 <flatcc_json_printer_uint8_vector_field@@Base+0x41c>
   19258:	ldr	r0, [r4, #20]
   1925c:	add	r7, r9, #5
   19260:	mov	r9, #44	; 0x2c
   19264:	mov	sl, #0
   19268:	b	192c8 <flatcc_json_printer_uint8_vector_field@@Base+0x2c4>
   1926c:	movw	r2, #34079	; 0x851f
   19270:	strb	sl, [r0, #3]
   19274:	movt	r2, #20971	; 0x51eb
   19278:	umull	r2, r3, r1, r2
   1927c:	mov	r2, #48	; 0x30
   19280:	orr	r2, r2, r3, lsr #5
   19284:	strb	r2, [r0]
   19288:	lsr	r2, r3, #5
   1928c:	mov	r3, #100	; 0x64
   19290:	mls	r1, r2, r3, r1
   19294:	ldr	r2, [pc, #624]	; 1950c <flatcc_json_printer_uint8_vector_field@@Base+0x508>
   19298:	uxtb	r1, r1
   1929c:	add	r2, pc, r2
   192a0:	add	r1, r2, r1, lsl #1
   192a4:	ldrh	r1, [r1]
   192a8:	strh	r1, [r0, #1]
   192ac:	mov	r0, #3
   192b0:	ldr	r1, [r4, #20]
   192b4:	add	r7, r7, #1
   192b8:	cmp	r8, #0
   192bc:	add	r0, r1, r0
   192c0:	str	r0, [r4, #20]
   192c4:	beq	19420 <flatcc_json_printer_uint8_vector_field@@Base+0x41c>
   192c8:	add	r1, r0, #1
   192cc:	str	r1, [r4, #20]
   192d0:	strb	r9, [r0]
   192d4:	ldrb	r1, [r4, #25]
   192d8:	ldr	r0, [r4, #20]
   192dc:	cmp	r1, #0
   192e0:	beq	1939c <flatcc_json_printer_uint8_vector_field@@Base+0x398>
   192e4:	add	r1, r0, #1
   192e8:	str	r1, [r4, #20]
   192ec:	mov	r1, #10
   192f0:	strb	r1, [r0]
   192f4:	ldr	r0, [r4, #20]
   192f8:	ldrb	r2, [r4, #25]
   192fc:	ldr	r3, [r4, #32]
   19300:	ldr	r1, [r4, #16]
   19304:	mla	r6, r3, r2, r0
   19308:	mul	r5, r3, r2
   1930c:	cmp	r6, r1
   19310:	bls	19380 <flatcc_json_printer_uint8_vector_field@@Base+0x37c>
   19314:	cmp	r0, r1
   19318:	bcc	19334 <flatcc_json_printer_uint8_vector_field@@Base+0x330>
   1931c:	ldr	r2, [r4, #44]	; 0x2c
   19320:	mov	r0, r4
   19324:	mov	r1, #0
   19328:	blx	r2
   1932c:	ldr	r1, [r4, #16]
   19330:	ldr	r0, [r4, #20]
   19334:	sub	r6, r1, r0
   19338:	cmp	r6, r5
   1933c:	bcs	19380 <flatcc_json_printer_uint8_vector_field@@Base+0x37c>
   19340:	mov	r1, #32
   19344:	mov	r2, r6
   19348:	bl	1293c <memset@plt>
   1934c:	ldr	r0, [r4, #20]
   19350:	ldr	r2, [r4, #44]	; 0x2c
   19354:	mov	r1, #0
   19358:	add	r0, r0, r6
   1935c:	str	r0, [r4, #20]
   19360:	mov	r0, r4
   19364:	blx	r2
   19368:	ldr	r1, [r4, #16]
   1936c:	ldr	r0, [r4, #20]
   19370:	sub	r5, r5, r6
   19374:	sub	r6, r1, r0
   19378:	cmp	r5, r6
   1937c:	bhi	19340 <flatcc_json_printer_uint8_vector_field@@Base+0x33c>
   19380:	mov	r1, #32
   19384:	mov	r2, r5
   19388:	bl	1293c <memset@plt>
   1938c:	ldr	r0, [r4, #20]
   19390:	add	r0, r0, r5
   19394:	str	r0, [r4, #20]
   19398:	b	193bc <flatcc_json_printer_uint8_vector_field@@Base+0x3b8>
   1939c:	ldr	r1, [r4, #16]
   193a0:	cmp	r0, r1
   193a4:	bcc	193bc <flatcc_json_printer_uint8_vector_field@@Base+0x3b8>
   193a8:	ldr	r2, [r4, #44]	; 0x2c
   193ac:	mov	r0, r4
   193b0:	mov	r1, #0
   193b4:	blx	r2
   193b8:	ldr	r0, [r4, #20]
   193bc:	ldrb	r1, [r7]
   193c0:	sub	r8, r8, #1
   193c4:	cmp	r1, #100	; 0x64
   193c8:	bcs	1926c <flatcc_json_printer_uint8_vector_field@@Base+0x268>
   193cc:	cmp	r1, #10
   193d0:	bcc	1940c <flatcc_json_printer_uint8_vector_field@@Base+0x408>
   193d4:	movw	r2, #34079	; 0x851f
   193d8:	strb	sl, [r0, #2]
   193dc:	movt	r2, #20971	; 0x51eb
   193e0:	umull	r2, r3, r1, r2
   193e4:	lsr	r2, r3, #5
   193e8:	mov	r3, #100	; 0x64
   193ec:	mls	r1, r2, r3, r1
   193f0:	ldr	r2, [pc, #280]	; 19510 <flatcc_json_printer_uint8_vector_field@@Base+0x50c>
   193f4:	add	r2, pc, r2
   193f8:	add	r1, r2, r1, lsl #1
   193fc:	ldrh	r1, [r1]
   19400:	strh	r1, [r0]
   19404:	mov	r0, #2
   19408:	b	192b0 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   1940c:	add	r1, r1, #48	; 0x30
   19410:	strb	sl, [r0, #1]
   19414:	strb	r1, [r0]
   19418:	mov	r0, #1
   1941c:	b	192b0 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   19420:	ldrb	r1, [r4, #25]
   19424:	ldr	r0, [r4, #20]
   19428:	cmp	r1, #0
   1942c:	beq	194ec <flatcc_json_printer_uint8_vector_field@@Base+0x4e8>
   19430:	add	r1, r0, #1
   19434:	str	r1, [r4, #20]
   19438:	mov	r1, #10
   1943c:	strb	r1, [r0]
   19440:	ldr	r0, [r4, #32]
   19444:	sub	r2, r0, #1
   19448:	str	r2, [r4, #32]
   1944c:	ldrb	r3, [r4, #25]
   19450:	ldr	r0, [r4, #20]
   19454:	ldr	r1, [r4, #16]
   19458:	mla	r7, r2, r3, r0
   1945c:	mul	r5, r2, r3
   19460:	cmp	r7, r1
   19464:	bls	194d4 <flatcc_json_printer_uint8_vector_field@@Base+0x4d0>
   19468:	cmp	r0, r1
   1946c:	bcc	19488 <flatcc_json_printer_uint8_vector_field@@Base+0x484>
   19470:	ldr	r2, [r4, #44]	; 0x2c
   19474:	mov	r0, r4
   19478:	mov	r1, #0
   1947c:	blx	r2
   19480:	ldr	r1, [r4, #16]
   19484:	ldr	r0, [r4, #20]
   19488:	sub	r6, r1, r0
   1948c:	cmp	r6, r5
   19490:	bcs	194d4 <flatcc_json_printer_uint8_vector_field@@Base+0x4d0>
   19494:	mov	r1, #32
   19498:	mov	r2, r6
   1949c:	bl	1293c <memset@plt>
   194a0:	ldr	r0, [r4, #20]
   194a4:	ldr	r2, [r4, #44]	; 0x2c
   194a8:	mov	r1, #0
   194ac:	add	r0, r0, r6
   194b0:	str	r0, [r4, #20]
   194b4:	mov	r0, r4
   194b8:	blx	r2
   194bc:	ldr	r1, [r4, #16]
   194c0:	ldr	r0, [r4, #20]
   194c4:	sub	r5, r5, r6
   194c8:	sub	r6, r1, r0
   194cc:	cmp	r5, r6
   194d0:	bhi	19494 <flatcc_json_printer_uint8_vector_field@@Base+0x490>
   194d4:	mov	r1, #32
   194d8:	mov	r2, r5
   194dc:	bl	1293c <memset@plt>
   194e0:	ldr	r0, [r4, #20]
   194e4:	add	r0, r0, r5
   194e8:	str	r0, [r4, #20]
   194ec:	add	r1, r0, #1
   194f0:	str	r1, [r4, #20]
   194f4:	mov	r1, #93	; 0x5d
   194f8:	strb	r1, [r0]
   194fc:	sub	sp, fp, #28
   19500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19504:			; <UNDEFINED> instruction: 0x00008bbe
   19508:	andeq	r8, r0, lr, ror fp
   1950c:	strdeq	r8, [r0], -lr
   19510:	andeq	r8, r0, r6, lsr #19

00019514 <flatcc_json_printer_uint16_vector_field@@Base>:
   19514:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19518:	add	fp, sp, #28
   1951c:	sub	sp, sp, #4
   19520:	mov	r4, r0
   19524:	mov	r0, #4
   19528:	add	r0, r0, r2, lsl #1
   1952c:	ldr	r2, [r1, #8]
   19530:	cmp	r0, r2
   19534:	bge	19554 <flatcc_json_printer_uint16_vector_field@@Base+0x40>
   19538:	ldr	r2, [r1, #4]
   1953c:	add	r0, r2, r0
   19540:	ldrh	r0, [r0]
   19544:	cmp	r0, #0
   19548:	ldrne	r2, [r1]
   1954c:	addsne	r8, r2, r0
   19550:	bne	1955c <flatcc_json_printer_uint16_vector_field@@Base+0x48>
   19554:	sub	sp, fp, #28
   19558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1955c:	ldr	r0, [r1, #16]
   19560:	ldr	r2, [fp, #8]
   19564:	add	r7, r0, #1
   19568:	cmp	r0, #0
   1956c:	str	r7, [r1, #16]
   19570:	beq	19588 <flatcc_json_printer_uint16_vector_field@@Base+0x74>
   19574:	ldr	r0, [r4, #20]
   19578:	add	r1, r0, #1
   1957c:	str	r1, [r4, #20]
   19580:	mov	r1, #44	; 0x2c
   19584:	strb	r1, [r0]
   19588:	ldr	r0, [r8]
   1958c:	mov	r1, r3
   19590:	ldr	r7, [r8, r0]!
   19594:	mov	r0, r4
   19598:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1959c:	ldr	r1, [r4, #32]
   195a0:	ldr	r0, [r4, #20]
   195a4:	cmp	r7, #0
   195a8:	add	r1, r1, #1
   195ac:	str	r1, [r4, #32]
   195b0:	add	r1, r0, #1
   195b4:	str	r1, [r4, #20]
   195b8:	mov	r1, #91	; 0x5b
   195bc:	strb	r1, [r0]
   195c0:	beq	197f0 <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   195c4:	ldrb	r0, [r4, #25]
   195c8:	ldr	r1, [r4, #20]
   195cc:	cmp	r0, #0
   195d0:	beq	1968c <flatcc_json_printer_uint16_vector_field@@Base+0x178>
   195d4:	add	r0, r1, #1
   195d8:	str	r0, [r4, #20]
   195dc:	mov	r0, #10
   195e0:	strb	r0, [r1]
   195e4:	ldr	r0, [r4, #20]
   195e8:	ldrb	r2, [r4, #25]
   195ec:	ldr	r3, [r4, #32]
   195f0:	ldr	r1, [r4, #16]
   195f4:	mla	r6, r3, r2, r0
   195f8:	mul	r5, r3, r2
   195fc:	cmp	r6, r1
   19600:	bls	19670 <flatcc_json_printer_uint16_vector_field@@Base+0x15c>
   19604:	cmp	r0, r1
   19608:	bcc	19624 <flatcc_json_printer_uint16_vector_field@@Base+0x110>
   1960c:	ldr	r2, [r4, #44]	; 0x2c
   19610:	mov	r0, r4
   19614:	mov	r1, #0
   19618:	blx	r2
   1961c:	ldr	r1, [r4, #16]
   19620:	ldr	r0, [r4, #20]
   19624:	sub	r6, r1, r0
   19628:	cmp	r6, r5
   1962c:	bcs	19670 <flatcc_json_printer_uint16_vector_field@@Base+0x15c>
   19630:	mov	r1, #32
   19634:	mov	r2, r6
   19638:	bl	1293c <memset@plt>
   1963c:	ldr	r0, [r4, #20]
   19640:	ldr	r2, [r4, #44]	; 0x2c
   19644:	mov	r1, #0
   19648:	add	r0, r0, r6
   1964c:	str	r0, [r4, #20]
   19650:	mov	r0, r4
   19654:	blx	r2
   19658:	ldr	r1, [r4, #16]
   1965c:	ldr	r0, [r4, #20]
   19660:	sub	r5, r5, r6
   19664:	sub	r6, r1, r0
   19668:	cmp	r5, r6
   1966c:	bhi	19630 <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   19670:	mov	r1, #32
   19674:	mov	r2, r5
   19678:	bl	1293c <memset@plt>
   1967c:	ldr	r0, [r4, #20]
   19680:	add	r1, r0, r5
   19684:	str	r1, [r4, #20]
   19688:	b	196ac <flatcc_json_printer_uint16_vector_field@@Base+0x198>
   1968c:	ldr	r0, [r4, #16]
   19690:	cmp	r1, r0
   19694:	bcc	196ac <flatcc_json_printer_uint16_vector_field@@Base+0x198>
   19698:	ldr	r2, [r4, #44]	; 0x2c
   1969c:	mov	r0, r4
   196a0:	mov	r1, #0
   196a4:	blx	r2
   196a8:	ldr	r1, [r4, #20]
   196ac:	ldrh	r0, [r8, #4]
   196b0:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   196b4:	ldr	r1, [r4, #20]
   196b8:	subs	r9, r7, #1
   196bc:	add	r0, r1, r0
   196c0:	str	r0, [r4, #20]
   196c4:	beq	197f0 <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   196c8:	ldr	r0, [r4, #20]
   196cc:	add	r7, r8, #6
   196d0:	mov	r8, #44	; 0x2c
   196d4:	mov	sl, #10
   196d8:	b	19710 <flatcc_json_printer_uint16_vector_field@@Base+0x1fc>
   196dc:	mov	r1, #32
   196e0:	mov	r2, r5
   196e4:	bl	1293c <memset@plt>
   196e8:	ldr	r0, [r4, #20]
   196ec:	add	r1, r0, r5
   196f0:	str	r1, [r4, #20]
   196f4:	ldrh	r0, [r7], #2
   196f8:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   196fc:	ldr	r1, [r4, #20]
   19700:	cmp	r9, #0
   19704:	add	r0, r1, r0
   19708:	str	r0, [r4, #20]
   1970c:	beq	197f0 <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   19710:	add	r1, r0, #1
   19714:	sub	r9, r9, #1
   19718:	str	r1, [r4, #20]
   1971c:	strb	r8, [r0]
   19720:	ldrb	r0, [r4, #25]
   19724:	ldr	r1, [r4, #20]
   19728:	cmp	r0, #0
   1972c:	beq	197cc <flatcc_json_printer_uint16_vector_field@@Base+0x2b8>
   19730:	add	r0, r1, #1
   19734:	str	r0, [r4, #20]
   19738:	strb	sl, [r1]
   1973c:	ldr	r0, [r4, #20]
   19740:	ldrb	r2, [r4, #25]
   19744:	ldr	r3, [r4, #32]
   19748:	ldr	r1, [r4, #16]
   1974c:	mla	r6, r3, r2, r0
   19750:	mul	r5, r3, r2
   19754:	cmp	r6, r1
   19758:	bls	196dc <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   1975c:	cmp	r0, r1
   19760:	bcc	1977c <flatcc_json_printer_uint16_vector_field@@Base+0x268>
   19764:	ldr	r2, [r4, #44]	; 0x2c
   19768:	mov	r0, r4
   1976c:	mov	r1, #0
   19770:	blx	r2
   19774:	ldr	r1, [r4, #16]
   19778:	ldr	r0, [r4, #20]
   1977c:	sub	r6, r1, r0
   19780:	cmp	r6, r5
   19784:	bcs	196dc <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   19788:	mov	r1, #32
   1978c:	mov	r2, r6
   19790:	bl	1293c <memset@plt>
   19794:	ldr	r0, [r4, #20]
   19798:	ldr	r2, [r4, #44]	; 0x2c
   1979c:	mov	r1, #0
   197a0:	add	r0, r0, r6
   197a4:	str	r0, [r4, #20]
   197a8:	mov	r0, r4
   197ac:	blx	r2
   197b0:	ldr	r1, [r4, #16]
   197b4:	ldr	r0, [r4, #20]
   197b8:	sub	r5, r5, r6
   197bc:	sub	r6, r1, r0
   197c0:	cmp	r5, r6
   197c4:	bhi	19788 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   197c8:	b	196dc <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   197cc:	ldr	r0, [r4, #16]
   197d0:	cmp	r1, r0
   197d4:	bcc	196f4 <flatcc_json_printer_uint16_vector_field@@Base+0x1e0>
   197d8:	ldr	r2, [r4, #44]	; 0x2c
   197dc:	mov	r0, r4
   197e0:	mov	r1, #0
   197e4:	blx	r2
   197e8:	ldr	r1, [r4, #20]
   197ec:	b	196f4 <flatcc_json_printer_uint16_vector_field@@Base+0x1e0>
   197f0:	ldrb	r1, [r4, #25]
   197f4:	ldr	r0, [r4, #20]
   197f8:	cmp	r1, #0
   197fc:	beq	198bc <flatcc_json_printer_uint16_vector_field@@Base+0x3a8>
   19800:	add	r1, r0, #1
   19804:	str	r1, [r4, #20]
   19808:	mov	r1, #10
   1980c:	strb	r1, [r0]
   19810:	ldr	r0, [r4, #32]
   19814:	sub	r2, r0, #1
   19818:	str	r2, [r4, #32]
   1981c:	ldrb	r3, [r4, #25]
   19820:	ldr	r0, [r4, #20]
   19824:	ldr	r1, [r4, #16]
   19828:	mla	r7, r2, r3, r0
   1982c:	mul	r5, r2, r3
   19830:	cmp	r7, r1
   19834:	bls	198a4 <flatcc_json_printer_uint16_vector_field@@Base+0x390>
   19838:	cmp	r0, r1
   1983c:	bcc	19858 <flatcc_json_printer_uint16_vector_field@@Base+0x344>
   19840:	ldr	r2, [r4, #44]	; 0x2c
   19844:	mov	r0, r4
   19848:	mov	r1, #0
   1984c:	blx	r2
   19850:	ldr	r1, [r4, #16]
   19854:	ldr	r0, [r4, #20]
   19858:	sub	r6, r1, r0
   1985c:	cmp	r6, r5
   19860:	bcs	198a4 <flatcc_json_printer_uint16_vector_field@@Base+0x390>
   19864:	mov	r1, #32
   19868:	mov	r2, r6
   1986c:	bl	1293c <memset@plt>
   19870:	ldr	r0, [r4, #20]
   19874:	ldr	r2, [r4, #44]	; 0x2c
   19878:	mov	r1, #0
   1987c:	add	r0, r0, r6
   19880:	str	r0, [r4, #20]
   19884:	mov	r0, r4
   19888:	blx	r2
   1988c:	ldr	r1, [r4, #16]
   19890:	ldr	r0, [r4, #20]
   19894:	sub	r5, r5, r6
   19898:	sub	r6, r1, r0
   1989c:	cmp	r5, r6
   198a0:	bhi	19864 <flatcc_json_printer_uint16_vector_field@@Base+0x350>
   198a4:	mov	r1, #32
   198a8:	mov	r2, r5
   198ac:	bl	1293c <memset@plt>
   198b0:	ldr	r0, [r4, #20]
   198b4:	add	r0, r0, r5
   198b8:	str	r0, [r4, #20]
   198bc:	add	r1, r0, #1
   198c0:	str	r1, [r4, #20]
   198c4:	mov	r1, #93	; 0x5d
   198c8:	strb	r1, [r0]
   198cc:	sub	sp, fp, #28
   198d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000198d4 <flatcc_json_printer_uint32_vector_field@@Base>:
   198d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   198d8:	add	fp, sp, #28
   198dc:	sub	sp, sp, #4
   198e0:	mov	r4, r0
   198e4:	mov	r0, #4
   198e8:	add	r0, r0, r2, lsl #1
   198ec:	ldr	r2, [r1, #8]
   198f0:	cmp	r0, r2
   198f4:	bge	19914 <flatcc_json_printer_uint32_vector_field@@Base+0x40>
   198f8:	ldr	r2, [r1, #4]
   198fc:	add	r0, r2, r0
   19900:	ldrh	r0, [r0]
   19904:	cmp	r0, #0
   19908:	ldrne	r2, [r1]
   1990c:	addsne	r8, r2, r0
   19910:	bne	1991c <flatcc_json_printer_uint32_vector_field@@Base+0x48>
   19914:	sub	sp, fp, #28
   19918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1991c:	ldr	r0, [r1, #16]
   19920:	ldr	r2, [fp, #8]
   19924:	add	r7, r0, #1
   19928:	cmp	r0, #0
   1992c:	str	r7, [r1, #16]
   19930:	beq	19948 <flatcc_json_printer_uint32_vector_field@@Base+0x74>
   19934:	ldr	r0, [r4, #20]
   19938:	add	r1, r0, #1
   1993c:	str	r1, [r4, #20]
   19940:	mov	r1, #44	; 0x2c
   19944:	strb	r1, [r0]
   19948:	ldr	r0, [r8]
   1994c:	mov	r1, r3
   19950:	ldr	r7, [r8, r0]!
   19954:	mov	r0, r4
   19958:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1995c:	ldr	r1, [r4, #32]
   19960:	ldr	r0, [r4, #20]
   19964:	cmp	r7, #0
   19968:	add	r1, r1, #1
   1996c:	str	r1, [r4, #32]
   19970:	add	r1, r0, #1
   19974:	str	r1, [r4, #20]
   19978:	mov	r1, #91	; 0x5b
   1997c:	strb	r1, [r0]
   19980:	beq	19bb0 <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   19984:	ldrb	r0, [r4, #25]
   19988:	ldr	r1, [r4, #20]
   1998c:	cmp	r0, #0
   19990:	beq	19a4c <flatcc_json_printer_uint32_vector_field@@Base+0x178>
   19994:	add	r0, r1, #1
   19998:	str	r0, [r4, #20]
   1999c:	mov	r0, #10
   199a0:	strb	r0, [r1]
   199a4:	ldr	r0, [r4, #20]
   199a8:	ldrb	r2, [r4, #25]
   199ac:	ldr	r3, [r4, #32]
   199b0:	ldr	r1, [r4, #16]
   199b4:	mla	r6, r3, r2, r0
   199b8:	mul	r5, r3, r2
   199bc:	cmp	r6, r1
   199c0:	bls	19a30 <flatcc_json_printer_uint32_vector_field@@Base+0x15c>
   199c4:	cmp	r0, r1
   199c8:	bcc	199e4 <flatcc_json_printer_uint32_vector_field@@Base+0x110>
   199cc:	ldr	r2, [r4, #44]	; 0x2c
   199d0:	mov	r0, r4
   199d4:	mov	r1, #0
   199d8:	blx	r2
   199dc:	ldr	r1, [r4, #16]
   199e0:	ldr	r0, [r4, #20]
   199e4:	sub	r6, r1, r0
   199e8:	cmp	r6, r5
   199ec:	bcs	19a30 <flatcc_json_printer_uint32_vector_field@@Base+0x15c>
   199f0:	mov	r1, #32
   199f4:	mov	r2, r6
   199f8:	bl	1293c <memset@plt>
   199fc:	ldr	r0, [r4, #20]
   19a00:	ldr	r2, [r4, #44]	; 0x2c
   19a04:	mov	r1, #0
   19a08:	add	r0, r0, r6
   19a0c:	str	r0, [r4, #20]
   19a10:	mov	r0, r4
   19a14:	blx	r2
   19a18:	ldr	r1, [r4, #16]
   19a1c:	ldr	r0, [r4, #20]
   19a20:	sub	r5, r5, r6
   19a24:	sub	r6, r1, r0
   19a28:	cmp	r5, r6
   19a2c:	bhi	199f0 <flatcc_json_printer_uint32_vector_field@@Base+0x11c>
   19a30:	mov	r1, #32
   19a34:	mov	r2, r5
   19a38:	bl	1293c <memset@plt>
   19a3c:	ldr	r0, [r4, #20]
   19a40:	add	r1, r0, r5
   19a44:	str	r1, [r4, #20]
   19a48:	b	19a6c <flatcc_json_printer_uint32_vector_field@@Base+0x198>
   19a4c:	ldr	r0, [r4, #16]
   19a50:	cmp	r1, r0
   19a54:	bcc	19a6c <flatcc_json_printer_uint32_vector_field@@Base+0x198>
   19a58:	ldr	r2, [r4, #44]	; 0x2c
   19a5c:	mov	r0, r4
   19a60:	mov	r1, #0
   19a64:	blx	r2
   19a68:	ldr	r1, [r4, #20]
   19a6c:	ldr	r0, [r8, #4]
   19a70:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   19a74:	ldr	r1, [r4, #20]
   19a78:	subs	r9, r7, #1
   19a7c:	add	r0, r1, r0
   19a80:	str	r0, [r4, #20]
   19a84:	beq	19bb0 <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   19a88:	ldr	r0, [r4, #20]
   19a8c:	add	r7, r8, #8
   19a90:	mov	r8, #44	; 0x2c
   19a94:	mov	sl, #10
   19a98:	b	19ad0 <flatcc_json_printer_uint32_vector_field@@Base+0x1fc>
   19a9c:	mov	r1, #32
   19aa0:	mov	r2, r5
   19aa4:	bl	1293c <memset@plt>
   19aa8:	ldr	r0, [r4, #20]
   19aac:	add	r1, r0, r5
   19ab0:	str	r1, [r4, #20]
   19ab4:	ldr	r0, [r7], #4
   19ab8:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   19abc:	ldr	r1, [r4, #20]
   19ac0:	cmp	r9, #0
   19ac4:	add	r0, r1, r0
   19ac8:	str	r0, [r4, #20]
   19acc:	beq	19bb0 <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   19ad0:	add	r1, r0, #1
   19ad4:	sub	r9, r9, #1
   19ad8:	str	r1, [r4, #20]
   19adc:	strb	r8, [r0]
   19ae0:	ldrb	r0, [r4, #25]
   19ae4:	ldr	r1, [r4, #20]
   19ae8:	cmp	r0, #0
   19aec:	beq	19b8c <flatcc_json_printer_uint32_vector_field@@Base+0x2b8>
   19af0:	add	r0, r1, #1
   19af4:	str	r0, [r4, #20]
   19af8:	strb	sl, [r1]
   19afc:	ldr	r0, [r4, #20]
   19b00:	ldrb	r2, [r4, #25]
   19b04:	ldr	r3, [r4, #32]
   19b08:	ldr	r1, [r4, #16]
   19b0c:	mla	r6, r3, r2, r0
   19b10:	mul	r5, r3, r2
   19b14:	cmp	r6, r1
   19b18:	bls	19a9c <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   19b1c:	cmp	r0, r1
   19b20:	bcc	19b3c <flatcc_json_printer_uint32_vector_field@@Base+0x268>
   19b24:	ldr	r2, [r4, #44]	; 0x2c
   19b28:	mov	r0, r4
   19b2c:	mov	r1, #0
   19b30:	blx	r2
   19b34:	ldr	r1, [r4, #16]
   19b38:	ldr	r0, [r4, #20]
   19b3c:	sub	r6, r1, r0
   19b40:	cmp	r6, r5
   19b44:	bcs	19a9c <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   19b48:	mov	r1, #32
   19b4c:	mov	r2, r6
   19b50:	bl	1293c <memset@plt>
   19b54:	ldr	r0, [r4, #20]
   19b58:	ldr	r2, [r4, #44]	; 0x2c
   19b5c:	mov	r1, #0
   19b60:	add	r0, r0, r6
   19b64:	str	r0, [r4, #20]
   19b68:	mov	r0, r4
   19b6c:	blx	r2
   19b70:	ldr	r1, [r4, #16]
   19b74:	ldr	r0, [r4, #20]
   19b78:	sub	r5, r5, r6
   19b7c:	sub	r6, r1, r0
   19b80:	cmp	r5, r6
   19b84:	bhi	19b48 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   19b88:	b	19a9c <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   19b8c:	ldr	r0, [r4, #16]
   19b90:	cmp	r1, r0
   19b94:	bcc	19ab4 <flatcc_json_printer_uint32_vector_field@@Base+0x1e0>
   19b98:	ldr	r2, [r4, #44]	; 0x2c
   19b9c:	mov	r0, r4
   19ba0:	mov	r1, #0
   19ba4:	blx	r2
   19ba8:	ldr	r1, [r4, #20]
   19bac:	b	19ab4 <flatcc_json_printer_uint32_vector_field@@Base+0x1e0>
   19bb0:	ldrb	r1, [r4, #25]
   19bb4:	ldr	r0, [r4, #20]
   19bb8:	cmp	r1, #0
   19bbc:	beq	19c7c <flatcc_json_printer_uint32_vector_field@@Base+0x3a8>
   19bc0:	add	r1, r0, #1
   19bc4:	str	r1, [r4, #20]
   19bc8:	mov	r1, #10
   19bcc:	strb	r1, [r0]
   19bd0:	ldr	r0, [r4, #32]
   19bd4:	sub	r2, r0, #1
   19bd8:	str	r2, [r4, #32]
   19bdc:	ldrb	r3, [r4, #25]
   19be0:	ldr	r0, [r4, #20]
   19be4:	ldr	r1, [r4, #16]
   19be8:	mla	r7, r2, r3, r0
   19bec:	mul	r5, r2, r3
   19bf0:	cmp	r7, r1
   19bf4:	bls	19c64 <flatcc_json_printer_uint32_vector_field@@Base+0x390>
   19bf8:	cmp	r0, r1
   19bfc:	bcc	19c18 <flatcc_json_printer_uint32_vector_field@@Base+0x344>
   19c00:	ldr	r2, [r4, #44]	; 0x2c
   19c04:	mov	r0, r4
   19c08:	mov	r1, #0
   19c0c:	blx	r2
   19c10:	ldr	r1, [r4, #16]
   19c14:	ldr	r0, [r4, #20]
   19c18:	sub	r6, r1, r0
   19c1c:	cmp	r6, r5
   19c20:	bcs	19c64 <flatcc_json_printer_uint32_vector_field@@Base+0x390>
   19c24:	mov	r1, #32
   19c28:	mov	r2, r6
   19c2c:	bl	1293c <memset@plt>
   19c30:	ldr	r0, [r4, #20]
   19c34:	ldr	r2, [r4, #44]	; 0x2c
   19c38:	mov	r1, #0
   19c3c:	add	r0, r0, r6
   19c40:	str	r0, [r4, #20]
   19c44:	mov	r0, r4
   19c48:	blx	r2
   19c4c:	ldr	r1, [r4, #16]
   19c50:	ldr	r0, [r4, #20]
   19c54:	sub	r5, r5, r6
   19c58:	sub	r6, r1, r0
   19c5c:	cmp	r5, r6
   19c60:	bhi	19c24 <flatcc_json_printer_uint32_vector_field@@Base+0x350>
   19c64:	mov	r1, #32
   19c68:	mov	r2, r5
   19c6c:	bl	1293c <memset@plt>
   19c70:	ldr	r0, [r4, #20]
   19c74:	add	r0, r0, r5
   19c78:	str	r0, [r4, #20]
   19c7c:	add	r1, r0, #1
   19c80:	str	r1, [r4, #20]
   19c84:	mov	r1, #93	; 0x5d
   19c88:	strb	r1, [r0]
   19c8c:	sub	sp, fp, #28
   19c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019c94 <flatcc_json_printer_uint64_vector_field@@Base>:
   19c94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c98:	add	fp, sp, #28
   19c9c:	sub	sp, sp, #4
   19ca0:	mov	r4, r0
   19ca4:	mov	r0, #4
   19ca8:	add	r0, r0, r2, lsl #1
   19cac:	ldr	r2, [r1, #8]
   19cb0:	cmp	r0, r2
   19cb4:	bge	19cd4 <flatcc_json_printer_uint64_vector_field@@Base+0x40>
   19cb8:	ldr	r2, [r1, #4]
   19cbc:	add	r0, r2, r0
   19cc0:	ldrh	r0, [r0]
   19cc4:	cmp	r0, #0
   19cc8:	ldrne	r2, [r1]
   19ccc:	addsne	r8, r2, r0
   19cd0:	bne	19cdc <flatcc_json_printer_uint64_vector_field@@Base+0x48>
   19cd4:	sub	sp, fp, #28
   19cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cdc:	ldr	r0, [r1, #16]
   19ce0:	ldr	r2, [fp, #8]
   19ce4:	add	r7, r0, #1
   19ce8:	cmp	r0, #0
   19cec:	str	r7, [r1, #16]
   19cf0:	beq	19d08 <flatcc_json_printer_uint64_vector_field@@Base+0x74>
   19cf4:	ldr	r0, [r4, #20]
   19cf8:	add	r1, r0, #1
   19cfc:	str	r1, [r4, #20]
   19d00:	mov	r1, #44	; 0x2c
   19d04:	strb	r1, [r0]
   19d08:	ldr	r0, [r8]
   19d0c:	mov	r1, r3
   19d10:	ldr	r7, [r8, r0]!
   19d14:	mov	r0, r4
   19d18:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   19d1c:	ldr	r1, [r4, #32]
   19d20:	ldr	r0, [r4, #20]
   19d24:	cmp	r7, #0
   19d28:	add	r1, r1, #1
   19d2c:	str	r1, [r4, #32]
   19d30:	add	r1, r0, #1
   19d34:	str	r1, [r4, #20]
   19d38:	mov	r1, #91	; 0x5b
   19d3c:	strb	r1, [r0]
   19d40:	beq	19f74 <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   19d44:	ldrb	r0, [r4, #25]
   19d48:	ldr	r2, [r4, #20]
   19d4c:	cmp	r0, #0
   19d50:	beq	19e0c <flatcc_json_printer_uint64_vector_field@@Base+0x178>
   19d54:	add	r0, r2, #1
   19d58:	str	r0, [r4, #20]
   19d5c:	mov	r0, #10
   19d60:	strb	r0, [r2]
   19d64:	ldr	r0, [r4, #20]
   19d68:	ldrb	r2, [r4, #25]
   19d6c:	ldr	r3, [r4, #32]
   19d70:	ldr	r1, [r4, #16]
   19d74:	mla	r6, r3, r2, r0
   19d78:	mul	r5, r3, r2
   19d7c:	cmp	r6, r1
   19d80:	bls	19df0 <flatcc_json_printer_uint64_vector_field@@Base+0x15c>
   19d84:	cmp	r0, r1
   19d88:	bcc	19da4 <flatcc_json_printer_uint64_vector_field@@Base+0x110>
   19d8c:	ldr	r2, [r4, #44]	; 0x2c
   19d90:	mov	r0, r4
   19d94:	mov	r1, #0
   19d98:	blx	r2
   19d9c:	ldr	r1, [r4, #16]
   19da0:	ldr	r0, [r4, #20]
   19da4:	sub	r6, r1, r0
   19da8:	cmp	r6, r5
   19dac:	bcs	19df0 <flatcc_json_printer_uint64_vector_field@@Base+0x15c>
   19db0:	mov	r1, #32
   19db4:	mov	r2, r6
   19db8:	bl	1293c <memset@plt>
   19dbc:	ldr	r0, [r4, #20]
   19dc0:	ldr	r2, [r4, #44]	; 0x2c
   19dc4:	mov	r1, #0
   19dc8:	add	r0, r0, r6
   19dcc:	str	r0, [r4, #20]
   19dd0:	mov	r0, r4
   19dd4:	blx	r2
   19dd8:	ldr	r1, [r4, #16]
   19ddc:	ldr	r0, [r4, #20]
   19de0:	sub	r5, r5, r6
   19de4:	sub	r6, r1, r0
   19de8:	cmp	r5, r6
   19dec:	bhi	19db0 <flatcc_json_printer_uint64_vector_field@@Base+0x11c>
   19df0:	mov	r1, #32
   19df4:	mov	r2, r5
   19df8:	bl	1293c <memset@plt>
   19dfc:	ldr	r0, [r4, #20]
   19e00:	add	r2, r0, r5
   19e04:	str	r2, [r4, #20]
   19e08:	b	19e2c <flatcc_json_printer_uint64_vector_field@@Base+0x198>
   19e0c:	ldr	r0, [r4, #16]
   19e10:	cmp	r2, r0
   19e14:	bcc	19e2c <flatcc_json_printer_uint64_vector_field@@Base+0x198>
   19e18:	ldr	r2, [r4, #44]	; 0x2c
   19e1c:	mov	r0, r4
   19e20:	mov	r1, #0
   19e24:	blx	r2
   19e28:	ldr	r2, [r4, #20]
   19e2c:	ldrd	r0, [r8, #4]
   19e30:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   19e34:	ldr	r1, [r4, #20]
   19e38:	subs	r9, r7, #1
   19e3c:	add	r0, r1, r0
   19e40:	str	r0, [r4, #20]
   19e44:	beq	19f74 <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   19e48:	ldr	r0, [r4, #20]
   19e4c:	add	r7, r8, #12
   19e50:	mov	r8, #44	; 0x2c
   19e54:	mov	sl, #10
   19e58:	b	19e94 <flatcc_json_printer_uint64_vector_field@@Base+0x200>
   19e5c:	mov	r1, #32
   19e60:	mov	r2, r5
   19e64:	bl	1293c <memset@plt>
   19e68:	ldr	r0, [r4, #20]
   19e6c:	add	r2, r0, r5
   19e70:	str	r2, [r4, #20]
   19e74:	ldrd	r0, [r7]
   19e78:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   19e7c:	ldr	r1, [r4, #20]
   19e80:	add	r7, r7, #8
   19e84:	cmp	r9, #0
   19e88:	add	r0, r1, r0
   19e8c:	str	r0, [r4, #20]
   19e90:	beq	19f74 <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   19e94:	add	r1, r0, #1
   19e98:	sub	r9, r9, #1
   19e9c:	str	r1, [r4, #20]
   19ea0:	strb	r8, [r0]
   19ea4:	ldrb	r0, [r4, #25]
   19ea8:	ldr	r2, [r4, #20]
   19eac:	cmp	r0, #0
   19eb0:	beq	19f50 <flatcc_json_printer_uint64_vector_field@@Base+0x2bc>
   19eb4:	add	r0, r2, #1
   19eb8:	str	r0, [r4, #20]
   19ebc:	strb	sl, [r2]
   19ec0:	ldr	r0, [r4, #20]
   19ec4:	ldrb	r2, [r4, #25]
   19ec8:	ldr	r3, [r4, #32]
   19ecc:	ldr	r1, [r4, #16]
   19ed0:	mla	r6, r3, r2, r0
   19ed4:	mul	r5, r3, r2
   19ed8:	cmp	r6, r1
   19edc:	bls	19e5c <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   19ee0:	cmp	r0, r1
   19ee4:	bcc	19f00 <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   19ee8:	ldr	r2, [r4, #44]	; 0x2c
   19eec:	mov	r0, r4
   19ef0:	mov	r1, #0
   19ef4:	blx	r2
   19ef8:	ldr	r1, [r4, #16]
   19efc:	ldr	r0, [r4, #20]
   19f00:	sub	r6, r1, r0
   19f04:	cmp	r6, r5
   19f08:	bcs	19e5c <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   19f0c:	mov	r1, #32
   19f10:	mov	r2, r6
   19f14:	bl	1293c <memset@plt>
   19f18:	ldr	r0, [r4, #20]
   19f1c:	ldr	r2, [r4, #44]	; 0x2c
   19f20:	mov	r1, #0
   19f24:	add	r0, r0, r6
   19f28:	str	r0, [r4, #20]
   19f2c:	mov	r0, r4
   19f30:	blx	r2
   19f34:	ldr	r1, [r4, #16]
   19f38:	ldr	r0, [r4, #20]
   19f3c:	sub	r5, r5, r6
   19f40:	sub	r6, r1, r0
   19f44:	cmp	r5, r6
   19f48:	bhi	19f0c <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   19f4c:	b	19e5c <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   19f50:	ldr	r0, [r4, #16]
   19f54:	cmp	r2, r0
   19f58:	bcc	19e74 <flatcc_json_printer_uint64_vector_field@@Base+0x1e0>
   19f5c:	ldr	r2, [r4, #44]	; 0x2c
   19f60:	mov	r0, r4
   19f64:	mov	r1, #0
   19f68:	blx	r2
   19f6c:	ldr	r2, [r4, #20]
   19f70:	b	19e74 <flatcc_json_printer_uint64_vector_field@@Base+0x1e0>
   19f74:	ldrb	r1, [r4, #25]
   19f78:	ldr	r0, [r4, #20]
   19f7c:	cmp	r1, #0
   19f80:	beq	1a040 <flatcc_json_printer_uint64_vector_field@@Base+0x3ac>
   19f84:	add	r1, r0, #1
   19f88:	str	r1, [r4, #20]
   19f8c:	mov	r1, #10
   19f90:	strb	r1, [r0]
   19f94:	ldr	r0, [r4, #32]
   19f98:	sub	r2, r0, #1
   19f9c:	str	r2, [r4, #32]
   19fa0:	ldrb	r3, [r4, #25]
   19fa4:	ldr	r0, [r4, #20]
   19fa8:	ldr	r1, [r4, #16]
   19fac:	mla	r7, r2, r3, r0
   19fb0:	mul	r5, r2, r3
   19fb4:	cmp	r7, r1
   19fb8:	bls	1a028 <flatcc_json_printer_uint64_vector_field@@Base+0x394>
   19fbc:	cmp	r0, r1
   19fc0:	bcc	19fdc <flatcc_json_printer_uint64_vector_field@@Base+0x348>
   19fc4:	ldr	r2, [r4, #44]	; 0x2c
   19fc8:	mov	r0, r4
   19fcc:	mov	r1, #0
   19fd0:	blx	r2
   19fd4:	ldr	r1, [r4, #16]
   19fd8:	ldr	r0, [r4, #20]
   19fdc:	sub	r6, r1, r0
   19fe0:	cmp	r6, r5
   19fe4:	bcs	1a028 <flatcc_json_printer_uint64_vector_field@@Base+0x394>
   19fe8:	mov	r1, #32
   19fec:	mov	r2, r6
   19ff0:	bl	1293c <memset@plt>
   19ff4:	ldr	r0, [r4, #20]
   19ff8:	ldr	r2, [r4, #44]	; 0x2c
   19ffc:	mov	r1, #0
   1a000:	add	r0, r0, r6
   1a004:	str	r0, [r4, #20]
   1a008:	mov	r0, r4
   1a00c:	blx	r2
   1a010:	ldr	r1, [r4, #16]
   1a014:	ldr	r0, [r4, #20]
   1a018:	sub	r5, r5, r6
   1a01c:	sub	r6, r1, r0
   1a020:	cmp	r5, r6
   1a024:	bhi	19fe8 <flatcc_json_printer_uint64_vector_field@@Base+0x354>
   1a028:	mov	r1, #32
   1a02c:	mov	r2, r5
   1a030:	bl	1293c <memset@plt>
   1a034:	ldr	r0, [r4, #20]
   1a038:	add	r0, r0, r5
   1a03c:	str	r0, [r4, #20]
   1a040:	add	r1, r0, #1
   1a044:	str	r1, [r4, #20]
   1a048:	mov	r1, #93	; 0x5d
   1a04c:	strb	r1, [r0]
   1a050:	sub	sp, fp, #28
   1a054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a058 <flatcc_json_printer_int8_vector_field@@Base>:
   1a058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a05c:	add	fp, sp, #28
   1a060:	sub	sp, sp, #4
   1a064:	mov	r4, r0
   1a068:	mov	r0, #4
   1a06c:	add	r0, r0, r2, lsl #1
   1a070:	ldr	r2, [r1, #8]
   1a074:	cmp	r0, r2
   1a078:	bge	1a098 <flatcc_json_printer_int8_vector_field@@Base+0x40>
   1a07c:	ldr	r2, [r1, #4]
   1a080:	add	r0, r2, r0
   1a084:	ldrh	r0, [r0]
   1a088:	cmp	r0, #0
   1a08c:	ldrne	r2, [r1]
   1a090:	addsne	r9, r2, r0
   1a094:	bne	1a0a0 <flatcc_json_printer_int8_vector_field@@Base+0x48>
   1a098:	sub	sp, fp, #28
   1a09c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0a0:	ldr	r0, [r1, #16]
   1a0a4:	ldr	r2, [fp, #8]
   1a0a8:	add	r7, r0, #1
   1a0ac:	cmp	r0, #0
   1a0b0:	str	r7, [r1, #16]
   1a0b4:	beq	1a0cc <flatcc_json_printer_int8_vector_field@@Base+0x74>
   1a0b8:	ldr	r0, [r4, #20]
   1a0bc:	add	r1, r0, #1
   1a0c0:	str	r1, [r4, #20]
   1a0c4:	mov	r1, #44	; 0x2c
   1a0c8:	strb	r1, [r0]
   1a0cc:	ldr	r0, [r9]
   1a0d0:	mov	r1, r3
   1a0d4:	ldr	r8, [r9, r0]!
   1a0d8:	mov	r0, r4
   1a0dc:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1a0e0:	ldr	r1, [r4, #32]
   1a0e4:	ldr	r0, [r4, #20]
   1a0e8:	cmp	r8, #0
   1a0ec:	add	r1, r1, #1
   1a0f0:	str	r1, [r4, #32]
   1a0f4:	add	r1, r0, #1
   1a0f8:	str	r1, [r4, #20]
   1a0fc:	mov	r1, #91	; 0x5b
   1a100:	strb	r1, [r0]
   1a104:	beq	1a4bc <flatcc_json_printer_int8_vector_field@@Base+0x464>
   1a108:	ldrb	r1, [r4, #25]
   1a10c:	ldr	r0, [r4, #20]
   1a110:	cmp	r1, #0
   1a114:	beq	1a1d0 <flatcc_json_printer_int8_vector_field@@Base+0x178>
   1a118:	add	r1, r0, #1
   1a11c:	str	r1, [r4, #20]
   1a120:	mov	r1, #10
   1a124:	strb	r1, [r0]
   1a128:	ldr	r0, [r4, #20]
   1a12c:	ldrb	r2, [r4, #25]
   1a130:	ldr	r3, [r4, #32]
   1a134:	ldr	r1, [r4, #16]
   1a138:	mla	r7, r3, r2, r0
   1a13c:	mul	r5, r3, r2
   1a140:	cmp	r7, r1
   1a144:	bls	1a1b4 <flatcc_json_printer_int8_vector_field@@Base+0x15c>
   1a148:	cmp	r0, r1
   1a14c:	bcc	1a168 <flatcc_json_printer_int8_vector_field@@Base+0x110>
   1a150:	ldr	r2, [r4, #44]	; 0x2c
   1a154:	mov	r0, r4
   1a158:	mov	r1, #0
   1a15c:	blx	r2
   1a160:	ldr	r1, [r4, #16]
   1a164:	ldr	r0, [r4, #20]
   1a168:	sub	r6, r1, r0
   1a16c:	cmp	r6, r5
   1a170:	bcs	1a1b4 <flatcc_json_printer_int8_vector_field@@Base+0x15c>
   1a174:	mov	r1, #32
   1a178:	mov	r2, r6
   1a17c:	bl	1293c <memset@plt>
   1a180:	ldr	r0, [r4, #20]
   1a184:	ldr	r2, [r4, #44]	; 0x2c
   1a188:	mov	r1, #0
   1a18c:	add	r0, r0, r6
   1a190:	str	r0, [r4, #20]
   1a194:	mov	r0, r4
   1a198:	blx	r2
   1a19c:	ldr	r1, [r4, #16]
   1a1a0:	ldr	r0, [r4, #20]
   1a1a4:	sub	r5, r5, r6
   1a1a8:	sub	r6, r1, r0
   1a1ac:	cmp	r5, r6
   1a1b0:	bhi	1a174 <flatcc_json_printer_int8_vector_field@@Base+0x11c>
   1a1b4:	mov	r1, #32
   1a1b8:	mov	r2, r5
   1a1bc:	bl	1293c <memset@plt>
   1a1c0:	ldr	r0, [r4, #20]
   1a1c4:	add	r0, r0, r5
   1a1c8:	str	r0, [r4, #20]
   1a1cc:	b	1a1f0 <flatcc_json_printer_int8_vector_field@@Base+0x198>
   1a1d0:	ldr	r1, [r4, #16]
   1a1d4:	cmp	r0, r1
   1a1d8:	bcc	1a1f0 <flatcc_json_printer_int8_vector_field@@Base+0x198>
   1a1dc:	ldr	r2, [r4, #44]	; 0x2c
   1a1e0:	mov	r0, r4
   1a1e4:	mov	r1, #0
   1a1e8:	blx	r2
   1a1ec:	ldr	r0, [r4, #20]
   1a1f0:	ldrb	r1, [r9, #4]
   1a1f4:	sxtb	r2, r1
   1a1f8:	lsr	r1, r1, #7
   1a1fc:	cmn	r2, #1
   1a200:	movle	r3, #45	; 0x2d
   1a204:	rsble	r2, r2, #0
   1a208:	strble	r3, [r0], #1
   1a20c:	uxtb	r3, r2
   1a210:	cmp	r3, #100	; 0x64
   1a214:	bcc	1a264 <flatcc_json_printer_int8_vector_field@@Base+0x20c>
   1a218:	mov	r2, #0
   1a21c:	strb	r2, [r0, #3]
   1a220:	movw	r2, #34079	; 0x851f
   1a224:	movt	r2, #20971	; 0x51eb
   1a228:	umull	r2, r7, r3, r2
   1a22c:	mov	r2, #48	; 0x30
   1a230:	orr	r2, r2, r7, lsr #5
   1a234:	strb	r2, [r0]
   1a238:	lsr	r2, r7, #5
   1a23c:	mov	r7, #100	; 0x64
   1a240:	mls	r2, r2, r7, r3
   1a244:	ldr	r3, [pc, #852]	; 1a5a0 <flatcc_json_printer_int8_vector_field@@Base+0x548>
   1a248:	uxtb	r2, r2
   1a24c:	add	r3, pc, r3
   1a250:	add	r2, r3, r2, lsl #1
   1a254:	ldrh	r2, [r2]
   1a258:	strh	r2, [r0, #1]
   1a25c:	mov	r0, #3
   1a260:	b	1a2bc <flatcc_json_printer_int8_vector_field@@Base+0x264>
   1a264:	cmp	r3, #10
   1a268:	bcc	1a2a8 <flatcc_json_printer_int8_vector_field@@Base+0x250>
   1a26c:	mov	r2, #0
   1a270:	strb	r2, [r0, #2]
   1a274:	movw	r2, #34079	; 0x851f
   1a278:	movt	r2, #20971	; 0x51eb
   1a27c:	umull	r2, r7, r3, r2
   1a280:	lsr	r2, r7, #5
   1a284:	mov	r7, #100	; 0x64
   1a288:	mls	r2, r2, r7, r3
   1a28c:	ldr	r3, [pc, #784]	; 1a5a4 <flatcc_json_printer_int8_vector_field@@Base+0x54c>
   1a290:	add	r3, pc, r3
   1a294:	add	r2, r3, r2, lsl #1
   1a298:	ldrh	r2, [r2]
   1a29c:	strh	r2, [r0]
   1a2a0:	mov	r0, #2
   1a2a4:	b	1a2bc <flatcc_json_printer_int8_vector_field@@Base+0x264>
   1a2a8:	mov	r3, #0
   1a2ac:	add	r2, r2, #48	; 0x30
   1a2b0:	strb	r3, [r0, #1]
   1a2b4:	strb	r2, [r0]
   1a2b8:	mov	r0, #1
   1a2bc:	add	r0, r0, r1
   1a2c0:	ldr	r1, [r4, #20]
   1a2c4:	subs	r8, r8, #1
   1a2c8:	add	r0, r1, r0
   1a2cc:	str	r0, [r4, #20]
   1a2d0:	beq	1a4bc <flatcc_json_printer_int8_vector_field@@Base+0x464>
   1a2d4:	ldr	r0, [r4, #20]
   1a2d8:	add	r7, r9, #5
   1a2dc:	mov	r9, #44	; 0x2c
   1a2e0:	mov	sl, #0
   1a2e4:	b	1a348 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
   1a2e8:	movw	r2, #34079	; 0x851f
   1a2ec:	strb	sl, [r0, #3]
   1a2f0:	movt	r2, #20971	; 0x51eb
   1a2f4:	umull	r2, r6, r3, r2
   1a2f8:	mov	r2, #48	; 0x30
   1a2fc:	orr	r2, r2, r6, lsr #5
   1a300:	strb	r2, [r0]
   1a304:	lsr	r2, r6, #5
   1a308:	mov	r6, #100	; 0x64
   1a30c:	mls	r2, r2, r6, r3
   1a310:	ldr	r3, [pc, #656]	; 1a5a8 <flatcc_json_printer_int8_vector_field@@Base+0x550>
   1a314:	uxtb	r2, r2
   1a318:	add	r3, pc, r3
   1a31c:	add	r2, r3, r2, lsl #1
   1a320:	ldrh	r2, [r2]
   1a324:	strh	r2, [r0, #1]
   1a328:	mov	r0, #3
   1a32c:	add	r0, r0, r1
   1a330:	ldr	r1, [r4, #20]
   1a334:	add	r7, r7, #1
   1a338:	cmp	r8, #0
   1a33c:	add	r0, r1, r0
   1a340:	str	r0, [r4, #20]
   1a344:	beq	1a4bc <flatcc_json_printer_int8_vector_field@@Base+0x464>
   1a348:	add	r1, r0, #1
   1a34c:	str	r1, [r4, #20]
   1a350:	strb	r9, [r0]
   1a354:	ldrb	r1, [r4, #25]
   1a358:	ldr	r0, [r4, #20]
   1a35c:	cmp	r1, #0
   1a360:	beq	1a41c <flatcc_json_printer_int8_vector_field@@Base+0x3c4>
   1a364:	add	r1, r0, #1
   1a368:	str	r1, [r4, #20]
   1a36c:	mov	r1, #10
   1a370:	strb	r1, [r0]
   1a374:	ldr	r0, [r4, #20]
   1a378:	ldrb	r2, [r4, #25]
   1a37c:	ldr	r3, [r4, #32]
   1a380:	ldr	r1, [r4, #16]
   1a384:	mla	r6, r3, r2, r0
   1a388:	mul	r5, r3, r2
   1a38c:	cmp	r6, r1
   1a390:	bls	1a400 <flatcc_json_printer_int8_vector_field@@Base+0x3a8>
   1a394:	cmp	r0, r1
   1a398:	bcc	1a3b4 <flatcc_json_printer_int8_vector_field@@Base+0x35c>
   1a39c:	ldr	r2, [r4, #44]	; 0x2c
   1a3a0:	mov	r0, r4
   1a3a4:	mov	r1, #0
   1a3a8:	blx	r2
   1a3ac:	ldr	r1, [r4, #16]
   1a3b0:	ldr	r0, [r4, #20]
   1a3b4:	sub	r6, r1, r0
   1a3b8:	cmp	r6, r5
   1a3bc:	bcs	1a400 <flatcc_json_printer_int8_vector_field@@Base+0x3a8>
   1a3c0:	mov	r1, #32
   1a3c4:	mov	r2, r6
   1a3c8:	bl	1293c <memset@plt>
   1a3cc:	ldr	r0, [r4, #20]
   1a3d0:	ldr	r2, [r4, #44]	; 0x2c
   1a3d4:	mov	r1, #0
   1a3d8:	add	r0, r0, r6
   1a3dc:	str	r0, [r4, #20]
   1a3e0:	mov	r0, r4
   1a3e4:	blx	r2
   1a3e8:	ldr	r1, [r4, #16]
   1a3ec:	ldr	r0, [r4, #20]
   1a3f0:	sub	r5, r5, r6
   1a3f4:	sub	r6, r1, r0
   1a3f8:	cmp	r5, r6
   1a3fc:	bhi	1a3c0 <flatcc_json_printer_int8_vector_field@@Base+0x368>
   1a400:	mov	r1, #32
   1a404:	mov	r2, r5
   1a408:	bl	1293c <memset@plt>
   1a40c:	ldr	r0, [r4, #20]
   1a410:	add	r0, r0, r5
   1a414:	str	r0, [r4, #20]
   1a418:	b	1a43c <flatcc_json_printer_int8_vector_field@@Base+0x3e4>
   1a41c:	ldr	r1, [r4, #16]
   1a420:	cmp	r0, r1
   1a424:	bcc	1a43c <flatcc_json_printer_int8_vector_field@@Base+0x3e4>
   1a428:	ldr	r2, [r4, #44]	; 0x2c
   1a42c:	mov	r0, r4
   1a430:	mov	r1, #0
   1a434:	blx	r2
   1a438:	ldr	r0, [r4, #20]
   1a43c:	ldrb	r1, [r7]
   1a440:	sub	r8, r8, #1
   1a444:	sxtb	r2, r1
   1a448:	lsr	r1, r1, #7
   1a44c:	cmn	r2, #1
   1a450:	movle	r3, #45	; 0x2d
   1a454:	rsble	r2, r2, #0
   1a458:	strble	r3, [r0], #1
   1a45c:	uxtb	r3, r2
   1a460:	cmp	r3, #100	; 0x64
   1a464:	bcs	1a2e8 <flatcc_json_printer_int8_vector_field@@Base+0x290>
   1a468:	cmp	r3, #10
   1a46c:	bcc	1a4a8 <flatcc_json_printer_int8_vector_field@@Base+0x450>
   1a470:	movw	r2, #34079	; 0x851f
   1a474:	strb	sl, [r0, #2]
   1a478:	movt	r2, #20971	; 0x51eb
   1a47c:	umull	r2, r6, r3, r2
   1a480:	lsr	r2, r6, #5
   1a484:	mov	r6, #100	; 0x64
   1a488:	mls	r2, r2, r6, r3
   1a48c:	ldr	r3, [pc, #280]	; 1a5ac <flatcc_json_printer_int8_vector_field@@Base+0x554>
   1a490:	add	r3, pc, r3
   1a494:	add	r2, r3, r2, lsl #1
   1a498:	ldrh	r2, [r2]
   1a49c:	strh	r2, [r0]
   1a4a0:	mov	r0, #2
   1a4a4:	b	1a32c <flatcc_json_printer_int8_vector_field@@Base+0x2d4>
   1a4a8:	add	r2, r2, #48	; 0x30
   1a4ac:	strb	sl, [r0, #1]
   1a4b0:	strb	r2, [r0]
   1a4b4:	mov	r0, #1
   1a4b8:	b	1a32c <flatcc_json_printer_int8_vector_field@@Base+0x2d4>
   1a4bc:	ldrb	r1, [r4, #25]
   1a4c0:	ldr	r0, [r4, #20]
   1a4c4:	cmp	r1, #0
   1a4c8:	beq	1a588 <flatcc_json_printer_int8_vector_field@@Base+0x530>
   1a4cc:	add	r1, r0, #1
   1a4d0:	str	r1, [r4, #20]
   1a4d4:	mov	r1, #10
   1a4d8:	strb	r1, [r0]
   1a4dc:	ldr	r0, [r4, #32]
   1a4e0:	sub	r2, r0, #1
   1a4e4:	str	r2, [r4, #32]
   1a4e8:	ldrb	r3, [r4, #25]
   1a4ec:	ldr	r0, [r4, #20]
   1a4f0:	ldr	r1, [r4, #16]
   1a4f4:	mla	r7, r2, r3, r0
   1a4f8:	mul	r5, r2, r3
   1a4fc:	cmp	r7, r1
   1a500:	bls	1a570 <flatcc_json_printer_int8_vector_field@@Base+0x518>
   1a504:	cmp	r0, r1
   1a508:	bcc	1a524 <flatcc_json_printer_int8_vector_field@@Base+0x4cc>
   1a50c:	ldr	r2, [r4, #44]	; 0x2c
   1a510:	mov	r0, r4
   1a514:	mov	r1, #0
   1a518:	blx	r2
   1a51c:	ldr	r1, [r4, #16]
   1a520:	ldr	r0, [r4, #20]
   1a524:	sub	r6, r1, r0
   1a528:	cmp	r6, r5
   1a52c:	bcs	1a570 <flatcc_json_printer_int8_vector_field@@Base+0x518>
   1a530:	mov	r1, #32
   1a534:	mov	r2, r6
   1a538:	bl	1293c <memset@plt>
   1a53c:	ldr	r0, [r4, #20]
   1a540:	ldr	r2, [r4, #44]	; 0x2c
   1a544:	mov	r1, #0
   1a548:	add	r0, r0, r6
   1a54c:	str	r0, [r4, #20]
   1a550:	mov	r0, r4
   1a554:	blx	r2
   1a558:	ldr	r1, [r4, #16]
   1a55c:	ldr	r0, [r4, #20]
   1a560:	sub	r5, r5, r6
   1a564:	sub	r6, r1, r0
   1a568:	cmp	r5, r6
   1a56c:	bhi	1a530 <flatcc_json_printer_int8_vector_field@@Base+0x4d8>
   1a570:	mov	r1, #32
   1a574:	mov	r2, r5
   1a578:	bl	1293c <memset@plt>
   1a57c:	ldr	r0, [r4, #20]
   1a580:	add	r0, r0, r5
   1a584:	str	r0, [r4, #20]
   1a588:	add	r1, r0, #1
   1a58c:	str	r1, [r4, #20]
   1a590:	mov	r1, #93	; 0x5d
   1a594:	strb	r1, [r0]
   1a598:	sub	sp, fp, #28
   1a59c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5a0:	andeq	r7, r0, lr, asr #22
   1a5a4:	andeq	r7, r0, sl, lsl #22
   1a5a8:	andeq	r7, r0, r2, lsl #21
   1a5ac:	andeq	r7, r0, sl, lsl #18

0001a5b0 <flatcc_json_printer_int16_vector_field@@Base>:
   1a5b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a5b4:	add	fp, sp, #28
   1a5b8:	sub	sp, sp, #4
   1a5bc:	mov	r4, r0
   1a5c0:	mov	r0, #4
   1a5c4:	add	r0, r0, r2, lsl #1
   1a5c8:	ldr	r2, [r1, #8]
   1a5cc:	cmp	r0, r2
   1a5d0:	bge	1a5f0 <flatcc_json_printer_int16_vector_field@@Base+0x40>
   1a5d4:	ldr	r2, [r1, #4]
   1a5d8:	add	r0, r2, r0
   1a5dc:	ldrh	r0, [r0]
   1a5e0:	cmp	r0, #0
   1a5e4:	ldrne	r2, [r1]
   1a5e8:	addsne	r8, r2, r0
   1a5ec:	bne	1a5f8 <flatcc_json_printer_int16_vector_field@@Base+0x48>
   1a5f0:	sub	sp, fp, #28
   1a5f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5f8:	ldr	r0, [r1, #16]
   1a5fc:	ldr	r2, [fp, #8]
   1a600:	add	r7, r0, #1
   1a604:	cmp	r0, #0
   1a608:	str	r7, [r1, #16]
   1a60c:	beq	1a624 <flatcc_json_printer_int16_vector_field@@Base+0x74>
   1a610:	ldr	r0, [r4, #20]
   1a614:	add	r1, r0, #1
   1a618:	str	r1, [r4, #20]
   1a61c:	mov	r1, #44	; 0x2c
   1a620:	strb	r1, [r0]
   1a624:	ldr	r0, [r8]
   1a628:	mov	r1, r3
   1a62c:	ldr	r7, [r8, r0]!
   1a630:	mov	r0, r4
   1a634:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1a638:	ldr	r1, [r4, #32]
   1a63c:	ldr	r0, [r4, #20]
   1a640:	cmp	r7, #0
   1a644:	add	r1, r1, #1
   1a648:	str	r1, [r4, #32]
   1a64c:	add	r1, r0, #1
   1a650:	str	r1, [r4, #20]
   1a654:	mov	r1, #91	; 0x5b
   1a658:	strb	r1, [r0]
   1a65c:	beq	1a8d0 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   1a660:	ldrb	r0, [r4, #25]
   1a664:	ldr	r1, [r4, #20]
   1a668:	cmp	r0, #0
   1a66c:	beq	1a728 <flatcc_json_printer_int16_vector_field@@Base+0x178>
   1a670:	add	r0, r1, #1
   1a674:	str	r0, [r4, #20]
   1a678:	mov	r0, #10
   1a67c:	strb	r0, [r1]
   1a680:	ldr	r0, [r4, #20]
   1a684:	ldrb	r2, [r4, #25]
   1a688:	ldr	r3, [r4, #32]
   1a68c:	ldr	r1, [r4, #16]
   1a690:	mla	r6, r3, r2, r0
   1a694:	mul	r5, r3, r2
   1a698:	cmp	r6, r1
   1a69c:	bls	1a70c <flatcc_json_printer_int16_vector_field@@Base+0x15c>
   1a6a0:	cmp	r0, r1
   1a6a4:	bcc	1a6c0 <flatcc_json_printer_int16_vector_field@@Base+0x110>
   1a6a8:	ldr	r2, [r4, #44]	; 0x2c
   1a6ac:	mov	r0, r4
   1a6b0:	mov	r1, #0
   1a6b4:	blx	r2
   1a6b8:	ldr	r1, [r4, #16]
   1a6bc:	ldr	r0, [r4, #20]
   1a6c0:	sub	r6, r1, r0
   1a6c4:	cmp	r6, r5
   1a6c8:	bcs	1a70c <flatcc_json_printer_int16_vector_field@@Base+0x15c>
   1a6cc:	mov	r1, #32
   1a6d0:	mov	r2, r6
   1a6d4:	bl	1293c <memset@plt>
   1a6d8:	ldr	r0, [r4, #20]
   1a6dc:	ldr	r2, [r4, #44]	; 0x2c
   1a6e0:	mov	r1, #0
   1a6e4:	add	r0, r0, r6
   1a6e8:	str	r0, [r4, #20]
   1a6ec:	mov	r0, r4
   1a6f0:	blx	r2
   1a6f4:	ldr	r1, [r4, #16]
   1a6f8:	ldr	r0, [r4, #20]
   1a6fc:	sub	r5, r5, r6
   1a700:	sub	r6, r1, r0
   1a704:	cmp	r5, r6
   1a708:	bhi	1a6cc <flatcc_json_printer_int16_vector_field@@Base+0x11c>
   1a70c:	mov	r1, #32
   1a710:	mov	r2, r5
   1a714:	bl	1293c <memset@plt>
   1a718:	ldr	r0, [r4, #20]
   1a71c:	add	r1, r0, r5
   1a720:	str	r1, [r4, #20]
   1a724:	b	1a748 <flatcc_json_printer_int16_vector_field@@Base+0x198>
   1a728:	ldr	r0, [r4, #16]
   1a72c:	cmp	r1, r0
   1a730:	bcc	1a748 <flatcc_json_printer_int16_vector_field@@Base+0x198>
   1a734:	ldr	r2, [r4, #44]	; 0x2c
   1a738:	mov	r0, r4
   1a73c:	mov	r1, #0
   1a740:	blx	r2
   1a744:	ldr	r1, [r4, #20]
   1a748:	ldrh	r0, [r8, #4]
   1a74c:	lsr	r5, r0, #15
   1a750:	sxth	r0, r0
   1a754:	cmn	r0, #1
   1a758:	rsble	r0, r0, #0
   1a75c:	movle	r2, #45	; 0x2d
   1a760:	uxth	r0, r0
   1a764:	strble	r2, [r1], #1
   1a768:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   1a76c:	ldr	r1, [r4, #20]
   1a770:	add	r0, r0, r5
   1a774:	subs	r9, r7, #1
   1a778:	add	r0, r1, r0
   1a77c:	str	r0, [r4, #20]
   1a780:	beq	1a8d0 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   1a784:	ldr	r0, [r4, #20]
   1a788:	add	r7, r8, #6
   1a78c:	mov	r8, #44	; 0x2c
   1a790:	mov	sl, #10
   1a794:	b	1a7f4 <flatcc_json_printer_int16_vector_field@@Base+0x244>
   1a798:	mov	r1, #32
   1a79c:	mov	r2, r5
   1a7a0:	bl	1293c <memset@plt>
   1a7a4:	ldr	r0, [r4, #20]
   1a7a8:	add	r1, r0, r5
   1a7ac:	str	r1, [r4, #20]
   1a7b0:	ldrh	r0, [r7]
   1a7b4:	sub	r9, r9, #1
   1a7b8:	lsr	r5, r0, #15
   1a7bc:	sxth	r0, r0
   1a7c0:	cmn	r0, #1
   1a7c4:	rsble	r0, r0, #0
   1a7c8:	movle	r2, #45	; 0x2d
   1a7cc:	uxth	r0, r0
   1a7d0:	strble	r2, [r1], #1
   1a7d4:	bl	156a8 <flatcc_json_printer_uint16@@Base+0x2c>
   1a7d8:	ldr	r1, [r4, #20]
   1a7dc:	add	r0, r0, r5
   1a7e0:	add	r7, r7, #2
   1a7e4:	cmp	r9, #0
   1a7e8:	add	r0, r1, r0
   1a7ec:	str	r0, [r4, #20]
   1a7f0:	beq	1a8d0 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   1a7f4:	add	r1, r0, #1
   1a7f8:	str	r1, [r4, #20]
   1a7fc:	strb	r8, [r0]
   1a800:	ldrb	r0, [r4, #25]
   1a804:	ldr	r1, [r4, #20]
   1a808:	cmp	r0, #0
   1a80c:	beq	1a8ac <flatcc_json_printer_int16_vector_field@@Base+0x2fc>
   1a810:	add	r0, r1, #1
   1a814:	str	r0, [r4, #20]
   1a818:	strb	sl, [r1]
   1a81c:	ldr	r0, [r4, #20]
   1a820:	ldrb	r2, [r4, #25]
   1a824:	ldr	r3, [r4, #32]
   1a828:	ldr	r1, [r4, #16]
   1a82c:	mla	r6, r3, r2, r0
   1a830:	mul	r5, r3, r2
   1a834:	cmp	r6, r1
   1a838:	bls	1a798 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   1a83c:	cmp	r0, r1
   1a840:	bcc	1a85c <flatcc_json_printer_int16_vector_field@@Base+0x2ac>
   1a844:	ldr	r2, [r4, #44]	; 0x2c
   1a848:	mov	r0, r4
   1a84c:	mov	r1, #0
   1a850:	blx	r2
   1a854:	ldr	r1, [r4, #16]
   1a858:	ldr	r0, [r4, #20]
   1a85c:	sub	r6, r1, r0
   1a860:	cmp	r6, r5
   1a864:	bcs	1a798 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   1a868:	mov	r1, #32
   1a86c:	mov	r2, r6
   1a870:	bl	1293c <memset@plt>
   1a874:	ldr	r0, [r4, #20]
   1a878:	ldr	r2, [r4, #44]	; 0x2c
   1a87c:	mov	r1, #0
   1a880:	add	r0, r0, r6
   1a884:	str	r0, [r4, #20]
   1a888:	mov	r0, r4
   1a88c:	blx	r2
   1a890:	ldr	r1, [r4, #16]
   1a894:	ldr	r0, [r4, #20]
   1a898:	sub	r5, r5, r6
   1a89c:	sub	r6, r1, r0
   1a8a0:	cmp	r5, r6
   1a8a4:	bhi	1a868 <flatcc_json_printer_int16_vector_field@@Base+0x2b8>
   1a8a8:	b	1a798 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   1a8ac:	ldr	r0, [r4, #16]
   1a8b0:	cmp	r1, r0
   1a8b4:	bcc	1a7b0 <flatcc_json_printer_int16_vector_field@@Base+0x200>
   1a8b8:	ldr	r2, [r4, #44]	; 0x2c
   1a8bc:	mov	r0, r4
   1a8c0:	mov	r1, #0
   1a8c4:	blx	r2
   1a8c8:	ldr	r1, [r4, #20]
   1a8cc:	b	1a7b0 <flatcc_json_printer_int16_vector_field@@Base+0x200>
   1a8d0:	ldrb	r1, [r4, #25]
   1a8d4:	ldr	r0, [r4, #20]
   1a8d8:	cmp	r1, #0
   1a8dc:	beq	1a99c <flatcc_json_printer_int16_vector_field@@Base+0x3ec>
   1a8e0:	add	r1, r0, #1
   1a8e4:	str	r1, [r4, #20]
   1a8e8:	mov	r1, #10
   1a8ec:	strb	r1, [r0]
   1a8f0:	ldr	r0, [r4, #32]
   1a8f4:	sub	r2, r0, #1
   1a8f8:	str	r2, [r4, #32]
   1a8fc:	ldrb	r3, [r4, #25]
   1a900:	ldr	r0, [r4, #20]
   1a904:	ldr	r1, [r4, #16]
   1a908:	mla	r7, r2, r3, r0
   1a90c:	mul	r5, r2, r3
   1a910:	cmp	r7, r1
   1a914:	bls	1a984 <flatcc_json_printer_int16_vector_field@@Base+0x3d4>
   1a918:	cmp	r0, r1
   1a91c:	bcc	1a938 <flatcc_json_printer_int16_vector_field@@Base+0x388>
   1a920:	ldr	r2, [r4, #44]	; 0x2c
   1a924:	mov	r0, r4
   1a928:	mov	r1, #0
   1a92c:	blx	r2
   1a930:	ldr	r1, [r4, #16]
   1a934:	ldr	r0, [r4, #20]
   1a938:	sub	r6, r1, r0
   1a93c:	cmp	r6, r5
   1a940:	bcs	1a984 <flatcc_json_printer_int16_vector_field@@Base+0x3d4>
   1a944:	mov	r1, #32
   1a948:	mov	r2, r6
   1a94c:	bl	1293c <memset@plt>
   1a950:	ldr	r0, [r4, #20]
   1a954:	ldr	r2, [r4, #44]	; 0x2c
   1a958:	mov	r1, #0
   1a95c:	add	r0, r0, r6
   1a960:	str	r0, [r4, #20]
   1a964:	mov	r0, r4
   1a968:	blx	r2
   1a96c:	ldr	r1, [r4, #16]
   1a970:	ldr	r0, [r4, #20]
   1a974:	sub	r5, r5, r6
   1a978:	sub	r6, r1, r0
   1a97c:	cmp	r5, r6
   1a980:	bhi	1a944 <flatcc_json_printer_int16_vector_field@@Base+0x394>
   1a984:	mov	r1, #32
   1a988:	mov	r2, r5
   1a98c:	bl	1293c <memset@plt>
   1a990:	ldr	r0, [r4, #20]
   1a994:	add	r0, r0, r5
   1a998:	str	r0, [r4, #20]
   1a99c:	add	r1, r0, #1
   1a9a0:	str	r1, [r4, #20]
   1a9a4:	mov	r1, #93	; 0x5d
   1a9a8:	strb	r1, [r0]
   1a9ac:	sub	sp, fp, #28
   1a9b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a9b4 <flatcc_json_printer_int32_vector_field@@Base>:
   1a9b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a9b8:	add	fp, sp, #28
   1a9bc:	sub	sp, sp, #4
   1a9c0:	mov	r4, r0
   1a9c4:	mov	r0, #4
   1a9c8:	add	r0, r0, r2, lsl #1
   1a9cc:	ldr	r2, [r1, #8]
   1a9d0:	cmp	r0, r2
   1a9d4:	bge	1a9f4 <flatcc_json_printer_int32_vector_field@@Base+0x40>
   1a9d8:	ldr	r2, [r1, #4]
   1a9dc:	add	r0, r2, r0
   1a9e0:	ldrh	r0, [r0]
   1a9e4:	cmp	r0, #0
   1a9e8:	ldrne	r2, [r1]
   1a9ec:	addsne	r8, r2, r0
   1a9f0:	bne	1a9fc <flatcc_json_printer_int32_vector_field@@Base+0x48>
   1a9f4:	sub	sp, fp, #28
   1a9f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a9fc:	ldr	r0, [r1, #16]
   1aa00:	ldr	r2, [fp, #8]
   1aa04:	add	r7, r0, #1
   1aa08:	cmp	r0, #0
   1aa0c:	str	r7, [r1, #16]
   1aa10:	beq	1aa28 <flatcc_json_printer_int32_vector_field@@Base+0x74>
   1aa14:	ldr	r0, [r4, #20]
   1aa18:	add	r1, r0, #1
   1aa1c:	str	r1, [r4, #20]
   1aa20:	mov	r1, #44	; 0x2c
   1aa24:	strb	r1, [r0]
   1aa28:	ldr	r0, [r8]
   1aa2c:	mov	r1, r3
   1aa30:	ldr	r7, [r8, r0]!
   1aa34:	mov	r0, r4
   1aa38:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1aa3c:	ldr	r1, [r4, #32]
   1aa40:	ldr	r0, [r4, #20]
   1aa44:	cmp	r7, #0
   1aa48:	add	r1, r1, #1
   1aa4c:	str	r1, [r4, #32]
   1aa50:	add	r1, r0, #1
   1aa54:	str	r1, [r4, #20]
   1aa58:	mov	r1, #91	; 0x5b
   1aa5c:	strb	r1, [r0]
   1aa60:	beq	1acc4 <flatcc_json_printer_int32_vector_field@@Base+0x310>
   1aa64:	ldrb	r0, [r4, #25]
   1aa68:	ldr	r1, [r4, #20]
   1aa6c:	cmp	r0, #0
   1aa70:	beq	1ab2c <flatcc_json_printer_int32_vector_field@@Base+0x178>
   1aa74:	add	r0, r1, #1
   1aa78:	str	r0, [r4, #20]
   1aa7c:	mov	r0, #10
   1aa80:	strb	r0, [r1]
   1aa84:	ldr	r0, [r4, #20]
   1aa88:	ldrb	r2, [r4, #25]
   1aa8c:	ldr	r3, [r4, #32]
   1aa90:	ldr	r1, [r4, #16]
   1aa94:	mla	r6, r3, r2, r0
   1aa98:	mul	r5, r3, r2
   1aa9c:	cmp	r6, r1
   1aaa0:	bls	1ab10 <flatcc_json_printer_int32_vector_field@@Base+0x15c>
   1aaa4:	cmp	r0, r1
   1aaa8:	bcc	1aac4 <flatcc_json_printer_int32_vector_field@@Base+0x110>
   1aaac:	ldr	r2, [r4, #44]	; 0x2c
   1aab0:	mov	r0, r4
   1aab4:	mov	r1, #0
   1aab8:	blx	r2
   1aabc:	ldr	r1, [r4, #16]
   1aac0:	ldr	r0, [r4, #20]
   1aac4:	sub	r6, r1, r0
   1aac8:	cmp	r6, r5
   1aacc:	bcs	1ab10 <flatcc_json_printer_int32_vector_field@@Base+0x15c>
   1aad0:	mov	r1, #32
   1aad4:	mov	r2, r6
   1aad8:	bl	1293c <memset@plt>
   1aadc:	ldr	r0, [r4, #20]
   1aae0:	ldr	r2, [r4, #44]	; 0x2c
   1aae4:	mov	r1, #0
   1aae8:	add	r0, r0, r6
   1aaec:	str	r0, [r4, #20]
   1aaf0:	mov	r0, r4
   1aaf4:	blx	r2
   1aaf8:	ldr	r1, [r4, #16]
   1aafc:	ldr	r0, [r4, #20]
   1ab00:	sub	r5, r5, r6
   1ab04:	sub	r6, r1, r0
   1ab08:	cmp	r5, r6
   1ab0c:	bhi	1aad0 <flatcc_json_printer_int32_vector_field@@Base+0x11c>
   1ab10:	mov	r1, #32
   1ab14:	mov	r2, r5
   1ab18:	bl	1293c <memset@plt>
   1ab1c:	ldr	r0, [r4, #20]
   1ab20:	add	r1, r0, r5
   1ab24:	str	r1, [r4, #20]
   1ab28:	b	1ab4c <flatcc_json_printer_int32_vector_field@@Base+0x198>
   1ab2c:	ldr	r0, [r4, #16]
   1ab30:	cmp	r1, r0
   1ab34:	bcc	1ab4c <flatcc_json_printer_int32_vector_field@@Base+0x198>
   1ab38:	ldr	r2, [r4, #44]	; 0x2c
   1ab3c:	mov	r0, r4
   1ab40:	mov	r1, #0
   1ab44:	blx	r2
   1ab48:	ldr	r1, [r4, #20]
   1ab4c:	ldr	r0, [r8, #4]
   1ab50:	cmn	r0, #1
   1ab54:	lsr	r5, r0, #31
   1ab58:	movle	r2, #45	; 0x2d
   1ab5c:	rsble	r0, r0, #0
   1ab60:	strble	r2, [r1], #1
   1ab64:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   1ab68:	ldr	r1, [r4, #20]
   1ab6c:	add	r0, r0, r5
   1ab70:	subs	r9, r7, #1
   1ab74:	add	r0, r1, r0
   1ab78:	str	r0, [r4, #20]
   1ab7c:	beq	1acc4 <flatcc_json_printer_int32_vector_field@@Base+0x310>
   1ab80:	ldr	r0, [r4, #20]
   1ab84:	add	r7, r8, #8
   1ab88:	mov	r8, #44	; 0x2c
   1ab8c:	mov	sl, #10
   1ab90:	b	1abe8 <flatcc_json_printer_int32_vector_field@@Base+0x234>
   1ab94:	mov	r1, #32
   1ab98:	mov	r2, r5
   1ab9c:	bl	1293c <memset@plt>
   1aba0:	ldr	r0, [r4, #20]
   1aba4:	add	r1, r0, r5
   1aba8:	str	r1, [r4, #20]
   1abac:	ldr	r0, [r7]
   1abb0:	sub	r9, r9, #1
   1abb4:	cmn	r0, #1
   1abb8:	lsr	r5, r0, #31
   1abbc:	movle	r2, #45	; 0x2d
   1abc0:	rsble	r0, r0, #0
   1abc4:	strble	r2, [r1], #1
   1abc8:	bl	15854 <flatcc_json_printer_uint32@@Base+0x2c>
   1abcc:	ldr	r1, [r4, #20]
   1abd0:	add	r0, r0, r5
   1abd4:	add	r7, r7, #4
   1abd8:	cmp	r9, #0
   1abdc:	add	r0, r1, r0
   1abe0:	str	r0, [r4, #20]
   1abe4:	beq	1acc4 <flatcc_json_printer_int32_vector_field@@Base+0x310>
   1abe8:	add	r1, r0, #1
   1abec:	str	r1, [r4, #20]
   1abf0:	strb	r8, [r0]
   1abf4:	ldrb	r0, [r4, #25]
   1abf8:	ldr	r1, [r4, #20]
   1abfc:	cmp	r0, #0
   1ac00:	beq	1aca0 <flatcc_json_printer_int32_vector_field@@Base+0x2ec>
   1ac04:	add	r0, r1, #1
   1ac08:	str	r0, [r4, #20]
   1ac0c:	strb	sl, [r1]
   1ac10:	ldr	r0, [r4, #20]
   1ac14:	ldrb	r2, [r4, #25]
   1ac18:	ldr	r3, [r4, #32]
   1ac1c:	ldr	r1, [r4, #16]
   1ac20:	mla	r6, r3, r2, r0
   1ac24:	mul	r5, r3, r2
   1ac28:	cmp	r6, r1
   1ac2c:	bls	1ab94 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   1ac30:	cmp	r0, r1
   1ac34:	bcc	1ac50 <flatcc_json_printer_int32_vector_field@@Base+0x29c>
   1ac38:	ldr	r2, [r4, #44]	; 0x2c
   1ac3c:	mov	r0, r4
   1ac40:	mov	r1, #0
   1ac44:	blx	r2
   1ac48:	ldr	r1, [r4, #16]
   1ac4c:	ldr	r0, [r4, #20]
   1ac50:	sub	r6, r1, r0
   1ac54:	cmp	r6, r5
   1ac58:	bcs	1ab94 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   1ac5c:	mov	r1, #32
   1ac60:	mov	r2, r6
   1ac64:	bl	1293c <memset@plt>
   1ac68:	ldr	r0, [r4, #20]
   1ac6c:	ldr	r2, [r4, #44]	; 0x2c
   1ac70:	mov	r1, #0
   1ac74:	add	r0, r0, r6
   1ac78:	str	r0, [r4, #20]
   1ac7c:	mov	r0, r4
   1ac80:	blx	r2
   1ac84:	ldr	r1, [r4, #16]
   1ac88:	ldr	r0, [r4, #20]
   1ac8c:	sub	r5, r5, r6
   1ac90:	sub	r6, r1, r0
   1ac94:	cmp	r5, r6
   1ac98:	bhi	1ac5c <flatcc_json_printer_int32_vector_field@@Base+0x2a8>
   1ac9c:	b	1ab94 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   1aca0:	ldr	r0, [r4, #16]
   1aca4:	cmp	r1, r0
   1aca8:	bcc	1abac <flatcc_json_printer_int32_vector_field@@Base+0x1f8>
   1acac:	ldr	r2, [r4, #44]	; 0x2c
   1acb0:	mov	r0, r4
   1acb4:	mov	r1, #0
   1acb8:	blx	r2
   1acbc:	ldr	r1, [r4, #20]
   1acc0:	b	1abac <flatcc_json_printer_int32_vector_field@@Base+0x1f8>
   1acc4:	ldrb	r1, [r4, #25]
   1acc8:	ldr	r0, [r4, #20]
   1accc:	cmp	r1, #0
   1acd0:	beq	1ad90 <flatcc_json_printer_int32_vector_field@@Base+0x3dc>
   1acd4:	add	r1, r0, #1
   1acd8:	str	r1, [r4, #20]
   1acdc:	mov	r1, #10
   1ace0:	strb	r1, [r0]
   1ace4:	ldr	r0, [r4, #32]
   1ace8:	sub	r2, r0, #1
   1acec:	str	r2, [r4, #32]
   1acf0:	ldrb	r3, [r4, #25]
   1acf4:	ldr	r0, [r4, #20]
   1acf8:	ldr	r1, [r4, #16]
   1acfc:	mla	r7, r2, r3, r0
   1ad00:	mul	r5, r2, r3
   1ad04:	cmp	r7, r1
   1ad08:	bls	1ad78 <flatcc_json_printer_int32_vector_field@@Base+0x3c4>
   1ad0c:	cmp	r0, r1
   1ad10:	bcc	1ad2c <flatcc_json_printer_int32_vector_field@@Base+0x378>
   1ad14:	ldr	r2, [r4, #44]	; 0x2c
   1ad18:	mov	r0, r4
   1ad1c:	mov	r1, #0
   1ad20:	blx	r2
   1ad24:	ldr	r1, [r4, #16]
   1ad28:	ldr	r0, [r4, #20]
   1ad2c:	sub	r6, r1, r0
   1ad30:	cmp	r6, r5
   1ad34:	bcs	1ad78 <flatcc_json_printer_int32_vector_field@@Base+0x3c4>
   1ad38:	mov	r1, #32
   1ad3c:	mov	r2, r6
   1ad40:	bl	1293c <memset@plt>
   1ad44:	ldr	r0, [r4, #20]
   1ad48:	ldr	r2, [r4, #44]	; 0x2c
   1ad4c:	mov	r1, #0
   1ad50:	add	r0, r0, r6
   1ad54:	str	r0, [r4, #20]
   1ad58:	mov	r0, r4
   1ad5c:	blx	r2
   1ad60:	ldr	r1, [r4, #16]
   1ad64:	ldr	r0, [r4, #20]
   1ad68:	sub	r5, r5, r6
   1ad6c:	sub	r6, r1, r0
   1ad70:	cmp	r5, r6
   1ad74:	bhi	1ad38 <flatcc_json_printer_int32_vector_field@@Base+0x384>
   1ad78:	mov	r1, #32
   1ad7c:	mov	r2, r5
   1ad80:	bl	1293c <memset@plt>
   1ad84:	ldr	r0, [r4, #20]
   1ad88:	add	r0, r0, r5
   1ad8c:	str	r0, [r4, #20]
   1ad90:	add	r1, r0, #1
   1ad94:	str	r1, [r4, #20]
   1ad98:	mov	r1, #93	; 0x5d
   1ad9c:	strb	r1, [r0]
   1ada0:	sub	sp, fp, #28
   1ada4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ada8 <flatcc_json_printer_int64_vector_field@@Base>:
   1ada8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1adac:	add	fp, sp, #28
   1adb0:	sub	sp, sp, #4
   1adb4:	mov	r4, r0
   1adb8:	mov	r0, #4
   1adbc:	add	r0, r0, r2, lsl #1
   1adc0:	ldr	r2, [r1, #8]
   1adc4:	cmp	r0, r2
   1adc8:	bge	1ade8 <flatcc_json_printer_int64_vector_field@@Base+0x40>
   1adcc:	ldr	r2, [r1, #4]
   1add0:	add	r0, r2, r0
   1add4:	ldrh	r0, [r0]
   1add8:	cmp	r0, #0
   1addc:	ldrne	r2, [r1]
   1ade0:	addsne	r8, r2, r0
   1ade4:	bne	1adf0 <flatcc_json_printer_int64_vector_field@@Base+0x48>
   1ade8:	sub	sp, fp, #28
   1adec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1adf0:	ldr	r0, [r1, #16]
   1adf4:	ldr	r2, [fp, #8]
   1adf8:	add	r7, r0, #1
   1adfc:	cmp	r0, #0
   1ae00:	str	r7, [r1, #16]
   1ae04:	beq	1ae1c <flatcc_json_printer_int64_vector_field@@Base+0x74>
   1ae08:	ldr	r0, [r4, #20]
   1ae0c:	add	r1, r0, #1
   1ae10:	str	r1, [r4, #20]
   1ae14:	mov	r1, #44	; 0x2c
   1ae18:	strb	r1, [r0]
   1ae1c:	ldr	r0, [r8]
   1ae20:	mov	r1, r3
   1ae24:	ldr	r7, [r8, r0]!
   1ae28:	mov	r0, r4
   1ae2c:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1ae30:	ldr	r1, [r4, #32]
   1ae34:	ldr	r0, [r4, #20]
   1ae38:	cmp	r7, #0
   1ae3c:	add	r1, r1, #1
   1ae40:	str	r1, [r4, #32]
   1ae44:	add	r1, r0, #1
   1ae48:	str	r1, [r4, #20]
   1ae4c:	mov	r1, #91	; 0x5b
   1ae50:	strb	r1, [r0]
   1ae54:	beq	1b0c8 <flatcc_json_printer_int64_vector_field@@Base+0x320>
   1ae58:	ldrb	r0, [r4, #25]
   1ae5c:	ldr	r2, [r4, #20]
   1ae60:	cmp	r0, #0
   1ae64:	beq	1af20 <flatcc_json_printer_int64_vector_field@@Base+0x178>
   1ae68:	add	r0, r2, #1
   1ae6c:	str	r0, [r4, #20]
   1ae70:	mov	r0, #10
   1ae74:	strb	r0, [r2]
   1ae78:	ldr	r0, [r4, #20]
   1ae7c:	ldrb	r2, [r4, #25]
   1ae80:	ldr	r3, [r4, #32]
   1ae84:	ldr	r1, [r4, #16]
   1ae88:	mla	r6, r3, r2, r0
   1ae8c:	mul	r5, r3, r2
   1ae90:	cmp	r6, r1
   1ae94:	bls	1af04 <flatcc_json_printer_int64_vector_field@@Base+0x15c>
   1ae98:	cmp	r0, r1
   1ae9c:	bcc	1aeb8 <flatcc_json_printer_int64_vector_field@@Base+0x110>
   1aea0:	ldr	r2, [r4, #44]	; 0x2c
   1aea4:	mov	r0, r4
   1aea8:	mov	r1, #0
   1aeac:	blx	r2
   1aeb0:	ldr	r1, [r4, #16]
   1aeb4:	ldr	r0, [r4, #20]
   1aeb8:	sub	r6, r1, r0
   1aebc:	cmp	r6, r5
   1aec0:	bcs	1af04 <flatcc_json_printer_int64_vector_field@@Base+0x15c>
   1aec4:	mov	r1, #32
   1aec8:	mov	r2, r6
   1aecc:	bl	1293c <memset@plt>
   1aed0:	ldr	r0, [r4, #20]
   1aed4:	ldr	r2, [r4, #44]	; 0x2c
   1aed8:	mov	r1, #0
   1aedc:	add	r0, r0, r6
   1aee0:	str	r0, [r4, #20]
   1aee4:	mov	r0, r4
   1aee8:	blx	r2
   1aeec:	ldr	r1, [r4, #16]
   1aef0:	ldr	r0, [r4, #20]
   1aef4:	sub	r5, r5, r6
   1aef8:	sub	r6, r1, r0
   1aefc:	cmp	r5, r6
   1af00:	bhi	1aec4 <flatcc_json_printer_int64_vector_field@@Base+0x11c>
   1af04:	mov	r1, #32
   1af08:	mov	r2, r5
   1af0c:	bl	1293c <memset@plt>
   1af10:	ldr	r0, [r4, #20]
   1af14:	add	r2, r0, r5
   1af18:	str	r2, [r4, #20]
   1af1c:	b	1af40 <flatcc_json_printer_int64_vector_field@@Base+0x198>
   1af20:	ldr	r0, [r4, #16]
   1af24:	cmp	r2, r0
   1af28:	bcc	1af40 <flatcc_json_printer_int64_vector_field@@Base+0x198>
   1af2c:	ldr	r2, [r4, #44]	; 0x2c
   1af30:	mov	r0, r4
   1af34:	mov	r1, #0
   1af38:	blx	r2
   1af3c:	ldr	r2, [r4, #20]
   1af40:	ldrd	r0, [r8, #4]
   1af44:	lsr	r5, r1, #31
   1af48:	cmn	r1, #1
   1af4c:	bgt	1af60 <flatcc_json_printer_int64_vector_field@@Base+0x1b8>
   1af50:	mov	r3, #45	; 0x2d
   1af54:	rsbs	r0, r0, #0
   1af58:	strb	r3, [r2], #1
   1af5c:	rsc	r1, r1, #0
   1af60:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   1af64:	ldr	r1, [r4, #20]
   1af68:	add	r0, r0, r5
   1af6c:	subs	r9, r7, #1
   1af70:	add	r0, r1, r0
   1af74:	str	r0, [r4, #20]
   1af78:	beq	1b0c8 <flatcc_json_printer_int64_vector_field@@Base+0x320>
   1af7c:	ldr	r0, [r4, #20]
   1af80:	add	r7, r8, #12
   1af84:	mov	r8, #44	; 0x2c
   1af88:	mov	sl, #10
   1af8c:	b	1afb0 <flatcc_json_printer_int64_vector_field@@Base+0x208>
   1af90:	bl	15ba8 <flatcc_json_printer_uint64@@Base+0x30>
   1af94:	ldr	r1, [r4, #20]
   1af98:	add	r0, r0, r5
   1af9c:	add	r7, r7, #8
   1afa0:	cmp	r9, #0
   1afa4:	add	r0, r1, r0
   1afa8:	str	r0, [r4, #20]
   1afac:	beq	1b0c8 <flatcc_json_printer_int64_vector_field@@Base+0x320>
   1afb0:	add	r1, r0, #1
   1afb4:	str	r1, [r4, #20]
   1afb8:	strb	r8, [r0]
   1afbc:	ldrb	r0, [r4, #25]
   1afc0:	ldr	r2, [r4, #20]
   1afc4:	cmp	r0, #0
   1afc8:	beq	1b080 <flatcc_json_printer_int64_vector_field@@Base+0x2d8>
   1afcc:	add	r0, r2, #1
   1afd0:	str	r0, [r4, #20]
   1afd4:	strb	sl, [r2]
   1afd8:	ldr	r0, [r4, #20]
   1afdc:	ldrb	r2, [r4, #25]
   1afe0:	ldr	r3, [r4, #32]
   1afe4:	ldr	r1, [r4, #16]
   1afe8:	mla	r6, r3, r2, r0
   1afec:	mul	r5, r3, r2
   1aff0:	cmp	r6, r1
   1aff4:	bls	1b064 <flatcc_json_printer_int64_vector_field@@Base+0x2bc>
   1aff8:	cmp	r0, r1
   1affc:	bcc	1b018 <flatcc_json_printer_int64_vector_field@@Base+0x270>
   1b000:	ldr	r2, [r4, #44]	; 0x2c
   1b004:	mov	r0, r4
   1b008:	mov	r1, #0
   1b00c:	blx	r2
   1b010:	ldr	r1, [r4, #16]
   1b014:	ldr	r0, [r4, #20]
   1b018:	sub	r6, r1, r0
   1b01c:	cmp	r6, r5
   1b020:	bcs	1b064 <flatcc_json_printer_int64_vector_field@@Base+0x2bc>
   1b024:	mov	r1, #32
   1b028:	mov	r2, r6
   1b02c:	bl	1293c <memset@plt>
   1b030:	ldr	r0, [r4, #20]
   1b034:	ldr	r2, [r4, #44]	; 0x2c
   1b038:	mov	r1, #0
   1b03c:	add	r0, r0, r6
   1b040:	str	r0, [r4, #20]
   1b044:	mov	r0, r4
   1b048:	blx	r2
   1b04c:	ldr	r1, [r4, #16]
   1b050:	ldr	r0, [r4, #20]
   1b054:	sub	r5, r5, r6
   1b058:	sub	r6, r1, r0
   1b05c:	cmp	r5, r6
   1b060:	bhi	1b024 <flatcc_json_printer_int64_vector_field@@Base+0x27c>
   1b064:	mov	r1, #32
   1b068:	mov	r2, r5
   1b06c:	bl	1293c <memset@plt>
   1b070:	ldr	r0, [r4, #20]
   1b074:	add	r2, r0, r5
   1b078:	str	r2, [r4, #20]
   1b07c:	b	1b0a0 <flatcc_json_printer_int64_vector_field@@Base+0x2f8>
   1b080:	ldr	r0, [r4, #16]
   1b084:	cmp	r2, r0
   1b088:	bcc	1b0a0 <flatcc_json_printer_int64_vector_field@@Base+0x2f8>
   1b08c:	ldr	r2, [r4, #44]	; 0x2c
   1b090:	mov	r0, r4
   1b094:	mov	r1, #0
   1b098:	blx	r2
   1b09c:	ldr	r2, [r4, #20]
   1b0a0:	ldrd	r0, [r7]
   1b0a4:	sub	r9, r9, #1
   1b0a8:	lsr	r5, r1, #31
   1b0ac:	cmn	r1, #1
   1b0b0:	bgt	1af90 <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
   1b0b4:	mov	r3, #45	; 0x2d
   1b0b8:	rsbs	r0, r0, #0
   1b0bc:	strb	r3, [r2], #1
   1b0c0:	rsc	r1, r1, #0
   1b0c4:	b	1af90 <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
   1b0c8:	ldrb	r1, [r4, #25]
   1b0cc:	ldr	r0, [r4, #20]
   1b0d0:	cmp	r1, #0
   1b0d4:	beq	1b194 <flatcc_json_printer_int64_vector_field@@Base+0x3ec>
   1b0d8:	add	r1, r0, #1
   1b0dc:	str	r1, [r4, #20]
   1b0e0:	mov	r1, #10
   1b0e4:	strb	r1, [r0]
   1b0e8:	ldr	r0, [r4, #32]
   1b0ec:	sub	r2, r0, #1
   1b0f0:	str	r2, [r4, #32]
   1b0f4:	ldrb	r3, [r4, #25]
   1b0f8:	ldr	r0, [r4, #20]
   1b0fc:	ldr	r1, [r4, #16]
   1b100:	mla	r7, r2, r3, r0
   1b104:	mul	r5, r2, r3
   1b108:	cmp	r7, r1
   1b10c:	bls	1b17c <flatcc_json_printer_int64_vector_field@@Base+0x3d4>
   1b110:	cmp	r0, r1
   1b114:	bcc	1b130 <flatcc_json_printer_int64_vector_field@@Base+0x388>
   1b118:	ldr	r2, [r4, #44]	; 0x2c
   1b11c:	mov	r0, r4
   1b120:	mov	r1, #0
   1b124:	blx	r2
   1b128:	ldr	r1, [r4, #16]
   1b12c:	ldr	r0, [r4, #20]
   1b130:	sub	r6, r1, r0
   1b134:	cmp	r6, r5
   1b138:	bcs	1b17c <flatcc_json_printer_int64_vector_field@@Base+0x3d4>
   1b13c:	mov	r1, #32
   1b140:	mov	r2, r6
   1b144:	bl	1293c <memset@plt>
   1b148:	ldr	r0, [r4, #20]
   1b14c:	ldr	r2, [r4, #44]	; 0x2c
   1b150:	mov	r1, #0
   1b154:	add	r0, r0, r6
   1b158:	str	r0, [r4, #20]
   1b15c:	mov	r0, r4
   1b160:	blx	r2
   1b164:	ldr	r1, [r4, #16]
   1b168:	ldr	r0, [r4, #20]
   1b16c:	sub	r5, r5, r6
   1b170:	sub	r6, r1, r0
   1b174:	cmp	r5, r6
   1b178:	bhi	1b13c <flatcc_json_printer_int64_vector_field@@Base+0x394>
   1b17c:	mov	r1, #32
   1b180:	mov	r2, r5
   1b184:	bl	1293c <memset@plt>
   1b188:	ldr	r0, [r4, #20]
   1b18c:	add	r0, r0, r5
   1b190:	str	r0, [r4, #20]
   1b194:	add	r1, r0, #1
   1b198:	str	r1, [r4, #20]
   1b19c:	mov	r1, #93	; 0x5d
   1b1a0:	strb	r1, [r0]
   1b1a4:	sub	sp, fp, #28
   1b1a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b1ac <flatcc_json_printer_bool_vector_field@@Base>:
   1b1ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b1b0:	add	fp, sp, #28
   1b1b4:	sub	sp, sp, #4
   1b1b8:	mov	r4, r0
   1b1bc:	mov	r0, #4
   1b1c0:	add	r0, r0, r2, lsl #1
   1b1c4:	ldr	r2, [r1, #8]
   1b1c8:	cmp	r0, r2
   1b1cc:	bge	1b1ec <flatcc_json_printer_bool_vector_field@@Base+0x40>
   1b1d0:	ldr	r2, [r1, #4]
   1b1d4:	add	r0, r2, r0
   1b1d8:	ldrh	r0, [r0]
   1b1dc:	cmp	r0, #0
   1b1e0:	ldrne	r2, [r1]
   1b1e4:	addsne	sl, r2, r0
   1b1e8:	bne	1b1f4 <flatcc_json_printer_bool_vector_field@@Base+0x48>
   1b1ec:	sub	sp, fp, #28
   1b1f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1f4:	ldr	r0, [r1, #16]
   1b1f8:	ldr	r2, [fp, #8]
   1b1fc:	add	r7, r0, #1
   1b200:	cmp	r0, #0
   1b204:	str	r7, [r1, #16]
   1b208:	beq	1b220 <flatcc_json_printer_bool_vector_field@@Base+0x74>
   1b20c:	ldr	r0, [r4, #20]
   1b210:	add	r1, r0, #1
   1b214:	str	r1, [r4, #20]
   1b218:	mov	r1, #44	; 0x2c
   1b21c:	strb	r1, [r0]
   1b220:	ldr	r0, [sl]
   1b224:	mov	r1, r3
   1b228:	ldr	r9, [sl, r0]!
   1b22c:	mov	r0, r4
   1b230:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1b234:	ldr	r1, [r4, #32]
   1b238:	ldr	r0, [r4, #20]
   1b23c:	cmp	r9, #0
   1b240:	add	r1, r1, #1
   1b244:	str	r1, [r4, #32]
   1b248:	add	r1, r0, #1
   1b24c:	str	r1, [r4, #20]
   1b250:	mov	r1, #91	; 0x5b
   1b254:	strb	r1, [r0]
   1b258:	beq	1b4f0 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   1b25c:	ldrb	r1, [r4, #25]
   1b260:	ldr	r0, [r4, #20]
   1b264:	cmp	r1, #0
   1b268:	beq	1b324 <flatcc_json_printer_bool_vector_field@@Base+0x178>
   1b26c:	add	r1, r0, #1
   1b270:	str	r1, [r4, #20]
   1b274:	mov	r1, #10
   1b278:	strb	r1, [r0]
   1b27c:	ldr	r0, [r4, #20]
   1b280:	ldrb	r2, [r4, #25]
   1b284:	ldr	r3, [r4, #32]
   1b288:	ldr	r1, [r4, #16]
   1b28c:	mla	r7, r3, r2, r0
   1b290:	mul	r5, r3, r2
   1b294:	cmp	r7, r1
   1b298:	bls	1b308 <flatcc_json_printer_bool_vector_field@@Base+0x15c>
   1b29c:	cmp	r0, r1
   1b2a0:	bcc	1b2bc <flatcc_json_printer_bool_vector_field@@Base+0x110>
   1b2a4:	ldr	r2, [r4, #44]	; 0x2c
   1b2a8:	mov	r0, r4
   1b2ac:	mov	r1, #0
   1b2b0:	blx	r2
   1b2b4:	ldr	r1, [r4, #16]
   1b2b8:	ldr	r0, [r4, #20]
   1b2bc:	sub	r6, r1, r0
   1b2c0:	cmp	r6, r5
   1b2c4:	bcs	1b308 <flatcc_json_printer_bool_vector_field@@Base+0x15c>
   1b2c8:	mov	r1, #32
   1b2cc:	mov	r2, r6
   1b2d0:	bl	1293c <memset@plt>
   1b2d4:	ldr	r0, [r4, #20]
   1b2d8:	ldr	r2, [r4, #44]	; 0x2c
   1b2dc:	mov	r1, #0
   1b2e0:	add	r0, r0, r6
   1b2e4:	str	r0, [r4, #20]
   1b2e8:	mov	r0, r4
   1b2ec:	blx	r2
   1b2f0:	ldr	r1, [r4, #16]
   1b2f4:	ldr	r0, [r4, #20]
   1b2f8:	sub	r5, r5, r6
   1b2fc:	sub	r6, r1, r0
   1b300:	cmp	r5, r6
   1b304:	bhi	1b2c8 <flatcc_json_printer_bool_vector_field@@Base+0x11c>
   1b308:	mov	r1, #32
   1b30c:	mov	r2, r5
   1b310:	bl	1293c <memset@plt>
   1b314:	ldr	r0, [r4, #20]
   1b318:	add	r0, r0, r5
   1b31c:	str	r0, [r4, #20]
   1b320:	b	1b344 <flatcc_json_printer_bool_vector_field@@Base+0x198>
   1b324:	ldr	r1, [r4, #16]
   1b328:	cmp	r0, r1
   1b32c:	bcc	1b344 <flatcc_json_printer_bool_vector_field@@Base+0x198>
   1b330:	ldr	r2, [r4, #44]	; 0x2c
   1b334:	mov	r0, r4
   1b338:	mov	r1, #0
   1b33c:	blx	r2
   1b340:	ldr	r0, [r4, #20]
   1b344:	ldrb	r1, [sl, #4]
   1b348:	movw	r8, #29300	; 0x7274
   1b34c:	movt	r8, #25973	; 0x6575
   1b350:	cmp	r1, #0
   1b354:	beq	1b36c <flatcc_json_printer_bool_vector_field@@Base+0x1c0>
   1b358:	mov	r1, #0
   1b35c:	str	r8, [r0]
   1b360:	strb	r1, [r0, #4]
   1b364:	mov	r0, #4
   1b368:	b	1b384 <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   1b36c:	mov	r1, #101	; 0x65
   1b370:	strh	r1, [r0, #4]
   1b374:	movw	r1, #24934	; 0x6166
   1b378:	movt	r1, #29548	; 0x736c
   1b37c:	str	r1, [r0]
   1b380:	mov	r0, #5
   1b384:	ldr	r1, [r4, #20]
   1b388:	subs	r9, r9, #1
   1b38c:	add	r0, r1, r0
   1b390:	str	r0, [r4, #20]
   1b394:	beq	1b4f0 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   1b398:	ldr	r0, [r4, #20]
   1b39c:	add	r7, sl, #5
   1b3a0:	mov	sl, #44	; 0x2c
   1b3a4:	b	1b3d8 <flatcc_json_printer_bool_vector_field@@Base+0x22c>
   1b3a8:	mov	r1, #101	; 0x65
   1b3ac:	strh	r1, [r0, #4]
   1b3b0:	movw	r1, #24934	; 0x6166
   1b3b4:	movt	r1, #29548	; 0x736c
   1b3b8:	str	r1, [r0]
   1b3bc:	mov	r0, #5
   1b3c0:	ldr	r1, [r4, #20]
   1b3c4:	add	r7, r7, #1
   1b3c8:	cmp	r9, #0
   1b3cc:	add	r0, r1, r0
   1b3d0:	str	r0, [r4, #20]
   1b3d4:	beq	1b4f0 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   1b3d8:	add	r1, r0, #1
   1b3dc:	str	r1, [r4, #20]
   1b3e0:	strb	sl, [r0]
   1b3e4:	ldrb	r1, [r4, #25]
   1b3e8:	ldr	r0, [r4, #20]
   1b3ec:	cmp	r1, #0
   1b3f0:	beq	1b4ac <flatcc_json_printer_bool_vector_field@@Base+0x300>
   1b3f4:	add	r1, r0, #1
   1b3f8:	str	r1, [r4, #20]
   1b3fc:	mov	r1, #10
   1b400:	strb	r1, [r0]
   1b404:	ldr	r0, [r4, #20]
   1b408:	ldrb	r2, [r4, #25]
   1b40c:	ldr	r3, [r4, #32]
   1b410:	ldr	r1, [r4, #16]
   1b414:	mla	r6, r3, r2, r0
   1b418:	mul	r5, r3, r2
   1b41c:	cmp	r6, r1
   1b420:	bls	1b490 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   1b424:	cmp	r0, r1
   1b428:	bcc	1b444 <flatcc_json_printer_bool_vector_field@@Base+0x298>
   1b42c:	ldr	r2, [r4, #44]	; 0x2c
   1b430:	mov	r0, r4
   1b434:	mov	r1, #0
   1b438:	blx	r2
   1b43c:	ldr	r1, [r4, #16]
   1b440:	ldr	r0, [r4, #20]
   1b444:	sub	r6, r1, r0
   1b448:	cmp	r6, r5
   1b44c:	bcs	1b490 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   1b450:	mov	r1, #32
   1b454:	mov	r2, r6
   1b458:	bl	1293c <memset@plt>
   1b45c:	ldr	r0, [r4, #20]
   1b460:	ldr	r2, [r4, #44]	; 0x2c
   1b464:	mov	r1, #0
   1b468:	add	r0, r0, r6
   1b46c:	str	r0, [r4, #20]
   1b470:	mov	r0, r4
   1b474:	blx	r2
   1b478:	ldr	r1, [r4, #16]
   1b47c:	ldr	r0, [r4, #20]
   1b480:	sub	r5, r5, r6
   1b484:	sub	r6, r1, r0
   1b488:	cmp	r5, r6
   1b48c:	bhi	1b450 <flatcc_json_printer_bool_vector_field@@Base+0x2a4>
   1b490:	mov	r1, #32
   1b494:	mov	r2, r5
   1b498:	bl	1293c <memset@plt>
   1b49c:	ldr	r0, [r4, #20]
   1b4a0:	add	r0, r0, r5
   1b4a4:	str	r0, [r4, #20]
   1b4a8:	b	1b4cc <flatcc_json_printer_bool_vector_field@@Base+0x320>
   1b4ac:	ldr	r1, [r4, #16]
   1b4b0:	cmp	r0, r1
   1b4b4:	bcc	1b4cc <flatcc_json_printer_bool_vector_field@@Base+0x320>
   1b4b8:	ldr	r2, [r4, #44]	; 0x2c
   1b4bc:	mov	r0, r4
   1b4c0:	mov	r1, #0
   1b4c4:	blx	r2
   1b4c8:	ldr	r0, [r4, #20]
   1b4cc:	ldrb	r1, [r7]
   1b4d0:	sub	r9, r9, #1
   1b4d4:	cmp	r1, #0
   1b4d8:	beq	1b3a8 <flatcc_json_printer_bool_vector_field@@Base+0x1fc>
   1b4dc:	mov	r1, #0
   1b4e0:	str	r8, [r0]
   1b4e4:	strb	r1, [r0, #4]
   1b4e8:	mov	r0, #4
   1b4ec:	b	1b3c0 <flatcc_json_printer_bool_vector_field@@Base+0x214>
   1b4f0:	ldrb	r1, [r4, #25]
   1b4f4:	ldr	r0, [r4, #20]
   1b4f8:	cmp	r1, #0
   1b4fc:	beq	1b5bc <flatcc_json_printer_bool_vector_field@@Base+0x410>
   1b500:	add	r1, r0, #1
   1b504:	str	r1, [r4, #20]
   1b508:	mov	r1, #10
   1b50c:	strb	r1, [r0]
   1b510:	ldr	r0, [r4, #32]
   1b514:	sub	r2, r0, #1
   1b518:	str	r2, [r4, #32]
   1b51c:	ldrb	r3, [r4, #25]
   1b520:	ldr	r0, [r4, #20]
   1b524:	ldr	r1, [r4, #16]
   1b528:	mla	r7, r2, r3, r0
   1b52c:	mul	r5, r2, r3
   1b530:	cmp	r7, r1
   1b534:	bls	1b5a4 <flatcc_json_printer_bool_vector_field@@Base+0x3f8>
   1b538:	cmp	r0, r1
   1b53c:	bcc	1b558 <flatcc_json_printer_bool_vector_field@@Base+0x3ac>
   1b540:	ldr	r2, [r4, #44]	; 0x2c
   1b544:	mov	r0, r4
   1b548:	mov	r1, #0
   1b54c:	blx	r2
   1b550:	ldr	r1, [r4, #16]
   1b554:	ldr	r0, [r4, #20]
   1b558:	sub	r6, r1, r0
   1b55c:	cmp	r6, r5
   1b560:	bcs	1b5a4 <flatcc_json_printer_bool_vector_field@@Base+0x3f8>
   1b564:	mov	r1, #32
   1b568:	mov	r2, r6
   1b56c:	bl	1293c <memset@plt>
   1b570:	ldr	r0, [r4, #20]
   1b574:	ldr	r2, [r4, #44]	; 0x2c
   1b578:	mov	r1, #0
   1b57c:	add	r0, r0, r6
   1b580:	str	r0, [r4, #20]
   1b584:	mov	r0, r4
   1b588:	blx	r2
   1b58c:	ldr	r1, [r4, #16]
   1b590:	ldr	r0, [r4, #20]
   1b594:	sub	r5, r5, r6
   1b598:	sub	r6, r1, r0
   1b59c:	cmp	r5, r6
   1b5a0:	bhi	1b564 <flatcc_json_printer_bool_vector_field@@Base+0x3b8>
   1b5a4:	mov	r1, #32
   1b5a8:	mov	r2, r5
   1b5ac:	bl	1293c <memset@plt>
   1b5b0:	ldr	r0, [r4, #20]
   1b5b4:	add	r0, r0, r5
   1b5b8:	str	r0, [r4, #20]
   1b5bc:	add	r1, r0, #1
   1b5c0:	str	r1, [r4, #20]
   1b5c4:	mov	r1, #93	; 0x5d
   1b5c8:	strb	r1, [r0]
   1b5cc:	sub	sp, fp, #28
   1b5d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b5d4 <flatcc_json_printer_float_vector_field@@Base>:
   1b5d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b5d8:	add	fp, sp, #28
   1b5dc:	sub	sp, sp, #4
   1b5e0:	mov	r4, r0
   1b5e4:	mov	r0, #4
   1b5e8:	add	r0, r0, r2, lsl #1
   1b5ec:	ldr	r2, [r1, #8]
   1b5f0:	cmp	r0, r2
   1b5f4:	bge	1b614 <flatcc_json_printer_float_vector_field@@Base+0x40>
   1b5f8:	ldr	r2, [r1, #4]
   1b5fc:	add	r0, r2, r0
   1b600:	ldrh	r0, [r0]
   1b604:	cmp	r0, #0
   1b608:	ldrne	r2, [r1]
   1b60c:	addsne	r8, r2, r0
   1b610:	bne	1b61c <flatcc_json_printer_float_vector_field@@Base+0x48>
   1b614:	sub	sp, fp, #28
   1b618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b61c:	ldr	r0, [r1, #16]
   1b620:	ldr	r2, [fp, #8]
   1b624:	add	r7, r0, #1
   1b628:	cmp	r0, #0
   1b62c:	str	r7, [r1, #16]
   1b630:	beq	1b648 <flatcc_json_printer_float_vector_field@@Base+0x74>
   1b634:	ldr	r0, [r4, #20]
   1b638:	add	r1, r0, #1
   1b63c:	str	r1, [r4, #20]
   1b640:	mov	r1, #44	; 0x2c
   1b644:	strb	r1, [r0]
   1b648:	ldr	r0, [r8]
   1b64c:	mov	r1, r3
   1b650:	ldr	r7, [r8, r0]!
   1b654:	mov	r0, r4
   1b658:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1b65c:	ldr	r1, [r4, #32]
   1b660:	ldr	r0, [r4, #20]
   1b664:	cmp	r7, #0
   1b668:	add	r1, r1, #1
   1b66c:	str	r1, [r4, #32]
   1b670:	add	r1, r0, #1
   1b674:	str	r1, [r4, #20]
   1b678:	mov	r1, #91	; 0x5b
   1b67c:	strb	r1, [r0]
   1b680:	beq	1b8bc <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   1b684:	ldrb	r1, [r4, #25]
   1b688:	ldr	r0, [r4, #20]
   1b68c:	cmp	r1, #0
   1b690:	beq	1b74c <flatcc_json_printer_float_vector_field@@Base+0x178>
   1b694:	add	r1, r0, #1
   1b698:	str	r1, [r4, #20]
   1b69c:	mov	r1, #10
   1b6a0:	strb	r1, [r0]
   1b6a4:	ldr	r0, [r4, #20]
   1b6a8:	ldrb	r2, [r4, #25]
   1b6ac:	ldr	r3, [r4, #32]
   1b6b0:	ldr	r1, [r4, #16]
   1b6b4:	mla	r6, r3, r2, r0
   1b6b8:	mul	r5, r3, r2
   1b6bc:	cmp	r6, r1
   1b6c0:	bls	1b730 <flatcc_json_printer_float_vector_field@@Base+0x15c>
   1b6c4:	cmp	r0, r1
   1b6c8:	bcc	1b6e4 <flatcc_json_printer_float_vector_field@@Base+0x110>
   1b6cc:	ldr	r2, [r4, #44]	; 0x2c
   1b6d0:	mov	r0, r4
   1b6d4:	mov	r1, #0
   1b6d8:	blx	r2
   1b6dc:	ldr	r1, [r4, #16]
   1b6e0:	ldr	r0, [r4, #20]
   1b6e4:	sub	r6, r1, r0
   1b6e8:	cmp	r6, r5
   1b6ec:	bcs	1b730 <flatcc_json_printer_float_vector_field@@Base+0x15c>
   1b6f0:	mov	r1, #32
   1b6f4:	mov	r2, r6
   1b6f8:	bl	1293c <memset@plt>
   1b6fc:	ldr	r0, [r4, #20]
   1b700:	ldr	r2, [r4, #44]	; 0x2c
   1b704:	mov	r1, #0
   1b708:	add	r0, r0, r6
   1b70c:	str	r0, [r4, #20]
   1b710:	mov	r0, r4
   1b714:	blx	r2
   1b718:	ldr	r1, [r4, #16]
   1b71c:	ldr	r0, [r4, #20]
   1b720:	sub	r5, r5, r6
   1b724:	sub	r6, r1, r0
   1b728:	cmp	r5, r6
   1b72c:	bhi	1b6f0 <flatcc_json_printer_float_vector_field@@Base+0x11c>
   1b730:	mov	r1, #32
   1b734:	mov	r2, r5
   1b738:	bl	1293c <memset@plt>
   1b73c:	ldr	r0, [r4, #20]
   1b740:	add	r0, r0, r5
   1b744:	str	r0, [r4, #20]
   1b748:	b	1b76c <flatcc_json_printer_float_vector_field@@Base+0x198>
   1b74c:	ldr	r1, [r4, #16]
   1b750:	cmp	r0, r1
   1b754:	bcc	1b76c <flatcc_json_printer_float_vector_field@@Base+0x198>
   1b758:	ldr	r2, [r4, #44]	; 0x2c
   1b75c:	mov	r0, r4
   1b760:	mov	r1, #0
   1b764:	blx	r2
   1b768:	ldr	r0, [r4, #20]
   1b76c:	vldr	s0, [r8, #4]
   1b770:	vcvt.f64.f32	d0, s0
   1b774:	bl	14170 <flatcc_json_printer_fmt_float@@Base+0xc>
   1b778:	ldr	r1, [r4, #20]
   1b77c:	subs	r9, r7, #1
   1b780:	add	r0, r1, r0
   1b784:	str	r0, [r4, #20]
   1b788:	beq	1b8bc <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   1b78c:	ldr	r0, [r4, #20]
   1b790:	add	r7, r8, #8
   1b794:	mov	r8, #44	; 0x2c
   1b798:	mov	sl, #10
   1b79c:	b	1b7dc <flatcc_json_printer_float_vector_field@@Base+0x208>
   1b7a0:	mov	r1, #32
   1b7a4:	mov	r2, r5
   1b7a8:	bl	1293c <memset@plt>
   1b7ac:	ldr	r0, [r4, #20]
   1b7b0:	add	r0, r0, r5
   1b7b4:	str	r0, [r4, #20]
   1b7b8:	vldr	s0, [r7]
   1b7bc:	vcvt.f64.f32	d0, s0
   1b7c0:	bl	14170 <flatcc_json_printer_fmt_float@@Base+0xc>
   1b7c4:	ldr	r1, [r4, #20]
   1b7c8:	add	r7, r7, #4
   1b7cc:	cmp	r9, #0
   1b7d0:	add	r0, r1, r0
   1b7d4:	str	r0, [r4, #20]
   1b7d8:	beq	1b8bc <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   1b7dc:	add	r1, r0, #1
   1b7e0:	sub	r9, r9, #1
   1b7e4:	str	r1, [r4, #20]
   1b7e8:	strb	r8, [r0]
   1b7ec:	ldrb	r1, [r4, #25]
   1b7f0:	ldr	r0, [r4, #20]
   1b7f4:	cmp	r1, #0
   1b7f8:	beq	1b898 <flatcc_json_printer_float_vector_field@@Base+0x2c4>
   1b7fc:	add	r1, r0, #1
   1b800:	str	r1, [r4, #20]
   1b804:	strb	sl, [r0]
   1b808:	ldr	r0, [r4, #20]
   1b80c:	ldrb	r2, [r4, #25]
   1b810:	ldr	r3, [r4, #32]
   1b814:	ldr	r1, [r4, #16]
   1b818:	mla	r6, r3, r2, r0
   1b81c:	mul	r5, r3, r2
   1b820:	cmp	r6, r1
   1b824:	bls	1b7a0 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   1b828:	cmp	r0, r1
   1b82c:	bcc	1b848 <flatcc_json_printer_float_vector_field@@Base+0x274>
   1b830:	ldr	r2, [r4, #44]	; 0x2c
   1b834:	mov	r0, r4
   1b838:	mov	r1, #0
   1b83c:	blx	r2
   1b840:	ldr	r1, [r4, #16]
   1b844:	ldr	r0, [r4, #20]
   1b848:	sub	r6, r1, r0
   1b84c:	cmp	r6, r5
   1b850:	bcs	1b7a0 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   1b854:	mov	r1, #32
   1b858:	mov	r2, r6
   1b85c:	bl	1293c <memset@plt>
   1b860:	ldr	r0, [r4, #20]
   1b864:	ldr	r2, [r4, #44]	; 0x2c
   1b868:	mov	r1, #0
   1b86c:	add	r0, r0, r6
   1b870:	str	r0, [r4, #20]
   1b874:	mov	r0, r4
   1b878:	blx	r2
   1b87c:	ldr	r1, [r4, #16]
   1b880:	ldr	r0, [r4, #20]
   1b884:	sub	r5, r5, r6
   1b888:	sub	r6, r1, r0
   1b88c:	cmp	r5, r6
   1b890:	bhi	1b854 <flatcc_json_printer_float_vector_field@@Base+0x280>
   1b894:	b	1b7a0 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   1b898:	ldr	r1, [r4, #16]
   1b89c:	cmp	r0, r1
   1b8a0:	bcc	1b7b8 <flatcc_json_printer_float_vector_field@@Base+0x1e4>
   1b8a4:	ldr	r2, [r4, #44]	; 0x2c
   1b8a8:	mov	r0, r4
   1b8ac:	mov	r1, #0
   1b8b0:	blx	r2
   1b8b4:	ldr	r0, [r4, #20]
   1b8b8:	b	1b7b8 <flatcc_json_printer_float_vector_field@@Base+0x1e4>
   1b8bc:	ldrb	r1, [r4, #25]
   1b8c0:	ldr	r0, [r4, #20]
   1b8c4:	cmp	r1, #0
   1b8c8:	beq	1b988 <flatcc_json_printer_float_vector_field@@Base+0x3b4>
   1b8cc:	add	r1, r0, #1
   1b8d0:	str	r1, [r4, #20]
   1b8d4:	mov	r1, #10
   1b8d8:	strb	r1, [r0]
   1b8dc:	ldr	r0, [r4, #32]
   1b8e0:	sub	r2, r0, #1
   1b8e4:	str	r2, [r4, #32]
   1b8e8:	ldrb	r3, [r4, #25]
   1b8ec:	ldr	r0, [r4, #20]
   1b8f0:	ldr	r1, [r4, #16]
   1b8f4:	mla	r7, r2, r3, r0
   1b8f8:	mul	r5, r2, r3
   1b8fc:	cmp	r7, r1
   1b900:	bls	1b970 <flatcc_json_printer_float_vector_field@@Base+0x39c>
   1b904:	cmp	r0, r1
   1b908:	bcc	1b924 <flatcc_json_printer_float_vector_field@@Base+0x350>
   1b90c:	ldr	r2, [r4, #44]	; 0x2c
   1b910:	mov	r0, r4
   1b914:	mov	r1, #0
   1b918:	blx	r2
   1b91c:	ldr	r1, [r4, #16]
   1b920:	ldr	r0, [r4, #20]
   1b924:	sub	r6, r1, r0
   1b928:	cmp	r6, r5
   1b92c:	bcs	1b970 <flatcc_json_printer_float_vector_field@@Base+0x39c>
   1b930:	mov	r1, #32
   1b934:	mov	r2, r6
   1b938:	bl	1293c <memset@plt>
   1b93c:	ldr	r0, [r4, #20]
   1b940:	ldr	r2, [r4, #44]	; 0x2c
   1b944:	mov	r1, #0
   1b948:	add	r0, r0, r6
   1b94c:	str	r0, [r4, #20]
   1b950:	mov	r0, r4
   1b954:	blx	r2
   1b958:	ldr	r1, [r4, #16]
   1b95c:	ldr	r0, [r4, #20]
   1b960:	sub	r5, r5, r6
   1b964:	sub	r6, r1, r0
   1b968:	cmp	r5, r6
   1b96c:	bhi	1b930 <flatcc_json_printer_float_vector_field@@Base+0x35c>
   1b970:	mov	r1, #32
   1b974:	mov	r2, r5
   1b978:	bl	1293c <memset@plt>
   1b97c:	ldr	r0, [r4, #20]
   1b980:	add	r0, r0, r5
   1b984:	str	r0, [r4, #20]
   1b988:	add	r1, r0, #1
   1b98c:	str	r1, [r4, #20]
   1b990:	mov	r1, #93	; 0x5d
   1b994:	strb	r1, [r0]
   1b998:	sub	sp, fp, #28
   1b99c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b9a0 <flatcc_json_printer_double_vector_field@@Base>:
   1b9a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b9a4:	add	fp, sp, #28
   1b9a8:	sub	sp, sp, #4
   1b9ac:	mov	r4, r0
   1b9b0:	mov	r0, #4
   1b9b4:	add	r0, r0, r2, lsl #1
   1b9b8:	ldr	r2, [r1, #8]
   1b9bc:	cmp	r0, r2
   1b9c0:	bge	1b9e0 <flatcc_json_printer_double_vector_field@@Base+0x40>
   1b9c4:	ldr	r2, [r1, #4]
   1b9c8:	add	r0, r2, r0
   1b9cc:	ldrh	r0, [r0]
   1b9d0:	cmp	r0, #0
   1b9d4:	ldrne	r2, [r1]
   1b9d8:	addsne	r8, r2, r0
   1b9dc:	bne	1b9e8 <flatcc_json_printer_double_vector_field@@Base+0x48>
   1b9e0:	sub	sp, fp, #28
   1b9e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9e8:	ldr	r0, [r1, #16]
   1b9ec:	ldr	r2, [fp, #8]
   1b9f0:	add	r7, r0, #1
   1b9f4:	cmp	r0, #0
   1b9f8:	str	r7, [r1, #16]
   1b9fc:	beq	1ba14 <flatcc_json_printer_double_vector_field@@Base+0x74>
   1ba00:	ldr	r0, [r4, #20]
   1ba04:	add	r1, r0, #1
   1ba08:	str	r1, [r4, #20]
   1ba0c:	mov	r1, #44	; 0x2c
   1ba10:	strb	r1, [r0]
   1ba14:	ldr	r0, [r8]
   1ba18:	mov	r1, r3
   1ba1c:	ldr	r7, [r8, r0]!
   1ba20:	mov	r0, r4
   1ba24:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1ba28:	ldr	r1, [r4, #32]
   1ba2c:	ldr	r0, [r4, #20]
   1ba30:	cmp	r7, #0
   1ba34:	add	r1, r1, #1
   1ba38:	str	r1, [r4, #32]
   1ba3c:	add	r1, r0, #1
   1ba40:	str	r1, [r4, #20]
   1ba44:	mov	r1, #91	; 0x5b
   1ba48:	strb	r1, [r0]
   1ba4c:	beq	1bc80 <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   1ba50:	ldrb	r1, [r4, #25]
   1ba54:	ldr	r0, [r4, #20]
   1ba58:	cmp	r1, #0
   1ba5c:	beq	1bb18 <flatcc_json_printer_double_vector_field@@Base+0x178>
   1ba60:	add	r1, r0, #1
   1ba64:	str	r1, [r4, #20]
   1ba68:	mov	r1, #10
   1ba6c:	strb	r1, [r0]
   1ba70:	ldr	r0, [r4, #20]
   1ba74:	ldrb	r2, [r4, #25]
   1ba78:	ldr	r3, [r4, #32]
   1ba7c:	ldr	r1, [r4, #16]
   1ba80:	mla	r6, r3, r2, r0
   1ba84:	mul	r5, r3, r2
   1ba88:	cmp	r6, r1
   1ba8c:	bls	1bafc <flatcc_json_printer_double_vector_field@@Base+0x15c>
   1ba90:	cmp	r0, r1
   1ba94:	bcc	1bab0 <flatcc_json_printer_double_vector_field@@Base+0x110>
   1ba98:	ldr	r2, [r4, #44]	; 0x2c
   1ba9c:	mov	r0, r4
   1baa0:	mov	r1, #0
   1baa4:	blx	r2
   1baa8:	ldr	r1, [r4, #16]
   1baac:	ldr	r0, [r4, #20]
   1bab0:	sub	r6, r1, r0
   1bab4:	cmp	r6, r5
   1bab8:	bcs	1bafc <flatcc_json_printer_double_vector_field@@Base+0x15c>
   1babc:	mov	r1, #32
   1bac0:	mov	r2, r6
   1bac4:	bl	1293c <memset@plt>
   1bac8:	ldr	r0, [r4, #20]
   1bacc:	ldr	r2, [r4, #44]	; 0x2c
   1bad0:	mov	r1, #0
   1bad4:	add	r0, r0, r6
   1bad8:	str	r0, [r4, #20]
   1badc:	mov	r0, r4
   1bae0:	blx	r2
   1bae4:	ldr	r1, [r4, #16]
   1bae8:	ldr	r0, [r4, #20]
   1baec:	sub	r5, r5, r6
   1baf0:	sub	r6, r1, r0
   1baf4:	cmp	r5, r6
   1baf8:	bhi	1babc <flatcc_json_printer_double_vector_field@@Base+0x11c>
   1bafc:	mov	r1, #32
   1bb00:	mov	r2, r5
   1bb04:	bl	1293c <memset@plt>
   1bb08:	ldr	r0, [r4, #20]
   1bb0c:	add	r0, r0, r5
   1bb10:	str	r0, [r4, #20]
   1bb14:	b	1bb38 <flatcc_json_printer_double_vector_field@@Base+0x198>
   1bb18:	ldr	r1, [r4, #16]
   1bb1c:	cmp	r0, r1
   1bb20:	bcc	1bb38 <flatcc_json_printer_double_vector_field@@Base+0x198>
   1bb24:	ldr	r2, [r4, #44]	; 0x2c
   1bb28:	mov	r0, r4
   1bb2c:	mov	r1, #0
   1bb30:	blx	r2
   1bb34:	ldr	r0, [r4, #20]
   1bb38:	vldr	d0, [r8, #4]
   1bb3c:	bl	14170 <flatcc_json_printer_fmt_float@@Base+0xc>
   1bb40:	ldr	r1, [r4, #20]
   1bb44:	subs	r9, r7, #1
   1bb48:	add	r0, r1, r0
   1bb4c:	str	r0, [r4, #20]
   1bb50:	beq	1bc80 <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   1bb54:	ldr	r0, [r4, #20]
   1bb58:	add	r7, r8, #12
   1bb5c:	mov	r8, #44	; 0x2c
   1bb60:	mov	sl, #10
   1bb64:	b	1bba0 <flatcc_json_printer_double_vector_field@@Base+0x200>
   1bb68:	mov	r1, #32
   1bb6c:	mov	r2, r5
   1bb70:	bl	1293c <memset@plt>
   1bb74:	ldr	r0, [r4, #20]
   1bb78:	add	r0, r0, r5
   1bb7c:	str	r0, [r4, #20]
   1bb80:	vldr	d0, [r7]
   1bb84:	bl	14170 <flatcc_json_printer_fmt_float@@Base+0xc>
   1bb88:	ldr	r1, [r4, #20]
   1bb8c:	add	r7, r7, #8
   1bb90:	cmp	r9, #0
   1bb94:	add	r0, r1, r0
   1bb98:	str	r0, [r4, #20]
   1bb9c:	beq	1bc80 <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   1bba0:	add	r1, r0, #1
   1bba4:	sub	r9, r9, #1
   1bba8:	str	r1, [r4, #20]
   1bbac:	strb	r8, [r0]
   1bbb0:	ldrb	r1, [r4, #25]
   1bbb4:	ldr	r0, [r4, #20]
   1bbb8:	cmp	r1, #0
   1bbbc:	beq	1bc5c <flatcc_json_printer_double_vector_field@@Base+0x2bc>
   1bbc0:	add	r1, r0, #1
   1bbc4:	str	r1, [r4, #20]
   1bbc8:	strb	sl, [r0]
   1bbcc:	ldr	r0, [r4, #20]
   1bbd0:	ldrb	r2, [r4, #25]
   1bbd4:	ldr	r3, [r4, #32]
   1bbd8:	ldr	r1, [r4, #16]
   1bbdc:	mla	r6, r3, r2, r0
   1bbe0:	mul	r5, r3, r2
   1bbe4:	cmp	r6, r1
   1bbe8:	bls	1bb68 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   1bbec:	cmp	r0, r1
   1bbf0:	bcc	1bc0c <flatcc_json_printer_double_vector_field@@Base+0x26c>
   1bbf4:	ldr	r2, [r4, #44]	; 0x2c
   1bbf8:	mov	r0, r4
   1bbfc:	mov	r1, #0
   1bc00:	blx	r2
   1bc04:	ldr	r1, [r4, #16]
   1bc08:	ldr	r0, [r4, #20]
   1bc0c:	sub	r6, r1, r0
   1bc10:	cmp	r6, r5
   1bc14:	bcs	1bb68 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   1bc18:	mov	r1, #32
   1bc1c:	mov	r2, r6
   1bc20:	bl	1293c <memset@plt>
   1bc24:	ldr	r0, [r4, #20]
   1bc28:	ldr	r2, [r4, #44]	; 0x2c
   1bc2c:	mov	r1, #0
   1bc30:	add	r0, r0, r6
   1bc34:	str	r0, [r4, #20]
   1bc38:	mov	r0, r4
   1bc3c:	blx	r2
   1bc40:	ldr	r1, [r4, #16]
   1bc44:	ldr	r0, [r4, #20]
   1bc48:	sub	r5, r5, r6
   1bc4c:	sub	r6, r1, r0
   1bc50:	cmp	r5, r6
   1bc54:	bhi	1bc18 <flatcc_json_printer_double_vector_field@@Base+0x278>
   1bc58:	b	1bb68 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   1bc5c:	ldr	r1, [r4, #16]
   1bc60:	cmp	r0, r1
   1bc64:	bcc	1bb80 <flatcc_json_printer_double_vector_field@@Base+0x1e0>
   1bc68:	ldr	r2, [r4, #44]	; 0x2c
   1bc6c:	mov	r0, r4
   1bc70:	mov	r1, #0
   1bc74:	blx	r2
   1bc78:	ldr	r0, [r4, #20]
   1bc7c:	b	1bb80 <flatcc_json_printer_double_vector_field@@Base+0x1e0>
   1bc80:	ldrb	r1, [r4, #25]
   1bc84:	ldr	r0, [r4, #20]
   1bc88:	cmp	r1, #0
   1bc8c:	beq	1bd4c <flatcc_json_printer_double_vector_field@@Base+0x3ac>
   1bc90:	add	r1, r0, #1
   1bc94:	str	r1, [r4, #20]
   1bc98:	mov	r1, #10
   1bc9c:	strb	r1, [r0]
   1bca0:	ldr	r0, [r4, #32]
   1bca4:	sub	r2, r0, #1
   1bca8:	str	r2, [r4, #32]
   1bcac:	ldrb	r3, [r4, #25]
   1bcb0:	ldr	r0, [r4, #20]
   1bcb4:	ldr	r1, [r4, #16]
   1bcb8:	mla	r7, r2, r3, r0
   1bcbc:	mul	r5, r2, r3
   1bcc0:	cmp	r7, r1
   1bcc4:	bls	1bd34 <flatcc_json_printer_double_vector_field@@Base+0x394>
   1bcc8:	cmp	r0, r1
   1bccc:	bcc	1bce8 <flatcc_json_printer_double_vector_field@@Base+0x348>
   1bcd0:	ldr	r2, [r4, #44]	; 0x2c
   1bcd4:	mov	r0, r4
   1bcd8:	mov	r1, #0
   1bcdc:	blx	r2
   1bce0:	ldr	r1, [r4, #16]
   1bce4:	ldr	r0, [r4, #20]
   1bce8:	sub	r6, r1, r0
   1bcec:	cmp	r6, r5
   1bcf0:	bcs	1bd34 <flatcc_json_printer_double_vector_field@@Base+0x394>
   1bcf4:	mov	r1, #32
   1bcf8:	mov	r2, r6
   1bcfc:	bl	1293c <memset@plt>
   1bd00:	ldr	r0, [r4, #20]
   1bd04:	ldr	r2, [r4, #44]	; 0x2c
   1bd08:	mov	r1, #0
   1bd0c:	add	r0, r0, r6
   1bd10:	str	r0, [r4, #20]
   1bd14:	mov	r0, r4
   1bd18:	blx	r2
   1bd1c:	ldr	r1, [r4, #16]
   1bd20:	ldr	r0, [r4, #20]
   1bd24:	sub	r5, r5, r6
   1bd28:	sub	r6, r1, r0
   1bd2c:	cmp	r5, r6
   1bd30:	bhi	1bcf4 <flatcc_json_printer_double_vector_field@@Base+0x354>
   1bd34:	mov	r1, #32
   1bd38:	mov	r2, r5
   1bd3c:	bl	1293c <memset@plt>
   1bd40:	ldr	r0, [r4, #20]
   1bd44:	add	r0, r0, r5
   1bd48:	str	r0, [r4, #20]
   1bd4c:	add	r1, r0, #1
   1bd50:	str	r1, [r4, #20]
   1bd54:	mov	r1, #93	; 0x5d
   1bd58:	strb	r1, [r0]
   1bd5c:	sub	sp, fp, #28
   1bd60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001bd64 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1bd64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd68:	add	fp, sp, #28
   1bd6c:	sub	sp, sp, #4
   1bd70:	mov	r4, r0
   1bd74:	ldrb	r0, [r0, #27]
   1bd78:	cmp	r0, #0
   1bd7c:	beq	1bd90 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   1bd80:	mov	r0, r4
   1bd84:	sub	sp, fp, #28
   1bd88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd8c:	b	18af4 <flatcc_json_printer_utype_vector_field@@Base>
   1bd90:	mov	r0, #4
   1bd94:	add	r0, r0, r2, lsl #1
   1bd98:	ldr	r2, [r1, #8]
   1bd9c:	cmp	r0, r2
   1bda0:	bge	1bdc0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   1bda4:	ldr	r2, [r1, #4]
   1bda8:	add	r0, r2, r0
   1bdac:	ldrh	r0, [r0]
   1bdb0:	cmp	r0, #0
   1bdb4:	ldrne	r2, [r1]
   1bdb8:	addsne	r8, r2, r0
   1bdbc:	bne	1bdc8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x64>
   1bdc0:	sub	sp, fp, #28
   1bdc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bdc8:	ldr	r0, [r1, #16]
   1bdcc:	ldr	sl, [fp, #12]
   1bdd0:	ldr	r2, [fp, #8]
   1bdd4:	add	r7, r0, #1
   1bdd8:	cmp	r0, #0
   1bddc:	str	r7, [r1, #16]
   1bde0:	beq	1bdf8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x94>
   1bde4:	ldr	r0, [r4, #20]
   1bde8:	add	r1, r0, #1
   1bdec:	str	r1, [r4, #20]
   1bdf0:	mov	r1, #44	; 0x2c
   1bdf4:	strb	r1, [r0]
   1bdf8:	ldr	r0, [r8]
   1bdfc:	mov	r1, r3
   1be00:	ldr	r9, [r8, r0]!
   1be04:	mov	r0, r4
   1be08:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1be0c:	ldr	r1, [r4, #32]
   1be10:	ldr	r0, [r4, #20]
   1be14:	cmp	r9, #0
   1be18:	add	r1, r1, #1
   1be1c:	str	r1, [r4, #32]
   1be20:	add	r1, r0, #1
   1be24:	str	r1, [r4, #20]
   1be28:	mov	r1, #91	; 0x5b
   1be2c:	strb	r1, [r0]
   1be30:	beq	1c048 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   1be34:	ldrb	r1, [r4, #25]
   1be38:	ldr	r0, [r4, #20]
   1be3c:	cmp	r1, #0
   1be40:	beq	1befc <flatcc_json_printer_utype_enum_vector_field@@Base+0x198>
   1be44:	add	r1, r0, #1
   1be48:	str	r1, [r4, #20]
   1be4c:	mov	r1, #10
   1be50:	strb	r1, [r0]
   1be54:	ldr	r0, [r4, #20]
   1be58:	ldrb	r2, [r4, #25]
   1be5c:	ldr	r3, [r4, #32]
   1be60:	ldr	r1, [r4, #16]
   1be64:	mla	r7, r3, r2, r0
   1be68:	mul	r5, r3, r2
   1be6c:	cmp	r7, r1
   1be70:	bls	1bee0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x17c>
   1be74:	cmp	r0, r1
   1be78:	bcc	1be94 <flatcc_json_printer_utype_enum_vector_field@@Base+0x130>
   1be7c:	ldr	r2, [r4, #44]	; 0x2c
   1be80:	mov	r0, r4
   1be84:	mov	r1, #0
   1be88:	blx	r2
   1be8c:	ldr	r1, [r4, #16]
   1be90:	ldr	r0, [r4, #20]
   1be94:	sub	r6, r1, r0
   1be98:	cmp	r6, r5
   1be9c:	bcs	1bee0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x17c>
   1bea0:	mov	r1, #32
   1bea4:	mov	r2, r6
   1bea8:	bl	1293c <memset@plt>
   1beac:	ldr	r0, [r4, #20]
   1beb0:	ldr	r2, [r4, #44]	; 0x2c
   1beb4:	mov	r1, #0
   1beb8:	add	r0, r0, r6
   1bebc:	str	r0, [r4, #20]
   1bec0:	mov	r0, r4
   1bec4:	blx	r2
   1bec8:	ldr	r1, [r4, #16]
   1becc:	ldr	r0, [r4, #20]
   1bed0:	sub	r5, r5, r6
   1bed4:	sub	r6, r1, r0
   1bed8:	cmp	r5, r6
   1bedc:	bhi	1bea0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x13c>
   1bee0:	mov	r1, #32
   1bee4:	mov	r2, r5
   1bee8:	bl	1293c <memset@plt>
   1beec:	ldr	r0, [r4, #20]
   1bef0:	add	r0, r0, r5
   1bef4:	str	r0, [r4, #20]
   1bef8:	b	1bf18 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b4>
   1befc:	ldr	r1, [r4, #16]
   1bf00:	cmp	r0, r1
   1bf04:	bcc	1bf18 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b4>
   1bf08:	ldr	r2, [r4, #44]	; 0x2c
   1bf0c:	mov	r0, r4
   1bf10:	mov	r1, #0
   1bf14:	blx	r2
   1bf18:	ldrb	r1, [r8, #4]
   1bf1c:	mov	r0, r4
   1bf20:	blx	sl
   1bf24:	subs	r9, r9, #1
   1bf28:	beq	1c048 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   1bf2c:	add	r7, r8, #5
   1bf30:	mov	r8, #44	; 0x2c
   1bf34:	b	1bf64 <flatcc_json_printer_utype_enum_vector_field@@Base+0x200>
   1bf38:	mov	r1, #32
   1bf3c:	mov	r2, r5
   1bf40:	bl	1293c <memset@plt>
   1bf44:	ldr	r0, [r4, #20]
   1bf48:	add	r0, r0, r5
   1bf4c:	str	r0, [r4, #20]
   1bf50:	ldrb	r1, [r7], #1
   1bf54:	mov	r0, r4
   1bf58:	blx	sl
   1bf5c:	cmp	r9, #0
   1bf60:	beq	1c048 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   1bf64:	ldr	r0, [r4, #20]
   1bf68:	sub	r9, r9, #1
   1bf6c:	add	r1, r0, #1
   1bf70:	str	r1, [r4, #20]
   1bf74:	strb	r8, [r0]
   1bf78:	ldrb	r1, [r4, #25]
   1bf7c:	ldr	r0, [r4, #20]
   1bf80:	cmp	r1, #0
   1bf84:	beq	1c028 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   1bf88:	add	r1, r0, #1
   1bf8c:	str	r1, [r4, #20]
   1bf90:	mov	r1, #10
   1bf94:	strb	r1, [r0]
   1bf98:	ldr	r0, [r4, #20]
   1bf9c:	ldrb	r2, [r4, #25]
   1bfa0:	ldr	r3, [r4, #32]
   1bfa4:	ldr	r1, [r4, #16]
   1bfa8:	mla	r6, r3, r2, r0
   1bfac:	mul	r5, r3, r2
   1bfb0:	cmp	r6, r1
   1bfb4:	bls	1bf38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   1bfb8:	cmp	r0, r1
   1bfbc:	bcc	1bfd8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x274>
   1bfc0:	ldr	r2, [r4, #44]	; 0x2c
   1bfc4:	mov	r0, r4
   1bfc8:	mov	r1, #0
   1bfcc:	blx	r2
   1bfd0:	ldr	r1, [r4, #16]
   1bfd4:	ldr	r0, [r4, #20]
   1bfd8:	sub	r6, r1, r0
   1bfdc:	cmp	r6, r5
   1bfe0:	bcs	1bf38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   1bfe4:	mov	r1, #32
   1bfe8:	mov	r2, r6
   1bfec:	bl	1293c <memset@plt>
   1bff0:	ldr	r0, [r4, #20]
   1bff4:	ldr	r2, [r4, #44]	; 0x2c
   1bff8:	mov	r1, #0
   1bffc:	add	r0, r0, r6
   1c000:	str	r0, [r4, #20]
   1c004:	mov	r0, r4
   1c008:	blx	r2
   1c00c:	ldr	r1, [r4, #16]
   1c010:	ldr	r0, [r4, #20]
   1c014:	sub	r5, r5, r6
   1c018:	sub	r6, r1, r0
   1c01c:	cmp	r5, r6
   1c020:	bhi	1bfe4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x280>
   1c024:	b	1bf38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   1c028:	ldr	r1, [r4, #16]
   1c02c:	cmp	r0, r1
   1c030:	bcc	1bf50 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   1c034:	ldr	r2, [r4, #44]	; 0x2c
   1c038:	mov	r0, r4
   1c03c:	mov	r1, #0
   1c040:	blx	r2
   1c044:	b	1bf50 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   1c048:	ldrb	r1, [r4, #25]
   1c04c:	ldr	r0, [r4, #20]
   1c050:	cmp	r1, #0
   1c054:	beq	1c114 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3b0>
   1c058:	add	r1, r0, #1
   1c05c:	str	r1, [r4, #20]
   1c060:	mov	r1, #10
   1c064:	strb	r1, [r0]
   1c068:	ldr	r0, [r4, #32]
   1c06c:	sub	r2, r0, #1
   1c070:	str	r2, [r4, #32]
   1c074:	ldrb	r3, [r4, #25]
   1c078:	ldr	r0, [r4, #20]
   1c07c:	ldr	r1, [r4, #16]
   1c080:	mla	r7, r2, r3, r0
   1c084:	mul	r5, r2, r3
   1c088:	cmp	r7, r1
   1c08c:	bls	1c0fc <flatcc_json_printer_utype_enum_vector_field@@Base+0x398>
   1c090:	cmp	r0, r1
   1c094:	bcc	1c0b0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x34c>
   1c098:	ldr	r2, [r4, #44]	; 0x2c
   1c09c:	mov	r0, r4
   1c0a0:	mov	r1, #0
   1c0a4:	blx	r2
   1c0a8:	ldr	r1, [r4, #16]
   1c0ac:	ldr	r0, [r4, #20]
   1c0b0:	sub	r6, r1, r0
   1c0b4:	cmp	r6, r5
   1c0b8:	bcs	1c0fc <flatcc_json_printer_utype_enum_vector_field@@Base+0x398>
   1c0bc:	mov	r1, #32
   1c0c0:	mov	r2, r6
   1c0c4:	bl	1293c <memset@plt>
   1c0c8:	ldr	r0, [r4, #20]
   1c0cc:	ldr	r2, [r4, #44]	; 0x2c
   1c0d0:	mov	r1, #0
   1c0d4:	add	r0, r0, r6
   1c0d8:	str	r0, [r4, #20]
   1c0dc:	mov	r0, r4
   1c0e0:	blx	r2
   1c0e4:	ldr	r1, [r4, #16]
   1c0e8:	ldr	r0, [r4, #20]
   1c0ec:	sub	r5, r5, r6
   1c0f0:	sub	r6, r1, r0
   1c0f4:	cmp	r5, r6
   1c0f8:	bhi	1c0bc <flatcc_json_printer_utype_enum_vector_field@@Base+0x358>
   1c0fc:	mov	r1, #32
   1c100:	mov	r2, r5
   1c104:	bl	1293c <memset@plt>
   1c108:	ldr	r0, [r4, #20]
   1c10c:	add	r0, r0, r5
   1c110:	str	r0, [r4, #20]
   1c114:	add	r1, r0, #1
   1c118:	str	r1, [r4, #20]
   1c11c:	mov	r1, #93	; 0x5d
   1c120:	strb	r1, [r0]
   1c124:	sub	sp, fp, #28
   1c128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c12c <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1c12c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c130:	add	fp, sp, #28
   1c134:	sub	sp, sp, #4
   1c138:	mov	r4, r0
   1c13c:	ldrb	r0, [r0, #27]
   1c140:	cmp	r0, #0
   1c144:	beq	1c158 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   1c148:	mov	r0, r4
   1c14c:	sub	sp, fp, #28
   1c150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c154:	b	19004 <flatcc_json_printer_uint8_vector_field@@Base>
   1c158:	mov	r0, #4
   1c15c:	add	r0, r0, r2, lsl #1
   1c160:	ldr	r2, [r1, #8]
   1c164:	cmp	r0, r2
   1c168:	bge	1c188 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   1c16c:	ldr	r2, [r1, #4]
   1c170:	add	r0, r2, r0
   1c174:	ldrh	r0, [r0]
   1c178:	cmp	r0, #0
   1c17c:	ldrne	r2, [r1]
   1c180:	addsne	r8, r2, r0
   1c184:	bne	1c190 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x64>
   1c188:	sub	sp, fp, #28
   1c18c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c190:	ldr	r0, [r1, #16]
   1c194:	ldr	sl, [fp, #12]
   1c198:	ldr	r2, [fp, #8]
   1c19c:	add	r7, r0, #1
   1c1a0:	cmp	r0, #0
   1c1a4:	str	r7, [r1, #16]
   1c1a8:	beq	1c1c0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x94>
   1c1ac:	ldr	r0, [r4, #20]
   1c1b0:	add	r1, r0, #1
   1c1b4:	str	r1, [r4, #20]
   1c1b8:	mov	r1, #44	; 0x2c
   1c1bc:	strb	r1, [r0]
   1c1c0:	ldr	r0, [r8]
   1c1c4:	mov	r1, r3
   1c1c8:	ldr	r9, [r8, r0]!
   1c1cc:	mov	r0, r4
   1c1d0:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1c1d4:	ldr	r1, [r4, #32]
   1c1d8:	ldr	r0, [r4, #20]
   1c1dc:	cmp	r9, #0
   1c1e0:	add	r1, r1, #1
   1c1e4:	str	r1, [r4, #32]
   1c1e8:	add	r1, r0, #1
   1c1ec:	str	r1, [r4, #20]
   1c1f0:	mov	r1, #91	; 0x5b
   1c1f4:	strb	r1, [r0]
   1c1f8:	beq	1c410 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   1c1fc:	ldrb	r1, [r4, #25]
   1c200:	ldr	r0, [r4, #20]
   1c204:	cmp	r1, #0
   1c208:	beq	1c2c4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x198>
   1c20c:	add	r1, r0, #1
   1c210:	str	r1, [r4, #20]
   1c214:	mov	r1, #10
   1c218:	strb	r1, [r0]
   1c21c:	ldr	r0, [r4, #20]
   1c220:	ldrb	r2, [r4, #25]
   1c224:	ldr	r3, [r4, #32]
   1c228:	ldr	r1, [r4, #16]
   1c22c:	mla	r7, r3, r2, r0
   1c230:	mul	r5, r3, r2
   1c234:	cmp	r7, r1
   1c238:	bls	1c2a8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17c>
   1c23c:	cmp	r0, r1
   1c240:	bcc	1c25c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x130>
   1c244:	ldr	r2, [r4, #44]	; 0x2c
   1c248:	mov	r0, r4
   1c24c:	mov	r1, #0
   1c250:	blx	r2
   1c254:	ldr	r1, [r4, #16]
   1c258:	ldr	r0, [r4, #20]
   1c25c:	sub	r6, r1, r0
   1c260:	cmp	r6, r5
   1c264:	bcs	1c2a8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17c>
   1c268:	mov	r1, #32
   1c26c:	mov	r2, r6
   1c270:	bl	1293c <memset@plt>
   1c274:	ldr	r0, [r4, #20]
   1c278:	ldr	r2, [r4, #44]	; 0x2c
   1c27c:	mov	r1, #0
   1c280:	add	r0, r0, r6
   1c284:	str	r0, [r4, #20]
   1c288:	mov	r0, r4
   1c28c:	blx	r2
   1c290:	ldr	r1, [r4, #16]
   1c294:	ldr	r0, [r4, #20]
   1c298:	sub	r5, r5, r6
   1c29c:	sub	r6, r1, r0
   1c2a0:	cmp	r5, r6
   1c2a4:	bhi	1c268 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x13c>
   1c2a8:	mov	r1, #32
   1c2ac:	mov	r2, r5
   1c2b0:	bl	1293c <memset@plt>
   1c2b4:	ldr	r0, [r4, #20]
   1c2b8:	add	r0, r0, r5
   1c2bc:	str	r0, [r4, #20]
   1c2c0:	b	1c2e0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b4>
   1c2c4:	ldr	r1, [r4, #16]
   1c2c8:	cmp	r0, r1
   1c2cc:	bcc	1c2e0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b4>
   1c2d0:	ldr	r2, [r4, #44]	; 0x2c
   1c2d4:	mov	r0, r4
   1c2d8:	mov	r1, #0
   1c2dc:	blx	r2
   1c2e0:	ldrb	r1, [r8, #4]
   1c2e4:	mov	r0, r4
   1c2e8:	blx	sl
   1c2ec:	subs	r9, r9, #1
   1c2f0:	beq	1c410 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   1c2f4:	add	r7, r8, #5
   1c2f8:	mov	r8, #44	; 0x2c
   1c2fc:	b	1c32c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x200>
   1c300:	mov	r1, #32
   1c304:	mov	r2, r5
   1c308:	bl	1293c <memset@plt>
   1c30c:	ldr	r0, [r4, #20]
   1c310:	add	r0, r0, r5
   1c314:	str	r0, [r4, #20]
   1c318:	ldrb	r1, [r7], #1
   1c31c:	mov	r0, r4
   1c320:	blx	sl
   1c324:	cmp	r9, #0
   1c328:	beq	1c410 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   1c32c:	ldr	r0, [r4, #20]
   1c330:	sub	r9, r9, #1
   1c334:	add	r1, r0, #1
   1c338:	str	r1, [r4, #20]
   1c33c:	strb	r8, [r0]
   1c340:	ldrb	r1, [r4, #25]
   1c344:	ldr	r0, [r4, #20]
   1c348:	cmp	r1, #0
   1c34c:	beq	1c3f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   1c350:	add	r1, r0, #1
   1c354:	str	r1, [r4, #20]
   1c358:	mov	r1, #10
   1c35c:	strb	r1, [r0]
   1c360:	ldr	r0, [r4, #20]
   1c364:	ldrb	r2, [r4, #25]
   1c368:	ldr	r3, [r4, #32]
   1c36c:	ldr	r1, [r4, #16]
   1c370:	mla	r6, r3, r2, r0
   1c374:	mul	r5, r3, r2
   1c378:	cmp	r6, r1
   1c37c:	bls	1c300 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   1c380:	cmp	r0, r1
   1c384:	bcc	1c3a0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x274>
   1c388:	ldr	r2, [r4, #44]	; 0x2c
   1c38c:	mov	r0, r4
   1c390:	mov	r1, #0
   1c394:	blx	r2
   1c398:	ldr	r1, [r4, #16]
   1c39c:	ldr	r0, [r4, #20]
   1c3a0:	sub	r6, r1, r0
   1c3a4:	cmp	r6, r5
   1c3a8:	bcs	1c300 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   1c3ac:	mov	r1, #32
   1c3b0:	mov	r2, r6
   1c3b4:	bl	1293c <memset@plt>
   1c3b8:	ldr	r0, [r4, #20]
   1c3bc:	ldr	r2, [r4, #44]	; 0x2c
   1c3c0:	mov	r1, #0
   1c3c4:	add	r0, r0, r6
   1c3c8:	str	r0, [r4, #20]
   1c3cc:	mov	r0, r4
   1c3d0:	blx	r2
   1c3d4:	ldr	r1, [r4, #16]
   1c3d8:	ldr	r0, [r4, #20]
   1c3dc:	sub	r5, r5, r6
   1c3e0:	sub	r6, r1, r0
   1c3e4:	cmp	r5, r6
   1c3e8:	bhi	1c3ac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x280>
   1c3ec:	b	1c300 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   1c3f0:	ldr	r1, [r4, #16]
   1c3f4:	cmp	r0, r1
   1c3f8:	bcc	1c318 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   1c3fc:	ldr	r2, [r4, #44]	; 0x2c
   1c400:	mov	r0, r4
   1c404:	mov	r1, #0
   1c408:	blx	r2
   1c40c:	b	1c318 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   1c410:	ldrb	r1, [r4, #25]
   1c414:	ldr	r0, [r4, #20]
   1c418:	cmp	r1, #0
   1c41c:	beq	1c4dc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3b0>
   1c420:	add	r1, r0, #1
   1c424:	str	r1, [r4, #20]
   1c428:	mov	r1, #10
   1c42c:	strb	r1, [r0]
   1c430:	ldr	r0, [r4, #32]
   1c434:	sub	r2, r0, #1
   1c438:	str	r2, [r4, #32]
   1c43c:	ldrb	r3, [r4, #25]
   1c440:	ldr	r0, [r4, #20]
   1c444:	ldr	r1, [r4, #16]
   1c448:	mla	r7, r2, r3, r0
   1c44c:	mul	r5, r2, r3
   1c450:	cmp	r7, r1
   1c454:	bls	1c4c4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x398>
   1c458:	cmp	r0, r1
   1c45c:	bcc	1c478 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x34c>
   1c460:	ldr	r2, [r4, #44]	; 0x2c
   1c464:	mov	r0, r4
   1c468:	mov	r1, #0
   1c46c:	blx	r2
   1c470:	ldr	r1, [r4, #16]
   1c474:	ldr	r0, [r4, #20]
   1c478:	sub	r6, r1, r0
   1c47c:	cmp	r6, r5
   1c480:	bcs	1c4c4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x398>
   1c484:	mov	r1, #32
   1c488:	mov	r2, r6
   1c48c:	bl	1293c <memset@plt>
   1c490:	ldr	r0, [r4, #20]
   1c494:	ldr	r2, [r4, #44]	; 0x2c
   1c498:	mov	r1, #0
   1c49c:	add	r0, r0, r6
   1c4a0:	str	r0, [r4, #20]
   1c4a4:	mov	r0, r4
   1c4a8:	blx	r2
   1c4ac:	ldr	r1, [r4, #16]
   1c4b0:	ldr	r0, [r4, #20]
   1c4b4:	sub	r5, r5, r6
   1c4b8:	sub	r6, r1, r0
   1c4bc:	cmp	r5, r6
   1c4c0:	bhi	1c484 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x358>
   1c4c4:	mov	r1, #32
   1c4c8:	mov	r2, r5
   1c4cc:	bl	1293c <memset@plt>
   1c4d0:	ldr	r0, [r4, #20]
   1c4d4:	add	r0, r0, r5
   1c4d8:	str	r0, [r4, #20]
   1c4dc:	add	r1, r0, #1
   1c4e0:	str	r1, [r4, #20]
   1c4e4:	mov	r1, #93	; 0x5d
   1c4e8:	strb	r1, [r0]
   1c4ec:	sub	sp, fp, #28
   1c4f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c4f4 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1c4f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4f8:	add	fp, sp, #28
   1c4fc:	sub	sp, sp, #4
   1c500:	mov	r4, r0
   1c504:	ldrb	r0, [r0, #27]
   1c508:	cmp	r0, #0
   1c50c:	beq	1c520 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   1c510:	mov	r0, r4
   1c514:	sub	sp, fp, #28
   1c518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c51c:	b	19514 <flatcc_json_printer_uint16_vector_field@@Base>
   1c520:	mov	r0, #4
   1c524:	add	r0, r0, r2, lsl #1
   1c528:	ldr	r2, [r1, #8]
   1c52c:	cmp	r0, r2
   1c530:	bge	1c550 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   1c534:	ldr	r2, [r1, #4]
   1c538:	add	r0, r2, r0
   1c53c:	ldrh	r0, [r0]
   1c540:	cmp	r0, #0
   1c544:	ldrne	r2, [r1]
   1c548:	addsne	r8, r2, r0
   1c54c:	bne	1c558 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x64>
   1c550:	sub	sp, fp, #28
   1c554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c558:	ldr	r0, [r1, #16]
   1c55c:	ldr	sl, [fp, #12]
   1c560:	ldr	r2, [fp, #8]
   1c564:	add	r7, r0, #1
   1c568:	cmp	r0, #0
   1c56c:	str	r7, [r1, #16]
   1c570:	beq	1c588 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x94>
   1c574:	ldr	r0, [r4, #20]
   1c578:	add	r1, r0, #1
   1c57c:	str	r1, [r4, #20]
   1c580:	mov	r1, #44	; 0x2c
   1c584:	strb	r1, [r0]
   1c588:	ldr	r0, [r8]
   1c58c:	mov	r1, r3
   1c590:	ldr	r9, [r8, r0]!
   1c594:	mov	r0, r4
   1c598:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1c59c:	ldr	r1, [r4, #32]
   1c5a0:	ldr	r0, [r4, #20]
   1c5a4:	cmp	r9, #0
   1c5a8:	add	r1, r1, #1
   1c5ac:	str	r1, [r4, #32]
   1c5b0:	add	r1, r0, #1
   1c5b4:	str	r1, [r4, #20]
   1c5b8:	mov	r1, #91	; 0x5b
   1c5bc:	strb	r1, [r0]
   1c5c0:	beq	1c7d8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   1c5c4:	ldrb	r1, [r4, #25]
   1c5c8:	ldr	r0, [r4, #20]
   1c5cc:	cmp	r1, #0
   1c5d0:	beq	1c68c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x198>
   1c5d4:	add	r1, r0, #1
   1c5d8:	str	r1, [r4, #20]
   1c5dc:	mov	r1, #10
   1c5e0:	strb	r1, [r0]
   1c5e4:	ldr	r0, [r4, #20]
   1c5e8:	ldrb	r2, [r4, #25]
   1c5ec:	ldr	r3, [r4, #32]
   1c5f0:	ldr	r1, [r4, #16]
   1c5f4:	mla	r7, r3, r2, r0
   1c5f8:	mul	r5, r3, r2
   1c5fc:	cmp	r7, r1
   1c600:	bls	1c670 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17c>
   1c604:	cmp	r0, r1
   1c608:	bcc	1c624 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x130>
   1c60c:	ldr	r2, [r4, #44]	; 0x2c
   1c610:	mov	r0, r4
   1c614:	mov	r1, #0
   1c618:	blx	r2
   1c61c:	ldr	r1, [r4, #16]
   1c620:	ldr	r0, [r4, #20]
   1c624:	sub	r6, r1, r0
   1c628:	cmp	r6, r5
   1c62c:	bcs	1c670 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17c>
   1c630:	mov	r1, #32
   1c634:	mov	r2, r6
   1c638:	bl	1293c <memset@plt>
   1c63c:	ldr	r0, [r4, #20]
   1c640:	ldr	r2, [r4, #44]	; 0x2c
   1c644:	mov	r1, #0
   1c648:	add	r0, r0, r6
   1c64c:	str	r0, [r4, #20]
   1c650:	mov	r0, r4
   1c654:	blx	r2
   1c658:	ldr	r1, [r4, #16]
   1c65c:	ldr	r0, [r4, #20]
   1c660:	sub	r5, r5, r6
   1c664:	sub	r6, r1, r0
   1c668:	cmp	r5, r6
   1c66c:	bhi	1c630 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x13c>
   1c670:	mov	r1, #32
   1c674:	mov	r2, r5
   1c678:	bl	1293c <memset@plt>
   1c67c:	ldr	r0, [r4, #20]
   1c680:	add	r0, r0, r5
   1c684:	str	r0, [r4, #20]
   1c688:	b	1c6a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   1c68c:	ldr	r1, [r4, #16]
   1c690:	cmp	r0, r1
   1c694:	bcc	1c6a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   1c698:	ldr	r2, [r4, #44]	; 0x2c
   1c69c:	mov	r0, r4
   1c6a0:	mov	r1, #0
   1c6a4:	blx	r2
   1c6a8:	ldrh	r1, [r8, #4]
   1c6ac:	mov	r0, r4
   1c6b0:	blx	sl
   1c6b4:	subs	r9, r9, #1
   1c6b8:	beq	1c7d8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   1c6bc:	add	r7, r8, #6
   1c6c0:	mov	r8, #44	; 0x2c
   1c6c4:	b	1c6f4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x200>
   1c6c8:	mov	r1, #32
   1c6cc:	mov	r2, r5
   1c6d0:	bl	1293c <memset@plt>
   1c6d4:	ldr	r0, [r4, #20]
   1c6d8:	add	r0, r0, r5
   1c6dc:	str	r0, [r4, #20]
   1c6e0:	ldrh	r1, [r7], #2
   1c6e4:	mov	r0, r4
   1c6e8:	blx	sl
   1c6ec:	cmp	r9, #0
   1c6f0:	beq	1c7d8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   1c6f4:	ldr	r0, [r4, #20]
   1c6f8:	sub	r9, r9, #1
   1c6fc:	add	r1, r0, #1
   1c700:	str	r1, [r4, #20]
   1c704:	strb	r8, [r0]
   1c708:	ldrb	r1, [r4, #25]
   1c70c:	ldr	r0, [r4, #20]
   1c710:	cmp	r1, #0
   1c714:	beq	1c7b8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   1c718:	add	r1, r0, #1
   1c71c:	str	r1, [r4, #20]
   1c720:	mov	r1, #10
   1c724:	strb	r1, [r0]
   1c728:	ldr	r0, [r4, #20]
   1c72c:	ldrb	r2, [r4, #25]
   1c730:	ldr	r3, [r4, #32]
   1c734:	ldr	r1, [r4, #16]
   1c738:	mla	r6, r3, r2, r0
   1c73c:	mul	r5, r3, r2
   1c740:	cmp	r6, r1
   1c744:	bls	1c6c8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   1c748:	cmp	r0, r1
   1c74c:	bcc	1c768 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x274>
   1c750:	ldr	r2, [r4, #44]	; 0x2c
   1c754:	mov	r0, r4
   1c758:	mov	r1, #0
   1c75c:	blx	r2
   1c760:	ldr	r1, [r4, #16]
   1c764:	ldr	r0, [r4, #20]
   1c768:	sub	r6, r1, r0
   1c76c:	cmp	r6, r5
   1c770:	bcs	1c6c8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   1c774:	mov	r1, #32
   1c778:	mov	r2, r6
   1c77c:	bl	1293c <memset@plt>
   1c780:	ldr	r0, [r4, #20]
   1c784:	ldr	r2, [r4, #44]	; 0x2c
   1c788:	mov	r1, #0
   1c78c:	add	r0, r0, r6
   1c790:	str	r0, [r4, #20]
   1c794:	mov	r0, r4
   1c798:	blx	r2
   1c79c:	ldr	r1, [r4, #16]
   1c7a0:	ldr	r0, [r4, #20]
   1c7a4:	sub	r5, r5, r6
   1c7a8:	sub	r6, r1, r0
   1c7ac:	cmp	r5, r6
   1c7b0:	bhi	1c774 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x280>
   1c7b4:	b	1c6c8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   1c7b8:	ldr	r1, [r4, #16]
   1c7bc:	cmp	r0, r1
   1c7c0:	bcc	1c6e0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   1c7c4:	ldr	r2, [r4, #44]	; 0x2c
   1c7c8:	mov	r0, r4
   1c7cc:	mov	r1, #0
   1c7d0:	blx	r2
   1c7d4:	b	1c6e0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   1c7d8:	ldrb	r1, [r4, #25]
   1c7dc:	ldr	r0, [r4, #20]
   1c7e0:	cmp	r1, #0
   1c7e4:	beq	1c8a4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3b0>
   1c7e8:	add	r1, r0, #1
   1c7ec:	str	r1, [r4, #20]
   1c7f0:	mov	r1, #10
   1c7f4:	strb	r1, [r0]
   1c7f8:	ldr	r0, [r4, #32]
   1c7fc:	sub	r2, r0, #1
   1c800:	str	r2, [r4, #32]
   1c804:	ldrb	r3, [r4, #25]
   1c808:	ldr	r0, [r4, #20]
   1c80c:	ldr	r1, [r4, #16]
   1c810:	mla	r7, r2, r3, r0
   1c814:	mul	r5, r2, r3
   1c818:	cmp	r7, r1
   1c81c:	bls	1c88c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x398>
   1c820:	cmp	r0, r1
   1c824:	bcc	1c840 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x34c>
   1c828:	ldr	r2, [r4, #44]	; 0x2c
   1c82c:	mov	r0, r4
   1c830:	mov	r1, #0
   1c834:	blx	r2
   1c838:	ldr	r1, [r4, #16]
   1c83c:	ldr	r0, [r4, #20]
   1c840:	sub	r6, r1, r0
   1c844:	cmp	r6, r5
   1c848:	bcs	1c88c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x398>
   1c84c:	mov	r1, #32
   1c850:	mov	r2, r6
   1c854:	bl	1293c <memset@plt>
   1c858:	ldr	r0, [r4, #20]
   1c85c:	ldr	r2, [r4, #44]	; 0x2c
   1c860:	mov	r1, #0
   1c864:	add	r0, r0, r6
   1c868:	str	r0, [r4, #20]
   1c86c:	mov	r0, r4
   1c870:	blx	r2
   1c874:	ldr	r1, [r4, #16]
   1c878:	ldr	r0, [r4, #20]
   1c87c:	sub	r5, r5, r6
   1c880:	sub	r6, r1, r0
   1c884:	cmp	r5, r6
   1c888:	bhi	1c84c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x358>
   1c88c:	mov	r1, #32
   1c890:	mov	r2, r5
   1c894:	bl	1293c <memset@plt>
   1c898:	ldr	r0, [r4, #20]
   1c89c:	add	r0, r0, r5
   1c8a0:	str	r0, [r4, #20]
   1c8a4:	add	r1, r0, #1
   1c8a8:	str	r1, [r4, #20]
   1c8ac:	mov	r1, #93	; 0x5d
   1c8b0:	strb	r1, [r0]
   1c8b4:	sub	sp, fp, #28
   1c8b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c8bc <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1c8bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8c0:	add	fp, sp, #28
   1c8c4:	sub	sp, sp, #4
   1c8c8:	mov	r4, r0
   1c8cc:	ldrb	r0, [r0, #27]
   1c8d0:	cmp	r0, #0
   1c8d4:	beq	1c8e8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   1c8d8:	mov	r0, r4
   1c8dc:	sub	sp, fp, #28
   1c8e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8e4:	b	198d4 <flatcc_json_printer_uint32_vector_field@@Base>
   1c8e8:	mov	r0, #4
   1c8ec:	add	r0, r0, r2, lsl #1
   1c8f0:	ldr	r2, [r1, #8]
   1c8f4:	cmp	r0, r2
   1c8f8:	bge	1c918 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   1c8fc:	ldr	r2, [r1, #4]
   1c900:	add	r0, r2, r0
   1c904:	ldrh	r0, [r0]
   1c908:	cmp	r0, #0
   1c90c:	ldrne	r2, [r1]
   1c910:	addsne	r8, r2, r0
   1c914:	bne	1c920 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x64>
   1c918:	sub	sp, fp, #28
   1c91c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c920:	ldr	r0, [r1, #16]
   1c924:	ldr	sl, [fp, #12]
   1c928:	ldr	r2, [fp, #8]
   1c92c:	add	r7, r0, #1
   1c930:	cmp	r0, #0
   1c934:	str	r7, [r1, #16]
   1c938:	beq	1c950 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x94>
   1c93c:	ldr	r0, [r4, #20]
   1c940:	add	r1, r0, #1
   1c944:	str	r1, [r4, #20]
   1c948:	mov	r1, #44	; 0x2c
   1c94c:	strb	r1, [r0]
   1c950:	ldr	r0, [r8]
   1c954:	mov	r1, r3
   1c958:	ldr	r9, [r8, r0]!
   1c95c:	mov	r0, r4
   1c960:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1c964:	ldr	r1, [r4, #32]
   1c968:	ldr	r0, [r4, #20]
   1c96c:	cmp	r9, #0
   1c970:	add	r1, r1, #1
   1c974:	str	r1, [r4, #32]
   1c978:	add	r1, r0, #1
   1c97c:	str	r1, [r4, #20]
   1c980:	mov	r1, #91	; 0x5b
   1c984:	strb	r1, [r0]
   1c988:	beq	1cba0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   1c98c:	ldrb	r1, [r4, #25]
   1c990:	ldr	r0, [r4, #20]
   1c994:	cmp	r1, #0
   1c998:	beq	1ca54 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x198>
   1c99c:	add	r1, r0, #1
   1c9a0:	str	r1, [r4, #20]
   1c9a4:	mov	r1, #10
   1c9a8:	strb	r1, [r0]
   1c9ac:	ldr	r0, [r4, #20]
   1c9b0:	ldrb	r2, [r4, #25]
   1c9b4:	ldr	r3, [r4, #32]
   1c9b8:	ldr	r1, [r4, #16]
   1c9bc:	mla	r7, r3, r2, r0
   1c9c0:	mul	r5, r3, r2
   1c9c4:	cmp	r7, r1
   1c9c8:	bls	1ca38 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17c>
   1c9cc:	cmp	r0, r1
   1c9d0:	bcc	1c9ec <flatcc_json_printer_uint32_enum_vector_field@@Base+0x130>
   1c9d4:	ldr	r2, [r4, #44]	; 0x2c
   1c9d8:	mov	r0, r4
   1c9dc:	mov	r1, #0
   1c9e0:	blx	r2
   1c9e4:	ldr	r1, [r4, #16]
   1c9e8:	ldr	r0, [r4, #20]
   1c9ec:	sub	r6, r1, r0
   1c9f0:	cmp	r6, r5
   1c9f4:	bcs	1ca38 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17c>
   1c9f8:	mov	r1, #32
   1c9fc:	mov	r2, r6
   1ca00:	bl	1293c <memset@plt>
   1ca04:	ldr	r0, [r4, #20]
   1ca08:	ldr	r2, [r4, #44]	; 0x2c
   1ca0c:	mov	r1, #0
   1ca10:	add	r0, r0, r6
   1ca14:	str	r0, [r4, #20]
   1ca18:	mov	r0, r4
   1ca1c:	blx	r2
   1ca20:	ldr	r1, [r4, #16]
   1ca24:	ldr	r0, [r4, #20]
   1ca28:	sub	r5, r5, r6
   1ca2c:	sub	r6, r1, r0
   1ca30:	cmp	r5, r6
   1ca34:	bhi	1c9f8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x13c>
   1ca38:	mov	r1, #32
   1ca3c:	mov	r2, r5
   1ca40:	bl	1293c <memset@plt>
   1ca44:	ldr	r0, [r4, #20]
   1ca48:	add	r0, r0, r5
   1ca4c:	str	r0, [r4, #20]
   1ca50:	b	1ca70 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   1ca54:	ldr	r1, [r4, #16]
   1ca58:	cmp	r0, r1
   1ca5c:	bcc	1ca70 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   1ca60:	ldr	r2, [r4, #44]	; 0x2c
   1ca64:	mov	r0, r4
   1ca68:	mov	r1, #0
   1ca6c:	blx	r2
   1ca70:	ldr	r1, [r8, #4]
   1ca74:	mov	r0, r4
   1ca78:	blx	sl
   1ca7c:	subs	r9, r9, #1
   1ca80:	beq	1cba0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   1ca84:	add	r7, r8, #8
   1ca88:	mov	r8, #44	; 0x2c
   1ca8c:	b	1cabc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x200>
   1ca90:	mov	r1, #32
   1ca94:	mov	r2, r5
   1ca98:	bl	1293c <memset@plt>
   1ca9c:	ldr	r0, [r4, #20]
   1caa0:	add	r0, r0, r5
   1caa4:	str	r0, [r4, #20]
   1caa8:	ldr	r1, [r7], #4
   1caac:	mov	r0, r4
   1cab0:	blx	sl
   1cab4:	cmp	r9, #0
   1cab8:	beq	1cba0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   1cabc:	ldr	r0, [r4, #20]
   1cac0:	sub	r9, r9, #1
   1cac4:	add	r1, r0, #1
   1cac8:	str	r1, [r4, #20]
   1cacc:	strb	r8, [r0]
   1cad0:	ldrb	r1, [r4, #25]
   1cad4:	ldr	r0, [r4, #20]
   1cad8:	cmp	r1, #0
   1cadc:	beq	1cb80 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   1cae0:	add	r1, r0, #1
   1cae4:	str	r1, [r4, #20]
   1cae8:	mov	r1, #10
   1caec:	strb	r1, [r0]
   1caf0:	ldr	r0, [r4, #20]
   1caf4:	ldrb	r2, [r4, #25]
   1caf8:	ldr	r3, [r4, #32]
   1cafc:	ldr	r1, [r4, #16]
   1cb00:	mla	r6, r3, r2, r0
   1cb04:	mul	r5, r3, r2
   1cb08:	cmp	r6, r1
   1cb0c:	bls	1ca90 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   1cb10:	cmp	r0, r1
   1cb14:	bcc	1cb30 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x274>
   1cb18:	ldr	r2, [r4, #44]	; 0x2c
   1cb1c:	mov	r0, r4
   1cb20:	mov	r1, #0
   1cb24:	blx	r2
   1cb28:	ldr	r1, [r4, #16]
   1cb2c:	ldr	r0, [r4, #20]
   1cb30:	sub	r6, r1, r0
   1cb34:	cmp	r6, r5
   1cb38:	bcs	1ca90 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   1cb3c:	mov	r1, #32
   1cb40:	mov	r2, r6
   1cb44:	bl	1293c <memset@plt>
   1cb48:	ldr	r0, [r4, #20]
   1cb4c:	ldr	r2, [r4, #44]	; 0x2c
   1cb50:	mov	r1, #0
   1cb54:	add	r0, r0, r6
   1cb58:	str	r0, [r4, #20]
   1cb5c:	mov	r0, r4
   1cb60:	blx	r2
   1cb64:	ldr	r1, [r4, #16]
   1cb68:	ldr	r0, [r4, #20]
   1cb6c:	sub	r5, r5, r6
   1cb70:	sub	r6, r1, r0
   1cb74:	cmp	r5, r6
   1cb78:	bhi	1cb3c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x280>
   1cb7c:	b	1ca90 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   1cb80:	ldr	r1, [r4, #16]
   1cb84:	cmp	r0, r1
   1cb88:	bcc	1caa8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   1cb8c:	ldr	r2, [r4, #44]	; 0x2c
   1cb90:	mov	r0, r4
   1cb94:	mov	r1, #0
   1cb98:	blx	r2
   1cb9c:	b	1caa8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   1cba0:	ldrb	r1, [r4, #25]
   1cba4:	ldr	r0, [r4, #20]
   1cba8:	cmp	r1, #0
   1cbac:	beq	1cc6c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3b0>
   1cbb0:	add	r1, r0, #1
   1cbb4:	str	r1, [r4, #20]
   1cbb8:	mov	r1, #10
   1cbbc:	strb	r1, [r0]
   1cbc0:	ldr	r0, [r4, #32]
   1cbc4:	sub	r2, r0, #1
   1cbc8:	str	r2, [r4, #32]
   1cbcc:	ldrb	r3, [r4, #25]
   1cbd0:	ldr	r0, [r4, #20]
   1cbd4:	ldr	r1, [r4, #16]
   1cbd8:	mla	r7, r2, r3, r0
   1cbdc:	mul	r5, r2, r3
   1cbe0:	cmp	r7, r1
   1cbe4:	bls	1cc54 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x398>
   1cbe8:	cmp	r0, r1
   1cbec:	bcc	1cc08 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x34c>
   1cbf0:	ldr	r2, [r4, #44]	; 0x2c
   1cbf4:	mov	r0, r4
   1cbf8:	mov	r1, #0
   1cbfc:	blx	r2
   1cc00:	ldr	r1, [r4, #16]
   1cc04:	ldr	r0, [r4, #20]
   1cc08:	sub	r6, r1, r0
   1cc0c:	cmp	r6, r5
   1cc10:	bcs	1cc54 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x398>
   1cc14:	mov	r1, #32
   1cc18:	mov	r2, r6
   1cc1c:	bl	1293c <memset@plt>
   1cc20:	ldr	r0, [r4, #20]
   1cc24:	ldr	r2, [r4, #44]	; 0x2c
   1cc28:	mov	r1, #0
   1cc2c:	add	r0, r0, r6
   1cc30:	str	r0, [r4, #20]
   1cc34:	mov	r0, r4
   1cc38:	blx	r2
   1cc3c:	ldr	r1, [r4, #16]
   1cc40:	ldr	r0, [r4, #20]
   1cc44:	sub	r5, r5, r6
   1cc48:	sub	r6, r1, r0
   1cc4c:	cmp	r5, r6
   1cc50:	bhi	1cc14 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x358>
   1cc54:	mov	r1, #32
   1cc58:	mov	r2, r5
   1cc5c:	bl	1293c <memset@plt>
   1cc60:	ldr	r0, [r4, #20]
   1cc64:	add	r0, r0, r5
   1cc68:	str	r0, [r4, #20]
   1cc6c:	add	r1, r0, #1
   1cc70:	str	r1, [r4, #20]
   1cc74:	mov	r1, #93	; 0x5d
   1cc78:	strb	r1, [r0]
   1cc7c:	sub	sp, fp, #28
   1cc80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001cc84 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1cc84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc88:	add	fp, sp, #28
   1cc8c:	sub	sp, sp, #4
   1cc90:	mov	r4, r0
   1cc94:	ldrb	r0, [r0, #27]
   1cc98:	cmp	r0, #0
   1cc9c:	beq	1ccb0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   1cca0:	mov	r0, r4
   1cca4:	sub	sp, fp, #28
   1cca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccac:	b	19c94 <flatcc_json_printer_uint64_vector_field@@Base>
   1ccb0:	mov	r0, #4
   1ccb4:	add	r0, r0, r2, lsl #1
   1ccb8:	ldr	r2, [r1, #8]
   1ccbc:	cmp	r0, r2
   1ccc0:	bge	1cce0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   1ccc4:	ldr	r2, [r1, #4]
   1ccc8:	add	r0, r2, r0
   1cccc:	ldrh	r0, [r0]
   1ccd0:	cmp	r0, #0
   1ccd4:	ldrne	r2, [r1]
   1ccd8:	addsne	r8, r2, r0
   1ccdc:	bne	1cce8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x64>
   1cce0:	sub	sp, fp, #28
   1cce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cce8:	ldr	r0, [r1, #16]
   1ccec:	ldr	sl, [fp, #12]
   1ccf0:	ldr	r2, [fp, #8]
   1ccf4:	add	r7, r0, #1
   1ccf8:	cmp	r0, #0
   1ccfc:	str	r7, [r1, #16]
   1cd00:	beq	1cd18 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x94>
   1cd04:	ldr	r0, [r4, #20]
   1cd08:	add	r1, r0, #1
   1cd0c:	str	r1, [r4, #20]
   1cd10:	mov	r1, #44	; 0x2c
   1cd14:	strb	r1, [r0]
   1cd18:	ldr	r0, [r8]
   1cd1c:	mov	r1, r3
   1cd20:	ldr	r9, [r8, r0]!
   1cd24:	mov	r0, r4
   1cd28:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1cd2c:	ldr	r1, [r4, #32]
   1cd30:	ldr	r0, [r4, #20]
   1cd34:	cmp	r9, #0
   1cd38:	add	r1, r1, #1
   1cd3c:	str	r1, [r4, #32]
   1cd40:	add	r1, r0, #1
   1cd44:	str	r1, [r4, #20]
   1cd48:	mov	r1, #91	; 0x5b
   1cd4c:	strb	r1, [r0]
   1cd50:	beq	1cf6c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   1cd54:	ldrb	r1, [r4, #25]
   1cd58:	ldr	r0, [r4, #20]
   1cd5c:	cmp	r1, #0
   1cd60:	beq	1ce1c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x198>
   1cd64:	add	r1, r0, #1
   1cd68:	str	r1, [r4, #20]
   1cd6c:	mov	r1, #10
   1cd70:	strb	r1, [r0]
   1cd74:	ldr	r0, [r4, #20]
   1cd78:	ldrb	r2, [r4, #25]
   1cd7c:	ldr	r3, [r4, #32]
   1cd80:	ldr	r1, [r4, #16]
   1cd84:	mla	r7, r3, r2, r0
   1cd88:	mul	r5, r3, r2
   1cd8c:	cmp	r7, r1
   1cd90:	bls	1ce00 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x17c>
   1cd94:	cmp	r0, r1
   1cd98:	bcc	1cdb4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x130>
   1cd9c:	ldr	r2, [r4, #44]	; 0x2c
   1cda0:	mov	r0, r4
   1cda4:	mov	r1, #0
   1cda8:	blx	r2
   1cdac:	ldr	r1, [r4, #16]
   1cdb0:	ldr	r0, [r4, #20]
   1cdb4:	sub	r6, r1, r0
   1cdb8:	cmp	r6, r5
   1cdbc:	bcs	1ce00 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x17c>
   1cdc0:	mov	r1, #32
   1cdc4:	mov	r2, r6
   1cdc8:	bl	1293c <memset@plt>
   1cdcc:	ldr	r0, [r4, #20]
   1cdd0:	ldr	r2, [r4, #44]	; 0x2c
   1cdd4:	mov	r1, #0
   1cdd8:	add	r0, r0, r6
   1cddc:	str	r0, [r4, #20]
   1cde0:	mov	r0, r4
   1cde4:	blx	r2
   1cde8:	ldr	r1, [r4, #16]
   1cdec:	ldr	r0, [r4, #20]
   1cdf0:	sub	r5, r5, r6
   1cdf4:	sub	r6, r1, r0
   1cdf8:	cmp	r5, r6
   1cdfc:	bhi	1cdc0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x13c>
   1ce00:	mov	r1, #32
   1ce04:	mov	r2, r5
   1ce08:	bl	1293c <memset@plt>
   1ce0c:	ldr	r0, [r4, #20]
   1ce10:	add	r0, r0, r5
   1ce14:	str	r0, [r4, #20]
   1ce18:	b	1ce38 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   1ce1c:	ldr	r1, [r4, #16]
   1ce20:	cmp	r0, r1
   1ce24:	bcc	1ce38 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   1ce28:	ldr	r2, [r4, #44]	; 0x2c
   1ce2c:	mov	r0, r4
   1ce30:	mov	r1, #0
   1ce34:	blx	r2
   1ce38:	ldrd	r2, [r8, #4]
   1ce3c:	mov	r0, r4
   1ce40:	blx	sl
   1ce44:	subs	r9, r9, #1
   1ce48:	beq	1cf6c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   1ce4c:	add	r7, r8, #12
   1ce50:	mov	r8, #44	; 0x2c
   1ce54:	b	1ce88 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x204>
   1ce58:	mov	r1, #32
   1ce5c:	mov	r2, r5
   1ce60:	bl	1293c <memset@plt>
   1ce64:	ldr	r0, [r4, #20]
   1ce68:	add	r0, r0, r5
   1ce6c:	str	r0, [r4, #20]
   1ce70:	ldrd	r2, [r7]
   1ce74:	mov	r0, r4
   1ce78:	blx	sl
   1ce7c:	add	r7, r7, #8
   1ce80:	cmp	r9, #0
   1ce84:	beq	1cf6c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   1ce88:	ldr	r0, [r4, #20]
   1ce8c:	sub	r9, r9, #1
   1ce90:	add	r1, r0, #1
   1ce94:	str	r1, [r4, #20]
   1ce98:	strb	r8, [r0]
   1ce9c:	ldrb	r1, [r4, #25]
   1cea0:	ldr	r0, [r4, #20]
   1cea4:	cmp	r1, #0
   1cea8:	beq	1cf4c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c8>
   1ceac:	add	r1, r0, #1
   1ceb0:	str	r1, [r4, #20]
   1ceb4:	mov	r1, #10
   1ceb8:	strb	r1, [r0]
   1cebc:	ldr	r0, [r4, #20]
   1cec0:	ldrb	r2, [r4, #25]
   1cec4:	ldr	r3, [r4, #32]
   1cec8:	ldr	r1, [r4, #16]
   1cecc:	mla	r6, r3, r2, r0
   1ced0:	mul	r5, r3, r2
   1ced4:	cmp	r6, r1
   1ced8:	bls	1ce58 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   1cedc:	cmp	r0, r1
   1cee0:	bcc	1cefc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x278>
   1cee4:	ldr	r2, [r4, #44]	; 0x2c
   1cee8:	mov	r0, r4
   1ceec:	mov	r1, #0
   1cef0:	blx	r2
   1cef4:	ldr	r1, [r4, #16]
   1cef8:	ldr	r0, [r4, #20]
   1cefc:	sub	r6, r1, r0
   1cf00:	cmp	r6, r5
   1cf04:	bcs	1ce58 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   1cf08:	mov	r1, #32
   1cf0c:	mov	r2, r6
   1cf10:	bl	1293c <memset@plt>
   1cf14:	ldr	r0, [r4, #20]
   1cf18:	ldr	r2, [r4, #44]	; 0x2c
   1cf1c:	mov	r1, #0
   1cf20:	add	r0, r0, r6
   1cf24:	str	r0, [r4, #20]
   1cf28:	mov	r0, r4
   1cf2c:	blx	r2
   1cf30:	ldr	r1, [r4, #16]
   1cf34:	ldr	r0, [r4, #20]
   1cf38:	sub	r5, r5, r6
   1cf3c:	sub	r6, r1, r0
   1cf40:	cmp	r5, r6
   1cf44:	bhi	1cf08 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x284>
   1cf48:	b	1ce58 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   1cf4c:	ldr	r1, [r4, #16]
   1cf50:	cmp	r0, r1
   1cf54:	bcc	1ce70 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   1cf58:	ldr	r2, [r4, #44]	; 0x2c
   1cf5c:	mov	r0, r4
   1cf60:	mov	r1, #0
   1cf64:	blx	r2
   1cf68:	b	1ce70 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   1cf6c:	ldrb	r1, [r4, #25]
   1cf70:	ldr	r0, [r4, #20]
   1cf74:	cmp	r1, #0
   1cf78:	beq	1d038 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b4>
   1cf7c:	add	r1, r0, #1
   1cf80:	str	r1, [r4, #20]
   1cf84:	mov	r1, #10
   1cf88:	strb	r1, [r0]
   1cf8c:	ldr	r0, [r4, #32]
   1cf90:	sub	r2, r0, #1
   1cf94:	str	r2, [r4, #32]
   1cf98:	ldrb	r3, [r4, #25]
   1cf9c:	ldr	r0, [r4, #20]
   1cfa0:	ldr	r1, [r4, #16]
   1cfa4:	mla	r7, r2, r3, r0
   1cfa8:	mul	r5, r2, r3
   1cfac:	cmp	r7, r1
   1cfb0:	bls	1d020 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x39c>
   1cfb4:	cmp	r0, r1
   1cfb8:	bcc	1cfd4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x350>
   1cfbc:	ldr	r2, [r4, #44]	; 0x2c
   1cfc0:	mov	r0, r4
   1cfc4:	mov	r1, #0
   1cfc8:	blx	r2
   1cfcc:	ldr	r1, [r4, #16]
   1cfd0:	ldr	r0, [r4, #20]
   1cfd4:	sub	r6, r1, r0
   1cfd8:	cmp	r6, r5
   1cfdc:	bcs	1d020 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x39c>
   1cfe0:	mov	r1, #32
   1cfe4:	mov	r2, r6
   1cfe8:	bl	1293c <memset@plt>
   1cfec:	ldr	r0, [r4, #20]
   1cff0:	ldr	r2, [r4, #44]	; 0x2c
   1cff4:	mov	r1, #0
   1cff8:	add	r0, r0, r6
   1cffc:	str	r0, [r4, #20]
   1d000:	mov	r0, r4
   1d004:	blx	r2
   1d008:	ldr	r1, [r4, #16]
   1d00c:	ldr	r0, [r4, #20]
   1d010:	sub	r5, r5, r6
   1d014:	sub	r6, r1, r0
   1d018:	cmp	r5, r6
   1d01c:	bhi	1cfe0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x35c>
   1d020:	mov	r1, #32
   1d024:	mov	r2, r5
   1d028:	bl	1293c <memset@plt>
   1d02c:	ldr	r0, [r4, #20]
   1d030:	add	r0, r0, r5
   1d034:	str	r0, [r4, #20]
   1d038:	add	r1, r0, #1
   1d03c:	str	r1, [r4, #20]
   1d040:	mov	r1, #93	; 0x5d
   1d044:	strb	r1, [r0]
   1d048:	sub	sp, fp, #28
   1d04c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d050 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1d050:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d054:	add	fp, sp, #28
   1d058:	sub	sp, sp, #4
   1d05c:	mov	r4, r0
   1d060:	ldrb	r0, [r0, #27]
   1d064:	cmp	r0, #0
   1d068:	beq	1d07c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   1d06c:	mov	r0, r4
   1d070:	sub	sp, fp, #28
   1d074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d078:	b	1a058 <flatcc_json_printer_int8_vector_field@@Base>
   1d07c:	mov	r0, #4
   1d080:	add	r0, r0, r2, lsl #1
   1d084:	ldr	r2, [r1, #8]
   1d088:	cmp	r0, r2
   1d08c:	bge	1d0ac <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   1d090:	ldr	r2, [r1, #4]
   1d094:	add	r0, r2, r0
   1d098:	ldrh	r0, [r0]
   1d09c:	cmp	r0, #0
   1d0a0:	ldrne	r2, [r1]
   1d0a4:	addsne	r8, r2, r0
   1d0a8:	bne	1d0b4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x64>
   1d0ac:	sub	sp, fp, #28
   1d0b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d0b4:	ldr	r0, [r1, #16]
   1d0b8:	ldr	sl, [fp, #12]
   1d0bc:	ldr	r2, [fp, #8]
   1d0c0:	add	r7, r0, #1
   1d0c4:	cmp	r0, #0
   1d0c8:	str	r7, [r1, #16]
   1d0cc:	beq	1d0e4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x94>
   1d0d0:	ldr	r0, [r4, #20]
   1d0d4:	add	r1, r0, #1
   1d0d8:	str	r1, [r4, #20]
   1d0dc:	mov	r1, #44	; 0x2c
   1d0e0:	strb	r1, [r0]
   1d0e4:	ldr	r0, [r8]
   1d0e8:	mov	r1, r3
   1d0ec:	ldr	r9, [r8, r0]!
   1d0f0:	mov	r0, r4
   1d0f4:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1d0f8:	ldr	r1, [r4, #32]
   1d0fc:	ldr	r0, [r4, #20]
   1d100:	cmp	r9, #0
   1d104:	add	r1, r1, #1
   1d108:	str	r1, [r4, #32]
   1d10c:	add	r1, r0, #1
   1d110:	str	r1, [r4, #20]
   1d114:	mov	r1, #91	; 0x5b
   1d118:	strb	r1, [r0]
   1d11c:	beq	1d334 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   1d120:	ldrb	r1, [r4, #25]
   1d124:	ldr	r0, [r4, #20]
   1d128:	cmp	r1, #0
   1d12c:	beq	1d1e8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x198>
   1d130:	add	r1, r0, #1
   1d134:	str	r1, [r4, #20]
   1d138:	mov	r1, #10
   1d13c:	strb	r1, [r0]
   1d140:	ldr	r0, [r4, #20]
   1d144:	ldrb	r2, [r4, #25]
   1d148:	ldr	r3, [r4, #32]
   1d14c:	ldr	r1, [r4, #16]
   1d150:	mla	r7, r3, r2, r0
   1d154:	mul	r5, r3, r2
   1d158:	cmp	r7, r1
   1d15c:	bls	1d1cc <flatcc_json_printer_int8_enum_vector_field@@Base+0x17c>
   1d160:	cmp	r0, r1
   1d164:	bcc	1d180 <flatcc_json_printer_int8_enum_vector_field@@Base+0x130>
   1d168:	ldr	r2, [r4, #44]	; 0x2c
   1d16c:	mov	r0, r4
   1d170:	mov	r1, #0
   1d174:	blx	r2
   1d178:	ldr	r1, [r4, #16]
   1d17c:	ldr	r0, [r4, #20]
   1d180:	sub	r6, r1, r0
   1d184:	cmp	r6, r5
   1d188:	bcs	1d1cc <flatcc_json_printer_int8_enum_vector_field@@Base+0x17c>
   1d18c:	mov	r1, #32
   1d190:	mov	r2, r6
   1d194:	bl	1293c <memset@plt>
   1d198:	ldr	r0, [r4, #20]
   1d19c:	ldr	r2, [r4, #44]	; 0x2c
   1d1a0:	mov	r1, #0
   1d1a4:	add	r0, r0, r6
   1d1a8:	str	r0, [r4, #20]
   1d1ac:	mov	r0, r4
   1d1b0:	blx	r2
   1d1b4:	ldr	r1, [r4, #16]
   1d1b8:	ldr	r0, [r4, #20]
   1d1bc:	sub	r5, r5, r6
   1d1c0:	sub	r6, r1, r0
   1d1c4:	cmp	r5, r6
   1d1c8:	bhi	1d18c <flatcc_json_printer_int8_enum_vector_field@@Base+0x13c>
   1d1cc:	mov	r1, #32
   1d1d0:	mov	r2, r5
   1d1d4:	bl	1293c <memset@plt>
   1d1d8:	ldr	r0, [r4, #20]
   1d1dc:	add	r0, r0, r5
   1d1e0:	str	r0, [r4, #20]
   1d1e4:	b	1d204 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b4>
   1d1e8:	ldr	r1, [r4, #16]
   1d1ec:	cmp	r0, r1
   1d1f0:	bcc	1d204 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b4>
   1d1f4:	ldr	r2, [r4, #44]	; 0x2c
   1d1f8:	mov	r0, r4
   1d1fc:	mov	r1, #0
   1d200:	blx	r2
   1d204:	ldrsb	r1, [r8, #4]
   1d208:	mov	r0, r4
   1d20c:	blx	sl
   1d210:	subs	r9, r9, #1
   1d214:	beq	1d334 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   1d218:	add	r7, r8, #5
   1d21c:	mov	r8, #44	; 0x2c
   1d220:	b	1d250 <flatcc_json_printer_int8_enum_vector_field@@Base+0x200>
   1d224:	mov	r1, #32
   1d228:	mov	r2, r5
   1d22c:	bl	1293c <memset@plt>
   1d230:	ldr	r0, [r4, #20]
   1d234:	add	r0, r0, r5
   1d238:	str	r0, [r4, #20]
   1d23c:	ldrsb	r1, [r7], #1
   1d240:	mov	r0, r4
   1d244:	blx	sl
   1d248:	cmp	r9, #0
   1d24c:	beq	1d334 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   1d250:	ldr	r0, [r4, #20]
   1d254:	sub	r9, r9, #1
   1d258:	add	r1, r0, #1
   1d25c:	str	r1, [r4, #20]
   1d260:	strb	r8, [r0]
   1d264:	ldrb	r1, [r4, #25]
   1d268:	ldr	r0, [r4, #20]
   1d26c:	cmp	r1, #0
   1d270:	beq	1d314 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   1d274:	add	r1, r0, #1
   1d278:	str	r1, [r4, #20]
   1d27c:	mov	r1, #10
   1d280:	strb	r1, [r0]
   1d284:	ldr	r0, [r4, #20]
   1d288:	ldrb	r2, [r4, #25]
   1d28c:	ldr	r3, [r4, #32]
   1d290:	ldr	r1, [r4, #16]
   1d294:	mla	r6, r3, r2, r0
   1d298:	mul	r5, r3, r2
   1d29c:	cmp	r6, r1
   1d2a0:	bls	1d224 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   1d2a4:	cmp	r0, r1
   1d2a8:	bcc	1d2c4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x274>
   1d2ac:	ldr	r2, [r4, #44]	; 0x2c
   1d2b0:	mov	r0, r4
   1d2b4:	mov	r1, #0
   1d2b8:	blx	r2
   1d2bc:	ldr	r1, [r4, #16]
   1d2c0:	ldr	r0, [r4, #20]
   1d2c4:	sub	r6, r1, r0
   1d2c8:	cmp	r6, r5
   1d2cc:	bcs	1d224 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   1d2d0:	mov	r1, #32
   1d2d4:	mov	r2, r6
   1d2d8:	bl	1293c <memset@plt>
   1d2dc:	ldr	r0, [r4, #20]
   1d2e0:	ldr	r2, [r4, #44]	; 0x2c
   1d2e4:	mov	r1, #0
   1d2e8:	add	r0, r0, r6
   1d2ec:	str	r0, [r4, #20]
   1d2f0:	mov	r0, r4
   1d2f4:	blx	r2
   1d2f8:	ldr	r1, [r4, #16]
   1d2fc:	ldr	r0, [r4, #20]
   1d300:	sub	r5, r5, r6
   1d304:	sub	r6, r1, r0
   1d308:	cmp	r5, r6
   1d30c:	bhi	1d2d0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x280>
   1d310:	b	1d224 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   1d314:	ldr	r1, [r4, #16]
   1d318:	cmp	r0, r1
   1d31c:	bcc	1d23c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   1d320:	ldr	r2, [r4, #44]	; 0x2c
   1d324:	mov	r0, r4
   1d328:	mov	r1, #0
   1d32c:	blx	r2
   1d330:	b	1d23c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   1d334:	ldrb	r1, [r4, #25]
   1d338:	ldr	r0, [r4, #20]
   1d33c:	cmp	r1, #0
   1d340:	beq	1d400 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3b0>
   1d344:	add	r1, r0, #1
   1d348:	str	r1, [r4, #20]
   1d34c:	mov	r1, #10
   1d350:	strb	r1, [r0]
   1d354:	ldr	r0, [r4, #32]
   1d358:	sub	r2, r0, #1
   1d35c:	str	r2, [r4, #32]
   1d360:	ldrb	r3, [r4, #25]
   1d364:	ldr	r0, [r4, #20]
   1d368:	ldr	r1, [r4, #16]
   1d36c:	mla	r7, r2, r3, r0
   1d370:	mul	r5, r2, r3
   1d374:	cmp	r7, r1
   1d378:	bls	1d3e8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x398>
   1d37c:	cmp	r0, r1
   1d380:	bcc	1d39c <flatcc_json_printer_int8_enum_vector_field@@Base+0x34c>
   1d384:	ldr	r2, [r4, #44]	; 0x2c
   1d388:	mov	r0, r4
   1d38c:	mov	r1, #0
   1d390:	blx	r2
   1d394:	ldr	r1, [r4, #16]
   1d398:	ldr	r0, [r4, #20]
   1d39c:	sub	r6, r1, r0
   1d3a0:	cmp	r6, r5
   1d3a4:	bcs	1d3e8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x398>
   1d3a8:	mov	r1, #32
   1d3ac:	mov	r2, r6
   1d3b0:	bl	1293c <memset@plt>
   1d3b4:	ldr	r0, [r4, #20]
   1d3b8:	ldr	r2, [r4, #44]	; 0x2c
   1d3bc:	mov	r1, #0
   1d3c0:	add	r0, r0, r6
   1d3c4:	str	r0, [r4, #20]
   1d3c8:	mov	r0, r4
   1d3cc:	blx	r2
   1d3d0:	ldr	r1, [r4, #16]
   1d3d4:	ldr	r0, [r4, #20]
   1d3d8:	sub	r5, r5, r6
   1d3dc:	sub	r6, r1, r0
   1d3e0:	cmp	r5, r6
   1d3e4:	bhi	1d3a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x358>
   1d3e8:	mov	r1, #32
   1d3ec:	mov	r2, r5
   1d3f0:	bl	1293c <memset@plt>
   1d3f4:	ldr	r0, [r4, #20]
   1d3f8:	add	r0, r0, r5
   1d3fc:	str	r0, [r4, #20]
   1d400:	add	r1, r0, #1
   1d404:	str	r1, [r4, #20]
   1d408:	mov	r1, #93	; 0x5d
   1d40c:	strb	r1, [r0]
   1d410:	sub	sp, fp, #28
   1d414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d418 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   1d418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d41c:	add	fp, sp, #28
   1d420:	sub	sp, sp, #4
   1d424:	mov	r4, r0
   1d428:	ldrb	r0, [r0, #27]
   1d42c:	cmp	r0, #0
   1d430:	beq	1d444 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   1d434:	mov	r0, r4
   1d438:	sub	sp, fp, #28
   1d43c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d440:	b	1a5b0 <flatcc_json_printer_int16_vector_field@@Base>
   1d444:	mov	r0, #4
   1d448:	add	r0, r0, r2, lsl #1
   1d44c:	ldr	r2, [r1, #8]
   1d450:	cmp	r0, r2
   1d454:	bge	1d474 <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   1d458:	ldr	r2, [r1, #4]
   1d45c:	add	r0, r2, r0
   1d460:	ldrh	r0, [r0]
   1d464:	cmp	r0, #0
   1d468:	ldrne	r2, [r1]
   1d46c:	addsne	r8, r2, r0
   1d470:	bne	1d47c <flatcc_json_printer_int16_enum_vector_field@@Base+0x64>
   1d474:	sub	sp, fp, #28
   1d478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d47c:	ldr	r0, [r1, #16]
   1d480:	ldr	sl, [fp, #12]
   1d484:	ldr	r2, [fp, #8]
   1d488:	add	r7, r0, #1
   1d48c:	cmp	r0, #0
   1d490:	str	r7, [r1, #16]
   1d494:	beq	1d4ac <flatcc_json_printer_int16_enum_vector_field@@Base+0x94>
   1d498:	ldr	r0, [r4, #20]
   1d49c:	add	r1, r0, #1
   1d4a0:	str	r1, [r4, #20]
   1d4a4:	mov	r1, #44	; 0x2c
   1d4a8:	strb	r1, [r0]
   1d4ac:	ldr	r0, [r8]
   1d4b0:	mov	r1, r3
   1d4b4:	ldr	r9, [r8, r0]!
   1d4b8:	mov	r0, r4
   1d4bc:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1d4c0:	ldr	r1, [r4, #32]
   1d4c4:	ldr	r0, [r4, #20]
   1d4c8:	cmp	r9, #0
   1d4cc:	add	r1, r1, #1
   1d4d0:	str	r1, [r4, #32]
   1d4d4:	add	r1, r0, #1
   1d4d8:	str	r1, [r4, #20]
   1d4dc:	mov	r1, #91	; 0x5b
   1d4e0:	strb	r1, [r0]
   1d4e4:	beq	1d6fc <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   1d4e8:	ldrb	r1, [r4, #25]
   1d4ec:	ldr	r0, [r4, #20]
   1d4f0:	cmp	r1, #0
   1d4f4:	beq	1d5b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x198>
   1d4f8:	add	r1, r0, #1
   1d4fc:	str	r1, [r4, #20]
   1d500:	mov	r1, #10
   1d504:	strb	r1, [r0]
   1d508:	ldr	r0, [r4, #20]
   1d50c:	ldrb	r2, [r4, #25]
   1d510:	ldr	r3, [r4, #32]
   1d514:	ldr	r1, [r4, #16]
   1d518:	mla	r7, r3, r2, r0
   1d51c:	mul	r5, r3, r2
   1d520:	cmp	r7, r1
   1d524:	bls	1d594 <flatcc_json_printer_int16_enum_vector_field@@Base+0x17c>
   1d528:	cmp	r0, r1
   1d52c:	bcc	1d548 <flatcc_json_printer_int16_enum_vector_field@@Base+0x130>
   1d530:	ldr	r2, [r4, #44]	; 0x2c
   1d534:	mov	r0, r4
   1d538:	mov	r1, #0
   1d53c:	blx	r2
   1d540:	ldr	r1, [r4, #16]
   1d544:	ldr	r0, [r4, #20]
   1d548:	sub	r6, r1, r0
   1d54c:	cmp	r6, r5
   1d550:	bcs	1d594 <flatcc_json_printer_int16_enum_vector_field@@Base+0x17c>
   1d554:	mov	r1, #32
   1d558:	mov	r2, r6
   1d55c:	bl	1293c <memset@plt>
   1d560:	ldr	r0, [r4, #20]
   1d564:	ldr	r2, [r4, #44]	; 0x2c
   1d568:	mov	r1, #0
   1d56c:	add	r0, r0, r6
   1d570:	str	r0, [r4, #20]
   1d574:	mov	r0, r4
   1d578:	blx	r2
   1d57c:	ldr	r1, [r4, #16]
   1d580:	ldr	r0, [r4, #20]
   1d584:	sub	r5, r5, r6
   1d588:	sub	r6, r1, r0
   1d58c:	cmp	r5, r6
   1d590:	bhi	1d554 <flatcc_json_printer_int16_enum_vector_field@@Base+0x13c>
   1d594:	mov	r1, #32
   1d598:	mov	r2, r5
   1d59c:	bl	1293c <memset@plt>
   1d5a0:	ldr	r0, [r4, #20]
   1d5a4:	add	r0, r0, r5
   1d5a8:	str	r0, [r4, #20]
   1d5ac:	b	1d5cc <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   1d5b0:	ldr	r1, [r4, #16]
   1d5b4:	cmp	r0, r1
   1d5b8:	bcc	1d5cc <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   1d5bc:	ldr	r2, [r4, #44]	; 0x2c
   1d5c0:	mov	r0, r4
   1d5c4:	mov	r1, #0
   1d5c8:	blx	r2
   1d5cc:	ldrsh	r1, [r8, #4]
   1d5d0:	mov	r0, r4
   1d5d4:	blx	sl
   1d5d8:	subs	r9, r9, #1
   1d5dc:	beq	1d6fc <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   1d5e0:	add	r7, r8, #6
   1d5e4:	mov	r8, #44	; 0x2c
   1d5e8:	b	1d618 <flatcc_json_printer_int16_enum_vector_field@@Base+0x200>
   1d5ec:	mov	r1, #32
   1d5f0:	mov	r2, r5
   1d5f4:	bl	1293c <memset@plt>
   1d5f8:	ldr	r0, [r4, #20]
   1d5fc:	add	r0, r0, r5
   1d600:	str	r0, [r4, #20]
   1d604:	ldrsh	r1, [r7], #2
   1d608:	mov	r0, r4
   1d60c:	blx	sl
   1d610:	cmp	r9, #0
   1d614:	beq	1d6fc <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   1d618:	ldr	r0, [r4, #20]
   1d61c:	sub	r9, r9, #1
   1d620:	add	r1, r0, #1
   1d624:	str	r1, [r4, #20]
   1d628:	strb	r8, [r0]
   1d62c:	ldrb	r1, [r4, #25]
   1d630:	ldr	r0, [r4, #20]
   1d634:	cmp	r1, #0
   1d638:	beq	1d6dc <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   1d63c:	add	r1, r0, #1
   1d640:	str	r1, [r4, #20]
   1d644:	mov	r1, #10
   1d648:	strb	r1, [r0]
   1d64c:	ldr	r0, [r4, #20]
   1d650:	ldrb	r2, [r4, #25]
   1d654:	ldr	r3, [r4, #32]
   1d658:	ldr	r1, [r4, #16]
   1d65c:	mla	r6, r3, r2, r0
   1d660:	mul	r5, r3, r2
   1d664:	cmp	r6, r1
   1d668:	bls	1d5ec <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   1d66c:	cmp	r0, r1
   1d670:	bcc	1d68c <flatcc_json_printer_int16_enum_vector_field@@Base+0x274>
   1d674:	ldr	r2, [r4, #44]	; 0x2c
   1d678:	mov	r0, r4
   1d67c:	mov	r1, #0
   1d680:	blx	r2
   1d684:	ldr	r1, [r4, #16]
   1d688:	ldr	r0, [r4, #20]
   1d68c:	sub	r6, r1, r0
   1d690:	cmp	r6, r5
   1d694:	bcs	1d5ec <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   1d698:	mov	r1, #32
   1d69c:	mov	r2, r6
   1d6a0:	bl	1293c <memset@plt>
   1d6a4:	ldr	r0, [r4, #20]
   1d6a8:	ldr	r2, [r4, #44]	; 0x2c
   1d6ac:	mov	r1, #0
   1d6b0:	add	r0, r0, r6
   1d6b4:	str	r0, [r4, #20]
   1d6b8:	mov	r0, r4
   1d6bc:	blx	r2
   1d6c0:	ldr	r1, [r4, #16]
   1d6c4:	ldr	r0, [r4, #20]
   1d6c8:	sub	r5, r5, r6
   1d6cc:	sub	r6, r1, r0
   1d6d0:	cmp	r5, r6
   1d6d4:	bhi	1d698 <flatcc_json_printer_int16_enum_vector_field@@Base+0x280>
   1d6d8:	b	1d5ec <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   1d6dc:	ldr	r1, [r4, #16]
   1d6e0:	cmp	r0, r1
   1d6e4:	bcc	1d604 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   1d6e8:	ldr	r2, [r4, #44]	; 0x2c
   1d6ec:	mov	r0, r4
   1d6f0:	mov	r1, #0
   1d6f4:	blx	r2
   1d6f8:	b	1d604 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   1d6fc:	ldrb	r1, [r4, #25]
   1d700:	ldr	r0, [r4, #20]
   1d704:	cmp	r1, #0
   1d708:	beq	1d7c8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3b0>
   1d70c:	add	r1, r0, #1
   1d710:	str	r1, [r4, #20]
   1d714:	mov	r1, #10
   1d718:	strb	r1, [r0]
   1d71c:	ldr	r0, [r4, #32]
   1d720:	sub	r2, r0, #1
   1d724:	str	r2, [r4, #32]
   1d728:	ldrb	r3, [r4, #25]
   1d72c:	ldr	r0, [r4, #20]
   1d730:	ldr	r1, [r4, #16]
   1d734:	mla	r7, r2, r3, r0
   1d738:	mul	r5, r2, r3
   1d73c:	cmp	r7, r1
   1d740:	bls	1d7b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x398>
   1d744:	cmp	r0, r1
   1d748:	bcc	1d764 <flatcc_json_printer_int16_enum_vector_field@@Base+0x34c>
   1d74c:	ldr	r2, [r4, #44]	; 0x2c
   1d750:	mov	r0, r4
   1d754:	mov	r1, #0
   1d758:	blx	r2
   1d75c:	ldr	r1, [r4, #16]
   1d760:	ldr	r0, [r4, #20]
   1d764:	sub	r6, r1, r0
   1d768:	cmp	r6, r5
   1d76c:	bcs	1d7b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x398>
   1d770:	mov	r1, #32
   1d774:	mov	r2, r6
   1d778:	bl	1293c <memset@plt>
   1d77c:	ldr	r0, [r4, #20]
   1d780:	ldr	r2, [r4, #44]	; 0x2c
   1d784:	mov	r1, #0
   1d788:	add	r0, r0, r6
   1d78c:	str	r0, [r4, #20]
   1d790:	mov	r0, r4
   1d794:	blx	r2
   1d798:	ldr	r1, [r4, #16]
   1d79c:	ldr	r0, [r4, #20]
   1d7a0:	sub	r5, r5, r6
   1d7a4:	sub	r6, r1, r0
   1d7a8:	cmp	r5, r6
   1d7ac:	bhi	1d770 <flatcc_json_printer_int16_enum_vector_field@@Base+0x358>
   1d7b0:	mov	r1, #32
   1d7b4:	mov	r2, r5
   1d7b8:	bl	1293c <memset@plt>
   1d7bc:	ldr	r0, [r4, #20]
   1d7c0:	add	r0, r0, r5
   1d7c4:	str	r0, [r4, #20]
   1d7c8:	add	r1, r0, #1
   1d7cc:	str	r1, [r4, #20]
   1d7d0:	mov	r1, #93	; 0x5d
   1d7d4:	strb	r1, [r0]
   1d7d8:	sub	sp, fp, #28
   1d7dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d7e0 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   1d7e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7e4:	add	fp, sp, #28
   1d7e8:	sub	sp, sp, #4
   1d7ec:	mov	r4, r0
   1d7f0:	ldrb	r0, [r0, #27]
   1d7f4:	cmp	r0, #0
   1d7f8:	beq	1d80c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   1d7fc:	mov	r0, r4
   1d800:	sub	sp, fp, #28
   1d804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d808:	b	1a9b4 <flatcc_json_printer_int32_vector_field@@Base>
   1d80c:	mov	r0, #4
   1d810:	add	r0, r0, r2, lsl #1
   1d814:	ldr	r2, [r1, #8]
   1d818:	cmp	r0, r2
   1d81c:	bge	1d83c <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   1d820:	ldr	r2, [r1, #4]
   1d824:	add	r0, r2, r0
   1d828:	ldrh	r0, [r0]
   1d82c:	cmp	r0, #0
   1d830:	ldrne	r2, [r1]
   1d834:	addsne	r8, r2, r0
   1d838:	bne	1d844 <flatcc_json_printer_int32_enum_vector_field@@Base+0x64>
   1d83c:	sub	sp, fp, #28
   1d840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d844:	ldr	r0, [r1, #16]
   1d848:	ldr	sl, [fp, #12]
   1d84c:	ldr	r2, [fp, #8]
   1d850:	add	r7, r0, #1
   1d854:	cmp	r0, #0
   1d858:	str	r7, [r1, #16]
   1d85c:	beq	1d874 <flatcc_json_printer_int32_enum_vector_field@@Base+0x94>
   1d860:	ldr	r0, [r4, #20]
   1d864:	add	r1, r0, #1
   1d868:	str	r1, [r4, #20]
   1d86c:	mov	r1, #44	; 0x2c
   1d870:	strb	r1, [r0]
   1d874:	ldr	r0, [r8]
   1d878:	mov	r1, r3
   1d87c:	ldr	r9, [r8, r0]!
   1d880:	mov	r0, r4
   1d884:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1d888:	ldr	r1, [r4, #32]
   1d88c:	ldr	r0, [r4, #20]
   1d890:	cmp	r9, #0
   1d894:	add	r1, r1, #1
   1d898:	str	r1, [r4, #32]
   1d89c:	add	r1, r0, #1
   1d8a0:	str	r1, [r4, #20]
   1d8a4:	mov	r1, #91	; 0x5b
   1d8a8:	strb	r1, [r0]
   1d8ac:	beq	1dac4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   1d8b0:	ldrb	r1, [r4, #25]
   1d8b4:	ldr	r0, [r4, #20]
   1d8b8:	cmp	r1, #0
   1d8bc:	beq	1d978 <flatcc_json_printer_int32_enum_vector_field@@Base+0x198>
   1d8c0:	add	r1, r0, #1
   1d8c4:	str	r1, [r4, #20]
   1d8c8:	mov	r1, #10
   1d8cc:	strb	r1, [r0]
   1d8d0:	ldr	r0, [r4, #20]
   1d8d4:	ldrb	r2, [r4, #25]
   1d8d8:	ldr	r3, [r4, #32]
   1d8dc:	ldr	r1, [r4, #16]
   1d8e0:	mla	r7, r3, r2, r0
   1d8e4:	mul	r5, r3, r2
   1d8e8:	cmp	r7, r1
   1d8ec:	bls	1d95c <flatcc_json_printer_int32_enum_vector_field@@Base+0x17c>
   1d8f0:	cmp	r0, r1
   1d8f4:	bcc	1d910 <flatcc_json_printer_int32_enum_vector_field@@Base+0x130>
   1d8f8:	ldr	r2, [r4, #44]	; 0x2c
   1d8fc:	mov	r0, r4
   1d900:	mov	r1, #0
   1d904:	blx	r2
   1d908:	ldr	r1, [r4, #16]
   1d90c:	ldr	r0, [r4, #20]
   1d910:	sub	r6, r1, r0
   1d914:	cmp	r6, r5
   1d918:	bcs	1d95c <flatcc_json_printer_int32_enum_vector_field@@Base+0x17c>
   1d91c:	mov	r1, #32
   1d920:	mov	r2, r6
   1d924:	bl	1293c <memset@plt>
   1d928:	ldr	r0, [r4, #20]
   1d92c:	ldr	r2, [r4, #44]	; 0x2c
   1d930:	mov	r1, #0
   1d934:	add	r0, r0, r6
   1d938:	str	r0, [r4, #20]
   1d93c:	mov	r0, r4
   1d940:	blx	r2
   1d944:	ldr	r1, [r4, #16]
   1d948:	ldr	r0, [r4, #20]
   1d94c:	sub	r5, r5, r6
   1d950:	sub	r6, r1, r0
   1d954:	cmp	r5, r6
   1d958:	bhi	1d91c <flatcc_json_printer_int32_enum_vector_field@@Base+0x13c>
   1d95c:	mov	r1, #32
   1d960:	mov	r2, r5
   1d964:	bl	1293c <memset@plt>
   1d968:	ldr	r0, [r4, #20]
   1d96c:	add	r0, r0, r5
   1d970:	str	r0, [r4, #20]
   1d974:	b	1d994 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   1d978:	ldr	r1, [r4, #16]
   1d97c:	cmp	r0, r1
   1d980:	bcc	1d994 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   1d984:	ldr	r2, [r4, #44]	; 0x2c
   1d988:	mov	r0, r4
   1d98c:	mov	r1, #0
   1d990:	blx	r2
   1d994:	ldr	r1, [r8, #4]
   1d998:	mov	r0, r4
   1d99c:	blx	sl
   1d9a0:	subs	r9, r9, #1
   1d9a4:	beq	1dac4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   1d9a8:	add	r7, r8, #8
   1d9ac:	mov	r8, #44	; 0x2c
   1d9b0:	b	1d9e0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x200>
   1d9b4:	mov	r1, #32
   1d9b8:	mov	r2, r5
   1d9bc:	bl	1293c <memset@plt>
   1d9c0:	ldr	r0, [r4, #20]
   1d9c4:	add	r0, r0, r5
   1d9c8:	str	r0, [r4, #20]
   1d9cc:	ldr	r1, [r7], #4
   1d9d0:	mov	r0, r4
   1d9d4:	blx	sl
   1d9d8:	cmp	r9, #0
   1d9dc:	beq	1dac4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   1d9e0:	ldr	r0, [r4, #20]
   1d9e4:	sub	r9, r9, #1
   1d9e8:	add	r1, r0, #1
   1d9ec:	str	r1, [r4, #20]
   1d9f0:	strb	r8, [r0]
   1d9f4:	ldrb	r1, [r4, #25]
   1d9f8:	ldr	r0, [r4, #20]
   1d9fc:	cmp	r1, #0
   1da00:	beq	1daa4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   1da04:	add	r1, r0, #1
   1da08:	str	r1, [r4, #20]
   1da0c:	mov	r1, #10
   1da10:	strb	r1, [r0]
   1da14:	ldr	r0, [r4, #20]
   1da18:	ldrb	r2, [r4, #25]
   1da1c:	ldr	r3, [r4, #32]
   1da20:	ldr	r1, [r4, #16]
   1da24:	mla	r6, r3, r2, r0
   1da28:	mul	r5, r3, r2
   1da2c:	cmp	r6, r1
   1da30:	bls	1d9b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   1da34:	cmp	r0, r1
   1da38:	bcc	1da54 <flatcc_json_printer_int32_enum_vector_field@@Base+0x274>
   1da3c:	ldr	r2, [r4, #44]	; 0x2c
   1da40:	mov	r0, r4
   1da44:	mov	r1, #0
   1da48:	blx	r2
   1da4c:	ldr	r1, [r4, #16]
   1da50:	ldr	r0, [r4, #20]
   1da54:	sub	r6, r1, r0
   1da58:	cmp	r6, r5
   1da5c:	bcs	1d9b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   1da60:	mov	r1, #32
   1da64:	mov	r2, r6
   1da68:	bl	1293c <memset@plt>
   1da6c:	ldr	r0, [r4, #20]
   1da70:	ldr	r2, [r4, #44]	; 0x2c
   1da74:	mov	r1, #0
   1da78:	add	r0, r0, r6
   1da7c:	str	r0, [r4, #20]
   1da80:	mov	r0, r4
   1da84:	blx	r2
   1da88:	ldr	r1, [r4, #16]
   1da8c:	ldr	r0, [r4, #20]
   1da90:	sub	r5, r5, r6
   1da94:	sub	r6, r1, r0
   1da98:	cmp	r5, r6
   1da9c:	bhi	1da60 <flatcc_json_printer_int32_enum_vector_field@@Base+0x280>
   1daa0:	b	1d9b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   1daa4:	ldr	r1, [r4, #16]
   1daa8:	cmp	r0, r1
   1daac:	bcc	1d9cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   1dab0:	ldr	r2, [r4, #44]	; 0x2c
   1dab4:	mov	r0, r4
   1dab8:	mov	r1, #0
   1dabc:	blx	r2
   1dac0:	b	1d9cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   1dac4:	ldrb	r1, [r4, #25]
   1dac8:	ldr	r0, [r4, #20]
   1dacc:	cmp	r1, #0
   1dad0:	beq	1db90 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3b0>
   1dad4:	add	r1, r0, #1
   1dad8:	str	r1, [r4, #20]
   1dadc:	mov	r1, #10
   1dae0:	strb	r1, [r0]
   1dae4:	ldr	r0, [r4, #32]
   1dae8:	sub	r2, r0, #1
   1daec:	str	r2, [r4, #32]
   1daf0:	ldrb	r3, [r4, #25]
   1daf4:	ldr	r0, [r4, #20]
   1daf8:	ldr	r1, [r4, #16]
   1dafc:	mla	r7, r2, r3, r0
   1db00:	mul	r5, r2, r3
   1db04:	cmp	r7, r1
   1db08:	bls	1db78 <flatcc_json_printer_int32_enum_vector_field@@Base+0x398>
   1db0c:	cmp	r0, r1
   1db10:	bcc	1db2c <flatcc_json_printer_int32_enum_vector_field@@Base+0x34c>
   1db14:	ldr	r2, [r4, #44]	; 0x2c
   1db18:	mov	r0, r4
   1db1c:	mov	r1, #0
   1db20:	blx	r2
   1db24:	ldr	r1, [r4, #16]
   1db28:	ldr	r0, [r4, #20]
   1db2c:	sub	r6, r1, r0
   1db30:	cmp	r6, r5
   1db34:	bcs	1db78 <flatcc_json_printer_int32_enum_vector_field@@Base+0x398>
   1db38:	mov	r1, #32
   1db3c:	mov	r2, r6
   1db40:	bl	1293c <memset@plt>
   1db44:	ldr	r0, [r4, #20]
   1db48:	ldr	r2, [r4, #44]	; 0x2c
   1db4c:	mov	r1, #0
   1db50:	add	r0, r0, r6
   1db54:	str	r0, [r4, #20]
   1db58:	mov	r0, r4
   1db5c:	blx	r2
   1db60:	ldr	r1, [r4, #16]
   1db64:	ldr	r0, [r4, #20]
   1db68:	sub	r5, r5, r6
   1db6c:	sub	r6, r1, r0
   1db70:	cmp	r5, r6
   1db74:	bhi	1db38 <flatcc_json_printer_int32_enum_vector_field@@Base+0x358>
   1db78:	mov	r1, #32
   1db7c:	mov	r2, r5
   1db80:	bl	1293c <memset@plt>
   1db84:	ldr	r0, [r4, #20]
   1db88:	add	r0, r0, r5
   1db8c:	str	r0, [r4, #20]
   1db90:	add	r1, r0, #1
   1db94:	str	r1, [r4, #20]
   1db98:	mov	r1, #93	; 0x5d
   1db9c:	strb	r1, [r0]
   1dba0:	sub	sp, fp, #28
   1dba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001dba8 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   1dba8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dbac:	add	fp, sp, #28
   1dbb0:	sub	sp, sp, #4
   1dbb4:	mov	r4, r0
   1dbb8:	ldrb	r0, [r0, #27]
   1dbbc:	cmp	r0, #0
   1dbc0:	beq	1dbd4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   1dbc4:	mov	r0, r4
   1dbc8:	sub	sp, fp, #28
   1dbcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dbd0:	b	1ada8 <flatcc_json_printer_int64_vector_field@@Base>
   1dbd4:	mov	r0, #4
   1dbd8:	add	r0, r0, r2, lsl #1
   1dbdc:	ldr	r2, [r1, #8]
   1dbe0:	cmp	r0, r2
   1dbe4:	bge	1dc04 <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   1dbe8:	ldr	r2, [r1, #4]
   1dbec:	add	r0, r2, r0
   1dbf0:	ldrh	r0, [r0]
   1dbf4:	cmp	r0, #0
   1dbf8:	ldrne	r2, [r1]
   1dbfc:	addsne	r8, r2, r0
   1dc00:	bne	1dc0c <flatcc_json_printer_int64_enum_vector_field@@Base+0x64>
   1dc04:	sub	sp, fp, #28
   1dc08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc0c:	ldr	r0, [r1, #16]
   1dc10:	ldr	sl, [fp, #12]
   1dc14:	ldr	r2, [fp, #8]
   1dc18:	add	r7, r0, #1
   1dc1c:	cmp	r0, #0
   1dc20:	str	r7, [r1, #16]
   1dc24:	beq	1dc3c <flatcc_json_printer_int64_enum_vector_field@@Base+0x94>
   1dc28:	ldr	r0, [r4, #20]
   1dc2c:	add	r1, r0, #1
   1dc30:	str	r1, [r4, #20]
   1dc34:	mov	r1, #44	; 0x2c
   1dc38:	strb	r1, [r0]
   1dc3c:	ldr	r0, [r8]
   1dc40:	mov	r1, r3
   1dc44:	ldr	r9, [r8, r0]!
   1dc48:	mov	r0, r4
   1dc4c:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1dc50:	ldr	r1, [r4, #32]
   1dc54:	ldr	r0, [r4, #20]
   1dc58:	cmp	r9, #0
   1dc5c:	add	r1, r1, #1
   1dc60:	str	r1, [r4, #32]
   1dc64:	add	r1, r0, #1
   1dc68:	str	r1, [r4, #20]
   1dc6c:	mov	r1, #91	; 0x5b
   1dc70:	strb	r1, [r0]
   1dc74:	beq	1de90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   1dc78:	ldrb	r1, [r4, #25]
   1dc7c:	ldr	r0, [r4, #20]
   1dc80:	cmp	r1, #0
   1dc84:	beq	1dd40 <flatcc_json_printer_int64_enum_vector_field@@Base+0x198>
   1dc88:	add	r1, r0, #1
   1dc8c:	str	r1, [r4, #20]
   1dc90:	mov	r1, #10
   1dc94:	strb	r1, [r0]
   1dc98:	ldr	r0, [r4, #20]
   1dc9c:	ldrb	r2, [r4, #25]
   1dca0:	ldr	r3, [r4, #32]
   1dca4:	ldr	r1, [r4, #16]
   1dca8:	mla	r7, r3, r2, r0
   1dcac:	mul	r5, r3, r2
   1dcb0:	cmp	r7, r1
   1dcb4:	bls	1dd24 <flatcc_json_printer_int64_enum_vector_field@@Base+0x17c>
   1dcb8:	cmp	r0, r1
   1dcbc:	bcc	1dcd8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x130>
   1dcc0:	ldr	r2, [r4, #44]	; 0x2c
   1dcc4:	mov	r0, r4
   1dcc8:	mov	r1, #0
   1dccc:	blx	r2
   1dcd0:	ldr	r1, [r4, #16]
   1dcd4:	ldr	r0, [r4, #20]
   1dcd8:	sub	r6, r1, r0
   1dcdc:	cmp	r6, r5
   1dce0:	bcs	1dd24 <flatcc_json_printer_int64_enum_vector_field@@Base+0x17c>
   1dce4:	mov	r1, #32
   1dce8:	mov	r2, r6
   1dcec:	bl	1293c <memset@plt>
   1dcf0:	ldr	r0, [r4, #20]
   1dcf4:	ldr	r2, [r4, #44]	; 0x2c
   1dcf8:	mov	r1, #0
   1dcfc:	add	r0, r0, r6
   1dd00:	str	r0, [r4, #20]
   1dd04:	mov	r0, r4
   1dd08:	blx	r2
   1dd0c:	ldr	r1, [r4, #16]
   1dd10:	ldr	r0, [r4, #20]
   1dd14:	sub	r5, r5, r6
   1dd18:	sub	r6, r1, r0
   1dd1c:	cmp	r5, r6
   1dd20:	bhi	1dce4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x13c>
   1dd24:	mov	r1, #32
   1dd28:	mov	r2, r5
   1dd2c:	bl	1293c <memset@plt>
   1dd30:	ldr	r0, [r4, #20]
   1dd34:	add	r0, r0, r5
   1dd38:	str	r0, [r4, #20]
   1dd3c:	b	1dd5c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   1dd40:	ldr	r1, [r4, #16]
   1dd44:	cmp	r0, r1
   1dd48:	bcc	1dd5c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   1dd4c:	ldr	r2, [r4, #44]	; 0x2c
   1dd50:	mov	r0, r4
   1dd54:	mov	r1, #0
   1dd58:	blx	r2
   1dd5c:	ldrd	r2, [r8, #4]
   1dd60:	mov	r0, r4
   1dd64:	blx	sl
   1dd68:	subs	r9, r9, #1
   1dd6c:	beq	1de90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   1dd70:	add	r7, r8, #12
   1dd74:	mov	r8, #44	; 0x2c
   1dd78:	b	1ddac <flatcc_json_printer_int64_enum_vector_field@@Base+0x204>
   1dd7c:	mov	r1, #32
   1dd80:	mov	r2, r5
   1dd84:	bl	1293c <memset@plt>
   1dd88:	ldr	r0, [r4, #20]
   1dd8c:	add	r0, r0, r5
   1dd90:	str	r0, [r4, #20]
   1dd94:	ldrd	r2, [r7]
   1dd98:	mov	r0, r4
   1dd9c:	blx	sl
   1dda0:	add	r7, r7, #8
   1dda4:	cmp	r9, #0
   1dda8:	beq	1de90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   1ddac:	ldr	r0, [r4, #20]
   1ddb0:	sub	r9, r9, #1
   1ddb4:	add	r1, r0, #1
   1ddb8:	str	r1, [r4, #20]
   1ddbc:	strb	r8, [r0]
   1ddc0:	ldrb	r1, [r4, #25]
   1ddc4:	ldr	r0, [r4, #20]
   1ddc8:	cmp	r1, #0
   1ddcc:	beq	1de70 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c8>
   1ddd0:	add	r1, r0, #1
   1ddd4:	str	r1, [r4, #20]
   1ddd8:	mov	r1, #10
   1dddc:	strb	r1, [r0]
   1dde0:	ldr	r0, [r4, #20]
   1dde4:	ldrb	r2, [r4, #25]
   1dde8:	ldr	r3, [r4, #32]
   1ddec:	ldr	r1, [r4, #16]
   1ddf0:	mla	r6, r3, r2, r0
   1ddf4:	mul	r5, r3, r2
   1ddf8:	cmp	r6, r1
   1ddfc:	bls	1dd7c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   1de00:	cmp	r0, r1
   1de04:	bcc	1de20 <flatcc_json_printer_int64_enum_vector_field@@Base+0x278>
   1de08:	ldr	r2, [r4, #44]	; 0x2c
   1de0c:	mov	r0, r4
   1de10:	mov	r1, #0
   1de14:	blx	r2
   1de18:	ldr	r1, [r4, #16]
   1de1c:	ldr	r0, [r4, #20]
   1de20:	sub	r6, r1, r0
   1de24:	cmp	r6, r5
   1de28:	bcs	1dd7c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   1de2c:	mov	r1, #32
   1de30:	mov	r2, r6
   1de34:	bl	1293c <memset@plt>
   1de38:	ldr	r0, [r4, #20]
   1de3c:	ldr	r2, [r4, #44]	; 0x2c
   1de40:	mov	r1, #0
   1de44:	add	r0, r0, r6
   1de48:	str	r0, [r4, #20]
   1de4c:	mov	r0, r4
   1de50:	blx	r2
   1de54:	ldr	r1, [r4, #16]
   1de58:	ldr	r0, [r4, #20]
   1de5c:	sub	r5, r5, r6
   1de60:	sub	r6, r1, r0
   1de64:	cmp	r5, r6
   1de68:	bhi	1de2c <flatcc_json_printer_int64_enum_vector_field@@Base+0x284>
   1de6c:	b	1dd7c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   1de70:	ldr	r1, [r4, #16]
   1de74:	cmp	r0, r1
   1de78:	bcc	1dd94 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   1de7c:	ldr	r2, [r4, #44]	; 0x2c
   1de80:	mov	r0, r4
   1de84:	mov	r1, #0
   1de88:	blx	r2
   1de8c:	b	1dd94 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   1de90:	ldrb	r1, [r4, #25]
   1de94:	ldr	r0, [r4, #20]
   1de98:	cmp	r1, #0
   1de9c:	beq	1df5c <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b4>
   1dea0:	add	r1, r0, #1
   1dea4:	str	r1, [r4, #20]
   1dea8:	mov	r1, #10
   1deac:	strb	r1, [r0]
   1deb0:	ldr	r0, [r4, #32]
   1deb4:	sub	r2, r0, #1
   1deb8:	str	r2, [r4, #32]
   1debc:	ldrb	r3, [r4, #25]
   1dec0:	ldr	r0, [r4, #20]
   1dec4:	ldr	r1, [r4, #16]
   1dec8:	mla	r7, r2, r3, r0
   1decc:	mul	r5, r2, r3
   1ded0:	cmp	r7, r1
   1ded4:	bls	1df44 <flatcc_json_printer_int64_enum_vector_field@@Base+0x39c>
   1ded8:	cmp	r0, r1
   1dedc:	bcc	1def8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x350>
   1dee0:	ldr	r2, [r4, #44]	; 0x2c
   1dee4:	mov	r0, r4
   1dee8:	mov	r1, #0
   1deec:	blx	r2
   1def0:	ldr	r1, [r4, #16]
   1def4:	ldr	r0, [r4, #20]
   1def8:	sub	r6, r1, r0
   1defc:	cmp	r6, r5
   1df00:	bcs	1df44 <flatcc_json_printer_int64_enum_vector_field@@Base+0x39c>
   1df04:	mov	r1, #32
   1df08:	mov	r2, r6
   1df0c:	bl	1293c <memset@plt>
   1df10:	ldr	r0, [r4, #20]
   1df14:	ldr	r2, [r4, #44]	; 0x2c
   1df18:	mov	r1, #0
   1df1c:	add	r0, r0, r6
   1df20:	str	r0, [r4, #20]
   1df24:	mov	r0, r4
   1df28:	blx	r2
   1df2c:	ldr	r1, [r4, #16]
   1df30:	ldr	r0, [r4, #20]
   1df34:	sub	r5, r5, r6
   1df38:	sub	r6, r1, r0
   1df3c:	cmp	r5, r6
   1df40:	bhi	1df04 <flatcc_json_printer_int64_enum_vector_field@@Base+0x35c>
   1df44:	mov	r1, #32
   1df48:	mov	r2, r5
   1df4c:	bl	1293c <memset@plt>
   1df50:	ldr	r0, [r4, #20]
   1df54:	add	r0, r0, r5
   1df58:	str	r0, [r4, #20]
   1df5c:	add	r1, r0, #1
   1df60:	str	r1, [r4, #20]
   1df64:	mov	r1, #93	; 0x5d
   1df68:	strb	r1, [r0]
   1df6c:	sub	sp, fp, #28
   1df70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001df74 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   1df74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df78:	add	fp, sp, #28
   1df7c:	sub	sp, sp, #4
   1df80:	mov	r4, r0
   1df84:	ldrb	r0, [r0, #27]
   1df88:	cmp	r0, #0
   1df8c:	beq	1dfa0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   1df90:	mov	r0, r4
   1df94:	sub	sp, fp, #28
   1df98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df9c:	b	1b1ac <flatcc_json_printer_bool_vector_field@@Base>
   1dfa0:	mov	r0, #4
   1dfa4:	add	r0, r0, r2, lsl #1
   1dfa8:	ldr	r2, [r1, #8]
   1dfac:	cmp	r0, r2
   1dfb0:	bge	1dfd0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   1dfb4:	ldr	r2, [r1, #4]
   1dfb8:	add	r0, r2, r0
   1dfbc:	ldrh	r0, [r0]
   1dfc0:	cmp	r0, #0
   1dfc4:	ldrne	r2, [r1]
   1dfc8:	addsne	r8, r2, r0
   1dfcc:	bne	1dfd8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x64>
   1dfd0:	sub	sp, fp, #28
   1dfd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dfd8:	ldr	r0, [r1, #16]
   1dfdc:	ldr	sl, [fp, #12]
   1dfe0:	ldr	r2, [fp, #8]
   1dfe4:	add	r7, r0, #1
   1dfe8:	cmp	r0, #0
   1dfec:	str	r7, [r1, #16]
   1dff0:	beq	1e008 <flatcc_json_printer_bool_enum_vector_field@@Base+0x94>
   1dff4:	ldr	r0, [r4, #20]
   1dff8:	add	r1, r0, #1
   1dffc:	str	r1, [r4, #20]
   1e000:	mov	r1, #44	; 0x2c
   1e004:	strb	r1, [r0]
   1e008:	ldr	r0, [r8]
   1e00c:	mov	r1, r3
   1e010:	ldr	r9, [r8, r0]!
   1e014:	mov	r0, r4
   1e018:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1e01c:	ldr	r1, [r4, #32]
   1e020:	ldr	r0, [r4, #20]
   1e024:	cmp	r9, #0
   1e028:	add	r1, r1, #1
   1e02c:	str	r1, [r4, #32]
   1e030:	add	r1, r0, #1
   1e034:	str	r1, [r4, #20]
   1e038:	mov	r1, #91	; 0x5b
   1e03c:	strb	r1, [r0]
   1e040:	beq	1e258 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   1e044:	ldrb	r1, [r4, #25]
   1e048:	ldr	r0, [r4, #20]
   1e04c:	cmp	r1, #0
   1e050:	beq	1e10c <flatcc_json_printer_bool_enum_vector_field@@Base+0x198>
   1e054:	add	r1, r0, #1
   1e058:	str	r1, [r4, #20]
   1e05c:	mov	r1, #10
   1e060:	strb	r1, [r0]
   1e064:	ldr	r0, [r4, #20]
   1e068:	ldrb	r2, [r4, #25]
   1e06c:	ldr	r3, [r4, #32]
   1e070:	ldr	r1, [r4, #16]
   1e074:	mla	r7, r3, r2, r0
   1e078:	mul	r5, r3, r2
   1e07c:	cmp	r7, r1
   1e080:	bls	1e0f0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x17c>
   1e084:	cmp	r0, r1
   1e088:	bcc	1e0a4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x130>
   1e08c:	ldr	r2, [r4, #44]	; 0x2c
   1e090:	mov	r0, r4
   1e094:	mov	r1, #0
   1e098:	blx	r2
   1e09c:	ldr	r1, [r4, #16]
   1e0a0:	ldr	r0, [r4, #20]
   1e0a4:	sub	r6, r1, r0
   1e0a8:	cmp	r6, r5
   1e0ac:	bcs	1e0f0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x17c>
   1e0b0:	mov	r1, #32
   1e0b4:	mov	r2, r6
   1e0b8:	bl	1293c <memset@plt>
   1e0bc:	ldr	r0, [r4, #20]
   1e0c0:	ldr	r2, [r4, #44]	; 0x2c
   1e0c4:	mov	r1, #0
   1e0c8:	add	r0, r0, r6
   1e0cc:	str	r0, [r4, #20]
   1e0d0:	mov	r0, r4
   1e0d4:	blx	r2
   1e0d8:	ldr	r1, [r4, #16]
   1e0dc:	ldr	r0, [r4, #20]
   1e0e0:	sub	r5, r5, r6
   1e0e4:	sub	r6, r1, r0
   1e0e8:	cmp	r5, r6
   1e0ec:	bhi	1e0b0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x13c>
   1e0f0:	mov	r1, #32
   1e0f4:	mov	r2, r5
   1e0f8:	bl	1293c <memset@plt>
   1e0fc:	ldr	r0, [r4, #20]
   1e100:	add	r0, r0, r5
   1e104:	str	r0, [r4, #20]
   1e108:	b	1e128 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b4>
   1e10c:	ldr	r1, [r4, #16]
   1e110:	cmp	r0, r1
   1e114:	bcc	1e128 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b4>
   1e118:	ldr	r2, [r4, #44]	; 0x2c
   1e11c:	mov	r0, r4
   1e120:	mov	r1, #0
   1e124:	blx	r2
   1e128:	ldrb	r1, [r8, #4]
   1e12c:	mov	r0, r4
   1e130:	blx	sl
   1e134:	subs	r9, r9, #1
   1e138:	beq	1e258 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   1e13c:	add	r7, r8, #5
   1e140:	mov	r8, #44	; 0x2c
   1e144:	b	1e174 <flatcc_json_printer_bool_enum_vector_field@@Base+0x200>
   1e148:	mov	r1, #32
   1e14c:	mov	r2, r5
   1e150:	bl	1293c <memset@plt>
   1e154:	ldr	r0, [r4, #20]
   1e158:	add	r0, r0, r5
   1e15c:	str	r0, [r4, #20]
   1e160:	ldrb	r1, [r7], #1
   1e164:	mov	r0, r4
   1e168:	blx	sl
   1e16c:	cmp	r9, #0
   1e170:	beq	1e258 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   1e174:	ldr	r0, [r4, #20]
   1e178:	sub	r9, r9, #1
   1e17c:	add	r1, r0, #1
   1e180:	str	r1, [r4, #20]
   1e184:	strb	r8, [r0]
   1e188:	ldrb	r1, [r4, #25]
   1e18c:	ldr	r0, [r4, #20]
   1e190:	cmp	r1, #0
   1e194:	beq	1e238 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   1e198:	add	r1, r0, #1
   1e19c:	str	r1, [r4, #20]
   1e1a0:	mov	r1, #10
   1e1a4:	strb	r1, [r0]
   1e1a8:	ldr	r0, [r4, #20]
   1e1ac:	ldrb	r2, [r4, #25]
   1e1b0:	ldr	r3, [r4, #32]
   1e1b4:	ldr	r1, [r4, #16]
   1e1b8:	mla	r6, r3, r2, r0
   1e1bc:	mul	r5, r3, r2
   1e1c0:	cmp	r6, r1
   1e1c4:	bls	1e148 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   1e1c8:	cmp	r0, r1
   1e1cc:	bcc	1e1e8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x274>
   1e1d0:	ldr	r2, [r4, #44]	; 0x2c
   1e1d4:	mov	r0, r4
   1e1d8:	mov	r1, #0
   1e1dc:	blx	r2
   1e1e0:	ldr	r1, [r4, #16]
   1e1e4:	ldr	r0, [r4, #20]
   1e1e8:	sub	r6, r1, r0
   1e1ec:	cmp	r6, r5
   1e1f0:	bcs	1e148 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   1e1f4:	mov	r1, #32
   1e1f8:	mov	r2, r6
   1e1fc:	bl	1293c <memset@plt>
   1e200:	ldr	r0, [r4, #20]
   1e204:	ldr	r2, [r4, #44]	; 0x2c
   1e208:	mov	r1, #0
   1e20c:	add	r0, r0, r6
   1e210:	str	r0, [r4, #20]
   1e214:	mov	r0, r4
   1e218:	blx	r2
   1e21c:	ldr	r1, [r4, #16]
   1e220:	ldr	r0, [r4, #20]
   1e224:	sub	r5, r5, r6
   1e228:	sub	r6, r1, r0
   1e22c:	cmp	r5, r6
   1e230:	bhi	1e1f4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x280>
   1e234:	b	1e148 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   1e238:	ldr	r1, [r4, #16]
   1e23c:	cmp	r0, r1
   1e240:	bcc	1e160 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   1e244:	ldr	r2, [r4, #44]	; 0x2c
   1e248:	mov	r0, r4
   1e24c:	mov	r1, #0
   1e250:	blx	r2
   1e254:	b	1e160 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   1e258:	ldrb	r1, [r4, #25]
   1e25c:	ldr	r0, [r4, #20]
   1e260:	cmp	r1, #0
   1e264:	beq	1e324 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3b0>
   1e268:	add	r1, r0, #1
   1e26c:	str	r1, [r4, #20]
   1e270:	mov	r1, #10
   1e274:	strb	r1, [r0]
   1e278:	ldr	r0, [r4, #32]
   1e27c:	sub	r2, r0, #1
   1e280:	str	r2, [r4, #32]
   1e284:	ldrb	r3, [r4, #25]
   1e288:	ldr	r0, [r4, #20]
   1e28c:	ldr	r1, [r4, #16]
   1e290:	mla	r7, r2, r3, r0
   1e294:	mul	r5, r2, r3
   1e298:	cmp	r7, r1
   1e29c:	bls	1e30c <flatcc_json_printer_bool_enum_vector_field@@Base+0x398>
   1e2a0:	cmp	r0, r1
   1e2a4:	bcc	1e2c0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x34c>
   1e2a8:	ldr	r2, [r4, #44]	; 0x2c
   1e2ac:	mov	r0, r4
   1e2b0:	mov	r1, #0
   1e2b4:	blx	r2
   1e2b8:	ldr	r1, [r4, #16]
   1e2bc:	ldr	r0, [r4, #20]
   1e2c0:	sub	r6, r1, r0
   1e2c4:	cmp	r6, r5
   1e2c8:	bcs	1e30c <flatcc_json_printer_bool_enum_vector_field@@Base+0x398>
   1e2cc:	mov	r1, #32
   1e2d0:	mov	r2, r6
   1e2d4:	bl	1293c <memset@plt>
   1e2d8:	ldr	r0, [r4, #20]
   1e2dc:	ldr	r2, [r4, #44]	; 0x2c
   1e2e0:	mov	r1, #0
   1e2e4:	add	r0, r0, r6
   1e2e8:	str	r0, [r4, #20]
   1e2ec:	mov	r0, r4
   1e2f0:	blx	r2
   1e2f4:	ldr	r1, [r4, #16]
   1e2f8:	ldr	r0, [r4, #20]
   1e2fc:	sub	r5, r5, r6
   1e300:	sub	r6, r1, r0
   1e304:	cmp	r5, r6
   1e308:	bhi	1e2cc <flatcc_json_printer_bool_enum_vector_field@@Base+0x358>
   1e30c:	mov	r1, #32
   1e310:	mov	r2, r5
   1e314:	bl	1293c <memset@plt>
   1e318:	ldr	r0, [r4, #20]
   1e31c:	add	r0, r0, r5
   1e320:	str	r0, [r4, #20]
   1e324:	add	r1, r0, #1
   1e328:	str	r1, [r4, #20]
   1e32c:	mov	r1, #93	; 0x5d
   1e330:	strb	r1, [r0]
   1e334:	sub	sp, fp, #28
   1e338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e33c <flatcc_json_printer_struct_vector_field@@Base>:
   1e33c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e340:	add	fp, sp, #28
   1e344:	sub	sp, sp, #4
   1e348:	mov	r4, r0
   1e34c:	mov	r0, #4
   1e350:	add	r0, r0, r2, lsl #1
   1e354:	ldr	r2, [r1, #8]
   1e358:	cmp	r0, r2
   1e35c:	bge	1e37c <flatcc_json_printer_struct_vector_field@@Base+0x40>
   1e360:	ldr	r2, [r1, #4]
   1e364:	add	r0, r2, r0
   1e368:	ldrh	r0, [r0]
   1e36c:	cmp	r0, #0
   1e370:	ldrne	r2, [r1]
   1e374:	addsne	r6, r2, r0
   1e378:	bne	1e384 <flatcc_json_printer_struct_vector_field@@Base+0x48>
   1e37c:	sub	sp, fp, #28
   1e380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e384:	ldr	r0, [r1, #16]
   1e388:	ldr	r2, [fp, #8]
   1e38c:	add	r7, r0, #1
   1e390:	cmp	r0, #0
   1e394:	str	r7, [r1, #16]
   1e398:	beq	1e3b0 <flatcc_json_printer_struct_vector_field@@Base+0x74>
   1e39c:	ldr	r0, [r4, #20]
   1e3a0:	add	r1, r0, #1
   1e3a4:	str	r1, [r4, #20]
   1e3a8:	mov	r1, #44	; 0x2c
   1e3ac:	strb	r1, [r0]
   1e3b0:	ldr	r0, [r6]
   1e3b4:	mov	r1, r3
   1e3b8:	ldr	r5, [r6, r0]!
   1e3bc:	mov	r0, r4
   1e3c0:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1e3c4:	ldr	r1, [r4, #32]
   1e3c8:	ldr	r0, [r4, #20]
   1e3cc:	cmp	r5, #0
   1e3d0:	add	r1, r1, #1
   1e3d4:	str	r1, [r4, #32]
   1e3d8:	add	r1, r0, #1
   1e3dc:	str	r1, [r4, #20]
   1e3e0:	mov	r1, #91	; 0x5b
   1e3e4:	strb	r1, [r0]
   1e3e8:	beq	1e800 <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   1e3ec:	ldrb	r1, [r4, #25]
   1e3f0:	ldr	r0, [r4, #20]
   1e3f4:	add	r9, r6, #4
   1e3f8:	cmp	r1, #0
   1e3fc:	beq	1e4b8 <flatcc_json_printer_struct_vector_field@@Base+0x17c>
   1e400:	add	r1, r0, #1
   1e404:	str	r1, [r4, #20]
   1e408:	mov	r1, #10
   1e40c:	strb	r1, [r0]
   1e410:	ldr	r0, [r4, #20]
   1e414:	ldrb	r2, [r4, #25]
   1e418:	ldr	r3, [r4, #32]
   1e41c:	ldr	r1, [r4, #16]
   1e420:	mla	r7, r3, r2, r0
   1e424:	mul	r6, r3, r2
   1e428:	cmp	r7, r1
   1e42c:	bls	1e49c <flatcc_json_printer_struct_vector_field@@Base+0x160>
   1e430:	cmp	r0, r1
   1e434:	bcc	1e450 <flatcc_json_printer_struct_vector_field@@Base+0x114>
   1e438:	ldr	r2, [r4, #44]	; 0x2c
   1e43c:	mov	r0, r4
   1e440:	mov	r1, #0
   1e444:	blx	r2
   1e448:	ldr	r1, [r4, #16]
   1e44c:	ldr	r0, [r4, #20]
   1e450:	sub	r7, r1, r0
   1e454:	cmp	r7, r6
   1e458:	bcs	1e49c <flatcc_json_printer_struct_vector_field@@Base+0x160>
   1e45c:	mov	r1, #32
   1e460:	mov	r2, r7
   1e464:	bl	1293c <memset@plt>
   1e468:	ldr	r0, [r4, #20]
   1e46c:	ldr	r2, [r4, #44]	; 0x2c
   1e470:	mov	r1, #0
   1e474:	add	r0, r0, r7
   1e478:	str	r0, [r4, #20]
   1e47c:	mov	r0, r4
   1e480:	blx	r2
   1e484:	ldr	r1, [r4, #16]
   1e488:	ldr	r0, [r4, #20]
   1e48c:	sub	r6, r6, r7
   1e490:	sub	r7, r1, r0
   1e494:	cmp	r6, r7
   1e498:	bhi	1e45c <flatcc_json_printer_struct_vector_field@@Base+0x120>
   1e49c:	mov	r1, #32
   1e4a0:	mov	r2, r6
   1e4a4:	bl	1293c <memset@plt>
   1e4a8:	ldr	r0, [r4, #20]
   1e4ac:	add	r0, r0, r6
   1e4b0:	str	r0, [r4, #20]
   1e4b4:	b	1e4d8 <flatcc_json_printer_struct_vector_field@@Base+0x19c>
   1e4b8:	ldr	r1, [r4, #16]
   1e4bc:	cmp	r0, r1
   1e4c0:	bcc	1e4d8 <flatcc_json_printer_struct_vector_field@@Base+0x19c>
   1e4c4:	ldr	r2, [r4, #44]	; 0x2c
   1e4c8:	mov	r0, r4
   1e4cc:	mov	r1, #0
   1e4d0:	blx	r2
   1e4d4:	ldr	r0, [r4, #20]
   1e4d8:	add	r1, r0, #1
   1e4dc:	ldr	r2, [fp, #16]
   1e4e0:	str	r1, [r4, #20]
   1e4e4:	ldr	r1, [r4, #32]
   1e4e8:	add	r1, r1, #1
   1e4ec:	str	r1, [r4, #32]
   1e4f0:	mov	r1, #123	; 0x7b
   1e4f4:	strb	r1, [r0]
   1e4f8:	mov	r0, r4
   1e4fc:	mov	r1, r9
   1e500:	blx	r2
   1e504:	ldrb	r1, [r4, #25]
   1e508:	ldr	r0, [r4, #20]
   1e50c:	cmp	r1, #0
   1e510:	beq	1e5d0 <flatcc_json_printer_struct_vector_field@@Base+0x294>
   1e514:	add	r1, r0, #1
   1e518:	str	r1, [r4, #20]
   1e51c:	mov	r1, #10
   1e520:	strb	r1, [r0]
   1e524:	ldr	r0, [r4, #32]
   1e528:	sub	r2, r0, #1
   1e52c:	str	r2, [r4, #32]
   1e530:	ldrb	r3, [r4, #25]
   1e534:	ldr	r0, [r4, #20]
   1e538:	ldr	r1, [r4, #16]
   1e53c:	mla	r7, r2, r3, r0
   1e540:	mul	r6, r2, r3
   1e544:	cmp	r7, r1
   1e548:	bls	1e5b8 <flatcc_json_printer_struct_vector_field@@Base+0x27c>
   1e54c:	cmp	r0, r1
   1e550:	bcc	1e56c <flatcc_json_printer_struct_vector_field@@Base+0x230>
   1e554:	ldr	r2, [r4, #44]	; 0x2c
   1e558:	mov	r0, r4
   1e55c:	mov	r1, #0
   1e560:	blx	r2
   1e564:	ldr	r1, [r4, #16]
   1e568:	ldr	r0, [r4, #20]
   1e56c:	sub	r7, r1, r0
   1e570:	cmp	r7, r6
   1e574:	bcs	1e5b8 <flatcc_json_printer_struct_vector_field@@Base+0x27c>
   1e578:	mov	r1, #32
   1e57c:	mov	r2, r7
   1e580:	bl	1293c <memset@plt>
   1e584:	ldr	r0, [r4, #20]
   1e588:	ldr	r2, [r4, #44]	; 0x2c
   1e58c:	mov	r1, #0
   1e590:	add	r0, r0, r7
   1e594:	str	r0, [r4, #20]
   1e598:	mov	r0, r4
   1e59c:	blx	r2
   1e5a0:	ldr	r1, [r4, #16]
   1e5a4:	ldr	r0, [r4, #20]
   1e5a8:	sub	r6, r6, r7
   1e5ac:	sub	r7, r1, r0
   1e5b0:	cmp	r6, r7
   1e5b4:	bhi	1e578 <flatcc_json_printer_struct_vector_field@@Base+0x23c>
   1e5b8:	mov	r1, #32
   1e5bc:	mov	r2, r6
   1e5c0:	bl	1293c <memset@plt>
   1e5c4:	ldr	r0, [r4, #20]
   1e5c8:	add	r0, r0, r6
   1e5cc:	str	r0, [r4, #20]
   1e5d0:	add	r1, r0, #1
   1e5d4:	mov	sl, #125	; 0x7d
   1e5d8:	subs	r5, r5, #1
   1e5dc:	str	r1, [r4, #20]
   1e5e0:	strb	sl, [r0]
   1e5e4:	beq	1e800 <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   1e5e8:	mov	r8, #10
   1e5ec:	b	1e61c <flatcc_json_printer_struct_vector_field@@Base+0x2e0>
   1e5f0:	mov	r1, #32
   1e5f4:	mov	r2, r6
   1e5f8:	bl	1293c <memset@plt>
   1e5fc:	ldr	r0, [r4, #20]
   1e600:	add	r0, r0, r6
   1e604:	str	r0, [r4, #20]
   1e608:	add	r1, r0, #1
   1e60c:	cmp	r5, #0
   1e610:	str	r1, [r4, #20]
   1e614:	strb	sl, [r0]
   1e618:	beq	1e800 <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   1e61c:	ldr	r0, [r4, #20]
   1e620:	add	r1, r0, #1
   1e624:	str	r1, [r4, #20]
   1e628:	mov	r1, #44	; 0x2c
   1e62c:	strb	r1, [r0]
   1e630:	ldr	r0, [fp, #12]
   1e634:	ldrb	r1, [r4, #25]
   1e638:	add	r9, r9, r0
   1e63c:	ldr	r0, [r4, #20]
   1e640:	cmp	r1, #0
   1e644:	beq	1e6fc <flatcc_json_printer_struct_vector_field@@Base+0x3c0>
   1e648:	add	r1, r0, #1
   1e64c:	str	r1, [r4, #20]
   1e650:	strb	r8, [r0]
   1e654:	ldr	r0, [r4, #20]
   1e658:	ldrb	r2, [r4, #25]
   1e65c:	ldr	r3, [r4, #32]
   1e660:	ldr	r1, [r4, #16]
   1e664:	mla	r7, r3, r2, r0
   1e668:	mul	r6, r3, r2
   1e66c:	cmp	r7, r1
   1e670:	bls	1e6e0 <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   1e674:	cmp	r0, r1
   1e678:	bcc	1e694 <flatcc_json_printer_struct_vector_field@@Base+0x358>
   1e67c:	ldr	r2, [r4, #44]	; 0x2c
   1e680:	mov	r0, r4
   1e684:	mov	r1, #0
   1e688:	blx	r2
   1e68c:	ldr	r1, [r4, #16]
   1e690:	ldr	r0, [r4, #20]
   1e694:	sub	r7, r1, r0
   1e698:	cmp	r7, r6
   1e69c:	bcs	1e6e0 <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   1e6a0:	mov	r1, #32
   1e6a4:	mov	r2, r7
   1e6a8:	bl	1293c <memset@plt>
   1e6ac:	ldr	r0, [r4, #20]
   1e6b0:	ldr	r2, [r4, #44]	; 0x2c
   1e6b4:	mov	r1, #0
   1e6b8:	add	r0, r0, r7
   1e6bc:	str	r0, [r4, #20]
   1e6c0:	mov	r0, r4
   1e6c4:	blx	r2
   1e6c8:	ldr	r1, [r4, #16]
   1e6cc:	ldr	r0, [r4, #20]
   1e6d0:	sub	r6, r6, r7
   1e6d4:	sub	r7, r1, r0
   1e6d8:	cmp	r6, r7
   1e6dc:	bhi	1e6a0 <flatcc_json_printer_struct_vector_field@@Base+0x364>
   1e6e0:	mov	r1, #32
   1e6e4:	mov	r2, r6
   1e6e8:	bl	1293c <memset@plt>
   1e6ec:	ldr	r0, [r4, #20]
   1e6f0:	add	r0, r0, r6
   1e6f4:	str	r0, [r4, #20]
   1e6f8:	b	1e71c <flatcc_json_printer_struct_vector_field@@Base+0x3e0>
   1e6fc:	ldr	r1, [r4, #16]
   1e700:	cmp	r0, r1
   1e704:	bcc	1e71c <flatcc_json_printer_struct_vector_field@@Base+0x3e0>
   1e708:	ldr	r2, [r4, #44]	; 0x2c
   1e70c:	mov	r0, r4
   1e710:	mov	r1, #0
   1e714:	blx	r2
   1e718:	ldr	r0, [r4, #20]
   1e71c:	add	r1, r0, #1
   1e720:	ldr	r2, [fp, #16]
   1e724:	sub	r5, r5, #1
   1e728:	str	r1, [r4, #20]
   1e72c:	ldr	r1, [r4, #32]
   1e730:	add	r1, r1, #1
   1e734:	str	r1, [r4, #32]
   1e738:	mov	r1, #123	; 0x7b
   1e73c:	strb	r1, [r0]
   1e740:	mov	r0, r4
   1e744:	mov	r1, r9
   1e748:	blx	r2
   1e74c:	ldrb	r1, [r4, #25]
   1e750:	ldr	r0, [r4, #20]
   1e754:	cmp	r1, #0
   1e758:	beq	1e608 <flatcc_json_printer_struct_vector_field@@Base+0x2cc>
   1e75c:	add	r1, r0, #1
   1e760:	str	r1, [r4, #20]
   1e764:	strb	r8, [r0]
   1e768:	ldr	r0, [r4, #32]
   1e76c:	sub	r2, r0, #1
   1e770:	str	r2, [r4, #32]
   1e774:	ldrb	r3, [r4, #25]
   1e778:	ldr	r0, [r4, #20]
   1e77c:	ldr	r1, [r4, #16]
   1e780:	mla	r7, r2, r3, r0
   1e784:	mul	r6, r2, r3
   1e788:	cmp	r7, r1
   1e78c:	bls	1e5f0 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   1e790:	cmp	r0, r1
   1e794:	bcc	1e7b0 <flatcc_json_printer_struct_vector_field@@Base+0x474>
   1e798:	ldr	r2, [r4, #44]	; 0x2c
   1e79c:	mov	r0, r4
   1e7a0:	mov	r1, #0
   1e7a4:	blx	r2
   1e7a8:	ldr	r1, [r4, #16]
   1e7ac:	ldr	r0, [r4, #20]
   1e7b0:	sub	r7, r1, r0
   1e7b4:	cmp	r7, r6
   1e7b8:	bcs	1e5f0 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   1e7bc:	mov	r1, #32
   1e7c0:	mov	r2, r7
   1e7c4:	bl	1293c <memset@plt>
   1e7c8:	ldr	r0, [r4, #20]
   1e7cc:	ldr	r2, [r4, #44]	; 0x2c
   1e7d0:	mov	r1, #0
   1e7d4:	add	r0, r0, r7
   1e7d8:	str	r0, [r4, #20]
   1e7dc:	mov	r0, r4
   1e7e0:	blx	r2
   1e7e4:	ldr	r1, [r4, #16]
   1e7e8:	ldr	r0, [r4, #20]
   1e7ec:	sub	r6, r6, r7
   1e7f0:	sub	r7, r1, r0
   1e7f4:	cmp	r6, r7
   1e7f8:	bhi	1e7bc <flatcc_json_printer_struct_vector_field@@Base+0x480>
   1e7fc:	b	1e5f0 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   1e800:	ldrb	r1, [r4, #25]
   1e804:	ldr	r0, [r4, #20]
   1e808:	cmp	r1, #0
   1e80c:	beq	1e8cc <flatcc_json_printer_struct_vector_field@@Base+0x590>
   1e810:	add	r1, r0, #1
   1e814:	str	r1, [r4, #20]
   1e818:	mov	r1, #10
   1e81c:	strb	r1, [r0]
   1e820:	ldr	r0, [r4, #32]
   1e824:	sub	r2, r0, #1
   1e828:	str	r2, [r4, #32]
   1e82c:	ldrb	r3, [r4, #25]
   1e830:	ldr	r0, [r4, #20]
   1e834:	ldr	r1, [r4, #16]
   1e838:	mla	r7, r2, r3, r0
   1e83c:	mul	r5, r2, r3
   1e840:	cmp	r7, r1
   1e844:	bls	1e8b4 <flatcc_json_printer_struct_vector_field@@Base+0x578>
   1e848:	cmp	r0, r1
   1e84c:	bcc	1e868 <flatcc_json_printer_struct_vector_field@@Base+0x52c>
   1e850:	ldr	r2, [r4, #44]	; 0x2c
   1e854:	mov	r0, r4
   1e858:	mov	r1, #0
   1e85c:	blx	r2
   1e860:	ldr	r1, [r4, #16]
   1e864:	ldr	r0, [r4, #20]
   1e868:	sub	r6, r1, r0
   1e86c:	cmp	r6, r5
   1e870:	bcs	1e8b4 <flatcc_json_printer_struct_vector_field@@Base+0x578>
   1e874:	mov	r1, #32
   1e878:	mov	r2, r6
   1e87c:	bl	1293c <memset@plt>
   1e880:	ldr	r0, [r4, #20]
   1e884:	ldr	r2, [r4, #44]	; 0x2c
   1e888:	mov	r1, #0
   1e88c:	add	r0, r0, r6
   1e890:	str	r0, [r4, #20]
   1e894:	mov	r0, r4
   1e898:	blx	r2
   1e89c:	ldr	r1, [r4, #16]
   1e8a0:	ldr	r0, [r4, #20]
   1e8a4:	sub	r5, r5, r6
   1e8a8:	sub	r6, r1, r0
   1e8ac:	cmp	r5, r6
   1e8b0:	bhi	1e874 <flatcc_json_printer_struct_vector_field@@Base+0x538>
   1e8b4:	mov	r1, #32
   1e8b8:	mov	r2, r5
   1e8bc:	bl	1293c <memset@plt>
   1e8c0:	ldr	r0, [r4, #20]
   1e8c4:	add	r0, r0, r5
   1e8c8:	str	r0, [r4, #20]
   1e8cc:	add	r1, r0, #1
   1e8d0:	str	r1, [r4, #20]
   1e8d4:	mov	r1, #93	; 0x5d
   1e8d8:	strb	r1, [r0]
   1e8dc:	sub	sp, fp, #28
   1e8e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e8e4 <flatcc_json_printer_string_vector_field@@Base>:
   1e8e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e8e8:	add	fp, sp, #28
   1e8ec:	sub	sp, sp, #4
   1e8f0:	mov	r4, r0
   1e8f4:	mov	r0, #4
   1e8f8:	add	r0, r0, r2, lsl #1
   1e8fc:	ldr	r2, [r1, #8]
   1e900:	cmp	r0, r2
   1e904:	bge	1e924 <flatcc_json_printer_string_vector_field@@Base+0x40>
   1e908:	ldr	r2, [r1, #4]
   1e90c:	add	r0, r2, r0
   1e910:	ldrh	r0, [r0]
   1e914:	cmp	r0, #0
   1e918:	ldrne	r2, [r1]
   1e91c:	addsne	r5, r2, r0
   1e920:	bne	1e92c <flatcc_json_printer_string_vector_field@@Base+0x48>
   1e924:	sub	sp, fp, #28
   1e928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e92c:	ldr	r0, [r1, #16]
   1e930:	ldr	r2, [fp, #8]
   1e934:	add	r7, r0, #1
   1e938:	cmp	r0, #0
   1e93c:	str	r7, [r1, #16]
   1e940:	beq	1e958 <flatcc_json_printer_string_vector_field@@Base+0x74>
   1e944:	ldr	r0, [r4, #20]
   1e948:	add	r1, r0, #1
   1e94c:	str	r1, [r4, #20]
   1e950:	mov	r1, #44	; 0x2c
   1e954:	strb	r1, [r0]
   1e958:	ldr	r0, [r5]
   1e95c:	mov	r1, r3
   1e960:	ldr	r8, [r5, r0]!
   1e964:	mov	r0, r4
   1e968:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1e96c:	ldr	r1, [r4, #32]
   1e970:	ldr	r0, [r4, #20]
   1e974:	cmp	r8, #0
   1e978:	add	r1, r1, #1
   1e97c:	str	r1, [r4, #32]
   1e980:	add	r1, r0, #1
   1e984:	str	r1, [r4, #20]
   1e988:	mov	r1, #91	; 0x5b
   1e98c:	strb	r1, [r0]
   1e990:	beq	1ebc4 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   1e994:	ldrb	r1, [r4, #25]
   1e998:	ldr	r0, [r4, #20]
   1e99c:	add	r9, r5, #4
   1e9a0:	cmp	r1, #0
   1e9a4:	beq	1ea60 <flatcc_json_printer_string_vector_field@@Base+0x17c>
   1e9a8:	add	r1, r0, #1
   1e9ac:	str	r1, [r4, #20]
   1e9b0:	mov	r1, #10
   1e9b4:	strb	r1, [r0]
   1e9b8:	ldr	r0, [r4, #20]
   1e9bc:	ldrb	r2, [r4, #25]
   1e9c0:	ldr	r3, [r4, #32]
   1e9c4:	ldr	r1, [r4, #16]
   1e9c8:	mla	r7, r3, r2, r0
   1e9cc:	mul	r5, r3, r2
   1e9d0:	cmp	r7, r1
   1e9d4:	bls	1ea44 <flatcc_json_printer_string_vector_field@@Base+0x160>
   1e9d8:	cmp	r0, r1
   1e9dc:	bcc	1e9f8 <flatcc_json_printer_string_vector_field@@Base+0x114>
   1e9e0:	ldr	r2, [r4, #44]	; 0x2c
   1e9e4:	mov	r0, r4
   1e9e8:	mov	r1, #0
   1e9ec:	blx	r2
   1e9f0:	ldr	r1, [r4, #16]
   1e9f4:	ldr	r0, [r4, #20]
   1e9f8:	sub	r6, r1, r0
   1e9fc:	cmp	r6, r5
   1ea00:	bcs	1ea44 <flatcc_json_printer_string_vector_field@@Base+0x160>
   1ea04:	mov	r1, #32
   1ea08:	mov	r2, r6
   1ea0c:	bl	1293c <memset@plt>
   1ea10:	ldr	r0, [r4, #20]
   1ea14:	ldr	r2, [r4, #44]	; 0x2c
   1ea18:	mov	r1, #0
   1ea1c:	add	r0, r0, r6
   1ea20:	str	r0, [r4, #20]
   1ea24:	mov	r0, r4
   1ea28:	blx	r2
   1ea2c:	ldr	r1, [r4, #16]
   1ea30:	ldr	r0, [r4, #20]
   1ea34:	sub	r5, r5, r6
   1ea38:	sub	r6, r1, r0
   1ea3c:	cmp	r5, r6
   1ea40:	bhi	1ea04 <flatcc_json_printer_string_vector_field@@Base+0x120>
   1ea44:	mov	r1, #32
   1ea48:	mov	r2, r5
   1ea4c:	bl	1293c <memset@plt>
   1ea50:	ldr	r0, [r4, #20]
   1ea54:	add	r0, r0, r5
   1ea58:	str	r0, [r4, #20]
   1ea5c:	b	1ea7c <flatcc_json_printer_string_vector_field@@Base+0x198>
   1ea60:	ldr	r1, [r4, #16]
   1ea64:	cmp	r0, r1
   1ea68:	bcc	1ea7c <flatcc_json_printer_string_vector_field@@Base+0x198>
   1ea6c:	ldr	r2, [r4, #44]	; 0x2c
   1ea70:	mov	r0, r4
   1ea74:	mov	r1, #0
   1ea78:	blx	r2
   1ea7c:	ldr	r0, [r9]
   1ea80:	mov	r1, r9
   1ea84:	ldr	r2, [r1, r0]!
   1ea88:	mov	r0, r4
   1ea8c:	add	r1, r1, #4
   1ea90:	bl	150f0 <flatcc_json_printer_string@@Base+0x4>
   1ea94:	subs	r7, r8, #1
   1ea98:	beq	1ebc4 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   1ea9c:	mov	r8, #44	; 0x2c
   1eaa0:	mov	sl, #10
   1eaa4:	b	1eae0 <flatcc_json_printer_string_vector_field@@Base+0x1fc>
   1eaa8:	mov	r1, #32
   1eaac:	mov	r2, r5
   1eab0:	bl	1293c <memset@plt>
   1eab4:	ldr	r0, [r4, #20]
   1eab8:	add	r0, r0, r5
   1eabc:	str	r0, [r4, #20]
   1eac0:	ldr	r0, [r9]
   1eac4:	mov	r1, r9
   1eac8:	ldr	r2, [r1, r0]!
   1eacc:	mov	r0, r4
   1ead0:	add	r1, r1, #4
   1ead4:	bl	150f0 <flatcc_json_printer_string@@Base+0x4>
   1ead8:	cmp	r7, #0
   1eadc:	beq	1ebc4 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   1eae0:	ldr	r0, [r4, #20]
   1eae4:	add	r9, r9, #4
   1eae8:	sub	r7, r7, #1
   1eaec:	add	r1, r0, #1
   1eaf0:	str	r1, [r4, #20]
   1eaf4:	strb	r8, [r0]
   1eaf8:	ldrb	r1, [r4, #25]
   1eafc:	ldr	r0, [r4, #20]
   1eb00:	cmp	r1, #0
   1eb04:	beq	1eba4 <flatcc_json_printer_string_vector_field@@Base+0x2c0>
   1eb08:	add	r1, r0, #1
   1eb0c:	str	r1, [r4, #20]
   1eb10:	strb	sl, [r0]
   1eb14:	ldr	r0, [r4, #20]
   1eb18:	ldrb	r2, [r4, #25]
   1eb1c:	ldr	r3, [r4, #32]
   1eb20:	ldr	r1, [r4, #16]
   1eb24:	mla	r6, r3, r2, r0
   1eb28:	mul	r5, r3, r2
   1eb2c:	cmp	r6, r1
   1eb30:	bls	1eaa8 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   1eb34:	cmp	r0, r1
   1eb38:	bcc	1eb54 <flatcc_json_printer_string_vector_field@@Base+0x270>
   1eb3c:	ldr	r2, [r4, #44]	; 0x2c
   1eb40:	mov	r0, r4
   1eb44:	mov	r1, #0
   1eb48:	blx	r2
   1eb4c:	ldr	r1, [r4, #16]
   1eb50:	ldr	r0, [r4, #20]
   1eb54:	sub	r6, r1, r0
   1eb58:	cmp	r6, r5
   1eb5c:	bcs	1eaa8 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   1eb60:	mov	r1, #32
   1eb64:	mov	r2, r6
   1eb68:	bl	1293c <memset@plt>
   1eb6c:	ldr	r0, [r4, #20]
   1eb70:	ldr	r2, [r4, #44]	; 0x2c
   1eb74:	mov	r1, #0
   1eb78:	add	r0, r0, r6
   1eb7c:	str	r0, [r4, #20]
   1eb80:	mov	r0, r4
   1eb84:	blx	r2
   1eb88:	ldr	r1, [r4, #16]
   1eb8c:	ldr	r0, [r4, #20]
   1eb90:	sub	r5, r5, r6
   1eb94:	sub	r6, r1, r0
   1eb98:	cmp	r5, r6
   1eb9c:	bhi	1eb60 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   1eba0:	b	1eaa8 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   1eba4:	ldr	r1, [r4, #16]
   1eba8:	cmp	r0, r1
   1ebac:	bcc	1eac0 <flatcc_json_printer_string_vector_field@@Base+0x1dc>
   1ebb0:	ldr	r2, [r4, #44]	; 0x2c
   1ebb4:	mov	r0, r4
   1ebb8:	mov	r1, #0
   1ebbc:	blx	r2
   1ebc0:	b	1eac0 <flatcc_json_printer_string_vector_field@@Base+0x1dc>
   1ebc4:	ldrb	r1, [r4, #25]
   1ebc8:	ldr	r0, [r4, #20]
   1ebcc:	cmp	r1, #0
   1ebd0:	beq	1ec90 <flatcc_json_printer_string_vector_field@@Base+0x3ac>
   1ebd4:	add	r1, r0, #1
   1ebd8:	str	r1, [r4, #20]
   1ebdc:	mov	r1, #10
   1ebe0:	strb	r1, [r0]
   1ebe4:	ldr	r0, [r4, #32]
   1ebe8:	sub	r2, r0, #1
   1ebec:	str	r2, [r4, #32]
   1ebf0:	ldrb	r3, [r4, #25]
   1ebf4:	ldr	r0, [r4, #20]
   1ebf8:	ldr	r1, [r4, #16]
   1ebfc:	mla	r7, r2, r3, r0
   1ec00:	mul	r5, r2, r3
   1ec04:	cmp	r7, r1
   1ec08:	bls	1ec78 <flatcc_json_printer_string_vector_field@@Base+0x394>
   1ec0c:	cmp	r0, r1
   1ec10:	bcc	1ec2c <flatcc_json_printer_string_vector_field@@Base+0x348>
   1ec14:	ldr	r2, [r4, #44]	; 0x2c
   1ec18:	mov	r0, r4
   1ec1c:	mov	r1, #0
   1ec20:	blx	r2
   1ec24:	ldr	r1, [r4, #16]
   1ec28:	ldr	r0, [r4, #20]
   1ec2c:	sub	r6, r1, r0
   1ec30:	cmp	r6, r5
   1ec34:	bcs	1ec78 <flatcc_json_printer_string_vector_field@@Base+0x394>
   1ec38:	mov	r1, #32
   1ec3c:	mov	r2, r6
   1ec40:	bl	1293c <memset@plt>
   1ec44:	ldr	r0, [r4, #20]
   1ec48:	ldr	r2, [r4, #44]	; 0x2c
   1ec4c:	mov	r1, #0
   1ec50:	add	r0, r0, r6
   1ec54:	str	r0, [r4, #20]
   1ec58:	mov	r0, r4
   1ec5c:	blx	r2
   1ec60:	ldr	r1, [r4, #16]
   1ec64:	ldr	r0, [r4, #20]
   1ec68:	sub	r5, r5, r6
   1ec6c:	sub	r6, r1, r0
   1ec70:	cmp	r5, r6
   1ec74:	bhi	1ec38 <flatcc_json_printer_string_vector_field@@Base+0x354>
   1ec78:	mov	r1, #32
   1ec7c:	mov	r2, r5
   1ec80:	bl	1293c <memset@plt>
   1ec84:	ldr	r0, [r4, #20]
   1ec88:	add	r0, r0, r5
   1ec8c:	str	r0, [r4, #20]
   1ec90:	add	r1, r0, #1
   1ec94:	str	r1, [r4, #20]
   1ec98:	mov	r1, #93	; 0x5d
   1ec9c:	strb	r1, [r0]
   1eca0:	sub	sp, fp, #28
   1eca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001eca8 <flatcc_json_printer_table_vector_field@@Base>:
   1eca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ecac:	add	fp, sp, #28
   1ecb0:	sub	sp, sp, #20
   1ecb4:	mov	sl, r1
   1ecb8:	ldr	r1, [r1, #8]
   1ecbc:	mov	r4, r0
   1ecc0:	mov	r0, #4
   1ecc4:	add	r0, r0, r2, lsl #1
   1ecc8:	cmp	r0, r1
   1eccc:	bge	1ecec <flatcc_json_printer_table_vector_field@@Base+0x44>
   1ecd0:	ldr	r1, [sl, #4]
   1ecd4:	add	r0, r1, r0
   1ecd8:	ldrh	r0, [r0]
   1ecdc:	cmp	r0, #0
   1ece0:	ldrne	r1, [sl]
   1ece4:	addsne	r5, r1, r0
   1ece8:	bne	1ecf4 <flatcc_json_printer_table_vector_field@@Base+0x4c>
   1ecec:	sub	sp, fp, #28
   1ecf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ecf4:	ldr	r0, [sl, #16]
   1ecf8:	ldr	r2, [fp, #8]
   1ecfc:	add	r1, r0, #1
   1ed00:	cmp	r0, #0
   1ed04:	str	r1, [sl, #16]
   1ed08:	beq	1ed20 <flatcc_json_printer_table_vector_field@@Base+0x78>
   1ed0c:	ldr	r0, [r4, #20]
   1ed10:	add	r1, r0, #1
   1ed14:	str	r1, [r4, #20]
   1ed18:	mov	r1, #44	; 0x2c
   1ed1c:	strb	r1, [r0]
   1ed20:	ldr	r0, [r5]
   1ed24:	mov	r1, r3
   1ed28:	ldr	r8, [r5, r0]!
   1ed2c:	mov	r0, r4
   1ed30:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1ed34:	ldr	r1, [r4, #32]
   1ed38:	ldr	r0, [r4, #20]
   1ed3c:	cmp	r8, #0
   1ed40:	add	r1, r1, #1
   1ed44:	str	r1, [r4, #32]
   1ed48:	add	r1, r0, #1
   1ed4c:	str	r1, [r4, #20]
   1ed50:	mov	r1, #91	; 0x5b
   1ed54:	strb	r1, [r0]
   1ed58:	beq	1f060 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   1ed5c:	ldr	r0, [sl, #12]
   1ed60:	ldr	r6, [fp, #12]
   1ed64:	add	r5, r5, #4
   1ed68:	subs	r0, r0, #1
   1ed6c:	beq	1eeb4 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   1ed70:	ldr	r3, [r4, #32]
   1ed74:	ldr	r2, [r4, #20]
   1ed78:	ldr	r1, [r5]
   1ed7c:	add	r3, r3, #1
   1ed80:	add	r1, r5, r1
   1ed84:	str	r3, [r4, #32]
   1ed88:	add	r3, r2, #1
   1ed8c:	str	r3, [r4, #20]
   1ed90:	mov	r3, #123	; 0x7b
   1ed94:	strb	r3, [r2]
   1ed98:	str	r0, [sp, #12]
   1ed9c:	mov	r0, #0
   1eda0:	str	r0, [sp, #16]
   1eda4:	str	r1, [sp]
   1eda8:	ldr	r0, [r1]
   1edac:	sub	r2, r1, r0
   1edb0:	str	r2, [sp, #4]
   1edb4:	ldrh	r0, [r1, -r0]
   1edb8:	mov	r1, sp
   1edbc:	str	r0, [sp, #8]
   1edc0:	mov	r0, r4
   1edc4:	blx	r6
   1edc8:	ldrb	r1, [r4, #25]
   1edcc:	ldr	r0, [r4, #20]
   1edd0:	cmp	r1, #0
   1edd4:	beq	1ee98 <flatcc_json_printer_table_vector_field@@Base+0x1f0>
   1edd8:	add	r1, r0, #1
   1eddc:	str	r1, [r4, #20]
   1ede0:	mov	r1, #10
   1ede4:	strb	r1, [r0]
   1ede8:	ldr	r0, [r4, #32]
   1edec:	sub	r2, r0, #1
   1edf0:	str	r2, [r4, #32]
   1edf4:	ldrb	r3, [r4, #25]
   1edf8:	ldr	r0, [r4, #20]
   1edfc:	ldr	r1, [r4, #16]
   1ee00:	mla	r7, r2, r3, r0
   1ee04:	mul	r6, r2, r3
   1ee08:	cmp	r7, r1
   1ee0c:	bls	1ee7c <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   1ee10:	cmp	r0, r1
   1ee14:	bcc	1ee30 <flatcc_json_printer_table_vector_field@@Base+0x188>
   1ee18:	ldr	r2, [r4, #44]	; 0x2c
   1ee1c:	mov	r0, r4
   1ee20:	mov	r1, #0
   1ee24:	blx	r2
   1ee28:	ldr	r1, [r4, #16]
   1ee2c:	ldr	r0, [r4, #20]
   1ee30:	sub	r7, r1, r0
   1ee34:	cmp	r7, r6
   1ee38:	bcs	1ee7c <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   1ee3c:	mov	r1, #32
   1ee40:	mov	r2, r7
   1ee44:	bl	1293c <memset@plt>
   1ee48:	ldr	r0, [r4, #20]
   1ee4c:	ldr	r2, [r4, #44]	; 0x2c
   1ee50:	mov	r1, #0
   1ee54:	add	r0, r0, r7
   1ee58:	str	r0, [r4, #20]
   1ee5c:	mov	r0, r4
   1ee60:	blx	r2
   1ee64:	ldr	r1, [r4, #16]
   1ee68:	ldr	r0, [r4, #20]
   1ee6c:	sub	r6, r6, r7
   1ee70:	sub	r7, r1, r0
   1ee74:	cmp	r6, r7
   1ee78:	bhi	1ee3c <flatcc_json_printer_table_vector_field@@Base+0x194>
   1ee7c:	mov	r1, #32
   1ee80:	mov	r2, r6
   1ee84:	bl	1293c <memset@plt>
   1ee88:	ldr	r0, [r4, #20]
   1ee8c:	add	r0, r0, r6
   1ee90:	ldr	r6, [fp, #12]
   1ee94:	str	r0, [r4, #20]
   1ee98:	add	r1, r0, #1
   1ee9c:	str	r1, [r4, #20]
   1eea0:	mov	r1, #125	; 0x7d
   1eea4:	strb	r1, [r0]
   1eea8:	subs	r9, r8, #1
   1eeac:	bne	1eecc <flatcc_json_printer_table_vector_field@@Base+0x224>
   1eeb0:	b	1f060 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   1eeb4:	ldr	r0, [r4, #36]	; 0x24
   1eeb8:	cmp	r0, #0
   1eebc:	moveq	r0, #2
   1eec0:	streq	r0, [r4, #36]	; 0x24
   1eec4:	subs	r9, r8, #1
   1eec8:	beq	1f060 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   1eecc:	mov	r8, #44	; 0x2c
   1eed0:	b	1eeec <flatcc_json_printer_table_vector_field@@Base+0x244>
   1eed4:	ldr	r0, [r4, #36]	; 0x24
   1eed8:	cmp	r0, #0
   1eedc:	moveq	r0, #2
   1eee0:	streq	r0, [r4, #36]	; 0x24
   1eee4:	cmp	r9, #0
   1eee8:	beq	1f060 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   1eeec:	ldr	r0, [r4, #20]
   1eef0:	sub	r9, r9, #1
   1eef4:	add	r1, r0, #1
   1eef8:	str	r1, [r4, #20]
   1eefc:	strb	r8, [r0]
   1ef00:	ldr	r0, [sl, #12]
   1ef04:	ldr	r1, [r5, #4]!
   1ef08:	subs	r0, r0, #1
   1ef0c:	beq	1eed4 <flatcc_json_printer_table_vector_field@@Base+0x22c>
   1ef10:	ldr	r3, [r4, #32]
   1ef14:	ldr	r2, [r4, #20]
   1ef18:	add	r1, r5, r1
   1ef1c:	add	r3, r3, #1
   1ef20:	str	r3, [r4, #32]
   1ef24:	add	r3, r2, #1
   1ef28:	str	r3, [r4, #20]
   1ef2c:	mov	r3, #123	; 0x7b
   1ef30:	strb	r3, [r2]
   1ef34:	str	r0, [sp, #12]
   1ef38:	mov	r0, #0
   1ef3c:	str	r0, [sp, #16]
   1ef40:	str	r1, [sp]
   1ef44:	ldr	r0, [r1]
   1ef48:	sub	r2, r1, r0
   1ef4c:	str	r2, [sp, #4]
   1ef50:	ldrh	r0, [r1, -r0]
   1ef54:	mov	r1, sp
   1ef58:	str	r0, [sp, #8]
   1ef5c:	mov	r0, r4
   1ef60:	blx	r6
   1ef64:	ldrb	r1, [r4, #25]
   1ef68:	ldr	r0, [r4, #20]
   1ef6c:	cmp	r1, #0
   1ef70:	beq	1f048 <flatcc_json_printer_table_vector_field@@Base+0x3a0>
   1ef74:	add	r1, r0, #1
   1ef78:	str	r1, [r4, #20]
   1ef7c:	mov	r1, #10
   1ef80:	strb	r1, [r0]
   1ef84:	ldr	r0, [r4, #32]
   1ef88:	sub	r2, r0, #1
   1ef8c:	str	r2, [r4, #32]
   1ef90:	ldrb	r3, [r4, #25]
   1ef94:	ldr	r0, [r4, #20]
   1ef98:	ldr	r1, [r4, #16]
   1ef9c:	mla	r6, r2, r3, r0
   1efa0:	mul	r7, r2, r3
   1efa4:	cmp	r6, r1
   1efa8:	bls	1f02c <flatcc_json_printer_table_vector_field@@Base+0x384>
   1efac:	cmp	r0, r1
   1efb0:	bcc	1efcc <flatcc_json_printer_table_vector_field@@Base+0x324>
   1efb4:	ldr	r2, [r4, #44]	; 0x2c
   1efb8:	mov	r0, r4
   1efbc:	mov	r1, #0
   1efc0:	blx	r2
   1efc4:	ldr	r1, [r4, #16]
   1efc8:	ldr	r0, [r4, #20]
   1efcc:	sub	r6, r1, r0
   1efd0:	cmp	r6, r7
   1efd4:	bcs	1f018 <flatcc_json_printer_table_vector_field@@Base+0x370>
   1efd8:	mov	r1, #32
   1efdc:	mov	r2, r6
   1efe0:	bl	1293c <memset@plt>
   1efe4:	ldr	r0, [r4, #20]
   1efe8:	ldr	r2, [r4, #44]	; 0x2c
   1efec:	mov	r1, #0
   1eff0:	add	r0, r0, r6
   1eff4:	str	r0, [r4, #20]
   1eff8:	mov	r0, r4
   1effc:	blx	r2
   1f000:	ldr	r1, [r4, #16]
   1f004:	ldr	r0, [r4, #20]
   1f008:	sub	r7, r7, r6
   1f00c:	sub	r6, r1, r0
   1f010:	cmp	r7, r6
   1f014:	bhi	1efd8 <flatcc_json_printer_table_vector_field@@Base+0x330>
   1f018:	ldr	r6, [fp, #12]
   1f01c:	mov	r1, #32
   1f020:	mov	r2, r7
   1f024:	bl	1293c <memset@plt>
   1f028:	b	1f03c <flatcc_json_printer_table_vector_field@@Base+0x394>
   1f02c:	mov	r1, #32
   1f030:	mov	r2, r7
   1f034:	bl	1293c <memset@plt>
   1f038:	ldr	r6, [fp, #12]
   1f03c:	ldr	r0, [r4, #20]
   1f040:	add	r0, r0, r7
   1f044:	str	r0, [r4, #20]
   1f048:	add	r1, r0, #1
   1f04c:	str	r1, [r4, #20]
   1f050:	mov	r1, #125	; 0x7d
   1f054:	strb	r1, [r0]
   1f058:	cmp	r9, #0
   1f05c:	bne	1eeec <flatcc_json_printer_table_vector_field@@Base+0x244>
   1f060:	ldrb	r1, [r4, #25]
   1f064:	ldr	r0, [r4, #20]
   1f068:	cmp	r1, #0
   1f06c:	beq	1f12c <flatcc_json_printer_table_vector_field@@Base+0x484>
   1f070:	add	r1, r0, #1
   1f074:	str	r1, [r4, #20]
   1f078:	mov	r1, #10
   1f07c:	strb	r1, [r0]
   1f080:	ldr	r0, [r4, #32]
   1f084:	sub	r2, r0, #1
   1f088:	str	r2, [r4, #32]
   1f08c:	ldrb	r3, [r4, #25]
   1f090:	ldr	r0, [r4, #20]
   1f094:	ldr	r1, [r4, #16]
   1f098:	mla	r7, r2, r3, r0
   1f09c:	mul	r5, r2, r3
   1f0a0:	cmp	r7, r1
   1f0a4:	bls	1f114 <flatcc_json_printer_table_vector_field@@Base+0x46c>
   1f0a8:	cmp	r0, r1
   1f0ac:	bcc	1f0c8 <flatcc_json_printer_table_vector_field@@Base+0x420>
   1f0b0:	ldr	r2, [r4, #44]	; 0x2c
   1f0b4:	mov	r0, r4
   1f0b8:	mov	r1, #0
   1f0bc:	blx	r2
   1f0c0:	ldr	r1, [r4, #16]
   1f0c4:	ldr	r0, [r4, #20]
   1f0c8:	sub	r6, r1, r0
   1f0cc:	cmp	r6, r5
   1f0d0:	bcs	1f114 <flatcc_json_printer_table_vector_field@@Base+0x46c>
   1f0d4:	mov	r1, #32
   1f0d8:	mov	r2, r6
   1f0dc:	bl	1293c <memset@plt>
   1f0e0:	ldr	r0, [r4, #20]
   1f0e4:	ldr	r2, [r4, #44]	; 0x2c
   1f0e8:	mov	r1, #0
   1f0ec:	add	r0, r0, r6
   1f0f0:	str	r0, [r4, #20]
   1f0f4:	mov	r0, r4
   1f0f8:	blx	r2
   1f0fc:	ldr	r1, [r4, #16]
   1f100:	ldr	r0, [r4, #20]
   1f104:	sub	r5, r5, r6
   1f108:	sub	r6, r1, r0
   1f10c:	cmp	r5, r6
   1f110:	bhi	1f0d4 <flatcc_json_printer_table_vector_field@@Base+0x42c>
   1f114:	mov	r1, #32
   1f118:	mov	r2, r5
   1f11c:	bl	1293c <memset@plt>
   1f120:	ldr	r0, [r4, #20]
   1f124:	add	r0, r0, r5
   1f128:	str	r0, [r4, #20]
   1f12c:	add	r1, r0, #1
   1f130:	str	r1, [r4, #20]
   1f134:	mov	r1, #93	; 0x5d
   1f138:	strb	r1, [r0]
   1f13c:	sub	sp, fp, #28
   1f140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f144 <flatcc_json_printer_union_vector_field@@Base>:
   1f144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f148:	add	fp, sp, #28
   1f14c:	sub	sp, sp, #140	; 0x8c
   1f150:	mov	r6, r1
   1f154:	ldr	r1, [r1, #8]
   1f158:	mov	r8, r0
   1f15c:	sub	r9, r2, #1
   1f160:	mov	r0, #4
   1f164:	mov	r4, r3
   1f168:	mov	r5, #0
   1f16c:	mov	sl, #0
   1f170:	add	r3, r0, r9, lsl #1
   1f174:	cmp	r3, r1
   1f178:	bge	1f198 <flatcc_json_printer_union_vector_field@@Base+0x54>
   1f17c:	ldr	r7, [r6, #4]
   1f180:	mov	sl, #0
   1f184:	add	r3, r7, r3
   1f188:	ldrh	r3, [r3]
   1f18c:	cmp	r3, #0
   1f190:	ldrne	r7, [r6]
   1f194:	addne	sl, r7, r3
   1f198:	ldr	r7, [fp, #8]
   1f19c:	add	r0, r0, r2, lsl #1
   1f1a0:	cmp	r0, r1
   1f1a4:	bge	1f1c0 <flatcc_json_printer_union_vector_field@@Base+0x7c>
   1f1a8:	ldr	r1, [r6, #4]
   1f1ac:	add	r0, r1, r0
   1f1b0:	ldrh	r0, [r0]
   1f1b4:	cmp	r0, #0
   1f1b8:	ldrne	r1, [r6]
   1f1bc:	addne	r5, r1, r0
   1f1c0:	ldr	r0, [r6, #12]
   1f1c4:	cmp	r7, #101	; 0x65
   1f1c8:	str	r5, [sp, #16]
   1f1cc:	str	r0, [sp, #24]
   1f1d0:	bge	1f4d8 <flatcc_json_printer_union_vector_field@@Base+0x394>
   1f1d4:	add	r5, sp, #32
   1f1d8:	mov	r1, r4
   1f1dc:	mov	r2, r7
   1f1e0:	mov	r0, r5
   1f1e4:	bl	128ac <memcpy@plt>
   1f1e8:	movw	r0, #29791	; 0x745f
   1f1ec:	cmp	sl, #0
   1f1f0:	mov	r1, #101	; 0x65
   1f1f4:	movt	r0, #28793	; 0x7079
   1f1f8:	str	r0, [r5, r7]
   1f1fc:	add	r0, r5, r7
   1f200:	ldr	r5, [sp, #16]
   1f204:	strb	r1, [r0, #4]
   1f208:	cmpne	r5, #0
   1f20c:	bne	1f218 <flatcc_json_printer_union_vector_field@@Base+0xd4>
   1f210:	sub	sp, fp, #28
   1f214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f218:	ldr	r0, [fp, #12]
   1f21c:	add	r1, r7, #5
   1f220:	add	r3, sp, #32
   1f224:	mov	r2, r9
   1f228:	str	r1, [sp]
   1f22c:	mov	r1, r6
   1f230:	str	r0, [sp, #4]
   1f234:	mov	r0, r8
   1f238:	bl	1bd64 <flatcc_json_printer_utype_enum_vector_field@@Base>
   1f23c:	ldr	r0, [r6, #16]
   1f240:	add	r1, r0, #1
   1f244:	cmp	r0, #0
   1f248:	str	r1, [r6, #16]
   1f24c:	beq	1f264 <flatcc_json_printer_union_vector_field@@Base+0x120>
   1f250:	ldr	r0, [r8, #20]
   1f254:	add	r1, r0, #1
   1f258:	str	r1, [r8, #20]
   1f25c:	mov	r1, #44	; 0x2c
   1f260:	strb	r1, [r0]
   1f264:	ldr	r0, [r5]
   1f268:	ldr	r9, [sl]
   1f26c:	mov	r1, r4
   1f270:	mov	r2, r7
   1f274:	ldr	r6, [r5, r0]!
   1f278:	str	r0, [sp, #12]
   1f27c:	mov	r0, r8
   1f280:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1f284:	mov	r7, r8
   1f288:	cmp	r6, #0
   1f28c:	ldr	r0, [r7, #20]!
   1f290:	add	r1, r0, #1
   1f294:	str	r1, [r7]
   1f298:	ldr	r1, [r7, #12]
   1f29c:	add	r1, r1, #1
   1f2a0:	str	r1, [r7, #12]
   1f2a4:	mov	r1, #91	; 0x5b
   1f2a8:	strb	r1, [r0]
   1f2ac:	beq	1f3f4 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   1f2b0:	add	r4, sl, r9
   1f2b4:	ldr	r2, [fp, #16]
   1f2b8:	ldrb	r0, [r4, #4]
   1f2bc:	cmp	r0, #0
   1f2c0:	beq	1f2ec <flatcc_json_printer_union_vector_field@@Base+0x1a8>
   1f2c4:	add	r1, r5, #4
   1f2c8:	mov	r9, r2
   1f2cc:	str	r1, [sp, #20]
   1f2d0:	strb	r0, [sp, #28]
   1f2d4:	add	r1, sp, #20
   1f2d8:	mov	r0, r8
   1f2dc:	blx	r2
   1f2e0:	subs	r6, r6, #1
   1f2e4:	bne	1f344 <flatcc_json_printer_union_vector_field@@Base+0x200>
   1f2e8:	b	1f3f4 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   1f2ec:	ldr	r0, [r7]
   1f2f0:	mov	r9, r2
   1f2f4:	add	r1, r0, #1
   1f2f8:	str	r1, [r7]
   1f2fc:	mov	r1, #110	; 0x6e
   1f300:	strb	r1, [r0]
   1f304:	ldr	r0, [r7]
   1f308:	add	r1, r0, #1
   1f30c:	str	r1, [r7]
   1f310:	mov	r1, #117	; 0x75
   1f314:	strb	r1, [r0]
   1f318:	ldr	r0, [r7]
   1f31c:	add	r1, r0, #1
   1f320:	str	r1, [r7]
   1f324:	mov	r1, #108	; 0x6c
   1f328:	strb	r1, [r0]
   1f32c:	ldr	r0, [r7]
   1f330:	add	r2, r0, #1
   1f334:	str	r2, [r7]
   1f338:	strb	r1, [r0]
   1f33c:	subs	r6, r6, #1
   1f340:	beq	1f3f4 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   1f344:	ldr	r0, [sp, #16]
   1f348:	ldr	r1, [sp, #12]
   1f34c:	add	r4, r4, #5
   1f350:	mov	sl, #44	; 0x2c
   1f354:	add	r0, r1, r0
   1f358:	add	r5, r0, #8
   1f35c:	b	1f3bc <flatcc_json_printer_union_vector_field@@Base+0x278>
   1f360:	ldr	r0, [r7]
   1f364:	mov	r2, #108	; 0x6c
   1f368:	add	r1, r0, #1
   1f36c:	str	r1, [r7]
   1f370:	mov	r1, #110	; 0x6e
   1f374:	strb	r1, [r0]
   1f378:	ldr	r0, [r7]
   1f37c:	add	r1, r0, #1
   1f380:	str	r1, [r7]
   1f384:	mov	r1, #117	; 0x75
   1f388:	strb	r1, [r0]
   1f38c:	ldr	r0, [r7]
   1f390:	add	r1, r0, #1
   1f394:	str	r1, [r7]
   1f398:	strb	r2, [r0]
   1f39c:	ldr	r0, [r7]
   1f3a0:	add	r1, r0, #1
   1f3a4:	str	r1, [r7]
   1f3a8:	strb	r2, [r0]
   1f3ac:	add	r5, r5, #4
   1f3b0:	add	r4, r4, #1
   1f3b4:	cmp	r6, #0
   1f3b8:	beq	1f3f4 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   1f3bc:	ldrb	r0, [r4]
   1f3c0:	ldr	r1, [r7]
   1f3c4:	sub	r6, r6, #1
   1f3c8:	add	r2, r1, #1
   1f3cc:	cmp	r0, #0
   1f3d0:	str	r2, [r7]
   1f3d4:	strb	sl, [r1]
   1f3d8:	beq	1f360 <flatcc_json_printer_union_vector_field@@Base+0x21c>
   1f3dc:	str	r5, [sp, #20]
   1f3e0:	strb	r0, [sp, #28]
   1f3e4:	mov	r0, r8
   1f3e8:	add	r1, sp, #20
   1f3ec:	blx	r9
   1f3f0:	b	1f3ac <flatcc_json_printer_union_vector_field@@Base+0x268>
   1f3f4:	ldrb	r1, [r8, #25]
   1f3f8:	ldr	r0, [r8, #20]
   1f3fc:	cmp	r1, #0
   1f400:	beq	1f4c0 <flatcc_json_printer_union_vector_field@@Base+0x37c>
   1f404:	add	r1, r0, #1
   1f408:	str	r1, [r8, #20]
   1f40c:	mov	r1, #10
   1f410:	strb	r1, [r0]
   1f414:	ldr	r0, [r8, #32]
   1f418:	sub	r2, r0, #1
   1f41c:	str	r2, [r8, #32]
   1f420:	ldrb	r3, [r8, #25]
   1f424:	ldr	r0, [r8, #20]
   1f428:	ldr	r1, [r8, #16]
   1f42c:	mla	r6, r2, r3, r0
   1f430:	mul	r5, r2, r3
   1f434:	cmp	r6, r1
   1f438:	bls	1f4a8 <flatcc_json_printer_union_vector_field@@Base+0x364>
   1f43c:	cmp	r0, r1
   1f440:	bcc	1f45c <flatcc_json_printer_union_vector_field@@Base+0x318>
   1f444:	ldr	r2, [r8, #44]	; 0x2c
   1f448:	mov	r0, r8
   1f44c:	mov	r1, #0
   1f450:	blx	r2
   1f454:	ldr	r1, [r8, #16]
   1f458:	ldr	r0, [r8, #20]
   1f45c:	sub	r6, r1, r0
   1f460:	cmp	r6, r5
   1f464:	bcs	1f4a8 <flatcc_json_printer_union_vector_field@@Base+0x364>
   1f468:	mov	r1, #32
   1f46c:	mov	r2, r6
   1f470:	bl	1293c <memset@plt>
   1f474:	ldr	r0, [r8, #20]
   1f478:	ldr	r2, [r8, #44]	; 0x2c
   1f47c:	mov	r1, #0
   1f480:	add	r0, r0, r6
   1f484:	str	r0, [r8, #20]
   1f488:	mov	r0, r8
   1f48c:	blx	r2
   1f490:	ldr	r1, [r8, #16]
   1f494:	ldr	r0, [r8, #20]
   1f498:	sub	r5, r5, r6
   1f49c:	sub	r6, r1, r0
   1f4a0:	cmp	r5, r6
   1f4a4:	bhi	1f468 <flatcc_json_printer_union_vector_field@@Base+0x324>
   1f4a8:	mov	r1, #32
   1f4ac:	mov	r2, r5
   1f4b0:	bl	1293c <memset@plt>
   1f4b4:	ldr	r0, [r7]
   1f4b8:	add	r0, r0, r5
   1f4bc:	str	r0, [r7]
   1f4c0:	add	r1, r0, #1
   1f4c4:	str	r1, [r7]
   1f4c8:	mov	r1, #93	; 0x5d
   1f4cc:	strb	r1, [r0]
   1f4d0:	sub	sp, fp, #28
   1f4d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f4d8:	ldr	r0, [r8, #36]	; 0x24
   1f4dc:	movw	r2, #843	; 0x34b
   1f4e0:	cmp	r0, #0
   1f4e4:	moveq	r0, #1
   1f4e8:	streq	r0, [r8, #36]	; 0x24
   1f4ec:	ldr	r0, [pc, #20]	; 1f508 <flatcc_json_printer_union_vector_field@@Base+0x3c4>
   1f4f0:	ldr	r1, [pc, #20]	; 1f50c <flatcc_json_printer_union_vector_field@@Base+0x3c8>
   1f4f4:	ldr	r3, [pc, #20]	; 1f510 <flatcc_json_printer_union_vector_field@@Base+0x3cc>
   1f4f8:	add	r0, pc, r0
   1f4fc:	add	r1, pc, r1
   1f500:	add	r3, pc, r3
   1f504:	bl	12990 <__assert_fail@plt>
   1f508:	ldrdeq	r2, [r0], -r5
   1f50c:	andeq	r2, r0, ip, ror #9
   1f510:	andeq	r2, r0, sl, asr #10

0001f514 <flatcc_json_printer_table_field@@Base>:
   1f514:	push	{r4, r5, r6, sl, fp, lr}
   1f518:	add	fp, sp, #16
   1f51c:	sub	sp, sp, #24
   1f520:	mov	r5, r1
   1f524:	ldr	r1, [r1, #8]
   1f528:	mov	r4, r0
   1f52c:	mov	r0, #4
   1f530:	add	r0, r0, r2, lsl #1
   1f534:	cmp	r0, r1
   1f538:	bge	1f558 <flatcc_json_printer_table_field@@Base+0x44>
   1f53c:	ldr	r1, [r5, #4]
   1f540:	add	r0, r1, r0
   1f544:	ldrh	r0, [r0]
   1f548:	cmp	r0, #0
   1f54c:	ldrne	r1, [r5]
   1f550:	addsne	r6, r1, r0
   1f554:	bne	1f560 <flatcc_json_printer_table_field@@Base+0x4c>
   1f558:	sub	sp, fp, #16
   1f55c:	pop	{r4, r5, r6, sl, fp, pc}
   1f560:	ldr	r0, [r5, #16]
   1f564:	ldr	r2, [fp, #8]
   1f568:	add	r1, r0, #1
   1f56c:	cmp	r0, #0
   1f570:	str	r1, [r5, #16]
   1f574:	beq	1f58c <flatcc_json_printer_table_field@@Base+0x78>
   1f578:	ldr	r0, [r4, #20]
   1f57c:	add	r1, r0, #1
   1f580:	str	r1, [r4, #20]
   1f584:	mov	r1, #44	; 0x2c
   1f588:	strb	r1, [r0]
   1f58c:	mov	r0, r4
   1f590:	mov	r1, r3
   1f594:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1f598:	ldr	r0, [r5, #12]
   1f59c:	subs	r0, r0, #1
   1f5a0:	beq	1f6e4 <flatcc_json_printer_table_field@@Base+0x1d0>
   1f5a4:	ldr	r1, [r6]
   1f5a8:	ldr	r3, [r4, #20]
   1f5ac:	ldr	r2, [fp, #12]
   1f5b0:	add	r1, r6, r1
   1f5b4:	ldr	r6, [r4, #32]
   1f5b8:	add	r6, r6, #1
   1f5bc:	str	r6, [r4, #32]
   1f5c0:	add	r6, r3, #1
   1f5c4:	str	r6, [r4, #20]
   1f5c8:	mov	r6, #123	; 0x7b
   1f5cc:	strb	r6, [r3]
   1f5d0:	str	r0, [sp, #16]
   1f5d4:	mov	r0, #0
   1f5d8:	str	r0, [sp, #20]
   1f5dc:	str	r1, [sp, #4]
   1f5e0:	ldr	r0, [r1]
   1f5e4:	sub	r3, r1, r0
   1f5e8:	str	r3, [sp, #8]
   1f5ec:	ldrh	r0, [r1, -r0]
   1f5f0:	add	r1, sp, #4
   1f5f4:	str	r0, [sp, #12]
   1f5f8:	mov	r0, r4
   1f5fc:	blx	r2
   1f600:	ldrb	r1, [r4, #25]
   1f604:	ldr	r0, [r4, #20]
   1f608:	cmp	r1, #0
   1f60c:	beq	1f6cc <flatcc_json_printer_table_field@@Base+0x1b8>
   1f610:	add	r1, r0, #1
   1f614:	str	r1, [r4, #20]
   1f618:	mov	r1, #10
   1f61c:	strb	r1, [r0]
   1f620:	ldr	r0, [r4, #32]
   1f624:	sub	r2, r0, #1
   1f628:	str	r2, [r4, #32]
   1f62c:	ldrb	r3, [r4, #25]
   1f630:	ldr	r0, [r4, #20]
   1f634:	ldr	r1, [r4, #16]
   1f638:	mla	r6, r2, r3, r0
   1f63c:	mul	r5, r2, r3
   1f640:	cmp	r6, r1
   1f644:	bls	1f6b4 <flatcc_json_printer_table_field@@Base+0x1a0>
   1f648:	cmp	r0, r1
   1f64c:	bcc	1f668 <flatcc_json_printer_table_field@@Base+0x154>
   1f650:	ldr	r2, [r4, #44]	; 0x2c
   1f654:	mov	r0, r4
   1f658:	mov	r1, #0
   1f65c:	blx	r2
   1f660:	ldr	r1, [r4, #16]
   1f664:	ldr	r0, [r4, #20]
   1f668:	sub	r6, r1, r0
   1f66c:	cmp	r6, r5
   1f670:	bcs	1f6b4 <flatcc_json_printer_table_field@@Base+0x1a0>
   1f674:	mov	r1, #32
   1f678:	mov	r2, r6
   1f67c:	bl	1293c <memset@plt>
   1f680:	ldr	r0, [r4, #20]
   1f684:	ldr	r2, [r4, #44]	; 0x2c
   1f688:	mov	r1, #0
   1f68c:	add	r0, r0, r6
   1f690:	str	r0, [r4, #20]
   1f694:	mov	r0, r4
   1f698:	blx	r2
   1f69c:	ldr	r1, [r4, #16]
   1f6a0:	ldr	r0, [r4, #20]
   1f6a4:	sub	r5, r5, r6
   1f6a8:	sub	r6, r1, r0
   1f6ac:	cmp	r5, r6
   1f6b0:	bhi	1f674 <flatcc_json_printer_table_field@@Base+0x160>
   1f6b4:	mov	r1, #32
   1f6b8:	mov	r2, r5
   1f6bc:	bl	1293c <memset@plt>
   1f6c0:	ldr	r0, [r4, #20]
   1f6c4:	add	r0, r0, r5
   1f6c8:	str	r0, [r4, #20]
   1f6cc:	add	r1, r0, #1
   1f6d0:	str	r1, [r4, #20]
   1f6d4:	mov	r1, #125	; 0x7d
   1f6d8:	strb	r1, [r0]
   1f6dc:	sub	sp, fp, #16
   1f6e0:	pop	{r4, r5, r6, sl, fp, pc}
   1f6e4:	ldr	r0, [r4, #36]	; 0x24
   1f6e8:	cmp	r0, #0
   1f6ec:	bne	1f558 <flatcc_json_printer_table_field@@Base+0x44>
   1f6f0:	mov	r0, #2
   1f6f4:	str	r0, [r4, #36]	; 0x24
   1f6f8:	sub	sp, fp, #16
   1f6fc:	pop	{r4, r5, r6, sl, fp, pc}

0001f700 <flatcc_json_printer_union_field@@Base>:
   1f700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f704:	add	fp, sp, #28
   1f708:	sub	sp, sp, #20
   1f70c:	mov	r9, r1
   1f710:	mov	r4, r0
   1f714:	mov	r0, #2
   1f718:	mov	sl, r3
   1f71c:	lsl	r1, r2, #1
   1f720:	add	r3, r0, r2, lsl #1
   1f724:	ldr	r2, [r9, #8]
   1f728:	mov	r0, #0
   1f72c:	cmp	r3, r2
   1f730:	bge	1f74c <flatcc_json_printer_union_field@@Base+0x4c>
   1f734:	ldr	r7, [r9, #4]
   1f738:	add	r3, r7, r3
   1f73c:	ldrh	r3, [r3]
   1f740:	cmp	r3, #0
   1f744:	ldrne	r0, [r9]
   1f748:	addne	r0, r0, r3
   1f74c:	add	r1, r1, #4
   1f750:	cmp	r1, r2
   1f754:	bge	1f770 <flatcc_json_printer_union_field@@Base+0x70>
   1f758:	ldr	r2, [r9, #4]
   1f75c:	add	r1, r2, r1
   1f760:	ldrh	r1, [r1]
   1f764:	cmp	r1, #0
   1f768:	cmpne	r0, #0
   1f76c:	bne	1f778 <flatcc_json_printer_union_field@@Base+0x78>
   1f770:	sub	sp, fp, #28
   1f774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f778:	ldr	r2, [r9]
   1f77c:	adds	r1, r2, r1
   1f780:	str	r1, [sp, #4]
   1f784:	beq	1f770 <flatcc_json_printer_union_field@@Base+0x70>
   1f788:	ldrb	r6, [r0]
   1f78c:	ldr	r0, [r9, #16]
   1f790:	add	r1, r0, #1
   1f794:	cmp	r0, #0
   1f798:	str	r1, [r9, #16]
   1f79c:	beq	1f7b4 <flatcc_json_printer_union_field@@Base+0xb4>
   1f7a0:	ldr	r0, [r4, #20]
   1f7a4:	add	r1, r0, #1
   1f7a8:	str	r1, [r4, #20]
   1f7ac:	mov	r1, #44	; 0x2c
   1f7b0:	strb	r1, [r0]
   1f7b4:	ldrb	r1, [r4, #25]
   1f7b8:	ldr	r8, [fp, #8]
   1f7bc:	ldr	r0, [r4, #20]
   1f7c0:	cmp	r1, #0
   1f7c4:	beq	1f87c <flatcc_json_printer_union_field@@Base+0x17c>
   1f7c8:	add	r1, r0, #1
   1f7cc:	mov	r5, r6
   1f7d0:	str	r1, [r4, #20]
   1f7d4:	mov	r1, #10
   1f7d8:	strb	r1, [r0]
   1f7dc:	ldr	r0, [r4, #20]
   1f7e0:	ldrb	r2, [r4, #25]
   1f7e4:	ldr	r3, [r4, #32]
   1f7e8:	ldr	r1, [r4, #16]
   1f7ec:	mla	r6, r3, r2, r0
   1f7f0:	mul	r7, r3, r2
   1f7f4:	cmp	r6, r1
   1f7f8:	bls	1f8a0 <flatcc_json_printer_union_field@@Base+0x1a0>
   1f7fc:	cmp	r0, r1
   1f800:	bcc	1f81c <flatcc_json_printer_union_field@@Base+0x11c>
   1f804:	ldr	r2, [r4, #44]	; 0x2c
   1f808:	mov	r0, r4
   1f80c:	mov	r1, #0
   1f810:	blx	r2
   1f814:	ldr	r1, [r4, #16]
   1f818:	ldr	r0, [r4, #20]
   1f81c:	mov	r6, r5
   1f820:	sub	r5, r1, r0
   1f824:	cmp	r5, r7
   1f828:	bcs	1f86c <flatcc_json_printer_union_field@@Base+0x16c>
   1f82c:	mov	r1, #32
   1f830:	mov	r2, r5
   1f834:	bl	1293c <memset@plt>
   1f838:	ldr	r0, [r4, #20]
   1f83c:	ldr	r2, [r4, #44]	; 0x2c
   1f840:	mov	r1, #0
   1f844:	add	r0, r0, r5
   1f848:	str	r0, [r4, #20]
   1f84c:	mov	r0, r4
   1f850:	blx	r2
   1f854:	ldr	r1, [r4, #16]
   1f858:	ldr	r0, [r4, #20]
   1f85c:	sub	r7, r7, r5
   1f860:	sub	r5, r1, r0
   1f864:	cmp	r7, r5
   1f868:	bhi	1f82c <flatcc_json_printer_union_field@@Base+0x12c>
   1f86c:	mov	r1, #32
   1f870:	mov	r2, r7
   1f874:	bl	1293c <memset@plt>
   1f878:	b	1f8b0 <flatcc_json_printer_union_field@@Base+0x1b0>
   1f87c:	ldr	r1, [r4, #16]
   1f880:	cmp	r0, r1
   1f884:	bcc	1f8bc <flatcc_json_printer_union_field@@Base+0x1bc>
   1f888:	ldr	r2, [r4, #44]	; 0x2c
   1f88c:	mov	r0, r4
   1f890:	mov	r1, #0
   1f894:	blx	r2
   1f898:	ldr	r0, [r4, #20]
   1f89c:	b	1f8bc <flatcc_json_printer_union_field@@Base+0x1bc>
   1f8a0:	mov	r1, #32
   1f8a4:	mov	r2, r7
   1f8a8:	bl	1293c <memset@plt>
   1f8ac:	mov	r6, r5
   1f8b0:	ldr	r0, [r4, #20]
   1f8b4:	add	r0, r0, r7
   1f8b8:	str	r0, [r4, #20]
   1f8bc:	mov	r1, #34	; 0x22
   1f8c0:	strb	r1, [r0]
   1f8c4:	ldrb	r2, [r4, #26]
   1f8c8:	ldr	r0, [r4, #20]
   1f8cc:	ldr	r1, [r4, #16]
   1f8d0:	cmp	r2, #0
   1f8d4:	addeq	r0, r0, #1
   1f8d8:	add	r2, r0, r8
   1f8dc:	str	r0, [r4, #20]
   1f8e0:	cmp	r2, r1
   1f8e4:	bcs	1f8fc <flatcc_json_printer_union_field@@Base+0x1fc>
   1f8e8:	mov	r1, sl
   1f8ec:	mov	r2, r8
   1f8f0:	bl	128ac <memcpy@plt>
   1f8f4:	mov	r7, r8
   1f8f8:	b	1f998 <flatcc_json_printer_union_field@@Base+0x298>
   1f8fc:	cmp	r0, r1
   1f900:	mov	r7, r8
   1f904:	str	r6, [sp]
   1f908:	bcc	1f924 <flatcc_json_printer_union_field@@Base+0x224>
   1f90c:	ldr	r2, [r4, #44]	; 0x2c
   1f910:	mov	r0, r4
   1f914:	mov	r1, #0
   1f918:	blx	r2
   1f91c:	ldr	r1, [r4, #16]
   1f920:	ldr	r0, [r4, #20]
   1f924:	sub	r8, r1, r0
   1f928:	mov	r6, sl
   1f92c:	mov	r5, r7
   1f930:	cmp	r8, r7
   1f934:	bcs	1f984 <flatcc_json_printer_union_field@@Base+0x284>
   1f938:	mov	r7, r5
   1f93c:	mov	r6, sl
   1f940:	mov	r1, r6
   1f944:	mov	r2, r8
   1f948:	bl	128ac <memcpy@plt>
   1f94c:	ldr	r0, [r4, #20]
   1f950:	ldr	r2, [r4, #44]	; 0x2c
   1f954:	mov	r1, #0
   1f958:	add	r0, r0, r8
   1f95c:	str	r0, [r4, #20]
   1f960:	mov	r0, r4
   1f964:	blx	r2
   1f968:	ldr	r1, [r4, #16]
   1f96c:	ldr	r0, [r4, #20]
   1f970:	sub	r7, r7, r8
   1f974:	add	r6, r6, r8
   1f978:	sub	r8, r1, r0
   1f97c:	cmp	r7, r8
   1f980:	bhi	1f940 <flatcc_json_printer_union_field@@Base+0x240>
   1f984:	mov	r1, r6
   1f988:	mov	r2, r7
   1f98c:	bl	128ac <memcpy@plt>
   1f990:	ldr	r6, [sp]
   1f994:	mov	r8, r5
   1f998:	ldr	r0, [r4, #20]
   1f99c:	ldr	r1, [r4, #16]
   1f9a0:	add	r0, r0, r7
   1f9a4:	add	r2, r0, #5
   1f9a8:	str	r0, [r4, #20]
   1f9ac:	cmp	r2, r1
   1f9b0:	bcs	1f9d0 <flatcc_json_printer_union_field@@Base+0x2d0>
   1f9b4:	mov	r1, #101	; 0x65
   1f9b8:	mov	r7, #5
   1f9bc:	strb	r1, [r0, #4]
   1f9c0:	movw	r1, #29791	; 0x745f
   1f9c4:	movt	r1, #28793	; 0x7079
   1f9c8:	str	r1, [r0]
   1f9cc:	b	1fa74 <flatcc_json_printer_union_field@@Base+0x374>
   1f9d0:	cmp	r0, r1
   1f9d4:	bcc	1f9f0 <flatcc_json_printer_union_field@@Base+0x2f0>
   1f9d8:	ldr	r2, [r4, #44]	; 0x2c
   1f9dc:	mov	r0, r4
   1f9e0:	mov	r1, #0
   1f9e4:	blx	r2
   1f9e8:	ldr	r1, [r4, #16]
   1f9ec:	ldr	r0, [r4, #20]
   1f9f0:	sub	r5, r1, r0
   1f9f4:	mov	r8, r6
   1f9f8:	cmp	r5, #4
   1f9fc:	bhi	1fa54 <flatcc_json_printer_union_field@@Base+0x354>
   1fa00:	ldr	r6, [pc, #500]	; 1fbfc <flatcc_json_printer_union_field@@Base+0x4fc>
   1fa04:	mov	r7, #5
   1fa08:	add	r6, pc, r6
   1fa0c:	mov	r1, r6
   1fa10:	mov	r2, r5
   1fa14:	bl	128ac <memcpy@plt>
   1fa18:	ldr	r0, [r4, #20]
   1fa1c:	ldr	r2, [r4, #44]	; 0x2c
   1fa20:	mov	r1, #0
   1fa24:	add	r0, r0, r5
   1fa28:	str	r0, [r4, #20]
   1fa2c:	mov	r0, r4
   1fa30:	blx	r2
   1fa34:	ldr	r1, [r4, #16]
   1fa38:	ldr	r0, [r4, #20]
   1fa3c:	sub	r7, r7, r5
   1fa40:	add	r6, r6, r5
   1fa44:	sub	r5, r1, r0
   1fa48:	cmp	r7, r5
   1fa4c:	bhi	1fa0c <flatcc_json_printer_union_field@@Base+0x30c>
   1fa50:	b	1fa60 <flatcc_json_printer_union_field@@Base+0x360>
   1fa54:	ldr	r6, [pc, #412]	; 1fbf8 <flatcc_json_printer_union_field@@Base+0x4f8>
   1fa58:	mov	r7, #5
   1fa5c:	add	r6, pc, r6
   1fa60:	mov	r1, r6
   1fa64:	mov	r2, r7
   1fa68:	bl	128ac <memcpy@plt>
   1fa6c:	mov	r6, r8
   1fa70:	ldr	r8, [fp, #8]
   1fa74:	ldr	r0, [r4, #20]
   1fa78:	add	r1, r0, r7
   1fa7c:	str	r1, [r4, #20]
   1fa80:	mov	r1, #34	; 0x22
   1fa84:	strb	r1, [r0, r7]
   1fa88:	ldrb	r0, [r4, #26]
   1fa8c:	ldr	r1, [r4, #20]
   1fa90:	cmp	r0, #0
   1fa94:	addeq	r1, r1, #1
   1fa98:	add	r0, r1, #1
   1fa9c:	str	r0, [r4, #20]
   1faa0:	mov	r0, #58	; 0x3a
   1faa4:	strb	r0, [r1]
   1faa8:	mov	r1, #32
   1faac:	ldr	r0, [r4, #20]
   1fab0:	strb	r1, [r0]
   1fab4:	ldrb	r1, [r4, #25]
   1fab8:	ldr	r0, [r4, #20]
   1fabc:	cmp	r1, #0
   1fac0:	addne	r0, r0, #1
   1fac4:	str	r0, [r4, #20]
   1fac8:	ldrb	r1, [r4, #27]
   1facc:	cmp	r1, #0
   1fad0:	beq	1fb28 <flatcc_json_printer_union_field@@Base+0x428>
   1fad4:	mov	r1, #0
   1fad8:	cmp	r6, #100	; 0x64
   1fadc:	bcc	1fb44 <flatcc_json_printer_union_field@@Base+0x444>
   1fae0:	strb	r1, [r0, #3]
   1fae4:	movw	r1, #34079	; 0x851f
   1fae8:	movt	r1, #20971	; 0x51eb
   1faec:	umull	r1, r2, r6, r1
   1faf0:	mov	r1, #48	; 0x30
   1faf4:	orr	r1, r1, r2, lsr #5
   1faf8:	strb	r1, [r0]
   1fafc:	lsr	r1, r2, #5
   1fb00:	mov	r2, #100	; 0x64
   1fb04:	mls	r1, r1, r2, r6
   1fb08:	ldr	r2, [pc, #240]	; 1fc00 <flatcc_json_printer_union_field@@Base+0x500>
   1fb0c:	uxtb	r1, r1
   1fb10:	add	r2, pc, r2
   1fb14:	add	r1, r2, r1, lsl #1
   1fb18:	ldrh	r1, [r1]
   1fb1c:	strh	r1, [r0, #1]
   1fb20:	mov	r0, #3
   1fb24:	b	1fb94 <flatcc_json_printer_union_field@@Base+0x494>
   1fb28:	ldr	r2, [fp, #12]
   1fb2c:	mov	r0, r4
   1fb30:	mov	r1, r6
   1fb34:	blx	r2
   1fb38:	cmp	r6, #0
   1fb3c:	bne	1fba8 <flatcc_json_printer_union_field@@Base+0x4a8>
   1fb40:	b	1f770 <flatcc_json_printer_union_field@@Base+0x70>
   1fb44:	cmp	r6, #10
   1fb48:	bcc	1fb84 <flatcc_json_printer_union_field@@Base+0x484>
   1fb4c:	strb	r1, [r0, #2]
   1fb50:	movw	r1, #34079	; 0x851f
   1fb54:	movt	r1, #20971	; 0x51eb
   1fb58:	umull	r1, r2, r6, r1
   1fb5c:	lsr	r1, r2, #5
   1fb60:	mov	r2, #100	; 0x64
   1fb64:	mls	r1, r1, r2, r6
   1fb68:	ldr	r2, [pc, #148]	; 1fc04 <flatcc_json_printer_union_field@@Base+0x504>
   1fb6c:	add	r2, pc, r2
   1fb70:	add	r1, r2, r1, lsl #1
   1fb74:	ldrh	r1, [r1]
   1fb78:	strh	r1, [r0]
   1fb7c:	mov	r0, #2
   1fb80:	b	1fb94 <flatcc_json_printer_union_field@@Base+0x494>
   1fb84:	strb	r1, [r0, #1]
   1fb88:	add	r1, r6, #48	; 0x30
   1fb8c:	strb	r1, [r0]
   1fb90:	mov	r0, #1
   1fb94:	ldr	r1, [r4, #20]
   1fb98:	add	r0, r1, r0
   1fb9c:	str	r0, [r4, #20]
   1fba0:	cmp	r6, #0
   1fba4:	beq	1f770 <flatcc_json_printer_union_field@@Base+0x70>
   1fba8:	ldr	r0, [r4, #20]
   1fbac:	ldr	r5, [fp, #16]
   1fbb0:	mov	r2, r8
   1fbb4:	add	r1, r0, #1
   1fbb8:	str	r1, [r4, #20]
   1fbbc:	mov	r1, #44	; 0x2c
   1fbc0:	strb	r1, [r0]
   1fbc4:	mov	r0, r4
   1fbc8:	mov	r1, sl
   1fbcc:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1fbd0:	ldr	r0, [r9, #12]
   1fbd4:	ldr	r1, [sp, #4]
   1fbd8:	strb	r6, [sp, #16]
   1fbdc:	str	r1, [sp, #8]
   1fbe0:	str	r0, [sp, #12]
   1fbe4:	add	r1, sp, #8
   1fbe8:	mov	r0, r4
   1fbec:	blx	r5
   1fbf0:	sub	sp, fp, #28
   1fbf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fbf8:	strheq	r2, [r0], -r8
   1fbfc:	andeq	r2, r0, ip, lsl #2
   1fc00:	andeq	r2, r0, sl, lsl #5
   1fc04:	andeq	r2, r0, lr, lsr #4

0001fc08 <flatcc_json_printer_union_table@@Base>:
   1fc08:	push	{r4, r5, r6, sl, fp, lr}
   1fc0c:	add	fp, sp, #16
   1fc10:	sub	sp, sp, #24
   1fc14:	mov	r4, r0
   1fc18:	ldr	r0, [r1, #4]
   1fc1c:	subs	r0, r0, #1
   1fc20:	beq	1fd64 <flatcc_json_printer_union_table@@Base+0x15c>
   1fc24:	ldr	r1, [r1]
   1fc28:	ldr	r6, [r4, #32]
   1fc2c:	ldr	r3, [r1]
   1fc30:	add	r6, r6, #1
   1fc34:	add	r1, r1, r3
   1fc38:	ldr	r3, [r4, #20]
   1fc3c:	str	r6, [r4, #32]
   1fc40:	add	r6, r3, #1
   1fc44:	str	r6, [r4, #20]
   1fc48:	mov	r6, #123	; 0x7b
   1fc4c:	strb	r6, [r3]
   1fc50:	str	r0, [sp, #16]
   1fc54:	mov	r0, #0
   1fc58:	str	r0, [sp, #20]
   1fc5c:	str	r1, [sp, #4]
   1fc60:	ldr	r0, [r1]
   1fc64:	sub	r3, r1, r0
   1fc68:	str	r3, [sp, #8]
   1fc6c:	ldrh	r0, [r1, -r0]
   1fc70:	add	r1, sp, #4
   1fc74:	str	r0, [sp, #12]
   1fc78:	mov	r0, r4
   1fc7c:	blx	r2
   1fc80:	ldrb	r1, [r4, #25]
   1fc84:	ldr	r0, [r4, #20]
   1fc88:	cmp	r1, #0
   1fc8c:	beq	1fd4c <flatcc_json_printer_union_table@@Base+0x144>
   1fc90:	add	r1, r0, #1
   1fc94:	str	r1, [r4, #20]
   1fc98:	mov	r1, #10
   1fc9c:	strb	r1, [r0]
   1fca0:	ldr	r0, [r4, #32]
   1fca4:	sub	r2, r0, #1
   1fca8:	str	r2, [r4, #32]
   1fcac:	ldrb	r3, [r4, #25]
   1fcb0:	ldr	r0, [r4, #20]
   1fcb4:	ldr	r1, [r4, #16]
   1fcb8:	mla	r6, r2, r3, r0
   1fcbc:	mul	r5, r2, r3
   1fcc0:	cmp	r6, r1
   1fcc4:	bls	1fd34 <flatcc_json_printer_union_table@@Base+0x12c>
   1fcc8:	cmp	r0, r1
   1fccc:	bcc	1fce8 <flatcc_json_printer_union_table@@Base+0xe0>
   1fcd0:	ldr	r2, [r4, #44]	; 0x2c
   1fcd4:	mov	r0, r4
   1fcd8:	mov	r1, #0
   1fcdc:	blx	r2
   1fce0:	ldr	r1, [r4, #16]
   1fce4:	ldr	r0, [r4, #20]
   1fce8:	sub	r6, r1, r0
   1fcec:	cmp	r6, r5
   1fcf0:	bcs	1fd34 <flatcc_json_printer_union_table@@Base+0x12c>
   1fcf4:	mov	r1, #32
   1fcf8:	mov	r2, r6
   1fcfc:	bl	1293c <memset@plt>
   1fd00:	ldr	r0, [r4, #20]
   1fd04:	ldr	r2, [r4, #44]	; 0x2c
   1fd08:	mov	r1, #0
   1fd0c:	add	r0, r0, r6
   1fd10:	str	r0, [r4, #20]
   1fd14:	mov	r0, r4
   1fd18:	blx	r2
   1fd1c:	ldr	r1, [r4, #16]
   1fd20:	ldr	r0, [r4, #20]
   1fd24:	sub	r5, r5, r6
   1fd28:	sub	r6, r1, r0
   1fd2c:	cmp	r5, r6
   1fd30:	bhi	1fcf4 <flatcc_json_printer_union_table@@Base+0xec>
   1fd34:	mov	r1, #32
   1fd38:	mov	r2, r5
   1fd3c:	bl	1293c <memset@plt>
   1fd40:	ldr	r0, [r4, #20]
   1fd44:	add	r0, r0, r5
   1fd48:	str	r0, [r4, #20]
   1fd4c:	add	r1, r0, #1
   1fd50:	str	r1, [r4, #20]
   1fd54:	mov	r1, #125	; 0x7d
   1fd58:	strb	r1, [r0]
   1fd5c:	sub	sp, fp, #16
   1fd60:	pop	{r4, r5, r6, sl, fp, pc}
   1fd64:	ldr	r0, [r4, #36]	; 0x24
   1fd68:	cmp	r0, #0
   1fd6c:	beq	1fd78 <flatcc_json_printer_union_table@@Base+0x170>
   1fd70:	sub	sp, fp, #16
   1fd74:	pop	{r4, r5, r6, sl, fp, pc}
   1fd78:	mov	r0, #2
   1fd7c:	str	r0, [r4, #36]	; 0x24
   1fd80:	sub	sp, fp, #16
   1fd84:	pop	{r4, r5, r6, sl, fp, pc}

0001fd88 <flatcc_json_printer_union_struct@@Base>:
   1fd88:	push	{r4, r5, r6, sl, fp, lr}
   1fd8c:	add	fp, sp, #16
   1fd90:	mov	r4, r0
   1fd94:	ldr	r0, [r0, #20]
   1fd98:	ldr	r3, [r4, #32]
   1fd9c:	add	r3, r3, #1
   1fda0:	str	r3, [r4, #32]
   1fda4:	add	r3, r0, #1
   1fda8:	str	r3, [r4, #20]
   1fdac:	mov	r3, #123	; 0x7b
   1fdb0:	strb	r3, [r0]
   1fdb4:	ldr	r0, [r1]
   1fdb8:	ldr	r1, [r0]
   1fdbc:	add	r1, r0, r1
   1fdc0:	mov	r0, r4
   1fdc4:	blx	r2
   1fdc8:	ldrb	r1, [r4, #25]
   1fdcc:	ldr	r0, [r4, #20]
   1fdd0:	cmp	r1, #0
   1fdd4:	beq	1fe94 <flatcc_json_printer_union_struct@@Base+0x10c>
   1fdd8:	add	r1, r0, #1
   1fddc:	str	r1, [r4, #20]
   1fde0:	mov	r1, #10
   1fde4:	strb	r1, [r0]
   1fde8:	ldr	r0, [r4, #32]
   1fdec:	sub	r2, r0, #1
   1fdf0:	str	r2, [r4, #32]
   1fdf4:	ldrb	r3, [r4, #25]
   1fdf8:	ldr	r0, [r4, #20]
   1fdfc:	ldr	r1, [r4, #16]
   1fe00:	mla	r6, r2, r3, r0
   1fe04:	mul	r5, r2, r3
   1fe08:	cmp	r6, r1
   1fe0c:	bls	1fe7c <flatcc_json_printer_union_struct@@Base+0xf4>
   1fe10:	cmp	r0, r1
   1fe14:	bcc	1fe30 <flatcc_json_printer_union_struct@@Base+0xa8>
   1fe18:	ldr	r2, [r4, #44]	; 0x2c
   1fe1c:	mov	r0, r4
   1fe20:	mov	r1, #0
   1fe24:	blx	r2
   1fe28:	ldr	r1, [r4, #16]
   1fe2c:	ldr	r0, [r4, #20]
   1fe30:	sub	r6, r1, r0
   1fe34:	cmp	r6, r5
   1fe38:	bcs	1fe7c <flatcc_json_printer_union_struct@@Base+0xf4>
   1fe3c:	mov	r1, #32
   1fe40:	mov	r2, r6
   1fe44:	bl	1293c <memset@plt>
   1fe48:	ldr	r0, [r4, #20]
   1fe4c:	ldr	r2, [r4, #44]	; 0x2c
   1fe50:	mov	r1, #0
   1fe54:	add	r0, r0, r6
   1fe58:	str	r0, [r4, #20]
   1fe5c:	mov	r0, r4
   1fe60:	blx	r2
   1fe64:	ldr	r1, [r4, #16]
   1fe68:	ldr	r0, [r4, #20]
   1fe6c:	sub	r5, r5, r6
   1fe70:	sub	r6, r1, r0
   1fe74:	cmp	r5, r6
   1fe78:	bhi	1fe3c <flatcc_json_printer_union_struct@@Base+0xb4>
   1fe7c:	mov	r1, #32
   1fe80:	mov	r2, r5
   1fe84:	bl	1293c <memset@plt>
   1fe88:	ldr	r0, [r4, #20]
   1fe8c:	add	r0, r0, r5
   1fe90:	str	r0, [r4, #20]
   1fe94:	add	r1, r0, #1
   1fe98:	str	r1, [r4, #20]
   1fe9c:	mov	r1, #125	; 0x7d
   1fea0:	strb	r1, [r0]
   1fea4:	pop	{r4, r5, r6, sl, fp, pc}

0001fea8 <flatcc_json_printer_union_string@@Base>:
   1fea8:	ldr	r1, [r1]
   1feac:	ldr	r2, [r1]
   1feb0:	ldr	r2, [r1, r2]!
   1feb4:	add	r1, r1, #4
   1feb8:	b	150f0 <flatcc_json_printer_string@@Base+0x4>

0001febc <flatcc_json_printer_embedded_struct_field@@Base>:
   1febc:	push	{r4, r5, r6, r7, fp, lr}
   1fec0:	add	fp, sp, #16
   1fec4:	add	r7, fp, #8
   1fec8:	mov	r5, r3
   1fecc:	mov	r3, r1
   1fed0:	mov	r6, r2
   1fed4:	mov	r4, r0
   1fed8:	ldm	r7, {r1, r2, r7}
   1fedc:	cmp	r3, #0
   1fee0:	beq	1fef8 <flatcc_json_printer_embedded_struct_field@@Base+0x3c>
   1fee4:	ldr	r0, [r4, #20]
   1fee8:	add	r3, r0, #1
   1feec:	str	r3, [r4, #20]
   1fef0:	mov	r3, #44	; 0x2c
   1fef4:	strb	r3, [r0]
   1fef8:	mov	r0, r4
   1fefc:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   1ff00:	ldr	r1, [r4, #32]
   1ff04:	ldr	r0, [r4, #20]
   1ff08:	add	r1, r1, #1
   1ff0c:	str	r1, [r4, #32]
   1ff10:	add	r1, r0, #1
   1ff14:	str	r1, [r4, #20]
   1ff18:	mov	r1, #123	; 0x7b
   1ff1c:	strb	r1, [r0]
   1ff20:	add	r1, r6, r5
   1ff24:	mov	r0, r4
   1ff28:	blx	r7
   1ff2c:	ldrb	r1, [r4, #25]
   1ff30:	ldr	r0, [r4, #20]
   1ff34:	cmp	r1, #0
   1ff38:	beq	1fff8 <flatcc_json_printer_embedded_struct_field@@Base+0x13c>
   1ff3c:	add	r1, r0, #1
   1ff40:	str	r1, [r4, #20]
   1ff44:	mov	r1, #10
   1ff48:	strb	r1, [r0]
   1ff4c:	ldr	r0, [r4, #32]
   1ff50:	sub	r2, r0, #1
   1ff54:	str	r2, [r4, #32]
   1ff58:	ldrb	r3, [r4, #25]
   1ff5c:	ldr	r0, [r4, #20]
   1ff60:	ldr	r1, [r4, #16]
   1ff64:	mla	r7, r2, r3, r0
   1ff68:	mul	r5, r2, r3
   1ff6c:	cmp	r7, r1
   1ff70:	bls	1ffe0 <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   1ff74:	cmp	r0, r1
   1ff78:	bcc	1ff94 <flatcc_json_printer_embedded_struct_field@@Base+0xd8>
   1ff7c:	ldr	r2, [r4, #44]	; 0x2c
   1ff80:	mov	r0, r4
   1ff84:	mov	r1, #0
   1ff88:	blx	r2
   1ff8c:	ldr	r1, [r4, #16]
   1ff90:	ldr	r0, [r4, #20]
   1ff94:	sub	r6, r1, r0
   1ff98:	cmp	r6, r5
   1ff9c:	bcs	1ffe0 <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   1ffa0:	mov	r1, #32
   1ffa4:	mov	r2, r6
   1ffa8:	bl	1293c <memset@plt>
   1ffac:	ldr	r0, [r4, #20]
   1ffb0:	ldr	r2, [r4, #44]	; 0x2c
   1ffb4:	mov	r1, #0
   1ffb8:	add	r0, r0, r6
   1ffbc:	str	r0, [r4, #20]
   1ffc0:	mov	r0, r4
   1ffc4:	blx	r2
   1ffc8:	ldr	r1, [r4, #16]
   1ffcc:	ldr	r0, [r4, #20]
   1ffd0:	sub	r5, r5, r6
   1ffd4:	sub	r6, r1, r0
   1ffd8:	cmp	r5, r6
   1ffdc:	bhi	1ffa0 <flatcc_json_printer_embedded_struct_field@@Base+0xe4>
   1ffe0:	mov	r1, #32
   1ffe4:	mov	r2, r5
   1ffe8:	bl	1293c <memset@plt>
   1ffec:	ldr	r0, [r4, #20]
   1fff0:	add	r0, r0, r5
   1fff4:	str	r0, [r4, #20]
   1fff8:	add	r1, r0, #1
   1fffc:	str	r1, [r4, #20]
   20000:	mov	r1, #125	; 0x7d
   20004:	strb	r1, [r0]
   20008:	pop	{r4, r5, r6, r7, fp, pc}

0002000c <flatcc_json_printer_struct_field@@Base>:
   2000c:	push	{r4, r5, r6, r7, fp, lr}
   20010:	add	fp, sp, #16
   20014:	mov	r4, r0
   20018:	mov	r0, #4
   2001c:	add	r0, r0, r2, lsl #1
   20020:	ldr	r2, [r1, #8]
   20024:	cmp	r0, r2
   20028:	popge	{r4, r5, r6, r7, fp, pc}
   2002c:	ldr	r2, [r1, #4]
   20030:	add	r0, r2, r0
   20034:	ldrh	r0, [r0]
   20038:	cmp	r0, #0
   2003c:	ldrne	r2, [r1]
   20040:	addsne	r5, r2, r0
   20044:	bne	2004c <flatcc_json_printer_struct_field@@Base+0x40>
   20048:	pop	{r4, r5, r6, r7, fp, pc}
   2004c:	ldr	r0, [r1, #16]
   20050:	ldr	r7, [fp, #12]
   20054:	ldr	r2, [fp, #8]
   20058:	add	r6, r0, #1
   2005c:	cmp	r0, #0
   20060:	str	r6, [r1, #16]
   20064:	beq	2007c <flatcc_json_printer_struct_field@@Base+0x70>
   20068:	ldr	r0, [r4, #20]
   2006c:	add	r1, r0, #1
   20070:	str	r1, [r4, #20]
   20074:	mov	r1, #44	; 0x2c
   20078:	strb	r1, [r0]
   2007c:	mov	r0, r4
   20080:	mov	r1, r3
   20084:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   20088:	ldr	r1, [r4, #32]
   2008c:	ldr	r0, [r4, #20]
   20090:	add	r1, r1, #1
   20094:	str	r1, [r4, #32]
   20098:	add	r1, r0, #1
   2009c:	str	r1, [r4, #20]
   200a0:	mov	r1, #123	; 0x7b
   200a4:	strb	r1, [r0]
   200a8:	mov	r0, r4
   200ac:	mov	r1, r5
   200b0:	blx	r7
   200b4:	ldrb	r1, [r4, #25]
   200b8:	ldr	r0, [r4, #20]
   200bc:	cmp	r1, #0
   200c0:	beq	20180 <flatcc_json_printer_struct_field@@Base+0x174>
   200c4:	add	r1, r0, #1
   200c8:	str	r1, [r4, #20]
   200cc:	mov	r1, #10
   200d0:	strb	r1, [r0]
   200d4:	ldr	r0, [r4, #32]
   200d8:	sub	r2, r0, #1
   200dc:	str	r2, [r4, #32]
   200e0:	ldrb	r3, [r4, #25]
   200e4:	ldr	r0, [r4, #20]
   200e8:	ldr	r1, [r4, #16]
   200ec:	mla	r7, r2, r3, r0
   200f0:	mul	r5, r2, r3
   200f4:	cmp	r7, r1
   200f8:	bls	20168 <flatcc_json_printer_struct_field@@Base+0x15c>
   200fc:	cmp	r0, r1
   20100:	bcc	2011c <flatcc_json_printer_struct_field@@Base+0x110>
   20104:	ldr	r2, [r4, #44]	; 0x2c
   20108:	mov	r0, r4
   2010c:	mov	r1, #0
   20110:	blx	r2
   20114:	ldr	r1, [r4, #16]
   20118:	ldr	r0, [r4, #20]
   2011c:	sub	r6, r1, r0
   20120:	cmp	r6, r5
   20124:	bcs	20168 <flatcc_json_printer_struct_field@@Base+0x15c>
   20128:	mov	r1, #32
   2012c:	mov	r2, r6
   20130:	bl	1293c <memset@plt>
   20134:	ldr	r0, [r4, #20]
   20138:	ldr	r2, [r4, #44]	; 0x2c
   2013c:	mov	r1, #0
   20140:	add	r0, r0, r6
   20144:	str	r0, [r4, #20]
   20148:	mov	r0, r4
   2014c:	blx	r2
   20150:	ldr	r1, [r4, #16]
   20154:	ldr	r0, [r4, #20]
   20158:	sub	r5, r5, r6
   2015c:	sub	r6, r1, r0
   20160:	cmp	r5, r6
   20164:	bhi	20128 <flatcc_json_printer_struct_field@@Base+0x11c>
   20168:	mov	r1, #32
   2016c:	mov	r2, r5
   20170:	bl	1293c <memset@plt>
   20174:	ldr	r0, [r4, #20]
   20178:	add	r0, r0, r5
   2017c:	str	r0, [r4, #20]
   20180:	add	r1, r0, #1
   20184:	str	r1, [r4, #20]
   20188:	mov	r1, #125	; 0x7d
   2018c:	strb	r1, [r0]
   20190:	pop	{r4, r5, r6, r7, fp, pc}

00020194 <flatcc_json_printer_struct_as_root@@Base>:
   20194:	push	{r4, r5, r6, sl, fp, lr}
   20198:	add	fp, sp, #16
   2019c:	sub	sp, sp, #8
   201a0:	cmp	r1, #0
   201a4:	mov	r4, r0
   201a8:	mov	r0, #0
   201ac:	cmpne	r2, #7
   201b0:	str	r0, [sp, #4]
   201b4:	bls	2036c <flatcc_json_printer_struct_as_root@@Base+0x1d8>
   201b8:	mov	r5, r1
   201bc:	cmp	r3, #0
   201c0:	beq	201ec <flatcc_json_printer_struct_as_root@@Base+0x58>
   201c4:	add	r0, sp, #4
   201c8:	mov	r1, r3
   201cc:	mov	r2, #4
   201d0:	bl	12948 <strncpy@plt>
   201d4:	ldr	r0, [sp, #4]
   201d8:	cmp	r0, #0
   201dc:	beq	201ec <flatcc_json_printer_struct_as_root@@Base+0x58>
   201e0:	ldr	r1, [r5, #4]
   201e4:	cmp	r1, r0
   201e8:	bne	2039c <flatcc_json_printer_struct_as_root@@Base+0x208>
   201ec:	ldr	r1, [r4, #32]
   201f0:	ldr	r0, [r4, #20]
   201f4:	ldr	r2, [fp, #8]
   201f8:	add	r1, r1, #1
   201fc:	str	r1, [r4, #32]
   20200:	add	r1, r0, #1
   20204:	str	r1, [r4, #20]
   20208:	mov	r1, #123	; 0x7b
   2020c:	strb	r1, [r0]
   20210:	ldr	r0, [r5]
   20214:	add	r1, r5, r0
   20218:	mov	r0, r4
   2021c:	blx	r2
   20220:	ldrb	r1, [r4, #25]
   20224:	ldr	r0, [r4, #20]
   20228:	cmp	r1, #0
   2022c:	beq	202ec <flatcc_json_printer_struct_as_root@@Base+0x158>
   20230:	add	r1, r0, #1
   20234:	str	r1, [r4, #20]
   20238:	mov	r1, #10
   2023c:	strb	r1, [r0]
   20240:	ldr	r0, [r4, #32]
   20244:	sub	r2, r0, #1
   20248:	str	r2, [r4, #32]
   2024c:	ldrb	r3, [r4, #25]
   20250:	ldr	r0, [r4, #20]
   20254:	ldr	r1, [r4, #16]
   20258:	mla	r6, r2, r3, r0
   2025c:	mul	r5, r2, r3
   20260:	cmp	r6, r1
   20264:	bls	202d4 <flatcc_json_printer_struct_as_root@@Base+0x140>
   20268:	cmp	r0, r1
   2026c:	bcc	20288 <flatcc_json_printer_struct_as_root@@Base+0xf4>
   20270:	ldr	r2, [r4, #44]	; 0x2c
   20274:	mov	r0, r4
   20278:	mov	r1, #0
   2027c:	blx	r2
   20280:	ldr	r1, [r4, #16]
   20284:	ldr	r0, [r4, #20]
   20288:	sub	r6, r1, r0
   2028c:	cmp	r6, r5
   20290:	bcs	202d4 <flatcc_json_printer_struct_as_root@@Base+0x140>
   20294:	mov	r1, #32
   20298:	mov	r2, r6
   2029c:	bl	1293c <memset@plt>
   202a0:	ldr	r0, [r4, #20]
   202a4:	ldr	r2, [r4, #44]	; 0x2c
   202a8:	mov	r1, #0
   202ac:	add	r0, r0, r6
   202b0:	str	r0, [r4, #20]
   202b4:	mov	r0, r4
   202b8:	blx	r2
   202bc:	ldr	r1, [r4, #16]
   202c0:	ldr	r0, [r4, #20]
   202c4:	sub	r5, r5, r6
   202c8:	sub	r6, r1, r0
   202cc:	cmp	r5, r6
   202d0:	bhi	20294 <flatcc_json_printer_struct_as_root@@Base+0x100>
   202d4:	mov	r1, #32
   202d8:	mov	r2, r5
   202dc:	bl	1293c <memset@plt>
   202e0:	ldr	r0, [r4, #20]
   202e4:	add	r0, r0, r5
   202e8:	str	r0, [r4, #20]
   202ec:	add	r1, r0, #1
   202f0:	str	r1, [r4, #20]
   202f4:	mov	r1, #125	; 0x7d
   202f8:	strb	r1, [r0]
   202fc:	ldrb	r0, [r4, #25]
   20300:	cmp	r0, #0
   20304:	beq	20328 <flatcc_json_printer_struct_as_root@@Base+0x194>
   20308:	ldr	r0, [r4, #32]
   2030c:	cmp	r0, #0
   20310:	bne	20328 <flatcc_json_printer_struct_as_root@@Base+0x194>
   20314:	ldr	r0, [r4, #20]
   20318:	add	r1, r0, #1
   2031c:	str	r1, [r4, #20]
   20320:	mov	r1, #10
   20324:	strb	r1, [r0]
   20328:	ldr	r2, [r4, #44]	; 0x2c
   2032c:	mov	r0, r4
   20330:	mov	r1, #1
   20334:	blx	r2
   20338:	ldr	r1, [r4, #36]	; 0x24
   2033c:	mvn	r0, #0
   20340:	cmp	r1, #0
   20344:	beq	20350 <flatcc_json_printer_struct_as_root@@Base+0x1bc>
   20348:	sub	sp, fp, #16
   2034c:	pop	{r4, r5, r6, sl, fp, pc}
   20350:	ldr	r1, [r4, #12]
   20354:	ldr	r2, [r4, #20]
   20358:	ldr	r0, [r4]
   2035c:	add	r1, r2, r1
   20360:	sub	r0, r1, r0
   20364:	sub	sp, fp, #16
   20368:	pop	{r4, r5, r6, sl, fp, pc}
   2036c:	ldr	r0, [r4, #36]	; 0x24
   20370:	movw	r2, #1019	; 0x3fb
   20374:	cmp	r0, #0
   20378:	moveq	r0, #1
   2037c:	streq	r0, [r4, #36]	; 0x24
   20380:	ldr	r0, [pc, #68]	; 203cc <flatcc_json_printer_struct_as_root@@Base+0x238>
   20384:	ldr	r1, [pc, #68]	; 203d0 <flatcc_json_printer_struct_as_root@@Base+0x23c>
   20388:	ldr	r3, [pc, #68]	; 203d4 <flatcc_json_printer_struct_as_root@@Base+0x240>
   2038c:	add	r0, pc, r0
   20390:	add	r1, pc, r1
   20394:	add	r3, pc, r3
   20398:	bl	12990 <__assert_fail@plt>
   2039c:	ldr	r0, [r4, #36]	; 0x24
   203a0:	movw	r2, #1028	; 0x404
   203a4:	cmp	r0, #0
   203a8:	moveq	r0, #1
   203ac:	streq	r0, [r4, #36]	; 0x24
   203b0:	ldr	r0, [pc, #32]	; 203d8 <flatcc_json_printer_struct_as_root@@Base+0x244>
   203b4:	ldr	r1, [pc, #32]	; 203dc <flatcc_json_printer_struct_as_root@@Base+0x248>
   203b8:	ldr	r3, [pc, #32]	; 203e0 <flatcc_json_printer_struct_as_root@@Base+0x24c>
   203bc:	add	r0, pc, r0
   203c0:	add	r1, pc, r1
   203c4:	add	r3, pc, r3
   203c8:	bl	12990 <__assert_fail@plt>
   203cc:			; <UNDEFINED> instruction: 0x00001bb1
   203d0:	andeq	r1, r0, r8, asr r6
   203d4:	andeq	r1, r0, r8, asr #23
   203d8:	andeq	r1, r0, pc, ror #23
   203dc:	andeq	r1, r0, r8, lsr #12
   203e0:	muleq	r0, r8, fp

000203e4 <flatcc_json_printer_table_as_root@@Base>:
   203e4:	push	{r4, r5, r6, sl, fp, lr}
   203e8:	add	fp, sp, #16
   203ec:	sub	sp, sp, #24
   203f0:	cmp	r1, #0
   203f4:	mov	r4, r0
   203f8:	mov	r0, #0
   203fc:	cmpne	r2, #7
   20400:	str	r0, [sp, #4]
   20404:	bls	205e8 <flatcc_json_printer_table_as_root@@Base+0x204>
   20408:	mov	r5, r1
   2040c:	cmp	r3, #0
   20410:	beq	2043c <flatcc_json_printer_table_as_root@@Base+0x58>
   20414:	add	r0, sp, #4
   20418:	mov	r1, r3
   2041c:	mov	r2, #4
   20420:	bl	12948 <strncpy@plt>
   20424:	ldr	r0, [sp, #4]
   20428:	cmp	r0, #0
   2042c:	beq	2043c <flatcc_json_printer_table_as_root@@Base+0x58>
   20430:	ldr	r1, [r5, #4]
   20434:	cmp	r1, r0
   20438:	bne	20618 <flatcc_json_printer_table_as_root@@Base+0x234>
   2043c:	ldr	r3, [r4, #32]
   20440:	ldr	r1, [r4, #20]
   20444:	ldr	r0, [r5]
   20448:	ldr	r2, [fp, #8]
   2044c:	add	r3, r3, #1
   20450:	str	r3, [r4, #32]
   20454:	add	r3, r1, #1
   20458:	str	r3, [r4, #20]
   2045c:	mov	r3, #123	; 0x7b
   20460:	strb	r3, [r1]
   20464:	mov	r1, #99	; 0x63
   20468:	str	r1, [sp, #16]
   2046c:	mov	r1, #0
   20470:	str	r1, [sp, #20]
   20474:	add	r1, r5, r0
   20478:	str	r1, [sp, #4]
   2047c:	ldr	r0, [r5, r0]
   20480:	sub	r3, r1, r0
   20484:	str	r3, [sp, #8]
   20488:	ldrh	r0, [r1, -r0]
   2048c:	add	r1, sp, #4
   20490:	str	r0, [sp, #12]
   20494:	mov	r0, r4
   20498:	blx	r2
   2049c:	ldrb	r1, [r4, #25]
   204a0:	ldr	r0, [r4, #20]
   204a4:	cmp	r1, #0
   204a8:	beq	20568 <flatcc_json_printer_table_as_root@@Base+0x184>
   204ac:	add	r1, r0, #1
   204b0:	str	r1, [r4, #20]
   204b4:	mov	r1, #10
   204b8:	strb	r1, [r0]
   204bc:	ldr	r0, [r4, #32]
   204c0:	sub	r2, r0, #1
   204c4:	str	r2, [r4, #32]
   204c8:	ldrb	r3, [r4, #25]
   204cc:	ldr	r0, [r4, #20]
   204d0:	ldr	r1, [r4, #16]
   204d4:	mla	r6, r2, r3, r0
   204d8:	mul	r5, r2, r3
   204dc:	cmp	r6, r1
   204e0:	bls	20550 <flatcc_json_printer_table_as_root@@Base+0x16c>
   204e4:	cmp	r0, r1
   204e8:	bcc	20504 <flatcc_json_printer_table_as_root@@Base+0x120>
   204ec:	ldr	r2, [r4, #44]	; 0x2c
   204f0:	mov	r0, r4
   204f4:	mov	r1, #0
   204f8:	blx	r2
   204fc:	ldr	r1, [r4, #16]
   20500:	ldr	r0, [r4, #20]
   20504:	sub	r6, r1, r0
   20508:	cmp	r6, r5
   2050c:	bcs	20550 <flatcc_json_printer_table_as_root@@Base+0x16c>
   20510:	mov	r1, #32
   20514:	mov	r2, r6
   20518:	bl	1293c <memset@plt>
   2051c:	ldr	r0, [r4, #20]
   20520:	ldr	r2, [r4, #44]	; 0x2c
   20524:	mov	r1, #0
   20528:	add	r0, r0, r6
   2052c:	str	r0, [r4, #20]
   20530:	mov	r0, r4
   20534:	blx	r2
   20538:	ldr	r1, [r4, #16]
   2053c:	ldr	r0, [r4, #20]
   20540:	sub	r5, r5, r6
   20544:	sub	r6, r1, r0
   20548:	cmp	r5, r6
   2054c:	bhi	20510 <flatcc_json_printer_table_as_root@@Base+0x12c>
   20550:	mov	r1, #32
   20554:	mov	r2, r5
   20558:	bl	1293c <memset@plt>
   2055c:	ldr	r0, [r4, #20]
   20560:	add	r0, r0, r5
   20564:	str	r0, [r4, #20]
   20568:	add	r1, r0, #1
   2056c:	str	r1, [r4, #20]
   20570:	mov	r1, #125	; 0x7d
   20574:	strb	r1, [r0]
   20578:	ldrb	r0, [r4, #25]
   2057c:	cmp	r0, #0
   20580:	beq	205a4 <flatcc_json_printer_table_as_root@@Base+0x1c0>
   20584:	ldr	r0, [r4, #32]
   20588:	cmp	r0, #0
   2058c:	bne	205a4 <flatcc_json_printer_table_as_root@@Base+0x1c0>
   20590:	ldr	r0, [r4, #20]
   20594:	add	r1, r0, #1
   20598:	str	r1, [r4, #20]
   2059c:	mov	r1, #10
   205a0:	strb	r1, [r0]
   205a4:	ldr	r2, [r4, #44]	; 0x2c
   205a8:	mov	r0, r4
   205ac:	mov	r1, #1
   205b0:	blx	r2
   205b4:	ldr	r1, [r4, #36]	; 0x24
   205b8:	mvn	r0, #0
   205bc:	cmp	r1, #0
   205c0:	beq	205cc <flatcc_json_printer_table_as_root@@Base+0x1e8>
   205c4:	sub	sp, fp, #16
   205c8:	pop	{r4, r5, r6, sl, fp, pc}
   205cc:	ldr	r1, [r4, #12]
   205d0:	ldr	r2, [r4, #20]
   205d4:	ldr	r0, [r4]
   205d8:	add	r1, r2, r1
   205dc:	sub	r0, r1, r0
   205e0:	sub	sp, fp, #16
   205e4:	pop	{r4, r5, r6, sl, fp, pc}
   205e8:	ldr	r0, [r4, #36]	; 0x24
   205ec:	movw	r2, #1019	; 0x3fb
   205f0:	cmp	r0, #0
   205f4:	moveq	r0, #1
   205f8:	streq	r0, [r4, #36]	; 0x24
   205fc:	ldr	r0, [pc, #68]	; 20648 <flatcc_json_printer_table_as_root@@Base+0x264>
   20600:	ldr	r1, [pc, #68]	; 2064c <flatcc_json_printer_table_as_root@@Base+0x268>
   20604:	ldr	r3, [pc, #68]	; 20650 <flatcc_json_printer_table_as_root@@Base+0x26c>
   20608:	add	r0, pc, r0
   2060c:	add	r1, pc, r1
   20610:	add	r3, pc, r3
   20614:	bl	12990 <__assert_fail@plt>
   20618:	ldr	r0, [r4, #36]	; 0x24
   2061c:	movw	r2, #1028	; 0x404
   20620:	cmp	r0, #0
   20624:	moveq	r0, #1
   20628:	streq	r0, [r4, #36]	; 0x24
   2062c:	ldr	r0, [pc, #32]	; 20654 <flatcc_json_printer_table_as_root@@Base+0x270>
   20630:	ldr	r1, [pc, #32]	; 20658 <flatcc_json_printer_table_as_root@@Base+0x274>
   20634:	ldr	r3, [pc, #32]	; 2065c <flatcc_json_printer_table_as_root@@Base+0x278>
   20638:	add	r0, pc, r0
   2063c:	add	r1, pc, r1
   20640:	add	r3, pc, r3
   20644:	bl	12990 <__assert_fail@plt>
   20648:	andeq	r1, r0, r5, lsr r9
   2064c:	ldrdeq	r1, [r0], -ip
   20650:	andeq	r1, r0, ip, asr #18
   20654:	andeq	r1, r0, r3, ror r9
   20658:	andeq	r1, r0, ip, lsr #7
   2065c:	andeq	r1, r0, ip, lsl r9

00020660 <flatcc_json_printer_struct_as_nested_root@@Base>:
   20660:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20664:	add	fp, sp, #24
   20668:	sub	sp, sp, #8
   2066c:	mov	r6, r1
   20670:	ldr	r1, [r1, #8]
   20674:	mov	r4, r0
   20678:	mov	r0, #4
   2067c:	add	r0, r0, r2, lsl #1
   20680:	cmp	r0, r1
   20684:	bge	206a4 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   20688:	ldr	r1, [r6, #4]
   2068c:	add	r0, r1, r0
   20690:	ldrh	r0, [r0]
   20694:	cmp	r0, #0
   20698:	ldrne	r1, [r6]
   2069c:	addsne	r0, r1, r0
   206a0:	bne	206ac <flatcc_json_printer_struct_as_nested_root@@Base+0x4c>
   206a4:	sub	sp, fp, #24
   206a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   206ac:	ldr	r7, [r0]
   206b0:	mov	r1, #0
   206b4:	ldr	r0, [r7, r0]!
   206b8:	str	r1, [sp, #4]
   206bc:	cmp	r7, #0
   206c0:	cmpne	r0, #7
   206c4:	bls	2084c <flatcc_json_printer_struct_as_nested_root@@Base+0x1ec>
   206c8:	ldr	r1, [fp, #12]
   206cc:	mov	r5, r3
   206d0:	cmp	r1, #0
   206d4:	beq	206fc <flatcc_json_printer_struct_as_nested_root@@Base+0x9c>
   206d8:	add	r0, sp, #4
   206dc:	mov	r2, #4
   206e0:	bl	12948 <strncpy@plt>
   206e4:	ldr	r0, [sp, #4]
   206e8:	cmp	r0, #0
   206ec:	beq	206fc <flatcc_json_printer_struct_as_nested_root@@Base+0x9c>
   206f0:	ldr	r1, [r7, #4]
   206f4:	cmp	r1, r0
   206f8:	bne	2087c <flatcc_json_printer_struct_as_nested_root@@Base+0x21c>
   206fc:	ldr	r0, [r6, #16]
   20700:	ldr	r8, [fp, #16]
   20704:	ldr	r2, [fp, #8]
   20708:	add	r1, r0, #1
   2070c:	cmp	r0, #0
   20710:	str	r1, [r6, #16]
   20714:	beq	2072c <flatcc_json_printer_struct_as_nested_root@@Base+0xcc>
   20718:	ldr	r0, [r4, #20]
   2071c:	add	r1, r0, #1
   20720:	str	r1, [r4, #20]
   20724:	mov	r1, #44	; 0x2c
   20728:	strb	r1, [r0]
   2072c:	mov	r0, r4
   20730:	mov	r1, r5
   20734:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   20738:	ldr	r1, [r4, #32]
   2073c:	ldr	r0, [r4, #20]
   20740:	add	r1, r1, #1
   20744:	str	r1, [r4, #32]
   20748:	add	r1, r0, #1
   2074c:	str	r1, [r4, #20]
   20750:	mov	r1, #123	; 0x7b
   20754:	strb	r1, [r0]
   20758:	ldr	r0, [r7]
   2075c:	add	r1, r7, r0
   20760:	mov	r0, r4
   20764:	blx	r8
   20768:	ldrb	r1, [r4, #25]
   2076c:	ldr	r0, [r4, #20]
   20770:	cmp	r1, #0
   20774:	beq	20834 <flatcc_json_printer_struct_as_nested_root@@Base+0x1d4>
   20778:	add	r1, r0, #1
   2077c:	str	r1, [r4, #20]
   20780:	mov	r1, #10
   20784:	strb	r1, [r0]
   20788:	ldr	r0, [r4, #32]
   2078c:	sub	r2, r0, #1
   20790:	str	r2, [r4, #32]
   20794:	ldrb	r3, [r4, #25]
   20798:	ldr	r0, [r4, #20]
   2079c:	ldr	r1, [r4, #16]
   207a0:	mla	r7, r2, r3, r0
   207a4:	mul	r5, r2, r3
   207a8:	cmp	r7, r1
   207ac:	bls	2081c <flatcc_json_printer_struct_as_nested_root@@Base+0x1bc>
   207b0:	cmp	r0, r1
   207b4:	bcc	207d0 <flatcc_json_printer_struct_as_nested_root@@Base+0x170>
   207b8:	ldr	r2, [r4, #44]	; 0x2c
   207bc:	mov	r0, r4
   207c0:	mov	r1, #0
   207c4:	blx	r2
   207c8:	ldr	r1, [r4, #16]
   207cc:	ldr	r0, [r4, #20]
   207d0:	sub	r6, r1, r0
   207d4:	cmp	r6, r5
   207d8:	bcs	2081c <flatcc_json_printer_struct_as_nested_root@@Base+0x1bc>
   207dc:	mov	r1, #32
   207e0:	mov	r2, r6
   207e4:	bl	1293c <memset@plt>
   207e8:	ldr	r0, [r4, #20]
   207ec:	ldr	r2, [r4, #44]	; 0x2c
   207f0:	mov	r1, #0
   207f4:	add	r0, r0, r6
   207f8:	str	r0, [r4, #20]
   207fc:	mov	r0, r4
   20800:	blx	r2
   20804:	ldr	r1, [r4, #16]
   20808:	ldr	r0, [r4, #20]
   2080c:	sub	r5, r5, r6
   20810:	sub	r6, r1, r0
   20814:	cmp	r5, r6
   20818:	bhi	207dc <flatcc_json_printer_struct_as_nested_root@@Base+0x17c>
   2081c:	mov	r1, #32
   20820:	mov	r2, r5
   20824:	bl	1293c <memset@plt>
   20828:	ldr	r0, [r4, #20]
   2082c:	add	r0, r0, r5
   20830:	str	r0, [r4, #20]
   20834:	add	r1, r0, #1
   20838:	str	r1, [r4, #20]
   2083c:	mov	r1, #125	; 0x7d
   20840:	strb	r1, [r0]
   20844:	sub	sp, fp, #24
   20848:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2084c:	ldr	r0, [r4, #36]	; 0x24
   20850:	movw	r2, #1019	; 0x3fb
   20854:	cmp	r0, #0
   20858:	moveq	r0, #1
   2085c:	streq	r0, [r4, #36]	; 0x24
   20860:	ldr	r0, [pc, #68]	; 208ac <flatcc_json_printer_struct_as_nested_root@@Base+0x24c>
   20864:	ldr	r1, [pc, #68]	; 208b0 <flatcc_json_printer_struct_as_nested_root@@Base+0x250>
   20868:	ldr	r3, [pc, #68]	; 208b4 <flatcc_json_printer_struct_as_nested_root@@Base+0x254>
   2086c:	add	r0, pc, r0
   20870:	add	r1, pc, r1
   20874:	add	r3, pc, r3
   20878:	bl	12990 <__assert_fail@plt>
   2087c:	ldr	r0, [r4, #36]	; 0x24
   20880:	movw	r2, #1028	; 0x404
   20884:	cmp	r0, #0
   20888:	moveq	r0, #1
   2088c:	streq	r0, [r4, #36]	; 0x24
   20890:	ldr	r0, [pc, #32]	; 208b8 <flatcc_json_printer_struct_as_nested_root@@Base+0x258>
   20894:	ldr	r1, [pc, #32]	; 208bc <flatcc_json_printer_struct_as_nested_root@@Base+0x25c>
   20898:	ldr	r3, [pc, #32]	; 208c0 <flatcc_json_printer_struct_as_nested_root@@Base+0x260>
   2089c:	add	r0, pc, r0
   208a0:	add	r1, pc, r1
   208a4:	add	r3, pc, r3
   208a8:	bl	12990 <__assert_fail@plt>
   208ac:	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
   208b0:	andeq	r1, r0, r8, ror r1
   208b4:	andeq	r1, r0, r8, ror #13
   208b8:	andeq	r1, r0, pc, lsl #14
   208bc:	andeq	r1, r0, r8, asr #2
   208c0:			; <UNDEFINED> instruction: 0x000016b8

000208c4 <flatcc_json_printer_table_as_nested_root@@Base>:
   208c4:	push	{r4, r5, r6, r7, fp, lr}
   208c8:	add	fp, sp, #16
   208cc:	sub	sp, sp, #24
   208d0:	mov	r5, r1
   208d4:	ldr	r1, [r1, #8]
   208d8:	mov	r4, r0
   208dc:	mov	r0, #4
   208e0:	add	r0, r0, r2, lsl #1
   208e4:	cmp	r0, r1
   208e8:	bge	20908 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   208ec:	ldr	r1, [r5, #4]
   208f0:	add	r0, r1, r0
   208f4:	ldrh	r0, [r0]
   208f8:	cmp	r0, #0
   208fc:	ldrne	r1, [r5]
   20900:	addsne	r0, r1, r0
   20904:	bne	20910 <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   20908:	sub	sp, fp, #16
   2090c:	pop	{r4, r5, r6, r7, fp, pc}
   20910:	ldr	r7, [r0]
   20914:	mov	r1, #0
   20918:	ldr	r0, [r7, r0]!
   2091c:	str	r1, [sp, #4]
   20920:	cmp	r0, #7
   20924:	bls	20b00 <flatcc_json_printer_table_as_nested_root@@Base+0x23c>
   20928:	ldr	r1, [fp, #12]
   2092c:	mov	r6, r3
   20930:	cmp	r1, #0
   20934:	beq	2095c <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   20938:	add	r0, sp, #4
   2093c:	mov	r2, #4
   20940:	bl	12948 <strncpy@plt>
   20944:	ldr	r0, [sp, #4]
   20948:	cmp	r0, #0
   2094c:	beq	2095c <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   20950:	ldr	r1, [r7, #8]
   20954:	cmp	r1, r0
   20958:	bne	20b30 <flatcc_json_printer_table_as_nested_root@@Base+0x26c>
   2095c:	ldr	r0, [r5, #16]
   20960:	ldr	r2, [fp, #8]
   20964:	add	r1, r0, #1
   20968:	cmp	r0, #0
   2096c:	str	r1, [r5, #16]
   20970:	beq	20988 <flatcc_json_printer_table_as_nested_root@@Base+0xc4>
   20974:	ldr	r0, [r4, #20]
   20978:	add	r1, r0, #1
   2097c:	str	r1, [r4, #20]
   20980:	mov	r1, #44	; 0x2c
   20984:	strb	r1, [r0]
   20988:	mov	r0, r4
   2098c:	mov	r1, r6
   20990:	bl	16524 <flatcc_json_printer_string_field@@Base+0x90>
   20994:	ldr	r0, [r5, #12]
   20998:	subs	r0, r0, #1
   2099c:	beq	20ae4 <flatcc_json_printer_table_as_nested_root@@Base+0x220>
   209a0:	add	r1, r7, #4
   209a4:	ldr	r7, [r4, #32]
   209a8:	ldr	r2, [fp, #16]
   209ac:	ldr	r3, [r1]
   209b0:	add	r7, r7, #1
   209b4:	add	r1, r1, r3
   209b8:	ldr	r3, [r4, #20]
   209bc:	str	r7, [r4, #32]
   209c0:	add	r7, r3, #1
   209c4:	str	r7, [r4, #20]
   209c8:	mov	r7, #123	; 0x7b
   209cc:	strb	r7, [r3]
   209d0:	str	r0, [sp, #16]
   209d4:	mov	r0, #0
   209d8:	str	r0, [sp, #20]
   209dc:	str	r1, [sp, #4]
   209e0:	ldr	r0, [r1]
   209e4:	sub	r3, r1, r0
   209e8:	str	r3, [sp, #8]
   209ec:	ldrh	r0, [r1, -r0]
   209f0:	add	r1, sp, #4
   209f4:	str	r0, [sp, #12]
   209f8:	mov	r0, r4
   209fc:	blx	r2
   20a00:	ldrb	r1, [r4, #25]
   20a04:	ldr	r0, [r4, #20]
   20a08:	cmp	r1, #0
   20a0c:	beq	20acc <flatcc_json_printer_table_as_nested_root@@Base+0x208>
   20a10:	add	r1, r0, #1
   20a14:	str	r1, [r4, #20]
   20a18:	mov	r1, #10
   20a1c:	strb	r1, [r0]
   20a20:	ldr	r0, [r4, #32]
   20a24:	sub	r2, r0, #1
   20a28:	str	r2, [r4, #32]
   20a2c:	ldrb	r3, [r4, #25]
   20a30:	ldr	r0, [r4, #20]
   20a34:	ldr	r1, [r4, #16]
   20a38:	mla	r7, r2, r3, r0
   20a3c:	mul	r5, r2, r3
   20a40:	cmp	r7, r1
   20a44:	bls	20ab4 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   20a48:	cmp	r0, r1
   20a4c:	bcc	20a68 <flatcc_json_printer_table_as_nested_root@@Base+0x1a4>
   20a50:	ldr	r2, [r4, #44]	; 0x2c
   20a54:	mov	r0, r4
   20a58:	mov	r1, #0
   20a5c:	blx	r2
   20a60:	ldr	r1, [r4, #16]
   20a64:	ldr	r0, [r4, #20]
   20a68:	sub	r6, r1, r0
   20a6c:	cmp	r6, r5
   20a70:	bcs	20ab4 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   20a74:	mov	r1, #32
   20a78:	mov	r2, r6
   20a7c:	bl	1293c <memset@plt>
   20a80:	ldr	r0, [r4, #20]
   20a84:	ldr	r2, [r4, #44]	; 0x2c
   20a88:	mov	r1, #0
   20a8c:	add	r0, r0, r6
   20a90:	str	r0, [r4, #20]
   20a94:	mov	r0, r4
   20a98:	blx	r2
   20a9c:	ldr	r1, [r4, #16]
   20aa0:	ldr	r0, [r4, #20]
   20aa4:	sub	r5, r5, r6
   20aa8:	sub	r6, r1, r0
   20aac:	cmp	r5, r6
   20ab0:	bhi	20a74 <flatcc_json_printer_table_as_nested_root@@Base+0x1b0>
   20ab4:	mov	r1, #32
   20ab8:	mov	r2, r5
   20abc:	bl	1293c <memset@plt>
   20ac0:	ldr	r0, [r4, #20]
   20ac4:	add	r0, r0, r5
   20ac8:	str	r0, [r4, #20]
   20acc:	add	r1, r0, #1
   20ad0:	str	r1, [r4, #20]
   20ad4:	mov	r1, #125	; 0x7d
   20ad8:	strb	r1, [r0]
   20adc:	sub	sp, fp, #16
   20ae0:	pop	{r4, r5, r6, r7, fp, pc}
   20ae4:	ldr	r0, [r4, #36]	; 0x24
   20ae8:	cmp	r0, #0
   20aec:	bne	20908 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   20af0:	mov	r0, #2
   20af4:	str	r0, [r4, #36]	; 0x24
   20af8:	sub	sp, fp, #16
   20afc:	pop	{r4, r5, r6, r7, fp, pc}
   20b00:	ldr	r0, [r4, #36]	; 0x24
   20b04:	movw	r2, #1019	; 0x3fb
   20b08:	cmp	r0, #0
   20b0c:	moveq	r0, #1
   20b10:	streq	r0, [r4, #36]	; 0x24
   20b14:	ldr	r0, [pc, #68]	; 20b60 <flatcc_json_printer_table_as_nested_root@@Base+0x29c>
   20b18:	ldr	r1, [pc, #68]	; 20b64 <flatcc_json_printer_table_as_nested_root@@Base+0x2a0>
   20b1c:	ldr	r3, [pc, #68]	; 20b68 <flatcc_json_printer_table_as_nested_root@@Base+0x2a4>
   20b20:	add	r0, pc, r0
   20b24:	add	r1, pc, r1
   20b28:	add	r3, pc, r3
   20b2c:	bl	12990 <__assert_fail@plt>
   20b30:	ldr	r0, [r4, #36]	; 0x24
   20b34:	movw	r2, #1028	; 0x404
   20b38:	cmp	r0, #0
   20b3c:	moveq	r0, #1
   20b40:	streq	r0, [r4, #36]	; 0x24
   20b44:	ldr	r0, [pc, #32]	; 20b6c <flatcc_json_printer_table_as_nested_root@@Base+0x2a8>
   20b48:	ldr	r1, [pc, #32]	; 20b70 <flatcc_json_printer_table_as_nested_root@@Base+0x2ac>
   20b4c:	ldr	r3, [pc, #32]	; 20b74 <flatcc_json_printer_table_as_nested_root@@Base+0x2b0>
   20b50:	add	r0, pc, r0
   20b54:	add	r1, pc, r1
   20b58:	add	r3, pc, r3
   20b5c:	bl	12990 <__assert_fail@plt>
   20b60:	andeq	r1, r0, sp, lsl r4
   20b64:	andeq	r0, r0, r4, asr #29
   20b68:	andeq	r1, r0, r4, lsr r4
   20b6c:	andeq	r1, r0, fp, asr r4
   20b70:	muleq	r0, r4, lr
   20b74:	andeq	r1, r0, r4, lsl #8

00020b78 <flatcc_json_printer_init@@Base>:
   20b78:	push	{r4, r5, r6, sl, fp, lr}
   20b7c:	add	fp, sp, #16
   20b80:	vmov.i32	q8, #0	; 0x00000000
   20b84:	mov	r5, r0
   20b88:	mov	r4, #0
   20b8c:	cmp	r1, #0
   20b90:	movw	r6, #16448	; 0x4040
   20b94:	str	r4, [r0, #32]
   20b98:	mov	r0, #36	; 0x24
   20b9c:	mov	r2, r5
   20ba0:	vst1.32	{d16-d17}, [r2], r0
   20ba4:	add	r0, r5, #16
   20ba8:	str	r4, [r2]
   20bac:	vst1.32	{d16-d17}, [r0]
   20bb0:	ldr	r0, [pc, #96]	; 20c18 <flatcc_json_printer_init@@Base+0xa0>
   20bb4:	ldr	r0, [pc, r0]
   20bb8:	ldr	r0, [r0]
   20bbc:	ldr	r2, [pc, #88]	; 20c1c <flatcc_json_printer_init@@Base+0xa4>
   20bc0:	movne	r0, r1
   20bc4:	str	r0, [r5, #40]	; 0x28
   20bc8:	movw	r0, #16448	; 0x4040
   20bcc:	add	r2, pc, r2
   20bd0:	str	r2, [r5, #44]	; 0x2c
   20bd4:	bl	128f4 <malloc@plt>
   20bd8:	cmp	r0, #0
   20bdc:	str	r0, [r5]
   20be0:	beq	20c0c <flatcc_json_printer_init@@Base+0x94>
   20be4:	mov	r1, #16384	; 0x4000
   20be8:	str	r6, [r5, #4]
   20bec:	str	r1, [r5, #8]
   20bf0:	mov	r1, #1
   20bf4:	strb	r1, [r5, #24]
   20bf8:	add	r1, r0, #16384	; 0x4000
   20bfc:	str	r1, [r5, #16]
   20c00:	str	r0, [r5, #20]
   20c04:	mov	r0, r4
   20c08:	pop	{r4, r5, r6, sl, fp, pc}
   20c0c:	mvn	r4, #0
   20c10:	mov	r0, r4
   20c14:	pop	{r4, r5, r6, sl, fp, pc}
   20c18:	andeq	r2, r1, r4, asr #9
   20c1c:	andeq	r0, r0, ip, asr #32
   20c20:	push	{r4, r5, r6, sl, fp, lr}
   20c24:	add	fp, sp, #16
   20c28:	mov	r4, r0
   20c2c:	cmp	r1, #0
   20c30:	beq	20c3c <flatcc_json_printer_init@@Base+0xc4>
   20c34:	ldr	r5, [r4, #20]
   20c38:	b	20c4c <flatcc_json_printer_init@@Base+0xd4>
   20c3c:	ldr	r6, [r4, #16]
   20c40:	ldr	r5, [r4, #20]
   20c44:	cmp	r5, r6
   20c48:	bcs	20c78 <flatcc_json_printer_init@@Base+0x100>
   20c4c:	ldr	r0, [r4]
   20c50:	ldr	r3, [r4, #40]	; 0x28
   20c54:	mov	r2, #1
   20c58:	sub	r5, r5, r0
   20c5c:	mov	r1, r5
   20c60:	bl	128dc <fwrite@plt>
   20c64:	ldr	r1, [r4, #12]
   20c68:	ldr	r0, [r4]
   20c6c:	str	r0, [r4, #20]
   20c70:	add	r1, r1, r5
   20c74:	b	20cbc <flatcc_json_printer_init@@Base+0x144>
   20c78:	ldr	r0, [r4]
   20c7c:	ldr	r1, [r4, #8]
   20c80:	ldr	r3, [r4, #40]	; 0x28
   20c84:	mov	r2, #1
   20c88:	bl	128dc <fwrite@plt>
   20c8c:	ldr	r0, [r4]
   20c90:	ldr	r1, [r4, #8]
   20c94:	sub	r5, r5, r6
   20c98:	mov	r2, r5
   20c9c:	add	r1, r0, r1
   20ca0:	bl	128ac <memcpy@plt>
   20ca4:	ldr	r0, [r4]
   20ca8:	ldr	r1, [r4, #8]
   20cac:	ldr	r2, [r4, #12]
   20cb0:	add	r0, r0, r5
   20cb4:	add	r1, r2, r1
   20cb8:	str	r0, [r4, #20]
   20cbc:	str	r1, [r4, #12]
   20cc0:	mov	r1, #0
   20cc4:	strb	r1, [r0]
   20cc8:	pop	{r4, r5, r6, sl, fp, pc}

00020ccc <flatcc_json_printer_init_buffer@@Base>:
   20ccc:	push	{fp, lr}
   20cd0:	mov	fp, sp
   20cd4:	cmp	r2, #63	; 0x3f
   20cd8:	bls	20d18 <flatcc_json_printer_init_buffer@@Base+0x4c>
   20cdc:	vmov.i32	q8, #0	; 0x00000000
   20ce0:	add	r3, r0, #12
   20ce4:	vst1.32	{d16-d17}, [r3]
   20ce8:	ldr	r3, [pc, #72]	; 20d38 <flatcc_json_printer_init_buffer@@Base+0x6c>
   20cec:	add	r3, pc, r3
   20cf0:	str	r3, [r0, #44]	; 0x2c
   20cf4:	add	r3, r0, #28
   20cf8:	vst1.32	{d16-d17}, [r3]
   20cfc:	sub	r3, r2, #64	; 0x40
   20d00:	stm	r0, {r1, r2, r3}
   20d04:	add	r2, r1, r3
   20d08:	str	r2, [r0, #16]
   20d0c:	str	r1, [r0, #20]
   20d10:	mov	r0, #0
   20d14:	pop	{fp, pc}
   20d18:	ldr	r0, [pc, #28]	; 20d3c <flatcc_json_printer_init_buffer@@Base+0x70>
   20d1c:	ldr	r1, [pc, #28]	; 20d40 <flatcc_json_printer_init_buffer@@Base+0x74>
   20d20:	ldr	r3, [pc, #28]	; 20d44 <flatcc_json_printer_init_buffer@@Base+0x78>
   20d24:	movw	r2, #1165	; 0x48d
   20d28:	add	r0, pc, r0
   20d2c:	add	r1, pc, r1
   20d30:	add	r3, pc, r3
   20d34:	bl	12990 <__assert_fail@plt>
   20d38:	andeq	r0, r0, r4, asr r0
   20d3c:	strdeq	r0, [r0], -r2
   20d40:			; <UNDEFINED> instruction: 0x00000cbc
   20d44:	andeq	r0, r0, r3, lsl lr
   20d48:	ldr	r2, [r0, #16]
   20d4c:	ldr	r1, [r0, #20]
   20d50:	cmp	r1, r2
   20d54:	bcs	20d60 <flatcc_json_printer_init_buffer@@Base+0x94>
   20d58:	mov	r2, r1
   20d5c:	b	20d88 <flatcc_json_printer_init_buffer@@Base+0xbc>
   20d60:	ldr	r2, [r0, #36]	; 0x24
   20d64:	cmp	r2, #0
   20d68:	moveq	r2, #3
   20d6c:	streq	r2, [r0, #36]	; 0x24
   20d70:	ldr	r2, [r0]
   20d74:	ldr	r3, [r0, #12]
   20d78:	sub	r1, r1, r2
   20d7c:	str	r2, [r0, #20]
   20d80:	add	r1, r1, r3
   20d84:	str	r1, [r0, #12]
   20d88:	mov	r0, #0
   20d8c:	strb	r0, [r2]
   20d90:	bx	lr

00020d94 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   20d94:	push	{r4, r5, fp, lr}
   20d98:	add	fp, sp, #8
   20d9c:	vmov.i32	q8, #0	; 0x00000000
   20da0:	cmp	r1, #0
   20da4:	mov	r5, r1
   20da8:	mov	r4, r0
   20dac:	add	r0, r0, #28
   20db0:	movweq	r5, #4096	; 0x1000
   20db4:	cmp	r5, #64	; 0x40
   20db8:	vst1.32	{d16-d17}, [r0]
   20dbc:	add	r0, r4, #12
   20dc0:	movls	r5, #64	; 0x40
   20dc4:	vst1.32	{d16-d17}, [r0]
   20dc8:	mov	r0, r5
   20dcc:	bl	128f4 <malloc@plt>
   20dd0:	mov	r1, r0
   20dd4:	mov	r0, #1
   20dd8:	strb	r0, [r4, #24]
   20ddc:	sub	r0, r5, #64	; 0x40
   20de0:	stm	r4, {r1, r5}
   20de4:	cmp	r1, #0
   20de8:	str	r0, [r4, #8]
   20dec:	add	r0, r1, r0
   20df0:	ldr	r2, [pc, #32]	; 20e18 <flatcc_json_printer_init_dynamic_buffer@@Base+0x84>
   20df4:	add	r2, pc, r2
   20df8:	str	r2, [r4, #44]	; 0x2c
   20dfc:	str	r0, [r4, #16]
   20e00:	mov	r0, #0
   20e04:	moveq	r0, #3
   20e08:	str	r1, [r4, #20]
   20e0c:	streq	r0, [r4, #36]	; 0x24
   20e10:	mvneq	r0, #0
   20e14:	pop	{r4, r5, fp, pc}
   20e18:	andeq	r0, r0, r0, lsr #32
   20e1c:	push	{r4, r5, fp, lr}
   20e20:	add	fp, sp, #8
   20e24:	mov	r4, r0
   20e28:	ldr	r0, [r0]
   20e2c:	mov	r1, #0
   20e30:	ldr	r5, [r4, #20]
   20e34:	strb	r1, [r5], -r0
   20e38:	ldr	r0, [r4, #16]
   20e3c:	ldr	r1, [r4, #20]
   20e40:	cmp	r1, r0
   20e44:	popcc	{r4, r5, fp, pc}
   20e48:	ldm	r4, {r0, r1}
   20e4c:	lsl	r1, r1, #1
   20e50:	bl	128d0 <realloc@plt>
   20e54:	cmp	r0, #0
   20e58:	beq	20e8c <flatcc_json_printer_init_dynamic_buffer@@Base+0xf8>
   20e5c:	str	r0, [r4]
   20e60:	mvn	r3, #63	; 0x3f
   20e64:	add	r1, r0, r5
   20e68:	ldr	r2, [r4, #4]
   20e6c:	add	r3, r3, r2, lsl #1
   20e70:	lsl	r2, r2, #1
   20e74:	add	r0, r0, r3
   20e78:	str	r3, [r4, #8]
   20e7c:	str	r2, [r4, #4]
   20e80:	str	r0, [r4, #16]
   20e84:	str	r1, [r4, #20]
   20e88:	b	20eb0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x11c>
   20e8c:	ldr	r0, [r4, #36]	; 0x24
   20e90:	cmp	r0, #0
   20e94:	moveq	r0, #3
   20e98:	streq	r0, [r4, #36]	; 0x24
   20e9c:	ldr	r0, [r4, #12]
   20ea0:	ldr	r1, [r4]
   20ea4:	add	r0, r0, r5
   20ea8:	str	r1, [r4, #20]
   20eac:	str	r0, [r4, #12]
   20eb0:	mov	r0, #0
   20eb4:	strb	r0, [r1]
   20eb8:	pop	{r4, r5, fp, pc}

00020ebc <flatcc_json_printer_get_buffer@@Base>:
   20ebc:	push	{r4, r5, fp, lr}
   20ec0:	add	fp, sp, #8
   20ec4:	ldr	r2, [r0, #44]	; 0x2c
   20ec8:	mov	r4, r1
   20ecc:	mov	r1, #0
   20ed0:	mov	r5, r0
   20ed4:	blx	r2
   20ed8:	cmp	r4, #0
   20edc:	beq	20ef4 <flatcc_json_printer_get_buffer@@Base+0x38>
   20ee0:	ldr	r0, [r5]
   20ee4:	ldr	r1, [r5, #20]
   20ee8:	sub	r1, r1, r0
   20eec:	str	r1, [r4]
   20ef0:	pop	{r4, r5, fp, pc}
   20ef4:	ldr	r0, [r5]
   20ef8:	pop	{r4, r5, fp, pc}

00020efc <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   20efc:	push	{r4, r5, fp, lr}
   20f00:	add	fp, sp, #8
   20f04:	ldr	r2, [r0, #44]	; 0x2c
   20f08:	mov	r5, r1
   20f0c:	mov	r1, #0
   20f10:	mov	r4, r0
   20f14:	blx	r2
   20f18:	cmp	r5, #0
   20f1c:	beq	20f34 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x38>
   20f20:	ldr	r0, [r4]
   20f24:	ldr	r1, [r4, #20]
   20f28:	sub	r1, r1, r0
   20f2c:	str	r1, [r5]
   20f30:	b	20f38 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x3c>
   20f34:	ldr	r0, [r4]
   20f38:	vmov.i32	q8, #0	; 0x00000000
   20f3c:	mov	r1, #32
   20f40:	add	r2, r4, #16
   20f44:	vst1.32	{d16-d17}, [r4], r1
   20f48:	vst1.32	{d16-d17}, [r2]
   20f4c:	vst1.32	{d16-d17}, [r4]
   20f50:	pop	{r4, r5, fp, pc}

00020f54 <flatcc_json_printer_clear@@Base>:
   20f54:	push	{r4, sl, fp, lr}
   20f58:	add	fp, sp, #8
   20f5c:	mov	r4, r0
   20f60:	ldrb	r0, [r0, #24]
   20f64:	cmp	r0, #0
   20f68:	beq	20f7c <flatcc_json_printer_clear@@Base+0x28>
   20f6c:	ldr	r0, [r4]
   20f70:	cmp	r0, #0
   20f74:	beq	20f7c <flatcc_json_printer_clear@@Base+0x28>
   20f78:	bl	128a0 <free@plt>
   20f7c:	vmov.i32	q8, #0	; 0x00000000
   20f80:	mov	r0, #32
   20f84:	add	r1, r4, #16
   20f88:	vst1.32	{d16-d17}, [r4], r0
   20f8c:	vst1.32	{d16-d17}, [r1]
   20f90:	vst1.32	{d16-d17}, [r4]
   20f94:	pop	{r4, sl, fp, pc}
   20f98:	cmp	r2, #0
   20f9c:	bxeq	lr
   20fa0:	push	{r4, r5, fp, lr}
   20fa4:	add	fp, sp, #8
   20fa8:	ldr	lr, [r2]
   20fac:	bic	ip, r3, #224	; 0xe0
   20fb0:	cmp	ip, #0
   20fb4:	beq	20fd4 <flatcc_json_printer_clear@@Base+0x80>
   20fb8:	cmp	ip, #1
   20fbc:	bne	2109c <flatcc_json_printer_clear@@Base+0x148>
   20fc0:	ldr	ip, [pc, #288]	; 210e8 <flatcc_json_printer_clear@@Base+0x194>
   20fc4:	add	ip, pc, ip
   20fc8:	cmp	lr, #3
   20fcc:	bcs	20fe4 <flatcc_json_printer_clear@@Base+0x90>
   20fd0:	b	21044 <flatcc_json_printer_clear@@Base+0xf0>
   20fd4:	ldr	ip, [pc, #264]	; 210e4 <flatcc_json_printer_clear@@Base+0x190>
   20fd8:	add	ip, pc, ip
   20fdc:	cmp	lr, #3
   20fe0:	bcc	21044 <flatcc_json_printer_clear@@Base+0xf0>
   20fe4:	ldrb	r4, [r1]
   20fe8:	sub	lr, lr, #3
   20fec:	cmp	lr, #2
   20ff0:	ldrb	r4, [ip, r4, lsr #2]
   20ff4:	strb	r4, [r0]
   20ff8:	ldrb	r5, [r1, #1]
   20ffc:	ldrb	r4, [r1]
   21000:	lsr	r5, r5, #4
   21004:	bfi	r5, r4, #4, #2
   21008:	ldrb	r4, [ip, r5]
   2100c:	strb	r4, [r0, #1]
   21010:	ldrb	r5, [r1, #2]
   21014:	ldrb	r4, [r1, #1]
   21018:	lsr	r5, r5, #6
   2101c:	bfi	r5, r4, #2, #4
   21020:	ldrb	r4, [ip, r5]
   21024:	strb	r4, [r0, #2]
   21028:	ldrb	r4, [r1, #2]
   2102c:	add	r1, r1, #3
   21030:	and	r4, r4, #63	; 0x3f
   21034:	ldrb	r4, [ip, r4]
   21038:	strb	r4, [r0, #3]
   2103c:	add	r0, r0, #4
   21040:	bhi	20fe4 <flatcc_json_printer_clear@@Base+0x90>
   21044:	and	r3, r3, #128	; 0x80
   21048:	cmp	lr, #1
   2104c:	beq	210a4 <flatcc_json_printer_clear@@Base+0x150>
   21050:	cmp	lr, #2
   21054:	bne	210cc <flatcc_json_printer_clear@@Base+0x178>
   21058:	ldrb	r5, [r1]
   2105c:	cmp	r3, #0
   21060:	ldrb	r5, [ip, r5, lsr #2]
   21064:	strb	r5, [r0]
   21068:	ldrb	r4, [r1, #1]
   2106c:	ldrb	r5, [r1]
   21070:	lsr	r4, r4, #4
   21074:	bfi	r4, r5, #4, #2
   21078:	ldrb	r5, [ip, r4]
   2107c:	strb	r5, [r0, #1]
   21080:	ldrb	r1, [r1, #1]
   21084:	and	r1, r1, #15
   21088:	ldrb	r1, [ip, r1, lsl #2]
   2108c:	strb	r1, [r0, #2]
   21090:	movne	r1, #61	; 0x3d
   21094:	strbne	r1, [r0, #3]
   21098:	b	210cc <flatcc_json_printer_clear@@Base+0x178>
   2109c:	mov	r0, lr
   210a0:	b	210d4 <flatcc_json_printer_clear@@Base+0x180>
   210a4:	ldrb	r5, [r1]
   210a8:	cmp	r3, #0
   210ac:	ldrb	r5, [ip, r5, lsr #2]
   210b0:	strb	r5, [r0]
   210b4:	ldrb	r1, [r1]
   210b8:	and	r1, r1, #3
   210bc:	ldrb	r1, [ip, r1, lsl #4]
   210c0:	strb	r1, [r0, #1]
   210c4:	movwne	r1, #15677	; 0x3d3d
   210c8:	strhne	r1, [r0, #2]
   210cc:	ldr	lr, [r2]
   210d0:	mov	r0, #0
   210d4:	sub	r0, lr, r0
   210d8:	str	r0, [r2]
   210dc:	pop	{r4, r5, fp, lr}
   210e0:	bx	lr
   210e4:	andeq	r0, r0, r3, ror #29
   210e8:	andeq	r0, r0, r8, lsr pc
   210ec:	cmp	r3, #0
   210f0:	cmpeq	r2, #0
   210f4:	bne	2110c <flatcc_json_printer_clear@@Base+0x1b8>
   210f8:	cmp	r1, #0
   210fc:	cmpeq	r0, #0
   21100:	mvnne	r1, #0
   21104:	mvnne	r0, #0
   21108:	b	21128 <flatcc_json_printer_clear@@Base+0x1d4>
   2110c:	sub	sp, sp, #8
   21110:	push	{sp, lr}
   21114:	bl	21138 <flatcc_json_printer_clear@@Base+0x1e4>
   21118:	ldr	lr, [sp, #4]
   2111c:	add	sp, sp, #8
   21120:	pop	{r2, r3}
   21124:	bx	lr
   21128:	push	{r1, lr}
   2112c:	mov	r0, #8
   21130:	bl	12870 <raise@plt>
   21134:	pop	{r1, pc}
   21138:	cmp	r1, r3
   2113c:	cmpeq	r0, r2
   21140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21144:	mov	r4, r0
   21148:	movcc	r0, #0
   2114c:	mov	r5, r1
   21150:	ldr	lr, [sp, #36]	; 0x24
   21154:	movcc	r1, r0
   21158:	bcc	21254 <flatcc_json_printer_clear@@Base+0x300>
   2115c:	cmp	r3, #0
   21160:	clzeq	ip, r2
   21164:	clzne	ip, r3
   21168:	addeq	ip, ip, #32
   2116c:	cmp	r5, #0
   21170:	clzeq	r1, r4
   21174:	addeq	r1, r1, #32
   21178:	clzne	r1, r5
   2117c:	sub	ip, ip, r1
   21180:	sub	sl, ip, #32
   21184:	lsl	r9, r3, ip
   21188:	rsb	fp, ip, #32
   2118c:	orr	r9, r9, r2, lsl sl
   21190:	orr	r9, r9, r2, lsr fp
   21194:	lsl	r8, r2, ip
   21198:	cmp	r5, r9
   2119c:	cmpeq	r4, r8
   211a0:	movcc	r0, #0
   211a4:	movcc	r1, r0
   211a8:	bcc	211c4 <flatcc_json_printer_clear@@Base+0x270>
   211ac:	mov	r0, #1
   211b0:	subs	r4, r4, r8
   211b4:	lsl	r1, r0, sl
   211b8:	orr	r1, r1, r0, lsr fp
   211bc:	lsl	r0, r0, ip
   211c0:	sbc	r5, r5, r9
   211c4:	cmp	ip, #0
   211c8:	beq	21254 <flatcc_json_printer_clear@@Base+0x300>
   211cc:	lsr	r6, r8, #1
   211d0:	orr	r6, r6, r9, lsl #31
   211d4:	lsr	r7, r9, #1
   211d8:	mov	r2, ip
   211dc:	b	21200 <flatcc_json_printer_clear@@Base+0x2ac>
   211e0:	subs	r3, r4, r6
   211e4:	sbc	r8, r5, r7
   211e8:	adds	r3, r3, r3
   211ec:	adc	r8, r8, r8
   211f0:	adds	r4, r3, #1
   211f4:	adc	r5, r8, #0
   211f8:	subs	r2, r2, #1
   211fc:	beq	2121c <flatcc_json_printer_clear@@Base+0x2c8>
   21200:	cmp	r5, r7
   21204:	cmpeq	r4, r6
   21208:	bcs	211e0 <flatcc_json_printer_clear@@Base+0x28c>
   2120c:	adds	r4, r4, r4
   21210:	adc	r5, r5, r5
   21214:	subs	r2, r2, #1
   21218:	bne	21200 <flatcc_json_printer_clear@@Base+0x2ac>
   2121c:	lsr	r3, r4, ip
   21220:	orr	r3, r3, r5, lsl fp
   21224:	lsr	r2, r5, ip
   21228:	orr	r3, r3, r5, lsr sl
   2122c:	adds	r0, r0, r4
   21230:	mov	r4, r3
   21234:	lsl	r3, r2, ip
   21238:	orr	r3, r3, r4, lsl sl
   2123c:	lsl	ip, r4, ip
   21240:	orr	r3, r3, r4, lsr fp
   21244:	adc	r1, r1, r5
   21248:	subs	r0, r0, ip
   2124c:	mov	r5, r2
   21250:	sbc	r1, r1, r3
   21254:	cmp	lr, #0
   21258:	strdne	r4, [lr]
   2125c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021260 <__libc_csu_init@@Base>:
   21260:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21264:	mov	r7, r0
   21268:	ldr	r6, [pc, #72]	; 212b8 <__libc_csu_init@@Base+0x58>
   2126c:	ldr	r5, [pc, #72]	; 212bc <__libc_csu_init@@Base+0x5c>
   21270:	add	r6, pc, r6
   21274:	add	r5, pc, r5
   21278:	sub	r6, r6, r5
   2127c:	mov	r8, r1
   21280:	mov	r9, r2
   21284:	bl	12850 <raise@plt-0x20>
   21288:	asrs	r6, r6, #2
   2128c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   21290:	mov	r4, #0
   21294:	add	r4, r4, #1
   21298:	ldr	r3, [r5], #4
   2129c:	mov	r2, r9
   212a0:	mov	r1, r8
   212a4:	mov	r0, r7
   212a8:	blx	r3
   212ac:	cmp	r6, r4
   212b0:	bne	21294 <__libc_csu_init@@Base+0x34>
   212b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   212b8:	andeq	r1, r1, r4, ror ip
   212bc:	andeq	r1, r1, ip, ror #24

000212c0 <__libc_csu_fini@@Base>:
   212c0:	bx	lr

Disassembly of section .fini:

000212c4 <.fini>:
   212c4:	push	{r3, lr}
   212c8:	pop	{r3, pc}
