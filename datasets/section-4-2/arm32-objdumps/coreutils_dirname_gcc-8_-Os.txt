
../repos/coreutils/src/dirname:     file format elf32-littlearm


Disassembly of section .init:

00010b18 <.init>:
   10b18:	push	{r3, lr}
   10b1c:	bl	10f50 <putchar_unlocked@plt+0x208>
   10b20:	pop	{r3, pc}

Disassembly of section .plt:

00010b24 <calloc@plt-0x14>:
   10b24:	push	{lr}		; (str lr, [sp, #-4]!)
   10b28:	ldr	lr, [pc, #4]	; 10b34 <calloc@plt-0x4>
   10b2c:	add	lr, pc, lr
   10b30:	ldr	pc, [lr, #8]!
   10b34:	andeq	r4, r1, ip, asr #9

00010b38 <calloc@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #20, 20	; 0x14000
   10b40:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b44 <fputs_unlocked@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #20, 20	; 0x14000
   10b4c:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b50 <strcmp@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #20, 20	; 0x14000
   10b58:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b5c <fflush@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #20, 20	; 0x14000
   10b64:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b68 <free@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #20, 20	; 0x14000
   10b70:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b74 <_exit@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #20, 20	; 0x14000
   10b7c:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b80 <memcpy@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #20, 20	; 0x14000
   10b88:	ldr	pc, [ip, #1180]!	; 0x49c

00010b8c <mbsinit@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #20, 20	; 0x14000
   10b94:	ldr	pc, [ip, #1172]!	; 0x494

00010b98 <fwrite_unlocked@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #20, 20	; 0x14000
   10ba0:	ldr	pc, [ip, #1164]!	; 0x48c

00010ba4 <memcmp@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1156]!	; 0x484

00010bb0 <fputc_unlocked@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1148]!	; 0x47c

00010bbc <dcgettext@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1140]!	; 0x474

00010bc8 <realloc@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1132]!	; 0x46c

00010bd4 <textdomain@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1124]!	; 0x464

00010be0 <iswprint@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1116]!	; 0x45c

00010bec <lseek64@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1108]!	; 0x454

00010bf8 <__ctype_get_mb_cur_max@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1100]!	; 0x44c

00010c04 <__fpending@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1092]!	; 0x444

00010c10 <ferror_unlocked@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1084]!	; 0x43c

00010c1c <mbrtowc@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1076]!	; 0x434

00010c28 <error@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1068]!	; 0x42c

00010c34 <malloc@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1060]!	; 0x424

00010c40 <__libc_start_main@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1052]!	; 0x41c

00010c4c <__freading@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1044]!	; 0x414

00010c58 <__gmon_start__@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #1036]!	; 0x40c

00010c64 <getopt_long@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #1028]!	; 0x404

00010c70 <__ctype_b_loc@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c7c <exit@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c88 <strlen@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c94 <__errno_location@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #996]!	; 0x3e4

00010ca0 <__cxa_atexit@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #988]!	; 0x3dc

00010cac <memset@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #980]!	; 0x3d4

00010cb8 <__printf_chk@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #972]!	; 0x3cc

00010cc4 <fileno@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #964]!	; 0x3c4

00010cd0 <__fprintf_chk@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #956]!	; 0x3bc

00010cdc <fclose@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #948]!	; 0x3b4

00010ce8 <fseeko64@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #940]!	; 0x3ac

00010cf4 <setlocale@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #932]!	; 0x3a4

00010d00 <strrchr@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #924]!	; 0x39c

00010d0c <nl_langinfo@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #916]!	; 0x394

00010d18 <bindtextdomain@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #908]!	; 0x38c

00010d24 <fputs@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #900]!	; 0x384

00010d30 <strncmp@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #892]!	; 0x37c

00010d3c <abort@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #884]!	; 0x374

00010d48 <putchar_unlocked@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #876]!	; 0x36c

Disassembly of section .text:

00010d54 <.text>:
   10d54:	push	{r4, lr}
   10d58:	bl	10c94 <__errno_location@plt>
   10d5c:	mov	r3, #12
   10d60:	str	r3, [r0]
   10d64:	mov	r0, #0
   10d68:	pop	{r4, pc}
   10d6c:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   10d70:	mov	r6, r0
   10d74:	mov	r7, r1
   10d78:	mov	r5, #0
   10d7c:	mov	r4, r5
   10d80:	ldr	r0, [r1]
   10d84:	bl	113f8 <putchar_unlocked@plt+0x6b0>
   10d88:	ldr	r1, [pc, #328]	; 10ed8 <putchar_unlocked@plt+0x190>
   10d8c:	mov	r0, #6
   10d90:	bl	10cf4 <setlocale@plt>
   10d94:	ldr	r1, [pc, #320]	; 10edc <putchar_unlocked@plt+0x194>
   10d98:	ldr	r0, [pc, #320]	; 10ee0 <putchar_unlocked@plt+0x198>
   10d9c:	bl	10d18 <bindtextdomain@plt>
   10da0:	ldr	r0, [pc, #312]	; 10ee0 <putchar_unlocked@plt+0x198>
   10da4:	bl	10bd4 <textdomain@plt>
   10da8:	ldr	r0, [pc, #308]	; 10ee4 <putchar_unlocked@plt+0x19c>
   10dac:	ldr	r8, [pc, #308]	; 10ee8 <putchar_unlocked@plt+0x1a0>
   10db0:	ldr	r9, [pc, #308]	; 10eec <putchar_unlocked@plt+0x1a4>
   10db4:	bl	137b8 <putchar_unlocked@plt+0x2a70>
   10db8:	mov	r3, r8
   10dbc:	mov	r2, r9
   10dc0:	str	r4, [sp]
   10dc4:	mov	r1, r7
   10dc8:	mov	r0, r6
   10dcc:	bl	10c64 <getopt_long@plt>
   10dd0:	cmn	r0, #1
   10dd4:	beq	10e34 <putchar_unlocked@plt+0xec>
   10dd8:	cmn	r0, #2
   10ddc:	beq	10e2c <putchar_unlocked@plt+0xe4>
   10de0:	cmp	r0, #122	; 0x7a
   10de4:	mov	r5, #1
   10de8:	beq	10db8 <putchar_unlocked@plt+0x70>
   10dec:	cmn	r0, #3
   10df0:	movne	r0, r5
   10df4:	bne	10e30 <putchar_unlocked@plt+0xe8>
   10df8:	ldr	r3, [pc, #240]	; 10ef0 <putchar_unlocked@plt+0x1a8>
   10dfc:	ldr	r0, [pc, #240]	; 10ef4 <putchar_unlocked@plt+0x1ac>
   10e00:	ldr	r2, [pc, #240]	; 10ef8 <putchar_unlocked@plt+0x1b0>
   10e04:	stmib	sp, {r3, r4}
   10e08:	ldr	r3, [pc, #236]	; 10efc <putchar_unlocked@plt+0x1b4>
   10e0c:	ldr	r1, [pc, #236]	; 10f00 <putchar_unlocked@plt+0x1b8>
   10e10:	str	r3, [sp]
   10e14:	ldr	r3, [pc, #232]	; 10f04 <putchar_unlocked@plt+0x1bc>
   10e18:	ldr	r0, [r0]
   10e1c:	ldr	r3, [r3]
   10e20:	bl	12e44 <putchar_unlocked@plt+0x20fc>
   10e24:	mov	r0, #0
   10e28:	bl	10c7c <exit@plt>
   10e2c:	mov	r0, #0
   10e30:	bl	11004 <putchar_unlocked@plt+0x2bc>
   10e34:	ldr	r4, [pc, #204]	; 10f08 <putchar_unlocked@plt+0x1c0>
   10e38:	ldr	r3, [r4]
   10e3c:	cmp	r3, r6
   10e40:	bge	10e70 <putchar_unlocked@plt+0x128>
   10e44:	ldr	r9, [pc, #192]	; 10f0c <putchar_unlocked@plt+0x1c4>
   10e48:	cmp	r5, #0
   10e4c:	movne	r8, #0
   10e50:	moveq	r8, #10
   10e54:	ldr	sl, [pc, #152]	; 10ef4 <putchar_unlocked@plt+0x1ac>
   10e58:	ldr	r3, [r4]
   10e5c:	cmp	r3, r6
   10e60:	blt	10e98 <putchar_unlocked@plt+0x150>
   10e64:	mov	r0, #0
   10e68:	add	sp, sp, #16
   10e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e70:	mov	r2, #5
   10e74:	ldr	r1, [pc, #148]	; 10f10 <putchar_unlocked@plt+0x1c8>
   10e78:	mov	r0, #0
   10e7c:	bl	10bbc <dcgettext@plt>
   10e80:	mov	r1, #0
   10e84:	mov	r2, r0
   10e88:	mov	r0, r1
   10e8c:	bl	10c28 <error@plt>
   10e90:	mov	r0, #1
   10e94:	b	10e30 <putchar_unlocked@plt+0xe8>
   10e98:	ldr	r5, [r7, r3, lsl #2]
   10e9c:	mov	r0, r5
   10ea0:	bl	11360 <putchar_unlocked@plt+0x618>
   10ea4:	subs	r2, r0, #0
   10ea8:	mov	r1, #1
   10eac:	ldr	r3, [sl]
   10eb0:	moveq	r5, r9
   10eb4:	moveq	r2, #1
   10eb8:	mov	r0, r5
   10ebc:	bl	10b98 <fwrite_unlocked@plt>
   10ec0:	mov	r0, r8
   10ec4:	bl	10d48 <putchar_unlocked@plt>
   10ec8:	ldr	r3, [r4]
   10ecc:	add	r3, r3, #1
   10ed0:	str	r3, [r4]
   10ed4:	b	10e58 <putchar_unlocked@plt+0x110>
   10ed8:	andeq	r3, r1, sl, lsr r9
   10edc:	andeq	r3, r1, r3, asr #22
   10ee0:	andeq	r3, r1, r0, lsr #21
   10ee4:	andeq	r1, r1, ip, lsl #5
   10ee8:	andeq	r3, r1, r8, lsl r8
   10eec:	andeq	r3, r1, fp, asr fp
   10ef0:	andeq	r3, r1, sp, asr fp
   10ef4:	andeq	r5, r2, ip, lsr #2
   10ef8:	muleq	r1, ip, sl
   10efc:	andeq	r3, r1, sl, ror #22
   10f00:	andeq	r3, r1, r8, asr r8
   10f04:	andeq	r5, r2, ip, asr #1
   10f08:	andeq	r5, r2, r0, lsr #2
   10f0c:	andeq	r3, r1, r4, lsl r8
   10f10:	andeq	r3, r1, sl, ror fp
   10f14:	mov	fp, #0
   10f18:	mov	lr, #0
   10f1c:	pop	{r1}		; (ldr r1, [sp], #4)
   10f20:	mov	r2, sp
   10f24:	push	{r2}		; (str r2, [sp, #-4]!)
   10f28:	push	{r0}		; (str r0, [sp, #-4]!)
   10f2c:	ldr	ip, [pc, #16]	; 10f44 <putchar_unlocked@plt+0x1fc>
   10f30:	push	{ip}		; (str ip, [sp, #-4]!)
   10f34:	ldr	r0, [pc, #12]	; 10f48 <putchar_unlocked@plt+0x200>
   10f38:	ldr	r3, [pc, #12]	; 10f4c <putchar_unlocked@plt+0x204>
   10f3c:	bl	10c40 <__libc_start_main@plt>
   10f40:	bl	10d3c <abort@plt>
   10f44:			; <UNDEFINED> instruction: 0x000137b4
   10f48:	andeq	r0, r1, ip, ror #26
   10f4c:	andeq	r3, r1, r4, asr r7
   10f50:	ldr	r3, [pc, #20]	; 10f6c <putchar_unlocked@plt+0x224>
   10f54:	ldr	r2, [pc, #20]	; 10f70 <putchar_unlocked@plt+0x228>
   10f58:	add	r3, pc, r3
   10f5c:	ldr	r2, [r3, r2]
   10f60:	cmp	r2, #0
   10f64:	bxeq	lr
   10f68:	b	10c58 <__gmon_start__@plt>
   10f6c:	andeq	r4, r1, r0, lsr #1
   10f70:	andeq	r0, r0, r0, asr #1
   10f74:	ldr	r0, [pc, #24]	; 10f94 <putchar_unlocked@plt+0x24c>
   10f78:	ldr	r3, [pc, #24]	; 10f98 <putchar_unlocked@plt+0x250>
   10f7c:	cmp	r3, r0
   10f80:	bxeq	lr
   10f84:	ldr	r3, [pc, #16]	; 10f9c <putchar_unlocked@plt+0x254>
   10f88:	cmp	r3, #0
   10f8c:	bxeq	lr
   10f90:	bx	r3
   10f94:	andeq	r5, r2, r4, lsl r1
   10f98:	andeq	r5, r2, r4, lsl r1
   10f9c:	andeq	r0, r0, r0
   10fa0:	ldr	r0, [pc, #36]	; 10fcc <putchar_unlocked@plt+0x284>
   10fa4:	ldr	r1, [pc, #36]	; 10fd0 <putchar_unlocked@plt+0x288>
   10fa8:	sub	r1, r1, r0
   10fac:	asr	r1, r1, #2
   10fb0:	add	r1, r1, r1, lsr #31
   10fb4:	asrs	r1, r1, #1
   10fb8:	bxeq	lr
   10fbc:	ldr	r3, [pc, #16]	; 10fd4 <putchar_unlocked@plt+0x28c>
   10fc0:	cmp	r3, #0
   10fc4:	bxeq	lr
   10fc8:	bx	r3
   10fcc:	andeq	r5, r2, r4, lsl r1
   10fd0:	andeq	r5, r2, r4, lsl r1
   10fd4:	andeq	r0, r0, r0
   10fd8:	push	{r4, lr}
   10fdc:	ldr	r4, [pc, #24]	; 10ffc <putchar_unlocked@plt+0x2b4>
   10fe0:	ldrb	r3, [r4]
   10fe4:	cmp	r3, #0
   10fe8:	popne	{r4, pc}
   10fec:	bl	10f74 <putchar_unlocked@plt+0x22c>
   10ff0:	mov	r3, #1
   10ff4:	strb	r3, [r4]
   10ff8:	pop	{r4, pc}
   10ffc:	andeq	r5, r2, r0, lsr r1
   11000:	b	10fa0 <putchar_unlocked@plt+0x258>
   11004:	subs	r5, r0, #0
   11008:	push	{r7, lr}
   1100c:	sub	sp, sp, #64	; 0x40
   11010:	ldr	r6, [pc, #512]	; 11218 <putchar_unlocked@plt+0x4d0>
   11014:	beq	1104c <putchar_unlocked@plt+0x304>
   11018:	mov	r2, #5
   1101c:	mov	r0, #0
   11020:	ldr	r3, [pc, #500]	; 1121c <putchar_unlocked@plt+0x4d4>
   11024:	ldr	r1, [pc, #500]	; 11220 <putchar_unlocked@plt+0x4d8>
   11028:	ldr	r4, [r3]
   1102c:	bl	10bbc <dcgettext@plt>
   11030:	mov	r2, r0
   11034:	mov	r1, #1
   11038:	ldr	r3, [r6]
   1103c:	mov	r0, r4
   11040:	bl	10cd0 <__fprintf_chk@plt>
   11044:	mov	r0, r5
   11048:	bl	10c7c <exit@plt>
   1104c:	ldr	r4, [pc, #464]	; 11224 <putchar_unlocked@plt+0x4dc>
   11050:	mov	r2, #5
   11054:	ldr	r1, [pc, #460]	; 11228 <putchar_unlocked@plt+0x4e0>
   11058:	bl	10bbc <dcgettext@plt>
   1105c:	mov	r1, r0
   11060:	mov	r0, #1
   11064:	ldr	r2, [r6]
   11068:	bl	10cb8 <__printf_chk@plt>
   1106c:	mov	r2, #5
   11070:	ldr	r1, [pc, #436]	; 1122c <putchar_unlocked@plt+0x4e4>
   11074:	mov	r0, r5
   11078:	bl	10bbc <dcgettext@plt>
   1107c:	ldr	r1, [r4]
   11080:	bl	10b44 <fputs_unlocked@plt>
   11084:	mov	r2, #5
   11088:	ldr	r1, [pc, #416]	; 11230 <putchar_unlocked@plt+0x4e8>
   1108c:	mov	r0, r5
   11090:	bl	10bbc <dcgettext@plt>
   11094:	ldr	r1, [r4]
   11098:	bl	10b44 <fputs_unlocked@plt>
   1109c:	mov	r2, #5
   110a0:	ldr	r1, [pc, #396]	; 11234 <putchar_unlocked@plt+0x4ec>
   110a4:	mov	r0, r5
   110a8:	bl	10bbc <dcgettext@plt>
   110ac:	ldr	r1, [r4]
   110b0:	bl	10b44 <fputs_unlocked@plt>
   110b4:	mov	r2, #5
   110b8:	ldr	r1, [pc, #376]	; 11238 <putchar_unlocked@plt+0x4f0>
   110bc:	mov	r0, r5
   110c0:	bl	10bbc <dcgettext@plt>
   110c4:	ldr	r1, [r4]
   110c8:	bl	10b44 <fputs_unlocked@plt>
   110cc:	mov	r2, #5
   110d0:	ldr	r1, [pc, #356]	; 1123c <putchar_unlocked@plt+0x4f4>
   110d4:	mov	r0, r5
   110d8:	bl	10bbc <dcgettext@plt>
   110dc:	ldr	r3, [r6]
   110e0:	mov	r1, r0
   110e4:	mov	r0, #1
   110e8:	add	r6, sp, #8
   110ec:	ldr	r7, [pc, #332]	; 11240 <putchar_unlocked@plt+0x4f8>
   110f0:	mov	r2, r3
   110f4:	str	r3, [sp]
   110f8:	bl	10cb8 <__printf_chk@plt>
   110fc:	ldr	lr, [pc, #320]	; 11244 <putchar_unlocked@plt+0x4fc>
   11100:	add	ip, sp, #8
   11104:	ldm	lr!, {r0, r1, r2, r3}
   11108:	stmia	ip!, {r0, r1, r2, r3}
   1110c:	ldm	lr!, {r0, r1, r2, r3}
   11110:	stmia	ip!, {r0, r1, r2, r3}
   11114:	ldm	lr!, {r0, r1, r2, r3}
   11118:	stmia	ip!, {r0, r1, r2, r3}
   1111c:	ldm	lr, {r0, r1}
   11120:	stm	ip, {r0, r1}
   11124:	ldr	r1, [r6]
   11128:	cmp	r1, #0
   1112c:	bne	111d0 <putchar_unlocked@plt+0x488>
   11130:	ldr	r6, [r6, #4]
   11134:	mov	r2, #5
   11138:	mov	r0, #0
   1113c:	ldr	r7, [pc, #252]	; 11240 <putchar_unlocked@plt+0x4f8>
   11140:	ldr	r1, [pc, #256]	; 11248 <putchar_unlocked@plt+0x500>
   11144:	cmp	r6, #0
   11148:	moveq	r6, r7
   1114c:	bl	10bbc <dcgettext@plt>
   11150:	mov	r1, r0
   11154:	ldr	r3, [pc, #240]	; 1124c <putchar_unlocked@plt+0x504>
   11158:	mov	r0, #1
   1115c:	ldr	r2, [pc, #236]	; 11250 <putchar_unlocked@plt+0x508>
   11160:	bl	10cb8 <__printf_chk@plt>
   11164:	mov	r1, #0
   11168:	mov	r0, #5
   1116c:	bl	10cf4 <setlocale@plt>
   11170:	cmp	r0, #0
   11174:	bne	111e8 <putchar_unlocked@plt+0x4a0>
   11178:	mov	r2, #5
   1117c:	ldr	r1, [pc, #208]	; 11254 <putchar_unlocked@plt+0x50c>
   11180:	mov	r0, #0
   11184:	bl	10bbc <dcgettext@plt>
   11188:	mov	r1, r0
   1118c:	ldr	r3, [pc, #172]	; 11240 <putchar_unlocked@plt+0x4f8>
   11190:	mov	r0, #1
   11194:	ldr	r2, [pc, #176]	; 1124c <putchar_unlocked@plt+0x504>
   11198:	bl	10cb8 <__printf_chk@plt>
   1119c:	mov	r2, #5
   111a0:	ldr	r1, [pc, #176]	; 11258 <putchar_unlocked@plt+0x510>
   111a4:	mov	r0, #0
   111a8:	bl	10bbc <dcgettext@plt>
   111ac:	ldr	r2, [pc, #168]	; 1125c <putchar_unlocked@plt+0x514>
   111b0:	cmp	r6, r7
   111b4:	mov	r1, r0
   111b8:	mov	r0, #1
   111bc:	ldr	r3, [pc, #156]	; 11260 <putchar_unlocked@plt+0x518>
   111c0:	moveq	r3, r2
   111c4:	mov	r2, r6
   111c8:	bl	10cb8 <__printf_chk@plt>
   111cc:	b	11044 <putchar_unlocked@plt+0x2fc>
   111d0:	mov	r0, r7
   111d4:	bl	10b50 <strcmp@plt>
   111d8:	cmp	r0, #0
   111dc:	beq	11130 <putchar_unlocked@plt+0x3e8>
   111e0:	add	r6, r6, #8
   111e4:	b	11124 <putchar_unlocked@plt+0x3dc>
   111e8:	mov	r2, #3
   111ec:	ldr	r1, [pc, #112]	; 11264 <putchar_unlocked@plt+0x51c>
   111f0:	bl	10d30 <strncmp@plt>
   111f4:	cmp	r0, #0
   111f8:	beq	11178 <putchar_unlocked@plt+0x430>
   111fc:	mov	r2, #5
   11200:	ldr	r1, [pc, #96]	; 11268 <putchar_unlocked@plt+0x520>
   11204:	mov	r0, #0
   11208:	bl	10bbc <dcgettext@plt>
   1120c:	ldr	r1, [r4]
   11210:	bl	10b44 <fputs_unlocked@plt>
   11214:	b	11178 <putchar_unlocked@plt+0x430>
   11218:	andeq	r5, r2, ip, lsr r1
   1121c:	andeq	r5, r2, r8, lsr #2
   11220:	andeq	r3, r1, r0, ror #16
   11224:	andeq	r5, r2, ip, lsr #2
   11228:	andeq	r3, r1, r7, lsl #17
   1122c:	andeq	r3, r1, r3, lsr #17
   11230:	andeq	r3, r1, fp, lsr r9
   11234:	andeq	r3, r1, r8, ror r9
   11238:	andeq	r3, r1, r5, lsr #19
   1123c:	ldrdeq	r3, [r1], -fp
   11240:	andeq	r3, r1, r8, asr r8
   11244:	ldrdeq	r3, [r1], -ip
   11248:	andeq	r3, r1, sp, asr sl
   1124c:	andeq	r3, r1, r4, ror sl
   11250:	muleq	r1, ip, sl
   11254:	strdeq	r3, [r1], -r5
   11258:	andeq	r3, r1, r0, lsl fp
   1125c:	andeq	r3, r1, r6, lsr #23
   11260:	andeq	r3, r1, sl, lsr r9
   11264:	andeq	r3, r1, sl, lsr #21
   11268:	andeq	r3, r1, lr, lsr #21
   1126c:	ldr	r3, [pc, #4]	; 11278 <putchar_unlocked@plt+0x530>
   11270:	str	r0, [r3]
   11274:	bx	lr
   11278:	andeq	r5, r2, r4, lsr r1
   1127c:	ldr	r3, [pc, #4]	; 11288 <putchar_unlocked@plt+0x540>
   11280:	strb	r0, [r3, #4]
   11284:	bx	lr
   11288:	andeq	r5, r2, r4, lsr r1
   1128c:	ldr	r3, [pc, #176]	; 11344 <putchar_unlocked@plt+0x5fc>
   11290:	push	{r0, r1, r4, r5, r6, lr}
   11294:	ldr	r0, [r3]
   11298:	bl	1334c <putchar_unlocked@plt+0x2604>
   1129c:	cmp	r0, #0
   112a0:	beq	11328 <putchar_unlocked@plt+0x5e0>
   112a4:	ldr	r4, [pc, #156]	; 11348 <putchar_unlocked@plt+0x600>
   112a8:	bl	10c94 <__errno_location@plt>
   112ac:	mov	r5, r0
   112b0:	ldrb	r6, [r4, #4]
   112b4:	cmp	r6, #0
   112b8:	beq	112c8 <putchar_unlocked@plt+0x580>
   112bc:	ldr	r3, [r0]
   112c0:	cmp	r3, #32
   112c4:	beq	11328 <putchar_unlocked@plt+0x5e0>
   112c8:	mov	r2, #5
   112cc:	ldr	r1, [pc, #120]	; 1134c <putchar_unlocked@plt+0x604>
   112d0:	mov	r0, #0
   112d4:	bl	10bbc <dcgettext@plt>
   112d8:	mov	r6, r0
   112dc:	ldr	r0, [r4]
   112e0:	cmp	r0, #0
   112e4:	beq	11314 <putchar_unlocked@plt+0x5cc>
   112e8:	ldr	r4, [r5]
   112ec:	bl	128a8 <putchar_unlocked@plt+0x1b60>
   112f0:	mov	r3, r0
   112f4:	ldr	r2, [pc, #84]	; 11350 <putchar_unlocked@plt+0x608>
   112f8:	mov	r0, #0
   112fc:	str	r6, [sp]
   11300:	mov	r1, r4
   11304:	bl	10c28 <error@plt>
   11308:	ldr	r3, [pc, #68]	; 11354 <putchar_unlocked@plt+0x60c>
   1130c:	ldr	r0, [r3]
   11310:	bl	10b74 <_exit@plt>
   11314:	mov	r3, r6
   11318:	ldr	r2, [pc, #56]	; 11358 <putchar_unlocked@plt+0x610>
   1131c:	ldr	r1, [r5]
   11320:	bl	10c28 <error@plt>
   11324:	b	11308 <putchar_unlocked@plt+0x5c0>
   11328:	ldr	r3, [pc, #44]	; 1135c <putchar_unlocked@plt+0x614>
   1132c:	ldr	r0, [r3]
   11330:	bl	1334c <putchar_unlocked@plt+0x2604>
   11334:	cmp	r0, #0
   11338:	bne	11308 <putchar_unlocked@plt+0x5c0>
   1133c:	add	sp, sp, #8
   11340:	pop	{r4, r5, r6, pc}
   11344:	andeq	r5, r2, ip, lsr #2
   11348:	andeq	r5, r2, r4, lsr r1
   1134c:	andeq	r3, r1, sl, lsl #24
   11350:	andeq	r3, r1, r6, lsl ip
   11354:	ldrdeq	r5, [r2], -r0
   11358:	andeq	r3, r1, sl, lsl ip
   1135c:	andeq	r5, r2, r8, lsr #2
   11360:	push	{r4, r5, r6, lr}
   11364:	mov	r5, r0
   11368:	ldrb	r4, [r0]
   1136c:	bl	132c8 <putchar_unlocked@plt+0x2580>
   11370:	sub	r0, r0, r5
   11374:	sub	r4, r4, #47	; 0x2f
   11378:	clz	r4, r4
   1137c:	lsr	r4, r4, #5
   11380:	cmp	r0, r4
   11384:	popls	{r4, r5, r6, pc}
   11388:	sub	r3, r0, #1
   1138c:	ldrb	r2, [r5, r3]
   11390:	cmp	r2, #47	; 0x2f
   11394:	popne	{r4, r5, r6, pc}
   11398:	mov	r0, r3
   1139c:	b	11380 <putchar_unlocked@plt+0x638>
   113a0:	push	{r4, r5, r6, lr}
   113a4:	mov	r6, r0
   113a8:	bl	11360 <putchar_unlocked@plt+0x618>
   113ac:	add	r3, r0, #1
   113b0:	mov	r4, r0
   113b4:	cmp	r0, #0
   113b8:	movne	r0, r3
   113bc:	addeq	r0, r3, #1
   113c0:	bl	13258 <putchar_unlocked@plt+0x2510>
   113c4:	subs	r5, r0, #0
   113c8:	beq	113f0 <putchar_unlocked@plt+0x6a8>
   113cc:	mov	r2, r4
   113d0:	mov	r1, r6
   113d4:	bl	10b80 <memcpy@plt>
   113d8:	cmp	r4, #0
   113dc:	moveq	r3, #46	; 0x2e
   113e0:	moveq	r4, #1
   113e4:	strbeq	r3, [r5]
   113e8:	mov	r3, #0
   113ec:	strb	r3, [r5, r4]
   113f0:	mov	r0, r5
   113f4:	pop	{r4, r5, r6, pc}
   113f8:	push	{r4, r5, r6, lr}
   113fc:	subs	r4, r0, #0
   11400:	bne	11418 <putchar_unlocked@plt+0x6d0>
   11404:	ldr	r3, [pc, #124]	; 11488 <putchar_unlocked@plt+0x740>
   11408:	ldr	r0, [pc, #124]	; 1148c <putchar_unlocked@plt+0x744>
   1140c:	ldr	r1, [r3]
   11410:	bl	10d24 <fputs@plt>
   11414:	bl	10d3c <abort@plt>
   11418:	mov	r1, #47	; 0x2f
   1141c:	bl	10d00 <strrchr@plt>
   11420:	subs	r6, r0, #0
   11424:	beq	11474 <putchar_unlocked@plt+0x72c>
   11428:	add	r5, r6, #1
   1142c:	sub	r3, r5, r4
   11430:	cmp	r3, #6
   11434:	ble	11474 <putchar_unlocked@plt+0x72c>
   11438:	mov	r2, #7
   1143c:	ldr	r1, [pc, #76]	; 11490 <putchar_unlocked@plt+0x748>
   11440:	sub	r0, r6, #6
   11444:	bl	10d30 <strncmp@plt>
   11448:	cmp	r0, #0
   1144c:	bne	11474 <putchar_unlocked@plt+0x72c>
   11450:	mov	r2, #3
   11454:	ldr	r1, [pc, #56]	; 11494 <putchar_unlocked@plt+0x74c>
   11458:	mov	r0, r5
   1145c:	bl	10d30 <strncmp@plt>
   11460:	cmp	r0, #0
   11464:	ldreq	r3, [pc, #44]	; 11498 <putchar_unlocked@plt+0x750>
   11468:	addeq	r4, r6, #4
   1146c:	movne	r4, r5
   11470:	streq	r4, [r3]
   11474:	ldr	r3, [pc, #32]	; 1149c <putchar_unlocked@plt+0x754>
   11478:	str	r4, [r3]
   1147c:	ldr	r3, [pc, #28]	; 114a0 <putchar_unlocked@plt+0x758>
   11480:	str	r4, [r3]
   11484:	pop	{r4, r5, r6, pc}
   11488:	andeq	r5, r2, r8, lsr #2
   1148c:	andeq	r3, r1, sp, lsl ip
   11490:	andeq	r3, r1, r5, asr ip
   11494:	andeq	r3, r1, sp, asr ip
   11498:	andeq	r5, r2, r8, lsl r1
   1149c:	andeq	r5, r2, ip, lsr r1
   114a0:	andeq	r5, r2, ip, lsl r1
   114a4:	push	{r4, lr}
   114a8:	mov	r2, #48	; 0x30
   114ac:	mov	r4, r1
   114b0:	mov	r1, #0
   114b4:	bl	10cac <memset@plt>
   114b8:	cmp	r4, #10
   114bc:	bne	114c4 <putchar_unlocked@plt+0x77c>
   114c0:	bl	10d3c <abort@plt>
   114c4:	str	r4, [r0]
   114c8:	pop	{r4, pc}
   114cc:	push	{r4, r5, r6, lr}
   114d0:	mov	r2, #5
   114d4:	mov	r6, r0
   114d8:	mov	r5, r1
   114dc:	mov	r1, r0
   114e0:	mov	r0, #0
   114e4:	bl	10bbc <dcgettext@plt>
   114e8:	cmp	r6, r0
   114ec:	mov	r4, r0
   114f0:	bne	11560 <putchar_unlocked@plt+0x818>
   114f4:	bl	135c4 <putchar_unlocked@plt+0x287c>
   114f8:	ldrb	r3, [r0]
   114fc:	bic	r3, r3, #32
   11500:	cmp	r3, #85	; 0x55
   11504:	bne	11568 <putchar_unlocked@plt+0x820>
   11508:	ldrb	r3, [r0, #1]
   1150c:	bic	r3, r3, #32
   11510:	cmp	r3, #84	; 0x54
   11514:	bne	115d8 <putchar_unlocked@plt+0x890>
   11518:	ldrb	r3, [r0, #2]
   1151c:	bic	r3, r3, #32
   11520:	cmp	r3, #70	; 0x46
   11524:	bne	115d8 <putchar_unlocked@plt+0x890>
   11528:	ldrb	r3, [r0, #3]
   1152c:	cmp	r3, #45	; 0x2d
   11530:	bne	115d8 <putchar_unlocked@plt+0x890>
   11534:	ldrb	r3, [r0, #4]
   11538:	cmp	r3, #56	; 0x38
   1153c:	bne	115d8 <putchar_unlocked@plt+0x890>
   11540:	ldrb	r3, [r0, #5]
   11544:	cmp	r3, #0
   11548:	bne	115d8 <putchar_unlocked@plt+0x890>
   1154c:	ldrb	r2, [r4]
   11550:	ldr	r3, [pc, #144]	; 115e8 <putchar_unlocked@plt+0x8a0>
   11554:	ldr	r4, [pc, #144]	; 115ec <putchar_unlocked@plt+0x8a4>
   11558:	cmp	r2, #96	; 0x60
   1155c:	movne	r4, r3
   11560:	mov	r0, r4
   11564:	pop	{r4, r5, r6, pc}
   11568:	cmp	r3, #71	; 0x47
   1156c:	bne	115d8 <putchar_unlocked@plt+0x890>
   11570:	ldrb	r3, [r0, #1]
   11574:	bic	r3, r3, #32
   11578:	cmp	r3, #66	; 0x42
   1157c:	bne	115d8 <putchar_unlocked@plt+0x890>
   11580:	ldrb	r3, [r0, #2]
   11584:	cmp	r3, #49	; 0x31
   11588:	bne	115d8 <putchar_unlocked@plt+0x890>
   1158c:	ldrb	r3, [r0, #3]
   11590:	cmp	r3, #56	; 0x38
   11594:	bne	115d8 <putchar_unlocked@plt+0x890>
   11598:	ldrb	r3, [r0, #4]
   1159c:	cmp	r3, #48	; 0x30
   115a0:	bne	115d8 <putchar_unlocked@plt+0x890>
   115a4:	ldrb	r3, [r0, #5]
   115a8:	cmp	r3, #51	; 0x33
   115ac:	bne	115d8 <putchar_unlocked@plt+0x890>
   115b0:	ldrb	r3, [r0, #6]
   115b4:	cmp	r3, #48	; 0x30
   115b8:	bne	115d8 <putchar_unlocked@plt+0x890>
   115bc:	ldrb	r3, [r0, #7]
   115c0:	cmp	r3, #0
   115c4:	bne	115d8 <putchar_unlocked@plt+0x890>
   115c8:	ldrb	r2, [r4]
   115cc:	ldr	r3, [pc, #28]	; 115f0 <putchar_unlocked@plt+0x8a8>
   115d0:	ldr	r4, [pc, #28]	; 115f4 <putchar_unlocked@plt+0x8ac>
   115d4:	b	11558 <putchar_unlocked@plt+0x810>
   115d8:	ldr	r4, [pc, #24]	; 115f8 <putchar_unlocked@plt+0x8b0>
   115dc:	cmp	r5, #9
   115e0:	ldr	r3, [pc, #20]	; 115fc <putchar_unlocked@plt+0x8b4>
   115e4:	b	1155c <putchar_unlocked@plt+0x814>
   115e8:			; <UNDEFINED> instruction: 0x00013cba
   115ec:	andeq	r3, r1, r5, asr #25
   115f0:			; <UNDEFINED> instruction: 0x00013cbe
   115f4:	andeq	r3, r1, r1, asr #25
   115f8:			; <UNDEFINED> instruction: 0x00013cb8
   115fc:	andeq	r3, r1, r9, asr #25
   11600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11604:	sub	sp, sp, #108	; 0x6c
   11608:	mov	r8, r0
   1160c:	mov	r5, r1
   11610:	mov	r6, #0
   11614:	str	r3, [sp, #40]	; 0x28
   11618:	str	r2, [sp, #48]	; 0x30
   1161c:	ldr	sl, [sp, #144]	; 0x90
   11620:	bl	10bf8 <__ctype_get_mb_cur_max@plt>
   11624:	ldr	r3, [sp, #148]	; 0x94
   11628:	str	r6, [sp, #24]
   1162c:	str	r6, [sp, #32]
   11630:	str	r6, [sp, #44]	; 0x2c
   11634:	str	r6, [sp, #52]	; 0x34
   11638:	ubfx	r7, r3, #1, #1
   1163c:	mov	r3, #1
   11640:	str	r6, [sp, #60]	; 0x3c
   11644:	str	r3, [sp, #72]	; 0x48
   11648:	str	r0, [sp, #76]	; 0x4c
   1164c:	cmp	sl, #10
   11650:	ldrls	pc, [pc, sl, lsl #2]
   11654:	b	11898 <putchar_unlocked@plt+0xb50>
   11658:	andeq	r1, r1, r4, lsl #13
   1165c:			; <UNDEFINED> instruction: 0x000118b0
   11660:	andeq	r1, r1, r4, lsr r8
   11664:	andeq	r1, r1, ip, asr #16
   11668:	andeq	r1, r1, ip, lsl r8
   1166c:	andeq	r1, r1, r4, ror r7
   11670:	andeq	r1, r1, r4, asr r7
   11674:	muleq	r1, ip, r8
   11678:	andeq	r1, r1, r4, lsr #15
   1167c:	andeq	r1, r1, r4, lsr #15
   11680:	andeq	r1, r1, r4, lsr #15
   11684:	mov	r4, sl
   11688:	mov	r7, #0
   1168c:	mov	r9, r5
   11690:	mov	r3, #0
   11694:	str	r6, [sp, #68]	; 0x44
   11698:	str	r3, [sp, #28]
   1169c:	ldr	r3, [sp, #40]	; 0x28
   116a0:	cmn	r3, #1
   116a4:	bne	12244 <putchar_unlocked@plt+0x14fc>
   116a8:	ldr	r2, [sp, #28]
   116ac:	ldr	r3, [sp, #48]	; 0x30
   116b0:	ldrb	r3, [r3, r2]
   116b4:	adds	r3, r3, #0
   116b8:	movne	r3, #1
   116bc:	str	r3, [sp, #36]	; 0x24
   116c0:	ldr	r3, [sp, #36]	; 0x24
   116c4:	cmp	r3, #0
   116c8:	bne	118d4 <putchar_unlocked@plt+0xb8c>
   116cc:	sub	r3, sl, #2
   116d0:	cmp	r4, #0
   116d4:	clz	r3, r3
   116d8:	movne	r2, #0
   116dc:	lsr	r3, r3, #5
   116e0:	andeq	r2, r3, r7
   116e4:	cmp	r2, #0
   116e8:	bne	11a98 <putchar_unlocked@plt+0xd50>
   116ec:	eor	r7, r7, #1
   116f0:	ands	r3, r3, r7
   116f4:	beq	122bc <putchar_unlocked@plt+0x1574>
   116f8:	ldr	r2, [sp, #68]	; 0x44
   116fc:	cmp	r2, #0
   11700:	beq	12284 <putchar_unlocked@plt+0x153c>
   11704:	ldr	r3, [sp, #72]	; 0x48
   11708:	cmp	r3, #0
   1170c:	beq	12258 <putchar_unlocked@plt+0x1510>
   11710:	ldr	r2, [sp, #48]	; 0x30
   11714:	ldr	r3, [sp, #160]	; 0xa0
   11718:	ldr	r1, [sp, #60]	; 0x3c
   1171c:	str	r3, [sp, #16]
   11720:	ldr	r3, [sp, #156]	; 0x9c
   11724:	str	r3, [sp, #12]
   11728:	ldr	r3, [sp, #152]	; 0x98
   1172c:	str	r3, [sp, #8]
   11730:	ldr	r3, [sp, #148]	; 0x94
   11734:	str	r3, [sp, #4]
   11738:	mov	r3, #5
   1173c:	str	r3, [sp]
   11740:	ldr	r3, [sp, #40]	; 0x28
   11744:	mov	r0, r8
   11748:	bl	11600 <putchar_unlocked@plt+0x8b8>
   1174c:	mov	r4, r0
   11750:	b	122b0 <putchar_unlocked@plt+0x1568>
   11754:	ldr	r3, [pc, #2948]	; 122e0 <putchar_unlocked@plt+0x1598>
   11758:	mov	r7, #1
   1175c:	mov	r4, #0
   11760:	mov	sl, #5
   11764:	str	r7, [sp, #24]
   11768:	str	r7, [sp, #32]
   1176c:	str	r3, [sp, #44]	; 0x2c
   11770:	b	1168c <putchar_unlocked@plt+0x944>
   11774:	cmp	r7, #0
   11778:	bne	118bc <putchar_unlocked@plt+0xb74>
   1177c:	cmp	r5, #0
   11780:	mov	r4, #1
   11784:	movne	r3, #34	; 0x22
   11788:	strbne	r3, [r8]
   1178c:	mov	r3, #1
   11790:	str	r3, [sp, #24]
   11794:	str	r3, [sp, #32]
   11798:	ldr	r3, [pc, #2880]	; 122e0 <putchar_unlocked@plt+0x1598>
   1179c:	str	r3, [sp, #44]	; 0x2c
   117a0:	b	1168c <putchar_unlocked@plt+0x944>
   117a4:	cmp	sl, #10
   117a8:	beq	117cc <putchar_unlocked@plt+0xa84>
   117ac:	mov	r1, sl
   117b0:	ldr	r0, [pc, #2860]	; 122e4 <putchar_unlocked@plt+0x159c>
   117b4:	bl	114cc <putchar_unlocked@plt+0x784>
   117b8:	mov	r1, sl
   117bc:	str	r0, [sp, #156]	; 0x9c
   117c0:	ldr	r0, [pc, #2848]	; 122e8 <putchar_unlocked@plt+0x15a0>
   117c4:	bl	114cc <putchar_unlocked@plt+0x784>
   117c8:	str	r0, [sp, #160]	; 0xa0
   117cc:	cmp	r7, #0
   117d0:	moveq	r4, r7
   117d4:	beq	117ec <putchar_unlocked@plt+0xaa4>
   117d8:	mov	r4, #0
   117dc:	b	117fc <putchar_unlocked@plt+0xab4>
   117e0:	cmp	r5, r4
   117e4:	strbhi	r3, [r8, r4]
   117e8:	add	r4, r4, #1
   117ec:	ldr	r3, [sp, #156]	; 0x9c
   117f0:	ldrb	r3, [r3, r4]
   117f4:	cmp	r3, #0
   117f8:	bne	117e0 <putchar_unlocked@plt+0xa98>
   117fc:	ldr	r0, [sp, #160]	; 0xa0
   11800:	bl	10c88 <strlen@plt>
   11804:	ldr	r3, [sp, #160]	; 0xa0
   11808:	str	r0, [sp, #32]
   1180c:	str	r3, [sp, #44]	; 0x2c
   11810:	mov	r3, #1
   11814:	str	r3, [sp, #24]
   11818:	b	1168c <putchar_unlocked@plt+0x944>
   1181c:	mov	r3, #1
   11820:	cmp	r7, #0
   11824:	streq	r3, [sp, #24]
   11828:	beq	1186c <putchar_unlocked@plt+0xb24>
   1182c:	str	r3, [sp, #32]
   11830:	b	11858 <putchar_unlocked@plt+0xb10>
   11834:	cmp	r7, #0
   11838:	beq	1186c <putchar_unlocked@plt+0xb24>
   1183c:	mov	r3, #1
   11840:	str	r3, [sp, #32]
   11844:	ldr	r3, [pc, #2716]	; 122e8 <putchar_unlocked@plt+0x15a0>
   11848:	b	118cc <putchar_unlocked@plt+0xb84>
   1184c:	mov	r7, #1
   11850:	str	r7, [sp, #24]
   11854:	str	r7, [sp, #32]
   11858:	ldr	r3, [pc, #2696]	; 122e8 <putchar_unlocked@plt+0x15a0>
   1185c:	mov	r4, #0
   11860:	str	r3, [sp, #44]	; 0x2c
   11864:	mov	sl, #2
   11868:	b	1168c <putchar_unlocked@plt+0x944>
   1186c:	cmp	r5, #0
   11870:	movne	r3, #39	; 0x27
   11874:	movne	r7, #0
   11878:	strbne	r3, [r8]
   1187c:	moveq	r7, r5
   11880:	mov	r3, #1
   11884:	mov	r4, #1
   11888:	str	r3, [sp, #32]
   1188c:	ldr	r3, [pc, #2644]	; 122e8 <putchar_unlocked@plt+0x15a0>
   11890:	str	r3, [sp, #44]	; 0x2c
   11894:	b	11864 <putchar_unlocked@plt+0xb1c>
   11898:	bl	10d3c <abort@plt>
   1189c:	mov	r3, #1
   118a0:	mov	r7, #0
   118a4:	str	r3, [sp, #24]
   118a8:	mov	r4, #0
   118ac:	b	1168c <putchar_unlocked@plt+0x944>
   118b0:	mov	r7, #1
   118b4:	str	sl, [sp, #32]
   118b8:	b	11858 <putchar_unlocked@plt+0xb10>
   118bc:	mov	r3, #1
   118c0:	str	r7, [sp, #24]
   118c4:	str	r3, [sp, #32]
   118c8:	ldr	r3, [pc, #2576]	; 122e0 <putchar_unlocked@plt+0x1598>
   118cc:	str	r3, [sp, #44]	; 0x2c
   118d0:	b	118a8 <putchar_unlocked@plt+0xb60>
   118d4:	ldr	fp, [sp, #24]
   118d8:	ldr	r3, [sp, #32]
   118dc:	cmp	sl, #2
   118e0:	moveq	fp, #0
   118e4:	andne	fp, fp, #1
   118e8:	adds	r5, r3, #0
   118ec:	movne	r5, #1
   118f0:	ands	r3, fp, r5
   118f4:	str	r3, [sp, #64]	; 0x40
   118f8:	beq	119c8 <putchar_unlocked@plt+0xc80>
   118fc:	ldr	r3, [sp, #28]
   11900:	ldr	r2, [sp, #32]
   11904:	cmp	r2, #1
   11908:	add	r6, r3, r2
   1190c:	mov	r3, r2
   11910:	ldr	r2, [sp, #40]	; 0x28
   11914:	movls	r3, #0
   11918:	movhi	r3, #1
   1191c:	cmn	r2, #1
   11920:	movne	r3, #0
   11924:	cmp	r3, #0
   11928:	beq	11938 <putchar_unlocked@plt+0xbf0>
   1192c:	ldr	r0, [sp, #48]	; 0x30
   11930:	bl	10c88 <strlen@plt>
   11934:	str	r0, [sp, #40]	; 0x28
   11938:	ldr	r3, [sp, #40]	; 0x28
   1193c:	cmp	r6, r3
   11940:	bhi	119c0 <putchar_unlocked@plt+0xc78>
   11944:	ldr	r0, [sp, #28]
   11948:	ldr	r2, [sp, #32]
   1194c:	ldr	r3, [sp, #48]	; 0x30
   11950:	ldr	r1, [sp, #44]	; 0x2c
   11954:	add	r0, r3, r0
   11958:	bl	10ba4 <memcmp@plt>
   1195c:	cmp	r0, #0
   11960:	bne	119c0 <putchar_unlocked@plt+0xc78>
   11964:	cmp	r7, #0
   11968:	beq	119c8 <putchar_unlocked@plt+0xc80>
   1196c:	str	r7, [sp, #24]
   11970:	ldr	r3, [sp, #24]
   11974:	mov	r1, r9
   11978:	ldr	r2, [sp, #48]	; 0x30
   1197c:	cmp	sl, #2
   11980:	movne	r3, #0
   11984:	andeq	r3, r3, #1
   11988:	cmp	r3, #0
   1198c:	ldr	r3, [sp, #160]	; 0xa0
   11990:	movne	sl, #4
   11994:	str	sl, [sp]
   11998:	str	r3, [sp, #16]
   1199c:	ldr	r3, [sp, #156]	; 0x9c
   119a0:	str	r3, [sp, #12]
   119a4:	mov	r3, #0
   119a8:	str	r3, [sp, #8]
   119ac:	ldr	r3, [sp, #148]	; 0x94
   119b0:	bic	r3, r3, #2
   119b4:	str	r3, [sp, #4]
   119b8:	ldr	r3, [sp, #40]	; 0x28
   119bc:	b	11744 <putchar_unlocked@plt+0x9fc>
   119c0:	mov	r3, #0
   119c4:	str	r3, [sp, #64]	; 0x40
   119c8:	ldr	r2, [sp, #28]
   119cc:	ldr	r3, [sp, #48]	; 0x30
   119d0:	add	r3, r3, r2
   119d4:	str	r3, [sp, #80]	; 0x50
   119d8:	ldr	r3, [sp, #48]	; 0x30
   119dc:	ldrb	r6, [r3, r2]
   119e0:	cmp	r6, #58	; 0x3a
   119e4:	bhi	11b48 <putchar_unlocked@plt+0xe00>
   119e8:	cmp	r6, #43	; 0x2b
   119ec:	bcs	11d08 <putchar_unlocked@plt+0xfc0>
   119f0:	cmp	r6, #32
   119f4:	beq	11d5c <putchar_unlocked@plt+0x1014>
   119f8:	bhi	11aa0 <putchar_unlocked@plt+0xd58>
   119fc:	cmp	r6, #9
   11a00:	beq	11f04 <putchar_unlocked@plt+0x11bc>
   11a04:	bhi	11a64 <putchar_unlocked@plt+0xd1c>
   11a08:	cmp	r6, #7
   11a0c:	beq	11f14 <putchar_unlocked@plt+0x11cc>
   11a10:	bhi	11f30 <putchar_unlocked@plt+0x11e8>
   11a14:	cmp	r6, #0
   11a18:	beq	11d78 <putchar_unlocked@plt+0x1030>
   11a1c:	ldr	r3, [sp, #76]	; 0x4c
   11a20:	cmp	r3, #1
   11a24:	bne	11f7c <putchar_unlocked@plt+0x1234>
   11a28:	bl	10c70 <__ctype_b_loc@plt>
   11a2c:	ldr	r2, [r0]
   11a30:	sxth	r3, r6
   11a34:	lsl	r3, r3, #1
   11a38:	ldrh	r5, [r2, r3]
   11a3c:	ldr	r3, [sp, #76]	; 0x4c
   11a40:	ubfx	r5, r5, #14, #1
   11a44:	str	r3, [sp, #56]	; 0x38
   11a48:	ldr	r3, [sp, #24]
   11a4c:	eor	fp, r5, #1
   11a50:	and	fp, fp, r3
   11a54:	ands	fp, fp, #255	; 0xff
   11a58:	beq	11c38 <putchar_unlocked@plt+0xef0>
   11a5c:	mov	r5, #0
   11a60:	b	12028 <putchar_unlocked@plt+0x12e0>
   11a64:	cmp	r6, #11
   11a68:	beq	11f38 <putchar_unlocked@plt+0x11f0>
   11a6c:	bcc	11f0c <putchar_unlocked@plt+0x11c4>
   11a70:	cmp	r6, #12
   11a74:	beq	11f40 <putchar_unlocked@plt+0x11f8>
   11a78:	cmp	r6, #13
   11a7c:	moveq	r3, #114	; 0x72
   11a80:	bne	11a1c <putchar_unlocked@plt+0xcd4>
   11a84:	cmp	sl, #2
   11a88:	movne	r2, #0
   11a8c:	andeq	r2, r7, #1
   11a90:	cmp	r2, #0
   11a94:	beq	11f18 <putchar_unlocked@plt+0x11d0>
   11a98:	mov	sl, #2
   11a9c:	b	11970 <putchar_unlocked@plt+0xc28>
   11aa0:	cmp	r6, #37	; 0x25
   11aa4:	beq	11d08 <putchar_unlocked@plt+0xfc0>
   11aa8:	bhi	11abc <putchar_unlocked@plt+0xd74>
   11aac:	cmp	r6, #35	; 0x23
   11ab0:	beq	11d50 <putchar_unlocked@plt+0x1008>
   11ab4:	mov	r5, #0
   11ab8:	b	11d60 <putchar_unlocked@plt+0x1018>
   11abc:	cmp	r6, #39	; 0x27
   11ac0:	bne	11ab4 <putchar_unlocked@plt+0xd6c>
   11ac4:	cmp	sl, #2
   11ac8:	ldrne	r5, [sp, #36]	; 0x24
   11acc:	movne	r3, r5
   11ad0:	strne	r3, [sp, #68]	; 0x44
   11ad4:	bne	11e54 <putchar_unlocked@plt+0x110c>
   11ad8:	cmp	r7, #0
   11adc:	bne	11970 <putchar_unlocked@plt+0xc28>
   11ae0:	ldr	r3, [sp, #60]	; 0x3c
   11ae4:	cmp	r9, #0
   11ae8:	clz	r3, r3
   11aec:	lsr	r3, r3, #5
   11af0:	moveq	r3, #0
   11af4:	cmp	r3, #0
   11af8:	strne	r9, [sp, #60]	; 0x3c
   11afc:	movne	r9, #0
   11b00:	bne	11b10 <putchar_unlocked@plt+0xdc8>
   11b04:	cmp	r9, r4
   11b08:	movhi	r3, #39	; 0x27
   11b0c:	strbhi	r3, [r8, r4]
   11b10:	add	r3, r4, #1
   11b14:	ldr	r5, [sp, #36]	; 0x24
   11b18:	mov	fp, #0
   11b1c:	cmp	r3, r9
   11b20:	movcc	r2, #92	; 0x5c
   11b24:	str	fp, [sp, #52]	; 0x34
   11b28:	strbcc	r2, [r8, r3]
   11b2c:	add	r3, r4, #2
   11b30:	add	r4, r4, #3
   11b34:	cmp	r3, r9
   11b38:	str	r5, [sp, #68]	; 0x44
   11b3c:	movcc	r2, #39	; 0x27
   11b40:	strbcc	r2, [r8, r3]
   11b44:	b	11c38 <putchar_unlocked@plt+0xef0>
   11b48:	cmp	r6, #94	; 0x5e
   11b4c:	beq	11ab4 <putchar_unlocked@plt+0xd6c>
   11b50:	bhi	11d10 <putchar_unlocked@plt+0xfc8>
   11b54:	cmp	r6, #90	; 0x5a
   11b58:	bhi	11cfc <putchar_unlocked@plt+0xfb4>
   11b5c:	cmp	r6, #65	; 0x41
   11b60:	bcs	11d08 <putchar_unlocked@plt+0xfc0>
   11b64:	cmp	r6, #62	; 0x3e
   11b68:	bls	11ab4 <putchar_unlocked@plt+0xd6c>
   11b6c:	cmp	r6, #63	; 0x3f
   11b70:	bne	11a1c <putchar_unlocked@plt+0xcd4>
   11b74:	cmp	sl, #2
   11b78:	beq	11e5c <putchar_unlocked@plt+0x1114>
   11b7c:	cmp	sl, #5
   11b80:	movne	fp, #0
   11b84:	bne	1222c <putchar_unlocked@plt+0x14e4>
   11b88:	ldr	r3, [sp, #148]	; 0x94
   11b8c:	tst	r3, #4
   11b90:	beq	11e64 <putchar_unlocked@plt+0x111c>
   11b94:	ldr	r3, [sp, #28]
   11b98:	add	r2, r3, #2
   11b9c:	ldr	r3, [sp, #40]	; 0x28
   11ba0:	cmp	r2, r3
   11ba4:	bcs	11e64 <putchar_unlocked@plt+0x111c>
   11ba8:	ldr	r1, [sp, #28]
   11bac:	ldr	r3, [sp, #48]	; 0x30
   11bb0:	add	r3, r3, r1
   11bb4:	ldrb	r1, [r3, #1]
   11bb8:	cmp	r1, #63	; 0x3f
   11bbc:	bne	11e64 <putchar_unlocked@plt+0x111c>
   11bc0:	ldr	r3, [sp, #48]	; 0x30
   11bc4:	ldrb	r6, [r3, r2]
   11bc8:	sub	r3, r6, #33	; 0x21
   11bcc:	uxtb	r3, r3
   11bd0:	cmp	r3, #29
   11bd4:	bhi	12234 <putchar_unlocked@plt+0x14ec>
   11bd8:	ldr	r0, [pc, #1804]	; 122ec <putchar_unlocked@plt+0x15a4>
   11bdc:	mov	r5, #1
   11be0:	ands	r5, r0, r5, lsl r3
   11be4:	beq	1223c <putchar_unlocked@plt+0x14f4>
   11be8:	cmp	r7, #0
   11bec:	bne	11970 <putchar_unlocked@plt+0xc28>
   11bf0:	cmp	r9, r4
   11bf4:	add	r3, r4, #1
   11bf8:	str	r2, [sp, #28]
   11bfc:	mov	r5, #0
   11c00:	strbhi	r1, [r8, r4]
   11c04:	cmp	r9, r3
   11c08:	mov	fp, r5
   11c0c:	movhi	r1, #34	; 0x22
   11c10:	strbhi	r1, [r8, r3]
   11c14:	add	r3, r4, #2
   11c18:	cmp	r9, r3
   11c1c:	movhi	r1, #34	; 0x22
   11c20:	strbhi	r1, [r8, r3]
   11c24:	add	r3, r4, #3
   11c28:	add	r4, r4, #4
   11c2c:	cmp	r9, r3
   11c30:	movhi	r1, #63	; 0x3f
   11c34:	strbhi	r1, [r8, r3]
   11c38:	ldr	r3, [sp, #24]
   11c3c:	eor	r3, r3, #1
   11c40:	cmp	sl, #2
   11c44:	orreq	r3, r3, #1
   11c48:	eor	r3, r3, #1
   11c4c:	orr	r3, r7, r3
   11c50:	tst	r3, #255	; 0xff
   11c54:	beq	11c80 <putchar_unlocked@plt+0xf38>
   11c58:	ldr	r3, [sp, #152]	; 0x98
   11c5c:	cmp	r3, #0
   11c60:	beq	11c80 <putchar_unlocked@plt+0xf38>
   11c64:	ldr	r1, [sp, #152]	; 0x98
   11c68:	ubfx	r2, r6, #5, #8
   11c6c:	and	r3, r6, #31
   11c70:	ldr	r2, [r1, r2, lsl #2]
   11c74:	lsr	r3, r2, r3
   11c78:	tst	r3, #1
   11c7c:	bne	11c8c <putchar_unlocked@plt+0xf44>
   11c80:	ldr	r3, [sp, #64]	; 0x40
   11c84:	cmp	r3, #0
   11c88:	beq	11e84 <putchar_unlocked@plt+0x113c>
   11c8c:	sub	r3, sl, #2
   11c90:	cmp	r7, #0
   11c94:	clz	r3, r3
   11c98:	lsr	r3, r3, #5
   11c9c:	bne	11970 <putchar_unlocked@plt+0xc28>
   11ca0:	ldr	r2, [sp, #52]	; 0x34
   11ca4:	eor	r2, r2, #1
   11ca8:	ands	r3, r3, r2
   11cac:	beq	11ce4 <putchar_unlocked@plt+0xf9c>
   11cb0:	cmp	r9, r4
   11cb4:	str	r3, [sp, #52]	; 0x34
   11cb8:	movhi	r2, #39	; 0x27
   11cbc:	strbhi	r2, [r8, r4]
   11cc0:	add	r2, r4, #1
   11cc4:	cmp	r9, r2
   11cc8:	movhi	r1, #36	; 0x24
   11ccc:	strbhi	r1, [r8, r2]
   11cd0:	add	r2, r4, #2
   11cd4:	add	r4, r4, #3
   11cd8:	cmp	r9, r2
   11cdc:	movhi	r1, #39	; 0x27
   11ce0:	strbhi	r1, [r8, r2]
   11ce4:	cmp	r9, r4
   11ce8:	ldr	fp, [sp, #36]	; 0x24
   11cec:	movhi	r3, #92	; 0x5c
   11cf0:	strbhi	r3, [r8, r4]
   11cf4:	add	r4, r4, #1
   11cf8:	b	11e84 <putchar_unlocked@plt+0x113c>
   11cfc:	cmp	r6, #92	; 0x5c
   11d00:	beq	11e6c <putchar_unlocked@plt+0x1124>
   11d04:	bls	11ab4 <putchar_unlocked@plt+0xd6c>
   11d08:	ldr	r5, [sp, #36]	; 0x24
   11d0c:	b	11e54 <putchar_unlocked@plt+0x110c>
   11d10:	cmp	r6, #122	; 0x7a
   11d14:	bhi	11d34 <putchar_unlocked@plt+0xfec>
   11d18:	cmp	r6, #97	; 0x61
   11d1c:	bcs	11d08 <putchar_unlocked@plt+0xfc0>
   11d20:	cmp	r6, #95	; 0x5f
   11d24:	beq	11d08 <putchar_unlocked@plt+0xfc0>
   11d28:	cmp	r6, #96	; 0x60
   11d2c:	bne	11a1c <putchar_unlocked@plt+0xcd4>
   11d30:	b	11ab4 <putchar_unlocked@plt+0xd6c>
   11d34:	cmp	r6, #124	; 0x7c
   11d38:	beq	11ab4 <putchar_unlocked@plt+0xd6c>
   11d3c:	bcc	11f48 <putchar_unlocked@plt+0x1200>
   11d40:	cmp	r6, #125	; 0x7d
   11d44:	beq	11f48 <putchar_unlocked@plt+0x1200>
   11d48:	cmp	r6, #126	; 0x7e
   11d4c:	bne	11a1c <putchar_unlocked@plt+0xcd4>
   11d50:	ldr	r3, [sp, #28]
   11d54:	cmp	r3, #0
   11d58:	bne	11e64 <putchar_unlocked@plt+0x111c>
   11d5c:	ldr	r5, [sp, #36]	; 0x24
   11d60:	cmp	sl, #2
   11d64:	movne	fp, #0
   11d68:	andeq	fp, r7, #1
   11d6c:	cmp	fp, #0
   11d70:	beq	11c38 <putchar_unlocked@plt+0xef0>
   11d74:	b	11a98 <putchar_unlocked@plt+0xd50>
   11d78:	ldr	r3, [sp, #24]
   11d7c:	cmp	r3, #0
   11d80:	beq	11e48 <putchar_unlocked@plt+0x1100>
   11d84:	sub	r2, sl, #2
   11d88:	cmp	r7, #0
   11d8c:	clz	r2, r2
   11d90:	lsr	r2, r2, #5
   11d94:	bne	1196c <putchar_unlocked@plt+0xc24>
   11d98:	ldr	r3, [sp, #52]	; 0x34
   11d9c:	eor	r3, r3, #1
   11da0:	ands	r2, r2, r3
   11da4:	moveq	r3, r4
   11da8:	beq	11de0 <putchar_unlocked@plt+0x1098>
   11dac:	cmp	r9, r4
   11db0:	str	r2, [sp, #52]	; 0x34
   11db4:	movhi	r3, #39	; 0x27
   11db8:	strbhi	r3, [r8, r4]
   11dbc:	add	r3, r4, #1
   11dc0:	cmp	r9, r3
   11dc4:	movhi	r1, #36	; 0x24
   11dc8:	strbhi	r1, [r8, r3]
   11dcc:	add	r3, r4, #2
   11dd0:	cmp	r9, r3
   11dd4:	movhi	r1, #39	; 0x27
   11dd8:	strbhi	r1, [r8, r3]
   11ddc:	add	r3, r4, #3
   11de0:	cmp	r9, r3
   11de4:	add	r4, r3, #1
   11de8:	movhi	r2, #92	; 0x5c
   11dec:	strbhi	r2, [r8, r3]
   11df0:	cmp	fp, #0
   11df4:	beq	1221c <putchar_unlocked@plt+0x14d4>
   11df8:	ldr	r2, [sp, #28]
   11dfc:	ldr	r1, [sp, #40]	; 0x28
   11e00:	add	r2, r2, #1
   11e04:	cmp	r2, r1
   11e08:	bcs	11e40 <putchar_unlocked@plt+0x10f8>
   11e0c:	ldr	r1, [sp, #48]	; 0x30
   11e10:	mov	r6, #48	; 0x30
   11e14:	ldrb	r2, [r1, r2]
   11e18:	sub	r2, r2, #48	; 0x30
   11e1c:	cmp	r2, #9
   11e20:	bhi	1222c <putchar_unlocked@plt+0x14e4>
   11e24:	cmp	r9, r4
   11e28:	add	r2, r3, #2
   11e2c:	strbhi	r6, [r8, r4]
   11e30:	cmp	r9, r2
   11e34:	add	r4, r3, #3
   11e38:	movhi	r1, #48	; 0x30
   11e3c:	strbhi	r1, [r8, r2]
   11e40:	mov	r5, #0
   11e44:	b	12224 <putchar_unlocked@plt+0x14dc>
   11e48:	ldr	r3, [sp, #148]	; 0x94
   11e4c:	ands	r5, r3, #1
   11e50:	bne	11ed8 <putchar_unlocked@plt+0x1190>
   11e54:	mov	fp, #0
   11e58:	b	11c38 <putchar_unlocked@plt+0xef0>
   11e5c:	cmp	r7, #0
   11e60:	bne	11970 <putchar_unlocked@plt+0xc28>
   11e64:	mov	r5, #0
   11e68:	b	11e54 <putchar_unlocked@plt+0x110c>
   11e6c:	cmp	sl, #2
   11e70:	bne	11ee4 <putchar_unlocked@plt+0x119c>
   11e74:	cmp	r7, #0
   11e78:	bne	11970 <putchar_unlocked@plt+0xc28>
   11e7c:	mov	r5, r7
   11e80:	mov	fp, r7
   11e84:	ldr	r3, [sp, #52]	; 0x34
   11e88:	eor	fp, fp, #1
   11e8c:	tst	r3, fp
   11e90:	beq	11ebc <putchar_unlocked@plt+0x1174>
   11e94:	cmp	r9, r4
   11e98:	movhi	r3, #39	; 0x27
   11e9c:	strbhi	r3, [r8, r4]
   11ea0:	add	r3, r4, #1
   11ea4:	add	r4, r4, #2
   11ea8:	cmp	r9, r3
   11eac:	movhi	r2, #39	; 0x27
   11eb0:	strbhi	r2, [r8, r3]
   11eb4:	mov	r3, #0
   11eb8:	str	r3, [sp, #52]	; 0x34
   11ebc:	cmp	r9, r4
   11ec0:	ldr	r3, [sp, #72]	; 0x48
   11ec4:	strbhi	r6, [r8, r4]
   11ec8:	cmp	r5, #0
   11ecc:	add	r4, r4, #1
   11ed0:	moveq	r3, #0
   11ed4:	str	r3, [sp, #72]	; 0x48
   11ed8:	ldr	r3, [sp, #28]
   11edc:	add	r3, r3, #1
   11ee0:	b	11698 <putchar_unlocked@plt+0x950>
   11ee4:	ldr	r3, [sp, #24]
   11ee8:	and	r3, r3, r7
   11eec:	tst	r5, r3
   11ef0:	moveq	r3, r6
   11ef4:	beq	11a84 <putchar_unlocked@plt+0xd3c>
   11ef8:	mov	fp, #0
   11efc:	mov	r5, fp
   11f00:	b	11e84 <putchar_unlocked@plt+0x113c>
   11f04:	mov	r3, #116	; 0x74
   11f08:	b	11a84 <putchar_unlocked@plt+0xd3c>
   11f0c:	mov	r3, #110	; 0x6e
   11f10:	b	11a84 <putchar_unlocked@plt+0xd3c>
   11f14:	mov	r3, #97	; 0x61
   11f18:	ldr	r2, [sp, #24]
   11f1c:	cmp	r2, #0
   11f20:	beq	11e64 <putchar_unlocked@plt+0x111c>
   11f24:	mov	r6, r3
   11f28:	mov	r5, #0
   11f2c:	b	11c8c <putchar_unlocked@plt+0xf44>
   11f30:	mov	r3, #98	; 0x62
   11f34:	b	11f18 <putchar_unlocked@plt+0x11d0>
   11f38:	mov	r3, #118	; 0x76
   11f3c:	b	11f18 <putchar_unlocked@plt+0x11d0>
   11f40:	mov	r3, #102	; 0x66
   11f44:	b	11f18 <putchar_unlocked@plt+0x11d0>
   11f48:	ldr	r3, [sp, #40]	; 0x28
   11f4c:	cmn	r3, #1
   11f50:	bne	11f70 <putchar_unlocked@plt+0x1228>
   11f54:	ldr	r3, [sp, #48]	; 0x30
   11f58:	ldrb	r3, [r3, #1]
   11f5c:	adds	r3, r3, #0
   11f60:	movne	r3, #1
   11f64:	cmp	r3, #0
   11f68:	bne	11e64 <putchar_unlocked@plt+0x111c>
   11f6c:	b	11d50 <putchar_unlocked@plt+0x1008>
   11f70:	ldr	r3, [sp, #40]	; 0x28
   11f74:	subs	r3, r3, #1
   11f78:	b	11f60 <putchar_unlocked@plt+0x1218>
   11f7c:	mov	r3, #0
   11f80:	mov	r2, #0
   11f84:	strd	r2, [sp, #96]	; 0x60
   11f88:	ldr	r3, [sp, #40]	; 0x28
   11f8c:	cmn	r3, #1
   11f90:	bne	11fa0 <putchar_unlocked@plt+0x1258>
   11f94:	ldr	r0, [sp, #48]	; 0x30
   11f98:	bl	10c88 <strlen@plt>
   11f9c:	str	r0, [sp, #40]	; 0x28
   11fa0:	ldr	r5, [sp, #36]	; 0x24
   11fa4:	mov	r3, #0
   11fa8:	str	r3, [sp, #56]	; 0x38
   11fac:	ldr	r3, [sp, #28]
   11fb0:	add	r0, sp, #92	; 0x5c
   11fb4:	ldr	r1, [sp, #40]	; 0x28
   11fb8:	ldr	r2, [sp, #56]	; 0x38
   11fbc:	add	r2, r3, r2
   11fc0:	ldr	r3, [sp, #48]	; 0x30
   11fc4:	add	fp, r3, r2
   11fc8:	sub	r2, r1, r2
   11fcc:	add	r3, sp, #96	; 0x60
   11fd0:	mov	r1, fp
   11fd4:	bl	135f8 <putchar_unlocked@plt+0x28b0>
   11fd8:	subs	r2, r0, #0
   11fdc:	beq	1201c <putchar_unlocked@plt+0x12d4>
   11fe0:	cmn	r2, #1
   11fe4:	beq	121f0 <putchar_unlocked@plt+0x14a8>
   11fe8:	cmn	r2, #2
   11fec:	bne	12160 <putchar_unlocked@plt+0x1418>
   11ff0:	ldr	r3, [sp, #28]
   11ff4:	ldr	r2, [sp, #56]	; 0x38
   11ff8:	add	r3, r3, r2
   11ffc:	ldr	r2, [sp, #40]	; 0x28
   12000:	cmp	r2, r3
   12004:	bls	121f0 <putchar_unlocked@plt+0x14a8>
   12008:	ldr	r2, [sp, #56]	; 0x38
   1200c:	ldr	r3, [sp, #80]	; 0x50
   12010:	ldrb	r5, [r3, r2]
   12014:	cmp	r5, #0
   12018:	bne	12150 <putchar_unlocked@plt+0x1408>
   1201c:	ldr	r3, [sp, #56]	; 0x38
   12020:	cmp	r3, #1
   12024:	bls	11a48 <putchar_unlocked@plt+0xd00>
   12028:	ldr	r3, [sp, #28]
   1202c:	mov	fp, #0
   12030:	mov	ip, #92	; 0x5c
   12034:	ldr	r2, [sp, #56]	; 0x38
   12038:	add	r3, r3, r2
   1203c:	ldr	r2, [sp, #24]
   12040:	str	r3, [sp, #36]	; 0x24
   12044:	eor	r3, r5, #1
   12048:	and	r3, r3, r2
   1204c:	mov	r2, #39	; 0x27
   12050:	uxtb	r3, r3
   12054:	cmp	r3, #0
   12058:	beq	121f8 <putchar_unlocked@plt+0x14b0>
   1205c:	sub	r0, sl, #2
   12060:	cmp	r7, #0
   12064:	clz	r0, r0
   12068:	lsr	r0, r0, #5
   1206c:	bne	1196c <putchar_unlocked@plt+0xc24>
   12070:	ldr	r1, [sp, #52]	; 0x34
   12074:	eor	r1, r1, #1
   12078:	ands	r1, r0, r1
   1207c:	beq	120ac <putchar_unlocked@plt+0x1364>
   12080:	cmp	r9, r4
   12084:	add	r0, r4, #1
   12088:	str	r1, [sp, #52]	; 0x34
   1208c:	strbhi	r2, [r8, r4]
   12090:	cmp	r9, r0
   12094:	movhi	lr, #36	; 0x24
   12098:	strbhi	lr, [r8, r0]
   1209c:	add	r0, r4, #2
   120a0:	add	r4, r4, #3
   120a4:	cmp	r9, r0
   120a8:	strbhi	r2, [r8, r0]
   120ac:	cmp	r9, r4
   120b0:	add	r0, r4, #1
   120b4:	mov	fp, r3
   120b8:	strbhi	ip, [r8, r4]
   120bc:	cmp	r9, r0
   120c0:	lsrhi	r1, r6, #6
   120c4:	addhi	r1, r1, #48	; 0x30
   120c8:	strbhi	r1, [r8, r0]
   120cc:	add	r0, r4, #2
   120d0:	add	r4, r4, #3
   120d4:	cmp	r9, r0
   120d8:	ubfxhi	r1, r6, #3, #3
   120dc:	and	r6, r6, #7
   120e0:	add	r6, r6, #48	; 0x30
   120e4:	addhi	r1, r1, #48	; 0x30
   120e8:	strbhi	r1, [r8, r0]
   120ec:	eor	r0, fp, #1
   120f0:	ldr	r1, [sp, #28]
   120f4:	ldr	lr, [sp, #52]	; 0x34
   120f8:	add	r1, r1, #1
   120fc:	and	r0, r0, lr
   12100:	ldr	lr, [sp, #36]	; 0x24
   12104:	cmp	r1, lr
   12108:	bcs	11e84 <putchar_unlocked@plt+0x113c>
   1210c:	cmp	r0, #0
   12110:	beq	12134 <putchar_unlocked@plt+0x13ec>
   12114:	cmp	r9, r4
   12118:	add	r0, r4, #1
   1211c:	strbhi	r2, [r8, r4]
   12120:	cmp	r9, r0
   12124:	add	r4, r4, #2
   12128:	strbhi	r2, [r8, r0]
   1212c:	mov	r0, #0
   12130:	str	r0, [sp, #52]	; 0x34
   12134:	ldr	r0, [sp, #48]	; 0x30
   12138:	cmp	r9, r4
   1213c:	str	r1, [sp, #28]
   12140:	strbhi	r6, [r8, r4]
   12144:	add	r4, r4, #1
   12148:	ldrb	r6, [r0, r1]
   1214c:	b	12054 <putchar_unlocked@plt+0x130c>
   12150:	ldr	r3, [sp, #56]	; 0x38
   12154:	add	r3, r3, #1
   12158:	str	r3, [sp, #56]	; 0x38
   1215c:	b	11ff0 <putchar_unlocked@plt+0x12a8>
   12160:	cmp	sl, #2
   12164:	movne	r3, #0
   12168:	andeq	r3, r7, #1
   1216c:	cmp	r3, #0
   12170:	movne	r1, #1
   12174:	bne	121d0 <putchar_unlocked@plt+0x1488>
   12178:	ldr	r0, [sp, #92]	; 0x5c
   1217c:	str	r2, [sp, #84]	; 0x54
   12180:	bl	10be0 <iswprint@plt>
   12184:	ldr	r3, [sp, #56]	; 0x38
   12188:	cmp	r0, #0
   1218c:	add	r0, sp, #96	; 0x60
   12190:	moveq	r5, #0
   12194:	ldr	r2, [sp, #84]	; 0x54
   12198:	add	r3, r3, r2
   1219c:	str	r3, [sp, #56]	; 0x38
   121a0:	bl	10b8c <mbsinit@plt>
   121a4:	cmp	r0, #0
   121a8:	beq	11fac <putchar_unlocked@plt+0x1264>
   121ac:	b	1201c <putchar_unlocked@plt+0x12d4>
   121b0:	ldrb	r3, [fp, #1]!
   121b4:	cmp	r3, #94	; 0x5e
   121b8:	beq	11a98 <putchar_unlocked@plt+0xd50>
   121bc:	bhi	121dc <putchar_unlocked@plt+0x1494>
   121c0:	sub	r3, r3, #91	; 0x5b
   121c4:	cmp	r3, #1
   121c8:	bls	11a98 <putchar_unlocked@plt+0xd50>
   121cc:	add	r1, r1, #1
   121d0:	cmp	r1, r2
   121d4:	bne	121b0 <putchar_unlocked@plt+0x1468>
   121d8:	b	12178 <putchar_unlocked@plt+0x1430>
   121dc:	cmp	r3, #96	; 0x60
   121e0:	beq	11a98 <putchar_unlocked@plt+0xd50>
   121e4:	cmp	r3, #124	; 0x7c
   121e8:	bne	121cc <putchar_unlocked@plt+0x1484>
   121ec:	b	11a98 <putchar_unlocked@plt+0xd50>
   121f0:	mov	r5, #0
   121f4:	b	1201c <putchar_unlocked@plt+0x12d4>
   121f8:	ldr	r1, [sp, #64]	; 0x40
   121fc:	cmp	r1, #0
   12200:	beq	120ec <putchar_unlocked@plt+0x13a4>
   12204:	cmp	r9, r4
   12208:	mov	r1, #0
   1220c:	strbhi	ip, [r8, r4]
   12210:	add	r4, r4, #1
   12214:	str	r1, [sp, #64]	; 0x40
   12218:	b	120ec <putchar_unlocked@plt+0x13a4>
   1221c:	mov	r5, fp
   12220:	ldr	fp, [sp, #24]
   12224:	mov	r6, #48	; 0x30
   12228:	b	11c38 <putchar_unlocked@plt+0xef0>
   1222c:	mov	r5, #0
   12230:	b	11c38 <putchar_unlocked@plt+0xef0>
   12234:	mov	r6, r1
   12238:	b	11e64 <putchar_unlocked@plt+0x111c>
   1223c:	mov	r6, r1
   12240:	b	11e54 <putchar_unlocked@plt+0x110c>
   12244:	ldr	r2, [sp, #28]
   12248:	ldr	r3, [sp, #40]	; 0x28
   1224c:	subs	r3, r3, r2
   12250:	movne	r3, #1
   12254:	b	116bc <putchar_unlocked@plt+0x974>
   12258:	ldr	r3, [sp, #60]	; 0x3c
   1225c:	mov	sl, #2
   12260:	ldr	r7, [sp, #72]	; 0x48
   12264:	adds	r6, r3, #0
   12268:	mov	r5, r3
   1226c:	movne	r6, #1
   12270:	cmp	r9, #0
   12274:	movne	r6, #0
   12278:	cmp	r6, #0
   1227c:	bne	1164c <putchar_unlocked@plt+0x904>
   12280:	ldr	r3, [sp, #68]	; 0x44
   12284:	ldr	r2, [sp, #44]	; 0x2c
   12288:	cmp	r2, #0
   1228c:	moveq	r3, #0
   12290:	andne	r3, r3, #1
   12294:	cmp	r3, #0
   12298:	movne	r3, r2
   1229c:	subne	r3, r3, #1
   122a0:	bne	122d0 <putchar_unlocked@plt+0x1588>
   122a4:	cmp	r9, r4
   122a8:	movhi	r3, #0
   122ac:	strbhi	r3, [r8, r4]
   122b0:	mov	r0, r4
   122b4:	add	sp, sp, #108	; 0x6c
   122b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122bc:	mov	r3, r7
   122c0:	b	12284 <putchar_unlocked@plt+0x153c>
   122c4:	cmp	r9, r4
   122c8:	strbhi	r2, [r8, r4]
   122cc:	add	r4, r4, #1
   122d0:	ldrb	r2, [r3, #1]!
   122d4:	cmp	r2, #0
   122d8:	bne	122c4 <putchar_unlocked@plt+0x157c>
   122dc:	b	122a4 <putchar_unlocked@plt+0x155c>
   122e0:			; <UNDEFINED> instruction: 0x00013cb8
   122e4:	andeq	r3, r1, fp, asr #25
   122e8:	andeq	r3, r1, r9, asr #25
   122ec:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   122f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122f4:	sub	sp, sp, #52	; 0x34
   122f8:	mov	r6, r0
   122fc:	mov	r5, r3
   12300:	mov	r8, r1
   12304:	mov	r9, r2
   12308:	bl	10c94 <__errno_location@plt>
   1230c:	ldr	r3, [r0]
   12310:	cmn	r6, #-2147483647	; 0x80000001
   12314:	str	r0, [sp, #24]
   12318:	ldr	r7, [pc, #368]	; 12490 <putchar_unlocked@plt+0x1748>
   1231c:	str	r3, [sp, #32]
   12320:	movne	r3, #0
   12324:	moveq	r3, #1
   12328:	orrs	r3, r3, r6, lsr #31
   1232c:	ldr	r4, [r7]
   12330:	beq	12338 <putchar_unlocked@plt+0x15f0>
   12334:	bl	10d3c <abort@plt>
   12338:	ldr	r2, [r7, #4]
   1233c:	cmp	r2, r6
   12340:	bgt	123b0 <putchar_unlocked@plt+0x1668>
   12344:	add	sl, r7, #8
   12348:	mov	r3, #8
   1234c:	cmp	r4, sl
   12350:	add	r1, sp, #44	; 0x2c
   12354:	str	r2, [sp, #44]	; 0x2c
   12358:	sub	r2, r6, r2
   1235c:	movne	r0, r4
   12360:	moveq	r0, #0
   12364:	add	r2, r2, #1
   12368:	str	r3, [sp]
   1236c:	mvn	r3, #-2147483648	; 0x80000000
   12370:	bl	13044 <putchar_unlocked@plt+0x22fc>
   12374:	cmp	r4, sl
   12378:	mov	fp, r0
   1237c:	str	r0, [r7]
   12380:	ldmeq	r4, {r0, r1}
   12384:	mov	r4, fp
   12388:	ldr	r2, [sp, #44]	; 0x2c
   1238c:	stmeq	fp, {r0, r1}
   12390:	mov	r1, #0
   12394:	ldr	r0, [r7, #4]
   12398:	sub	r2, r2, r0
   1239c:	add	r0, fp, r0, lsl #3
   123a0:	lsl	r2, r2, #3
   123a4:	bl	10cac <memset@plt>
   123a8:	ldr	r3, [sp, #44]	; 0x2c
   123ac:	str	r3, [r7, #4]
   123b0:	ldr	r3, [r5, #4]
   123b4:	add	sl, r4, r6, lsl #3
   123b8:	mov	r2, r8
   123bc:	ldr	fp, [r4, r6, lsl #3]
   123c0:	ldr	r7, [sl, #4]
   123c4:	orr	r3, r3, #1
   123c8:	str	r3, [sp, #28]
   123cc:	add	r3, r5, #8
   123d0:	mov	r1, fp
   123d4:	str	r3, [sp, #36]	; 0x24
   123d8:	mov	r0, r7
   123dc:	ldr	r3, [r5, #44]	; 0x2c
   123e0:	str	r3, [sp, #16]
   123e4:	ldr	r3, [r5, #40]	; 0x28
   123e8:	str	r3, [sp, #12]
   123ec:	add	r3, r5, #8
   123f0:	str	r3, [sp, #8]
   123f4:	ldr	r3, [sp, #28]
   123f8:	str	r3, [sp, #4]
   123fc:	ldr	r3, [r5]
   12400:	str	r3, [sp]
   12404:	mov	r3, r9
   12408:	bl	11600 <putchar_unlocked@plt+0x8b8>
   1240c:	cmp	fp, r0
   12410:	bhi	12478 <putchar_unlocked@plt+0x1730>
   12414:	ldr	r3, [pc, #120]	; 12494 <putchar_unlocked@plt+0x174c>
   12418:	add	fp, r0, #1
   1241c:	str	fp, [r4, r6, lsl #3]
   12420:	cmp	r7, r3
   12424:	beq	12430 <putchar_unlocked@plt+0x16e8>
   12428:	mov	r0, r7
   1242c:	bl	134b4 <putchar_unlocked@plt+0x276c>
   12430:	mov	r0, fp
   12434:	bl	12f34 <putchar_unlocked@plt+0x21ec>
   12438:	ldr	r3, [r5, #44]	; 0x2c
   1243c:	mov	r2, r8
   12440:	mov	r1, fp
   12444:	str	r0, [sl, #4]
   12448:	mov	r7, r0
   1244c:	str	r3, [sp, #16]
   12450:	ldr	r3, [r5, #40]	; 0x28
   12454:	str	r3, [sp, #12]
   12458:	add	r3, r5, #8
   1245c:	str	r3, [sp, #8]
   12460:	ldr	r3, [sp, #28]
   12464:	str	r3, [sp, #4]
   12468:	ldr	r3, [r5]
   1246c:	str	r3, [sp]
   12470:	mov	r3, r9
   12474:	bl	11600 <putchar_unlocked@plt+0x8b8>
   12478:	ldr	r3, [sp, #24]
   1247c:	mov	r0, r7
   12480:	ldr	r2, [sp, #32]
   12484:	str	r2, [r3]
   12488:	add	sp, sp, #52	; 0x34
   1248c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12490:	ldrdeq	r5, [r2], -r4
   12494:	andeq	r5, r2, r0, asr #2
   12498:	push	{r4, r5, r6, lr}
   1249c:	mov	r5, r0
   124a0:	bl	10c94 <__errno_location@plt>
   124a4:	mov	r4, r0
   124a8:	cmp	r5, #0
   124ac:	ldr	r0, [pc, #20]	; 124c8 <putchar_unlocked@plt+0x1780>
   124b0:	mov	r1, #48	; 0x30
   124b4:	movne	r0, r5
   124b8:	ldr	r6, [r4]
   124bc:	bl	13134 <putchar_unlocked@plt+0x23ec>
   124c0:	str	r6, [r4]
   124c4:	pop	{r4, r5, r6, pc}
   124c8:	andeq	r5, r2, r0, asr #4
   124cc:	ldr	r3, [pc, #12]	; 124e0 <putchar_unlocked@plt+0x1798>
   124d0:	cmp	r0, #0
   124d4:	moveq	r0, r3
   124d8:	ldr	r0, [r0]
   124dc:	bx	lr
   124e0:	andeq	r5, r2, r0, asr #4
   124e4:	ldr	r3, [pc, #12]	; 124f8 <putchar_unlocked@plt+0x17b0>
   124e8:	cmp	r0, #0
   124ec:	moveq	r0, r3
   124f0:	str	r1, [r0]
   124f4:	bx	lr
   124f8:	andeq	r5, r2, r0, asr #4
   124fc:	ldr	r3, [pc, #52]	; 12538 <putchar_unlocked@plt+0x17f0>
   12500:	cmp	r0, #0
   12504:	push	{lr}		; (str lr, [sp, #-4]!)
   12508:	lsr	lr, r1, #5
   1250c:	and	r1, r1, #31
   12510:	moveq	r0, r3
   12514:	add	r3, r0, #8
   12518:	ldr	ip, [r3, lr, lsl #2]
   1251c:	lsr	r0, ip, r1
   12520:	eor	r2, r2, r0
   12524:	and	r0, r0, #1
   12528:	and	r2, r2, #1
   1252c:	eor	r1, ip, r2, lsl r1
   12530:	str	r1, [r3, lr, lsl #2]
   12534:	pop	{pc}		; (ldr pc, [sp], #4)
   12538:	andeq	r5, r2, r0, asr #4
   1253c:	ldr	r3, [pc, #16]	; 12554 <putchar_unlocked@plt+0x180c>
   12540:	cmp	r0, #0
   12544:	movne	r3, r0
   12548:	ldr	r0, [r3, #4]
   1254c:	str	r1, [r3, #4]
   12550:	bx	lr
   12554:	andeq	r5, r2, r0, asr #4
   12558:	ldr	r3, [pc, #44]	; 1258c <putchar_unlocked@plt+0x1844>
   1255c:	cmp	r0, #0
   12560:	moveq	r0, r3
   12564:	mov	r3, #10
   12568:	cmp	r2, #0
   1256c:	cmpne	r1, #0
   12570:	str	r3, [r0]
   12574:	bne	12580 <putchar_unlocked@plt+0x1838>
   12578:	push	{r4, lr}
   1257c:	bl	10d3c <abort@plt>
   12580:	str	r1, [r0, #40]	; 0x28
   12584:	str	r2, [r0, #44]	; 0x2c
   12588:	bx	lr
   1258c:	andeq	r5, r2, r0, asr #4
   12590:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12594:	sub	sp, sp, #24
   12598:	mov	sl, r3
   1259c:	mov	r7, r0
   125a0:	mov	r8, r1
   125a4:	mov	r9, r2
   125a8:	ldr	r4, [sp, #56]	; 0x38
   125ac:	ldr	r3, [pc, #88]	; 1260c <putchar_unlocked@plt+0x18c4>
   125b0:	cmp	r4, #0
   125b4:	moveq	r4, r3
   125b8:	bl	10c94 <__errno_location@plt>
   125bc:	ldr	r3, [r4, #44]	; 0x2c
   125c0:	mov	r5, r0
   125c4:	mov	r2, r9
   125c8:	mov	r1, r8
   125cc:	mov	r0, r7
   125d0:	ldr	r6, [r5]
   125d4:	str	r3, [sp, #16]
   125d8:	ldr	r3, [r4, #40]	; 0x28
   125dc:	str	r3, [sp, #12]
   125e0:	add	r3, r4, #8
   125e4:	str	r3, [sp, #8]
   125e8:	ldr	r3, [r4, #4]
   125ec:	str	r3, [sp, #4]
   125f0:	ldr	r3, [r4]
   125f4:	str	r3, [sp]
   125f8:	mov	r3, sl
   125fc:	bl	11600 <putchar_unlocked@plt+0x8b8>
   12600:	str	r6, [r5]
   12604:	add	sp, sp, #24
   12608:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1260c:	andeq	r5, r2, r0, asr #4
   12610:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12614:	cmp	r3, #0
   12618:	sub	sp, sp, #44	; 0x2c
   1261c:	mov	r6, r2
   12620:	mov	sl, r1
   12624:	mov	r9, r0
   12628:	ldr	r4, [pc, #176]	; 126e0 <putchar_unlocked@plt+0x1998>
   1262c:	movne	r4, r3
   12630:	bl	10c94 <__errno_location@plt>
   12634:	ldr	r3, [r0]
   12638:	mov	r1, #0
   1263c:	mov	r2, r9
   12640:	mov	r8, r0
   12644:	mov	r0, r1
   12648:	ldr	r5, [r4, #4]
   1264c:	add	fp, r4, #8
   12650:	str	r3, [sp, #28]
   12654:	ldr	r3, [r4, #44]	; 0x2c
   12658:	cmp	r6, #0
   1265c:	orreq	r5, r5, #1
   12660:	str	r3, [sp, #16]
   12664:	ldr	r3, [r4, #40]	; 0x28
   12668:	stmib	sp, {r5, fp}
   1266c:	str	r3, [sp, #12]
   12670:	ldr	r3, [r4]
   12674:	str	r3, [sp]
   12678:	mov	r3, sl
   1267c:	bl	11600 <putchar_unlocked@plt+0x8b8>
   12680:	add	r1, r0, #1
   12684:	mov	r7, r0
   12688:	mov	r0, r1
   1268c:	str	r1, [sp, #36]	; 0x24
   12690:	bl	12f34 <putchar_unlocked@plt+0x21ec>
   12694:	ldr	r3, [r4, #44]	; 0x2c
   12698:	mov	r2, r9
   1269c:	ldr	r1, [sp, #36]	; 0x24
   126a0:	str	r3, [sp, #16]
   126a4:	ldr	r3, [r4, #40]	; 0x28
   126a8:	stmib	sp, {r5, fp}
   126ac:	str	r0, [sp, #32]
   126b0:	str	r3, [sp, #12]
   126b4:	ldr	r3, [r4]
   126b8:	str	r3, [sp]
   126bc:	mov	r3, sl
   126c0:	bl	11600 <putchar_unlocked@plt+0x8b8>
   126c4:	ldr	r3, [sp, #28]
   126c8:	cmp	r6, #0
   126cc:	ldr	r0, [sp, #32]
   126d0:	str	r3, [r8]
   126d4:	strne	r7, [r6]
   126d8:	add	sp, sp, #44	; 0x2c
   126dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126e0:	andeq	r5, r2, r0, asr #4
   126e4:	mov	r3, r2
   126e8:	mov	r2, #0
   126ec:	b	12610 <putchar_unlocked@plt+0x18c8>
   126f0:	push	{r4, r5, r6, r7, r8, lr}
   126f4:	mov	r6, #1
   126f8:	ldr	r4, [pc, #100]	; 12764 <putchar_unlocked@plt+0x1a1c>
   126fc:	ldr	r5, [r4]
   12700:	add	r7, r5, #4
   12704:	ldr	r3, [r4, #4]
   12708:	cmp	r3, r6
   1270c:	bgt	12754 <putchar_unlocked@plt+0x1a0c>
   12710:	ldr	r6, [pc, #80]	; 12768 <putchar_unlocked@plt+0x1a20>
   12714:	ldr	r0, [r5, #4]
   12718:	cmp	r0, r6
   1271c:	beq	12730 <putchar_unlocked@plt+0x19e8>
   12720:	bl	134b4 <putchar_unlocked@plt+0x276c>
   12724:	mov	r3, #256	; 0x100
   12728:	str	r3, [r4, #8]
   1272c:	str	r6, [r4, #12]
   12730:	ldr	r6, [pc, #52]	; 1276c <putchar_unlocked@plt+0x1a24>
   12734:	cmp	r5, r6
   12738:	beq	12748 <putchar_unlocked@plt+0x1a00>
   1273c:	mov	r0, r5
   12740:	bl	134b4 <putchar_unlocked@plt+0x276c>
   12744:	str	r6, [r4]
   12748:	mov	r3, #1
   1274c:	str	r3, [r4, #4]
   12750:	pop	{r4, r5, r6, r7, r8, pc}
   12754:	ldr	r0, [r7, r6, lsl #3]
   12758:	add	r6, r6, #1
   1275c:	bl	134b4 <putchar_unlocked@plt+0x276c>
   12760:	b	12704 <putchar_unlocked@plt+0x19bc>
   12764:	ldrdeq	r5, [r2], -r4
   12768:	andeq	r5, r2, r0, asr #2
   1276c:	ldrdeq	r5, [r2], -ip
   12770:	ldr	r3, [pc, #4]	; 1277c <putchar_unlocked@plt+0x1a34>
   12774:	mvn	r2, #0
   12778:	b	122f0 <putchar_unlocked@plt+0x15a8>
   1277c:	andeq	r5, r2, r0, asr #4
   12780:	ldr	r3, [pc]	; 12788 <putchar_unlocked@plt+0x1a40>
   12784:	b	122f0 <putchar_unlocked@plt+0x15a8>
   12788:	andeq	r5, r2, r0, asr #4
   1278c:	mov	r1, r0
   12790:	mov	r0, #0
   12794:	b	12770 <putchar_unlocked@plt+0x1a28>
   12798:	mov	r2, r1
   1279c:	mov	r1, r0
   127a0:	mov	r0, #0
   127a4:	b	12780 <putchar_unlocked@plt+0x1a38>
   127a8:	push	{r4, r5, lr}
   127ac:	sub	sp, sp, #52	; 0x34
   127b0:	mov	r5, r2
   127b4:	mov	r4, r0
   127b8:	mov	r0, sp
   127bc:	bl	114a4 <putchar_unlocked@plt+0x75c>
   127c0:	mov	r3, sp
   127c4:	mvn	r2, #0
   127c8:	mov	r1, r5
   127cc:	mov	r0, r4
   127d0:	bl	122f0 <putchar_unlocked@plt+0x15a8>
   127d4:	add	sp, sp, #52	; 0x34
   127d8:	pop	{r4, r5, pc}
   127dc:	push	{r4, r5, r6, lr}
   127e0:	sub	sp, sp, #48	; 0x30
   127e4:	mov	r5, r2
   127e8:	mov	r6, r3
   127ec:	mov	r4, r0
   127f0:	mov	r0, sp
   127f4:	bl	114a4 <putchar_unlocked@plt+0x75c>
   127f8:	mov	r3, sp
   127fc:	mov	r2, r6
   12800:	mov	r1, r5
   12804:	mov	r0, r4
   12808:	bl	122f0 <putchar_unlocked@plt+0x15a8>
   1280c:	add	sp, sp, #48	; 0x30
   12810:	pop	{r4, r5, r6, pc}
   12814:	mov	r2, r1
   12818:	mov	r1, r0
   1281c:	mov	r0, #0
   12820:	b	127a8 <putchar_unlocked@plt+0x1a60>
   12824:	mov	r3, r2
   12828:	mov	r2, r1
   1282c:	mov	r1, r0
   12830:	mov	r0, #0
   12834:	b	127dc <putchar_unlocked@plt+0x1a94>
   12838:	push	{r4, r5, r6, lr}
   1283c:	mov	r4, r0
   12840:	mov	r5, r1
   12844:	mov	r6, r2
   12848:	sub	sp, sp, #48	; 0x30
   1284c:	mov	ip, sp
   12850:	ldr	lr, [pc, #64]	; 12898 <putchar_unlocked@plt+0x1b50>
   12854:	ldm	lr!, {r0, r1, r2, r3}
   12858:	stmia	ip!, {r0, r1, r2, r3}
   1285c:	ldm	lr!, {r0, r1, r2, r3}
   12860:	stmia	ip!, {r0, r1, r2, r3}
   12864:	ldm	lr, {r0, r1, r2, r3}
   12868:	stm	ip, {r0, r1, r2, r3}
   1286c:	mov	r1, r6
   12870:	mov	r2, #1
   12874:	mov	r0, sp
   12878:	bl	124fc <putchar_unlocked@plt+0x17b4>
   1287c:	mov	r3, sp
   12880:	mov	r2, r5
   12884:	mov	r1, r4
   12888:	mov	r0, #0
   1288c:	bl	122f0 <putchar_unlocked@plt+0x15a8>
   12890:	add	sp, sp, #48	; 0x30
   12894:	pop	{r4, r5, r6, pc}
   12898:	andeq	r5, r2, r0, asr #4
   1289c:	mov	r2, r1
   128a0:	mvn	r1, #0
   128a4:	b	12838 <putchar_unlocked@plt+0x1af0>
   128a8:	mov	r1, #58	; 0x3a
   128ac:	b	1289c <putchar_unlocked@plt+0x1b54>
   128b0:	mov	r2, #58	; 0x3a
   128b4:	b	12838 <putchar_unlocked@plt+0x1af0>
   128b8:	push	{r4, r5, lr}
   128bc:	sub	sp, sp, #100	; 0x64
   128c0:	mov	r4, r0
   128c4:	mov	r0, sp
   128c8:	mov	r5, r2
   128cc:	bl	114a4 <putchar_unlocked@plt+0x75c>
   128d0:	mov	ip, sp
   128d4:	add	lr, sp, #48	; 0x30
   128d8:	ldm	ip!, {r0, r1, r2, r3}
   128dc:	stmia	lr!, {r0, r1, r2, r3}
   128e0:	ldm	ip!, {r0, r1, r2, r3}
   128e4:	stmia	lr!, {r0, r1, r2, r3}
   128e8:	ldm	ip, {r0, r1, r2, r3}
   128ec:	stm	lr, {r0, r1, r2, r3}
   128f0:	mov	r2, #1
   128f4:	mov	r1, #58	; 0x3a
   128f8:	add	r0, sp, #48	; 0x30
   128fc:	bl	124fc <putchar_unlocked@plt+0x17b4>
   12900:	add	r3, sp, #48	; 0x30
   12904:	mvn	r2, #0
   12908:	mov	r1, r5
   1290c:	mov	r0, r4
   12910:	bl	122f0 <putchar_unlocked@plt+0x15a8>
   12914:	add	sp, sp, #100	; 0x64
   12918:	pop	{r4, r5, pc}
   1291c:	push	{r4, r5, r6, r7, lr}
   12920:	mov	r4, r0
   12924:	mov	r6, r1
   12928:	mov	r7, r2
   1292c:	mov	r5, r3
   12930:	sub	sp, sp, #52	; 0x34
   12934:	ldr	lr, [pc, #68]	; 12980 <putchar_unlocked@plt+0x1c38>
   12938:	mov	ip, sp
   1293c:	ldm	lr!, {r0, r1, r2, r3}
   12940:	stmia	ip!, {r0, r1, r2, r3}
   12944:	ldm	lr!, {r0, r1, r2, r3}
   12948:	stmia	ip!, {r0, r1, r2, r3}
   1294c:	ldm	lr, {r0, r1, r2, r3}
   12950:	stm	ip, {r0, r1, r2, r3}
   12954:	mov	r2, r7
   12958:	mov	r1, r6
   1295c:	mov	r0, sp
   12960:	bl	12558 <putchar_unlocked@plt+0x1810>
   12964:	ldr	r2, [sp, #72]	; 0x48
   12968:	mov	r3, sp
   1296c:	mov	r1, r5
   12970:	mov	r0, r4
   12974:	bl	122f0 <putchar_unlocked@plt+0x15a8>
   12978:	add	sp, sp, #52	; 0x34
   1297c:	pop	{r4, r5, r6, r7, pc}
   12980:	andeq	r5, r2, r0, asr #4
   12984:	mvn	ip, #0
   12988:	push	{r0, r1, r2, lr}
   1298c:	str	ip, [sp]
   12990:	bl	1291c <putchar_unlocked@plt+0x1bd4>
   12994:	add	sp, sp, #12
   12998:	pop	{pc}		; (ldr pc, [sp], #4)
   1299c:	mov	r3, r2
   129a0:	mov	r2, r1
   129a4:	mov	r1, r0
   129a8:	mov	r0, #0
   129ac:	b	12984 <putchar_unlocked@plt+0x1c3c>
   129b0:	push	{r0, r1, r2, lr}
   129b4:	str	r3, [sp]
   129b8:	mov	r3, r2
   129bc:	mov	r2, r1
   129c0:	mov	r1, r0
   129c4:	mov	r0, #0
   129c8:	bl	1291c <putchar_unlocked@plt+0x1bd4>
   129cc:	add	sp, sp, #12
   129d0:	pop	{pc}		; (ldr pc, [sp], #4)
   129d4:	ldr	r3, [pc]	; 129dc <putchar_unlocked@plt+0x1c94>
   129d8:	b	122f0 <putchar_unlocked@plt+0x15a8>
   129dc:	andeq	r5, r2, r4, ror #1
   129e0:	mov	r2, r1
   129e4:	mov	r1, r0
   129e8:	mov	r0, #0
   129ec:	b	129d4 <putchar_unlocked@plt+0x1c8c>
   129f0:	mvn	r2, #0
   129f4:	b	129d4 <putchar_unlocked@plt+0x1c8c>
   129f8:	mov	r1, r0
   129fc:	mov	r0, #0
   12a00:	b	129f0 <putchar_unlocked@plt+0x1ca8>
   12a04:	push	{r4, r5, r6, lr}
   12a08:	cmp	r1, #0
   12a0c:	sub	sp, sp, #32
   12a10:	mov	r5, r0
   12a14:	ldr	r4, [sp, #48]	; 0x30
   12a18:	ldr	r6, [sp, #52]	; 0x34
   12a1c:	beq	12ad0 <putchar_unlocked@plt+0x1d88>
   12a20:	strd	r2, [sp]
   12a24:	mov	r3, r1
   12a28:	mov	r1, #1
   12a2c:	ldr	r2, [pc, #856]	; 12d8c <putchar_unlocked@plt+0x2044>
   12a30:	bl	10cd0 <__fprintf_chk@plt>
   12a34:	mov	r2, #5
   12a38:	ldr	r1, [pc, #848]	; 12d90 <putchar_unlocked@plt+0x2048>
   12a3c:	mov	r0, #0
   12a40:	bl	10bbc <dcgettext@plt>
   12a44:	movw	r3, #2022	; 0x7e6
   12a48:	ldr	r2, [pc, #836]	; 12d94 <putchar_unlocked@plt+0x204c>
   12a4c:	mov	r1, #1
   12a50:	str	r3, [sp]
   12a54:	mov	r3, r0
   12a58:	mov	r0, r5
   12a5c:	bl	10cd0 <__fprintf_chk@plt>
   12a60:	mov	r1, r5
   12a64:	mov	r0, #10
   12a68:	bl	10bb0 <fputc_unlocked@plt>
   12a6c:	mov	r2, #5
   12a70:	ldr	r1, [pc, #800]	; 12d98 <putchar_unlocked@plt+0x2050>
   12a74:	mov	r0, #0
   12a78:	bl	10bbc <dcgettext@plt>
   12a7c:	mov	r2, r0
   12a80:	mov	r1, #1
   12a84:	ldr	r3, [pc, #784]	; 12d9c <putchar_unlocked@plt+0x2054>
   12a88:	mov	r0, r5
   12a8c:	bl	10cd0 <__fprintf_chk@plt>
   12a90:	mov	r1, r5
   12a94:	mov	r0, #10
   12a98:	bl	10bb0 <fputc_unlocked@plt>
   12a9c:	cmp	r6, #9
   12aa0:	ldrls	pc, [pc, r6, lsl #2]
   12aa4:	b	12d80 <putchar_unlocked@plt+0x2038>
   12aa8:	andeq	r2, r1, r0, asr #23
   12aac:	andeq	r2, r1, r8, ror #21
   12ab0:	andeq	r2, r1, r4, lsl fp
   12ab4:	andeq	r2, r1, r8, asr #22
   12ab8:	andeq	r2, r1, r4, lsl #23
   12abc:	andeq	r2, r1, r8, asr #23
   12ac0:	andeq	r2, r1, r0, lsl ip
   12ac4:	andeq	r2, r1, r0, ror #24
   12ac8:			; <UNDEFINED> instruction: 0x00012cb8
   12acc:	andeq	r2, r1, r8, lsl sp
   12ad0:	mov	r1, #1
   12ad4:	str	r3, [sp]
   12ad8:	mov	r3, r2
   12adc:	ldr	r2, [pc, #700]	; 12da0 <putchar_unlocked@plt+0x2058>
   12ae0:	bl	10cd0 <__fprintf_chk@plt>
   12ae4:	b	12a34 <putchar_unlocked@plt+0x1cec>
   12ae8:	mov	r2, #5
   12aec:	ldr	r1, [pc, #688]	; 12da4 <putchar_unlocked@plt+0x205c>
   12af0:	mov	r0, #0
   12af4:	bl	10bbc <dcgettext@plt>
   12af8:	ldr	r3, [r4]
   12afc:	mov	r2, r0
   12b00:	mov	r1, #1
   12b04:	mov	r0, r5
   12b08:	add	sp, sp, #32
   12b0c:	pop	{r4, r5, r6, lr}
   12b10:	b	10cd0 <__fprintf_chk@plt>
   12b14:	mov	r2, #5
   12b18:	ldr	r1, [pc, #648]	; 12da8 <putchar_unlocked@plt+0x2060>
   12b1c:	mov	r0, #0
   12b20:	bl	10bbc <dcgettext@plt>
   12b24:	ldr	r3, [r4, #4]
   12b28:	mov	r2, r0
   12b2c:	mov	r1, #1
   12b30:	mov	r0, r5
   12b34:	str	r3, [sp, #48]	; 0x30
   12b38:	ldr	r3, [r4]
   12b3c:	add	sp, sp, #32
   12b40:	pop	{r4, r5, r6, lr}
   12b44:	b	10cd0 <__fprintf_chk@plt>
   12b48:	mov	r2, #5
   12b4c:	ldr	r1, [pc, #600]	; 12dac <putchar_unlocked@plt+0x2064>
   12b50:	mov	r0, #0
   12b54:	bl	10bbc <dcgettext@plt>
   12b58:	ldr	r3, [r4, #8]
   12b5c:	mov	r2, r0
   12b60:	mov	r1, #1
   12b64:	mov	r0, r5
   12b68:	str	r3, [sp, #52]	; 0x34
   12b6c:	ldr	r3, [r4, #4]
   12b70:	str	r3, [sp, #48]	; 0x30
   12b74:	ldr	r3, [r4]
   12b78:	add	sp, sp, #32
   12b7c:	pop	{r4, r5, r6, lr}
   12b80:	b	10cd0 <__fprintf_chk@plt>
   12b84:	mov	r2, #5
   12b88:	ldr	r1, [pc, #544]	; 12db0 <putchar_unlocked@plt+0x2068>
   12b8c:	mov	r0, #0
   12b90:	bl	10bbc <dcgettext@plt>
   12b94:	ldr	r3, [r4, #12]
   12b98:	mov	r2, r0
   12b9c:	mov	r1, #1
   12ba0:	mov	r0, r5
   12ba4:	str	r3, [sp, #8]
   12ba8:	ldr	r3, [r4, #8]
   12bac:	str	r3, [sp, #4]
   12bb0:	ldr	r3, [r4, #4]
   12bb4:	str	r3, [sp]
   12bb8:	ldr	r3, [r4]
   12bbc:	bl	10cd0 <__fprintf_chk@plt>
   12bc0:	add	sp, sp, #32
   12bc4:	pop	{r4, r5, r6, pc}
   12bc8:	mov	r2, #5
   12bcc:	ldr	r1, [pc, #480]	; 12db4 <putchar_unlocked@plt+0x206c>
   12bd0:	mov	r0, #0
   12bd4:	bl	10bbc <dcgettext@plt>
   12bd8:	ldr	r3, [r4, #16]
   12bdc:	mov	r2, r0
   12be0:	mov	r1, #1
   12be4:	mov	r0, r5
   12be8:	str	r3, [sp, #12]
   12bec:	ldr	r3, [r4, #12]
   12bf0:	str	r3, [sp, #8]
   12bf4:	ldr	r3, [r4, #8]
   12bf8:	str	r3, [sp, #4]
   12bfc:	ldr	r3, [r4, #4]
   12c00:	str	r3, [sp]
   12c04:	ldr	r3, [r4]
   12c08:	bl	10cd0 <__fprintf_chk@plt>
   12c0c:	b	12bc0 <putchar_unlocked@plt+0x1e78>
   12c10:	mov	r2, #5
   12c14:	ldr	r1, [pc, #412]	; 12db8 <putchar_unlocked@plt+0x2070>
   12c18:	mov	r0, #0
   12c1c:	bl	10bbc <dcgettext@plt>
   12c20:	ldr	r3, [r4, #20]
   12c24:	mov	r2, r0
   12c28:	mov	r1, #1
   12c2c:	mov	r0, r5
   12c30:	str	r3, [sp, #16]
   12c34:	ldr	r3, [r4, #16]
   12c38:	str	r3, [sp, #12]
   12c3c:	ldr	r3, [r4, #12]
   12c40:	str	r3, [sp, #8]
   12c44:	ldr	r3, [r4, #8]
   12c48:	str	r3, [sp, #4]
   12c4c:	ldr	r3, [r4, #4]
   12c50:	str	r3, [sp]
   12c54:	ldr	r3, [r4]
   12c58:	bl	10cd0 <__fprintf_chk@plt>
   12c5c:	b	12bc0 <putchar_unlocked@plt+0x1e78>
   12c60:	mov	r2, #5
   12c64:	ldr	r1, [pc, #336]	; 12dbc <putchar_unlocked@plt+0x2074>
   12c68:	mov	r0, #0
   12c6c:	bl	10bbc <dcgettext@plt>
   12c70:	ldr	r3, [r4, #24]
   12c74:	mov	r2, r0
   12c78:	mov	r1, #1
   12c7c:	mov	r0, r5
   12c80:	str	r3, [sp, #20]
   12c84:	ldr	r3, [r4, #20]
   12c88:	str	r3, [sp, #16]
   12c8c:	ldr	r3, [r4, #16]
   12c90:	str	r3, [sp, #12]
   12c94:	ldr	r3, [r4, #12]
   12c98:	str	r3, [sp, #8]
   12c9c:	ldr	r3, [r4, #8]
   12ca0:	str	r3, [sp, #4]
   12ca4:	ldr	r3, [r4, #4]
   12ca8:	str	r3, [sp]
   12cac:	ldr	r3, [r4]
   12cb0:	bl	10cd0 <__fprintf_chk@plt>
   12cb4:	b	12bc0 <putchar_unlocked@plt+0x1e78>
   12cb8:	mov	r2, #5
   12cbc:	ldr	r1, [pc, #252]	; 12dc0 <putchar_unlocked@plt+0x2078>
   12cc0:	mov	r0, #0
   12cc4:	bl	10bbc <dcgettext@plt>
   12cc8:	ldr	r3, [r4, #28]
   12ccc:	mov	r2, r0
   12cd0:	mov	r1, #1
   12cd4:	mov	r0, r5
   12cd8:	str	r3, [sp, #24]
   12cdc:	ldr	r3, [r4, #24]
   12ce0:	str	r3, [sp, #20]
   12ce4:	ldr	r3, [r4, #20]
   12ce8:	str	r3, [sp, #16]
   12cec:	ldr	r3, [r4, #16]
   12cf0:	str	r3, [sp, #12]
   12cf4:	ldr	r3, [r4, #12]
   12cf8:	str	r3, [sp, #8]
   12cfc:	ldr	r3, [r4, #8]
   12d00:	str	r3, [sp, #4]
   12d04:	ldr	r3, [r4, #4]
   12d08:	str	r3, [sp]
   12d0c:	ldr	r3, [r4]
   12d10:	bl	10cd0 <__fprintf_chk@plt>
   12d14:	b	12bc0 <putchar_unlocked@plt+0x1e78>
   12d18:	ldr	r1, [pc, #164]	; 12dc4 <putchar_unlocked@plt+0x207c>
   12d1c:	mov	r2, #5
   12d20:	mov	r0, #0
   12d24:	bl	10bbc <dcgettext@plt>
   12d28:	ldr	r3, [r4, #32]
   12d2c:	mov	r2, r0
   12d30:	mov	r1, #1
   12d34:	mov	r0, r5
   12d38:	str	r3, [sp, #28]
   12d3c:	ldr	r3, [r4, #28]
   12d40:	str	r3, [sp, #24]
   12d44:	ldr	r3, [r4, #24]
   12d48:	str	r3, [sp, #20]
   12d4c:	ldr	r3, [r4, #20]
   12d50:	str	r3, [sp, #16]
   12d54:	ldr	r3, [r4, #16]
   12d58:	str	r3, [sp, #12]
   12d5c:	ldr	r3, [r4, #12]
   12d60:	str	r3, [sp, #8]
   12d64:	ldr	r3, [r4, #8]
   12d68:	str	r3, [sp, #4]
   12d6c:	ldr	r3, [r4, #4]
   12d70:	str	r3, [sp]
   12d74:	ldr	r3, [r4]
   12d78:	bl	10cd0 <__fprintf_chk@plt>
   12d7c:	b	12bc0 <putchar_unlocked@plt+0x1e78>
   12d80:	mov	r2, #5
   12d84:	ldr	r1, [pc, #60]	; 12dc8 <putchar_unlocked@plt+0x2080>
   12d88:	b	12d20 <putchar_unlocked@plt+0x1fd8>
   12d8c:	andeq	r3, r1, fp, lsl sp
   12d90:	andeq	r3, r1, lr, lsr #26
   12d94:	strdeq	r3, [r1], -ip
   12d98:	andeq	r3, r1, r2, lsr sp
   12d9c:	ldrdeq	r3, [r1], -sp
   12da0:	andeq	r3, r1, r7, lsr #26
   12da4:	strdeq	r3, [r1], -pc	; <UNPREDICTABLE>
   12da8:	andeq	r3, r1, pc, lsl #28
   12dac:	andeq	r3, r1, r6, lsr #28
   12db0:	andeq	r3, r1, r2, asr #28
   12db4:	andeq	r3, r1, r2, ror #28
   12db8:	andeq	r3, r1, r6, lsl #29
   12dbc:	andeq	r3, r1, lr, lsr #29
   12dc0:	ldrdeq	r3, [r1], -sl
   12dc4:	andeq	r3, r1, sl, lsl #30
   12dc8:	andeq	r3, r1, lr, lsr pc
   12dcc:	push	{r0, r1, r4, lr}
   12dd0:	mov	ip, #0
   12dd4:	ldr	lr, [sp, #16]
   12dd8:	ldr	r4, [lr, ip, lsl #2]
   12ddc:	cmp	r4, #0
   12de0:	bne	12df8 <putchar_unlocked@plt+0x20b0>
   12de4:	str	lr, [sp]
   12de8:	str	ip, [sp, #4]
   12dec:	bl	12a04 <putchar_unlocked@plt+0x1cbc>
   12df0:	add	sp, sp, #8
   12df4:	pop	{r4, pc}
   12df8:	add	ip, ip, #1
   12dfc:	b	12dd8 <putchar_unlocked@plt+0x2090>
   12e00:	push	{r4, r5, r6, lr}
   12e04:	sub	sp, sp, #48	; 0x30
   12e08:	mov	ip, #0
   12e0c:	add	lr, sp, #8
   12e10:	mov	r5, lr
   12e14:	ldr	r6, [sp, #64]	; 0x40
   12e18:	ldr	r4, [r6, ip, lsl #2]
   12e1c:	cmp	r4, #0
   12e20:	str	r4, [lr], #4
   12e24:	beq	12e34 <putchar_unlocked@plt+0x20ec>
   12e28:	add	ip, ip, #1
   12e2c:	cmp	ip, #10
   12e30:	bne	12e18 <putchar_unlocked@plt+0x20d0>
   12e34:	stm	sp, {r5, ip}
   12e38:	bl	12a04 <putchar_unlocked@plt+0x1cbc>
   12e3c:	add	sp, sp, #48	; 0x30
   12e40:	pop	{r4, r5, r6, pc}
   12e44:	push	{r3}		; (str r3, [sp, #-4]!)
   12e48:	push	{r0, r1, r2, r3, lr}
   12e4c:	add	r3, sp, #24
   12e50:	str	r3, [sp]
   12e54:	str	r3, [sp, #12]
   12e58:	ldr	r3, [sp, #20]
   12e5c:	bl	12e00 <putchar_unlocked@plt+0x20b8>
   12e60:	add	sp, sp, #16
   12e64:	pop	{lr}		; (ldr lr, [sp], #4)
   12e68:	add	sp, sp, #4
   12e6c:	bx	lr
   12e70:	ldr	r3, [pc, #116]	; 12eec <putchar_unlocked@plt+0x21a4>
   12e74:	mov	r0, #10
   12e78:	push	{r4, lr}
   12e7c:	ldr	r1, [r3]
   12e80:	bl	10bb0 <fputc_unlocked@plt>
   12e84:	mov	r2, #5
   12e88:	ldr	r1, [pc, #96]	; 12ef0 <putchar_unlocked@plt+0x21a8>
   12e8c:	mov	r0, #0
   12e90:	bl	10bbc <dcgettext@plt>
   12e94:	mov	r1, r0
   12e98:	ldr	r2, [pc, #84]	; 12ef4 <putchar_unlocked@plt+0x21ac>
   12e9c:	mov	r0, #1
   12ea0:	bl	10cb8 <__printf_chk@plt>
   12ea4:	mov	r2, #5
   12ea8:	ldr	r1, [pc, #72]	; 12ef8 <putchar_unlocked@plt+0x21b0>
   12eac:	mov	r0, #0
   12eb0:	bl	10bbc <dcgettext@plt>
   12eb4:	mov	r1, r0
   12eb8:	ldr	r3, [pc, #60]	; 12efc <putchar_unlocked@plt+0x21b4>
   12ebc:	mov	r0, #1
   12ec0:	ldr	r2, [pc, #56]	; 12f00 <putchar_unlocked@plt+0x21b8>
   12ec4:	bl	10cb8 <__printf_chk@plt>
   12ec8:	mov	r2, #5
   12ecc:	ldr	r1, [pc, #48]	; 12f04 <putchar_unlocked@plt+0x21bc>
   12ed0:	mov	r0, #0
   12ed4:	bl	10bbc <dcgettext@plt>
   12ed8:	mov	r1, r0
   12edc:	ldr	r2, [pc, #36]	; 12f08 <putchar_unlocked@plt+0x21c0>
   12ee0:	mov	r0, #1
   12ee4:	pop	{r4, lr}
   12ee8:	b	10cb8 <__printf_chk@plt>
   12eec:	andeq	r5, r2, ip, lsr #2
   12ef0:	andeq	r3, r1, sl, ror pc
   12ef4:	andeq	r3, r1, lr, lsl #31
   12ef8:	andeq	r3, r1, r4, lsr #31
   12efc:	andeq	r3, r1, r4, ror sl
   12f00:	muleq	r1, ip, sl
   12f04:			; <UNDEFINED> instruction: 0x00013fb8
   12f08:	ldrdeq	r3, [r1], -pc	; <UNPREDICTABLE>
   12f0c:	push	{r4, lr}
   12f10:	bl	13258 <putchar_unlocked@plt+0x2510>
   12f14:	cmp	r0, #0
   12f18:	popne	{r4, pc}
   12f1c:	bl	131c4 <putchar_unlocked@plt+0x247c>
   12f20:	push	{r4, lr}
   12f24:	bl	13258 <putchar_unlocked@plt+0x2510>
   12f28:	cmp	r0, #0
   12f2c:	popne	{r4, pc}
   12f30:	bl	131c4 <putchar_unlocked@plt+0x247c>
   12f34:	b	12f0c <putchar_unlocked@plt+0x21c4>
   12f38:	push	{r4, r5, r6, lr}
   12f3c:	mov	r5, r0
   12f40:	mov	r4, r1
   12f44:	bl	13284 <putchar_unlocked@plt+0x253c>
   12f48:	cmp	r0, #0
   12f4c:	popne	{r4, r5, r6, pc}
   12f50:	adds	r4, r4, #0
   12f54:	movne	r4, #1
   12f58:	cmp	r5, #0
   12f5c:	moveq	r4, #1
   12f60:	cmp	r4, #0
   12f64:	popeq	{r4, r5, r6, pc}
   12f68:	bl	131c4 <putchar_unlocked@plt+0x247c>
   12f6c:	push	{r4, lr}
   12f70:	bl	135a0 <putchar_unlocked@plt+0x2858>
   12f74:	cmp	r0, #0
   12f78:	popne	{r4, pc}
   12f7c:	bl	131c4 <putchar_unlocked@plt+0x247c>
   12f80:	push	{r4, r5, r6, lr}
   12f84:	mov	r6, r0
   12f88:	mov	r5, r1
   12f8c:	mov	r4, r2
   12f90:	bl	13648 <putchar_unlocked@plt+0x2900>
   12f94:	cmp	r0, #0
   12f98:	popne	{r4, r5, r6, pc}
   12f9c:	cmp	r6, #0
   12fa0:	beq	12fb0 <putchar_unlocked@plt+0x2268>
   12fa4:	cmp	r5, #0
   12fa8:	cmpne	r4, #0
   12fac:	popeq	{r4, r5, r6, pc}
   12fb0:	bl	131c4 <putchar_unlocked@plt+0x247c>
   12fb4:	b	12f80 <putchar_unlocked@plt+0x2238>
   12fb8:	push	{r4, lr}
   12fbc:	bl	135b0 <putchar_unlocked@plt+0x2868>
   12fc0:	cmp	r0, #0
   12fc4:	popne	{r4, pc}
   12fc8:	bl	131c4 <putchar_unlocked@plt+0x247c>
   12fcc:	mov	r2, r1
   12fd0:	mov	r1, r0
   12fd4:	mov	r0, #0
   12fd8:	b	12f80 <putchar_unlocked@plt+0x2238>
   12fdc:	mov	r2, r1
   12fe0:	mov	r1, r0
   12fe4:	mov	r0, #0
   12fe8:	b	12fb8 <putchar_unlocked@plt+0x2270>
   12fec:	cmp	r0, #0
   12ff0:	push	{r4, r5, r6, lr}
   12ff4:	mov	r5, r1
   12ff8:	ldr	r4, [r1]
   12ffc:	bne	13028 <putchar_unlocked@plt+0x22e0>
   13000:	cmp	r4, #0
   13004:	bne	13018 <putchar_unlocked@plt+0x22d0>
   13008:	mov	r4, #64	; 0x40
   1300c:	udiv	r4, r4, r2
   13010:	cmp	r2, #64	; 0x40
   13014:	addhi	r4, r4, #1
   13018:	mov	r1, r4
   1301c:	bl	12f80 <putchar_unlocked@plt+0x2238>
   13020:	str	r4, [r5]
   13024:	pop	{r4, r5, r6, pc}
   13028:	lsr	r3, r4, #1
   1302c:	add	r3, r3, #1
   13030:	adds	r4, r4, r3
   13034:	bcc	13018 <putchar_unlocked@plt+0x22d0>
   13038:	bl	131c4 <putchar_unlocked@plt+0x247c>
   1303c:	mov	r2, #1
   13040:	b	12fec <putchar_unlocked@plt+0x22a4>
   13044:	ldr	ip, [r1]
   13048:	push	{r4, r5, r6, r7, r8, lr}
   1304c:	mov	r5, r1
   13050:	mvn	r8, r3
   13054:	lsr	r8, r8, #31
   13058:	ldr	lr, [sp, #24]
   1305c:	asr	r1, ip, #1
   13060:	adds	r4, ip, r1
   13064:	mvnvs	r4, #-2147483648	; 0x80000000
   13068:	cmp	r3, r4
   1306c:	movge	r1, #0
   13070:	andlt	r1, r8, #1
   13074:	cmp	r1, #0
   13078:	movne	r4, r3
   1307c:	smull	r6, r7, r4, lr
   13080:	cmp	r7, r6, asr #31
   13084:	bne	1309c <putchar_unlocked@plt+0x2354>
   13088:	cmp	r6, #63	; 0x3f
   1308c:	mov	r1, r6
   13090:	bgt	130ac <putchar_unlocked@plt+0x2364>
   13094:	mov	r1, #64	; 0x40
   13098:	b	130a0 <putchar_unlocked@plt+0x2358>
   1309c:	mvn	r1, #-2147483648	; 0x80000000
   130a0:	sdiv	r4, r1, lr
   130a4:	mls	r6, lr, r4, r1
   130a8:	sub	r1, r1, r6
   130ac:	cmp	r0, #0
   130b0:	sub	r6, r4, ip
   130b4:	streq	r0, [r5]
   130b8:	cmp	r6, r2
   130bc:	bge	130f0 <putchar_unlocked@plt+0x23a8>
   130c0:	adds	r4, ip, r2
   130c4:	bvs	130ec <putchar_unlocked@plt+0x23a4>
   130c8:	cmp	r4, r3
   130cc:	movle	r3, #0
   130d0:	andgt	r3, r8, #1
   130d4:	cmp	r3, #0
   130d8:	bne	130ec <putchar_unlocked@plt+0x23a4>
   130dc:	smull	r2, r3, r4, lr
   130e0:	cmp	r3, r2, asr #31
   130e4:	mov	r1, r2
   130e8:	beq	130f0 <putchar_unlocked@plt+0x23a8>
   130ec:	bl	131c4 <putchar_unlocked@plt+0x247c>
   130f0:	bl	12f38 <putchar_unlocked@plt+0x21f0>
   130f4:	str	r4, [r5]
   130f8:	pop	{r4, r5, r6, r7, r8, pc}
   130fc:	push	{r4, lr}
   13100:	bl	13204 <putchar_unlocked@plt+0x24bc>
   13104:	cmp	r0, #0
   13108:	popne	{r4, pc}
   1310c:	bl	131c4 <putchar_unlocked@plt+0x247c>
   13110:	mov	r1, #1
   13114:	b	130fc <putchar_unlocked@plt+0x23b4>
   13118:	push	{r4, lr}
   1311c:	bl	13204 <putchar_unlocked@plt+0x24bc>
   13120:	cmp	r0, #0
   13124:	popne	{r4, pc}
   13128:	bl	131c4 <putchar_unlocked@plt+0x247c>
   1312c:	mov	r1, #1
   13130:	b	13118 <putchar_unlocked@plt+0x23d0>
   13134:	push	{r4, r5, r6, lr}
   13138:	mov	r4, r1
   1313c:	mov	r5, r0
   13140:	mov	r0, r1
   13144:	bl	12f0c <putchar_unlocked@plt+0x21c4>
   13148:	mov	r2, r4
   1314c:	mov	r1, r5
   13150:	pop	{r4, r5, r6, lr}
   13154:	b	10b80 <memcpy@plt>
   13158:	push	{r4, r5, r6, lr}
   1315c:	mov	r4, r1
   13160:	mov	r5, r0
   13164:	mov	r0, r1
   13168:	bl	12f20 <putchar_unlocked@plt+0x21d8>
   1316c:	mov	r2, r4
   13170:	mov	r1, r5
   13174:	pop	{r4, r5, r6, lr}
   13178:	b	10b80 <memcpy@plt>
   1317c:	push	{r4, r5, r6, lr}
   13180:	mov	r5, r0
   13184:	add	r0, r1, #1
   13188:	mov	r4, r1
   1318c:	bl	12f20 <putchar_unlocked@plt+0x21d8>
   13190:	mov	r2, #0
   13194:	mov	r1, r5
   13198:	strb	r2, [r0, r4]
   1319c:	mov	r2, r4
   131a0:	pop	{r4, r5, r6, lr}
   131a4:	b	10b80 <memcpy@plt>
   131a8:	push	{r4, lr}
   131ac:	mov	r4, r0
   131b0:	bl	10c88 <strlen@plt>
   131b4:	add	r1, r0, #1
   131b8:	mov	r0, r4
   131bc:	pop	{r4, lr}
   131c0:	b	13134 <putchar_unlocked@plt+0x23ec>
   131c4:	ldr	r3, [pc, #44]	; 131f8 <putchar_unlocked@plt+0x24b0>
   131c8:	mov	r2, #5
   131cc:	mov	r0, #0
   131d0:	push	{r4, lr}
   131d4:	ldr	r1, [pc, #32]	; 131fc <putchar_unlocked@plt+0x24b4>
   131d8:	ldr	r4, [r3]
   131dc:	bl	10bbc <dcgettext@plt>
   131e0:	mov	r3, r0
   131e4:	ldr	r2, [pc, #20]	; 13200 <putchar_unlocked@plt+0x24b8>
   131e8:	mov	r1, #0
   131ec:	mov	r0, r4
   131f0:	bl	10c28 <error@plt>
   131f4:	bl	10d3c <abort@plt>
   131f8:	ldrdeq	r5, [r2], -r0
   131fc:	andeq	r4, r1, fp, lsr #32
   13200:	andeq	r3, r1, sl, lsl ip
   13204:	cmp	r1, #0
   13208:	cmpne	r0, #0
   1320c:	beq	13244 <putchar_unlocked@plt+0x24fc>
   13210:	push	{r4, r5, r6, lr}
   13214:	umull	r4, r5, r0, r1
   13218:	adds	r3, r5, #0
   1321c:	movne	r3, #1
   13220:	cmp	r4, #0
   13224:	blt	13230 <putchar_unlocked@plt+0x24e8>
   13228:	cmp	r3, #0
   1322c:	beq	13250 <putchar_unlocked@plt+0x2508>
   13230:	bl	10c94 <__errno_location@plt>
   13234:	mov	r3, #12
   13238:	str	r3, [r0]
   1323c:	mov	r0, #0
   13240:	pop	{r4, r5, r6, pc}
   13244:	mov	r1, #1
   13248:	mov	r0, r1
   1324c:	b	10b38 <calloc@plt>
   13250:	pop	{r4, r5, r6, lr}
   13254:	b	1324c <putchar_unlocked@plt+0x2504>
   13258:	cmp	r0, #0
   1325c:	beq	1327c <putchar_unlocked@plt+0x2534>
   13260:	bge	13280 <putchar_unlocked@plt+0x2538>
   13264:	push	{r4, lr}
   13268:	bl	10c94 <__errno_location@plt>
   1326c:	mov	r3, #12
   13270:	str	r3, [r0]
   13274:	mov	r0, #0
   13278:	pop	{r4, pc}
   1327c:	mov	r0, #1
   13280:	b	10c34 <malloc@plt>
   13284:	cmp	r0, #0
   13288:	bne	13294 <putchar_unlocked@plt+0x254c>
   1328c:	mov	r0, r1
   13290:	b	13258 <putchar_unlocked@plt+0x2510>
   13294:	cmp	r1, #0
   13298:	push	{r4, lr}
   1329c:	bne	132ac <putchar_unlocked@plt+0x2564>
   132a0:	bl	134b4 <putchar_unlocked@plt+0x276c>
   132a4:	mov	r0, #0
   132a8:	pop	{r4, pc}
   132ac:	blt	132b8 <putchar_unlocked@plt+0x2570>
   132b0:	pop	{r4, lr}
   132b4:	b	10bc8 <realloc@plt>
   132b8:	bl	10c94 <__errno_location@plt>
   132bc:	mov	r3, #12
   132c0:	str	r3, [r0]
   132c4:	b	132a4 <putchar_unlocked@plt+0x255c>
   132c8:	mov	r3, r0
   132cc:	mov	r2, r3
   132d0:	mov	r0, r3
   132d4:	ldrb	r1, [r2], #1
   132d8:	cmp	r1, #47	; 0x2f
   132dc:	beq	132e8 <putchar_unlocked@plt+0x25a0>
   132e0:	mov	r2, #0
   132e4:	b	13304 <putchar_unlocked@plt+0x25bc>
   132e8:	mov	r3, r2
   132ec:	b	132cc <putchar_unlocked@plt+0x2584>
   132f0:	cmp	r1, #47	; 0x2f
   132f4:	moveq	r2, #1
   132f8:	beq	13304 <putchar_unlocked@plt+0x25bc>
   132fc:	cmp	r2, #0
   13300:	bne	13318 <putchar_unlocked@plt+0x25d0>
   13304:	mov	ip, r3
   13308:	ldrb	r1, [r3], #1
   1330c:	cmp	r1, #0
   13310:	bne	132f0 <putchar_unlocked@plt+0x25a8>
   13314:	bx	lr
   13318:	mov	r0, ip
   1331c:	b	132e0 <putchar_unlocked@plt+0x2598>
   13320:	push	{r4, lr}
   13324:	mov	r4, r0
   13328:	bl	10c88 <strlen@plt>
   1332c:	cmp	r0, #1
   13330:	popls	{r4, pc}
   13334:	sub	r3, r0, #1
   13338:	ldrb	r2, [r4, r3]
   1333c:	cmp	r2, #47	; 0x2f
   13340:	popne	{r4, pc}
   13344:	mov	r0, r3
   13348:	b	1332c <putchar_unlocked@plt+0x25e4>
   1334c:	push	{r4, r5, r6, lr}
   13350:	mov	r4, r0
   13354:	bl	10c04 <__fpending@plt>
   13358:	mov	r5, r0
   1335c:	mov	r0, r4
   13360:	bl	10c10 <ferror_unlocked@plt>
   13364:	mov	r6, r0
   13368:	mov	r0, r4
   1336c:	bl	133bc <putchar_unlocked@plt+0x2674>
   13370:	cmp	r6, #0
   13374:	mov	r4, r0
   13378:	bne	133a4 <putchar_unlocked@plt+0x265c>
   1337c:	cmp	r0, #0
   13380:	beq	1339c <putchar_unlocked@plt+0x2654>
   13384:	cmp	r5, #0
   13388:	bne	133b4 <putchar_unlocked@plt+0x266c>
   1338c:	bl	10c94 <__errno_location@plt>
   13390:	ldr	r4, [r0]
   13394:	subs	r4, r4, #9
   13398:	mvnne	r4, #0
   1339c:	mov	r0, r4
   133a0:	pop	{r4, r5, r6, pc}
   133a4:	cmp	r0, #0
   133a8:	bne	133b4 <putchar_unlocked@plt+0x266c>
   133ac:	bl	10c94 <__errno_location@plt>
   133b0:	str	r4, [r0]
   133b4:	mvn	r4, #0
   133b8:	b	1339c <putchar_unlocked@plt+0x2654>
   133bc:	push	{r0, r1, r2, r4, r5, lr}
   133c0:	mov	r4, r0
   133c4:	bl	10cc4 <fileno@plt>
   133c8:	cmp	r0, #0
   133cc:	mov	r0, r4
   133d0:	bge	133e0 <putchar_unlocked@plt+0x2698>
   133d4:	add	sp, sp, #12
   133d8:	pop	{r4, r5, lr}
   133dc:	b	10cdc <fclose@plt>
   133e0:	bl	10c4c <__freading@plt>
   133e4:	cmp	r0, #0
   133e8:	bne	13424 <putchar_unlocked@plt+0x26dc>
   133ec:	mov	r0, r4
   133f0:	bl	13464 <putchar_unlocked@plt+0x271c>
   133f4:	cmp	r0, #0
   133f8:	bne	13458 <putchar_unlocked@plt+0x2710>
   133fc:	mov	r5, #0
   13400:	mov	r0, r4
   13404:	bl	10cdc <fclose@plt>
   13408:	cmp	r5, #0
   1340c:	beq	1341c <putchar_unlocked@plt+0x26d4>
   13410:	bl	10c94 <__errno_location@plt>
   13414:	str	r5, [r0]
   13418:	mvn	r0, #0
   1341c:	add	sp, sp, #12
   13420:	pop	{r4, r5, pc}
   13424:	mov	r0, r4
   13428:	bl	10cc4 <fileno@plt>
   1342c:	mov	r3, #1
   13430:	mov	r2, #0
   13434:	str	r3, [sp]
   13438:	mov	r3, #0
   1343c:	bl	10bec <lseek64@plt>
   13440:	mvn	r3, #0
   13444:	mvn	r2, #0
   13448:	cmp	r1, r3
   1344c:	cmpeq	r0, r2
   13450:	bne	133ec <putchar_unlocked@plt+0x26a4>
   13454:	b	133fc <putchar_unlocked@plt+0x26b4>
   13458:	bl	10c94 <__errno_location@plt>
   1345c:	ldr	r5, [r0]
   13460:	b	13400 <putchar_unlocked@plt+0x26b8>
   13464:	push	{r0, r1, r4, lr}
   13468:	subs	r4, r0, #0
   1346c:	bne	13480 <putchar_unlocked@plt+0x2738>
   13470:	mov	r0, r4
   13474:	add	sp, sp, #8
   13478:	pop	{r4, lr}
   1347c:	b	10b5c <fflush@plt>
   13480:	bl	10c4c <__freading@plt>
   13484:	cmp	r0, #0
   13488:	beq	13470 <putchar_unlocked@plt+0x2728>
   1348c:	ldr	r3, [r4]
   13490:	tst	r3, #256	; 0x100
   13494:	beq	13470 <putchar_unlocked@plt+0x2728>
   13498:	mov	r3, #1
   1349c:	mov	r2, #0
   134a0:	mov	r0, r4
   134a4:	str	r3, [sp]
   134a8:	mov	r3, #0
   134ac:	bl	13504 <putchar_unlocked@plt+0x27bc>
   134b0:	b	13470 <putchar_unlocked@plt+0x2728>
   134b4:	push	{r0, r1, r2, r4, r5, lr}
   134b8:	mov	r5, r0
   134bc:	bl	10c94 <__errno_location@plt>
   134c0:	mov	r4, r0
   134c4:	mov	r0, r5
   134c8:	ldr	r3, [r4]
   134cc:	str	r3, [sp]
   134d0:	str	r3, [sp, #4]
   134d4:	mov	r3, #0
   134d8:	str	r3, [r4]
   134dc:	bl	10b68 <free@plt>
   134e0:	ldr	r3, [r4]
   134e4:	add	r2, sp, #8
   134e8:	clz	r3, r3
   134ec:	lsr	r3, r3, #5
   134f0:	add	r3, r2, r3, lsl #2
   134f4:	ldr	r3, [r3, #-8]
   134f8:	str	r3, [r4]
   134fc:	add	sp, sp, #12
   13500:	pop	{r4, r5, pc}
   13504:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13508:	mov	r4, r0
   1350c:	ldmib	r0, {ip, lr}
   13510:	ldr	r8, [sp, #32]
   13514:	cmp	lr, ip
   13518:	bne	13588 <putchar_unlocked@plt+0x2840>
   1351c:	ldr	ip, [r0, #16]
   13520:	ldr	lr, [r0, #20]
   13524:	cmp	lr, ip
   13528:	bne	13588 <putchar_unlocked@plt+0x2840>
   1352c:	ldr	r5, [r0, #36]	; 0x24
   13530:	cmp	r5, #0
   13534:	bne	13588 <putchar_unlocked@plt+0x2840>
   13538:	mov	r6, r2
   1353c:	mov	r7, r3
   13540:	bl	10cc4 <fileno@plt>
   13544:	mov	r2, r6
   13548:	mov	r3, r7
   1354c:	str	r8, [sp]
   13550:	bl	10bec <lseek64@plt>
   13554:	mvn	r3, #0
   13558:	mvn	r2, #0
   1355c:	cmp	r1, r3
   13560:	cmpeq	r0, r2
   13564:	mvneq	r0, #0
   13568:	beq	13580 <putchar_unlocked@plt+0x2838>
   1356c:	ldr	r3, [r4]
   13570:	strd	r0, [r4, #80]	; 0x50
   13574:	mov	r0, r5
   13578:	bic	r3, r3, #16
   1357c:	str	r3, [r4]
   13580:	add	sp, sp, #8
   13584:	pop	{r4, r5, r6, r7, r8, pc}
   13588:	mov	r0, r4
   1358c:	str	r8, [sp, #32]
   13590:	add	sp, sp, #8
   13594:	pop	{r4, r5, r6, r7, r8, lr}
   13598:	b	10ce8 <fseeko64@plt>
   1359c:	b	13258 <putchar_unlocked@plt+0x2510>
   135a0:	cmp	r1, #0
   135a4:	orreq	r1, r1, #1
   135a8:	b	13284 <putchar_unlocked@plt+0x253c>
   135ac:	b	13204 <putchar_unlocked@plt+0x24bc>
   135b0:	cmp	r2, #0
   135b4:	cmpne	r1, #0
   135b8:	moveq	r2, #1
   135bc:	moveq	r1, r2
   135c0:	b	13648 <putchar_unlocked@plt+0x2900>
   135c4:	push	{r4, lr}
   135c8:	mov	r0, #14
   135cc:	bl	10d0c <nl_langinfo@plt>
   135d0:	cmp	r0, #0
   135d4:	beq	135ec <putchar_unlocked@plt+0x28a4>
   135d8:	ldrb	r2, [r0]
   135dc:	ldr	r3, [pc, #16]	; 135f4 <putchar_unlocked@plt+0x28ac>
   135e0:	cmp	r2, #0
   135e4:	moveq	r0, r3
   135e8:	pop	{r4, pc}
   135ec:	ldr	r0, [pc]	; 135f4 <putchar_unlocked@plt+0x28ac>
   135f0:	pop	{r4, pc}
   135f4:	andeq	r4, r1, ip, lsr r0
   135f8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   135fc:	subs	r5, r0, #0
   13600:	mov	r7, r2
   13604:	addeq	r5, sp, #4
   13608:	mov	r6, r1
   1360c:	mov	r0, r5
   13610:	bl	10c1c <mbrtowc@plt>
   13614:	cmp	r7, #0
   13618:	cmnne	r0, #3
   1361c:	mov	r4, r0
   13620:	bls	1363c <putchar_unlocked@plt+0x28f4>
   13624:	mov	r0, #0
   13628:	bl	13674 <putchar_unlocked@plt+0x292c>
   1362c:	cmp	r0, #0
   13630:	ldrbeq	r3, [r6]
   13634:	moveq	r4, #1
   13638:	streq	r3, [r5]
   1363c:	mov	r0, r4
   13640:	add	sp, sp, #12
   13644:	pop	{r4, r5, r6, r7, pc}
   13648:	umull	r2, r3, r1, r2
   1364c:	cmp	r3, #0
   13650:	bne	1365c <putchar_unlocked@plt+0x2914>
   13654:	mov	r1, r2
   13658:	b	13284 <putchar_unlocked@plt+0x253c>
   1365c:	push	{r4, lr}
   13660:	bl	10c94 <__errno_location@plt>
   13664:	mov	r3, #12
   13668:	str	r3, [r0]
   1366c:	mov	r0, #0
   13670:	pop	{r4, pc}
   13674:	push	{lr}		; (str lr, [sp, #-4]!)
   13678:	sub	sp, sp, #268	; 0x10c
   1367c:	movw	r2, #257	; 0x101
   13680:	add	r1, sp, #4
   13684:	bl	136d0 <putchar_unlocked@plt+0x2988>
   13688:	cmp	r0, #0
   1368c:	movne	r0, #0
   13690:	bne	136c0 <putchar_unlocked@plt+0x2978>
   13694:	ldr	r1, [pc, #44]	; 136c8 <putchar_unlocked@plt+0x2980>
   13698:	add	r0, sp, #4
   1369c:	bl	10b50 <strcmp@plt>
   136a0:	cmp	r0, #0
   136a4:	beq	136bc <putchar_unlocked@plt+0x2974>
   136a8:	ldr	r1, [pc, #28]	; 136cc <putchar_unlocked@plt+0x2984>
   136ac:	add	r0, sp, #4
   136b0:	bl	10b50 <strcmp@plt>
   136b4:	adds	r0, r0, #0
   136b8:	movne	r0, #1
   136bc:	and	r0, r0, #1
   136c0:	add	sp, sp, #268	; 0x10c
   136c4:	pop	{pc}		; (ldr pc, [sp], #4)
   136c8:	andeq	r4, r1, r2, asr #32
   136cc:	andeq	r4, r1, r4, asr #32
   136d0:	push	{r4, r5, r6, lr}
   136d4:	mov	r5, r1
   136d8:	mov	r1, #0
   136dc:	mov	r4, r2
   136e0:	bl	10cf4 <setlocale@plt>
   136e4:	subs	r6, r0, #0
   136e8:	bne	136fc <putchar_unlocked@plt+0x29b4>
   136ec:	cmp	r4, #0
   136f0:	mov	r0, #22
   136f4:	strbne	r6, [r5]
   136f8:	pop	{r4, r5, r6, pc}
   136fc:	bl	10c88 <strlen@plt>
   13700:	cmp	r4, r0
   13704:	bls	13720 <putchar_unlocked@plt+0x29d8>
   13708:	add	r2, r0, #1
   1370c:	mov	r1, r6
   13710:	mov	r0, r5
   13714:	bl	10b80 <memcpy@plt>
   13718:	mov	r0, #0
   1371c:	pop	{r4, r5, r6, pc}
   13720:	cmp	r4, #0
   13724:	beq	13744 <putchar_unlocked@plt+0x29fc>
   13728:	sub	r4, r4, #1
   1372c:	mov	r1, r6
   13730:	mov	r2, r4
   13734:	mov	r0, r5
   13738:	bl	10b80 <memcpy@plt>
   1373c:	mov	r3, #0
   13740:	strb	r3, [r5, r4]
   13744:	mov	r0, #34	; 0x22
   13748:	pop	{r4, r5, r6, pc}
   1374c:	mov	r1, #0
   13750:	b	10cf4 <setlocale@plt>
   13754:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13758:	mov	r7, r0
   1375c:	ldr	r6, [pc, #72]	; 137ac <putchar_unlocked@plt+0x2a64>
   13760:	ldr	r5, [pc, #72]	; 137b0 <putchar_unlocked@plt+0x2a68>
   13764:	add	r6, pc, r6
   13768:	add	r5, pc, r5
   1376c:	sub	r6, r6, r5
   13770:	mov	r8, r1
   13774:	mov	r9, r2
   13778:	bl	10b18 <calloc@plt-0x20>
   1377c:	asrs	r6, r6, #2
   13780:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13784:	mov	r4, #0
   13788:	add	r4, r4, #1
   1378c:	ldr	r3, [r5], #4
   13790:	mov	r2, r9
   13794:	mov	r1, r8
   13798:	mov	r0, r7
   1379c:	blx	r3
   137a0:	cmp	r6, r4
   137a4:	bne	13788 <putchar_unlocked@plt+0x2a40>
   137a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137ac:	andeq	r1, r1, r8, lsr #15
   137b0:	andeq	r1, r1, r0, lsr #15
   137b4:	bx	lr
   137b8:	ldr	r3, [pc, #12]	; 137cc <putchar_unlocked@plt+0x2a84>
   137bc:	mov	r1, #0
   137c0:	add	r3, pc, r3
   137c4:	ldr	r2, [r3]
   137c8:	b	10ca0 <__cxa_atexit@plt>
   137cc:	andeq	r1, r1, r0, lsl #18

Disassembly of section .fini:

000137d0 <.fini>:
   137d0:	push	{r3, lr}
   137d4:	pop	{r3, pc}
