
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

000125fc <.init>:
   125fc:	push	{r3, lr}
   12600:	bl	12b08 <_start@@Base+0x3c>
   12604:	pop	{r3, pc}

Disassembly of section .plt:

00012608 <coda_cursor_get_byte_size@plt-0x14>:
   12608:	push	{lr}		; (str lr, [sp, #-4]!)
   1260c:	ldr	lr, [pc, #4]	; 12618 <coda_cursor_get_byte_size@plt-0x4>
   12610:	add	lr, pc, lr
   12614:	ldr	pc, [lr, #8]!
   12618:	andeq	r9, r1, r8, ror #19

0001261c <coda_cursor_get_byte_size@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #102400	; 0x19000
   12624:	ldr	pc, [ip, #2536]!	; 0x9e8

00012628 <coda_type_get_special_type_name@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #102400	; 0x19000
   12630:	ldr	pc, [ip, #2528]!	; 0x9e0

00012634 <coda_set_option_use_fast_size_expressions@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #102400	; 0x19000
   1263c:	ldr	pc, [ip, #2520]!	; 0x9d8

00012640 <raise@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #102400	; 0x19000
   12648:	ldr	pc, [ip, #2512]!	; 0x9d0

0001264c <coda_get_option_bypass_special_types@plt>:
   1264c:	add	ip, pc, #0, 12
   12650:	add	ip, ip, #102400	; 0x19000
   12654:	ldr	pc, [ip, #2504]!	; 0x9c8

00012658 <coda_set_option_perform_boundary_checks@plt>:
   12658:	add	ip, pc, #0, 12
   1265c:	add	ip, ip, #102400	; 0x19000
   12660:	ldr	pc, [ip, #2496]!	; 0x9c0

00012664 <strcmp@plt>:
   12664:	add	ip, pc, #0, 12
   12668:	add	ip, ip, #102400	; 0x19000
   1266c:	ldr	pc, [ip, #2488]!	; 0x9b8

00012670 <coda_type_get_record_field_hidden_status@plt>:
   12670:	add	ip, pc, #0, 12
   12674:	add	ip, ip, #102400	; 0x19000
   12678:	ldr	pc, [ip, #2480]!	; 0x9b0

0001267c <printf@plt>:
   1267c:	add	ip, pc, #0, 12
   12680:	add	ip, ip, #102400	; 0x19000
   12684:	ldr	pc, [ip, #2472]!	; 0x9a8

00012688 <coda_cursor_get_record_field_available_status@plt>:
   12688:	add	ip, pc, #0, 12
   1268c:	add	ip, ip, #102400	; 0x19000
   12690:	ldr	pc, [ip, #2464]!	; 0x9a0

00012694 <fopen@plt>:
   12694:	add	ip, pc, #0, 12
   12698:	add	ip, ip, #102400	; 0x19000
   1269c:	ldr	pc, [ip, #2456]!	; 0x998

000126a0 <coda_set_error@plt>:
   126a0:	add	ip, pc, #0, 12
   126a4:	add	ip, ip, #102400	; 0x19000
   126a8:	ldr	pc, [ip, #2448]!	; 0x990

000126ac <coda_open@plt>:
   126ac:	add	ip, pc, #0, 12
   126b0:	add	ip, ip, #102400	; 0x19000
   126b4:	ldr	pc, [ip, #2440]!	; 0x988

000126b8 <fflush@plt>:
   126b8:	add	ip, pc, #0, 12
   126bc:	add	ip, ip, #102400	; 0x19000
   126c0:	ldr	pc, [ip, #2432]!	; 0x980

000126c4 <coda_time_double_to_string@plt>:
   126c4:	add	ip, pc, #0, 12
   126c8:	add	ip, ip, #102400	; 0x19000
   126cc:	ldr	pc, [ip, #2424]!	; 0x978

000126d0 <coda_cursor_get_num_elements@plt>:
   126d0:	add	ip, pc, #0, 12
   126d4:	add	ip, ip, #102400	; 0x19000
   126d8:	ldr	pc, [ip, #2416]!	; 0x970

000126dc <coda_str64u@plt>:
   126dc:	add	ip, pc, #0, 12
   126e0:	add	ip, ip, #102400	; 0x19000
   126e4:	ldr	pc, [ip, #2408]!	; 0x968

000126e8 <free@plt>:
   126e8:	add	ip, pc, #0, 12
   126ec:	add	ip, ip, #102400	; 0x19000
   126f0:	ldr	pc, [ip, #2400]!	; 0x960

000126f4 <coda_set_option_use_mmap@plt>:
   126f4:	add	ip, pc, #0, 12
   126f8:	add	ip, ip, #102400	; 0x19000
   126fc:	ldr	pc, [ip, #2392]!	; 0x958

00012700 <coda_set_definition_path_conditional@plt>:
   12700:	add	ip, pc, #0, 12
   12704:	add	ip, ip, #102400	; 0x19000
   12708:	ldr	pc, [ip, #2384]!	; 0x950

0001270c <coda_cursor_read_uint32@plt>:
   1270c:	add	ip, pc, #0, 12
   12710:	add	ip, ip, #102400	; 0x19000
   12714:	ldr	pc, [ip, #2376]!	; 0x948

00012718 <coda_set_option_bypass_special_types@plt>:
   12718:	add	ip, pc, #0, 12
   1271c:	add	ip, ip, #102400	; 0x19000
   12720:	ldr	pc, [ip, #2368]!	; 0x940

00012724 <coda_type_get_record_field_type@plt>:
   12724:	add	ip, pc, #0, 12
   12728:	add	ip, ip, #102400	; 0x19000
   1272c:	ldr	pc, [ip, #2360]!	; 0x938

00012730 <coda_cursor_get_type@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #102400	; 0x19000
   12738:	ldr	pc, [ip, #2352]!	; 0x930

0001273c <memcpy@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #102400	; 0x19000
   12744:	ldr	pc, [ip, #2344]!	; 0x928

00012748 <coda_isInf@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #102400	; 0x19000
   12750:	ldr	pc, [ip, #2336]!	; 0x920

00012754 <coda_type_get_bit_size@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #102400	; 0x19000
   1275c:	ldr	pc, [ip, #2328]!	; 0x918

00012760 <coda_type_get_record_field_available_status@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #102400	; 0x19000
   12768:	ldr	pc, [ip, #2320]!	; 0x910

0001276c <coda_cursor_has_attributes@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #102400	; 0x19000
   12774:	ldr	pc, [ip, #2312]!	; 0x908

00012778 <coda_cursor_get_type_class@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #102400	; 0x19000
   12780:	ldr	pc, [ip, #2304]!	; 0x900

00012784 <coda_set_definition_path@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #102400	; 0x19000
   1278c:	ldr	pc, [ip, #2296]!	; 0x8f8

00012790 <coda_get_product_format@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #102400	; 0x19000
   12798:	ldr	pc, [ip, #2288]!	; 0x8f0

0001279c <coda_type_get_unit@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #102400	; 0x19000
   127a4:	ldr	pc, [ip, #2280]!	; 0x8e8

000127a8 <coda_type_get_description@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #102400	; 0x19000
   127b0:	ldr	pc, [ip, #2272]!	; 0x8e0

000127b4 <coda_cursor_get_special_type@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #102400	; 0x19000
   127bc:	ldr	pc, [ip, #2264]!	; 0x8d8

000127c0 <coda_cursor_goto_first_array_element@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #102400	; 0x19000
   127c8:	ldr	pc, [ip, #2256]!	; 0x8d0

000127cc <fwrite@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #102400	; 0x19000
   127d4:	ldr	pc, [ip, #2248]!	; 0x8c8

000127d8 <coda_cursor_set_product@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #102400	; 0x19000
   127e0:	ldr	pc, [ip, #2240]!	; 0x8c0

000127e4 <coda_cursor_goto_first_record_field@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #102400	; 0x19000
   127ec:	ldr	pc, [ip, #2232]!	; 0x8b8

000127f0 <coda_cursor_goto_record_field_by_index@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #102400	; 0x19000
   127f8:	ldr	pc, [ip, #2224]!	; 0x8b0

000127fc <coda_done@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #102400	; 0x19000
   12804:	ldr	pc, [ip, #2216]!	; 0x8a8

00012808 <puts@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #102400	; 0x19000
   12810:	ldr	pc, [ip, #2208]!	; 0x8a0

00012814 <coda_cursor_get_read_type@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #102400	; 0x19000
   1281c:	ldr	pc, [ip, #2200]!	; 0x898

00012820 <malloc@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #102400	; 0x19000
   12828:	ldr	pc, [ip, #2192]!	; 0x890

0001282c <__libc_start_main@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #102400	; 0x19000
   12834:	ldr	pc, [ip, #2184]!	; 0x888

00012838 <__gmon_start__@plt>:
   12838:	add	ip, pc, #0, 12
   1283c:	add	ip, ip, #102400	; 0x19000
   12840:	ldr	pc, [ip, #2176]!	; 0x880

00012844 <coda_cursor_read_string@plt>:
   12844:	add	ip, pc, #0, 12
   12848:	add	ip, ip, #102400	; 0x19000
   1284c:	ldr	pc, [ip, #2168]!	; 0x878

00012850 <coda_cursor_goto_parent@plt>:
   12850:	add	ip, pc, #0, 12
   12854:	add	ip, ip, #102400	; 0x19000
   12858:	ldr	pc, [ip, #2160]!	; 0x870

0001285c <coda_type_get_num_record_fields@plt>:
   1285c:	add	ip, pc, #0, 12
   12860:	add	ip, ip, #102400	; 0x19000
   12864:	ldr	pc, [ip, #2152]!	; 0x868

00012868 <exit@plt>:
   12868:	add	ip, pc, #0, 12
   1286c:	add	ip, ip, #102400	; 0x19000
   12870:	ldr	pc, [ip, #2144]!	; 0x860

00012874 <coda_type_get_read_type@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #102400	; 0x19000
   1287c:	ldr	pc, [ip, #2136]!	; 0x858

00012880 <coda_cursor_get_string_length@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #102400	; 0x19000
   12888:	ldr	pc, [ip, #2128]!	; 0x850

0001288c <coda_cursor_read_uint64@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #102400	; 0x19000
   12894:	ldr	pc, [ip, #2120]!	; 0x848

00012898 <coda_cursor_read_double@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #102400	; 0x19000
   128a0:	ldr	pc, [ip, #2112]!	; 0x840

000128a4 <coda_isNaN@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #102400	; 0x19000
   128ac:	ldr	pc, [ip, #2104]!	; 0x838

000128b0 <fprintf@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #102400	; 0x19000
   128b8:	ldr	pc, [ip, #2096]!	; 0x830

000128bc <coda_cursor_goto_next_array_element@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #102400	; 0x19000
   128c4:	ldr	pc, [ip, #2088]!	; 0x828

000128c8 <coda_open_as@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #102400	; 0x19000
   128d0:	ldr	pc, [ip, #2080]!	; 0x820

000128d4 <coda_init@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #102400	; 0x19000
   128dc:	ldr	pc, [ip, #2072]!	; 0x818

000128e0 <coda_set_option_perform_conversions@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #102400	; 0x19000
   128e8:	ldr	pc, [ip, #2064]!	; 0x810

000128ec <coda_cursor_goto_attributes@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #102400	; 0x19000
   128f4:	ldr	pc, [ip, #2056]!	; 0x808

000128f8 <coda_cursor_read_char@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #102400	; 0x19000
   12900:	ldr	pc, [ip, #2048]!	; 0x800

00012904 <memset@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #102400	; 0x19000
   1290c:	ldr	pc, [ip, #2040]!	; 0x7f8

00012910 <putchar@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #102400	; 0x19000
   12918:	ldr	pc, [ip, #2032]!	; 0x7f0

0001291c <strncpy@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #102400	; 0x19000
   12924:	ldr	pc, [ip, #2024]!	; 0x7e8

00012928 <coda_type_get_special_type@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #102400	; 0x19000
   12930:	ldr	pc, [ip, #2016]!	; 0x7e0

00012934 <coda_type_get_record_union_status@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #102400	; 0x19000
   1293c:	ldr	pc, [ip, #2008]!	; 0x7d8

00012940 <coda_cursor_read_complex_double_split@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #102400	; 0x19000
   12948:	ldr	pc, [ip, #2000]!	; 0x7d0

0001294c <coda_type_get_array_base_type@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #102400	; 0x19000
   12954:	ldr	pc, [ip, #1992]!	; 0x7c8

00012958 <fclose@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #102400	; 0x19000
   12960:	ldr	pc, [ip, #1984]!	; 0x7c0

00012964 <coda_type_get_string_length@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #102400	; 0x19000
   1296c:	ldr	pc, [ip, #1976]!	; 0x7b8

00012970 <coda_type_get_native_type_name@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #102400	; 0x19000
   12978:	ldr	pc, [ip, #1968]!	; 0x7b0

0001297c <coda_cursor_get_array_dim@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #102400	; 0x19000
   12984:	ldr	pc, [ip, #1960]!	; 0x7a8

00012988 <coda_cursor_has_ascii_content@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #102400	; 0x19000
   12990:	ldr	pc, [ip, #1952]!	; 0x7a0

00012994 <coda_close@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #102400	; 0x19000
   1299c:	ldr	pc, [ip, #1944]!	; 0x798

000129a0 <coda_cursor_read_int64@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #102400	; 0x19000
   129a8:	ldr	pc, [ip, #1936]!	; 0x790

000129ac <vfprintf@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #102400	; 0x19000
   129b4:	ldr	pc, [ip, #1928]!	; 0x788

000129b8 <coda_cursor_goto@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #102400	; 0x19000
   129c0:	ldr	pc, [ip, #1920]!	; 0x780

000129c4 <coda_type_get_record_field_index_from_name@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #102400	; 0x19000
   129cc:	ldr	pc, [ip, #1912]!	; 0x778

000129d0 <coda_cursor_read_complex_double_pair@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #102400	; 0x19000
   129d8:	ldr	pc, [ip, #1904]!	; 0x770

000129dc <coda_cursor_goto_next_record_field@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #102400	; 0x19000
   129e4:	ldr	pc, [ip, #1896]!	; 0x768

000129e8 <fputc@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #102400	; 0x19000
   129f0:	ldr	pc, [ip, #1888]!	; 0x760

000129f4 <coda_type_get_array_dim@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #102400	; 0x19000
   129fc:	ldr	pc, [ip, #1880]!	; 0x758

00012a00 <coda_cursor_get_bit_size@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #102400	; 0x19000
   12a08:	ldr	pc, [ip, #1872]!	; 0x750

00012a0c <atoi@plt>:
   12a0c:	add	ip, pc, #0, 12
   12a10:	add	ip, ip, #102400	; 0x19000
   12a14:	ldr	pc, [ip, #1864]!	; 0x748

00012a18 <coda_errno_to_string@plt>:
   12a18:	add	ip, pc, #0, 12
   12a1c:	add	ip, ip, #102400	; 0x19000
   12a20:	ldr	pc, [ip, #1856]!	; 0x740

00012a24 <coda_cursor_use_base_type_of_special_type@plt>:
   12a24:	add	ip, pc, #0, 12
   12a28:	add	ip, ip, #102400	; 0x19000
   12a2c:	ldr	pc, [ip, #1848]!	; 0x738

00012a30 <coda_cursor_get_available_union_field_index@plt>:
   12a30:	add	ip, pc, #0, 12
   12a34:	add	ip, ip, #102400	; 0x19000
   12a38:	ldr	pc, [ip, #1840]!	; 0x730

00012a3c <coda_cursor_read_int32@plt>:
   12a3c:	add	ip, pc, #0, 12
   12a40:	add	ip, ip, #102400	; 0x19000
   12a44:	ldr	pc, [ip, #1832]!	; 0x728

00012a48 <coda_cursor_get_file_bit_offset@plt>:
   12a48:	add	ip, pc, #0, 12
   12a4c:	add	ip, ip, #102400	; 0x19000
   12a50:	ldr	pc, [ip, #1824]!	; 0x720

00012a54 <coda_get_libcoda_version@plt>:
   12a54:	add	ip, pc, #0, 12
   12a58:	add	ip, ip, #102400	; 0x19000
   12a5c:	ldr	pc, [ip, #1816]!	; 0x718

00012a60 <coda_get_errno@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #102400	; 0x19000
   12a68:	ldr	pc, [ip, #1808]!	; 0x710

00012a6c <coda_type_get_special_base_type@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #102400	; 0x19000
   12a74:	ldr	pc, [ip, #1800]!	; 0x708

00012a78 <coda_type_get_record_field_name@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #102400	; 0x19000
   12a80:	ldr	pc, [ip, #1792]!	; 0x700

00012a84 <fputs@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #102400	; 0x19000
   12a8c:	ldr	pc, [ip, #1784]!	; 0x6f8

00012a90 <abort@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #102400	; 0x19000
   12a98:	ldr	pc, [ip, #1776]!	; 0x6f0

00012a9c <coda_cursor_read_bits@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #102400	; 0x19000
   12aa4:	ldr	pc, [ip, #1768]!	; 0x6e8

00012aa8 <coda_str64@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #102400	; 0x19000
   12ab0:	ldr	pc, [ip, #1760]!	; 0x6e0

00012ab4 <__assert_fail@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #102400	; 0x19000
   12abc:	ldr	pc, [ip, #1752]!	; 0x6d8

00012ac0 <coda_type_get_class@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #102400	; 0x19000
   12ac8:	ldr	pc, [ip, #1744]!	; 0x6d0

Disassembly of section .text:

00012acc <_start@@Base>:
   12acc:	mov	fp, #0
   12ad0:	mov	lr, #0
   12ad4:	pop	{r1}		; (ldr r1, [sp], #4)
   12ad8:	mov	r2, sp
   12adc:	push	{r2}		; (str r2, [sp, #-4]!)
   12ae0:	push	{r0}		; (str r0, [sp, #-4]!)
   12ae4:	ldr	ip, [pc, #16]	; 12afc <_start@@Base+0x30>
   12ae8:	push	{ip}		; (str ip, [sp, #-4]!)
   12aec:	ldr	r0, [pc, #12]	; 12b00 <_start@@Base+0x34>
   12af0:	ldr	r3, [pc, #12]	; 12b04 <_start@@Base+0x38>
   12af4:	bl	1282c <__libc_start_main@plt>
   12af8:	bl	12a90 <abort@plt>
   12afc:	andeq	r9, r1, ip, lsl #12
   12b00:	andeq	r7, r1, r8, lsr ip
   12b04:	andeq	r9, r1, ip, lsr #11
   12b08:	ldr	r3, [pc, #20]	; 12b24 <_start@@Base+0x58>
   12b0c:	ldr	r2, [pc, #20]	; 12b28 <_start@@Base+0x5c>
   12b10:	add	r3, pc, r3
   12b14:	ldr	r2, [r3, r2]
   12b18:	cmp	r2, #0
   12b1c:	bxeq	lr
   12b20:	b	12838 <__gmon_start__@plt>
   12b24:	andeq	r9, r1, r8, ror #9
   12b28:	muleq	r0, ip, r1
   12b2c:	ldr	r0, [pc, #24]	; 12b4c <_start@@Base+0x80>
   12b30:	ldr	r3, [pc, #24]	; 12b50 <_start@@Base+0x84>
   12b34:	cmp	r3, r0
   12b38:	bxeq	lr
   12b3c:	ldr	r3, [pc, #16]	; 12b54 <_start@@Base+0x88>
   12b40:	cmp	r3, #0
   12b44:	bxeq	lr
   12b48:	bx	r3
   12b4c:			; <UNDEFINED> instruction: 0x0002c1b0
   12b50:			; <UNDEFINED> instruction: 0x0002c1b0
   12b54:	andeq	r0, r0, r0
   12b58:	ldr	r0, [pc, #36]	; 12b84 <_start@@Base+0xb8>
   12b5c:	ldr	r1, [pc, #36]	; 12b88 <_start@@Base+0xbc>
   12b60:	sub	r1, r1, r0
   12b64:	asr	r1, r1, #2
   12b68:	add	r1, r1, r1, lsr #31
   12b6c:	asrs	r1, r1, #1
   12b70:	bxeq	lr
   12b74:	ldr	r3, [pc, #16]	; 12b8c <_start@@Base+0xc0>
   12b78:	cmp	r3, #0
   12b7c:	bxeq	lr
   12b80:	bx	r3
   12b84:			; <UNDEFINED> instruction: 0x0002c1b0
   12b88:			; <UNDEFINED> instruction: 0x0002c1b0
   12b8c:	andeq	r0, r0, r0
   12b90:	push	{r4, lr}
   12b94:	ldr	r4, [pc, #24]	; 12bb4 <_start@@Base+0xe8>
   12b98:	ldrb	r3, [r4]
   12b9c:	cmp	r3, #0
   12ba0:	popne	{r4, pc}
   12ba4:	bl	12b2c <_start@@Base+0x60>
   12ba8:	mov	r3, #1
   12bac:	strb	r3, [r4]
   12bb0:	pop	{r4, pc}
   12bb4:			; <UNDEFINED> instruction: 0x0002c1b8
   12bb8:	b	12b58 <_start@@Base+0x8c>

00012bbc <export_data_element_to_ascii@@Base>:
   12bbc:	push	{r4, sl, fp, lr}
   12bc0:	add	fp, sp, #8
   12bc4:	movw	r0, #49596	; 0xc1bc
   12bc8:	movw	r4, #53392	; 0xd090
   12bcc:	movt	r0, #2
   12bd0:	movt	r4, #2
   12bd4:	ldrb	r1, [r0]
   12bd8:	cmp	r1, #0
   12bdc:	beq	12bf0 <export_data_element_to_ascii@@Base+0x34>
   12be0:	ldr	r1, [r4]
   12be4:	mov	r0, #10
   12be8:	bl	129e8 <fputc@plt>
   12bec:	b	12bf8 <export_data_element_to_ascii@@Base+0x3c>
   12bf0:	mov	r1, #1
   12bf4:	strb	r1, [r0]
   12bf8:	movw	r0, #53792	; 0xd220
   12bfc:	movt	r0, #2
   12c00:	ldr	r0, [r0]
   12c04:	cmp	r0, #0
   12c08:	beq	12c28 <export_data_element_to_ascii@@Base+0x6c>
   12c0c:	ldr	r0, [r4]
   12c10:	mov	r1, #2
   12c14:	mov	r2, #0
   12c18:	bl	16560 <print_full_field_name@@Base>
   12c1c:	ldr	r1, [r4]
   12c20:	mov	r0, #10
   12c24:	bl	129e8 <fputc@plt>
   12c28:	movw	r0, #53424	; 0xd0b0
   12c2c:	movt	r0, #2
   12c30:	ldr	r1, [r0]
   12c34:	cmp	r1, #1
   12c38:	blt	12c50 <export_data_element_to_ascii@@Base+0x94>
   12c3c:	add	r0, r0, r1, lsl #3
   12c40:	ldr	r1, [r0, #296]	; 0x128
   12c44:	ldr	r0, [r0, #300]	; 0x12c
   12c48:	orrs	r0, r1, r0
   12c4c:	popeq	{r4, sl, fp, pc}
   12c50:	ldr	r0, [r4]
   12c54:	mov	r1, #0
   12c58:	mov	r2, #0
   12c5c:	mov	r3, #0
   12c60:	pop	{r4, sl, fp, lr}
   12c64:	b	12c68 <export_data_element_to_ascii@@Base+0xac>
   12c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c6c:	add	fp, sp, #28
   12c70:	sub	sp, sp, #116	; 0x74
   12c74:	movw	r9, #49640	; 0xc1e8
   12c78:	mov	r8, r0
   12c7c:	mov	r6, r1
   12c80:	str	r3, [sp, #52]	; 0x34
   12c84:	str	r2, [sp, #40]	; 0x28
   12c88:	movt	r9, #2
   12c8c:	add	r5, r9, r1, lsl #2
   12c90:	sub	r1, fp, #52	; 0x34
   12c94:	ldr	r0, [r5, #8]!
   12c98:	bl	12ac0 <coda_type_get_class@plt>
   12c9c:	cmp	r0, #0
   12ca0:	beq	12ca8 <export_data_element_to_ascii@@Base+0xec>
   12ca4:	bl	17bf4 <handle_coda_error@@Base>
   12ca8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12cac:	cmp	r0, #0
   12cb0:	beq	12d9c <export_data_element_to_ascii@@Base+0x1e0>
   12cb4:	cmp	r0, #1
   12cb8:	bne	12e08 <export_data_element_to_ascii@@Base+0x24c>
   12cbc:	ldr	r2, [sp, #40]	; 0x28
   12cc0:	add	r0, r2, r2, lsl #2
   12cc4:	cmp	r2, #0
   12cc8:	add	sl, r9, r0, lsl #4
   12ccc:	moveq	r0, #0
   12cd0:	ldr	r1, [sl, #800]	; 0x320
   12cd4:	streq	r0, [r9, #844]	; 0x34c
   12cd8:	mov	r2, sl
   12cdc:	ldr	r0, [r2, #804]!	; 0x324
   12ce0:	str	r2, [sp, #24]
   12ce4:	movw	r2, #53424	; 0xd0b0
   12ce8:	movt	r2, #2
   12cec:	ldr	r7, [r2, #104]	; 0x68
   12cf0:	add	r3, r0, r1
   12cf4:	str	r3, [sp, #32]
   12cf8:	cmp	r7, r3
   12cfc:	str	r7, [sp, #28]
   12d00:	blt	12d28 <export_data_element_to_ascii@@Base+0x16c>
   12d04:	ldr	r3, [r9, #3360]	; 0xd20
   12d08:	ldr	r7, [sp, #40]	; 0x28
   12d0c:	sub	r3, r3, #1
   12d10:	cmp	r3, r7
   12d14:	ble	12d28 <export_data_element_to_ascii@@Base+0x16c>
   12d18:	ldr	r3, [sl, #840]	; 0x348
   12d1c:	ldr	r7, [sl, #844]	; 0x34c
   12d20:	mul	r3, r3, r7
   12d24:	str	r3, [sl, #924]	; 0x39c
   12d28:	cmp	r0, #1
   12d2c:	str	r6, [sp, #16]
   12d30:	blt	12fac <export_data_element_to_ascii@@Base+0x3f0>
   12d34:	add	r1, r2, r1, lsl #2
   12d38:	add	r2, sl, #848	; 0x350
   12d3c:	add	r3, sl, #844	; 0x34c
   12d40:	mov	r9, #1
   12d44:	mov	ip, #0
   12d48:	add	r4, sp, #56	; 0x38
   12d4c:	mov	r6, #0
   12d50:	add	r5, r1, r6
   12d54:	ldr	r7, [r5, #72]	; 0x48
   12d58:	cmp	r7, #0
   12d5c:	beq	12d70 <export_data_element_to_ascii@@Base+0x1b4>
   12d60:	ldr	r7, [r5, #108]	; 0x6c
   12d64:	ldr	r5, [r3]
   12d68:	add	r5, r7, r5, lsl #2
   12d6c:	b	12d74 <export_data_element_to_ascii@@Base+0x1b8>
   12d70:	add	r5, r5, #4
   12d74:	ldr	r7, [r5]
   12d78:	str	ip, [r2, r6]
   12d7c:	subs	r0, r0, #1
   12d80:	mul	r9, r7, r9
   12d84:	str	r7, [r4, r6]
   12d88:	add	r6, r6, #4
   12d8c:	bne	12d50 <export_data_element_to_ascii@@Base+0x194>
   12d90:	cmp	r9, #0
   12d94:	bne	12fb0 <export_data_element_to_ascii@@Base+0x3f4>
   12d98:	b	135ec <export_data_element_to_ascii@@Base+0xa30>
   12d9c:	ldr	r0, [sp, #52]	; 0x34
   12da0:	add	r5, r9, #144	; 0x90
   12da4:	add	r2, sp, #56	; 0x38
   12da8:	add	r7, r9, r0, lsl #2
   12dac:	mov	r0, r5
   12db0:	ldr	r1, [r7, #3492]!	; 0xda4
   12db4:	bl	12688 <coda_cursor_get_record_field_available_status@plt>
   12db8:	cmp	r0, #0
   12dbc:	beq	12dc4 <export_data_element_to_ascii@@Base+0x208>
   12dc0:	bl	17bf4 <handle_coda_error@@Base>
   12dc4:	ldr	r0, [sp, #56]	; 0x38
   12dc8:	cmp	r0, #0
   12dcc:	beq	135ec <export_data_element_to_ascii@@Base+0xa30>
   12dd0:	ldr	r1, [r7]
   12dd4:	mov	r0, r5
   12dd8:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   12ddc:	cmp	r0, #0
   12de0:	beq	12de8 <export_data_element_to_ascii@@Base+0x22c>
   12de4:	bl	17bf4 <handle_coda_error@@Base>
   12de8:	ldr	r0, [sp, #52]	; 0x34
   12dec:	ldr	r2, [sp, #40]	; 0x28
   12df0:	add	r1, r6, #1
   12df4:	add	r3, r0, #1
   12df8:	mov	r0, r8
   12dfc:	bl	12c68 <export_data_element_to_ascii@@Base+0xac>
   12e00:	mov	r0, r5
   12e04:	b	130e4 <export_data_element_to_ascii@@Base+0x528>
   12e08:	movw	r0, #53408	; 0xd0a0
   12e0c:	str	r5, [sp, #48]	; 0x30
   12e10:	movt	r0, #2
   12e14:	ldr	r0, [r0]
   12e18:	cmp	r0, #0
   12e1c:	beq	12ef0 <export_data_element_to_ascii@@Base+0x334>
   12e20:	ldr	r0, [r9, #136]	; 0x88
   12e24:	cmp	r0, #1
   12e28:	blt	12ef0 <export_data_element_to_ascii@@Base+0x334>
   12e2c:	movw	r5, #53396	; 0xd094
   12e30:	movw	r6, #38675	; 0x9713
   12e34:	mov	r0, #0
   12e38:	mov	r7, #0
   12e3c:	add	r4, sp, #56	; 0x38
   12e40:	movt	r5, #2
   12e44:	movt	r6, #1
   12e48:	str	r0, [sp, #52]	; 0x34
   12e4c:	add	r0, r9, r7, lsl #2
   12e50:	mov	r1, r4
   12e54:	ldr	r0, [r0, #8]
   12e58:	bl	12ac0 <coda_type_get_class@plt>
   12e5c:	cmp	r0, #0
   12e60:	beq	12e68 <export_data_element_to_ascii@@Base+0x2ac>
   12e64:	bl	17bf4 <handle_coda_error@@Base>
   12e68:	ldr	r0, [sp, #56]	; 0x38
   12e6c:	cmp	r0, #1
   12e70:	bne	12ee0 <export_data_element_to_ascii@@Base+0x324>
   12e74:	ldr	r0, [sp, #52]	; 0x34
   12e78:	mov	sl, r8
   12e7c:	add	r0, r0, r0, lsl #2
   12e80:	add	r0, r9, r0, lsl #4
   12e84:	mov	r4, r0
   12e88:	ldr	r1, [r4, #804]!	; 0x324
   12e8c:	cmp	r1, #1
   12e90:	blt	12ec0 <export_data_element_to_ascii@@Base+0x304>
   12e94:	add	r8, r0, #848	; 0x350
   12e98:	mov	r9, #0
   12e9c:	ldr	r2, [r8, r9, lsl #2]
   12ea0:	ldr	r3, [r5]
   12ea4:	mov	r0, sl
   12ea8:	mov	r1, r6
   12eac:	bl	128b0 <fprintf@plt>
   12eb0:	ldr	r0, [r4]
   12eb4:	add	r9, r9, #1
   12eb8:	cmp	r9, r0
   12ebc:	blt	12e9c <export_data_element_to_ascii@@Base+0x2e0>
   12ec0:	ldr	r0, [sp, #52]	; 0x34
   12ec4:	movw	r4, #49640	; 0xc1e8
   12ec8:	mov	r8, sl
   12ecc:	movt	r4, #2
   12ed0:	mov	r9, r4
   12ed4:	add	r4, sp, #56	; 0x38
   12ed8:	add	r0, r0, #1
   12edc:	str	r0, [sp, #52]	; 0x34
   12ee0:	ldr	r0, [r9, #136]	; 0x88
   12ee4:	add	r7, r7, #1
   12ee8:	cmp	r7, r0
   12eec:	blt	12e4c <export_data_element_to_ascii@@Base+0x290>
   12ef0:	ldr	r5, [sp, #48]	; 0x30
   12ef4:	sub	r1, fp, #32
   12ef8:	ldr	r0, [r5]
   12efc:	bl	12ac0 <coda_type_get_class@plt>
   12f00:	cmp	r0, #0
   12f04:	beq	12f0c <export_data_element_to_ascii@@Base+0x350>
   12f08:	bl	17bf4 <handle_coda_error@@Base>
   12f0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f10:	sub	r1, r0, #2
   12f14:	cmp	r1, #4
   12f18:	bcs	130ec <export_data_element_to_ascii@@Base+0x530>
   12f1c:	ldr	r0, [r5]
   12f20:	sub	r1, fp, #36	; 0x24
   12f24:	bl	12874 <coda_type_get_read_type@plt>
   12f28:	cmp	r0, #0
   12f2c:	beq	12f34 <export_data_element_to_ascii@@Base+0x378>
   12f30:	bl	17bf4 <handle_coda_error@@Base>
   12f34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f38:	add	r0, r0, #1
   12f3c:	cmp	r0, #13
   12f40:	bhi	135e0 <export_data_element_to_ascii@@Base+0xa24>
   12f44:	add	r1, pc, #0
   12f48:	ldr	pc, [r1, r0, lsl #2]
   12f4c:	andeq	r3, r1, r0, lsr r6
   12f50:	andeq	r2, r1, r4, lsl #31
   12f54:	ldrdeq	r3, [r1], -r4
   12f58:	andeq	r2, r1, r4, lsl #31
   12f5c:	ldrdeq	r3, [r1], -r4
   12f60:	andeq	r2, r1, r4, lsl #31
   12f64:	ldrdeq	r3, [r1], -r4
   12f68:	andeq	r3, r1, ip, lsl #5
   12f6c:	andeq	r3, r1, r8, lsr r5
   12f70:	andeq	r3, r1, r4, lsl #4
   12f74:	andeq	r3, r1, r4, lsl #4
   12f78:	andeq	r3, r1, r4, ror r5
   12f7c:			; <UNDEFINED> instruction: 0x000132bc
   12f80:	andeq	r3, r1, ip, ror #6
   12f84:	add	r0, r9, #144	; 0x90
   12f88:	add	r1, sp, #56	; 0x38
   12f8c:	bl	12a3c <coda_cursor_read_int32@plt>
   12f90:	cmp	r0, #0
   12f94:	beq	12f9c <export_data_element_to_ascii@@Base+0x3e0>
   12f98:	bl	17bf4 <handle_coda_error@@Base>
   12f9c:	ldr	r2, [sp, #56]	; 0x38
   12fa0:	movw	r1, #40240	; 0x9d30
   12fa4:	movt	r1, #1
   12fa8:	b	131f8 <export_data_element_to_ascii@@Base+0x63c>
   12fac:	mov	r9, #1
   12fb0:	movw	r0, #49640	; 0xc1e8
   12fb4:	movt	r0, #2
   12fb8:	add	r0, r0, #144	; 0x90
   12fbc:	str	r0, [sp, #36]	; 0x24
   12fc0:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   12fc4:	cmp	r0, #0
   12fc8:	beq	12fd0 <export_data_element_to_ascii@@Base+0x414>
   12fcc:	bl	17bf4 <handle_coda_error@@Base>
   12fd0:	cmp	r9, #1
   12fd4:	blt	130e0 <export_data_element_to_ascii@@Base+0x524>
   12fd8:	add	r0, sl, #924	; 0x39c
   12fdc:	mov	r4, r8
   12fe0:	add	r8, sl, #844	; 0x34c
   12fe4:	mov	r7, #0
   12fe8:	mov	r5, #0
   12fec:	str	r0, [sp, #20]
   12ff0:	add	r0, sp, #56	; 0x38
   12ff4:	sub	sl, r0, #4
   12ff8:	sub	r0, r9, #1
   12ffc:	str	r0, [sp, #48]	; 0x30
   13000:	ldr	r0, [sp, #40]	; 0x28
   13004:	add	r0, r0, #1
   13008:	str	r0, [sp, #44]	; 0x2c
   1300c:	ldr	r0, [sp, #16]
   13010:	add	r6, r0, #1
   13014:	ldr	r2, [sp, #44]	; 0x2c
   13018:	ldr	r3, [sp, #52]	; 0x34
   1301c:	mov	r0, r4
   13020:	mov	r1, r6
   13024:	bl	12c68 <export_data_element_to_ascii@@Base+0xac>
   13028:	ldr	r0, [sp, #48]	; 0x30
   1302c:	cmp	r5, r0
   13030:	bge	130d4 <export_data_element_to_ascii@@Base+0x518>
   13034:	ldr	r0, [sp, #36]	; 0x24
   13038:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   1303c:	cmp	r0, #0
   13040:	beq	13048 <export_data_element_to_ascii@@Base+0x48c>
   13044:	bl	17bf4 <handle_coda_error@@Base>
   13048:	ldr	r0, [sp, #32]
   1304c:	ldr	r1, [sp, #28]
   13050:	cmp	r1, r0
   13054:	blt	13084 <export_data_element_to_ascii@@Base+0x4c8>
   13058:	movw	r0, #49640	; 0xc1e8
   1305c:	ldr	r1, [sp, #40]	; 0x28
   13060:	movt	r0, #2
   13064:	ldr	r0, [r0, #3360]	; 0xd20
   13068:	sub	r0, r0, #1
   1306c:	cmp	r0, r1
   13070:	ble	13084 <export_data_element_to_ascii@@Base+0x4c8>
   13074:	ldr	r1, [sp, #20]
   13078:	ldr	r0, [r1]
   1307c:	add	r0, r0, #1
   13080:	str	r0, [r1]
   13084:	movw	r0, #53408	; 0xd0a0
   13088:	movt	r0, #2
   1308c:	ldr	r0, [r0]
   13090:	cmp	r0, #0
   13094:	beq	130d4 <export_data_element_to_ascii@@Base+0x518>
   13098:	ldr	r0, [sp, #24]
   1309c:	ldr	r0, [r0]
   130a0:	cmp	r0, #1
   130a4:	blt	130d4 <export_data_element_to_ascii@@Base+0x518>
   130a8:	ldr	r1, [r8, r0, lsl #2]
   130ac:	ldr	r2, [sl, r0, lsl #2]
   130b0:	add	r1, r1, #1
   130b4:	cmp	r1, r2
   130b8:	str	r1, [r8, r0, lsl #2]
   130bc:	bne	130d4 <export_data_element_to_ascii@@Base+0x518>
   130c0:	sub	r1, r0, #1
   130c4:	str	r7, [r8, r0, lsl #2]
   130c8:	cmp	r1, #0
   130cc:	mov	r0, r1
   130d0:	bgt	130a8 <export_data_element_to_ascii@@Base+0x4ec>
   130d4:	add	r5, r5, #1
   130d8:	cmp	r5, r9
   130dc:	bne	13014 <export_data_element_to_ascii@@Base+0x458>
   130e0:	ldr	r0, [sp, #36]	; 0x24
   130e4:	bl	12850 <coda_cursor_goto_parent@plt>
   130e8:	b	135ec <export_data_element_to_ascii@@Base+0xa30>
   130ec:	cmp	r0, #6
   130f0:	beq	13110 <export_data_element_to_ascii@@Base+0x554>
   130f4:	cmp	r0, #2
   130f8:	bcs	135e0 <export_data_element_to_ascii@@Base+0xa24>
   130fc:	movw	r0, #38978	; 0x9842
   13100:	movw	r1, #38486	; 0x9656
   13104:	movw	r3, #38606	; 0x96ce
   13108:	mov	r2, #368	; 0x170
   1310c:	b	13640 <export_data_element_to_ascii@@Base+0xa84>
   13110:	ldr	r0, [r5]
   13114:	sub	r1, fp, #36	; 0x24
   13118:	bl	12928 <coda_type_get_special_type@plt>
   1311c:	cmp	r0, #0
   13120:	beq	13128 <export_data_element_to_ascii@@Base+0x56c>
   13124:	bl	17bf4 <handle_coda_error@@Base>
   13128:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1312c:	sub	r1, r0, #1
   13130:	cmp	r1, #2
   13134:	bcs	13240 <export_data_element_to_ascii@@Base+0x684>
   13138:	add	r0, r9, #144	; 0x90
   1313c:	sub	r1, fp, #48	; 0x30
   13140:	bl	12898 <coda_cursor_read_double@plt>
   13144:	cmp	r0, #0
   13148:	beq	13150 <export_data_element_to_ascii@@Base+0x594>
   1314c:	bl	17bf4 <handle_coda_error@@Base>
   13150:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13154:	cmp	r0, #2
   13158:	bne	135b0 <export_data_element_to_ascii@@Base+0x9f4>
   1315c:	movw	r0, #49628	; 0xc1dc
   13160:	movt	r0, #2
   13164:	ldr	r0, [r0]
   13168:	cmp	r0, #0
   1316c:	beq	135b0 <export_data_element_to_ascii@@Base+0x9f4>
   13170:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13174:	bl	128a4 <coda_isNaN@plt>
   13178:	cmp	r0, #0
   1317c:	bne	13190 <export_data_element_to_ascii@@Base+0x5d4>
   13180:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13184:	bl	12748 <coda_isInf@plt>
   13188:	cmp	r0, #0
   1318c:	beq	1360c <export_data_element_to_ascii@@Base+0xa50>
   13190:	movw	r1, #38688	; 0x9720
   13194:	mov	r0, #11
   13198:	movt	r1, #1
   1319c:	vld1.64	{d16-d17}, [r1], r0
   131a0:	vld1.8	{d18-d19}, [r1]
   131a4:	add	r1, sp, #56	; 0x38
   131a8:	vst1.64	{d16-d17}, [r1], r0
   131ac:	vst1.8	{d18-d19}, [r1]
   131b0:	movw	r0, #53796	; 0xd224
   131b4:	movt	r0, #2
   131b8:	ldr	r0, [r0]
   131bc:	cmp	r0, #0
   131c0:	beq	13604 <export_data_element_to_ascii@@Base+0xa48>
   131c4:	movw	r1, #40475	; 0x9e1b
   131c8:	add	r2, sp, #56	; 0x38
   131cc:	movt	r1, #1
   131d0:	b	131f8 <export_data_element_to_ascii@@Base+0x63c>
   131d4:	add	r0, r9, #144	; 0x90
   131d8:	add	r1, sp, #56	; 0x38
   131dc:	bl	1270c <coda_cursor_read_uint32@plt>
   131e0:	cmp	r0, #0
   131e4:	beq	131ec <export_data_element_to_ascii@@Base+0x630>
   131e8:	bl	17bf4 <handle_coda_error@@Base>
   131ec:	ldr	r2, [sp, #56]	; 0x38
   131f0:	movw	r1, #38591	; 0x96bf
   131f4:	movt	r1, #1
   131f8:	mov	r0, r8
   131fc:	bl	128b0 <fprintf@plt>
   13200:	b	135e0 <export_data_element_to_ascii@@Base+0xa24>
   13204:	add	r0, r9, #144	; 0x90
   13208:	add	r1, sp, #56	; 0x38
   1320c:	bl	12898 <coda_cursor_read_double@plt>
   13210:	cmp	r0, #0
   13214:	beq	1321c <export_data_element_to_ascii@@Base+0x660>
   13218:	bl	17bf4 <handle_coda_error@@Base>
   1321c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13220:	vldr	d16, [sp, #56]	; 0x38
   13224:	movw	r2, #38595	; 0x96c3
   13228:	movw	r1, #38600	; 0x96c8
   1322c:	movt	r2, #1
   13230:	movt	r1, #1
   13234:	cmp	r0, #8
   13238:	moveq	r1, r2
   1323c:	b	135bc <export_data_element_to_ascii@@Base+0xa00>
   13240:	cmp	r0, #3
   13244:	bne	135e0 <export_data_element_to_ascii@@Base+0xa24>
   13248:	add	r0, r9, #144	; 0x90
   1324c:	add	r1, sp, #56	; 0x38
   13250:	bl	129d0 <coda_cursor_read_complex_double_pair@plt>
   13254:	cmp	r0, #0
   13258:	beq	13260 <export_data_element_to_ascii@@Base+0x6a4>
   1325c:	bl	17bf4 <handle_coda_error@@Base>
   13260:	movw	r0, #53396	; 0xd094
   13264:	vldr	d16, [sp, #56]	; 0x38
   13268:	vldr	d17, [sp, #64]	; 0x40
   1326c:	movw	r1, #38668	; 0x970c
   13270:	movt	r0, #2
   13274:	movt	r1, #1
   13278:	ldr	r0, [r0]
   1327c:	vstr	d17, [sp, #8]
   13280:	vmov	r2, r3, d16
   13284:	str	r0, [sp]
   13288:	b	135c0 <export_data_element_to_ascii@@Base+0xa04>
   1328c:	add	r0, r9, #144	; 0x90
   13290:	sub	r1, fp, #48	; 0x30
   13294:	bl	129a0 <coda_cursor_read_int64@plt>
   13298:	cmp	r0, #0
   1329c:	beq	132a4 <export_data_element_to_ascii@@Base+0x6e8>
   132a0:	bl	17bf4 <handle_coda_error@@Base>
   132a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   132a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132ac:	add	r5, sp, #56	; 0x38
   132b0:	mov	r2, r5
   132b4:	bl	12aa8 <coda_str64@plt>
   132b8:	b	13564 <export_data_element_to_ascii@@Base+0x9a8>
   132bc:	add	r6, r9, #144	; 0x90
   132c0:	add	r1, sp, #56	; 0x38
   132c4:	mov	r0, r6
   132c8:	bl	12880 <coda_cursor_get_string_length@plt>
   132cc:	cmp	r0, #0
   132d0:	beq	132d8 <export_data_element_to_ascii@@Base+0x71c>
   132d4:	bl	17bf4 <handle_coda_error@@Base>
   132d8:	ldr	r0, [sp, #56]	; 0x38
   132dc:	add	r7, r0, #1
   132e0:	mov	r0, r7
   132e4:	bl	12820 <malloc@plt>
   132e8:	mov	r5, r0
   132ec:	cmp	r0, #0
   132f0:	bne	13324 <export_data_element_to_ascii@@Base+0x768>
   132f4:	movw	r1, #38433	; 0x9621
   132f8:	movw	r3, #38486	; 0x9656
   132fc:	mov	r0, #126	; 0x7e
   13300:	mov	r2, r7
   13304:	movt	r1, #1
   13308:	movt	r3, #1
   1330c:	str	r0, [sp]
   13310:	mvn	r0, #0
   13314:	bl	126a0 <coda_set_error@plt>
   13318:	bl	17bf4 <handle_coda_error@@Base>
   1331c:	ldr	r0, [sp, #56]	; 0x38
   13320:	add	r7, r0, #1
   13324:	mov	r0, r6
   13328:	mov	r1, r5
   1332c:	mov	r2, r7
   13330:	bl	12844 <coda_cursor_read_string@plt>
   13334:	cmp	r0, #0
   13338:	beq	13340 <export_data_element_to_ascii@@Base+0x784>
   1333c:	bl	17bf4 <handle_coda_error@@Base>
   13340:	movw	r0, #53796	; 0xd224
   13344:	movt	r0, #2
   13348:	ldr	r0, [r0]
   1334c:	cmp	r0, #0
   13350:	beq	135cc <export_data_element_to_ascii@@Base+0xa10>
   13354:	movw	r1, #40475	; 0x9e1b
   13358:	mov	r0, r8
   1335c:	mov	r2, r5
   13360:	movt	r1, #1
   13364:	bl	128b0 <fprintf@plt>
   13368:	b	135d8 <export_data_element_to_ascii@@Base+0xa1c>
   1336c:	add	r0, r9, #144	; 0x90
   13370:	add	r1, sp, #56	; 0x38
   13374:	str	r8, [sp, #52]	; 0x34
   13378:	str	r0, [sp, #48]	; 0x30
   1337c:	bl	12a00 <coda_cursor_get_bit_size@plt>
   13380:	cmp	r0, #0
   13384:	beq	1338c <export_data_element_to_ascii@@Base+0x7d0>
   13388:	bl	17bf4 <handle_coda_error@@Base>
   1338c:	ldr	sl, [sp, #56]	; 0x38
   13390:	ldr	r7, [sp, #60]	; 0x3c
   13394:	lsr	r0, sl, #3
   13398:	asr	r4, r7, #3
   1339c:	orr	r0, r0, r7, lsl #29
   133a0:	adds	r5, r0, #1
   133a4:	adc	r9, r4, #0
   133a8:	ands	r8, sl, #7
   133ac:	moveq	r5, r0
   133b0:	mov	r0, r5
   133b4:	bl	12820 <malloc@plt>
   133b8:	cmp	r8, #0
   133bc:	mov	r6, r0
   133c0:	moveq	r9, r4
   133c4:	cmp	r0, #0
   133c8:	bne	133fc <export_data_element_to_ascii@@Base+0x840>
   133cc:	movw	r1, #38433	; 0x9621
   133d0:	movw	r3, #38486	; 0x9656
   133d4:	mov	r0, #163	; 0xa3
   133d8:	mov	r2, r5
   133dc:	movt	r1, #1
   133e0:	movt	r3, #1
   133e4:	str	r0, [sp]
   133e8:	mvn	r0, #0
   133ec:	bl	126a0 <coda_set_error@plt>
   133f0:	bl	17bf4 <handle_coda_error@@Base>
   133f4:	ldr	sl, [sp, #56]	; 0x38
   133f8:	ldr	r7, [sp, #60]	; 0x3c
   133fc:	ldr	r0, [sp, #48]	; 0x30
   13400:	mov	r1, r6
   13404:	mov	r2, #0
   13408:	mov	r3, #0
   1340c:	str	sl, [sp]
   13410:	str	r7, [sp, #4]
   13414:	bl	12a9c <coda_cursor_read_bits@plt>
   13418:	ldr	r8, [sp, #52]	; 0x34
   1341c:	cmp	r0, #0
   13420:	beq	13428 <export_data_element_to_ascii@@Base+0x86c>
   13424:	bl	17bf4 <handle_coda_error@@Base>
   13428:	subs	r0, r5, #1
   1342c:	sbcs	r0, r9, #0
   13430:	blt	13530 <export_data_element_to_ascii@@Base+0x974>
   13434:	movw	r7, #38576	; 0x96b0
   13438:	movw	r4, #38579	; 0x96b3
   1343c:	mov	sl, #0
   13440:	movt	r7, #1
   13444:	movt	r4, #1
   13448:	ldrb	r2, [r6, sl]
   1344c:	sub	r0, r2, #7
   13450:	cmp	r0, #6
   13454:	bhi	13488 <export_data_element_to_ascii@@Base+0x8cc>
   13458:	add	r1, pc, #0
   1345c:	ldr	pc, [r1, r0, lsl #2]
   13460:	andeq	r3, r1, ip, ror r4
   13464:			; <UNDEFINED> instruction: 0x000134b4
   13468:	andeq	r3, r1, r8, lsr #9
   1346c:	andeq	r3, r1, r0, asr #9
   13470:	muleq	r1, ip, r4
   13474:	andeq	r3, r1, ip, asr #9
   13478:	ldrdeq	r3, [r1], -r4
   1347c:	movw	r0, #38561	; 0x96a1
   13480:	movt	r0, #1
   13484:	b	134d8 <export_data_element_to_ascii@@Base+0x91c>
   13488:	cmp	r2, #92	; 0x5c
   1348c:	bne	134fc <export_data_element_to_ascii@@Base+0x940>
   13490:	movw	r0, #38582	; 0x96b6
   13494:	movt	r0, #1
   13498:	b	134d8 <export_data_element_to_ascii@@Base+0x91c>
   1349c:	movw	r0, #38573	; 0x96ad
   134a0:	movt	r0, #1
   134a4:	b	134d8 <export_data_element_to_ascii@@Base+0x91c>
   134a8:	movw	r0, #38567	; 0x96a7
   134ac:	movt	r0, #1
   134b0:	b	134d8 <export_data_element_to_ascii@@Base+0x91c>
   134b4:	movw	r0, #38564	; 0x96a4
   134b8:	movt	r0, #1
   134bc:	b	134d8 <export_data_element_to_ascii@@Base+0x91c>
   134c0:	movw	r0, #38570	; 0x96aa
   134c4:	movt	r0, #1
   134c8:	b	134d8 <export_data_element_to_ascii@@Base+0x91c>
   134cc:	mov	r0, r7
   134d0:	b	134d8 <export_data_element_to_ascii@@Base+0x91c>
   134d4:	mov	r0, r4
   134d8:	mov	r1, #2
   134dc:	mov	r2, #1
   134e0:	mov	r3, r8
   134e4:	bl	127cc <fwrite@plt>
   134e8:	add	sl, sl, #1
   134ec:	subs	r0, sl, r5
   134f0:	rscs	r0, r9, #0
   134f4:	blt	13448 <export_data_element_to_ascii@@Base+0x88c>
   134f8:	b	13530 <export_data_element_to_ascii@@Base+0x974>
   134fc:	sub	r0, r2, #32
   13500:	uxtb	r0, r0
   13504:	cmp	r0, #94	; 0x5e
   13508:	bhi	1351c <export_data_element_to_ascii@@Base+0x960>
   1350c:	mov	r0, r2
   13510:	mov	r1, r8
   13514:	bl	129e8 <fputc@plt>
   13518:	b	134e8 <export_data_element_to_ascii@@Base+0x92c>
   1351c:	movw	r1, #38585	; 0x96b9
   13520:	mov	r0, r8
   13524:	movt	r1, #1
   13528:	bl	128b0 <fprintf@plt>
   1352c:	b	134e8 <export_data_element_to_ascii@@Base+0x92c>
   13530:	mov	r0, r6
   13534:	b	135dc <export_data_element_to_ascii@@Base+0xa20>
   13538:	add	r0, r9, #144	; 0x90
   1353c:	sub	r1, fp, #48	; 0x30
   13540:	bl	1288c <coda_cursor_read_uint64@plt>
   13544:	cmp	r0, #0
   13548:	beq	13550 <export_data_element_to_ascii@@Base+0x994>
   1354c:	bl	17bf4 <handle_coda_error@@Base>
   13550:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13554:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13558:	add	r5, sp, #56	; 0x38
   1355c:	mov	r2, r5
   13560:	bl	126dc <coda_str64u@plt>
   13564:	mov	r0, r5
   13568:	mov	r1, r8
   1356c:	bl	12a84 <fputs@plt>
   13570:	b	135e0 <export_data_element_to_ascii@@Base+0xa24>
   13574:	add	r0, r9, #144	; 0x90
   13578:	add	r1, sp, #56	; 0x38
   1357c:	bl	128f8 <coda_cursor_read_char@plt>
   13580:	cmp	r0, #0
   13584:	beq	1358c <export_data_element_to_ascii@@Base+0x9d0>
   13588:	bl	17bf4 <handle_coda_error@@Base>
   1358c:	movw	r0, #53796	; 0xd224
   13590:	ldrb	r2, [sp, #56]	; 0x38
   13594:	movt	r0, #2
   13598:	ldr	r0, [r0]
   1359c:	cmp	r0, #0
   135a0:	beq	135f4 <export_data_element_to_ascii@@Base+0xa38>
   135a4:	movw	r1, #38428	; 0x961c
   135a8:	movt	r1, #1
   135ac:	b	131f8 <export_data_element_to_ascii@@Base+0x63c>
   135b0:	vldr	d16, [fp, #-48]	; 0xffffffd0
   135b4:	movw	r1, #38600	; 0x96c8
   135b8:	movt	r1, #1
   135bc:	vmov	r2, r3, d16
   135c0:	mov	r0, r8
   135c4:	bl	128b0 <fprintf@plt>
   135c8:	b	135e0 <export_data_element_to_ascii@@Base+0xa24>
   135cc:	mov	r0, r5
   135d0:	mov	r1, r8
   135d4:	bl	12a84 <fputs@plt>
   135d8:	mov	r0, r5
   135dc:	bl	126e8 <free@plt>
   135e0:	mov	r0, #10
   135e4:	mov	r1, r8
   135e8:	bl	129e8 <fputc@plt>
   135ec:	sub	sp, fp, #28
   135f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135f4:	mov	r0, r2
   135f8:	mov	r1, r8
   135fc:	bl	129e8 <fputc@plt>
   13600:	b	135e0 <export_data_element_to_ascii@@Base+0xa24>
   13604:	add	r0, sp, #56	; 0x38
   13608:	b	13568 <export_data_element_to_ascii@@Base+0x9ac>
   1360c:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13610:	movw	r0, #38641	; 0x96f1
   13614:	add	r1, sp, #56	; 0x38
   13618:	movt	r0, #1
   1361c:	bl	126c4 <coda_time_double_to_string@plt>
   13620:	cmp	r0, #0
   13624:	beq	131b0 <export_data_element_to_ascii@@Base+0x5f4>
   13628:	bl	17bf4 <handle_coda_error@@Base>
   1362c:	b	131b0 <export_data_element_to_ascii@@Base+0x5f4>
   13630:	movw	r0, #38978	; 0x9842
   13634:	movw	r1, #38486	; 0x9656
   13638:	movw	r3, #38606	; 0x96ce
   1363c:	movw	r2, #294	; 0x126
   13640:	movt	r0, #1
   13644:	movt	r1, #1
   13648:	movt	r3, #1
   1364c:	bl	12ab4 <__assert_fail@plt>

00013650 <print_debug_data@@Base>:
   13650:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13654:	add	fp, sp, #24
   13658:	sub	sp, sp, #536	; 0x218
   1365c:	movw	r7, #49640	; 0xc1e8
   13660:	mov	r6, r0
   13664:	mov	r5, r1
   13668:	mov	r4, r2
   1366c:	sub	r1, fp, #28
   13670:	movt	r7, #2
   13674:	cmp	r6, #0
   13678:	ldr	r0, [r7]
   1367c:	beq	13698 <print_debug_data@@Base+0x48>
   13680:	str	r1, [sp]
   13684:	mov	r1, r6
   13688:	mov	r2, r5
   1368c:	mov	r3, r4
   13690:	bl	128c8 <coda_open_as@plt>
   13694:	b	1369c <print_debug_data@@Base+0x4c>
   13698:	bl	126ac <coda_open@plt>
   1369c:	cmp	r0, #0
   136a0:	beq	13700 <print_debug_data@@Base+0xb0>
   136a4:	bl	12a60 <coda_get_errno@plt>
   136a8:	ldr	r0, [r0]
   136ac:	cmn	r0, #21
   136b0:	bne	136fc <print_debug_data@@Base+0xac>
   136b4:	mov	r0, #0
   136b8:	bl	126f4 <coda_set_option_use_mmap@plt>
   136bc:	ldr	r0, [r7]
   136c0:	sub	r1, fp, #28
   136c4:	cmp	r6, #0
   136c8:	beq	136e4 <print_debug_data@@Base+0x94>
   136cc:	str	r1, [sp]
   136d0:	mov	r1, r6
   136d4:	mov	r2, r5
   136d8:	mov	r3, r4
   136dc:	bl	128c8 <coda_open_as@plt>
   136e0:	b	136e8 <print_debug_data@@Base+0x98>
   136e4:	bl	126ac <coda_open@plt>
   136e8:	mov	r4, r0
   136ec:	mov	r0, #1
   136f0:	bl	126f4 <coda_set_option_use_mmap@plt>
   136f4:	cmp	r4, #0
   136f8:	beq	13700 <print_debug_data@@Base+0xb0>
   136fc:	bl	17bf4 <handle_coda_error@@Base>
   13700:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13704:	add	r1, sp, #4
   13708:	bl	12790 <coda_get_product_format@plt>
   1370c:	cmp	r0, #0
   13710:	beq	13718 <print_debug_data@@Base+0xc8>
   13714:	bl	17bf4 <handle_coda_error@@Base>
   13718:	ldr	r0, [sp, #4]
   1371c:	mov	r1, #0
   13720:	cmp	r0, #3
   13724:	movw	r0, #49576	; 0xc1a8
   13728:	movt	r0, #2
   1372c:	movwcc	r1, #1
   13730:	str	r1, [r0]
   13734:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13738:	add	r0, sp, #8
   1373c:	bl	127d8 <coda_cursor_set_product@plt>
   13740:	cmp	r0, #0
   13744:	beq	1374c <print_debug_data@@Base+0xfc>
   13748:	bl	17bf4 <handle_coda_error@@Base>
   1374c:	movw	r0, #53416	; 0xd0a8
   13750:	movt	r0, #2
   13754:	ldr	r1, [r0]
   13758:	cmp	r1, #0
   1375c:	beq	13774 <print_debug_data@@Base+0x124>
   13760:	add	r0, sp, #8
   13764:	bl	129b8 <coda_cursor_goto@plt>
   13768:	cmp	r0, #0
   1376c:	beq	13774 <print_debug_data@@Base+0x124>
   13770:	bl	17bf4 <handle_coda_error@@Base>
   13774:	mov	r0, #0
   13778:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   1377c:	add	r0, sp, #8
   13780:	mov	r1, #0
   13784:	bl	13798 <print_debug_data@@Base+0x148>
   13788:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1378c:	bl	12994 <coda_close@plt>
   13790:	sub	sp, fp, #24
   13794:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1379c:	add	fp, sp, #28
   137a0:	sub	sp, sp, #644	; 0x284
   137a4:	str	r1, [sp, #24]
   137a8:	sub	r1, fp, #40	; 0x28
   137ac:	mov	r4, r0
   137b0:	bl	1276c <coda_cursor_has_attributes@plt>
   137b4:	cmp	r0, #0
   137b8:	beq	137c0 <print_debug_data@@Base+0x170>
   137bc:	bl	17bf4 <handle_coda_error@@Base>
   137c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   137c4:	str	r4, [sp, #28]
   137c8:	cmp	r0, #0
   137cc:	beq	1382c <print_debug_data@@Base+0x1dc>
   137d0:	mov	r0, r4
   137d4:	bl	128ec <coda_cursor_goto_attributes@plt>
   137d8:	cmp	r0, #0
   137dc:	beq	137e4 <print_debug_data@@Base+0x194>
   137e0:	bl	17bf4 <handle_coda_error@@Base>
   137e4:	movw	r0, #38720	; 0x9740
   137e8:	movt	r0, #1
   137ec:	bl	14360 <print_debug_data@@Base+0xd10>
   137f0:	movw	r4, #49600	; 0xc1c0
   137f4:	ldr	r5, [sp, #28]
   137f8:	ldr	r1, [sp, #24]
   137fc:	movt	r4, #2
   13800:	ldr	r0, [r4]
   13804:	add	r0, r0, #1
   13808:	str	r0, [r4]
   1380c:	mov	r0, r5
   13810:	bl	13798 <print_debug_data@@Base+0x148>
   13814:	ldr	r0, [r4]
   13818:	sub	r0, r0, #1
   1381c:	str	r0, [r4]
   13820:	mov	r0, r5
   13824:	mov	r4, r5
   13828:	bl	12850 <coda_cursor_goto_parent@plt>
   1382c:	sub	r1, fp, #36	; 0x24
   13830:	mov	r0, r4
   13834:	bl	12778 <coda_cursor_get_type_class@plt>
   13838:	cmp	r0, #0
   1383c:	beq	13844 <print_debug_data@@Base+0x1f4>
   13840:	bl	17bf4 <handle_coda_error@@Base>
   13844:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13848:	cmp	r0, #6
   1384c:	bhi	1431c <print_debug_data@@Base+0xccc>
   13850:	add	r1, pc, #0
   13854:	ldr	pc, [r1, r0, lsl #2]
   13858:	ldrdeq	r3, [r1], -ip
   1385c:	andeq	r3, r1, r4, ror #22
   13860:	andeq	r3, r1, r4, ror r8
   13864:	andeq	r3, r1, r4, ror r8
   13868:	andeq	r3, r1, r4, ror r8
   1386c:	andeq	r3, r1, r4, ror r8
   13870:	andeq	r3, r1, r4, asr #23
   13874:	sub	r1, fp, #96	; 0x60
   13878:	mov	r0, r4
   1387c:	bl	12988 <coda_cursor_has_ascii_content@plt>
   13880:	cmp	r0, #0
   13884:	beq	1388c <print_debug_data@@Base+0x23c>
   13888:	bl	17bf4 <handle_coda_error@@Base>
   1388c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13890:	cmp	r0, #0
   13894:	beq	13948 <print_debug_data@@Base+0x2f8>
   13898:	add	r1, sp, #32
   1389c:	mov	r0, r4
   138a0:	bl	12880 <coda_cursor_get_string_length@plt>
   138a4:	cmp	r0, #0
   138a8:	beq	138b0 <print_debug_data@@Base+0x260>
   138ac:	bl	17bf4 <handle_coda_error@@Base>
   138b0:	ldr	r0, [sp, #32]
   138b4:	add	r6, r0, #1
   138b8:	mov	r0, r6
   138bc:	bl	12820 <malloc@plt>
   138c0:	mov	r5, r0
   138c4:	cmp	r0, #0
   138c8:	bne	138fc <print_debug_data@@Base+0x2ac>
   138cc:	movw	r1, #38433	; 0x9621
   138d0:	movw	r3, #38747	; 0x975b
   138d4:	movw	r0, #410	; 0x19a
   138d8:	mov	r2, r6
   138dc:	movt	r1, #1
   138e0:	movt	r3, #1
   138e4:	str	r0, [sp]
   138e8:	mvn	r0, #0
   138ec:	bl	126a0 <coda_set_error@plt>
   138f0:	bl	17bf4 <handle_coda_error@@Base>
   138f4:	ldr	r0, [sp, #32]
   138f8:	add	r6, r0, #1
   138fc:	mov	r0, r4
   13900:	mov	r1, r5
   13904:	mov	r2, r6
   13908:	bl	12844 <coda_cursor_read_string@plt>
   1390c:	cmp	r0, #0
   13910:	beq	13918 <print_debug_data@@Base+0x2c8>
   13914:	bl	17bf4 <handle_coda_error@@Base>
   13918:	movw	r0, #40220	; 0x9d1c
   1391c:	movt	r0, #1
   13920:	bl	14360 <print_debug_data@@Base+0xd10>
   13924:	ldr	r1, [sp, #32]
   13928:	mov	r0, r5
   1392c:	bl	14458 <print_debug_data@@Base+0xe08>
   13930:	ldr	r1, [sp, #32]
   13934:	movw	r0, #38822	; 0x97a6
   13938:	movt	r0, #1
   1393c:	bl	14410 <print_debug_data@@Base+0xdc0>
   13940:	mov	r0, r5
   13944:	bl	126e8 <free@plt>
   13948:	sub	r1, fp, #120	; 0x78
   1394c:	mov	r0, r4
   13950:	bl	12814 <coda_cursor_get_read_type@plt>
   13954:	cmp	r0, #0
   13958:	beq	13960 <print_debug_data@@Base+0x310>
   1395c:	bl	17bf4 <handle_coda_error@@Base>
   13960:	ldr	r0, [fp, #-120]	; 0xffffff88
   13964:	add	r0, r0, #1
   13968:	cmp	r0, #13
   1396c:	bhi	1431c <print_debug_data@@Base+0xccc>
   13970:	add	r1, pc, #0
   13974:	ldr	pc, [r1, r0, lsl #2]
   13978:			; <UNDEFINED> instruction: 0x000139b0
   1397c:	andeq	r3, r1, ip, asr #24
   13980:	andeq	r3, r1, r4, lsr #24
   13984:	andeq	r3, r1, ip, asr #24
   13988:	andeq	r3, r1, r4, lsr #24
   1398c:	andeq	r3, r1, ip, asr #24
   13990:	andeq	r3, r1, r4, lsr #24
   13994:	andeq	r3, r1, r4, lsl #26
   13998:	andeq	r3, r1, r4, lsr sp
   1399c:	andeq	r3, r1, r4, ror ip
   139a0:	andeq	r3, r1, r4, ror ip
   139a4:			; <UNDEFINED> instruction: 0x000139b0
   139a8:			; <UNDEFINED> instruction: 0x000139b0
   139ac:	andeq	r3, r1, r4, ror sp
   139b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   139b4:	cmp	r0, #0
   139b8:	bne	1431c <print_debug_data@@Base+0xccc>
   139bc:	movw	r0, #38863	; 0x97cf
   139c0:	movw	r1, #38747	; 0x975b
   139c4:	movw	r3, #38881	; 0x97e1
   139c8:	mov	r2, #548	; 0x224
   139cc:	movt	r0, #1
   139d0:	movt	r1, #1
   139d4:	movt	r3, #1
   139d8:	bl	12ab4 <__assert_fail@plt>
   139dc:	sub	r1, fp, #120	; 0x78
   139e0:	mov	r0, r4
   139e4:	bl	126d0 <coda_cursor_get_num_elements@plt>
   139e8:	cmp	r0, #0
   139ec:	beq	139f4 <print_debug_data@@Base+0x3a4>
   139f0:	bl	17bf4 <handle_coda_error@@Base>
   139f4:	ldr	r0, [fp, #-120]	; 0xffffff88
   139f8:	cmp	r0, #1
   139fc:	blt	1431c <print_debug_data@@Base+0xccc>
   13a00:	sub	r1, fp, #96	; 0x60
   13a04:	mov	r0, r4
   13a08:	bl	12730 <coda_cursor_get_type@plt>
   13a0c:	cmp	r0, #0
   13a10:	beq	13a18 <print_debug_data@@Base+0x3c8>
   13a14:	bl	17bf4 <handle_coda_error@@Base>
   13a18:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a1c:	sub	r1, fp, #44	; 0x2c
   13a20:	bl	12934 <coda_type_get_record_union_status@plt>
   13a24:	cmp	r0, #0
   13a28:	beq	13a30 <print_debug_data@@Base+0x3e0>
   13a2c:	bl	17bf4 <handle_coda_error@@Base>
   13a30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a34:	cmp	r0, #0
   13a38:	beq	13e8c <print_debug_data@@Base+0x83c>
   13a3c:	sub	r1, fp, #48	; 0x30
   13a40:	mov	r0, r4
   13a44:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   13a48:	cmp	r0, #0
   13a4c:	beq	13a54 <print_debug_data@@Base+0x404>
   13a50:	bl	17bf4 <handle_coda_error@@Base>
   13a54:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13a58:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a5c:	sub	r2, fp, #52	; 0x34
   13a60:	bl	12a78 <coda_type_get_record_field_name@plt>
   13a64:	cmp	r0, #0
   13a68:	beq	13a70 <print_debug_data@@Base+0x420>
   13a6c:	bl	17bf4 <handle_coda_error@@Base>
   13a70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13a74:	mov	r0, r4
   13a78:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   13a7c:	cmp	r0, #0
   13a80:	beq	13a88 <print_debug_data@@Base+0x438>
   13a84:	bl	17bf4 <handle_coda_error@@Base>
   13a88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13a8c:	movw	r0, #40469	; 0x9e15
   13a90:	movt	r0, #1
   13a94:	bl	14360 <print_debug_data@@Base+0xd10>
   13a98:	movw	r0, #49576	; 0xc1a8
   13a9c:	movt	r0, #2
   13aa0:	ldr	r0, [r0]
   13aa4:	cmp	r0, #0
   13aa8:	beq	13b10 <print_debug_data@@Base+0x4c0>
   13aac:	sub	r1, fp, #88	; 0x58
   13ab0:	mov	r0, r4
   13ab4:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   13ab8:	cmp	r0, #0
   13abc:	beq	13ac4 <print_debug_data@@Base+0x474>
   13ac0:	bl	17bf4 <handle_coda_error@@Base>
   13ac4:	ldr	r1, [fp, #-84]	; 0xffffffac
   13ac8:	cmp	r1, #0
   13acc:	bmi	13b10 <print_debug_data@@Base+0x4c0>
   13ad0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13ad4:	add	r6, sp, #32
   13ad8:	mov	r2, r6
   13adc:	lsr	r0, r0, #3
   13ae0:	orr	r0, r0, r1, lsl #29
   13ae4:	lsr	r1, r1, #3
   13ae8:	bl	12aa8 <coda_str64@plt>
   13aec:	movw	r0, #38734	; 0x974e
   13af0:	mov	r1, r6
   13af4:	movt	r0, #1
   13af8:	bl	14410 <print_debug_data@@Base+0xdc0>
   13afc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13b00:	ands	r1, r0, #7
   13b04:	movwne	r0, #38738	; 0x9752
   13b08:	movtne	r0, #1
   13b0c:	blne	14410 <print_debug_data@@Base+0xdc0>
   13b10:	movw	r0, #40854	; 0x9f96
   13b14:	movt	r0, #1
   13b18:	bl	14410 <print_debug_data@@Base+0xdc0>
   13b1c:	movw	r4, #49600	; 0xc1c0
   13b20:	movt	r4, #2
   13b24:	ldr	r0, [r4]
   13b28:	add	r0, r0, #1
   13b2c:	str	r0, [r4]
   13b30:	movw	r0, #49580	; 0xc1ac
   13b34:	movt	r0, #2
   13b38:	ldr	r0, [r0]
   13b3c:	cmp	r0, #0
   13b40:	bmi	142f4 <print_debug_data@@Base+0xca4>
   13b44:	ldr	r1, [sp, #24]
   13b48:	cmp	r0, r1
   13b4c:	bgt	142f4 <print_debug_data@@Base+0xca4>
   13b50:	movw	r0, #38742	; 0x9756
   13b54:	movt	r0, #1
   13b58:	bl	14360 <print_debug_data@@Base+0xd10>
   13b5c:	ldr	r5, [sp, #28]
   13b60:	b	14308 <print_debug_data@@Base+0xcb8>
   13b64:	add	r6, sp, #32
   13b68:	sub	r1, fp, #44	; 0x2c
   13b6c:	mov	r0, r4
   13b70:	mov	r2, r6
   13b74:	bl	1297c <coda_cursor_get_array_dim@plt>
   13b78:	cmp	r0, #0
   13b7c:	beq	13b84 <print_debug_data@@Base+0x534>
   13b80:	bl	17bf4 <handle_coda_error@@Base>
   13b84:	ldr	r4, [fp, #-44]	; 0xffffffd4
   13b88:	cmp	r4, #0
   13b8c:	bmi	1431c <print_debug_data@@Base+0xccc>
   13b90:	beq	14020 <print_debug_data@@Base+0x9d0>
   13b94:	lsl	r2, r4, #2
   13b98:	sub	r0, fp, #88	; 0x58
   13b9c:	mov	r1, #0
   13ba0:	bl	12904 <memset@plt>
   13ba4:	mov	r7, #1
   13ba8:	ldr	r0, [r6], #4
   13bac:	subs	r4, r4, #1
   13bb0:	mul	r7, r0, r7
   13bb4:	bne	13ba8 <print_debug_data@@Base+0x558>
   13bb8:	cmp	r7, #1
   13bbc:	bge	14024 <print_debug_data@@Base+0x9d4>
   13bc0:	b	1431c <print_debug_data@@Base+0xccc>
   13bc4:	sub	r1, fp, #120	; 0x78
   13bc8:	mov	r0, r4
   13bcc:	bl	127b4 <coda_cursor_get_special_type@plt>
   13bd0:	cmp	r0, #0
   13bd4:	beq	13bdc <print_debug_data@@Base+0x58c>
   13bd8:	bl	17bf4 <handle_coda_error@@Base>
   13bdc:	ldr	r0, [fp, #-120]	; 0xffffff88
   13be0:	cmp	r0, #0
   13be4:	beq	13cb8 <print_debug_data@@Base+0x668>
   13be8:	add	r6, sp, #32
   13bec:	mov	r1, r4
   13bf0:	mov	r2, #520	; 0x208
   13bf4:	mov	r0, r6
   13bf8:	bl	1273c <memcpy@plt>
   13bfc:	mov	r0, r6
   13c00:	bl	12a24 <coda_cursor_use_base_type_of_special_type@plt>
   13c04:	cmp	r0, #0
   13c08:	beq	13c10 <print_debug_data@@Base+0x5c0>
   13c0c:	bl	17bf4 <handle_coda_error@@Base>
   13c10:	ldr	r1, [sp, #24]
   13c14:	add	r0, sp, #32
   13c18:	bl	13798 <print_debug_data@@Base+0x148>
   13c1c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c20:	b	13cbc <print_debug_data@@Base+0x66c>
   13c24:	add	r1, sp, #32
   13c28:	mov	r0, r4
   13c2c:	bl	1270c <coda_cursor_read_uint32@plt>
   13c30:	cmp	r0, #0
   13c34:	beq	13c3c <print_debug_data@@Base+0x5ec>
   13c38:	bl	17bf4 <handle_coda_error@@Base>
   13c3c:	ldr	r1, [sp, #32]
   13c40:	movw	r0, #38852	; 0x97c4
   13c44:	movt	r0, #1
   13c48:	b	13d6c <print_debug_data@@Base+0x71c>
   13c4c:	add	r1, sp, #32
   13c50:	mov	r0, r4
   13c54:	bl	12a3c <coda_cursor_read_int32@plt>
   13c58:	cmp	r0, #0
   13c5c:	beq	13c64 <print_debug_data@@Base+0x614>
   13c60:	bl	17bf4 <handle_coda_error@@Base>
   13c64:	ldr	r1, [sp, #32]
   13c68:	movw	r0, #38847	; 0x97bf
   13c6c:	movt	r0, #1
   13c70:	b	13d6c <print_debug_data@@Base+0x71c>
   13c74:	add	r1, sp, #32
   13c78:	mov	r0, r4
   13c7c:	bl	12898 <coda_cursor_read_double@plt>
   13c80:	cmp	r0, #0
   13c84:	beq	13c8c <print_debug_data@@Base+0x63c>
   13c88:	bl	17bf4 <handle_coda_error@@Base>
   13c8c:	ldr	r1, [fp, #-120]	; 0xffffff88
   13c90:	vldr	d16, [sp, #32]
   13c94:	movw	r2, #38857	; 0x97c9
   13c98:	movw	r0, #38923	; 0x980b
   13c9c:	movt	r2, #1
   13ca0:	movt	r0, #1
   13ca4:	cmp	r1, #8
   13ca8:	moveq	r0, r2
   13cac:	vmov	r2, r3, d16
   13cb0:	bl	14360 <print_debug_data@@Base+0xd10>
   13cb4:	b	1431c <print_debug_data@@Base+0xccc>
   13cb8:	mov	r0, #0
   13cbc:	bl	12628 <coda_type_get_special_type_name@plt>
   13cc0:	mov	r1, r0
   13cc4:	movw	r0, #38917	; 0x9805
   13cc8:	movt	r0, #1
   13ccc:	bl	14360 <print_debug_data@@Base+0xd10>
   13cd0:	ldr	r0, [fp, #-120]	; 0xffffff88
   13cd4:	cmp	r0, #3
   13cd8:	bhi	1431c <print_debug_data@@Base+0xccc>
   13cdc:	add	r1, pc, #0
   13ce0:	ldr	pc, [r1, r0, lsl #2]
   13ce4:	strdeq	r3, [r1], -r4
   13ce8:	andeq	r4, r1, r4, asr #5
   13cec:	andeq	r4, r1, r4, asr #4
   13cf0:	andeq	r4, r1, ip, lsl #5
   13cf4:	movw	r0, #40854	; 0x9f96
   13cf8:	movt	r0, #1
   13cfc:	bl	14410 <print_debug_data@@Base+0xdc0>
   13d00:	b	1431c <print_debug_data@@Base+0xccc>
   13d04:	sub	r1, fp, #88	; 0x58
   13d08:	mov	r0, r4
   13d0c:	bl	129a0 <coda_cursor_read_int64@plt>
   13d10:	cmp	r0, #0
   13d14:	beq	13d1c <print_debug_data@@Base+0x6cc>
   13d18:	bl	17bf4 <handle_coda_error@@Base>
   13d1c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13d20:	ldr	r1, [fp, #-84]	; 0xffffffac
   13d24:	add	r4, sp, #32
   13d28:	mov	r2, r4
   13d2c:	bl	12aa8 <coda_str64@plt>
   13d30:	b	13d60 <print_debug_data@@Base+0x710>
   13d34:	sub	r1, fp, #88	; 0x58
   13d38:	mov	r0, r4
   13d3c:	bl	1288c <coda_cursor_read_uint64@plt>
   13d40:	cmp	r0, #0
   13d44:	beq	13d4c <print_debug_data@@Base+0x6fc>
   13d48:	bl	17bf4 <handle_coda_error@@Base>
   13d4c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13d50:	ldr	r1, [fp, #-84]	; 0xffffffac
   13d54:	add	r4, sp, #32
   13d58:	mov	r2, r4
   13d5c:	bl	126dc <coda_str64u@plt>
   13d60:	movw	r0, #40597	; 0x9e95
   13d64:	mov	r1, r4
   13d68:	movt	r0, #1
   13d6c:	bl	14360 <print_debug_data@@Base+0xd10>
   13d70:	b	1431c <print_debug_data@@Base+0xccc>
   13d74:	sub	r1, fp, #88	; 0x58
   13d78:	mov	r0, r4
   13d7c:	bl	12a00 <coda_cursor_get_bit_size@plt>
   13d80:	cmp	r0, #0
   13d84:	beq	13d8c <print_debug_data@@Base+0x73c>
   13d88:	bl	17bf4 <handle_coda_error@@Base>
   13d8c:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13d90:	ldr	r7, [fp, #-84]	; 0xffffffac
   13d94:	lsr	r0, r4, #3
   13d98:	tst	r4, #7
   13d9c:	orr	r6, r0, r7, lsl #29
   13da0:	addne	r6, r6, #1
   13da4:	mov	r0, r6
   13da8:	bl	12820 <malloc@plt>
   13dac:	mov	r5, r0
   13db0:	cmp	r0, #0
   13db4:	bne	13de8 <print_debug_data@@Base+0x798>
   13db8:	movw	r1, #38433	; 0x9621
   13dbc:	movw	r3, #38747	; 0x975b
   13dc0:	movw	r0, #447	; 0x1bf
   13dc4:	mov	r2, r6
   13dc8:	movt	r1, #1
   13dcc:	movt	r3, #1
   13dd0:	str	r0, [sp]
   13dd4:	mvn	r0, #0
   13dd8:	bl	126a0 <coda_set_error@plt>
   13ddc:	bl	17bf4 <handle_coda_error@@Base>
   13de0:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13de4:	ldr	r7, [fp, #-84]	; 0xffffffac
   13de8:	ldr	r0, [sp, #28]
   13dec:	mov	r1, r5
   13df0:	mov	r2, #0
   13df4:	mov	r3, #0
   13df8:	stm	sp, {r4, r7}
   13dfc:	bl	12a9c <coda_cursor_read_bits@plt>
   13e00:	cmp	r0, #0
   13e04:	beq	13e0c <print_debug_data@@Base+0x7bc>
   13e08:	bl	17bf4 <handle_coda_error@@Base>
   13e0c:	movw	r0, #40220	; 0x9d1c
   13e10:	movt	r0, #1
   13e14:	bl	14360 <print_debug_data@@Base+0xd10>
   13e18:	mov	r0, r5
   13e1c:	mov	r1, r6
   13e20:	bl	14458 <print_debug_data@@Base+0xe08>
   13e24:	movw	r0, #38838	; 0x97b6
   13e28:	movt	r0, #1
   13e2c:	bl	14410 <print_debug_data@@Base+0xdc0>
   13e30:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13e34:	ldr	r1, [fp, #-84]	; 0xffffffac
   13e38:	add	r4, sp, #32
   13e3c:	mov	r2, r4
   13e40:	lsr	r0, r0, #3
   13e44:	orr	r0, r0, r1, lsl #29
   13e48:	asr	r1, r1, #3
   13e4c:	bl	12aa8 <coda_str64@plt>
   13e50:	movw	r0, #40409	; 0x9dd9
   13e54:	mov	r1, r4
   13e58:	movt	r0, #1
   13e5c:	bl	14410 <print_debug_data@@Base+0xdc0>
   13e60:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13e64:	ands	r1, r0, #7
   13e68:	movwne	r0, #38738	; 0x9752
   13e6c:	movtne	r0, #1
   13e70:	blne	14410 <print_debug_data@@Base+0xdc0>
   13e74:	movw	r0, #38835	; 0x97b3
   13e78:	movt	r0, #1
   13e7c:	bl	14410 <print_debug_data@@Base+0xdc0>
   13e80:	mov	r0, r5
   13e84:	bl	126e8 <free@plt>
   13e88:	b	1431c <print_debug_data@@Base+0xccc>
   13e8c:	mov	r0, r4
   13e90:	bl	127e4 <coda_cursor_goto_first_record_field@plt>
   13e94:	cmp	r0, #0
   13e98:	beq	13ea0 <print_debug_data@@Base+0x850>
   13e9c:	bl	17bf4 <handle_coda_error@@Base>
   13ea0:	ldr	r0, [fp, #-120]	; 0xffffff88
   13ea4:	mov	r1, #0
   13ea8:	str	r1, [fp, #-48]	; 0xffffffd0
   13eac:	cmp	r0, #1
   13eb0:	blt	14018 <print_debug_data@@Base+0x9c8>
   13eb4:	ldr	r0, [sp, #24]
   13eb8:	movw	r7, #40469	; 0x9e15
   13ebc:	movw	r9, #49576	; 0xc1a8
   13ec0:	movw	r6, #40854	; 0x9f96
   13ec4:	movw	sl, #49600	; 0xc1c0
   13ec8:	movw	r8, #49580	; 0xc1ac
   13ecc:	mvn	r4, #0
   13ed0:	movt	r7, #1
   13ed4:	movt	r9, #2
   13ed8:	movt	r6, #1
   13edc:	movt	sl, #2
   13ee0:	movt	r8, #2
   13ee4:	add	r0, r0, #1
   13ee8:	str	r0, [sp, #20]
   13eec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13ef0:	sub	r2, fp, #52	; 0x34
   13ef4:	bl	12a78 <coda_type_get_record_field_name@plt>
   13ef8:	cmp	r0, #0
   13efc:	beq	13f04 <print_debug_data@@Base+0x8b4>
   13f00:	bl	17bf4 <handle_coda_error@@Base>
   13f04:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13f08:	mov	r0, r7
   13f0c:	bl	14360 <print_debug_data@@Base+0xd10>
   13f10:	ldr	r0, [r9]
   13f14:	cmp	r0, #0
   13f18:	beq	13f84 <print_debug_data@@Base+0x934>
   13f1c:	ldr	r0, [sp, #28]
   13f20:	sub	r1, fp, #88	; 0x58
   13f24:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   13f28:	cmp	r0, #0
   13f2c:	beq	13f34 <print_debug_data@@Base+0x8e4>
   13f30:	bl	17bf4 <handle_coda_error@@Base>
   13f34:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13f38:	ldr	r1, [fp, #-84]	; 0xffffffac
   13f3c:	subs	r2, r4, r0
   13f40:	sbcs	r2, r4, r1
   13f44:	bge	13f84 <print_debug_data@@Base+0x934>
   13f48:	lsr	r0, r0, #3
   13f4c:	add	r5, sp, #32
   13f50:	orr	r0, r0, r1, lsl #29
   13f54:	lsr	r1, r1, #3
   13f58:	mov	r2, r5
   13f5c:	bl	12aa8 <coda_str64@plt>
   13f60:	movw	r0, #38734	; 0x974e
   13f64:	mov	r1, r5
   13f68:	movt	r0, #1
   13f6c:	bl	14410 <print_debug_data@@Base+0xdc0>
   13f70:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13f74:	ands	r1, r0, #7
   13f78:	movwne	r0, #38738	; 0x9752
   13f7c:	movtne	r0, #1
   13f80:	blne	14410 <print_debug_data@@Base+0xdc0>
   13f84:	mov	r0, r6
   13f88:	bl	14410 <print_debug_data@@Base+0xdc0>
   13f8c:	ldr	r0, [sl]
   13f90:	add	r0, r0, #1
   13f94:	str	r0, [sl]
   13f98:	ldr	r0, [r8]
   13f9c:	cmp	r0, #0
   13fa0:	bmi	13fc0 <print_debug_data@@Base+0x970>
   13fa4:	ldr	r1, [sp, #24]
   13fa8:	cmp	r0, r1
   13fac:	bgt	13fc0 <print_debug_data@@Base+0x970>
   13fb0:	movw	r0, #38742	; 0x9756
   13fb4:	movt	r0, #1
   13fb8:	bl	14360 <print_debug_data@@Base+0xd10>
   13fbc:	b	13fcc <print_debug_data@@Base+0x97c>
   13fc0:	ldr	r0, [sp, #28]
   13fc4:	ldr	r1, [sp, #20]
   13fc8:	bl	13798 <print_debug_data@@Base+0x148>
   13fcc:	ldr	r0, [sl]
   13fd0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13fd4:	sub	r0, r0, #1
   13fd8:	str	r0, [sl]
   13fdc:	ldr	r0, [fp, #-120]	; 0xffffff88
   13fe0:	sub	r0, r0, #1
   13fe4:	cmp	r1, r0
   13fe8:	bge	14000 <print_debug_data@@Base+0x9b0>
   13fec:	ldr	r0, [sp, #28]
   13ff0:	bl	129dc <coda_cursor_goto_next_record_field@plt>
   13ff4:	cmp	r0, #0
   13ff8:	beq	14000 <print_debug_data@@Base+0x9b0>
   13ffc:	bl	17bf4 <handle_coda_error@@Base>
   14000:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14004:	add	r1, r0, #1
   14008:	ldr	r0, [fp, #-120]	; 0xffffff88
   1400c:	str	r1, [fp, #-48]	; 0xffffffd0
   14010:	cmp	r1, r0
   14014:	blt	13eec <print_debug_data@@Base+0x89c>
   14018:	ldr	r0, [sp, #28]
   1401c:	b	14318 <print_debug_data@@Base+0xcc8>
   14020:	mov	r7, #1
   14024:	ldr	r0, [sp, #28]
   14028:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   1402c:	cmp	r0, #0
   14030:	beq	14038 <print_debug_data@@Base+0x9e8>
   14034:	bl	17bf4 <handle_coda_error@@Base>
   14038:	add	r0, sp, #32
   1403c:	movw	r6, #39152	; 0x98f0
   14040:	str	r7, [sp, #20]
   14044:	sub	r9, fp, #88	; 0x58
   14048:	mov	sl, #0
   1404c:	sub	r5, r0, #4
   14050:	sub	r0, r7, #1
   14054:	movw	r7, #38739	; 0x9753
   14058:	movt	r6, #1
   1405c:	sub	r8, r9, #4
   14060:	str	r0, [sp, #16]
   14064:	ldr	r0, [sp, #24]
   14068:	movt	r7, #1
   1406c:	add	r0, r0, #1
   14070:	str	r0, [sp, #12]
   14074:	movw	r0, #39164	; 0x98fc
   14078:	movt	r0, #1
   1407c:	bl	14360 <print_debug_data@@Base+0xd10>
   14080:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14084:	cmp	r0, #1
   14088:	blt	140c4 <print_debug_data@@Base+0xa74>
   1408c:	mov	r4, #0
   14090:	ldr	r1, [r9, r4, lsl #2]
   14094:	mov	r0, r7
   14098:	bl	14410 <print_debug_data@@Base+0xdc0>
   1409c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140a0:	sub	r1, r0, #1
   140a4:	cmp	r4, r1
   140a8:	bge	140b8 <print_debug_data@@Base+0xa68>
   140ac:	mov	r0, r6
   140b0:	bl	14410 <print_debug_data@@Base+0xdc0>
   140b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140b8:	add	r4, r4, #1
   140bc:	cmp	r4, r0
   140c0:	blt	14090 <print_debug_data@@Base+0xa40>
   140c4:	movw	r0, #42132	; 0xa494
   140c8:	movt	r0, #1
   140cc:	bl	14410 <print_debug_data@@Base+0xdc0>
   140d0:	movw	r0, #49576	; 0xc1a8
   140d4:	ldr	r4, [sp, #28]
   140d8:	movt	r0, #2
   140dc:	ldr	r0, [r0]
   140e0:	cmp	r0, #0
   140e4:	beq	14158 <print_debug_data@@Base+0xb08>
   140e8:	mov	r0, r4
   140ec:	sub	r1, fp, #96	; 0x60
   140f0:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   140f4:	cmp	r0, #0
   140f8:	beq	14100 <print_debug_data@@Base+0xab0>
   140fc:	bl	17bf4 <handle_coda_error@@Base>
   14100:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14104:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14108:	mvn	r3, #0
   1410c:	subs	r2, r3, r0
   14110:	sbcs	r2, r3, r1
   14114:	bge	14158 <print_debug_data@@Base+0xb08>
   14118:	lsr	r0, r0, #3
   1411c:	sub	r4, fp, #120	; 0x78
   14120:	orr	r0, r0, r1, lsl #29
   14124:	lsr	r1, r1, #3
   14128:	mov	r2, r4
   1412c:	bl	12aa8 <coda_str64@plt>
   14130:	movw	r0, #38734	; 0x974e
   14134:	mov	r1, r4
   14138:	movt	r0, #1
   1413c:	bl	14410 <print_debug_data@@Base+0xdc0>
   14140:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14144:	ands	r1, r0, #7
   14148:	movwne	r0, #38738	; 0x9752
   1414c:	movtne	r0, #1
   14150:	blne	14410 <print_debug_data@@Base+0xdc0>
   14154:	ldr	r4, [sp, #28]
   14158:	movw	r0, #40854	; 0x9f96
   1415c:	movt	r0, #1
   14160:	bl	14410 <print_debug_data@@Base+0xdc0>
   14164:	movw	r0, #49600	; 0xc1c0
   14168:	movt	r0, #2
   1416c:	mov	r1, r0
   14170:	ldr	r0, [r0]
   14174:	add	r0, r0, #1
   14178:	str	r0, [r1]
   1417c:	movw	r0, #49580	; 0xc1ac
   14180:	movt	r0, #2
   14184:	ldr	r0, [r0]
   14188:	cmp	r0, #0
   1418c:	bmi	141ac <print_debug_data@@Base+0xb5c>
   14190:	ldr	r1, [sp, #24]
   14194:	cmp	r0, r1
   14198:	bgt	141ac <print_debug_data@@Base+0xb5c>
   1419c:	movw	r0, #38742	; 0x9756
   141a0:	movt	r0, #1
   141a4:	bl	14360 <print_debug_data@@Base+0xd10>
   141a8:	b	141b8 <print_debug_data@@Base+0xb68>
   141ac:	ldr	r1, [sp, #12]
   141b0:	mov	r0, r4
   141b4:	bl	13798 <print_debug_data@@Base+0x148>
   141b8:	movw	r0, #49600	; 0xc1c0
   141bc:	mov	r3, #0
   141c0:	movt	r0, #2
   141c4:	mov	r1, r0
   141c8:	ldr	r0, [r0]
   141cc:	sub	r0, r0, #1
   141d0:	str	r0, [r1]
   141d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141d8:	cmp	r0, #1
   141dc:	blt	1420c <print_debug_data@@Base+0xbbc>
   141e0:	ldr	r1, [r8, r0, lsl #2]
   141e4:	ldr	r2, [r5, r0, lsl #2]
   141e8:	add	r1, r1, #1
   141ec:	cmp	r1, r2
   141f0:	str	r1, [r8, r0, lsl #2]
   141f4:	bne	1420c <print_debug_data@@Base+0xbbc>
   141f8:	sub	r1, r0, #1
   141fc:	str	r3, [r8, r0, lsl #2]
   14200:	cmp	r1, #0
   14204:	mov	r0, r1
   14208:	bgt	141e0 <print_debug_data@@Base+0xb90>
   1420c:	ldr	r0, [sp, #16]
   14210:	cmp	sl, r0
   14214:	bge	1422c <print_debug_data@@Base+0xbdc>
   14218:	mov	r0, r4
   1421c:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   14220:	cmp	r0, #0
   14224:	beq	1422c <print_debug_data@@Base+0xbdc>
   14228:	bl	17bf4 <handle_coda_error@@Base>
   1422c:	ldr	r0, [sp, #20]
   14230:	add	sl, sl, #1
   14234:	cmp	sl, r0
   14238:	bne	14074 <print_debug_data@@Base+0xa24>
   1423c:	mov	r0, r4
   14240:	b	14318 <print_debug_data@@Base+0xcc8>
   14244:	sub	r1, fp, #88	; 0x58
   14248:	mov	r0, r4
   1424c:	bl	12898 <coda_cursor_read_double@plt>
   14250:	cmp	r0, #0
   14254:	beq	1425c <print_debug_data@@Base+0xc0c>
   14258:	bl	17bf4 <handle_coda_error@@Base>
   1425c:	vldr	d0, [fp, #-88]	; 0xffffffa8
   14260:	bl	128a4 <coda_isNaN@plt>
   14264:	cmp	r0, #0
   14268:	bne	1427c <print_debug_data@@Base+0xc2c>
   1426c:	vldr	d0, [fp, #-88]	; 0xffffffa8
   14270:	bl	12748 <coda_isInf@plt>
   14274:	cmp	r0, #0
   14278:	beq	14324 <print_debug_data@@Base+0xcd4>
   1427c:	vldr	d16, [fp, #-88]	; 0xffffffa8
   14280:	movw	r0, #38922	; 0x980a
   14284:	movt	r0, #1
   14288:	b	142e8 <print_debug_data@@Base+0xc98>
   1428c:	add	r1, sp, #32
   14290:	sub	r2, fp, #88	; 0x58
   14294:	mov	r0, r4
   14298:	bl	12940 <coda_cursor_read_complex_double_split@plt>
   1429c:	cmp	r0, #0
   142a0:	beq	142a8 <print_debug_data@@Base+0xc58>
   142a4:	bl	17bf4 <handle_coda_error@@Base>
   142a8:	vldr	d16, [sp, #32]
   142ac:	vldr	d17, [fp, #-88]	; 0xffffffa8
   142b0:	movw	r0, #38957	; 0x982d
   142b4:	movt	r0, #1
   142b8:	vmov	r2, r3, d16
   142bc:	vstr	d17, [sp]
   142c0:	b	142ec <print_debug_data@@Base+0xc9c>
   142c4:	add	r1, sp, #32
   142c8:	mov	r0, r4
   142cc:	bl	12898 <coda_cursor_read_double@plt>
   142d0:	cmp	r0, #0
   142d4:	beq	142dc <print_debug_data@@Base+0xc8c>
   142d8:	bl	17bf4 <handle_coda_error@@Base>
   142dc:	vldr	d16, [sp, #32]
   142e0:	movw	r0, #38923	; 0x980b
   142e4:	movt	r0, #1
   142e8:	vmov	r2, r3, d16
   142ec:	bl	14410 <print_debug_data@@Base+0xdc0>
   142f0:	b	1431c <print_debug_data@@Base+0xccc>
   142f4:	ldr	r0, [sp, #24]
   142f8:	ldr	r5, [sp, #28]
   142fc:	add	r1, r0, #1
   14300:	mov	r0, r5
   14304:	bl	13798 <print_debug_data@@Base+0x148>
   14308:	ldr	r0, [r4]
   1430c:	sub	r0, r0, #1
   14310:	str	r0, [r4]
   14314:	mov	r0, r5
   14318:	bl	12850 <coda_cursor_goto_parent@plt>
   1431c:	sub	sp, fp, #28
   14320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14324:	vldr	d0, [fp, #-88]	; 0xffffffa8
   14328:	movw	r0, #38641	; 0x96f1
   1432c:	add	r1, sp, #32
   14330:	movt	r0, #1
   14334:	bl	126c4 <coda_time_double_to_string@plt>
   14338:	cmp	r0, #0
   1433c:	beq	1434c <print_debug_data@@Base+0xcfc>
   14340:	movw	r0, #38930	; 0x9812
   14344:	movt	r0, #1
   14348:	b	13cfc <print_debug_data@@Base+0x6ac>
   1434c:	movw	r0, #40596	; 0x9e94
   14350:	add	r1, sp, #32
   14354:	movt	r0, #1
   14358:	bl	14410 <print_debug_data@@Base+0xdc0>
   1435c:	b	1431c <print_debug_data@@Base+0xccc>
   14360:	sub	sp, sp, #12
   14364:	push	{r4, r5, r6, r7, fp, lr}
   14368:	add	fp, sp, #16
   1436c:	sub	sp, sp, #4
   14370:	mov	r4, r0
   14374:	add	r0, fp, #8
   14378:	stm	r0, {r1, r2, r3}
   1437c:	movw	r0, #49600	; 0xc1c0
   14380:	movt	r0, #2
   14384:	ldr	r6, [r0]
   14388:	cmp	r6, #0
   1438c:	bmi	143f0 <print_debug_data@@Base+0xda0>
   14390:	beq	143c4 <print_debug_data@@Base+0xd74>
   14394:	movw	r7, #53392	; 0xd090
   14398:	movw	r5, #38998	; 0x9856
   1439c:	movt	r7, #2
   143a0:	movt	r5, #1
   143a4:	ldr	r3, [r7]
   143a8:	mov	r0, r5
   143ac:	mov	r1, #2
   143b0:	mov	r2, #1
   143b4:	bl	127cc <fwrite@plt>
   143b8:	sub	r6, r6, #1
   143bc:	cmp	r6, #0
   143c0:	bgt	143a4 <print_debug_data@@Base+0xd54>
   143c4:	movw	r0, #53392	; 0xd090
   143c8:	add	r2, fp, #8
   143cc:	mov	r1, r4
   143d0:	movt	r0, #2
   143d4:	str	r2, [sp]
   143d8:	ldr	r0, [r0]
   143dc:	bl	129ac <vfprintf@plt>
   143e0:	sub	sp, fp, #16
   143e4:	pop	{r4, r5, r6, r7, fp, lr}
   143e8:	add	sp, sp, #12
   143ec:	bx	lr
   143f0:	movw	r0, #38968	; 0x9838
   143f4:	movw	r1, #38747	; 0x975b
   143f8:	movw	r3, #38980	; 0x9844
   143fc:	mov	r2, #44	; 0x2c
   14400:	movt	r0, #1
   14404:	movt	r1, #1
   14408:	movt	r3, #1
   1440c:	bl	12ab4 <__assert_fail@plt>
   14410:	sub	sp, sp, #12
   14414:	push	{fp, lr}
   14418:	mov	fp, sp
   1441c:	sub	sp, sp, #4
   14420:	mov	ip, r0
   14424:	add	r0, fp, #8
   14428:	stm	r0, {r1, r2, r3}
   1442c:	movw	r0, #53392	; 0xd090
   14430:	add	r2, fp, #8
   14434:	mov	r1, ip
   14438:	movt	r0, #2
   1443c:	str	r2, [sp]
   14440:	ldr	r0, [r0]
   14444:	bl	129ac <vfprintf@plt>
   14448:	mov	sp, fp
   1444c:	pop	{fp, lr}
   14450:	add	sp, sp, #12
   14454:	bx	lr
   14458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1445c:	add	fp, sp, #28
   14460:	sub	sp, sp, #4
   14464:	cmp	r1, #1
   14468:	blt	14560 <print_debug_data@@Base+0xf10>
   1446c:	movw	r8, #38567	; 0x96a7
   14470:	movw	r9, #38570	; 0x96aa
   14474:	movw	sl, #38573	; 0x96ad
   14478:	movw	r7, #38576	; 0x96b0
   1447c:	movw	r6, #38579	; 0x96b3
   14480:	mov	r4, r1
   14484:	mov	r5, r0
   14488:	movt	r8, #1
   1448c:	movt	r9, #1
   14490:	movt	sl, #1
   14494:	movt	r7, #1
   14498:	movt	r6, #1
   1449c:	ldrb	r1, [r5]
   144a0:	sub	r0, r1, #7
   144a4:	cmp	r0, #6
   144a8:	bhi	144dc <print_debug_data@@Base+0xe8c>
   144ac:	add	r1, pc, #0
   144b0:	ldr	pc, [r1, r0, lsl #2]
   144b4:	ldrdeq	r4, [r1], -r0
   144b8:	strdeq	r4, [r1], -r0
   144bc:	strdeq	r4, [r1], -ip
   144c0:	andeq	r4, r1, r4, lsl #10
   144c4:	andeq	r4, r1, ip, lsl #10
   144c8:	andeq	r4, r1, r4, lsl r5
   144cc:	andeq	r4, r1, ip, lsl r5
   144d0:	movw	r0, #38561	; 0x96a1
   144d4:	movt	r0, #1
   144d8:	b	14520 <print_debug_data@@Base+0xed0>
   144dc:	cmp	r1, #92	; 0x5c
   144e0:	bne	14534 <print_debug_data@@Base+0xee4>
   144e4:	movw	r0, #38582	; 0x96b6
   144e8:	movt	r0, #1
   144ec:	b	14520 <print_debug_data@@Base+0xed0>
   144f0:	movw	r0, #38564	; 0x96a4
   144f4:	movt	r0, #1
   144f8:	b	14520 <print_debug_data@@Base+0xed0>
   144fc:	mov	r0, r8
   14500:	b	14520 <print_debug_data@@Base+0xed0>
   14504:	mov	r0, r9
   14508:	b	14520 <print_debug_data@@Base+0xed0>
   1450c:	mov	r0, sl
   14510:	b	14520 <print_debug_data@@Base+0xed0>
   14514:	mov	r0, r7
   14518:	b	14520 <print_debug_data@@Base+0xed0>
   1451c:	mov	r0, r6
   14520:	bl	14410 <print_debug_data@@Base+0xdc0>
   14524:	add	r5, r5, #1
   14528:	subs	r4, r4, #1
   1452c:	bne	1449c <print_debug_data@@Base+0xe4c>
   14530:	b	14560 <print_debug_data@@Base+0xf10>
   14534:	sub	r0, r1, #32
   14538:	uxtb	r0, r0
   1453c:	cmp	r0, #94	; 0x5e
   14540:	bhi	14550 <print_debug_data@@Base+0xf00>
   14544:	movw	r0, #39001	; 0x9859
   14548:	movt	r0, #1
   1454c:	b	14558 <print_debug_data@@Base+0xf08>
   14550:	movw	r0, #38585	; 0x96b9
   14554:	movt	r0, #1
   14558:	bl	14410 <print_debug_data@@Base+0xdc0>
   1455c:	b	14524 <print_debug_data@@Base+0xed4>
   14560:	sub	sp, fp, #28
   14564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014568 <dim_info_init@@Base>:
   14568:	movw	r0, #53424	; 0xd0b0
   1456c:	mvn	r1, #0
   14570:	movt	r0, #2
   14574:	str	r1, [r0, #104]	; 0x68
   14578:	mov	r1, #0
   1457c:	str	r1, [r0, #68]	; 0x44
   14580:	str	r1, [r0]
   14584:	bx	lr

00014588 <dim_info_done@@Base>:
   14588:	bx	lr

0001458c <print_all_distinct_dims@@Base>:
   1458c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14590:	add	fp, sp, #28
   14594:	sub	sp, sp, #4
   14598:	movw	r9, #53424	; 0xd0b0
   1459c:	mov	sl, r0
   145a0:	movt	r9, #2
   145a4:	ldr	r0, [r9]
   145a8:	cmp	r0, sl
   145ac:	ble	1473c <print_all_distinct_dims@@Base+0x1b0>
   145b0:	add	r8, r9, sl, lsl #2
   145b4:	ldr	r0, [r8, #72]	; 0x48
   145b8:	cmp	r0, #0
   145bc:	beq	14734 <print_all_distinct_dims@@Base+0x1a8>
   145c0:	mov	r7, r8
   145c4:	mov	r5, #4
   145c8:	ldr	r0, [r7, #4]!
   145cc:	add	r6, r5, r0, lsl #2
   145d0:	mov	r0, r6
   145d4:	bl	12820 <malloc@plt>
   145d8:	mov	r4, r0
   145dc:	cmp	r0, #0
   145e0:	bne	14614 <print_all_distinct_dims@@Base+0x88>
   145e4:	movw	r1, #38433	; 0x9621
   145e8:	movw	r3, #39031	; 0x9877
   145ec:	mov	r0, #61	; 0x3d
   145f0:	mov	r2, r6
   145f4:	movt	r1, #1
   145f8:	movt	r3, #1
   145fc:	str	r0, [sp]
   14600:	mvn	r0, #0
   14604:	bl	126a0 <coda_set_error@plt>
   14608:	bl	17bf4 <handle_coda_error@@Base>
   1460c:	ldr	r0, [r7]
   14610:	add	r6, r5, r0, lsl #2
   14614:	mov	r0, r4
   14618:	mov	r1, #0
   1461c:	mov	r2, r6
   14620:	mov	r5, #0
   14624:	bl	12904 <memset@plt>
   14628:	ldr	r0, [r8, #140]	; 0x8c
   1462c:	add	r0, r9, r0, lsl #3
   14630:	ldrd	r0, [r0, #232]	; 0xe8
   14634:	subs	r2, r0, #1
   14638:	sbcs	r2, r1, #0
   1463c:	blt	14668 <print_all_distinct_dims@@Base+0xdc>
   14640:	ldr	r2, [r8, #108]	; 0x6c
   14644:	ldr	r3, [r2, r5, lsl #2]
   14648:	add	r5, r5, #1
   1464c:	cmp	r3, #0
   14650:	ldrpl	r6, [r4, r3, lsl #2]
   14654:	addpl	r6, r6, #1
   14658:	strpl	r6, [r4, r3, lsl #2]
   1465c:	subs	r3, r5, r0
   14660:	rscs	r3, r1, #0
   14664:	blt	14644 <print_all_distinct_dims@@Base+0xb8>
   14668:	movw	r0, #39138	; 0x98e2
   1466c:	add	r1, sl, #1
   14670:	movt	r0, #1
   14674:	bl	1267c <printf@plt>
   14678:	ldr	r5, [r8, #36]!	; 0x24
   1467c:	ldr	r1, [r7]
   14680:	cmp	r5, r1
   14684:	bge	146b8 <print_all_distinct_dims@@Base+0x12c>
   14688:	movw	r6, #39150	; 0x98ee
   1468c:	movt	r6, #1
   14690:	ldr	r0, [r4, r5, lsl #2]
   14694:	cmp	r0, #1
   14698:	blt	146ac <print_all_distinct_dims@@Base+0x120>
   1469c:	mov	r0, r6
   146a0:	mov	r1, r5
   146a4:	bl	1267c <printf@plt>
   146a8:	ldr	r1, [r7]
   146ac:	add	r5, r5, #1
   146b0:	cmp	r5, r1
   146b4:	blt	14690 <print_all_distinct_dims@@Base+0x104>
   146b8:	movw	r0, #39154	; 0x98f2
   146bc:	movt	r0, #1
   146c0:	bl	1267c <printf@plt>
   146c4:	movw	r0, #39158	; 0x98f6
   146c8:	movt	r0, #1
   146cc:	bl	1267c <printf@plt>
   146d0:	ldr	r0, [r7]
   146d4:	ldr	r6, [r8]
   146d8:	cmp	r6, r0
   146dc:	bge	1470c <print_all_distinct_dims@@Base+0x180>
   146e0:	movw	r5, #39150	; 0x98ee
   146e4:	movt	r5, #1
   146e8:	ldr	r1, [r4, r6, lsl #2]
   146ec:	cmp	r1, #1
   146f0:	blt	14700 <print_all_distinct_dims@@Base+0x174>
   146f4:	mov	r0, r5
   146f8:	bl	1267c <printf@plt>
   146fc:	ldr	r0, [r7]
   14700:	add	r6, r6, #1
   14704:	cmp	r6, r0
   14708:	blt	146e8 <print_all_distinct_dims@@Base+0x15c>
   1470c:	ldr	r1, [r4, r0, lsl #2]
   14710:	movw	r0, #39154	; 0x98f2
   14714:	movt	r0, #1
   14718:	bl	1267c <printf@plt>
   1471c:	mov	r0, #10
   14720:	bl	12910 <putchar@plt>
   14724:	mov	r0, r4
   14728:	sub	sp, fp, #28
   1472c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14730:	b	126e8 <free@plt>
   14734:	sub	sp, fp, #28
   14738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1473c:	movw	r0, #39004	; 0x985c
   14740:	movw	r1, #39031	; 0x9877
   14744:	movw	r3, #39104	; 0x98c0
   14748:	mov	r2, #50	; 0x32
   1474c:	movt	r0, #1
   14750:	movt	r1, #1
   14754:	movt	r3, #1
   14758:	bl	12ab4 <__assert_fail@plt>

0001475c <dim_enter_array@@Base>:
   1475c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14760:	add	fp, sp, #28
   14764:	sub	sp, sp, #84	; 0x54
   14768:	movw	r4, #49640	; 0xc1e8
   1476c:	sub	r1, fp, #32
   14770:	movt	r4, #2
   14774:	ldr	r0, [r4, #136]	; 0x88
   14778:	ldr	r5, [r4, #3360]	; 0xd20
   1477c:	add	r0, r4, r0, lsl #2
   14780:	ldr	r0, [r0, #8]
   14784:	bl	12ac0 <coda_type_get_class@plt>
   14788:	cmp	r0, #0
   1478c:	beq	14794 <dim_enter_array@@Base+0x38>
   14790:	bl	17bf4 <handle_coda_error@@Base>
   14794:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14798:	sub	r0, r0, #1
   1479c:	cmp	r0, #5
   147a0:	bhi	14e78 <dim_enter_array@@Base+0x71c>
   147a4:	add	r1, r5, r5, lsl #2
   147a8:	add	r5, r4, r1, lsl #4
   147ac:	add	r1, pc, #0
   147b0:	ldr	pc, [r1, r0, lsl #2]
   147b4:	andeq	r4, r1, ip, asr #15
   147b8:	andeq	r4, r1, r8, ror lr
   147bc:	andeq	r4, r1, r8, ror lr
   147c0:	andeq	r4, r1, r8, asr #16
   147c4:	andeq	r4, r1, r8, ror r8
   147c8:	andeq	r4, r1, r4, lsl r8
   147cc:	ldr	r0, [r4, #136]	; 0x88
   147d0:	add	r1, sp, #44	; 0x2c
   147d4:	add	r2, sp, #48	; 0x30
   147d8:	add	r0, r4, r0, lsl #2
   147dc:	ldr	r0, [r0, #8]
   147e0:	bl	129f4 <coda_type_get_array_dim@plt>
   147e4:	cmp	r0, #0
   147e8:	beq	147f0 <dim_enter_array@@Base+0x94>
   147ec:	bl	17bf4 <handle_coda_error@@Base>
   147f0:	ldr	r8, [sp, #44]	; 0x2c
   147f4:	cmp	r8, #1
   147f8:	str	r8, [r5, #804]	; 0x324
   147fc:	blt	148cc <dim_enter_array@@Base+0x170>
   14800:	add	r0, r5, #808	; 0x328
   14804:	lsl	r2, r8, #2
   14808:	add	r1, sp, #48	; 0x30
   1480c:	bl	1273c <memcpy@plt>
   14810:	b	148cc <dim_enter_array@@Base+0x170>
   14814:	ldr	r0, [r4, #136]	; 0x88
   14818:	add	r1, sp, #48	; 0x30
   1481c:	add	r0, r4, r0, lsl #2
   14820:	ldr	r0, [r0, #8]
   14824:	bl	12928 <coda_type_get_special_type@plt>
   14828:	cmp	r0, #0
   1482c:	beq	14834 <dim_enter_array@@Base+0xd8>
   14830:	bl	17bf4 <handle_coda_error@@Base>
   14834:	ldr	r0, [sp, #48]	; 0x30
   14838:	cmp	r0, #3
   1483c:	bne	14eb0 <dim_enter_array@@Base+0x754>
   14840:	mov	r0, #2
   14844:	b	1486c <dim_enter_array@@Base+0x110>
   14848:	ldr	r0, [r4, #136]	; 0x88
   1484c:	add	r1, sp, #48	; 0x30
   14850:	add	r0, r4, r0, lsl #2
   14854:	ldr	r0, [r0, #8]
   14858:	bl	12964 <coda_type_get_string_length@plt>
   1485c:	cmp	r0, #0
   14860:	beq	14868 <dim_enter_array@@Base+0x10c>
   14864:	bl	17bf4 <handle_coda_error@@Base>
   14868:	ldr	r0, [sp, #48]	; 0x30
   1486c:	mov	r8, #1
   14870:	str	r8, [r5, #804]	; 0x324
   14874:	b	148c8 <dim_enter_array@@Base+0x16c>
   14878:	ldr	r0, [r4, #136]	; 0x88
   1487c:	add	r1, sp, #48	; 0x30
   14880:	add	r0, r4, r0, lsl #2
   14884:	ldr	r0, [r0, #8]
   14888:	bl	12754 <coda_type_get_bit_size@plt>
   1488c:	cmp	r0, #0
   14890:	beq	14898 <dim_enter_array@@Base+0x13c>
   14894:	bl	17bf4 <handle_coda_error@@Base>
   14898:	ldr	r0, [sp, #52]	; 0x34
   1489c:	mov	r8, #1
   148a0:	str	r8, [r5, #804]	; 0x324
   148a4:	cmp	r0, #0
   148a8:	bmi	148c4 <dim_enter_array@@Base+0x168>
   148ac:	ldr	r1, [sp, #48]	; 0x30
   148b0:	lsr	r2, r1, #3
   148b4:	tst	r1, #7
   148b8:	orr	r0, r2, r0, lsl #29
   148bc:	addne	r0, r0, #1
   148c0:	b	148c8 <dim_enter_array@@Base+0x16c>
   148c4:	mvn	r0, #0
   148c8:	str	r0, [r5, #808]	; 0x328
   148cc:	movw	r1, #49636	; 0xc1e4
   148d0:	add	r0, r5, #800	; 0x320
   148d4:	movt	r1, #2
   148d8:	ldr	r1, [r1]
   148dc:	cmp	r1, #0
   148e0:	beq	14954 <dim_enter_array@@Base+0x1f8>
   148e4:	movw	r9, #53424	; 0xd0b0
   148e8:	str	r5, [sp, #24]
   148ec:	movt	r9, #2
   148f0:	ldr	ip, [r9]
   148f4:	add	r3, r8, ip
   148f8:	str	ip, [r0]
   148fc:	cmp	r3, #9
   14900:	bge	14e90 <dim_enter_array@@Base+0x734>
   14904:	cmp	ip, #0
   14908:	str	r3, [r9]
   1490c:	str	ip, [sp, #32]
   14910:	ble	1496c <dim_enter_array@@Base+0x210>
   14914:	add	r0, r9, ip, lsl #3
   14918:	ldr	r2, [r0, #236]	; 0xec
   1491c:	ldr	r1, [r0, #232]	; 0xe8
   14920:	str	r2, [sp, #36]	; 0x24
   14924:	ldr	r2, [r0, #296]	; 0x128
   14928:	str	r1, [sp, #40]	; 0x28
   1492c:	ldr	r1, [r0, #300]	; 0x12c
   14930:	rsbs	r0, r2, #0
   14934:	mov	r0, r1
   14938:	str	r2, [sp, #12]
   1493c:	str	r1, [sp, #16]
   14940:	rscs	r0, r1, #0
   14944:	bge	14b1c <dim_enter_array@@Base+0x3c0>
   14948:	cmp	r8, #1
   1494c:	bge	14994 <dim_enter_array@@Base+0x238>
   14950:	b	14b68 <dim_enter_array@@Base+0x40c>
   14954:	mvn	r1, #0
   14958:	str	r1, [r0]
   1495c:	mov	r0, #0
   14960:	str	r0, [r5, #840]	; 0x348
   14964:	str	r0, [r5, #844]	; 0x34c
   14968:	b	14e70 <dim_enter_array@@Base+0x714>
   1496c:	mov	r0, #0
   14970:	cmp	r8, #0
   14974:	str	r0, [sp, #16]
   14978:	mov	r0, #1
   1497c:	str	r0, [sp, #12]
   14980:	mov	r0, #1
   14984:	str	r0, [sp, #40]	; 0x28
   14988:	mov	r0, #0
   1498c:	str	r0, [sp, #36]	; 0x24
   14990:	ble	14b4c <dim_enter_array@@Base+0x3f0>
   14994:	ldr	r0, [sp, #24]
   14998:	add	r7, r9, ip, lsl #2
   1499c:	mov	r2, #0
   149a0:	mov	r1, #0
   149a4:	add	r5, r0, #804	; 0x324
   149a8:	add	sl, r0, #808	; 0x328
   149ac:	mov	r0, #0
   149b0:	ldr	r3, [sl, r2, lsl #2]
   149b4:	add	r6, r7, r2, lsl #2
   149b8:	add	r2, r2, #1
   149bc:	str	r0, [r6, #72]	; 0x48
   149c0:	cmn	r3, #1
   149c4:	str	r3, [r6, #4]
   149c8:	movweq	r1, #1
   149cc:	cmp	r8, r2
   149d0:	bne	149b0 <dim_enter_array@@Base+0x254>
   149d4:	cmp	r1, #0
   149d8:	beq	14b68 <dim_enter_array@@Base+0x40c>
   149dc:	ldr	r0, [sp, #40]	; 0x28
   149e0:	mov	r6, #0
   149e4:	lsl	r8, r0, #2
   149e8:	ldr	r0, [sl, r6, lsl #2]
   149ec:	add	r4, r7, r6, lsl #2
   149f0:	cmn	r0, #1
   149f4:	beq	14a08 <dim_enter_array@@Base+0x2ac>
   149f8:	mov	r0, #0
   149fc:	str	r0, [r4, #140]	; 0x8c
   14a00:	str	r0, [r4, #108]	; 0x6c
   14a04:	b	14a74 <dim_enter_array@@Base+0x318>
   14a08:	mov	r0, r8
   14a0c:	str	ip, [r4, #140]	; 0x8c
   14a10:	bl	12820 <malloc@plt>
   14a14:	cmp	r0, #0
   14a18:	str	r0, [r4, #108]	; 0x6c
   14a1c:	bne	14a48 <dim_enter_array@@Base+0x2ec>
   14a20:	movw	r1, #38433	; 0x9621
   14a24:	movw	r3, #39031	; 0x9877
   14a28:	mov	r0, #456	; 0x1c8
   14a2c:	mov	r2, r8
   14a30:	movt	r1, #1
   14a34:	movt	r3, #1
   14a38:	str	r0, [sp]
   14a3c:	mvn	r0, #0
   14a40:	bl	126a0 <coda_set_error@plt>
   14a44:	bl	17bf4 <handle_coda_error@@Base>
   14a48:	ldr	r0, [sp, #40]	; 0x28
   14a4c:	ldr	ip, [sp, #32]
   14a50:	subs	r0, r0, #1
   14a54:	ldr	r0, [sp, #36]	; 0x24
   14a58:	sbcs	r0, r0, #0
   14a5c:	blt	14a74 <dim_enter_array@@Base+0x318>
   14a60:	ldr	r0, [r4, #108]	; 0x6c
   14a64:	mov	r1, #255	; 0xff
   14a68:	mov	r2, r8
   14a6c:	bl	12904 <memset@plt>
   14a70:	ldr	ip, [sp, #32]
   14a74:	ldr	r0, [r5]
   14a78:	add	r6, r6, #1
   14a7c:	cmp	r6, r0
   14a80:	blt	149e8 <dim_enter_array@@Base+0x28c>
   14a84:	ldr	r0, [sp, #24]
   14a88:	mov	r1, #0
   14a8c:	mov	r2, #0
   14a90:	str	r1, [r0, #844]	; 0x34c
   14a94:	mov	r0, #0
   14a98:	mov	r1, #0
   14a9c:	bl	14ec4 <dim_enter_array@@Base+0x768>
   14aa0:	ldr	r8, [r5]
   14aa4:	cmp	r8, #1
   14aa8:	blt	14b64 <dim_enter_array@@Base+0x408>
   14aac:	ldr	ip, [sp, #32]
   14ab0:	str	r5, [sp, #28]
   14ab4:	mov	r6, #0
   14ab8:	mov	r5, #0
   14abc:	ldr	r0, [sl, r6, lsl #2]
   14ac0:	cmn	r0, #1
   14ac4:	bne	14b0c <dim_enter_array@@Base+0x3b0>
   14ac8:	add	r4, r7, r6, lsl #2
   14acc:	ldr	r0, [r4, #4]
   14ad0:	ldr	r1, [r4, #36]	; 0x24
   14ad4:	cmp	r0, r1
   14ad8:	bne	14b04 <dim_enter_array@@Base+0x3a8>
   14adc:	mov	r8, #0
   14ae0:	str	r8, [r4, #72]	; 0x48
   14ae4:	ldr	r0, [r4, #108]	; 0x6c
   14ae8:	bl	126e8 <free@plt>
   14aec:	ldr	r0, [sp, #28]
   14af0:	str	r8, [r4, #140]	; 0x8c
   14af4:	str	r8, [r4, #108]	; 0x6c
   14af8:	ldr	ip, [sp, #32]
   14afc:	ldr	r8, [r0]
   14b00:	b	14b0c <dim_enter_array@@Base+0x3b0>
   14b04:	mov	r5, #1
   14b08:	str	r5, [r4, #72]	; 0x48
   14b0c:	add	r6, r6, #1
   14b10:	cmp	r6, r8
   14b14:	blt	14abc <dim_enter_array@@Base+0x360>
   14b18:	b	14b6c <dim_enter_array@@Base+0x410>
   14b1c:	cmp	r8, #1
   14b20:	blt	14b68 <dim_enter_array@@Base+0x40c>
   14b24:	add	r0, r9, ip, lsl #2
   14b28:	mov	r5, #0
   14b2c:	mov	r1, #0
   14b30:	add	r2, r0, r1, lsl #2
   14b34:	add	r1, r1, #1
   14b38:	cmp	r8, r1
   14b3c:	str	r5, [r2, #72]	; 0x48
   14b40:	str	r5, [r2, #4]
   14b44:	bne	14b30 <dim_enter_array@@Base+0x3d4>
   14b48:	b	14b6c <dim_enter_array@@Base+0x410>
   14b4c:	mov	r0, #1
   14b50:	mov	r5, #0
   14b54:	str	r0, [sp, #40]	; 0x28
   14b58:	mov	r0, #0
   14b5c:	str	r0, [sp, #36]	; 0x24
   14b60:	b	14b70 <dim_enter_array@@Base+0x414>
   14b64:	ldr	ip, [sp, #32]
   14b68:	mov	r5, #0
   14b6c:	ldr	r3, [r9]
   14b70:	mvn	r0, #0
   14b74:	cmp	r3, #1
   14b78:	str	r0, [r9, #104]	; 0x68
   14b7c:	mov	r0, #0
   14b80:	str	r0, [r9, #68]	; 0x44
   14b84:	blt	14bac <dim_enter_array@@Base+0x450>
   14b88:	mov	r1, #1
   14b8c:	add	r2, r9, r0, lsl #2
   14b90:	ldr	r2, [r2, #72]	; 0x48
   14b94:	cmp	r2, #0
   14b98:	strne	r0, [r9, #104]	; 0x68
   14b9c:	add	r0, r0, #1
   14ba0:	strne	r1, [r9, #68]	; 0x44
   14ba4:	cmp	r0, r3
   14ba8:	blt	14b8c <dim_enter_array@@Base+0x430>
   14bac:	ldr	r1, [sp, #24]
   14bb0:	mov	r0, #1
   14bb4:	cmp	r8, #1
   14bb8:	str	r3, [sp, #20]
   14bbc:	str	r0, [r1, #840]!	; 0x348
   14bc0:	str	r1, [sp, #24]
   14bc4:	blt	14c58 <dim_enter_array@@Base+0x4fc>
   14bc8:	str	r5, [sp, #8]
   14bcc:	mov	r5, ip
   14bd0:	ldr	r5, [sp, #40]	; 0x28
   14bd4:	add	r2, r9, ip, lsl #3
   14bd8:	add	r1, r9, ip, lsl #2
   14bdc:	mov	r3, #0
   14be0:	add	r2, r2, #240	; 0xf0
   14be4:	add	lr, r1, #4
   14be8:	str	r2, [sp, #28]
   14bec:	ldr	r4, [lr, r3, lsl #2]
   14bf0:	cmp	r3, #0
   14bf4:	mul	r0, r0, r4
   14bf8:	beq	14c18 <dim_enter_array@@Base+0x4bc>
   14bfc:	ldrd	r6, [r2, #-8]
   14c00:	asr	ip, r4, #31
   14c04:	umull	r1, sl, r6, r4
   14c08:	mla	r6, r6, ip, sl
   14c0c:	mla	r7, r7, r4, r6
   14c10:	stm	r2, {r1, r7}
   14c14:	b	14c38 <dim_enter_array@@Base+0x4dc>
   14c18:	ldr	r4, [lr]
   14c1c:	umull	r6, r7, r5, r4
   14c20:	asr	r1, r4, #31
   14c24:	mla	r1, r5, r1, r7
   14c28:	ldr	r7, [sp, #36]	; 0x24
   14c2c:	mla	r7, r7, r4, r1
   14c30:	ldr	r1, [sp, #28]
   14c34:	strd	r6, [r1]
   14c38:	add	r3, r3, #1
   14c3c:	add	r2, r2, #8
   14c40:	cmp	r3, r8
   14c44:	blt	14bec <dim_enter_array@@Base+0x490>
   14c48:	ldr	r1, [sp, #24]
   14c4c:	ldr	ip, [sp, #32]
   14c50:	ldr	r5, [sp, #8]
   14c54:	str	r0, [r1]
   14c58:	cmp	r5, #0
   14c5c:	beq	14d34 <dim_enter_array@@Base+0x5d8>
   14c60:	cmp	r8, #1
   14c64:	blt	14c80 <dim_enter_array@@Base+0x524>
   14c68:	ldr	r0, [sp, #32]
   14c6c:	lsl	r2, r8, #3
   14c70:	mov	r1, #0
   14c74:	add	r0, r9, r0, lsl #3
   14c78:	add	r0, r0, #304	; 0x130
   14c7c:	bl	12904 <memset@plt>
   14c80:	ldr	r0, [sp, #40]	; 0x28
   14c84:	subs	r0, r0, #1
   14c88:	ldr	r0, [sp, #36]	; 0x24
   14c8c:	sbcs	r0, r0, #0
   14c90:	blt	14da8 <dim_enter_array@@Base+0x64c>
   14c94:	ldr	r1, [sp, #32]
   14c98:	movw	r0, #65232	; 0xfed0
   14c9c:	mov	r2, #0
   14ca0:	movt	r0, #65535	; 0xffff
   14ca4:	sub	ip, r0, r1, lsl #3
   14ca8:	lsl	lr, r1, #2
   14cac:	cmp	r8, #1
   14cb0:	blt	14d18 <dim_enter_array@@Base+0x5bc>
   14cb4:	mov	r3, #1
   14cb8:	mov	r0, ip
   14cbc:	mov	r1, lr
   14cc0:	mov	r4, r8
   14cc4:	add	r6, r9, r1
   14cc8:	ldr	r7, [r6, #72]	; 0x48
   14ccc:	cmp	r7, #0
   14cd0:	beq	14ce0 <dim_enter_array@@Base+0x584>
   14cd4:	ldr	r6, [r6, #108]	; 0x6c
   14cd8:	add	r6, r6, r2, lsl #2
   14cdc:	b	14ce4 <dim_enter_array@@Base+0x588>
   14ce0:	add	r6, r6, #4
   14ce4:	ldr	r6, [r6]
   14ce8:	mov	r7, r9
   14cec:	add	r1, r1, #4
   14cf0:	ldr	r5, [r7, -r0]!
   14cf4:	sub	r0, r0, #8
   14cf8:	mul	r3, r6, r3
   14cfc:	adds	r5, r5, r3
   14d00:	str	r5, [r7]
   14d04:	ldr	r5, [r7, #4]
   14d08:	adc	r5, r5, r3, asr #31
   14d0c:	subs	r4, r4, #1
   14d10:	str	r5, [r7, #4]
   14d14:	bne	14cc4 <dim_enter_array@@Base+0x568>
   14d18:	ldr	r0, [sp, #40]	; 0x28
   14d1c:	add	r2, r2, #1
   14d20:	subs	r0, r2, r0
   14d24:	ldr	r0, [sp, #36]	; 0x24
   14d28:	rscs	r0, r0, #0
   14d2c:	blt	14cac <dim_enter_array@@Base+0x550>
   14d30:	b	14da8 <dim_enter_array@@Base+0x64c>
   14d34:	add	r0, r9, ip, lsl #2
   14d38:	ldr	r5, [sp, #12]
   14d3c:	add	r2, r9, ip, lsl #3
   14d40:	cmp	r8, #2
   14d44:	ldr	r1, [r0, #4]
   14d48:	umull	r3, r7, r5, r1
   14d4c:	asr	r6, r1, #31
   14d50:	mla	r7, r5, r6, r7
   14d54:	ldr	r6, [sp, #16]
   14d58:	str	r3, [r2, #304]	; 0x130
   14d5c:	mla	r1, r6, r1, r7
   14d60:	str	r1, [r2, #308]	; 0x134
   14d64:	blt	14da8 <dim_enter_array@@Base+0x64c>
   14d68:	ldr	r6, [r2, #304]	; 0x130
   14d6c:	ldr	r3, [r2, #308]	; 0x134
   14d70:	add	r1, r2, #312	; 0x138
   14d74:	add	r0, r0, #8
   14d78:	sub	r2, r8, #1
   14d7c:	ldr	r7, [r0], #4
   14d80:	subs	r2, r2, #1
   14d84:	umull	r4, ip, r6, r7
   14d88:	asr	r5, r7, #31
   14d8c:	mla	r6, r6, r5, ip
   14d90:	mla	r3, r3, r7, r6
   14d94:	str	r4, [r1]
   14d98:	mov	r6, r4
   14d9c:	str	r3, [r1, #4]
   14da0:	add	r1, r1, #8
   14da4:	bne	14d7c <dim_enter_array@@Base+0x620>
   14da8:	ldr	r5, [sp, #32]
   14dac:	add	r0, r5, r8
   14db0:	add	r1, r9, r0, lsl #3
   14db4:	ldr	r0, [r1, #296]	; 0x128
   14db8:	ldr	r2, [r1, #300]	; 0x12c
   14dbc:	subs	r0, r0, #1
   14dc0:	sbcs	r0, r2, #0
   14dc4:	blt	14e70 <dim_enter_array@@Base+0x714>
   14dc8:	ldr	r0, [sp, #20]
   14dcc:	sub	r0, r0, #1
   14dd0:	add	r2, r9, r0, lsl #3
   14dd4:	add	r0, r9, r0, lsl #2
   14dd8:	ldr	r0, [r0, #4]
   14ddc:	asr	r3, r0, #31
   14de0:	str	r0, [r2, #176]	; 0xb0
   14de4:	subs	r0, r8, #2
   14de8:	str	r3, [r2, #180]	; 0xb4
   14dec:	bmi	14e34 <dim_enter_array@@Base+0x6d8>
   14df0:	add	r0, r9, r5, lsl #2
   14df4:	add	r1, r1, #160	; 0xa0
   14df8:	sub	ip, r0, #4
   14dfc:	ldr	r2, [ip, r8, lsl #2]
   14e00:	ldr	r4, [r1, #8]
   14e04:	ldr	r0, [r1, #12]
   14e08:	umull	r6, r3, r4, r2
   14e0c:	asr	r7, r2, #31
   14e10:	mla	r3, r4, r7, r3
   14e14:	mla	r7, r0, r2, r3
   14e18:	sub	r3, r8, #2
   14e1c:	sub	r2, r8, #1
   14e20:	cmp	r3, #0
   14e24:	mov	r8, r2
   14e28:	strd	r6, [r1]
   14e2c:	sub	r1, r1, #8
   14e30:	bgt	14dfc <dim_enter_array@@Base+0x6a0>
   14e34:	cmp	r5, #1
   14e38:	blt	14e70 <dim_enter_array@@Base+0x714>
   14e3c:	add	r1, r9, r5, lsl #3
   14e40:	add	r0, r1, #168	; 0xa8
   14e44:	add	r1, r1, #176	; 0xb0
   14e48:	ldrd	r2, [r1]
   14e4c:	ldm	r0, {r4, r9}
   14e50:	sub	r5, r5, #1
   14e54:	cmp	r5, #0
   14e58:	umull	r6, r7, r4, r2
   14e5c:	mla	r3, r4, r3, r7
   14e60:	mla	r7, r9, r2, r3
   14e64:	strd	r6, [r0]
   14e68:	sub	r0, r0, #8
   14e6c:	bgt	14e48 <dim_enter_array@@Base+0x6ec>
   14e70:	sub	sp, fp, #28
   14e74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e78:	movw	r0, #38978	; 0x9842
   14e7c:	movw	r1, #39031	; 0x9877
   14e80:	movw	r3, #39166	; 0x98fe
   14e84:	movw	r2, #386	; 0x182
   14e88:	movt	r0, #1
   14e8c:	b	14ea4 <dim_enter_array@@Base+0x748>
   14e90:	movw	r0, #39189	; 0x9915
   14e94:	movw	r1, #39031	; 0x9877
   14e98:	movw	r3, #39166	; 0x98fe
   14e9c:	movw	r2, #402	; 0x192
   14ea0:	movt	r0, #1
   14ea4:	movt	r1, #1
   14ea8:	movt	r3, #1
   14eac:	bl	12ab4 <__assert_fail@plt>
   14eb0:	movw	r0, #38978	; 0x9842
   14eb4:	movw	r1, #39031	; 0x9877
   14eb8:	movw	r3, #39166	; 0x98fe
   14ebc:	movw	r2, #349	; 0x15d
   14ec0:	b	14e88 <dim_enter_array@@Base+0x72c>
   14ec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ec8:	add	fp, sp, #28
   14ecc:	sub	sp, sp, #44	; 0x2c
   14ed0:	movw	r7, #49640	; 0xc1e8
   14ed4:	mov	r8, r1
   14ed8:	mov	r9, r0
   14edc:	sub	r1, fp, #32
   14ee0:	str	r2, [sp]
   14ee4:	movt	r7, #2
   14ee8:	add	r5, r7, #144	; 0x90
   14eec:	mov	r0, r5
   14ef0:	bl	12778 <coda_cursor_get_type_class@plt>
   14ef4:	cmp	r0, #0
   14ef8:	beq	14f00 <dim_enter_array@@Base+0x7a4>
   14efc:	bl	17bf4 <handle_coda_error@@Base>
   14f00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f04:	sub	r1, r0, #4
   14f08:	cmp	r1, #2
   14f0c:	bcc	14fec <dim_enter_array@@Base+0x890>
   14f10:	cmp	r0, #0
   14f14:	beq	1502c <dim_enter_array@@Base+0x8d0>
   14f18:	cmp	r0, #1
   14f1c:	bne	152a0 <dim_enter_array@@Base+0xb44>
   14f20:	add	r0, r8, r8, lsl #2
   14f24:	add	r4, r7, r0, lsl #4
   14f28:	ldr	r0, [r7, #3360]	; 0xd20
   14f2c:	ldr	r6, [r4, #800]	; 0x320
   14f30:	cmp	r0, r8
   14f34:	bne	15114 <dim_enter_array@@Base+0x9b8>
   14f38:	add	r8, sp, #8
   14f3c:	add	r1, sp, #4
   14f40:	mov	r0, r5
   14f44:	mov	r2, r8
   14f48:	bl	1297c <coda_cursor_get_array_dim@plt>
   14f4c:	cmp	r0, #0
   14f50:	beq	14f58 <dim_enter_array@@Base+0x7fc>
   14f54:	bl	17bf4 <handle_coda_error@@Base>
   14f58:	mov	r0, r4
   14f5c:	ldr	r1, [sp, #4]
   14f60:	ldr	r2, [r0, #804]!	; 0x324
   14f64:	cmp	r1, r2
   14f68:	bne	152d0 <dim_enter_array@@Base+0xb74>
   14f6c:	cmp	r1, #1
   14f70:	blt	15298 <dim_enter_array@@Base+0xb3c>
   14f74:	movw	r1, #53424	; 0xd0b0
   14f78:	add	r2, r4, #808	; 0x328
   14f7c:	add	r3, r4, #844	; 0x34c
   14f80:	mov	r7, #0
   14f84:	movt	r1, #2
   14f88:	add	ip, r1, r6, lsl #2
   14f8c:	ldr	r6, [r2, r7, lsl #2]
   14f90:	cmn	r6, #1
   14f94:	bne	14fd8 <dim_enter_array@@Base+0x87c>
   14f98:	add	r4, ip, r7, lsl #2
   14f9c:	ldr	r6, [r8, r7, lsl #2]
   14fa0:	ldr	r1, [r3]
   14fa4:	ldr	r5, [r4, #108]	; 0x6c
   14fa8:	str	r6, [r5, r1, lsl #2]
   14fac:	ldr	r5, [r4, #4]
   14fb0:	cmn	r5, #1
   14fb4:	beq	14fd0 <dim_enter_array@@Base+0x874>
   14fb8:	cmp	r5, r6
   14fbc:	strlt	r6, [r4, #4]
   14fc0:	ldr	r1, [r4, #36]	; 0x24
   14fc4:	cmp	r1, r6
   14fc8:	strgt	r6, [r4, #36]	; 0x24
   14fcc:	b	14fd8 <dim_enter_array@@Base+0x87c>
   14fd0:	str	r6, [r4, #4]
   14fd4:	str	r6, [r4, #36]	; 0x24
   14fd8:	ldr	r1, [r0]
   14fdc:	add	r7, r7, #1
   14fe0:	cmp	r7, r1
   14fe4:	blt	14f8c <dim_enter_array@@Base+0x830>
   14fe8:	b	15298 <dim_enter_array@@Base+0xb3c>
   14fec:	ldr	r1, [r7, #3360]	; 0xd20
   14ff0:	cmp	r1, r8
   14ff4:	bne	152b8 <dim_enter_array@@Base+0xb5c>
   14ff8:	cmp	r0, #4
   14ffc:	bne	15090 <dim_enter_array@@Base+0x934>
   15000:	add	r1, sp, #4
   15004:	mov	r0, r5
   15008:	bl	12880 <coda_cursor_get_string_length@plt>
   1500c:	cmp	r0, #0
   15010:	beq	15018 <dim_enter_array@@Base+0x8bc>
   15014:	bl	17bf4 <handle_coda_error@@Base>
   15018:	ldr	r0, [sp, #4]
   1501c:	str	r0, [sp, #8]
   15020:	asr	r0, r0, #31
   15024:	str	r0, [sp, #12]
   15028:	b	150a8 <dim_enter_array@@Base+0x94c>
   1502c:	ldr	r0, [sp]
   15030:	add	r2, sp, #8
   15034:	add	r4, r7, r0, lsl #2
   15038:	mov	r0, r5
   1503c:	ldr	r1, [r4, #3492]!	; 0xda4
   15040:	bl	12688 <coda_cursor_get_record_field_available_status@plt>
   15044:	cmp	r0, #0
   15048:	beq	15050 <dim_enter_array@@Base+0x8f4>
   1504c:	bl	17bf4 <handle_coda_error@@Base>
   15050:	ldr	r0, [sp, #8]
   15054:	cmp	r0, #0
   15058:	beq	151a0 <dim_enter_array@@Base+0xa44>
   1505c:	ldr	r1, [r4]
   15060:	mov	r0, r5
   15064:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   15068:	cmp	r0, #0
   1506c:	beq	15074 <dim_enter_array@@Base+0x918>
   15070:	bl	17bf4 <handle_coda_error@@Base>
   15074:	ldr	r1, [sp]
   15078:	add	r0, r9, #1
   1507c:	add	r2, r1, #1
   15080:	mov	r1, r8
   15084:	bl	14ec4 <dim_enter_array@@Base+0x768>
   15088:	mov	r0, r5
   1508c:	b	15294 <dim_enter_array@@Base+0xb38>
   15090:	add	r1, sp, #8
   15094:	mov	r0, r5
   15098:	bl	1261c <coda_cursor_get_byte_size@plt>
   1509c:	cmp	r0, #0
   150a0:	beq	150a8 <dim_enter_array@@Base+0x94c>
   150a4:	bl	17bf4 <handle_coda_error@@Base>
   150a8:	add	r0, r8, r8, lsl #2
   150ac:	ldr	r2, [sp, #12]
   150b0:	add	r0, r7, r0, lsl #4
   150b4:	ldr	r1, [r0, #800]	; 0x320
   150b8:	ldr	r3, [r0, #844]	; 0x34c
   150bc:	movw	r0, #53424	; 0xd0b0
   150c0:	movt	r0, #2
   150c4:	add	r0, r0, r1, lsl #2
   150c8:	ldr	r1, [sp, #8]
   150cc:	ldr	r7, [r0, #108]	; 0x6c
   150d0:	str	r1, [r7, r3, lsl #2]
   150d4:	mov	r3, r0
   150d8:	ldr	r7, [r3, #4]!
   150dc:	cmn	r7, #1
   150e0:	beq	15104 <dim_enter_array@@Base+0x9a8>
   150e4:	subs	r6, r7, r1
   150e8:	rscs	r7, r2, r7, asr #31
   150ec:	strlt	r1, [r3]
   150f0:	ldr	r3, [r0, #36]!	; 0x24
   150f4:	subs	r7, r1, r3
   150f8:	sbcs	r2, r2, r3, asr #31
   150fc:	strlt	r1, [r0]
   15100:	b	15298 <dim_enter_array@@Base+0xb3c>
   15104:	add	r0, r0, #36	; 0x24
   15108:	str	r1, [r3]
   1510c:	str	r1, [r0]
   15110:	b	15298 <dim_enter_array@@Base+0xb3c>
   15114:	cmp	r8, #0
   15118:	moveq	r0, #0
   1511c:	streq	r0, [r7, #844]	; 0x34c
   15120:	ldr	r1, [r4, #840]	; 0x348
   15124:	ldr	r0, [r4, #844]	; 0x34c
   15128:	mul	r1, r1, r0
   1512c:	str	r1, [r4, #924]!	; 0x39c
   15130:	ldr	r1, [r4, #-120]	; 0xffffff88
   15134:	cmp	r1, #1
   15138:	blt	1521c <dim_enter_array@@Base+0xac0>
   1513c:	movw	r2, #53424	; 0xd0b0
   15140:	add	r1, r1, r6
   15144:	add	r3, r6, #27
   15148:	movt	r2, #2
   1514c:	add	r2, r2, r6, lsl #2
   15150:	mov	r6, #1
   15154:	add	r2, r2, #72	; 0x48
   15158:	ldr	r7, [r2]
   1515c:	cmp	r7, #0
   15160:	beq	15170 <dim_enter_array@@Base+0xa14>
   15164:	ldr	r7, [r2, #36]	; 0x24
   15168:	add	r7, r7, r0, lsl #2
   1516c:	b	15174 <dim_enter_array@@Base+0xa18>
   15170:	sub	r7, r2, #68	; 0x44
   15174:	ldr	r7, [r7]
   15178:	add	r2, r2, #4
   1517c:	mul	r6, r7, r6
   15180:	add	r7, r3, #1
   15184:	sub	r3, r3, #26
   15188:	cmp	r3, r1
   1518c:	mov	r3, r7
   15190:	blt	15158 <dim_enter_array@@Base+0x9fc>
   15194:	cmp	r6, #1
   15198:	bge	15220 <dim_enter_array@@Base+0xac4>
   1519c:	b	15298 <dim_enter_array@@Base+0xb3c>
   151a0:	ldr	r0, [r7, #3360]	; 0xd20
   151a4:	add	r0, r0, r0, lsl #2
   151a8:	add	r3, r7, r0, lsl #4
   151ac:	mov	r0, r3
   151b0:	ldr	r5, [r0, #804]!	; 0x324
   151b4:	cmp	r5, #1
   151b8:	blt	15298 <dim_enter_array@@Base+0xb3c>
   151bc:	ldr	r1, [r0, #-4]
   151c0:	movw	r2, #53424	; 0xd0b0
   151c4:	mov	r7, #0
   151c8:	mov	r6, #0
   151cc:	movt	r2, #2
   151d0:	add	ip, r2, r1, lsl #2
   151d4:	add	r2, r3, #808	; 0x328
   151d8:	add	r3, r3, #844	; 0x34c
   151dc:	ldr	r4, [r2, r6, lsl #2]
   151e0:	cmn	r4, #1
   151e4:	bne	1520c <dim_enter_array@@Base+0xab0>
   151e8:	add	r5, ip, r6, lsl #2
   151ec:	ldr	r1, [r3]
   151f0:	ldr	r4, [r5, #108]	; 0x6c
   151f4:	str	r7, [r4, r1, lsl #2]
   151f8:	ldr	r1, [r5, #4]
   151fc:	cmn	r1, #1
   15200:	streq	r7, [r5, #4]
   15204:	str	r7, [r5, #36]	; 0x24
   15208:	ldr	r5, [r0]
   1520c:	add	r6, r6, #1
   15210:	cmp	r6, r5
   15214:	blt	151dc <dim_enter_array@@Base+0xa80>
   15218:	b	15298 <dim_enter_array@@Base+0xb3c>
   1521c:	mov	r6, #1
   15220:	mov	r0, r5
   15224:	mov	r7, r9
   15228:	mov	sl, r5
   1522c:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   15230:	cmp	r0, #0
   15234:	beq	1523c <dim_enter_array@@Base+0xae0>
   15238:	bl	17bf4 <handle_coda_error@@Base>
   1523c:	add	r5, r8, #1
   15240:	sub	r9, r6, #1
   15244:	add	r7, r7, #1
   15248:	mov	r8, #0
   1524c:	ldr	r2, [sp]
   15250:	mov	r0, r7
   15254:	mov	r1, r5
   15258:	bl	14ec4 <dim_enter_array@@Base+0x768>
   1525c:	cmp	r8, r9
   15260:	bge	15284 <dim_enter_array@@Base+0xb28>
   15264:	mov	r0, sl
   15268:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   1526c:	cmp	r0, #0
   15270:	beq	15278 <dim_enter_array@@Base+0xb1c>
   15274:	bl	17bf4 <handle_coda_error@@Base>
   15278:	ldr	r0, [r4]
   1527c:	add	r0, r0, #1
   15280:	str	r0, [r4]
   15284:	add	r8, r8, #1
   15288:	cmp	r6, r8
   1528c:	bne	1524c <dim_enter_array@@Base+0xaf0>
   15290:	mov	r0, sl
   15294:	bl	12850 <coda_cursor_goto_parent@plt>
   15298:	sub	sp, fp, #28
   1529c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152a0:	movw	r0, #38978	; 0x9842
   152a4:	movw	r1, #39031	; 0x9877
   152a8:	movw	r3, #39332	; 0x99a4
   152ac:	movw	r2, #294	; 0x126
   152b0:	movt	r0, #1
   152b4:	b	152e4 <dim_enter_array@@Base+0xb88>
   152b8:	movw	r0, #39375	; 0x99cf
   152bc:	movw	r1, #39031	; 0x9877
   152c0:	movw	r3, #39332	; 0x99a4
   152c4:	mov	r2, #252	; 0xfc
   152c8:	movt	r0, #1
   152cc:	b	152e4 <dim_enter_array@@Base+0xb88>
   152d0:	movw	r0, #39299	; 0x9983
   152d4:	movw	r1, #39031	; 0x9877
   152d8:	movw	r3, #39332	; 0x99a4
   152dc:	mov	r2, #125	; 0x7d
   152e0:	movt	r0, #1
   152e4:	movt	r1, #1
   152e8:	movt	r3, #1
   152ec:	bl	12ab4 <__assert_fail@plt>

000152f0 <dim_leave_array@@Base>:
   152f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   152f4:	add	fp, sp, #24
   152f8:	movw	r0, #49640	; 0xc1e8
   152fc:	movt	r0, #2
   15300:	ldr	r1, [r0, #3360]	; 0xd20
   15304:	cmn	r1, #1
   15308:	ble	153f8 <dim_leave_array@@Base+0x108>
   1530c:	add	r1, r1, r1, lsl #2
   15310:	movw	r8, #53424	; 0xd0b0
   15314:	movt	r8, #2
   15318:	add	r6, r0, r1, lsl #4
   1531c:	ldr	r1, [r8]
   15320:	ldr	r0, [r6, #804]!	; 0x324
   15324:	ldr	r4, [r6, #-4]
   15328:	sub	r1, r1, r0
   1532c:	cmp	r0, #1
   15330:	str	r1, [r8]
   15334:	blt	1536c <dim_leave_array@@Base+0x7c>
   15338:	add	r7, r8, r4, lsl #2
   1533c:	mov	r5, #0
   15340:	add	r1, r7, r5, lsl #2
   15344:	ldr	r2, [r1, #72]	; 0x48
   15348:	cmp	r2, #0
   1534c:	beq	1535c <dim_leave_array@@Base+0x6c>
   15350:	ldr	r0, [r1, #108]	; 0x6c
   15354:	bl	126e8 <free@plt>
   15358:	ldr	r0, [r6]
   1535c:	add	r5, r5, #1
   15360:	cmp	r5, r0
   15364:	blt	15340 <dim_leave_array@@Base+0x50>
   15368:	ldr	r1, [r8]
   1536c:	mvn	r2, #0
   15370:	cmp	r1, #1
   15374:	str	r2, [r8, #104]	; 0x68
   15378:	mov	r2, #0
   1537c:	str	r2, [r8, #68]	; 0x44
   15380:	blt	153a8 <dim_leave_array@@Base+0xb8>
   15384:	mov	r3, #1
   15388:	add	r7, r8, r2, lsl #2
   1538c:	ldr	r7, [r7, #72]	; 0x48
   15390:	cmp	r7, #0
   15394:	strne	r2, [r8, #104]	; 0x68
   15398:	add	r2, r2, #1
   1539c:	strne	r3, [r8, #68]	; 0x44
   153a0:	cmp	r2, r1
   153a4:	blt	15388 <dim_leave_array@@Base+0x98>
   153a8:	add	r0, r4, r0
   153ac:	add	r0, r8, r0, lsl #3
   153b0:	ldr	r1, [r0, #296]	; 0x128
   153b4:	ldr	r0, [r0, #300]	; 0x12c
   153b8:	subs	r1, r1, #1
   153bc:	sbcs	r0, r0, #0
   153c0:	cmpge	r4, #1
   153c4:	blt	153f4 <dim_leave_array@@Base+0x104>
   153c8:	add	r0, r8, r4, lsl #3
   153cc:	add	r5, r0, #168	; 0xa8
   153d0:	add	r6, r0, #176	; 0xb0
   153d4:	ldrd	r0, [r5]
   153d8:	ldrd	r2, [r6]
   153dc:	bl	193a0 <main@@Base+0x1768>
   153e0:	sub	r4, r4, #1
   153e4:	strd	r0, [r5]
   153e8:	sub	r5, r5, #8
   153ec:	cmp	r4, #0
   153f0:	bgt	153d4 <dim_leave_array@@Base+0xe4>
   153f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   153f8:	movw	r0, #39246	; 0x994e
   153fc:	movw	r1, #39031	; 0x9877
   15400:	movw	r3, #39276	; 0x996c
   15404:	movw	r2, #579	; 0x243
   15408:	movt	r0, #1
   1540c:	movt	r1, #1
   15410:	movt	r3, #1
   15414:	bl	12ab4 <__assert_fail@plt>

00015418 <dim_record_field_available@@Base>:
   15418:	mov	r0, #0
   1541c:	mov	r1, #0
   15420:	mov	r2, #0
   15424:	b	15428 <dim_record_field_available@@Base+0x10>
   15428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1542c:	add	fp, sp, #28
   15430:	sub	sp, sp, #12
   15434:	movw	r5, #49640	; 0xc1e8
   15438:	mov	r6, r1
   1543c:	mov	r7, r0
   15440:	add	r1, sp, #8
   15444:	mov	r9, r2
   15448:	movt	r5, #2
   1544c:	add	r0, r5, #144	; 0x90
   15450:	str	r0, [sp]
   15454:	bl	12778 <coda_cursor_get_type_class@plt>
   15458:	cmp	r0, #0
   1545c:	beq	15464 <dim_record_field_available@@Base+0x4c>
   15460:	bl	17bf4 <handle_coda_error@@Base>
   15464:	ldr	r0, [sp, #8]
   15468:	cmp	r0, #0
   1546c:	beq	1551c <dim_record_field_available@@Base+0x104>
   15470:	cmp	r0, #1
   15474:	bne	15634 <dim_record_field_available@@Base+0x21c>
   15478:	ldr	r0, [r5, #3360]	; 0xd20
   1547c:	cmp	r0, r6
   15480:	ble	1564c <dim_record_field_available@@Base+0x234>
   15484:	add	r0, r6, r6, lsl #2
   15488:	cmp	r6, #0
   1548c:	add	sl, r5, r0, lsl #4
   15490:	moveq	r0, #0
   15494:	ldr	r3, [sl, #800]	; 0x320
   15498:	streq	r0, [r5, #844]	; 0x34c
   1549c:	ldr	r1, [sl, #840]	; 0x348
   154a0:	ldr	r0, [sl, #844]	; 0x34c
   154a4:	mul	r1, r1, r0
   154a8:	str	r1, [sl, #924]!	; 0x39c
   154ac:	ldr	r1, [sl, #-120]	; 0xffffff88
   154b0:	cmp	r1, #1
   154b4:	blt	1559c <dim_record_field_available@@Base+0x184>
   154b8:	movw	r2, #53424	; 0xd0b0
   154bc:	add	r1, r1, r3
   154c0:	mov	r5, #1
   154c4:	movt	r2, #2
   154c8:	add	r2, r2, r3, lsl #2
   154cc:	add	r3, r3, #27
   154d0:	add	r2, r2, #72	; 0x48
   154d4:	ldr	r4, [r2]
   154d8:	cmp	r4, #0
   154dc:	beq	154ec <dim_record_field_available@@Base+0xd4>
   154e0:	ldr	r4, [r2, #36]	; 0x24
   154e4:	add	r4, r4, r0, lsl #2
   154e8:	b	154f0 <dim_record_field_available@@Base+0xd8>
   154ec:	sub	r4, r2, #68	; 0x44
   154f0:	ldr	r4, [r4]
   154f4:	add	r2, r2, #4
   154f8:	mul	r5, r4, r5
   154fc:	add	r4, r3, #1
   15500:	sub	r3, r3, #26
   15504:	cmp	r3, r1
   15508:	mov	r3, r4
   1550c:	blt	154d4 <dim_record_field_available@@Base+0xbc>
   15510:	cmp	r5, #1
   15514:	bge	155a0 <dim_record_field_available@@Base+0x188>
   15518:	b	15618 <dim_record_field_available@@Base+0x200>
   1551c:	add	r4, r5, r9, lsl #2
   15520:	ldr	r0, [sp]
   15524:	add	r2, sp, #4
   15528:	ldr	r1, [r4, #3492]!	; 0xda4
   1552c:	bl	12688 <coda_cursor_get_record_field_available_status@plt>
   15530:	cmp	r0, #0
   15534:	beq	1553c <dim_record_field_available@@Base+0x124>
   15538:	bl	17bf4 <handle_coda_error@@Base>
   1553c:	ldr	r0, [sp, #4]
   15540:	cmp	r0, #0
   15544:	beq	15618 <dim_record_field_available@@Base+0x200>
   15548:	ldr	r0, [r5, #3748]	; 0xea4
   1554c:	sub	r0, r0, #1
   15550:	cmp	r0, r9
   15554:	beq	15628 <dim_record_field_available@@Base+0x210>
   15558:	ldr	r1, [r4]
   1555c:	ldr	r0, [sp]
   15560:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   15564:	cmp	r0, #0
   15568:	beq	15570 <dim_record_field_available@@Base+0x158>
   1556c:	bl	17bf4 <handle_coda_error@@Base>
   15570:	add	r0, r7, #1
   15574:	add	r2, r9, #1
   15578:	mov	r1, r6
   1557c:	bl	15428 <dim_record_field_available@@Base+0x10>
   15580:	str	r0, [sp, #4]
   15584:	ldr	r0, [sp]
   15588:	bl	12850 <coda_cursor_goto_parent@plt>
   1558c:	ldr	r0, [sp, #4]
   15590:	cmp	r0, #0
   15594:	bne	15628 <dim_record_field_available@@Base+0x210>
   15598:	b	15618 <dim_record_field_available@@Base+0x200>
   1559c:	mov	r5, #1
   155a0:	ldr	r0, [sp]
   155a4:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   155a8:	cmp	r0, #0
   155ac:	beq	155b4 <dim_record_field_available@@Base+0x19c>
   155b0:	bl	17bf4 <handle_coda_error@@Base>
   155b4:	add	r6, r6, #1
   155b8:	sub	r4, r5, #1
   155bc:	add	r7, r7, #1
   155c0:	mov	r8, #0
   155c4:	mov	r0, r7
   155c8:	mov	r1, r6
   155cc:	mov	r2, r9
   155d0:	bl	15428 <dim_record_field_available@@Base+0x10>
   155d4:	cmp	r0, #0
   155d8:	bne	15620 <dim_record_field_available@@Base+0x208>
   155dc:	cmp	r8, r4
   155e0:	bge	15604 <dim_record_field_available@@Base+0x1ec>
   155e4:	ldr	r0, [sp]
   155e8:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   155ec:	cmp	r0, #0
   155f0:	beq	155f8 <dim_record_field_available@@Base+0x1e0>
   155f4:	bl	17bf4 <handle_coda_error@@Base>
   155f8:	ldr	r0, [sl]
   155fc:	add	r0, r0, #1
   15600:	str	r0, [sl]
   15604:	add	r8, r8, #1
   15608:	cmp	r5, r8
   1560c:	bne	155c4 <dim_record_field_available@@Base+0x1ac>
   15610:	ldr	r0, [sp]
   15614:	bl	12850 <coda_cursor_goto_parent@plt>
   15618:	mov	r0, #0
   1561c:	b	1562c <dim_record_field_available@@Base+0x214>
   15620:	ldr	r0, [sp]
   15624:	bl	12850 <coda_cursor_goto_parent@plt>
   15628:	mov	r0, #1
   1562c:	sub	sp, fp, #28
   15630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15634:	movw	r0, #38978	; 0x9842
   15638:	movw	r1, #39031	; 0x9877
   1563c:	movw	r3, #39454	; 0x9a1e
   15640:	movw	r2, #729	; 0x2d9
   15644:	movt	r0, #1
   15648:	b	15660 <dim_record_field_available@@Base+0x248>
   1564c:	movw	r0, #39415	; 0x99f7
   15650:	movw	r1, #39031	; 0x9877
   15654:	movw	r3, #39454	; 0x9a1e
   15658:	movw	r2, #638	; 0x27e
   1565c:	movt	r0, #1
   15660:	movt	r1, #1
   15664:	movt	r3, #1
   15668:	bl	12ab4 <__assert_fail@plt>

0001566c <codadump_filter_create@@Base>:
   1566c:	push	{r4, r5, r6, r7, fp, lr}
   15670:	add	fp, sp, #16
   15674:	sub	sp, sp, #16
   15678:	mov	r1, #0
   1567c:	cmp	r0, #0
   15680:	str	r0, [sp, #8]
   15684:	str	r1, [sp, #4]
   15688:	str	r1, [sp, #12]
   1568c:	beq	156ec <codadump_filter_create@@Base+0x80>
   15690:	ldrb	r1, [r0]
   15694:	cmp	r1, #0
   15698:	beq	156ec <codadump_filter_create@@Base+0x80>
   1569c:	add	r4, sp, #12
   156a0:	add	r5, sp, #8
   156a4:	add	r6, sp, #4
   156a8:	mov	r7, #0
   156ac:	mov	r1, r4
   156b0:	mov	r2, r5
   156b4:	bl	15840 <codadump_filter_get_next_filter@@Base+0x34>
   156b8:	ldr	r1, [sp, #12]
   156bc:	cmp	r1, #0
   156c0:	beq	156e4 <codadump_filter_create@@Base+0x78>
   156c4:	mov	r0, r6
   156c8:	bl	15a90 <codadump_filter_get_next_filter@@Base+0x284>
   156cc:	ldr	r0, [sp, #8]
   156d0:	str	r7, [sp, #12]
   156d4:	ldrb	r1, [r0]
   156d8:	cmp	r1, #0
   156dc:	bne	156ac <codadump_filter_create@@Base+0x40>
   156e0:	b	156ec <codadump_filter_create@@Base+0x80>
   156e4:	add	r0, sp, #4
   156e8:	bl	156f8 <codadump_filter_remove@@Base>
   156ec:	ldr	r0, [sp, #4]
   156f0:	sub	sp, fp, #16
   156f4:	pop	{r4, r5, r6, r7, fp, pc}

000156f8 <codadump_filter_remove@@Base>:
   156f8:	push	{r4, sl, fp, lr}
   156fc:	add	fp, sp, #8
   15700:	cmp	r0, #0
   15704:	beq	15784 <codadump_filter_remove@@Base+0x8c>
   15708:	mov	r4, r0
   1570c:	ldr	r0, [r0]
   15710:	cmp	r0, #0
   15714:	popeq	{r4, sl, fp, pc}
   15718:	mov	r1, r0
   1571c:	ldr	r2, [r1, #8]!
   15720:	cmp	r2, #0
   15724:	beq	15734 <codadump_filter_remove@@Base+0x3c>
   15728:	mov	r0, r1
   1572c:	bl	156f8 <codadump_filter_remove@@Base>
   15730:	ldr	r0, [r4]
   15734:	mov	r1, r0
   15738:	ldr	r2, [r1, #4]!
   1573c:	cmp	r2, #0
   15740:	beq	15750 <codadump_filter_remove@@Base+0x58>
   15744:	mov	r0, r1
   15748:	bl	156f8 <codadump_filter_remove@@Base>
   1574c:	ldr	r0, [r4]
   15750:	ldr	r1, [r0]
   15754:	cmp	r1, #0
   15758:	beq	15774 <codadump_filter_remove@@Base+0x7c>
   1575c:	mov	r0, r1
   15760:	bl	126e8 <free@plt>
   15764:	ldr	r0, [r4]
   15768:	mov	r1, #0
   1576c:	str	r1, [r0]
   15770:	ldr	r0, [r4]
   15774:	bl	126e8 <free@plt>
   15778:	mov	r0, #0
   1577c:	str	r0, [r4]
   15780:	pop	{r4, sl, fp, pc}
   15784:	movw	r0, #39507	; 0x9a53
   15788:	movw	r1, #39522	; 0x9a62
   1578c:	movw	r3, #39598	; 0x9aae
   15790:	mov	r2, #192	; 0xc0
   15794:	movt	r0, #1
   15798:	movt	r1, #1
   1579c:	movt	r3, #1
   157a0:	bl	12ab4 <__assert_fail@plt>

000157a4 <codadump_filter_get_fieldname@@Base>:
   157a4:	push	{fp, lr}
   157a8:	mov	fp, sp
   157ac:	cmp	r0, #0
   157b0:	ldrne	r0, [r0]
   157b4:	popne	{fp, pc}
   157b8:	movw	r0, #39507	; 0x9a53
   157bc:	movw	r1, #39522	; 0x9a62
   157c0:	movw	r3, #39646	; 0x9ade
   157c4:	mov	r2, #216	; 0xd8
   157c8:	movt	r0, #1
   157cc:	movt	r1, #1
   157d0:	movt	r3, #1
   157d4:	bl	12ab4 <__assert_fail@plt>

000157d8 <codadump_filter_get_subfilter@@Base>:
   157d8:	push	{fp, lr}
   157dc:	mov	fp, sp
   157e0:	cmp	r0, #0
   157e4:	ldrne	r0, [r0, #4]
   157e8:	popne	{fp, pc}
   157ec:	movw	r0, #39507	; 0x9a53
   157f0:	movw	r1, #39522	; 0x9a62
   157f4:	movw	r3, #39707	; 0x9b1b
   157f8:	mov	r2, #223	; 0xdf
   157fc:	movt	r0, #1
   15800:	movt	r1, #1
   15804:	movt	r3, #1
   15808:	bl	12ab4 <__assert_fail@plt>

0001580c <codadump_filter_get_next_filter@@Base>:
   1580c:	push	{fp, lr}
   15810:	mov	fp, sp
   15814:	cmp	r0, #0
   15818:	ldrne	r0, [r0, #8]
   1581c:	popne	{fp, pc}
   15820:	movw	r0, #39507	; 0x9a53
   15824:	movw	r1, #39522	; 0x9a62
   15828:	movw	r3, #39773	; 0x9b5d
   1582c:	mov	r2, #230	; 0xe6
   15830:	movt	r0, #1
   15834:	movt	r1, #1
   15838:	movt	r3, #1
   1583c:	bl	12ab4 <__assert_fail@plt>
   15840:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15844:	add	fp, sp, #24
   15848:	sub	sp, sp, #8
   1584c:	cmp	r0, #0
   15850:	beq	15a40 <codadump_filter_get_next_filter@@Base+0x234>
   15854:	mov	r9, r1
   15858:	cmp	r1, #0
   1585c:	beq	15a58 <codadump_filter_get_next_filter@@Base+0x24c>
   15860:	mov	r8, r2
   15864:	cmp	r2, #0
   15868:	beq	15a70 <codadump_filter_get_next_filter@@Base+0x264>
   1586c:	movw	r4, #3
   15870:	mov	r6, r0
   15874:	mov	r1, #1
   15878:	movt	r4, #128	; 0x80
   1587c:	ldrb	r0, [r6]
   15880:	sub	r2, r0, #9
   15884:	cmp	r2, #23
   15888:	bhi	1589c <codadump_filter_get_next_filter@@Base+0x90>
   1588c:	tst	r4, r1, lsl r2
   15890:	beq	1589c <codadump_filter_get_next_filter@@Base+0x90>
   15894:	add	r6, r6, #1
   15898:	b	1587c <codadump_filter_get_next_filter@@Base+0x70>
   1589c:	mov	r7, #0
   158a0:	mvn	r1, #43	; 0x2b
   158a4:	mov	r2, #1
   158a8:	movw	r3, #32773	; 0x8005
   158ac:	uxtab	r5, r1, r0
   158b0:	cmp	r5, #15
   158b4:	bhi	158c0 <codadump_filter_get_next_filter@@Base+0xb4>
   158b8:	tst	r3, r2, lsl r5
   158bc:	bne	158dc <codadump_filter_get_next_filter@@Base+0xd0>
   158c0:	uxtb	r0, r0
   158c4:	cmp	r0, #0
   158c8:	beq	158dc <codadump_filter_get_next_filter@@Base+0xd0>
   158cc:	add	r0, r6, r7
   158d0:	add	r7, r7, #1
   158d4:	ldrb	r0, [r0, #1]
   158d8:	b	158ac <codadump_filter_get_next_filter@@Base+0xa0>
   158dc:	cmp	r7, #0
   158e0:	beq	159ec <codadump_filter_get_next_filter@@Base+0x1e0>
   158e4:	mov	r0, #12
   158e8:	bl	12820 <malloc@plt>
   158ec:	cmp	r0, #0
   158f0:	str	r0, [r9]
   158f4:	bne	15920 <codadump_filter_get_next_filter@@Base+0x114>
   158f8:	movw	r1, #38433	; 0x9621
   158fc:	movw	r3, #39522	; 0x9a62
   15900:	mov	r0, #69	; 0x45
   15904:	mov	r2, #12
   15908:	movt	r1, #1
   1590c:	movt	r3, #1
   15910:	str	r0, [sp]
   15914:	mvn	r0, #0
   15918:	bl	126a0 <coda_set_error@plt>
   1591c:	bl	17bf4 <handle_coda_error@@Base>
   15920:	add	r5, r7, #1
   15924:	mov	r0, r5
   15928:	bl	12820 <malloc@plt>
   1592c:	ldr	r1, [r9]
   15930:	str	r0, [r1]
   15934:	ldr	r0, [r9]
   15938:	ldr	r0, [r0]
   1593c:	cmp	r0, #0
   15940:	bne	15974 <codadump_filter_get_next_filter@@Base+0x168>
   15944:	movw	r1, #39938	; 0x9c02
   15948:	movw	r3, #39522	; 0x9a62
   1594c:	mov	r0, #76	; 0x4c
   15950:	mov	r2, r5
   15954:	movt	r1, #1
   15958:	movt	r3, #1
   1595c:	str	r0, [sp]
   15960:	mvn	r0, #0
   15964:	bl	126a0 <coda_set_error@plt>
   15968:	bl	17bf4 <handle_coda_error@@Base>
   1596c:	ldr	r0, [r9]
   15970:	ldr	r0, [r0]
   15974:	mov	r1, r6
   15978:	mov	r2, r7
   1597c:	add	r5, r6, r7
   15980:	bl	1291c <strncpy@plt>
   15984:	ldr	r0, [r9]
   15988:	mov	r1, #0
   1598c:	str	r1, [r0, #4]
   15990:	ldr	r0, [r9]
   15994:	str	r1, [r0, #8]
   15998:	mov	r1, #1
   1599c:	ldr	r0, [r9]
   159a0:	ldr	r0, [r0]
   159a4:	add	r0, r0, r7
   159a8:	ldrb	r2, [r0, #-1]
   159ac:	sub	r2, r2, #9
   159b0:	cmp	r2, #23
   159b4:	bhi	159c8 <codadump_filter_get_next_filter@@Base+0x1bc>
   159b8:	tst	r4, r1, lsl r2
   159bc:	beq	159c8 <codadump_filter_get_next_filter@@Base+0x1bc>
   159c0:	sub	r0, r0, #1
   159c4:	b	159a8 <codadump_filter_get_next_filter@@Base+0x19c>
   159c8:	mov	r1, #0
   159cc:	strb	r1, [r0]
   159d0:	ldrb	r0, [r6, r7]
   159d4:	cmp	r0, #44	; 0x2c
   159d8:	cmpne	r0, #59	; 0x3b
   159dc:	bne	159f8 <codadump_filter_get_next_filter@@Base+0x1ec>
   159e0:	add	r0, r5, #1
   159e4:	str	r0, [r8]
   159e8:	b	15a38 <codadump_filter_get_next_filter@@Base+0x22c>
   159ec:	mov	r0, #0
   159f0:	str	r0, [r9]
   159f4:	b	15a38 <codadump_filter_get_next_filter@@Base+0x22c>
   159f8:	cmp	r0, #46	; 0x2e
   159fc:	bne	15a34 <codadump_filter_get_next_filter@@Base+0x228>
   15a00:	ldr	r1, [r9]
   15a04:	add	r0, r5, #1
   15a08:	mov	r2, r8
   15a0c:	add	r1, r1, #4
   15a10:	bl	15840 <codadump_filter_get_next_filter@@Base+0x34>
   15a14:	ldr	r0, [r9]
   15a18:	ldr	r0, [r0, #4]
   15a1c:	cmp	r0, #0
   15a20:	bne	15a38 <codadump_filter_get_next_filter@@Base+0x22c>
   15a24:	mov	r0, r9
   15a28:	sub	sp, fp, #24
   15a2c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   15a30:	b	156f8 <codadump_filter_remove@@Base>
   15a34:	str	r5, [r8]
   15a38:	sub	sp, fp, #24
   15a3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15a40:	movw	r0, #39841	; 0x9ba1
   15a44:	movw	r1, #39522	; 0x9a62
   15a48:	movw	r3, #39861	; 0x9bb5
   15a4c:	mov	r2, #44	; 0x2c
   15a50:	movt	r0, #1
   15a54:	b	15a84 <codadump_filter_get_next_filter@@Base+0x278>
   15a58:	movw	r0, #39507	; 0x9a53
   15a5c:	movw	r1, #39522	; 0x9a62
   15a60:	movw	r3, #39861	; 0x9bb5
   15a64:	mov	r2, #45	; 0x2d
   15a68:	movt	r0, #1
   15a6c:	b	15a84 <codadump_filter_get_next_filter@@Base+0x278>
   15a70:	movw	r0, #39925	; 0x9bf5
   15a74:	movw	r1, #39522	; 0x9a62
   15a78:	movw	r3, #39861	; 0x9bb5
   15a7c:	mov	r2, #46	; 0x2e
   15a80:	movt	r0, #1
   15a84:	movt	r1, #1
   15a88:	movt	r3, #1
   15a8c:	bl	12ab4 <__assert_fail@plt>
   15a90:	push	{r4, r5, fp, lr}
   15a94:	add	fp, sp, #8
   15a98:	sub	sp, sp, #8
   15a9c:	cmp	r0, #0
   15aa0:	str	r1, [sp, #4]
   15aa4:	beq	15b44 <codadump_filter_get_next_filter@@Base+0x338>
   15aa8:	mov	r4, r1
   15aac:	cmp	r1, #0
   15ab0:	beq	15b3c <codadump_filter_get_next_filter@@Base+0x330>
   15ab4:	ldr	r5, [r0]
   15ab8:	cmp	r5, #0
   15abc:	beq	15af4 <codadump_filter_get_next_filter@@Base+0x2e8>
   15ac0:	ldr	r1, [r4]
   15ac4:	ldr	r0, [r5]
   15ac8:	bl	12664 <strcmp@plt>
   15acc:	cmp	r0, #0
   15ad0:	beq	15afc <codadump_filter_get_next_filter@@Base+0x2f0>
   15ad4:	ldr	r0, [r5, #8]!
   15ad8:	cmp	r0, #0
   15adc:	beq	15b28 <codadump_filter_get_next_filter@@Base+0x31c>
   15ae0:	mov	r0, r5
   15ae4:	mov	r1, r4
   15ae8:	sub	sp, fp, #8
   15aec:	pop	{r4, r5, fp, lr}
   15af0:	b	15a90 <codadump_filter_get_next_filter@@Base+0x284>
   15af4:	str	r4, [r0]
   15af8:	b	15b3c <codadump_filter_get_next_filter@@Base+0x330>
   15afc:	ldr	r0, [r5, #4]!
   15b00:	cmp	r0, #0
   15b04:	beq	15b34 <codadump_filter_get_next_filter@@Base+0x328>
   15b08:	ldr	r1, [r4, #4]
   15b0c:	mov	r0, r5
   15b10:	cmp	r1, #0
   15b14:	beq	15b30 <codadump_filter_get_next_filter@@Base+0x324>
   15b18:	bl	15a90 <codadump_filter_get_next_filter@@Base+0x284>
   15b1c:	mov	r0, #0
   15b20:	str	r0, [r4, #4]
   15b24:	b	15b34 <codadump_filter_get_next_filter@@Base+0x328>
   15b28:	str	r4, [r5]
   15b2c:	b	15b3c <codadump_filter_get_next_filter@@Base+0x330>
   15b30:	bl	156f8 <codadump_filter_remove@@Base>
   15b34:	add	r0, sp, #4
   15b38:	bl	156f8 <codadump_filter_remove@@Base>
   15b3c:	sub	sp, fp, #8
   15b40:	pop	{r4, r5, fp, pc}
   15b44:	movw	r0, #39507	; 0x9a53
   15b48:	movw	r1, #39522	; 0x9a62
   15b4c:	movw	r3, #39990	; 0x9c36
   15b50:	mov	r2, #117	; 0x75
   15b54:	movt	r0, #1
   15b58:	movt	r1, #1
   15b5c:	movt	r3, #1
   15b60:	bl	12ab4 <__assert_fail@plt>

00015b64 <print_json_data@@Base>:
   15b64:	push	{r4, sl, fp, lr}
   15b68:	add	fp, sp, #8
   15b6c:	sub	sp, sp, #528	; 0x210
   15b70:	movw	r1, #49604	; 0xc1c4
   15b74:	movw	r4, #49640	; 0xc1e8
   15b78:	movt	r1, #2
   15b7c:	movt	r4, #2
   15b80:	str	r0, [r1]
   15b84:	ldr	r0, [r4]
   15b88:	sub	r1, fp, #12
   15b8c:	bl	126ac <coda_open@plt>
   15b90:	cmp	r0, #0
   15b94:	beq	15bd4 <print_json_data@@Base+0x70>
   15b98:	bl	12a60 <coda_get_errno@plt>
   15b9c:	ldr	r0, [r0]
   15ba0:	cmn	r0, #21
   15ba4:	bne	15bd0 <print_json_data@@Base+0x6c>
   15ba8:	mov	r0, #0
   15bac:	bl	126f4 <coda_set_option_use_mmap@plt>
   15bb0:	ldr	r0, [r4]
   15bb4:	sub	r1, fp, #12
   15bb8:	bl	126ac <coda_open@plt>
   15bbc:	mov	r4, r0
   15bc0:	mov	r0, #1
   15bc4:	bl	126f4 <coda_set_option_use_mmap@plt>
   15bc8:	cmp	r4, #0
   15bcc:	beq	15bd4 <print_json_data@@Base+0x70>
   15bd0:	bl	17bf4 <handle_coda_error@@Base>
   15bd4:	ldr	r1, [fp, #-12]
   15bd8:	mov	r0, sp
   15bdc:	bl	127d8 <coda_cursor_set_product@plt>
   15be0:	cmp	r0, #0
   15be4:	beq	15bec <print_json_data@@Base+0x88>
   15be8:	bl	17bf4 <handle_coda_error@@Base>
   15bec:	movw	r0, #53416	; 0xd0a8
   15bf0:	movt	r0, #2
   15bf4:	ldr	r1, [r0]
   15bf8:	cmp	r1, #0
   15bfc:	beq	15c14 <print_json_data@@Base+0xb0>
   15c00:	mov	r0, sp
   15c04:	bl	129b8 <coda_cursor_goto@plt>
   15c08:	cmp	r0, #0
   15c0c:	beq	15c14 <print_json_data@@Base+0xb0>
   15c10:	bl	17bf4 <handle_coda_error@@Base>
   15c14:	mov	r0, #0
   15c18:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   15c1c:	mov	r0, sp
   15c20:	bl	15c40 <print_json_data@@Base+0xdc>
   15c24:	movw	r0, #40854	; 0x9f96
   15c28:	movt	r0, #1
   15c2c:	bl	16410 <print_json_data@@Base+0x8ac>
   15c30:	ldr	r0, [fp, #-12]
   15c34:	bl	12994 <coda_close@plt>
   15c38:	sub	sp, fp, #8
   15c3c:	pop	{r4, sl, fp, pc}
   15c40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15c44:	add	fp, sp, #24
   15c48:	sub	sp, sp, #72	; 0x48
   15c4c:	mov	r4, r0
   15c50:	mov	r0, #0
   15c54:	str	r0, [fp, #-32]	; 0xffffffe0
   15c58:	movw	r0, #49604	; 0xc1c4
   15c5c:	movt	r0, #2
   15c60:	ldr	r0, [r0]
   15c64:	cmp	r0, #0
   15c68:	beq	15ccc <print_json_data@@Base+0x168>
   15c6c:	sub	r1, fp, #32
   15c70:	mov	r0, r4
   15c74:	bl	1276c <coda_cursor_has_attributes@plt>
   15c78:	cmp	r0, #0
   15c7c:	beq	15c84 <print_json_data@@Base+0x120>
   15c80:	bl	17bf4 <handle_coda_error@@Base>
   15c84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c88:	cmp	r0, #0
   15c8c:	beq	15ccc <print_json_data@@Base+0x168>
   15c90:	movw	r0, #40045	; 0x9c6d
   15c94:	movt	r0, #1
   15c98:	bl	16410 <print_json_data@@Base+0x8ac>
   15c9c:	mov	r0, r4
   15ca0:	bl	128ec <coda_cursor_goto_attributes@plt>
   15ca4:	cmp	r0, #0
   15ca8:	beq	15cb0 <print_json_data@@Base+0x14c>
   15cac:	bl	17bf4 <handle_coda_error@@Base>
   15cb0:	mov	r0, r4
   15cb4:	bl	15c40 <print_json_data@@Base+0xdc>
   15cb8:	mov	r0, r4
   15cbc:	bl	12850 <coda_cursor_goto_parent@plt>
   15cc0:	movw	r0, #40054	; 0x9c76
   15cc4:	movt	r0, #1
   15cc8:	bl	16410 <print_json_data@@Base+0x8ac>
   15ccc:	sub	r1, fp, #28
   15cd0:	mov	r0, r4
   15cd4:	bl	12778 <coda_cursor_get_type_class@plt>
   15cd8:	cmp	r0, #0
   15cdc:	beq	15ce4 <print_json_data@@Base+0x180>
   15ce0:	bl	17bf4 <handle_coda_error@@Base>
   15ce4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15ce8:	cmp	r0, #6
   15cec:	bhi	163bc <print_json_data@@Base+0x858>
   15cf0:	add	r1, pc, #0
   15cf4:	ldr	pc, [r1, r0, lsl #2]
   15cf8:	andeq	r5, r1, r4, lsr #27
   15cfc:	andeq	r5, r1, r8, ror lr
   15d00:	andeq	r5, r1, r4, lsl sp
   15d04:	andeq	r5, r1, r4, lsl sp
   15d08:	andeq	r5, r1, r4, lsl sp
   15d0c:	andeq	r5, r1, r4, lsl sp
   15d10:	andeq	r5, r1, r0, asr #30
   15d14:	sub	r1, fp, #36	; 0x24
   15d18:	mov	r0, r4
   15d1c:	bl	12814 <coda_cursor_get_read_type@plt>
   15d20:	cmp	r0, #0
   15d24:	beq	15d2c <print_json_data@@Base+0x1c8>
   15d28:	bl	17bf4 <handle_coda_error@@Base>
   15d2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d30:	add	r0, r0, #1
   15d34:	cmp	r0, #13
   15d38:	bhi	163bc <print_json_data@@Base+0x858>
   15d3c:	add	r1, pc, #0
   15d40:	ldr	pc, [r1, r0, lsl #2]
   15d44:	andeq	r5, r1, ip, ror pc
   15d48:	andeq	r5, r1, ip, ror sp
   15d4c:	andeq	r5, r1, r8, lsl #31
   15d50:	andeq	r5, r1, ip, ror sp
   15d54:	andeq	r5, r1, r8, lsl #31
   15d58:	andeq	r5, r1, ip, ror sp
   15d5c:	andeq	r5, r1, r8, lsl #31
   15d60:	strdeq	r5, [r1], -r0
   15d64:	andeq	r6, r1, r0, lsr #32
   15d68:			; <UNDEFINED> instruction: 0x00015fb0
   15d6c:			; <UNDEFINED> instruction: 0x00015fb0
   15d70:	andeq	r6, r1, r0, rrx
   15d74:	muleq	r1, ip, r0
   15d78:	andeq	r6, r1, ip, asr #2
   15d7c:	add	r1, sp, #16
   15d80:	mov	r0, r4
   15d84:	bl	12a3c <coda_cursor_read_int32@plt>
   15d88:	cmp	r0, #0
   15d8c:	beq	15d94 <print_json_data@@Base+0x230>
   15d90:	bl	17bf4 <handle_coda_error@@Base>
   15d94:	ldr	r1, [sp, #16]
   15d98:	movw	r0, #40240	; 0x9d30
   15d9c:	movt	r0, #1
   15da0:	b	16058 <print_json_data@@Base+0x4f4>
   15da4:	movw	r0, #40063	; 0x9c7f
   15da8:	movt	r0, #1
   15dac:	bl	16410 <print_json_data@@Base+0x8ac>
   15db0:	add	r1, sp, #16
   15db4:	mov	r0, r4
   15db8:	bl	126d0 <coda_cursor_get_num_elements@plt>
   15dbc:	cmp	r0, #0
   15dc0:	beq	15dc8 <print_json_data@@Base+0x264>
   15dc4:	bl	17bf4 <handle_coda_error@@Base>
   15dc8:	ldr	r0, [sp, #16]
   15dcc:	cmp	r0, #1
   15dd0:	blt	16308 <print_json_data@@Base+0x7a4>
   15dd4:	add	r1, sp, #8
   15dd8:	mov	r0, r4
   15ddc:	bl	12730 <coda_cursor_get_type@plt>
   15de0:	cmp	r0, #0
   15de4:	beq	15dec <print_json_data@@Base+0x288>
   15de8:	bl	17bf4 <handle_coda_error@@Base>
   15dec:	ldr	r0, [sp, #8]
   15df0:	sub	r1, fp, #36	; 0x24
   15df4:	bl	12934 <coda_type_get_record_union_status@plt>
   15df8:	cmp	r0, #0
   15dfc:	beq	15e04 <print_json_data@@Base+0x2a0>
   15e00:	bl	17bf4 <handle_coda_error@@Base>
   15e04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15e08:	cmp	r0, #0
   15e0c:	beq	16218 <print_json_data@@Base+0x6b4>
   15e10:	sub	r1, fp, #40	; 0x28
   15e14:	mov	r0, r4
   15e18:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   15e1c:	cmp	r0, #0
   15e20:	beq	15e28 <print_json_data@@Base+0x2c4>
   15e24:	bl	17bf4 <handle_coda_error@@Base>
   15e28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15e2c:	ldr	r0, [sp, #8]
   15e30:	sub	r2, fp, #44	; 0x2c
   15e34:	bl	12a78 <coda_type_get_record_field_name@plt>
   15e38:	cmp	r0, #0
   15e3c:	beq	15e44 <print_json_data@@Base+0x2e0>
   15e40:	bl	17bf4 <handle_coda_error@@Base>
   15e44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15e48:	mov	r0, r4
   15e4c:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   15e50:	cmp	r0, #0
   15e54:	beq	15e5c <print_json_data@@Base+0x2f8>
   15e58:	bl	17bf4 <handle_coda_error@@Base>
   15e5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e60:	movw	r0, #40065	; 0x9c81
   15e64:	movt	r0, #1
   15e68:	bl	16410 <print_json_data@@Base+0x8ac>
   15e6c:	mov	r0, r4
   15e70:	bl	15c40 <print_json_data@@Base+0xdc>
   15e74:	b	16300 <print_json_data@@Base+0x79c>
   15e78:	movw	r0, #40234	; 0x9d2a
   15e7c:	movt	r0, #1
   15e80:	bl	16410 <print_json_data@@Base+0x8ac>
   15e84:	add	r5, sp, #16
   15e88:	add	r1, sp, #8
   15e8c:	mov	r0, r4
   15e90:	mov	r2, r5
   15e94:	bl	1297c <coda_cursor_get_array_dim@plt>
   15e98:	cmp	r0, #0
   15e9c:	beq	15ea4 <print_json_data@@Base+0x340>
   15ea0:	bl	17bf4 <handle_coda_error@@Base>
   15ea4:	ldr	r0, [sp, #8]
   15ea8:	cmp	r0, #0
   15eac:	bmi	15f34 <print_json_data@@Base+0x3d0>
   15eb0:	mov	r6, #1
   15eb4:	beq	15ed0 <print_json_data@@Base+0x36c>
   15eb8:	ldr	r1, [r5], #4
   15ebc:	subs	r0, r0, #1
   15ec0:	mul	r6, r1, r6
   15ec4:	bne	15eb8 <print_json_data@@Base+0x354>
   15ec8:	cmp	r6, #1
   15ecc:	blt	15f34 <print_json_data@@Base+0x3d0>
   15ed0:	mov	r0, r4
   15ed4:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   15ed8:	cmp	r0, #0
   15edc:	beq	15ee4 <print_json_data@@Base+0x380>
   15ee0:	bl	17bf4 <handle_coda_error@@Base>
   15ee4:	movw	r8, #39152	; 0x98f0
   15ee8:	sub	r7, r6, #1
   15eec:	mov	r5, #0
   15ef0:	movt	r8, #1
   15ef4:	mov	r0, r4
   15ef8:	bl	15c40 <print_json_data@@Base+0xdc>
   15efc:	cmp	r5, r7
   15f00:	bge	15f20 <print_json_data@@Base+0x3bc>
   15f04:	mov	r0, r8
   15f08:	bl	16410 <print_json_data@@Base+0x8ac>
   15f0c:	mov	r0, r4
   15f10:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   15f14:	cmp	r0, #0
   15f18:	beq	15f20 <print_json_data@@Base+0x3bc>
   15f1c:	bl	17bf4 <handle_coda_error@@Base>
   15f20:	add	r5, r5, #1
   15f24:	cmp	r6, r5
   15f28:	bne	15ef4 <print_json_data@@Base+0x390>
   15f2c:	mov	r0, r4
   15f30:	bl	12850 <coda_cursor_goto_parent@plt>
   15f34:	movw	r0, #40472	; 0x9e18
   15f38:	movt	r0, #1
   15f3c:	b	16310 <print_json_data@@Base+0x7ac>
   15f40:	sub	r1, fp, #36	; 0x24
   15f44:	mov	r0, r4
   15f48:	bl	127b4 <coda_cursor_get_special_type@plt>
   15f4c:	cmp	r0, #0
   15f50:	beq	15f58 <print_json_data@@Base+0x3f4>
   15f54:	bl	17bf4 <handle_coda_error@@Base>
   15f58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f5c:	cmp	r0, #3
   15f60:	bhi	163bc <print_json_data@@Base+0x858>
   15f64:	add	r1, pc, #0
   15f68:	ldr	pc, [r1, r0, lsl #2]
   15f6c:	andeq	r5, r1, ip, ror pc
   15f70:	andeq	r6, r1, r8, lsl r3
   15f74:	andeq	r6, r1, r8, lsr r3
   15f78:	andeq	r6, r1, r4, lsl #7
   15f7c:	movw	r0, #40147	; 0x9cd3
   15f80:	movt	r0, #1
   15f84:	b	16310 <print_json_data@@Base+0x7ac>
   15f88:	add	r1, sp, #16
   15f8c:	mov	r0, r4
   15f90:	bl	1270c <coda_cursor_read_uint32@plt>
   15f94:	cmp	r0, #0
   15f98:	beq	15fa0 <print_json_data@@Base+0x43c>
   15f9c:	bl	17bf4 <handle_coda_error@@Base>
   15fa0:	ldr	r1, [sp, #16]
   15fa4:	movw	r0, #38591	; 0x96bf
   15fa8:	movt	r0, #1
   15fac:	b	16058 <print_json_data@@Base+0x4f4>
   15fb0:	add	r1, sp, #16
   15fb4:	mov	r0, r4
   15fb8:	bl	12898 <coda_cursor_read_double@plt>
   15fbc:	cmp	r0, #0
   15fc0:	beq	15fc8 <print_json_data@@Base+0x464>
   15fc4:	bl	17bf4 <handle_coda_error@@Base>
   15fc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15fcc:	vldr	d16, [sp, #16]
   15fd0:	movw	r2, #38595	; 0x96c3
   15fd4:	movw	r0, #38600	; 0x96c8
   15fd8:	movt	r2, #1
   15fdc:	movt	r0, #1
   15fe0:	cmp	r1, #8
   15fe4:	moveq	r0, r2
   15fe8:	vmov	r2, r3, d16
   15fec:	b	163b8 <print_json_data@@Base+0x854>
   15ff0:	add	r1, sp, #8
   15ff4:	mov	r0, r4
   15ff8:	bl	129a0 <coda_cursor_read_int64@plt>
   15ffc:	cmp	r0, #0
   16000:	beq	16008 <print_json_data@@Base+0x4a4>
   16004:	bl	17bf4 <handle_coda_error@@Base>
   16008:	ldr	r0, [sp, #8]
   1600c:	ldr	r1, [sp, #12]
   16010:	add	r4, sp, #16
   16014:	mov	r2, r4
   16018:	bl	12aa8 <coda_str64@plt>
   1601c:	b	1604c <print_json_data@@Base+0x4e8>
   16020:	add	r1, sp, #8
   16024:	mov	r0, r4
   16028:	bl	1288c <coda_cursor_read_uint64@plt>
   1602c:	cmp	r0, #0
   16030:	beq	16038 <print_json_data@@Base+0x4d4>
   16034:	bl	17bf4 <handle_coda_error@@Base>
   16038:	ldr	r0, [sp, #8]
   1603c:	ldr	r1, [sp, #12]
   16040:	add	r4, sp, #16
   16044:	mov	r2, r4
   16048:	bl	126dc <coda_str64u@plt>
   1604c:	movw	r0, #40409	; 0x9dd9
   16050:	mov	r1, r4
   16054:	movt	r0, #1
   16058:	bl	16410 <print_json_data@@Base+0x8ac>
   1605c:	b	163bc <print_json_data@@Base+0x858>
   16060:	add	r1, sp, #16
   16064:	mov	r0, r4
   16068:	bl	128f8 <coda_cursor_read_char@plt>
   1606c:	cmp	r0, #0
   16070:	beq	16078 <print_json_data@@Base+0x514>
   16074:	bl	17bf4 <handle_coda_error@@Base>
   16078:	movw	r4, #40220	; 0x9d1c
   1607c:	movt	r4, #1
   16080:	mov	r0, r4
   16084:	bl	16410 <print_json_data@@Base+0x8ac>
   16088:	add	r0, sp, #16
   1608c:	mov	r1, #1
   16090:	bl	16458 <print_json_data@@Base+0x8f4>
   16094:	mov	r0, r4
   16098:	b	16310 <print_json_data@@Base+0x7ac>
   1609c:	add	r1, sp, #16
   160a0:	mov	r0, r4
   160a4:	bl	12880 <coda_cursor_get_string_length@plt>
   160a8:	cmp	r0, #0
   160ac:	beq	160b4 <print_json_data@@Base+0x550>
   160b0:	bl	17bf4 <handle_coda_error@@Base>
   160b4:	ldr	r0, [sp, #16]
   160b8:	add	r6, r0, #1
   160bc:	mov	r0, r6
   160c0:	bl	12820 <malloc@plt>
   160c4:	mov	r5, r0
   160c8:	cmp	r0, #0
   160cc:	bne	16100 <print_json_data@@Base+0x59c>
   160d0:	movw	r1, #38433	; 0x9621
   160d4:	movw	r3, #40073	; 0x9c89
   160d8:	movw	r0, #303	; 0x12f
   160dc:	mov	r2, r6
   160e0:	movt	r1, #1
   160e4:	movt	r3, #1
   160e8:	str	r0, [sp]
   160ec:	mvn	r0, #0
   160f0:	bl	126a0 <coda_set_error@plt>
   160f4:	bl	17bf4 <handle_coda_error@@Base>
   160f8:	ldr	r0, [sp, #16]
   160fc:	add	r6, r0, #1
   16100:	mov	r0, r4
   16104:	mov	r1, r5
   16108:	mov	r2, r6
   1610c:	bl	12844 <coda_cursor_read_string@plt>
   16110:	cmp	r0, #0
   16114:	beq	1611c <print_json_data@@Base+0x5b8>
   16118:	bl	17bf4 <handle_coda_error@@Base>
   1611c:	movw	r4, #40220	; 0x9d1c
   16120:	movt	r4, #1
   16124:	mov	r0, r4
   16128:	bl	16410 <print_json_data@@Base+0x8ac>
   1612c:	ldr	r1, [sp, #16]
   16130:	mov	r0, r5
   16134:	bl	16458 <print_json_data@@Base+0x8f4>
   16138:	ldr	r1, [sp, #16]
   1613c:	mov	r0, r4
   16140:	bl	16410 <print_json_data@@Base+0x8ac>
   16144:	mov	r0, r5
   16148:	b	16210 <print_json_data@@Base+0x6ac>
   1614c:	add	r1, sp, #16
   16150:	mov	r0, r4
   16154:	bl	12a00 <coda_cursor_get_bit_size@plt>
   16158:	cmp	r0, #0
   1615c:	beq	16164 <print_json_data@@Base+0x600>
   16160:	bl	17bf4 <handle_coda_error@@Base>
   16164:	ldr	r7, [sp, #16]
   16168:	ldr	r6, [sp, #20]
   1616c:	lsr	r0, r7, #3
   16170:	tst	r7, #7
   16174:	orr	r5, r0, r6, lsl #29
   16178:	addne	r5, r5, #1
   1617c:	mov	r0, r5
   16180:	bl	12820 <malloc@plt>
   16184:	mov	r8, r0
   16188:	cmp	r0, #0
   1618c:	bne	161c0 <print_json_data@@Base+0x65c>
   16190:	movw	r1, #38433	; 0x9621
   16194:	movw	r3, #40073	; 0x9c89
   16198:	movw	r0, #334	; 0x14e
   1619c:	mov	r2, r5
   161a0:	movt	r1, #1
   161a4:	movt	r3, #1
   161a8:	str	r0, [sp]
   161ac:	mvn	r0, #0
   161b0:	bl	126a0 <coda_set_error@plt>
   161b4:	bl	17bf4 <handle_coda_error@@Base>
   161b8:	ldr	r7, [sp, #16]
   161bc:	ldr	r6, [sp, #20]
   161c0:	mov	r0, r4
   161c4:	mov	r1, r8
   161c8:	mov	r2, #0
   161cc:	mov	r3, #0
   161d0:	str	r7, [sp]
   161d4:	str	r6, [sp, #4]
   161d8:	bl	12a9c <coda_cursor_read_bits@plt>
   161dc:	cmp	r0, #0
   161e0:	beq	161e8 <print_json_data@@Base+0x684>
   161e4:	bl	17bf4 <handle_coda_error@@Base>
   161e8:	movw	r4, #40220	; 0x9d1c
   161ec:	movt	r4, #1
   161f0:	mov	r0, r4
   161f4:	bl	16410 <print_json_data@@Base+0x8ac>
   161f8:	mov	r0, r8
   161fc:	mov	r1, r5
   16200:	bl	16458 <print_json_data@@Base+0x8f4>
   16204:	mov	r0, r4
   16208:	bl	16410 <print_json_data@@Base+0x8ac>
   1620c:	mov	r0, r8
   16210:	bl	126e8 <free@plt>
   16214:	b	163bc <print_json_data@@Base+0x858>
   16218:	mov	r0, r4
   1621c:	bl	127e4 <coda_cursor_goto_first_record_field@plt>
   16220:	cmp	r0, #0
   16224:	beq	1622c <print_json_data@@Base+0x6c8>
   16228:	bl	17bf4 <handle_coda_error@@Base>
   1622c:	ldr	r0, [sp, #16]
   16230:	mov	r1, #0
   16234:	str	r1, [fp, #-40]	; 0xffffffd8
   16238:	cmp	r0, #1
   1623c:	blt	16300 <print_json_data@@Base+0x79c>
   16240:	movw	r8, #39152	; 0x98f0
   16244:	movw	r6, #40065	; 0x9c81
   16248:	mov	r7, #1
   1624c:	add	r5, sp, #48	; 0x30
   16250:	sub	r9, fp, #44	; 0x2c
   16254:	movt	r8, #1
   16258:	movt	r6, #1
   1625c:	ldr	r0, [sp, #8]
   16260:	mov	r2, r5
   16264:	bl	12670 <coda_type_get_record_field_hidden_status@plt>
   16268:	cmp	r0, #0
   1626c:	beq	16274 <print_json_data@@Base+0x710>
   16270:	bl	17bf4 <handle_coda_error@@Base>
   16274:	ldr	r0, [sp, #48]	; 0x30
   16278:	cmp	r0, #0
   1627c:	bne	162c0 <print_json_data@@Base+0x75c>
   16280:	cmp	r7, #0
   16284:	moveq	r0, r8
   16288:	bleq	16410 <print_json_data@@Base+0x8ac>
   1628c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16290:	ldr	r0, [sp, #8]
   16294:	mov	r2, r9
   16298:	bl	12a78 <coda_type_get_record_field_name@plt>
   1629c:	cmp	r0, #0
   162a0:	beq	162a8 <print_json_data@@Base+0x744>
   162a4:	bl	17bf4 <handle_coda_error@@Base>
   162a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   162ac:	mov	r0, r6
   162b0:	bl	16410 <print_json_data@@Base+0x8ac>
   162b4:	mov	r0, r4
   162b8:	bl	15c40 <print_json_data@@Base+0xdc>
   162bc:	mov	r7, #0
   162c0:	ldr	r0, [sp, #16]
   162c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   162c8:	sub	r0, r0, #1
   162cc:	cmp	r1, r0
   162d0:	bge	162e8 <print_json_data@@Base+0x784>
   162d4:	mov	r0, r4
   162d8:	bl	129dc <coda_cursor_goto_next_record_field@plt>
   162dc:	cmp	r0, #0
   162e0:	beq	162e8 <print_json_data@@Base+0x784>
   162e4:	bl	17bf4 <handle_coda_error@@Base>
   162e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   162ec:	add	r1, r0, #1
   162f0:	ldr	r0, [sp, #16]
   162f4:	str	r1, [fp, #-40]	; 0xffffffd8
   162f8:	cmp	r1, r0
   162fc:	blt	1625c <print_json_data@@Base+0x6f8>
   16300:	mov	r0, r4
   16304:	bl	12850 <coda_cursor_goto_parent@plt>
   16308:	movw	r0, #40071	; 0x9c87
   1630c:	movt	r0, #1
   16310:	bl	16410 <print_json_data@@Base+0x8ac>
   16314:	b	163bc <print_json_data@@Base+0x858>
   16318:	add	r1, sp, #16
   1631c:	mov	r0, r4
   16320:	bl	12898 <coda_cursor_read_double@plt>
   16324:	cmp	r0, #0
   16328:	beq	16330 <print_json_data@@Base+0x7cc>
   1632c:	bl	17bf4 <handle_coda_error@@Base>
   16330:	vldr	d16, [sp, #16]
   16334:	b	16374 <print_json_data@@Base+0x810>
   16338:	add	r1, sp, #8
   1633c:	mov	r0, r4
   16340:	bl	12898 <coda_cursor_read_double@plt>
   16344:	cmp	r0, #0
   16348:	beq	16350 <print_json_data@@Base+0x7ec>
   1634c:	bl	17bf4 <handle_coda_error@@Base>
   16350:	vldr	d0, [sp, #8]
   16354:	bl	128a4 <coda_isNaN@plt>
   16358:	cmp	r0, #0
   1635c:	bne	16370 <print_json_data@@Base+0x80c>
   16360:	vldr	d0, [sp, #8]
   16364:	bl	12748 <coda_isInf@plt>
   16368:	cmp	r0, #0
   1636c:	beq	163d8 <print_json_data@@Base+0x874>
   16370:	vldr	d16, [sp, #8]
   16374:	movw	r0, #38600	; 0x96c8
   16378:	vmov	r2, r3, d16
   1637c:	movt	r0, #1
   16380:	b	163b8 <print_json_data@@Base+0x854>
   16384:	add	r1, sp, #16
   16388:	add	r2, sp, #8
   1638c:	mov	r0, r4
   16390:	bl	12940 <coda_cursor_read_complex_double_split@plt>
   16394:	cmp	r0, #0
   16398:	beq	163a0 <print_json_data@@Base+0x83c>
   1639c:	bl	17bf4 <handle_coda_error@@Base>
   163a0:	vldr	d16, [sp, #16]
   163a4:	vldr	d17, [sp, #8]
   163a8:	movw	r0, #40208	; 0x9d10
   163ac:	movt	r0, #1
   163b0:	vmov	r2, r3, d16
   163b4:	vstr	d17, [sp]
   163b8:	bl	16410 <print_json_data@@Base+0x8ac>
   163bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163c0:	cmp	r0, #0
   163c4:	movwne	r0, #40071	; 0x9c87
   163c8:	movtne	r0, #1
   163cc:	blne	16410 <print_json_data@@Base+0x8ac>
   163d0:	sub	sp, fp, #24
   163d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   163d8:	vldr	d0, [sp, #8]
   163dc:	movw	r0, #40152	; 0x9cd8
   163e0:	add	r1, sp, #16
   163e4:	movt	r0, #1
   163e8:	bl	126c4 <coda_time_double_to_string@plt>
   163ec:	cmp	r0, #0
   163f0:	beq	16400 <print_json_data@@Base+0x89c>
   163f4:	movw	r0, #40181	; 0x9cf5
   163f8:	movt	r0, #1
   163fc:	b	16310 <print_json_data@@Base+0x7ac>
   16400:	movw	r0, #40475	; 0x9e1b
   16404:	add	r1, sp, #16
   16408:	movt	r0, #1
   1640c:	b	16058 <print_json_data@@Base+0x4f4>
   16410:	sub	sp, sp, #12
   16414:	push	{fp, lr}
   16418:	mov	fp, sp
   1641c:	sub	sp, sp, #4
   16420:	mov	ip, r0
   16424:	add	r0, fp, #8
   16428:	stm	r0, {r1, r2, r3}
   1642c:	movw	r0, #53392	; 0xd090
   16430:	add	r2, fp, #8
   16434:	mov	r1, ip
   16438:	movt	r0, #2
   1643c:	str	r2, [sp]
   16440:	ldr	r0, [r0]
   16444:	bl	129ac <vfprintf@plt>
   16448:	mov	sp, fp
   1644c:	pop	{fp, lr}
   16450:	add	sp, sp, #12
   16454:	bx	lr
   16458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1645c:	add	fp, sp, #28
   16460:	sub	sp, sp, #4
   16464:	cmp	r1, #1
   16468:	blt	16558 <print_json_data@@Base+0x9f4>
   1646c:	movw	r6, #38564	; 0x96a4
   16470:	movw	r8, #38567	; 0x96a7
   16474:	movw	r9, #38570	; 0x96aa
   16478:	movw	sl, #38576	; 0x96b0
   1647c:	movw	r7, #38579	; 0x96b3
   16480:	mov	r4, r1
   16484:	mov	r5, r0
   16488:	movt	r6, #1
   1648c:	movt	r8, #1
   16490:	movt	r9, #1
   16494:	movt	sl, #1
   16498:	movt	r7, #1
   1649c:	ldrb	r1, [r5]
   164a0:	sub	r0, r1, #8
   164a4:	cmp	r0, #5
   164a8:	bhi	164d4 <print_json_data@@Base+0x970>
   164ac:	add	r2, pc, #0
   164b0:	ldr	pc, [r2, r0, lsl #2]
   164b4:	andeq	r6, r1, ip, asr #9
   164b8:	andeq	r6, r1, ip, lsl #10
   164bc:	andeq	r6, r1, r4, lsl r5
   164c0:	strdeq	r6, [r1], -r0
   164c4:	andeq	r6, r1, ip, lsl r5
   164c8:	andeq	r6, r1, r4, lsr #10
   164cc:	mov	r0, r6
   164d0:	b	16534 <print_json_data@@Base+0x9d0>
   164d4:	cmp	r1, #34	; 0x22
   164d8:	beq	1652c <print_json_data@@Base+0x9c8>
   164dc:	cmp	r1, #92	; 0x5c
   164e0:	bne	164f0 <print_json_data@@Base+0x98c>
   164e4:	movw	r0, #38582	; 0x96b6
   164e8:	movt	r0, #1
   164ec:	b	16534 <print_json_data@@Base+0x9d0>
   164f0:	sub	r0, r1, #32
   164f4:	uxtb	r0, r0
   164f8:	cmp	r0, #94	; 0x5e
   164fc:	bhi	16548 <print_json_data@@Base+0x9e4>
   16500:	movw	r0, #39001	; 0x9859
   16504:	movt	r0, #1
   16508:	b	16550 <print_json_data@@Base+0x9ec>
   1650c:	mov	r0, r8
   16510:	b	16534 <print_json_data@@Base+0x9d0>
   16514:	mov	r0, r9
   16518:	b	16534 <print_json_data@@Base+0x9d0>
   1651c:	mov	r0, sl
   16520:	b	16534 <print_json_data@@Base+0x9d0>
   16524:	mov	r0, r7
   16528:	b	16534 <print_json_data@@Base+0x9d0>
   1652c:	movw	r0, #40219	; 0x9d1b
   16530:	movt	r0, #1
   16534:	bl	16410 <print_json_data@@Base+0x8ac>
   16538:	add	r5, r5, #1
   1653c:	subs	r4, r4, #1
   16540:	bne	1649c <print_json_data@@Base+0x938>
   16544:	b	16558 <print_json_data@@Base+0x9f4>
   16548:	movw	r0, #40222	; 0x9d1e
   1654c:	movt	r0, #1
   16550:	bl	16410 <print_json_data@@Base+0x8ac>
   16554:	b	16538 <print_json_data@@Base+0x9d4>
   16558:	sub	sp, fp, #28
   1655c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016560 <print_full_field_name@@Base>:
   16560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16564:	add	fp, sp, #28
   16568:	sub	sp, sp, #12
   1656c:	mov	sl, r2
   16570:	mov	r4, r0
   16574:	cmp	r1, #1
   16578:	bne	1668c <print_full_field_name@@Base+0x12c>
   1657c:	movw	r5, #49640	; 0xc1e8
   16580:	mov	r6, #0
   16584:	str	sl, [sp]
   16588:	movt	r5, #2
   1658c:	ldr	r0, [r5, #136]	; 0x88
   16590:	cmp	r0, #1
   16594:	blt	16658 <print_full_field_name@@Base+0xf8>
   16598:	movw	r9, #40229	; 0x9d25
   1659c:	add	sl, sp, #8
   165a0:	mov	r7, #0
   165a4:	mov	r8, #0
   165a8:	movt	r9, #1
   165ac:	add	r0, r5, r8, lsl #2
   165b0:	mov	r1, sl
   165b4:	ldr	r0, [r0, #8]
   165b8:	bl	12ac0 <coda_type_get_class@plt>
   165bc:	cmp	r0, #0
   165c0:	beq	165c8 <print_full_field_name@@Base+0x68>
   165c4:	bl	17bf4 <handle_coda_error@@Base>
   165c8:	ldr	r0, [sp, #8]
   165cc:	cmp	r0, #1
   165d0:	beq	165f8 <print_full_field_name@@Base+0x98>
   165d4:	cmp	r0, #0
   165d8:	bne	16648 <print_full_field_name@@Base+0xe8>
   165dc:	add	r0, r5, r7, lsl #2
   165e0:	mov	r1, r9
   165e4:	ldr	r2, [r0, #3620]	; 0xe24
   165e8:	mov	r0, r4
   165ec:	bl	128b0 <fprintf@plt>
   165f0:	add	r7, r7, #1
   165f4:	b	16648 <print_full_field_name@@Base+0xe8>
   165f8:	cmp	r8, #0
   165fc:	bne	1660c <print_full_field_name@@Base+0xac>
   16600:	mov	r0, #47	; 0x2f
   16604:	mov	r1, r4
   16608:	bl	129e8 <fputc@plt>
   1660c:	add	r0, r6, r6, lsl #2
   16610:	add	r0, r5, r0, lsl #4
   16614:	ldr	r0, [r0, #804]	; 0x324
   16618:	cmp	r0, #1
   1661c:	blt	16644 <print_full_field_name@@Base+0xe4>
   16620:	mov	r0, #91	; 0x5b
   16624:	mov	r1, r4
   16628:	bl	129e8 <fputc@plt>
   1662c:	mov	r0, r4
   16630:	mov	r1, r6
   16634:	bl	1680c <print_full_field_name@@Base+0x2ac>
   16638:	mov	r0, #93	; 0x5d
   1663c:	mov	r1, r4
   16640:	bl	129e8 <fputc@plt>
   16644:	add	r6, r6, #1
   16648:	ldr	r0, [r5, #136]	; 0x88
   1664c:	add	r8, r8, #1
   16650:	cmp	r8, r0
   16654:	blt	165ac <print_full_field_name@@Base+0x4c>
   16658:	ldr	r0, [sp]
   1665c:	cmp	r0, #0
   16660:	beq	16804 <print_full_field_name@@Base+0x2a4>
   16664:	ldr	r0, [r5, #3360]	; 0xd20
   16668:	cmp	r6, r0
   1666c:	bge	16804 <print_full_field_name@@Base+0x2a4>
   16670:	mov	r0, #91	; 0x5b
   16674:	mov	r1, r4
   16678:	bl	129e8 <fputc@plt>
   1667c:	mov	r0, r4
   16680:	mov	r1, r6
   16684:	bl	1680c <print_full_field_name@@Base+0x2ac>
   16688:	b	167f8 <print_full_field_name@@Base+0x298>
   1668c:	movw	r7, #49640	; 0xc1e8
   16690:	mov	r5, r1
   16694:	movt	r7, #2
   16698:	ldr	r0, [r7, #3748]	; 0xea4
   1669c:	cmp	r0, #1
   166a0:	blt	166dc <print_full_field_name@@Base+0x17c>
   166a4:	mov	r6, #0
   166a8:	cmp	r6, #0
   166ac:	beq	166bc <print_full_field_name@@Base+0x15c>
   166b0:	mov	r0, #46	; 0x2e
   166b4:	mov	r1, r4
   166b8:	bl	129e8 <fputc@plt>
   166bc:	add	r0, r7, r6, lsl #2
   166c0:	mov	r1, r4
   166c4:	ldr	r0, [r0, #3620]	; 0xe24
   166c8:	bl	12a84 <fputs@plt>
   166cc:	ldr	r0, [r7, #3748]	; 0xea4
   166d0:	add	r6, r6, #1
   166d4:	cmp	r6, r0
   166d8:	blt	166a8 <print_full_field_name@@Base+0x148>
   166dc:	cmp	r5, #2
   166e0:	bne	16804 <print_full_field_name@@Base+0x2a4>
   166e4:	ldr	r0, [r7, #136]	; 0x88
   166e8:	mov	r6, #0
   166ec:	cmp	r0, #1
   166f0:	blt	16790 <print_full_field_name@@Base+0x230>
   166f4:	movw	r9, #40233	; 0x9d29
   166f8:	add	r8, sp, #4
   166fc:	mov	r5, #0
   16700:	movt	r9, #1
   16704:	add	r0, r7, r5, lsl #2
   16708:	mov	r1, r8
   1670c:	ldr	r0, [r0, #8]
   16710:	bl	12ac0 <coda_type_get_class@plt>
   16714:	cmp	r0, #0
   16718:	beq	16720 <print_full_field_name@@Base+0x1c0>
   1671c:	bl	17bf4 <handle_coda_error@@Base>
   16720:	ldr	r0, [sp, #4]
   16724:	cmp	r0, #1
   16728:	bne	16780 <print_full_field_name@@Base+0x220>
   1672c:	add	r0, r6, r6, lsl #2
   16730:	add	r0, r7, r0, lsl #4
   16734:	ldr	r1, [r0, #804]	; 0x324
   16738:	cmp	r1, #1
   1673c:	blt	16780 <print_full_field_name@@Base+0x220>
   16740:	ldr	r0, [r0, #800]	; 0x320
   16744:	cmp	r0, #0
   16748:	beq	1675c <print_full_field_name@@Base+0x1fc>
   1674c:	mov	r0, #44	; 0x2c
   16750:	mov	r1, r4
   16754:	bl	129e8 <fputc@plt>
   16758:	b	16770 <print_full_field_name@@Base+0x210>
   1675c:	mov	r0, r9
   16760:	mov	r1, #2
   16764:	mov	r2, #1
   16768:	mov	r3, r4
   1676c:	bl	127cc <fwrite@plt>
   16770:	mov	r0, r4
   16774:	mov	r1, r6
   16778:	bl	1680c <print_full_field_name@@Base+0x2ac>
   1677c:	add	r6, r6, #1
   16780:	ldr	r0, [r7, #136]	; 0x88
   16784:	add	r5, r5, #1
   16788:	cmp	r5, r0
   1678c:	blt	16704 <print_full_field_name@@Base+0x1a4>
   16790:	cmp	sl, #0
   16794:	beq	167f0 <print_full_field_name@@Base+0x290>
   16798:	ldr	r0, [r7, #3360]	; 0xd20
   1679c:	cmp	r6, r0
   167a0:	bge	167f0 <print_full_field_name@@Base+0x290>
   167a4:	add	r0, r6, r6, lsl #2
   167a8:	add	r0, r7, r0, lsl #4
   167ac:	ldr	r0, [r0, #800]	; 0x320
   167b0:	cmp	r0, #0
   167b4:	beq	167c8 <print_full_field_name@@Base+0x268>
   167b8:	mov	r0, #44	; 0x2c
   167bc:	mov	r1, r4
   167c0:	bl	129e8 <fputc@plt>
   167c4:	b	167e0 <print_full_field_name@@Base+0x280>
   167c8:	movw	r0, #40233	; 0x9d29
   167cc:	mov	r1, #2
   167d0:	mov	r2, #1
   167d4:	mov	r3, r4
   167d8:	movt	r0, #1
   167dc:	bl	127cc <fwrite@plt>
   167e0:	mov	r0, r4
   167e4:	mov	r1, r6
   167e8:	bl	1680c <print_full_field_name@@Base+0x2ac>
   167ec:	add	r6, r6, #1
   167f0:	cmp	r6, #1
   167f4:	blt	16804 <print_full_field_name@@Base+0x2a4>
   167f8:	mov	r0, #93	; 0x5d
   167fc:	mov	r1, r4
   16800:	bl	129e8 <fputc@plt>
   16804:	sub	sp, fp, #28
   16808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1680c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16810:	add	fp, sp, #28
   16814:	sub	sp, sp, #4
   16818:	mov	r4, r0
   1681c:	add	r0, r1, r1, lsl #2
   16820:	movw	r1, #49640	; 0xc1e8
   16824:	movt	r1, #2
   16828:	add	r0, r1, r0, lsl #4
   1682c:	mov	r7, r0
   16830:	ldr	r1, [r7, #804]!	; 0x324
   16834:	cmp	r1, #1
   16838:	blt	168ec <print_full_field_name@@Base+0x38c>
   1683c:	movw	r8, #49636	; 0xc1e4
   16840:	movw	r9, #53424	; 0xd0b0
   16844:	add	sl, r0, #808	; 0x328
   16848:	add	r5, r0, #800	; 0x320
   1684c:	mov	r6, #0
   16850:	movt	r8, #2
   16854:	movt	r9, #2
   16858:	cmp	r6, #0
   1685c:	beq	1686c <print_full_field_name@@Base+0x30c>
   16860:	mov	r0, #44	; 0x2c
   16864:	mov	r1, r4
   16868:	bl	129e8 <fputc@plt>
   1686c:	ldr	r0, [r8]
   16870:	cmp	r0, #0
   16874:	beq	168ac <print_full_field_name@@Base+0x34c>
   16878:	ldr	r0, [r5]
   1687c:	add	r0, r6, r0
   16880:	add	r0, r9, r0, lsl #2
   16884:	ldr	r1, [r0, #72]	; 0x48
   16888:	cmp	r1, #0
   1688c:	beq	168c8 <print_full_field_name@@Base+0x368>
   16890:	ldr	r3, [r0, #4]
   16894:	ldr	r2, [r0, #36]	; 0x24
   16898:	movw	r1, #40236	; 0x9d2c
   1689c:	mov	r0, r4
   168a0:	movt	r1, #1
   168a4:	bl	128b0 <fprintf@plt>
   168a8:	b	168dc <print_full_field_name@@Base+0x37c>
   168ac:	ldr	r2, [sl, r6, lsl #2]
   168b0:	cmn	r2, #1
   168b4:	bne	168cc <print_full_field_name@@Base+0x36c>
   168b8:	mov	r0, #63	; 0x3f
   168bc:	mov	r1, r4
   168c0:	bl	129e8 <fputc@plt>
   168c4:	b	168dc <print_full_field_name@@Base+0x37c>
   168c8:	ldr	r2, [r0, #4]
   168cc:	movw	r1, #40240	; 0x9d30
   168d0:	mov	r0, r4
   168d4:	movt	r1, #1
   168d8:	bl	128b0 <fprintf@plt>
   168dc:	ldr	r0, [r7]
   168e0:	add	r6, r6, #1
   168e4:	cmp	r6, r0
   168e8:	blt	16858 <print_full_field_name@@Base+0x2f8>
   168ec:	sub	sp, fp, #28
   168f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000168f4 <traverse_info_init@@Base>:
   168f4:	movw	r0, #49640	; 0xc1e8
   168f8:	mov	r1, #0
   168fc:	movt	r0, #2
   16900:	str	r1, [r0, #3748]	; 0xea4
   16904:	str	r1, [r0, #3360]	; 0xd20
   16908:	str	r1, [r0, #136]	; 0x88
   1690c:	str	r1, [r0, #4]
   16910:	bx	lr

00016914 <traverse_info_done@@Base>:
   16914:	push	{r4, sl, fp, lr}
   16918:	add	fp, sp, #8
   1691c:	movw	r4, #49640	; 0xc1e8
   16920:	movt	r4, #2
   16924:	ldr	r0, [r4, #4]
   16928:	cmp	r0, #0
   1692c:	beq	16934 <traverse_info_done@@Base+0x20>
   16930:	bl	12994 <coda_close@plt>
   16934:	ldr	r0, [r4, #664]	; 0x298
   16938:	cmp	r0, #0
   1693c:	popeq	{r4, sl, fp, pc}
   16940:	add	r0, r4, #664	; 0x298
   16944:	pop	{r4, sl, fp, lr}
   16948:	b	156f8 <codadump_filter_remove@@Base>

0001694c <traverse_product@@Base>:
   1694c:	push	{r4, r5, fp, lr}
   16950:	add	fp, sp, #8
   16954:	movw	r5, #49640	; 0xc1e8
   16958:	movt	r5, #2
   1695c:	mov	r1, r5
   16960:	ldr	r0, [r1], #4
   16964:	bl	126ac <coda_open@plt>
   16968:	cmp	r0, #0
   1696c:	beq	169ac <traverse_product@@Base+0x60>
   16970:	bl	12a60 <coda_get_errno@plt>
   16974:	ldr	r0, [r0]
   16978:	cmn	r0, #21
   1697c:	bne	169a8 <traverse_product@@Base+0x5c>
   16980:	mov	r0, #0
   16984:	bl	126f4 <coda_set_option_use_mmap@plt>
   16988:	mov	r1, r5
   1698c:	ldr	r0, [r1], #4
   16990:	bl	126ac <coda_open@plt>
   16994:	mov	r4, r0
   16998:	mov	r0, #1
   1699c:	bl	126f4 <coda_set_option_use_mmap@plt>
   169a0:	cmp	r4, #0
   169a4:	beq	169ac <traverse_product@@Base+0x60>
   169a8:	bl	17bf4 <handle_coda_error@@Base>
   169ac:	ldr	r1, [r5, #4]
   169b0:	add	r4, r5, #144	; 0x90
   169b4:	mov	r0, r4
   169b8:	bl	127d8 <coda_cursor_set_product@plt>
   169bc:	cmp	r0, #0
   169c0:	beq	169c8 <traverse_product@@Base+0x7c>
   169c4:	bl	17bf4 <handle_coda_error@@Base>
   169c8:	ldr	r0, [r5, #136]	; 0x88
   169cc:	add	r0, r5, r0, lsl #2
   169d0:	add	r1, r0, #8
   169d4:	mov	r0, r4
   169d8:	bl	12730 <coda_cursor_get_type@plt>
   169dc:	cmp	r0, #0
   169e0:	beq	169e8 <traverse_product@@Base+0x9c>
   169e4:	bl	17bf4 <handle_coda_error@@Base>
   169e8:	bl	16a00 <traverse_product@@Base+0xb4>
   169ec:	ldr	r0, [r5, #4]
   169f0:	bl	12994 <coda_close@plt>
   169f4:	mov	r0, #0
   169f8:	str	r0, [r5, #4]
   169fc:	pop	{r4, r5, fp, pc}
   16a00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16a04:	add	fp, sp, #24
   16a08:	sub	sp, sp, #16
   16a0c:	movw	r6, #49640	; 0xc1e8
   16a10:	add	r1, sp, #12
   16a14:	movt	r6, #2
   16a18:	ldr	r0, [r6, #136]	; 0x88
   16a1c:	add	r0, r6, r0, lsl #2
   16a20:	ldr	r0, [r0, #8]
   16a24:	bl	12ac0 <coda_type_get_class@plt>
   16a28:	cmp	r0, #0
   16a2c:	beq	16a34 <traverse_product@@Base+0xe8>
   16a30:	bl	17bf4 <handle_coda_error@@Base>
   16a34:	ldr	r0, [sp, #12]
   16a38:	cmp	r0, #6
   16a3c:	bhi	16c80 <traverse_product@@Base+0x334>
   16a40:	add	r1, pc, #0
   16a44:	ldr	pc, [r1, r0, lsl #2]
   16a48:			; <UNDEFINED> instruction: 0x00016abc
   16a4c:			; <UNDEFINED> instruction: 0x00016bb8
   16a50:	andeq	r6, r1, r4, ror #20
   16a54:	andeq	r6, r1, r4, ror #20
   16a58:	andeq	r6, r1, r4, ror #20
   16a5c:	andeq	r6, r1, r4, ror #20
   16a60:	andeq	r6, r1, r0, lsl ip
   16a64:	ldr	r0, [r6, #136]	; 0x88
   16a68:	add	r1, sp, #8
   16a6c:	add	r0, r6, r0, lsl #2
   16a70:	ldr	r0, [r0, #8]
   16a74:	bl	12874 <coda_type_get_read_type@plt>
   16a78:	cmp	r0, #0
   16a7c:	beq	16a84 <traverse_product@@Base+0x138>
   16a80:	bl	17bf4 <handle_coda_error@@Base>
   16a84:	ldr	r0, [sp, #8]
   16a88:	sub	r0, r0, #11
   16a8c:	cmp	r0, #1
   16a90:	bhi	16c7c <traverse_product@@Base+0x330>
   16a94:	bl	1475c <dim_enter_array@@Base>
   16a98:	ldr	r0, [r6, #3360]	; 0xd20
   16a9c:	add	r0, r0, #1
   16aa0:	str	r0, [r6, #3360]	; 0xd20
   16aa4:	bl	16e38 <traverse_product@@Base+0x4ec>
   16aa8:	ldr	r0, [r6, #3360]	; 0xd20
   16aac:	sub	r0, r0, #1
   16ab0:	str	r0, [r6, #3360]	; 0xd20
   16ab4:	bl	152f0 <dim_leave_array@@Base>
   16ab8:	b	16c80 <traverse_product@@Base+0x334>
   16abc:	ldr	r0, [r6, #136]	; 0x88
   16ac0:	cmp	r0, #30
   16ac4:	bgt	16c80 <traverse_product@@Base+0x334>
   16ac8:	ldr	r1, [r6, #3748]	; 0xea4
   16acc:	add	r0, r6, r0, lsl #2
   16ad0:	add	r1, r1, #1
   16ad4:	str	r1, [r6, #3748]	; 0xea4
   16ad8:	add	r1, sp, #8
   16adc:	ldr	r0, [r0, #8]
   16ae0:	bl	1285c <coda_type_get_num_record_fields@plt>
   16ae4:	cmp	r0, #0
   16ae8:	beq	16af0 <traverse_product@@Base+0x1a4>
   16aec:	bl	17bf4 <handle_coda_error@@Base>
   16af0:	ldr	r0, [r6, #136]	; 0x88
   16af4:	add	r0, r0, #1
   16af8:	str	r0, [r6, #136]	; 0x88
   16afc:	ldr	r0, [r6, #796]	; 0x31c
   16b00:	add	r0, r6, r0, lsl #2
   16b04:	ldr	r8, [r0, #664]	; 0x298
   16b08:	cmp	r8, #0
   16b0c:	beq	16c88 <traverse_product@@Base+0x33c>
   16b10:	add	r4, sp, #4
   16b14:	add	r7, r6, #664	; 0x298
   16b18:	mov	r0, r8
   16b1c:	bl	157a4 <codadump_filter_get_fieldname@@Base>
   16b20:	cmp	r0, #0
   16b24:	beq	16cd8 <traverse_product@@Base+0x38c>
   16b28:	mov	r5, r0
   16b2c:	ldr	r0, [r6, #136]	; 0x88
   16b30:	mov	r2, r4
   16b34:	mov	r1, r5
   16b38:	add	r0, r6, r0, lsl #2
   16b3c:	ldr	r0, [r0, #4]
   16b40:	bl	129c4 <coda_type_get_record_field_index_from_name@plt>
   16b44:	cmp	r0, #0
   16b48:	beq	16b60 <traverse_product@@Base+0x214>
   16b4c:	bl	12a60 <coda_get_errno@plt>
   16b50:	ldr	r0, [r0]
   16b54:	cmn	r0, #102	; 0x66
   16b58:	beq	16cf8 <traverse_product@@Base+0x3ac>
   16b5c:	bl	17bf4 <handle_coda_error@@Base>
   16b60:	ldr	r0, [r6, #796]	; 0x31c
   16b64:	ldr	r0, [r7, r0, lsl #2]
   16b68:	bl	157d8 <codadump_filter_get_subfilter@@Base>
   16b6c:	ldr	r1, [r6, #796]	; 0x31c
   16b70:	add	r1, r1, #1
   16b74:	str	r0, [r7, r1, lsl #2]
   16b78:	ldr	r0, [sp, #4]
   16b7c:	str	r1, [r6, #796]	; 0x31c
   16b80:	mov	r1, #1
   16b84:	bl	16d1c <traverse_product@@Base+0x3d0>
   16b88:	ldr	r0, [r6, #796]	; 0x31c
   16b8c:	sub	r0, r0, #1
   16b90:	str	r0, [r6, #796]	; 0x31c
   16b94:	ldr	r0, [r7, r0, lsl #2]
   16b98:	bl	1580c <codadump_filter_get_next_filter@@Base>
   16b9c:	ldr	r2, [r6, #796]	; 0x31c
   16ba0:	mov	r1, r7
   16ba4:	cmp	r0, #0
   16ba8:	str	r0, [r1, r2, lsl #2]!
   16bac:	bne	16b1c <traverse_product@@Base+0x1d0>
   16bb0:	str	r8, [r1]
   16bb4:	b	16cbc <traverse_product@@Base+0x370>
   16bb8:	ldr	r0, [r6, #136]	; 0x88
   16bbc:	cmp	r0, #30
   16bc0:	bgt	16c80 <traverse_product@@Base+0x334>
   16bc4:	bl	1475c <dim_enter_array@@Base>
   16bc8:	ldr	r0, [r6, #3360]	; 0xd20
   16bcc:	add	r2, r6, #8
   16bd0:	add	r0, r0, #1
   16bd4:	str	r0, [r6, #3360]	; 0xd20
   16bd8:	ldr	r0, [r6, #136]	; 0x88
   16bdc:	add	r1, r0, #1
   16be0:	str	r1, [r6, #136]	; 0x88
   16be4:	add	r1, r2, r1, lsl #2
   16be8:	ldr	r0, [r2, r0, lsl #2]
   16bec:	bl	1294c <coda_type_get_array_base_type@plt>
   16bf0:	cmp	r0, #0
   16bf4:	beq	16bfc <traverse_product@@Base+0x2b0>
   16bf8:	bl	17bf4 <handle_coda_error@@Base>
   16bfc:	bl	16a00 <traverse_product@@Base+0xb4>
   16c00:	ldr	r0, [r6, #136]	; 0x88
   16c04:	sub	r0, r0, #1
   16c08:	str	r0, [r6, #136]	; 0x88
   16c0c:	b	16aa8 <traverse_product@@Base+0x15c>
   16c10:	bl	1264c <coda_get_option_bypass_special_types@plt>
   16c14:	mov	r2, r0
   16c18:	ldr	r0, [r6, #136]	; 0x88
   16c1c:	cmp	r2, #0
   16c20:	add	r1, r6, r0, lsl #2
   16c24:	ldr	r0, [r1, #8]!
   16c28:	beq	16c44 <traverse_product@@Base+0x2f8>
   16c2c:	bl	12a6c <coda_type_get_special_base_type@plt>
   16c30:	cmp	r0, #0
   16c34:	beq	16c3c <traverse_product@@Base+0x2f0>
   16c38:	bl	17bf4 <handle_coda_error@@Base>
   16c3c:	bl	16a00 <traverse_product@@Base+0xb4>
   16c40:	b	16c80 <traverse_product@@Base+0x334>
   16c44:	add	r1, sp, #8
   16c48:	bl	12928 <coda_type_get_special_type@plt>
   16c4c:	cmp	r0, #0
   16c50:	beq	16c58 <traverse_product@@Base+0x30c>
   16c54:	bl	17bf4 <handle_coda_error@@Base>
   16c58:	ldr	r0, [sp, #8]
   16c5c:	sub	r1, r0, #1
   16c60:	cmp	r1, #2
   16c64:	bcc	16c7c <traverse_product@@Base+0x330>
   16c68:	cmp	r0, #0
   16c6c:	beq	16c80 <traverse_product@@Base+0x334>
   16c70:	cmp	r0, #3
   16c74:	beq	16a94 <traverse_product@@Base+0x148>
   16c78:	b	16c80 <traverse_product@@Base+0x334>
   16c7c:	bl	16e38 <traverse_product@@Base+0x4ec>
   16c80:	sub	sp, fp, #24
   16c84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16c88:	ldr	r1, [sp, #8]
   16c8c:	mov	r0, #0
   16c90:	str	r0, [sp, #4]
   16c94:	cmp	r1, #1
   16c98:	blt	16cbc <traverse_product@@Base+0x370>
   16c9c:	mov	r1, #0
   16ca0:	bl	16d1c <traverse_product@@Base+0x3d0>
   16ca4:	ldr	r0, [sp, #4]
   16ca8:	ldr	r1, [sp, #8]
   16cac:	add	r0, r0, #1
   16cb0:	cmp	r0, r1
   16cb4:	str	r0, [sp, #4]
   16cb8:	blt	16c9c <traverse_product@@Base+0x350>
   16cbc:	ldr	r0, [r6, #136]	; 0x88
   16cc0:	sub	r0, r0, #1
   16cc4:	str	r0, [r6, #136]	; 0x88
   16cc8:	ldr	r0, [r6, #3748]	; 0xea4
   16ccc:	sub	r0, r0, #1
   16cd0:	str	r0, [r6, #3748]	; 0xea4
   16cd4:	b	16c80 <traverse_product@@Base+0x334>
   16cd8:	movw	r0, #40244	; 0x9d34
   16cdc:	movw	r1, #40257	; 0x9d41
   16ce0:	movw	r3, #40335	; 0x9d8f
   16ce4:	movw	r2, #393	; 0x189
   16ce8:	movt	r0, #1
   16cec:	movt	r1, #1
   16cf0:	movt	r3, #1
   16cf4:	bl	12ab4 <__assert_fail@plt>
   16cf8:	movw	r0, #49584	; 0xc1b0
   16cfc:	movw	r1, #40356	; 0x9da4
   16d00:	mov	r2, r5
   16d04:	movt	r0, #2
   16d08:	movt	r1, #1
   16d0c:	ldr	r0, [r0]
   16d10:	bl	128b0 <fprintf@plt>
   16d14:	mov	r0, #1
   16d18:	bl	12868 <exit@plt>
   16d1c:	push	{r4, r5, r6, sl, fp, lr}
   16d20:	add	fp, sp, #16
   16d24:	sub	sp, sp, #8
   16d28:	movw	r6, #49640	; 0xc1e8
   16d2c:	mov	r4, r0
   16d30:	mov	r5, r1
   16d34:	add	r2, sp, #4
   16d38:	movt	r6, #2
   16d3c:	mov	r1, r4
   16d40:	ldr	r0, [r6, #3748]	; 0xea4
   16d44:	add	r0, r6, r0, lsl #2
   16d48:	str	r4, [r0, #3488]	; 0xda0
   16d4c:	ldr	r0, [r6, #136]	; 0x88
   16d50:	add	r0, r6, r0, lsl #2
   16d54:	ldr	r0, [r0, #4]
   16d58:	bl	12670 <coda_type_get_record_field_hidden_status@plt>
   16d5c:	cmp	r0, #0
   16d60:	beq	16d68 <traverse_product@@Base+0x41c>
   16d64:	bl	17bf4 <handle_coda_error@@Base>
   16d68:	cmp	r5, #0
   16d6c:	bne	16d7c <traverse_product@@Base+0x430>
   16d70:	ldr	r0, [sp, #4]
   16d74:	cmp	r0, #0
   16d78:	bne	16e30 <traverse_product@@Base+0x4e4>
   16d7c:	movw	r0, #49636	; 0xc1e4
   16d80:	movt	r0, #2
   16d84:	ldr	r0, [r0]
   16d88:	cmp	r0, #0
   16d8c:	beq	16ddc <traverse_product@@Base+0x490>
   16d90:	ldr	r0, [r6, #136]	; 0x88
   16d94:	mov	r2, sp
   16d98:	mov	r1, r4
   16d9c:	add	r0, r6, r0, lsl #2
   16da0:	ldr	r0, [r0, #4]
   16da4:	bl	12760 <coda_type_get_record_field_available_status@plt>
   16da8:	cmp	r0, #0
   16dac:	beq	16db4 <traverse_product@@Base+0x468>
   16db0:	bl	17bf4 <handle_coda_error@@Base>
   16db4:	ldr	r0, [sp]
   16db8:	cmn	r0, #1
   16dbc:	bne	16dd0 <traverse_product@@Base+0x484>
   16dc0:	bl	15418 <dim_record_field_available@@Base>
   16dc4:	cmp	r0, #0
   16dc8:	beq	16e30 <traverse_product@@Base+0x4e4>
   16dcc:	ldr	r0, [sp]
   16dd0:	ldr	r1, [r6, #136]	; 0x88
   16dd4:	add	r1, r6, r1, lsl #2
   16dd8:	str	r0, [r1, #3360]	; 0xd20
   16ddc:	ldr	r0, [r6, #136]	; 0x88
   16de0:	ldr	r1, [r6, #3748]	; 0xea4
   16de4:	add	r0, r6, r0, lsl #2
   16de8:	add	r1, r6, r1, lsl #2
   16dec:	ldr	r0, [r0, #4]
   16df0:	add	r2, r1, #3616	; 0xe20
   16df4:	mov	r1, r4
   16df8:	bl	12a78 <coda_type_get_record_field_name@plt>
   16dfc:	cmp	r0, #0
   16e00:	beq	16e08 <traverse_product@@Base+0x4bc>
   16e04:	bl	17bf4 <handle_coda_error@@Base>
   16e08:	ldr	r0, [r6, #136]	; 0x88
   16e0c:	add	r1, r6, r0, lsl #2
   16e10:	ldr	r0, [r1, #4]
   16e14:	add	r2, r1, #8
   16e18:	mov	r1, r4
   16e1c:	bl	12724 <coda_type_get_record_field_type@plt>
   16e20:	cmp	r0, #0
   16e24:	beq	16e2c <traverse_product@@Base+0x4e0>
   16e28:	bl	17bf4 <handle_coda_error@@Base>
   16e2c:	bl	16a00 <traverse_product@@Base+0xb4>
   16e30:	sub	sp, fp, #16
   16e34:	pop	{r4, r5, r6, sl, fp, pc}
   16e38:	push	{r4, r5, fp, lr}
   16e3c:	add	fp, sp, #8
   16e40:	sub	sp, sp, #8
   16e44:	movw	r0, #53412	; 0xd0a4
   16e48:	movt	r0, #2
   16e4c:	ldr	r0, [r0]
   16e50:	cmp	r0, #1
   16e54:	beq	16efc <traverse_product@@Base+0x5b0>
   16e58:	cmp	r0, #0
   16e5c:	bne	17074 <traverse_product@@Base+0x728>
   16e60:	movw	r5, #49588	; 0xc1b4
   16e64:	mov	r1, #1
   16e68:	mov	r2, #0
   16e6c:	movt	r5, #2
   16e70:	ldr	r0, [r5]
   16e74:	bl	16560 <print_full_field_name@@Base>
   16e78:	movw	r0, #53400	; 0xd098
   16e7c:	movw	r4, #49640	; 0xc1e8
   16e80:	movt	r0, #2
   16e84:	movt	r4, #2
   16e88:	ldr	r0, [r0]
   16e8c:	cmp	r0, #0
   16e90:	beq	16f78 <traverse_product@@Base+0x62c>
   16e94:	ldr	r0, [r4, #136]	; 0x88
   16e98:	add	r1, sp, #4
   16e9c:	add	r0, r4, r0, lsl #2
   16ea0:	ldr	r0, [r0, #8]
   16ea4:	bl	12ac0 <coda_type_get_class@plt>
   16ea8:	cmp	r0, #0
   16eac:	beq	16eb4 <traverse_product@@Base+0x568>
   16eb0:	bl	17bf4 <handle_coda_error@@Base>
   16eb4:	ldr	r0, [sp, #4]
   16eb8:	cmp	r0, #6
   16ebc:	bne	16f08 <traverse_product@@Base+0x5bc>
   16ec0:	ldr	r0, [r4, #136]	; 0x88
   16ec4:	mov	r1, sp
   16ec8:	add	r0, r4, r0, lsl #2
   16ecc:	ldr	r0, [r0, #8]
   16ed0:	bl	12928 <coda_type_get_special_type@plt>
   16ed4:	cmp	r0, #0
   16ed8:	beq	16ee0 <traverse_product@@Base+0x594>
   16edc:	bl	17bf4 <handle_coda_error@@Base>
   16ee0:	ldr	r0, [sp]
   16ee4:	bl	12628 <coda_type_get_special_type_name@plt>
   16ee8:	mov	r1, r0
   16eec:	movw	r0, #40408	; 0x9dd8
   16ef0:	movt	r0, #1
   16ef4:	bl	1267c <printf@plt>
   16ef8:	b	16f78 <traverse_product@@Base+0x62c>
   16efc:	sub	sp, fp, #8
   16f00:	pop	{r4, r5, fp, lr}
   16f04:	b	12bbc <export_data_element_to_ascii@@Base>
   16f08:	ldr	r0, [r4, #136]	; 0x88
   16f0c:	mov	r1, sp
   16f10:	add	r0, r4, r0, lsl #2
   16f14:	ldr	r0, [r0, #8]
   16f18:	bl	12874 <coda_type_get_read_type@plt>
   16f1c:	cmp	r0, #0
   16f20:	beq	16f28 <traverse_product@@Base+0x5dc>
   16f24:	bl	17bf4 <handle_coda_error@@Base>
   16f28:	ldr	r0, [sp]
   16f2c:	bl	12970 <coda_type_get_native_type_name@plt>
   16f30:	mov	r1, r0
   16f34:	movw	r0, #40408	; 0x9dd8
   16f38:	movt	r0, #1
   16f3c:	bl	1267c <printf@plt>
   16f40:	ldr	r0, [sp]
   16f44:	sub	r0, r0, #11
   16f48:	cmp	r0, #1
   16f4c:	bhi	16f78 <traverse_product@@Base+0x62c>
   16f50:	mov	r0, #40	; 0x28
   16f54:	bl	12910 <putchar@plt>
   16f58:	ldr	r1, [r4, #3360]	; 0xd20
   16f5c:	cmp	r1, #0
   16f60:	ble	1707c <traverse_product@@Base+0x730>
   16f64:	ldr	r0, [r5]
   16f68:	sub	r1, r1, #1
   16f6c:	bl	1680c <print_full_field_name@@Base+0x2ac>
   16f70:	mov	r0, #41	; 0x29
   16f74:	bl	12910 <putchar@plt>
   16f78:	movw	r0, #49632	; 0xc1e0
   16f7c:	movt	r0, #2
   16f80:	ldr	r0, [r0]
   16f84:	cmp	r0, #0
   16f88:	beq	16fd0 <traverse_product@@Base+0x684>
   16f8c:	ldr	r0, [r4, #136]	; 0x88
   16f90:	add	r1, sp, #4
   16f94:	add	r0, r4, r0, lsl #2
   16f98:	ldr	r0, [r0, #8]
   16f9c:	bl	1279c <coda_type_get_unit@plt>
   16fa0:	cmp	r0, #0
   16fa4:	beq	16fac <traverse_product@@Base+0x660>
   16fa8:	bl	17bf4 <handle_coda_error@@Base>
   16fac:	ldr	r1, [sp, #4]
   16fb0:	cmp	r1, #0
   16fb4:	beq	16fd0 <traverse_product@@Base+0x684>
   16fb8:	ldrb	r0, [r1]
   16fbc:	cmp	r0, #0
   16fc0:	beq	16fd0 <traverse_product@@Base+0x684>
   16fc4:	movw	r0, #40468	; 0x9e14
   16fc8:	movt	r0, #1
   16fcc:	bl	1267c <printf@plt>
   16fd0:	movw	r0, #53404	; 0xd09c
   16fd4:	movt	r0, #2
   16fd8:	ldr	r0, [r0]
   16fdc:	cmp	r0, #0
   16fe0:	beq	17028 <traverse_product@@Base+0x6dc>
   16fe4:	ldr	r0, [r4, #136]	; 0x88
   16fe8:	add	r1, sp, #4
   16fec:	add	r0, r4, r0, lsl #2
   16ff0:	ldr	r0, [r0, #8]
   16ff4:	bl	127a8 <coda_type_get_description@plt>
   16ff8:	cmp	r0, #0
   16ffc:	beq	17004 <traverse_product@@Base+0x6b8>
   17000:	bl	17bf4 <handle_coda_error@@Base>
   17004:	ldr	r1, [sp, #4]
   17008:	cmp	r1, #0
   1700c:	beq	17028 <traverse_product@@Base+0x6dc>
   17010:	ldrb	r0, [r1]
   17014:	cmp	r0, #0
   17018:	beq	17028 <traverse_product@@Base+0x6dc>
   1701c:	movw	r0, #40474	; 0x9e1a
   17020:	movt	r0, #1
   17024:	bl	1267c <printf@plt>
   17028:	mov	r0, #10
   1702c:	bl	12910 <putchar@plt>
   17030:	movw	r0, #49620	; 0xc1d4
   17034:	movt	r0, #2
   17038:	ldr	r0, [r0]
   1703c:	cmp	r0, #0
   17040:	beq	17074 <traverse_product@@Base+0x728>
   17044:	movw	r5, #53424	; 0xd0b0
   17048:	movt	r5, #2
   1704c:	ldr	r0, [r5]
   17050:	cmp	r0, #1
   17054:	blt	17074 <traverse_product@@Base+0x728>
   17058:	mov	r4, #0
   1705c:	mov	r0, r4
   17060:	bl	1458c <print_all_distinct_dims@@Base>
   17064:	ldr	r0, [r5]
   17068:	add	r4, r4, #1
   1706c:	cmp	r4, r0
   17070:	blt	1705c <traverse_product@@Base+0x710>
   17074:	sub	sp, fp, #8
   17078:	pop	{r4, r5, fp, pc}
   1707c:	movw	r0, #40412	; 0x9ddc
   17080:	movw	r1, #40257	; 0x9d41
   17084:	movw	r3, #40441	; 0x9df9
   17088:	mov	r2, #238	; 0xee
   1708c:	movt	r0, #1
   17090:	movt	r1, #1
   17094:	movt	r3, #1
   17098:	bl	12ab4 <__assert_fail@plt>

0001709c <print_yaml_data@@Base>:
   1709c:	push	{r4, sl, fp, lr}
   170a0:	add	fp, sp, #8
   170a4:	sub	sp, sp, #528	; 0x210
   170a8:	movw	r1, #49608	; 0xc1c8
   170ac:	movw	r4, #49640	; 0xc1e8
   170b0:	movt	r1, #2
   170b4:	movt	r4, #2
   170b8:	str	r0, [r1]
   170bc:	ldr	r0, [r4]
   170c0:	sub	r1, fp, #12
   170c4:	bl	126ac <coda_open@plt>
   170c8:	cmp	r0, #0
   170cc:	beq	1710c <print_yaml_data@@Base+0x70>
   170d0:	bl	12a60 <coda_get_errno@plt>
   170d4:	ldr	r0, [r0]
   170d8:	cmn	r0, #21
   170dc:	bne	17108 <print_yaml_data@@Base+0x6c>
   170e0:	mov	r0, #0
   170e4:	bl	126f4 <coda_set_option_use_mmap@plt>
   170e8:	ldr	r0, [r4]
   170ec:	sub	r1, fp, #12
   170f0:	bl	126ac <coda_open@plt>
   170f4:	mov	r4, r0
   170f8:	mov	r0, #1
   170fc:	bl	126f4 <coda_set_option_use_mmap@plt>
   17100:	cmp	r4, #0
   17104:	beq	1710c <print_yaml_data@@Base+0x70>
   17108:	bl	17bf4 <handle_coda_error@@Base>
   1710c:	ldr	r1, [fp, #-12]
   17110:	mov	r0, sp
   17114:	bl	127d8 <coda_cursor_set_product@plt>
   17118:	cmp	r0, #0
   1711c:	beq	17124 <print_yaml_data@@Base+0x88>
   17120:	bl	17bf4 <handle_coda_error@@Base>
   17124:	movw	r0, #53416	; 0xd0a8
   17128:	movt	r0, #2
   1712c:	ldr	r1, [r0]
   17130:	cmp	r1, #0
   17134:	beq	1714c <print_yaml_data@@Base+0xb0>
   17138:	mov	r0, sp
   1713c:	bl	129b8 <coda_cursor_goto@plt>
   17140:	cmp	r0, #0
   17144:	beq	1714c <print_yaml_data@@Base+0xb0>
   17148:	bl	17bf4 <handle_coda_error@@Base>
   1714c:	mov	r0, #0
   17150:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   17154:	mov	r0, sp
   17158:	mov	r1, #0
   1715c:	bl	17170 <print_yaml_data@@Base+0xd4>
   17160:	ldr	r0, [fp, #-12]
   17164:	bl	12994 <coda_close@plt>
   17168:	sub	sp, fp, #8
   1716c:	pop	{r4, sl, fp, pc}
   17170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17174:	add	fp, sp, #28
   17178:	sub	sp, sp, #76	; 0x4c
   1717c:	mov	r9, r0
   17180:	mov	r0, #0
   17184:	movw	r8, #49612	; 0xc1cc
   17188:	mov	r5, r1
   1718c:	str	r0, [fp, #-36]	; 0xffffffdc
   17190:	movw	r0, #49608	; 0xc1c8
   17194:	movt	r8, #2
   17198:	movt	r0, #2
   1719c:	ldr	r0, [r0]
   171a0:	cmp	r0, #0
   171a4:	beq	17248 <print_yaml_data@@Base+0x1ac>
   171a8:	sub	r1, fp, #36	; 0x24
   171ac:	mov	r0, r9
   171b0:	bl	1276c <coda_cursor_has_attributes@plt>
   171b4:	cmp	r0, #0
   171b8:	beq	171c0 <print_yaml_data@@Base+0x124>
   171bc:	bl	17bf4 <handle_coda_error@@Base>
   171c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   171c4:	cmp	r0, #0
   171c8:	beq	17248 <print_yaml_data@@Base+0x1ac>
   171cc:	cmp	r5, #0
   171d0:	beq	171e4 <print_yaml_data@@Base+0x148>
   171d4:	movw	r0, #40854	; 0x9f96
   171d8:	movt	r0, #1
   171dc:	bl	179e4 <print_yaml_data@@Base+0x948>
   171e0:	bl	17a2c <print_yaml_data@@Base+0x990>
   171e4:	movw	r0, #40480	; 0x9e20
   171e8:	movt	r0, #1
   171ec:	bl	179e4 <print_yaml_data@@Base+0x948>
   171f0:	mov	r0, r9
   171f4:	bl	128ec <coda_cursor_goto_attributes@plt>
   171f8:	cmp	r0, #0
   171fc:	beq	17204 <print_yaml_data@@Base+0x168>
   17200:	bl	17bf4 <handle_coda_error@@Base>
   17204:	ldr	r0, [r8]
   17208:	mov	r1, #1
   1720c:	add	r0, r0, #1
   17210:	str	r0, [r8]
   17214:	mov	r0, r9
   17218:	bl	17170 <print_yaml_data@@Base+0xd4>
   1721c:	ldr	r0, [r8]
   17220:	sub	r0, r0, #1
   17224:	str	r0, [r8]
   17228:	mov	r0, r9
   1722c:	bl	12850 <coda_cursor_goto_parent@plt>
   17230:	movw	r0, #40487	; 0x9e27
   17234:	movt	r0, #1
   17238:	bl	17aa0 <print_yaml_data@@Base+0xa04>
   1723c:	ldr	r0, [r8]
   17240:	add	r0, r0, #1
   17244:	str	r0, [r8]
   17248:	sub	r1, fp, #32
   1724c:	mov	r0, r9
   17250:	bl	12778 <coda_cursor_get_type_class@plt>
   17254:	cmp	r0, #0
   17258:	beq	17260 <print_yaml_data@@Base+0x1c4>
   1725c:	bl	17bf4 <handle_coda_error@@Base>
   17260:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17264:	cmp	r0, #6
   17268:	bhi	17994 <print_yaml_data@@Base+0x8f8>
   1726c:	add	r1, pc, #0
   17270:	ldr	pc, [r1, r0, lsl #2]
   17274:	andeq	r7, r1, r0, lsr #6
   17278:	andeq	r7, r1, ip, lsl r4
   1727c:	muleq	r1, r0, r2
   17280:	muleq	r1, r0, r2
   17284:	muleq	r1, r0, r2
   17288:	muleq	r1, r0, r2
   1728c:	strdeq	r7, [r1], -r0
   17290:	sub	r1, fp, #40	; 0x28
   17294:	mov	r0, r9
   17298:	bl	12814 <coda_cursor_get_read_type@plt>
   1729c:	cmp	r0, #0
   172a0:	beq	172a8 <print_yaml_data@@Base+0x20c>
   172a4:	bl	17bf4 <handle_coda_error@@Base>
   172a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   172ac:	add	r0, r0, #1
   172b0:	cmp	r0, #13
   172b4:	bhi	17994 <print_yaml_data@@Base+0x8f8>
   172b8:	add	r1, pc, #0
   172bc:	ldr	pc, [r1, r0, lsl #2]
   172c0:	andeq	r7, r1, ip, lsr #10
   172c4:	strdeq	r7, [r1], -r8
   172c8:	andeq	r7, r1, r8, lsr r5
   172cc:	strdeq	r7, [r1], -r8
   172d0:	andeq	r7, r1, r8, lsr r5
   172d4:	strdeq	r7, [r1], -r8
   172d8:	andeq	r7, r1, r8, lsr r5
   172dc:			; <UNDEFINED> instruction: 0x000175b8
   172e0:	andeq	r7, r1, r8, ror #11
   172e4:	andeq	r7, r1, r0, ror #10
   172e8:	andeq	r7, r1, r0, ror #10
   172ec:	andeq	r7, r1, r8, lsr #12
   172f0:	andeq	r7, r1, r8, ror #12
   172f4:	andeq	r7, r1, r4, lsl r7
   172f8:	add	r1, sp, #16
   172fc:	mov	r0, r9
   17300:	bl	12a3c <coda_cursor_read_int32@plt>
   17304:	cmp	r0, #0
   17308:	beq	17310 <print_yaml_data@@Base+0x274>
   1730c:	bl	17bf4 <handle_coda_error@@Base>
   17310:	ldr	r1, [sp, #16]
   17314:	movw	r0, #38847	; 0x97bf
   17318:	movt	r0, #1
   1731c:	b	17620 <print_yaml_data@@Base+0x584>
   17320:	add	r1, sp, #16
   17324:	mov	r0, r9
   17328:	bl	126d0 <coda_cursor_get_num_elements@plt>
   1732c:	cmp	r0, #0
   17330:	beq	17338 <print_yaml_data@@Base+0x29c>
   17334:	bl	17bf4 <handle_coda_error@@Base>
   17338:	ldr	r0, [sp, #16]
   1733c:	cmp	r0, #1
   17340:	blt	175ac <print_yaml_data@@Base+0x510>
   17344:	cmp	r5, #0
   17348:	movwne	r0, #40854	; 0x9f96
   1734c:	movtne	r0, #1
   17350:	blne	179e4 <print_yaml_data@@Base+0x948>
   17354:	add	r1, sp, #8
   17358:	mov	r0, r9
   1735c:	bl	12730 <coda_cursor_get_type@plt>
   17360:	cmp	r0, #0
   17364:	beq	1736c <print_yaml_data@@Base+0x2d0>
   17368:	bl	17bf4 <handle_coda_error@@Base>
   1736c:	ldr	r0, [sp, #8]
   17370:	sub	r1, fp, #40	; 0x28
   17374:	bl	12934 <coda_type_get_record_union_status@plt>
   17378:	cmp	r0, #0
   1737c:	beq	17384 <print_yaml_data@@Base+0x2e8>
   17380:	bl	17bf4 <handle_coda_error@@Base>
   17384:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17388:	cmp	r0, #0
   1738c:	beq	177dc <print_yaml_data@@Base+0x740>
   17390:	sub	r1, fp, #44	; 0x2c
   17394:	mov	r0, r9
   17398:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   1739c:	cmp	r0, #0
   173a0:	beq	173a8 <print_yaml_data@@Base+0x30c>
   173a4:	bl	17bf4 <handle_coda_error@@Base>
   173a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   173ac:	ldr	r0, [sp, #8]
   173b0:	sub	r2, fp, #48	; 0x30
   173b4:	bl	12a78 <coda_type_get_record_field_name@plt>
   173b8:	cmp	r0, #0
   173bc:	beq	173c4 <print_yaml_data@@Base+0x328>
   173c0:	bl	17bf4 <handle_coda_error@@Base>
   173c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   173c8:	mov	r0, r9
   173cc:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   173d0:	cmp	r0, #0
   173d4:	beq	173dc <print_yaml_data@@Base+0x340>
   173d8:	bl	17bf4 <handle_coda_error@@Base>
   173dc:	cmp	r5, #0
   173e0:	blne	17a2c <print_yaml_data@@Base+0x990>
   173e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   173e8:	movw	r0, #40494	; 0x9e2e
   173ec:	movt	r0, #1
   173f0:	bl	179e4 <print_yaml_data@@Base+0x948>
   173f4:	ldr	r0, [r8]
   173f8:	mov	r1, #1
   173fc:	add	r0, r0, #1
   17400:	str	r0, [r8]
   17404:	mov	r0, r9
   17408:	bl	17170 <print_yaml_data@@Base+0xd4>
   1740c:	ldr	r0, [r8]
   17410:	sub	r0, r0, #1
   17414:	str	r0, [r8]
   17418:	b	178e4 <print_yaml_data@@Base+0x848>
   1741c:	add	r5, sp, #16
   17420:	add	r1, sp, #8
   17424:	mov	r0, r9
   17428:	mov	r2, r5
   1742c:	bl	1297c <coda_cursor_get_array_dim@plt>
   17430:	cmp	r0, #0
   17434:	beq	1743c <print_yaml_data@@Base+0x3a0>
   17438:	bl	17bf4 <handle_coda_error@@Base>
   1743c:	ldr	r0, [sp, #8]
   17440:	cmp	r0, #0
   17444:	bmi	175a0 <print_yaml_data@@Base+0x504>
   17448:	mov	r6, #1
   1744c:	beq	17468 <print_yaml_data@@Base+0x3cc>
   17450:	ldr	r1, [r5], #4
   17454:	subs	r0, r0, #1
   17458:	mul	r6, r1, r6
   1745c:	bne	17450 <print_yaml_data@@Base+0x3b4>
   17460:	cmp	r6, #1
   17464:	blt	175a0 <print_yaml_data@@Base+0x504>
   17468:	movw	r0, #40854	; 0x9f96
   1746c:	movt	r0, #1
   17470:	bl	179e4 <print_yaml_data@@Base+0x948>
   17474:	mov	r0, r9
   17478:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   1747c:	cmp	r0, #0
   17480:	beq	17488 <print_yaml_data@@Base+0x3ec>
   17484:	bl	17bf4 <handle_coda_error@@Base>
   17488:	movw	r5, #40503	; 0x9e37
   1748c:	sub	r7, r6, #1
   17490:	mov	r4, #0
   17494:	movt	r5, #1
   17498:	mov	r0, r5
   1749c:	bl	17aa0 <print_yaml_data@@Base+0xa04>
   174a0:	ldr	r0, [r8]
   174a4:	mov	r1, #0
   174a8:	add	r0, r0, #1
   174ac:	str	r0, [r8]
   174b0:	mov	r0, r9
   174b4:	bl	17170 <print_yaml_data@@Base+0xd4>
   174b8:	ldr	r0, [r8]
   174bc:	cmp	r4, r7
   174c0:	sub	r0, r0, #1
   174c4:	str	r0, [r8]
   174c8:	bge	174e0 <print_yaml_data@@Base+0x444>
   174cc:	mov	r0, r9
   174d0:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   174d4:	cmp	r0, #0
   174d8:	beq	174e0 <print_yaml_data@@Base+0x444>
   174dc:	bl	17bf4 <handle_coda_error@@Base>
   174e0:	add	r4, r4, #1
   174e4:	cmp	r6, r4
   174e8:	bne	17498 <print_yaml_data@@Base+0x3fc>
   174ec:	b	178e4 <print_yaml_data@@Base+0x848>
   174f0:	sub	r1, fp, #40	; 0x28
   174f4:	mov	r0, r9
   174f8:	bl	127b4 <coda_cursor_get_special_type@plt>
   174fc:	cmp	r0, #0
   17500:	beq	17508 <print_yaml_data@@Base+0x46c>
   17504:	bl	17bf4 <handle_coda_error@@Base>
   17508:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1750c:	cmp	r0, #3
   17510:	bhi	17994 <print_yaml_data@@Base+0x8f8>
   17514:	add	r1, pc, #0
   17518:	ldr	pc, [r1, r0, lsl #2]
   1751c:	andeq	r7, r1, ip, lsr #10
   17520:	strdeq	r7, [r1], -r0
   17524:	andeq	r7, r1, r0, lsl r9
   17528:	andeq	r7, r1, ip, asr r9
   1752c:	movw	r0, #40584	; 0x9e88
   17530:	movt	r0, #1
   17534:	b	17660 <print_yaml_data@@Base+0x5c4>
   17538:	add	r1, sp, #16
   1753c:	mov	r0, r9
   17540:	bl	1270c <coda_cursor_read_uint32@plt>
   17544:	cmp	r0, #0
   17548:	beq	17550 <print_yaml_data@@Base+0x4b4>
   1754c:	bl	17bf4 <handle_coda_error@@Base>
   17550:	ldr	r1, [sp, #16]
   17554:	movw	r0, #38852	; 0x97c4
   17558:	movt	r0, #1
   1755c:	b	17620 <print_yaml_data@@Base+0x584>
   17560:	add	r1, sp, #16
   17564:	mov	r0, r9
   17568:	bl	12898 <coda_cursor_read_double@plt>
   1756c:	cmp	r0, #0
   17570:	beq	17578 <print_yaml_data@@Base+0x4dc>
   17574:	bl	17bf4 <handle_coda_error@@Base>
   17578:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1757c:	vldr	d16, [sp, #16]
   17580:	movw	r2, #38857	; 0x97c9
   17584:	movw	r0, #38923	; 0x980b
   17588:	movt	r2, #1
   1758c:	movt	r0, #1
   17590:	cmp	r1, #8
   17594:	moveq	r0, r2
   17598:	vmov	r2, r3, d16
   1759c:	b	17990 <print_yaml_data@@Base+0x8f4>
   175a0:	movw	r0, #40506	; 0x9e3a
   175a4:	movt	r0, #1
   175a8:	b	17660 <print_yaml_data@@Base+0x5c4>
   175ac:	movw	r0, #40499	; 0x9e33
   175b0:	movt	r0, #1
   175b4:	b	17660 <print_yaml_data@@Base+0x5c4>
   175b8:	add	r1, sp, #8
   175bc:	mov	r0, r9
   175c0:	bl	129a0 <coda_cursor_read_int64@plt>
   175c4:	cmp	r0, #0
   175c8:	beq	175d0 <print_yaml_data@@Base+0x534>
   175cc:	bl	17bf4 <handle_coda_error@@Base>
   175d0:	ldr	r0, [sp, #8]
   175d4:	ldr	r1, [sp, #12]
   175d8:	add	r4, sp, #16
   175dc:	mov	r2, r4
   175e0:	bl	12aa8 <coda_str64@plt>
   175e4:	b	17614 <print_yaml_data@@Base+0x578>
   175e8:	add	r1, sp, #8
   175ec:	mov	r0, r9
   175f0:	bl	1288c <coda_cursor_read_uint64@plt>
   175f4:	cmp	r0, #0
   175f8:	beq	17600 <print_yaml_data@@Base+0x564>
   175fc:	bl	17bf4 <handle_coda_error@@Base>
   17600:	ldr	r0, [sp, #8]
   17604:	ldr	r1, [sp, #12]
   17608:	add	r4, sp, #16
   1760c:	mov	r2, r4
   17610:	bl	126dc <coda_str64u@plt>
   17614:	movw	r0, #40597	; 0x9e95
   17618:	mov	r1, r4
   1761c:	movt	r0, #1
   17620:	bl	179e4 <print_yaml_data@@Base+0x948>
   17624:	b	17994 <print_yaml_data@@Base+0x8f8>
   17628:	add	r1, sp, #16
   1762c:	mov	r0, r9
   17630:	bl	128f8 <coda_cursor_read_char@plt>
   17634:	cmp	r0, #0
   17638:	beq	17640 <print_yaml_data@@Base+0x5a4>
   1763c:	bl	17bf4 <handle_coda_error@@Base>
   17640:	movw	r0, #40220	; 0x9d1c
   17644:	movt	r0, #1
   17648:	bl	179e4 <print_yaml_data@@Base+0x948>
   1764c:	add	r0, sp, #16
   17650:	mov	r1, #1
   17654:	bl	17aec <print_yaml_data@@Base+0xa50>
   17658:	movw	r0, #40853	; 0x9f95
   1765c:	movt	r0, #1
   17660:	bl	179e4 <print_yaml_data@@Base+0x948>
   17664:	b	17994 <print_yaml_data@@Base+0x8f8>
   17668:	add	r1, sp, #16
   1766c:	mov	r0, r9
   17670:	bl	12880 <coda_cursor_get_string_length@plt>
   17674:	cmp	r0, #0
   17678:	beq	17680 <print_yaml_data@@Base+0x5e4>
   1767c:	bl	17bf4 <handle_coda_error@@Base>
   17680:	ldr	r0, [sp, #16]
   17684:	add	r6, r0, #1
   17688:	mov	r0, r6
   1768c:	bl	12820 <malloc@plt>
   17690:	mov	r5, r0
   17694:	cmp	r0, #0
   17698:	bne	176cc <print_yaml_data@@Base+0x630>
   1769c:	movw	r1, #38433	; 0x9621
   176a0:	movw	r3, #40510	; 0x9e3e
   176a4:	movw	r0, #361	; 0x169
   176a8:	mov	r2, r6
   176ac:	movt	r1, #1
   176b0:	movt	r3, #1
   176b4:	str	r0, [sp]
   176b8:	mvn	r0, #0
   176bc:	bl	126a0 <coda_set_error@plt>
   176c0:	bl	17bf4 <handle_coda_error@@Base>
   176c4:	ldr	r0, [sp, #16]
   176c8:	add	r6, r0, #1
   176cc:	mov	r0, r9
   176d0:	mov	r1, r5
   176d4:	mov	r2, r6
   176d8:	bl	12844 <coda_cursor_read_string@plt>
   176dc:	cmp	r0, #0
   176e0:	beq	176e8 <print_yaml_data@@Base+0x64c>
   176e4:	bl	17bf4 <handle_coda_error@@Base>
   176e8:	movw	r0, #40220	; 0x9d1c
   176ec:	movt	r0, #1
   176f0:	bl	179e4 <print_yaml_data@@Base+0x948>
   176f4:	ldr	r1, [sp, #16]
   176f8:	mov	r0, r5
   176fc:	bl	17aec <print_yaml_data@@Base+0xa50>
   17700:	ldr	r1, [sp, #16]
   17704:	movw	r0, #40853	; 0x9f95
   17708:	movt	r0, #1
   1770c:	bl	179e4 <print_yaml_data@@Base+0x948>
   17710:	b	177d0 <print_yaml_data@@Base+0x734>
   17714:	add	r1, sp, #16
   17718:	mov	r0, r9
   1771c:	bl	12a00 <coda_cursor_get_bit_size@plt>
   17720:	cmp	r0, #0
   17724:	beq	1772c <print_yaml_data@@Base+0x690>
   17728:	bl	17bf4 <handle_coda_error@@Base>
   1772c:	ldr	r4, [sp, #16]
   17730:	ldr	r7, [sp, #20]
   17734:	lsr	r0, r4, #3
   17738:	tst	r4, #7
   1773c:	orr	r6, r0, r7, lsl #29
   17740:	addne	r6, r6, #1
   17744:	mov	r0, r6
   17748:	bl	12820 <malloc@plt>
   1774c:	mov	r5, r0
   17750:	cmp	r0, #0
   17754:	bne	17788 <print_yaml_data@@Base+0x6ec>
   17758:	movw	r1, #38433	; 0x9621
   1775c:	movw	r3, #40510	; 0x9e3e
   17760:	mov	r0, #392	; 0x188
   17764:	mov	r2, r6
   17768:	movt	r1, #1
   1776c:	movt	r3, #1
   17770:	str	r0, [sp]
   17774:	mvn	r0, #0
   17778:	bl	126a0 <coda_set_error@plt>
   1777c:	bl	17bf4 <handle_coda_error@@Base>
   17780:	ldr	r4, [sp, #16]
   17784:	ldr	r7, [sp, #20]
   17788:	mov	r0, r9
   1778c:	mov	r1, r5
   17790:	mov	r2, #0
   17794:	mov	r3, #0
   17798:	stm	sp, {r4, r7}
   1779c:	bl	12a9c <coda_cursor_read_bits@plt>
   177a0:	cmp	r0, #0
   177a4:	beq	177ac <print_yaml_data@@Base+0x710>
   177a8:	bl	17bf4 <handle_coda_error@@Base>
   177ac:	movw	r0, #40220	; 0x9d1c
   177b0:	movt	r0, #1
   177b4:	bl	179e4 <print_yaml_data@@Base+0x948>
   177b8:	mov	r0, r5
   177bc:	mov	r1, r6
   177c0:	bl	17aec <print_yaml_data@@Base+0xa50>
   177c4:	movw	r0, #40853	; 0x9f95
   177c8:	movt	r0, #1
   177cc:	bl	179e4 <print_yaml_data@@Base+0x948>
   177d0:	mov	r0, r5
   177d4:	bl	126e8 <free@plt>
   177d8:	b	17994 <print_yaml_data@@Base+0x8f8>
   177dc:	mov	r0, r9
   177e0:	bl	127e4 <coda_cursor_goto_first_record_field@plt>
   177e4:	cmp	r0, #0
   177e8:	beq	177f0 <print_yaml_data@@Base+0x754>
   177ec:	bl	17bf4 <handle_coda_error@@Base>
   177f0:	ldr	r0, [sp, #16]
   177f4:	mov	r1, #0
   177f8:	str	r1, [fp, #-44]	; 0xffffffd4
   177fc:	cmp	r0, #1
   17800:	blt	178e4 <print_yaml_data@@Base+0x848>
   17804:	movw	r4, #40494	; 0x9e2e
   17808:	mov	r6, #1
   1780c:	add	sl, sp, #52	; 0x34
   17810:	sub	r7, fp, #48	; 0x30
   17814:	movt	r4, #1
   17818:	ldr	r0, [sp, #8]
   1781c:	mov	r2, sl
   17820:	bl	12670 <coda_type_get_record_field_hidden_status@plt>
   17824:	cmp	r0, #0
   17828:	beq	17830 <print_yaml_data@@Base+0x794>
   1782c:	bl	17bf4 <handle_coda_error@@Base>
   17830:	ldr	r0, [sp, #52]	; 0x34
   17834:	cmp	r0, #0
   17838:	bne	178a4 <print_yaml_data@@Base+0x808>
   1783c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17840:	ldr	r0, [sp, #8]
   17844:	mov	r2, r7
   17848:	bl	12a78 <coda_type_get_record_field_name@plt>
   1784c:	cmp	r0, #0
   17850:	beq	17858 <print_yaml_data@@Base+0x7bc>
   17854:	bl	17bf4 <handle_coda_error@@Base>
   17858:	cmp	r5, #0
   1785c:	bne	1786c <print_yaml_data@@Base+0x7d0>
   17860:	cmp	r6, #0
   17864:	bleq	17a2c <print_yaml_data@@Base+0x990>
   17868:	b	17870 <print_yaml_data@@Base+0x7d4>
   1786c:	bl	17a2c <print_yaml_data@@Base+0x990>
   17870:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17874:	mov	r0, r4
   17878:	bl	179e4 <print_yaml_data@@Base+0x948>
   1787c:	ldr	r0, [r8]
   17880:	mov	r1, #1
   17884:	add	r0, r0, #1
   17888:	str	r0, [r8]
   1788c:	mov	r0, r9
   17890:	bl	17170 <print_yaml_data@@Base+0xd4>
   17894:	ldr	r0, [r8]
   17898:	mov	r6, #0
   1789c:	sub	r0, r0, #1
   178a0:	str	r0, [r8]
   178a4:	ldr	r0, [sp, #16]
   178a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   178ac:	sub	r0, r0, #1
   178b0:	cmp	r1, r0
   178b4:	bge	178cc <print_yaml_data@@Base+0x830>
   178b8:	mov	r0, r9
   178bc:	bl	129dc <coda_cursor_goto_next_record_field@plt>
   178c0:	cmp	r0, #0
   178c4:	beq	178cc <print_yaml_data@@Base+0x830>
   178c8:	bl	17bf4 <handle_coda_error@@Base>
   178cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   178d0:	add	r1, r0, #1
   178d4:	ldr	r0, [sp, #16]
   178d8:	str	r1, [fp, #-44]	; 0xffffffd4
   178dc:	cmp	r1, r0
   178e0:	blt	17818 <print_yaml_data@@Base+0x77c>
   178e4:	mov	r0, r9
   178e8:	bl	12850 <coda_cursor_goto_parent@plt>
   178ec:	b	17994 <print_yaml_data@@Base+0x8f8>
   178f0:	add	r1, sp, #16
   178f4:	mov	r0, r9
   178f8:	bl	12898 <coda_cursor_read_double@plt>
   178fc:	cmp	r0, #0
   17900:	beq	17908 <print_yaml_data@@Base+0x86c>
   17904:	bl	17bf4 <handle_coda_error@@Base>
   17908:	vldr	d16, [sp, #16]
   1790c:	b	1794c <print_yaml_data@@Base+0x8b0>
   17910:	add	r1, sp, #8
   17914:	mov	r0, r9
   17918:	bl	12898 <coda_cursor_read_double@plt>
   1791c:	cmp	r0, #0
   17920:	beq	17928 <print_yaml_data@@Base+0x88c>
   17924:	bl	17bf4 <handle_coda_error@@Base>
   17928:	vldr	d0, [sp, #8]
   1792c:	bl	128a4 <coda_isNaN@plt>
   17930:	cmp	r0, #0
   17934:	bne	17948 <print_yaml_data@@Base+0x8ac>
   17938:	vldr	d0, [sp, #8]
   1793c:	bl	12748 <coda_isInf@plt>
   17940:	cmp	r0, #0
   17944:	beq	179b0 <print_yaml_data@@Base+0x914>
   17948:	vldr	d16, [sp, #8]
   1794c:	movw	r0, #38923	; 0x980b
   17950:	vmov	r2, r3, d16
   17954:	movt	r0, #1
   17958:	b	17990 <print_yaml_data@@Base+0x8f4>
   1795c:	add	r1, sp, #16
   17960:	add	r2, sp, #8
   17964:	mov	r0, r9
   17968:	bl	12940 <coda_cursor_read_complex_double_split@plt>
   1796c:	cmp	r0, #0
   17970:	beq	17978 <print_yaml_data@@Base+0x8dc>
   17974:	bl	17bf4 <handle_coda_error@@Base>
   17978:	vldr	d16, [sp, #16]
   1797c:	vldr	d17, [sp, #8]
   17980:	movw	r0, #38958	; 0x982e
   17984:	movt	r0, #1
   17988:	vmov	r2, r3, d16
   1798c:	vstr	d17, [sp]
   17990:	bl	179e4 <print_yaml_data@@Base+0x948>
   17994:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17998:	cmp	r0, #0
   1799c:	ldrne	r0, [r8]
   179a0:	subne	r0, r0, #1
   179a4:	strne	r0, [r8]
   179a8:	sub	sp, fp, #28
   179ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179b0:	vldr	d0, [sp, #8]
   179b4:	movw	r0, #40152	; 0x9cd8
   179b8:	add	r1, sp, #16
   179bc:	movt	r0, #1
   179c0:	bl	126c4 <coda_time_double_to_string@plt>
   179c4:	cmp	r0, #0
   179c8:	beq	179d8 <print_yaml_data@@Base+0x93c>
   179cc:	movw	r0, #40181	; 0x9cf5
   179d0:	movt	r0, #1
   179d4:	b	17660 <print_yaml_data@@Base+0x5c4>
   179d8:	movw	r0, #40597	; 0x9e95
   179dc:	add	r1, sp, #16
   179e0:	b	1761c <print_yaml_data@@Base+0x580>
   179e4:	sub	sp, sp, #12
   179e8:	push	{fp, lr}
   179ec:	mov	fp, sp
   179f0:	sub	sp, sp, #4
   179f4:	mov	ip, r0
   179f8:	add	r0, fp, #8
   179fc:	stm	r0, {r1, r2, r3}
   17a00:	movw	r0, #53392	; 0xd090
   17a04:	add	r2, fp, #8
   17a08:	mov	r1, ip
   17a0c:	movt	r0, #2
   17a10:	str	r2, [sp]
   17a14:	ldr	r0, [r0]
   17a18:	bl	129ac <vfprintf@plt>
   17a1c:	mov	sp, fp
   17a20:	pop	{fp, lr}
   17a24:	add	sp, sp, #12
   17a28:	bx	lr
   17a2c:	push	{r4, r5, r6, sl, fp, lr}
   17a30:	add	fp, sp, #16
   17a34:	movw	r0, #49612	; 0xc1cc
   17a38:	movt	r0, #2
   17a3c:	ldr	r5, [r0]
   17a40:	cmp	r5, #0
   17a44:	bmi	17a80 <print_yaml_data@@Base+0x9e4>
   17a48:	beq	17a7c <print_yaml_data@@Base+0x9e0>
   17a4c:	movw	r6, #53392	; 0xd090
   17a50:	movw	r4, #38998	; 0x9856
   17a54:	movt	r6, #2
   17a58:	movt	r4, #1
   17a5c:	ldr	r3, [r6]
   17a60:	mov	r0, r4
   17a64:	mov	r1, #2
   17a68:	mov	r2, #1
   17a6c:	bl	127cc <fwrite@plt>
   17a70:	sub	r5, r5, #1
   17a74:	cmp	r5, #0
   17a78:	bgt	17a5c <print_yaml_data@@Base+0x9c0>
   17a7c:	pop	{r4, r5, r6, sl, fp, pc}
   17a80:	movw	r0, #38968	; 0x9838
   17a84:	movw	r1, #40510	; 0x9e3e
   17a88:	movw	r3, #38980	; 0x9844
   17a8c:	mov	r2, #44	; 0x2c
   17a90:	movt	r0, #1
   17a94:	movt	r1, #1
   17a98:	movt	r3, #1
   17a9c:	bl	12ab4 <__assert_fail@plt>
   17aa0:	sub	sp, sp, #12
   17aa4:	push	{r4, sl, fp, lr}
   17aa8:	add	fp, sp, #8
   17aac:	sub	sp, sp, #4
   17ab0:	mov	r4, r0
   17ab4:	add	r0, fp, #8
   17ab8:	stm	r0, {r1, r2, r3}
   17abc:	bl	17a2c <print_yaml_data@@Base+0x990>
   17ac0:	movw	r0, #53392	; 0xd090
   17ac4:	add	r2, fp, #8
   17ac8:	mov	r1, r4
   17acc:	movt	r0, #2
   17ad0:	str	r2, [sp]
   17ad4:	ldr	r0, [r0]
   17ad8:	bl	129ac <vfprintf@plt>
   17adc:	sub	sp, fp, #8
   17ae0:	pop	{r4, sl, fp, lr}
   17ae4:	add	sp, sp, #12
   17ae8:	bx	lr
   17aec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17af0:	add	fp, sp, #28
   17af4:	sub	sp, sp, #4
   17af8:	cmp	r1, #1
   17afc:	blt	17bec <print_yaml_data@@Base+0xb50>
   17b00:	movw	r6, #38564	; 0x96a4
   17b04:	movw	r8, #38567	; 0x96a7
   17b08:	movw	r9, #38570	; 0x96aa
   17b0c:	movw	sl, #38576	; 0x96b0
   17b10:	movw	r7, #38579	; 0x96b3
   17b14:	mov	r4, r1
   17b18:	mov	r5, r0
   17b1c:	movt	r6, #1
   17b20:	movt	r8, #1
   17b24:	movt	r9, #1
   17b28:	movt	sl, #1
   17b2c:	movt	r7, #1
   17b30:	ldrb	r1, [r5]
   17b34:	sub	r0, r1, #8
   17b38:	cmp	r0, #5
   17b3c:	bhi	17b68 <print_yaml_data@@Base+0xacc>
   17b40:	add	r2, pc, #0
   17b44:	ldr	pc, [r2, r0, lsl #2]
   17b48:	andeq	r7, r1, r0, ror #22
   17b4c:	andeq	r7, r1, r0, lsr #23
   17b50:	andeq	r7, r1, r8, lsr #23
   17b54:	andeq	r7, r1, r4, lsl #23
   17b58:			; <UNDEFINED> instruction: 0x00017bb0
   17b5c:			; <UNDEFINED> instruction: 0x00017bb8
   17b60:	mov	r0, r6
   17b64:	b	17bc8 <print_yaml_data@@Base+0xb2c>
   17b68:	cmp	r1, #34	; 0x22
   17b6c:	beq	17bc0 <print_yaml_data@@Base+0xb24>
   17b70:	cmp	r1, #92	; 0x5c
   17b74:	bne	17b84 <print_yaml_data@@Base+0xae8>
   17b78:	movw	r0, #38582	; 0x96b6
   17b7c:	movt	r0, #1
   17b80:	b	17bc8 <print_yaml_data@@Base+0xb2c>
   17b84:	sub	r0, r1, #32
   17b88:	uxtb	r0, r0
   17b8c:	cmp	r0, #94	; 0x5e
   17b90:	bhi	17bdc <print_yaml_data@@Base+0xb40>
   17b94:	movw	r0, #39001	; 0x9859
   17b98:	movt	r0, #1
   17b9c:	b	17be4 <print_yaml_data@@Base+0xb48>
   17ba0:	mov	r0, r8
   17ba4:	b	17bc8 <print_yaml_data@@Base+0xb2c>
   17ba8:	mov	r0, r9
   17bac:	b	17bc8 <print_yaml_data@@Base+0xb2c>
   17bb0:	mov	r0, sl
   17bb4:	b	17bc8 <print_yaml_data@@Base+0xb2c>
   17bb8:	mov	r0, r7
   17bbc:	b	17bc8 <print_yaml_data@@Base+0xb2c>
   17bc0:	movw	r0, #40219	; 0x9d1b
   17bc4:	movt	r0, #1
   17bc8:	bl	179e4 <print_yaml_data@@Base+0x948>
   17bcc:	add	r5, r5, #1
   17bd0:	subs	r4, r4, #1
   17bd4:	bne	17b30 <print_yaml_data@@Base+0xa94>
   17bd8:	b	17bec <print_yaml_data@@Base+0xb50>
   17bdc:	movw	r0, #40222	; 0x9d1e
   17be0:	movt	r0, #1
   17be4:	bl	179e4 <print_yaml_data@@Base+0x948>
   17be8:	b	17bcc <print_yaml_data@@Base+0xb30>
   17bec:	sub	sp, fp, #28
   17bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017bf4 <handle_coda_error@@Base>:
   17bf4:	push	{fp, lr}
   17bf8:	mov	fp, sp
   17bfc:	movw	r5, #49584	; 0xc1b0
   17c00:	movt	r5, #2
   17c04:	ldr	r4, [r5]
   17c08:	bl	12a60 <coda_get_errno@plt>
   17c0c:	ldr	r0, [r0]
   17c10:	bl	12a18 <coda_errno_to_string@plt>
   17c14:	movw	r1, #40590	; 0x9e8e
   17c18:	mov	r2, r0
   17c1c:	mov	r0, r4
   17c20:	movt	r1, #1
   17c24:	bl	128b0 <fprintf@plt>
   17c28:	ldr	r0, [r5]
   17c2c:	bl	126b8 <fflush@plt>
   17c30:	mov	r0, #1
   17c34:	bl	12868 <exit@plt>

00017c38 <main@@Base>:
   17c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c3c:	add	fp, sp, #28
   17c40:	sub	sp, sp, #20
   17c44:	cmp	r0, #1
   17c48:	beq	18d74 <main@@Base+0x113c>
   17c4c:	ldr	r6, [r1, #4]
   17c50:	mov	r4, r1
   17c54:	movw	r1, #40601	; 0x9e99
   17c58:	mov	sl, r0
   17c5c:	movt	r1, #1
   17c60:	mov	r0, r6
   17c64:	bl	12664 <strcmp@plt>
   17c68:	cmp	r0, #0
   17c6c:	beq	18d74 <main@@Base+0x113c>
   17c70:	movw	r1, #44198	; 0xaca6
   17c74:	mov	r0, r6
   17c78:	movt	r1, #1
   17c7c:	bl	12664 <strcmp@plt>
   17c80:	cmp	r0, #0
   17c84:	beq	18d74 <main@@Base+0x113c>
   17c88:	movw	r1, #40604	; 0x9e9c
   17c8c:	mov	r0, r6
   17c90:	movt	r1, #1
   17c94:	bl	12664 <strcmp@plt>
   17c98:	cmp	r0, #0
   17c9c:	beq	18d7c <main@@Base+0x1144>
   17ca0:	movw	r1, #44252	; 0xacdc
   17ca4:	mov	r0, r6
   17ca8:	movt	r1, #1
   17cac:	bl	12664 <strcmp@plt>
   17cb0:	cmp	r0, #0
   17cb4:	beq	18d7c <main@@Base+0x1144>
   17cb8:	cmp	sl, #3
   17cbc:	blt	17cd8 <main@@Base+0xa0>
   17cc0:	movw	r1, #40607	; 0x9e9f
   17cc4:	mov	r0, r6
   17cc8:	movt	r1, #1
   17ccc:	bl	12664 <strcmp@plt>
   17cd0:	cmp	r0, #0
   17cd4:	beq	18758 <main@@Base+0xb20>
   17cd8:	ldr	r0, [r4]
   17cdc:	movw	r2, #40610	; 0x9ea2
   17ce0:	mov	r1, #0
   17ce4:	movt	r2, #1
   17ce8:	bl	12700 <coda_set_definition_path_conditional@plt>
   17cec:	mov	r7, #1
   17cf0:	cmp	r0, #0
   17cf4:	bne	18d88 <main@@Base+0x1150>
   17cf8:	ldr	r6, [r4, r7, lsl #2]
   17cfc:	movw	r1, #40636	; 0x9ebc
   17d00:	movt	r1, #1
   17d04:	mov	r0, r6
   17d08:	bl	12664 <strcmp@plt>
   17d0c:	cmp	r0, #0
   17d10:	beq	17fe4 <main@@Base+0x3ac>
   17d14:	movw	r1, #40641	; 0x9ec1
   17d18:	mov	r0, r6
   17d1c:	movt	r1, #1
   17d20:	bl	12664 <strcmp@plt>
   17d24:	cmp	r0, #0
   17d28:	beq	18320 <main@@Base+0x6e8>
   17d2c:	movw	r1, #40647	; 0x9ec7
   17d30:	mov	r0, r6
   17d34:	movt	r1, #1
   17d38:	bl	12664 <strcmp@plt>
   17d3c:	cmp	r0, #0
   17d40:	beq	187f0 <main@@Base+0xbb8>
   17d44:	movw	r1, #40652	; 0x9ecc
   17d48:	mov	r0, r6
   17d4c:	movt	r1, #1
   17d50:	bl	12664 <strcmp@plt>
   17d54:	cmp	r0, #0
   17d58:	beq	18a8c <main@@Base+0xe54>
   17d5c:	movw	r1, #43287	; 0xa917
   17d60:	mov	r0, r6
   17d64:	movt	r1, #1
   17d68:	bl	12664 <strcmp@plt>
   17d6c:	cmp	r0, #0
   17d70:	bne	18cc4 <main@@Base+0x108c>
   17d74:	movw	r0, #49640	; 0xc1e8
   17d78:	mov	r2, #0
   17d7c:	mov	r1, #5
   17d80:	movt	r0, #2
   17d84:	str	r2, [r0]
   17d88:	movw	r0, #53412	; 0xd0a4
   17d8c:	movt	r0, #2
   17d90:	str	r1, [r0]
   17d94:	movw	r0, #49624	; 0xc1d8
   17d98:	movw	r1, #53392	; 0xd090
   17d9c:	movt	r0, #2
   17da0:	movt	r1, #2
   17da4:	str	r2, [r0]
   17da8:	movw	r0, #53416	; 0xd0a8
   17dac:	movt	r0, #2
   17db0:	str	r2, [r0]
   17db4:	movw	r0, #49588	; 0xc1b4
   17db8:	movt	r0, #2
   17dbc:	ldr	r0, [r0]
   17dc0:	str	r0, [r1]
   17dc4:	add	r0, r7, #1
   17dc8:	sub	r8, sl, r0
   17dcc:	cmp	r8, #1
   17dd0:	blt	18cc4 <main@@Base+0x108c>
   17dd4:	add	r6, r4, r0, lsl #2
   17dd8:	mov	r0, #0
   17ddc:	mov	r1, #0
   17de0:	sub	r4, r8, #1
   17de4:	mov	r7, #1
   17de8:	mov	r9, #0
   17dec:	str	r0, [sp, #12]
   17df0:	mov	r0, #0
   17df4:	str	r1, [sp, #16]
   17df8:	str	r0, [sp, #8]
   17dfc:	mov	r0, #0
   17e00:	str	r0, [sp, #4]
   17e04:	ldr	sl, [r6, r9, lsl #2]
   17e08:	movw	r1, #40707	; 0x9f03
   17e0c:	movt	r1, #1
   17e10:	mov	r0, sl
   17e14:	bl	12664 <strcmp@plt>
   17e18:	cmp	r0, #0
   17e1c:	beq	17f88 <main@@Base+0x350>
   17e20:	movw	r1, #43452	; 0xa9bc
   17e24:	mov	r0, sl
   17e28:	movt	r1, #1
   17e2c:	bl	12664 <strcmp@plt>
   17e30:	cmp	r0, #0
   17e34:	beq	17f88 <main@@Base+0x350>
   17e38:	movw	r1, #40775	; 0x9f47
   17e3c:	mov	r0, sl
   17e40:	movt	r1, #1
   17e44:	bl	12664 <strcmp@plt>
   17e48:	cmp	r0, #0
   17e4c:	beq	17e68 <main@@Base+0x230>
   17e50:	movw	r1, #40778	; 0x9f4a
   17e54:	mov	r0, sl
   17e58:	movt	r1, #1
   17e5c:	bl	12664 <strcmp@plt>
   17e60:	cmp	r0, #0
   17e64:	bne	17e84 <main@@Base+0x24c>
   17e68:	add	r5, r9, #1
   17e6c:	cmp	r5, r8
   17e70:	bge	17e84 <main@@Base+0x24c>
   17e74:	ldr	r0, [r6, r5, lsl #2]
   17e78:	ldrb	r1, [r0]
   17e7c:	cmp	r1, #45	; 0x2d
   17e80:	bne	17fa0 <main@@Base+0x368>
   17e84:	movw	r1, #40859	; 0x9f9b
   17e88:	mov	r0, sl
   17e8c:	movt	r1, #1
   17e90:	bl	12664 <strcmp@plt>
   17e94:	cmp	r0, #0
   17e98:	beq	17eb4 <main@@Base+0x27c>
   17e9c:	movw	r1, #40862	; 0x9f9e
   17ea0:	mov	r0, sl
   17ea4:	movt	r1, #1
   17ea8:	bl	12664 <strcmp@plt>
   17eac:	cmp	r0, #0
   17eb0:	bne	17ed0 <main@@Base+0x298>
   17eb4:	add	r5, r9, #1
   17eb8:	cmp	r5, r8
   17ebc:	bge	17ed0 <main@@Base+0x298>
   17ec0:	ldr	r0, [r6, r5, lsl #2]
   17ec4:	ldrb	r1, [r0]
   17ec8:	cmp	r1, #45	; 0x2d
   17ecc:	bne	17fac <main@@Base+0x374>
   17ed0:	movw	r1, #40869	; 0x9fa5
   17ed4:	mov	r0, sl
   17ed8:	movt	r1, #1
   17edc:	bl	12664 <strcmp@plt>
   17ee0:	cmp	r0, #0
   17ee4:	bne	17f04 <main@@Base+0x2cc>
   17ee8:	add	r5, r9, #1
   17eec:	cmp	r5, r8
   17ef0:	bge	17f04 <main@@Base+0x2cc>
   17ef4:	ldr	r0, [r6, r5, lsl #2]
   17ef8:	ldrb	r1, [r0]
   17efc:	cmp	r1, #45	; 0x2d
   17f00:	bne	17fb8 <main@@Base+0x380>
   17f04:	movw	r1, #40881	; 0x9fb1
   17f08:	mov	r0, sl
   17f0c:	movt	r1, #1
   17f10:	bl	12664 <strcmp@plt>
   17f14:	cmp	r0, #0
   17f18:	bne	17f5c <main@@Base+0x324>
   17f1c:	add	r5, r9, #3
   17f20:	cmp	r5, r8
   17f24:	bge	17f5c <main@@Base+0x324>
   17f28:	add	r0, r6, r9, lsl #2
   17f2c:	ldr	r2, [r0, #4]
   17f30:	ldrb	r1, [r2]
   17f34:	cmp	r1, #45	; 0x2d
   17f38:	beq	17f5c <main@@Base+0x324>
   17f3c:	ldr	r3, [r0, #8]
   17f40:	ldrb	r0, [r3]
   17f44:	cmp	r0, #45	; 0x2d
   17f48:	beq	17f5c <main@@Base+0x324>
   17f4c:	ldr	r0, [r6, r5, lsl #2]
   17f50:	ldrb	r1, [r0]
   17f54:	cmp	r1, #45	; 0x2d
   17f58:	bne	17fcc <main@@Base+0x394>
   17f5c:	cmp	r9, r4
   17f60:	bne	18cc4 <main@@Base+0x108c>
   17f64:	ldrb	r0, [sl]
   17f68:	cmp	r0, #45	; 0x2d
   17f6c:	beq	18cc4 <main@@Base+0x108c>
   17f70:	movw	r0, #49640	; 0xc1e8
   17f74:	mov	r5, r4
   17f78:	str	sl, [sp, #16]
   17f7c:	movt	r0, #2
   17f80:	str	sl, [r0]
   17f84:	b	17f90 <main@@Base+0x358>
   17f88:	mov	r7, #0
   17f8c:	mov	r5, r9
   17f90:	add	r9, r5, #1
   17f94:	cmp	r9, r8
   17f98:	blt	17e04 <main@@Base+0x1cc>
   17f9c:	b	18768 <main@@Base+0xb30>
   17fa0:	movw	r1, #49624	; 0xc1d8
   17fa4:	movt	r1, #2
   17fa8:	b	17fc4 <main@@Base+0x38c>
   17fac:	movw	r1, #53416	; 0xd0a8
   17fb0:	movt	r1, #2
   17fb4:	b	17fc4 <main@@Base+0x38c>
   17fb8:	bl	12a0c <atoi@plt>
   17fbc:	movw	r1, #49580	; 0xc1ac
   17fc0:	movt	r1, #2
   17fc4:	str	r0, [r1]
   17fc8:	b	17f90 <main@@Base+0x358>
   17fcc:	mov	r9, r2
   17fd0:	mov	sl, r3
   17fd4:	bl	12a0c <atoi@plt>
   17fd8:	str	r0, [sp, #12]
   17fdc:	stmib	sp, {r9, sl}
   17fe0:	b	17f90 <main@@Base+0x358>
   17fe4:	movw	r0, #49640	; 0xc1e8
   17fe8:	mov	r8, #0
   17fec:	mov	r5, #1
   17ff0:	movw	r6, #49636	; 0xc1e4
   17ff4:	movt	r0, #2
   17ff8:	movt	r6, #2
   17ffc:	str	r8, [r0, #664]	; 0x298
   18000:	str	r8, [r0]
   18004:	movw	r0, #53412	; 0xd0a4
   18008:	str	r8, [r6]
   1800c:	movt	r0, #2
   18010:	str	r8, [r0]
   18014:	movw	r0, #49616	; 0xc1d0
   18018:	movt	r0, #2
   1801c:	str	r5, [r0]
   18020:	movw	r0, #49620	; 0xc1d4
   18024:	movt	r0, #2
   18028:	str	r8, [r0]
   1802c:	movw	r0, #53400	; 0xd098
   18030:	movt	r0, #2
   18034:	str	r8, [r0]
   18038:	movw	r0, #49632	; 0xc1e0
   1803c:	movt	r0, #2
   18040:	str	r8, [r0]
   18044:	movw	r0, #53404	; 0xd09c
   18048:	movt	r0, #2
   1804c:	str	r8, [r0]
   18050:	add	r0, r7, #1
   18054:	sub	r7, sl, r0
   18058:	cmp	r7, #1
   1805c:	blt	18cc4 <main@@Base+0x108c>
   18060:	add	r9, r4, r0, lsl #2
   18064:	movw	r4, #40704	; 0x9f00
   18068:	sub	r0, r7, #1
   1806c:	str	r0, [sp, #8]
   18070:	movt	r4, #1
   18074:	mov	r0, #1
   18078:	str	r0, [sp, #16]
   1807c:	mov	r0, #1
   18080:	str	r0, [sp, #12]
   18084:	ldr	sl, [r9, r8, lsl #2]
   18088:	mov	r1, r4
   1808c:	mov	r0, sl
   18090:	bl	12664 <strcmp@plt>
   18094:	cmp	r0, #0
   18098:	beq	182a8 <main@@Base+0x670>
   1809c:	movw	r1, #41028	; 0xa044
   180a0:	mov	r0, sl
   180a4:	movt	r1, #1
   180a8:	bl	12664 <strcmp@plt>
   180ac:	cmp	r0, #0
   180b0:	beq	182a8 <main@@Base+0x670>
   180b4:	movw	r1, #40707	; 0x9f03
   180b8:	mov	r0, sl
   180bc:	movt	r1, #1
   180c0:	bl	12664 <strcmp@plt>
   180c4:	cmp	r0, #0
   180c8:	beq	18218 <main@@Base+0x5e0>
   180cc:	movw	r1, #42848	; 0xa760
   180d0:	mov	r0, sl
   180d4:	movt	r1, #1
   180d8:	bl	12664 <strcmp@plt>
   180dc:	cmp	r0, #0
   180e0:	beq	18218 <main@@Base+0x5e0>
   180e4:	movw	r1, #40710	; 0x9f06
   180e8:	mov	r0, sl
   180ec:	mov	r4, r6
   180f0:	movt	r1, #1
   180f4:	bl	12664 <strcmp@plt>
   180f8:	cmp	r0, #0
   180fc:	beq	18118 <main@@Base+0x4e0>
   18100:	movw	r1, #40713	; 0x9f09
   18104:	mov	r0, sl
   18108:	movt	r1, #1
   1810c:	bl	12664 <strcmp@plt>
   18110:	cmp	r0, #0
   18114:	bne	18134 <main@@Base+0x4fc>
   18118:	add	r6, r8, #1
   1811c:	cmp	r6, r7
   18120:	bge	18134 <main@@Base+0x4fc>
   18124:	ldr	r0, [r9, r6, lsl #2]
   18128:	ldrb	r1, [r0]
   1812c:	cmp	r1, #45	; 0x2d
   18130:	bne	1825c <main@@Base+0x624>
   18134:	movw	r1, #40763	; 0x9f3b
   18138:	mov	r0, sl
   1813c:	movt	r1, #1
   18140:	bl	12664 <strcmp@plt>
   18144:	cmp	r0, #0
   18148:	beq	18224 <main@@Base+0x5ec>
   1814c:	movw	r1, #41110	; 0xa096
   18150:	mov	r0, sl
   18154:	movt	r1, #1
   18158:	bl	12664 <strcmp@plt>
   1815c:	cmp	r0, #0
   18160:	beq	18224 <main@@Base+0x5ec>
   18164:	movw	r1, #40766	; 0x9f3e
   18168:	mov	r0, sl
   1816c:	movt	r1, #1
   18170:	bl	12664 <strcmp@plt>
   18174:	cmp	r0, #0
   18178:	mov	r6, r4
   1817c:	beq	18240 <main@@Base+0x608>
   18180:	movw	r1, #41174	; 0xa0d6
   18184:	mov	r0, sl
   18188:	movt	r1, #1
   1818c:	bl	12664 <strcmp@plt>
   18190:	cmp	r0, #0
   18194:	beq	18240 <main@@Base+0x608>
   18198:	movw	r1, #41235	; 0xa113
   1819c:	mov	r0, sl
   181a0:	movt	r1, #1
   181a4:	bl	12664 <strcmp@plt>
   181a8:	movw	r4, #40704	; 0x9f00
   181ac:	cmp	r0, #0
   181b0:	mov	r5, #1
   181b4:	movt	r4, #1
   181b8:	beq	1828c <main@@Base+0x654>
   181bc:	movw	r1, #41310	; 0xa15e
   181c0:	mov	r0, sl
   181c4:	movt	r1, #1
   181c8:	bl	12664 <strcmp@plt>
   181cc:	cmp	r0, #0
   181d0:	beq	1829c <main@@Base+0x664>
   181d4:	movw	r1, #42940	; 0xa7bc
   181d8:	mov	r0, sl
   181dc:	movt	r1, #1
   181e0:	bl	12664 <strcmp@plt>
   181e4:	cmp	r0, #0
   181e8:	beq	182bc <main@@Base+0x684>
   181ec:	ldr	r0, [sp, #8]
   181f0:	cmp	r8, r0
   181f4:	bne	18cc4 <main@@Base+0x108c>
   181f8:	ldrb	r0, [sl]
   181fc:	cmp	r0, #45	; 0x2d
   18200:	beq	18cc4 <main@@Base+0x108c>
   18204:	ldr	r8, [sp, #8]
   18208:	movw	r0, #49640	; 0xc1e8
   1820c:	movt	r0, #2
   18210:	str	sl, [r0]
   18214:	b	182ac <main@@Base+0x674>
   18218:	mov	r0, #0
   1821c:	str	r0, [sp, #16]
   18220:	b	182ac <main@@Base+0x674>
   18224:	movw	r1, #53400	; 0xd098
   18228:	mov	r0, #1
   1822c:	mov	r6, r4
   18230:	mov	r5, #1
   18234:	movt	r1, #2
   18238:	str	r0, [r1]
   1823c:	b	18250 <main@@Base+0x618>
   18240:	movw	r0, #49632	; 0xc1e0
   18244:	mov	r5, #1
   18248:	movt	r0, #2
   1824c:	str	r5, [r0]
   18250:	movw	r4, #40704	; 0x9f00
   18254:	movt	r4, #1
   18258:	b	182ac <main@@Base+0x674>
   1825c:	bl	1566c <codadump_filter_create@@Base>
   18260:	movw	r1, #49640	; 0xc1e8
   18264:	mov	r8, r6
   18268:	mov	r6, r4
   1826c:	movw	r4, #40704	; 0x9f00
   18270:	cmp	r0, #0
   18274:	mov	r5, #1
   18278:	movt	r1, #2
   1827c:	movt	r4, #1
   18280:	str	r0, [r1, #664]	; 0x298
   18284:	bne	182ac <main@@Base+0x674>
   18288:	b	18db8 <main@@Base+0x1180>
   1828c:	movw	r0, #53404	; 0xd09c
   18290:	movt	r0, #2
   18294:	str	r5, [r0]
   18298:	b	182ac <main@@Base+0x674>
   1829c:	movw	r0, #49620	; 0xc1d4
   182a0:	movt	r0, #2
   182a4:	str	r5, [r0]
   182a8:	str	r5, [r6]
   182ac:	add	r8, r8, #1
   182b0:	cmp	r8, r7
   182b4:	blt	18084 <main@@Base+0x44c>
   182b8:	b	182c8 <main@@Base+0x690>
   182bc:	mov	r0, #0
   182c0:	str	r0, [sp, #12]
   182c4:	b	182ac <main@@Base+0x674>
   182c8:	movw	r0, #49640	; 0xc1e8
   182cc:	movt	r0, #2
   182d0:	ldr	r0, [r0]
   182d4:	cmp	r0, #0
   182d8:	ldrbne	r0, [r0]
   182dc:	cmpne	r0, #0
   182e0:	beq	18cc4 <main@@Base+0x108c>
   182e4:	bl	128d4 <coda_init@plt>
   182e8:	cmp	r0, #0
   182ec:	bne	18d88 <main@@Base+0x1150>
   182f0:	ldr	r0, [sp, #12]
   182f4:	clz	r0, r0
   182f8:	lsr	r0, r0, #5
   182fc:	bl	12718 <coda_set_option_bypass_special_types@plt>
   18300:	mov	r0, #0
   18304:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   18308:	ldr	r0, [sp, #16]
   1830c:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18310:	bl	168f4 <traverse_info_init@@Base>
   18314:	bl	14568 <dim_info_init@@Base>
   18318:	bl	1694c <traverse_product@@Base>
   1831c:	b	1874c <main@@Base+0xb14>
   18320:	movw	r0, #49640	; 0xc1e8
   18324:	mov	r6, #0
   18328:	mov	r1, #1
   1832c:	movw	r2, #53396	; 0xd094
   18330:	movt	r0, #2
   18334:	movt	r2, #2
   18338:	str	r6, [r0, #664]	; 0x298
   1833c:	str	r6, [r0]
   18340:	movw	r0, #53412	; 0xd0a4
   18344:	movt	r0, #2
   18348:	str	r1, [r0]
   1834c:	movw	r0, #49624	; 0xc1d8
   18350:	movt	r0, #2
   18354:	str	r6, [r0]
   18358:	movw	r0, #38999	; 0x9857
   1835c:	movt	r0, #1
   18360:	str	r0, [r2]
   18364:	movw	r0, #49616	; 0xc1d0
   18368:	movt	r0, #2
   1836c:	str	r1, [r0]
   18370:	movw	r0, #49636	; 0xc1e4
   18374:	movt	r0, #2
   18378:	str	r1, [r0]
   1837c:	movw	r0, #53408	; 0xd0a0
   18380:	movw	r1, #53392	; 0xd090
   18384:	movt	r0, #2
   18388:	movt	r1, #2
   1838c:	str	r6, [r0]
   18390:	movw	r0, #53792	; 0xd220
   18394:	movt	r0, #2
   18398:	str	r6, [r0]
   1839c:	movw	r0, #53796	; 0xd224
   183a0:	movt	r0, #2
   183a4:	str	r6, [r0]
   183a8:	movw	r0, #49628	; 0xc1dc
   183ac:	movt	r0, #2
   183b0:	str	r6, [r0]
   183b4:	movw	r0, #49588	; 0xc1b4
   183b8:	movt	r0, #2
   183bc:	ldr	r0, [r0]
   183c0:	str	r0, [r1]
   183c4:	add	r0, r7, #1
   183c8:	sub	r8, sl, r0
   183cc:	cmp	r8, #1
   183d0:	blt	18cc4 <main@@Base+0x108c>
   183d4:	movw	r5, #40707	; 0x9f03
   183d8:	add	sl, r4, r0, lsl #2
   183dc:	sub	r0, r8, #1
   183e0:	mov	r4, #1
   183e4:	movt	r5, #1
   183e8:	str	r0, [sp, #12]
   183ec:	mov	r0, #1
   183f0:	str	r0, [sp, #16]
   183f4:	ldr	r9, [sl, r6, lsl #2]
   183f8:	mov	r1, r5
   183fc:	mov	r0, r9
   18400:	bl	12664 <strcmp@plt>
   18404:	cmp	r0, #0
   18408:	beq	1860c <main@@Base+0x9d4>
   1840c:	movw	r1, #42848	; 0xa760
   18410:	mov	r0, r9
   18414:	movt	r1, #1
   18418:	bl	12664 <strcmp@plt>
   1841c:	cmp	r0, #0
   18420:	beq	1860c <main@@Base+0x9d4>
   18424:	movw	r1, #40710	; 0x9f06
   18428:	mov	r0, r9
   1842c:	movt	r1, #1
   18430:	bl	12664 <strcmp@plt>
   18434:	cmp	r0, #0
   18438:	beq	18454 <main@@Base+0x81c>
   1843c:	movw	r1, #40713	; 0x9f09
   18440:	mov	r0, r9
   18444:	movt	r1, #1
   18448:	bl	12664 <strcmp@plt>
   1844c:	cmp	r0, #0
   18450:	bne	18470 <main@@Base+0x838>
   18454:	add	r7, r6, #1
   18458:	cmp	r7, r8
   1845c:	bge	18470 <main@@Base+0x838>
   18460:	ldr	r0, [sl, r7, lsl #2]
   18464:	ldrb	r1, [r0]
   18468:	cmp	r1, #45	; 0x2d
   1846c:	bne	18634 <main@@Base+0x9fc>
   18470:	movw	r1, #40769	; 0x9f41
   18474:	mov	r0, r9
   18478:	movt	r1, #1
   1847c:	bl	12664 <strcmp@plt>
   18480:	cmp	r0, #0
   18484:	beq	18614 <main@@Base+0x9dc>
   18488:	movw	r1, #41723	; 0xa2fb
   1848c:	mov	r0, r9
   18490:	movt	r1, #1
   18494:	bl	12664 <strcmp@plt>
   18498:	cmp	r0, #0
   1849c:	beq	18614 <main@@Base+0x9dc>
   184a0:	movw	r1, #40772	; 0x9f44
   184a4:	mov	r0, r9
   184a8:	movt	r1, #1
   184ac:	bl	12664 <strcmp@plt>
   184b0:	cmp	r0, #0
   184b4:	beq	18624 <main@@Base+0x9ec>
   184b8:	movw	r1, #41812	; 0xa354
   184bc:	mov	r0, r9
   184c0:	movt	r1, #1
   184c4:	bl	12664 <strcmp@plt>
   184c8:	cmp	r0, #0
   184cc:	beq	18624 <main@@Base+0x9ec>
   184d0:	movw	r1, #40775	; 0x9f47
   184d4:	mov	r0, r9
   184d8:	movt	r1, #1
   184dc:	bl	12664 <strcmp@plt>
   184e0:	cmp	r0, #0
   184e4:	beq	18500 <main@@Base+0x8c8>
   184e8:	movw	r1, #40778	; 0x9f4a
   184ec:	mov	r0, r9
   184f0:	movt	r1, #1
   184f4:	bl	12664 <strcmp@plt>
   184f8:	cmp	r0, #0
   184fc:	bne	1851c <main@@Base+0x8e4>
   18500:	add	r7, r6, #1
   18504:	cmp	r7, r8
   18508:	bge	1851c <main@@Base+0x8e4>
   1850c:	ldr	r0, [sl, r7, lsl #2]
   18510:	ldrb	r1, [r0]
   18514:	cmp	r1, #45	; 0x2d
   18518:	bne	18684 <main@@Base+0xa4c>
   1851c:	movw	r1, #40787	; 0x9f53
   18520:	mov	r0, r9
   18524:	movt	r1, #1
   18528:	bl	12664 <strcmp@plt>
   1852c:	cmp	r0, #0
   18530:	beq	18650 <main@@Base+0xa18>
   18534:	movw	r1, #41911	; 0xa3b7
   18538:	mov	r0, r9
   1853c:	movt	r1, #1
   18540:	bl	12664 <strcmp@plt>
   18544:	cmp	r0, #0
   18548:	beq	18650 <main@@Base+0xa18>
   1854c:	movw	r1, #40790	; 0x9f56
   18550:	mov	r0, r9
   18554:	movt	r1, #1
   18558:	bl	12664 <strcmp@plt>
   1855c:	cmp	r0, #0
   18560:	beq	1857c <main@@Base+0x944>
   18564:	movw	r1, #40793	; 0x9f59
   18568:	mov	r0, r9
   1856c:	movt	r1, #1
   18570:	bl	12664 <strcmp@plt>
   18574:	cmp	r0, #0
   18578:	bne	18598 <main@@Base+0x960>
   1857c:	add	r7, r6, #1
   18580:	cmp	r7, r8
   18584:	bge	18598 <main@@Base+0x960>
   18588:	ldr	r0, [sl, r7, lsl #2]
   1858c:	ldrb	r1, [r0]
   18590:	cmp	r1, #45	; 0x2d
   18594:	bne	18690 <main@@Base+0xa58>
   18598:	movw	r1, #40763	; 0x9f3b
   1859c:	mov	r0, r9
   185a0:	movt	r1, #1
   185a4:	bl	12664 <strcmp@plt>
   185a8:	cmp	r0, #0
   185ac:	beq	18660 <main@@Base+0xa28>
   185b0:	movw	r1, #42150	; 0xa4a6
   185b4:	mov	r0, r9
   185b8:	movt	r1, #1
   185bc:	bl	12664 <strcmp@plt>
   185c0:	cmp	r0, #0
   185c4:	beq	18660 <main@@Base+0xa28>
   185c8:	movw	r1, #42940	; 0xa7bc
   185cc:	mov	r0, r9
   185d0:	movt	r1, #1
   185d4:	bl	12664 <strcmp@plt>
   185d8:	cmp	r0, #0
   185dc:	beq	186a0 <main@@Base+0xa68>
   185e0:	ldr	r0, [sp, #12]
   185e4:	cmp	r6, r0
   185e8:	bne	18cc4 <main@@Base+0x108c>
   185ec:	ldrb	r0, [r9]
   185f0:	cmp	r0, #45	; 0x2d
   185f4:	beq	18cc4 <main@@Base+0x108c>
   185f8:	ldr	r7, [sp, #12]
   185fc:	movw	r0, #49640	; 0xc1e8
   18600:	movt	r0, #2
   18604:	str	r9, [r0]
   18608:	b	18674 <main@@Base+0xa3c>
   1860c:	mov	r4, #0
   18610:	b	18670 <main@@Base+0xa38>
   18614:	movw	r1, #53408	; 0xd0a0
   18618:	mov	r0, #1
   1861c:	movt	r1, #2
   18620:	b	1866c <main@@Base+0xa34>
   18624:	movw	r1, #53792	; 0xd220
   18628:	mov	r0, #1
   1862c:	movt	r1, #2
   18630:	b	1866c <main@@Base+0xa34>
   18634:	bl	1566c <codadump_filter_create@@Base>
   18638:	movw	r1, #49640	; 0xc1e8
   1863c:	cmp	r0, #0
   18640:	movt	r1, #2
   18644:	str	r0, [r1, #664]	; 0x298
   18648:	bne	18674 <main@@Base+0xa3c>
   1864c:	b	18db8 <main@@Base+0x1180>
   18650:	movw	r1, #53796	; 0xd224
   18654:	mov	r0, #1
   18658:	movt	r1, #2
   1865c:	b	1866c <main@@Base+0xa34>
   18660:	movw	r1, #49628	; 0xc1dc
   18664:	mov	r0, #1
   18668:	movt	r1, #2
   1866c:	str	r0, [r1]
   18670:	mov	r7, r6
   18674:	add	r6, r7, #1
   18678:	cmp	r6, r8
   1867c:	blt	183f4 <main@@Base+0x7bc>
   18680:	b	186b0 <main@@Base+0xa78>
   18684:	movw	r1, #49624	; 0xc1d8
   18688:	movt	r1, #2
   1868c:	b	18698 <main@@Base+0xa60>
   18690:	movw	r1, #53396	; 0xd094
   18694:	movt	r1, #2
   18698:	str	r0, [r1]
   1869c:	b	18674 <main@@Base+0xa3c>
   186a0:	mov	r0, #0
   186a4:	mov	r7, r6
   186a8:	str	r0, [sp, #16]
   186ac:	b	18674 <main@@Base+0xa3c>
   186b0:	movw	r0, #49640	; 0xc1e8
   186b4:	movt	r0, #2
   186b8:	ldr	r0, [r0]
   186bc:	cmp	r0, #0
   186c0:	ldrbne	r0, [r0]
   186c4:	cmpne	r0, #0
   186c8:	beq	18cc4 <main@@Base+0x108c>
   186cc:	bl	128d4 <coda_init@plt>
   186d0:	cmp	r0, #0
   186d4:	bne	18d88 <main@@Base+0x1150>
   186d8:	ldr	r0, [sp, #16]
   186dc:	clz	r0, r0
   186e0:	lsr	r0, r0, #5
   186e4:	bl	12718 <coda_set_option_bypass_special_types@plt>
   186e8:	mov	r0, #0
   186ec:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   186f0:	mov	r0, r4
   186f4:	bl	128e0 <coda_set_option_perform_conversions@plt>
   186f8:	bl	168f4 <traverse_info_init@@Base>
   186fc:	bl	14568 <dim_info_init@@Base>
   18700:	movw	r4, #49624	; 0xc1d8
   18704:	movw	r5, #53392	; 0xd090
   18708:	movt	r4, #2
   1870c:	movt	r5, #2
   18710:	ldr	r0, [r4]
   18714:	cmp	r0, #0
   18718:	beq	18734 <main@@Base+0xafc>
   1871c:	movw	r1, #40812	; 0x9f6c
   18720:	movt	r1, #1
   18724:	bl	12694 <fopen@plt>
   18728:	cmp	r0, #0
   1872c:	str	r0, [r5]
   18730:	beq	18dd4 <main@@Base+0x119c>
   18734:	bl	1694c <traverse_product@@Base>
   18738:	ldr	r0, [r4]
   1873c:	cmp	r0, #0
   18740:	beq	1874c <main@@Base+0xb14>
   18744:	ldr	r0, [r5]
   18748:	bl	12958 <fclose@plt>
   1874c:	bl	14588 <dim_info_done@@Base>
   18750:	bl	16914 <traverse_info_done@@Base>
   18754:	b	18d64 <main@@Base+0x112c>
   18758:	ldr	r0, [r4, #8]
   1875c:	bl	12784 <coda_set_definition_path@plt>
   18760:	mov	r7, #3
   18764:	b	17cf8 <main@@Base+0xc0>
   18768:	ldr	r0, [sp, #16]
   1876c:	cmp	r0, #0
   18770:	ldrbne	r0, [r0]
   18774:	cmpne	r0, #0
   18778:	beq	18cc4 <main@@Base+0x108c>
   1877c:	bl	128d4 <coda_init@plt>
   18780:	cmp	r0, #0
   18784:	bne	18d88 <main@@Base+0x1150>
   18788:	mov	r0, #0
   1878c:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18790:	mov	r0, r7
   18794:	bl	12634 <coda_set_option_use_fast_size_expressions@plt>
   18798:	movw	r0, #49624	; 0xc1d8
   1879c:	movw	r4, #53392	; 0xd090
   187a0:	movt	r0, #2
   187a4:	movt	r4, #2
   187a8:	ldr	r0, [r0]
   187ac:	cmp	r0, #0
   187b0:	beq	187cc <main@@Base+0xb94>
   187b4:	movw	r1, #40812	; 0x9f6c
   187b8:	movt	r1, #1
   187bc:	bl	12694 <fopen@plt>
   187c0:	cmp	r0, #0
   187c4:	str	r0, [r4]
   187c8:	beq	18de4 <main@@Base+0x11ac>
   187cc:	ldmib	sp, {r0, r1, r2}
   187d0:	bl	13650 <print_debug_data@@Base>
   187d4:	movw	r0, #49624	; 0xc1d8
   187d8:	movt	r0, #2
   187dc:	ldr	r0, [r0]
   187e0:	cmp	r0, #0
   187e4:	beq	18d64 <main@@Base+0x112c>
   187e8:	ldr	r0, [r4]
   187ec:	b	18d60 <main@@Base+0x1128>
   187f0:	movw	r0, #49640	; 0xc1e8
   187f4:	mov	r2, #0
   187f8:	mov	r1, #3
   187fc:	movt	r0, #2
   18800:	str	r2, [r0]
   18804:	movw	r0, #53412	; 0xd0a4
   18808:	movt	r0, #2
   1880c:	str	r1, [r0]
   18810:	movw	r0, #49624	; 0xc1d8
   18814:	movw	r1, #53392	; 0xd090
   18818:	movt	r0, #2
   1881c:	movt	r1, #2
   18820:	str	r2, [r0]
   18824:	movw	r0, #53416	; 0xd0a8
   18828:	movt	r0, #2
   1882c:	str	r2, [r0]
   18830:	movw	r0, #49588	; 0xc1b4
   18834:	movt	r0, #2
   18838:	ldr	r0, [r0]
   1883c:	str	r0, [r1]
   18840:	add	r0, r7, #1
   18844:	sub	r8, sl, r0
   18848:	cmp	r8, #1
   1884c:	blt	18cc4 <main@@Base+0x108c>
   18850:	add	r9, r4, r0, lsl #2
   18854:	movw	r6, #40856	; 0x9f98
   18858:	movw	r7, #42641	; 0xa691
   1885c:	sub	r0, r8, #1
   18860:	mov	r1, #0
   18864:	mov	r5, #0
   18868:	mov	r4, #0
   1886c:	str	r0, [sp, #12]
   18870:	mov	r0, #1
   18874:	movt	r6, #1
   18878:	movt	r7, #1
   1887c:	str	r1, [sp, #8]
   18880:	str	r0, [sp, #16]
   18884:	mov	r0, #1
   18888:	str	r0, [sp, #4]
   1888c:	ldr	sl, [r9, r5, lsl #2]
   18890:	mov	r1, r6
   18894:	mov	r0, sl
   18898:	bl	12664 <strcmp@plt>
   1889c:	cmp	r0, #0
   188a0:	beq	189c8 <main@@Base+0xd90>
   188a4:	mov	r0, sl
   188a8:	mov	r1, r7
   188ac:	bl	12664 <strcmp@plt>
   188b0:	cmp	r0, #0
   188b4:	beq	189c8 <main@@Base+0xd90>
   188b8:	movw	r1, #40707	; 0x9f03
   188bc:	mov	r0, sl
   188c0:	movt	r1, #1
   188c4:	bl	12664 <strcmp@plt>
   188c8:	cmp	r0, #0
   188cc:	beq	189d0 <main@@Base+0xd98>
   188d0:	movw	r1, #42848	; 0xa760
   188d4:	mov	r0, sl
   188d8:	movt	r1, #1
   188dc:	bl	12664 <strcmp@plt>
   188e0:	cmp	r0, #0
   188e4:	beq	189d0 <main@@Base+0xd98>
   188e8:	movw	r1, #40775	; 0x9f47
   188ec:	mov	r0, sl
   188f0:	movt	r1, #1
   188f4:	bl	12664 <strcmp@plt>
   188f8:	cmp	r0, #0
   188fc:	beq	18918 <main@@Base+0xce0>
   18900:	movw	r1, #40778	; 0x9f4a
   18904:	mov	r0, sl
   18908:	movt	r1, #1
   1890c:	bl	12664 <strcmp@plt>
   18910:	cmp	r0, #0
   18914:	bne	18934 <main@@Base+0xcfc>
   18918:	add	r0, r5, #1
   1891c:	cmp	r0, r8
   18920:	bge	18934 <main@@Base+0xcfc>
   18924:	ldr	r1, [r9, r0, lsl #2]
   18928:	ldrb	r2, [r1]
   1892c:	cmp	r2, #45	; 0x2d
   18930:	bne	189f8 <main@@Base+0xdc0>
   18934:	movw	r1, #40859	; 0x9f9b
   18938:	mov	r0, sl
   1893c:	movt	r1, #1
   18940:	bl	12664 <strcmp@plt>
   18944:	cmp	r0, #0
   18948:	beq	18964 <main@@Base+0xd2c>
   1894c:	movw	r1, #40862	; 0x9f9e
   18950:	mov	r0, sl
   18954:	movt	r1, #1
   18958:	bl	12664 <strcmp@plt>
   1895c:	cmp	r0, #0
   18960:	bne	18980 <main@@Base+0xd48>
   18964:	add	r0, r5, #1
   18968:	cmp	r0, r8
   1896c:	bge	18980 <main@@Base+0xd48>
   18970:	ldr	r1, [r9, r0, lsl #2]
   18974:	ldrb	r2, [r1]
   18978:	cmp	r2, #45	; 0x2d
   1897c:	bne	18a04 <main@@Base+0xdcc>
   18980:	movw	r1, #42940	; 0xa7bc
   18984:	mov	r0, sl
   18988:	movt	r1, #1
   1898c:	bl	12664 <strcmp@plt>
   18990:	cmp	r0, #0
   18994:	beq	189ec <main@@Base+0xdb4>
   18998:	ldr	r0, [sp, #12]
   1899c:	cmp	r5, r0
   189a0:	bne	18cc4 <main@@Base+0x108c>
   189a4:	ldrb	r0, [sl]
   189a8:	cmp	r0, #45	; 0x2d
   189ac:	beq	18cc4 <main@@Base+0x108c>
   189b0:	movw	r0, #49640	; 0xc1e8
   189b4:	str	sl, [sp, #8]
   189b8:	movt	r0, #2
   189bc:	str	sl, [r0]
   189c0:	ldr	r0, [sp, #12]
   189c4:	b	189dc <main@@Base+0xda4>
   189c8:	mov	r4, #1
   189cc:	b	189d8 <main@@Base+0xda0>
   189d0:	mov	r0, #0
   189d4:	str	r0, [sp, #16]
   189d8:	mov	r0, r5
   189dc:	add	r5, r0, #1
   189e0:	cmp	r5, r8
   189e4:	blt	1888c <main@@Base+0xc54>
   189e8:	b	18a14 <main@@Base+0xddc>
   189ec:	mov	r0, #0
   189f0:	str	r0, [sp, #4]
   189f4:	b	189d8 <main@@Base+0xda0>
   189f8:	movw	r2, #49624	; 0xc1d8
   189fc:	movt	r2, #2
   18a00:	b	18a0c <main@@Base+0xdd4>
   18a04:	movw	r2, #53416	; 0xd0a8
   18a08:	movt	r2, #2
   18a0c:	str	r1, [r2]
   18a10:	b	189dc <main@@Base+0xda4>
   18a14:	ldr	r0, [sp, #8]
   18a18:	cmp	r0, #0
   18a1c:	ldrbne	r0, [r0]
   18a20:	cmpne	r0, #0
   18a24:	beq	18cc4 <main@@Base+0x108c>
   18a28:	bl	128d4 <coda_init@plt>
   18a2c:	cmp	r0, #0
   18a30:	bne	18d88 <main@@Base+0x1150>
   18a34:	ldr	r0, [sp, #4]
   18a38:	clz	r0, r0
   18a3c:	lsr	r0, r0, #5
   18a40:	bl	12718 <coda_set_option_bypass_special_types@plt>
   18a44:	ldr	r0, [sp, #16]
   18a48:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18a4c:	movw	r5, #49624	; 0xc1d8
   18a50:	movw	r6, #53392	; 0xd090
   18a54:	movt	r5, #2
   18a58:	movt	r6, #2
   18a5c:	ldr	r0, [r5]
   18a60:	cmp	r0, #0
   18a64:	beq	18a80 <main@@Base+0xe48>
   18a68:	movw	r1, #40812	; 0x9f6c
   18a6c:	movt	r1, #1
   18a70:	bl	12694 <fopen@plt>
   18a74:	cmp	r0, #0
   18a78:	str	r0, [r6]
   18a7c:	beq	18ddc <main@@Base+0x11a4>
   18a80:	mov	r0, r4
   18a84:	bl	15b64 <print_json_data@@Base>
   18a88:	b	18d50 <main@@Base+0x1118>
   18a8c:	movw	r0, #49640	; 0xc1e8
   18a90:	mov	r2, #0
   18a94:	mov	r1, #4
   18a98:	movt	r0, #2
   18a9c:	str	r2, [r0]
   18aa0:	movw	r0, #53412	; 0xd0a4
   18aa4:	movt	r0, #2
   18aa8:	str	r1, [r0]
   18aac:	movw	r0, #49624	; 0xc1d8
   18ab0:	movw	r1, #53392	; 0xd090
   18ab4:	movt	r0, #2
   18ab8:	movt	r1, #2
   18abc:	str	r2, [r0]
   18ac0:	movw	r0, #53416	; 0xd0a8
   18ac4:	movt	r0, #2
   18ac8:	str	r2, [r0]
   18acc:	movw	r0, #49588	; 0xc1b4
   18ad0:	movt	r0, #2
   18ad4:	ldr	r0, [r0]
   18ad8:	str	r0, [r1]
   18adc:	add	r0, r7, #1
   18ae0:	sub	r8, sl, r0
   18ae4:	cmp	r8, #1
   18ae8:	blt	18cc4 <main@@Base+0x108c>
   18aec:	add	r9, r4, r0, lsl #2
   18af0:	movw	r6, #40856	; 0x9f98
   18af4:	movw	r7, #42641	; 0xa691
   18af8:	sub	r0, r8, #1
   18afc:	mov	r1, #0
   18b00:	mov	r5, #0
   18b04:	mov	r4, #0
   18b08:	str	r0, [sp, #12]
   18b0c:	mov	r0, #1
   18b10:	movt	r6, #1
   18b14:	movt	r7, #1
   18b18:	str	r1, [sp, #8]
   18b1c:	str	r0, [sp, #16]
   18b20:	mov	r0, #1
   18b24:	str	r0, [sp, #4]
   18b28:	ldr	sl, [r9, r5, lsl #2]
   18b2c:	mov	r1, r6
   18b30:	mov	r0, sl
   18b34:	bl	12664 <strcmp@plt>
   18b38:	cmp	r0, #0
   18b3c:	beq	18c64 <main@@Base+0x102c>
   18b40:	mov	r0, sl
   18b44:	mov	r1, r7
   18b48:	bl	12664 <strcmp@plt>
   18b4c:	cmp	r0, #0
   18b50:	beq	18c64 <main@@Base+0x102c>
   18b54:	movw	r1, #40707	; 0x9f03
   18b58:	mov	r0, sl
   18b5c:	movt	r1, #1
   18b60:	bl	12664 <strcmp@plt>
   18b64:	cmp	r0, #0
   18b68:	beq	18c6c <main@@Base+0x1034>
   18b6c:	movw	r1, #42848	; 0xa760
   18b70:	mov	r0, sl
   18b74:	movt	r1, #1
   18b78:	bl	12664 <strcmp@plt>
   18b7c:	cmp	r0, #0
   18b80:	beq	18c6c <main@@Base+0x1034>
   18b84:	movw	r1, #40775	; 0x9f47
   18b88:	mov	r0, sl
   18b8c:	movt	r1, #1
   18b90:	bl	12664 <strcmp@plt>
   18b94:	cmp	r0, #0
   18b98:	beq	18bb4 <main@@Base+0xf7c>
   18b9c:	movw	r1, #40778	; 0x9f4a
   18ba0:	mov	r0, sl
   18ba4:	movt	r1, #1
   18ba8:	bl	12664 <strcmp@plt>
   18bac:	cmp	r0, #0
   18bb0:	bne	18bd0 <main@@Base+0xf98>
   18bb4:	add	r0, r5, #1
   18bb8:	cmp	r0, r8
   18bbc:	bge	18bd0 <main@@Base+0xf98>
   18bc0:	ldr	r1, [r9, r0, lsl #2]
   18bc4:	ldrb	r2, [r1]
   18bc8:	cmp	r2, #45	; 0x2d
   18bcc:	bne	18c94 <main@@Base+0x105c>
   18bd0:	movw	r1, #40859	; 0x9f9b
   18bd4:	mov	r0, sl
   18bd8:	movt	r1, #1
   18bdc:	bl	12664 <strcmp@plt>
   18be0:	cmp	r0, #0
   18be4:	beq	18c00 <main@@Base+0xfc8>
   18be8:	movw	r1, #40862	; 0x9f9e
   18bec:	mov	r0, sl
   18bf0:	movt	r1, #1
   18bf4:	bl	12664 <strcmp@plt>
   18bf8:	cmp	r0, #0
   18bfc:	bne	18c1c <main@@Base+0xfe4>
   18c00:	add	r0, r5, #1
   18c04:	cmp	r0, r8
   18c08:	bge	18c1c <main@@Base+0xfe4>
   18c0c:	ldr	r1, [r9, r0, lsl #2]
   18c10:	ldrb	r2, [r1]
   18c14:	cmp	r2, #45	; 0x2d
   18c18:	bne	18ca0 <main@@Base+0x1068>
   18c1c:	movw	r1, #42940	; 0xa7bc
   18c20:	mov	r0, sl
   18c24:	movt	r1, #1
   18c28:	bl	12664 <strcmp@plt>
   18c2c:	cmp	r0, #0
   18c30:	beq	18c88 <main@@Base+0x1050>
   18c34:	ldr	r0, [sp, #12]
   18c38:	cmp	r5, r0
   18c3c:	bne	18cc4 <main@@Base+0x108c>
   18c40:	ldrb	r0, [sl]
   18c44:	cmp	r0, #45	; 0x2d
   18c48:	beq	18cc4 <main@@Base+0x108c>
   18c4c:	movw	r0, #49640	; 0xc1e8
   18c50:	str	sl, [sp, #8]
   18c54:	movt	r0, #2
   18c58:	str	sl, [r0]
   18c5c:	ldr	r0, [sp, #12]
   18c60:	b	18c78 <main@@Base+0x1040>
   18c64:	mov	r4, #1
   18c68:	b	18c74 <main@@Base+0x103c>
   18c6c:	mov	r0, #0
   18c70:	str	r0, [sp, #16]
   18c74:	mov	r0, r5
   18c78:	add	r5, r0, #1
   18c7c:	cmp	r5, r8
   18c80:	blt	18b28 <main@@Base+0xef0>
   18c84:	b	18cb0 <main@@Base+0x1078>
   18c88:	mov	r0, #0
   18c8c:	str	r0, [sp, #4]
   18c90:	b	18c74 <main@@Base+0x103c>
   18c94:	movw	r2, #49624	; 0xc1d8
   18c98:	movt	r2, #2
   18c9c:	b	18ca8 <main@@Base+0x1070>
   18ca0:	movw	r2, #53416	; 0xd0a8
   18ca4:	movt	r2, #2
   18ca8:	str	r1, [r2]
   18cac:	b	18c78 <main@@Base+0x1040>
   18cb0:	ldr	r0, [sp, #8]
   18cb4:	cmp	r0, #0
   18cb8:	ldrbne	r0, [r0]
   18cbc:	cmpne	r0, #0
   18cc0:	bne	18cf0 <main@@Base+0x10b8>
   18cc4:	movw	r0, #49584	; 0xc1b0
   18cc8:	mov	r1, #25
   18ccc:	movt	r0, #2
   18cd0:	ldr	r3, [r0]
   18cd4:	movw	r0, #40657	; 0x9ed1
   18cd8:	movt	r0, #1
   18cdc:	mov	r2, #1
   18ce0:	bl	127cc <fwrite@plt>
   18ce4:	bl	18e08 <main@@Base+0x11d0>
   18ce8:	mov	r0, #1
   18cec:	bl	12868 <exit@plt>
   18cf0:	bl	128d4 <coda_init@plt>
   18cf4:	cmp	r0, #0
   18cf8:	bne	18d88 <main@@Base+0x1150>
   18cfc:	ldr	r0, [sp, #4]
   18d00:	clz	r0, r0
   18d04:	lsr	r0, r0, #5
   18d08:	bl	12718 <coda_set_option_bypass_special_types@plt>
   18d0c:	ldr	r0, [sp, #16]
   18d10:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18d14:	movw	r5, #49624	; 0xc1d8
   18d18:	movw	r6, #53392	; 0xd090
   18d1c:	movt	r5, #2
   18d20:	movt	r6, #2
   18d24:	ldr	r0, [r5]
   18d28:	cmp	r0, #0
   18d2c:	beq	18d48 <main@@Base+0x1110>
   18d30:	movw	r1, #40812	; 0x9f6c
   18d34:	movt	r1, #1
   18d38:	bl	12694 <fopen@plt>
   18d3c:	cmp	r0, #0
   18d40:	str	r0, [r6]
   18d44:	beq	18ddc <main@@Base+0x11a4>
   18d48:	mov	r0, r4
   18d4c:	bl	1709c <print_yaml_data@@Base>
   18d50:	ldr	r0, [r5]
   18d54:	cmp	r0, #0
   18d58:	beq	18d64 <main@@Base+0x112c>
   18d5c:	ldr	r0, [r6]
   18d60:	bl	12958 <fclose@plt>
   18d64:	bl	127fc <coda_done@plt>
   18d68:	mov	r0, #0
   18d6c:	sub	sp, fp, #28
   18d70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d74:	bl	18e08 <main@@Base+0x11d0>
   18d78:	b	18d80 <main@@Base+0x1148>
   18d7c:	bl	1936c <main@@Base+0x1734>
   18d80:	mov	r0, #0
   18d84:	bl	12868 <exit@plt>
   18d88:	movw	r0, #49584	; 0xc1b0
   18d8c:	movt	r0, #2
   18d90:	ldr	r4, [r0]
   18d94:	bl	12a60 <coda_get_errno@plt>
   18d98:	ldr	r0, [r0]
   18d9c:	bl	12a18 <coda_errno_to_string@plt>
   18da0:	movw	r1, #40590	; 0x9e8e
   18da4:	mov	r2, r0
   18da8:	mov	r0, r4
   18dac:	movt	r1, #1
   18db0:	bl	128b0 <fprintf@plt>
   18db4:	b	18ce8 <main@@Base+0x10b0>
   18db8:	movw	r0, #49584	; 0xc1b0
   18dbc:	mov	r1, #40	; 0x28
   18dc0:	movt	r0, #2
   18dc4:	ldr	r3, [r0]
   18dc8:	movw	r0, #40722	; 0x9f12
   18dcc:	movt	r0, #1
   18dd0:	b	18cdc <main@@Base+0x10a4>
   18dd4:	ldr	r2, [r4]
   18dd8:	b	18df0 <main@@Base+0x11b8>
   18ddc:	ldr	r2, [r5]
   18de0:	b	18df0 <main@@Base+0x11b8>
   18de4:	movw	r0, #49624	; 0xc1d8
   18de8:	movt	r0, #2
   18dec:	ldr	r2, [r0]
   18df0:	movw	r0, #49584	; 0xc1b0
   18df4:	movw	r1, #40814	; 0x9f6e
   18df8:	movt	r0, #2
   18dfc:	movt	r1, #1
   18e00:	ldr	r0, [r0]
   18e04:	b	18db0 <main@@Base+0x1178>
   18e08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e0c:	add	fp, sp, #28
   18e10:	sub	sp, sp, #4
   18e14:	movw	r0, #40891	; 0x9fbb
   18e18:	movt	r0, #1
   18e1c:	bl	12808 <puts@plt>
   18e20:	movw	r0, #40898	; 0x9fc2
   18e24:	movt	r0, #1
   18e28:	bl	12808 <puts@plt>
   18e2c:	movw	r0, #40968	; 0xa008
   18e30:	movt	r0, #1
   18e34:	bl	12808 <puts@plt>
   18e38:	movw	r8, #41566	; 0xa25e
   18e3c:	movt	r8, #1
   18e40:	mov	r0, r8
   18e44:	bl	12808 <puts@plt>
   18e48:	movw	r0, #41012	; 0xa034
   18e4c:	movt	r0, #1
   18e50:	bl	12808 <puts@plt>
   18e54:	movw	r0, #41039	; 0xa04f
   18e58:	movt	r0, #1
   18e5c:	bl	12808 <puts@plt>
   18e60:	movw	r5, #42832	; 0xa750
   18e64:	movt	r5, #1
   18e68:	mov	r0, r5
   18e6c:	bl	12808 <puts@plt>
   18e70:	movw	r6, #42870	; 0xa776
   18e74:	movt	r6, #1
   18e78:	mov	r0, r6
   18e7c:	bl	12808 <puts@plt>
   18e80:	movw	r7, #41588	; 0xa274
   18e84:	movt	r7, #1
   18e88:	mov	r0, r7
   18e8c:	bl	12808 <puts@plt>
   18e90:	movw	r4, #41635	; 0xa2a3
   18e94:	movt	r4, #1
   18e98:	mov	r0, r4
   18e9c:	bl	12808 <puts@plt>
   18ea0:	movw	r0, #41094	; 0xa086
   18ea4:	movt	r0, #1
   18ea8:	bl	12808 <puts@plt>
   18eac:	movw	r0, #41117	; 0xa09d
   18eb0:	movt	r0, #1
   18eb4:	bl	12808 <puts@plt>
   18eb8:	movw	r0, #41158	; 0xa0c6
   18ebc:	movt	r0, #1
   18ec0:	bl	12808 <puts@plt>
   18ec4:	movw	r0, #41181	; 0xa0dd
   18ec8:	movt	r0, #1
   18ecc:	bl	12808 <puts@plt>
   18ed0:	movw	r0, #41223	; 0xa107
   18ed4:	movt	r0, #1
   18ed8:	bl	12808 <puts@plt>
   18edc:	movw	r0, #41249	; 0xa121
   18ee0:	movt	r0, #1
   18ee4:	bl	12808 <puts@plt>
   18ee8:	movw	r0, #41298	; 0xa152
   18eec:	movt	r0, #1
   18ef0:	bl	12808 <puts@plt>
   18ef4:	movw	r0, #41323	; 0xa16b
   18ef8:	movt	r0, #1
   18efc:	bl	12808 <puts@plt>
   18f00:	movw	r0, #41393	; 0xa1b1
   18f04:	movt	r0, #1
   18f08:	bl	12808 <puts@plt>
   18f0c:	movw	sl, #42928	; 0xa7b0
   18f10:	movt	sl, #1
   18f14:	mov	r0, sl
   18f18:	bl	12808 <puts@plt>
   18f1c:	movw	r0, #42959	; 0xa7cf
   18f20:	movt	r0, #1
   18f24:	bl	12808 <puts@plt>
   18f28:	movw	r0, #43039	; 0xa81f
   18f2c:	movt	r0, #1
   18f30:	bl	12808 <puts@plt>
   18f34:	movw	r0, #43117	; 0xa86d
   18f38:	movt	r0, #1
   18f3c:	bl	12808 <puts@plt>
   18f40:	mov	r0, #10
   18f44:	bl	12910 <putchar@plt>
   18f48:	movw	r0, #41434	; 0xa1da
   18f4c:	movt	r0, #1
   18f50:	bl	12808 <puts@plt>
   18f54:	movw	r0, #41506	; 0xa222
   18f58:	movt	r0, #1
   18f5c:	bl	12808 <puts@plt>
   18f60:	mov	r0, r8
   18f64:	bl	12808 <puts@plt>
   18f68:	mov	r0, r5
   18f6c:	bl	12808 <puts@plt>
   18f70:	mov	r0, r6
   18f74:	bl	12808 <puts@plt>
   18f78:	mov	r0, r7
   18f7c:	bl	12808 <puts@plt>
   18f80:	mov	r0, r4
   18f84:	bl	12808 <puts@plt>
   18f88:	movw	r0, #41707	; 0xa2eb
   18f8c:	movt	r0, #1
   18f90:	bl	12808 <puts@plt>
   18f94:	movw	r0, #41731	; 0xa303
   18f98:	movt	r0, #1
   18f9c:	bl	12808 <puts@plt>
   18fa0:	movw	r0, #41796	; 0xa344
   18fa4:	movt	r0, #1
   18fa8:	bl	12808 <puts@plt>
   18fac:	movw	r0, #41820	; 0xa35c
   18fb0:	movt	r0, #1
   18fb4:	bl	12808 <puts@plt>
   18fb8:	movw	r6, #43537	; 0xaa11
   18fbc:	movt	r6, #1
   18fc0:	mov	r0, r6
   18fc4:	bl	12808 <puts@plt>
   18fc8:	movw	r0, #43573	; 0xaa35
   18fcc:	movt	r0, #1
   18fd0:	bl	12808 <puts@plt>
   18fd4:	movw	r0, #41895	; 0xa3a7
   18fd8:	movt	r0, #1
   18fdc:	bl	12808 <puts@plt>
   18fe0:	movw	r0, #41927	; 0xa3c7
   18fe4:	movt	r0, #1
   18fe8:	bl	12808 <puts@plt>
   18fec:	movw	r0, #42002	; 0xa412
   18ff0:	movt	r0, #1
   18ff4:	bl	12808 <puts@plt>
   18ff8:	movw	r0, #42058	; 0xa44a
   18ffc:	movt	r0, #1
   19000:	bl	12808 <puts@plt>
   19004:	movw	r0, #42134	; 0xa496
   19008:	movt	r0, #1
   1900c:	bl	12808 <puts@plt>
   19010:	movw	r0, #42167	; 0xa4b7
   19014:	movt	r0, #1
   19018:	bl	12808 <puts@plt>
   1901c:	mov	r0, sl
   19020:	bl	12808 <puts@plt>
   19024:	movw	r0, #42959	; 0xa7cf
   19028:	movt	r0, #1
   1902c:	mov	r9, r0
   19030:	bl	12808 <puts@plt>
   19034:	movw	r0, #43039	; 0xa81f
   19038:	movt	r0, #1
   1903c:	mov	r8, r0
   19040:	bl	12808 <puts@plt>
   19044:	movw	r0, #43117	; 0xa86d
   19048:	movt	r0, #1
   1904c:	mov	r7, r0
   19050:	bl	12808 <puts@plt>
   19054:	mov	r0, #10
   19058:	bl	12910 <putchar@plt>
   1905c:	movw	r0, #42246	; 0xa506
   19060:	movt	r0, #1
   19064:	bl	12808 <puts@plt>
   19068:	movw	r0, #42316	; 0xa54c
   1906c:	movt	r0, #1
   19070:	bl	12808 <puts@plt>
   19074:	movw	r0, #42376	; 0xa588
   19078:	movt	r0, #1
   1907c:	bl	12808 <puts@plt>
   19080:	movw	r4, #42625	; 0xa681
   19084:	movt	r4, #1
   19088:	mov	r0, r4
   1908c:	bl	12808 <puts@plt>
   19090:	movw	r5, #42654	; 0xa69e
   19094:	movt	r5, #1
   19098:	mov	r0, r5
   1909c:	bl	12808 <puts@plt>
   190a0:	movw	r0, #42398	; 0xa59e
   190a4:	movt	r0, #1
   190a8:	bl	12808 <puts@plt>
   190ac:	movw	r0, #42832	; 0xa750
   190b0:	movt	r0, #1
   190b4:	bl	12808 <puts@plt>
   190b8:	movw	r0, #42870	; 0xa776
   190bc:	movt	r0, #1
   190c0:	bl	12808 <puts@plt>
   190c4:	mov	r0, r6
   190c8:	bl	12808 <puts@plt>
   190cc:	movw	r0, #43573	; 0xaa35
   190d0:	movt	r0, #1
   190d4:	bl	12808 <puts@plt>
   190d8:	movw	r0, #43624	; 0xaa68
   190dc:	movt	r0, #1
   190e0:	bl	12808 <puts@plt>
   190e4:	movw	r0, #43654	; 0xaa86
   190e8:	movt	r0, #1
   190ec:	bl	12808 <puts@plt>
   190f0:	movw	r6, #43726	; 0xaace
   190f4:	movt	r6, #1
   190f8:	mov	r0, r6
   190fc:	bl	12808 <puts@plt>
   19100:	mov	r0, sl
   19104:	bl	12808 <puts@plt>
   19108:	mov	r0, r9
   1910c:	bl	12808 <puts@plt>
   19110:	mov	r0, r8
   19114:	bl	12808 <puts@plt>
   19118:	mov	r0, r7
   1911c:	bl	12808 <puts@plt>
   19120:	mov	r0, #10
   19124:	bl	12910 <putchar@plt>
   19128:	movw	r0, #42473	; 0xa5e9
   1912c:	movt	r0, #1
   19130:	bl	12808 <puts@plt>
   19134:	movw	r0, #42543	; 0xa62f
   19138:	movt	r0, #1
   1913c:	bl	12808 <puts@plt>
   19140:	movw	r0, #42603	; 0xa66b
   19144:	movt	r0, #1
   19148:	bl	12808 <puts@plt>
   1914c:	mov	r0, r4
   19150:	bl	12808 <puts@plt>
   19154:	mov	r0, r5
   19158:	bl	12808 <puts@plt>
   1915c:	movw	r0, #42725	; 0xa6e5
   19160:	movt	r0, #1
   19164:	bl	12808 <puts@plt>
   19168:	movw	r0, #42801	; 0xa731
   1916c:	movt	r0, #1
   19170:	bl	12808 <puts@plt>
   19174:	movw	r0, #42832	; 0xa750
   19178:	movt	r0, #1
   1917c:	bl	12808 <puts@plt>
   19180:	movw	r0, #42870	; 0xa776
   19184:	movt	r0, #1
   19188:	bl	12808 <puts@plt>
   1918c:	movw	r0, #43537	; 0xaa11
   19190:	movt	r0, #1
   19194:	bl	12808 <puts@plt>
   19198:	movw	r0, #43573	; 0xaa35
   1919c:	movt	r0, #1
   191a0:	bl	12808 <puts@plt>
   191a4:	movw	r0, #43624	; 0xaa68
   191a8:	movt	r0, #1
   191ac:	bl	12808 <puts@plt>
   191b0:	movw	r0, #43654	; 0xaa86
   191b4:	movt	r0, #1
   191b8:	bl	12808 <puts@plt>
   191bc:	mov	r0, r6
   191c0:	bl	12808 <puts@plt>
   191c4:	mov	r0, sl
   191c8:	bl	12808 <puts@plt>
   191cc:	mov	r0, r9
   191d0:	bl	12808 <puts@plt>
   191d4:	mov	r0, r8
   191d8:	bl	12808 <puts@plt>
   191dc:	mov	r0, r7
   191e0:	bl	12808 <puts@plt>
   191e4:	mov	r0, #10
   191e8:	bl	12910 <putchar@plt>
   191ec:	movw	r0, #43147	; 0xa88b
   191f0:	movt	r0, #1
   191f4:	bl	12808 <puts@plt>
   191f8:	movw	r0, #43219	; 0xa8d3
   191fc:	movt	r0, #1
   19200:	bl	12808 <puts@plt>
   19204:	movw	r0, #43293	; 0xa91d
   19208:	movt	r0, #1
   1920c:	bl	12808 <puts@plt>
   19210:	movw	r0, #43367	; 0xa967
   19214:	movt	r0, #1
   19218:	bl	12808 <puts@plt>
   1921c:	movw	r0, #43413	; 0xa995
   19220:	movt	r0, #1
   19224:	bl	12808 <puts@plt>
   19228:	movw	r0, #43436	; 0xa9ac
   1922c:	movt	r0, #1
   19230:	bl	12808 <puts@plt>
   19234:	movw	r0, #43484	; 0xa9dc
   19238:	movt	r0, #1
   1923c:	bl	12808 <puts@plt>
   19240:	movw	r0, #43537	; 0xaa11
   19244:	movt	r0, #1
   19248:	bl	12808 <puts@plt>
   1924c:	movw	r0, #43573	; 0xaa35
   19250:	movt	r0, #1
   19254:	bl	12808 <puts@plt>
   19258:	movw	r0, #43624	; 0xaa68
   1925c:	movt	r0, #1
   19260:	bl	12808 <puts@plt>
   19264:	movw	r0, #43654	; 0xaa86
   19268:	movt	r0, #1
   1926c:	bl	12808 <puts@plt>
   19270:	mov	r0, r6
   19274:	bl	12808 <puts@plt>
   19278:	movw	r0, #43803	; 0xab1b
   1927c:	movt	r0, #1
   19280:	bl	12808 <puts@plt>
   19284:	movw	r0, #43835	; 0xab3b
   19288:	movt	r0, #1
   1928c:	bl	12808 <puts@plt>
   19290:	movw	r0, #43913	; 0xab89
   19294:	movt	r0, #1
   19298:	bl	12808 <puts@plt>
   1929c:	movw	r0, #43988	; 0xabd4
   192a0:	movt	r0, #1
   192a4:	bl	12808 <puts@plt>
   192a8:	movw	r0, #44051	; 0xac13
   192ac:	movt	r0, #1
   192b0:	bl	12808 <puts@plt>
   192b4:	movw	r0, #44128	; 0xac60
   192b8:	movt	r0, #1
   192bc:	bl	12808 <puts@plt>
   192c0:	mov	r0, #10
   192c4:	bl	12910 <putchar@plt>
   192c8:	movw	r0, #44181	; 0xac95
   192cc:	movt	r0, #1
   192d0:	bl	12808 <puts@plt>
   192d4:	movw	r0, #44205	; 0xacad
   192d8:	movt	r0, #1
   192dc:	bl	12808 <puts@plt>
   192e0:	mov	r0, #10
   192e4:	bl	12910 <putchar@plt>
   192e8:	movw	r0, #44235	; 0xaccb
   192ec:	movt	r0, #1
   192f0:	bl	12808 <puts@plt>
   192f4:	movw	r0, #44262	; 0xace6
   192f8:	movt	r0, #1
   192fc:	bl	12808 <puts@plt>
   19300:	mov	r0, #10
   19304:	bl	12910 <putchar@plt>
   19308:	movw	r0, #44312	; 0xad18
   1930c:	movt	r0, #1
   19310:	bl	12808 <puts@plt>
   19314:	movw	r0, #44390	; 0xad66
   19318:	movt	r0, #1
   1931c:	bl	12808 <puts@plt>
   19320:	movw	r0, #44463	; 0xadaf
   19324:	movt	r0, #1
   19328:	bl	12808 <puts@plt>
   1932c:	movw	r0, #44506	; 0xadda
   19330:	movt	r0, #1
   19334:	bl	12808 <puts@plt>
   19338:	movw	r0, #44582	; 0xae26
   1933c:	movt	r0, #1
   19340:	bl	12808 <puts@plt>
   19344:	movw	r0, #44652	; 0xae6c
   19348:	movt	r0, #1
   1934c:	bl	12808 <puts@plt>
   19350:	movw	r0, #44715	; 0xaeab
   19354:	movt	r0, #1
   19358:	bl	12808 <puts@plt>
   1935c:	mov	r0, #10
   19360:	sub	sp, fp, #28
   19364:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19368:	b	12910 <putchar@plt>
   1936c:	push	{fp, lr}
   19370:	mov	fp, sp
   19374:	bl	12a54 <coda_get_libcoda_version@plt>
   19378:	mov	r1, r0
   1937c:	movw	r0, #40683	; 0x9eeb
   19380:	movt	r0, #1
   19384:	bl	1267c <printf@plt>
   19388:	movw	r0, #44779	; 0xaeeb
   1938c:	movt	r0, #1
   19390:	bl	12808 <puts@plt>
   19394:	mov	r0, #10
   19398:	pop	{fp, lr}
   1939c:	b	12910 <putchar@plt>
   193a0:	cmp	r3, #0
   193a4:	cmpeq	r2, #0
   193a8:	bne	193cc <main@@Base+0x1794>
   193ac:	cmp	r1, #0
   193b0:	movlt	r1, #-2147483648	; 0x80000000
   193b4:	movlt	r0, #0
   193b8:	blt	193c8 <main@@Base+0x1790>
   193bc:	cmpeq	r0, #0
   193c0:	mvnne	r1, #-2147483648	; 0x80000000
   193c4:	mvnne	r0, #0
   193c8:	b	19474 <main@@Base+0x183c>
   193cc:	sub	sp, sp, #8
   193d0:	push	{sp, lr}
   193d4:	cmp	r1, #0
   193d8:	blt	193f8 <main@@Base+0x17c0>
   193dc:	cmp	r3, #0
   193e0:	blt	1942c <main@@Base+0x17f4>
   193e4:	bl	19484 <main@@Base+0x184c>
   193e8:	ldr	lr, [sp, #4]
   193ec:	add	sp, sp, #8
   193f0:	pop	{r2, r3}
   193f4:	bx	lr
   193f8:	rsbs	r0, r0, #0
   193fc:	sbc	r1, r1, r1, lsl #1
   19400:	cmp	r3, #0
   19404:	blt	19450 <main@@Base+0x1818>
   19408:	bl	19484 <main@@Base+0x184c>
   1940c:	ldr	lr, [sp, #4]
   19410:	add	sp, sp, #8
   19414:	pop	{r2, r3}
   19418:	rsbs	r0, r0, #0
   1941c:	sbc	r1, r1, r1, lsl #1
   19420:	rsbs	r2, r2, #0
   19424:	sbc	r3, r3, r3, lsl #1
   19428:	bx	lr
   1942c:	rsbs	r2, r2, #0
   19430:	sbc	r3, r3, r3, lsl #1
   19434:	bl	19484 <main@@Base+0x184c>
   19438:	ldr	lr, [sp, #4]
   1943c:	add	sp, sp, #8
   19440:	pop	{r2, r3}
   19444:	rsbs	r0, r0, #0
   19448:	sbc	r1, r1, r1, lsl #1
   1944c:	bx	lr
   19450:	rsbs	r2, r2, #0
   19454:	sbc	r3, r3, r3, lsl #1
   19458:	bl	19484 <main@@Base+0x184c>
   1945c:	ldr	lr, [sp, #4]
   19460:	add	sp, sp, #8
   19464:	pop	{r2, r3}
   19468:	rsbs	r2, r2, #0
   1946c:	sbc	r3, r3, r3, lsl #1
   19470:	bx	lr
   19474:	push	{r1, lr}
   19478:	mov	r0, #8
   1947c:	bl	12640 <raise@plt>
   19480:	pop	{r1, pc}
   19484:	cmp	r1, r3
   19488:	cmpeq	r0, r2
   1948c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19490:	mov	r4, r0
   19494:	movcc	r0, #0
   19498:	mov	r5, r1
   1949c:	ldr	lr, [sp, #36]	; 0x24
   194a0:	movcc	r1, r0
   194a4:	bcc	195a0 <main@@Base+0x1968>
   194a8:	cmp	r3, #0
   194ac:	clzeq	ip, r2
   194b0:	clzne	ip, r3
   194b4:	addeq	ip, ip, #32
   194b8:	cmp	r5, #0
   194bc:	clzeq	r1, r4
   194c0:	addeq	r1, r1, #32
   194c4:	clzne	r1, r5
   194c8:	sub	ip, ip, r1
   194cc:	sub	sl, ip, #32
   194d0:	lsl	r9, r3, ip
   194d4:	rsb	fp, ip, #32
   194d8:	orr	r9, r9, r2, lsl sl
   194dc:	orr	r9, r9, r2, lsr fp
   194e0:	lsl	r8, r2, ip
   194e4:	cmp	r5, r9
   194e8:	cmpeq	r4, r8
   194ec:	movcc	r0, #0
   194f0:	movcc	r1, r0
   194f4:	bcc	19510 <main@@Base+0x18d8>
   194f8:	mov	r0, #1
   194fc:	subs	r4, r4, r8
   19500:	lsl	r1, r0, sl
   19504:	orr	r1, r1, r0, lsr fp
   19508:	lsl	r0, r0, ip
   1950c:	sbc	r5, r5, r9
   19510:	cmp	ip, #0
   19514:	beq	195a0 <main@@Base+0x1968>
   19518:	lsr	r6, r8, #1
   1951c:	orr	r6, r6, r9, lsl #31
   19520:	lsr	r7, r9, #1
   19524:	mov	r2, ip
   19528:	b	1954c <main@@Base+0x1914>
   1952c:	subs	r3, r4, r6
   19530:	sbc	r8, r5, r7
   19534:	adds	r3, r3, r3
   19538:	adc	r8, r8, r8
   1953c:	adds	r4, r3, #1
   19540:	adc	r5, r8, #0
   19544:	subs	r2, r2, #1
   19548:	beq	19568 <main@@Base+0x1930>
   1954c:	cmp	r5, r7
   19550:	cmpeq	r4, r6
   19554:	bcs	1952c <main@@Base+0x18f4>
   19558:	adds	r4, r4, r4
   1955c:	adc	r5, r5, r5
   19560:	subs	r2, r2, #1
   19564:	bne	1954c <main@@Base+0x1914>
   19568:	lsr	r3, r4, ip
   1956c:	orr	r3, r3, r5, lsl fp
   19570:	lsr	r2, r5, ip
   19574:	orr	r3, r3, r5, lsr sl
   19578:	adds	r0, r0, r4
   1957c:	mov	r4, r3
   19580:	lsl	r3, r2, ip
   19584:	orr	r3, r3, r4, lsl sl
   19588:	lsl	ip, r4, ip
   1958c:	orr	r3, r3, r4, lsr fp
   19590:	adc	r1, r1, r5
   19594:	subs	r0, r0, ip
   19598:	mov	r5, r2
   1959c:	sbc	r1, r1, r3
   195a0:	cmp	lr, #0
   195a4:	strdne	r4, [lr]
   195a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000195ac <__libc_csu_init@@Base>:
   195ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   195b0:	mov	r7, r0
   195b4:	ldr	r6, [pc, #72]	; 19604 <__libc_csu_init@@Base+0x58>
   195b8:	ldr	r5, [pc, #72]	; 19608 <__libc_csu_init@@Base+0x5c>
   195bc:	add	r6, pc, r6
   195c0:	add	r5, pc, r5
   195c4:	sub	r6, r6, r5
   195c8:	mov	r8, r1
   195cc:	mov	r9, r2
   195d0:	bl	125fc <coda_cursor_get_byte_size@plt-0x20>
   195d4:	asrs	r6, r6, #2
   195d8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   195dc:	mov	r4, #0
   195e0:	add	r4, r4, #1
   195e4:	ldr	r3, [r5], #4
   195e8:	mov	r2, r9
   195ec:	mov	r1, r8
   195f0:	mov	r0, r7
   195f4:	blx	r3
   195f8:	cmp	r6, r4
   195fc:	bne	195e0 <__libc_csu_init@@Base+0x34>
   19600:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19604:	andeq	r2, r1, r0, lsr r9
   19608:	andeq	r2, r1, r8, lsr #18

0001960c <__libc_csu_fini@@Base>:
   1960c:	bx	lr

Disassembly of section .fini:

00019610 <.fini>:
   19610:	push	{r3, lr}
   19614:	pop	{r3, pc}
