
../repos/sgerbino-table-2fdd8d0/bin/table_validator_test:     file format elf32-littlearm


Disassembly of section .init:

00011b38 <.init>:
   11b38:	push	{r3, lr}
   11b3c:	bl	11db8 <_start@@Base+0x3c>
   11b40:	pop	{r3, pc}

Disassembly of section .plt:

00011b44 <strcmp@plt-0x14>:
   11b44:	push	{lr}		; (str lr, [sp, #-4]!)
   11b48:	ldr	lr, [pc, #4]	; 11b54 <strcmp@plt-0x4>
   11b4c:	add	lr, pc, lr
   11b50:	ldr	pc, [lr, #8]!
   11b54:	andeq	r3, r1, ip, lsr #9

00011b58 <strcmp@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #77824	; 0x13000
   11b60:	ldr	pc, [ip, #1196]!	; 0x4ac

00011b64 <printf@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #77824	; 0x13000
   11b6c:	ldr	pc, [ip, #1188]!	; 0x4a4

00011b70 <free@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #77824	; 0x13000
   11b78:	ldr	pc, [ip, #1180]!	; 0x49c

00011b7c <time@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #77824	; 0x13000
   11b84:	ldr	pc, [ip, #1172]!	; 0x494

00011b88 <realloc@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #77824	; 0x13000
   11b90:	ldr	pc, [ip, #1164]!	; 0x48c

00011b94 <strcpy@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #77824	; 0x13000
   11b9c:	ldr	pc, [ip, #1156]!	; 0x484

00011ba0 <malloc@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #77824	; 0x13000
   11ba8:	ldr	pc, [ip, #1148]!	; 0x47c

00011bac <__libc_start_main@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #77824	; 0x13000
   11bb4:	ldr	pc, [ip, #1140]!	; 0x474

00011bb8 <__gmon_start__@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #77824	; 0x13000
   11bc0:	ldr	pc, [ip, #1132]!	; 0x46c

00011bc4 <strlen@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #77824	; 0x13000
   11bcc:	ldr	pc, [ip, #1124]!	; 0x464

00011bd0 <srand@plt>:
   11bd0:	add	ip, pc, #0, 12
   11bd4:	add	ip, ip, #77824	; 0x13000
   11bd8:	ldr	pc, [ip, #1116]!	; 0x45c

00011bdc <snprintf@plt>:
   11bdc:	add	ip, pc, #0, 12
   11be0:	add	ip, ip, #77824	; 0x13000
   11be4:	ldr	pc, [ip, #1108]!	; 0x454

00011be8 <__isoc99_sscanf@plt>:
   11be8:	add	ip, pc, #0, 12
   11bec:	add	ip, ip, #77824	; 0x13000
   11bf0:	ldr	pc, [ip, #1100]!	; 0x44c

00011bf4 <rand@plt>:
   11bf4:	add	ip, pc, #0, 12
   11bf8:	add	ip, ip, #77824	; 0x13000
   11bfc:	ldr	pc, [ip, #1092]!	; 0x444

00011c00 <abort@plt>:
   11c00:	add	ip, pc, #0, 12
   11c04:	add	ip, ip, #77824	; 0x13000
   11c08:	ldr	pc, [ip, #1084]!	; 0x43c

Disassembly of section .text:

00011c0c <main@@Base>:
   11c0c:	push	{r4, r5, r6, lr}
   11c10:	sub	sp, sp, #64	; 0x40
   11c14:	add	r0, sp, #4
   11c18:	bl	11b7c <time@plt>
   11c1c:	bl	11bd0 <srand@plt>
   11c20:	bl	11bf4 <rand@plt>
   11c24:	mov	r5, r0
   11c28:	add	r0, sp, #4
   11c2c:	bl	11b7c <time@plt>
   11c30:	bl	11bd0 <srand@plt>
   11c34:	bl	11bf4 <rand@plt>
   11c38:	mov	r6, r0
   11c3c:	add	r0, sp, #8
   11c40:	bl	11e6c <table_init@@Base>
   11c44:	mov	r1, r5
   11c48:	add	r0, sp, #8
   11c4c:	bl	13a38 <table_row_is_valid@@Base>
   11c50:	subs	r4, r0, #0
   11c54:	beq	11c68 <main@@Base+0x5c>
   11c58:	mov	r1, r5
   11c5c:	ldr	r0, [pc, #252]	; 11d60 <main@@Base+0x154>
   11c60:	mvn	r4, #0
   11c64:	bl	11b64 <printf@plt>
   11c68:	mov	r1, r6
   11c6c:	add	r0, sp, #8
   11c70:	bl	13a04 <table_column_is_valid@@Base>
   11c74:	cmp	r0, #0
   11c78:	beq	11c8c <main@@Base+0x80>
   11c7c:	mov	r1, r6
   11c80:	ldr	r0, [pc, #220]	; 11d64 <main@@Base+0x158>
   11c84:	mvn	r4, #0
   11c88:	bl	11b64 <printf@plt>
   11c8c:	mov	r2, r6
   11c90:	mov	r1, r5
   11c94:	add	r0, sp, #8
   11c98:	bl	13a6c <table_cell_is_valid@@Base>
   11c9c:	cmp	r0, #0
   11ca0:	beq	11cb8 <main@@Base+0xac>
   11ca4:	mov	r2, r6
   11ca8:	mov	r1, r5
   11cac:	ldr	r0, [pc, #180]	; 11d68 <main@@Base+0x15c>
   11cb0:	mvn	r4, #0
   11cb4:	bl	11b64 <printf@plt>
   11cb8:	add	r0, sp, #8
   11cbc:	bl	13294 <table_add_row@@Base>
   11cc0:	mov	r1, r0
   11cc4:	mov	r5, r0
   11cc8:	add	r0, sp, #8
   11ccc:	bl	13a38 <table_row_is_valid@@Base>
   11cd0:	cmp	r0, #0
   11cd4:	bne	11ce8 <main@@Base+0xdc>
   11cd8:	mov	r1, r5
   11cdc:	ldr	r0, [pc, #136]	; 11d6c <main@@Base+0x160>
   11ce0:	mvn	r4, #0
   11ce4:	bl	11b64 <printf@plt>
   11ce8:	mov	r2, #0
   11cec:	ldr	r1, [pc, #124]	; 11d70 <main@@Base+0x164>
   11cf0:	add	r0, sp, #8
   11cf4:	bl	127dc <table_add_column@@Base>
   11cf8:	mov	r1, r0
   11cfc:	mov	r6, r0
   11d00:	add	r0, sp, #8
   11d04:	bl	13a04 <table_column_is_valid@@Base>
   11d08:	cmp	r0, #0
   11d0c:	bne	11d20 <main@@Base+0x114>
   11d10:	mov	r1, r6
   11d14:	ldr	r0, [pc, #88]	; 11d74 <main@@Base+0x168>
   11d18:	mvn	r4, #0
   11d1c:	bl	11b64 <printf@plt>
   11d20:	mov	r2, r6
   11d24:	mov	r1, r5
   11d28:	add	r0, sp, #8
   11d2c:	bl	13a6c <table_cell_is_valid@@Base>
   11d30:	cmp	r0, #0
   11d34:	bne	11d4c <main@@Base+0x140>
   11d38:	mov	r2, r6
   11d3c:	mov	r1, r5
   11d40:	ldr	r0, [pc, #48]	; 11d78 <main@@Base+0x16c>
   11d44:	mvn	r4, #0
   11d48:	bl	11b64 <printf@plt>
   11d4c:	add	r0, sp, #8
   11d50:	bl	11ec4 <table_destroy@@Base>
   11d54:	mov	r0, r4
   11d58:	add	sp, sp, #64	; 0x40
   11d5c:	pop	{r4, r5, r6, pc}
   11d60:	andeq	r4, r1, ip, asr #8
   11d64:	andeq	r4, r1, r7, ror #8
   11d68:	andeq	r4, r1, r5, lsl #9
   11d6c:	andeq	r4, r1, r5, lsr #9
   11d70:	andeq	r4, r1, pc, ror #9
   11d74:			; <UNDEFINED> instruction: 0x000144bc
   11d78:	ldrdeq	r4, [r1], -r6

00011d7c <_start@@Base>:
   11d7c:	mov	fp, #0
   11d80:	mov	lr, #0
   11d84:	pop	{r1}		; (ldr r1, [sp], #4)
   11d88:	mov	r2, sp
   11d8c:	push	{r2}		; (str r2, [sp, #-4]!)
   11d90:	push	{r0}		; (str r0, [sp, #-4]!)
   11d94:	ldr	ip, [pc, #16]	; 11dac <_start@@Base+0x30>
   11d98:	push	{ip}		; (str ip, [sp, #-4]!)
   11d9c:	ldr	r0, [pc, #12]	; 11db0 <_start@@Base+0x34>
   11da0:	ldr	r3, [pc, #12]	; 11db4 <_start@@Base+0x38>
   11da4:	bl	11bac <__libc_start_main@plt>
   11da8:	bl	11c00 <abort@plt>
   11dac:	andeq	r4, r1, ip, lsr r4
   11db0:	andeq	r1, r1, ip, lsl #24
   11db4:	ldrdeq	r4, [r1], -ip
   11db8:	ldr	r3, [pc, #20]	; 11dd4 <_start@@Base+0x58>
   11dbc:	ldr	r2, [pc, #20]	; 11dd8 <_start@@Base+0x5c>
   11dc0:	add	r3, pc, r3
   11dc4:	ldr	r2, [r3, r2]
   11dc8:	cmp	r2, #0
   11dcc:	bxeq	lr
   11dd0:	b	11bb8 <__gmon_start__@plt>
   11dd4:	andeq	r3, r1, r8, lsr r2
   11dd8:	andeq	r0, r0, r8, asr #32
   11ddc:	ldr	r0, [pc, #24]	; 11dfc <_start@@Base+0x80>
   11de0:	ldr	r3, [pc, #24]	; 11e00 <_start@@Base+0x84>
   11de4:	cmp	r3, r0
   11de8:	bxeq	lr
   11dec:	ldr	r3, [pc, #16]	; 11e04 <_start@@Base+0x88>
   11df0:	cmp	r3, #0
   11df4:	bxeq	lr
   11df8:	bx	r3
   11dfc:	andeq	r5, r2, r4, asr r0
   11e00:	andeq	r5, r2, r4, asr r0
   11e04:	andeq	r0, r0, r0
   11e08:	ldr	r0, [pc, #36]	; 11e34 <_start@@Base+0xb8>
   11e0c:	ldr	r1, [pc, #36]	; 11e38 <_start@@Base+0xbc>
   11e10:	sub	r1, r1, r0
   11e14:	asr	r1, r1, #2
   11e18:	add	r1, r1, r1, lsr #31
   11e1c:	asrs	r1, r1, #1
   11e20:	bxeq	lr
   11e24:	ldr	r3, [pc, #16]	; 11e3c <_start@@Base+0xc0>
   11e28:	cmp	r3, #0
   11e2c:	bxeq	lr
   11e30:	bx	r3
   11e34:	andeq	r5, r2, r4, asr r0
   11e38:	andeq	r5, r2, r4, asr r0
   11e3c:	andeq	r0, r0, r0
   11e40:	push	{r4, lr}
   11e44:	ldr	r4, [pc, #24]	; 11e64 <_start@@Base+0xe8>
   11e48:	ldrb	r3, [r4]
   11e4c:	cmp	r3, #0
   11e50:	popne	{r4, pc}
   11e54:	bl	11ddc <_start@@Base+0x60>
   11e58:	mov	r3, #1
   11e5c:	strb	r3, [r4]
   11e60:	pop	{r4, pc}
   11e64:	andeq	r5, r2, r4, asr r0
   11e68:	b	11e08 <_start@@Base+0x8c>

00011e6c <table_init@@Base>:
   11e6c:	mov	r3, #0
   11e70:	mov	r2, #10
   11e74:	mov	r1, #20
   11e78:	str	r3, [r0]
   11e7c:	str	r3, [r0, #4]
   11e80:	strd	r2, [r0, #8]
   11e84:	str	r3, [r0, #16]
   11e88:	str	r3, [r0, #20]
   11e8c:	str	r1, [r0, #24]
   11e90:	str	r3, [r0, #28]
   11e94:	str	r3, [r0, #32]
   11e98:	str	r3, [r0, #36]	; 0x24
   11e9c:	str	r3, [r0, #40]	; 0x28
   11ea0:	str	r3, [r0, #44]	; 0x2c
   11ea4:	strd	r2, [r0, #48]	; 0x30
   11ea8:	bx	lr

00011eac <table_new@@Base>:
   11eac:	push	{r4, lr}
   11eb0:	mov	r0, #56	; 0x38
   11eb4:	bl	11ba0 <malloc@plt>
   11eb8:	mov	r4, r0
   11ebc:	bl	11e6c <table_init@@Base>
   11ec0:	pop	{r4, pc}

00011ec4 <table_destroy@@Base>:
   11ec4:	push	{r4, r5, r6, lr}
   11ec8:	subs	r4, r0, #0
   11ecc:	popeq	{r4, r5, r6, pc}
   11ed0:	mvn	r2, #0
   11ed4:	mov	r3, #64	; 0x40
   11ed8:	mov	r1, r2
   11edc:	mov	r5, #0
   11ee0:	bl	12698 <table_notify@@Base>
   11ee4:	mov	r0, r4
   11ee8:	bl	1328c <table_get_row_length@@Base>
   11eec:	mov	r6, r0
   11ef0:	cmp	r6, r5
   11ef4:	bgt	11f64 <table_destroy@@Base+0xa0>
   11ef8:	ldr	r0, [r4, #16]
   11efc:	cmp	r0, #0
   11f00:	beq	11f08 <table_destroy@@Base+0x44>
   11f04:	bl	11b70 <free@plt>
   11f08:	mov	r0, r4
   11f0c:	mov	r5, #0
   11f10:	bl	12770 <table_get_column_length@@Base>
   11f14:	mov	r6, r0
   11f18:	cmp	r6, r5
   11f1c:	bgt	11f78 <table_destroy@@Base+0xb4>
   11f20:	ldr	r0, [r4]
   11f24:	cmp	r0, #0
   11f28:	beq	11f30 <table_destroy@@Base+0x6c>
   11f2c:	bl	11b70 <free@plt>
   11f30:	ldr	r0, [r4, #36]	; 0x24
   11f34:	cmp	r0, #0
   11f38:	beq	11f40 <table_destroy@@Base+0x7c>
   11f3c:	bl	11b70 <free@plt>
   11f40:	ldr	r0, [r4, #40]	; 0x28
   11f44:	cmp	r0, #0
   11f48:	beq	11f50 <table_destroy@@Base+0x8c>
   11f4c:	bl	11b70 <free@plt>
   11f50:	ldr	r0, [r4, #44]	; 0x2c
   11f54:	cmp	r0, #0
   11f58:	popeq	{r4, r5, r6, pc}
   11f5c:	pop	{r4, r5, r6, lr}
   11f60:	b	11b70 <free@plt>
   11f64:	mov	r1, r5
   11f68:	mov	r0, r4
   11f6c:	bl	1323c <table_row_destroy@@Base>
   11f70:	add	r5, r5, #1
   11f74:	b	11ef0 <table_destroy@@Base+0x2c>
   11f78:	mov	r1, r5
   11f7c:	mov	r0, r4
   11f80:	bl	12754 <table_column_destroy@@Base>
   11f84:	add	r5, r5, #1
   11f88:	b	11f18 <table_destroy@@Base+0x54>

00011f8c <table_delete@@Base>:
   11f8c:	push	{r4, lr}
   11f90:	mov	r4, r0
   11f94:	bl	11ec4 <table_destroy@@Base>
   11f98:	mov	r0, r4
   11f9c:	pop	{r4, lr}
   11fa0:	b	11b70 <free@plt>

00011fa4 <table_dupe@@Base>:
   11fa4:	push	{r4, r5, r6, r7, r8, r9, lr}
   11fa8:	sub	sp, sp, #20
   11fac:	mov	r6, r0
   11fb0:	mov	r4, #0
   11fb4:	bl	1328c <table_get_row_length@@Base>
   11fb8:	mov	r9, r0
   11fbc:	mov	r0, r6
   11fc0:	bl	12770 <table_get_column_length@@Base>
   11fc4:	mov	r8, r0
   11fc8:	bl	11eac <table_new@@Base>
   11fcc:	mov	r7, r0
   11fd0:	cmp	r4, r8
   11fd4:	blt	11ff0 <table_dupe@@Base+0x4c>
   11fd8:	mov	r5, #0
   11fdc:	cmp	r5, r9
   11fe0:	mov	r0, r7
   11fe4:	blt	12024 <table_dupe@@Base+0x80>
   11fe8:	add	sp, sp, #20
   11fec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11ff0:	mov	r1, r4
   11ff4:	mov	r0, r6
   11ff8:	bl	12a34 <table_get_column_name@@Base>
   11ffc:	mov	r5, r0
   12000:	mov	r1, r4
   12004:	mov	r0, r6
   12008:	add	r4, r4, #1
   1200c:	bl	127c8 <table_get_column_data_type@@Base>
   12010:	mov	r2, r0
   12014:	mov	r1, r5
   12018:	mov	r0, r7
   1201c:	bl	127dc <table_add_column@@Base>
   12020:	b	11fd0 <table_dupe@@Base+0x2c>
   12024:	mov	r4, #0
   12028:	bl	13294 <table_add_row@@Base>
   1202c:	cmp	r4, r8
   12030:	addge	r5, r5, #1
   12034:	bge	11fdc <table_dupe@@Base+0x38>
   12038:	mov	r1, r4
   1203c:	mov	r0, r6
   12040:	bl	127c8 <table_get_column_data_type@@Base>
   12044:	cmp	r0, #23
   12048:	ldrls	pc, [pc, r0, lsl #2]
   1204c:	b	120d4 <table_dupe@@Base+0x130>
   12050:	strheq	r2, [r1], -r0
   12054:	ldrdeq	r2, [r1], -ip
   12058:	andeq	r2, r1, r4, lsl #2
   1205c:	andeq	r2, r1, ip, lsr #2
   12060:	andeq	r2, r1, r4, asr r1
   12064:	andeq	r2, r1, ip, ror r1
   12068:	andeq	r2, r1, r4, lsr #3
   1206c:	andeq	r2, r1, ip, asr #3
   12070:	strdeq	r2, [r1], -r4
   12074:	andeq	r2, r1, ip, lsl r2
   12078:	andeq	r2, r1, r4, asr #4
   1207c:	andeq	r2, r1, ip, ror #4
   12080:	muleq	r1, r4, r2
   12084:			; <UNDEFINED> instruction: 0x000122bc
   12088:	andeq	r2, r1, r4, ror #5
   1208c:	andeq	r2, r1, ip, lsl #6
   12090:	andeq	r2, r1, ip, asr r3
   12094:	andeq	r2, r1, r0, lsl #7
   12098:	andeq	r2, r1, r4, lsr #7
   1209c:	strdeq	r2, [r1], -r0
   120a0:	andeq	r2, r1, r8, lsl r4
   120a4:	andeq	r2, r1, r4, lsr r3
   120a8:	andeq	r2, r1, r8, asr #7
   120ac:	andeq	r2, r1, r0, asr #8
   120b0:	mov	r2, r4
   120b4:	mov	r1, r5
   120b8:	mov	r0, r6
   120bc:	bl	13124 <table_get_int@@Base>
   120c0:	mov	r3, r0
   120c4:	mov	r2, r4
   120c8:	mov	r1, r5
   120cc:	mov	r0, r7
   120d0:	bl	13744 <table_set_int@@Base>
   120d4:	add	r4, r4, #1
   120d8:	b	1202c <table_dupe@@Base+0x88>
   120dc:	mov	r2, r4
   120e0:	mov	r1, r5
   120e4:	mov	r0, r6
   120e8:	bl	13134 <table_get_uint@@Base>
   120ec:	mov	r3, r0
   120f0:	mov	r2, r4
   120f4:	mov	r1, r5
   120f8:	mov	r0, r7
   120fc:	bl	13764 <table_set_uint@@Base>
   12100:	b	120d4 <table_dupe@@Base+0x130>
   12104:	mov	r2, r4
   12108:	mov	r1, r5
   1210c:	mov	r0, r6
   12110:	bl	13144 <table_get_int8@@Base>
   12114:	mov	r3, r0
   12118:	mov	r2, r4
   1211c:	mov	r1, r5
   12120:	mov	r0, r7
   12124:	bl	13784 <table_set_int8@@Base>
   12128:	b	120d4 <table_dupe@@Base+0x130>
   1212c:	mov	r2, r4
   12130:	mov	r1, r5
   12134:	mov	r0, r6
   12138:	bl	13154 <table_get_uint8@@Base>
   1213c:	mov	r3, r0
   12140:	mov	r2, r4
   12144:	mov	r1, r5
   12148:	mov	r0, r7
   1214c:	bl	137a4 <table_set_uint8@@Base>
   12150:	b	120d4 <table_dupe@@Base+0x130>
   12154:	mov	r2, r4
   12158:	mov	r1, r5
   1215c:	mov	r0, r6
   12160:	bl	13164 <table_get_int16@@Base>
   12164:	mov	r3, r0
   12168:	mov	r2, r4
   1216c:	mov	r1, r5
   12170:	mov	r0, r7
   12174:	bl	137c4 <table_set_int16@@Base>
   12178:	b	120d4 <table_dupe@@Base+0x130>
   1217c:	mov	r2, r4
   12180:	mov	r1, r5
   12184:	mov	r0, r6
   12188:	bl	13174 <table_get_uint16@@Base>
   1218c:	mov	r3, r0
   12190:	mov	r2, r4
   12194:	mov	r1, r5
   12198:	mov	r0, r7
   1219c:	bl	137e4 <table_set_uint16@@Base>
   121a0:	b	120d4 <table_dupe@@Base+0x130>
   121a4:	mov	r2, r4
   121a8:	mov	r1, r5
   121ac:	mov	r0, r6
   121b0:	bl	13184 <table_get_int32@@Base>
   121b4:	mov	r3, r0
   121b8:	mov	r2, r4
   121bc:	mov	r1, r5
   121c0:	mov	r0, r7
   121c4:	bl	13804 <table_set_int32@@Base>
   121c8:	b	120d4 <table_dupe@@Base+0x130>
   121cc:	mov	r2, r4
   121d0:	mov	r1, r5
   121d4:	mov	r0, r6
   121d8:	bl	13188 <table_get_uint32@@Base>
   121dc:	mov	r3, r0
   121e0:	mov	r2, r4
   121e4:	mov	r1, r5
   121e8:	mov	r0, r7
   121ec:	bl	13824 <table_set_uint32@@Base>
   121f0:	b	120d4 <table_dupe@@Base+0x130>
   121f4:	mov	r2, r4
   121f8:	mov	r1, r5
   121fc:	mov	r0, r6
   12200:	bl	1318c <table_get_int64@@Base>
   12204:	mov	r2, r4
   12208:	strd	r0, [sp]
   1220c:	mov	r1, r5
   12210:	mov	r0, r7
   12214:	bl	13844 <table_set_int64@@Base>
   12218:	b	120d4 <table_dupe@@Base+0x130>
   1221c:	mov	r2, r4
   12220:	mov	r1, r5
   12224:	mov	r0, r6
   12228:	bl	1319c <table_get_uint64@@Base>
   1222c:	mov	r2, r4
   12230:	strd	r0, [sp]
   12234:	mov	r1, r5
   12238:	mov	r0, r7
   1223c:	bl	13860 <table_set_uint64@@Base>
   12240:	b	120d4 <table_dupe@@Base+0x130>
   12244:	mov	r2, r4
   12248:	mov	r1, r5
   1224c:	mov	r0, r6
   12250:	bl	131ac <table_get_short@@Base>
   12254:	mov	r3, r0
   12258:	mov	r2, r4
   1225c:	mov	r1, r5
   12260:	mov	r0, r7
   12264:	bl	1387c <table_set_short@@Base>
   12268:	b	120d4 <table_dupe@@Base+0x130>
   1226c:	mov	r2, r4
   12270:	mov	r1, r5
   12274:	mov	r0, r6
   12278:	bl	131b0 <table_get_ushort@@Base>
   1227c:	mov	r3, r0
   12280:	mov	r2, r4
   12284:	mov	r1, r5
   12288:	mov	r0, r7
   1228c:	bl	1389c <table_set_ushort@@Base>
   12290:	b	120d4 <table_dupe@@Base+0x130>
   12294:	mov	r2, r4
   12298:	mov	r1, r5
   1229c:	mov	r0, r6
   122a0:	bl	131b4 <table_get_long@@Base>
   122a4:	mov	r3, r0
   122a8:	mov	r2, r4
   122ac:	mov	r1, r5
   122b0:	mov	r0, r7
   122b4:	bl	138bc <table_set_long@@Base>
   122b8:	b	120d4 <table_dupe@@Base+0x130>
   122bc:	mov	r2, r4
   122c0:	mov	r1, r5
   122c4:	mov	r0, r6
   122c8:	bl	131c4 <table_get_ulong@@Base>
   122cc:	mov	r3, r0
   122d0:	mov	r2, r4
   122d4:	mov	r1, r5
   122d8:	mov	r0, r7
   122dc:	bl	138dc <table_set_ulong@@Base>
   122e0:	b	120d4 <table_dupe@@Base+0x130>
   122e4:	mov	r2, r4
   122e8:	mov	r1, r5
   122ec:	mov	r0, r6
   122f0:	bl	131d4 <table_get_llong@@Base>
   122f4:	mov	r2, r4
   122f8:	strd	r0, [sp]
   122fc:	mov	r1, r5
   12300:	mov	r0, r7
   12304:	bl	138fc <table_set_llong@@Base>
   12308:	b	120d4 <table_dupe@@Base+0x130>
   1230c:	mov	r2, r4
   12310:	mov	r1, r5
   12314:	mov	r0, r6
   12318:	bl	131d8 <table_get_ullong@@Base>
   1231c:	mov	r2, r4
   12320:	strd	r0, [sp]
   12324:	mov	r1, r5
   12328:	mov	r0, r7
   1232c:	bl	13918 <table_set_ullong@@Base>
   12330:	b	120d4 <table_dupe@@Base+0x130>
   12334:	mov	r2, r4
   12338:	mov	r1, r5
   1233c:	mov	r0, r6
   12340:	bl	13214 <table_get_string@@Base>
   12344:	mov	r3, r0
   12348:	mov	r2, r4
   1234c:	mov	r1, r5
   12350:	mov	r0, r7
   12354:	bl	13994 <table_set_string@@Base>
   12358:	b	120d4 <table_dupe@@Base+0x130>
   1235c:	mov	r2, r4
   12360:	mov	r1, r5
   12364:	mov	r0, r6
   12368:	bl	131dc <table_get_float@@Base>
   1236c:	mov	r2, r4
   12370:	mov	r1, r5
   12374:	mov	r0, r7
   12378:	bl	13934 <table_set_float@@Base>
   1237c:	b	120d4 <table_dupe@@Base+0x130>
   12380:	mov	r2, r4
   12384:	mov	r1, r5
   12388:	mov	r0, r6
   1238c:	bl	131ec <table_get_double@@Base>
   12390:	mov	r2, r4
   12394:	mov	r1, r5
   12398:	mov	r0, r7
   1239c:	bl	13954 <table_set_double@@Base>
   123a0:	b	120d4 <table_dupe@@Base+0x130>
   123a4:	mov	r2, r4
   123a8:	mov	r1, r5
   123ac:	mov	r0, r6
   123b0:	bl	131fc <table_get_ldouble@@Base>
   123b4:	mov	r2, r4
   123b8:	mov	r1, r5
   123bc:	mov	r0, r7
   123c0:	bl	13974 <table_set_ldouble@@Base>
   123c4:	b	120d4 <table_dupe@@Base+0x130>
   123c8:	mov	r2, r4
   123cc:	mov	r1, r5
   123d0:	mov	r0, r6
   123d4:	bl	13114 <table_get_bool@@Base>
   123d8:	mov	r3, r0
   123dc:	mov	r2, r4
   123e0:	mov	r1, r5
   123e4:	mov	r0, r7
   123e8:	bl	13724 <table_set_bool@@Base>
   123ec:	b	120d4 <table_dupe@@Base+0x130>
   123f0:	mov	r2, r4
   123f4:	mov	r1, r5
   123f8:	mov	r0, r6
   123fc:	bl	1320c <table_get_char@@Base>
   12400:	mov	r3, r0
   12404:	mov	r2, r4
   12408:	mov	r1, r5
   1240c:	mov	r0, r7
   12410:	bl	139ac <table_set_char@@Base>
   12414:	b	120d4 <table_dupe@@Base+0x130>
   12418:	mov	r2, r4
   1241c:	mov	r1, r5
   12420:	mov	r0, r6
   12424:	bl	13210 <table_get_uchar@@Base>
   12428:	mov	r3, r0
   1242c:	mov	r2, r4
   12430:	mov	r1, r5
   12434:	mov	r0, r7
   12438:	bl	139cc <table_set_uchar@@Base>
   1243c:	b	120d4 <table_dupe@@Base+0x130>
   12440:	mov	r2, r4
   12444:	mov	r1, r5
   12448:	mov	r0, r6
   1244c:	bl	13218 <table_get_ptr@@Base>
   12450:	add	r3, sp, #12
   12454:	mov	r2, r4
   12458:	str	r0, [sp, #12]
   1245c:	mov	r1, r5
   12460:	mov	r0, r7
   12464:	bl	139ec <table_set_ptr@@Base>
   12468:	b	120d4 <table_dupe@@Base+0x130>

0001246c <table_get_major_version@@Base>:
   1246c:	mov	r0, #0
   12470:	bx	lr

00012474 <table_get_minor_version@@Base>:
   12474:	mov	r0, #0
   12478:	bx	lr

0001247c <table_get_patch_version@@Base>:
   1247c:	mov	r0, #0
   12480:	bx	lr

00012484 <table_get_version@@Base>:
   12484:	ldr	r0, [pc]	; 1248c <table_get_version@@Base+0x8>
   12488:	bx	lr
   1248c:	andeq	r4, r1, r4, lsl #11

00012490 <table_get_callback_length@@Base>:
   12490:	ldr	r0, [r0, #32]
   12494:	bx	lr

00012498 <table_register_callback@@Base>:
   12498:	push	{r4, r5, r6, r7, r8, lr}
   1249c:	mov	r4, r0
   124a0:	mov	ip, #0
   124a4:	ldr	lr, [r0, #32]
   124a8:	ldr	r0, [r0, #36]	; 0x24
   124ac:	cmp	ip, lr
   124b0:	blt	12540 <table_register_callback@@Base+0xa8>
   124b4:	ldr	ip, [r4, #48]	; 0x30
   124b8:	mov	r5, r3
   124bc:	mov	r6, r2
   124c0:	mov	r7, r1
   124c4:	udiv	r3, lr, ip
   124c8:	mls	r3, ip, r3, lr
   124cc:	cmp	r3, #0
   124d0:	bne	12514 <table_register_callback@@Base+0x7c>
   124d4:	ldr	r1, [r4, #52]	; 0x34
   124d8:	add	r1, ip, r1
   124dc:	str	r1, [r4, #52]	; 0x34
   124e0:	lsl	r1, r1, #2
   124e4:	bl	11b88 <realloc@plt>
   124e8:	ldr	r1, [r4, #52]	; 0x34
   124ec:	str	r0, [r4, #36]	; 0x24
   124f0:	ldr	r0, [r4, #40]	; 0x28
   124f4:	lsl	r1, r1, #2
   124f8:	bl	11b88 <realloc@plt>
   124fc:	ldr	r1, [r4, #52]	; 0x34
   12500:	str	r0, [r4, #40]	; 0x28
   12504:	ldr	r0, [r4, #44]	; 0x2c
   12508:	lsl	r1, r1, #2
   1250c:	bl	11b88 <realloc@plt>
   12510:	str	r0, [r4, #44]	; 0x2c
   12514:	ldr	r3, [r4, #32]
   12518:	ldr	r2, [r4, #36]	; 0x24
   1251c:	str	r7, [r2, r3, lsl #2]
   12520:	ldr	r2, [r4, #40]	; 0x28
   12524:	str	r6, [r2, r3, lsl #2]
   12528:	ldr	r2, [r4, #44]	; 0x2c
   1252c:	str	r5, [r2, r3, lsl #2]
   12530:	ldr	r3, [r4, #32]
   12534:	add	r3, r3, #1
   12538:	str	r3, [r4, #32]
   1253c:	pop	{r4, r5, r6, r7, r8, pc}
   12540:	ldr	r6, [r0, ip, lsl #2]
   12544:	lsl	r5, ip, #2
   12548:	cmp	r1, r6
   1254c:	bne	12560 <table_register_callback@@Base+0xc8>
   12550:	ldr	r6, [r4, #40]	; 0x28
   12554:	ldr	r6, [r6, ip, lsl #2]
   12558:	cmp	r2, r6
   1255c:	beq	12568 <table_register_callback@@Base+0xd0>
   12560:	add	ip, ip, #1
   12564:	b	124ac <table_register_callback@@Base+0x14>
   12568:	cmp	ip, #0
   1256c:	ble	124b4 <table_register_callback@@Base+0x1c>
   12570:	ldr	r1, [r4, #44]	; 0x2c
   12574:	ldr	r2, [r1, r5]
   12578:	orr	r2, r2, r3
   1257c:	str	r2, [r1, r5]
   12580:	pop	{r4, r5, r6, r7, r8, pc}

00012584 <table_unregister_callback@@Base>:
   12584:	ldr	ip, [r0, #32]
   12588:	mov	r3, #0
   1258c:	cmp	r3, ip
   12590:	bxge	lr
   12594:	push	{r4, r5, r6, lr}
   12598:	ldr	lr, [r0, #36]	; 0x24
   1259c:	ldr	lr, [lr, r3, lsl #2]
   125a0:	cmp	r1, lr
   125a4:	bne	125b8 <table_unregister_callback@@Base+0x34>
   125a8:	ldr	lr, [r0, #40]	; 0x28
   125ac:	ldr	lr, [lr, r3, lsl #2]
   125b0:	cmp	r2, lr
   125b4:	beq	125f8 <table_unregister_callback@@Base+0x74>
   125b8:	add	r3, r3, #1
   125bc:	cmp	r3, ip
   125c0:	blt	12598 <table_unregister_callback@@Base+0x14>
   125c4:	pop	{r4, r5, r6, pc}
   125c8:	ldr	r1, [r0, #36]	; 0x24
   125cc:	add	r2, r3, #1
   125d0:	lsl	r3, r3, #2
   125d4:	ldr	ip, [r1, r2, lsl #2]
   125d8:	str	ip, [r1, r3]
   125dc:	ldr	r1, [r0, #40]	; 0x28
   125e0:	ldr	ip, [r1, r2, lsl #2]
   125e4:	str	ip, [r1, r3]
   125e8:	ldr	r1, [r0, #44]	; 0x2c
   125ec:	ldr	ip, [r1, r2, lsl #2]
   125f0:	str	ip, [r1, r3]
   125f4:	mov	r3, r2
   125f8:	ldr	r2, [r0, #32]
   125fc:	sub	r2, r2, #1
   12600:	cmp	r2, r3
   12604:	bgt	125c8 <table_unregister_callback@@Base+0x44>
   12608:	ldr	r1, [r0, #48]	; 0x30
   1260c:	str	r2, [r0, #32]
   12610:	udiv	r3, r2, r1
   12614:	mls	r2, r1, r3, r2
   12618:	cmp	r2, #0
   1261c:	popne	{r4, r5, r6, pc}
   12620:	mov	r4, r0
   12624:	ldr	r5, [r4, #52]	; 0x34
   12628:	ldr	r0, [r0, #36]	; 0x24
   1262c:	sub	r5, r5, r1
   12630:	cmp	r5, #0
   12634:	str	r5, [r4, #52]	; 0x34
   12638:	beq	12674 <table_unregister_callback@@Base+0xf0>
   1263c:	lsl	r1, r5, #2
   12640:	bl	11b88 <realloc@plt>
   12644:	ldr	r1, [r4, #52]	; 0x34
   12648:	str	r0, [r4, #36]	; 0x24
   1264c:	ldr	r0, [r4, #40]	; 0x28
   12650:	lsl	r1, r1, #2
   12654:	bl	11b88 <realloc@plt>
   12658:	ldr	r1, [r4, #52]	; 0x34
   1265c:	str	r0, [r4, #40]	; 0x28
   12660:	ldr	r0, [r4, #44]	; 0x2c
   12664:	lsl	r1, r1, #2
   12668:	bl	11b88 <realloc@plt>
   1266c:	str	r0, [r4, #44]	; 0x2c
   12670:	pop	{r4, r5, r6, pc}
   12674:	bl	11b70 <free@plt>
   12678:	ldr	r0, [r4, #40]	; 0x28
   1267c:	bl	11b70 <free@plt>
   12680:	ldr	r0, [r4, #44]	; 0x2c
   12684:	bl	11b70 <free@plt>
   12688:	str	r5, [r4, #36]	; 0x24
   1268c:	str	r5, [r4, #40]	; 0x28
   12690:	str	r5, [r4, #44]	; 0x2c
   12694:	pop	{r4, r5, r6, pc}

00012698 <table_notify@@Base>:
   12698:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1269c:	mov	r5, r0
   126a0:	mov	r7, r1
   126a4:	mov	r8, r2
   126a8:	mov	r6, r3
   126ac:	mov	r4, #0
   126b0:	ldr	r3, [r5, #32]
   126b4:	cmp	r3, r4
   126b8:	bgt	126c4 <table_notify@@Base+0x2c>
   126bc:	add	sp, sp, #12
   126c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   126c4:	ldr	r3, [r5, #44]	; 0x2c
   126c8:	ldr	r3, [r3, r4, lsl #2]
   126cc:	tst	r6, r3
   126d0:	beq	126fc <table_notify@@Base+0x64>
   126d4:	ldr	r3, [r5, #36]	; 0x24
   126d8:	mov	r1, r7
   126dc:	mov	r0, r5
   126e0:	ldr	r2, [r5, #40]	; 0x28
   126e4:	ldr	r2, [r2, r4, lsl #2]
   126e8:	str	r2, [sp]
   126ec:	mov	r2, r8
   126f0:	ldr	r9, [r3, r4, lsl #2]
   126f4:	mov	r3, r6
   126f8:	blx	r9
   126fc:	add	r4, r4, #1
   12700:	b	126b0 <table_notify@@Base+0x18>

00012704 <table_column_init@@Base>:
   12704:	push	{r4, r5, r6, r7, r8, lr}
   12708:	mov	r4, #12
   1270c:	mov	r6, r2
   12710:	mov	r8, r3
   12714:	mul	r4, r4, r1
   12718:	ldr	r7, [r0]
   1271c:	mov	r0, r2
   12720:	bl	11bc4 <strlen@plt>
   12724:	add	r0, r0, #1
   12728:	bl	11ba0 <malloc@plt>
   1272c:	cmp	r0, #0
   12730:	add	r5, r7, r4
   12734:	str	r0, [r7, r4]
   12738:	beq	12744 <table_column_init@@Base+0x40>
   1273c:	mov	r1, r6
   12740:	bl	11b94 <strcpy@plt>
   12744:	ldr	r3, [sp, #24]
   12748:	str	r8, [r5, #4]
   1274c:	str	r3, [r5, #8]
   12750:	pop	{r4, r5, r6, r7, r8, pc}

00012754 <table_column_destroy@@Base>:
   12754:	mov	r3, #12
   12758:	ldr	r2, [r0]
   1275c:	mul	r1, r3, r1
   12760:	ldr	r0, [r2, r1]
   12764:	cmp	r0, #0
   12768:	bxeq	lr
   1276c:	b	11b70 <free@plt>

00012770 <table_get_column_length@@Base>:
   12770:	ldr	r0, [r0, #4]
   12774:	bx	lr

00012778 <table_get_column@@Base>:
   12778:	push	{r4, r5, r6, r7, r8, lr}
   1277c:	mov	r5, r0
   12780:	mov	r7, r1
   12784:	mov	r4, #0
   12788:	mov	r8, #12
   1278c:	ldr	r6, [r0, #4]
   12790:	cmp	r4, r6
   12794:	blt	127a4 <table_get_column@@Base+0x2c>
   12798:	mvneq	r4, #0
   1279c:	mov	r0, r4
   127a0:	pop	{r4, r5, r6, r7, r8, pc}
   127a4:	ldr	r2, [r5]
   127a8:	mul	r3, r8, r4
   127ac:	mov	r1, r7
   127b0:	ldr	r0, [r2, r3]
   127b4:	bl	11b58 <strcmp@plt>
   127b8:	cmp	r0, #0
   127bc:	beq	1279c <table_get_column@@Base+0x24>
   127c0:	add	r4, r4, #1
   127c4:	b	12790 <table_get_column@@Base+0x18>

000127c8 <table_get_column_data_type@@Base>:
   127c8:	ldr	r2, [r0]
   127cc:	mov	r3, #12
   127d0:	mla	r1, r3, r1, r2
   127d4:	ldr	r0, [r1, #4]
   127d8:	bx	lr

000127dc <table_add_column@@Base>:
   127dc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   127e0:	mov	r7, r1
   127e4:	mov	r4, r0
   127e8:	mov	r6, r2
   127ec:	ldr	r3, [r0, #4]
   127f0:	ldr	r1, [r0, #8]
   127f4:	udiv	r5, r3, r1
   127f8:	mls	r5, r1, r5, r3
   127fc:	cmp	r5, #0
   12800:	beq	12868 <table_add_column@@Base+0x8c>
   12804:	mov	r0, r4
   12808:	mov	r5, #0
   1280c:	bl	1328c <table_get_row_length@@Base>
   12810:	ldr	r8, [r4, #4]
   12814:	mov	r9, r0
   12818:	mov	r0, r6
   1281c:	bl	130ec <table_get_default_compare_function_for_data_type@@Base>
   12820:	mov	r3, r6
   12824:	mov	r2, r7
   12828:	str	r0, [sp]
   1282c:	mov	r0, r4
   12830:	mov	r1, r8
   12834:	bl	12704 <table_column_init@@Base>
   12838:	cmp	r9, r5
   1283c:	bgt	128c8 <table_add_column@@Base+0xec>
   12840:	mov	r0, r4
   12844:	mov	r3, #8
   12848:	ldr	r2, [r4, #4]
   1284c:	mvn	r1, #0
   12850:	bl	12698 <table_notify@@Base>
   12854:	ldr	r0, [r4, #4]
   12858:	add	r3, r0, #1
   1285c:	str	r3, [r4, #4]
   12860:	add	sp, sp, #12
   12864:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12868:	ldr	r3, [r4, #12]
   1286c:	ldr	r0, [r0]
   12870:	add	r1, r1, r3
   12874:	mov	r3, #12
   12878:	str	r1, [r4, #12]
   1287c:	mul	r1, r3, r1
   12880:	bl	11b88 <realloc@plt>
   12884:	str	r0, [r4]
   12888:	mov	r0, r4
   1288c:	bl	1328c <table_get_row_length@@Base>
   12890:	mov	r9, r0
   12894:	cmp	r9, r5
   12898:	ble	12804 <table_add_column@@Base+0x28>
   1289c:	mov	r1, r5
   128a0:	mov	r0, r4
   128a4:	bl	13428 <table_get_row_ptr@@Base>
   128a8:	ldr	r1, [r4, #12]
   128ac:	mov	r8, r0
   128b0:	add	r5, r5, #1
   128b4:	ldr	r0, [r0]
   128b8:	lsl	r1, r1, #2
   128bc:	bl	11b88 <realloc@plt>
   128c0:	str	r0, [r8]
   128c4:	b	12894 <table_add_column@@Base+0xb8>
   128c8:	mov	r1, r5
   128cc:	mov	r2, r8
   128d0:	mov	r0, r4
   128d4:	add	r5, r5, #1
   128d8:	bl	14358 <table_cell_init@@Base>
   128dc:	b	12838 <table_add_column@@Base+0x5c>

000128e0 <table_remove_column@@Base>:
   128e0:	push	{r4, r5, r6, r7, r8, lr}
   128e4:	mov	r4, r0
   128e8:	mov	r6, r1
   128ec:	mov	r5, #12
   128f0:	bl	12754 <table_column_destroy@@Base>
   128f4:	ldr	r7, [r4, #4]
   128f8:	mov	r1, r6
   128fc:	sub	r7, r7, #1
   12900:	cmp	r1, r7
   12904:	blt	12990 <table_remove_column@@Base+0xb0>
   12908:	mov	r0, r4
   1290c:	mov	r5, #0
   12910:	bl	1328c <table_get_row_length@@Base>
   12914:	mov	r8, r0
   12918:	cmp	r8, r5
   1291c:	bgt	129c4 <table_remove_column@@Base+0xe4>
   12920:	ldr	r5, [r4, #4]
   12924:	ldr	r1, [r4, #8]
   12928:	sub	r3, r5, #1
   1292c:	udiv	r5, r3, r1
   12930:	str	r3, [r4, #4]
   12934:	mls	r5, r1, r5, r3
   12938:	cmp	r5, #0
   1293c:	bne	12974 <table_remove_column@@Base+0x94>
   12940:	ldr	r0, [r4]
   12944:	ldr	r3, [r4, #12]
   12948:	sub	r3, r3, r1
   1294c:	mov	r1, #12
   12950:	mul	r1, r1, r3
   12954:	str	r3, [r4, #12]
   12958:	bl	11b88 <realloc@plt>
   1295c:	str	r0, [r4]
   12960:	mov	r0, r4
   12964:	bl	1328c <table_get_row_length@@Base>
   12968:	mov	r8, r0
   1296c:	cmp	r8, r5
   12970:	bgt	12a08 <table_remove_column@@Base+0x128>
   12974:	mov	r0, r4
   12978:	mov	r3, #16
   1297c:	mov	r2, r6
   12980:	mvn	r1, #0
   12984:	bl	12698 <table_notify@@Base>
   12988:	mov	r0, #0
   1298c:	pop	{r4, r5, r6, r7, r8, pc}
   12990:	ldr	ip, [r4]
   12994:	mul	r0, r5, r1
   12998:	add	r1, r1, #1
   1299c:	add	r2, r0, #12
   129a0:	add	r2, ip, r2
   129a4:	add	lr, ip, r0
   129a8:	ldr	r3, [r2]
   129ac:	str	r3, [ip, r0]
   129b0:	ldr	r3, [r2, #4]
   129b4:	str	r3, [lr, #4]
   129b8:	ldr	r3, [r2, #8]
   129bc:	str	r3, [lr, #8]
   129c0:	b	12900 <table_remove_column@@Base+0x20>
   129c4:	mov	r2, r6
   129c8:	mov	r1, r5
   129cc:	mov	r0, r4
   129d0:	bl	1436c <table_cell_destroy@@Base>
   129d4:	mov	r1, r5
   129d8:	mov	r0, r4
   129dc:	bl	13428 <table_get_row_ptr@@Base>
   129e0:	mov	r3, r6
   129e4:	cmp	r7, r3
   129e8:	addle	r5, r5, #1
   129ec:	ble	12918 <table_remove_column@@Base+0x38>
   129f0:	ldr	r2, [r0]
   129f4:	add	r1, r2, r3, lsl #2
   129f8:	ldr	r1, [r1, #4]
   129fc:	str	r1, [r2, r3, lsl #2]
   12a00:	add	r3, r3, #1
   12a04:	b	129e4 <table_remove_column@@Base+0x104>
   12a08:	mov	r1, r5
   12a0c:	mov	r0, r4
   12a10:	bl	13428 <table_get_row_ptr@@Base>
   12a14:	ldr	r1, [r4, #12]
   12a18:	mov	r7, r0
   12a1c:	add	r5, r5, #1
   12a20:	ldr	r0, [r0]
   12a24:	lsl	r1, r1, #2
   12a28:	bl	11b88 <realloc@plt>
   12a2c:	str	r0, [r7]
   12a30:	b	1296c <table_remove_column@@Base+0x8c>

00012a34 <table_get_column_name@@Base>:
   12a34:	mov	r3, #12
   12a38:	ldr	r2, [r0]
   12a3c:	mul	r1, r3, r1
   12a40:	ldr	r0, [r2, r1]
   12a44:	bx	lr

00012a48 <table_get_col_ptr@@Base>:
   12a48:	ldr	r3, [r0]
   12a4c:	mov	r0, #12
   12a50:	mla	r0, r0, r1, r3
   12a54:	bx	lr

00012a58 <table_get_column_compare_function@@Base>:
   12a58:	ldr	r2, [r0]
   12a5c:	mov	r3, #12
   12a60:	mla	r1, r3, r1, r2
   12a64:	ldr	r0, [r1, #8]
   12a68:	bx	lr

00012a6c <table_set_column_compare_function@@Base>:
   12a6c:	ldr	r0, [r0]
   12a70:	mov	r3, #12
   12a74:	mla	r1, r3, r1, r0
   12a78:	str	r2, [r1, #8]
   12a7c:	bx	lr

00012a80 <table_compare_ptr@@Base>:
   12a80:	cmp	r0, r1
   12a84:	bhi	12a94 <table_compare_ptr@@Base+0x14>
   12a88:	mvncc	r0, #0
   12a8c:	movcs	r0, #0
   12a90:	bx	lr
   12a94:	mov	r0, #1
   12a98:	bx	lr

00012a9c <table_compare_string@@Base>:
   12a9c:	cmp	r0, #0
   12aa0:	bne	12ab4 <table_compare_string@@Base+0x18>
   12aa4:	adds	r0, r1, #0
   12aa8:	movne	r0, #1
   12aac:	rsb	r0, r0, #0
   12ab0:	bx	lr
   12ab4:	cmp	r1, #0
   12ab8:	beq	12ac0 <table_compare_string@@Base+0x24>
   12abc:	b	11b58 <strcmp@plt>
   12ac0:	mov	r0, #1
   12ac4:	bx	lr

00012ac8 <table_compare_bool@@Base>:
   12ac8:	cmp	r0, #0
   12acc:	bne	12ae0 <table_compare_bool@@Base+0x18>
   12ad0:	adds	r0, r1, #0
   12ad4:	movne	r0, #1
   12ad8:	rsb	r0, r0, #0
   12adc:	bx	lr
   12ae0:	cmp	r1, #0
   12ae4:	beq	12b04 <table_compare_bool@@Base+0x3c>
   12ae8:	ldrb	r2, [r0]
   12aec:	ldrb	r3, [r1]
   12af0:	cmp	r2, r3
   12af4:	bhi	12b04 <table_compare_bool@@Base+0x3c>
   12af8:	mvncc	r0, #0
   12afc:	movcs	r0, #0
   12b00:	bx	lr
   12b04:	mov	r0, #1
   12b08:	bx	lr

00012b0c <table_compare_int32@@Base>:
   12b0c:	cmp	r0, #0
   12b10:	bne	12b24 <table_compare_int32@@Base+0x18>
   12b14:	adds	r0, r1, #0
   12b18:	movne	r0, #1
   12b1c:	rsb	r0, r0, #0
   12b20:	bx	lr
   12b24:	cmp	r1, #0
   12b28:	beq	12b48 <table_compare_int32@@Base+0x3c>
   12b2c:	ldr	r2, [r0]
   12b30:	ldr	r3, [r1]
   12b34:	cmp	r2, r3
   12b38:	bgt	12b48 <table_compare_int32@@Base+0x3c>
   12b3c:	mvnlt	r0, #0
   12b40:	movge	r0, #0
   12b44:	bx	lr
   12b48:	mov	r0, #1
   12b4c:	bx	lr

00012b50 <table_compare_uint32@@Base>:
   12b50:	cmp	r0, #0
   12b54:	bne	12b68 <table_compare_uint32@@Base+0x18>
   12b58:	adds	r0, r1, #0
   12b5c:	movne	r0, #1
   12b60:	rsb	r0, r0, #0
   12b64:	bx	lr
   12b68:	cmp	r1, #0
   12b6c:	beq	12b8c <table_compare_uint32@@Base+0x3c>
   12b70:	ldr	r2, [r0]
   12b74:	ldr	r3, [r1]
   12b78:	cmp	r2, r3
   12b7c:	bhi	12b8c <table_compare_uint32@@Base+0x3c>
   12b80:	mvncc	r0, #0
   12b84:	movcs	r0, #0
   12b88:	bx	lr
   12b8c:	mov	r0, #1
   12b90:	bx	lr

00012b94 <table_compare_int8@@Base>:
   12b94:	cmp	r0, #0
   12b98:	bne	12bac <table_compare_int8@@Base+0x18>
   12b9c:	adds	r0, r1, #0
   12ba0:	movne	r0, #1
   12ba4:	rsb	r0, r0, #0
   12ba8:	bx	lr
   12bac:	cmp	r1, #0
   12bb0:	beq	12bd0 <table_compare_int8@@Base+0x3c>
   12bb4:	ldrsb	r2, [r0]
   12bb8:	ldrsb	r3, [r1]
   12bbc:	cmp	r2, r3
   12bc0:	bgt	12bd0 <table_compare_int8@@Base+0x3c>
   12bc4:	mvnlt	r0, #0
   12bc8:	movge	r0, #0
   12bcc:	bx	lr
   12bd0:	mov	r0, #1
   12bd4:	bx	lr

00012bd8 <table_compare_char@@Base>:
   12bd8:	cmp	r0, #0
   12bdc:	bne	12bf0 <table_compare_char@@Base+0x18>
   12be0:	adds	r0, r1, #0
   12be4:	movne	r0, #1
   12be8:	rsb	r0, r0, #0
   12bec:	bx	lr
   12bf0:	cmp	r1, #0
   12bf4:	beq	12c14 <table_compare_char@@Base+0x3c>
   12bf8:	ldrb	r2, [r0]
   12bfc:	ldrb	r3, [r1]
   12c00:	cmp	r2, r3
   12c04:	bhi	12c14 <table_compare_char@@Base+0x3c>
   12c08:	mvncc	r0, #0
   12c0c:	movcs	r0, #0
   12c10:	bx	lr
   12c14:	mov	r0, #1
   12c18:	bx	lr

00012c1c <table_compare_short@@Base>:
   12c1c:	cmp	r0, #0
   12c20:	bne	12c34 <table_compare_short@@Base+0x18>
   12c24:	adds	r0, r1, #0
   12c28:	movne	r0, #1
   12c2c:	rsb	r0, r0, #0
   12c30:	bx	lr
   12c34:	cmp	r1, #0
   12c38:	beq	12c58 <table_compare_short@@Base+0x3c>
   12c3c:	ldrsh	r2, [r0]
   12c40:	ldrsh	r3, [r1]
   12c44:	cmp	r2, r3
   12c48:	bgt	12c58 <table_compare_short@@Base+0x3c>
   12c4c:	mvnlt	r0, #0
   12c50:	movge	r0, #0
   12c54:	bx	lr
   12c58:	mov	r0, #1
   12c5c:	bx	lr

00012c60 <table_compare_ushort@@Base>:
   12c60:	cmp	r0, #0
   12c64:	bne	12c78 <table_compare_ushort@@Base+0x18>
   12c68:	adds	r0, r1, #0
   12c6c:	movne	r0, #1
   12c70:	rsb	r0, r0, #0
   12c74:	bx	lr
   12c78:	cmp	r1, #0
   12c7c:	beq	12c9c <table_compare_ushort@@Base+0x3c>
   12c80:	ldrh	r2, [r0]
   12c84:	ldrh	r3, [r1]
   12c88:	cmp	r2, r3
   12c8c:	bhi	12c9c <table_compare_ushort@@Base+0x3c>
   12c90:	mvncc	r0, #0
   12c94:	movcs	r0, #0
   12c98:	bx	lr
   12c9c:	mov	r0, #1
   12ca0:	bx	lr

00012ca4 <table_compare_llong@@Base>:
   12ca4:	cmp	r0, #0
   12ca8:	bne	12cbc <table_compare_llong@@Base+0x18>
   12cac:	adds	r0, r1, #0
   12cb0:	movne	r0, #1
   12cb4:	rsb	r0, r0, #0
   12cb8:	bx	lr
   12cbc:	cmp	r1, #0
   12cc0:	beq	12cf0 <table_compare_llong@@Base+0x4c>
   12cc4:	push	{r4, r5, lr}
   12cc8:	ldrd	r2, [r1]
   12ccc:	ldrd	r4, [r0]
   12cd0:	cmp	r2, r4
   12cd4:	sbcs	r1, r3, r5
   12cd8:	blt	12cf8 <table_compare_llong@@Base+0x54>
   12cdc:	cmp	r4, r2
   12ce0:	sbcs	r3, r5, r3
   12ce4:	mvnlt	r0, #0
   12ce8:	movge	r0, #0
   12cec:	pop	{r4, r5, pc}
   12cf0:	mov	r0, #1
   12cf4:	bx	lr
   12cf8:	mov	r0, #1
   12cfc:	pop	{r4, r5, pc}

00012d00 <table_compare_uint64@@Base>:
   12d00:	cmp	r0, #0
   12d04:	bne	12d18 <table_compare_uint64@@Base+0x18>
   12d08:	adds	r0, r1, #0
   12d0c:	movne	r0, #1
   12d10:	rsb	r0, r0, #0
   12d14:	bx	lr
   12d18:	cmp	r1, #0
   12d1c:	beq	12d44 <table_compare_uint64@@Base+0x44>
   12d20:	push	{r4, r5, lr}
   12d24:	ldrd	r2, [r1]
   12d28:	ldrd	r4, [r0]
   12d2c:	cmp	r5, r3
   12d30:	cmpeq	r4, r2
   12d34:	bhi	12d4c <table_compare_uint64@@Base+0x4c>
   12d38:	mvncc	r0, #0
   12d3c:	movcs	r0, #0
   12d40:	pop	{r4, r5, pc}
   12d44:	mov	r0, #1
   12d48:	bx	lr
   12d4c:	mov	r0, #1
   12d50:	pop	{r4, r5, pc}

00012d54 <table_compare_long@@Base>:
   12d54:	cmp	r0, #0
   12d58:	bne	12d6c <table_compare_long@@Base+0x18>
   12d5c:	adds	r0, r1, #0
   12d60:	movne	r0, #1
   12d64:	rsb	r0, r0, #0
   12d68:	bx	lr
   12d6c:	cmp	r1, #0
   12d70:	beq	12d90 <table_compare_long@@Base+0x3c>
   12d74:	ldr	r2, [r0]
   12d78:	ldr	r3, [r1]
   12d7c:	cmp	r2, r3
   12d80:	bgt	12d90 <table_compare_long@@Base+0x3c>
   12d84:	mvnlt	r0, #0
   12d88:	movge	r0, #0
   12d8c:	bx	lr
   12d90:	mov	r0, #1
   12d94:	bx	lr

00012d98 <table_compare_ullong@@Base>:
   12d98:	cmp	r0, #0
   12d9c:	bne	12db0 <table_compare_ullong@@Base+0x18>
   12da0:	adds	r0, r1, #0
   12da4:	movne	r0, #1
   12da8:	rsb	r0, r0, #0
   12dac:	bx	lr
   12db0:	cmp	r1, #0
   12db4:	beq	12dd4 <table_compare_ullong@@Base+0x3c>
   12db8:	ldr	r2, [r0]
   12dbc:	ldr	r3, [r1]
   12dc0:	cmp	r2, r3
   12dc4:	bhi	12dd4 <table_compare_ullong@@Base+0x3c>
   12dc8:	mvncc	r0, #0
   12dcc:	movcs	r0, #0
   12dd0:	bx	lr
   12dd4:	mov	r0, #1
   12dd8:	bx	lr

00012ddc <table_compare_float@@Base>:
   12ddc:	cmp	r0, #0
   12de0:	bne	12df4 <table_compare_float@@Base+0x18>
   12de4:	adds	r0, r1, #0
   12de8:	movne	r0, #1
   12dec:	rsb	r0, r0, #0
   12df0:	bx	lr
   12df4:	cmp	r1, #0
   12df8:	beq	12e1c <table_compare_float@@Base+0x40>
   12dfc:	vldr	s14, [r0]
   12e00:	vldr	s15, [r1]
   12e04:	vcmpe.f32	s14, s15
   12e08:	vmrs	APSR_nzcv, fpscr
   12e0c:	bgt	12e1c <table_compare_float@@Base+0x40>
   12e10:	mvnmi	r0, #0
   12e14:	movpl	r0, #0
   12e18:	bx	lr
   12e1c:	mov	r0, #1
   12e20:	bx	lr

00012e24 <table_compare_double@@Base>:
   12e24:	cmp	r0, #0
   12e28:	bne	12e3c <table_compare_double@@Base+0x18>
   12e2c:	adds	r0, r1, #0
   12e30:	movne	r0, #1
   12e34:	rsb	r0, r0, #0
   12e38:	bx	lr
   12e3c:	cmp	r1, #0
   12e40:	beq	12e64 <table_compare_double@@Base+0x40>
   12e44:	vldr	d6, [r0]
   12e48:	vldr	d7, [r1]
   12e4c:	vcmpe.f64	d6, d7
   12e50:	vmrs	APSR_nzcv, fpscr
   12e54:	bgt	12e64 <table_compare_double@@Base+0x40>
   12e58:	mvnmi	r0, #0
   12e5c:	movpl	r0, #0
   12e60:	bx	lr
   12e64:	mov	r0, #1
   12e68:	bx	lr

00012e6c <table_compare_ldouble@@Base>:
   12e6c:	cmp	r0, #0
   12e70:	bne	12e84 <table_compare_ldouble@@Base+0x18>
   12e74:	adds	r0, r1, #0
   12e78:	movne	r0, #1
   12e7c:	rsb	r0, r0, #0
   12e80:	bx	lr
   12e84:	cmp	r1, #0
   12e88:	beq	12eac <table_compare_ldouble@@Base+0x40>
   12e8c:	vldr	d6, [r0]
   12e90:	vldr	d7, [r1]
   12e94:	vcmpe.f64	d6, d7
   12e98:	vmrs	APSR_nzcv, fpscr
   12e9c:	bgt	12eac <table_compare_ldouble@@Base+0x40>
   12ea0:	mvnmi	r0, #0
   12ea4:	movpl	r0, #0
   12ea8:	bx	lr
   12eac:	mov	r0, #1
   12eb0:	bx	lr

00012eb4 <table_compare_uchar@@Base>:
   12eb4:	cmp	r0, #0
   12eb8:	bne	12ecc <table_compare_uchar@@Base+0x18>
   12ebc:	adds	r0, r1, #0
   12ec0:	movne	r0, #1
   12ec4:	rsb	r0, r0, #0
   12ec8:	bx	lr
   12ecc:	cmp	r1, #0
   12ed0:	beq	12ef0 <table_compare_uchar@@Base+0x3c>
   12ed4:	ldrb	r2, [r0]
   12ed8:	ldrb	r3, [r1]
   12edc:	cmp	r2, r3
   12ee0:	bhi	12ef0 <table_compare_uchar@@Base+0x3c>
   12ee4:	mvncc	r0, #0
   12ee8:	movcs	r0, #0
   12eec:	bx	lr
   12ef0:	mov	r0, #1
   12ef4:	bx	lr

00012ef8 <table_compare_int@@Base>:
   12ef8:	cmp	r0, #0
   12efc:	bne	12f10 <table_compare_int@@Base+0x18>
   12f00:	adds	r0, r1, #0
   12f04:	movne	r0, #1
   12f08:	rsb	r0, r0, #0
   12f0c:	bx	lr
   12f10:	cmp	r1, #0
   12f14:	beq	12f34 <table_compare_int@@Base+0x3c>
   12f18:	ldr	r2, [r0]
   12f1c:	ldr	r3, [r1]
   12f20:	cmp	r2, r3
   12f24:	bgt	12f34 <table_compare_int@@Base+0x3c>
   12f28:	mvnlt	r0, #0
   12f2c:	movge	r0, #0
   12f30:	bx	lr
   12f34:	mov	r0, #1
   12f38:	bx	lr

00012f3c <table_compare_uint@@Base>:
   12f3c:	cmp	r0, #0
   12f40:	bne	12f54 <table_compare_uint@@Base+0x18>
   12f44:	adds	r0, r1, #0
   12f48:	movne	r0, #1
   12f4c:	rsb	r0, r0, #0
   12f50:	bx	lr
   12f54:	cmp	r1, #0
   12f58:	beq	12f78 <table_compare_uint@@Base+0x3c>
   12f5c:	ldr	r2, [r0]
   12f60:	ldr	r3, [r1]
   12f64:	cmp	r2, r3
   12f68:	bhi	12f78 <table_compare_uint@@Base+0x3c>
   12f6c:	mvncc	r0, #0
   12f70:	movcs	r0, #0
   12f74:	bx	lr
   12f78:	mov	r0, #1
   12f7c:	bx	lr

00012f80 <table_compare_uint8@@Base>:
   12f80:	cmp	r0, #0
   12f84:	bne	12f98 <table_compare_uint8@@Base+0x18>
   12f88:	adds	r0, r1, #0
   12f8c:	movne	r0, #1
   12f90:	rsb	r0, r0, #0
   12f94:	bx	lr
   12f98:	cmp	r1, #0
   12f9c:	beq	12fbc <table_compare_uint8@@Base+0x3c>
   12fa0:	ldrb	r2, [r0]
   12fa4:	ldrb	r3, [r1]
   12fa8:	cmp	r2, r3
   12fac:	bhi	12fbc <table_compare_uint8@@Base+0x3c>
   12fb0:	mvncc	r0, #0
   12fb4:	movcs	r0, #0
   12fb8:	bx	lr
   12fbc:	mov	r0, #1
   12fc0:	bx	lr

00012fc4 <table_compare_int16@@Base>:
   12fc4:	cmp	r0, #0
   12fc8:	bne	12fdc <table_compare_int16@@Base+0x18>
   12fcc:	adds	r0, r1, #0
   12fd0:	movne	r0, #1
   12fd4:	rsb	r0, r0, #0
   12fd8:	bx	lr
   12fdc:	cmp	r1, #0
   12fe0:	beq	13000 <table_compare_int16@@Base+0x3c>
   12fe4:	ldrsh	r2, [r0]
   12fe8:	ldrsh	r3, [r1]
   12fec:	cmp	r2, r3
   12ff0:	bgt	13000 <table_compare_int16@@Base+0x3c>
   12ff4:	mvnlt	r0, #0
   12ff8:	movge	r0, #0
   12ffc:	bx	lr
   13000:	mov	r0, #1
   13004:	bx	lr

00013008 <table_compare_uint16@@Base>:
   13008:	cmp	r0, #0
   1300c:	bne	13020 <table_compare_uint16@@Base+0x18>
   13010:	adds	r0, r1, #0
   13014:	movne	r0, #1
   13018:	rsb	r0, r0, #0
   1301c:	bx	lr
   13020:	cmp	r1, #0
   13024:	beq	13044 <table_compare_uint16@@Base+0x3c>
   13028:	ldrh	r2, [r0]
   1302c:	ldrh	r3, [r1]
   13030:	cmp	r2, r3
   13034:	bhi	13044 <table_compare_uint16@@Base+0x3c>
   13038:	mvncc	r0, #0
   1303c:	movcs	r0, #0
   13040:	bx	lr
   13044:	mov	r0, #1
   13048:	bx	lr

0001304c <table_compare_ulong@@Base>:
   1304c:	cmp	r0, #0
   13050:	bne	13064 <table_compare_ulong@@Base+0x18>
   13054:	adds	r0, r1, #0
   13058:	movne	r0, #1
   1305c:	rsb	r0, r0, #0
   13060:	bx	lr
   13064:	cmp	r1, #0
   13068:	beq	13088 <table_compare_ulong@@Base+0x3c>
   1306c:	ldr	r2, [r0]
   13070:	ldr	r3, [r1]
   13074:	cmp	r2, r3
   13078:	bhi	13088 <table_compare_ulong@@Base+0x3c>
   1307c:	mvncc	r0, #0
   13080:	movcs	r0, #0
   13084:	bx	lr
   13088:	mov	r0, #1
   1308c:	bx	lr

00013090 <table_compare_int64@@Base>:
   13090:	cmp	r0, #0
   13094:	bne	130a8 <table_compare_int64@@Base+0x18>
   13098:	adds	r0, r1, #0
   1309c:	movne	r0, #1
   130a0:	rsb	r0, r0, #0
   130a4:	bx	lr
   130a8:	cmp	r1, #0
   130ac:	beq	130dc <table_compare_int64@@Base+0x4c>
   130b0:	push	{r4, r5, lr}
   130b4:	ldrd	r2, [r1]
   130b8:	ldrd	r4, [r0]
   130bc:	cmp	r2, r4
   130c0:	sbcs	r1, r3, r5
   130c4:	blt	130e4 <table_compare_int64@@Base+0x54>
   130c8:	cmp	r4, r2
   130cc:	sbcs	r3, r5, r3
   130d0:	mvnlt	r0, #0
   130d4:	movge	r0, #0
   130d8:	pop	{r4, r5, pc}
   130dc:	mov	r0, #1
   130e0:	bx	lr
   130e4:	mov	r0, #1
   130e8:	pop	{r4, r5, pc}

000130ec <table_get_default_compare_function_for_data_type@@Base>:
   130ec:	cmp	r0, #23
   130f0:	ldrls	r3, [pc, #8]	; 13100 <table_get_default_compare_function_for_data_type@@Base+0x14>
   130f4:	ldrls	r0, [r3, r0, lsl #2]
   130f8:	movhi	r0, #0
   130fc:	bx	lr
   13100:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>

00013104 <table_get@@Base>:
   13104:	push	{r4, lr}
   13108:	bl	14340 <table_get_cell_ptr@@Base>
   1310c:	ldr	r0, [r0]
   13110:	pop	{r4, pc}

00013114 <table_get_bool@@Base>:
   13114:	push	{r4, lr}
   13118:	bl	13104 <table_get@@Base>
   1311c:	ldrb	r0, [r0]
   13120:	pop	{r4, pc}

00013124 <table_get_int@@Base>:
   13124:	push	{r4, lr}
   13128:	bl	13104 <table_get@@Base>
   1312c:	ldr	r0, [r0]
   13130:	pop	{r4, pc}

00013134 <table_get_uint@@Base>:
   13134:	push	{r4, lr}
   13138:	bl	13104 <table_get@@Base>
   1313c:	ldr	r0, [r0]
   13140:	pop	{r4, pc}

00013144 <table_get_int8@@Base>:
   13144:	push	{r4, lr}
   13148:	bl	13104 <table_get@@Base>
   1314c:	ldrsb	r0, [r0]
   13150:	pop	{r4, pc}

00013154 <table_get_uint8@@Base>:
   13154:	push	{r4, lr}
   13158:	bl	13104 <table_get@@Base>
   1315c:	ldrb	r0, [r0]
   13160:	pop	{r4, pc}

00013164 <table_get_int16@@Base>:
   13164:	push	{r4, lr}
   13168:	bl	13104 <table_get@@Base>
   1316c:	ldrsh	r0, [r0]
   13170:	pop	{r4, pc}

00013174 <table_get_uint16@@Base>:
   13174:	push	{r4, lr}
   13178:	bl	13104 <table_get@@Base>
   1317c:	ldrh	r0, [r0]
   13180:	pop	{r4, pc}

00013184 <table_get_int32@@Base>:
   13184:	b	13124 <table_get_int@@Base>

00013188 <table_get_uint32@@Base>:
   13188:	b	13134 <table_get_uint@@Base>

0001318c <table_get_int64@@Base>:
   1318c:	push	{r4, lr}
   13190:	bl	13104 <table_get@@Base>
   13194:	ldrd	r0, [r0]
   13198:	pop	{r4, pc}

0001319c <table_get_uint64@@Base>:
   1319c:	push	{r4, lr}
   131a0:	bl	13104 <table_get@@Base>
   131a4:	ldrd	r0, [r0]
   131a8:	pop	{r4, pc}

000131ac <table_get_short@@Base>:
   131ac:	b	13164 <table_get_int16@@Base>

000131b0 <table_get_ushort@@Base>:
   131b0:	b	13174 <table_get_uint16@@Base>

000131b4 <table_get_long@@Base>:
   131b4:	push	{r4, lr}
   131b8:	bl	13104 <table_get@@Base>
   131bc:	ldr	r0, [r0]
   131c0:	pop	{r4, pc}

000131c4 <table_get_ulong@@Base>:
   131c4:	push	{r4, lr}
   131c8:	bl	13104 <table_get@@Base>
   131cc:	ldr	r0, [r0]
   131d0:	pop	{r4, pc}

000131d4 <table_get_llong@@Base>:
   131d4:	b	1318c <table_get_int64@@Base>

000131d8 <table_get_ullong@@Base>:
   131d8:	b	1319c <table_get_uint64@@Base>

000131dc <table_get_float@@Base>:
   131dc:	push	{r4, lr}
   131e0:	bl	13104 <table_get@@Base>
   131e4:	vldr	s0, [r0]
   131e8:	pop	{r4, pc}

000131ec <table_get_double@@Base>:
   131ec:	push	{r4, lr}
   131f0:	bl	13104 <table_get@@Base>
   131f4:	vldr	d0, [r0]
   131f8:	pop	{r4, pc}

000131fc <table_get_ldouble@@Base>:
   131fc:	push	{r4, lr}
   13200:	bl	13104 <table_get@@Base>
   13204:	vldr	d0, [r0]
   13208:	pop	{r4, pc}

0001320c <table_get_char@@Base>:
   1320c:	b	13154 <table_get_uint8@@Base>

00013210 <table_get_uchar@@Base>:
   13210:	b	13154 <table_get_uint8@@Base>

00013214 <table_get_string@@Base>:
   13214:	b	13104 <table_get@@Base>

00013218 <table_get_ptr@@Base>:
   13218:	b	13104 <table_get@@Base>

0001321c <table_row_init@@Base>:
   1321c:	push	{r4, r5, r6, lr}
   13220:	mov	r5, r1
   13224:	ldr	r4, [r0, #16]
   13228:	ldr	r0, [r0, #12]
   1322c:	lsl	r0, r0, #2
   13230:	bl	11ba0 <malloc@plt>
   13234:	str	r0, [r4, r5, lsl #2]
   13238:	pop	{r4, r5, r6, pc}

0001323c <table_row_destroy@@Base>:
   1323c:	push	{r4, r5, r6, r7, r8, lr}
   13240:	mov	r6, r0
   13244:	mov	r5, r1
   13248:	mov	r4, #0
   1324c:	bl	12770 <table_get_column_length@@Base>
   13250:	ldr	r7, [r6, #16]
   13254:	mov	r8, r0
   13258:	cmp	r4, r8
   1325c:	blt	13274 <table_row_destroy@@Base+0x38>
   13260:	ldr	r0, [r7, r5, lsl #2]
   13264:	cmp	r0, #0
   13268:	popeq	{r4, r5, r6, r7, r8, pc}
   1326c:	pop	{r4, r5, r6, r7, r8, lr}
   13270:	b	11b70 <free@plt>
   13274:	mov	r2, r4
   13278:	mov	r1, r5
   1327c:	mov	r0, r6
   13280:	add	r4, r4, #1
   13284:	bl	1436c <table_cell_destroy@@Base>
   13288:	b	13258 <table_row_destroy@@Base+0x1c>

0001328c <table_get_row_length@@Base>:
   1328c:	ldr	r0, [r0, #20]
   13290:	bx	lr

00013294 <table_add_row@@Base>:
   13294:	ldr	r2, [r0, #20]
   13298:	push	{r4, r5, r6, r7, r8, lr}
   1329c:	mov	r4, r0
   132a0:	ldr	r1, [r0, #24]
   132a4:	udiv	r3, r2, r1
   132a8:	mls	r3, r1, r3, r2
   132ac:	cmp	r3, #0
   132b0:	bne	132d0 <table_add_row@@Base+0x3c>
   132b4:	ldr	r3, [r4, #28]
   132b8:	ldr	r0, [r0, #16]
   132bc:	add	r1, r1, r3
   132c0:	str	r1, [r4, #28]
   132c4:	lsl	r1, r1, #2
   132c8:	bl	11b88 <realloc@plt>
   132cc:	str	r0, [r4, #16]
   132d0:	ldr	r6, [r4, #20]
   132d4:	mov	r0, r4
   132d8:	mov	r5, #0
   132dc:	bl	12770 <table_get_column_length@@Base>
   132e0:	mov	r7, r0
   132e4:	mov	r0, r4
   132e8:	mov	r1, r6
   132ec:	bl	1321c <table_row_init@@Base>
   132f0:	cmp	r7, r5
   132f4:	bgt	1331c <table_add_row@@Base+0x88>
   132f8:	mov	r0, r4
   132fc:	mov	r3, #2
   13300:	ldr	r1, [r4, #20]
   13304:	mvn	r2, #0
   13308:	bl	12698 <table_notify@@Base>
   1330c:	ldr	r0, [r4, #20]
   13310:	add	r3, r0, #1
   13314:	str	r3, [r4, #20]
   13318:	pop	{r4, r5, r6, r7, r8, pc}
   1331c:	mov	r2, r5
   13320:	mov	r1, r6
   13324:	mov	r0, r4
   13328:	add	r5, r5, #1
   1332c:	bl	14358 <table_cell_init@@Base>
   13330:	b	132f0 <table_add_row@@Base+0x5c>

00013334 <table_remove_row@@Base>:
   13334:	push	{r4, r5, r6, r7, r8, lr}
   13338:	mov	r4, r0
   1333c:	mov	r6, r1
   13340:	mov	r5, #0
   13344:	ldr	r7, [r0, #20]
   13348:	bl	12770 <table_get_column_length@@Base>
   1334c:	mov	r8, r0
   13350:	cmp	r8, r5
   13354:	bgt	133d4 <table_remove_row@@Base+0xa0>
   13358:	ldr	r3, [r4, #16]
   1335c:	ldr	r0, [r3, r6, lsl #2]
   13360:	cmp	r0, #0
   13364:	beq	1336c <table_remove_row@@Base+0x38>
   13368:	bl	11b70 <free@plt>
   1336c:	mov	r3, r6
   13370:	sub	r7, r7, #1
   13374:	cmp	r3, r7
   13378:	blt	13410 <table_remove_row@@Base+0xdc>
   1337c:	ldr	r3, [r4, #20]
   13380:	ldr	r2, [r4, #24]
   13384:	sub	r3, r3, #1
   13388:	udiv	r1, r3, r2
   1338c:	str	r3, [r4, #20]
   13390:	mls	r3, r2, r1, r3
   13394:	cmp	r3, #0
   13398:	bne	133b8 <table_remove_row@@Base+0x84>
   1339c:	ldr	r0, [r4, #16]
   133a0:	ldr	r1, [r4, #28]
   133a4:	sub	r1, r1, r2
   133a8:	str	r1, [r4, #28]
   133ac:	lsl	r1, r1, #2
   133b0:	bl	11b88 <realloc@plt>
   133b4:	str	r0, [r4, #16]
   133b8:	mov	r0, r4
   133bc:	mov	r3, #4
   133c0:	mvn	r2, #0
   133c4:	mov	r1, r6
   133c8:	bl	12698 <table_notify@@Base>
   133cc:	mov	r0, #0
   133d0:	pop	{r4, r5, r6, r7, r8, pc}
   133d4:	mov	r1, r5
   133d8:	mov	r0, r4
   133dc:	bl	127c8 <table_get_column_data_type@@Base>
   133e0:	cmp	r0, #23
   133e4:	beq	13408 <table_remove_row@@Base+0xd4>
   133e8:	mov	r2, r5
   133ec:	mov	r1, r6
   133f0:	mov	r0, r4
   133f4:	bl	14340 <table_get_cell_ptr@@Base>
   133f8:	ldr	r0, [r0]
   133fc:	cmp	r0, #0
   13400:	beq	13408 <table_remove_row@@Base+0xd4>
   13404:	bl	11b70 <free@plt>
   13408:	add	r5, r5, #1
   1340c:	b	13350 <table_remove_row@@Base+0x1c>
   13410:	ldr	r2, [r4, #16]
   13414:	add	r1, r2, r3, lsl #2
   13418:	ldr	r1, [r1, #4]
   1341c:	str	r1, [r2, r3, lsl #2]
   13420:	add	r3, r3, #1
   13424:	b	13374 <table_remove_row@@Base+0x40>

00013428 <table_get_row_ptr@@Base>:
   13428:	ldr	r0, [r0, #16]
   1342c:	add	r0, r0, r1, lsl #2
   13430:	bx	lr

00013434 <table_set_row_ptr@@Base>:
   13434:	ldr	r2, [r2]
   13438:	ldr	r3, [r0, #16]
   1343c:	str	r2, [r3, r1, lsl #2]
   13440:	bx	lr

00013444 <table_set@@Base>:
   13444:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13448:	mov	r6, r0
   1344c:	mov	r8, r1
   13450:	mov	r7, r2
   13454:	mov	r5, r3
   13458:	ldr	r9, [sp, #32]
   1345c:	bl	14340 <table_get_cell_ptr@@Base>
   13460:	mov	r4, r0
   13464:	mov	r1, r7
   13468:	mov	r0, r6
   1346c:	bl	12a48 <table_get_col_ptr@@Base>
   13470:	cmp	r9, #23
   13474:	ldrls	pc, [pc, r9, lsl #2]
   13478:	b	135c8 <table_set@@Base+0x184>
   1347c:	andeq	r3, r1, r8, lsl r5
   13480:	andeq	r3, r1, ip, ror #10
   13484:	andeq	r3, r1, r8, ror r5
   13488:	andeq	r3, r1, r4, lsl #11
   1348c:	muleq	r1, r0, r5
   13490:	ldrdeq	r3, [r1], -r0
   13494:	ldrdeq	r3, [r1], -ip
   13498:	andeq	r3, r1, r8, ror #11
   1349c:	strdeq	r3, [r1], -r4
   134a0:	andeq	r3, r1, r4, lsr r6
   134a4:	andeq	r3, r1, r4, asr r6
   134a8:	andeq	r3, r1, r0, ror #12
   134ac:	andeq	r3, r1, ip, ror #12
   134b0:	andeq	r3, r1, r8, ror r6
   134b4:	andeq	r3, r1, r4, lsl #13
   134b8:	muleq	r1, r0, r6
   134bc:	muleq	r1, ip, r6
   134c0:	andeq	r3, r1, r8, lsr #13
   134c4:			; <UNDEFINED> instruction: 0x000136b4
   134c8:	strdeq	r3, [r1], -r8
   134cc:	andeq	r3, r1, r4, lsl #14
   134d0:	andeq	r3, r1, r0, asr #13
   134d4:	ldrdeq	r3, [r1], -ip
   134d8:	andeq	r3, r1, r0, lsl r7
   134dc:	ldr	r3, [r0, #4]
   134e0:	cmp	r3, #22
   134e4:	bne	135c8 <table_set@@Base+0x184>
   134e8:	ldr	r3, [r4]
   134ec:	cmp	r3, #0
   134f0:	bne	13500 <table_set@@Base+0xbc>
   134f4:	mov	r0, #1
   134f8:	bl	11ba0 <malloc@plt>
   134fc:	str	r0, [r4]
   13500:	ldr	r3, [r4]
   13504:	cmp	r3, #0
   13508:	ldrbne	r2, [r5]
   1350c:	strbne	r2, [r3]
   13510:	bne	13550 <table_set@@Base+0x10c>
   13514:	b	135c8 <table_set@@Base+0x184>
   13518:	ldr	r3, [r0, #4]
   1351c:	cmp	r3, #0
   13520:	bne	135c8 <table_set@@Base+0x184>
   13524:	ldr	r3, [r4]
   13528:	cmp	r3, #0
   1352c:	bne	1353c <table_set@@Base+0xf8>
   13530:	mov	r0, #4
   13534:	bl	11ba0 <malloc@plt>
   13538:	str	r0, [r4]
   1353c:	ldr	r3, [r4]
   13540:	cmp	r3, #0
   13544:	ldrne	r2, [r5]
   13548:	strne	r2, [r3]
   1354c:	beq	135c8 <table_set@@Base+0x184>
   13550:	mov	r0, r6
   13554:	mov	r3, #1
   13558:	mov	r2, r7
   1355c:	mov	r1, r8
   13560:	bl	12698 <table_notify@@Base>
   13564:	mov	r0, #0
   13568:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1356c:	ldr	r3, [r0, #4]
   13570:	cmp	r3, #1
   13574:	b	13520 <table_set@@Base+0xdc>
   13578:	ldr	r3, [r0, #4]
   1357c:	cmp	r3, #2
   13580:	b	134e4 <table_set@@Base+0xa0>
   13584:	ldr	r3, [r0, #4]
   13588:	cmp	r3, #3
   1358c:	b	134e4 <table_set@@Base+0xa0>
   13590:	ldr	r3, [r0, #4]
   13594:	cmp	r3, #4
   13598:	bne	135c8 <table_set@@Base+0x184>
   1359c:	ldr	r3, [r4]
   135a0:	cmp	r3, #0
   135a4:	bne	135b4 <table_set@@Base+0x170>
   135a8:	mov	r0, #2
   135ac:	bl	11ba0 <malloc@plt>
   135b0:	str	r0, [r4]
   135b4:	ldr	r3, [r4]
   135b8:	cmp	r3, #0
   135bc:	ldrhne	r2, [r5]
   135c0:	strhne	r2, [r3]
   135c4:	bne	13550 <table_set@@Base+0x10c>
   135c8:	mvn	r0, #0
   135cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   135d0:	ldr	r3, [r0, #4]
   135d4:	cmp	r3, #5
   135d8:	b	13598 <table_set@@Base+0x154>
   135dc:	ldr	r3, [r0, #4]
   135e0:	cmp	r3, #6
   135e4:	b	13520 <table_set@@Base+0xdc>
   135e8:	ldr	r3, [r0, #4]
   135ec:	cmp	r3, #7
   135f0:	b	13520 <table_set@@Base+0xdc>
   135f4:	ldr	r0, [r0, #4]
   135f8:	cmp	r0, #8
   135fc:	bne	135c8 <table_set@@Base+0x184>
   13600:	ldr	r3, [r4]
   13604:	cmp	r3, #0
   13608:	bne	13614 <table_set@@Base+0x1d0>
   1360c:	bl	11ba0 <malloc@plt>
   13610:	str	r0, [r4]
   13614:	ldr	r3, [r4]
   13618:	cmp	r3, #0
   1361c:	beq	135c8 <table_set@@Base+0x184>
   13620:	ldr	r2, [r5]
   13624:	str	r2, [r3]
   13628:	ldr	r2, [r5, #4]
   1362c:	str	r2, [r3, #4]
   13630:	b	13550 <table_set@@Base+0x10c>
   13634:	ldr	r3, [r0, #4]
   13638:	cmp	r3, #9
   1363c:	bne	135c8 <table_set@@Base+0x184>
   13640:	ldr	r3, [r4]
   13644:	cmp	r3, #0
   13648:	bne	13614 <table_set@@Base+0x1d0>
   1364c:	mov	r0, #8
   13650:	b	1360c <table_set@@Base+0x1c8>
   13654:	ldr	r3, [r0, #4]
   13658:	cmp	r3, #10
   1365c:	b	13598 <table_set@@Base+0x154>
   13660:	ldr	r3, [r0, #4]
   13664:	cmp	r3, #11
   13668:	b	13598 <table_set@@Base+0x154>
   1366c:	ldr	r3, [r0, #4]
   13670:	cmp	r3, #12
   13674:	b	13520 <table_set@@Base+0xdc>
   13678:	ldr	r3, [r0, #4]
   1367c:	cmp	r3, #13
   13680:	b	13520 <table_set@@Base+0xdc>
   13684:	ldr	r3, [r0, #4]
   13688:	cmp	r3, #14
   1368c:	b	1363c <table_set@@Base+0x1f8>
   13690:	ldr	r3, [r0, #4]
   13694:	cmp	r3, #15
   13698:	b	1363c <table_set@@Base+0x1f8>
   1369c:	ldr	r3, [r0, #4]
   136a0:	cmp	r3, #16
   136a4:	b	13520 <table_set@@Base+0xdc>
   136a8:	ldr	r3, [r0, #4]
   136ac:	cmp	r3, #17
   136b0:	b	1363c <table_set@@Base+0x1f8>
   136b4:	ldr	r3, [r0, #4]
   136b8:	cmp	r3, #18
   136bc:	b	1363c <table_set@@Base+0x1f8>
   136c0:	ldr	r3, [r0, #4]
   136c4:	cmp	r3, #21
   136c8:	bne	135c8 <table_set@@Base+0x184>
   136cc:	mov	r0, r5
   136d0:	bl	11bc4 <strlen@plt>
   136d4:	add	r1, r0, #1
   136d8:	ldr	r0, [r4]
   136dc:	bl	11b88 <realloc@plt>
   136e0:	cmp	r0, #0
   136e4:	str	r0, [r4]
   136e8:	beq	135c8 <table_set@@Base+0x184>
   136ec:	mov	r1, r5
   136f0:	bl	11b94 <strcpy@plt>
   136f4:	b	13550 <table_set@@Base+0x10c>
   136f8:	ldr	r3, [r0, #4]
   136fc:	cmp	r3, #19
   13700:	b	134e4 <table_set@@Base+0xa0>
   13704:	ldr	r3, [r0, #4]
   13708:	cmp	r3, #20
   1370c:	b	134e4 <table_set@@Base+0xa0>
   13710:	ldr	r3, [r0, #4]
   13714:	cmp	r3, #23
   13718:	bne	135c8 <table_set@@Base+0x184>
   1371c:	str	r5, [r4]
   13720:	b	13550 <table_set@@Base+0x10c>

00013724 <table_set_bool@@Base>:
   13724:	push	{r0, r1, r2, r3, r4, lr}
   13728:	strb	r3, [sp, #15]
   1372c:	mov	r3, #22
   13730:	str	r3, [sp]
   13734:	add	r3, sp, #15
   13738:	bl	13444 <table_set@@Base>
   1373c:	add	sp, sp, #20
   13740:	pop	{pc}		; (ldr pc, [sp], #4)

00013744 <table_set_int@@Base>:
   13744:	push	{r0, r1, r2, r3, r4, lr}
   13748:	str	r3, [sp, #12]
   1374c:	mov	r3, #0
   13750:	str	r3, [sp]
   13754:	add	r3, sp, #12
   13758:	bl	13444 <table_set@@Base>
   1375c:	add	sp, sp, #20
   13760:	pop	{pc}		; (ldr pc, [sp], #4)

00013764 <table_set_uint@@Base>:
   13764:	push	{r0, r1, r2, r3, r4, lr}
   13768:	str	r3, [sp, #12]
   1376c:	mov	r3, #1
   13770:	str	r3, [sp]
   13774:	add	r3, sp, #12
   13778:	bl	13444 <table_set@@Base>
   1377c:	add	sp, sp, #20
   13780:	pop	{pc}		; (ldr pc, [sp], #4)

00013784 <table_set_int8@@Base>:
   13784:	push	{r0, r1, r2, r3, r4, lr}
   13788:	strb	r3, [sp, #15]
   1378c:	mov	r3, #2
   13790:	str	r3, [sp]
   13794:	add	r3, sp, #15
   13798:	bl	13444 <table_set@@Base>
   1379c:	add	sp, sp, #20
   137a0:	pop	{pc}		; (ldr pc, [sp], #4)

000137a4 <table_set_uint8@@Base>:
   137a4:	push	{r0, r1, r2, r3, r4, lr}
   137a8:	strb	r3, [sp, #15]
   137ac:	mov	r3, #3
   137b0:	str	r3, [sp]
   137b4:	add	r3, sp, #15
   137b8:	bl	13444 <table_set@@Base>
   137bc:	add	sp, sp, #20
   137c0:	pop	{pc}		; (ldr pc, [sp], #4)

000137c4 <table_set_int16@@Base>:
   137c4:	push	{r0, r1, r2, r3, r4, lr}
   137c8:	strh	r3, [sp, #14]
   137cc:	mov	r3, #4
   137d0:	str	r3, [sp]
   137d4:	add	r3, sp, #14
   137d8:	bl	13444 <table_set@@Base>
   137dc:	add	sp, sp, #20
   137e0:	pop	{pc}		; (ldr pc, [sp], #4)

000137e4 <table_set_uint16@@Base>:
   137e4:	push	{r0, r1, r2, r3, r4, lr}
   137e8:	strh	r3, [sp, #14]
   137ec:	mov	r3, #5
   137f0:	str	r3, [sp]
   137f4:	add	r3, sp, #14
   137f8:	bl	13444 <table_set@@Base>
   137fc:	add	sp, sp, #20
   13800:	pop	{pc}		; (ldr pc, [sp], #4)

00013804 <table_set_int32@@Base>:
   13804:	push	{r0, r1, r2, r3, r4, lr}
   13808:	str	r3, [sp, #12]
   1380c:	mov	r3, #6
   13810:	str	r3, [sp]
   13814:	add	r3, sp, #12
   13818:	bl	13444 <table_set@@Base>
   1381c:	add	sp, sp, #20
   13820:	pop	{pc}		; (ldr pc, [sp], #4)

00013824 <table_set_uint32@@Base>:
   13824:	push	{r0, r1, r2, r3, r4, lr}
   13828:	str	r3, [sp, #12]
   1382c:	mov	r3, #7
   13830:	str	r3, [sp]
   13834:	add	r3, sp, #12
   13838:	bl	13444 <table_set@@Base>
   1383c:	add	sp, sp, #20
   13840:	pop	{pc}		; (ldr pc, [sp], #4)

00013844 <table_set_int64@@Base>:
   13844:	mov	r3, #8
   13848:	push	{r0, r1, r2, lr}
   1384c:	str	r3, [sp]
   13850:	add	r3, sp, #16
   13854:	bl	13444 <table_set@@Base>
   13858:	add	sp, sp, #12
   1385c:	pop	{pc}		; (ldr pc, [sp], #4)

00013860 <table_set_uint64@@Base>:
   13860:	mov	r3, #9
   13864:	push	{r0, r1, r2, lr}
   13868:	str	r3, [sp]
   1386c:	add	r3, sp, #16
   13870:	bl	13444 <table_set@@Base>
   13874:	add	sp, sp, #12
   13878:	pop	{pc}		; (ldr pc, [sp], #4)

0001387c <table_set_short@@Base>:
   1387c:	push	{r0, r1, r2, r3, r4, lr}
   13880:	strh	r3, [sp, #14]
   13884:	mov	r3, #10
   13888:	str	r3, [sp]
   1388c:	add	r3, sp, #14
   13890:	bl	13444 <table_set@@Base>
   13894:	add	sp, sp, #20
   13898:	pop	{pc}		; (ldr pc, [sp], #4)

0001389c <table_set_ushort@@Base>:
   1389c:	push	{r0, r1, r2, r3, r4, lr}
   138a0:	strh	r3, [sp, #14]
   138a4:	mov	r3, #11
   138a8:	str	r3, [sp]
   138ac:	add	r3, sp, #14
   138b0:	bl	13444 <table_set@@Base>
   138b4:	add	sp, sp, #20
   138b8:	pop	{pc}		; (ldr pc, [sp], #4)

000138bc <table_set_long@@Base>:
   138bc:	push	{r0, r1, r2, r3, r4, lr}
   138c0:	str	r3, [sp, #12]
   138c4:	mov	r3, #12
   138c8:	str	r3, [sp]
   138cc:	add	r3, sp, r3
   138d0:	bl	13444 <table_set@@Base>
   138d4:	add	sp, sp, #20
   138d8:	pop	{pc}		; (ldr pc, [sp], #4)

000138dc <table_set_ulong@@Base>:
   138dc:	push	{r0, r1, r2, r3, r4, lr}
   138e0:	str	r3, [sp, #12]
   138e4:	mov	r3, #13
   138e8:	str	r3, [sp]
   138ec:	add	r3, sp, #12
   138f0:	bl	13444 <table_set@@Base>
   138f4:	add	sp, sp, #20
   138f8:	pop	{pc}		; (ldr pc, [sp], #4)

000138fc <table_set_llong@@Base>:
   138fc:	mov	r3, #14
   13900:	push	{r0, r1, r2, lr}
   13904:	str	r3, [sp]
   13908:	add	r3, sp, #16
   1390c:	bl	13444 <table_set@@Base>
   13910:	add	sp, sp, #12
   13914:	pop	{pc}		; (ldr pc, [sp], #4)

00013918 <table_set_ullong@@Base>:
   13918:	mov	r3, #15
   1391c:	push	{r0, r1, r2, lr}
   13920:	str	r3, [sp]
   13924:	add	r3, sp, #16
   13928:	bl	13444 <table_set@@Base>
   1392c:	add	sp, sp, #12
   13930:	pop	{pc}		; (ldr pc, [sp], #4)

00013934 <table_set_float@@Base>:
   13934:	push	{r0, r1, r2, r3, r4, lr}
   13938:	mov	r3, #16
   1393c:	str	r3, [sp]
   13940:	add	r3, sp, #12
   13944:	vstr	s0, [sp, #12]
   13948:	bl	13444 <table_set@@Base>
   1394c:	add	sp, sp, #20
   13950:	pop	{pc}		; (ldr pc, [sp], #4)

00013954 <table_set_double@@Base>:
   13954:	push	{r0, r1, r2, r3, r4, lr}
   13958:	mov	r3, #17
   1395c:	str	r3, [sp]
   13960:	add	r3, sp, #8
   13964:	vstr	d0, [sp, #8]
   13968:	bl	13444 <table_set@@Base>
   1396c:	add	sp, sp, #20
   13970:	pop	{pc}		; (ldr pc, [sp], #4)

00013974 <table_set_ldouble@@Base>:
   13974:	push	{r0, r1, r2, r3, r4, lr}
   13978:	mov	r3, #18
   1397c:	str	r3, [sp]
   13980:	add	r3, sp, #8
   13984:	vstr	d0, [sp, #8]
   13988:	bl	13444 <table_set@@Base>
   1398c:	add	sp, sp, #20
   13990:	pop	{pc}		; (ldr pc, [sp], #4)

00013994 <table_set_string@@Base>:
   13994:	mov	ip, #21
   13998:	push	{r0, r1, r2, lr}
   1399c:	str	ip, [sp]
   139a0:	bl	13444 <table_set@@Base>
   139a4:	add	sp, sp, #12
   139a8:	pop	{pc}		; (ldr pc, [sp], #4)

000139ac <table_set_char@@Base>:
   139ac:	push	{r0, r1, r2, r3, r4, lr}
   139b0:	strb	r3, [sp, #15]
   139b4:	mov	r3, #19
   139b8:	str	r3, [sp]
   139bc:	add	r3, sp, #15
   139c0:	bl	13444 <table_set@@Base>
   139c4:	add	sp, sp, #20
   139c8:	pop	{pc}		; (ldr pc, [sp], #4)

000139cc <table_set_uchar@@Base>:
   139cc:	push	{r0, r1, r2, r3, r4, lr}
   139d0:	strb	r3, [sp, #15]
   139d4:	mov	r3, #20
   139d8:	str	r3, [sp]
   139dc:	add	r3, sp, #15
   139e0:	bl	13444 <table_set@@Base>
   139e4:	add	sp, sp, #20
   139e8:	pop	{pc}		; (ldr pc, [sp], #4)

000139ec <table_set_ptr@@Base>:
   139ec:	mov	ip, #23
   139f0:	push	{r0, r1, r2, lr}
   139f4:	str	ip, [sp]
   139f8:	bl	13444 <table_set@@Base>
   139fc:	add	sp, sp, #12
   13a00:	pop	{pc}		; (ldr pc, [sp], #4)

00013a04 <table_column_is_valid@@Base>:
   13a04:	subs	r3, r0, #0
   13a08:	beq	13a30 <table_column_is_valid@@Base+0x2c>
   13a0c:	push	{r4, lr}
   13a10:	mov	r4, r1
   13a14:	bl	12770 <table_get_column_length@@Base>
   13a18:	mvn	r3, r4
   13a1c:	cmp	r4, r0
   13a20:	lsr	r3, r3, #31
   13a24:	movge	r3, #0
   13a28:	mov	r0, r3
   13a2c:	pop	{r4, pc}
   13a30:	mov	r0, r3
   13a34:	bx	lr

00013a38 <table_row_is_valid@@Base>:
   13a38:	subs	r3, r0, #0
   13a3c:	beq	13a64 <table_row_is_valid@@Base+0x2c>
   13a40:	push	{r4, lr}
   13a44:	mov	r4, r1
   13a48:	bl	1328c <table_get_row_length@@Base>
   13a4c:	mvn	r3, r4
   13a50:	cmp	r4, r0
   13a54:	lsr	r3, r3, #31
   13a58:	movge	r3, #0
   13a5c:	mov	r0, r3
   13a60:	pop	{r4, pc}
   13a64:	mov	r0, r3
   13a68:	bx	lr

00013a6c <table_cell_is_valid@@Base>:
   13a6c:	push	{r4, r5, r6, lr}
   13a70:	mov	r5, r1
   13a74:	mov	r1, r2
   13a78:	mov	r4, r0
   13a7c:	bl	13a04 <table_column_is_valid@@Base>
   13a80:	cmp	r0, #0
   13a84:	popeq	{r4, r5, r6, pc}
   13a88:	mov	r1, r5
   13a8c:	mov	r0, r4
   13a90:	bl	13a38 <table_row_is_valid@@Base>
   13a94:	adds	r0, r0, #0
   13a98:	movne	r0, #1
   13a9c:	pop	{r4, r5, r6, pc}

00013aa0 <table_cell_has_value@@Base>:
   13aa0:	push	{r4, lr}
   13aa4:	bl	14340 <table_get_cell_ptr@@Base>
   13aa8:	cmp	r0, #0
   13aac:	popeq	{r4, pc}
   13ab0:	ldr	r0, [r0]
   13ab4:	adds	r0, r0, #0
   13ab8:	movne	r0, #1
   13abc:	pop	{r4, pc}

00013ac0 <table_cell_to_buffer@@Base>:
   13ac0:	push	{r4, r5, r6, r7, lr}
   13ac4:	sub	sp, sp, #20
   13ac8:	mov	r7, r1
   13acc:	mov	r1, r2
   13ad0:	mov	r6, r0
   13ad4:	mov	r4, r3
   13ad8:	str	r2, [sp, #12]
   13adc:	ldr	r5, [sp, #40]	; 0x28
   13ae0:	bl	127c8 <table_get_column_data_type@@Base>
   13ae4:	ldr	r2, [sp, #12]
   13ae8:	cmp	r0, #23
   13aec:	ldrls	pc, [pc, r0, lsl #2]
   13af0:	b	13c10 <table_cell_to_buffer@@Base+0x150>
   13af4:	andeq	r3, r1, r4, asr fp
   13af8:	andeq	r3, r1, ip, ror #22
   13afc:	muleq	r1, r0, fp
   13b00:	andeq	r3, r1, r0, lsr #23
   13b04:			; <UNDEFINED> instruction: 0x00013bb0
   13b08:	andeq	r3, r1, r0, asr #23
   13b0c:	ldrdeq	r3, [r1], -r0
   13b10:	andeq	r3, r1, r0, ror #23
   13b14:	strdeq	r3, [r1], -r0
   13b18:	andeq	r3, r1, ip, lsl ip
   13b1c:	andeq	r3, r1, r4, lsr ip
   13b20:	andeq	r3, r1, ip, asr #24
   13b24:	andeq	r3, r1, r4, ror #24
   13b28:	andeq	r3, r1, ip, ror ip
   13b2c:	muleq	r1, r4, ip
   13b30:	andeq	r3, r1, r4, lsr #25
   13b34:	andeq	r3, r1, ip, asr #25
   13b38:	strdeq	r3, [r1], -r4
   13b3c:	andeq	r3, r1, ip, lsl #26
   13b40:	andeq	r3, r1, r4, lsr sp
   13b44:	andeq	r3, r1, ip, asr #26
   13b48:			; <UNDEFINED> instruction: 0x00013cb4
   13b4c:	andeq	r3, r1, r4, lsr #26
   13b50:	andeq	r3, r1, ip, asr sp
   13b54:	mov	r1, r7
   13b58:	mov	r0, r6
   13b5c:	bl	13124 <table_get_int@@Base>
   13b60:	mov	r3, r0
   13b64:	ldr	r2, [pc, #520]	; 13d74 <table_cell_to_buffer@@Base+0x2b4>
   13b68:	b	13b80 <table_cell_to_buffer@@Base+0xc0>
   13b6c:	mov	r1, r7
   13b70:	mov	r0, r6
   13b74:	bl	13134 <table_get_uint@@Base>
   13b78:	ldr	r2, [pc, #504]	; 13d78 <table_cell_to_buffer@@Base+0x2b8>
   13b7c:	mov	r3, r0
   13b80:	mov	r1, r5
   13b84:	mov	r0, r4
   13b88:	bl	11bdc <snprintf@plt>
   13b8c:	b	13c10 <table_cell_to_buffer@@Base+0x150>
   13b90:	mov	r1, r7
   13b94:	mov	r0, r6
   13b98:	bl	13144 <table_get_int8@@Base>
   13b9c:	b	13b60 <table_cell_to_buffer@@Base+0xa0>
   13ba0:	mov	r1, r7
   13ba4:	mov	r0, r6
   13ba8:	bl	13154 <table_get_uint8@@Base>
   13bac:	b	13b78 <table_cell_to_buffer@@Base+0xb8>
   13bb0:	mov	r1, r7
   13bb4:	mov	r0, r6
   13bb8:	bl	13164 <table_get_int16@@Base>
   13bbc:	b	13b60 <table_cell_to_buffer@@Base+0xa0>
   13bc0:	mov	r1, r7
   13bc4:	mov	r0, r6
   13bc8:	bl	13174 <table_get_uint16@@Base>
   13bcc:	b	13b78 <table_cell_to_buffer@@Base+0xb8>
   13bd0:	mov	r1, r7
   13bd4:	mov	r0, r6
   13bd8:	bl	13184 <table_get_int32@@Base>
   13bdc:	b	13b60 <table_cell_to_buffer@@Base+0xa0>
   13be0:	mov	r1, r7
   13be4:	mov	r0, r6
   13be8:	bl	13188 <table_get_uint32@@Base>
   13bec:	b	13b78 <table_cell_to_buffer@@Base+0xb8>
   13bf0:	mov	r1, r7
   13bf4:	mov	r0, r6
   13bf8:	bl	1318c <table_get_int64@@Base>
   13bfc:	ldr	r2, [pc, #376]	; 13d7c <table_cell_to_buffer@@Base+0x2bc>
   13c00:	strd	r0, [sp]
   13c04:	mov	r1, r5
   13c08:	mov	r0, r4
   13c0c:	bl	11bdc <snprintf@plt>
   13c10:	mov	r0, #0
   13c14:	add	sp, sp, #20
   13c18:	pop	{r4, r5, r6, r7, pc}
   13c1c:	mov	r1, r7
   13c20:	mov	r0, r6
   13c24:	bl	1319c <table_get_uint64@@Base>
   13c28:	ldr	r2, [pc, #336]	; 13d80 <table_cell_to_buffer@@Base+0x2c0>
   13c2c:	strd	r0, [sp]
   13c30:	b	13c04 <table_cell_to_buffer@@Base+0x144>
   13c34:	mov	r1, r7
   13c38:	mov	r0, r6
   13c3c:	bl	131ac <table_get_short@@Base>
   13c40:	mov	r3, r0
   13c44:	ldr	r2, [pc, #312]	; 13d84 <table_cell_to_buffer@@Base+0x2c4>
   13c48:	b	13b80 <table_cell_to_buffer@@Base+0xc0>
   13c4c:	mov	r1, r7
   13c50:	mov	r0, r6
   13c54:	bl	131b0 <table_get_ushort@@Base>
   13c58:	mov	r3, r0
   13c5c:	ldr	r2, [pc, #292]	; 13d88 <table_cell_to_buffer@@Base+0x2c8>
   13c60:	b	13b80 <table_cell_to_buffer@@Base+0xc0>
   13c64:	mov	r1, r7
   13c68:	mov	r0, r6
   13c6c:	bl	131b4 <table_get_long@@Base>
   13c70:	mov	r3, r0
   13c74:	ldr	r2, [pc, #272]	; 13d8c <table_cell_to_buffer@@Base+0x2cc>
   13c78:	b	13b80 <table_cell_to_buffer@@Base+0xc0>
   13c7c:	mov	r1, r7
   13c80:	mov	r0, r6
   13c84:	bl	131c4 <table_get_ulong@@Base>
   13c88:	mov	r3, r0
   13c8c:	ldr	r2, [pc, #252]	; 13d90 <table_cell_to_buffer@@Base+0x2d0>
   13c90:	b	13b80 <table_cell_to_buffer@@Base+0xc0>
   13c94:	mov	r1, r7
   13c98:	mov	r0, r6
   13c9c:	bl	131d4 <table_get_llong@@Base>
   13ca0:	b	13bfc <table_cell_to_buffer@@Base+0x13c>
   13ca4:	mov	r1, r7
   13ca8:	mov	r0, r6
   13cac:	bl	131d8 <table_get_ullong@@Base>
   13cb0:	b	13c28 <table_cell_to_buffer@@Base+0x168>
   13cb4:	mov	r1, r7
   13cb8:	mov	r0, r6
   13cbc:	bl	13214 <table_get_string@@Base>
   13cc0:	mov	r3, r0
   13cc4:	ldr	r2, [pc, #200]	; 13d94 <table_cell_to_buffer@@Base+0x2d4>
   13cc8:	b	13b80 <table_cell_to_buffer@@Base+0xc0>
   13ccc:	mov	r1, r7
   13cd0:	mov	r0, r6
   13cd4:	bl	131dc <table_get_float@@Base>
   13cd8:	vcvt.f64.f32	d0, s0
   13cdc:	ldr	r2, [pc, #180]	; 13d98 <table_cell_to_buffer@@Base+0x2d8>
   13ce0:	vstr	d0, [sp]
   13ce4:	mov	r1, r5
   13ce8:	mov	r0, r4
   13cec:	bl	11bdc <snprintf@plt>
   13cf0:	b	13c10 <table_cell_to_buffer@@Base+0x150>
   13cf4:	mov	r1, r7
   13cf8:	mov	r0, r6
   13cfc:	bl	131ec <table_get_double@@Base>
   13d00:	ldr	r2, [pc, #148]	; 13d9c <table_cell_to_buffer@@Base+0x2dc>
   13d04:	vstr	d0, [sp]
   13d08:	b	13ce4 <table_cell_to_buffer@@Base+0x224>
   13d0c:	mov	r1, r7
   13d10:	mov	r0, r6
   13d14:	bl	131fc <table_get_ldouble@@Base>
   13d18:	ldr	r2, [pc, #128]	; 13da0 <table_cell_to_buffer@@Base+0x2e0>
   13d1c:	vstr	d0, [sp]
   13d20:	b	13ce4 <table_cell_to_buffer@@Base+0x224>
   13d24:	mov	r1, r7
   13d28:	mov	r0, r6
   13d2c:	bl	13114 <table_get_bool@@Base>
   13d30:	b	13b60 <table_cell_to_buffer@@Base+0xa0>
   13d34:	mov	r1, r7
   13d38:	mov	r0, r6
   13d3c:	bl	1320c <table_get_char@@Base>
   13d40:	mov	r3, r0
   13d44:	ldr	r2, [pc, #88]	; 13da4 <table_cell_to_buffer@@Base+0x2e4>
   13d48:	b	13b80 <table_cell_to_buffer@@Base+0xc0>
   13d4c:	mov	r1, r7
   13d50:	mov	r0, r6
   13d54:	bl	13210 <table_get_uchar@@Base>
   13d58:	b	13d40 <table_cell_to_buffer@@Base+0x280>
   13d5c:	mov	r1, r7
   13d60:	mov	r0, r6
   13d64:	bl	13218 <table_get_ptr@@Base>
   13d68:	mov	r3, r0
   13d6c:	ldr	r2, [pc, #52]	; 13da8 <table_cell_to_buffer@@Base+0x2e8>
   13d70:	b	13b80 <table_cell_to_buffer@@Base+0xc0>
   13d74:	andeq	r4, r1, r4, asr r5
   13d78:	andeq	r4, r1, r7, asr r5
   13d7c:	andeq	r4, r1, sl, asr r5
   13d80:	andeq	r4, r1, pc, asr r5
   13d84:	andeq	r4, r1, r4, ror #10
   13d88:	andeq	r4, r1, r8, ror #10
   13d8c:	andeq	r4, r1, ip, ror #10
   13d90:	andeq	r4, r1, r0, ror r5
   13d94:	andeq	r4, r1, r4, ror r5
   13d98:	andeq	r4, r1, r7, ror r5
   13d9c:	andeq	r4, r1, sl, ror r5
   13da0:	andeq	r4, r1, lr, ror r5
   13da4:	andeq	r4, r1, r2, lsl #11
   13da8:	andeq	r4, r1, r5, lsl #11

00013dac <table_cell_from_buffer@@Base>:
   13dac:	push	{r4, r5, r6, r7, lr}
   13db0:	mov	r7, r1
   13db4:	sub	sp, sp, #268	; 0x10c
   13db8:	mov	r1, r2
   13dbc:	mov	r6, r0
   13dc0:	mov	r5, r2
   13dc4:	mov	r4, r3
   13dc8:	bl	127c8 <table_get_column_data_type@@Base>
   13dcc:	cmp	r0, #23
   13dd0:	ldrls	pc, [pc, r0, lsl #2]
   13dd4:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   13dd8:	andeq	r3, r1, r8, lsr lr
   13ddc:	andeq	r3, r1, ip, ror #28
   13de0:	muleq	r1, ip, lr
   13de4:	andeq	r3, r1, ip, asr #29
   13de8:	strdeq	r3, [r1], -ip
   13dec:	andeq	r3, r1, ip, lsr #30
   13df0:	andeq	r3, r1, ip, asr pc
   13df4:	andeq	r3, r1, ip, lsl #31
   13df8:			; <UNDEFINED> instruction: 0x00013fbc
   13dfc:	strdeq	r3, [r1], -r0
   13e00:	andeq	r4, r1, r4, lsr #32
   13e04:	andeq	r4, r1, r4, asr r0
   13e08:	andeq	r4, r1, r4, lsl #1
   13e0c:	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
   13e10:	andeq	r4, r1, r4, ror #1
   13e14:	andeq	r4, r1, r8, lsl r1
   13e18:	andeq	r4, r1, ip, ror r1
   13e1c:	andeq	r4, r1, ip, lsr #3
   13e20:	ldrdeq	r4, [r1], -ip
   13e24:	andeq	r4, r1, r8, ror #4
   13e28:	muleq	r1, r8, r2
   13e2c:	andeq	r4, r1, ip, asr #2
   13e30:	andeq	r4, r1, ip, lsl #4
   13e34:	andeq	r4, r1, r8, asr #5
   13e38:	add	r2, sp, #8
   13e3c:	ldr	r1, [pc, #1212]	; 14300 <table_cell_from_buffer@@Base+0x554>
   13e40:	mov	r0, r4
   13e44:	bl	11be8 <__isoc99_sscanf@plt>
   13e48:	cmp	r0, #1
   13e4c:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   13e50:	mov	r2, r5
   13e54:	mov	r1, r7
   13e58:	ldr	r3, [sp, #8]
   13e5c:	mov	r0, r6
   13e60:	bl	13744 <table_set_int@@Base>
   13e64:	mov	r4, #0
   13e68:	b	1425c <table_cell_from_buffer@@Base+0x4b0>
   13e6c:	add	r2, sp, #8
   13e70:	ldr	r1, [pc, #1164]	; 14304 <table_cell_from_buffer@@Base+0x558>
   13e74:	mov	r0, r4
   13e78:	bl	11be8 <__isoc99_sscanf@plt>
   13e7c:	cmp	r0, #1
   13e80:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   13e84:	mov	r2, r5
   13e88:	mov	r1, r7
   13e8c:	ldr	r3, [sp, #8]
   13e90:	mov	r0, r6
   13e94:	bl	13764 <table_set_uint@@Base>
   13e98:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   13e9c:	add	r2, sp, #8
   13ea0:	ldr	r1, [pc, #1120]	; 14308 <table_cell_from_buffer@@Base+0x55c>
   13ea4:	mov	r0, r4
   13ea8:	bl	11be8 <__isoc99_sscanf@plt>
   13eac:	cmp	r0, #1
   13eb0:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   13eb4:	ldrsb	r3, [sp, #8]
   13eb8:	mov	r2, r5
   13ebc:	mov	r1, r7
   13ec0:	mov	r0, r6
   13ec4:	bl	13784 <table_set_int8@@Base>
   13ec8:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   13ecc:	add	r2, sp, #8
   13ed0:	ldr	r1, [pc, #1076]	; 1430c <table_cell_from_buffer@@Base+0x560>
   13ed4:	mov	r0, r4
   13ed8:	bl	11be8 <__isoc99_sscanf@plt>
   13edc:	cmp	r0, #1
   13ee0:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   13ee4:	ldrb	r3, [sp, #8]
   13ee8:	mov	r2, r5
   13eec:	mov	r1, r7
   13ef0:	mov	r0, r6
   13ef4:	bl	137a4 <table_set_uint8@@Base>
   13ef8:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   13efc:	add	r2, sp, #8
   13f00:	ldr	r1, [pc, #1032]	; 14310 <table_cell_from_buffer@@Base+0x564>
   13f04:	mov	r0, r4
   13f08:	bl	11be8 <__isoc99_sscanf@plt>
   13f0c:	cmp	r0, #1
   13f10:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   13f14:	ldrsh	r3, [sp, #8]
   13f18:	mov	r2, r5
   13f1c:	mov	r1, r7
   13f20:	mov	r0, r6
   13f24:	bl	137c4 <table_set_int16@@Base>
   13f28:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   13f2c:	add	r2, sp, #8
   13f30:	ldr	r1, [pc, #988]	; 14314 <table_cell_from_buffer@@Base+0x568>
   13f34:	mov	r0, r4
   13f38:	bl	11be8 <__isoc99_sscanf@plt>
   13f3c:	cmp	r0, #1
   13f40:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   13f44:	ldrh	r3, [sp, #8]
   13f48:	mov	r2, r5
   13f4c:	mov	r1, r7
   13f50:	mov	r0, r6
   13f54:	bl	137e4 <table_set_uint16@@Base>
   13f58:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   13f5c:	add	r2, sp, #8
   13f60:	ldr	r1, [pc, #920]	; 14300 <table_cell_from_buffer@@Base+0x554>
   13f64:	mov	r0, r4
   13f68:	bl	11be8 <__isoc99_sscanf@plt>
   13f6c:	cmp	r0, #1
   13f70:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   13f74:	mov	r2, r5
   13f78:	mov	r1, r7
   13f7c:	ldr	r3, [sp, #8]
   13f80:	mov	r0, r6
   13f84:	bl	13804 <table_set_int32@@Base>
   13f88:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   13f8c:	add	r2, sp, #8
   13f90:	ldr	r1, [pc, #876]	; 14304 <table_cell_from_buffer@@Base+0x558>
   13f94:	mov	r0, r4
   13f98:	bl	11be8 <__isoc99_sscanf@plt>
   13f9c:	cmp	r0, #1
   13fa0:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   13fa4:	mov	r2, r5
   13fa8:	mov	r1, r7
   13fac:	ldr	r3, [sp, #8]
   13fb0:	mov	r0, r6
   13fb4:	bl	13824 <table_set_uint32@@Base>
   13fb8:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   13fbc:	add	r2, sp, #8
   13fc0:	ldr	r1, [pc, #848]	; 14318 <table_cell_from_buffer@@Base+0x56c>
   13fc4:	mov	r0, r4
   13fc8:	bl	11be8 <__isoc99_sscanf@plt>
   13fcc:	cmp	r0, #1
   13fd0:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   13fd4:	ldrd	r2, [sp, #8]
   13fd8:	mov	r1, r7
   13fdc:	mov	r0, r6
   13fe0:	strd	r2, [sp]
   13fe4:	mov	r2, r5
   13fe8:	bl	13844 <table_set_int64@@Base>
   13fec:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   13ff0:	add	r2, sp, #8
   13ff4:	ldr	r1, [pc, #800]	; 1431c <table_cell_from_buffer@@Base+0x570>
   13ff8:	mov	r0, r4
   13ffc:	bl	11be8 <__isoc99_sscanf@plt>
   14000:	cmp	r0, #1
   14004:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   14008:	ldrd	r2, [sp, #8]
   1400c:	mov	r1, r7
   14010:	mov	r0, r6
   14014:	strd	r2, [sp]
   14018:	mov	r2, r5
   1401c:	bl	13860 <table_set_uint64@@Base>
   14020:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   14024:	add	r2, sp, #8
   14028:	ldr	r1, [pc, #736]	; 14310 <table_cell_from_buffer@@Base+0x564>
   1402c:	mov	r0, r4
   14030:	bl	11be8 <__isoc99_sscanf@plt>
   14034:	cmp	r0, #1
   14038:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   1403c:	ldrsh	r3, [sp, #8]
   14040:	mov	r2, r5
   14044:	mov	r1, r7
   14048:	mov	r0, r6
   1404c:	bl	1387c <table_set_short@@Base>
   14050:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   14054:	add	r2, sp, #8
   14058:	ldr	r1, [pc, #692]	; 14314 <table_cell_from_buffer@@Base+0x568>
   1405c:	mov	r0, r4
   14060:	bl	11be8 <__isoc99_sscanf@plt>
   14064:	cmp	r0, #1
   14068:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   1406c:	ldrh	r3, [sp, #8]
   14070:	mov	r2, r5
   14074:	mov	r1, r7
   14078:	mov	r0, r6
   1407c:	bl	1389c <table_set_ushort@@Base>
   14080:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   14084:	add	r2, sp, #8
   14088:	ldr	r1, [pc, #656]	; 14320 <table_cell_from_buffer@@Base+0x574>
   1408c:	mov	r0, r4
   14090:	bl	11be8 <__isoc99_sscanf@plt>
   14094:	cmp	r0, #1
   14098:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   1409c:	mov	r2, r5
   140a0:	mov	r1, r7
   140a4:	ldr	r3, [sp, #8]
   140a8:	mov	r0, r6
   140ac:	bl	138bc <table_set_long@@Base>
   140b0:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   140b4:	add	r2, sp, #8
   140b8:	ldr	r1, [pc, #612]	; 14324 <table_cell_from_buffer@@Base+0x578>
   140bc:	mov	r0, r4
   140c0:	bl	11be8 <__isoc99_sscanf@plt>
   140c4:	cmp	r0, #1
   140c8:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   140cc:	mov	r2, r5
   140d0:	mov	r1, r7
   140d4:	ldr	r3, [sp, #8]
   140d8:	mov	r0, r6
   140dc:	bl	138dc <table_set_ulong@@Base>
   140e0:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   140e4:	add	r2, sp, #8
   140e8:	ldr	r1, [pc, #552]	; 14318 <table_cell_from_buffer@@Base+0x56c>
   140ec:	mov	r0, r4
   140f0:	bl	11be8 <__isoc99_sscanf@plt>
   140f4:	cmp	r0, #1
   140f8:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   140fc:	ldrd	r2, [sp, #8]
   14100:	mov	r1, r7
   14104:	mov	r0, r6
   14108:	strd	r2, [sp]
   1410c:	mov	r2, r5
   14110:	bl	138fc <table_set_llong@@Base>
   14114:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   14118:	add	r2, sp, #8
   1411c:	ldr	r1, [pc, #504]	; 1431c <table_cell_from_buffer@@Base+0x570>
   14120:	mov	r0, r4
   14124:	bl	11be8 <__isoc99_sscanf@plt>
   14128:	cmp	r0, #1
   1412c:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   14130:	ldrd	r2, [sp, #8]
   14134:	mov	r1, r7
   14138:	mov	r0, r6
   1413c:	strd	r2, [sp]
   14140:	mov	r2, r5
   14144:	bl	13918 <table_set_ullong@@Base>
   14148:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   1414c:	add	r2, sp, #8
   14150:	ldr	r1, [pc, #464]	; 14328 <table_cell_from_buffer@@Base+0x57c>
   14154:	mov	r0, r4
   14158:	bl	11be8 <__isoc99_sscanf@plt>
   1415c:	cmp	r0, #1
   14160:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   14164:	add	r3, sp, #8
   14168:	mov	r2, r5
   1416c:	mov	r1, r7
   14170:	mov	r0, r6
   14174:	bl	13994 <table_set_string@@Base>
   14178:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   1417c:	add	r2, sp, #8
   14180:	ldr	r1, [pc, #420]	; 1432c <table_cell_from_buffer@@Base+0x580>
   14184:	mov	r0, r4
   14188:	bl	11be8 <__isoc99_sscanf@plt>
   1418c:	cmp	r0, #1
   14190:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   14194:	mov	r2, r5
   14198:	mov	r1, r7
   1419c:	vldr	s0, [sp, #8]
   141a0:	mov	r0, r6
   141a4:	bl	13934 <table_set_float@@Base>
   141a8:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   141ac:	add	r2, sp, #8
   141b0:	ldr	r1, [pc, #376]	; 14330 <table_cell_from_buffer@@Base+0x584>
   141b4:	mov	r0, r4
   141b8:	bl	11be8 <__isoc99_sscanf@plt>
   141bc:	cmp	r0, #1
   141c0:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   141c4:	mov	r2, r5
   141c8:	mov	r1, r7
   141cc:	vldr	d0, [sp, #8]
   141d0:	mov	r0, r6
   141d4:	bl	13954 <table_set_double@@Base>
   141d8:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   141dc:	add	r2, sp, #8
   141e0:	ldr	r1, [pc, #332]	; 14334 <table_cell_from_buffer@@Base+0x588>
   141e4:	mov	r0, r4
   141e8:	bl	11be8 <__isoc99_sscanf@plt>
   141ec:	cmp	r0, #1
   141f0:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   141f4:	mov	r2, r5
   141f8:	mov	r1, r7
   141fc:	vldr	d0, [sp, #8]
   14200:	mov	r0, r6
   14204:	bl	13974 <table_set_ldouble@@Base>
   14208:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   1420c:	add	r2, sp, #8
   14210:	ldr	r1, [pc, #232]	; 14300 <table_cell_from_buffer@@Base+0x554>
   14214:	mov	r0, r4
   14218:	bl	11be8 <__isoc99_sscanf@plt>
   1421c:	cmp	r0, #1
   14220:	mov	r3, r0
   14224:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   14228:	ldr	r4, [sp, #8]
   1422c:	cmp	r4, #0
   14230:	beq	14248 <table_cell_from_buffer@@Base+0x49c>
   14234:	mov	r2, r5
   14238:	mov	r1, r7
   1423c:	mov	r0, r6
   14240:	bl	13724 <table_set_bool@@Base>
   14244:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   14248:	mov	r3, r4
   1424c:	mov	r2, r5
   14250:	mov	r1, r7
   14254:	mov	r0, r6
   14258:	bl	13724 <table_set_bool@@Base>
   1425c:	mov	r0, r4
   14260:	add	sp, sp, #268	; 0x10c
   14264:	pop	{r4, r5, r6, r7, pc}
   14268:	add	r2, sp, #8
   1426c:	ldr	r1, [pc, #196]	; 14338 <table_cell_from_buffer@@Base+0x58c>
   14270:	mov	r0, r4
   14274:	bl	11be8 <__isoc99_sscanf@plt>
   14278:	cmp	r0, #1
   1427c:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   14280:	ldrb	r3, [sp, #8]
   14284:	mov	r2, r5
   14288:	mov	r1, r7
   1428c:	mov	r0, r6
   14290:	bl	139ac <table_set_char@@Base>
   14294:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   14298:	add	r2, sp, #8
   1429c:	ldr	r1, [pc, #148]	; 14338 <table_cell_from_buffer@@Base+0x58c>
   142a0:	mov	r0, r4
   142a4:	bl	11be8 <__isoc99_sscanf@plt>
   142a8:	cmp	r0, #1
   142ac:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   142b0:	ldrb	r3, [sp, #8]
   142b4:	mov	r2, r5
   142b8:	mov	r1, r7
   142bc:	mov	r0, r6
   142c0:	bl	139cc <table_set_uchar@@Base>
   142c4:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   142c8:	add	r2, sp, #8
   142cc:	ldr	r1, [pc, #104]	; 1433c <table_cell_from_buffer@@Base+0x590>
   142d0:	mov	r0, r4
   142d4:	bl	11be8 <__isoc99_sscanf@plt>
   142d8:	cmp	r0, #1
   142dc:	bne	142f8 <table_cell_from_buffer@@Base+0x54c>
   142e0:	mov	r2, r5
   142e4:	mov	r1, r7
   142e8:	ldr	r3, [sp, #8]
   142ec:	mov	r0, r6
   142f0:	bl	139ec <table_set_ptr@@Base>
   142f4:	b	13e64 <table_cell_from_buffer@@Base+0xb8>
   142f8:	mvn	r4, #0
   142fc:	b	1425c <table_cell_from_buffer@@Base+0x4b0>
   14300:	andeq	r4, r1, r4, asr r5
   14304:	andeq	r4, r1, r7, asr r5
   14308:	andeq	r4, r1, r8, lsl #11
   1430c:	andeq	r4, r1, sp, lsl #11
   14310:	andeq	r4, r1, r4, ror #10
   14314:	andeq	r4, r1, r8, ror #10
   14318:	andeq	r4, r1, sl, asr r5
   1431c:	andeq	r4, r1, pc, asr r5
   14320:	andeq	r4, r1, ip, ror #10
   14324:	andeq	r4, r1, r0, ror r5
   14328:	andeq	r4, r1, r4, ror r5
   1432c:	andeq	r4, r1, r7, ror r5
   14330:	andeq	r4, r1, sl, ror r5
   14334:	andeq	r4, r1, lr, ror r5
   14338:	andeq	r4, r1, r2, lsl #11
   1433c:	andeq	r4, r1, r5, lsl #11

00014340 <table_get_cell_ptr@@Base>:
   14340:	push	{r4, lr}
   14344:	mov	r4, r2
   14348:	bl	13428 <table_get_row_ptr@@Base>
   1434c:	ldr	r0, [r0]
   14350:	add	r0, r0, r4, lsl #2
   14354:	pop	{r4, pc}

00014358 <table_cell_init@@Base>:
   14358:	push	{r4, lr}
   1435c:	bl	14340 <table_get_cell_ptr@@Base>
   14360:	mov	r3, #0
   14364:	str	r3, [r0]
   14368:	pop	{r4, pc}

0001436c <table_cell_destroy@@Base>:
   1436c:	push	{r4, r5, r6, lr}
   14370:	mov	r6, r1
   14374:	mov	r1, r2
   14378:	mov	r5, r0
   1437c:	mov	r4, r2
   14380:	bl	127c8 <table_get_column_data_type@@Base>
   14384:	cmp	r0, #23
   14388:	popeq	{r4, r5, r6, pc}
   1438c:	mov	r2, r4
   14390:	mov	r1, r6
   14394:	mov	r0, r5
   14398:	bl	14340 <table_get_cell_ptr@@Base>
   1439c:	ldr	r0, [r0]
   143a0:	cmp	r0, #0
   143a4:	popeq	{r4, r5, r6, pc}
   143a8:	pop	{r4, r5, r6, lr}
   143ac:	b	11b70 <free@plt>

000143b0 <table_cell_nullify@@Base>:
   143b0:	push	{r4, lr}
   143b4:	bl	14340 <table_get_cell_ptr@@Base>
   143b8:	mov	r4, r0
   143bc:	ldr	r0, [r0]
   143c0:	cmp	r0, #0
   143c4:	beq	143d4 <table_cell_nullify@@Base+0x24>
   143c8:	bl	11b70 <free@plt>
   143cc:	mov	r3, #0
   143d0:	str	r3, [r4]
   143d4:	mov	r0, #0
   143d8:	pop	{r4, pc}

000143dc <__libc_csu_init@@Base>:
   143dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   143e0:	mov	r7, r0
   143e4:	ldr	r6, [pc, #72]	; 14434 <__libc_csu_init@@Base+0x58>
   143e8:	ldr	r5, [pc, #72]	; 14438 <__libc_csu_init@@Base+0x5c>
   143ec:	add	r6, pc, r6
   143f0:	add	r5, pc, r5
   143f4:	sub	r6, r6, r5
   143f8:	mov	r8, r1
   143fc:	mov	r9, r2
   14400:	bl	11b38 <strcmp@plt-0x20>
   14404:	asrs	r6, r6, #2
   14408:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1440c:	mov	r4, #0
   14410:	add	r4, r4, #1
   14414:	ldr	r3, [r5], #4
   14418:	mov	r2, r9
   1441c:	mov	r1, r8
   14420:	mov	r0, r7
   14424:	blx	r3
   14428:	cmp	r6, r4
   1442c:	bne	14410 <__libc_csu_init@@Base+0x34>
   14430:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14434:	andeq	r0, r1, r0, lsr #22
   14438:	andeq	r0, r1, r8, lsl fp

0001443c <__libc_csu_fini@@Base>:
   1443c:	bx	lr

Disassembly of section .fini:

00014440 <.fini>:
   14440:	push	{r3, lr}
   14444:	pop	{r3, pc}
