
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010a80 <.init>:
   10a80:	push	{r3, lr}
   10a84:	bl	10c10 <_start@@Base+0x3c>
   10a88:	pop	{r3, pc}

Disassembly of section .plt:

00010a8c <calloc@plt-0x14>:
   10a8c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a90:	ldr	lr, [pc, #4]	; 10a9c <calloc@plt-0x4>
   10a94:	add	lr, pc, lr
   10a98:	ldr	pc, [lr, #8]!
   10a9c:	andeq	r3, r1, r4, ror #10

00010aa0 <calloc@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #77824	; 0x13000
   10aa8:	ldr	pc, [ip, #1380]!	; 0x564

00010aac <printf@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #77824	; 0x13000
   10ab4:	ldr	pc, [ip, #1372]!	; 0x55c

00010ab8 <free@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #77824	; 0x13000
   10ac0:	ldr	pc, [ip, #1364]!	; 0x554

00010ac4 <realloc@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #77824	; 0x13000
   10acc:	ldr	pc, [ip, #1356]!	; 0x54c

00010ad0 <puts@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #77824	; 0x13000
   10ad8:	ldr	pc, [ip, #1348]!	; 0x544

00010adc <malloc@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #77824	; 0x13000
   10ae4:	ldr	pc, [ip, #1340]!	; 0x53c

00010ae8 <__libc_start_main@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #77824	; 0x13000
   10af0:	ldr	pc, [ip, #1332]!	; 0x534

00010af4 <__gmon_start__@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #77824	; 0x13000
   10afc:	ldr	pc, [ip, #1324]!	; 0x52c

00010b00 <setvbuf@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #77824	; 0x13000
   10b08:	ldr	pc, [ip, #1316]!	; 0x524

00010b0c <putchar@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #77824	; 0x13000
   10b14:	ldr	pc, [ip, #1308]!	; 0x51c

00010b18 <abort@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #77824	; 0x13000
   10b20:	ldr	pc, [ip, #1300]!	; 0x514

Disassembly of section .text:

00010b24 <main@@Base>:
   10b24:	mov	r3, #0
   10b28:	movw	r1, #16460	; 0x404c
   10b2c:	movt	r1, #2
   10b30:	mov	r2, #2
   10b34:	str	r4, [sp, #-8]!
   10b38:	ldr	r0, [r1]
   10b3c:	mov	r1, r3
   10b40:	str	lr, [sp, #4]
   10b44:	bl	10b00 <setvbuf@plt>
   10b48:	mov	r3, #0
   10b4c:	movw	r1, #16456	; 0x4048
   10b50:	movt	r1, #2
   10b54:	mov	r2, #2
   10b58:	ldr	r0, [r1]
   10b5c:	mov	r1, r3
   10b60:	bl	10b00 <setvbuf@plt>
   10b64:	bl	110e8 <teste_grafo_novo@@Base>
   10b68:	mov	r4, r0
   10b6c:	bl	111e8 <teste_grafo_aresta@@Base>
   10b70:	add	r4, r4, r0
   10b74:	bl	1139c <teste_grafo_adiciona@@Base>
   10b78:	add	r4, r4, r0
   10b7c:	bl	115b8 <teste_grafo_remove@@Base>
   10b80:	add	r4, r4, r0
   10b84:	bl	11774 <teste_v_sucessores@@Base>
   10b88:	add	r4, r4, r0
   10b8c:	bl	119c0 <teste_v_antecessores@@Base>
   10b90:	add	r4, r4, r0
   10b94:	bl	11c08 <teste_v_grau@@Base>
   10b98:	add	r4, r4, r0
   10b9c:	bl	11d94 <teste_v_celebridade@@Base>
   10ba0:	adds	r1, r4, r0
   10ba4:	bne	10bc4 <main@@Base+0xa0>
   10ba8:	movw	r0, #12436	; 0x3094
   10bac:	movt	r0, #1
   10bb0:	bl	10ad0 <puts@plt>
   10bb4:	ldr	r4, [sp]
   10bb8:	add	sp, sp, #4
   10bbc:	mov	r0, #0
   10bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   10bc4:	movw	r0, #12460	; 0x30ac
   10bc8:	movt	r0, #1
   10bcc:	bl	10aac <printf@plt>
   10bd0:	b	10bb4 <main@@Base+0x90>

00010bd4 <_start@@Base>:
   10bd4:	mov	fp, #0
   10bd8:	mov	lr, #0
   10bdc:	pop	{r1}		; (ldr r1, [sp], #4)
   10be0:	mov	r2, sp
   10be4:	push	{r2}		; (str r2, [sp, #-4]!)
   10be8:	push	{r0}		; (str r0, [sp, #-4]!)
   10bec:	ldr	ip, [pc, #16]	; 10c04 <_start@@Base+0x30>
   10bf0:	push	{ip}		; (str ip, [sp, #-4]!)
   10bf4:	ldr	r0, [pc, #12]	; 10c08 <_start@@Base+0x34>
   10bf8:	ldr	r3, [pc, #12]	; 10c0c <_start@@Base+0x38>
   10bfc:	bl	10ae8 <__libc_start_main@plt>
   10c00:	bl	10b18 <abort@plt>
   10c04:			; <UNDEFINED> instruction: 0x000129b0
   10c08:	andeq	r0, r1, r4, lsr #22
   10c0c:	andeq	r2, r1, r0, asr r9
   10c10:	ldr	r3, [pc, #20]	; 10c2c <_start@@Base+0x58>
   10c14:	ldr	r2, [pc, #20]	; 10c30 <_start@@Base+0x5c>
   10c18:	add	r3, pc, r3
   10c1c:	ldr	r2, [r3, r2]
   10c20:	cmp	r2, #0
   10c24:	bxeq	lr
   10c28:	b	10af4 <__gmon_start__@plt>
   10c2c:	andeq	r3, r1, r0, ror #7
   10c30:	andeq	r0, r0, r8, lsr r0
   10c34:	ldr	r0, [pc, #24]	; 10c54 <_start@@Base+0x80>
   10c38:	ldr	r3, [pc, #24]	; 10c58 <_start@@Base+0x84>
   10c3c:	cmp	r3, r0
   10c40:	bxeq	lr
   10c44:	ldr	r3, [pc, #16]	; 10c5c <_start@@Base+0x88>
   10c48:	cmp	r3, #0
   10c4c:	bxeq	lr
   10c50:	bx	r3
   10c54:	andeq	r4, r2, r4, asr #32
   10c58:	andeq	r4, r2, r4, asr #32
   10c5c:	andeq	r0, r0, r0
   10c60:	ldr	r0, [pc, #36]	; 10c8c <_start@@Base+0xb8>
   10c64:	ldr	r1, [pc, #36]	; 10c90 <_start@@Base+0xbc>
   10c68:	sub	r1, r1, r0
   10c6c:	asr	r1, r1, #2
   10c70:	add	r1, r1, r1, lsr #31
   10c74:	asrs	r1, r1, #1
   10c78:	bxeq	lr
   10c7c:	ldr	r3, [pc, #16]	; 10c94 <_start@@Base+0xc0>
   10c80:	cmp	r3, #0
   10c84:	bxeq	lr
   10c88:	bx	r3
   10c8c:	andeq	r4, r2, r4, asr #32
   10c90:	andeq	r4, r2, r4, asr #32
   10c94:	andeq	r0, r0, r0
   10c98:	push	{r4, lr}
   10c9c:	ldr	r4, [pc, #24]	; 10cbc <_start@@Base+0xe8>
   10ca0:	ldrb	r3, [r4]
   10ca4:	cmp	r3, #0
   10ca8:	popne	{r4, pc}
   10cac:	bl	10c34 <_start@@Base+0x60>
   10cb0:	mov	r3, #1
   10cb4:	strb	r3, [r4]
   10cb8:	pop	{r4, pc}
   10cbc:	andeq	r4, r2, r0, asr r0
   10cc0:	b	10c60 <_start@@Base+0x8c>
   10cc4:	push	{r1, r2, r3}
   10cc8:	mov	r0, #8
   10ccc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10cd0:	mov	r5, #2
   10cd4:	strd	r6, [sp, #8]
   10cd8:	str	r8, [sp, #16]
   10cdc:	str	lr, [sp, #20]
   10ce0:	sub	sp, sp, #12
   10ce4:	bl	10adc <malloc@plt>
   10ce8:	add	r3, sp, #40	; 0x28
   10cec:	mov	r6, r0
   10cf0:	mov	r1, #8
   10cf4:	mov	r0, #9
   10cf8:	str	r3, [sp, #4]
   10cfc:	bl	10aa0 <calloc@plt>
   10d00:	mov	r7, r0
   10d04:	str	r0, [r6, #4]
   10d08:	ldr	r3, [sp, #4]
   10d0c:	mov	r1, #8
   10d10:	mov	r0, #1
   10d14:	ldr	r8, [r3, #4]
   10d18:	ldr	r4, [r3], #8
   10d1c:	str	r3, [sp, #4]
   10d20:	bl	10aa0 <calloc@plt>
   10d24:	add	r2, r7, r4, lsl #3
   10d28:	ldr	r3, [r7, r4, lsl #3]
   10d2c:	cmp	r5, #1
   10d30:	mov	r5, #1
   10d34:	str	r8, [r0]
   10d38:	ldr	r1, [r2, #4]
   10d3c:	str	r0, [r2, #4]
   10d40:	add	r3, r3, r5
   10d44:	str	r3, [r7, r4, lsl #3]
   10d48:	str	r1, [r0, #4]
   10d4c:	bne	10d08 <_start@@Base+0x134>
   10d50:	mov	r3, #9
   10d54:	mov	r0, r6
   10d58:	str	r3, [r6]
   10d5c:	add	sp, sp, #12
   10d60:	ldrd	r4, [sp]
   10d64:	ldrd	r6, [sp, #8]
   10d68:	ldr	r8, [sp, #16]
   10d6c:	ldr	lr, [sp, #20]
   10d70:	add	sp, sp, #24
   10d74:	add	sp, sp, #12
   10d78:	bx	lr
   10d7c:	push	{r1, r2, r3}
   10d80:	mov	r0, #8
   10d84:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10d88:	mov	r5, #3
   10d8c:	strd	r6, [sp, #8]
   10d90:	str	r8, [sp, #16]
   10d94:	str	lr, [sp, #20]
   10d98:	sub	sp, sp, #12
   10d9c:	bl	10adc <malloc@plt>
   10da0:	add	r3, sp, #40	; 0x28
   10da4:	mov	r6, r0
   10da8:	mov	r1, #8
   10dac:	mov	r0, #9
   10db0:	str	r3, [sp, #4]
   10db4:	bl	10aa0 <calloc@plt>
   10db8:	mov	r7, r0
   10dbc:	str	r0, [r6, #4]
   10dc0:	ldr	r3, [sp, #4]
   10dc4:	mov	r1, #8
   10dc8:	mov	r0, #1
   10dcc:	ldr	r8, [r3, #4]
   10dd0:	ldr	r4, [r3], #8
   10dd4:	str	r3, [sp, #4]
   10dd8:	bl	10aa0 <calloc@plt>
   10ddc:	add	r2, r7, r4, lsl #3
   10de0:	ldr	r3, [r7, r4, lsl #3]
   10de4:	subs	r5, r5, #1
   10de8:	str	r8, [r0]
   10dec:	ldr	r1, [r2, #4]
   10df0:	str	r0, [r2, #4]
   10df4:	add	r3, r3, #1
   10df8:	str	r3, [r7, r4, lsl #3]
   10dfc:	str	r1, [r0, #4]
   10e00:	bne	10dc0 <_start@@Base+0x1ec>
   10e04:	mov	r3, #9
   10e08:	mov	r0, r6
   10e0c:	str	r3, [r6]
   10e10:	add	sp, sp, #12
   10e14:	ldrd	r4, [sp]
   10e18:	ldrd	r6, [sp, #8]
   10e1c:	ldr	r8, [sp, #16]
   10e20:	ldr	lr, [sp, #20]
   10e24:	add	sp, sp, #24
   10e28:	add	sp, sp, #12
   10e2c:	bx	lr
   10e30:	push	{r1, r2, r3}
   10e34:	mov	r0, #8
   10e38:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10e3c:	mov	r5, #11
   10e40:	strd	r6, [sp, #8]
   10e44:	str	r8, [sp, #16]
   10e48:	str	lr, [sp, #20]
   10e4c:	sub	sp, sp, #12
   10e50:	bl	10adc <malloc@plt>
   10e54:	add	r3, sp, #40	; 0x28
   10e58:	mov	r1, #8
   10e5c:	mov	r6, r0
   10e60:	mov	r0, r1
   10e64:	str	r3, [sp, #4]
   10e68:	bl	10aa0 <calloc@plt>
   10e6c:	mov	r7, r0
   10e70:	str	r0, [r6, #4]
   10e74:	ldr	r3, [sp, #4]
   10e78:	mov	r1, #8
   10e7c:	mov	r0, #1
   10e80:	ldr	r8, [r3, #4]
   10e84:	ldr	r4, [r3], #8
   10e88:	str	r3, [sp, #4]
   10e8c:	bl	10aa0 <calloc@plt>
   10e90:	add	r2, r7, r4, lsl #3
   10e94:	ldr	r3, [r7, r4, lsl #3]
   10e98:	subs	r5, r5, #1
   10e9c:	str	r8, [r0]
   10ea0:	ldr	r1, [r2, #4]
   10ea4:	str	r0, [r2, #4]
   10ea8:	add	r3, r3, #1
   10eac:	str	r3, [r7, r4, lsl #3]
   10eb0:	str	r1, [r0, #4]
   10eb4:	bne	10e74 <_start@@Base+0x2a0>
   10eb8:	mov	r3, #8
   10ebc:	mov	r0, r6
   10ec0:	str	r3, [r6]
   10ec4:	add	sp, sp, #12
   10ec8:	ldrd	r4, [sp]
   10ecc:	ldrd	r6, [sp, #8]
   10ed0:	ldr	r8, [sp, #16]
   10ed4:	ldr	lr, [sp, #20]
   10ed8:	add	sp, sp, #24
   10edc:	add	sp, sp, #12
   10ee0:	bx	lr
   10ee4:	push	{r1, r2, r3}
   10ee8:	mov	r0, #8
   10eec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10ef0:	mov	r5, #15
   10ef4:	strd	r6, [sp, #8]
   10ef8:	str	r8, [sp, #16]
   10efc:	str	lr, [sp, #20]
   10f00:	sub	sp, sp, #12
   10f04:	bl	10adc <malloc@plt>
   10f08:	add	r3, sp, #40	; 0x28
   10f0c:	mov	r1, #8
   10f10:	mov	r6, r0
   10f14:	mov	r0, r1
   10f18:	str	r3, [sp, #4]
   10f1c:	bl	10aa0 <calloc@plt>
   10f20:	mov	r7, r0
   10f24:	str	r0, [r6, #4]
   10f28:	ldr	r3, [sp, #4]
   10f2c:	mov	r1, #8
   10f30:	mov	r0, #1
   10f34:	ldr	r8, [r3, #4]
   10f38:	ldr	r4, [r3], #8
   10f3c:	str	r3, [sp, #4]
   10f40:	bl	10aa0 <calloc@plt>
   10f44:	add	r2, r7, r4, lsl #3
   10f48:	ldr	r3, [r7, r4, lsl #3]
   10f4c:	subs	r5, r5, #1
   10f50:	str	r8, [r0]
   10f54:	ldr	r1, [r2, #4]
   10f58:	str	r0, [r2, #4]
   10f5c:	add	r3, r3, #1
   10f60:	str	r3, [r7, r4, lsl #3]
   10f64:	str	r1, [r0, #4]
   10f68:	bne	10f28 <_start@@Base+0x354>
   10f6c:	mov	r3, #8
   10f70:	mov	r0, r6
   10f74:	str	r3, [r6]
   10f78:	add	sp, sp, #12
   10f7c:	ldrd	r4, [sp]
   10f80:	ldrd	r6, [sp, #8]
   10f84:	ldr	r8, [sp, #16]
   10f88:	ldr	lr, [sp, #20]
   10f8c:	add	sp, sp, #24
   10f90:	add	sp, sp, #12
   10f94:	bx	lr

00010f98 <_g@@Base>:
   10f98:	push	{r1, r2, r3}
   10f9c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10fa0:	strd	r6, [sp, #8]
   10fa4:	mov	r7, r0
   10fa8:	mov	r0, #8
   10fac:	strd	r8, [sp, #16]
   10fb0:	str	sl, [sp, #24]
   10fb4:	str	lr, [sp, #28]
   10fb8:	sub	sp, sp, #12
   10fbc:	ldr	r5, [sp, #44]	; 0x2c
   10fc0:	bl	10adc <malloc@plt>
   10fc4:	add	r3, sp, #48	; 0x30
   10fc8:	mov	r6, r0
   10fcc:	mov	r1, #8
   10fd0:	mov	r0, r7
   10fd4:	str	r3, [sp, #4]
   10fd8:	bl	10aa0 <calloc@plt>
   10fdc:	cmp	r5, #0
   10fe0:	str	r0, [r6, #4]
   10fe4:	ble	11044 <_g@@Base+0xac>
   10fe8:	sub	r5, r5, #1
   10fec:	mov	r8, r0
   10ff0:	bic	r5, r5, #1
   10ff4:	mov	r9, #0
   10ff8:	add	r5, r5, #2
   10ffc:	ldr	r3, [sp, #4]
   11000:	mov	r1, #8
   11004:	mov	r0, #1
   11008:	add	r9, r9, #2
   1100c:	ldr	sl, [r3, #4]
   11010:	ldr	r4, [r3], #8
   11014:	str	r3, [sp, #4]
   11018:	bl	10aa0 <calloc@plt>
   1101c:	add	r2, r8, r4, lsl #3
   11020:	ldr	r3, [r8, r4, lsl #3]
   11024:	cmp	r9, r5
   11028:	str	sl, [r0]
   1102c:	ldr	r1, [r2, #4]
   11030:	str	r0, [r2, #4]
   11034:	add	r3, r3, #1
   11038:	str	r3, [r8, r4, lsl #3]
   1103c:	str	r1, [r0, #4]
   11040:	bne	10ffc <_g@@Base+0x64>
   11044:	mov	r0, r6
   11048:	str	r7, [r6]
   1104c:	add	sp, sp, #12
   11050:	ldrd	r4, [sp]
   11054:	ldrd	r6, [sp, #8]
   11058:	ldrd	r8, [sp, #16]
   1105c:	ldr	sl, [sp, #24]
   11060:	ldr	lr, [sp, #28]
   11064:	add	sp, sp, #32
   11068:	add	sp, sp, #12
   1106c:	bx	lr

00011070 <_f@@Base>:
   11070:	strd	r4, [sp, #-16]!
   11074:	subs	r5, r0, #0
   11078:	str	r6, [sp, #8]
   1107c:	str	lr, [sp, #12]
   11080:	beq	110d4 <_f@@Base+0x64>
   11084:	ldr	r3, [r5]
   11088:	cmp	r3, #0
   1108c:	ble	110d4 <_f@@Base+0x64>
   11090:	mov	r6, r1
   11094:	mov	r4, #0
   11098:	b	110a8 <_f@@Base+0x38>
   1109c:	ldr	r3, [r5]
   110a0:	cmp	r4, r3
   110a4:	bge	110d4 <_f@@Base+0x64>
   110a8:	mov	r1, r4
   110ac:	mov	r0, r5
   110b0:	bl	1264c <vetor_elemento@@Base>
   110b4:	cmp	r6, r0
   110b8:	add	r4, r4, #1
   110bc:	bne	1109c <_f@@Base+0x2c>
   110c0:	ldrd	r4, [sp]
   110c4:	mov	r0, #1
   110c8:	ldr	r6, [sp, #8]
   110cc:	add	sp, sp, #12
   110d0:	pop	{pc}		; (ldr pc, [sp], #4)
   110d4:	ldrd	r4, [sp]
   110d8:	mov	r0, #0
   110dc:	ldr	r6, [sp, #8]
   110e0:	add	sp, sp, #12
   110e4:	pop	{pc}		; (ldr pc, [sp], #4)

000110e8 <teste_grafo_novo@@Base>:
   110e8:	movw	r0, #10688	; 0x29c0
   110ec:	movt	r0, #1
   110f0:	strd	r4, [sp, #-16]!
   110f4:	str	r6, [sp, #8]
   110f8:	str	lr, [sp, #12]
   110fc:	bl	10aac <printf@plt>
   11100:	mov	r0, #10
   11104:	bl	11f30 <grafo_novo@@Base>
   11108:	subs	r5, r0, #0
   1110c:	beq	111b0 <teste_grafo_novo@@Base+0xc8>
   11110:	ldr	r3, [r5]
   11114:	cmp	r3, #10
   11118:	moveq	r6, #1
   1111c:	moveq	r4, #0
   11120:	bne	11174 <teste_grafo_novo@@Base+0x8c>
   11124:	mov	r0, r5
   11128:	bl	11f9c <grafo_apaga@@Base>
   1112c:	mov	r0, #1
   11130:	bl	11f30 <grafo_novo@@Base>
   11134:	subs	r5, r0, #0
   11138:	beq	111cc <teste_grafo_novo@@Base+0xe4>
   1113c:	ldr	r3, [r5]
   11140:	cmp	r3, #1
   11144:	bne	1118c <teste_grafo_novo@@Base+0xa4>
   11148:	bl	11f9c <grafo_apaga@@Base>
   1114c:	cmp	r4, #0
   11150:	bne	111a4 <teste_grafo_novo@@Base+0xbc>
   11154:	movw	r0, #10800	; 0x2a30
   11158:	movt	r0, #1
   1115c:	bl	10ad0 <puts@plt>
   11160:	mov	r0, r4
   11164:	ldrd	r4, [sp]
   11168:	ldr	r6, [sp, #8]
   1116c:	add	sp, sp, #12
   11170:	pop	{pc}		; (ldr pc, [sp], #4)
   11174:	movw	r0, #10728	; 0x29e8
   11178:	movt	r0, #1
   1117c:	bl	10aac <printf@plt>
   11180:	mov	r6, #2
   11184:	mov	r4, #1
   11188:	b	11124 <teste_grafo_novo@@Base+0x3c>
   1118c:	movw	r0, #10764	; 0x2a0c
   11190:	movt	r0, #1
   11194:	bl	10aac <printf@plt>
   11198:	mov	r0, r5
   1119c:	mov	r4, r6
   111a0:	bl	11f9c <grafo_apaga@@Base>
   111a4:	mov	r0, #10
   111a8:	bl	10b0c <putchar@plt>
   111ac:	b	11160 <teste_grafo_novo@@Base+0x78>
   111b0:	movw	r0, #10704	; 0x29d0
   111b4:	movt	r0, #1
   111b8:	bl	10aac <printf@plt>
   111bc:	mov	r0, #10
   111c0:	mov	r4, #1
   111c4:	bl	10b0c <putchar@plt>
   111c8:	b	11160 <teste_grafo_novo@@Base+0x78>
   111cc:	movw	r0, #10704	; 0x29d0
   111d0:	movt	r0, #1
   111d4:	bl	10aac <printf@plt>
   111d8:	mov	r0, #10
   111dc:	mov	r4, r6
   111e0:	bl	10b0c <putchar@plt>
   111e4:	b	11160 <teste_grafo_novo@@Base+0x78>

000111e8 <teste_grafo_aresta@@Base>:
   111e8:	mov	r0, #7
   111ec:	strd	r4, [sp, #-28]!	; 0xffffffe4
   111f0:	mov	r5, #4
   111f4:	mov	r4, #0
   111f8:	strd	r6, [sp, #8]
   111fc:	mov	ip, #6
   11200:	strd	r8, [sp, #16]
   11204:	mov	r9, #5
   11208:	mov	r8, #2
   1120c:	str	lr, [sp, #24]
   11210:	sub	sp, sp, #84	; 0x54
   11214:	mov	lr, #3
   11218:	mov	r7, #1
   1121c:	mov	r2, lr
   11220:	mov	r1, #22
   11224:	mov	r3, r8
   11228:	stm	sp, {r0, r8}
   1122c:	str	r4, [sp, #8]
   11230:	str	r8, [sp, #12]
   11234:	str	r0, [sp, #16]
   11238:	str	r9, [sp, #20]
   1123c:	str	r9, [sp, #24]
   11240:	str	r5, [sp, #28]
   11244:	str	r5, [sp, #32]
   11248:	strd	r4, [sp, #36]	; 0x24
   1124c:	str	r0, [sp, #56]	; 0x38
   11250:	mov	r0, #8
   11254:	str	ip, [sp, #44]	; 0x2c
   11258:	str	r7, [sp, #48]	; 0x30
   1125c:	str	r7, [sp, #52]	; 0x34
   11260:	str	ip, [sp, #60]	; 0x3c
   11264:	str	ip, [sp, #64]	; 0x40
   11268:	str	lr, [sp, #68]	; 0x44
   1126c:	str	r4, [sp, #72]	; 0x48
   11270:	str	r7, [sp, #76]	; 0x4c
   11274:	bl	10e30 <_start@@Base+0x25c>
   11278:	mov	r6, r0
   1127c:	movw	r0, #10804	; 0x2a34
   11280:	movt	r0, #1
   11284:	bl	10aac <printf@plt>
   11288:	mov	r2, r5
   1128c:	mov	r1, r9
   11290:	mov	r0, r6
   11294:	bl	12020 <grafo_aresta@@Base>
   11298:	cmp	r0, r7
   1129c:	moveq	r5, r0
   112a0:	beq	112b8 <teste_grafo_aresta@@Base+0xd0>
   112a4:	movw	r0, #10824	; 0x2a48
   112a8:	movt	r0, #1
   112ac:	mov	r5, r8
   112b0:	mov	r4, r7
   112b4:	bl	10aac <printf@plt>
   112b8:	mov	r2, #6
   112bc:	mov	r1, #7
   112c0:	mov	r0, r6
   112c4:	bl	12020 <grafo_aresta@@Base>
   112c8:	cmp	r0, #1
   112cc:	beq	112e0 <teste_grafo_aresta@@Base+0xf8>
   112d0:	movw	r0, #10824	; 0x2a48
   112d4:	movt	r0, #1
   112d8:	mov	r4, r5
   112dc:	bl	10aac <printf@plt>
   112e0:	mov	r2, #1
   112e4:	mov	r1, #7
   112e8:	mov	r0, r6
   112ec:	bl	12020 <grafo_aresta@@Base>
   112f0:	cmp	r0, #0
   112f4:	bne	11344 <teste_grafo_aresta@@Base+0x15c>
   112f8:	mov	r2, #7
   112fc:	mov	r1, #2
   11300:	bl	12020 <grafo_aresta@@Base>
   11304:	cmn	r0, #1
   11308:	bne	1136c <teste_grafo_aresta@@Base+0x184>
   1130c:	mov	r0, r6
   11310:	bl	11f9c <grafo_apaga@@Base>
   11314:	cmp	r4, #0
   11318:	bne	11384 <teste_grafo_aresta@@Base+0x19c>
   1131c:	movw	r0, #10800	; 0x2a30
   11320:	movt	r0, #1
   11324:	bl	10ad0 <puts@plt>
   11328:	mov	r0, r4
   1132c:	add	sp, sp, #84	; 0x54
   11330:	ldrd	r4, [sp]
   11334:	ldrd	r6, [sp, #8]
   11338:	ldrd	r8, [sp, #16]
   1133c:	add	sp, sp, #24
   11340:	pop	{pc}		; (ldr pc, [sp], #4)
   11344:	movw	r0, #10880	; 0x2a80
   11348:	movt	r0, #1
   1134c:	bl	10aac <printf@plt>
   11350:	mov	r2, #7
   11354:	mov	r1, #2
   11358:	mov	r0, #0
   1135c:	add	r4, r4, #1
   11360:	bl	12020 <grafo_aresta@@Base>
   11364:	cmn	r0, #1
   11368:	beq	11390 <teste_grafo_aresta@@Base+0x1a8>
   1136c:	movw	r0, #10940	; 0x2abc
   11370:	movt	r0, #1
   11374:	bl	10aac <printf@plt>
   11378:	mov	r0, r6
   1137c:	add	r4, r4, #1
   11380:	bl	11f9c <grafo_apaga@@Base>
   11384:	mov	r0, #10
   11388:	bl	10b0c <putchar@plt>
   1138c:	b	11328 <teste_grafo_aresta@@Base+0x140>
   11390:	mov	r0, r6
   11394:	bl	11f9c <grafo_apaga@@Base>
   11398:	b	11384 <teste_grafo_aresta@@Base+0x19c>

0001139c <teste_grafo_adiciona@@Base>:
   1139c:	strd	r4, [sp, #-16]!
   113a0:	mov	r4, #7
   113a4:	mov	r2, #3
   113a8:	str	r6, [sp, #8]
   113ac:	mov	r6, #2
   113b0:	mov	r1, #4
   113b4:	str	lr, [sp, #12]
   113b8:	sub	sp, sp, #8
   113bc:	mov	r3, r6
   113c0:	mov	r0, #9
   113c4:	stm	sp, {r4, r6}
   113c8:	bl	10cc4 <_start@@Base+0xf0>
   113cc:	mov	r5, r0
   113d0:	movw	r0, #10996	; 0x2af4
   113d4:	movt	r0, #1
   113d8:	bl	10aac <printf@plt>
   113dc:	mov	r2, r4
   113e0:	mov	r1, r6
   113e4:	mov	r0, r5
   113e8:	bl	12088 <grafo_adiciona@@Base>
   113ec:	cmp	r0, #1
   113f0:	moveq	r4, r0
   113f4:	moveq	r2, #0
   113f8:	beq	11410 <teste_grafo_adiciona@@Base+0x74>
   113fc:	movw	r0, #11016	; 0x2b08
   11400:	movt	r0, #1
   11404:	bl	10aac <printf@plt>
   11408:	mov	r4, r6
   1140c:	mov	r2, #1
   11410:	ldr	r3, [r5, #4]
   11414:	ldr	r3, [r3, #20]
   11418:	cmp	r3, #0
   1141c:	beq	11430 <teste_grafo_adiciona@@Base+0x94>
   11420:	ldr	r3, [r3]
   11424:	cmp	r3, #7
   11428:	moveq	r4, r2
   1142c:	beq	1143c <teste_grafo_adiciona@@Base+0xa0>
   11430:	movw	r0, #11076	; 0x2b44
   11434:	movt	r0, #1
   11438:	bl	10aac <printf@plt>
   1143c:	mov	r2, #8
   11440:	mov	r1, #3
   11444:	mov	r0, r5
   11448:	bl	12088 <grafo_adiciona@@Base>
   1144c:	cmp	r0, #1
   11450:	beq	11464 <teste_grafo_adiciona@@Base+0xc8>
   11454:	movw	r0, #11016	; 0x2b08
   11458:	movt	r0, #1
   1145c:	add	r4, r4, #1
   11460:	bl	10aac <printf@plt>
   11464:	ldr	r3, [r5, #4]
   11468:	ldr	r3, [r3, #28]
   1146c:	cmp	r3, #0
   11470:	beq	1148c <teste_grafo_adiciona@@Base+0xf0>
   11474:	ldr	r2, [r3, #4]
   11478:	cmp	r2, #0
   1147c:	beq	1148c <teste_grafo_adiciona@@Base+0xf0>
   11480:	ldr	r1, [r2, #4]
   11484:	cmp	r1, #0
   11488:	beq	11578 <teste_grafo_adiciona@@Base+0x1dc>
   1148c:	movw	r0, #11124	; 0x2b74
   11490:	movt	r0, #1
   11494:	add	r4, r4, #1
   11498:	bl	10aac <printf@plt>
   1149c:	mov	r2, #7
   114a0:	mov	r1, #2
   114a4:	mov	r0, r5
   114a8:	bl	12088 <grafo_adiciona@@Base>
   114ac:	cmp	r0, #0
   114b0:	bne	11564 <teste_grafo_adiciona@@Base+0x1c8>
   114b4:	mov	r2, #7
   114b8:	mov	r1, #22
   114bc:	mov	r0, r5
   114c0:	bl	12088 <grafo_adiciona@@Base>
   114c4:	cmn	r0, #1
   114c8:	bne	11518 <teste_grafo_adiciona@@Base+0x17c>
   114cc:	mov	r2, #7
   114d0:	mov	r1, #2
   114d4:	mov	r0, #0
   114d8:	bl	12088 <grafo_adiciona@@Base>
   114dc:	cmn	r0, #1
   114e0:	bne	11540 <teste_grafo_adiciona@@Base+0x1a4>
   114e4:	mov	r0, r5
   114e8:	bl	11f9c <grafo_apaga@@Base>
   114ec:	cmp	r4, #0
   114f0:	bne	11558 <teste_grafo_adiciona@@Base+0x1bc>
   114f4:	movw	r0, #10800	; 0x2a30
   114f8:	movt	r0, #1
   114fc:	bl	10ad0 <puts@plt>
   11500:	mov	r0, r4
   11504:	add	sp, sp, #8
   11508:	ldrd	r4, [sp]
   1150c:	ldr	r6, [sp, #8]
   11510:	add	sp, sp, #12
   11514:	pop	{pc}		; (ldr pc, [sp], #4)
   11518:	movw	r0, #11240	; 0x2be8
   1151c:	movt	r0, #1
   11520:	bl	10aac <printf@plt>
   11524:	mov	r2, #7
   11528:	mov	r1, #2
   1152c:	mov	r0, #0
   11530:	add	r4, r4, #1
   11534:	bl	12088 <grafo_adiciona@@Base>
   11538:	cmn	r0, #1
   1153c:	beq	115ac <teste_grafo_adiciona@@Base+0x210>
   11540:	movw	r0, #11296	; 0x2c20
   11544:	movt	r0, #1
   11548:	bl	10aac <printf@plt>
   1154c:	mov	r0, r5
   11550:	add	r4, r4, #1
   11554:	bl	11f9c <grafo_apaga@@Base>
   11558:	mov	r0, #10
   1155c:	bl	10b0c <putchar@plt>
   11560:	b	11500 <teste_grafo_adiciona@@Base+0x164>
   11564:	movw	r0, #11184	; 0x2bb0
   11568:	movt	r0, #1
   1156c:	add	r4, r4, #1
   11570:	bl	10aac <printf@plt>
   11574:	b	114b4 <teste_grafo_adiciona@@Base+0x118>
   11578:	ldr	r3, [r3]
   1157c:	cmp	r3, #2
   11580:	beq	1159c <teste_grafo_adiciona@@Base+0x200>
   11584:	cmp	r3, #8
   11588:	bne	1148c <teste_grafo_adiciona@@Base+0xf0>
   1158c:	ldr	r3, [r2]
   11590:	cmp	r3, #2
   11594:	bne	1148c <teste_grafo_adiciona@@Base+0xf0>
   11598:	b	1149c <teste_grafo_adiciona@@Base+0x100>
   1159c:	ldr	r3, [r2]
   115a0:	cmp	r3, #8
   115a4:	bne	1148c <teste_grafo_adiciona@@Base+0xf0>
   115a8:	b	1149c <teste_grafo_adiciona@@Base+0x100>
   115ac:	mov	r0, r5
   115b0:	bl	11f9c <grafo_apaga@@Base>
   115b4:	b	11558 <teste_grafo_adiciona@@Base+0x1bc>

000115b8 <teste_grafo_remove@@Base>:
   115b8:	strd	r4, [sp, #-20]!	; 0xffffffec
   115bc:	mov	r5, #7
   115c0:	mov	r2, #3
   115c4:	strd	r6, [sp, #8]
   115c8:	mov	r6, #1
   115cc:	mov	r7, #2
   115d0:	str	lr, [sp, #16]
   115d4:	sub	sp, sp, #20
   115d8:	mov	r1, #6
   115dc:	mov	r3, r7
   115e0:	mov	r0, #9
   115e4:	stm	sp, {r5, r7}
   115e8:	str	r5, [sp, #8]
   115ec:	str	r6, [sp, #12]
   115f0:	bl	10d7c <_start@@Base+0x1a8>
   115f4:	mov	r4, r0
   115f8:	movw	r0, #11352	; 0x2c58
   115fc:	movt	r0, #1
   11600:	bl	10aac <printf@plt>
   11604:	mov	r2, r6
   11608:	mov	r1, r5
   1160c:	mov	r0, r4
   11610:	bl	12150 <grafo_remove@@Base>
   11614:	cmp	r0, r6
   11618:	moveq	r5, r0
   1161c:	moveq	r6, #0
   11620:	beq	11634 <teste_grafo_remove@@Base+0x7c>
   11624:	movw	r0, #11372	; 0x2c6c
   11628:	movt	r0, #1
   1162c:	mov	r5, r7
   11630:	bl	10aac <printf@plt>
   11634:	ldr	r3, [r4, #4]
   11638:	ldr	r3, [r3, #60]	; 0x3c
   1163c:	cmp	r3, #0
   11640:	beq	11650 <teste_grafo_remove@@Base+0x98>
   11644:	ldr	r2, [r3, #4]
   11648:	cmp	r2, #0
   1164c:	beq	11754 <teste_grafo_remove@@Base+0x19c>
   11650:	movw	r0, #11432	; 0x2ca8
   11654:	movt	r0, #1
   11658:	bl	10aac <printf@plt>
   1165c:	mov	r2, #2
   11660:	mov	r1, #7
   11664:	mov	r0, r4
   11668:	bl	12150 <grafo_remove@@Base>
   1166c:	cmp	r0, #1
   11670:	beq	11684 <teste_grafo_remove@@Base+0xcc>
   11674:	movw	r0, #11372	; 0x2c6c
   11678:	movt	r0, #1
   1167c:	add	r5, r5, #1
   11680:	bl	10aac <printf@plt>
   11684:	ldr	r3, [r4, #4]
   11688:	ldr	r3, [r3, #60]	; 0x3c
   1168c:	cmp	r3, #0
   11690:	beq	116a4 <teste_grafo_remove@@Base+0xec>
   11694:	movw	r0, #11432	; 0x2ca8
   11698:	movt	r0, #1
   1169c:	add	r5, r5, #1
   116a0:	bl	10aac <printf@plt>
   116a4:	mov	r2, #0
   116a8:	mov	r1, #4
   116ac:	mov	r0, r4
   116b0:	bl	12150 <grafo_remove@@Base>
   116b4:	cmp	r0, #0
   116b8:	bne	11708 <teste_grafo_remove@@Base+0x150>
   116bc:	mov	r2, #22
   116c0:	mov	r1, #7
   116c4:	mov	r0, r4
   116c8:	bl	12150 <grafo_remove@@Base>
   116cc:	cmn	r0, #1
   116d0:	bne	11730 <teste_grafo_remove@@Base+0x178>
   116d4:	mov	r0, r4
   116d8:	bl	11f9c <grafo_apaga@@Base>
   116dc:	cmp	r5, #0
   116e0:	bne	11748 <teste_grafo_remove@@Base+0x190>
   116e4:	movw	r0, #10800	; 0x2a30
   116e8:	movt	r0, #1
   116ec:	bl	10ad0 <puts@plt>
   116f0:	mov	r0, r5
   116f4:	add	sp, sp, #20
   116f8:	ldrd	r4, [sp]
   116fc:	ldrd	r6, [sp, #8]
   11700:	add	sp, sp, #16
   11704:	pop	{pc}		; (ldr pc, [sp], #4)
   11708:	movw	r0, #11492	; 0x2ce4
   1170c:	movt	r0, #1
   11710:	bl	10aac <printf@plt>
   11714:	mov	r2, #22
   11718:	mov	r1, #7
   1171c:	mov	r0, r4
   11720:	add	r5, r5, #1
   11724:	bl	12150 <grafo_remove@@Base>
   11728:	cmn	r0, #1
   1172c:	beq	11768 <teste_grafo_remove@@Base+0x1b0>
   11730:	movw	r0, #11552	; 0x2d20
   11734:	movt	r0, #1
   11738:	bl	10aac <printf@plt>
   1173c:	mov	r0, r4
   11740:	add	r5, r5, #1
   11744:	bl	11f9c <grafo_apaga@@Base>
   11748:	mov	r0, #10
   1174c:	bl	10b0c <putchar@plt>
   11750:	b	116f0 <teste_grafo_remove@@Base+0x138>
   11754:	ldr	r3, [r3]
   11758:	cmp	r3, #2
   1175c:	moveq	r5, r6
   11760:	bne	11650 <teste_grafo_remove@@Base+0x98>
   11764:	b	1165c <teste_grafo_remove@@Base+0xa4>
   11768:	mov	r0, r4
   1176c:	bl	11f9c <grafo_apaga@@Base>
   11770:	b	11748 <teste_grafo_remove@@Base+0x190>

00011774 <teste_v_sucessores@@Base>:
   11774:	mov	r0, #4
   11778:	mov	r1, #5
   1177c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11780:	mov	r4, #7
   11784:	mov	r5, #2
   11788:	strd	r6, [sp, #8]
   1178c:	mov	r7, #0
   11790:	str	r8, [sp, #16]
   11794:	mov	ip, #6
   11798:	str	lr, [sp, #20]
   1179c:	sub	sp, sp, #80	; 0x50
   117a0:	mov	lr, #3
   117a4:	mov	r6, #1
   117a8:	mov	r3, r5
   117ac:	mov	r2, lr
   117b0:	strd	r4, [sp]
   117b4:	str	r7, [sp, #8]
   117b8:	str	r5, [sp, #12]
   117bc:	str	r4, [sp, #16]
   117c0:	str	r1, [sp, #20]
   117c4:	str	r1, [sp, #24]
   117c8:	mov	r1, #22
   117cc:	str	r0, [sp, #28]
   117d0:	str	r0, [sp, #32]
   117d4:	str	r7, [sp, #36]	; 0x24
   117d8:	str	r0, [sp, #40]	; 0x28
   117dc:	mov	r0, #8
   117e0:	str	ip, [sp, #44]	; 0x2c
   117e4:	str	r6, [sp, #48]	; 0x30
   117e8:	str	r6, [sp, #52]	; 0x34
   117ec:	str	r4, [sp, #56]	; 0x38
   117f0:	str	ip, [sp, #60]	; 0x3c
   117f4:	str	ip, [sp, #64]	; 0x40
   117f8:	str	lr, [sp, #68]	; 0x44
   117fc:	str	r7, [sp, #72]	; 0x48
   11800:	str	r6, [sp, #76]	; 0x4c
   11804:	bl	10e30 <_start@@Base+0x25c>
   11808:	mov	r8, r0
   1180c:	movw	r0, #11608	; 0x2d58
   11810:	movt	r0, #1
   11814:	bl	10aac <printf@plt>
   11818:	mov	r1, r4
   1181c:	mov	r0, r8
   11820:	bl	12238 <v_sucessores@@Base>
   11824:	subs	r4, r0, #0
   11828:	beq	1198c <teste_v_sucessores@@Base+0x218>
   1182c:	ldr	r3, [r4]
   11830:	cmp	r3, #3
   11834:	moveq	r6, r7
   11838:	bne	11940 <teste_v_sucessores@@Base+0x1cc>
   1183c:	mov	r5, #0
   11840:	b	1184c <teste_v_sucessores@@Base+0xd8>
   11844:	cmp	r5, r3
   11848:	bge	118cc <teste_v_sucessores@@Base+0x158>
   1184c:	mov	r1, r5
   11850:	mov	r0, r4
   11854:	bl	1264c <vetor_elemento@@Base>
   11858:	cmp	r0, #2
   1185c:	add	r5, r5, #1
   11860:	ldr	r3, [r4]
   11864:	bne	11844 <teste_v_sucessores@@Base+0xd0>
   11868:	cmp	r3, #0
   1186c:	movgt	r5, #0
   11870:	bgt	11880 <teste_v_sucessores@@Base+0x10c>
   11874:	b	118cc <teste_v_sucessores@@Base+0x158>
   11878:	cmp	r5, r3
   1187c:	bge	118cc <teste_v_sucessores@@Base+0x158>
   11880:	mov	r1, r5
   11884:	mov	r0, r4
   11888:	bl	1264c <vetor_elemento@@Base>
   1188c:	cmp	r0, #5
   11890:	add	r5, r5, #1
   11894:	ldr	r3, [r4]
   11898:	bne	11878 <teste_v_sucessores@@Base+0x104>
   1189c:	cmp	r3, #0
   118a0:	movgt	r5, #0
   118a4:	ble	118cc <teste_v_sucessores@@Base+0x158>
   118a8:	mov	r1, r5
   118ac:	mov	r0, r4
   118b0:	bl	1264c <vetor_elemento@@Base>
   118b4:	cmp	r0, #6
   118b8:	add	r5, r5, #1
   118bc:	beq	118dc <teste_v_sucessores@@Base+0x168>
   118c0:	ldr	r3, [r4]
   118c4:	cmp	r5, r3
   118c8:	blt	118a8 <teste_v_sucessores@@Base+0x134>
   118cc:	add	r6, r6, #1
   118d0:	movw	r0, #11720	; 0x2dc8
   118d4:	movt	r0, #1
   118d8:	bl	10aac <printf@plt>
   118dc:	mov	r0, r4
   118e0:	bl	125cc <vetor_apaga@@Base>
   118e4:	mov	r1, #2
   118e8:	mov	r0, r8
   118ec:	bl	12238 <v_sucessores@@Base>
   118f0:	subs	r4, r0, #0
   118f4:	beq	119a4 <teste_v_sucessores@@Base+0x230>
   118f8:	ldr	r3, [r4]
   118fc:	cmp	r3, #0
   11900:	bne	11960 <teste_v_sucessores@@Base+0x1ec>
   11904:	bl	125cc <vetor_apaga@@Base>
   11908:	mov	r0, r8
   1190c:	bl	11f9c <grafo_apaga@@Base>
   11910:	cmp	r6, #0
   11914:	bne	11980 <teste_v_sucessores@@Base+0x20c>
   11918:	movw	r0, #10800	; 0x2a30
   1191c:	movt	r0, #1
   11920:	bl	10ad0 <puts@plt>
   11924:	mov	r0, r6
   11928:	add	sp, sp, #80	; 0x50
   1192c:	ldrd	r4, [sp]
   11930:	ldrd	r6, [sp, #8]
   11934:	ldr	r8, [sp, #16]
   11938:	add	sp, sp, #20
   1193c:	pop	{pc}		; (ldr pc, [sp], #4)
   11940:	movw	r0, #11676	; 0x2d9c
   11944:	movt	r0, #1
   11948:	bl	10aac <printf@plt>
   1194c:	ldr	r3, [r4]
   11950:	cmp	r3, #0
   11954:	bgt	1183c <teste_v_sucessores@@Base+0xc8>
   11958:	mov	r6, r5
   1195c:	b	118d0 <teste_v_sucessores@@Base+0x15c>
   11960:	movw	r0, #11828	; 0x2e34
   11964:	movt	r0, #1
   11968:	bl	10aac <printf@plt>
   1196c:	mov	r0, r4
   11970:	add	r6, r6, #1
   11974:	bl	125cc <vetor_apaga@@Base>
   11978:	mov	r0, r8
   1197c:	bl	11f9c <grafo_apaga@@Base>
   11980:	mov	r0, #10
   11984:	bl	10b0c <putchar@plt>
   11988:	b	11924 <teste_v_sucessores@@Base+0x1b0>
   1198c:	movw	r0, #11628	; 0x2d6c
   11990:	movt	r0, #1
   11994:	bl	10aac <printf@plt>
   11998:	mov	r0, #10
   1199c:	bl	10b0c <putchar@plt>
   119a0:	b	11924 <teste_v_sucessores@@Base+0x1b0>
   119a4:	movw	r0, #11764	; 0x2df4
   119a8:	movt	r0, #1
   119ac:	bl	10aac <printf@plt>
   119b0:	mov	r0, #10
   119b4:	add	r6, r6, #1
   119b8:	bl	10b0c <putchar@plt>
   119bc:	b	11924 <teste_v_sucessores@@Base+0x1b0>

000119c0 <teste_v_antecessores@@Base>:
   119c0:	mov	r0, #7
   119c4:	mov	r1, #4
   119c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   119cc:	mov	r2, #5
   119d0:	mov	r5, #2
   119d4:	strd	r6, [sp, #8]
   119d8:	mov	r7, #0
   119dc:	str	r8, [sp, #16]
   119e0:	mov	ip, #6
   119e4:	str	lr, [sp, #20]
   119e8:	sub	sp, sp, #80	; 0x50
   119ec:	mov	lr, #3
   119f0:	mov	r6, #1
   119f4:	mov	r3, r5
   119f8:	stm	sp, {r0, r5, r7}
   119fc:	str	r5, [sp, #12]
   11a00:	str	r0, [sp, #16]
   11a04:	str	r2, [sp, #20]
   11a08:	str	r2, [sp, #24]
   11a0c:	mov	r2, lr
   11a10:	str	r1, [sp, #28]
   11a14:	str	r1, [sp, #32]
   11a18:	str	r7, [sp, #36]	; 0x24
   11a1c:	str	r1, [sp, #40]	; 0x28
   11a20:	mov	r1, #22
   11a24:	str	r0, [sp, #56]	; 0x38
   11a28:	mov	r0, #8
   11a2c:	str	ip, [sp, #44]	; 0x2c
   11a30:	str	r6, [sp, #48]	; 0x30
   11a34:	str	r6, [sp, #52]	; 0x34
   11a38:	str	ip, [sp, #60]	; 0x3c
   11a3c:	str	ip, [sp, #64]	; 0x40
   11a40:	str	lr, [sp, #68]	; 0x44
   11a44:	str	r7, [sp, #72]	; 0x48
   11a48:	str	r6, [sp, #76]	; 0x4c
   11a4c:	bl	10e30 <_start@@Base+0x25c>
   11a50:	mov	r8, r0
   11a54:	movw	r0, #11876	; 0x2e64
   11a58:	movt	r0, #1
   11a5c:	bl	10aac <printf@plt>
   11a60:	mov	r1, r5
   11a64:	mov	r0, r8
   11a68:	bl	122c4 <v_antecessores@@Base>
   11a6c:	subs	r4, r0, #0
   11a70:	beq	11bd0 <teste_v_antecessores@@Base+0x210>
   11a74:	ldr	r3, [r4]
   11a78:	cmp	r3, #3
   11a7c:	moveq	r5, r7
   11a80:	bne	11b84 <teste_v_antecessores@@Base+0x1c4>
   11a84:	mov	r7, #0
   11a88:	b	11a94 <teste_v_antecessores@@Base+0xd4>
   11a8c:	cmp	r7, r3
   11a90:	bge	11b10 <teste_v_antecessores@@Base+0x150>
   11a94:	mov	r1, r7
   11a98:	mov	r0, r4
   11a9c:	bl	1264c <vetor_elemento@@Base>
   11aa0:	subs	r6, r0, #0
   11aa4:	add	r7, r7, #1
   11aa8:	ldr	r3, [r4]
   11aac:	bne	11a8c <teste_v_antecessores@@Base+0xcc>
   11ab0:	cmp	r3, #0
   11ab4:	movgt	r7, r6
   11ab8:	bgt	11ac8 <teste_v_antecessores@@Base+0x108>
   11abc:	b	11b10 <teste_v_antecessores@@Base+0x150>
   11ac0:	cmp	r7, r3
   11ac4:	bge	11b10 <teste_v_antecessores@@Base+0x150>
   11ac8:	mov	r1, r7
   11acc:	mov	r0, r4
   11ad0:	bl	1264c <vetor_elemento@@Base>
   11ad4:	cmp	r0, #3
   11ad8:	add	r7, r7, #1
   11adc:	ldr	r3, [r4]
   11ae0:	bne	11ac0 <teste_v_antecessores@@Base+0x100>
   11ae4:	cmp	r3, #0
   11ae8:	ble	11b10 <teste_v_antecessores@@Base+0x150>
   11aec:	mov	r1, r6
   11af0:	mov	r0, r4
   11af4:	bl	1264c <vetor_elemento@@Base>
   11af8:	cmp	r0, #7
   11afc:	add	r6, r6, #1
   11b00:	beq	11b20 <teste_v_antecessores@@Base+0x160>
   11b04:	ldr	r3, [r4]
   11b08:	cmp	r6, r3
   11b0c:	blt	11aec <teste_v_antecessores@@Base+0x12c>
   11b10:	add	r5, r5, #1
   11b14:	movw	r0, #11992	; 0x2ed8
   11b18:	movt	r0, #1
   11b1c:	bl	10aac <printf@plt>
   11b20:	mov	r0, r4
   11b24:	bl	125cc <vetor_apaga@@Base>
   11b28:	mov	r1, #7
   11b2c:	mov	r0, r8
   11b30:	bl	122c4 <v_antecessores@@Base>
   11b34:	subs	r4, r0, #0
   11b38:	beq	11bec <teste_v_antecessores@@Base+0x22c>
   11b3c:	ldr	r3, [r4]
   11b40:	cmp	r3, #0
   11b44:	bne	11ba4 <teste_v_antecessores@@Base+0x1e4>
   11b48:	bl	125cc <vetor_apaga@@Base>
   11b4c:	mov	r0, r8
   11b50:	bl	11f9c <grafo_apaga@@Base>
   11b54:	cmp	r5, #0
   11b58:	bne	11bc4 <teste_v_antecessores@@Base+0x204>
   11b5c:	movw	r0, #10800	; 0x2a30
   11b60:	movt	r0, #1
   11b64:	bl	10ad0 <puts@plt>
   11b68:	mov	r0, r5
   11b6c:	add	sp, sp, #80	; 0x50
   11b70:	ldrd	r4, [sp]
   11b74:	ldrd	r6, [sp, #8]
   11b78:	ldr	r8, [sp, #16]
   11b7c:	add	sp, sp, #20
   11b80:	pop	{pc}		; (ldr pc, [sp], #4)
   11b84:	movw	r0, #11944	; 0x2ea8
   11b88:	movt	r0, #1
   11b8c:	bl	10aac <printf@plt>
   11b90:	ldr	r3, [r4]
   11b94:	cmp	r3, #0
   11b98:	ble	11b14 <teste_v_antecessores@@Base+0x154>
   11b9c:	mov	r5, r6
   11ba0:	b	11a84 <teste_v_antecessores@@Base+0xc4>
   11ba4:	movw	r0, #12104	; 0x2f48
   11ba8:	movt	r0, #1
   11bac:	bl	10aac <printf@plt>
   11bb0:	mov	r0, r4
   11bb4:	add	r5, r5, #1
   11bb8:	bl	125cc <vetor_apaga@@Base>
   11bbc:	mov	r0, r8
   11bc0:	bl	11f9c <grafo_apaga@@Base>
   11bc4:	mov	r0, #10
   11bc8:	bl	10b0c <putchar@plt>
   11bcc:	b	11b68 <teste_v_antecessores@@Base+0x1a8>
   11bd0:	movw	r0, #11896	; 0x2e78
   11bd4:	movt	r0, #1
   11bd8:	bl	10aac <printf@plt>
   11bdc:	mov	r0, #10
   11be0:	mov	r5, r6
   11be4:	bl	10b0c <putchar@plt>
   11be8:	b	11b68 <teste_v_antecessores@@Base+0x1a8>
   11bec:	movw	r0, #12040	; 0x2f08
   11bf0:	movt	r0, #1
   11bf4:	bl	10aac <printf@plt>
   11bf8:	mov	r0, #10
   11bfc:	add	r5, r5, #1
   11c00:	bl	10b0c <putchar@plt>
   11c04:	b	11b68 <teste_v_antecessores@@Base+0x1a8>

00011c08 <teste_v_grau@@Base>:
   11c08:	mov	r0, #4
   11c0c:	mov	r1, #5
   11c10:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11c14:	mov	r5, #2
   11c18:	mov	r4, #0
   11c1c:	strd	r6, [sp, #8]
   11c20:	str	r8, [sp, #16]
   11c24:	mov	ip, #6
   11c28:	mov	r6, #1
   11c2c:	str	lr, [sp, #20]
   11c30:	sub	sp, sp, #80	; 0x50
   11c34:	mov	lr, #7
   11c38:	mov	r8, #3
   11c3c:	mov	r3, r5
   11c40:	mov	r2, r8
   11c44:	str	lr, [sp]
   11c48:	str	r5, [sp, #4]
   11c4c:	strd	r4, [sp, #8]
   11c50:	str	lr, [sp, #16]
   11c54:	str	r1, [sp, #20]
   11c58:	str	r1, [sp, #24]
   11c5c:	mov	r1, #22
   11c60:	str	r0, [sp, #28]
   11c64:	str	r0, [sp, #32]
   11c68:	str	r4, [sp, #36]	; 0x24
   11c6c:	str	r0, [sp, #40]	; 0x28
   11c70:	mov	r0, #8
   11c74:	str	ip, [sp, #44]	; 0x2c
   11c78:	str	r6, [sp, #48]	; 0x30
   11c7c:	str	r6, [sp, #52]	; 0x34
   11c80:	str	lr, [sp, #56]	; 0x38
   11c84:	str	ip, [sp, #60]	; 0x3c
   11c88:	str	ip, [sp, #64]	; 0x40
   11c8c:	str	r8, [sp, #68]	; 0x44
   11c90:	str	r4, [sp, #72]	; 0x48
   11c94:	str	r6, [sp, #76]	; 0x4c
   11c98:	bl	10e30 <_start@@Base+0x25c>
   11c9c:	mov	r7, r0
   11ca0:	movw	r0, #12152	; 0x2f78
   11ca4:	movt	r0, #1
   11ca8:	bl	10aac <printf@plt>
   11cac:	mov	r0, r7
   11cb0:	mvn	r1, #3
   11cb4:	bl	1238c <v_grau@@Base>
   11cb8:	cmn	r0, #1
   11cbc:	moveq	r8, r5
   11cc0:	moveq	r5, r6
   11cc4:	beq	11cd8 <teste_v_grau@@Base+0xd0>
   11cc8:	movw	r0, #12164	; 0x2f84
   11ccc:	movt	r0, #1
   11cd0:	mov	r4, r6
   11cd4:	bl	10aac <printf@plt>
   11cd8:	mov	r1, #7
   11cdc:	mov	r0, r7
   11ce0:	bl	1238c <v_grau@@Base>
   11ce4:	cmp	r0, #3
   11ce8:	bne	11d38 <teste_v_grau@@Base+0x130>
   11cec:	mov	r1, #5
   11cf0:	mov	r0, r7
   11cf4:	bl	1238c <v_grau@@Base>
   11cf8:	cmp	r0, #2
   11cfc:	bne	11d8c <teste_v_grau@@Base+0x184>
   11d00:	mov	r0, r7
   11d04:	bl	11f9c <grafo_apaga@@Base>
   11d08:	cmp	r4, #0
   11d0c:	bne	11d70 <teste_v_grau@@Base+0x168>
   11d10:	movw	r0, #10800	; 0x2a30
   11d14:	movt	r0, #1
   11d18:	bl	10ad0 <puts@plt>
   11d1c:	mov	r0, r4
   11d20:	add	sp, sp, #80	; 0x50
   11d24:	ldrd	r4, [sp]
   11d28:	ldrd	r6, [sp, #8]
   11d2c:	ldr	r8, [sp, #16]
   11d30:	add	sp, sp, #20
   11d34:	pop	{pc}		; (ldr pc, [sp], #4)
   11d38:	movw	r0, #12212	; 0x2fb4
   11d3c:	movt	r0, #1
   11d40:	bl	10aac <printf@plt>
   11d44:	mov	r1, #5
   11d48:	mov	r0, r7
   11d4c:	bl	1238c <v_grau@@Base>
   11d50:	cmp	r0, #2
   11d54:	beq	11d7c <teste_v_grau@@Base+0x174>
   11d58:	movw	r0, #12260	; 0x2fe4
   11d5c:	movt	r0, #1
   11d60:	bl	10aac <printf@plt>
   11d64:	mov	r0, r7
   11d68:	mov	r4, r8
   11d6c:	bl	11f9c <grafo_apaga@@Base>
   11d70:	mov	r0, #10
   11d74:	bl	10b0c <putchar@plt>
   11d78:	b	11d1c <teste_v_grau@@Base+0x114>
   11d7c:	mov	r0, r7
   11d80:	mov	r4, r5
   11d84:	bl	11f9c <grafo_apaga@@Base>
   11d88:	b	11d70 <teste_v_grau@@Base+0x168>
   11d8c:	mov	r8, r5
   11d90:	b	11d58 <teste_v_grau@@Base+0x150>

00011d94 <teste_v_celebridade@@Base>:
   11d94:	mov	r0, #6
   11d98:	mov	r1, #0
   11d9c:	strd	r4, [sp, #-20]!	; 0xffffffec
   11da0:	strd	r6, [sp, #8]
   11da4:	mov	r6, #7
   11da8:	mov	r4, #2
   11dac:	str	lr, [sp, #16]
   11db0:	sub	sp, sp, #116	; 0x74
   11db4:	mov	ip, #4
   11db8:	mov	lr, #5
   11dbc:	mov	r5, #1
   11dc0:	mov	r7, #3
   11dc4:	mov	r3, r4
   11dc8:	str	r6, [sp]
   11dcc:	mov	r2, r7
   11dd0:	str	r4, [sp, #4]
   11dd4:	str	r1, [sp, #8]
   11dd8:	str	r1, [sp, #36]	; 0x24
   11ddc:	str	r0, [sp, #44]	; 0x2c
   11de0:	str	r0, [sp, #60]	; 0x3c
   11de4:	str	r0, [sp, #64]	; 0x40
   11de8:	str	r1, [sp, #72]	; 0x48
   11dec:	mov	r1, #30
   11df0:	str	r0, [sp, #88]	; 0x58
   11df4:	mov	r0, #8
   11df8:	str	r4, [sp, #12]
   11dfc:	str	r6, [sp, #16]
   11e00:	str	lr, [sp, #20]
   11e04:	str	lr, [sp, #24]
   11e08:	str	ip, [sp, #28]
   11e0c:	str	ip, [sp, #32]
   11e10:	str	ip, [sp, #40]	; 0x28
   11e14:	str	r5, [sp, #48]	; 0x30
   11e18:	str	r5, [sp, #52]	; 0x34
   11e1c:	str	r6, [sp, #56]	; 0x38
   11e20:	str	r7, [sp, #68]	; 0x44
   11e24:	str	r5, [sp, #76]	; 0x4c
   11e28:	str	r5, [sp, #80]	; 0x50
   11e2c:	str	r4, [sp, #84]	; 0x54
   11e30:	str	r4, [sp, #92]	; 0x5c
   11e34:	str	ip, [sp, #96]	; 0x60
   11e38:	str	r4, [sp, #100]	; 0x64
   11e3c:	str	lr, [sp, #104]	; 0x68
   11e40:	str	r4, [sp, #108]	; 0x6c
   11e44:	bl	10ee4 <_start@@Base+0x310>
   11e48:	mov	r7, r0
   11e4c:	movw	r0, #12308	; 0x3014
   11e50:	movt	r0, #1
   11e54:	bl	10aac <printf@plt>
   11e58:	mov	r1, r6
   11e5c:	mov	r0, r7
   11e60:	bl	124d4 <v_celebridade@@Base>
   11e64:	subs	r6, r0, #0
   11e68:	bne	11eac <teste_v_celebridade@@Base+0x118>
   11e6c:	mov	r1, r4
   11e70:	mov	r0, r7
   11e74:	bl	124d4 <v_celebridade@@Base>
   11e78:	cmp	r0, #1
   11e7c:	bne	11ef4 <teste_v_celebridade@@Base+0x160>
   11e80:	mov	r0, r7
   11e84:	bl	11f9c <grafo_apaga@@Base>
   11e88:	movw	r0, #10800	; 0x2a30
   11e8c:	movt	r0, #1
   11e90:	bl	10ad0 <puts@plt>
   11e94:	mov	r0, r6
   11e98:	add	sp, sp, #116	; 0x74
   11e9c:	ldrd	r4, [sp]
   11ea0:	ldrd	r6, [sp, #8]
   11ea4:	add	sp, sp, #16
   11ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   11eac:	movw	r0, #12328	; 0x3028
   11eb0:	movt	r0, #1
   11eb4:	bl	10aac <printf@plt>
   11eb8:	mov	r1, r4
   11ebc:	mov	r0, r7
   11ec0:	bl	124d4 <v_celebridade@@Base>
   11ec4:	cmp	r0, r5
   11ec8:	mov	r6, r0
   11ecc:	beq	11ee0 <teste_v_celebridade@@Base+0x14c>
   11ed0:	mov	r6, r4
   11ed4:	movw	r0, #12384	; 0x3060
   11ed8:	movt	r0, #1
   11edc:	bl	10aac <printf@plt>
   11ee0:	mov	r0, r7
   11ee4:	bl	11f9c <grafo_apaga@@Base>
   11ee8:	mov	r0, #10
   11eec:	bl	10b0c <putchar@plt>
   11ef0:	b	11e94 <teste_v_celebridade@@Base+0x100>
   11ef4:	mov	r6, r5
   11ef8:	b	11ed4 <teste_v_celebridade@@Base+0x140>

00011efc <cria_elem@@Base>:
   11efc:	str	r4, [sp, #-8]!
   11f00:	mov	r4, r0
   11f04:	mov	r0, #8
   11f08:	str	lr, [sp, #4]
   11f0c:	bl	10adc <malloc@plt>
   11f10:	cmp	r0, #0
   11f14:	beq	11f24 <cria_elem@@Base+0x28>
   11f18:	mov	r3, #0
   11f1c:	str	r4, [r0]
   11f20:	str	r3, [r0, #4]
   11f24:	ldr	r4, [sp]
   11f28:	add	sp, sp, #4
   11f2c:	pop	{pc}		; (ldr pc, [sp], #4)

00011f30 <grafo_novo@@Base>:
   11f30:	strd	r4, [sp, #-16]!
   11f34:	subs	r5, r0, #0
   11f38:	str	r6, [sp, #8]
   11f3c:	movle	r6, #0
   11f40:	str	lr, [sp, #12]
   11f44:	ble	11f88 <grafo_novo@@Base+0x58>
   11f48:	mov	r0, #8
   11f4c:	lsl	r4, r5, #3
   11f50:	bl	10adc <malloc@plt>
   11f54:	mov	r6, r0
   11f58:	mov	r0, r4
   11f5c:	str	r5, [r6]
   11f60:	bl	10adc <malloc@plt>
   11f64:	mov	r3, r0
   11f68:	mov	r2, #0
   11f6c:	str	r0, [r6, #4]
   11f70:	add	r1, r0, r4
   11f74:	add	r3, r3, #8
   11f78:	str	r2, [r3, #-8]
   11f7c:	str	r2, [r3, #-4]
   11f80:	cmp	r3, r1
   11f84:	bne	11f74 <grafo_novo@@Base+0x44>
   11f88:	mov	r0, r6
   11f8c:	ldrd	r4, [sp]
   11f90:	ldr	r6, [sp, #8]
   11f94:	add	sp, sp, #12
   11f98:	pop	{pc}		; (ldr pc, [sp], #4)

00011f9c <grafo_apaga@@Base>:
   11f9c:	strd	r4, [sp, #-16]!
   11fa0:	str	r6, [sp, #8]
   11fa4:	subs	r6, r0, #0
   11fa8:	str	lr, [sp, #12]
   11fac:	beq	12010 <grafo_apaga@@Base+0x74>
   11fb0:	ldrd	r2, [r6]
   11fb4:	cmp	r2, #0
   11fb8:	ble	11ff0 <grafo_apaga@@Base+0x54>
   11fbc:	mov	r5, #0
   11fc0:	add	r1, r3, r5, lsl #3
   11fc4:	ldr	r0, [r1, #4]
   11fc8:	cmp	r0, #0
   11fcc:	beq	11fe4 <grafo_apaga@@Base+0x48>
   11fd0:	ldr	r4, [r0, #4]
   11fd4:	bl	10ab8 <free@plt>
   11fd8:	subs	r0, r4, #0
   11fdc:	bne	11fd0 <grafo_apaga@@Base+0x34>
   11fe0:	ldrd	r2, [r6]
   11fe4:	add	r5, r5, #1
   11fe8:	cmp	r5, r2
   11fec:	blt	11fc0 <grafo_apaga@@Base+0x24>
   11ff0:	mov	r0, r3
   11ff4:	bl	10ab8 <free@plt>
   11ff8:	mov	r0, r6
   11ffc:	ldrd	r4, [sp]
   12000:	ldr	r6, [sp, #8]
   12004:	ldr	lr, [sp, #12]
   12008:	add	sp, sp, #16
   1200c:	b	10ab8 <free@plt>
   12010:	ldrd	r4, [sp]
   12014:	ldr	r6, [sp, #8]
   12018:	add	sp, sp, #12
   1201c:	pop	{pc}		; (ldr pc, [sp], #4)

00012020 <grafo_aresta@@Base>:
   12020:	cmp	r0, #0
   12024:	beq	12074 <grafo_aresta@@Base+0x54>
   12028:	ldr	r3, [r0]
   1202c:	cmp	r3, r1
   12030:	blt	12074 <grafo_aresta@@Base+0x54>
   12034:	cmp	r3, r2
   12038:	blt	1207c <grafo_aresta@@Base+0x5c>
   1203c:	ldr	r3, [r0, #4]
   12040:	add	r1, r3, r1, lsl #3
   12044:	ldr	r0, [r1, #4]
   12048:	cmp	r0, #0
   1204c:	bne	12060 <grafo_aresta@@Base+0x40>
   12050:	b	12070 <grafo_aresta@@Base+0x50>
   12054:	ldr	r0, [r0, #4]
   12058:	cmp	r0, #0
   1205c:	beq	12084 <grafo_aresta@@Base+0x64>
   12060:	ldr	r3, [r0]
   12064:	cmp	r2, r3
   12068:	bne	12054 <grafo_aresta@@Base+0x34>
   1206c:	mov	r0, #1
   12070:	bx	lr
   12074:	mvn	r0, #0
   12078:	bx	lr
   1207c:	mov	r0, #0
   12080:	bx	lr
   12084:	bx	lr

00012088 <grafo_adiciona@@Base>:
   12088:	cmp	r0, #0
   1208c:	beq	120a0 <grafo_adiciona@@Base+0x18>
   12090:	ldr	r3, [r0]
   12094:	cmp	r3, r2
   12098:	cmpge	r3, r1
   1209c:	bge	120a8 <grafo_adiciona@@Base+0x20>
   120a0:	mvn	r0, #0
   120a4:	bx	lr
   120a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   120ac:	strd	r6, [sp, #8]
   120b0:	ldr	r7, [r0, #4]
   120b4:	str	r8, [sp, #16]
   120b8:	str	lr, [sp, #20]
   120bc:	add	r5, r7, r1, lsl #3
   120c0:	ldr	r6, [r5, #4]
   120c4:	cmp	r6, #0
   120c8:	beq	120f8 <grafo_adiciona@@Base+0x70>
   120cc:	ldr	r1, [r6]
   120d0:	cmp	r1, r2
   120d4:	beq	1213c <grafo_adiciona@@Base+0xb4>
   120d8:	mov	r3, r6
   120dc:	b	120ec <grafo_adiciona@@Base+0x64>
   120e0:	ldr	r1, [r3]
   120e4:	cmp	r2, r1
   120e8:	beq	1213c <grafo_adiciona@@Base+0xb4>
   120ec:	ldr	r3, [r3, #4]
   120f0:	cmp	r3, #0
   120f4:	bne	120e0 <grafo_adiciona@@Base+0x58>
   120f8:	mov	r0, #8
   120fc:	mov	r4, r2
   12100:	bl	10adc <malloc@plt>
   12104:	subs	r3, r0, #0
   12108:	beq	12144 <grafo_adiciona@@Base+0xbc>
   1210c:	ldr	r2, [r7]
   12110:	mov	r0, #1
   12114:	str	r4, [r3]
   12118:	str	r3, [r5, #4]
   1211c:	str	r6, [r3, #4]
   12120:	add	r2, r2, r0
   12124:	str	r2, [r7]
   12128:	ldrd	r4, [sp]
   1212c:	ldrd	r6, [sp, #8]
   12130:	ldr	r8, [sp, #16]
   12134:	add	sp, sp, #20
   12138:	pop	{pc}		; (ldr pc, [sp], #4)
   1213c:	mov	r0, #0
   12140:	b	12128 <grafo_adiciona@@Base+0xa0>
   12144:	str	r3, [r5, #4]
   12148:	str	r6, [r3, #4]
   1214c:	udf	#0

00012150 <grafo_remove@@Base>:
   12150:	cmp	r0, #0
   12154:	beq	12170 <grafo_remove@@Base+0x20>
   12158:	ldr	ip, [r0]
   1215c:	cmp	r1, r2
   12160:	movge	r3, r1
   12164:	movlt	r3, r2
   12168:	cmp	ip, r3
   1216c:	bge	12178 <grafo_remove@@Base+0x28>
   12170:	mvn	r0, #0
   12174:	bx	lr
   12178:	str	r4, [sp, #-8]!
   1217c:	ldr	r4, [r0, #4]
   12180:	str	lr, [sp, #4]
   12184:	add	r1, r4, r1, lsl #3
   12188:	ldr	lr, [r1, #4]
   1218c:	cmp	lr, #0
   12190:	moveq	r0, lr
   12194:	beq	121dc <grafo_remove@@Base+0x8c>
   12198:	ldm	lr, {r3, ip}
   1219c:	cmp	r3, r2
   121a0:	beq	12210 <grafo_remove@@Base+0xc0>
   121a4:	cmp	ip, #0
   121a8:	beq	12230 <grafo_remove@@Base+0xe0>
   121ac:	ldr	r3, [ip]
   121b0:	ldr	r0, [ip, #4]
   121b4:	cmp	r2, r3
   121b8:	bne	121d4 <grafo_remove@@Base+0x84>
   121bc:	b	121e8 <grafo_remove@@Base+0x98>
   121c0:	ldm	r0, {r1, r3}
   121c4:	cmp	r1, r2
   121c8:	beq	121f4 <grafo_remove@@Base+0xa4>
   121cc:	mov	ip, r0
   121d0:	mov	r0, r3
   121d4:	cmp	r0, #0
   121d8:	bne	121c0 <grafo_remove@@Base+0x70>
   121dc:	ldr	r4, [sp]
   121e0:	add	sp, sp, #4
   121e4:	pop	{pc}		; (ldr pc, [sp], #4)
   121e8:	mov	r3, r0
   121ec:	mov	r0, ip
   121f0:	mov	ip, lr
   121f4:	ldr	r2, [r4]
   121f8:	str	r3, [ip, #4]
   121fc:	sub	r2, r2, #1
   12200:	str	r2, [r4]
   12204:	bl	10ab8 <free@plt>
   12208:	mov	r0, #1
   1220c:	b	121dc <grafo_remove@@Base+0x8c>
   12210:	ldr	r3, [r4]
   12214:	mov	r0, lr
   12218:	str	ip, [r1, #4]
   1221c:	sub	r3, r3, #1
   12220:	str	r3, [r4]
   12224:	bl	10ab8 <free@plt>
   12228:	mov	r0, #1
   1222c:	b	121dc <grafo_remove@@Base+0x8c>
   12230:	mov	r0, ip
   12234:	b	121dc <grafo_remove@@Base+0x8c>

00012238 <v_sucessores@@Base>:
   12238:	strd	r4, [sp, #-16]!
   1223c:	str	r6, [sp, #8]
   12240:	subs	r6, r0, #0
   12244:	moveq	r5, r6
   12248:	str	lr, [sp, #12]
   1224c:	beq	12268 <v_sucessores@@Base+0x30>
   12250:	ldr	r3, [r6]
   12254:	cmp	r1, #0
   12258:	cmpge	r3, r1
   1225c:	movgt	r5, #1
   12260:	movle	r5, #0
   12264:	bgt	1227c <v_sucessores@@Base+0x44>
   12268:	mov	r0, r5
   1226c:	ldrd	r4, [sp]
   12270:	ldr	r6, [sp, #8]
   12274:	add	sp, sp, #12
   12278:	pop	{pc}		; (ldr pc, [sp], #4)
   1227c:	mov	r4, r1
   12280:	bl	1258c <vetor_novo@@Base>
   12284:	ldr	r1, [r6, #4]
   12288:	mov	r5, r0
   1228c:	add	r1, r1, r4, lsl #3
   12290:	ldr	r4, [r1, #4]
   12294:	cmp	r4, #0
   12298:	beq	12268 <v_sucessores@@Base+0x30>
   1229c:	mov	r6, #0
   122a0:	mov	r2, r6
   122a4:	mov	r0, r5
   122a8:	ldr	r1, [r4]
   122ac:	bl	12680 <vetor_insere@@Base>
   122b0:	ldr	r4, [r4, #4]
   122b4:	add	r6, r6, #1
   122b8:	cmp	r4, #0
   122bc:	bne	122a0 <v_sucessores@@Base+0x68>
   122c0:	b	12268 <v_sucessores@@Base+0x30>

000122c4 <v_antecessores@@Base>:
   122c4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   122c8:	strd	r6, [sp, #8]
   122cc:	subs	r7, r0, #0
   122d0:	moveq	r6, r7
   122d4:	str	r8, [sp, #16]
   122d8:	str	lr, [sp, #20]
   122dc:	beq	122f8 <v_antecessores@@Base+0x34>
   122e0:	ldr	r6, [r7]
   122e4:	cmp	r1, #0
   122e8:	cmpge	r6, r1
   122ec:	movgt	r6, #1
   122f0:	movle	r6, #0
   122f4:	bgt	12310 <v_antecessores@@Base+0x4c>
   122f8:	mov	r0, r6
   122fc:	ldrd	r4, [sp]
   12300:	ldrd	r6, [sp, #8]
   12304:	ldr	r8, [sp, #16]
   12308:	add	sp, sp, #20
   1230c:	pop	{pc}		; (ldr pc, [sp], #4)
   12310:	mov	r4, r1
   12314:	bl	1258c <vetor_novo@@Base>
   12318:	ldr	r1, [r7]
   1231c:	mov	r6, r0
   12320:	cmp	r1, #0
   12324:	ble	122f8 <v_antecessores@@Base+0x34>
   12328:	mov	r8, #0
   1232c:	mov	r5, r8
   12330:	ldr	r3, [r7, #4]
   12334:	add	r3, r3, r5, lsl #3
   12338:	b	12348 <v_antecessores@@Base+0x84>
   1233c:	ldr	r2, [r3]
   12340:	cmp	r4, r2
   12344:	beq	12364 <v_antecessores@@Base+0xa0>
   12348:	ldr	r3, [r3, #4]
   1234c:	cmp	r3, #0
   12350:	bne	1233c <v_antecessores@@Base+0x78>
   12354:	add	r5, r5, #1
   12358:	cmp	r5, r1
   1235c:	blt	12330 <v_antecessores@@Base+0x6c>
   12360:	b	122f8 <v_antecessores@@Base+0x34>
   12364:	mov	r1, r5
   12368:	mov	r2, r8
   1236c:	mov	r0, r6
   12370:	add	r5, r5, #1
   12374:	bl	12680 <vetor_insere@@Base>
   12378:	ldr	r1, [r7]
   1237c:	add	r8, r8, #1
   12380:	cmp	r5, r1
   12384:	blt	12330 <v_antecessores@@Base+0x6c>
   12388:	b	122f8 <v_antecessores@@Base+0x34>

0001238c <v_grau@@Base>:
   1238c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12390:	subs	r5, r1, #0
   12394:	strd	r6, [sp, #8]
   12398:	str	r8, [sp, #16]
   1239c:	str	lr, [sp, #20]
   123a0:	blt	124cc <v_grau@@Base+0x140>
   123a4:	cmp	r0, #0
   123a8:	mov	r4, r0
   123ac:	beq	124b8 <v_grau@@Base+0x12c>
   123b0:	ldr	r3, [r0]
   123b4:	cmp	r5, r3
   123b8:	bge	124b8 <v_grau@@Base+0x12c>
   123bc:	bl	1258c <vetor_novo@@Base>
   123c0:	ldr	r2, [r4]
   123c4:	mov	r7, r0
   123c8:	cmp	r2, #0
   123cc:	ble	124c4 <v_grau@@Base+0x138>
   123d0:	mov	r8, #0
   123d4:	mov	r6, r8
   123d8:	ldr	r3, [r4, #4]
   123dc:	add	r3, r3, r6, lsl #3
   123e0:	b	123f0 <v_grau@@Base+0x64>
   123e4:	ldr	r1, [r3]
   123e8:	cmp	r5, r1
   123ec:	beq	12490 <v_grau@@Base+0x104>
   123f0:	ldr	r3, [r3, #4]
   123f4:	cmp	r3, #0
   123f8:	bne	123e4 <v_grau@@Base+0x58>
   123fc:	add	r6, r6, #1
   12400:	cmp	r2, r6
   12404:	bgt	123d8 <v_grau@@Base+0x4c>
   12408:	cmp	r5, r2
   1240c:	bge	124c4 <v_grau@@Base+0x138>
   12410:	bl	1258c <vetor_novo@@Base>
   12414:	ldr	r1, [r4, #4]
   12418:	mov	r6, r0
   1241c:	add	r5, r1, r5, lsl #3
   12420:	ldr	r4, [r5, #4]
   12424:	cmp	r4, #0
   12428:	beq	12450 <v_grau@@Base+0xc4>
   1242c:	mov	r5, #0
   12430:	mov	r2, r5
   12434:	mov	r0, r6
   12438:	ldr	r1, [r4]
   1243c:	bl	12680 <vetor_insere@@Base>
   12440:	ldr	r4, [r4, #4]
   12444:	add	r5, r5, #1
   12448:	cmp	r4, #0
   1244c:	bne	12430 <v_grau@@Base+0xa4>
   12450:	mov	r0, r7
   12454:	bl	1263c <vetor_tamanho@@Base>
   12458:	mov	r4, r0
   1245c:	mov	r0, r6
   12460:	bl	1263c <vetor_tamanho@@Base>
   12464:	add	r4, r4, r0
   12468:	mov	r0, r7
   1246c:	bl	125cc <vetor_apaga@@Base>
   12470:	mov	r0, r6
   12474:	bl	125cc <vetor_apaga@@Base>
   12478:	mov	r0, r4
   1247c:	ldrd	r4, [sp]
   12480:	ldrd	r6, [sp, #8]
   12484:	ldr	r8, [sp, #16]
   12488:	add	sp, sp, #20
   1248c:	pop	{pc}		; (ldr pc, [sp], #4)
   12490:	mov	r2, r8
   12494:	mov	r1, r6
   12498:	mov	r0, r7
   1249c:	add	r6, r6, #1
   124a0:	bl	12680 <vetor_insere@@Base>
   124a4:	ldr	r2, [r4]
   124a8:	add	r8, r8, #1
   124ac:	cmp	r2, r6
   124b0:	bgt	123d8 <v_grau@@Base+0x4c>
   124b4:	b	12408 <v_grau@@Base+0x7c>
   124b8:	mov	r7, #0
   124bc:	mov	r6, r7
   124c0:	b	12450 <v_grau@@Base+0xc4>
   124c4:	mov	r6, #0
   124c8:	b	12450 <v_grau@@Base+0xc4>
   124cc:	mvn	r4, #0
   124d0:	b	12478 <v_grau@@Base+0xec>

000124d4 <v_celebridade@@Base>:
   124d4:	subs	r3, r0, #0
   124d8:	beq	12584 <v_celebridade@@Base+0xb0>
   124dc:	ldr	r0, [r3, #4]
   124e0:	ldr	ip, [r0, r1, lsl #3]
   124e4:	cmp	ip, #0
   124e8:	bne	12574 <v_celebridade@@Base+0xa0>
   124ec:	str	r4, [sp, #-8]!
   124f0:	ldr	r4, [r3]
   124f4:	str	lr, [sp, #4]
   124f8:	cmp	r4, #0
   124fc:	ble	1257c <v_celebridade@@Base+0xa8>
   12500:	add	lr, r0, r4, lsl #3
   12504:	ldr	r3, [r0, #4]
   12508:	cmp	r3, #0
   1250c:	beq	12538 <v_celebridade@@Base+0x64>
   12510:	ldr	r2, [r3]
   12514:	cmp	r1, r2
   12518:	bne	1252c <v_celebridade@@Base+0x58>
   1251c:	b	12560 <v_celebridade@@Base+0x8c>
   12520:	ldr	r2, [r3]
   12524:	cmp	r2, r1
   12528:	beq	12560 <v_celebridade@@Base+0x8c>
   1252c:	ldr	r3, [r3, #4]
   12530:	cmp	r3, #0
   12534:	bne	12520 <v_celebridade@@Base+0x4c>
   12538:	add	r0, r0, #8
   1253c:	cmp	lr, r0
   12540:	bne	12504 <v_celebridade@@Base+0x30>
   12544:	add	ip, ip, #1
   12548:	sub	r0, r4, ip
   1254c:	ldr	r4, [sp]
   12550:	add	sp, sp, #4
   12554:	clz	r0, r0
   12558:	lsr	r0, r0, #5
   1255c:	pop	{pc}		; (ldr pc, [sp], #4)
   12560:	add	r0, r0, #8
   12564:	add	ip, ip, #1
   12568:	cmp	lr, r0
   1256c:	bne	12504 <v_celebridade@@Base+0x30>
   12570:	b	12544 <v_celebridade@@Base+0x70>
   12574:	mov	r0, #0
   12578:	bx	lr
   1257c:	mov	ip, #1
   12580:	b	12548 <v_celebridade@@Base+0x74>
   12584:	mvn	r0, #0
   12588:	bx	lr

0001258c <vetor_novo@@Base>:
   1258c:	mov	r0, #12
   12590:	strd	r4, [sp, #-16]!
   12594:	str	r6, [sp, #8]
   12598:	str	lr, [sp, #12]
   1259c:	bl	10adc <malloc@plt>
   125a0:	cmp	r0, #0
   125a4:	beq	125bc <vetor_novo@@Base+0x30>
   125a8:	mov	r4, #0
   125ac:	mov	r5, #0
   125b0:	mov	r3, #0
   125b4:	strd	r4, [r0]
   125b8:	str	r3, [r0, #8]
   125bc:	ldrd	r4, [sp]
   125c0:	ldr	r6, [sp, #8]
   125c4:	add	sp, sp, #12
   125c8:	pop	{pc}		; (ldr pc, [sp], #4)

000125cc <vetor_apaga@@Base>:
   125cc:	str	r4, [sp, #-8]!
   125d0:	subs	r4, r0, #0
   125d4:	str	lr, [sp, #4]
   125d8:	beq	125f8 <vetor_apaga@@Base+0x2c>
   125dc:	ldr	r0, [r4, #8]
   125e0:	bl	10ab8 <free@plt>
   125e4:	mov	r0, r4
   125e8:	ldr	r4, [sp]
   125ec:	ldr	lr, [sp, #4]
   125f0:	add	sp, sp, #8
   125f4:	b	10ab8 <free@plt>
   125f8:	ldr	r4, [sp]
   125fc:	add	sp, sp, #4
   12600:	pop	{pc}		; (ldr pc, [sp], #4)

00012604 <vetor_atribui@@Base>:
   12604:	cmp	r0, #0
   12608:	lsrne	r3, r1, #31
   1260c:	moveq	r3, #1
   12610:	cmp	r3, #0
   12614:	bne	12634 <vetor_atribui@@Base+0x30>
   12618:	ldr	r3, [r0]
   1261c:	cmp	r3, r1
   12620:	ble	12634 <vetor_atribui@@Base+0x30>
   12624:	ldr	r3, [r0, #8]
   12628:	mov	r0, r1
   1262c:	str	r2, [r3, r1, lsl #2]
   12630:	bx	lr
   12634:	mvn	r0, #0
   12638:	bx	lr

0001263c <vetor_tamanho@@Base>:
   1263c:	cmp	r0, #0
   12640:	ldrne	r0, [r0]
   12644:	mvneq	r0, #0
   12648:	bx	lr

0001264c <vetor_elemento@@Base>:
   1264c:	cmp	r0, #0
   12650:	lsrne	r3, r1, #31
   12654:	moveq	r3, #1
   12658:	cmp	r3, #0
   1265c:	bne	12678 <vetor_elemento@@Base+0x2c>
   12660:	ldr	r3, [r0]
   12664:	cmp	r3, r1
   12668:	ble	12678 <vetor_elemento@@Base+0x2c>
   1266c:	ldr	r3, [r0, #8]
   12670:	ldr	r0, [r3, r1, lsl #2]
   12674:	bx	lr
   12678:	mov	r0, #-2147483648	; 0x80000000
   1267c:	bx	lr

00012680 <vetor_insere@@Base>:
   12680:	cmn	r2, #1
   12684:	movge	r3, #0
   12688:	movlt	r3, #1
   1268c:	cmp	r0, #0
   12690:	moveq	r3, #1
   12694:	cmp	r3, #0
   12698:	bne	12750 <vetor_insere@@Base+0xd0>
   1269c:	strd	r4, [sp, #-16]!
   126a0:	mov	r4, r2
   126a4:	mov	r5, r0
   126a8:	str	r6, [sp, #8]
   126ac:	mov	r6, r1
   126b0:	ldr	r1, [r0]
   126b4:	str	lr, [sp, #12]
   126b8:	cmp	r1, r2
   126bc:	blt	12748 <vetor_insere@@Base+0xc8>
   126c0:	ldr	r3, [r0, #4]
   126c4:	cmn	r2, #1
   126c8:	moveq	r4, r1
   126cc:	ldr	r0, [r0, #8]
   126d0:	cmp	r1, r3
   126d4:	beq	12718 <vetor_insere@@Base+0x98>
   126d8:	cmp	r4, r1
   126dc:	addlt	r3, r0, r1, lsl #2
   126e0:	addlt	r2, r0, r4, lsl #2
   126e4:	bge	126f8 <vetor_insere@@Base+0x78>
   126e8:	ldr	ip, [r3, #-4]
   126ec:	str	ip, [r3], #-4
   126f0:	cmp	r3, r2
   126f4:	bne	126e8 <vetor_insere@@Base+0x68>
   126f8:	add	r1, r1, #1
   126fc:	str	r6, [r0, r4, lsl #2]
   12700:	mov	r0, r4
   12704:	str	r1, [r5]
   12708:	ldrd	r4, [sp]
   1270c:	ldr	r6, [sp, #8]
   12710:	add	sp, sp, #12
   12714:	pop	{pc}		; (ldr pc, [sp], #4)
   12718:	cmp	r1, #0
   1271c:	lslne	r3, r1, #1
   12720:	moveq	r3, #1
   12724:	moveq	r1, #4
   12728:	lslne	r1, r1, #3
   1272c:	str	r3, [r5, #4]
   12730:	bl	10ac4 <realloc@plt>
   12734:	cmp	r0, #0
   12738:	str	r0, [r5, #8]
   1273c:	beq	12748 <vetor_insere@@Base+0xc8>
   12740:	ldr	r1, [r5]
   12744:	b	126d8 <vetor_insere@@Base+0x58>
   12748:	mvn	r0, #0
   1274c:	b	12708 <vetor_insere@@Base+0x88>
   12750:	mvn	r0, #0
   12754:	bx	lr

00012758 <vetor_remove@@Base>:
   12758:	cmp	r0, #0
   1275c:	lsrne	r3, r1, #31
   12760:	moveq	r3, #1
   12764:	cmp	r3, #0
   12768:	bne	12864 <vetor_remove@@Base+0x10c>
   1276c:	strd	r4, [sp, #-20]!	; 0xffffffec
   12770:	strd	r6, [sp, #8]
   12774:	str	lr, [sp, #16]
   12778:	ldr	lr, [r0]
   1277c:	cmp	lr, r1
   12780:	ble	12870 <vetor_remove@@Base+0x118>
   12784:	add	r6, r1, #1
   12788:	cmp	lr, r6
   1278c:	ble	12828 <vetor_remove@@Base+0xd0>
   12790:	ldr	ip, [r0, #8]
   12794:	lsl	r2, r6, #2
   12798:	sub	r4, lr, r1
   1279c:	sub	r7, r4, #2
   127a0:	sub	r3, r2, #4
   127a4:	add	r4, r2, #8
   127a8:	add	r5, r2, #4
   127ac:	cmp	r5, r2
   127b0:	cmpgt	r4, r3
   127b4:	add	r3, ip, r3
   127b8:	add	r5, ip, r2
   127bc:	movle	r4, #1
   127c0:	movgt	r4, #0
   127c4:	orr	r5, r3, r5
   127c8:	cmp	r7, #3
   127cc:	movls	r4, #0
   127d0:	andhi	r4, r4, #1
   127d4:	tst	r5, #7
   127d8:	movne	r4, #0
   127dc:	cmp	r4, #0
   127e0:	beq	12848 <vetor_remove@@Base+0xf0>
   127e4:	mvn	r1, r1
   127e8:	sub	r2, r2, #8
   127ec:	add	r1, r1, lr
   127f0:	add	r2, ip, r2
   127f4:	lsr	r7, r1, #1
   127f8:	add	r7, r3, r7, lsl #3
   127fc:	ldrd	r4, [r2, #8]!
   12800:	strd	r4, [r3], #8
   12804:	cmp	r3, r7
   12808:	bne	127fc <vetor_remove@@Base+0xa4>
   1280c:	bic	r2, r1, #1
   12810:	cmp	r1, r2
   12814:	add	r3, r2, r6
   12818:	beq	12828 <vetor_remove@@Base+0xd0>
   1281c:	ldr	r2, [ip, r3, lsl #2]
   12820:	add	r3, ip, r3, lsl #2
   12824:	str	r2, [r3, #-4]
   12828:	sub	lr, lr, #1
   1282c:	mov	r3, #0
   12830:	str	lr, [r0]
   12834:	ldrd	r4, [sp]
   12838:	mov	r0, r3
   1283c:	ldrd	r6, [sp, #8]
   12840:	add	sp, sp, #16
   12844:	pop	{pc}		; (ldr pc, [sp], #4)
   12848:	sub	ip, ip, #4
   1284c:	add	ip, ip, lr, lsl #2
   12850:	ldr	r2, [r3, #4]
   12854:	str	r2, [r3], #4
   12858:	cmp	r3, ip
   1285c:	bne	12850 <vetor_remove@@Base+0xf8>
   12860:	b	12828 <vetor_remove@@Base+0xd0>
   12864:	mvn	r3, #0
   12868:	mov	r0, r3
   1286c:	bx	lr
   12870:	mvn	r3, #0
   12874:	b	12834 <vetor_remove@@Base+0xdc>

00012878 <vetor_pesquisa@@Base>:
   12878:	cmp	r0, #0
   1287c:	beq	128bc <vetor_pesquisa@@Base+0x44>
   12880:	ldr	ip, [r0]
   12884:	cmp	ip, #0
   12888:	ble	128bc <vetor_pesquisa@@Base+0x44>
   1288c:	ldr	r3, [r0, #8]
   12890:	mov	r0, #0
   12894:	ldr	r2, [r3]
   12898:	cmp	r1, r2
   1289c:	bne	128b0 <vetor_pesquisa@@Base+0x38>
   128a0:	b	128c4 <vetor_pesquisa@@Base+0x4c>
   128a4:	ldr	r2, [r3, #4]!
   128a8:	cmp	r2, r1
   128ac:	beq	128c4 <vetor_pesquisa@@Base+0x4c>
   128b0:	add	r0, r0, #1
   128b4:	cmp	ip, r0
   128b8:	bne	128a4 <vetor_pesquisa@@Base+0x2c>
   128bc:	mvn	r0, #0
   128c0:	bx	lr
   128c4:	bx	lr

000128c8 <vetor_ordena@@Base>:
   128c8:	cmp	r0, #0
   128cc:	beq	12948 <vetor_ordena@@Base+0x80>
   128d0:	strd	r4, [sp, #-16]!
   128d4:	ldr	r5, [r0]
   128d8:	str	r6, [sp, #8]
   128dc:	str	lr, [sp, #12]
   128e0:	cmp	r5, #1
   128e4:	ble	12934 <vetor_ordena@@Base+0x6c>
   128e8:	ldr	r6, [r0, #8]
   128ec:	mov	lr, #1
   128f0:	mov	r4, r6
   128f4:	ldr	ip, [r4, #4]!
   128f8:	mov	r2, lr
   128fc:	mov	r3, r4
   12900:	ldr	r1, [r3, #-4]
   12904:	mov	r0, r3
   12908:	cmp	r1, ip
   1290c:	ble	12924 <vetor_ordena@@Base+0x5c>
   12910:	subs	r2, r2, #1
   12914:	str	r1, [r3]
   12918:	sub	r3, r0, #4
   1291c:	bne	12900 <vetor_ordena@@Base+0x38>
   12920:	mov	r0, r6
   12924:	add	lr, lr, #1
   12928:	str	ip, [r0]
   1292c:	cmp	lr, r5
   12930:	bne	128f4 <vetor_ordena@@Base+0x2c>
   12934:	ldrd	r4, [sp]
   12938:	mov	r0, #0
   1293c:	ldr	r6, [sp, #8]
   12940:	add	sp, sp, #12
   12944:	pop	{pc}		; (ldr pc, [sp], #4)
   12948:	mvn	r0, #0
   1294c:	bx	lr

00012950 <__libc_csu_init@@Base>:
   12950:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12954:	mov	r7, r0
   12958:	ldr	r6, [pc, #72]	; 129a8 <__libc_csu_init@@Base+0x58>
   1295c:	ldr	r5, [pc, #72]	; 129ac <__libc_csu_init@@Base+0x5c>
   12960:	add	r6, pc, r6
   12964:	add	r5, pc, r5
   12968:	sub	r6, r6, r5
   1296c:	mov	r8, r1
   12970:	mov	r9, r2
   12974:	bl	10a80 <calloc@plt-0x20>
   12978:	asrs	r6, r6, #2
   1297c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12980:	mov	r4, #0
   12984:	add	r4, r4, #1
   12988:	ldr	r3, [r5], #4
   1298c:	mov	r2, r9
   12990:	mov	r1, r8
   12994:	mov	r0, r7
   12998:	blx	r3
   1299c:	cmp	r6, r4
   129a0:	bne	12984 <__libc_csu_init@@Base+0x34>
   129a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   129a8:	andeq	r1, r1, ip, lsr #11
   129ac:	andeq	r1, r1, r4, lsr #11

000129b0 <__libc_csu_fini@@Base>:
   129b0:	bx	lr

Disassembly of section .fini:

000129b4 <.fini>:
   129b4:	push	{r3, lr}
   129b8:	pop	{r3, pc}
