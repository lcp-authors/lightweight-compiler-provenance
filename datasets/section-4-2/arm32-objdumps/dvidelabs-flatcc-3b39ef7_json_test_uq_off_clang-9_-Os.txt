
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf32-littlearm


Disassembly of section .init:

00014e0c <.init>:
   14e0c:	push	{r3, lr}
   14e10:	bl	14f8c <_start@@Base+0x3c>
   14e14:	pop	{r3, pc}

Disassembly of section .plt:

00014e18 <raise@plt-0x14>:
   14e18:	push	{lr}		; (str lr, [sp, #-4]!)
   14e1c:	ldr	lr, [pc, #4]	; 14e28 <raise@plt-0x4>
   14e20:	add	lr, pc, lr
   14e24:	ldr	pc, [lr, #8]!
   14e28:	ldrdeq	r3, [r4], -r8

00014e2c <raise@plt>:
   14e2c:	add	ip, pc, #0, 12
   14e30:	add	ip, ip, #274432	; 0x43000
   14e34:	ldr	pc, [ip, #472]!	; 0x1d8

00014e38 <strcmp@plt>:
   14e38:	add	ip, pc, #0, 12
   14e3c:	add	ip, ip, #274432	; 0x43000
   14e40:	ldr	pc, [ip, #464]!	; 0x1d0

00014e44 <memmove@plt>:
   14e44:	add	ip, pc, #0, 12
   14e48:	add	ip, ip, #274432	; 0x43000
   14e4c:	ldr	pc, [ip, #456]!	; 0x1c8

00014e50 <free@plt>:
   14e50:	add	ip, pc, #0, 12
   14e54:	add	ip, ip, #274432	; 0x43000
   14e58:	ldr	pc, [ip, #448]!	; 0x1c0

00014e5c <memcpy@plt>:
   14e5c:	add	ip, pc, #0, 12
   14e60:	add	ip, ip, #274432	; 0x43000
   14e64:	ldr	pc, [ip, #440]!	; 0x1b8

00014e68 <__isinff@plt>:
   14e68:	add	ip, pc, #0, 12
   14e6c:	add	ip, ip, #274432	; 0x43000
   14e70:	ldr	pc, [ip, #432]!	; 0x1b0

00014e74 <__isinf@plt>:
   14e74:	add	ip, pc, #0, 12
   14e78:	add	ip, ip, #274432	; 0x43000
   14e7c:	ldr	pc, [ip, #424]!	; 0x1a8

00014e80 <realloc@plt>:
   14e80:	add	ip, pc, #0, 12
   14e84:	add	ip, ip, #274432	; 0x43000
   14e88:	ldr	pc, [ip, #416]!	; 0x1a0

00014e8c <fwrite@plt>:
   14e8c:	add	ip, pc, #0, 12
   14e90:	add	ip, ip, #274432	; 0x43000
   14e94:	ldr	pc, [ip, #408]!	; 0x198

00014e98 <malloc@plt>:
   14e98:	add	ip, pc, #0, 12
   14e9c:	add	ip, ip, #274432	; 0x43000
   14ea0:	ldr	pc, [ip, #400]!	; 0x190

00014ea4 <__libc_start_main@plt>:
   14ea4:	add	ip, pc, #0, 12
   14ea8:	add	ip, ip, #274432	; 0x43000
   14eac:	ldr	pc, [ip, #392]!	; 0x188

00014eb0 <__gmon_start__@plt>:
   14eb0:	add	ip, pc, #0, 12
   14eb4:	add	ip, ip, #274432	; 0x43000
   14eb8:	ldr	pc, [ip, #384]!	; 0x180

00014ebc <bcmp@plt>:
   14ebc:	add	ip, pc, #0, 12
   14ec0:	add	ip, ip, #274432	; 0x43000
   14ec4:	ldr	pc, [ip, #376]!	; 0x178

00014ec8 <strlen@plt>:
   14ec8:	add	ip, pc, #0, 12
   14ecc:	add	ip, ip, #274432	; 0x43000
   14ed0:	ldr	pc, [ip, #368]!	; 0x170

00014ed4 <fprintf@plt>:
   14ed4:	add	ip, pc, #0, 12
   14ed8:	add	ip, ip, #274432	; 0x43000
   14edc:	ldr	pc, [ip, #360]!	; 0x168

00014ee0 <posix_memalign@plt>:
   14ee0:	add	ip, pc, #0, 12
   14ee4:	add	ip, ip, #274432	; 0x43000
   14ee8:	ldr	pc, [ip, #352]!	; 0x160

00014eec <memset@plt>:
   14eec:	add	ip, pc, #0, 12
   14ef0:	add	ip, ip, #274432	; 0x43000
   14ef4:	ldr	pc, [ip, #344]!	; 0x158

00014ef8 <strncpy@plt>:
   14ef8:	add	ip, pc, #0, 12
   14efc:	add	ip, ip, #274432	; 0x43000
   14f00:	ldr	pc, [ip, #336]!	; 0x150

00014f04 <strtod@plt>:
   14f04:	add	ip, pc, #0, 12
   14f08:	add	ip, ip, #274432	; 0x43000
   14f0c:	ldr	pc, [ip, #328]!	; 0x148

00014f10 <memchr@plt>:
   14f10:	add	ip, pc, #0, 12
   14f14:	add	ip, ip, #274432	; 0x43000
   14f18:	ldr	pc, [ip, #320]!	; 0x140

00014f1c <fputc@plt>:
   14f1c:	add	ip, pc, #0, 12
   14f20:	add	ip, ip, #274432	; 0x43000
   14f24:	ldr	pc, [ip, #312]!	; 0x138

00014f28 <sprintf@plt>:
   14f28:	add	ip, pc, #0, 12
   14f2c:	add	ip, ip, #274432	; 0x43000
   14f30:	ldr	pc, [ip, #304]!	; 0x130

00014f34 <abort@plt>:
   14f34:	add	ip, pc, #0, 12
   14f38:	add	ip, ip, #274432	; 0x43000
   14f3c:	ldr	pc, [ip, #296]!	; 0x128

00014f40 <__assert_fail@plt>:
   14f40:	add	ip, pc, #0, 12
   14f44:	add	ip, ip, #274432	; 0x43000
   14f48:	ldr	pc, [ip, #288]!	; 0x120

Disassembly of section .text:

00014f50 <_start@@Base>:
   14f50:	mov	fp, #0
   14f54:	mov	lr, #0
   14f58:	pop	{r1}		; (ldr r1, [sp], #4)
   14f5c:	mov	r2, sp
   14f60:	push	{r2}		; (str r2, [sp, #-4]!)
   14f64:	push	{r0}		; (str r0, [sp, #-4]!)
   14f68:	ldr	ip, [pc, #16]	; 14f80 <_start@@Base+0x30>
   14f6c:	push	{ip}		; (str ip, [sp, #-4]!)
   14f70:	ldr	r0, [pc, #12]	; 14f84 <_start@@Base+0x34>
   14f74:	ldr	r3, [pc, #12]	; 14f88 <_start@@Base+0x38>
   14f78:	bl	14ea4 <__libc_start_main@plt>
   14f7c:	bl	14f34 <abort@plt>
   14f80:	ldrdeq	r0, [r4], -r4
   14f84:	andeq	r5, r1, r4, lsr sp
   14f88:	andeq	r0, r4, r4, ror pc
   14f8c:	ldr	r3, [pc, #20]	; 14fa8 <_start@@Base+0x58>
   14f90:	ldr	r2, [pc, #20]	; 14fac <_start@@Base+0x5c>
   14f94:	add	r3, pc, r3
   14f98:	ldr	r2, [r3, r2]
   14f9c:	cmp	r2, #0
   14fa0:	bxeq	lr
   14fa4:	b	14eb0 <__gmon_start__@plt>
   14fa8:	andeq	r3, r4, r4, rrx
   14fac:	andeq	r0, r0, ip, rrx
   14fb0:	ldr	r0, [pc, #24]	; 14fd0 <_start@@Base+0x80>
   14fb4:	ldr	r3, [pc, #24]	; 14fd4 <_start@@Base+0x84>
   14fb8:	cmp	r3, r0
   14fbc:	bxeq	lr
   14fc0:	ldr	r3, [pc, #16]	; 14fd8 <_start@@Base+0x88>
   14fc4:	cmp	r3, #0
   14fc8:	bxeq	lr
   14fcc:	bx	r3
   14fd0:	andeq	r8, r5, r4, asr #6
   14fd4:	andeq	r8, r5, r4, asr #6
   14fd8:	andeq	r0, r0, r0
   14fdc:	ldr	r0, [pc, #36]	; 15008 <_start@@Base+0xb8>
   14fe0:	ldr	r1, [pc, #36]	; 1500c <_start@@Base+0xbc>
   14fe4:	sub	r1, r1, r0
   14fe8:	asr	r1, r1, #2
   14fec:	add	r1, r1, r1, lsr #31
   14ff0:	asrs	r1, r1, #1
   14ff4:	bxeq	lr
   14ff8:	ldr	r3, [pc, #16]	; 15010 <_start@@Base+0xc0>
   14ffc:	cmp	r3, #0
   15000:	bxeq	lr
   15004:	bx	r3
   15008:	andeq	r8, r5, r4, asr #6
   1500c:	andeq	r8, r5, r4, asr #6
   15010:	andeq	r0, r0, r0
   15014:	push	{r4, lr}
   15018:	ldr	r4, [pc, #24]	; 15038 <_start@@Base+0xe8>
   1501c:	ldrb	r3, [r4]
   15020:	cmp	r3, #0
   15024:	popne	{r4, pc}
   15028:	bl	14fb0 <_start@@Base+0x60>
   1502c:	mov	r3, #1
   15030:	strb	r3, [r4]
   15034:	pop	{r4, pc}
   15038:	andeq	r8, r5, r0, asr r3
   1503c:	b	14fdc <_start@@Base+0x8c>

00015040 <test_json@@Base>:
   15040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15044:	add	fp, sp, #28
   15048:	sub	sp, sp, #364	; 0x16c
   1504c:	mov	r6, r0
   15050:	add	r0, sp, #100	; 0x64
   15054:	mov	r7, r3
   15058:	mov	r9, r2
   1505c:	mov	r4, r1
   15060:	bl	2baec <flatcc_builder_init@@Base>
   15064:	add	r0, sp, #12
   15068:	mov	r1, #0
   1506c:	bl	400c8 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15070:	ldr	r0, [fp, #12]
   15074:	ldr	r5, [fp, #8]
   15078:	ldr	r8, [fp, #16]
   1507c:	uxtb	r1, r0
   15080:	tst	r0, #16
   15084:	ubfx	r2, r1, #3, #1
   15088:	strb	r2, [sp, #41]	; 0x29
   1508c:	ubfx	r2, r1, #2, #1
   15090:	strb	r2, [sp, #40]	; 0x28
   15094:	ubfx	r1, r1, #1, #1
   15098:	strb	r1, [sp, #39]	; 0x27
   1509c:	and	r1, r0, #1
   150a0:	strb	r1, [sp, #38]	; 0x26
   150a4:	movne	r1, #2
   150a8:	strbne	r1, [sp, #37]	; 0x25
   150ac:	tst	r0, #32
   150b0:	movne	r0, #0
   150b4:	strbne	r0, [sp, #39]	; 0x27
   150b8:	movwne	r0, #258	; 0x102
   150bc:	strhne	r0, [sp, #37]	; 0x25
   150c0:	mov	r0, r4
   150c4:	bl	14ec8 <strlen@plt>
   150c8:	mov	r3, r0
   150cc:	ldm	r6, {r0, r1}
   150d0:	str	r5, [sp]
   150d4:	mov	r2, r4
   150d8:	stmib	sp, {r0, r1}
   150dc:	add	r0, sp, #100	; 0x64
   150e0:	add	r1, sp, #60	; 0x3c
   150e4:	bl	3493c <flatcc_json_parser_table_as_root@@Base>
   150e8:	cmp	r0, r7
   150ec:	bne	1519c <test_json@@Base+0x15c>
   150f0:	mov	r5, #0
   150f4:	cmp	r7, #0
   150f8:	beq	15104 <test_json@@Base+0xc4>
   150fc:	mov	r4, #0
   15100:	b	15178 <test_json@@Base+0x138>
   15104:	add	r0, sp, #100	; 0x64
   15108:	sub	r1, fp, #56	; 0x38
   1510c:	bl	2f4dc <flatcc_builder_finalize_aligned_buffer@@Base>
   15110:	ldr	r2, [r6]
   15114:	ldr	r3, [r6, #12]
   15118:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1511c:	mov	r4, r0
   15120:	bl	30654 <flatcc_verify_table_as_root@@Base>
   15124:	cmp	r0, #0
   15128:	bne	15254 <test_json@@Base+0x214>
   1512c:	ldr	r0, [r6, #8]
   15130:	ldr	r3, [r6]
   15134:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15138:	add	r6, sp, #12
   1513c:	mov	r1, r4
   15140:	str	r0, [sp]
   15144:	mov	r0, r6
   15148:	bl	3f958 <flatcc_json_printer_table_as_root@@Base>
   1514c:	sub	r1, fp, #60	; 0x3c
   15150:	mov	r0, r6
   15154:	bl	401ec <flatcc_json_printer_get_buffer@@Base>
   15158:	mov	r6, r0
   1515c:	cmp	r0, #0
   15160:	beq	151d0 <test_json@@Base+0x190>
   15164:	mov	r0, r9
   15168:	mov	r1, r6
   1516c:	bl	14e38 <strcmp@plt>
   15170:	cmp	r0, #0
   15174:	bne	151d0 <test_json@@Base+0x190>
   15178:	mov	r0, r4
   1517c:	bl	2f5dc <flatcc_builder_aligned_free@@Base>
   15180:	add	r0, sp, #100	; 0x64
   15184:	bl	2bc8c <flatcc_builder_clear@@Base>
   15188:	add	r0, sp, #12
   1518c:	bl	40284 <flatcc_json_printer_clear@@Base>
   15190:	mov	r0, r5
   15194:	sub	sp, fp, #28
   15198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1519c:	movw	r6, #33608	; 0x8348
   151a0:	cmp	r7, #0
   151a4:	movt	r6, #5
   151a8:	beq	15230 <test_json@@Base+0x1f0>
   151ac:	ldr	r5, [r6]
   151b0:	cmp	r0, #0
   151b4:	bne	153ac <test_json@@Base+0x36c>
   151b8:	mov	r0, r7
   151bc:	bl	3131c <flatcc_json_parser_error_string@@Base>
   151c0:	movw	r1, #4106	; 0x100a
   151c4:	mov	r3, r0
   151c8:	movt	r1, #4
   151cc:	b	15244 <test_json@@Base+0x204>
   151d0:	movw	r7, #33608	; 0x8348
   151d4:	movw	r1, #4320	; 0x10e0
   151d8:	mov	r2, r8
   151dc:	movt	r7, #5
   151e0:	movt	r1, #4
   151e4:	ldr	r0, [r7]
   151e8:	bl	14ed4 <fprintf@plt>
   151ec:	movw	r5, #15145	; 0x3b29
   151f0:	ldr	r0, [r7]
   151f4:	mov	r2, r6
   151f8:	movt	r5, #4
   151fc:	mov	r1, r5
   15200:	bl	14ed4 <fprintf@plt>
   15204:	ldr	r3, [r7]
   15208:	movw	r0, #4373	; 0x1115
   1520c:	mov	r1, #10
   15210:	mov	r2, #1
   15214:	movt	r0, #4
   15218:	bl	14e8c <fwrite@plt>
   1521c:	ldr	r0, [r7]
   15220:	mov	r1, r5
   15224:	mov	r2, r9
   15228:	bl	14ed4 <fprintf@plt>
   1522c:	b	15284 <test_json@@Base+0x244>
   15230:	ldr	r5, [r6]
   15234:	bl	3131c <flatcc_json_parser_error_string@@Base>
   15238:	movw	r1, #4170	; 0x104a
   1523c:	mov	r3, r0
   15240:	movt	r1, #4
   15244:	mov	r0, r5
   15248:	mov	r2, r8
   1524c:	bl	14ed4 <fprintf@plt>
   15250:	b	153e8 <test_json@@Base+0x3a8>
   15254:	movw	r1, #33608	; 0x8348
   15258:	movt	r1, #5
   1525c:	ldr	r5, [r1]
   15260:	bl	2fbc8 <flatcc_verify_error_string@@Base>
   15264:	movw	r1, #4206	; 0x106e
   15268:	movw	r2, #4245	; 0x1095
   1526c:	str	r0, [sp]
   15270:	mov	r0, r5
   15274:	mov	r3, r8
   15278:	movt	r1, #4
   1527c:	movt	r2, #4
   15280:	bl	14ed4 <fprintf@plt>
   15284:	mvn	r5, #0
   15288:	cmp	r4, #0
   1528c:	beq	150fc <test_json@@Base+0xbc>
   15290:	movw	r0, #33608	; 0x8348
   15294:	movw	r1, #15138	; 0x3b22
   15298:	movw	r2, #4384	; 0x1120
   1529c:	ldr	r9, [fp, #-56]	; 0xffffffc8
   152a0:	movt	r0, #5
   152a4:	movt	r1, #4
   152a8:	movt	r2, #4
   152ac:	ldr	r6, [r0]
   152b0:	mov	r0, r6
   152b4:	bl	14ed4 <fprintf@plt>
   152b8:	cmp	r9, #0
   152bc:	beq	15394 <test_json@@Base+0x354>
   152c0:	sub	r7, fp, #49	; 0x31
   152c4:	mov	r8, #0
   152c8:	ands	sl, r8, #15
   152cc:	bne	15304 <test_json@@Base+0x2c4>
   152d0:	cmp	r8, #0
   152d4:	beq	152ec <test_json@@Base+0x2ac>
   152d8:	movw	r1, #15143	; 0x3b27
   152dc:	mov	r0, r6
   152e0:	mov	r2, r7
   152e4:	movt	r1, #4
   152e8:	bl	14ed4 <fprintf@plt>
   152ec:	movw	r1, #15149	; 0x3b2d
   152f0:	mov	r0, r6
   152f4:	mov	r2, r8
   152f8:	movt	r1, #4
   152fc:	bl	14ed4 <fprintf@plt>
   15300:	b	15318 <test_json@@Base+0x2d8>
   15304:	tst	r8, #7
   15308:	bne	15318 <test_json@@Base+0x2d8>
   1530c:	mov	r0, #32
   15310:	mov	r1, r6
   15314:	bl	14f1c <fputc@plt>
   15318:	ldrb	r2, [r4, r8]
   1531c:	movw	r1, #15157	; 0x3b35
   15320:	mov	r0, r6
   15324:	movt	r1, #4
   15328:	bl	14ed4 <fprintf@plt>
   1532c:	ldrb	r0, [r4, r8]
   15330:	add	r8, r8, #1
   15334:	sub	r1, r0, #32
   15338:	uxtb	r1, r1
   1533c:	cmp	r1, #94	; 0x5e
   15340:	mov	r1, #0
   15344:	movwhi	r0, #46	; 0x2e
   15348:	cmp	r9, r8
   1534c:	strb	r0, [r7, sl]
   15350:	add	r0, r7, sl
   15354:	strb	r1, [r0, #1]
   15358:	bne	152c8 <test_json@@Base+0x288>
   1535c:	tst	r9, #15
   15360:	beq	15394 <test_json@@Base+0x354>
   15364:	movw	r8, #15163	; 0x3b3b
   15368:	add	r7, r9, #1
   1536c:	movt	r8, #4
   15370:	mov	r0, r8
   15374:	mov	r1, #3
   15378:	mov	r2, #1
   1537c:	mov	r3, r6
   15380:	bl	14e8c <fwrite@plt>
   15384:	add	r0, r7, #1
   15388:	tst	r7, #15
   1538c:	mov	r7, r0
   15390:	bne	15370 <test_json@@Base+0x330>
   15394:	movw	r1, #15143	; 0x3b27
   15398:	sub	r2, fp, #49	; 0x31
   1539c:	mov	r0, r6
   153a0:	movt	r1, #4
   153a4:	bl	14ed4 <fprintf@plt>
   153a8:	b	15178 <test_json@@Base+0x138>
   153ac:	bl	3131c <flatcc_json_parser_error_string@@Base>
   153b0:	movw	r1, #4068	; 0xfe4
   153b4:	mov	r3, r0
   153b8:	mov	r0, r5
   153bc:	mov	r2, r8
   153c0:	movt	r1, #4
   153c4:	bl	14ed4 <fprintf@plt>
   153c8:	ldr	r5, [r6]
   153cc:	mov	r0, r7
   153d0:	bl	3131c <flatcc_json_parser_error_string@@Base>
   153d4:	movw	r1, #4139	; 0x102b
   153d8:	mov	r2, r0
   153dc:	mov	r0, r5
   153e0:	movt	r1, #4
   153e4:	bl	14ed4 <fprintf@plt>
   153e8:	ldr	r0, [r6]
   153ec:	movw	r1, #15145	; 0x3b29
   153f0:	mov	r2, r4
   153f4:	movt	r1, #4
   153f8:	bl	14ed4 <fprintf@plt>
   153fc:	ldr	r0, [sp, #76]	; 0x4c
   15400:	ldr	r3, [r6]
   15404:	cmp	r0, #2
   15408:	blt	15434 <test_json@@Base+0x3f4>
   1540c:	mov	r4, #0
   15410:	mov	r0, #32
   15414:	mov	r1, r3
   15418:	bl	14f1c <fputc@plt>
   1541c:	ldr	r0, [sp, #76]	; 0x4c
   15420:	ldr	r3, [r6]
   15424:	add	r4, r4, #1
   15428:	sub	r0, r0, #1
   1542c:	cmp	r4, r0
   15430:	blt	15410 <test_json@@Base+0x3d0>
   15434:	movw	r0, #4203	; 0x106b
   15438:	mov	r1, #2
   1543c:	mov	r2, #1
   15440:	movt	r0, #4
   15444:	bl	14e8c <fwrite@plt>
   15448:	mvn	r5, #0
   1544c:	b	150fc <test_json@@Base+0xbc>

00015450 <edge_case_tests@@Base>:
   15450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15454:	add	fp, sp, #28
   15458:	sub	sp, sp, #28
   1545c:	movw	r4, #16092	; 0x3edc
   15460:	movw	r1, #4398	; 0x112e
   15464:	movw	r2, #4451	; 0x1163
   15468:	mov	r0, #158	; 0x9e
   1546c:	mov	r9, #0
   15470:	mov	r3, #0
   15474:	movt	r4, #4
   15478:	movt	r1, #4
   1547c:	movt	r2, #4
   15480:	str	r0, [sp, #8]
   15484:	str	r9, [sp]
   15488:	str	r9, [sp, #4]
   1548c:	mov	r0, r4
   15490:	bl	15040 <test_json@@Base>
   15494:	movw	r5, #4481	; 0x1181
   15498:	movw	sl, #4514	; 0x11a2
   1549c:	str	r0, [sp, #24]
   154a0:	mov	r7, #2
   154a4:	mov	r0, #168	; 0xa8
   154a8:	mov	r3, #0
   154ac:	movt	r5, #4
   154b0:	movt	sl, #4
   154b4:	stm	sp, {r7, r9}
   154b8:	str	r0, [sp, #8]
   154bc:	mov	r0, r4
   154c0:	mov	r1, r5
   154c4:	mov	r2, sl
   154c8:	bl	15040 <test_json@@Base>
   154cc:	movw	r1, #4548	; 0x11c4
   154d0:	movw	r2, #4587	; 0x11eb
   154d4:	str	r0, [sp, #20]
   154d8:	mov	r0, #172	; 0xac
   154dc:	mov	r3, #0
   154e0:	str	r9, [sp]
   154e4:	str	r7, [sp, #4]
   154e8:	movt	r1, #4
   154ec:	movt	r2, #4
   154f0:	str	r0, [sp, #8]
   154f4:	mov	r0, r4
   154f8:	bl	15040 <test_json@@Base>
   154fc:	movw	r2, #4616	; 0x1208
   15500:	str	r0, [sp, #16]
   15504:	mov	r0, #176	; 0xb0
   15508:	mov	r1, #4
   1550c:	mov	r3, #0
   15510:	str	r7, [sp]
   15514:	movt	r2, #4
   15518:	str	r1, [sp, #4]
   1551c:	str	r0, [sp, #8]
   15520:	mov	r0, r4
   15524:	mov	r1, r5
   15528:	bl	15040 <test_json@@Base>
   1552c:	mov	r1, #8
   15530:	movw	r2, #4669	; 0x123d
   15534:	str	r0, [sp, #12]
   15538:	mov	r0, #180	; 0xb4
   1553c:	mov	r3, #0
   15540:	str	r9, [sp]
   15544:	str	r1, [sp, #4]
   15548:	movw	r1, #4635	; 0x121b
   1554c:	movt	r2, #4
   15550:	str	r0, [sp, #8]
   15554:	mov	r0, r4
   15558:	movt	r1, #4
   1555c:	bl	15040 <test_json@@Base>
   15560:	movw	r1, #4943	; 0x134f
   15564:	mov	r6, r0
   15568:	mov	r0, #195	; 0xc3
   1556c:	stm	sp, {r7, r9}
   15570:	mov	r2, sl
   15574:	mov	r3, #0
   15578:	movt	r1, #4
   1557c:	str	r0, [sp, #8]
   15580:	mov	r0, r4
   15584:	bl	15040 <test_json@@Base>
   15588:	movw	r5, #4981	; 0x1375
   1558c:	movw	r2, #5031	; 0x13a7
   15590:	mov	r7, r0
   15594:	mov	r0, #199	; 0xc7
   15598:	mov	sl, #1
   1559c:	mov	r3, #0
   155a0:	str	r9, [sp, #4]
   155a4:	movt	r5, #4
   155a8:	movt	r2, #4
   155ac:	str	r0, [sp, #8]
   155b0:	mov	r0, r4
   155b4:	str	sl, [sp]
   155b8:	mov	r1, r5
   155bc:	bl	15040 <test_json@@Base>
   155c0:	movw	r2, #5058	; 0x13c2
   155c4:	mov	r8, r0
   155c8:	mov	r0, #203	; 0xcb
   155cc:	mov	r1, r5
   155d0:	mov	r3, #0
   155d4:	str	sl, [sp]
   155d8:	str	sl, [sp, #4]
   155dc:	movt	r2, #4
   155e0:	str	r0, [sp, #8]
   155e4:	mov	r0, r4
   155e8:	bl	15040 <test_json@@Base>
   155ec:	mov	r1, #209	; 0xd1
   155f0:	ldr	r2, [sp, #20]
   155f4:	mov	r3, #0
   155f8:	str	sl, [sp]
   155fc:	str	r9, [sp, #4]
   15600:	str	r1, [sp, #8]
   15604:	ldr	r1, [sp, #24]
   15608:	orr	r1, r2, r1
   1560c:	ldr	r2, [sp, #16]
   15610:	orr	r1, r1, r2
   15614:	ldr	r2, [sp, #12]
   15618:	orr	r1, r1, r2
   1561c:	movw	r2, #5031	; 0x13a7
   15620:	orr	r1, r1, r6
   15624:	movt	r2, #4
   15628:	orr	r1, r1, r7
   1562c:	orr	r1, r1, r8
   15630:	orr	r5, r1, r0
   15634:	movw	r1, #5081	; 0x13d9
   15638:	mov	r0, r4
   1563c:	movt	r1, #4
   15640:	bl	15040 <test_json@@Base>
   15644:	orr	r0, r5, r0
   15648:	sub	sp, fp, #28
   1564c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015650 <error_case_tests@@Base>:
   15650:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15654:	add	fp, sp, #28
   15658:	sub	sp, sp, #36	; 0x24
   1565c:	movw	r4, #16092	; 0x3edc
   15660:	movw	r1, #5194	; 0x144a
   15664:	movw	r0, #285	; 0x11d
   15668:	mov	r6, #0
   1566c:	mov	r2, #0
   15670:	mov	r3, #13
   15674:	movt	r4, #4
   15678:	movt	r1, #4
   1567c:	str	r0, [sp, #8]
   15680:	str	r6, [sp]
   15684:	str	r6, [sp, #4]
   15688:	mov	r0, r4
   1568c:	bl	15040 <test_json@@Base>
   15690:	movw	r1, #5220	; 0x1464
   15694:	str	r0, [sp, #32]
   15698:	movw	r0, #287	; 0x11f
   1569c:	mov	r2, #0
   156a0:	mov	r3, #13
   156a4:	str	r6, [sp]
   156a8:	str	r6, [sp, #4]
   156ac:	movt	r1, #4
   156b0:	str	r0, [sp, #8]
   156b4:	mov	r0, r4
   156b8:	bl	15040 <test_json@@Base>
   156bc:	movw	r1, #5317	; 0x14c5
   156c0:	str	r0, [sp, #28]
   156c4:	movw	r0, #289	; 0x121
   156c8:	mov	r2, #0
   156cc:	mov	r3, #13
   156d0:	str	r6, [sp]
   156d4:	str	r6, [sp, #4]
   156d8:	movt	r1, #4
   156dc:	str	r0, [sp, #8]
   156e0:	mov	r0, r4
   156e4:	bl	15040 <test_json@@Base>
   156e8:	movw	r1, #5411	; 0x1523
   156ec:	str	r0, [sp, #24]
   156f0:	movw	r0, #291	; 0x123
   156f4:	mov	r2, #0
   156f8:	mov	r3, #13
   156fc:	str	r6, [sp]
   15700:	str	r6, [sp, #4]
   15704:	movt	r1, #4
   15708:	str	r0, [sp, #8]
   1570c:	mov	r0, r4
   15710:	bl	15040 <test_json@@Base>
   15714:	movw	r1, #5499	; 0x157b
   15718:	str	r0, [sp, #20]
   1571c:	movw	r0, #293	; 0x125
   15720:	mov	r2, #0
   15724:	mov	r3, #13
   15728:	str	r6, [sp]
   1572c:	str	r6, [sp, #4]
   15730:	movt	r1, #4
   15734:	str	r0, [sp, #8]
   15738:	mov	r0, r4
   1573c:	bl	15040 <test_json@@Base>
   15740:	movw	r1, #5584	; 0x15d0
   15744:	str	r0, [sp, #16]
   15748:	mov	r0, #296	; 0x128
   1574c:	mov	r2, #0
   15750:	mov	r3, #13
   15754:	str	r6, [sp]
   15758:	str	r6, [sp, #4]
   1575c:	movt	r1, #4
   15760:	str	r0, [sp, #8]
   15764:	mov	r0, r4
   15768:	bl	15040 <test_json@@Base>
   1576c:	movw	r1, #5742	; 0x166e
   15770:	mov	r7, r0
   15774:	movw	r0, #299	; 0x12b
   15778:	mov	r2, #0
   1577c:	mov	r3, #13
   15780:	str	r6, [sp]
   15784:	str	r6, [sp, #4]
   15788:	movt	r1, #4
   1578c:	str	r0, [sp, #8]
   15790:	mov	r0, r4
   15794:	bl	15040 <test_json@@Base>
   15798:	movw	r1, #5897	; 0x1709
   1579c:	mov	r8, r0
   157a0:	movw	r0, #303	; 0x12f
   157a4:	mov	r2, #0
   157a8:	mov	r3, #13
   157ac:	str	r6, [sp]
   157b0:	str	r6, [sp, #4]
   157b4:	movt	r1, #4
   157b8:	str	r0, [sp, #8]
   157bc:	mov	r0, r4
   157c0:	bl	15040 <test_json@@Base>
   157c4:	movw	r1, #6096	; 0x17d0
   157c8:	mov	r9, r0
   157cc:	movw	r0, #307	; 0x133
   157d0:	mov	r2, #0
   157d4:	mov	r3, #13
   157d8:	str	r6, [sp]
   157dc:	str	r6, [sp, #4]
   157e0:	movt	r1, #4
   157e4:	str	r0, [sp, #8]
   157e8:	mov	r0, r4
   157ec:	bl	15040 <test_json@@Base>
   157f0:	movw	r1, #6295	; 0x1897
   157f4:	mov	sl, r0
   157f8:	movw	r0, #311	; 0x137
   157fc:	mov	r2, #0
   15800:	mov	r3, #5
   15804:	str	r6, [sp]
   15808:	str	r6, [sp, #4]
   1580c:	movt	r1, #4
   15810:	str	r0, [sp, #8]
   15814:	mov	r0, r4
   15818:	bl	15040 <test_json@@Base>
   1581c:	movw	r1, #6319	; 0x18af
   15820:	mov	r5, r0
   15824:	movw	r0, #314	; 0x13a
   15828:	mov	r2, #0
   1582c:	mov	r3, #5
   15830:	str	r6, [sp]
   15834:	str	r6, [sp, #4]
   15838:	movt	r1, #4
   1583c:	str	r0, [sp, #8]
   15840:	mov	r0, r4
   15844:	bl	15040 <test_json@@Base>
   15848:	movw	r1, #317	; 0x13d
   1584c:	ldr	r2, [sp, #28]
   15850:	mov	r3, #5
   15854:	str	r6, [sp]
   15858:	str	r6, [sp, #4]
   1585c:	str	r1, [sp, #8]
   15860:	ldr	r1, [sp, #32]
   15864:	orr	r1, r2, r1
   15868:	ldr	r2, [sp, #24]
   1586c:	orr	r1, r1, r2
   15870:	ldr	r2, [sp, #20]
   15874:	orr	r1, r1, r2
   15878:	ldr	r2, [sp, #16]
   1587c:	orr	r1, r1, r2
   15880:	mov	r2, #0
   15884:	orr	r1, r1, r7
   15888:	orr	r1, r1, r8
   1588c:	orr	r1, r1, r9
   15890:	orr	r1, r1, sl
   15894:	orr	r1, r1, r5
   15898:	orr	r5, r1, r0
   1589c:	movw	r1, #6357	; 0x18d5
   158a0:	mov	r0, r4
   158a4:	movt	r1, #4
   158a8:	bl	15040 <test_json@@Base>
   158ac:	orr	r0, r5, r0
   158b0:	sub	sp, fp, #28
   158b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000158b8 <base64_tests@@Base>:
   158b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158bc:	add	fp, sp, #28
   158c0:	sub	sp, sp, #20
   158c4:	movw	r4, #16092	; 0x3edc
   158c8:	movw	r1, #6413	; 0x190d
   158cc:	movw	r2, #4616	; 0x1208
   158d0:	movw	r0, #369	; 0x171
   158d4:	mov	r8, #0
   158d8:	mov	r3, #0
   158dc:	movt	r4, #4
   158e0:	movt	r1, #4
   158e4:	movt	r2, #4
   158e8:	str	r0, [sp, #8]
   158ec:	str	r8, [sp]
   158f0:	str	r8, [sp, #4]
   158f4:	mov	r0, r4
   158f8:	bl	15040 <test_json@@Base>
   158fc:	movw	r1, #6435	; 0x1923
   15900:	movw	r2, #6474	; 0x194a
   15904:	str	r0, [sp, #16]
   15908:	mov	r0, #372	; 0x174
   1590c:	mov	r3, #0
   15910:	str	r8, [sp]
   15914:	str	r8, [sp, #4]
   15918:	movt	r1, #4
   1591c:	movt	r2, #4
   15920:	str	r0, [sp, #8]
   15924:	mov	r0, r4
   15928:	bl	15040 <test_json@@Base>
   1592c:	movw	r6, #6694	; 0x1a26
   15930:	movw	r1, #6509	; 0x196d
   15934:	mov	r9, r0
   15938:	mov	r0, #376	; 0x178
   1593c:	mov	r3, #0
   15940:	str	r8, [sp]
   15944:	str	r8, [sp, #4]
   15948:	movt	r6, #4
   1594c:	movt	r1, #4
   15950:	str	r0, [sp, #8]
   15954:	mov	r0, r4
   15958:	mov	r2, r6
   1595c:	bl	15040 <test_json@@Base>
   15960:	movw	r7, #7062	; 0x1b96
   15964:	movw	r1, #6874	; 0x1ada
   15968:	mov	sl, r0
   1596c:	movw	r0, #379	; 0x17b
   15970:	mov	r3, #0
   15974:	str	r8, [sp]
   15978:	str	r8, [sp, #4]
   1597c:	movt	r7, #4
   15980:	movt	r1, #4
   15984:	str	r0, [sp, #8]
   15988:	mov	r0, r4
   1598c:	mov	r2, r7
   15990:	bl	15040 <test_json@@Base>
   15994:	movw	r1, #7245	; 0x1c4d
   15998:	mov	r5, r0
   1599c:	movw	r0, #382	; 0x17e
   159a0:	mov	r2, r6
   159a4:	mov	r3, #0
   159a8:	str	r8, [sp]
   159ac:	str	r8, [sp, #4]
   159b0:	movt	r1, #4
   159b4:	str	r0, [sp, #8]
   159b8:	mov	r0, r4
   159bc:	bl	15040 <test_json@@Base>
   159c0:	movw	r1, #7428	; 0x1d04
   159c4:	mov	r6, r0
   159c8:	movw	r0, #385	; 0x181
   159cc:	mov	r2, r7
   159d0:	mov	r3, #0
   159d4:	str	r8, [sp]
   159d8:	str	r8, [sp, #4]
   159dc:	movt	r1, #4
   159e0:	str	r0, [sp, #8]
   159e4:	mov	r0, r4
   159e8:	bl	15040 <test_json@@Base>
   159ec:	movw	r1, #7614	; 0x1dbe
   159f0:	mov	r7, r0
   159f4:	mov	r0, #388	; 0x184
   159f8:	mov	r2, #0
   159fc:	mov	r3, #31
   15a00:	str	r8, [sp]
   15a04:	str	r8, [sp, #4]
   15a08:	movt	r1, #4
   15a0c:	str	r0, [sp, #8]
   15a10:	mov	r0, r4
   15a14:	bl	15040 <test_json@@Base>
   15a18:	movw	r1, #391	; 0x187
   15a1c:	mov	r2, #0
   15a20:	mov	r3, #32
   15a24:	str	r8, [sp]
   15a28:	str	r8, [sp, #4]
   15a2c:	str	r1, [sp, #8]
   15a30:	ldr	r1, [sp, #16]
   15a34:	orr	r1, r9, r1
   15a38:	orr	r1, r1, sl
   15a3c:	orr	r1, r1, r5
   15a40:	orr	r1, r1, r6
   15a44:	orr	r1, r1, r7
   15a48:	orr	r5, r1, r0
   15a4c:	movw	r1, #7799	; 0x1e77
   15a50:	mov	r0, r4
   15a54:	movt	r1, #4
   15a58:	bl	15040 <test_json@@Base>
   15a5c:	orr	r0, r5, r0
   15a60:	sub	sp, fp, #28
   15a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015a68 <mixed_type_union_tests@@Base>:
   15a68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a6c:	add	fp, sp, #28
   15a70:	sub	sp, sp, #20
   15a74:	movw	r4, #16108	; 0x3eec
   15a78:	movw	r1, #7987	; 0x1f33
   15a7c:	movw	r2, #8066	; 0x1f82
   15a80:	mov	r0, #432	; 0x1b0
   15a84:	mov	r8, #0
   15a88:	mov	r3, #0
   15a8c:	movt	r4, #4
   15a90:	movt	r1, #4
   15a94:	movt	r2, #4
   15a98:	str	r0, [sp, #8]
   15a9c:	str	r8, [sp]
   15aa0:	str	r8, [sp, #4]
   15aa4:	mov	r0, r4
   15aa8:	bl	15040 <test_json@@Base>
   15aac:	movw	r9, #8268	; 0x204c
   15ab0:	movw	r1, #8137	; 0x1fc9
   15ab4:	str	r0, [sp, #16]
   15ab8:	movw	r0, #437	; 0x1b5
   15abc:	mov	r3, #0
   15ac0:	str	r8, [sp]
   15ac4:	str	r8, [sp, #4]
   15ac8:	movt	r9, #4
   15acc:	movt	r1, #4
   15ad0:	str	r0, [sp, #8]
   15ad4:	mov	r0, r4
   15ad8:	mov	r2, r9
   15adc:	bl	15040 <test_json@@Base>
   15ae0:	movw	r1, #8387	; 0x20c3
   15ae4:	mov	sl, r0
   15ae8:	movw	r0, #442	; 0x1ba
   15aec:	mov	r2, r9
   15af0:	mov	r3, #0
   15af4:	str	r8, [sp]
   15af8:	str	r8, [sp, #4]
   15afc:	movt	r1, #4
   15b00:	str	r0, [sp, #8]
   15b04:	mov	r0, r4
   15b08:	bl	15040 <test_json@@Base>
   15b0c:	movw	r1, #8537	; 0x2159
   15b10:	movw	r2, #8758	; 0x2236
   15b14:	mov	r5, r0
   15b18:	movw	r0, #449	; 0x1c1
   15b1c:	mov	r3, #0
   15b20:	str	r8, [sp]
   15b24:	str	r8, [sp, #4]
   15b28:	movt	r1, #4
   15b2c:	movt	r2, #4
   15b30:	str	r0, [sp, #8]
   15b34:	mov	r0, r4
   15b38:	bl	15040 <test_json@@Base>
   15b3c:	movw	r1, #8943	; 0x22ef
   15b40:	movw	r2, #9205	; 0x23f5
   15b44:	mov	r6, r0
   15b48:	movw	r0, #458	; 0x1ca
   15b4c:	mov	r3, #0
   15b50:	str	r8, [sp]
   15b54:	str	r8, [sp, #4]
   15b58:	movt	r1, #4
   15b5c:	movt	r2, #4
   15b60:	str	r0, [sp, #8]
   15b64:	mov	r0, r4
   15b68:	bl	15040 <test_json@@Base>
   15b6c:	movw	r1, #9427	; 0x24d3
   15b70:	movw	r2, #9812	; 0x2654
   15b74:	mov	r7, r0
   15b78:	movw	r0, #469	; 0x1d5
   15b7c:	mov	r3, #0
   15b80:	str	r8, [sp]
   15b84:	str	r8, [sp, #4]
   15b88:	movt	r1, #4
   15b8c:	movt	r2, #4
   15b90:	str	r0, [sp, #8]
   15b94:	mov	r0, r4
   15b98:	bl	15040 <test_json@@Base>
   15b9c:	movw	r1, #474	; 0x1da
   15ba0:	mov	r2, r9
   15ba4:	mov	r3, #0
   15ba8:	str	r8, [sp]
   15bac:	str	r8, [sp, #4]
   15bb0:	str	r1, [sp, #8]
   15bb4:	ldr	r1, [sp, #16]
   15bb8:	orr	r1, sl, r1
   15bbc:	orr	r1, r1, r5
   15bc0:	orr	r1, r1, r6
   15bc4:	orr	r1, r1, r7
   15bc8:	orr	r5, r1, r0
   15bcc:	movw	r1, #10138	; 0x279a
   15bd0:	mov	r0, r4
   15bd4:	movt	r1, #4
   15bd8:	bl	15040 <test_json@@Base>
   15bdc:	orr	r0, r5, r0
   15be0:	sub	sp, fp, #28
   15be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015be8 <union_vector_tests@@Base>:
   15be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bec:	add	fp, sp, #28
   15bf0:	sub	sp, sp, #12
   15bf4:	movw	r4, #16124	; 0x3efc
   15bf8:	movw	r8, #10343	; 0x2867
   15bfc:	movw	r1, #10279	; 0x2827
   15c00:	movw	r0, #485	; 0x1e5
   15c04:	mov	r7, #0
   15c08:	mov	r3, #0
   15c0c:	movt	r8, #4
   15c10:	movt	r4, #4
   15c14:	movt	r1, #4
   15c18:	str	r0, [sp, #8]
   15c1c:	str	r7, [sp]
   15c20:	str	r7, [sp, #4]
   15c24:	mov	r0, r4
   15c28:	mov	r2, r8
   15c2c:	bl	15040 <test_json@@Base>
   15c30:	movw	r1, #10399	; 0x289f
   15c34:	movw	r2, #10450	; 0x28d2
   15c38:	mov	r9, r0
   15c3c:	mov	r0, #488	; 0x1e8
   15c40:	mov	r3, #0
   15c44:	str	r7, [sp]
   15c48:	str	r7, [sp, #4]
   15c4c:	movt	r1, #4
   15c50:	movt	r2, #4
   15c54:	str	r0, [sp, #8]
   15c58:	mov	r0, r4
   15c5c:	bl	15040 <test_json@@Base>
   15c60:	movw	r1, #10493	; 0x28fd
   15c64:	movw	r2, #10570	; 0x294a
   15c68:	mov	sl, r0
   15c6c:	movw	r0, #491	; 0x1eb
   15c70:	mov	r3, #0
   15c74:	str	r7, [sp]
   15c78:	str	r7, [sp, #4]
   15c7c:	movt	r1, #4
   15c80:	movt	r2, #4
   15c84:	str	r0, [sp, #8]
   15c88:	mov	r0, r4
   15c8c:	bl	15040 <test_json@@Base>
   15c90:	movw	r1, #10638	; 0x298e
   15c94:	movw	r2, #10763	; 0x2a0b
   15c98:	mov	r6, r0
   15c9c:	movw	r0, #494	; 0x1ee
   15ca0:	mov	r3, #0
   15ca4:	str	r7, [sp]
   15ca8:	str	r7, [sp, #4]
   15cac:	movt	r1, #4
   15cb0:	movt	r2, #4
   15cb4:	str	r0, [sp, #8]
   15cb8:	mov	r0, r4
   15cbc:	bl	15040 <test_json@@Base>
   15cc0:	movw	r1, #10871	; 0x2a77
   15cc4:	mov	r5, r0
   15cc8:	movw	r0, #497	; 0x1f1
   15ccc:	mov	r2, r8
   15cd0:	mov	r3, #0
   15cd4:	str	r7, [sp]
   15cd8:	str	r7, [sp, #4]
   15cdc:	movt	r1, #4
   15ce0:	str	r0, [sp, #8]
   15ce4:	mov	r0, r4
   15ce8:	bl	15040 <test_json@@Base>
   15cec:	mov	r1, #500	; 0x1f4
   15cf0:	movw	r2, #11036	; 0x2b1c
   15cf4:	mov	r3, #0
   15cf8:	str	r7, [sp]
   15cfc:	str	r7, [sp, #4]
   15d00:	str	r1, [sp, #8]
   15d04:	orr	r1, sl, r9
   15d08:	movt	r2, #4
   15d0c:	orr	r1, r1, r6
   15d10:	orr	r1, r1, r5
   15d14:	orr	r5, r1, r0
   15d18:	movw	r1, #10934	; 0x2ab6
   15d1c:	mov	r0, r4
   15d20:	movt	r1, #4
   15d24:	bl	15040 <test_json@@Base>
   15d28:	orr	r0, r5, r0
   15d2c:	sub	sp, fp, #28
   15d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015d34 <main@@Base>:
   15d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d38:	add	fp, sp, #28
   15d3c:	sub	sp, sp, #164	; 0xa4
   15d40:	bl	15450 <edge_case_tests@@Base>
   15d44:	str	r0, [fp, #-32]	; 0xffffffe0
   15d48:	bl	15650 <error_case_tests@@Base>
   15d4c:	str	r0, [fp, #-36]	; 0xffffffdc
   15d50:	bl	15be8 <union_vector_tests@@Base>
   15d54:	str	r0, [fp, #-40]	; 0xffffffd8
   15d58:	bl	158b8 <base64_tests@@Base>
   15d5c:	str	r0, [fp, #-44]	; 0xffffffd4
   15d60:	bl	15a68 <mixed_type_union_tests@@Base>
   15d64:	movw	r4, #16092	; 0x3edc
   15d68:	movw	r9, #4616	; 0x1208
   15d6c:	movw	r1, #11128	; 0x2b78
   15d70:	str	r0, [fp, #-48]	; 0xffffffd0
   15d74:	movw	r0, #525	; 0x20d
   15d78:	mov	r8, #0
   15d7c:	mov	r3, #0
   15d80:	movt	r9, #4
   15d84:	movt	r4, #4
   15d88:	movt	r1, #4
   15d8c:	str	r0, [sp, #8]
   15d90:	str	r8, [sp]
   15d94:	str	r8, [sp, #4]
   15d98:	mov	r0, r4
   15d9c:	mov	r2, r9
   15da0:	bl	15040 <test_json@@Base>
   15da4:	movw	r5, #11190	; 0x2bb6
   15da8:	movw	r1, #11151	; 0x2b8f
   15dac:	str	r0, [fp, #-52]	; 0xffffffcc
   15db0:	mov	r0, #528	; 0x210
   15db4:	mov	r3, #0
   15db8:	str	r8, [sp]
   15dbc:	str	r8, [sp, #4]
   15dc0:	movt	r5, #4
   15dc4:	movt	r1, #4
   15dc8:	str	r0, [sp, #8]
   15dcc:	mov	r0, r4
   15dd0:	mov	r2, r5
   15dd4:	bl	15040 <test_json@@Base>
   15dd8:	movw	r7, #11263	; 0x2bff
   15ddc:	movw	r1, #11223	; 0x2bd7
   15de0:	str	r0, [fp, #-56]	; 0xffffffc8
   15de4:	movw	r0, #531	; 0x213
   15de8:	mov	r3, #0
   15dec:	str	r8, [sp]
   15df0:	str	r8, [sp, #4]
   15df4:	movt	r7, #4
   15df8:	movt	r1, #4
   15dfc:	str	r0, [sp, #8]
   15e00:	mov	r0, r4
   15e04:	mov	r2, r7
   15e08:	bl	15040 <test_json@@Base>
   15e0c:	movw	r6, #11347	; 0x2c53
   15e10:	movw	r1, #11298	; 0x2c22
   15e14:	str	r0, [fp, #-60]	; 0xffffffc4
   15e18:	movw	r0, #534	; 0x216
   15e1c:	mov	r3, #0
   15e20:	str	r8, [sp]
   15e24:	str	r8, [sp, #4]
   15e28:	movt	r6, #4
   15e2c:	movt	r1, #4
   15e30:	str	r0, [sp, #8]
   15e34:	mov	r0, r4
   15e38:	mov	r2, r6
   15e3c:	bl	15040 <test_json@@Base>
   15e40:	movw	r1, #11391	; 0x2c7f
   15e44:	str	r0, [fp, #-64]	; 0xffffffc0
   15e48:	movw	r0, #537	; 0x219
   15e4c:	mov	r2, r6
   15e50:	mov	r3, #0
   15e54:	str	r8, [sp]
   15e58:	str	r8, [sp, #4]
   15e5c:	movt	r1, #4
   15e60:	str	r0, [sp, #8]
   15e64:	mov	r0, r4
   15e68:	bl	15040 <test_json@@Base>
   15e6c:	movw	r1, #11449	; 0x2cb9
   15e70:	str	r0, [fp, #-68]	; 0xffffffbc
   15e74:	mov	r0, #540	; 0x21c
   15e78:	mov	r2, r5
   15e7c:	mov	r3, #0
   15e80:	str	r8, [sp]
   15e84:	str	r8, [sp, #4]
   15e88:	movt	r1, #4
   15e8c:	str	r0, [sp, #8]
   15e90:	mov	r0, r4
   15e94:	bl	15040 <test_json@@Base>
   15e98:	movw	r1, #11487	; 0x2cdf
   15e9c:	str	r0, [fp, #-72]	; 0xffffffb8
   15ea0:	movw	r0, #543	; 0x21f
   15ea4:	mov	r2, r7
   15ea8:	mov	r3, #0
   15eac:	str	r8, [sp]
   15eb0:	str	r8, [sp, #4]
   15eb4:	movt	r1, #4
   15eb8:	str	r0, [sp, #8]
   15ebc:	mov	r0, r4
   15ec0:	bl	15040 <test_json@@Base>
   15ec4:	movw	r1, #11528	; 0x2d08
   15ec8:	str	r0, [fp, #-76]	; 0xffffffb4
   15ecc:	movw	r0, #547	; 0x223
   15ed0:	mov	r2, r9
   15ed4:	mov	r3, #0
   15ed8:	str	r8, [sp]
   15edc:	str	r8, [sp, #4]
   15ee0:	movt	r1, #4
   15ee4:	str	r0, [sp, #8]
   15ee8:	mov	r0, r4
   15eec:	bl	15040 <test_json@@Base>
   15ef0:	movw	r1, #4481	; 0x1181
   15ef4:	str	r0, [fp, #-80]	; 0xffffffb0
   15ef8:	movw	r0, #551	; 0x227
   15efc:	mov	r2, r9
   15f00:	mov	r3, #0
   15f04:	str	r8, [sp]
   15f08:	str	r8, [sp, #4]
   15f0c:	movt	r1, #4
   15f10:	str	r0, [sp, #8]
   15f14:	mov	r0, r4
   15f18:	bl	15040 <test_json@@Base>
   15f1c:	movw	r1, #11567	; 0x2d2f
   15f20:	str	r0, [fp, #-84]	; 0xffffffac
   15f24:	movw	r0, #601	; 0x259
   15f28:	mov	r2, r5
   15f2c:	mov	r3, #0
   15f30:	str	r8, [sp]
   15f34:	str	r8, [sp, #4]
   15f38:	movt	r1, #4
   15f3c:	str	r0, [sp, #8]
   15f40:	mov	r0, r4
   15f44:	bl	15040 <test_json@@Base>
   15f48:	movw	r1, #11600	; 0x2d50
   15f4c:	str	r0, [fp, #-88]	; 0xffffffa8
   15f50:	mov	r0, #604	; 0x25c
   15f54:	mov	r2, r7
   15f58:	mov	r3, #0
   15f5c:	str	r8, [sp]
   15f60:	str	r8, [sp, #4]
   15f64:	movt	r1, #4
   15f68:	str	r0, [sp, #8]
   15f6c:	mov	r0, r4
   15f70:	bl	15040 <test_json@@Base>
   15f74:	movw	r1, #11633	; 0x2d71
   15f78:	movw	r2, #11666	; 0x2d92
   15f7c:	str	r0, [fp, #-92]	; 0xffffffa4
   15f80:	movw	r0, #607	; 0x25f
   15f84:	mov	r3, #0
   15f88:	str	r8, [sp]
   15f8c:	str	r8, [sp, #4]
   15f90:	movt	r1, #4
   15f94:	movt	r2, #4
   15f98:	str	r0, [sp, #8]
   15f9c:	mov	r0, r4
   15fa0:	bl	15040 <test_json@@Base>
   15fa4:	movw	r1, #11704	; 0x2db8
   15fa8:	str	r0, [sp, #96]	; 0x60
   15fac:	movw	r0, #610	; 0x262
   15fb0:	mov	r2, r6
   15fb4:	mov	r3, #0
   15fb8:	str	r8, [sp]
   15fbc:	str	r8, [sp, #4]
   15fc0:	movt	r1, #4
   15fc4:	str	r0, [sp, #8]
   15fc8:	mov	r0, r4
   15fcc:	bl	15040 <test_json@@Base>
   15fd0:	movw	r1, #11738	; 0x2dda
   15fd4:	movw	r2, #11772	; 0x2dfc
   15fd8:	str	r0, [sp, #92]	; 0x5c
   15fdc:	movw	r0, #613	; 0x265
   15fe0:	mov	r3, #0
   15fe4:	str	r8, [sp]
   15fe8:	str	r8, [sp, #4]
   15fec:	movt	r1, #4
   15ff0:	movt	r2, #4
   15ff4:	str	r0, [sp, #8]
   15ff8:	mov	r0, r4
   15ffc:	bl	15040 <test_json@@Base>
   16000:	movw	r1, #11802	; 0x2e1a
   16004:	movw	r2, #11836	; 0x2e3c
   16008:	str	r0, [sp, #88]	; 0x58
   1600c:	mov	r0, #616	; 0x268
   16010:	mov	r3, #0
   16014:	str	r8, [sp]
   16018:	str	r8, [sp, #4]
   1601c:	movt	r1, #4
   16020:	movt	r2, #4
   16024:	str	r0, [sp, #8]
   16028:	mov	r0, r4
   1602c:	bl	15040 <test_json@@Base>
   16030:	movw	r1, #11866	; 0x2e5a
   16034:	movw	r2, #11899	; 0x2e7b
   16038:	str	r0, [sp, #84]	; 0x54
   1603c:	movw	r0, #619	; 0x26b
   16040:	mov	r3, #0
   16044:	str	r8, [sp]
   16048:	str	r8, [sp, #4]
   1604c:	movt	r1, #4
   16050:	movt	r2, #4
   16054:	str	r0, [sp, #8]
   16058:	mov	r0, r4
   1605c:	bl	15040 <test_json@@Base>
   16060:	movw	r1, #11928	; 0x2e98
   16064:	str	r0, [sp, #80]	; 0x50
   16068:	movw	r0, #622	; 0x26e
   1606c:	mov	r2, r5
   16070:	mov	r3, #0
   16074:	str	r8, [sp]
   16078:	str	r8, [sp, #4]
   1607c:	movt	r1, #4
   16080:	str	r0, [sp, #8]
   16084:	mov	r0, r4
   16088:	bl	15040 <test_json@@Base>
   1608c:	movw	r1, #11971	; 0x2ec3
   16090:	str	r0, [sp, #76]	; 0x4c
   16094:	movw	r0, #625	; 0x271
   16098:	mov	r2, r5
   1609c:	mov	r3, #0
   160a0:	str	r8, [sp]
   160a4:	str	r8, [sp, #4]
   160a8:	movt	r1, #4
   160ac:	str	r0, [sp, #8]
   160b0:	mov	r0, r4
   160b4:	bl	15040 <test_json@@Base>
   160b8:	movw	r5, #12029	; 0x2efd
   160bc:	movw	r6, #12071	; 0x2f27
   160c0:	str	r0, [sp, #72]	; 0x48
   160c4:	mov	r0, #628	; 0x274
   160c8:	mov	r3, #0
   160cc:	str	r8, [sp]
   160d0:	str	r8, [sp, #4]
   160d4:	movt	r5, #4
   160d8:	movt	r6, #4
   160dc:	str	r0, [sp, #8]
   160e0:	mov	r0, r4
   160e4:	mov	r1, r5
   160e8:	mov	r2, r6
   160ec:	bl	15040 <test_json@@Base>
   160f0:	str	r0, [sp, #68]	; 0x44
   160f4:	movw	r0, #631	; 0x277
   160f8:	mov	r1, r5
   160fc:	mov	r2, r6
   16100:	mov	r3, #0
   16104:	str	r8, [sp]
   16108:	str	r8, [sp, #4]
   1610c:	str	r0, [sp, #8]
   16110:	mov	r0, r4
   16114:	bl	15040 <test_json@@Base>
   16118:	movw	r1, #12097	; 0x2f41
   1611c:	movw	r2, #12178	; 0x2f92
   16120:	str	r0, [sp, #64]	; 0x40
   16124:	movw	r0, #634	; 0x27a
   16128:	mov	r3, #0
   1612c:	str	r8, [sp]
   16130:	str	r8, [sp, #4]
   16134:	movt	r1, #4
   16138:	movt	r2, #4
   1613c:	str	r0, [sp, #8]
   16140:	mov	r0, r4
   16144:	bl	15040 <test_json@@Base>
   16148:	movw	r1, #12249	; 0x2fd9
   1614c:	movw	r2, #12334	; 0x302e
   16150:	str	r0, [sp, #60]	; 0x3c
   16154:	movw	r0, #638	; 0x27e
   16158:	mov	r3, #0
   1615c:	str	r8, [sp]
   16160:	str	r8, [sp, #4]
   16164:	movt	r1, #4
   16168:	movt	r2, #4
   1616c:	str	r0, [sp, #8]
   16170:	mov	r0, r4
   16174:	bl	15040 <test_json@@Base>
   16178:	movw	r1, #12408	; 0x3078
   1617c:	movw	r2, #12519	; 0x30e7
   16180:	str	r0, [sp, #56]	; 0x38
   16184:	movw	r0, #642	; 0x282
   16188:	mov	r3, #0
   1618c:	str	r8, [sp]
   16190:	str	r8, [sp, #4]
   16194:	movt	r1, #4
   16198:	movt	r2, #4
   1619c:	str	r0, [sp, #8]
   161a0:	mov	r0, r4
   161a4:	bl	15040 <test_json@@Base>
   161a8:	movw	r1, #12617	; 0x3149
   161ac:	str	r0, [sp, #52]	; 0x34
   161b0:	movw	r0, #646	; 0x286
   161b4:	mov	r2, r9
   161b8:	mov	r3, #0
   161bc:	str	r8, [sp]
   161c0:	str	r8, [sp, #4]
   161c4:	movt	r1, #4
   161c8:	str	r0, [sp, #8]
   161cc:	mov	r0, r4
   161d0:	bl	15040 <test_json@@Base>
   161d4:	movw	r1, #12660	; 0x3174
   161d8:	str	r0, [sp, #48]	; 0x30
   161dc:	movw	r0, #649	; 0x289
   161e0:	mov	r2, r9
   161e4:	mov	r3, #0
   161e8:	str	r8, [sp]
   161ec:	str	r8, [sp, #4]
   161f0:	movt	r1, #4
   161f4:	str	r0, [sp, #8]
   161f8:	mov	r0, r4
   161fc:	bl	15040 <test_json@@Base>
   16200:	movw	r1, #12698	; 0x319a
   16204:	movw	r2, #12807	; 0x3207
   16208:	str	r0, [sp, #44]	; 0x2c
   1620c:	mov	r0, #716	; 0x2cc
   16210:	mov	r3, #0
   16214:	str	r8, [sp]
   16218:	str	r8, [sp, #4]
   1621c:	movt	r1, #4
   16220:	movt	r2, #4
   16224:	str	r0, [sp, #8]
   16228:	mov	r0, r4
   1622c:	bl	15040 <test_json@@Base>
   16230:	movw	r1, #12901	; 0x3265
   16234:	movw	r2, #12962	; 0x32a2
   16238:	str	r0, [sp, #40]	; 0x28
   1623c:	movw	r0, #731	; 0x2db
   16240:	mov	r3, #0
   16244:	str	r8, [sp]
   16248:	str	r8, [sp, #4]
   1624c:	movt	r1, #4
   16250:	movt	r2, #4
   16254:	str	r0, [sp, #8]
   16258:	mov	r0, r4
   1625c:	bl	15040 <test_json@@Base>
   16260:	movw	r1, #13010	; 0x32d2
   16264:	movw	r2, #13036	; 0x32ec
   16268:	str	r0, [sp, #36]	; 0x24
   1626c:	movw	r0, #734	; 0x2de
   16270:	mov	r3, #0
   16274:	str	r8, [sp]
   16278:	str	r8, [sp, #4]
   1627c:	movt	r1, #4
   16280:	movt	r2, #4
   16284:	str	r0, [sp, #8]
   16288:	mov	r0, r4
   1628c:	bl	15040 <test_json@@Base>
   16290:	movw	r5, #13126	; 0x3346
   16294:	movw	r1, #13054	; 0x32fe
   16298:	str	r0, [sp, #32]
   1629c:	movw	r0, #738	; 0x2e2
   162a0:	mov	r3, #0
   162a4:	str	r8, [sp]
   162a8:	str	r8, [sp, #4]
   162ac:	movt	r5, #4
   162b0:	movt	r1, #4
   162b4:	str	r0, [sp, #8]
   162b8:	mov	r0, r4
   162bc:	mov	r2, r5
   162c0:	bl	15040 <test_json@@Base>
   162c4:	movw	r1, #13191	; 0x3387
   162c8:	str	r0, [sp, #28]
   162cc:	movw	r0, #750	; 0x2ee
   162d0:	mov	r2, r5
   162d4:	mov	r3, #0
   162d8:	str	r8, [sp]
   162dc:	str	r8, [sp, #4]
   162e0:	movt	r1, #4
   162e4:	str	r0, [sp, #8]
   162e8:	mov	r0, r4
   162ec:	bl	15040 <test_json@@Base>
   162f0:	movw	r1, #13348	; 0x3424
   162f4:	movw	r2, #13387	; 0x344b
   162f8:	str	r0, [sp, #24]
   162fc:	movw	r0, #766	; 0x2fe
   16300:	mov	r3, #0
   16304:	str	r8, [sp]
   16308:	str	r8, [sp, #4]
   1630c:	movt	r1, #4
   16310:	movt	r2, #4
   16314:	str	r0, [sp, #8]
   16318:	mov	r0, r4
   1631c:	bl	15040 <test_json@@Base>
   16320:	movw	r1, #13421	; 0x346d
   16324:	movw	r2, #13468	; 0x349c
   16328:	str	r0, [sp, #20]
   1632c:	movw	r0, #770	; 0x302
   16330:	mov	r3, #0
   16334:	str	r8, [sp]
   16338:	str	r8, [sp, #4]
   1633c:	movt	r1, #4
   16340:	movt	r2, #4
   16344:	str	r0, [sp, #8]
   16348:	mov	r0, r4
   1634c:	bl	15040 <test_json@@Base>
   16350:	movw	r1, #13510	; 0x34c6
   16354:	movw	r2, #13633	; 0x3541
   16358:	str	r0, [sp, #16]
   1635c:	mov	r0, #776	; 0x308
   16360:	mov	r3, #0
   16364:	str	r8, [sp]
   16368:	str	r8, [sp, #4]
   1636c:	movt	r1, #4
   16370:	movt	r2, #4
   16374:	str	r0, [sp, #8]
   16378:	mov	r0, r4
   1637c:	bl	15040 <test_json@@Base>
   16380:	movw	r1, #13745	; 0x35b1
   16384:	mov	r7, r0
   16388:	movw	r0, #781	; 0x30d
   1638c:	mov	r2, r9
   16390:	mov	r3, #0
   16394:	str	r8, [sp]
   16398:	str	r8, [sp, #4]
   1639c:	movt	r1, #4
   163a0:	str	r0, [sp, #8]
   163a4:	mov	r0, r4
   163a8:	bl	15040 <test_json@@Base>
   163ac:	movw	r1, #13865	; 0x3629
   163b0:	movw	r2, #13987	; 0x36a3
   163b4:	mov	r6, r0
   163b8:	movw	r0, #786	; 0x312
   163bc:	mov	r3, #0
   163c0:	str	r8, [sp]
   163c4:	str	r8, [sp, #4]
   163c8:	movt	r1, #4
   163cc:	movt	r2, #4
   163d0:	str	r0, [sp, #8]
   163d4:	mov	r0, r4
   163d8:	bl	15040 <test_json@@Base>
   163dc:	movw	r1, #14098	; 0x3712
   163e0:	movw	r2, #14237	; 0x379d
   163e4:	mov	r9, r0
   163e8:	movw	r0, #791	; 0x317
   163ec:	mov	r3, #0
   163f0:	str	r8, [sp]
   163f4:	str	r8, [sp, #4]
   163f8:	movt	r1, #4
   163fc:	movt	r2, #4
   16400:	str	r0, [sp, #8]
   16404:	mov	r0, r4
   16408:	bl	15040 <test_json@@Base>
   1640c:	movw	r1, #14363	; 0x381b
   16410:	movw	r2, #14486	; 0x3896
   16414:	mov	sl, r0
   16418:	mov	r0, #796	; 0x31c
   1641c:	mov	r3, #0
   16420:	str	r8, [sp]
   16424:	str	r8, [sp, #4]
   16428:	movt	r1, #4
   1642c:	movt	r2, #4
   16430:	str	r0, [sp, #8]
   16434:	mov	r0, r4
   16438:	bl	15040 <test_json@@Base>
   1643c:	movw	r1, #14598	; 0x3906
   16440:	movw	r2, #14736	; 0x3990
   16444:	mov	r5, r0
   16448:	movw	r0, #801	; 0x321
   1644c:	mov	r3, #0
   16450:	str	r8, [sp]
   16454:	str	r8, [sp, #4]
   16458:	movt	r1, #4
   1645c:	movt	r2, #4
   16460:	str	r0, [sp, #8]
   16464:	mov	r0, r4
   16468:	bl	15040 <test_json@@Base>
   1646c:	movw	r1, #806	; 0x326
   16470:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16474:	mov	r3, #0
   16478:	str	r8, [sp]
   1647c:	str	r8, [sp, #4]
   16480:	str	r1, [sp, #8]
   16484:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16488:	orr	r1, r2, r1
   1648c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16490:	orr	r1, r1, r2
   16494:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16498:	orr	r1, r1, r2
   1649c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   164a0:	orr	r1, r1, r2
   164a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   164a8:	orr	r1, r1, r2
   164ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   164b0:	orr	r1, r1, r2
   164b4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   164b8:	orr	r1, r1, r2
   164bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   164c0:	orr	r1, r1, r2
   164c4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   164c8:	orr	r1, r1, r2
   164cc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   164d0:	orr	r1, r1, r2
   164d4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   164d8:	orr	r1, r1, r2
   164dc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   164e0:	orr	r1, r1, r2
   164e4:	ldr	r2, [fp, #-84]	; 0xffffffac
   164e8:	orr	r1, r1, r2
   164ec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   164f0:	orr	r1, r1, r2
   164f4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   164f8:	orr	r1, r1, r2
   164fc:	ldr	r2, [sp, #96]	; 0x60
   16500:	orr	r1, r1, r2
   16504:	ldr	r2, [sp, #92]	; 0x5c
   16508:	orr	r1, r1, r2
   1650c:	ldr	r2, [sp, #88]	; 0x58
   16510:	orr	r1, r1, r2
   16514:	ldr	r2, [sp, #84]	; 0x54
   16518:	orr	r1, r1, r2
   1651c:	ldr	r2, [sp, #80]	; 0x50
   16520:	orr	r1, r1, r2
   16524:	ldr	r2, [sp, #76]	; 0x4c
   16528:	orr	r1, r1, r2
   1652c:	ldr	r2, [sp, #72]	; 0x48
   16530:	orr	r1, r1, r2
   16534:	ldr	r2, [sp, #68]	; 0x44
   16538:	orr	r1, r1, r2
   1653c:	ldr	r2, [sp, #64]	; 0x40
   16540:	orr	r1, r1, r2
   16544:	ldr	r2, [sp, #60]	; 0x3c
   16548:	orr	r1, r1, r2
   1654c:	ldr	r2, [sp, #56]	; 0x38
   16550:	orr	r1, r1, r2
   16554:	ldr	r2, [sp, #52]	; 0x34
   16558:	orr	r1, r1, r2
   1655c:	ldr	r2, [sp, #48]	; 0x30
   16560:	orr	r1, r1, r2
   16564:	ldr	r2, [sp, #44]	; 0x2c
   16568:	orr	r1, r1, r2
   1656c:	ldr	r2, [sp, #40]	; 0x28
   16570:	orr	r1, r1, r2
   16574:	ldr	r2, [sp, #36]	; 0x24
   16578:	orr	r1, r1, r2
   1657c:	ldr	r2, [sp, #32]
   16580:	orr	r1, r1, r2
   16584:	ldr	r2, [sp, #28]
   16588:	orr	r1, r1, r2
   1658c:	ldr	r2, [sp, #24]
   16590:	orr	r1, r1, r2
   16594:	ldr	r2, [sp, #20]
   16598:	orr	r1, r1, r2
   1659c:	ldr	r2, [sp, #16]
   165a0:	orr	r1, r1, r2
   165a4:	movw	r2, #15006	; 0x3a9e
   165a8:	orr	r1, r1, r7
   165ac:	movt	r2, #4
   165b0:	orr	r1, r1, r6
   165b4:	orr	r1, r1, r9
   165b8:	orr	r1, r1, sl
   165bc:	orr	r1, r1, r5
   165c0:	orr	r5, r1, r0
   165c4:	movw	r1, #14863	; 0x3a0f
   165c8:	mov	r0, r4
   165cc:	movt	r1, #4
   165d0:	bl	15040 <test_json@@Base>
   165d4:	orrs	r0, r5, r0
   165d8:	mvnne	r0, #0
   165dc:	sub	sp, fp, #28
   165e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165e8:	add	fp, sp, #28
   165ec:	sub	sp, sp, #4
   165f0:	vpush	{d8-d9}
   165f4:	sub	sp, sp, #72	; 0x48
   165f8:	mov	sl, r0
   165fc:	mov	r0, #0
   16600:	mov	r8, r1
   16604:	mov	r1, #36	; 0x24
   16608:	mov	r5, r3
   1660c:	mov	r6, r2
   16610:	str	r0, [r3]
   16614:	ldr	r0, [sl]
   16618:	bl	2d514 <flatcc_builder_start_table@@Base>
   1661c:	cmp	r0, #0
   16620:	beq	16650 <main@@Base+0x91c>
   16624:	mov	r0, sl
   16628:	mov	r1, r8
   1662c:	mov	r2, r6
   16630:	mov	r3, #33	; 0x21
   16634:	bl	3133c <flatcc_json_parser_set_error@@Base>
   16638:	mov	r7, r0
   1663c:	mov	r0, r7
   16640:	sub	sp, fp, #48	; 0x30
   16644:	vpop	{d8-d9}
   16648:	add	sp, sp, #4
   1664c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16650:	add	r0, sp, #40	; 0x28
   16654:	mov	r1, r8
   16658:	mov	r2, r6
   1665c:	mov	r3, #1
   16660:	str	r0, [sp]
   16664:	mov	r0, sl
   16668:	bl	3384c <flatcc_json_parser_prepare_unions@@Base>
   1666c:	cmp	r0, r6
   16670:	beq	16624 <main@@Base+0x8f0>
   16674:	cmp	r8, r6
   16678:	beq	166ac <main@@Base+0x978>
   1667c:	ldrb	r0, [r8]
   16680:	cmp	r0, #123	; 0x7b
   16684:	bne	166ac <main@@Base+0x978>
   16688:	add	r1, r8, #1
   1668c:	sub	r0, r6, r1
   16690:	cmp	r0, #2
   16694:	blt	16744 <main@@Base+0xa10>
   16698:	ldrb	r0, [r1]
   1669c:	cmp	r0, #32
   166a0:	bls	16734 <main@@Base+0xa00>
   166a4:	mov	r8, r1
   166a8:	b	16754 <main@@Base+0xa20>
   166ac:	mov	r0, sl
   166b0:	mov	r1, r8
   166b4:	mov	r2, r6
   166b8:	mov	r3, #21
   166bc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   166c0:	mov	r8, r0
   166c4:	ldr	r0, [sl, #20]
   166c8:	cmp	r0, #0
   166cc:	bne	16624 <main@@Base+0x8f0>
   166d0:	ldr	r0, [sl]
   166d4:	mov	r1, #3
   166d8:	bl	2dcf8 <flatcc_builder_check_required_field@@Base>
   166dc:	cmp	r0, #0
   166e0:	beq	16718 <main@@Base+0x9e4>
   166e4:	ldr	r3, [sp, #40]	; 0x28
   166e8:	mov	r0, sl
   166ec:	mov	r1, r8
   166f0:	mov	r2, r6
   166f4:	bl	338d0 <flatcc_json_parser_finalize_unions@@Base>
   166f8:	mov	r7, r0
   166fc:	ldr	r0, [sl]
   16700:	bl	2de74 <flatcc_builder_end_table@@Base>
   16704:	cmp	r0, #0
   16708:	mov	r8, r7
   1670c:	str	r0, [r5]
   16710:	bne	1663c <main@@Base+0x908>
   16714:	b	16624 <main@@Base+0x8f0>
   16718:	mov	r0, sl
   1671c:	mov	r1, r8
   16720:	mov	r2, r6
   16724:	mov	r3, #29
   16728:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1672c:	mov	r8, r0
   16730:	b	16624 <main@@Base+0x8f0>
   16734:	bne	16744 <main@@Base+0xa10>
   16738:	ldrb	r0, [r8, #2]!
   1673c:	cmp	r0, #32
   16740:	bhi	16754 <main@@Base+0xa20>
   16744:	mov	r0, sl
   16748:	mov	r2, r6
   1674c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   16750:	mov	r8, r0
   16754:	cmp	r8, r6
   16758:	mov	r2, r6
   1675c:	beq	16798 <main@@Base+0xa64>
   16760:	ldrb	r0, [r8]
   16764:	cmp	r0, #125	; 0x7d
   16768:	bne	16794 <main@@Base+0xa60>
   1676c:	add	r1, r8, #1
   16770:	sub	r0, r6, r1
   16774:	cmp	r0, #2
   16778:	blt	1f274 <main@@Base+0x9540>
   1677c:	ldrb	r0, [r1]
   16780:	cmp	r0, #32
   16784:	bhi	1f238 <main@@Base+0x9504>
   16788:	bne	1f274 <main@@Base+0x9540>
   1678c:	ldrb	r0, [r8, #2]!
   16790:	b	1f26c <main@@Base+0x9538>
   16794:	mov	r2, r8
   16798:	movw	r0, #13407	; 0x345f
   1679c:	vldr	s18, [pc, #956]	; 16b60 <main@@Base+0xe2c>
   167a0:	vmov.f32	s16, #8	; 0x40400000  3.0
   167a4:	add	r1, sp, #24
   167a8:	str	r6, [sp, #36]	; 0x24
   167ac:	movt	r0, #29494	; 0x7336
   167b0:	sub	r0, r0, #512	; 0x200
   167b4:	sub	r0, r0, #196608	; 0x30000
   167b8:	stm	r1, {r0, r5, sl}
   167bc:	cmp	r2, r6
   167c0:	mov	r8, r6
   167c4:	beq	167f4 <main@@Base+0xac0>
   167c8:	ldrb	r0, [r2]
   167cc:	cmp	r0, #34	; 0x22
   167d0:	bne	167dc <main@@Base+0xaa8>
   167d4:	add	r8, r2, #1
   167d8:	b	167f4 <main@@Base+0xac0>
   167dc:	mov	r1, r2
   167e0:	mov	r0, sl
   167e4:	mov	r2, r6
   167e8:	mov	r3, #5
   167ec:	bl	3133c <flatcc_json_parser_set_error@@Base>
   167f0:	mov	r8, r0
   167f4:	sub	r9, r6, r8
   167f8:	mov	r0, #8
   167fc:	cmp	r9, #8
   16800:	movcc	r0, r9
   16804:	sub	r2, r0, #1
   16808:	cmp	r2, #7
   1680c:	bhi	18e70 <main@@Base+0x313c>
   16810:	add	r0, pc, #32
   16814:	mov	sl, #0
   16818:	mov	ip, #0
   1681c:	mov	r7, #0
   16820:	mov	r1, #0
   16824:	mov	r3, #0
   16828:	mov	r5, #0
   1682c:	mov	r4, #0
   16830:	mov	r6, #0
   16834:	ldr	pc, [r0, r2, lsl #2]
   16838:	muleq	r1, ip, r8
   1683c:	muleq	r1, r4, r8
   16840:	andeq	r6, r1, ip, lsl #17
   16844:	andeq	r6, r1, r4, lsl #17
   16848:	andeq	r6, r1, r8, ror r8
   1684c:	andeq	r6, r1, ip, ror #16
   16850:	andeq	r6, r1, ip, asr r8
   16854:	andeq	r6, r1, r8, asr r8
   16858:	ldrb	ip, [r8, #7]
   1685c:	ldrb	r0, [r8, #6]
   16860:	mov	r7, sl
   16864:	orr	r0, ip, r0, lsl #8
   16868:	mov	sl, r0
   1686c:	ldrb	r0, [r8, #5]
   16870:	mov	r1, r7
   16874:	orr	sl, sl, r0, lsl #16
   16878:	ldrb	r0, [r8, #4]
   1687c:	mov	r3, r1
   16880:	orr	sl, sl, r0, lsl #24
   16884:	ldrb	r0, [r8, #3]
   16888:	orr	r5, r0, r3
   1688c:	ldrb	r0, [r8, #2]
   16890:	orr	r4, r5, r0, lsl #8
   16894:	ldrb	r0, [r8, #1]
   16898:	orr	r6, r4, r0, lsl #16
   1689c:	ldrb	r0, [r8]
   168a0:	movw	r1, #29281	; 0x7261
   168a4:	movw	r4, #29556	; 0x7374
   168a8:	movt	r1, #24946	; 0x6172
   168ac:	movt	r4, #29797	; 0x7465
   168b0:	subs	r1, sl, r1
   168b4:	orr	r0, r6, r0, lsl #24
   168b8:	sbcs	r1, r0, r4
   168bc:	bcs	16964 <main@@Base+0xc30>
   168c0:	movw	r1, #28004	; 0x6d64
   168c4:	movw	r2, #30309	; 0x7665
   168c8:	movt	r1, #28257	; 0x6e61
   168cc:	movt	r2, #26990	; 0x696e
   168d0:	cmp	r0, r1
   168d4:	bhi	16adc <main@@Base+0xda8>
   168d8:	movw	r1, #25975	; 0x6577
   168dc:	ldr	r6, [sp, #36]	; 0x24
   168e0:	movt	r1, #26220	; 0x666c
   168e4:	cmp	r0, r1
   168e8:	bhi	16bdc <main@@Base+0xea8>
   168ec:	movw	r1, #27759	; 0x6c6f
   168f0:	movt	r1, #25455	; 0x636f
   168f4:	eor	r2, r0, r1
   168f8:	and	r1, sl, #-16777216	; 0xff000000
   168fc:	eor	r3, r1, #1912602624	; 0x72000000
   16900:	orrs	r2, r3, r2
   16904:	beq	17414 <main@@Base+0x16e0>
   16908:	movw	r2, #25965	; 0x656d
   1690c:	ldr	sl, [sp, #32]
   16910:	eor	r1, r1, #2030043136	; 0x79000000
   16914:	movt	r2, #25966	; 0x656e
   16918:	eor	r0, r0, r2
   1691c:	orrs	r0, r1, r0
   16920:	bne	18e70 <main@@Base+0x313c>
   16924:	cmp	r9, #6
   16928:	mov	r1, r8
   1692c:	blt	18464 <main@@Base+0x2730>
   16930:	ldrb	r0, [r8, #5]
   16934:	mov	r1, r8
   16938:	cmp	r0, #34	; 0x22
   1693c:	bne	18464 <main@@Base+0x2730>
   16940:	add	r2, r8, #6
   16944:	sub	r0, r6, r2
   16948:	cmp	r0, #2
   1694c:	blt	17c58 <main@@Base+0x1f24>
   16950:	ldrb	r0, [r2]
   16954:	cmp	r0, #32
   16958:	bls	17c44 <main@@Base+0x1f10>
   1695c:	mov	r1, r2
   16960:	b	17c6c <main@@Base+0x1f38>
   16964:	movw	r1, #0
   16968:	movt	r1, #26163	; 0x6633
   1696c:	subs	r1, sl, r1
   16970:	sbcs	r1, r0, r4
   16974:	bcs	16b64 <main@@Base+0xe30>
   16978:	movw	r1, #29281	; 0x7261
   1697c:	ldr	r6, [sp, #36]	; 0x24
   16980:	movt	r1, #24946	; 0x6172
   16984:	eor	r2, sl, r1
   16988:	eor	r1, r0, r4
   1698c:	orrs	r2, r2, r1
   16990:	bne	16c48 <main@@Base+0xf14>
   16994:	add	r9, r8, #8
   16998:	mov	r0, #8
   1699c:	sub	ip, r6, r9
   169a0:	cmp	ip, #8
   169a4:	movcc	r0, ip
   169a8:	sub	r6, r0, #1
   169ac:	cmp	r6, #7
   169b0:	bhi	193a4 <main@@Base+0x3670>
   169b4:	add	r4, pc, #32
   169b8:	mov	r1, #0
   169bc:	mov	lr, #0
   169c0:	mov	sl, #0
   169c4:	mov	r5, #0
   169c8:	mov	r3, #0
   169cc:	mov	r7, #0
   169d0:	mov	r0, #0
   169d4:	mov	r2, #0
   169d8:	ldr	pc, [r4, r6, lsl #2]
   169dc:	andeq	r6, r1, r0, asr #20
   169e0:	andeq	r6, r1, r8, lsr sl
   169e4:	andeq	r6, r1, r0, lsr sl
   169e8:	andeq	r6, r1, r8, lsr #20
   169ec:	andeq	r6, r1, ip, lsl sl
   169f0:	andeq	r6, r1, r0, lsl sl
   169f4:	andeq	r6, r1, r0, lsl #20
   169f8:	strdeq	r6, [r1], -ip
   169fc:	ldrb	lr, [r8, #15]
   16a00:	ldrb	r0, [r8, #14]
   16a04:	mov	sl, r1
   16a08:	orr	r0, lr, r0, lsl #8
   16a0c:	mov	r1, r0
   16a10:	ldrb	r0, [r8, #13]
   16a14:	mov	r5, sl
   16a18:	orr	r1, r1, r0, lsl #16
   16a1c:	ldrb	r0, [r8, #12]
   16a20:	mov	r3, r5
   16a24:	orr	r1, r1, r0, lsl #24
   16a28:	ldrb	r0, [r8, #11]
   16a2c:	orr	r7, r0, r3
   16a30:	ldrb	r0, [r8, #10]
   16a34:	orr	r0, r7, r0, lsl #8
   16a38:	ldrb	r2, [r8, #9]
   16a3c:	orr	r2, r0, r2, lsl #16
   16a40:	ldrb	r0, [r9]
   16a44:	movw	r7, #26227	; 0x6673
   16a48:	movt	r7, #31087	; 0x796f
   16a4c:	orr	r2, r2, r0, lsl #24
   16a50:	movw	r0, #26989	; 0x696d
   16a54:	movt	r0, #29810	; 0x7472
   16a58:	subs	r0, r0, r1
   16a5c:	sbcs	r0, r7, r2
   16a60:	bcc	17354 <main@@Base+0x1620>
   16a64:	movw	r0, #29797	; 0x7465
   16a68:	eor	r3, r2, r7
   16a6c:	movt	r0, #28530	; 0x6f72
   16a70:	eor	r0, r1, r0
   16a74:	orrs	r0, r0, r3
   16a78:	beq	177ac <main@@Base+0x1a78>
   16a7c:	movw	r0, #27763	; 0x6c73
   16a80:	movt	r0, #28527	; 0x6f6f
   16a84:	eor	r0, r1, r0
   16a88:	movw	r1, #26210	; 0x6662
   16a8c:	movt	r1, #31087	; 0x796f
   16a90:	eor	r1, r2, r1
   16a94:	orrs	r0, r0, r1
   16a98:	bne	193a4 <main@@Base+0x3670>
   16a9c:	cmp	ip, #9
   16aa0:	blt	193a4 <main@@Base+0x3670>
   16aa4:	ldrb	r0, [r8, #16]
   16aa8:	cmp	r0, #34	; 0x22
   16aac:	bne	193a4 <main@@Base+0x3670>
   16ab0:	ldr	r4, [sp, #36]	; 0x24
   16ab4:	ldr	r5, [sp, #32]
   16ab8:	add	r1, r8, #17
   16abc:	sub	r0, r4, r1
   16ac0:	cmp	r0, #2
   16ac4:	blt	18208 <main@@Base+0x24d4>
   16ac8:	ldrb	r0, [r1]
   16acc:	cmp	r0, #32
   16ad0:	bls	181f8 <main@@Base+0x24c4>
   16ad4:	mov	r8, r1
   16ad8:	b	18218 <main@@Base+0x24e4>
   16adc:	movw	r1, #29555	; 0x7373
   16ae0:	ldr	r6, [sp, #36]	; 0x24
   16ae4:	movt	r1, #29797	; 0x7465
   16ae8:	cmp	r0, r1
   16aec:	bhi	16d08 <main@@Base+0xfd4>
   16af0:	movw	r3, #24430	; 0x5f6e
   16af4:	movw	r2, #29285	; 0x7265
   16af8:	movt	r3, #28276	; 0x6e74
   16afc:	movt	r2, #28769	; 0x7061
   16b00:	subs	r1, sl, r3
   16b04:	sbcs	r1, r0, r2
   16b08:	bcs	16e94 <main@@Base+0x1160>
   16b0c:	movw	r1, #28005	; 0x6d65
   16b10:	movt	r1, #28257	; 0x6e61
   16b14:	teq	r0, r1
   16b18:	bne	18e6c <main@@Base+0x3138>
   16b1c:	ldr	sl, [sp, #32]
   16b20:	cmp	r9, #5
   16b24:	mov	r1, r8
   16b28:	blt	18618 <main@@Base+0x28e4>
   16b2c:	ldrb	r0, [r8, #4]
   16b30:	mov	r1, r8
   16b34:	cmp	r0, #34	; 0x22
   16b38:	bne	18618 <main@@Base+0x28e4>
   16b3c:	add	r2, r8, #5
   16b40:	sub	r0, r6, r2
   16b44:	cmp	r0, #2
   16b48:	blt	17d40 <main@@Base+0x200c>
   16b4c:	ldrb	r0, [r2]
   16b50:	cmp	r0, #32
   16b54:	bls	17d2c <main@@Base+0x1ff8>
   16b58:	mov	r1, r2
   16b5c:	b	17d54 <main@@Base+0x2020>
   16b60:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   16b64:	movw	r2, #29544	; 0x7368
   16b68:	ldr	r6, [sp, #36]	; 0x24
   16b6c:	movt	r2, #26721	; 0x6861
   16b70:	subs	r1, sl, r2
   16b74:	sbcs	r1, r0, r4
   16b78:	bcs	16d5c <main@@Base+0x1028>
   16b7c:	movw	r1, #0
   16b80:	bfc	sl, #0, #16
   16b84:	eor	r0, r0, r4
   16b88:	movt	r1, #26163	; 0x6633
   16b8c:	eor	r1, sl, r1
   16b90:	orrs	r0, r1, r0
   16b94:	bne	18e6c <main@@Base+0x3138>
   16b98:	ldr	sl, [sp, #32]
   16b9c:	cmp	r9, #7
   16ba0:	mov	r7, r8
   16ba4:	blt	17f1c <main@@Base+0x21e8>
   16ba8:	ldrb	r0, [r8, #6]
   16bac:	mov	r7, r8
   16bb0:	cmp	r0, #34	; 0x22
   16bb4:	bne	17f1c <main@@Base+0x21e8>
   16bb8:	add	r1, r8, #7
   16bbc:	sub	r0, r6, r1
   16bc0:	cmp	r0, #2
   16bc4:	blt	17b70 <main@@Base+0x1e3c>
   16bc8:	ldrb	r0, [r1]
   16bcc:	cmp	r0, #32
   16bd0:	bls	17b5c <main@@Base+0x1e28>
   16bd4:	mov	r7, r1
   16bd8:	b	17b80 <main@@Base+0x1e4c>
   16bdc:	movw	r1, #65535	; 0xffff
   16be0:	movw	r3, #28530	; 0x6f72
   16be4:	movt	r1, #26735	; 0x686f
   16be8:	movt	r3, #28276	; 0x6e74
   16bec:	cmp	r0, r1
   16bf0:	bhi	17060 <main@@Base+0x132c>
   16bf4:	movw	r1, #25976	; 0x6578
   16bf8:	movt	r1, #26220	; 0x666c
   16bfc:	teq	r0, r1
   16c00:	bne	18e6c <main@@Base+0x3138>
   16c04:	ldr	sl, [sp, #32]
   16c08:	cmp	r9, #5
   16c0c:	mov	r9, r8
   16c10:	blt	1866c <main@@Base+0x2938>
   16c14:	ldrb	r0, [r8, #4]
   16c18:	mov	r9, r8
   16c1c:	cmp	r0, #34	; 0x22
   16c20:	bne	1866c <main@@Base+0x2938>
   16c24:	add	r1, r8, #5
   16c28:	sub	r0, r6, r1
   16c2c:	cmp	r0, #2
   16c30:	blt	17db4 <main@@Base+0x2080>
   16c34:	ldrb	r0, [r1]
   16c38:	cmp	r0, #32
   16c3c:	bls	17da0 <main@@Base+0x206c>
   16c40:	mov	r9, r1
   16c44:	b	17dc4 <main@@Base+0x2090>
   16c48:	movw	r2, #28788	; 0x7074
   16c4c:	movt	r2, #25965	; 0x656d
   16c50:	subs	r2, sl, r2
   16c54:	sbcs	r2, r0, r4
   16c58:	bcs	170c4 <main@@Base+0x1390>
   16c5c:	movw	r0, #28524	; 0x6f6c
   16c60:	movt	r0, #25199	; 0x626f
   16c64:	eor	r0, sl, r0
   16c68:	orrs	r0, r0, r1
   16c6c:	beq	17768 <main@@Base+0x1a34>
   16c70:	movw	r0, #29541	; 0x7365
   16c74:	movt	r0, #25185	; 0x6261
   16c78:	eor	r0, sl, r0
   16c7c:	orrs	r0, r0, r1
   16c80:	bne	18e6c <main@@Base+0x3138>
   16c84:	add	r7, r8, #8
   16c88:	ldr	sl, [sp, #32]
   16c8c:	mov	r2, #8
   16c90:	sub	r0, r6, r7
   16c94:	cmp	r0, #8
   16c98:	movcc	r2, r0
   16c9c:	sub	r1, r2, #2
   16ca0:	cmp	r1, #7
   16ca4:	bcs	17af4 <main@@Base+0x1dc0>
   16ca8:	ldrb	r1, [r8, #9]
   16cac:	lsl	r2, r1, #16
   16cb0:	mov	r1, #0
   16cb4:	ldrb	r3, [r7]
   16cb8:	orr	r2, r2, r3, lsl #24
   16cbc:	movw	r3, #0
   16cc0:	movt	r3, #13876	; 0x3634
   16cc4:	eor	r2, r2, r3
   16cc8:	orrs	r1, r1, r2
   16ccc:	bne	1e1d0 <main@@Base+0x849c>
   16cd0:	cmp	r0, #3
   16cd4:	blt	1e1d0 <main@@Base+0x849c>
   16cd8:	ldrb	r0, [r8, #10]
   16cdc:	cmp	r0, #34	; 0x22
   16ce0:	bne	1e1d0 <main@@Base+0x849c>
   16ce4:	add	r1, r8, #11
   16ce8:	sub	r0, r6, r1
   16cec:	cmp	r0, #2
   16cf0:	blt	18acc <main@@Base+0x2d98>
   16cf4:	ldrb	r0, [r1]
   16cf8:	cmp	r0, #32
   16cfc:	bls	18abc <main@@Base+0x2d88>
   16d00:	mov	r8, r1
   16d04:	b	18adc <main@@Base+0x2da8>
   16d08:	and	r5, sl, #-16777216	; 0xff000000
   16d0c:	eor	r7, r0, r4
   16d10:	eor	r1, r5, #872415232	; 0x34000000
   16d14:	orrs	r1, r1, r7
   16d18:	bne	17150 <main@@Base+0x141c>
   16d1c:	cmp	r9, #6
   16d20:	mov	r9, r8
   16d24:	blt	17fdc <main@@Base+0x22a8>
   16d28:	ldrb	r0, [r8, #5]
   16d2c:	mov	r9, r8
   16d30:	cmp	r0, #34	; 0x22
   16d34:	bne	17fdc <main@@Base+0x22a8>
   16d38:	add	r1, r8, #6
   16d3c:	sub	r0, r6, r1
   16d40:	cmp	r0, #2
   16d44:	blt	17be4 <main@@Base+0x1eb0>
   16d48:	ldrb	r0, [r1]
   16d4c:	cmp	r0, #32
   16d50:	bls	17bd0 <main@@Base+0x1e9c>
   16d54:	mov	r9, r1
   16d58:	b	17bf4 <main@@Base+0x1ec0>
   16d5c:	eor	r2, sl, r2
   16d60:	eor	r1, r0, r4
   16d64:	orrs	r2, r2, r1
   16d68:	bne	17198 <main@@Base+0x1464>
   16d6c:	add	r9, r8, #8
   16d70:	mov	r0, #8
   16d74:	sub	ip, r6, r9
   16d78:	cmp	ip, #8
   16d7c:	movcc	r0, ip
   16d80:	sub	r6, r0, #1
   16d84:	cmp	r6, #7
   16d88:	bhi	193a4 <main@@Base+0x3670>
   16d8c:	add	r4, pc, #32
   16d90:	mov	r1, #0
   16d94:	mov	lr, #0
   16d98:	mov	sl, #0
   16d9c:	mov	r5, #0
   16da0:	mov	r3, #0
   16da4:	mov	r7, #0
   16da8:	mov	r0, #0
   16dac:	mov	r2, #0
   16db0:	ldr	pc, [r4, r6, lsl #2]
   16db4:	andeq	r6, r1, r8, lsl lr
   16db8:	andeq	r6, r1, r0, lsl lr
   16dbc:	andeq	r6, r1, r8, lsl #28
   16dc0:	andeq	r6, r1, r0, lsl #28
   16dc4:	strdeq	r6, [r1], -r4
   16dc8:	andeq	r6, r1, r8, ror #27
   16dcc:	ldrdeq	r6, [r1], -r8
   16dd0:	ldrdeq	r6, [r1], -r4
   16dd4:	ldrb	lr, [r8, #15]
   16dd8:	ldrb	r0, [r8, #14]
   16ddc:	mov	sl, r1
   16de0:	orr	r0, lr, r0, lsl #8
   16de4:	mov	r1, r0
   16de8:	ldrb	r0, [r8, #13]
   16dec:	mov	r5, sl
   16df0:	orr	r1, r1, r0, lsl #16
   16df4:	ldrb	r0, [r8, #12]
   16df8:	mov	r3, r5
   16dfc:	orr	r1, r1, r0, lsl #24
   16e00:	ldrb	r0, [r8, #11]
   16e04:	orr	r7, r0, r3
   16e08:	ldrb	r0, [r8, #10]
   16e0c:	orr	r0, r7, r0, lsl #8
   16e10:	ldrb	r2, [r8, #9]
   16e14:	orr	r2, r0, r2, lsl #16
   16e18:	ldrb	r0, [r9]
   16e1c:	movw	r3, #30257	; 0x7631
   16e20:	movt	r3, #26222	; 0x666e
   16e24:	orr	r2, r2, r0, lsl #24
   16e28:	subs	r0, r1, r3
   16e2c:	movw	r0, #13407	; 0x345f
   16e30:	movt	r0, #29494	; 0x7336
   16e34:	sbcs	r0, r2, r0
   16e38:	bcs	176e4 <main@@Base+0x19b0>
   16e3c:	eor	r0, r1, r3
   16e40:	ldr	r1, [sp, #24]
   16e44:	eor	r1, r2, r1
   16e48:	orrs	r0, r0, r1
   16e4c:	bne	193a4 <main@@Base+0x3670>
   16e50:	ldr	sl, [sp, #32]
   16e54:	cmp	ip, #9
   16e58:	blt	1a418 <main@@Base+0x46e4>
   16e5c:	ldrb	r0, [r8, #16]
   16e60:	cmp	r0, #34	; 0x22
   16e64:	bne	1a418 <main@@Base+0x46e4>
   16e68:	ldr	r4, [sp, #36]	; 0x24
   16e6c:	add	r1, r8, #17
   16e70:	sub	r0, r4, r1
   16e74:	cmp	r0, #2
   16e78:	blt	183dc <main@@Base+0x26a8>
   16e7c:	ldrb	r0, [r1]
   16e80:	cmp	r0, #32
   16e84:	bls	183c4 <main@@Base+0x2690>
   16e88:	ldr	r4, [sp, #36]	; 0x24
   16e8c:	mov	r6, r1
   16e90:	b	183ec <main@@Base+0x26b8>
   16e94:	eor	r1, sl, r3
   16e98:	eor	r2, r0, r2
   16e9c:	orrs	r1, r1, r2
   16ea0:	bne	17458 <main@@Base+0x1724>
   16ea4:	add	r1, r8, #8
   16ea8:	mov	r2, #8
   16eac:	ldr	sl, [sp, #32]
   16eb0:	sub	r0, r6, r1
   16eb4:	cmp	r0, #8
   16eb8:	movcs	r0, r2
   16ebc:	sub	r7, r0, #1
   16ec0:	cmp	r7, #7
   16ec4:	bhi	17760 <main@@Base+0x1a2c>
   16ec8:	add	r0, pc, #32
   16ecc:	mov	r9, #0
   16ed0:	mov	ip, #0
   16ed4:	mov	lr, #0
   16ed8:	mov	r6, #0
   16edc:	mov	r3, #0
   16ee0:	mov	r5, #0
   16ee4:	mov	r4, #0
   16ee8:	mov	r2, #0
   16eec:	ldr	pc, [r0, r7, lsl #2]
   16ef0:	andeq	r6, r1, r4, asr pc
   16ef4:	andeq	r6, r1, ip, asr #30
   16ef8:	andeq	r6, r1, r4, asr #30
   16efc:	andeq	r6, r1, ip, lsr pc
   16f00:	andeq	r6, r1, r0, lsr pc
   16f04:	andeq	r6, r1, r4, lsr #30
   16f08:	andeq	r6, r1, r4, lsl pc
   16f0c:	andeq	r6, r1, r0, lsl pc
   16f10:	ldrb	ip, [r8, #15]
   16f14:	ldrb	r0, [r8, #14]
   16f18:	mov	lr, r9
   16f1c:	orr	r0, ip, r0, lsl #8
   16f20:	mov	r9, r0
   16f24:	ldrb	r0, [r8, #13]
   16f28:	mov	r6, lr
   16f2c:	orr	r9, r9, r0, lsl #16
   16f30:	ldrb	r0, [r8, #12]
   16f34:	mov	r3, r6
   16f38:	orr	r9, r9, r0, lsl #24
   16f3c:	ldrb	r0, [r8, #11]
   16f40:	orr	r5, r0, r3
   16f44:	ldrb	r0, [r8, #10]
   16f48:	orr	r4, r5, r0, lsl #8
   16f4c:	ldrb	r0, [r8, #9]
   16f50:	orr	r2, r4, r0, lsl #16
   16f54:	ldrb	r3, [r1]
   16f58:	movw	r0, #25445	; 0x6365
   16f5c:	ldr	r6, [sp, #36]	; 0x24
   16f60:	movt	r0, #28769	; 0x7061
   16f64:	eor	r0, r9, r0
   16f68:	orr	r2, r2, r3, lsl #24
   16f6c:	movw	r3, #25971	; 0x6573
   16f70:	movt	r3, #24941	; 0x616d
   16f74:	eor	r2, r2, r3
   16f78:	orrs	r0, r0, r2
   16f7c:	bne	17760 <main@@Base+0x1a2c>
   16f80:	add	r9, r8, #16
   16f84:	mov	r1, #8
   16f88:	sub	r0, r6, r9
   16f8c:	cmp	r0, #8
   16f90:	movcc	r1, r0
   16f94:	sub	r3, r1, #1
   16f98:	cmp	r3, #7
   16f9c:	bhi	1b1a0 <main@@Base+0x546c>
   16fa0:	add	r7, pc, #20
   16fa4:	mov	r1, #0
   16fa8:	mov	r2, #0
   16fac:	mov	r6, #0
   16fb0:	mov	r5, #0
   16fb4:	mov	r4, #0
   16fb8:	ldr	pc, [r7, r3, lsl #2]
   16fbc:	andeq	r7, r1, r0
   16fc0:	strdeq	r6, [r1], -r8
   16fc4:	strdeq	r6, [r1], -r0
   16fc8:	andeq	r6, r1, r4, ror #31
   16fcc:	ldrdeq	r6, [r1], -ip
   16fd0:	ldrdeq	r6, [r1], -ip
   16fd4:	ldrdeq	r6, [r1], -ip
   16fd8:	ldrdeq	r6, [r1], -ip
   16fdc:	ldrb	r2, [r8, #20]
   16fe0:	lsl	r2, r2, #24
   16fe4:	ldrb	r3, [r8, #19]
   16fe8:	orr	r6, r3, r1
   16fec:	mov	r1, r2
   16ff0:	ldrb	r2, [r8, #18]
   16ff4:	orr	r5, r6, r2, lsl #8
   16ff8:	ldrb	r2, [r8, #17]
   16ffc:	orr	r4, r5, r2, lsl #16
   17000:	ldrb	r2, [r9]
   17004:	movw	r3, #25971	; 0x6573
   17008:	ldr	r6, [sp, #36]	; 0x24
   1700c:	and	r1, r1, #-16777216	; 0xff000000
   17010:	movt	r3, #24436	; 0x5f74
   17014:	eor	r1, r1, #1946157056	; 0x74000000
   17018:	orr	r2, r4, r2, lsl #24
   1701c:	eor	r2, r2, r3
   17020:	orrs	r1, r1, r2
   17024:	bne	1b1a0 <main@@Base+0x546c>
   17028:	cmp	r0, #6
   1702c:	blt	1b1a0 <main@@Base+0x546c>
   17030:	ldrb	r0, [r8, #21]
   17034:	cmp	r0, #34	; 0x22
   17038:	bne	1b1a0 <main@@Base+0x546c>
   1703c:	add	r1, r8, #22
   17040:	sub	r0, r6, r1
   17044:	cmp	r0, #2
   17048:	blt	192ac <main@@Base+0x3578>
   1704c:	ldrb	r0, [r1]
   17050:	cmp	r0, #32
   17054:	bls	1929c <main@@Base+0x3568>
   17058:	mov	r8, r1
   1705c:	b	192bc <main@@Base+0x3588>
   17060:	subs	r1, sl, r3
   17064:	sbcs	r1, r0, r2
   17068:	bcs	174b0 <main@@Base+0x177c>
   1706c:	movw	r1, #0
   17070:	bfc	r0, #0, #16
   17074:	movt	r1, #26736	; 0x6870
   17078:	teq	r0, r1
   1707c:	bne	18e6c <main@@Base+0x3138>
   17080:	ldr	sl, [sp, #32]
   17084:	cmp	r9, #3
   17088:	mov	r7, r8
   1708c:	blt	19410 <main@@Base+0x36dc>
   17090:	ldrb	r0, [r8, #2]
   17094:	mov	r7, r8
   17098:	cmp	r0, #34	; 0x22
   1709c:	bne	19410 <main@@Base+0x36dc>
   170a0:	add	r1, r8, #3
   170a4:	sub	r0, r6, r1
   170a8:	cmp	r0, #2
   170ac:	blt	1827c <main@@Base+0x2548>
   170b0:	ldrb	r0, [r1]
   170b4:	cmp	r0, #32
   170b8:	bls	18268 <main@@Base+0x2534>
   170bc:	mov	r7, r1
   170c0:	b	1828c <main@@Base+0x2558>
   170c4:	mvn	r2, #-1711276032	; 0x9a000000
   170c8:	subs	r2, r2, sl
   170cc:	sbcs	r2, r4, r0
   170d0:	bcc	17528 <main@@Base+0x17f4>
   170d4:	movw	r0, #28788	; 0x7074
   170d8:	movt	r0, #25965	; 0x656d
   170dc:	eor	r0, sl, r0
   170e0:	orrs	r0, r0, r1
   170e4:	bne	18e6c <main@@Base+0x3138>
   170e8:	add	r7, r8, #8
   170ec:	ldr	sl, [sp, #32]
   170f0:	mov	r1, #8
   170f4:	sub	r0, r6, r7
   170f8:	cmp	r0, #8
   170fc:	movcc	r1, r0
   17100:	sub	r1, r1, #1
   17104:	cmp	r1, #7
   17108:	bhi	1e1d0 <main@@Base+0x849c>
   1710c:	ldrb	r1, [r7]
   17110:	cmp	r1, #121	; 0x79
   17114:	bne	1e1d0 <main@@Base+0x849c>
   17118:	cmp	r0, #2
   1711c:	blt	1e1d0 <main@@Base+0x849c>
   17120:	ldrb	r0, [r8, #9]
   17124:	cmp	r0, #34	; 0x22
   17128:	bne	1e1d0 <main@@Base+0x849c>
   1712c:	add	r1, r8, #10
   17130:	sub	r0, r6, r1
   17134:	cmp	r0, #2
   17138:	blt	1a548 <main@@Base+0x4814>
   1713c:	ldrb	r0, [r1]
   17140:	cmp	r0, #32
   17144:	bls	1a538 <main@@Base+0x4804>
   17148:	mov	r8, r1
   1714c:	b	1a558 <main@@Base+0x4824>
   17150:	teq	r0, r4
   17154:	bne	189d8 <main@@Base+0x2ca4>
   17158:	cmp	r9, #5
   1715c:	mov	r1, r8
   17160:	blt	1899c <main@@Base+0x2c68>
   17164:	ldrb	r0, [r8, #4]
   17168:	mov	r1, r8
   1716c:	cmp	r0, #34	; 0x22
   17170:	bne	1899c <main@@Base+0x2c68>
   17174:	add	r2, r8, #5
   17178:	sub	r0, r6, r2
   1717c:	cmp	r0, #2
   17180:	blt	17e28 <main@@Base+0x20f4>
   17184:	ldrb	r0, [r2]
   17188:	cmp	r0, #32
   1718c:	bls	17e14 <main@@Base+0x20e0>
   17190:	mov	r1, r2
   17194:	b	17e3c <main@@Base+0x2108>
   17198:	movw	r7, #24431	; 0x5f6f
   1719c:	movw	r3, #25460	; 0x6374
   171a0:	movt	r7, #28530	; 0x6f72
   171a4:	movt	r3, #30309	; 0x7665
   171a8:	subs	r2, sl, r7
   171ac:	sbcs	r2, r0, r3
   171b0:	bcs	17594 <main@@Base+0x1860>
   171b4:	movw	r0, #29556	; 0x7374
   171b8:	movt	r0, #28261	; 0x6e65
   171bc:	eor	r0, sl, r0
   171c0:	orrs	r0, r0, r1
   171c4:	bne	18e6c <main@@Base+0x3138>
   171c8:	add	r1, r8, #8
   171cc:	mov	r2, #8
   171d0:	ldr	sl, [sp, #32]
   171d4:	sub	r0, r6, r1
   171d8:	cmp	r0, #8
   171dc:	movcs	r0, r2
   171e0:	sub	r7, r0, #1
   171e4:	cmp	r7, #7
   171e8:	bhi	17760 <main@@Base+0x1a2c>
   171ec:	add	r0, pc, #32
   171f0:	mov	r9, #0
   171f4:	mov	ip, #0
   171f8:	mov	lr, #0
   171fc:	mov	r6, #0
   17200:	mov	r3, #0
   17204:	mov	r5, #0
   17208:	mov	r2, #0
   1720c:	mov	r4, #0
   17210:	ldr	pc, [r0, r7, lsl #2]
   17214:	andeq	r7, r1, r8, ror r2
   17218:	andeq	r7, r1, r0, ror r2
   1721c:	andeq	r7, r1, r8, ror #4
   17220:	andeq	r7, r1, r0, ror #4
   17224:	andeq	r7, r1, r4, asr r2
   17228:	andeq	r7, r1, r8, asr #4
   1722c:	andeq	r7, r1, r8, lsr r2
   17230:	andeq	r7, r1, r4, lsr r2
   17234:	ldrb	ip, [r8, #15]
   17238:	ldrb	r0, [r8, #14]
   1723c:	mov	lr, r9
   17240:	orr	r0, ip, r0, lsl #8
   17244:	mov	r9, r0
   17248:	ldrb	r0, [r8, #13]
   1724c:	mov	r6, lr
   17250:	orr	r9, r9, r0, lsl #16
   17254:	ldrb	r0, [r8, #12]
   17258:	mov	r3, r6
   1725c:	orr	r9, r9, r0, lsl #24
   17260:	ldrb	r0, [r8, #11]
   17264:	orr	r5, r0, r3
   17268:	ldrb	r0, [r8, #10]
   1726c:	orr	r2, r5, r0, lsl #8
   17270:	ldrb	r0, [r8, #9]
   17274:	orr	r4, r2, r0, lsl #16
   17278:	ldrb	r2, [r1]
   1727c:	movw	r0, #25205	; 0x6275
   17280:	movw	r3, #26220	; 0x666c
   17284:	ldr	r6, [sp, #36]	; 0x24
   17288:	movt	r0, #24948	; 0x6174
   1728c:	movt	r3, #25956	; 0x6564
   17290:	eor	r0, r9, r0
   17294:	orr	r2, r4, r2, lsl #24
   17298:	eor	r2, r2, r3
   1729c:	orrs	r0, r0, r2
   172a0:	bne	17760 <main@@Base+0x1a2c>
   172a4:	add	r7, r8, #16
   172a8:	mov	r1, #8
   172ac:	sub	r0, r6, r7
   172b0:	cmp	r0, #8
   172b4:	movcc	r1, r0
   172b8:	sub	r2, r1, #1
   172bc:	cmp	r2, #7
   172c0:	bhi	1e1d0 <main@@Base+0x849c>
   172c4:	add	r3, pc, #4
   172c8:	mov	r1, #0
   172cc:	ldr	pc, [r3, r2, lsl #2]
   172d0:	andeq	r7, r1, r4, lsl #6
   172d4:	strdeq	r7, [r1], -ip
   172d8:	strdeq	r7, [r1], -r4
   172dc:	strdeq	r7, [r1], -r0
   172e0:	strdeq	r7, [r1], -r0
   172e4:	strdeq	r7, [r1], -r0
   172e8:	strdeq	r7, [r1], -r0
   172ec:	strdeq	r7, [r1], -r0
   172f0:	ldrb	r1, [r8, #19]
   172f4:	ldrb	r2, [r8, #18]
   172f8:	orr	r1, r1, r2, lsl #8
   172fc:	ldrb	r2, [r8, #17]
   17300:	orr	r1, r1, r2, lsl #16
   17304:	ldrb	r2, [r7]
   17308:	orr	r1, r1, r2, lsl #24
   1730c:	movw	r2, #25970	; 0x6572
   17310:	movt	r2, #26214	; 0x6666
   17314:	teq	r1, r2
   17318:	bne	1e1d0 <main@@Base+0x849c>
   1731c:	cmp	r0, #5
   17320:	blt	1e1d0 <main@@Base+0x849c>
   17324:	ldrb	r0, [r8, #20]
   17328:	cmp	r0, #34	; 0x22
   1732c:	bne	1e1d0 <main@@Base+0x849c>
   17330:	add	r1, r8, #21
   17334:	sub	r0, r6, r1
   17338:	cmp	r0, #2
   1733c:	blt	1a938 <main@@Base+0x4c04>
   17340:	ldrb	r0, [r1]
   17344:	cmp	r0, #32
   17348:	bls	1a924 <main@@Base+0x4bf0>
   1734c:	mov	r9, r1
   17350:	b	1a948 <main@@Base+0x4c14>
   17354:	movw	r0, #27749	; 0x6c65
   17358:	movw	r3, #26228	; 0x6674
   1735c:	ldr	r6, [sp, #36]	; 0x24
   17360:	ldr	sl, [sp, #32]
   17364:	movt	r0, #24930	; 0x6162
   17368:	movt	r3, #31087	; 0x796f
   1736c:	eor	r0, r1, r0
   17370:	eor	r3, r2, r3
   17374:	orrs	r0, r0, r3
   17378:	beq	178bc <main@@Base+0x1b88>
   1737c:	movw	r0, #26990	; 0x696e
   17380:	movt	r0, #29810	; 0x7472
   17384:	eor	r0, r1, r0
   17388:	eor	r1, r2, r7
   1738c:	orrs	r0, r0, r1
   17390:	bne	1b1a0 <main@@Base+0x546c>
   17394:	add	r7, r8, #16
   17398:	mov	r2, #8
   1739c:	sub	r0, r6, r7
   173a0:	cmp	r0, #8
   173a4:	movcc	r2, r0
   173a8:	sub	r1, r2, #2
   173ac:	cmp	r1, #7
   173b0:	bcs	17b48 <main@@Base+0x1e14>
   173b4:	ldrb	r1, [r8, #17]
   173b8:	lsl	r2, r1, #16
   173bc:	mov	r1, #0
   173c0:	ldrb	r3, [r7]
   173c4:	orr	r2, r2, r3, lsl #24
   173c8:	movw	r3, #0
   173cc:	movt	r3, #26418	; 0x6732
   173d0:	eor	r3, r2, r3
   173d4:	orrs	r1, r1, r3
   173d8:	bne	17a34 <main@@Base+0x1d00>
   173dc:	cmp	r0, #3
   173e0:	blt	1e1d0 <main@@Base+0x849c>
   173e4:	ldrb	r0, [r8, #18]
   173e8:	cmp	r0, #34	; 0x22
   173ec:	bne	1e1d0 <main@@Base+0x849c>
   173f0:	add	r1, r8, #19
   173f4:	sub	r0, r6, r1
   173f8:	cmp	r0, #2
   173fc:	blt	18b3c <main@@Base+0x2e08>
   17400:	ldrb	r0, [r1]
   17404:	cmp	r0, #32
   17408:	bls	18b2c <main@@Base+0x2df8>
   1740c:	mov	r8, r1
   17410:	b	18b4c <main@@Base+0x2e18>
   17414:	ldr	sl, [sp, #32]
   17418:	cmp	r9, #6
   1741c:	mov	r7, r8
   17420:	blt	184b8 <main@@Base+0x2784>
   17424:	ldrb	r0, [r8, #5]
   17428:	mov	r7, r8
   1742c:	cmp	r0, #34	; 0x22
   17430:	bne	184b8 <main@@Base+0x2784>
   17434:	add	r1, r8, #6
   17438:	sub	r0, r6, r1
   1743c:	cmp	r0, #2
   17440:	blt	17ccc <main@@Base+0x1f98>
   17444:	ldrb	r0, [r1]
   17448:	cmp	r0, #32
   1744c:	bls	17cb8 <main@@Base+0x1f84>
   17450:	mov	r7, r1
   17454:	b	17cdc <main@@Base+0x1fa8>
   17458:	movw	r1, #29440	; 0x7300
   1745c:	ldr	sl, [sp, #32]
   17460:	bic	r0, r0, #255	; 0xff
   17464:	movt	r1, #28783	; 0x706f
   17468:	teq	r0, r1
   1746c:	bne	18e70 <main@@Base+0x313c>
   17470:	cmp	r9, #4
   17474:	mov	r9, r8
   17478:	blt	19570 <main@@Base+0x383c>
   1747c:	ldrb	r0, [r8, #3]
   17480:	mov	r9, r8
   17484:	cmp	r0, #34	; 0x22
   17488:	bne	19570 <main@@Base+0x383c>
   1748c:	add	r1, r8, #4
   17490:	sub	r0, r6, r1
   17494:	cmp	r0, #2
   17498:	blt	182f0 <main@@Base+0x25bc>
   1749c:	ldrb	r0, [r1]
   174a0:	cmp	r0, #32
   174a4:	bls	182dc <main@@Base+0x25a8>
   174a8:	mov	r9, r1
   174ac:	b	18300 <main@@Base+0x25cc>
   174b0:	eor	r1, sl, r3
   174b4:	eor	r2, r0, r2
   174b8:	orrs	r1, r1, r2
   174bc:	bne	17920 <main@@Base+0x1bec>
   174c0:	add	r7, r8, #8
   174c4:	ldr	sl, [sp, #32]
   174c8:	mov	r1, #8
   174cc:	sub	r0, r6, r7
   174d0:	cmp	r0, #8
   174d4:	movcc	r1, r0
   174d8:	sub	r1, r1, #1
   174dc:	cmp	r1, #7
   174e0:	bhi	1e1d0 <main@@Base+0x849c>
   174e4:	ldrb	r1, [r7]
   174e8:	cmp	r1, #121	; 0x79
   174ec:	bne	1e1d0 <main@@Base+0x849c>
   174f0:	cmp	r0, #2
   174f4:	blt	1e1d0 <main@@Base+0x849c>
   174f8:	ldrb	r0, [r8, #9]
   174fc:	cmp	r0, #34	; 0x22
   17500:	bne	1e1d0 <main@@Base+0x849c>
   17504:	add	r1, r8, #10
   17508:	sub	r0, r6, r1
   1750c:	cmp	r0, #2
   17510:	blt	1a5c0 <main@@Base+0x488c>
   17514:	ldrb	r0, [r1]
   17518:	cmp	r0, #32
   1751c:	bls	1a5b0 <main@@Base+0x487c>
   17520:	mov	r8, r1
   17524:	b	1a5d0 <main@@Base+0x489c>
   17528:	movw	r3, #0
   1752c:	mov	r2, sl
   17530:	movt	r3, #26163	; 0x6633
   17534:	bfc	r2, #0, #16
   17538:	subs	r3, r3, #65536	; 0x10000
   1753c:	eor	r2, r2, r3
   17540:	sbc	r3, r4, #0
   17544:	eor	r0, r0, r3
   17548:	orrs	r0, r2, r0
   1754c:	bne	17974 <main@@Base+0x1c40>
   17550:	ldr	sl, [sp, #32]
   17554:	cmp	r9, #7
   17558:	mov	r7, r8
   1755c:	blt	1a164 <main@@Base+0x4430>
   17560:	ldrb	r0, [r8, #6]
   17564:	mov	r7, r8
   17568:	cmp	r0, #34	; 0x22
   1756c:	bne	1a164 <main@@Base+0x4430>
   17570:	add	r1, r8, #7
   17574:	sub	r0, r6, r1
   17578:	cmp	r0, #2
   1757c:	blt	18364 <main@@Base+0x2630>
   17580:	ldrb	r0, [r1]
   17584:	cmp	r0, #32
   17588:	bls	18350 <main@@Base+0x261c>
   1758c:	mov	r7, r1
   17590:	b	18374 <main@@Base+0x2640>
   17594:	eor	r1, sl, r7
   17598:	eor	r0, r0, r3
   1759c:	orrs	r0, r1, r0
   175a0:	bne	18e6c <main@@Base+0x3138>
   175a4:	add	sl, r8, #8
   175a8:	mov	r0, #8
   175ac:	sub	lr, r6, sl
   175b0:	cmp	lr, #8
   175b4:	movcc	r0, lr
   175b8:	sub	r6, r0, #1
   175bc:	cmp	r6, #7
   175c0:	bhi	17ae4 <main@@Base+0x1db0>
   175c4:	add	r4, pc, #32
   175c8:	mov	r1, #0
   175cc:	mov	ip, #0
   175d0:	mov	r9, #0
   175d4:	mov	r5, #0
   175d8:	mov	r3, #0
   175dc:	mov	r7, #0
   175e0:	mov	r2, #0
   175e4:	mov	r0, #0
   175e8:	ldr	pc, [r4, r6, lsl #2]
   175ec:	andeq	r7, r1, r0, asr r6
   175f0:	andeq	r7, r1, r8, asr #12
   175f4:	andeq	r7, r1, r0, asr #12
   175f8:	andeq	r7, r1, r8, lsr r6
   175fc:	andeq	r7, r1, ip, lsr #12
   17600:	andeq	r7, r1, r0, lsr #12
   17604:	andeq	r7, r1, r0, lsl r6
   17608:	andeq	r7, r1, ip, lsl #12
   1760c:	ldrb	ip, [r8, #15]
   17610:	ldrb	r0, [r8, #14]
   17614:	mov	r9, r1
   17618:	orr	r0, ip, r0, lsl #8
   1761c:	mov	r1, r0
   17620:	ldrb	r0, [r8, #13]
   17624:	mov	r5, r9
   17628:	orr	r1, r1, r0, lsl #16
   1762c:	ldrb	r0, [r8, #12]
   17630:	mov	r3, r5
   17634:	orr	r1, r1, r0, lsl #24
   17638:	ldrb	r0, [r8, #11]
   1763c:	orr	r7, r0, r3
   17640:	ldrb	r0, [r8, #10]
   17644:	orr	r2, r7, r0, lsl #8
   17648:	ldrb	r0, [r8, #9]
   1764c:	orr	r0, r2, r0, lsl #16
   17650:	ldrb	r3, [sl]
   17654:	movw	r2, #27749	; 0x6c65
   17658:	movt	r2, #30050	; 0x7562
   1765c:	eor	r2, r1, r2
   17660:	orr	r0, r0, r3, lsl #24
   17664:	movw	r3, #25711	; 0x646f
   17668:	movt	r3, #26207	; 0x665f
   1766c:	eor	r3, r0, r3
   17670:	orrs	r2, r2, r3
   17674:	bne	17a78 <main@@Base+0x1d44>
   17678:	ldr	r6, [sp, #36]	; 0x24
   1767c:	add	r7, r8, #16
   17680:	mov	r1, #8
   17684:	sub	r0, r6, r7
   17688:	cmp	r0, #8
   1768c:	movcc	r1, r0
   17690:	sub	r1, r1, #1
   17694:	cmp	r1, #7
   17698:	bhi	17adc <main@@Base+0x1da8>
   1769c:	ldrb	r1, [r7]
   176a0:	cmp	r1, #115	; 0x73
   176a4:	bne	17adc <main@@Base+0x1da8>
   176a8:	ldr	sl, [sp, #32]
   176ac:	cmp	r0, #2
   176b0:	blt	1e1d0 <main@@Base+0x849c>
   176b4:	ldrb	r0, [r8, #17]
   176b8:	cmp	r0, #34	; 0x22
   176bc:	bne	1e1d0 <main@@Base+0x849c>
   176c0:	add	r1, r8, #18
   176c4:	sub	r0, r6, r1
   176c8:	cmp	r0, #2
   176cc:	blt	1b270 <main@@Base+0x553c>
   176d0:	ldrb	r0, [r1]
   176d4:	cmp	r0, #32
   176d8:	bls	1b25c <main@@Base+0x5528>
   176dc:	mov	r9, r1
   176e0:	b	1b280 <main@@Base+0x554c>
   176e4:	movw	r0, #30256	; 0x7630
   176e8:	ldr	r6, [sp, #36]	; 0x24
   176ec:	movt	r0, #26222	; 0x666e
   176f0:	subs	r0, r0, r1
   176f4:	movw	r0, #12895	; 0x325f
   176f8:	movt	r0, #30003	; 0x7533
   176fc:	sbcs	r0, r0, r2
   17700:	eor	r0, r1, r3
   17704:	bcc	179c8 <main@@Base+0x1c94>
   17708:	movw	r1, #13407	; 0x345f
   1770c:	ldr	sl, [sp, #32]
   17710:	movt	r1, #29494	; 0x7336
   17714:	eor	r1, r2, r1
   17718:	orrs	r0, r0, r1
   1771c:	bne	1b1a0 <main@@Base+0x546c>
   17720:	cmp	ip, #9
   17724:	blt	1af90 <main@@Base+0x525c>
   17728:	ldrb	r0, [r8, #16]
   1772c:	cmp	r0, #34	; 0x22
   17730:	bne	1af90 <main@@Base+0x525c>
   17734:	ldr	r4, [sp, #36]	; 0x24
   17738:	add	r1, r8, #17
   1773c:	sub	r0, r4, r1
   17740:	cmp	r0, #2
   17744:	blt	18d0c <main@@Base+0x2fd8>
   17748:	ldrb	r0, [r1]
   1774c:	cmp	r0, #32
   17750:	bls	18cf4 <main@@Base+0x2fc0>
   17754:	ldr	r4, [sp, #36]	; 0x24
   17758:	mov	r6, r1
   1775c:	b	18d1c <main@@Base+0x2fe8>
   17760:	mov	r0, sl
   17764:	b	1e1d8 <main@@Base+0x84a4>
   17768:	ldr	sl, [sp, #32]
   1776c:	cmp	r9, #9
   17770:	mov	r7, r8
   17774:	blt	19100 <main@@Base+0x33cc>
   17778:	ldrb	r0, [r8, #8]
   1777c:	mov	r7, r8
   17780:	cmp	r0, #34	; 0x22
   17784:	bne	19100 <main@@Base+0x33cc>
   17788:	add	r1, r8, #9
   1778c:	sub	r0, r6, r1
   17790:	cmp	r0, #2
   17794:	blt	17e9c <main@@Base+0x2168>
   17798:	ldrb	r0, [r1]
   1779c:	cmp	r0, #32
   177a0:	bls	17e88 <main@@Base+0x2154>
   177a4:	mov	r7, r1
   177a8:	b	17eac <main@@Base+0x2178>
   177ac:	ldr	r0, [sp, #36]	; 0x24
   177b0:	add	r9, r8, #16
   177b4:	ldr	sl, [sp, #32]
   177b8:	mov	r1, #8
   177bc:	sub	lr, r0, r9
   177c0:	cmp	lr, #8
   177c4:	movcc	r1, lr
   177c8:	sub	r6, r1, #1
   177cc:	cmp	r6, #7
   177d0:	bhi	193a8 <main@@Base+0x3674>
   177d4:	add	r0, pc, #28
   177d8:	mov	r1, #0
   177dc:	mov	ip, #0
   177e0:	mov	r4, #0
   177e4:	mov	r3, #0
   177e8:	mov	r5, #0
   177ec:	mov	r7, #0
   177f0:	mov	r2, #0
   177f4:	ldr	pc, [r0, r6, lsl #2]
   177f8:	andeq	r7, r1, r4, asr r8
   177fc:	andeq	r7, r1, ip, asr #16
   17800:	andeq	r7, r1, r4, asr #16
   17804:	andeq	r7, r1, ip, lsr r8
   17808:	andeq	r7, r1, r0, lsr r8
   1780c:	andeq	r7, r1, r0, lsr #16
   17810:	andeq	r7, r1, r8, lsl r8
   17814:	andeq	r7, r1, r8, lsl r8
   17818:	ldrb	r0, [r8, #22]
   1781c:	lsl	ip, r0, #8
   17820:	ldrb	r0, [r8, #21]
   17824:	mov	r4, r1
   17828:	orr	r0, ip, r0, lsl #16
   1782c:	mov	r1, r0
   17830:	ldrb	r0, [r8, #20]
   17834:	mov	r3, r4
   17838:	orr	r1, r1, r0, lsl #24
   1783c:	ldrb	r0, [r8, #19]
   17840:	orr	r5, r0, r3
   17844:	ldrb	r0, [r8, #18]
   17848:	orr	r7, r5, r0, lsl #8
   1784c:	ldrb	r0, [r8, #17]
   17850:	orr	r2, r7, r0, lsl #16
   17854:	bic	r0, r1, #255	; 0xff
   17858:	movw	r1, #29696	; 0x7400
   1785c:	movt	r1, #30051	; 0x7563
   17860:	eor	r0, r0, r1
   17864:	ldrb	r1, [r9]
   17868:	orr	r1, r2, r1, lsl #24
   1786c:	movw	r2, #29810	; 0x7472
   17870:	movt	r2, #25715	; 0x6473
   17874:	eor	r1, r1, r2
   17878:	orrs	r0, r0, r1
   1787c:	bne	193a8 <main@@Base+0x3674>
   17880:	ldr	r6, [sp, #36]	; 0x24
   17884:	cmp	lr, #8
   17888:	blt	1b1a0 <main@@Base+0x546c>
   1788c:	ldrb	r0, [r8, #23]
   17890:	cmp	r0, #34	; 0x22
   17894:	bne	1b1a0 <main@@Base+0x546c>
   17898:	add	r1, r8, #24
   1789c:	sub	r0, r6, r1
   178a0:	cmp	r0, #2
   178a4:	blt	18bac <main@@Base+0x2e78>
   178a8:	ldrb	r0, [r1]
   178ac:	cmp	r0, #32
   178b0:	bls	18b9c <main@@Base+0x2e68>
   178b4:	mov	r8, r1
   178b8:	b	18bbc <main@@Base+0x2e88>
   178bc:	add	r7, r8, #16
   178c0:	mov	r1, #8
   178c4:	sub	r0, r6, r7
   178c8:	cmp	r0, #8
   178cc:	movcc	r1, r0
   178d0:	sub	r1, r1, #1
   178d4:	cmp	r1, #7
   178d8:	bhi	1e1d0 <main@@Base+0x849c>
   178dc:	ldrb	r1, [r7]
   178e0:	cmp	r1, #115	; 0x73
   178e4:	bne	1e1d0 <main@@Base+0x849c>
   178e8:	cmp	r0, #2
   178ec:	blt	1e1d0 <main@@Base+0x849c>
   178f0:	ldrb	r0, [r8, #17]
   178f4:	cmp	r0, #34	; 0x22
   178f8:	bne	1e1d0 <main@@Base+0x849c>
   178fc:	add	r1, r8, #18
   17900:	sub	r0, r6, r1
   17904:	cmp	r0, #2
   17908:	blt	1a1fc <main@@Base+0x44c8>
   1790c:	ldrb	r0, [r1]
   17910:	cmp	r0, #32
   17914:	bls	1a1ec <main@@Base+0x44b8>
   17918:	mov	r8, r1
   1791c:	b	1a20c <main@@Base+0x44d8>
   17920:	movw	r1, #28257	; 0x6e61
   17924:	ldr	sl, [sp, #32]
   17928:	movt	r1, #28001	; 0x6d61
   1792c:	teq	r0, r1
   17930:	bne	18e70 <main@@Base+0x313c>
   17934:	cmp	r9, #5
   17938:	mov	r7, r8
   1793c:	blt	1ad00 <main@@Base+0x4fcc>
   17940:	ldrb	r0, [r8, #4]
   17944:	mov	r7, r8
   17948:	cmp	r0, #34	; 0x22
   1794c:	bne	1ad00 <main@@Base+0x4fcc>
   17950:	add	r1, r8, #5
   17954:	sub	r0, r6, r1
   17958:	cmp	r0, #2
   1795c:	blt	18c20 <main@@Base+0x2eec>
   17960:	ldrb	r0, [r1]
   17964:	cmp	r0, #32
   17968:	bls	18c0c <main@@Base+0x2ed8>
   1796c:	mov	r7, r1
   17970:	b	18c30 <main@@Base+0x2efc>
   17974:	and	r0, sl, #-16777216	; 0xff000000
   17978:	eor	r0, r0, #1711276032	; 0x66000000
   1797c:	orrs	r0, r0, r1
   17980:	bne	18e6c <main@@Base+0x3138>
   17984:	ldr	sl, [sp, #32]
   17988:	cmp	r9, #6
   1798c:	mov	r7, r8
   17990:	blt	1ae64 <main@@Base+0x5130>
   17994:	ldrb	r0, [r8, #5]
   17998:	mov	r7, r8
   1799c:	cmp	r0, #34	; 0x22
   179a0:	bne	1ae64 <main@@Base+0x5130>
   179a4:	add	r1, r8, #6
   179a8:	sub	r0, r6, r1
   179ac:	cmp	r0, #2
   179b0:	blt	18c94 <main@@Base+0x2f60>
   179b4:	ldrb	r0, [r1]
   179b8:	cmp	r0, #32
   179bc:	bls	18c80 <main@@Base+0x2f4c>
   179c0:	mov	r7, r1
   179c4:	b	18ca4 <main@@Base+0x2f70>
   179c8:	movw	r1, #13407	; 0x345f
   179cc:	ldr	sl, [sp, #32]
   179d0:	movt	r1, #30006	; 0x7536
   179d4:	eor	r1, r2, r1
   179d8:	orrs	r1, r0, r1
   179dc:	beq	17b08 <main@@Base+0x1dd4>
   179e0:	movw	r1, #12895	; 0x325f
   179e4:	movt	r1, #30003	; 0x7533
   179e8:	eor	r1, r2, r1
   179ec:	orrs	r0, r0, r1
   179f0:	bne	1b1a0 <main@@Base+0x546c>
   179f4:	cmp	ip, #9
   179f8:	blt	1bec8 <main@@Base+0x6194>
   179fc:	ldrb	r0, [r8, #16]
   17a00:	cmp	r0, #34	; 0x22
   17a04:	bne	1bec8 <main@@Base+0x6194>
   17a08:	ldr	r4, [sp, #36]	; 0x24
   17a0c:	add	r1, r8, #17
   17a10:	sub	r0, r4, r1
   17a14:	cmp	r0, #2
   17a18:	blt	1a27c <main@@Base+0x4548>
   17a1c:	ldrb	r0, [r1]
   17a20:	cmp	r0, #32
   17a24:	bls	1a264 <main@@Base+0x4530>
   17a28:	ldr	r4, [sp, #36]	; 0x24
   17a2c:	mov	r6, r1
   17a30:	b	1a28c <main@@Base+0x4558>
   17a34:	and	r1, r2, #-16777216	; 0xff000000
   17a38:	teq	r1, #1728053248	; 0x67000000
   17a3c:	bne	1e1d0 <main@@Base+0x849c>
   17a40:	cmp	r0, #2
   17a44:	blt	1e1d0 <main@@Base+0x849c>
   17a48:	ldrb	r0, [r8, #17]
   17a4c:	cmp	r0, #34	; 0x22
   17a50:	bne	1e1d0 <main@@Base+0x849c>
   17a54:	add	r1, r8, #18
   17a58:	sub	r0, r6, r1
   17a5c:	cmp	r0, #2
   17a60:	blt	1a4d0 <main@@Base+0x479c>
   17a64:	ldrb	r0, [r1]
   17a68:	cmp	r0, #32
   17a6c:	bls	1a4c0 <main@@Base+0x478c>
   17a70:	mov	r8, r1
   17a74:	b	1a4e0 <main@@Base+0x47ac>
   17a78:	movw	r2, #24428	; 0x5f6c
   17a7c:	lsr	r1, r1, #8
   17a80:	movt	r2, #102	; 0x66
   17a84:	eor	r2, r2, r0, lsr #8
   17a88:	orr	r0, r1, r0, lsl #24
   17a8c:	movw	r1, #26483	; 0x6773
   17a90:	movt	r1, #28526	; 0x6f6e
   17a94:	eor	r0, r0, r1
   17a98:	orrs	r0, r0, r2
   17a9c:	bne	17ae4 <main@@Base+0x1db0>
   17aa0:	ldr	r6, [sp, #36]	; 0x24
   17aa4:	cmp	lr, #8
   17aa8:	blt	1c4b0 <main@@Base+0x677c>
   17aac:	ldrb	r0, [r8, #15]
   17ab0:	cmp	r0, #34	; 0x22
   17ab4:	bne	1c4b0 <main@@Base+0x677c>
   17ab8:	add	r1, r8, #16
   17abc:	sub	r0, r6, r1
   17ac0:	cmp	r0, #2
   17ac4:	blt	1a8c0 <main@@Base+0x4b8c>
   17ac8:	ldrb	r0, [r1]
   17acc:	cmp	r0, #32
   17ad0:	bls	1a8ac <main@@Base+0x4b78>
   17ad4:	mov	r9, r1
   17ad8:	b	1a8d0 <main@@Base+0x4b9c>
   17adc:	ldr	sl, [sp, #32]
   17ae0:	b	1e1d0 <main@@Base+0x849c>
   17ae4:	ldr	r0, [sp, #32]
   17ae8:	mov	r1, sl
   17aec:	mov	sl, r0
   17af0:	b	193b0 <main@@Base+0x367c>
   17af4:	cmp	r2, #1
   17af8:	mov	r1, #0
   17afc:	mov	r2, #0
   17b00:	beq	16cb4 <main@@Base+0xf80>
   17b04:	b	1e1d0 <main@@Base+0x849c>
   17b08:	cmp	ip, #9
   17b0c:	blt	1c08c <main@@Base+0x6358>
   17b10:	ldrb	r0, [r8, #16]
   17b14:	cmp	r0, #34	; 0x22
   17b18:	bne	1c08c <main@@Base+0x6358>
   17b1c:	ldr	r4, [sp, #36]	; 0x24
   17b20:	add	r1, r8, #17
   17b24:	sub	r0, r4, r1
   17b28:	cmp	r0, #2
   17b2c:	blt	1a2fc <main@@Base+0x45c8>
   17b30:	ldrb	r0, [r1]
   17b34:	cmp	r0, #32
   17b38:	bls	1a2e4 <main@@Base+0x45b0>
   17b3c:	ldr	r4, [sp, #36]	; 0x24
   17b40:	mov	r6, r1
   17b44:	b	1a30c <main@@Base+0x45d8>
   17b48:	cmp	r2, #1
   17b4c:	mov	r1, #0
   17b50:	mov	r2, #0
   17b54:	beq	173c0 <main@@Base+0x168c>
   17b58:	b	1e1d0 <main@@Base+0x849c>
   17b5c:	bne	17b70 <main@@Base+0x1e3c>
   17b60:	mov	r7, r8
   17b64:	ldrb	r0, [r7, #8]!
   17b68:	cmp	r0, #32
   17b6c:	bhi	17b80 <main@@Base+0x1e4c>
   17b70:	mov	r0, sl
   17b74:	mov	r2, r6
   17b78:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   17b7c:	mov	r7, r0
   17b80:	cmp	r7, r6
   17b84:	beq	17bb8 <main@@Base+0x1e84>
   17b88:	ldrb	r0, [r7]
   17b8c:	cmp	r0, #58	; 0x3a
   17b90:	bne	17bb8 <main@@Base+0x1e84>
   17b94:	add	r1, r7, #1
   17b98:	sub	r0, r6, r1
   17b9c:	cmp	r0, #2
   17ba0:	blt	17f0c <main@@Base+0x21d8>
   17ba4:	ldrb	r0, [r1]
   17ba8:	cmp	r0, #32
   17bac:	bls	17efc <main@@Base+0x21c8>
   17bb0:	mov	r7, r1
   17bb4:	b	17f1c <main@@Base+0x21e8>
   17bb8:	mov	r0, sl
   17bbc:	mov	r1, r7
   17bc0:	mov	r2, r6
   17bc4:	mov	r3, #4
   17bc8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   17bcc:	b	17f18 <main@@Base+0x21e4>
   17bd0:	bne	17be4 <main@@Base+0x1eb0>
   17bd4:	mov	r9, r8
   17bd8:	ldrb	r0, [r9, #7]!
   17bdc:	cmp	r0, #32
   17be0:	bhi	17bf4 <main@@Base+0x1ec0>
   17be4:	ldr	r0, [sp, #32]
   17be8:	mov	r2, r6
   17bec:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   17bf0:	mov	r9, r0
   17bf4:	cmp	r9, r6
   17bf8:	beq	17c2c <main@@Base+0x1ef8>
   17bfc:	ldrb	r0, [r9]
   17c00:	cmp	r0, #58	; 0x3a
   17c04:	bne	17c2c <main@@Base+0x1ef8>
   17c08:	add	r1, r9, #1
   17c0c:	sub	r0, r6, r1
   17c10:	cmp	r0, #2
   17c14:	blt	17fcc <main@@Base+0x2298>
   17c18:	ldrb	r0, [r1]
   17c1c:	cmp	r0, #32
   17c20:	bls	17fbc <main@@Base+0x2288>
   17c24:	mov	r9, r1
   17c28:	b	17fdc <main@@Base+0x22a8>
   17c2c:	ldr	r0, [sp, #32]
   17c30:	mov	r1, r9
   17c34:	mov	r2, r6
   17c38:	mov	r3, #4
   17c3c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   17c40:	b	17fd8 <main@@Base+0x22a4>
   17c44:	bne	17c58 <main@@Base+0x1f24>
   17c48:	mov	r1, r8
   17c4c:	ldrb	r0, [r1, #7]!
   17c50:	cmp	r0, #32
   17c54:	bhi	17c6c <main@@Base+0x1f38>
   17c58:	mov	r1, r2
   17c5c:	mov	r0, sl
   17c60:	mov	r2, r6
   17c64:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   17c68:	mov	r1, r0
   17c6c:	cmp	r1, r6
   17c70:	beq	17ca4 <main@@Base+0x1f70>
   17c74:	ldrb	r0, [r1]
   17c78:	cmp	r0, #58	; 0x3a
   17c7c:	bne	17ca4 <main@@Base+0x1f70>
   17c80:	add	r2, r1, #1
   17c84:	sub	r0, r6, r2
   17c88:	cmp	r0, #2
   17c8c:	blt	18450 <main@@Base+0x271c>
   17c90:	ldrb	r0, [r2]
   17c94:	cmp	r0, #32
   17c98:	bls	18440 <main@@Base+0x270c>
   17c9c:	mov	r1, r2
   17ca0:	b	18464 <main@@Base+0x2730>
   17ca4:	mov	r0, sl
   17ca8:	mov	r2, r6
   17cac:	mov	r3, #4
   17cb0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   17cb4:	b	18460 <main@@Base+0x272c>
   17cb8:	bne	17ccc <main@@Base+0x1f98>
   17cbc:	mov	r7, r8
   17cc0:	ldrb	r0, [r7, #7]!
   17cc4:	cmp	r0, #32
   17cc8:	bhi	17cdc <main@@Base+0x1fa8>
   17ccc:	mov	r0, sl
   17cd0:	mov	r2, r6
   17cd4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   17cd8:	mov	r7, r0
   17cdc:	cmp	r7, r6
   17ce0:	beq	17d14 <main@@Base+0x1fe0>
   17ce4:	ldrb	r0, [r7]
   17ce8:	cmp	r0, #58	; 0x3a
   17cec:	bne	17d14 <main@@Base+0x1fe0>
   17cf0:	add	r1, r7, #1
   17cf4:	sub	r0, r6, r1
   17cf8:	cmp	r0, #2
   17cfc:	blt	184a8 <main@@Base+0x2774>
   17d00:	ldrb	r0, [r1]
   17d04:	cmp	r0, #32
   17d08:	bls	18498 <main@@Base+0x2764>
   17d0c:	mov	r7, r1
   17d10:	b	184b8 <main@@Base+0x2784>
   17d14:	mov	r0, sl
   17d18:	mov	r1, r7
   17d1c:	mov	r2, r6
   17d20:	mov	r3, #4
   17d24:	bl	3133c <flatcc_json_parser_set_error@@Base>
   17d28:	b	184b4 <main@@Base+0x2780>
   17d2c:	bne	17d40 <main@@Base+0x200c>
   17d30:	mov	r1, r8
   17d34:	ldrb	r0, [r1, #6]!
   17d38:	cmp	r0, #32
   17d3c:	bhi	17d54 <main@@Base+0x2020>
   17d40:	mov	r1, r2
   17d44:	mov	r0, sl
   17d48:	mov	r2, r6
   17d4c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   17d50:	mov	r1, r0
   17d54:	cmp	r1, r6
   17d58:	beq	17d8c <main@@Base+0x2058>
   17d5c:	ldrb	r0, [r1]
   17d60:	cmp	r0, #58	; 0x3a
   17d64:	bne	17d8c <main@@Base+0x2058>
   17d68:	add	r2, r1, #1
   17d6c:	sub	r0, r6, r2
   17d70:	cmp	r0, #2
   17d74:	blt	18604 <main@@Base+0x28d0>
   17d78:	ldrb	r0, [r2]
   17d7c:	cmp	r0, #32
   17d80:	bls	185f4 <main@@Base+0x28c0>
   17d84:	mov	r1, r2
   17d88:	b	18618 <main@@Base+0x28e4>
   17d8c:	mov	r0, sl
   17d90:	mov	r2, r6
   17d94:	mov	r3, #4
   17d98:	bl	3133c <flatcc_json_parser_set_error@@Base>
   17d9c:	b	18614 <main@@Base+0x28e0>
   17da0:	bne	17db4 <main@@Base+0x2080>
   17da4:	mov	r9, r8
   17da8:	ldrb	r0, [r9, #6]!
   17dac:	cmp	r0, #32
   17db0:	bhi	17dc4 <main@@Base+0x2090>
   17db4:	mov	r0, sl
   17db8:	mov	r2, r6
   17dbc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   17dc0:	mov	r9, r0
   17dc4:	cmp	r9, r6
   17dc8:	beq	17dfc <main@@Base+0x20c8>
   17dcc:	ldrb	r0, [r9]
   17dd0:	cmp	r0, #58	; 0x3a
   17dd4:	bne	17dfc <main@@Base+0x20c8>
   17dd8:	add	r1, r9, #1
   17ddc:	sub	r0, r6, r1
   17de0:	cmp	r0, #2
   17de4:	blt	1865c <main@@Base+0x2928>
   17de8:	ldrb	r0, [r1]
   17dec:	cmp	r0, #32
   17df0:	bls	1864c <main@@Base+0x2918>
   17df4:	mov	r9, r1
   17df8:	b	1866c <main@@Base+0x2938>
   17dfc:	mov	r0, sl
   17e00:	mov	r1, r9
   17e04:	mov	r2, r6
   17e08:	mov	r3, #4
   17e0c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   17e10:	b	18668 <main@@Base+0x2934>
   17e14:	bne	17e28 <main@@Base+0x20f4>
   17e18:	mov	r1, r8
   17e1c:	ldrb	r0, [r1, #6]!
   17e20:	cmp	r0, #32
   17e24:	bhi	17e3c <main@@Base+0x2108>
   17e28:	ldr	r0, [sp, #32]
   17e2c:	mov	r1, r2
   17e30:	mov	r2, r6
   17e34:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   17e38:	mov	r1, r0
   17e3c:	cmp	r1, r6
   17e40:	beq	17e74 <main@@Base+0x2140>
   17e44:	ldrb	r0, [r1]
   17e48:	cmp	r0, #58	; 0x3a
   17e4c:	bne	17e74 <main@@Base+0x2140>
   17e50:	add	r2, r1, #1
   17e54:	sub	r0, r6, r2
   17e58:	cmp	r0, #2
   17e5c:	blt	18988 <main@@Base+0x2c54>
   17e60:	ldrb	r0, [r2]
   17e64:	cmp	r0, #32
   17e68:	bls	18978 <main@@Base+0x2c44>
   17e6c:	mov	r1, r2
   17e70:	b	1899c <main@@Base+0x2c68>
   17e74:	ldr	r0, [sp, #32]
   17e78:	mov	r2, r6
   17e7c:	mov	r3, #4
   17e80:	bl	3133c <flatcc_json_parser_set_error@@Base>
   17e84:	b	18998 <main@@Base+0x2c64>
   17e88:	bne	17e9c <main@@Base+0x2168>
   17e8c:	mov	r7, r8
   17e90:	ldrb	r0, [r7, #10]!
   17e94:	cmp	r0, #32
   17e98:	bhi	17eac <main@@Base+0x2178>
   17e9c:	mov	r0, sl
   17ea0:	mov	r2, r6
   17ea4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   17ea8:	mov	r7, r0
   17eac:	cmp	r7, r6
   17eb0:	beq	17ee4 <main@@Base+0x21b0>
   17eb4:	ldrb	r0, [r7]
   17eb8:	cmp	r0, #58	; 0x3a
   17ebc:	bne	17ee4 <main@@Base+0x21b0>
   17ec0:	add	r1, r7, #1
   17ec4:	sub	r0, r6, r1
   17ec8:	cmp	r0, #2
   17ecc:	blt	190f0 <main@@Base+0x33bc>
   17ed0:	ldrb	r0, [r1]
   17ed4:	cmp	r0, #32
   17ed8:	bls	190e0 <main@@Base+0x33ac>
   17edc:	mov	r7, r1
   17ee0:	b	19100 <main@@Base+0x33cc>
   17ee4:	mov	r0, sl
   17ee8:	mov	r1, r7
   17eec:	mov	r2, r6
   17ef0:	mov	r3, #4
   17ef4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   17ef8:	b	190fc <main@@Base+0x33c8>
   17efc:	bne	17f0c <main@@Base+0x21d8>
   17f00:	ldrb	r0, [r7, #2]!
   17f04:	cmp	r0, #32
   17f08:	bhi	17f1c <main@@Base+0x21e8>
   17f0c:	mov	r0, sl
   17f10:	mov	r2, r6
   17f14:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   17f18:	mov	r7, r0
   17f1c:	cmp	r8, r7
   17f20:	beq	18e70 <main@@Base+0x313c>
   17f24:	mov	r0, #0
   17f28:	mov	r1, r7
   17f2c:	mov	r2, r6
   17f30:	sub	r3, fp, #56	; 0x38
   17f34:	str	r0, [fp, #-56]	; 0xffffffc8
   17f38:	mov	r0, sl
   17f3c:	bl	33008 <flatcc_json_parser_float@@Base>
   17f40:	mov	r9, r0
   17f44:	cmp	r7, r0
   17f48:	bne	17f7c <main@@Base+0x2248>
   17f4c:	movw	r3, #33016	; 0x80f8
   17f50:	sub	r0, fp, #56	; 0x38
   17f54:	mov	r1, r7
   17f58:	mov	r2, r6
   17f5c:	movt	r3, #5
   17f60:	str	r0, [sp]
   17f64:	mov	r0, sl
   17f68:	bl	2309c <main@@Base+0xd368>
   17f6c:	mov	r9, r0
   17f70:	cmp	r0, r7
   17f74:	cmpne	r9, r6
   17f78:	beq	1f2e4 <main@@Base+0x95b0>
   17f7c:	vldr	s0, [fp, #-56]	; 0xffffffc8
   17f80:	vcmp.f32	s0, #0.0
   17f84:	vmrs	APSR_nzcv, fpscr
   17f88:	bne	17f98 <main@@Base+0x2264>
   17f8c:	ldrb	r0, [sl, #8]
   17f90:	tst	r0, #2
   17f94:	beq	1e1e4 <main@@Base+0x84b0>
   17f98:	ldr	r0, [sl]
   17f9c:	mov	r1, #27
   17fa0:	mov	r2, #4
   17fa4:	mov	r3, #4
   17fa8:	bl	2e760 <flatcc_builder_table_add@@Base>
   17fac:	cmp	r0, #0
   17fb0:	beq	1f2e4 <main@@Base+0x95b0>
   17fb4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   17fb8:	b	18ec0 <main@@Base+0x318c>
   17fbc:	bne	17fcc <main@@Base+0x2298>
   17fc0:	ldrb	r0, [r9, #2]!
   17fc4:	cmp	r0, #32
   17fc8:	bhi	17fdc <main@@Base+0x22a8>
   17fcc:	ldr	r0, [sp, #32]
   17fd0:	mov	r2, r6
   17fd4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   17fd8:	mov	r9, r0
   17fdc:	cmp	r8, r9
   17fe0:	beq	18df0 <main@@Base+0x30bc>
   17fe4:	ldr	sl, [sp, #32]
   17fe8:	mov	r1, #4
   17fec:	mov	r2, #2
   17ff0:	mvn	r3, #-1073741824	; 0xc0000000
   17ff4:	ldr	r0, [sl]
   17ff8:	bl	2d148 <flatcc_builder_start_vector@@Base>
   17ffc:	cmp	r0, #0
   18000:	bne	1f2e4 <main@@Base+0x95b0>
   18004:	cmp	r9, r6
   18008:	beq	1803c <main@@Base+0x2308>
   1800c:	ldrb	r0, [r9]
   18010:	cmp	r0, #91	; 0x5b
   18014:	bne	1803c <main@@Base+0x2308>
   18018:	add	r1, r9, #1
   1801c:	sub	r0, r6, r1
   18020:	cmp	r0, #2
   18024:	blt	18084 <main@@Base+0x2350>
   18028:	ldrb	r0, [r1]
   1802c:	cmp	r0, #32
   18030:	bls	18074 <main@@Base+0x2340>
   18034:	mov	r9, r1
   18038:	b	18094 <main@@Base+0x2360>
   1803c:	mov	r0, sl
   18040:	mov	r1, r9
   18044:	mov	r2, r6
   18048:	mov	r3, #22
   1804c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   18050:	mov	r9, r0
   18054:	ldr	r0, [sl]
   18058:	bl	2e174 <flatcc_builder_end_vector@@Base>
   1805c:	cmp	r0, #0
   18060:	str	r0, [sp, #44]	; 0x2c
   18064:	beq	1f2e4 <main@@Base+0x95b0>
   18068:	ldr	r0, [sl]
   1806c:	mov	r1, #9
   18070:	b	18eb0 <main@@Base+0x317c>
   18074:	bne	18084 <main@@Base+0x2350>
   18078:	ldrb	r0, [r9, #2]!
   1807c:	cmp	r0, #32
   18080:	bhi	18094 <main@@Base+0x2360>
   18084:	mov	r0, sl
   18088:	mov	r2, r6
   1808c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18090:	mov	r9, r0
   18094:	cmp	r9, r6
   18098:	mov	r8, r6
   1809c:	beq	180d8 <main@@Base+0x23a4>
   180a0:	ldrb	r0, [r9]
   180a4:	cmp	r0, #93	; 0x5d
   180a8:	bne	180d4 <main@@Base+0x23a0>
   180ac:	add	r1, r9, #1
   180b0:	sub	r0, r6, r1
   180b4:	cmp	r0, #2
   180b8:	blt	18aac <main@@Base+0x2d78>
   180bc:	ldrb	r0, [r1]
   180c0:	cmp	r0, #32
   180c4:	bhi	181e4 <main@@Base+0x24b0>
   180c8:	bne	18aac <main@@Base+0x2d78>
   180cc:	ldrb	r0, [r9, #2]!
   180d0:	b	18aa4 <main@@Base+0x2d70>
   180d4:	mov	r8, r9
   180d8:	ldr	r0, [sl]
   180dc:	mov	r1, #1
   180e0:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   180e4:	mov	r3, r0
   180e8:	cmp	r0, #0
   180ec:	beq	16624 <main@@Base+0x8f0>
   180f0:	mov	r0, sl
   180f4:	mov	r1, r8
   180f8:	mov	r2, r6
   180fc:	bl	2158c <main@@Base+0xb858>
   18100:	mov	r1, r0
   18104:	sub	r0, r6, r0
   18108:	cmp	r0, #2
   1810c:	blt	18138 <main@@Base+0x2404>
   18110:	ldrb	r0, [r1]
   18114:	cmp	r0, #32
   18118:	bls	18124 <main@@Base+0x23f0>
   1811c:	mov	r8, r1
   18120:	b	18148 <main@@Base+0x2414>
   18124:	bne	18138 <main@@Base+0x2404>
   18128:	mov	r8, r1
   1812c:	ldrb	r0, [r8, #1]!
   18130:	cmp	r0, #32
   18134:	bhi	18148 <main@@Base+0x2414>
   18138:	mov	r0, sl
   1813c:	mov	r2, r6
   18140:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18144:	mov	r8, r0
   18148:	cmp	r8, r6
   1814c:	beq	181b8 <main@@Base+0x2484>
   18150:	ldrb	r0, [r8]
   18154:	cmp	r0, #44	; 0x2c
   18158:	bne	181c0 <main@@Base+0x248c>
   1815c:	add	r1, r8, #1
   18160:	sub	r0, r6, r1
   18164:	cmp	r0, #2
   18168:	blt	18190 <main@@Base+0x245c>
   1816c:	ldrb	r0, [r1]
   18170:	cmp	r0, #32
   18174:	bls	18180 <main@@Base+0x244c>
   18178:	mov	r8, r1
   1817c:	b	181a0 <main@@Base+0x246c>
   18180:	bne	18190 <main@@Base+0x245c>
   18184:	ldrb	r0, [r8, #2]!
   18188:	cmp	r0, #32
   1818c:	bhi	181a0 <main@@Base+0x246c>
   18190:	mov	r0, sl
   18194:	mov	r2, r6
   18198:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1819c:	mov	r8, r0
   181a0:	cmp	r8, r6
   181a4:	beq	181ec <main@@Base+0x24b8>
   181a8:	ldrb	r0, [r8]
   181ac:	cmp	r0, #93	; 0x5d
   181b0:	bne	180d8 <main@@Base+0x23a4>
   181b4:	b	181c8 <main@@Base+0x2494>
   181b8:	mov	r9, r6
   181bc:	b	18054 <main@@Base+0x2320>
   181c0:	cmp	r0, #93	; 0x5d
   181c4:	bne	185e0 <main@@Base+0x28ac>
   181c8:	add	r1, r8, #1
   181cc:	sub	r0, r6, r1
   181d0:	cmp	r0, #2
   181d4:	blt	18aac <main@@Base+0x2d78>
   181d8:	ldrb	r0, [r1]
   181dc:	cmp	r0, #32
   181e0:	bls	18a98 <main@@Base+0x2d64>
   181e4:	mov	r9, r1
   181e8:	b	18054 <main@@Base+0x2320>
   181ec:	mov	r0, sl
   181f0:	mov	r1, r6
   181f4:	b	185e8 <main@@Base+0x28b4>
   181f8:	bne	18208 <main@@Base+0x24d4>
   181fc:	ldrb	r0, [r8, #18]!
   18200:	cmp	r0, #32
   18204:	bhi	18218 <main@@Base+0x24e4>
   18208:	mov	r0, r5
   1820c:	mov	r2, r4
   18210:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18214:	mov	r8, r0
   18218:	cmp	r8, r4
   1821c:	beq	18250 <main@@Base+0x251c>
   18220:	ldrb	r0, [r8]
   18224:	cmp	r0, #58	; 0x3a
   18228:	bne	18250 <main@@Base+0x251c>
   1822c:	add	r1, r8, #1
   18230:	sub	r0, r4, r1
   18234:	cmp	r0, #2
   18238:	blt	19330 <main@@Base+0x35fc>
   1823c:	ldrb	r0, [r1]
   18240:	cmp	r0, #32
   18244:	bls	19320 <main@@Base+0x35ec>
   18248:	mov	r8, r1
   1824c:	b	19340 <main@@Base+0x360c>
   18250:	mov	r0, r5
   18254:	mov	r1, r8
   18258:	mov	r2, r4
   1825c:	mov	r3, #4
   18260:	bl	3133c <flatcc_json_parser_set_error@@Base>
   18264:	b	1933c <main@@Base+0x3608>
   18268:	bne	1827c <main@@Base+0x2548>
   1826c:	mov	r7, r8
   18270:	ldrb	r0, [r7, #4]!
   18274:	cmp	r0, #32
   18278:	bhi	1828c <main@@Base+0x2558>
   1827c:	mov	r0, sl
   18280:	mov	r2, r6
   18284:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18288:	mov	r7, r0
   1828c:	cmp	r7, r6
   18290:	beq	182c4 <main@@Base+0x2590>
   18294:	ldrb	r0, [r7]
   18298:	cmp	r0, #58	; 0x3a
   1829c:	bne	182c4 <main@@Base+0x2590>
   182a0:	add	r1, r7, #1
   182a4:	sub	r0, r6, r1
   182a8:	cmp	r0, #2
   182ac:	blt	19400 <main@@Base+0x36cc>
   182b0:	ldrb	r0, [r1]
   182b4:	cmp	r0, #32
   182b8:	bls	193f0 <main@@Base+0x36bc>
   182bc:	mov	r7, r1
   182c0:	b	19410 <main@@Base+0x36dc>
   182c4:	mov	r0, sl
   182c8:	mov	r1, r7
   182cc:	mov	r2, r6
   182d0:	mov	r3, #4
   182d4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   182d8:	b	1940c <main@@Base+0x36d8>
   182dc:	bne	182f0 <main@@Base+0x25bc>
   182e0:	mov	r9, r8
   182e4:	ldrb	r0, [r9, #5]!
   182e8:	cmp	r0, #32
   182ec:	bhi	18300 <main@@Base+0x25cc>
   182f0:	mov	r0, sl
   182f4:	mov	r2, r6
   182f8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   182fc:	mov	r9, r0
   18300:	cmp	r9, r6
   18304:	beq	18338 <main@@Base+0x2604>
   18308:	ldrb	r0, [r9]
   1830c:	cmp	r0, #58	; 0x3a
   18310:	bne	18338 <main@@Base+0x2604>
   18314:	add	r1, r9, #1
   18318:	sub	r0, r6, r1
   1831c:	cmp	r0, #2
   18320:	blt	19560 <main@@Base+0x382c>
   18324:	ldrb	r0, [r1]
   18328:	cmp	r0, #32
   1832c:	bls	19550 <main@@Base+0x381c>
   18330:	mov	r9, r1
   18334:	b	19570 <main@@Base+0x383c>
   18338:	mov	r0, sl
   1833c:	mov	r1, r9
   18340:	mov	r2, r6
   18344:	mov	r3, #4
   18348:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1834c:	b	1956c <main@@Base+0x3838>
   18350:	bne	18364 <main@@Base+0x2630>
   18354:	mov	r7, r8
   18358:	ldrb	r0, [r7, #8]!
   1835c:	cmp	r0, #32
   18360:	bhi	18374 <main@@Base+0x2640>
   18364:	mov	r0, sl
   18368:	mov	r2, r6
   1836c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18370:	mov	r7, r0
   18374:	cmp	r7, r6
   18378:	beq	183ac <main@@Base+0x2678>
   1837c:	ldrb	r0, [r7]
   18380:	cmp	r0, #58	; 0x3a
   18384:	bne	183ac <main@@Base+0x2678>
   18388:	add	r1, r7, #1
   1838c:	sub	r0, r6, r1
   18390:	cmp	r0, #2
   18394:	blt	1a154 <main@@Base+0x4420>
   18398:	ldrb	r0, [r1]
   1839c:	cmp	r0, #32
   183a0:	bls	1a144 <main@@Base+0x4410>
   183a4:	mov	r7, r1
   183a8:	b	1a164 <main@@Base+0x4430>
   183ac:	mov	r0, sl
   183b0:	mov	r1, r7
   183b4:	mov	r2, r6
   183b8:	mov	r3, #4
   183bc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   183c0:	b	1a160 <main@@Base+0x442c>
   183c4:	ldr	r4, [sp, #36]	; 0x24
   183c8:	bne	183dc <main@@Base+0x26a8>
   183cc:	mov	r6, r8
   183d0:	ldrb	r0, [r6, #18]!
   183d4:	cmp	r0, #32
   183d8:	bhi	183ec <main@@Base+0x26b8>
   183dc:	mov	r0, sl
   183e0:	mov	r2, r4
   183e4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   183e8:	mov	r6, r0
   183ec:	cmp	r6, r4
   183f0:	beq	18428 <main@@Base+0x26f4>
   183f4:	ldrb	r0, [r6]
   183f8:	cmp	r0, #58	; 0x3a
   183fc:	bne	18428 <main@@Base+0x26f4>
   18400:	ldr	r0, [sp, #36]	; 0x24
   18404:	add	r1, r6, #1
   18408:	sub	r0, r0, r1
   1840c:	cmp	r0, #2
   18410:	blt	1a388 <main@@Base+0x4654>
   18414:	ldrb	r0, [r1]
   18418:	cmp	r0, #32
   1841c:	bls	1a378 <main@@Base+0x4644>
   18420:	mov	r6, r1
   18424:	b	1a398 <main@@Base+0x4664>
   18428:	ldr	r2, [sp, #36]	; 0x24
   1842c:	mov	r0, sl
   18430:	mov	r1, r6
   18434:	mov	r3, #4
   18438:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1843c:	b	1a394 <main@@Base+0x4660>
   18440:	bne	18450 <main@@Base+0x271c>
   18444:	ldrb	r0, [r1, #2]!
   18448:	cmp	r0, #32
   1844c:	bhi	18464 <main@@Base+0x2730>
   18450:	mov	r1, r2
   18454:	mov	r0, sl
   18458:	mov	r2, r6
   1845c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18460:	mov	r1, r0
   18464:	cmp	r8, r1
   18468:	beq	18e70 <main@@Base+0x313c>
   1846c:	mov	r0, sl
   18470:	mov	r2, r6
   18474:	add	r3, sp, #44	; 0x2c
   18478:	bl	165e4 <main@@Base+0x8b0>
   1847c:	mov	r9, r0
   18480:	ldr	r0, [sp, #44]	; 0x2c
   18484:	cmp	r0, #0
   18488:	beq	1f2e4 <main@@Base+0x95b0>
   1848c:	ldr	r0, [sl]
   18490:	mov	r1, #12
   18494:	b	18eb0 <main@@Base+0x317c>
   18498:	bne	184a8 <main@@Base+0x2774>
   1849c:	ldrb	r0, [r7, #2]!
   184a0:	cmp	r0, #32
   184a4:	bhi	184b8 <main@@Base+0x2784>
   184a8:	mov	r0, sl
   184ac:	mov	r2, r6
   184b0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   184b4:	mov	r7, r0
   184b8:	cmp	r8, r7
   184bc:	beq	18e70 <main@@Base+0x313c>
   184c0:	mov	r4, #0
   184c4:	cmp	r7, r6
   184c8:	str	r4, [fp, #-52]	; 0xffffffcc
   184cc:	str	r4, [fp, #-56]	; 0xffffffc8
   184d0:	strb	r4, [sp, #60]	; 0x3c
   184d4:	str	r4, [sp, #48]	; 0x30
   184d8:	beq	18538 <main@@Base+0x2804>
   184dc:	sub	r0, fp, #56	; 0x38
   184e0:	mov	r1, r7
   184e4:	mov	r2, r6
   184e8:	add	r3, sp, #48	; 0x30
   184ec:	str	r0, [sp]
   184f0:	mov	r0, sl
   184f4:	bl	3314c <flatcc_json_parser_integer@@Base>
   184f8:	cmp	r0, r7
   184fc:	beq	18540 <main@@Base+0x280c>
   18500:	ldr	r2, [sp, #48]	; 0x30
   18504:	mov	r9, r0
   18508:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1850c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18510:	cmp	r2, #0
   18514:	beq	18548 <main@@Base+0x2814>
   18518:	subs	r2, r0, #129	; 0x81
   1851c:	sbcs	r1, r1, #0
   18520:	bcc	18570 <main@@Base+0x283c>
   18524:	mov	r0, sl
   18528:	mov	r1, r9
   1852c:	mov	r2, r6
   18530:	mov	r3, #8
   18534:	b	18564 <main@@Base+0x2830>
   18538:	mov	r9, r6
   1853c:	b	18580 <main@@Base+0x284c>
   18540:	mov	r9, r7
   18544:	b	18580 <main@@Base+0x284c>
   18548:	subs	r2, r0, #128	; 0x80
   1854c:	sbcs	r1, r1, #0
   18550:	bcc	18578 <main@@Base+0x2844>
   18554:	mov	r0, sl
   18558:	mov	r1, r9
   1855c:	mov	r2, r6
   18560:	mov	r3, #7
   18564:	bl	3133c <flatcc_json_parser_set_error@@Base>
   18568:	mov	r9, r0
   1856c:	b	18580 <main@@Base+0x284c>
   18570:	rsb	r4, r0, #0
   18574:	b	1857c <main@@Base+0x2848>
   18578:	mov	r4, r0
   1857c:	strb	r4, [sp, #60]	; 0x3c
   18580:	cmp	r7, r9
   18584:	bne	185bc <main@@Base+0x2888>
   18588:	movw	r3, #32888	; 0x8078
   1858c:	add	r0, sp, #60	; 0x3c
   18590:	mov	r1, r7
   18594:	mov	r2, r6
   18598:	movt	r3, #5
   1859c:	str	r0, [sp]
   185a0:	mov	r0, sl
   185a4:	bl	21004 <main@@Base+0xb2d0>
   185a8:	mov	r9, r0
   185ac:	cmp	r0, r7
   185b0:	cmpne	r9, r6
   185b4:	beq	1f2e4 <main@@Base+0x95b0>
   185b8:	ldrb	r4, [sp, #60]	; 0x3c
   185bc:	uxtb	r0, r4
   185c0:	cmp	r0, #8
   185c4:	bne	185d4 <main@@Base+0x28a0>
   185c8:	ldrb	r0, [sl, #8]
   185cc:	tst	r0, #2
   185d0:	beq	1e1e4 <main@@Base+0x84b0>
   185d4:	ldr	r0, [sl]
   185d8:	mov	r1, #6
   185dc:	b	1926c <main@@Base+0x3538>
   185e0:	mov	r0, sl
   185e4:	mov	r1, r8
   185e8:	mov	r2, r6
   185ec:	mov	r3, #9
   185f0:	b	1804c <main@@Base+0x2318>
   185f4:	bne	18604 <main@@Base+0x28d0>
   185f8:	ldrb	r0, [r1, #2]!
   185fc:	cmp	r0, #32
   18600:	bhi	18618 <main@@Base+0x28e4>
   18604:	mov	r1, r2
   18608:	mov	r0, sl
   1860c:	mov	r2, r6
   18610:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18614:	mov	r1, r0
   18618:	cmp	r8, r1
   1861c:	beq	18e70 <main@@Base+0x313c>
   18620:	mov	r0, sl
   18624:	mov	r2, r6
   18628:	add	r3, sp, #44	; 0x2c
   1862c:	bl	33678 <flatcc_json_parser_build_string@@Base>
   18630:	mov	r9, r0
   18634:	ldr	r0, [sp, #44]	; 0x2c
   18638:	cmp	r0, #0
   1863c:	beq	1f2e4 <main@@Base+0x95b0>
   18640:	ldr	r0, [sl]
   18644:	mov	r1, #3
   18648:	b	18eb0 <main@@Base+0x317c>
   1864c:	bne	1865c <main@@Base+0x2928>
   18650:	ldrb	r0, [r9, #2]!
   18654:	cmp	r0, #32
   18658:	bhi	1866c <main@@Base+0x2938>
   1865c:	mov	r0, sl
   18660:	mov	r2, r6
   18664:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18668:	mov	r9, r0
   1866c:	cmp	r8, r9
   18670:	beq	18e70 <main@@Base+0x313c>
   18674:	ldr	r0, [sl]
   18678:	mov	r1, #1
   1867c:	mov	r2, #1
   18680:	mvn	r3, #0
   18684:	bl	2d148 <flatcc_builder_start_vector@@Base>
   18688:	cmp	r0, #0
   1868c:	bne	1f2e4 <main@@Base+0x95b0>
   18690:	cmp	r9, r6
   18694:	beq	186c8 <main@@Base+0x2994>
   18698:	ldrb	r0, [r9]
   1869c:	cmp	r0, #91	; 0x5b
   186a0:	bne	186c8 <main@@Base+0x2994>
   186a4:	add	r1, r9, #1
   186a8:	sub	r0, r6, r1
   186ac:	cmp	r0, #2
   186b0:	blt	18710 <main@@Base+0x29dc>
   186b4:	ldrb	r0, [r1]
   186b8:	cmp	r0, #32
   186bc:	bls	18700 <main@@Base+0x29cc>
   186c0:	mov	r9, r1
   186c4:	b	18720 <main@@Base+0x29ec>
   186c8:	mov	r0, sl
   186cc:	mov	r1, r9
   186d0:	mov	r2, r6
   186d4:	mov	r3, #22
   186d8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   186dc:	mov	r9, r0
   186e0:	ldr	r0, [sl]
   186e4:	bl	2e174 <flatcc_builder_end_vector@@Base>
   186e8:	cmp	r0, #0
   186ec:	str	r0, [sp, #44]	; 0x2c
   186f0:	beq	1f2e4 <main@@Base+0x95b0>
   186f4:	ldr	r0, [sl]
   186f8:	mov	r1, #30
   186fc:	b	18eb0 <main@@Base+0x317c>
   18700:	bne	18710 <main@@Base+0x29dc>
   18704:	ldrb	r0, [r9, #2]!
   18708:	cmp	r0, #32
   1870c:	bhi	18720 <main@@Base+0x29ec>
   18710:	mov	r0, sl
   18714:	mov	r2, r6
   18718:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1871c:	mov	r9, r0
   18720:	cmp	r9, r6
   18724:	mov	r5, r6
   18728:	beq	1873c <main@@Base+0x2a08>
   1872c:	ldrb	r0, [r9]
   18730:	cmp	r0, #93	; 0x5d
   18734:	beq	18928 <main@@Base+0x2bf4>
   18738:	mov	r5, r9
   1873c:	mov	r0, #0
   18740:	mov	r1, #1
   18744:	strb	r0, [sp, #60]	; 0x3c
   18748:	ldr	r0, [sl]
   1874c:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   18750:	cmp	r0, #0
   18754:	beq	1f284 <main@@Base+0x9550>
   18758:	mov	r4, r0
   1875c:	mov	r9, r5
   18760:	mov	r5, #0
   18764:	cmp	r9, r6
   18768:	str	r5, [fp, #-52]	; 0xffffffcc
   1876c:	str	r5, [fp, #-56]	; 0xffffffc8
   18770:	strb	r5, [sp, #60]	; 0x3c
   18774:	str	r5, [sp, #48]	; 0x30
   18778:	beq	187c0 <main@@Base+0x2a8c>
   1877c:	sub	r0, fp, #56	; 0x38
   18780:	mov	r1, r9
   18784:	mov	r2, r6
   18788:	add	r3, sp, #48	; 0x30
   1878c:	str	r0, [sp]
   18790:	mov	r0, sl
   18794:	bl	3314c <flatcc_json_parser_integer@@Base>
   18798:	cmp	r0, r9
   1879c:	beq	187c8 <main@@Base+0x2a94>
   187a0:	mov	r1, r0
   187a4:	ldr	r0, [sp, #48]	; 0x30
   187a8:	cmp	r0, #0
   187ac:	beq	187d0 <main@@Base+0x2a9c>
   187b0:	mov	r0, sl
   187b4:	mov	r2, r6
   187b8:	mov	r3, #8
   187bc:	b	187f0 <main@@Base+0x2abc>
   187c0:	mov	r1, r6
   187c4:	b	187f8 <main@@Base+0x2ac4>
   187c8:	mov	r1, r9
   187cc:	b	187f8 <main@@Base+0x2ac4>
   187d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   187d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   187d8:	subs	r3, r0, #256	; 0x100
   187dc:	sbcs	r2, r2, #0
   187e0:	bcc	1890c <main@@Base+0x2bd8>
   187e4:	mov	r0, sl
   187e8:	mov	r2, r6
   187ec:	mov	r3, #7
   187f0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   187f4:	mov	r1, r0
   187f8:	cmp	r9, r1
   187fc:	bne	18834 <main@@Base+0x2b00>
   18800:	movw	r3, #32904	; 0x8088
   18804:	add	r0, sp, #60	; 0x3c
   18808:	mov	r1, r9
   1880c:	mov	r2, r6
   18810:	movt	r3, #5
   18814:	str	r0, [sp]
   18818:	mov	r0, sl
   1881c:	bl	211e0 <main@@Base+0xb4ac>
   18820:	mov	r1, r0
   18824:	cmp	r0, r9
   18828:	cmpne	r1, r6
   1882c:	beq	1f2b0 <main@@Base+0x957c>
   18830:	ldrb	r5, [sp, #60]	; 0x3c
   18834:	sub	r0, r6, r1
   18838:	strb	r5, [r4]
   1883c:	cmp	r0, #2
   18840:	blt	1886c <main@@Base+0x2b38>
   18844:	ldrb	r0, [r1]
   18848:	cmp	r0, #32
   1884c:	bls	18858 <main@@Base+0x2b24>
   18850:	mov	r9, r1
   18854:	b	1887c <main@@Base+0x2b48>
   18858:	bne	1886c <main@@Base+0x2b38>
   1885c:	mov	r9, r1
   18860:	ldrb	r0, [r9, #1]!
   18864:	cmp	r0, #32
   18868:	bhi	1887c <main@@Base+0x2b48>
   1886c:	mov	r0, sl
   18870:	mov	r2, r6
   18874:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18878:	mov	r9, r0
   1887c:	cmp	r9, r6
   18880:	beq	18918 <main@@Base+0x2be4>
   18884:	ldrb	r0, [r9]
   18888:	cmp	r0, #44	; 0x2c
   1888c:	bne	18920 <main@@Base+0x2bec>
   18890:	add	r1, r9, #1
   18894:	sub	r0, r6, r1
   18898:	cmp	r0, #2
   1889c:	blt	188c4 <main@@Base+0x2b90>
   188a0:	ldrb	r0, [r1]
   188a4:	cmp	r0, #32
   188a8:	bls	188b4 <main@@Base+0x2b80>
   188ac:	mov	r9, r1
   188b0:	b	188d4 <main@@Base+0x2ba0>
   188b4:	bne	188c4 <main@@Base+0x2b90>
   188b8:	ldrb	r0, [r9, #2]!
   188bc:	cmp	r0, #32
   188c0:	bhi	188d4 <main@@Base+0x2ba0>
   188c4:	mov	r0, sl
   188c8:	mov	r2, r6
   188cc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   188d0:	mov	r9, r0
   188d4:	cmp	r9, r6
   188d8:	beq	1896c <main@@Base+0x2c38>
   188dc:	ldrb	r0, [r9]
   188e0:	cmp	r0, #93	; 0x5d
   188e4:	beq	18928 <main@@Base+0x2bf4>
   188e8:	mov	r0, #0
   188ec:	mov	r1, #1
   188f0:	strb	r0, [sp, #60]	; 0x3c
   188f4:	ldr	r0, [sl]
   188f8:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   188fc:	mov	r4, r0
   18900:	cmp	r0, #0
   18904:	bne	18760 <main@@Base+0x2a2c>
   18908:	b	1f2e4 <main@@Base+0x95b0>
   1890c:	mov	r5, r0
   18910:	strb	r0, [sp, #60]	; 0x3c
   18914:	b	187f8 <main@@Base+0x2ac4>
   18918:	mov	r9, r6
   1891c:	b	186e0 <main@@Base+0x29ac>
   18920:	cmp	r0, #93	; 0x5d
   18924:	bne	1930c <main@@Base+0x35d8>
   18928:	add	r1, r9, #1
   1892c:	sub	r0, r6, r1
   18930:	cmp	r0, #2
   18934:	blt	1895c <main@@Base+0x2c28>
   18938:	ldrb	r0, [r1]
   1893c:	cmp	r0, #32
   18940:	bls	1894c <main@@Base+0x2c18>
   18944:	mov	r9, r1
   18948:	b	186e0 <main@@Base+0x29ac>
   1894c:	bne	1895c <main@@Base+0x2c28>
   18950:	ldrb	r0, [r9, #2]!
   18954:	cmp	r0, #32
   18958:	bhi	186e0 <main@@Base+0x29ac>
   1895c:	mov	r0, sl
   18960:	mov	r2, r6
   18964:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18968:	b	186dc <main@@Base+0x29a8>
   1896c:	mov	r0, sl
   18970:	mov	r1, r6
   18974:	b	19314 <main@@Base+0x35e0>
   18978:	bne	18988 <main@@Base+0x2c54>
   1897c:	ldrb	r0, [r1, #2]!
   18980:	cmp	r0, #32
   18984:	bhi	1899c <main@@Base+0x2c68>
   18988:	ldr	r0, [sp, #32]
   1898c:	mov	r1, r2
   18990:	mov	r2, r6
   18994:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18998:	mov	r1, r0
   1899c:	cmp	r8, r1
   189a0:	beq	189d8 <main@@Base+0x2ca4>
   189a4:	ldr	r0, [sp, #40]	; 0x28
   189a8:	ldr	sl, [sp, #32]
   189ac:	mov	r2, #8
   189b0:	mov	r3, #0
   189b4:	str	r2, [sp]
   189b8:	mov	r2, r6
   189bc:	str	r0, [sp, #4]
   189c0:	movw	r0, #7176	; 0x1c08
   189c4:	movt	r0, #2
   189c8:	str	r0, [sp, #8]
   189cc:	mov	r0, sl
   189d0:	bl	33944 <flatcc_json_parser_union@@Base>
   189d4:	b	1e1e0 <main@@Base+0x84ac>
   189d8:	eor	r0, r5, #889192448	; 0x35000000
   189dc:	orrs	r0, r0, r7
   189e0:	bne	18df0 <main@@Base+0x30bc>
   189e4:	cmp	r9, #6
   189e8:	mov	r9, r8
   189ec:	blt	18d90 <main@@Base+0x305c>
   189f0:	ldrb	r0, [r8, #5]
   189f4:	mov	r9, r8
   189f8:	cmp	r0, #34	; 0x22
   189fc:	bne	18d90 <main@@Base+0x305c>
   18a00:	add	r1, r8, #6
   18a04:	sub	r0, r6, r1
   18a08:	cmp	r0, #2
   18a0c:	blt	18a38 <main@@Base+0x2d04>
   18a10:	ldrb	r0, [r1]
   18a14:	cmp	r0, #32
   18a18:	bls	18a24 <main@@Base+0x2cf0>
   18a1c:	mov	r9, r1
   18a20:	b	18a48 <main@@Base+0x2d14>
   18a24:	bne	18a38 <main@@Base+0x2d04>
   18a28:	mov	r9, r8
   18a2c:	ldrb	r0, [r9, #7]!
   18a30:	cmp	r0, #32
   18a34:	bhi	18a48 <main@@Base+0x2d14>
   18a38:	ldr	r0, [sp, #32]
   18a3c:	mov	r2, r6
   18a40:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18a44:	mov	r9, r0
   18a48:	cmp	r9, r6
   18a4c:	beq	18a80 <main@@Base+0x2d4c>
   18a50:	ldrb	r0, [r9]
   18a54:	cmp	r0, #58	; 0x3a
   18a58:	bne	18a80 <main@@Base+0x2d4c>
   18a5c:	add	r1, r9, #1
   18a60:	sub	r0, r6, r1
   18a64:	cmp	r0, #2
   18a68:	blt	18d80 <main@@Base+0x304c>
   18a6c:	ldrb	r0, [r1]
   18a70:	cmp	r0, #32
   18a74:	bls	18d70 <main@@Base+0x303c>
   18a78:	mov	r9, r1
   18a7c:	b	18d90 <main@@Base+0x305c>
   18a80:	ldr	r0, [sp, #32]
   18a84:	mov	r1, r9
   18a88:	mov	r2, r6
   18a8c:	mov	r3, #4
   18a90:	bl	3133c <flatcc_json_parser_set_error@@Base>
   18a94:	b	18d8c <main@@Base+0x3058>
   18a98:	bne	18aac <main@@Base+0x2d78>
   18a9c:	ldrb	r0, [r8, #2]!
   18aa0:	mov	r9, r8
   18aa4:	cmp	r0, #32
   18aa8:	bhi	18054 <main@@Base+0x2320>
   18aac:	mov	r0, sl
   18ab0:	mov	r2, r6
   18ab4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18ab8:	b	18050 <main@@Base+0x231c>
   18abc:	bne	18acc <main@@Base+0x2d98>
   18ac0:	ldrb	r0, [r8, #12]!
   18ac4:	cmp	r0, #32
   18ac8:	bhi	18adc <main@@Base+0x2da8>
   18acc:	mov	r0, sl
   18ad0:	mov	r2, r6
   18ad4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18ad8:	mov	r8, r0
   18adc:	cmp	r8, r6
   18ae0:	beq	18b14 <main@@Base+0x2de0>
   18ae4:	ldrb	r0, [r8]
   18ae8:	cmp	r0, #58	; 0x3a
   18aec:	bne	18b14 <main@@Base+0x2de0>
   18af0:	add	r1, r8, #1
   18af4:	sub	r0, r6, r1
   18af8:	cmp	r0, #2
   18afc:	blt	1aa28 <main@@Base+0x4cf4>
   18b00:	ldrb	r0, [r1]
   18b04:	cmp	r0, #32
   18b08:	bls	1aa18 <main@@Base+0x4ce4>
   18b0c:	mov	r8, r1
   18b10:	b	1aa38 <main@@Base+0x4d04>
   18b14:	mov	r0, sl
   18b18:	mov	r1, r8
   18b1c:	mov	r2, r6
   18b20:	mov	r3, #4
   18b24:	bl	3133c <flatcc_json_parser_set_error@@Base>
   18b28:	b	1aa34 <main@@Base+0x4d00>
   18b2c:	bne	18b3c <main@@Base+0x2e08>
   18b30:	ldrb	r0, [r8, #20]!
   18b34:	cmp	r0, #32
   18b38:	bhi	18b4c <main@@Base+0x2e18>
   18b3c:	mov	r0, sl
   18b40:	mov	r2, r6
   18b44:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18b48:	mov	r8, r0
   18b4c:	cmp	r8, r6
   18b50:	beq	18b84 <main@@Base+0x2e50>
   18b54:	ldrb	r0, [r8]
   18b58:	cmp	r0, #58	; 0x3a
   18b5c:	bne	18b84 <main@@Base+0x2e50>
   18b60:	add	r1, r8, #1
   18b64:	sub	r0, r6, r1
   18b68:	cmp	r0, #2
   18b6c:	blt	1ab28 <main@@Base+0x4df4>
   18b70:	ldrb	r0, [r1]
   18b74:	cmp	r0, #32
   18b78:	bls	1ab18 <main@@Base+0x4de4>
   18b7c:	mov	r8, r1
   18b80:	b	1ab38 <main@@Base+0x4e04>
   18b84:	mov	r0, sl
   18b88:	mov	r1, r8
   18b8c:	mov	r2, r6
   18b90:	mov	r3, #4
   18b94:	bl	3133c <flatcc_json_parser_set_error@@Base>
   18b98:	b	1ab34 <main@@Base+0x4e00>
   18b9c:	bne	18bac <main@@Base+0x2e78>
   18ba0:	ldrb	r0, [r8, #25]!
   18ba4:	cmp	r0, #32
   18ba8:	bhi	18bbc <main@@Base+0x2e88>
   18bac:	mov	r0, sl
   18bb0:	mov	r2, r6
   18bb4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18bb8:	mov	r8, r0
   18bbc:	cmp	r8, r6
   18bc0:	beq	18bf4 <main@@Base+0x2ec0>
   18bc4:	ldrb	r0, [r8]
   18bc8:	cmp	r0, #58	; 0x3a
   18bcc:	bne	18bf4 <main@@Base+0x2ec0>
   18bd0:	add	r1, r8, #1
   18bd4:	sub	r0, r6, r1
   18bd8:	cmp	r0, #2
   18bdc:	blt	1abd0 <main@@Base+0x4e9c>
   18be0:	ldrb	r0, [r1]
   18be4:	cmp	r0, #32
   18be8:	bls	1abc0 <main@@Base+0x4e8c>
   18bec:	mov	r8, r1
   18bf0:	b	1abe0 <main@@Base+0x4eac>
   18bf4:	mov	r0, sl
   18bf8:	mov	r1, r8
   18bfc:	mov	r2, r6
   18c00:	mov	r3, #4
   18c04:	bl	3133c <flatcc_json_parser_set_error@@Base>
   18c08:	b	1abdc <main@@Base+0x4ea8>
   18c0c:	bne	18c20 <main@@Base+0x2eec>
   18c10:	mov	r7, r8
   18c14:	ldrb	r0, [r7, #6]!
   18c18:	cmp	r0, #32
   18c1c:	bhi	18c30 <main@@Base+0x2efc>
   18c20:	mov	r0, sl
   18c24:	mov	r2, r6
   18c28:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18c2c:	mov	r7, r0
   18c30:	cmp	r7, r6
   18c34:	beq	18c68 <main@@Base+0x2f34>
   18c38:	ldrb	r0, [r7]
   18c3c:	cmp	r0, #58	; 0x3a
   18c40:	bne	18c68 <main@@Base+0x2f34>
   18c44:	add	r1, r7, #1
   18c48:	sub	r0, r6, r1
   18c4c:	cmp	r0, #2
   18c50:	blt	1acf0 <main@@Base+0x4fbc>
   18c54:	ldrb	r0, [r1]
   18c58:	cmp	r0, #32
   18c5c:	bls	1ace0 <main@@Base+0x4fac>
   18c60:	mov	r7, r1
   18c64:	b	1ad00 <main@@Base+0x4fcc>
   18c68:	mov	r0, sl
   18c6c:	mov	r1, r7
   18c70:	mov	r2, r6
   18c74:	mov	r3, #4
   18c78:	bl	3133c <flatcc_json_parser_set_error@@Base>
   18c7c:	b	1acfc <main@@Base+0x4fc8>
   18c80:	bne	18c94 <main@@Base+0x2f60>
   18c84:	mov	r7, r8
   18c88:	ldrb	r0, [r7, #7]!
   18c8c:	cmp	r0, #32
   18c90:	bhi	18ca4 <main@@Base+0x2f70>
   18c94:	mov	r0, sl
   18c98:	mov	r2, r6
   18c9c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18ca0:	mov	r7, r0
   18ca4:	cmp	r7, r6
   18ca8:	beq	18cdc <main@@Base+0x2fa8>
   18cac:	ldrb	r0, [r7]
   18cb0:	cmp	r0, #58	; 0x3a
   18cb4:	bne	18cdc <main@@Base+0x2fa8>
   18cb8:	add	r1, r7, #1
   18cbc:	sub	r0, r6, r1
   18cc0:	cmp	r0, #2
   18cc4:	blt	1ae54 <main@@Base+0x5120>
   18cc8:	ldrb	r0, [r1]
   18ccc:	cmp	r0, #32
   18cd0:	bls	1ae44 <main@@Base+0x5110>
   18cd4:	mov	r7, r1
   18cd8:	b	1ae64 <main@@Base+0x5130>
   18cdc:	mov	r0, sl
   18ce0:	mov	r1, r7
   18ce4:	mov	r2, r6
   18ce8:	mov	r3, #4
   18cec:	bl	3133c <flatcc_json_parser_set_error@@Base>
   18cf0:	b	1ae60 <main@@Base+0x512c>
   18cf4:	ldr	r4, [sp, #36]	; 0x24
   18cf8:	bne	18d0c <main@@Base+0x2fd8>
   18cfc:	mov	r6, r8
   18d00:	ldrb	r0, [r6, #18]!
   18d04:	cmp	r0, #32
   18d08:	bhi	18d1c <main@@Base+0x2fe8>
   18d0c:	mov	r0, sl
   18d10:	mov	r2, r4
   18d14:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18d18:	mov	r6, r0
   18d1c:	cmp	r6, r4
   18d20:	beq	18d58 <main@@Base+0x3024>
   18d24:	ldrb	r0, [r6]
   18d28:	cmp	r0, #58	; 0x3a
   18d2c:	bne	18d58 <main@@Base+0x3024>
   18d30:	ldr	r0, [sp, #36]	; 0x24
   18d34:	add	r1, r6, #1
   18d38:	sub	r0, r0, r1
   18d3c:	cmp	r0, #2
   18d40:	blt	1aefc <main@@Base+0x51c8>
   18d44:	ldrb	r0, [r1]
   18d48:	cmp	r0, #32
   18d4c:	bls	1aeec <main@@Base+0x51b8>
   18d50:	mov	r6, r1
   18d54:	b	1af0c <main@@Base+0x51d8>
   18d58:	ldr	r2, [sp, #36]	; 0x24
   18d5c:	mov	r0, sl
   18d60:	mov	r1, r6
   18d64:	mov	r3, #4
   18d68:	bl	3133c <flatcc_json_parser_set_error@@Base>
   18d6c:	b	1af08 <main@@Base+0x51d4>
   18d70:	bne	18d80 <main@@Base+0x304c>
   18d74:	ldrb	r0, [r9, #2]!
   18d78:	cmp	r0, #32
   18d7c:	bhi	18d90 <main@@Base+0x305c>
   18d80:	ldr	r0, [sp, #32]
   18d84:	mov	r2, r6
   18d88:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18d8c:	mov	r9, r0
   18d90:	cmp	r8, r9
   18d94:	beq	18df0 <main@@Base+0x30bc>
   18d98:	ldr	sl, [sp, #32]
   18d9c:	mov	r1, #4
   18da0:	mov	r2, #2
   18da4:	mvn	r3, #-1073741824	; 0xc0000000
   18da8:	ldr	r0, [sl]
   18dac:	bl	2d148 <flatcc_builder_start_vector@@Base>
   18db0:	cmp	r0, #0
   18db4:	bne	1f2e4 <main@@Base+0x95b0>
   18db8:	cmp	r9, r6
   18dbc:	beq	18e7c <main@@Base+0x3148>
   18dc0:	ldrb	r0, [r9]
   18dc4:	cmp	r0, #91	; 0x5b
   18dc8:	bne	18e7c <main@@Base+0x3148>
   18dcc:	add	r1, r9, #1
   18dd0:	sub	r0, r6, r1
   18dd4:	cmp	r0, #2
   18dd8:	blt	18ed8 <main@@Base+0x31a4>
   18ddc:	ldrb	r0, [r1]
   18de0:	cmp	r0, #32
   18de4:	bls	18ec8 <main@@Base+0x3194>
   18de8:	mov	r9, r1
   18dec:	b	18ee8 <main@@Base+0x31b4>
   18df0:	movw	r0, #31088	; 0x7970
   18df4:	movt	r0, #24436	; 0x5f74
   18df8:	eor	r0, sl, r0
   18dfc:	orrs	r0, r0, r7
   18e00:	bne	18e6c <main@@Base+0x3138>
   18e04:	add	r7, r8, #8
   18e08:	ldr	sl, [sp, #32]
   18e0c:	mov	r1, #8
   18e10:	sub	r0, r6, r7
   18e14:	cmp	r0, #8
   18e18:	movcc	r1, r0
   18e1c:	sub	r1, r1, #1
   18e20:	cmp	r1, #7
   18e24:	bhi	1e1d0 <main@@Base+0x849c>
   18e28:	ldrb	r1, [r7]
   18e2c:	cmp	r1, #101	; 0x65
   18e30:	bne	1e1d0 <main@@Base+0x849c>
   18e34:	cmp	r0, #2
   18e38:	blt	1e1d0 <main@@Base+0x849c>
   18e3c:	ldrb	r0, [r8, #9]
   18e40:	cmp	r0, #34	; 0x22
   18e44:	bne	1e1d0 <main@@Base+0x849c>
   18e48:	add	r1, r8, #10
   18e4c:	sub	r0, r6, r1
   18e50:	cmp	r0, #2
   18e54:	blt	19080 <main@@Base+0x334c>
   18e58:	ldrb	r0, [r1]
   18e5c:	cmp	r0, #32
   18e60:	bls	19070 <main@@Base+0x333c>
   18e64:	mov	r8, r1
   18e68:	b	19090 <main@@Base+0x335c>
   18e6c:	ldr	sl, [sp, #32]
   18e70:	mov	r0, sl
   18e74:	mov	r1, r8
   18e78:	b	1e1d8 <main@@Base+0x84a4>
   18e7c:	mov	r0, sl
   18e80:	mov	r1, r9
   18e84:	mov	r2, r6
   18e88:	mov	r3, #22
   18e8c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   18e90:	mov	r9, r0
   18e94:	ldr	r0, [sl]
   18e98:	bl	2e174 <flatcc_builder_end_vector@@Base>
   18e9c:	cmp	r0, #0
   18ea0:	str	r0, [sp, #44]	; 0x2c
   18ea4:	beq	1f2e4 <main@@Base+0x95b0>
   18ea8:	ldr	r0, [sl]
   18eac:	mov	r1, #31
   18eb0:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   18eb4:	cmp	r0, #0
   18eb8:	beq	1f2e4 <main@@Base+0x95b0>
   18ebc:	ldr	r1, [sp, #44]	; 0x2c
   18ec0:	str	r1, [r0]
   18ec4:	b	1e1e4 <main@@Base+0x84b0>
   18ec8:	bne	18ed8 <main@@Base+0x31a4>
   18ecc:	ldrb	r0, [r9, #2]!
   18ed0:	cmp	r0, #32
   18ed4:	bhi	18ee8 <main@@Base+0x31b4>
   18ed8:	mov	r0, sl
   18edc:	mov	r2, r6
   18ee0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18ee4:	mov	r9, r0
   18ee8:	cmp	r9, r6
   18eec:	mov	r8, r6
   18ef0:	beq	18f2c <main@@Base+0x31f8>
   18ef4:	ldrb	r0, [r9]
   18ef8:	cmp	r0, #93	; 0x5d
   18efc:	bne	18f28 <main@@Base+0x31f4>
   18f00:	add	r1, r9, #1
   18f04:	sub	r0, r6, r1
   18f08:	cmp	r0, #2
   18f0c:	blt	1c418 <main@@Base+0x66e4>
   18f10:	ldrb	r0, [r1]
   18f14:	cmp	r0, #32
   18f18:	bhi	1905c <main@@Base+0x3328>
   18f1c:	bne	1c418 <main@@Base+0x66e4>
   18f20:	ldrb	r0, [r9, #2]!
   18f24:	b	1c410 <main@@Base+0x66dc>
   18f28:	mov	r8, r9
   18f2c:	ldr	r0, [sl]
   18f30:	mov	r1, #1
   18f34:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   18f38:	mov	r3, r0
   18f3c:	cmp	r0, #0
   18f40:	beq	16624 <main@@Base+0x8f0>
   18f44:	mov	r0, sl
   18f48:	mov	r1, r8
   18f4c:	mov	r2, r6
   18f50:	bl	2158c <main@@Base+0xb858>
   18f54:	mov	r1, r0
   18f58:	sub	r0, r6, r0
   18f5c:	cmp	r0, #2
   18f60:	blt	18f8c <main@@Base+0x3258>
   18f64:	ldrb	r0, [r1]
   18f68:	cmp	r0, #32
   18f6c:	bls	18f78 <main@@Base+0x3244>
   18f70:	mov	r8, r1
   18f74:	b	18f9c <main@@Base+0x3268>
   18f78:	bne	18f8c <main@@Base+0x3258>
   18f7c:	mov	r8, r1
   18f80:	ldrb	r0, [r8, #1]!
   18f84:	cmp	r0, #32
   18f88:	bhi	18f9c <main@@Base+0x3268>
   18f8c:	mov	r0, sl
   18f90:	mov	r2, r6
   18f94:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18f98:	mov	r8, r0
   18f9c:	cmp	r8, r6
   18fa0:	beq	19028 <main@@Base+0x32f4>
   18fa4:	ldrb	r0, [r8]
   18fa8:	cmp	r0, #44	; 0x2c
   18fac:	bne	19030 <main@@Base+0x32fc>
   18fb0:	add	r1, r8, #1
   18fb4:	sub	r0, r6, r1
   18fb8:	cmp	r0, #2
   18fbc:	blt	18fe4 <main@@Base+0x32b0>
   18fc0:	ldrb	r0, [r1]
   18fc4:	cmp	r0, #32
   18fc8:	bls	18fd4 <main@@Base+0x32a0>
   18fcc:	mov	r8, r1
   18fd0:	b	18ff4 <main@@Base+0x32c0>
   18fd4:	bne	18fe4 <main@@Base+0x32b0>
   18fd8:	ldrb	r0, [r8, #2]!
   18fdc:	cmp	r0, #32
   18fe0:	bhi	18ff4 <main@@Base+0x32c0>
   18fe4:	mov	r0, sl
   18fe8:	mov	r2, r6
   18fec:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   18ff0:	mov	r8, r0
   18ff4:	cmp	r8, r6
   18ff8:	beq	19064 <main@@Base+0x3330>
   18ffc:	ldrb	r0, [r8]
   19000:	cmp	r0, #93	; 0x5d
   19004:	bne	18f2c <main@@Base+0x31f8>
   19008:	add	r1, r8, #1
   1900c:	sub	r0, r6, r1
   19010:	cmp	r0, #2
   19014:	blt	1c418 <main@@Base+0x66e4>
   19018:	ldrb	r0, [r1]
   1901c:	cmp	r0, #32
   19020:	bls	1c404 <main@@Base+0x66d0>
   19024:	b	1905c <main@@Base+0x3328>
   19028:	mov	r9, r6
   1902c:	b	18e94 <main@@Base+0x3160>
   19030:	cmp	r0, #93	; 0x5d
   19034:	bne	1a364 <main@@Base+0x4630>
   19038:	add	r1, r8, #1
   1903c:	sub	r0, r6, r1
   19040:	cmp	r0, #2
   19044:	blt	1c418 <main@@Base+0x66e4>
   19048:	ldrb	r0, [r1]
   1904c:	cmp	r0, #32
   19050:	bls	1c3fc <main@@Base+0x66c8>
   19054:	ldr	r6, [sp, #36]	; 0x24
   19058:	ldr	sl, [sp, #32]
   1905c:	mov	r9, r1
   19060:	b	18e94 <main@@Base+0x3160>
   19064:	mov	r0, sl
   19068:	mov	r1, r6
   1906c:	b	1a36c <main@@Base+0x4638>
   19070:	bne	19080 <main@@Base+0x334c>
   19074:	ldrb	r0, [r8, #11]!
   19078:	cmp	r0, #32
   1907c:	bhi	19090 <main@@Base+0x335c>
   19080:	mov	r0, sl
   19084:	mov	r2, r6
   19088:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1908c:	mov	r8, r0
   19090:	cmp	r8, r6
   19094:	beq	190c8 <main@@Base+0x3394>
   19098:	ldrb	r0, [r8]
   1909c:	cmp	r0, #58	; 0x3a
   190a0:	bne	190c8 <main@@Base+0x3394>
   190a4:	add	r1, r8, #1
   190a8:	sub	r0, r6, r1
   190ac:	cmp	r0, #2
   190b0:	blt	1b0c8 <main@@Base+0x5394>
   190b4:	ldrb	r0, [r1]
   190b8:	cmp	r0, #32
   190bc:	bls	1b0b8 <main@@Base+0x5384>
   190c0:	mov	r8, r1
   190c4:	b	1b0d8 <main@@Base+0x53a4>
   190c8:	mov	r0, sl
   190cc:	mov	r1, r8
   190d0:	mov	r2, r6
   190d4:	mov	r3, #4
   190d8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   190dc:	b	1b0d4 <main@@Base+0x53a0>
   190e0:	bne	190f0 <main@@Base+0x33bc>
   190e4:	ldrb	r0, [r7, #2]!
   190e8:	cmp	r0, #32
   190ec:	bhi	19100 <main@@Base+0x33cc>
   190f0:	mov	r0, sl
   190f4:	mov	r2, r6
   190f8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   190fc:	mov	r7, r0
   19100:	cmp	r8, r7
   19104:	beq	18e70 <main@@Base+0x313c>
   19108:	sub	r4, r6, r7
   1910c:	mov	r0, #0
   19110:	cmp	r4, #4
   19114:	strb	r0, [sp, #60]	; 0x3c
   19118:	blt	1915c <main@@Base+0x3428>
   1911c:	movw	r1, #15172	; 0x3b44
   19120:	mov	r0, r7
   19124:	mov	r2, #4
   19128:	movt	r1, #4
   1912c:	bl	14ebc <bcmp@plt>
   19130:	cmp	r0, #0
   19134:	beq	191c4 <main@@Base+0x3490>
   19138:	cmp	r4, #5
   1913c:	blt	1915c <main@@Base+0x3428>
   19140:	movw	r1, #15177	; 0x3b49
   19144:	mov	r0, r7
   19148:	mov	r2, #5
   1914c:	movt	r1, #4
   19150:	bl	14ebc <bcmp@plt>
   19154:	cmp	r0, #0
   19158:	beq	19288 <main@@Base+0x3554>
   1915c:	mov	r4, #0
   19160:	cmp	r7, r6
   19164:	str	r4, [fp, #-52]	; 0xffffffcc
   19168:	str	r4, [fp, #-56]	; 0xffffffc8
   1916c:	str	r4, [sp, #48]	; 0x30
   19170:	beq	191bc <main@@Base+0x3488>
   19174:	sub	r0, fp, #56	; 0x38
   19178:	mov	r1, r7
   1917c:	mov	r2, r6
   19180:	add	r3, sp, #48	; 0x30
   19184:	str	r0, [sp]
   19188:	mov	r0, sl
   1918c:	bl	3314c <flatcc_json_parser_integer@@Base>
   19190:	cmp	r0, r7
   19194:	beq	191d0 <main@@Base+0x349c>
   19198:	mov	r9, r0
   1919c:	ldr	r0, [sp, #48]	; 0x30
   191a0:	cmp	r0, #0
   191a4:	beq	191d8 <main@@Base+0x34a4>
   191a8:	mov	r0, sl
   191ac:	mov	r1, r9
   191b0:	mov	r2, r6
   191b4:	mov	r3, #8
   191b8:	b	191fc <main@@Base+0x34c8>
   191bc:	mov	r9, r6
   191c0:	b	19204 <main@@Base+0x34d0>
   191c4:	mov	r4, #1
   191c8:	add	r9, r7, #4
   191cc:	b	19210 <main@@Base+0x34dc>
   191d0:	mov	r9, r7
   191d4:	b	19204 <main@@Base+0x34d0>
   191d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   191dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   191e0:	subs	r2, r0, #256	; 0x100
   191e4:	sbcs	r1, r1, #0
   191e8:	bcc	19294 <main@@Base+0x3560>
   191ec:	mov	r0, sl
   191f0:	mov	r1, r9
   191f4:	mov	r2, r6
   191f8:	mov	r3, #7
   191fc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   19200:	mov	r9, r0
   19204:	uxtb	r4, r4
   19208:	cmp	r4, #0
   1920c:	movwne	r4, #1
   19210:	strb	r4, [sp, #60]	; 0x3c
   19214:	cmp	r7, r9
   19218:	bne	19250 <main@@Base+0x351c>
   1921c:	movw	r3, #32980	; 0x80d4
   19220:	add	r0, sp, #60	; 0x3c
   19224:	mov	r1, r7
   19228:	mov	r2, r6
   1922c:	movt	r3, #5
   19230:	str	r0, [sp]
   19234:	mov	r0, sl
   19238:	bl	22ef0 <main@@Base+0xd1bc>
   1923c:	mov	r9, r0
   19240:	cmp	r0, r7
   19244:	cmpne	r9, r6
   19248:	beq	1f2e4 <main@@Base+0x95b0>
   1924c:	ldrb	r4, [sp, #60]	; 0x3c
   19250:	cmp	r4, #1
   19254:	bne	19264 <main@@Base+0x3530>
   19258:	ldrb	r0, [sl, #8]
   1925c:	tst	r0, #2
   19260:	beq	1e1e4 <main@@Base+0x84b0>
   19264:	ldr	r0, [sl]
   19268:	mov	r1, #15
   1926c:	mov	r2, #1
   19270:	mov	r3, #1
   19274:	bl	2e760 <flatcc_builder_table_add@@Base>
   19278:	cmp	r0, #0
   1927c:	beq	1f2e4 <main@@Base+0x95b0>
   19280:	strb	r4, [r0]
   19284:	b	1e1e4 <main@@Base+0x84b0>
   19288:	mov	r4, #0
   1928c:	add	r9, r7, #5
   19290:	b	19210 <main@@Base+0x34dc>
   19294:	mov	r4, r0
   19298:	b	19204 <main@@Base+0x34d0>
   1929c:	bne	192ac <main@@Base+0x3578>
   192a0:	ldrb	r0, [r8, #23]!
   192a4:	cmp	r0, #32
   192a8:	bhi	192bc <main@@Base+0x3588>
   192ac:	mov	r0, sl
   192b0:	mov	r2, r6
   192b4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   192b8:	mov	r8, r0
   192bc:	cmp	r8, r6
   192c0:	beq	192f4 <main@@Base+0x35c0>
   192c4:	ldrb	r0, [r8]
   192c8:	cmp	r0, #58	; 0x3a
   192cc:	bne	192f4 <main@@Base+0x35c0>
   192d0:	add	r1, r8, #1
   192d4:	sub	r0, r6, r1
   192d8:	cmp	r0, #2
   192dc:	blt	1b130 <main@@Base+0x53fc>
   192e0:	ldrb	r0, [r1]
   192e4:	cmp	r0, #32
   192e8:	bls	1b120 <main@@Base+0x53ec>
   192ec:	mov	r8, r1
   192f0:	b	1b140 <main@@Base+0x540c>
   192f4:	mov	r0, sl
   192f8:	mov	r1, r8
   192fc:	mov	r2, r6
   19300:	mov	r3, #4
   19304:	bl	3133c <flatcc_json_parser_set_error@@Base>
   19308:	b	1b13c <main@@Base+0x5408>
   1930c:	mov	r0, sl
   19310:	mov	r1, r9
   19314:	mov	r2, r6
   19318:	mov	r3, #9
   1931c:	b	186d8 <main@@Base+0x29a4>
   19320:	bne	19330 <main@@Base+0x35fc>
   19324:	ldrb	r0, [r8, #2]!
   19328:	cmp	r0, #32
   1932c:	bhi	19340 <main@@Base+0x360c>
   19330:	mov	r0, r5
   19334:	mov	r2, r4
   19338:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1933c:	mov	r8, r0
   19340:	cmp	r9, r8
   19344:	beq	193a4 <main@@Base+0x3670>
   19348:	ldr	sl, [sp, #32]
   1934c:	mov	r1, #1
   19350:	mov	r2, #1
   19354:	mvn	r3, #0
   19358:	ldr	r0, [sl]
   1935c:	bl	2d148 <flatcc_builder_start_vector@@Base>
   19360:	cmp	r0, #0
   19364:	bne	1f298 <main@@Base+0x9564>
   19368:	ldr	r6, [sp, #36]	; 0x24
   1936c:	cmp	r8, r6
   19370:	beq	193b8 <main@@Base+0x3684>
   19374:	ldrb	r0, [r8]
   19378:	cmp	r0, #91	; 0x5b
   1937c:	bne	193b8 <main@@Base+0x3684>
   19380:	add	r1, r8, #1
   19384:	sub	r0, r6, r1
   19388:	cmp	r0, #2
   1938c:	blt	1a638 <main@@Base+0x4904>
   19390:	ldrb	r0, [r1]
   19394:	cmp	r0, #32
   19398:	bls	1a628 <main@@Base+0x48f4>
   1939c:	mov	r8, r1
   193a0:	b	1a648 <main@@Base+0x4914>
   193a4:	ldr	sl, [sp, #32]
   193a8:	mov	r0, sl
   193ac:	mov	r1, r9
   193b0:	ldr	r6, [sp, #36]	; 0x24
   193b4:	b	1e1d8 <main@@Base+0x84a4>
   193b8:	mov	r0, sl
   193bc:	mov	r1, r8
   193c0:	mov	r2, r6
   193c4:	mov	r3, #22
   193c8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   193cc:	mov	r8, r0
   193d0:	ldr	r0, [sl]
   193d4:	bl	2e174 <flatcc_builder_end_vector@@Base>
   193d8:	cmp	r0, #0
   193dc:	str	r0, [sp, #44]	; 0x2c
   193e0:	beq	16624 <main@@Base+0x8f0>
   193e4:	ldr	r0, [sl]
   193e8:	mov	r1, #24
   193ec:	b	1ee28 <main@@Base+0x90f4>
   193f0:	bne	19400 <main@@Base+0x36cc>
   193f4:	ldrb	r0, [r7, #2]!
   193f8:	cmp	r0, #32
   193fc:	bhi	19410 <main@@Base+0x36dc>
   19400:	mov	r0, sl
   19404:	mov	r2, r6
   19408:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1940c:	mov	r7, r0
   19410:	cmp	r8, r7
   19414:	beq	18e70 <main@@Base+0x313c>
   19418:	mov	r4, #0
   1941c:	cmp	r7, r6
   19420:	str	r4, [fp, #-52]	; 0xffffffcc
   19424:	str	r4, [fp, #-56]	; 0xffffffc8
   19428:	strh	r4, [sp, #60]	; 0x3c
   1942c:	str	r4, [sp, #48]	; 0x30
   19430:	beq	19494 <main@@Base+0x3760>
   19434:	sub	r0, fp, #56	; 0x38
   19438:	mov	r1, r7
   1943c:	mov	r2, r6
   19440:	add	r3, sp, #48	; 0x30
   19444:	str	r0, [sp]
   19448:	mov	r0, sl
   1944c:	bl	3314c <flatcc_json_parser_integer@@Base>
   19450:	cmp	r0, r7
   19454:	beq	1949c <main@@Base+0x3768>
   19458:	ldr	r2, [sp, #48]	; 0x30
   1945c:	mov	r9, r0
   19460:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19464:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19468:	cmp	r2, #0
   1946c:	beq	194a4 <main@@Base+0x3770>
   19470:	movw	r2, #32769	; 0x8001
   19474:	subs	r2, r0, r2
   19478:	sbcs	r1, r1, #0
   1947c:	bcc	194cc <main@@Base+0x3798>
   19480:	mov	r0, sl
   19484:	mov	r1, r9
   19488:	mov	r2, r6
   1948c:	mov	r3, #8
   19490:	b	194c0 <main@@Base+0x378c>
   19494:	mov	r9, r6
   19498:	b	194dc <main@@Base+0x37a8>
   1949c:	mov	r9, r7
   194a0:	b	194dc <main@@Base+0x37a8>
   194a4:	subs	r2, r0, #32768	; 0x8000
   194a8:	sbcs	r1, r1, #0
   194ac:	bcc	194d4 <main@@Base+0x37a0>
   194b0:	mov	r0, sl
   194b4:	mov	r1, r9
   194b8:	mov	r2, r6
   194bc:	mov	r3, #7
   194c0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   194c4:	mov	r9, r0
   194c8:	b	194dc <main@@Base+0x37a8>
   194cc:	rsb	r4, r0, #0
   194d0:	b	194d8 <main@@Base+0x37a4>
   194d4:	mov	r4, r0
   194d8:	strh	r4, [sp, #60]	; 0x3c
   194dc:	cmp	r7, r9
   194e0:	bne	19518 <main@@Base+0x37e4>
   194e4:	movw	r3, #32916	; 0x8094
   194e8:	add	r0, sp, #60	; 0x3c
   194ec:	mov	r1, r7
   194f0:	mov	r2, r6
   194f4:	movt	r3, #5
   194f8:	str	r0, [sp]
   194fc:	mov	r0, sl
   19500:	bl	213ac <main@@Base+0xb678>
   19504:	mov	r9, r0
   19508:	cmp	r0, r7
   1950c:	cmpne	r9, r6
   19510:	beq	1f2e4 <main@@Base+0x95b0>
   19514:	ldrh	r4, [sp, #60]	; 0x3c
   19518:	uxth	r0, r4
   1951c:	cmp	r0, #100	; 0x64
   19520:	bne	19530 <main@@Base+0x37fc>
   19524:	ldrb	r0, [sl, #8]
   19528:	tst	r0, #2
   1952c:	beq	1e1e4 <main@@Base+0x84b0>
   19530:	ldr	r0, [sl]
   19534:	mov	r1, #2
   19538:	mov	r2, #2
   1953c:	mov	r3, #2
   19540:	bl	2e760 <flatcc_builder_table_add@@Base>
   19544:	cmp	r0, #0
   19548:	bne	1ae3c <main@@Base+0x5108>
   1954c:	b	1f2e4 <main@@Base+0x95b0>
   19550:	bne	19560 <main@@Base+0x382c>
   19554:	ldrb	r0, [r9, #2]!
   19558:	cmp	r0, #32
   1955c:	bhi	19570 <main@@Base+0x383c>
   19560:	mov	r0, sl
   19564:	mov	r2, r6
   19568:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1956c:	mov	r9, r0
   19570:	cmp	r8, r9
   19574:	beq	18e70 <main@@Base+0x313c>
   19578:	ldr	r0, [sl]
   1957c:	mov	r1, #0
   19580:	mov	r2, #32
   19584:	mov	r3, #16
   19588:	bl	2e760 <flatcc_builder_table_add@@Base>
   1958c:	cmp	r0, #0
   19590:	beq	1f2e0 <main@@Base+0x95ac>
   19594:	cmp	r9, r6
   19598:	beq	195d0 <main@@Base+0x389c>
   1959c:	mov	sl, r0
   195a0:	ldrb	r0, [r9]
   195a4:	cmp	r0, #123	; 0x7b
   195a8:	bne	195d0 <main@@Base+0x389c>
   195ac:	add	r1, r9, #1
   195b0:	sub	r0, r6, r1
   195b4:	cmp	r0, #2
   195b8:	blt	195fc <main@@Base+0x38c8>
   195bc:	ldrb	r0, [r1]
   195c0:	cmp	r0, #32
   195c4:	bls	195ec <main@@Base+0x38b8>
   195c8:	mov	r9, r1
   195cc:	b	1960c <main@@Base+0x38d8>
   195d0:	ldr	sl, [sp, #32]
   195d4:	mov	r1, r9
   195d8:	mov	r2, r6
   195dc:	mov	r3, #21
   195e0:	mov	r0, sl
   195e4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   195e8:	b	1e1e0 <main@@Base+0x84ac>
   195ec:	bne	195fc <main@@Base+0x38c8>
   195f0:	ldrb	r0, [r9, #2]!
   195f4:	cmp	r0, #32
   195f8:	bhi	1960c <main@@Base+0x38d8>
   195fc:	ldr	r0, [sp, #32]
   19600:	mov	r2, r6
   19604:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   19608:	mov	r9, r0
   1960c:	cmp	r9, r6
   19610:	mov	r2, r6
   19614:	beq	19654 <main@@Base+0x3920>
   19618:	ldrb	r0, [r9]
   1961c:	cmp	r0, #125	; 0x7d
   19620:	bne	19650 <main@@Base+0x391c>
   19624:	ldr	sl, [sp, #32]
   19628:	add	r1, r9, #1
   1962c:	sub	r0, r6, r1
   19630:	cmp	r0, #2
   19634:	blt	1ce04 <main@@Base+0x70d0>
   19638:	ldrb	r0, [r1]
   1963c:	cmp	r0, #32
   19640:	bhi	1a12c <main@@Base+0x43f8>
   19644:	bne	1ce04 <main@@Base+0x70d0>
   19648:	ldrb	r0, [r9, #2]!
   1964c:	b	1cdfc <main@@Base+0x70c8>
   19650:	mov	r2, r9
   19654:	add	r0, sl, #26
   19658:	str	r0, [sp, #20]
   1965c:	cmp	r2, r6
   19660:	mov	r9, r6
   19664:	beq	19694 <main@@Base+0x3960>
   19668:	ldrb	r0, [r2]
   1966c:	cmp	r0, #34	; 0x22
   19670:	bne	1967c <main@@Base+0x3948>
   19674:	add	r9, r2, #1
   19678:	b	19694 <main@@Base+0x3960>
   1967c:	ldr	r0, [sp, #32]
   19680:	mov	r1, r2
   19684:	mov	r2, r6
   19688:	mov	r3, #5
   1968c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   19690:	mov	r9, r0
   19694:	sub	ip, r6, r9
   19698:	mov	r0, #8
   1969c:	cmp	ip, #8
   196a0:	movcc	r0, ip
   196a4:	sub	r7, r0, #1
   196a8:	cmp	r7, #7
   196ac:	bhi	19ff0 <main@@Base+0x42bc>
   196b0:	add	r4, pc, #32
   196b4:	mov	r1, #0
   196b8:	mov	lr, #0
   196bc:	mov	r8, #0
   196c0:	mov	r6, #0
   196c4:	mov	r3, #0
   196c8:	mov	r5, #0
   196cc:	mov	r0, #0
   196d0:	mov	r2, #0
   196d4:	ldr	pc, [r4, r7, lsl #2]
   196d8:	andeq	r9, r1, ip, lsr r7
   196dc:	andeq	r9, r1, r4, lsr r7
   196e0:	andeq	r9, r1, ip, lsr #14
   196e4:	andeq	r9, r1, r4, lsr #14
   196e8:	andeq	r9, r1, r8, lsl r7
   196ec:	andeq	r9, r1, ip, lsl #14
   196f0:	strdeq	r9, [r1], -ip
   196f4:	strdeq	r9, [r1], -r8
   196f8:	ldrb	lr, [r9, #7]
   196fc:	ldrb	r0, [r9, #6]
   19700:	mov	r8, r1
   19704:	orr	r0, lr, r0, lsl #8
   19708:	mov	r1, r0
   1970c:	ldrb	r0, [r9, #5]
   19710:	mov	r6, r8
   19714:	orr	r1, r1, r0, lsl #16
   19718:	ldrb	r0, [r9, #4]
   1971c:	mov	r3, r6
   19720:	orr	r1, r1, r0, lsl #24
   19724:	ldrb	r0, [r9, #3]
   19728:	orr	r5, r0, r3
   1972c:	ldrb	r0, [r9, #2]
   19730:	orr	r0, r5, r0, lsl #8
   19734:	ldrb	r2, [r9, #1]
   19738:	orr	r2, r0, r2, lsl #16
   1973c:	ldrb	r0, [r9]
   19740:	movw	r3, #29556	; 0x7374
   19744:	movt	r3, #29797	; 0x7465
   19748:	orr	r2, r2, r0, lsl #24
   1974c:	mvn	r0, #-855638016	; 0xcd000000
   19750:	subs	r0, r0, r1
   19754:	sbcs	r0, r3, r2
   19758:	bcc	197c0 <main@@Base+0x3a8c>
   1975c:	ldr	r6, [sp, #36]	; 0x24
   19760:	and	r1, r1, #-16777216	; 0xff000000
   19764:	eor	r0, r2, r3
   19768:	eor	r2, r1, #822083584	; 0x31000000
   1976c:	orrs	r2, r2, r0
   19770:	beq	1987c <main@@Base+0x3b48>
   19774:	eor	r1, r1, #838860800	; 0x32000000
   19778:	orrs	r0, r1, r0
   1977c:	bne	19ff0 <main@@Base+0x42bc>
   19780:	cmp	ip, #6
   19784:	mov	r7, r9
   19788:	blt	19b5c <main@@Base+0x3e28>
   1978c:	ldrb	r0, [r9, #5]
   19790:	mov	r7, r9
   19794:	cmp	r0, #34	; 0x22
   19798:	bne	19b5c <main@@Base+0x3e28>
   1979c:	add	r1, r9, #6
   197a0:	sub	r0, r6, r1
   197a4:	cmp	r0, #2
   197a8:	blt	19968 <main@@Base+0x3c34>
   197ac:	ldrb	r0, [r1]
   197b0:	cmp	r0, #32
   197b4:	bls	19954 <main@@Base+0x3c20>
   197b8:	mov	r7, r1
   197bc:	b	19978 <main@@Base+0x3c44>
   197c0:	ldr	r6, [sp, #36]	; 0x24
   197c4:	cmn	r2, #-2013265919	; 0x88000001
   197c8:	bhi	19820 <main@@Base+0x3aec>
   197cc:	and	r1, r1, #-16777216	; 0xff000000
   197d0:	eor	r0, r2, r3
   197d4:	eor	r1, r1, #855638016	; 0x33000000
   197d8:	orrs	r0, r1, r0
   197dc:	bne	19ff0 <main@@Base+0x42bc>
   197e0:	cmp	ip, #6
   197e4:	mov	r1, r9
   197e8:	blt	19e24 <main@@Base+0x40f0>
   197ec:	ldrb	r0, [r9, #5]
   197f0:	mov	r1, r9
   197f4:	cmp	r0, #34	; 0x22
   197f8:	bne	19e24 <main@@Base+0x40f0>
   197fc:	add	r2, r9, #6
   19800:	sub	r0, r6, r2
   19804:	cmp	r0, #2
   19808:	blt	19a58 <main@@Base+0x3d24>
   1980c:	ldrb	r0, [r2]
   19810:	cmp	r0, #32
   19814:	bls	19a44 <main@@Base+0x3d10>
   19818:	mov	r1, r2
   1981c:	b	19a6c <main@@Base+0x3d38>
   19820:	lsr	r1, r2, #24
   19824:	and	r0, r2, #-16777216	; 0xff000000
   19828:	cmp	r1, #120	; 0x78
   1982c:	bhi	198bc <main@@Base+0x3b88>
   19830:	teq	r0, #2013265920	; 0x78000000
   19834:	bne	19ff0 <main@@Base+0x42bc>
   19838:	cmp	ip, #2
   1983c:	mov	r7, r9
   19840:	blt	19e64 <main@@Base+0x4130>
   19844:	ldrb	r0, [r9, #1]
   19848:	mov	r7, r9
   1984c:	cmp	r0, #34	; 0x22
   19850:	bne	19e64 <main@@Base+0x4130>
   19854:	add	r1, r9, #2
   19858:	sub	r0, r6, r1
   1985c:	cmp	r0, #2
   19860:	blt	19ad4 <main@@Base+0x3da0>
   19864:	ldrb	r0, [r1]
   19868:	cmp	r0, #32
   1986c:	bls	19abc <main@@Base+0x3d88>
   19870:	ldr	r6, [sp, #36]	; 0x24
   19874:	mov	r7, r1
   19878:	b	19ae4 <main@@Base+0x3db0>
   1987c:	cmp	ip, #6
   19880:	mov	r7, r9
   19884:	blt	19c84 <main@@Base+0x3f50>
   19888:	ldrb	r0, [r9, #5]
   1988c:	mov	r7, r9
   19890:	cmp	r0, #34	; 0x22
   19894:	bne	19c84 <main@@Base+0x3f50>
   19898:	add	r1, r9, #6
   1989c:	sub	r0, r6, r1
   198a0:	cmp	r0, #2
   198a4:	blt	199e0 <main@@Base+0x3cac>
   198a8:	ldrb	r0, [r1]
   198ac:	cmp	r0, #32
   198b0:	bls	199cc <main@@Base+0x3c98>
   198b4:	mov	r7, r1
   198b8:	b	199f0 <main@@Base+0x3cbc>
   198bc:	teq	r0, #2030043136	; 0x79000000
   198c0:	beq	19910 <main@@Base+0x3bdc>
   198c4:	teq	r0, #2046820352	; 0x7a000000
   198c8:	bne	19ff0 <main@@Base+0x42bc>
   198cc:	cmp	ip, #2
   198d0:	mov	r7, r9
   198d4:	blt	19ef4 <main@@Base+0x41c0>
   198d8:	ldrb	r0, [r9, #1]
   198dc:	mov	r7, r9
   198e0:	cmp	r0, #34	; 0x22
   198e4:	bne	19ef4 <main@@Base+0x41c0>
   198e8:	add	r1, r9, #2
   198ec:	sub	r0, r6, r1
   198f0:	cmp	r0, #2
   198f4:	blt	19d0c <main@@Base+0x3fd8>
   198f8:	ldrb	r0, [r1]
   198fc:	cmp	r0, #32
   19900:	bls	19cf4 <main@@Base+0x3fc0>
   19904:	ldr	r6, [sp, #36]	; 0x24
   19908:	mov	r7, r1
   1990c:	b	19d1c <main@@Base+0x3fe8>
   19910:	cmp	ip, #2
   19914:	mov	r7, r9
   19918:	blt	19f84 <main@@Base+0x4250>
   1991c:	ldrb	r0, [r9, #1]
   19920:	mov	r7, r9
   19924:	cmp	r0, #34	; 0x22
   19928:	bne	19f84 <main@@Base+0x4250>
   1992c:	add	r1, r9, #2
   19930:	sub	r0, r6, r1
   19934:	cmp	r0, #2
   19938:	blt	19d90 <main@@Base+0x405c>
   1993c:	ldrb	r0, [r1]
   19940:	cmp	r0, #32
   19944:	bls	19d78 <main@@Base+0x4044>
   19948:	ldr	r6, [sp, #36]	; 0x24
   1994c:	mov	r7, r1
   19950:	b	19da0 <main@@Base+0x406c>
   19954:	bne	19968 <main@@Base+0x3c34>
   19958:	mov	r7, r9
   1995c:	ldrb	r0, [r7, #7]!
   19960:	cmp	r0, #32
   19964:	bhi	19978 <main@@Base+0x3c44>
   19968:	ldr	r0, [sp, #32]
   1996c:	mov	r2, r6
   19970:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   19974:	mov	r7, r0
   19978:	cmp	r7, r6
   1997c:	beq	199b4 <main@@Base+0x3c80>
   19980:	ldrb	r0, [r7]
   19984:	cmp	r0, #58	; 0x3a
   19988:	bne	199b4 <main@@Base+0x3c80>
   1998c:	add	r1, r7, #1
   19990:	sub	r0, r6, r1
   19994:	cmp	r0, #2
   19998:	blt	19b4c <main@@Base+0x3e18>
   1999c:	ldrb	r0, [r1]
   199a0:	cmp	r0, #32
   199a4:	bls	19b38 <main@@Base+0x3e04>
   199a8:	ldr	r6, [sp, #36]	; 0x24
   199ac:	mov	r7, r1
   199b0:	b	19b5c <main@@Base+0x3e28>
   199b4:	ldr	r0, [sp, #32]
   199b8:	mov	r1, r7
   199bc:	mov	r2, r6
   199c0:	mov	r3, #4
   199c4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   199c8:	b	19b58 <main@@Base+0x3e24>
   199cc:	bne	199e0 <main@@Base+0x3cac>
   199d0:	mov	r7, r9
   199d4:	ldrb	r0, [r7, #7]!
   199d8:	cmp	r0, #32
   199dc:	bhi	199f0 <main@@Base+0x3cbc>
   199e0:	ldr	r0, [sp, #32]
   199e4:	mov	r2, r6
   199e8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   199ec:	mov	r7, r0
   199f0:	cmp	r7, r6
   199f4:	beq	19a2c <main@@Base+0x3cf8>
   199f8:	ldrb	r0, [r7]
   199fc:	cmp	r0, #58	; 0x3a
   19a00:	bne	19a2c <main@@Base+0x3cf8>
   19a04:	add	r1, r7, #1
   19a08:	sub	r0, r6, r1
   19a0c:	cmp	r0, #2
   19a10:	blt	19c74 <main@@Base+0x3f40>
   19a14:	ldrb	r0, [r1]
   19a18:	cmp	r0, #32
   19a1c:	bls	19c60 <main@@Base+0x3f2c>
   19a20:	ldr	r6, [sp, #36]	; 0x24
   19a24:	mov	r7, r1
   19a28:	b	19c84 <main@@Base+0x3f50>
   19a2c:	ldr	r0, [sp, #32]
   19a30:	mov	r1, r7
   19a34:	mov	r2, r6
   19a38:	mov	r3, #4
   19a3c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   19a40:	b	19c80 <main@@Base+0x3f4c>
   19a44:	bne	19a58 <main@@Base+0x3d24>
   19a48:	mov	r1, r9
   19a4c:	ldrb	r0, [r1, #7]!
   19a50:	cmp	r0, #32
   19a54:	bhi	19a6c <main@@Base+0x3d38>
   19a58:	ldr	r0, [sp, #32]
   19a5c:	mov	r1, r2
   19a60:	mov	r2, r6
   19a64:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   19a68:	mov	r1, r0
   19a6c:	cmp	r1, r6
   19a70:	beq	19aa8 <main@@Base+0x3d74>
   19a74:	ldrb	r0, [r1]
   19a78:	cmp	r0, #58	; 0x3a
   19a7c:	bne	19aa8 <main@@Base+0x3d74>
   19a80:	add	r2, r1, #1
   19a84:	sub	r0, r6, r2
   19a88:	cmp	r0, #2
   19a8c:	blt	19e10 <main@@Base+0x40dc>
   19a90:	ldrb	r0, [r2]
   19a94:	cmp	r0, #32
   19a98:	bls	19dfc <main@@Base+0x40c8>
   19a9c:	ldr	r6, [sp, #36]	; 0x24
   19aa0:	mov	r1, r2
   19aa4:	b	19e24 <main@@Base+0x40f0>
   19aa8:	ldr	r0, [sp, #32]
   19aac:	mov	r2, r6
   19ab0:	mov	r3, #4
   19ab4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   19ab8:	b	19e20 <main@@Base+0x40ec>
   19abc:	ldr	r6, [sp, #36]	; 0x24
   19ac0:	bne	19ad4 <main@@Base+0x3da0>
   19ac4:	mov	r7, r9
   19ac8:	ldrb	r0, [r7, #3]!
   19acc:	cmp	r0, #32
   19ad0:	bhi	19ae4 <main@@Base+0x3db0>
   19ad4:	ldr	r0, [sp, #32]
   19ad8:	mov	r2, r6
   19adc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   19ae0:	mov	r7, r0
   19ae4:	cmp	r7, r6
   19ae8:	beq	19b20 <main@@Base+0x3dec>
   19aec:	ldrb	r0, [r7]
   19af0:	cmp	r0, #58	; 0x3a
   19af4:	bne	19b20 <main@@Base+0x3dec>
   19af8:	add	r1, r7, #1
   19afc:	sub	r0, r6, r1
   19b00:	cmp	r0, #2
   19b04:	blt	19e54 <main@@Base+0x4120>
   19b08:	ldrb	r0, [r1]
   19b0c:	cmp	r0, #32
   19b10:	bls	19e40 <main@@Base+0x410c>
   19b14:	ldr	r6, [sp, #36]	; 0x24
   19b18:	mov	r7, r1
   19b1c:	b	19e64 <main@@Base+0x4130>
   19b20:	ldr	r0, [sp, #32]
   19b24:	mov	r1, r7
   19b28:	mov	r2, r6
   19b2c:	mov	r3, #4
   19b30:	bl	3133c <flatcc_json_parser_set_error@@Base>
   19b34:	b	19e60 <main@@Base+0x412c>
   19b38:	ldr	r6, [sp, #36]	; 0x24
   19b3c:	bne	19b4c <main@@Base+0x3e18>
   19b40:	ldrb	r0, [r7, #2]!
   19b44:	cmp	r0, #32
   19b48:	bhi	19b5c <main@@Base+0x3e28>
   19b4c:	ldr	r0, [sp, #32]
   19b50:	mov	r2, r6
   19b54:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   19b58:	mov	r7, r0
   19b5c:	cmp	r9, r7
   19b60:	beq	19ff0 <main@@Base+0x42bc>
   19b64:	mov	r5, #0
   19b68:	cmp	r7, r6
   19b6c:	str	r5, [fp, #-52]	; 0xffffffcc
   19b70:	str	r5, [fp, #-56]	; 0xffffffc8
   19b74:	strb	r5, [sp, #60]	; 0x3c
   19b78:	str	r5, [sp, #48]	; 0x30
   19b7c:	beq	19bd8 <main@@Base+0x3ea4>
   19b80:	sub	r0, fp, #56	; 0x38
   19b84:	mov	r1, r7
   19b88:	mov	r2, r6
   19b8c:	add	r3, sp, #48	; 0x30
   19b90:	str	r0, [sp]
   19b94:	ldr	r0, [sp, #32]
   19b98:	bl	3314c <flatcc_json_parser_integer@@Base>
   19b9c:	cmp	r0, r7
   19ba0:	beq	19be0 <main@@Base+0x3eac>
   19ba4:	ldr	r3, [sp, #48]	; 0x30
   19ba8:	mov	r1, r0
   19bac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19bb0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19bb4:	cmp	r3, #0
   19bb8:	beq	19be8 <main@@Base+0x3eb4>
   19bbc:	subs	r3, r0, #129	; 0x81
   19bc0:	sbcs	r2, r2, #0
   19bc4:	bcc	19c0c <main@@Base+0x3ed8>
   19bc8:	ldr	r0, [sp, #32]
   19bcc:	mov	r2, r6
   19bd0:	mov	r3, #8
   19bd4:	b	19c00 <main@@Base+0x3ecc>
   19bd8:	mov	r1, r6
   19bdc:	b	19c1c <main@@Base+0x3ee8>
   19be0:	mov	r1, r7
   19be4:	b	19c1c <main@@Base+0x3ee8>
   19be8:	subs	r3, r0, #128	; 0x80
   19bec:	sbcs	r2, r2, #0
   19bf0:	bcc	19c14 <main@@Base+0x3ee0>
   19bf4:	ldr	r0, [sp, #32]
   19bf8:	mov	r2, r6
   19bfc:	mov	r3, #7
   19c00:	bl	3133c <flatcc_json_parser_set_error@@Base>
   19c04:	mov	r1, r0
   19c08:	b	19c1c <main@@Base+0x3ee8>
   19c0c:	rsb	r5, r0, #0
   19c10:	b	19c18 <main@@Base+0x3ee4>
   19c14:	mov	r5, r0
   19c18:	strb	r5, [sp, #60]	; 0x3c
   19c1c:	cmp	r7, r1
   19c20:	bne	19c58 <main@@Base+0x3f24>
   19c24:	add	r0, sp, #60	; 0x3c
   19c28:	movw	r3, #33160	; 0x8188
   19c2c:	mov	r1, r7
   19c30:	mov	r2, r6
   19c34:	str	r0, [sp]
   19c38:	ldr	r0, [sp, #32]
   19c3c:	movt	r3, #5
   19c40:	bl	21004 <main@@Base+0xb2d0>
   19c44:	mov	r1, r0
   19c48:	cmp	r0, r7
   19c4c:	cmpne	r1, r6
   19c50:	beq	1a0d8 <main@@Base+0x43a4>
   19c54:	ldrb	r5, [sp, #60]	; 0x3c
   19c58:	strb	r5, [sl, #24]
   19c5c:	b	1a004 <main@@Base+0x42d0>
   19c60:	ldr	r6, [sp, #36]	; 0x24
   19c64:	bne	19c74 <main@@Base+0x3f40>
   19c68:	ldrb	r0, [r7, #2]!
   19c6c:	cmp	r0, #32
   19c70:	bhi	19c84 <main@@Base+0x3f50>
   19c74:	ldr	r0, [sp, #32]
   19c78:	mov	r2, r6
   19c7c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   19c80:	mov	r7, r0
   19c84:	cmp	r9, r7
   19c88:	beq	19ff0 <main@@Base+0x42bc>
   19c8c:	mov	r0, #0
   19c90:	mov	r1, r7
   19c94:	mov	r2, r6
   19c98:	sub	r3, fp, #56	; 0x38
   19c9c:	str	r0, [fp, #-52]	; 0xffffffcc
   19ca0:	str	r0, [fp, #-56]	; 0xffffffc8
   19ca4:	ldr	r0, [sp, #32]
   19ca8:	bl	326b0 <flatcc_json_parser_double@@Base>
   19cac:	mov	r1, r0
   19cb0:	cmp	r7, r0
   19cb4:	bne	19ce8 <main@@Base+0x3fb4>
   19cb8:	sub	r0, fp, #56	; 0x38
   19cbc:	movw	r3, #33176	; 0x8198
   19cc0:	mov	r1, r7
   19cc4:	mov	r2, r6
   19cc8:	str	r0, [sp]
   19ccc:	ldr	r0, [sp, #32]
   19cd0:	movt	r3, #5
   19cd4:	bl	2395c <main@@Base+0xdc28>
   19cd8:	mov	r1, r0
   19cdc:	cmp	r0, r7
   19ce0:	cmpne	r1, r6
   19ce4:	beq	1a0d8 <main@@Base+0x43a4>
   19ce8:	vldr	d16, [fp, #-56]	; 0xffffffc8
   19cec:	vstr	d16, [sl, #16]
   19cf0:	b	1a004 <main@@Base+0x42d0>
   19cf4:	ldr	r6, [sp, #36]	; 0x24
   19cf8:	bne	19d0c <main@@Base+0x3fd8>
   19cfc:	mov	r7, r9
   19d00:	ldrb	r0, [r7, #3]!
   19d04:	cmp	r0, #32
   19d08:	bhi	19d1c <main@@Base+0x3fe8>
   19d0c:	ldr	r0, [sp, #32]
   19d10:	mov	r2, r6
   19d14:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   19d18:	mov	r7, r0
   19d1c:	cmp	r7, r6
   19d20:	beq	19d5c <main@@Base+0x4028>
   19d24:	ldrb	r0, [r7]
   19d28:	cmp	r0, #58	; 0x3a
   19d2c:	bne	19d5c <main@@Base+0x4028>
   19d30:	ldr	r6, [sp, #36]	; 0x24
   19d34:	add	r1, r7, #1
   19d38:	sub	r0, r6, r1
   19d3c:	cmp	r0, #2
   19d40:	blt	19ee4 <main@@Base+0x41b0>
   19d44:	ldrb	r0, [r1]
   19d48:	cmp	r0, #32
   19d4c:	bls	19ed0 <main@@Base+0x419c>
   19d50:	ldr	r6, [sp, #36]	; 0x24
   19d54:	mov	r7, r1
   19d58:	b	19ef4 <main@@Base+0x41c0>
   19d5c:	ldr	r6, [sp, #36]	; 0x24
   19d60:	ldr	r0, [sp, #32]
   19d64:	mov	r1, r7
   19d68:	mov	r3, #4
   19d6c:	mov	r2, r6
   19d70:	bl	3133c <flatcc_json_parser_set_error@@Base>
   19d74:	b	19ef0 <main@@Base+0x41bc>
   19d78:	ldr	r6, [sp, #36]	; 0x24
   19d7c:	bne	19d90 <main@@Base+0x405c>
   19d80:	mov	r7, r9
   19d84:	ldrb	r0, [r7, #3]!
   19d88:	cmp	r0, #32
   19d8c:	bhi	19da0 <main@@Base+0x406c>
   19d90:	ldr	r0, [sp, #32]
   19d94:	mov	r2, r6
   19d98:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   19d9c:	mov	r7, r0
   19da0:	cmp	r7, r6
   19da4:	beq	19de0 <main@@Base+0x40ac>
   19da8:	ldrb	r0, [r7]
   19dac:	cmp	r0, #58	; 0x3a
   19db0:	bne	19de0 <main@@Base+0x40ac>
   19db4:	ldr	r6, [sp, #36]	; 0x24
   19db8:	add	r1, r7, #1
   19dbc:	sub	r0, r6, r1
   19dc0:	cmp	r0, #2
   19dc4:	blt	19f74 <main@@Base+0x4240>
   19dc8:	ldrb	r0, [r1]
   19dcc:	cmp	r0, #32
   19dd0:	bls	19f60 <main@@Base+0x422c>
   19dd4:	ldr	r6, [sp, #36]	; 0x24
   19dd8:	mov	r7, r1
   19ddc:	b	19f84 <main@@Base+0x4250>
   19de0:	ldr	r6, [sp, #36]	; 0x24
   19de4:	ldr	r0, [sp, #32]
   19de8:	mov	r1, r7
   19dec:	mov	r3, #4
   19df0:	mov	r2, r6
   19df4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   19df8:	b	19f80 <main@@Base+0x424c>
   19dfc:	ldr	r6, [sp, #36]	; 0x24
   19e00:	bne	19e10 <main@@Base+0x40dc>
   19e04:	ldrb	r0, [r1, #2]!
   19e08:	cmp	r0, #32
   19e0c:	bhi	19e24 <main@@Base+0x40f0>
   19e10:	ldr	r0, [sp, #32]
   19e14:	mov	r1, r2
   19e18:	mov	r2, r6
   19e1c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   19e20:	mov	r1, r0
   19e24:	cmp	r9, r1
   19e28:	beq	19ff0 <main@@Base+0x42bc>
   19e2c:	ldr	r0, [sp, #32]
   19e30:	ldr	r3, [sp, #20]
   19e34:	mov	r2, r6
   19e38:	bl	2158c <main@@Base+0xb858>
   19e3c:	b	1a000 <main@@Base+0x42cc>
   19e40:	ldr	r6, [sp, #36]	; 0x24
   19e44:	bne	19e54 <main@@Base+0x4120>
   19e48:	ldrb	r0, [r7, #2]!
   19e4c:	cmp	r0, #32
   19e50:	bhi	19e64 <main@@Base+0x4130>
   19e54:	ldr	r0, [sp, #32]
   19e58:	mov	r2, r6
   19e5c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   19e60:	mov	r7, r0
   19e64:	cmp	r9, r7
   19e68:	beq	19ff0 <main@@Base+0x42bc>
   19e6c:	mov	r0, #0
   19e70:	mov	r1, r7
   19e74:	mov	r2, r6
   19e78:	sub	r3, fp, #56	; 0x38
   19e7c:	str	r0, [fp, #-56]	; 0xffffffc8
   19e80:	ldr	r0, [sp, #32]
   19e84:	bl	33008 <flatcc_json_parser_float@@Base>
   19e88:	mov	r1, r0
   19e8c:	cmp	r7, r0
   19e90:	bne	19ec4 <main@@Base+0x4190>
   19e94:	sub	r0, fp, #56	; 0x38
   19e98:	movw	r3, #33188	; 0x81a4
   19e9c:	mov	r1, r7
   19ea0:	mov	r2, r6
   19ea4:	str	r0, [sp]
   19ea8:	ldr	r0, [sp, #32]
   19eac:	movt	r3, #5
   19eb0:	bl	2309c <main@@Base+0xd368>
   19eb4:	mov	r1, r0
   19eb8:	cmp	r0, r7
   19ebc:	cmpne	r1, r6
   19ec0:	beq	1a0d8 <main@@Base+0x43a4>
   19ec4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19ec8:	str	r0, [sl]
   19ecc:	b	1a004 <main@@Base+0x42d0>
   19ed0:	ldr	r6, [sp, #36]	; 0x24
   19ed4:	bne	19ee4 <main@@Base+0x41b0>
   19ed8:	ldrb	r0, [r7, #2]!
   19edc:	cmp	r0, #32
   19ee0:	bhi	19ef4 <main@@Base+0x41c0>
   19ee4:	ldr	r0, [sp, #32]
   19ee8:	mov	r2, r6
   19eec:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   19ef0:	mov	r7, r0
   19ef4:	cmp	r9, r7
   19ef8:	beq	19ff0 <main@@Base+0x42bc>
   19efc:	mov	r0, #0
   19f00:	mov	r1, r7
   19f04:	mov	r2, r6
   19f08:	sub	r3, fp, #56	; 0x38
   19f0c:	str	r0, [fp, #-56]	; 0xffffffc8
   19f10:	ldr	r0, [sp, #32]
   19f14:	bl	33008 <flatcc_json_parser_float@@Base>
   19f18:	mov	r1, r0
   19f1c:	cmp	r7, r0
   19f20:	bne	19f54 <main@@Base+0x4220>
   19f24:	sub	r0, fp, #56	; 0x38
   19f28:	movw	r3, #33200	; 0x81b0
   19f2c:	mov	r1, r7
   19f30:	mov	r2, r6
   19f34:	str	r0, [sp]
   19f38:	ldr	r0, [sp, #32]
   19f3c:	movt	r3, #5
   19f40:	bl	2309c <main@@Base+0xd368>
   19f44:	mov	r1, r0
   19f48:	cmp	r0, r7
   19f4c:	cmpne	r1, r6
   19f50:	beq	1a0d8 <main@@Base+0x43a4>
   19f54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19f58:	str	r0, [sl, #8]
   19f5c:	b	1a004 <main@@Base+0x42d0>
   19f60:	ldr	r6, [sp, #36]	; 0x24
   19f64:	bne	19f74 <main@@Base+0x4240>
   19f68:	ldrb	r0, [r7, #2]!
   19f6c:	cmp	r0, #32
   19f70:	bhi	19f84 <main@@Base+0x4250>
   19f74:	ldr	r0, [sp, #32]
   19f78:	mov	r2, r6
   19f7c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   19f80:	mov	r7, r0
   19f84:	cmp	r9, r7
   19f88:	beq	19ff0 <main@@Base+0x42bc>
   19f8c:	mov	r0, #0
   19f90:	mov	r1, r7
   19f94:	mov	r2, r6
   19f98:	sub	r3, fp, #56	; 0x38
   19f9c:	str	r0, [fp, #-56]	; 0xffffffc8
   19fa0:	ldr	r0, [sp, #32]
   19fa4:	bl	33008 <flatcc_json_parser_float@@Base>
   19fa8:	mov	r1, r0
   19fac:	cmp	r7, r0
   19fb0:	bne	19fe4 <main@@Base+0x42b0>
   19fb4:	sub	r0, fp, #56	; 0x38
   19fb8:	movw	r3, #33212	; 0x81bc
   19fbc:	mov	r1, r7
   19fc0:	mov	r2, r6
   19fc4:	str	r0, [sp]
   19fc8:	ldr	r0, [sp, #32]
   19fcc:	movt	r3, #5
   19fd0:	bl	2309c <main@@Base+0xd368>
   19fd4:	mov	r1, r0
   19fd8:	cmp	r0, r7
   19fdc:	cmpne	r1, r6
   19fe0:	beq	1a0d8 <main@@Base+0x43a4>
   19fe4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19fe8:	str	r0, [sl, #4]
   19fec:	b	1a004 <main@@Base+0x42d0>
   19ff0:	ldr	r0, [sp, #32]
   19ff4:	mov	r1, r9
   19ff8:	mov	r2, r6
   19ffc:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a000:	mov	r1, r0
   1a004:	sub	r0, r6, r1
   1a008:	cmp	r0, #2
   1a00c:	blt	1a038 <main@@Base+0x4304>
   1a010:	ldrb	r0, [r1]
   1a014:	cmp	r0, #32
   1a018:	bls	1a024 <main@@Base+0x42f0>
   1a01c:	mov	r2, r1
   1a020:	b	1a048 <main@@Base+0x4314>
   1a024:	bne	1a038 <main@@Base+0x4304>
   1a028:	mov	r2, r1
   1a02c:	ldrb	r0, [r2, #1]!
   1a030:	cmp	r0, #32
   1a034:	bhi	1a048 <main@@Base+0x4314>
   1a038:	ldr	r0, [sp, #32]
   1a03c:	mov	r2, r6
   1a040:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a044:	mov	r2, r0
   1a048:	cmp	r2, r6
   1a04c:	beq	1a0f0 <main@@Base+0x43bc>
   1a050:	ldrb	r0, [r2]
   1a054:	cmp	r0, #44	; 0x2c
   1a058:	bne	1a0fc <main@@Base+0x43c8>
   1a05c:	add	r1, r2, #1
   1a060:	sub	r0, r6, r1
   1a064:	cmp	r0, #2
   1a068:	blt	1a090 <main@@Base+0x435c>
   1a06c:	ldrb	r0, [r1]
   1a070:	cmp	r0, #32
   1a074:	bls	1a080 <main@@Base+0x434c>
   1a078:	mov	r2, r1
   1a07c:	b	1a0a0 <main@@Base+0x436c>
   1a080:	bne	1a090 <main@@Base+0x435c>
   1a084:	ldrb	r0, [r2, #2]!
   1a088:	cmp	r0, #32
   1a08c:	bhi	1a0a0 <main@@Base+0x436c>
   1a090:	ldr	r0, [sp, #32]
   1a094:	mov	r2, r6
   1a098:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a09c:	mov	r2, r0
   1a0a0:	cmp	r2, r6
   1a0a4:	beq	1a134 <main@@Base+0x4400>
   1a0a8:	ldrb	r0, [r2]
   1a0ac:	cmp	r0, #125	; 0x7d
   1a0b0:	bne	1965c <main@@Base+0x3928>
   1a0b4:	ldr	sl, [sp, #32]
   1a0b8:	add	r1, r2, #1
   1a0bc:	sub	r0, r6, r1
   1a0c0:	cmp	r0, #2
   1a0c4:	blt	1ce04 <main@@Base+0x70d0>
   1a0c8:	ldrb	r0, [r1]
   1a0cc:	cmp	r0, #32
   1a0d0:	bls	1cdf0 <main@@Base+0x70bc>
   1a0d4:	b	1a12c <main@@Base+0x43f8>
   1a0d8:	ldr	sl, [sp, #32]
   1a0dc:	ldr	r6, [sp, #36]	; 0x24
   1a0e0:	mov	r3, #33	; 0x21
   1a0e4:	mov	r0, sl
   1a0e8:	mov	r2, r6
   1a0ec:	b	195e4 <main@@Base+0x38b0>
   1a0f0:	ldr	sl, [sp, #32]
   1a0f4:	mov	r9, r6
   1a0f8:	b	1e1e4 <main@@Base+0x84b0>
   1a0fc:	ldr	sl, [sp, #32]
   1a100:	cmp	r0, #125	; 0x7d
   1a104:	bne	1ab04 <main@@Base+0x4dd0>
   1a108:	add	r1, r2, #1
   1a10c:	sub	r0, r6, r1
   1a110:	cmp	r0, #2
   1a114:	blt	1ce04 <main@@Base+0x70d0>
   1a118:	ldrb	r0, [r1]
   1a11c:	cmp	r0, #32
   1a120:	bls	1cde8 <main@@Base+0x70b4>
   1a124:	ldr	r6, [sp, #36]	; 0x24
   1a128:	ldr	sl, [sp, #32]
   1a12c:	mov	r9, r1
   1a130:	b	1e1e4 <main@@Base+0x84b0>
   1a134:	ldr	sl, [sp, #32]
   1a138:	mov	r1, r6
   1a13c:	mov	r0, sl
   1a140:	b	1ab0c <main@@Base+0x4dd8>
   1a144:	bne	1a154 <main@@Base+0x4420>
   1a148:	ldrb	r0, [r7, #2]!
   1a14c:	cmp	r0, #32
   1a150:	bhi	1a164 <main@@Base+0x4430>
   1a154:	mov	r0, sl
   1a158:	mov	r2, r6
   1a15c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a160:	mov	r7, r0
   1a164:	cmp	r8, r7
   1a168:	beq	18e70 <main@@Base+0x313c>
   1a16c:	mov	r0, #0
   1a170:	mov	r1, r7
   1a174:	mov	r2, r6
   1a178:	sub	r3, fp, #56	; 0x38
   1a17c:	str	r0, [fp, #-56]	; 0xffffffc8
   1a180:	mov	r0, sl
   1a184:	bl	33008 <flatcc_json_parser_float@@Base>
   1a188:	mov	r9, r0
   1a18c:	cmp	r7, r0
   1a190:	bne	1a1c4 <main@@Base+0x4490>
   1a194:	movw	r3, #32992	; 0x80e0
   1a198:	sub	r0, fp, #56	; 0x38
   1a19c:	mov	r1, r7
   1a1a0:	mov	r2, r6
   1a1a4:	movt	r3, #5
   1a1a8:	str	r0, [sp]
   1a1ac:	mov	r0, sl
   1a1b0:	bl	2309c <main@@Base+0xd368>
   1a1b4:	mov	r9, r0
   1a1b8:	cmp	r0, r7
   1a1bc:	cmpne	r9, r6
   1a1c0:	beq	1f2e4 <main@@Base+0x95b0>
   1a1c4:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1a1c8:	vcmp.f32	s0, s16
   1a1cc:	vmrs	APSR_nzcv, fpscr
   1a1d0:	bne	1a1e0 <main@@Base+0x44ac>
   1a1d4:	ldrb	r0, [sl, #8]
   1a1d8:	tst	r0, #2
   1a1dc:	beq	1e1e4 <main@@Base+0x84b0>
   1a1e0:	ldr	r0, [sl]
   1a1e4:	mov	r1, #26
   1a1e8:	b	17fa0 <main@@Base+0x226c>
   1a1ec:	bne	1a1fc <main@@Base+0x44c8>
   1a1f0:	ldrb	r0, [r8, #19]!
   1a1f4:	cmp	r0, #32
   1a1f8:	bhi	1a20c <main@@Base+0x44d8>
   1a1fc:	mov	r0, sl
   1a200:	mov	r2, r6
   1a204:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a208:	mov	r8, r0
   1a20c:	cmp	r8, r6
   1a210:	beq	1a24c <main@@Base+0x4518>
   1a214:	ldrb	r0, [r8]
   1a218:	cmp	r0, #58	; 0x3a
   1a21c:	bne	1a24c <main@@Base+0x4518>
   1a220:	add	r1, r8, #1
   1a224:	sub	r0, r6, r1
   1a228:	cmp	r0, #2
   1a22c:	blt	1bd9c <main@@Base+0x6068>
   1a230:	ldrb	r0, [r1]
   1a234:	cmp	r0, #32
   1a238:	bls	1bd84 <main@@Base+0x6050>
   1a23c:	ldr	r6, [sp, #36]	; 0x24
   1a240:	ldr	sl, [sp, #32]
   1a244:	mov	r8, r1
   1a248:	b	1bdac <main@@Base+0x6078>
   1a24c:	mov	r0, sl
   1a250:	mov	r1, r8
   1a254:	mov	r2, r6
   1a258:	mov	r3, #4
   1a25c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1a260:	b	1bda8 <main@@Base+0x6074>
   1a264:	ldr	r4, [sp, #36]	; 0x24
   1a268:	bne	1a27c <main@@Base+0x4548>
   1a26c:	mov	r6, r8
   1a270:	ldrb	r0, [r6, #18]!
   1a274:	cmp	r0, #32
   1a278:	bhi	1a28c <main@@Base+0x4558>
   1a27c:	mov	r0, sl
   1a280:	mov	r2, r4
   1a284:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a288:	mov	r6, r0
   1a28c:	cmp	r6, r4
   1a290:	beq	1a2cc <main@@Base+0x4598>
   1a294:	ldrb	r0, [r6]
   1a298:	cmp	r0, #58	; 0x3a
   1a29c:	bne	1a2cc <main@@Base+0x4598>
   1a2a0:	ldr	r0, [sp, #36]	; 0x24
   1a2a4:	add	r1, r6, #1
   1a2a8:	sub	r0, r0, r1
   1a2ac:	cmp	r0, #2
   1a2b0:	blt	1be50 <main@@Base+0x611c>
   1a2b4:	ldrb	r0, [r1]
   1a2b8:	cmp	r0, #32
   1a2bc:	bls	1be3c <main@@Base+0x6108>
   1a2c0:	ldr	sl, [sp, #32]
   1a2c4:	mov	r6, r1
   1a2c8:	b	1be60 <main@@Base+0x612c>
   1a2cc:	ldr	r2, [sp, #36]	; 0x24
   1a2d0:	mov	r0, sl
   1a2d4:	mov	r1, r6
   1a2d8:	mov	r3, #4
   1a2dc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1a2e0:	b	1be5c <main@@Base+0x6128>
   1a2e4:	ldr	r4, [sp, #36]	; 0x24
   1a2e8:	bne	1a2fc <main@@Base+0x45c8>
   1a2ec:	mov	r6, r8
   1a2f0:	ldrb	r0, [r6, #18]!
   1a2f4:	cmp	r0, #32
   1a2f8:	bhi	1a30c <main@@Base+0x45d8>
   1a2fc:	mov	r0, sl
   1a300:	mov	r2, r4
   1a304:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a308:	mov	r6, r0
   1a30c:	cmp	r6, r4
   1a310:	beq	1a34c <main@@Base+0x4618>
   1a314:	ldrb	r0, [r6]
   1a318:	cmp	r0, #58	; 0x3a
   1a31c:	bne	1a34c <main@@Base+0x4618>
   1a320:	ldr	r0, [sp, #36]	; 0x24
   1a324:	add	r1, r6, #1
   1a328:	sub	r0, r0, r1
   1a32c:	cmp	r0, #2
   1a330:	blt	1c000 <main@@Base+0x62cc>
   1a334:	ldrb	r0, [r1]
   1a338:	cmp	r0, #32
   1a33c:	bls	1bfec <main@@Base+0x62b8>
   1a340:	ldr	sl, [sp, #32]
   1a344:	mov	r6, r1
   1a348:	b	1c010 <main@@Base+0x62dc>
   1a34c:	ldr	r2, [sp, #36]	; 0x24
   1a350:	mov	r0, sl
   1a354:	mov	r1, r6
   1a358:	mov	r3, #4
   1a35c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1a360:	b	1c00c <main@@Base+0x62d8>
   1a364:	mov	r0, sl
   1a368:	mov	r1, r8
   1a36c:	mov	r2, r6
   1a370:	mov	r3, #9
   1a374:	b	18e8c <main@@Base+0x3158>
   1a378:	bne	1a388 <main@@Base+0x4654>
   1a37c:	ldrb	r0, [r6, #2]!
   1a380:	cmp	r0, #32
   1a384:	bhi	1a398 <main@@Base+0x4664>
   1a388:	ldr	r2, [sp, #36]	; 0x24
   1a38c:	mov	r0, sl
   1a390:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a394:	mov	r6, r0
   1a398:	cmp	r9, r6
   1a39c:	beq	1a418 <main@@Base+0x46e4>
   1a3a0:	ldr	r2, [sp, #36]	; 0x24
   1a3a4:	mov	r4, #0
   1a3a8:	str	r4, [fp, #-52]	; 0xffffffcc
   1a3ac:	str	r4, [fp, #-56]	; 0xffffffc8
   1a3b0:	str	r4, [sp, #60]	; 0x3c
   1a3b4:	str	r4, [sp, #48]	; 0x30
   1a3b8:	cmp	r6, r2
   1a3bc:	beq	1a480 <main@@Base+0x474c>
   1a3c0:	sub	r0, fp, #56	; 0x38
   1a3c4:	mov	r1, r6
   1a3c8:	add	r3, sp, #48	; 0x30
   1a3cc:	str	r0, [sp]
   1a3d0:	mov	r0, sl
   1a3d4:	bl	3314c <flatcc_json_parser_integer@@Base>
   1a3d8:	cmp	r0, r6
   1a3dc:	beq	1a488 <main@@Base+0x4754>
   1a3e0:	ldr	r2, [sp, #48]	; 0x30
   1a3e4:	mov	r9, r0
   1a3e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a3ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a3f0:	cmp	r2, #0
   1a3f4:	beq	1a490 <main@@Base+0x475c>
   1a3f8:	subs	r2, r0, #-2147483647	; 0x80000001
   1a3fc:	sbcs	r1, r1, #0
   1a400:	bcc	1a4b8 <main@@Base+0x4784>
   1a404:	ldr	r2, [sp, #36]	; 0x24
   1a408:	mov	r0, sl
   1a40c:	mov	r1, r9
   1a410:	mov	r3, #8
   1a414:	b	1a4ac <main@@Base+0x4778>
   1a418:	ldr	r6, [sp, #36]	; 0x24
   1a41c:	add	r7, r8, #16
   1a420:	mov	r1, #8
   1a424:	sub	r0, r6, r7
   1a428:	cmp	r0, #8
   1a42c:	movcc	r1, r0
   1a430:	sub	r1, r1, #1
   1a434:	cmp	r1, #7
   1a438:	bhi	1e1d0 <main@@Base+0x849c>
   1a43c:	ldrb	r1, [r7]
   1a440:	cmp	r1, #97	; 0x61
   1a444:	bne	1e1d0 <main@@Base+0x849c>
   1a448:	cmp	r0, #2
   1a44c:	blt	1e1d0 <main@@Base+0x849c>
   1a450:	ldrb	r0, [r8, #17]
   1a454:	cmp	r0, #34	; 0x22
   1a458:	bne	1e1d0 <main@@Base+0x849c>
   1a45c:	add	r1, r8, #18
   1a460:	sub	r0, r6, r1
   1a464:	cmp	r0, #2
   1a468:	blt	1a9b0 <main@@Base+0x4c7c>
   1a46c:	ldrb	r0, [r1]
   1a470:	cmp	r0, #32
   1a474:	bls	1a9a0 <main@@Base+0x4c6c>
   1a478:	mov	r8, r1
   1a47c:	b	1a9c0 <main@@Base+0x4c8c>
   1a480:	mov	r9, r2
   1a484:	b	1ac7c <main@@Base+0x4f48>
   1a488:	mov	r9, r6
   1a48c:	b	1ac7c <main@@Base+0x4f48>
   1a490:	subs	r2, r0, #-2147483648	; 0x80000000
   1a494:	sbcs	r1, r1, #0
   1a498:	bcc	1ac74 <main@@Base+0x4f40>
   1a49c:	ldr	r2, [sp, #36]	; 0x24
   1a4a0:	mov	r0, sl
   1a4a4:	mov	r1, r9
   1a4a8:	mov	r3, #7
   1a4ac:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1a4b0:	mov	r9, r0
   1a4b4:	b	1ac7c <main@@Base+0x4f48>
   1a4b8:	rsb	r4, r0, #0
   1a4bc:	b	1ac78 <main@@Base+0x4f44>
   1a4c0:	bne	1a4d0 <main@@Base+0x479c>
   1a4c4:	ldrb	r0, [r8, #19]!
   1a4c8:	cmp	r0, #32
   1a4cc:	bhi	1a4e0 <main@@Base+0x47ac>
   1a4d0:	mov	r0, sl
   1a4d4:	mov	r2, r6
   1a4d8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a4dc:	mov	r8, r0
   1a4e0:	cmp	r8, r6
   1a4e4:	beq	1a520 <main@@Base+0x47ec>
   1a4e8:	ldrb	r0, [r8]
   1a4ec:	cmp	r0, #58	; 0x3a
   1a4f0:	bne	1a520 <main@@Base+0x47ec>
   1a4f4:	add	r1, r8, #1
   1a4f8:	sub	r0, r6, r1
   1a4fc:	cmp	r0, #2
   1a500:	blt	1c1c8 <main@@Base+0x6494>
   1a504:	ldrb	r0, [r1]
   1a508:	cmp	r0, #32
   1a50c:	bls	1c1b0 <main@@Base+0x647c>
   1a510:	ldr	r6, [sp, #36]	; 0x24
   1a514:	ldr	sl, [sp, #32]
   1a518:	mov	r8, r1
   1a51c:	b	1c1d8 <main@@Base+0x64a4>
   1a520:	mov	r0, sl
   1a524:	mov	r1, r8
   1a528:	mov	r2, r6
   1a52c:	mov	r3, #4
   1a530:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1a534:	b	1c1d4 <main@@Base+0x64a0>
   1a538:	bne	1a548 <main@@Base+0x4814>
   1a53c:	ldrb	r0, [r8, #11]!
   1a540:	cmp	r0, #32
   1a544:	bhi	1a558 <main@@Base+0x4824>
   1a548:	mov	r0, sl
   1a54c:	mov	r2, r6
   1a550:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a554:	mov	r8, r0
   1a558:	cmp	r8, r6
   1a55c:	beq	1a598 <main@@Base+0x4864>
   1a560:	ldrb	r0, [r8]
   1a564:	cmp	r0, #58	; 0x3a
   1a568:	bne	1a598 <main@@Base+0x4864>
   1a56c:	add	r1, r8, #1
   1a570:	sub	r0, r6, r1
   1a574:	cmp	r0, #2
   1a578:	blt	1c27c <main@@Base+0x6548>
   1a57c:	ldrb	r0, [r1]
   1a580:	cmp	r0, #32
   1a584:	bls	1c264 <main@@Base+0x6530>
   1a588:	ldr	r6, [sp, #36]	; 0x24
   1a58c:	ldr	sl, [sp, #32]
   1a590:	mov	r8, r1
   1a594:	b	1c28c <main@@Base+0x6558>
   1a598:	mov	r0, sl
   1a59c:	mov	r1, r8
   1a5a0:	mov	r2, r6
   1a5a4:	mov	r3, #4
   1a5a8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1a5ac:	b	1c288 <main@@Base+0x6554>
   1a5b0:	bne	1a5c0 <main@@Base+0x488c>
   1a5b4:	ldrb	r0, [r8, #11]!
   1a5b8:	cmp	r0, #32
   1a5bc:	bhi	1a5d0 <main@@Base+0x489c>
   1a5c0:	mov	r0, sl
   1a5c4:	mov	r2, r6
   1a5c8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a5cc:	mov	r8, r0
   1a5d0:	cmp	r8, r6
   1a5d4:	beq	1a610 <main@@Base+0x48dc>
   1a5d8:	ldrb	r0, [r8]
   1a5dc:	cmp	r0, #58	; 0x3a
   1a5e0:	bne	1a610 <main@@Base+0x48dc>
   1a5e4:	add	r1, r8, #1
   1a5e8:	sub	r0, r6, r1
   1a5ec:	cmp	r0, #2
   1a5f0:	blt	1c354 <main@@Base+0x6620>
   1a5f4:	ldrb	r0, [r1]
   1a5f8:	cmp	r0, #32
   1a5fc:	bls	1c33c <main@@Base+0x6608>
   1a600:	ldr	r6, [sp, #36]	; 0x24
   1a604:	ldr	sl, [sp, #32]
   1a608:	mov	r8, r1
   1a60c:	b	1c364 <main@@Base+0x6630>
   1a610:	mov	r0, sl
   1a614:	mov	r1, r8
   1a618:	mov	r2, r6
   1a61c:	mov	r3, #4
   1a620:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1a624:	b	1c360 <main@@Base+0x662c>
   1a628:	bne	1a638 <main@@Base+0x4904>
   1a62c:	ldrb	r0, [r8, #2]!
   1a630:	cmp	r0, #32
   1a634:	bhi	1a648 <main@@Base+0x4914>
   1a638:	mov	r0, sl
   1a63c:	mov	r2, r6
   1a640:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a644:	mov	r8, r0
   1a648:	cmp	r8, r6
   1a64c:	mov	r5, r6
   1a650:	beq	1a664 <main@@Base+0x4930>
   1a654:	ldrb	r0, [r8]
   1a658:	cmp	r0, #93	; 0x5d
   1a65c:	beq	1b230 <main@@Base+0x54fc>
   1a660:	mov	r5, r8
   1a664:	mov	r0, #0
   1a668:	mov	r1, #1
   1a66c:	strb	r0, [sp, #60]	; 0x3c
   1a670:	ldr	r0, [sl]
   1a674:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   1a678:	cmp	r0, #0
   1a67c:	beq	1f28c <main@@Base+0x9558>
   1a680:	mov	r7, r0
   1a684:	mov	r8, r5
   1a688:	sub	r5, r6, r8
   1a68c:	cmp	r5, #4
   1a690:	blt	1a6d4 <main@@Base+0x49a0>
   1a694:	movw	r1, #15172	; 0x3b44
   1a698:	mov	r0, r8
   1a69c:	mov	r2, #4
   1a6a0:	movt	r1, #4
   1a6a4:	bl	14ebc <bcmp@plt>
   1a6a8:	cmp	r0, #0
   1a6ac:	beq	1a738 <main@@Base+0x4a04>
   1a6b0:	cmp	r5, #5
   1a6b4:	blt	1a6d4 <main@@Base+0x49a0>
   1a6b8:	movw	r1, #15177	; 0x3b49
   1a6bc:	mov	r0, r8
   1a6c0:	mov	r2, #5
   1a6c4:	movt	r1, #4
   1a6c8:	bl	14ebc <bcmp@plt>
   1a6cc:	cmp	r0, #0
   1a6d0:	beq	1a898 <main@@Base+0x4b64>
   1a6d4:	mov	r5, #0
   1a6d8:	cmp	r8, r6
   1a6dc:	str	r5, [fp, #-52]	; 0xffffffcc
   1a6e0:	str	r5, [fp, #-56]	; 0xffffffc8
   1a6e4:	str	r5, [sp, #48]	; 0x30
   1a6e8:	beq	1a730 <main@@Base+0x49fc>
   1a6ec:	sub	r0, fp, #56	; 0x38
   1a6f0:	mov	r1, r8
   1a6f4:	mov	r2, r6
   1a6f8:	add	r3, sp, #48	; 0x30
   1a6fc:	str	r0, [sp]
   1a700:	mov	r0, sl
   1a704:	bl	3314c <flatcc_json_parser_integer@@Base>
   1a708:	cmp	r0, r8
   1a70c:	beq	1a744 <main@@Base+0x4a10>
   1a710:	mov	r1, r0
   1a714:	ldr	r0, [sp, #48]	; 0x30
   1a718:	cmp	r0, #0
   1a71c:	beq	1a74c <main@@Base+0x4a18>
   1a720:	mov	r0, sl
   1a724:	mov	r2, r6
   1a728:	mov	r3, #8
   1a72c:	b	1a76c <main@@Base+0x4a38>
   1a730:	mov	r1, r6
   1a734:	b	1a774 <main@@Base+0x4a40>
   1a738:	mov	r0, #1
   1a73c:	add	r1, r8, #4
   1a740:	b	1a780 <main@@Base+0x4a4c>
   1a744:	mov	r1, r8
   1a748:	b	1a774 <main@@Base+0x4a40>
   1a74c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a750:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a754:	subs	r3, r0, #256	; 0x100
   1a758:	sbcs	r2, r2, #0
   1a75c:	bcc	1a8a4 <main@@Base+0x4b70>
   1a760:	mov	r0, sl
   1a764:	mov	r2, r6
   1a768:	mov	r3, #7
   1a76c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1a770:	mov	r1, r0
   1a774:	uxtb	r0, r5
   1a778:	cmp	r0, #0
   1a77c:	movwne	r0, #1
   1a780:	strb	r0, [sp, #60]	; 0x3c
   1a784:	cmp	r8, r1
   1a788:	bne	1a7c0 <main@@Base+0x4a8c>
   1a78c:	movw	r3, #32968	; 0x80c8
   1a790:	add	r0, sp, #60	; 0x3c
   1a794:	mov	r1, r8
   1a798:	mov	r2, r6
   1a79c:	movt	r3, #5
   1a7a0:	str	r0, [sp]
   1a7a4:	mov	r0, sl
   1a7a8:	bl	22ef0 <main@@Base+0xd1bc>
   1a7ac:	mov	r1, r0
   1a7b0:	cmp	r0, r8
   1a7b4:	cmpne	r1, r6
   1a7b8:	beq	1f2a4 <main@@Base+0x9570>
   1a7bc:	ldrb	r0, [sp, #60]	; 0x3c
   1a7c0:	strb	r0, [r7]
   1a7c4:	sub	r0, r6, r1
   1a7c8:	cmp	r0, #2
   1a7cc:	blt	1a7f8 <main@@Base+0x4ac4>
   1a7d0:	ldrb	r0, [r1]
   1a7d4:	cmp	r0, #32
   1a7d8:	bls	1a7e4 <main@@Base+0x4ab0>
   1a7dc:	mov	r8, r1
   1a7e0:	b	1a808 <main@@Base+0x4ad4>
   1a7e4:	bne	1a7f8 <main@@Base+0x4ac4>
   1a7e8:	mov	r8, r1
   1a7ec:	ldrb	r0, [r8, #1]!
   1a7f0:	cmp	r0, #32
   1a7f4:	bhi	1a808 <main@@Base+0x4ad4>
   1a7f8:	mov	r0, sl
   1a7fc:	mov	r2, r6
   1a800:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a804:	mov	r8, r0
   1a808:	cmp	r8, r6
   1a80c:	beq	1b218 <main@@Base+0x54e4>
   1a810:	ldrb	r0, [r8]
   1a814:	cmp	r0, #44	; 0x2c
   1a818:	bne	1b220 <main@@Base+0x54ec>
   1a81c:	add	r1, r8, #1
   1a820:	sub	r0, r6, r1
   1a824:	cmp	r0, #2
   1a828:	blt	1a850 <main@@Base+0x4b1c>
   1a82c:	ldrb	r0, [r1]
   1a830:	cmp	r0, #32
   1a834:	bls	1a840 <main@@Base+0x4b0c>
   1a838:	mov	r8, r1
   1a83c:	b	1a860 <main@@Base+0x4b2c>
   1a840:	bne	1a850 <main@@Base+0x4b1c>
   1a844:	ldrb	r0, [r8, #2]!
   1a848:	cmp	r0, #32
   1a84c:	bhi	1a860 <main@@Base+0x4b2c>
   1a850:	mov	r0, sl
   1a854:	mov	r2, r6
   1a858:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a85c:	mov	r8, r0
   1a860:	cmp	r8, r6
   1a864:	beq	1b300 <main@@Base+0x55cc>
   1a868:	ldrb	r0, [r8]
   1a86c:	cmp	r0, #93	; 0x5d
   1a870:	beq	1b230 <main@@Base+0x54fc>
   1a874:	mov	r0, #0
   1a878:	mov	r1, #1
   1a87c:	strb	r0, [sp, #60]	; 0x3c
   1a880:	ldr	r0, [sl]
   1a884:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   1a888:	mov	r7, r0
   1a88c:	cmp	r0, #0
   1a890:	bne	1a688 <main@@Base+0x4954>
   1a894:	b	16624 <main@@Base+0x8f0>
   1a898:	mov	r0, #0
   1a89c:	add	r1, r8, #5
   1a8a0:	b	1a780 <main@@Base+0x4a4c>
   1a8a4:	mov	r5, r0
   1a8a8:	b	1a774 <main@@Base+0x4a40>
   1a8ac:	bne	1a8c0 <main@@Base+0x4b8c>
   1a8b0:	mov	r9, r8
   1a8b4:	ldrb	r0, [r9, #17]!
   1a8b8:	cmp	r0, #32
   1a8bc:	bhi	1a8d0 <main@@Base+0x4b9c>
   1a8c0:	ldr	r0, [sp, #32]
   1a8c4:	mov	r2, r6
   1a8c8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a8cc:	mov	r9, r0
   1a8d0:	cmp	r9, r6
   1a8d4:	beq	1a90c <main@@Base+0x4bd8>
   1a8d8:	ldrb	r0, [r9]
   1a8dc:	cmp	r0, #58	; 0x3a
   1a8e0:	bne	1a90c <main@@Base+0x4bd8>
   1a8e4:	add	r1, r9, #1
   1a8e8:	sub	r0, r6, r1
   1a8ec:	cmp	r0, #2
   1a8f0:	blt	1c43c <main@@Base+0x6708>
   1a8f4:	ldrb	r0, [r1]
   1a8f8:	cmp	r0, #32
   1a8fc:	bls	1c428 <main@@Base+0x66f4>
   1a900:	ldr	r6, [sp, #36]	; 0x24
   1a904:	mov	r9, r1
   1a908:	b	1c44c <main@@Base+0x6718>
   1a90c:	ldr	r0, [sp, #32]
   1a910:	mov	r1, r9
   1a914:	mov	r2, r6
   1a918:	mov	r3, #4
   1a91c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1a920:	b	1c448 <main@@Base+0x6714>
   1a924:	bne	1a938 <main@@Base+0x4c04>
   1a928:	mov	r9, r8
   1a92c:	ldrb	r0, [r9, #22]!
   1a930:	cmp	r0, #32
   1a934:	bhi	1a948 <main@@Base+0x4c14>
   1a938:	mov	r0, sl
   1a93c:	mov	r2, r6
   1a940:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a944:	mov	r9, r0
   1a948:	cmp	r9, r6
   1a94c:	beq	1a988 <main@@Base+0x4c54>
   1a950:	ldrb	r0, [r9]
   1a954:	cmp	r0, #58	; 0x3a
   1a958:	bne	1a988 <main@@Base+0x4c54>
   1a95c:	add	r1, r9, #1
   1a960:	sub	r0, r6, r1
   1a964:	cmp	r0, #2
   1a968:	blt	1c610 <main@@Base+0x68dc>
   1a96c:	ldrb	r0, [r1]
   1a970:	cmp	r0, #32
   1a974:	bls	1c5f8 <main@@Base+0x68c4>
   1a978:	ldr	r6, [sp, #36]	; 0x24
   1a97c:	ldr	sl, [sp, #32]
   1a980:	mov	r9, r1
   1a984:	b	1c620 <main@@Base+0x68ec>
   1a988:	mov	r0, sl
   1a98c:	mov	r1, r9
   1a990:	mov	r2, r6
   1a994:	mov	r3, #4
   1a998:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1a99c:	b	1c61c <main@@Base+0x68e8>
   1a9a0:	bne	1a9b0 <main@@Base+0x4c7c>
   1a9a4:	ldrb	r0, [r8, #19]!
   1a9a8:	cmp	r0, #32
   1a9ac:	bhi	1a9c0 <main@@Base+0x4c8c>
   1a9b0:	mov	r0, sl
   1a9b4:	mov	r2, r6
   1a9b8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1a9bc:	mov	r8, r0
   1a9c0:	cmp	r8, r6
   1a9c4:	beq	1aa00 <main@@Base+0x4ccc>
   1a9c8:	ldrb	r0, [r8]
   1a9cc:	cmp	r0, #58	; 0x3a
   1a9d0:	bne	1aa00 <main@@Base+0x4ccc>
   1a9d4:	add	r1, r8, #1
   1a9d8:	sub	r0, r6, r1
   1a9dc:	cmp	r0, #2
   1a9e0:	blt	1c708 <main@@Base+0x69d4>
   1a9e4:	ldrb	r0, [r1]
   1a9e8:	cmp	r0, #32
   1a9ec:	bls	1c6f0 <main@@Base+0x69bc>
   1a9f0:	ldr	r6, [sp, #36]	; 0x24
   1a9f4:	ldr	sl, [sp, #32]
   1a9f8:	mov	r8, r1
   1a9fc:	b	1c718 <main@@Base+0x69e4>
   1aa00:	mov	r0, sl
   1aa04:	mov	r1, r8
   1aa08:	mov	r2, r6
   1aa0c:	mov	r3, #4
   1aa10:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1aa14:	b	1c714 <main@@Base+0x69e0>
   1aa18:	bne	1aa28 <main@@Base+0x4cf4>
   1aa1c:	ldrb	r0, [r8, #2]!
   1aa20:	cmp	r0, #32
   1aa24:	bhi	1aa38 <main@@Base+0x4d04>
   1aa28:	mov	r0, sl
   1aa2c:	mov	r2, r6
   1aa30:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1aa34:	mov	r8, r0
   1aa38:	cmp	r7, r8
   1aa3c:	beq	1e1d0 <main@@Base+0x849c>
   1aa40:	mov	r0, #0
   1aa44:	mov	r1, #3
   1aa48:	str	r0, [sp, #44]	; 0x2c
   1aa4c:	ldr	r0, [sl]
   1aa50:	bl	2d514 <flatcc_builder_start_table@@Base>
   1aa54:	cmp	r0, #0
   1aa58:	bne	1aabc <main@@Base+0x4d88>
   1aa5c:	cmp	r8, r6
   1aa60:	beq	1aa98 <main@@Base+0x4d64>
   1aa64:	ldrb	r0, [r8]
   1aa68:	cmp	r0, #123	; 0x7b
   1aa6c:	bne	1aa98 <main@@Base+0x4d64>
   1aa70:	add	r1, r8, #1
   1aa74:	sub	r0, r6, r1
   1aa78:	cmp	r0, #2
   1aa7c:	blt	1ce74 <main@@Base+0x7140>
   1aa80:	ldrb	r0, [r1]
   1aa84:	cmp	r0, #32
   1aa88:	bls	1ce5c <main@@Base+0x7128>
   1aa8c:	ldr	r6, [sp, #36]	; 0x24
   1aa90:	mov	r8, r1
   1aa94:	b	1ce84 <main@@Base+0x7150>
   1aa98:	mov	r0, sl
   1aa9c:	mov	r1, r8
   1aaa0:	mov	r2, r6
   1aaa4:	mov	r3, #21
   1aaa8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1aaac:	mov	r8, r0
   1aab0:	ldr	r0, [sl, #20]
   1aab4:	cmp	r0, #0
   1aab8:	beq	1aaec <main@@Base+0x4db8>
   1aabc:	mov	r0, sl
   1aac0:	mov	r1, r8
   1aac4:	mov	r2, r6
   1aac8:	mov	r3, #33	; 0x21
   1aacc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1aad0:	mov	r8, r0
   1aad4:	ldr	r0, [sp, #44]	; 0x2c
   1aad8:	cmp	r0, #0
   1aadc:	beq	16624 <main@@Base+0x8f0>
   1aae0:	ldr	r0, [sl]
   1aae4:	mov	r1, #35	; 0x23
   1aae8:	b	1ee28 <main@@Base+0x90f4>
   1aaec:	ldr	r0, [sl]
   1aaf0:	bl	2de74 <flatcc_builder_end_table@@Base>
   1aaf4:	cmp	r0, #0
   1aaf8:	str	r0, [sp, #44]	; 0x2c
   1aafc:	bne	1aae0 <main@@Base+0x4dac>
   1ab00:	b	1aabc <main@@Base+0x4d88>
   1ab04:	mov	r0, sl
   1ab08:	mov	r1, r2
   1ab0c:	mov	r2, r6
   1ab10:	mov	r3, #10
   1ab14:	b	195e4 <main@@Base+0x38b0>
   1ab18:	bne	1ab28 <main@@Base+0x4df4>
   1ab1c:	ldrb	r0, [r8, #2]!
   1ab20:	cmp	r0, #32
   1ab24:	bhi	1ab38 <main@@Base+0x4e04>
   1ab28:	mov	r0, sl
   1ab2c:	mov	r2, r6
   1ab30:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1ab34:	mov	r8, r0
   1ab38:	cmp	r7, r8
   1ab3c:	beq	1e1d0 <main@@Base+0x849c>
   1ab40:	ldr	r0, [sl]
   1ab44:	bl	2d1d4 <flatcc_builder_start_offset_vector@@Base>
   1ab48:	cmp	r0, #0
   1ab4c:	bne	16624 <main@@Base+0x8f0>
   1ab50:	cmp	r8, r6
   1ab54:	beq	1ab88 <main@@Base+0x4e54>
   1ab58:	ldrb	r0, [r8]
   1ab5c:	cmp	r0, #91	; 0x5b
   1ab60:	bne	1ab88 <main@@Base+0x4e54>
   1ab64:	add	r1, r8, #1
   1ab68:	sub	r0, r6, r1
   1ab6c:	cmp	r0, #2
   1ab70:	blt	1b31c <main@@Base+0x55e8>
   1ab74:	ldrb	r0, [r1]
   1ab78:	cmp	r0, #32
   1ab7c:	bls	1b30c <main@@Base+0x55d8>
   1ab80:	mov	r8, r1
   1ab84:	b	1b32c <main@@Base+0x55f8>
   1ab88:	mov	r0, sl
   1ab8c:	mov	r1, r8
   1ab90:	mov	r2, r6
   1ab94:	mov	r3, #22
   1ab98:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1ab9c:	mov	r8, r0
   1aba0:	ldr	r0, [sl]
   1aba4:	bl	2d2a0 <flatcc_builder_end_offset_vector@@Base>
   1aba8:	cmp	r0, #0
   1abac:	str	r0, [sp, #44]	; 0x2c
   1abb0:	beq	16624 <main@@Base+0x8f0>
   1abb4:	ldr	r0, [sl]
   1abb8:	mov	r1, #28
   1abbc:	b	1ee28 <main@@Base+0x90f4>
   1abc0:	bne	1abd0 <main@@Base+0x4e9c>
   1abc4:	ldrb	r0, [r8, #2]!
   1abc8:	cmp	r0, #32
   1abcc:	bhi	1abe0 <main@@Base+0x4eac>
   1abd0:	mov	r0, sl
   1abd4:	mov	r2, r6
   1abd8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1abdc:	mov	r8, r0
   1abe0:	cmp	r9, r8
   1abe4:	beq	1b1a0 <main@@Base+0x546c>
   1abe8:	ldr	r0, [sl]
   1abec:	mov	r1, #8
   1abf0:	mov	r2, #4
   1abf4:	mvn	r3, #-536870912	; 0xe0000000
   1abf8:	bl	2d148 <flatcc_builder_start_vector@@Base>
   1abfc:	cmp	r0, #0
   1ac00:	bne	16624 <main@@Base+0x8f0>
   1ac04:	cmp	r8, r6
   1ac08:	beq	1ac3c <main@@Base+0x4f08>
   1ac0c:	ldrb	r0, [r8]
   1ac10:	cmp	r0, #91	; 0x5b
   1ac14:	bne	1ac3c <main@@Base+0x4f08>
   1ac18:	add	r1, r8, #1
   1ac1c:	sub	r0, r6, r1
   1ac20:	cmp	r0, #2
   1ac24:	blt	1b484 <main@@Base+0x5750>
   1ac28:	ldrb	r0, [r1]
   1ac2c:	cmp	r0, #32
   1ac30:	bls	1b470 <main@@Base+0x573c>
   1ac34:	mov	r9, r1
   1ac38:	b	1b494 <main@@Base+0x5760>
   1ac3c:	mov	r0, sl
   1ac40:	mov	r1, r8
   1ac44:	mov	r2, r6
   1ac48:	mov	r3, #22
   1ac4c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1ac50:	mov	r9, r0
   1ac54:	ldr	r0, [sl]
   1ac58:	bl	2e174 <flatcc_builder_end_vector@@Base>
   1ac5c:	cmp	r0, #0
   1ac60:	str	r0, [sp, #44]	; 0x2c
   1ac64:	beq	1f2e4 <main@@Base+0x95b0>
   1ac68:	ldr	r0, [sl]
   1ac6c:	mov	r1, #29
   1ac70:	b	18eb0 <main@@Base+0x317c>
   1ac74:	mov	r4, r0
   1ac78:	str	r4, [sp, #60]	; 0x3c
   1ac7c:	cmp	r6, r9
   1ac80:	bne	1acbc <main@@Base+0x4f88>
   1ac84:	ldr	r4, [sp, #36]	; 0x24
   1ac88:	movw	r3, #33028	; 0x8104
   1ac8c:	add	r0, sp, #60	; 0x3c
   1ac90:	mov	r1, r6
   1ac94:	movt	r3, #5
   1ac98:	str	r0, [sp]
   1ac9c:	mov	r0, sl
   1aca0:	mov	r2, r4
   1aca4:	bl	23214 <main@@Base+0xd4e0>
   1aca8:	mov	r9, r0
   1acac:	cmp	r0, r6
   1acb0:	cmpne	r9, r4
   1acb4:	beq	1f2f0 <main@@Base+0x95bc>
   1acb8:	ldr	r4, [sp, #60]	; 0x3c
   1acbc:	ldr	r6, [sp, #36]	; 0x24
   1acc0:	cmp	r4, #0
   1acc4:	bne	1acd4 <main@@Base+0x4fa0>
   1acc8:	ldrb	r0, [sl, #8]
   1accc:	tst	r0, #2
   1acd0:	beq	1e1e4 <main@@Base+0x84b0>
   1acd4:	ldr	r0, [sl]
   1acd8:	mov	r1, #16
   1acdc:	b	1bfd0 <main@@Base+0x629c>
   1ace0:	bne	1acf0 <main@@Base+0x4fbc>
   1ace4:	ldrb	r0, [r7, #2]!
   1ace8:	cmp	r0, #32
   1acec:	bhi	1ad00 <main@@Base+0x4fcc>
   1acf0:	mov	r0, sl
   1acf4:	mov	r2, r6
   1acf8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1acfc:	mov	r7, r0
   1ad00:	cmp	r8, r7
   1ad04:	beq	18e70 <main@@Base+0x313c>
   1ad08:	mov	r4, #0
   1ad0c:	cmp	r7, r6
   1ad10:	str	r4, [fp, #-52]	; 0xffffffcc
   1ad14:	str	r4, [fp, #-56]	; 0xffffffc8
   1ad18:	strh	r4, [sp, #60]	; 0x3c
   1ad1c:	str	r4, [sp, #48]	; 0x30
   1ad20:	beq	1ad84 <main@@Base+0x5050>
   1ad24:	sub	r0, fp, #56	; 0x38
   1ad28:	mov	r1, r7
   1ad2c:	mov	r2, r6
   1ad30:	add	r3, sp, #48	; 0x30
   1ad34:	str	r0, [sp]
   1ad38:	mov	r0, sl
   1ad3c:	bl	3314c <flatcc_json_parser_integer@@Base>
   1ad40:	cmp	r0, r7
   1ad44:	beq	1ad8c <main@@Base+0x5058>
   1ad48:	ldr	r2, [sp, #48]	; 0x30
   1ad4c:	mov	r9, r0
   1ad50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ad54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ad58:	cmp	r2, #0
   1ad5c:	beq	1ad94 <main@@Base+0x5060>
   1ad60:	movw	r2, #32769	; 0x8001
   1ad64:	subs	r2, r0, r2
   1ad68:	sbcs	r1, r1, #0
   1ad6c:	bcc	1adbc <main@@Base+0x5088>
   1ad70:	mov	r0, sl
   1ad74:	mov	r1, r9
   1ad78:	mov	r2, r6
   1ad7c:	mov	r3, #8
   1ad80:	b	1adb0 <main@@Base+0x507c>
   1ad84:	mov	r9, r6
   1ad88:	b	1adcc <main@@Base+0x5098>
   1ad8c:	mov	r9, r7
   1ad90:	b	1adcc <main@@Base+0x5098>
   1ad94:	subs	r2, r0, #32768	; 0x8000
   1ad98:	sbcs	r1, r1, #0
   1ad9c:	bcc	1adc4 <main@@Base+0x5090>
   1ada0:	mov	r0, sl
   1ada4:	mov	r1, r9
   1ada8:	mov	r2, r6
   1adac:	mov	r3, #7
   1adb0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1adb4:	mov	r9, r0
   1adb8:	b	1adcc <main@@Base+0x5098>
   1adbc:	rsb	r4, r0, #0
   1adc0:	b	1adc8 <main@@Base+0x5094>
   1adc4:	mov	r4, r0
   1adc8:	strh	r4, [sp, #60]	; 0x3c
   1adcc:	cmp	r7, r9
   1add0:	bne	1ae08 <main@@Base+0x50d4>
   1add4:	movw	r3, #32940	; 0x80ac
   1add8:	add	r0, sp, #60	; 0x3c
   1addc:	mov	r1, r7
   1ade0:	mov	r2, r6
   1ade4:	movt	r3, #5
   1ade8:	str	r0, [sp]
   1adec:	mov	r0, sl
   1adf0:	bl	213ac <main@@Base+0xb678>
   1adf4:	mov	r9, r0
   1adf8:	cmp	r0, r7
   1adfc:	cmpne	r9, r6
   1ae00:	beq	1f2f0 <main@@Base+0x95bc>
   1ae04:	ldrh	r4, [sp, #60]	; 0x3c
   1ae08:	uxth	r0, r4
   1ae0c:	cmp	r0, #150	; 0x96
   1ae10:	bne	1ae20 <main@@Base+0x50ec>
   1ae14:	ldrb	r0, [sl, #8]
   1ae18:	tst	r0, #2
   1ae1c:	beq	1e1e4 <main@@Base+0x84b0>
   1ae20:	ldr	r0, [sl]
   1ae24:	mov	r1, #1
   1ae28:	mov	r2, #2
   1ae2c:	mov	r3, #2
   1ae30:	bl	2e760 <flatcc_builder_table_add@@Base>
   1ae34:	cmp	r0, #0
   1ae38:	beq	1f2f0 <main@@Base+0x95bc>
   1ae3c:	strh	r4, [r0]
   1ae40:	b	1e1e4 <main@@Base+0x84b0>
   1ae44:	bne	1ae54 <main@@Base+0x5120>
   1ae48:	ldrb	r0, [r7, #2]!
   1ae4c:	cmp	r0, #32
   1ae50:	bhi	1ae64 <main@@Base+0x5130>
   1ae54:	mov	r0, sl
   1ae58:	mov	r2, r6
   1ae5c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1ae60:	mov	r7, r0
   1ae64:	cmp	r8, r7
   1ae68:	beq	18e70 <main@@Base+0x313c>
   1ae6c:	mov	r0, #0
   1ae70:	mov	r1, r7
   1ae74:	mov	r2, r6
   1ae78:	sub	r3, fp, #56	; 0x38
   1ae7c:	str	r0, [fp, #-56]	; 0xffffffc8
   1ae80:	mov	r0, sl
   1ae84:	bl	33008 <flatcc_json_parser_float@@Base>
   1ae88:	mov	r9, r0
   1ae8c:	cmp	r7, r0
   1ae90:	bne	1aec4 <main@@Base+0x5190>
   1ae94:	movw	r3, #33004	; 0x80ec
   1ae98:	sub	r0, fp, #56	; 0x38
   1ae9c:	mov	r1, r7
   1aea0:	mov	r2, r6
   1aea4:	movt	r3, #5
   1aea8:	str	r0, [sp]
   1aeac:	mov	r0, sl
   1aeb0:	bl	2309c <main@@Base+0xd368>
   1aeb4:	mov	r9, r0
   1aeb8:	cmp	r0, r7
   1aebc:	cmpne	r9, r6
   1aec0:	beq	1f2e4 <main@@Base+0x95b0>
   1aec4:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1aec8:	vcmp.f32	s0, s18
   1aecc:	vmrs	APSR_nzcv, fpscr
   1aed0:	bne	1aee0 <main@@Base+0x51ac>
   1aed4:	ldrb	r0, [sl, #8]
   1aed8:	tst	r0, #2
   1aedc:	beq	1e1e4 <main@@Base+0x84b0>
   1aee0:	ldr	r0, [sl]
   1aee4:	mov	r1, #25
   1aee8:	b	17fa0 <main@@Base+0x226c>
   1aeec:	bne	1aefc <main@@Base+0x51c8>
   1aef0:	ldrb	r0, [r6, #2]!
   1aef4:	cmp	r0, #32
   1aef8:	bhi	1af0c <main@@Base+0x51d8>
   1aefc:	ldr	r2, [sp, #36]	; 0x24
   1af00:	mov	r0, sl
   1af04:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1af08:	mov	r6, r0
   1af0c:	cmp	r9, r6
   1af10:	beq	1af90 <main@@Base+0x525c>
   1af14:	ldr	r2, [sp, #36]	; 0x24
   1af18:	mov	r4, #0
   1af1c:	str	r4, [fp, #-52]	; 0xffffffcc
   1af20:	str	r4, [fp, #-56]	; 0xffffffc8
   1af24:	str	r4, [sp, #52]	; 0x34
   1af28:	str	r4, [sp, #48]	; 0x30
   1af2c:	str	r4, [sp, #60]	; 0x3c
   1af30:	cmp	r6, r2
   1af34:	beq	1aff8 <main@@Base+0x52c4>
   1af38:	sub	r0, fp, #56	; 0x38
   1af3c:	mov	r1, r6
   1af40:	add	r3, sp, #60	; 0x3c
   1af44:	str	r0, [sp]
   1af48:	mov	r0, sl
   1af4c:	bl	3314c <flatcc_json_parser_integer@@Base>
   1af50:	cmp	r0, r6
   1af54:	beq	1b004 <main@@Base+0x52d0>
   1af58:	mov	r9, r0
   1af5c:	ldr	r0, [sp, #60]	; 0x3c
   1af60:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1af64:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1af68:	cmp	r0, #0
   1af6c:	beq	1b014 <main@@Base+0x52e0>
   1af70:	subs	r0, r4, #1
   1af74:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1af78:	bcc	1b040 <main@@Base+0x530c>
   1af7c:	ldr	r2, [sp, #36]	; 0x24
   1af80:	mov	r0, sl
   1af84:	mov	r1, r9
   1af88:	mov	r3, #8
   1af8c:	b	1b02c <main@@Base+0x52f8>
   1af90:	ldr	r6, [sp, #36]	; 0x24
   1af94:	add	r7, r8, #16
   1af98:	mov	r1, #8
   1af9c:	sub	r0, r6, r7
   1afa0:	cmp	r0, #8
   1afa4:	movcc	r1, r0
   1afa8:	sub	r1, r1, #1
   1afac:	cmp	r1, #7
   1afb0:	bhi	1e1d0 <main@@Base+0x849c>
   1afb4:	ldrb	r1, [r7]
   1afb8:	cmp	r1, #97	; 0x61
   1afbc:	bne	1e1d0 <main@@Base+0x849c>
   1afc0:	cmp	r0, #2
   1afc4:	blt	1e1d0 <main@@Base+0x849c>
   1afc8:	ldrb	r0, [r8, #17]
   1afcc:	cmp	r0, #34	; 0x22
   1afd0:	bne	1e1d0 <main@@Base+0x849c>
   1afd4:	add	r1, r8, #18
   1afd8:	sub	r0, r6, r1
   1afdc:	cmp	r0, #2
   1afe0:	blt	1bd1c <main@@Base+0x5fe8>
   1afe4:	ldrb	r0, [r1]
   1afe8:	cmp	r0, #32
   1afec:	bls	1bd0c <main@@Base+0x5fd8>
   1aff0:	mov	r8, r1
   1aff4:	b	1bd2c <main@@Base+0x5ff8>
   1aff8:	mov	r5, #0
   1affc:	mov	r9, r2
   1b000:	b	1b050 <main@@Base+0x531c>
   1b004:	mov	r4, #0
   1b008:	mov	r5, #0
   1b00c:	mov	r9, r6
   1b010:	b	1b050 <main@@Base+0x531c>
   1b014:	cmn	r5, #1
   1b018:	bgt	1b048 <main@@Base+0x5314>
   1b01c:	ldr	r2, [sp, #36]	; 0x24
   1b020:	mov	r0, sl
   1b024:	mov	r1, r9
   1b028:	mov	r3, #7
   1b02c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1b030:	mov	r9, r0
   1b034:	mov	r4, #0
   1b038:	mov	r5, #0
   1b03c:	b	1b050 <main@@Base+0x531c>
   1b040:	rsbs	r4, r4, #0
   1b044:	rsc	r5, r5, #0
   1b048:	str	r4, [sp, #48]	; 0x30
   1b04c:	str	r5, [sp, #52]	; 0x34
   1b050:	cmp	r6, r9
   1b054:	bne	1b094 <main@@Base+0x5360>
   1b058:	ldr	r4, [sp, #36]	; 0x24
   1b05c:	movw	r3, #33052	; 0x811c
   1b060:	add	r0, sp, #48	; 0x30
   1b064:	mov	r1, r6
   1b068:	movt	r3, #5
   1b06c:	str	r0, [sp]
   1b070:	mov	r0, sl
   1b074:	mov	r2, r4
   1b078:	bl	233f0 <main@@Base+0xd6bc>
   1b07c:	mov	r9, r0
   1b080:	cmp	r0, r6
   1b084:	cmpne	r9, r4
   1b088:	beq	1f2f0 <main@@Base+0x95bc>
   1b08c:	ldr	r4, [sp, #48]	; 0x30
   1b090:	ldr	r5, [sp, #52]	; 0x34
   1b094:	ldr	r6, [sp, #36]	; 0x24
   1b098:	orrs	r0, r4, r5
   1b09c:	bne	1b0ac <main@@Base+0x5378>
   1b0a0:	ldrb	r0, [sl, #8]
   1b0a4:	tst	r0, #2
   1b0a8:	beq	1e1e4 <main@@Base+0x84b0>
   1b0ac:	ldr	r0, [sl]
   1b0b0:	mov	r1, #18
   1b0b4:	b	1c194 <main@@Base+0x6460>
   1b0b8:	bne	1b0c8 <main@@Base+0x5394>
   1b0bc:	ldrb	r0, [r8, #2]!
   1b0c0:	cmp	r0, #32
   1b0c4:	bhi	1b0d8 <main@@Base+0x53a4>
   1b0c8:	mov	r0, sl
   1b0cc:	mov	r2, r6
   1b0d0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b0d4:	mov	r8, r0
   1b0d8:	cmp	r7, r8
   1b0dc:	beq	1e1d0 <main@@Base+0x849c>
   1b0e0:	ldr	r0, [sp, #40]	; 0x28
   1b0e4:	mov	r1, #8
   1b0e8:	mov	r2, r6
   1b0ec:	mov	r3, #0
   1b0f0:	str	r1, [sp]
   1b0f4:	mov	r1, r8
   1b0f8:	str	r0, [sp, #4]
   1b0fc:	movw	r0, #32952	; 0x80b8
   1b100:	movt	r0, #5
   1b104:	str	r0, [sp, #8]
   1b108:	movw	r0, #7176	; 0x1c08
   1b10c:	movt	r0, #2
   1b110:	str	r0, [sp, #12]
   1b114:	mov	r0, sl
   1b118:	bl	33a84 <flatcc_json_parser_union_type@@Base>
   1b11c:	b	1e1e0 <main@@Base+0x84ac>
   1b120:	bne	1b130 <main@@Base+0x53fc>
   1b124:	ldrb	r0, [r8, #2]!
   1b128:	cmp	r0, #32
   1b12c:	bhi	1b140 <main@@Base+0x540c>
   1b130:	mov	r0, sl
   1b134:	mov	r2, r6
   1b138:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b13c:	mov	r8, r0
   1b140:	cmp	r9, r8
   1b144:	beq	1b1a0 <main@@Base+0x546c>
   1b148:	mov	r0, #0
   1b14c:	mov	r1, #0
   1b150:	str	r0, [sp, #44]	; 0x2c
   1b154:	ldr	r0, [sl]
   1b158:	bl	2d514 <flatcc_builder_start_table@@Base>
   1b15c:	cmp	r0, #0
   1b160:	bne	1b1d0 <main@@Base+0x549c>
   1b164:	cmp	r8, r6
   1b168:	beq	1b1ac <main@@Base+0x5478>
   1b16c:	ldrb	r0, [r8]
   1b170:	cmp	r0, #123	; 0x7b
   1b174:	bne	1b1ac <main@@Base+0x5478>
   1b178:	add	r1, r8, #1
   1b17c:	sub	r0, r6, r1
   1b180:	cmp	r0, #2
   1b184:	blt	1d9c8 <main@@Base+0x7c94>
   1b188:	ldrb	r0, [r1]
   1b18c:	cmp	r0, #32
   1b190:	bls	1d9b4 <main@@Base+0x7c80>
   1b194:	ldr	r6, [sp, #36]	; 0x24
   1b198:	mov	r8, r1
   1b19c:	b	1d9d8 <main@@Base+0x7ca4>
   1b1a0:	mov	r0, sl
   1b1a4:	mov	r1, r9
   1b1a8:	b	1e1d8 <main@@Base+0x84a4>
   1b1ac:	mov	r0, sl
   1b1b0:	mov	r1, r8
   1b1b4:	mov	r2, r6
   1b1b8:	mov	r3, #21
   1b1bc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1b1c0:	mov	r8, r0
   1b1c4:	ldr	r0, [sl, #20]
   1b1c8:	cmp	r0, #0
   1b1cc:	beq	1b200 <main@@Base+0x54cc>
   1b1d0:	mov	r0, sl
   1b1d4:	mov	r1, r8
   1b1d8:	mov	r2, r6
   1b1dc:	mov	r3, #33	; 0x21
   1b1e0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1b1e4:	mov	r8, r0
   1b1e8:	ldr	r0, [sp, #44]	; 0x2c
   1b1ec:	cmp	r0, #0
   1b1f0:	beq	16624 <main@@Base+0x8f0>
   1b1f4:	ldr	r0, [sl]
   1b1f8:	mov	r1, #34	; 0x22
   1b1fc:	b	1ee28 <main@@Base+0x90f4>
   1b200:	ldr	r0, [sl]
   1b204:	bl	2de74 <flatcc_builder_end_table@@Base>
   1b208:	cmp	r0, #0
   1b20c:	str	r0, [sp, #44]	; 0x2c
   1b210:	bne	1b1f4 <main@@Base+0x54c0>
   1b214:	b	1b1d0 <main@@Base+0x549c>
   1b218:	mov	r8, r6
   1b21c:	b	193d0 <main@@Base+0x369c>
   1b220:	cmp	r0, #93	; 0x5d
   1b224:	bne	1c7dc <main@@Base+0x6aa8>
   1b228:	ldr	r6, [sp, #36]	; 0x24
   1b22c:	ldr	sl, [sp, #32]
   1b230:	add	r1, r8, #1
   1b234:	sub	r0, r6, r1
   1b238:	cmp	r0, #2
   1b23c:	blt	1b2f0 <main@@Base+0x55bc>
   1b240:	ldrb	r0, [r1]
   1b244:	cmp	r0, #32
   1b248:	bls	1b2d8 <main@@Base+0x55a4>
   1b24c:	ldr	r6, [sp, #36]	; 0x24
   1b250:	ldr	sl, [sp, #32]
   1b254:	mov	r8, r1
   1b258:	b	193d0 <main@@Base+0x369c>
   1b25c:	bne	1b270 <main@@Base+0x553c>
   1b260:	mov	r9, r8
   1b264:	ldrb	r0, [r9, #19]!
   1b268:	cmp	r0, #32
   1b26c:	bhi	1b280 <main@@Base+0x554c>
   1b270:	mov	r0, sl
   1b274:	mov	r2, r6
   1b278:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b27c:	mov	r9, r0
   1b280:	cmp	r9, r6
   1b284:	beq	1b2c0 <main@@Base+0x558c>
   1b288:	ldrb	r0, [r9]
   1b28c:	cmp	r0, #58	; 0x3a
   1b290:	bne	1b2c0 <main@@Base+0x558c>
   1b294:	add	r1, r9, #1
   1b298:	sub	r0, r6, r1
   1b29c:	cmp	r0, #2
   1b2a0:	blt	1d77c <main@@Base+0x7a48>
   1b2a4:	ldrb	r0, [r1]
   1b2a8:	cmp	r0, #32
   1b2ac:	bls	1d764 <main@@Base+0x7a30>
   1b2b0:	ldr	r6, [sp, #36]	; 0x24
   1b2b4:	ldr	sl, [sp, #32]
   1b2b8:	mov	r9, r1
   1b2bc:	b	1d78c <main@@Base+0x7a58>
   1b2c0:	mov	r0, sl
   1b2c4:	mov	r1, r9
   1b2c8:	mov	r2, r6
   1b2cc:	mov	r3, #4
   1b2d0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1b2d4:	b	1d788 <main@@Base+0x7a54>
   1b2d8:	ldr	r6, [sp, #36]	; 0x24
   1b2dc:	ldr	sl, [sp, #32]
   1b2e0:	bne	1b2f0 <main@@Base+0x55bc>
   1b2e4:	ldrb	r0, [r8, #2]!
   1b2e8:	cmp	r0, #32
   1b2ec:	bhi	193d0 <main@@Base+0x369c>
   1b2f0:	mov	r0, sl
   1b2f4:	mov	r2, r6
   1b2f8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b2fc:	b	193cc <main@@Base+0x3698>
   1b300:	mov	r0, sl
   1b304:	mov	r1, r6
   1b308:	b	1c7ec <main@@Base+0x6ab8>
   1b30c:	bne	1b31c <main@@Base+0x55e8>
   1b310:	ldrb	r0, [r8, #2]!
   1b314:	cmp	r0, #32
   1b318:	bhi	1b32c <main@@Base+0x55f8>
   1b31c:	mov	r0, sl
   1b320:	mov	r2, r6
   1b324:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b328:	mov	r8, r0
   1b32c:	cmp	r8, r6
   1b330:	mov	r2, r6
   1b334:	beq	1b378 <main@@Base+0x5644>
   1b338:	ldrb	r0, [r8]
   1b33c:	cmp	r0, #93	; 0x5d
   1b340:	bne	1b374 <main@@Base+0x5640>
   1b344:	add	r1, r8, #1
   1b348:	sub	r0, r6, r1
   1b34c:	cmp	r0, #2
   1b350:	blt	1ee5c <main@@Base+0x9128>
   1b354:	ldrb	r0, [r1]
   1b358:	cmp	r0, #32
   1b35c:	bhi	1ce40 <main@@Base+0x710c>
   1b360:	ldr	r6, [sp, #36]	; 0x24
   1b364:	ldr	sl, [sp, #32]
   1b368:	bne	1ee5c <main@@Base+0x9128>
   1b36c:	ldrb	r0, [r8, #2]!
   1b370:	b	1ee54 <main@@Base+0x9120>
   1b374:	mov	r2, r8
   1b378:	mov	r1, r2
   1b37c:	mov	r0, sl
   1b380:	mov	r2, r6
   1b384:	add	r3, sp, #44	; 0x2c
   1b388:	bl	33678 <flatcc_json_parser_build_string@@Base>
   1b38c:	mov	r8, r0
   1b390:	ldr	r0, [sp, #44]	; 0x2c
   1b394:	cmp	r0, #0
   1b398:	beq	16624 <main@@Base+0x8f0>
   1b39c:	ldr	r0, [sl]
   1b3a0:	mov	r1, #1
   1b3a4:	bl	2cba8 <flatcc_builder_extend_offset_vector@@Base>
   1b3a8:	cmp	r0, #0
   1b3ac:	beq	16624 <main@@Base+0x8f0>
   1b3b0:	ldr	r1, [sp, #44]	; 0x2c
   1b3b4:	str	r1, [r0]
   1b3b8:	sub	r0, r6, r8
   1b3bc:	cmp	r0, #2
   1b3c0:	blt	1b3ec <main@@Base+0x56b8>
   1b3c4:	ldrb	r0, [r8]
   1b3c8:	cmp	r0, #32
   1b3cc:	bls	1b3d8 <main@@Base+0x56a4>
   1b3d0:	mov	r2, r8
   1b3d4:	b	1b400 <main@@Base+0x56cc>
   1b3d8:	bne	1b3ec <main@@Base+0x56b8>
   1b3dc:	mov	r2, r8
   1b3e0:	ldrb	r0, [r2, #1]!
   1b3e4:	cmp	r0, #32
   1b3e8:	bhi	1b400 <main@@Base+0x56cc>
   1b3ec:	mov	r0, sl
   1b3f0:	mov	r1, r8
   1b3f4:	mov	r2, r6
   1b3f8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b3fc:	mov	r2, r0
   1b400:	cmp	r2, r6
   1b404:	beq	1cde0 <main@@Base+0x70ac>
   1b408:	ldrb	r0, [r2]
   1b40c:	cmp	r0, #44	; 0x2c
   1b410:	bne	1ce14 <main@@Base+0x70e0>
   1b414:	add	r1, r2, #1
   1b418:	sub	r0, r6, r1
   1b41c:	cmp	r0, #2
   1b420:	blt	1b448 <main@@Base+0x5714>
   1b424:	ldrb	r0, [r1]
   1b428:	cmp	r0, #32
   1b42c:	bls	1b438 <main@@Base+0x5704>
   1b430:	mov	r2, r1
   1b434:	b	1b458 <main@@Base+0x5724>
   1b438:	bne	1b448 <main@@Base+0x5714>
   1b43c:	ldrb	r0, [r2, #2]!
   1b440:	cmp	r0, #32
   1b444:	bhi	1b458 <main@@Base+0x5724>
   1b448:	mov	r0, sl
   1b44c:	mov	r2, r6
   1b450:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b454:	mov	r2, r0
   1b458:	cmp	r2, r6
   1b45c:	beq	1ce50 <main@@Base+0x711c>
   1b460:	ldrb	r0, [r2]
   1b464:	cmp	r0, #93	; 0x5d
   1b468:	bne	1b378 <main@@Base+0x5644>
   1b46c:	b	1ce24 <main@@Base+0x70f0>
   1b470:	bne	1b484 <main@@Base+0x5750>
   1b474:	ldrb	r0, [r8, #2]!
   1b478:	mov	r9, r8
   1b47c:	cmp	r0, #32
   1b480:	bhi	1b494 <main@@Base+0x5760>
   1b484:	mov	r0, sl
   1b488:	mov	r2, r6
   1b48c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b490:	mov	r9, r0
   1b494:	cmp	r9, r6
   1b498:	mov	r8, r6
   1b49c:	beq	1b4e0 <main@@Base+0x57ac>
   1b4a0:	ldrb	r0, [r9]
   1b4a4:	cmp	r0, #93	; 0x5d
   1b4a8:	bne	1b4dc <main@@Base+0x57a8>
   1b4ac:	add	r1, r9, #1
   1b4b0:	sub	r0, r6, r1
   1b4b4:	cmp	r0, #2
   1b4b8:	blt	1ee88 <main@@Base+0x9154>
   1b4bc:	ldrb	r0, [r1]
   1b4c0:	cmp	r0, #32
   1b4c4:	bhi	1c9cc <main@@Base+0x6c98>
   1b4c8:	ldr	r6, [sp, #36]	; 0x24
   1b4cc:	ldr	sl, [sp, #32]
   1b4d0:	bne	1ee88 <main@@Base+0x9154>
   1b4d4:	ldrb	r0, [r9, #2]!
   1b4d8:	b	1ee80 <main@@Base+0x914c>
   1b4dc:	mov	r8, r9
   1b4e0:	ldr	r0, [sl]
   1b4e4:	mov	r1, #1
   1b4e8:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   1b4ec:	mov	r9, r0
   1b4f0:	cmp	r0, #0
   1b4f4:	beq	16624 <main@@Base+0x8f0>
   1b4f8:	cmp	r8, r6
   1b4fc:	beq	1b530 <main@@Base+0x57fc>
   1b500:	ldrb	r0, [r8]
   1b504:	cmp	r0, #123	; 0x7b
   1b508:	bne	1b530 <main@@Base+0x57fc>
   1b50c:	add	r1, r8, #1
   1b510:	sub	r0, r6, r1
   1b514:	cmp	r0, #2
   1b518:	blt	1b614 <main@@Base+0x58e0>
   1b51c:	ldrb	r0, [r1]
   1b520:	cmp	r0, #32
   1b524:	bls	1b604 <main@@Base+0x58d0>
   1b528:	mov	r8, r1
   1b52c:	b	1b624 <main@@Base+0x58f0>
   1b530:	mov	r0, sl
   1b534:	mov	r1, r8
   1b538:	mov	r2, r6
   1b53c:	mov	r3, #21
   1b540:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1b544:	mov	r8, r0
   1b548:	sub	r0, r6, r8
   1b54c:	cmp	r0, #2
   1b550:	blt	1b57c <main@@Base+0x5848>
   1b554:	ldrb	r0, [r8]
   1b558:	cmp	r0, #32
   1b55c:	bls	1b568 <main@@Base+0x5834>
   1b560:	mov	r9, r8
   1b564:	b	1b590 <main@@Base+0x585c>
   1b568:	bne	1b57c <main@@Base+0x5848>
   1b56c:	mov	r9, r8
   1b570:	ldrb	r0, [r9, #1]!
   1b574:	cmp	r0, #32
   1b578:	bhi	1b590 <main@@Base+0x585c>
   1b57c:	mov	r0, sl
   1b580:	mov	r1, r8
   1b584:	mov	r2, r6
   1b588:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b58c:	mov	r9, r0
   1b590:	cmp	r9, r6
   1b594:	beq	1c7f8 <main@@Base+0x6ac4>
   1b598:	ldrb	r0, [r9]
   1b59c:	cmp	r0, #44	; 0x2c
   1b5a0:	bne	1c97c <main@@Base+0x6c48>
   1b5a4:	add	r1, r9, #1
   1b5a8:	sub	r0, r6, r1
   1b5ac:	cmp	r0, #2
   1b5b0:	blt	1b5dc <main@@Base+0x58a8>
   1b5b4:	ldrb	r0, [r1]
   1b5b8:	cmp	r0, #32
   1b5bc:	bls	1b5c8 <main@@Base+0x5894>
   1b5c0:	mov	r8, r1
   1b5c4:	b	1b5ec <main@@Base+0x58b8>
   1b5c8:	bne	1b5dc <main@@Base+0x58a8>
   1b5cc:	ldrb	r0, [r9, #2]!
   1b5d0:	mov	r8, r9
   1b5d4:	cmp	r0, #32
   1b5d8:	bhi	1b5ec <main@@Base+0x58b8>
   1b5dc:	mov	r0, sl
   1b5e0:	mov	r2, r6
   1b5e4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b5e8:	mov	r8, r0
   1b5ec:	cmp	r8, r6
   1b5f0:	beq	1c9a4 <main@@Base+0x6c70>
   1b5f4:	ldrb	r0, [r8]
   1b5f8:	cmp	r0, #93	; 0x5d
   1b5fc:	bne	1b4e0 <main@@Base+0x57ac>
   1b600:	b	1c9b0 <main@@Base+0x6c7c>
   1b604:	bne	1b614 <main@@Base+0x58e0>
   1b608:	ldrb	r0, [r8, #2]!
   1b60c:	cmp	r0, #32
   1b610:	bhi	1b624 <main@@Base+0x58f0>
   1b614:	mov	r0, sl
   1b618:	mov	r2, r6
   1b61c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b620:	mov	r8, r0
   1b624:	cmp	r8, r6
   1b628:	mov	r2, r6
   1b62c:	beq	1b670 <main@@Base+0x593c>
   1b630:	ldrb	r0, [r8]
   1b634:	cmp	r0, #125	; 0x7d
   1b638:	bne	1b66c <main@@Base+0x5938>
   1b63c:	add	r1, r8, #1
   1b640:	sub	r0, r6, r1
   1b644:	cmp	r0, #2
   1b648:	blt	1bcfc <main@@Base+0x5fc8>
   1b64c:	ldrb	r0, [r1]
   1b650:	cmp	r0, #32
   1b654:	bhi	1bca8 <main@@Base+0x5f74>
   1b658:	ldr	r6, [sp, #36]	; 0x24
   1b65c:	ldr	sl, [sp, #32]
   1b660:	bne	1bcfc <main@@Base+0x5fc8>
   1b664:	ldrb	r0, [r8, #2]!
   1b668:	b	1bcf4 <main@@Base+0x5fc0>
   1b66c:	mov	r2, r8
   1b670:	cmp	r2, r6
   1b674:	mov	r8, r6
   1b678:	beq	1b6a8 <main@@Base+0x5974>
   1b67c:	ldrb	r0, [r2]
   1b680:	cmp	r0, #34	; 0x22
   1b684:	bne	1b690 <main@@Base+0x595c>
   1b688:	add	r8, r2, #1
   1b68c:	b	1b6a8 <main@@Base+0x5974>
   1b690:	mov	r1, r2
   1b694:	mov	r0, sl
   1b698:	mov	r2, r6
   1b69c:	mov	r3, #5
   1b6a0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1b6a4:	mov	r8, r0
   1b6a8:	sub	lr, r6, r8
   1b6ac:	mov	r0, #8
   1b6b0:	cmp	lr, #8
   1b6b4:	movcc	r0, lr
   1b6b8:	sub	r7, r0, #1
   1b6bc:	cmp	r7, #7
   1b6c0:	bhi	1baf8 <main@@Base+0x5dc4>
   1b6c4:	add	r2, pc, #32
   1b6c8:	mov	r1, #0
   1b6cc:	mov	ip, #0
   1b6d0:	mov	sl, #0
   1b6d4:	mov	r6, #0
   1b6d8:	mov	r3, #0
   1b6dc:	mov	r5, #0
   1b6e0:	mov	r4, #0
   1b6e4:	mov	r0, #0
   1b6e8:	ldr	pc, [r2, r7, lsl #2]
   1b6ec:	andeq	fp, r1, r0, asr r7
   1b6f0:	andeq	fp, r1, r8, asr #14
   1b6f4:	andeq	fp, r1, r0, asr #14
   1b6f8:	andeq	fp, r1, r8, lsr r7
   1b6fc:	andeq	fp, r1, ip, lsr #14
   1b700:	andeq	fp, r1, r0, lsr #14
   1b704:	andeq	fp, r1, r0, lsl r7
   1b708:	andeq	fp, r1, ip, lsl #14
   1b70c:	ldrb	ip, [r8, #7]
   1b710:	ldrb	r0, [r8, #6]
   1b714:	mov	sl, r1
   1b718:	orr	r0, ip, r0, lsl #8
   1b71c:	mov	r1, r0
   1b720:	ldrb	r0, [r8, #5]
   1b724:	mov	r6, sl
   1b728:	orr	r1, r1, r0, lsl #16
   1b72c:	ldrb	r0, [r8, #4]
   1b730:	mov	r3, r6
   1b734:	orr	r1, r1, r0, lsl #24
   1b738:	ldrb	r0, [r8, #3]
   1b73c:	orr	r5, r0, r3
   1b740:	ldrb	r0, [r8, #2]
   1b744:	orr	r4, r5, r0, lsl #8
   1b748:	ldrb	r0, [r8, #1]
   1b74c:	orr	r0, r4, r0, lsl #16
   1b750:	ldrb	r2, [r8]
   1b754:	movw	r3, #0
   1b758:	movt	r3, #26980	; 0x6964
   1b75c:	orr	r0, r0, r2, lsl #24
   1b760:	mov	r2, r0
   1b764:	bfc	r2, #0, #16
   1b768:	teq	r2, r3
   1b76c:	bne	1b7c0 <main@@Base+0x5a8c>
   1b770:	ldr	r6, [sp, #36]	; 0x24
   1b774:	ldr	sl, [sp, #32]
   1b778:	cmp	lr, #3
   1b77c:	mov	r7, r8
   1b780:	blt	1b96c <main@@Base+0x5c38>
   1b784:	ldrb	r0, [r8, #2]
   1b788:	mov	r7, r8
   1b78c:	cmp	r0, #34	; 0x22
   1b790:	bne	1b96c <main@@Base+0x5c38>
   1b794:	add	r1, r8, #3
   1b798:	sub	r0, r6, r1
   1b79c:	cmp	r0, #2
   1b7a0:	blt	1b848 <main@@Base+0x5b14>
   1b7a4:	ldrb	r0, [r1]
   1b7a8:	cmp	r0, #32
   1b7ac:	bls	1b82c <main@@Base+0x5af8>
   1b7b0:	ldr	r6, [sp, #36]	; 0x24
   1b7b4:	ldr	sl, [sp, #32]
   1b7b8:	mov	r7, r1
   1b7bc:	b	1b858 <main@@Base+0x5b24>
   1b7c0:	movw	r2, #25445	; 0x6365
   1b7c4:	ldr	r6, [sp, #36]	; 0x24
   1b7c8:	ldr	sl, [sp, #32]
   1b7cc:	movt	r2, #24942	; 0x616e
   1b7d0:	eor	r1, r1, r2
   1b7d4:	movw	r2, #29556	; 0x7374
   1b7d8:	movt	r2, #25705	; 0x6469
   1b7dc:	eor	r0, r0, r2
   1b7e0:	orrs	r0, r1, r0
   1b7e4:	bne	1baf8 <main@@Base+0x5dc4>
   1b7e8:	cmp	lr, #9
   1b7ec:	mov	r7, r8
   1b7f0:	blt	1ba90 <main@@Base+0x5d5c>
   1b7f4:	ldrb	r0, [r8, #8]
   1b7f8:	mov	r7, r8
   1b7fc:	cmp	r0, #34	; 0x22
   1b800:	bne	1ba90 <main@@Base+0x5d5c>
   1b804:	add	r1, r8, #9
   1b808:	sub	r0, r6, r1
   1b80c:	cmp	r0, #2
   1b810:	blt	1b8cc <main@@Base+0x5b98>
   1b814:	ldrb	r0, [r1]
   1b818:	cmp	r0, #32
   1b81c:	bls	1b8b0 <main@@Base+0x5b7c>
   1b820:	ldr	r6, [sp, #36]	; 0x24
   1b824:	mov	r7, r1
   1b828:	b	1b8dc <main@@Base+0x5ba8>
   1b82c:	ldr	r6, [sp, #36]	; 0x24
   1b830:	ldr	sl, [sp, #32]
   1b834:	bne	1b848 <main@@Base+0x5b14>
   1b838:	mov	r7, r8
   1b83c:	ldrb	r0, [r7, #4]!
   1b840:	cmp	r0, #32
   1b844:	bhi	1b858 <main@@Base+0x5b24>
   1b848:	mov	r0, sl
   1b84c:	mov	r2, r6
   1b850:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b854:	mov	r7, r0
   1b858:	cmp	r7, r6
   1b85c:	beq	1b898 <main@@Base+0x5b64>
   1b860:	ldrb	r0, [r7]
   1b864:	cmp	r0, #58	; 0x3a
   1b868:	bne	1b898 <main@@Base+0x5b64>
   1b86c:	add	r1, r7, #1
   1b870:	sub	r0, r6, r1
   1b874:	cmp	r0, #2
   1b878:	blt	1b95c <main@@Base+0x5c28>
   1b87c:	ldrb	r0, [r1]
   1b880:	cmp	r0, #32
   1b884:	bls	1b944 <main@@Base+0x5c10>
   1b888:	ldr	r6, [sp, #36]	; 0x24
   1b88c:	ldr	sl, [sp, #32]
   1b890:	mov	r7, r1
   1b894:	b	1b96c <main@@Base+0x5c38>
   1b898:	mov	r0, sl
   1b89c:	mov	r1, r7
   1b8a0:	mov	r2, r6
   1b8a4:	mov	r3, #4
   1b8a8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1b8ac:	b	1b968 <main@@Base+0x5c34>
   1b8b0:	ldr	r6, [sp, #36]	; 0x24
   1b8b4:	ldr	sl, [sp, #32]
   1b8b8:	bne	1b8cc <main@@Base+0x5b98>
   1b8bc:	mov	r7, r8
   1b8c0:	ldrb	r0, [r7, #10]!
   1b8c4:	cmp	r0, #32
   1b8c8:	bhi	1b8dc <main@@Base+0x5ba8>
   1b8cc:	mov	r0, sl
   1b8d0:	mov	r2, r6
   1b8d4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b8d8:	mov	r7, r0
   1b8dc:	cmp	r7, r6
   1b8e0:	beq	1b924 <main@@Base+0x5bf0>
   1b8e4:	ldrb	r0, [r7]
   1b8e8:	cmp	r0, #58	; 0x3a
   1b8ec:	bne	1b924 <main@@Base+0x5bf0>
   1b8f0:	ldr	r6, [sp, #36]	; 0x24
   1b8f4:	ldr	sl, [sp, #32]
   1b8f8:	add	r1, r7, #1
   1b8fc:	sub	r0, r6, r1
   1b900:	cmp	r0, #2
   1b904:	blt	1ba80 <main@@Base+0x5d4c>
   1b908:	ldrb	r0, [r1]
   1b90c:	cmp	r0, #32
   1b910:	bls	1ba68 <main@@Base+0x5d34>
   1b914:	ldr	r6, [sp, #36]	; 0x24
   1b918:	ldr	sl, [sp, #32]
   1b91c:	mov	r7, r1
   1b920:	b	1ba90 <main@@Base+0x5d5c>
   1b924:	ldr	sl, [sp, #32]
   1b928:	ldr	r6, [sp, #36]	; 0x24
   1b92c:	mov	r1, r7
   1b930:	mov	r3, #4
   1b934:	mov	r0, sl
   1b938:	mov	r2, r6
   1b93c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1b940:	b	1ba8c <main@@Base+0x5d58>
   1b944:	ldr	r6, [sp, #36]	; 0x24
   1b948:	ldr	sl, [sp, #32]
   1b94c:	bne	1b95c <main@@Base+0x5c28>
   1b950:	ldrb	r0, [r7, #2]!
   1b954:	cmp	r0, #32
   1b958:	bhi	1b96c <main@@Base+0x5c38>
   1b95c:	mov	r0, sl
   1b960:	mov	r2, r6
   1b964:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1b968:	mov	r7, r0
   1b96c:	cmp	r8, r7
   1b970:	beq	1baf8 <main@@Base+0x5dc4>
   1b974:	mov	r4, #0
   1b978:	cmp	r7, r6
   1b97c:	str	r4, [fp, #-52]	; 0xffffffcc
   1b980:	str	r4, [fp, #-56]	; 0xffffffc8
   1b984:	str	r4, [sp, #60]	; 0x3c
   1b988:	str	r4, [sp, #48]	; 0x30
   1b98c:	beq	1b9d4 <main@@Base+0x5ca0>
   1b990:	sub	r0, fp, #56	; 0x38
   1b994:	mov	r1, r7
   1b998:	mov	r2, r6
   1b99c:	add	r3, sp, #48	; 0x30
   1b9a0:	str	r0, [sp]
   1b9a4:	mov	r0, sl
   1b9a8:	bl	3314c <flatcc_json_parser_integer@@Base>
   1b9ac:	cmp	r0, r7
   1b9b0:	beq	1b9dc <main@@Base+0x5ca8>
   1b9b4:	mov	r1, r0
   1b9b8:	ldr	r0, [sp, #48]	; 0x30
   1b9bc:	cmp	r0, #0
   1b9c0:	beq	1b9e4 <main@@Base+0x5cb0>
   1b9c4:	mov	r0, sl
   1b9c8:	mov	r2, r6
   1b9cc:	mov	r3, #8
   1b9d0:	b	1ba04 <main@@Base+0x5cd0>
   1b9d4:	mov	r1, r6
   1b9d8:	b	1ba0c <main@@Base+0x5cd8>
   1b9dc:	mov	r1, r7
   1b9e0:	b	1ba0c <main@@Base+0x5cd8>
   1b9e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b9e8:	cmp	r0, #0
   1b9ec:	beq	1ba54 <main@@Base+0x5d20>
   1b9f0:	ldr	sl, [sp, #32]
   1b9f4:	ldr	r6, [sp, #36]	; 0x24
   1b9f8:	mov	r3, #7
   1b9fc:	mov	r0, sl
   1ba00:	mov	r2, r6
   1ba04:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1ba08:	mov	r1, r0
   1ba0c:	cmp	r7, r1
   1ba10:	bne	1ba4c <main@@Base+0x5d18>
   1ba14:	movw	r3, #33556	; 0x8314
   1ba18:	add	r0, sp, #60	; 0x3c
   1ba1c:	mov	r1, r7
   1ba20:	mov	r2, r6
   1ba24:	movt	r3, #5
   1ba28:	str	r0, [sp]
   1ba2c:	mov	r0, sl
   1ba30:	bl	235d8 <main@@Base+0xd8a4>
   1ba34:	mov	r1, r0
   1ba38:	cmp	r0, r7
   1ba3c:	cmpne	r1, r6
   1ba40:	beq	1bc5c <main@@Base+0x5f28>
   1ba44:	ldr	r4, [sp, #60]	; 0x3c
   1ba48:	ldr	sl, [sp, #32]
   1ba4c:	str	r4, [r9]
   1ba50:	b	1bb0c <main@@Base+0x5dd8>
   1ba54:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1ba58:	ldr	r6, [sp, #36]	; 0x24
   1ba5c:	ldr	sl, [sp, #32]
   1ba60:	str	r4, [sp, #60]	; 0x3c
   1ba64:	b	1ba0c <main@@Base+0x5cd8>
   1ba68:	ldr	r6, [sp, #36]	; 0x24
   1ba6c:	ldr	sl, [sp, #32]
   1ba70:	bne	1ba80 <main@@Base+0x5d4c>
   1ba74:	ldrb	r0, [r7, #2]!
   1ba78:	cmp	r0, #32
   1ba7c:	bhi	1ba90 <main@@Base+0x5d5c>
   1ba80:	mov	r0, sl
   1ba84:	mov	r2, r6
   1ba88:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1ba8c:	mov	r7, r0
   1ba90:	cmp	r8, r7
   1ba94:	beq	1baf8 <main@@Base+0x5dc4>
   1ba98:	mov	r4, #0
   1ba9c:	cmp	r7, r6
   1baa0:	str	r4, [fp, #-52]	; 0xffffffcc
   1baa4:	str	r4, [fp, #-56]	; 0xffffffc8
   1baa8:	str	r4, [sp, #60]	; 0x3c
   1baac:	str	r4, [sp, #48]	; 0x30
   1bab0:	beq	1bbc0 <main@@Base+0x5e8c>
   1bab4:	sub	r0, fp, #56	; 0x38
   1bab8:	mov	r1, r7
   1babc:	mov	r2, r6
   1bac0:	add	r3, sp, #48	; 0x30
   1bac4:	str	r0, [sp]
   1bac8:	mov	r0, sl
   1bacc:	bl	3314c <flatcc_json_parser_integer@@Base>
   1bad0:	cmp	r0, r7
   1bad4:	beq	1bbc8 <main@@Base+0x5e94>
   1bad8:	mov	r1, r0
   1badc:	ldr	r0, [sp, #48]	; 0x30
   1bae0:	cmp	r0, #0
   1bae4:	beq	1bbd0 <main@@Base+0x5e9c>
   1bae8:	ldr	sl, [sp, #32]
   1baec:	ldr	r6, [sp, #36]	; 0x24
   1baf0:	mov	r3, #8
   1baf4:	b	1bbe8 <main@@Base+0x5eb4>
   1baf8:	mov	r0, sl
   1bafc:	mov	r1, r8
   1bb00:	mov	r2, r6
   1bb04:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   1bb08:	mov	r1, r0
   1bb0c:	sub	r0, r6, r1
   1bb10:	cmp	r0, #2
   1bb14:	blt	1bb40 <main@@Base+0x5e0c>
   1bb18:	ldrb	r0, [r1]
   1bb1c:	cmp	r0, #32
   1bb20:	bls	1bb2c <main@@Base+0x5df8>
   1bb24:	mov	r2, r1
   1bb28:	b	1bb50 <main@@Base+0x5e1c>
   1bb2c:	bne	1bb40 <main@@Base+0x5e0c>
   1bb30:	mov	r2, r1
   1bb34:	ldrb	r0, [r2, #1]!
   1bb38:	cmp	r0, #32
   1bb3c:	bhi	1bb50 <main@@Base+0x5e1c>
   1bb40:	mov	r0, sl
   1bb44:	mov	r2, r6
   1bb48:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1bb4c:	mov	r2, r0
   1bb50:	cmp	r2, r6
   1bb54:	beq	1bc74 <main@@Base+0x5f40>
   1bb58:	ldrb	r0, [r2]
   1bb5c:	cmp	r0, #44	; 0x2c
   1bb60:	bne	1bc7c <main@@Base+0x5f48>
   1bb64:	add	r1, r2, #1
   1bb68:	sub	r0, r6, r1
   1bb6c:	cmp	r0, #2
   1bb70:	blt	1bb98 <main@@Base+0x5e64>
   1bb74:	ldrb	r0, [r1]
   1bb78:	cmp	r0, #32
   1bb7c:	bls	1bb88 <main@@Base+0x5e54>
   1bb80:	mov	r2, r1
   1bb84:	b	1bba8 <main@@Base+0x5e74>
   1bb88:	bne	1bb98 <main@@Base+0x5e64>
   1bb8c:	ldrb	r0, [r2, #2]!
   1bb90:	cmp	r0, #32
   1bb94:	bhi	1bba8 <main@@Base+0x5e74>
   1bb98:	mov	r0, sl
   1bb9c:	mov	r2, r6
   1bba0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1bba4:	mov	r2, r0
   1bba8:	cmp	r2, r6
   1bbac:	beq	1bcb8 <main@@Base+0x5f84>
   1bbb0:	ldrb	r0, [r2]
   1bbb4:	cmp	r0, #125	; 0x7d
   1bbb8:	bne	1b670 <main@@Base+0x593c>
   1bbbc:	b	1bc8c <main@@Base+0x5f58>
   1bbc0:	mov	r1, r6
   1bbc4:	b	1bbf8 <main@@Base+0x5ec4>
   1bbc8:	mov	r1, r7
   1bbcc:	b	1bbf8 <main@@Base+0x5ec4>
   1bbd0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1bbd4:	cmp	r0, #0
   1bbd8:	beq	1bc48 <main@@Base+0x5f14>
   1bbdc:	ldr	sl, [sp, #32]
   1bbe0:	ldr	r6, [sp, #36]	; 0x24
   1bbe4:	mov	r3, #7
   1bbe8:	mov	r0, sl
   1bbec:	mov	r2, r6
   1bbf0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1bbf4:	mov	r1, r0
   1bbf8:	cmp	r7, r1
   1bbfc:	bne	1bc40 <main@@Base+0x5f0c>
   1bc00:	movw	r3, #33568	; 0x8320
   1bc04:	add	r0, sp, #60	; 0x3c
   1bc08:	mov	r1, r7
   1bc0c:	mov	r2, r6
   1bc10:	movt	r3, #5
   1bc14:	str	r0, [sp]
   1bc18:	mov	r0, sl
   1bc1c:	bl	235d8 <main@@Base+0xd8a4>
   1bc20:	cmp	r0, r7
   1bc24:	mov	r1, r0
   1bc28:	ldrne	r0, [sp, #36]	; 0x24
   1bc2c:	cmpne	r1, r0
   1bc30:	beq	1bc5c <main@@Base+0x5f28>
   1bc34:	ldr	r4, [sp, #60]	; 0x3c
   1bc38:	ldr	r6, [sp, #36]	; 0x24
   1bc3c:	ldr	sl, [sp, #32]
   1bc40:	str	r4, [r9, #4]
   1bc44:	b	1bb0c <main@@Base+0x5dd8>
   1bc48:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1bc4c:	ldr	r6, [sp, #36]	; 0x24
   1bc50:	ldr	sl, [sp, #32]
   1bc54:	str	r4, [sp, #60]	; 0x3c
   1bc58:	b	1bbf8 <main@@Base+0x5ec4>
   1bc5c:	ldr	sl, [sp, #32]
   1bc60:	ldr	r6, [sp, #36]	; 0x24
   1bc64:	mov	r3, #33	; 0x21
   1bc68:	mov	r0, sl
   1bc6c:	mov	r2, r6
   1bc70:	b	1b540 <main@@Base+0x580c>
   1bc74:	mov	r8, r6
   1bc78:	b	1b548 <main@@Base+0x5814>
   1bc7c:	cmp	r0, #125	; 0x7d
   1bc80:	bne	1bcc4 <main@@Base+0x5f90>
   1bc84:	ldr	r6, [sp, #36]	; 0x24
   1bc88:	ldr	sl, [sp, #32]
   1bc8c:	add	r1, r2, #1
   1bc90:	sub	r0, r6, r1
   1bc94:	cmp	r0, #2
   1bc98:	blt	1bcfc <main@@Base+0x5fc8>
   1bc9c:	ldrb	r0, [r1]
   1bca0:	cmp	r0, #32
   1bca4:	bls	1bce0 <main@@Base+0x5fac>
   1bca8:	ldr	r6, [sp, #36]	; 0x24
   1bcac:	ldr	sl, [sp, #32]
   1bcb0:	mov	r8, r1
   1bcb4:	b	1b548 <main@@Base+0x5814>
   1bcb8:	mov	r0, sl
   1bcbc:	mov	r1, r6
   1bcc0:	b	1bcd4 <main@@Base+0x5fa0>
   1bcc4:	ldr	sl, [sp, #32]
   1bcc8:	ldr	r6, [sp, #36]	; 0x24
   1bccc:	mov	r1, r2
   1bcd0:	mov	r0, sl
   1bcd4:	mov	r2, r6
   1bcd8:	mov	r3, #10
   1bcdc:	b	1b540 <main@@Base+0x580c>
   1bce0:	ldr	r6, [sp, #36]	; 0x24
   1bce4:	ldr	sl, [sp, #32]
   1bce8:	bne	1bcfc <main@@Base+0x5fc8>
   1bcec:	ldrb	r0, [r2, #2]!
   1bcf0:	mov	r8, r2
   1bcf4:	cmp	r0, #32
   1bcf8:	bhi	1b548 <main@@Base+0x5814>
   1bcfc:	mov	r0, sl
   1bd00:	mov	r2, r6
   1bd04:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1bd08:	b	1b544 <main@@Base+0x5810>
   1bd0c:	bne	1bd1c <main@@Base+0x5fe8>
   1bd10:	ldrb	r0, [r8, #19]!
   1bd14:	cmp	r0, #32
   1bd18:	bhi	1bd2c <main@@Base+0x5ff8>
   1bd1c:	mov	r0, sl
   1bd20:	mov	r2, r6
   1bd24:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1bd28:	mov	r8, r0
   1bd2c:	cmp	r8, r6
   1bd30:	beq	1bd6c <main@@Base+0x6038>
   1bd34:	ldrb	r0, [r8]
   1bd38:	cmp	r0, #58	; 0x3a
   1bd3c:	bne	1bd6c <main@@Base+0x6038>
   1bd40:	add	r1, r8, #1
   1bd44:	sub	r0, r6, r1
   1bd48:	cmp	r0, #2
   1bd4c:	blt	1d8d8 <main@@Base+0x7ba4>
   1bd50:	ldrb	r0, [r1]
   1bd54:	cmp	r0, #32
   1bd58:	bls	1d8c0 <main@@Base+0x7b8c>
   1bd5c:	ldr	r6, [sp, #36]	; 0x24
   1bd60:	ldr	sl, [sp, #32]
   1bd64:	mov	r8, r1
   1bd68:	b	1d8e8 <main@@Base+0x7bb4>
   1bd6c:	mov	r0, sl
   1bd70:	mov	r1, r8
   1bd74:	mov	r2, r6
   1bd78:	mov	r3, #4
   1bd7c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1bd80:	b	1d8e4 <main@@Base+0x7bb0>
   1bd84:	ldr	r6, [sp, #36]	; 0x24
   1bd88:	ldr	sl, [sp, #32]
   1bd8c:	bne	1bd9c <main@@Base+0x6068>
   1bd90:	ldrb	r0, [r8, #2]!
   1bd94:	cmp	r0, #32
   1bd98:	bhi	1bdac <main@@Base+0x6078>
   1bd9c:	mov	r0, sl
   1bda0:	mov	r2, r6
   1bda4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1bda8:	mov	r8, r0
   1bdac:	cmp	r7, r8
   1bdb0:	beq	1e1d0 <main@@Base+0x849c>
   1bdb4:	ldr	r0, [sl]
   1bdb8:	bl	2d1d4 <flatcc_builder_start_offset_vector@@Base>
   1bdbc:	cmp	r0, #0
   1bdc0:	bne	16624 <main@@Base+0x8f0>
   1bdc4:	cmp	r8, r6
   1bdc8:	beq	1be04 <main@@Base+0x60d0>
   1bdcc:	ldrb	r0, [r8]
   1bdd0:	cmp	r0, #91	; 0x5b
   1bdd4:	bne	1be04 <main@@Base+0x60d0>
   1bdd8:	add	r1, r8, #1
   1bddc:	sub	r0, r6, r1
   1bde0:	cmp	r0, #2
   1bde4:	blt	1c818 <main@@Base+0x6ae4>
   1bde8:	ldrb	r0, [r1]
   1bdec:	cmp	r0, #32
   1bdf0:	bls	1c800 <main@@Base+0x6acc>
   1bdf4:	ldr	r6, [sp, #36]	; 0x24
   1bdf8:	ldr	sl, [sp, #32]
   1bdfc:	mov	r8, r1
   1be00:	b	1c828 <main@@Base+0x6af4>
   1be04:	mov	r0, sl
   1be08:	mov	r1, r8
   1be0c:	mov	r2, r6
   1be10:	mov	r3, #22
   1be14:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1be18:	mov	r8, r0
   1be1c:	ldr	r0, [sl]
   1be20:	bl	2d2a0 <flatcc_builder_end_offset_vector@@Base>
   1be24:	cmp	r0, #0
   1be28:	str	r0, [sp, #44]	; 0x2c
   1be2c:	beq	16624 <main@@Base+0x8f0>
   1be30:	ldr	r0, [sl]
   1be34:	mov	r1, #11
   1be38:	b	1ee28 <main@@Base+0x90f4>
   1be3c:	ldr	sl, [sp, #32]
   1be40:	bne	1be50 <main@@Base+0x611c>
   1be44:	ldrb	r0, [r6, #2]!
   1be48:	cmp	r0, #32
   1be4c:	bhi	1be60 <main@@Base+0x612c>
   1be50:	ldr	r2, [sp, #36]	; 0x24
   1be54:	mov	r0, sl
   1be58:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1be5c:	mov	r6, r0
   1be60:	cmp	r9, r6
   1be64:	beq	1bec8 <main@@Base+0x6194>
   1be68:	ldr	r2, [sp, #36]	; 0x24
   1be6c:	mov	r4, #0
   1be70:	str	r4, [fp, #-52]	; 0xffffffcc
   1be74:	str	r4, [fp, #-56]	; 0xffffffc8
   1be78:	str	r4, [sp, #60]	; 0x3c
   1be7c:	str	r4, [sp, #48]	; 0x30
   1be80:	cmp	r6, r2
   1be84:	beq	1bf38 <main@@Base+0x6204>
   1be88:	sub	r0, fp, #56	; 0x38
   1be8c:	mov	r1, r6
   1be90:	add	r3, sp, #48	; 0x30
   1be94:	str	r0, [sp]
   1be98:	mov	r0, sl
   1be9c:	bl	3314c <flatcc_json_parser_integer@@Base>
   1bea0:	cmp	r0, r6
   1bea4:	beq	1bf40 <main@@Base+0x620c>
   1bea8:	mov	r1, r0
   1beac:	ldr	r0, [sp, #48]	; 0x30
   1beb0:	cmp	r0, #0
   1beb4:	beq	1bf48 <main@@Base+0x6214>
   1beb8:	ldr	r2, [sp, #36]	; 0x24
   1bebc:	mov	r0, sl
   1bec0:	mov	r3, #8
   1bec4:	b	1bf64 <main@@Base+0x6230>
   1bec8:	ldr	r6, [sp, #36]	; 0x24
   1becc:	add	r7, r8, #16
   1bed0:	mov	r1, #8
   1bed4:	sub	r0, r6, r7
   1bed8:	cmp	r0, #8
   1bedc:	movcc	r1, r0
   1bee0:	sub	r1, r1, #1
   1bee4:	cmp	r1, #7
   1bee8:	bhi	1e1d0 <main@@Base+0x849c>
   1beec:	ldrb	r1, [r7]
   1bef0:	cmp	r1, #97	; 0x61
   1bef4:	bne	1e1d0 <main@@Base+0x849c>
   1bef8:	cmp	r0, #2
   1befc:	blt	1e1d0 <main@@Base+0x849c>
   1bf00:	ldrb	r0, [r8, #17]
   1bf04:	cmp	r0, #34	; 0x22
   1bf08:	bne	1e1d0 <main@@Base+0x849c>
   1bf0c:	add	r1, r8, #18
   1bf10:	sub	r0, r6, r1
   1bf14:	cmp	r0, #2
   1bf18:	blt	1c510 <main@@Base+0x67dc>
   1bf1c:	ldrb	r0, [r1]
   1bf20:	cmp	r0, #32
   1bf24:	bls	1c4f8 <main@@Base+0x67c4>
   1bf28:	ldr	r6, [sp, #36]	; 0x24
   1bf2c:	ldr	sl, [sp, #32]
   1bf30:	mov	r8, r1
   1bf34:	b	1c520 <main@@Base+0x67ec>
   1bf38:	mov	r9, r2
   1bf3c:	b	1bf6c <main@@Base+0x6238>
   1bf40:	mov	r9, r6
   1bf44:	b	1bf6c <main@@Base+0x6238>
   1bf48:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1bf4c:	cmp	r0, #0
   1bf50:	beq	1c990 <main@@Base+0x6c5c>
   1bf54:	ldr	sl, [sp, #32]
   1bf58:	ldr	r2, [sp, #36]	; 0x24
   1bf5c:	mov	r3, #7
   1bf60:	mov	r0, sl
   1bf64:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1bf68:	mov	r9, r0
   1bf6c:	cmp	r6, r9
   1bf70:	bne	1bfb0 <main@@Base+0x627c>
   1bf74:	ldr	r4, [sp, #36]	; 0x24
   1bf78:	movw	r3, #33076	; 0x8134
   1bf7c:	add	r0, sp, #60	; 0x3c
   1bf80:	mov	r1, r6
   1bf84:	movt	r3, #5
   1bf88:	str	r0, [sp]
   1bf8c:	mov	r0, sl
   1bf90:	mov	r2, r4
   1bf94:	bl	235d8 <main@@Base+0xd8a4>
   1bf98:	mov	r9, r0
   1bf9c:	cmp	r0, r6
   1bfa0:	cmpne	r9, r4
   1bfa4:	beq	1f2f0 <main@@Base+0x95bc>
   1bfa8:	ldr	r4, [sp, #60]	; 0x3c
   1bfac:	ldr	sl, [sp, #32]
   1bfb0:	ldr	r6, [sp, #36]	; 0x24
   1bfb4:	cmp	r4, #0
   1bfb8:	bne	1bfc8 <main@@Base+0x6294>
   1bfbc:	ldrb	r0, [sl, #8]
   1bfc0:	tst	r0, #2
   1bfc4:	beq	1e1e4 <main@@Base+0x84b0>
   1bfc8:	ldr	r0, [sl]
   1bfcc:	mov	r1, #17
   1bfd0:	mov	r2, #4
   1bfd4:	mov	r3, #4
   1bfd8:	bl	2e760 <flatcc_builder_table_add@@Base>
   1bfdc:	cmp	r0, #0
   1bfe0:	beq	1f2f0 <main@@Base+0x95bc>
   1bfe4:	str	r4, [r0]
   1bfe8:	b	1e1e4 <main@@Base+0x84b0>
   1bfec:	ldr	sl, [sp, #32]
   1bff0:	bne	1c000 <main@@Base+0x62cc>
   1bff4:	ldrb	r0, [r6, #2]!
   1bff8:	cmp	r0, #32
   1bffc:	bhi	1c010 <main@@Base+0x62dc>
   1c000:	ldr	r2, [sp, #36]	; 0x24
   1c004:	mov	r0, sl
   1c008:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c00c:	mov	r6, r0
   1c010:	cmp	r9, r6
   1c014:	beq	1c08c <main@@Base+0x6358>
   1c018:	ldr	r2, [sp, #36]	; 0x24
   1c01c:	mov	r4, #0
   1c020:	str	r4, [fp, #-52]	; 0xffffffcc
   1c024:	str	r4, [fp, #-56]	; 0xffffffc8
   1c028:	str	r4, [sp, #52]	; 0x34
   1c02c:	str	r4, [sp, #48]	; 0x30
   1c030:	str	r4, [sp, #60]	; 0x3c
   1c034:	cmp	r6, r2
   1c038:	beq	1c0fc <main@@Base+0x63c8>
   1c03c:	sub	r0, fp, #56	; 0x38
   1c040:	mov	r1, r6
   1c044:	add	r3, sp, #60	; 0x3c
   1c048:	str	r0, [sp]
   1c04c:	mov	r0, sl
   1c050:	bl	3314c <flatcc_json_parser_integer@@Base>
   1c054:	cmp	r0, r6
   1c058:	beq	1c108 <main@@Base+0x63d4>
   1c05c:	mov	r1, r0
   1c060:	ldr	r0, [sp, #60]	; 0x3c
   1c064:	cmp	r0, #0
   1c068:	beq	1c118 <main@@Base+0x63e4>
   1c06c:	ldr	r2, [sp, #36]	; 0x24
   1c070:	mov	r0, sl
   1c074:	mov	r3, #8
   1c078:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1c07c:	mov	r9, r0
   1c080:	mov	r4, #0
   1c084:	mov	r5, #0
   1c088:	b	1c12c <main@@Base+0x63f8>
   1c08c:	ldr	r6, [sp, #36]	; 0x24
   1c090:	add	r7, r8, #16
   1c094:	mov	r1, #8
   1c098:	sub	r0, r6, r7
   1c09c:	cmp	r0, #8
   1c0a0:	movcc	r1, r0
   1c0a4:	sub	r1, r1, #1
   1c0a8:	cmp	r1, #7
   1c0ac:	bhi	1e1d0 <main@@Base+0x849c>
   1c0b0:	ldrb	r1, [r7]
   1c0b4:	cmp	r1, #97	; 0x61
   1c0b8:	bne	1e1d0 <main@@Base+0x849c>
   1c0bc:	cmp	r0, #2
   1c0c0:	blt	1e1d0 <main@@Base+0x849c>
   1c0c4:	ldrb	r0, [r8, #17]
   1c0c8:	cmp	r0, #34	; 0x22
   1c0cc:	bne	1e1d0 <main@@Base+0x849c>
   1c0d0:	add	r1, r8, #18
   1c0d4:	sub	r0, r6, r1
   1c0d8:	cmp	r0, #2
   1c0dc:	blt	1c590 <main@@Base+0x685c>
   1c0e0:	ldrb	r0, [r1]
   1c0e4:	cmp	r0, #32
   1c0e8:	bls	1c578 <main@@Base+0x6844>
   1c0ec:	ldr	r6, [sp, #36]	; 0x24
   1c0f0:	ldr	sl, [sp, #32]
   1c0f4:	mov	r8, r1
   1c0f8:	b	1c5a0 <main@@Base+0x686c>
   1c0fc:	mov	r5, #0
   1c100:	mov	r9, r2
   1c104:	b	1c12c <main@@Base+0x63f8>
   1c108:	mov	r4, #0
   1c10c:	mov	r5, #0
   1c110:	mov	r9, r6
   1c114:	b	1c12c <main@@Base+0x63f8>
   1c118:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1c11c:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1c120:	mov	r9, r1
   1c124:	str	r5, [sp, #52]	; 0x34
   1c128:	str	r4, [sp, #48]	; 0x30
   1c12c:	cmp	r6, r9
   1c130:	bne	1c174 <main@@Base+0x6440>
   1c134:	ldr	r4, [sp, #36]	; 0x24
   1c138:	movw	r3, #33100	; 0x814c
   1c13c:	add	r0, sp, #48	; 0x30
   1c140:	mov	r1, r6
   1c144:	movt	r3, #5
   1c148:	str	r0, [sp]
   1c14c:	mov	r0, sl
   1c150:	mov	r2, r4
   1c154:	bl	237a0 <main@@Base+0xda6c>
   1c158:	mov	r9, r0
   1c15c:	cmp	r0, r6
   1c160:	cmpne	r9, r4
   1c164:	beq	1f2f0 <main@@Base+0x95bc>
   1c168:	ldr	r4, [sp, #48]	; 0x30
   1c16c:	ldr	r5, [sp, #52]	; 0x34
   1c170:	ldr	sl, [sp, #32]
   1c174:	ldr	r6, [sp, #36]	; 0x24
   1c178:	orrs	r0, r4, r5
   1c17c:	bne	1c18c <main@@Base+0x6458>
   1c180:	ldrb	r0, [sl, #8]
   1c184:	tst	r0, #2
   1c188:	beq	1e1e4 <main@@Base+0x84b0>
   1c18c:	ldr	r0, [sl]
   1c190:	mov	r1, #19
   1c194:	mov	r2, #8
   1c198:	mov	r3, #8
   1c19c:	bl	2e760 <flatcc_builder_table_add@@Base>
   1c1a0:	cmp	r0, #0
   1c1a4:	beq	1f2f0 <main@@Base+0x95bc>
   1c1a8:	strd	r4, [r0]
   1c1ac:	b	1e1e4 <main@@Base+0x84b0>
   1c1b0:	ldr	r6, [sp, #36]	; 0x24
   1c1b4:	ldr	sl, [sp, #32]
   1c1b8:	bne	1c1c8 <main@@Base+0x6494>
   1c1bc:	ldrb	r0, [r8, #2]!
   1c1c0:	cmp	r0, #32
   1c1c4:	bhi	1c1d8 <main@@Base+0x64a4>
   1c1c8:	mov	r0, sl
   1c1cc:	mov	r2, r6
   1c1d0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c1d4:	mov	r8, r0
   1c1d8:	cmp	r7, r8
   1c1dc:	beq	1e1d0 <main@@Base+0x849c>
   1c1e0:	ldr	r0, [sl]
   1c1e4:	bl	2d1d4 <flatcc_builder_start_offset_vector@@Base>
   1c1e8:	cmp	r0, #0
   1c1ec:	bne	16624 <main@@Base+0x8f0>
   1c1f0:	cmp	r8, r6
   1c1f4:	beq	1c22c <main@@Base+0x64f8>
   1c1f8:	ldrb	r0, [r8]
   1c1fc:	cmp	r0, #91	; 0x5b
   1c200:	bne	1c22c <main@@Base+0x64f8>
   1c204:	add	r1, r8, #1
   1c208:	sub	r0, r6, r1
   1c20c:	cmp	r0, #2
   1c210:	blt	1c9f4 <main@@Base+0x6cc0>
   1c214:	ldrb	r0, [r1]
   1c218:	cmp	r0, #32
   1c21c:	bls	1c9dc <main@@Base+0x6ca8>
   1c220:	ldr	r6, [sp, #36]	; 0x24
   1c224:	mov	r8, r1
   1c228:	b	1ca04 <main@@Base+0x6cd0>
   1c22c:	mov	r0, sl
   1c230:	mov	r1, r8
   1c234:	mov	r2, r6
   1c238:	mov	r3, #22
   1c23c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1c240:	mov	r8, r0
   1c244:	ldr	r0, [sl]
   1c248:	bl	2d2a0 <flatcc_builder_end_offset_vector@@Base>
   1c24c:	cmp	r0, #0
   1c250:	str	r0, [sp, #44]	; 0x2c
   1c254:	beq	16624 <main@@Base+0x8f0>
   1c258:	ldr	r0, [sl]
   1c25c:	mov	r1, #10
   1c260:	b	1ee28 <main@@Base+0x90f4>
   1c264:	ldr	r6, [sp, #36]	; 0x24
   1c268:	ldr	sl, [sp, #32]
   1c26c:	bne	1c27c <main@@Base+0x6548>
   1c270:	ldrb	r0, [r8, #2]!
   1c274:	cmp	r0, #32
   1c278:	bhi	1c28c <main@@Base+0x6558>
   1c27c:	mov	r0, sl
   1c280:	mov	r2, r6
   1c284:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c288:	mov	r8, r0
   1c28c:	cmp	r7, r8
   1c290:	beq	1e1d0 <main@@Base+0x849c>
   1c294:	mov	r0, #0
   1c298:	mov	r1, #3
   1c29c:	str	r0, [sp, #44]	; 0x2c
   1c2a0:	ldr	r0, [sl]
   1c2a4:	bl	2d514 <flatcc_builder_start_table@@Base>
   1c2a8:	cmp	r0, #0
   1c2ac:	bne	1edfc <main@@Base+0x90c8>
   1c2b0:	cmp	r8, r6
   1c2b4:	beq	1c2e8 <main@@Base+0x65b4>
   1c2b8:	ldrb	r0, [r8]
   1c2bc:	cmp	r0, #123	; 0x7b
   1c2c0:	bne	1c2e8 <main@@Base+0x65b4>
   1c2c4:	add	r1, r8, #1
   1c2c8:	sub	r0, r6, r1
   1c2cc:	cmp	r0, #2
   1c2d0:	blt	1e5d0 <main@@Base+0x889c>
   1c2d4:	ldrb	r0, [r1]
   1c2d8:	cmp	r0, #32
   1c2dc:	bls	1e5c0 <main@@Base+0x888c>
   1c2e0:	mov	r8, r1
   1c2e4:	b	1e5e0 <main@@Base+0x88ac>
   1c2e8:	mov	r0, sl
   1c2ec:	mov	r1, r8
   1c2f0:	mov	r2, r6
   1c2f4:	mov	r3, #21
   1c2f8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1c2fc:	mov	r7, r0
   1c300:	ldr	r0, [sl, #20]
   1c304:	cmp	r0, #0
   1c308:	beq	1c318 <main@@Base+0x65e4>
   1c30c:	ldr	r6, [sp, #36]	; 0x24
   1c310:	mov	r8, r7
   1c314:	b	1edfc <main@@Base+0x90c8>
   1c318:	ldr	r0, [sl]
   1c31c:	bl	2de74 <flatcc_builder_end_table@@Base>
   1c320:	mov	r8, r7
   1c324:	cmp	r0, #0
   1c328:	str	r0, [sp, #44]	; 0x2c
   1c32c:	beq	1edf4 <main@@Base+0x90c0>
   1c330:	ldr	r6, [sp, #36]	; 0x24
   1c334:	ldr	sl, [sp, #32]
   1c338:	b	1ee20 <main@@Base+0x90ec>
   1c33c:	ldr	r6, [sp, #36]	; 0x24
   1c340:	ldr	sl, [sp, #32]
   1c344:	bne	1c354 <main@@Base+0x6620>
   1c348:	ldrb	r0, [r8, #2]!
   1c34c:	cmp	r0, #32
   1c350:	bhi	1c364 <main@@Base+0x6630>
   1c354:	mov	r0, sl
   1c358:	mov	r2, r6
   1c35c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c360:	mov	r8, r0
   1c364:	cmp	r7, r8
   1c368:	beq	1e1d0 <main@@Base+0x849c>
   1c36c:	ldr	r0, [sl]
   1c370:	mov	r1, #1
   1c374:	mov	r2, #1
   1c378:	mvn	r3, #0
   1c37c:	bl	2d148 <flatcc_builder_start_vector@@Base>
   1c380:	cmp	r0, #0
   1c384:	bne	16624 <main@@Base+0x8f0>
   1c388:	cmp	r8, r6
   1c38c:	beq	1c3c4 <main@@Base+0x6690>
   1c390:	ldrb	r0, [r8]
   1c394:	cmp	r0, #91	; 0x5b
   1c398:	bne	1c3c4 <main@@Base+0x6690>
   1c39c:	add	r1, r8, #1
   1c3a0:	sub	r0, r6, r1
   1c3a4:	cmp	r0, #2
   1c3a8:	blt	1cb70 <main@@Base+0x6e3c>
   1c3ac:	ldrb	r0, [r1]
   1c3b0:	cmp	r0, #32
   1c3b4:	bls	1cb58 <main@@Base+0x6e24>
   1c3b8:	ldr	r6, [sp, #36]	; 0x24
   1c3bc:	mov	r8, r1
   1c3c0:	b	1cb80 <main@@Base+0x6e4c>
   1c3c4:	mov	r0, sl
   1c3c8:	mov	r1, r8
   1c3cc:	mov	r2, r6
   1c3d0:	mov	r3, #22
   1c3d4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1c3d8:	mov	r8, r0
   1c3dc:	ldr	r0, [sl]
   1c3e0:	bl	2e174 <flatcc_builder_end_vector@@Base>
   1c3e4:	cmp	r0, #0
   1c3e8:	str	r0, [sp, #44]	; 0x2c
   1c3ec:	beq	16624 <main@@Base+0x8f0>
   1c3f0:	ldr	r0, [sl]
   1c3f4:	mov	r1, #5
   1c3f8:	b	1ee28 <main@@Base+0x90f4>
   1c3fc:	ldr	r6, [sp, #36]	; 0x24
   1c400:	ldr	sl, [sp, #32]
   1c404:	bne	1c418 <main@@Base+0x66e4>
   1c408:	ldrb	r0, [r8, #2]!
   1c40c:	mov	r9, r8
   1c410:	cmp	r0, #32
   1c414:	bhi	18e94 <main@@Base+0x3160>
   1c418:	mov	r0, sl
   1c41c:	mov	r2, r6
   1c420:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c424:	b	18e90 <main@@Base+0x315c>
   1c428:	ldr	r6, [sp, #36]	; 0x24
   1c42c:	bne	1c43c <main@@Base+0x6708>
   1c430:	ldrb	r0, [r9, #2]!
   1c434:	cmp	r0, #32
   1c438:	bhi	1c44c <main@@Base+0x6718>
   1c43c:	ldr	r0, [sp, #32]
   1c440:	mov	r2, r6
   1c444:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c448:	mov	r9, r0
   1c44c:	cmp	sl, r9
   1c450:	beq	1c4b0 <main@@Base+0x677c>
   1c454:	ldr	sl, [sp, #32]
   1c458:	mov	r1, #8
   1c45c:	mov	r2, #8
   1c460:	mvn	r3, #-536870912	; 0xe0000000
   1c464:	ldr	r0, [sl]
   1c468:	bl	2d148 <flatcc_builder_start_vector@@Base>
   1c46c:	cmp	r0, #0
   1c470:	bne	1f2e4 <main@@Base+0x95b0>
   1c474:	cmp	r9, r6
   1c478:	beq	1c4c0 <main@@Base+0x678c>
   1c47c:	ldrb	r0, [r9]
   1c480:	cmp	r0, #91	; 0x5b
   1c484:	bne	1c4c0 <main@@Base+0x678c>
   1c488:	add	r1, r9, #1
   1c48c:	sub	r0, r6, r1
   1c490:	cmp	r0, #2
   1c494:	blt	1d4bc <main@@Base+0x7788>
   1c498:	ldrb	r0, [r1]
   1c49c:	cmp	r0, #32
   1c4a0:	bls	1d4a4 <main@@Base+0x7770>
   1c4a4:	ldr	r6, [sp, #36]	; 0x24
   1c4a8:	mov	r9, r1
   1c4ac:	b	1d4cc <main@@Base+0x7798>
   1c4b0:	ldr	r0, [sp, #32]
   1c4b4:	mov	r1, sl
   1c4b8:	mov	sl, r0
   1c4bc:	b	1e1d8 <main@@Base+0x84a4>
   1c4c0:	mov	r0, sl
   1c4c4:	mov	r1, r9
   1c4c8:	mov	r2, r6
   1c4cc:	mov	r3, #22
   1c4d0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1c4d4:	mov	r9, r0
   1c4d8:	ldr	r0, [sl]
   1c4dc:	bl	2e174 <flatcc_builder_end_vector@@Base>
   1c4e0:	cmp	r0, #0
   1c4e4:	str	r0, [sp, #44]	; 0x2c
   1c4e8:	beq	1f2e4 <main@@Base+0x95b0>
   1c4ec:	ldr	r0, [sl]
   1c4f0:	mov	r1, #32
   1c4f4:	b	18eb0 <main@@Base+0x317c>
   1c4f8:	ldr	r6, [sp, #36]	; 0x24
   1c4fc:	ldr	sl, [sp, #32]
   1c500:	bne	1c510 <main@@Base+0x67dc>
   1c504:	ldrb	r0, [r8, #19]!
   1c508:	cmp	r0, #32
   1c50c:	bhi	1c520 <main@@Base+0x67ec>
   1c510:	mov	r0, sl
   1c514:	mov	r2, r6
   1c518:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c51c:	mov	r8, r0
   1c520:	cmp	r8, r6
   1c524:	beq	1c560 <main@@Base+0x682c>
   1c528:	ldrb	r0, [r8]
   1c52c:	cmp	r0, #58	; 0x3a
   1c530:	bne	1c560 <main@@Base+0x682c>
   1c534:	add	r1, r8, #1
   1c538:	sub	r0, r6, r1
   1c53c:	cmp	r0, #2
   1c540:	blt	1e004 <main@@Base+0x82d0>
   1c544:	ldrb	r0, [r1]
   1c548:	cmp	r0, #32
   1c54c:	bls	1dfec <main@@Base+0x82b8>
   1c550:	ldr	r6, [sp, #36]	; 0x24
   1c554:	ldr	sl, [sp, #32]
   1c558:	mov	r8, r1
   1c55c:	b	1e014 <main@@Base+0x82e0>
   1c560:	mov	r0, sl
   1c564:	mov	r1, r8
   1c568:	mov	r2, r6
   1c56c:	mov	r3, #4
   1c570:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1c574:	b	1e010 <main@@Base+0x82dc>
   1c578:	ldr	r6, [sp, #36]	; 0x24
   1c57c:	ldr	sl, [sp, #32]
   1c580:	bne	1c590 <main@@Base+0x685c>
   1c584:	ldrb	r0, [r8, #19]!
   1c588:	cmp	r0, #32
   1c58c:	bhi	1c5a0 <main@@Base+0x686c>
   1c590:	mov	r0, sl
   1c594:	mov	r2, r6
   1c598:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c59c:	mov	r8, r0
   1c5a0:	cmp	r8, r6
   1c5a4:	beq	1c5e0 <main@@Base+0x68ac>
   1c5a8:	ldrb	r0, [r8]
   1c5ac:	cmp	r0, #58	; 0x3a
   1c5b0:	bne	1c5e0 <main@@Base+0x68ac>
   1c5b4:	add	r1, r8, #1
   1c5b8:	sub	r0, r6, r1
   1c5bc:	cmp	r0, #2
   1c5c0:	blt	1e144 <main@@Base+0x8410>
   1c5c4:	ldrb	r0, [r1]
   1c5c8:	cmp	r0, #32
   1c5cc:	bls	1e12c <main@@Base+0x83f8>
   1c5d0:	ldr	r6, [sp, #36]	; 0x24
   1c5d4:	ldr	sl, [sp, #32]
   1c5d8:	mov	r8, r1
   1c5dc:	b	1e154 <main@@Base+0x8420>
   1c5e0:	mov	r0, sl
   1c5e4:	mov	r1, r8
   1c5e8:	mov	r2, r6
   1c5ec:	mov	r3, #4
   1c5f0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1c5f4:	b	1e150 <main@@Base+0x841c>
   1c5f8:	ldr	r6, [sp, #36]	; 0x24
   1c5fc:	ldr	sl, [sp, #32]
   1c600:	bne	1c610 <main@@Base+0x68dc>
   1c604:	ldrb	r0, [r9, #2]!
   1c608:	cmp	r0, #32
   1c60c:	bhi	1c620 <main@@Base+0x68ec>
   1c610:	mov	r0, sl
   1c614:	mov	r2, r6
   1c618:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c61c:	mov	r9, r0
   1c620:	cmp	r7, r9
   1c624:	beq	1e1d0 <main@@Base+0x849c>
   1c628:	cmp	r9, r6
   1c62c:	beq	1c68c <main@@Base+0x6958>
   1c630:	ldrb	r0, [r9]
   1c634:	cmp	r0, #91	; 0x5b
   1c638:	bne	1c68c <main@@Base+0x6958>
   1c63c:	ldr	r0, [sl]
   1c640:	mov	r1, #1
   1c644:	mov	r2, #1
   1c648:	mvn	r3, #0
   1c64c:	bl	2d148 <flatcc_builder_start_vector@@Base>
   1c650:	cmp	r0, #0
   1c654:	bne	1f2f0 <main@@Base+0x95bc>
   1c658:	ldrb	r0, [r9]
   1c65c:	cmp	r0, #91	; 0x5b
   1c660:	bne	1c6d8 <main@@Base+0x69a4>
   1c664:	ldr	r0, [sp, #36]	; 0x24
   1c668:	add	r1, r9, #1
   1c66c:	sub	r0, r0, r1
   1c670:	cmp	r0, #2
   1c674:	blt	1e368 <main@@Base+0x8634>
   1c678:	ldrb	r0, [r1]
   1c67c:	cmp	r0, #32
   1c680:	bls	1e358 <main@@Base+0x8624>
   1c684:	mov	r9, r1
   1c688:	b	1e378 <main@@Base+0x8644>
   1c68c:	ldr	r0, [sl]
   1c690:	mov	r1, #0
   1c694:	mov	r2, #0
   1c698:	mov	r3, #0
   1c69c:	bl	2c4b8 <flatcc_builder_start_buffer@@Base>
   1c6a0:	cmp	r0, #0
   1c6a4:	bne	1f2e4 <main@@Base+0x95b0>
   1c6a8:	mov	r0, sl
   1c6ac:	mov	r1, r9
   1c6b0:	mov	r2, r6
   1c6b4:	add	r3, sp, #44	; 0x2c
   1c6b8:	bl	165e4 <main@@Base+0x8b0>
   1c6bc:	ldr	r1, [sp, #44]	; 0x2c
   1c6c0:	mov	r9, r0
   1c6c4:	cmp	r1, #0
   1c6c8:	beq	1f2e4 <main@@Base+0x95b0>
   1c6cc:	ldr	r0, [sl]
   1c6d0:	bl	2c6a8 <flatcc_builder_end_buffer@@Base>
   1c6d4:	b	1eff8 <main@@Base+0x92c4>
   1c6d8:	ldr	r0, [sp, #32]
   1c6dc:	ldr	r2, [sp, #36]	; 0x24
   1c6e0:	mov	r1, r9
   1c6e4:	mov	r3, #22
   1c6e8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1c6ec:	b	1efe4 <main@@Base+0x92b0>
   1c6f0:	ldr	r6, [sp, #36]	; 0x24
   1c6f4:	ldr	sl, [sp, #32]
   1c6f8:	bne	1c708 <main@@Base+0x69d4>
   1c6fc:	ldrb	r0, [r8, #2]!
   1c700:	cmp	r0, #32
   1c704:	bhi	1c718 <main@@Base+0x69e4>
   1c708:	mov	r0, sl
   1c70c:	mov	r2, r6
   1c710:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c714:	mov	r8, r0
   1c718:	cmp	r7, r8
   1c71c:	beq	1e1d0 <main@@Base+0x849c>
   1c720:	mov	r2, r6
   1c724:	mov	r6, #0
   1c728:	cmp	r8, r2
   1c72c:	str	r6, [fp, #-52]	; 0xffffffcc
   1c730:	str	r6, [fp, #-56]	; 0xffffffc8
   1c734:	str	r6, [sp, #60]	; 0x3c
   1c738:	str	r6, [sp, #48]	; 0x30
   1c73c:	beq	1c798 <main@@Base+0x6a64>
   1c740:	sub	r0, fp, #56	; 0x38
   1c744:	mov	r1, r8
   1c748:	add	r3, sp, #48	; 0x30
   1c74c:	str	r0, [sp]
   1c750:	mov	r0, sl
   1c754:	bl	3314c <flatcc_json_parser_integer@@Base>
   1c758:	cmp	r0, r8
   1c75c:	beq	1c7a0 <main@@Base+0x6a6c>
   1c760:	ldr	r2, [sp, #48]	; 0x30
   1c764:	mov	r9, r0
   1c768:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c76c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c770:	cmp	r2, #0
   1c774:	beq	1c7a8 <main@@Base+0x6a74>
   1c778:	subs	r2, r0, #-2147483647	; 0x80000001
   1c77c:	sbcs	r1, r1, #0
   1c780:	bcc	1c7d4 <main@@Base+0x6aa0>
   1c784:	ldr	sl, [sp, #32]
   1c788:	ldr	r2, [sp, #36]	; 0x24
   1c78c:	mov	r1, r9
   1c790:	mov	r3, #8
   1c794:	b	1c7c4 <main@@Base+0x6a90>
   1c798:	mov	r9, r2
   1c79c:	b	1d844 <main@@Base+0x7b10>
   1c7a0:	mov	r9, r8
   1c7a4:	b	1d844 <main@@Base+0x7b10>
   1c7a8:	subs	r2, r0, #-2147483648	; 0x80000000
   1c7ac:	sbcs	r1, r1, #0
   1c7b0:	bcc	1d838 <main@@Base+0x7b04>
   1c7b4:	ldr	sl, [sp, #32]
   1c7b8:	ldr	r2, [sp, #36]	; 0x24
   1c7bc:	mov	r1, r9
   1c7c0:	mov	r3, #7
   1c7c4:	mov	r0, sl
   1c7c8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1c7cc:	mov	r9, r0
   1c7d0:	b	1d844 <main@@Base+0x7b10>
   1c7d4:	rsb	r6, r0, #0
   1c7d8:	b	1d83c <main@@Base+0x7b08>
   1c7dc:	ldr	sl, [sp, #32]
   1c7e0:	ldr	r6, [sp, #36]	; 0x24
   1c7e4:	mov	r1, r8
   1c7e8:	mov	r0, sl
   1c7ec:	mov	r2, r6
   1c7f0:	mov	r3, #9
   1c7f4:	b	193c8 <main@@Base+0x3694>
   1c7f8:	mov	r9, r6
   1c7fc:	b	1ac54 <main@@Base+0x4f20>
   1c800:	ldr	r6, [sp, #36]	; 0x24
   1c804:	ldr	sl, [sp, #32]
   1c808:	bne	1c818 <main@@Base+0x6ae4>
   1c80c:	ldrb	r0, [r8, #2]!
   1c810:	cmp	r0, #32
   1c814:	bhi	1c828 <main@@Base+0x6af4>
   1c818:	mov	r0, sl
   1c81c:	mov	r2, r6
   1c820:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c824:	mov	r8, r0
   1c828:	cmp	r8, r6
   1c82c:	mov	r2, r6
   1c830:	beq	1c884 <main@@Base+0x6b50>
   1c834:	ldrb	r0, [r8]
   1c838:	cmp	r0, #93	; 0x5d
   1c83c:	bne	1c878 <main@@Base+0x6b44>
   1c840:	ldr	r6, [sp, #36]	; 0x24
   1c844:	ldr	sl, [sp, #32]
   1c848:	add	r1, r8, #1
   1c84c:	sub	r0, r6, r1
   1c850:	cmp	r0, #2
   1c854:	blt	1f068 <main@@Base+0x9334>
   1c858:	ldrb	r0, [r1]
   1c85c:	cmp	r0, #32
   1c860:	bhi	1dc40 <main@@Base+0x7f0c>
   1c864:	ldr	r6, [sp, #36]	; 0x24
   1c868:	ldr	sl, [sp, #32]
   1c86c:	bne	1f068 <main@@Base+0x9334>
   1c870:	ldrb	r0, [r8, #2]!
   1c874:	b	1f060 <main@@Base+0x932c>
   1c878:	ldr	r6, [sp, #36]	; 0x24
   1c87c:	ldr	sl, [sp, #32]
   1c880:	mov	r2, r8
   1c884:	mov	r1, r2
   1c888:	mov	r0, sl
   1c88c:	mov	r2, r6
   1c890:	add	r3, sp, #44	; 0x2c
   1c894:	bl	165e4 <main@@Base+0x8b0>
   1c898:	mov	r8, r0
   1c89c:	ldr	r0, [sp, #44]	; 0x2c
   1c8a0:	cmp	r0, #0
   1c8a4:	beq	16624 <main@@Base+0x8f0>
   1c8a8:	ldr	r0, [sl]
   1c8ac:	mov	r1, #1
   1c8b0:	bl	2cba8 <flatcc_builder_extend_offset_vector@@Base>
   1c8b4:	cmp	r0, #0
   1c8b8:	beq	16624 <main@@Base+0x8f0>
   1c8bc:	ldr	r1, [sp, #44]	; 0x2c
   1c8c0:	str	r1, [r0]
   1c8c4:	sub	r0, r6, r8
   1c8c8:	cmp	r0, #2
   1c8cc:	blt	1c8f8 <main@@Base+0x6bc4>
   1c8d0:	ldrb	r0, [r8]
   1c8d4:	cmp	r0, #32
   1c8d8:	bls	1c8e4 <main@@Base+0x6bb0>
   1c8dc:	mov	r2, r8
   1c8e0:	b	1c90c <main@@Base+0x6bd8>
   1c8e4:	bne	1c8f8 <main@@Base+0x6bc4>
   1c8e8:	mov	r2, r8
   1c8ec:	ldrb	r0, [r2, #1]!
   1c8f0:	cmp	r0, #32
   1c8f4:	bhi	1c90c <main@@Base+0x6bd8>
   1c8f8:	mov	r0, sl
   1c8fc:	mov	r1, r8
   1c900:	mov	r2, r6
   1c904:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c908:	mov	r2, r0
   1c90c:	cmp	r2, r6
   1c910:	beq	1dbd0 <main@@Base+0x7e9c>
   1c914:	ldrb	r0, [r2]
   1c918:	cmp	r0, #44	; 0x2c
   1c91c:	bne	1dc14 <main@@Base+0x7ee0>
   1c920:	add	r1, r2, #1
   1c924:	sub	r0, r6, r1
   1c928:	cmp	r0, #2
   1c92c:	blt	1c954 <main@@Base+0x6c20>
   1c930:	ldrb	r0, [r1]
   1c934:	cmp	r0, #32
   1c938:	bls	1c944 <main@@Base+0x6c10>
   1c93c:	mov	r2, r1
   1c940:	b	1c964 <main@@Base+0x6c30>
   1c944:	bne	1c954 <main@@Base+0x6c20>
   1c948:	ldrb	r0, [r2, #2]!
   1c94c:	cmp	r0, #32
   1c950:	bhi	1c964 <main@@Base+0x6c30>
   1c954:	mov	r0, sl
   1c958:	mov	r2, r6
   1c95c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1c960:	mov	r2, r0
   1c964:	cmp	r2, r6
   1c968:	beq	1dc64 <main@@Base+0x7f30>
   1c96c:	ldrb	r0, [r2]
   1c970:	cmp	r0, #93	; 0x5d
   1c974:	bne	1c884 <main@@Base+0x6b50>
   1c978:	b	1dc24 <main@@Base+0x7ef0>
   1c97c:	cmp	r0, #93	; 0x5d
   1c980:	bne	1dbac <main@@Base+0x7e78>
   1c984:	ldr	r6, [sp, #36]	; 0x24
   1c988:	ldr	sl, [sp, #32]
   1c98c:	b	1b4ac <main@@Base+0x5778>
   1c990:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1c994:	ldr	sl, [sp, #32]
   1c998:	mov	r9, r1
   1c99c:	str	r4, [sp, #60]	; 0x3c
   1c9a0:	b	1bf6c <main@@Base+0x6238>
   1c9a4:	mov	r0, sl
   1c9a8:	mov	r1, r6
   1c9ac:	b	1dbbc <main@@Base+0x7e88>
   1c9b0:	add	r1, r8, #1
   1c9b4:	sub	r0, r6, r1
   1c9b8:	cmp	r0, #2
   1c9bc:	blt	1ee88 <main@@Base+0x9154>
   1c9c0:	ldrb	r0, [r1]
   1c9c4:	cmp	r0, #32
   1c9c8:	bls	1ee6c <main@@Base+0x9138>
   1c9cc:	ldr	r6, [sp, #36]	; 0x24
   1c9d0:	ldr	sl, [sp, #32]
   1c9d4:	mov	r9, r1
   1c9d8:	b	1ac54 <main@@Base+0x4f20>
   1c9dc:	ldr	r6, [sp, #36]	; 0x24
   1c9e0:	ldr	sl, [sp, #32]
   1c9e4:	bne	1c9f4 <main@@Base+0x6cc0>
   1c9e8:	ldrb	r0, [r8, #2]!
   1c9ec:	cmp	r0, #32
   1c9f0:	bhi	1ca04 <main@@Base+0x6cd0>
   1c9f4:	mov	r0, sl
   1c9f8:	mov	r2, r6
   1c9fc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1ca00:	mov	r8, r0
   1ca04:	cmp	r8, r6
   1ca08:	mov	r2, r6
   1ca0c:	beq	1ca58 <main@@Base+0x6d24>
   1ca10:	ldrb	r0, [r8]
   1ca14:	cmp	r0, #93	; 0x5d
   1ca18:	bne	1ca54 <main@@Base+0x6d20>
   1ca1c:	ldr	r6, [sp, #36]	; 0x24
   1ca20:	ldr	sl, [sp, #32]
   1ca24:	add	r1, r8, #1
   1ca28:	sub	r0, r6, r1
   1ca2c:	cmp	r0, #2
   1ca30:	blt	1f100 <main@@Base+0x93cc>
   1ca34:	ldrb	r0, [r1]
   1ca38:	cmp	r0, #32
   1ca3c:	bhi	1dcf0 <main@@Base+0x7fbc>
   1ca40:	ldr	r6, [sp, #36]	; 0x24
   1ca44:	ldr	sl, [sp, #32]
   1ca48:	bne	1f100 <main@@Base+0x93cc>
   1ca4c:	ldrb	r0, [r8, #2]!
   1ca50:	b	1f0f8 <main@@Base+0x93c4>
   1ca54:	mov	r2, r8
   1ca58:	ldr	r6, [sp, #36]	; 0x24
   1ca5c:	ldr	sl, [sp, #32]
   1ca60:	mov	r1, r2
   1ca64:	mov	r0, sl
   1ca68:	mov	r2, r6
   1ca6c:	add	r3, sp, #44	; 0x2c
   1ca70:	bl	33678 <flatcc_json_parser_build_string@@Base>
   1ca74:	mov	r8, r0
   1ca78:	ldr	r0, [sp, #44]	; 0x2c
   1ca7c:	cmp	r0, #0
   1ca80:	beq	16624 <main@@Base+0x8f0>
   1ca84:	ldr	r0, [sl]
   1ca88:	mov	r1, #1
   1ca8c:	bl	2cba8 <flatcc_builder_extend_offset_vector@@Base>
   1ca90:	cmp	r0, #0
   1ca94:	beq	16624 <main@@Base+0x8f0>
   1ca98:	ldr	r1, [sp, #44]	; 0x2c
   1ca9c:	str	r1, [r0]
   1caa0:	sub	r0, r6, r8
   1caa4:	cmp	r0, #2
   1caa8:	blt	1cad4 <main@@Base+0x6da0>
   1caac:	ldrb	r0, [r8]
   1cab0:	cmp	r0, #32
   1cab4:	bls	1cac0 <main@@Base+0x6d8c>
   1cab8:	mov	r2, r8
   1cabc:	b	1cae8 <main@@Base+0x6db4>
   1cac0:	bne	1cad4 <main@@Base+0x6da0>
   1cac4:	mov	r2, r8
   1cac8:	ldrb	r0, [r2, #1]!
   1cacc:	cmp	r0, #32
   1cad0:	bhi	1cae8 <main@@Base+0x6db4>
   1cad4:	mov	r0, sl
   1cad8:	mov	r1, r8
   1cadc:	mov	r2, r6
   1cae0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1cae4:	mov	r2, r0
   1cae8:	cmp	r2, r6
   1caec:	beq	1dc98 <main@@Base+0x7f64>
   1caf0:	ldrb	r0, [r2]
   1caf4:	cmp	r0, #44	; 0x2c
   1caf8:	bne	1dcc4 <main@@Base+0x7f90>
   1cafc:	add	r1, r2, #1
   1cb00:	sub	r0, r6, r1
   1cb04:	cmp	r0, #2
   1cb08:	blt	1cb30 <main@@Base+0x6dfc>
   1cb0c:	ldrb	r0, [r1]
   1cb10:	cmp	r0, #32
   1cb14:	bls	1cb20 <main@@Base+0x6dec>
   1cb18:	mov	r2, r1
   1cb1c:	b	1cb40 <main@@Base+0x6e0c>
   1cb20:	bne	1cb30 <main@@Base+0x6dfc>
   1cb24:	ldrb	r0, [r2, #2]!
   1cb28:	cmp	r0, #32
   1cb2c:	bhi	1cb40 <main@@Base+0x6e0c>
   1cb30:	mov	r0, sl
   1cb34:	mov	r2, r6
   1cb38:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1cb3c:	mov	r2, r0
   1cb40:	cmp	r2, r6
   1cb44:	beq	1dd24 <main@@Base+0x7ff0>
   1cb48:	ldrb	r0, [r2]
   1cb4c:	cmp	r0, #93	; 0x5d
   1cb50:	bne	1ca60 <main@@Base+0x6d2c>
   1cb54:	b	1dcd4 <main@@Base+0x7fa0>
   1cb58:	ldr	r6, [sp, #36]	; 0x24
   1cb5c:	ldr	sl, [sp, #32]
   1cb60:	bne	1cb70 <main@@Base+0x6e3c>
   1cb64:	ldrb	r0, [r8, #2]!
   1cb68:	cmp	r0, #32
   1cb6c:	bhi	1cb80 <main@@Base+0x6e4c>
   1cb70:	mov	r0, sl
   1cb74:	mov	r2, r6
   1cb78:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1cb7c:	mov	r8, r0
   1cb80:	cmp	r8, r6
   1cb84:	beq	1cbe4 <main@@Base+0x6eb0>
   1cb88:	ldrb	r0, [r8]
   1cb8c:	cmp	r0, #93	; 0x5d
   1cb90:	bne	1cbe0 <main@@Base+0x6eac>
   1cb94:	ldr	r6, [sp, #36]	; 0x24
   1cb98:	ldr	sl, [sp, #32]
   1cb9c:	add	r1, r8, #1
   1cba0:	sub	r0, r6, r1
   1cba4:	cmp	r0, #2
   1cba8:	blt	1cbd0 <main@@Base+0x6e9c>
   1cbac:	ldrb	r0, [r1]
   1cbb0:	cmp	r0, #32
   1cbb4:	bhi	1dcbc <main@@Base+0x7f88>
   1cbb8:	ldr	r6, [sp, #36]	; 0x24
   1cbbc:	ldr	sl, [sp, #32]
   1cbc0:	bne	1cbd0 <main@@Base+0x6e9c>
   1cbc4:	ldrb	r0, [r8, #2]!
   1cbc8:	cmp	r0, #32
   1cbcc:	bhi	1c3dc <main@@Base+0x66a8>
   1cbd0:	mov	r0, sl
   1cbd4:	mov	r2, r6
   1cbd8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1cbdc:	b	1c3d8 <main@@Base+0x66a4>
   1cbe0:	mov	r6, r8
   1cbe4:	mov	r0, #0
   1cbe8:	mov	r1, #1
   1cbec:	strb	r0, [sp, #60]	; 0x3c
   1cbf0:	ldr	r0, [sp, #32]
   1cbf4:	ldr	r0, [r0]
   1cbf8:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   1cbfc:	cmp	r0, #0
   1cc00:	beq	1f2b8 <main@@Base+0x9584>
   1cc04:	mov	r8, r6
   1cc08:	ldr	r6, [sp, #36]	; 0x24
   1cc0c:	ldr	sl, [sp, #32]
   1cc10:	mov	r7, r0
   1cc14:	mov	r5, #0
   1cc18:	cmp	r8, r6
   1cc1c:	str	r5, [fp, #-52]	; 0xffffffcc
   1cc20:	str	r5, [fp, #-56]	; 0xffffffc8
   1cc24:	strb	r5, [sp, #60]	; 0x3c
   1cc28:	str	r5, [sp, #48]	; 0x30
   1cc2c:	beq	1cc74 <main@@Base+0x6f40>
   1cc30:	sub	r0, fp, #56	; 0x38
   1cc34:	mov	r1, r8
   1cc38:	mov	r2, r6
   1cc3c:	add	r3, sp, #48	; 0x30
   1cc40:	str	r0, [sp]
   1cc44:	mov	r0, sl
   1cc48:	bl	3314c <flatcc_json_parser_integer@@Base>
   1cc4c:	cmp	r0, r8
   1cc50:	beq	1cc7c <main@@Base+0x6f48>
   1cc54:	mov	r1, r0
   1cc58:	ldr	r0, [sp, #48]	; 0x30
   1cc5c:	cmp	r0, #0
   1cc60:	beq	1cc84 <main@@Base+0x6f50>
   1cc64:	mov	r0, sl
   1cc68:	mov	r2, r6
   1cc6c:	mov	r3, #8
   1cc70:	b	1ccac <main@@Base+0x6f78>
   1cc74:	mov	r1, r6
   1cc78:	b	1ccb4 <main@@Base+0x6f80>
   1cc7c:	mov	r1, r8
   1cc80:	b	1ccb4 <main@@Base+0x6f80>
   1cc84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cc88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1cc8c:	subs	r3, r0, #256	; 0x100
   1cc90:	sbcs	r2, r2, #0
   1cc94:	bcc	1cdcc <main@@Base+0x7098>
   1cc98:	ldr	sl, [sp, #32]
   1cc9c:	ldr	r6, [sp, #36]	; 0x24
   1cca0:	mov	r3, #7
   1cca4:	mov	r0, sl
   1cca8:	mov	r2, r6
   1ccac:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1ccb0:	mov	r1, r0
   1ccb4:	cmp	r8, r1
   1ccb8:	bne	1ccf4 <main@@Base+0x6fc0>
   1ccbc:	movw	r3, #32928	; 0x80a0
   1ccc0:	add	r0, sp, #60	; 0x3c
   1ccc4:	mov	r1, r8
   1ccc8:	mov	r2, r6
   1cccc:	movt	r3, #5
   1ccd0:	str	r0, [sp]
   1ccd4:	mov	r0, sl
   1ccd8:	bl	211e0 <main@@Base+0xb4ac>
   1ccdc:	mov	r1, r0
   1cce0:	cmp	r0, r8
   1cce4:	cmpne	r1, r6
   1cce8:	beq	1f2a0 <main@@Base+0x956c>
   1ccec:	ldrb	r5, [sp, #60]	; 0x3c
   1ccf0:	ldr	sl, [sp, #32]
   1ccf4:	sub	r0, r6, r1
   1ccf8:	strb	r5, [r7]
   1ccfc:	cmp	r0, #2
   1cd00:	blt	1cd2c <main@@Base+0x6ff8>
   1cd04:	ldrb	r0, [r1]
   1cd08:	cmp	r0, #32
   1cd0c:	bls	1cd18 <main@@Base+0x6fe4>
   1cd10:	mov	r8, r1
   1cd14:	b	1cd3c <main@@Base+0x7008>
   1cd18:	bne	1cd2c <main@@Base+0x6ff8>
   1cd1c:	mov	r8, r1
   1cd20:	ldrb	r0, [r8, #1]!
   1cd24:	cmp	r0, #32
   1cd28:	bhi	1cd3c <main@@Base+0x7008>
   1cd2c:	mov	r0, sl
   1cd30:	mov	r2, r6
   1cd34:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1cd38:	mov	r8, r0
   1cd3c:	cmp	r8, r6
   1cd40:	beq	1dc50 <main@@Base+0x7f1c>
   1cd44:	ldrb	r0, [r8]
   1cd48:	cmp	r0, #44	; 0x2c
   1cd4c:	bne	1dc70 <main@@Base+0x7f3c>
   1cd50:	add	r1, r8, #1
   1cd54:	sub	r0, r6, r1
   1cd58:	cmp	r0, #2
   1cd5c:	blt	1cd84 <main@@Base+0x7050>
   1cd60:	ldrb	r0, [r1]
   1cd64:	cmp	r0, #32
   1cd68:	bls	1cd74 <main@@Base+0x7040>
   1cd6c:	mov	r8, r1
   1cd70:	b	1cd94 <main@@Base+0x7060>
   1cd74:	bne	1cd84 <main@@Base+0x7050>
   1cd78:	ldrb	r0, [r8, #2]!
   1cd7c:	cmp	r0, #32
   1cd80:	bhi	1cd94 <main@@Base+0x7060>
   1cd84:	mov	r0, sl
   1cd88:	mov	r2, r6
   1cd8c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1cd90:	mov	r8, r0
   1cd94:	cmp	r8, r6
   1cd98:	beq	1dc88 <main@@Base+0x7f54>
   1cd9c:	ldrb	r0, [r8]
   1cda0:	cmp	r0, #93	; 0x5d
   1cda4:	beq	1dca0 <main@@Base+0x7f6c>
   1cda8:	mov	r0, #0
   1cdac:	mov	r1, #1
   1cdb0:	strb	r0, [sp, #60]	; 0x3c
   1cdb4:	ldr	r0, [sl]
   1cdb8:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   1cdbc:	mov	r7, r0
   1cdc0:	cmp	r0, #0
   1cdc4:	bne	1cc14 <main@@Base+0x6ee0>
   1cdc8:	b	16624 <main@@Base+0x8f0>
   1cdcc:	ldr	r6, [sp, #36]	; 0x24
   1cdd0:	ldr	sl, [sp, #32]
   1cdd4:	mov	r5, r0
   1cdd8:	strb	r0, [sp, #60]	; 0x3c
   1cddc:	b	1ccb4 <main@@Base+0x6f80>
   1cde0:	mov	r8, r6
   1cde4:	b	1aba0 <main@@Base+0x4e6c>
   1cde8:	ldr	r6, [sp, #36]	; 0x24
   1cdec:	ldr	sl, [sp, #32]
   1cdf0:	bne	1ce04 <main@@Base+0x70d0>
   1cdf4:	ldrb	r0, [r2, #2]!
   1cdf8:	mov	r9, r2
   1cdfc:	cmp	r0, #32
   1ce00:	bhi	1e1e4 <main@@Base+0x84b0>
   1ce04:	mov	r0, sl
   1ce08:	mov	r2, r6
   1ce0c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1ce10:	b	1e1e0 <main@@Base+0x84ac>
   1ce14:	cmp	r0, #93	; 0x5d
   1ce18:	bne	1dd00 <main@@Base+0x7fcc>
   1ce1c:	ldr	r6, [sp, #36]	; 0x24
   1ce20:	ldr	sl, [sp, #32]
   1ce24:	add	r1, r2, #1
   1ce28:	sub	r0, r6, r1
   1ce2c:	cmp	r0, #2
   1ce30:	blt	1ee5c <main@@Base+0x9128>
   1ce34:	ldrb	r0, [r1]
   1ce38:	cmp	r0, #32
   1ce3c:	bls	1ee40 <main@@Base+0x910c>
   1ce40:	ldr	r6, [sp, #36]	; 0x24
   1ce44:	ldr	sl, [sp, #32]
   1ce48:	mov	r8, r1
   1ce4c:	b	1aba0 <main@@Base+0x4e6c>
   1ce50:	mov	r0, sl
   1ce54:	mov	r1, r6
   1ce58:	b	1dd10 <main@@Base+0x7fdc>
   1ce5c:	ldr	r6, [sp, #36]	; 0x24
   1ce60:	ldr	sl, [sp, #32]
   1ce64:	bne	1ce74 <main@@Base+0x7140>
   1ce68:	ldrb	r0, [r8, #2]!
   1ce6c:	cmp	r0, #32
   1ce70:	bhi	1ce84 <main@@Base+0x7150>
   1ce74:	mov	r0, sl
   1ce78:	mov	r2, r6
   1ce7c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1ce80:	mov	r8, r0
   1ce84:	cmp	r8, r6
   1ce88:	mov	r2, r6
   1ce8c:	beq	1ced8 <main@@Base+0x71a4>
   1ce90:	ldrb	r0, [r8]
   1ce94:	cmp	r0, #125	; 0x7d
   1ce98:	bne	1ced4 <main@@Base+0x71a0>
   1ce9c:	ldr	r6, [sp, #36]	; 0x24
   1cea0:	ldr	sl, [sp, #32]
   1cea4:	add	r1, r8, #1
   1cea8:	sub	r0, r6, r1
   1ceac:	cmp	r0, #2
   1ceb0:	blt	1f02c <main@@Base+0x92f8>
   1ceb4:	ldrb	r0, [r1]
   1ceb8:	cmp	r0, #32
   1cebc:	bhi	1dc04 <main@@Base+0x7ed0>
   1cec0:	ldr	r6, [sp, #36]	; 0x24
   1cec4:	ldr	sl, [sp, #32]
   1cec8:	bne	1f02c <main@@Base+0x92f8>
   1cecc:	ldrb	r0, [r8, #2]!
   1ced0:	b	1f024 <main@@Base+0x92f0>
   1ced4:	mov	r2, r8
   1ced8:	ldr	r6, [sp, #36]	; 0x24
   1cedc:	ldr	sl, [sp, #32]
   1cee0:	cmp	r2, r6
   1cee4:	mov	r8, r6
   1cee8:	beq	1cf18 <main@@Base+0x71e4>
   1ceec:	ldrb	r0, [r2]
   1cef0:	cmp	r0, #34	; 0x22
   1cef4:	bne	1cf00 <main@@Base+0x71cc>
   1cef8:	add	r8, r2, #1
   1cefc:	b	1cf18 <main@@Base+0x71e4>
   1cf00:	mov	r1, r2
   1cf04:	mov	r0, sl
   1cf08:	mov	r2, r6
   1cf0c:	mov	r3, #5
   1cf10:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1cf14:	mov	r8, r0
   1cf18:	sub	lr, r6, r8
   1cf1c:	mov	r0, #8
   1cf20:	cmp	lr, #8
   1cf24:	movcc	r0, lr
   1cf28:	sub	r7, r0, #1
   1cf2c:	cmp	r7, #7
   1cf30:	bhi	1d0a8 <main@@Base+0x7374>
   1cf34:	add	r4, pc, #32
   1cf38:	mov	r1, #0
   1cf3c:	mov	ip, #0
   1cf40:	mov	r9, #0
   1cf44:	mov	r6, #0
   1cf48:	mov	r3, #0
   1cf4c:	mov	r5, #0
   1cf50:	mov	r2, #0
   1cf54:	mov	r0, #0
   1cf58:	ldr	pc, [r4, r7, lsl #2]
   1cf5c:	andeq	ip, r1, r0, asr #31
   1cf60:			; <UNDEFINED> instruction: 0x0001cfb8
   1cf64:			; <UNDEFINED> instruction: 0x0001cfb0
   1cf68:	andeq	ip, r1, r8, lsr #31
   1cf6c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1cf70:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1cf74:	andeq	ip, r1, r0, lsl #31
   1cf78:	andeq	ip, r1, ip, ror pc
   1cf7c:	ldrb	ip, [r8, #7]
   1cf80:	ldrb	r0, [r8, #6]
   1cf84:	mov	r9, r1
   1cf88:	orr	r0, ip, r0, lsl #8
   1cf8c:	mov	r1, r0
   1cf90:	ldrb	r0, [r8, #5]
   1cf94:	mov	r6, r9
   1cf98:	orr	r1, r1, r0, lsl #16
   1cf9c:	ldrb	r0, [r8, #4]
   1cfa0:	mov	r3, r6
   1cfa4:	orr	r1, r1, r0, lsl #24
   1cfa8:	ldrb	r0, [r8, #3]
   1cfac:	orr	r5, r0, r3
   1cfb0:	ldrb	r0, [r8, #2]
   1cfb4:	orr	r2, r5, r0, lsl #8
   1cfb8:	ldrb	r0, [r8, #1]
   1cfbc:	orr	r0, r2, r0, lsl #16
   1cfc0:	ldrb	r2, [r8]
   1cfc4:	orr	r2, r0, r2, lsl #24
   1cfc8:	movw	r0, #0
   1cfcc:	movt	r0, #25956	; 0x6564
   1cfd0:	subs	r0, r1, r0
   1cfd4:	movw	r0, #29556	; 0x7374
   1cfd8:	movt	r0, #28261	; 0x6e65
   1cfdc:	sbcs	r0, r2, r0
   1cfe0:	bcs	1d03c <main@@Base+0x7308>
   1cfe4:	movw	r0, #29793	; 0x7461
   1cfe8:	ldr	r6, [sp, #36]	; 0x24
   1cfec:	movt	r0, #25697	; 0x6461
   1cff0:	teq	r2, r0
   1cff4:	bne	1d0a8 <main@@Base+0x7374>
   1cff8:	cmp	lr, #5
   1cffc:	mov	r1, r8
   1d000:	blt	1d2b4 <main@@Base+0x7580>
   1d004:	ldrb	r0, [r8, #4]
   1d008:	mov	r1, r8
   1d00c:	cmp	r0, #34	; 0x22
   1d010:	bne	1d2b4 <main@@Base+0x7580>
   1d014:	ldr	r0, [sp, #36]	; 0x24
   1d018:	add	r2, r8, #5
   1d01c:	sub	r0, r0, r2
   1d020:	cmp	r0, #2
   1d024:	blt	1d130 <main@@Base+0x73fc>
   1d028:	ldrb	r0, [r2]
   1d02c:	cmp	r0, #32
   1d030:	bls	1d11c <main@@Base+0x73e8>
   1d034:	mov	r1, r2
   1d038:	b	1d144 <main@@Base+0x7410>
   1d03c:	movw	r0, #29292	; 0x726c
   1d040:	lsr	r3, r1, #8
   1d044:	movw	r7, #29793	; 0x7461
   1d048:	movt	r0, #117	; 0x75
   1d04c:	orr	r3, r3, r2, lsl #24
   1d050:	movt	r7, #25697	; 0x6461
   1d054:	eor	r0, r0, r2, lsr #8
   1d058:	eor	r3, r3, r7
   1d05c:	orrs	r0, r3, r0
   1d060:	bne	1d0b4 <main@@Base+0x7380>
   1d064:	cmp	lr, #8
   1d068:	mov	r1, r8
   1d06c:	blt	1d314 <main@@Base+0x75e0>
   1d070:	ldrb	r0, [r8, #7]
   1d074:	mov	r1, r8
   1d078:	cmp	r0, #34	; 0x22
   1d07c:	bne	1d314 <main@@Base+0x75e0>
   1d080:	ldr	r0, [sp, #36]	; 0x24
   1d084:	add	r2, r8, #8
   1d088:	sub	r0, r0, r2
   1d08c:	cmp	r0, #2
   1d090:	blt	1d1ac <main@@Base+0x7478>
   1d094:	ldrb	r0, [r2]
   1d098:	cmp	r0, #32
   1d09c:	bls	1d198 <main@@Base+0x7464>
   1d0a0:	mov	r1, r2
   1d0a4:	b	1d1c0 <main@@Base+0x748c>
   1d0a8:	mov	r0, sl
   1d0ac:	mov	r1, r8
   1d0b0:	b	1d3e0 <main@@Base+0x76ac>
   1d0b4:	movw	r0, #29556	; 0x7374
   1d0b8:	bfc	r1, #0, #16
   1d0bc:	movt	r0, #28261	; 0x6e65
   1d0c0:	eor	r0, r2, r0
   1d0c4:	movw	r2, #0
   1d0c8:	movt	r2, #25956	; 0x6564
   1d0cc:	eor	r1, r1, r2
   1d0d0:	orrs	r0, r1, r0
   1d0d4:	bne	1d3d0 <main@@Base+0x769c>
   1d0d8:	cmp	lr, #7
   1d0dc:	mov	r1, r8
   1d0e0:	blt	1d374 <main@@Base+0x7640>
   1d0e4:	ldrb	r0, [r8, #6]
   1d0e8:	mov	r1, r8
   1d0ec:	cmp	r0, #34	; 0x22
   1d0f0:	bne	1d374 <main@@Base+0x7640>
   1d0f4:	ldr	r0, [sp, #36]	; 0x24
   1d0f8:	add	r2, r8, #7
   1d0fc:	sub	r0, r0, r2
   1d100:	cmp	r0, #2
   1d104:	blt	1d228 <main@@Base+0x74f4>
   1d108:	ldrb	r0, [r2]
   1d10c:	cmp	r0, #32
   1d110:	bls	1d214 <main@@Base+0x74e0>
   1d114:	mov	r1, r2
   1d118:	b	1d23c <main@@Base+0x7508>
   1d11c:	bne	1d130 <main@@Base+0x73fc>
   1d120:	mov	r1, r8
   1d124:	ldrb	r0, [r1, #6]!
   1d128:	cmp	r0, #32
   1d12c:	bhi	1d144 <main@@Base+0x7410>
   1d130:	mov	r1, r2
   1d134:	ldr	r0, [sp, #32]
   1d138:	ldr	r2, [sp, #36]	; 0x24
   1d13c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d140:	mov	r1, r0
   1d144:	ldr	r0, [sp, #36]	; 0x24
   1d148:	cmp	r1, r0
   1d14c:	beq	1d184 <main@@Base+0x7450>
   1d150:	ldrb	r0, [r1]
   1d154:	cmp	r0, #58	; 0x3a
   1d158:	bne	1d184 <main@@Base+0x7450>
   1d15c:	ldr	r0, [sp, #36]	; 0x24
   1d160:	add	r2, r1, #1
   1d164:	sub	r0, r0, r2
   1d168:	cmp	r0, #2
   1d16c:	blt	1d2a0 <main@@Base+0x756c>
   1d170:	ldrb	r0, [r2]
   1d174:	cmp	r0, #32
   1d178:	bls	1d290 <main@@Base+0x755c>
   1d17c:	mov	r1, r2
   1d180:	b	1d2b4 <main@@Base+0x7580>
   1d184:	ldr	r0, [sp, #32]
   1d188:	ldr	r2, [sp, #36]	; 0x24
   1d18c:	mov	r3, #4
   1d190:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1d194:	b	1d2b0 <main@@Base+0x757c>
   1d198:	bne	1d1ac <main@@Base+0x7478>
   1d19c:	mov	r1, r8
   1d1a0:	ldrb	r0, [r1, #9]!
   1d1a4:	cmp	r0, #32
   1d1a8:	bhi	1d1c0 <main@@Base+0x748c>
   1d1ac:	mov	r1, r2
   1d1b0:	ldr	r0, [sp, #32]
   1d1b4:	ldr	r2, [sp, #36]	; 0x24
   1d1b8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d1bc:	mov	r1, r0
   1d1c0:	ldr	r0, [sp, #36]	; 0x24
   1d1c4:	cmp	r1, r0
   1d1c8:	beq	1d200 <main@@Base+0x74cc>
   1d1cc:	ldrb	r0, [r1]
   1d1d0:	cmp	r0, #58	; 0x3a
   1d1d4:	bne	1d200 <main@@Base+0x74cc>
   1d1d8:	ldr	r0, [sp, #36]	; 0x24
   1d1dc:	add	r2, r1, #1
   1d1e0:	sub	r0, r0, r2
   1d1e4:	cmp	r0, #2
   1d1e8:	blt	1d300 <main@@Base+0x75cc>
   1d1ec:	ldrb	r0, [r2]
   1d1f0:	cmp	r0, #32
   1d1f4:	bls	1d2f0 <main@@Base+0x75bc>
   1d1f8:	mov	r1, r2
   1d1fc:	b	1d314 <main@@Base+0x75e0>
   1d200:	ldr	r0, [sp, #32]
   1d204:	ldr	r2, [sp, #36]	; 0x24
   1d208:	mov	r3, #4
   1d20c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1d210:	b	1d310 <main@@Base+0x75dc>
   1d214:	bne	1d228 <main@@Base+0x74f4>
   1d218:	mov	r1, r8
   1d21c:	ldrb	r0, [r1, #8]!
   1d220:	cmp	r0, #32
   1d224:	bhi	1d23c <main@@Base+0x7508>
   1d228:	mov	r1, r2
   1d22c:	ldr	r0, [sp, #32]
   1d230:	ldr	r2, [sp, #36]	; 0x24
   1d234:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d238:	mov	r1, r0
   1d23c:	ldr	r0, [sp, #36]	; 0x24
   1d240:	cmp	r1, r0
   1d244:	beq	1d27c <main@@Base+0x7548>
   1d248:	ldrb	r0, [r1]
   1d24c:	cmp	r0, #58	; 0x3a
   1d250:	bne	1d27c <main@@Base+0x7548>
   1d254:	ldr	r0, [sp, #36]	; 0x24
   1d258:	add	r2, r1, #1
   1d25c:	sub	r0, r0, r2
   1d260:	cmp	r0, #2
   1d264:	blt	1d360 <main@@Base+0x762c>
   1d268:	ldrb	r0, [r2]
   1d26c:	cmp	r0, #32
   1d270:	bls	1d350 <main@@Base+0x761c>
   1d274:	mov	r1, r2
   1d278:	b	1d374 <main@@Base+0x7640>
   1d27c:	ldr	r0, [sp, #32]
   1d280:	ldr	r2, [sp, #36]	; 0x24
   1d284:	mov	r3, #4
   1d288:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1d28c:	b	1d370 <main@@Base+0x763c>
   1d290:	bne	1d2a0 <main@@Base+0x756c>
   1d294:	ldrb	r0, [r1, #2]!
   1d298:	cmp	r0, #32
   1d29c:	bhi	1d2b4 <main@@Base+0x7580>
   1d2a0:	mov	r1, r2
   1d2a4:	ldr	r0, [sp, #32]
   1d2a8:	ldr	r2, [sp, #36]	; 0x24
   1d2ac:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d2b0:	mov	r1, r0
   1d2b4:	cmp	r8, r1
   1d2b8:	beq	1d3d0 <main@@Base+0x769c>
   1d2bc:	mov	r0, #0
   1d2c0:	ldr	r2, [sp, #36]	; 0x24
   1d2c4:	sub	r3, fp, #56	; 0x38
   1d2c8:	str	r0, [sp]
   1d2cc:	ldr	r0, [sp, #32]
   1d2d0:	bl	3329c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1d2d4:	mov	r8, r0
   1d2d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d2dc:	cmp	r0, #0
   1d2e0:	beq	1e5b4 <main@@Base+0x8880>
   1d2e4:	ldr	r0, [sp, #32]
   1d2e8:	mov	r1, #0
   1d2ec:	b	1d3ac <main@@Base+0x7678>
   1d2f0:	bne	1d300 <main@@Base+0x75cc>
   1d2f4:	ldrb	r0, [r1, #2]!
   1d2f8:	cmp	r0, #32
   1d2fc:	bhi	1d314 <main@@Base+0x75e0>
   1d300:	mov	r1, r2
   1d304:	ldr	r0, [sp, #32]
   1d308:	ldr	r2, [sp, #36]	; 0x24
   1d30c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d310:	mov	r1, r0
   1d314:	cmp	r8, r1
   1d318:	beq	1d3d0 <main@@Base+0x769c>
   1d31c:	mov	r0, #1
   1d320:	ldr	r2, [sp, #36]	; 0x24
   1d324:	sub	r3, fp, #56	; 0x38
   1d328:	str	r0, [sp]
   1d32c:	ldr	r0, [sp, #32]
   1d330:	bl	3329c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1d334:	mov	r8, r0
   1d338:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d33c:	cmp	r0, #0
   1d340:	beq	1e5b4 <main@@Base+0x8880>
   1d344:	ldr	r0, [sp, #32]
   1d348:	mov	r1, #1
   1d34c:	b	1d3ac <main@@Base+0x7678>
   1d350:	bne	1d360 <main@@Base+0x762c>
   1d354:	ldrb	r0, [r1, #2]!
   1d358:	cmp	r0, #32
   1d35c:	bhi	1d374 <main@@Base+0x7640>
   1d360:	mov	r1, r2
   1d364:	ldr	r0, [sp, #32]
   1d368:	ldr	r2, [sp, #36]	; 0x24
   1d36c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d370:	mov	r1, r0
   1d374:	cmp	r8, r1
   1d378:	beq	1d3d0 <main@@Base+0x769c>
   1d37c:	mov	r0, #0
   1d380:	ldr	r2, [sp, #36]	; 0x24
   1d384:	sub	r3, fp, #56	; 0x38
   1d388:	str	r0, [sp]
   1d38c:	ldr	r0, [sp, #32]
   1d390:	bl	3329c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1d394:	mov	r8, r0
   1d398:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d39c:	cmp	r0, #0
   1d3a0:	beq	1e5b4 <main@@Base+0x8880>
   1d3a4:	ldr	r0, [sp, #32]
   1d3a8:	mov	r1, #2
   1d3ac:	ldr	r0, [r0]
   1d3b0:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   1d3b4:	cmp	r0, #0
   1d3b8:	beq	1e5b4 <main@@Base+0x8880>
   1d3bc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d3c0:	str	r1, [r0]
   1d3c4:	ldr	r6, [sp, #36]	; 0x24
   1d3c8:	ldr	sl, [sp, #32]
   1d3cc:	b	1d3ec <main@@Base+0x76b8>
   1d3d0:	ldr	sl, [sp, #32]
   1d3d4:	ldr	r6, [sp, #36]	; 0x24
   1d3d8:	mov	r1, r8
   1d3dc:	mov	r0, sl
   1d3e0:	mov	r2, r6
   1d3e4:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   1d3e8:	mov	r8, r0
   1d3ec:	sub	r0, r6, r8
   1d3f0:	cmp	r0, #2
   1d3f4:	blt	1d420 <main@@Base+0x76ec>
   1d3f8:	ldrb	r0, [r8]
   1d3fc:	cmp	r0, #32
   1d400:	bls	1d40c <main@@Base+0x76d8>
   1d404:	mov	r2, r8
   1d408:	b	1d434 <main@@Base+0x7700>
   1d40c:	bne	1d420 <main@@Base+0x76ec>
   1d410:	mov	r2, r8
   1d414:	ldrb	r0, [r2, #1]!
   1d418:	cmp	r0, #32
   1d41c:	bhi	1d434 <main@@Base+0x7700>
   1d420:	mov	r0, sl
   1d424:	mov	r1, r8
   1d428:	mov	r2, r6
   1d42c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d430:	mov	r2, r0
   1d434:	cmp	r2, r6
   1d438:	beq	1dbc8 <main@@Base+0x7e94>
   1d43c:	ldrb	r0, [r2]
   1d440:	cmp	r0, #44	; 0x2c
   1d444:	bne	1dbd8 <main@@Base+0x7ea4>
   1d448:	add	r1, r2, #1
   1d44c:	sub	r0, r6, r1
   1d450:	cmp	r0, #2
   1d454:	blt	1d47c <main@@Base+0x7748>
   1d458:	ldrb	r0, [r1]
   1d45c:	cmp	r0, #32
   1d460:	bls	1d46c <main@@Base+0x7738>
   1d464:	mov	r2, r1
   1d468:	b	1d48c <main@@Base+0x7758>
   1d46c:	bne	1d47c <main@@Base+0x7748>
   1d470:	ldrb	r0, [r2, #2]!
   1d474:	cmp	r0, #32
   1d478:	bhi	1d48c <main@@Base+0x7758>
   1d47c:	mov	r0, sl
   1d480:	mov	r2, r6
   1d484:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d488:	mov	r2, r0
   1d48c:	cmp	r2, r6
   1d490:	beq	1dc58 <main@@Base+0x7f24>
   1d494:	ldrb	r0, [r2]
   1d498:	cmp	r0, #125	; 0x7d
   1d49c:	bne	1cee0 <main@@Base+0x71ac>
   1d4a0:	b	1dbe8 <main@@Base+0x7eb4>
   1d4a4:	ldr	r6, [sp, #36]	; 0x24
   1d4a8:	ldr	sl, [sp, #32]
   1d4ac:	bne	1d4bc <main@@Base+0x7788>
   1d4b0:	ldrb	r0, [r9, #2]!
   1d4b4:	cmp	r0, #32
   1d4b8:	bhi	1d4cc <main@@Base+0x7798>
   1d4bc:	mov	r0, sl
   1d4c0:	mov	r2, r6
   1d4c4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d4c8:	mov	r9, r0
   1d4cc:	cmp	r9, r6
   1d4d0:	beq	1d530 <main@@Base+0x77fc>
   1d4d4:	ldrb	r0, [r9]
   1d4d8:	cmp	r0, #93	; 0x5d
   1d4dc:	bne	1d52c <main@@Base+0x77f8>
   1d4e0:	ldr	r6, [sp, #36]	; 0x24
   1d4e4:	ldr	sl, [sp, #32]
   1d4e8:	add	r1, r9, #1
   1d4ec:	sub	r0, r6, r1
   1d4f0:	cmp	r0, #2
   1d4f4:	blt	1d51c <main@@Base+0x77e8>
   1d4f8:	ldrb	r0, [r1]
   1d4fc:	cmp	r0, #32
   1d500:	bhi	1dfd8 <main@@Base+0x82a4>
   1d504:	ldr	r6, [sp, #36]	; 0x24
   1d508:	ldr	sl, [sp, #32]
   1d50c:	bne	1d51c <main@@Base+0x77e8>
   1d510:	ldrb	r0, [r9, #2]!
   1d514:	cmp	r0, #32
   1d518:	bhi	1c4d8 <main@@Base+0x67a4>
   1d51c:	mov	r0, sl
   1d520:	mov	r2, r6
   1d524:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d528:	b	1c4d4 <main@@Base+0x67a0>
   1d52c:	mov	r6, r9
   1d530:	mov	r0, #0
   1d534:	mov	r1, #1
   1d538:	str	r0, [sp, #52]	; 0x34
   1d53c:	str	r0, [sp, #48]	; 0x30
   1d540:	ldr	r0, [sp, #32]
   1d544:	ldr	r0, [r0]
   1d548:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   1d54c:	cmp	r0, #0
   1d550:	beq	1f2d8 <main@@Base+0x95a4>
   1d554:	mov	r9, r6
   1d558:	ldr	r6, [sp, #36]	; 0x24
   1d55c:	ldr	sl, [sp, #32]
   1d560:	mov	r4, r0
   1d564:	mov	r0, #0
   1d568:	cmp	r9, r6
   1d56c:	str	r0, [fp, #-52]	; 0xffffffcc
   1d570:	str	r0, [fp, #-56]	; 0xffffffc8
   1d574:	str	r0, [sp, #52]	; 0x34
   1d578:	str	r0, [sp, #48]	; 0x30
   1d57c:	str	r0, [sp, #60]	; 0x3c
   1d580:	beq	1d5e0 <main@@Base+0x78ac>
   1d584:	sub	r0, fp, #56	; 0x38
   1d588:	mov	r1, r9
   1d58c:	mov	r2, r6
   1d590:	add	r3, sp, #60	; 0x3c
   1d594:	str	r0, [sp]
   1d598:	mov	r0, sl
   1d59c:	bl	3314c <flatcc_json_parser_integer@@Base>
   1d5a0:	cmp	r0, r9
   1d5a4:	beq	1d5ec <main@@Base+0x78b8>
   1d5a8:	ldr	r2, [sp, #60]	; 0x3c
   1d5ac:	mov	r1, r0
   1d5b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d5b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d5b8:	cmp	r2, #0
   1d5bc:	beq	1d5fc <main@@Base+0x78c8>
   1d5c0:	rsbs	r2, r0, #0
   1d5c4:	mov	r2, #-2147483648	; 0x80000000
   1d5c8:	sbcs	r2, r2, r3
   1d5cc:	bcs	1d62c <main@@Base+0x78f8>
   1d5d0:	ldr	sl, [sp, #32]
   1d5d4:	ldr	r6, [sp, #36]	; 0x24
   1d5d8:	mov	r3, #8
   1d5dc:	b	1d610 <main@@Base+0x78dc>
   1d5e0:	mov	r3, #0
   1d5e4:	mov	r1, r6
   1d5e8:	b	1d644 <main@@Base+0x7910>
   1d5ec:	mov	r0, #0
   1d5f0:	mov	r3, #0
   1d5f4:	mov	r1, r9
   1d5f8:	b	1d644 <main@@Base+0x7910>
   1d5fc:	cmn	r3, #1
   1d600:	bgt	1d634 <main@@Base+0x7900>
   1d604:	ldr	sl, [sp, #32]
   1d608:	ldr	r6, [sp, #36]	; 0x24
   1d60c:	mov	r3, #7
   1d610:	mov	r0, sl
   1d614:	mov	r2, r6
   1d618:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1d61c:	mov	r1, r0
   1d620:	mov	r0, #0
   1d624:	mov	r3, #0
   1d628:	b	1d644 <main@@Base+0x7910>
   1d62c:	rsbs	r0, r0, #0
   1d630:	rsc	r3, r3, #0
   1d634:	ldr	r6, [sp, #36]	; 0x24
   1d638:	ldr	sl, [sp, #32]
   1d63c:	str	r0, [sp, #48]	; 0x30
   1d640:	str	r3, [sp, #52]	; 0x34
   1d644:	cmp	r9, r1
   1d648:	bne	1d688 <main@@Base+0x7954>
   1d64c:	movw	r3, #33148	; 0x817c
   1d650:	add	r0, sp, #48	; 0x30
   1d654:	mov	r1, r9
   1d658:	mov	r2, r6
   1d65c:	movt	r3, #5
   1d660:	str	r0, [sp]
   1d664:	mov	r0, sl
   1d668:	bl	233f0 <main@@Base+0xd6bc>
   1d66c:	mov	r1, r0
   1d670:	cmp	r0, r9
   1d674:	cmpne	r1, r6
   1d678:	beq	1f2ac <main@@Base+0x9578>
   1d67c:	ldr	r0, [sp, #48]	; 0x30
   1d680:	ldr	r3, [sp, #52]	; 0x34
   1d684:	ldr	sl, [sp, #32]
   1d688:	stm	r4, {r0, r3}
   1d68c:	sub	r0, r6, r1
   1d690:	cmp	r0, #2
   1d694:	blt	1d6c0 <main@@Base+0x798c>
   1d698:	ldrb	r0, [r1]
   1d69c:	cmp	r0, #32
   1d6a0:	bls	1d6ac <main@@Base+0x7978>
   1d6a4:	mov	r9, r1
   1d6a8:	b	1d6d0 <main@@Base+0x799c>
   1d6ac:	bne	1d6c0 <main@@Base+0x798c>
   1d6b0:	mov	r9, r1
   1d6b4:	ldrb	r0, [r9, #1]!
   1d6b8:	cmp	r0, #32
   1d6bc:	bhi	1d6d0 <main@@Base+0x799c>
   1d6c0:	mov	r0, sl
   1d6c4:	mov	r2, r6
   1d6c8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d6cc:	mov	r9, r0
   1d6d0:	cmp	r9, r6
   1d6d4:	beq	1dd1c <main@@Base+0x7fe8>
   1d6d8:	ldrb	r0, [r9]
   1d6dc:	cmp	r0, #44	; 0x2c
   1d6e0:	bne	1dd30 <main@@Base+0x7ffc>
   1d6e4:	add	r1, r9, #1
   1d6e8:	sub	r0, r6, r1
   1d6ec:	cmp	r0, #2
   1d6f0:	blt	1d718 <main@@Base+0x79e4>
   1d6f4:	ldrb	r0, [r1]
   1d6f8:	cmp	r0, #32
   1d6fc:	bls	1d708 <main@@Base+0x79d4>
   1d700:	mov	r9, r1
   1d704:	b	1d728 <main@@Base+0x79f4>
   1d708:	bne	1d718 <main@@Base+0x79e4>
   1d70c:	ldrb	r0, [r9, #2]!
   1d710:	cmp	r0, #32
   1d714:	bhi	1d728 <main@@Base+0x79f4>
   1d718:	mov	r0, sl
   1d71c:	mov	r2, r6
   1d720:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d724:	mov	r9, r0
   1d728:	cmp	r9, r6
   1d72c:	beq	1df70 <main@@Base+0x823c>
   1d730:	ldrb	r0, [r9]
   1d734:	cmp	r0, #93	; 0x5d
   1d738:	beq	1dfbc <main@@Base+0x8288>
   1d73c:	mov	r0, #0
   1d740:	mov	r1, #1
   1d744:	str	r0, [sp, #52]	; 0x34
   1d748:	str	r0, [sp, #48]	; 0x30
   1d74c:	ldr	r0, [sl]
   1d750:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   1d754:	mov	r4, r0
   1d758:	cmp	r0, #0
   1d75c:	bne	1d564 <main@@Base+0x7830>
   1d760:	b	1f2e4 <main@@Base+0x95b0>
   1d764:	ldr	r6, [sp, #36]	; 0x24
   1d768:	ldr	sl, [sp, #32]
   1d76c:	bne	1d77c <main@@Base+0x7a48>
   1d770:	ldrb	r0, [r9, #2]!
   1d774:	cmp	r0, #32
   1d778:	bhi	1d78c <main@@Base+0x7a58>
   1d77c:	mov	r0, sl
   1d780:	mov	r2, r6
   1d784:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d788:	mov	r9, r0
   1d78c:	cmp	r7, r9
   1d790:	beq	1e1d0 <main@@Base+0x849c>
   1d794:	ldr	r0, [sl]
   1d798:	mov	r1, #8
   1d79c:	mov	r2, #8
   1d7a0:	mvn	r3, #-536870912	; 0xe0000000
   1d7a4:	bl	2d148 <flatcc_builder_start_vector@@Base>
   1d7a8:	cmp	r0, #0
   1d7ac:	bne	1f2e0 <main@@Base+0x95ac>
   1d7b0:	cmp	r9, r6
   1d7b4:	beq	1d7e8 <main@@Base+0x7ab4>
   1d7b8:	ldrb	r0, [r9]
   1d7bc:	cmp	r0, #91	; 0x5b
   1d7c0:	bne	1d7e8 <main@@Base+0x7ab4>
   1d7c4:	add	r1, r9, #1
   1d7c8:	sub	r0, r6, r1
   1d7cc:	cmp	r0, #2
   1d7d0:	blt	1dd58 <main@@Base+0x8024>
   1d7d4:	ldrb	r0, [r1]
   1d7d8:	cmp	r0, #32
   1d7dc:	bls	1dd48 <main@@Base+0x8014>
   1d7e0:	mov	r9, r1
   1d7e4:	b	1dd68 <main@@Base+0x8034>
   1d7e8:	ldr	sl, [sp, #32]
   1d7ec:	mov	r1, r9
   1d7f0:	mov	r2, r6
   1d7f4:	mov	r3, #22
   1d7f8:	mov	r0, sl
   1d7fc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1d800:	mov	r9, r0
   1d804:	ldr	r0, [sl]
   1d808:	bl	2e174 <flatcc_builder_end_vector@@Base>
   1d80c:	cmp	r0, #0
   1d810:	str	r0, [sp, #44]	; 0x2c
   1d814:	beq	1f294 <main@@Base+0x9560>
   1d818:	ldr	r0, [sl]
   1d81c:	mov	r1, #33	; 0x21
   1d820:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   1d824:	cmp	r0, #0
   1d828:	beq	1f294 <main@@Base+0x9560>
   1d82c:	ldr	r1, [sp, #44]	; 0x2c
   1d830:	str	r1, [r0]
   1d834:	b	1e350 <main@@Base+0x861c>
   1d838:	mov	r6, r0
   1d83c:	ldr	sl, [sp, #32]
   1d840:	str	r6, [sp, #60]	; 0x3c
   1d844:	cmp	r8, r9
   1d848:	bne	1d888 <main@@Base+0x7b54>
   1d84c:	ldr	r2, [sp, #36]	; 0x24
   1d850:	movw	r3, #33040	; 0x8110
   1d854:	add	r0, sp, #60	; 0x3c
   1d858:	mov	r1, r8
   1d85c:	movt	r3, #5
   1d860:	str	r0, [sp]
   1d864:	mov	r0, sl
   1d868:	bl	23214 <main@@Base+0xd4e0>
   1d86c:	cmp	r0, r8
   1d870:	mov	r9, r0
   1d874:	ldrne	r1, [sp, #36]	; 0x24
   1d878:	cmpne	r9, r1
   1d87c:	beq	1f2f0 <main@@Base+0x95bc>
   1d880:	ldr	r6, [sp, #60]	; 0x3c
   1d884:	ldr	sl, [sp, #32]
   1d888:	cmp	r6, #0
   1d88c:	bne	1d89c <main@@Base+0x7b68>
   1d890:	ldrb	r0, [sl, #8]
   1d894:	tst	r0, #2
   1d898:	beq	1e350 <main@@Base+0x861c>
   1d89c:	ldr	r0, [sl]
   1d8a0:	mov	r1, #20
   1d8a4:	mov	r2, #4
   1d8a8:	mov	r3, #4
   1d8ac:	bl	2e760 <flatcc_builder_table_add@@Base>
   1d8b0:	cmp	r0, #0
   1d8b4:	beq	1f2f0 <main@@Base+0x95bc>
   1d8b8:	str	r6, [r0]
   1d8bc:	b	1e350 <main@@Base+0x861c>
   1d8c0:	ldr	r6, [sp, #36]	; 0x24
   1d8c4:	ldr	sl, [sp, #32]
   1d8c8:	bne	1d8d8 <main@@Base+0x7ba4>
   1d8cc:	ldrb	r0, [r8, #2]!
   1d8d0:	cmp	r0, #32
   1d8d4:	bhi	1d8e8 <main@@Base+0x7bb4>
   1d8d8:	mov	r0, sl
   1d8dc:	mov	r2, r6
   1d8e0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d8e4:	mov	r8, r0
   1d8e8:	cmp	r7, r8
   1d8ec:	beq	1e1d0 <main@@Base+0x849c>
   1d8f0:	mov	r2, r6
   1d8f4:	mov	r6, #0
   1d8f8:	cmp	r8, r2
   1d8fc:	str	r6, [fp, #-52]	; 0xffffffcc
   1d900:	str	r6, [fp, #-56]	; 0xffffffc8
   1d904:	str	r6, [sp, #52]	; 0x34
   1d908:	str	r6, [sp, #48]	; 0x30
   1d90c:	str	r6, [sp, #60]	; 0x3c
   1d910:	beq	1d96c <main@@Base+0x7c38>
   1d914:	sub	r0, fp, #56	; 0x38
   1d918:	mov	r1, r8
   1d91c:	add	r3, sp, #60	; 0x3c
   1d920:	str	r0, [sp]
   1d924:	mov	r0, sl
   1d928:	bl	3314c <flatcc_json_parser_integer@@Base>
   1d92c:	cmp	r0, r8
   1d930:	beq	1d978 <main@@Base+0x7c44>
   1d934:	mov	r9, r0
   1d938:	ldr	r0, [sp, #60]	; 0x3c
   1d93c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1d940:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1d944:	cmp	r0, #0
   1d948:	beq	1d988 <main@@Base+0x7c54>
   1d94c:	subs	r0, r6, #1
   1d950:	sbcs	r0, r7, #-2147483648	; 0x80000000
   1d954:	bcc	1db34 <main@@Base+0x7e00>
   1d958:	ldr	r0, [sp, #32]
   1d95c:	ldr	r2, [sp, #36]	; 0x24
   1d960:	mov	r1, r9
   1d964:	mov	r3, #8
   1d968:	b	1d9a0 <main@@Base+0x7c6c>
   1d96c:	mov	r7, #0
   1d970:	mov	r9, r2
   1d974:	b	1db44 <main@@Base+0x7e10>
   1d978:	mov	r6, #0
   1d97c:	mov	r7, #0
   1d980:	mov	r9, r8
   1d984:	b	1db44 <main@@Base+0x7e10>
   1d988:	cmn	r7, #1
   1d98c:	bgt	1db3c <main@@Base+0x7e08>
   1d990:	ldr	r0, [sp, #32]
   1d994:	ldr	r2, [sp, #36]	; 0x24
   1d998:	mov	r1, r9
   1d99c:	mov	r3, #7
   1d9a0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1d9a4:	mov	r9, r0
   1d9a8:	mov	r6, #0
   1d9ac:	mov	r7, #0
   1d9b0:	b	1db44 <main@@Base+0x7e10>
   1d9b4:	ldr	r6, [sp, #36]	; 0x24
   1d9b8:	bne	1d9c8 <main@@Base+0x7c94>
   1d9bc:	ldrb	r0, [r8, #2]!
   1d9c0:	cmp	r0, #32
   1d9c4:	bhi	1d9d8 <main@@Base+0x7ca4>
   1d9c8:	ldr	r0, [sp, #32]
   1d9cc:	mov	r2, r6
   1d9d0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1d9d4:	mov	r8, r0
   1d9d8:	cmp	r8, r6
   1d9dc:	mov	r3, r6
   1d9e0:	beq	1da2c <main@@Base+0x7cf8>
   1d9e4:	ldrb	r0, [r8]
   1d9e8:	cmp	r0, #125	; 0x7d
   1d9ec:	bne	1da28 <main@@Base+0x7cf4>
   1d9f0:	ldr	r6, [sp, #36]	; 0x24
   1d9f4:	ldr	sl, [sp, #32]
   1d9f8:	add	r1, r8, #1
   1d9fc:	sub	r0, r6, r1
   1da00:	cmp	r0, #2
   1da04:	blt	1f168 <main@@Base+0x9434>
   1da08:	ldrb	r0, [r1]
   1da0c:	cmp	r0, #32
   1da10:	bhi	1dfac <main@@Base+0x8278>
   1da14:	ldr	r6, [sp, #36]	; 0x24
   1da18:	ldr	sl, [sp, #32]
   1da1c:	bne	1f168 <main@@Base+0x9434>
   1da20:	ldrb	r0, [r8, #2]!
   1da24:	b	1f160 <main@@Base+0x942c>
   1da28:	mov	r3, r8
   1da2c:	ldr	r6, [sp, #36]	; 0x24
   1da30:	ldr	sl, [sp, #32]
   1da34:	cmp	r3, r6
   1da38:	mov	r1, r6
   1da3c:	beq	1da6c <main@@Base+0x7d38>
   1da40:	ldrb	r0, [r3]
   1da44:	cmp	r0, #34	; 0x22
   1da48:	bne	1da54 <main@@Base+0x7d20>
   1da4c:	add	r1, r3, #1
   1da50:	b	1da6c <main@@Base+0x7d38>
   1da54:	mov	r1, r3
   1da58:	mov	r0, sl
   1da5c:	mov	r2, r6
   1da60:	mov	r3, #5
   1da64:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1da68:	mov	r1, r0
   1da6c:	mov	r0, sl
   1da70:	mov	r2, r6
   1da74:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   1da78:	mov	r2, r0
   1da7c:	sub	r0, r6, r0
   1da80:	cmp	r0, #2
   1da84:	blt	1dab0 <main@@Base+0x7d7c>
   1da88:	ldrb	r0, [r2]
   1da8c:	cmp	r0, #32
   1da90:	bls	1da9c <main@@Base+0x7d68>
   1da94:	mov	r3, r2
   1da98:	b	1dac4 <main@@Base+0x7d90>
   1da9c:	bne	1dab0 <main@@Base+0x7d7c>
   1daa0:	mov	r3, r2
   1daa4:	ldrb	r0, [r3, #1]!
   1daa8:	cmp	r0, #32
   1daac:	bhi	1dac4 <main@@Base+0x7d90>
   1dab0:	mov	r1, r2
   1dab4:	mov	r0, sl
   1dab8:	mov	r2, r6
   1dabc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1dac0:	mov	r3, r0
   1dac4:	cmp	r3, r6
   1dac8:	beq	1df68 <main@@Base+0x8234>
   1dacc:	ldrb	r0, [r3]
   1dad0:	cmp	r0, #44	; 0x2c
   1dad4:	bne	1df80 <main@@Base+0x824c>
   1dad8:	add	r1, r3, #1
   1dadc:	sub	r0, r6, r1
   1dae0:	cmp	r0, #2
   1dae4:	blt	1db0c <main@@Base+0x7dd8>
   1dae8:	ldrb	r0, [r1]
   1daec:	cmp	r0, #32
   1daf0:	bls	1dafc <main@@Base+0x7dc8>
   1daf4:	mov	r3, r1
   1daf8:	b	1db1c <main@@Base+0x7de8>
   1dafc:	bne	1db0c <main@@Base+0x7dd8>
   1db00:	ldrb	r0, [r3, #2]!
   1db04:	cmp	r0, #32
   1db08:	bhi	1db1c <main@@Base+0x7de8>
   1db0c:	mov	r0, sl
   1db10:	mov	r2, r6
   1db14:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1db18:	mov	r3, r0
   1db1c:	cmp	r3, r6
   1db20:	beq	1dfe0 <main@@Base+0x82ac>
   1db24:	ldrb	r0, [r3]
   1db28:	cmp	r0, #125	; 0x7d
   1db2c:	bne	1da34 <main@@Base+0x7d00>
   1db30:	b	1df90 <main@@Base+0x825c>
   1db34:	rsbs	r6, r6, #0
   1db38:	rsc	r7, r7, #0
   1db3c:	str	r6, [sp, #48]	; 0x30
   1db40:	str	r7, [sp, #52]	; 0x34
   1db44:	cmp	r8, r9
   1db48:	bne	1db88 <main@@Base+0x7e54>
   1db4c:	add	r0, sp, #48	; 0x30
   1db50:	ldr	r2, [sp, #36]	; 0x24
   1db54:	movw	r3, #33064	; 0x8128
   1db58:	mov	r1, r8
   1db5c:	str	r0, [sp]
   1db60:	ldr	r0, [sp, #32]
   1db64:	movt	r3, #5
   1db68:	bl	233f0 <main@@Base+0xd6bc>
   1db6c:	cmp	r0, r8
   1db70:	mov	r9, r0
   1db74:	ldrne	r1, [sp, #36]	; 0x24
   1db78:	cmpne	r9, r1
   1db7c:	beq	1f2f0 <main@@Base+0x95bc>
   1db80:	ldr	r6, [sp, #48]	; 0x30
   1db84:	ldr	r7, [sp, #52]	; 0x34
   1db88:	ldr	sl, [sp, #32]
   1db8c:	orrs	r0, r6, r7
   1db90:	bne	1dba0 <main@@Base+0x7e6c>
   1db94:	ldrb	r0, [sl, #8]
   1db98:	tst	r0, #2
   1db9c:	beq	1e350 <main@@Base+0x861c>
   1dba0:	ldr	r0, [sl]
   1dba4:	mov	r1, #22
   1dba8:	b	1e334 <main@@Base+0x8600>
   1dbac:	ldr	sl, [sp, #32]
   1dbb0:	ldr	r6, [sp, #36]	; 0x24
   1dbb4:	mov	r1, r9
   1dbb8:	mov	r0, sl
   1dbbc:	mov	r2, r6
   1dbc0:	mov	r3, #9
   1dbc4:	b	1ac4c <main@@Base+0x4f18>
   1dbc8:	mov	r8, r6
   1dbcc:	b	1aab0 <main@@Base+0x4d7c>
   1dbd0:	mov	r8, r6
   1dbd4:	b	1be1c <main@@Base+0x60e8>
   1dbd8:	cmp	r0, #125	; 0x7d
   1dbdc:	bne	1ee98 <main@@Base+0x9164>
   1dbe0:	ldr	r6, [sp, #36]	; 0x24
   1dbe4:	ldr	sl, [sp, #32]
   1dbe8:	add	r1, r2, #1
   1dbec:	sub	r0, r6, r1
   1dbf0:	cmp	r0, #2
   1dbf4:	blt	1f02c <main@@Base+0x92f8>
   1dbf8:	ldrb	r0, [r1]
   1dbfc:	cmp	r0, #32
   1dc00:	bls	1f010 <main@@Base+0x92dc>
   1dc04:	ldr	r6, [sp, #36]	; 0x24
   1dc08:	ldr	sl, [sp, #32]
   1dc0c:	mov	r8, r1
   1dc10:	b	1aab0 <main@@Base+0x4d7c>
   1dc14:	cmp	r0, #93	; 0x5d
   1dc18:	bne	1eeb4 <main@@Base+0x9180>
   1dc1c:	ldr	r6, [sp, #36]	; 0x24
   1dc20:	ldr	sl, [sp, #32]
   1dc24:	add	r1, r2, #1
   1dc28:	sub	r0, r6, r1
   1dc2c:	cmp	r0, #2
   1dc30:	blt	1f068 <main@@Base+0x9334>
   1dc34:	ldrb	r0, [r1]
   1dc38:	cmp	r0, #32
   1dc3c:	bls	1f04c <main@@Base+0x9318>
   1dc40:	ldr	r6, [sp, #36]	; 0x24
   1dc44:	ldr	sl, [sp, #32]
   1dc48:	mov	r8, r1
   1dc4c:	b	1be1c <main@@Base+0x60e8>
   1dc50:	mov	r8, r6
   1dc54:	b	1f098 <main@@Base+0x9364>
   1dc58:	mov	r0, sl
   1dc5c:	mov	r1, r6
   1dc60:	b	1eea8 <main@@Base+0x9174>
   1dc64:	mov	r0, sl
   1dc68:	mov	r1, r6
   1dc6c:	b	1eec4 <main@@Base+0x9190>
   1dc70:	cmp	r0, #93	; 0x5d
   1dc74:	bne	1eed0 <main@@Base+0x919c>
   1dc78:	ldr	r0, [sp, #36]	; 0x24
   1dc7c:	add	r1, r8, #1
   1dc80:	sub	r0, r0, r1
   1dc84:	b	1dca8 <main@@Base+0x7f74>
   1dc88:	mov	r0, sl
   1dc8c:	mov	r1, r6
   1dc90:	mov	r2, r6
   1dc94:	b	1eedc <main@@Base+0x91a8>
   1dc98:	mov	r8, r6
   1dc9c:	b	1c244 <main@@Base+0x6510>
   1dca0:	add	r1, r8, #1
   1dca4:	sub	r0, r6, r1
   1dca8:	cmp	r0, #2
   1dcac:	blt	1f088 <main@@Base+0x9354>
   1dcb0:	ldrb	r0, [r1]
   1dcb4:	cmp	r0, #32
   1dcb8:	bls	1f078 <main@@Base+0x9344>
   1dcbc:	mov	r8, r1
   1dcc0:	b	1f098 <main@@Base+0x9364>
   1dcc4:	cmp	r0, #93	; 0x5d
   1dcc8:	bne	1eef8 <main@@Base+0x91c4>
   1dccc:	ldr	r6, [sp, #36]	; 0x24
   1dcd0:	ldr	sl, [sp, #32]
   1dcd4:	add	r1, r2, #1
   1dcd8:	sub	r0, r6, r1
   1dcdc:	cmp	r0, #2
   1dce0:	blt	1f100 <main@@Base+0x93cc>
   1dce4:	ldrb	r0, [r1]
   1dce8:	cmp	r0, #32
   1dcec:	bls	1f0e4 <main@@Base+0x93b0>
   1dcf0:	ldr	r6, [sp, #36]	; 0x24
   1dcf4:	ldr	sl, [sp, #32]
   1dcf8:	mov	r8, r1
   1dcfc:	b	1c244 <main@@Base+0x6510>
   1dd00:	ldr	sl, [sp, #32]
   1dd04:	ldr	r6, [sp, #36]	; 0x24
   1dd08:	mov	r1, r2
   1dd0c:	mov	r0, sl
   1dd10:	mov	r2, r6
   1dd14:	mov	r3, #9
   1dd18:	b	1ab98 <main@@Base+0x4e64>
   1dd1c:	mov	r9, r6
   1dd20:	b	1f140 <main@@Base+0x940c>
   1dd24:	mov	r0, sl
   1dd28:	mov	r1, r6
   1dd2c:	b	1ef08 <main@@Base+0x91d4>
   1dd30:	cmp	r0, #93	; 0x5d
   1dd34:	bne	1ef1c <main@@Base+0x91e8>
   1dd38:	ldr	r0, [sp, #36]	; 0x24
   1dd3c:	add	r1, r9, #1
   1dd40:	sub	r0, r0, r1
   1dd44:	b	1dfc4 <main@@Base+0x8290>
   1dd48:	bne	1dd58 <main@@Base+0x8024>
   1dd4c:	ldrb	r0, [r9, #2]!
   1dd50:	cmp	r0, #32
   1dd54:	bhi	1dd68 <main@@Base+0x8034>
   1dd58:	ldr	r0, [sp, #32]
   1dd5c:	ldr	r2, [sp, #36]	; 0x24
   1dd60:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1dd64:	mov	r9, r0
   1dd68:	ldr	r4, [sp, #36]	; 0x24
   1dd6c:	cmp	r9, r4
   1dd70:	beq	1ddcc <main@@Base+0x8098>
   1dd74:	ldrb	r0, [r9]
   1dd78:	cmp	r0, #93	; 0x5d
   1dd7c:	bne	1ddc8 <main@@Base+0x8094>
   1dd80:	ldr	r0, [sp, #36]	; 0x24
   1dd84:	ldr	sl, [sp, #32]
   1dd88:	add	r1, r9, #1
   1dd8c:	sub	r0, r0, r1
   1dd90:	cmp	r0, #2
   1dd94:	blt	1ddb8 <main@@Base+0x8084>
   1dd98:	ldrb	r0, [r1]
   1dd9c:	cmp	r0, #32
   1dda0:	bhi	1ef5c <main@@Base+0x9228>
   1dda4:	ldr	sl, [sp, #32]
   1dda8:	bne	1ddb8 <main@@Base+0x8084>
   1ddac:	ldrb	r0, [r9, #2]!
   1ddb0:	cmp	r0, #32
   1ddb4:	bhi	1d804 <main@@Base+0x7ad0>
   1ddb8:	ldr	r2, [sp, #36]	; 0x24
   1ddbc:	mov	r0, sl
   1ddc0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1ddc4:	b	1d800 <main@@Base+0x7acc>
   1ddc8:	mov	r4, r9
   1ddcc:	mov	r0, #0
   1ddd0:	mov	r1, #1
   1ddd4:	str	r0, [fp, #-52]	; 0xffffffcc
   1ddd8:	str	r0, [fp, #-56]	; 0xffffffc8
   1dddc:	ldr	r0, [sp, #32]
   1dde0:	ldr	r0, [r0]
   1dde4:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   1dde8:	cmp	r0, #0
   1ddec:	beq	1f2c0 <main@@Base+0x958c>
   1ddf0:	ldr	r6, [sp, #36]	; 0x24
   1ddf4:	ldr	sl, [sp, #32]
   1ddf8:	mov	r7, r0
   1ddfc:	mov	r9, r4
   1de00:	mov	r0, sl
   1de04:	mov	r1, r9
   1de08:	mov	r2, r6
   1de0c:	sub	r3, fp, #56	; 0x38
   1de10:	bl	326b0 <flatcc_json_parser_double@@Base>
   1de14:	mov	r4, r0
   1de18:	cmp	r9, r0
   1de1c:	bne	1de5c <main@@Base+0x8128>
   1de20:	movw	r3, #33136	; 0x8170
   1de24:	sub	r0, fp, #56	; 0x38
   1de28:	mov	r1, r9
   1de2c:	mov	r2, r6
   1de30:	movt	r3, #5
   1de34:	str	r0, [sp]
   1de38:	mov	r0, sl
   1de3c:	bl	2395c <main@@Base+0xdc28>
   1de40:	mov	r4, r0
   1de44:	cmp	r0, r9
   1de48:	beq	1f2c0 <main@@Base+0x958c>
   1de4c:	ldr	r6, [sp, #36]	; 0x24
   1de50:	ldr	sl, [sp, #32]
   1de54:	cmp	r4, r6
   1de58:	beq	1f2c8 <main@@Base+0x9594>
   1de5c:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1de60:	sub	r0, r6, r4
   1de64:	cmp	r0, #2
   1de68:	vstr	d16, [r7]
   1de6c:	blt	1dea4 <main@@Base+0x8170>
   1de70:	ldrb	r0, [r4]
   1de74:	cmp	r0, #32
   1de78:	bls	1de88 <main@@Base+0x8154>
   1de7c:	ldr	r6, [sp, #36]	; 0x24
   1de80:	mov	r9, r4
   1de84:	b	1deb8 <main@@Base+0x8184>
   1de88:	ldr	r6, [sp, #36]	; 0x24
   1de8c:	ldr	sl, [sp, #32]
   1de90:	bne	1dea4 <main@@Base+0x8170>
   1de94:	mov	r9, r4
   1de98:	ldrb	r0, [r9, #1]!
   1de9c:	cmp	r0, #32
   1dea0:	bhi	1deb8 <main@@Base+0x8184>
   1dea4:	mov	r0, sl
   1dea8:	mov	r1, r4
   1deac:	mov	r2, r6
   1deb0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1deb4:	mov	r9, r0
   1deb8:	cmp	r9, r6
   1debc:	beq	1ef14 <main@@Base+0x91e0>
   1dec0:	ldrb	r0, [r9]
   1dec4:	cmp	r0, #44	; 0x2c
   1dec8:	bne	1ef34 <main@@Base+0x9200>
   1decc:	ldr	r4, [sp, #36]	; 0x24
   1ded0:	add	r1, r9, #1
   1ded4:	sub	r0, r4, r1
   1ded8:	cmp	r0, #2
   1dedc:	ldr	r0, [sp, #32]
   1dee0:	blt	1df14 <main@@Base+0x81e0>
   1dee4:	ldrb	r0, [r1]
   1dee8:	cmp	r0, #32
   1deec:	bls	1defc <main@@Base+0x81c8>
   1def0:	ldr	r4, [sp, #36]	; 0x24
   1def4:	mov	r9, r1
   1def8:	b	1df20 <main@@Base+0x81ec>
   1defc:	ldr	r4, [sp, #36]	; 0x24
   1df00:	ldr	r0, [sp, #32]
   1df04:	bne	1df14 <main@@Base+0x81e0>
   1df08:	ldrb	r2, [r9, #2]!
   1df0c:	cmp	r2, #32
   1df10:	bhi	1df20 <main@@Base+0x81ec>
   1df14:	mov	r2, r4
   1df18:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1df1c:	mov	r9, r0
   1df20:	cmp	r9, r4
   1df24:	beq	1ef64 <main@@Base+0x9230>
   1df28:	ldrb	r0, [r9]
   1df2c:	cmp	r0, #93	; 0x5d
   1df30:	beq	1ef3c <main@@Base+0x9208>
   1df34:	ldr	sl, [sp, #32]
   1df38:	mov	r0, #0
   1df3c:	mov	r1, #1
   1df40:	str	r0, [fp, #-52]	; 0xffffffcc
   1df44:	str	r0, [fp, #-56]	; 0xffffffc8
   1df48:	ldr	r0, [sl]
   1df4c:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   1df50:	ldr	r6, [sp, #36]	; 0x24
   1df54:	mov	r7, r0
   1df58:	cmp	r0, #0
   1df5c:	mov	r4, r9
   1df60:	bne	1de00 <main@@Base+0x80cc>
   1df64:	b	1f2c8 <main@@Base+0x9594>
   1df68:	mov	r8, r6
   1df6c:	b	1b1c4 <main@@Base+0x5490>
   1df70:	mov	r0, sl
   1df74:	mov	r1, r6
   1df78:	mov	r2, r6
   1df7c:	b	1ef28 <main@@Base+0x91f4>
   1df80:	cmp	r0, #125	; 0x7d
   1df84:	bne	1ef74 <main@@Base+0x9240>
   1df88:	ldr	r6, [sp, #36]	; 0x24
   1df8c:	ldr	sl, [sp, #32]
   1df90:	add	r1, r3, #1
   1df94:	sub	r0, r6, r1
   1df98:	cmp	r0, #2
   1df9c:	blt	1f168 <main@@Base+0x9434>
   1dfa0:	ldrb	r0, [r1]
   1dfa4:	cmp	r0, #32
   1dfa8:	bls	1f14c <main@@Base+0x9418>
   1dfac:	ldr	r6, [sp, #36]	; 0x24
   1dfb0:	ldr	sl, [sp, #32]
   1dfb4:	mov	r8, r1
   1dfb8:	b	1b1c4 <main@@Base+0x5490>
   1dfbc:	add	r1, r9, #1
   1dfc0:	sub	r0, r6, r1
   1dfc4:	cmp	r0, #2
   1dfc8:	blt	1f130 <main@@Base+0x93fc>
   1dfcc:	ldrb	r0, [r1]
   1dfd0:	cmp	r0, #32
   1dfd4:	bls	1f120 <main@@Base+0x93ec>
   1dfd8:	mov	r9, r1
   1dfdc:	b	1f140 <main@@Base+0x940c>
   1dfe0:	mov	r0, sl
   1dfe4:	mov	r1, r6
   1dfe8:	b	1ef84 <main@@Base+0x9250>
   1dfec:	ldr	r6, [sp, #36]	; 0x24
   1dff0:	ldr	sl, [sp, #32]
   1dff4:	bne	1e004 <main@@Base+0x82d0>
   1dff8:	ldrb	r0, [r8, #2]!
   1dffc:	cmp	r0, #32
   1e000:	bhi	1e014 <main@@Base+0x82e0>
   1e004:	mov	r0, sl
   1e008:	mov	r2, r6
   1e00c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1e010:	mov	r8, r0
   1e014:	cmp	r7, r8
   1e018:	beq	1e1d0 <main@@Base+0x849c>
   1e01c:	mov	r5, #0
   1e020:	cmp	r8, r6
   1e024:	str	r5, [fp, #-52]	; 0xffffffcc
   1e028:	str	r5, [fp, #-56]	; 0xffffffc8
   1e02c:	str	r5, [sp, #60]	; 0x3c
   1e030:	str	r5, [sp, #48]	; 0x30
   1e034:	beq	1e07c <main@@Base+0x8348>
   1e038:	sub	r0, fp, #56	; 0x38
   1e03c:	ldr	r2, [sp, #36]	; 0x24
   1e040:	mov	r1, r8
   1e044:	add	r3, sp, #48	; 0x30
   1e048:	str	r0, [sp]
   1e04c:	ldr	r0, [sp, #32]
   1e050:	bl	3314c <flatcc_json_parser_integer@@Base>
   1e054:	cmp	r0, r8
   1e058:	beq	1e084 <main@@Base+0x8350>
   1e05c:	mov	r1, r0
   1e060:	ldr	r0, [sp, #48]	; 0x30
   1e064:	cmp	r0, #0
   1e068:	beq	1e08c <main@@Base+0x8358>
   1e06c:	ldr	r0, [sp, #32]
   1e070:	ldr	r2, [sp, #36]	; 0x24
   1e074:	mov	r3, #8
   1e078:	b	1e0a4 <main@@Base+0x8370>
   1e07c:	ldr	r9, [sp, #36]	; 0x24
   1e080:	b	1e0ac <main@@Base+0x8378>
   1e084:	mov	r9, r8
   1e088:	b	1e0ac <main@@Base+0x8378>
   1e08c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1e090:	cmp	r0, #0
   1e094:	beq	1eee8 <main@@Base+0x91b4>
   1e098:	ldr	r0, [sp, #32]
   1e09c:	ldr	r2, [sp, #36]	; 0x24
   1e0a0:	mov	r3, #7
   1e0a4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1e0a8:	mov	r9, r0
   1e0ac:	cmp	r8, r9
   1e0b0:	bne	1e0ec <main@@Base+0x83b8>
   1e0b4:	add	r0, sp, #60	; 0x3c
   1e0b8:	ldr	r2, [sp, #36]	; 0x24
   1e0bc:	movw	r3, #33088	; 0x8140
   1e0c0:	mov	r1, r8
   1e0c4:	str	r0, [sp]
   1e0c8:	ldr	r0, [sp, #32]
   1e0cc:	movt	r3, #5
   1e0d0:	bl	235d8 <main@@Base+0xd8a4>
   1e0d4:	cmp	r0, r8
   1e0d8:	mov	r9, r0
   1e0dc:	ldrne	r1, [sp, #36]	; 0x24
   1e0e0:	cmpne	r9, r1
   1e0e4:	beq	1f2f0 <main@@Base+0x95bc>
   1e0e8:	ldr	r5, [sp, #60]	; 0x3c
   1e0ec:	ldr	sl, [sp, #32]
   1e0f0:	cmp	r5, #0
   1e0f4:	bne	1e104 <main@@Base+0x83d0>
   1e0f8:	ldrb	r0, [sl, #8]
   1e0fc:	tst	r0, #2
   1e100:	beq	1e350 <main@@Base+0x861c>
   1e104:	ldr	r0, [sl]
   1e108:	mov	r1, #21
   1e10c:	mov	r2, #4
   1e110:	mov	r3, #4
   1e114:	bl	2e760 <flatcc_builder_table_add@@Base>
   1e118:	cmp	r0, #0
   1e11c:	beq	1f2f0 <main@@Base+0x95bc>
   1e120:	ldr	sl, [sp, #32]
   1e124:	str	r5, [r0]
   1e128:	b	1e350 <main@@Base+0x861c>
   1e12c:	ldr	r6, [sp, #36]	; 0x24
   1e130:	ldr	sl, [sp, #32]
   1e134:	bne	1e144 <main@@Base+0x8410>
   1e138:	ldrb	r0, [r8, #2]!
   1e13c:	cmp	r0, #32
   1e140:	bhi	1e154 <main@@Base+0x8420>
   1e144:	mov	r0, sl
   1e148:	mov	r2, r6
   1e14c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1e150:	mov	r8, r0
   1e154:	cmp	r7, r8
   1e158:	beq	1e1d0 <main@@Base+0x849c>
   1e15c:	mov	r0, r6
   1e160:	mov	r6, #0
   1e164:	cmp	r8, r0
   1e168:	str	r6, [fp, #-52]	; 0xffffffcc
   1e16c:	str	r6, [fp, #-56]	; 0xffffffc8
   1e170:	str	r6, [sp, #52]	; 0x34
   1e174:	str	r6, [sp, #48]	; 0x30
   1e178:	str	r6, [sp, #60]	; 0x3c
   1e17c:	beq	1e2a0 <main@@Base+0x856c>
   1e180:	sub	r0, fp, #56	; 0x38
   1e184:	ldr	r2, [sp, #36]	; 0x24
   1e188:	mov	r1, r8
   1e18c:	add	r3, sp, #60	; 0x3c
   1e190:	str	r0, [sp]
   1e194:	ldr	r0, [sp, #32]
   1e198:	bl	3314c <flatcc_json_parser_integer@@Base>
   1e19c:	cmp	r0, r8
   1e1a0:	beq	1e2ac <main@@Base+0x8578>
   1e1a4:	mov	r1, r0
   1e1a8:	ldr	r0, [sp, #60]	; 0x3c
   1e1ac:	cmp	r0, #0
   1e1b0:	beq	1e2bc <main@@Base+0x8588>
   1e1b4:	ldr	r0, [sp, #32]
   1e1b8:	ldr	r2, [sp, #36]	; 0x24
   1e1bc:	mov	r3, #8
   1e1c0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1e1c4:	mov	r9, r0
   1e1c8:	mov	r6, #0
   1e1cc:	b	1e2a4 <main@@Base+0x8570>
   1e1d0:	mov	r0, sl
   1e1d4:	mov	r1, r7
   1e1d8:	mov	r2, r6
   1e1dc:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   1e1e0:	mov	r9, r0
   1e1e4:	sub	r0, r6, r9
   1e1e8:	cmp	r0, #2
   1e1ec:	blt	1e218 <main@@Base+0x84e4>
   1e1f0:	ldrb	r0, [r9]
   1e1f4:	cmp	r0, #32
   1e1f8:	bls	1e204 <main@@Base+0x84d0>
   1e1fc:	mov	r2, r9
   1e200:	b	1e22c <main@@Base+0x84f8>
   1e204:	bne	1e218 <main@@Base+0x84e4>
   1e208:	mov	r2, r9
   1e20c:	ldrb	r0, [r2, #1]!
   1e210:	cmp	r0, #32
   1e214:	bhi	1e22c <main@@Base+0x84f8>
   1e218:	mov	r0, sl
   1e21c:	mov	r1, r9
   1e220:	mov	r2, r6
   1e224:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1e228:	mov	r2, r0
   1e22c:	cmp	r2, r6
   1e230:	beq	1f208 <main@@Base+0x94d4>
   1e234:	ldrb	r0, [r2]
   1e238:	ldr	r5, [sp, #28]
   1e23c:	cmp	r0, #44	; 0x2c
   1e240:	bne	1f214 <main@@Base+0x94e0>
   1e244:	add	r1, r2, #1
   1e248:	sub	r0, r6, r1
   1e24c:	cmp	r0, #2
   1e250:	blt	1e278 <main@@Base+0x8544>
   1e254:	ldrb	r0, [r1]
   1e258:	cmp	r0, #32
   1e25c:	bls	1e268 <main@@Base+0x8534>
   1e260:	mov	r2, r1
   1e264:	b	1e288 <main@@Base+0x8554>
   1e268:	bne	1e278 <main@@Base+0x8544>
   1e26c:	ldrb	r0, [r2, #2]!
   1e270:	cmp	r0, #32
   1e274:	bhi	1e288 <main@@Base+0x8554>
   1e278:	mov	r0, sl
   1e27c:	mov	r2, r6
   1e280:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1e284:	mov	r2, r0
   1e288:	cmp	r2, r6
   1e28c:	beq	1f240 <main@@Base+0x950c>
   1e290:	ldrb	r0, [r2]
   1e294:	cmp	r0, #125	; 0x7d
   1e298:	bne	167bc <main@@Base+0xa88>
   1e29c:	b	1f21c <main@@Base+0x94e8>
   1e2a0:	ldr	r9, [sp, #36]	; 0x24
   1e2a4:	mov	r7, #0
   1e2a8:	b	1e2d0 <main@@Base+0x859c>
   1e2ac:	mov	r6, #0
   1e2b0:	mov	r7, #0
   1e2b4:	mov	r9, r8
   1e2b8:	b	1e2d0 <main@@Base+0x859c>
   1e2bc:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1e2c0:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1e2c4:	mov	r9, r1
   1e2c8:	str	r7, [sp, #52]	; 0x34
   1e2cc:	str	r6, [sp, #48]	; 0x30
   1e2d0:	cmp	r8, r9
   1e2d4:	bne	1e314 <main@@Base+0x85e0>
   1e2d8:	add	r0, sp, #48	; 0x30
   1e2dc:	ldr	r2, [sp, #36]	; 0x24
   1e2e0:	movw	r3, #33112	; 0x8158
   1e2e4:	mov	r1, r8
   1e2e8:	str	r0, [sp]
   1e2ec:	ldr	r0, [sp, #32]
   1e2f0:	movt	r3, #5
   1e2f4:	bl	237a0 <main@@Base+0xda6c>
   1e2f8:	cmp	r0, r8
   1e2fc:	mov	r9, r0
   1e300:	ldrne	r1, [sp, #36]	; 0x24
   1e304:	cmpne	r9, r1
   1e308:	beq	1f2f0 <main@@Base+0x95bc>
   1e30c:	ldr	r6, [sp, #48]	; 0x30
   1e310:	ldr	r7, [sp, #52]	; 0x34
   1e314:	ldr	sl, [sp, #32]
   1e318:	orrs	r0, r6, r7
   1e31c:	bne	1e32c <main@@Base+0x85f8>
   1e320:	ldrb	r0, [sl, #8]
   1e324:	tst	r0, #2
   1e328:	beq	1e350 <main@@Base+0x861c>
   1e32c:	ldr	r0, [sl]
   1e330:	mov	r1, #23
   1e334:	mov	r2, #8
   1e338:	mov	r3, #8
   1e33c:	bl	2e760 <flatcc_builder_table_add@@Base>
   1e340:	cmp	r0, #0
   1e344:	beq	1f2f0 <main@@Base+0x95bc>
   1e348:	strd	r6, [r0]
   1e34c:	ldr	sl, [sp, #32]
   1e350:	ldr	r6, [sp, #36]	; 0x24
   1e354:	b	1e1e4 <main@@Base+0x84b0>
   1e358:	bne	1e368 <main@@Base+0x8634>
   1e35c:	ldrb	r0, [r9, #2]!
   1e360:	cmp	r0, #32
   1e364:	bhi	1e378 <main@@Base+0x8644>
   1e368:	ldr	r0, [sp, #32]
   1e36c:	ldr	r2, [sp, #36]	; 0x24
   1e370:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1e374:	mov	r9, r0
   1e378:	ldr	r5, [sp, #36]	; 0x24
   1e37c:	cmp	r9, r5
   1e380:	beq	1e394 <main@@Base+0x8660>
   1e384:	ldrb	r0, [r9]
   1e388:	cmp	r0, #93	; 0x5d
   1e38c:	beq	1efa0 <main@@Base+0x926c>
   1e390:	mov	r5, r9
   1e394:	mov	r0, #0
   1e398:	mov	r1, #1
   1e39c:	strb	r0, [sp, #60]	; 0x3c
   1e3a0:	ldr	r0, [sp, #32]
   1e3a4:	ldr	r0, [r0]
   1e3a8:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   1e3ac:	cmp	r0, #0
   1e3b0:	beq	1f2ec <main@@Base+0x95b8>
   1e3b4:	mov	r4, r0
   1e3b8:	mov	r9, r5
   1e3bc:	ldr	r6, [sp, #36]	; 0x24
   1e3c0:	mov	r5, #0
   1e3c4:	str	r5, [fp, #-52]	; 0xffffffcc
   1e3c8:	str	r5, [fp, #-56]	; 0xffffffc8
   1e3cc:	strb	r5, [sp, #60]	; 0x3c
   1e3d0:	str	r5, [sp, #48]	; 0x30
   1e3d4:	cmp	r9, r6
   1e3d8:	beq	1e420 <main@@Base+0x86ec>
   1e3dc:	sub	r0, fp, #56	; 0x38
   1e3e0:	mov	r1, r9
   1e3e4:	mov	r2, r6
   1e3e8:	add	r3, sp, #48	; 0x30
   1e3ec:	str	r0, [sp]
   1e3f0:	ldr	r0, [sp, #32]
   1e3f4:	bl	3314c <flatcc_json_parser_integer@@Base>
   1e3f8:	cmp	r0, r9
   1e3fc:	beq	1e428 <main@@Base+0x86f4>
   1e400:	mov	r1, r0
   1e404:	ldr	r0, [sp, #48]	; 0x30
   1e408:	cmp	r0, #0
   1e40c:	beq	1e430 <main@@Base+0x86fc>
   1e410:	ldr	r7, [sp, #32]
   1e414:	ldr	r6, [sp, #36]	; 0x24
   1e418:	mov	r3, #8
   1e41c:	b	1e450 <main@@Base+0x871c>
   1e420:	mov	r1, r6
   1e424:	b	1e470 <main@@Base+0x873c>
   1e428:	mov	r1, r9
   1e42c:	b	1e46c <main@@Base+0x8738>
   1e430:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e434:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e438:	subs	r3, r0, #256	; 0x100
   1e43c:	sbcs	r2, r2, #0
   1e440:	bcc	1e464 <main@@Base+0x8730>
   1e444:	ldr	r7, [sp, #32]
   1e448:	ldr	r6, [sp, #36]	; 0x24
   1e44c:	mov	r3, #7
   1e450:	mov	r0, r7
   1e454:	mov	r2, r6
   1e458:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1e45c:	mov	r1, r0
   1e460:	b	1e474 <main@@Base+0x8740>
   1e464:	mov	r5, r0
   1e468:	strb	r0, [sp, #60]	; 0x3c
   1e46c:	ldr	r6, [sp, #36]	; 0x24
   1e470:	ldr	r7, [sp, #32]
   1e474:	cmp	r9, r1
   1e478:	bne	1e4bc <main@@Base+0x8788>
   1e47c:	movw	r3, #33124	; 0x8164
   1e480:	add	r0, sp, #60	; 0x3c
   1e484:	mov	r1, r9
   1e488:	mov	r2, r6
   1e48c:	movt	r3, #5
   1e490:	str	r0, [sp]
   1e494:	mov	r0, r7
   1e498:	bl	211e0 <main@@Base+0xb4ac>
   1e49c:	cmp	r0, r9
   1e4a0:	mov	r1, r0
   1e4a4:	ldrne	r0, [sp, #36]	; 0x24
   1e4a8:	cmpne	r1, r0
   1e4ac:	beq	1f2d0 <main@@Base+0x959c>
   1e4b0:	ldrb	r5, [sp, #60]	; 0x3c
   1e4b4:	ldr	r6, [sp, #36]	; 0x24
   1e4b8:	ldr	r7, [sp, #32]
   1e4bc:	sub	r0, r6, r1
   1e4c0:	strb	r5, [r4]
   1e4c4:	cmp	r0, #2
   1e4c8:	blt	1e500 <main@@Base+0x87cc>
   1e4cc:	ldrb	r0, [r1]
   1e4d0:	cmp	r0, #32
   1e4d4:	bls	1e4e4 <main@@Base+0x87b0>
   1e4d8:	ldr	r6, [sp, #36]	; 0x24
   1e4dc:	mov	r9, r1
   1e4e0:	b	1e510 <main@@Base+0x87dc>
   1e4e4:	ldr	r6, [sp, #36]	; 0x24
   1e4e8:	ldr	r7, [sp, #32]
   1e4ec:	bne	1e500 <main@@Base+0x87cc>
   1e4f0:	mov	r9, r1
   1e4f4:	ldrb	r0, [r9, #1]!
   1e4f8:	cmp	r0, #32
   1e4fc:	bhi	1e510 <main@@Base+0x87dc>
   1e500:	mov	r0, r7
   1e504:	mov	r2, r6
   1e508:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1e50c:	mov	r9, r0
   1e510:	cmp	r9, r6
   1e514:	beq	1ef90 <main@@Base+0x925c>
   1e518:	ldrb	r0, [r9]
   1e51c:	cmp	r0, #44	; 0x2c
   1e520:	bne	1ef98 <main@@Base+0x9264>
   1e524:	ldr	r4, [sp, #36]	; 0x24
   1e528:	add	r1, r9, #1
   1e52c:	sub	r0, r4, r1
   1e530:	cmp	r0, #2
   1e534:	ldr	r0, [sp, #32]
   1e538:	blt	1e56c <main@@Base+0x8838>
   1e53c:	ldrb	r0, [r1]
   1e540:	cmp	r0, #32
   1e544:	bls	1e554 <main@@Base+0x8820>
   1e548:	ldr	r4, [sp, #36]	; 0x24
   1e54c:	mov	r9, r1
   1e550:	b	1e578 <main@@Base+0x8844>
   1e554:	ldr	r4, [sp, #36]	; 0x24
   1e558:	ldr	r0, [sp, #32]
   1e55c:	bne	1e56c <main@@Base+0x8838>
   1e560:	ldrb	r2, [r9, #2]!
   1e564:	cmp	r2, #32
   1e568:	bhi	1e578 <main@@Base+0x8844>
   1e56c:	mov	r2, r4
   1e570:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1e574:	mov	r9, r0
   1e578:	cmp	r9, r4
   1e57c:	beq	1f03c <main@@Base+0x9308>
   1e580:	ldrb	r0, [r9]
   1e584:	cmp	r0, #93	; 0x5d
   1e588:	beq	1efa0 <main@@Base+0x926c>
   1e58c:	mov	r0, #0
   1e590:	mov	r1, #1
   1e594:	strb	r0, [sp, #60]	; 0x3c
   1e598:	ldr	r0, [sp, #32]
   1e59c:	ldr	r0, [r0]
   1e5a0:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   1e5a4:	mov	r4, r0
   1e5a8:	cmp	r0, #0
   1e5ac:	bne	1e3bc <main@@Base+0x8688>
   1e5b0:	b	1f2f0 <main@@Base+0x95bc>
   1e5b4:	ldr	r6, [sp, #36]	; 0x24
   1e5b8:	ldr	sl, [sp, #32]
   1e5bc:	b	1aabc <main@@Base+0x4d88>
   1e5c0:	bne	1e5d0 <main@@Base+0x889c>
   1e5c4:	ldrb	r0, [r8, #2]!
   1e5c8:	cmp	r0, #32
   1e5cc:	bhi	1e5e0 <main@@Base+0x88ac>
   1e5d0:	ldr	r0, [sp, #32]
   1e5d4:	ldr	r2, [sp, #36]	; 0x24
   1e5d8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1e5dc:	mov	r8, r0
   1e5e0:	ldr	r7, [sp, #36]	; 0x24
   1e5e4:	cmp	r8, r7
   1e5e8:	beq	1e634 <main@@Base+0x8900>
   1e5ec:	ldrb	r0, [r8]
   1e5f0:	cmp	r0, #125	; 0x7d
   1e5f4:	bne	1e630 <main@@Base+0x88fc>
   1e5f8:	ldr	r0, [sp, #36]	; 0x24
   1e5fc:	ldr	sl, [sp, #32]
   1e600:	add	r1, r8, #1
   1e604:	sub	r0, r0, r1
   1e608:	cmp	r0, #2
   1e60c:	blt	1f1f8 <main@@Base+0x94c4>
   1e610:	ldrb	r0, [r1]
   1e614:	cmp	r0, #32
   1e618:	bhi	1f0d8 <main@@Base+0x93a4>
   1e61c:	ldr	sl, [sp, #32]
   1e620:	bne	1f1f8 <main@@Base+0x94c4>
   1e624:	ldrb	r0, [r8, #2]!
   1e628:	mov	r7, r8
   1e62c:	b	1f1f0 <main@@Base+0x94bc>
   1e630:	mov	r7, r8
   1e634:	ldr	r5, [sp, #36]	; 0x24
   1e638:	cmp	r7, r5
   1e63c:	mov	r8, r5
   1e640:	beq	1e670 <main@@Base+0x893c>
   1e644:	ldrb	r0, [r7]
   1e648:	cmp	r0, #34	; 0x22
   1e64c:	bne	1e658 <main@@Base+0x8924>
   1e650:	add	r8, r7, #1
   1e654:	b	1e670 <main@@Base+0x893c>
   1e658:	ldr	r0, [sp, #32]
   1e65c:	mov	r1, r7
   1e660:	mov	r2, r5
   1e664:	mov	r3, #5
   1e668:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1e66c:	mov	r8, r0
   1e670:	sub	lr, r5, r8
   1e674:	mov	r0, #8
   1e678:	cmp	lr, #8
   1e67c:	movcc	r0, lr
   1e680:	sub	r7, r0, #1
   1e684:	cmp	r7, #7
   1e688:	bhi	1ed0c <main@@Base+0x8fd8>
   1e68c:	add	r4, pc, #32
   1e690:	mov	r1, #0
   1e694:	mov	ip, #0
   1e698:	mov	r9, #0
   1e69c:	mov	r6, #0
   1e6a0:	mov	r3, #0
   1e6a4:	mov	r5, #0
   1e6a8:	mov	r2, #0
   1e6ac:	mov	r0, #0
   1e6b0:	ldr	pc, [r4, r7, lsl #2]
   1e6b4:	andeq	lr, r1, r8, lsl r7
   1e6b8:	andeq	lr, r1, r0, lsl r7
   1e6bc:	andeq	lr, r1, r8, lsl #14
   1e6c0:	andeq	lr, r1, r0, lsl #14
   1e6c4:	strdeq	lr, [r1], -r4
   1e6c8:	andeq	lr, r1, r8, ror #13
   1e6cc:	ldrdeq	lr, [r1], -r8
   1e6d0:	ldrdeq	lr, [r1], -r4
   1e6d4:	ldrb	ip, [r8, #7]
   1e6d8:	ldrb	r0, [r8, #6]
   1e6dc:	mov	r9, r1
   1e6e0:	orr	r0, ip, r0, lsl #8
   1e6e4:	mov	r1, r0
   1e6e8:	ldrb	r0, [r8, #5]
   1e6ec:	mov	r6, r9
   1e6f0:	orr	r1, r1, r0, lsl #16
   1e6f4:	ldrb	r0, [r8, #4]
   1e6f8:	mov	r3, r6
   1e6fc:	orr	r1, r1, r0, lsl #24
   1e700:	ldrb	r0, [r8, #3]
   1e704:	orr	r5, r0, r3
   1e708:	ldrb	r0, [r8, #2]
   1e70c:	orr	r2, r5, r0, lsl #8
   1e710:	ldrb	r0, [r8, #1]
   1e714:	orr	r0, r2, r0, lsl #16
   1e718:	ldrb	r2, [r8]
   1e71c:	orr	r2, r0, r2, lsl #24
   1e720:	movw	r0, #65535	; 0xffff
   1e724:	movt	r0, #26979	; 0x6963
   1e728:	cmp	r2, r0
   1e72c:	bhi	1e790 <main@@Base+0x8a5c>
   1e730:	movw	r0, #30062	; 0x756e
   1e734:	and	r1, r1, #-16777216	; 0xff000000
   1e738:	movt	r0, #25455	; 0x636f
   1e73c:	eor	r1, r1, #1946157056	; 0x74000000
   1e740:	eor	r0, r2, r0
   1e744:	orrs	r0, r1, r0
   1e748:	bne	1ed0c <main@@Base+0x8fd8>
   1e74c:	cmp	lr, #6
   1e750:	mov	r7, r8
   1e754:	blt	1e9d4 <main@@Base+0x8ca0>
   1e758:	ldrb	r0, [r8, #5]
   1e75c:	mov	r7, r8
   1e760:	cmp	r0, #34	; 0x22
   1e764:	bne	1e9d4 <main@@Base+0x8ca0>
   1e768:	ldr	r0, [sp, #36]	; 0x24
   1e76c:	add	r1, r8, #6
   1e770:	sub	r0, r0, r1
   1e774:	cmp	r0, #2
   1e778:	blt	1e854 <main@@Base+0x8b20>
   1e77c:	ldrb	r0, [r1]
   1e780:	cmp	r0, #32
   1e784:	bls	1e840 <main@@Base+0x8b0c>
   1e788:	mov	r7, r1
   1e78c:	b	1e864 <main@@Base+0x8b30>
   1e790:	movw	r1, #27648	; 0x6c00
   1e794:	bic	r0, r2, #255	; 0xff
   1e798:	movt	r1, #30305	; 0x7661
   1e79c:	teq	r0, r1
   1e7a0:	bne	1e7e8 <main@@Base+0x8ab4>
   1e7a4:	cmp	lr, #4
   1e7a8:	mov	r7, r8
   1e7ac:	blt	1eb30 <main@@Base+0x8dfc>
   1e7b0:	ldrb	r0, [r8, #3]
   1e7b4:	mov	r7, r8
   1e7b8:	cmp	r0, #34	; 0x22
   1e7bc:	bne	1eb30 <main@@Base+0x8dfc>
   1e7c0:	ldr	r0, [sp, #36]	; 0x24
   1e7c4:	add	r1, r8, #4
   1e7c8:	sub	r0, r0, r1
   1e7cc:	cmp	r0, #2
   1e7d0:	blt	1e8d0 <main@@Base+0x8b9c>
   1e7d4:	ldrb	r0, [r1]
   1e7d8:	cmp	r0, #32
   1e7dc:	bls	1e8bc <main@@Base+0x8b88>
   1e7e0:	mov	r7, r1
   1e7e4:	b	1e8e0 <main@@Base+0x8bac>
   1e7e8:	movw	r0, #0
   1e7ec:	bfc	r2, #0, #16
   1e7f0:	movt	r0, #26980	; 0x6964
   1e7f4:	teq	r2, r0
   1e7f8:	bne	1ed0c <main@@Base+0x8fd8>
   1e7fc:	cmp	lr, #3
   1e800:	mov	r1, r8
   1e804:	blt	1ecb8 <main@@Base+0x8f84>
   1e808:	ldrb	r0, [r8, #2]
   1e80c:	mov	r1, r8
   1e810:	cmp	r0, #34	; 0x22
   1e814:	bne	1ecb8 <main@@Base+0x8f84>
   1e818:	ldr	r0, [sp, #36]	; 0x24
   1e81c:	add	r2, r8, #3
   1e820:	sub	r0, r0, r2
   1e824:	cmp	r0, #2
   1e828:	blt	1e94c <main@@Base+0x8c18>
   1e82c:	ldrb	r0, [r2]
   1e830:	cmp	r0, #32
   1e834:	bls	1e938 <main@@Base+0x8c04>
   1e838:	mov	r1, r2
   1e83c:	b	1e960 <main@@Base+0x8c2c>
   1e840:	bne	1e854 <main@@Base+0x8b20>
   1e844:	mov	r7, r8
   1e848:	ldrb	r0, [r7, #7]!
   1e84c:	cmp	r0, #32
   1e850:	bhi	1e864 <main@@Base+0x8b30>
   1e854:	ldr	r0, [sp, #32]
   1e858:	ldr	r2, [sp, #36]	; 0x24
   1e85c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1e860:	mov	r7, r0
   1e864:	ldr	r0, [sp, #36]	; 0x24
   1e868:	cmp	r7, r0
   1e86c:	beq	1e8a4 <main@@Base+0x8b70>
   1e870:	ldrb	r0, [r7]
   1e874:	cmp	r0, #58	; 0x3a
   1e878:	bne	1e8a4 <main@@Base+0x8b70>
   1e87c:	ldr	r0, [sp, #36]	; 0x24
   1e880:	add	r1, r7, #1
   1e884:	sub	r0, r0, r1
   1e888:	cmp	r0, #2
   1e88c:	blt	1e9c4 <main@@Base+0x8c90>
   1e890:	ldrb	r0, [r1]
   1e894:	cmp	r0, #32
   1e898:	bls	1e9b4 <main@@Base+0x8c80>
   1e89c:	mov	r7, r1
   1e8a0:	b	1e9d4 <main@@Base+0x8ca0>
   1e8a4:	ldr	r0, [sp, #32]
   1e8a8:	ldr	r2, [sp, #36]	; 0x24
   1e8ac:	mov	r1, r7
   1e8b0:	mov	r3, #4
   1e8b4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1e8b8:	b	1e9d0 <main@@Base+0x8c9c>
   1e8bc:	bne	1e8d0 <main@@Base+0x8b9c>
   1e8c0:	mov	r7, r8
   1e8c4:	ldrb	r0, [r7, #5]!
   1e8c8:	cmp	r0, #32
   1e8cc:	bhi	1e8e0 <main@@Base+0x8bac>
   1e8d0:	ldr	r0, [sp, #32]
   1e8d4:	ldr	r2, [sp, #36]	; 0x24
   1e8d8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1e8dc:	mov	r7, r0
   1e8e0:	ldr	r0, [sp, #36]	; 0x24
   1e8e4:	cmp	r7, r0
   1e8e8:	beq	1e920 <main@@Base+0x8bec>
   1e8ec:	ldrb	r0, [r7]
   1e8f0:	cmp	r0, #58	; 0x3a
   1e8f4:	bne	1e920 <main@@Base+0x8bec>
   1e8f8:	ldr	r0, [sp, #36]	; 0x24
   1e8fc:	add	r1, r7, #1
   1e900:	sub	r0, r0, r1
   1e904:	cmp	r0, #2
   1e908:	blt	1eb20 <main@@Base+0x8dec>
   1e90c:	ldrb	r0, [r1]
   1e910:	cmp	r0, #32
   1e914:	bls	1eb10 <main@@Base+0x8ddc>
   1e918:	mov	r7, r1
   1e91c:	b	1eb30 <main@@Base+0x8dfc>
   1e920:	ldr	r0, [sp, #32]
   1e924:	ldr	r2, [sp, #36]	; 0x24
   1e928:	mov	r1, r7
   1e92c:	mov	r3, #4
   1e930:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1e934:	b	1eb2c <main@@Base+0x8df8>
   1e938:	bne	1e94c <main@@Base+0x8c18>
   1e93c:	mov	r1, r8
   1e940:	ldrb	r0, [r1, #4]!
   1e944:	cmp	r0, #32
   1e948:	bhi	1e960 <main@@Base+0x8c2c>
   1e94c:	mov	r1, r2
   1e950:	ldr	r0, [sp, #32]
   1e954:	ldr	r2, [sp, #36]	; 0x24
   1e958:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1e95c:	mov	r1, r0
   1e960:	ldr	r0, [sp, #36]	; 0x24
   1e964:	cmp	r1, r0
   1e968:	beq	1e9a0 <main@@Base+0x8c6c>
   1e96c:	ldrb	r0, [r1]
   1e970:	cmp	r0, #58	; 0x3a
   1e974:	bne	1e9a0 <main@@Base+0x8c6c>
   1e978:	ldr	r0, [sp, #36]	; 0x24
   1e97c:	add	r2, r1, #1
   1e980:	sub	r0, r0, r2
   1e984:	cmp	r0, #2
   1e988:	blt	1eca4 <main@@Base+0x8f70>
   1e98c:	ldrb	r0, [r2]
   1e990:	cmp	r0, #32
   1e994:	bls	1ec94 <main@@Base+0x8f60>
   1e998:	mov	r1, r2
   1e99c:	b	1ecb8 <main@@Base+0x8f84>
   1e9a0:	ldr	r0, [sp, #32]
   1e9a4:	ldr	r2, [sp, #36]	; 0x24
   1e9a8:	mov	r3, #4
   1e9ac:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1e9b0:	b	1ecb4 <main@@Base+0x8f80>
   1e9b4:	bne	1e9c4 <main@@Base+0x8c90>
   1e9b8:	ldrb	r0, [r7, #2]!
   1e9bc:	cmp	r0, #32
   1e9c0:	bhi	1e9d4 <main@@Base+0x8ca0>
   1e9c4:	ldr	r0, [sp, #32]
   1e9c8:	ldr	r2, [sp, #36]	; 0x24
   1e9cc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1e9d0:	mov	r7, r0
   1e9d4:	cmp	r8, r7
   1e9d8:	beq	1ed0c <main@@Base+0x8fd8>
   1e9dc:	ldr	r0, [sp, #36]	; 0x24
   1e9e0:	mov	r5, #0
   1e9e4:	str	r5, [fp, #-52]	; 0xffffffcc
   1e9e8:	str	r5, [fp, #-56]	; 0xffffffc8
   1e9ec:	strh	r5, [sp, #60]	; 0x3c
   1e9f0:	str	r5, [sp, #48]	; 0x30
   1e9f4:	cmp	r7, r0
   1e9f8:	beq	1ea44 <main@@Base+0x8d10>
   1e9fc:	sub	r0, fp, #56	; 0x38
   1ea00:	ldr	r2, [sp, #36]	; 0x24
   1ea04:	mov	r1, r7
   1ea08:	add	r3, sp, #48	; 0x30
   1ea0c:	str	r0, [sp]
   1ea10:	ldr	r0, [sp, #32]
   1ea14:	bl	3314c <flatcc_json_parser_integer@@Base>
   1ea18:	cmp	r0, r7
   1ea1c:	beq	1ea4c <main@@Base+0x8d18>
   1ea20:	mov	r8, r0
   1ea24:	ldr	r0, [sp, #48]	; 0x30
   1ea28:	cmp	r0, #0
   1ea2c:	beq	1ea54 <main@@Base+0x8d20>
   1ea30:	ldr	r0, [sp, #32]
   1ea34:	ldr	r2, [sp, #36]	; 0x24
   1ea38:	mov	r1, r8
   1ea3c:	mov	r3, #8
   1ea40:	b	1ea78 <main@@Base+0x8d44>
   1ea44:	ldr	r8, [sp, #36]	; 0x24
   1ea48:	b	1ea80 <main@@Base+0x8d4c>
   1ea4c:	mov	r8, r7
   1ea50:	b	1ea80 <main@@Base+0x8d4c>
   1ea54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ea58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ea5c:	subs	r2, r0, #65536	; 0x10000
   1ea60:	sbcs	r1, r1, #0
   1ea64:	bcc	1eb04 <main@@Base+0x8dd0>
   1ea68:	ldr	r0, [sp, #32]
   1ea6c:	ldr	r2, [sp, #36]	; 0x24
   1ea70:	mov	r1, r8
   1ea74:	mov	r3, #7
   1ea78:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1ea7c:	mov	r8, r0
   1ea80:	cmp	r7, r8
   1ea84:	bne	1eac0 <main@@Base+0x8d8c>
   1ea88:	add	r0, sp, #60	; 0x3c
   1ea8c:	ldr	r2, [sp, #36]	; 0x24
   1ea90:	movw	r3, #33580	; 0x832c
   1ea94:	mov	r1, r7
   1ea98:	str	r0, [sp]
   1ea9c:	ldr	r0, [sp, #32]
   1eaa0:	movt	r3, #5
   1eaa4:	bl	2a784 <main@@Base+0x14a50>
   1eaa8:	cmp	r0, r7
   1eaac:	mov	r8, r0
   1eab0:	ldrne	r0, [sp, #36]	; 0x24
   1eab4:	cmpne	r8, r0
   1eab8:	beq	1edf4 <main@@Base+0x90c0>
   1eabc:	ldrh	r5, [sp, #60]	; 0x3c
   1eac0:	movw	r0, #65535	; 0xffff
   1eac4:	tst	r5, r0
   1eac8:	bne	1eadc <main@@Base+0x8da8>
   1eacc:	ldr	r0, [sp, #32]
   1ead0:	ldrb	r0, [r0, #8]
   1ead4:	tst	r0, #2
   1ead8:	beq	1ed00 <main@@Base+0x8fcc>
   1eadc:	ldr	r0, [sp, #32]
   1eae0:	mov	r1, #2
   1eae4:	mov	r2, #2
   1eae8:	mov	r3, #2
   1eaec:	ldr	r0, [r0]
   1eaf0:	bl	2e760 <flatcc_builder_table_add@@Base>
   1eaf4:	cmp	r0, #0
   1eaf8:	beq	1edf4 <main@@Base+0x90c0>
   1eafc:	strh	r5, [r0]
   1eb00:	b	1ed00 <main@@Base+0x8fcc>
   1eb04:	mov	r5, r0
   1eb08:	strh	r0, [sp, #60]	; 0x3c
   1eb0c:	b	1ea80 <main@@Base+0x8d4c>
   1eb10:	bne	1eb20 <main@@Base+0x8dec>
   1eb14:	ldrb	r0, [r7, #2]!
   1eb18:	cmp	r0, #32
   1eb1c:	bhi	1eb30 <main@@Base+0x8dfc>
   1eb20:	ldr	r0, [sp, #32]
   1eb24:	ldr	r2, [sp, #36]	; 0x24
   1eb28:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1eb2c:	mov	r7, r0
   1eb30:	cmp	r8, r7
   1eb34:	beq	1ed0c <main@@Base+0x8fd8>
   1eb38:	ldr	r0, [sp, #36]	; 0x24
   1eb3c:	mov	r6, #0
   1eb40:	str	r6, [fp, #-52]	; 0xffffffcc
   1eb44:	str	r6, [fp, #-56]	; 0xffffffc8
   1eb48:	str	r6, [sp, #52]	; 0x34
   1eb4c:	str	r6, [sp, #48]	; 0x30
   1eb50:	str	r6, [sp, #60]	; 0x3c
   1eb54:	cmp	r7, r0
   1eb58:	beq	1ebb8 <main@@Base+0x8e84>
   1eb5c:	sub	r0, fp, #56	; 0x38
   1eb60:	ldr	r2, [sp, #36]	; 0x24
   1eb64:	mov	r1, r7
   1eb68:	add	r3, sp, #60	; 0x3c
   1eb6c:	str	r0, [sp]
   1eb70:	ldr	r0, [sp, #32]
   1eb74:	bl	3314c <flatcc_json_parser_integer@@Base>
   1eb78:	cmp	r0, r7
   1eb7c:	beq	1ebc0 <main@@Base+0x8e8c>
   1eb80:	mov	r8, r0
   1eb84:	ldr	r0, [sp, #60]	; 0x3c
   1eb88:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1eb8c:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1eb90:	cmp	r0, #0
   1eb94:	beq	1ebd0 <main@@Base+0x8e9c>
   1eb98:	subs	r0, r6, #1
   1eb9c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1eba0:	bcc	1ebfc <main@@Base+0x8ec8>
   1eba4:	ldr	r0, [sp, #32]
   1eba8:	ldr	r2, [sp, #36]	; 0x24
   1ebac:	mov	r1, r8
   1ebb0:	mov	r3, #8
   1ebb4:	b	1ebe8 <main@@Base+0x8eb4>
   1ebb8:	ldr	r8, [sp, #36]	; 0x24
   1ebbc:	b	1ebf4 <main@@Base+0x8ec0>
   1ebc0:	mov	r6, #0
   1ebc4:	mov	r5, #0
   1ebc8:	mov	r8, r7
   1ebcc:	b	1ec0c <main@@Base+0x8ed8>
   1ebd0:	cmn	r5, #1
   1ebd4:	bgt	1ec04 <main@@Base+0x8ed0>
   1ebd8:	ldr	r0, [sp, #32]
   1ebdc:	ldr	r2, [sp, #36]	; 0x24
   1ebe0:	mov	r1, r8
   1ebe4:	mov	r3, #7
   1ebe8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1ebec:	mov	r8, r0
   1ebf0:	mov	r6, #0
   1ebf4:	mov	r5, #0
   1ebf8:	b	1ec0c <main@@Base+0x8ed8>
   1ebfc:	rsbs	r6, r6, #0
   1ec00:	rsc	r5, r5, #0
   1ec04:	str	r6, [sp, #48]	; 0x30
   1ec08:	str	r5, [sp, #52]	; 0x34
   1ec0c:	cmp	r7, r8
   1ec10:	bne	1ec50 <main@@Base+0x8f1c>
   1ec14:	add	r0, sp, #48	; 0x30
   1ec18:	ldr	r2, [sp, #36]	; 0x24
   1ec1c:	movw	r3, #33592	; 0x8338
   1ec20:	mov	r1, r7
   1ec24:	str	r0, [sp]
   1ec28:	ldr	r0, [sp, #32]
   1ec2c:	movt	r3, #5
   1ec30:	bl	233f0 <main@@Base+0xd6bc>
   1ec34:	cmp	r0, r7
   1ec38:	mov	r8, r0
   1ec3c:	ldrne	r0, [sp, #36]	; 0x24
   1ec40:	cmpne	r8, r0
   1ec44:	beq	1edf4 <main@@Base+0x90c0>
   1ec48:	ldr	r6, [sp, #48]	; 0x30
   1ec4c:	ldr	r5, [sp, #52]	; 0x34
   1ec50:	orrs	r0, r6, r5
   1ec54:	bne	1ec68 <main@@Base+0x8f34>
   1ec58:	ldr	r0, [sp, #32]
   1ec5c:	ldrb	r0, [r0, #8]
   1ec60:	tst	r0, #2
   1ec64:	beq	1ed00 <main@@Base+0x8fcc>
   1ec68:	ldr	r0, [sp, #32]
   1ec6c:	mov	r1, #1
   1ec70:	mov	r2, #8
   1ec74:	mov	r3, #8
   1ec78:	ldr	r0, [r0]
   1ec7c:	bl	2e760 <flatcc_builder_table_add@@Base>
   1ec80:	cmp	r0, #0
   1ec84:	beq	1edf4 <main@@Base+0x90c0>
   1ec88:	str	r6, [r0]
   1ec8c:	str	r5, [r0, #4]
   1ec90:	b	1ed00 <main@@Base+0x8fcc>
   1ec94:	bne	1eca4 <main@@Base+0x8f70>
   1ec98:	ldrb	r0, [r1, #2]!
   1ec9c:	cmp	r0, #32
   1eca0:	bhi	1ecb8 <main@@Base+0x8f84>
   1eca4:	mov	r1, r2
   1eca8:	ldr	r0, [sp, #32]
   1ecac:	ldr	r2, [sp, #36]	; 0x24
   1ecb0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1ecb4:	mov	r1, r0
   1ecb8:	cmp	r8, r1
   1ecbc:	beq	1ed0c <main@@Base+0x8fd8>
   1ecc0:	ldr	r0, [sp, #32]
   1ecc4:	ldr	r2, [sp, #36]	; 0x24
   1ecc8:	add	r3, sp, #56	; 0x38
   1eccc:	bl	33678 <flatcc_json_parser_build_string@@Base>
   1ecd0:	mov	r8, r0
   1ecd4:	ldr	r0, [sp, #56]	; 0x38
   1ecd8:	cmp	r0, #0
   1ecdc:	beq	1edf4 <main@@Base+0x90c0>
   1ece0:	ldr	r0, [sp, #32]
   1ece4:	mov	r1, #0
   1ece8:	ldr	r0, [r0]
   1ecec:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   1ecf0:	cmp	r0, #0
   1ecf4:	beq	1edf4 <main@@Base+0x90c0>
   1ecf8:	ldr	r1, [sp, #56]	; 0x38
   1ecfc:	str	r1, [r0]
   1ed00:	ldr	r5, [sp, #36]	; 0x24
   1ed04:	ldr	sl, [sp, #32]
   1ed08:	b	1ed28 <main@@Base+0x8ff4>
   1ed0c:	ldr	sl, [sp, #32]
   1ed10:	ldr	r5, [sp, #36]	; 0x24
   1ed14:	mov	r1, r8
   1ed18:	mov	r0, sl
   1ed1c:	mov	r2, r5
   1ed20:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   1ed24:	mov	r8, r0
   1ed28:	sub	r0, r5, r8
   1ed2c:	cmp	r0, #2
   1ed30:	blt	1ed5c <main@@Base+0x9028>
   1ed34:	ldrb	r0, [r8]
   1ed38:	cmp	r0, #32
   1ed3c:	bls	1ed48 <main@@Base+0x9014>
   1ed40:	mov	r7, r8
   1ed44:	b	1ed70 <main@@Base+0x903c>
   1ed48:	bne	1ed5c <main@@Base+0x9028>
   1ed4c:	mov	r7, r8
   1ed50:	ldrb	r0, [r7, #1]!
   1ed54:	cmp	r0, #32
   1ed58:	bhi	1ed70 <main@@Base+0x903c>
   1ed5c:	mov	r0, sl
   1ed60:	mov	r1, r8
   1ed64:	mov	r2, r5
   1ed68:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1ed6c:	mov	r7, r0
   1ed70:	cmp	r7, r5
   1ed74:	beq	1f0a4 <main@@Base+0x9370>
   1ed78:	ldrb	r0, [r7]
   1ed7c:	cmp	r0, #44	; 0x2c
   1ed80:	bne	1f0ac <main@@Base+0x9378>
   1ed84:	add	r1, r7, #1
   1ed88:	sub	r0, r5, r1
   1ed8c:	cmp	r0, #2
   1ed90:	blt	1edc4 <main@@Base+0x9090>
   1ed94:	ldrb	r0, [r1]
   1ed98:	cmp	r0, #32
   1ed9c:	bls	1edac <main@@Base+0x9078>
   1eda0:	ldr	r5, [sp, #36]	; 0x24
   1eda4:	mov	r7, r1
   1eda8:	b	1edd4 <main@@Base+0x90a0>
   1edac:	ldr	r5, [sp, #36]	; 0x24
   1edb0:	ldr	sl, [sp, #32]
   1edb4:	bne	1edc4 <main@@Base+0x9090>
   1edb8:	ldrb	r0, [r7, #2]!
   1edbc:	cmp	r0, #32
   1edc0:	bhi	1edd4 <main@@Base+0x90a0>
   1edc4:	mov	r0, sl
   1edc8:	mov	r2, r5
   1edcc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1edd0:	mov	r7, r0
   1edd4:	cmp	r7, r5
   1edd8:	beq	1f110 <main@@Base+0x93dc>
   1eddc:	ldrb	r0, [r7]
   1ede0:	cmp	r0, #125	; 0x7d
   1ede4:	bne	1e638 <main@@Base+0x8904>
   1ede8:	add	r1, r7, #1
   1edec:	sub	r0, r5, r1
   1edf0:	b	1f0c0 <main@@Base+0x938c>
   1edf4:	ldr	r6, [sp, #36]	; 0x24
   1edf8:	ldr	sl, [sp, #32]
   1edfc:	mov	r0, sl
   1ee00:	mov	r1, r8
   1ee04:	mov	r2, r6
   1ee08:	mov	r3, #33	; 0x21
   1ee0c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1ee10:	mov	r8, r0
   1ee14:	ldr	r0, [sp, #44]	; 0x2c
   1ee18:	cmp	r0, #0
   1ee1c:	beq	16624 <main@@Base+0x8f0>
   1ee20:	ldr	r0, [sl]
   1ee24:	mov	r1, #14
   1ee28:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   1ee2c:	cmp	r0, #0
   1ee30:	beq	16624 <main@@Base+0x8f0>
   1ee34:	ldr	r1, [sp, #44]	; 0x2c
   1ee38:	mov	r9, r8
   1ee3c:	b	18ec0 <main@@Base+0x318c>
   1ee40:	ldr	r6, [sp, #36]	; 0x24
   1ee44:	ldr	sl, [sp, #32]
   1ee48:	bne	1ee5c <main@@Base+0x9128>
   1ee4c:	ldrb	r0, [r2, #2]!
   1ee50:	mov	r8, r2
   1ee54:	cmp	r0, #32
   1ee58:	bhi	1aba0 <main@@Base+0x4e6c>
   1ee5c:	mov	r0, sl
   1ee60:	mov	r2, r6
   1ee64:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1ee68:	b	1ab9c <main@@Base+0x4e68>
   1ee6c:	ldr	r6, [sp, #36]	; 0x24
   1ee70:	ldr	sl, [sp, #32]
   1ee74:	bne	1ee88 <main@@Base+0x9154>
   1ee78:	ldrb	r0, [r8, #2]!
   1ee7c:	mov	r9, r8
   1ee80:	cmp	r0, #32
   1ee84:	bhi	1ac54 <main@@Base+0x4f20>
   1ee88:	mov	r0, sl
   1ee8c:	mov	r2, r6
   1ee90:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1ee94:	b	1ac50 <main@@Base+0x4f1c>
   1ee98:	ldr	sl, [sp, #32]
   1ee9c:	ldr	r6, [sp, #36]	; 0x24
   1eea0:	mov	r1, r2
   1eea4:	mov	r0, sl
   1eea8:	mov	r2, r6
   1eeac:	mov	r3, #10
   1eeb0:	b	1aaa8 <main@@Base+0x4d74>
   1eeb4:	ldr	sl, [sp, #32]
   1eeb8:	ldr	r6, [sp, #36]	; 0x24
   1eebc:	mov	r1, r2
   1eec0:	mov	r0, sl
   1eec4:	mov	r2, r6
   1eec8:	mov	r3, #9
   1eecc:	b	1be14 <main@@Base+0x60e0>
   1eed0:	ldr	r0, [sp, #32]
   1eed4:	ldr	r2, [sp, #36]	; 0x24
   1eed8:	mov	r1, r8
   1eedc:	mov	r3, #9
   1eee0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1eee4:	b	1f094 <main@@Base+0x9360>
   1eee8:	ldr	r5, [fp, #-56]	; 0xffffffc8
   1eeec:	mov	r9, r1
   1eef0:	str	r5, [sp, #60]	; 0x3c
   1eef4:	b	1e0ac <main@@Base+0x8378>
   1eef8:	ldr	sl, [sp, #32]
   1eefc:	ldr	r6, [sp, #36]	; 0x24
   1ef00:	mov	r1, r2
   1ef04:	mov	r0, sl
   1ef08:	mov	r2, r6
   1ef0c:	mov	r3, #9
   1ef10:	b	1c23c <main@@Base+0x6508>
   1ef14:	ldr	r9, [sp, #36]	; 0x24
   1ef18:	b	1f1dc <main@@Base+0x94a8>
   1ef1c:	ldr	r0, [sp, #32]
   1ef20:	ldr	r2, [sp, #36]	; 0x24
   1ef24:	mov	r1, r9
   1ef28:	mov	r3, #9
   1ef2c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1ef30:	b	1f13c <main@@Base+0x9408>
   1ef34:	cmp	r0, #93	; 0x5d
   1ef38:	bne	1f178 <main@@Base+0x9444>
   1ef3c:	ldr	r0, [sp, #36]	; 0x24
   1ef40:	add	r1, r9, #1
   1ef44:	sub	r0, r0, r1
   1ef48:	cmp	r0, #2
   1ef4c:	blt	1f1cc <main@@Base+0x9498>
   1ef50:	ldrb	r0, [r1]
   1ef54:	cmp	r0, #32
   1ef58:	bls	1f1bc <main@@Base+0x9488>
   1ef5c:	mov	r9, r1
   1ef60:	b	1f1dc <main@@Base+0x94a8>
   1ef64:	ldr	r1, [sp, #36]	; 0x24
   1ef68:	ldr	r0, [sp, #32]
   1ef6c:	mov	r2, r1
   1ef70:	b	1f184 <main@@Base+0x9450>
   1ef74:	ldr	sl, [sp, #32]
   1ef78:	ldr	r6, [sp, #36]	; 0x24
   1ef7c:	mov	r1, r3
   1ef80:	mov	r0, sl
   1ef84:	mov	r2, r6
   1ef88:	mov	r3, #10
   1ef8c:	b	1b1bc <main@@Base+0x5488>
   1ef90:	ldr	r9, [sp, #36]	; 0x24
   1ef94:	b	1efe8 <main@@Base+0x92b4>
   1ef98:	cmp	r0, #93	; 0x5d
   1ef9c:	bne	1f190 <main@@Base+0x945c>
   1efa0:	ldr	r0, [sp, #36]	; 0x24
   1efa4:	add	r1, r9, #1
   1efa8:	sub	r0, r0, r1
   1efac:	cmp	r0, #2
   1efb0:	blt	1efd8 <main@@Base+0x92a4>
   1efb4:	ldrb	r0, [r1]
   1efb8:	cmp	r0, #32
   1efbc:	bls	1efc8 <main@@Base+0x9294>
   1efc0:	mov	r9, r1
   1efc4:	b	1efe8 <main@@Base+0x92b4>
   1efc8:	bne	1efd8 <main@@Base+0x92a4>
   1efcc:	ldrb	r0, [r9, #2]!
   1efd0:	cmp	r0, #32
   1efd4:	bhi	1efe8 <main@@Base+0x92b4>
   1efd8:	ldr	r0, [sp, #32]
   1efdc:	ldr	r2, [sp, #36]	; 0x24
   1efe0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1efe4:	mov	r9, r0
   1efe8:	ldr	sl, [sp, #32]
   1efec:	ldr	r0, [sl]
   1eff0:	bl	2e174 <flatcc_builder_end_vector@@Base>
   1eff4:	ldr	r6, [sp, #36]	; 0x24
   1eff8:	cmp	r0, #0
   1effc:	str	r0, [sp, #44]	; 0x2c
   1f000:	beq	1f2e4 <main@@Base+0x95b0>
   1f004:	ldr	r0, [sl]
   1f008:	mov	r1, #13
   1f00c:	b	18eb0 <main@@Base+0x317c>
   1f010:	ldr	r6, [sp, #36]	; 0x24
   1f014:	ldr	sl, [sp, #32]
   1f018:	bne	1f02c <main@@Base+0x92f8>
   1f01c:	ldrb	r0, [r2, #2]!
   1f020:	mov	r8, r2
   1f024:	cmp	r0, #32
   1f028:	bhi	1aab0 <main@@Base+0x4d7c>
   1f02c:	mov	r0, sl
   1f030:	mov	r2, r6
   1f034:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1f038:	b	1aaac <main@@Base+0x4d78>
   1f03c:	ldr	r1, [sp, #36]	; 0x24
   1f040:	ldr	r0, [sp, #32]
   1f044:	mov	r2, r1
   1f048:	b	1f19c <main@@Base+0x9468>
   1f04c:	ldr	r6, [sp, #36]	; 0x24
   1f050:	ldr	sl, [sp, #32]
   1f054:	bne	1f068 <main@@Base+0x9334>
   1f058:	ldrb	r0, [r2, #2]!
   1f05c:	mov	r8, r2
   1f060:	cmp	r0, #32
   1f064:	bhi	1be1c <main@@Base+0x60e8>
   1f068:	mov	r0, sl
   1f06c:	mov	r2, r6
   1f070:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1f074:	b	1be18 <main@@Base+0x60e4>
   1f078:	bne	1f088 <main@@Base+0x9354>
   1f07c:	ldrb	r0, [r8, #2]!
   1f080:	cmp	r0, #32
   1f084:	bhi	1f098 <main@@Base+0x9364>
   1f088:	ldr	r0, [sp, #32]
   1f08c:	ldr	r2, [sp, #36]	; 0x24
   1f090:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1f094:	mov	r8, r0
   1f098:	ldr	r6, [sp, #36]	; 0x24
   1f09c:	ldr	sl, [sp, #32]
   1f0a0:	b	1c3dc <main@@Base+0x66a8>
   1f0a4:	mov	r7, r5
   1f0a8:	b	1c300 <main@@Base+0x65cc>
   1f0ac:	cmp	r0, #125	; 0x7d
   1f0b0:	bne	1f1a4 <main@@Base+0x9470>
   1f0b4:	ldr	r0, [sp, #36]	; 0x24
   1f0b8:	add	r1, r7, #1
   1f0bc:	sub	r0, r0, r1
   1f0c0:	ldr	sl, [sp, #32]
   1f0c4:	cmp	r0, #2
   1f0c8:	blt	1f1f8 <main@@Base+0x94c4>
   1f0cc:	ldrb	r0, [r1]
   1f0d0:	cmp	r0, #32
   1f0d4:	bls	1f1e4 <main@@Base+0x94b0>
   1f0d8:	ldr	sl, [sp, #32]
   1f0dc:	mov	r7, r1
   1f0e0:	b	1c300 <main@@Base+0x65cc>
   1f0e4:	ldr	r6, [sp, #36]	; 0x24
   1f0e8:	ldr	sl, [sp, #32]
   1f0ec:	bne	1f100 <main@@Base+0x93cc>
   1f0f0:	ldrb	r0, [r2, #2]!
   1f0f4:	mov	r8, r2
   1f0f8:	cmp	r0, #32
   1f0fc:	bhi	1c244 <main@@Base+0x6510>
   1f100:	mov	r0, sl
   1f104:	mov	r2, r6
   1f108:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1f10c:	b	1c240 <main@@Base+0x650c>
   1f110:	ldr	sl, [sp, #32]
   1f114:	mov	r1, r5
   1f118:	mov	r2, r5
   1f11c:	b	1f1b0 <main@@Base+0x947c>
   1f120:	bne	1f130 <main@@Base+0x93fc>
   1f124:	ldrb	r0, [r9, #2]!
   1f128:	cmp	r0, #32
   1f12c:	bhi	1f140 <main@@Base+0x940c>
   1f130:	ldr	r0, [sp, #32]
   1f134:	ldr	r2, [sp, #36]	; 0x24
   1f138:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1f13c:	mov	r9, r0
   1f140:	ldr	r6, [sp, #36]	; 0x24
   1f144:	ldr	sl, [sp, #32]
   1f148:	b	1c4d8 <main@@Base+0x67a4>
   1f14c:	ldr	r6, [sp, #36]	; 0x24
   1f150:	ldr	sl, [sp, #32]
   1f154:	bne	1f168 <main@@Base+0x9434>
   1f158:	ldrb	r0, [r3, #2]!
   1f15c:	mov	r8, r3
   1f160:	cmp	r0, #32
   1f164:	bhi	1b1c4 <main@@Base+0x5490>
   1f168:	mov	r0, sl
   1f16c:	mov	r2, r6
   1f170:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1f174:	b	1b1c0 <main@@Base+0x548c>
   1f178:	ldr	r0, [sp, #32]
   1f17c:	ldr	r2, [sp, #36]	; 0x24
   1f180:	mov	r1, r9
   1f184:	mov	r3, #9
   1f188:	bl	3133c <flatcc_json_parser_set_error@@Base>
   1f18c:	b	1f1d8 <main@@Base+0x94a4>
   1f190:	ldr	r0, [sp, #32]
   1f194:	ldr	r2, [sp, #36]	; 0x24
   1f198:	mov	r1, r9
   1f19c:	mov	r3, #9
   1f1a0:	b	1c6e8 <main@@Base+0x69b4>
   1f1a4:	ldr	sl, [sp, #32]
   1f1a8:	ldr	r2, [sp, #36]	; 0x24
   1f1ac:	mov	r1, r7
   1f1b0:	mov	r0, sl
   1f1b4:	mov	r3, #10
   1f1b8:	b	1c2f8 <main@@Base+0x65c4>
   1f1bc:	bne	1f1cc <main@@Base+0x9498>
   1f1c0:	ldrb	r0, [r9, #2]!
   1f1c4:	cmp	r0, #32
   1f1c8:	bhi	1f1dc <main@@Base+0x94a8>
   1f1cc:	ldr	r0, [sp, #32]
   1f1d0:	ldr	r2, [sp, #36]	; 0x24
   1f1d4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1f1d8:	mov	r9, r0
   1f1dc:	ldr	sl, [sp, #32]
   1f1e0:	b	1d804 <main@@Base+0x7ad0>
   1f1e4:	ldr	sl, [sp, #32]
   1f1e8:	bne	1f1f8 <main@@Base+0x94c4>
   1f1ec:	ldrb	r0, [r7, #2]!
   1f1f0:	cmp	r0, #32
   1f1f4:	bhi	1c300 <main@@Base+0x65cc>
   1f1f8:	ldr	r2, [sp, #36]	; 0x24
   1f1fc:	mov	r0, sl
   1f200:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1f204:	b	1c2fc <main@@Base+0x65c8>
   1f208:	ldr	r5, [sp, #28]
   1f20c:	mov	r8, r6
   1f210:	b	166c4 <main@@Base+0x990>
   1f214:	cmp	r0, #125	; 0x7d
   1f218:	bne	1f24c <main@@Base+0x9518>
   1f21c:	add	r1, r2, #1
   1f220:	sub	r0, r6, r1
   1f224:	cmp	r0, #2
   1f228:	blt	1f274 <main@@Base+0x9540>
   1f22c:	ldrb	r0, [r1]
   1f230:	cmp	r0, #32
   1f234:	bls	1f260 <main@@Base+0x952c>
   1f238:	mov	r8, r1
   1f23c:	b	166c4 <main@@Base+0x990>
   1f240:	mov	r0, sl
   1f244:	mov	r1, r6
   1f248:	b	1f254 <main@@Base+0x9520>
   1f24c:	mov	r0, sl
   1f250:	mov	r1, r2
   1f254:	mov	r2, r6
   1f258:	mov	r3, #10
   1f25c:	b	166bc <main@@Base+0x988>
   1f260:	bne	1f274 <main@@Base+0x9540>
   1f264:	ldrb	r0, [r2, #2]!
   1f268:	mov	r8, r2
   1f26c:	cmp	r0, #32
   1f270:	bhi	166c4 <main@@Base+0x990>
   1f274:	mov	r0, sl
   1f278:	mov	r2, r6
   1f27c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   1f280:	b	166c0 <main@@Base+0x98c>
   1f284:	mov	r9, r5
   1f288:	b	1f2e4 <main@@Base+0x95b0>
   1f28c:	mov	r8, r5
   1f290:	b	16624 <main@@Base+0x8f0>
   1f294:	mov	r8, r9
   1f298:	ldr	r6, [sp, #36]	; 0x24
   1f29c:	b	16624 <main@@Base+0x8f0>
   1f2a0:	ldr	sl, [sp, #32]
   1f2a4:	mov	r8, r1
   1f2a8:	b	16624 <main@@Base+0x8f0>
   1f2ac:	ldr	sl, [sp, #32]
   1f2b0:	mov	r9, r1
   1f2b4:	b	1f2e4 <main@@Base+0x95b0>
   1f2b8:	mov	r8, r6
   1f2bc:	b	1f2f4 <main@@Base+0x95c0>
   1f2c0:	ldr	r6, [sp, #36]	; 0x24
   1f2c4:	ldr	sl, [sp, #32]
   1f2c8:	mov	r8, r4
   1f2cc:	b	16624 <main@@Base+0x8f0>
   1f2d0:	mov	r9, r1
   1f2d4:	b	1f2f0 <main@@Base+0x95bc>
   1f2d8:	mov	r9, r6
   1f2dc:	ldr	r6, [sp, #36]	; 0x24
   1f2e0:	ldr	sl, [sp, #32]
   1f2e4:	mov	r8, r9
   1f2e8:	b	16624 <main@@Base+0x8f0>
   1f2ec:	mov	r9, r5
   1f2f0:	mov	r8, r9
   1f2f4:	ldr	r6, [sp, #36]	; 0x24
   1f2f8:	ldr	sl, [sp, #32]
   1f2fc:	b	16624 <main@@Base+0x8f0>
   1f300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f304:	add	fp, sp, #28
   1f308:	sub	sp, sp, #20
   1f30c:	mov	r5, r0
   1f310:	movw	r0, #43344	; 0xa950
   1f314:	movw	r3, #15183	; 0x3b4f
   1f318:	mov	r4, r1
   1f31c:	mov	r1, #3
   1f320:	mov	r2, #0
   1f324:	mov	r8, #0
   1f328:	movt	r0, #2
   1f32c:	movt	r3, #4
   1f330:	str	r1, [sp]
   1f334:	mov	r1, r4
   1f338:	str	r0, [sp, #4]
   1f33c:	mov	r0, r5
   1f340:	bl	3f588 <flatcc_json_printer_struct_field@@Base>
   1f344:	movw	r3, #15187	; 0x3b53
   1f348:	mov	r0, #150	; 0x96
   1f34c:	mov	r1, #4
   1f350:	mov	r2, #1
   1f354:	mov	r6, #4
   1f358:	movt	r3, #4
   1f35c:	str	r1, [sp]
   1f360:	str	r0, [sp, #4]
   1f364:	mov	r0, r5
   1f368:	mov	r1, r4
   1f36c:	bl	36e74 <flatcc_json_printer_int16_field@@Base>
   1f370:	movw	r3, #15192	; 0x3b58
   1f374:	mov	r0, #100	; 0x64
   1f378:	mov	r1, #2
   1f37c:	mov	r2, #2
   1f380:	movt	r3, #4
   1f384:	str	r1, [sp]
   1f388:	str	r0, [sp, #4]
   1f38c:	mov	r0, r5
   1f390:	mov	r1, r4
   1f394:	bl	36e74 <flatcc_json_printer_int16_field@@Base>
   1f398:	movw	r3, #15195	; 0x3b5b
   1f39c:	mov	r0, r5
   1f3a0:	mov	r1, r4
   1f3a4:	mov	r2, #3
   1f3a8:	str	r6, [sp]
   1f3ac:	movt	r3, #4
   1f3b0:	bl	365ec <flatcc_json_printer_string_field@@Base>
   1f3b4:	movw	r3, #15200	; 0x3b60
   1f3b8:	mov	r0, #9
   1f3bc:	mov	r1, r4
   1f3c0:	mov	r2, #5
   1f3c4:	mov	r7, #5
   1f3c8:	movt	r3, #4
   1f3cc:	str	r0, [sp]
   1f3d0:	mov	r0, r5
   1f3d4:	bl	38a9c <flatcc_json_printer_uint8_vector_field@@Base>
   1f3d8:	movw	r0, #43596	; 0xaa4c
   1f3dc:	movw	r3, #15210	; 0x3b6a
   1f3e0:	mov	r1, #8
   1f3e4:	mov	r2, #6
   1f3e8:	str	r7, [sp]
   1f3ec:	mov	r7, #5
   1f3f0:	movt	r0, #2
   1f3f4:	movt	r3, #4
   1f3f8:	str	r1, [sp, #4]
   1f3fc:	mov	r1, r4
   1f400:	str	r0, [sp, #8]
   1f404:	mov	r0, r5
   1f408:	bl	37794 <flatcc_json_printer_int8_enum_field@@Base>
   1f40c:	movw	r0, #43908	; 0xab84
   1f410:	movw	r1, #43792	; 0xab10
   1f414:	movw	r3, #15586	; 0x3ce2
   1f418:	mov	r2, #8
   1f41c:	str	r6, [sp]
   1f420:	movt	r0, #2
   1f424:	movt	r1, #2
   1f428:	movt	r3, #4
   1f42c:	str	r1, [sp, #4]
   1f430:	str	r0, [sp, #8]
   1f434:	mov	r0, r5
   1f438:	mov	r1, r4
   1f43c:	bl	3ed44 <flatcc_json_printer_union_field@@Base>
   1f440:	movw	r0, #43948	; 0xabac
   1f444:	movw	r3, #15216	; 0x3b70
   1f448:	mov	r1, r4
   1f44c:	mov	r2, #9
   1f450:	str	r7, [sp]
   1f454:	mov	sl, #5
   1f458:	str	r6, [sp, #4]
   1f45c:	movt	r0, #2
   1f460:	movt	r3, #4
   1f464:	str	r0, [sp, #8]
   1f468:	mov	r0, r5
   1f46c:	bl	3d9e4 <flatcc_json_printer_struct_vector_field@@Base>
   1f470:	movw	r3, #15222	; 0x3b76
   1f474:	mov	r7, #17
   1f478:	mov	r0, r5
   1f47c:	mov	r1, r4
   1f480:	mov	r2, #10
   1f484:	movt	r3, #4
   1f488:	str	r7, [sp]
   1f48c:	bl	3df7c <flatcc_json_printer_string_vector_field@@Base>
   1f490:	movw	r3, #15240	; 0x3b88
   1f494:	movw	r9, #62208	; 0xf300
   1f498:	mov	r0, r5
   1f49c:	mov	r1, r4
   1f4a0:	mov	r2, #11
   1f4a4:	movt	r3, #4
   1f4a8:	movt	r9, #1
   1f4ac:	stm	sp, {r7, r9}
   1f4b0:	bl	3e330 <flatcc_json_printer_table_vector_field@@Base>
   1f4b4:	movw	r3, #15258	; 0x3b9a
   1f4b8:	mov	r0, r5
   1f4bc:	mov	r1, r4
   1f4c0:	mov	r2, #12
   1f4c4:	str	sl, [sp]
   1f4c8:	mov	sl, #5
   1f4cc:	str	r9, [sp, #4]
   1f4d0:	movt	r3, #4
   1f4d4:	bl	3eb64 <flatcc_json_printer_table_field@@Base>
   1f4d8:	movw	r3, #15264	; 0x3ba0
   1f4dc:	mov	r0, #20
   1f4e0:	mov	r1, r4
   1f4e4:	mov	r2, #13
   1f4e8:	movt	r3, #4
   1f4ec:	stm	sp, {r0, r8, r9}
   1f4f0:	mov	r0, r5
   1f4f4:	bl	3fcc4 <flatcc_json_printer_table_as_nested_root@@Base>
   1f4f8:	movw	r0, #44044	; 0xac0c
   1f4fc:	movw	r3, #15285	; 0x3bb5
   1f500:	mov	r1, #9
   1f504:	mov	r2, #14
   1f508:	movt	r0, #2
   1f50c:	movt	r3, #4
   1f510:	str	r1, [sp]
   1f514:	mov	r1, r4
   1f518:	str	r0, [sp, #4]
   1f51c:	mov	r0, r5
   1f520:	bl	3eb64 <flatcc_json_printer_table_field@@Base>
   1f524:	movw	r3, #15295	; 0x3bbf
   1f528:	mov	r0, #1
   1f52c:	mov	r9, #8
   1f530:	mov	r1, r4
   1f534:	mov	r2, #15
   1f538:	movt	r3, #4
   1f53c:	str	r0, [sp, #4]
   1f540:	mov	r0, r5
   1f544:	str	r9, [sp]
   1f548:	bl	37134 <flatcc_json_printer_bool_field@@Base>
   1f54c:	movw	r3, #15304	; 0x3bc8
   1f550:	mov	r6, #16
   1f554:	mov	r0, r5
   1f558:	mov	r1, r4
   1f55c:	mov	r2, #16
   1f560:	movt	r3, #4
   1f564:	stm	sp, {r6, r8}
   1f568:	bl	36f5c <flatcc_json_printer_int32_field@@Base>
   1f56c:	movw	r3, #15321	; 0x3bd9
   1f570:	mov	r0, r5
   1f574:	mov	r1, r4
   1f578:	mov	r2, #17
   1f57c:	stm	sp, {r6, r8}
   1f580:	movt	r3, #4
   1f584:	bl	36be8 <flatcc_json_printer_uint32_field@@Base>
   1f588:	movw	r3, #15338	; 0x3bea
   1f58c:	mov	r0, r5
   1f590:	mov	r1, r4
   1f594:	mov	r2, #18
   1f598:	str	r8, [sp, #8]
   1f59c:	str	r8, [sp, #12]
   1f5a0:	str	r6, [sp]
   1f5a4:	movt	r3, #4
   1f5a8:	bl	37038 <flatcc_json_printer_int64_field@@Base>
   1f5ac:	movw	r3, #15355	; 0x3bfb
   1f5b0:	mov	r0, r5
   1f5b4:	mov	r1, r4
   1f5b8:	mov	r2, #19
   1f5bc:	str	r8, [sp, #8]
   1f5c0:	str	r8, [sp, #12]
   1f5c4:	str	r6, [sp]
   1f5c8:	movt	r3, #4
   1f5cc:	bl	36cac <flatcc_json_printer_uint64_field@@Base>
   1f5d0:	movw	r3, #15372	; 0x3c0c
   1f5d4:	mov	r0, r5
   1f5d8:	mov	r1, r4
   1f5dc:	mov	r2, #20
   1f5e0:	stm	sp, {r7, r8}
   1f5e4:	movt	r3, #4
   1f5e8:	bl	36f5c <flatcc_json_printer_int32_field@@Base>
   1f5ec:	movw	r3, #15390	; 0x3c1e
   1f5f0:	mov	r0, r5
   1f5f4:	mov	r1, r4
   1f5f8:	mov	r2, #21
   1f5fc:	stm	sp, {r7, r8}
   1f600:	movt	r3, #4
   1f604:	bl	36be8 <flatcc_json_printer_uint32_field@@Base>
   1f608:	movw	r3, #15408	; 0x3c30
   1f60c:	mov	r0, r5
   1f610:	mov	r1, r4
   1f614:	mov	r2, #22
   1f618:	str	r8, [sp, #8]
   1f61c:	str	r8, [sp, #12]
   1f620:	str	r7, [sp]
   1f624:	movt	r3, #4
   1f628:	bl	37038 <flatcc_json_printer_int64_field@@Base>
   1f62c:	movw	r3, #15426	; 0x3c42
   1f630:	mov	r0, r5
   1f634:	mov	r1, r4
   1f638:	mov	r2, #23
   1f63c:	str	r8, [sp, #8]
   1f640:	str	r8, [sp, #12]
   1f644:	str	r7, [sp]
   1f648:	mov	r8, #23
   1f64c:	movt	r3, #4
   1f650:	bl	36cac <flatcc_json_printer_uint64_field@@Base>
   1f654:	movw	r3, #15444	; 0x3c54
   1f658:	mov	r0, r5
   1f65c:	mov	r1, r4
   1f660:	mov	r2, #24
   1f664:	str	r6, [sp]
   1f668:	movt	r3, #4
   1f66c:	bl	3a920 <flatcc_json_printer_bool_vector_field@@Base>
   1f670:	vldr	s0, [pc, #396]	; 1f804 <main@@Base+0x9ad0>
   1f674:	movw	r3, #15461	; 0x3c65
   1f678:	mov	r0, r5
   1f67c:	mov	r1, r4
   1f680:	mov	r2, #25
   1f684:	str	sl, [sp]
   1f688:	movt	r3, #4
   1f68c:	bl	3722c <flatcc_json_printer_float_field@@Base>
   1f690:	movw	r3, #15467	; 0x3c6b
   1f694:	vmov.f32	s0, #8	; 0x40400000  3.0
   1f698:	mov	r6, #6
   1f69c:	mov	r0, r5
   1f6a0:	mov	r1, r4
   1f6a4:	mov	r2, #26
   1f6a8:	movt	r3, #4
   1f6ac:	str	r6, [sp]
   1f6b0:	bl	3722c <flatcc_json_printer_float_field@@Base>
   1f6b4:	vldr	s0, [pc, #332]	; 1f808 <main@@Base+0x9ad4>
   1f6b8:	movw	r3, #15474	; 0x3c72
   1f6bc:	mov	r0, r5
   1f6c0:	mov	r1, r4
   1f6c4:	mov	r2, #27
   1f6c8:	str	r6, [sp]
   1f6cc:	movt	r3, #4
   1f6d0:	bl	3722c <flatcc_json_printer_float_field@@Base>
   1f6d4:	movw	r3, #15481	; 0x3c79
   1f6d8:	mov	r0, #18
   1f6dc:	mov	r1, r4
   1f6e0:	mov	r2, #28
   1f6e4:	movt	r3, #4
   1f6e8:	str	r0, [sp]
   1f6ec:	mov	r0, r5
   1f6f0:	bl	3df7c <flatcc_json_printer_string_vector_field@@Base>
   1f6f4:	movw	r0, #44176	; 0xac90
   1f6f8:	movw	r3, #15500	; 0x3c8c
   1f6fc:	stm	sp, {r8, r9}
   1f700:	mov	r1, r4
   1f704:	mov	r2, #29
   1f708:	movt	r0, #2
   1f70c:	movt	r3, #4
   1f710:	str	r0, [sp, #8]
   1f714:	mov	r0, r5
   1f718:	bl	3d9e4 <flatcc_json_printer_struct_vector_field@@Base>
   1f71c:	movw	r3, #15524	; 0x3ca4
   1f720:	mov	r6, #4
   1f724:	mov	r0, r5
   1f728:	mov	r1, r4
   1f72c:	mov	r2, #30
   1f730:	movt	r3, #4
   1f734:	str	r6, [sp]
   1f738:	bl	38a9c <flatcc_json_printer_uint8_vector_field@@Base>
   1f73c:	movw	r0, #43948	; 0xabac
   1f740:	movw	r3, #15529	; 0x3ca9
   1f744:	mov	r1, r4
   1f748:	mov	r2, #31
   1f74c:	str	sl, [sp]
   1f750:	str	r6, [sp, #4]
   1f754:	movt	r0, #2
   1f758:	movt	r3, #4
   1f75c:	str	r0, [sp, #8]
   1f760:	mov	r0, r5
   1f764:	bl	3d9e4 <flatcc_json_printer_struct_vector_field@@Base>
   1f768:	movw	r3, #15535	; 0x3caf
   1f76c:	mov	r0, #15
   1f770:	mov	r1, r4
   1f774:	mov	r2, #32
   1f778:	movt	r3, #4
   1f77c:	str	r0, [sp]
   1f780:	mov	r0, r5
   1f784:	bl	3a52c <flatcc_json_printer_int64_vector_field@@Base>
   1f788:	movw	r3, #15551	; 0x3cbf
   1f78c:	mov	r0, r5
   1f790:	mov	r1, r4
   1f794:	mov	r2, #33	; 0x21
   1f798:	str	r7, [sp]
   1f79c:	movt	r3, #4
   1f7a0:	bl	3b0f8 <flatcc_json_printer_double_vector_field@@Base>
   1f7a4:	movw	r0, #44284	; 0xacfc
   1f7a8:	movw	r3, #15569	; 0x3cd1
   1f7ac:	mov	r1, #21
   1f7b0:	mov	r2, #34	; 0x22
   1f7b4:	movt	r0, #2
   1f7b8:	movt	r3, #4
   1f7bc:	str	r1, [sp]
   1f7c0:	mov	r1, r4
   1f7c4:	str	r0, [sp, #4]
   1f7c8:	mov	r0, r5
   1f7cc:	bl	3eb64 <flatcc_json_printer_table_field@@Base>
   1f7d0:	movw	r0, #44288	; 0xad00
   1f7d4:	movw	r3, #15591	; 0x3ce7
   1f7d8:	mov	r1, #10
   1f7dc:	mov	r2, #35	; 0x23
   1f7e0:	movt	r0, #2
   1f7e4:	movt	r3, #4
   1f7e8:	str	r1, [sp]
   1f7ec:	mov	r1, r4
   1f7f0:	str	r0, [sp, #4]
   1f7f4:	mov	r0, r5
   1f7f8:	bl	3eb64 <flatcc_json_printer_table_field@@Base>
   1f7fc:	sub	sp, fp, #28
   1f800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f804:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   1f808:	andeq	r0, r0, r0
   1f80c:	push	{r4, r5, r6, r7, fp, lr}
   1f810:	add	fp, sp, #16
   1f814:	sub	sp, sp, #8
   1f818:	mov	r1, #0
   1f81c:	mov	r2, #32
   1f820:	mov	r3, #16
   1f824:	mov	r4, r0
   1f828:	bl	2fbe8 <flatcc_verify_field@@Base>
   1f82c:	cmp	r0, #0
   1f830:	bne	1fc38 <main@@Base+0x9f04>
   1f834:	mov	r0, r4
   1f838:	mov	r1, #2
   1f83c:	mov	r2, #2
   1f840:	mov	r3, #2
   1f844:	bl	2fbe8 <flatcc_verify_field@@Base>
   1f848:	cmp	r0, #0
   1f84c:	bne	1fc38 <main@@Base+0x9f04>
   1f850:	mov	r0, r4
   1f854:	mov	r1, #1
   1f858:	mov	r2, #2
   1f85c:	mov	r3, #2
   1f860:	bl	2fbe8 <flatcc_verify_field@@Base>
   1f864:	cmp	r0, #0
   1f868:	bne	1fc38 <main@@Base+0x9f04>
   1f86c:	mov	r0, r4
   1f870:	mov	r1, #3
   1f874:	mov	r2, #1
   1f878:	bl	2fc60 <flatcc_verify_string_field@@Base>
   1f87c:	cmp	r0, #0
   1f880:	bne	1fc38 <main@@Base+0x9f04>
   1f884:	mov	r0, r4
   1f888:	mov	r1, #6
   1f88c:	mov	r2, #1
   1f890:	mov	r3, #1
   1f894:	mov	r5, #1
   1f898:	bl	2fbe8 <flatcc_verify_field@@Base>
   1f89c:	cmp	r0, #0
   1f8a0:	bne	1fc38 <main@@Base+0x9f04>
   1f8a4:	mvn	r0, #0
   1f8a8:	mov	r1, #5
   1f8ac:	mov	r2, #0
   1f8b0:	mov	r3, #1
   1f8b4:	str	r5, [sp]
   1f8b8:	str	r0, [sp, #4]
   1f8bc:	mov	r0, r4
   1f8c0:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   1f8c4:	cmp	r0, #0
   1f8c8:	bne	1fc38 <main@@Base+0x9f04>
   1f8cc:	movw	r3, #63500	; 0xf80c
   1f8d0:	mov	r0, r4
   1f8d4:	mov	r1, #11
   1f8d8:	mov	r2, #0
   1f8dc:	movt	r3, #1
   1f8e0:	bl	30048 <flatcc_verify_table_vector_field@@Base>
   1f8e4:	cmp	r0, #0
   1f8e8:	bne	1fc38 <main@@Base+0x9f04>
   1f8ec:	mov	r0, r4
   1f8f0:	mov	r1, #10
   1f8f4:	mov	r2, #0
   1f8f8:	bl	2fe14 <flatcc_verify_string_vector_field@@Base>
   1f8fc:	cmp	r0, #0
   1f900:	bne	1fc38 <main@@Base+0x9f04>
   1f904:	mov	r0, r4
   1f908:	mov	r1, #28
   1f90c:	mov	r2, #0
   1f910:	bl	2fe14 <flatcc_verify_string_vector_field@@Base>
   1f914:	cmp	r0, #0
   1f918:	bne	1fc38 <main@@Base+0x9f04>
   1f91c:	mvn	r0, #0
   1f920:	mov	r1, #1
   1f924:	mov	r2, #0
   1f928:	mov	r3, #1
   1f92c:	str	r1, [sp]
   1f930:	str	r0, [sp, #4]
   1f934:	mov	r0, r4
   1f938:	mov	r1, #24
   1f93c:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   1f940:	cmp	r0, #0
   1f944:	bne	1fc38 <main@@Base+0x9f04>
   1f948:	mvn	r0, #-536870912	; 0xe0000000
   1f94c:	mov	r1, #4
   1f950:	mov	r2, #0
   1f954:	mov	r3, #8
   1f958:	str	r1, [sp]
   1f95c:	str	r0, [sp, #4]
   1f960:	mov	r0, r4
   1f964:	mov	r1, #29
   1f968:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   1f96c:	cmp	r0, #0
   1f970:	bne	1fc38 <main@@Base+0x9f04>
   1f974:	movw	r5, #63500	; 0xf80c
   1f978:	mov	r0, r4
   1f97c:	mov	r1, #12
   1f980:	mov	r2, #0
   1f984:	movt	r5, #1
   1f988:	mov	r3, r5
   1f98c:	bl	2ff48 <flatcc_verify_table_field@@Base>
   1f990:	cmp	r0, #0
   1f994:	bne	1fc38 <main@@Base+0x9f04>
   1f998:	movw	r3, #46128	; 0xb430
   1f99c:	mov	r0, r4
   1f9a0:	mov	r1, #8
   1f9a4:	mov	r2, #0
   1f9a8:	movt	r3, #2
   1f9ac:	bl	30acc <flatcc_verify_union_field@@Base>
   1f9b0:	cmp	r0, #0
   1f9b4:	bne	1fc38 <main@@Base+0x9f04>
   1f9b8:	mvn	r6, #-1073741824	; 0xc0000000
   1f9bc:	mov	r7, #2
   1f9c0:	mov	r0, r4
   1f9c4:	mov	r1, #9
   1f9c8:	mov	r2, #0
   1f9cc:	mov	r3, #4
   1f9d0:	str	r7, [sp]
   1f9d4:	str	r6, [sp, #4]
   1f9d8:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   1f9dc:	cmp	r0, #0
   1f9e0:	bne	1fc38 <main@@Base+0x9f04>
   1f9e4:	mov	r0, r4
   1f9e8:	mov	r1, #31
   1f9ec:	mov	r2, #0
   1f9f0:	mov	r3, #4
   1f9f4:	str	r7, [sp]
   1f9f8:	str	r6, [sp, #4]
   1f9fc:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   1fa00:	cmp	r0, #0
   1fa04:	bne	1fc38 <main@@Base+0x9f04>
   1fa08:	mov	r0, #1
   1fa0c:	mov	r1, #13
   1fa10:	mov	r2, #0
   1fa14:	mov	r3, #0
   1fa18:	stm	sp, {r0, r5}
   1fa1c:	mov	r0, r4
   1fa20:	bl	3091c <flatcc_verify_table_as_nested_root@@Base>
   1fa24:	cmp	r0, #0
   1fa28:	bne	1fc38 <main@@Base+0x9f04>
   1fa2c:	movw	r3, #46172	; 0xb45c
   1fa30:	mov	r0, r4
   1fa34:	mov	r1, #14
   1fa38:	mov	r2, #0
   1fa3c:	movt	r3, #2
   1fa40:	bl	2ff48 <flatcc_verify_table_field@@Base>
   1fa44:	cmp	r0, #0
   1fa48:	bne	1fc38 <main@@Base+0x9f04>
   1fa4c:	mov	r0, r4
   1fa50:	mov	r1, #15
   1fa54:	mov	r2, #1
   1fa58:	mov	r3, #1
   1fa5c:	bl	2fbe8 <flatcc_verify_field@@Base>
   1fa60:	cmp	r0, #0
   1fa64:	bne	1fc38 <main@@Base+0x9f04>
   1fa68:	mov	r0, r4
   1fa6c:	mov	r1, #16
   1fa70:	mov	r2, #4
   1fa74:	mov	r3, #4
   1fa78:	bl	2fbe8 <flatcc_verify_field@@Base>
   1fa7c:	cmp	r0, #0
   1fa80:	bne	1fc38 <main@@Base+0x9f04>
   1fa84:	mov	r0, r4
   1fa88:	mov	r1, #17
   1fa8c:	mov	r2, #4
   1fa90:	mov	r3, #4
   1fa94:	bl	2fbe8 <flatcc_verify_field@@Base>
   1fa98:	cmp	r0, #0
   1fa9c:	bne	1fc38 <main@@Base+0x9f04>
   1faa0:	mov	r0, r4
   1faa4:	mov	r1, #18
   1faa8:	mov	r2, #8
   1faac:	mov	r3, #8
   1fab0:	bl	2fbe8 <flatcc_verify_field@@Base>
   1fab4:	cmp	r0, #0
   1fab8:	bne	1fc38 <main@@Base+0x9f04>
   1fabc:	mov	r0, r4
   1fac0:	mov	r1, #19
   1fac4:	mov	r2, #8
   1fac8:	mov	r3, #8
   1facc:	bl	2fbe8 <flatcc_verify_field@@Base>
   1fad0:	cmp	r0, #0
   1fad4:	bne	1fc38 <main@@Base+0x9f04>
   1fad8:	mov	r0, r4
   1fadc:	mov	r1, #20
   1fae0:	mov	r2, #4
   1fae4:	mov	r3, #4
   1fae8:	bl	2fbe8 <flatcc_verify_field@@Base>
   1faec:	cmp	r0, #0
   1faf0:	bne	1fc38 <main@@Base+0x9f04>
   1faf4:	mov	r0, r4
   1faf8:	mov	r1, #21
   1fafc:	mov	r2, #4
   1fb00:	mov	r3, #4
   1fb04:	bl	2fbe8 <flatcc_verify_field@@Base>
   1fb08:	cmp	r0, #0
   1fb0c:	bne	1fc38 <main@@Base+0x9f04>
   1fb10:	mov	r0, r4
   1fb14:	mov	r1, #22
   1fb18:	mov	r2, #8
   1fb1c:	mov	r3, #8
   1fb20:	bl	2fbe8 <flatcc_verify_field@@Base>
   1fb24:	cmp	r0, #0
   1fb28:	bne	1fc38 <main@@Base+0x9f04>
   1fb2c:	mov	r0, r4
   1fb30:	mov	r1, #23
   1fb34:	mov	r2, #8
   1fb38:	mov	r3, #8
   1fb3c:	bl	2fbe8 <flatcc_verify_field@@Base>
   1fb40:	cmp	r0, #0
   1fb44:	bne	1fc38 <main@@Base+0x9f04>
   1fb48:	mov	r0, r4
   1fb4c:	mov	r1, #25
   1fb50:	mov	r2, #4
   1fb54:	mov	r3, #4
   1fb58:	bl	2fbe8 <flatcc_verify_field@@Base>
   1fb5c:	cmp	r0, #0
   1fb60:	bne	1fc38 <main@@Base+0x9f04>
   1fb64:	mov	r0, r4
   1fb68:	mov	r1, #26
   1fb6c:	mov	r2, #4
   1fb70:	mov	r3, #4
   1fb74:	bl	2fbe8 <flatcc_verify_field@@Base>
   1fb78:	cmp	r0, #0
   1fb7c:	bne	1fc38 <main@@Base+0x9f04>
   1fb80:	mov	r0, r4
   1fb84:	mov	r1, #27
   1fb88:	mov	r2, #4
   1fb8c:	mov	r3, #4
   1fb90:	bl	2fbe8 <flatcc_verify_field@@Base>
   1fb94:	cmp	r0, #0
   1fb98:	bne	1fc38 <main@@Base+0x9f04>
   1fb9c:	mvn	r0, #0
   1fba0:	mov	r1, #1
   1fba4:	mov	r2, #0
   1fba8:	mov	r3, #1
   1fbac:	str	r1, [sp]
   1fbb0:	str	r0, [sp, #4]
   1fbb4:	mov	r0, r4
   1fbb8:	mov	r1, #30
   1fbbc:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   1fbc0:	cmp	r0, #0
   1fbc4:	bne	1fc38 <main@@Base+0x9f04>
   1fbc8:	mvn	r5, #-536870912	; 0xe0000000
   1fbcc:	mov	r6, #8
   1fbd0:	mov	r0, r4
   1fbd4:	mov	r1, #32
   1fbd8:	mov	r2, #0
   1fbdc:	mov	r3, #8
   1fbe0:	str	r6, [sp]
   1fbe4:	str	r5, [sp, #4]
   1fbe8:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   1fbec:	cmp	r0, #0
   1fbf0:	bne	1fc38 <main@@Base+0x9f04>
   1fbf4:	mov	r0, r4
   1fbf8:	mov	r1, #33	; 0x21
   1fbfc:	mov	r2, #0
   1fc00:	mov	r3, #8
   1fc04:	str	r6, [sp]
   1fc08:	str	r5, [sp, #4]
   1fc0c:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   1fc10:	cmp	r0, #0
   1fc14:	bne	1fc38 <main@@Base+0x9f04>
   1fc18:	movw	r3, #46260	; 0xb4b4
   1fc1c:	mov	r0, r4
   1fc20:	mov	r1, #34	; 0x22
   1fc24:	mov	r2, #0
   1fc28:	movt	r3, #2
   1fc2c:	bl	2ff48 <flatcc_verify_table_field@@Base>
   1fc30:	cmp	r0, #0
   1fc34:	beq	1fc40 <main@@Base+0x9f0c>
   1fc38:	sub	sp, fp, #16
   1fc3c:	pop	{r4, r5, r6, r7, fp, pc}
   1fc40:	movw	r3, #46268	; 0xb4bc
   1fc44:	mov	r0, r4
   1fc48:	mov	r1, #35	; 0x23
   1fc4c:	mov	r2, #0
   1fc50:	movt	r3, #2
   1fc54:	sub	sp, fp, #16
   1fc58:	pop	{r4, r5, r6, r7, fp, lr}
   1fc5c:	b	2ff48 <flatcc_verify_table_field@@Base>
   1fc60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fc64:	add	fp, sp, #28
   1fc68:	sub	sp, sp, #12
   1fc6c:	mov	r5, r1
   1fc70:	sub	r1, r2, r1
   1fc74:	cmp	r1, #8
   1fc78:	movcs	r1, #8
   1fc7c:	sub	r4, r1, #1
   1fc80:	cmp	r4, #7
   1fc84:	bhi	1fdf4 <main@@Base+0xa0c0>
   1fc88:	str	r3, [sp, #8]
   1fc8c:	add	r8, pc, #32
   1fc90:	mov	r9, #0
   1fc94:	mov	ip, #0
   1fc98:	mov	lr, #0
   1fc9c:	mov	sl, #0
   1fca0:	mov	r6, #0
   1fca4:	mov	r3, #0
   1fca8:	mov	r1, #0
   1fcac:	mov	r7, #0
   1fcb0:	ldr	pc, [r8, r4, lsl #2]
   1fcb4:	andeq	pc, r1, r8, lsl sp	; <UNPREDICTABLE>
   1fcb8:	andeq	pc, r1, r0, lsl sp	; <UNPREDICTABLE>
   1fcbc:	andeq	pc, r1, r8, lsl #26
   1fcc0:	andeq	pc, r1, r0, lsl #26
   1fcc4:	strdeq	pc, [r1], -r4
   1fcc8:	andeq	pc, r1, r8, ror #25
   1fccc:	ldrdeq	pc, [r1], -r8
   1fcd0:	ldrdeq	pc, [r1], -r4
   1fcd4:	ldrb	ip, [r5, #7]
   1fcd8:	ldrb	r1, [r5, #6]
   1fcdc:	mov	lr, r9
   1fce0:	orr	r1, ip, r1, lsl #8
   1fce4:	mov	r9, r1
   1fce8:	ldrb	r1, [r5, #5]
   1fcec:	mov	sl, lr
   1fcf0:	orr	r9, r9, r1, lsl #16
   1fcf4:	ldrb	r1, [r5, #4]
   1fcf8:	mov	r6, sl
   1fcfc:	orr	r9, r9, r1, lsl #24
   1fd00:	ldrb	r1, [r5, #3]
   1fd04:	orr	r3, r1, r6
   1fd08:	ldrb	r1, [r5, #2]
   1fd0c:	orr	r1, r3, r1, lsl #8
   1fd10:	ldrb	r3, [r5, #1]
   1fd14:	orr	r7, r1, r3, lsl #16
   1fd18:	ldrb	r1, [r5]
   1fd1c:	movw	r4, #25957	; 0x6565
   1fd20:	ldr	r3, [fp, #12]
   1fd24:	ldr	r8, [fp, #8]
   1fd28:	movt	r4, #18290	; 0x4772
   1fd2c:	orr	r7, r7, r1, lsl #24
   1fd30:	mvn	r1, #-1845493760	; 0x92000000
   1fd34:	subs	r1, r1, r9
   1fd38:	sbcs	r1, r4, r7
   1fd3c:	bcc	1fd74 <main@@Base+0xa040>
   1fd40:	movw	r1, #30053	; 0x7565
   1fd44:	movt	r1, #17004	; 0x426c
   1fd48:	teq	r7, r1
   1fd4c:	bne	1fdf4 <main@@Base+0xa0c0>
   1fd50:	str	r3, [sp]
   1fd54:	mov	r1, r5
   1fd58:	mov	r3, #4
   1fd5c:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   1fd60:	cmp	r0, r5
   1fd64:	beq	1fdf4 <main@@Base+0xa0c0>
   1fd68:	mov	r1, #0
   1fd6c:	mov	r2, #8
   1fd70:	b	1fde0 <main@@Base+0xa0ac>
   1fd74:	movw	r6, #25600	; 0x6400
   1fd78:	bic	r1, r7, #255	; 0xff
   1fd7c:	movt	r6, #21093	; 0x5265
   1fd80:	teq	r1, r6
   1fd84:	bne	1fdac <main@@Base+0xa078>
   1fd88:	str	r3, [sp]
   1fd8c:	mov	r1, r5
   1fd90:	mov	r3, #3
   1fd94:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   1fd98:	cmp	r0, r5
   1fd9c:	beq	1fdf4 <main@@Base+0xa0c0>
   1fda0:	mov	r1, #0
   1fda4:	mov	r2, #1
   1fda8:	b	1fde0 <main@@Base+0xa0ac>
   1fdac:	eor	r1, r7, r4
   1fdb0:	and	r7, r9, #-16777216	; 0xff000000
   1fdb4:	eor	r7, r7, #1845493760	; 0x6e000000
   1fdb8:	orrs	r1, r7, r1
   1fdbc:	bne	1fdf4 <main@@Base+0xa0c0>
   1fdc0:	str	r3, [sp]
   1fdc4:	mov	r1, r5
   1fdc8:	mov	r3, #5
   1fdcc:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   1fdd0:	cmp	r0, r5
   1fdd4:	beq	1fdf4 <main@@Base+0xa0c0>
   1fdd8:	mov	r1, #0
   1fddc:	mov	r2, #2
   1fde0:	str	r2, [r8]
   1fde4:	str	r1, [r8, #4]
   1fde8:	mov	r5, r0
   1fdec:	ldr	r2, [sp, #8]
   1fdf0:	str	r1, [r2]
   1fdf4:	mov	r0, r5
   1fdf8:	sub	sp, fp, #28
   1fdfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe04:	add	fp, sp, #28
   1fe08:	push	{r0, r3}
   1fe0c:	sub	r0, r2, r1
   1fe10:	cmp	r0, #8
   1fe14:	mov	r3, r0
   1fe18:	movcs	r3, #8
   1fe1c:	sub	r6, r3, #1
   1fe20:	cmp	r6, #7
   1fe24:	bhi	201b4 <main@@Base+0xa480>
   1fe28:	add	r3, pc, #32
   1fe2c:	mov	lr, #0
   1fe30:	mov	r8, #0
   1fe34:	mov	r9, #0
   1fe38:	mov	sl, #0
   1fe3c:	mov	r7, #0
   1fe40:	mov	r4, #0
   1fe44:	mov	r5, #0
   1fe48:	mov	ip, #0
   1fe4c:	ldr	pc, [r3, r6, lsl #2]
   1fe50:			; <UNDEFINED> instruction: 0x0001feb4
   1fe54:	andeq	pc, r1, ip, lsr #29
   1fe58:	andeq	pc, r1, r4, lsr #29
   1fe5c:	muleq	r1, ip, lr
   1fe60:	muleq	r1, r0, lr
   1fe64:	andeq	pc, r1, r4, lsl #29
   1fe68:	andeq	pc, r1, r4, ror lr	; <UNPREDICTABLE>
   1fe6c:	andeq	pc, r1, r0, ror lr	; <UNPREDICTABLE>
   1fe70:	ldrb	r8, [r1, #7]
   1fe74:	ldrb	r3, [r1, #6]
   1fe78:	mov	r9, lr
   1fe7c:	orr	r3, r8, r3, lsl #8
   1fe80:	mov	lr, r3
   1fe84:	ldrb	r3, [r1, #5]
   1fe88:	mov	sl, r9
   1fe8c:	orr	lr, lr, r3, lsl #16
   1fe90:	ldrb	r3, [r1, #4]
   1fe94:	mov	r7, sl
   1fe98:	orr	lr, lr, r3, lsl #24
   1fe9c:	ldrb	r3, [r1, #3]
   1fea0:	orr	r4, r3, r7
   1fea4:	ldrb	r3, [r1, #2]
   1fea8:	orr	r5, r4, r3, lsl #8
   1feac:	ldrb	r3, [r1, #1]
   1feb0:	orr	ip, r5, r3, lsl #16
   1feb4:	ldrb	r3, [r1]
   1feb8:	movw	r4, #30061	; 0x756d
   1febc:	movw	r6, #30815	; 0x785f
   1fec0:	movt	r4, #25966	; 0x656e
   1fec4:	movt	r6, #26725	; 0x6865
   1fec8:	orr	r5, ip, r3, lsl #24
   1fecc:	subs	r3, lr, r4
   1fed0:	sbcs	r3, r5, r6
   1fed4:	bcs	1ff3c <main@@Base+0xa208>
   1fed8:	movw	r4, #27759	; 0x6c6f
   1fedc:	mvn	r3, #-1912602624	; 0x8e000000
   1fee0:	bic	r6, r5, #255	; 0xff
   1fee4:	movt	r4, #17263	; 0x436f
   1fee8:	subs	r3, r3, lr
   1feec:	sbcs	r3, r4, r5
   1fef0:	bcc	1ff98 <main@@Base+0xa264>
   1fef4:	cmp	r0, #4
   1fef8:	blt	201b4 <main@@Base+0xa480>
   1fefc:	movw	r0, #30976	; 0x7900
   1ff00:	movt	r0, #16750	; 0x416e
   1ff04:	teq	r6, r0
   1ff08:	bne	201b4 <main@@Base+0xa480>
   1ff0c:	ldrb	r0, [r1, #3]
   1ff10:	mov	ip, r1
   1ff14:	cmp	r0, #46	; 0x2e
   1ff18:	addeq	ip, ip, #4
   1ff1c:	cmp	ip, r1
   1ff20:	beq	201b4 <main@@Base+0xa480>
   1ff24:	ldr	r0, [sp]
   1ff28:	ldr	r3, [sp, #4]
   1ff2c:	mov	r1, ip
   1ff30:	sub	sp, fp, #28
   1ff34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff38:	b	22ac0 <main@@Base+0xcd8c>
   1ff3c:	add	r3, r6, #64512	; 0xfc00
   1ff40:	add	r7, r3, #17301504	; 0x1080000
   1ff44:	subs	r3, lr, r4
   1ff48:	sbcs	r3, r5, r7
   1ff4c:	bcs	1ffe0 <main@@Base+0xa2ac>
   1ff50:	cmp	r0, #9
   1ff54:	blt	201b4 <main@@Base+0xa480>
   1ff58:	eor	r0, lr, r4
   1ff5c:	eor	r3, r5, r6
   1ff60:	orrs	r0, r0, r3
   1ff64:	bne	201b4 <main@@Base+0xa480>
   1ff68:	ldrb	r0, [r1, #8]
   1ff6c:	mov	ip, r1
   1ff70:	cmp	r0, #46	; 0x2e
   1ff74:	addeq	ip, ip, #9
   1ff78:	cmp	ip, r1
   1ff7c:	beq	201b4 <main@@Base+0xa480>
   1ff80:	ldr	r0, [sp]
   1ff84:	ldr	r3, [sp, #4]
   1ff88:	mov	r1, ip
   1ff8c:	sub	sp, fp, #28
   1ff90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff94:	b	23d40 <main@@Base+0xe00c>
   1ff98:	movw	r3, #28416	; 0x6f00
   1ff9c:	movt	r3, #18031	; 0x466f
   1ffa0:	teq	r6, r3
   1ffa4:	bne	2003c <main@@Base+0xa308>
   1ffa8:	cmp	r0, #4
   1ffac:	blt	201b4 <main@@Base+0xa480>
   1ffb0:	ldrb	r0, [r1, #3]
   1ffb4:	mov	ip, r1
   1ffb8:	cmp	r0, #46	; 0x2e
   1ffbc:	addeq	ip, ip, #4
   1ffc0:	cmp	ip, r1
   1ffc4:	beq	201b4 <main@@Base+0xa480>
   1ffc8:	ldr	r0, [sp]
   1ffcc:	ldr	r3, [sp, #4]
   1ffd0:	mov	r1, ip
   1ffd4:	sub	sp, fp, #28
   1ffd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ffdc:	b	23ae0 <main@@Base+0xddac>
   1ffe0:	sub	r3, r6, #4352	; 0x1100
   1ffe4:	subs	r6, lr, r4
   1ffe8:	sub	r3, r3, #-100663296	; 0xfa000000
   1ffec:	sbcs	r3, r5, r3
   1fff0:	bcs	20088 <main@@Base+0xa354>
   1fff4:	cmp	r0, #9
   1fff8:	blt	201b4 <main@@Base+0xa480>
   1fffc:	eor	r0, lr, r4
   20000:	eor	r3, r5, r7
   20004:	orrs	r0, r0, r3
   20008:	bne	201b4 <main@@Base+0xa480>
   2000c:	ldrb	r0, [r1, #8]
   20010:	mov	ip, r1
   20014:	cmp	r0, #46	; 0x2e
   20018:	addeq	ip, ip, #9
   2001c:	cmp	ip, r1
   20020:	beq	201b4 <main@@Base+0xa480>
   20024:	ldr	r0, [sp]
   20028:	ldr	r3, [sp, #4]
   2002c:	mov	r1, ip
   20030:	sub	sp, fp, #28
   20034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20038:	b	23eec <main@@Base+0xe1b8>
   2003c:	cmp	r0, #6
   20040:	blt	201b4 <main@@Base+0xa480>
   20044:	and	r0, lr, #-16777216	; 0xff000000
   20048:	eor	r3, r5, r4
   2004c:	eor	r0, r0, #1912602624	; 0x72000000
   20050:	orrs	r0, r0, r3
   20054:	bne	201b4 <main@@Base+0xa480>
   20058:	ldrb	r0, [r1, #5]
   2005c:	mov	ip, r1
   20060:	cmp	r0, #46	; 0x2e
   20064:	addeq	ip, ip, #6
   20068:	cmp	ip, r1
   2006c:	beq	201b4 <main@@Base+0xa480>
   20070:	ldr	r0, [sp]
   20074:	ldr	r3, [sp, #4]
   20078:	mov	r1, ip
   2007c:	sub	sp, fp, #28
   20080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20084:	b	1fc60 <main@@Base+0x9f2c>
   20088:	movw	r3, #29817	; 0x7479
   2008c:	movw	r7, #29797	; 0x7465
   20090:	movt	r3, #28016	; 0x6d70
   20094:	movt	r7, #28271	; 0x6e6f
   20098:	eor	r3, lr, r3
   2009c:	eor	r7, r5, r7
   200a0:	orrs	r3, r3, r7
   200a4:	beq	200f8 <main@@Base+0xa3c4>
   200a8:	movw	r7, #26463	; 0x675f
   200ac:	eor	r3, lr, r4
   200b0:	movt	r7, #28261	; 0x6e65
   200b4:	eor	r7, r5, r7
   200b8:	orrs	r3, r3, r7
   200bc:	bne	201b4 <main@@Base+0xa480>
   200c0:	cmp	r0, #9
   200c4:	blt	201b4 <main@@Base+0xa480>
   200c8:	ldrb	r0, [r1, #8]
   200cc:	mov	ip, r1
   200d0:	cmp	r0, #46	; 0x2e
   200d4:	addeq	ip, ip, #9
   200d8:	cmp	ip, r1
   200dc:	beq	201b4 <main@@Base+0xa480>
   200e0:	ldr	r0, [sp]
   200e4:	ldr	r3, [sp, #4]
   200e8:	mov	r1, ip
   200ec:	sub	sp, fp, #28
   200f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   200f4:	b	240dc <main@@Base+0xe3a8>
   200f8:	add	lr, r1, #8
   200fc:	sub	r9, r2, lr
   20100:	cmp	r9, #8
   20104:	mov	r0, r9
   20108:	movcs	r0, #8
   2010c:	sub	r6, r0, #1
   20110:	cmp	r6, #7
   20114:	bhi	201b4 <main@@Base+0xa480>
   20118:	add	r0, pc, #16
   2011c:	mov	ip, #0
   20120:	mov	r8, #0
   20124:	mov	r5, #0
   20128:	mov	r7, #0
   2012c:	ldr	pc, [r0, r6, lsl #2]
   20130:	andeq	r0, r2, r8, ror #2
   20134:	andeq	r0, r2, r0, ror #2
   20138:	andeq	r0, r2, r8, asr r1
   2013c:	andeq	r0, r2, r0, asr r1
   20140:	andeq	r0, r2, r0, asr r1
   20144:	andeq	r0, r2, r0, asr r1
   20148:	andeq	r0, r2, r0, asr r1
   2014c:	andeq	r0, r2, r0, asr r1
   20150:	ldrb	r8, [r1, #11]
   20154:	mov	ip, #0
   20158:	ldrb	r0, [r1, #10]
   2015c:	orr	r5, r8, r0, lsl #8
   20160:	ldrb	r0, [r1, #9]
   20164:	orr	r7, r5, r0, lsl #16
   20168:	cmp	r9, #5
   2016c:	blt	201b4 <main@@Base+0xa480>
   20170:	ldrb	r0, [lr]
   20174:	orr	r0, r7, r0, lsl #24
   20178:	eor	r0, r0, r4
   2017c:	orrs	r0, ip, r0
   20180:	bne	201b4 <main@@Base+0xa480>
   20184:	ldrb	r0, [r1, #12]
   20188:	mov	ip, lr
   2018c:	cmp	r0, #46	; 0x2e
   20190:	addeq	ip, r1, #13
   20194:	cmp	ip, lr
   20198:	beq	201b4 <main@@Base+0xa480>
   2019c:	ldr	r0, [sp]
   201a0:	ldr	r3, [sp, #4]
   201a4:	mov	r1, ip
   201a8:	sub	sp, fp, #28
   201ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201b0:	b	24224 <main@@Base+0xe4f0>
   201b4:	mov	r0, r1
   201b8:	sub	sp, fp, #28
   201bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   201c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201c4:	add	fp, sp, #28
   201c8:	sub	sp, sp, #20
   201cc:	mov	r8, r2
   201d0:	sub	r2, r2, r1
   201d4:	cmp	r2, #8
   201d8:	movcs	r2, #8
   201dc:	sub	r2, r2, #1
   201e0:	cmp	r2, #7
   201e4:	bhi	20ff8 <main@@Base+0xb2c4>
   201e8:	str	r0, [sp, #16]
   201ec:	mov	sl, #0
   201f0:	mov	ip, #0
   201f4:	mov	lr, #0
   201f8:	mov	r9, #0
   201fc:	mov	r6, #0
   20200:	mov	r4, #0
   20204:	mov	r5, #0
   20208:	ldr	r0, [fp, #12]
   2020c:	str	r0, [sp, #12]
   20210:	ldr	r0, [fp, #8]
   20214:	str	r0, [sp, #8]
   20218:	add	r7, pc, #4
   2021c:	mov	r0, #0
   20220:	ldr	pc, [r7, r2, lsl #2]
   20224:	andeq	r0, r2, r8, lsl #5
   20228:	andeq	r0, r2, r0, lsl #5
   2022c:	andeq	r0, r2, r8, ror r2
   20230:	andeq	r0, r2, r0, ror r2
   20234:	andeq	r0, r2, r4, ror #4
   20238:	andeq	r0, r2, r8, asr r2
   2023c:	andeq	r0, r2, r8, asr #4
   20240:	andeq	r0, r2, r4, asr #4
   20244:	ldrb	ip, [r1, #7]
   20248:	ldrb	r2, [r1, #6]
   2024c:	mov	lr, sl
   20250:	orr	r2, ip, r2, lsl #8
   20254:	mov	sl, r2
   20258:	ldrb	r2, [r1, #5]
   2025c:	mov	r9, lr
   20260:	orr	sl, sl, r2, lsl #16
   20264:	ldrb	r2, [r1, #4]
   20268:	mov	r6, r9
   2026c:	orr	sl, sl, r2, lsl #24
   20270:	ldrb	r2, [r1, #3]
   20274:	orr	r4, r2, r6
   20278:	ldrb	r2, [r1, #2]
   2027c:	orr	r0, r4, r2, lsl #8
   20280:	ldrb	r2, [r1, #1]
   20284:	orr	r5, r0, r2, lsl #16
   20288:	ldrb	r2, [r1]
   2028c:	movw	r7, #11844	; 0x2e44
   20290:	movw	r0, #18273	; 0x4761
   20294:	movt	r7, #28005	; 0x6d65
   20298:	movt	r0, #19833	; 0x4d79
   2029c:	subs	r7, r7, sl
   202a0:	orr	r2, r5, r2, lsl #24
   202a4:	sbcs	r7, r0, r2
   202a8:	bcc	20408 <main@@Base+0xa6d4>
   202ac:	movw	r0, #31022	; 0x792e
   202b0:	movw	r7, #28276	; 0x6e74
   202b4:	movt	r0, #24947	; 0x6173
   202b8:	movt	r7, #18017	; 0x4661
   202bc:	eor	r0, sl, r0
   202c0:	eor	r2, r2, r7
   202c4:	orrs	r0, r0, r2
   202c8:	bne	20ff8 <main@@Base+0xb2c4>
   202cc:	add	lr, r1, #8
   202d0:	sub	r0, r8, lr
   202d4:	cmp	r0, #8
   202d8:	movcs	r0, #8
   202dc:	sub	r6, r0, #1
   202e0:	cmp	r6, #7
   202e4:	bhi	20ff8 <main@@Base+0xb2c4>
   202e8:	str	r3, [sp, #4]
   202ec:	add	r2, pc, #32
   202f0:	mov	sl, #0
   202f4:	mov	ip, #0
   202f8:	mov	r9, #0
   202fc:	mov	r4, #0
   20300:	mov	r7, #0
   20304:	mov	r5, #0
   20308:	mov	r0, #0
   2030c:	mov	r3, #0
   20310:	ldr	pc, [r2, r6, lsl #2]
   20314:	andeq	r0, r2, r8, ror r3
   20318:	andeq	r0, r2, r0, ror r3
   2031c:	andeq	r0, r2, r8, ror #6
   20320:	andeq	r0, r2, r0, ror #6
   20324:	andeq	r0, r2, r4, asr r3
   20328:	andeq	r0, r2, r8, asr #6
   2032c:	andeq	r0, r2, r8, lsr r3
   20330:	andeq	r0, r2, r4, lsr r3
   20334:	ldrb	ip, [r1, #15]
   20338:	ldrb	r0, [r1, #14]
   2033c:	mov	r9, sl
   20340:	orr	r0, ip, r0, lsl #8
   20344:	mov	sl, r0
   20348:	ldrb	r0, [r1, #13]
   2034c:	mov	r4, r9
   20350:	orr	sl, sl, r0, lsl #16
   20354:	ldrb	r0, [r1, #12]
   20358:	mov	r7, r4
   2035c:	orr	sl, sl, r0, lsl #24
   20360:	ldrb	r0, [r1, #11]
   20364:	orr	r5, r0, r7
   20368:	ldrb	r0, [r1, #10]
   2036c:	orr	r0, r5, r0, lsl #8
   20370:	ldrb	r2, [r1, #9]
   20374:	orr	r3, r0, r2, lsl #16
   20378:	ldrb	r2, [lr]
   2037c:	movw	r0, #29797	; 0x7465
   20380:	movt	r0, #24931	; 0x6163
   20384:	eor	r0, sl, r0
   20388:	orr	r2, r3, r2, lsl #24
   2038c:	movw	r3, #24946	; 0x6172
   20390:	movt	r3, #17256	; 0x4368
   20394:	eor	r2, r2, r3
   20398:	orrs	r0, r0, r2
   2039c:	bne	20ff8 <main@@Base+0xb2c4>
   203a0:	add	r0, r1, #16
   203a4:	sub	r2, r8, r0
   203a8:	cmp	r2, #8
   203ac:	mov	r3, r2
   203b0:	movcs	r3, #8
   203b4:	sub	r3, r3, #1
   203b8:	cmp	r3, #7
   203bc:	bhi	20ff8 <main@@Base+0xb2c4>
   203c0:	cmp	r2, #2
   203c4:	blt	20ff8 <main@@Base+0xb2c4>
   203c8:	ldrb	r2, [r0]
   203cc:	cmp	r2, #114	; 0x72
   203d0:	bne	20ff8 <main@@Base+0xb2c4>
   203d4:	ldrb	r2, [r1, #17]
   203d8:	ldr	r3, [sp, #4]
   203dc:	cmp	r2, #46	; 0x2e
   203e0:	mov	r2, r0
   203e4:	addeq	r2, r1, #18
   203e8:	cmp	r2, r0
   203ec:	beq	20ff8 <main@@Base+0xb2c4>
   203f0:	ldr	r0, [sp, #16]
   203f4:	mov	r1, r2
   203f8:	mov	r2, r8
   203fc:	sub	sp, fp, #28
   20400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20404:	b	2429c <main@@Base+0xe568>
   20408:	movw	r7, #11855	; 0x2e4f
   2040c:	eor	r2, r2, r0
   20410:	movt	r7, #28005	; 0x6d65
   20414:	eor	r7, sl, r7
   20418:	orrs	r0, r7, r2
   2041c:	beq	205ac <main@@Base+0xa878>
   20420:	movw	r0, #11845	; 0x2e45
   20424:	movt	r0, #28005	; 0x6d65
   20428:	eor	r0, sl, r0
   2042c:	orrs	r0, r0, r2
   20430:	bne	20ff8 <main@@Base+0xb2c4>
   20434:	add	lr, r1, #8
   20438:	sub	r0, r8, lr
   2043c:	cmp	r0, #8
   20440:	movcs	r0, #8
   20444:	sub	r6, r0, #1
   20448:	cmp	r6, #7
   2044c:	bhi	20ff8 <main@@Base+0xb2c4>
   20450:	str	r3, [sp, #4]
   20454:	add	r4, pc, #32
   20458:	mov	r0, #0
   2045c:	mov	ip, #0
   20460:	mov	r9, #0
   20464:	mov	sl, #0
   20468:	mov	r7, #0
   2046c:	mov	r5, #0
   20470:	mov	r2, #0
   20474:	mov	r3, #0
   20478:	ldr	pc, [r4, r6, lsl #2]
   2047c:	andeq	r0, r2, r0, ror #9
   20480:	ldrdeq	r0, [r2], -r8
   20484:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20488:	andeq	r0, r2, r8, asr #9
   2048c:			; <UNDEFINED> instruction: 0x000204bc
   20490:			; <UNDEFINED> instruction: 0x000204b0
   20494:	andeq	r0, r2, r0, lsr #9
   20498:	muleq	r2, ip, r4
   2049c:	ldrb	ip, [r1, #15]
   204a0:	ldrb	r2, [r1, #14]
   204a4:	mov	r9, r0
   204a8:	orr	r2, ip, r2, lsl #8
   204ac:	mov	r0, r2
   204b0:	ldrb	r2, [r1, #13]
   204b4:	mov	sl, r9
   204b8:	orr	r0, r0, r2, lsl #16
   204bc:	ldrb	r2, [r1, #12]
   204c0:	mov	r7, sl
   204c4:	orr	r0, r0, r2, lsl #24
   204c8:	ldrb	r2, [r1, #11]
   204cc:	orr	r5, r2, r7
   204d0:	ldrb	r2, [r1, #10]
   204d4:	orr	r2, r5, r2, lsl #8
   204d8:	ldrb	r3, [r1, #9]
   204dc:	orr	r3, r2, r3, lsl #16
   204e0:	ldrb	r2, [lr]
   204e4:	movw	r7, #28016	; 0x6d70
   204e8:	movt	r7, #30817	; 0x7861
   204ec:	orr	r2, r3, r2, lsl #24
   204f0:	movw	r3, #11841	; 0x2e41
   204f4:	movt	r3, #27749	; 0x6c65
   204f8:	add	r5, r3, #39	; 0x27
   204fc:	subs	r6, r0, r5
   20500:	sbcs	r6, r2, r7
   20504:	bcs	20964 <main@@Base+0xac30>
   20508:	ldr	lr, [sp, #4]
   2050c:	add	r6, r3, #2
   20510:	subs	r6, r0, r6
   20514:	sbcs	r6, r2, r7
   20518:	bcs	20a7c <main@@Base+0xad48>
   2051c:	eor	r0, r0, r3
   20520:	eor	r2, r2, r7
   20524:	orrs	r0, r0, r2
   20528:	bne	20ff8 <main@@Base+0xb2c4>
   2052c:	add	r0, r1, #16
   20530:	sub	r6, r8, r0
   20534:	cmp	r6, #8
   20538:	mov	r2, r6
   2053c:	movcs	r2, #8
   20540:	sub	r3, r2, #2
   20544:	cmp	r3, #7
   20548:	bcs	20eec <main@@Base+0xb1b8>
   2054c:	ldrb	r2, [r1, #17]
   20550:	mov	r3, #0
   20554:	lsl	r7, r2, #16
   20558:	cmp	r6, #3
   2055c:	blt	20ff8 <main@@Base+0xb2c4>
   20560:	ldrb	r2, [r0]
   20564:	orr	r2, r7, r2, lsl #24
   20568:	eor	r2, r2, #7929856	; 0x790000
   2056c:	eor	r2, r2, #1845493760	; 0x6e000000
   20570:	orrs	r2, r3, r2
   20574:	bne	20ff8 <main@@Base+0xb2c4>
   20578:	ldrb	r2, [r1, #18]
   2057c:	cmp	r2, #46	; 0x2e
   20580:	mov	r2, r0
   20584:	addeq	r2, r1, #19
   20588:	cmp	r2, r0
   2058c:	beq	20ff8 <main@@Base+0xb2c4>
   20590:	ldr	r0, [sp, #16]
   20594:	mov	r1, r2
   20598:	mov	r2, r8
   2059c:	mov	r3, lr
   205a0:	sub	sp, fp, #28
   205a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   205a8:	b	22ac0 <main@@Base+0xcd8c>
   205ac:	add	lr, r1, #8
   205b0:	sub	r0, r8, lr
   205b4:	cmp	r0, #8
   205b8:	movcs	r0, #8
   205bc:	sub	r7, r0, #1
   205c0:	cmp	r7, #7
   205c4:	bhi	20ff8 <main@@Base+0xb2c4>
   205c8:	str	r3, [sp, #4]
   205cc:	add	sl, pc, #32
   205d0:	mov	r2, #0
   205d4:	mov	ip, #0
   205d8:	mov	r3, #0
   205dc:	mov	r4, #0
   205e0:	mov	r6, #0
   205e4:	mov	r5, #0
   205e8:	mov	r0, #0
   205ec:	mov	r9, #0
   205f0:	ldr	pc, [sl, r7, lsl #2]
   205f4:	andeq	r0, r2, r8, asr r6
   205f8:	andeq	r0, r2, r0, asr r6
   205fc:	andeq	r0, r2, r8, asr #12
   20600:	andeq	r0, r2, r0, asr #12
   20604:	andeq	r0, r2, r4, lsr r6
   20608:	andeq	r0, r2, r8, lsr #12
   2060c:	andeq	r0, r2, r8, lsl r6
   20610:	andeq	r0, r2, r4, lsl r6
   20614:	ldrb	ip, [r1, #15]
   20618:	ldrb	r0, [r1, #14]
   2061c:	mov	r3, r2
   20620:	orr	r0, ip, r0, lsl #8
   20624:	mov	r2, r0
   20628:	ldrb	r0, [r1, #13]
   2062c:	mov	r4, r3
   20630:	orr	r2, r2, r0, lsl #16
   20634:	ldrb	r0, [r1, #12]
   20638:	mov	r6, r4
   2063c:	orr	r2, r2, r0, lsl #24
   20640:	ldrb	r0, [r1, #11]
   20644:	orr	r5, r0, r6
   20648:	ldrb	r0, [r1, #10]
   2064c:	orr	r0, r5, r0, lsl #8
   20650:	ldrb	r3, [r1, #9]
   20654:	orr	r9, r0, r3, lsl #16
   20658:	movw	r0, #28005	; 0x6d65
   2065c:	movw	r3, #25970	; 0x6572
   20660:	movt	r0, #20065	; 0x4e61
   20664:	movt	r3, #29800	; 0x7468
   20668:	eor	r0, r2, r0
   2066c:	ldrb	r2, [lr]
   20670:	orr	r2, r9, r2, lsl #24
   20674:	eor	r2, r2, r3
   20678:	orrs	r0, r0, r2
   2067c:	bne	20ff8 <main@@Base+0xb2c4>
   20680:	add	lr, r1, #16
   20684:	sub	r0, r8, lr
   20688:	cmp	r0, #8
   2068c:	movcs	r0, #8
   20690:	sub	r7, r0, #1
   20694:	cmp	r7, #7
   20698:	bhi	20ff8 <main@@Base+0xb2c4>
   2069c:	add	r2, pc, #32
   206a0:	mov	sl, #0
   206a4:	mov	ip, #0
   206a8:	mov	r9, #0
   206ac:	mov	r4, #0
   206b0:	mov	r6, #0
   206b4:	mov	r5, #0
   206b8:	mov	r0, #0
   206bc:	mov	r3, #0
   206c0:	ldr	pc, [r2, r7, lsl #2]
   206c4:	andeq	r0, r2, r8, lsr #14
   206c8:	andeq	r0, r2, r0, lsr #14
   206cc:	andeq	r0, r2, r8, lsl r7
   206d0:	andeq	r0, r2, r0, lsl r7
   206d4:	andeq	r0, r2, r4, lsl #14
   206d8:	strdeq	r0, [r2], -r8
   206dc:	andeq	r0, r2, r8, ror #13
   206e0:	andeq	r0, r2, r4, ror #13
   206e4:	ldrb	ip, [r1, #23]
   206e8:	ldrb	r0, [r1, #22]
   206ec:	mov	r9, sl
   206f0:	orr	r0, ip, r0, lsl #8
   206f4:	mov	sl, r0
   206f8:	ldrb	r0, [r1, #21]
   206fc:	mov	r4, r9
   20700:	orr	sl, sl, r0, lsl #16
   20704:	ldrb	r0, [r1, #20]
   20708:	mov	r6, r4
   2070c:	orr	sl, sl, r0, lsl #24
   20710:	ldrb	r0, [r1, #19]
   20714:	orr	r5, r0, r6
   20718:	ldrb	r0, [r1, #18]
   2071c:	orr	r0, r5, r0, lsl #8
   20720:	ldrb	r2, [r1, #17]
   20724:	orr	r3, r0, r2, lsl #16
   20728:	ldrb	r2, [lr]
   2072c:	movw	r0, #18034	; 0x4672
   20730:	movt	r0, #25902	; 0x652e
   20734:	eor	r0, sl, r0
   20738:	orr	r2, r3, r2, lsl #24
   2073c:	movw	r3, #24931	; 0x6163
   20740:	movt	r3, #21360	; 0x5370
   20744:	eor	r2, r2, r3
   20748:	orrs	r0, r0, r2
   2074c:	bne	20ff8 <main@@Base+0xb2c4>
   20750:	add	lr, r1, #24
   20754:	sub	r0, r8, lr
   20758:	cmp	r0, #8
   2075c:	movcs	r0, #8
   20760:	sub	r7, r0, #1
   20764:	cmp	r7, #7
   20768:	bhi	20ff8 <main@@Base+0xb2c4>
   2076c:	add	r2, pc, #32
   20770:	mov	sl, #0
   20774:	mov	ip, #0
   20778:	mov	r9, #0
   2077c:	mov	r4, #0
   20780:	mov	r6, #0
   20784:	mov	r5, #0
   20788:	mov	r0, #0
   2078c:	mov	r3, #0
   20790:	ldr	pc, [r2, r7, lsl #2]
   20794:	strdeq	r0, [r2], -r8
   20798:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   2079c:	andeq	r0, r2, r8, ror #15
   207a0:	andeq	r0, r2, r0, ror #15
   207a4:	ldrdeq	r0, [r2], -r4
   207a8:	andeq	r0, r2, r8, asr #15
   207ac:			; <UNDEFINED> instruction: 0x000207b8
   207b0:			; <UNDEFINED> instruction: 0x000207b4
   207b4:	ldrb	ip, [r1, #31]
   207b8:	ldrb	r0, [r1, #30]
   207bc:	mov	r9, sl
   207c0:	orr	r0, ip, r0, lsl #8
   207c4:	mov	sl, r0
   207c8:	ldrb	r0, [r1, #29]
   207cc:	mov	r4, r9
   207d0:	orr	sl, sl, r0, lsl #16
   207d4:	ldrb	r0, [r1, #28]
   207d8:	mov	r6, r4
   207dc:	orr	sl, sl, r0, lsl #24
   207e0:	ldrb	r0, [r1, #27]
   207e4:	orr	r5, r0, r6
   207e8:	ldrb	r0, [r1, #26]
   207ec:	orr	r0, r5, r0, lsl #8
   207f0:	ldrb	r2, [r1, #25]
   207f4:	orr	r3, r0, r2, lsl #16
   207f8:	ldrb	r2, [lr]
   207fc:	movw	r0, #30052	; 0x7564
   20800:	movt	r0, #25452	; 0x636c
   20804:	eor	r0, sl, r0
   20808:	orr	r2, r3, r2, lsl #24
   2080c:	movw	r3, #18798	; 0x496e
   20810:	movt	r3, #28525	; 0x6f6d
   20814:	eor	r2, r2, r3
   20818:	orrs	r0, r0, r2
   2081c:	bne	20ff8 <main@@Base+0xb2c4>
   20820:	add	r0, r1, #32
   20824:	sub	r2, r8, r0
   20828:	cmp	r2, #8
   2082c:	mov	r3, r2
   20830:	movcs	r3, #8
   20834:	sub	r3, r3, #1
   20838:	cmp	r3, #7
   2083c:	bhi	20ff8 <main@@Base+0xb2c4>
   20840:	cmp	r2, #2
   20844:	blt	20ff8 <main@@Base+0xb2c4>
   20848:	ldrb	r2, [r0]
   2084c:	cmp	r2, #101	; 0x65
   20850:	bne	20ff8 <main@@Base+0xb2c4>
   20854:	ldrb	r2, [r1, #33]	; 0x21
   20858:	ldr	r9, [sp, #4]
   2085c:	mov	r7, r0
   20860:	cmp	r2, #46	; 0x2e
   20864:	addeq	r7, r1, #34	; 0x22
   20868:	cmp	r7, r0
   2086c:	beq	20ff8 <main@@Base+0xb2c4>
   20870:	sub	r0, r8, r7
   20874:	cmp	r0, #8
   20878:	movcs	r0, #8
   2087c:	sub	r2, r0, #1
   20880:	cmp	r2, #7
   20884:	bhi	20ff4 <main@@Base+0xb2c0>
   20888:	add	r5, pc, #32
   2088c:	mov	sl, #0
   20890:	mov	ip, #0
   20894:	mov	lr, #0
   20898:	mov	r1, #0
   2089c:	mov	r3, #0
   208a0:	mov	r6, #0
   208a4:	mov	r4, #0
   208a8:	mov	r0, #0
   208ac:	ldr	pc, [r5, r2, lsl #2]
   208b0:	andeq	r0, r2, r4, lsl r9
   208b4:	andeq	r0, r2, ip, lsl #18
   208b8:	andeq	r0, r2, r4, lsl #18
   208bc:	strdeq	r0, [r2], -ip
   208c0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   208c4:	andeq	r0, r2, r4, ror #17
   208c8:	ldrdeq	r0, [r2], -r4
   208cc:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   208d0:	ldrb	ip, [r7, #7]
   208d4:	ldrb	r0, [r7, #6]
   208d8:	mov	lr, sl
   208dc:	orr	r0, ip, r0, lsl #8
   208e0:	mov	sl, r0
   208e4:	ldrb	r0, [r7, #5]
   208e8:	mov	r1, lr
   208ec:	orr	sl, sl, r0, lsl #16
   208f0:	ldrb	r0, [r7, #4]
   208f4:	mov	r3, r1
   208f8:	orr	sl, sl, r0, lsl #24
   208fc:	ldrb	r0, [r7, #3]
   20900:	orr	r6, r0, r3
   20904:	ldrb	r0, [r7, #2]
   20908:	orr	r4, r6, r0, lsl #8
   2090c:	ldrb	r0, [r7, #1]
   20910:	orr	r0, r4, r0, lsl #16
   20914:	ldrb	r1, [r7]
   20918:	orr	r6, r0, r1, lsl #24
   2091c:	movw	r1, #28416	; 0x6f00
   20920:	movt	r1, #18031	; 0x466f
   20924:	bic	r0, r6, #255	; 0xff
   20928:	teq	r0, r1
   2092c:	bne	20f14 <main@@Base+0xb1e0>
   20930:	ldr	r0, [sp, #12]
   20934:	mov	r1, r7
   20938:	mov	r2, r8
   2093c:	mov	r3, #3
   20940:	str	r0, [sp]
   20944:	ldr	r0, [sp, #16]
   20948:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   2094c:	cmp	r0, r7
   20950:	beq	20f14 <main@@Base+0xb1e0>
   20954:	mov	r1, r0
   20958:	mov	r3, #0
   2095c:	mov	r2, #17
   20960:	b	20fa8 <main@@Base+0xb274>
   20964:	eor	r6, r2, r7
   20968:	eor	r5, r0, r5
   2096c:	orrs	r5, r5, r6
   20970:	bne	20b70 <main@@Base+0xae3c>
   20974:	add	ip, r1, #16
   20978:	sub	r2, r8, ip
   2097c:	cmp	r2, #8
   20980:	mov	r0, r2
   20984:	movcs	r0, #8
   20988:	sub	r4, r0, #1
   2098c:	cmp	r4, #7
   20990:	bhi	20ff8 <main@@Base+0xb2c4>
   20994:	add	r6, pc, #28
   20998:	mov	r9, #0
   2099c:	mov	lr, #0
   209a0:	mov	sl, #0
   209a4:	mov	r3, #0
   209a8:	mov	r5, #0
   209ac:	mov	r0, #0
   209b0:	mov	r7, #0
   209b4:	ldr	pc, [r6, r4, lsl #2]
   209b8:	andeq	r0, r2, r4, lsl sl
   209bc:	andeq	r0, r2, ip, lsl #20
   209c0:	andeq	r0, r2, r4, lsl #20
   209c4:	strdeq	r0, [r2], -ip
   209c8:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   209cc:	andeq	r0, r2, r0, ror #19
   209d0:	ldrdeq	r0, [r2], -r8
   209d4:	ldrdeq	r0, [r2], -r8
   209d8:	ldrb	r0, [r1, #22]
   209dc:	lsl	lr, r0, #8
   209e0:	ldrb	r0, [r1, #21]
   209e4:	mov	sl, r9
   209e8:	orr	r0, lr, r0, lsl #16
   209ec:	mov	r9, r0
   209f0:	ldrb	r0, [r1, #20]
   209f4:	mov	r3, sl
   209f8:	orr	r9, r9, r0, lsl #24
   209fc:	ldrb	r0, [r1, #19]
   20a00:	orr	r5, r0, r3
   20a04:	ldrb	r0, [r1, #18]
   20a08:	orr	r0, r5, r0, lsl #8
   20a0c:	ldrb	r3, [r1, #17]
   20a10:	orr	r7, r0, r3, lsl #16
   20a14:	cmp	r2, #8
   20a18:	blt	20ff8 <main@@Base+0xb2c4>
   20a1c:	ldrb	r0, [ip]
   20a20:	movw	r2, #24421	; 0x5f65
   20a24:	movw	r3, #27904	; 0x6d00
   20a28:	movt	r2, #25959	; 0x6567
   20a2c:	movt	r3, #28277	; 0x6e75
   20a30:	add	r2, r2, #1114112	; 0x110000
   20a34:	eor	r3, r9, r3
   20a38:	orr	r0, r7, r0, lsl #24
   20a3c:	eor	r0, r0, r2
   20a40:	orrs	r0, r3, r0
   20a44:	bne	20ff8 <main@@Base+0xb2c4>
   20a48:	ldrb	r0, [r1, #23]
   20a4c:	ldr	r3, [sp, #4]
   20a50:	mov	r2, ip
   20a54:	cmp	r0, #46	; 0x2e
   20a58:	addeq	r2, r1, #24
   20a5c:	cmp	r2, ip
   20a60:	beq	20ff8 <main@@Base+0xb2c4>
   20a64:	ldr	r0, [sp, #16]
   20a68:	mov	r1, r2
   20a6c:	mov	r2, r8
   20a70:	sub	sp, fp, #28
   20a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20a78:	b	23d40 <main@@Base+0xe00c>
   20a7c:	movw	r3, #11846	; 0x2e46
   20a80:	eor	r2, r2, r7
   20a84:	movt	r3, #27749	; 0x6c65
   20a88:	eor	r3, r0, r3
   20a8c:	orrs	r3, r3, r2
   20a90:	beq	20dc8 <main@@Base+0xb094>
   20a94:	movw	r3, #11843	; 0x2e43
   20a98:	movt	r3, #27749	; 0x6c65
   20a9c:	eor	r0, r0, r3
   20aa0:	orrs	r0, r0, r2
   20aa4:	bne	20ff8 <main@@Base+0xb2c4>
   20aa8:	add	r0, r1, #16
   20aac:	sub	r2, r8, r0
   20ab0:	cmp	r2, #8
   20ab4:	mov	r3, r2
   20ab8:	movcs	r3, #8
   20abc:	sub	r6, r3, #1
   20ac0:	cmp	r6, #7
   20ac4:	bhi	20ff8 <main@@Base+0xb2c4>
   20ac8:	add	r3, pc, #16
   20acc:	mov	ip, #0
   20ad0:	mov	r7, #0
   20ad4:	mov	r4, #0
   20ad8:	mov	r5, #0
   20adc:	ldr	pc, [r3, r6, lsl #2]
   20ae0:	andeq	r0, r2, r8, lsl fp
   20ae4:	andeq	r0, r2, r0, lsl fp
   20ae8:	andeq	r0, r2, r8, lsl #22
   20aec:	andeq	r0, r2, r0, lsl #22
   20af0:	andeq	r0, r2, r0, lsl #22
   20af4:	andeq	r0, r2, r0, lsl #22
   20af8:	andeq	r0, r2, r0, lsl #22
   20afc:	andeq	r0, r2, r0, lsl #22
   20b00:	ldrb	r7, [r1, #19]
   20b04:	mov	ip, #0
   20b08:	ldrb	r3, [r1, #18]
   20b0c:	orr	r4, r7, r3, lsl #8
   20b10:	ldrb	r3, [r1, #17]
   20b14:	orr	r5, r4, r3, lsl #16
   20b18:	cmp	r2, #5
   20b1c:	blt	20ff8 <main@@Base+0xb2c4>
   20b20:	ldrb	r2, [r0]
   20b24:	movw	r3, #28530	; 0x6f72
   20b28:	movt	r3, #28524	; 0x6f6c
   20b2c:	orr	r2, r5, r2, lsl #24
   20b30:	eor	r2, r2, r3
   20b34:	orrs	r2, ip, r2
   20b38:	bne	20ff8 <main@@Base+0xb2c4>
   20b3c:	ldrb	r2, [r1, #20]
   20b40:	cmp	r2, #46	; 0x2e
   20b44:	mov	r2, r0
   20b48:	addeq	r2, r1, #21
   20b4c:	cmp	r2, r0
   20b50:	beq	20ff8 <main@@Base+0xb2c4>
   20b54:	ldr	r0, [sp, #16]
   20b58:	mov	r1, r2
   20b5c:	mov	r2, r8
   20b60:	mov	r3, lr
   20b64:	sub	sp, fp, #28
   20b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b6c:	b	1fc60 <main@@Base+0x9f2c>
   20b70:	add	r5, r3, #45	; 0x2d
   20b74:	subs	r4, r0, r5
   20b78:	sbcs	r2, r2, r7
   20b7c:	bcs	20c9c <main@@Base+0xaf68>
   20b80:	add	r2, r3, #40	; 0x28
   20b84:	eor	r0, r0, r2
   20b88:	orrs	r0, r0, r6
   20b8c:	bne	20ff8 <main@@Base+0xb2c4>
   20b90:	add	ip, r1, #16
   20b94:	sub	r2, r8, ip
   20b98:	cmp	r2, #8
   20b9c:	mov	r0, r2
   20ba0:	movcs	r0, #8
   20ba4:	sub	r4, r0, #1
   20ba8:	cmp	r4, #7
   20bac:	bhi	20ff8 <main@@Base+0xb2c4>
   20bb0:	add	r6, pc, #28
   20bb4:	mov	r9, #0
   20bb8:	mov	lr, #0
   20bbc:	mov	sl, #0
   20bc0:	mov	r3, #0
   20bc4:	mov	r5, #0
   20bc8:	mov	r7, #0
   20bcc:	mov	r0, #0
   20bd0:	ldr	pc, [r6, r4, lsl #2]
   20bd4:	andeq	r0, r2, r0, lsr ip
   20bd8:	andeq	r0, r2, r8, lsr #24
   20bdc:	andeq	r0, r2, r0, lsr #24
   20be0:	andeq	r0, r2, r8, lsl ip
   20be4:	andeq	r0, r2, ip, lsl #24
   20be8:	strdeq	r0, [r2], -ip
   20bec:	strdeq	r0, [r2], -r4
   20bf0:	strdeq	r0, [r2], -r4
   20bf4:	ldrb	r0, [r1, #22]
   20bf8:	lsl	lr, r0, #8
   20bfc:	ldrb	r0, [r1, #21]
   20c00:	mov	sl, r9
   20c04:	orr	r0, lr, r0, lsl #16
   20c08:	mov	r9, r0
   20c0c:	ldrb	r0, [r1, #20]
   20c10:	mov	r3, sl
   20c14:	orr	r9, r9, r0, lsl #24
   20c18:	ldrb	r0, [r1, #19]
   20c1c:	orr	r5, r0, r3
   20c20:	ldrb	r0, [r1, #18]
   20c24:	orr	r7, r5, r0, lsl #8
   20c28:	ldrb	r0, [r1, #17]
   20c2c:	orr	r0, r7, r0, lsl #16
   20c30:	cmp	r2, #8
   20c34:	blt	20ff8 <main@@Base+0xb2c4>
   20c38:	ldrb	r3, [ip]
   20c3c:	movw	r2, #24421	; 0x5f65
   20c40:	movt	r2, #25959	; 0x6567
   20c44:	add	r2, r2, #851968	; 0xd0000
   20c48:	orr	r0, r0, r3, lsl #24
   20c4c:	movw	r3, #27904	; 0x6d00
   20c50:	add	r2, r2, #150994944	; 0x9000000
   20c54:	movt	r3, #28277	; 0x6e75
   20c58:	eor	r0, r0, r2
   20c5c:	eor	r3, r9, r3
   20c60:	orrs	r0, r3, r0
   20c64:	bne	20ff8 <main@@Base+0xb2c4>
   20c68:	ldrb	r0, [r1, #23]
   20c6c:	ldr	r3, [sp, #4]
   20c70:	mov	r2, ip
   20c74:	cmp	r0, #46	; 0x2e
   20c78:	addeq	r2, r1, #24
   20c7c:	cmp	r2, ip
   20c80:	beq	20ff8 <main@@Base+0xb2c4>
   20c84:	ldr	r0, [sp, #16]
   20c88:	mov	r1, r2
   20c8c:	mov	r2, r8
   20c90:	sub	sp, fp, #28
   20c94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c98:	b	23eec <main@@Base+0xe1b8>
   20c9c:	eor	r0, r0, r5
   20ca0:	orrs	r0, r0, r6
   20ca4:	bne	20ff8 <main@@Base+0xb2c4>
   20ca8:	add	lr, r1, #16
   20cac:	sub	r2, r8, lr
   20cb0:	cmp	r2, #8
   20cb4:	mov	r0, r2
   20cb8:	movcs	r0, #8
   20cbc:	sub	r4, r0, #1
   20cc0:	cmp	r4, #7
   20cc4:	bhi	20ff8 <main@@Base+0xb2c4>
   20cc8:	add	ip, pc, #36	; 0x24
   20ccc:	mov	r0, #0
   20cd0:	mov	sl, #0
   20cd4:	mov	r9, #0
   20cd8:	mov	r7, #0
   20cdc:	mov	r6, #0
   20ce0:	mov	r5, #0
   20ce4:	mov	r3, #0
   20ce8:	str	r0, [sp, #12]
   20cec:	mov	r0, #0
   20cf0:	ldr	pc, [ip, r4, lsl #2]
   20cf4:	andeq	r0, r2, r0, ror #26
   20cf8:	andeq	r0, r2, r8, asr sp
   20cfc:	andeq	r0, r2, r0, asr sp
   20d00:	andeq	r0, r2, r8, asr #26
   20d04:	andeq	r0, r2, ip, lsr sp
   20d08:	andeq	r0, r2, r0, lsr sp
   20d0c:	andeq	r0, r2, ip, lsl sp
   20d10:	andeq	r0, r2, r4, lsl sp
   20d14:	ldrb	r0, [r1, #23]
   20d18:	str	r0, [sp, #12]
   20d1c:	ldrb	r0, [r1, #22]
   20d20:	ldr	r3, [sp, #12]
   20d24:	mov	r9, sl
   20d28:	orr	r0, r3, r0, lsl #8
   20d2c:	mov	sl, r0
   20d30:	ldrb	r0, [r1, #21]
   20d34:	mov	r7, r9
   20d38:	orr	sl, sl, r0, lsl #16
   20d3c:	ldrb	r0, [r1, #20]
   20d40:	mov	r6, r7
   20d44:	orr	sl, sl, r0, lsl #24
   20d48:	ldrb	r0, [r1, #19]
   20d4c:	orr	r5, r0, r6
   20d50:	ldrb	r0, [r1, #18]
   20d54:	orr	r0, r5, r0, lsl #8
   20d58:	ldrb	r3, [r1, #17]
   20d5c:	orr	r3, r0, r3, lsl #16
   20d60:	ldrb	r0, [lr]
   20d64:	movw	r7, #27904	; 0x6d00
   20d68:	cmp	r2, #8
   20d6c:	movt	r7, #28277	; 0x6e75
   20d70:	orr	r4, r3, r0, lsl #24
   20d74:	blt	20e48 <main@@Base+0xb114>
   20d78:	movw	r2, #24421	; 0x5f65
   20d7c:	bic	r0, sl, #255	; 0xff
   20d80:	movt	r2, #25959	; 0x6567
   20d84:	eor	r0, r0, r7
   20d88:	eor	r2, r4, r2
   20d8c:	orrs	r0, r0, r2
   20d90:	bne	20e48 <main@@Base+0xb114>
   20d94:	ldrb	r0, [r1, #23]
   20d98:	mov	r2, lr
   20d9c:	cmp	r0, #46	; 0x2e
   20da0:	addeq	r2, r1, #24
   20da4:	cmp	r2, lr
   20da8:	beq	20e48 <main@@Base+0xb114>
   20dac:	ldr	r0, [sp, #16]
   20db0:	ldr	r3, [sp, #4]
   20db4:	mov	r1, r2
   20db8:	mov	r2, r8
   20dbc:	sub	sp, fp, #28
   20dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20dc4:	b	240dc <main@@Base+0xe3a8>
   20dc8:	add	r0, r1, #16
   20dcc:	sub	r6, r8, r0
   20dd0:	cmp	r6, #8
   20dd4:	mov	r2, r6
   20dd8:	movcs	r2, #8
   20ddc:	sub	r3, r2, #2
   20de0:	cmp	r3, #7
   20de4:	bcs	20f00 <main@@Base+0xb1cc>
   20de8:	ldrb	r2, [r1, #17]
   20dec:	mov	r3, #0
   20df0:	lsl	r7, r2, #16
   20df4:	cmp	r6, #3
   20df8:	blt	20ff8 <main@@Base+0xb2c4>
   20dfc:	ldrb	r2, [r0]
   20e00:	orr	r2, r7, r2, lsl #24
   20e04:	eor	r2, r2, #7274496	; 0x6f0000
   20e08:	eor	r2, r2, #1862270976	; 0x6f000000
   20e0c:	orrs	r2, r3, r2
   20e10:	bne	20ff8 <main@@Base+0xb2c4>
   20e14:	ldrb	r2, [r1, #18]
   20e18:	cmp	r2, #46	; 0x2e
   20e1c:	mov	r2, r0
   20e20:	addeq	r2, r1, #19
   20e24:	cmp	r2, r0
   20e28:	beq	20ff8 <main@@Base+0xb2c4>
   20e2c:	ldr	r0, [sp, #16]
   20e30:	mov	r1, r2
   20e34:	mov	r2, r8
   20e38:	mov	r3, lr
   20e3c:	sub	sp, fp, #28
   20e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20e44:	b	23ae0 <main@@Base+0xddac>
   20e48:	movw	r0, #31077	; 0x7965
   20e4c:	movw	r2, #25965	; 0x656d
   20e50:	movt	r0, #28788	; 0x7074
   20e54:	movt	r2, #28532	; 0x6f74
   20e58:	eor	r0, sl, r0
   20e5c:	eor	r2, r4, r2
   20e60:	orrs	r0, r0, r2
   20e64:	bne	20ff8 <main@@Base+0xb2c4>
   20e68:	add	r0, r1, #24
   20e6c:	sub	r5, r8, r0
   20e70:	cmp	r5, #8
   20e74:	mov	r2, r5
   20e78:	movcs	r2, #8
   20e7c:	sub	r3, r2, #3
   20e80:	cmp	r3, #6
   20e84:	bcs	20fbc <main@@Base+0xb288>
   20e88:	ldrb	r2, [r1, #26]
   20e8c:	ldr	r3, [sp, #4]
   20e90:	mov	r4, #0
   20e94:	lsl	r2, r2, #8
   20e98:	ldrb	r6, [r1, #25]
   20e9c:	orr	r6, r2, r6, lsl #16
   20ea0:	cmp	r5, #4
   20ea4:	blt	20ff8 <main@@Base+0xb2c4>
   20ea8:	ldrb	r2, [r0]
   20eac:	orr	r2, r6, r2, lsl #24
   20eb0:	eor	r2, r2, r7
   20eb4:	orrs	r2, r4, r2
   20eb8:	bne	20ff8 <main@@Base+0xb2c4>
   20ebc:	ldrb	r2, [r1, #27]
   20ec0:	cmp	r2, #46	; 0x2e
   20ec4:	mov	r2, r0
   20ec8:	addeq	r2, r1, #28
   20ecc:	cmp	r2, r0
   20ed0:	beq	20ff8 <main@@Base+0xb2c4>
   20ed4:	ldr	r0, [sp, #16]
   20ed8:	mov	r1, r2
   20edc:	mov	r2, r8
   20ee0:	sub	sp, fp, #28
   20ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ee8:	b	24224 <main@@Base+0xe4f0>
   20eec:	mov	r3, #0
   20ef0:	cmp	r2, #1
   20ef4:	mov	r7, #0
   20ef8:	beq	20558 <main@@Base+0xa824>
   20efc:	b	20ff8 <main@@Base+0xb2c4>
   20f00:	mov	r3, #0
   20f04:	cmp	r2, #1
   20f08:	mov	r7, #0
   20f0c:	beq	20df4 <main@@Base+0xb0c0>
   20f10:	b	20ff8 <main@@Base+0xb2c4>
   20f14:	movw	r0, #25942	; 0x6556
   20f18:	movw	r1, #25452	; 0x636c
   20f1c:	movt	r0, #30052	; 0x7564
   20f20:	movt	r1, #18798	; 0x496e
   20f24:	eor	r0, sl, r0
   20f28:	eor	r1, r6, r1
   20f2c:	orrs	r0, r0, r1
   20f30:	bne	20ff4 <main@@Base+0xb2c0>
   20f34:	add	r6, r7, #8
   20f38:	sub	r1, r8, r6
   20f3c:	cmp	r1, #8
   20f40:	movcs	r1, #8
   20f44:	sub	r0, r1, #2
   20f48:	cmp	r0, #7
   20f4c:	bcs	20fe4 <main@@Base+0xb2b0>
   20f50:	ldrb	r0, [r7, #9]
   20f54:	lsl	r1, r0, #16
   20f58:	mov	r0, #0
   20f5c:	ldrb	r2, [r6]
   20f60:	orr	r1, r1, r2, lsl #24
   20f64:	eor	r1, r1, #23855104	; 0x16c0000
   20f68:	eor	r1, r1, #1610612736	; 0x60000000
   20f6c:	orrs	r0, r0, r1
   20f70:	bne	20ff4 <main@@Base+0xb2c0>
   20f74:	ldr	r0, [sp, #12]
   20f78:	mov	r1, r6
   20f7c:	mov	r2, r8
   20f80:	mov	r3, #2
   20f84:	str	r0, [sp]
   20f88:	ldr	r0, [sp, #16]
   20f8c:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   20f90:	cmp	r0, r6
   20f94:	mov	r1, r7
   20f98:	beq	20ff8 <main@@Base+0xb2c4>
   20f9c:	mov	r2, #0
   20fa0:	mov	r3, #0
   20fa4:	mov	r1, r0
   20fa8:	ldr	r0, [sp, #8]
   20fac:	strd	r2, [r0]
   20fb0:	mov	r0, #0
   20fb4:	str	r0, [r9]
   20fb8:	b	20ff8 <main@@Base+0xb2c4>
   20fbc:	ldr	r3, [sp, #4]
   20fc0:	mov	r4, #0
   20fc4:	cmp	r2, #1
   20fc8:	beq	20fdc <main@@Base+0xb2a8>
   20fcc:	cmp	r2, #2
   20fd0:	mov	r2, #0
   20fd4:	beq	20e98 <main@@Base+0xb164>
   20fd8:	b	20ff8 <main@@Base+0xb2c4>
   20fdc:	mov	r6, #0
   20fe0:	b	20ea0 <main@@Base+0xb16c>
   20fe4:	cmp	r1, #1
   20fe8:	mov	r0, #0
   20fec:	mov	r1, #0
   20ff0:	beq	20f5c <main@@Base+0xb228>
   20ff4:	mov	r1, r7
   20ff8:	mov	r0, r1
   20ffc:	sub	sp, fp, #28
   21000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21004:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21008:	add	fp, sp, #28
   2100c:	sub	sp, sp, #44	; 0x2c
   21010:	mov	r6, r2
   21014:	ldr	r2, [fp, #8]
   21018:	mov	r5, r0
   2101c:	mov	r0, #0
   21020:	mov	sl, r3
   21024:	cmp	r1, r6
   21028:	strb	r0, [r2]
   2102c:	beq	21058 <main@@Base+0xb324>
   21030:	ldrb	r0, [r1]
   21034:	cmp	r0, #34	; 0x22
   21038:	bne	21044 <main@@Base+0xb310>
   2103c:	add	r1, r1, #1
   21040:	b	21058 <main@@Base+0xb324>
   21044:	mov	r0, r5
   21048:	mov	r2, r6
   2104c:	mov	r3, #5
   21050:	bl	3133c <flatcc_json_parser_set_error@@Base>
   21054:	mov	r1, r0
   21058:	sub	r0, r6, r1
   2105c:	cmp	r0, #2
   21060:	blt	2108c <main@@Base+0xb358>
   21064:	ldrb	r0, [r1]
   21068:	cmp	r0, #32
   2106c:	bls	21078 <main@@Base+0xb344>
   21070:	mov	r7, r1
   21074:	b	2109c <main@@Base+0xb368>
   21078:	bne	2108c <main@@Base+0xb358>
   2107c:	mov	r7, r1
   21080:	ldrb	r0, [r7, #1]!
   21084:	cmp	r0, #32
   21088:	bhi	2109c <main@@Base+0xb368>
   2108c:	mov	r0, r5
   21090:	mov	r2, r6
   21094:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   21098:	mov	r7, r0
   2109c:	cmp	r7, r6
   210a0:	beq	211b4 <main@@Base+0xb480>
   210a4:	add	r0, sl, #4
   210a8:	mov	r2, #0
   210ac:	add	r8, sp, #32
   210b0:	add	r9, sp, #28
   210b4:	str	sl, [sp, #16]
   210b8:	str	r0, [sp, #12]
   210bc:	ldr	r4, [sl]
   210c0:	mov	sl, r0
   210c4:	str	r2, [sp, #20]
   210c8:	add	r0, sp, #24
   210cc:	mov	r1, r7
   210d0:	mov	r2, r6
   210d4:	mov	r3, r9
   210d8:	str	r8, [sp]
   210dc:	str	r0, [sp, #4]
   210e0:	mov	r0, r5
   210e4:	blx	r4
   210e8:	cmp	r0, r6
   210ec:	beq	211b4 <main@@Base+0xb480>
   210f0:	mov	r4, r0
   210f4:	cmp	r0, r7
   210f8:	bne	2110c <main@@Base+0xb3d8>
   210fc:	ldr	r4, [sl], #4
   21100:	cmp	r4, #0
   21104:	bne	210c8 <main@@Base+0xb394>
   21108:	b	211bc <main@@Base+0xb488>
   2110c:	ldr	r2, [sp, #28]
   21110:	ldr	r0, [sp, #32]
   21114:	ldr	r1, [sp, #36]	; 0x24
   21118:	cmp	r2, #0
   2111c:	beq	21144 <main@@Base+0xb410>
   21120:	ldr	sl, [sp, #16]
   21124:	subs	r2, r0, #129	; 0x81
   21128:	sbcs	r1, r1, #0
   2112c:	bcc	21170 <main@@Base+0xb43c>
   21130:	mov	r0, r5
   21134:	mov	r1, r4
   21138:	mov	r2, r6
   2113c:	mov	r3, #8
   21140:	b	21164 <main@@Base+0xb430>
   21144:	ldr	sl, [sp, #16]
   21148:	subs	r2, r0, #128	; 0x80
   2114c:	sbcs	r1, r1, #0
   21150:	bcc	21178 <main@@Base+0xb444>
   21154:	mov	r0, r5
   21158:	mov	r1, r4
   2115c:	mov	r2, r6
   21160:	mov	r3, #7
   21164:	bl	3133c <flatcc_json_parser_set_error@@Base>
   21168:	ldr	r2, [sp, #20]
   2116c:	b	21180 <main@@Base+0xb44c>
   21170:	rsb	r2, r0, #0
   21174:	b	2117c <main@@Base+0xb448>
   21178:	mov	r2, r0
   2117c:	mov	r0, r4
   21180:	cmp	r0, r6
   21184:	beq	211b4 <main@@Base+0xb480>
   21188:	ldr	r0, [fp, #8]
   2118c:	mov	r7, r4
   21190:	mov	r1, r0
   21194:	ldrb	r0, [r0]
   21198:	add	r0, r0, r2
   2119c:	strb	r0, [r1]
   211a0:	ldr	r0, [sp, #24]
   211a4:	cmp	r0, #0
   211a8:	ldr	r0, [sp, #12]
   211ac:	bne	210bc <main@@Base+0xb388>
   211b0:	b	211d4 <main@@Base+0xb4a0>
   211b4:	mov	r4, r6
   211b8:	b	211d4 <main@@Base+0xb4a0>
   211bc:	mov	r0, r5
   211c0:	mov	r1, r7
   211c4:	mov	r2, r6
   211c8:	mov	r3, #23
   211cc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   211d0:	mov	r4, r0
   211d4:	mov	r0, r4
   211d8:	sub	sp, fp, #28
   211dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   211e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   211e4:	add	fp, sp, #28
   211e8:	sub	sp, sp, #44	; 0x2c
   211ec:	mov	r6, r2
   211f0:	ldr	r2, [fp, #8]
   211f4:	mov	r5, r0
   211f8:	mov	r0, #0
   211fc:	mov	sl, r3
   21200:	cmp	r1, r6
   21204:	strb	r0, [r2]
   21208:	beq	21234 <main@@Base+0xb500>
   2120c:	ldrb	r0, [r1]
   21210:	cmp	r0, #34	; 0x22
   21214:	bne	21220 <main@@Base+0xb4ec>
   21218:	add	r1, r1, #1
   2121c:	b	21234 <main@@Base+0xb500>
   21220:	mov	r0, r5
   21224:	mov	r2, r6
   21228:	mov	r3, #5
   2122c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   21230:	mov	r1, r0
   21234:	sub	r0, r6, r1
   21238:	cmp	r0, #2
   2123c:	blt	21268 <main@@Base+0xb534>
   21240:	ldrb	r0, [r1]
   21244:	cmp	r0, #32
   21248:	bls	21254 <main@@Base+0xb520>
   2124c:	mov	r7, r1
   21250:	b	21278 <main@@Base+0xb544>
   21254:	bne	21268 <main@@Base+0xb534>
   21258:	mov	r7, r1
   2125c:	ldrb	r0, [r7, #1]!
   21260:	cmp	r0, #32
   21264:	bhi	21278 <main@@Base+0xb544>
   21268:	mov	r0, r5
   2126c:	mov	r2, r6
   21270:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   21274:	mov	r7, r0
   21278:	cmp	r7, r6
   2127c:	beq	21380 <main@@Base+0xb64c>
   21280:	add	r0, sl, #4
   21284:	mov	r1, #0
   21288:	add	r8, sp, #32
   2128c:	add	r9, sp, #28
   21290:	str	sl, [sp, #16]
   21294:	str	r1, [sp, #20]
   21298:	str	r0, [sp, #12]
   2129c:	ldr	r4, [sl]
   212a0:	mov	sl, r0
   212a4:	add	r0, sp, #24
   212a8:	mov	r1, r7
   212ac:	mov	r2, r6
   212b0:	mov	r3, r9
   212b4:	str	r8, [sp]
   212b8:	str	r0, [sp, #4]
   212bc:	mov	r0, r5
   212c0:	blx	r4
   212c4:	cmp	r0, r6
   212c8:	beq	21380 <main@@Base+0xb64c>
   212cc:	mov	r4, r0
   212d0:	cmp	r0, r7
   212d4:	bne	212e8 <main@@Base+0xb5b4>
   212d8:	ldr	r4, [sl], #4
   212dc:	cmp	r4, #0
   212e0:	bne	212a4 <main@@Base+0xb570>
   212e4:	b	21388 <main@@Base+0xb654>
   212e8:	ldr	r0, [sp, #28]
   212ec:	cmp	r0, #0
   212f0:	beq	21310 <main@@Base+0xb5dc>
   212f4:	mov	r0, r5
   212f8:	mov	r1, r4
   212fc:	mov	r2, r6
   21300:	mov	r3, #8
   21304:	bl	3133c <flatcc_json_parser_set_error@@Base>
   21308:	ldr	sl, [sp, #16]
   2130c:	b	21348 <main@@Base+0xb614>
   21310:	ldr	r0, [sp, #32]
   21314:	ldr	r1, [sp, #36]	; 0x24
   21318:	ldr	sl, [sp, #16]
   2131c:	subs	r2, r0, #256	; 0x100
   21320:	sbcs	r1, r1, #0
   21324:	bcc	21340 <main@@Base+0xb60c>
   21328:	mov	r0, r5
   2132c:	mov	r1, r4
   21330:	mov	r2, r6
   21334:	mov	r3, #7
   21338:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2133c:	b	21348 <main@@Base+0xb614>
   21340:	str	r0, [sp, #20]
   21344:	mov	r0, r4
   21348:	cmp	r0, r6
   2134c:	beq	21380 <main@@Base+0xb64c>
   21350:	ldr	r0, [fp, #8]
   21354:	ldr	r2, [sp, #20]
   21358:	mov	r7, r4
   2135c:	mov	r1, r0
   21360:	ldrb	r0, [r0]
   21364:	add	r0, r0, r2
   21368:	strb	r0, [r1]
   2136c:	ldr	r0, [sp, #24]
   21370:	cmp	r0, #0
   21374:	ldr	r0, [sp, #12]
   21378:	bne	2129c <main@@Base+0xb568>
   2137c:	b	213a0 <main@@Base+0xb66c>
   21380:	mov	r4, r6
   21384:	b	213a0 <main@@Base+0xb66c>
   21388:	mov	r0, r5
   2138c:	mov	r1, r7
   21390:	mov	r2, r6
   21394:	mov	r3, #23
   21398:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2139c:	mov	r4, r0
   213a0:	mov	r0, r4
   213a4:	sub	sp, fp, #28
   213a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   213ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   213b0:	add	fp, sp, #28
   213b4:	sub	sp, sp, #44	; 0x2c
   213b8:	mov	r6, r2
   213bc:	ldr	r2, [fp, #8]
   213c0:	mov	r5, r0
   213c4:	mov	r0, #0
   213c8:	mov	sl, r3
   213cc:	cmp	r1, r6
   213d0:	strh	r0, [r2]
   213d4:	beq	21400 <main@@Base+0xb6cc>
   213d8:	ldrb	r0, [r1]
   213dc:	cmp	r0, #34	; 0x22
   213e0:	bne	213ec <main@@Base+0xb6b8>
   213e4:	add	r1, r1, #1
   213e8:	b	21400 <main@@Base+0xb6cc>
   213ec:	mov	r0, r5
   213f0:	mov	r2, r6
   213f4:	mov	r3, #5
   213f8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   213fc:	mov	r1, r0
   21400:	sub	r0, r6, r1
   21404:	cmp	r0, #2
   21408:	blt	21434 <main@@Base+0xb700>
   2140c:	ldrb	r0, [r1]
   21410:	cmp	r0, #32
   21414:	bls	21420 <main@@Base+0xb6ec>
   21418:	mov	r7, r1
   2141c:	b	21444 <main@@Base+0xb710>
   21420:	bne	21434 <main@@Base+0xb700>
   21424:	mov	r7, r1
   21428:	ldrb	r0, [r7, #1]!
   2142c:	cmp	r0, #32
   21430:	bhi	21444 <main@@Base+0xb710>
   21434:	mov	r0, r5
   21438:	mov	r2, r6
   2143c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   21440:	mov	r7, r0
   21444:	cmp	r7, r6
   21448:	beq	21560 <main@@Base+0xb82c>
   2144c:	add	r0, sl, #4
   21450:	mov	r2, #0
   21454:	add	r8, sp, #32
   21458:	add	r9, sp, #28
   2145c:	str	sl, [sp, #16]
   21460:	str	r0, [sp, #12]
   21464:	ldr	r4, [sl]
   21468:	mov	sl, r0
   2146c:	str	r2, [sp, #20]
   21470:	add	r0, sp, #24
   21474:	mov	r1, r7
   21478:	mov	r2, r6
   2147c:	mov	r3, r9
   21480:	str	r8, [sp]
   21484:	str	r0, [sp, #4]
   21488:	mov	r0, r5
   2148c:	blx	r4
   21490:	cmp	r0, r6
   21494:	beq	21560 <main@@Base+0xb82c>
   21498:	mov	r4, r0
   2149c:	cmp	r0, r7
   214a0:	bne	214b4 <main@@Base+0xb780>
   214a4:	ldr	r4, [sl], #4
   214a8:	cmp	r4, #0
   214ac:	bne	21470 <main@@Base+0xb73c>
   214b0:	b	21568 <main@@Base+0xb834>
   214b4:	ldr	r2, [sp, #28]
   214b8:	ldr	r0, [sp, #32]
   214bc:	ldr	r1, [sp, #36]	; 0x24
   214c0:	cmp	r2, #0
   214c4:	beq	214f0 <main@@Base+0xb7bc>
   214c8:	ldr	sl, [sp, #16]
   214cc:	movw	r2, #32769	; 0x8001
   214d0:	subs	r2, r0, r2
   214d4:	sbcs	r1, r1, #0
   214d8:	bcc	2151c <main@@Base+0xb7e8>
   214dc:	mov	r0, r5
   214e0:	mov	r1, r4
   214e4:	mov	r2, r6
   214e8:	mov	r3, #8
   214ec:	b	21510 <main@@Base+0xb7dc>
   214f0:	ldr	sl, [sp, #16]
   214f4:	subs	r2, r0, #32768	; 0x8000
   214f8:	sbcs	r1, r1, #0
   214fc:	bcc	21524 <main@@Base+0xb7f0>
   21500:	mov	r0, r5
   21504:	mov	r1, r4
   21508:	mov	r2, r6
   2150c:	mov	r3, #7
   21510:	bl	3133c <flatcc_json_parser_set_error@@Base>
   21514:	ldr	r2, [sp, #20]
   21518:	b	2152c <main@@Base+0xb7f8>
   2151c:	rsb	r2, r0, #0
   21520:	b	21528 <main@@Base+0xb7f4>
   21524:	mov	r2, r0
   21528:	mov	r0, r4
   2152c:	cmp	r0, r6
   21530:	beq	21560 <main@@Base+0xb82c>
   21534:	ldr	r0, [fp, #8]
   21538:	mov	r7, r4
   2153c:	mov	r1, r0
   21540:	ldrh	r0, [r0]
   21544:	add	r0, r0, r2
   21548:	strh	r0, [r1]
   2154c:	ldr	r0, [sp, #24]
   21550:	cmp	r0, #0
   21554:	ldr	r0, [sp, #12]
   21558:	bne	21464 <main@@Base+0xb730>
   2155c:	b	21580 <main@@Base+0xb84c>
   21560:	mov	r4, r6
   21564:	b	21580 <main@@Base+0xb84c>
   21568:	mov	r0, r5
   2156c:	mov	r1, r7
   21570:	mov	r2, r6
   21574:	mov	r3, #23
   21578:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2157c:	mov	r4, r0
   21580:	mov	r0, r4
   21584:	sub	sp, fp, #28
   21588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2158c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21590:	add	fp, sp, #28
   21594:	sub	sp, sp, #28
   21598:	mov	r7, r2
   2159c:	mov	r5, r0
   215a0:	cmp	r1, r2
   215a4:	beq	215dc <main@@Base+0xb8a8>
   215a8:	ldrb	r0, [r1]
   215ac:	cmp	r0, #123	; 0x7b
   215b0:	bne	215dc <main@@Base+0xb8a8>
   215b4:	add	r2, r1, #1
   215b8:	mov	r9, r3
   215bc:	sub	r0, r7, r2
   215c0:	cmp	r0, #2
   215c4:	blt	21604 <main@@Base+0xb8d0>
   215c8:	ldrb	r0, [r2]
   215cc:	cmp	r0, #32
   215d0:	bls	215f4 <main@@Base+0xb8c0>
   215d4:	mov	r1, r2
   215d8:	b	21618 <main@@Base+0xb8e4>
   215dc:	mov	r0, r5
   215e0:	mov	r2, r7
   215e4:	mov	r3, #21
   215e8:	sub	sp, fp, #28
   215ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   215f0:	b	3133c <flatcc_json_parser_set_error@@Base>
   215f4:	bne	21604 <main@@Base+0xb8d0>
   215f8:	ldrb	r0, [r1, #2]!
   215fc:	cmp	r0, #32
   21600:	bhi	21618 <main@@Base+0xb8e4>
   21604:	mov	r1, r2
   21608:	mov	r0, r5
   2160c:	mov	r2, r7
   21610:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   21614:	mov	r1, r0
   21618:	cmp	r1, r7
   2161c:	mov	r2, r7
   21620:	beq	21658 <main@@Base+0xb924>
   21624:	ldrb	r0, [r1]
   21628:	cmp	r0, #125	; 0x7d
   2162c:	bne	21654 <main@@Base+0xb920>
   21630:	add	r2, r1, #1
   21634:	sub	r0, r7, r2
   21638:	cmp	r0, #2
   2163c:	blt	21ba4 <main@@Base+0xbe70>
   21640:	ldrb	r0, [r2]
   21644:	cmp	r0, #32
   21648:	bls	21b94 <main@@Base+0xbe60>
   2164c:	mov	r1, r2
   21650:	b	21bfc <main@@Base+0xbec8>
   21654:	mov	r2, r1
   21658:	mov	sl, #1627389952	; 0x61000000
   2165c:	cmp	r2, r7
   21660:	mov	r4, r7
   21664:	beq	21694 <main@@Base+0xb960>
   21668:	ldrb	r0, [r2]
   2166c:	cmp	r0, #34	; 0x22
   21670:	bne	2167c <main@@Base+0xb948>
   21674:	add	r4, r2, #1
   21678:	b	21694 <main@@Base+0xb960>
   2167c:	mov	r1, r2
   21680:	mov	r0, r5
   21684:	mov	r2, r7
   21688:	mov	r3, #5
   2168c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   21690:	mov	r4, r0
   21694:	sub	r0, r7, r4
   21698:	mov	r1, #8
   2169c:	cmp	r0, #8
   216a0:	movcc	r1, r0
   216a4:	sub	r1, r1, #1
   216a8:	cmp	r1, #7
   216ac:	bhi	219f4 <main@@Base+0xbcc0>
   216b0:	ldrb	r1, [r4]
   216b4:	teq	sl, r1, lsl #24
   216b8:	beq	21708 <main@@Base+0xb9d4>
   216bc:	lsl	r1, r1, #24
   216c0:	teq	r1, #1644167168	; 0x62000000
   216c4:	bne	219f4 <main@@Base+0xbcc0>
   216c8:	cmp	r0, #2
   216cc:	mov	r8, r4
   216d0:	blt	21850 <main@@Base+0xbb1c>
   216d4:	ldrb	r0, [r4, #1]
   216d8:	mov	r8, r4
   216dc:	cmp	r0, #34	; 0x22
   216e0:	bne	21850 <main@@Base+0xbb1c>
   216e4:	add	r1, r4, #2
   216e8:	sub	r0, r7, r1
   216ec:	cmp	r0, #2
   216f0:	blt	2175c <main@@Base+0xba28>
   216f4:	ldrb	r0, [r1]
   216f8:	cmp	r0, #32
   216fc:	bls	21748 <main@@Base+0xba14>
   21700:	mov	r8, r1
   21704:	b	2176c <main@@Base+0xba38>
   21708:	cmp	r0, #2
   2170c:	mov	r6, r4
   21710:	blt	21974 <main@@Base+0xbc40>
   21714:	ldrb	r0, [r4, #1]
   21718:	mov	r6, r4
   2171c:	cmp	r0, #34	; 0x22
   21720:	bne	21974 <main@@Base+0xbc40>
   21724:	add	r1, r4, #2
   21728:	sub	r0, r7, r1
   2172c:	cmp	r0, #2
   21730:	blt	217d0 <main@@Base+0xba9c>
   21734:	ldrb	r0, [r1]
   21738:	cmp	r0, #32
   2173c:	bls	217bc <main@@Base+0xba88>
   21740:	mov	r6, r1
   21744:	b	217e0 <main@@Base+0xbaac>
   21748:	bne	2175c <main@@Base+0xba28>
   2174c:	mov	r8, r4
   21750:	ldrb	r0, [r8, #3]!
   21754:	cmp	r0, #32
   21758:	bhi	2176c <main@@Base+0xba38>
   2175c:	mov	r0, r5
   21760:	mov	r2, r7
   21764:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   21768:	mov	r8, r0
   2176c:	cmp	r8, r7
   21770:	beq	217a4 <main@@Base+0xba70>
   21774:	ldrb	r0, [r8]
   21778:	cmp	r0, #58	; 0x3a
   2177c:	bne	217a4 <main@@Base+0xba70>
   21780:	add	r1, r8, #1
   21784:	sub	r0, r7, r1
   21788:	cmp	r0, #2
   2178c:	blt	21840 <main@@Base+0xbb0c>
   21790:	ldrb	r0, [r1]
   21794:	cmp	r0, #32
   21798:	bls	21830 <main@@Base+0xbafc>
   2179c:	mov	r8, r1
   217a0:	b	21850 <main@@Base+0xbb1c>
   217a4:	mov	r0, r5
   217a8:	mov	r1, r8
   217ac:	mov	r2, r7
   217b0:	mov	r3, #4
   217b4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   217b8:	b	2184c <main@@Base+0xbb18>
   217bc:	bne	217d0 <main@@Base+0xba9c>
   217c0:	mov	r6, r4
   217c4:	ldrb	r0, [r6, #3]!
   217c8:	cmp	r0, #32
   217cc:	bhi	217e0 <main@@Base+0xbaac>
   217d0:	mov	r0, r5
   217d4:	mov	r2, r7
   217d8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   217dc:	mov	r6, r0
   217e0:	cmp	r6, r7
   217e4:	beq	21818 <main@@Base+0xbae4>
   217e8:	ldrb	r0, [r6]
   217ec:	cmp	r0, #58	; 0x3a
   217f0:	bne	21818 <main@@Base+0xbae4>
   217f4:	add	r1, r6, #1
   217f8:	sub	r0, r7, r1
   217fc:	cmp	r0, #2
   21800:	blt	21964 <main@@Base+0xbc30>
   21804:	ldrb	r0, [r1]
   21808:	cmp	r0, #32
   2180c:	bls	21954 <main@@Base+0xbc20>
   21810:	mov	r6, r1
   21814:	b	21974 <main@@Base+0xbc40>
   21818:	mov	r0, r5
   2181c:	mov	r1, r6
   21820:	mov	r2, r7
   21824:	mov	r3, #4
   21828:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2182c:	b	21970 <main@@Base+0xbc3c>
   21830:	bne	21840 <main@@Base+0xbb0c>
   21834:	ldrb	r0, [r8, #2]!
   21838:	cmp	r0, #32
   2183c:	bhi	21850 <main@@Base+0xbb1c>
   21840:	mov	r0, r5
   21844:	mov	r2, r7
   21848:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2184c:	mov	r8, r0
   21850:	cmp	r4, r8
   21854:	beq	219f4 <main@@Base+0xbcc0>
   21858:	mov	r4, #0
   2185c:	cmp	r8, r7
   21860:	str	r4, [sp, #20]
   21864:	str	r4, [sp, #16]
   21868:	strb	r4, [sp, #10]
   2186c:	str	r4, [sp, #12]
   21870:	beq	218cc <main@@Base+0xbb98>
   21874:	add	r0, sp, #16
   21878:	mov	r1, r8
   2187c:	mov	r2, r7
   21880:	add	r3, sp, #12
   21884:	str	r0, [sp]
   21888:	mov	r0, r5
   2188c:	bl	3314c <flatcc_json_parser_integer@@Base>
   21890:	cmp	r0, r8
   21894:	beq	218d4 <main@@Base+0xbba0>
   21898:	ldr	r3, [sp, #12]
   2189c:	mov	r1, r0
   218a0:	ldr	r0, [sp, #16]
   218a4:	ldr	r2, [sp, #20]
   218a8:	cmp	r3, #0
   218ac:	beq	218dc <main@@Base+0xbba8>
   218b0:	subs	r3, r0, #129	; 0x81
   218b4:	sbcs	r2, r2, #0
   218b8:	bcc	21900 <main@@Base+0xbbcc>
   218bc:	mov	r0, r5
   218c0:	mov	r2, r7
   218c4:	mov	r3, #8
   218c8:	b	218f4 <main@@Base+0xbbc0>
   218cc:	mov	r1, r7
   218d0:	b	21910 <main@@Base+0xbbdc>
   218d4:	mov	r1, r8
   218d8:	b	21910 <main@@Base+0xbbdc>
   218dc:	subs	r3, r0, #128	; 0x80
   218e0:	sbcs	r2, r2, #0
   218e4:	bcc	21908 <main@@Base+0xbbd4>
   218e8:	mov	r0, r5
   218ec:	mov	r2, r7
   218f0:	mov	r3, #7
   218f4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   218f8:	mov	r1, r0
   218fc:	b	21910 <main@@Base+0xbbdc>
   21900:	rsb	r4, r0, #0
   21904:	b	2190c <main@@Base+0xbbd8>
   21908:	mov	r4, r0
   2190c:	strb	r4, [sp, #10]
   21910:	cmp	r8, r1
   21914:	bne	2194c <main@@Base+0xbc18>
   21918:	movw	r3, #33224	; 0x81c8
   2191c:	add	r0, sp, #10
   21920:	mov	r1, r8
   21924:	mov	r2, r7
   21928:	movt	r3, #5
   2192c:	str	r0, [sp]
   21930:	mov	r0, r5
   21934:	bl	21004 <main@@Base+0xb2d0>
   21938:	mov	r1, r0
   2193c:	cmp	r0, r8
   21940:	cmpne	r1, r7
   21944:	beq	21b44 <main@@Base+0xbe10>
   21948:	ldrb	r4, [sp, #10]
   2194c:	strb	r4, [r9, #2]
   21950:	b	21a08 <main@@Base+0xbcd4>
   21954:	bne	21964 <main@@Base+0xbc30>
   21958:	ldrb	r0, [r6, #2]!
   2195c:	cmp	r0, #32
   21960:	bhi	21974 <main@@Base+0xbc40>
   21964:	mov	r0, r5
   21968:	mov	r2, r7
   2196c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   21970:	mov	r6, r0
   21974:	cmp	r4, r6
   21978:	beq	219f4 <main@@Base+0xbcc0>
   2197c:	mov	r4, #0
   21980:	cmp	r6, r7
   21984:	str	r4, [sp, #20]
   21988:	str	r4, [sp, #16]
   2198c:	strh	r4, [sp, #10]
   21990:	str	r4, [sp, #12]
   21994:	beq	21abc <main@@Base+0xbd88>
   21998:	add	r0, sp, #16
   2199c:	mov	r1, r6
   219a0:	mov	r2, r7
   219a4:	add	r3, sp, #12
   219a8:	str	r0, [sp]
   219ac:	mov	r0, r5
   219b0:	bl	3314c <flatcc_json_parser_integer@@Base>
   219b4:	cmp	r0, r6
   219b8:	beq	21ac4 <main@@Base+0xbd90>
   219bc:	ldr	r3, [sp, #12]
   219c0:	mov	r1, r0
   219c4:	ldr	r0, [sp, #16]
   219c8:	ldr	r2, [sp, #20]
   219cc:	cmp	r3, #0
   219d0:	beq	21acc <main@@Base+0xbd98>
   219d4:	movw	r3, #32769	; 0x8001
   219d8:	subs	r3, r0, r3
   219dc:	sbcs	r2, r2, #0
   219e0:	bcc	21af0 <main@@Base+0xbdbc>
   219e4:	mov	r0, r5
   219e8:	mov	r2, r7
   219ec:	mov	r3, #8
   219f0:	b	21ae4 <main@@Base+0xbdb0>
   219f4:	mov	r0, r5
   219f8:	mov	r1, r4
   219fc:	mov	r2, r7
   21a00:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   21a04:	mov	r1, r0
   21a08:	sub	r0, r7, r1
   21a0c:	cmp	r0, #2
   21a10:	blt	21a3c <main@@Base+0xbd08>
   21a14:	ldrb	r0, [r1]
   21a18:	cmp	r0, #32
   21a1c:	bls	21a28 <main@@Base+0xbcf4>
   21a20:	mov	r2, r1
   21a24:	b	21a4c <main@@Base+0xbd18>
   21a28:	bne	21a3c <main@@Base+0xbd08>
   21a2c:	mov	r2, r1
   21a30:	ldrb	r0, [r2, #1]!
   21a34:	cmp	r0, #32
   21a38:	bhi	21a4c <main@@Base+0xbd18>
   21a3c:	mov	r0, r5
   21a40:	mov	r2, r7
   21a44:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   21a48:	mov	r2, r0
   21a4c:	cmp	r2, r7
   21a50:	beq	21b54 <main@@Base+0xbe20>
   21a54:	ldrb	r0, [r2]
   21a58:	cmp	r0, #44	; 0x2c
   21a5c:	bne	21b5c <main@@Base+0xbe28>
   21a60:	add	r1, r2, #1
   21a64:	sub	r0, r7, r1
   21a68:	cmp	r0, #2
   21a6c:	blt	21a94 <main@@Base+0xbd60>
   21a70:	ldrb	r0, [r1]
   21a74:	cmp	r0, #32
   21a78:	bls	21a84 <main@@Base+0xbd50>
   21a7c:	mov	r2, r1
   21a80:	b	21aa4 <main@@Base+0xbd70>
   21a84:	bne	21a94 <main@@Base+0xbd60>
   21a88:	ldrb	r0, [r2, #2]!
   21a8c:	cmp	r0, #32
   21a90:	bhi	21aa4 <main@@Base+0xbd70>
   21a94:	mov	r0, r5
   21a98:	mov	r2, r7
   21a9c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   21aa0:	mov	r2, r0
   21aa4:	cmp	r2, r7
   21aa8:	beq	21b88 <main@@Base+0xbe54>
   21aac:	ldrb	r0, [r2]
   21ab0:	cmp	r0, #125	; 0x7d
   21ab4:	bne	2165c <main@@Base+0xb928>
   21ab8:	b	21b64 <main@@Base+0xbe30>
   21abc:	mov	r1, r7
   21ac0:	b	21b00 <main@@Base+0xbdcc>
   21ac4:	mov	r1, r6
   21ac8:	b	21b00 <main@@Base+0xbdcc>
   21acc:	subs	r3, r0, #32768	; 0x8000
   21ad0:	sbcs	r2, r2, #0
   21ad4:	bcc	21af8 <main@@Base+0xbdc4>
   21ad8:	mov	r0, r5
   21adc:	mov	r2, r7
   21ae0:	mov	r3, #7
   21ae4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   21ae8:	mov	r1, r0
   21aec:	b	21b00 <main@@Base+0xbdcc>
   21af0:	rsb	r4, r0, #0
   21af4:	b	21afc <main@@Base+0xbdc8>
   21af8:	mov	r4, r0
   21afc:	strh	r4, [sp, #10]
   21b00:	cmp	r6, r1
   21b04:	bne	21b3c <main@@Base+0xbe08>
   21b08:	movw	r3, #33236	; 0x81d4
   21b0c:	add	r0, sp, #10
   21b10:	mov	r1, r6
   21b14:	mov	r2, r7
   21b18:	movt	r3, #5
   21b1c:	str	r0, [sp]
   21b20:	mov	r0, r5
   21b24:	bl	213ac <main@@Base+0xb678>
   21b28:	mov	r1, r0
   21b2c:	cmp	r0, r6
   21b30:	cmpne	r1, r7
   21b34:	beq	21b44 <main@@Base+0xbe10>
   21b38:	ldrh	r4, [sp, #10]
   21b3c:	strh	r4, [r9]
   21b40:	b	21a08 <main@@Base+0xbcd4>
   21b44:	mov	r0, r5
   21b48:	mov	r2, r7
   21b4c:	mov	r3, #33	; 0x21
   21b50:	b	21bcc <main@@Base+0xbe98>
   21b54:	mov	r1, r7
   21b58:	b	21bfc <main@@Base+0xbec8>
   21b5c:	cmp	r0, #125	; 0x7d
   21b60:	bne	21bbc <main@@Base+0xbe88>
   21b64:	add	r3, r2, #1
   21b68:	sub	r0, r7, r3
   21b6c:	cmp	r0, #2
   21b70:	blt	21be8 <main@@Base+0xbeb4>
   21b74:	ldrb	r0, [r3]
   21b78:	cmp	r0, #32
   21b7c:	bls	21bd4 <main@@Base+0xbea0>
   21b80:	mov	r1, r3
   21b84:	b	21bfc <main@@Base+0xbec8>
   21b88:	mov	r0, r5
   21b8c:	mov	r1, r7
   21b90:	b	21bc4 <main@@Base+0xbe90>
   21b94:	bne	21ba4 <main@@Base+0xbe70>
   21b98:	ldrb	r0, [r1, #2]!
   21b9c:	cmp	r0, #32
   21ba0:	bhi	21bfc <main@@Base+0xbec8>
   21ba4:	mov	r1, r2
   21ba8:	mov	r0, r5
   21bac:	mov	r2, r7
   21bb0:	sub	sp, fp, #28
   21bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21bb8:	b	313e4 <flatcc_json_parser_space_ext@@Base>
   21bbc:	mov	r0, r5
   21bc0:	mov	r1, r2
   21bc4:	mov	r2, r7
   21bc8:	mov	r3, #10
   21bcc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   21bd0:	b	21bf8 <main@@Base+0xbec4>
   21bd4:	bne	21be8 <main@@Base+0xbeb4>
   21bd8:	ldrb	r0, [r2, #2]!
   21bdc:	mov	r1, r2
   21be0:	cmp	r0, #32
   21be4:	bhi	21bfc <main@@Base+0xbec8>
   21be8:	mov	r0, r5
   21bec:	mov	r1, r3
   21bf0:	mov	r2, r7
   21bf4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   21bf8:	mov	r1, r0
   21bfc:	mov	r0, r1
   21c00:	sub	sp, fp, #28
   21c04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21c08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21c0c:	add	fp, sp, #28
   21c10:	sub	sp, sp, #28
   21c14:	ldr	r5, [fp, #8]
   21c18:	mov	r8, r0
   21c1c:	mov	r0, #0
   21c20:	mov	sl, r2
   21c24:	mov	r4, r1
   21c28:	cmp	r3, #4
   21c2c:	str	r0, [r5]
   21c30:	bhi	21c8c <main@@Base+0xbf58>
   21c34:	add	r0, pc, #0
   21c38:	ldr	pc, [r0, r3, lsl #2]
   21c3c:	andeq	r1, r2, r0, asr ip
   21c40:			; <UNDEFINED> instruction: 0x00021cb4
   21c44:	andeq	r1, r2, ip, asr #25
   21c48:	andeq	r1, r2, r0, lsr #26
   21c4c:	andeq	r1, r2, r4, ror sp
   21c50:	sub	r0, sl, r4
   21c54:	cmp	r0, #4
   21c58:	blt	21c78 <main@@Base+0xbf44>
   21c5c:	movw	r1, #25430	; 0x6356
   21c60:	mov	r0, r4
   21c64:	mov	r2, #4
   21c68:	movt	r1, #4
   21c6c:	bl	14ebc <bcmp@plt>
   21c70:	cmp	r0, #0
   21c74:	beq	21e2c <main@@Base+0xc0f8>
   21c78:	mov	r0, r8
   21c7c:	mov	r1, r4
   21c80:	mov	r2, sl
   21c84:	mov	r3, #26
   21c88:	b	21ca8 <main@@Base+0xbf74>
   21c8c:	ldrb	r0, [r8, #8]
   21c90:	tst	r0, #1
   21c94:	bne	21dfc <main@@Base+0xc0c8>
   21c98:	mov	r0, r8
   21c9c:	mov	r1, r4
   21ca0:	mov	r2, sl
   21ca4:	mov	r3, #15
   21ca8:	sub	sp, fp, #28
   21cac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21cb0:	b	3133c <flatcc_json_parser_set_error@@Base>
   21cb4:	mov	r0, r8
   21cb8:	mov	r1, r4
   21cbc:	mov	r2, sl
   21cc0:	mov	r3, r5
   21cc4:	bl	165e4 <main@@Base+0x8b0>
   21cc8:	b	21dc4 <main@@Base+0xc090>
   21ccc:	mov	r0, #0
   21cd0:	mov	r1, #4
   21cd4:	str	r0, [r5]
   21cd8:	ldr	r0, [r8]
   21cdc:	bl	2d514 <flatcc_builder_start_table@@Base>
   21ce0:	cmp	r0, #0
   21ce4:	bne	21db0 <main@@Base+0xc07c>
   21ce8:	cmp	r4, sl
   21cec:	beq	21d8c <main@@Base+0xc058>
   21cf0:	ldrb	r0, [r4]
   21cf4:	cmp	r0, #123	; 0x7b
   21cf8:	bne	21d8c <main@@Base+0xc058>
   21cfc:	add	r1, r4, #1
   21d00:	sub	r0, sl, r1
   21d04:	cmp	r0, #2
   21d08:	blt	21e4c <main@@Base+0xc118>
   21d0c:	ldrb	r0, [r1]
   21d10:	cmp	r0, #32
   21d14:	bls	21e3c <main@@Base+0xc108>
   21d18:	mov	r4, r1
   21d1c:	b	21e5c <main@@Base+0xc128>
   21d20:	mov	r0, #0
   21d24:	mov	r1, #0
   21d28:	str	r0, [r5]
   21d2c:	ldr	r0, [r8]
   21d30:	bl	2d514 <flatcc_builder_start_table@@Base>
   21d34:	cmp	r0, #0
   21d38:	bne	21db0 <main@@Base+0xc07c>
   21d3c:	cmp	r4, sl
   21d40:	beq	21d8c <main@@Base+0xc058>
   21d44:	ldrb	r0, [r4]
   21d48:	cmp	r0, #123	; 0x7b
   21d4c:	bne	21d8c <main@@Base+0xc058>
   21d50:	add	r1, r4, #1
   21d54:	sub	r0, sl, r1
   21d58:	cmp	r0, #2
   21d5c:	blt	228b4 <main@@Base+0xcb80>
   21d60:	ldrb	r0, [r1]
   21d64:	cmp	r0, #32
   21d68:	bls	228a4 <main@@Base+0xcb70>
   21d6c:	mov	r4, r1
   21d70:	b	228c4 <main@@Base+0xcb90>
   21d74:	mov	r0, r8
   21d78:	mov	r1, r4
   21d7c:	mov	r2, sl
   21d80:	mov	r3, r5
   21d84:	bl	24588 <main@@Base+0xe854>
   21d88:	b	21dc4 <main@@Base+0xc090>
   21d8c:	mov	r0, r8
   21d90:	mov	r1, r4
   21d94:	mov	r2, sl
   21d98:	mov	r3, #21
   21d9c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   21da0:	mov	r4, r0
   21da4:	ldr	r0, [r8, #20]
   21da8:	cmp	r0, #0
   21dac:	beq	21e14 <main@@Base+0xc0e0>
   21db0:	mov	r0, r8
   21db4:	mov	r1, r4
   21db8:	mov	r2, sl
   21dbc:	mov	r3, #33	; 0x21
   21dc0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   21dc4:	mov	r4, r0
   21dc8:	ldr	r0, [r8, #20]
   21dcc:	cmp	r0, #0
   21dd0:	bne	21e30 <main@@Base+0xc0fc>
   21dd4:	ldr	r0, [r5]
   21dd8:	cmp	r0, #0
   21ddc:	bne	21e30 <main@@Base+0xc0fc>
   21de0:	mov	r0, r8
   21de4:	mov	r1, r4
   21de8:	mov	r2, sl
   21dec:	mov	r3, #33	; 0x21
   21df0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   21df4:	mov	r4, r0
   21df8:	b	21e30 <main@@Base+0xc0fc>
   21dfc:	mov	r0, r8
   21e00:	mov	r1, r4
   21e04:	mov	r2, sl
   21e08:	sub	sp, fp, #28
   21e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21e10:	b	31b3c <flatcc_json_parser_generic_json@@Base>
   21e14:	ldr	r0, [r8]
   21e18:	bl	2de74 <flatcc_builder_end_table@@Base>
   21e1c:	cmp	r0, #0
   21e20:	str	r0, [r5]
   21e24:	bne	21dc8 <main@@Base+0xc094>
   21e28:	b	21db0 <main@@Base+0xc07c>
   21e2c:	add	r4, r4, #4
   21e30:	mov	r0, r4
   21e34:	sub	sp, fp, #28
   21e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e3c:	bne	21e4c <main@@Base+0xc118>
   21e40:	ldrb	r0, [r4, #2]!
   21e44:	cmp	r0, #32
   21e48:	bhi	21e5c <main@@Base+0xc128>
   21e4c:	mov	r0, r8
   21e50:	mov	r2, sl
   21e54:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   21e58:	mov	r4, r0
   21e5c:	cmp	r4, sl
   21e60:	mov	r2, sl
   21e64:	beq	21e78 <main@@Base+0xc144>
   21e68:	ldrb	r0, [r4]
   21e6c:	cmp	r0, #125	; 0x7d
   21e70:	beq	228dc <main@@Base+0xcba8>
   21e74:	mov	r2, r4
   21e78:	cmp	r2, sl
   21e7c:	mov	r9, sl
   21e80:	beq	21eb0 <main@@Base+0xc17c>
   21e84:	ldrb	r0, [r2]
   21e88:	cmp	r0, #34	; 0x22
   21e8c:	bne	21e98 <main@@Base+0xc164>
   21e90:	add	r9, r2, #1
   21e94:	b	21eb0 <main@@Base+0xc17c>
   21e98:	mov	r1, r2
   21e9c:	mov	r0, r8
   21ea0:	mov	r2, sl
   21ea4:	mov	r3, #5
   21ea8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   21eac:	mov	r9, r0
   21eb0:	sub	lr, sl, r9
   21eb4:	mov	r0, #8
   21eb8:	cmp	lr, #8
   21ebc:	movcc	r0, lr
   21ec0:	sub	r2, r0, #1
   21ec4:	cmp	r2, #7
   21ec8:	bhi	22718 <main@@Base+0xc9e4>
   21ecc:	mov	ip, r5
   21ed0:	add	r5, pc, #24
   21ed4:	mov	r0, #0
   21ed8:	mov	r1, #0
   21edc:	mov	r3, #0
   21ee0:	mov	r7, #0
   21ee4:	mov	r6, #0
   21ee8:	mov	r4, #0
   21eec:	ldr	pc, [r5, r2, lsl #2]
   21ef0:	andeq	r1, r2, r0, asr #30
   21ef4:	andeq	r1, r2, r8, lsr pc
   21ef8:	andeq	r1, r2, r0, lsr pc
   21efc:	andeq	r1, r2, r8, lsr #30
   21f00:	andeq	r1, r2, r8, lsl pc
   21f04:	andeq	r1, r2, r0, lsl pc
   21f08:	andeq	r1, r2, r0, lsl pc
   21f0c:	andeq	r1, r2, r0, lsl pc
   21f10:	ldrb	r1, [r9, #5]
   21f14:	lsl	r1, r1, #16
   21f18:	ldrb	r2, [r9, #4]
   21f1c:	mov	r3, r0
   21f20:	orr	r1, r1, r2, lsl #24
   21f24:	mov	r0, r1
   21f28:	ldrb	r1, [r9, #3]
   21f2c:	orr	r7, r1, r3
   21f30:	ldrb	r1, [r9, #2]
   21f34:	orr	r6, r7, r1, lsl #8
   21f38:	ldrb	r1, [r9, #1]
   21f3c:	orr	r4, r6, r1, lsl #16
   21f40:	ldrb	r1, [r9]
   21f44:	movw	r3, #29234	; 0x7232
   21f48:	lsr	r2, r0, #16
   21f4c:	movt	r3, #27759	; 0x6c6f
   21f50:	orr	r7, r4, r1, lsl #24
   21f54:	movw	r1, #25455	; 0x636f
   21f58:	orr	r2, r2, r7, lsl #16
   21f5c:	eor	r1, r1, r7, lsr #16
   21f60:	eor	r2, r2, r3
   21f64:	orrs	r1, r2, r1
   21f68:	bne	21fb0 <main@@Base+0xc27c>
   21f6c:	cmp	lr, #7
   21f70:	mov	r6, r9
   21f74:	mov	r5, ip
   21f78:	blt	22138 <main@@Base+0xc404>
   21f7c:	ldrb	r0, [r9, #6]
   21f80:	mov	r6, r9
   21f84:	cmp	r0, #34	; 0x22
   21f88:	bne	22138 <main@@Base+0xc404>
   21f8c:	add	r1, r9, #7
   21f90:	sub	r0, sl, r1
   21f94:	cmp	r0, #2
   21f98:	blt	22024 <main@@Base+0xc2f0>
   21f9c:	ldrb	r0, [r1]
   21fa0:	cmp	r0, #32
   21fa4:	bls	22010 <main@@Base+0xc2dc>
   21fa8:	mov	r6, r1
   21fac:	b	2203c <main@@Base+0xc308>
   21fb0:	movw	r1, #27759	; 0x6c6f
   21fb4:	and	r0, r0, #-16777216	; 0xff000000
   21fb8:	mov	r5, ip
   21fbc:	movt	r1, #25455	; 0x636f
   21fc0:	eor	r0, r0, #1912602624	; 0x72000000
   21fc4:	eor	r1, r7, r1
   21fc8:	orrs	r0, r0, r1
   21fcc:	bne	22308 <main@@Base+0xc5d4>
   21fd0:	cmp	lr, #6
   21fd4:	mov	r6, r9
   21fd8:	blt	22288 <main@@Base+0xc554>
   21fdc:	ldrb	r0, [r9, #5]
   21fe0:	mov	r6, r9
   21fe4:	cmp	r0, #34	; 0x22
   21fe8:	bne	22288 <main@@Base+0xc554>
   21fec:	add	r1, r9, #6
   21ff0:	sub	r0, sl, r1
   21ff4:	cmp	r0, #2
   21ff8:	blt	220a4 <main@@Base+0xc370>
   21ffc:	ldrb	r0, [r1]
   22000:	cmp	r0, #32
   22004:	bls	22090 <main@@Base+0xc35c>
   22008:	mov	r6, r1
   2200c:	b	220bc <main@@Base+0xc388>
   22010:	bne	22024 <main@@Base+0xc2f0>
   22014:	mov	r6, r9
   22018:	ldrb	r0, [r6, #8]!
   2201c:	cmp	r0, #32
   22020:	bhi	2203c <main@@Base+0xc308>
   22024:	mov	r0, r8
   22028:	mov	r2, sl
   2202c:	mov	r4, lr
   22030:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   22034:	mov	lr, r4
   22038:	mov	r6, r0
   2203c:	cmp	r6, sl
   22040:	beq	22074 <main@@Base+0xc340>
   22044:	ldrb	r0, [r6]
   22048:	cmp	r0, #58	; 0x3a
   2204c:	bne	22074 <main@@Base+0xc340>
   22050:	add	r1, r6, #1
   22054:	sub	r0, sl, r1
   22058:	cmp	r0, #2
   2205c:	blt	22120 <main@@Base+0xc3ec>
   22060:	ldrb	r0, [r1]
   22064:	cmp	r0, #32
   22068:	bls	22110 <main@@Base+0xc3dc>
   2206c:	mov	r6, r1
   22070:	b	22138 <main@@Base+0xc404>
   22074:	mov	r0, r8
   22078:	mov	r1, r6
   2207c:	mov	r2, sl
   22080:	mov	r3, #4
   22084:	mov	r4, lr
   22088:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2208c:	b	22130 <main@@Base+0xc3fc>
   22090:	bne	220a4 <main@@Base+0xc370>
   22094:	mov	r6, r9
   22098:	ldrb	r0, [r6, #7]!
   2209c:	cmp	r0, #32
   220a0:	bhi	220bc <main@@Base+0xc388>
   220a4:	mov	r0, r8
   220a8:	mov	r2, sl
   220ac:	mov	r4, lr
   220b0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   220b4:	mov	lr, r4
   220b8:	mov	r6, r0
   220bc:	cmp	r6, sl
   220c0:	beq	220f4 <main@@Base+0xc3c0>
   220c4:	ldrb	r0, [r6]
   220c8:	cmp	r0, #58	; 0x3a
   220cc:	bne	220f4 <main@@Base+0xc3c0>
   220d0:	add	r1, r6, #1
   220d4:	sub	r0, sl, r1
   220d8:	cmp	r0, #2
   220dc:	blt	22270 <main@@Base+0xc53c>
   220e0:	ldrb	r0, [r1]
   220e4:	cmp	r0, #32
   220e8:	bls	22260 <main@@Base+0xc52c>
   220ec:	mov	r6, r1
   220f0:	b	22288 <main@@Base+0xc554>
   220f4:	mov	r0, r8
   220f8:	mov	r1, r6
   220fc:	mov	r2, sl
   22100:	mov	r3, #4
   22104:	mov	r4, lr
   22108:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2210c:	b	22280 <main@@Base+0xc54c>
   22110:	bne	22120 <main@@Base+0xc3ec>
   22114:	ldrb	r0, [r6, #2]!
   22118:	cmp	r0, #32
   2211c:	bhi	22138 <main@@Base+0xc404>
   22120:	mov	r0, r8
   22124:	mov	r2, sl
   22128:	mov	r4, lr
   2212c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   22130:	mov	lr, r4
   22134:	mov	r6, r0
   22138:	cmp	r9, r6
   2213c:	beq	22308 <main@@Base+0xc5d4>
   22140:	mov	r7, #0
   22144:	cmp	r6, sl
   22148:	str	r7, [sp, #20]
   2214c:	str	r7, [sp, #16]
   22150:	strb	r7, [sp, #11]
   22154:	str	r7, [sp, #12]
   22158:	beq	221b8 <main@@Base+0xc484>
   2215c:	add	r0, sp, #16
   22160:	mov	r1, r6
   22164:	mov	r2, sl
   22168:	add	r3, sp, #12
   2216c:	str	r0, [sp]
   22170:	mov	r0, r8
   22174:	bl	3314c <flatcc_json_parser_integer@@Base>
   22178:	cmp	r0, r6
   2217c:	beq	221c0 <main@@Base+0xc48c>
   22180:	ldr	r2, [sp, #12]
   22184:	mov	r4, r0
   22188:	ldr	r0, [sp, #16]
   2218c:	ldr	r1, [sp, #20]
   22190:	cmp	r2, #0
   22194:	beq	221c8 <main@@Base+0xc494>
   22198:	subs	r2, r0, #129	; 0x81
   2219c:	sbcs	r1, r1, #0
   221a0:	bcc	221f0 <main@@Base+0xc4bc>
   221a4:	mov	r0, r8
   221a8:	mov	r1, r4
   221ac:	mov	r2, sl
   221b0:	mov	r3, #8
   221b4:	b	221e4 <main@@Base+0xc4b0>
   221b8:	mov	r4, sl
   221bc:	b	22200 <main@@Base+0xc4cc>
   221c0:	mov	r4, r6
   221c4:	b	22200 <main@@Base+0xc4cc>
   221c8:	subs	r2, r0, #128	; 0x80
   221cc:	sbcs	r1, r1, #0
   221d0:	bcc	221f8 <main@@Base+0xc4c4>
   221d4:	mov	r0, r8
   221d8:	mov	r1, r4
   221dc:	mov	r2, sl
   221e0:	mov	r3, #7
   221e4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   221e8:	mov	r4, r0
   221ec:	b	22200 <main@@Base+0xc4cc>
   221f0:	rsb	r7, r0, #0
   221f4:	b	221fc <main@@Base+0xc4c8>
   221f8:	mov	r7, r0
   221fc:	strb	r7, [sp, #11]
   22200:	cmp	r6, r4
   22204:	bne	2223c <main@@Base+0xc508>
   22208:	movw	r3, #33248	; 0x81e0
   2220c:	add	r0, sp, #11
   22210:	mov	r1, r6
   22214:	mov	r2, sl
   22218:	movt	r3, #5
   2221c:	str	r0, [sp]
   22220:	mov	r0, r8
   22224:	bl	21004 <main@@Base+0xb2d0>
   22228:	mov	r4, r0
   2222c:	cmp	r0, r6
   22230:	cmpne	r4, sl
   22234:	beq	21db0 <main@@Base+0xc07c>
   22238:	ldrb	r7, [sp, #11]
   2223c:	uxtb	r0, r7
   22240:	cmp	r0, #2
   22244:	bne	22254 <main@@Base+0xc520>
   22248:	ldrb	r0, [r8, #8]
   2224c:	tst	r0, #2
   22250:	beq	227e0 <main@@Base+0xcaac>
   22254:	ldr	r0, [r8]
   22258:	mov	r1, #1
   2225c:	b	224c8 <main@@Base+0xc794>
   22260:	bne	22270 <main@@Base+0xc53c>
   22264:	ldrb	r0, [r6, #2]!
   22268:	cmp	r0, #32
   2226c:	bhi	22288 <main@@Base+0xc554>
   22270:	mov	r0, r8
   22274:	mov	r2, sl
   22278:	mov	r4, lr
   2227c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   22280:	mov	lr, r4
   22284:	mov	r6, r0
   22288:	cmp	r9, r6
   2228c:	beq	22308 <main@@Base+0xc5d4>
   22290:	mov	r7, #0
   22294:	cmp	r6, sl
   22298:	str	r7, [sp, #20]
   2229c:	str	r7, [sp, #16]
   222a0:	strb	r7, [sp, #11]
   222a4:	str	r7, [sp, #12]
   222a8:	beq	223b0 <main@@Base+0xc67c>
   222ac:	add	r0, sp, #16
   222b0:	mov	r1, r6
   222b4:	mov	r2, sl
   222b8:	add	r3, sp, #12
   222bc:	str	r0, [sp]
   222c0:	mov	r0, r8
   222c4:	bl	3314c <flatcc_json_parser_integer@@Base>
   222c8:	cmp	r0, r6
   222cc:	beq	223b8 <main@@Base+0xc684>
   222d0:	ldr	r2, [sp, #12]
   222d4:	mov	r4, r0
   222d8:	ldr	r0, [sp, #16]
   222dc:	ldr	r1, [sp, #20]
   222e0:	cmp	r2, #0
   222e4:	beq	223c0 <main@@Base+0xc68c>
   222e8:	subs	r2, r0, #129	; 0x81
   222ec:	sbcs	r1, r1, #0
   222f0:	bcc	223e8 <main@@Base+0xc6b4>
   222f4:	mov	r0, r8
   222f8:	mov	r1, r4
   222fc:	mov	r2, sl
   22300:	mov	r3, #8
   22304:	b	223dc <main@@Base+0xc6a8>
   22308:	movw	r1, #12800	; 0x3200
   2230c:	bic	r0, r7, #255	; 0xff
   22310:	movt	r1, #30051	; 0x7563
   22314:	teq	r0, r1
   22318:	bne	2235c <main@@Base+0xc628>
   2231c:	cmp	lr, #4
   22320:	mov	r7, r9
   22324:	blt	22578 <main@@Base+0xc844>
   22328:	ldrb	r0, [r9, #3]
   2232c:	mov	r7, r9
   22330:	cmp	r0, #34	; 0x22
   22334:	bne	22578 <main@@Base+0xc844>
   22338:	add	r1, r9, #4
   2233c:	sub	r0, sl, r1
   22340:	cmp	r0, #2
   22344:	blt	22404 <main@@Base+0xc6d0>
   22348:	ldrb	r0, [r1]
   2234c:	cmp	r0, #32
   22350:	bls	223f0 <main@@Base+0xc6bc>
   22354:	mov	r7, r1
   22358:	b	22414 <main@@Base+0xc6e0>
   2235c:	movw	r0, #0
   22360:	bfc	r7, #0, #16
   22364:	movt	r0, #30051	; 0x7563
   22368:	teq	r7, r0
   2236c:	bne	22718 <main@@Base+0xc9e4>
   22370:	cmp	lr, #3
   22374:	mov	r7, r9
   22378:	blt	226ac <main@@Base+0xc978>
   2237c:	ldrb	r0, [r9, #2]
   22380:	mov	r7, r9
   22384:	cmp	r0, #34	; 0x22
   22388:	bne	226ac <main@@Base+0xc978>
   2238c:	add	r1, r9, #3
   22390:	sub	r0, sl, r1
   22394:	cmp	r0, #2
   22398:	blt	224f8 <main@@Base+0xc7c4>
   2239c:	ldrb	r0, [r1]
   223a0:	cmp	r0, #32
   223a4:	bls	224e4 <main@@Base+0xc7b0>
   223a8:	mov	r7, r1
   223ac:	b	22508 <main@@Base+0xc7d4>
   223b0:	mov	r4, sl
   223b4:	b	2246c <main@@Base+0xc738>
   223b8:	mov	r4, r6
   223bc:	b	2246c <main@@Base+0xc738>
   223c0:	subs	r2, r0, #128	; 0x80
   223c4:	sbcs	r1, r1, #0
   223c8:	bcc	22464 <main@@Base+0xc730>
   223cc:	mov	r0, r8
   223d0:	mov	r1, r4
   223d4:	mov	r2, sl
   223d8:	mov	r3, #7
   223dc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   223e0:	mov	r4, r0
   223e4:	b	2246c <main@@Base+0xc738>
   223e8:	rsb	r7, r0, #0
   223ec:	b	22468 <main@@Base+0xc734>
   223f0:	bne	22404 <main@@Base+0xc6d0>
   223f4:	mov	r7, r9
   223f8:	ldrb	r0, [r7, #5]!
   223fc:	cmp	r0, #32
   22400:	bhi	22414 <main@@Base+0xc6e0>
   22404:	mov	r0, r8
   22408:	mov	r2, sl
   2240c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   22410:	mov	r7, r0
   22414:	cmp	r7, sl
   22418:	beq	2244c <main@@Base+0xc718>
   2241c:	ldrb	r0, [r7]
   22420:	cmp	r0, #58	; 0x3a
   22424:	bne	2244c <main@@Base+0xc718>
   22428:	add	r1, r7, #1
   2242c:	sub	r0, sl, r1
   22430:	cmp	r0, #2
   22434:	blt	22568 <main@@Base+0xc834>
   22438:	ldrb	r0, [r1]
   2243c:	cmp	r0, #32
   22440:	bls	22558 <main@@Base+0xc824>
   22444:	mov	r7, r1
   22448:	b	22578 <main@@Base+0xc844>
   2244c:	mov	r0, r8
   22450:	mov	r1, r7
   22454:	mov	r2, sl
   22458:	mov	r3, #4
   2245c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   22460:	b	22574 <main@@Base+0xc840>
   22464:	mov	r7, r0
   22468:	strb	r7, [sp, #11]
   2246c:	cmp	r6, r4
   22470:	bne	224a8 <main@@Base+0xc774>
   22474:	movw	r3, #33264	; 0x81f0
   22478:	add	r0, sp, #11
   2247c:	mov	r1, r6
   22480:	mov	r2, sl
   22484:	movt	r3, #5
   22488:	str	r0, [sp]
   2248c:	mov	r0, r8
   22490:	bl	21004 <main@@Base+0xb2d0>
   22494:	mov	r4, r0
   22498:	cmp	r0, r6
   2249c:	cmpne	r4, sl
   224a0:	beq	21db0 <main@@Base+0xc07c>
   224a4:	ldrb	r7, [sp, #11]
   224a8:	uxtb	r0, r7
   224ac:	cmp	r0, #2
   224b0:	bne	224c0 <main@@Base+0xc78c>
   224b4:	ldrb	r0, [r8, #8]
   224b8:	tst	r0, #2
   224bc:	beq	227e0 <main@@Base+0xcaac>
   224c0:	ldr	r0, [r8]
   224c4:	mov	r1, #0
   224c8:	mov	r2, #1
   224cc:	mov	r3, #1
   224d0:	bl	2e760 <flatcc_builder_table_add@@Base>
   224d4:	cmp	r0, #0
   224d8:	beq	21db0 <main@@Base+0xc07c>
   224dc:	strb	r7, [r0]
   224e0:	b	227e0 <main@@Base+0xcaac>
   224e4:	bne	224f8 <main@@Base+0xc7c4>
   224e8:	mov	r7, r9
   224ec:	ldrb	r0, [r7, #4]!
   224f0:	cmp	r0, #32
   224f4:	bhi	22508 <main@@Base+0xc7d4>
   224f8:	mov	r0, r8
   224fc:	mov	r2, sl
   22500:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   22504:	mov	r7, r0
   22508:	cmp	r7, sl
   2250c:	beq	22540 <main@@Base+0xc80c>
   22510:	ldrb	r0, [r7]
   22514:	cmp	r0, #58	; 0x3a
   22518:	bne	22540 <main@@Base+0xc80c>
   2251c:	add	r1, r7, #1
   22520:	sub	r0, sl, r1
   22524:	cmp	r0, #2
   22528:	blt	2269c <main@@Base+0xc968>
   2252c:	ldrb	r0, [r1]
   22530:	cmp	r0, #32
   22534:	bls	2268c <main@@Base+0xc958>
   22538:	mov	r7, r1
   2253c:	b	226ac <main@@Base+0xc978>
   22540:	mov	r0, r8
   22544:	mov	r1, r7
   22548:	mov	r2, sl
   2254c:	mov	r3, #4
   22550:	bl	3133c <flatcc_json_parser_set_error@@Base>
   22554:	b	226a8 <main@@Base+0xc974>
   22558:	bne	22568 <main@@Base+0xc834>
   2255c:	ldrb	r0, [r7, #2]!
   22560:	cmp	r0, #32
   22564:	bhi	22578 <main@@Base+0xc844>
   22568:	mov	r0, r8
   2256c:	mov	r2, sl
   22570:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   22574:	mov	r7, r0
   22578:	cmp	r9, r7
   2257c:	beq	22718 <main@@Base+0xc9e4>
   22580:	mov	r6, #0
   22584:	cmp	r7, sl
   22588:	str	r6, [sp, #20]
   2258c:	str	r6, [sp, #16]
   22590:	strb	r6, [sp, #11]
   22594:	str	r6, [sp, #12]
   22598:	beq	225e4 <main@@Base+0xc8b0>
   2259c:	add	r0, sp, #16
   225a0:	mov	r1, r7
   225a4:	mov	r2, sl
   225a8:	add	r3, sp, #12
   225ac:	str	r0, [sp]
   225b0:	mov	r0, r8
   225b4:	bl	3314c <flatcc_json_parser_integer@@Base>
   225b8:	cmp	r0, r7
   225bc:	beq	225ec <main@@Base+0xc8b8>
   225c0:	mov	r4, r0
   225c4:	ldr	r0, [sp, #12]
   225c8:	cmp	r0, #0
   225cc:	beq	225f4 <main@@Base+0xc8c0>
   225d0:	mov	r0, r8
   225d4:	mov	r1, r4
   225d8:	mov	r2, sl
   225dc:	mov	r3, #8
   225e0:	b	22618 <main@@Base+0xc8e4>
   225e4:	mov	r4, sl
   225e8:	b	22620 <main@@Base+0xc8ec>
   225ec:	mov	r4, r7
   225f0:	b	22620 <main@@Base+0xc8ec>
   225f4:	ldr	r0, [sp, #16]
   225f8:	ldr	r1, [sp, #20]
   225fc:	subs	r2, r0, #256	; 0x100
   22600:	sbcs	r1, r1, #0
   22604:	bcc	22680 <main@@Base+0xc94c>
   22608:	mov	r0, r8
   2260c:	mov	r1, r4
   22610:	mov	r2, sl
   22614:	mov	r3, #7
   22618:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2261c:	mov	r4, r0
   22620:	cmp	r7, r4
   22624:	bne	2265c <main@@Base+0xc928>
   22628:	movw	r3, #33280	; 0x8200
   2262c:	add	r0, sp, #11
   22630:	mov	r1, r7
   22634:	mov	r2, sl
   22638:	movt	r3, #5
   2263c:	str	r0, [sp]
   22640:	mov	r0, r8
   22644:	bl	211e0 <main@@Base+0xb4ac>
   22648:	mov	r4, r0
   2264c:	cmp	r0, r7
   22650:	cmpne	r4, sl
   22654:	beq	21db0 <main@@Base+0xc07c>
   22658:	ldrb	r6, [sp, #11]
   2265c:	uxtb	r0, r6
   22660:	cmp	r0, #2
   22664:	bne	22674 <main@@Base+0xc940>
   22668:	ldrb	r0, [r8, #8]
   2266c:	tst	r0, #2
   22670:	beq	227e0 <main@@Base+0xcaac>
   22674:	ldr	r0, [r8]
   22678:	mov	r1, #3
   2267c:	b	227c8 <main@@Base+0xca94>
   22680:	mov	r6, r0
   22684:	strb	r0, [sp, #11]
   22688:	b	22620 <main@@Base+0xc8ec>
   2268c:	bne	2269c <main@@Base+0xc968>
   22690:	ldrb	r0, [r7, #2]!
   22694:	cmp	r0, #32
   22698:	bhi	226ac <main@@Base+0xc978>
   2269c:	mov	r0, r8
   226a0:	mov	r2, sl
   226a4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   226a8:	mov	r7, r0
   226ac:	cmp	r9, r7
   226b0:	beq	22718 <main@@Base+0xc9e4>
   226b4:	mov	r6, #0
   226b8:	cmp	r7, sl
   226bc:	str	r6, [sp, #20]
   226c0:	str	r6, [sp, #16]
   226c4:	strb	r6, [sp, #11]
   226c8:	str	r6, [sp, #12]
   226cc:	beq	22730 <main@@Base+0xc9fc>
   226d0:	add	r0, sp, #16
   226d4:	mov	r1, r7
   226d8:	mov	r2, sl
   226dc:	add	r3, sp, #12
   226e0:	str	r0, [sp]
   226e4:	mov	r0, r8
   226e8:	bl	3314c <flatcc_json_parser_integer@@Base>
   226ec:	cmp	r0, r7
   226f0:	beq	22738 <main@@Base+0xca04>
   226f4:	mov	r4, r0
   226f8:	ldr	r0, [sp, #12]
   226fc:	cmp	r0, #0
   22700:	beq	22740 <main@@Base+0xca0c>
   22704:	mov	r0, r8
   22708:	mov	r1, r4
   2270c:	mov	r2, sl
   22710:	mov	r3, #8
   22714:	b	22764 <main@@Base+0xca30>
   22718:	mov	r0, r8
   2271c:	mov	r1, r9
   22720:	mov	r2, sl
   22724:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   22728:	mov	r4, r0
   2272c:	b	227e0 <main@@Base+0xcaac>
   22730:	mov	r4, sl
   22734:	b	2276c <main@@Base+0xca38>
   22738:	mov	r4, r7
   2273c:	b	2276c <main@@Base+0xca38>
   22740:	ldr	r0, [sp, #16]
   22744:	ldr	r1, [sp, #20]
   22748:	subs	r2, r0, #256	; 0x100
   2274c:	sbcs	r1, r1, #0
   22750:	bcc	22898 <main@@Base+0xcb64>
   22754:	mov	r0, r8
   22758:	mov	r1, r4
   2275c:	mov	r2, sl
   22760:	mov	r3, #7
   22764:	bl	3133c <flatcc_json_parser_set_error@@Base>
   22768:	mov	r4, r0
   2276c:	cmp	r7, r4
   22770:	bne	227a8 <main@@Base+0xca74>
   22774:	movw	r3, #33292	; 0x820c
   22778:	add	r0, sp, #11
   2277c:	mov	r1, r7
   22780:	mov	r2, sl
   22784:	movt	r3, #5
   22788:	str	r0, [sp]
   2278c:	mov	r0, r8
   22790:	bl	211e0 <main@@Base+0xb4ac>
   22794:	mov	r4, r0
   22798:	cmp	r0, r7
   2279c:	cmpne	r4, sl
   227a0:	beq	21db0 <main@@Base+0xc07c>
   227a4:	ldrb	r6, [sp, #11]
   227a8:	uxtb	r0, r6
   227ac:	cmp	r0, #2
   227b0:	bne	227c0 <main@@Base+0xca8c>
   227b4:	ldrb	r0, [r8, #8]
   227b8:	tst	r0, #2
   227bc:	beq	227e0 <main@@Base+0xcaac>
   227c0:	ldr	r0, [r8]
   227c4:	mov	r1, #2
   227c8:	mov	r2, #1
   227cc:	mov	r3, #1
   227d0:	bl	2e760 <flatcc_builder_table_add@@Base>
   227d4:	cmp	r0, #0
   227d8:	beq	21db0 <main@@Base+0xc07c>
   227dc:	strb	r6, [r0]
   227e0:	sub	r0, sl, r4
   227e4:	cmp	r0, #2
   227e8:	blt	22814 <main@@Base+0xcae0>
   227ec:	ldrb	r0, [r4]
   227f0:	cmp	r0, #32
   227f4:	bls	22800 <main@@Base+0xcacc>
   227f8:	mov	r2, r4
   227fc:	b	22828 <main@@Base+0xcaf4>
   22800:	bne	22814 <main@@Base+0xcae0>
   22804:	mov	r2, r4
   22808:	ldrb	r0, [r2, #1]!
   2280c:	cmp	r0, #32
   22810:	bhi	22828 <main@@Base+0xcaf4>
   22814:	mov	r0, r8
   22818:	mov	r1, r4
   2281c:	mov	r2, sl
   22820:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   22824:	mov	r2, r0
   22828:	cmp	r2, sl
   2282c:	beq	22a08 <main@@Base+0xccd4>
   22830:	ldrb	r0, [r2]
   22834:	cmp	r0, #44	; 0x2c
   22838:	bne	22a5c <main@@Base+0xcd28>
   2283c:	add	r1, r2, #1
   22840:	sub	r0, sl, r1
   22844:	cmp	r0, #2
   22848:	blt	22870 <main@@Base+0xcb3c>
   2284c:	ldrb	r0, [r1]
   22850:	cmp	r0, #32
   22854:	bls	22860 <main@@Base+0xcb2c>
   22858:	mov	r2, r1
   2285c:	b	22880 <main@@Base+0xcb4c>
   22860:	bne	22870 <main@@Base+0xcb3c>
   22864:	ldrb	r0, [r2, #2]!
   22868:	cmp	r0, #32
   2286c:	bhi	22880 <main@@Base+0xcb4c>
   22870:	mov	r0, r8
   22874:	mov	r2, sl
   22878:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2287c:	mov	r2, r0
   22880:	cmp	r2, sl
   22884:	beq	22a10 <main@@Base+0xccdc>
   22888:	ldrb	r0, [r2]
   2288c:	cmp	r0, #125	; 0x7d
   22890:	bne	21e78 <main@@Base+0xc144>
   22894:	b	22a64 <main@@Base+0xcd30>
   22898:	mov	r6, r0
   2289c:	strb	r0, [sp, #11]
   228a0:	b	2276c <main@@Base+0xca38>
   228a4:	bne	228b4 <main@@Base+0xcb80>
   228a8:	ldrb	r0, [r4, #2]!
   228ac:	cmp	r0, #32
   228b0:	bhi	228c4 <main@@Base+0xcb90>
   228b4:	mov	r0, r8
   228b8:	mov	r2, sl
   228bc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   228c0:	mov	r4, r0
   228c4:	cmp	r4, sl
   228c8:	mov	r3, sl
   228cc:	beq	22908 <main@@Base+0xcbd4>
   228d0:	ldrb	r0, [r4]
   228d4:	cmp	r0, #125	; 0x7d
   228d8:	bne	22904 <main@@Base+0xcbd0>
   228dc:	add	r1, r4, #1
   228e0:	sub	r0, sl, r1
   228e4:	cmp	r0, #2
   228e8:	blt	22ab0 <main@@Base+0xcd7c>
   228ec:	ldrb	r0, [r1]
   228f0:	cmp	r0, #32
   228f4:	bhi	22a80 <main@@Base+0xcd4c>
   228f8:	bne	22ab0 <main@@Base+0xcd7c>
   228fc:	ldrb	r0, [r4, #2]!
   22900:	b	22aa8 <main@@Base+0xcd74>
   22904:	mov	r3, r4
   22908:	cmp	r3, sl
   2290c:	mov	r1, sl
   22910:	beq	22940 <main@@Base+0xcc0c>
   22914:	ldrb	r0, [r3]
   22918:	cmp	r0, #34	; 0x22
   2291c:	bne	22928 <main@@Base+0xcbf4>
   22920:	add	r1, r3, #1
   22924:	b	22940 <main@@Base+0xcc0c>
   22928:	mov	r1, r3
   2292c:	mov	r0, r8
   22930:	mov	r2, sl
   22934:	mov	r3, #5
   22938:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2293c:	mov	r1, r0
   22940:	mov	r0, r8
   22944:	mov	r2, sl
   22948:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   2294c:	mov	r2, r0
   22950:	sub	r0, sl, r0
   22954:	cmp	r0, #2
   22958:	blt	22984 <main@@Base+0xcc50>
   2295c:	ldrb	r0, [r2]
   22960:	cmp	r0, #32
   22964:	bls	22970 <main@@Base+0xcc3c>
   22968:	mov	r3, r2
   2296c:	b	22998 <main@@Base+0xcc64>
   22970:	bne	22984 <main@@Base+0xcc50>
   22974:	mov	r3, r2
   22978:	ldrb	r0, [r3, #1]!
   2297c:	cmp	r0, #32
   22980:	bhi	22998 <main@@Base+0xcc64>
   22984:	mov	r1, r2
   22988:	mov	r0, r8
   2298c:	mov	r2, sl
   22990:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   22994:	mov	r3, r0
   22998:	cmp	r3, sl
   2299c:	beq	22a08 <main@@Base+0xccd4>
   229a0:	ldrb	r0, [r3]
   229a4:	cmp	r0, #44	; 0x2c
   229a8:	bne	22a1c <main@@Base+0xcce8>
   229ac:	add	r1, r3, #1
   229b0:	sub	r0, sl, r1
   229b4:	cmp	r0, #2
   229b8:	blt	229e0 <main@@Base+0xccac>
   229bc:	ldrb	r0, [r1]
   229c0:	cmp	r0, #32
   229c4:	bls	229d0 <main@@Base+0xcc9c>
   229c8:	mov	r3, r1
   229cc:	b	229f0 <main@@Base+0xccbc>
   229d0:	bne	229e0 <main@@Base+0xccac>
   229d4:	ldrb	r0, [r3, #2]!
   229d8:	cmp	r0, #32
   229dc:	bhi	229f0 <main@@Base+0xccbc>
   229e0:	mov	r0, r8
   229e4:	mov	r2, sl
   229e8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   229ec:	mov	r3, r0
   229f0:	cmp	r3, sl
   229f4:	beq	22a10 <main@@Base+0xccdc>
   229f8:	ldrb	r0, [r3]
   229fc:	cmp	r0, #125	; 0x7d
   22a00:	bne	22908 <main@@Base+0xcbd4>
   22a04:	b	22a24 <main@@Base+0xccf0>
   22a08:	mov	r4, sl
   22a0c:	b	21da4 <main@@Base+0xc070>
   22a10:	mov	r0, r8
   22a14:	mov	r1, sl
   22a18:	b	22a90 <main@@Base+0xcd5c>
   22a1c:	cmp	r0, #125	; 0x7d
   22a20:	bne	22a50 <main@@Base+0xcd1c>
   22a24:	add	r1, r3, #1
   22a28:	sub	r0, sl, r1
   22a2c:	cmp	r0, #2
   22a30:	blt	22ab0 <main@@Base+0xcd7c>
   22a34:	ldrb	r0, [r1]
   22a38:	cmp	r0, #32
   22a3c:	bhi	22a80 <main@@Base+0xcd4c>
   22a40:	bne	22ab0 <main@@Base+0xcd7c>
   22a44:	ldrb	r0, [r3, #2]!
   22a48:	mov	r4, r3
   22a4c:	b	22aa8 <main@@Base+0xcd74>
   22a50:	mov	r0, r8
   22a54:	mov	r1, r3
   22a58:	b	22a90 <main@@Base+0xcd5c>
   22a5c:	cmp	r0, #125	; 0x7d
   22a60:	bne	22a88 <main@@Base+0xcd54>
   22a64:	add	r1, r2, #1
   22a68:	sub	r0, sl, r1
   22a6c:	cmp	r0, #2
   22a70:	blt	22ab0 <main@@Base+0xcd7c>
   22a74:	ldrb	r0, [r1]
   22a78:	cmp	r0, #32
   22a7c:	bls	22a9c <main@@Base+0xcd68>
   22a80:	mov	r4, r1
   22a84:	b	21da4 <main@@Base+0xc070>
   22a88:	mov	r0, r8
   22a8c:	mov	r1, r2
   22a90:	mov	r2, sl
   22a94:	mov	r3, #10
   22a98:	b	21d9c <main@@Base+0xc068>
   22a9c:	bne	22ab0 <main@@Base+0xcd7c>
   22aa0:	ldrb	r0, [r2, #2]!
   22aa4:	mov	r4, r2
   22aa8:	cmp	r0, #32
   22aac:	bhi	21da4 <main@@Base+0xc070>
   22ab0:	mov	r0, r8
   22ab4:	mov	r2, sl
   22ab8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   22abc:	b	21da0 <main@@Base+0xc06c>
   22ac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ac4:	add	fp, sp, #28
   22ac8:	sub	sp, sp, #20
   22acc:	mov	sl, r1
   22ad0:	sub	r1, r2, r1
   22ad4:	cmp	r1, #8
   22ad8:	movcs	r1, #8
   22adc:	sub	r5, r1, #1
   22ae0:	cmp	r5, #7
   22ae4:	bhi	22ce8 <main@@Base+0xcfb4>
   22ae8:	str	r2, [sp, #16]
   22aec:	str	r0, [sp, #12]
   22af0:	add	r0, pc, #36	; 0x24
   22af4:	mov	lr, r3
   22af8:	mov	r8, #0
   22afc:	mov	ip, #0
   22b00:	mov	r2, #0
   22b04:	mov	r1, #0
   22b08:	mov	r3, #0
   22b0c:	mov	r7, #0
   22b10:	mov	r6, #0
   22b14:	mov	r4, #0
   22b18:	ldr	pc, [r0, r5, lsl #2]
   22b1c:	andeq	r2, r2, r0, lsl #23
   22b20:	andeq	r2, r2, r8, ror fp
   22b24:	andeq	r2, r2, r0, ror fp
   22b28:	andeq	r2, r2, r8, ror #22
   22b2c:	andeq	r2, r2, ip, asr fp
   22b30:	andeq	r2, r2, r0, asr fp
   22b34:	andeq	r2, r2, r0, asr #22
   22b38:	andeq	r2, r2, ip, lsr fp
   22b3c:	ldrb	ip, [sl, #7]
   22b40:	ldrb	r0, [sl, #6]
   22b44:	mov	r2, r8
   22b48:	orr	r0, ip, r0, lsl #8
   22b4c:	mov	r8, r0
   22b50:	ldrb	r0, [sl, #5]
   22b54:	mov	r1, r2
   22b58:	orr	r8, r8, r0, lsl #16
   22b5c:	ldrb	r0, [sl, #4]
   22b60:	mov	r3, r1
   22b64:	orr	r8, r8, r0, lsl #24
   22b68:	ldrb	r0, [sl, #3]
   22b6c:	orr	r7, r0, r3
   22b70:	ldrb	r0, [sl, #2]
   22b74:	orr	r6, r7, r0, lsl #8
   22b78:	ldrb	r0, [sl, #1]
   22b7c:	orr	r4, r6, r0, lsl #16
   22b80:	ldrb	r0, [sl]
   22b84:	movw	r1, #28275	; 0x6e73
   22b88:	ldr	r7, [fp, #12]
   22b8c:	ldr	r5, [fp, #8]
   22b90:	movt	r1, #19823	; 0x4d6f
   22b94:	orr	r9, r4, r0, lsl #24
   22b98:	movw	r0, #29184	; 0x7200
   22b9c:	movt	r0, #29797	; 0x7465
   22ba0:	subs	r2, r8, r0
   22ba4:	sbcs	r2, r9, r1
   22ba8:	bcs	22bf0 <main@@Base+0xcebc>
   22bac:	movw	r1, #29696	; 0x7400
   22bb0:	bic	r0, r9, #255	; 0xff
   22bb4:	movt	r1, #16748	; 0x416c
   22bb8:	teq	r0, r1
   22bbc:	bne	22ce8 <main@@Base+0xcfb4>
   22bc0:	ldr	r0, [sp, #12]
   22bc4:	ldr	r2, [sp, #16]
   22bc8:	mov	r1, sl
   22bcc:	mov	r3, #3
   22bd0:	mov	r4, lr
   22bd4:	str	r7, [sp]
   22bd8:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   22bdc:	cmp	r0, sl
   22be0:	beq	22ce8 <main@@Base+0xcfb4>
   22be4:	mov	r1, #0
   22be8:	mov	r2, #4
   22bec:	b	22c30 <main@@Base+0xcefc>
   22bf0:	add	r2, r0, #50	; 0x32
   22bf4:	eor	r1, r9, r1
   22bf8:	eor	r2, r8, r2
   22bfc:	orrs	r2, r2, r1
   22c00:	bne	22c40 <main@@Base+0xcf0c>
   22c04:	ldr	r0, [sp, #12]
   22c08:	ldr	r2, [sp, #16]
   22c0c:	mov	r1, sl
   22c10:	mov	r3, #8
   22c14:	mov	r4, lr
   22c18:	str	r7, [sp]
   22c1c:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   22c20:	cmp	r0, sl
   22c24:	beq	22ce8 <main@@Base+0xcfb4>
   22c28:	mov	r1, #0
   22c2c:	mov	r2, #3
   22c30:	str	r2, [r5]
   22c34:	str	r1, [r5, #4]
   22c38:	str	r1, [r4]
   22c3c:	b	22ce4 <main@@Base+0xcfb0>
   22c40:	ldr	r5, [sp, #16]
   22c44:	ldr	r6, [sp, #12]
   22c48:	bic	r2, r8, #255	; 0xff
   22c4c:	eor	r0, r2, r0
   22c50:	orrs	r0, r0, r1
   22c54:	bne	22c98 <main@@Base+0xcf64>
   22c58:	mov	r0, r6
   22c5c:	mov	r1, sl
   22c60:	mov	r2, r5
   22c64:	mov	r3, #7
   22c68:	str	r7, [sp]
   22c6c:	mov	r4, lr
   22c70:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   22c74:	mov	lr, r4
   22c78:	cmp	r0, sl
   22c7c:	beq	22c98 <main@@Base+0xcf64>
   22c80:	ldr	r3, [fp, #8]
   22c84:	mov	r1, #0
   22c88:	mov	r2, #1
   22c8c:	str	r2, [r3]
   22c90:	str	r1, [r3, #4]
   22c94:	b	22ce0 <main@@Base+0xcfac>
   22c98:	movw	r0, #20037	; 0x4e45
   22c9c:	movt	r0, #20047	; 0x4e4f
   22ca0:	teq	r9, r0
   22ca4:	bne	22cf4 <main@@Base+0xcfc0>
   22ca8:	mov	r0, r6
   22cac:	mov	r1, sl
   22cb0:	mov	r2, r5
   22cb4:	mov	r3, #4
   22cb8:	str	r7, [sp]
   22cbc:	mov	r4, lr
   22cc0:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   22cc4:	mov	lr, r4
   22cc8:	cmp	r0, sl
   22ccc:	beq	22cf4 <main@@Base+0xcfc0>
   22cd0:	ldr	r2, [fp, #8]
   22cd4:	mov	r1, #0
   22cd8:	str	r1, [r2]
   22cdc:	str	r1, [r2, #4]
   22ce0:	str	r1, [lr]
   22ce4:	mov	sl, r0
   22ce8:	mov	r0, sl
   22cec:	sub	sp, fp, #28
   22cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22cf4:	movw	r0, #28016	; 0x6d70
   22cf8:	movw	r1, #29556	; 0x7374
   22cfc:	movt	r0, #21353	; 0x5369
   22d00:	movt	r1, #21605	; 0x5465
   22d04:	eor	r0, r8, r0
   22d08:	eor	r1, r9, r1
   22d0c:	orrs	r0, r0, r1
   22d10:	bne	22ce8 <main@@Base+0xcfb4>
   22d14:	str	lr, [sp, #8]
   22d18:	add	lr, sl, #8
   22d1c:	sub	r0, r5, lr
   22d20:	cmp	r0, #8
   22d24:	movcs	r0, #8
   22d28:	sub	r5, r0, #1
   22d2c:	cmp	r5, #7
   22d30:	bhi	22ce8 <main@@Base+0xcfb4>
   22d34:	add	r1, pc, #32
   22d38:	mov	r9, #0
   22d3c:	mov	ip, #0
   22d40:	mov	r8, #0
   22d44:	mov	r2, #0
   22d48:	mov	r3, #0
   22d4c:	mov	r0, #0
   22d50:	mov	r4, #0
   22d54:	mov	r6, #0
   22d58:	ldr	pc, [r1, r5, lsl #2]
   22d5c:	andeq	r2, r2, r0, asr #27
   22d60:			; <UNDEFINED> instruction: 0x00022db8
   22d64:			; <UNDEFINED> instruction: 0x00022db0
   22d68:	andeq	r2, r2, r8, lsr #27
   22d6c:	muleq	r2, ip, sp
   22d70:	muleq	r2, r0, sp
   22d74:	andeq	r2, r2, r0, lsl #27
   22d78:	andeq	r2, r2, ip, ror sp
   22d7c:	ldrb	ip, [sl, #15]
   22d80:	ldrb	r0, [sl, #14]
   22d84:	mov	r8, r9
   22d88:	orr	r0, ip, r0, lsl #8
   22d8c:	mov	r9, r0
   22d90:	ldrb	r0, [sl, #13]
   22d94:	mov	r2, r8
   22d98:	orr	r9, r9, r0, lsl #16
   22d9c:	ldrb	r0, [sl, #12]
   22da0:	mov	r3, r2
   22da4:	orr	r9, r9, r0, lsl #24
   22da8:	ldrb	r0, [sl, #11]
   22dac:	orr	r0, r0, r3
   22db0:	ldrb	r1, [sl, #10]
   22db4:	orr	r4, r0, r1, lsl #8
   22db8:	ldrb	r0, [sl, #9]
   22dbc:	orr	r6, r4, r0, lsl #16
   22dc0:	ldrb	r1, [lr]
   22dc4:	movw	r0, #25943	; 0x6557
   22dc8:	movw	r2, #21601	; 0x5461
   22dcc:	movt	r0, #25196	; 0x626c
   22dd0:	movt	r2, #27749	; 0x6c65
   22dd4:	eor	r0, r9, r0
   22dd8:	orr	r1, r6, r1, lsl #24
   22ddc:	eor	r1, r1, r2
   22de0:	orrs	r0, r0, r1
   22de4:	bne	22ce8 <main@@Base+0xcfb4>
   22de8:	ldr	r0, [sp, #16]
   22dec:	add	r8, sl, #16
   22df0:	sub	r0, r0, r8
   22df4:	cmp	r0, #8
   22df8:	movcs	r0, #8
   22dfc:	sub	r3, r0, #1
   22e00:	cmp	r3, #7
   22e04:	bhi	22ce8 <main@@Base+0xcfb4>
   22e08:	add	r5, pc, #28
   22e0c:	mov	r0, #0
   22e10:	mov	ip, #0
   22e14:	mov	lr, #0
   22e18:	mov	r2, #0
   22e1c:	mov	r1, #0
   22e20:	mov	r6, #0
   22e24:	mov	r4, #0
   22e28:	ldr	pc, [r5, r3, lsl #2]
   22e2c:	andeq	r2, r2, r8, lsl #29
   22e30:	andeq	r2, r2, r0, lsl #29
   22e34:	andeq	r2, r2, r8, ror lr
   22e38:	andeq	r2, r2, r0, ror lr
   22e3c:	andeq	r2, r2, r4, ror #28
   22e40:	andeq	r2, r2, r4, asr lr
   22e44:	andeq	r2, r2, ip, asr #28
   22e48:	andeq	r2, r2, ip, asr #28
   22e4c:	ldrb	r1, [sl, #22]
   22e50:	lsl	ip, r1, #8
   22e54:	ldrb	r1, [sl, #21]
   22e58:	mov	lr, r0
   22e5c:	orr	r1, ip, r1, lsl #16
   22e60:	mov	r0, r1
   22e64:	ldrb	r1, [sl, #20]
   22e68:	mov	r2, lr
   22e6c:	orr	r0, r0, r1, lsl #24
   22e70:	ldrb	r1, [sl, #19]
   22e74:	orr	r1, r1, r2
   22e78:	ldrb	r2, [sl, #18]
   22e7c:	orr	r6, r1, r2, lsl #8
   22e80:	ldrb	r1, [sl, #17]
   22e84:	orr	r4, r6, r1, lsl #16
   22e88:	movw	r1, #27904	; 0x6d00
   22e8c:	movw	r2, #26693	; 0x6845
   22e90:	movt	r1, #28277	; 0x6e75
   22e94:	movt	r2, #26996	; 0x6974
   22e98:	eor	r0, r0, r1
   22e9c:	ldrb	r1, [r8]
   22ea0:	orr	r1, r4, r1, lsl #24
   22ea4:	eor	r1, r1, r2
   22ea8:	orrs	r0, r0, r1
   22eac:	bne	22ce8 <main@@Base+0xcfb4>
   22eb0:	ldr	r0, [sp, #12]
   22eb4:	ldr	r2, [sp, #16]
   22eb8:	mov	r1, r8
   22ebc:	mov	r3, #7
   22ec0:	str	r7, [sp]
   22ec4:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   22ec8:	ldr	r3, [fp, #8]
   22ecc:	cmp	r0, r8
   22ed0:	beq	22ce8 <main@@Base+0xcfb4>
   22ed4:	mov	r2, #2
   22ed8:	mov	r1, #0
   22edc:	str	r2, [r3]
   22ee0:	str	r1, [r3, #4]
   22ee4:	ldr	r2, [sp, #8]
   22ee8:	str	r1, [r2]
   22eec:	b	22ce4 <main@@Base+0xcfb0>
   22ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ef4:	add	fp, sp, #28
   22ef8:	sub	sp, sp, #44	; 0x2c
   22efc:	mov	r7, r2
   22f00:	ldr	r2, [fp, #8]
   22f04:	mov	r5, r0
   22f08:	mov	r0, #0
   22f0c:	mov	sl, r3
   22f10:	cmp	r1, r7
   22f14:	strb	r0, [r2]
   22f18:	beq	22f44 <main@@Base+0xd210>
   22f1c:	ldrb	r0, [r1]
   22f20:	cmp	r0, #34	; 0x22
   22f24:	bne	22f30 <main@@Base+0xd1fc>
   22f28:	add	r1, r1, #1
   22f2c:	b	22f44 <main@@Base+0xd210>
   22f30:	mov	r0, r5
   22f34:	mov	r2, r7
   22f38:	mov	r3, #5
   22f3c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   22f40:	mov	r1, r0
   22f44:	sub	r0, r7, r1
   22f48:	cmp	r0, #2
   22f4c:	blt	22f78 <main@@Base+0xd244>
   22f50:	ldrb	r0, [r1]
   22f54:	cmp	r0, #32
   22f58:	bls	22f64 <main@@Base+0xd230>
   22f5c:	mov	r6, r1
   22f60:	b	22f88 <main@@Base+0xd254>
   22f64:	bne	22f78 <main@@Base+0xd244>
   22f68:	mov	r6, r1
   22f6c:	ldrb	r0, [r6, #1]!
   22f70:	cmp	r0, #32
   22f74:	bhi	22f88 <main@@Base+0xd254>
   22f78:	mov	r0, r5
   22f7c:	mov	r2, r7
   22f80:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   22f84:	mov	r6, r0
   22f88:	cmp	r6, r7
   22f8c:	beq	23070 <main@@Base+0xd33c>
   22f90:	add	r0, sl, #4
   22f94:	mov	r1, #0
   22f98:	add	r8, sp, #32
   22f9c:	add	r9, sp, #28
   22fa0:	str	sl, [sp, #16]
   22fa4:	str	r1, [sp, #20]
   22fa8:	str	r0, [sp, #12]
   22fac:	ldr	r4, [sl]
   22fb0:	mov	sl, r0
   22fb4:	add	r0, sp, #24
   22fb8:	mov	r1, r6
   22fbc:	mov	r2, r7
   22fc0:	mov	r3, r9
   22fc4:	str	r8, [sp]
   22fc8:	str	r0, [sp, #4]
   22fcc:	mov	r0, r5
   22fd0:	blx	r4
   22fd4:	cmp	r0, r7
   22fd8:	beq	23070 <main@@Base+0xd33c>
   22fdc:	mov	r4, r0
   22fe0:	cmp	r0, r6
   22fe4:	bne	22ff8 <main@@Base+0xd2c4>
   22fe8:	ldr	r4, [sl], #4
   22fec:	cmp	r4, #0
   22ff0:	bne	22fb4 <main@@Base+0xd280>
   22ff4:	b	23078 <main@@Base+0xd344>
   22ff8:	ldr	r0, [sp, #28]
   22ffc:	cmp	r0, #0
   23000:	beq	2301c <main@@Base+0xd2e8>
   23004:	mov	r0, r5
   23008:	mov	r1, r4
   2300c:	mov	r2, r7
   23010:	mov	r3, #8
   23014:	bl	3133c <flatcc_json_parser_set_error@@Base>
   23018:	b	23034 <main@@Base+0xd300>
   2301c:	ldr	r0, [sp, #32]
   23020:	ldr	r1, [sp, #36]	; 0x24
   23024:	orrs	r0, r0, r1
   23028:	movwne	r0, #1
   2302c:	str	r0, [sp, #20]
   23030:	mov	r0, r4
   23034:	ldr	sl, [sp, #16]
   23038:	cmp	r0, r7
   2303c:	beq	23070 <main@@Base+0xd33c>
   23040:	ldr	r0, [fp, #8]
   23044:	ldr	r2, [sp, #20]
   23048:	mov	r6, r4
   2304c:	mov	r1, r0
   23050:	ldrb	r0, [r0]
   23054:	add	r0, r0, r2
   23058:	strb	r0, [r1]
   2305c:	ldr	r0, [sp, #24]
   23060:	cmp	r0, #0
   23064:	ldr	r0, [sp, #12]
   23068:	bne	22fac <main@@Base+0xd278>
   2306c:	b	23090 <main@@Base+0xd35c>
   23070:	mov	r4, r7
   23074:	b	23090 <main@@Base+0xd35c>
   23078:	mov	r0, r5
   2307c:	mov	r1, r6
   23080:	mov	r2, r7
   23084:	mov	r3, #23
   23088:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2308c:	mov	r4, r0
   23090:	mov	r0, r4
   23094:	sub	sp, fp, #28
   23098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2309c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   230a0:	add	fp, sp, #28
   230a4:	sub	sp, sp, #36	; 0x24
   230a8:	mov	r6, r2
   230ac:	ldr	r2, [fp, #8]
   230b0:	mov	r5, r0
   230b4:	mov	r0, #0
   230b8:	mov	r8, r3
   230bc:	cmp	r1, r6
   230c0:	str	r0, [r2]
   230c4:	beq	230f0 <main@@Base+0xd3bc>
   230c8:	ldrb	r0, [r1]
   230cc:	cmp	r0, #34	; 0x22
   230d0:	bne	230dc <main@@Base+0xd3a8>
   230d4:	add	r1, r1, #1
   230d8:	b	230f0 <main@@Base+0xd3bc>
   230dc:	mov	r0, r5
   230e0:	mov	r2, r6
   230e4:	mov	r3, #5
   230e8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   230ec:	mov	r1, r0
   230f0:	sub	r0, r6, r1
   230f4:	cmp	r0, #2
   230f8:	blt	23124 <main@@Base+0xd3f0>
   230fc:	ldrb	r0, [r1]
   23100:	cmp	r0, #32
   23104:	bls	23110 <main@@Base+0xd3dc>
   23108:	mov	r7, r1
   2310c:	b	23134 <main@@Base+0xd400>
   23110:	bne	23124 <main@@Base+0xd3f0>
   23114:	mov	r7, r1
   23118:	ldrb	r0, [r7, #1]!
   2311c:	cmp	r0, #32
   23120:	bhi	23134 <main@@Base+0xd400>
   23124:	mov	r0, r5
   23128:	mov	r2, r6
   2312c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   23130:	mov	r7, r0
   23134:	cmp	r7, r6
   23138:	beq	231e8 <main@@Base+0xd4b4>
   2313c:	add	r0, r8, #4
   23140:	add	sl, sp, #24
   23144:	add	r9, sp, #20
   23148:	str	r8, [sp, #12]
   2314c:	str	r0, [sp, #8]
   23150:	ldr	r4, [r8]
   23154:	mov	r8, r0
   23158:	add	r0, sp, #16
   2315c:	mov	r1, r7
   23160:	mov	r2, r6
   23164:	mov	r3, r9
   23168:	str	sl, [sp]
   2316c:	str	r0, [sp, #4]
   23170:	mov	r0, r5
   23174:	blx	r4
   23178:	cmp	r0, r6
   2317c:	beq	231e8 <main@@Base+0xd4b4>
   23180:	mov	r4, r0
   23184:	cmp	r0, r7
   23188:	bne	2319c <main@@Base+0xd468>
   2318c:	ldr	r4, [r8], #4
   23190:	cmp	r4, #0
   23194:	bne	23158 <main@@Base+0xd424>
   23198:	b	231f0 <main@@Base+0xd4bc>
   2319c:	ldr	r0, [sp, #24]
   231a0:	ldr	r1, [sp, #28]
   231a4:	bl	40d74 <flatcc_json_printer_clear@@Base+0xaf0>
   231a8:	vmov	s2, r0
   231ac:	ldr	r2, [fp, #8]
   231b0:	ldr	r1, [sp, #20]
   231b4:	ldr	r8, [sp, #12]
   231b8:	mov	r7, r4
   231bc:	vldr	s0, [r2]
   231c0:	cmp	r1, #0
   231c4:	vneg.f32	s4, s2
   231c8:	vseleq.f32	s2, s2, s4
   231cc:	vadd.f32	s0, s0, s2
   231d0:	vstr	s0, [r2]
   231d4:	ldr	r0, [sp, #16]
   231d8:	cmp	r0, #0
   231dc:	ldr	r0, [sp, #8]
   231e0:	bne	23150 <main@@Base+0xd41c>
   231e4:	b	23208 <main@@Base+0xd4d4>
   231e8:	mov	r4, r6
   231ec:	b	23208 <main@@Base+0xd4d4>
   231f0:	mov	r0, r5
   231f4:	mov	r1, r7
   231f8:	mov	r2, r6
   231fc:	mov	r3, #23
   23200:	bl	3133c <flatcc_json_parser_set_error@@Base>
   23204:	mov	r4, r0
   23208:	mov	r0, r4
   2320c:	sub	sp, fp, #28
   23210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23218:	add	fp, sp, #28
   2321c:	sub	sp, sp, #44	; 0x2c
   23220:	mov	r6, r2
   23224:	ldr	r2, [fp, #8]
   23228:	mov	r5, r0
   2322c:	mov	r0, #0
   23230:	mov	sl, r3
   23234:	cmp	r1, r6
   23238:	str	r0, [r2]
   2323c:	beq	23268 <main@@Base+0xd534>
   23240:	ldrb	r0, [r1]
   23244:	cmp	r0, #34	; 0x22
   23248:	bne	23254 <main@@Base+0xd520>
   2324c:	add	r1, r1, #1
   23250:	b	23268 <main@@Base+0xd534>
   23254:	mov	r0, r5
   23258:	mov	r2, r6
   2325c:	mov	r3, #5
   23260:	bl	3133c <flatcc_json_parser_set_error@@Base>
   23264:	mov	r1, r0
   23268:	sub	r0, r6, r1
   2326c:	cmp	r0, #2
   23270:	blt	2329c <main@@Base+0xd568>
   23274:	ldrb	r0, [r1]
   23278:	cmp	r0, #32
   2327c:	bls	23288 <main@@Base+0xd554>
   23280:	mov	r7, r1
   23284:	b	232ac <main@@Base+0xd578>
   23288:	bne	2329c <main@@Base+0xd568>
   2328c:	mov	r7, r1
   23290:	ldrb	r0, [r7, #1]!
   23294:	cmp	r0, #32
   23298:	bhi	232ac <main@@Base+0xd578>
   2329c:	mov	r0, r5
   232a0:	mov	r2, r6
   232a4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   232a8:	mov	r7, r0
   232ac:	cmp	r7, r6
   232b0:	beq	233c4 <main@@Base+0xd690>
   232b4:	add	r0, sl, #4
   232b8:	mov	r2, #0
   232bc:	add	r8, sp, #32
   232c0:	add	r9, sp, #28
   232c4:	str	sl, [sp, #16]
   232c8:	str	r0, [sp, #12]
   232cc:	ldr	r4, [sl]
   232d0:	mov	sl, r0
   232d4:	str	r2, [sp, #20]
   232d8:	add	r0, sp, #24
   232dc:	mov	r1, r7
   232e0:	mov	r2, r6
   232e4:	mov	r3, r9
   232e8:	str	r8, [sp]
   232ec:	str	r0, [sp, #4]
   232f0:	mov	r0, r5
   232f4:	blx	r4
   232f8:	cmp	r0, r6
   232fc:	beq	233c4 <main@@Base+0xd690>
   23300:	mov	r4, r0
   23304:	cmp	r0, r7
   23308:	bne	2331c <main@@Base+0xd5e8>
   2330c:	ldr	r4, [sl], #4
   23310:	cmp	r4, #0
   23314:	bne	232d8 <main@@Base+0xd5a4>
   23318:	b	233cc <main@@Base+0xd698>
   2331c:	ldr	r2, [sp, #28]
   23320:	ldr	r0, [sp, #32]
   23324:	ldr	r1, [sp, #36]	; 0x24
   23328:	cmp	r2, #0
   2332c:	beq	23354 <main@@Base+0xd620>
   23330:	ldr	sl, [sp, #16]
   23334:	subs	r2, r0, #-2147483647	; 0x80000001
   23338:	sbcs	r1, r1, #0
   2333c:	bcc	23380 <main@@Base+0xd64c>
   23340:	mov	r0, r5
   23344:	mov	r1, r4
   23348:	mov	r2, r6
   2334c:	mov	r3, #8
   23350:	b	23374 <main@@Base+0xd640>
   23354:	ldr	sl, [sp, #16]
   23358:	subs	r2, r0, #-2147483648	; 0x80000000
   2335c:	sbcs	r1, r1, #0
   23360:	bcc	23388 <main@@Base+0xd654>
   23364:	mov	r0, r5
   23368:	mov	r1, r4
   2336c:	mov	r2, r6
   23370:	mov	r3, #7
   23374:	bl	3133c <flatcc_json_parser_set_error@@Base>
   23378:	ldr	r2, [sp, #20]
   2337c:	b	23390 <main@@Base+0xd65c>
   23380:	rsb	r2, r0, #0
   23384:	b	2338c <main@@Base+0xd658>
   23388:	mov	r2, r0
   2338c:	mov	r0, r4
   23390:	cmp	r0, r6
   23394:	beq	233c4 <main@@Base+0xd690>
   23398:	ldr	r0, [fp, #8]
   2339c:	mov	r7, r4
   233a0:	mov	r1, r0
   233a4:	ldr	r0, [r0]
   233a8:	add	r0, r0, r2
   233ac:	str	r0, [r1]
   233b0:	ldr	r0, [sp, #24]
   233b4:	cmp	r0, #0
   233b8:	ldr	r0, [sp, #12]
   233bc:	bne	232cc <main@@Base+0xd598>
   233c0:	b	233e4 <main@@Base+0xd6b0>
   233c4:	mov	r4, r6
   233c8:	b	233e4 <main@@Base+0xd6b0>
   233cc:	mov	r0, r5
   233d0:	mov	r1, r7
   233d4:	mov	r2, r6
   233d8:	mov	r3, #23
   233dc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   233e0:	mov	r4, r0
   233e4:	mov	r0, r4
   233e8:	sub	sp, fp, #28
   233ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   233f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   233f4:	add	fp, sp, #28
   233f8:	sub	sp, sp, #44	; 0x2c
   233fc:	mov	r6, r2
   23400:	ldr	r2, [fp, #8]
   23404:	mov	r5, r0
   23408:	mov	r0, #0
   2340c:	mov	sl, r3
   23410:	cmp	r1, r6
   23414:	str	r0, [r2]
   23418:	str	r0, [r2, #4]
   2341c:	beq	23448 <main@@Base+0xd714>
   23420:	ldrb	r0, [r1]
   23424:	cmp	r0, #34	; 0x22
   23428:	bne	23434 <main@@Base+0xd700>
   2342c:	add	r1, r1, #1
   23430:	b	23448 <main@@Base+0xd714>
   23434:	mov	r0, r5
   23438:	mov	r2, r6
   2343c:	mov	r3, #5
   23440:	bl	3133c <flatcc_json_parser_set_error@@Base>
   23444:	mov	r1, r0
   23448:	sub	r0, r6, r1
   2344c:	cmp	r0, #2
   23450:	blt	2347c <main@@Base+0xd748>
   23454:	ldrb	r0, [r1]
   23458:	cmp	r0, #32
   2345c:	bls	23468 <main@@Base+0xd734>
   23460:	mov	r7, r1
   23464:	b	2348c <main@@Base+0xd758>
   23468:	bne	2347c <main@@Base+0xd748>
   2346c:	mov	r7, r1
   23470:	ldrb	r0, [r7, #1]!
   23474:	cmp	r0, #32
   23478:	bhi	2348c <main@@Base+0xd758>
   2347c:	mov	r0, r5
   23480:	mov	r2, r6
   23484:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   23488:	mov	r7, r0
   2348c:	cmp	r7, r6
   23490:	beq	235ac <main@@Base+0xd878>
   23494:	add	r0, sl, #4
   23498:	mov	r1, #0
   2349c:	add	r8, sp, #32
   234a0:	add	r9, sp, #28
   234a4:	mov	r2, #0
   234a8:	str	sl, [sp, #12]
   234ac:	str	r0, [sp, #8]
   234b0:	ldr	r4, [sl]
   234b4:	mov	sl, r0
   234b8:	str	r2, [sp, #16]
   234bc:	str	r1, [sp, #20]
   234c0:	add	r0, sp, #24
   234c4:	mov	r1, r7
   234c8:	mov	r2, r6
   234cc:	mov	r3, r9
   234d0:	str	r8, [sp]
   234d4:	str	r0, [sp, #4]
   234d8:	mov	r0, r5
   234dc:	blx	r4
   234e0:	cmp	r0, r6
   234e4:	beq	235ac <main@@Base+0xd878>
   234e8:	mov	r4, r0
   234ec:	cmp	r0, r7
   234f0:	bne	23504 <main@@Base+0xd7d0>
   234f4:	ldr	r4, [sl], #4
   234f8:	cmp	r4, #0
   234fc:	bne	234c0 <main@@Base+0xd78c>
   23500:	b	235b4 <main@@Base+0xd880>
   23504:	add	r2, sp, #28
   23508:	ldm	r2, {r0, r1, r2}
   2350c:	cmp	r0, #0
   23510:	beq	23538 <main@@Base+0xd804>
   23514:	ldr	sl, [sp, #12]
   23518:	subs	r0, r1, #1
   2351c:	sbcs	r0, r2, #-2147483648	; 0x80000000
   23520:	bcc	23568 <main@@Base+0xd834>
   23524:	mov	r0, r5
   23528:	mov	r1, r4
   2352c:	mov	r2, r6
   23530:	mov	r3, #8
   23534:	b	23558 <main@@Base+0xd824>
   23538:	ldr	sl, [sp, #12]
   2353c:	cmn	r2, #1
   23540:	mov	r0, r4
   23544:	bgt	23574 <main@@Base+0xd840>
   23548:	mov	r0, r5
   2354c:	mov	r1, r4
   23550:	mov	r2, r6
   23554:	mov	r3, #7
   23558:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2355c:	ldr	r1, [sp, #20]
   23560:	ldr	r2, [sp, #16]
   23564:	b	23574 <main@@Base+0xd840>
   23568:	rsbs	r1, r1, #0
   2356c:	mov	r0, r4
   23570:	rsc	r2, r2, #0
   23574:	cmp	r0, r6
   23578:	beq	235ac <main@@Base+0xd878>
   2357c:	ldr	r0, [fp, #8]
   23580:	mov	r7, r0
   23584:	ldm	r0, {r0, r3}
   23588:	adds	r0, r0, r1
   2358c:	adc	r3, r3, r2
   23590:	stm	r7, {r0, r3}
   23594:	mov	r7, r4
   23598:	ldr	r0, [sp, #24]
   2359c:	cmp	r0, #0
   235a0:	ldr	r0, [sp, #8]
   235a4:	bne	234b0 <main@@Base+0xd77c>
   235a8:	b	235cc <main@@Base+0xd898>
   235ac:	mov	r4, r6
   235b0:	b	235cc <main@@Base+0xd898>
   235b4:	mov	r0, r5
   235b8:	mov	r1, r7
   235bc:	mov	r2, r6
   235c0:	mov	r3, #23
   235c4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   235c8:	mov	r4, r0
   235cc:	mov	r0, r4
   235d0:	sub	sp, fp, #28
   235d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   235d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   235dc:	add	fp, sp, #28
   235e0:	sub	sp, sp, #44	; 0x2c
   235e4:	mov	r6, r2
   235e8:	ldr	r2, [fp, #8]
   235ec:	mov	r5, r0
   235f0:	mov	r0, #0
   235f4:	mov	sl, r3
   235f8:	cmp	r1, r6
   235fc:	str	r0, [r2]
   23600:	beq	2362c <main@@Base+0xd8f8>
   23604:	ldrb	r0, [r1]
   23608:	cmp	r0, #34	; 0x22
   2360c:	bne	23618 <main@@Base+0xd8e4>
   23610:	add	r1, r1, #1
   23614:	b	2362c <main@@Base+0xd8f8>
   23618:	mov	r0, r5
   2361c:	mov	r2, r6
   23620:	mov	r3, #5
   23624:	bl	3133c <flatcc_json_parser_set_error@@Base>
   23628:	mov	r1, r0
   2362c:	sub	r0, r6, r1
   23630:	cmp	r0, #2
   23634:	blt	23660 <main@@Base+0xd92c>
   23638:	ldrb	r0, [r1]
   2363c:	cmp	r0, #32
   23640:	bls	2364c <main@@Base+0xd918>
   23644:	mov	r7, r1
   23648:	b	23670 <main@@Base+0xd93c>
   2364c:	bne	23660 <main@@Base+0xd92c>
   23650:	mov	r7, r1
   23654:	ldrb	r0, [r7, #1]!
   23658:	cmp	r0, #32
   2365c:	bhi	23670 <main@@Base+0xd93c>
   23660:	mov	r0, r5
   23664:	mov	r2, r6
   23668:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2366c:	mov	r7, r0
   23670:	cmp	r7, r6
   23674:	beq	23774 <main@@Base+0xda40>
   23678:	add	r0, sl, #4
   2367c:	mov	r1, #0
   23680:	add	r8, sp, #32
   23684:	add	r9, sp, #28
   23688:	str	sl, [sp, #16]
   2368c:	str	r1, [sp, #20]
   23690:	str	r0, [sp, #12]
   23694:	ldr	r4, [sl]
   23698:	mov	sl, r0
   2369c:	add	r0, sp, #24
   236a0:	mov	r1, r7
   236a4:	mov	r2, r6
   236a8:	mov	r3, r9
   236ac:	str	r8, [sp]
   236b0:	str	r0, [sp, #4]
   236b4:	mov	r0, r5
   236b8:	blx	r4
   236bc:	cmp	r0, r6
   236c0:	beq	23774 <main@@Base+0xda40>
   236c4:	mov	r4, r0
   236c8:	cmp	r0, r7
   236cc:	bne	236e0 <main@@Base+0xd9ac>
   236d0:	ldr	r4, [sl], #4
   236d4:	cmp	r4, #0
   236d8:	bne	2369c <main@@Base+0xd968>
   236dc:	b	2377c <main@@Base+0xda48>
   236e0:	ldr	r0, [sp, #28]
   236e4:	cmp	r0, #0
   236e8:	beq	23708 <main@@Base+0xd9d4>
   236ec:	mov	r0, r5
   236f0:	mov	r1, r4
   236f4:	mov	r2, r6
   236f8:	mov	r3, #8
   236fc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   23700:	ldr	sl, [sp, #16]
   23704:	b	2373c <main@@Base+0xda08>
   23708:	ldr	r0, [sp, #36]	; 0x24
   2370c:	ldr	sl, [sp, #16]
   23710:	cmp	r0, #0
   23714:	beq	23730 <main@@Base+0xd9fc>
   23718:	mov	r0, r5
   2371c:	mov	r1, r4
   23720:	mov	r2, r6
   23724:	mov	r3, #7
   23728:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2372c:	b	2373c <main@@Base+0xda08>
   23730:	ldr	r0, [sp, #32]
   23734:	str	r0, [sp, #20]
   23738:	mov	r0, r4
   2373c:	cmp	r0, r6
   23740:	beq	23774 <main@@Base+0xda40>
   23744:	ldr	r0, [fp, #8]
   23748:	ldr	r2, [sp, #20]
   2374c:	mov	r7, r4
   23750:	mov	r1, r0
   23754:	ldr	r0, [r0]
   23758:	add	r0, r0, r2
   2375c:	str	r0, [r1]
   23760:	ldr	r0, [sp, #24]
   23764:	cmp	r0, #0
   23768:	ldr	r0, [sp, #12]
   2376c:	bne	23694 <main@@Base+0xd960>
   23770:	b	23794 <main@@Base+0xda60>
   23774:	mov	r4, r6
   23778:	b	23794 <main@@Base+0xda60>
   2377c:	mov	r0, r5
   23780:	mov	r1, r7
   23784:	mov	r2, r6
   23788:	mov	r3, #23
   2378c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   23790:	mov	r4, r0
   23794:	mov	r0, r4
   23798:	sub	sp, fp, #28
   2379c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   237a4:	add	fp, sp, #28
   237a8:	sub	sp, sp, #44	; 0x2c
   237ac:	mov	r7, r2
   237b0:	ldr	r2, [fp, #8]
   237b4:	mov	r5, r0
   237b8:	mov	r0, #0
   237bc:	mov	sl, r3
   237c0:	cmp	r1, r7
   237c4:	str	r0, [r2]
   237c8:	str	r0, [r2, #4]
   237cc:	beq	237f8 <main@@Base+0xdac4>
   237d0:	ldrb	r0, [r1]
   237d4:	cmp	r0, #34	; 0x22
   237d8:	bne	237e4 <main@@Base+0xdab0>
   237dc:	add	r1, r1, #1
   237e0:	b	237f8 <main@@Base+0xdac4>
   237e4:	mov	r0, r5
   237e8:	mov	r2, r7
   237ec:	mov	r3, #5
   237f0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   237f4:	mov	r1, r0
   237f8:	sub	r0, r7, r1
   237fc:	cmp	r0, #2
   23800:	blt	2382c <main@@Base+0xdaf8>
   23804:	ldrb	r0, [r1]
   23808:	cmp	r0, #32
   2380c:	bls	23818 <main@@Base+0xdae4>
   23810:	mov	r6, r1
   23814:	b	2383c <main@@Base+0xdb08>
   23818:	bne	2382c <main@@Base+0xdaf8>
   2381c:	mov	r6, r1
   23820:	ldrb	r0, [r6, #1]!
   23824:	cmp	r0, #32
   23828:	bhi	2383c <main@@Base+0xdb08>
   2382c:	mov	r0, r5
   23830:	mov	r2, r7
   23834:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   23838:	mov	r6, r0
   2383c:	cmp	r6, r7
   23840:	beq	23930 <main@@Base+0xdbfc>
   23844:	mov	r1, #0
   23848:	add	r0, sl, #4
   2384c:	add	r8, sp, #32
   23850:	add	r9, sp, #28
   23854:	str	sl, [sp, #12]
   23858:	str	r1, [sp, #20]
   2385c:	mov	r1, #0
   23860:	str	r0, [sp, #8]
   23864:	str	r1, [sp, #16]
   23868:	ldr	r4, [sl]
   2386c:	mov	sl, r0
   23870:	add	r0, sp, #24
   23874:	mov	r1, r6
   23878:	mov	r2, r7
   2387c:	mov	r3, r9
   23880:	str	r8, [sp]
   23884:	str	r0, [sp, #4]
   23888:	mov	r0, r5
   2388c:	blx	r4
   23890:	cmp	r0, r7
   23894:	beq	23930 <main@@Base+0xdbfc>
   23898:	mov	r4, r0
   2389c:	cmp	r0, r6
   238a0:	bne	238b4 <main@@Base+0xdb80>
   238a4:	ldr	r4, [sl], #4
   238a8:	cmp	r4, #0
   238ac:	bne	23870 <main@@Base+0xdb3c>
   238b0:	b	23938 <main@@Base+0xdc04>
   238b4:	ldr	r0, [sp, #28]
   238b8:	cmp	r0, #0
   238bc:	beq	238d8 <main@@Base+0xdba4>
   238c0:	mov	r0, r5
   238c4:	mov	r1, r4
   238c8:	mov	r2, r7
   238cc:	mov	r3, #8
   238d0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   238d4:	b	238ec <main@@Base+0xdbb8>
   238d8:	ldr	r0, [sp, #32]
   238dc:	str	r0, [sp, #20]
   238e0:	ldr	r0, [sp, #36]	; 0x24
   238e4:	str	r0, [sp, #16]
   238e8:	mov	r0, r4
   238ec:	ldr	sl, [sp, #12]
   238f0:	cmp	r0, r7
   238f4:	beq	23930 <main@@Base+0xdbfc>
   238f8:	ldr	r0, [fp, #8]
   238fc:	ldr	r3, [sp, #20]
   23900:	mov	r6, r4
   23904:	mov	r2, r0
   23908:	ldrd	r0, [r0]
   2390c:	adds	r0, r0, r3
   23910:	ldr	r3, [sp, #16]
   23914:	adc	r1, r1, r3
   23918:	strd	r0, [r2]
   2391c:	ldr	r0, [sp, #24]
   23920:	cmp	r0, #0
   23924:	ldr	r0, [sp, #8]
   23928:	bne	23868 <main@@Base+0xdb34>
   2392c:	b	23950 <main@@Base+0xdc1c>
   23930:	mov	r4, r7
   23934:	b	23950 <main@@Base+0xdc1c>
   23938:	mov	r0, r5
   2393c:	mov	r1, r6
   23940:	mov	r2, r7
   23944:	mov	r3, #23
   23948:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2394c:	mov	r4, r0
   23950:	mov	r0, r4
   23954:	sub	sp, fp, #28
   23958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2395c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23960:	add	fp, sp, #28
   23964:	sub	sp, sp, #36	; 0x24
   23968:	mov	r6, r2
   2396c:	ldr	r2, [fp, #8]
   23970:	mov	r5, r0
   23974:	mov	r0, #0
   23978:	mov	r8, r3
   2397c:	cmp	r1, r6
   23980:	str	r0, [r2]
   23984:	str	r0, [r2, #4]
   23988:	beq	239b4 <main@@Base+0xdc80>
   2398c:	ldrb	r0, [r1]
   23990:	cmp	r0, #34	; 0x22
   23994:	bne	239a0 <main@@Base+0xdc6c>
   23998:	add	r1, r1, #1
   2399c:	b	239b4 <main@@Base+0xdc80>
   239a0:	mov	r0, r5
   239a4:	mov	r2, r6
   239a8:	mov	r3, #5
   239ac:	bl	3133c <flatcc_json_parser_set_error@@Base>
   239b0:	mov	r1, r0
   239b4:	sub	r0, r6, r1
   239b8:	cmp	r0, #2
   239bc:	blt	239e8 <main@@Base+0xdcb4>
   239c0:	ldrb	r0, [r1]
   239c4:	cmp	r0, #32
   239c8:	bls	239d4 <main@@Base+0xdca0>
   239cc:	mov	r7, r1
   239d0:	b	239f8 <main@@Base+0xdcc4>
   239d4:	bne	239e8 <main@@Base+0xdcb4>
   239d8:	mov	r7, r1
   239dc:	ldrb	r0, [r7, #1]!
   239e0:	cmp	r0, #32
   239e4:	bhi	239f8 <main@@Base+0xdcc4>
   239e8:	mov	r0, r5
   239ec:	mov	r2, r6
   239f0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   239f4:	mov	r7, r0
   239f8:	cmp	r7, r6
   239fc:	beq	23ab4 <main@@Base+0xdd80>
   23a00:	add	r0, r8, #4
   23a04:	add	sl, sp, #24
   23a08:	add	r9, sp, #20
   23a0c:	str	r8, [sp, #12]
   23a10:	str	r0, [sp, #8]
   23a14:	ldr	r4, [r8]
   23a18:	mov	r8, r0
   23a1c:	add	r0, sp, #16
   23a20:	mov	r1, r7
   23a24:	mov	r2, r6
   23a28:	mov	r3, r9
   23a2c:	str	sl, [sp]
   23a30:	str	r0, [sp, #4]
   23a34:	mov	r0, r5
   23a38:	blx	r4
   23a3c:	cmp	r0, r6
   23a40:	beq	23ab4 <main@@Base+0xdd80>
   23a44:	mov	r4, r0
   23a48:	cmp	r0, r7
   23a4c:	bne	23a60 <main@@Base+0xdd2c>
   23a50:	ldr	r4, [r8], #4
   23a54:	cmp	r4, #0
   23a58:	bne	23a1c <main@@Base+0xdce8>
   23a5c:	b	23abc <main@@Base+0xdd88>
   23a60:	ldr	r0, [sp, #24]
   23a64:	ldr	r1, [sp, #28]
   23a68:	bl	40b3c <flatcc_json_printer_clear@@Base+0x8b8>
   23a6c:	ldr	r2, [fp, #8]
   23a70:	vmov	d17, r0, r1
   23a74:	ldr	r3, [sp, #20]
   23a78:	ldr	r8, [sp, #12]
   23a7c:	mov	r7, r2
   23a80:	vldr	d16, [r2]
   23a84:	eor	r2, r1, #-2147483648	; 0x80000000
   23a88:	cmp	r3, #0
   23a8c:	vmov	d18, r0, r2
   23a90:	vseleq.f64	d17, d17, d18
   23a94:	vadd.f64	d16, d16, d17
   23a98:	vstr	d16, [r7]
   23a9c:	mov	r7, r4
   23aa0:	ldr	r0, [sp, #16]
   23aa4:	cmp	r0, #0
   23aa8:	ldr	r0, [sp, #8]
   23aac:	bne	23a14 <main@@Base+0xdce0>
   23ab0:	b	23ad4 <main@@Base+0xdda0>
   23ab4:	mov	r4, r6
   23ab8:	b	23ad4 <main@@Base+0xdda0>
   23abc:	mov	r0, r5
   23ac0:	mov	r1, r7
   23ac4:	mov	r2, r6
   23ac8:	mov	r3, #23
   23acc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   23ad0:	mov	r4, r0
   23ad4:	mov	r0, r4
   23ad8:	sub	sp, fp, #28
   23adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23ae4:	add	fp, sp, #28
   23ae8:	sub	sp, sp, #12
   23aec:	mov	sl, r1
   23af0:	sub	r1, r2, r1
   23af4:	cmp	r1, #8
   23af8:	movcs	r1, #8
   23afc:	sub	r5, r1, #1
   23b00:	cmp	r5, #7
   23b04:	bhi	23d34 <main@@Base+0xe000>
   23b08:	str	r3, [sp, #8]
   23b0c:	add	r7, pc, #32
   23b10:	mov	r8, #0
   23b14:	mov	ip, #0
   23b18:	mov	lr, #0
   23b1c:	mov	r9, #0
   23b20:	mov	r6, #0
   23b24:	mov	r1, #0
   23b28:	mov	r3, #0
   23b2c:	mov	r4, #0
   23b30:	ldr	pc, [r7, r5, lsl #2]
   23b34:	muleq	r2, r8, fp
   23b38:	muleq	r2, r0, fp
   23b3c:	andeq	r3, r2, r8, lsl #23
   23b40:	andeq	r3, r2, r0, lsl #23
   23b44:	andeq	r3, r2, r4, ror fp
   23b48:	andeq	r3, r2, r8, ror #22
   23b4c:	andeq	r3, r2, r8, asr fp
   23b50:	andeq	r3, r2, r4, asr fp
   23b54:	ldrb	ip, [sl, #7]
   23b58:	ldrb	r1, [sl, #6]
   23b5c:	mov	lr, r8
   23b60:	orr	r1, ip, r1, lsl #8
   23b64:	mov	r8, r1
   23b68:	ldrb	r1, [sl, #5]
   23b6c:	mov	r9, lr
   23b70:	orr	r8, r8, r1, lsl #16
   23b74:	ldrb	r1, [sl, #4]
   23b78:	mov	r6, r9
   23b7c:	orr	r8, r8, r1, lsl #24
   23b80:	ldrb	r1, [sl, #3]
   23b84:	orr	r1, r1, r6
   23b88:	ldrb	r3, [sl, #2]
   23b8c:	orr	r3, r1, r3, lsl #8
   23b90:	ldrb	r1, [sl, #1]
   23b94:	orr	r4, r3, r1, lsl #16
   23b98:	movw	r1, #28276	; 0x6e74
   23b9c:	movw	r7, #20577	; 0x5061
   23ba0:	ldr	r6, [fp, #12]
   23ba4:	movt	r1, #29285	; 0x7265
   23ba8:	movt	r7, #18798	; 0x496e
   23bac:	eor	r3, r8, r1
   23bb0:	ldrb	r1, [sl]
   23bb4:	orr	r1, r4, r1, lsl #24
   23bb8:	eor	r7, r1, r7
   23bbc:	orrs	r3, r3, r7
   23bc0:	bne	23ce8 <main@@Base+0xdfb4>
   23bc4:	add	r8, sl, #8
   23bc8:	sub	r1, r2, r8
   23bcc:	cmp	r1, #8
   23bd0:	movcs	r1, #8
   23bd4:	sub	r7, r1, #1
   23bd8:	cmp	r7, #7
   23bdc:	bhi	23d34 <main@@Base+0xe000>
   23be0:	str	r0, [sp, #4]
   23be4:	add	lr, pc, #32
   23be8:	mov	r6, #0
   23bec:	mov	r0, #0
   23bf0:	mov	r1, #0
   23bf4:	mov	r5, #0
   23bf8:	mov	r4, #0
   23bfc:	mov	r3, #0
   23c00:	mov	ip, #0
   23c04:	mov	r9, #0
   23c08:	ldr	pc, [lr, r7, lsl #2]
   23c0c:	andeq	r3, r2, r0, ror ip
   23c10:	andeq	r3, r2, r8, ror #24
   23c14:	andeq	r3, r2, r0, ror #24
   23c18:	andeq	r3, r2, r8, asr ip
   23c1c:	andeq	r3, r2, ip, asr #24
   23c20:	andeq	r3, r2, r0, asr #24
   23c24:	andeq	r3, r2, r0, lsr ip
   23c28:	andeq	r3, r2, ip, lsr #24
   23c2c:	ldrb	r0, [sl, #15]
   23c30:	ldrb	r1, [sl, #14]
   23c34:	orr	r0, r0, r1, lsl #8
   23c38:	mov	r1, r6
   23c3c:	mov	r6, r0
   23c40:	ldrb	r0, [sl, #13]
   23c44:	mov	r5, r1
   23c48:	orr	r6, r6, r0, lsl #16
   23c4c:	ldrb	r0, [sl, #12]
   23c50:	mov	r4, r5
   23c54:	orr	r6, r6, r0, lsl #24
   23c58:	ldrb	r0, [sl, #11]
   23c5c:	orr	r3, r0, r4
   23c60:	ldrb	r0, [sl, #10]
   23c64:	orr	ip, r3, r0, lsl #8
   23c68:	ldrb	r0, [sl, #9]
   23c6c:	orr	r9, ip, r0, lsl #16
   23c70:	ldrb	r1, [r8]
   23c74:	movw	r0, #24931	; 0x6163
   23c78:	movw	r3, #28005	; 0x6d65
   23c7c:	movt	r0, #29552	; 0x7370
   23c80:	movt	r3, #20065	; 0x4e61
   23c84:	eor	r0, r6, r0
   23c88:	orr	r1, r9, r1, lsl #24
   23c8c:	eor	r1, r1, r3
   23c90:	orrs	r0, r0, r1
   23c94:	bne	23d34 <main@@Base+0xe000>
   23c98:	add	r6, sl, #16
   23c9c:	sub	r0, r2, r6
   23ca0:	cmp	r0, #8
   23ca4:	movcs	r0, #8
   23ca8:	sub	r0, r0, #1
   23cac:	cmp	r0, #7
   23cb0:	bhi	23d34 <main@@Base+0xe000>
   23cb4:	ldrb	r0, [r6]
   23cb8:	cmp	r0, #101	; 0x65
   23cbc:	bne	23d34 <main@@Base+0xe000>
   23cc0:	ldr	r0, [fp, #12]
   23cc4:	mov	r1, r6
   23cc8:	mov	r3, #1
   23ccc:	mov	r8, #1
   23cd0:	str	r0, [sp]
   23cd4:	ldr	r0, [sp, #4]
   23cd8:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   23cdc:	cmp	r0, r6
   23ce0:	bne	23d14 <main@@Base+0xdfe0>
   23ce4:	b	23d34 <main@@Base+0xe000>
   23ce8:	movw	r3, #20037	; 0x4e45
   23cec:	movt	r3, #20047	; 0x4e4f
   23cf0:	teq	r1, r3
   23cf4:	bne	23d34 <main@@Base+0xe000>
   23cf8:	mov	r1, sl
   23cfc:	mov	r3, #4
   23d00:	str	r6, [sp]
   23d04:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   23d08:	cmp	r0, sl
   23d0c:	beq	23d34 <main@@Base+0xe000>
   23d10:	mov	r8, #0
   23d14:	mov	sl, r0
   23d18:	ldr	r0, [fp, #8]
   23d1c:	mov	r1, #0
   23d20:	str	r8, [r0]
   23d24:	str	r1, [r0, #4]
   23d28:	mov	r0, #0
   23d2c:	ldr	r1, [sp, #8]
   23d30:	str	r0, [r1]
   23d34:	mov	r0, sl
   23d38:	sub	sp, fp, #28
   23d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23d44:	add	fp, sp, #28
   23d48:	sub	sp, sp, #12
   23d4c:	mov	r5, r1
   23d50:	sub	r1, r2, r1
   23d54:	cmp	r1, #8
   23d58:	movcs	r1, #8
   23d5c:	sub	r7, r1, #1
   23d60:	cmp	r7, #7
   23d64:	bhi	23ee0 <main@@Base+0xe1ac>
   23d68:	str	r3, [sp, #8]
   23d6c:	add	r8, pc, #32
   23d70:	mov	lr, #0
   23d74:	mov	ip, #0
   23d78:	mov	r9, #0
   23d7c:	mov	sl, #0
   23d80:	mov	r1, #0
   23d84:	mov	r3, #0
   23d88:	mov	r4, #0
   23d8c:	mov	r6, #0
   23d90:	ldr	pc, [r8, r7, lsl #2]
   23d94:	strdeq	r3, [r2], -r8
   23d98:	strdeq	r3, [r2], -r0
   23d9c:	andeq	r3, r2, r8, ror #27
   23da0:	andeq	r3, r2, r0, ror #27
   23da4:	ldrdeq	r3, [r2], -r4
   23da8:	andeq	r3, r2, r8, asr #27
   23dac:			; <UNDEFINED> instruction: 0x00023db8
   23db0:			; <UNDEFINED> instruction: 0x00023db4
   23db4:	ldrb	ip, [r5, #7]
   23db8:	ldrb	r1, [r5, #6]
   23dbc:	mov	r9, lr
   23dc0:	orr	r1, ip, r1, lsl #8
   23dc4:	mov	lr, r1
   23dc8:	ldrb	r1, [r5, #5]
   23dcc:	mov	sl, r9
   23dd0:	orr	lr, lr, r1, lsl #16
   23dd4:	ldrb	r1, [r5, #4]
   23dd8:	orr	lr, lr, r1, lsl #24
   23ddc:	mov	r1, sl
   23de0:	ldrb	r3, [r5, #3]
   23de4:	orr	r3, r3, r1
   23de8:	ldrb	r1, [r5, #2]
   23dec:	orr	r4, r3, r1, lsl #8
   23df0:	ldrb	r1, [r5, #1]
   23df4:	orr	r6, r4, r1, lsl #16
   23df8:	ldrb	r1, [r5]
   23dfc:	ldr	r3, [fp, #12]
   23e00:	ldr	r8, [fp, #8]
   23e04:	orr	r1, r6, r1, lsl #24
   23e08:	movw	r6, #30769	; 0x7831
   23e0c:	movt	r6, #26725	; 0x6865
   23e10:	cmp	r1, r6
   23e14:	bhi	23e44 <main@@Base+0xe110>
   23e18:	teq	r1, r6
   23e1c:	bne	23ee0 <main@@Base+0xe1ac>
   23e20:	str	r3, [sp]
   23e24:	mov	r1, r5
   23e28:	mov	r3, #4
   23e2c:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   23e30:	cmp	r0, r5
   23e34:	beq	23ee0 <main@@Base+0xe1ac>
   23e38:	mov	r1, #0
   23e3c:	mov	r2, #3
   23e40:	b	23ecc <main@@Base+0xe198>
   23e44:	lsr	r4, lr, #16
   23e48:	movw	r7, #25959	; 0x6567
   23e4c:	movw	r6, #26725	; 0x6865
   23e50:	orr	r4, r4, r1, lsl #16
   23e54:	movt	r7, #30830	; 0x786e
   23e58:	eor	r6, r6, r1, lsr #16
   23e5c:	eor	r7, r4, r7
   23e60:	orrs	r7, r7, r6
   23e64:	bne	23e98 <main@@Base+0xe164>
   23e68:	str	r3, [sp]
   23e6c:	mov	r1, r5
   23e70:	mov	r3, #6
   23e74:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   23e78:	cmp	r0, r5
   23e7c:	beq	23ee0 <main@@Base+0xe1ac>
   23e80:	mvn	r2, #1
   23e84:	mvn	r1, #0
   23e88:	str	r2, [r8]
   23e8c:	str	r1, [r8, #4]
   23e90:	mov	r1, #1
   23e94:	b	23ed4 <main@@Base+0xe1a0>
   23e98:	movw	r7, #30770	; 0x7832
   23e9c:	movt	r7, #26725	; 0x6865
   23ea0:	teq	r1, r7
   23ea4:	bne	23ee0 <main@@Base+0xe1ac>
   23ea8:	str	r3, [sp]
   23eac:	mov	r1, r5
   23eb0:	mov	r3, #4
   23eb4:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   23eb8:	cmp	r0, r5
   23ebc:	beq	23ee0 <main@@Base+0xe1ac>
   23ec0:	movw	r2, #48815	; 0xbeaf
   23ec4:	mov	r1, #0
   23ec8:	movt	r2, #32431	; 0x7eaf
   23ecc:	str	r2, [r8]
   23ed0:	str	r1, [r8, #4]
   23ed4:	ldr	r2, [sp, #8]
   23ed8:	mov	r5, r0
   23edc:	str	r1, [r2]
   23ee0:	mov	r0, r5
   23ee4:	sub	sp, fp, #28
   23ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23eec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23ef0:	add	fp, sp, #28
   23ef4:	sub	sp, sp, #12
   23ef8:	mov	sl, r1
   23efc:	sub	r1, r2, r1
   23f00:	cmp	r1, #8
   23f04:	movcs	r1, #8
   23f08:	sub	r4, r1, #1
   23f0c:	cmp	r4, #7
   23f10:	bhi	240d0 <main@@Base+0xe39c>
   23f14:	str	r3, [sp, #8]
   23f18:	add	r8, pc, #32
   23f1c:	mov	r9, #0
   23f20:	mov	ip, #0
   23f24:	mov	lr, #0
   23f28:	mov	r7, #0
   23f2c:	mov	r6, #0
   23f30:	mov	r3, #0
   23f34:	mov	r1, #0
   23f38:	mov	r5, #0
   23f3c:	ldr	pc, [r8, r4, lsl #2]
   23f40:	andeq	r3, r2, r4, lsr #31
   23f44:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   23f48:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   23f4c:	andeq	r3, r2, ip, lsl #31
   23f50:	andeq	r3, r2, r0, lsl #31
   23f54:	andeq	r3, r2, r4, ror pc
   23f58:	andeq	r3, r2, r4, ror #30
   23f5c:	andeq	r3, r2, r0, ror #30
   23f60:	ldrb	ip, [sl, #7]
   23f64:	ldrb	r1, [sl, #6]
   23f68:	mov	lr, r9
   23f6c:	orr	r1, ip, r1, lsl #8
   23f70:	mov	r9, r1
   23f74:	ldrb	r1, [sl, #5]
   23f78:	mov	r7, lr
   23f7c:	orr	r9, r9, r1, lsl #16
   23f80:	ldrb	r1, [sl, #4]
   23f84:	mov	r6, r7
   23f88:	orr	r9, r9, r1, lsl #24
   23f8c:	ldrb	r1, [sl, #3]
   23f90:	orr	r3, r1, r6
   23f94:	ldrb	r1, [sl, #2]
   23f98:	orr	r1, r3, r1, lsl #8
   23f9c:	ldrb	r3, [sl, #1]
   23fa0:	orr	r5, r1, r3, lsl #16
   23fa4:	ldrb	r1, [sl]
   23fa8:	ldr	r3, [fp, #12]
   23fac:	ldr	r6, [fp, #8]
   23fb0:	orr	r7, r5, r1, lsl #24
   23fb4:	movw	r1, #29745	; 0x7431
   23fb8:	movt	r1, #26990	; 0x696e
   23fbc:	cmp	r7, r1
   23fc0:	bhi	23ff0 <main@@Base+0xe2bc>
   23fc4:	teq	r7, r1
   23fc8:	bne	240d0 <main@@Base+0xe39c>
   23fcc:	str	r3, [sp]
   23fd0:	mov	r1, sl
   23fd4:	mov	r3, #4
   23fd8:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   23fdc:	cmp	r0, sl
   23fe0:	beq	240d0 <main@@Base+0xe39c>
   23fe4:	mov	r1, #0
   23fe8:	mov	r2, #2
   23fec:	b	2403c <main@@Base+0xe308>
   23ff0:	movw	r4, #0
   23ff4:	movw	r1, #29806	; 0x746e
   23ff8:	movt	r4, #25959	; 0x6567
   23ffc:	movt	r1, #26990	; 0x696e
   24000:	subs	r5, r9, r4
   24004:	sbcs	r5, r7, r1
   24008:	bcs	24048 <main@@Base+0xe314>
   2400c:	movw	r1, #29746	; 0x7432
   24010:	movt	r1, #26990	; 0x696e
   24014:	teq	r7, r1
   24018:	bne	240d0 <main@@Base+0xe39c>
   2401c:	str	r3, [sp]
   24020:	mov	r1, sl
   24024:	mov	r3, #4
   24028:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   2402c:	cmp	r0, sl
   24030:	beq	240d0 <main@@Base+0xe39c>
   24034:	mov	r1, #0
   24038:	mov	r2, #42	; 0x2a
   2403c:	str	r2, [r6]
   24040:	str	r1, [r6, #4]
   24044:	b	240c4 <main@@Base+0xe390>
   24048:	eor	r1, r7, r1
   2404c:	add	r7, r4, #12800	; 0x3200
   24050:	bic	r5, r9, #255	; 0xff
   24054:	eor	r7, r5, r7
   24058:	orrs	r7, r7, r1
   2405c:	bne	24088 <main@@Base+0xe354>
   24060:	str	r3, [sp]
   24064:	mov	r1, sl
   24068:	mov	r3, #7
   2406c:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   24070:	cmp	r0, sl
   24074:	beq	240d0 <main@@Base+0xe39c>
   24078:	mvn	r2, #1
   2407c:	mvn	r1, #0
   24080:	orr	r2, r2, #1
   24084:	b	240b8 <main@@Base+0xe384>
   24088:	bfc	r9, #0, #16
   2408c:	eor	r7, r9, r4
   24090:	orrs	r1, r7, r1
   24094:	bne	240d0 <main@@Base+0xe39c>
   24098:	str	r3, [sp]
   2409c:	mov	r1, sl
   240a0:	mov	r3, #6
   240a4:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   240a8:	cmp	r0, sl
   240ac:	beq	240d0 <main@@Base+0xe39c>
   240b0:	mvn	r1, #0
   240b4:	mvn	r2, #1
   240b8:	str	r2, [r6]
   240bc:	str	r1, [r6, #4]
   240c0:	mov	r1, #1
   240c4:	ldr	r2, [sp, #8]
   240c8:	mov	sl, r0
   240cc:	str	r1, [r2]
   240d0:	mov	r0, sl
   240d4:	sub	sp, fp, #28
   240d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   240dc:	push	{r4, r5, r6, r7, fp, lr}
   240e0:	add	fp, sp, #16
   240e4:	sub	sp, sp, #8
   240e8:	mov	r5, r1
   240ec:	sub	r1, r2, r1
   240f0:	mov	r4, r3
   240f4:	cmp	r1, #8
   240f8:	movcs	r1, #8
   240fc:	sub	r3, r1, #1
   24100:	cmp	r3, #7
   24104:	bhi	24218 <main@@Base+0xe4e4>
   24108:	add	r7, pc, #4
   2410c:	mov	r1, #0
   24110:	ldr	pc, [r7, r3, lsl #2]
   24114:	andeq	r4, r2, ip, asr #2
   24118:	andeq	r4, r2, r4, asr #2
   2411c:	andeq	r4, r2, ip, lsr r1
   24120:	andeq	r4, r2, r4, lsr r1
   24124:	andeq	r4, r2, r4, lsr r1
   24128:	andeq	r4, r2, r4, lsr r1
   2412c:	andeq	r4, r2, r4, lsr r1
   24130:	andeq	r4, r2, r4, lsr r1
   24134:	ldrb	r3, [r5, #3]
   24138:	orr	r1, r3, r1
   2413c:	ldrb	r3, [r5, #2]
   24140:	orr	r1, r1, r3, lsl #8
   24144:	ldrb	r3, [r5, #1]
   24148:	orr	r1, r1, r3, lsl #16
   2414c:	ldrb	r6, [r5]
   24150:	ldr	r3, [fp, #12]
   24154:	ldr	r7, [fp, #8]
   24158:	orr	r1, r1, r6, lsl #24
   2415c:	movw	r6, #26417	; 0x6731
   24160:	movt	r6, #28261	; 0x6e65
   24164:	cmp	r1, r6
   24168:	bhi	24198 <main@@Base+0xe464>
   2416c:	teq	r1, r6
   24170:	bne	24218 <main@@Base+0xe4e4>
   24174:	str	r3, [sp]
   24178:	mov	r1, r5
   2417c:	mov	r3, #4
   24180:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   24184:	cmp	r0, r5
   24188:	beq	24218 <main@@Base+0xe4e4>
   2418c:	mvn	r1, #0
   24190:	mvn	r2, #11
   24194:	b	24204 <main@@Base+0xe4d0>
   24198:	movw	r6, #26418	; 0x6732
   2419c:	movt	r6, #28261	; 0x6e65
   241a0:	teq	r1, r6
   241a4:	beq	241e0 <main@@Base+0xe4ac>
   241a8:	movw	r6, #26419	; 0x6733
   241ac:	movt	r6, #28261	; 0x6e65
   241b0:	teq	r1, r6
   241b4:	bne	24218 <main@@Base+0xe4e4>
   241b8:	str	r3, [sp]
   241bc:	mov	r1, r5
   241c0:	mov	r3, #4
   241c4:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   241c8:	cmp	r0, r5
   241cc:	beq	24218 <main@@Base+0xe4e4>
   241d0:	mvn	r2, #11
   241d4:	mvn	r1, #0
   241d8:	orr	r2, r2, #2
   241dc:	b	24204 <main@@Base+0xe4d0>
   241e0:	str	r3, [sp]
   241e4:	mov	r1, r5
   241e8:	mov	r3, #4
   241ec:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   241f0:	cmp	r0, r5
   241f4:	beq	24218 <main@@Base+0xe4e4>
   241f8:	mvn	r2, #11
   241fc:	mvn	r1, #0
   24200:	orr	r2, r2, #1
   24204:	str	r2, [r7]
   24208:	str	r1, [r7, #4]
   2420c:	mov	r1, #1
   24210:	mov	r5, r0
   24214:	str	r1, [r4]
   24218:	mov	r0, r5
   2421c:	sub	sp, fp, #16
   24220:	pop	{r4, r5, r6, r7, fp, pc}
   24224:	push	{r4, r5, fp, lr}
   24228:	add	fp, sp, #8
   2422c:	sub	sp, sp, #8
   24230:	mov	r4, r1
   24234:	sub	r1, r2, r1
   24238:	cmp	r1, #8
   2423c:	movcs	r1, #8
   24240:	sub	r1, r1, #1
   24244:	cmp	r1, #7
   24248:	bhi	24290 <main@@Base+0xe55c>
   2424c:	ldrb	r1, [r4]
   24250:	cmp	r1, #120	; 0x78
   24254:	bne	24290 <main@@Base+0xe55c>
   24258:	ldr	r1, [fp, #12]
   2425c:	mov	r5, r3
   24260:	mov	r3, #1
   24264:	str	r1, [sp]
   24268:	mov	r1, r4
   2426c:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   24270:	cmp	r0, r4
   24274:	beq	24290 <main@@Base+0xe55c>
   24278:	ldr	r1, [fp, #8]
   2427c:	mov	r2, #0
   24280:	mov	r4, r0
   24284:	str	r2, [r1]
   24288:	str	r2, [r1, #4]
   2428c:	str	r2, [r5]
   24290:	mov	r0, r4
   24294:	sub	sp, fp, #8
   24298:	pop	{r4, r5, fp, pc}
   2429c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   242a0:	add	fp, sp, #28
   242a4:	sub	sp, sp, #12
   242a8:	mov	sl, r1
   242ac:	sub	r1, r2, r1
   242b0:	cmp	r1, #8
   242b4:	movcs	r1, #8
   242b8:	sub	r6, r1, #1
   242bc:	cmp	r6, #7
   242c0:	bhi	2453c <main@@Base+0xe808>
   242c4:	str	r3, [sp, #8]
   242c8:	add	r9, pc, #32
   242cc:	mov	r1, #0
   242d0:	mov	ip, #0
   242d4:	mov	lr, #0
   242d8:	mov	r4, #0
   242dc:	mov	r7, #0
   242e0:	mov	r3, #0
   242e4:	mov	r5, #0
   242e8:	mov	r8, #0
   242ec:	ldr	pc, [r9, r6, lsl #2]
   242f0:	andeq	r4, r2, r4, asr r3
   242f4:	andeq	r4, r2, ip, asr #6
   242f8:	andeq	r4, r2, r4, asr #6
   242fc:	andeq	r4, r2, ip, lsr r3
   24300:	andeq	r4, r2, r0, lsr r3
   24304:	andeq	r4, r2, r4, lsr #6
   24308:	andeq	r4, r2, r4, lsl r3
   2430c:	andeq	r4, r2, r0, lsl r3
   24310:	ldrb	ip, [sl, #7]
   24314:	ldrb	r3, [sl, #6]
   24318:	mov	lr, r1
   2431c:	orr	r3, ip, r3, lsl #8
   24320:	mov	r1, r3
   24324:	ldrb	r3, [sl, #5]
   24328:	mov	r4, lr
   2432c:	orr	r1, r1, r3, lsl #16
   24330:	ldrb	r3, [sl, #4]
   24334:	mov	r7, r4
   24338:	orr	r1, r1, r3, lsl #24
   2433c:	ldrb	r3, [sl, #3]
   24340:	orr	r3, r3, r7
   24344:	ldrb	r7, [sl, #2]
   24348:	orr	r5, r3, r7, lsl #8
   2434c:	ldrb	r3, [sl, #1]
   24350:	orr	r8, r5, r3, lsl #16
   24354:	ldrb	r3, [sl]
   24358:	ldr	lr, [fp, #12]
   2435c:	ldr	r9, [fp, #8]
   24360:	orr	r6, r8, r3, lsl #24
   24364:	movw	r3, #20036	; 0x4e44
   24368:	movt	r3, #20047	; 0x4e4f
   2436c:	cmp	r6, r3
   24370:	bhi	243d0 <main@@Base+0xe69c>
   24374:	movw	r7, #28160	; 0x6e00
   24378:	movw	r4, #28523	; 0x6f6b
   2437c:	and	r3, r1, #-16777216	; 0xff000000
   24380:	movt	r7, #18017	; 0x4661
   24384:	movt	r4, #17007	; 0x426f
   24388:	subs	r5, r1, r7
   2438c:	sbcs	r5, r6, r4
   24390:	bcs	2441c <main@@Base+0xe6e8>
   24394:	movw	r1, #27756	; 0x6c6c
   24398:	eor	r3, r3, #1694498816	; 0x65000000
   2439c:	movt	r1, #16997	; 0x4265
   243a0:	eor	r1, r6, r1
   243a4:	orrs	r1, r3, r1
   243a8:	bne	2453c <main@@Base+0xe808>
   243ac:	mov	r1, sl
   243b0:	mov	r3, #5
   243b4:	str	lr, [sp]
   243b8:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   243bc:	cmp	r0, sl
   243c0:	beq	2453c <main@@Base+0xe808>
   243c4:	mov	r1, #0
   243c8:	mov	r2, #9
   243cc:	b	24528 <main@@Base+0xe7f4>
   243d0:	movw	r7, #26725	; 0x6865
   243d4:	mvn	r3, #-1912602624	; 0x8e000000
   243d8:	movt	r7, #20340	; 0x4f74
   243dc:	subs	r3, r3, r1
   243e0:	sbcs	r3, r7, r6
   243e4:	bcc	24458 <main@@Base+0xe724>
   243e8:	movw	r1, #20037	; 0x4e45
   243ec:	movt	r1, #20047	; 0x4e4f
   243f0:	teq	r6, r1
   243f4:	bne	2453c <main@@Base+0xe808>
   243f8:	mov	r1, sl
   243fc:	mov	r3, #4
   24400:	str	lr, [sp]
   24404:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   24408:	cmp	r0, sl
   2440c:	beq	2453c <main@@Base+0xe808>
   24410:	mov	r1, #0
   24414:	str	r1, [r9]
   24418:	b	2452c <main@@Base+0xe7f8>
   2441c:	movw	r5, #19553	; 0x4c61
   24420:	eor	r3, r3, #1845493760	; 0x6e000000
   24424:	movt	r5, #19829	; 0x4d75
   24428:	eor	r5, r6, r5
   2442c:	orrs	r3, r3, r5
   24430:	bne	244ac <main@@Base+0xe778>
   24434:	mov	r1, sl
   24438:	mov	r3, #5
   2443c:	str	lr, [sp]
   24440:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   24444:	cmp	r0, sl
   24448:	beq	2453c <main@@Base+0xe808>
   2444c:	mov	r1, #0
   24450:	mov	r2, #2
   24454:	b	24528 <main@@Base+0xe7f4>
   24458:	movw	r4, #25964	; 0x656c
   2445c:	movw	ip, #28789	; 0x7075
   24460:	movt	r4, #28282	; 0x6e7a
   24464:	movt	ip, #21089	; 0x5261
   24468:	subs	r3, r1, r4
   2446c:	sbcs	r3, r6, ip
   24470:	bcs	244e4 <main@@Base+0xe7b0>
   24474:	and	r1, r1, #-16777216	; 0xff000000
   24478:	eor	r3, r6, r7
   2447c:	eor	r1, r1, #1912602624	; 0x72000000
   24480:	orrs	r1, r1, r3
   24484:	bne	2453c <main@@Base+0xe808>
   24488:	mov	r1, sl
   2448c:	mov	r3, #5
   24490:	str	lr, [sp]
   24494:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   24498:	cmp	r0, sl
   2449c:	beq	2453c <main@@Base+0xe808>
   244a0:	mov	r1, #0
   244a4:	mov	r2, #11
   244a8:	b	24528 <main@@Base+0xe7f4>
   244ac:	bic	r1, r1, #255	; 0xff
   244b0:	eor	r3, r6, r4
   244b4:	eor	r1, r1, r7
   244b8:	orrs	r1, r1, r3
   244bc:	bne	2453c <main@@Base+0xe808>
   244c0:	mov	r1, sl
   244c4:	mov	r3, #7
   244c8:	str	lr, [sp]
   244cc:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   244d0:	cmp	r0, sl
   244d4:	beq	2453c <main@@Base+0xe808>
   244d8:	mov	r1, #0
   244dc:	mov	r2, #10
   244e0:	b	24528 <main@@Base+0xe7f4>
   244e4:	lsr	r5, r1, #16
   244e8:	movw	r7, #25956	; 0x6564
   244ec:	movw	r3, #21870	; 0x556e
   244f0:	orr	r5, r5, r6, lsl #16
   244f4:	movt	r7, #30067	; 0x7573
   244f8:	eor	r3, r3, r6, lsr #16
   244fc:	eor	r5, r5, r7
   24500:	orrs	r3, r5, r3
   24504:	bne	24548 <main@@Base+0xe814>
   24508:	mov	r1, sl
   2450c:	mov	r3, #6
   24510:	str	lr, [sp]
   24514:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   24518:	cmp	r0, sl
   2451c:	beq	2453c <main@@Base+0xe808>
   24520:	mov	r1, #0
   24524:	mov	r2, #255	; 0xff
   24528:	str	r2, [r9]
   2452c:	str	r1, [r9, #4]
   24530:	ldr	r2, [sp, #8]
   24534:	str	r1, [r2]
   24538:	mov	sl, r0
   2453c:	mov	r0, sl
   24540:	sub	sp, fp, #28
   24544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24548:	eor	r1, r1, r4
   2454c:	eor	r3, r6, ip
   24550:	orrs	r1, r1, r3
   24554:	bne	2453c <main@@Base+0xe808>
   24558:	mov	r1, sl
   2455c:	mov	r3, #8
   24560:	str	lr, [sp]
   24564:	mov	r4, #8
   24568:	bl	31898 <flatcc_json_parser_match_constant@@Base>
   2456c:	cmp	r0, sl
   24570:	beq	2453c <main@@Base+0xe808>
   24574:	mov	r5, #0
   24578:	strd	r4, [r9]
   2457c:	ldr	r1, [sp, #8]
   24580:	str	r5, [r1]
   24584:	b	24538 <main@@Base+0xe804>
   24588:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2458c:	add	fp, sp, #28
   24590:	sub	sp, sp, #36	; 0x24
   24594:	mov	r5, r0
   24598:	mov	r0, #0
   2459c:	mov	r4, r1
   245a0:	mov	r1, #4
   245a4:	mov	r7, r3
   245a8:	mov	r8, r2
   245ac:	str	r0, [r3]
   245b0:	ldr	r0, [r5]
   245b4:	bl	2d514 <flatcc_builder_start_table@@Base>
   245b8:	cmp	r0, #0
   245bc:	beq	245e4 <main@@Base+0xe8b0>
   245c0:	mov	r0, r5
   245c4:	mov	r1, r4
   245c8:	mov	r2, r8
   245cc:	mov	r3, #33	; 0x21
   245d0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   245d4:	mov	r4, r0
   245d8:	mov	r0, r4
   245dc:	sub	sp, fp, #28
   245e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   245e4:	add	r0, sp, #28
   245e8:	mov	r1, r4
   245ec:	mov	r2, r8
   245f0:	mov	r3, #1
   245f4:	str	r0, [sp]
   245f8:	mov	r0, r5
   245fc:	bl	3384c <flatcc_json_parser_prepare_unions@@Base>
   24600:	cmp	r0, r8
   24604:	beq	245c0 <main@@Base+0xe88c>
   24608:	cmp	r4, r8
   2460c:	beq	24640 <main@@Base+0xe90c>
   24610:	ldrb	r0, [r4]
   24614:	cmp	r0, #123	; 0x7b
   24618:	bne	24640 <main@@Base+0xe90c>
   2461c:	add	r1, r4, #1
   24620:	sub	r0, r8, r1
   24624:	cmp	r0, #2
   24628:	blt	246a4 <main@@Base+0xe970>
   2462c:	ldrb	r0, [r1]
   24630:	cmp	r0, #32
   24634:	bls	24694 <main@@Base+0xe960>
   24638:	mov	r4, r1
   2463c:	b	246b4 <main@@Base+0xe980>
   24640:	mov	r0, r5
   24644:	mov	r1, r4
   24648:	mov	r2, r8
   2464c:	mov	r3, #21
   24650:	bl	3133c <flatcc_json_parser_set_error@@Base>
   24654:	mov	r4, r0
   24658:	ldr	r0, [r5, #20]
   2465c:	cmp	r0, #0
   24660:	bne	245c0 <main@@Base+0xe88c>
   24664:	ldr	r3, [sp, #28]
   24668:	mov	r0, r5
   2466c:	mov	r1, r4
   24670:	mov	r2, r8
   24674:	bl	338d0 <flatcc_json_parser_finalize_unions@@Base>
   24678:	mov	r4, r0
   2467c:	ldr	r0, [r5]
   24680:	bl	2de74 <flatcc_builder_end_table@@Base>
   24684:	cmp	r0, #0
   24688:	str	r0, [r7]
   2468c:	bne	245d8 <main@@Base+0xe8a4>
   24690:	b	245c0 <main@@Base+0xe88c>
   24694:	bne	246a4 <main@@Base+0xe970>
   24698:	ldrb	r0, [r4, #2]!
   2469c:	cmp	r0, #32
   246a0:	bhi	246b4 <main@@Base+0xe980>
   246a4:	mov	r0, r5
   246a8:	mov	r2, r8
   246ac:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   246b0:	mov	r4, r0
   246b4:	cmp	r4, r8
   246b8:	mov	r2, r8
   246bc:	beq	246f8 <main@@Base+0xe9c4>
   246c0:	ldrb	r0, [r4]
   246c4:	cmp	r0, #125	; 0x7d
   246c8:	bne	246f4 <main@@Base+0xe9c0>
   246cc:	add	r1, r4, #1
   246d0:	sub	r0, r8, r1
   246d4:	cmp	r0, #2
   246d8:	blt	24e88 <main@@Base+0xf154>
   246dc:	ldrb	r0, [r1]
   246e0:	cmp	r0, #32
   246e4:	bhi	24e4c <main@@Base+0xf118>
   246e8:	bne	24e88 <main@@Base+0xf154>
   246ec:	ldrb	r0, [r4, #2]!
   246f0:	b	24e80 <main@@Base+0xf14c>
   246f4:	mov	r2, r4
   246f8:	str	r7, [sp, #20]
   246fc:	cmp	r2, r8
   24700:	mov	r9, r8
   24704:	beq	24734 <main@@Base+0xea00>
   24708:	ldrb	r0, [r2]
   2470c:	cmp	r0, #34	; 0x22
   24710:	bne	2471c <main@@Base+0xe9e8>
   24714:	add	r9, r2, #1
   24718:	b	24734 <main@@Base+0xea00>
   2471c:	mov	r1, r2
   24720:	mov	r0, r5
   24724:	mov	r2, r8
   24728:	mov	r3, #5
   2472c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   24730:	mov	r9, r0
   24734:	sub	r1, r8, r9
   24738:	mov	r0, #8
   2473c:	cmp	r1, #8
   24740:	movcc	r0, r1
   24744:	sub	r2, r0, #1
   24748:	cmp	r2, #7
   2474c:	bhi	24d54 <main@@Base+0xf020>
   24750:	str	r1, [sp, #24]
   24754:	add	r0, pc, #36	; 0x24
   24758:	mov	lr, r5
   2475c:	mov	sl, #0
   24760:	mov	ip, #0
   24764:	mov	r6, #0
   24768:	mov	r1, #0
   2476c:	mov	r3, #0
   24770:	mov	r5, #0
   24774:	mov	r7, #0
   24778:	mov	r4, #0
   2477c:	ldr	pc, [r0, r2, lsl #2]
   24780:	andeq	r4, r2, r4, ror #15
   24784:	ldrdeq	r4, [r2], -ip
   24788:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   2478c:	andeq	r4, r2, ip, asr #15
   24790:	andeq	r4, r2, r0, asr #15
   24794:			; <UNDEFINED> instruction: 0x000247b4
   24798:	andeq	r4, r2, r4, lsr #15
   2479c:	andeq	r4, r2, r0, lsr #15
   247a0:	ldrb	ip, [r9, #7]
   247a4:	ldrb	r0, [r9, #6]
   247a8:	mov	r6, sl
   247ac:	orr	r0, ip, r0, lsl #8
   247b0:	mov	sl, r0
   247b4:	ldrb	r0, [r9, #5]
   247b8:	mov	r1, r6
   247bc:	orr	sl, sl, r0, lsl #16
   247c0:	ldrb	r0, [r9, #4]
   247c4:	mov	r3, r1
   247c8:	orr	sl, sl, r0, lsl #24
   247cc:	ldrb	r0, [r9, #3]
   247d0:	orr	r5, r0, r3
   247d4:	ldrb	r0, [r9, #2]
   247d8:	orr	r7, r5, r0, lsl #8
   247dc:	ldrb	r0, [r9, #1]
   247e0:	orr	r4, r7, r0, lsl #16
   247e4:	movw	r2, #30976	; 0x7900
   247e8:	movt	r2, #24942	; 0x616e
   247ec:	add	r0, r2, #95	; 0x5f
   247f0:	eor	r1, sl, r0
   247f4:	ldrb	r0, [r9]
   247f8:	orr	r4, r4, r0, lsl #24
   247fc:	movw	r0, #28281	; 0x6e79
   24800:	movt	r0, #28001	; 0x6d61
   24804:	eor	r0, r4, r0
   24808:	orrs	r1, r1, r0
   2480c:	bne	248c8 <main@@Base+0xeb94>
   24810:	add	r6, r9, #8
   24814:	ldr	r7, [sp, #20]
   24818:	mov	r1, #8
   2481c:	mov	r5, lr
   24820:	sub	r0, r8, r6
   24824:	cmp	r0, #8
   24828:	movcc	r1, r0
   2482c:	sub	r2, r1, #1
   24830:	cmp	r2, #7
   24834:	bhi	24c88 <main@@Base+0xef54>
   24838:	add	r3, pc, #4
   2483c:	mov	r1, #0
   24840:	ldr	pc, [r3, r2, lsl #2]
   24844:	andeq	r4, r2, r8, ror r8
   24848:	andeq	r4, r2, r0, ror r8
   2484c:	andeq	r4, r2, r8, ror #16
   24850:	andeq	r4, r2, r4, ror #16
   24854:	andeq	r4, r2, r4, ror #16
   24858:	andeq	r4, r2, r4, ror #16
   2485c:	andeq	r4, r2, r4, ror #16
   24860:	andeq	r4, r2, r4, ror #16
   24864:	ldrb	r1, [r9, #11]
   24868:	ldrb	r2, [r9, #10]
   2486c:	orr	r1, r1, r2, lsl #8
   24870:	ldrb	r2, [r9, #9]
   24874:	orr	r1, r1, r2, lsl #16
   24878:	ldrb	r2, [r6]
   2487c:	orr	r1, r1, r2, lsl #24
   24880:	movw	r2, #28773	; 0x7065
   24884:	movt	r2, #29817	; 0x7479
   24888:	teq	r1, r2
   2488c:	bne	24c88 <main@@Base+0xef54>
   24890:	cmp	r0, #5
   24894:	blt	24c88 <main@@Base+0xef54>
   24898:	ldrb	r0, [r9, #12]
   2489c:	cmp	r0, #34	; 0x22
   248a0:	bne	24c88 <main@@Base+0xef54>
   248a4:	add	r1, r9, #13
   248a8:	sub	r0, r8, r1
   248ac:	cmp	r0, #2
   248b0:	blt	249a4 <main@@Base+0xec70>
   248b4:	ldrb	r0, [r1]
   248b8:	cmp	r0, #32
   248bc:	bls	24994 <main@@Base+0xec60>
   248c0:	mov	r9, r1
   248c4:	b	249b4 <main@@Base+0xec80>
   248c8:	ldr	r6, [sp, #24]
   248cc:	bic	r1, sl, #255	; 0xff
   248d0:	mov	r5, lr
   248d4:	eor	r1, r1, r2
   248d8:	orrs	r0, r1, r0
   248dc:	bne	24a64 <main@@Base+0xed30>
   248e0:	cmp	r6, #8
   248e4:	mov	r1, r9
   248e8:	blt	24a28 <main@@Base+0xecf4>
   248ec:	ldrb	r0, [r9, #7]
   248f0:	mov	r1, r9
   248f4:	cmp	r0, #34	; 0x22
   248f8:	bne	24a28 <main@@Base+0xecf4>
   248fc:	add	r2, r9, #8
   24900:	sub	r0, r8, r2
   24904:	cmp	r0, #2
   24908:	blt	24934 <main@@Base+0xec00>
   2490c:	ldrb	r0, [r2]
   24910:	cmp	r0, #32
   24914:	bls	24920 <main@@Base+0xebec>
   24918:	mov	r1, r2
   2491c:	b	24948 <main@@Base+0xec14>
   24920:	bne	24934 <main@@Base+0xec00>
   24924:	mov	r1, r9
   24928:	ldrb	r0, [r1, #9]!
   2492c:	cmp	r0, #32
   24930:	bhi	24948 <main@@Base+0xec14>
   24934:	mov	r1, r2
   24938:	mov	r0, r5
   2493c:	mov	r2, r8
   24940:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   24944:	mov	r1, r0
   24948:	cmp	r1, r8
   2494c:	beq	24980 <main@@Base+0xec4c>
   24950:	ldrb	r0, [r1]
   24954:	cmp	r0, #58	; 0x3a
   24958:	bne	24980 <main@@Base+0xec4c>
   2495c:	add	r2, r1, #1
   24960:	sub	r0, r8, r2
   24964:	cmp	r0, #2
   24968:	blt	24a14 <main@@Base+0xece0>
   2496c:	ldrb	r0, [r2]
   24970:	cmp	r0, #32
   24974:	bls	24a04 <main@@Base+0xecd0>
   24978:	mov	r1, r2
   2497c:	b	24a28 <main@@Base+0xecf4>
   24980:	mov	r0, r5
   24984:	mov	r2, r8
   24988:	mov	r3, #4
   2498c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   24990:	b	24a24 <main@@Base+0xecf0>
   24994:	bne	249a4 <main@@Base+0xec70>
   24998:	ldrb	r0, [r9, #14]!
   2499c:	cmp	r0, #32
   249a0:	bhi	249b4 <main@@Base+0xec80>
   249a4:	mov	r0, r5
   249a8:	mov	r2, r8
   249ac:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   249b0:	mov	r9, r0
   249b4:	cmp	r9, r8
   249b8:	beq	249ec <main@@Base+0xecb8>
   249bc:	ldrb	r0, [r9]
   249c0:	cmp	r0, #58	; 0x3a
   249c4:	bne	249ec <main@@Base+0xecb8>
   249c8:	add	r1, r9, #1
   249cc:	sub	r0, r8, r1
   249d0:	cmp	r0, #2
   249d4:	blt	24c24 <main@@Base+0xeef0>
   249d8:	ldrb	r0, [r1]
   249dc:	cmp	r0, #32
   249e0:	bls	24c14 <main@@Base+0xeee0>
   249e4:	mov	r9, r1
   249e8:	b	24c34 <main@@Base+0xef00>
   249ec:	mov	r0, r5
   249f0:	mov	r1, r9
   249f4:	mov	r2, r8
   249f8:	mov	r3, #4
   249fc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   24a00:	b	24c30 <main@@Base+0xeefc>
   24a04:	bne	24a14 <main@@Base+0xece0>
   24a08:	ldrb	r0, [r1, #2]!
   24a0c:	cmp	r0, #32
   24a10:	bhi	24a28 <main@@Base+0xecf4>
   24a14:	mov	r1, r2
   24a18:	mov	r0, r5
   24a1c:	mov	r2, r8
   24a20:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   24a24:	mov	r1, r0
   24a28:	cmp	r9, r1
   24a2c:	beq	24a64 <main@@Base+0xed30>
   24a30:	ldr	r0, [sp, #28]
   24a34:	mov	r2, #3
   24a38:	mov	r3, #0
   24a3c:	str	r2, [sp]
   24a40:	mov	r2, r8
   24a44:	str	r0, [sp, #4]
   24a48:	movw	r0, #7176	; 0x1c08
   24a4c:	movt	r0, #2
   24a50:	str	r0, [sp, #8]
   24a54:	mov	r0, r5
   24a58:	bl	33ec8 <flatcc_json_parser_union_vector@@Base>
   24a5c:	ldr	r7, [sp, #20]
   24a60:	b	24d64 <main@@Base+0xf030>
   24a64:	lsr	r1, sl, #16
   24a68:	movw	r2, #27000	; 0x6978
   24a6c:	movw	r0, #28786	; 0x7072
   24a70:	orr	r1, r1, r4, lsl #16
   24a74:	movt	r2, #25958	; 0x6566
   24a78:	eor	r0, r0, r4, lsr #16
   24a7c:	eor	r1, r1, r2
   24a80:	orrs	r0, r1, r0
   24a84:	bne	24acc <main@@Base+0xed98>
   24a88:	ldr	r7, [sp, #20]
   24a8c:	cmp	r6, #7
   24a90:	mov	r1, r9
   24a94:	blt	24cb8 <main@@Base+0xef84>
   24a98:	ldrb	r0, [r9, #6]
   24a9c:	mov	r1, r9
   24aa0:	cmp	r0, #34	; 0x22
   24aa4:	bne	24cb8 <main@@Base+0xef84>
   24aa8:	add	r2, r9, #7
   24aac:	sub	r0, r8, r2
   24ab0:	cmp	r0, #2
   24ab4:	blt	24b40 <main@@Base+0xee0c>
   24ab8:	ldrb	r0, [r2]
   24abc:	cmp	r0, #32
   24ac0:	bls	24b2c <main@@Base+0xedf8>
   24ac4:	mov	r1, r2
   24ac8:	b	24b54 <main@@Base+0xee20>
   24acc:	movw	r0, #30313	; 0x7669
   24ad0:	ldr	r7, [sp, #20]
   24ad4:	and	r1, sl, #-16777216	; 0xff000000
   24ad8:	movt	r0, #28015	; 0x6d6f
   24adc:	eor	r1, r1, #1694498816	; 0x65000000
   24ae0:	eor	r0, r4, r0
   24ae4:	orrs	r0, r1, r0
   24ae8:	bne	24d54 <main@@Base+0xf020>
   24aec:	cmp	r6, #6
   24af0:	mov	r1, r9
   24af4:	blt	24d10 <main@@Base+0xefdc>
   24af8:	ldrb	r0, [r9, #5]
   24afc:	mov	r1, r9
   24b00:	cmp	r0, #34	; 0x22
   24b04:	bne	24d10 <main@@Base+0xefdc>
   24b08:	add	r2, r9, #6
   24b0c:	sub	r0, r8, r2
   24b10:	cmp	r0, #2
   24b14:	blt	24bb4 <main@@Base+0xee80>
   24b18:	ldrb	r0, [r2]
   24b1c:	cmp	r0, #32
   24b20:	bls	24ba0 <main@@Base+0xee6c>
   24b24:	mov	r1, r2
   24b28:	b	24bc8 <main@@Base+0xee94>
   24b2c:	bne	24b40 <main@@Base+0xee0c>
   24b30:	mov	r1, r9
   24b34:	ldrb	r0, [r1, #8]!
   24b38:	cmp	r0, #32
   24b3c:	bhi	24b54 <main@@Base+0xee20>
   24b40:	mov	r1, r2
   24b44:	mov	r0, r5
   24b48:	mov	r2, r8
   24b4c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   24b50:	mov	r1, r0
   24b54:	cmp	r1, r8
   24b58:	beq	24b8c <main@@Base+0xee58>
   24b5c:	ldrb	r0, [r1]
   24b60:	cmp	r0, #58	; 0x3a
   24b64:	bne	24b8c <main@@Base+0xee58>
   24b68:	add	r2, r1, #1
   24b6c:	sub	r0, r8, r2
   24b70:	cmp	r0, #2
   24b74:	blt	24ca4 <main@@Base+0xef70>
   24b78:	ldrb	r0, [r2]
   24b7c:	cmp	r0, #32
   24b80:	bls	24c94 <main@@Base+0xef60>
   24b84:	mov	r1, r2
   24b88:	b	24cb8 <main@@Base+0xef84>
   24b8c:	mov	r0, r5
   24b90:	mov	r2, r8
   24b94:	mov	r3, #4
   24b98:	bl	3133c <flatcc_json_parser_set_error@@Base>
   24b9c:	b	24cb4 <main@@Base+0xef80>
   24ba0:	bne	24bb4 <main@@Base+0xee80>
   24ba4:	mov	r1, r9
   24ba8:	ldrb	r0, [r1, #7]!
   24bac:	cmp	r0, #32
   24bb0:	bhi	24bc8 <main@@Base+0xee94>
   24bb4:	mov	r1, r2
   24bb8:	mov	r0, r5
   24bbc:	mov	r2, r8
   24bc0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   24bc4:	mov	r1, r0
   24bc8:	cmp	r1, r8
   24bcc:	beq	24c00 <main@@Base+0xeecc>
   24bd0:	ldrb	r0, [r1]
   24bd4:	cmp	r0, #58	; 0x3a
   24bd8:	bne	24c00 <main@@Base+0xeecc>
   24bdc:	add	r2, r1, #1
   24be0:	sub	r0, r8, r2
   24be4:	cmp	r0, #2
   24be8:	blt	24cfc <main@@Base+0xefc8>
   24bec:	ldrb	r0, [r2]
   24bf0:	cmp	r0, #32
   24bf4:	bls	24cec <main@@Base+0xefb8>
   24bf8:	mov	r1, r2
   24bfc:	b	24d10 <main@@Base+0xefdc>
   24c00:	mov	r0, r5
   24c04:	mov	r2, r8
   24c08:	mov	r3, #4
   24c0c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   24c10:	b	24d0c <main@@Base+0xefd8>
   24c14:	bne	24c24 <main@@Base+0xeef0>
   24c18:	ldrb	r0, [r9, #2]!
   24c1c:	cmp	r0, #32
   24c20:	bhi	24c34 <main@@Base+0xef00>
   24c24:	mov	r0, r5
   24c28:	mov	r2, r8
   24c2c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   24c30:	mov	r9, r0
   24c34:	cmp	r6, r9
   24c38:	beq	24c88 <main@@Base+0xef54>
   24c3c:	ldr	r0, [sp, #28]
   24c40:	mov	r1, #3
   24c44:	mov	r2, r8
   24c48:	mov	r3, #0
   24c4c:	str	r1, [sp]
   24c50:	mov	r1, r9
   24c54:	str	r0, [sp, #4]
   24c58:	movw	r0, #33304	; 0x8218
   24c5c:	movt	r0, #5
   24c60:	str	r0, [sp, #8]
   24c64:	movw	r0, #7176	; 0x1c08
   24c68:	movt	r0, #2
   24c6c:	str	r0, [sp, #12]
   24c70:	movw	r0, #20120	; 0x4e98
   24c74:	movt	r0, #2
   24c78:	str	r0, [sp, #16]
   24c7c:	mov	r0, r5
   24c80:	bl	34394 <flatcc_json_parser_union_type_vector@@Base>
   24c84:	b	24d64 <main@@Base+0xf030>
   24c88:	mov	r0, r5
   24c8c:	mov	r1, r6
   24c90:	b	24d5c <main@@Base+0xf028>
   24c94:	bne	24ca4 <main@@Base+0xef70>
   24c98:	ldrb	r0, [r1, #2]!
   24c9c:	cmp	r0, #32
   24ca0:	bhi	24cb8 <main@@Base+0xef84>
   24ca4:	mov	r1, r2
   24ca8:	mov	r0, r5
   24cac:	mov	r2, r8
   24cb0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   24cb4:	mov	r1, r0
   24cb8:	cmp	r9, r1
   24cbc:	beq	24d54 <main@@Base+0xf020>
   24cc0:	mov	r0, r5
   24cc4:	mov	r2, r8
   24cc8:	add	r3, sp, #32
   24ccc:	bl	24eac <main@@Base+0xf178>
   24cd0:	ldr	r6, [sp, #32]
   24cd4:	mov	r4, r0
   24cd8:	cmp	r6, #0
   24cdc:	beq	245c0 <main@@Base+0xe88c>
   24ce0:	ldr	r0, [r5]
   24ce4:	mov	r1, #0
   24ce8:	b	24d40 <main@@Base+0xf00c>
   24cec:	bne	24cfc <main@@Base+0xefc8>
   24cf0:	ldrb	r0, [r1, #2]!
   24cf4:	cmp	r0, #32
   24cf8:	bhi	24d10 <main@@Base+0xefdc>
   24cfc:	mov	r1, r2
   24d00:	mov	r0, r5
   24d04:	mov	r2, r8
   24d08:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   24d0c:	mov	r1, r0
   24d10:	cmp	r9, r1
   24d14:	beq	24d54 <main@@Base+0xf020>
   24d18:	mov	r0, r5
   24d1c:	mov	r2, r8
   24d20:	add	r3, sp, #32
   24d24:	bl	27eac <main@@Base+0x12178>
   24d28:	ldr	r6, [sp, #32]
   24d2c:	mov	r4, r0
   24d30:	cmp	r6, #0
   24d34:	beq	245c0 <main@@Base+0xe88c>
   24d38:	ldr	r0, [r5]
   24d3c:	mov	r1, #1
   24d40:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   24d44:	cmp	r0, #0
   24d48:	beq	245c0 <main@@Base+0xe88c>
   24d4c:	str	r6, [r0]
   24d50:	b	24d68 <main@@Base+0xf034>
   24d54:	mov	r0, r5
   24d58:	mov	r1, r9
   24d5c:	mov	r2, r8
   24d60:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   24d64:	mov	r4, r0
   24d68:	sub	r0, r8, r4
   24d6c:	cmp	r0, #2
   24d70:	blt	24d9c <main@@Base+0xf068>
   24d74:	ldrb	r0, [r4]
   24d78:	cmp	r0, #32
   24d7c:	bls	24d88 <main@@Base+0xf054>
   24d80:	mov	r2, r4
   24d84:	b	24db0 <main@@Base+0xf07c>
   24d88:	bne	24d9c <main@@Base+0xf068>
   24d8c:	mov	r2, r4
   24d90:	ldrb	r0, [r2, #1]!
   24d94:	cmp	r0, #32
   24d98:	bhi	24db0 <main@@Base+0xf07c>
   24d9c:	mov	r0, r5
   24da0:	mov	r1, r4
   24da4:	mov	r2, r8
   24da8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   24dac:	mov	r2, r0
   24db0:	cmp	r2, r8
   24db4:	beq	24e20 <main@@Base+0xf0ec>
   24db8:	ldrb	r0, [r2]
   24dbc:	cmp	r0, #44	; 0x2c
   24dc0:	bne	24e28 <main@@Base+0xf0f4>
   24dc4:	add	r1, r2, #1
   24dc8:	sub	r0, r8, r1
   24dcc:	cmp	r0, #2
   24dd0:	blt	24df8 <main@@Base+0xf0c4>
   24dd4:	ldrb	r0, [r1]
   24dd8:	cmp	r0, #32
   24ddc:	bls	24de8 <main@@Base+0xf0b4>
   24de0:	mov	r2, r1
   24de4:	b	24e08 <main@@Base+0xf0d4>
   24de8:	bne	24df8 <main@@Base+0xf0c4>
   24dec:	ldrb	r0, [r2, #2]!
   24df0:	cmp	r0, #32
   24df4:	bhi	24e08 <main@@Base+0xf0d4>
   24df8:	mov	r0, r5
   24dfc:	mov	r2, r8
   24e00:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   24e04:	mov	r2, r0
   24e08:	cmp	r2, r8
   24e0c:	beq	24e54 <main@@Base+0xf120>
   24e10:	ldrb	r0, [r2]
   24e14:	cmp	r0, #125	; 0x7d
   24e18:	bne	246fc <main@@Base+0xe9c8>
   24e1c:	b	24e30 <main@@Base+0xf0fc>
   24e20:	mov	r4, r8
   24e24:	b	24658 <main@@Base+0xe924>
   24e28:	cmp	r0, #125	; 0x7d
   24e2c:	bne	24e60 <main@@Base+0xf12c>
   24e30:	add	r1, r2, #1
   24e34:	sub	r0, r8, r1
   24e38:	cmp	r0, #2
   24e3c:	blt	24e88 <main@@Base+0xf154>
   24e40:	ldrb	r0, [r1]
   24e44:	cmp	r0, #32
   24e48:	bls	24e74 <main@@Base+0xf140>
   24e4c:	mov	r4, r1
   24e50:	b	24658 <main@@Base+0xe924>
   24e54:	mov	r0, r5
   24e58:	mov	r1, r8
   24e5c:	b	24e68 <main@@Base+0xf134>
   24e60:	mov	r0, r5
   24e64:	mov	r1, r2
   24e68:	mov	r2, r8
   24e6c:	mov	r3, #10
   24e70:	b	24650 <main@@Base+0xe91c>
   24e74:	bne	24e88 <main@@Base+0xf154>
   24e78:	ldrb	r0, [r2, #2]!
   24e7c:	mov	r4, r2
   24e80:	cmp	r0, #32
   24e84:	bhi	24658 <main@@Base+0xe924>
   24e88:	mov	r0, r5
   24e8c:	mov	r2, r8
   24e90:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   24e94:	b	24654 <main@@Base+0xe920>
   24e98:	cmp	r0, #5
   24e9c:	mov	r1, #0
   24ea0:	movwcc	r1, #1
   24ea4:	mov	r0, r1
   24ea8:	bx	lr
   24eac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24eb0:	add	fp, sp, #28
   24eb4:	sub	sp, sp, #60	; 0x3c
   24eb8:	mov	r7, r0
   24ebc:	mov	r0, #0
   24ec0:	mov	sl, r1
   24ec4:	mov	r1, #3
   24ec8:	mov	r4, r3
   24ecc:	mov	r8, r2
   24ed0:	str	r0, [r3]
   24ed4:	ldr	r0, [r7]
   24ed8:	bl	2d514 <flatcc_builder_start_table@@Base>
   24edc:	cmp	r0, #0
   24ee0:	bne	24f40 <main@@Base+0xf20c>
   24ee4:	cmp	sl, r8
   24ee8:	beq	24f1c <main@@Base+0xf1e8>
   24eec:	ldrb	r0, [sl]
   24ef0:	cmp	r0, #123	; 0x7b
   24ef4:	bne	24f1c <main@@Base+0xf1e8>
   24ef8:	add	r1, sl, #1
   24efc:	sub	r0, r8, r1
   24f00:	cmp	r0, #2
   24f04:	blt	24f8c <main@@Base+0xf258>
   24f08:	ldrb	r0, [r1]
   24f0c:	cmp	r0, #32
   24f10:	bls	24f7c <main@@Base+0xf248>
   24f14:	mov	sl, r1
   24f18:	b	24f9c <main@@Base+0xf268>
   24f1c:	mov	r0, r7
   24f20:	mov	r1, sl
   24f24:	mov	r2, r8
   24f28:	mov	r3, #21
   24f2c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   24f30:	mov	sl, r0
   24f34:	ldr	r0, [r7, #20]
   24f38:	cmp	r0, #0
   24f3c:	beq	24f64 <main@@Base+0xf230>
   24f40:	mov	r0, r7
   24f44:	mov	r1, sl
   24f48:	mov	r2, r8
   24f4c:	mov	r3, #33	; 0x21
   24f50:	bl	3133c <flatcc_json_parser_set_error@@Base>
   24f54:	mov	sl, r0
   24f58:	mov	r0, sl
   24f5c:	sub	sp, fp, #28
   24f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24f64:	ldr	r0, [r7]
   24f68:	bl	2de74 <flatcc_builder_end_table@@Base>
   24f6c:	cmp	r0, #0
   24f70:	str	r0, [r4]
   24f74:	bne	24f58 <main@@Base+0xf224>
   24f78:	b	24f40 <main@@Base+0xf20c>
   24f7c:	bne	24f8c <main@@Base+0xf258>
   24f80:	ldrb	r0, [sl, #2]!
   24f84:	cmp	r0, #32
   24f88:	bhi	24f9c <main@@Base+0xf268>
   24f8c:	mov	r0, r7
   24f90:	mov	r2, r8
   24f94:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   24f98:	mov	sl, r0
   24f9c:	cmp	sl, r8
   24fa0:	mov	r2, r8
   24fa4:	beq	24fe0 <main@@Base+0xf2ac>
   24fa8:	ldrb	r0, [sl]
   24fac:	cmp	r0, #125	; 0x7d
   24fb0:	bne	24fdc <main@@Base+0xf2a8>
   24fb4:	add	r1, sl, #1
   24fb8:	sub	r0, r8, r1
   24fbc:	cmp	r0, #2
   24fc0:	blt	27e48 <main@@Base+0x12114>
   24fc4:	ldrb	r0, [r1]
   24fc8:	cmp	r0, #32
   24fcc:	bhi	27e0c <main@@Base+0x120d8>
   24fd0:	bne	27e48 <main@@Base+0x12114>
   24fd4:	ldrb	r0, [sl, #2]!
   24fd8:	b	27e40 <main@@Base+0x1210c>
   24fdc:	mov	r2, sl
   24fe0:	movw	r1, #25186	; 0x6262
   24fe4:	movw	r0, #257	; 0x101
   24fe8:	movw	sl, #0
   24fec:	str	r8, [sp, #16]
   24ff0:	str	r7, [sp, #24]
   24ff4:	str	r4, [sp, #20]
   24ff8:	movt	r1, #25186	; 0x6262
   24ffc:	movt	r0, #257	; 0x101
   25000:	movt	sl, #26418	; 0x6732
   25004:	add	r0, r1, r0
   25008:	str	r0, [sp, #12]
   2500c:	movw	r0, #514	; 0x202
   25010:	movt	r0, #514	; 0x202
   25014:	add	r0, r1, r0
   25018:	str	r0, [sp, #8]
   2501c:	cmp	r2, r8
   25020:	mov	r9, r8
   25024:	beq	25054 <main@@Base+0xf320>
   25028:	ldrb	r0, [r2]
   2502c:	cmp	r0, #34	; 0x22
   25030:	bne	2503c <main@@Base+0xf308>
   25034:	add	r9, r2, #1
   25038:	b	25054 <main@@Base+0xf320>
   2503c:	mov	r1, r2
   25040:	mov	r0, r7
   25044:	mov	r2, r8
   25048:	mov	r3, #5
   2504c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   25050:	mov	r9, r0
   25054:	sub	r0, r8, r9
   25058:	mov	r1, #8
   2505c:	cmp	r0, #8
   25060:	movcs	r0, r1
   25064:	sub	r3, r0, #1
   25068:	cmp	r3, #7
   2506c:	bhi	252f4 <main@@Base+0xf5c0>
   25070:	add	r5, pc, #32
   25074:	mov	r0, #0
   25078:	mov	ip, #0
   2507c:	mov	lr, #0
   25080:	mov	r7, #0
   25084:	mov	r2, #0
   25088:	mov	r6, #0
   2508c:	mov	r4, #0
   25090:	mov	r1, #0
   25094:	ldr	pc, [r5, r3, lsl #2]
   25098:	strdeq	r5, [r2], -ip
   2509c:	strdeq	r5, [r2], -r4
   250a0:	andeq	r5, r2, ip, ror #1
   250a4:	andeq	r5, r2, r4, ror #1
   250a8:	ldrdeq	r5, [r2], -r8
   250ac:	andeq	r5, r2, ip, asr #1
   250b0:	strheq	r5, [r2], -ip
   250b4:	strheq	r5, [r2], -r8
   250b8:	ldrb	ip, [r9, #7]
   250bc:	ldrb	r1, [r9, #6]
   250c0:	mov	lr, r0
   250c4:	orr	r1, ip, r1, lsl #8
   250c8:	mov	r0, r1
   250cc:	ldrb	r1, [r9, #5]
   250d0:	mov	r7, lr
   250d4:	orr	r0, r0, r1, lsl #16
   250d8:	ldrb	r1, [r9, #4]
   250dc:	mov	r2, r7
   250e0:	orr	r0, r0, r1, lsl #24
   250e4:	ldrb	r1, [r9, #3]
   250e8:	orr	r6, r1, r2
   250ec:	ldrb	r1, [r9, #2]
   250f0:	orr	r4, r6, r1, lsl #8
   250f4:	ldrb	r1, [r9, #1]
   250f8:	orr	r1, r4, r1, lsl #16
   250fc:	movw	r2, #28526	; 0x6f6e
   25100:	movt	r2, #27251	; 0x6a73
   25104:	eor	r0, r0, r2
   25108:	ldrb	r2, [r9]
   2510c:	orr	r1, r1, r2, lsl #24
   25110:	movw	r2, #29556	; 0x7374
   25114:	movt	r2, #29797	; 0x7465
   25118:	eor	r1, r1, r2
   2511c:	orrs	r0, r0, r1
   25120:	bne	252f4 <main@@Base+0xf5c0>
   25124:	add	r1, r9, #8
   25128:	mov	r2, #8
   2512c:	sub	r0, r8, r1
   25130:	cmp	r0, #8
   25134:	movcs	r0, r2
   25138:	sub	r7, r0, #1
   2513c:	cmp	r7, #7
   25140:	bhi	25300 <main@@Base+0xf5cc>
   25144:	add	r0, pc, #32
   25148:	mov	r8, #0
   2514c:	mov	ip, #0
   25150:	mov	lr, #0
   25154:	mov	r6, #0
   25158:	mov	r3, #0
   2515c:	mov	r5, #0
   25160:	mov	r2, #0
   25164:	mov	r4, #0
   25168:	ldr	pc, [r0, r7, lsl #2]
   2516c:	ldrdeq	r5, [r2], -r0
   25170:	andeq	r5, r2, r8, asr #3
   25174:	andeq	r5, r2, r0, asr #3
   25178:			; <UNDEFINED> instruction: 0x000251b8
   2517c:	andeq	r5, r2, ip, lsr #3
   25180:	andeq	r5, r2, r0, lsr #3
   25184:	muleq	r2, r0, r1
   25188:	andeq	r5, r2, ip, lsl #3
   2518c:	ldrb	ip, [r9, #15]
   25190:	ldrb	r0, [r9, #14]
   25194:	mov	lr, r8
   25198:	orr	r0, ip, r0, lsl #8
   2519c:	mov	r8, r0
   251a0:	ldrb	r0, [r9, #13]
   251a4:	mov	r6, lr
   251a8:	orr	r8, r8, r0, lsl #16
   251ac:	ldrb	r0, [r9, #12]
   251b0:	mov	r3, r6
   251b4:	orr	r8, r8, r0, lsl #24
   251b8:	ldrb	r0, [r9, #11]
   251bc:	orr	r5, r0, r3
   251c0:	ldrb	r0, [r9, #10]
   251c4:	orr	r2, r5, r0, lsl #8
   251c8:	ldrb	r0, [r9, #9]
   251cc:	orr	r4, r2, r0, lsl #16
   251d0:	ldrb	r2, [r1]
   251d4:	movw	r0, #28769	; 0x7061
   251d8:	movw	r3, #25958	; 0x6566
   251dc:	movt	r0, #27000	; 0x6978
   251e0:	movt	r3, #28786	; 0x7072
   251e4:	eor	r0, r8, r0
   251e8:	ldr	r8, [sp, #16]
   251ec:	orr	r2, r4, r2, lsl #24
   251f0:	eor	r2, r2, r3
   251f4:	orrs	r0, r0, r2
   251f8:	bne	25300 <main@@Base+0xf5cc>
   251fc:	add	ip, r9, #16
   25200:	mov	r0, #8
   25204:	sub	lr, r8, ip
   25208:	cmp	lr, #8
   2520c:	movcc	r0, lr
   25210:	sub	r2, r0, #1
   25214:	cmp	r2, #7
   25218:	bhi	256dc <main@@Base+0xf9a8>
   2521c:	add	r6, pc, #24
   25220:	mov	r0, #0
   25224:	mov	r1, #0
   25228:	mov	r3, #0
   2522c:	mov	r5, #0
   25230:	mov	r7, #0
   25234:	mov	r4, #0
   25238:	ldr	pc, [r6, r2, lsl #2]
   2523c:	andeq	r5, r2, ip, lsl #5
   25240:	andeq	r5, r2, r4, lsl #5
   25244:	andeq	r5, r2, ip, ror r2
   25248:	andeq	r5, r2, r4, ror r2
   2524c:	andeq	r5, r2, r4, ror #4
   25250:	andeq	r5, r2, ip, asr r2
   25254:	andeq	r5, r2, ip, asr r2
   25258:	andeq	r5, r2, ip, asr r2
   2525c:	ldrb	r1, [r9, #21]
   25260:	lsl	r1, r1, #16
   25264:	ldrb	r2, [r9, #20]
   25268:	mov	r3, r0
   2526c:	orr	r1, r1, r2, lsl #24
   25270:	mov	r0, r1
   25274:	ldrb	r1, [r9, #19]
   25278:	orr	r5, r1, r3
   2527c:	ldrb	r1, [r9, #18]
   25280:	orr	r7, r5, r1, lsl #8
   25284:	ldrb	r1, [r9, #17]
   25288:	orr	r4, r7, r1, lsl #16
   2528c:	ldrb	r1, [ip]
   25290:	mov	r8, r0
   25294:	movw	r3, #26990	; 0x696e
   25298:	bfc	r8, #0, #16
   2529c:	movt	r3, #29299	; 0x7273
   252a0:	eor	r2, r8, sl
   252a4:	orr	r1, r4, r1, lsl #24
   252a8:	eor	r5, r1, r3
   252ac:	orrs	r2, r2, r5
   252b0:	bne	253d0 <main@@Base+0xf69c>
   252b4:	ldr	r8, [sp, #16]
   252b8:	cmp	lr, #7
   252bc:	blt	256dc <main@@Base+0xf9a8>
   252c0:	ldrb	r0, [r9, #22]
   252c4:	cmp	r0, #34	; 0x22
   252c8:	bne	256dc <main@@Base+0xf9a8>
   252cc:	ldr	r4, [sp, #24]
   252d0:	add	r1, r9, #23
   252d4:	sub	r0, r8, r1
   252d8:	cmp	r0, #2
   252dc:	blt	25444 <main@@Base+0xf710>
   252e0:	ldrb	r0, [r1]
   252e4:	cmp	r0, #32
   252e8:	bls	25434 <main@@Base+0xf700>
   252ec:	mov	r9, r1
   252f0:	b	2545c <main@@Base+0xf728>
   252f4:	ldr	r7, [sp, #24]
   252f8:	mov	r1, r9
   252fc:	b	25304 <main@@Base+0xf5d0>
   25300:	ldr	r7, [sp, #24]
   25304:	mov	r0, r7
   25308:	mov	r2, r8
   2530c:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   25310:	mov	r9, r0
   25314:	sub	r0, r8, r9
   25318:	cmp	r0, #2
   2531c:	blt	25348 <main@@Base+0xf614>
   25320:	ldrb	r0, [r9]
   25324:	cmp	r0, #32
   25328:	bls	25334 <main@@Base+0xf600>
   2532c:	mov	r2, r9
   25330:	b	2535c <main@@Base+0xf628>
   25334:	bne	25348 <main@@Base+0xf614>
   25338:	mov	r2, r9
   2533c:	ldrb	r0, [r2, #1]!
   25340:	cmp	r0, #32
   25344:	bhi	2535c <main@@Base+0xf628>
   25348:	mov	r0, r7
   2534c:	mov	r1, r9
   25350:	mov	r2, r8
   25354:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   25358:	mov	r2, r0
   2535c:	cmp	r2, r8
   25360:	beq	27ddc <main@@Base+0x120a8>
   25364:	ldrb	r0, [r2]
   25368:	ldr	r4, [sp, #20]
   2536c:	cmp	r0, #44	; 0x2c
   25370:	bne	27de8 <main@@Base+0x120b4>
   25374:	add	r1, r2, #1
   25378:	sub	r0, r8, r1
   2537c:	cmp	r0, #2
   25380:	blt	253a8 <main@@Base+0xf674>
   25384:	ldrb	r0, [r1]
   25388:	cmp	r0, #32
   2538c:	bls	25398 <main@@Base+0xf664>
   25390:	mov	r2, r1
   25394:	b	253b8 <main@@Base+0xf684>
   25398:	bne	253a8 <main@@Base+0xf674>
   2539c:	ldrb	r0, [r2, #2]!
   253a0:	cmp	r0, #32
   253a4:	bhi	253b8 <main@@Base+0xf684>
   253a8:	mov	r0, r7
   253ac:	mov	r2, r8
   253b0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   253b4:	mov	r2, r0
   253b8:	cmp	r2, r8
   253bc:	beq	27e14 <main@@Base+0x120e0>
   253c0:	ldrb	r0, [r2]
   253c4:	cmp	r0, #125	; 0x7d
   253c8:	bne	2501c <main@@Base+0xf2e8>
   253cc:	b	27df0 <main@@Base+0x120bc>
   253d0:	cmp	lr, #6
   253d4:	blt	25684 <main@@Base+0xf950>
   253d8:	movw	r2, #26990	; 0x696e
   253dc:	and	r0, r0, #-16777216	; 0xff000000
   253e0:	movt	r2, #29299	; 0x7273
   253e4:	eor	r0, r0, #1728053248	; 0x67000000
   253e8:	eor	r1, r1, r2
   253ec:	orrs	r0, r0, r1
   253f0:	bne	25684 <main@@Base+0xf950>
   253f4:	ldrb	r0, [r9, #21]
   253f8:	cmp	r0, #34	; 0x22
   253fc:	bne	25684 <main@@Base+0xf950>
   25400:	ldr	r4, [sp, #16]
   25404:	ldr	r6, [sp, #24]
   25408:	add	r1, r9, #22
   2540c:	str	lr, [sp, #4]
   25410:	sub	r0, r4, r1
   25414:	cmp	r0, #2
   25418:	blt	254c8 <main@@Base+0xf794>
   2541c:	ldrb	r0, [r1]
   25420:	cmp	r0, #32
   25424:	bls	254b0 <main@@Base+0xf77c>
   25428:	ldr	r4, [sp, #16]
   2542c:	mov	sl, r1
   25430:	b	254e4 <main@@Base+0xf7b0>
   25434:	bne	25444 <main@@Base+0xf710>
   25438:	ldrb	r0, [r9, #24]!
   2543c:	cmp	r0, #32
   25440:	bhi	2545c <main@@Base+0xf728>
   25444:	mov	r0, r4
   25448:	mov	r2, r8
   2544c:	mov	r5, ip
   25450:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   25454:	mov	ip, r5
   25458:	mov	r9, r0
   2545c:	mov	r5, ip
   25460:	cmp	r9, r8
   25464:	beq	25498 <main@@Base+0xf764>
   25468:	ldrb	r0, [r9]
   2546c:	cmp	r0, #58	; 0x3a
   25470:	bne	25498 <main@@Base+0xf764>
   25474:	add	r1, r9, #1
   25478:	sub	r0, r8, r1
   2547c:	cmp	r0, #2
   25480:	blt	2554c <main@@Base+0xf818>
   25484:	ldrb	r0, [r1]
   25488:	cmp	r0, #32
   2548c:	bls	2553c <main@@Base+0xf808>
   25490:	mov	r9, r1
   25494:	b	2555c <main@@Base+0xf828>
   25498:	mov	r0, r4
   2549c:	mov	r1, r9
   254a0:	mov	r2, r8
   254a4:	mov	r3, #4
   254a8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   254ac:	b	25558 <main@@Base+0xf824>
   254b0:	ldr	r4, [sp, #16]
   254b4:	bne	254c8 <main@@Base+0xf794>
   254b8:	mov	sl, r9
   254bc:	ldrb	r0, [sl, #23]!
   254c0:	cmp	r0, #32
   254c4:	bhi	254e4 <main@@Base+0xf7b0>
   254c8:	mov	r0, r6
   254cc:	mov	r2, r4
   254d0:	mov	r7, ip
   254d4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   254d8:	ldr	lr, [sp, #4]
   254dc:	mov	ip, r7
   254e0:	mov	sl, r0
   254e4:	mov	r7, ip
   254e8:	cmp	sl, r4
   254ec:	beq	25524 <main@@Base+0xf7f0>
   254f0:	ldrb	r0, [sl]
   254f4:	cmp	r0, #58	; 0x3a
   254f8:	bne	25524 <main@@Base+0xf7f0>
   254fc:	ldr	r0, [sp, #16]
   25500:	add	r1, sl, #1
   25504:	sub	r0, r0, r1
   25508:	cmp	r0, #2
   2550c:	blt	25610 <main@@Base+0xf8dc>
   25510:	ldrb	r0, [r1]
   25514:	cmp	r0, #32
   25518:	bls	25600 <main@@Base+0xf8cc>
   2551c:	mov	sl, r1
   25520:	b	25624 <main@@Base+0xf8f0>
   25524:	ldr	r2, [sp, #16]
   25528:	mov	r0, r6
   2552c:	mov	r1, sl
   25530:	mov	r3, #4
   25534:	bl	3133c <flatcc_json_parser_set_error@@Base>
   25538:	b	2561c <main@@Base+0xf8e8>
   2553c:	bne	2554c <main@@Base+0xf818>
   25540:	ldrb	r0, [r9, #2]!
   25544:	cmp	r0, #32
   25548:	bhi	2555c <main@@Base+0xf828>
   2554c:	mov	r0, r4
   25550:	mov	r2, r8
   25554:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   25558:	mov	r9, r0
   2555c:	mov	ip, r5
   25560:	cmp	r5, r9
   25564:	beq	256dc <main@@Base+0xf9a8>
   25568:	ldr	r7, [sp, #24]
   2556c:	mov	r1, #2
   25570:	ldr	r0, [r7]
   25574:	bl	2d514 <flatcc_builder_start_table@@Base>
   25578:	cmp	r0, #0
   2557c:	bne	27e90 <main@@Base+0x1215c>
   25580:	cmp	r9, r8
   25584:	beq	255b8 <main@@Base+0xf884>
   25588:	ldrb	r0, [r9]
   2558c:	cmp	r0, #123	; 0x7b
   25590:	bne	255b8 <main@@Base+0xf884>
   25594:	add	r1, r9, #1
   25598:	sub	r0, r8, r1
   2559c:	cmp	r0, #2
   255a0:	blt	257d8 <main@@Base+0xfaa4>
   255a4:	ldrb	r0, [r1]
   255a8:	cmp	r0, #32
   255ac:	bls	257c8 <main@@Base+0xfa94>
   255b0:	mov	r9, r1
   255b4:	b	257e8 <main@@Base+0xfab4>
   255b8:	mov	r0, r7
   255bc:	mov	r1, r9
   255c0:	mov	r2, r8
   255c4:	mov	r3, #21
   255c8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   255cc:	mov	r9, r0
   255d0:	ldr	r0, [r7, #20]
   255d4:	cmp	r0, #0
   255d8:	bne	27e90 <main@@Base+0x1215c>
   255dc:	ldr	r0, [r7]
   255e0:	bl	2de74 <flatcc_builder_end_table@@Base>
   255e4:	mov	r1, r7
   255e8:	cmp	r0, #0
   255ec:	beq	27e58 <main@@Base+0x12124>
   255f0:	mov	r7, r0
   255f4:	ldr	r0, [r1]
   255f8:	mov	r1, #1
   255fc:	b	273c4 <main@@Base+0x11690>
   25600:	bne	25610 <main@@Base+0xf8dc>
   25604:	ldrb	r0, [sl, #2]!
   25608:	cmp	r0, #32
   2560c:	bhi	25624 <main@@Base+0xf8f0>
   25610:	ldr	r2, [sp, #16]
   25614:	mov	r0, r6
   25618:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2561c:	ldr	lr, [sp, #4]
   25620:	mov	sl, r0
   25624:	mov	ip, r7
   25628:	cmp	r7, sl
   2562c:	beq	25684 <main@@Base+0xf950>
   25630:	ldr	r7, [sp, #24]
   25634:	mov	r1, #9
   25638:	ldr	r0, [r7]
   2563c:	bl	2d514 <flatcc_builder_start_table@@Base>
   25640:	cmp	r0, #0
   25644:	bne	27e6c <main@@Base+0x12138>
   25648:	ldr	r8, [sp, #16]
   2564c:	cmp	sl, r8
   25650:	beq	256ec <main@@Base+0xf9b8>
   25654:	ldrb	r0, [sl]
   25658:	cmp	r0, #123	; 0x7b
   2565c:	bne	256ec <main@@Base+0xf9b8>
   25660:	add	r1, sl, #1
   25664:	sub	r0, r8, r1
   25668:	cmp	r0, #2
   2566c:	blt	25f80 <main@@Base+0x1024c>
   25670:	ldrb	r0, [r1]
   25674:	cmp	r0, #32
   25678:	bls	25f70 <main@@Base+0x1023c>
   2567c:	mov	sl, r1
   25680:	b	25f90 <main@@Base+0x1025c>
   25684:	movw	sl, #0
   25688:	movt	sl, #26418	; 0x6732
   2568c:	add	r0, sl, #65536	; 0x10000
   25690:	eor	r0, r8, r0
   25694:	ldr	r8, [sp, #16]
   25698:	orrs	r0, r0, r5
   2569c:	bne	256dc <main@@Base+0xf9a8>
   256a0:	ldr	r7, [sp, #24]
   256a4:	cmp	lr, #7
   256a8:	blt	256e0 <main@@Base+0xf9ac>
   256ac:	ldrb	r0, [r9, #22]
   256b0:	cmp	r0, #34	; 0x22
   256b4:	bne	256e0 <main@@Base+0xf9ac>
   256b8:	add	r1, r9, #23
   256bc:	sub	r0, r8, r1
   256c0:	cmp	r0, #2
   256c4:	blt	2575c <main@@Base+0xfa28>
   256c8:	ldrb	r0, [r1]
   256cc:	cmp	r0, #32
   256d0:	bls	2574c <main@@Base+0xfa18>
   256d4:	mov	r9, r1
   256d8:	b	25774 <main@@Base+0xfa40>
   256dc:	ldr	r7, [sp, #24]
   256e0:	mov	r0, r7
   256e4:	mov	r1, ip
   256e8:	b	25308 <main@@Base+0xf5d4>
   256ec:	mov	r0, r7
   256f0:	mov	r1, sl
   256f4:	mov	r2, r8
   256f8:	mov	r3, #21
   256fc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   25700:	mov	sl, r0
   25704:	ldr	r0, [r7, #20]
   25708:	cmp	r0, #0
   2570c:	bne	27e7c <main@@Base+0x12148>
   25710:	ldr	r0, [r7]
   25714:	bl	2de74 <flatcc_builder_end_table@@Base>
   25718:	cmp	r0, #0
   2571c:	beq	27e7c <main@@Base+0x12148>
   25720:	mov	r4, r0
   25724:	ldr	r0, [r7]
   25728:	mov	r1, #0
   2572c:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   25730:	cmp	r0, #0
   25734:	beq	24f40 <main@@Base+0xf20c>
   25738:	mov	r9, sl
   2573c:	movw	sl, #0
   25740:	str	r4, [r0]
   25744:	movt	sl, #26418	; 0x6732
   25748:	b	25314 <main@@Base+0xf5e0>
   2574c:	bne	2575c <main@@Base+0xfa28>
   25750:	ldrb	r0, [r9, #24]!
   25754:	cmp	r0, #32
   25758:	bhi	25774 <main@@Base+0xfa40>
   2575c:	mov	r0, r7
   25760:	mov	r2, r8
   25764:	mov	r4, ip
   25768:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2576c:	mov	ip, r4
   25770:	mov	r9, r0
   25774:	mov	r4, ip
   25778:	cmp	r9, r8
   2577c:	beq	257b0 <main@@Base+0xfa7c>
   25780:	ldrb	r0, [r9]
   25784:	cmp	r0, #58	; 0x3a
   25788:	bne	257b0 <main@@Base+0xfa7c>
   2578c:	add	r1, r9, #1
   25790:	sub	r0, r8, r1
   25794:	cmp	r0, #2
   25798:	blt	27318 <main@@Base+0x115e4>
   2579c:	ldrb	r0, [r1]
   257a0:	cmp	r0, #32
   257a4:	bls	27308 <main@@Base+0x115d4>
   257a8:	mov	r9, r1
   257ac:	b	27328 <main@@Base+0x115f4>
   257b0:	mov	r0, r7
   257b4:	mov	r1, r9
   257b8:	mov	r2, r8
   257bc:	mov	r3, #4
   257c0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   257c4:	b	27324 <main@@Base+0x115f0>
   257c8:	bne	257d8 <main@@Base+0xfaa4>
   257cc:	ldrb	r0, [r9, #2]!
   257d0:	cmp	r0, #32
   257d4:	bhi	257e8 <main@@Base+0xfab4>
   257d8:	mov	r0, r7
   257dc:	mov	r2, r8
   257e0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   257e4:	mov	r9, r0
   257e8:	cmp	r9, r8
   257ec:	mov	r2, r8
   257f0:	beq	2582c <main@@Base+0xfaf8>
   257f4:	ldrb	r0, [r9]
   257f8:	cmp	r0, #125	; 0x7d
   257fc:	bne	25828 <main@@Base+0xfaf4>
   25800:	add	r1, r9, #1
   25804:	sub	r0, r8, r1
   25808:	cmp	r0, #2
   2580c:	blt	27d4c <main@@Base+0x12018>
   25810:	ldrb	r0, [r1]
   25814:	cmp	r0, #32
   25818:	bhi	27408 <main@@Base+0x116d4>
   2581c:	bne	27d4c <main@@Base+0x12018>
   25820:	ldrb	r0, [r9, #2]!
   25824:	b	27d44 <main@@Base+0x12010>
   25828:	mov	r2, r9
   2582c:	cmp	r2, r8
   25830:	mov	sl, r8
   25834:	beq	25864 <main@@Base+0xfb30>
   25838:	ldrb	r0, [r2]
   2583c:	cmp	r0, #34	; 0x22
   25840:	bne	2584c <main@@Base+0xfb18>
   25844:	add	sl, r2, #1
   25848:	b	25864 <main@@Base+0xfb30>
   2584c:	mov	r1, r2
   25850:	mov	r0, r7
   25854:	mov	r2, r8
   25858:	mov	r3, #5
   2585c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   25860:	mov	sl, r0
   25864:	sub	r0, r8, sl
   25868:	mov	r1, #8
   2586c:	cmp	r0, #8
   25870:	movcs	r0, r1
   25874:	sub	r3, r0, #1
   25878:	cmp	r3, #7
   2587c:	bhi	25a58 <main@@Base+0xfd24>
   25880:	add	r4, pc, #32
   25884:	mov	r0, #0
   25888:	mov	ip, #0
   2588c:	mov	lr, #0
   25890:	mov	r6, #0
   25894:	mov	r2, #0
   25898:	mov	r5, #0
   2589c:	mov	r7, #0
   258a0:	mov	r1, #0
   258a4:	ldr	pc, [r4, r3, lsl #2]
   258a8:	andeq	r5, r2, ip, lsl #18
   258ac:	andeq	r5, r2, r4, lsl #18
   258b0:	strdeq	r5, [r2], -ip
   258b4:	strdeq	r5, [r2], -r4
   258b8:	andeq	r5, r2, r8, ror #17
   258bc:	ldrdeq	r5, [r2], -ip
   258c0:	andeq	r5, r2, ip, asr #17
   258c4:	andeq	r5, r2, r8, asr #17
   258c8:	ldrb	ip, [sl, #7]
   258cc:	ldrb	r1, [sl, #6]
   258d0:	mov	lr, r0
   258d4:	orr	r1, ip, r1, lsl #8
   258d8:	mov	r0, r1
   258dc:	ldrb	r1, [sl, #5]
   258e0:	mov	r6, lr
   258e4:	orr	r0, r0, r1, lsl #16
   258e8:	ldrb	r1, [sl, #4]
   258ec:	mov	r2, r6
   258f0:	orr	r0, r0, r1, lsl #24
   258f4:	ldrb	r1, [sl, #3]
   258f8:	orr	r5, r1, r2
   258fc:	ldrb	r1, [sl, #2]
   25900:	orr	r7, r5, r1, lsl #8
   25904:	ldrb	r1, [sl, #1]
   25908:	orr	r1, r7, r1, lsl #16
   2590c:	movw	r2, #25186	; 0x6262
   25910:	ldr	r7, [sp, #24]
   25914:	movt	r2, #24418	; 0x5f62
   25918:	eor	r0, r0, r2
   2591c:	ldrb	r2, [sl]
   25920:	orr	r1, r1, r2, lsl #24
   25924:	movw	r2, #24929	; 0x6161
   25928:	movt	r2, #24929	; 0x6161
   2592c:	eor	r1, r1, r2
   25930:	orrs	r0, r0, r1
   25934:	bne	25a58 <main@@Base+0xfd24>
   25938:	mov	r0, r8
   2593c:	add	r8, sl, #8
   25940:	sub	lr, r0, r8
   25944:	mov	r0, #8
   25948:	cmp	lr, #8
   2594c:	movcc	r0, lr
   25950:	sub	r6, r0, #1
   25954:	cmp	r6, #7
   25958:	bhi	25dc8 <main@@Base+0x10094>
   2595c:	add	r2, pc, #32
   25960:	mov	r1, #0
   25964:	mov	ip, #0
   25968:	mov	r9, #0
   2596c:	mov	r5, #0
   25970:	mov	r3, #0
   25974:	mov	r4, #0
   25978:	mov	r7, #0
   2597c:	mov	r0, #0
   25980:	ldr	pc, [r2, r6, lsl #2]
   25984:	andeq	r5, r2, r8, ror #19
   25988:	andeq	r5, r2, r0, ror #19
   2598c:	ldrdeq	r5, [r2], -r8
   25990:	ldrdeq	r5, [r2], -r0
   25994:	andeq	r5, r2, r4, asr #19
   25998:			; <UNDEFINED> instruction: 0x000259b8
   2599c:	andeq	r5, r2, r8, lsr #19
   259a0:	andeq	r5, r2, r4, lsr #19
   259a4:	ldrb	ip, [sl, #15]
   259a8:	ldrb	r0, [sl, #14]
   259ac:	mov	r9, r1
   259b0:	orr	r0, ip, r0, lsl #8
   259b4:	mov	r1, r0
   259b8:	ldrb	r0, [sl, #13]
   259bc:	mov	r5, r9
   259c0:	orr	r1, r1, r0, lsl #16
   259c4:	ldrb	r0, [sl, #12]
   259c8:	mov	r3, r5
   259cc:	orr	r1, r1, r0, lsl #24
   259d0:	ldrb	r0, [sl, #11]
   259d4:	orr	r4, r0, r3
   259d8:	ldrb	r0, [sl, #10]
   259dc:	orr	r7, r4, r0, lsl #8
   259e0:	ldrb	r0, [sl, #9]
   259e4:	orr	r0, r7, r0, lsl #16
   259e8:	movw	r3, #29440	; 0x7300
   259ec:	bic	r2, r1, #255	; 0xff
   259f0:	movt	r3, #25968	; 0x6570
   259f4:	eor	r2, r2, r3
   259f8:	ldrb	r3, [r8]
   259fc:	orr	r0, r0, r3, lsl #24
   25a00:	movw	r3, #29556	; 0x7374
   25a04:	movt	r3, #25183	; 0x625f
   25a08:	eor	r0, r0, r3
   25a0c:	orrs	r2, r2, r0
   25a10:	bne	25a64 <main@@Base+0xfd30>
   25a14:	ldr	r7, [sp, #24]
   25a18:	cmp	lr, #8
   25a1c:	blt	25dc8 <main@@Base+0x10094>
   25a20:	ldrb	r0, [sl, #15]
   25a24:	cmp	r0, #34	; 0x22
   25a28:	bne	25dc8 <main@@Base+0x10094>
   25a2c:	ldr	r4, [sp, #16]
   25a30:	add	r1, sl, #16
   25a34:	sub	r0, r4, r1
   25a38:	cmp	r0, #2
   25a3c:	blt	25ad0 <main@@Base+0xfd9c>
   25a40:	ldrb	r0, [r1]
   25a44:	cmp	r0, #32
   25a48:	bls	25abc <main@@Base+0xfd88>
   25a4c:	ldr	r4, [sp, #16]
   25a50:	mov	sl, r1
   25a54:	b	25ae0 <main@@Base+0xfdac>
   25a58:	mov	r0, r7
   25a5c:	mov	r1, sl
   25a60:	b	25dd4 <main@@Base+0x100a0>
   25a64:	movw	r2, #29791	; 0x745f
   25a68:	ldr	r7, [sp, #24]
   25a6c:	movt	r2, #24946	; 0x6172
   25a70:	eor	r1, r1, r2
   25a74:	orrs	r0, r1, r0
   25a78:	bne	25dc8 <main@@Base+0x10094>
   25a7c:	cmp	lr, #9
   25a80:	blt	25dc8 <main@@Base+0x10094>
   25a84:	ldrb	r0, [sl, #16]
   25a88:	cmp	r0, #34	; 0x22
   25a8c:	bne	25dc8 <main@@Base+0x10094>
   25a90:	ldr	r4, [sp, #16]
   25a94:	add	r1, sl, #17
   25a98:	sub	r0, r4, r1
   25a9c:	cmp	r0, #2
   25aa0:	blt	25b48 <main@@Base+0xfe14>
   25aa4:	ldrb	r0, [r1]
   25aa8:	cmp	r0, #32
   25aac:	bls	25b34 <main@@Base+0xfe00>
   25ab0:	ldr	r4, [sp, #16]
   25ab4:	mov	sl, r1
   25ab8:	b	25b58 <main@@Base+0xfe24>
   25abc:	ldr	r4, [sp, #16]
   25ac0:	bne	25ad0 <main@@Base+0xfd9c>
   25ac4:	ldrb	r0, [sl, #17]!
   25ac8:	cmp	r0, #32
   25acc:	bhi	25ae0 <main@@Base+0xfdac>
   25ad0:	mov	r0, r7
   25ad4:	mov	r2, r4
   25ad8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   25adc:	mov	sl, r0
   25ae0:	cmp	sl, r4
   25ae4:	beq	25b1c <main@@Base+0xfde8>
   25ae8:	ldrb	r0, [sl]
   25aec:	cmp	r0, #58	; 0x3a
   25af0:	bne	25b1c <main@@Base+0xfde8>
   25af4:	ldr	r0, [sp, #16]
   25af8:	add	r1, sl, #1
   25afc:	sub	r0, r0, r1
   25b00:	cmp	r0, #2
   25b04:	blt	25bc0 <main@@Base+0xfe8c>
   25b08:	ldrb	r0, [r1]
   25b0c:	cmp	r0, #32
   25b10:	bls	25bb0 <main@@Base+0xfe7c>
   25b14:	mov	sl, r1
   25b18:	b	25bd0 <main@@Base+0xfe9c>
   25b1c:	ldr	r2, [sp, #16]
   25b20:	mov	r0, r7
   25b24:	mov	r1, sl
   25b28:	mov	r3, #4
   25b2c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   25b30:	b	25bcc <main@@Base+0xfe98>
   25b34:	ldr	r4, [sp, #16]
   25b38:	bne	25b48 <main@@Base+0xfe14>
   25b3c:	ldrb	r0, [sl, #18]!
   25b40:	cmp	r0, #32
   25b44:	bhi	25b58 <main@@Base+0xfe24>
   25b48:	mov	r0, r7
   25b4c:	mov	r2, r4
   25b50:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   25b54:	mov	sl, r0
   25b58:	cmp	sl, r4
   25b5c:	beq	25b98 <main@@Base+0xfe64>
   25b60:	ldrb	r0, [sl]
   25b64:	cmp	r0, #58	; 0x3a
   25b68:	bne	25b98 <main@@Base+0xfe64>
   25b6c:	ldr	r0, [sp, #16]
   25b70:	add	r1, sl, #1
   25b74:	sub	r0, r0, r1
   25b78:	cmp	r0, #2
   25b7c:	blt	25d48 <main@@Base+0x10014>
   25b80:	ldrb	r0, [r1]
   25b84:	cmp	r0, #32
   25b88:	bls	25d34 <main@@Base+0x10000>
   25b8c:	ldr	r7, [sp, #24]
   25b90:	mov	sl, r1
   25b94:	b	25d58 <main@@Base+0x10024>
   25b98:	ldr	r2, [sp, #16]
   25b9c:	mov	r0, r7
   25ba0:	mov	r1, sl
   25ba4:	mov	r3, #4
   25ba8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   25bac:	b	25d54 <main@@Base+0x10020>
   25bb0:	bne	25bc0 <main@@Base+0xfe8c>
   25bb4:	ldrb	r0, [sl, #2]!
   25bb8:	cmp	r0, #32
   25bbc:	bhi	25bd0 <main@@Base+0xfe9c>
   25bc0:	ldr	r2, [sp, #16]
   25bc4:	mov	r0, r7
   25bc8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   25bcc:	mov	sl, r0
   25bd0:	cmp	r8, sl
   25bd4:	beq	25dc8 <main@@Base+0x10094>
   25bd8:	ldr	r8, [sp, #16]
   25bdc:	mov	r6, #0
   25be0:	str	r6, [fp, #-36]	; 0xffffffdc
   25be4:	str	r6, [fp, #-40]	; 0xffffffd8
   25be8:	str	r6, [sp, #36]	; 0x24
   25bec:	str	r6, [sp, #32]
   25bf0:	str	r6, [sp, #44]	; 0x2c
   25bf4:	cmp	sl, r8
   25bf8:	beq	25c58 <main@@Base+0xff24>
   25bfc:	sub	r0, fp, #40	; 0x28
   25c00:	mov	r1, sl
   25c04:	mov	r2, r8
   25c08:	add	r3, sp, #44	; 0x2c
   25c0c:	str	r0, [sp]
   25c10:	mov	r0, r7
   25c14:	bl	3314c <flatcc_json_parser_integer@@Base>
   25c18:	cmp	r0, sl
   25c1c:	beq	25c64 <main@@Base+0xff30>
   25c20:	mov	r9, r0
   25c24:	ldr	r0, [sp, #44]	; 0x2c
   25c28:	ldr	r6, [fp, #-40]	; 0xffffffd8
   25c2c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   25c30:	cmp	r0, #0
   25c34:	beq	25c74 <main@@Base+0xff40>
   25c38:	subs	r0, r6, #1
   25c3c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   25c40:	bcc	25ca0 <main@@Base+0xff6c>
   25c44:	mov	r0, r7
   25c48:	mov	r1, r9
   25c4c:	mov	r2, r8
   25c50:	mov	r3, #8
   25c54:	b	25c8c <main@@Base+0xff58>
   25c58:	mov	r5, #0
   25c5c:	mov	r9, r8
   25c60:	b	25cb0 <main@@Base+0xff7c>
   25c64:	mov	r6, #0
   25c68:	mov	r5, #0
   25c6c:	mov	r9, sl
   25c70:	b	25cb0 <main@@Base+0xff7c>
   25c74:	cmn	r5, #1
   25c78:	bgt	25ca8 <main@@Base+0xff74>
   25c7c:	mov	r0, r7
   25c80:	mov	r1, r9
   25c84:	mov	r2, r8
   25c88:	mov	r3, #7
   25c8c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   25c90:	mov	r9, r0
   25c94:	mov	r6, #0
   25c98:	mov	r5, #0
   25c9c:	b	25cb0 <main@@Base+0xff7c>
   25ca0:	rsbs	r6, r6, #0
   25ca4:	rsc	r5, r5, #0
   25ca8:	str	r6, [sp, #32]
   25cac:	str	r5, [sp, #36]	; 0x24
   25cb0:	cmp	sl, r9
   25cb4:	bne	25cf0 <main@@Base+0xffbc>
   25cb8:	movw	r3, #33320	; 0x8228
   25cbc:	add	r0, sp, #32
   25cc0:	mov	r1, sl
   25cc4:	mov	r2, r8
   25cc8:	movt	r3, #5
   25ccc:	str	r0, [sp]
   25cd0:	mov	r0, r7
   25cd4:	bl	233f0 <main@@Base+0xd6bc>
   25cd8:	mov	r9, r0
   25cdc:	cmp	r0, sl
   25ce0:	cmpne	r9, r8
   25ce4:	beq	27e88 <main@@Base+0x12154>
   25ce8:	ldr	r6, [sp, #32]
   25cec:	ldr	r5, [sp, #36]	; 0x24
   25cf0:	movw	sl, #0
   25cf4:	orrs	r0, r6, r5
   25cf8:	movt	sl, #26418	; 0x6732
   25cfc:	bne	25d0c <main@@Base+0xffd8>
   25d00:	ldrb	r0, [r7, #8]
   25d04:	tst	r0, #2
   25d08:	beq	25de8 <main@@Base+0x100b4>
   25d0c:	ldr	r0, [r7]
   25d10:	mov	r1, #0
   25d14:	mov	r2, #8
   25d18:	mov	r3, #8
   25d1c:	bl	2e760 <flatcc_builder_table_add@@Base>
   25d20:	cmp	r0, #0
   25d24:	beq	27e88 <main@@Base+0x12154>
   25d28:	str	r6, [r0]
   25d2c:	str	r5, [r0, #4]
   25d30:	b	25de8 <main@@Base+0x100b4>
   25d34:	ldr	r7, [sp, #24]
   25d38:	bne	25d48 <main@@Base+0x10014>
   25d3c:	ldrb	r0, [sl, #2]!
   25d40:	cmp	r0, #32
   25d44:	bhi	25d58 <main@@Base+0x10024>
   25d48:	ldr	r2, [sp, #16]
   25d4c:	mov	r0, r7
   25d50:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   25d54:	mov	sl, r0
   25d58:	cmp	r8, sl
   25d5c:	beq	25dc8 <main@@Base+0x10094>
   25d60:	ldr	r8, [sp, #16]
   25d64:	mov	r5, #0
   25d68:	str	r5, [fp, #-36]	; 0xffffffdc
   25d6c:	str	r5, [fp, #-40]	; 0xffffffd8
   25d70:	str	r5, [sp, #44]	; 0x2c
   25d74:	str	r5, [sp, #32]
   25d78:	cmp	sl, r8
   25d7c:	beq	25ea0 <main@@Base+0x1016c>
   25d80:	sub	r0, fp, #40	; 0x28
   25d84:	mov	r1, sl
   25d88:	mov	r2, r8
   25d8c:	add	r3, sp, #32
   25d90:	str	r0, [sp]
   25d94:	mov	r0, r7
   25d98:	bl	3314c <flatcc_json_parser_integer@@Base>
   25d9c:	cmp	r0, sl
   25da0:	beq	25ea8 <main@@Base+0x10174>
   25da4:	mov	r9, r0
   25da8:	ldr	r0, [sp, #32]
   25dac:	cmp	r0, #0
   25db0:	beq	25eb0 <main@@Base+0x1017c>
   25db4:	mov	r0, r7
   25db8:	mov	r1, r9
   25dbc:	mov	r2, r8
   25dc0:	mov	r3, #8
   25dc4:	b	25ed4 <main@@Base+0x101a0>
   25dc8:	mov	r1, r8
   25dcc:	ldr	r8, [sp, #16]
   25dd0:	mov	r0, r7
   25dd4:	mov	r2, r8
   25dd8:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   25ddc:	movw	sl, #0
   25de0:	mov	r9, r0
   25de4:	movt	sl, #26418	; 0x6732
   25de8:	sub	r0, r8, r9
   25dec:	cmp	r0, #2
   25df0:	blt	25e1c <main@@Base+0x100e8>
   25df4:	ldrb	r0, [r9]
   25df8:	cmp	r0, #32
   25dfc:	bls	25e08 <main@@Base+0x100d4>
   25e00:	mov	r2, r9
   25e04:	b	25e30 <main@@Base+0x100fc>
   25e08:	bne	25e1c <main@@Base+0x100e8>
   25e0c:	mov	r2, r9
   25e10:	ldrb	r0, [r2, #1]!
   25e14:	cmp	r0, #32
   25e18:	bhi	25e30 <main@@Base+0x100fc>
   25e1c:	mov	r0, r7
   25e20:	mov	r1, r9
   25e24:	mov	r2, r8
   25e28:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   25e2c:	mov	r2, r0
   25e30:	cmp	r2, r8
   25e34:	beq	273dc <main@@Base+0x116a8>
   25e38:	ldrb	r0, [r2]
   25e3c:	cmp	r0, #44	; 0x2c
   25e40:	bne	273e4 <main@@Base+0x116b0>
   25e44:	add	r1, r2, #1
   25e48:	sub	r0, r8, r1
   25e4c:	cmp	r0, #2
   25e50:	blt	25e78 <main@@Base+0x10144>
   25e54:	ldrb	r0, [r1]
   25e58:	cmp	r0, #32
   25e5c:	bls	25e68 <main@@Base+0x10134>
   25e60:	mov	r2, r1
   25e64:	b	25e88 <main@@Base+0x10154>
   25e68:	bne	25e78 <main@@Base+0x10144>
   25e6c:	ldrb	r0, [r2, #2]!
   25e70:	cmp	r0, #32
   25e74:	bhi	25e88 <main@@Base+0x10154>
   25e78:	mov	r0, r7
   25e7c:	mov	r2, r8
   25e80:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   25e84:	mov	r2, r0
   25e88:	cmp	r2, r8
   25e8c:	beq	27410 <main@@Base+0x116dc>
   25e90:	ldrb	r0, [r2]
   25e94:	cmp	r0, #125	; 0x7d
   25e98:	bne	2582c <main@@Base+0xfaf8>
   25e9c:	b	273ec <main@@Base+0x116b8>
   25ea0:	mov	r9, r8
   25ea4:	b	25edc <main@@Base+0x101a8>
   25ea8:	mov	r9, sl
   25eac:	b	25edc <main@@Base+0x101a8>
   25eb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25eb4:	cmp	r0, #0
   25eb8:	beq	25f5c <main@@Base+0x10228>
   25ebc:	ldr	r7, [sp, #24]
   25ec0:	ldr	r8, [sp, #16]
   25ec4:	mov	r1, r9
   25ec8:	mov	r3, #7
   25ecc:	mov	r0, r7
   25ed0:	mov	r2, r8
   25ed4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   25ed8:	mov	r9, r0
   25edc:	cmp	sl, r9
   25ee0:	bne	25f1c <main@@Base+0x101e8>
   25ee4:	movw	r3, #33332	; 0x8234
   25ee8:	add	r0, sp, #44	; 0x2c
   25eec:	mov	r1, sl
   25ef0:	mov	r2, r8
   25ef4:	movt	r3, #5
   25ef8:	str	r0, [sp]
   25efc:	mov	r0, r7
   25f00:	bl	235d8 <main@@Base+0xd8a4>
   25f04:	mov	r9, r0
   25f08:	cmp	r0, sl
   25f0c:	cmpne	r9, r8
   25f10:	beq	27e88 <main@@Base+0x12154>
   25f14:	ldr	r5, [sp, #44]	; 0x2c
   25f18:	ldr	r7, [sp, #24]
   25f1c:	movw	sl, #0
   25f20:	cmp	r5, #0
   25f24:	movt	sl, #26418	; 0x6732
   25f28:	bne	25f38 <main@@Base+0x10204>
   25f2c:	ldrb	r0, [r7, #8]
   25f30:	tst	r0, #2
   25f34:	beq	25de8 <main@@Base+0x100b4>
   25f38:	ldr	r0, [r7]
   25f3c:	mov	r1, #1
   25f40:	mov	r2, #4
   25f44:	mov	r3, #4
   25f48:	bl	2e760 <flatcc_builder_table_add@@Base>
   25f4c:	cmp	r0, #0
   25f50:	beq	27e88 <main@@Base+0x12154>
   25f54:	str	r5, [r0]
   25f58:	b	25de8 <main@@Base+0x100b4>
   25f5c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   25f60:	ldr	r8, [sp, #16]
   25f64:	ldr	r7, [sp, #24]
   25f68:	str	r5, [sp, #44]	; 0x2c
   25f6c:	b	25edc <main@@Base+0x101a8>
   25f70:	bne	25f80 <main@@Base+0x1024c>
   25f74:	ldrb	r0, [sl, #2]!
   25f78:	cmp	r0, #32
   25f7c:	bhi	25f90 <main@@Base+0x1025c>
   25f80:	mov	r0, r7
   25f84:	mov	r2, r8
   25f88:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   25f8c:	mov	sl, r0
   25f90:	cmp	sl, r8
   25f94:	mov	r2, r8
   25f98:	beq	25fd4 <main@@Base+0x102a0>
   25f9c:	ldrb	r0, [sl]
   25fa0:	cmp	r0, #125	; 0x7d
   25fa4:	bne	25fd0 <main@@Base+0x1029c>
   25fa8:	add	r1, sl, #1
   25fac:	sub	r0, r8, r1
   25fb0:	cmp	r0, #2
   25fb4:	blt	27d84 <main@@Base+0x12050>
   25fb8:	ldrb	r0, [r1]
   25fbc:	cmp	r0, #32
   25fc0:	bhi	27448 <main@@Base+0x11714>
   25fc4:	bne	27d84 <main@@Base+0x12050>
   25fc8:	ldrb	r0, [sl, #2]!
   25fcc:	b	27d7c <main@@Base+0x12048>
   25fd0:	mov	r2, sl
   25fd4:	cmp	r2, r8
   25fd8:	mov	r4, r8
   25fdc:	beq	26014 <main@@Base+0x102e0>
   25fe0:	ldrb	r0, [r2]
   25fe4:	cmp	r0, #34	; 0x22
   25fe8:	bne	25ff8 <main@@Base+0x102c4>
   25fec:	ldr	r4, [sp, #16]
   25ff0:	add	r8, r2, #1
   25ff4:	b	26014 <main@@Base+0x102e0>
   25ff8:	ldr	r4, [sp, #16]
   25ffc:	mov	r1, r2
   26000:	mov	r0, r7
   26004:	mov	r3, #5
   26008:	mov	r2, r4
   2600c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   26010:	mov	r8, r0
   26014:	sub	r9, r4, r8
   26018:	mov	r0, #8
   2601c:	cmp	r9, #8
   26020:	movcc	r0, r9
   26024:	sub	r3, r0, #1
   26028:	cmp	r3, #7
   2602c:	bhi	26e98 <main@@Base+0x11164>
   26030:	add	r6, pc, #32
   26034:	mov	r0, #0
   26038:	mov	ip, #0
   2603c:	mov	lr, #0
   26040:	mov	r5, #0
   26044:	mov	r2, #0
   26048:	mov	r4, #0
   2604c:	mov	r7, #0
   26050:	mov	r1, #0
   26054:	ldr	pc, [r6, r3, lsl #2]
   26058:	strheq	r6, [r2], -ip
   2605c:	strheq	r6, [r2], -r4
   26060:	andeq	r6, r2, ip, lsr #1
   26064:	andeq	r6, r2, r4, lsr #1
   26068:	muleq	r2, r8, r0
   2606c:	andeq	r6, r2, ip, lsl #1
   26070:	andeq	r6, r2, ip, ror r0
   26074:	andeq	r6, r2, r8, ror r0
   26078:	ldrb	ip, [r8, #7]
   2607c:	ldrb	r1, [r8, #6]
   26080:	mov	lr, r0
   26084:	orr	r1, ip, r1, lsl #8
   26088:	mov	r0, r1
   2608c:	ldrb	r1, [r8, #5]
   26090:	mov	r5, lr
   26094:	orr	r0, r0, r1, lsl #16
   26098:	ldrb	r1, [r8, #4]
   2609c:	mov	r2, r5
   260a0:	orr	r0, r0, r1, lsl #24
   260a4:	ldrb	r1, [r8, #3]
   260a8:	orr	r4, r1, r2
   260ac:	ldrb	r1, [r8, #2]
   260b0:	orr	r7, r4, r1, lsl #8
   260b4:	ldrb	r1, [r8, #1]
   260b8:	orr	r1, r7, r1, lsl #16
   260bc:	ldrb	r2, [r8]
   260c0:	orr	r4, r1, r2, lsl #24
   260c4:	movw	r1, #25442	; 0x6362
   260c8:	movt	r1, #25443	; 0x6363
   260cc:	cmp	r4, r1
   260d0:	bhi	2616c <main@@Base+0x10438>
   260d4:	movw	r1, #13108	; 0x3334
   260d8:	movw	r2, #25186	; 0x6262
   260dc:	movt	r1, #12594	; 0x3132
   260e0:	movt	r2, #25186	; 0x6262
   260e4:	eor	r5, r0, r1
   260e8:	movw	r1, #24929	; 0x6161
   260ec:	movt	r1, #24929	; 0x6161
   260f0:	eor	r0, r4, r1
   260f4:	orrs	r0, r5, r0
   260f8:	bne	261d0 <main@@Base+0x1049c>
   260fc:	ldr	r0, [sp, #16]
   26100:	add	r7, r8, #8
   26104:	mov	r1, #8
   26108:	sub	r0, r0, r7
   2610c:	cmp	r0, #8
   26110:	movcc	r1, r0
   26114:	sub	r1, r1, #1
   26118:	cmp	r1, #7
   2611c:	bhi	2716c <main@@Base+0x11438>
   26120:	ldrb	r1, [r7]
   26124:	cmp	r1, #53	; 0x35
   26128:	bne	2716c <main@@Base+0x11438>
   2612c:	cmp	r0, #2
   26130:	blt	2716c <main@@Base+0x11438>
   26134:	ldrb	r0, [r8, #9]
   26138:	cmp	r0, #34	; 0x22
   2613c:	bne	2716c <main@@Base+0x11438>
   26140:	ldr	r4, [sp, #16]
   26144:	add	r1, r8, #10
   26148:	sub	r0, r4, r1
   2614c:	cmp	r0, #2
   26150:	blt	265f4 <main@@Base+0x108c0>
   26154:	ldrb	r0, [r1]
   26158:	cmp	r0, #32
   2615c:	bls	265e0 <main@@Base+0x108ac>
   26160:	ldr	r4, [sp, #16]
   26164:	mov	r8, r1
   26168:	b	26604 <main@@Base+0x108d0>
   2616c:	movw	r1, #13108	; 0x3334
   26170:	movt	r1, #12594	; 0x3132
   26174:	eor	r5, r0, r1
   26178:	ldr	r0, [sp, #12]
   2617c:	eor	r0, r4, r0
   26180:	orrs	r0, r5, r0
   26184:	bne	26224 <main@@Base+0x104f0>
   26188:	cmp	r9, #9
   2618c:	mov	r7, r8
   26190:	blt	2641c <main@@Base+0x106e8>
   26194:	ldrb	r0, [r8, #8]
   26198:	mov	r7, r8
   2619c:	cmp	r0, #34	; 0x22
   261a0:	bne	2641c <main@@Base+0x106e8>
   261a4:	ldr	r4, [sp, #16]
   261a8:	add	r1, r8, #9
   261ac:	sub	r0, r4, r1
   261b0:	cmp	r0, #2
   261b4:	blt	26298 <main@@Base+0x10564>
   261b8:	ldrb	r0, [r1]
   261bc:	cmp	r0, #32
   261c0:	bls	26280 <main@@Base+0x1054c>
   261c4:	ldr	r4, [sp, #16]
   261c8:	mov	r7, r1
   261cc:	b	262a8 <main@@Base+0x10574>
   261d0:	ldr	r7, [sp, #24]
   261d4:	teq	r4, r1
   261d8:	bne	266c0 <main@@Base+0x1098c>
   261dc:	cmp	r9, #5
   261e0:	mov	r1, r8
   261e4:	blt	26680 <main@@Base+0x1094c>
   261e8:	ldrb	r0, [r8, #4]
   261ec:	mov	r1, r8
   261f0:	cmp	r0, #34	; 0x22
   261f4:	bne	26680 <main@@Base+0x1094c>
   261f8:	ldr	r6, [sp, #16]
   261fc:	add	r2, r8, #5
   26200:	sub	r0, r6, r2
   26204:	cmp	r0, #2
   26208:	blt	26314 <main@@Base+0x105e0>
   2620c:	ldrb	r0, [r2]
   26210:	cmp	r0, #32
   26214:	bls	262fc <main@@Base+0x105c8>
   26218:	ldr	r6, [sp, #16]
   2621c:	mov	r1, r2
   26220:	b	26328 <main@@Base+0x105f4>
   26224:	movw	r0, #25443	; 0x6363
   26228:	ldr	r7, [sp, #24]
   2622c:	movt	r0, #25443	; 0x6363
   26230:	teq	r4, r0
   26234:	bne	268bc <main@@Base+0x10b88>
   26238:	cmp	r9, #5
   2623c:	mov	r1, r8
   26240:	blt	26884 <main@@Base+0x10b50>
   26244:	ldrb	r0, [r8, #4]
   26248:	mov	r1, r8
   2624c:	cmp	r0, #34	; 0x22
   26250:	bne	26884 <main@@Base+0x10b50>
   26254:	ldr	r6, [sp, #16]
   26258:	add	r2, r8, #5
   2625c:	sub	r0, r6, r2
   26260:	cmp	r0, #2
   26264:	blt	26394 <main@@Base+0x10660>
   26268:	ldrb	r0, [r2]
   2626c:	cmp	r0, #32
   26270:	bls	2637c <main@@Base+0x10648>
   26274:	ldr	r6, [sp, #16]
   26278:	mov	r1, r2
   2627c:	b	263a8 <main@@Base+0x10674>
   26280:	ldr	r4, [sp, #16]
   26284:	bne	26298 <main@@Base+0x10564>
   26288:	mov	r7, r8
   2628c:	ldrb	r0, [r7, #10]!
   26290:	cmp	r0, #32
   26294:	bhi	262a8 <main@@Base+0x10574>
   26298:	ldr	r0, [sp, #24]
   2629c:	mov	r2, r4
   262a0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   262a4:	mov	r7, r0
   262a8:	cmp	r7, r4
   262ac:	beq	262e4 <main@@Base+0x105b0>
   262b0:	ldrb	r0, [r7]
   262b4:	cmp	r0, #58	; 0x3a
   262b8:	bne	262e4 <main@@Base+0x105b0>
   262bc:	ldr	r0, [sp, #16]
   262c0:	add	r1, r7, #1
   262c4:	sub	r0, r0, r1
   262c8:	cmp	r0, #2
   262cc:	blt	2640c <main@@Base+0x106d8>
   262d0:	ldrb	r0, [r1]
   262d4:	cmp	r0, #32
   262d8:	bls	263fc <main@@Base+0x106c8>
   262dc:	mov	r7, r1
   262e0:	b	2641c <main@@Base+0x106e8>
   262e4:	ldr	r0, [sp, #24]
   262e8:	ldr	r2, [sp, #16]
   262ec:	mov	r1, r7
   262f0:	mov	r3, #4
   262f4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   262f8:	b	26418 <main@@Base+0x106e4>
   262fc:	ldr	r6, [sp, #16]
   26300:	bne	26314 <main@@Base+0x105e0>
   26304:	mov	r1, r8
   26308:	ldrb	r0, [r1, #6]!
   2630c:	cmp	r0, #32
   26310:	bhi	26328 <main@@Base+0x105f4>
   26314:	mov	r1, r2
   26318:	mov	r0, r7
   2631c:	mov	r2, r6
   26320:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26324:	mov	r1, r0
   26328:	cmp	r1, r6
   2632c:	beq	26368 <main@@Base+0x10634>
   26330:	ldrb	r0, [r1]
   26334:	cmp	r0, #58	; 0x3a
   26338:	bne	26368 <main@@Base+0x10634>
   2633c:	ldr	r0, [sp, #16]
   26340:	add	r2, r1, #1
   26344:	sub	r0, r0, r2
   26348:	cmp	r0, #2
   2634c:	blt	2666c <main@@Base+0x10938>
   26350:	ldrb	r0, [r2]
   26354:	cmp	r0, #32
   26358:	bls	26658 <main@@Base+0x10924>
   2635c:	ldr	r7, [sp, #24]
   26360:	mov	r1, r2
   26364:	b	26680 <main@@Base+0x1094c>
   26368:	ldr	r2, [sp, #16]
   2636c:	mov	r0, r7
   26370:	mov	r3, #4
   26374:	bl	3133c <flatcc_json_parser_set_error@@Base>
   26378:	b	2667c <main@@Base+0x10948>
   2637c:	ldr	r6, [sp, #16]
   26380:	bne	26394 <main@@Base+0x10660>
   26384:	mov	r1, r8
   26388:	ldrb	r0, [r1, #6]!
   2638c:	cmp	r0, #32
   26390:	bhi	263a8 <main@@Base+0x10674>
   26394:	mov	r1, r2
   26398:	mov	r0, r7
   2639c:	mov	r2, r6
   263a0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   263a4:	mov	r1, r0
   263a8:	cmp	r1, r6
   263ac:	beq	263e8 <main@@Base+0x106b4>
   263b0:	ldrb	r0, [r1]
   263b4:	cmp	r0, #58	; 0x3a
   263b8:	bne	263e8 <main@@Base+0x106b4>
   263bc:	ldr	r0, [sp, #16]
   263c0:	add	r2, r1, #1
   263c4:	sub	r0, r0, r2
   263c8:	cmp	r0, #2
   263cc:	blt	26870 <main@@Base+0x10b3c>
   263d0:	ldrb	r0, [r2]
   263d4:	cmp	r0, #32
   263d8:	bls	2685c <main@@Base+0x10b28>
   263dc:	ldr	r7, [sp, #24]
   263e0:	mov	r1, r2
   263e4:	b	26884 <main@@Base+0x10b50>
   263e8:	ldr	r2, [sp, #16]
   263ec:	mov	r0, r7
   263f0:	mov	r3, #4
   263f4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   263f8:	b	26880 <main@@Base+0x10b4c>
   263fc:	bne	2640c <main@@Base+0x106d8>
   26400:	ldrb	r0, [r7, #2]!
   26404:	cmp	r0, #32
   26408:	bhi	2641c <main@@Base+0x106e8>
   2640c:	ldr	r0, [sp, #24]
   26410:	ldr	r2, [sp, #16]
   26414:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26418:	mov	r7, r0
   2641c:	cmp	r8, r7
   26420:	beq	264a4 <main@@Base+0x10770>
   26424:	ldr	r8, [sp, #16]
   26428:	mov	r4, #0
   2642c:	str	r4, [fp, #-36]	; 0xffffffdc
   26430:	str	r4, [fp, #-40]	; 0xffffffd8
   26434:	str	r4, [sp, #36]	; 0x24
   26438:	str	r4, [sp, #32]
   2643c:	str	r4, [sp, #44]	; 0x2c
   26440:	cmp	r7, r8
   26444:	beq	26510 <main@@Base+0x107dc>
   26448:	sub	r0, fp, #40	; 0x28
   2644c:	mov	r1, r7
   26450:	mov	r2, r8
   26454:	add	r3, sp, #44	; 0x2c
   26458:	str	r0, [sp]
   2645c:	ldr	r0, [sp, #24]
   26460:	bl	3314c <flatcc_json_parser_integer@@Base>
   26464:	cmp	r0, r7
   26468:	beq	2651c <main@@Base+0x107e8>
   2646c:	mov	sl, r0
   26470:	ldr	r0, [sp, #44]	; 0x2c
   26474:	ldr	r4, [fp, #-40]	; 0xffffffd8
   26478:	ldr	r5, [fp, #-36]	; 0xffffffdc
   2647c:	cmp	r0, #0
   26480:	beq	2652c <main@@Base+0x107f8>
   26484:	subs	r0, r4, #1
   26488:	sbcs	r0, r5, #-2147483648	; 0x80000000
   2648c:	bcc	26558 <main@@Base+0x10824>
   26490:	ldr	r0, [sp, #24]
   26494:	mov	r1, sl
   26498:	mov	r2, r8
   2649c:	mov	r3, #8
   264a0:	b	26544 <main@@Base+0x10810>
   264a4:	ldr	r0, [sp, #16]
   264a8:	add	r7, r8, #8
   264ac:	mov	r1, #8
   264b0:	sub	r0, r0, r7
   264b4:	cmp	r0, #8
   264b8:	movcc	r1, r0
   264bc:	sub	r1, r1, #1
   264c0:	cmp	r1, #7
   264c4:	bhi	2716c <main@@Base+0x11438>
   264c8:	ldrb	r1, [r7]
   264cc:	cmp	r1, #53	; 0x35
   264d0:	bne	2716c <main@@Base+0x11438>
   264d4:	cmp	r0, #2
   264d8:	blt	2716c <main@@Base+0x11438>
   264dc:	ldrb	r0, [r8, #9]
   264e0:	cmp	r0, #34	; 0x22
   264e4:	bne	2716c <main@@Base+0x11438>
   264e8:	ldr	r0, [sp, #16]
   264ec:	add	r1, r8, #10
   264f0:	sub	r0, r0, r1
   264f4:	cmp	r0, #2
   264f8:	blt	26cf4 <main@@Base+0x10fc0>
   264fc:	ldrb	r0, [r1]
   26500:	cmp	r0, #32
   26504:	bls	26ce4 <main@@Base+0x10fb0>
   26508:	mov	r8, r1
   2650c:	b	26d04 <main@@Base+0x10fd0>
   26510:	mov	r5, #0
   26514:	mov	sl, r8
   26518:	b	26568 <main@@Base+0x10834>
   2651c:	mov	r4, #0
   26520:	mov	r5, #0
   26524:	mov	sl, r7
   26528:	b	26568 <main@@Base+0x10834>
   2652c:	cmn	r5, #1
   26530:	bgt	26560 <main@@Base+0x1082c>
   26534:	ldr	r0, [sp, #24]
   26538:	mov	r1, sl
   2653c:	mov	r2, r8
   26540:	mov	r3, #7
   26544:	bl	3133c <flatcc_json_parser_set_error@@Base>
   26548:	mov	sl, r0
   2654c:	mov	r4, #0
   26550:	mov	r5, #0
   26554:	b	26568 <main@@Base+0x10834>
   26558:	rsbs	r4, r4, #0
   2655c:	rsc	r5, r5, #0
   26560:	str	r4, [sp, #32]
   26564:	str	r5, [sp, #36]	; 0x24
   26568:	cmp	r7, sl
   2656c:	bne	265a8 <main@@Base+0x10874>
   26570:	add	r0, sp, #32
   26574:	movw	r3, #33368	; 0x8258
   26578:	mov	r1, r7
   2657c:	mov	r2, r8
   26580:	str	r0, [sp]
   26584:	ldr	r0, [sp, #24]
   26588:	movt	r3, #5
   2658c:	bl	233f0 <main@@Base+0xd6bc>
   26590:	mov	sl, r0
   26594:	cmp	r0, r7
   26598:	cmpne	sl, r8
   2659c:	beq	27e78 <main@@Base+0x12144>
   265a0:	ldr	r4, [sp, #32]
   265a4:	ldr	r5, [sp, #36]	; 0x24
   265a8:	ldr	r7, [sp, #24]
   265ac:	orrs	r0, r4, r5
   265b0:	bne	265c0 <main@@Base+0x1088c>
   265b4:	ldrb	r0, [r7, #8]
   265b8:	tst	r0, #2
   265bc:	beq	27188 <main@@Base+0x11454>
   265c0:	ldr	r0, [r7]
   265c4:	mov	r1, #5
   265c8:	mov	r2, #8
   265cc:	mov	r3, #8
   265d0:	bl	2e760 <flatcc_builder_table_add@@Base>
   265d4:	cmp	r0, #0
   265d8:	bne	26cdc <main@@Base+0x10fa8>
   265dc:	b	27e78 <main@@Base+0x12144>
   265e0:	ldr	r4, [sp, #16]
   265e4:	bne	265f4 <main@@Base+0x108c0>
   265e8:	ldrb	r0, [r8, #11]!
   265ec:	cmp	r0, #32
   265f0:	bhi	26604 <main@@Base+0x108d0>
   265f4:	ldr	r0, [sp, #24]
   265f8:	mov	r2, r4
   265fc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26600:	mov	r8, r0
   26604:	cmp	r8, r4
   26608:	beq	26640 <main@@Base+0x1090c>
   2660c:	ldrb	r0, [r8]
   26610:	cmp	r0, #58	; 0x3a
   26614:	bne	26640 <main@@Base+0x1090c>
   26618:	ldr	r0, [sp, #16]
   2661c:	add	r1, r8, #1
   26620:	sub	r0, r0, r1
   26624:	cmp	r0, #2
   26628:	blt	26d6c <main@@Base+0x11038>
   2662c:	ldrb	r0, [r1]
   26630:	cmp	r0, #32
   26634:	bls	26d5c <main@@Base+0x11028>
   26638:	mov	r8, r1
   2663c:	b	26d7c <main@@Base+0x11048>
   26640:	ldr	r0, [sp, #24]
   26644:	ldr	r2, [sp, #16]
   26648:	mov	r1, r8
   2664c:	mov	r3, #4
   26650:	bl	3133c <flatcc_json_parser_set_error@@Base>
   26654:	b	26d78 <main@@Base+0x11044>
   26658:	ldr	r7, [sp, #24]
   2665c:	bne	2666c <main@@Base+0x10938>
   26660:	ldrb	r0, [r1, #2]!
   26664:	cmp	r0, #32
   26668:	bhi	26680 <main@@Base+0x1094c>
   2666c:	mov	r1, r2
   26670:	ldr	r2, [sp, #16]
   26674:	mov	r0, r7
   26678:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2667c:	mov	r1, r0
   26680:	movw	r2, #25186	; 0x6262
   26684:	cmp	r8, r1
   26688:	movt	r2, #25186	; 0x6262
   2668c:	beq	266c0 <main@@Base+0x1098c>
   26690:	ldr	r8, [sp, #16]
   26694:	mov	r0, r7
   26698:	add	r3, sp, #28
   2669c:	mov	r2, r8
   266a0:	bl	33678 <flatcc_json_parser_build_string@@Base>
   266a4:	mov	sl, r0
   266a8:	ldr	r0, [sp, #28]
   266ac:	cmp	r0, #0
   266b0:	beq	27e7c <main@@Base+0x12148>
   266b4:	ldr	r0, [r7]
   266b8:	mov	r1, #0
   266bc:	b	26e80 <main@@Base+0x1114c>
   266c0:	eor	r0, r4, r2
   266c4:	orrs	r0, r5, r0
   266c8:	bne	26714 <main@@Base+0x109e0>
   266cc:	cmp	r9, #9
   266d0:	mov	r7, r8
   266d4:	blt	269b0 <main@@Base+0x10c7c>
   266d8:	ldrb	r0, [r8, #8]
   266dc:	mov	r7, r8
   266e0:	cmp	r0, #34	; 0x22
   266e4:	bne	269b0 <main@@Base+0x10c7c>
   266e8:	ldr	r4, [sp, #16]
   266ec:	add	r1, r8, #9
   266f0:	sub	r0, r4, r1
   266f4:	cmp	r0, #2
   266f8:	blt	26778 <main@@Base+0x10a44>
   266fc:	ldrb	r0, [r1]
   26700:	cmp	r0, #32
   26704:	bls	26760 <main@@Base+0x10a2c>
   26708:	ldr	r4, [sp, #16]
   2670c:	mov	r7, r1
   26710:	b	26788 <main@@Base+0x10a54>
   26714:	teq	r4, r2
   26718:	bne	26e98 <main@@Base+0x11164>
   2671c:	cmp	r9, #5
   26720:	mov	r1, r8
   26724:	blt	26e4c <main@@Base+0x11118>
   26728:	ldrb	r0, [r8, #4]
   2672c:	mov	r1, r8
   26730:	cmp	r0, #34	; 0x22
   26734:	bne	26e4c <main@@Base+0x11118>
   26738:	ldr	r0, [sp, #16]
   2673c:	add	r2, r8, #5
   26740:	sub	r0, r0, r2
   26744:	cmp	r0, #2
   26748:	blt	267f0 <main@@Base+0x10abc>
   2674c:	ldrb	r0, [r2]
   26750:	cmp	r0, #32
   26754:	bls	267dc <main@@Base+0x10aa8>
   26758:	mov	r1, r2
   2675c:	b	26804 <main@@Base+0x10ad0>
   26760:	ldr	r4, [sp, #16]
   26764:	bne	26778 <main@@Base+0x10a44>
   26768:	mov	r7, r8
   2676c:	ldrb	r0, [r7, #10]!
   26770:	cmp	r0, #32
   26774:	bhi	26788 <main@@Base+0x10a54>
   26778:	ldr	r0, [sp, #24]
   2677c:	mov	r2, r4
   26780:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26784:	mov	r7, r0
   26788:	cmp	r7, r4
   2678c:	beq	267c4 <main@@Base+0x10a90>
   26790:	ldrb	r0, [r7]
   26794:	cmp	r0, #58	; 0x3a
   26798:	bne	267c4 <main@@Base+0x10a90>
   2679c:	ldr	r0, [sp, #16]
   267a0:	add	r1, r7, #1
   267a4:	sub	r0, r0, r1
   267a8:	cmp	r0, #2
   267ac:	blt	269a0 <main@@Base+0x10c6c>
   267b0:	ldrb	r0, [r1]
   267b4:	cmp	r0, #32
   267b8:	bls	26990 <main@@Base+0x10c5c>
   267bc:	mov	r7, r1
   267c0:	b	269b0 <main@@Base+0x10c7c>
   267c4:	ldr	r0, [sp, #24]
   267c8:	ldr	r2, [sp, #16]
   267cc:	mov	r1, r7
   267d0:	mov	r3, #4
   267d4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   267d8:	b	269ac <main@@Base+0x10c78>
   267dc:	bne	267f0 <main@@Base+0x10abc>
   267e0:	mov	r1, r8
   267e4:	ldrb	r0, [r1, #6]!
   267e8:	cmp	r0, #32
   267ec:	bhi	26804 <main@@Base+0x10ad0>
   267f0:	mov	r1, r2
   267f4:	ldr	r2, [sp, #16]
   267f8:	mov	r0, r7
   267fc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26800:	mov	r1, r0
   26804:	ldr	r0, [sp, #16]
   26808:	cmp	r1, r0
   2680c:	beq	26848 <main@@Base+0x10b14>
   26810:	ldrb	r0, [r1]
   26814:	cmp	r0, #58	; 0x3a
   26818:	bne	26848 <main@@Base+0x10b14>
   2681c:	ldr	r0, [sp, #16]
   26820:	add	r2, r1, #1
   26824:	sub	r0, r0, r2
   26828:	cmp	r0, #2
   2682c:	blt	26e38 <main@@Base+0x11104>
   26830:	ldrb	r0, [r2]
   26834:	cmp	r0, #32
   26838:	bls	26e24 <main@@Base+0x110f0>
   2683c:	ldr	r7, [sp, #24]
   26840:	mov	r1, r2
   26844:	b	26e4c <main@@Base+0x11118>
   26848:	ldr	r2, [sp, #16]
   2684c:	mov	r0, r7
   26850:	mov	r3, #4
   26854:	bl	3133c <flatcc_json_parser_set_error@@Base>
   26858:	b	26e48 <main@@Base+0x11114>
   2685c:	ldr	r7, [sp, #24]
   26860:	bne	26870 <main@@Base+0x10b3c>
   26864:	ldrb	r0, [r1, #2]!
   26868:	cmp	r0, #32
   2686c:	bhi	26884 <main@@Base+0x10b50>
   26870:	mov	r1, r2
   26874:	ldr	r2, [sp, #16]
   26878:	mov	r0, r7
   2687c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26880:	mov	r1, r0
   26884:	cmp	r8, r1
   26888:	beq	268bc <main@@Base+0x10b88>
   2688c:	ldr	r8, [sp, #16]
   26890:	mov	r0, r7
   26894:	add	r3, sp, #28
   26898:	mov	r2, r8
   2689c:	bl	33678 <flatcc_json_parser_build_string@@Base>
   268a0:	mov	sl, r0
   268a4:	ldr	r0, [sp, #28]
   268a8:	cmp	r0, #0
   268ac:	beq	27e7c <main@@Base+0x12148>
   268b0:	ldr	r0, [r7]
   268b4:	mov	r1, #4
   268b8:	b	26e80 <main@@Base+0x1114c>
   268bc:	ldr	r0, [sp, #8]
   268c0:	eor	r0, r4, r0
   268c4:	orrs	r0, r5, r0
   268c8:	bne	26e98 <main@@Base+0x11164>
   268cc:	cmp	r9, #9
   268d0:	mov	r7, r8
   268d4:	blt	26b1c <main@@Base+0x10de8>
   268d8:	ldrb	r0, [r8, #8]
   268dc:	mov	r7, r8
   268e0:	cmp	r0, #34	; 0x22
   268e4:	bne	26b1c <main@@Base+0x10de8>
   268e8:	ldr	r4, [sp, #16]
   268ec:	add	r1, r8, #9
   268f0:	sub	r0, r4, r1
   268f4:	cmp	r0, #2
   268f8:	blt	2692c <main@@Base+0x10bf8>
   268fc:	ldrb	r0, [r1]
   26900:	cmp	r0, #32
   26904:	bls	26914 <main@@Base+0x10be0>
   26908:	ldr	r4, [sp, #16]
   2690c:	mov	r7, r1
   26910:	b	2693c <main@@Base+0x10c08>
   26914:	ldr	r4, [sp, #16]
   26918:	bne	2692c <main@@Base+0x10bf8>
   2691c:	mov	r7, r8
   26920:	ldrb	r0, [r7, #10]!
   26924:	cmp	r0, #32
   26928:	bhi	2693c <main@@Base+0x10c08>
   2692c:	ldr	r0, [sp, #24]
   26930:	mov	r2, r4
   26934:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26938:	mov	r7, r0
   2693c:	cmp	r7, r4
   26940:	beq	26978 <main@@Base+0x10c44>
   26944:	ldrb	r0, [r7]
   26948:	cmp	r0, #58	; 0x3a
   2694c:	bne	26978 <main@@Base+0x10c44>
   26950:	ldr	r0, [sp, #16]
   26954:	add	r1, r7, #1
   26958:	sub	r0, r0, r1
   2695c:	cmp	r0, #2
   26960:	blt	26b0c <main@@Base+0x10dd8>
   26964:	ldrb	r0, [r1]
   26968:	cmp	r0, #32
   2696c:	bls	26afc <main@@Base+0x10dc8>
   26970:	mov	r7, r1
   26974:	b	26b1c <main@@Base+0x10de8>
   26978:	ldr	r0, [sp, #24]
   2697c:	ldr	r2, [sp, #16]
   26980:	mov	r1, r7
   26984:	mov	r3, #4
   26988:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2698c:	b	26b18 <main@@Base+0x10de4>
   26990:	bne	269a0 <main@@Base+0x10c6c>
   26994:	ldrb	r0, [r7, #2]!
   26998:	cmp	r0, #32
   2699c:	bhi	269b0 <main@@Base+0x10c7c>
   269a0:	ldr	r0, [sp, #24]
   269a4:	ldr	r2, [sp, #16]
   269a8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   269ac:	mov	r7, r0
   269b0:	cmp	r8, r7
   269b4:	beq	26a38 <main@@Base+0x10d04>
   269b8:	ldr	r8, [sp, #16]
   269bc:	mov	r4, #0
   269c0:	str	r4, [fp, #-36]	; 0xffffffdc
   269c4:	str	r4, [fp, #-40]	; 0xffffffd8
   269c8:	str	r4, [sp, #36]	; 0x24
   269cc:	str	r4, [sp, #32]
   269d0:	str	r4, [sp, #44]	; 0x2c
   269d4:	cmp	r7, r8
   269d8:	beq	26a40 <main@@Base+0x10d0c>
   269dc:	sub	r0, fp, #40	; 0x28
   269e0:	mov	r1, r7
   269e4:	mov	r2, r8
   269e8:	add	r3, sp, #44	; 0x2c
   269ec:	str	r0, [sp]
   269f0:	ldr	r0, [sp, #24]
   269f4:	bl	3314c <flatcc_json_parser_integer@@Base>
   269f8:	cmp	r0, r7
   269fc:	beq	26a4c <main@@Base+0x10d18>
   26a00:	mov	sl, r0
   26a04:	ldr	r0, [sp, #44]	; 0x2c
   26a08:	ldr	r4, [fp, #-40]	; 0xffffffd8
   26a0c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   26a10:	cmp	r0, #0
   26a14:	beq	26a5c <main@@Base+0x10d28>
   26a18:	subs	r0, r4, #1
   26a1c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   26a20:	bcc	26a88 <main@@Base+0x10d54>
   26a24:	ldr	r0, [sp, #24]
   26a28:	mov	r1, sl
   26a2c:	mov	r2, r8
   26a30:	mov	r3, #8
   26a34:	b	26a74 <main@@Base+0x10d40>
   26a38:	ldr	r7, [sp, #24]
   26a3c:	b	26e98 <main@@Base+0x11164>
   26a40:	mov	r5, #0
   26a44:	mov	sl, r8
   26a48:	b	26a98 <main@@Base+0x10d64>
   26a4c:	mov	r4, #0
   26a50:	mov	r5, #0
   26a54:	mov	sl, r7
   26a58:	b	26a98 <main@@Base+0x10d64>
   26a5c:	cmn	r5, #1
   26a60:	bgt	26a90 <main@@Base+0x10d5c>
   26a64:	ldr	r0, [sp, #24]
   26a68:	mov	r1, sl
   26a6c:	mov	r2, r8
   26a70:	mov	r3, #7
   26a74:	bl	3133c <flatcc_json_parser_set_error@@Base>
   26a78:	mov	sl, r0
   26a7c:	mov	r4, #0
   26a80:	mov	r5, #0
   26a84:	b	26a98 <main@@Base+0x10d64>
   26a88:	rsbs	r4, r4, #0
   26a8c:	rsc	r5, r5, #0
   26a90:	str	r4, [sp, #32]
   26a94:	str	r5, [sp, #36]	; 0x24
   26a98:	cmp	r7, sl
   26a9c:	bne	26ad8 <main@@Base+0x10da4>
   26aa0:	add	r0, sp, #32
   26aa4:	movw	r3, #33356	; 0x824c
   26aa8:	mov	r1, r7
   26aac:	mov	r2, r8
   26ab0:	str	r0, [sp]
   26ab4:	ldr	r0, [sp, #24]
   26ab8:	movt	r3, #5
   26abc:	bl	233f0 <main@@Base+0xd6bc>
   26ac0:	mov	sl, r0
   26ac4:	cmp	r0, r7
   26ac8:	cmpne	sl, r8
   26acc:	beq	27e74 <main@@Base+0x12140>
   26ad0:	ldr	r4, [sp, #32]
   26ad4:	ldr	r5, [sp, #36]	; 0x24
   26ad8:	ldr	r7, [sp, #24]
   26adc:	orrs	r0, r4, r5
   26ae0:	bne	26af0 <main@@Base+0x10dbc>
   26ae4:	ldrb	r0, [r7, #8]
   26ae8:	tst	r0, #2
   26aec:	beq	27188 <main@@Base+0x11454>
   26af0:	ldr	r0, [r7]
   26af4:	mov	r1, #3
   26af8:	b	26cc8 <main@@Base+0x10f94>
   26afc:	bne	26b0c <main@@Base+0x10dd8>
   26b00:	ldrb	r0, [r7, #2]!
   26b04:	cmp	r0, #32
   26b08:	bhi	26b1c <main@@Base+0x10de8>
   26b0c:	ldr	r0, [sp, #24]
   26b10:	ldr	r2, [sp, #16]
   26b14:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26b18:	mov	r7, r0
   26b1c:	cmp	r8, r7
   26b20:	beq	26ba4 <main@@Base+0x10e70>
   26b24:	ldr	r8, [sp, #16]
   26b28:	mov	r4, #0
   26b2c:	str	r4, [fp, #-36]	; 0xffffffdc
   26b30:	str	r4, [fp, #-40]	; 0xffffffd8
   26b34:	str	r4, [sp, #36]	; 0x24
   26b38:	str	r4, [sp, #32]
   26b3c:	str	r4, [sp, #44]	; 0x2c
   26b40:	cmp	r7, r8
   26b44:	beq	26c10 <main@@Base+0x10edc>
   26b48:	sub	r0, fp, #40	; 0x28
   26b4c:	mov	r1, r7
   26b50:	mov	r2, r8
   26b54:	add	r3, sp, #44	; 0x2c
   26b58:	str	r0, [sp]
   26b5c:	ldr	r0, [sp, #24]
   26b60:	bl	3314c <flatcc_json_parser_integer@@Base>
   26b64:	cmp	r0, r7
   26b68:	beq	26c1c <main@@Base+0x10ee8>
   26b6c:	mov	sl, r0
   26b70:	ldr	r0, [sp, #44]	; 0x2c
   26b74:	ldr	r4, [fp, #-40]	; 0xffffffd8
   26b78:	ldr	r5, [fp, #-36]	; 0xffffffdc
   26b7c:	cmp	r0, #0
   26b80:	beq	26c2c <main@@Base+0x10ef8>
   26b84:	subs	r0, r4, #1
   26b88:	sbcs	r0, r5, #-2147483648	; 0x80000000
   26b8c:	bcc	26c58 <main@@Base+0x10f24>
   26b90:	ldr	r0, [sp, #24]
   26b94:	mov	r1, sl
   26b98:	mov	r2, r8
   26b9c:	mov	r3, #8
   26ba0:	b	26c44 <main@@Base+0x10f10>
   26ba4:	ldr	r0, [sp, #16]
   26ba8:	add	r7, r8, #8
   26bac:	mov	r1, #8
   26bb0:	sub	r0, r0, r7
   26bb4:	cmp	r0, #8
   26bb8:	movcc	r1, r0
   26bbc:	sub	r1, r1, #1
   26bc0:	cmp	r1, #7
   26bc4:	bhi	2716c <main@@Base+0x11438>
   26bc8:	ldrb	r1, [r7]
   26bcc:	cmp	r1, #53	; 0x35
   26bd0:	bne	2716c <main@@Base+0x11438>
   26bd4:	cmp	r0, #2
   26bd8:	blt	2716c <main@@Base+0x11438>
   26bdc:	ldrb	r0, [r8, #9]
   26be0:	cmp	r0, #34	; 0x22
   26be4:	bne	2716c <main@@Base+0x11438>
   26be8:	ldr	r0, [sp, #16]
   26bec:	add	r1, r8, #10
   26bf0:	sub	r0, r0, r1
   26bf4:	cmp	r0, #2
   26bf8:	blt	26f40 <main@@Base+0x1120c>
   26bfc:	ldrb	r0, [r1]
   26c00:	cmp	r0, #32
   26c04:	bls	26f30 <main@@Base+0x111fc>
   26c08:	mov	r8, r1
   26c0c:	b	26f50 <main@@Base+0x1121c>
   26c10:	mov	r5, #0
   26c14:	mov	sl, r8
   26c18:	b	26c68 <main@@Base+0x10f34>
   26c1c:	mov	r4, #0
   26c20:	mov	r5, #0
   26c24:	mov	sl, r7
   26c28:	b	26c68 <main@@Base+0x10f34>
   26c2c:	cmn	r5, #1
   26c30:	bgt	26c60 <main@@Base+0x10f2c>
   26c34:	ldr	r0, [sp, #24]
   26c38:	mov	r1, sl
   26c3c:	mov	r2, r8
   26c40:	mov	r3, #7
   26c44:	bl	3133c <flatcc_json_parser_set_error@@Base>
   26c48:	mov	sl, r0
   26c4c:	mov	r4, #0
   26c50:	mov	r5, #0
   26c54:	b	26c68 <main@@Base+0x10f34>
   26c58:	rsbs	r4, r4, #0
   26c5c:	rsc	r5, r5, #0
   26c60:	str	r4, [sp, #32]
   26c64:	str	r5, [sp, #36]	; 0x24
   26c68:	cmp	r7, sl
   26c6c:	bne	26ca8 <main@@Base+0x10f74>
   26c70:	add	r0, sp, #32
   26c74:	movw	r3, #33392	; 0x8270
   26c78:	mov	r1, r7
   26c7c:	mov	r2, r8
   26c80:	str	r0, [sp]
   26c84:	ldr	r0, [sp, #24]
   26c88:	movt	r3, #5
   26c8c:	bl	233f0 <main@@Base+0xd6bc>
   26c90:	mov	sl, r0
   26c94:	cmp	r0, r7
   26c98:	cmpne	sl, r8
   26c9c:	beq	27e74 <main@@Base+0x12140>
   26ca0:	ldr	r4, [sp, #32]
   26ca4:	ldr	r5, [sp, #36]	; 0x24
   26ca8:	ldr	r7, [sp, #24]
   26cac:	orrs	r0, r4, r5
   26cb0:	bne	26cc0 <main@@Base+0x10f8c>
   26cb4:	ldrb	r0, [r7, #8]
   26cb8:	tst	r0, #2
   26cbc:	beq	27188 <main@@Base+0x11454>
   26cc0:	ldr	r0, [r7]
   26cc4:	mov	r1, #7
   26cc8:	mov	r2, #8
   26ccc:	mov	r3, #8
   26cd0:	bl	2e760 <flatcc_builder_table_add@@Base>
   26cd4:	cmp	r0, #0
   26cd8:	beq	27e74 <main@@Base+0x12140>
   26cdc:	strd	r4, [r0]
   26ce0:	b	27188 <main@@Base+0x11454>
   26ce4:	bne	26cf4 <main@@Base+0x10fc0>
   26ce8:	ldrb	r0, [r8, #11]!
   26cec:	cmp	r0, #32
   26cf0:	bhi	26d04 <main@@Base+0x10fd0>
   26cf4:	ldr	r0, [sp, #24]
   26cf8:	ldr	r2, [sp, #16]
   26cfc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26d00:	mov	r8, r0
   26d04:	ldr	r0, [sp, #16]
   26d08:	cmp	r8, r0
   26d0c:	beq	26d44 <main@@Base+0x11010>
   26d10:	ldrb	r0, [r8]
   26d14:	cmp	r0, #58	; 0x3a
   26d18:	bne	26d44 <main@@Base+0x11010>
   26d1c:	ldr	r0, [sp, #16]
   26d20:	add	r1, r8, #1
   26d24:	sub	r0, r0, r1
   26d28:	cmp	r0, #2
   26d2c:	blt	26fb8 <main@@Base+0x11284>
   26d30:	ldrb	r0, [r1]
   26d34:	cmp	r0, #32
   26d38:	bls	26fa8 <main@@Base+0x11274>
   26d3c:	mov	r8, r1
   26d40:	b	26fc8 <main@@Base+0x11294>
   26d44:	ldr	r0, [sp, #24]
   26d48:	ldr	r2, [sp, #16]
   26d4c:	mov	r1, r8
   26d50:	mov	r3, #4
   26d54:	bl	3133c <flatcc_json_parser_set_error@@Base>
   26d58:	b	26fc4 <main@@Base+0x11290>
   26d5c:	bne	26d6c <main@@Base+0x11038>
   26d60:	ldrb	r0, [r8, #2]!
   26d64:	cmp	r0, #32
   26d68:	bhi	26d7c <main@@Base+0x11048>
   26d6c:	ldr	r0, [sp, #24]
   26d70:	ldr	r2, [sp, #16]
   26d74:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26d78:	mov	r8, r0
   26d7c:	cmp	r7, r8
   26d80:	beq	2716c <main@@Base+0x11438>
   26d84:	ldr	r2, [sp, #16]
   26d88:	mov	r4, #0
   26d8c:	str	r4, [fp, #-36]	; 0xffffffdc
   26d90:	str	r4, [fp, #-40]	; 0xffffffd8
   26d94:	str	r4, [sp, #44]	; 0x2c
   26d98:	str	r4, [sp, #32]
   26d9c:	cmp	r8, r2
   26da0:	beq	26de8 <main@@Base+0x110b4>
   26da4:	sub	r0, fp, #40	; 0x28
   26da8:	mov	r1, r8
   26dac:	add	r3, sp, #32
   26db0:	str	r0, [sp]
   26db4:	ldr	r0, [sp, #24]
   26db8:	bl	3314c <flatcc_json_parser_integer@@Base>
   26dbc:	cmp	r0, r8
   26dc0:	beq	26df0 <main@@Base+0x110bc>
   26dc4:	mov	sl, r0
   26dc8:	ldr	r0, [sp, #32]
   26dcc:	cmp	r0, #0
   26dd0:	beq	26df8 <main@@Base+0x110c4>
   26dd4:	ldr	r7, [sp, #24]
   26dd8:	ldr	r2, [sp, #16]
   26ddc:	mov	r1, sl
   26de0:	mov	r3, #8
   26de4:	b	26e14 <main@@Base+0x110e0>
   26de8:	mov	sl, r2
   26dec:	b	26eac <main@@Base+0x11178>
   26df0:	mov	sl, r8
   26df4:	b	26eac <main@@Base+0x11178>
   26df8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26dfc:	cmp	r0, #0
   26e00:	beq	26ea4 <main@@Base+0x11170>
   26e04:	ldr	r7, [sp, #24]
   26e08:	ldr	r2, [sp, #16]
   26e0c:	mov	r1, sl
   26e10:	mov	r3, #7
   26e14:	mov	r0, r7
   26e18:	bl	3133c <flatcc_json_parser_set_error@@Base>
   26e1c:	mov	sl, r0
   26e20:	b	26eb0 <main@@Base+0x1117c>
   26e24:	ldr	r7, [sp, #24]
   26e28:	bne	26e38 <main@@Base+0x11104>
   26e2c:	ldrb	r0, [r1, #2]!
   26e30:	cmp	r0, #32
   26e34:	bhi	26e4c <main@@Base+0x11118>
   26e38:	mov	r1, r2
   26e3c:	ldr	r2, [sp, #16]
   26e40:	mov	r0, r7
   26e44:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26e48:	mov	r1, r0
   26e4c:	cmp	r8, r1
   26e50:	beq	26e98 <main@@Base+0x11164>
   26e54:	ldr	r8, [sp, #16]
   26e58:	mov	r0, r7
   26e5c:	add	r3, sp, #28
   26e60:	mov	r2, r8
   26e64:	bl	33678 <flatcc_json_parser_build_string@@Base>
   26e68:	mov	sl, r0
   26e6c:	ldr	r0, [sp, #28]
   26e70:	cmp	r0, #0
   26e74:	beq	27e7c <main@@Base+0x12148>
   26e78:	ldr	r0, [r7]
   26e7c:	mov	r1, #2
   26e80:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   26e84:	cmp	r0, #0
   26e88:	beq	27e7c <main@@Base+0x12148>
   26e8c:	ldr	r1, [sp, #28]
   26e90:	str	r1, [r0]
   26e94:	b	27188 <main@@Base+0x11454>
   26e98:	mov	r0, r7
   26e9c:	mov	r1, r8
   26ea0:	b	27178 <main@@Base+0x11444>
   26ea4:	ldr	r4, [fp, #-40]	; 0xffffffd8
   26ea8:	str	r4, [sp, #44]	; 0x2c
   26eac:	ldr	r7, [sp, #24]
   26eb0:	cmp	r8, sl
   26eb4:	bne	26ef4 <main@@Base+0x111c0>
   26eb8:	ldr	r2, [sp, #16]
   26ebc:	movw	r3, #33344	; 0x8240
   26ec0:	add	r0, sp, #44	; 0x2c
   26ec4:	mov	r1, r8
   26ec8:	movt	r3, #5
   26ecc:	str	r0, [sp]
   26ed0:	mov	r0, r7
   26ed4:	bl	235d8 <main@@Base+0xd8a4>
   26ed8:	cmp	r0, r8
   26edc:	mov	sl, r0
   26ee0:	ldrne	r0, [sp, #16]
   26ee4:	cmpne	sl, r0
   26ee8:	beq	27e74 <main@@Base+0x12140>
   26eec:	ldr	r4, [sp, #44]	; 0x2c
   26ef0:	ldr	r7, [sp, #24]
   26ef4:	cmp	r4, #0
   26ef8:	bne	26f08 <main@@Base+0x111d4>
   26efc:	ldrb	r0, [r7, #8]
   26f00:	tst	r0, #2
   26f04:	beq	26f28 <main@@Base+0x111f4>
   26f08:	ldr	r0, [r7]
   26f0c:	mov	r1, #1
   26f10:	mov	r2, #4
   26f14:	mov	r3, #4
   26f18:	bl	2e760 <flatcc_builder_table_add@@Base>
   26f1c:	cmp	r0, #0
   26f20:	beq	27e74 <main@@Base+0x12140>
   26f24:	str	r4, [r0]
   26f28:	ldr	r8, [sp, #16]
   26f2c:	b	27188 <main@@Base+0x11454>
   26f30:	bne	26f40 <main@@Base+0x1120c>
   26f34:	ldrb	r0, [r8, #11]!
   26f38:	cmp	r0, #32
   26f3c:	bhi	26f50 <main@@Base+0x1121c>
   26f40:	ldr	r0, [sp, #24]
   26f44:	ldr	r2, [sp, #16]
   26f48:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26f4c:	mov	r8, r0
   26f50:	ldr	r0, [sp, #16]
   26f54:	cmp	r8, r0
   26f58:	beq	26f90 <main@@Base+0x1125c>
   26f5c:	ldrb	r0, [r8]
   26f60:	cmp	r0, #58	; 0x3a
   26f64:	bne	26f90 <main@@Base+0x1125c>
   26f68:	ldr	r0, [sp, #16]
   26f6c:	add	r1, r8, #1
   26f70:	sub	r0, r0, r1
   26f74:	cmp	r0, #2
   26f78:	blt	270ec <main@@Base+0x113b8>
   26f7c:	ldrb	r0, [r1]
   26f80:	cmp	r0, #32
   26f84:	bls	270dc <main@@Base+0x113a8>
   26f88:	mov	r8, r1
   26f8c:	b	270fc <main@@Base+0x113c8>
   26f90:	ldr	r0, [sp, #24]
   26f94:	ldr	r2, [sp, #16]
   26f98:	mov	r1, r8
   26f9c:	mov	r3, #4
   26fa0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   26fa4:	b	270f8 <main@@Base+0x113c4>
   26fa8:	bne	26fb8 <main@@Base+0x11284>
   26fac:	ldrb	r0, [r8, #2]!
   26fb0:	cmp	r0, #32
   26fb4:	bhi	26fc8 <main@@Base+0x11294>
   26fb8:	ldr	r0, [sp, #24]
   26fbc:	ldr	r2, [sp, #16]
   26fc0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   26fc4:	mov	r8, r0
   26fc8:	cmp	r7, r8
   26fcc:	beq	2716c <main@@Base+0x11438>
   26fd0:	ldr	r0, [sp, #16]
   26fd4:	mov	r4, #0
   26fd8:	str	r4, [fp, #-36]	; 0xffffffdc
   26fdc:	str	r4, [fp, #-40]	; 0xffffffd8
   26fe0:	str	r4, [sp, #44]	; 0x2c
   26fe4:	str	r4, [sp, #32]
   26fe8:	cmp	r8, r0
   26fec:	beq	27038 <main@@Base+0x11304>
   26ff0:	sub	r0, fp, #40	; 0x28
   26ff4:	ldr	r2, [sp, #16]
   26ff8:	mov	r1, r8
   26ffc:	add	r3, sp, #32
   27000:	str	r0, [sp]
   27004:	ldr	r0, [sp, #24]
   27008:	bl	3314c <flatcc_json_parser_integer@@Base>
   2700c:	cmp	r0, r8
   27010:	beq	27040 <main@@Base+0x1130c>
   27014:	mov	sl, r0
   27018:	ldr	r0, [sp, #32]
   2701c:	cmp	r0, #0
   27020:	beq	27048 <main@@Base+0x11314>
   27024:	ldr	r0, [sp, #24]
   27028:	ldr	r2, [sp, #16]
   2702c:	mov	r1, sl
   27030:	mov	r3, #8
   27034:	b	27064 <main@@Base+0x11330>
   27038:	ldr	sl, [sp, #16]
   2703c:	b	2706c <main@@Base+0x11338>
   27040:	mov	sl, r8
   27044:	b	2706c <main@@Base+0x11338>
   27048:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2704c:	cmp	r0, #0
   27050:	beq	270d0 <main@@Base+0x1139c>
   27054:	ldr	r0, [sp, #24]
   27058:	ldr	r2, [sp, #16]
   2705c:	mov	r1, sl
   27060:	mov	r3, #7
   27064:	bl	3133c <flatcc_json_parser_set_error@@Base>
   27068:	mov	sl, r0
   2706c:	cmp	r8, sl
   27070:	bne	270ac <main@@Base+0x11378>
   27074:	add	r0, sp, #44	; 0x2c
   27078:	ldr	r2, [sp, #16]
   2707c:	movw	r3, #33380	; 0x8264
   27080:	mov	r1, r8
   27084:	str	r0, [sp]
   27088:	ldr	r0, [sp, #24]
   2708c:	movt	r3, #5
   27090:	bl	235d8 <main@@Base+0xd8a4>
   27094:	cmp	r0, r8
   27098:	mov	sl, r0
   2709c:	ldrne	r0, [sp, #16]
   270a0:	cmpne	sl, r0
   270a4:	beq	27e74 <main@@Base+0x12140>
   270a8:	ldr	r4, [sp, #44]	; 0x2c
   270ac:	cmp	r4, #0
   270b0:	bne	270c4 <main@@Base+0x11390>
   270b4:	ldr	r0, [sp, #24]
   270b8:	ldrb	r0, [r0, #8]
   270bc:	tst	r0, #2
   270c0:	beq	272f0 <main@@Base+0x115bc>
   270c4:	ldr	r0, [sp, #24]
   270c8:	mov	r1, #6
   270cc:	b	272d4 <main@@Base+0x115a0>
   270d0:	ldr	r4, [fp, #-40]	; 0xffffffd8
   270d4:	str	r4, [sp, #44]	; 0x2c
   270d8:	b	2706c <main@@Base+0x11338>
   270dc:	bne	270ec <main@@Base+0x113b8>
   270e0:	ldrb	r0, [r8, #2]!
   270e4:	cmp	r0, #32
   270e8:	bhi	270fc <main@@Base+0x113c8>
   270ec:	ldr	r0, [sp, #24]
   270f0:	ldr	r2, [sp, #16]
   270f4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   270f8:	mov	r8, r0
   270fc:	cmp	r7, r8
   27100:	beq	2716c <main@@Base+0x11438>
   27104:	ldr	r0, [sp, #16]
   27108:	mov	r4, #0
   2710c:	str	r4, [fp, #-36]	; 0xffffffdc
   27110:	str	r4, [fp, #-40]	; 0xffffffd8
   27114:	str	r4, [sp, #44]	; 0x2c
   27118:	str	r4, [sp, #32]
   2711c:	cmp	r8, r0
   27120:	beq	27240 <main@@Base+0x1150c>
   27124:	sub	r0, fp, #40	; 0x28
   27128:	ldr	r2, [sp, #16]
   2712c:	mov	r1, r8
   27130:	add	r3, sp, #32
   27134:	str	r0, [sp]
   27138:	ldr	r0, [sp, #24]
   2713c:	bl	3314c <flatcc_json_parser_integer@@Base>
   27140:	cmp	r0, r8
   27144:	beq	27248 <main@@Base+0x11514>
   27148:	mov	sl, r0
   2714c:	ldr	r0, [sp, #32]
   27150:	cmp	r0, #0
   27154:	beq	27250 <main@@Base+0x1151c>
   27158:	ldr	r0, [sp, #24]
   2715c:	ldr	r2, [sp, #16]
   27160:	mov	r1, sl
   27164:	mov	r3, #8
   27168:	b	2726c <main@@Base+0x11538>
   2716c:	ldr	r0, [sp, #24]
   27170:	mov	r1, r7
   27174:	mov	r7, r0
   27178:	ldr	r8, [sp, #16]
   2717c:	mov	r2, r8
   27180:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   27184:	mov	sl, r0
   27188:	sub	r0, r8, sl
   2718c:	cmp	r0, #2
   27190:	blt	271bc <main@@Base+0x11488>
   27194:	ldrb	r0, [sl]
   27198:	cmp	r0, #32
   2719c:	bls	271a8 <main@@Base+0x11474>
   271a0:	mov	r2, sl
   271a4:	b	271d0 <main@@Base+0x1149c>
   271a8:	bne	271bc <main@@Base+0x11488>
   271ac:	mov	r2, sl
   271b0:	ldrb	r0, [r2, #1]!
   271b4:	cmp	r0, #32
   271b8:	bhi	271d0 <main@@Base+0x1149c>
   271bc:	mov	r0, r7
   271c0:	mov	r1, sl
   271c4:	mov	r2, r8
   271c8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   271cc:	mov	r2, r0
   271d0:	cmp	r2, r8
   271d4:	beq	2741c <main@@Base+0x116e8>
   271d8:	ldrb	r0, [r2]
   271dc:	cmp	r0, #44	; 0x2c
   271e0:	bne	27424 <main@@Base+0x116f0>
   271e4:	add	r1, r2, #1
   271e8:	sub	r0, r8, r1
   271ec:	cmp	r0, #2
   271f0:	blt	27218 <main@@Base+0x114e4>
   271f4:	ldrb	r0, [r1]
   271f8:	cmp	r0, #32
   271fc:	bls	27208 <main@@Base+0x114d4>
   27200:	mov	r2, r1
   27204:	b	27228 <main@@Base+0x114f4>
   27208:	bne	27218 <main@@Base+0x114e4>
   2720c:	ldrb	r0, [r2, #2]!
   27210:	cmp	r0, #32
   27214:	bhi	27228 <main@@Base+0x114f4>
   27218:	mov	r0, r7
   2721c:	mov	r2, r8
   27220:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   27224:	mov	r2, r0
   27228:	cmp	r2, r8
   2722c:	beq	27450 <main@@Base+0x1171c>
   27230:	ldrb	r0, [r2]
   27234:	cmp	r0, #125	; 0x7d
   27238:	bne	25fd4 <main@@Base+0x102a0>
   2723c:	b	2742c <main@@Base+0x116f8>
   27240:	ldr	sl, [sp, #16]
   27244:	b	27274 <main@@Base+0x11540>
   27248:	mov	sl, r8
   2724c:	b	27274 <main@@Base+0x11540>
   27250:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27254:	cmp	r0, #0
   27258:	beq	272fc <main@@Base+0x115c8>
   2725c:	ldr	r0, [sp, #24]
   27260:	ldr	r2, [sp, #16]
   27264:	mov	r1, sl
   27268:	mov	r3, #7
   2726c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   27270:	mov	sl, r0
   27274:	cmp	r8, sl
   27278:	bne	272b4 <main@@Base+0x11580>
   2727c:	add	r0, sp, #44	; 0x2c
   27280:	ldr	r2, [sp, #16]
   27284:	movw	r3, #33404	; 0x827c
   27288:	mov	r1, r8
   2728c:	str	r0, [sp]
   27290:	ldr	r0, [sp, #24]
   27294:	movt	r3, #5
   27298:	bl	235d8 <main@@Base+0xd8a4>
   2729c:	cmp	r0, r8
   272a0:	mov	sl, r0
   272a4:	ldrne	r0, [sp, #16]
   272a8:	cmpne	sl, r0
   272ac:	beq	27e74 <main@@Base+0x12140>
   272b0:	ldr	r4, [sp, #44]	; 0x2c
   272b4:	cmp	r4, #0
   272b8:	bne	272cc <main@@Base+0x11598>
   272bc:	ldr	r0, [sp, #24]
   272c0:	ldrb	r0, [r0, #8]
   272c4:	tst	r0, #2
   272c8:	beq	272f0 <main@@Base+0x115bc>
   272cc:	ldr	r0, [sp, #24]
   272d0:	mov	r1, #8
   272d4:	ldr	r0, [r0]
   272d8:	mov	r2, #4
   272dc:	mov	r3, #4
   272e0:	bl	2e760 <flatcc_builder_table_add@@Base>
   272e4:	cmp	r0, #0
   272e8:	beq	27e74 <main@@Base+0x12140>
   272ec:	str	r4, [r0]
   272f0:	ldr	r8, [sp, #16]
   272f4:	ldr	r7, [sp, #24]
   272f8:	b	27188 <main@@Base+0x11454>
   272fc:	ldr	r4, [fp, #-40]	; 0xffffffd8
   27300:	str	r4, [sp, #44]	; 0x2c
   27304:	b	27274 <main@@Base+0x11540>
   27308:	bne	27318 <main@@Base+0x115e4>
   2730c:	ldrb	r0, [r9, #2]!
   27310:	cmp	r0, #32
   27314:	bhi	27328 <main@@Base+0x115f4>
   27318:	mov	r0, r7
   2731c:	mov	r2, r8
   27320:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   27324:	mov	r9, r0
   27328:	mov	ip, r4
   2732c:	cmp	r4, r9
   27330:	beq	256e0 <main@@Base+0xf9ac>
   27334:	ldr	r0, [r7]
   27338:	mov	r1, #2
   2733c:	bl	2d514 <flatcc_builder_start_table@@Base>
   27340:	cmp	r0, #0
   27344:	bne	27e90 <main@@Base+0x1215c>
   27348:	cmp	r9, r8
   2734c:	beq	27380 <main@@Base+0x1164c>
   27350:	ldrb	r0, [r9]
   27354:	cmp	r0, #123	; 0x7b
   27358:	bne	27380 <main@@Base+0x1164c>
   2735c:	add	r1, r9, #1
   27360:	sub	r0, r8, r1
   27364:	cmp	r0, #2
   27368:	blt	2746c <main@@Base+0x11738>
   2736c:	ldrb	r0, [r1]
   27370:	cmp	r0, #32
   27374:	bls	2745c <main@@Base+0x11728>
   27378:	mov	r9, r1
   2737c:	b	2747c <main@@Base+0x11748>
   27380:	mov	r0, r7
   27384:	mov	r1, r9
   27388:	mov	r2, r8
   2738c:	mov	r3, #21
   27390:	bl	3133c <flatcc_json_parser_set_error@@Base>
   27394:	mov	r9, r0
   27398:	ldr	r0, [r7, #20]
   2739c:	cmp	r0, #0
   273a0:	bne	27e90 <main@@Base+0x1215c>
   273a4:	ldr	r0, [r7]
   273a8:	bl	2de74 <flatcc_builder_end_table@@Base>
   273ac:	mov	r1, r7
   273b0:	cmp	r0, #0
   273b4:	beq	27e58 <main@@Base+0x12124>
   273b8:	mov	r7, r0
   273bc:	ldr	r0, [r1]
   273c0:	mov	r1, #2
   273c4:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   273c8:	cmp	r0, #0
   273cc:	beq	27e60 <main@@Base+0x1212c>
   273d0:	str	r7, [r0]
   273d4:	ldr	r7, [sp, #24]
   273d8:	b	25314 <main@@Base+0xf5e0>
   273dc:	mov	r9, r8
   273e0:	b	255d0 <main@@Base+0xf89c>
   273e4:	cmp	r0, #125	; 0x7d
   273e8:	bne	27cb0 <main@@Base+0x11f7c>
   273ec:	add	r1, r2, #1
   273f0:	sub	r0, r8, r1
   273f4:	cmp	r0, #2
   273f8:	blt	27d4c <main@@Base+0x12018>
   273fc:	ldrb	r0, [r1]
   27400:	cmp	r0, #32
   27404:	bls	27d38 <main@@Base+0x12004>
   27408:	mov	r9, r1
   2740c:	b	255d0 <main@@Base+0xf89c>
   27410:	mov	r0, r7
   27414:	mov	r1, r8
   27418:	b	27cb8 <main@@Base+0x11f84>
   2741c:	mov	sl, r8
   27420:	b	25704 <main@@Base+0xf9d0>
   27424:	cmp	r0, #125	; 0x7d
   27428:	bne	27d5c <main@@Base+0x12028>
   2742c:	add	r1, r2, #1
   27430:	sub	r0, r8, r1
   27434:	cmp	r0, #2
   27438:	blt	27d84 <main@@Base+0x12050>
   2743c:	ldrb	r0, [r1]
   27440:	cmp	r0, #32
   27444:	bls	27d70 <main@@Base+0x1203c>
   27448:	mov	sl, r1
   2744c:	b	25704 <main@@Base+0xf9d0>
   27450:	mov	r0, r7
   27454:	mov	r1, r8
   27458:	b	27d64 <main@@Base+0x12030>
   2745c:	bne	2746c <main@@Base+0x11738>
   27460:	ldrb	r0, [r9, #2]!
   27464:	cmp	r0, #32
   27468:	bhi	2747c <main@@Base+0x11748>
   2746c:	mov	r0, r7
   27470:	mov	r2, r8
   27474:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   27478:	mov	r9, r0
   2747c:	cmp	r9, r8
   27480:	mov	r2, r8
   27484:	beq	274c0 <main@@Base+0x1178c>
   27488:	ldrb	r0, [r9]
   2748c:	cmp	r0, #125	; 0x7d
   27490:	bne	274bc <main@@Base+0x11788>
   27494:	add	r1, r9, #1
   27498:	sub	r0, r8, r1
   2749c:	cmp	r0, #2
   274a0:	blt	27dcc <main@@Base+0x12098>
   274a4:	ldrb	r0, [r1]
   274a8:	cmp	r0, #32
   274ac:	bhi	27d30 <main@@Base+0x11ffc>
   274b0:	bne	27dcc <main@@Base+0x12098>
   274b4:	ldrb	r0, [r9, #2]!
   274b8:	b	27dc4 <main@@Base+0x12090>
   274bc:	mov	r2, r9
   274c0:	cmp	r2, r8
   274c4:	mov	sl, r8
   274c8:	beq	274f8 <main@@Base+0x117c4>
   274cc:	ldrb	r0, [r2]
   274d0:	cmp	r0, #34	; 0x22
   274d4:	bne	274e0 <main@@Base+0x117ac>
   274d8:	add	sl, r2, #1
   274dc:	b	274f8 <main@@Base+0x117c4>
   274e0:	mov	r1, r2
   274e4:	mov	r0, r7
   274e8:	mov	r2, r8
   274ec:	mov	r3, #5
   274f0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   274f4:	mov	sl, r0
   274f8:	sub	r0, r8, sl
   274fc:	mov	r1, #8
   27500:	cmp	r0, #8
   27504:	movcs	r0, r1
   27508:	sub	r3, r0, #1
   2750c:	cmp	r3, #7
   27510:	bhi	27790 <main@@Base+0x11a5c>
   27514:	add	r4, pc, #32
   27518:	mov	r0, #0
   2751c:	mov	ip, #0
   27520:	mov	lr, #0
   27524:	mov	r6, #0
   27528:	mov	r2, #0
   2752c:	mov	r5, #0
   27530:	mov	r7, #0
   27534:	mov	r1, #0
   27538:	ldr	pc, [r4, r3, lsl #2]
   2753c:	andeq	r7, r2, r0, lsr #11
   27540:	muleq	r2, r8, r5
   27544:	muleq	r2, r0, r5
   27548:	andeq	r7, r2, r8, lsl #11
   2754c:	andeq	r7, r2, ip, ror r5
   27550:	andeq	r7, r2, r0, ror r5
   27554:	andeq	r7, r2, r0, ror #10
   27558:	andeq	r7, r2, ip, asr r5
   2755c:	ldrb	ip, [sl, #7]
   27560:	ldrb	r1, [sl, #6]
   27564:	mov	lr, r0
   27568:	orr	r1, ip, r1, lsl #8
   2756c:	mov	r0, r1
   27570:	ldrb	r1, [sl, #5]
   27574:	mov	r6, lr
   27578:	orr	r0, r0, r1, lsl #16
   2757c:	ldrb	r1, [sl, #4]
   27580:	mov	r2, r6
   27584:	orr	r0, r0, r1, lsl #24
   27588:	ldrb	r1, [sl, #3]
   2758c:	orr	r5, r1, r2
   27590:	ldrb	r1, [sl, #2]
   27594:	orr	r7, r5, r1, lsl #8
   27598:	ldrb	r1, [sl, #1]
   2759c:	orr	r1, r7, r1, lsl #16
   275a0:	movw	r2, #25186	; 0x6262
   275a4:	ldr	r7, [sp, #24]
   275a8:	movt	r2, #24418	; 0x5f62
   275ac:	eor	r0, r0, r2
   275b0:	ldrb	r2, [sl]
   275b4:	orr	r1, r1, r2, lsl #24
   275b8:	movw	r2, #24929	; 0x6161
   275bc:	movt	r2, #24929	; 0x6161
   275c0:	eor	r1, r1, r2
   275c4:	orrs	r0, r0, r1
   275c8:	bne	27790 <main@@Base+0x11a5c>
   275cc:	mov	r0, r8
   275d0:	add	r8, sl, #8
   275d4:	sub	lr, r0, r8
   275d8:	mov	r0, #8
   275dc:	cmp	lr, #8
   275e0:	movcc	r0, lr
   275e4:	sub	r6, r0, #1
   275e8:	cmp	r6, #7
   275ec:	bhi	277fc <main@@Base+0x11ac8>
   275f0:	add	r2, pc, #32
   275f4:	mov	r1, #0
   275f8:	mov	ip, #0
   275fc:	mov	r9, #0
   27600:	mov	r5, #0
   27604:	mov	r3, #0
   27608:	mov	r4, #0
   2760c:	mov	r7, #0
   27610:	mov	r0, #0
   27614:	ldr	pc, [r2, r6, lsl #2]
   27618:	andeq	r7, r2, ip, ror r6
   2761c:	andeq	r7, r2, r4, ror r6
   27620:	andeq	r7, r2, ip, ror #12
   27624:	andeq	r7, r2, r4, ror #12
   27628:	andeq	r7, r2, r8, asr r6
   2762c:	andeq	r7, r2, ip, asr #12
   27630:	andeq	r7, r2, ip, lsr r6
   27634:	andeq	r7, r2, r8, lsr r6
   27638:	ldrb	ip, [sl, #15]
   2763c:	ldrb	r0, [sl, #14]
   27640:	mov	r9, r1
   27644:	orr	r0, ip, r0, lsl #8
   27648:	mov	r1, r0
   2764c:	ldrb	r0, [sl, #13]
   27650:	mov	r5, r9
   27654:	orr	r1, r1, r0, lsl #16
   27658:	ldrb	r0, [sl, #12]
   2765c:	mov	r3, r5
   27660:	orr	r1, r1, r0, lsl #24
   27664:	ldrb	r0, [sl, #11]
   27668:	orr	r4, r0, r3
   2766c:	ldrb	r0, [sl, #10]
   27670:	orr	r7, r4, r0, lsl #8
   27674:	ldrb	r0, [sl, #9]
   27678:	orr	r0, r7, r0, lsl #16
   2767c:	ldrb	r3, [r8]
   27680:	movw	r2, #29791	; 0x745f
   27684:	movt	r2, #24946	; 0x6172
   27688:	eor	r2, r1, r2
   2768c:	orr	r0, r0, r3, lsl #24
   27690:	movw	r3, #29556	; 0x7374
   27694:	movt	r3, #25183	; 0x625f
   27698:	eor	r0, r0, r3
   2769c:	orrs	r2, r2, r0
   276a0:	bne	2779c <main@@Base+0x11a68>
   276a4:	ldr	r0, [sp, #16]
   276a8:	add	r8, sl, #16
   276ac:	mov	r1, #8
   276b0:	sub	r0, r0, r8
   276b4:	cmp	r0, #8
   276b8:	movcc	r1, r0
   276bc:	sub	r3, r1, #1
   276c0:	cmp	r3, #7
   276c4:	bhi	277f8 <main@@Base+0x11ac4>
   276c8:	add	r4, pc, #20
   276cc:	mov	r1, #0
   276d0:	mov	r2, #0
   276d4:	mov	r6, #0
   276d8:	mov	r7, #0
   276dc:	mov	r5, #0
   276e0:	ldr	pc, [r4, r3, lsl #2]
   276e4:	andeq	r7, r2, r8, lsr #14
   276e8:	andeq	r7, r2, r0, lsr #14
   276ec:	andeq	r7, r2, r8, lsl r7
   276f0:	andeq	r7, r2, ip, lsl #14
   276f4:	andeq	r7, r2, r4, lsl #14
   276f8:	andeq	r7, r2, r4, lsl #14
   276fc:	andeq	r7, r2, r4, lsl #14
   27700:	andeq	r7, r2, r4, lsl #14
   27704:	ldrb	r2, [sl, #20]
   27708:	lsl	r2, r2, #24
   2770c:	ldrb	r3, [sl, #19]
   27710:	orr	r6, r3, r1
   27714:	mov	r1, r2
   27718:	ldrb	r2, [sl, #18]
   2771c:	orr	r7, r6, r2, lsl #8
   27720:	ldrb	r2, [sl, #17]
   27724:	orr	r5, r7, r2, lsl #16
   27728:	ldrb	r2, [r8]
   2772c:	movw	r3, #25968	; 0x6570
   27730:	and	r1, r1, #-16777216	; 0xff000000
   27734:	movt	r3, #29556	; 0x7374
   27738:	eor	r1, r1, #1929379840	; 0x73000000
   2773c:	orr	r2, r5, r2, lsl #24
   27740:	eor	r2, r2, r3
   27744:	orrs	r1, r1, r2
   27748:	bne	277f8 <main@@Base+0x11ac4>
   2774c:	ldr	r7, [sp, #24]
   27750:	cmp	r0, #6
   27754:	blt	277fc <main@@Base+0x11ac8>
   27758:	ldrb	r0, [sl, #21]
   2775c:	cmp	r0, #34	; 0x22
   27760:	bne	277fc <main@@Base+0x11ac8>
   27764:	ldr	r4, [sp, #16]
   27768:	add	r1, sl, #22
   2776c:	sub	r0, r4, r1
   27770:	cmp	r0, #2
   27774:	blt	27964 <main@@Base+0x11c30>
   27778:	ldrb	r0, [r1]
   2777c:	cmp	r0, #32
   27780:	bls	27950 <main@@Base+0x11c1c>
   27784:	ldr	r4, [sp, #16]
   27788:	mov	sl, r1
   2778c:	b	27974 <main@@Base+0x11c40>
   27790:	mov	r0, r7
   27794:	mov	r1, sl
   27798:	b	27808 <main@@Base+0x11ad4>
   2779c:	movw	r2, #29440	; 0x7300
   277a0:	ldr	r7, [sp, #24]
   277a4:	bic	r1, r1, #255	; 0xff
   277a8:	movt	r2, #25968	; 0x6570
   277ac:	eor	r1, r1, r2
   277b0:	orrs	r0, r1, r0
   277b4:	bne	277fc <main@@Base+0x11ac8>
   277b8:	cmp	lr, #8
   277bc:	blt	277fc <main@@Base+0x11ac8>
   277c0:	ldrb	r0, [sl, #15]
   277c4:	cmp	r0, #34	; 0x22
   277c8:	bne	277fc <main@@Base+0x11ac8>
   277cc:	ldr	r4, [sp, #16]
   277d0:	add	r1, sl, #16
   277d4:	sub	r0, r4, r1
   277d8:	cmp	r0, #2
   277dc:	blt	278e8 <main@@Base+0x11bb4>
   277e0:	ldrb	r0, [r1]
   277e4:	cmp	r0, #32
   277e8:	bls	278d4 <main@@Base+0x11ba0>
   277ec:	ldr	r4, [sp, #16]
   277f0:	mov	sl, r1
   277f4:	b	278f8 <main@@Base+0x11bc4>
   277f8:	ldr	r7, [sp, #24]
   277fc:	mov	r1, r8
   27800:	ldr	r8, [sp, #16]
   27804:	mov	r0, r7
   27808:	mov	r2, r8
   2780c:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   27810:	mov	r9, r0
   27814:	movw	sl, #0
   27818:	sub	r0, r8, r9
   2781c:	movt	sl, #26418	; 0x6732
   27820:	cmp	r0, #2
   27824:	blt	27850 <main@@Base+0x11b1c>
   27828:	ldrb	r0, [r9]
   2782c:	cmp	r0, #32
   27830:	bls	2783c <main@@Base+0x11b08>
   27834:	mov	r2, r9
   27838:	b	27864 <main@@Base+0x11b30>
   2783c:	bne	27850 <main@@Base+0x11b1c>
   27840:	mov	r2, r9
   27844:	ldrb	r0, [r2, #1]!
   27848:	cmp	r0, #32
   2784c:	bhi	27864 <main@@Base+0x11b30>
   27850:	mov	r0, r7
   27854:	mov	r1, r9
   27858:	mov	r2, r8
   2785c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   27860:	mov	r2, r0
   27864:	cmp	r2, r8
   27868:	beq	27cc4 <main@@Base+0x11f90>
   2786c:	ldrb	r0, [r2]
   27870:	cmp	r0, #44	; 0x2c
   27874:	bne	27ccc <main@@Base+0x11f98>
   27878:	add	r1, r2, #1
   2787c:	sub	r0, r8, r1
   27880:	cmp	r0, #2
   27884:	blt	278ac <main@@Base+0x11b78>
   27888:	ldrb	r0, [r1]
   2788c:	cmp	r0, #32
   27890:	bls	2789c <main@@Base+0x11b68>
   27894:	mov	r2, r1
   27898:	b	278bc <main@@Base+0x11b88>
   2789c:	bne	278ac <main@@Base+0x11b78>
   278a0:	ldrb	r0, [r2, #2]!
   278a4:	cmp	r0, #32
   278a8:	bhi	278bc <main@@Base+0x11b88>
   278ac:	mov	r0, r7
   278b0:	mov	r2, r8
   278b4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   278b8:	mov	r2, r0
   278bc:	cmp	r2, r8
   278c0:	beq	27d08 <main@@Base+0x11fd4>
   278c4:	ldrb	r0, [r2]
   278c8:	cmp	r0, #125	; 0x7d
   278cc:	bne	274c0 <main@@Base+0x1178c>
   278d0:	b	27d14 <main@@Base+0x11fe0>
   278d4:	ldr	r4, [sp, #16]
   278d8:	bne	278e8 <main@@Base+0x11bb4>
   278dc:	ldrb	r0, [sl, #17]!
   278e0:	cmp	r0, #32
   278e4:	bhi	278f8 <main@@Base+0x11bc4>
   278e8:	mov	r0, r7
   278ec:	mov	r2, r4
   278f0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   278f4:	mov	sl, r0
   278f8:	cmp	sl, r4
   278fc:	beq	27938 <main@@Base+0x11c04>
   27900:	ldrb	r0, [sl]
   27904:	cmp	r0, #58	; 0x3a
   27908:	bne	27938 <main@@Base+0x11c04>
   2790c:	ldr	r0, [sp, #16]
   27910:	add	r1, sl, #1
   27914:	sub	r0, r0, r1
   27918:	cmp	r0, #2
   2791c:	blt	279e0 <main@@Base+0x11cac>
   27920:	ldrb	r0, [r1]
   27924:	cmp	r0, #32
   27928:	bls	279cc <main@@Base+0x11c98>
   2792c:	ldr	r7, [sp, #24]
   27930:	mov	sl, r1
   27934:	b	279f0 <main@@Base+0x11cbc>
   27938:	ldr	r2, [sp, #16]
   2793c:	mov	r0, r7
   27940:	mov	r1, sl
   27944:	mov	r3, #4
   27948:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2794c:	b	279ec <main@@Base+0x11cb8>
   27950:	ldr	r4, [sp, #16]
   27954:	bne	27964 <main@@Base+0x11c30>
   27958:	ldrb	r0, [sl, #23]!
   2795c:	cmp	r0, #32
   27960:	bhi	27974 <main@@Base+0x11c40>
   27964:	mov	r0, r7
   27968:	mov	r2, r4
   2796c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   27970:	mov	sl, r0
   27974:	cmp	sl, r4
   27978:	beq	279b4 <main@@Base+0x11c80>
   2797c:	ldrb	r0, [sl]
   27980:	cmp	r0, #58	; 0x3a
   27984:	bne	279b4 <main@@Base+0x11c80>
   27988:	ldr	r0, [sp, #16]
   2798c:	add	r1, sl, #1
   27990:	sub	r0, r0, r1
   27994:	cmp	r0, #2
   27998:	blt	27b6c <main@@Base+0x11e38>
   2799c:	ldrb	r0, [r1]
   279a0:	cmp	r0, #32
   279a4:	bls	27b58 <main@@Base+0x11e24>
   279a8:	ldr	r7, [sp, #24]
   279ac:	mov	sl, r1
   279b0:	b	27b7c <main@@Base+0x11e48>
   279b4:	ldr	r2, [sp, #16]
   279b8:	mov	r0, r7
   279bc:	mov	r1, sl
   279c0:	mov	r3, #4
   279c4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   279c8:	b	27b78 <main@@Base+0x11e44>
   279cc:	ldr	r7, [sp, #24]
   279d0:	bne	279e0 <main@@Base+0x11cac>
   279d4:	ldrb	r0, [sl, #2]!
   279d8:	cmp	r0, #32
   279dc:	bhi	279f0 <main@@Base+0x11cbc>
   279e0:	ldr	r2, [sp, #16]
   279e4:	mov	r0, r7
   279e8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   279ec:	mov	sl, r0
   279f0:	cmp	r8, sl
   279f4:	beq	277fc <main@@Base+0x11ac8>
   279f8:	ldr	r2, [sp, #16]
   279fc:	mov	r6, #0
   27a00:	str	r6, [fp, #-36]	; 0xffffffdc
   27a04:	str	r6, [fp, #-40]	; 0xffffffd8
   27a08:	str	r6, [sp, #36]	; 0x24
   27a0c:	str	r6, [sp, #32]
   27a10:	str	r6, [sp, #44]	; 0x2c
   27a14:	cmp	sl, r2
   27a18:	beq	27a74 <main@@Base+0x11d40>
   27a1c:	sub	r0, fp, #40	; 0x28
   27a20:	mov	r1, sl
   27a24:	add	r3, sp, #44	; 0x2c
   27a28:	str	r0, [sp]
   27a2c:	mov	r0, r7
   27a30:	bl	3314c <flatcc_json_parser_integer@@Base>
   27a34:	cmp	r0, sl
   27a38:	beq	27a80 <main@@Base+0x11d4c>
   27a3c:	mov	r9, r0
   27a40:	ldr	r0, [sp, #44]	; 0x2c
   27a44:	ldr	r6, [fp, #-40]	; 0xffffffd8
   27a48:	ldr	r5, [fp, #-36]	; 0xffffffdc
   27a4c:	cmp	r0, #0
   27a50:	beq	27a90 <main@@Base+0x11d5c>
   27a54:	subs	r0, r6, #1
   27a58:	sbcs	r0, r5, #-2147483648	; 0x80000000
   27a5c:	bcc	27ac0 <main@@Base+0x11d8c>
   27a60:	ldr	r7, [sp, #24]
   27a64:	ldr	r2, [sp, #16]
   27a68:	mov	r1, r9
   27a6c:	mov	r3, #8
   27a70:	b	27aa8 <main@@Base+0x11d74>
   27a74:	mov	r5, #0
   27a78:	mov	r9, r2
   27a7c:	b	27ad4 <main@@Base+0x11da0>
   27a80:	mov	r6, #0
   27a84:	mov	r5, #0
   27a88:	mov	r9, sl
   27a8c:	b	27ad0 <main@@Base+0x11d9c>
   27a90:	cmn	r5, #1
   27a94:	bgt	27ac8 <main@@Base+0x11d94>
   27a98:	ldr	r7, [sp, #24]
   27a9c:	ldr	r2, [sp, #16]
   27aa0:	mov	r1, r9
   27aa4:	mov	r3, #7
   27aa8:	mov	r0, r7
   27aac:	bl	3133c <flatcc_json_parser_set_error@@Base>
   27ab0:	mov	r9, r0
   27ab4:	mov	r6, #0
   27ab8:	mov	r5, #0
   27abc:	b	27ad4 <main@@Base+0x11da0>
   27ac0:	rsbs	r6, r6, #0
   27ac4:	rsc	r5, r5, #0
   27ac8:	str	r6, [sp, #32]
   27acc:	str	r5, [sp, #36]	; 0x24
   27ad0:	ldr	r7, [sp, #24]
   27ad4:	cmp	sl, r9
   27ad8:	bne	27b1c <main@@Base+0x11de8>
   27adc:	ldr	r2, [sp, #16]
   27ae0:	movw	r3, #33428	; 0x8294
   27ae4:	add	r0, sp, #32
   27ae8:	mov	r1, sl
   27aec:	movt	r3, #5
   27af0:	str	r0, [sp]
   27af4:	mov	r0, r7
   27af8:	bl	233f0 <main@@Base+0xd6bc>
   27afc:	cmp	r0, sl
   27b00:	mov	r9, r0
   27b04:	ldrne	r0, [sp, #16]
   27b08:	cmpne	r9, r0
   27b0c:	beq	27e88 <main@@Base+0x12154>
   27b10:	ldr	r6, [sp, #32]
   27b14:	ldr	r5, [sp, #36]	; 0x24
   27b18:	ldr	r7, [sp, #24]
   27b1c:	orrs	r0, r6, r5
   27b20:	bne	27b30 <main@@Base+0x11dfc>
   27b24:	ldrb	r0, [r7, #8]
   27b28:	tst	r0, #2
   27b2c:	beq	27ca8 <main@@Base+0x11f74>
   27b30:	ldr	r0, [r7]
   27b34:	mov	r1, #0
   27b38:	mov	r2, #8
   27b3c:	mov	r3, #8
   27b40:	bl	2e760 <flatcc_builder_table_add@@Base>
   27b44:	cmp	r0, #0
   27b48:	beq	27e88 <main@@Base+0x12154>
   27b4c:	str	r6, [r0]
   27b50:	str	r5, [r0, #4]
   27b54:	b	27ca8 <main@@Base+0x11f74>
   27b58:	ldr	r7, [sp, #24]
   27b5c:	bne	27b6c <main@@Base+0x11e38>
   27b60:	ldrb	r0, [sl, #2]!
   27b64:	cmp	r0, #32
   27b68:	bhi	27b7c <main@@Base+0x11e48>
   27b6c:	ldr	r2, [sp, #16]
   27b70:	mov	r0, r7
   27b74:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   27b78:	mov	sl, r0
   27b7c:	cmp	r8, sl
   27b80:	beq	277fc <main@@Base+0x11ac8>
   27b84:	ldr	r2, [sp, #16]
   27b88:	mov	r5, #0
   27b8c:	str	r5, [fp, #-36]	; 0xffffffdc
   27b90:	str	r5, [fp, #-40]	; 0xffffffd8
   27b94:	str	r5, [sp, #44]	; 0x2c
   27b98:	str	r5, [sp, #32]
   27b9c:	cmp	sl, r2
   27ba0:	beq	27be8 <main@@Base+0x11eb4>
   27ba4:	sub	r0, fp, #40	; 0x28
   27ba8:	mov	r1, sl
   27bac:	add	r3, sp, #32
   27bb0:	str	r0, [sp]
   27bb4:	mov	r0, r7
   27bb8:	bl	3314c <flatcc_json_parser_integer@@Base>
   27bbc:	cmp	r0, sl
   27bc0:	beq	27bf0 <main@@Base+0x11ebc>
   27bc4:	mov	r9, r0
   27bc8:	ldr	r0, [sp, #32]
   27bcc:	cmp	r0, #0
   27bd0:	beq	27bf8 <main@@Base+0x11ec4>
   27bd4:	ldr	r7, [sp, #24]
   27bd8:	ldr	r2, [sp, #16]
   27bdc:	mov	r1, r9
   27be0:	mov	r3, #8
   27be4:	b	27c14 <main@@Base+0x11ee0>
   27be8:	mov	r9, r2
   27bec:	b	27c30 <main@@Base+0x11efc>
   27bf0:	mov	r9, sl
   27bf4:	b	27c2c <main@@Base+0x11ef8>
   27bf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27bfc:	cmp	r0, #0
   27c00:	beq	27c24 <main@@Base+0x11ef0>
   27c04:	ldr	r7, [sp, #24]
   27c08:	ldr	r2, [sp, #16]
   27c0c:	mov	r1, r9
   27c10:	mov	r3, #7
   27c14:	mov	r0, r7
   27c18:	bl	3133c <flatcc_json_parser_set_error@@Base>
   27c1c:	mov	r9, r0
   27c20:	b	27c30 <main@@Base+0x11efc>
   27c24:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27c28:	str	r5, [sp, #44]	; 0x2c
   27c2c:	ldr	r7, [sp, #24]
   27c30:	cmp	sl, r9
   27c34:	bne	27c74 <main@@Base+0x11f40>
   27c38:	ldr	r2, [sp, #16]
   27c3c:	movw	r3, #33416	; 0x8288
   27c40:	add	r0, sp, #44	; 0x2c
   27c44:	mov	r1, sl
   27c48:	movt	r3, #5
   27c4c:	str	r0, [sp]
   27c50:	mov	r0, r7
   27c54:	bl	235d8 <main@@Base+0xd8a4>
   27c58:	cmp	r0, sl
   27c5c:	mov	r9, r0
   27c60:	ldrne	r0, [sp, #16]
   27c64:	cmpne	r9, r0
   27c68:	beq	27e88 <main@@Base+0x12154>
   27c6c:	ldr	r5, [sp, #44]	; 0x2c
   27c70:	ldr	r7, [sp, #24]
   27c74:	cmp	r5, #0
   27c78:	bne	27c88 <main@@Base+0x11f54>
   27c7c:	ldrb	r0, [r7, #8]
   27c80:	tst	r0, #2
   27c84:	beq	27ca8 <main@@Base+0x11f74>
   27c88:	ldr	r0, [r7]
   27c8c:	mov	r1, #1
   27c90:	mov	r2, #4
   27c94:	mov	r3, #4
   27c98:	bl	2e760 <flatcc_builder_table_add@@Base>
   27c9c:	cmp	r0, #0
   27ca0:	beq	27e88 <main@@Base+0x12154>
   27ca4:	str	r5, [r0]
   27ca8:	ldr	r8, [sp, #16]
   27cac:	b	27814 <main@@Base+0x11ae0>
   27cb0:	mov	r0, r7
   27cb4:	mov	r1, r2
   27cb8:	mov	r2, r8
   27cbc:	mov	r3, #10
   27cc0:	b	255c8 <main@@Base+0xf894>
   27cc4:	mov	r9, r8
   27cc8:	b	27398 <main@@Base+0x11664>
   27ccc:	cmp	r0, #125	; 0x7d
   27cd0:	bne	27d94 <main@@Base+0x12060>
   27cd4:	add	r1, r2, #1
   27cd8:	sub	r0, r8, r1
   27cdc:	cmp	r0, #2
   27ce0:	blt	27dcc <main@@Base+0x12098>
   27ce4:	ldrb	r0, [r1]
   27ce8:	cmp	r0, #32
   27cec:	bls	27da8 <main@@Base+0x12074>
   27cf0:	ldr	r8, [sp, #16]
   27cf4:	ldr	r7, [sp, #24]
   27cf8:	movw	sl, #0
   27cfc:	mov	r9, r1
   27d00:	movt	sl, #26418	; 0x6732
   27d04:	b	27398 <main@@Base+0x11664>
   27d08:	mov	r0, r7
   27d0c:	mov	r1, r8
   27d10:	b	27d9c <main@@Base+0x12068>
   27d14:	add	r1, r2, #1
   27d18:	sub	r0, r8, r1
   27d1c:	cmp	r0, #2
   27d20:	blt	27dcc <main@@Base+0x12098>
   27d24:	ldrb	r0, [r1]
   27d28:	cmp	r0, #32
   27d2c:	bls	27db8 <main@@Base+0x12084>
   27d30:	mov	r9, r1
   27d34:	b	27398 <main@@Base+0x11664>
   27d38:	bne	27d4c <main@@Base+0x12018>
   27d3c:	ldrb	r0, [r2, #2]!
   27d40:	mov	r9, r2
   27d44:	cmp	r0, #32
   27d48:	bhi	255d0 <main@@Base+0xf89c>
   27d4c:	mov	r0, r7
   27d50:	mov	r2, r8
   27d54:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   27d58:	b	255cc <main@@Base+0xf898>
   27d5c:	mov	r0, r7
   27d60:	mov	r1, r2
   27d64:	mov	r2, r8
   27d68:	mov	r3, #10
   27d6c:	b	256fc <main@@Base+0xf9c8>
   27d70:	bne	27d84 <main@@Base+0x12050>
   27d74:	ldrb	r0, [r2, #2]!
   27d78:	mov	sl, r2
   27d7c:	cmp	r0, #32
   27d80:	bhi	25704 <main@@Base+0xf9d0>
   27d84:	mov	r0, r7
   27d88:	mov	r2, r8
   27d8c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   27d90:	b	25700 <main@@Base+0xf9cc>
   27d94:	mov	r0, r7
   27d98:	mov	r1, r2
   27d9c:	mov	r2, r8
   27da0:	mov	r3, #10
   27da4:	b	27390 <main@@Base+0x1165c>
   27da8:	ldr	r8, [sp, #16]
   27dac:	ldr	r7, [sp, #24]
   27db0:	movw	sl, #0
   27db4:	movt	sl, #26418	; 0x6732
   27db8:	bne	27dcc <main@@Base+0x12098>
   27dbc:	ldrb	r0, [r2, #2]!
   27dc0:	mov	r9, r2
   27dc4:	cmp	r0, #32
   27dc8:	bhi	27398 <main@@Base+0x11664>
   27dcc:	mov	r0, r7
   27dd0:	mov	r2, r8
   27dd4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   27dd8:	b	27394 <main@@Base+0x11660>
   27ddc:	ldr	r4, [sp, #20]
   27de0:	mov	sl, r8
   27de4:	b	24f34 <main@@Base+0xf200>
   27de8:	cmp	r0, #125	; 0x7d
   27dec:	bne	27e20 <main@@Base+0x120ec>
   27df0:	add	r1, r2, #1
   27df4:	sub	r0, r8, r1
   27df8:	cmp	r0, #2
   27dfc:	blt	27e48 <main@@Base+0x12114>
   27e00:	ldrb	r0, [r1]
   27e04:	cmp	r0, #32
   27e08:	bls	27e34 <main@@Base+0x12100>
   27e0c:	mov	sl, r1
   27e10:	b	24f34 <main@@Base+0xf200>
   27e14:	mov	r0, r7
   27e18:	mov	r1, r8
   27e1c:	b	27e28 <main@@Base+0x120f4>
   27e20:	mov	r0, r7
   27e24:	mov	r1, r2
   27e28:	mov	r2, r8
   27e2c:	mov	r3, #10
   27e30:	b	24f2c <main@@Base+0xf1f8>
   27e34:	bne	27e48 <main@@Base+0x12114>
   27e38:	ldrb	r0, [r2, #2]!
   27e3c:	mov	sl, r2
   27e40:	cmp	r0, #32
   27e44:	bhi	24f34 <main@@Base+0xf200>
   27e48:	mov	r0, r7
   27e4c:	mov	r2, r8
   27e50:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   27e54:	b	24f30 <main@@Base+0xf1fc>
   27e58:	mov	r7, r1
   27e5c:	b	27e90 <main@@Base+0x1215c>
   27e60:	ldr	r7, [sp, #24]
   27e64:	mov	sl, r9
   27e68:	b	24f40 <main@@Base+0xf20c>
   27e6c:	ldr	r8, [sp, #16]
   27e70:	b	27e7c <main@@Base+0x12148>
   27e74:	ldr	r8, [sp, #16]
   27e78:	ldr	r7, [sp, #24]
   27e7c:	mov	r0, r7
   27e80:	mov	r1, sl
   27e84:	b	27e98 <main@@Base+0x12164>
   27e88:	ldr	r8, [sp, #16]
   27e8c:	ldr	r7, [sp, #24]
   27e90:	mov	r0, r7
   27e94:	mov	r1, r9
   27e98:	mov	r2, r8
   27e9c:	mov	r3, #33	; 0x21
   27ea0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   27ea4:	mov	sl, r0
   27ea8:	b	24f40 <main@@Base+0xf20c>
   27eac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27eb0:	add	fp, sp, #28
   27eb4:	sub	sp, sp, #44	; 0x2c
   27eb8:	mov	sl, r0
   27ebc:	mov	r0, #0
   27ec0:	mov	r7, r1
   27ec4:	mov	r1, #10
   27ec8:	mov	r9, r3
   27ecc:	mov	r4, r2
   27ed0:	str	r0, [r3]
   27ed4:	ldr	r0, [sl]
   27ed8:	bl	2d514 <flatcc_builder_start_table@@Base>
   27edc:	cmp	r0, #0
   27ee0:	beq	27f08 <main@@Base+0x121d4>
   27ee4:	mov	r0, sl
   27ee8:	mov	r1, r7
   27eec:	mov	r2, r4
   27ef0:	mov	r3, #33	; 0x21
   27ef4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   27ef8:	mov	r7, r0
   27efc:	mov	r0, r7
   27f00:	sub	sp, fp, #28
   27f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f08:	sub	r0, fp, #32
   27f0c:	mov	r1, r7
   27f10:	mov	r2, r4
   27f14:	mov	r3, #5
   27f18:	str	r0, [sp]
   27f1c:	mov	r0, sl
   27f20:	bl	3384c <flatcc_json_parser_prepare_unions@@Base>
   27f24:	cmp	r0, r4
   27f28:	beq	27ee4 <main@@Base+0x121b0>
   27f2c:	cmp	r7, r4
   27f30:	beq	27f64 <main@@Base+0x12230>
   27f34:	ldrb	r0, [r7]
   27f38:	cmp	r0, #123	; 0x7b
   27f3c:	bne	27f64 <main@@Base+0x12230>
   27f40:	add	r1, r7, #1
   27f44:	sub	r0, r4, r1
   27f48:	cmp	r0, #2
   27f4c:	blt	27fc8 <main@@Base+0x12294>
   27f50:	ldrb	r0, [r1]
   27f54:	cmp	r0, #32
   27f58:	bls	27fb8 <main@@Base+0x12284>
   27f5c:	mov	r7, r1
   27f60:	b	27fd8 <main@@Base+0x122a4>
   27f64:	mov	r0, sl
   27f68:	mov	r1, r7
   27f6c:	mov	r2, r4
   27f70:	mov	r3, #21
   27f74:	bl	3133c <flatcc_json_parser_set_error@@Base>
   27f78:	mov	r7, r0
   27f7c:	ldr	r0, [sl, #20]
   27f80:	cmp	r0, #0
   27f84:	bne	27ee4 <main@@Base+0x121b0>
   27f88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27f8c:	mov	r0, sl
   27f90:	mov	r1, r7
   27f94:	mov	r2, r4
   27f98:	bl	338d0 <flatcc_json_parser_finalize_unions@@Base>
   27f9c:	mov	r7, r0
   27fa0:	ldr	r0, [sl]
   27fa4:	bl	2de74 <flatcc_builder_end_table@@Base>
   27fa8:	cmp	r0, #0
   27fac:	str	r0, [r9]
   27fb0:	bne	27efc <main@@Base+0x121c8>
   27fb4:	b	27ee4 <main@@Base+0x121b0>
   27fb8:	bne	27fc8 <main@@Base+0x12294>
   27fbc:	ldrb	r0, [r7, #2]!
   27fc0:	cmp	r0, #32
   27fc4:	bhi	27fd8 <main@@Base+0x122a4>
   27fc8:	mov	r0, sl
   27fcc:	mov	r2, r4
   27fd0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   27fd4:	mov	r7, r0
   27fd8:	cmp	r7, r4
   27fdc:	mov	r3, r4
   27fe0:	beq	2801c <main@@Base+0x122e8>
   27fe4:	ldrb	r0, [r7]
   27fe8:	cmp	r0, #125	; 0x7d
   27fec:	bne	28018 <main@@Base+0x122e4>
   27ff0:	add	r1, r7, #1
   27ff4:	sub	r0, r4, r1
   27ff8:	cmp	r0, #2
   27ffc:	blt	29234 <main@@Base+0x13500>
   28000:	ldrb	r0, [r1]
   28004:	cmp	r0, #32
   28008:	bhi	291f8 <main@@Base+0x134c4>
   2800c:	bne	29234 <main@@Base+0x13500>
   28010:	ldrb	r0, [r7, #2]!
   28014:	b	2922c <main@@Base+0x134f8>
   28018:	mov	r3, r7
   2801c:	movw	r0, #24436	; 0x5f74
   28020:	str	r9, [sp, #32]
   28024:	str	r4, [sp, #36]	; 0x24
   28028:	movt	r0, #29299	; 0x7273
   2802c:	add	r0, r0, #65536	; 0x10000
   28030:	add	r0, r0, #16777216	; 0x1000000
   28034:	str	r0, [sp, #24]
   28038:	cmp	r3, r4
   2803c:	mov	r5, r4
   28040:	beq	28070 <main@@Base+0x1233c>
   28044:	ldrb	r0, [r3]
   28048:	cmp	r0, #34	; 0x22
   2804c:	bne	28058 <main@@Base+0x12324>
   28050:	add	r5, r3, #1
   28054:	b	28070 <main@@Base+0x1233c>
   28058:	mov	r1, r3
   2805c:	mov	r0, sl
   28060:	mov	r2, r4
   28064:	mov	r3, #5
   28068:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2806c:	mov	r5, r0
   28070:	sub	ip, r4, r5
   28074:	mov	r0, #8
   28078:	cmp	ip, #8
   2807c:	movcc	r0, ip
   28080:	sub	r6, r0, #1
   28084:	cmp	r6, #7
   28088:	bhi	29100 <main@@Base+0x133cc>
   2808c:	mov	r9, sl
   28090:	add	sl, pc, #32
   28094:	mov	r1, #0
   28098:	mov	lr, #0
   2809c:	mov	r8, #0
   280a0:	mov	r4, #0
   280a4:	mov	r3, #0
   280a8:	mov	r7, #0
   280ac:	mov	r0, #0
   280b0:	mov	r2, #0
   280b4:	ldr	pc, [sl, r6, lsl #2]
   280b8:	andeq	r8, r2, ip, lsl r1
   280bc:	andeq	r8, r2, r4, lsl r1
   280c0:	andeq	r8, r2, ip, lsl #2
   280c4:	andeq	r8, r2, r4, lsl #2
   280c8:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   280cc:	andeq	r8, r2, ip, ror #1
   280d0:	ldrdeq	r8, [r2], -ip
   280d4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   280d8:	ldrb	lr, [r5, #7]
   280dc:	ldrb	r0, [r5, #6]
   280e0:	mov	r8, r1
   280e4:	orr	r0, lr, r0, lsl #8
   280e8:	mov	r1, r0
   280ec:	ldrb	r0, [r5, #5]
   280f0:	mov	r4, r8
   280f4:	orr	r1, r1, r0, lsl #16
   280f8:	ldrb	r0, [r5, #4]
   280fc:	mov	r3, r4
   28100:	orr	r1, r1, r0, lsl #24
   28104:	ldrb	r0, [r5, #3]
   28108:	orr	r7, r0, r3
   2810c:	ldrb	r0, [r5, #2]
   28110:	orr	r0, r7, r0, lsl #8
   28114:	ldrb	r2, [r5, #1]
   28118:	orr	r2, r0, r2, lsl #16
   2811c:	ldrb	r0, [r5]
   28120:	orr	r2, r2, r0, lsl #24
   28124:	movw	r0, #29797	; 0x7465
   28128:	movt	r0, #24931	; 0x6163
   2812c:	subs	r0, r1, r0
   28130:	movw	r0, #24946	; 0x6172
   28134:	movt	r0, #25448	; 0x6368
   28138:	sbcs	r0, r2, r0
   2813c:	bcs	282a4 <main@@Base+0x12570>
   28140:	movw	r0, #29817	; 0x7479
   28144:	movw	r3, #28005	; 0x6d65
   28148:	ldr	r4, [sp, #36]	; 0x24
   2814c:	mov	sl, r9
   28150:	movt	r0, #28511	; 0x6f5f
   28154:	movt	r3, #25441	; 0x6361
   28158:	eor	r0, r1, r0
   2815c:	eor	r3, r2, r3
   28160:	orrs	r0, r0, r3
   28164:	beq	285d0 <main@@Base+0x1289c>
   28168:	movw	r0, #28265	; 0x6e69
   2816c:	movw	r7, #29793	; 0x7461
   28170:	ldr	r9, [sp, #32]
   28174:	movt	r0, #26479	; 0x676f
   28178:	movt	r7, #24942	; 0x616e
   2817c:	eor	r0, r1, r0
   28180:	eor	r2, r2, r7
   28184:	orrs	r0, r0, r2
   28188:	bne	28654 <main@@Base+0x12920>
   2818c:	add	r8, r5, #8
   28190:	mov	r1, #8
   28194:	sub	lr, r4, r8
   28198:	cmp	lr, #8
   2819c:	movcc	r1, lr
   281a0:	sub	r6, r1, #1
   281a4:	cmp	r6, #7
   281a8:	bhi	28f48 <main@@Base+0x13214>
   281ac:	str	r8, [sp, #28]
   281b0:	add	r0, pc, #32
   281b4:	mov	r1, r5
   281b8:	mov	r4, #0
   281bc:	mov	ip, #0
   281c0:	mov	r8, #0
   281c4:	mov	r3, #0
   281c8:	mov	r7, #0
   281cc:	mov	r5, #0
   281d0:	mov	r2, #0
   281d4:	ldr	pc, [r0, r6, lsl #2]
   281d8:	andeq	r8, r2, r4, lsr r2
   281dc:	andeq	r8, r2, ip, lsr #4
   281e0:	andeq	r8, r2, r4, lsr #4
   281e4:	andeq	r8, r2, ip, lsl r2
   281e8:	andeq	r8, r2, r0, lsl r2
   281ec:	andeq	r8, r2, r0, lsl #4
   281f0:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   281f4:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   281f8:	ldrb	r0, [r1, #14]
   281fc:	lsl	ip, r0, #8
   28200:	ldrb	r0, [r1, #13]
   28204:	mov	r8, r4
   28208:	orr	r0, ip, r0, lsl #16
   2820c:	mov	r4, r0
   28210:	ldrb	r0, [r1, #12]
   28214:	mov	r3, r8
   28218:	orr	r4, r4, r0, lsl #24
   2821c:	ldrb	r0, [r1, #11]
   28220:	orr	r7, r0, r3
   28224:	ldrb	r0, [r1, #10]
   28228:	orr	r5, r7, r0, lsl #8
   2822c:	ldrb	r0, [r1, #9]
   28230:	orr	r2, r5, r0, lsl #16
   28234:	ldr	r8, [sp, #28]
   28238:	mov	r7, r1
   2823c:	movw	r3, #25856	; 0x6500
   28240:	movt	r3, #31088	; 0x7970
   28244:	ldrb	r0, [r8]
   28248:	orr	r1, r2, r0, lsl #24
   2824c:	ldr	r0, [sp, #24]
   28250:	bic	r2, r4, #255	; 0xff
   28254:	eor	r2, r2, r3
   28258:	eor	r0, r1, r0
   2825c:	orrs	r0, r2, r0
   28260:	bne	287a4 <main@@Base+0x12a70>
   28264:	ldr	r4, [sp, #36]	; 0x24
   28268:	cmp	lr, #8
   2826c:	blt	28f48 <main@@Base+0x13214>
   28270:	ldrb	r0, [r7, #15]
   28274:	mov	r2, r7
   28278:	cmp	r0, #34	; 0x22
   2827c:	bne	28f48 <main@@Base+0x13214>
   28280:	add	r1, r2, #16
   28284:	sub	r0, r4, r1
   28288:	cmp	r0, #2
   2828c:	blt	289b8 <main@@Base+0x12c84>
   28290:	ldrb	r0, [r1]
   28294:	cmp	r0, #32
   28298:	bls	289a8 <main@@Base+0x12c74>
   2829c:	mov	r2, r1
   282a0:	b	289c8 <main@@Base+0x12c94>
   282a4:	movw	r0, #26720	; 0x6860
   282a8:	ldr	r4, [sp, #36]	; 0x24
   282ac:	mov	sl, r9
   282b0:	movt	r0, #24419	; 0x5f63
   282b4:	subs	r0, r0, r1
   282b8:	movw	r0, #26990	; 0x696e
   282bc:	movt	r0, #28001	; 0x6d61
   282c0:	sbcs	r0, r0, r2
   282c4:	bcc	28408 <main@@Base+0x126d4>
   282c8:	movw	r0, #29797	; 0x7465
   282cc:	movt	r0, #24931	; 0x6163
   282d0:	eor	r0, r1, r0
   282d4:	movw	r1, #24946	; 0x6172
   282d8:	movt	r1, #25448	; 0x6368
   282dc:	eor	r1, r2, r1
   282e0:	orrs	r0, r0, r1
   282e4:	bne	285b8 <main@@Base+0x12884>
   282e8:	add	r7, r5, #8
   282ec:	ldr	r9, [sp, #32]
   282f0:	mov	r1, #8
   282f4:	sub	lr, r4, r7
   282f8:	cmp	lr, #8
   282fc:	movcc	r1, lr
   28300:	sub	r6, r1, #1
   28304:	cmp	r6, #7
   28308:	bhi	2903c <main@@Base+0x13308>
   2830c:	str	r7, [sp, #28]
   28310:	add	r0, pc, #32
   28314:	mov	r1, r5
   28318:	mov	r8, #0
   2831c:	mov	ip, #0
   28320:	mov	r4, #0
   28324:	mov	r3, #0
   28328:	mov	r7, #0
   2832c:	mov	r5, #0
   28330:	mov	r2, #0
   28334:	ldr	pc, [r0, r6, lsl #2]
   28338:	muleq	r2, r4, r3
   2833c:	andeq	r8, r2, ip, lsl #7
   28340:	andeq	r8, r2, r4, lsl #7
   28344:	andeq	r8, r2, ip, ror r3
   28348:	andeq	r8, r2, r0, ror r3
   2834c:	andeq	r8, r2, r0, ror #6
   28350:	andeq	r8, r2, r8, asr r3
   28354:	andeq	r8, r2, r8, asr r3
   28358:	ldrb	r0, [r1, #14]
   2835c:	lsl	ip, r0, #8
   28360:	ldrb	r0, [r1, #13]
   28364:	mov	r4, r8
   28368:	orr	r0, ip, r0, lsl #16
   2836c:	mov	r8, r0
   28370:	ldrb	r0, [r1, #12]
   28374:	mov	r3, r4
   28378:	orr	r8, r8, r0, lsl #24
   2837c:	ldrb	r0, [r1, #11]
   28380:	orr	r7, r0, r3
   28384:	ldrb	r0, [r1, #10]
   28388:	orr	r5, r7, r0, lsl #8
   2838c:	ldrb	r0, [r1, #9]
   28390:	orr	r2, r5, r0, lsl #16
   28394:	ldr	r7, [sp, #28]
   28398:	mov	r3, r1
   2839c:	movw	r1, #25856	; 0x6500
   283a0:	bic	r0, r8, #255	; 0xff
   283a4:	movt	r1, #31088	; 0x7970
   283a8:	eor	r0, r0, r1
   283ac:	ldrb	r1, [r7]
   283b0:	orr	r1, r2, r1, lsl #24
   283b4:	movw	r2, #24436	; 0x5f74
   283b8:	movt	r2, #29299	; 0x7273
   283bc:	eor	r2, r1, r2
   283c0:	orrs	r0, r0, r2
   283c4:	bne	287f8 <main@@Base+0x12ac4>
   283c8:	ldr	r4, [sp, #36]	; 0x24
   283cc:	cmp	lr, #8
   283d0:	blt	2903c <main@@Base+0x13308>
   283d4:	ldrb	r0, [r3, #15]
   283d8:	mov	r2, r3
   283dc:	cmp	r0, #34	; 0x22
   283e0:	bne	2903c <main@@Base+0x13308>
   283e4:	add	r1, r2, #16
   283e8:	sub	r0, r4, r1
   283ec:	cmp	r0, #2
   283f0:	blt	28a98 <main@@Base+0x12d64>
   283f4:	ldrb	r0, [r1]
   283f8:	cmp	r0, #32
   283fc:	bls	28a88 <main@@Base+0x12d54>
   28400:	mov	r2, r1
   28404:	b	28aa8 <main@@Base+0x12d74>
   28408:	movw	r0, #26979	; 0x6963
   2840c:	movw	r3, #25701	; 0x6465
   28410:	movt	r0, #24427	; 0x5f6b
   28414:	movt	r3, #29545	; 0x7369
   28418:	eor	r0, r1, r0
   2841c:	eor	r3, r2, r3
   28420:	orrs	r0, r0, r3
   28424:	beq	286a4 <main@@Base+0x12970>
   28428:	movw	r0, #26721	; 0x6861
   2842c:	movt	r0, #24419	; 0x5f63
   28430:	eor	r0, r1, r0
   28434:	movw	r1, #26990	; 0x696e
   28438:	movt	r1, #28001	; 0x6d61
   2843c:	eor	r1, r2, r1
   28440:	orrs	r0, r0, r1
   28444:	bne	285b8 <main@@Base+0x12884>
   28448:	add	r7, r5, #8
   2844c:	mov	r0, #8
   28450:	sub	lr, r4, r7
   28454:	cmp	lr, #8
   28458:	movcc	r0, lr
   2845c:	sub	r6, r0, #1
   28460:	cmp	r6, #7
   28464:	bhi	2890c <main@@Base+0x12bd8>
   28468:	str	r7, [sp, #28]
   2846c:	add	r4, pc, #32
   28470:	mov	r1, #0
   28474:	mov	ip, #0
   28478:	mov	sl, #0
   2847c:	mov	r8, #0
   28480:	mov	r3, #0
   28484:	mov	r7, #0
   28488:	mov	r2, #0
   2848c:	mov	r0, #0
   28490:	ldr	pc, [r4, r6, lsl #2]
   28494:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   28498:	strdeq	r8, [r2], -r0
   2849c:	andeq	r8, r2, r8, ror #9
   284a0:	andeq	r8, r2, r0, ror #9
   284a4:	ldrdeq	r8, [r2], -r4
   284a8:	andeq	r8, r2, r8, asr #9
   284ac:			; <UNDEFINED> instruction: 0x000284b8
   284b0:			; <UNDEFINED> instruction: 0x000284b4
   284b4:	ldrb	ip, [r5, #15]
   284b8:	ldrb	r0, [r5, #14]
   284bc:	mov	sl, r1
   284c0:	orr	r0, ip, r0, lsl #8
   284c4:	mov	r1, r0
   284c8:	ldrb	r0, [r5, #13]
   284cc:	mov	r8, sl
   284d0:	orr	r1, r1, r0, lsl #16
   284d4:	ldrb	r0, [r5, #12]
   284d8:	mov	r3, r8
   284dc:	orr	r1, r1, r0, lsl #24
   284e0:	ldrb	r0, [r5, #11]
   284e4:	orr	r7, r0, r3
   284e8:	ldrb	r0, [r5, #10]
   284ec:	orr	r2, r7, r0, lsl #8
   284f0:	ldrb	r0, [r5, #9]
   284f4:	orr	r0, r2, r0, lsl #16
   284f8:	ldr	r7, [sp, #28]
   284fc:	movw	r2, #24436	; 0x5f74
   28500:	movt	r2, #25970	; 0x6572
   28504:	eor	r2, r1, r2
   28508:	ldrb	r3, [r7]
   2850c:	orr	r0, r0, r3, lsl #24
   28510:	movw	r3, #25460	; 0x6374
   28514:	movt	r3, #29281	; 0x7261
   28518:	eor	r3, r0, r3
   2851c:	orrs	r2, r2, r3
   28520:	bne	2884c <main@@Base+0x12b18>
   28524:	ldr	r4, [sp, #36]	; 0x24
   28528:	mov	r3, r5
   2852c:	add	r5, r5, #16
   28530:	mov	r2, #8
   28534:	mov	sl, r9
   28538:	sub	r0, r4, r5
   2853c:	cmp	r0, #8
   28540:	movcc	r2, r0
   28544:	sub	r1, r2, #3
   28548:	cmp	r1, #6
   2854c:	bcs	28918 <main@@Base+0x12be4>
   28550:	ldrb	r1, [r3, #18]
   28554:	ldr	r9, [sp, #32]
   28558:	lsl	r1, r1, #8
   2855c:	ldrb	r2, [r3, #17]
   28560:	orr	r1, r1, r2, lsl #16
   28564:	ldrb	r2, [r5]
   28568:	bic	r1, r1, #255	; 0xff
   2856c:	orr	r1, r1, r2, lsl #24
   28570:	movw	r2, #25856	; 0x6500
   28574:	movt	r2, #31088	; 0x7970
   28578:	teq	r1, r2
   2857c:	bne	29100 <main@@Base+0x133cc>
   28580:	cmp	r0, #4
   28584:	blt	29100 <main@@Base+0x133cc>
   28588:	ldrb	r0, [r3, #19]
   2858c:	cmp	r0, #34	; 0x22
   28590:	bne	29100 <main@@Base+0x133cc>
   28594:	add	r1, r3, #20
   28598:	sub	r0, r4, r1
   2859c:	cmp	r0, #2
   285a0:	blt	28ea8 <main@@Base+0x13174>
   285a4:	ldrb	r0, [r1]
   285a8:	cmp	r0, #32
   285ac:	bls	28e98 <main@@Base+0x13164>
   285b0:	mov	r3, r1
   285b4:	b	28eb8 <main@@Base+0x13184>
   285b8:	mov	r0, sl
   285bc:	mov	r1, r5
   285c0:	mov	r2, r4
   285c4:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   285c8:	ldr	r9, [sp, #32]
   285cc:	b	29110 <main@@Base+0x133dc>
   285d0:	add	r6, r5, #8
   285d4:	ldr	r9, [sp, #32]
   285d8:	mov	r2, #8
   285dc:	sub	r0, r4, r6
   285e0:	cmp	r0, #8
   285e4:	movcc	r2, r0
   285e8:	sub	r1, r2, #2
   285ec:	cmp	r1, #7
   285f0:	bcs	288b4 <main@@Base+0x12b80>
   285f4:	ldrb	r1, [r5, #9]
   285f8:	lsl	r2, r1, #16
   285fc:	mov	r1, #0
   28600:	ldrb	r3, [r6]
   28604:	orr	r2, r2, r3, lsl #24
   28608:	movw	r3, #0
   2860c:	movt	r3, #28773	; 0x7065
   28610:	eor	r2, r2, r3
   28614:	orrs	r1, r1, r2
   28618:	bne	2908c <main@@Base+0x13358>
   2861c:	cmp	r0, #3
   28620:	blt	2908c <main@@Base+0x13358>
   28624:	ldrb	r0, [r5, #10]
   28628:	cmp	r0, #34	; 0x22
   2862c:	bne	2908c <main@@Base+0x13358>
   28630:	add	r1, r5, #11
   28634:	sub	r0, r4, r1
   28638:	cmp	r0, #2
   2863c:	blt	28a28 <main@@Base+0x12cf4>
   28640:	ldrb	r0, [r1]
   28644:	cmp	r0, #32
   28648:	bls	28a18 <main@@Base+0x12ce4>
   2864c:	mov	r5, r1
   28650:	b	28a38 <main@@Base+0x12d04>
   28654:	and	r0, r1, #-16777216	; 0xff000000
   28658:	eor	r0, r0, #1862270976	; 0x6f000000
   2865c:	orrs	r0, r0, r3
   28660:	bne	29100 <main@@Base+0x133cc>
   28664:	cmp	ip, #6
   28668:	mov	r1, r5
   2866c:	blt	28c6c <main@@Base+0x12f38>
   28670:	ldrb	r0, [r5, #5]
   28674:	mov	r1, r5
   28678:	cmp	r0, #34	; 0x22
   2867c:	bne	28c6c <main@@Base+0x12f38>
   28680:	add	r2, r5, #6
   28684:	sub	r0, r4, r2
   28688:	cmp	r0, #2
   2868c:	blt	28948 <main@@Base+0x12c14>
   28690:	ldrb	r0, [r2]
   28694:	cmp	r0, #32
   28698:	bls	28934 <main@@Base+0x12c00>
   2869c:	mov	r1, r2
   286a0:	b	2895c <main@@Base+0x12c28>
   286a4:	add	r6, r5, #8
   286a8:	ldr	r9, [sp, #32]
   286ac:	mov	r1, #8
   286b0:	sub	lr, r4, r6
   286b4:	cmp	lr, #8
   286b8:	movcc	r1, lr
   286bc:	sub	r3, r1, #1
   286c0:	cmp	r3, #7
   286c4:	bhi	2908c <main@@Base+0x13358>
   286c8:	str	r6, [sp, #28]
   286cc:	add	r6, pc, #24
   286d0:	mov	ip, #0
   286d4:	mov	r8, #0
   286d8:	mov	r1, #0
   286dc:	mov	r7, #0
   286e0:	mov	r0, #0
   286e4:	mov	r2, #0
   286e8:	ldr	pc, [r6, r3, lsl #2]
   286ec:	andeq	r8, r2, ip, lsr r7
   286f0:	andeq	r8, r2, r4, lsr r7
   286f4:	andeq	r8, r2, ip, lsr #14
   286f8:	andeq	r8, r2, r4, lsr #14
   286fc:	andeq	r8, r2, r4, lsl r7
   28700:	andeq	r8, r2, ip, lsl #14
   28704:	andeq	r8, r2, ip, lsl #14
   28708:	andeq	r8, r2, ip, lsl #14
   2870c:	ldrb	r1, [r5, #13]
   28710:	lsl	r8, r1, #16
   28714:	ldrb	r1, [r5, #12]
   28718:	orr	r2, r8, r1, lsl #24
   2871c:	mov	r1, ip
   28720:	mov	ip, r2
   28724:	ldrb	r2, [r5, #11]
   28728:	orr	r7, r2, r1
   2872c:	ldrb	r1, [r5, #10]
   28730:	orr	r0, r7, r1, lsl #8
   28734:	ldrb	r1, [r5, #9]
   28738:	orr	r2, r0, r1, lsl #16
   2873c:	ldr	r6, [sp, #28]
   28740:	movw	r0, #27487	; 0x6b5f
   28744:	lsr	r3, ip, #16
   28748:	ldrb	r1, [r6]
   2874c:	orr	r1, r2, r1, lsl #24
   28750:	eor	r2, r0, r1, lsr #16
   28754:	movw	r0, #28773	; 0x7065
   28758:	orr	r3, r3, r1, lsl #16
   2875c:	movt	r0, #29817	; 0x7479
   28760:	eor	r3, r3, r0
   28764:	orrs	r2, r3, r2
   28768:	bne	288c8 <main@@Base+0x12b94>
   2876c:	cmp	lr, #7
   28770:	blt	2908c <main@@Base+0x13358>
   28774:	ldrb	r0, [r5, #14]
   28778:	cmp	r0, #34	; 0x22
   2877c:	bne	2908c <main@@Base+0x13358>
   28780:	add	r1, r5, #15
   28784:	sub	r0, r4, r1
   28788:	cmp	r0, #2
   2878c:	blt	28b08 <main@@Base+0x12dd4>
   28790:	ldrb	r0, [r1]
   28794:	cmp	r0, #32
   28798:	bls	28af8 <main@@Base+0x12dc4>
   2879c:	mov	r5, r1
   287a0:	b	28b18 <main@@Base+0x12de4>
   287a4:	movw	r0, #0
   287a8:	ldr	r4, [sp, #36]	; 0x24
   287ac:	bfc	r1, #0, #16
   287b0:	movt	r0, #29556	; 0x7374
   287b4:	teq	r1, r0
   287b8:	bne	28f48 <main@@Base+0x13214>
   287bc:	cmp	lr, #3
   287c0:	blt	28f48 <main@@Base+0x13214>
   287c4:	ldrb	r0, [r7, #10]
   287c8:	mov	r2, r7
   287cc:	cmp	r0, #34	; 0x22
   287d0:	bne	28f48 <main@@Base+0x13214>
   287d4:	add	r1, r2, #11
   287d8:	sub	r0, r4, r1
   287dc:	cmp	r0, #2
   287e0:	blt	28b78 <main@@Base+0x12e44>
   287e4:	ldrb	r0, [r1]
   287e8:	cmp	r0, #32
   287ec:	bls	28b68 <main@@Base+0x12e34>
   287f0:	mov	r2, r1
   287f4:	b	28b88 <main@@Base+0x12e54>
   287f8:	movw	r0, #0
   287fc:	ldr	r4, [sp, #36]	; 0x24
   28800:	bfc	r1, #0, #16
   28804:	movt	r0, #29299	; 0x7273
   28808:	teq	r1, r0
   2880c:	bne	2903c <main@@Base+0x13308>
   28810:	cmp	lr, #3
   28814:	blt	2903c <main@@Base+0x13308>
   28818:	ldrb	r0, [r3, #10]
   2881c:	mov	r2, r3
   28820:	cmp	r0, #34	; 0x22
   28824:	bne	2903c <main@@Base+0x13308>
   28828:	add	r1, r2, #11
   2882c:	sub	r0, r4, r1
   28830:	cmp	r0, #2
   28834:	blt	28be8 <main@@Base+0x12eb4>
   28838:	ldrb	r0, [r1]
   2883c:	cmp	r0, #32
   28840:	bls	28bd8 <main@@Base+0x12ea4>
   28844:	mov	r2, r1
   28848:	b	28bf8 <main@@Base+0x12ec4>
   2884c:	movw	r2, #29281	; 0x7261
   28850:	lsr	r1, r1, #16
   28854:	ldr	r4, [sp, #36]	; 0x24
   28858:	mov	sl, r9
   2885c:	eor	r2, r2, r0, lsr #16
   28860:	orr	r0, r1, r0, lsl #16
   28864:	movw	r1, #25970	; 0x6572
   28868:	movt	r1, #25460	; 0x6374
   2886c:	eor	r0, r0, r1
   28870:	orrs	r0, r0, r2
   28874:	bne	2890c <main@@Base+0x12bd8>
   28878:	ldr	r9, [sp, #32]
   2887c:	cmp	lr, #7
   28880:	blt	2903c <main@@Base+0x13308>
   28884:	ldrb	r0, [r5, #14]
   28888:	cmp	r0, #34	; 0x22
   2888c:	bne	2903c <main@@Base+0x13308>
   28890:	add	r1, r5, #15
   28894:	sub	r0, r4, r1
   28898:	cmp	r0, #2
   2889c:	blt	28d54 <main@@Base+0x13020>
   288a0:	ldrb	r0, [r1]
   288a4:	cmp	r0, #32
   288a8:	bls	28d44 <main@@Base+0x13010>
   288ac:	mov	r5, r1
   288b0:	b	28d64 <main@@Base+0x13030>
   288b4:	cmp	r2, #1
   288b8:	mov	r1, #0
   288bc:	mov	r2, #0
   288c0:	beq	28600 <main@@Base+0x128cc>
   288c4:	b	2908c <main@@Base+0x13358>
   288c8:	and	r1, r1, #-16777216	; 0xff000000
   288cc:	teq	r1, #1795162112	; 0x6b000000
   288d0:	bne	2908c <main@@Base+0x13358>
   288d4:	cmp	lr, #2
   288d8:	blt	2908c <main@@Base+0x13358>
   288dc:	ldrb	r0, [r5, #9]
   288e0:	cmp	r0, #34	; 0x22
   288e4:	bne	2908c <main@@Base+0x13358>
   288e8:	add	r1, r5, #10
   288ec:	sub	r0, r4, r1
   288f0:	cmp	r0, #2
   288f4:	blt	28dc4 <main@@Base+0x13090>
   288f8:	ldrb	r0, [r1]
   288fc:	cmp	r0, #32
   28900:	bls	28db4 <main@@Base+0x13080>
   28904:	mov	r5, r1
   28908:	b	28dd4 <main@@Base+0x130a0>
   2890c:	mov	r0, sl
   28910:	mov	r1, r7
   28914:	b	285c0 <main@@Base+0x1288c>
   28918:	ldr	r9, [sp, #32]
   2891c:	mov	r1, #0
   28920:	cmp	r2, #1
   28924:	beq	28564 <main@@Base+0x12830>
   28928:	cmp	r2, #2
   2892c:	beq	2855c <main@@Base+0x12828>
   28930:	b	29100 <main@@Base+0x133cc>
   28934:	bne	28948 <main@@Base+0x12c14>
   28938:	mov	r1, r5
   2893c:	ldrb	r0, [r1, #7]!
   28940:	cmp	r0, #32
   28944:	bhi	2895c <main@@Base+0x12c28>
   28948:	mov	r1, r2
   2894c:	mov	r0, sl
   28950:	mov	r2, r4
   28954:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28958:	mov	r1, r0
   2895c:	cmp	r1, r4
   28960:	beq	28994 <main@@Base+0x12c60>
   28964:	ldrb	r0, [r1]
   28968:	cmp	r0, #58	; 0x3a
   2896c:	bne	28994 <main@@Base+0x12c60>
   28970:	add	r2, r1, #1
   28974:	sub	r0, r4, r2
   28978:	cmp	r0, #2
   2897c:	blt	28c58 <main@@Base+0x12f24>
   28980:	ldrb	r0, [r2]
   28984:	cmp	r0, #32
   28988:	bls	28c48 <main@@Base+0x12f14>
   2898c:	mov	r1, r2
   28990:	b	28c6c <main@@Base+0x12f38>
   28994:	mov	r0, sl
   28998:	mov	r2, r4
   2899c:	mov	r3, #4
   289a0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   289a4:	b	28c68 <main@@Base+0x12f34>
   289a8:	bne	289b8 <main@@Base+0x12c84>
   289ac:	ldrb	r0, [r2, #17]!
   289b0:	cmp	r0, #32
   289b4:	bhi	289c8 <main@@Base+0x12c94>
   289b8:	mov	r0, sl
   289bc:	mov	r2, r4
   289c0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   289c4:	mov	r2, r0
   289c8:	cmp	r2, r4
   289cc:	beq	28a00 <main@@Base+0x12ccc>
   289d0:	ldrb	r0, [r2]
   289d4:	cmp	r0, #58	; 0x3a
   289d8:	bne	28a00 <main@@Base+0x12ccc>
   289dc:	add	r1, r2, #1
   289e0:	sub	r0, r4, r1
   289e4:	cmp	r0, #2
   289e8:	blt	28cb4 <main@@Base+0x12f80>
   289ec:	ldrb	r0, [r1]
   289f0:	cmp	r0, #32
   289f4:	bls	28ca4 <main@@Base+0x12f70>
   289f8:	mov	r2, r1
   289fc:	b	28cc4 <main@@Base+0x12f90>
   28a00:	mov	r1, r2
   28a04:	mov	r0, sl
   28a08:	mov	r2, r4
   28a0c:	mov	r3, #4
   28a10:	bl	3133c <flatcc_json_parser_set_error@@Base>
   28a14:	b	28cc0 <main@@Base+0x12f8c>
   28a18:	bne	28a28 <main@@Base+0x12cf4>
   28a1c:	ldrb	r0, [r5, #12]!
   28a20:	cmp	r0, #32
   28a24:	bhi	28a38 <main@@Base+0x12d04>
   28a28:	mov	r0, sl
   28a2c:	mov	r2, r4
   28a30:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28a34:	mov	r5, r0
   28a38:	cmp	r5, r4
   28a3c:	beq	28a70 <main@@Base+0x12d3c>
   28a40:	ldrb	r0, [r5]
   28a44:	cmp	r0, #58	; 0x3a
   28a48:	bne	28a70 <main@@Base+0x12d3c>
   28a4c:	add	r1, r5, #1
   28a50:	sub	r0, r4, r1
   28a54:	cmp	r0, #2
   28a58:	blt	28d04 <main@@Base+0x12fd0>
   28a5c:	ldrb	r0, [r1]
   28a60:	cmp	r0, #32
   28a64:	bls	28cf4 <main@@Base+0x12fc0>
   28a68:	mov	r5, r1
   28a6c:	b	28d14 <main@@Base+0x12fe0>
   28a70:	mov	r0, sl
   28a74:	mov	r1, r5
   28a78:	mov	r2, r4
   28a7c:	mov	r3, #4
   28a80:	bl	3133c <flatcc_json_parser_set_error@@Base>
   28a84:	b	28d10 <main@@Base+0x12fdc>
   28a88:	bne	28a98 <main@@Base+0x12d64>
   28a8c:	ldrb	r0, [r2, #17]!
   28a90:	cmp	r0, #32
   28a94:	bhi	28aa8 <main@@Base+0x12d74>
   28a98:	mov	r0, sl
   28a9c:	mov	r2, r4
   28aa0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28aa4:	mov	r2, r0
   28aa8:	cmp	r2, r4
   28aac:	beq	28ae0 <main@@Base+0x12dac>
   28ab0:	ldrb	r0, [r2]
   28ab4:	cmp	r0, #58	; 0x3a
   28ab8:	bne	28ae0 <main@@Base+0x12dac>
   28abc:	add	r1, r2, #1
   28ac0:	sub	r0, r4, r1
   28ac4:	cmp	r0, #2
   28ac8:	blt	28e34 <main@@Base+0x13100>
   28acc:	ldrb	r0, [r1]
   28ad0:	cmp	r0, #32
   28ad4:	bls	28e24 <main@@Base+0x130f0>
   28ad8:	mov	r2, r1
   28adc:	b	28e44 <main@@Base+0x13110>
   28ae0:	mov	r1, r2
   28ae4:	mov	r0, sl
   28ae8:	mov	r2, r4
   28aec:	mov	r3, #4
   28af0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   28af4:	b	28e40 <main@@Base+0x1310c>
   28af8:	bne	28b08 <main@@Base+0x12dd4>
   28afc:	ldrb	r0, [r5, #16]!
   28b00:	cmp	r0, #32
   28b04:	bhi	28b18 <main@@Base+0x12de4>
   28b08:	mov	r0, sl
   28b0c:	mov	r2, r4
   28b10:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28b14:	mov	r5, r0
   28b18:	cmp	r5, r4
   28b1c:	beq	28b50 <main@@Base+0x12e1c>
   28b20:	ldrb	r0, [r5]
   28b24:	cmp	r0, #58	; 0x3a
   28b28:	bne	28b50 <main@@Base+0x12e1c>
   28b2c:	add	r1, r5, #1
   28b30:	sub	r0, r4, r1
   28b34:	cmp	r0, #2
   28b38:	blt	28f64 <main@@Base+0x13230>
   28b3c:	ldrb	r0, [r1]
   28b40:	cmp	r0, #32
   28b44:	bls	28f54 <main@@Base+0x13220>
   28b48:	mov	r5, r1
   28b4c:	b	28f74 <main@@Base+0x13240>
   28b50:	mov	r0, sl
   28b54:	mov	r1, r5
   28b58:	mov	r2, r4
   28b5c:	mov	r3, #4
   28b60:	bl	3133c <flatcc_json_parser_set_error@@Base>
   28b64:	b	28f70 <main@@Base+0x1323c>
   28b68:	bne	28b78 <main@@Base+0x12e44>
   28b6c:	ldrb	r0, [r2, #12]!
   28b70:	cmp	r0, #32
   28b74:	bhi	28b88 <main@@Base+0x12e54>
   28b78:	mov	r0, sl
   28b7c:	mov	r2, r4
   28b80:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28b84:	mov	r2, r0
   28b88:	cmp	r2, r4
   28b8c:	beq	28bc0 <main@@Base+0x12e8c>
   28b90:	ldrb	r0, [r2]
   28b94:	cmp	r0, #58	; 0x3a
   28b98:	bne	28bc0 <main@@Base+0x12e8c>
   28b9c:	add	r1, r2, #1
   28ba0:	sub	r0, r4, r1
   28ba4:	cmp	r0, #2
   28ba8:	blt	28f18 <main@@Base+0x131e4>
   28bac:	ldrb	r0, [r1]
   28bb0:	cmp	r0, #32
   28bb4:	bls	28f08 <main@@Base+0x131d4>
   28bb8:	mov	r2, r1
   28bbc:	b	28f28 <main@@Base+0x131f4>
   28bc0:	mov	r1, r2
   28bc4:	mov	r0, sl
   28bc8:	mov	r2, r4
   28bcc:	mov	r3, #4
   28bd0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   28bd4:	b	28f24 <main@@Base+0x131f0>
   28bd8:	bne	28be8 <main@@Base+0x12eb4>
   28bdc:	ldrb	r0, [r2, #12]!
   28be0:	cmp	r0, #32
   28be4:	bhi	28bf8 <main@@Base+0x12ec4>
   28be8:	mov	r0, sl
   28bec:	mov	r2, r4
   28bf0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28bf4:	mov	r2, r0
   28bf8:	cmp	r2, r4
   28bfc:	beq	28c30 <main@@Base+0x12efc>
   28c00:	ldrb	r0, [r2]
   28c04:	cmp	r0, #58	; 0x3a
   28c08:	bne	28c30 <main@@Base+0x12efc>
   28c0c:	add	r1, r2, #1
   28c10:	sub	r0, r4, r1
   28c14:	cmp	r0, #2
   28c18:	blt	28fb4 <main@@Base+0x13280>
   28c1c:	ldrb	r0, [r1]
   28c20:	cmp	r0, #32
   28c24:	bls	28fa4 <main@@Base+0x13270>
   28c28:	mov	r2, r1
   28c2c:	b	28fc4 <main@@Base+0x13290>
   28c30:	mov	r1, r2
   28c34:	mov	r0, sl
   28c38:	mov	r2, r4
   28c3c:	mov	r3, #4
   28c40:	bl	3133c <flatcc_json_parser_set_error@@Base>
   28c44:	b	28fc0 <main@@Base+0x1328c>
   28c48:	bne	28c58 <main@@Base+0x12f24>
   28c4c:	ldrb	r0, [r1, #2]!
   28c50:	cmp	r0, #32
   28c54:	bhi	28c6c <main@@Base+0x12f38>
   28c58:	mov	r1, r2
   28c5c:	mov	r0, sl
   28c60:	mov	r2, r4
   28c64:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28c68:	mov	r1, r0
   28c6c:	cmp	r5, r1
   28c70:	beq	29100 <main@@Base+0x133cc>
   28c74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28c78:	mov	r2, #7
   28c7c:	mov	r3, #3
   28c80:	str	r2, [sp]
   28c84:	mov	r2, r4
   28c88:	str	r0, [sp, #4]
   28c8c:	movw	r0, #37768	; 0x9388
   28c90:	movt	r0, #2
   28c94:	str	r0, [sp, #8]
   28c98:	mov	r0, sl
   28c9c:	bl	33944 <flatcc_json_parser_union@@Base>
   28ca0:	b	29110 <main@@Base+0x133dc>
   28ca4:	bne	28cb4 <main@@Base+0x12f80>
   28ca8:	ldrb	r0, [r2, #2]!
   28cac:	cmp	r0, #32
   28cb0:	bhi	28cc4 <main@@Base+0x12f90>
   28cb4:	mov	r0, sl
   28cb8:	mov	r2, r4
   28cbc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28cc0:	mov	r2, r0
   28cc4:	cmp	r8, r2
   28cc8:	beq	28f48 <main@@Base+0x13214>
   28ccc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28cd0:	mov	r1, #3
   28cd4:	mov	r3, #1
   28cd8:	str	r1, [sp]
   28cdc:	mov	r1, r2
   28ce0:	mov	r2, r4
   28ce4:	str	r0, [sp, #4]
   28ce8:	movw	r0, #33440	; 0x82a0
   28cec:	movt	r0, #5
   28cf0:	b	290e4 <main@@Base+0x133b0>
   28cf4:	bne	28d04 <main@@Base+0x12fd0>
   28cf8:	ldrb	r0, [r5, #2]!
   28cfc:	cmp	r0, #32
   28d00:	bhi	28d14 <main@@Base+0x12fe0>
   28d04:	mov	r0, sl
   28d08:	mov	r2, r4
   28d0c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28d10:	mov	r5, r0
   28d14:	cmp	r6, r5
   28d18:	beq	2908c <main@@Base+0x13358>
   28d1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28d20:	mov	r1, #7
   28d24:	mov	r2, r4
   28d28:	mov	r3, #3
   28d2c:	str	r1, [sp]
   28d30:	mov	r1, r5
   28d34:	str	r0, [sp, #4]
   28d38:	movw	r0, #33456	; 0x82b0
   28d3c:	movt	r0, #5
   28d40:	b	290e4 <main@@Base+0x133b0>
   28d44:	bne	28d54 <main@@Base+0x13020>
   28d48:	ldrb	r0, [r5, #16]!
   28d4c:	cmp	r0, #32
   28d50:	bhi	28d64 <main@@Base+0x13030>
   28d54:	mov	r0, sl
   28d58:	mov	r2, r4
   28d5c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28d60:	mov	r5, r0
   28d64:	cmp	r5, r4
   28d68:	beq	28d9c <main@@Base+0x13068>
   28d6c:	ldrb	r0, [r5]
   28d70:	cmp	r0, #58	; 0x3a
   28d74:	bne	28d9c <main@@Base+0x13068>
   28d78:	add	r1, r5, #1
   28d7c:	sub	r0, r4, r1
   28d80:	cmp	r0, #2
   28d84:	blt	29010 <main@@Base+0x132dc>
   28d88:	ldrb	r0, [r1]
   28d8c:	cmp	r0, #32
   28d90:	bls	29000 <main@@Base+0x132cc>
   28d94:	mov	r5, r1
   28d98:	b	29020 <main@@Base+0x132ec>
   28d9c:	mov	r0, sl
   28da0:	mov	r1, r5
   28da4:	mov	r2, r4
   28da8:	mov	r3, #4
   28dac:	bl	3133c <flatcc_json_parser_set_error@@Base>
   28db0:	b	2901c <main@@Base+0x132e8>
   28db4:	bne	28dc4 <main@@Base+0x13090>
   28db8:	ldrb	r0, [r5, #11]!
   28dbc:	cmp	r0, #32
   28dc0:	bhi	28dd4 <main@@Base+0x130a0>
   28dc4:	mov	r0, sl
   28dc8:	mov	r2, r4
   28dcc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28dd0:	mov	r5, r0
   28dd4:	cmp	r5, r4
   28dd8:	beq	28e0c <main@@Base+0x130d8>
   28ddc:	ldrb	r0, [r5]
   28de0:	cmp	r0, #58	; 0x3a
   28de4:	bne	28e0c <main@@Base+0x130d8>
   28de8:	add	r1, r5, #1
   28dec:	sub	r0, r4, r1
   28df0:	cmp	r0, #2
   28df4:	blt	29058 <main@@Base+0x13324>
   28df8:	ldrb	r0, [r1]
   28dfc:	cmp	r0, #32
   28e00:	bls	29048 <main@@Base+0x13314>
   28e04:	mov	r5, r1
   28e08:	b	29068 <main@@Base+0x13334>
   28e0c:	mov	r0, sl
   28e10:	mov	r1, r5
   28e14:	mov	r2, r4
   28e18:	mov	r3, #4
   28e1c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   28e20:	b	29064 <main@@Base+0x13330>
   28e24:	bne	28e34 <main@@Base+0x13100>
   28e28:	ldrb	r0, [r2, #2]!
   28e2c:	cmp	r0, #32
   28e30:	bhi	28e44 <main@@Base+0x13110>
   28e34:	mov	r0, sl
   28e38:	mov	r2, r4
   28e3c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28e40:	mov	r2, r0
   28e44:	cmp	r7, r2
   28e48:	beq	2903c <main@@Base+0x13308>
   28e4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28e50:	mov	r1, #9
   28e54:	mov	r3, #4
   28e58:	str	r1, [sp]
   28e5c:	mov	r1, r2
   28e60:	mov	r2, r4
   28e64:	str	r0, [sp, #4]
   28e68:	movw	r0, #33472	; 0x82c0
   28e6c:	movt	r0, #5
   28e70:	str	r0, [sp, #8]
   28e74:	movw	r0, #37768	; 0x9388
   28e78:	movt	r0, #2
   28e7c:	str	r0, [sp, #12]
   28e80:	movw	r0, #41312	; 0xa160
   28e84:	movt	r0, #2
   28e88:	str	r0, [sp, #16]
   28e8c:	mov	r0, sl
   28e90:	bl	34394 <flatcc_json_parser_union_type_vector@@Base>
   28e94:	b	29110 <main@@Base+0x133dc>
   28e98:	bne	28ea8 <main@@Base+0x13174>
   28e9c:	ldrb	r0, [r3, #21]!
   28ea0:	cmp	r0, #32
   28ea4:	bhi	28eb8 <main@@Base+0x13184>
   28ea8:	mov	r0, sl
   28eac:	mov	r2, r4
   28eb0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28eb4:	mov	r3, r0
   28eb8:	cmp	r3, r4
   28ebc:	beq	28ef0 <main@@Base+0x131bc>
   28ec0:	ldrb	r0, [r3]
   28ec4:	cmp	r0, #58	; 0x3a
   28ec8:	bne	28ef0 <main@@Base+0x131bc>
   28ecc:	add	r1, r3, #1
   28ed0:	sub	r0, r4, r1
   28ed4:	cmp	r0, #2
   28ed8:	blt	290a8 <main@@Base+0x13374>
   28edc:	ldrb	r0, [r1]
   28ee0:	cmp	r0, #32
   28ee4:	bls	29098 <main@@Base+0x13364>
   28ee8:	mov	r3, r1
   28eec:	b	290b8 <main@@Base+0x13384>
   28ef0:	mov	r1, r3
   28ef4:	mov	r0, sl
   28ef8:	mov	r2, r4
   28efc:	mov	r3, #4
   28f00:	bl	3133c <flatcc_json_parser_set_error@@Base>
   28f04:	b	290b4 <main@@Base+0x13380>
   28f08:	bne	28f18 <main@@Base+0x131e4>
   28f0c:	ldrb	r0, [r2, #2]!
   28f10:	cmp	r0, #32
   28f14:	bhi	28f28 <main@@Base+0x131f4>
   28f18:	mov	r0, sl
   28f1c:	mov	r2, r4
   28f20:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28f24:	mov	r2, r0
   28f28:	cmp	r8, r2
   28f2c:	beq	28f48 <main@@Base+0x13214>
   28f30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28f34:	mov	r1, #3
   28f38:	mov	r3, #1
   28f3c:	str	r1, [sp]
   28f40:	mov	r1, r2
   28f44:	b	28c84 <main@@Base+0x12f50>
   28f48:	mov	r0, sl
   28f4c:	mov	r1, r8
   28f50:	b	29108 <main@@Base+0x133d4>
   28f54:	bne	28f64 <main@@Base+0x13230>
   28f58:	ldrb	r0, [r5, #2]!
   28f5c:	cmp	r0, #32
   28f60:	bhi	28f74 <main@@Base+0x13240>
   28f64:	mov	r0, sl
   28f68:	mov	r2, r4
   28f6c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28f70:	mov	r5, r0
   28f74:	cmp	r6, r5
   28f78:	beq	2908c <main@@Base+0x13358>
   28f7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28f80:	mov	r1, #5
   28f84:	mov	r2, r4
   28f88:	mov	r3, #2
   28f8c:	str	r1, [sp]
   28f90:	mov	r1, r5
   28f94:	str	r0, [sp, #4]
   28f98:	movw	r0, #33504	; 0x82e0
   28f9c:	movt	r0, #5
   28fa0:	b	290e4 <main@@Base+0x133b0>
   28fa4:	bne	28fb4 <main@@Base+0x13280>
   28fa8:	ldrb	r0, [r2, #2]!
   28fac:	cmp	r0, #32
   28fb0:	bhi	28fc4 <main@@Base+0x13290>
   28fb4:	mov	r0, sl
   28fb8:	mov	r2, r4
   28fbc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   28fc0:	mov	r2, r0
   28fc4:	cmp	r7, r2
   28fc8:	beq	2903c <main@@Base+0x13308>
   28fcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28fd0:	mov	r1, #9
   28fd4:	mov	r3, #4
   28fd8:	str	r1, [sp]
   28fdc:	mov	r1, r2
   28fe0:	mov	r2, r4
   28fe4:	str	r0, [sp, #4]
   28fe8:	movw	r0, #37768	; 0x9388
   28fec:	movt	r0, #2
   28ff0:	str	r0, [sp, #8]
   28ff4:	mov	r0, sl
   28ff8:	bl	33ec8 <flatcc_json_parser_union_vector@@Base>
   28ffc:	b	29110 <main@@Base+0x133dc>
   29000:	bne	29010 <main@@Base+0x132dc>
   29004:	ldrb	r0, [r5, #2]!
   29008:	cmp	r0, #32
   2900c:	bhi	29020 <main@@Base+0x132ec>
   29010:	mov	r0, sl
   29014:	mov	r2, r4
   29018:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2901c:	mov	r5, r0
   29020:	cmp	r7, r5
   29024:	beq	2903c <main@@Base+0x13308>
   29028:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2902c:	mov	r1, #1
   29030:	mov	r2, r4
   29034:	mov	r3, #0
   29038:	b	29080 <main@@Base+0x1334c>
   2903c:	mov	r0, sl
   29040:	mov	r1, r7
   29044:	b	29108 <main@@Base+0x133d4>
   29048:	bne	29058 <main@@Base+0x13324>
   2904c:	ldrb	r0, [r5, #2]!
   29050:	cmp	r0, #32
   29054:	bhi	29068 <main@@Base+0x13334>
   29058:	mov	r0, sl
   2905c:	mov	r2, r4
   29060:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   29064:	mov	r5, r0
   29068:	cmp	r6, r5
   2906c:	beq	2908c <main@@Base+0x13358>
   29070:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29074:	mov	r1, #5
   29078:	mov	r2, r4
   2907c:	mov	r3, #2
   29080:	str	r1, [sp]
   29084:	mov	r1, r5
   29088:	b	28c88 <main@@Base+0x12f54>
   2908c:	mov	r0, sl
   29090:	mov	r1, r6
   29094:	b	29108 <main@@Base+0x133d4>
   29098:	bne	290a8 <main@@Base+0x13374>
   2909c:	ldrb	r0, [r3, #2]!
   290a0:	cmp	r0, #32
   290a4:	bhi	290b8 <main@@Base+0x13384>
   290a8:	mov	r0, sl
   290ac:	mov	r2, r4
   290b0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   290b4:	mov	r3, r0
   290b8:	cmp	r5, r3
   290bc:	beq	29100 <main@@Base+0x133cc>
   290c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   290c4:	mov	r1, #1
   290c8:	mov	r2, r4
   290cc:	str	r1, [sp]
   290d0:	mov	r1, r3
   290d4:	mov	r3, #0
   290d8:	str	r0, [sp, #4]
   290dc:	movw	r0, #33488	; 0x82d0
   290e0:	movt	r0, #5
   290e4:	str	r0, [sp, #8]
   290e8:	movw	r0, #37768	; 0x9388
   290ec:	movt	r0, #2
   290f0:	str	r0, [sp, #12]
   290f4:	mov	r0, sl
   290f8:	bl	33a84 <flatcc_json_parser_union_type@@Base>
   290fc:	b	29110 <main@@Base+0x133dc>
   29100:	mov	r0, sl
   29104:	mov	r1, r5
   29108:	mov	r2, r4
   2910c:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   29110:	mov	r2, r0
   29114:	sub	r0, r4, r2
   29118:	cmp	r0, #2
   2911c:	blt	29148 <main@@Base+0x13414>
   29120:	ldrb	r0, [r2]
   29124:	cmp	r0, #32
   29128:	bls	29134 <main@@Base+0x13400>
   2912c:	mov	r3, r2
   29130:	b	2915c <main@@Base+0x13428>
   29134:	bne	29148 <main@@Base+0x13414>
   29138:	mov	r3, r2
   2913c:	ldrb	r0, [r3, #1]!
   29140:	cmp	r0, #32
   29144:	bhi	2915c <main@@Base+0x13428>
   29148:	mov	r1, r2
   2914c:	mov	r0, sl
   29150:	mov	r2, r4
   29154:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   29158:	mov	r3, r0
   2915c:	cmp	r3, r4
   29160:	beq	291cc <main@@Base+0x13498>
   29164:	ldrb	r0, [r3]
   29168:	cmp	r0, #44	; 0x2c
   2916c:	bne	291d4 <main@@Base+0x134a0>
   29170:	add	r1, r3, #1
   29174:	sub	r0, r4, r1
   29178:	cmp	r0, #2
   2917c:	blt	291a4 <main@@Base+0x13470>
   29180:	ldrb	r0, [r1]
   29184:	cmp	r0, #32
   29188:	bls	29194 <main@@Base+0x13460>
   2918c:	mov	r3, r1
   29190:	b	291b4 <main@@Base+0x13480>
   29194:	bne	291a4 <main@@Base+0x13470>
   29198:	ldrb	r0, [r3, #2]!
   2919c:	cmp	r0, #32
   291a0:	bhi	291b4 <main@@Base+0x13480>
   291a4:	mov	r0, sl
   291a8:	mov	r2, r4
   291ac:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   291b0:	mov	r3, r0
   291b4:	cmp	r3, r4
   291b8:	beq	29200 <main@@Base+0x134cc>
   291bc:	ldrb	r0, [r3]
   291c0:	cmp	r0, #125	; 0x7d
   291c4:	bne	28038 <main@@Base+0x12304>
   291c8:	b	291dc <main@@Base+0x134a8>
   291cc:	mov	r7, r4
   291d0:	b	27f7c <main@@Base+0x12248>
   291d4:	cmp	r0, #125	; 0x7d
   291d8:	bne	2920c <main@@Base+0x134d8>
   291dc:	add	r1, r3, #1
   291e0:	sub	r0, r4, r1
   291e4:	cmp	r0, #2
   291e8:	blt	29234 <main@@Base+0x13500>
   291ec:	ldrb	r0, [r1]
   291f0:	cmp	r0, #32
   291f4:	bls	29220 <main@@Base+0x134ec>
   291f8:	mov	r7, r1
   291fc:	b	27f7c <main@@Base+0x12248>
   29200:	mov	r0, sl
   29204:	mov	r1, r4
   29208:	b	29214 <main@@Base+0x134e0>
   2920c:	mov	r0, sl
   29210:	mov	r1, r3
   29214:	mov	r2, r4
   29218:	mov	r3, #10
   2921c:	b	27f74 <main@@Base+0x12240>
   29220:	bne	29234 <main@@Base+0x13500>
   29224:	ldrb	r0, [r3, #2]!
   29228:	mov	r7, r3
   2922c:	cmp	r0, #32
   29230:	bhi	27f7c <main@@Base+0x12248>
   29234:	mov	r0, sl
   29238:	mov	r2, r4
   2923c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   29240:	b	27f78 <main@@Base+0x12244>
   29244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29248:	add	fp, sp, #28
   2924c:	push	{r3}		; (str r3, [sp, #-4]!)
   29250:	sub	r7, r2, r1
   29254:	cmp	r7, #8
   29258:	movcs	r7, #8
   2925c:	sub	r5, r7, #1
   29260:	cmp	r5, #7
   29264:	bhi	2937c <main@@Base+0x13648>
   29268:	add	lr, pc, #32
   2926c:	mov	ip, #0
   29270:	mov	r3, #0
   29274:	mov	r8, #0
   29278:	mov	r9, #0
   2927c:	mov	sl, #0
   29280:	mov	r7, #0
   29284:	mov	r4, #0
   29288:	mov	r6, #0
   2928c:	ldr	pc, [lr, r5, lsl #2]
   29290:	strdeq	r9, [r2], -r4
   29294:	andeq	r9, r2, ip, ror #5
   29298:	andeq	r9, r2, r4, ror #5
   2929c:	ldrdeq	r9, [r2], -ip
   292a0:	ldrdeq	r9, [r2], -r0
   292a4:	andeq	r9, r2, r4, asr #5
   292a8:			; <UNDEFINED> instruction: 0x000292b4
   292ac:			; <UNDEFINED> instruction: 0x000292b0
   292b0:	ldrb	r3, [r1, #7]
   292b4:	ldrb	r7, [r1, #6]
   292b8:	mov	r8, ip
   292bc:	orr	r3, r3, r7, lsl #8
   292c0:	mov	ip, r3
   292c4:	ldrb	r3, [r1, #5]
   292c8:	mov	r9, r8
   292cc:	orr	ip, ip, r3, lsl #16
   292d0:	ldrb	r3, [r1, #4]
   292d4:	mov	sl, r9
   292d8:	orr	ip, ip, r3, lsl #24
   292dc:	ldrb	r3, [r1, #3]
   292e0:	orr	r7, r3, sl
   292e4:	ldrb	r3, [r1, #2]
   292e8:	orr	r4, r7, r3, lsl #8
   292ec:	ldrb	r3, [r1, #1]
   292f0:	orr	r6, r4, r3, lsl #16
   292f4:	ldrb	r7, [r1]
   292f8:	movw	r3, #29797	; 0x7465
   292fc:	movt	r3, #24931	; 0x6163
   29300:	eor	r3, ip, r3
   29304:	orr	r7, r6, r7, lsl #24
   29308:	movw	r6, #24946	; 0x6172
   2930c:	movt	r6, #17256	; 0x4368
   29310:	eor	r7, r7, r6
   29314:	orrs	r3, r3, r7
   29318:	bne	2937c <main@@Base+0x13648>
   2931c:	add	lr, r1, #8
   29320:	sub	r7, r2, lr
   29324:	cmp	r7, #8
   29328:	mov	r3, r7
   2932c:	movcs	r3, #8
   29330:	sub	r3, r3, #1
   29334:	cmp	r3, #7
   29338:	bhi	2937c <main@@Base+0x13648>
   2933c:	cmp	r7, #2
   29340:	blt	2937c <main@@Base+0x13648>
   29344:	ldrb	r3, [lr]
   29348:	cmp	r3, #114	; 0x72
   2934c:	bne	2937c <main@@Base+0x13648>
   29350:	ldrb	r3, [r1, #9]
   29354:	mov	ip, lr
   29358:	cmp	r3, #46	; 0x2e
   2935c:	addeq	ip, r1, #10
   29360:	cmp	ip, lr
   29364:	beq	2937c <main@@Base+0x13648>
   29368:	ldr	r3, [sp]
   2936c:	mov	r1, ip
   29370:	sub	sp, fp, #28
   29374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29378:	b	2429c <main@@Base+0xe568>
   2937c:	mov	r0, r1
   29380:	sub	sp, fp, #28
   29384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2938c:	add	fp, sp, #28
   29390:	sub	sp, sp, #36	; 0x24
   29394:	ldr	r5, [fp, #8]
   29398:	mov	r8, r0
   2939c:	mov	r0, #0
   293a0:	mov	r9, r2
   293a4:	mov	r4, r1
   293a8:	cmp	r3, #11
   293ac:	str	r0, [r5]
   293b0:	bhi	29404 <main@@Base+0x136d0>
   293b4:	add	r0, pc, #0
   293b8:	ldr	pc, [r0, r3, lsl #2]
   293bc:	andeq	r9, r2, r4, asr #8
   293c0:	andeq	r9, r2, r4, lsr #8
   293c4:	andeq	r9, r2, r8, lsl #9
   293c8:	andeq	r9, r2, r4, lsr #8
   293cc:	andeq	r9, r2, r4, lsr #8
   293d0:	andeq	r9, r2, r4, lsr #8
   293d4:	andeq	r9, r2, r4, lsr #8
   293d8:	andeq	r9, r2, r4, lsr #8
   293dc:	ldrdeq	r9, [r2], -ip
   293e0:	andeq	r9, r2, ip, ror #7
   293e4:	andeq	r9, r2, ip, ror #7
   293e8:	andeq	r9, r2, ip, lsl #8
   293ec:	mov	r0, r8
   293f0:	mov	r1, r4
   293f4:	mov	r2, r9
   293f8:	mov	r3, r5
   293fc:	bl	2a188 <main@@Base+0x14454>
   29400:	b	295d4 <main@@Base+0x138a0>
   29404:	cmp	r3, #255	; 0xff
   29408:	bne	29424 <main@@Base+0x136f0>
   2940c:	mov	r0, r8
   29410:	mov	r1, r4
   29414:	mov	r2, r9
   29418:	mov	r3, r5
   2941c:	bl	33678 <flatcc_json_parser_build_string@@Base>
   29420:	b	295d4 <main@@Base+0x138a0>
   29424:	ldrb	r0, [r8, #8]
   29428:	tst	r0, #1
   2942c:	bne	29538 <main@@Base+0x13804>
   29430:	mov	r0, r8
   29434:	mov	r1, r4
   29438:	mov	r2, r9
   2943c:	mov	r3, #15
   29440:	b	2947c <main@@Base+0x13748>
   29444:	sub	r0, r9, r4
   29448:	cmp	r0, #4
   2944c:	blt	2946c <main@@Base+0x13738>
   29450:	movw	r1, #25430	; 0x6356
   29454:	mov	r0, r4
   29458:	mov	r2, #4
   2945c:	movt	r1, #4
   29460:	bl	14ebc <bcmp@plt>
   29464:	cmp	r0, #0
   29468:	beq	29614 <main@@Base+0x138e0>
   2946c:	mov	r0, r8
   29470:	mov	r1, r4
   29474:	mov	r2, r9
   29478:	mov	r3, #26
   2947c:	sub	sp, fp, #28
   29480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29484:	b	3133c <flatcc_json_parser_set_error@@Base>
   29488:	mov	r0, #0
   2948c:	mov	r1, #1
   29490:	str	r0, [r5]
   29494:	ldr	r0, [r8]
   29498:	bl	2d514 <flatcc_builder_start_table@@Base>
   2949c:	cmp	r0, #0
   294a0:	bne	295c0 <main@@Base+0x1388c>
   294a4:	cmp	r4, r9
   294a8:	beq	2959c <main@@Base+0x13868>
   294ac:	ldrb	r0, [r4]
   294b0:	cmp	r0, #123	; 0x7b
   294b4:	bne	2959c <main@@Base+0x13868>
   294b8:	add	r1, r4, #1
   294bc:	sub	r0, r9, r1
   294c0:	cmp	r0, #2
   294c4:	blt	29afc <main@@Base+0x13dc8>
   294c8:	ldrb	r0, [r1]
   294cc:	cmp	r0, #32
   294d0:	bls	29aec <main@@Base+0x13db8>
   294d4:	mov	r4, r1
   294d8:	b	29b0c <main@@Base+0x13dd8>
   294dc:	mov	r0, #0
   294e0:	mov	r1, #2
   294e4:	mov	r2, #2
   294e8:	str	r0, [r5]
   294ec:	ldr	r0, [r8]
   294f0:	bl	2c7d8 <flatcc_builder_start_struct@@Base>
   294f4:	cmp	r0, #0
   294f8:	beq	29590 <main@@Base+0x1385c>
   294fc:	cmp	r4, r9
   29500:	beq	29550 <main@@Base+0x1381c>
   29504:	ldrb	r1, [r4]
   29508:	cmp	r1, #123	; 0x7b
   2950c:	bne	29550 <main@@Base+0x1381c>
   29510:	add	r1, r4, #1
   29514:	str	r0, [sp, #8]
   29518:	sub	r0, r9, r1
   2951c:	cmp	r0, #2
   29520:	blt	29644 <main@@Base+0x13910>
   29524:	ldrb	r0, [r1]
   29528:	cmp	r0, #32
   2952c:	bls	29634 <main@@Base+0x13900>
   29530:	mov	r4, r1
   29534:	b	29654 <main@@Base+0x13920>
   29538:	mov	r0, r8
   2953c:	mov	r1, r4
   29540:	mov	r2, r9
   29544:	sub	sp, fp, #28
   29548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2954c:	b	31b3c <flatcc_json_parser_generic_json@@Base>
   29550:	mov	r0, r8
   29554:	mov	r1, r4
   29558:	mov	r2, r9
   2955c:	mov	r3, #21
   29560:	bl	3133c <flatcc_json_parser_set_error@@Base>
   29564:	mov	r4, r0
   29568:	cmp	r4, r9
   2956c:	mov	r1, r9
   29570:	beq	29594 <main@@Base+0x13860>
   29574:	ldr	r0, [r8]
   29578:	bl	2c878 <flatcc_builder_end_struct@@Base>
   2957c:	cmp	r0, #0
   29580:	mov	r1, r4
   29584:	str	r0, [r5]
   29588:	bne	295d8 <main@@Base+0x138a4>
   2958c:	b	29594 <main@@Base+0x13860>
   29590:	mov	r1, r4
   29594:	mov	r0, r8
   29598:	b	295c8 <main@@Base+0x13894>
   2959c:	mov	r0, r8
   295a0:	mov	r1, r4
   295a4:	mov	r2, r9
   295a8:	mov	r3, #21
   295ac:	bl	3133c <flatcc_json_parser_set_error@@Base>
   295b0:	mov	r4, r0
   295b4:	ldr	r0, [r8, #20]
   295b8:	cmp	r0, #0
   295bc:	beq	2961c <main@@Base+0x138e8>
   295c0:	mov	r0, r8
   295c4:	mov	r1, r4
   295c8:	mov	r2, r9
   295cc:	mov	r3, #33	; 0x21
   295d0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   295d4:	mov	r4, r0
   295d8:	ldr	r0, [r8, #20]
   295dc:	cmp	r0, #0
   295e0:	bne	29608 <main@@Base+0x138d4>
   295e4:	ldr	r0, [r5]
   295e8:	cmp	r0, #0
   295ec:	bne	29608 <main@@Base+0x138d4>
   295f0:	mov	r0, r8
   295f4:	mov	r1, r4
   295f8:	mov	r2, r9
   295fc:	mov	r3, #33	; 0x21
   29600:	bl	3133c <flatcc_json_parser_set_error@@Base>
   29604:	mov	r4, r0
   29608:	mov	r0, r4
   2960c:	sub	sp, fp, #28
   29610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29614:	add	r4, r4, #4
   29618:	b	29608 <main@@Base+0x138d4>
   2961c:	ldr	r0, [r8]
   29620:	bl	2de74 <flatcc_builder_end_table@@Base>
   29624:	cmp	r0, #0
   29628:	str	r0, [r5]
   2962c:	bne	295d8 <main@@Base+0x138a4>
   29630:	b	295c0 <main@@Base+0x1388c>
   29634:	bne	29644 <main@@Base+0x13910>
   29638:	ldrb	r0, [r4, #2]!
   2963c:	cmp	r0, #32
   29640:	bhi	29654 <main@@Base+0x13920>
   29644:	mov	r0, r8
   29648:	mov	r2, r9
   2964c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   29650:	mov	r4, r0
   29654:	cmp	r4, r9
   29658:	mov	r3, r9
   2965c:	beq	29698 <main@@Base+0x13964>
   29660:	ldrb	r0, [r4]
   29664:	cmp	r0, #125	; 0x7d
   29668:	bne	29694 <main@@Base+0x13960>
   2966c:	add	r1, r4, #1
   29670:	sub	r0, r9, r1
   29674:	cmp	r0, #2
   29678:	blt	2a0f4 <main@@Base+0x143c0>
   2967c:	ldrb	r0, [r1]
   29680:	cmp	r0, #32
   29684:	bhi	29ad8 <main@@Base+0x13da4>
   29688:	bne	2a0f4 <main@@Base+0x143c0>
   2968c:	ldrb	r0, [r4, #2]!
   29690:	b	2a0ec <main@@Base+0x143b8>
   29694:	mov	r3, r4
   29698:	str	r5, [sp, #12]
   2969c:	cmp	r3, r9
   296a0:	mov	sl, r9
   296a4:	beq	296d4 <main@@Base+0x139a0>
   296a8:	ldrb	r0, [r3]
   296ac:	cmp	r0, #34	; 0x22
   296b0:	bne	296bc <main@@Base+0x13988>
   296b4:	add	sl, r3, #1
   296b8:	b	296d4 <main@@Base+0x139a0>
   296bc:	mov	r1, r3
   296c0:	mov	r0, r8
   296c4:	mov	r2, r9
   296c8:	mov	r3, #5
   296cc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   296d0:	mov	sl, r0
   296d4:	sub	r0, r9, sl
   296d8:	mov	r1, #8
   296dc:	cmp	r0, #8
   296e0:	movcs	r0, r1
   296e4:	sub	r3, r0, #1
   296e8:	cmp	r3, #7
   296ec:	bhi	29828 <main@@Base+0x13af4>
   296f0:	add	r7, pc, #32
   296f4:	mov	r0, #0
   296f8:	mov	ip, #0
   296fc:	mov	lr, #0
   29700:	mov	r4, #0
   29704:	mov	r2, #0
   29708:	mov	r5, #0
   2970c:	mov	r1, #0
   29710:	mov	r6, #0
   29714:	ldr	pc, [r7, r3, lsl #2]
   29718:	andeq	r9, r2, ip, ror r7
   2971c:	andeq	r9, r2, r4, ror r7
   29720:	andeq	r9, r2, ip, ror #14
   29724:	andeq	r9, r2, r4, ror #14
   29728:	andeq	r9, r2, r8, asr r7
   2972c:	andeq	r9, r2, ip, asr #14
   29730:	andeq	r9, r2, ip, lsr r7
   29734:	andeq	r9, r2, r8, lsr r7
   29738:	ldrb	ip, [sl, #7]
   2973c:	ldrb	r1, [sl, #6]
   29740:	mov	lr, r0
   29744:	orr	r1, ip, r1, lsl #8
   29748:	mov	r0, r1
   2974c:	ldrb	r1, [sl, #5]
   29750:	mov	r4, lr
   29754:	orr	r0, r0, r1, lsl #16
   29758:	ldrb	r1, [sl, #4]
   2975c:	mov	r2, r4
   29760:	orr	r0, r0, r1, lsl #24
   29764:	ldrb	r1, [sl, #3]
   29768:	orr	r5, r1, r2
   2976c:	ldrb	r1, [sl, #2]
   29770:	orr	r1, r5, r1, lsl #8
   29774:	ldrb	r2, [sl, #1]
   29778:	orr	r6, r1, r2, lsl #16
   2977c:	movw	r1, #25966	; 0x656e
   29780:	movw	r2, #26994	; 0x6972
   29784:	movt	r1, #24428	; 0x5f6c
   29788:	movt	r2, #26721	; 0x6861
   2978c:	eor	r0, r0, r1
   29790:	ldrb	r1, [sl]
   29794:	orr	r1, r6, r1, lsl #24
   29798:	eor	r1, r1, r2
   2979c:	orrs	r0, r0, r1
   297a0:	bne	29828 <main@@Base+0x13af4>
   297a4:	add	r4, sl, #8
   297a8:	mov	r2, #8
   297ac:	sub	r0, r9, r4
   297b0:	cmp	r0, #8
   297b4:	movcc	r2, r0
   297b8:	sub	r1, r2, #3
   297bc:	cmp	r1, #6
   297c0:	bcs	29834 <main@@Base+0x13b00>
   297c4:	ldrb	r1, [sl, #10]
   297c8:	lsl	r1, r1, #8
   297cc:	ldrb	r2, [sl, #9]
   297d0:	orr	r1, r1, r2, lsl #16
   297d4:	ldrb	r2, [r4]
   297d8:	bic	r1, r1, #255	; 0xff
   297dc:	orr	r1, r1, r2, lsl #24
   297e0:	movw	r2, #26624	; 0x6800
   297e4:	movt	r2, #26484	; 0x6774
   297e8:	teq	r1, r2
   297ec:	bne	29948 <main@@Base+0x13c14>
   297f0:	cmp	r0, #4
   297f4:	blt	29948 <main@@Base+0x13c14>
   297f8:	ldrb	r0, [sl, #11]
   297fc:	cmp	r0, #34	; 0x22
   29800:	bne	29948 <main@@Base+0x13c14>
   29804:	add	r1, sl, #12
   29808:	sub	r0, r9, r1
   2980c:	cmp	r0, #2
   29810:	blt	2985c <main@@Base+0x13b28>
   29814:	ldrb	r0, [r1]
   29818:	cmp	r0, #32
   2981c:	bls	2984c <main@@Base+0x13b18>
   29820:	mov	sl, r1
   29824:	b	2986c <main@@Base+0x13b38>
   29828:	mov	r0, r8
   2982c:	mov	r1, sl
   29830:	b	29950 <main@@Base+0x13c1c>
   29834:	mov	r1, #0
   29838:	cmp	r2, #1
   2983c:	beq	297d4 <main@@Base+0x13aa0>
   29840:	cmp	r2, #2
   29844:	beq	297cc <main@@Base+0x13a98>
   29848:	b	29948 <main@@Base+0x13c14>
   2984c:	bne	2985c <main@@Base+0x13b28>
   29850:	ldrb	r0, [sl, #13]!
   29854:	cmp	r0, #32
   29858:	bhi	2986c <main@@Base+0x13b38>
   2985c:	mov	r0, r8
   29860:	mov	r2, r9
   29864:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   29868:	mov	sl, r0
   2986c:	cmp	sl, r9
   29870:	beq	298a4 <main@@Base+0x13b70>
   29874:	ldrb	r0, [sl]
   29878:	cmp	r0, #58	; 0x3a
   2987c:	bne	298a4 <main@@Base+0x13b70>
   29880:	add	r1, sl, #1
   29884:	sub	r0, r9, r1
   29888:	cmp	r0, #2
   2988c:	blt	298cc <main@@Base+0x13b98>
   29890:	ldrb	r0, [r1]
   29894:	cmp	r0, #32
   29898:	bls	298bc <main@@Base+0x13b88>
   2989c:	mov	sl, r1
   298a0:	b	298dc <main@@Base+0x13ba8>
   298a4:	mov	r0, r8
   298a8:	mov	r1, sl
   298ac:	mov	r2, r9
   298b0:	mov	r3, #4
   298b4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   298b8:	b	298d8 <main@@Base+0x13ba4>
   298bc:	bne	298cc <main@@Base+0x13b98>
   298c0:	ldrb	r0, [sl, #2]!
   298c4:	cmp	r0, #32
   298c8:	bhi	298dc <main@@Base+0x13ba8>
   298cc:	mov	r0, r8
   298d0:	mov	r2, r9
   298d4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   298d8:	mov	sl, r0
   298dc:	cmp	r4, sl
   298e0:	beq	29948 <main@@Base+0x13c14>
   298e4:	mov	r4, #0
   298e8:	cmp	sl, r9
   298ec:	str	r4, [sp, #28]
   298f0:	str	r4, [sp, #24]
   298f4:	strh	r4, [sp, #16]
   298f8:	str	r4, [sp, #20]
   298fc:	beq	29a18 <main@@Base+0x13ce4>
   29900:	add	r0, sp, #24
   29904:	mov	r1, sl
   29908:	mov	r2, r9
   2990c:	add	r3, sp, #20
   29910:	str	r0, [sp]
   29914:	mov	r0, r8
   29918:	bl	3314c <flatcc_json_parser_integer@@Base>
   2991c:	cmp	r0, sl
   29920:	beq	29a20 <main@@Base+0x13cec>
   29924:	mov	r2, r0
   29928:	ldr	r0, [sp, #20]
   2992c:	cmp	r0, #0
   29930:	beq	29a28 <main@@Base+0x13cf4>
   29934:	mov	r1, r2
   29938:	mov	r0, r8
   2993c:	mov	r2, r9
   29940:	mov	r3, #8
   29944:	b	29a4c <main@@Base+0x13d18>
   29948:	mov	r0, r8
   2994c:	mov	r1, r4
   29950:	mov	r2, r9
   29954:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   29958:	mov	r2, r0
   2995c:	ldr	r5, [sp, #12]
   29960:	sub	r0, r9, r2
   29964:	cmp	r0, #2
   29968:	blt	29994 <main@@Base+0x13c60>
   2996c:	ldrb	r0, [r2]
   29970:	cmp	r0, #32
   29974:	bls	29980 <main@@Base+0x13c4c>
   29978:	mov	r3, r2
   2997c:	b	299a8 <main@@Base+0x13c74>
   29980:	bne	29994 <main@@Base+0x13c60>
   29984:	mov	r3, r2
   29988:	ldrb	r0, [r3, #1]!
   2998c:	cmp	r0, #32
   29990:	bhi	299a8 <main@@Base+0x13c74>
   29994:	mov	r1, r2
   29998:	mov	r0, r8
   2999c:	mov	r2, r9
   299a0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   299a4:	mov	r3, r0
   299a8:	cmp	r3, r9
   299ac:	beq	29aac <main@@Base+0x13d78>
   299b0:	ldrb	r0, [r3]
   299b4:	cmp	r0, #44	; 0x2c
   299b8:	bne	29ab4 <main@@Base+0x13d80>
   299bc:	add	r1, r3, #1
   299c0:	sub	r0, r9, r1
   299c4:	cmp	r0, #2
   299c8:	blt	299f0 <main@@Base+0x13cbc>
   299cc:	ldrb	r0, [r1]
   299d0:	cmp	r0, #32
   299d4:	bls	299e0 <main@@Base+0x13cac>
   299d8:	mov	r3, r1
   299dc:	b	29a00 <main@@Base+0x13ccc>
   299e0:	bne	299f0 <main@@Base+0x13cbc>
   299e4:	ldrb	r0, [r3, #2]!
   299e8:	cmp	r0, #32
   299ec:	bhi	29a00 <main@@Base+0x13ccc>
   299f0:	mov	r0, r8
   299f4:	mov	r2, r9
   299f8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   299fc:	mov	r3, r0
   29a00:	cmp	r3, r9
   29a04:	beq	29ae0 <main@@Base+0x13dac>
   29a08:	ldrb	r0, [r3]
   29a0c:	cmp	r0, #125	; 0x7d
   29a10:	bne	2969c <main@@Base+0x13968>
   29a14:	b	29abc <main@@Base+0x13d88>
   29a18:	mov	r2, r9
   29a1c:	b	29a54 <main@@Base+0x13d20>
   29a20:	mov	r2, sl
   29a24:	b	29a54 <main@@Base+0x13d20>
   29a28:	ldr	r0, [sp, #24]
   29a2c:	ldr	r1, [sp, #28]
   29a30:	subs	r3, r0, #65536	; 0x10000
   29a34:	sbcs	r1, r1, #0
   29a38:	bcc	29aa0 <main@@Base+0x13d6c>
   29a3c:	mov	r1, r2
   29a40:	mov	r0, r8
   29a44:	mov	r2, r9
   29a48:	mov	r3, #7
   29a4c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   29a50:	mov	r2, r0
   29a54:	ldr	r0, [sp, #8]
   29a58:	cmp	sl, r2
   29a5c:	bne	29a98 <main@@Base+0x13d64>
   29a60:	movw	r3, #33532	; 0x82fc
   29a64:	add	r0, sp, #16
   29a68:	mov	r1, sl
   29a6c:	mov	r2, r9
   29a70:	movt	r3, #5
   29a74:	str	r0, [sp]
   29a78:	mov	r0, r8
   29a7c:	bl	2a784 <main@@Base+0x14a50>
   29a80:	mov	r2, r0
   29a84:	cmp	r0, sl
   29a88:	cmpne	r2, r9
   29a8c:	beq	2a13c <main@@Base+0x14408>
   29a90:	ldrh	r4, [sp, #16]
   29a94:	ldr	r0, [sp, #8]
   29a98:	strh	r4, [r0]
   29a9c:	b	2995c <main@@Base+0x13c28>
   29aa0:	mov	r4, r0
   29aa4:	strh	r0, [sp, #16]
   29aa8:	b	29a54 <main@@Base+0x13d20>
   29aac:	mov	r1, r9
   29ab0:	b	29594 <main@@Base+0x13860>
   29ab4:	cmp	r0, #125	; 0x7d
   29ab8:	bne	2a0cc <main@@Base+0x14398>
   29abc:	add	r1, r3, #1
   29ac0:	sub	r0, r9, r1
   29ac4:	cmp	r0, #2
   29ac8:	blt	2a0f4 <main@@Base+0x143c0>
   29acc:	ldrb	r0, [r1]
   29ad0:	cmp	r0, #32
   29ad4:	bls	2a0e0 <main@@Base+0x143ac>
   29ad8:	mov	r4, r1
   29adc:	b	29568 <main@@Base+0x13834>
   29ae0:	mov	r0, r8
   29ae4:	mov	r1, r9
   29ae8:	b	2a0d4 <main@@Base+0x143a0>
   29aec:	bne	29afc <main@@Base+0x13dc8>
   29af0:	ldrb	r0, [r4, #2]!
   29af4:	cmp	r0, #32
   29af8:	bhi	29b0c <main@@Base+0x13dd8>
   29afc:	mov	r0, r8
   29b00:	mov	r2, r9
   29b04:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   29b08:	mov	r4, r0
   29b0c:	cmp	r4, r9
   29b10:	mov	r2, r9
   29b14:	beq	29b50 <main@@Base+0x13e1c>
   29b18:	ldrb	r0, [r4]
   29b1c:	cmp	r0, #125	; 0x7d
   29b20:	bne	29b4c <main@@Base+0x13e18>
   29b24:	add	r1, r4, #1
   29b28:	sub	r0, r9, r1
   29b2c:	cmp	r0, #2
   29b30:	blt	2a12c <main@@Base+0x143f8>
   29b34:	ldrb	r0, [r1]
   29b38:	cmp	r0, #32
   29b3c:	bhi	2a0b8 <main@@Base+0x14384>
   29b40:	bne	2a12c <main@@Base+0x143f8>
   29b44:	ldrb	r0, [r4, #2]!
   29b48:	b	2a124 <main@@Base+0x143f0>
   29b4c:	mov	r2, r4
   29b50:	str	r5, [sp, #12]
   29b54:	cmp	r2, r9
   29b58:	mov	sl, r9
   29b5c:	beq	29b8c <main@@Base+0x13e58>
   29b60:	ldrb	r0, [r2]
   29b64:	cmp	r0, #34	; 0x22
   29b68:	bne	29b74 <main@@Base+0x13e40>
   29b6c:	add	sl, r2, #1
   29b70:	b	29b8c <main@@Base+0x13e58>
   29b74:	mov	r1, r2
   29b78:	mov	r0, r8
   29b7c:	mov	r2, r9
   29b80:	mov	r3, #5
   29b84:	bl	3133c <flatcc_json_parser_set_error@@Base>
   29b88:	mov	sl, r0
   29b8c:	sub	r0, r9, sl
   29b90:	mov	r1, #8
   29b94:	cmp	r0, #8
   29b98:	movcs	r0, r1
   29b9c:	sub	r3, r0, #1
   29ba0:	cmp	r3, #7
   29ba4:	bhi	29dc0 <main@@Base+0x1408c>
   29ba8:	add	r5, pc, #32
   29bac:	mov	r0, #0
   29bb0:	mov	ip, #0
   29bb4:	mov	lr, #0
   29bb8:	mov	r4, #0
   29bbc:	mov	r2, #0
   29bc0:	mov	r6, #0
   29bc4:	mov	r7, #0
   29bc8:	mov	r1, #0
   29bcc:	ldr	pc, [r5, r3, lsl #2]
   29bd0:	andeq	r9, r2, r4, lsr ip
   29bd4:	andeq	r9, r2, ip, lsr #24
   29bd8:	andeq	r9, r2, r4, lsr #24
   29bdc:	andeq	r9, r2, ip, lsl ip
   29be0:	andeq	r9, r2, r0, lsl ip
   29be4:	andeq	r9, r2, r4, lsl #24
   29be8:	strdeq	r9, [r2], -r4
   29bec:	strdeq	r9, [r2], -r0
   29bf0:	ldrb	ip, [sl, #7]
   29bf4:	ldrb	r1, [sl, #6]
   29bf8:	mov	lr, r0
   29bfc:	orr	r1, ip, r1, lsl #8
   29c00:	mov	r0, r1
   29c04:	ldrb	r1, [sl, #5]
   29c08:	mov	r4, lr
   29c0c:	orr	r0, r0, r1, lsl #16
   29c10:	ldrb	r1, [sl, #4]
   29c14:	mov	r2, r4
   29c18:	orr	r0, r0, r1, lsl #24
   29c1c:	ldrb	r1, [sl, #3]
   29c20:	orr	r6, r1, r2
   29c24:	ldrb	r1, [sl, #2]
   29c28:	orr	r7, r6, r1, lsl #8
   29c2c:	ldrb	r1, [sl, #1]
   29c30:	orr	r1, r7, r1, lsl #16
   29c34:	movw	r2, #24948	; 0x6174
   29c38:	movt	r2, #25695	; 0x645f
   29c3c:	eor	r0, r0, r2
   29c40:	ldrb	r2, [sl]
   29c44:	orr	r1, r1, r2, lsl #24
   29c48:	movw	r2, #28530	; 0x6f72
   29c4c:	movt	r2, #29559	; 0x7377
   29c50:	eor	r1, r1, r2
   29c54:	orrs	r0, r0, r1
   29c58:	bne	29dc0 <main@@Base+0x1408c>
   29c5c:	add	r1, sl, #8
   29c60:	mov	r2, #8
   29c64:	sub	r0, r9, r1
   29c68:	cmp	r0, #8
   29c6c:	movcs	r0, r2
   29c70:	sub	r4, r0, #1
   29c74:	cmp	r4, #7
   29c78:	bhi	29dcc <main@@Base+0x14098>
   29c7c:	add	ip, pc, #36	; 0x24
   29c80:	mov	r2, #0
   29c84:	mov	r0, #0
   29c88:	mov	lr, #0
   29c8c:	mov	r3, #0
   29c90:	mov	r6, #0
   29c94:	mov	r7, #0
   29c98:	mov	r5, #0
   29c9c:	str	r2, [sp, #8]
   29ca0:	mov	r2, #0
   29ca4:	ldr	pc, [ip, r4, lsl #2]
   29ca8:	andeq	r9, r2, r4, lsl sp
   29cac:	andeq	r9, r2, ip, lsl #26
   29cb0:	andeq	r9, r2, r4, lsl #26
   29cb4:	strdeq	r9, [r2], -ip
   29cb8:	strdeq	r9, [r2], -r0
   29cbc:	andeq	r9, r2, r4, ror #25
   29cc0:	ldrdeq	r9, [r2], -r0
   29cc4:	andeq	r9, r2, r8, asr #25
   29cc8:	ldrb	r2, [sl, #15]
   29ccc:	str	r2, [sp, #8]
   29cd0:	ldrb	r2, [sl, #14]
   29cd4:	ldr	r3, [sp, #8]
   29cd8:	mov	lr, r0
   29cdc:	orr	r2, r3, r2, lsl #8
   29ce0:	mov	r0, r2
   29ce4:	ldrb	r2, [sl, #13]
   29ce8:	orr	r0, r0, r2, lsl #16
   29cec:	mov	r2, lr
   29cf0:	ldrb	r3, [sl, #12]
   29cf4:	orr	r0, r0, r3, lsl #24
   29cf8:	mov	r3, r2
   29cfc:	ldrb	r2, [sl, #11]
   29d00:	orr	r6, r2, r3
   29d04:	ldrb	r2, [sl, #10]
   29d08:	orr	r7, r6, r2, lsl #8
   29d0c:	ldrb	r2, [sl, #9]
   29d10:	orr	r5, r7, r2, lsl #16
   29d14:	movw	r2, #24941	; 0x616d
   29d18:	movw	r3, #25451	; 0x636b
   29d1c:	movt	r2, #24420	; 0x5f64
   29d20:	movt	r3, #29793	; 0x7461
   29d24:	eor	r0, r0, r2
   29d28:	ldrb	r2, [r1]
   29d2c:	orr	r2, r5, r2, lsl #24
   29d30:	eor	r2, r2, r3
   29d34:	orrs	r0, r0, r2
   29d38:	bne	29dcc <main@@Base+0x14098>
   29d3c:	add	r4, sl, #16
   29d40:	mov	r2, #8
   29d44:	sub	r0, r9, r4
   29d48:	cmp	r0, #8
   29d4c:	movcc	r2, r0
   29d50:	sub	r1, r2, #3
   29d54:	cmp	r1, #6
   29d58:	bcs	29dd4 <main@@Base+0x140a0>
   29d5c:	ldrb	r1, [sl, #18]
   29d60:	lsl	r1, r1, #8
   29d64:	ldrb	r2, [sl, #17]
   29d68:	orr	r1, r1, r2, lsl #16
   29d6c:	ldrb	r2, [r4]
   29d70:	bic	r1, r1, #255	; 0xff
   29d74:	orr	r1, r1, r2, lsl #24
   29d78:	movw	r2, #25856	; 0x6500
   29d7c:	movt	r2, #24935	; 0x6167
   29d80:	teq	r1, r2
   29d84:	bne	29efc <main@@Base+0x141c8>
   29d88:	cmp	r0, #4
   29d8c:	blt	29efc <main@@Base+0x141c8>
   29d90:	ldrb	r0, [sl, #19]
   29d94:	cmp	r0, #34	; 0x22
   29d98:	bne	29efc <main@@Base+0x141c8>
   29d9c:	add	r1, sl, #20
   29da0:	sub	r0, r9, r1
   29da4:	cmp	r0, #2
   29da8:	blt	29dfc <main@@Base+0x140c8>
   29dac:	ldrb	r0, [r1]
   29db0:	cmp	r0, #32
   29db4:	bls	29dec <main@@Base+0x140b8>
   29db8:	mov	sl, r1
   29dbc:	b	29e0c <main@@Base+0x140d8>
   29dc0:	mov	r0, r8
   29dc4:	mov	r1, sl
   29dc8:	b	29f04 <main@@Base+0x141d0>
   29dcc:	mov	r0, r8
   29dd0:	b	29f04 <main@@Base+0x141d0>
   29dd4:	mov	r1, #0
   29dd8:	cmp	r2, #1
   29ddc:	beq	29d6c <main@@Base+0x14038>
   29de0:	cmp	r2, #2
   29de4:	beq	29d64 <main@@Base+0x14030>
   29de8:	b	29efc <main@@Base+0x141c8>
   29dec:	bne	29dfc <main@@Base+0x140c8>
   29df0:	ldrb	r0, [sl, #21]!
   29df4:	cmp	r0, #32
   29df8:	bhi	29e0c <main@@Base+0x140d8>
   29dfc:	mov	r0, r8
   29e00:	mov	r2, r9
   29e04:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   29e08:	mov	sl, r0
   29e0c:	cmp	sl, r9
   29e10:	beq	29e44 <main@@Base+0x14110>
   29e14:	ldrb	r0, [sl]
   29e18:	cmp	r0, #58	; 0x3a
   29e1c:	bne	29e44 <main@@Base+0x14110>
   29e20:	add	r1, sl, #1
   29e24:	sub	r0, r9, r1
   29e28:	cmp	r0, #2
   29e2c:	blt	29e6c <main@@Base+0x14138>
   29e30:	ldrb	r0, [r1]
   29e34:	cmp	r0, #32
   29e38:	bls	29e5c <main@@Base+0x14128>
   29e3c:	mov	sl, r1
   29e40:	b	29e7c <main@@Base+0x14148>
   29e44:	mov	r0, r8
   29e48:	mov	r1, sl
   29e4c:	mov	r2, r9
   29e50:	mov	r3, #4
   29e54:	bl	3133c <flatcc_json_parser_set_error@@Base>
   29e58:	b	29e78 <main@@Base+0x14144>
   29e5c:	bne	29e6c <main@@Base+0x14138>
   29e60:	ldrb	r0, [sl, #2]!
   29e64:	cmp	r0, #32
   29e68:	bhi	29e7c <main@@Base+0x14148>
   29e6c:	mov	r0, r8
   29e70:	mov	r2, r9
   29e74:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   29e78:	mov	sl, r0
   29e7c:	cmp	r4, sl
   29e80:	beq	29efc <main@@Base+0x141c8>
   29e84:	mov	r6, #0
   29e88:	cmp	sl, r9
   29e8c:	str	r6, [sp, #28]
   29e90:	str	r6, [sp, #24]
   29e94:	str	r6, [sp, #16]
   29e98:	str	r6, [sp, #20]
   29e9c:	beq	29fcc <main@@Base+0x14298>
   29ea0:	add	r0, sp, #24
   29ea4:	mov	r1, sl
   29ea8:	mov	r2, r9
   29eac:	add	r3, sp, #20
   29eb0:	str	r0, [sp]
   29eb4:	mov	r0, r8
   29eb8:	bl	3314c <flatcc_json_parser_integer@@Base>
   29ebc:	cmp	r0, sl
   29ec0:	beq	29fd4 <main@@Base+0x142a0>
   29ec4:	ldr	r2, [sp, #20]
   29ec8:	mov	r4, r0
   29ecc:	ldr	r0, [sp, #24]
   29ed0:	ldr	r1, [sp, #28]
   29ed4:	cmp	r2, #0
   29ed8:	beq	29fdc <main@@Base+0x142a8>
   29edc:	subs	r2, r0, #-2147483647	; 0x80000001
   29ee0:	sbcs	r1, r1, #0
   29ee4:	bcc	2a004 <main@@Base+0x142d0>
   29ee8:	mov	r0, r8
   29eec:	mov	r1, r4
   29ef0:	mov	r2, r9
   29ef4:	mov	r3, #8
   29ef8:	b	29ff8 <main@@Base+0x142c4>
   29efc:	mov	r0, r8
   29f00:	mov	r1, r4
   29f04:	mov	r2, r9
   29f08:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   29f0c:	ldr	r5, [sp, #12]
   29f10:	mov	r4, r0
   29f14:	sub	r0, r9, r4
   29f18:	cmp	r0, #2
   29f1c:	blt	29f48 <main@@Base+0x14214>
   29f20:	ldrb	r0, [r4]
   29f24:	cmp	r0, #32
   29f28:	bls	29f34 <main@@Base+0x14200>
   29f2c:	mov	r2, r4
   29f30:	b	29f5c <main@@Base+0x14228>
   29f34:	bne	29f48 <main@@Base+0x14214>
   29f38:	mov	r2, r4
   29f3c:	ldrb	r0, [r2, #1]!
   29f40:	cmp	r0, #32
   29f44:	bhi	29f5c <main@@Base+0x14228>
   29f48:	mov	r0, r8
   29f4c:	mov	r1, r4
   29f50:	mov	r2, r9
   29f54:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   29f58:	mov	r2, r0
   29f5c:	cmp	r2, r9
   29f60:	beq	2a08c <main@@Base+0x14358>
   29f64:	ldrb	r0, [r2]
   29f68:	cmp	r0, #44	; 0x2c
   29f6c:	bne	2a094 <main@@Base+0x14360>
   29f70:	add	r1, r2, #1
   29f74:	sub	r0, r9, r1
   29f78:	cmp	r0, #2
   29f7c:	blt	29fa4 <main@@Base+0x14270>
   29f80:	ldrb	r0, [r1]
   29f84:	cmp	r0, #32
   29f88:	bls	29f94 <main@@Base+0x14260>
   29f8c:	mov	r2, r1
   29f90:	b	29fb4 <main@@Base+0x14280>
   29f94:	bne	29fa4 <main@@Base+0x14270>
   29f98:	ldrb	r0, [r2, #2]!
   29f9c:	cmp	r0, #32
   29fa0:	bhi	29fb4 <main@@Base+0x14280>
   29fa4:	mov	r0, r8
   29fa8:	mov	r2, r9
   29fac:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   29fb0:	mov	r2, r0
   29fb4:	cmp	r2, r9
   29fb8:	beq	2a0c0 <main@@Base+0x1438c>
   29fbc:	ldrb	r0, [r2]
   29fc0:	cmp	r0, #125	; 0x7d
   29fc4:	bne	29b54 <main@@Base+0x13e20>
   29fc8:	b	2a09c <main@@Base+0x14368>
   29fcc:	mov	r4, r9
   29fd0:	b	2a014 <main@@Base+0x142e0>
   29fd4:	mov	r4, sl
   29fd8:	b	2a014 <main@@Base+0x142e0>
   29fdc:	subs	r2, r0, #-2147483648	; 0x80000000
   29fe0:	sbcs	r1, r1, #0
   29fe4:	bcc	2a00c <main@@Base+0x142d8>
   29fe8:	mov	r0, r8
   29fec:	mov	r1, r4
   29ff0:	mov	r2, r9
   29ff4:	mov	r3, #7
   29ff8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   29ffc:	mov	r4, r0
   2a000:	b	2a014 <main@@Base+0x142e0>
   2a004:	rsb	r6, r0, #0
   2a008:	b	2a010 <main@@Base+0x142dc>
   2a00c:	mov	r6, r0
   2a010:	str	r6, [sp, #16]
   2a014:	cmp	sl, r4
   2a018:	bne	2a050 <main@@Base+0x1431c>
   2a01c:	movw	r3, #33520	; 0x82f0
   2a020:	add	r0, sp, #16
   2a024:	mov	r1, sl
   2a028:	mov	r2, r9
   2a02c:	movt	r3, #5
   2a030:	str	r0, [sp]
   2a034:	mov	r0, r8
   2a038:	bl	23214 <main@@Base+0xd4e0>
   2a03c:	mov	r4, r0
   2a040:	cmp	r0, sl
   2a044:	cmpne	r4, r9
   2a048:	beq	2a158 <main@@Base+0x14424>
   2a04c:	ldr	r6, [sp, #16]
   2a050:	ldr	r5, [sp, #12]
   2a054:	cmp	r6, #0
   2a058:	bne	2a068 <main@@Base+0x14334>
   2a05c:	ldrb	r0, [r8, #8]
   2a060:	tst	r0, #2
   2a064:	beq	29f14 <main@@Base+0x141e0>
   2a068:	ldr	r0, [r8]
   2a06c:	mov	r1, #0
   2a070:	mov	r2, #4
   2a074:	mov	r3, #4
   2a078:	bl	2e760 <flatcc_builder_table_add@@Base>
   2a07c:	cmp	r0, #0
   2a080:	beq	2a158 <main@@Base+0x14424>
   2a084:	str	r6, [r0]
   2a088:	b	29f14 <main@@Base+0x141e0>
   2a08c:	mov	r4, r9
   2a090:	b	295b4 <main@@Base+0x13880>
   2a094:	cmp	r0, #125	; 0x7d
   2a098:	bne	2a104 <main@@Base+0x143d0>
   2a09c:	add	r1, r2, #1
   2a0a0:	sub	r0, r9, r1
   2a0a4:	cmp	r0, #2
   2a0a8:	blt	2a12c <main@@Base+0x143f8>
   2a0ac:	ldrb	r0, [r1]
   2a0b0:	cmp	r0, #32
   2a0b4:	bls	2a118 <main@@Base+0x143e4>
   2a0b8:	mov	r4, r1
   2a0bc:	b	295b4 <main@@Base+0x13880>
   2a0c0:	mov	r0, r8
   2a0c4:	mov	r1, r9
   2a0c8:	b	2a10c <main@@Base+0x143d8>
   2a0cc:	mov	r0, r8
   2a0d0:	mov	r1, r3
   2a0d4:	mov	r2, r9
   2a0d8:	mov	r3, #10
   2a0dc:	b	29560 <main@@Base+0x1382c>
   2a0e0:	bne	2a0f4 <main@@Base+0x143c0>
   2a0e4:	ldrb	r0, [r3, #2]!
   2a0e8:	mov	r4, r3
   2a0ec:	cmp	r0, #32
   2a0f0:	bhi	29568 <main@@Base+0x13834>
   2a0f4:	mov	r0, r8
   2a0f8:	mov	r2, r9
   2a0fc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2a100:	b	29564 <main@@Base+0x13830>
   2a104:	mov	r0, r8
   2a108:	mov	r1, r2
   2a10c:	mov	r2, r9
   2a110:	mov	r3, #10
   2a114:	b	295ac <main@@Base+0x13878>
   2a118:	bne	2a12c <main@@Base+0x143f8>
   2a11c:	ldrb	r0, [r2, #2]!
   2a120:	mov	r4, r2
   2a124:	cmp	r0, #32
   2a128:	bhi	295b4 <main@@Base+0x13880>
   2a12c:	mov	r0, r8
   2a130:	mov	r2, r9
   2a134:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2a138:	b	295b0 <main@@Base+0x1387c>
   2a13c:	mov	r1, r2
   2a140:	mov	r0, r8
   2a144:	mov	r2, r9
   2a148:	mov	r3, #33	; 0x21
   2a14c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2a150:	ldr	r5, [sp, #12]
   2a154:	b	29564 <main@@Base+0x13830>
   2a158:	ldr	r5, [sp, #12]
   2a15c:	b	295c0 <main@@Base+0x1388c>
   2a160:	add	r0, r0, #1
   2a164:	uxtb	r1, r0
   2a168:	cmp	r1, #12
   2a16c:	movhi	r0, #0
   2a170:	bxhi	lr
   2a174:	movw	r1, #16140	; 0x3f0c
   2a178:	sxtb	r0, r0
   2a17c:	movt	r1, #4
   2a180:	ldr	r0, [r1, r0, lsl #2]
   2a184:	bx	lr
   2a188:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a18c:	add	fp, sp, #28
   2a190:	sub	sp, sp, #36	; 0x24
   2a194:	mov	r5, r0
   2a198:	mov	r0, #0
   2a19c:	mov	sl, r2
   2a1a0:	mov	r4, r1
   2a1a4:	mov	r1, #4
   2a1a8:	mov	r2, #4
   2a1ac:	str	r3, [sp, #12]
   2a1b0:	str	r0, [r3]
   2a1b4:	ldr	r0, [r5]
   2a1b8:	bl	2c7d8 <flatcc_builder_start_struct@@Base>
   2a1bc:	cmp	r0, #0
   2a1c0:	beq	2a244 <main@@Base+0x14510>
   2a1c4:	cmp	r4, sl
   2a1c8:	beq	2a200 <main@@Base+0x144cc>
   2a1cc:	ldrb	r1, [r4]
   2a1d0:	cmp	r1, #123	; 0x7b
   2a1d4:	bne	2a200 <main@@Base+0x144cc>
   2a1d8:	add	r1, r4, #1
   2a1dc:	str	r0, [sp, #8]
   2a1e0:	sub	r0, sl, r1
   2a1e4:	cmp	r0, #2
   2a1e8:	blt	2a278 <main@@Base+0x14544>
   2a1ec:	ldrb	r0, [r1]
   2a1f0:	cmp	r0, #32
   2a1f4:	bls	2a268 <main@@Base+0x14534>
   2a1f8:	mov	r4, r1
   2a1fc:	b	2a288 <main@@Base+0x14554>
   2a200:	mov	r0, r5
   2a204:	mov	r1, r4
   2a208:	mov	r2, sl
   2a20c:	mov	r3, #21
   2a210:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2a214:	mov	r4, r0
   2a218:	cmp	r4, sl
   2a21c:	mov	r1, sl
   2a220:	beq	2a248 <main@@Base+0x14514>
   2a224:	ldr	r0, [r5]
   2a228:	bl	2c878 <flatcc_builder_end_struct@@Base>
   2a22c:	ldr	r1, [sp, #12]
   2a230:	cmp	r0, #0
   2a234:	str	r0, [r1]
   2a238:	mov	r1, r4
   2a23c:	bne	2a25c <main@@Base+0x14528>
   2a240:	b	2a248 <main@@Base+0x14514>
   2a244:	mov	r1, r4
   2a248:	mov	r0, r5
   2a24c:	mov	r2, sl
   2a250:	mov	r3, #33	; 0x21
   2a254:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2a258:	mov	r4, r0
   2a25c:	mov	r0, r4
   2a260:	sub	sp, fp, #28
   2a264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a268:	bne	2a278 <main@@Base+0x14544>
   2a26c:	ldrb	r0, [r4, #2]!
   2a270:	cmp	r0, #32
   2a274:	bhi	2a288 <main@@Base+0x14554>
   2a278:	mov	r0, r5
   2a27c:	mov	r2, sl
   2a280:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2a284:	mov	r4, r0
   2a288:	cmp	r4, sl
   2a28c:	mov	r3, sl
   2a290:	beq	2a2cc <main@@Base+0x14598>
   2a294:	ldrb	r0, [r4]
   2a298:	cmp	r0, #125	; 0x7d
   2a29c:	bne	2a2c8 <main@@Base+0x14594>
   2a2a0:	add	r1, r4, #1
   2a2a4:	sub	r0, sl, r1
   2a2a8:	cmp	r0, #2
   2a2ac:	blt	2a760 <main@@Base+0x14a2c>
   2a2b0:	ldrb	r0, [r1]
   2a2b4:	cmp	r0, #32
   2a2b8:	bhi	2a724 <main@@Base+0x149f0>
   2a2bc:	bne	2a760 <main@@Base+0x14a2c>
   2a2c0:	ldrb	r0, [r4, #2]!
   2a2c4:	b	2a758 <main@@Base+0x14a24>
   2a2c8:	mov	r3, r4
   2a2cc:	cmp	r3, sl
   2a2d0:	mov	r9, sl
   2a2d4:	beq	2a304 <main@@Base+0x145d0>
   2a2d8:	ldrb	r0, [r3]
   2a2dc:	cmp	r0, #34	; 0x22
   2a2e0:	bne	2a2ec <main@@Base+0x145b8>
   2a2e4:	add	r9, r3, #1
   2a2e8:	b	2a304 <main@@Base+0x145d0>
   2a2ec:	mov	r1, r3
   2a2f0:	mov	r0, r5
   2a2f4:	mov	r2, sl
   2a2f8:	mov	r3, #5
   2a2fc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2a300:	mov	r9, r0
   2a304:	sub	r0, sl, r9
   2a308:	mov	r1, #8
   2a30c:	cmp	r0, #8
   2a310:	movcs	r0, r1
   2a314:	sub	r3, r0, #1
   2a318:	cmp	r3, #7
   2a31c:	bhi	2a45c <main@@Base+0x14728>
   2a320:	add	r6, pc, #36	; 0x24
   2a324:	mov	r8, r5
   2a328:	mov	r0, #0
   2a32c:	mov	ip, #0
   2a330:	mov	lr, #0
   2a334:	mov	r7, #0
   2a338:	mov	r2, #0
   2a33c:	mov	r5, #0
   2a340:	mov	r4, #0
   2a344:	mov	r1, #0
   2a348:	ldr	pc, [r6, r3, lsl #2]
   2a34c:			; <UNDEFINED> instruction: 0x0002a3b0
   2a350:	andeq	sl, r2, r8, lsr #7
   2a354:	andeq	sl, r2, r0, lsr #7
   2a358:	muleq	r2, r8, r3
   2a35c:	andeq	sl, r2, ip, lsl #7
   2a360:	andeq	sl, r2, r0, lsl #7
   2a364:	andeq	sl, r2, r0, ror r3
   2a368:	andeq	sl, r2, ip, ror #6
   2a36c:	ldrb	ip, [r9, #7]
   2a370:	ldrb	r1, [r9, #6]
   2a374:	mov	lr, r0
   2a378:	orr	r1, ip, r1, lsl #8
   2a37c:	mov	r0, r1
   2a380:	ldrb	r1, [r9, #5]
   2a384:	mov	r7, lr
   2a388:	orr	r0, r0, r1, lsl #16
   2a38c:	ldrb	r1, [r9, #4]
   2a390:	mov	r2, r7
   2a394:	orr	r0, r0, r1, lsl #24
   2a398:	ldrb	r1, [r9, #3]
   2a39c:	orr	r5, r1, r2
   2a3a0:	ldrb	r1, [r9, #2]
   2a3a4:	orr	r4, r5, r1, lsl #8
   2a3a8:	ldrb	r1, [r9, #1]
   2a3ac:	orr	r1, r4, r1, lsl #16
   2a3b0:	movw	r2, #29285	; 0x7265
   2a3b4:	mov	r5, r8
   2a3b8:	movt	r2, #29535	; 0x735f
   2a3bc:	eor	r0, r0, r2
   2a3c0:	ldrb	r2, [r9]
   2a3c4:	orr	r1, r1, r2, lsl #24
   2a3c8:	movw	r2, #28523	; 0x6f6b
   2a3cc:	movt	r2, #25199	; 0x626f
   2a3d0:	eor	r1, r1, r2
   2a3d4:	orrs	r0, r0, r1
   2a3d8:	bne	2a45c <main@@Base+0x14728>
   2a3dc:	add	r8, r9, #8
   2a3e0:	mov	r2, #8
   2a3e4:	sub	r0, sl, r8
   2a3e8:	cmp	r0, #8
   2a3ec:	movcc	r2, r0
   2a3f0:	sub	r1, r2, #2
   2a3f4:	cmp	r1, #7
   2a3f8:	bcs	2a468 <main@@Base+0x14734>
   2a3fc:	ldrb	r1, [r9, #9]
   2a400:	lsl	r2, r1, #16
   2a404:	mov	r1, #0
   2a408:	ldrb	r3, [r8]
   2a40c:	orr	r2, r2, r3, lsl #24
   2a410:	movw	r3, #0
   2a414:	movt	r3, #24932	; 0x6164
   2a418:	eor	r2, r2, r3
   2a41c:	orrs	r1, r1, r2
   2a420:	bne	2a58c <main@@Base+0x14858>
   2a424:	cmp	r0, #3
   2a428:	blt	2a58c <main@@Base+0x14858>
   2a42c:	ldrb	r0, [r9, #10]
   2a430:	cmp	r0, #34	; 0x22
   2a434:	bne	2a58c <main@@Base+0x14858>
   2a438:	add	r1, r9, #11
   2a43c:	sub	r0, sl, r1
   2a440:	cmp	r0, #2
   2a444:	blt	2a48c <main@@Base+0x14758>
   2a448:	ldrb	r0, [r1]
   2a44c:	cmp	r0, #32
   2a450:	bls	2a47c <main@@Base+0x14748>
   2a454:	mov	r9, r1
   2a458:	b	2a49c <main@@Base+0x14768>
   2a45c:	mov	r0, r5
   2a460:	mov	r1, r9
   2a464:	b	2a594 <main@@Base+0x14860>
   2a468:	cmp	r2, #1
   2a46c:	mov	r1, #0
   2a470:	mov	r2, #0
   2a474:	beq	2a408 <main@@Base+0x146d4>
   2a478:	b	2a58c <main@@Base+0x14858>
   2a47c:	bne	2a48c <main@@Base+0x14758>
   2a480:	ldrb	r0, [r9, #12]!
   2a484:	cmp	r0, #32
   2a488:	bhi	2a49c <main@@Base+0x14768>
   2a48c:	mov	r0, r5
   2a490:	mov	r2, sl
   2a494:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2a498:	mov	r9, r0
   2a49c:	cmp	r9, sl
   2a4a0:	beq	2a4d4 <main@@Base+0x147a0>
   2a4a4:	ldrb	r0, [r9]
   2a4a8:	cmp	r0, #58	; 0x3a
   2a4ac:	bne	2a4d4 <main@@Base+0x147a0>
   2a4b0:	add	r1, r9, #1
   2a4b4:	sub	r0, sl, r1
   2a4b8:	cmp	r0, #2
   2a4bc:	blt	2a4fc <main@@Base+0x147c8>
   2a4c0:	ldrb	r0, [r1]
   2a4c4:	cmp	r0, #32
   2a4c8:	bls	2a4ec <main@@Base+0x147b8>
   2a4cc:	mov	r9, r1
   2a4d0:	b	2a50c <main@@Base+0x147d8>
   2a4d4:	mov	r0, r5
   2a4d8:	mov	r1, r9
   2a4dc:	mov	r2, sl
   2a4e0:	mov	r3, #4
   2a4e4:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2a4e8:	b	2a508 <main@@Base+0x147d4>
   2a4ec:	bne	2a4fc <main@@Base+0x147c8>
   2a4f0:	ldrb	r0, [r9, #2]!
   2a4f4:	cmp	r0, #32
   2a4f8:	bhi	2a50c <main@@Base+0x147d8>
   2a4fc:	mov	r0, r5
   2a500:	mov	r2, sl
   2a504:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2a508:	mov	r9, r0
   2a50c:	cmp	r8, r9
   2a510:	beq	2a58c <main@@Base+0x14858>
   2a514:	mov	r8, #0
   2a518:	cmp	r9, sl
   2a51c:	str	r8, [sp, #28]
   2a520:	str	r8, [sp, #24]
   2a524:	str	r8, [sp, #16]
   2a528:	str	r8, [sp, #20]
   2a52c:	beq	2a658 <main@@Base+0x14924>
   2a530:	add	r0, sp, #24
   2a534:	mov	r1, r9
   2a538:	mov	r2, sl
   2a53c:	add	r3, sp, #20
   2a540:	str	r0, [sp]
   2a544:	mov	r0, r5
   2a548:	bl	3314c <flatcc_json_parser_integer@@Base>
   2a54c:	cmp	r0, r9
   2a550:	beq	2a664 <main@@Base+0x14930>
   2a554:	ldr	r3, [sp, #20]
   2a558:	mov	r2, r0
   2a55c:	ldr	r0, [sp, #24]
   2a560:	ldr	r1, [sp, #28]
   2a564:	cmp	r3, #0
   2a568:	beq	2a670 <main@@Base+0x1493c>
   2a56c:	subs	r3, r0, #-2147483647	; 0x80000001
   2a570:	sbcs	r1, r1, #0
   2a574:	bcc	2a69c <main@@Base+0x14968>
   2a578:	mov	r1, r2
   2a57c:	mov	r0, r5
   2a580:	mov	r2, sl
   2a584:	mov	r3, #8
   2a588:	b	2a68c <main@@Base+0x14958>
   2a58c:	mov	r0, r5
   2a590:	mov	r1, r8
   2a594:	mov	r2, sl
   2a598:	bl	319a4 <flatcc_json_parser_unmatched_symbol@@Base>
   2a59c:	mov	r2, r0
   2a5a0:	sub	r0, sl, r2
   2a5a4:	cmp	r0, #2
   2a5a8:	blt	2a5d4 <main@@Base+0x148a0>
   2a5ac:	ldrb	r0, [r2]
   2a5b0:	cmp	r0, #32
   2a5b4:	bls	2a5c0 <main@@Base+0x1488c>
   2a5b8:	mov	r3, r2
   2a5bc:	b	2a5e8 <main@@Base+0x148b4>
   2a5c0:	bne	2a5d4 <main@@Base+0x148a0>
   2a5c4:	mov	r3, r2
   2a5c8:	ldrb	r0, [r3, #1]!
   2a5cc:	cmp	r0, #32
   2a5d0:	bhi	2a5e8 <main@@Base+0x148b4>
   2a5d4:	mov	r1, r2
   2a5d8:	mov	r0, r5
   2a5dc:	mov	r2, sl
   2a5e0:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2a5e4:	mov	r3, r0
   2a5e8:	cmp	r3, sl
   2a5ec:	beq	2a6f8 <main@@Base+0x149c4>
   2a5f0:	ldrb	r0, [r3]
   2a5f4:	cmp	r0, #44	; 0x2c
   2a5f8:	bne	2a700 <main@@Base+0x149cc>
   2a5fc:	add	r1, r3, #1
   2a600:	sub	r0, sl, r1
   2a604:	cmp	r0, #2
   2a608:	blt	2a630 <main@@Base+0x148fc>
   2a60c:	ldrb	r0, [r1]
   2a610:	cmp	r0, #32
   2a614:	bls	2a620 <main@@Base+0x148ec>
   2a618:	mov	r3, r1
   2a61c:	b	2a640 <main@@Base+0x1490c>
   2a620:	bne	2a630 <main@@Base+0x148fc>
   2a624:	ldrb	r0, [r3, #2]!
   2a628:	cmp	r0, #32
   2a62c:	bhi	2a640 <main@@Base+0x1490c>
   2a630:	mov	r0, r5
   2a634:	mov	r2, sl
   2a638:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2a63c:	mov	r3, r0
   2a640:	cmp	r3, sl
   2a644:	beq	2a72c <main@@Base+0x149f8>
   2a648:	ldrb	r0, [r3]
   2a64c:	cmp	r0, #125	; 0x7d
   2a650:	bne	2a2cc <main@@Base+0x14598>
   2a654:	b	2a708 <main@@Base+0x149d4>
   2a658:	ldr	r0, [sp, #8]
   2a65c:	mov	r2, sl
   2a660:	b	2a6b0 <main@@Base+0x1497c>
   2a664:	ldr	r0, [sp, #8]
   2a668:	mov	r2, r9
   2a66c:	b	2a6b0 <main@@Base+0x1497c>
   2a670:	subs	r3, r0, #-2147483648	; 0x80000000
   2a674:	sbcs	r1, r1, #0
   2a678:	bcc	2a6a4 <main@@Base+0x14970>
   2a67c:	mov	r1, r2
   2a680:	mov	r0, r5
   2a684:	mov	r2, sl
   2a688:	mov	r3, #7
   2a68c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2a690:	mov	r2, r0
   2a694:	ldr	r0, [sp, #8]
   2a698:	b	2a6b0 <main@@Base+0x1497c>
   2a69c:	rsb	r8, r0, #0
   2a6a0:	b	2a6a8 <main@@Base+0x14974>
   2a6a4:	mov	r8, r0
   2a6a8:	ldr	r0, [sp, #8]
   2a6ac:	str	r8, [sp, #16]
   2a6b0:	cmp	r9, r2
   2a6b4:	bne	2a6f0 <main@@Base+0x149bc>
   2a6b8:	movw	r3, #33544	; 0x8308
   2a6bc:	add	r0, sp, #16
   2a6c0:	mov	r1, r9
   2a6c4:	mov	r2, sl
   2a6c8:	movt	r3, #5
   2a6cc:	str	r0, [sp]
   2a6d0:	mov	r0, r5
   2a6d4:	bl	23214 <main@@Base+0xd4e0>
   2a6d8:	mov	r2, r0
   2a6dc:	cmp	r0, r9
   2a6e0:	cmpne	r2, sl
   2a6e4:	beq	2a770 <main@@Base+0x14a3c>
   2a6e8:	ldr	r8, [sp, #16]
   2a6ec:	ldr	r0, [sp, #8]
   2a6f0:	str	r8, [r0]
   2a6f4:	b	2a5a0 <main@@Base+0x1486c>
   2a6f8:	mov	r1, sl
   2a6fc:	b	2a248 <main@@Base+0x14514>
   2a700:	cmp	r0, #125	; 0x7d
   2a704:	bne	2a738 <main@@Base+0x14a04>
   2a708:	add	r1, r3, #1
   2a70c:	sub	r0, sl, r1
   2a710:	cmp	r0, #2
   2a714:	blt	2a760 <main@@Base+0x14a2c>
   2a718:	ldrb	r0, [r1]
   2a71c:	cmp	r0, #32
   2a720:	bls	2a74c <main@@Base+0x14a18>
   2a724:	mov	r4, r1
   2a728:	b	2a218 <main@@Base+0x144e4>
   2a72c:	mov	r0, r5
   2a730:	mov	r1, sl
   2a734:	b	2a740 <main@@Base+0x14a0c>
   2a738:	mov	r0, r5
   2a73c:	mov	r1, r3
   2a740:	mov	r2, sl
   2a744:	mov	r3, #10
   2a748:	b	2a210 <main@@Base+0x144dc>
   2a74c:	bne	2a760 <main@@Base+0x14a2c>
   2a750:	ldrb	r0, [r3, #2]!
   2a754:	mov	r4, r3
   2a758:	cmp	r0, #32
   2a75c:	bhi	2a218 <main@@Base+0x144e4>
   2a760:	mov	r0, r5
   2a764:	mov	r2, sl
   2a768:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2a76c:	b	2a214 <main@@Base+0x144e0>
   2a770:	mov	r1, r2
   2a774:	mov	r0, r5
   2a778:	mov	r2, sl
   2a77c:	mov	r3, #33	; 0x21
   2a780:	b	2a210 <main@@Base+0x144dc>
   2a784:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a788:	add	fp, sp, #28
   2a78c:	sub	sp, sp, #44	; 0x2c
   2a790:	mov	r6, r2
   2a794:	ldr	r2, [fp, #8]
   2a798:	mov	r5, r0
   2a79c:	mov	r0, #0
   2a7a0:	mov	sl, r3
   2a7a4:	cmp	r1, r6
   2a7a8:	strh	r0, [r2]
   2a7ac:	beq	2a7d8 <main@@Base+0x14aa4>
   2a7b0:	ldrb	r0, [r1]
   2a7b4:	cmp	r0, #34	; 0x22
   2a7b8:	bne	2a7c4 <main@@Base+0x14a90>
   2a7bc:	add	r1, r1, #1
   2a7c0:	b	2a7d8 <main@@Base+0x14aa4>
   2a7c4:	mov	r0, r5
   2a7c8:	mov	r2, r6
   2a7cc:	mov	r3, #5
   2a7d0:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2a7d4:	mov	r1, r0
   2a7d8:	sub	r0, r6, r1
   2a7dc:	cmp	r0, #2
   2a7e0:	blt	2a80c <main@@Base+0x14ad8>
   2a7e4:	ldrb	r0, [r1]
   2a7e8:	cmp	r0, #32
   2a7ec:	bls	2a7f8 <main@@Base+0x14ac4>
   2a7f0:	mov	r7, r1
   2a7f4:	b	2a81c <main@@Base+0x14ae8>
   2a7f8:	bne	2a80c <main@@Base+0x14ad8>
   2a7fc:	mov	r7, r1
   2a800:	ldrb	r0, [r7, #1]!
   2a804:	cmp	r0, #32
   2a808:	bhi	2a81c <main@@Base+0x14ae8>
   2a80c:	mov	r0, r5
   2a810:	mov	r2, r6
   2a814:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   2a818:	mov	r7, r0
   2a81c:	cmp	r7, r6
   2a820:	beq	2a924 <main@@Base+0x14bf0>
   2a824:	add	r0, sl, #4
   2a828:	mov	r1, #0
   2a82c:	add	r8, sp, #32
   2a830:	add	r9, sp, #28
   2a834:	str	sl, [sp, #16]
   2a838:	str	r1, [sp, #20]
   2a83c:	str	r0, [sp, #12]
   2a840:	ldr	r4, [sl]
   2a844:	mov	sl, r0
   2a848:	add	r0, sp, #24
   2a84c:	mov	r1, r7
   2a850:	mov	r2, r6
   2a854:	mov	r3, r9
   2a858:	str	r8, [sp]
   2a85c:	str	r0, [sp, #4]
   2a860:	mov	r0, r5
   2a864:	blx	r4
   2a868:	cmp	r0, r6
   2a86c:	beq	2a924 <main@@Base+0x14bf0>
   2a870:	mov	r4, r0
   2a874:	cmp	r0, r7
   2a878:	bne	2a88c <main@@Base+0x14b58>
   2a87c:	ldr	r4, [sl], #4
   2a880:	cmp	r4, #0
   2a884:	bne	2a848 <main@@Base+0x14b14>
   2a888:	b	2a92c <main@@Base+0x14bf8>
   2a88c:	ldr	r0, [sp, #28]
   2a890:	cmp	r0, #0
   2a894:	beq	2a8b4 <main@@Base+0x14b80>
   2a898:	mov	r0, r5
   2a89c:	mov	r1, r4
   2a8a0:	mov	r2, r6
   2a8a4:	mov	r3, #8
   2a8a8:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2a8ac:	ldr	sl, [sp, #16]
   2a8b0:	b	2a8ec <main@@Base+0x14bb8>
   2a8b4:	ldr	r0, [sp, #32]
   2a8b8:	ldr	r1, [sp, #36]	; 0x24
   2a8bc:	ldr	sl, [sp, #16]
   2a8c0:	subs	r2, r0, #65536	; 0x10000
   2a8c4:	sbcs	r1, r1, #0
   2a8c8:	bcc	2a8e4 <main@@Base+0x14bb0>
   2a8cc:	mov	r0, r5
   2a8d0:	mov	r1, r4
   2a8d4:	mov	r2, r6
   2a8d8:	mov	r3, #7
   2a8dc:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2a8e0:	b	2a8ec <main@@Base+0x14bb8>
   2a8e4:	str	r0, [sp, #20]
   2a8e8:	mov	r0, r4
   2a8ec:	cmp	r0, r6
   2a8f0:	beq	2a924 <main@@Base+0x14bf0>
   2a8f4:	ldr	r0, [fp, #8]
   2a8f8:	ldr	r2, [sp, #20]
   2a8fc:	mov	r7, r4
   2a900:	mov	r1, r0
   2a904:	ldrh	r0, [r0]
   2a908:	add	r0, r0, r2
   2a90c:	strh	r0, [r1]
   2a910:	ldr	r0, [sp, #24]
   2a914:	cmp	r0, #0
   2a918:	ldr	r0, [sp, #12]
   2a91c:	bne	2a840 <main@@Base+0x14b0c>
   2a920:	b	2a944 <main@@Base+0x14c10>
   2a924:	mov	r4, r6
   2a928:	b	2a944 <main@@Base+0x14c10>
   2a92c:	mov	r0, r5
   2a930:	mov	r1, r7
   2a934:	mov	r2, r6
   2a938:	mov	r3, #23
   2a93c:	bl	3133c <flatcc_json_parser_set_error@@Base>
   2a940:	mov	r4, r0
   2a944:	mov	r0, r4
   2a948:	sub	sp, fp, #28
   2a94c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a950:	push	{r4, r5, r6, sl, fp, lr}
   2a954:	add	fp, sp, #16
   2a958:	sub	sp, sp, #16
   2a95c:	mov	r5, r0
   2a960:	movw	r0, #15161	; 0x3b39
   2a964:	mov	r4, r1
   2a968:	mov	r6, #1
   2a96c:	mov	r1, #0
   2a970:	mov	r3, #0
   2a974:	movt	r0, #4
   2a978:	mov	r2, r4
   2a97c:	stm	sp, {r0, r6}
   2a980:	mov	r0, r5
   2a984:	bl	380f8 <flatcc_json_printer_float_struct_field@@Base>
   2a988:	movw	r0, #25095	; 0x6207
   2a98c:	mov	r1, #1
   2a990:	mov	r2, r4
   2a994:	mov	r3, #4
   2a998:	movt	r0, #4
   2a99c:	stm	sp, {r0, r6}
   2a9a0:	mov	r0, r5
   2a9a4:	bl	380f8 <flatcc_json_printer_float_struct_field@@Base>
   2a9a8:	movw	r0, #15602	; 0x3cf2
   2a9ac:	mov	r1, #2
   2a9b0:	mov	r2, r4
   2a9b4:	mov	r3, #8
   2a9b8:	movt	r0, #4
   2a9bc:	stm	sp, {r0, r6}
   2a9c0:	mov	r0, r5
   2a9c4:	bl	380f8 <flatcc_json_printer_float_struct_field@@Base>
   2a9c8:	movw	r0, #15604	; 0x3cf4
   2a9cc:	mov	r6, #5
   2a9d0:	mov	r1, #3
   2a9d4:	mov	r2, r4
   2a9d8:	mov	r3, #16
   2a9dc:	movt	r0, #4
   2a9e0:	stm	sp, {r0, r6}
   2a9e4:	mov	r0, r5
   2a9e8:	bl	38160 <flatcc_json_printer_double_struct_field@@Base>
   2a9ec:	movw	r0, #43596	; 0xaa4c
   2a9f0:	movw	r1, #15610	; 0x3cfa
   2a9f4:	mov	r2, r4
   2a9f8:	mov	r3, #24
   2a9fc:	movt	r1, #4
   2aa00:	movt	r0, #2
   2aa04:	stm	sp, {r1, r6}
   2aa08:	str	r0, [sp, #8]
   2aa0c:	mov	r0, r5
   2aa10:	mov	r1, #4
   2aa14:	bl	383c8 <flatcc_json_printer_int8_enum_struct_field@@Base>
   2aa18:	movw	r0, #43948	; 0xabac
   2aa1c:	movw	r1, #15616	; 0x3d00
   2aa20:	mov	r2, r4
   2aa24:	mov	r3, #26
   2aa28:	movt	r1, #4
   2aa2c:	movt	r0, #2
   2aa30:	stm	sp, {r1, r6}
   2aa34:	str	r0, [sp, #8]
   2aa38:	mov	r0, r5
   2aa3c:	mov	r1, #5
   2aa40:	bl	3f438 <flatcc_json_printer_embedded_struct_field@@Base>
   2aa44:	sub	sp, fp, #16
   2aa48:	pop	{r4, r5, r6, sl, fp, pc}
   2aa4c:	push	{r4, r5, r6, r7, fp, lr}
   2aa50:	add	fp, sp, #16
   2aa54:	mov	r4, r0
   2aa58:	mvn	r0, #0
   2aa5c:	uxtb	r7, r1
   2aa60:	uxtab	r0, r0, r1
   2aa64:	ands	r5, r0, r7
   2aa68:	movwne	r5, #1
   2aa6c:	cmp	r1, #0
   2aa70:	beq	2ab04 <main@@Base+0x14dd0>
   2aa74:	ands	r0, r1, #244	; 0xf4
   2aa78:	bne	2ab04 <main@@Base+0x14dd0>
   2aa7c:	mov	r0, r4
   2aa80:	mov	r1, r5
   2aa84:	bl	364ec <flatcc_json_printer_delimit_enum_flags@@Base>
   2aa88:	mov	r6, #0
   2aa8c:	tst	r7, #1
   2aa90:	beq	2aab0 <main@@Base+0x14d7c>
   2aa94:	movw	r2, #15622	; 0x3d06
   2aa98:	mov	r0, r4
   2aa9c:	mov	r1, #0
   2aaa0:	mov	r3, #3
   2aaa4:	movt	r2, #4
   2aaa8:	bl	36520 <flatcc_json_printer_enum_flag@@Base>
   2aaac:	mov	r6, #1
   2aab0:	tst	r7, #2
   2aab4:	beq	2aad4 <main@@Base+0x14da0>
   2aab8:	movw	r2, #15626	; 0x3d0a
   2aabc:	mov	r0, r4
   2aac0:	mov	r1, r6
   2aac4:	mov	r3, #5
   2aac8:	movt	r2, #4
   2aacc:	bl	36520 <flatcc_json_printer_enum_flag@@Base>
   2aad0:	add	r6, r6, #1
   2aad4:	tst	r7, #8
   2aad8:	beq	2aaf4 <main@@Base+0x14dc0>
   2aadc:	movw	r2, #15632	; 0x3d10
   2aae0:	mov	r0, r4
   2aae4:	mov	r1, r6
   2aae8:	mov	r3, #4
   2aaec:	movt	r2, #4
   2aaf0:	bl	36520 <flatcc_json_printer_enum_flag@@Base>
   2aaf4:	mov	r0, r4
   2aaf8:	mov	r1, r5
   2aafc:	pop	{r4, r5, r6, r7, fp, lr}
   2ab00:	b	364ec <flatcc_json_printer_delimit_enum_flags@@Base>
   2ab04:	mov	r0, r4
   2ab08:	pop	{r4, r5, r6, r7, fp, lr}
   2ab0c:	b	36290 <flatcc_json_printer_int8@@Base>
   2ab10:	sub	r1, r1, #1
   2ab14:	cmp	r1, #3
   2ab18:	bhi	2ab44 <main@@Base+0x14e10>
   2ab1c:	add	r2, pc, #0
   2ab20:	ldr	pc, [r2, r1, lsl #2]
   2ab24:	andeq	sl, r2, r4, lsr fp
   2ab28:	andeq	sl, r2, r4, asr fp
   2ab2c:	andeq	sl, r2, r4, ror #22
   2ab30:	andeq	sl, r2, r4, ror fp
   2ab34:	movw	r1, #15637	; 0x3d15
   2ab38:	mov	r2, #7
   2ab3c:	movt	r1, #4
   2ab40:	b	36400 <flatcc_json_printer_enum@@Base>
   2ab44:	movw	r1, #22096	; 0x5650
   2ab48:	mov	r2, #4
   2ab4c:	movt	r1, #4
   2ab50:	b	36400 <flatcc_json_printer_enum@@Base>
   2ab54:	movw	r1, #15645	; 0x3d1d
   2ab58:	mov	r2, #23
   2ab5c:	movt	r1, #4
   2ab60:	b	36400 <flatcc_json_printer_enum@@Base>
   2ab64:	movw	r1, #15669	; 0x3d35
   2ab68:	mov	r2, #8
   2ab6c:	movt	r1, #4
   2ab70:	b	36400 <flatcc_json_printer_enum@@Base>
   2ab74:	movw	r1, #15678	; 0x3d3e
   2ab78:	mov	r2, #3
   2ab7c:	movt	r1, #4
   2ab80:	b	36400 <flatcc_json_printer_enum@@Base>
   2ab84:	ldrb	r2, [r1, #8]
   2ab88:	sub	r2, r2, #1
   2ab8c:	uxtb	r3, r2
   2ab90:	cmp	r3, #3
   2ab94:	bxhi	lr
   2ab98:	movw	r3, #16192	; 0x3f40
   2ab9c:	sxtb	r2, r2
   2aba0:	movt	r3, #4
   2aba4:	ldr	r2, [r3, r2, lsl #2]
   2aba8:	b	3f194 <flatcc_json_printer_union_table@@Base>
   2abac:	push	{r4, r5, r6, sl, fp, lr}
   2abb0:	add	fp, sp, #16
   2abb4:	sub	sp, sp, #8
   2abb8:	mov	r5, r0
   2abbc:	movw	r0, #15388	; 0x3c1c
   2abc0:	mov	r4, r1
   2abc4:	mov	r6, #1
   2abc8:	mov	r1, #0
   2abcc:	mov	r3, #0
   2abd0:	movt	r0, #4
   2abd4:	mov	r2, r4
   2abd8:	stm	sp, {r0, r6}
   2abdc:	mov	r0, r5
   2abe0:	bl	37ef4 <flatcc_json_printer_int16_struct_field@@Base>
   2abe4:	movw	r0, #15803	; 0x3dbb
   2abe8:	mov	r1, #1
   2abec:	mov	r2, r4
   2abf0:	mov	r3, #2
   2abf4:	movt	r0, #4
   2abf8:	stm	sp, {r0, r6}
   2abfc:	mov	r0, r5
   2ac00:	bl	37e78 <flatcc_json_printer_int8_struct_field@@Base>
   2ac04:	sub	sp, fp, #16
   2ac08:	pop	{r4, r5, r6, sl, fp, pc}
   2ac0c:	push	{r4, r5, r6, sl, fp, lr}
   2ac10:	add	fp, sp, #16
   2ac14:	sub	sp, sp, #16
   2ac18:	movw	r3, #16050	; 0x3eb2
   2ac1c:	mov	r5, r0
   2ac20:	mov	r0, #2
   2ac24:	mov	r2, #0
   2ac28:	mov	r4, r1
   2ac2c:	mov	r6, #0
   2ac30:	movt	r3, #4
   2ac34:	str	r0, [sp]
   2ac38:	mov	r0, r5
   2ac3c:	bl	365ec <flatcc_json_printer_string_field@@Base>
   2ac40:	movw	r3, #16053	; 0x3eb5
   2ac44:	mov	r0, #3
   2ac48:	mov	r1, r4
   2ac4c:	mov	r2, #1
   2ac50:	str	r6, [sp, #8]
   2ac54:	str	r6, [sp, #12]
   2ac58:	movt	r3, #4
   2ac5c:	str	r0, [sp]
   2ac60:	mov	r0, r5
   2ac64:	bl	37038 <flatcc_json_printer_int64_field@@Base>
   2ac68:	movw	r3, #18348	; 0x47ac
   2ac6c:	mov	r0, #5
   2ac70:	mov	r1, r4
   2ac74:	mov	r2, #2
   2ac78:	movt	r3, #4
   2ac7c:	stm	sp, {r0, r6}
   2ac80:	mov	r0, r5
   2ac84:	bl	36b24 <flatcc_json_printer_uint16_field@@Base>
   2ac88:	sub	sp, fp, #16
   2ac8c:	pop	{r4, r5, r6, sl, fp, pc}
   2ac90:	push	{r4, r5, fp, lr}
   2ac94:	add	fp, sp, #8
   2ac98:	sub	sp, sp, #8
   2ac9c:	mov	r4, r1
   2aca0:	movw	r1, #16050	; 0x3eb2
   2aca4:	mov	r5, r0
   2aca8:	mov	r0, #2
   2acac:	mov	r3, #0
   2acb0:	movt	r1, #4
   2acb4:	str	r0, [sp, #4]
   2acb8:	mov	r0, r5
   2acbc:	mov	r2, r4
   2acc0:	str	r1, [sp]
   2acc4:	mov	r1, #0
   2acc8:	bl	37db8 <flatcc_json_printer_uint32_struct_field@@Base>
   2accc:	movw	r1, #16057	; 0x3eb9
   2acd0:	mov	r0, #8
   2acd4:	mov	r2, r4
   2acd8:	mov	r3, #4
   2acdc:	movt	r1, #4
   2ace0:	str	r0, [sp, #4]
   2ace4:	mov	r0, r5
   2ace8:	str	r1, [sp]
   2acec:	mov	r1, #1
   2acf0:	bl	37db8 <flatcc_json_printer_uint32_struct_field@@Base>
   2acf4:	sub	sp, fp, #8
   2acf8:	pop	{r4, r5, fp, pc}
   2acfc:	bx	lr
   2ad00:	push	{r4, r5, r6, sl, fp, lr}
   2ad04:	add	fp, sp, #16
   2ad08:	sub	sp, sp, #8
   2ad0c:	movw	r3, #16069	; 0x3ec5
   2ad10:	mov	r5, r0
   2ad14:	mov	r0, #4
   2ad18:	mov	r6, #0
   2ad1c:	mov	r2, #0
   2ad20:	mov	r4, r1
   2ad24:	movt	r3, #4
   2ad28:	stm	sp, {r0, r6}
   2ad2c:	mov	r0, r5
   2ad30:	bl	36878 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2ad34:	movw	r3, #16066	; 0x3ec2
   2ad38:	mov	r0, #1
   2ad3c:	mov	r1, #7
   2ad40:	mov	r2, #1
   2ad44:	movt	r3, #4
   2ad48:	str	r1, [sp]
   2ad4c:	str	r0, [sp, #4]
   2ad50:	mov	r0, r5
   2ad54:	mov	r1, r4
   2ad58:	bl	36878 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2ad5c:	movw	r3, #16074	; 0x3eca
   2ad60:	mov	r0, #6
   2ad64:	mov	r1, r4
   2ad68:	mov	r2, #2
   2ad6c:	movt	r3, #4
   2ad70:	stm	sp, {r0, r6}
   2ad74:	mov	r0, r5
   2ad78:	bl	36878 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2ad7c:	sub	sp, fp, #16
   2ad80:	pop	{r4, r5, r6, sl, fp, pc}
   2ad84:	push	{r4, r5, r6, r7, fp, lr}
   2ad88:	add	fp, sp, #16
   2ad8c:	sub	sp, sp, #16
   2ad90:	movw	r3, #15210	; 0x3b6a
   2ad94:	movw	r7, #43596	; 0xaa4c
   2ad98:	mov	r5, r0
   2ad9c:	mov	r0, #5
   2ada0:	mov	r6, #2
   2ada4:	mov	r2, #0
   2ada8:	mov	r4, r1
   2adac:	movt	r3, #4
   2adb0:	movt	r7, #2
   2adb4:	stm	sp, {r0, r6, r7}
   2adb8:	mov	r0, r5
   2adbc:	bl	37794 <flatcc_json_printer_int8_enum_field@@Base>
   2adc0:	movw	r3, #15682	; 0x3d42
   2adc4:	mov	r0, #6
   2adc8:	mov	r1, r4
   2adcc:	mov	r2, #1
   2add0:	movt	r3, #4
   2add4:	stm	sp, {r0, r6, r7}
   2add8:	mov	r0, r5
   2addc:	bl	37794 <flatcc_json_printer_int8_enum_field@@Base>
   2ade0:	movw	r3, #15689	; 0x3d49
   2ade4:	mov	r0, r5
   2ade8:	mov	r1, r4
   2adec:	mov	r2, #2
   2adf0:	str	r6, [sp]
   2adf4:	str	r6, [sp, #4]
   2adf8:	movt	r3, #4
   2adfc:	bl	36a60 <flatcc_json_printer_uint8_field@@Base>
   2ae00:	movw	r3, #15692	; 0x3d4c
   2ae04:	mov	r0, #3
   2ae08:	mov	r1, r4
   2ae0c:	mov	r2, #3
   2ae10:	movt	r3, #4
   2ae14:	stm	sp, {r0, r6}
   2ae18:	mov	r0, r5
   2ae1c:	bl	36a60 <flatcc_json_printer_uint8_field@@Base>
   2ae20:	sub	sp, fp, #16
   2ae24:	pop	{r4, r5, r6, r7, fp, pc}
   2ae28:	bx	lr
   2ae2c:	push	{r4, r5, fp, lr}
   2ae30:	add	fp, sp, #8
   2ae34:	sub	sp, sp, #16
   2ae38:	mov	r5, r0
   2ae3c:	movw	r0, #44760	; 0xaed8
   2ae40:	movw	r3, #15696	; 0x3d50
   2ae44:	mov	r4, r1
   2ae48:	mov	r1, #6
   2ae4c:	mov	r2, #0
   2ae50:	movt	r0, #2
   2ae54:	movt	r3, #4
   2ae58:	str	r1, [sp]
   2ae5c:	mov	r1, r4
   2ae60:	str	r0, [sp, #4]
   2ae64:	mov	r0, r5
   2ae68:	bl	3eb64 <flatcc_json_printer_table_field@@Base>
   2ae6c:	movw	r0, #44916	; 0xaf74
   2ae70:	movw	r3, #15703	; 0x3d57
   2ae74:	mov	r1, #5
   2ae78:	mov	r2, #1
   2ae7c:	movt	r0, #2
   2ae80:	movt	r3, #4
   2ae84:	str	r1, [sp]
   2ae88:	mov	r1, r4
   2ae8c:	str	r0, [sp, #4]
   2ae90:	mov	r0, r5
   2ae94:	bl	3eb64 <flatcc_json_printer_table_field@@Base>
   2ae98:	movw	r0, #43908	; 0xab84
   2ae9c:	movw	r1, #43792	; 0xab10
   2aea0:	movw	r3, #15709	; 0x3d5d
   2aea4:	mov	r2, #7
   2aea8:	movt	r0, #2
   2aeac:	movt	r1, #2
   2aeb0:	movt	r3, #4
   2aeb4:	str	r2, [sp]
   2aeb8:	mov	r2, #3
   2aebc:	str	r1, [sp, #4]
   2aec0:	str	r0, [sp, #8]
   2aec4:	mov	r0, r5
   2aec8:	mov	r1, r4
   2aecc:	bl	3e7b4 <flatcc_json_printer_union_vector_field@@Base>
   2aed0:	sub	sp, fp, #8
   2aed4:	pop	{r4, r5, fp, pc}
   2aed8:	push	{r4, r5, r6, sl, fp, lr}
   2aedc:	add	fp, sp, #16
   2aee0:	sub	sp, sp, #8
   2aee4:	mov	r5, r0
   2aee8:	movw	r0, #45144	; 0xb058
   2aeec:	movw	r3, #15717	; 0x3d65
   2aef0:	mov	r4, r1
   2aef4:	mov	r1, #21
   2aef8:	mov	r2, #0
   2aefc:	movt	r0, #2
   2af00:	movt	r3, #4
   2af04:	str	r1, [sp]
   2af08:	mov	r1, r4
   2af0c:	str	r0, [sp, #4]
   2af10:	mov	r0, r5
   2af14:	bl	3eb64 <flatcc_json_printer_table_field@@Base>
   2af18:	movw	r0, #45468	; 0xb19c
   2af1c:	movw	r3, #15739	; 0x3d7b
   2af20:	mov	r6, #22
   2af24:	mov	r1, r4
   2af28:	mov	r2, #1
   2af2c:	movt	r0, #2
   2af30:	movt	r3, #4
   2af34:	str	r6, [sp]
   2af38:	str	r0, [sp, #4]
   2af3c:	mov	r0, r5
   2af40:	bl	3eb64 <flatcc_json_printer_table_field@@Base>
   2af44:	movw	r0, #45568	; 0xb200
   2af48:	movw	r3, #15762	; 0x3d92
   2af4c:	mov	r1, r4
   2af50:	mov	r2, #2
   2af54:	str	r6, [sp]
   2af58:	movt	r0, #2
   2af5c:	movt	r3, #4
   2af60:	str	r0, [sp, #4]
   2af64:	mov	r0, r5
   2af68:	bl	3eb64 <flatcc_json_printer_table_field@@Base>
   2af6c:	sub	sp, fp, #16
   2af70:	pop	{r4, r5, r6, sl, fp, pc}
   2af74:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2af78:	add	fp, sp, #24
   2af7c:	sub	sp, sp, #16
   2af80:	movw	r6, #45848	; 0xb318
   2af84:	movw	r3, #15912	; 0x3e28
   2af88:	movw	r7, #45668	; 0xb264
   2af8c:	mov	r5, r0
   2af90:	mov	r0, #14
   2af94:	mov	r2, #1
   2af98:	mov	r4, r1
   2af9c:	movt	r6, #2
   2afa0:	movt	r3, #4
   2afa4:	movt	r7, #2
   2afa8:	stm	sp, {r0, r7}
   2afac:	mov	r0, r5
   2afb0:	str	r6, [sp, #8]
   2afb4:	bl	3ed44 <flatcc_json_printer_union_field@@Base>
   2afb8:	movw	r3, #15927	; 0x3e37
   2afbc:	mov	r8, #10
   2afc0:	mov	r0, r5
   2afc4:	mov	r1, r4
   2afc8:	mov	r2, #3
   2afcc:	str	r7, [sp, #4]
   2afd0:	str	r6, [sp, #8]
   2afd4:	movt	r3, #4
   2afd8:	str	r8, [sp]
   2afdc:	bl	3ed44 <flatcc_json_printer_union_field@@Base>
   2afe0:	movw	r3, #15938	; 0x3e42
   2afe4:	mov	r0, #9
   2afe8:	mov	r1, r4
   2afec:	mov	r2, #5
   2aff0:	mov	r9, #5
   2aff4:	movt	r3, #4
   2aff8:	stm	sp, {r0, r7}
   2affc:	mov	r0, r5
   2b000:	str	r6, [sp, #8]
   2b004:	bl	3ed44 <flatcc_json_printer_union_field@@Base>
   2b008:	movw	r3, #15948	; 0x3e4c
   2b00c:	mov	r0, r5
   2b010:	mov	r1, r4
   2b014:	mov	r2, #7
   2b018:	str	r9, [sp]
   2b01c:	str	r7, [sp, #4]
   2b020:	str	r6, [sp, #8]
   2b024:	movt	r3, #4
   2b028:	bl	3ed44 <flatcc_json_printer_union_field@@Base>
   2b02c:	movw	r3, #15954	; 0x3e52
   2b030:	mov	r0, r5
   2b034:	mov	r1, r4
   2b038:	mov	r2, #9
   2b03c:	str	r8, [sp]
   2b040:	str	r7, [sp, #4]
   2b044:	str	r6, [sp, #8]
   2b048:	movt	r3, #4
   2b04c:	bl	3e7b4 <flatcc_json_printer_union_vector_field@@Base>
   2b050:	sub	sp, fp, #24
   2b054:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b058:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b05c:	add	fp, sp, #24
   2b060:	sub	sp, sp, #16
   2b064:	movw	r3, #15785	; 0x3da9
   2b068:	mov	r9, #4
   2b06c:	mov	r2, #0
   2b070:	mov	r4, r1
   2b074:	mov	r5, r0
   2b078:	mov	r6, #0
   2b07c:	movt	r3, #4
   2b080:	str	r9, [sp]
   2b084:	bl	365ec <flatcc_json_printer_string_field@@Base>
   2b088:	movw	r3, #15790	; 0x3dae
   2b08c:	mov	r8, #9
   2b090:	mov	r0, r5
   2b094:	mov	r1, r4
   2b098:	mov	r2, #1
   2b09c:	str	r6, [sp, #4]
   2b0a0:	movt	r3, #4
   2b0a4:	str	r8, [sp]
   2b0a8:	bl	36be8 <flatcc_json_printer_uint32_field@@Base>
   2b0ac:	movw	r3, #15800	; 0x3db8
   2b0b0:	mov	r0, r5
   2b0b4:	mov	r1, r4
   2b0b8:	mov	r2, #2
   2b0bc:	str	r9, [sp]
   2b0c0:	movt	r3, #4
   2b0c4:	bl	365ec <flatcc_json_printer_string_field@@Base>
   2b0c8:	movw	r3, #15805	; 0x3dbd
   2b0cc:	mov	r7, #8
   2b0d0:	mov	r0, r5
   2b0d4:	mov	r1, r4
   2b0d8:	mov	r2, #3
   2b0dc:	str	r6, [sp, #8]
   2b0e0:	str	r6, [sp, #12]
   2b0e4:	movt	r3, #4
   2b0e8:	str	r7, [sp]
   2b0ec:	bl	37038 <flatcc_json_printer_int64_field@@Base>
   2b0f0:	movw	r3, #15814	; 0x3dc6
   2b0f4:	mov	r0, r5
   2b0f8:	mov	r1, r4
   2b0fc:	mov	r2, #4
   2b100:	str	r9, [sp]
   2b104:	movt	r3, #4
   2b108:	bl	365ec <flatcc_json_printer_string_field@@Base>
   2b10c:	movw	r3, #15819	; 0x3dcb
   2b110:	mov	r0, r5
   2b114:	mov	r1, r4
   2b118:	mov	r2, #5
   2b11c:	str	r6, [sp, #8]
   2b120:	str	r6, [sp, #12]
   2b124:	str	r7, [sp]
   2b128:	movt	r3, #4
   2b12c:	bl	37038 <flatcc_json_printer_int64_field@@Base>
   2b130:	movw	r3, #15828	; 0x3dd4
   2b134:	mov	r0, r5
   2b138:	mov	r1, r4
   2b13c:	mov	r2, #6
   2b140:	str	r8, [sp]
   2b144:	str	r6, [sp, #4]
   2b148:	movt	r3, #4
   2b14c:	bl	36be8 <flatcc_json_printer_uint32_field@@Base>
   2b150:	movw	r3, #15838	; 0x3dde
   2b154:	mov	r0, r5
   2b158:	mov	r1, r4
   2b15c:	mov	r2, #7
   2b160:	str	r6, [sp, #8]
   2b164:	str	r6, [sp, #12]
   2b168:	str	r7, [sp]
   2b16c:	movt	r3, #4
   2b170:	bl	37038 <flatcc_json_printer_int64_field@@Base>
   2b174:	movw	r3, #15847	; 0x3de7
   2b178:	mov	r0, r5
   2b17c:	mov	r1, r4
   2b180:	mov	r2, #8
   2b184:	str	r8, [sp]
   2b188:	str	r6, [sp, #4]
   2b18c:	movt	r3, #4
   2b190:	bl	36be8 <flatcc_json_printer_uint32_field@@Base>
   2b194:	sub	sp, fp, #24
   2b198:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b19c:	push	{r4, r5, r6, sl, fp, lr}
   2b1a0:	add	fp, sp, #16
   2b1a4:	sub	sp, sp, #16
   2b1a8:	movw	r3, #15857	; 0x3df1
   2b1ac:	mov	r5, r0
   2b1b0:	mov	r0, #15
   2b1b4:	mov	r6, #0
   2b1b8:	mov	r2, #0
   2b1bc:	mov	r4, r1
   2b1c0:	movt	r3, #4
   2b1c4:	str	r0, [sp]
   2b1c8:	mov	r0, r5
   2b1cc:	str	r6, [sp, #8]
   2b1d0:	str	r6, [sp, #12]
   2b1d4:	bl	37038 <flatcc_json_printer_int64_field@@Base>
   2b1d8:	movw	r3, #15873	; 0x3e01
   2b1dc:	mov	r0, #16
   2b1e0:	mov	r1, r4
   2b1e4:	mov	r2, #1
   2b1e8:	movt	r3, #4
   2b1ec:	stm	sp, {r0, r6}
   2b1f0:	mov	r0, r5
   2b1f4:	bl	36be8 <flatcc_json_printer_uint32_field@@Base>
   2b1f8:	sub	sp, fp, #16
   2b1fc:	pop	{r4, r5, r6, sl, fp, pc}
   2b200:	push	{r4, r5, r6, sl, fp, lr}
   2b204:	add	fp, sp, #16
   2b208:	sub	sp, sp, #16
   2b20c:	movw	r3, #15857	; 0x3df1
   2b210:	mov	r5, r0
   2b214:	mov	r0, #15
   2b218:	mov	r6, #0
   2b21c:	mov	r2, #0
   2b220:	mov	r4, r1
   2b224:	movt	r3, #4
   2b228:	str	r0, [sp]
   2b22c:	mov	r0, r5
   2b230:	str	r6, [sp, #8]
   2b234:	str	r6, [sp, #12]
   2b238:	bl	37038 <flatcc_json_printer_int64_field@@Base>
   2b23c:	movw	r3, #15890	; 0x3e12
   2b240:	mov	r0, #21
   2b244:	mov	r1, r4
   2b248:	mov	r2, #1
   2b24c:	movt	r3, #4
   2b250:	stm	sp, {r0, r6}
   2b254:	mov	r0, r5
   2b258:	bl	36be8 <flatcc_json_printer_uint32_field@@Base>
   2b25c:	sub	sp, fp, #16
   2b260:	pop	{r4, r5, r6, sl, fp, pc}
   2b264:	sub	r2, r1, #2
   2b268:	cmp	r2, #9
   2b26c:	bhi	2b2b0 <main@@Base+0x1557c>
   2b270:	add	r1, pc, #0
   2b274:	ldr	pc, [r1, r2, lsl #2]
   2b278:	andeq	fp, r2, r0, lsr #5
   2b27c:	andeq	fp, r2, r8, asr #5
   2b280:	andeq	fp, r2, r8, asr #5
   2b284:	andeq	fp, r2, r8, asr #5
   2b288:	andeq	fp, r2, r8, asr #5
   2b28c:	andeq	fp, r2, r8, asr #5
   2b290:	ldrdeq	fp, [r2], -r8
   2b294:	andeq	fp, r2, r8, ror #5
   2b298:	strdeq	fp, [r2], -r8
   2b29c:	andeq	fp, r2, r8, lsl #6
   2b2a0:	movw	r1, #15965	; 0x3e5d
   2b2a4:	mov	r2, #5
   2b2a8:	movt	r1, #4
   2b2ac:	b	36400 <flatcc_json_printer_enum@@Base>
   2b2b0:	cmp	r1, #255	; 0xff
   2b2b4:	bne	2b2c8 <main@@Base+0x15594>
   2b2b8:	movw	r1, #16000	; 0x3e80
   2b2bc:	mov	r2, #6
   2b2c0:	movt	r1, #4
   2b2c4:	b	36400 <flatcc_json_printer_enum@@Base>
   2b2c8:	movw	r1, #22096	; 0x5650
   2b2cc:	mov	r2, #4
   2b2d0:	movt	r1, #4
   2b2d4:	b	36400 <flatcc_json_printer_enum@@Base>
   2b2d8:	movw	r1, #15971	; 0x3e63
   2b2dc:	mov	r2, #8
   2b2e0:	movt	r1, #4
   2b2e4:	b	36400 <flatcc_json_printer_enum@@Base>
   2b2e8:	movw	r1, #15980	; 0x3e6c
   2b2ec:	mov	r2, #5
   2b2f0:	movt	r1, #4
   2b2f4:	b	36400 <flatcc_json_printer_enum@@Base>
   2b2f8:	movw	r1, #15986	; 0x3e72
   2b2fc:	mov	r2, #7
   2b300:	movt	r1, #4
   2b304:	b	36400 <flatcc_json_printer_enum@@Base>
   2b308:	movw	r1, #15994	; 0x3e7a
   2b30c:	mov	r2, #5
   2b310:	movt	r1, #4
   2b314:	b	36400 <flatcc_json_printer_enum@@Base>
   2b318:	ldrb	r3, [r1, #8]
   2b31c:	sub	r2, r3, #2
   2b320:	cmp	r2, #9
   2b324:	bhi	2b364 <main@@Base+0x15630>
   2b328:	add	r3, pc, #0
   2b32c:	ldr	pc, [r3, r2, lsl #2]
   2b330:	andeq	fp, r2, r0, ror r3
   2b334:	andeq	fp, r2, r8, lsl #7
   2b338:	andeq	fp, r2, r8, lsl #7
   2b33c:	andeq	fp, r2, r8, lsl #7
   2b340:	andeq	fp, r2, r8, lsl #7
   2b344:	andeq	fp, r2, r8, lsl #7
   2b348:	andeq	fp, r2, ip, ror r3
   2b34c:	andeq	fp, r2, r8, asr r3
   2b350:	andeq	fp, r2, r8, asr r3
   2b354:	andeq	fp, r2, ip, ror #6
   2b358:	movw	r2, #46072	; 0xb3f8
   2b35c:	movt	r2, #2
   2b360:	b	3f304 <flatcc_json_printer_union_struct@@Base>
   2b364:	cmp	r3, #255	; 0xff
   2b368:	bxne	lr
   2b36c:	b	3f424 <flatcc_json_printer_union_string@@Base>
   2b370:	movw	r2, #45964	; 0xb38c
   2b374:	movt	r2, #2
   2b378:	b	3f194 <flatcc_json_printer_union_table@@Base>
   2b37c:	movw	r2, #46016	; 0xb3c0
   2b380:	movt	r2, #2
   2b384:	b	3f304 <flatcc_json_printer_union_struct@@Base>
   2b388:	bx	lr
   2b38c:	push	{fp, lr}
   2b390:	mov	fp, sp
   2b394:	sub	sp, sp, #8
   2b398:	mov	r3, #19
   2b39c:	mov	r2, #0
   2b3a0:	str	r3, [sp]
   2b3a4:	movw	r3, #16007	; 0x3e87
   2b3a8:	str	r2, [sp, #4]
   2b3ac:	mov	r2, #0
   2b3b0:	movt	r3, #4
   2b3b4:	bl	36f5c <flatcc_json_printer_int32_field@@Base>
   2b3b8:	mov	sp, fp
   2b3bc:	pop	{fp, pc}
   2b3c0:	push	{fp, lr}
   2b3c4:	mov	fp, sp
   2b3c8:	sub	sp, sp, #8
   2b3cc:	movw	r3, #16027	; 0x3e9b
   2b3d0:	mov	r2, r1
   2b3d4:	mov	r1, #11
   2b3d8:	movt	r3, #4
   2b3dc:	str	r1, [sp, #4]
   2b3e0:	mov	r1, #0
   2b3e4:	str	r3, [sp]
   2b3e8:	mov	r3, #0
   2b3ec:	bl	37d58 <flatcc_json_printer_uint16_struct_field@@Base>
   2b3f0:	mov	sp, fp
   2b3f4:	pop	{fp, pc}
   2b3f8:	push	{fp, lr}
   2b3fc:	mov	fp, sp
   2b400:	sub	sp, sp, #8
   2b404:	movw	r3, #16039	; 0x3ea7
   2b408:	mov	r2, r1
   2b40c:	mov	r1, #10
   2b410:	movt	r3, #4
   2b414:	str	r1, [sp, #4]
   2b418:	mov	r1, #0
   2b41c:	str	r3, [sp]
   2b420:	mov	r3, #0
   2b424:	bl	37f70 <flatcc_json_printer_int32_struct_field@@Base>
   2b428:	mov	sp, fp
   2b42c:	pop	{fp, pc}
   2b430:	ldrb	r1, [r0, #12]
   2b434:	sub	r1, r1, #1
   2b438:	uxtb	r2, r1
   2b43c:	cmp	r2, #3
   2b440:	movhi	r0, #0
   2b444:	bxhi	lr
   2b448:	movw	r2, #16208	; 0x3f50
   2b44c:	sxtb	r1, r1
   2b450:	movt	r2, #4
   2b454:	ldr	r1, [r2, r1, lsl #2]
   2b458:	b	302e0 <flatcc_verify_union_table@@Base>
   2b45c:	push	{r4, sl, fp, lr}
   2b460:	add	fp, sp, #8
   2b464:	mov	r1, #0
   2b468:	mov	r2, #0
   2b46c:	mov	r4, r0
   2b470:	bl	2fc60 <flatcc_verify_string_field@@Base>
   2b474:	cmp	r0, #0
   2b478:	popne	{r4, sl, fp, pc}
   2b47c:	mov	r0, r4
   2b480:	mov	r1, #1
   2b484:	mov	r2, #8
   2b488:	mov	r3, #8
   2b48c:	bl	2fbe8 <flatcc_verify_field@@Base>
   2b490:	cmp	r0, #0
   2b494:	beq	2b49c <main@@Base+0x15768>
   2b498:	pop	{r4, sl, fp, pc}
   2b49c:	mov	r0, r4
   2b4a0:	mov	r1, #2
   2b4a4:	mov	r2, #2
   2b4a8:	mov	r3, #2
   2b4ac:	pop	{r4, sl, fp, lr}
   2b4b0:	b	2fbe8 <flatcc_verify_field@@Base>
   2b4b4:	mov	r0, #0
   2b4b8:	bx	lr
   2b4bc:	push	{r4, r5, r6, sl, fp, lr}
   2b4c0:	add	fp, sp, #16
   2b4c4:	sub	sp, sp, #8
   2b4c8:	mvn	r5, #0
   2b4cc:	mov	r6, #1
   2b4d0:	mov	r1, #0
   2b4d4:	mov	r2, #0
   2b4d8:	mov	r3, #1
   2b4dc:	mov	r4, r0
   2b4e0:	str	r6, [sp]
   2b4e4:	str	r5, [sp, #4]
   2b4e8:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   2b4ec:	cmp	r0, #0
   2b4f0:	bne	2b540 <main@@Base+0x1580c>
   2b4f4:	mov	r0, r4
   2b4f8:	mov	r1, #1
   2b4fc:	mov	r2, #0
   2b500:	mov	r3, #1
   2b504:	str	r6, [sp]
   2b508:	str	r5, [sp, #4]
   2b50c:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   2b510:	cmp	r0, #0
   2b514:	bne	2b540 <main@@Base+0x1580c>
   2b518:	movw	r0, #63500	; 0xf80c
   2b51c:	mov	r1, #1
   2b520:	mov	r2, #0
   2b524:	mov	r3, #0
   2b528:	movt	r0, #1
   2b52c:	str	r1, [sp]
   2b530:	mov	r1, #2
   2b534:	str	r0, [sp, #4]
   2b538:	mov	r0, r4
   2b53c:	bl	3091c <flatcc_verify_table_as_nested_root@@Base>
   2b540:	sub	sp, fp, #16
   2b544:	pop	{r4, r5, r6, sl, fp, pc}
   2b548:	push	{r4, sl, fp, lr}
   2b54c:	add	fp, sp, #8
   2b550:	mov	r1, #0
   2b554:	mov	r2, #1
   2b558:	mov	r3, #1
   2b55c:	mov	r4, r0
   2b560:	bl	2fbe8 <flatcc_verify_field@@Base>
   2b564:	cmp	r0, #0
   2b568:	bne	2b5a4 <main@@Base+0x15870>
   2b56c:	mov	r0, r4
   2b570:	mov	r1, #1
   2b574:	mov	r2, #1
   2b578:	mov	r3, #1
   2b57c:	bl	2fbe8 <flatcc_verify_field@@Base>
   2b580:	cmp	r0, #0
   2b584:	popne	{r4, sl, fp, pc}
   2b588:	mov	r0, r4
   2b58c:	mov	r1, #2
   2b590:	mov	r2, #1
   2b594:	mov	r3, #1
   2b598:	bl	2fbe8 <flatcc_verify_field@@Base>
   2b59c:	cmp	r0, #0
   2b5a0:	beq	2b5a8 <main@@Base+0x15874>
   2b5a4:	pop	{r4, sl, fp, pc}
   2b5a8:	mov	r0, r4
   2b5ac:	mov	r1, #3
   2b5b0:	mov	r2, #1
   2b5b4:	mov	r3, #1
   2b5b8:	pop	{r4, sl, fp, lr}
   2b5bc:	b	2fbe8 <flatcc_verify_field@@Base>
   2b5c0:	mov	r0, #0
   2b5c4:	bx	lr
   2b5c8:	push	{r4, sl, fp, lr}
   2b5cc:	add	fp, sp, #8
   2b5d0:	movw	r3, #46640	; 0xb630
   2b5d4:	mov	r1, #0
   2b5d8:	mov	r2, #0
   2b5dc:	mov	r4, r0
   2b5e0:	movt	r3, #2
   2b5e4:	bl	2ff48 <flatcc_verify_table_field@@Base>
   2b5e8:	cmp	r0, #0
   2b5ec:	popne	{r4, sl, fp, pc}
   2b5f0:	movw	r3, #46744	; 0xb698
   2b5f4:	mov	r0, r4
   2b5f8:	mov	r1, #1
   2b5fc:	mov	r2, #0
   2b600:	movt	r3, #2
   2b604:	bl	2ff48 <flatcc_verify_table_field@@Base>
   2b608:	cmp	r0, #0
   2b60c:	beq	2b614 <main@@Base+0x158e0>
   2b610:	pop	{r4, sl, fp, pc}
   2b614:	movw	r3, #46128	; 0xb430
   2b618:	mov	r0, r4
   2b61c:	mov	r1, #3
   2b620:	mov	r2, #0
   2b624:	movt	r3, #2
   2b628:	pop	{r4, sl, fp, lr}
   2b62c:	b	30bf8 <flatcc_verify_union_vector_field@@Base>
   2b630:	push	{r4, sl, fp, lr}
   2b634:	add	fp, sp, #8
   2b638:	movw	r3, #46912	; 0xb740
   2b63c:	mov	r1, #0
   2b640:	mov	r2, #0
   2b644:	mov	r4, r0
   2b648:	movt	r3, #2
   2b64c:	bl	2ff48 <flatcc_verify_table_field@@Base>
   2b650:	cmp	r0, #0
   2b654:	popne	{r4, sl, fp, pc}
   2b658:	movw	r3, #47160	; 0xb838
   2b65c:	mov	r0, r4
   2b660:	mov	r1, #1
   2b664:	mov	r2, #0
   2b668:	movt	r3, #2
   2b66c:	bl	2ff48 <flatcc_verify_table_field@@Base>
   2b670:	cmp	r0, #0
   2b674:	beq	2b67c <main@@Base+0x15948>
   2b678:	pop	{r4, sl, fp, pc}
   2b67c:	movw	r3, #47220	; 0xb874
   2b680:	mov	r0, r4
   2b684:	mov	r1, #2
   2b688:	mov	r2, #0
   2b68c:	movt	r3, #2
   2b690:	pop	{r4, sl, fp, lr}
   2b694:	b	2ff48 <flatcc_verify_table_field@@Base>
   2b698:	push	{r4, sl, fp, lr}
   2b69c:	add	fp, sp, #8
   2b6a0:	movw	r3, #47280	; 0xb8b0
   2b6a4:	mov	r1, #1
   2b6a8:	mov	r2, #0
   2b6ac:	mov	r4, r0
   2b6b0:	movt	r3, #2
   2b6b4:	bl	30acc <flatcc_verify_union_field@@Base>
   2b6b8:	cmp	r0, #0
   2b6bc:	bne	2b720 <main@@Base+0x159ec>
   2b6c0:	movw	r3, #47280	; 0xb8b0
   2b6c4:	mov	r0, r4
   2b6c8:	mov	r1, #3
   2b6cc:	mov	r2, #0
   2b6d0:	movt	r3, #2
   2b6d4:	bl	30acc <flatcc_verify_union_field@@Base>
   2b6d8:	cmp	r0, #0
   2b6dc:	bne	2b720 <main@@Base+0x159ec>
   2b6e0:	movw	r3, #47280	; 0xb8b0
   2b6e4:	mov	r0, r4
   2b6e8:	mov	r1, #5
   2b6ec:	mov	r2, #0
   2b6f0:	movt	r3, #2
   2b6f4:	bl	30acc <flatcc_verify_union_field@@Base>
   2b6f8:	cmp	r0, #0
   2b6fc:	popne	{r4, sl, fp, pc}
   2b700:	movw	r3, #47280	; 0xb8b0
   2b704:	mov	r0, r4
   2b708:	mov	r1, #7
   2b70c:	mov	r2, #0
   2b710:	movt	r3, #2
   2b714:	bl	30acc <flatcc_verify_union_field@@Base>
   2b718:	cmp	r0, #0
   2b71c:	beq	2b724 <main@@Base+0x159f0>
   2b720:	pop	{r4, sl, fp, pc}
   2b724:	movw	r3, #47280	; 0xb8b0
   2b728:	mov	r0, r4
   2b72c:	mov	r1, #9
   2b730:	mov	r2, #0
   2b734:	movt	r3, #2
   2b738:	pop	{r4, sl, fp, lr}
   2b73c:	b	30bf8 <flatcc_verify_union_vector_field@@Base>
   2b740:	push	{r4, sl, fp, lr}
   2b744:	add	fp, sp, #8
   2b748:	mov	r1, #0
   2b74c:	mov	r2, #0
   2b750:	mov	r4, r0
   2b754:	bl	2fc60 <flatcc_verify_string_field@@Base>
   2b758:	cmp	r0, #0
   2b75c:	bne	2b81c <main@@Base+0x15ae8>
   2b760:	mov	r0, r4
   2b764:	mov	r1, #1
   2b768:	mov	r2, #4
   2b76c:	mov	r3, #4
   2b770:	bl	2fbe8 <flatcc_verify_field@@Base>
   2b774:	cmp	r0, #0
   2b778:	bne	2b81c <main@@Base+0x15ae8>
   2b77c:	mov	r0, r4
   2b780:	mov	r1, #2
   2b784:	mov	r2, #0
   2b788:	bl	2fc60 <flatcc_verify_string_field@@Base>
   2b78c:	cmp	r0, #0
   2b790:	bne	2b81c <main@@Base+0x15ae8>
   2b794:	mov	r0, r4
   2b798:	mov	r1, #3
   2b79c:	mov	r2, #8
   2b7a0:	mov	r3, #8
   2b7a4:	bl	2fbe8 <flatcc_verify_field@@Base>
   2b7a8:	cmp	r0, #0
   2b7ac:	bne	2b81c <main@@Base+0x15ae8>
   2b7b0:	mov	r0, r4
   2b7b4:	mov	r1, #4
   2b7b8:	mov	r2, #0
   2b7bc:	bl	2fc60 <flatcc_verify_string_field@@Base>
   2b7c0:	cmp	r0, #0
   2b7c4:	bne	2b81c <main@@Base+0x15ae8>
   2b7c8:	mov	r0, r4
   2b7cc:	mov	r1, #5
   2b7d0:	mov	r2, #8
   2b7d4:	mov	r3, #8
   2b7d8:	bl	2fbe8 <flatcc_verify_field@@Base>
   2b7dc:	cmp	r0, #0
   2b7e0:	bne	2b81c <main@@Base+0x15ae8>
   2b7e4:	mov	r0, r4
   2b7e8:	mov	r1, #6
   2b7ec:	mov	r2, #4
   2b7f0:	mov	r3, #4
   2b7f4:	bl	2fbe8 <flatcc_verify_field@@Base>
   2b7f8:	cmp	r0, #0
   2b7fc:	popne	{r4, sl, fp, pc}
   2b800:	mov	r0, r4
   2b804:	mov	r1, #7
   2b808:	mov	r2, #8
   2b80c:	mov	r3, #8
   2b810:	bl	2fbe8 <flatcc_verify_field@@Base>
   2b814:	cmp	r0, #0
   2b818:	beq	2b820 <main@@Base+0x15aec>
   2b81c:	pop	{r4, sl, fp, pc}
   2b820:	mov	r0, r4
   2b824:	mov	r1, #8
   2b828:	mov	r2, #4
   2b82c:	mov	r3, #4
   2b830:	pop	{r4, sl, fp, lr}
   2b834:	b	2fbe8 <flatcc_verify_field@@Base>
   2b838:	push	{r4, sl, fp, lr}
   2b83c:	add	fp, sp, #8
   2b840:	mov	r1, #0
   2b844:	mov	r2, #8
   2b848:	mov	r3, #8
   2b84c:	mov	r4, r0
   2b850:	bl	2fbe8 <flatcc_verify_field@@Base>
   2b854:	cmp	r0, #0
   2b858:	popne	{r4, sl, fp, pc}
   2b85c:	mov	r0, r4
   2b860:	mov	r1, #1
   2b864:	mov	r2, #4
   2b868:	mov	r3, #4
   2b86c:	pop	{r4, sl, fp, lr}
   2b870:	b	2fbe8 <flatcc_verify_field@@Base>
   2b874:	push	{r4, sl, fp, lr}
   2b878:	add	fp, sp, #8
   2b87c:	mov	r1, #0
   2b880:	mov	r2, #8
   2b884:	mov	r3, #8
   2b888:	mov	r4, r0
   2b88c:	bl	2fbe8 <flatcc_verify_field@@Base>
   2b890:	cmp	r0, #0
   2b894:	popne	{r4, sl, fp, pc}
   2b898:	mov	r0, r4
   2b89c:	mov	r1, #1
   2b8a0:	mov	r2, #4
   2b8a4:	mov	r3, #4
   2b8a8:	pop	{r4, sl, fp, lr}
   2b8ac:	b	2fbe8 <flatcc_verify_field@@Base>
   2b8b0:	ldrb	r2, [r0, #12]
   2b8b4:	sub	r1, r2, #2
   2b8b8:	cmp	r1, #9
   2b8bc:	bhi	2b8fc <main@@Base+0x15bc8>
   2b8c0:	add	r2, pc, #0
   2b8c4:	ldr	pc, [r2, r1, lsl #2]
   2b8c8:	andeq	fp, r2, r0, lsl r9
   2b8cc:	andeq	fp, r2, r8, lsl #18
   2b8d0:	andeq	fp, r2, r8, lsl #18
   2b8d4:	andeq	fp, r2, r8, lsl #18
   2b8d8:	andeq	fp, r2, r8, lsl #18
   2b8dc:	andeq	fp, r2, r8, lsl #18
   2b8e0:	andeq	fp, r2, ip, lsl r9
   2b8e4:	strdeq	fp, [r2], -r0
   2b8e8:	strdeq	fp, [r2], -r0
   2b8ec:	andeq	fp, r2, r4, lsl #18
   2b8f0:	mov	r1, #4
   2b8f4:	mov	r2, #4
   2b8f8:	b	303c8 <flatcc_verify_union_struct@@Base>
   2b8fc:	cmp	r2, #255	; 0xff
   2b900:	bne	2b908 <main@@Base+0x15bd4>
   2b904:	b	30420 <flatcc_verify_union_string@@Base>
   2b908:	mov	r0, #0
   2b90c:	bx	lr
   2b910:	movw	r1, #47400	; 0xb928
   2b914:	movt	r1, #2
   2b918:	b	302e0 <flatcc_verify_union_table@@Base>
   2b91c:	mov	r1, #2
   2b920:	mov	r2, #2
   2b924:	b	303c8 <flatcc_verify_union_struct@@Base>
   2b928:	mov	r1, #0
   2b92c:	mov	r2, #4
   2b930:	mov	r3, #4
   2b934:	b	2fbe8 <flatcc_verify_field@@Base>

0002b938 <flatcc_builder_default_alloc@@Base>:
   2b938:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b93c:	add	fp, sp, #24
   2b940:	mov	r4, r1
   2b944:	cmp	r2, #0
   2b948:	beq	2b990 <flatcc_builder_default_alloc@@Base+0x58>
   2b94c:	ldr	r0, [fp, #8]
   2b950:	mov	r8, r3
   2b954:	sub	r1, r0, #1
   2b958:	cmp	r1, #6
   2b95c:	bhi	2b9b8 <flatcc_builder_default_alloc@@Base+0x80>
   2b960:	add	r3, pc, #4
   2b964:	mov	r0, #256	; 0x100
   2b968:	ldr	pc, [r3, r1, lsl #2]
   2b96c:	andeq	fp, r2, ip, asr #19
   2b970:			; <UNDEFINED> instruction: 0x0002b9b8
   2b974:			; <UNDEFINED> instruction: 0x0002b9b8
   2b978:	andeq	fp, r2, r8, lsl #19
   2b97c:	andeq	fp, r2, r0, asr #19
   2b980:			; <UNDEFINED> instruction: 0x0002b9b8
   2b984:	andeq	fp, r2, r8, asr #19
   2b988:	mov	r0, #288	; 0x120
   2b98c:	b	2b9cc <flatcc_builder_default_alloc@@Base+0x94>
   2b990:	ldr	r0, [r4]
   2b994:	cmp	r0, #0
   2b998:	beq	2b9b0 <flatcc_builder_default_alloc@@Base+0x78>
   2b99c:	bl	14e50 <free@plt>
   2b9a0:	mov	r6, #0
   2b9a4:	str	r6, [r4]
   2b9a8:	str	r6, [r4, #4]
   2b9ac:	b	2ba3c <flatcc_builder_default_alloc@@Base+0x104>
   2b9b0:	mov	r6, #0
   2b9b4:	b	2ba3c <flatcc_builder_default_alloc@@Base+0x104>
   2b9b8:	mov	r0, #32
   2b9bc:	b	2b9cc <flatcc_builder_default_alloc@@Base+0x94>
   2b9c0:	mov	r0, r2
   2b9c4:	b	2b9cc <flatcc_builder_default_alloc@@Base+0x94>
   2b9c8:	mov	r0, #64	; 0x40
   2b9cc:	mov	r7, r0
   2b9d0:	lsl	r0, r0, #1
   2b9d4:	cmp	r7, r2
   2b9d8:	bcc	2b9cc <flatcc_builder_default_alloc@@Base+0x94>
   2b9dc:	ldr	r0, [r4, #4]
   2b9e0:	mov	r6, #0
   2b9e4:	cmp	r0, r2
   2b9e8:	lsrcs	r0, r0, #1
   2b9ec:	cmpcs	r0, r7
   2b9f0:	bcs	2ba3c <flatcc_builder_default_alloc@@Base+0x104>
   2b9f4:	ldr	r0, [r4]
   2b9f8:	mov	r1, r7
   2b9fc:	bl	14e80 <realloc@plt>
   2ba00:	cmp	r0, #0
   2ba04:	beq	2ba38 <flatcc_builder_default_alloc@@Base+0x100>
   2ba08:	mov	r5, r0
   2ba0c:	cmp	r8, #0
   2ba10:	beq	2ba30 <flatcc_builder_default_alloc@@Base+0xf8>
   2ba14:	ldr	r1, [r4, #4]
   2ba18:	cmp	r7, r1
   2ba1c:	bls	2ba30 <flatcc_builder_default_alloc@@Base+0xf8>
   2ba20:	add	r0, r5, r1
   2ba24:	sub	r2, r7, r1
   2ba28:	mov	r1, #0
   2ba2c:	bl	14eec <memset@plt>
   2ba30:	stm	r4, {r5, r7}
   2ba34:	b	2ba3c <flatcc_builder_default_alloc@@Base+0x104>
   2ba38:	mvn	r6, #0
   2ba3c:	mov	r0, r6
   2ba40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002ba44 <flatcc_builder_flush_vtable_cache@@Base>:
   2ba44:	push	{r4, r5, fp, lr}
   2ba48:	add	fp, sp, #8
   2ba4c:	mov	r4, r0
   2ba50:	ldr	r0, [r0, #116]	; 0x74
   2ba54:	cmp	r0, #0
   2ba58:	popeq	{r4, r5, fp, pc}
   2ba5c:	ldr	r0, [r4, #92]	; 0x5c
   2ba60:	ldr	r2, [r4, #96]	; 0x60
   2ba64:	mov	r1, #0
   2ba68:	mov	r5, #0
   2ba6c:	bl	14eec <memset@plt>
   2ba70:	mov	r0, #16
   2ba74:	str	r5, [r4, #120]	; 0x78
   2ba78:	str	r0, [r4, #124]	; 0x7c
   2ba7c:	pop	{r4, r5, fp, pc}

0002ba80 <flatcc_builder_custom_init@@Base>:
   2ba80:	push	{r4, r5, r6, r7, fp, lr}
   2ba84:	add	fp, sp, #16
   2ba88:	mov	r6, r2
   2ba8c:	mov	r7, r1
   2ba90:	mov	r1, #0
   2ba94:	mov	r2, #232	; 0xe8
   2ba98:	mov	r5, r3
   2ba9c:	mov	r4, r0
   2baa0:	bl	14eec <memset@plt>
   2baa4:	ldr	r0, [fp, #8]
   2baa8:	cmp	r7, #0
   2baac:	bne	2bac4 <flatcc_builder_custom_init@@Base+0x44>
   2bab0:	movw	r7, #63468	; 0xf7ec
   2bab4:	mov	r1, #1
   2bab8:	add	r6, r4, #188	; 0xbc
   2babc:	movt	r7, #2
   2bac0:	str	r1, [r4, #184]	; 0xb8
   2bac4:	movw	r1, #47416	; 0xb938
   2bac8:	cmp	r5, #0
   2bacc:	str	r6, [r4, #36]	; 0x24
   2bad0:	str	r0, [r4, #40]	; 0x28
   2bad4:	mov	r0, #0
   2bad8:	str	r7, [r4, #44]	; 0x2c
   2badc:	movt	r1, #2
   2bae0:	movne	r1, r5
   2bae4:	str	r1, [r4, #48]	; 0x30
   2bae8:	pop	{r4, r5, r6, r7, fp, pc}

0002baec <flatcc_builder_init@@Base>:
   2baec:	push	{r4, r5, fp, lr}
   2baf0:	add	fp, sp, #8
   2baf4:	mov	r1, #0
   2baf8:	mov	r2, #232	; 0xe8
   2bafc:	mov	r4, r0
   2bb00:	mov	r5, #0
   2bb04:	bl	14eec <memset@plt>
   2bb08:	mov	r0, #1
   2bb0c:	movw	r1, #63468	; 0xf7ec
   2bb10:	add	r2, r4, #188	; 0xbc
   2bb14:	str	r0, [r4, #184]	; 0xb8
   2bb18:	movw	r0, #47416	; 0xb938
   2bb1c:	movt	r1, #2
   2bb20:	str	r2, [r4, #36]	; 0x24
   2bb24:	str	r5, [r4, #40]	; 0x28
   2bb28:	movt	r0, #2
   2bb2c:	str	r1, [r4, #44]	; 0x2c
   2bb30:	str	r0, [r4, #48]	; 0x30
   2bb34:	mov	r0, #0
   2bb38:	pop	{r4, r5, fp, pc}

0002bb3c <flatcc_builder_custom_reset@@Base>:
   2bb3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bb40:	add	fp, sp, #28
   2bb44:	sub	sp, sp, #4
   2bb48:	mov	r9, r2
   2bb4c:	mov	r8, r1
   2bb50:	mov	sl, r0
   2bb54:	add	r7, r0, #52	; 0x34
   2bb58:	mov	r5, #0
   2bb5c:	add	r6, sl, r5, lsl #3
   2bb60:	ldr	r0, [r6, #52]	; 0x34
   2bb64:	cmp	r0, #0
   2bb68:	beq	2bbb0 <flatcc_builder_custom_reset@@Base+0x74>
   2bb6c:	cmp	r9, #0
   2bb70:	cmpne	r5, #5
   2bb74:	beq	2bba0 <flatcc_builder_custom_reset@@Base+0x64>
   2bb78:	ldr	r0, [sl, #40]	; 0x28
   2bb7c:	ldr	r4, [sl, #48]	; 0x30
   2bb80:	mov	r1, r7
   2bb84:	mov	r2, #1
   2bb88:	mov	r3, #1
   2bb8c:	str	r5, [sp]
   2bb90:	blx	r4
   2bb94:	cmp	r0, #0
   2bb98:	bne	2bc50 <flatcc_builder_custom_reset@@Base+0x114>
   2bb9c:	ldr	r0, [r6, #52]	; 0x34
   2bba0:	ldr	r2, [r6, #56]	; 0x38
   2bba4:	mov	r1, #0
   2bba8:	bl	14eec <memset@plt>
   2bbac:	b	2bbbc <flatcc_builder_custom_reset@@Base+0x80>
   2bbb0:	ldr	r0, [r6, #56]	; 0x38
   2bbb4:	cmp	r0, #0
   2bbb8:	bne	2bc60 <flatcc_builder_custom_reset@@Base+0x124>
   2bbbc:	add	r5, r5, #1
   2bbc0:	add	r7, r7, #8
   2bbc4:	cmp	r5, #8
   2bbc8:	bne	2bb5c <flatcc_builder_custom_reset@@Base+0x20>
   2bbcc:	mov	r0, #0
   2bbd0:	vmov.i32	q8, #0	; 0x00000000
   2bbd4:	mov	r5, #0
   2bbd8:	str	r0, [sl, #120]	; 0x78
   2bbdc:	ldr	r1, [sl, #124]	; 0x7c
   2bbe0:	cmp	r1, #0
   2bbe4:	movne	r1, #16
   2bbe8:	strne	r1, [sl, #124]	; 0x7c
   2bbec:	add	r1, sl, #148	; 0x94
   2bbf0:	str	r0, [sl, #136]	; 0x88
   2bbf4:	str	r0, [sl, #140]	; 0x8c
   2bbf8:	strh	r0, [sl, #128]	; 0x80
   2bbfc:	str	r0, [sl, #32]
   2bc00:	cmp	r8, #0
   2bc04:	vst1.32	{d16-d17}, [r1]
   2bc08:	ldr	r2, [sl, #60]	; 0x3c
   2bc0c:	ldr	r1, [sl, #52]	; 0x34
   2bc10:	ldr	r3, [sl, #76]	; 0x4c
   2bc14:	str	r2, [sl, #16]
   2bc18:	str	r0, [sl, #20]
   2bc1c:	str	r0, [sl, #24]
   2bc20:	movne	r0, #0
   2bc24:	str	r3, [sl]
   2bc28:	str	r1, [sl, #4]
   2bc2c:	strne	r0, [sl, #172]	; 0xac
   2bc30:	strne	r0, [sl, #176]	; 0xb0
   2bc34:	strne	r0, [sl, #180]	; 0xb4
   2bc38:	ldr	r0, [sl, #184]	; 0xb8
   2bc3c:	cmp	r0, #0
   2bc40:	beq	2bc54 <flatcc_builder_custom_reset@@Base+0x118>
   2bc44:	add	r0, sl, #188	; 0xbc
   2bc48:	bl	2f6bc <flatcc_emitter_reset@@Base>
   2bc4c:	b	2bc54 <flatcc_builder_custom_reset@@Base+0x118>
   2bc50:	mvn	r5, #0
   2bc54:	mov	r0, r5
   2bc58:	sub	sp, fp, #28
   2bc5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bc60:	movw	r0, #16736	; 0x4160
   2bc64:	movw	r1, #16754	; 0x4172
   2bc68:	movw	r3, #16824	; 0x41b8
   2bc6c:	movw	r2, #434	; 0x1b2
   2bc70:	movt	r0, #4
   2bc74:	movt	r1, #4
   2bc78:	movt	r3, #4
   2bc7c:	bl	14f40 <__assert_fail@plt>

0002bc80 <flatcc_builder_reset@@Base>:
   2bc80:	mov	r1, #0
   2bc84:	mov	r2, #0
   2bc88:	b	2bb3c <flatcc_builder_custom_reset@@Base>

0002bc8c <flatcc_builder_clear@@Base>:
   2bc8c:	push	{r4, r5, r6, r7, fp, lr}
   2bc90:	add	fp, sp, #16
   2bc94:	sub	sp, sp, #8
   2bc98:	mov	r7, r0
   2bc9c:	add	r5, r0, #52	; 0x34
   2bca0:	mov	r6, #0
   2bca4:	ldr	r0, [r7, #40]	; 0x28
   2bca8:	ldr	r4, [r7, #48]	; 0x30
   2bcac:	mov	r1, r5
   2bcb0:	mov	r2, #0
   2bcb4:	mov	r3, #0
   2bcb8:	str	r6, [sp]
   2bcbc:	blx	r4
   2bcc0:	add	r6, r6, #1
   2bcc4:	add	r5, r5, #8
   2bcc8:	cmp	r6, #8
   2bccc:	bne	2bca4 <flatcc_builder_clear@@Base+0x18>
   2bcd0:	ldr	r0, [r7, #184]	; 0xb8
   2bcd4:	cmp	r0, #0
   2bcd8:	beq	2bce4 <flatcc_builder_clear@@Base+0x58>
   2bcdc:	add	r0, r7, #188	; 0xbc
   2bce0:	bl	2f788 <flatcc_emitter_clear@@Base>
   2bce4:	mov	r0, r7
   2bce8:	mov	r1, #0
   2bcec:	mov	r2, #232	; 0xe8
   2bcf0:	sub	sp, fp, #16
   2bcf4:	pop	{r4, r5, r6, r7, fp, lr}
   2bcf8:	b	14eec <memset@plt>

0002bcfc <flatcc_builder_enter_user_frame_ptr@@Base>:
   2bcfc:	push	{r4, r5, r6, r7, fp, lr}
   2bd00:	add	fp, sp, #16
   2bd04:	sub	sp, sp, #8
   2bd08:	mov	r4, r0
   2bd0c:	ldr	r0, [r0, #112]	; 0x70
   2bd10:	add	r1, r1, #7
   2bd14:	ldr	r7, [r4, #228]	; 0xe4
   2bd18:	bic	r5, r1, #3
   2bd1c:	add	r6, r4, #108	; 0x6c
   2bd20:	add	r2, r7, r5
   2bd24:	cmp	r2, r0
   2bd28:	bls	2bd50 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   2bd2c:	ldr	r0, [r4, #40]	; 0x28
   2bd30:	ldr	ip, [r4, #48]	; 0x30
   2bd34:	mov	r1, #7
   2bd38:	mov	r3, #0
   2bd3c:	str	r1, [sp]
   2bd40:	mov	r1, r6
   2bd44:	blx	ip
   2bd48:	cmp	r0, #0
   2bd4c:	bne	2bd9c <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   2bd50:	ldr	r0, [r6]
   2bd54:	adds	r6, r0, r7
   2bd58:	beq	2bd8c <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   2bd5c:	mov	r0, r6
   2bd60:	mov	r1, #0
   2bd64:	mov	r2, r5
   2bd68:	bl	14eec <memset@plt>
   2bd6c:	ldr	r0, [r4, #224]	; 0xe0
   2bd70:	str	r0, [r6], #4
   2bd74:	ldr	r0, [r4, #228]	; 0xe4
   2bd78:	add	r1, r0, #4
   2bd7c:	add	r0, r0, r5
   2bd80:	str	r1, [r4, #224]	; 0xe0
   2bd84:	str	r0, [r4, #228]	; 0xe4
   2bd88:	b	2bd90 <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   2bd8c:	mov	r6, #0
   2bd90:	mov	r0, r6
   2bd94:	sub	sp, fp, #16
   2bd98:	pop	{r4, r5, r6, r7, fp, pc}
   2bd9c:	movw	r0, #21272	; 0x5318
   2bda0:	movw	r1, #16754	; 0x4172
   2bda4:	movw	r3, #20818	; 0x5152
   2bda8:	mov	r2, #308	; 0x134
   2bdac:	movt	r0, #4
   2bdb0:	movt	r1, #4
   2bdb4:	movt	r3, #4
   2bdb8:	bl	14f40 <__assert_fail@plt>

0002bdbc <flatcc_builder_enter_user_frame@@Base>:
   2bdbc:	push	{r4, r5, r6, r7, fp, lr}
   2bdc0:	add	fp, sp, #16
   2bdc4:	sub	sp, sp, #8
   2bdc8:	mov	r4, r0
   2bdcc:	ldr	r0, [r0, #112]	; 0x70
   2bdd0:	add	r1, r1, #7
   2bdd4:	ldr	r7, [r4, #228]	; 0xe4
   2bdd8:	bic	r5, r1, #3
   2bddc:	add	r6, r4, #108	; 0x6c
   2bde0:	add	r2, r7, r5
   2bde4:	cmp	r2, r0
   2bde8:	bls	2be10 <flatcc_builder_enter_user_frame@@Base+0x54>
   2bdec:	ldr	r0, [r4, #40]	; 0x28
   2bdf0:	ldr	ip, [r4, #48]	; 0x30
   2bdf4:	mov	r1, #7
   2bdf8:	mov	r3, #0
   2bdfc:	str	r1, [sp]
   2be00:	mov	r1, r6
   2be04:	blx	ip
   2be08:	cmp	r0, #0
   2be0c:	bne	2be58 <flatcc_builder_enter_user_frame@@Base+0x9c>
   2be10:	ldr	r0, [r6]
   2be14:	adds	r6, r0, r7
   2be18:	beq	2be4c <flatcc_builder_enter_user_frame@@Base+0x90>
   2be1c:	mov	r0, r6
   2be20:	mov	r1, #0
   2be24:	mov	r2, r5
   2be28:	bl	14eec <memset@plt>
   2be2c:	ldr	r0, [r4, #224]	; 0xe0
   2be30:	str	r0, [r6]
   2be34:	ldr	r1, [r4, #228]	; 0xe4
   2be38:	add	r0, r1, #4
   2be3c:	add	r1, r1, r5
   2be40:	str	r0, [r4, #224]	; 0xe0
   2be44:	str	r1, [r4, #228]	; 0xe4
   2be48:	b	2be50 <flatcc_builder_enter_user_frame@@Base+0x94>
   2be4c:	mov	r0, #0
   2be50:	sub	sp, fp, #16
   2be54:	pop	{r4, r5, r6, r7, fp, pc}
   2be58:	movw	r0, #21272	; 0x5318
   2be5c:	movw	r1, #16754	; 0x4172
   2be60:	movw	r3, #20818	; 0x5152
   2be64:	mov	r2, #308	; 0x134
   2be68:	movt	r0, #4
   2be6c:	movt	r1, #4
   2be70:	movt	r3, #4
   2be74:	bl	14f40 <__assert_fail@plt>

0002be78 <flatcc_builder_exit_user_frame@@Base>:
   2be78:	push	{fp, lr}
   2be7c:	mov	fp, sp
   2be80:	ldr	r1, [r0, #224]	; 0xe0
   2be84:	cmp	r1, #0
   2be88:	subne	r2, r1, #4
   2be8c:	strne	r2, [r0, #228]	; 0xe4
   2be90:	ldrne	r2, [r0, #108]	; 0x6c
   2be94:	addne	r1, r2, r1
   2be98:	ldrne	r1, [r1, #-4]
   2be9c:	strne	r1, [r0, #224]	; 0xe0
   2bea0:	movne	r0, r1
   2bea4:	popne	{fp, pc}
   2bea8:	movw	r0, #16886	; 0x41f6
   2beac:	movw	r1, #16754	; 0x4172
   2beb0:	movw	r3, #16911	; 0x420f
   2beb4:	movw	r2, #542	; 0x21e
   2beb8:	movt	r0, #4
   2bebc:	movt	r1, #4
   2bec0:	movt	r3, #4
   2bec4:	bl	14f40 <__assert_fail@plt>

0002bec8 <flatcc_builder_exit_user_frame_at@@Base>:
   2bec8:	push	{fp, lr}
   2becc:	mov	fp, sp
   2bed0:	ldr	r2, [r0, #224]	; 0xe0
   2bed4:	cmp	r2, r1
   2bed8:	bcc	2bee8 <flatcc_builder_exit_user_frame_at@@Base+0x20>
   2bedc:	str	r1, [r0, #224]	; 0xe0
   2bee0:	pop	{fp, lr}
   2bee4:	b	2be78 <flatcc_builder_exit_user_frame@@Base>
   2bee8:	movw	r0, #16969	; 0x4249
   2beec:	movw	r1, #16754	; 0x4172
   2bef0:	movw	r3, #17000	; 0x4268
   2bef4:	movw	r2, #551	; 0x227
   2bef8:	movt	r0, #4
   2befc:	movt	r1, #4
   2bf00:	movt	r3, #4
   2bf04:	bl	14f40 <__assert_fail@plt>

0002bf08 <flatcc_builder_get_current_user_frame@@Base>:
   2bf08:	ldr	r0, [r0, #224]	; 0xe0
   2bf0c:	bx	lr

0002bf10 <flatcc_builder_get_user_frame_ptr@@Base>:
   2bf10:	ldr	r0, [r0, #108]	; 0x6c
   2bf14:	add	r0, r0, r1
   2bf18:	bx	lr

0002bf1c <flatcc_builder_embed_buffer@@Base>:
   2bf1c:	push	{r4, r5, r6, r7, fp, lr}
   2bf20:	add	fp, sp, #16
   2bf24:	sub	sp, sp, #88	; 0x58
   2bf28:	mov	r4, r0
   2bf2c:	ldr	r0, [fp, #8]
   2bf30:	mov	r5, r3
   2bf34:	mov	r7, r2
   2bf38:	mov	r2, r1
   2bf3c:	sub	r1, fp, #18
   2bf40:	strh	r0, [fp, #-18]	; 0xffffffee
   2bf44:	mov	r0, r4
   2bf48:	ldr	r3, [r4, #152]	; 0x98
   2bf4c:	cmp	r3, #0
   2bf50:	movwne	r3, #1
   2bf54:	bl	2c080 <flatcc_builder_embed_buffer@@Base+0x164>
   2bf58:	ldr	r1, [fp, #12]
   2bf5c:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2bf60:	ldr	r0, [r4, #136]	; 0x88
   2bf64:	mov	r2, #0
   2bf68:	str	r2, [sp, #12]
   2bf6c:	str	r2, [sp, #8]
   2bf70:	and	r1, r1, #2
   2bf74:	sub	r3, r3, #1
   2bf78:	add	r1, r5, r1, lsl #1
   2bf7c:	sub	r1, r0, r1
   2bf80:	and	r3, r1, r3
   2bf84:	add	r1, r3, r5
   2bf88:	str	r1, [fp, #-24]	; 0xffffffe8
   2bf8c:	ldr	r1, [r4, #152]	; 0x98
   2bf90:	cmp	r1, #0
   2bf94:	mov	r1, #0
   2bf98:	beq	2bfb8 <flatcc_builder_embed_buffer@@Base+0x9c>
   2bf9c:	mov	r1, #4
   2bfa0:	sub	r2, fp, #24
   2bfa4:	str	r1, [sp, #20]
   2bfa8:	str	r2, [sp, #16]
   2bfac:	mov	r2, #1
   2bfb0:	str	r1, [sp, #8]
   2bfb4:	str	r2, [sp, #12]
   2bfb8:	cmp	r5, #0
   2bfbc:	beq	2bfe0 <flatcc_builder_embed_buffer@@Base+0xc4>
   2bfc0:	add	r6, sp, #8
   2bfc4:	add	r1, r1, r5
   2bfc8:	add	r6, r6, r2, lsl #3
   2bfcc:	add	r2, r2, #1
   2bfd0:	str	r1, [sp, #8]
   2bfd4:	str	r7, [r6, #8]
   2bfd8:	str	r5, [r6, #12]
   2bfdc:	str	r2, [sp, #12]
   2bfe0:	cmp	r3, #0
   2bfe4:	beq	2c010 <flatcc_builder_embed_buffer@@Base+0xf4>
   2bfe8:	add	r7, sp, #8
   2bfec:	movw	r6, #16224	; 0x3f60
   2bff0:	add	r1, r1, r3
   2bff4:	add	r7, r7, r2, lsl #3
   2bff8:	movt	r6, #4
   2bffc:	add	r2, r2, #1
   2c000:	str	r1, [sp, #8]
   2c004:	str	r6, [r7, #8]
   2c008:	str	r3, [r7, #12]
   2c00c:	str	r2, [sp, #12]
   2c010:	cmp	r1, #0
   2c014:	ble	2c06c <flatcc_builder_embed_buffer@@Base+0x150>
   2c018:	sub	r5, r0, r1
   2c01c:	ldr	r0, [r4, #36]	; 0x24
   2c020:	ldr	r7, [r4, #44]	; 0x2c
   2c024:	str	r1, [sp]
   2c028:	add	r1, sp, #8
   2c02c:	add	r1, r1, #8
   2c030:	mov	r3, r5
   2c034:	blx	r7
   2c038:	cmp	r0, #0
   2c03c:	streq	r5, [r4, #136]	; 0x88
   2c040:	moveq	r0, r5
   2c044:	subeq	sp, fp, #16
   2c048:	popeq	{r4, r5, r6, r7, fp, pc}
   2c04c:	movw	r0, #21272	; 0x5318
   2c050:	movw	r1, #16754	; 0x4172
   2c054:	movw	r3, #20951	; 0x51d7
   2c058:	movw	r2, #651	; 0x28b
   2c05c:	movt	r0, #4
   2c060:	movt	r1, #4
   2c064:	movt	r3, #4
   2c068:	bl	14f40 <__assert_fail@plt>
   2c06c:	movw	r0, #21272	; 0x5318
   2c070:	movw	r1, #16754	; 0x4172
   2c074:	movw	r3, #20951	; 0x51d7
   2c078:	movw	r2, #647	; 0x287
   2c07c:	b	2c05c <flatcc_builder_embed_buffer@@Base+0x140>
   2c080:	push	{r4, sl, fp, lr}
   2c084:	add	fp, sp, #8
   2c088:	sub	sp, sp, #80	; 0x50
   2c08c:	cmp	r2, #0
   2c090:	bne	2c0a0 <flatcc_builder_embed_buffer@@Base+0x184>
   2c094:	ldrh	r2, [r0, #132]	; 0x84
   2c098:	cmp	r2, #0
   2c09c:	movweq	r2, #1
   2c0a0:	ldrh	r4, [r1]
   2c0a4:	cmp	r4, #4
   2c0a8:	movwcc	r4, #4
   2c0ac:	cmpcs	r4, r2
   2c0b0:	bcs	2c0c0 <flatcc_builder_embed_buffer@@Base+0x1a4>
   2c0b4:	cmp	r4, r2
   2c0b8:	movcc	r4, r2
   2c0bc:	strh	r4, [r1]
   2c0c0:	cmp	r3, #0
   2c0c4:	bne	2c138 <flatcc_builder_embed_buffer@@Base+0x21c>
   2c0c8:	ldr	r4, [r0, #140]	; 0x8c
   2c0cc:	sub	r1, r2, #1
   2c0d0:	ands	r1, r4, r1
   2c0d4:	beq	2c138 <flatcc_builder_embed_buffer@@Base+0x21c>
   2c0d8:	movw	r2, #16224	; 0x3f60
   2c0dc:	str	r1, [sp, #20]
   2c0e0:	cmn	r1, #1
   2c0e4:	movt	r2, #4
   2c0e8:	str	r2, [sp, #16]
   2c0ec:	mov	r2, #1
   2c0f0:	str	r1, [sp, #8]
   2c0f4:	str	r2, [sp, #12]
   2c0f8:	add	r2, r1, r4
   2c0fc:	str	r2, [r0, #140]	; 0x8c
   2c100:	ble	2c140 <flatcc_builder_embed_buffer@@Base+0x224>
   2c104:	ldr	r2, [r0, #36]	; 0x24
   2c108:	ldr	ip, [r0, #44]	; 0x2c
   2c10c:	add	r0, sp, #8
   2c110:	str	r1, [sp]
   2c114:	mov	r3, r4
   2c118:	add	r1, r0, #8
   2c11c:	mov	r0, r2
   2c120:	mov	r2, #1
   2c124:	blx	ip
   2c128:	cmp	r0, #0
   2c12c:	bne	2c154 <flatcc_builder_embed_buffer@@Base+0x238>
   2c130:	cmn	r4, #1
   2c134:	beq	2c174 <flatcc_builder_embed_buffer@@Base+0x258>
   2c138:	sub	sp, fp, #8
   2c13c:	pop	{r4, sl, fp, pc}
   2c140:	movw	r0, #21272	; 0x5318
   2c144:	movw	r1, #16754	; 0x4172
   2c148:	movw	r3, #21139	; 0x5293
   2c14c:	movw	r2, #673	; 0x2a1
   2c150:	b	2c164 <flatcc_builder_embed_buffer@@Base+0x248>
   2c154:	movw	r0, #21272	; 0x5318
   2c158:	movw	r1, #16754	; 0x4172
   2c15c:	movw	r3, #21139	; 0x5293
   2c160:	movw	r2, #677	; 0x2a5
   2c164:	movt	r0, #4
   2c168:	movt	r1, #4
   2c16c:	movt	r3, #4
   2c170:	bl	14f40 <__assert_fail@plt>
   2c174:	movw	r0, #21272	; 0x5318
   2c178:	movw	r1, #16754	; 0x4172
   2c17c:	movw	r3, #20885	; 0x5195
   2c180:	movw	r2, #702	; 0x2be
   2c184:	movt	r0, #4
   2c188:	movt	r1, #4
   2c18c:	movt	r3, #4
   2c190:	bl	14f40 <__assert_fail@plt>

0002c194 <flatcc_builder_create_buffer@@Base>:
   2c194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c198:	add	fp, sp, #28
   2c19c:	sub	sp, sp, #100	; 0x64
   2c1a0:	ldr	sl, [fp, #12]
   2c1a4:	mov	r4, r0
   2c1a8:	ldr	r0, [fp, #8]
   2c1ac:	mov	r7, r1
   2c1b0:	mov	r5, #0
   2c1b4:	mov	r6, r3
   2c1b8:	sub	r1, fp, #30
   2c1bc:	str	r5, [sp, #12]
   2c1c0:	and	r9, sl, #1
   2c1c4:	strh	r0, [fp, #-30]	; 0xffffffe2
   2c1c8:	mov	r0, r4
   2c1cc:	mov	r3, r9
   2c1d0:	bl	2c080 <flatcc_builder_embed_buffer@@Base+0x164>
   2c1d4:	ldrh	r0, [r4, #128]	; 0x80
   2c1d8:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2c1dc:	str	r6, [sp, #8]
   2c1e0:	cmp	r0, r1
   2c1e4:	strhcc	r1, [r4, #128]	; 0x80
   2c1e8:	cmp	r7, #0
   2c1ec:	beq	2c208 <flatcc_builder_create_buffer@@Base+0x74>
   2c1f0:	ldr	r5, [r7]
   2c1f4:	cmp	r5, #0
   2c1f8:	str	r5, [sp, #12]
   2c1fc:	movwne	r5, #1
   2c200:	lsl	r7, r5, #2
   2c204:	b	2c20c <flatcc_builder_create_buffer@@Base+0x78>
   2c208:	mov	r7, #0
   2c20c:	ldr	r0, [r4, #136]	; 0x88
   2c210:	and	r2, sl, #2
   2c214:	mov	r3, #0
   2c218:	sub	r6, r1, #1
   2c21c:	ands	ip, sl, #3
   2c220:	mov	sl, #4
   2c224:	mov	r1, #4
   2c228:	str	r3, [sp, #20]
   2c22c:	str	r3, [sp, #16]
   2c230:	sub	r2, r0, r2, lsl #1
   2c234:	sub	r2, r2, r7
   2c238:	sub	r2, r2, #4
   2c23c:	beq	2c260 <flatcc_builder_create_buffer@@Base+0xcc>
   2c240:	mov	r1, #4
   2c244:	sub	r3, fp, #40	; 0x28
   2c248:	str	r1, [sp, #28]
   2c24c:	str	r3, [sp, #24]
   2c250:	str	r1, [sp, #16]
   2c254:	mov	r3, #1
   2c258:	mov	r1, #8
   2c25c:	str	r3, [sp, #20]
   2c260:	add	lr, sp, #16
   2c264:	and	r6, r2, r6
   2c268:	sub	r8, fp, #36	; 0x24
   2c26c:	str	r1, [sp, #16]
   2c270:	cmp	r5, #0
   2c274:	add	r2, lr, r3, lsl #3
   2c278:	str	r8, [r2, #8]
   2c27c:	str	sl, [r2, #12]
   2c280:	add	r2, r3, #1
   2c284:	str	r2, [sp, #20]
   2c288:	beq	2c2ac <flatcc_builder_create_buffer@@Base+0x118>
   2c28c:	add	r2, lr, r2, lsl #3
   2c290:	add	r1, r1, r7
   2c294:	add	r5, sp, #12
   2c298:	str	r1, [sp, #16]
   2c29c:	str	r5, [r2, #8]
   2c2a0:	str	r7, [r2, #12]
   2c2a4:	orr	r2, r3, #2
   2c2a8:	str	r2, [sp, #20]
   2c2ac:	cmp	r6, #0
   2c2b0:	beq	2c2d8 <flatcc_builder_create_buffer@@Base+0x144>
   2c2b4:	movw	r5, #16224	; 0x3f60
   2c2b8:	add	r3, lr, r2, lsl #3
   2c2bc:	add	r1, r1, r6
   2c2c0:	add	r2, r2, #1
   2c2c4:	movt	r5, #4
   2c2c8:	str	r1, [sp, #16]
   2c2cc:	str	r5, [r3, #8]
   2c2d0:	str	r6, [r3, #12]
   2c2d4:	str	r2, [sp, #20]
   2c2d8:	sub	r7, r0, r1
   2c2dc:	cmp	ip, #0
   2c2e0:	mov	r6, #144	; 0x90
   2c2e4:	ldr	r3, [sp, #8]
   2c2e8:	mov	r0, r7
   2c2ec:	addne	r0, r0, #4
   2c2f0:	cmp	r9, #0
   2c2f4:	movweq	r6, #140	; 0x8c
   2c2f8:	cmp	r1, #0
   2c2fc:	ldr	r6, [r4, r6]
   2c300:	sub	r3, r3, r0
   2c304:	str	r3, [fp, #-36]	; 0xffffffdc
   2c308:	sub	r0, r6, r0
   2c30c:	str	r0, [fp, #-40]	; 0xffffffd8
   2c310:	ble	2c368 <flatcc_builder_create_buffer@@Base+0x1d4>
   2c314:	ldr	r0, [r4, #36]	; 0x24
   2c318:	ldr	r6, [r4, #44]	; 0x2c
   2c31c:	str	r1, [sp]
   2c320:	add	r1, lr, #8
   2c324:	mov	r3, r7
   2c328:	blx	r6
   2c32c:	cmp	r0, #0
   2c330:	bne	2c37c <flatcc_builder_create_buffer@@Base+0x1e8>
   2c334:	cmp	r7, #0
   2c338:	str	r7, [r4, #136]	; 0x88
   2c33c:	movne	r0, r7
   2c340:	subne	sp, fp, #28
   2c344:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c348:	movw	r0, #21272	; 0x5318
   2c34c:	movw	r1, #16754	; 0x4172
   2c350:	movw	r3, #17069	; 0x42ad
   2c354:	mov	r2, #772	; 0x304
   2c358:	movt	r0, #4
   2c35c:	movt	r1, #4
   2c360:	movt	r3, #4
   2c364:	bl	14f40 <__assert_fail@plt>
   2c368:	movw	r0, #21272	; 0x5318
   2c36c:	movw	r1, #16754	; 0x4172
   2c370:	movw	r3, #20951	; 0x51d7
   2c374:	movw	r2, #647	; 0x287
   2c378:	b	2c38c <flatcc_builder_create_buffer@@Base+0x1f8>
   2c37c:	movw	r0, #21272	; 0x5318
   2c380:	movw	r1, #16754	; 0x4172
   2c384:	movw	r3, #20951	; 0x51d7
   2c388:	movw	r2, #651	; 0x28b
   2c38c:	movt	r0, #4
   2c390:	movt	r1, #4
   2c394:	movt	r3, #4
   2c398:	bl	14f40 <__assert_fail@plt>

0002c39c <flatcc_builder_create_struct@@Base>:
   2c39c:	push	{r4, r5, r6, sl, fp, lr}
   2c3a0:	add	fp, sp, #16
   2c3a4:	sub	sp, sp, #80	; 0x50
   2c3a8:	cmp	r3, #0
   2c3ac:	beq	2c484 <flatcc_builder_create_struct@@Base+0xe8>
   2c3b0:	mov	r5, r0
   2c3b4:	ldrh	r0, [r0, #128]	; 0x80
   2c3b8:	mov	r4, #0
   2c3bc:	cmp	r0, r3
   2c3c0:	strhcc	r3, [r5, #128]	; 0x80
   2c3c4:	sub	r3, r3, #1
   2c3c8:	cmp	r2, #0
   2c3cc:	ldr	r0, [r5, #136]	; 0x88
   2c3d0:	str	r4, [sp, #12]
   2c3d4:	str	r4, [sp, #8]
   2c3d8:	movne	r4, #1
   2c3dc:	strne	r2, [sp, #20]
   2c3e0:	strne	r1, [sp, #16]
   2c3e4:	strne	r2, [sp, #8]
   2c3e8:	strne	r4, [sp, #12]
   2c3ec:	sub	r6, r0, r2
   2c3f0:	and	r3, r6, r3
   2c3f4:	cmp	r3, #0
   2c3f8:	beq	2c424 <flatcc_builder_create_struct@@Base+0x88>
   2c3fc:	add	r1, sp, #8
   2c400:	movw	r6, #16224	; 0x3f60
   2c404:	add	r2, r3, r2
   2c408:	add	r1, r1, r4, lsl #3
   2c40c:	movt	r6, #4
   2c410:	add	r4, r4, #1
   2c414:	str	r2, [sp, #8]
   2c418:	str	r6, [r1, #8]
   2c41c:	str	r3, [r1, #12]
   2c420:	str	r4, [sp, #12]
   2c424:	cmp	r2, #0
   2c428:	ble	2c4a4 <flatcc_builder_create_struct@@Base+0x108>
   2c42c:	sub	r6, r0, r2
   2c430:	ldr	r0, [r5, #36]	; 0x24
   2c434:	ldr	ip, [r5, #44]	; 0x2c
   2c438:	add	r1, sp, #8
   2c43c:	str	r2, [sp]
   2c440:	mov	r2, r4
   2c444:	add	r1, r1, #8
   2c448:	mov	r3, r6
   2c44c:	blx	ip
   2c450:	cmp	r0, #0
   2c454:	streq	r6, [r5, #136]	; 0x88
   2c458:	moveq	r0, r6
   2c45c:	subeq	sp, fp, #16
   2c460:	popeq	{r4, r5, r6, sl, fp, pc}
   2c464:	movw	r0, #21272	; 0x5318
   2c468:	movw	r1, #16754	; 0x4172
   2c46c:	movw	r3, #20951	; 0x51d7
   2c470:	movw	r2, #651	; 0x28b
   2c474:	movt	r0, #4
   2c478:	movt	r1, #4
   2c47c:	movt	r3, #4
   2c480:	bl	14f40 <__assert_fail@plt>
   2c484:	movw	r0, #17200	; 0x4330
   2c488:	movw	r1, #16754	; 0x4172
   2c48c:	movw	r3, #17211	; 0x433b
   2c490:	movw	r2, #783	; 0x30f
   2c494:	movt	r0, #4
   2c498:	movt	r1, #4
   2c49c:	movt	r3, #4
   2c4a0:	bl	14f40 <__assert_fail@plt>
   2c4a4:	movw	r0, #21272	; 0x5318
   2c4a8:	movw	r1, #16754	; 0x4172
   2c4ac:	movw	r3, #20951	; 0x51d7
   2c4b0:	movw	r2, #647	; 0x287
   2c4b4:	b	2c474 <flatcc_builder_create_struct@@Base+0xd8>

0002c4b8 <flatcc_builder_start_buffer@@Base>:
   2c4b8:	push	{r4, r5, r6, r7, fp, lr}
   2c4bc:	add	fp, sp, #16
   2c4c0:	mov	r5, r1
   2c4c4:	ldrh	r1, [r0, #128]	; 0x80
   2c4c8:	mov	r6, r3
   2c4cc:	mov	r7, r2
   2c4d0:	mov	r4, r0
   2c4d4:	bl	2c574 <flatcc_builder_start_buffer@@Base+0xbc>
   2c4d8:	mov	r1, r0
   2c4dc:	mvn	r0, #0
   2c4e0:	cmp	r1, #0
   2c4e4:	popne	{r4, r5, r6, r7, fp, pc}
   2c4e8:	mov	r0, #1
   2c4ec:	cmp	r5, #0
   2c4f0:	strh	r0, [r4, #128]	; 0x80
   2c4f4:	ldrh	r1, [r4, #132]	; 0x84
   2c4f8:	ldr	r2, [r4, #32]
   2c4fc:	strh	r1, [r2, #34]	; 0x22
   2c500:	strh	r7, [r4, #132]	; 0x84
   2c504:	ldrh	r1, [r4, #164]	; 0xa4
   2c508:	ldr	r2, [r4, #32]
   2c50c:	strh	r1, [r2, #32]
   2c510:	strh	r6, [r4, #164]	; 0xa4
   2c514:	ldr	r1, [r4, #32]
   2c518:	ldr	r2, [r4, #144]	; 0x90
   2c51c:	str	r2, [r1, #20]
   2c520:	ldr	r1, [r4, #32]
   2c524:	ldr	r2, [r4, #152]	; 0x98
   2c528:	str	r2, [r1, #28]
   2c52c:	ldr	r3, [r4, #148]	; 0x94
   2c530:	ldr	r1, [r4, #32]
   2c534:	ldr	r2, [r4, #136]	; 0x88
   2c538:	ldr	r7, [r4, #168]	; 0xa8
   2c53c:	add	r6, r3, #1
   2c540:	str	r2, [r4, #144]	; 0x90
   2c544:	str	r6, [r4, #148]	; 0x94
   2c548:	str	r3, [r4, #152]	; 0x98
   2c54c:	str	r7, [r1, #16]
   2c550:	movw	r1, #16224	; 0x3f60
   2c554:	movt	r1, #4
   2c558:	movne	r1, r5
   2c55c:	ldr	r1, [r1]
   2c560:	str	r1, [r4, #168]	; 0xa8
   2c564:	ldr	r1, [r4, #32]
   2c568:	strh	r0, [r1, #14]
   2c56c:	mov	r0, #0
   2c570:	pop	{r4, r5, r6, r7, fp, pc}
   2c574:	push	{r4, r5, r6, r7, fp, lr}
   2c578:	add	fp, sp, #16
   2c57c:	sub	sp, sp, #8
   2c580:	mov	r5, r1
   2c584:	ldr	r1, [r0, #156]	; 0x9c
   2c588:	ldr	r2, [r0, #160]	; 0xa0
   2c58c:	mov	r4, r0
   2c590:	add	r0, r1, #1
   2c594:	cmp	r1, r2
   2c598:	str	r0, [r4, #156]	; 0x9c
   2c59c:	bge	2c5b0 <flatcc_builder_start_buffer@@Base+0xf8>
   2c5a0:	ldr	r0, [r4, #32]
   2c5a4:	add	r0, r0, #36	; 0x24
   2c5a8:	str	r0, [r4, #32]
   2c5ac:	b	2c644 <flatcc_builder_start_buffer@@Base+0x18c>
   2c5b0:	ldr	r2, [r4, #176]	; 0xb0
   2c5b4:	mvn	r6, #0
   2c5b8:	cmp	r2, #1
   2c5bc:	cmpge	r1, r2
   2c5c0:	bge	2c67c <flatcc_builder_start_buffer@@Base+0x1c4>
   2c5c4:	add	r7, r0, r0, lsl #3
   2c5c8:	ldr	r0, [r4, #88]	; 0x58
   2c5cc:	lsl	r2, r7, #2
   2c5d0:	cmp	r2, r0
   2c5d4:	bls	2c5fc <flatcc_builder_start_buffer@@Base+0x144>
   2c5d8:	ldr	r0, [r4, #40]	; 0x28
   2c5dc:	ldr	ip, [r4, #48]	; 0x30
   2c5e0:	mov	r3, #4
   2c5e4:	add	r1, r4, #84	; 0x54
   2c5e8:	str	r3, [sp]
   2c5ec:	mov	r3, #0
   2c5f0:	blx	ip
   2c5f4:	cmp	r0, #0
   2c5f8:	bne	2c688 <flatcc_builder_start_buffer@@Base+0x1d0>
   2c5fc:	ldr	r1, [r4, #84]	; 0x54
   2c600:	mvn	r0, #35	; 0x23
   2c604:	add	r0, r0, r7, lsl #2
   2c608:	adds	r0, r0, r1
   2c60c:	str	r0, [r4, #32]
   2c610:	beq	2c67c <flatcc_builder_start_buffer@@Base+0x1c4>
   2c614:	ldr	r1, [r4, #88]	; 0x58
   2c618:	movw	r3, #36409	; 0x8e39
   2c61c:	ldr	r2, [r4, #176]	; 0xb0
   2c620:	movt	r3, #14563	; 0x38e3
   2c624:	umull	r1, r3, r1, r3
   2c628:	cmp	r2, r3, lsr #3
   2c62c:	lsr	r1, r3, #3
   2c630:	mov	r3, r1
   2c634:	movlt	r3, r2
   2c638:	cmp	r2, #0
   2c63c:	movle	r3, r1
   2c640:	str	r3, [r4, #160]	; 0xa0
   2c644:	ldr	r1, [r4, #20]
   2c648:	mvn	r3, #3
   2c64c:	mov	r6, #0
   2c650:	str	r1, [r0, #8]
   2c654:	ldrh	r2, [r4, #130]	; 0x82
   2c658:	strh	r2, [r0, #12]
   2c65c:	strh	r5, [r4, #130]	; 0x82
   2c660:	ldr	r2, [r4, #28]
   2c664:	stm	r0, {r2, r3}
   2c668:	add	r0, r1, r2
   2c66c:	str	r6, [r4, #20]
   2c670:	add	r0, r0, #7
   2c674:	bic	r0, r0, #7
   2c678:	str	r0, [r4, #28]
   2c67c:	mov	r0, r6
   2c680:	sub	sp, fp, #16
   2c684:	pop	{r4, r5, r6, r7, fp, pc}
   2c688:	movw	r0, #21272	; 0x5318
   2c68c:	movw	r1, #16754	; 0x4172
   2c690:	movw	r3, #20818	; 0x5152
   2c694:	mov	r2, #308	; 0x134
   2c698:	movt	r0, #4
   2c69c:	movt	r1, #4
   2c6a0:	movt	r3, #4
   2c6a4:	bl	14f40 <__assert_fail@plt>

0002c6a8 <flatcc_builder_end_buffer@@Base>:
   2c6a8:	push	{r4, r5, r6, sl, fp, lr}
   2c6ac:	add	fp, sp, #16
   2c6b0:	sub	sp, sp, #8
   2c6b4:	mov	r4, r0
   2c6b8:	ldr	r0, [r0, #32]
   2c6bc:	ldrh	r0, [r0, #14]
   2c6c0:	cmp	r0, #1
   2c6c4:	bne	2c7b8 <flatcc_builder_end_buffer@@Base+0x110>
   2c6c8:	mov	r3, r1
   2c6cc:	ldr	r1, [r4, #152]	; 0x98
   2c6d0:	ldrh	r0, [r4, #164]	; 0xa4
   2c6d4:	ldrh	r2, [r4, #132]	; 0x84
   2c6d8:	cmp	r1, #0
   2c6dc:	ldrh	r1, [r4, #128]	; 0x80
   2c6e0:	and	r0, r0, #2
   2c6e4:	orrne	r0, r0, #1
   2c6e8:	cmp	r1, r2
   2c6ec:	movcc	r1, r2
   2c6f0:	strhcc	r2, [r4, #128]	; 0x80
   2c6f4:	str	r0, [sp, #4]
   2c6f8:	mov	r0, r4
   2c6fc:	str	r1, [sp]
   2c700:	add	r1, r4, #168	; 0xa8
   2c704:	bl	2c194 <flatcc_builder_create_buffer@@Base>
   2c708:	mov	r6, r0
   2c70c:	cmp	r0, #0
   2c710:	beq	2c7ac <flatcc_builder_end_buffer@@Base+0x104>
   2c714:	ldr	r1, [r4, #32]
   2c718:	ldr	r0, [r4, #16]
   2c71c:	ldr	r2, [r4, #20]
   2c720:	ldr	r3, [r1, #20]
   2c724:	str	r3, [r4, #144]	; 0x90
   2c728:	ldr	r3, [r1, #28]
   2c72c:	str	r3, [r4, #152]	; 0x98
   2c730:	ldr	r3, [r1, #16]
   2c734:	str	r3, [r4, #168]	; 0xa8
   2c738:	ldrh	r1, [r1, #32]
   2c73c:	strh	r1, [r4, #164]	; 0xa4
   2c740:	mov	r1, #0
   2c744:	bl	14eec <memset@plt>
   2c748:	ldr	r0, [r4, #32]
   2c74c:	ldr	r1, [r4, #60]	; 0x3c
   2c750:	ldr	r2, [r4, #64]	; 0x40
   2c754:	ldr	r3, [r0, #8]
   2c758:	str	r3, [r4, #20]
   2c75c:	ldr	r3, [r0]
   2c760:	str	r3, [r4, #28]
   2c764:	add	r1, r1, r3
   2c768:	ldr	r5, [r0, #4]
   2c76c:	str	r1, [r4, #16]
   2c770:	sub	r1, r2, r3
   2c774:	cmp	r1, r5
   2c778:	movhi	r1, r5
   2c77c:	str	r1, [r4, #24]
   2c780:	ldrh	r1, [r4, #130]	; 0x82
   2c784:	ldrh	r2, [r4, #128]	; 0x80
   2c788:	cmp	r2, r1
   2c78c:	strhcc	r1, [r4, #128]	; 0x80
   2c790:	ldrh	r1, [r0, #12]
   2c794:	sub	r0, r0, #36	; 0x24
   2c798:	str	r0, [r4, #32]
   2c79c:	strh	r1, [r4, #130]	; 0x82
   2c7a0:	ldr	r0, [r4, #156]	; 0x9c
   2c7a4:	sub	r0, r0, #1
   2c7a8:	str	r0, [r4, #156]	; 0x9c
   2c7ac:	mov	r0, r6
   2c7b0:	sub	sp, fp, #16
   2c7b4:	pop	{r4, r5, r6, sl, fp, pc}
   2c7b8:	movw	r0, #17313	; 0x43a1
   2c7bc:	movw	r1, #16754	; 0x4172
   2c7c0:	movw	r3, #17357	; 0x43cd
   2c7c4:	movw	r2, #838	; 0x346
   2c7c8:	movt	r0, #4
   2c7cc:	movt	r1, #4
   2c7d0:	movt	r3, #4
   2c7d4:	bl	14f40 <__assert_fail@plt>

0002c7d8 <flatcc_builder_start_struct@@Base>:
   2c7d8:	push	{r4, r5, r6, r7, fp, lr}
   2c7dc:	add	fp, sp, #16
   2c7e0:	mov	r6, r1
   2c7e4:	mov	r1, r2
   2c7e8:	mov	r4, r0
   2c7ec:	bl	2c574 <flatcc_builder_start_buffer@@Base+0xbc>
   2c7f0:	mov	r5, #0
   2c7f4:	cmp	r0, #0
   2c7f8:	bne	2c868 <flatcc_builder_start_struct@@Base+0x90>
   2c7fc:	ldr	r1, [r4, #32]
   2c800:	mov	r0, #2
   2c804:	strh	r0, [r1, #14]
   2c808:	ldr	r2, [r4, #28]
   2c80c:	ldr	r0, [r4, #60]	; 0x3c
   2c810:	ldr	r3, [r4, #64]	; 0x40
   2c814:	add	r0, r0, r2
   2c818:	sub	r2, r3, r2
   2c81c:	mvn	r3, #3
   2c820:	cmn	r2, #4
   2c824:	str	r0, [r4, #16]
   2c828:	movcs	r2, r3
   2c82c:	str	r2, [r4, #24]
   2c830:	str	r3, [r1, #4]
   2c834:	ldr	r7, [r4, #20]
   2c838:	add	r1, r7, r6
   2c83c:	cmp	r1, r2
   2c840:	str	r1, [r4, #20]
   2c844:	bcc	2c864 <flatcc_builder_start_struct@@Base+0x8c>
   2c848:	add	r1, r1, #1
   2c84c:	mov	r0, r4
   2c850:	mvn	r2, #3
   2c854:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2c858:	cmp	r0, #0
   2c85c:	bne	2c868 <flatcc_builder_start_struct@@Base+0x90>
   2c860:	ldr	r0, [r4, #16]
   2c864:	add	r5, r0, r7
   2c868:	mov	r0, r5
   2c86c:	pop	{r4, r5, r6, r7, fp, pc}

0002c870 <flatcc_builder_struct_edit@@Base>:
   2c870:	ldr	r0, [r0, #16]
   2c874:	bx	lr

0002c878 <flatcc_builder_end_struct@@Base>:
   2c878:	push	{r4, r5, fp, lr}
   2c87c:	add	fp, sp, #8
   2c880:	mov	r4, r0
   2c884:	ldr	r0, [r0, #32]
   2c888:	ldrh	r0, [r0, #14]
   2c88c:	cmp	r0, #2
   2c890:	bne	2c930 <flatcc_builder_end_struct@@Base+0xb8>
   2c894:	ldrh	r3, [r4, #130]	; 0x82
   2c898:	ldr	r1, [r4, #16]
   2c89c:	ldr	r2, [r4, #20]
   2c8a0:	mov	r0, r4
   2c8a4:	bl	2c39c <flatcc_builder_create_struct@@Base>
   2c8a8:	mov	r5, r0
   2c8ac:	cmp	r0, #0
   2c8b0:	beq	2c928 <flatcc_builder_end_struct@@Base+0xb0>
   2c8b4:	ldr	r0, [r4, #16]
   2c8b8:	ldr	r2, [r4, #20]
   2c8bc:	mov	r1, #0
   2c8c0:	bl	14eec <memset@plt>
   2c8c4:	ldr	r0, [r4, #32]
   2c8c8:	ldr	r1, [r4, #60]	; 0x3c
   2c8cc:	ldr	ip, [r4, #64]	; 0x40
   2c8d0:	ldr	r3, [r0, #8]
   2c8d4:	str	r3, [r4, #20]
   2c8d8:	ldr	r3, [r0]
   2c8dc:	str	r3, [r4, #28]
   2c8e0:	add	r1, r1, r3
   2c8e4:	ldr	r2, [r0, #4]
   2c8e8:	str	r1, [r4, #16]
   2c8ec:	sub	r1, ip, r3
   2c8f0:	cmp	r1, r2
   2c8f4:	movhi	r1, r2
   2c8f8:	str	r1, [r4, #24]
   2c8fc:	ldrh	r1, [r4, #130]	; 0x82
   2c900:	ldrh	r2, [r4, #128]	; 0x80
   2c904:	cmp	r2, r1
   2c908:	strhcc	r1, [r4, #128]	; 0x80
   2c90c:	ldrh	r1, [r0, #12]
   2c910:	sub	r0, r0, #36	; 0x24
   2c914:	str	r0, [r4, #32]
   2c918:	strh	r1, [r4, #130]	; 0x82
   2c91c:	ldr	r0, [r4, #156]	; 0x9c
   2c920:	sub	r0, r0, #1
   2c924:	str	r0, [r4, #156]	; 0x9c
   2c928:	mov	r0, r5
   2c92c:	pop	{r4, r5, fp, pc}
   2c930:	movw	r0, #17446	; 0x4426
   2c934:	movw	r1, #16754	; 0x4172
   2c938:	movw	r3, #17490	; 0x4452
   2c93c:	mov	r2, #872	; 0x368
   2c940:	movt	r0, #4
   2c944:	movt	r1, #4
   2c948:	movt	r3, #4
   2c94c:	bl	14f40 <__assert_fail@plt>

0002c950 <flatcc_builder_extend_vector@@Base>:
   2c950:	push	{r4, r5, fp, lr}
   2c954:	add	fp, sp, #8
   2c958:	mov	r4, r0
   2c95c:	ldr	r0, [r0, #32]
   2c960:	ldr	r2, [r0, #20]
   2c964:	adds	r2, r2, r1
   2c968:	bcs	2c9c8 <flatcc_builder_extend_vector@@Base+0x78>
   2c96c:	ldr	r3, [r0, #24]
   2c970:	cmp	r2, r3
   2c974:	bhi	2c9c8 <flatcc_builder_extend_vector@@Base+0x78>
   2c978:	str	r2, [r0, #20]
   2c97c:	ldr	r0, [r4, #32]
   2c980:	ldr	r5, [r4, #20]
   2c984:	ldr	r2, [r4, #24]
   2c988:	ldr	r0, [r0, #16]
   2c98c:	mla	r0, r0, r1, r5
   2c990:	cmp	r0, r2
   2c994:	str	r0, [r4, #20]
   2c998:	bcc	2c9bc <flatcc_builder_extend_vector@@Base+0x6c>
   2c99c:	add	r1, r0, #1
   2c9a0:	mov	r0, r4
   2c9a4:	mvn	r2, #3
   2c9a8:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2c9ac:	mov	r1, r0
   2c9b0:	mov	r0, #0
   2c9b4:	cmp	r1, #0
   2c9b8:	popne	{r4, r5, fp, pc}
   2c9bc:	ldr	r0, [r4, #16]
   2c9c0:	add	r0, r0, r5
   2c9c4:	pop	{r4, r5, fp, pc}
   2c9c8:	movw	r0, #21025	; 0x5221
   2c9cc:	movw	r1, #16754	; 0x4172
   2c9d0:	movw	r3, #21052	; 0x523c
   2c9d4:	mov	r2, #892	; 0x37c
   2c9d8:	movt	r0, #4
   2c9dc:	movt	r1, #4
   2c9e0:	movt	r3, #4
   2c9e4:	bl	14f40 <__assert_fail@plt>

0002c9e8 <flatcc_builder_vector_push@@Base>:
   2c9e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c9ec:	add	fp, sp, #24
   2c9f0:	mov	r5, r0
   2c9f4:	ldr	r0, [r0, #32]
   2c9f8:	mov	r8, r1
   2c9fc:	ldrh	r1, [r0, #14]
   2ca00:	cmp	r1, #4
   2ca04:	bne	2ca88 <flatcc_builder_vector_push@@Base+0xa0>
   2ca08:	ldr	r1, [r0, #20]
   2ca0c:	ldr	r2, [r0, #24]
   2ca10:	cmp	r1, r2
   2ca14:	bhi	2caa0 <flatcc_builder_vector_push@@Base+0xb8>
   2ca18:	add	r1, r1, #1
   2ca1c:	str	r1, [r0, #20]
   2ca20:	ldr	r0, [r5, #32]
   2ca24:	ldr	r4, [r5, #20]
   2ca28:	ldr	r1, [r5, #24]
   2ca2c:	ldr	r6, [r0, #16]
   2ca30:	add	r0, r4, r6
   2ca34:	cmp	r0, r1
   2ca38:	str	r0, [r5, #20]
   2ca3c:	bcc	2ca5c <flatcc_builder_vector_push@@Base+0x74>
   2ca40:	add	r1, r0, #1
   2ca44:	mov	r0, r5
   2ca48:	mvn	r2, #3
   2ca4c:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2ca50:	mov	r7, #0
   2ca54:	cmp	r0, #0
   2ca58:	bne	2ca80 <flatcc_builder_vector_push@@Base+0x98>
   2ca5c:	ldr	r0, [r5, #16]
   2ca60:	adds	r7, r0, r4
   2ca64:	beq	2ca7c <flatcc_builder_vector_push@@Base+0x94>
   2ca68:	mov	r0, r7
   2ca6c:	mov	r1, r8
   2ca70:	mov	r2, r6
   2ca74:	bl	14e5c <memcpy@plt>
   2ca78:	b	2ca80 <flatcc_builder_vector_push@@Base+0x98>
   2ca7c:	mov	r7, #0
   2ca80:	mov	r0, r7
   2ca84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ca88:	movw	r0, #17557	; 0x4495
   2ca8c:	movw	r1, #16754	; 0x4172
   2ca90:	movw	r3, #17601	; 0x44c1
   2ca94:	movw	r2, #907	; 0x38b
   2ca98:	movt	r0, #4
   2ca9c:	b	2cab4 <flatcc_builder_vector_push@@Base+0xcc>
   2caa0:	movw	r0, #17668	; 0x4504
   2caa4:	movw	r1, #16754	; 0x4172
   2caa8:	movw	r3, #17601	; 0x44c1
   2caac:	mov	r2, #908	; 0x38c
   2cab0:	movt	r0, #4
   2cab4:	movt	r1, #4
   2cab8:	movt	r3, #4
   2cabc:	bl	14f40 <__assert_fail@plt>

0002cac0 <flatcc_builder_append_vector@@Base>:
   2cac0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2cac4:	add	fp, sp, #24
   2cac8:	mov	r6, r0
   2cacc:	ldr	r0, [r0, #32]
   2cad0:	mov	r8, r1
   2cad4:	ldrh	r1, [r0, #14]
   2cad8:	cmp	r1, #4
   2cadc:	bne	2cb88 <flatcc_builder_append_vector@@Base+0xc8>
   2cae0:	ldr	r1, [r0, #20]
   2cae4:	mov	r9, r2
   2cae8:	adds	r1, r1, r2
   2caec:	bcs	2cb68 <flatcc_builder_append_vector@@Base+0xa8>
   2caf0:	ldr	r2, [r0, #24]
   2caf4:	cmp	r1, r2
   2caf8:	bhi	2cb68 <flatcc_builder_append_vector@@Base+0xa8>
   2cafc:	str	r1, [r0, #20]
   2cb00:	ldr	r0, [r6, #32]
   2cb04:	ldr	r4, [r6, #20]
   2cb08:	ldr	r1, [r6, #24]
   2cb0c:	ldr	r5, [r0, #16]
   2cb10:	mla	r0, r5, r9, r4
   2cb14:	cmp	r0, r1
   2cb18:	str	r0, [r6, #20]
   2cb1c:	bcc	2cb3c <flatcc_builder_append_vector@@Base+0x7c>
   2cb20:	add	r1, r0, #1
   2cb24:	mov	r0, r6
   2cb28:	mvn	r2, #3
   2cb2c:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2cb30:	mov	r7, #0
   2cb34:	cmp	r0, #0
   2cb38:	bne	2cb60 <flatcc_builder_append_vector@@Base+0xa0>
   2cb3c:	ldr	r0, [r6, #16]
   2cb40:	adds	r7, r0, r4
   2cb44:	beq	2cb5c <flatcc_builder_append_vector@@Base+0x9c>
   2cb48:	mul	r2, r5, r9
   2cb4c:	mov	r0, r7
   2cb50:	mov	r1, r8
   2cb54:	bl	14e5c <memcpy@plt>
   2cb58:	b	2cb60 <flatcc_builder_append_vector@@Base+0xa0>
   2cb5c:	mov	r7, #0
   2cb60:	mov	r0, r7
   2cb64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2cb68:	movw	r0, #21025	; 0x5221
   2cb6c:	movw	r1, #16754	; 0x4172
   2cb70:	movw	r3, #21052	; 0x523c
   2cb74:	mov	r2, #892	; 0x37c
   2cb78:	movt	r0, #4
   2cb7c:	movt	r1, #4
   2cb80:	movt	r3, #4
   2cb84:	bl	14f40 <__assert_fail@plt>
   2cb88:	movw	r0, #17557	; 0x4495
   2cb8c:	movw	r1, #16754	; 0x4172
   2cb90:	movw	r3, #17729	; 0x4541
   2cb94:	movw	r2, #915	; 0x393
   2cb98:	movt	r0, #4
   2cb9c:	movt	r1, #4
   2cba0:	movt	r3, #4
   2cba4:	bl	14f40 <__assert_fail@plt>

0002cba8 <flatcc_builder_extend_offset_vector@@Base>:
   2cba8:	push	{r4, r5, fp, lr}
   2cbac:	add	fp, sp, #8
   2cbb0:	mov	r4, r0
   2cbb4:	ldr	r0, [r0, #32]
   2cbb8:	ldr	r2, [r0, #20]
   2cbbc:	adds	r2, r2, r1
   2cbc0:	cmpcc	r2, #1073741824	; 0x40000000
   2cbc4:	bcc	2cbe8 <flatcc_builder_extend_offset_vector@@Base+0x40>
   2cbc8:	movw	r0, #21025	; 0x5221
   2cbcc:	movw	r1, #16754	; 0x4172
   2cbd0:	movw	r3, #21052	; 0x523c
   2cbd4:	mov	r2, #892	; 0x37c
   2cbd8:	movt	r0, #4
   2cbdc:	movt	r1, #4
   2cbe0:	movt	r3, #4
   2cbe4:	bl	14f40 <__assert_fail@plt>
   2cbe8:	str	r2, [r0, #20]
   2cbec:	ldr	r5, [r4, #20]
   2cbf0:	ldr	r2, [r4, #24]
   2cbf4:	add	r0, r5, r1, lsl #2
   2cbf8:	cmp	r0, r2
   2cbfc:	str	r0, [r4, #20]
   2cc00:	bcc	2cc24 <flatcc_builder_extend_offset_vector@@Base+0x7c>
   2cc04:	add	r1, r0, #1
   2cc08:	mov	r0, r4
   2cc0c:	mvn	r2, #3
   2cc10:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2cc14:	mov	r1, r0
   2cc18:	mov	r0, #0
   2cc1c:	cmp	r1, #0
   2cc20:	popne	{r4, r5, fp, pc}
   2cc24:	ldr	r0, [r4, #16]
   2cc28:	add	r0, r0, r5
   2cc2c:	pop	{r4, r5, fp, pc}

0002cc30 <flatcc_builder_offset_vector_push@@Base>:
   2cc30:	push	{r4, r5, r6, r7, fp, lr}
   2cc34:	add	fp, sp, #16
   2cc38:	mov	r6, r0
   2cc3c:	ldr	r0, [r0, #32]
   2cc40:	mov	r4, r1
   2cc44:	ldrh	r1, [r0, #14]
   2cc48:	cmp	r1, #5
   2cc4c:	bne	2ccb0 <flatcc_builder_offset_vector_push@@Base+0x80>
   2cc50:	ldr	r1, [r0, #20]
   2cc54:	mov	r5, #0
   2cc58:	cmn	r1, #-1073741823	; 0xc0000001
   2cc5c:	beq	2cca8 <flatcc_builder_offset_vector_push@@Base+0x78>
   2cc60:	add	r1, r1, #1
   2cc64:	str	r1, [r0, #20]
   2cc68:	ldr	r7, [r6, #20]
   2cc6c:	ldr	r0, [r6, #24]
   2cc70:	add	r1, r7, #4
   2cc74:	cmp	r1, r0
   2cc78:	str	r1, [r6, #20]
   2cc7c:	bcc	2cc98 <flatcc_builder_offset_vector_push@@Base+0x68>
   2cc80:	add	r1, r7, #5
   2cc84:	mov	r0, r6
   2cc88:	mvn	r2, #3
   2cc8c:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2cc90:	cmp	r0, #0
   2cc94:	bne	2cca8 <flatcc_builder_offset_vector_push@@Base+0x78>
   2cc98:	ldr	r0, [r6, #16]
   2cc9c:	adds	r0, r0, r7
   2cca0:	movne	r5, r0
   2cca4:	strne	r4, [r0]
   2cca8:	mov	r0, r5
   2ccac:	pop	{r4, r5, r6, r7, fp, pc}
   2ccb0:	movw	r0, #17806	; 0x458e
   2ccb4:	movw	r1, #16754	; 0x4172
   2ccb8:	movw	r3, #17857	; 0x45c1
   2ccbc:	movw	r2, #934	; 0x3a6
   2ccc0:	movt	r0, #4
   2ccc4:	movt	r1, #4
   2ccc8:	movt	r3, #4
   2cccc:	bl	14f40 <__assert_fail@plt>

0002ccd0 <flatcc_builder_append_offset_vector@@Base>:
   2ccd0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ccd4:	add	fp, sp, #24
   2ccd8:	mov	r6, r0
   2ccdc:	ldr	r0, [r0, #32]
   2cce0:	mov	r8, r1
   2cce4:	ldrh	r1, [r0, #14]
   2cce8:	cmp	r1, #5
   2ccec:	bne	2cd88 <flatcc_builder_append_offset_vector@@Base+0xb8>
   2ccf0:	ldr	r1, [r0, #20]
   2ccf4:	mov	r5, r2
   2ccf8:	adds	r1, r1, r2
   2ccfc:	cmpcc	r1, #1073741824	; 0x40000000
   2cd00:	bcc	2cd24 <flatcc_builder_append_offset_vector@@Base+0x54>
   2cd04:	movw	r0, #21025	; 0x5221
   2cd08:	movw	r1, #16754	; 0x4172
   2cd0c:	movw	r3, #21052	; 0x523c
   2cd10:	mov	r2, #892	; 0x37c
   2cd14:	movt	r0, #4
   2cd18:	movt	r1, #4
   2cd1c:	movt	r3, #4
   2cd20:	bl	14f40 <__assert_fail@plt>
   2cd24:	str	r1, [r0, #20]
   2cd28:	ldr	r4, [r6, #20]
   2cd2c:	ldr	r1, [r6, #24]
   2cd30:	add	r0, r4, r5, lsl #2
   2cd34:	cmp	r0, r1
   2cd38:	str	r0, [r6, #20]
   2cd3c:	bcc	2cd5c <flatcc_builder_append_offset_vector@@Base+0x8c>
   2cd40:	add	r1, r0, #1
   2cd44:	mov	r0, r6
   2cd48:	mvn	r2, #3
   2cd4c:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2cd50:	mov	r7, #0
   2cd54:	cmp	r0, #0
   2cd58:	bne	2cd80 <flatcc_builder_append_offset_vector@@Base+0xb0>
   2cd5c:	ldr	r0, [r6, #16]
   2cd60:	adds	r7, r0, r4
   2cd64:	beq	2cd7c <flatcc_builder_append_offset_vector@@Base+0xac>
   2cd68:	lsl	r2, r5, #2
   2cd6c:	mov	r0, r7
   2cd70:	mov	r1, r8
   2cd74:	bl	14e5c <memcpy@plt>
   2cd78:	b	2cd80 <flatcc_builder_append_offset_vector@@Base+0xb0>
   2cd7c:	mov	r7, #0
   2cd80:	mov	r0, r7
   2cd84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2cd88:	movw	r0, #17806	; 0x458e
   2cd8c:	movw	r1, #16754	; 0x4172
   2cd90:	movw	r3, #17955	; 0x4623
   2cd94:	mov	r2, #948	; 0x3b4
   2cd98:	movt	r0, #4
   2cd9c:	movt	r1, #4
   2cda0:	movt	r3, #4
   2cda4:	bl	14f40 <__assert_fail@plt>

0002cda8 <flatcc_builder_extend_string@@Base>:
   2cda8:	push	{r4, r5, fp, lr}
   2cdac:	add	fp, sp, #8
   2cdb0:	mov	r4, r0
   2cdb4:	ldr	r0, [r0, #32]
   2cdb8:	ldrh	r2, [r0, #14]
   2cdbc:	cmp	r2, #6
   2cdc0:	bne	2ce18 <flatcc_builder_extend_string@@Base+0x70>
   2cdc4:	ldr	r2, [r0, #20]
   2cdc8:	adds	r2, r2, r1
   2cdcc:	bcs	2ce38 <flatcc_builder_extend_string@@Base+0x90>
   2cdd0:	str	r2, [r0, #20]
   2cdd4:	ldr	r5, [r4, #20]
   2cdd8:	ldr	r2, [r4, #24]
   2cddc:	add	r0, r5, r1
   2cde0:	cmp	r0, r2
   2cde4:	str	r0, [r4, #20]
   2cde8:	bcc	2ce0c <flatcc_builder_extend_string@@Base+0x64>
   2cdec:	add	r1, r0, #1
   2cdf0:	mov	r0, r4
   2cdf4:	mvn	r2, #3
   2cdf8:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2cdfc:	mov	r1, r0
   2ce00:	mov	r0, #0
   2ce04:	cmp	r1, #0
   2ce08:	popne	{r4, r5, fp, pc}
   2ce0c:	ldr	r0, [r4, #16]
   2ce10:	add	r0, r0, r5
   2ce14:	pop	{r4, r5, fp, pc}
   2ce18:	movw	r0, #18071	; 0x4697
   2ce1c:	movw	r1, #16754	; 0x4172
   2ce20:	movw	r3, #18115	; 0x46c3
   2ce24:	movw	r2, #957	; 0x3bd
   2ce28:	movt	r0, #4
   2ce2c:	movt	r1, #4
   2ce30:	movt	r3, #4
   2ce34:	bl	14f40 <__assert_fail@plt>
   2ce38:	movw	r0, #21025	; 0x5221
   2ce3c:	movw	r1, #16754	; 0x4172
   2ce40:	movw	r3, #21052	; 0x523c
   2ce44:	mov	r2, #892	; 0x37c
   2ce48:	movt	r0, #4
   2ce4c:	movt	r1, #4
   2ce50:	movt	r3, #4
   2ce54:	bl	14f40 <__assert_fail@plt>

0002ce58 <flatcc_builder_append_string@@Base>:
   2ce58:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ce5c:	add	fp, sp, #24
   2ce60:	mov	r6, r0
   2ce64:	ldr	r0, [r0, #32]
   2ce68:	mov	r8, r1
   2ce6c:	ldrh	r1, [r0, #14]
   2ce70:	cmp	r1, #6
   2ce74:	bne	2ceec <flatcc_builder_append_string@@Base+0x94>
   2ce78:	ldr	r1, [r0, #20]
   2ce7c:	mov	r4, r2
   2ce80:	adds	r1, r1, r2
   2ce84:	bcs	2cf0c <flatcc_builder_append_string@@Base+0xb4>
   2ce88:	str	r1, [r0, #20]
   2ce8c:	ldr	r5, [r6, #20]
   2ce90:	ldr	r1, [r6, #24]
   2ce94:	add	r0, r5, r4
   2ce98:	cmp	r0, r1
   2ce9c:	str	r0, [r6, #20]
   2cea0:	bcc	2cec0 <flatcc_builder_append_string@@Base+0x68>
   2cea4:	add	r1, r0, #1
   2cea8:	mov	r0, r6
   2ceac:	mvn	r2, #3
   2ceb0:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2ceb4:	mov	r7, #0
   2ceb8:	cmp	r0, #0
   2cebc:	bne	2cee4 <flatcc_builder_append_string@@Base+0x8c>
   2cec0:	ldr	r0, [r6, #16]
   2cec4:	adds	r7, r0, r5
   2cec8:	beq	2cee0 <flatcc_builder_append_string@@Base+0x88>
   2cecc:	mov	r0, r7
   2ced0:	mov	r1, r8
   2ced4:	mov	r2, r4
   2ced8:	bl	14e5c <memcpy@plt>
   2cedc:	b	2cee4 <flatcc_builder_append_string@@Base+0x8c>
   2cee0:	mov	r7, #0
   2cee4:	mov	r0, r7
   2cee8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ceec:	movw	r0, #18071	; 0x4697
   2cef0:	movw	r1, #16754	; 0x4172
   2cef4:	movw	r3, #18178	; 0x4702
   2cef8:	movw	r2, #966	; 0x3c6
   2cefc:	movt	r0, #4
   2cf00:	movt	r1, #4
   2cf04:	movt	r3, #4
   2cf08:	bl	14f40 <__assert_fail@plt>
   2cf0c:	movw	r0, #21025	; 0x5221
   2cf10:	movw	r1, #16754	; 0x4172
   2cf14:	movw	r3, #21052	; 0x523c
   2cf18:	mov	r2, #892	; 0x37c
   2cf1c:	movt	r0, #4
   2cf20:	movt	r1, #4
   2cf24:	movt	r3, #4
   2cf28:	bl	14f40 <__assert_fail@plt>

0002cf2c <flatcc_builder_append_string_str@@Base>:
   2cf2c:	push	{r4, r5, fp, lr}
   2cf30:	add	fp, sp, #8
   2cf34:	mov	r5, r0
   2cf38:	mov	r0, r1
   2cf3c:	mov	r4, r1
   2cf40:	bl	14ec8 <strlen@plt>
   2cf44:	mov	r2, r0
   2cf48:	mov	r0, r5
   2cf4c:	mov	r1, r4
   2cf50:	pop	{r4, r5, fp, lr}
   2cf54:	b	2ce58 <flatcc_builder_append_string@@Base>

0002cf58 <flatcc_builder_append_string_strn@@Base>:
   2cf58:	push	{r4, r5, r6, sl, fp, lr}
   2cf5c:	add	fp, sp, #16
   2cf60:	mov	r6, r0
   2cf64:	mov	r5, r1
   2cf68:	mov	r0, r1
   2cf6c:	mov	r1, #0
   2cf70:	mov	r4, r2
   2cf74:	bl	14f10 <memchr@plt>
   2cf78:	cmp	r0, #0
   2cf7c:	mov	r1, r5
   2cf80:	subne	r4, r0, r5
   2cf84:	mov	r0, r6
   2cf88:	mov	r2, r4
   2cf8c:	pop	{r4, r5, r6, sl, fp, lr}
   2cf90:	b	2ce58 <flatcc_builder_append_string@@Base>

0002cf94 <flatcc_builder_truncate_vector@@Base>:
   2cf94:	push	{fp, lr}
   2cf98:	mov	fp, sp
   2cf9c:	ldr	r2, [r0, #32]
   2cfa0:	ldrh	r3, [r2, #14]
   2cfa4:	cmp	r3, #4
   2cfa8:	bne	2cff0 <flatcc_builder_truncate_vector@@Base+0x5c>
   2cfac:	ldr	r3, [r2, #20]
   2cfb0:	cmp	r3, r1
   2cfb4:	bcc	2d008 <flatcc_builder_truncate_vector@@Base+0x74>
   2cfb8:	sub	r3, r3, r1
   2cfbc:	str	r3, [r2, #20]
   2cfc0:	ldr	r2, [r0, #32]
   2cfc4:	ldr	r3, [r0, #20]
   2cfc8:	ldr	ip, [r0, #16]
   2cfcc:	ldr	r2, [r2, #16]
   2cfd0:	mls	r3, r2, r1, r3
   2cfd4:	mul	r2, r2, r1
   2cfd8:	mov	r1, #0
   2cfdc:	str	r3, [r0, #20]
   2cfe0:	add	r0, ip, r3
   2cfe4:	bl	14eec <memset@plt>
   2cfe8:	mov	r0, #0
   2cfec:	pop	{fp, pc}
   2cff0:	movw	r0, #17557	; 0x4495
   2cff4:	movw	r1, #16754	; 0x4172
   2cff8:	movw	r3, #18255	; 0x474f
   2cffc:	movw	r2, #985	; 0x3d9
   2d000:	movt	r0, #4
   2d004:	b	2d01c <flatcc_builder_truncate_vector@@Base+0x88>
   2d008:	movw	r0, #18318	; 0x478e
   2d00c:	movw	r1, #16754	; 0x4172
   2d010:	movw	r3, #18255	; 0x474f
   2d014:	movw	r2, #986	; 0x3da
   2d018:	movt	r0, #4
   2d01c:	movt	r1, #4
   2d020:	movt	r3, #4
   2d024:	bl	14f40 <__assert_fail@plt>

0002d028 <flatcc_builder_truncate_offset_vector@@Base>:
   2d028:	push	{fp, lr}
   2d02c:	mov	fp, sp
   2d030:	ldr	r2, [r0, #32]
   2d034:	ldrh	r3, [r2, #14]
   2d038:	cmp	r3, #5
   2d03c:	bne	2d084 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2d040:	ldr	r3, [r2, #20]
   2d044:	cmp	r3, r1
   2d048:	bcc	2d09c <flatcc_builder_truncate_offset_vector@@Base+0x74>
   2d04c:	sub	r3, r3, r1
   2d050:	str	r3, [r2, #20]
   2d054:	ldr	r2, [r0, #32]
   2d058:	ldr	r3, [r0, #20]
   2d05c:	ldr	ip, [r0, #16]
   2d060:	ldr	r2, [r2, #16]
   2d064:	mls	r3, r2, r1, r3
   2d068:	mul	r2, r2, r1
   2d06c:	mov	r1, #0
   2d070:	str	r3, [r0, #20]
   2d074:	add	r0, ip, r3
   2d078:	bl	14eec <memset@plt>
   2d07c:	mov	r0, #0
   2d080:	pop	{fp, pc}
   2d084:	movw	r0, #17806	; 0x458e
   2d088:	movw	r1, #16754	; 0x4172
   2d08c:	movw	r3, #18354	; 0x47b2
   2d090:	movw	r2, #994	; 0x3e2
   2d094:	movt	r0, #4
   2d098:	b	2d0b0 <flatcc_builder_truncate_offset_vector@@Base+0x88>
   2d09c:	movw	r0, #18424	; 0x47f8
   2d0a0:	movw	r1, #16754	; 0x4172
   2d0a4:	movw	r3, #18354	; 0x47b2
   2d0a8:	movw	r2, #995	; 0x3e3
   2d0ac:	movt	r0, #4
   2d0b0:	movt	r1, #4
   2d0b4:	movt	r3, #4
   2d0b8:	bl	14f40 <__assert_fail@plt>

0002d0bc <flatcc_builder_truncate_string@@Base>:
   2d0bc:	push	{fp, lr}
   2d0c0:	mov	fp, sp
   2d0c4:	mov	r2, r1
   2d0c8:	ldr	r1, [r0, #32]
   2d0cc:	ldrh	r3, [r1, #14]
   2d0d0:	cmp	r3, #6
   2d0d4:	bne	2d110 <flatcc_builder_truncate_string@@Base+0x54>
   2d0d8:	ldr	r3, [r1, #20]
   2d0dc:	cmp	r3, r2
   2d0e0:	bcc	2d128 <flatcc_builder_truncate_string@@Base+0x6c>
   2d0e4:	sub	r3, r3, r2
   2d0e8:	str	r3, [r1, #20]
   2d0ec:	ldr	r3, [r0, #20]
   2d0f0:	ldr	r1, [r0, #16]
   2d0f4:	sub	r3, r3, r2
   2d0f8:	str	r3, [r0, #20]
   2d0fc:	add	r0, r1, r3
   2d100:	mov	r1, #0
   2d104:	bl	14eec <memset@plt>
   2d108:	mov	r0, #0
   2d10c:	pop	{fp, pc}
   2d110:	movw	r0, #18071	; 0x4697
   2d114:	movw	r1, #16754	; 0x4172
   2d118:	movw	r3, #18483	; 0x4833
   2d11c:	movw	r2, #1003	; 0x3eb
   2d120:	movt	r0, #4
   2d124:	b	2d13c <flatcc_builder_truncate_string@@Base+0x80>
   2d128:	movw	r0, #18546	; 0x4872
   2d12c:	movw	r1, #16754	; 0x4172
   2d130:	movw	r3, #18483	; 0x4833
   2d134:	mov	r2, #1004	; 0x3ec
   2d138:	movt	r0, #4
   2d13c:	movt	r1, #4
   2d140:	movt	r3, #4
   2d144:	bl	14f40 <__assert_fail@plt>

0002d148 <flatcc_builder_start_vector@@Base>:
   2d148:	push	{r4, r5, r6, r7, fp, lr}
   2d14c:	add	fp, sp, #16
   2d150:	mov	r7, #4
   2d154:	cmp	r2, #4
   2d158:	mov	r6, r1
   2d15c:	mov	r5, r3
   2d160:	mov	r4, r0
   2d164:	movls	r2, r7
   2d168:	mov	r1, r2
   2d16c:	bl	2c574 <flatcc_builder_start_buffer@@Base+0xbc>
   2d170:	mov	r1, r0
   2d174:	mvn	r0, #0
   2d178:	cmp	r1, #0
   2d17c:	popne	{r4, r5, r6, r7, fp, pc}
   2d180:	ldr	r0, [r4, #32]
   2d184:	str	r6, [r0, #16]
   2d188:	mov	r0, #0
   2d18c:	ldr	r1, [r4, #32]
   2d190:	str	r0, [r1, #20]
   2d194:	ldr	r1, [r4, #32]
   2d198:	str	r5, [r1, #24]
   2d19c:	ldr	r1, [r4, #32]
   2d1a0:	strh	r7, [r1, #14]
   2d1a4:	ldr	r2, [r4, #28]
   2d1a8:	ldr	r3, [r4, #60]	; 0x3c
   2d1ac:	ldr	r7, [r4, #64]	; 0x40
   2d1b0:	add	r3, r3, r2
   2d1b4:	sub	r2, r7, r2
   2d1b8:	str	r3, [r4, #16]
   2d1bc:	mvn	r3, #3
   2d1c0:	cmn	r2, #4
   2d1c4:	movcs	r2, r3
   2d1c8:	str	r2, [r4, #24]
   2d1cc:	str	r3, [r1, #4]
   2d1d0:	pop	{r4, r5, r6, r7, fp, pc}

0002d1d4 <flatcc_builder_start_offset_vector@@Base>:
   2d1d4:	push	{r4, r5, fp, lr}
   2d1d8:	add	fp, sp, #8
   2d1dc:	mov	r1, #4
   2d1e0:	mov	r4, r0
   2d1e4:	mov	r5, #4
   2d1e8:	bl	2c574 <flatcc_builder_start_buffer@@Base+0xbc>
   2d1ec:	mov	r1, r0
   2d1f0:	mvn	r0, #0
   2d1f4:	cmp	r1, #0
   2d1f8:	popne	{r4, r5, fp, pc}
   2d1fc:	ldr	r0, [r4, #32]
   2d200:	mov	r2, #5
   2d204:	str	r5, [r0, #16]
   2d208:	mov	r0, #0
   2d20c:	ldr	r1, [r4, #32]
   2d210:	str	r0, [r1, #20]
   2d214:	ldr	r1, [r4, #32]
   2d218:	strh	r2, [r1, #14]
   2d21c:	ldr	r2, [r4, #28]
   2d220:	ldr	r3, [r4, #60]	; 0x3c
   2d224:	ldr	r5, [r4, #64]	; 0x40
   2d228:	add	r3, r3, r2
   2d22c:	sub	r2, r5, r2
   2d230:	str	r3, [r4, #16]
   2d234:	mvn	r3, #3
   2d238:	cmn	r2, #4
   2d23c:	movcs	r2, r3
   2d240:	str	r2, [r4, #24]
   2d244:	str	r3, [r1, #4]
   2d248:	pop	{r4, r5, fp, pc}

0002d24c <flatcc_builder_create_offset_vector@@Base>:
   2d24c:	push	{r4, r5, r6, sl, fp, lr}
   2d250:	add	fp, sp, #16
   2d254:	mov	r6, r2
   2d258:	mov	r5, r1
   2d25c:	mov	r4, r0
   2d260:	bl	2d1d4 <flatcc_builder_start_offset_vector@@Base>
   2d264:	cmp	r0, #0
   2d268:	beq	2d274 <flatcc_builder_create_offset_vector@@Base+0x28>
   2d26c:	mov	r0, #0
   2d270:	pop	{r4, r5, r6, sl, fp, pc}
   2d274:	mov	r0, r4
   2d278:	mov	r1, r6
   2d27c:	bl	2cba8 <flatcc_builder_extend_offset_vector@@Base>
   2d280:	cmp	r0, #0
   2d284:	beq	2d26c <flatcc_builder_create_offset_vector@@Base+0x20>
   2d288:	lsl	r2, r6, #2
   2d28c:	mov	r1, r5
   2d290:	bl	14e5c <memcpy@plt>
   2d294:	mov	r0, r4
   2d298:	pop	{r4, r5, r6, sl, fp, lr}
   2d29c:	b	2d2a0 <flatcc_builder_end_offset_vector@@Base>

0002d2a0 <flatcc_builder_end_offset_vector@@Base>:
   2d2a0:	push	{r4, r5, fp, lr}
   2d2a4:	add	fp, sp, #8
   2d2a8:	mov	r4, r0
   2d2ac:	ldr	r0, [r0, #32]
   2d2b0:	ldrh	r1, [r0, #14]
   2d2b4:	cmp	r1, #5
   2d2b8:	bne	2d358 <flatcc_builder_end_offset_vector@@Base+0xb8>
   2d2bc:	ldr	r2, [r0, #20]
   2d2c0:	ldr	r1, [r4, #16]
   2d2c4:	mov	r0, r4
   2d2c8:	mov	r3, #0
   2d2cc:	bl	2e280 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2d2d0:	mov	r5, r0
   2d2d4:	cmp	r0, #0
   2d2d8:	beq	2d350 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2d2dc:	ldr	r0, [r4, #16]
   2d2e0:	ldr	r2, [r4, #20]
   2d2e4:	mov	r1, #0
   2d2e8:	bl	14eec <memset@plt>
   2d2ec:	ldr	r0, [r4, #32]
   2d2f0:	ldr	r1, [r4, #60]	; 0x3c
   2d2f4:	ldr	ip, [r4, #64]	; 0x40
   2d2f8:	ldr	r3, [r0, #8]
   2d2fc:	str	r3, [r4, #20]
   2d300:	ldr	r3, [r0]
   2d304:	str	r3, [r4, #28]
   2d308:	add	r1, r1, r3
   2d30c:	ldr	r2, [r0, #4]
   2d310:	str	r1, [r4, #16]
   2d314:	sub	r1, ip, r3
   2d318:	cmp	r1, r2
   2d31c:	movhi	r1, r2
   2d320:	str	r1, [r4, #24]
   2d324:	ldrh	r1, [r4, #130]	; 0x82
   2d328:	ldrh	r2, [r4, #128]	; 0x80
   2d32c:	cmp	r2, r1
   2d330:	strhcc	r1, [r4, #128]	; 0x80
   2d334:	ldrh	r1, [r0, #12]
   2d338:	sub	r0, r0, #36	; 0x24
   2d33c:	str	r0, [r4, #32]
   2d340:	strh	r1, [r4, #130]	; 0x82
   2d344:	ldr	r0, [r4, #156]	; 0x9c
   2d348:	sub	r0, r0, #1
   2d34c:	str	r0, [r4, #156]	; 0x9c
   2d350:	mov	r0, r5
   2d354:	pop	{r4, r5, fp, pc}
   2d358:	movw	r0, #17806	; 0x458e
   2d35c:	movw	r1, #16754	; 0x4172
   2d360:	movw	r3, #19389	; 0x4bbd
   2d364:	movw	r2, #1480	; 0x5c8
   2d368:	movt	r0, #4
   2d36c:	movt	r1, #4
   2d370:	movt	r3, #4
   2d374:	bl	14f40 <__assert_fail@plt>

0002d378 <flatcc_builder_start_string@@Base>:
   2d378:	push	{r4, r5, fp, lr}
   2d37c:	add	fp, sp, #8
   2d380:	mov	r1, #1
   2d384:	mov	r4, r0
   2d388:	mov	r5, #1
   2d38c:	bl	2c574 <flatcc_builder_start_buffer@@Base+0xbc>
   2d390:	mov	r1, r0
   2d394:	mvn	r0, #0
   2d398:	cmp	r1, #0
   2d39c:	popne	{r4, r5, fp, pc}
   2d3a0:	ldr	r0, [r4, #32]
   2d3a4:	mov	r2, #6
   2d3a8:	str	r5, [r0, #16]
   2d3ac:	mov	r0, #0
   2d3b0:	ldr	r1, [r4, #32]
   2d3b4:	str	r0, [r1, #20]
   2d3b8:	ldr	r1, [r4, #32]
   2d3bc:	strh	r2, [r1, #14]
   2d3c0:	ldr	r2, [r4, #28]
   2d3c4:	ldr	r3, [r4, #60]	; 0x3c
   2d3c8:	ldr	r5, [r4, #64]	; 0x40
   2d3cc:	add	r3, r3, r2
   2d3d0:	sub	r2, r5, r2
   2d3d4:	str	r3, [r4, #16]
   2d3d8:	mvn	r3, #3
   2d3dc:	cmn	r2, #4
   2d3e0:	movcs	r2, r3
   2d3e4:	str	r2, [r4, #24]
   2d3e8:	str	r3, [r1, #4]
   2d3ec:	pop	{r4, r5, fp, pc}

0002d3f0 <flatcc_builder_reserve_table@@Base>:
   2d3f0:	push	{r4, r5, r6, sl, fp, lr}
   2d3f4:	add	fp, sp, #16
   2d3f8:	sub	sp, sp, #8
   2d3fc:	cmn	r1, #1
   2d400:	ble	2d4d4 <flatcc_builder_reserve_table@@Base+0xe4>
   2d404:	mov	r4, r0
   2d408:	ldr	r0, [r0, #32]
   2d40c:	mov	r5, r1
   2d410:	ldr	r1, [r4, #56]	; 0x38
   2d414:	ldrh	r2, [r0, #28]
   2d418:	ldr	r0, [r0, #16]
   2d41c:	add	r6, r0, r2, lsl #1
   2d420:	add	r0, r6, r5, lsl #1
   2d424:	add	r2, r0, #4
   2d428:	cmp	r2, r1
   2d42c:	bls	2d454 <flatcc_builder_reserve_table@@Base+0x64>
   2d430:	ldr	r0, [r4, #40]	; 0x28
   2d434:	ldr	ip, [r4, #48]	; 0x30
   2d438:	mov	r3, #0
   2d43c:	add	r1, r4, #52	; 0x34
   2d440:	str	r3, [sp]
   2d444:	mov	r3, #1
   2d448:	blx	ip
   2d44c:	cmp	r0, #0
   2d450:	bne	2d4f4 <flatcc_builder_reserve_table@@Base+0x104>
   2d454:	ldr	r0, [r4, #52]	; 0x34
   2d458:	adds	r0, r0, r6
   2d45c:	str	r0, [r4, #4]
   2d460:	beq	2d4c8 <flatcc_builder_reserve_table@@Base+0xd8>
   2d464:	add	r0, r0, #4
   2d468:	lsl	r1, r5, #1
   2d46c:	str	r0, [r4, #4]
   2d470:	ldr	r0, [r4, #32]
   2d474:	ldr	r3, [r4, #80]	; 0x50
   2d478:	ldr	r5, [r0, #20]
   2d47c:	orr	r0, r1, #1
   2d480:	add	r2, r5, r0
   2d484:	cmp	r2, r3
   2d488:	bls	2d4b0 <flatcc_builder_reserve_table@@Base+0xc0>
   2d48c:	ldr	r0, [r4, #40]	; 0x28
   2d490:	ldr	r6, [r4, #48]	; 0x30
   2d494:	mov	r3, #3
   2d498:	add	r1, r4, #76	; 0x4c
   2d49c:	str	r3, [sp]
   2d4a0:	mov	r3, #0
   2d4a4:	blx	r6
   2d4a8:	cmp	r0, #0
   2d4ac:	bne	2d4f4 <flatcc_builder_reserve_table@@Base+0x104>
   2d4b0:	ldr	r0, [r4, #76]	; 0x4c
   2d4b4:	adds	r0, r0, r5
   2d4b8:	str	r0, [r4]
   2d4bc:	mov	r0, #0
   2d4c0:	mvneq	r0, #0
   2d4c4:	b	2d4cc <flatcc_builder_reserve_table@@Base+0xdc>
   2d4c8:	mvn	r0, #0
   2d4cc:	sub	sp, fp, #16
   2d4d0:	pop	{r4, r5, r6, sl, fp, pc}
   2d4d4:	movw	r0, #18645	; 0x48d5
   2d4d8:	movw	r1, #16754	; 0x4172
   2d4dc:	movw	r3, #18580	; 0x4894
   2d4e0:	movw	r2, #1065	; 0x429
   2d4e4:	movt	r0, #4
   2d4e8:	movt	r1, #4
   2d4ec:	movt	r3, #4
   2d4f0:	bl	14f40 <__assert_fail@plt>
   2d4f4:	movw	r0, #21272	; 0x5318
   2d4f8:	movw	r1, #16754	; 0x4172
   2d4fc:	movw	r3, #20818	; 0x5152
   2d500:	mov	r2, #308	; 0x134
   2d504:	movt	r0, #4
   2d508:	movt	r1, #4
   2d50c:	movt	r3, #4
   2d510:	bl	14f40 <__assert_fail@plt>

0002d514 <flatcc_builder_start_table@@Base>:
   2d514:	push	{r4, r5, r6, r7, fp, lr}
   2d518:	add	fp, sp, #16
   2d51c:	sub	sp, sp, #8
   2d520:	mov	r6, r1
   2d524:	mov	r1, #4
   2d528:	mov	r4, r0
   2d52c:	bl	2c574 <flatcc_builder_start_buffer@@Base+0xbc>
   2d530:	mvn	r5, #0
   2d534:	cmp	r0, #0
   2d538:	beq	2d548 <flatcc_builder_start_table@@Base+0x34>
   2d53c:	mov	r0, r5
   2d540:	sub	sp, fp, #16
   2d544:	pop	{r4, r5, r6, r7, fp, pc}
   2d548:	mov	r1, r4
   2d54c:	ldr	r2, [r4, #4]
   2d550:	ldr	r3, [r4, #32]
   2d554:	ldr	r0, [r1, #52]!	; 0x34
   2d558:	sub	r0, r2, r0
   2d55c:	str	r0, [r3, #16]
   2d560:	ldr	r0, [r4]
   2d564:	ldr	r3, [r4, #76]	; 0x4c
   2d568:	ldr	r2, [r4, #32]
   2d56c:	sub	r0, r0, r3
   2d570:	mov	r3, #0
   2d574:	str	r0, [r2, #20]
   2d578:	ldr	r0, [r4, #12]
   2d57c:	ldr	r2, [r4, #32]
   2d580:	str	r0, [r2, #24]
   2d584:	ldr	r0, [r4, #32]
   2d588:	ldrh	r2, [r4, #8]
   2d58c:	strh	r2, [r0, #28]
   2d590:	movw	r0, #15186	; 0x3b52
   2d594:	strh	r3, [r4, #8]
   2d598:	mov	r2, #3
   2d59c:	movt	r0, #12137	; 0x2f69
   2d5a0:	str	r0, [r4, #12]
   2d5a4:	ldr	r0, [r4, #32]
   2d5a8:	strh	r2, [r0, #14]
   2d5ac:	ldrh	r2, [r0, #28]
   2d5b0:	ldr	r0, [r0, #16]
   2d5b4:	add	r7, r0, r2, lsl #1
   2d5b8:	add	r0, r7, r6, lsl #1
   2d5bc:	add	r2, r0, #4
   2d5c0:	ldr	r0, [r4, #56]	; 0x38
   2d5c4:	cmp	r2, r0
   2d5c8:	bls	2d5e8 <flatcc_builder_start_table@@Base+0xd4>
   2d5cc:	ldr	r0, [r4, #40]	; 0x28
   2d5d0:	ldr	ip, [r4, #48]	; 0x30
   2d5d4:	str	r3, [sp]
   2d5d8:	mov	r3, #1
   2d5dc:	blx	ip
   2d5e0:	cmp	r0, #0
   2d5e4:	bne	2d68c <flatcc_builder_start_table@@Base+0x178>
   2d5e8:	ldr	r0, [r4, #52]	; 0x34
   2d5ec:	adds	r0, r0, r7
   2d5f0:	str	r0, [r4, #4]
   2d5f4:	beq	2d53c <flatcc_builder_start_table@@Base+0x28>
   2d5f8:	add	r0, r0, #4
   2d5fc:	lsl	r1, r6, #1
   2d600:	str	r0, [r4, #4]
   2d604:	ldr	r0, [r4, #32]
   2d608:	ldr	r3, [r4, #80]	; 0x50
   2d60c:	ldr	r6, [r0, #20]
   2d610:	orr	r0, r1, #1
   2d614:	add	r2, r6, r0
   2d618:	cmp	r2, r3
   2d61c:	bls	2d644 <flatcc_builder_start_table@@Base+0x130>
   2d620:	ldr	r0, [r4, #40]	; 0x28
   2d624:	ldr	r7, [r4, #48]	; 0x30
   2d628:	mov	r3, #3
   2d62c:	add	r1, r4, #76	; 0x4c
   2d630:	str	r3, [sp]
   2d634:	mov	r3, #0
   2d638:	blx	r7
   2d63c:	cmp	r0, #0
   2d640:	bne	2d68c <flatcc_builder_start_table@@Base+0x178>
   2d644:	ldr	r0, [r4, #76]	; 0x4c
   2d648:	adds	r0, r0, r6
   2d64c:	str	r0, [r4]
   2d650:	beq	2d53c <flatcc_builder_start_table@@Base+0x28>
   2d654:	ldr	r0, [r4, #28]
   2d658:	ldr	r2, [r4, #60]	; 0x3c
   2d65c:	ldr	r3, [r4, #64]	; 0x40
   2d660:	ldr	r1, [r4, #32]
   2d664:	mov	r5, #0
   2d668:	add	r2, r2, r0
   2d66c:	sub	r0, r3, r0
   2d670:	str	r2, [r4, #16]
   2d674:	movw	r2, #65532	; 0xfffc
   2d678:	cmp	r0, r2
   2d67c:	movcs	r0, r2
   2d680:	str	r0, [r4, #24]
   2d684:	str	r2, [r1, #4]
   2d688:	b	2d53c <flatcc_builder_start_table@@Base+0x28>
   2d68c:	movw	r0, #21272	; 0x5318
   2d690:	movw	r1, #16754	; 0x4172
   2d694:	movw	r3, #20818	; 0x5152
   2d698:	mov	r2, #308	; 0x134
   2d69c:	movt	r0, #4
   2d6a0:	movt	r1, #4
   2d6a4:	movt	r3, #4
   2d6a8:	bl	14f40 <__assert_fail@plt>

0002d6ac <flatcc_builder_create_vtable@@Base>:
   2d6ac:	push	{r4, r5, fp, lr}
   2d6b0:	add	fp, sp, #8
   2d6b4:	sub	sp, sp, #80	; 0x50
   2d6b8:	mov	r3, r2
   2d6bc:	mov	r2, #0
   2d6c0:	mov	r4, r0
   2d6c4:	cmp	r3, #0
   2d6c8:	str	r2, [sp, #12]
   2d6cc:	str	r2, [sp, #8]
   2d6d0:	movne	r2, #1
   2d6d4:	strne	r3, [sp, #20]
   2d6d8:	strne	r1, [sp, #16]
   2d6dc:	strne	r3, [sp, #8]
   2d6e0:	strne	r2, [sp, #12]
   2d6e4:	ldr	r0, [r4, #152]	; 0x98
   2d6e8:	cmp	r0, #0
   2d6ec:	bne	2d6fc <flatcc_builder_create_vtable@@Base+0x50>
   2d6f0:	ldr	r0, [r4, #180]	; 0xb4
   2d6f4:	cmp	r0, #0
   2d6f8:	beq	2d750 <flatcc_builder_create_vtable@@Base+0xa4>
   2d6fc:	cmp	r3, #0
   2d700:	beq	2d794 <flatcc_builder_create_vtable@@Base+0xe8>
   2d704:	ldr	r0, [r4, #136]	; 0x88
   2d708:	ldr	ip, [r4, #44]	; 0x2c
   2d70c:	add	r1, sp, #8
   2d710:	add	r1, r1, #8
   2d714:	sub	r5, r0, r3
   2d718:	ldr	r0, [r4, #36]	; 0x24
   2d71c:	str	r3, [sp]
   2d720:	mov	r3, r5
   2d724:	blx	ip
   2d728:	cmp	r0, #0
   2d72c:	bne	2d7a8 <flatcc_builder_create_vtable@@Base+0xfc>
   2d730:	cmp	r5, #0
   2d734:	str	r5, [r4, #136]	; 0x88
   2d738:	beq	2d748 <flatcc_builder_create_vtable@@Base+0x9c>
   2d73c:	add	r1, r5, #1
   2d740:	mov	r0, r1
   2d744:	b	2d78c <flatcc_builder_create_vtable@@Base+0xe0>
   2d748:	mov	r0, #0
   2d74c:	b	2d78c <flatcc_builder_create_vtable@@Base+0xe0>
   2d750:	ldr	r5, [r4, #140]	; 0x8c
   2d754:	ldr	r0, [r4, #36]	; 0x24
   2d758:	ldr	ip, [r4, #44]	; 0x2c
   2d75c:	add	r1, r5, r3
   2d760:	str	r1, [r4, #140]	; 0x8c
   2d764:	add	r1, sp, #8
   2d768:	str	r3, [sp]
   2d76c:	mov	r3, r5
   2d770:	add	r1, r1, #8
   2d774:	blx	ip
   2d778:	cmp	r0, #0
   2d77c:	bne	2d7c8 <flatcc_builder_create_vtable@@Base+0x11c>
   2d780:	adds	r1, r5, #1
   2d784:	mov	r0, #0
   2d788:	movcc	r0, r1
   2d78c:	sub	sp, fp, #8
   2d790:	pop	{r4, r5, fp, pc}
   2d794:	movw	r0, #21272	; 0x5318
   2d798:	movw	r1, #16754	; 0x4172
   2d79c:	movw	r3, #20951	; 0x51d7
   2d7a0:	movw	r2, #647	; 0x287
   2d7a4:	b	2d7b8 <flatcc_builder_create_vtable@@Base+0x10c>
   2d7a8:	movw	r0, #21272	; 0x5318
   2d7ac:	movw	r1, #16754	; 0x4172
   2d7b0:	movw	r3, #20951	; 0x51d7
   2d7b4:	movw	r2, #651	; 0x28b
   2d7b8:	movt	r0, #4
   2d7bc:	movt	r1, #4
   2d7c0:	movt	r3, #4
   2d7c4:	bl	14f40 <__assert_fail@plt>
   2d7c8:	movw	r0, #21272	; 0x5318
   2d7cc:	movw	r1, #16754	; 0x4172
   2d7d0:	movw	r3, #21139	; 0x5293
   2d7d4:	movw	r2, #677	; 0x2a5
   2d7d8:	movt	r0, #4
   2d7dc:	movt	r1, #4
   2d7e0:	movt	r3, #4
   2d7e4:	bl	14f40 <__assert_fail@plt>

0002d7e8 <flatcc_builder_create_cached_vtable@@Base>:
   2d7e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d7ec:	add	fp, sp, #28
   2d7f0:	sub	sp, sp, #20
   2d7f4:	mov	sl, r0
   2d7f8:	ldr	r0, [r0, #116]	; 0x74
   2d7fc:	mov	r8, r3
   2d800:	mov	r5, r2
   2d804:	str	r1, [sp, #16]
   2d808:	cmp	r0, #0
   2d80c:	beq	2d8b0 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2d810:	ldr	r1, [sl, #92]	; 0x5c
   2d814:	rsb	r0, r0, #32
   2d818:	lsr	r0, r8, r0
   2d81c:	add	r6, r1, r0, lsl #2
   2d820:	cmp	r6, #0
   2d824:	beq	2d974 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2d828:	ldr	r7, [r6]
   2d82c:	str	r6, [sp, #12]
   2d830:	cmp	r7, #0
   2d834:	beq	2d97c <flatcc_builder_create_cached_vtable@@Base+0x194>
   2d838:	ldr	r4, [sl, #68]	; 0x44
   2d83c:	ldr	r8, [sl, #100]	; 0x64
   2d840:	mov	r0, #0
   2d844:	str	r0, [sp, #8]
   2d848:	add	r9, r8, r7
   2d84c:	mov	r1, r4
   2d850:	ldr	r0, [r9, #8]
   2d854:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2d858:	cmp	r0, r5
   2d85c:	bne	2d874 <flatcc_builder_create_cached_vtable@@Base+0x8c>
   2d860:	ldr	r0, [sp, #16]
   2d864:	mov	r2, r5
   2d868:	bl	14ebc <bcmp@plt>
   2d86c:	cmp	r0, #0
   2d870:	beq	2d888 <flatcc_builder_create_cached_vtable@@Base+0xa0>
   2d874:	ldr	r7, [r9, #12]!
   2d878:	mov	r6, r9
   2d87c:	cmp	r7, #0
   2d880:	bne	2d848 <flatcc_builder_create_cached_vtable@@Base+0x60>
   2d884:	b	2d96c <flatcc_builder_create_cached_vtable@@Base+0x184>
   2d888:	ldr	r0, [sl, #152]	; 0x98
   2d88c:	ldr	r1, [r9, #4]
   2d890:	cmp	r1, r0
   2d894:	beq	2dae0 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   2d898:	mov	r6, r9
   2d89c:	mov	r0, r9
   2d8a0:	ldr	r7, [r6, #12]!
   2d8a4:	cmp	r7, #0
   2d8a8:	bne	2d844 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2d8ac:	b	2d980 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2d8b0:	ldr	r0, [sl, #124]	; 0x7c
   2d8b4:	cmp	r0, #0
   2d8b8:	bne	2db2c <flatcc_builder_create_cached_vtable@@Base+0x344>
   2d8bc:	ldr	r0, [sl, #104]	; 0x68
   2d8c0:	add	r7, sl, #100	; 0x64
   2d8c4:	cmp	r0, #15
   2d8c8:	bhi	2d8f4 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2d8cc:	ldr	r0, [sl, #40]	; 0x28
   2d8d0:	ldr	r6, [sl, #48]	; 0x30
   2d8d4:	mov	r1, #6
   2d8d8:	mov	r2, #16
   2d8dc:	mov	r3, #0
   2d8e0:	str	r1, [sp]
   2d8e4:	mov	r1, r7
   2d8e8:	blx	r6
   2d8ec:	cmp	r0, #0
   2d8f0:	bne	2db0c <flatcc_builder_create_cached_vtable@@Base+0x324>
   2d8f4:	ldr	r0, [r7]
   2d8f8:	mov	r7, #0
   2d8fc:	cmp	r0, #0
   2d900:	beq	2da20 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2d904:	mov	r0, #16
   2d908:	mov	r2, #5
   2d90c:	add	r1, sl, #92	; 0x5c
   2d910:	mov	r3, #1
   2d914:	mov	r4, #256	; 0x100
   2d918:	str	r0, [sl, #124]	; 0x7c
   2d91c:	ldr	r0, [sl, #40]	; 0x28
   2d920:	ldr	r6, [sl, #48]	; 0x30
   2d924:	str	r2, [sp]
   2d928:	mov	r2, #256	; 0x100
   2d92c:	blx	r6
   2d930:	cmp	r0, #0
   2d934:	bne	2da20 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2d938:	ldr	r0, [sl, #96]	; 0x60
   2d93c:	mov	r1, r4
   2d940:	lsl	r4, r4, #1
   2d944:	cmp	r0, r1, lsl #1
   2d948:	bcs	2d93c <flatcc_builder_create_cached_vtable@@Base+0x154>
   2d94c:	lsr	r1, r1, #2
   2d950:	mvn	r0, #0
   2d954:	mov	r2, #1
   2d958:	add	r0, r0, #1
   2d95c:	cmp	r1, r2, lsl r0
   2d960:	bhi	2d958 <flatcc_builder_create_cached_vtable@@Base+0x170>
   2d964:	str	r0, [sl, #116]	; 0x74
   2d968:	b	2d810 <flatcc_builder_create_cached_vtable@@Base+0x28>
   2d96c:	ldr	r9, [sp, #8]
   2d970:	b	2d980 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2d974:	mov	r7, #0
   2d978:	b	2da20 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2d97c:	mov	r9, #0
   2d980:	ldr	r4, [sl, #124]	; 0x7c
   2d984:	ldr	r0, [sl, #104]	; 0x68
   2d988:	add	r7, sl, #100	; 0x64
   2d98c:	add	r2, r4, #16
   2d990:	cmp	r2, r0
   2d994:	bls	2d9bc <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   2d998:	ldr	r0, [sl, #40]	; 0x28
   2d99c:	ldr	r6, [sl, #48]	; 0x30
   2d9a0:	mov	r1, #6
   2d9a4:	mov	r3, #0
   2d9a8:	str	r1, [sp]
   2d9ac:	mov	r1, r7
   2d9b0:	blx	r6
   2d9b4:	cmp	r0, #0
   2d9b8:	bne	2db0c <flatcc_builder_create_cached_vtable@@Base+0x324>
   2d9bc:	ldr	r0, [r7]
   2d9c0:	mov	r7, #0
   2d9c4:	adds	r4, r0, r4
   2d9c8:	beq	2da20 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2d9cc:	ldr	r0, [sl, #124]	; 0x7c
   2d9d0:	ldr	r1, [sl, #152]	; 0x98
   2d9d4:	add	r2, r0, #16
   2d9d8:	str	r2, [sl, #124]	; 0x7c
   2d9dc:	ldr	r2, [sp, #12]
   2d9e0:	str	r1, [r4, #4]
   2d9e4:	ldr	r1, [r2]
   2d9e8:	str	r1, [r4, #12]
   2d9ec:	ldr	r1, [sp, #16]
   2d9f0:	str	r0, [r2]
   2d9f4:	mov	r0, sl
   2d9f8:	mov	r2, r5
   2d9fc:	bl	2d6ac <flatcc_builder_create_vtable@@Base>
   2da00:	cmp	r0, #0
   2da04:	str	r0, [r4]
   2da08:	beq	2da20 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2da0c:	cmp	r9, #0
   2da10:	beq	2da2c <flatcc_builder_create_cached_vtable@@Base+0x244>
   2da14:	ldr	r0, [r9, #8]
   2da18:	str	r0, [r4, #8]
   2da1c:	ldr	r7, [r4]
   2da20:	mov	r0, r7
   2da24:	sub	sp, fp, #28
   2da28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2da2c:	ldr	r6, [sl, #120]	; 0x78
   2da30:	ldr	r0, [sl, #172]	; 0xac
   2da34:	add	r2, r6, r5
   2da38:	cmp	r0, #0
   2da3c:	beq	2da78 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2da40:	cmp	r0, r2
   2da44:	bcs	2da78 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2da48:	ldr	r0, [sl, #116]	; 0x74
   2da4c:	cmp	r0, #0
   2da50:	beq	2da1c <flatcc_builder_create_cached_vtable@@Base+0x234>
   2da54:	ldr	r0, [sl, #92]	; 0x5c
   2da58:	ldr	r2, [sl, #96]	; 0x60
   2da5c:	mov	r1, #0
   2da60:	mov	r5, #0
   2da64:	bl	14eec <memset@plt>
   2da68:	mov	r0, #16
   2da6c:	str	r5, [sl, #120]	; 0x78
   2da70:	str	r0, [sl, #124]	; 0x7c
   2da74:	b	2da1c <flatcc_builder_create_cached_vtable@@Base+0x234>
   2da78:	ldr	r0, [sl, #72]	; 0x48
   2da7c:	add	r7, sl, #68	; 0x44
   2da80:	cmp	r2, r0
   2da84:	bls	2daac <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   2da88:	ldr	r0, [sl, #40]	; 0x28
   2da8c:	ldr	ip, [sl, #48]	; 0x30
   2da90:	mov	r1, #2
   2da94:	mov	r3, #0
   2da98:	str	r1, [sp]
   2da9c:	mov	r1, r7
   2daa0:	blx	ip
   2daa4:	cmp	r0, #0
   2daa8:	bne	2db0c <flatcc_builder_create_cached_vtable@@Base+0x324>
   2daac:	ldr	r0, [r7]
   2dab0:	adds	r0, r0, r6
   2dab4:	beq	2dad8 <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2dab8:	ldr	r1, [sl, #120]	; 0x78
   2dabc:	mov	r2, r5
   2dac0:	str	r1, [r4, #8]
   2dac4:	add	r1, r1, r5
   2dac8:	str	r1, [sl, #120]	; 0x78
   2dacc:	ldr	r1, [sp, #16]
   2dad0:	bl	14e5c <memcpy@plt>
   2dad4:	b	2da1c <flatcc_builder_create_cached_vtable@@Base+0x234>
   2dad8:	mvn	r7, #0
   2dadc:	b	2da20 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2dae0:	ldr	r0, [sp, #12]
   2dae4:	cmp	r6, r0
   2dae8:	beq	2db04 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   2daec:	mov	r1, r0
   2daf0:	ldr	r0, [r9, #12]
   2daf4:	str	r0, [r6]
   2daf8:	ldr	r0, [r1]
   2dafc:	str	r0, [r9, #12]
   2db00:	str	r7, [r1]
   2db04:	ldr	r7, [r9]
   2db08:	b	2da20 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2db0c:	movw	r0, #21272	; 0x5318
   2db10:	movw	r1, #16754	; 0x4172
   2db14:	movw	r3, #20818	; 0x5152
   2db18:	mov	r2, #308	; 0x134
   2db1c:	movt	r0, #4
   2db20:	movt	r1, #4
   2db24:	movt	r3, #4
   2db28:	bl	14f40 <__assert_fail@plt>
   2db2c:	movw	r0, #21212	; 0x52dc
   2db30:	movw	r1, #16754	; 0x4172
   2db34:	movw	r3, #21227	; 0x52eb
   2db38:	movw	r2, #342	; 0x156
   2db3c:	movt	r0, #4
   2db40:	movt	r1, #4
   2db44:	movt	r3, #4
   2db48:	bl	14f40 <__assert_fail@plt>

0002db4c <flatcc_builder_create_table@@Base>:
   2db4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2db50:	add	fp, sp, #24
   2db54:	sub	sp, sp, #80	; 0x50
   2db58:	ldr	r5, [fp, #12]
   2db5c:	cmn	r5, #1
   2db60:	ble	2dcac <flatcc_builder_create_table@@Base+0x160>
   2db64:	ldr	ip, [fp, #16]
   2db68:	tst	ip, #1
   2db6c:	beq	2dcc4 <flatcc_builder_create_table@@Base+0x178>
   2db70:	mov	r8, r0
   2db74:	ldrh	r0, [r0, #128]	; 0x80
   2db78:	cmp	r3, #4
   2db7c:	movls	r3, #4
   2db80:	cmp	r0, r3
   2db84:	strhcc	r3, [r8, #128]	; 0x80
   2db88:	cmp	r5, #1
   2db8c:	ldr	r0, [r8, #136]	; 0x88
   2db90:	sub	r4, r0, r2
   2db94:	sub	r0, r3, #1
   2db98:	and	r0, r4, r0
   2db9c:	sub	r4, r4, #4
   2dba0:	add	r3, ip, r0
   2dba4:	sub	r3, r4, r3
   2dba8:	add	r3, r3, #1
   2dbac:	str	r3, [fp, #-28]	; 0xffffffe4
   2dbb0:	blt	2dbe0 <flatcc_builder_create_table@@Base+0x94>
   2dbb4:	ldr	r3, [fp, #8]
   2dbb8:	sub	ip, r4, r0
   2dbbc:	mvn	r4, #3
   2dbc0:	sub	r4, r4, ip
   2dbc4:	ldrh	r6, [r3], #2
   2dbc8:	subs	r5, r5, #1
   2dbcc:	ldr	r7, [r6, r1]
   2dbd0:	add	r7, r4, r7
   2dbd4:	sub	r7, r7, r6
   2dbd8:	str	r7, [r6, r1]
   2dbdc:	bne	2dbc4 <flatcc_builder_create_table@@Base+0x78>
   2dbe0:	mov	r4, #4
   2dbe4:	sub	r3, fp, #28
   2dbe8:	cmp	r2, #0
   2dbec:	str	r4, [sp, #16]
   2dbf0:	str	r3, [sp, #12]
   2dbf4:	mov	r3, #1
   2dbf8:	str	r4, [sp, #4]
   2dbfc:	addne	r4, r2, #4
   2dc00:	str	r3, [sp, #8]
   2dc04:	movne	r3, #2
   2dc08:	strne	r2, [sp, #24]
   2dc0c:	strne	r1, [sp, #20]
   2dc10:	strne	r3, [sp, #8]
   2dc14:	strne	r4, [sp, #4]
   2dc18:	cmp	r0, #0
   2dc1c:	beq	2dc48 <flatcc_builder_create_table@@Base+0xfc>
   2dc20:	add	r1, sp, #4
   2dc24:	movw	r2, #16224	; 0x3f60
   2dc28:	add	r4, r4, r0
   2dc2c:	add	r1, r1, r3, lsl #3
   2dc30:	movt	r2, #4
   2dc34:	add	r3, r3, #1
   2dc38:	str	r4, [sp, #4]
   2dc3c:	str	r2, [r1, #8]
   2dc40:	str	r0, [r1, #12]
   2dc44:	str	r3, [sp, #8]
   2dc48:	cmp	r4, #0
   2dc4c:	ble	2dce4 <flatcc_builder_create_table@@Base+0x198>
   2dc50:	ldr	r0, [r8, #136]	; 0x88
   2dc54:	ldr	r7, [r8, #44]	; 0x2c
   2dc58:	add	r1, sp, #4
   2dc5c:	mov	r2, r3
   2dc60:	add	r1, r1, #8
   2dc64:	sub	r5, r0, r4
   2dc68:	ldr	r0, [r8, #36]	; 0x24
   2dc6c:	str	r4, [sp]
   2dc70:	mov	r3, r5
   2dc74:	blx	r7
   2dc78:	cmp	r0, #0
   2dc7c:	streq	r5, [r8, #136]	; 0x88
   2dc80:	moveq	r0, r5
   2dc84:	subeq	sp, fp, #24
   2dc88:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2dc8c:	movw	r0, #21272	; 0x5318
   2dc90:	movw	r1, #16754	; 0x4172
   2dc94:	movw	r3, #20951	; 0x51d7
   2dc98:	movw	r2, #651	; 0x28b
   2dc9c:	movt	r0, #4
   2dca0:	movt	r1, #4
   2dca4:	movt	r3, #4
   2dca8:	bl	14f40 <__assert_fail@plt>
   2dcac:	movw	r0, #18638	; 0x48ce
   2dcb0:	movw	r1, #16754	; 0x4172
   2dcb4:	movw	r3, #18656	; 0x48e0
   2dcb8:	movw	r2, #1237	; 0x4d5
   2dcbc:	movt	r0, #4
   2dcc0:	b	2dcd8 <flatcc_builder_create_table@@Base+0x18c>
   2dcc4:	movw	r0, #18812	; 0x497c
   2dcc8:	movw	r1, #16754	; 0x4172
   2dccc:	movw	r3, #18656	; 0x48e0
   2dcd0:	movw	r2, #1243	; 0x4db
   2dcd4:	movt	r0, #4
   2dcd8:	movt	r1, #4
   2dcdc:	movt	r3, #4
   2dce0:	bl	14f40 <__assert_fail@plt>
   2dce4:	movw	r0, #21272	; 0x5318
   2dce8:	movw	r1, #16754	; 0x4172
   2dcec:	movw	r3, #20951	; 0x51d7
   2dcf0:	movw	r2, #647	; 0x287
   2dcf4:	b	2dc9c <flatcc_builder_create_table@@Base+0x150>

0002dcf8 <flatcc_builder_check_required_field@@Base>:
   2dcf8:	push	{fp, lr}
   2dcfc:	mov	fp, sp
   2dd00:	ldr	r2, [r0, #32]
   2dd04:	ldrh	r2, [r2, #14]
   2dd08:	cmp	r2, #3
   2dd0c:	bne	2dd3c <flatcc_builder_check_required_field@@Base+0x44>
   2dd10:	ldrh	r3, [r0, #8]
   2dd14:	mov	r2, #0
   2dd18:	cmp	r3, r1
   2dd1c:	bls	2dd34 <flatcc_builder_check_required_field@@Base+0x3c>
   2dd20:	ldr	r0, [r0, #4]
   2dd24:	add	r0, r0, r1, lsl #1
   2dd28:	ldrh	r2, [r0]
   2dd2c:	cmp	r2, #0
   2dd30:	movwne	r2, #1
   2dd34:	mov	r0, r2
   2dd38:	pop	{fp, pc}
   2dd3c:	movw	r0, #18823	; 0x4987
   2dd40:	movw	r1, #16754	; 0x4172
   2dd44:	movw	r3, #18866	; 0x49b2
   2dd48:	movw	r2, #1272	; 0x4f8
   2dd4c:	movt	r0, #4
   2dd50:	movt	r1, #4
   2dd54:	movt	r3, #4
   2dd58:	bl	14f40 <__assert_fail@plt>

0002dd5c <flatcc_builder_check_union_field@@Base>:
   2dd5c:	push	{fp, lr}
   2dd60:	mov	fp, sp
   2dd64:	mov	r2, r0
   2dd68:	ldr	r0, [r0, #32]
   2dd6c:	ldrh	r0, [r0, #14]
   2dd70:	cmp	r0, #3
   2dd74:	bne	2ddd4 <flatcc_builder_check_union_field@@Base+0x78>
   2dd78:	mov	r0, #0
   2dd7c:	cmp	r1, #0
   2dd80:	beq	2ddc0 <flatcc_builder_check_union_field@@Base+0x64>
   2dd84:	ldrh	r3, [r2, #8]
   2dd88:	cmp	r3, r1
   2dd8c:	popls	{fp, pc}
   2dd90:	ldr	r0, [r2, #4]
   2dd94:	add	r0, r0, r1, lsl #1
   2dd98:	ldrh	r1, [r0, #-2]
   2dd9c:	cmp	r1, #0
   2dda0:	beq	2ddc4 <flatcc_builder_check_union_field@@Base+0x68>
   2dda4:	ldr	r2, [r2, #16]
   2dda8:	ldrh	r0, [r0]
   2ddac:	ldrb	r1, [r2, r1]
   2ddb0:	cmp	r1, #0
   2ddb4:	beq	2ddc8 <flatcc_builder_check_union_field@@Base+0x6c>
   2ddb8:	cmp	r0, #0
   2ddbc:	movwne	r0, #1
   2ddc0:	pop	{fp, pc}
   2ddc4:	ldrh	r0, [r0]
   2ddc8:	clz	r0, r0
   2ddcc:	lsr	r0, r0, #5
   2ddd0:	pop	{fp, pc}
   2ddd4:	movw	r0, #18823	; 0x4987
   2ddd8:	movw	r1, #16754	; 0x4172
   2dddc:	movw	r3, #18949	; 0x4a05
   2dde0:	movw	r2, #1279	; 0x4ff
   2dde4:	movt	r0, #4
   2dde8:	movt	r1, #4
   2ddec:	movt	r3, #4
   2ddf0:	bl	14f40 <__assert_fail@plt>

0002ddf4 <flatcc_builder_check_required@@Base>:
   2ddf4:	push	{fp, lr}
   2ddf8:	mov	fp, sp
   2ddfc:	mov	r3, r0
   2de00:	ldr	r0, [r0, #32]
   2de04:	ldrh	r0, [r0, #14]
   2de08:	cmp	r0, #3
   2de0c:	bne	2de54 <flatcc_builder_check_required@@Base+0x60>
   2de10:	ldrh	ip, [r3, #8]
   2de14:	mov	r0, #0
   2de18:	cmp	ip, r2
   2de1c:	poplt	{fp, pc}
   2de20:	cmp	r2, #1
   2de24:	blt	2de4c <flatcc_builder_check_required@@Base+0x58>
   2de28:	ldr	ip, [r3, #4]
   2de2c:	ldrh	r3, [r1]
   2de30:	add	r3, ip, r3, lsl #1
   2de34:	ldrh	r3, [r3]
   2de38:	cmp	r3, #0
   2de3c:	beq	2de50 <flatcc_builder_check_required@@Base+0x5c>
   2de40:	add	r1, r1, #2
   2de44:	subs	r2, r2, #1
   2de48:	bne	2de2c <flatcc_builder_check_required@@Base+0x38>
   2de4c:	mov	r0, #1
   2de50:	pop	{fp, pc}
   2de54:	movw	r0, #18823	; 0x4987
   2de58:	movw	r1, #16754	; 0x4172
   2de5c:	movw	r3, #19029	; 0x4a55
   2de60:	movw	r2, #1297	; 0x511
   2de64:	movt	r0, #4
   2de68:	movt	r1, #4
   2de6c:	movt	r3, #4
   2de70:	bl	14f40 <__assert_fail@plt>

0002de74 <flatcc_builder_end_table@@Base>:
   2de74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2de78:	add	fp, sp, #24
   2de7c:	sub	sp, sp, #16
   2de80:	mov	r4, r0
   2de84:	ldr	r0, [r0, #32]
   2de88:	ldrh	r0, [r0, #14]
   2de8c:	cmp	r0, #3
   2de90:	bne	2e00c <flatcc_builder_end_table@@Base+0x198>
   2de94:	ldrh	r0, [r4, #8]
   2de98:	ldr	r5, [r4, #4]
   2de9c:	mov	r1, #4
   2dea0:	movw	r2, #31153	; 0x79b1
   2dea4:	movt	r2, #40503	; 0x9e37
   2dea8:	add	r0, r1, r0, lsl #1
   2deac:	strh	r0, [r5, #-4]!
   2deb0:	ldrh	r1, [r4, #20]
   2deb4:	uxth	r6, r0
   2deb8:	add	r1, r1, #4
   2debc:	strh	r1, [r5, #2]
   2dec0:	uxth	r1, r1
   2dec4:	ldr	r0, [r4, #12]
   2dec8:	eor	r0, r0, r6
   2decc:	mul	r0, r0, r2
   2ded0:	eor	r0, r0, r1
   2ded4:	mov	r1, r5
   2ded8:	mul	r3, r0, r2
   2dedc:	mov	r0, r4
   2dee0:	mov	r2, r6
   2dee4:	str	r3, [r4, #12]
   2dee8:	bl	2d7e8 <flatcc_builder_create_cached_vtable@@Base>
   2deec:	cmp	r0, #0
   2def0:	beq	2dffc <flatcc_builder_end_table@@Base+0x188>
   2def4:	mov	r7, r0
   2def8:	mov	r0, r5
   2defc:	mov	r1, #0
   2df00:	mov	r2, r6
   2df04:	mov	r8, #0
   2df08:	bl	14eec <memset@plt>
   2df0c:	ldr	r5, [r4, #32]
   2df10:	ldr	r0, [r4, #76]	; 0x4c
   2df14:	ldr	r6, [r4]
   2df18:	ldrh	r3, [r4, #130]	; 0x82
   2df1c:	ldr	r1, [r4, #16]
   2df20:	ldr	r2, [r4, #20]
   2df24:	ldr	r5, [r5, #20]
   2df28:	add	r0, r0, r5
   2df2c:	sub	r6, r6, r0
   2df30:	asr	r6, r6, #1
   2df34:	stm	sp, {r0, r6, r7}
   2df38:	mov	r0, r4
   2df3c:	bl	2db4c <flatcc_builder_create_table@@Base>
   2df40:	cmp	r0, #0
   2df44:	beq	2e000 <flatcc_builder_end_table@@Base+0x18c>
   2df48:	ldr	r1, [r4, #32]
   2df4c:	mov	r5, r0
   2df50:	ldr	r0, [r4, #16]
   2df54:	ldr	r2, [r4, #20]
   2df58:	ldr	r3, [r4, #52]	; 0x34
   2df5c:	ldr	r7, [r1, #24]
   2df60:	str	r7, [r4, #12]
   2df64:	ldrh	r7, [r1, #28]
   2df68:	strh	r7, [r4, #8]
   2df6c:	ldr	r7, [r1, #16]
   2df70:	add	r3, r3, r7
   2df74:	str	r3, [r4, #4]
   2df78:	ldr	r3, [r4, #76]	; 0x4c
   2df7c:	ldr	r1, [r1, #20]
   2df80:	add	r1, r3, r1
   2df84:	str	r1, [r4]
   2df88:	mov	r1, #0
   2df8c:	bl	14eec <memset@plt>
   2df90:	ldr	r0, [r4, #32]
   2df94:	ldr	r1, [r4, #60]	; 0x3c
   2df98:	ldr	r2, [r4, #64]	; 0x40
   2df9c:	mov	r8, r5
   2dfa0:	ldr	r3, [r0, #8]
   2dfa4:	str	r3, [r4, #20]
   2dfa8:	ldr	r3, [r0]
   2dfac:	str	r3, [r4, #28]
   2dfb0:	add	r1, r1, r3
   2dfb4:	ldr	r7, [r0, #4]
   2dfb8:	str	r1, [r4, #16]
   2dfbc:	sub	r1, r2, r3
   2dfc0:	cmp	r1, r7
   2dfc4:	movhi	r1, r7
   2dfc8:	str	r1, [r4, #24]
   2dfcc:	ldrh	r1, [r4, #130]	; 0x82
   2dfd0:	ldrh	r2, [r4, #128]	; 0x80
   2dfd4:	cmp	r2, r1
   2dfd8:	strhcc	r1, [r4, #128]	; 0x80
   2dfdc:	ldrh	r1, [r0, #12]
   2dfe0:	sub	r0, r0, #36	; 0x24
   2dfe4:	str	r0, [r4, #32]
   2dfe8:	strh	r1, [r4, #130]	; 0x82
   2dfec:	ldr	r0, [r4, #156]	; 0x9c
   2dff0:	sub	r0, r0, #1
   2dff4:	str	r0, [r4, #156]	; 0x9c
   2dff8:	b	2e000 <flatcc_builder_end_table@@Base+0x18c>
   2dffc:	mov	r8, #0
   2e000:	mov	r0, r8
   2e004:	sub	sp, fp, #24
   2e008:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e00c:	movw	r0, #18823	; 0x4987
   2e010:	movw	r1, #16754	; 0x4172
   2e014:	movw	r3, #19119	; 0x4aaf
   2e018:	movw	r2, #1317	; 0x525
   2e01c:	movt	r0, #4
   2e020:	movt	r1, #4
   2e024:	movt	r3, #4
   2e028:	bl	14f40 <__assert_fail@plt>

0002e02c <flatcc_builder_create_vector@@Base>:
   2e02c:	push	{r4, r5, r6, r7, fp, lr}
   2e030:	add	fp, sp, #16
   2e034:	sub	sp, sp, #80	; 0x50
   2e038:	mov	r7, r0
   2e03c:	ldr	r0, [fp, #12]
   2e040:	cmp	r2, r0
   2e044:	bhi	2e140 <flatcc_builder_create_vector@@Base+0x114>
   2e048:	ldr	r0, [fp, #8]
   2e04c:	mov	r4, r2
   2e050:	ldrh	r2, [r7, #128]	; 0x80
   2e054:	mov	r5, #4
   2e058:	cmp	r0, #4
   2e05c:	movls	r0, r5
   2e060:	cmp	r2, r0
   2e064:	sub	r2, fp, #20
   2e068:	strhcc	r0, [r7, #128]	; 0x80
   2e06c:	str	r4, [fp, #-20]	; 0xffffffec
   2e070:	sub	r0, r0, #1
   2e074:	ldr	ip, [r7, #136]	; 0x88
   2e078:	str	r5, [sp, #16]
   2e07c:	str	r2, [sp, #12]
   2e080:	mov	r2, #1
   2e084:	str	r5, [sp, #4]
   2e088:	str	r2, [sp, #8]
   2e08c:	mls	r6, r3, r4, ip
   2e090:	mul	r3, r3, r4
   2e094:	cmp	r3, #0
   2e098:	and	r0, r6, r0
   2e09c:	movne	r2, #2
   2e0a0:	addne	r5, r3, #4
   2e0a4:	strne	r3, [sp, #24]
   2e0a8:	strne	r1, [sp, #20]
   2e0ac:	strne	r2, [sp, #8]
   2e0b0:	strne	r5, [sp, #4]
   2e0b4:	cmp	r0, #0
   2e0b8:	beq	2e0e4 <flatcc_builder_create_vector@@Base+0xb8>
   2e0bc:	add	r1, sp, #4
   2e0c0:	movw	r3, #16224	; 0x3f60
   2e0c4:	add	r5, r5, r0
   2e0c8:	add	r1, r1, r2, lsl #3
   2e0cc:	movt	r3, #4
   2e0d0:	add	r2, r2, #1
   2e0d4:	str	r5, [sp, #4]
   2e0d8:	str	r3, [r1, #8]
   2e0dc:	str	r0, [r1, #12]
   2e0e0:	str	r2, [sp, #8]
   2e0e4:	cmp	r5, #0
   2e0e8:	ble	2e160 <flatcc_builder_create_vector@@Base+0x134>
   2e0ec:	ldr	r0, [r7, #36]	; 0x24
   2e0f0:	ldr	r6, [r7, #44]	; 0x2c
   2e0f4:	add	r1, sp, #4
   2e0f8:	sub	r4, ip, r5
   2e0fc:	str	r5, [sp]
   2e100:	add	r1, r1, #8
   2e104:	mov	r3, r4
   2e108:	blx	r6
   2e10c:	cmp	r0, #0
   2e110:	streq	r4, [r7, #136]	; 0x88
   2e114:	moveq	r0, r4
   2e118:	subeq	sp, fp, #16
   2e11c:	popeq	{r4, r5, r6, r7, fp, pc}
   2e120:	movw	r0, #21272	; 0x5318
   2e124:	movw	r1, #16754	; 0x4172
   2e128:	movw	r3, #20951	; 0x51d7
   2e12c:	movw	r2, #651	; 0x28b
   2e130:	movt	r0, #4
   2e134:	movt	r1, #4
   2e138:	movt	r3, #4
   2e13c:	bl	14f40 <__assert_fail@plt>
   2e140:	movw	r0, #19185	; 0x4af1
   2e144:	movw	r1, #16754	; 0x4172
   2e148:	movw	r3, #19204	; 0x4b04
   2e14c:	movw	r2, #1365	; 0x555
   2e150:	movt	r0, #4
   2e154:	movt	r1, #4
   2e158:	movt	r3, #4
   2e15c:	bl	14f40 <__assert_fail@plt>
   2e160:	movw	r0, #21272	; 0x5318
   2e164:	movw	r1, #16754	; 0x4172
   2e168:	movw	r3, #20951	; 0x51d7
   2e16c:	movw	r2, #647	; 0x287
   2e170:	b	2e130 <flatcc_builder_create_vector@@Base+0x104>

0002e174 <flatcc_builder_end_vector@@Base>:
   2e174:	push	{r4, r5, fp, lr}
   2e178:	add	fp, sp, #8
   2e17c:	sub	sp, sp, #8
   2e180:	mov	r4, r0
   2e184:	ldr	r0, [r0, #32]
   2e188:	ldrh	r1, [r0, #14]
   2e18c:	cmp	r1, #4
   2e190:	bne	2e244 <flatcc_builder_end_vector@@Base+0xd0>
   2e194:	ldr	r3, [r0, #16]
   2e198:	ldr	r2, [r0, #20]
   2e19c:	ldr	r0, [r0, #24]
   2e1a0:	ldr	r1, [r4, #16]
   2e1a4:	ldrh	r5, [r4, #130]	; 0x82
   2e1a8:	str	r0, [sp, #4]
   2e1ac:	mov	r0, r4
   2e1b0:	str	r5, [sp]
   2e1b4:	bl	2e02c <flatcc_builder_create_vector@@Base>
   2e1b8:	mov	r5, r0
   2e1bc:	cmp	r0, #0
   2e1c0:	beq	2e238 <flatcc_builder_end_vector@@Base+0xc4>
   2e1c4:	ldr	r0, [r4, #16]
   2e1c8:	ldr	r2, [r4, #20]
   2e1cc:	mov	r1, #0
   2e1d0:	bl	14eec <memset@plt>
   2e1d4:	ldr	r0, [r4, #32]
   2e1d8:	ldr	r1, [r4, #60]	; 0x3c
   2e1dc:	ldr	ip, [r4, #64]	; 0x40
   2e1e0:	ldr	r3, [r0, #8]
   2e1e4:	str	r3, [r4, #20]
   2e1e8:	ldr	r3, [r0]
   2e1ec:	str	r3, [r4, #28]
   2e1f0:	add	r1, r1, r3
   2e1f4:	ldr	r2, [r0, #4]
   2e1f8:	str	r1, [r4, #16]
   2e1fc:	sub	r1, ip, r3
   2e200:	cmp	r1, r2
   2e204:	movhi	r1, r2
   2e208:	str	r1, [r4, #24]
   2e20c:	ldrh	r1, [r4, #130]	; 0x82
   2e210:	ldrh	r2, [r4, #128]	; 0x80
   2e214:	cmp	r2, r1
   2e218:	strhcc	r1, [r4, #128]	; 0x80
   2e21c:	ldrh	r1, [r0, #12]
   2e220:	sub	r0, r0, #36	; 0x24
   2e224:	str	r0, [r4, #32]
   2e228:	strh	r1, [r4, #130]	; 0x82
   2e22c:	ldr	r0, [r4, #156]	; 0x9c
   2e230:	sub	r0, r0, #1
   2e234:	str	r0, [r4, #156]	; 0x9c
   2e238:	mov	r0, r5
   2e23c:	sub	sp, fp, #8
   2e240:	pop	{r4, r5, fp, pc}
   2e244:	movw	r0, #17557	; 0x4495
   2e248:	movw	r1, #16754	; 0x4172
   2e24c:	movw	r3, #19322	; 0x4b7a
   2e250:	movw	r2, #1400	; 0x578
   2e254:	movt	r0, #4
   2e258:	movt	r1, #4
   2e25c:	movt	r3, #4
   2e260:	bl	14f40 <__assert_fail@plt>

0002e264 <flatcc_builder_vector_count@@Base>:
   2e264:	ldr	r0, [r0, #32]
   2e268:	ldr	r0, [r0, #20]
   2e26c:	bx	lr

0002e270 <flatcc_builder_vector_edit@@Base>:
   2e270:	ldr	r0, [r0, #16]
   2e274:	bx	lr

0002e278 <flatcc_builder_create_offset_vector_direct@@Base>:
   2e278:	mov	r3, #0
   2e27c:	b	2e280 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2e280:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e284:	add	fp, sp, #24
   2e288:	sub	sp, sp, #80	; 0x50
   2e28c:	mov	r6, #0
   2e290:	cmn	r2, #-1073741823	; 0xc0000001
   2e294:	bhi	2e3d0 <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   2e298:	mov	r8, r0
   2e29c:	ldrh	r0, [r0, #128]	; 0x80
   2e2a0:	mov	r5, #4
   2e2a4:	sub	r7, fp, #28
   2e2a8:	mov	r4, #1
   2e2ac:	cmp	r0, #3
   2e2b0:	movls	r0, #4
   2e2b4:	strhls	r0, [r8, #128]	; 0x80
   2e2b8:	str	r2, [fp, #-28]	; 0xffffffe4
   2e2bc:	ldr	ip, [r8, #136]	; 0x88
   2e2c0:	str	r5, [sp, #16]
   2e2c4:	str	r7, [sp, #12]
   2e2c8:	mov	r7, #0
   2e2cc:	str	r5, [sp, #4]
   2e2d0:	str	r4, [sp, #8]
   2e2d4:	cmp	r7, r2, lsl #2
   2e2d8:	and	r6, ip, #3
   2e2dc:	beq	2e2fc <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   2e2e0:	lsl	r7, r2, #2
   2e2e4:	mov	r4, #2
   2e2e8:	add	r5, r7, #4
   2e2ec:	str	r7, [sp, #24]
   2e2f0:	str	r1, [sp, #20]
   2e2f4:	str	r4, [sp, #8]
   2e2f8:	str	r5, [sp, #4]
   2e2fc:	cmp	r6, #0
   2e300:	beq	2e32c <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   2e304:	add	r7, sp, #4
   2e308:	movw	r0, #16224	; 0x3f60
   2e30c:	add	r5, r5, r6
   2e310:	add	r7, r7, r4, lsl #3
   2e314:	movt	r0, #4
   2e318:	add	r4, r4, #1
   2e31c:	str	r5, [sp, #4]
   2e320:	str	r0, [r7, #8]
   2e324:	str	r6, [r7, #12]
   2e328:	str	r4, [sp, #8]
   2e32c:	cmp	r2, #0
   2e330:	beq	2e398 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   2e334:	sub	r0, r5, ip
   2e338:	mov	r6, r3
   2e33c:	sub	r0, r0, #4
   2e340:	ldr	r7, [r1]
   2e344:	cmp	r7, #0
   2e348:	beq	2e36c <flatcc_builder_create_offset_vector_direct@@Base+0xf4>
   2e34c:	add	r7, r0, r7
   2e350:	cmp	r3, #0
   2e354:	str	r7, [r1]
   2e358:	beq	2e380 <flatcc_builder_create_offset_vector_direct@@Base+0x108>
   2e35c:	ldrb	r7, [r6]
   2e360:	cmp	r7, #0
   2e364:	bne	2e380 <flatcc_builder_create_offset_vector_direct@@Base+0x108>
   2e368:	b	2e3dc <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   2e36c:	cmp	r3, #0
   2e370:	beq	2e40c <flatcc_builder_create_offset_vector_direct@@Base+0x194>
   2e374:	ldrb	r7, [r6]
   2e378:	cmp	r7, #0
   2e37c:	bne	2e3f4 <flatcc_builder_create_offset_vector_direct@@Base+0x17c>
   2e380:	sub	r0, r0, #4
   2e384:	add	r1, r1, #4
   2e388:	add	r6, r6, #1
   2e38c:	subs	r2, r2, #1
   2e390:	bne	2e340 <flatcc_builder_create_offset_vector_direct@@Base+0xc8>
   2e394:	ldr	ip, [r8, #136]	; 0x88
   2e398:	cmp	r5, #0
   2e39c:	ble	2e42c <flatcc_builder_create_offset_vector_direct@@Base+0x1b4>
   2e3a0:	ldr	r0, [r8, #36]	; 0x24
   2e3a4:	ldr	r7, [r8, #44]	; 0x2c
   2e3a8:	add	r1, sp, #4
   2e3ac:	sub	r6, ip, r5
   2e3b0:	mov	r2, r4
   2e3b4:	str	r5, [sp]
   2e3b8:	add	r1, r1, #8
   2e3bc:	mov	r3, r6
   2e3c0:	blx	r7
   2e3c4:	cmp	r0, #0
   2e3c8:	bne	2e440 <flatcc_builder_create_offset_vector_direct@@Base+0x1c8>
   2e3cc:	str	r6, [r8, #136]	; 0x88
   2e3d0:	mov	r0, r6
   2e3d4:	sub	sp, fp, #24
   2e3d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e3dc:	movw	r0, #21260	; 0x530c
   2e3e0:	movw	r1, #16754	; 0x4172
   2e3e4:	movw	r3, #21274	; 0x531a
   2e3e8:	movw	r2, #1457	; 0x5b1
   2e3ec:	movt	r0, #4
   2e3f0:	b	2e420 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   2e3f4:	movw	r0, #21405	; 0x539d
   2e3f8:	movw	r1, #16754	; 0x4172
   2e3fc:	movw	r3, #21274	; 0x531a
   2e400:	movw	r2, #1461	; 0x5b5
   2e404:	movt	r0, #4
   2e408:	b	2e420 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   2e40c:	movw	r0, #21272	; 0x5318
   2e410:	movw	r1, #16754	; 0x4172
   2e414:	movw	r3, #21274	; 0x531a
   2e418:	movw	r2, #1463	; 0x5b7
   2e41c:	movt	r0, #4
   2e420:	movt	r1, #4
   2e424:	movt	r3, #4
   2e428:	bl	14f40 <__assert_fail@plt>
   2e42c:	movw	r0, #21272	; 0x5318
   2e430:	movw	r1, #16754	; 0x4172
   2e434:	movw	r3, #20951	; 0x51d7
   2e438:	movw	r2, #647	; 0x287
   2e43c:	b	2e450 <flatcc_builder_create_offset_vector_direct@@Base+0x1d8>
   2e440:	movw	r0, #21272	; 0x5318
   2e444:	movw	r1, #16754	; 0x4172
   2e448:	movw	r3, #20951	; 0x51d7
   2e44c:	movw	r2, #651	; 0x28b
   2e450:	movt	r0, #4
   2e454:	movt	r1, #4
   2e458:	movt	r3, #4
   2e45c:	bl	14f40 <__assert_fail@plt>

0002e460 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2e460:	push	{r4, r5, fp, lr}
   2e464:	add	fp, sp, #8
   2e468:	mov	r4, r0
   2e46c:	ldr	r0, [r0, #32]
   2e470:	mov	r3, r1
   2e474:	ldrh	r1, [r0, #14]
   2e478:	cmp	r1, #5
   2e47c:	bne	2e518 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   2e480:	ldr	r2, [r0, #20]
   2e484:	ldr	r1, [r4, #16]
   2e488:	mov	r0, r4
   2e48c:	bl	2e280 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2e490:	mov	r5, r0
   2e494:	cmp	r0, #0
   2e498:	beq	2e510 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   2e49c:	ldr	r0, [r4, #16]
   2e4a0:	ldr	r2, [r4, #20]
   2e4a4:	mov	r1, #0
   2e4a8:	bl	14eec <memset@plt>
   2e4ac:	ldr	r0, [r4, #32]
   2e4b0:	ldr	r1, [r4, #60]	; 0x3c
   2e4b4:	ldr	ip, [r4, #64]	; 0x40
   2e4b8:	ldr	r3, [r0, #8]
   2e4bc:	str	r3, [r4, #20]
   2e4c0:	ldr	r3, [r0]
   2e4c4:	str	r3, [r4, #28]
   2e4c8:	add	r1, r1, r3
   2e4cc:	ldr	r2, [r0, #4]
   2e4d0:	str	r1, [r4, #16]
   2e4d4:	sub	r1, ip, r3
   2e4d8:	cmp	r1, r2
   2e4dc:	movhi	r1, r2
   2e4e0:	str	r1, [r4, #24]
   2e4e4:	ldrh	r1, [r4, #130]	; 0x82
   2e4e8:	ldrh	r2, [r4, #128]	; 0x80
   2e4ec:	cmp	r2, r1
   2e4f0:	strhcc	r1, [r4, #128]	; 0x80
   2e4f4:	ldrh	r1, [r0, #12]
   2e4f8:	sub	r0, r0, #36	; 0x24
   2e4fc:	str	r0, [r4, #32]
   2e500:	strh	r1, [r4, #130]	; 0x82
   2e504:	ldr	r0, [r4, #156]	; 0x9c
   2e508:	sub	r0, r0, #1
   2e50c:	str	r0, [r4, #156]	; 0x9c
   2e510:	mov	r0, r5
   2e514:	pop	{r4, r5, fp, pc}
   2e518:	movw	r0, #17806	; 0x458e
   2e51c:	movw	r1, #16754	; 0x4172
   2e520:	movw	r3, #19463	; 0x4c07
   2e524:	movw	r2, #1493	; 0x5d5
   2e528:	movt	r0, #4
   2e52c:	movt	r1, #4
   2e530:	movt	r3, #4
   2e534:	bl	14f40 <__assert_fail@plt>

0002e538 <flatcc_builder_offset_vector_edit@@Base>:
   2e538:	ldr	r0, [r0, #16]
   2e53c:	bx	lr

0002e540 <flatcc_builder_offset_vector_count@@Base>:
   2e540:	ldr	r0, [r0, #32]
   2e544:	ldr	r0, [r0, #20]
   2e548:	bx	lr

0002e54c <flatcc_builder_table_add_union@@Base>:
   2e54c:	push	{r4, r5, r6, r7, fp, lr}
   2e550:	add	fp, sp, #16
   2e554:	mov	r5, r0
   2e558:	ldr	r0, [r0, #32]
   2e55c:	ldrh	r0, [r0, #14]
   2e560:	cmp	r0, #3
   2e564:	bne	2e5ec <flatcc_builder_table_add_union@@Base+0xa0>
   2e568:	mov	r7, r3
   2e56c:	mov	r4, r2
   2e570:	mov	r6, r1
   2e574:	cmp	r3, #0
   2e578:	beq	2e588 <flatcc_builder_table_add_union@@Base+0x3c>
   2e57c:	uxtb	r0, r4
   2e580:	cmp	r0, #0
   2e584:	beq	2e604 <flatcc_builder_table_add_union@@Base+0xb8>
   2e588:	cmp	r7, #0
   2e58c:	beq	2e5a8 <flatcc_builder_table_add_union@@Base+0x5c>
   2e590:	mov	r0, r5
   2e594:	mov	r1, r6
   2e598:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   2e59c:	cmp	r0, #0
   2e5a0:	beq	2e61c <flatcc_builder_table_add_union@@Base+0xd0>
   2e5a4:	str	r7, [r0]
   2e5a8:	sub	r1, r6, #1
   2e5ac:	mov	r0, r5
   2e5b0:	mov	r2, #1
   2e5b4:	mov	r3, #1
   2e5b8:	bl	2e760 <flatcc_builder_table_add@@Base>
   2e5bc:	cmp	r0, #0
   2e5c0:	strbne	r4, [r0]
   2e5c4:	movne	r0, #0
   2e5c8:	popne	{r4, r5, r6, r7, fp, pc}
   2e5cc:	movw	r0, #19709	; 0x4cfd
   2e5d0:	movw	r1, #16754	; 0x4172
   2e5d4:	movw	r3, #19577	; 0x4c79
   2e5d8:	movw	r2, #1526	; 0x5f6
   2e5dc:	movt	r0, #4
   2e5e0:	movt	r1, #4
   2e5e4:	movt	r3, #4
   2e5e8:	bl	14f40 <__assert_fail@plt>
   2e5ec:	movw	r0, #18823	; 0x4987
   2e5f0:	movw	r1, #16754	; 0x4172
   2e5f4:	movw	r3, #19577	; 0x4c79
   2e5f8:	movw	r2, #1518	; 0x5ee
   2e5fc:	movt	r0, #4
   2e600:	b	2e5e0 <flatcc_builder_table_add_union@@Base+0x94>
   2e604:	movw	r0, #19665	; 0x4cd1
   2e608:	movw	r1, #16754	; 0x4172
   2e60c:	movw	r3, #19577	; 0x4c79
   2e610:	movw	r2, #1519	; 0x5ef
   2e614:	movt	r0, #4
   2e618:	b	2e5e0 <flatcc_builder_table_add_union@@Base+0x94>
   2e61c:	movw	r0, #19699	; 0x4cf3
   2e620:	movw	r1, #16754	; 0x4172
   2e624:	movw	r3, #19577	; 0x4c79
   2e628:	movw	r2, #1522	; 0x5f2
   2e62c:	movt	r0, #4
   2e630:	b	2e5e0 <flatcc_builder_table_add_union@@Base+0x94>

0002e634 <flatcc_builder_table_add_offset@@Base>:
   2e634:	push	{r4, r5, r6, r7, fp, lr}
   2e638:	add	fp, sp, #16
   2e63c:	mov	r4, r0
   2e640:	ldr	r0, [r0, #32]
   2e644:	ldrh	r0, [r0, #14]
   2e648:	cmp	r0, #3
   2e64c:	bne	2e710 <flatcc_builder_table_add_offset@@Base+0xdc>
   2e650:	movw	r0, #32765	; 0x7ffd
   2e654:	mov	r5, r1
   2e658:	cmp	r1, r0
   2e65c:	bcs	2e728 <flatcc_builder_table_add_offset@@Base+0xf4>
   2e660:	ldr	r0, [r4, #4]
   2e664:	add	r1, r0, r5, lsl #1
   2e668:	ldrh	r1, [r1]
   2e66c:	cmp	r1, #0
   2e670:	bne	2e740 <flatcc_builder_table_add_offset@@Base+0x10c>
   2e674:	ldr	r2, [r4, #20]
   2e678:	ldr	r1, [r4, #12]
   2e67c:	ldr	r3, [r4, #24]
   2e680:	add	r2, r2, #3
   2e684:	eor	r1, r1, r5
   2e688:	bic	r7, r2, #3
   2e68c:	movw	r2, #31153	; 0x79b1
   2e690:	movt	r2, #40503	; 0x9e37
   2e694:	add	r6, r7, #4
   2e698:	cmp	r6, r3
   2e69c:	str	r6, [r4, #20]
   2e6a0:	mul	r1, r1, r2
   2e6a4:	eor	r1, r1, #4
   2e6a8:	mul	r1, r1, r2
   2e6ac:	str	r1, [r4, #12]
   2e6b0:	bls	2e6d8 <flatcc_builder_table_add_offset@@Base+0xa4>
   2e6b4:	mov	r0, r4
   2e6b8:	mov	r1, r6
   2e6bc:	movw	r2, #65532	; 0xfffc
   2e6c0:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2e6c4:	mov	r1, r0
   2e6c8:	mov	r0, #0
   2e6cc:	cmp	r1, #0
   2e6d0:	popne	{r4, r5, r6, r7, fp, pc}
   2e6d4:	ldr	r0, [r4, #4]
   2e6d8:	uxth	r1, r5
   2e6dc:	add	r0, r0, r1, lsl #1
   2e6e0:	strh	r6, [r0]
   2e6e4:	ldrh	r0, [r4, #8]
   2e6e8:	cmp	r0, r1
   2e6ec:	addls	r0, r5, #1
   2e6f0:	strhls	r0, [r4, #8]
   2e6f4:	ldr	r0, [r4]
   2e6f8:	add	r1, r0, #2
   2e6fc:	str	r1, [r4]
   2e700:	strh	r7, [r0]
   2e704:	ldr	r0, [r4, #16]
   2e708:	add	r0, r0, r7
   2e70c:	pop	{r4, r5, r6, r7, fp, pc}
   2e710:	movw	r0, #18823	; 0x4987
   2e714:	movw	r1, #16754	; 0x4172
   2e718:	movw	r3, #20603	; 0x507b
   2e71c:	movw	r2, #1811	; 0x713
   2e720:	movt	r0, #4
   2e724:	b	2e754 <flatcc_builder_table_add_offset@@Base+0x120>
   2e728:	movw	r0, #20475	; 0x4ffb
   2e72c:	movw	r1, #16754	; 0x4172
   2e730:	movw	r3, #20603	; 0x507b
   2e734:	movw	r2, #1812	; 0x714
   2e738:	movt	r0, #4
   2e73c:	b	2e754 <flatcc_builder_table_add_offset@@Base+0x120>
   2e740:	movw	r0, #21272	; 0x5318
   2e744:	movw	r1, #16754	; 0x4172
   2e748:	movw	r3, #20603	; 0x507b
   2e74c:	movw	r2, #1819	; 0x71b
   2e750:	movt	r0, #4
   2e754:	movt	r1, #4
   2e758:	movt	r3, #4
   2e75c:	bl	14f40 <__assert_fail@plt>

0002e760 <flatcc_builder_table_add@@Base>:
   2e760:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e764:	add	fp, sp, #24
   2e768:	mov	r4, r0
   2e76c:	ldr	r0, [r0, #32]
   2e770:	ldrh	r0, [r0, #14]
   2e774:	cmp	r0, #3
   2e778:	bne	2e848 <flatcc_builder_table_add@@Base+0xe8>
   2e77c:	movw	r0, #32765	; 0x7ffd
   2e780:	mov	r8, r1
   2e784:	cmp	r1, r0
   2e788:	bcs	2e860 <flatcc_builder_table_add@@Base+0x100>
   2e78c:	ldrh	r0, [r4, #130]	; 0x82
   2e790:	cmp	r0, r3
   2e794:	strhcc	r3, [r4, #130]	; 0x82
   2e798:	ldr	r0, [r4, #4]
   2e79c:	add	r1, r0, r8, lsl #1
   2e7a0:	ldrh	r1, [r1]
   2e7a4:	cmp	r1, #0
   2e7a8:	bne	2e878 <flatcc_builder_table_add@@Base+0x118>
   2e7ac:	ldr	r1, [r4, #12]
   2e7b0:	movw	r7, #31153	; 0x79b1
   2e7b4:	ldr	r6, [r4, #20]
   2e7b8:	ldr	r5, [r4, #24]
   2e7bc:	movt	r7, #40503	; 0x9e37
   2e7c0:	eor	r1, r1, r8
   2e7c4:	mul	r1, r1, r7
   2e7c8:	eor	r1, r1, r2
   2e7cc:	mul	r1, r1, r7
   2e7d0:	str	r1, [r4, #12]
   2e7d4:	add	r1, r3, r6
   2e7d8:	rsb	r3, r3, #0
   2e7dc:	sub	r1, r1, #1
   2e7e0:	and	r6, r1, r3
   2e7e4:	add	r1, r6, r2
   2e7e8:	cmp	r1, r5
   2e7ec:	str	r1, [r4, #20]
   2e7f0:	bcc	2e81c <flatcc_builder_table_add@@Base+0xbc>
   2e7f4:	add	r1, r1, #1
   2e7f8:	mov	r0, r4
   2e7fc:	movw	r2, #65532	; 0xfffc
   2e800:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2e804:	mov	r1, r0
   2e808:	mov	r0, #0
   2e80c:	cmp	r1, #0
   2e810:	beq	2e818 <flatcc_builder_table_add@@Base+0xb8>
   2e814:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e818:	ldr	r0, [r4, #4]
   2e81c:	uxth	r1, r8
   2e820:	add	r2, r6, #4
   2e824:	add	r0, r0, r1, lsl #1
   2e828:	strh	r2, [r0]
   2e82c:	ldrh	r0, [r4, #8]
   2e830:	cmp	r0, r1
   2e834:	addls	r0, r8, #1
   2e838:	strhls	r0, [r4, #8]
   2e83c:	ldr	r0, [r4, #16]
   2e840:	add	r0, r0, r6
   2e844:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e848:	movw	r0, #18823	; 0x4987
   2e84c:	movw	r1, #16754	; 0x4172
   2e850:	movw	r3, #20401	; 0x4fb1
   2e854:	movw	r2, #1773	; 0x6ed
   2e858:	movt	r0, #4
   2e85c:	b	2e88c <flatcc_builder_table_add@@Base+0x12c>
   2e860:	movw	r0, #20475	; 0x4ffb
   2e864:	movw	r1, #16754	; 0x4172
   2e868:	movw	r3, #20401	; 0x4fb1
   2e86c:	movw	r2, #1774	; 0x6ee
   2e870:	movt	r0, #4
   2e874:	b	2e88c <flatcc_builder_table_add@@Base+0x12c>
   2e878:	movw	r0, #21272	; 0x5318
   2e87c:	movw	r1, #16754	; 0x4172
   2e880:	movw	r3, #20401	; 0x4fb1
   2e884:	movw	r2, #1784	; 0x6f8
   2e888:	movt	r0, #4
   2e88c:	movt	r1, #4
   2e890:	movt	r3, #4
   2e894:	bl	14f40 <__assert_fail@plt>

0002e898 <flatcc_builder_table_add_union_vector@@Base>:
   2e898:	push	{r4, r5, r6, r7, fp, lr}
   2e89c:	add	fp, sp, #16
   2e8a0:	mov	r6, r0
   2e8a4:	ldr	r0, [r0, #32]
   2e8a8:	ldrh	r0, [r0, #14]
   2e8ac:	cmp	r0, #3
   2e8b0:	bne	2e91c <flatcc_builder_table_add_union_vector@@Base+0x84>
   2e8b4:	mov	r5, r1
   2e8b8:	clz	r1, r3
   2e8bc:	cmp	r2, #0
   2e8c0:	mov	r0, r2
   2e8c4:	mov	r4, r3
   2e8c8:	mov	r7, r2
   2e8cc:	movwne	r0, #1
   2e8d0:	lsr	r1, r1, #5
   2e8d4:	teq	r1, r0
   2e8d8:	beq	2e934 <flatcc_builder_table_add_union_vector@@Base+0x9c>
   2e8dc:	cmp	r7, #0
   2e8e0:	beq	2e914 <flatcc_builder_table_add_union_vector@@Base+0x7c>
   2e8e4:	sub	r1, r5, #1
   2e8e8:	mov	r0, r6
   2e8ec:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   2e8f0:	cmp	r0, #0
   2e8f4:	beq	2e94c <flatcc_builder_table_add_union_vector@@Base+0xb4>
   2e8f8:	str	r7, [r0]
   2e8fc:	mov	r0, r6
   2e900:	mov	r1, r5
   2e904:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   2e908:	cmp	r0, #0
   2e90c:	beq	2e960 <flatcc_builder_table_add_union_vector@@Base+0xc8>
   2e910:	str	r4, [r0]
   2e914:	mov	r0, #0
   2e918:	pop	{r4, r5, r6, r7, fp, pc}
   2e91c:	movw	r0, #18823	; 0x4987
   2e920:	movw	r1, #16754	; 0x4172
   2e924:	movw	r3, #19721	; 0x4d09
   2e928:	mov	r2, #1536	; 0x600
   2e92c:	movt	r0, #4
   2e930:	b	2e974 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2e934:	movw	r0, #19820	; 0x4d6c
   2e938:	movw	r1, #16754	; 0x4172
   2e93c:	movw	r3, #19721	; 0x4d09
   2e940:	movw	r2, #1537	; 0x601
   2e944:	movt	r0, #4
   2e948:	b	2e974 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2e94c:	movw	r0, #19699	; 0x4cf3
   2e950:	movw	r1, #16754	; 0x4172
   2e954:	movw	r3, #19721	; 0x4d09
   2e958:	movw	r2, #1540	; 0x604
   2e95c:	b	2e970 <flatcc_builder_table_add_union_vector@@Base+0xd8>
   2e960:	movw	r0, #19699	; 0x4cf3
   2e964:	movw	r1, #16754	; 0x4172
   2e968:	movw	r3, #19721	; 0x4d09
   2e96c:	movw	r2, #1544	; 0x608
   2e970:	movt	r0, #4
   2e974:	movt	r1, #4
   2e978:	movt	r3, #4
   2e97c:	bl	14f40 <__assert_fail@plt>

0002e980 <flatcc_builder_create_union_vector@@Base>:
   2e980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e984:	add	fp, sp, #28
   2e988:	sub	sp, sp, #20
   2e98c:	mov	sl, r0
   2e990:	mov	r0, #0
   2e994:	mov	r9, r3
   2e998:	mov	r7, r2
   2e99c:	mov	r4, r1
   2e9a0:	str	r0, [sl]
   2e9a4:	str	r0, [sl, #4]
   2e9a8:	mov	r0, r1
   2e9ac:	bl	2d1d4 <flatcc_builder_start_offset_vector@@Base>
   2e9b0:	cmp	r0, #0
   2e9b4:	beq	2e9c0 <flatcc_builder_create_union_vector@@Base+0x40>
   2e9b8:	sub	sp, fp, #28
   2e9bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e9c0:	mov	r0, r4
   2e9c4:	mov	r1, r9
   2e9c8:	bl	2cba8 <flatcc_builder_extend_offset_vector@@Base>
   2e9cc:	cmp	r0, #0
   2e9d0:	beq	2e9b8 <flatcc_builder_create_union_vector@@Base+0x38>
   2e9d4:	ldr	r8, [r4, #20]
   2e9d8:	ldr	r1, [r4, #24]
   2e9dc:	add	r0, r8, r9
   2e9e0:	cmp	r0, r1
   2e9e4:	str	r0, [r4, #20]
   2e9e8:	bcc	2ea04 <flatcc_builder_create_union_vector@@Base+0x84>
   2e9ec:	add	r1, r0, #1
   2e9f0:	mov	r0, r4
   2e9f4:	mvn	r2, #3
   2e9f8:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2e9fc:	cmp	r0, #0
   2ea00:	bne	2e9b8 <flatcc_builder_create_union_vector@@Base+0x38>
   2ea04:	ldr	r3, [r4, #16]
   2ea08:	adds	r2, r3, r8
   2ea0c:	beq	2e9b8 <flatcc_builder_create_union_vector@@Base+0x38>
   2ea10:	cmp	r9, #0
   2ea14:	beq	2ea44 <flatcc_builder_create_union_vector@@Base+0xc4>
   2ea18:	add	r0, r7, #4
   2ea1c:	mov	r1, r2
   2ea20:	mov	r7, r3
   2ea24:	mov	r6, r9
   2ea28:	ldrb	r5, [r0, #-4]
   2ea2c:	subs	r6, r6, #1
   2ea30:	strb	r5, [r1], #1
   2ea34:	ldr	r5, [r0]
   2ea38:	add	r0, r0, #8
   2ea3c:	str	r5, [r7], #4
   2ea40:	bne	2ea28 <flatcc_builder_create_union_vector@@Base+0xa8>
   2ea44:	add	r0, sp, #8
   2ea48:	mov	r1, r4
   2ea4c:	str	r9, [sp]
   2ea50:	bl	2ead8 <flatcc_builder_create_union_vector_direct@@Base>
   2ea54:	ldr	r0, [sp, #8]
   2ea58:	ldr	r1, [sp, #12]
   2ea5c:	stm	sl, {r0, r1}
   2ea60:	mov	r1, #0
   2ea64:	ldr	r0, [r4, #16]
   2ea68:	ldr	r2, [r4, #20]
   2ea6c:	bl	14eec <memset@plt>
   2ea70:	ldr	r0, [r4, #32]
   2ea74:	ldr	r1, [r4, #60]	; 0x3c
   2ea78:	ldr	r2, [r4, #64]	; 0x40
   2ea7c:	ldr	r3, [r0, #8]
   2ea80:	str	r3, [r4, #20]
   2ea84:	ldr	r3, [r0]
   2ea88:	str	r3, [r4, #28]
   2ea8c:	add	r1, r1, r3
   2ea90:	ldr	r7, [r0, #4]
   2ea94:	str	r1, [r4, #16]
   2ea98:	sub	r1, r2, r3
   2ea9c:	cmp	r1, r7
   2eaa0:	movhi	r1, r7
   2eaa4:	str	r1, [r4, #24]
   2eaa8:	ldrh	r1, [r4, #130]	; 0x82
   2eaac:	ldrh	r2, [r4, #128]	; 0x80
   2eab0:	cmp	r2, r1
   2eab4:	strhcc	r1, [r4, #128]	; 0x80
   2eab8:	ldrh	r1, [r0, #12]
   2eabc:	sub	r0, r0, #36	; 0x24
   2eac0:	str	r0, [r4, #32]
   2eac4:	strh	r1, [r4, #130]	; 0x82
   2eac8:	ldr	r0, [r4, #156]	; 0x9c
   2eacc:	sub	r0, r0, #1
   2ead0:	str	r0, [r4, #156]	; 0x9c
   2ead4:	b	2e9b8 <flatcc_builder_create_union_vector@@Base+0x38>

0002ead8 <flatcc_builder_create_union_vector_direct@@Base>:
   2ead8:	push	{r4, r5, r6, r7, fp, lr}
   2eadc:	add	fp, sp, #16
   2eae0:	sub	sp, sp, #8
   2eae4:	ldr	r7, [fp, #8]
   2eae8:	mov	r5, r2
   2eaec:	mov	r4, r0
   2eaf0:	mov	r0, #0
   2eaf4:	mov	r6, r1
   2eaf8:	str	r0, [r4]
   2eafc:	str	r0, [r4, #4]
   2eb00:	mov	r0, r1
   2eb04:	mov	r1, r3
   2eb08:	mov	r3, r5
   2eb0c:	mov	r2, r7
   2eb10:	bl	2e280 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2eb14:	cmp	r0, #0
   2eb18:	str	r0, [r4, #4]
   2eb1c:	beq	2eb48 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   2eb20:	mvn	r0, #0
   2eb24:	mov	r1, #1
   2eb28:	mov	r2, r7
   2eb2c:	mov	r3, #1
   2eb30:	str	r1, [sp]
   2eb34:	str	r0, [sp, #4]
   2eb38:	mov	r0, r6
   2eb3c:	mov	r1, r5
   2eb40:	bl	2e02c <flatcc_builder_create_vector@@Base>
   2eb44:	str	r0, [r4]
   2eb48:	sub	sp, fp, #16
   2eb4c:	pop	{r4, r5, r6, r7, fp, pc}

0002eb50 <flatcc_builder_start_union_vector@@Base>:
   2eb50:	push	{r4, sl, fp, lr}
   2eb54:	add	fp, sp, #8
   2eb58:	mov	r1, #4
   2eb5c:	mov	r4, r0
   2eb60:	bl	2c574 <flatcc_builder_start_buffer@@Base+0xbc>
   2eb64:	mov	r1, r0
   2eb68:	mvn	r0, #0
   2eb6c:	cmp	r1, #0
   2eb70:	popne	{r4, sl, fp, pc}
   2eb74:	ldr	r0, [r4, #32]
   2eb78:	mov	r1, #8
   2eb7c:	mov	r2, #7
   2eb80:	str	r1, [r0, #16]
   2eb84:	mov	r0, #0
   2eb88:	ldr	r1, [r4, #32]
   2eb8c:	str	r0, [r1, #20]
   2eb90:	ldr	r1, [r4, #32]
   2eb94:	strh	r2, [r1, #14]
   2eb98:	ldr	r2, [r4, #28]
   2eb9c:	ldr	r3, [r4, #60]	; 0x3c
   2eba0:	ldr	ip, [r4, #64]	; 0x40
   2eba4:	add	r3, r3, r2
   2eba8:	sub	r2, ip, r2
   2ebac:	str	r3, [r4, #16]
   2ebb0:	mvn	r3, #3
   2ebb4:	cmn	r2, #4
   2ebb8:	movcs	r2, r3
   2ebbc:	str	r2, [r4, #24]
   2ebc0:	str	r3, [r1, #4]
   2ebc4:	pop	{r4, sl, fp, pc}

0002ebc8 <flatcc_builder_end_union_vector@@Base>:
   2ebc8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2ebcc:	add	fp, sp, #24
   2ebd0:	sub	sp, sp, #16
   2ebd4:	mov	r8, r0
   2ebd8:	mov	r0, #0
   2ebdc:	mov	r4, r1
   2ebe0:	str	r0, [r8]
   2ebe4:	str	r0, [r8, #4]
   2ebe8:	ldr	r0, [r1, #32]
   2ebec:	ldrh	r1, [r0, #14]
   2ebf0:	cmp	r1, #7
   2ebf4:	bne	2ed0c <flatcc_builder_end_union_vector@@Base+0x144>
   2ebf8:	ldr	r9, [r0, #20]
   2ebfc:	ldr	r7, [r4, #20]
   2ec00:	ldr	r1, [r4, #24]
   2ec04:	add	r0, r9, r9, lsl #2
   2ec08:	add	r0, r7, r0
   2ec0c:	cmp	r0, r1
   2ec10:	str	r0, [r4, #20]
   2ec14:	bcc	2ec30 <flatcc_builder_end_union_vector@@Base+0x68>
   2ec18:	add	r1, r0, #1
   2ec1c:	mov	r0, r4
   2ec20:	mvn	r2, #3
   2ec24:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2ec28:	cmp	r0, #0
   2ec2c:	bne	2ed04 <flatcc_builder_end_union_vector@@Base+0x13c>
   2ec30:	ldr	r0, [r4, #16]
   2ec34:	adds	r3, r0, r7
   2ec38:	beq	2ed04 <flatcc_builder_end_union_vector@@Base+0x13c>
   2ec3c:	add	r2, r3, r9, lsl #2
   2ec40:	cmp	r9, #0
   2ec44:	beq	2ec74 <flatcc_builder_end_union_vector@@Base+0xac>
   2ec48:	add	r0, r0, #4
   2ec4c:	mov	r1, r2
   2ec50:	mov	r7, r3
   2ec54:	mov	r6, r9
   2ec58:	ldrb	r5, [r0, #-4]
   2ec5c:	subs	r6, r6, #1
   2ec60:	strb	r5, [r1], #1
   2ec64:	ldr	r5, [r0]
   2ec68:	add	r0, r0, #8
   2ec6c:	str	r5, [r7], #4
   2ec70:	bne	2ec58 <flatcc_builder_end_union_vector@@Base+0x90>
   2ec74:	add	r0, sp, #8
   2ec78:	mov	r1, r4
   2ec7c:	str	r9, [sp]
   2ec80:	bl	2ead8 <flatcc_builder_create_union_vector_direct@@Base>
   2ec84:	ldr	r0, [sp, #8]
   2ec88:	ldr	r1, [sp, #12]
   2ec8c:	stm	r8, {r0, r1}
   2ec90:	mov	r1, #0
   2ec94:	ldr	r0, [r4, #16]
   2ec98:	ldr	r2, [r4, #20]
   2ec9c:	bl	14eec <memset@plt>
   2eca0:	ldr	r0, [r4, #32]
   2eca4:	ldr	r1, [r4, #60]	; 0x3c
   2eca8:	ldr	r2, [r4, #64]	; 0x40
   2ecac:	ldr	r3, [r0, #8]
   2ecb0:	str	r3, [r4, #20]
   2ecb4:	ldr	r3, [r0]
   2ecb8:	str	r3, [r4, #28]
   2ecbc:	add	r1, r1, r3
   2ecc0:	ldr	r7, [r0, #4]
   2ecc4:	str	r1, [r4, #16]
   2ecc8:	sub	r1, r2, r3
   2eccc:	cmp	r1, r7
   2ecd0:	movhi	r1, r7
   2ecd4:	str	r1, [r4, #24]
   2ecd8:	ldrh	r1, [r4, #130]	; 0x82
   2ecdc:	ldrh	r2, [r4, #128]	; 0x80
   2ece0:	cmp	r2, r1
   2ece4:	strhcc	r1, [r4, #128]	; 0x80
   2ece8:	ldrh	r1, [r0, #12]
   2ecec:	sub	r0, r0, #36	; 0x24
   2ecf0:	str	r0, [r4, #32]
   2ecf4:	strh	r1, [r4, #130]	; 0x82
   2ecf8:	ldr	r0, [r4, #156]	; 0x9c
   2ecfc:	sub	r0, r0, #1
   2ed00:	str	r0, [r4, #156]	; 0x9c
   2ed04:	sub	sp, fp, #24
   2ed08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ed0c:	movw	r0, #19860	; 0x4d94
   2ed10:	movw	r1, #16754	; 0x4172
   2ed14:	movw	r3, #19910	; 0x4dc6
   2ed18:	movw	r2, #1617	; 0x651
   2ed1c:	movt	r0, #4
   2ed20:	movt	r1, #4
   2ed24:	movt	r3, #4
   2ed28:	bl	14f40 <__assert_fail@plt>

0002ed2c <flatcc_builder_union_vector_count@@Base>:
   2ed2c:	ldr	r0, [r0, #32]
   2ed30:	ldr	r0, [r0, #20]
   2ed34:	bx	lr

0002ed38 <flatcc_builder_union_vector_edit@@Base>:
   2ed38:	ldr	r0, [r0, #16]
   2ed3c:	bx	lr

0002ed40 <flatcc_builder_extend_union_vector@@Base>:
   2ed40:	push	{r4, r5, fp, lr}
   2ed44:	add	fp, sp, #8
   2ed48:	mov	r4, r0
   2ed4c:	ldr	r0, [r0, #32]
   2ed50:	ldr	r2, [r0, #20]
   2ed54:	adds	r2, r2, r1
   2ed58:	cmpcc	r2, #536870912	; 0x20000000
   2ed5c:	bcc	2ed80 <flatcc_builder_extend_union_vector@@Base+0x40>
   2ed60:	movw	r0, #21025	; 0x5221
   2ed64:	movw	r1, #16754	; 0x4172
   2ed68:	movw	r3, #21052	; 0x523c
   2ed6c:	mov	r2, #892	; 0x37c
   2ed70:	movt	r0, #4
   2ed74:	movt	r1, #4
   2ed78:	movt	r3, #4
   2ed7c:	bl	14f40 <__assert_fail@plt>
   2ed80:	str	r2, [r0, #20]
   2ed84:	ldr	r5, [r4, #20]
   2ed88:	ldr	r2, [r4, #24]
   2ed8c:	add	r0, r5, r1, lsl #3
   2ed90:	cmp	r0, r2
   2ed94:	str	r0, [r4, #20]
   2ed98:	bcc	2edbc <flatcc_builder_extend_union_vector@@Base+0x7c>
   2ed9c:	add	r1, r0, #1
   2eda0:	mov	r0, r4
   2eda4:	mvn	r2, #3
   2eda8:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2edac:	mov	r1, r0
   2edb0:	mov	r0, #0
   2edb4:	cmp	r1, #0
   2edb8:	popne	{r4, r5, fp, pc}
   2edbc:	ldr	r0, [r4, #16]
   2edc0:	add	r0, r0, r5
   2edc4:	pop	{r4, r5, fp, pc}

0002edc8 <flatcc_builder_truncate_union_vector@@Base>:
   2edc8:	push	{fp, lr}
   2edcc:	mov	fp, sp
   2edd0:	ldr	r2, [r0, #32]
   2edd4:	ldrh	r3, [r2, #14]
   2edd8:	cmp	r3, #7
   2eddc:	bne	2ee24 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   2ede0:	ldr	r3, [r2, #20]
   2ede4:	cmp	r3, r1
   2ede8:	bcc	2ee3c <flatcc_builder_truncate_union_vector@@Base+0x74>
   2edec:	sub	r3, r3, r1
   2edf0:	str	r3, [r2, #20]
   2edf4:	ldr	r2, [r0, #32]
   2edf8:	ldr	r3, [r0, #20]
   2edfc:	ldr	ip, [r0, #16]
   2ee00:	ldr	r2, [r2, #16]
   2ee04:	mls	r3, r2, r1, r3
   2ee08:	mul	r2, r2, r1
   2ee0c:	mov	r1, #0
   2ee10:	str	r3, [r0, #20]
   2ee14:	add	r0, ip, r3
   2ee18:	bl	14eec <memset@plt>
   2ee1c:	mov	r0, #0
   2ee20:	pop	{fp, pc}
   2ee24:	movw	r0, #19860	; 0x4d94
   2ee28:	movw	r1, #16754	; 0x4172
   2ee2c:	movw	r3, #19993	; 0x4e19
   2ee30:	movw	r2, #1665	; 0x681
   2ee34:	movt	r0, #4
   2ee38:	b	2ee50 <flatcc_builder_truncate_union_vector@@Base+0x88>
   2ee3c:	movw	r0, #18424	; 0x47f8
   2ee40:	movw	r1, #16754	; 0x4172
   2ee44:	movw	r3, #19993	; 0x4e19
   2ee48:	movw	r2, #1666	; 0x682
   2ee4c:	movt	r0, #4
   2ee50:	movt	r1, #4
   2ee54:	movt	r3, #4
   2ee58:	bl	14f40 <__assert_fail@plt>

0002ee5c <flatcc_builder_union_vector_push@@Base>:
   2ee5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ee60:	add	fp, sp, #24
   2ee64:	mov	r7, r0
   2ee68:	ldr	r0, [r0, #32]
   2ee6c:	mov	r5, r1
   2ee70:	ldrh	r1, [r0, #14]
   2ee74:	cmp	r1, #7
   2ee78:	bne	2eee0 <flatcc_builder_union_vector_push@@Base+0x84>
   2ee7c:	ldr	r1, [r0, #20]
   2ee80:	mov	r6, #0
   2ee84:	cmn	r1, #-536870911	; 0xe0000001
   2ee88:	beq	2eed8 <flatcc_builder_union_vector_push@@Base+0x7c>
   2ee8c:	add	r1, r1, #1
   2ee90:	mov	r8, r2
   2ee94:	str	r1, [r0, #20]
   2ee98:	ldr	r4, [r7, #20]
   2ee9c:	ldr	r0, [r7, #24]
   2eea0:	add	r1, r4, #8
   2eea4:	cmp	r1, r0
   2eea8:	str	r1, [r7, #20]
   2eeac:	bcc	2eec8 <flatcc_builder_union_vector_push@@Base+0x6c>
   2eeb0:	add	r1, r4, #9
   2eeb4:	mov	r0, r7
   2eeb8:	mvn	r2, #3
   2eebc:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2eec0:	cmp	r0, #0
   2eec4:	bne	2eed8 <flatcc_builder_union_vector_push@@Base+0x7c>
   2eec8:	ldr	r0, [r7, #16]
   2eecc:	adds	r0, r0, r4
   2eed0:	movne	r6, r0
   2eed4:	stmne	r0, {r5, r8}
   2eed8:	mov	r0, r6
   2eedc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eee0:	movw	r0, #19860	; 0x4d94
   2eee4:	movw	r1, #16754	; 0x4172
   2eee8:	movw	r3, #20062	; 0x4e5e
   2eeec:	movw	r2, #1677	; 0x68d
   2eef0:	movt	r0, #4
   2eef4:	movt	r1, #4
   2eef8:	movt	r3, #4
   2eefc:	bl	14f40 <__assert_fail@plt>

0002ef00 <flatcc_builder_append_union_vector@@Base>:
   2ef00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ef04:	add	fp, sp, #24
   2ef08:	mov	r6, r0
   2ef0c:	ldr	r0, [r0, #32]
   2ef10:	mov	r8, r1
   2ef14:	ldrh	r1, [r0, #14]
   2ef18:	cmp	r1, #7
   2ef1c:	bne	2efb8 <flatcc_builder_append_union_vector@@Base+0xb8>
   2ef20:	ldr	r1, [r0, #20]
   2ef24:	mov	r5, r2
   2ef28:	adds	r1, r1, r2
   2ef2c:	cmpcc	r1, #536870912	; 0x20000000
   2ef30:	bcc	2ef54 <flatcc_builder_append_union_vector@@Base+0x54>
   2ef34:	movw	r0, #21025	; 0x5221
   2ef38:	movw	r1, #16754	; 0x4172
   2ef3c:	movw	r3, #21052	; 0x523c
   2ef40:	mov	r2, #892	; 0x37c
   2ef44:	movt	r0, #4
   2ef48:	movt	r1, #4
   2ef4c:	movt	r3, #4
   2ef50:	bl	14f40 <__assert_fail@plt>
   2ef54:	str	r1, [r0, #20]
   2ef58:	ldr	r4, [r6, #20]
   2ef5c:	ldr	r1, [r6, #24]
   2ef60:	add	r0, r4, r5, lsl #3
   2ef64:	cmp	r0, r1
   2ef68:	str	r0, [r6, #20]
   2ef6c:	bcc	2ef8c <flatcc_builder_append_union_vector@@Base+0x8c>
   2ef70:	add	r1, r0, #1
   2ef74:	mov	r0, r6
   2ef78:	mvn	r2, #3
   2ef7c:	bl	2f5e8 <flatcc_builder_get_emit_context@@Base+0x8>
   2ef80:	mov	r7, #0
   2ef84:	cmp	r0, #0
   2ef88:	bne	2efb0 <flatcc_builder_append_union_vector@@Base+0xb0>
   2ef8c:	ldr	r0, [r6, #16]
   2ef90:	adds	r7, r0, r4
   2ef94:	beq	2efac <flatcc_builder_append_union_vector@@Base+0xac>
   2ef98:	lsl	r2, r5, #3
   2ef9c:	mov	r0, r7
   2efa0:	mov	r1, r8
   2efa4:	bl	14e5c <memcpy@plt>
   2efa8:	b	2efb0 <flatcc_builder_append_union_vector@@Base+0xb0>
   2efac:	mov	r7, #0
   2efb0:	mov	r0, r7
   2efb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2efb8:	movw	r0, #19860	; 0x4d94
   2efbc:	movw	r1, #16754	; 0x4172
   2efc0:	movw	r3, #20171	; 0x4ecb
   2efc4:	movw	r2, #1692	; 0x69c
   2efc8:	movt	r0, #4
   2efcc:	movt	r1, #4
   2efd0:	movt	r3, #4
   2efd4:	bl	14f40 <__assert_fail@plt>

0002efd8 <flatcc_builder_create_string@@Base>:
   2efd8:	push	{r4, r5, r6, sl, fp, lr}
   2efdc:	add	fp, sp, #16
   2efe0:	sub	sp, sp, #80	; 0x50
   2efe4:	str	r2, [fp, #-20]	; 0xffffffec
   2efe8:	mvn	r5, r2
   2efec:	mov	r6, r0
   2eff0:	sub	r3, fp, #20
   2eff4:	cmp	r2, #0
   2eff8:	add	lr, sp, #4
   2effc:	ldr	ip, [r0, #136]	; 0x88
   2f000:	mov	r0, #4
   2f004:	str	r0, [sp, #16]
   2f008:	str	r3, [sp, #12]
   2f00c:	mov	r3, #1
   2f010:	str	r0, [sp, #4]
   2f014:	addne	r0, r2, #4
   2f018:	str	r3, [sp, #8]
   2f01c:	strne	r2, [sp, #24]
   2f020:	movw	r2, #16224	; 0x3f60
   2f024:	movne	r3, #2
   2f028:	strne	r1, [sp, #20]
   2f02c:	strne	r3, [sp, #8]
   2f030:	strne	r0, [sp, #4]
   2f034:	movt	r2, #4
   2f038:	add	r5, ip, r5
   2f03c:	and	r5, r5, #3
   2f040:	add	r5, r5, #1
   2f044:	add	r1, r0, r5
   2f048:	add	r0, lr, r3, lsl #3
   2f04c:	str	r1, [sp, #4]
   2f050:	cmp	r1, #0
   2f054:	str	r2, [r0, #8]
   2f058:	add	r2, r3, #1
   2f05c:	str	r5, [r0, #12]
   2f060:	str	r2, [sp, #8]
   2f064:	ble	2f0b8 <flatcc_builder_create_string@@Base+0xe0>
   2f068:	ldr	r0, [r6, #36]	; 0x24
   2f06c:	ldr	r4, [r6, #44]	; 0x2c
   2f070:	sub	r5, ip, r1
   2f074:	str	r1, [sp]
   2f078:	add	r1, lr, #8
   2f07c:	mov	r3, r5
   2f080:	blx	r4
   2f084:	cmp	r0, #0
   2f088:	streq	r5, [r6, #136]	; 0x88
   2f08c:	moveq	r0, r5
   2f090:	subeq	sp, fp, #16
   2f094:	popeq	{r4, r5, r6, sl, fp, pc}
   2f098:	movw	r0, #21272	; 0x5318
   2f09c:	movw	r1, #16754	; 0x4172
   2f0a0:	movw	r3, #20951	; 0x51d7
   2f0a4:	movw	r2, #651	; 0x28b
   2f0a8:	movt	r0, #4
   2f0ac:	movt	r1, #4
   2f0b0:	movt	r3, #4
   2f0b4:	bl	14f40 <__assert_fail@plt>
   2f0b8:	movw	r0, #21272	; 0x5318
   2f0bc:	movw	r1, #16754	; 0x4172
   2f0c0:	movw	r3, #20951	; 0x51d7
   2f0c4:	movw	r2, #647	; 0x287
   2f0c8:	movt	r0, #4
   2f0cc:	movt	r1, #4
   2f0d0:	movt	r3, #4
   2f0d4:	bl	14f40 <__assert_fail@plt>

0002f0d8 <flatcc_builder_create_string_str@@Base>:
   2f0d8:	push	{r4, r5, fp, lr}
   2f0dc:	add	fp, sp, #8
   2f0e0:	mov	r5, r0
   2f0e4:	mov	r0, r1
   2f0e8:	mov	r4, r1
   2f0ec:	bl	14ec8 <strlen@plt>
   2f0f0:	mov	r2, r0
   2f0f4:	mov	r0, r5
   2f0f8:	mov	r1, r4
   2f0fc:	pop	{r4, r5, fp, lr}
   2f100:	b	2efd8 <flatcc_builder_create_string@@Base>

0002f104 <flatcc_builder_create_string_strn@@Base>:
   2f104:	push	{r4, r5, r6, sl, fp, lr}
   2f108:	add	fp, sp, #16
   2f10c:	mov	r6, r0
   2f110:	mov	r5, r1
   2f114:	mov	r0, r1
   2f118:	mov	r1, #0
   2f11c:	mov	r4, r2
   2f120:	bl	14f10 <memchr@plt>
   2f124:	cmp	r0, #0
   2f128:	mov	r1, r5
   2f12c:	subne	r4, r0, r5
   2f130:	mov	r0, r6
   2f134:	mov	r2, r4
   2f138:	pop	{r4, r5, r6, sl, fp, lr}
   2f13c:	b	2efd8 <flatcc_builder_create_string@@Base>

0002f140 <flatcc_builder_end_string@@Base>:
   2f140:	push	{r4, r5, fp, lr}
   2f144:	add	fp, sp, #8
   2f148:	mov	r4, r0
   2f14c:	ldr	r0, [r0, #32]
   2f150:	ldrh	r1, [r0, #14]
   2f154:	cmp	r1, #6
   2f158:	bne	2f200 <flatcc_builder_end_string@@Base+0xc0>
   2f15c:	ldr	r2, [r0, #20]
   2f160:	ldr	r0, [r4, #20]
   2f164:	cmp	r2, r0
   2f168:	bne	2f218 <flatcc_builder_end_string@@Base+0xd8>
   2f16c:	ldr	r1, [r4, #16]
   2f170:	mov	r0, r4
   2f174:	bl	2efd8 <flatcc_builder_create_string@@Base>
   2f178:	mov	r5, r0
   2f17c:	cmp	r0, #0
   2f180:	beq	2f1f8 <flatcc_builder_end_string@@Base+0xb8>
   2f184:	ldr	r0, [r4, #16]
   2f188:	ldr	r2, [r4, #20]
   2f18c:	mov	r1, #0
   2f190:	bl	14eec <memset@plt>
   2f194:	ldr	r0, [r4, #32]
   2f198:	ldr	r1, [r4, #60]	; 0x3c
   2f19c:	ldr	ip, [r4, #64]	; 0x40
   2f1a0:	ldr	r3, [r0, #8]
   2f1a4:	str	r3, [r4, #20]
   2f1a8:	ldr	r3, [r0]
   2f1ac:	str	r3, [r4, #28]
   2f1b0:	add	r1, r1, r3
   2f1b4:	ldr	r2, [r0, #4]
   2f1b8:	str	r1, [r4, #16]
   2f1bc:	sub	r1, ip, r3
   2f1c0:	cmp	r1, r2
   2f1c4:	movhi	r1, r2
   2f1c8:	str	r1, [r4, #24]
   2f1cc:	ldrh	r1, [r4, #130]	; 0x82
   2f1d0:	ldrh	r2, [r4, #128]	; 0x80
   2f1d4:	cmp	r2, r1
   2f1d8:	strhcc	r1, [r4, #128]	; 0x80
   2f1dc:	ldrh	r1, [r0, #12]
   2f1e0:	sub	r0, r0, #36	; 0x24
   2f1e4:	str	r0, [r4, #32]
   2f1e8:	strh	r1, [r4, #130]	; 0x82
   2f1ec:	ldr	r0, [r4, #156]	; 0x9c
   2f1f0:	sub	r0, r0, #1
   2f1f4:	str	r0, [r4, #156]	; 0x9c
   2f1f8:	mov	r0, r5
   2f1fc:	pop	{r4, r5, fp, pc}
   2f200:	movw	r0, #18071	; 0x4697
   2f204:	movw	r1, #16754	; 0x4172
   2f208:	movw	r3, #20298	; 0x4f4a
   2f20c:	movw	r2, #1732	; 0x6c4
   2f210:	movt	r0, #4
   2f214:	b	2f22c <flatcc_builder_end_string@@Base+0xec>
   2f218:	movw	r0, #20365	; 0x4f8d
   2f21c:	movw	r1, #16754	; 0x4172
   2f220:	movw	r3, #20298	; 0x4f4a
   2f224:	movw	r2, #1733	; 0x6c5
   2f228:	movt	r0, #4
   2f22c:	movt	r1, #4
   2f230:	movt	r3, #4
   2f234:	bl	14f40 <__assert_fail@plt>

0002f238 <flatcc_builder_string_edit@@Base>:
   2f238:	ldr	r0, [r0, #16]
   2f23c:	bx	lr

0002f240 <flatcc_builder_string_len@@Base>:
   2f240:	ldr	r0, [r0, #32]
   2f244:	ldr	r0, [r0, #20]
   2f248:	bx	lr

0002f24c <flatcc_builder_table_edit@@Base>:
   2f24c:	push	{fp, lr}
   2f250:	mov	fp, sp
   2f254:	ldr	r2, [r0, #32]
   2f258:	ldrh	r2, [r2, #14]
   2f25c:	cmp	r2, #3
   2f260:	ldreq	r2, [r0, #16]
   2f264:	ldreq	r0, [r0, #20]
   2f268:	addeq	r0, r2, r0
   2f26c:	subeq	r0, r0, r1
   2f270:	popeq	{fp, pc}
   2f274:	movw	r0, #18823	; 0x4987
   2f278:	movw	r1, #16754	; 0x4172
   2f27c:	movw	r3, #20543	; 0x503f
   2f280:	movw	r2, #1794	; 0x702
   2f284:	movt	r0, #4
   2f288:	movt	r1, #4
   2f28c:	movt	r3, #4
   2f290:	bl	14f40 <__assert_fail@plt>

0002f294 <flatcc_builder_table_add_copy@@Base>:
   2f294:	push	{r4, r5, r6, sl, fp, lr}
   2f298:	add	fp, sp, #16
   2f29c:	mov	r4, r3
   2f2a0:	ldr	r3, [fp, #8]
   2f2a4:	mov	r5, r2
   2f2a8:	mov	r2, r4
   2f2ac:	bl	2e760 <flatcc_builder_table_add@@Base>
   2f2b0:	mov	r6, r0
   2f2b4:	cmp	r0, #0
   2f2b8:	beq	2f2cc <flatcc_builder_table_add_copy@@Base+0x38>
   2f2bc:	mov	r0, r6
   2f2c0:	mov	r1, r5
   2f2c4:	mov	r2, r4
   2f2c8:	bl	14e5c <memcpy@plt>
   2f2cc:	mov	r0, r6
   2f2d0:	pop	{r4, r5, r6, sl, fp, pc}

0002f2d4 <flatcc_builder_push_buffer_alignment@@Base>:
   2f2d4:	ldrh	r1, [r0, #128]	; 0x80
   2f2d8:	mov	r2, #4
   2f2dc:	strh	r2, [r0, #128]	; 0x80
   2f2e0:	mov	r0, r1
   2f2e4:	bx	lr

0002f2e8 <flatcc_builder_pop_buffer_alignment@@Base>:
   2f2e8:	ldrh	r2, [r0, #128]	; 0x80
   2f2ec:	cmp	r2, r1
   2f2f0:	strhcc	r1, [r0, #128]	; 0x80
   2f2f4:	bx	lr

0002f2f8 <flatcc_builder_get_buffer_alignment@@Base>:
   2f2f8:	ldrh	r0, [r0, #128]	; 0x80
   2f2fc:	bx	lr

0002f300 <flatcc_builder_set_vtable_clustering@@Base>:
   2f300:	clz	r1, r1
   2f304:	lsr	r1, r1, #5
   2f308:	str	r1, [r0, #180]	; 0xb4
   2f30c:	bx	lr

0002f310 <flatcc_builder_set_block_align@@Base>:
   2f310:	strh	r1, [r0, #132]	; 0x84
   2f314:	bx	lr

0002f318 <flatcc_builder_get_level@@Base>:
   2f318:	ldr	r0, [r0, #156]	; 0x9c
   2f31c:	bx	lr

0002f320 <flatcc_builder_set_max_level@@Base>:
   2f320:	str	r1, [r0, #176]	; 0xb0
   2f324:	ldr	r2, [r0, #160]	; 0xa0
   2f328:	cmp	r2, r1
   2f32c:	strlt	r1, [r0, #160]	; 0xa0
   2f330:	bx	lr

0002f334 <flatcc_builder_get_buffer_size@@Base>:
   2f334:	ldr	r1, [r0, #136]	; 0x88
   2f338:	ldr	r0, [r0, #140]	; 0x8c
   2f33c:	sub	r0, r0, r1
   2f340:	bx	lr

0002f344 <flatcc_builder_get_buffer_start@@Base>:
   2f344:	ldr	r0, [r0, #136]	; 0x88
   2f348:	bx	lr

0002f34c <flatcc_builder_get_buffer_end@@Base>:
   2f34c:	ldr	r0, [r0, #140]	; 0x8c
   2f350:	bx	lr

0002f354 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2f354:	str	r1, [r0, #172]	; 0xac
   2f358:	bx	lr

0002f35c <flatcc_builder_set_identifier@@Base>:
   2f35c:	movw	r2, #16224	; 0x3f60
   2f360:	cmp	r1, #0
   2f364:	movt	r2, #4
   2f368:	movne	r2, r1
   2f36c:	ldr	r1, [r2]
   2f370:	str	r1, [r0, #168]	; 0xa8
   2f374:	bx	lr

0002f378 <flatcc_builder_get_type@@Base>:
   2f378:	ldr	r0, [r0, #32]
   2f37c:	cmp	r0, #0
   2f380:	ldrhne	r0, [r0, #14]
   2f384:	moveq	r0, #0
   2f388:	bx	lr

0002f38c <flatcc_builder_get_type_at@@Base>:
   2f38c:	mov	r2, r0
   2f390:	mov	r0, #0
   2f394:	cmp	r1, #1
   2f398:	blt	2f3bc <flatcc_builder_get_type_at@@Base+0x30>
   2f39c:	ldr	r3, [r2, #156]	; 0x9c
   2f3a0:	cmp	r3, r1
   2f3a4:	bxlt	lr
   2f3a8:	sub	r0, r1, r3
   2f3ac:	ldr	r1, [r2, #32]
   2f3b0:	add	r0, r0, r0, lsl #3
   2f3b4:	add	r0, r1, r0, lsl #2
   2f3b8:	ldrh	r0, [r0, #14]
   2f3bc:	bx	lr

0002f3c0 <flatcc_builder_get_direct_buffer@@Base>:
   2f3c0:	ldr	r2, [r0, #184]	; 0xb8
   2f3c4:	cmp	r2, #0
   2f3c8:	beq	2f3dc <flatcc_builder_get_direct_buffer@@Base+0x1c>
   2f3cc:	ldr	r2, [r0, #188]	; 0xbc
   2f3d0:	ldr	r3, [r0, #192]	; 0xc0
   2f3d4:	cmp	r2, r3
   2f3d8:	beq	2f3ec <flatcc_builder_get_direct_buffer@@Base+0x2c>
   2f3dc:	mov	r0, #0
   2f3e0:	cmp	r1, #0
   2f3e4:	strne	r0, [r1]
   2f3e8:	bx	lr
   2f3ec:	cmp	r1, #0
   2f3f0:	ldrne	r2, [r0, #212]	; 0xd4
   2f3f4:	strne	r2, [r1]
   2f3f8:	ldr	r0, [r0, #196]	; 0xc4
   2f3fc:	bx	lr

0002f400 <flatcc_builder_copy_buffer@@Base>:
   2f400:	push	{fp, lr}
   2f404:	mov	fp, sp
   2f408:	ldr	r3, [r0, #184]	; 0xb8
   2f40c:	cmp	r3, #0
   2f410:	beq	2f444 <flatcc_builder_copy_buffer@@Base+0x44>
   2f414:	add	r0, r0, #188	; 0xbc
   2f418:	bl	2fb0c <flatcc_emitter_copy_buffer@@Base>
   2f41c:	cmp	r0, #0
   2f420:	popne	{fp, pc}
   2f424:	movw	r0, #4391	; 0x1127
   2f428:	movw	r1, #16754	; 0x4172
   2f42c:	movw	r3, #20682	; 0x50ca
   2f430:	movw	r2, #1926	; 0x786
   2f434:	movt	r0, #4
   2f438:	movt	r1, #4
   2f43c:	movt	r3, #4
   2f440:	bl	14f40 <__assert_fail@plt>
   2f444:	mov	r0, #0
   2f448:	pop	{fp, pc}

0002f44c <flatcc_builder_finalize_buffer@@Base>:
   2f44c:	push	{r4, r5, r6, sl, fp, lr}
   2f450:	add	fp, sp, #16
   2f454:	mov	r4, r0
   2f458:	ldr	r0, [r0, #136]	; 0x88
   2f45c:	cmp	r1, #0
   2f460:	ldr	r2, [r4, #140]	; 0x8c
   2f464:	sub	r5, r2, r0
   2f468:	mov	r0, r5
   2f46c:	strne	r5, [r1]
   2f470:	bl	14e98 <malloc@plt>
   2f474:	cmp	r0, #0
   2f478:	beq	2f4bc <flatcc_builder_finalize_buffer@@Base+0x70>
   2f47c:	mov	r6, r0
   2f480:	mov	r0, r4
   2f484:	mov	r2, r5
   2f488:	mov	r1, r6
   2f48c:	bl	2f400 <flatcc_builder_copy_buffer@@Base>
   2f490:	cmp	r0, #0
   2f494:	movne	r0, r6
   2f498:	popne	{r4, r5, r6, sl, fp, pc}
   2f49c:	movw	r0, #21272	; 0x5318
   2f4a0:	movw	r1, #16754	; 0x4172
   2f4a4:	movw	r3, #20751	; 0x510f
   2f4a8:	movw	r2, #1948	; 0x79c
   2f4ac:	movt	r0, #4
   2f4b0:	movt	r1, #4
   2f4b4:	movt	r3, #4
   2f4b8:	bl	14f40 <__assert_fail@plt>
   2f4bc:	movw	r0, #21272	; 0x5318
   2f4c0:	movw	r1, #16754	; 0x4172
   2f4c4:	movw	r3, #20751	; 0x510f
   2f4c8:	movw	r2, #1944	; 0x798
   2f4cc:	movt	r0, #4
   2f4d0:	movt	r1, #4
   2f4d4:	movt	r3, #4
   2f4d8:	bl	14f40 <__assert_fail@plt>

0002f4dc <flatcc_builder_finalize_aligned_buffer@@Base>:
   2f4dc:	push	{r4, r5, r6, r7, fp, lr}
   2f4e0:	add	fp, sp, #16
   2f4e4:	sub	sp, sp, #8
   2f4e8:	mov	r5, r0
   2f4ec:	mov	r4, r1
   2f4f0:	ldr	r0, [r0, #136]	; 0x88
   2f4f4:	ldr	r1, [r5, #140]	; 0x8c
   2f4f8:	cmp	r4, #0
   2f4fc:	sub	r0, r1, r0
   2f500:	mov	r1, #0
   2f504:	strne	r0, [r4]
   2f508:	ldrh	r2, [r5, #128]	; 0x80
   2f50c:	str	r1, [sp, #4]
   2f510:	add	r0, r0, r2
   2f514:	cmp	r2, #4
   2f518:	mov	r1, r2
   2f51c:	rsb	r2, r2, #0
   2f520:	sub	r0, r0, #1
   2f524:	movls	r1, #4
   2f528:	and	r7, r0, r2
   2f52c:	add	r0, sp, #4
   2f530:	mov	r2, r7
   2f534:	bl	14ee0 <posix_memalign@plt>
   2f538:	ldr	r6, [sp, #4]
   2f53c:	cmp	r0, #0
   2f540:	cmpne	r6, #0
   2f544:	bne	2f568 <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
   2f548:	cmp	r6, #0
   2f54c:	beq	2f570 <flatcc_builder_finalize_aligned_buffer@@Base+0x94>
   2f550:	mov	r0, r5
   2f554:	mov	r1, r6
   2f558:	mov	r2, r7
   2f55c:	bl	2f400 <flatcc_builder_copy_buffer@@Base>
   2f560:	cmp	r0, #0
   2f564:	bne	2f57c <flatcc_builder_finalize_aligned_buffer@@Base+0xa0>
   2f568:	mov	r0, r6
   2f56c:	bl	14e50 <free@plt>
   2f570:	mov	r6, #0
   2f574:	cmp	r4, #0
   2f578:	strne	r6, [r4]
   2f57c:	mov	r0, r6
   2f580:	sub	sp, fp, #16
   2f584:	pop	{r4, r5, r6, r7, fp, pc}

0002f588 <flatcc_builder_aligned_alloc@@Base>:
   2f588:	push	{fp, lr}
   2f58c:	mov	fp, sp
   2f590:	sub	sp, sp, #8
   2f594:	mov	r2, r1
   2f598:	mov	r1, r0
   2f59c:	mov	r0, #0
   2f5a0:	cmp	r1, #4
   2f5a4:	str	r0, [sp, #4]
   2f5a8:	add	r0, sp, #4
   2f5ac:	movls	r1, #4
   2f5b0:	bl	14ee0 <posix_memalign@plt>
   2f5b4:	mov	r1, r0
   2f5b8:	ldr	r0, [sp, #4]
   2f5bc:	cmp	r1, #0
   2f5c0:	cmpne	r0, #0
   2f5c4:	beq	2f5d4 <flatcc_builder_aligned_alloc@@Base+0x4c>
   2f5c8:	bl	14e50 <free@plt>
   2f5cc:	mov	r0, #0
   2f5d0:	str	r0, [sp, #4]
   2f5d4:	mov	sp, fp
   2f5d8:	pop	{fp, pc}

0002f5dc <flatcc_builder_aligned_free@@Base>:
   2f5dc:	b	14e50 <free@plt>

0002f5e0 <flatcc_builder_get_emit_context@@Base>:
   2f5e0:	ldr	r0, [r0, #36]	; 0x24
   2f5e4:	bx	lr
   2f5e8:	push	{r4, r5, r6, sl, fp, lr}
   2f5ec:	add	fp, sp, #16
   2f5f0:	sub	sp, sp, #8
   2f5f4:	mov	r6, r2
   2f5f8:	ldr	r2, [r0, #28]
   2f5fc:	mov	r5, r0
   2f600:	ldr	r0, [r0, #40]	; 0x28
   2f604:	mov	r3, #1
   2f608:	ldr	r4, [r5, #48]	; 0x30
   2f60c:	str	r3, [sp]
   2f610:	mov	r3, #1
   2f614:	add	r2, r2, r1
   2f618:	add	r1, r5, #60	; 0x3c
   2f61c:	blx	r4
   2f620:	mov	r1, r0
   2f624:	mvn	r0, #0
   2f628:	cmp	r1, #0
   2f62c:	bne	2f660 <flatcc_builder_get_emit_context@@Base+0x80>
   2f630:	ldr	r0, [r5, #28]
   2f634:	ldr	r2, [r5, #60]	; 0x3c
   2f638:	ldr	r3, [r5, #64]	; 0x40
   2f63c:	ldr	r1, [r5, #32]
   2f640:	add	r2, r2, r0
   2f644:	sub	r0, r3, r0
   2f648:	cmp	r0, r6
   2f64c:	str	r2, [r5, #16]
   2f650:	movhi	r0, r6
   2f654:	str	r0, [r5, #24]
   2f658:	mov	r0, #0
   2f65c:	str	r6, [r1, #4]
   2f660:	sub	sp, fp, #16
   2f664:	pop	{r4, r5, r6, sl, fp, pc}

0002f668 <flatcc_emitter_recycle_page@@Base>:
   2f668:	ldr	r3, [r0]
   2f66c:	mov	r2, r0
   2f670:	mvn	r0, #0
   2f674:	cmp	r3, r1
   2f678:	beq	2f6b8 <flatcc_emitter_recycle_page@@Base+0x50>
   2f67c:	ldr	r2, [r2, #4]
   2f680:	cmp	r2, r1
   2f684:	bxeq	lr
   2f688:	ldr	r0, [r1, #2944]	; 0xb80
   2f68c:	ldr	r2, [r1, #2948]	; 0xb84
   2f690:	str	r2, [r0, #2948]	; 0xb84
   2f694:	ldr	r2, [r1, #2948]	; 0xb84
   2f698:	str	r0, [r2, #2944]	; 0xb80
   2f69c:	ldr	r0, [r3, #2948]	; 0xb84
   2f6a0:	str	r3, [r1, #2944]	; 0xb80
   2f6a4:	str	r0, [r1, #2948]	; 0xb84
   2f6a8:	str	r1, [r0, #2944]	; 0xb80
   2f6ac:	ldr	r0, [r1, #2944]	; 0xb80
   2f6b0:	str	r1, [r0, #2948]	; 0xb84
   2f6b4:	mov	r0, #0
   2f6b8:	bx	lr

0002f6bc <flatcc_emitter_reset@@Base>:
   2f6bc:	push	{r4, sl, fp, lr}
   2f6c0:	add	fp, sp, #8
   2f6c4:	ldr	r1, [r0]
   2f6c8:	cmp	r1, #0
   2f6cc:	beq	2f784 <flatcc_emitter_reset@@Base+0xc8>
   2f6d0:	mov	r4, r0
   2f6d4:	add	r2, r1, #1472	; 0x5c0
   2f6d8:	mov	r0, #1472	; 0x5c0
   2f6dc:	mov	r3, #0
   2f6e0:	stmib	r4, {r1, r2}
   2f6e4:	str	r0, [r4, #12]
   2f6e8:	str	r2, [r4, #16]
   2f6ec:	str	r0, [r4, #20]
   2f6f0:	movw	r0, #64064	; 0xfa40
   2f6f4:	movt	r0, #65535	; 0xffff
   2f6f8:	str	r0, [r1, #2952]	; 0xb88
   2f6fc:	ldr	r2, [r4, #32]
   2f700:	ldr	r0, [r4, #24]
   2f704:	cmp	r2, #0
   2f708:	moveq	r2, r0
   2f70c:	streq	r0, [r4, #32]
   2f710:	str	r3, [r4, #24]
   2f714:	add	r2, r2, r2, lsl #1
   2f718:	lsr	r2, r2, #2
   2f71c:	add	r0, r2, r0, lsr #2
   2f720:	str	r0, [r4, #32]
   2f724:	ldr	r2, [r4, #28]
   2f728:	cmp	r2, r0, lsl #1
   2f72c:	bls	2f784 <flatcc_emitter_reset@@Base+0xc8>
   2f730:	mov	r2, r1
   2f734:	ldr	r0, [r2, #2944]!	; 0xb80
   2f738:	cmp	r0, r1
   2f73c:	popeq	{r4, sl, fp, pc}
   2f740:	ldr	r3, [r0, #2944]	; 0xb80
   2f744:	str	r3, [r2]
   2f748:	ldr	r2, [r0, #2944]	; 0xb80
   2f74c:	str	r1, [r2, #2948]	; 0xb84
   2f750:	bl	14e50 <free@plt>
   2f754:	ldr	r0, [r4, #28]
   2f758:	ldr	r1, [r4, #32]
   2f75c:	sub	r0, r0, #2944	; 0xb80
   2f760:	cmp	r0, r1, lsl #1
   2f764:	str	r0, [r4, #28]
   2f768:	bls	2f784 <flatcc_emitter_reset@@Base+0xc8>
   2f76c:	ldr	r1, [r4, #4]
   2f770:	ldr	r3, [r4]
   2f774:	mov	r2, r1
   2f778:	ldr	r0, [r2, #2944]!	; 0xb80
   2f77c:	cmp	r0, r3
   2f780:	bne	2f740 <flatcc_emitter_reset@@Base+0x84>
   2f784:	pop	{r4, sl, fp, pc}

0002f788 <flatcc_emitter_clear@@Base>:
   2f788:	push	{r4, r5, r6, sl, fp, lr}
   2f78c:	add	fp, sp, #16
   2f790:	ldr	r5, [r0]
   2f794:	cmp	r5, #0
   2f798:	beq	2f7e8 <flatcc_emitter_clear@@Base+0x60>
   2f79c:	mov	r4, r0
   2f7a0:	ldr	r0, [r5, #2948]	; 0xb84
   2f7a4:	mov	r6, #0
   2f7a8:	str	r6, [r0, #2944]	; 0xb80
   2f7ac:	ldr	r0, [r5, #2944]	; 0xb80
   2f7b0:	cmp	r0, #0
   2f7b4:	beq	2f7c8 <flatcc_emitter_clear@@Base+0x40>
   2f7b8:	mov	r5, r0
   2f7bc:	ldr	r0, [r0, #2948]	; 0xb84
   2f7c0:	bl	14e50 <free@plt>
   2f7c4:	b	2f7ac <flatcc_emitter_clear@@Base+0x24>
   2f7c8:	mov	r0, r5
   2f7cc:	bl	14e50 <free@plt>
   2f7d0:	vmov.i32	q8, #0	; 0x00000000
   2f7d4:	add	r0, r4, #16
   2f7d8:	vst1.32	{d16-d17}, [r0]
   2f7dc:	mov	r0, #32
   2f7e0:	vst1.32	{d16-d17}, [r4], r0
   2f7e4:	str	r6, [r4]
   2f7e8:	pop	{r4, r5, r6, sl, fp, pc}

0002f7ec <flatcc_emitter@@Base>:
   2f7ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f7f0:	add	fp, sp, #28
   2f7f4:	sub	sp, sp, #4
   2f7f8:	mov	r6, r0
   2f7fc:	mov	r7, r1
   2f800:	ldr	r0, [r0, #24]
   2f804:	ldr	r1, [fp, #8]
   2f808:	mov	r4, r2
   2f80c:	cmn	r3, #1
   2f810:	mov	r9, r6
   2f814:	add	r0, r0, r1
   2f818:	str	r0, [r6, #24]
   2f81c:	ble	2f958 <flatcc_emitter@@Base+0x16c>
   2f820:	ldr	r0, [r9, #20]!
   2f824:	cmp	r0, r1
   2f828:	bcs	2faa8 <flatcc_emitter@@Base+0x2bc>
   2f82c:	mov	r8, #0
   2f830:	cmp	r4, #0
   2f834:	beq	2fb00 <flatcc_emitter@@Base+0x314>
   2f838:	movw	sl, #64064	; 0xfa40
   2f83c:	movt	sl, #65535	; 0xffff
   2f840:	ldr	r8, [r7, #4]
   2f844:	cmp	r8, #0
   2f848:	beq	2f944 <flatcc_emitter@@Base+0x158>
   2f84c:	ldr	r9, [r7]
   2f850:	cmp	r8, r0
   2f854:	mov	r5, r8
   2f858:	bls	2f910 <flatcc_emitter@@Base+0x124>
   2f85c:	mov	r5, r0
   2f860:	cmp	r5, #0
   2f864:	bne	2f910 <flatcc_emitter@@Base+0x124>
   2f868:	ldr	r5, [r6, #4]
   2f86c:	cmp	r5, #0
   2f870:	beq	2f884 <flatcc_emitter@@Base+0x98>
   2f874:	ldr	r0, [r5, #2944]	; 0xb80
   2f878:	ldr	r1, [r6]
   2f87c:	cmp	r0, r1
   2f880:	bne	2f8bc <flatcc_emitter@@Base+0xd0>
   2f884:	movw	r0, #2956	; 0xb8c
   2f888:	bl	14e98 <malloc@plt>
   2f88c:	cmp	r0, #0
   2f890:	beq	2fab8 <flatcc_emitter@@Base+0x2cc>
   2f894:	ldr	r1, [r6, #28]
   2f898:	cmp	r5, #0
   2f89c:	add	r1, r1, #2944	; 0xb80
   2f8a0:	str	r1, [r6, #28]
   2f8a4:	beq	2f8e0 <flatcc_emitter@@Base+0xf4>
   2f8a8:	ldr	r1, [r6]
   2f8ac:	str	r1, [r0, #2944]	; 0xb80
   2f8b0:	str	r5, [r0, #2948]	; 0xb84
   2f8b4:	str	r0, [r1, #2948]	; 0xb84
   2f8b8:	str	r0, [r5, #2944]	; 0xb80
   2f8bc:	mov	r5, #2944	; 0xb80
   2f8c0:	str	r0, [r6, #4]
   2f8c4:	str	r0, [r6, #16]
   2f8c8:	str	r5, [r6, #20]
   2f8cc:	ldr	r1, [r0, #2948]	; 0xb84
   2f8d0:	ldr	r1, [r1, #2952]	; 0xb88
   2f8d4:	add	r1, r1, #2944	; 0xb80
   2f8d8:	str	r1, [r0, #2952]	; 0xb88
   2f8dc:	b	2f904 <flatcc_emitter@@Base+0x118>
   2f8e0:	mov	r5, #1472	; 0x5c0
   2f8e4:	add	r1, r0, #1472	; 0x5c0
   2f8e8:	str	r0, [r6]
   2f8ec:	stmib	r6, {r0, r1, r5}
   2f8f0:	str	r1, [r6, #16]
   2f8f4:	str	r5, [r6, #20]
   2f8f8:	str	r0, [r0, #2944]	; 0xb80
   2f8fc:	str	r0, [r0, #2948]	; 0xb84
   2f900:	str	sl, [r0, #2952]	; 0xb88
   2f904:	cmp	r8, r5
   2f908:	bhi	2f860 <flatcc_emitter@@Base+0x74>
   2f90c:	mov	r5, r8
   2f910:	ldr	r0, [r6, #16]
   2f914:	mov	r1, r9
   2f918:	mov	r2, r5
   2f91c:	bl	14e5c <memcpy@plt>
   2f920:	ldr	r0, [r6, #16]
   2f924:	ldr	r1, [r6, #20]
   2f928:	add	r9, r9, r5
   2f92c:	subs	r8, r8, r5
   2f930:	add	r2, r0, r5
   2f934:	sub	r0, r1, r5
   2f938:	str	r2, [r6, #16]
   2f93c:	str	r0, [r6, #20]
   2f940:	bne	2f850 <flatcc_emitter@@Base+0x64>
   2f944:	subs	r4, r4, #1
   2f948:	add	r7, r7, #8
   2f94c:	bne	2f840 <flatcc_emitter@@Base+0x54>
   2f950:	mov	r8, #0
   2f954:	b	2fb00 <flatcc_emitter@@Base+0x314>
   2f958:	ldr	r0, [r9, #12]!
   2f95c:	cmp	r0, r1
   2f960:	bcs	2fac0 <flatcc_emitter@@Base+0x2d4>
   2f964:	mov	r8, #0
   2f968:	cmp	r4, #0
   2f96c:	beq	2fb00 <flatcc_emitter@@Base+0x314>
   2f970:	add	r0, r7, r4, lsl #3
   2f974:	ldr	sl, [r0, #-4]
   2f978:	sub	r1, r0, #8
   2f97c:	str	r1, [sp]
   2f980:	cmp	sl, #0
   2f984:	beq	2fa98 <flatcc_emitter@@Base+0x2ac>
   2f988:	ldr	r0, [sp]
   2f98c:	ldr	r0, [r0]
   2f990:	add	r7, r0, sl
   2f994:	ldr	r1, [r9]
   2f998:	cmp	sl, r1
   2f99c:	bls	2fa68 <flatcc_emitter@@Base+0x27c>
   2f9a0:	cmp	r1, #0
   2f9a4:	mov	r5, r1
   2f9a8:	bne	2fa6c <flatcc_emitter@@Base+0x280>
   2f9ac:	ldr	r5, [r6]
   2f9b0:	cmp	r5, #0
   2f9b4:	beq	2f9d8 <flatcc_emitter@@Base+0x1ec>
   2f9b8:	ldr	r0, [r5, #2948]	; 0xb84
   2f9bc:	ldr	r1, [r6, #4]
   2f9c0:	cmp	r0, r1
   2f9c4:	beq	2f9d8 <flatcc_emitter@@Base+0x1ec>
   2f9c8:	ldr	r1, [r5, #2952]	; 0xb88
   2f9cc:	sub	r1, r1, #2944	; 0xb80
   2f9d0:	str	r1, [r0, #2952]	; 0xb88
   2f9d4:	b	2fa10 <flatcc_emitter@@Base+0x224>
   2f9d8:	movw	r0, #2956	; 0xb8c
   2f9dc:	bl	14e98 <malloc@plt>
   2f9e0:	cmp	r0, #0
   2f9e4:	beq	2fab8 <flatcc_emitter@@Base+0x2cc>
   2f9e8:	ldr	r1, [r6, #28]
   2f9ec:	cmp	r5, #0
   2f9f0:	add	r1, r1, #2944	; 0xb80
   2f9f4:	str	r1, [r6, #28]
   2f9f8:	beq	2fa34 <flatcc_emitter@@Base+0x248>
   2f9fc:	ldr	r1, [r6, #4]
   2fa00:	str	r5, [r0, #2944]	; 0xb80
   2fa04:	str	r1, [r0, #2948]	; 0xb84
   2fa08:	str	r0, [r5, #2948]	; 0xb84
   2fa0c:	str	r0, [r1, #2944]	; 0xb80
   2fa10:	mov	r1, #2944	; 0xb80
   2fa14:	add	r2, r0, #2944	; 0xb80
   2fa18:	str	r0, [r6]
   2fa1c:	str	r2, [r6, #8]
   2fa20:	str	r1, [r6, #12]
   2fa24:	ldr	r2, [r0, #2944]	; 0xb80
   2fa28:	ldr	r2, [r2, #2952]	; 0xb88
   2fa2c:	sub	r2, r2, #2944	; 0xb80
   2fa30:	b	2fa60 <flatcc_emitter@@Base+0x274>
   2fa34:	add	r2, r0, #1472	; 0x5c0
   2fa38:	mov	r1, #1472	; 0x5c0
   2fa3c:	str	r0, [r6]
   2fa40:	stmib	r6, {r0, r2}
   2fa44:	str	r1, [r6, #12]
   2fa48:	str	r2, [r6, #16]
   2fa4c:	movw	r2, #64064	; 0xfa40
   2fa50:	str	r1, [r6, #20]
   2fa54:	str	r0, [r0, #2944]	; 0xb80
   2fa58:	str	r0, [r0, #2948]	; 0xb84
   2fa5c:	movt	r2, #65535	; 0xffff
   2fa60:	str	r2, [r0, #2952]	; 0xb88
   2fa64:	b	2f998 <flatcc_emitter@@Base+0x1ac>
   2fa68:	mov	r5, sl
   2fa6c:	sub	r0, r1, r5
   2fa70:	sub	r7, r7, r5
   2fa74:	mov	r2, r5
   2fa78:	str	r0, [r6, #12]
   2fa7c:	mov	r1, r7
   2fa80:	ldr	r0, [r6, #8]
   2fa84:	sub	r0, r0, r5
   2fa88:	str	r0, [r6, #8]
   2fa8c:	bl	14e5c <memcpy@plt>
   2fa90:	subs	sl, sl, r5
   2fa94:	bne	2f994 <flatcc_emitter@@Base+0x1a8>
   2fa98:	ldr	r0, [sp]
   2fa9c:	subs	r4, r4, #1
   2faa0:	bne	2f974 <flatcc_emitter@@Base+0x188>
   2faa4:	b	2fb00 <flatcc_emitter@@Base+0x314>
   2faa8:	ldr	r5, [r6, #16]
   2faac:	add	r2, r5, r1
   2fab0:	str	r2, [r6, #16]
   2fab4:	b	2facc <flatcc_emitter@@Base+0x2e0>
   2fab8:	mvn	r8, #0
   2fabc:	b	2fb00 <flatcc_emitter@@Base+0x314>
   2fac0:	ldr	r2, [r6, #8]
   2fac4:	sub	r5, r2, r1
   2fac8:	str	r5, [r6, #8]
   2facc:	sub	r0, r0, r1
   2fad0:	mov	r8, #0
   2fad4:	cmp	r4, #0
   2fad8:	str	r0, [r9]
   2fadc:	beq	2fb00 <flatcc_emitter@@Base+0x314>
   2fae0:	ldm	r7, {r1, r2}
   2fae4:	mov	r0, r5
   2fae8:	bl	14e5c <memcpy@plt>
   2faec:	ldr	r0, [r7, #4]
   2faf0:	add	r7, r7, #8
   2faf4:	subs	r4, r4, #1
   2faf8:	add	r5, r5, r0
   2fafc:	bne	2fae0 <flatcc_emitter@@Base+0x2f4>
   2fb00:	mov	r0, r8
   2fb04:	sub	sp, fp, #28
   2fb08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002fb0c <flatcc_emitter_copy_buffer@@Base>:
   2fb0c:	push	{r4, r5, r6, sl, fp, lr}
   2fb10:	add	fp, sp, #16
   2fb14:	mov	r3, r2
   2fb18:	ldr	r2, [r0, #24]
   2fb1c:	mov	r5, #0
   2fb20:	cmp	r2, r3
   2fb24:	bhi	2fbc0 <flatcc_emitter_copy_buffer@@Base+0xb4>
   2fb28:	mov	r4, r0
   2fb2c:	ldr	r0, [r0]
   2fb30:	cmp	r0, #0
   2fb34:	beq	2fbc0 <flatcc_emitter_copy_buffer@@Base+0xb4>
   2fb38:	mov	r6, r1
   2fb3c:	ldr	r1, [r4, #4]
   2fb40:	cmp	r0, r1
   2fb44:	beq	2fbb0 <flatcc_emitter_copy_buffer@@Base+0xa4>
   2fb48:	ldr	r0, [r4, #12]
   2fb4c:	ldr	r1, [r4, #8]
   2fb50:	rsb	r5, r0, #2944	; 0xb80
   2fb54:	mov	r0, r6
   2fb58:	mov	r2, r5
   2fb5c:	bl	14e5c <memcpy@plt>
   2fb60:	ldm	r4, {r0, r1}
   2fb64:	add	r5, r6, r5
   2fb68:	ldr	r6, [r0, #2944]	; 0xb80
   2fb6c:	cmp	r6, r1
   2fb70:	beq	2fb98 <flatcc_emitter_copy_buffer@@Base+0x8c>
   2fb74:	mov	r0, r5
   2fb78:	mov	r1, r6
   2fb7c:	mov	r2, #2944	; 0xb80
   2fb80:	bl	14e5c <memcpy@plt>
   2fb84:	ldr	r6, [r6, #2944]	; 0xb80
   2fb88:	ldr	r0, [r4, #4]
   2fb8c:	add	r5, r5, #2944	; 0xb80
   2fb90:	cmp	r6, r0
   2fb94:	bne	2fb74 <flatcc_emitter_copy_buffer@@Base+0x68>
   2fb98:	ldr	r0, [r4, #20]
   2fb9c:	mov	r1, r6
   2fba0:	rsb	r2, r0, #2944	; 0xb80
   2fba4:	mov	r0, r5
   2fba8:	bl	14e5c <memcpy@plt>
   2fbac:	b	2fbc0 <flatcc_emitter_copy_buffer@@Base+0xb4>
   2fbb0:	ldr	r1, [r4, #8]
   2fbb4:	mov	r0, r6
   2fbb8:	bl	14e5c <memcpy@plt>
   2fbbc:	mov	r5, r6
   2fbc0:	mov	r0, r5
   2fbc4:	pop	{r4, r5, r6, sl, fp, pc}

0002fbc8 <flatcc_verify_error_string@@Base>:
   2fbc8:	cmp	r0, #36	; 0x24
   2fbcc:	movwhi	r0, #22486	; 0x57d6
   2fbd0:	movthi	r0, #4
   2fbd4:	bxhi	lr
   2fbd8:	movw	r1, #22496	; 0x57e0
   2fbdc:	movt	r1, #4
   2fbe0:	ldr	r0, [r1, r0, lsl #2]
   2fbe4:	bx	lr

0002fbe8 <flatcc_verify_field@@Base>:
   2fbe8:	b	2fbec <flatcc_verify_field@@Base+0x4>
   2fbec:	push	{r4, sl, fp, lr}
   2fbf0:	add	fp, sp, #8
   2fbf4:	mov	ip, #4
   2fbf8:	ldrh	r4, [r0, #22]
   2fbfc:	mov	lr, #0
   2fc00:	add	r1, ip, r1, lsl #1
   2fc04:	uxth	ip, r1
   2fc08:	cmp	ip, r4
   2fc0c:	bcs	2fc38 <flatcc_verify_field@@Base+0x50>
   2fc10:	ldr	r4, [r0, #12]
   2fc14:	uxtah	r1, r4, r1
   2fc18:	ldrh	ip, [r1]
   2fc1c:	cmp	ip, #0
   2fc20:	beq	2fc38 <flatcc_verify_field@@Base+0x50>
   2fc24:	add	r1, ip, r2
   2fc28:	ldrh	r2, [r0, #20]
   2fc2c:	mov	lr, #13
   2fc30:	cmp	r1, r2
   2fc34:	bls	2fc40 <flatcc_verify_field@@Base+0x58>
   2fc38:	mov	r0, lr
   2fc3c:	pop	{r4, sl, fp, pc}
   2fc40:	ldr	r1, [r0]
   2fc44:	ldr	r0, [r0, #16]
   2fc48:	add	r1, r1, ip
   2fc4c:	add	r0, r1, r0
   2fc50:	sub	r1, r3, #1
   2fc54:	ands	r0, r0, r1
   2fc58:	movwne	r0, #12
   2fc5c:	pop	{r4, sl, fp, pc}

0002fc60 <flatcc_verify_string_field@@Base>:
   2fc60:	push	{r4, sl, fp, lr}
   2fc64:	add	fp, sp, #8
   2fc68:	sub	sp, sp, #8
   2fc6c:	add	r3, sp, #4
   2fc70:	mov	r4, r0
   2fc74:	bl	2fcec <flatcc_verify_string_field@@Base+0x8c>
   2fc78:	cmp	r0, #0
   2fc7c:	bne	2fce4 <flatcc_verify_string_field@@Base+0x84>
   2fc80:	ldr	r3, [sp, #4]
   2fc84:	cmp	r3, #0
   2fc88:	beq	2fce4 <flatcc_verify_string_field@@Base+0x84>
   2fc8c:	ldr	r1, [r4]
   2fc90:	ldr	r0, [r1, r3]
   2fc94:	add	r2, r0, r3
   2fc98:	mov	r0, #17
   2fc9c:	tst	r2, #3
   2fca0:	bne	2fce4 <flatcc_verify_string_field@@Base+0x84>
   2fca4:	cmp	r2, r3
   2fca8:	bls	2fce4 <flatcc_verify_string_field@@Base+0x84>
   2fcac:	ldr	r4, [r4, #4]
   2fcb0:	add	r3, r2, #4
   2fcb4:	cmp	r4, r3
   2fcb8:	bcc	2fce4 <flatcc_verify_string_field@@Base+0x84>
   2fcbc:	ldr	r2, [r1, r2]
   2fcc0:	sub	ip, r4, r3
   2fcc4:	mov	r0, #8
   2fcc8:	add	r4, r2, #1
   2fccc:	cmp	ip, r4
   2fcd0:	bcc	2fce4 <flatcc_verify_string_field@@Base+0x84>
   2fcd4:	add	r0, r1, r3
   2fcd8:	ldrb	r0, [r0, r2]
   2fcdc:	cmp	r0, #0
   2fce0:	movwne	r0, #7
   2fce4:	sub	sp, fp, #8
   2fce8:	pop	{r4, sl, fp, pc}
   2fcec:	push	{fp, lr}
   2fcf0:	mov	fp, sp
   2fcf4:	mov	ip, #4
   2fcf8:	add	lr, ip, r1, lsl #1
   2fcfc:	ldrh	r1, [r0, #22]
   2fd00:	uxth	ip, lr
   2fd04:	cmp	ip, r1
   2fd08:	bcs	2fd50 <flatcc_verify_string_field@@Base+0xf0>
   2fd0c:	ldr	r1, [r0, #12]
   2fd10:	uxtah	r1, r1, lr
   2fd14:	ldrh	ip, [r1]
   2fd18:	cmp	ip, #0
   2fd1c:	beq	2fd50 <flatcc_verify_string_field@@Base+0xf0>
   2fd20:	ldrh	lr, [r0, #20]
   2fd24:	add	r2, ip, #4
   2fd28:	mov	r1, #13
   2fd2c:	cmp	r2, lr
   2fd30:	bhi	2fd64 <flatcc_verify_string_field@@Base+0x104>
   2fd34:	ldr	r0, [r0, #16]
   2fd38:	mov	r1, #12
   2fd3c:	add	r0, r0, ip
   2fd40:	tst	r0, #3
   2fd44:	moveq	r1, #0
   2fd48:	streq	r0, [r3]
   2fd4c:	b	2fd64 <flatcc_verify_string_field@@Base+0x104>
   2fd50:	cmp	r2, #0
   2fd54:	mov	r0, #0
   2fd58:	movwne	r2, #1
   2fd5c:	str	r0, [r3]
   2fd60:	lsl	r1, r2, #2
   2fd64:	mov	r0, r1
   2fd68:	pop	{fp, pc}

0002fd6c <flatcc_verify_vector_field@@Base>:
   2fd6c:	push	{r4, r5, r6, sl, fp, lr}
   2fd70:	add	fp, sp, #16
   2fd74:	sub	sp, sp, #8
   2fd78:	mov	r6, r3
   2fd7c:	add	r3, sp, #4
   2fd80:	mov	r5, r0
   2fd84:	bl	2fcec <flatcc_verify_string_field@@Base+0x8c>
   2fd88:	cmp	r0, #0
   2fd8c:	bne	2fe0c <flatcc_verify_vector_field@@Base+0xa0>
   2fd90:	ldr	r4, [sp, #4]
   2fd94:	cmp	r4, #0
   2fd98:	beq	2fe0c <flatcc_verify_vector_field@@Base+0xa0>
   2fd9c:	ldr	r3, [r5]
   2fda0:	ldr	r2, [fp, #8]
   2fda4:	ldr	r0, [r3, r4]
   2fda8:	cmp	r2, #4
   2fdac:	movls	r2, #4
   2fdb0:	add	r1, r0, r4
   2fdb4:	mov	r0, #16
   2fdb8:	cmp	r1, r4
   2fdbc:	bls	2fe0c <flatcc_verify_vector_field@@Base+0xa0>
   2fdc0:	ldr	r5, [r5, #4]
   2fdc4:	add	r4, r1, #4
   2fdc8:	cmp	r4, r5
   2fdcc:	bhi	2fe0c <flatcc_verify_vector_field@@Base+0xa0>
   2fdd0:	sub	r2, r2, #1
   2fdd4:	orr	r2, r2, #3
   2fdd8:	tst	r4, r2
   2fddc:	bne	2fe0c <flatcc_verify_vector_field@@Base+0xa0>
   2fde0:	ldr	r4, [fp, #12]
   2fde4:	ldr	r2, [r3, r1]
   2fde8:	mov	r0, #25
   2fdec:	cmp	r2, r4
   2fdf0:	bhi	2fe0c <flatcc_verify_vector_field@@Base+0xa0>
   2fdf4:	mul	r2, r2, r6
   2fdf8:	sub	r0, r5, r1
   2fdfc:	sub	r1, r0, #4
   2fe00:	mov	r0, #0
   2fe04:	cmp	r1, r2
   2fe08:	movwcc	r0, #26
   2fe0c:	sub	sp, fp, #16
   2fe10:	pop	{r4, r5, r6, sl, fp, pc}

0002fe14 <flatcc_verify_string_vector_field@@Base>:
   2fe14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2fe18:	add	fp, sp, #24
   2fe1c:	sub	sp, sp, #8
   2fe20:	add	r3, sp, #4
   2fe24:	mov	r4, r0
   2fe28:	bl	2fcec <flatcc_verify_string_field@@Base+0x8c>
   2fe2c:	cmp	r0, #0
   2fe30:	bne	2ff40 <flatcc_verify_string_vector_field@@Base+0x12c>
   2fe34:	ldr	r1, [sp, #4]
   2fe38:	cmp	r1, #0
   2fe3c:	beq	2ff40 <flatcc_verify_string_vector_field@@Base+0x12c>
   2fe40:	ldr	r3, [r4]
   2fe44:	mov	r0, #16
   2fe48:	ldr	r2, [r3, r1]
   2fe4c:	add	r5, r2, r1
   2fe50:	cmp	r5, r1
   2fe54:	bls	2ff40 <flatcc_verify_string_vector_field@@Base+0x12c>
   2fe58:	ldr	ip, [r4, #4]
   2fe5c:	add	r7, r5, #4
   2fe60:	cmp	r7, ip
   2fe64:	bhi	2ff40 <flatcc_verify_string_vector_field@@Base+0x12c>
   2fe68:	ands	r7, r7, #3
   2fe6c:	bne	2ff40 <flatcc_verify_string_vector_field@@Base+0x12c>
   2fe70:	ldr	lr, [r3, r5]
   2fe74:	mov	r0, #25
   2fe78:	cmn	lr, #-1073741823	; 0xc0000001
   2fe7c:	bhi	2ff40 <flatcc_verify_string_vector_field@@Base+0x12c>
   2fe80:	sub	r0, ip, r5
   2fe84:	sub	r4, r0, #4
   2fe88:	mov	r0, #26
   2fe8c:	cmp	r4, lr, lsl #2
   2fe90:	bcc	2ff40 <flatcc_verify_string_vector_field@@Base+0x12c>
   2fe94:	cmp	lr, #0
   2fe98:	beq	2ff2c <flatcc_verify_string_vector_field@@Base+0x118>
   2fe9c:	sub	r0, ip, r2
   2fea0:	add	r3, r3, r2
   2fea4:	sub	r0, r0, r1
   2fea8:	sub	r8, r0, #8
   2feac:	add	r0, r3, r1
   2feb0:	add	r7, r1, r2
   2feb4:	ldr	r5, [r0, #4]
   2feb8:	mov	r0, #17
   2febc:	add	r6, r7, r5
   2fec0:	add	r4, r6, #4
   2fec4:	tst	r4, #3
   2fec8:	bne	2ff40 <flatcc_verify_string_vector_field@@Base+0x12c>
   2fecc:	add	r7, r7, #4
   2fed0:	cmp	r4, r7
   2fed4:	bls	2ff40 <flatcc_verify_string_vector_field@@Base+0x12c>
   2fed8:	add	r4, r6, #8
   2fedc:	cmp	ip, r4
   2fee0:	bcc	2ff40 <flatcc_verify_string_vector_field@@Base+0x12c>
   2fee4:	add	r0, r1, r5
   2fee8:	sub	r4, r8, r5
   2feec:	add	r0, r3, r0
   2fef0:	ldr	r0, [r0, #4]
   2fef4:	add	r6, r0, #1
   2fef8:	cmp	r4, r6
   2fefc:	bcc	2ff34 <flatcc_verify_string_vector_field@@Base+0x120>
   2ff00:	add	r0, r5, r0
   2ff04:	add	r0, r1, r0
   2ff08:	add	r0, r3, r0
   2ff0c:	ldrb	r0, [r0, #8]
   2ff10:	cmp	r0, #0
   2ff14:	bne	2ff3c <flatcc_verify_string_vector_field@@Base+0x128>
   2ff18:	subs	lr, lr, #1
   2ff1c:	sub	r8, r8, #4
   2ff20:	add	r2, r2, #4
   2ff24:	add	r3, r3, #4
   2ff28:	bne	2feac <flatcc_verify_string_vector_field@@Base+0x98>
   2ff2c:	mov	r0, #0
   2ff30:	b	2ff40 <flatcc_verify_string_vector_field@@Base+0x12c>
   2ff34:	mov	r0, #8
   2ff38:	b	2ff40 <flatcc_verify_string_vector_field@@Base+0x12c>
   2ff3c:	mov	r0, #7
   2ff40:	sub	sp, fp, #24
   2ff44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002ff48 <flatcc_verify_table_field@@Base>:
   2ff48:	push	{r4, r5, r6, sl, fp, lr}
   2ff4c:	add	fp, sp, #16
   2ff50:	sub	sp, sp, #32
   2ff54:	mov	r6, r3
   2ff58:	add	r3, sp, #4
   2ff5c:	mov	r5, r0
   2ff60:	bl	2fcec <flatcc_verify_string_field@@Base+0x8c>
   2ff64:	cmp	r0, #0
   2ff68:	bne	30040 <flatcc_verify_table_field@@Base+0xf8>
   2ff6c:	ldr	r4, [sp, #4]
   2ff70:	cmp	r4, #0
   2ff74:	beq	30040 <flatcc_verify_table_field@@Base+0xf8>
   2ff78:	ldm	r5, {r1, r2, r3}
   2ff7c:	subs	r3, r3, #1
   2ff80:	ldr	r0, [r1, r4]
   2ff84:	str	r3, [sp, #16]
   2ff88:	beq	3003c <flatcc_verify_table_field@@Base+0xf4>
   2ff8c:	add	r3, r0, r4
   2ff90:	mov	r0, #15
   2ff94:	tst	r3, #3
   2ff98:	bne	30040 <flatcc_verify_table_field@@Base+0xf8>
   2ff9c:	cmp	r3, r4
   2ffa0:	bls	30040 <flatcc_verify_table_field@@Base+0xf8>
   2ffa4:	add	r5, r3, #4
   2ffa8:	cmp	r5, r2
   2ffac:	bhi	30040 <flatcc_verify_table_field@@Base+0xf8>
   2ffb0:	str	r3, [sp, #24]
   2ffb4:	ldr	r0, [r1, r3]
   2ffb8:	sub	r5, r3, r0
   2ffbc:	mov	r0, #29
   2ffc0:	tst	r5, #-2147483647	; 0x80000001
   2ffc4:	bne	30040 <flatcc_verify_table_field@@Base+0xf8>
   2ffc8:	add	lr, r5, #2
   2ffcc:	mov	r0, #27
   2ffd0:	cmp	lr, r2
   2ffd4:	bhi	30040 <flatcc_verify_table_field@@Base+0xf8>
   2ffd8:	mov	ip, r1
   2ffdc:	mov	r0, #30
   2ffe0:	ldrh	r4, [ip, r5]!
   2ffe4:	tst	r4, #1
   2ffe8:	strh	r4, [sp, #30]
   2ffec:	bne	30040 <flatcc_verify_table_field@@Base+0xf8>
   2fff0:	add	r5, r5, r4
   2fff4:	cmp	r5, r2
   2fff8:	bhi	30040 <flatcc_verify_table_field@@Base+0xf8>
   2fffc:	mov	r0, #28
   30000:	cmp	r4, #4
   30004:	bcc	30040 <flatcc_verify_table_field@@Base+0xf8>
   30008:	add	r0, r1, lr
   3000c:	sub	r3, r2, r3
   30010:	ldrh	r5, [r0]
   30014:	mov	r0, #20
   30018:	cmp	r3, r5
   3001c:	strh	r5, [sp, #28]
   30020:	bcc	30040 <flatcc_verify_table_field@@Base+0xf8>
   30024:	add	r0, sp, #8
   30028:	str	r2, [sp, #12]
   3002c:	str	r1, [sp, #8]
   30030:	str	ip, [sp, #20]
   30034:	blx	r6
   30038:	b	30040 <flatcc_verify_table_field@@Base+0xf8>
   3003c:	mov	r0, #3
   30040:	sub	sp, fp, #16
   30044:	pop	{r4, r5, r6, sl, fp, pc}

00030048 <flatcc_verify_table_vector_field@@Base>:
   30048:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3004c:	add	fp, sp, #28
   30050:	sub	sp, sp, #44	; 0x2c
   30054:	mov	r9, r3
   30058:	add	r3, sp, #16
   3005c:	mov	r6, r0
   30060:	bl	2fcec <flatcc_verify_string_field@@Base+0x8c>
   30064:	mov	r5, r0
   30068:	cmp	r0, #0
   3006c:	bne	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   30070:	ldr	r0, [sp, #16]
   30074:	cmp	r0, #0
   30078:	beq	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   3007c:	ldr	r1, [r6, #8]
   30080:	cmp	r1, #1
   30084:	blt	302b8 <flatcc_verify_table_vector_field@@Base+0x270>
   30088:	ldr	r8, [r6]
   3008c:	mov	r5, #16
   30090:	ldr	r2, [r8, r0]
   30094:	add	r3, r2, r0
   30098:	cmp	r3, r0
   3009c:	bls	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   300a0:	ldr	r4, [r6, #4]
   300a4:	add	r6, r3, #4
   300a8:	cmp	r6, r4
   300ac:	bhi	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   300b0:	str	r4, [sp, #12]
   300b4:	ands	r4, r6, #3
   300b8:	bne	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   300bc:	ldr	sl, [r8, r3]
   300c0:	mov	r5, #25
   300c4:	cmn	sl, #-1073741823	; 0xc0000001
   300c8:	bhi	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   300cc:	ldr	r5, [sp, #12]
   300d0:	sub	r3, r5, r3
   300d4:	mov	r5, #26
   300d8:	sub	r3, r3, #4
   300dc:	cmp	r3, sl, lsl #2
   300e0:	bcc	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   300e4:	mov	r5, #0
   300e8:	cmp	sl, #0
   300ec:	beq	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   300f0:	ldr	r4, [sp, #12]
   300f4:	sub	r2, r4, r2
   300f8:	sub	r0, r2, r0
   300fc:	sub	r0, r0, #4
   30100:	str	r0, [sp, #8]
   30104:	sub	r0, r1, #2
   30108:	str	r0, [sp, #4]
   3010c:	ldr	r0, [sp, #4]
   30110:	ldr	r2, [r8, r6]
   30114:	cmp	r0, #0
   30118:	str	r0, [sp, #28]
   3011c:	beq	302b0 <flatcc_verify_table_vector_field@@Base+0x268>
   30120:	add	lr, r6, r2
   30124:	add	r7, lr, #4
   30128:	tst	lr, #3
   3012c:	bne	301fc <flatcc_verify_table_vector_field@@Base+0x1b4>
   30130:	cmp	lr, r6
   30134:	bls	301fc <flatcc_verify_table_vector_field@@Base+0x1b4>
   30138:	cmp	r7, r4
   3013c:	bhi	301fc <flatcc_verify_table_vector_field@@Base+0x1b4>
   30140:	str	lr, [sp, #36]	; 0x24
   30144:	add	r0, r8, r2
   30148:	ldr	r1, [r0, r6]
   3014c:	sub	r0, r2, r1
   30150:	add	r3, r6, r0
   30154:	tst	r3, #-2147483647	; 0x80000001
   30158:	bne	301fc <flatcc_verify_table_vector_field@@Base+0x1b4>
   3015c:	ldr	ip, [sp, #12]
   30160:	add	r4, r3, #2
   30164:	cmp	r4, ip
   30168:	ldr	r4, [sp, #12]
   3016c:	bhi	301fc <flatcc_verify_table_vector_field@@Base+0x1b4>
   30170:	add	r0, r8, r0
   30174:	add	r0, r0, r6
   30178:	ldrh	r0, [r0]
   3017c:	cmp	r0, #4
   30180:	strh	r0, [sp, #42]	; 0x2a
   30184:	bcc	301fc <flatcc_verify_table_vector_field@@Base+0x1b4>
   30188:	ands	r4, r0, #1
   3018c:	ldr	r4, [sp, #12]
   30190:	bne	301fc <flatcc_verify_table_vector_field@@Base+0x1b4>
   30194:	add	r0, r2, r0
   30198:	sub	r0, r0, r1
   3019c:	add	r0, r6, r0
   301a0:	cmp	r0, r4
   301a4:	bhi	301fc <flatcc_verify_table_vector_field@@Base+0x1b4>
   301a8:	add	r0, r8, r3
   301ac:	ldr	r3, [sp, #8]
   301b0:	ldrh	r1, [r0, #2]
   301b4:	sub	r2, r3, r2
   301b8:	cmp	r2, r1
   301bc:	strh	r1, [sp, #40]	; 0x28
   301c0:	bcc	301fc <flatcc_verify_table_vector_field@@Base+0x1b4>
   301c4:	str	r4, [sp, #24]
   301c8:	str	r8, [sp, #20]
   301cc:	str	r0, [sp, #32]
   301d0:	add	r0, sp, #20
   301d4:	blx	r9
   301d8:	cmp	r0, #0
   301dc:	bne	302c8 <flatcc_verify_table_vector_field@@Base+0x280>
   301e0:	ldr	r0, [sp, #8]
   301e4:	subs	sl, sl, #1
   301e8:	add	r6, r6, #4
   301ec:	sub	r0, r0, #4
   301f0:	str	r0, [sp, #8]
   301f4:	bne	3010c <flatcc_verify_table_vector_field@@Base+0xc4>
   301f8:	b	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   301fc:	ldr	r0, [sp, #4]
   30200:	str	r0, [sp, #28]
   30204:	mov	r5, #15
   30208:	tst	lr, #3
   3020c:	bne	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   30210:	cmp	lr, r6
   30214:	bls	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   30218:	cmp	r7, r4
   3021c:	bhi	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   30220:	str	lr, [sp, #36]	; 0x24
   30224:	mov	r5, #29
   30228:	ldr	r0, [r8, lr]
   3022c:	sub	r3, lr, r0
   30230:	tst	r3, #-2147483647	; 0x80000001
   30234:	bne	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   30238:	add	r2, r3, #2
   3023c:	mov	r5, #27
   30240:	cmp	r2, r4
   30244:	bhi	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   30248:	mov	r1, r8
   3024c:	mov	r5, #30
   30250:	ldrh	r6, [r1, r3]!
   30254:	tst	r6, #1
   30258:	strh	r6, [sp, #42]	; 0x2a
   3025c:	bne	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   30260:	add	r0, r3, r6
   30264:	cmp	r0, r4
   30268:	bhi	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   3026c:	mov	r5, #28
   30270:	cmp	r6, #4
   30274:	bcc	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   30278:	add	r0, r8, r2
   3027c:	sub	r2, r4, lr
   30280:	mov	r5, #20
   30284:	ldrh	r0, [r0]
   30288:	cmp	r2, r0
   3028c:	strh	r0, [sp, #40]	; 0x28
   30290:	bcc	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   30294:	add	r0, sp, #20
   30298:	str	r4, [sp, #24]
   3029c:	str	r8, [sp, #20]
   302a0:	str	r1, [sp, #32]
   302a4:	blx	r9
   302a8:	mov	r5, r0
   302ac:	b	302bc <flatcc_verify_table_vector_field@@Base+0x274>
   302b0:	mov	r0, #0
   302b4:	str	r0, [sp, #28]
   302b8:	mov	r5, #3
   302bc:	mov	r0, r5
   302c0:	sub	sp, fp, #28
   302c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   302c8:	ldr	r0, [r8, r6]
   302cc:	ldr	r1, [sp, #4]
   302d0:	add	lr, r0, r6
   302d4:	str	r1, [sp, #28]
   302d8:	add	r7, lr, #4
   302dc:	b	30204 <flatcc_verify_table_vector_field@@Base+0x1bc>

000302e0 <flatcc_verify_union_table@@Base>:
   302e0:	push	{r4, r5, r6, sl, fp, lr}
   302e4:	add	fp, sp, #16
   302e8:	sub	sp, sp, #24
   302ec:	ldr	r5, [r0, #16]
   302f0:	ldr	r2, [r0, #20]
   302f4:	ldr	ip, [r0]
   302f8:	ldr	r3, [r0, #4]
   302fc:	ldr	r0, [r0, #8]
   30300:	subs	r0, r0, #1
   30304:	str	r0, [sp, #8]
   30308:	beq	303bc <flatcc_verify_union_table@@Base+0xdc>
   3030c:	add	r2, r2, r5
   30310:	mov	r0, #15
   30314:	tst	r2, #3
   30318:	bne	303c0 <flatcc_verify_union_table@@Base+0xe0>
   3031c:	cmp	r2, r5
   30320:	bls	303c0 <flatcc_verify_union_table@@Base+0xe0>
   30324:	add	r6, r2, #4
   30328:	cmp	r6, r3
   3032c:	bhi	303c0 <flatcc_verify_union_table@@Base+0xe0>
   30330:	str	r2, [sp, #16]
   30334:	ldr	r0, [ip, r2]
   30338:	sub	r5, r2, r0
   3033c:	mov	r0, #29
   30340:	tst	r5, #-2147483647	; 0x80000001
   30344:	bne	303c0 <flatcc_verify_union_table@@Base+0xe0>
   30348:	add	r4, r5, #2
   3034c:	mov	r0, #27
   30350:	cmp	r4, r3
   30354:	bhi	303c0 <flatcc_verify_union_table@@Base+0xe0>
   30358:	mov	lr, ip
   3035c:	mov	r0, #30
   30360:	ldrh	r6, [lr, r5]!
   30364:	tst	r6, #1
   30368:	strh	r6, [sp, #22]
   3036c:	bne	303c0 <flatcc_verify_union_table@@Base+0xe0>
   30370:	add	r5, r5, r6
   30374:	cmp	r5, r3
   30378:	bhi	303c0 <flatcc_verify_union_table@@Base+0xe0>
   3037c:	mov	r0, #28
   30380:	cmp	r6, #4
   30384:	bcc	303c0 <flatcc_verify_union_table@@Base+0xe0>
   30388:	add	r0, ip, r4
   3038c:	sub	r2, r3, r2
   30390:	ldrh	r4, [r0]
   30394:	mov	r0, #20
   30398:	cmp	r2, r4
   3039c:	strh	r4, [sp, #20]
   303a0:	bcc	303c0 <flatcc_verify_union_table@@Base+0xe0>
   303a4:	mov	r0, sp
   303a8:	str	r3, [sp, #4]
   303ac:	str	ip, [sp]
   303b0:	str	lr, [sp, #12]
   303b4:	blx	r1
   303b8:	b	303c0 <flatcc_verify_union_table@@Base+0xe0>
   303bc:	mov	r0, #3
   303c0:	sub	sp, fp, #16
   303c4:	pop	{r4, r5, r6, sl, fp, pc}

000303c8 <flatcc_verify_union_struct@@Base>:
   303c8:	push	{fp, lr}
   303cc:	mov	fp, sp
   303d0:	ldr	lr, [r0, #20]
   303d4:	mov	r3, r0
   303d8:	mov	r0, #18
   303dc:	cmp	lr, #0
   303e0:	beq	3041c <flatcc_verify_union_struct@@Base+0x54>
   303e4:	ldr	ip, [r3, #4]
   303e8:	ldr	r3, [r3, #16]
   303ec:	add	r3, r3, lr
   303f0:	cmp	r3, ip
   303f4:	bhi	3041c <flatcc_verify_union_struct@@Base+0x54>
   303f8:	adds	r1, r3, r1
   303fc:	mov	r0, #10
   30400:	bcs	3041c <flatcc_verify_union_struct@@Base+0x54>
   30404:	mov	r0, #9
   30408:	cmp	r1, ip
   3040c:	pophi	{fp, pc}
   30410:	sub	r0, r2, #1
   30414:	ands	r0, r3, r0
   30418:	movwne	r0, #11
   3041c:	pop	{fp, pc}

00030420 <flatcc_verify_union_string@@Base>:
   30420:	push	{fp, lr}
   30424:	mov	fp, sp
   30428:	mov	r1, r0
   3042c:	ldr	r3, [r0, #16]
   30430:	ldr	r0, [r0, #20]
   30434:	add	r2, r0, r3
   30438:	mov	r0, #17
   3043c:	tst	r2, #3
   30440:	bne	30488 <flatcc_verify_union_string@@Base+0x68>
   30444:	cmp	r2, r3
   30448:	bls	30488 <flatcc_verify_union_string@@Base+0x68>
   3044c:	ldr	r3, [r1, #4]
   30450:	add	ip, r2, #4
   30454:	cmp	r3, ip
   30458:	bcc	30488 <flatcc_verify_union_string@@Base+0x68>
   3045c:	ldr	r1, [r1]
   30460:	sub	lr, r3, ip
   30464:	mov	r0, #8
   30468:	ldr	r2, [r1, r2]
   3046c:	add	r3, r2, #1
   30470:	cmp	lr, r3
   30474:	popcc	{fp, pc}
   30478:	add	r0, r1, ip
   3047c:	ldrb	r0, [r0, r2]
   30480:	cmp	r0, #0
   30484:	movwne	r0, #7
   30488:	pop	{fp, pc}

0003048c <flatcc_verify_buffer_header@@Base>:
   3048c:	push	{r4, sl, fp, lr}
   30490:	add	fp, sp, #8
   30494:	sub	sp, sp, #8
   30498:	mov	r4, r0
   3049c:	mov	r0, #5
   304a0:	tst	r4, #3
   304a4:	bne	30500 <flatcc_verify_buffer_header@@Base+0x74>
   304a8:	mov	r0, #6
   304ac:	cmn	r1, #9
   304b0:	bhi	30500 <flatcc_verify_buffer_header@@Base+0x74>
   304b4:	mov	r0, #1
   304b8:	cmp	r1, #8
   304bc:	bcc	30500 <flatcc_verify_buffer_header@@Base+0x74>
   304c0:	cmp	r2, #0
   304c4:	beq	304fc <flatcc_verify_buffer_header@@Base+0x70>
   304c8:	mov	r0, #0
   304cc:	mov	r1, r2
   304d0:	mov	r2, #4
   304d4:	str	r0, [sp, #4]
   304d8:	add	r0, sp, #4
   304dc:	bl	14ef8 <strncpy@plt>
   304e0:	ldr	r1, [sp, #4]
   304e4:	cmp	r1, #0
   304e8:	ldrne	r2, [r4, #4]
   304ec:	movne	r0, #2
   304f0:	cmpne	r2, r1
   304f4:	moveq	r0, #0
   304f8:	b	30500 <flatcc_verify_buffer_header@@Base+0x74>
   304fc:	mov	r0, #0
   30500:	sub	sp, fp, #8
   30504:	pop	{r4, sl, fp, pc}

00030508 <flatcc_verify_typed_buffer_header@@Base>:
   30508:	mov	r3, r0
   3050c:	mov	r0, #5
   30510:	tst	r3, #3
   30514:	bne	30548 <flatcc_verify_typed_buffer_header@@Base+0x40>
   30518:	mov	r0, #6
   3051c:	cmn	r1, #9
   30520:	bhi	30548 <flatcc_verify_typed_buffer_header@@Base+0x40>
   30524:	mov	r0, #1
   30528:	cmp	r1, #8
   3052c:	bxcc	lr
   30530:	cmp	r2, #0
   30534:	beq	3054c <flatcc_verify_typed_buffer_header@@Base+0x44>
   30538:	ldr	r1, [r3, #4]
   3053c:	mov	r0, #2
   30540:	cmp	r1, r2
   30544:	moveq	r0, #0
   30548:	bx	lr
   3054c:	mov	r0, #0
   30550:	bx	lr

00030554 <flatcc_verify_struct_as_root@@Base>:
   30554:	push	{r4, r5, r6, r7, fp, lr}
   30558:	add	fp, sp, #16
   3055c:	mov	r5, r3
   30560:	mov	r6, r2
   30564:	mov	r4, r1
   30568:	mov	r7, r0
   3056c:	bl	3048c <flatcc_verify_buffer_header@@Base>
   30570:	cmp	r0, #0
   30574:	beq	3058c <flatcc_verify_struct_as_root@@Base+0x38>
   30578:	mov	r0, r7
   3057c:	mov	r1, r4
   30580:	mov	r2, r6
   30584:	pop	{r4, r5, r6, r7, fp, lr}
   30588:	b	3048c <flatcc_verify_buffer_header@@Base>
   3058c:	ldr	r1, [r7]
   30590:	mov	r0, #18
   30594:	sub	r2, r1, #1
   30598:	cmp	r2, r4
   3059c:	bcs	305c8 <flatcc_verify_struct_as_root@@Base+0x74>
   305a0:	adds	r2, r1, r5
   305a4:	mov	r0, #10
   305a8:	bcs	305c8 <flatcc_verify_struct_as_root@@Base+0x74>
   305ac:	mov	r0, #9
   305b0:	cmp	r2, r4
   305b4:	bhi	305c8 <flatcc_verify_struct_as_root@@Base+0x74>
   305b8:	ldr	r0, [fp, #8]
   305bc:	sub	r0, r0, #1
   305c0:	ands	r0, r1, r0
   305c4:	movwne	r0, #11
   305c8:	pop	{r4, r5, r6, r7, fp, pc}

000305cc <flatcc_verify_struct_as_typed_root@@Base>:
   305cc:	push	{fp, lr}
   305d0:	mov	fp, sp
   305d4:	mov	ip, r0
   305d8:	mov	r0, #5
   305dc:	tst	ip, #3
   305e0:	bne	30650 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   305e4:	mov	r0, #6
   305e8:	cmn	r1, #9
   305ec:	bhi	30650 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   305f0:	mov	r0, #1
   305f4:	cmp	r1, #8
   305f8:	bcc	30650 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   305fc:	cmp	r2, #0
   30600:	beq	30614 <flatcc_verify_struct_as_typed_root@@Base+0x48>
   30604:	ldr	lr, [ip, #4]
   30608:	mov	r0, #2
   3060c:	cmp	lr, r2
   30610:	bne	30650 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   30614:	ldr	ip, [ip]
   30618:	mov	r0, #18
   3061c:	sub	r2, ip, #1
   30620:	cmp	r2, r1
   30624:	bcs	30650 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   30628:	adds	r3, ip, r3
   3062c:	mov	r0, #10
   30630:	bcs	30650 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   30634:	mov	r0, #9
   30638:	cmp	r3, r1
   3063c:	pophi	{fp, pc}
   30640:	ldr	r0, [fp, #8]
   30644:	sub	r0, r0, #1
   30648:	ands	r0, ip, r0
   3064c:	movwne	r0, #11
   30650:	pop	{fp, pc}

00030654 <flatcc_verify_table_as_root@@Base>:
   30654:	push	{r4, r5, r6, r7, fp, lr}
   30658:	add	fp, sp, #16
   3065c:	sub	sp, sp, #24
   30660:	mov	r4, r3
   30664:	mov	r7, r2
   30668:	mov	r5, r1
   3066c:	mov	r6, r0
   30670:	bl	3048c <flatcc_verify_buffer_header@@Base>
   30674:	cmp	r0, #0
   30678:	beq	30694 <flatcc_verify_table_as_root@@Base+0x40>
   3067c:	mov	r0, r6
   30680:	mov	r1, r5
   30684:	mov	r2, r7
   30688:	sub	sp, fp, #16
   3068c:	pop	{r4, r5, r6, r7, fp, lr}
   30690:	b	3048c <flatcc_verify_buffer_header@@Base>
   30694:	ldr	r1, [r6]
   30698:	mov	r0, #99	; 0x63
   3069c:	str	r0, [sp, #8]
   306a0:	mov	r0, #15
   306a4:	tst	r1, #3
   306a8:	bne	30748 <flatcc_verify_table_as_root@@Base+0xf4>
   306ac:	cmp	r1, #0
   306b0:	beq	30748 <flatcc_verify_table_as_root@@Base+0xf4>
   306b4:	add	r2, r1, #4
   306b8:	cmp	r2, r5
   306bc:	bhi	30748 <flatcc_verify_table_as_root@@Base+0xf4>
   306c0:	str	r1, [sp, #16]
   306c4:	ldr	r0, [r6, r1]
   306c8:	sub	r7, r1, r0
   306cc:	mov	r0, #29
   306d0:	tst	r7, #-2147483647	; 0x80000001
   306d4:	bne	30748 <flatcc_verify_table_as_root@@Base+0xf4>
   306d8:	add	r3, r7, #2
   306dc:	mov	r0, #27
   306e0:	cmp	r3, r5
   306e4:	bhi	30748 <flatcc_verify_table_as_root@@Base+0xf4>
   306e8:	mov	ip, r6
   306ec:	mov	r0, #30
   306f0:	ldrh	r2, [ip, r7]!
   306f4:	tst	r2, #1
   306f8:	strh	r2, [sp, #22]
   306fc:	bne	30748 <flatcc_verify_table_as_root@@Base+0xf4>
   30700:	add	r7, r7, r2
   30704:	cmp	r7, r5
   30708:	bhi	30748 <flatcc_verify_table_as_root@@Base+0xf4>
   3070c:	mov	r0, #28
   30710:	cmp	r2, #4
   30714:	bcc	30748 <flatcc_verify_table_as_root@@Base+0xf4>
   30718:	add	r0, r6, r3
   3071c:	sub	r1, r5, r1
   30720:	ldrh	r2, [r0]
   30724:	mov	r0, #20
   30728:	cmp	r1, r2
   3072c:	strh	r2, [sp, #20]
   30730:	bcc	30748 <flatcc_verify_table_as_root@@Base+0xf4>
   30734:	mov	r0, sp
   30738:	str	r5, [sp, #4]
   3073c:	str	r6, [sp]
   30740:	str	ip, [sp, #12]
   30744:	blx	r4
   30748:	sub	sp, fp, #16
   3074c:	pop	{r4, r5, r6, r7, fp, pc}

00030750 <flatcc_verify_table_as_typed_root@@Base>:
   30750:	push	{r4, r5, r6, sl, fp, lr}
   30754:	add	fp, sp, #16
   30758:	sub	sp, sp, #24
   3075c:	mov	ip, #5
   30760:	tst	r0, #3
   30764:	bne	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30768:	mov	ip, #6
   3076c:	cmn	r1, #9
   30770:	bhi	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30774:	mov	ip, #1
   30778:	cmp	r1, #8
   3077c:	bcc	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30780:	cmp	r2, #0
   30784:	beq	30798 <flatcc_verify_table_as_typed_root@@Base+0x48>
   30788:	ldr	r6, [r0, #4]
   3078c:	mov	ip, #2
   30790:	cmp	r6, r2
   30794:	bne	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30798:	ldr	r2, [r0]
   3079c:	mov	r6, #99	; 0x63
   307a0:	mov	ip, #15
   307a4:	str	r6, [sp, #8]
   307a8:	tst	r2, #3
   307ac:	bne	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   307b0:	cmp	r2, #0
   307b4:	beq	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   307b8:	add	r6, r2, #4
   307bc:	cmp	r6, r1
   307c0:	bhi	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   307c4:	str	r2, [sp, #16]
   307c8:	mov	ip, #29
   307cc:	ldr	r6, [r0, r2]
   307d0:	sub	r5, r2, r6
   307d4:	tst	r5, #-2147483647	; 0x80000001
   307d8:	bne	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   307dc:	add	r4, r5, #2
   307e0:	mov	ip, #27
   307e4:	cmp	r4, r1
   307e8:	bhi	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   307ec:	mov	lr, r0
   307f0:	mov	ip, #30
   307f4:	ldrh	r6, [lr, r5]!
   307f8:	tst	r6, #1
   307fc:	strh	r6, [sp, #22]
   30800:	bne	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30804:	add	r5, r5, r6
   30808:	cmp	r5, r1
   3080c:	bhi	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30810:	mov	ip, #28
   30814:	cmp	r6, #4
   30818:	bcc	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   3081c:	add	r6, r0, r4
   30820:	sub	r2, r1, r2
   30824:	mov	ip, #20
   30828:	ldrh	r4, [r6]
   3082c:	cmp	r2, r4
   30830:	strh	r4, [sp, #20]
   30834:	bcc	3084c <flatcc_verify_table_as_typed_root@@Base+0xfc>
   30838:	stm	sp, {r0, r1}
   3083c:	mov	r0, sp
   30840:	str	lr, [sp, #12]
   30844:	blx	r3
   30848:	mov	ip, r0
   3084c:	mov	r0, ip
   30850:	sub	sp, fp, #16
   30854:	pop	{r4, r5, r6, sl, fp, pc}

00030858 <flatcc_verify_struct_as_nested_root@@Base>:
   30858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3085c:	add	fp, sp, #28
   30860:	sub	sp, sp, #12
   30864:	ldr	r9, [fp, #12]
   30868:	mov	r8, r3
   3086c:	mov	r5, #1
   30870:	mvn	sl, #0
   30874:	mov	r4, r2
   30878:	mov	r7, r1
   3087c:	mov	r6, r0
   30880:	stm	sp, {r5, sl}
   30884:	mov	r3, r9
   30888:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   3088c:	cmp	r0, #0
   30890:	beq	308b0 <flatcc_verify_struct_as_nested_root@@Base+0x58>
   30894:	mov	r0, r6
   30898:	mov	r1, r7
   3089c:	mov	r2, r4
   308a0:	mov	r3, r9
   308a4:	stm	sp, {r5, sl}
   308a8:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   308ac:	b	30914 <flatcc_verify_struct_as_nested_root@@Base+0xbc>
   308b0:	mov	r0, #4
   308b4:	ldrh	r2, [r6, #22]
   308b8:	add	r0, r0, r7, lsl #1
   308bc:	uxth	r1, r0
   308c0:	cmp	r1, r2
   308c4:	bcs	30910 <flatcc_verify_struct_as_nested_root@@Base+0xb8>
   308c8:	ldr	r1, [r6, #12]
   308cc:	uxtah	r0, r1, r0
   308d0:	ldrh	r0, [r0]
   308d4:	cmp	r0, #0
   308d8:	beq	30910 <flatcc_verify_struct_as_nested_root@@Base+0xb8>
   308dc:	ldr	r1, [r6]
   308e0:	ldr	r2, [r6, #16]
   308e4:	add	r1, r1, r2
   308e8:	adds	r0, r1, r0
   308ec:	beq	30910 <flatcc_verify_struct_as_nested_root@@Base+0xb8>
   308f0:	ldr	r2, [r0]
   308f4:	ldr	r3, [fp, #8]
   308f8:	ldr	r1, [r2, r0]!
   308fc:	str	r9, [sp]
   30900:	add	r0, r2, #4
   30904:	mov	r2, r8
   30908:	bl	30554 <flatcc_verify_struct_as_root@@Base>
   3090c:	b	30914 <flatcc_verify_struct_as_nested_root@@Base+0xbc>
   30910:	mov	r0, #0
   30914:	sub	sp, fp, #28
   30918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003091c <flatcc_verify_table_as_nested_root@@Base>:
   3091c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30920:	add	fp, sp, #28
   30924:	sub	sp, sp, #36	; 0x24
   30928:	mvn	r9, #0
   3092c:	mov	sl, #1
   30930:	mov	r8, r3
   30934:	mov	r5, r2
   30938:	mov	r4, r1
   3093c:	mov	r6, r0
   30940:	str	sl, [sp]
   30944:	str	r9, [sp, #4]
   30948:	ldr	r7, [fp, #8]
   3094c:	mov	r3, r7
   30950:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   30954:	cmp	r0, #0
   30958:	beq	3097c <flatcc_verify_table_as_nested_root@@Base+0x60>
   3095c:	mov	r0, r6
   30960:	mov	r1, r4
   30964:	mov	r2, r5
   30968:	mov	r3, r7
   3096c:	str	sl, [sp]
   30970:	str	r9, [sp, #4]
   30974:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   30978:	b	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   3097c:	mov	r0, #4
   30980:	ldrh	r3, [r6, #22]
   30984:	add	r1, r0, r4, lsl #1
   30988:	mov	r0, #0
   3098c:	uxth	r2, r1
   30990:	cmp	r2, r3
   30994:	bcs	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   30998:	ldr	r2, [r6, #12]
   3099c:	uxtah	r1, r2, r1
   309a0:	ldrh	r1, [r1]
   309a4:	cmp	r1, #0
   309a8:	beq	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   309ac:	ldr	r2, [r6]
   309b0:	ldr	r3, [r6, #16]
   309b4:	add	r2, r2, r3
   309b8:	adds	r1, r2, r1
   309bc:	beq	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   309c0:	ldr	r0, [r1]
   309c4:	ldr	r7, [fp, #12]
   309c8:	mov	r2, r8
   309cc:	ldr	r4, [r0, r1]!
   309d0:	add	r5, r0, #4
   309d4:	mov	r0, r5
   309d8:	mov	r1, r4
   309dc:	bl	3048c <flatcc_verify_buffer_header@@Base>
   309e0:	cmp	r0, #0
   309e4:	beq	30a00 <flatcc_verify_table_as_nested_root@@Base+0xe4>
   309e8:	mov	r0, r5
   309ec:	mov	r1, r4
   309f0:	mov	r2, r8
   309f4:	sub	sp, fp, #28
   309f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   309fc:	b	3048c <flatcc_verify_buffer_header@@Base>
   30a00:	ldr	r0, [r6, #8]
   30a04:	ldr	r1, [r5]
   30a08:	subs	r0, r0, #1
   30a0c:	str	r0, [sp, #20]
   30a10:	beq	30ac0 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   30a14:	mov	r0, #15
   30a18:	tst	r1, #3
   30a1c:	bne	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   30a20:	cmp	r1, #0
   30a24:	beq	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   30a28:	add	r2, r1, #4
   30a2c:	cmp	r2, r4
   30a30:	bhi	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   30a34:	str	r1, [sp, #28]
   30a38:	ldr	r0, [r5, r1]
   30a3c:	sub	r6, r1, r0
   30a40:	mov	r0, #29
   30a44:	tst	r6, #-2147483647	; 0x80000001
   30a48:	bne	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   30a4c:	add	r3, r6, #2
   30a50:	mov	r0, #27
   30a54:	cmp	r3, r4
   30a58:	bhi	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   30a5c:	mov	ip, r5
   30a60:	mov	r0, #30
   30a64:	ldrh	r2, [ip, r6]!
   30a68:	tst	r2, #1
   30a6c:	strh	r2, [sp, #34]	; 0x22
   30a70:	bne	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   30a74:	add	r6, r6, r2
   30a78:	cmp	r6, r4
   30a7c:	bhi	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   30a80:	mov	r0, #28
   30a84:	cmp	r2, #4
   30a88:	bcc	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   30a8c:	add	r0, r5, r3
   30a90:	sub	r1, r4, r1
   30a94:	ldrh	r2, [r0]
   30a98:	mov	r0, #20
   30a9c:	cmp	r1, r2
   30aa0:	strh	r2, [sp, #32]
   30aa4:	bcc	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   30aa8:	add	r0, sp, #12
   30aac:	str	r4, [sp, #16]
   30ab0:	str	r5, [sp, #12]
   30ab4:	str	ip, [sp, #24]
   30ab8:	blx	r7
   30abc:	b	30ac4 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   30ac0:	mov	r0, #3
   30ac4:	sub	sp, fp, #28
   30ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00030acc <flatcc_verify_union_field@@Base>:
   30acc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30ad0:	add	fp, sp, #24
   30ad4:	sub	sp, sp, #32
   30ad8:	mov	r5, r0
   30adc:	mov	r0, #2
   30ae0:	mov	r8, r3
   30ae4:	lsl	r4, r1, #1
   30ae8:	add	r0, r0, r1, lsl #1
   30aec:	ldrh	r3, [r5, #22]
   30af0:	uxth	r7, r0
   30af4:	cmp	r7, r3
   30af8:	bcs	30bb4 <flatcc_verify_union_field@@Base+0xe8>
   30afc:	ldr	r7, [r5, #12]
   30b00:	uxtah	r0, r7, r0
   30b04:	ldrh	r9, [r0]
   30b08:	cmp	r9, #0
   30b0c:	beq	30bb4 <flatcc_verify_union_field@@Base+0xe8>
   30b10:	ldrh	r6, [r5, #20]
   30b14:	mov	r0, #13
   30b18:	cmp	r9, r6
   30b1c:	bcs	30be8 <flatcc_verify_union_field@@Base+0x11c>
   30b20:	add	r4, r4, #4
   30b24:	mov	r0, #1
   30b28:	uxth	r6, r4
   30b2c:	cmp	r6, r3
   30b30:	bcs	30b44 <flatcc_verify_union_field@@Base+0x78>
   30b34:	uxtah	r0, r7, r4
   30b38:	ldrh	r0, [r0]
   30b3c:	clz	r0, r0
   30b40:	lsr	r0, r0, #5
   30b44:	ldr	r3, [r5]
   30b48:	ldr	r7, [r5, #16]
   30b4c:	cmp	r0, #0
   30b50:	moveq	r0, #24
   30b54:	add	r7, r3, r7
   30b58:	ldrb	r3, [r7, r9]
   30b5c:	cmpeq	r3, #0
   30b60:	beq	30be8 <flatcc_verify_union_field@@Base+0x11c>
   30b64:	cmp	r3, #0
   30b68:	beq	30bf0 <flatcc_verify_union_field@@Base+0x124>
   30b6c:	add	r3, sp, #28
   30b70:	mov	r0, r5
   30b74:	bl	2fcec <flatcc_verify_string_field@@Base+0x8c>
   30b78:	cmp	r0, #0
   30b7c:	bne	30be8 <flatcc_verify_union_field@@Base+0x11c>
   30b80:	ldr	r1, [sp, #28]
   30b84:	cmp	r1, #0
   30b88:	beq	30be8 <flatcc_verify_union_field@@Base+0x11c>
   30b8c:	ldm	r5, {r0, r2, r3}
   30b90:	str	r1, [sp, #20]
   30b94:	stmib	sp, {r0, r2, r3}
   30b98:	ldr	r0, [r0, r1]
   30b9c:	str	r0, [sp, #24]
   30ba0:	ldrb	r0, [r7, r9]
   30ba4:	strb	r0, [sp, #16]
   30ba8:	add	r0, sp, #4
   30bac:	blx	r8
   30bb0:	b	30be8 <flatcc_verify_union_field@@Base+0x11c>
   30bb4:	add	r0, r4, #4
   30bb8:	uxth	r1, r0
   30bbc:	cmp	r1, r3
   30bc0:	bcs	30bdc <flatcc_verify_union_field@@Base+0x110>
   30bc4:	ldr	r1, [r5, #12]
   30bc8:	uxtah	r0, r1, r0
   30bcc:	ldrh	r1, [r0]
   30bd0:	mov	r0, #23
   30bd4:	cmp	r1, #0
   30bd8:	bne	30be8 <flatcc_verify_union_field@@Base+0x11c>
   30bdc:	cmp	r2, #0
   30be0:	movwne	r2, #21
   30be4:	mov	r0, r2
   30be8:	sub	sp, fp, #24
   30bec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30bf0:	mov	r0, #0
   30bf4:	b	30be8 <flatcc_verify_union_field@@Base+0x11c>

00030bf8 <flatcc_verify_union_vector_field@@Base>:
   30bf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30bfc:	add	fp, sp, #28
   30c00:	sub	sp, sp, #44	; 0x2c
   30c04:	mov	r6, r0
   30c08:	mov	sl, r1
   30c0c:	sub	r0, r1, #1
   30c10:	mov	r1, #4
   30c14:	mov	r9, r2
   30c18:	add	r7, r1, r0, lsl #1
   30c1c:	ldrh	r2, [r6, #22]
   30c20:	uxth	r4, r7
   30c24:	cmp	r4, r2
   30c28:	bcs	30c40 <flatcc_verify_union_vector_field@@Base+0x48>
   30c2c:	ldr	r5, [r6, #12]
   30c30:	uxtah	r5, r5, r7
   30c34:	ldrh	r5, [r5]
   30c38:	cmp	r5, #0
   30c3c:	bne	30c80 <flatcc_verify_union_vector_field@@Base+0x88>
   30c40:	add	r1, r1, sl, lsl #1
   30c44:	uxth	r5, r1
   30c48:	cmp	r5, r2
   30c4c:	bcs	30c74 <flatcc_verify_union_vector_field@@Base+0x7c>
   30c50:	cmp	r9, #0
   30c54:	beq	30c80 <flatcc_verify_union_vector_field@@Base+0x88>
   30c58:	ldr	r2, [r6, #12]
   30c5c:	mov	r5, #22
   30c60:	uxtah	r1, r2, r1
   30c64:	ldrh	r1, [r1]
   30c68:	cmp	r1, #0
   30c6c:	beq	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30c70:	b	30c80 <flatcc_verify_union_vector_field@@Base+0x88>
   30c74:	mov	r5, #22
   30c78:	cmp	r9, #0
   30c7c:	bne	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30c80:	uxth	r5, r0
   30c84:	mvn	r1, #0
   30c88:	str	r3, [sp, #12]
   30c8c:	mov	r8, #1
   30c90:	mov	r0, r6
   30c94:	mov	r2, r9
   30c98:	mov	r3, #1
   30c9c:	str	r1, [sp, #4]
   30ca0:	str	r8, [sp]
   30ca4:	mov	r1, r5
   30ca8:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   30cac:	cmp	r0, #0
   30cb0:	beq	30cdc <flatcc_verify_union_vector_field@@Base+0xe4>
   30cb4:	mvn	r0, #0
   30cb8:	mov	r1, r5
   30cbc:	mov	r2, r9
   30cc0:	mov	r3, #1
   30cc4:	str	r8, [sp]
   30cc8:	str	r0, [sp, #4]
   30ccc:	mov	r0, r6
   30cd0:	bl	2fd6c <flatcc_verify_vector_field@@Base>
   30cd4:	mov	r5, r0
   30cd8:	b	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30cdc:	ldrh	r0, [r6, #22]
   30ce0:	mov	r5, #0
   30ce4:	cmp	r4, r0
   30ce8:	bcs	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30cec:	ldr	r0, [r6, #12]
   30cf0:	uxtah	r0, r0, r7
   30cf4:	ldrh	r0, [r0]
   30cf8:	cmp	r0, #0
   30cfc:	beq	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30d00:	ldr	r1, [r6]
   30d04:	ldr	r2, [r6, #16]
   30d08:	ldr	r7, [sp, #12]
   30d0c:	add	r1, r1, r2
   30d10:	adds	r0, r1, r0
   30d14:	beq	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30d18:	ldr	r4, [r0]
   30d1c:	add	r3, sp, #16
   30d20:	mov	r1, sl
   30d24:	mov	r2, r9
   30d28:	ldr	r8, [r4, r0]!
   30d2c:	mov	r0, r6
   30d30:	bl	2fcec <flatcc_verify_string_field@@Base+0x8c>
   30d34:	mov	r5, r0
   30d38:	cmp	r0, #0
   30d3c:	bne	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30d40:	ldr	r1, [sp, #16]
   30d44:	cmp	r1, #0
   30d48:	beq	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30d4c:	ldr	r0, [r6, #8]
   30d50:	cmp	r0, #1
   30d54:	blt	30e30 <flatcc_verify_union_vector_field@@Base+0x238>
   30d58:	ldr	sl, [r6]
   30d5c:	mov	r5, #16
   30d60:	ldr	r2, [sl, r1]
   30d64:	add	r2, r2, r1
   30d68:	cmp	r2, r1
   30d6c:	bls	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30d70:	ldr	r1, [r6, #4]
   30d74:	add	r6, r2, #4
   30d78:	cmp	r6, r1
   30d7c:	bhi	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30d80:	ands	r3, r6, #3
   30d84:	bne	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30d88:	ldr	r3, [sl, r2]
   30d8c:	mov	r5, #25
   30d90:	cmn	r3, #-1073741823	; 0xc0000001
   30d94:	bhi	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30d98:	sub	r2, r1, r2
   30d9c:	mov	r5, #26
   30da0:	sub	r2, r2, #4
   30da4:	cmp	r2, r3, lsl #2
   30da8:	bcc	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30dac:	mov	r5, #34	; 0x22
   30db0:	cmp	r3, r8
   30db4:	bne	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30db8:	sub	r0, r0, #1
   30dbc:	mov	r5, #0
   30dc0:	cmp	r8, #0
   30dc4:	str	r0, [sp, #28]
   30dc8:	str	r1, [sp, #24]
   30dcc:	str	sl, [sp, #20]
   30dd0:	beq	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30dd4:	add	r4, r4, #4
   30dd8:	add	r9, sp, #20
   30ddc:	ldr	r1, [sl, r6]
   30de0:	ldrb	r0, [r4]
   30de4:	cmp	r1, #0
   30de8:	beq	30e14 <flatcc_verify_union_vector_field@@Base+0x21c>
   30dec:	cmp	r0, #0
   30df0:	beq	30e40 <flatcc_verify_union_vector_field@@Base+0x248>
   30df4:	str	r1, [sp, #40]	; 0x28
   30df8:	str	r6, [sp, #36]	; 0x24
   30dfc:	strb	r0, [sp, #32]
   30e00:	mov	r0, r9
   30e04:	blx	r7
   30e08:	cmp	r0, #0
   30e0c:	beq	30e1c <flatcc_verify_union_vector_field@@Base+0x224>
   30e10:	b	30e48 <flatcc_verify_union_vector_field@@Base+0x250>
   30e14:	cmp	r0, #0
   30e18:	bne	30e54 <flatcc_verify_union_vector_field@@Base+0x25c>
   30e1c:	add	r4, r4, #1
   30e20:	subs	r8, r8, #1
   30e24:	add	r6, r6, #4
   30e28:	bne	30ddc <flatcc_verify_union_vector_field@@Base+0x1e4>
   30e2c:	b	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30e30:	mov	r5, #3
   30e34:	mov	r0, r5
   30e38:	sub	sp, fp, #28
   30e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30e40:	mov	r5, #33	; 0x21
   30e44:	b	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30e48:	add	r0, sp, #20
   30e4c:	blx	r7
   30e50:	b	30cd4 <flatcc_verify_union_vector_field@@Base+0xdc>
   30e54:	mov	r5, #32
   30e58:	b	30e34 <flatcc_verify_union_vector_field@@Base+0x23c>
   30e5c:	andeq	r0, r0, r0

00030e60 <grisu3_diy_fp_encode_double@@Base>:
   30e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30e64:	add	fp, sp, #28
   30e68:	sub	sp, sp, #44	; 0x2c
   30e6c:	mov	r5, r2
   30e70:	mov	r2, r0
   30e74:	mov	r0, #0
   30e78:	mov	r9, r3
   30e7c:	mov	r3, r1
   30e80:	str	r0, [sp]
   30e84:	str	r0, [sp, #4]
   30e88:	add	r0, sp, #24
   30e8c:	bl	31218 <grisu3_diy_fp_encode_double@@Base+0x3b8>
   30e90:	ldr	r1, [fp, #8]
   30e94:	sub	r0, r5, r9
   30e98:	cmp	r1, #0
   30e9c:	movwne	r1, #1
   30ea0:	cmn	r0, #348	; 0x15c
   30ea4:	blt	31190 <grisu3_diy_fp_encode_double@@Base+0x330>
   30ea8:	cmp	r0, #348	; 0x15c
   30eac:	bge	311a8 <grisu3_diy_fp_encode_double@@Base+0x348>
   30eb0:	add	r2, r0, #348	; 0x15c
   30eb4:	movw	r6, #22760	; 0x58e8
   30eb8:	asr	r3, r2, #31
   30ebc:	movt	r6, #4
   30ec0:	add	r2, r2, r3, lsr #29
   30ec4:	mvn	r3, #14
   30ec8:	and	r2, r3, r2, lsl #1
   30ecc:	ldr	r8, [r6, r2]!
   30ed0:	ldrsh	r4, [r6, #10]
   30ed4:	cmp	r0, r4
   30ed8:	blt	311c0 <grisu3_diy_fp_encode_double@@Base+0x360>
   30edc:	add	r2, r4, #8
   30ee0:	cmp	r2, r0
   30ee4:	ble	311d8 <grisu3_diy_fp_encode_double@@Base+0x378>
   30ee8:	lsl	r5, r1, #2
   30eec:	ldr	r1, [sp, #32]
   30ef0:	ldr	r2, [sp, #24]
   30ef4:	ldr	r3, [sp, #28]
   30ef8:	ldr	ip, [sp, #36]	; 0x24
   30efc:	cmp	r0, r4
   30f00:	rsb	r7, r1, #0
   30f04:	lsl	sl, r5, r7
   30f08:	beq	30f6c <grisu3_diy_fp_encode_double@@Base+0x10c>
   30f0c:	mvn	r7, r4
   30f10:	add	r4, r0, r7
   30f14:	cmp	r4, #7
   30f18:	bcs	311f8 <grisu3_diy_fp_encode_double@@Base+0x398>
   30f1c:	movw	r0, #22648	; 0x5878
   30f20:	stm	sp, {r1, ip}
   30f24:	movt	r0, #4
   30f28:	ldr	r1, [r0, r4, lsl #4]!
   30f2c:	str	r1, [sp, #8]
   30f30:	ldmib	r0, {r1, r7}
   30f34:	ldr	r0, [r0, #12]
   30f38:	str	r7, [sp, #16]
   30f3c:	str	r1, [sp, #12]
   30f40:	str	r0, [sp, #20]
   30f44:	add	r0, sp, #24
   30f48:	bl	312bc <grisu3_diy_fp_encode_double@@Base+0x45c>
   30f4c:	add	r0, r9, r4
   30f50:	ldr	r2, [sp, #24]
   30f54:	ldr	r3, [sp, #28]
   30f58:	ldr	r1, [sp, #32]
   30f5c:	ldr	ip, [sp, #36]	; 0x24
   30f60:	add	r0, r0, #1
   30f64:	cmp	r0, #19
   30f68:	addgt	sl, sl, #4
   30f6c:	ldr	r0, [r6, #4]
   30f70:	ldrsh	r7, [r6, #8]
   30f74:	stm	sp, {r1, ip}
   30f78:	mov	r6, #0
   30f7c:	str	r8, [sp, #8]
   30f80:	str	r6, [sp, #20]
   30f84:	str	r0, [sp, #12]
   30f88:	add	r0, sp, #24
   30f8c:	str	r7, [sp, #16]
   30f90:	bl	312bc <grisu3_diy_fp_encode_double@@Base+0x45c>
   30f94:	add	r5, sp, #24
   30f98:	ldr	r0, [sp, #36]	; 0x24
   30f9c:	ldm	r5, {r2, r3, r5}
   30fa0:	str	r5, [sp]
   30fa4:	str	r0, [sp, #4]
   30fa8:	add	r0, sp, #24
   30fac:	bl	31218 <grisu3_diy_fp_encode_double@@Base+0x3b8>
   30fb0:	ldr	r7, [sp, #32]
   30fb4:	cmp	sl, #0
   30fb8:	mov	r0, #9
   30fbc:	ldr	r4, [sp, #24]
   30fc0:	ldr	r3, [sp, #28]
   30fc4:	movweq	r0, #8
   30fc8:	add	r0, r0, sl
   30fcc:	sub	r1, r5, r7
   30fd0:	lsl	lr, r0, r1
   30fd4:	movw	r1, #64462	; 0xfbce
   30fd8:	add	r0, r7, #64	; 0x40
   30fdc:	movt	r1, #65535	; 0xffff
   30fe0:	add	r2, r1, #63	; 0x3f
   30fe4:	cmp	r0, r2
   30fe8:	bgt	31038 <grisu3_diy_fp_encode_double@@Base+0x1d8>
   30fec:	mvn	r2, #1072	; 0x430
   30ff0:	mov	r6, #64	; 0x40
   30ff4:	cmp	r0, r2
   30ff8:	blt	31008 <grisu3_diy_fp_encode_double@@Base+0x1a8>
   30ffc:	sub	r6, r1, r7
   31000:	cmp	r6, #61	; 0x3d
   31004:	blt	31038 <grisu3_diy_fp_encode_double@@Base+0x1d8>
   31008:	sub	r0, r6, #62	; 0x3e
   3100c:	mov	r2, #9
   31010:	rsb	r5, r6, #94	; 0x5e
   31014:	add	lr, r2, lr, asr r0
   31018:	lsr	r2, r4, r0
   3101c:	add	r7, r0, r7
   31020:	orr	r4, r2, r3, lsl r5
   31024:	subs	r2, r6, #94	; 0x5e
   31028:	mov	r6, #62	; 0x3e
   3102c:	lsrpl	r4, r3, r2
   31030:	lsr	r3, r3, r0
   31034:	movwpl	r3, #0
   31038:	lsr	r0, r4, r6
   3103c:	rsb	r2, r6, #32
   31040:	add	r5, r7, r6
   31044:	mov	r7, #1
   31048:	orr	r2, r0, r3, lsl r2
   3104c:	subs	r0, r6, #32
   31050:	lsrpl	r2, r3, r0
   31054:	sub	r0, r6, #1
   31058:	lsr	r3, r3, r6
   3105c:	movwpl	r3, #0
   31060:	lsl	r7, r7, r0
   31064:	subs	r0, r6, #33	; 0x21
   31068:	movwpl	r7, #0
   3106c:	add	r8, lr, r7, lsl #3
   31070:	cmp	r6, r8
   31074:	blt	31094 <grisu3_diy_fp_encode_double@@Base+0x234>
   31078:	adds	r2, r2, #1
   3107c:	adc	r3, r3, #0
   31080:	tst	r3, #2097152	; 0x200000
   31084:	beq	31094 <grisu3_diy_fp_encode_double@@Base+0x234>
   31088:	lsrs	r3, r3, #1
   3108c:	rrx	r2, r2
   31090:	add	r5, r5, #1
   31094:	and	r6, r7, r4
   31098:	cmp	r3, #2097152	; 0x200000
   3109c:	bcc	310c0 <grisu3_diy_fp_encode_double@@Base+0x260>
   310a0:	mov	r4, #0
   310a4:	lsrs	r0, r3, #1
   310a8:	rrx	r2, r2
   310ac:	cmp	r4, r3, lsr #22
   310b0:	add	r5, r5, #1
   310b4:	mov	r3, r0
   310b8:	bne	310a4 <grisu3_diy_fp_encode_double@@Base+0x244>
   310bc:	b	310c4 <grisu3_diy_fp_encode_double@@Base+0x264>
   310c0:	mov	r0, r3
   310c4:	ldr	ip, [fp, #12]
   310c8:	vmov.i32	d16, #0	; 0x00000000
   310cc:	lsl	r9, r7, #3
   310d0:	lsl	r6, r6, #3
   310d4:	cmp	r5, r1
   310d8:	blt	31164 <grisu3_diy_fp_encode_double@@Base+0x304>
   310dc:	and	r3, r0, #1048576	; 0x100000
   310e0:	mov	r4, #1
   310e4:	cmp	r5, r1
   310e8:	eor	r7, r4, r3, lsr #20
   310ec:	beq	31128 <grisu3_diy_fp_encode_double@@Base+0x2c8>
   310f0:	cmp	r3, #0
   310f4:	bne	31128 <grisu3_diy_fp_encode_double@@Base+0x2c8>
   310f8:	mov	r4, #1
   310fc:	lsl	r3, r0, #1
   31100:	ands	r0, r0, #524288	; 0x80000
   31104:	sub	r5, r5, #1
   31108:	orr	r3, r3, r2, lsr #31
   3110c:	eor	r7, r4, r0, lsr #19
   31110:	lsl	r2, r2, #1
   31114:	bne	3112c <grisu3_diy_fp_encode_double@@Base+0x2cc>
   31118:	cmp	r5, r1
   3111c:	mov	r0, r3
   31120:	bgt	310fc <grisu3_diy_fp_encode_double@@Base+0x29c>
   31124:	b	3112c <grisu3_diy_fp_encode_double@@Base+0x2cc>
   31128:	mov	r3, r0
   3112c:	cmp	r5, r1
   31130:	bne	31144 <grisu3_diy_fp_encode_double@@Base+0x2e4>
   31134:	mov	r0, #0
   31138:	cmp	r7, #0
   3113c:	mov	r1, #0
   31140:	bne	31154 <grisu3_diy_fp_encode_double@@Base+0x2f4>
   31144:	movw	r0, #1075	; 0x433
   31148:	add	r0, r5, r0
   3114c:	lsl	r1, r0, #20
   31150:	mov	r0, #0
   31154:	bfc	r3, #20, #12
   31158:	orr	r0, r0, r2
   3115c:	orr	r1, r1, r3
   31160:	vmov	d16, r0, r1
   31164:	cmp	r6, r8
   31168:	sub	r2, r9, lr
   3116c:	mov	r1, #0
   31170:	mov	r0, #0
   31174:	vstr	d16, [ip]
   31178:	movwge	r1, #1
   3117c:	cmp	r2, r6
   31180:	movwge	r0, #1
   31184:	orr	r0, r1, r0
   31188:	sub	sp, fp, #28
   3118c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31190:	movw	r0, #26274	; 0x66a2
   31194:	movw	r1, #24832	; 0x6100
   31198:	movw	r3, #26305	; 0x66c1
   3119c:	mov	r2, #80	; 0x50
   311a0:	movt	r0, #4
   311a4:	b	311ec <grisu3_diy_fp_encode_double@@Base+0x38c>
   311a8:	movw	r0, #26362	; 0x66fa
   311ac:	movw	r1, #24832	; 0x6100
   311b0:	movw	r3, #26305	; 0x66c1
   311b4:	mov	r2, #81	; 0x51
   311b8:	movt	r0, #4
   311bc:	b	311ec <grisu3_diy_fp_encode_double@@Base+0x38c>
   311c0:	movw	r0, #26405	; 0x6725
   311c4:	movw	r1, #24832	; 0x6100
   311c8:	movw	r3, #26305	; 0x66c1
   311cc:	mov	r2, #88	; 0x58
   311d0:	movt	r0, #4
   311d4:	b	311ec <grisu3_diy_fp_encode_double@@Base+0x38c>
   311d8:	movw	r0, #26420	; 0x6734
   311dc:	movw	r1, #24832	; 0x6100
   311e0:	movw	r3, #26305	; 0x66c1
   311e4:	mov	r2, #89	; 0x59
   311e8:	movt	r0, #4
   311ec:	movt	r1, #4
   311f0:	movt	r3, #4
   311f4:	bl	14f40 <__assert_fail@plt>
   311f8:	movw	r0, #24804	; 0x60e4
   311fc:	movw	r1, #24832	; 0x6100
   31200:	movw	r3, #24919	; 0x6157
   31204:	mov	r2, #185	; 0xb9
   31208:	movt	r0, #4
   3120c:	movt	r1, #4
   31210:	movt	r3, #4
   31214:	bl	14f40 <__assert_fail@plt>
   31218:	push	{r4, sl, fp, lr}
   3121c:	add	fp, sp, #8
   31220:	orrs	r1, r2, r3
   31224:	beq	3129c <grisu3_diy_fp_encode_double@@Base+0x43c>
   31228:	ldr	r1, [fp, #8]
   3122c:	mov	r4, #0
   31230:	cmp	r4, r3, lsr #22
   31234:	bne	31250 <grisu3_diy_fp_encode_double@@Base+0x3f0>
   31238:	lsl	r3, r3, #10
   3123c:	sub	r1, r1, #10
   31240:	orr	r3, r3, r2, lsr #22
   31244:	lsl	r2, r2, #10
   31248:	cmp	r3, #4194304	; 0x400000
   3124c:	bcc	31238 <grisu3_diy_fp_encode_double@@Base+0x3d8>
   31250:	ldr	ip, [fp, #12]
   31254:	cmp	r3, #0
   31258:	bmi	31284 <grisu3_diy_fp_encode_double@@Base+0x424>
   3125c:	mvn	lr, #0
   31260:	lsl	r3, r3, #1
   31264:	lsl	r4, r2, #1
   31268:	sub	r1, r1, #1
   3126c:	orr	r3, r3, r2, lsr #31
   31270:	subs	r2, lr, r2, lsl #1
   31274:	sbcs	r2, lr, r3
   31278:	mov	r2, r4
   3127c:	blt	31260 <grisu3_diy_fp_encode_double@@Base+0x400>
   31280:	b	31288 <grisu3_diy_fp_encode_double@@Base+0x428>
   31284:	mov	r4, r2
   31288:	str	r4, [r0]
   3128c:	str	r3, [r0, #4]
   31290:	str	r1, [r0, #8]
   31294:	str	ip, [r0, #12]
   31298:	pop	{r4, sl, fp, pc}
   3129c:	movw	r0, #26122	; 0x660a
   312a0:	movw	r1, #26131	; 0x6613
   312a4:	movw	r3, #26217	; 0x6669
   312a8:	mov	r2, #260	; 0x104
   312ac:	movt	r0, #4
   312b0:	movt	r1, #4
   312b4:	movt	r3, #4
   312b8:	bl	14f40 <__assert_fail@plt>
   312bc:	push	{r4, r5, fp, lr}
   312c0:	add	fp, sp, #8
   312c4:	ldr	ip, [fp, #24]
   312c8:	ldr	r1, [fp, #8]
   312cc:	mov	r5, #0
   312d0:	add	r1, r1, ip
   312d4:	ldr	ip, [fp, #16]
   312d8:	add	r1, r1, #64	; 0x40
   312dc:	str	r1, [r0, #8]
   312e0:	umull	r1, lr, ip, r2
   312e4:	umull	ip, r1, ip, r3
   312e8:	adds	lr, ip, lr
   312ec:	ldr	ip, [fp, #20]
   312f0:	adc	r5, r5, #0
   312f4:	umull	r2, r4, ip, r2
   312f8:	umaal	r1, r4, ip, r3
   312fc:	adds	r2, lr, r2
   31300:	adc	r5, r5, #0
   31304:	adds	r2, r2, #-2147483648	; 0x80000000
   31308:	adcs	r1, r1, r5
   3130c:	str	r1, [r0]
   31310:	adc	r1, r4, #0
   31314:	str	r1, [r0, #4]
   31318:	pop	{r4, r5, fp, pc}

0003131c <flatcc_json_parser_error_string@@Base>:
   3131c:	cmp	r0, #34	; 0x22
   31320:	movwhi	r0, #22486	; 0x57d6
   31324:	movthi	r0, #4
   31328:	bxhi	lr
   3132c:	movw	r1, #24664	; 0x6058
   31330:	movt	r1, #4
   31334:	ldr	r0, [r1, r0, lsl #2]
   31338:	bx	lr

0003133c <flatcc_json_parser_set_error@@Base>:
   3133c:	mov	ip, r2
   31340:	ldr	r2, [r0, #20]
   31344:	cmp	r2, #0
   31348:	bne	31364 <flatcc_json_parser_set_error@@Base+0x28>
   3134c:	str	r1, [r0, #32]
   31350:	ldr	r2, [r0, #4]
   31354:	sub	r1, r1, r2
   31358:	add	r1, r1, #1
   3135c:	str	r1, [r0, #16]
   31360:	str	r3, [r0, #20]
   31364:	mov	r0, ip
   31368:	bx	lr

0003136c <flatcc_json_parser_string_part@@Base>:
   3136c:	cmp	r1, r2
   31370:	beq	3139c <flatcc_json_parser_string_part@@Base+0x30>
   31374:	ldrb	r3, [r1]
   31378:	cmp	r3, #32
   3137c:	bcc	313d0 <flatcc_json_parser_string_part@@Base+0x64>
   31380:	cmp	r3, #34	; 0x22
   31384:	cmpne	r3, #92	; 0x5c
   31388:	beq	313c8 <flatcc_json_parser_string_part@@Base+0x5c>
   3138c:	add	r1, r1, #1
   31390:	cmp	r2, r1
   31394:	bne	31374 <flatcc_json_parser_string_part@@Base+0x8>
   31398:	mov	r1, r2
   3139c:	ldr	r3, [r0, #20]
   313a0:	cmp	r3, #0
   313a4:	bne	313c4 <flatcc_json_parser_string_part@@Base+0x58>
   313a8:	mov	ip, #20
   313ac:	str	r1, [r0, #32]
   313b0:	ldr	r3, [r0, #4]
   313b4:	sub	r1, r1, r3
   313b8:	add	r1, r1, #1
   313bc:	str	r1, [r0, #16]
   313c0:	str	ip, [r0, #20]
   313c4:	mov	r1, r2
   313c8:	mov	r0, r1
   313cc:	bx	lr
   313d0:	ldr	r3, [r0, #20]
   313d4:	cmp	r3, #0
   313d8:	bne	313c4 <flatcc_json_parser_string_part@@Base+0x58>
   313dc:	mov	ip, #17
   313e0:	b	313ac <flatcc_json_parser_string_part@@Base+0x40>

000313e4 <flatcc_json_parser_space_ext@@Base>:
   313e4:	mov	ip, r2
   313e8:	cmp	r1, r2
   313ec:	beq	314c0 <flatcc_json_parser_space_ext@@Base+0xdc>
   313f0:	ldrb	r3, [r1]
   313f4:	cmp	r3, #32
   313f8:	bne	3140c <flatcc_json_parser_space_ext@@Base+0x28>
   313fc:	add	r1, r1, #1
   31400:	cmp	r1, ip
   31404:	bne	313f0 <flatcc_json_parser_space_ext@@Base+0xc>
   31408:	b	314c0 <flatcc_json_parser_space_ext@@Base+0xdc>
   3140c:	cmp	r1, ip
   31410:	beq	314c0 <flatcc_json_parser_space_ext@@Base+0xdc>
   31414:	ldrb	r3, [r1]
   31418:	cmp	r3, #32
   3141c:	bhi	314bc <flatcc_json_parser_space_ext@@Base+0xd8>
   31420:	cmp	r3, #12
   31424:	bgt	3143c <flatcc_json_parser_space_ext@@Base+0x58>
   31428:	cmp	r3, #9
   3142c:	beq	31480 <flatcc_json_parser_space_ext@@Base+0x9c>
   31430:	cmp	r3, #10
   31434:	beq	31468 <flatcc_json_parser_space_ext@@Base+0x84>
   31438:	b	31490 <flatcc_json_parser_space_ext@@Base+0xac>
   3143c:	cmp	r3, #13
   31440:	bne	31488 <flatcc_json_parser_space_ext@@Base+0xa4>
   31444:	sub	r2, ip, r1
   31448:	mov	r3, #0
   3144c:	cmp	r2, #2
   31450:	blt	31464 <flatcc_json_parser_space_ext@@Base+0x80>
   31454:	ldrb	r2, [r1, #1]
   31458:	sub	r2, r2, #10
   3145c:	clz	r2, r2
   31460:	lsr	r3, r2, #5
   31464:	add	r1, r1, r3
   31468:	add	r1, r1, #1
   3146c:	str	r1, [r0, #4]
   31470:	ldr	r2, [r0, #12]
   31474:	add	r2, r2, #1
   31478:	str	r2, [r0, #12]
   3147c:	b	3140c <flatcc_json_parser_space_ext@@Base+0x28>
   31480:	add	r1, r1, #1
   31484:	b	3140c <flatcc_json_parser_space_ext@@Base+0x28>
   31488:	cmp	r3, #32
   3148c:	beq	31400 <flatcc_json_parser_space_ext@@Base+0x1c>
   31490:	ldr	r2, [r0, #20]
   31494:	cmp	r2, #0
   31498:	bne	314c0 <flatcc_json_parser_space_ext@@Base+0xdc>
   3149c:	str	r1, [r0, #32]
   314a0:	mov	r2, #5
   314a4:	ldr	r3, [r0, #4]
   314a8:	sub	r1, r1, r3
   314ac:	add	r1, r1, #1
   314b0:	str	r1, [r0, #16]
   314b4:	str	r2, [r0, #20]
   314b8:	b	314c0 <flatcc_json_parser_space_ext@@Base+0xdc>
   314bc:	mov	ip, r1
   314c0:	mov	r0, ip
   314c4:	bx	lr

000314c8 <flatcc_json_parser_string_escape@@Base>:
   314c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   314cc:	add	fp, sp, #24
   314d0:	sub	r7, r2, r1
   314d4:	cmp	r7, #2
   314d8:	blt	315c8 <flatcc_json_parser_string_escape@@Base+0x100>
   314dc:	ldrb	r6, [r1]
   314e0:	cmp	r6, #92	; 0x5c
   314e4:	bne	315c8 <flatcc_json_parser_string_escape@@Base+0x100>
   314e8:	ldrb	r6, [r1, #1]
   314ec:	cmp	r6, #97	; 0x61
   314f0:	bgt	31514 <flatcc_json_parser_string_escape@@Base+0x4c>
   314f4:	cmp	r6, #34	; 0x22
   314f8:	beq	31574 <flatcc_json_parser_string_escape@@Base+0xac>
   314fc:	cmp	r6, #47	; 0x2f
   31500:	beq	3157c <flatcc_json_parser_string_escape@@Base+0xb4>
   31504:	cmp	r6, #92	; 0x5c
   31508:	bne	315c8 <flatcc_json_parser_string_escape@@Base+0x100>
   3150c:	movw	r0, #23553	; 0x5c01
   31510:	b	31600 <flatcc_json_parser_string_escape@@Base+0x138>
   31514:	sub	r5, r6, #110	; 0x6e
   31518:	cmp	r5, #10
   3151c:	bhi	3155c <flatcc_json_parser_string_escape@@Base+0x94>
   31520:	add	r6, pc, #0
   31524:	ldr	pc, [r6, r5, lsl #2]
   31528:	andeq	r1, r3, r4, asr r5
   3152c:	andeq	r1, r3, r8, asr #11
   31530:	andeq	r1, r3, r8, asr #11
   31534:	andeq	r1, r3, r8, asr #11
   31538:	andeq	r1, r3, r4, lsl #11
   3153c:	andeq	r1, r3, r8, asr #11
   31540:	andeq	r1, r3, ip, lsl #11
   31544:	muleq	r3, r4, r5
   31548:	andeq	r1, r3, r8, asr #11
   3154c:	andeq	r1, r3, r8, asr #11
   31550:			; <UNDEFINED> instruction: 0x000315b8
   31554:	movw	r0, #2561	; 0xa01
   31558:	b	31600 <flatcc_json_parser_string_escape@@Base+0x138>
   3155c:	cmp	r6, #98	; 0x62
   31560:	beq	315fc <flatcc_json_parser_string_escape@@Base+0x134>
   31564:	cmp	r6, #102	; 0x66
   31568:	bne	315c8 <flatcc_json_parser_string_escape@@Base+0x100>
   3156c:	movw	r0, #3073	; 0xc01
   31570:	b	31600 <flatcc_json_parser_string_escape@@Base+0x138>
   31574:	movw	r0, #8705	; 0x2201
   31578:	b	31600 <flatcc_json_parser_string_escape@@Base+0x138>
   3157c:	movw	r0, #12033	; 0x2f01
   31580:	b	31600 <flatcc_json_parser_string_escape@@Base+0x138>
   31584:	movw	r0, #3329	; 0xd01
   31588:	b	31600 <flatcc_json_parser_string_escape@@Base+0x138>
   3158c:	movw	r0, #2305	; 0x901
   31590:	b	31600 <flatcc_json_parser_string_escape@@Base+0x138>
   31594:	cmp	r7, #5
   31598:	ble	315c8 <flatcc_json_parser_string_escape@@Base+0x100>
   3159c:	ldrb	r7, [r1, #2]
   315a0:	sub	r6, r7, #48	; 0x30
   315a4:	uxtb	r6, r6
   315a8:	cmp	r6, #9
   315ac:	bhi	3162c <flatcc_json_parser_string_escape@@Base+0x164>
   315b0:	lsl	ip, r7, #12
   315b4:	b	3164c <flatcc_json_parser_string_escape@@Base+0x184>
   315b8:	mov	r6, #1
   315bc:	cmp	r7, #3
   315c0:	strb	r6, [r3]
   315c4:	bgt	31610 <flatcc_json_parser_string_escape@@Base+0x148>
   315c8:	mov	r7, #0
   315cc:	strb	r7, [r3]
   315d0:	ldr	r3, [r0, #20]
   315d4:	cmp	r3, #0
   315d8:	bne	31608 <flatcc_json_parser_string_escape@@Base+0x140>
   315dc:	str	r1, [r0, #32]
   315e0:	mov	r3, #18
   315e4:	ldr	r7, [r0, #4]
   315e8:	sub	r1, r1, r7
   315ec:	add	r1, r1, #1
   315f0:	str	r1, [r0, #16]
   315f4:	str	r3, [r0, #20]
   315f8:	b	31608 <flatcc_json_parser_string_escape@@Base+0x140>
   315fc:	movw	r0, #2049	; 0x801
   31600:	strh	r0, [r3]
   31604:	add	r2, r1, #2
   31608:	mov	r0, r2
   3160c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31610:	ldrb	r7, [r1, #2]
   31614:	sub	r6, r7, #48	; 0x30
   31618:	uxtb	r6, r6
   3161c:	cmp	r6, #9
   31620:	bhi	31668 <flatcc_json_parser_string_escape@@Base+0x1a0>
   31624:	lsl	r7, r7, #4
   31628:	b	31684 <flatcc_json_parser_string_escape@@Base+0x1bc>
   3162c:	orr	r6, r7, #32
   31630:	sub	r6, r6, #97	; 0x61
   31634:	uxtb	r6, r6
   31638:	cmp	r6, #5
   3163c:	bhi	315c8 <flatcc_json_parser_string_escape@@Base+0x100>
   31640:	movw	r6, #36864	; 0x9000
   31644:	movt	r6, #65535	; 0xffff
   31648:	add	ip, r6, r7, lsl #12
   3164c:	ldrb	lr, [r1, #3]
   31650:	sub	r4, lr, #48	; 0x30
   31654:	uxtb	r4, r4
   31658:	cmp	r4, #10
   3165c:	bcs	316c0 <flatcc_json_parser_string_escape@@Base+0x1f8>
   31660:	mov	r8, #53248	; 0xd000
   31664:	b	316d8 <flatcc_json_parser_string_escape@@Base+0x210>
   31668:	orr	r6, r7, #32
   3166c:	sub	r6, r6, #97	; 0x61
   31670:	uxtb	r6, r6
   31674:	cmp	r6, #5
   31678:	bhi	315c8 <flatcc_json_parser_string_escape@@Base+0x100>
   3167c:	mvn	r6, #111	; 0x6f
   31680:	add	r7, r6, r7, lsl #4
   31684:	ldrb	r5, [r1, #3]
   31688:	sub	r6, r5, #48	; 0x30
   3168c:	uxtb	r4, r6
   31690:	cmp	r4, #10
   31694:	bcc	316b0 <flatcc_json_parser_string_escape@@Base+0x1e8>
   31698:	orr	r6, r5, #32
   3169c:	sub	r5, r6, #97	; 0x61
   316a0:	uxtb	r5, r5
   316a4:	cmp	r5, #5
   316a8:	bhi	315c8 <flatcc_json_parser_string_escape@@Base+0x100>
   316ac:	sub	r6, r6, #87	; 0x57
   316b0:	orr	r0, r6, r7
   316b4:	add	r2, r1, #4
   316b8:	strb	r0, [r3, #1]
   316bc:	b	31608 <flatcc_json_parser_string_escape@@Base+0x140>
   316c0:	orr	lr, lr, #32
   316c4:	mov	r8, #43264	; 0xa900
   316c8:	sub	r4, lr, #97	; 0x61
   316cc:	uxtb	r4, r4
   316d0:	cmp	r4, #6
   316d4:	bcs	315c8 <flatcc_json_parser_string_escape@@Base+0x100>
   316d8:	ldrb	r5, [r1, #4]
   316dc:	sub	r4, r5, #48	; 0x30
   316e0:	uxtb	r4, r4
   316e4:	cmp	r4, #10
   316e8:	bcs	316f4 <flatcc_json_parser_string_escape@@Base+0x22c>
   316ec:	mov	r9, #64768	; 0xfd00
   316f0:	b	3170c <flatcc_json_parser_string_escape@@Base+0x244>
   316f4:	orr	r5, r5, #32
   316f8:	movw	r9, #64144	; 0xfa90
   316fc:	sub	r4, r5, #97	; 0x61
   31700:	uxtb	r4, r4
   31704:	cmp	r4, #6
   31708:	bcs	315c8 <flatcc_json_parser_string_escape@@Base+0x100>
   3170c:	ldrb	r7, [r1, #5]
   31710:	sub	r4, r7, #48	; 0x30
   31714:	uxtb	r4, r4
   31718:	cmp	r4, #10
   3171c:	bcs	3172c <flatcc_json_parser_string_escape@@Base+0x264>
   31720:	mvn	r0, #86	; 0x56
   31724:	add	r4, r0, #39	; 0x27
   31728:	b	31744 <flatcc_json_parser_string_escape@@Base+0x27c>
   3172c:	orr	r7, r7, #32
   31730:	movw	r4, #65449	; 0xffa9
   31734:	sub	r6, r7, #97	; 0x61
   31738:	uxtb	r6, r6
   3173c:	cmp	r6, #6
   31740:	bcs	315c8 <flatcc_json_parser_string_escape@@Base+0x100>
   31744:	add	r0, r8, lr, lsl #8
   31748:	add	r2, r9, r5, lsl #4
   3174c:	orr	r0, r0, ip
   31750:	orr	r0, r0, r2
   31754:	add	r2, r4, r7
   31758:	orr	r0, r0, r2
   3175c:	uxth	r7, r0
   31760:	cmp	r7, #127	; 0x7f
   31764:	bhi	31774 <flatcc_json_parser_string_escape@@Base+0x2ac>
   31768:	mov	r2, #1
   3176c:	strb	r2, [r3]
   31770:	b	317c4 <flatcc_json_parser_string_escape@@Base+0x2fc>
   31774:	mov	r2, #0
   31778:	cmp	r2, r7, lsr #11
   3177c:	bne	31798 <flatcc_json_parser_string_escape@@Base+0x2d0>
   31780:	mov	r7, #192	; 0xc0
   31784:	mov	r2, #2
   31788:	orr	r7, r7, r0, lsr #6
   3178c:	strb	r2, [r3]
   31790:	strb	r7, [r3, #1]
   31794:	b	317bc <flatcc_json_parser_string_escape@@Base+0x2f4>
   31798:	mov	r6, #224	; 0xe0
   3179c:	mov	r2, #3
   317a0:	orr	r6, r6, r7, lsr #12
   317a4:	strb	r2, [r3]
   317a8:	lsr	r7, r7, #6
   317ac:	strb	r6, [r3, #1]
   317b0:	mov	r6, #2
   317b4:	bfi	r7, r6, #6, #26
   317b8:	strb	r7, [r3, #2]
   317bc:	mvn	r7, #-67108863	; 0xfc000001
   317c0:	bfi	r0, r7, #6, #26
   317c4:	strb	r0, [r3, r2]
   317c8:	add	r2, r1, #6
   317cc:	b	31608 <flatcc_json_parser_string_escape@@Base+0x140>

000317d0 <flatcc_json_parser_skip_constant@@Base>:
   317d0:	push	{r4, r5, r6, sl, fp, lr}
   317d4:	add	fp, sp, #16
   317d8:	cmp	r1, r2
   317dc:	beq	3188c <flatcc_json_parser_skip_constant@@Base+0xbc>
   317e0:	mov	r4, r2
   317e4:	mov	r5, r0
   317e8:	ldrsb	r0, [r1]
   317ec:	mov	r6, r1
   317f0:	cmp	r0, #0
   317f4:	bmi	31808 <flatcc_json_parser_skip_constant@@Base+0x38>
   317f8:	uxtb	r0, r0
   317fc:	cmp	r0, #95	; 0x5f
   31800:	cmpne	r0, #46	; 0x2e
   31804:	bne	31818 <flatcc_json_parser_skip_constant@@Base+0x48>
   31808:	add	r1, r6, #1
   3180c:	cmp	r1, r4
   31810:	bne	317e8 <flatcc_json_parser_skip_constant@@Base+0x18>
   31814:	b	31884 <flatcc_json_parser_skip_constant@@Base+0xb4>
   31818:	sub	r1, r0, #48	; 0x30
   3181c:	uxtb	r1, r1
   31820:	cmp	r1, #9
   31824:	bls	31808 <flatcc_json_parser_skip_constant@@Base+0x38>
   31828:	orr	r1, r0, #32
   3182c:	sub	r1, r1, #97	; 0x61
   31830:	uxtb	r1, r1
   31834:	cmp	r1, #25
   31838:	bls	31808 <flatcc_json_parser_skip_constant@@Base+0x38>
   3183c:	sub	r1, r4, r6
   31840:	cmp	r1, #2
   31844:	blt	31864 <flatcc_json_parser_skip_constant@@Base+0x94>
   31848:	cmp	r0, #32
   3184c:	bhi	31890 <flatcc_json_parser_skip_constant@@Base+0xc0>
   31850:	bne	31864 <flatcc_json_parser_skip_constant@@Base+0x94>
   31854:	mov	r1, r6
   31858:	ldrb	r0, [r1, #1]!
   3185c:	cmp	r0, #32
   31860:	bhi	3180c <flatcc_json_parser_skip_constant@@Base+0x3c>
   31864:	mov	r0, r5
   31868:	mov	r1, r6
   3186c:	mov	r2, r4
   31870:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   31874:	mov	r1, r0
   31878:	cmp	r0, r6
   3187c:	bne	3180c <flatcc_json_parser_skip_constant@@Base+0x3c>
   31880:	b	31890 <flatcc_json_parser_skip_constant@@Base+0xc0>
   31884:	mov	r6, r4
   31888:	b	31890 <flatcc_json_parser_skip_constant@@Base+0xc0>
   3188c:	mov	r6, r1
   31890:	mov	r0, r6
   31894:	pop	{r4, r5, r6, sl, fp, pc}

00031898 <flatcc_json_parser_match_constant@@Base>:
   31898:	push	{r4, r5, fp, lr}
   3189c:	add	fp, sp, #8
   318a0:	ldr	r5, [fp, #8]
   318a4:	sub	r4, r2, r1
   318a8:	cmp	r4, r3
   318ac:	ble	3191c <flatcc_json_parser_match_constant@@Base+0x84>
   318b0:	add	ip, r1, r3
   318b4:	ldrb	r4, [ip]
   318b8:	cmp	r4, #92	; 0x5c
   318bc:	beq	31930 <flatcc_json_parser_match_constant@@Base+0x98>
   318c0:	cmp	r4, #34	; 0x22
   318c4:	beq	318f8 <flatcc_json_parser_match_constant@@Base+0x60>
   318c8:	cmp	r4, #32
   318cc:	bne	3191c <flatcc_json_parser_match_constant@@Base+0x84>
   318d0:	add	r1, r1, r3
   318d4:	add	r1, r1, #1
   318d8:	cmp	r2, r1
   318dc:	beq	31964 <flatcc_json_parser_match_constant@@Base+0xcc>
   318e0:	ldrb	r3, [r1], #1
   318e4:	cmp	r3, #32
   318e8:	beq	318d8 <flatcc_json_parser_match_constant@@Base+0x40>
   318ec:	cmp	r3, #34	; 0x22
   318f0:	bne	31998 <flatcc_json_parser_match_constant@@Base+0x100>
   318f4:	sub	ip, r1, #1
   318f8:	mvn	r2, ip
   318fc:	add	r1, ip, #1
   31900:	cmp	r2, #2
   31904:	blt	31984 <flatcc_json_parser_match_constant@@Base+0xec>
   31908:	ldrb	r2, [r1]
   3190c:	cmp	r2, #32
   31910:	bls	31974 <flatcc_json_parser_match_constant@@Base+0xdc>
   31914:	mov	ip, r1
   31918:	b	31990 <flatcc_json_parser_match_constant@@Base+0xf8>
   3191c:	mov	r0, #0
   31920:	mov	ip, r1
   31924:	str	r0, [r5]
   31928:	mov	r0, ip
   3192c:	pop	{r4, r5, fp, pc}
   31930:	mov	r1, #0
   31934:	str	r1, [r5]
   31938:	ldr	r1, [r0, #20]
   3193c:	cmp	r1, #0
   31940:	bne	3196c <flatcc_json_parser_match_constant@@Base+0xd4>
   31944:	str	ip, [r0, #32]
   31948:	mov	r1, #18
   3194c:	ldr	r3, [r0, #4]
   31950:	sub	r3, ip, r3
   31954:	add	r3, r3, #1
   31958:	str	r3, [r0, #16]
   3195c:	str	r1, [r0, #20]
   31960:	b	3196c <flatcc_json_parser_match_constant@@Base+0xd4>
   31964:	mov	r0, #0
   31968:	str	r0, [r5]
   3196c:	mov	ip, r2
   31970:	b	31928 <flatcc_json_parser_match_constant@@Base+0x90>
   31974:	bne	31984 <flatcc_json_parser_match_constant@@Base+0xec>
   31978:	ldrb	r2, [ip, #2]!
   3197c:	cmp	r2, #32
   31980:	bhi	31990 <flatcc_json_parser_match_constant@@Base+0xf8>
   31984:	mov	r2, #0
   31988:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   3198c:	mov	ip, r0
   31990:	mov	r0, #0
   31994:	b	31924 <flatcc_json_parser_match_constant@@Base+0x8c>
   31998:	mov	r0, #1
   3199c:	sub	ip, r1, #1
   319a0:	b	31924 <flatcc_json_parser_match_constant@@Base+0x8c>

000319a4 <flatcc_json_parser_unmatched_symbol@@Base>:
   319a4:	push	{r4, r5, fp, lr}
   319a8:	add	fp, sp, #8
   319ac:	mov	r5, r0
   319b0:	ldrb	r0, [r0, #8]
   319b4:	mov	r4, r2
   319b8:	tst	r0, #1
   319bc:	bne	319e0 <flatcc_json_parser_unmatched_symbol@@Base+0x3c>
   319c0:	ldr	r0, [r5, #20]
   319c4:	cmp	r0, #0
   319c8:	bne	31b00 <flatcc_json_parser_unmatched_symbol@@Base+0x15c>
   319cc:	str	r1, [r5, #32]
   319d0:	mov	r0, #13
   319d4:	ldr	r2, [r5, #4]
   319d8:	sub	r1, r1, r2
   319dc:	b	31af4 <flatcc_json_parser_unmatched_symbol@@Base+0x150>
   319e0:	cmp	r1, r4
   319e4:	beq	31a20 <flatcc_json_parser_unmatched_symbol@@Base+0x7c>
   319e8:	ldrb	r0, [r1]
   319ec:	cmp	r0, #92	; 0x5c
   319f0:	beq	31a00 <flatcc_json_parser_unmatched_symbol@@Base+0x5c>
   319f4:	cmp	r0, #34	; 0x22
   319f8:	bne	31a10 <flatcc_json_parser_unmatched_symbol@@Base+0x6c>
   319fc:	b	31a54 <flatcc_json_parser_unmatched_symbol@@Base+0xb0>
   31a00:	sub	r0, r4, r1
   31a04:	cmp	r0, #2
   31a08:	blt	31a20 <flatcc_json_parser_unmatched_symbol@@Base+0x7c>
   31a0c:	add	r1, r1, #1
   31a10:	add	r1, r1, #1
   31a14:	cmp	r1, r4
   31a18:	bne	319e8 <flatcc_json_parser_unmatched_symbol@@Base+0x44>
   31a1c:	mov	r1, r4
   31a20:	ldr	r0, [r5, #20]
   31a24:	mov	r2, r4
   31a28:	cmp	r0, #0
   31a2c:	bne	31a58 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   31a30:	str	r1, [r5, #32]
   31a34:	mov	r0, #20
   31a38:	ldr	r2, [r5, #4]
   31a3c:	sub	r1, r1, r2
   31a40:	mov	r2, r4
   31a44:	add	r1, r1, #1
   31a48:	str	r1, [r5, #16]
   31a4c:	str	r0, [r5, #20]
   31a50:	b	31a58 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   31a54:	add	r2, r1, #1
   31a58:	sub	r0, r4, r2
   31a5c:	cmp	r0, #2
   31a60:	blt	31a8c <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   31a64:	ldrb	r0, [r2]
   31a68:	cmp	r0, #32
   31a6c:	bls	31a78 <flatcc_json_parser_unmatched_symbol@@Base+0xd4>
   31a70:	mov	r3, r2
   31a74:	b	31aa0 <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
   31a78:	bne	31a8c <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   31a7c:	mov	r3, r2
   31a80:	ldrb	r0, [r3, #1]!
   31a84:	cmp	r0, #32
   31a88:	bhi	31aa0 <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
   31a8c:	mov	r1, r2
   31a90:	mov	r0, r5
   31a94:	mov	r2, r4
   31a98:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   31a9c:	mov	r3, r0
   31aa0:	cmp	r3, r4
   31aa4:	beq	31ad8 <flatcc_json_parser_unmatched_symbol@@Base+0x134>
   31aa8:	ldrb	r0, [r3]
   31aac:	cmp	r0, #58	; 0x3a
   31ab0:	bne	31ad8 <flatcc_json_parser_unmatched_symbol@@Base+0x134>
   31ab4:	add	r1, r3, #1
   31ab8:	sub	r0, r4, r1
   31abc:	cmp	r0, #2
   31ac0:	blt	31b18 <flatcc_json_parser_unmatched_symbol@@Base+0x174>
   31ac4:	ldrb	r0, [r1]
   31ac8:	cmp	r0, #32
   31acc:	bls	31b08 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   31ad0:	mov	r3, r1
   31ad4:	b	31b28 <flatcc_json_parser_unmatched_symbol@@Base+0x184>
   31ad8:	ldr	r0, [r5, #20]
   31adc:	cmp	r0, #0
   31ae0:	bne	31b00 <flatcc_json_parser_unmatched_symbol@@Base+0x15c>
   31ae4:	str	r3, [r5, #32]
   31ae8:	mov	r0, #4
   31aec:	ldr	r1, [r5, #4]
   31af0:	sub	r1, r3, r1
   31af4:	add	r1, r1, #1
   31af8:	str	r1, [r5, #16]
   31afc:	str	r0, [r5, #20]
   31b00:	mov	r0, r4
   31b04:	pop	{r4, r5, fp, pc}
   31b08:	bne	31b18 <flatcc_json_parser_unmatched_symbol@@Base+0x174>
   31b0c:	ldrb	r0, [r3, #2]!
   31b10:	cmp	r0, #32
   31b14:	bhi	31b28 <flatcc_json_parser_unmatched_symbol@@Base+0x184>
   31b18:	mov	r0, r5
   31b1c:	mov	r2, r4
   31b20:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   31b24:	mov	r3, r0
   31b28:	mov	r0, r5
   31b2c:	mov	r1, r3
   31b30:	mov	r2, r4
   31b34:	pop	{r4, r5, fp, lr}
   31b38:	b	31b3c <flatcc_json_parser_generic_json@@Base>

00031b3c <flatcc_json_parser_generic_json@@Base>:
   31b3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31b40:	add	fp, sp, #28
   31b44:	sub	sp, sp, #556	; 0x22c
   31b48:	mov	r8, r1
   31b4c:	cmp	r1, r2
   31b50:	beq	325cc <flatcc_json_parser_generic_json@@Base+0xa90>
   31b54:	mov	r5, r0
   31b58:	add	r0, r2, #1
   31b5c:	add	r1, sp, #28
   31b60:	mov	r4, r2
   31b64:	mov	r9, #0
   31b68:	str	r0, [sp, #12]
   31b6c:	add	r0, r5, #16
   31b70:	sub	sl, r1, #1
   31b74:	add	r7, r5, #32
   31b78:	add	r6, r5, #20
   31b7c:	str	r0, [sp, #20]
   31b80:	add	r0, r5, #4
   31b84:	str	r0, [sp, #16]
   31b88:	mov	r0, r1
   31b8c:	cmp	r9, #0
   31b90:	beq	31d08 <flatcc_json_parser_generic_json@@Base+0x1cc>
   31b94:	ldrb	r0, [r0, #-1]
   31b98:	cmp	r0, #125	; 0x7d
   31b9c:	bne	31d08 <flatcc_json_parser_generic_json@@Base+0x1cc>
   31ba0:	ldrb	r0, [r8]
   31ba4:	cmp	r0, #34	; 0x22
   31ba8:	bne	31bf4 <flatcc_json_parser_generic_json@@Base+0xb8>
   31bac:	add	r0, r8, #1
   31bb0:	mov	r2, r4
   31bb4:	cmp	r0, r4
   31bb8:	beq	31c2c <flatcc_json_parser_generic_json@@Base+0xf0>
   31bbc:	ldrb	r1, [r0]
   31bc0:	cmp	r1, #92	; 0x5c
   31bc4:	beq	31bd4 <flatcc_json_parser_generic_json@@Base+0x98>
   31bc8:	cmp	r1, #34	; 0x22
   31bcc:	bne	31be4 <flatcc_json_parser_generic_json@@Base+0xa8>
   31bd0:	b	31c68 <flatcc_json_parser_generic_json@@Base+0x12c>
   31bd4:	sub	r1, r4, r0
   31bd8:	cmp	r1, #2
   31bdc:	blt	32180 <flatcc_json_parser_generic_json@@Base+0x644>
   31be0:	add	r0, r0, #1
   31be4:	add	r0, r0, #1
   31be8:	cmp	r0, r4
   31bec:	bne	31bbc <flatcc_json_parser_generic_json@@Base+0x80>
   31bf0:	b	31c28 <flatcc_json_parser_generic_json@@Base+0xec>
   31bf4:	ldr	r0, [r6]
   31bf8:	mov	r1, r4
   31bfc:	cmp	r0, #0
   31c00:	bne	31c6c <flatcc_json_parser_generic_json@@Base+0x130>
   31c04:	mov	r0, #5
   31c08:	ldr	r1, [sp, #20]
   31c0c:	str	r0, [r6]
   31c10:	ldr	r0, [sp, #16]
   31c14:	ldr	r0, [r0]
   31c18:	sub	r0, r8, r0
   31c1c:	add	r0, r0, #1
   31c20:	str	r0, [r1]
   31c24:	str	r8, [r7]
   31c28:	mov	r2, r4
   31c2c:	ldr	r0, [r6]
   31c30:	mov	r1, r4
   31c34:	cmp	r0, #0
   31c38:	bne	31c6c <flatcc_json_parser_generic_json@@Base+0x130>
   31c3c:	mov	r0, #20
   31c40:	ldr	r1, [sp, #20]
   31c44:	str	r0, [r6]
   31c48:	ldr	r0, [sp, #16]
   31c4c:	ldr	r0, [r0]
   31c50:	sub	r0, r2, r0
   31c54:	add	r0, r0, #1
   31c58:	str	r0, [r1]
   31c5c:	mov	r1, r4
   31c60:	str	r2, [r7]
   31c64:	b	31c6c <flatcc_json_parser_generic_json@@Base+0x130>
   31c68:	add	r1, r0, #1
   31c6c:	sub	r0, r4, r1
   31c70:	cmp	r0, #2
   31c74:	blt	31ca0 <flatcc_json_parser_generic_json@@Base+0x164>
   31c78:	ldrb	r0, [r1]
   31c7c:	cmp	r0, #32
   31c80:	bls	31c8c <flatcc_json_parser_generic_json@@Base+0x150>
   31c84:	mov	r8, r1
   31c88:	b	31cb0 <flatcc_json_parser_generic_json@@Base+0x174>
   31c8c:	bne	31ca0 <flatcc_json_parser_generic_json@@Base+0x164>
   31c90:	mov	r8, r1
   31c94:	ldrb	r0, [r8, #1]!
   31c98:	cmp	r0, #32
   31c9c:	bhi	31cb0 <flatcc_json_parser_generic_json@@Base+0x174>
   31ca0:	mov	r0, r5
   31ca4:	mov	r2, r4
   31ca8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   31cac:	mov	r8, r0
   31cb0:	cmp	r8, r4
   31cb4:	beq	32650 <flatcc_json_parser_generic_json@@Base+0xb14>
   31cb8:	ldrb	r0, [r8]
   31cbc:	cmp	r0, #58	; 0x3a
   31cc0:	bne	32668 <flatcc_json_parser_generic_json@@Base+0xb2c>
   31cc4:	add	r1, r8, #1
   31cc8:	sub	r0, r4, r1
   31ccc:	cmp	r0, #2
   31cd0:	blt	31cf8 <flatcc_json_parser_generic_json@@Base+0x1bc>
   31cd4:	ldrb	r0, [r1]
   31cd8:	cmp	r0, #32
   31cdc:	bls	31ce8 <flatcc_json_parser_generic_json@@Base+0x1ac>
   31ce0:	mov	r8, r1
   31ce4:	b	31d0c <flatcc_json_parser_generic_json@@Base+0x1d0>
   31ce8:	bne	31cf8 <flatcc_json_parser_generic_json@@Base+0x1bc>
   31cec:	ldrb	r0, [r8, #2]!
   31cf0:	cmp	r0, #32
   31cf4:	bhi	31d0c <flatcc_json_parser_generic_json@@Base+0x1d0>
   31cf8:	mov	r0, r5
   31cfc:	mov	r2, r4
   31d00:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   31d04:	mov	r8, r0
   31d08:	ldrb	r0, [r8]
   31d0c:	cmp	r0, #90	; 0x5a
   31d10:	bgt	31d90 <flatcc_json_parser_generic_json@@Base+0x254>
   31d14:	sub	r1, r0, #48	; 0x30
   31d18:	cmp	r1, #10
   31d1c:	bcs	31e2c <flatcc_json_parser_generic_json@@Base+0x2f0>
   31d20:	cmp	r8, r4
   31d24:	beq	322a0 <flatcc_json_parser_generic_json@@Base+0x764>
   31d28:	cmp	r0, #45	; 0x2d
   31d2c:	bne	31d40 <flatcc_json_parser_generic_json@@Base+0x204>
   31d30:	add	r8, r8, #1
   31d34:	cmp	r8, r4
   31d38:	beq	320f4 <flatcc_json_parser_generic_json@@Base+0x5b8>
   31d3c:	ldrb	r0, [r8]
   31d40:	cmp	r0, #48	; 0x30
   31d44:	bne	31de8 <flatcc_json_parser_generic_json@@Base+0x2ac>
   31d48:	add	r1, r8, #1
   31d4c:	cmp	r1, r4
   31d50:	mov	r2, r4
   31d54:	beq	3210c <flatcc_json_parser_generic_json@@Base+0x5d0>
   31d58:	ldrb	r0, [r1]
   31d5c:	cmp	r0, #46	; 0x2e
   31d60:	bne	32044 <flatcc_json_parser_generic_json@@Base+0x508>
   31d64:	mov	r0, r1
   31d68:	ldrb	r2, [r0, #1]!
   31d6c:	sub	r2, r2, #48	; 0x30
   31d70:	uxtb	r2, r2
   31d74:	cmp	r2, #10
   31d78:	bcc	32010 <flatcc_json_parser_generic_json@@Base+0x4d4>
   31d7c:	ldr	r1, [r6]
   31d80:	cmp	r1, #0
   31d84:	bne	322a0 <flatcc_json_parser_generic_json@@Base+0x764>
   31d88:	mov	r1, #6
   31d8c:	b	32280 <flatcc_json_parser_generic_json@@Base+0x744>
   31d90:	cmp	r0, #109	; 0x6d
   31d94:	ble	31e40 <flatcc_json_parser_generic_json@@Base+0x304>
   31d98:	cmp	r0, #110	; 0x6e
   31d9c:	beq	31f34 <flatcc_json_parser_generic_json@@Base+0x3f8>
   31da0:	cmp	r0, #116	; 0x74
   31da4:	beq	31e50 <flatcc_json_parser_generic_json@@Base+0x314>
   31da8:	cmp	r0, #123	; 0x7b
   31dac:	bne	325d4 <flatcc_json_parser_generic_json@@Base+0xa98>
   31db0:	cmp	r9, #512	; 0x200
   31db4:	beq	3267c <flatcc_json_parser_generic_json@@Base+0xb40>
   31db8:	add	r0, sp, #28
   31dbc:	mov	r1, #125	; 0x7d
   31dc0:	strb	r1, [r0, r9]
   31dc4:	add	r1, r8, #1
   31dc8:	sub	r0, r4, r1
   31dcc:	cmp	r0, #2
   31dd0:	blt	321b4 <flatcc_json_parser_generic_json@@Base+0x678>
   31dd4:	ldrb	r0, [r1]
   31dd8:	cmp	r0, #32
   31ddc:	bls	321a4 <flatcc_json_parser_generic_json@@Base+0x668>
   31de0:	mov	r8, r1
   31de4:	b	321c4 <flatcc_json_parser_generic_json@@Base+0x688>
   31de8:	sub	r0, r0, #49	; 0x31
   31dec:	uxtb	r0, r0
   31df0:	cmp	r0, #8
   31df4:	bls	31f0c <flatcc_json_parser_generic_json@@Base+0x3d0>
   31df8:	ldr	r0, [r6]
   31dfc:	cmp	r0, #0
   31e00:	bne	322a0 <flatcc_json_parser_generic_json@@Base+0x764>
   31e04:	mov	r0, #6
   31e08:	ldr	r1, [sp, #20]
   31e0c:	str	r0, [r6]
   31e10:	ldr	r0, [sp, #16]
   31e14:	ldr	r0, [r0]
   31e18:	sub	r0, r8, r0
   31e1c:	add	r0, r0, #1
   31e20:	str	r0, [r1]
   31e24:	str	r8, [r7]
   31e28:	b	322a0 <flatcc_json_parser_generic_json@@Base+0x764>
   31e2c:	cmp	r0, #34	; 0x22
   31e30:	beq	31f68 <flatcc_json_parser_generic_json@@Base+0x42c>
   31e34:	cmp	r0, #45	; 0x2d
   31e38:	beq	31d20 <flatcc_json_parser_generic_json@@Base+0x1e4>
   31e3c:	b	325d4 <flatcc_json_parser_generic_json@@Base+0xa98>
   31e40:	cmp	r0, #91	; 0x5b
   31e44:	beq	31fd8 <flatcc_json_parser_generic_json@@Base+0x49c>
   31e48:	cmp	r0, #102	; 0x66
   31e4c:	bne	325d4 <flatcc_json_parser_generic_json@@Base+0xa98>
   31e50:	str	r7, [sp, #8]
   31e54:	sub	r7, r4, r8
   31e58:	cmp	r7, #4
   31e5c:	blt	31ea0 <flatcc_json_parser_generic_json@@Base+0x364>
   31e60:	movw	r1, #15172	; 0x3b44
   31e64:	mov	r0, r8
   31e68:	mov	r2, #4
   31e6c:	movt	r1, #4
   31e70:	bl	14ebc <bcmp@plt>
   31e74:	cmp	r0, #0
   31e78:	beq	32140 <flatcc_json_parser_generic_json@@Base+0x604>
   31e7c:	cmp	r7, #5
   31e80:	blt	31ea0 <flatcc_json_parser_generic_json@@Base+0x364>
   31e84:	movw	r1, #15177	; 0x3b49
   31e88:	mov	r0, r8
   31e8c:	mov	r2, #5
   31e90:	movt	r1, #4
   31e94:	bl	14ebc <bcmp@plt>
   31e98:	cmp	r0, #0
   31e9c:	beq	32578 <flatcc_json_parser_generic_json@@Base+0xa3c>
   31ea0:	ldr	r7, [sp, #8]
   31ea4:	mov	r0, #0
   31ea8:	cmp	r8, r4
   31eac:	mov	r1, r4
   31eb0:	str	r0, [fp, #-36]	; 0xffffffdc
   31eb4:	str	r0, [fp, #-40]	; 0xffffffd8
   31eb8:	str	r0, [fp, #-44]	; 0xffffffd4
   31ebc:	beq	32588 <flatcc_json_parser_generic_json@@Base+0xa4c>
   31ec0:	sub	r0, fp, #40	; 0x28
   31ec4:	mov	r1, r8
   31ec8:	mov	r2, r4
   31ecc:	sub	r3, fp, #44	; 0x2c
   31ed0:	str	r0, [sp]
   31ed4:	mov	r0, r5
   31ed8:	bl	3314c <flatcc_json_parser_integer@@Base>
   31edc:	cmp	r0, r8
   31ee0:	mov	r1, r8
   31ee4:	beq	32588 <flatcc_json_parser_generic_json@@Base+0xa4c>
   31ee8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   31eec:	cmp	r1, #0
   31ef0:	beq	3221c <flatcc_json_parser_generic_json@@Base+0x6e0>
   31ef4:	ldr	r1, [r6]
   31ef8:	cmp	r1, #0
   31efc:	mov	r1, r4
   31f00:	bne	32588 <flatcc_json_parser_generic_json@@Base+0xa4c>
   31f04:	mov	r1, #8
   31f08:	b	32244 <flatcc_json_parser_generic_json@@Base+0x708>
   31f0c:	add	r0, r8, #1
   31f10:	cmp	r4, r0
   31f14:	beq	32108 <flatcc_json_parser_generic_json@@Base+0x5cc>
   31f18:	ldrb	r1, [r0], #1
   31f1c:	sub	r1, r1, #48	; 0x30
   31f20:	uxtb	r1, r1
   31f24:	cmp	r1, #10
   31f28:	bcc	31f10 <flatcc_json_parser_generic_json@@Base+0x3d4>
   31f2c:	sub	r1, r0, #1
   31f30:	b	31d4c <flatcc_json_parser_generic_json@@Base+0x210>
   31f34:	sub	r0, r4, r8
   31f38:	mov	r1, r8
   31f3c:	cmp	r0, #4
   31f40:	blt	32588 <flatcc_json_parser_generic_json@@Base+0xa4c>
   31f44:	movw	r1, #25430	; 0x6356
   31f48:	mov	r0, r8
   31f4c:	mov	r2, #4
   31f50:	movt	r1, #4
   31f54:	bl	14ebc <bcmp@plt>
   31f58:	cmp	r0, #0
   31f5c:	mov	r1, r8
   31f60:	addeq	r1, r1, #4
   31f64:	b	32588 <flatcc_json_parser_generic_json@@Base+0xa4c>
   31f68:	cmp	r8, r4
   31f6c:	beq	3214c <flatcc_json_parser_generic_json@@Base+0x610>
   31f70:	add	r1, r8, #1
   31f74:	mov	r0, r4
   31f78:	add	r8, sp, #24
   31f7c:	cmp	r1, r4
   31f80:	beq	32270 <flatcc_json_parser_generic_json@@Base+0x734>
   31f84:	ldrb	r0, [r1]
   31f88:	cmp	r0, #34	; 0x22
   31f8c:	beq	32188 <flatcc_json_parser_generic_json@@Base+0x64c>
   31f90:	mov	r0, r5
   31f94:	mov	r2, r4
   31f98:	bl	3136c <flatcc_json_parser_string_part@@Base>
   31f9c:	mov	r1, r0
   31fa0:	cmp	r0, r4
   31fa4:	beq	31fb4 <flatcc_json_parser_generic_json@@Base+0x478>
   31fa8:	ldrb	r0, [r1]
   31fac:	cmp	r0, #34	; 0x22
   31fb0:	beq	32188 <flatcc_json_parser_generic_json@@Base+0x64c>
   31fb4:	mov	r0, r5
   31fb8:	mov	r2, r4
   31fbc:	mov	r3, r8
   31fc0:	bl	314c8 <flatcc_json_parser_string_escape@@Base>
   31fc4:	mov	r1, r0
   31fc8:	cmp	r0, r4
   31fcc:	bne	31f84 <flatcc_json_parser_generic_json@@Base+0x448>
   31fd0:	mov	r0, r4
   31fd4:	b	32270 <flatcc_json_parser_generic_json@@Base+0x734>
   31fd8:	cmp	r9, #512	; 0x200
   31fdc:	beq	3267c <flatcc_json_parser_generic_json@@Base+0xb40>
   31fe0:	add	r0, sp, #28
   31fe4:	mov	r1, #93	; 0x5d
   31fe8:	strb	r1, [r0, r9]
   31fec:	add	r1, r8, #1
   31ff0:	sub	r0, r4, r1
   31ff4:	cmp	r0, #2
   31ff8:	blt	321ec <flatcc_json_parser_generic_json@@Base+0x6b0>
   31ffc:	ldrb	r0, [r1]
   32000:	cmp	r0, #32
   32004:	bls	321dc <flatcc_json_parser_generic_json@@Base+0x6a0>
   32008:	mov	r8, r1
   3200c:	b	321fc <flatcc_json_parser_generic_json@@Base+0x6c0>
   32010:	add	r1, r1, #2
   32014:	mov	r2, r4
   32018:	cmp	r1, r4
   3201c:	beq	3210c <flatcc_json_parser_generic_json@@Base+0x5d0>
   32020:	ldrb	r0, [r1]
   32024:	sub	r2, r0, #48	; 0x30
   32028:	uxtb	r2, r2
   3202c:	cmp	r2, #9
   32030:	bhi	32044 <flatcc_json_parser_generic_json@@Base+0x508>
   32034:	add	r1, r1, #1
   32038:	cmp	r4, r1
   3203c:	bne	32020 <flatcc_json_parser_generic_json@@Base+0x4e4>
   32040:	b	32108 <flatcc_json_parser_generic_json@@Base+0x5cc>
   32044:	cmp	r1, r4
   32048:	mov	r2, r4
   3204c:	beq	3210c <flatcc_json_parser_generic_json@@Base+0x5d0>
   32050:	orr	r2, r0, #32
   32054:	cmp	r2, #101	; 0x65
   32058:	bne	320b8 <flatcc_json_parser_generic_json@@Base+0x57c>
   3205c:	add	r0, r1, #1
   32060:	cmp	r0, r4
   32064:	beq	320f4 <flatcc_json_parser_generic_json@@Base+0x5b8>
   32068:	ldrb	r2, [r0]
   3206c:	cmp	r2, #45	; 0x2d
   32070:	cmpne	r2, #43	; 0x2b
   32074:	addeq	r0, r1, #2
   32078:	cmp	r0, r4
   3207c:	beq	31d7c <flatcc_json_parser_generic_json@@Base+0x240>
   32080:	ldrb	r1, [r0]
   32084:	sub	r1, r1, #48	; 0x30
   32088:	uxtb	r1, r1
   3208c:	cmp	r1, #9
   32090:	bhi	31d7c <flatcc_json_parser_generic_json@@Base+0x240>
   32094:	add	r1, r0, #1
   32098:	cmp	r4, r1
   3209c:	beq	32108 <flatcc_json_parser_generic_json@@Base+0x5cc>
   320a0:	ldrb	r0, [r1], #1
   320a4:	sub	r2, r0, #48	; 0x30
   320a8:	uxtb	r2, r2
   320ac:	cmp	r2, #10
   320b0:	bcc	32098 <flatcc_json_parser_generic_json@@Base+0x55c>
   320b4:	sub	r1, r1, #1
   320b8:	cmp	r1, r4
   320bc:	mov	r2, r4
   320c0:	beq	3210c <flatcc_json_parser_generic_json@@Base+0x5d0>
   320c4:	cmp	r0, #43	; 0x2b
   320c8:	bgt	32594 <flatcc_json_parser_generic_json@@Base+0xa58>
   320cc:	sub	r0, r0, #9
   320d0:	cmp	r0, #23
   320d4:	bhi	325c4 <flatcc_json_parser_generic_json@@Base+0xa88>
   320d8:	movw	r3, #23
   320dc:	mov	r2, #1
   320e0:	movt	r3, #128	; 0x80
   320e4:	tst	r3, r2, lsl r0
   320e8:	mov	r2, r1
   320ec:	bne	322a4 <flatcc_json_parser_generic_json@@Base+0x768>
   320f0:	b	3210c <flatcc_json_parser_generic_json@@Base+0x5d0>
   320f4:	ldr	r0, [r6]
   320f8:	cmp	r0, #0
   320fc:	bne	322a0 <flatcc_json_parser_generic_json@@Base+0x764>
   32100:	mov	r0, #6
   32104:	b	3215c <flatcc_json_parser_generic_json@@Base+0x620>
   32108:	mov	r2, r4
   3210c:	ldr	r0, [r6]
   32110:	cmp	r0, #0
   32114:	bne	322a0 <flatcc_json_parser_generic_json@@Base+0x764>
   32118:	mov	r0, #6
   3211c:	ldr	r1, [sp, #20]
   32120:	str	r0, [r6]
   32124:	ldr	r0, [sp, #16]
   32128:	ldr	r0, [r0]
   3212c:	sub	r0, r2, r0
   32130:	add	r0, r0, #1
   32134:	str	r0, [r1]
   32138:	str	r2, [r7]
   3213c:	b	322a0 <flatcc_json_parser_generic_json@@Base+0x764>
   32140:	ldr	r7, [sp, #8]
   32144:	add	r1, r8, #4
   32148:	b	32588 <flatcc_json_parser_generic_json@@Base+0xa4c>
   3214c:	ldr	r0, [r6]
   32150:	cmp	r0, #0
   32154:	bne	322a0 <flatcc_json_parser_generic_json@@Base+0x764>
   32158:	mov	r0, #16
   3215c:	str	r0, [r6]
   32160:	ldr	r0, [sp, #16]
   32164:	ldr	r1, [sp, #12]
   32168:	ldr	r0, [r0]
   3216c:	sub	r0, r1, r0
   32170:	ldr	r1, [sp, #20]
   32174:	str	r0, [r1]
   32178:	str	r4, [r7]
   3217c:	b	322a0 <flatcc_json_parser_generic_json@@Base+0x764>
   32180:	mov	r2, r0
   32184:	b	31c2c <flatcc_json_parser_generic_json@@Base+0xf0>
   32188:	cmp	r1, r4
   3218c:	beq	3226c <flatcc_json_parser_generic_json@@Base+0x730>
   32190:	ldrb	r0, [r1]
   32194:	cmp	r0, #34	; 0x22
   32198:	bne	3226c <flatcc_json_parser_generic_json@@Base+0x730>
   3219c:	add	r1, r1, #1
   321a0:	b	322a4 <flatcc_json_parser_generic_json@@Base+0x768>
   321a4:	bne	321b4 <flatcc_json_parser_generic_json@@Base+0x678>
   321a8:	ldrb	r0, [r8, #2]!
   321ac:	cmp	r0, #32
   321b0:	bhi	321c4 <flatcc_json_parser_generic_json@@Base+0x688>
   321b4:	mov	r0, r5
   321b8:	mov	r2, r4
   321bc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   321c0:	mov	r8, r0
   321c4:	cmp	r8, r4
   321c8:	beq	32640 <flatcc_json_parser_generic_json@@Base+0xb04>
   321cc:	ldrb	r0, [r8]
   321d0:	add	r9, r9, #1
   321d4:	cmp	r0, #125	; 0x7d
   321d8:	b	32210 <flatcc_json_parser_generic_json@@Base+0x6d4>
   321dc:	bne	321ec <flatcc_json_parser_generic_json@@Base+0x6b0>
   321e0:	ldrb	r0, [r8, #2]!
   321e4:	cmp	r0, #32
   321e8:	bhi	321fc <flatcc_json_parser_generic_json@@Base+0x6c0>
   321ec:	mov	r0, r5
   321f0:	mov	r2, r4
   321f4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   321f8:	mov	r8, r0
   321fc:	cmp	r8, r4
   32200:	beq	32640 <flatcc_json_parser_generic_json@@Base+0xb04>
   32204:	ldrb	r0, [r8]
   32208:	add	r9, r9, #1
   3220c:	cmp	r0, #93	; 0x5d
   32210:	mov	r1, r8
   32214:	beq	322a4 <flatcc_json_parser_generic_json@@Base+0x768>
   32218:	b	32564 <flatcc_json_parser_generic_json@@Base+0xa28>
   3221c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   32220:	ldr	r2, [fp, #-36]	; 0xffffffdc
   32224:	subs	r1, r1, #256	; 0x100
   32228:	sbcs	r1, r2, #0
   3222c:	bcc	32584 <flatcc_json_parser_generic_json@@Base+0xa48>
   32230:	ldr	r1, [r6]
   32234:	cmp	r1, #0
   32238:	mov	r1, r4
   3223c:	bne	32588 <flatcc_json_parser_generic_json@@Base+0xa4c>
   32240:	mov	r1, #7
   32244:	str	r1, [r6]
   32248:	ldr	r1, [sp, #16]
   3224c:	ldr	r2, [sp, #20]
   32250:	ldr	r1, [r1]
   32254:	sub	r1, r0, r1
   32258:	add	r1, r1, #1
   3225c:	str	r1, [r2]
   32260:	mov	r1, r4
   32264:	str	r0, [r7]
   32268:	b	32588 <flatcc_json_parser_generic_json@@Base+0xa4c>
   3226c:	mov	r0, r1
   32270:	ldr	r1, [r6]
   32274:	cmp	r1, #0
   32278:	bne	322a0 <flatcc_json_parser_generic_json@@Base+0x764>
   3227c:	mov	r1, #20
   32280:	str	r1, [r6]
   32284:	ldr	r1, [sp, #16]
   32288:	ldr	r2, [sp, #20]
   3228c:	ldr	r1, [r1]
   32290:	sub	r1, r0, r1
   32294:	add	r1, r1, #1
   32298:	str	r1, [r2]
   3229c:	str	r0, [r7]
   322a0:	mov	r1, r4
   322a4:	subs	r0, r1, r4
   322a8:	mov	r3, r9
   322ac:	movwne	r0, #1
   322b0:	cmp	r9, #0
   322b4:	movwne	r3, #1
   322b8:	cmp	r1, r4
   322bc:	cmpne	r9, #0
   322c0:	beq	325e8 <flatcc_json_parser_generic_json@@Base+0xaac>
   322c4:	ldrb	r2, [sl, r9]
   322c8:	sub	r0, r4, r1
   322cc:	cmp	r2, #93	; 0x5d
   322d0:	bne	322f0 <flatcc_json_parser_generic_json@@Base+0x7b4>
   322d4:	cmp	r0, #2
   322d8:	blt	32320 <flatcc_json_parser_generic_json@@Base+0x7e4>
   322dc:	ldrb	r0, [r1]
   322e0:	cmp	r0, #32
   322e4:	bls	3230c <flatcc_json_parser_generic_json@@Base+0x7d0>
   322e8:	mov	r8, r1
   322ec:	b	32330 <flatcc_json_parser_generic_json@@Base+0x7f4>
   322f0:	cmp	r0, #2
   322f4:	blt	3237c <flatcc_json_parser_generic_json@@Base+0x840>
   322f8:	ldrb	r0, [r1]
   322fc:	cmp	r0, #32
   32300:	bls	32368 <flatcc_json_parser_generic_json@@Base+0x82c>
   32304:	mov	r8, r1
   32308:	b	3238c <flatcc_json_parser_generic_json@@Base+0x850>
   3230c:	bne	32320 <flatcc_json_parser_generic_json@@Base+0x7e4>
   32310:	mov	r8, r1
   32314:	ldrb	r0, [r8, #1]!
   32318:	cmp	r0, #32
   3231c:	bhi	32330 <flatcc_json_parser_generic_json@@Base+0x7f4>
   32320:	mov	r0, r5
   32324:	mov	r2, r4
   32328:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   3232c:	mov	r8, r0
   32330:	cmp	r8, r4
   32334:	mov	r1, r4
   32338:	beq	32538 <flatcc_json_parser_generic_json@@Base+0x9fc>
   3233c:	ldrb	r0, [r8]
   32340:	cmp	r0, #44	; 0x2c
   32344:	beq	323e4 <flatcc_json_parser_generic_json@@Base+0x8a8>
   32348:	cmp	r0, #93	; 0x5d
   3234c:	beq	324b0 <flatcc_json_parser_generic_json@@Base+0x974>
   32350:	ldr	r0, [r6]
   32354:	mov	r1, r4
   32358:	cmp	r0, #0
   3235c:	bne	32538 <flatcc_json_parser_generic_json@@Base+0x9fc>
   32360:	mov	r0, #9
   32364:	b	323c0 <flatcc_json_parser_generic_json@@Base+0x884>
   32368:	bne	3237c <flatcc_json_parser_generic_json@@Base+0x840>
   3236c:	mov	r8, r1
   32370:	ldrb	r0, [r8, #1]!
   32374:	cmp	r0, #32
   32378:	bhi	3238c <flatcc_json_parser_generic_json@@Base+0x850>
   3237c:	mov	r0, r5
   32380:	mov	r2, r4
   32384:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   32388:	mov	r8, r0
   3238c:	cmp	r8, r4
   32390:	mov	r1, r4
   32394:	beq	32538 <flatcc_json_parser_generic_json@@Base+0x9fc>
   32398:	ldrb	r0, [r8]
   3239c:	cmp	r0, #44	; 0x2c
   323a0:	beq	32408 <flatcc_json_parser_generic_json@@Base+0x8cc>
   323a4:	cmp	r0, #125	; 0x7d
   323a8:	beq	324b0 <flatcc_json_parser_generic_json@@Base+0x974>
   323ac:	ldr	r0, [r6]
   323b0:	mov	r1, r4
   323b4:	cmp	r0, #0
   323b8:	bne	32538 <flatcc_json_parser_generic_json@@Base+0x9fc>
   323bc:	mov	r0, #10
   323c0:	str	r0, [r6]
   323c4:	ldr	r0, [sp, #16]
   323c8:	ldr	r1, [sp, #20]
   323cc:	ldr	r0, [r0]
   323d0:	sub	r0, r8, r0
   323d4:	add	r0, r0, #1
   323d8:	str	r0, [r1]
   323dc:	str	r8, [r7]
   323e0:	b	32534 <flatcc_json_parser_generic_json@@Base+0x9f8>
   323e4:	add	r1, r8, #1
   323e8:	sub	r0, r4, r1
   323ec:	cmp	r0, #2
   323f0:	blt	3243c <flatcc_json_parser_generic_json@@Base+0x900>
   323f4:	ldrb	r0, [r1]
   323f8:	cmp	r0, #32
   323fc:	bls	3242c <flatcc_json_parser_generic_json@@Base+0x8f0>
   32400:	mov	r8, r1
   32404:	b	3244c <flatcc_json_parser_generic_json@@Base+0x910>
   32408:	add	r1, r8, #1
   3240c:	sub	r0, r4, r1
   32410:	cmp	r0, #2
   32414:	blt	3248c <flatcc_json_parser_generic_json@@Base+0x950>
   32418:	ldrb	r0, [r1]
   3241c:	cmp	r0, #32
   32420:	bls	3247c <flatcc_json_parser_generic_json@@Base+0x940>
   32424:	mov	r8, r1
   32428:	b	3249c <flatcc_json_parser_generic_json@@Base+0x960>
   3242c:	bne	3243c <flatcc_json_parser_generic_json@@Base+0x900>
   32430:	ldrb	r0, [r8, #2]!
   32434:	cmp	r0, #32
   32438:	bhi	3244c <flatcc_json_parser_generic_json@@Base+0x910>
   3243c:	mov	r0, r5
   32440:	mov	r2, r4
   32444:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   32448:	mov	r8, r0
   3244c:	cmp	r8, r4
   32450:	beq	32464 <flatcc_json_parser_generic_json@@Base+0x928>
   32454:	ldrb	r0, [r8]
   32458:	cmp	r0, #93	; 0x5d
   3245c:	beq	324b0 <flatcc_json_parser_generic_json@@Base+0x974>
   32460:	b	32564 <flatcc_json_parser_generic_json@@Base+0xa28>
   32464:	ldr	r0, [r6]
   32468:	mov	r1, r4
   3246c:	cmp	r0, #0
   32470:	bne	32538 <flatcc_json_parser_generic_json@@Base+0x9fc>
   32474:	mov	r0, #9
   32478:	b	32514 <flatcc_json_parser_generic_json@@Base+0x9d8>
   3247c:	bne	3248c <flatcc_json_parser_generic_json@@Base+0x950>
   32480:	ldrb	r0, [r8, #2]!
   32484:	cmp	r0, #32
   32488:	bhi	3249c <flatcc_json_parser_generic_json@@Base+0x960>
   3248c:	mov	r0, r5
   32490:	mov	r2, r4
   32494:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   32498:	mov	r8, r0
   3249c:	cmp	r8, r4
   324a0:	beq	32500 <flatcc_json_parser_generic_json@@Base+0x9c4>
   324a4:	ldrb	r0, [r8]
   324a8:	cmp	r0, #125	; 0x7d
   324ac:	bne	32564 <flatcc_json_parser_generic_json@@Base+0xa28>
   324b0:	add	r2, r8, #1
   324b4:	sub	r0, r4, r2
   324b8:	cmp	r0, #2
   324bc:	blt	324e8 <flatcc_json_parser_generic_json@@Base+0x9ac>
   324c0:	ldrb	r0, [r2]
   324c4:	cmp	r0, #32
   324c8:	bls	324d4 <flatcc_json_parser_generic_json@@Base+0x998>
   324cc:	mov	r1, r2
   324d0:	b	32538 <flatcc_json_parser_generic_json@@Base+0x9fc>
   324d4:	bne	324e8 <flatcc_json_parser_generic_json@@Base+0x9ac>
   324d8:	ldrb	r0, [r8, #2]!
   324dc:	mov	r1, r8
   324e0:	cmp	r0, #32
   324e4:	bhi	32538 <flatcc_json_parser_generic_json@@Base+0x9fc>
   324e8:	mov	r1, r2
   324ec:	mov	r0, r5
   324f0:	mov	r2, r4
   324f4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   324f8:	mov	r1, r0
   324fc:	b	32538 <flatcc_json_parser_generic_json@@Base+0x9fc>
   32500:	ldr	r0, [r6]
   32504:	mov	r1, r4
   32508:	cmp	r0, #0
   3250c:	bne	32538 <flatcc_json_parser_generic_json@@Base+0x9fc>
   32510:	mov	r0, #10
   32514:	str	r0, [r6]
   32518:	ldr	r0, [sp, #16]
   3251c:	ldr	r1, [sp, #12]
   32520:	ldr	r0, [r0]
   32524:	sub	r0, r1, r0
   32528:	ldr	r1, [sp, #20]
   3252c:	str	r0, [r1]
   32530:	str	r4, [r7]
   32534:	mov	r1, r4
   32538:	subs	r0, r1, r4
   3253c:	sub	r2, r9, #1
   32540:	movwne	r0, #1
   32544:	subs	r3, r9, #1
   32548:	movwne	r3, #1
   3254c:	cmp	r1, r4
   32550:	beq	325ec <flatcc_json_parser_generic_json@@Base+0xab0>
   32554:	cmp	r9, #1
   32558:	mov	r9, r2
   3255c:	bne	322c4 <flatcc_json_parser_generic_json@@Base+0x788>
   32560:	b	325ec <flatcc_json_parser_generic_json@@Base+0xab0>
   32564:	add	r0, sp, #28
   32568:	cmp	r8, r4
   3256c:	add	r0, r0, r9
   32570:	bne	31b8c <flatcc_json_parser_generic_json@@Base+0x50>
   32574:	b	32640 <flatcc_json_parser_generic_json@@Base+0xb04>
   32578:	ldr	r7, [sp, #8]
   3257c:	add	r1, r8, #5
   32580:	b	32588 <flatcc_json_parser_generic_json@@Base+0xa4c>
   32584:	mov	r1, r0
   32588:	cmp	r8, r1
   3258c:	bne	322a4 <flatcc_json_parser_generic_json@@Base+0x768>
   32590:	b	325d4 <flatcc_json_parser_generic_json@@Base+0xa98>
   32594:	cmp	r0, #92	; 0x5c
   32598:	bgt	325ac <flatcc_json_parser_generic_json@@Base+0xa70>
   3259c:	cmp	r0, #44	; 0x2c
   325a0:	beq	322a4 <flatcc_json_parser_generic_json@@Base+0x768>
   325a4:	cmp	r0, #58	; 0x3a
   325a8:	b	325b8 <flatcc_json_parser_generic_json@@Base+0xa7c>
   325ac:	cmp	r0, #93	; 0x5d
   325b0:	beq	322a4 <flatcc_json_parser_generic_json@@Base+0x768>
   325b4:	cmp	r0, #125	; 0x7d
   325b8:	mov	r2, r1
   325bc:	beq	322a4 <flatcc_json_parser_generic_json@@Base+0x768>
   325c0:	b	3210c <flatcc_json_parser_generic_json@@Base+0x5d0>
   325c4:	mov	r2, r1
   325c8:	b	3210c <flatcc_json_parser_generic_json@@Base+0x5d0>
   325cc:	mov	r1, r8
   325d0:	b	32644 <flatcc_json_parser_generic_json@@Base+0xb08>
   325d4:	ldr	r0, [r6]
   325d8:	cmp	r0, #0
   325dc:	bne	32640 <flatcc_json_parser_generic_json@@Base+0xb04>
   325e0:	mov	r0, #5
   325e4:	b	3268c <flatcc_json_parser_generic_json@@Base+0xb50>
   325e8:	mov	r2, r9
   325ec:	cmp	r0, #0
   325f0:	bne	32644 <flatcc_json_parser_generic_json@@Base+0xb08>
   325f4:	cmp	r3, #0
   325f8:	beq	32644 <flatcc_json_parser_generic_json@@Base+0xb08>
   325fc:	ldr	r0, [r6]
   32600:	cmp	r0, #0
   32604:	bne	32640 <flatcc_json_parser_generic_json@@Base+0xb04>
   32608:	add	r0, sp, #28
   3260c:	mov	r1, #10
   32610:	add	r0, r0, r2
   32614:	ldrb	r0, [r0, #-1]
   32618:	cmp	r0, #93	; 0x5d
   3261c:	movweq	r1, #9
   32620:	str	r1, [r6]
   32624:	ldr	r0, [sp, #16]
   32628:	ldr	r1, [sp, #12]
   3262c:	ldr	r0, [r0]
   32630:	sub	r0, r1, r0
   32634:	ldr	r1, [sp, #20]
   32638:	str	r0, [r1]
   3263c:	str	r4, [r7]
   32640:	mov	r1, r4
   32644:	mov	r0, r1
   32648:	sub	sp, fp, #28
   3264c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32650:	ldr	r0, [r6]
   32654:	cmp	r0, #0
   32658:	bne	32640 <flatcc_json_parser_generic_json@@Base+0xb04>
   3265c:	mov	r0, #10
   32660:	str	r0, [r6]
   32664:	b	32624 <flatcc_json_parser_generic_json@@Base+0xae8>
   32668:	ldr	r0, [r6]
   3266c:	cmp	r0, #0
   32670:	bne	32640 <flatcc_json_parser_generic_json@@Base+0xb04>
   32674:	mov	r0, #4
   32678:	b	3268c <flatcc_json_parser_generic_json@@Base+0xb50>
   3267c:	ldr	r0, [r6]
   32680:	cmp	r0, #0
   32684:	bne	32640 <flatcc_json_parser_generic_json@@Base+0xb04>
   32688:	mov	r0, #2
   3268c:	str	r0, [r6]
   32690:	ldr	r0, [sp, #16]
   32694:	ldr	r1, [sp, #20]
   32698:	ldr	r0, [r0]
   3269c:	sub	r0, r8, r0
   326a0:	add	r0, r0, #1
   326a4:	str	r0, [r1]
   326a8:	str	r8, [r7]
   326ac:	b	32640 <flatcc_json_parser_generic_json@@Base+0xb04>

000326b0 <flatcc_json_parser_double@@Base>:
   326b0:	push	{r4, r5, r6, r7, fp, lr}
   326b4:	add	fp, sp, #16
   326b8:	mov	r5, r0
   326bc:	mov	r0, #0
   326c0:	mov	r6, r1
   326c4:	cmp	r1, r2
   326c8:	str	r0, [r3]
   326cc:	str	r0, [r3, #4]
   326d0:	beq	32774 <flatcc_json_parser_double@@Base+0xc4>
   326d4:	mov	r0, r6
   326d8:	mov	r4, r2
   326dc:	mov	r7, r3
   326e0:	ldrb	r1, [r0], #1
   326e4:	cmp	r1, #45	; 0x2d
   326e8:	movne	r0, r6
   326ec:	sub	r2, r2, r0
   326f0:	cmp	r2, #2
   326f4:	blt	32734 <flatcc_json_parser_double@@Base+0x84>
   326f8:	sub	r1, r1, #45	; 0x2d
   326fc:	clz	r1, r1
   32700:	lsr	r1, r1, #5
   32704:	ldrb	r1, [r6, r1]
   32708:	cmp	r1, #46	; 0x2e
   3270c:	beq	32724 <flatcc_json_parser_double@@Base+0x74>
   32710:	cmp	r1, #48	; 0x30
   32714:	bne	32734 <flatcc_json_parser_double@@Base+0x84>
   32718:	ldrb	r0, [r0, #1]
   3271c:	cmp	r0, #48	; 0x30
   32720:	bne	32734 <flatcc_json_parser_double@@Base+0x84>
   32724:	ldr	r0, [r5, #20]
   32728:	cmp	r0, #0
   3272c:	bne	327a0 <flatcc_json_parser_double@@Base+0xf0>
   32730:	b	32784 <flatcc_json_parser_double@@Base+0xd4>
   32734:	sub	r1, r4, r6
   32738:	mov	r0, r6
   3273c:	mov	r2, r7
   32740:	bl	327a8 <flatcc_json_parser_double@@Base+0xf8>
   32744:	cmp	r0, #0
   32748:	cmpne	r0, r6
   3274c:	bne	327a4 <flatcc_json_parser_double@@Base+0xf4>
   32750:	vldr	d0, [r7]
   32754:	bl	14e74 <__isinf@plt>
   32758:	ldr	r1, [r5, #20]
   3275c:	cmp	r0, #0
   32760:	beq	3277c <flatcc_json_parser_double@@Base+0xcc>
   32764:	cmp	r1, #0
   32768:	bne	327a0 <flatcc_json_parser_double@@Base+0xf0>
   3276c:	mov	r0, #7
   32770:	b	32788 <flatcc_json_parser_double@@Base+0xd8>
   32774:	mov	r0, r6
   32778:	pop	{r4, r5, r6, r7, fp, pc}
   3277c:	cmp	r1, #0
   32780:	bne	327a0 <flatcc_json_parser_double@@Base+0xf0>
   32784:	mov	r0, #6
   32788:	str	r6, [r5, #32]
   3278c:	ldr	r1, [r5, #4]
   32790:	sub	r1, r6, r1
   32794:	add	r1, r1, #1
   32798:	str	r1, [r5, #16]
   3279c:	str	r0, [r5, #20]
   327a0:	mov	r0, r4
   327a4:	pop	{r4, r5, r6, r7, fp, pc}
   327a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   327ac:	add	fp, sp, #28
   327b0:	sub	sp, sp, #36	; 0x24
   327b4:	cmp	r1, #1000	; 0x3e8
   327b8:	mov	r3, r1
   327bc:	mov	r5, #0
   327c0:	mov	r9, r0
   327c4:	movge	r3, #1000	; 0x3e8
   327c8:	str	r5, [r2]
   327cc:	str	r5, [r2, #4]
   327d0:	add	ip, r0, r3
   327d4:	add	lr, ip, #1
   327d8:	cmp	lr, r0
   327dc:	beq	32850 <flatcc_json_parser_double@@Base+0x1a0>
   327e0:	ldrb	r0, [r9]
   327e4:	mov	r4, r9
   327e8:	cmp	r0, #45	; 0x2d
   327ec:	bne	32804 <flatcc_json_parser_double@@Base+0x154>
   327f0:	cmp	r3, #0
   327f4:	beq	32b90 <flatcc_json_parser_double@@Base+0x4e0>
   327f8:	add	r4, r9, #1
   327fc:	mov	r5, #1
   32800:	ldrb	r0, [r4]
   32804:	cmp	r0, #48	; 0x30
   32808:	bne	32838 <flatcc_json_parser_double@@Base+0x188>
   3280c:	add	r6, r4, #1
   32810:	cmp	r4, ip
   32814:	beq	3289c <flatcc_json_parser_double@@Base+0x1ec>
   32818:	ldrb	r1, [r6]
   3281c:	orr	r0, r1, #32
   32820:	cmp	r0, #120	; 0x78
   32824:	bne	32868 <flatcc_json_parser_double@@Base+0x1b8>
   32828:	mov	r0, #0
   3282c:	str	r0, [r2]
   32830:	str	r0, [r2, #4]
   32834:	b	32850 <flatcc_json_parser_double@@Base+0x1a0>
   32838:	sub	r1, r0, #49	; 0x31
   3283c:	uxtb	r1, r1
   32840:	cmp	r1, #9
   32844:	bcc	32858 <flatcc_json_parser_double@@Base+0x1a8>
   32848:	cmp	r5, #0
   3284c:	movne	r9, #0
   32850:	mov	r2, r9
   32854:	b	32b94 <flatcc_json_parser_double@@Base+0x4e4>
   32858:	sub	r0, r0, #48	; 0x30
   3285c:	add	r6, r4, #1
   32860:	asr	r1, r0, #31
   32864:	b	328a4 <flatcc_json_parser_double@@Base+0x1f4>
   32868:	cmp	r1, #48	; 0x30
   3286c:	mov	r0, #0
   32870:	mov	r1, #0
   32874:	bne	328a4 <flatcc_json_parser_double@@Base+0x1f4>
   32878:	sub	r0, ip, #1
   3287c:	mov	r1, r4
   32880:	cmp	r0, r4
   32884:	beq	32898 <flatcc_json_parser_double@@Base+0x1e8>
   32888:	ldrb	r7, [r1, #2]
   3288c:	add	r4, r1, #1
   32890:	cmp	r7, #48	; 0x30
   32894:	beq	3287c <flatcc_json_parser_double@@Base+0x1cc>
   32898:	add	r6, r1, #2
   3289c:	mov	r0, #0
   328a0:	mov	r1, #0
   328a4:	cmp	r6, lr
   328a8:	beq	32b90 <flatcc_json_parser_double@@Base+0x4e0>
   328ac:	mov	sl, #10
   328b0:	mov	r7, r6
   328b4:	str	r2, [sp, #20]
   328b8:	ldrb	r8, [r7]
   328bc:	sub	r2, r8, #48	; 0x30
   328c0:	uxtb	r4, r2
   328c4:	mov	r2, #0
   328c8:	cmp	r4, #9
   328cc:	bhi	3290c <flatcc_json_parser_double@@Base+0x25c>
   328d0:	movw	r4, #39320	; 0x9998
   328d4:	movt	r4, #39321	; 0x9999
   328d8:	subs	r4, r4, r0
   328dc:	movw	r4, #39321	; 0x9999
   328e0:	movt	r4, #6553	; 0x1999
   328e4:	sbcs	r4, r4, r1
   328e8:	bcc	3291c <flatcc_json_parser_double@@Base+0x26c>
   328ec:	add	r1, r1, r1, lsl #2
   328f0:	add	r7, r7, #1
   328f4:	lsl	r1, r1, #1
   328f8:	umlal	r8, r1, r0, sl
   328fc:	subs	r0, r8, #48	; 0x30
   32900:	sbc	r1, r1, #0
   32904:	cmp	lr, r7
   32908:	bne	328b8 <flatcc_json_parser_double@@Base+0x208>
   3290c:	mov	r8, r0
   32910:	mov	sl, r1
   32914:	mov	r0, #0
   32918:	b	32938 <flatcc_json_parser_double@@Base+0x288>
   3291c:	adds	r4, r0, #1
   32920:	adc	sl, r1, #0
   32924:	cmp	r8, #52	; 0x34
   32928:	mov	r8, r4
   3292c:	movls	r8, r0
   32930:	movls	sl, r1
   32934:	mov	r0, #1
   32938:	cmp	r7, lr
   3293c:	str	r0, [sp, #24]
   32940:	beq	32b94 <flatcc_json_parser_double@@Base+0x4e4>
   32944:	sub	r0, r7, r6
   32948:	mov	r6, #0
   3294c:	str	r0, [sp, #16]
   32950:	sub	r0, r3, r7
   32954:	add	r0, r9, r0
   32958:	ldrb	r1, [r7]
   3295c:	cmp	r1, #48	; 0x30
   32960:	bne	32984 <flatcc_json_parser_double@@Base+0x2d4>
   32964:	add	r1, r7, #1
   32968:	cmp	r7, ip
   3296c:	sub	r0, r0, #1
   32970:	add	r6, r6, #1
   32974:	mov	r7, r1
   32978:	bne	32958 <flatcc_json_parser_double@@Base+0x2a8>
   3297c:	mov	r7, r1
   32980:	b	329d0 <flatcc_json_parser_double@@Base+0x320>
   32984:	sub	r1, r1, #49	; 0x31
   32988:	uxtb	r1, r1
   3298c:	cmp	r1, #8
   32990:	bhi	329d0 <flatcc_json_parser_double@@Base+0x320>
   32994:	mvn	r2, #0
   32998:	mov	r1, r2
   3299c:	cmp	r0, #0
   329a0:	beq	329c0 <flatcc_json_parser_double@@Base+0x310>
   329a4:	ldrb	r2, [r7, -r1]
   329a8:	sub	r0, r0, #1
   329ac:	sub	r2, r2, #48	; 0x30
   329b0:	uxtb	r4, r2
   329b4:	sub	r2, r1, #1
   329b8:	cmp	r4, #10
   329bc:	bcc	32998 <flatcc_json_parser_double@@Base+0x2e8>
   329c0:	mov	r0, #1
   329c4:	sub	r6, r6, r1
   329c8:	sub	r7, r7, r1
   329cc:	str	r0, [sp, #24]
   329d0:	mov	r2, #0
   329d4:	cmp	r7, lr
   329d8:	beq	32b94 <flatcc_json_parser_double@@Base+0x4e4>
   329dc:	ldrb	r0, [r7]
   329e0:	cmp	r0, #46	; 0x2e
   329e4:	bne	32b68 <flatcc_json_parser_double@@Base+0x4b8>
   329e8:	mov	r4, r7
   329ec:	ldrb	r0, [r4, #1]!
   329f0:	sub	r1, r0, #48	; 0x30
   329f4:	uxtb	r1, r1
   329f8:	cmp	r1, #9
   329fc:	bhi	32b94 <flatcc_json_parser_double@@Base+0x4e4>
   32a00:	cmp	r7, ip
   32a04:	beq	32aac <flatcc_json_parser_double@@Base+0x3fc>
   32a08:	sub	r1, r3, r7
   32a0c:	str	r4, [sp, #8]
   32a10:	add	r1, r1, r9
   32a14:	sub	r1, r1, #1
   32a18:	str	r1, [sp, #12]
   32a1c:	mov	r1, #0
   32a20:	mov	r3, r1
   32a24:	movw	r1, #39320	; 0x9998
   32a28:	movt	r1, #39321	; 0x9999
   32a2c:	subs	r1, r1, r8
   32a30:	movw	r1, #39321	; 0x9999
   32a34:	movt	r1, #6553	; 0x1999
   32a38:	sbcs	r1, r1, sl
   32a3c:	bcc	32ab4 <flatcc_json_parser_double@@Base+0x404>
   32a40:	add	r1, sl, sl, lsl #2
   32a44:	uxtb	r0, r0
   32a48:	mov	r4, #10
   32a4c:	lsl	r1, r1, #1
   32a50:	umlal	r0, r1, r8, r4
   32a54:	add	r4, r7, r3
   32a58:	subs	r8, r0, #48	; 0x30
   32a5c:	ldr	r0, [sp, #12]
   32a60:	sbc	sl, r1, #0
   32a64:	cmp	r0, r3
   32a68:	beq	32a9c <flatcc_json_parser_double@@Base+0x3ec>
   32a6c:	ldrb	r0, [r4, #2]
   32a70:	str	sl, [sp, #28]
   32a74:	mov	sl, r8
   32a78:	mov	r8, r5
   32a7c:	add	r1, r3, #1
   32a80:	sub	r5, r0, #48	; 0x30
   32a84:	uxtb	r5, r5
   32a88:	cmp	r5, #10
   32a8c:	mov	r5, r8
   32a90:	mov	r8, sl
   32a94:	ldr	sl, [sp, #28]
   32a98:	bcc	32a20 <flatcc_json_parser_double@@Base+0x370>
   32a9c:	mvn	r0, r3
   32aa0:	add	r7, r4, #2
   32aa4:	add	r6, r0, r6
   32aa8:	b	32aec <flatcc_json_parser_double@@Base+0x43c>
   32aac:	mov	r7, r4
   32ab0:	b	32af0 <flatcc_json_parser_double@@Base+0x440>
   32ab4:	add	r1, r7, r3
   32ab8:	sub	r6, r6, r3
   32abc:	add	r7, r1, #1
   32ac0:	ldr	r1, [sp, #24]
   32ac4:	cmp	r1, #0
   32ac8:	bne	32aec <flatcc_json_parser_double@@Base+0x43c>
   32acc:	uxtb	r0, r0
   32ad0:	adds	r1, r8, #1
   32ad4:	adc	r3, sl, #0
   32ad8:	cmp	r0, #52	; 0x34
   32adc:	mov	r0, #1
   32ae0:	movhi	r8, r1
   32ae4:	movhi	sl, r3
   32ae8:	str	r0, [sp, #24]
   32aec:	ldr	r4, [sp, #8]
   32af0:	cmp	r7, lr
   32af4:	beq	32b94 <flatcc_json_parser_double@@Base+0x4e4>
   32af8:	ldr	r1, [sp, #16]
   32afc:	sub	r0, r7, r4
   32b00:	add	r1, r0, r1
   32b04:	str	r1, [sp, #16]
   32b08:	ldrb	r0, [r7]
   32b0c:	cmp	r0, #48	; 0x30
   32b10:	bne	32b28 <flatcc_json_parser_double@@Base+0x478>
   32b14:	add	r7, r7, #1
   32b18:	add	r6, r6, #1
   32b1c:	cmp	lr, r7
   32b20:	bne	32b08 <flatcc_json_parser_double@@Base+0x458>
   32b24:	b	32b68 <flatcc_json_parser_double@@Base+0x4b8>
   32b28:	sub	r0, r0, #49	; 0x31
   32b2c:	uxtb	r0, r0
   32b30:	cmp	r0, #8
   32b34:	bhi	32b68 <flatcc_json_parser_double@@Base+0x4b8>
   32b38:	mov	r0, r7
   32b3c:	cmp	ip, r7
   32b40:	beq	32b5c <flatcc_json_parser_double@@Base+0x4ac>
   32b44:	ldrb	r1, [r0, #1]
   32b48:	add	r7, r0, #1
   32b4c:	sub	r1, r1, #48	; 0x30
   32b50:	uxtb	r1, r1
   32b54:	cmp	r1, #10
   32b58:	bcc	32b38 <flatcc_json_parser_double@@Base+0x488>
   32b5c:	add	r7, r0, #1
   32b60:	mov	r0, #1
   32b64:	str	r0, [sp, #24]
   32b68:	cmp	r7, lr
   32b6c:	beq	32b94 <flatcc_json_parser_double@@Base+0x4e4>
   32b70:	ldrb	r0, [r7]
   32b74:	mov	r4, #0
   32b78:	orr	r0, r0, #32
   32b7c:	cmp	r0, #101	; 0x65
   32b80:	bne	32ba0 <flatcc_json_parser_double@@Base+0x4f0>
   32b84:	sub	r0, lr, r7
   32b88:	cmp	r0, #2
   32b8c:	bge	32c0c <flatcc_json_parser_double@@Base+0x55c>
   32b90:	mov	r2, #0
   32b94:	mov	r0, r2
   32b98:	sub	sp, fp, #28
   32b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32ba0:	mov	r0, #0
   32ba4:	cmp	r7, lr
   32ba8:	mov	r2, #0
   32bac:	beq	32b94 <flatcc_json_parser_double@@Base+0x4e4>
   32bb0:	vmov.i32	d16, #0	; 0x00000000
   32bb4:	cmp	r4, #0
   32bb8:	rsbne	r0, r0, #0
   32bbc:	orrs	r1, r8, sl
   32bc0:	beq	32be8 <flatcc_json_parser_double@@Base+0x538>
   32bc4:	ldr	r2, [sp, #16]
   32bc8:	add	r1, r2, r6
   32bcc:	add	r4, r1, r0
   32bd0:	cmn	r4, #324	; 0x144
   32bd4:	blt	32be8 <flatcc_json_parser_double@@Base+0x538>
   32bd8:	movw	r0, #310	; 0x136
   32bdc:	cmp	r4, r0
   32be0:	ble	32c40 <flatcc_json_parser_double@@Base+0x590>
   32be4:	vldr	d16, [pc, #876]	; 32f58 <flatcc_json_parser_double@@Base+0x8a8>
   32be8:	ldr	r4, [sp, #20]
   32bec:	vstr	d16, [r4]
   32bf0:	cmp	r5, #0
   32bf4:	beq	32c04 <flatcc_json_parser_double@@Base+0x554>
   32bf8:	vldr	d16, [r4]
   32bfc:	vneg.f64	d16, d16
   32c00:	vstr	d16, [r4]
   32c04:	mov	r2, r7
   32c08:	b	32b94 <flatcc_json_parser_double@@Base+0x4e4>
   32c0c:	mov	r3, r7
   32c10:	ldrb	r0, [r3, #1]!
   32c14:	cmp	r0, #45	; 0x2d
   32c18:	beq	32d3c <flatcc_json_parser_double@@Base+0x68c>
   32c1c:	mov	r4, #0
   32c20:	cmp	r0, #43	; 0x2b
   32c24:	bne	32d4c <flatcc_json_parser_double@@Base+0x69c>
   32c28:	add	r3, r7, #2
   32c2c:	mov	r2, #0
   32c30:	cmp	r3, lr
   32c34:	beq	32b94 <flatcc_json_parser_double@@Base+0x4e4>
   32c38:	mov	r4, #0
   32c3c:	b	32d4c <flatcc_json_parser_double@@Base+0x69c>
   32c40:	mov	r0, #0
   32c44:	mov	r6, r2
   32c48:	cmp	r0, sl, lsr #21
   32c4c:	bne	32da4 <flatcc_json_parser_double@@Base+0x6f4>
   32c50:	cmp	r4, #22
   32c54:	bhi	32da4 <flatcc_json_parser_double@@Base+0x6f4>
   32c58:	mov	r0, r8
   32c5c:	mov	r1, sl
   32c60:	bl	40b3c <flatcc_json_printer_clear@@Base+0x8b8>
   32c64:	vmov	d16, r0, r1
   32c68:	sub	r2, r4, r6
   32c6c:	add	r0, r2, #22
   32c70:	cmp	r0, #44	; 0x2c
   32c74:	bhi	32be8 <flatcc_json_parser_double@@Base+0x538>
   32c78:	add	r1, pc, #0
   32c7c:	ldr	pc, [r1, r0, lsl #2]
   32c80:	andeq	r2, r3, r4, lsr sp
   32c84:	strdeq	r2, [r3], -r4
   32c88:	strdeq	r2, [r3], -ip
   32c8c:	andeq	r2, r3, r4, lsl #28
   32c90:	andeq	r2, r3, ip, lsl #28
   32c94:	andeq	r2, r3, r4, lsl lr
   32c98:	andeq	r2, r3, ip, lsl lr
   32c9c:	andeq	r2, r3, r4, lsr #28
   32ca0:	andeq	r2, r3, ip, lsr #28
   32ca4:	andeq	r2, r3, r4, lsr lr
   32ca8:	andeq	r2, r3, ip, lsr lr
   32cac:	andeq	r2, r3, r4, asr #28
   32cb0:	andeq	r2, r3, ip, asr #28
   32cb4:	andeq	r2, r3, r4, asr lr
   32cb8:	andeq	r2, r3, ip, asr lr
   32cbc:	andeq	r2, r3, r4, ror #28
   32cc0:	andeq	r2, r3, ip, ror #28
   32cc4:	andeq	r2, r3, r4, ror lr
   32cc8:	andeq	r2, r3, ip, ror lr
   32ccc:	andeq	r2, r3, r4, lsl #29
   32cd0:	andeq	r2, r3, ip, lsl #29
   32cd4:	muleq	r3, r4, lr
   32cd8:	andeq	r2, r3, r8, ror #23
   32cdc:	andeq	r2, r3, r0, lsr #29
   32ce0:	andeq	r2, r3, r8, lsr #29
   32ce4:			; <UNDEFINED> instruction: 0x00032eb0
   32ce8:			; <UNDEFINED> instruction: 0x00032eb8
   32cec:	andeq	r2, r3, r0, asr #29
   32cf0:	andeq	r2, r3, r8, asr #29
   32cf4:	ldrdeq	r2, [r3], -r0
   32cf8:	ldrdeq	r2, [r3], -r8
   32cfc:	andeq	r2, r3, r0, ror #29
   32d00:	andeq	r2, r3, r8, ror #29
   32d04:	strdeq	r2, [r3], -r0
   32d08:	strdeq	r2, [r3], -r8
   32d0c:	andeq	r2, r3, r0, lsl #30
   32d10:	andeq	r2, r3, r8, lsl #30
   32d14:	andeq	r2, r3, r0, lsl pc
   32d18:	andeq	r2, r3, r8, lsl pc
   32d1c:	andeq	r2, r3, r0, lsr #30
   32d20:	andeq	r2, r3, r8, lsr #30
   32d24:	andeq	r2, r3, r0, lsr pc
   32d28:	andeq	r2, r3, r8, lsr pc
   32d2c:	andeq	r2, r3, r0, asr #30
   32d30:	andeq	r2, r3, r8, asr #30
   32d34:	vldr	d17, [pc, #708]	; 33000 <flatcc_json_parser_double@@Base+0x950>
   32d38:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32d3c:	add	r3, r7, #2
   32d40:	mov	r4, #1
   32d44:	cmp	r3, lr
   32d48:	beq	32b90 <flatcc_json_parser_double@@Base+0x4e0>
   32d4c:	ldrb	r0, [r3]
   32d50:	mov	r2, #0
   32d54:	sub	r0, r0, #48	; 0x30
   32d58:	uxtb	r1, r0
   32d5c:	cmp	r1, #9
   32d60:	bhi	32b94 <flatcc_json_parser_double@@Base+0x4e4>
   32d64:	cmp	r3, ip
   32d68:	beq	32d9c <flatcc_json_parser_double@@Base+0x6ec>
   32d6c:	ldrb	r1, [r3, #1]
   32d70:	sub	r2, r1, #48	; 0x30
   32d74:	uxtb	r2, r2
   32d78:	cmp	r2, #9
   32d7c:	bhi	32d9c <flatcc_json_parser_double@@Base+0x6ec>
   32d80:	cmp	r0, #32768	; 0x8000
   32d84:	add	r3, r3, #1
   32d88:	addlt	r0, r0, r0, lsl #2
   32d8c:	addlt	r0, r1, r0, lsl #1
   32d90:	sublt	r0, r0, #48	; 0x30
   32d94:	cmp	ip, r3
   32d98:	bne	32d6c <flatcc_json_parser_double@@Base+0x6bc>
   32d9c:	add	r7, r3, #1
   32da0:	b	32ba4 <flatcc_json_parser_double@@Base+0x4f4>
   32da4:	ldr	r0, [sp, #24]
   32da8:	ldr	r3, [sp, #20]
   32dac:	mov	r2, r4
   32db0:	mov	r1, sl
   32db4:	str	r0, [sp]
   32db8:	str	r3, [sp, #4]
   32dbc:	mov	r4, r3
   32dc0:	mov	r0, r8
   32dc4:	mov	r3, r6
   32dc8:	bl	30e60 <grisu3_diy_fp_encode_double@@Base>
   32dcc:	cmp	r0, #0
   32dd0:	bne	32bf0 <flatcc_json_parser_double@@Base+0x540>
   32dd4:	add	r1, sp, #32
   32dd8:	mov	r0, r9
   32ddc:	bl	14f04 <strtod@plt>
   32de0:	vstr	d0, [r4]
   32de4:	ldr	r0, [sp, #32]
   32de8:	cmp	r0, r7
   32dec:	movcc	r7, r0
   32df0:	b	32c04 <flatcc_json_parser_double@@Base+0x554>
   32df4:	vldr	d17, [pc, #356]	; 32f60 <flatcc_json_parser_double@@Base+0x8b0>
   32df8:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32dfc:	vldr	d17, [pc, #356]	; 32f68 <flatcc_json_parser_double@@Base+0x8b8>
   32e00:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e04:	vldr	d17, [pc, #356]	; 32f70 <flatcc_json_parser_double@@Base+0x8c0>
   32e08:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e0c:	vldr	d17, [pc, #356]	; 32f78 <flatcc_json_parser_double@@Base+0x8c8>
   32e10:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e14:	vldr	d17, [pc, #356]	; 32f80 <flatcc_json_parser_double@@Base+0x8d0>
   32e18:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e1c:	vldr	d17, [pc, #356]	; 32f88 <flatcc_json_parser_double@@Base+0x8d8>
   32e20:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e24:	vldr	d17, [pc, #356]	; 32f90 <flatcc_json_parser_double@@Base+0x8e0>
   32e28:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e2c:	vldr	d17, [pc, #356]	; 32f98 <flatcc_json_parser_double@@Base+0x8e8>
   32e30:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e34:	vldr	d17, [pc, #356]	; 32fa0 <flatcc_json_parser_double@@Base+0x8f0>
   32e38:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e3c:	vldr	d17, [pc, #356]	; 32fa8 <flatcc_json_parser_double@@Base+0x8f8>
   32e40:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e44:	vldr	d17, [pc, #356]	; 32fb0 <flatcc_json_parser_double@@Base+0x900>
   32e48:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e4c:	vldr	d17, [pc, #356]	; 32fb8 <flatcc_json_parser_double@@Base+0x908>
   32e50:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e54:	vldr	d17, [pc, #356]	; 32fc0 <flatcc_json_parser_double@@Base+0x910>
   32e58:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e5c:	vldr	d17, [pc, #356]	; 32fc8 <flatcc_json_parser_double@@Base+0x918>
   32e60:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e64:	vldr	d17, [pc, #356]	; 32fd0 <flatcc_json_parser_double@@Base+0x920>
   32e68:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e6c:	vldr	d17, [pc, #356]	; 32fd8 <flatcc_json_parser_double@@Base+0x928>
   32e70:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e74:	vldr	d17, [pc, #356]	; 32fe0 <flatcc_json_parser_double@@Base+0x930>
   32e78:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e7c:	vldr	d17, [pc, #356]	; 32fe8 <flatcc_json_parser_double@@Base+0x938>
   32e80:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e84:	vldr	d17, [pc, #356]	; 32ff0 <flatcc_json_parser_double@@Base+0x940>
   32e88:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e8c:	vldr	d17, [pc, #356]	; 32ff8 <flatcc_json_parser_double@@Base+0x948>
   32e90:	b	32e98 <flatcc_json_parser_double@@Base+0x7e8>
   32e94:	vmov.f64	d17, #36	; 0x41200000  10.0
   32e98:	vdiv.f64	d16, d16, d17
   32e9c:	b	32be8 <flatcc_json_parser_double@@Base+0x538>
   32ea0:	vmov.f64	d17, #36	; 0x41200000  10.0
   32ea4:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32ea8:	vldr	d17, [pc, #328]	; 32ff8 <flatcc_json_parser_double@@Base+0x948>
   32eac:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32eb0:	vldr	d17, [pc, #312]	; 32ff0 <flatcc_json_parser_double@@Base+0x940>
   32eb4:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32eb8:	vldr	d17, [pc, #296]	; 32fe8 <flatcc_json_parser_double@@Base+0x938>
   32ebc:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32ec0:	vldr	d17, [pc, #280]	; 32fe0 <flatcc_json_parser_double@@Base+0x930>
   32ec4:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32ec8:	vldr	d17, [pc, #264]	; 32fd8 <flatcc_json_parser_double@@Base+0x928>
   32ecc:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32ed0:	vldr	d17, [pc, #248]	; 32fd0 <flatcc_json_parser_double@@Base+0x920>
   32ed4:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32ed8:	vldr	d17, [pc, #232]	; 32fc8 <flatcc_json_parser_double@@Base+0x918>
   32edc:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32ee0:	vldr	d17, [pc, #216]	; 32fc0 <flatcc_json_parser_double@@Base+0x910>
   32ee4:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32ee8:	vldr	d17, [pc, #200]	; 32fb8 <flatcc_json_parser_double@@Base+0x908>
   32eec:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32ef0:	vldr	d17, [pc, #184]	; 32fb0 <flatcc_json_parser_double@@Base+0x900>
   32ef4:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32ef8:	vldr	d17, [pc, #168]	; 32fa8 <flatcc_json_parser_double@@Base+0x8f8>
   32efc:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32f00:	vldr	d17, [pc, #152]	; 32fa0 <flatcc_json_parser_double@@Base+0x8f0>
   32f04:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32f08:	vldr	d17, [pc, #136]	; 32f98 <flatcc_json_parser_double@@Base+0x8e8>
   32f0c:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32f10:	vldr	d17, [pc, #120]	; 32f90 <flatcc_json_parser_double@@Base+0x8e0>
   32f14:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32f18:	vldr	d17, [pc, #104]	; 32f88 <flatcc_json_parser_double@@Base+0x8d8>
   32f1c:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32f20:	vldr	d17, [pc, #88]	; 32f80 <flatcc_json_parser_double@@Base+0x8d0>
   32f24:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32f28:	vldr	d17, [pc, #72]	; 32f78 <flatcc_json_parser_double@@Base+0x8c8>
   32f2c:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32f30:	vldr	d17, [pc, #56]	; 32f70 <flatcc_json_parser_double@@Base+0x8c0>
   32f34:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32f38:	vldr	d17, [pc, #40]	; 32f68 <flatcc_json_parser_double@@Base+0x8b8>
   32f3c:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32f40:	vldr	d17, [pc, #24]	; 32f60 <flatcc_json_parser_double@@Base+0x8b0>
   32f44:	b	32f4c <flatcc_json_parser_double@@Base+0x89c>
   32f48:	vldr	d17, [pc, #176]	; 33000 <flatcc_json_parser_double@@Base+0x950>
   32f4c:	vmul.f64	d16, d16, d17
   32f50:	b	32be8 <flatcc_json_parser_double@@Base+0x538>
   32f54:	nop	{0}
   32f58:	andeq	r0, r0, r0
   32f5c:	svcvc	0x00f00000	; IMB
   32f60:	usatle	lr, #2, r0, asr #30
   32f64:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   32f68:	ldmvc	r5!, {r6, sl, fp, pc}
   32f6c:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   32f70:	addsvs	r3, r1, r0, lsl #26
   32f74:	mvnmi	r5, #228, 16	; 0xe40000
   32f78:	strbvs	ip, [lr, -r0, lsl #16]
   32f7c:			; <UNDEFINED> instruction: 0x43abc16d
   32f80:	ldrbhi	sl, [r8]
   32f84:	cmnmi	r6, #1459617792	; 0x57000000
   32f88:	strbcc	r8, [r0, r0]!
   32f8c:	movtmi	ip, #4985	; 0x1379
   32f90:	ldrtcs	r0, [r4], -r0
   32f94:	movwmi	r6, #52213	; 0xcbf5
   32f98:	cdpne	0, 9, cr0, cr0, cr0, {0}
   32f9c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   32fa0:	strb	r0, [r0, #-0]
   32fa4:	adcmi	r3, r2, #156	; 0x9c
   32fa8:	andge	r0, r0, #0
   32fac:	rsbmi	r1, sp, #148, 20	; 0x94000
   32fb0:	stmda	r0, {}	; <UNPREDICTABLE>
   32fb4:	eorsmi	r4, r7, #7733248	; 0x760000
   32fb8:	andcs	r0, r0, r0
   32fbc:	andmi	sl, r2, #95	; 0x5f
   32fc0:	andeq	r0, r0, r0
   32fc4:	bicmi	ip, sp, r5, ror #26
   32fc8:	andeq	r0, r0, r0
   32fcc:	orrsmi	sp, r7, r4, lsl #15
   32fd0:	andeq	r0, r0, r0
   32fd4:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   32fd8:	andeq	r0, r0, r0
   32fdc:	smlawbmi	lr, r0, r4, r8
   32fe0:	andeq	r0, r0, r0
   32fe4:	rscsmi	r6, r8, r0, lsl #20
   32fe8:	andeq	r0, r0, r0
   32fec:	sbcmi	r8, r3, r0, lsl #16
   32ff0:	andeq	r0, r0, r0
   32ff4:	addmi	r4, pc, r0
   32ff8:	andeq	r0, r0, r0
   32ffc:	subsmi	r0, r9, r0
   33000:			; <UNDEFINED> instruction: 0x064dd592
   33004:	strmi	pc, [r0], #207	; 0xcf

00033008 <flatcc_json_parser_float@@Base>:
   33008:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3300c:	add	fp, sp, #24
   33010:	vpush	{d8-d9}
   33014:	sub	sp, sp, #8
   33018:	mov	r8, r0
   3301c:	mov	r0, #0
   33020:	mov	r6, r1
   33024:	cmp	r1, r2
   33028:	str	r0, [r3]
   3302c:	beq	33104 <flatcc_json_parser_float@@Base+0xfc>
   33030:	mov	r0, r6
   33034:	mov	r5, r2
   33038:	mov	r7, r3
   3303c:	ldrb	r1, [r0], #1
   33040:	cmp	r1, #45	; 0x2d
   33044:	movne	r0, r6
   33048:	sub	r2, r2, r0
   3304c:	cmp	r2, #2
   33050:	blt	33090 <flatcc_json_parser_float@@Base+0x88>
   33054:	sub	r1, r1, #45	; 0x2d
   33058:	clz	r1, r1
   3305c:	lsr	r1, r1, #5
   33060:	ldrb	r1, [r6, r1]
   33064:	cmp	r1, #46	; 0x2e
   33068:	beq	33080 <flatcc_json_parser_float@@Base+0x78>
   3306c:	cmp	r1, #48	; 0x30
   33070:	bne	33090 <flatcc_json_parser_float@@Base+0x88>
   33074:	ldrb	r0, [r0, #1]
   33078:	cmp	r0, #48	; 0x30
   3307c:	bne	33090 <flatcc_json_parser_float@@Base+0x88>
   33080:	ldr	r0, [r8, #20]
   33084:	cmp	r0, #0
   33088:	bne	33130 <flatcc_json_parser_float@@Base+0x128>
   3308c:	b	33114 <flatcc_json_parser_float@@Base+0x10c>
   33090:	sub	r1, r5, r6
   33094:	mov	r2, sp
   33098:	mov	r0, r6
   3309c:	bl	327a8 <flatcc_json_parser_double@@Base+0xf8>
   330a0:	vldr	d16, [sp]
   330a4:	mov	r4, r0
   330a8:	add	r0, pc, #148	; 0x94
   330ac:	vcmpe.f64	d16, #0.0
   330b0:	vcvt.f32.f64	s16, d16
   330b4:	vmrs	APSR_nzcv, fpscr
   330b8:	addmi	r0, r0, #4
   330bc:	vldr	s18, [r0]
   330c0:	vmov.f32	s0, s16
   330c4:	bl	14e68 <__isinff@plt>
   330c8:	cmp	r0, #0
   330cc:	vseleq.f32	s0, s16, s18
   330d0:	movne	r4, r6
   330d4:	cmp	r4, #0
   330d8:	cmpne	r4, r6
   330dc:	vstr	s0, [r7]
   330e0:	bne	33134 <flatcc_json_parser_float@@Base+0x12c>
   330e4:	bl	14e68 <__isinff@plt>
   330e8:	ldr	r1, [r8, #20]
   330ec:	cmp	r0, #0
   330f0:	beq	3310c <flatcc_json_parser_float@@Base+0x104>
   330f4:	cmp	r1, #0
   330f8:	bne	33130 <flatcc_json_parser_float@@Base+0x128>
   330fc:	mov	r0, #7
   33100:	b	33118 <flatcc_json_parser_float@@Base+0x110>
   33104:	mov	r4, r6
   33108:	b	33134 <flatcc_json_parser_float@@Base+0x12c>
   3310c:	cmp	r1, #0
   33110:	bne	33130 <flatcc_json_parser_float@@Base+0x128>
   33114:	mov	r0, #6
   33118:	str	r6, [r8, #32]
   3311c:	ldr	r1, [r8, #4]
   33120:	sub	r1, r6, r1
   33124:	add	r1, r1, #1
   33128:	str	r1, [r8, #16]
   3312c:	str	r0, [r8, #20]
   33130:	mov	r4, r5
   33134:	mov	r0, r4
   33138:	sub	sp, fp, #40	; 0x28
   3313c:	vpop	{d8-d9}
   33140:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33144:	svcvc	0x00800000
   33148:			; <UNDEFINED> instruction: 0xff800000

0003314c <flatcc_json_parser_integer@@Base>:
   3314c:	push	{r4, r5, r6, r7, fp, lr}
   33150:	add	fp, sp, #16
   33154:	mov	ip, r1
   33158:	cmp	r1, r2
   3315c:	beq	33294 <flatcc_json_parser_integer@@Base+0x148>
   33160:	ldrb	r1, [ip]
   33164:	mov	r4, #0
   33168:	sub	r1, r1, #45	; 0x2d
   3316c:	clz	r1, r1
   33170:	lsr	r1, r1, #5
   33174:	str	r1, [r3]
   33178:	add	r1, ip, r1
   3317c:	cmp	r1, r2
   33180:	beq	331e8 <flatcc_json_parser_integer@@Base+0x9c>
   33184:	mov	lr, #10
   33188:	mov	r5, #0
   3318c:	ldrb	r6, [r1]
   33190:	sub	r7, r6, #48	; 0x30
   33194:	uxtb	r7, r7
   33198:	cmp	r7, #9
   3319c:	bhi	331f8 <flatcc_json_parser_integer@@Base+0xac>
   331a0:	add	r7, r5, r5, lsl #2
   331a4:	lsl	r7, r7, #1
   331a8:	umlal	r6, r7, r4, lr
   331ac:	subs	r6, r6, #48	; 0x30
   331b0:	sbc	r7, r7, #0
   331b4:	subs	r4, r6, r4
   331b8:	sbcs	r4, r7, r5
   331bc:	bcc	33248 <flatcc_json_parser_integer@@Base+0xfc>
   331c0:	add	r1, r1, #1
   331c4:	mov	r4, r6
   331c8:	mov	r5, r7
   331cc:	cmp	r2, r1
   331d0:	bne	3318c <flatcc_json_parser_integer@@Base+0x40>
   331d4:	mov	r3, #0
   331d8:	mov	r1, r2
   331dc:	mov	r4, r6
   331e0:	mov	r5, r7
   331e4:	b	331fc <flatcc_json_parser_integer@@Base+0xb0>
   331e8:	mov	r1, r2
   331ec:	mov	r5, #0
   331f0:	mov	r3, #0
   331f4:	b	331fc <flatcc_json_parser_integer@@Base+0xb0>
   331f8:	mov	r3, #1
   331fc:	cmp	r1, ip
   33200:	beq	33294 <flatcc_json_parser_integer@@Base+0x148>
   33204:	cmp	r3, #0
   33208:	beq	33288 <flatcc_json_parser_integer@@Base+0x13c>
   3320c:	ldrb	r3, [r1]
   33210:	cmp	r3, #46	; 0x2e
   33214:	cmpne	r3, #101	; 0x65
   33218:	bne	33280 <flatcc_json_parser_integer@@Base+0x134>
   3321c:	ldr	r3, [r0, #20]
   33220:	cmp	r3, #0
   33224:	bne	33278 <flatcc_json_parser_integer@@Base+0x12c>
   33228:	str	r1, [r0, #32]
   3322c:	mov	r3, #12
   33230:	ldr	r7, [r0, #4]
   33234:	sub	r1, r1, r7
   33238:	add	r1, r1, #1
   3323c:	str	r1, [r0, #16]
   33240:	str	r3, [r0, #20]
   33244:	b	33278 <flatcc_json_parser_integer@@Base+0x12c>
   33248:	ldr	r7, [r0, #20]
   3324c:	cmp	r7, #0
   33250:	bne	33278 <flatcc_json_parser_integer@@Base+0x12c>
   33254:	str	r1, [r0, #32]
   33258:	cmp	r3, #0
   3325c:	mov	r7, #8
   33260:	ldr	r3, [r0, #4]
   33264:	movweq	r7, #7
   33268:	sub	r1, r1, r3
   3326c:	add	r1, r1, #1
   33270:	str	r1, [r0, #16]
   33274:	str	r7, [r0, #20]
   33278:	mov	ip, r2
   3327c:	b	33294 <flatcc_json_parser_integer@@Base+0x148>
   33280:	cmp	r3, #69	; 0x45
   33284:	beq	3321c <flatcc_json_parser_integer@@Base+0xd0>
   33288:	ldr	r0, [fp, #8]
   3328c:	mov	ip, r1
   33290:	strd	r4, [r0]
   33294:	mov	r0, ip
   33298:	pop	{r4, r5, r6, r7, fp, pc}

0003329c <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   3329c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   332a0:	add	fp, sp, #28
   332a4:	sub	sp, sp, #36	; 0x24
   332a8:	mov	r7, r3
   332ac:	mov	r4, r2
   332b0:	mov	r5, r0
   332b4:	cmp	r1, r2
   332b8:	beq	332d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34>
   332bc:	ldrb	r0, [r1]
   332c0:	cmp	r0, #34	; 0x22
   332c4:	bne	332d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34>
   332c8:	add	r9, r1, #1
   332cc:	b	33300 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x64>
   332d0:	ldr	r0, [r5, #20]
   332d4:	mov	r9, r4
   332d8:	cmp	r0, #0
   332dc:	bne	33300 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x64>
   332e0:	str	r1, [r5, #32]
   332e4:	mov	r0, #16
   332e8:	mov	r9, r4
   332ec:	ldr	r2, [r5, #4]
   332f0:	sub	r1, r1, r2
   332f4:	add	r1, r1, #1
   332f8:	str	r1, [r5, #16]
   332fc:	str	r0, [r5, #20]
   33300:	ldr	r6, [fp, #8]
   33304:	mov	r0, r5
   33308:	mov	r1, r9
   3330c:	mov	r2, r4
   33310:	bl	3136c <flatcc_json_parser_string_part@@Base>
   33314:	mov	sl, r0
   33318:	cmp	r0, r4
   3331c:	mov	r0, r4
   33320:	beq	3335c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   33324:	ldrb	r0, [sl]
   33328:	cmp	r0, #34	; 0x22
   3332c:	bne	33358 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xbc>
   33330:	sub	r1, sl, r9
   33334:	and	r0, r1, #3
   33338:	str	r1, [sp, #28]
   3333c:	lsr	r1, r1, #2
   33340:	add	r8, r1, r1, lsl #1
   33344:	cmp	r0, #2
   33348:	beq	33398 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xfc>
   3334c:	cmp	r0, #3
   33350:	addeq	r8, r8, #2
   33354:	b	3339c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x100>
   33358:	mov	r0, sl
   3335c:	mov	r1, #0
   33360:	str	r1, [r7]
   33364:	ldr	r1, [r5, #20]
   33368:	cmp	r1, #0
   3336c:	bne	333e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   33370:	str	r0, [r5, #32]
   33374:	cmp	r6, #0
   33378:	mov	r1, #31
   3337c:	ldr	r2, [r5, #4]
   33380:	movwne	r1, #32
   33384:	sub	r0, r0, r2
   33388:	add	r0, r0, #1
   3338c:	str	r0, [r5, #16]
   33390:	str	r1, [r5, #20]
   33394:	b	333e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   33398:	add	r8, r8, #1
   3339c:	ldr	r0, [r5]
   333a0:	mov	r1, #1
   333a4:	mov	r2, #1
   333a8:	mvn	r3, #0
   333ac:	bl	2d148 <flatcc_builder_start_vector@@Base>
   333b0:	cmp	r0, #0
   333b4:	beq	333f4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x158>
   333b8:	mov	r0, #0
   333bc:	str	r0, [r7]
   333c0:	ldr	r0, [r5, #20]
   333c4:	cmp	r0, #0
   333c8:	bne	333e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   333cc:	mov	r0, #33	; 0x21
   333d0:	str	sl, [r5, #32]
   333d4:	ldr	r1, [r5, #4]
   333d8:	sub	r1, sl, r1
   333dc:	add	r1, r1, #1
   333e0:	str	r1, [r5, #16]
   333e4:	str	r0, [r5, #20]
   333e8:	mov	r0, r4
   333ec:	sub	sp, fp, #28
   333f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   333f4:	ldr	r0, [r5]
   333f8:	mov	r1, r8
   333fc:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   33400:	cmp	r0, #0
   33404:	beq	333b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   33408:	movw	r1, #24408	; 0x5f58
   3340c:	ldr	ip, [sp, #28]
   33410:	movw	r2, #24152	; 0x5e58
   33414:	cmp	r6, #0
   33418:	str	r7, [sp, #8]
   3341c:	add	r7, sp, #32
   33420:	mov	r6, r9
   33424:	str	r0, [sp, #4]
   33428:	str	r0, [sp, #16]
   3342c:	str	r8, [sp, #24]
   33430:	movt	r1, #4
   33434:	movt	r2, #4
   33438:	movne	r2, r1
   3343c:	cmp	r8, #0
   33440:	mov	r1, r8
   33444:	mvneq	r1, #0
   33448:	str	r1, [sp, #20]
   3344c:	mov	r1, #0
   33450:	str	ip, [sp, #12]
   33454:	cmp	ip, r1
   33458:	beq	33500 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x264>
   3345c:	ldrb	r3, [r6, r1]
   33460:	ldrb	lr, [r2, r3]
   33464:	cmp	lr, #64	; 0x40
   33468:	strb	lr, [r7, r1]
   3346c:	bcc	33484 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e8>
   33470:	cmp	lr, #65	; 0x41
   33474:	bne	3354c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b0>
   33478:	sub	r1, r1, #1
   3347c:	sub	ip, ip, #1
   33480:	add	r6, r6, #1
   33484:	add	r1, r1, #1
   33488:	cmp	r1, #4
   3348c:	bcc	33454 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   33490:	ldr	r0, [sp, #20]
   33494:	cmp	r0, #3
   33498:	bcc	335ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   3349c:	ldrb	r3, [sp, #33]	; 0x21
   334a0:	ldrb	r1, [sp, #32]
   334a4:	mov	r0, r7
   334a8:	ldr	r8, [sp, #24]
   334ac:	sub	ip, ip, #4
   334b0:	add	r6, r6, #4
   334b4:	lsr	r7, r3, #4
   334b8:	orr	r1, r7, r1, lsl #2
   334bc:	mov	r7, r0
   334c0:	ldr	r0, [sp, #16]
   334c4:	strb	r1, [r0]
   334c8:	ldrb	r1, [sp, #34]	; 0x22
   334cc:	lsr	r1, r1, #2
   334d0:	orr	r1, r1, r3, lsl #4
   334d4:	strb	r1, [r0, #1]
   334d8:	ldrb	r1, [sp, #34]	; 0x22
   334dc:	ldrb	r3, [sp, #35]	; 0x23
   334e0:	orr	r1, r3, r1, lsl #6
   334e4:	strb	r1, [r0, #2]
   334e8:	ldr	r1, [sp, #20]
   334ec:	add	r0, r0, #3
   334f0:	str	r0, [sp, #16]
   334f4:	subs	r1, r1, #3
   334f8:	bne	33448 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ac>
   334fc:	b	335d8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x33c>
   33500:	mov	r1, ip
   33504:	mov	r0, ip
   33508:	sub	ip, ip, r0
   3350c:	cmp	r1, #0
   33510:	beq	335d8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x33c>
   33514:	cmp	r1, #3
   33518:	beq	33590 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f4>
   3351c:	cmp	r1, #2
   33520:	bne	335ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   33524:	ldrb	r1, [sp, #33]	; 0x21
   33528:	tst	r1, #15
   3352c:	bne	335ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   33530:	ldrb	r2, [sp, #32]
   33534:	lsl	r2, r2, #2
   33538:	orr	r1, r2, r1, lsr #4
   3353c:	ldr	r2, [sp, #16]
   33540:	strb	r1, [r2], #1
   33544:	str	r2, [sp, #16]
   33548:	b	335d8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x33c>
   3354c:	cmp	lr, #66	; 0x42
   33550:	bne	3365c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c0>
   33554:	add	r3, r1, #1
   33558:	mov	r0, r3
   3355c:	cmp	r3, ip
   33560:	bcs	33508 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   33564:	cmp	r0, #7
   33568:	bhi	33508 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   3356c:	ldrb	r3, [r6, r0]
   33570:	ldr	r8, [sp, #24]
   33574:	ldrb	r3, [r2, r3]
   33578:	sub	r3, r3, #65	; 0x41
   3357c:	uxtb	r7, r3
   33580:	add	r3, r0, #1
   33584:	cmp	r7, #2
   33588:	bcc	33558 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2bc>
   3358c:	b	33508 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   33590:	ldr	r1, [sp, #20]
   33594:	cmp	r1, #2
   33598:	bcc	335ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   3359c:	ldrb	r1, [sp, #34]	; 0x22
   335a0:	ands	r2, r1, #3
   335a4:	bne	335ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   335a8:	ldrb	r3, [sp, #33]	; 0x21
   335ac:	ldrb	r2, [sp, #32]
   335b0:	ldr	r8, [sp, #24]
   335b4:	lsl	r7, r3, #4
   335b8:	orr	r1, r7, r1, lsr #2
   335bc:	ldr	r7, [sp, #16]
   335c0:	strb	r1, [r7, #1]
   335c4:	lsr	r1, r3, #4
   335c8:	orr	r1, r1, r2, lsl #2
   335cc:	strb	r1, [r7]
   335d0:	add	r7, r7, #2
   335d4:	str	r7, [sp, #16]
   335d8:	cmp	ip, #0
   335dc:	beq	33608 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x36c>
   335e0:	ldr	r0, [sp, #28]
   335e4:	sub	r0, r0, ip
   335e8:	b	335f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35c>
   335ec:	ldr	r0, [sp, #28]
   335f0:	ldr	r1, [sp, #12]
   335f4:	sub	r0, r0, r1
   335f8:	ldr	r6, [fp, #8]
   335fc:	ldr	r7, [sp, #8]
   33600:	add	r0, r9, r0
   33604:	b	3335c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   33608:	ldr	r0, [sp, #4]
   3360c:	ldr	r1, [sp, #16]
   33610:	ldr	r7, [sp, #8]
   33614:	sub	r0, r1, r0
   33618:	cmp	r8, r0
   3361c:	bls	33634 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   33620:	sub	r1, r8, r0
   33624:	ldr	r0, [r5]
   33628:	bl	2cf94 <flatcc_builder_truncate_vector@@Base>
   3362c:	cmp	r0, #0
   33630:	bne	333b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   33634:	ldr	r0, [r5]
   33638:	bl	2e174 <flatcc_builder_end_vector@@Base>
   3363c:	cmp	r0, #0
   33640:	str	r0, [r7]
   33644:	beq	333b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   33648:	ldrb	r0, [sl]
   3364c:	cmp	r0, #34	; 0x22
   33650:	bne	33664 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c8>
   33654:	add	r4, sl, #1
   33658:	b	333e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   3365c:	mov	r0, r1
   33660:	b	33508 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   33664:	ldr	r0, [r5, #20]
   33668:	cmp	r0, #0
   3366c:	bne	333e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   33670:	mov	r0, #20
   33674:	b	333d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x134>

00033678 <flatcc_json_parser_build_string@@Base>:
   33678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3367c:	add	fp, sp, #28
   33680:	sub	sp, sp, #4
   33684:	mov	r9, r3
   33688:	mov	sl, r2
   3368c:	mov	r5, r0
   33690:	cmp	r1, r2
   33694:	beq	336ac <flatcc_json_parser_build_string@@Base+0x34>
   33698:	ldrb	r0, [r1]
   3369c:	cmp	r0, #34	; 0x22
   336a0:	bne	336ac <flatcc_json_parser_build_string@@Base+0x34>
   336a4:	add	r6, r1, #1
   336a8:	b	336dc <flatcc_json_parser_build_string@@Base+0x64>
   336ac:	ldr	r0, [r5, #20]
   336b0:	mov	r6, sl
   336b4:	cmp	r0, #0
   336b8:	bne	336dc <flatcc_json_parser_build_string@@Base+0x64>
   336bc:	str	r1, [r5, #32]
   336c0:	mov	r0, #16
   336c4:	mov	r6, sl
   336c8:	ldr	r2, [r5, #4]
   336cc:	sub	r1, r1, r2
   336d0:	add	r1, r1, #1
   336d4:	str	r1, [r5, #16]
   336d8:	str	r0, [r5, #20]
   336dc:	mov	r0, r5
   336e0:	mov	r1, r6
   336e4:	mov	r2, sl
   336e8:	bl	3136c <flatcc_json_parser_string_part@@Base>
   336ec:	mov	r4, r0
   336f0:	cmp	r0, sl
   336f4:	beq	3371c <flatcc_json_parser_build_string@@Base+0xa4>
   336f8:	ldrb	r0, [r4]
   336fc:	cmp	r0, #34	; 0x22
   33700:	bne	3371c <flatcc_json_parser_build_string@@Base+0xa4>
   33704:	ldr	r0, [r5]
   33708:	sub	r2, r4, r6
   3370c:	mov	r1, r6
   33710:	bl	2efd8 <flatcc_builder_create_string@@Base>
   33714:	mov	r6, r4
   33718:	b	337f4 <flatcc_json_parser_build_string@@Base+0x17c>
   3371c:	ldr	r0, [r5]
   33720:	bl	2d378 <flatcc_builder_start_string@@Base>
   33724:	cmp	r0, #0
   33728:	beq	33738 <flatcc_json_parser_build_string@@Base+0xc0>
   3372c:	mov	r0, #0
   33730:	str	r0, [r9]
   33734:	b	33840 <flatcc_json_parser_build_string@@Base+0x1c8>
   33738:	ldr	r0, [r5]
   3373c:	sub	r2, r4, r6
   33740:	mov	r1, r6
   33744:	bl	2ce58 <flatcc_builder_append_string@@Base>
   33748:	cmp	r0, #0
   3374c:	beq	3372c <flatcc_json_parser_build_string@@Base+0xb4>
   33750:	cmp	r4, sl
   33754:	mov	r6, sl
   33758:	beq	337ec <flatcc_json_parser_build_string@@Base+0x174>
   3375c:	mov	r8, sp
   33760:	add	r6, r8, #1
   33764:	ldrb	r0, [r4]
   33768:	cmp	r0, #34	; 0x22
   3376c:	beq	337d8 <flatcc_json_parser_build_string@@Base+0x160>
   33770:	mov	r0, r5
   33774:	mov	r1, r4
   33778:	mov	r2, sl
   3377c:	mov	r3, r8
   33780:	bl	314c8 <flatcc_json_parser_string_escape@@Base>
   33784:	mov	r7, r0
   33788:	ldr	r0, [r5]
   3378c:	ldrb	r2, [sp]
   33790:	mov	r1, r6
   33794:	bl	2ce58 <flatcc_builder_append_string@@Base>
   33798:	cmp	r0, #0
   3379c:	beq	337e0 <flatcc_json_parser_build_string@@Base+0x168>
   337a0:	mov	r0, r5
   337a4:	mov	r1, r7
   337a8:	mov	r2, sl
   337ac:	bl	3136c <flatcc_json_parser_string_part@@Base>
   337b0:	cmp	r0, sl
   337b4:	beq	337e8 <flatcc_json_parser_build_string@@Base+0x170>
   337b8:	mov	r4, r0
   337bc:	sub	r2, r0, r7
   337c0:	ldr	r0, [r5]
   337c4:	mov	r1, r7
   337c8:	bl	2ce58 <flatcc_builder_append_string@@Base>
   337cc:	cmp	r0, #0
   337d0:	bne	33764 <flatcc_json_parser_build_string@@Base+0xec>
   337d4:	b	3372c <flatcc_json_parser_build_string@@Base+0xb4>
   337d8:	mov	r6, r4
   337dc:	b	337ec <flatcc_json_parser_build_string@@Base+0x174>
   337e0:	mov	r4, r7
   337e4:	b	3372c <flatcc_json_parser_build_string@@Base+0xb4>
   337e8:	mov	r6, sl
   337ec:	ldr	r0, [r5]
   337f0:	bl	2f140 <flatcc_builder_end_string@@Base>
   337f4:	cmp	r6, sl
   337f8:	str	r0, [r9]
   337fc:	beq	33814 <flatcc_json_parser_build_string@@Base+0x19c>
   33800:	ldrb	r0, [r6]
   33804:	cmp	r0, #34	; 0x22
   33808:	bne	33814 <flatcc_json_parser_build_string@@Base+0x19c>
   3380c:	add	r4, r6, #1
   33810:	b	33840 <flatcc_json_parser_build_string@@Base+0x1c8>
   33814:	ldr	r0, [r5, #20]
   33818:	cmp	r0, #0
   3381c:	bne	3383c <flatcc_json_parser_build_string@@Base+0x1c4>
   33820:	str	r6, [r5, #32]
   33824:	mov	r0, #20
   33828:	ldr	r1, [r5, #4]
   3382c:	sub	r1, r6, r1
   33830:	add	r1, r1, #1
   33834:	str	r1, [r5, #16]
   33838:	str	r0, [r5, #20]
   3383c:	mov	r4, sl
   33840:	mov	r0, r4
   33844:	sub	sp, fp, #28
   33848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003384c <flatcc_json_parser_prepare_unions@@Base>:
   3384c:	push	{r4, r5, r6, r7, fp, lr}
   33850:	add	fp, sp, #16
   33854:	mov	r6, r0
   33858:	add	r0, r3, r3, lsl #1
   3385c:	mov	r5, r1
   33860:	mov	r1, #8
   33864:	mov	r7, r3
   33868:	mov	r4, r2
   3386c:	add	r1, r1, r0, lsl #3
   33870:	ldr	r0, [r6]
   33874:	bl	2bdbc <flatcc_builder_enter_user_frame@@Base>
   33878:	mov	r1, r0
   3387c:	ldr	r0, [fp, #8]
   33880:	cmp	r1, #0
   33884:	str	r1, [r0]
   33888:	beq	338a0 <flatcc_json_parser_prepare_unions@@Base+0x54>
   3388c:	ldr	r0, [r6]
   33890:	bl	2bf10 <flatcc_builder_get_user_frame_ptr@@Base>
   33894:	mov	r4, r5
   33898:	str	r7, [r0]
   3389c:	b	338c8 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   338a0:	ldr	r0, [r6, #20]
   338a4:	cmp	r0, #0
   338a8:	bne	338c8 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   338ac:	str	r5, [r6, #32]
   338b0:	mov	r0, #33	; 0x21
   338b4:	ldr	r1, [r6, #4]
   338b8:	sub	r1, r5, r1
   338bc:	add	r1, r1, #1
   338c0:	str	r1, [r6, #16]
   338c4:	str	r0, [r6, #20]
   338c8:	mov	r0, r4
   338cc:	pop	{r4, r5, r6, r7, fp, pc}

000338d0 <flatcc_json_parser_finalize_unions@@Base>:
   338d0:	push	{r4, r5, r6, r7, fp, lr}
   338d4:	add	fp, sp, #16
   338d8:	mov	r6, r0
   338dc:	ldr	r0, [r0]
   338e0:	mov	r7, r1
   338e4:	mov	r1, r3
   338e8:	mov	r5, r3
   338ec:	mov	r4, r2
   338f0:	bl	2bf10 <flatcc_builder_get_user_frame_ptr@@Base>
   338f4:	ldr	r0, [r0, #4]
   338f8:	cmp	r0, #0
   338fc:	beq	3392c <flatcc_json_parser_finalize_unions@@Base+0x5c>
   33900:	ldr	r0, [r6, #20]
   33904:	cmp	r0, #0
   33908:	bne	33930 <flatcc_json_parser_finalize_unions@@Base+0x60>
   3390c:	str	r7, [r6, #32]
   33910:	mov	r0, #27
   33914:	ldr	r1, [r6, #4]
   33918:	sub	r1, r7, r1
   3391c:	add	r1, r1, #1
   33920:	str	r1, [r6, #16]
   33924:	str	r0, [r6, #20]
   33928:	b	33930 <flatcc_json_parser_finalize_unions@@Base+0x60>
   3392c:	mov	r4, r7
   33930:	ldr	r0, [r6]
   33934:	mov	r1, r5
   33938:	bl	2bec8 <flatcc_builder_exit_user_frame_at@@Base>
   3393c:	mov	r0, r4
   33940:	pop	{r4, r5, r6, r7, fp, pc}

00033944 <flatcc_json_parser_union@@Base>:
   33944:	push	{r4, r5, r6, r7, fp, lr}
   33948:	add	fp, sp, #16
   3394c:	sub	sp, sp, #16
   33950:	mov	r6, r1
   33954:	mov	r5, r0
   33958:	ldr	r0, [r0]
   3395c:	ldr	r1, [fp, #12]
   33960:	mov	r7, r3
   33964:	mov	r4, r2
   33968:	bl	2bf10 <flatcc_builder_get_user_frame_ptr@@Base>
   3396c:	add	r2, r0, #8
   33970:	add	r3, r7, r7, lsl #1
   33974:	mov	r1, r2
   33978:	ldr	r7, [r1, r3, lsl #3]!
   3397c:	cmp	r7, #0
   33980:	beq	339b0 <flatcc_json_parser_union@@Base+0x6c>
   33984:	ldr	r0, [r5, #20]
   33988:	cmp	r0, #0
   3398c:	bne	33a70 <flatcc_json_parser_union@@Base+0x12c>
   33990:	mov	r0, #28
   33994:	str	r6, [r5, #32]
   33998:	ldr	r1, [r5, #4]
   3399c:	sub	r1, r6, r1
   339a0:	add	r1, r1, #1
   339a4:	str	r1, [r5, #16]
   339a8:	str	r0, [r5, #20]
   339ac:	b	33a70 <flatcc_json_parser_union@@Base+0x12c>
   339b0:	add	r2, r2, r3, lsl #3
   339b4:	ldrb	r3, [r2, #12]
   339b8:	cmp	r3, #0
   339bc:	beq	33a2c <flatcc_json_parser_union@@Base+0xe8>
   339c0:	ldrb	r3, [r2, #13]
   339c4:	cmp	r3, #0
   339c8:	strb	r3, [sp, #8]
   339cc:	beq	33a64 <flatcc_json_parser_union@@Base+0x120>
   339d0:	ldr	r1, [r0, #4]
   339d4:	ldr	r7, [fp, #16]
   339d8:	mov	r2, r4
   339dc:	sub	r1, r1, #1
   339e0:	str	r1, [r0, #4]
   339e4:	add	r0, sp, #8
   339e8:	mov	r1, r6
   339ec:	add	r0, r0, #4
   339f0:	str	r0, [sp]
   339f4:	mov	r0, r5
   339f8:	blx	r7
   339fc:	cmp	r0, r4
   33a00:	beq	33a70 <flatcc_json_parser_union@@Base+0x12c>
   33a04:	mov	r6, r0
   33a08:	ldr	r1, [fp, #8]
   33a0c:	ldr	r0, [r5]
   33a10:	ldr	r2, [sp, #8]
   33a14:	ldr	r3, [sp, #12]
   33a18:	bl	2e54c <flatcc_builder_table_add_union@@Base>
   33a1c:	cmp	r0, #0
   33a20:	bne	33984 <flatcc_json_parser_union@@Base+0x40>
   33a24:	mov	r4, r6
   33a28:	b	33a70 <flatcc_json_parser_union@@Base+0x12c>
   33a2c:	ldr	r3, [r0, #4]
   33a30:	add	r3, r3, #1
   33a34:	str	r3, [r0, #4]
   33a38:	ldr	r0, [r5, #12]
   33a3c:	str	r0, [r2, #8]
   33a40:	ldr	r0, [r5, #4]
   33a44:	str	r0, [r2, #4]
   33a48:	str	r6, [r1]
   33a4c:	mov	r0, r5
   33a50:	mov	r1, r6
   33a54:	mov	r2, r4
   33a58:	bl	31b3c <flatcc_json_parser_generic_json@@Base>
   33a5c:	mov	r4, r0
   33a60:	b	33a70 <flatcc_json_parser_union@@Base+0x12c>
   33a64:	ldr	r0, [r5, #20]
   33a68:	cmp	r0, #0
   33a6c:	beq	33a7c <flatcc_json_parser_union@@Base+0x138>
   33a70:	mov	r0, r4
   33a74:	sub	sp, fp, #16
   33a78:	pop	{r4, r5, r6, r7, fp, pc}
   33a7c:	mov	r0, #25
   33a80:	b	33994 <flatcc_json_parser_union@@Base+0x50>

00033a84 <flatcc_json_parser_union_type@@Base>:
   33a84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33a88:	add	fp, sp, #28
   33a8c:	sub	sp, sp, #28
   33a90:	mov	r7, r1
   33a94:	mov	r5, r0
   33a98:	ldr	r0, [r0]
   33a9c:	ldr	r1, [fp, #12]
   33aa0:	mov	r4, r3
   33aa4:	mov	r8, r2
   33aa8:	bl	2bf10 <flatcc_builder_get_user_frame_ptr@@Base>
   33aac:	add	sl, r4, r4, lsl #1
   33ab0:	add	r2, r0, #8
   33ab4:	mov	r6, r0
   33ab8:	str	r8, [sp, #8]
   33abc:	add	r9, r2, sl, lsl #3
   33ac0:	mov	r0, r9
   33ac4:	ldrb	r1, [r0, #12]!
   33ac8:	cmp	r1, #0
   33acc:	beq	33b08 <flatcc_json_parser_union_type@@Base+0x84>
   33ad0:	ldr	r0, [r5, #20]
   33ad4:	cmp	r0, #0
   33ad8:	bne	33af8 <flatcc_json_parser_union_type@@Base+0x74>
   33adc:	str	r7, [r5, #32]
   33ae0:	mov	r0, #28
   33ae4:	ldr	r1, [r5, #4]
   33ae8:	sub	r1, r7, r1
   33aec:	add	r1, r1, #1
   33af0:	str	r1, [r5, #16]
   33af4:	str	r0, [r5, #20]
   33af8:	ldr	r3, [sp, #8]
   33afc:	mov	r0, r3
   33b00:	sub	sp, fp, #28
   33b04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33b08:	mov	r1, #1
   33b0c:	mov	r4, r9
   33b10:	str	r2, [sp, #4]
   33b14:	cmp	r7, r8
   33b18:	mov	r2, r8
   33b1c:	strb	r1, [r0]
   33b20:	mov	r0, #0
   33b24:	str	r0, [sp, #20]
   33b28:	str	r0, [sp, #16]
   33b2c:	str	r0, [sp, #12]
   33b30:	strb	r0, [r4, #13]!
   33b34:	beq	33bd8 <flatcc_json_parser_union_type@@Base+0x154>
   33b38:	add	r0, sp, #16
   33b3c:	add	r3, sp, #12
   33b40:	mov	r1, r7
   33b44:	str	r0, [sp]
   33b48:	mov	r0, r5
   33b4c:	bl	3314c <flatcc_json_parser_integer@@Base>
   33b50:	ldr	r2, [sp, #8]
   33b54:	cmp	r0, r7
   33b58:	beq	33bd8 <flatcc_json_parser_union_type@@Base+0x154>
   33b5c:	ldr	r1, [sp, #12]
   33b60:	cmp	r1, #0
   33b64:	beq	33b80 <flatcc_json_parser_union_type@@Base+0xfc>
   33b68:	ldr	r1, [r5, #20]
   33b6c:	mov	r3, r2
   33b70:	cmp	r1, #0
   33b74:	bne	33bd0 <flatcc_json_parser_union_type@@Base+0x14c>
   33b78:	mov	r1, #8
   33b7c:	b	33ba8 <flatcc_json_parser_union_type@@Base+0x124>
   33b80:	ldr	r1, [sp, #16]
   33b84:	ldr	ip, [sp, #20]
   33b88:	subs	r3, r1, #256	; 0x100
   33b8c:	sbcs	r3, ip, #0
   33b90:	bcc	33bc8 <flatcc_json_parser_union_type@@Base+0x144>
   33b94:	ldr	r1, [r5, #20]
   33b98:	mov	r3, r2
   33b9c:	cmp	r1, #0
   33ba0:	bne	33bd0 <flatcc_json_parser_union_type@@Base+0x14c>
   33ba4:	mov	r1, #7
   33ba8:	str	r0, [r5, #32]
   33bac:	ldr	r3, [r5, #4]
   33bb0:	sub	r0, r0, r3
   33bb4:	mov	r3, r2
   33bb8:	add	r0, r0, #1
   33bbc:	str	r0, [r5, #16]
   33bc0:	str	r1, [r5, #20]
   33bc4:	b	33bd0 <flatcc_json_parser_union_type@@Base+0x14c>
   33bc8:	mov	r3, r0
   33bcc:	strb	r1, [r4]
   33bd0:	cmp	r3, r7
   33bd4:	bne	33bf4 <flatcc_json_parser_union_type@@Base+0x170>
   33bd8:	ldr	r3, [fp, #16]
   33bdc:	mov	r0, r5
   33be0:	mov	r1, r7
   33be4:	str	r4, [sp]
   33be8:	bl	33ce4 <flatcc_json_parser_union_type@@Base+0x260>
   33bec:	ldr	r2, [sp, #8]
   33bf0:	mov	r3, r0
   33bf4:	ldr	r0, [sp, #4]
   33bf8:	ldr	r1, [r0, sl, lsl #3]
   33bfc:	cmp	r1, #0
   33c00:	beq	33c9c <flatcc_json_parser_union_type@@Base+0x218>
   33c04:	ldr	r0, [r6, #4]
   33c08:	cmp	r0, #0
   33c0c:	beq	33cc4 <flatcc_json_parser_union_type@@Base+0x240>
   33c10:	sub	r0, r0, #1
   33c14:	mov	sl, r3
   33c18:	ldr	r7, [fp, #20]
   33c1c:	str	r0, [r6, #4]
   33c20:	ldr	r0, [r9, #8]
   33c24:	ldr	r8, [r5, #4]
   33c28:	ldr	r6, [r5, #12]
   33c2c:	str	r0, [r5, #12]
   33c30:	ldr	r0, [r9, #4]
   33c34:	str	r0, [r5, #4]
   33c38:	add	r0, sp, #16
   33c3c:	ldrb	r3, [r4]
   33c40:	add	r0, r0, #4
   33c44:	str	r0, [sp]
   33c48:	mov	r0, r5
   33c4c:	strb	r3, [sp, #16]
   33c50:	blx	r7
   33c54:	ldr	r3, [sp, #8]
   33c58:	cmp	r0, r3
   33c5c:	beq	33afc <flatcc_json_parser_union_type@@Base+0x78>
   33c60:	ldr	r1, [fp, #8]
   33c64:	ldr	r0, [r5]
   33c68:	ldr	r2, [sp, #16]
   33c6c:	ldr	r3, [sp, #20]
   33c70:	bl	2e54c <flatcc_builder_table_add_union@@Base>
   33c74:	cmp	r0, #0
   33c78:	beq	33cb4 <flatcc_json_parser_union_type@@Base+0x230>
   33c7c:	ldr	r0, [r5, #20]
   33c80:	cmp	r0, #0
   33c84:	bne	33af8 <flatcc_json_parser_union_type@@Base+0x74>
   33c88:	str	sl, [r5, #32]
   33c8c:	mov	r0, #28
   33c90:	ldr	r1, [r5, #4]
   33c94:	sub	r1, sl, r1
   33c98:	b	33aec <flatcc_json_parser_union_type@@Base+0x68>
   33c9c:	ldrb	r0, [r4]
   33ca0:	ldr	r1, [r6, #4]
   33ca4:	cmp	r0, #0
   33ca8:	addne	r1, r1, #1
   33cac:	str	r1, [r6, #4]
   33cb0:	b	33afc <flatcc_json_parser_union_type@@Base+0x78>
   33cb4:	mov	r3, sl
   33cb8:	str	r8, [r5, #4]
   33cbc:	str	r6, [r5, #12]
   33cc0:	b	33afc <flatcc_json_parser_union_type@@Base+0x78>
   33cc4:	movw	r0, #25580	; 0x63ec
   33cc8:	movw	r1, #25595	; 0x63fb
   33ccc:	movw	r3, #25669	; 0x6445
   33cd0:	movw	r2, #965	; 0x3c5
   33cd4:	movt	r0, #4
   33cd8:	movt	r1, #4
   33cdc:	movt	r3, #4
   33ce0:	bl	14f40 <__assert_fail@plt>
   33ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33ce8:	add	fp, sp, #28
   33cec:	sub	sp, sp, #36	; 0x24
   33cf0:	mov	r4, r2
   33cf4:	mov	r2, r1
   33cf8:	ldr	r1, [fp, #8]
   33cfc:	mov	r5, r0
   33d00:	mov	r0, #0
   33d04:	mov	r6, r3
   33d08:	cmp	r2, r4
   33d0c:	strb	r0, [r1]
   33d10:	beq	33d28 <flatcc_json_parser_union_type@@Base+0x2a4>
   33d14:	ldrb	r0, [r2]
   33d18:	cmp	r0, #34	; 0x22
   33d1c:	bne	33d30 <flatcc_json_parser_union_type@@Base+0x2ac>
   33d20:	add	r1, r2, #1
   33d24:	b	33d60 <flatcc_json_parser_union_type@@Base+0x2dc>
   33d28:	mov	r1, r2
   33d2c:	b	33d60 <flatcc_json_parser_union_type@@Base+0x2dc>
   33d30:	ldr	r0, [r5, #20]
   33d34:	mov	r1, r4
   33d38:	cmp	r0, #0
   33d3c:	bne	33d60 <flatcc_json_parser_union_type@@Base+0x2dc>
   33d40:	str	r2, [r5, #32]
   33d44:	mov	r0, #5
   33d48:	ldr	r1, [r5, #4]
   33d4c:	sub	r1, r2, r1
   33d50:	add	r1, r1, #1
   33d54:	str	r1, [r5, #16]
   33d58:	mov	r1, r4
   33d5c:	str	r0, [r5, #20]
   33d60:	sub	r0, r4, r1
   33d64:	cmp	r0, #2
   33d68:	blt	33d94 <flatcc_json_parser_union_type@@Base+0x310>
   33d6c:	ldrb	r0, [r1]
   33d70:	cmp	r0, #32
   33d74:	bls	33d80 <flatcc_json_parser_union_type@@Base+0x2fc>
   33d78:	mov	r7, r1
   33d7c:	b	33da4 <flatcc_json_parser_union_type@@Base+0x320>
   33d80:	bne	33d94 <flatcc_json_parser_union_type@@Base+0x310>
   33d84:	mov	r7, r1
   33d88:	ldrb	r0, [r7, #1]!
   33d8c:	cmp	r0, #32
   33d90:	bhi	33da4 <flatcc_json_parser_union_type@@Base+0x320>
   33d94:	mov	r0, r5
   33d98:	mov	r2, r4
   33d9c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   33da0:	mov	r7, r0
   33da4:	cmp	r7, r4
   33da8:	beq	33e7c <flatcc_json_parser_union_type@@Base+0x3f8>
   33dac:	add	sl, r6, #4
   33db0:	add	r8, sp, #24
   33db4:	add	r9, sp, #20
   33db8:	str	r6, [sp, #12]
   33dbc:	str	sl, [sp, #8]
   33dc0:	ldr	r6, [r6]
   33dc4:	add	r0, sp, #16
   33dc8:	mov	r1, r7
   33dcc:	mov	r2, r4
   33dd0:	mov	r3, r9
   33dd4:	str	r8, [sp]
   33dd8:	str	r0, [sp, #4]
   33ddc:	mov	r0, r5
   33de0:	blx	r6
   33de4:	cmp	r0, r4
   33de8:	beq	33e7c <flatcc_json_parser_union_type@@Base+0x3f8>
   33dec:	cmp	r0, r7
   33df0:	bne	33e04 <flatcc_json_parser_union_type@@Base+0x380>
   33df4:	ldr	r6, [sl], #4
   33df8:	cmp	r6, #0
   33dfc:	bne	33dc4 <flatcc_json_parser_union_type@@Base+0x340>
   33e00:	b	33e54 <flatcc_json_parser_union_type@@Base+0x3d0>
   33e04:	ldr	r1, [sp, #20]
   33e08:	cmp	r1, #0
   33e0c:	bne	33e88 <flatcc_json_parser_union_type@@Base+0x404>
   33e10:	ldr	r1, [sp, #24]
   33e14:	ldr	r2, [sp, #28]
   33e18:	subs	r3, r1, #256	; 0x100
   33e1c:	sbcs	r2, r2, #0
   33e20:	bcs	33e9c <flatcc_json_parser_union_type@@Base+0x418>
   33e24:	ldr	r2, [fp, #8]
   33e28:	ldr	r6, [sp, #12]
   33e2c:	ldr	sl, [sp, #8]
   33e30:	mov	r7, r0
   33e34:	mov	r3, r2
   33e38:	ldrb	r2, [r2]
   33e3c:	add	r1, r2, r1
   33e40:	strb	r1, [r3]
   33e44:	ldr	r1, [sp, #16]
   33e48:	cmp	r1, #0
   33e4c:	bne	33dc0 <flatcc_json_parser_union_type@@Base+0x33c>
   33e50:	b	33e80 <flatcc_json_parser_union_type@@Base+0x3fc>
   33e54:	ldr	r0, [r5, #20]
   33e58:	cmp	r0, #0
   33e5c:	bne	33e7c <flatcc_json_parser_union_type@@Base+0x3f8>
   33e60:	str	r7, [r5, #32]
   33e64:	mov	r0, #23
   33e68:	ldr	r1, [r5, #4]
   33e6c:	sub	r1, r7, r1
   33e70:	add	r1, r1, #1
   33e74:	str	r1, [r5, #16]
   33e78:	str	r0, [r5, #20]
   33e7c:	mov	r0, r4
   33e80:	sub	sp, fp, #28
   33e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33e88:	ldr	r1, [r5, #20]
   33e8c:	cmp	r1, #0
   33e90:	bne	33e7c <flatcc_json_parser_union_type@@Base+0x3f8>
   33e94:	mov	r1, #8
   33e98:	b	33eac <flatcc_json_parser_union_type@@Base+0x428>
   33e9c:	ldr	r1, [r5, #20]
   33ea0:	cmp	r1, #0
   33ea4:	bne	33e7c <flatcc_json_parser_union_type@@Base+0x3f8>
   33ea8:	mov	r1, #7
   33eac:	str	r0, [r5, #32]
   33eb0:	ldr	r2, [r5, #4]
   33eb4:	sub	r0, r0, r2
   33eb8:	add	r0, r0, #1
   33ebc:	str	r0, [r5, #16]
   33ec0:	str	r1, [r5, #20]
   33ec4:	b	33e7c <flatcc_json_parser_union_type@@Base+0x3f8>

00033ec8 <flatcc_json_parser_union_vector@@Base>:
   33ec8:	push	{r4, r5, r6, r7, fp, lr}
   33ecc:	add	fp, sp, #16
   33ed0:	sub	sp, sp, #16
   33ed4:	mov	r6, r1
   33ed8:	mov	r5, r0
   33edc:	ldr	r0, [r0]
   33ee0:	ldr	r1, [fp, #12]
   33ee4:	mov	r7, r3
   33ee8:	mov	r4, r2
   33eec:	bl	2bf10 <flatcc_builder_get_user_frame_ptr@@Base>
   33ef0:	add	r2, r0, #8
   33ef4:	add	r3, r7, r7, lsl #1
   33ef8:	mov	r1, r2
   33efc:	ldr	r7, [r1, r3, lsl #3]!
   33f00:	cmp	r7, #0
   33f04:	beq	33f38 <flatcc_json_parser_union_vector@@Base+0x70>
   33f08:	ldr	r0, [r5, #20]
   33f0c:	cmp	r0, #0
   33f10:	bne	33f30 <flatcc_json_parser_union_vector@@Base+0x68>
   33f14:	str	r6, [r5, #32]
   33f18:	mov	r0, #28
   33f1c:	ldr	r1, [r5, #4]
   33f20:	sub	r1, r6, r1
   33f24:	add	r1, r1, #1
   33f28:	str	r1, [r5, #16]
   33f2c:	str	r0, [r5, #20]
   33f30:	mov	r0, r4
   33f34:	b	33f7c <flatcc_json_parser_union_vector@@Base+0xb4>
   33f38:	add	r2, r2, r3, lsl #3
   33f3c:	ldr	r3, [r0, #4]
   33f40:	ldrb	r7, [r2, #12]
   33f44:	cmp	r7, #0
   33f48:	beq	33f84 <flatcc_json_parser_union_vector@@Base+0xbc>
   33f4c:	sub	r3, r3, #1
   33f50:	ldr	r1, [fp, #16]
   33f54:	ldr	r7, [fp, #8]
   33f58:	str	r3, [r0, #4]
   33f5c:	ldr	r0, [r2, #16]
   33f60:	ldr	r3, [r2, #20]
   33f64:	mov	r2, r4
   33f68:	stm	sp, {r0, r7}
   33f6c:	str	r1, [sp, #8]
   33f70:	mov	r0, r5
   33f74:	mov	r1, r6
   33f78:	bl	33fb8 <flatcc_json_parser_union_vector@@Base+0xf0>
   33f7c:	sub	sp, fp, #16
   33f80:	pop	{r4, r5, r6, r7, fp, pc}
   33f84:	add	r3, r3, #1
   33f88:	str	r3, [r0, #4]
   33f8c:	ldr	r0, [r5, #12]
   33f90:	str	r0, [r2, #8]
   33f94:	ldr	r0, [r5, #4]
   33f98:	str	r0, [r2, #4]
   33f9c:	str	r6, [r1]
   33fa0:	mov	r0, r5
   33fa4:	mov	r1, r6
   33fa8:	mov	r2, r4
   33fac:	sub	sp, fp, #16
   33fb0:	pop	{r4, r5, r6, r7, fp, lr}
   33fb4:	b	31b3c <flatcc_json_parser_generic_json@@Base>
   33fb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33fbc:	add	fp, sp, #28
   33fc0:	sub	sp, sp, #12
   33fc4:	mov	r5, r0
   33fc8:	mov	r0, #0
   33fcc:	mov	r8, r3
   33fd0:	mov	r6, r2
   33fd4:	mov	r7, r1
   33fd8:	str	r0, [sp, #8]
   33fdc:	ldr	r0, [r5]
   33fe0:	bl	2d1d4 <flatcc_builder_start_offset_vector@@Base>
   33fe4:	cmp	r0, #0
   33fe8:	beq	3400c <flatcc_json_parser_union_vector@@Base+0x144>
   33fec:	ldr	r0, [r5, #20]
   33ff0:	cmp	r0, #0
   33ff4:	bne	3427c <flatcc_json_parser_union_vector@@Base+0x3b4>
   33ff8:	str	r7, [r5, #32]
   33ffc:	mov	r0, #33	; 0x21
   34000:	ldr	r1, [r5, #4]
   34004:	sub	r1, r7, r1
   34008:	b	34270 <flatcc_json_parser_union_vector@@Base+0x3a8>
   3400c:	ldr	sl, [fp, #8]
   34010:	cmp	r7, r6
   34014:	beq	34048 <flatcc_json_parser_union_vector@@Base+0x180>
   34018:	ldrb	r0, [r7]
   3401c:	cmp	r0, #91	; 0x5b
   34020:	bne	34048 <flatcc_json_parser_union_vector@@Base+0x180>
   34024:	add	r1, r7, #1
   34028:	sub	r0, r6, r1
   3402c:	cmp	r0, #2
   34030:	blt	3408c <flatcc_json_parser_union_vector@@Base+0x1c4>
   34034:	ldrb	r0, [r1]
   34038:	cmp	r0, #32
   3403c:	bls	3407c <flatcc_json_parser_union_vector@@Base+0x1b4>
   34040:	mov	r7, r1
   34044:	b	3409c <flatcc_json_parser_union_vector@@Base+0x1d4>
   34048:	ldr	r0, [r5, #20]
   3404c:	mov	r9, r6
   34050:	cmp	r0, #0
   34054:	bne	3424c <flatcc_json_parser_union_vector@@Base+0x384>
   34058:	str	r7, [r5, #32]
   3405c:	mov	r0, #22
   34060:	mov	r9, r6
   34064:	ldr	r1, [r5, #4]
   34068:	sub	r1, r7, r1
   3406c:	add	r1, r1, #1
   34070:	str	r1, [r5, #16]
   34074:	str	r0, [r5, #20]
   34078:	b	3424c <flatcc_json_parser_union_vector@@Base+0x384>
   3407c:	bne	3408c <flatcc_json_parser_union_vector@@Base+0x1c4>
   34080:	ldrb	r0, [r7, #2]!
   34084:	cmp	r0, #32
   34088:	bhi	3409c <flatcc_json_parser_union_vector@@Base+0x1d4>
   3408c:	mov	r0, r5
   34090:	mov	r2, r6
   34094:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   34098:	mov	r7, r0
   3409c:	cmp	r7, r6
   340a0:	mov	r4, r6
   340a4:	beq	340dc <flatcc_json_parser_union_vector@@Base+0x214>
   340a8:	ldrb	r0, [r7]
   340ac:	cmp	r0, #93	; 0x5d
   340b0:	bne	340d8 <flatcc_json_parser_union_vector@@Base+0x210>
   340b4:	add	r1, r7, #1
   340b8:	sub	r0, r6, r1
   340bc:	cmp	r0, #2
   340c0:	blt	3423c <flatcc_json_parser_union_vector@@Base+0x374>
   340c4:	ldrb	r0, [r1]
   340c8:	cmp	r0, #32
   340cc:	bls	34228 <flatcc_json_parser_union_vector@@Base+0x360>
   340d0:	mov	r9, r1
   340d4:	b	3424c <flatcc_json_parser_union_vector@@Base+0x384>
   340d8:	mov	r4, r7
   340dc:	cmp	sl, #0
   340e0:	beq	34208 <flatcc_json_parser_union_vector@@Base+0x340>
   340e4:	add	r0, r6, #1
   340e8:	mov	sl, #0
   340ec:	add	r9, sp, #8
   340f0:	str	r0, [sp, #4]
   340f4:	ldr	r0, [r5]
   340f8:	mov	r1, r8
   340fc:	bl	2bf10 <flatcc_builder_get_user_frame_ptr@@Base>
   34100:	ldrb	r3, [r0, -sl]
   34104:	ldr	r7, [fp, #16]
   34108:	mov	r0, r5
   3410c:	mov	r1, r4
   34110:	mov	r2, r6
   34114:	str	r9, [sp]
   34118:	blx	r7
   3411c:	cmp	r0, r6
   34120:	beq	3427c <flatcc_json_parser_union_vector@@Base+0x3b4>
   34124:	mov	r7, r0
   34128:	ldr	r0, [r5]
   3412c:	mov	r1, #1
   34130:	bl	2cba8 <flatcc_builder_extend_offset_vector@@Base>
   34134:	cmp	r0, #0
   34138:	beq	33fec <flatcc_json_parser_union_vector@@Base+0x124>
   3413c:	ldr	r1, [sp, #8]
   34140:	str	r1, [r0]
   34144:	sub	r0, r6, r7
   34148:	cmp	r0, #2
   3414c:	blt	34178 <flatcc_json_parser_union_vector@@Base+0x2b0>
   34150:	ldrb	r0, [r7]
   34154:	cmp	r0, #32
   34158:	bls	34164 <flatcc_json_parser_union_vector@@Base+0x29c>
   3415c:	mov	r4, r7
   34160:	b	3418c <flatcc_json_parser_union_vector@@Base+0x2c4>
   34164:	bne	34178 <flatcc_json_parser_union_vector@@Base+0x2b0>
   34168:	mov	r4, r7
   3416c:	ldrb	r0, [r4, #1]!
   34170:	cmp	r0, #32
   34174:	bhi	3418c <flatcc_json_parser_union_vector@@Base+0x2c4>
   34178:	mov	r0, r5
   3417c:	mov	r1, r7
   34180:	mov	r2, r6
   34184:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   34188:	mov	r4, r0
   3418c:	cmp	r4, r6
   34190:	beq	34308 <flatcc_json_parser_union_vector@@Base+0x440>
   34194:	ldrb	r0, [r4]
   34198:	cmp	r0, #44	; 0x2c
   3419c:	bne	34288 <flatcc_json_parser_union_vector@@Base+0x3c0>
   341a0:	add	r1, r4, #1
   341a4:	sub	r0, r6, r1
   341a8:	cmp	r0, #2
   341ac:	blt	341d4 <flatcc_json_parser_union_vector@@Base+0x30c>
   341b0:	ldrb	r0, [r1]
   341b4:	cmp	r0, #32
   341b8:	bls	341c4 <flatcc_json_parser_union_vector@@Base+0x2fc>
   341bc:	mov	r4, r1
   341c0:	b	341e4 <flatcc_json_parser_union_vector@@Base+0x31c>
   341c4:	bne	341d4 <flatcc_json_parser_union_vector@@Base+0x30c>
   341c8:	ldrb	r0, [r4, #2]!
   341cc:	cmp	r0, #32
   341d0:	bhi	341e4 <flatcc_json_parser_union_vector@@Base+0x31c>
   341d4:	mov	r0, r5
   341d8:	mov	r2, r6
   341dc:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   341e0:	mov	r4, r0
   341e4:	cmp	r4, r6
   341e8:	beq	342b4 <flatcc_json_parser_union_vector@@Base+0x3ec>
   341ec:	ldrb	r0, [r4]
   341f0:	cmp	r0, #93	; 0x5d
   341f4:	beq	34290 <flatcc_json_parser_union_vector@@Base+0x3c8>
   341f8:	ldr	r0, [fp, #8]
   341fc:	sub	sl, sl, #1
   34200:	adds	r0, r0, sl
   34204:	bne	340f4 <flatcc_json_parser_union_vector@@Base+0x22c>
   34208:	ldr	r0, [r5, #20]
   3420c:	cmp	r0, #0
   34210:	bne	3427c <flatcc_json_parser_union_vector@@Base+0x3b4>
   34214:	str	r4, [r5, #32]
   34218:	mov	r0, #30
   3421c:	ldr	r1, [r5, #4]
   34220:	sub	r1, r4, r1
   34224:	b	34270 <flatcc_json_parser_union_vector@@Base+0x3a8>
   34228:	bne	3423c <flatcc_json_parser_union_vector@@Base+0x374>
   3422c:	ldrb	r0, [r7, #2]!
   34230:	mov	r9, r7
   34234:	cmp	r0, #32
   34238:	bhi	3424c <flatcc_json_parser_union_vector@@Base+0x384>
   3423c:	mov	r0, r5
   34240:	mov	r2, r6
   34244:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   34248:	mov	r9, r0
   3424c:	cmp	sl, #0
   34250:	beq	34344 <flatcc_json_parser_union_vector@@Base+0x47c>
   34254:	ldr	r0, [r5, #20]
   34258:	cmp	r0, #0
   3425c:	bne	3427c <flatcc_json_parser_union_vector@@Base+0x3b4>
   34260:	str	r9, [r5, #32]
   34264:	mov	r0, #30
   34268:	ldr	r1, [r5, #4]
   3426c:	sub	r1, r9, r1
   34270:	add	r1, r1, #1
   34274:	str	r1, [r5, #16]
   34278:	str	r0, [r5, #20]
   3427c:	mov	r0, r6
   34280:	sub	sp, fp, #28
   34284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34288:	cmp	r0, #93	; 0x5d
   3428c:	bne	342dc <flatcc_json_parser_union_vector@@Base+0x414>
   34290:	add	r1, r4, #1
   34294:	sub	r0, r6, r1
   34298:	cmp	r0, #2
   3429c:	blt	34324 <flatcc_json_parser_union_vector@@Base+0x45c>
   342a0:	ldrb	r0, [r1]
   342a4:	cmp	r0, #32
   342a8:	bls	34310 <flatcc_json_parser_union_vector@@Base+0x448>
   342ac:	mov	r9, r1
   342b0:	b	34334 <flatcc_json_parser_union_vector@@Base+0x46c>
   342b4:	ldr	r0, [r5, #20]
   342b8:	mov	r9, r6
   342bc:	cmp	r0, #0
   342c0:	bne	34334 <flatcc_json_parser_union_vector@@Base+0x46c>
   342c4:	str	r6, [r5, #32]
   342c8:	ldr	r2, [sp, #4]
   342cc:	mov	r0, #9
   342d0:	ldr	r1, [r5, #4]
   342d4:	sub	r1, r2, r1
   342d8:	b	34300 <flatcc_json_parser_union_vector@@Base+0x438>
   342dc:	ldr	r0, [r5, #20]
   342e0:	mov	r9, r6
   342e4:	cmp	r0, #0
   342e8:	bne	34334 <flatcc_json_parser_union_vector@@Base+0x46c>
   342ec:	str	r4, [r5, #32]
   342f0:	mov	r0, #9
   342f4:	ldr	r1, [r5, #4]
   342f8:	sub	r1, r4, r1
   342fc:	add	r1, r1, #1
   34300:	str	r1, [r5, #16]
   34304:	str	r0, [r5, #20]
   34308:	mov	r9, r6
   3430c:	b	34334 <flatcc_json_parser_union_vector@@Base+0x46c>
   34310:	bne	34324 <flatcc_json_parser_union_vector@@Base+0x45c>
   34314:	ldrb	r0, [r4, #2]!
   34318:	mov	r9, r4
   3431c:	cmp	r0, #32
   34320:	bhi	34334 <flatcc_json_parser_union_vector@@Base+0x46c>
   34324:	mov	r0, r5
   34328:	mov	r2, r6
   3432c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   34330:	mov	r9, r0
   34334:	ldr	r0, [fp, #8]
   34338:	add	r0, r0, sl
   3433c:	cmp	r0, #1
   34340:	bne	34254 <flatcc_json_parser_union_vector@@Base+0x38c>
   34344:	ldr	r0, [r5]
   34348:	mov	r1, r8
   3434c:	bl	2bf10 <flatcc_builder_get_user_frame_ptr@@Base>
   34350:	mov	r1, r0
   34354:	ldr	r0, [r5]
   34358:	bl	2e460 <flatcc_builder_end_offset_vector_for_unions@@Base>
   3435c:	cmp	r0, #0
   34360:	str	r0, [sp, #8]
   34364:	beq	3438c <flatcc_json_parser_union_vector@@Base+0x4c4>
   34368:	ldr	r1, [fp, #12]
   3436c:	ldr	r0, [r5]
   34370:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   34374:	cmp	r0, #0
   34378:	beq	3438c <flatcc_json_parser_union_vector@@Base+0x4c4>
   3437c:	ldr	r1, [sp, #8]
   34380:	mov	r6, r9
   34384:	str	r1, [r0]
   34388:	b	3427c <flatcc_json_parser_union_vector@@Base+0x3b4>
   3438c:	mov	r7, r9
   34390:	b	33fec <flatcc_json_parser_union_vector@@Base+0x124>

00034394 <flatcc_json_parser_union_type_vector@@Base>:
   34394:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34398:	add	fp, sp, #28
   3439c:	sub	sp, sp, #44	; 0x2c
   343a0:	mov	r7, r1
   343a4:	mov	r5, r0
   343a8:	ldr	r0, [r0]
   343ac:	ldr	r1, [fp, #12]
   343b0:	mov	r4, r3
   343b4:	mov	r6, r2
   343b8:	bl	2bf10 <flatcc_builder_get_user_frame_ptr@@Base>
   343bc:	add	sl, r4, r4, lsl #1
   343c0:	add	r0, r0, #8
   343c4:	add	r9, r0, sl, lsl #3
   343c8:	mov	r0, r9
   343cc:	ldrb	r1, [r0, #12]!
   343d0:	cmp	r1, #0
   343d4:	beq	343f8 <flatcc_json_parser_union_type_vector@@Base+0x64>
   343d8:	ldr	r0, [r5, #20]
   343dc:	cmp	r0, #0
   343e0:	bne	348a0 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   343e4:	mov	r0, #28
   343e8:	str	r7, [r5, #32]
   343ec:	ldr	r1, [r5, #4]
   343f0:	sub	r1, r7, r1
   343f4:	b	34894 <flatcc_json_parser_union_type_vector@@Base+0x500>
   343f8:	mov	r1, #1
   343fc:	mov	r2, #1
   34400:	mvn	r3, #0
   34404:	strb	r1, [r0]
   34408:	mov	r1, #1
   3440c:	ldr	r0, [r5]
   34410:	bl	2d148 <flatcc_builder_start_vector@@Base>
   34414:	cmp	r0, #0
   34418:	beq	34424 <flatcc_json_parser_union_type_vector@@Base+0x90>
   3441c:	mov	r4, r7
   34420:	b	34878 <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   34424:	cmp	r7, r6
   34428:	beq	3445c <flatcc_json_parser_union_type_vector@@Base+0xc8>
   3442c:	ldrb	r0, [r7]
   34430:	cmp	r0, #91	; 0x5b
   34434:	bne	3445c <flatcc_json_parser_union_type_vector@@Base+0xc8>
   34438:	add	r1, r7, #1
   3443c:	sub	r0, r6, r1
   34440:	cmp	r0, #2
   34444:	blt	344a0 <flatcc_json_parser_union_type_vector@@Base+0x10c>
   34448:	ldrb	r0, [r1]
   3444c:	cmp	r0, #32
   34450:	bls	34490 <flatcc_json_parser_union_type_vector@@Base+0xfc>
   34454:	mov	r7, r1
   34458:	b	344b0 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   3445c:	ldr	r0, [r5, #20]
   34460:	mov	r8, r6
   34464:	cmp	r0, #0
   34468:	bne	34774 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   3446c:	str	r7, [r5, #32]
   34470:	mov	r0, #22
   34474:	ldr	r1, [r5, #4]
   34478:	sub	r1, r7, r1
   3447c:	add	r1, r1, #1
   34480:	str	r1, [r5, #16]
   34484:	str	r0, [r5, #20]
   34488:	mov	r8, r6
   3448c:	b	34774 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   34490:	bne	344a0 <flatcc_json_parser_union_type_vector@@Base+0x10c>
   34494:	ldrb	r0, [r7, #2]!
   34498:	cmp	r0, #32
   3449c:	bhi	344b0 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   344a0:	mov	r0, r5
   344a4:	mov	r2, r6
   344a8:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   344ac:	mov	r7, r0
   344b0:	cmp	r7, r6
   344b4:	mov	r4, r6
   344b8:	beq	344f0 <flatcc_json_parser_union_type_vector@@Base+0x15c>
   344bc:	ldrb	r0, [r7]
   344c0:	cmp	r0, #93	; 0x5d
   344c4:	bne	344ec <flatcc_json_parser_union_type_vector@@Base+0x158>
   344c8:	add	r1, r7, #1
   344cc:	sub	r0, r6, r1
   344d0:	cmp	r0, #2
   344d4:	blt	34764 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   344d8:	ldrb	r0, [r1]
   344dc:	cmp	r0, #32
   344e0:	bls	34718 <flatcc_json_parser_union_type_vector@@Base+0x384>
   344e4:	mov	r8, r1
   344e8:	b	34774 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   344ec:	mov	r4, r7
   344f0:	ldr	r0, [r5]
   344f4:	mov	r1, #1
   344f8:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   344fc:	cmp	r0, #0
   34500:	beq	34878 <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   34504:	mov	r1, r0
   34508:	add	r0, r6, #1
   3450c:	str	r0, [sp, #16]
   34510:	mov	r8, #0
   34514:	cmp	r4, r6
   34518:	str	r1, [sp, #20]
   3451c:	str	r8, [sp, #36]	; 0x24
   34520:	str	r8, [sp, #32]
   34524:	strb	r8, [sp, #27]
   34528:	str	r8, [sp, #28]
   3452c:	beq	345d0 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   34530:	add	r0, sp, #32
   34534:	mov	r1, r4
   34538:	mov	r2, r6
   3453c:	add	r3, sp, #28
   34540:	str	r0, [sp]
   34544:	mov	r0, r5
   34548:	bl	3314c <flatcc_json_parser_integer@@Base>
   3454c:	cmp	r0, r4
   34550:	beq	3458c <flatcc_json_parser_union_type_vector@@Base+0x1f8>
   34554:	mov	r7, r0
   34558:	ldr	r0, [sp, #28]
   3455c:	cmp	r0, #0
   34560:	beq	34594 <flatcc_json_parser_union_type_vector@@Base+0x200>
   34564:	ldr	r0, [r5, #20]
   34568:	cmp	r0, #0
   3456c:	bne	345d0 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   34570:	str	r7, [r5, #32]
   34574:	ldr	r0, [r5, #4]
   34578:	sub	r0, r7, r0
   3457c:	add	r0, r0, #1
   34580:	str	r0, [r5, #16]
   34584:	mov	r0, #8
   34588:	b	345cc <flatcc_json_parser_union_type_vector@@Base+0x238>
   3458c:	mov	r7, r4
   34590:	b	345d4 <flatcc_json_parser_union_type_vector@@Base+0x240>
   34594:	ldr	r0, [sp, #32]
   34598:	ldr	r1, [sp, #36]	; 0x24
   3459c:	subs	r2, r0, #256	; 0x100
   345a0:	sbcs	r1, r1, #0
   345a4:	bcc	3470c <flatcc_json_parser_union_type_vector@@Base+0x378>
   345a8:	ldr	r0, [r5, #20]
   345ac:	cmp	r0, #0
   345b0:	bne	345d0 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   345b4:	str	r7, [r5, #32]
   345b8:	ldr	r0, [r5, #4]
   345bc:	sub	r0, r7, r0
   345c0:	add	r0, r0, #1
   345c4:	str	r0, [r5, #16]
   345c8:	mov	r0, #7
   345cc:	str	r0, [r5, #20]
   345d0:	mov	r7, r6
   345d4:	cmp	r4, r7
   345d8:	bne	3460c <flatcc_json_parser_union_type_vector@@Base+0x278>
   345dc:	ldr	r3, [fp, #16]
   345e0:	add	r0, sp, #27
   345e4:	mov	r1, r4
   345e8:	mov	r2, r6
   345ec:	str	r0, [sp]
   345f0:	mov	r0, r5
   345f4:	bl	33ce4 <flatcc_json_parser_union_type@@Base+0x260>
   345f8:	mov	r7, r0
   345fc:	cmp	r0, r4
   34600:	cmpne	r7, r6
   34604:	beq	3441c <flatcc_json_parser_union_type_vector@@Base+0x88>
   34608:	ldrb	r8, [sp, #27]
   3460c:	ldr	r1, [fp, #24]
   34610:	uxtb	r0, r8
   34614:	blx	r1
   34618:	cmp	r0, #0
   3461c:	bne	34634 <flatcc_json_parser_union_type_vector@@Base+0x2a0>
   34620:	ldrb	r0, [r5, #8]
   34624:	tst	r0, #1
   34628:	beq	34908 <flatcc_json_parser_union_type_vector@@Base+0x574>
   3462c:	mov	r8, #0
   34630:	strb	r8, [sp, #27]
   34634:	ldr	r0, [sp, #20]
   34638:	strb	r8, [r0]
   3463c:	sub	r0, r6, r7
   34640:	cmp	r0, #2
   34644:	blt	34670 <flatcc_json_parser_union_type_vector@@Base+0x2dc>
   34648:	ldrb	r0, [r7]
   3464c:	cmp	r0, #32
   34650:	bls	3465c <flatcc_json_parser_union_type_vector@@Base+0x2c8>
   34654:	mov	r4, r7
   34658:	b	34684 <flatcc_json_parser_union_type_vector@@Base+0x2f0>
   3465c:	bne	34670 <flatcc_json_parser_union_type_vector@@Base+0x2dc>
   34660:	mov	r4, r7
   34664:	ldrb	r0, [r4, #1]!
   34668:	cmp	r0, #32
   3466c:	bhi	34684 <flatcc_json_parser_union_type_vector@@Base+0x2f0>
   34670:	mov	r0, r5
   34674:	mov	r1, r7
   34678:	mov	r2, r6
   3467c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   34680:	mov	r4, r0
   34684:	cmp	r4, r6
   34688:	beq	34488 <flatcc_json_parser_union_type_vector@@Base+0xf4>
   3468c:	ldrb	r0, [r4]
   34690:	cmp	r0, #44	; 0x2c
   34694:	bne	34730 <flatcc_json_parser_union_type_vector@@Base+0x39c>
   34698:	add	r1, r4, #1
   3469c:	sub	r0, r6, r1
   346a0:	cmp	r0, #2
   346a4:	blt	346cc <flatcc_json_parser_union_type_vector@@Base+0x338>
   346a8:	ldrb	r0, [r1]
   346ac:	cmp	r0, #32
   346b0:	bls	346bc <flatcc_json_parser_union_type_vector@@Base+0x328>
   346b4:	mov	r4, r1
   346b8:	b	346dc <flatcc_json_parser_union_type_vector@@Base+0x348>
   346bc:	bne	346cc <flatcc_json_parser_union_type_vector@@Base+0x338>
   346c0:	ldrb	r0, [r4, #2]!
   346c4:	cmp	r0, #32
   346c8:	bhi	346dc <flatcc_json_parser_union_type_vector@@Base+0x348>
   346cc:	mov	r0, r5
   346d0:	mov	r2, r6
   346d4:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   346d8:	mov	r4, r0
   346dc:	cmp	r4, r6
   346e0:	beq	348bc <flatcc_json_parser_union_type_vector@@Base+0x528>
   346e4:	ldrb	r0, [r4]
   346e8:	cmp	r0, #93	; 0x5d
   346ec:	beq	34738 <flatcc_json_parser_union_type_vector@@Base+0x3a4>
   346f0:	ldr	r0, [r5]
   346f4:	mov	r1, #1
   346f8:	bl	2c950 <flatcc_builder_extend_vector@@Base>
   346fc:	mov	r1, r0
   34700:	cmp	r0, #0
   34704:	bne	34510 <flatcc_json_parser_union_type_vector@@Base+0x17c>
   34708:	b	34878 <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   3470c:	mov	r8, r0
   34710:	strb	r0, [sp, #27]
   34714:	b	345d4 <flatcc_json_parser_union_type_vector@@Base+0x240>
   34718:	bne	34764 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   3471c:	ldrb	r0, [r7, #2]!
   34720:	mov	r8, r7
   34724:	cmp	r0, #32
   34728:	bhi	34774 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   3472c:	b	34764 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   34730:	cmp	r0, #93	; 0x5d
   34734:	bne	348e4 <flatcc_json_parser_union_type_vector@@Base+0x550>
   34738:	add	r1, r4, #1
   3473c:	sub	r0, r6, r1
   34740:	cmp	r0, #2
   34744:	blt	34764 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   34748:	ldrb	r0, [r1]
   3474c:	cmp	r0, #32
   34750:	bhi	344e4 <flatcc_json_parser_union_type_vector@@Base+0x150>
   34754:	bne	34764 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   34758:	ldrb	r0, [r4, #2]!
   3475c:	mov	r8, r4
   34760:	b	34724 <flatcc_json_parser_union_type_vector@@Base+0x390>
   34764:	mov	r0, r5
   34768:	mov	r2, r6
   3476c:	bl	313e4 <flatcc_json_parser_space_ext@@Base>
   34770:	mov	r8, r0
   34774:	ldr	r0, [r5]
   34778:	bl	2e264 <flatcc_builder_vector_count@@Base>
   3477c:	str	r0, [r9, #16]
   34780:	mov	r4, r0
   34784:	ldr	r0, [r5]
   34788:	mov	r1, r4
   3478c:	bl	2bdbc <flatcc_builder_enter_user_frame@@Base>
   34790:	mov	r9, r0
   34794:	ldr	r0, [r5]
   34798:	mov	r1, r9
   3479c:	bl	2bf10 <flatcc_builder_get_user_frame_ptr@@Base>
   347a0:	mov	r7, r0
   347a4:	ldr	r0, [r5]
   347a8:	bl	2e270 <flatcc_builder_vector_edit@@Base>
   347ac:	mov	r1, r0
   347b0:	mov	r0, r7
   347b4:	mov	r2, r4
   347b8:	bl	14e5c <memcpy@plt>
   347bc:	ldr	r0, [r5]
   347c0:	bl	2e174 <flatcc_builder_end_vector@@Base>
   347c4:	cmp	r0, #0
   347c8:	beq	34874 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   347cc:	ldr	r1, [fp, #8]
   347d0:	mov	r7, r0
   347d4:	ldr	r0, [r5]
   347d8:	sub	r1, r1, #1
   347dc:	bl	2e634 <flatcc_builder_table_add_offset@@Base>
   347e0:	cmp	r0, #0
   347e4:	beq	34874 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   347e8:	str	r7, [r0]
   347ec:	ldr	r1, [fp, #12]
   347f0:	ldr	r0, [r5]
   347f4:	bl	2bf10 <flatcc_builder_get_user_frame_ptr@@Base>
   347f8:	add	r2, r0, #8
   347fc:	mov	r3, r2
   34800:	ldr	r1, [r3, sl, lsl #3]!
   34804:	str	r9, [r3, #20]
   34808:	ldr	r3, [r0, #4]
   3480c:	cmp	r1, #0
   34810:	beq	348ac <flatcc_json_parser_union_type_vector@@Base+0x518>
   34814:	cmp	r3, #0
   34818:	beq	3491c <flatcc_json_parser_union_type_vector@@Base+0x588>
   3481c:	sub	r3, r3, #1
   34820:	ldr	ip, [fp, #20]
   34824:	str	r3, [r0, #4]
   34828:	add	r0, r2, sl, lsl #3
   3482c:	mov	r3, r9
   34830:	ldr	sl, [r5, #4]
   34834:	ldr	r7, [r5, #12]
   34838:	ldr	r2, [r0, #8]
   3483c:	str	r2, [r5, #12]
   34840:	mov	r2, r6
   34844:	ldr	r0, [r0, #4]
   34848:	str	r0, [r5, #4]
   3484c:	ldr	r0, [fp, #8]
   34850:	str	r4, [sp]
   34854:	stmib	sp, {r0, ip}
   34858:	mov	r0, r5
   3485c:	bl	33fb8 <flatcc_json_parser_union_vector@@Base+0xf0>
   34860:	cmp	r0, r6
   34864:	beq	348a0 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   34868:	str	sl, [r5, #4]
   3486c:	str	r7, [r5, #12]
   34870:	b	348b4 <flatcc_json_parser_union_type_vector@@Base+0x520>
   34874:	mov	r4, r8
   34878:	ldr	r0, [r5, #20]
   3487c:	cmp	r0, #0
   34880:	bne	348a0 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   34884:	str	r4, [r5, #32]
   34888:	mov	r0, #33	; 0x21
   3488c:	ldr	r1, [r5, #4]
   34890:	sub	r1, r4, r1
   34894:	add	r1, r1, #1
   34898:	str	r1, [r5, #16]
   3489c:	str	r0, [r5, #20]
   348a0:	mov	r0, r6
   348a4:	sub	sp, fp, #28
   348a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   348ac:	add	r1, r3, #1
   348b0:	str	r1, [r0, #4]
   348b4:	mov	r6, r8
   348b8:	b	348a0 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   348bc:	ldr	r0, [r5, #20]
   348c0:	mov	r8, r6
   348c4:	cmp	r0, #0
   348c8:	bne	34774 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   348cc:	str	r6, [r5, #32]
   348d0:	ldr	r2, [sp, #16]
   348d4:	mov	r0, #9
   348d8:	ldr	r1, [r5, #4]
   348dc:	sub	r1, r2, r1
   348e0:	b	34480 <flatcc_json_parser_union_type_vector@@Base+0xec>
   348e4:	ldr	r0, [r5, #20]
   348e8:	mov	r8, r6
   348ec:	cmp	r0, #0
   348f0:	bne	34774 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   348f4:	str	r4, [r5, #32]
   348f8:	mov	r0, #9
   348fc:	ldr	r1, [r5, #4]
   34900:	sub	r1, r4, r1
   34904:	b	3447c <flatcc_json_parser_union_type_vector@@Base+0xe8>
   34908:	ldr	r0, [r5, #20]
   3490c:	cmp	r0, #0
   34910:	bne	348a0 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   34914:	mov	r0, #15
   34918:	b	343e8 <flatcc_json_parser_union_type_vector@@Base+0x54>
   3491c:	movw	r0, #25580	; 0x63ec
   34920:	movw	r1, #25595	; 0x63fb
   34924:	movw	r3, #25873	; 0x6511
   34928:	movw	r2, #1122	; 0x462
   3492c:	movt	r0, #4
   34930:	movt	r1, #4
   34934:	movt	r3, #4
   34938:	bl	14f40 <__assert_fail@plt>

0003493c <flatcc_json_parser_table_as_root@@Base>:
   3493c:	push	{r4, r5, r6, r7, fp, lr}
   34940:	add	fp, sp, #16
   34944:	sub	sp, sp, #48	; 0x30
   34948:	cmp	r1, #0
   3494c:	vmov.i32	q8, #0	; 0x00000000
   34950:	add	r5, sp, #8
   34954:	mov	r6, r0
   34958:	add	r7, r2, r3
   3495c:	mov	r4, r2
   34960:	movne	r5, r1
   34964:	mov	r1, #2
   34968:	add	r0, r5, #16
   3496c:	vst1.32	{d16-d17}, [r0]
   34970:	mov	r0, #0
   34974:	str	r0, [r5, #36]	; 0x24
   34978:	mov	r0, #1
   3497c:	str	r2, [r5, #32]
   34980:	str	r0, [r5, #12]
   34984:	ldr	r0, [fp, #8]
   34988:	str	r2, [r5, #4]
   3498c:	str	r6, [r5]
   34990:	and	r3, r1, r0, lsr #1
   34994:	ldr	r1, [fp, #12]
   34998:	str	r0, [r5, #8]
   3499c:	str	r7, [r5, #28]
   349a0:	str	r2, [r5, #24]
   349a4:	mov	r0, r6
   349a8:	mov	r2, #0
   349ac:	bl	2c4b8 <flatcc_builder_start_buffer@@Base>
   349b0:	mov	r1, r0
   349b4:	mvn	r0, #0
   349b8:	cmp	r1, #0
   349bc:	bne	34a00 <flatcc_json_parser_table_as_root@@Base+0xc4>
   349c0:	ldr	ip, [fp, #16]
   349c4:	add	r3, sp, #4
   349c8:	mov	r0, r5
   349cc:	mov	r1, r4
   349d0:	mov	r2, r7
   349d4:	blx	ip
   349d8:	ldr	r0, [r5, #20]
   349dc:	cmp	r0, #0
   349e0:	bne	34a00 <flatcc_json_parser_table_as_root@@Base+0xc4>
   349e4:	ldr	r1, [sp, #4]
   349e8:	mov	r0, r6
   349ec:	bl	2c6a8 <flatcc_builder_end_buffer@@Base>
   349f0:	cmp	r0, #0
   349f4:	mvn	r0, #0
   349f8:	movne	r0, #0
   349fc:	strne	r4, [r5, #36]	; 0x24
   34a00:	sub	sp, fp, #16
   34a04:	pop	{r4, r5, r6, r7, fp, pc}

00034a08 <flatcc_json_parser_struct_as_root@@Base>:
   34a08:	push	{r4, r5, r6, r7, fp, lr}
   34a0c:	add	fp, sp, #16
   34a10:	sub	sp, sp, #48	; 0x30
   34a14:	cmp	r1, #0
   34a18:	vmov.i32	q8, #0	; 0x00000000
   34a1c:	add	r5, sp, #8
   34a20:	mov	r6, r0
   34a24:	add	r7, r2, r3
   34a28:	mov	r4, r2
   34a2c:	movne	r5, r1
   34a30:	mov	r1, #2
   34a34:	add	r0, r5, #16
   34a38:	vst1.32	{d16-d17}, [r0]
   34a3c:	mov	r0, #0
   34a40:	str	r0, [r5, #36]	; 0x24
   34a44:	mov	r0, #1
   34a48:	str	r2, [r5, #32]
   34a4c:	str	r0, [r5, #12]
   34a50:	ldr	r0, [fp, #8]
   34a54:	str	r2, [r5, #4]
   34a58:	str	r6, [r5]
   34a5c:	and	r3, r1, r0, lsr #1
   34a60:	ldr	r1, [fp, #12]
   34a64:	str	r0, [r5, #8]
   34a68:	str	r7, [r5, #28]
   34a6c:	str	r2, [r5, #24]
   34a70:	mov	r0, r6
   34a74:	mov	r2, #0
   34a78:	bl	2c4b8 <flatcc_builder_start_buffer@@Base>
   34a7c:	mov	r1, r0
   34a80:	mvn	r0, #0
   34a84:	cmp	r1, #0
   34a88:	bne	34acc <flatcc_json_parser_struct_as_root@@Base+0xc4>
   34a8c:	ldr	ip, [fp, #16]
   34a90:	add	r3, sp, #4
   34a94:	mov	r0, r5
   34a98:	mov	r1, r4
   34a9c:	mov	r2, r7
   34aa0:	blx	ip
   34aa4:	ldr	r0, [r5, #20]
   34aa8:	cmp	r0, #0
   34aac:	bne	34acc <flatcc_json_parser_struct_as_root@@Base+0xc4>
   34ab0:	ldr	r1, [sp, #4]
   34ab4:	mov	r0, r6
   34ab8:	bl	2c6a8 <flatcc_builder_end_buffer@@Base>
   34abc:	cmp	r0, #0
   34ac0:	mvn	r0, #0
   34ac4:	movne	r0, #0
   34ac8:	strne	r4, [r5, #36]	; 0x24
   34acc:	sub	sp, fp, #16
   34ad0:	pop	{r4, r5, r6, r7, fp, pc}
   34ad4:	andeq	r0, r0, r0

00034ad8 <flatcc_json_printer_error_string@@Base>:
   34ad8:	cmp	r0, #3
   34adc:	movwhi	r0, #22486	; 0x57d6
   34ae0:	movthi	r0, #4
   34ae4:	bxhi	lr
   34ae8:	movw	r1, #29236	; 0x7234
   34aec:	movt	r1, #4
   34af0:	ldr	r0, [r1, r0, lsl #2]
   34af4:	bx	lr

00034af8 <flatcc_json_printer_fmt_float@@Base>:
   34af8:	vcvt.f64.f32	d0, s0
   34afc:	b	34b00 <flatcc_json_printer_fmt_float@@Base+0x8>
   34b00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34b04:	add	fp, sp, #28
   34b08:	sub	sp, sp, #4
   34b0c:	vpush	{d8}
   34b10:	sub	sp, sp, #176	; 0xb0
   34b14:	cmp	r0, #0
   34b18:	beq	3530c <flatcc_json_printer_fmt_float@@Base+0x814>
   34b1c:	vmov	r3, r2, d0
   34b20:	mov	r5, #-2147483648	; 0x80000000
   34b24:	mov	r6, #0
   34b28:	vorr	d8, d0, d0
   34b2c:	orr	r1, r5, #266338304	; 0xfe00000
   34b30:	orr	r1, r1, #1879048192	; 0x70000000
   34b34:	lsl	r7, r2, #1
   34b38:	subs	r6, r6, r3, lsl #1
   34b3c:	orr	r7, r7, r3, lsr #31
   34b40:	sbcs	r1, r1, r7
   34b44:	bcs	34b64 <flatcc_json_printer_fmt_float@@Base+0x6c>
   34b48:	movw	r1, #27031	; 0x6997
   34b4c:	movt	r1, #4
   34b50:	sub	sp, fp, #40	; 0x28
   34b54:	vpop	{d8}
   34b58:	add	sp, sp, #4
   34b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34b60:	b	14f28 <sprintf@plt>
   34b64:	cmn	r2, #1
   34b68:	ble	34b74 <flatcc_json_printer_fmt_float@@Base+0x7c>
   34b6c:	mov	r4, r0
   34b70:	b	34b88 <flatcc_json_printer_fmt_float@@Base+0x90>
   34b74:	vneg.f64	d8, d8
   34b78:	mov	r1, #45	; 0x2d
   34b7c:	mov	r4, r0
   34b80:	eor	r2, r2, r5
   34b84:	strb	r1, [r4], #1
   34b88:	movw	r7, #0
   34b8c:	movt	r7, #32752	; 0x7ff0
   34b90:	eor	r1, r2, r7
   34b94:	orrs	r1, r3, r1
   34b98:	beq	34bb4 <flatcc_json_printer_fmt_float@@Base+0xbc>
   34b9c:	orrs	r1, r3, r2
   34ba0:	bne	34bc8 <flatcc_json_printer_fmt_float@@Base+0xd0>
   34ba4:	mov	r1, #48	; 0x30
   34ba8:	strh	r1, [r4], -r0
   34bac:	add	r0, r4, #1
   34bb0:	b	352f4 <flatcc_json_printer_fmt_float@@Base+0x7fc>
   34bb4:	movw	r1, #28265	; 0x6e69
   34bb8:	movt	r1, #102	; 0x66
   34bbc:	str	r1, [r4], -r0
   34bc0:	add	r0, r4, #3
   34bc4:	b	352f4 <flatcc_json_printer_fmt_float@@Base+0x7fc>
   34bc8:	str	r0, [sp, #88]	; 0x58
   34bcc:	vmov	r5, r0, d8
   34bd0:	str	r4, [sp, #108]	; 0x6c
   34bd4:	mov	r6, r0
   34bd8:	ands	r9, r0, r7
   34bdc:	str	r0, [sp, #36]	; 0x24
   34be0:	bfc	r6, #20, #12
   34be4:	beq	34bfc <flatcc_json_printer_fmt_float@@Base+0x104>
   34be8:	movw	r0, #64461	; 0xfbcd
   34bec:	orr	r4, r6, #1048576	; 0x100000
   34bf0:	movt	r0, #65535	; 0xffff
   34bf4:	add	r8, r0, r9, lsr #20
   34bf8:	b	34c08 <flatcc_json_printer_fmt_float@@Base+0x110>
   34bfc:	movw	r8, #64462	; 0xfbce
   34c00:	mov	r4, r6
   34c04:	movt	r8, #65535	; 0xffff
   34c08:	mov	r7, #0
   34c0c:	sub	r0, fp, #88	; 0x58
   34c10:	mov	r2, r5
   34c14:	mov	r3, r4
   34c18:	str	r8, [sp]
   34c1c:	str	r7, [sp, #4]
   34c20:	bl	40368 <flatcc_json_printer_clear@@Base+0xe4>
   34c24:	mov	r0, #1
   34c28:	str	r7, [sp, #4]
   34c2c:	sub	sl, r8, #1
   34c30:	orr	r2, r0, r5, lsl #1
   34c34:	lsl	r0, r4, #1
   34c38:	str	sl, [sp]
   34c3c:	orr	r7, r0, r5, lsr #31
   34c40:	sub	r0, fp, #104	; 0x68
   34c44:	mov	r3, r7
   34c48:	bl	40368 <flatcc_json_printer_clear@@Base+0xe4>
   34c4c:	vcmpe.f64	d8, #0.0
   34c50:	vmrs	APSR_nzcv, fpscr
   34c54:	ble	3532c <flatcc_json_printer_fmt_float@@Base+0x834>
   34c58:	vldr	d16, [pc, #944]	; 35010 <flatcc_json_printer_fmt_float@@Base+0x518>
   34c5c:	vcmpe.f64	d8, d16
   34c60:	vmrs	APSR_nzcv, fpscr
   34c64:	bhi	3532c <flatcc_json_printer_fmt_float@@Base+0x834>
   34c68:	orrs	r1, r5, r6
   34c6c:	clz	r2, r9
   34c70:	mvn	r3, #60	; 0x3c
   34c74:	str	r5, [sp, #84]	; 0x54
   34c78:	vldr	d16, [pc, #920]	; 35018 <flatcc_json_printer_fmt_float@@Base+0x520>
   34c7c:	lsl	r0, r4, #2
   34c80:	movwne	r1, #1
   34c84:	lsr	r2, r2, #5
   34c88:	orrs	r1, r1, r2
   34c8c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   34c90:	orreq	r7, r0, r5, lsr #30
   34c94:	lsl	r0, r5, #2
   34c98:	lslne	r0, r5, #1
   34c9c:	subs	r0, r0, #1
   34ca0:	sub	r2, r3, r2
   34ca4:	vmov	s0, r2
   34ca8:	sbc	r2, r7, #0
   34cac:	cmp	r1, #0
   34cb0:	subeq	sl, r8, #2
   34cb4:	vcvt.f64.s32	d17, s0
   34cb8:	ldr	r8, [fp, #-96]	; 0xffffffa0
   34cbc:	sub	r1, sl, r8
   34cc0:	vmul.f64	d16, d17, d16
   34cc4:	rsb	r3, r1, #32
   34cc8:	lsl	r6, r0, r1
   34ccc:	lsr	r3, r0, r3
   34cd0:	orr	r7, r3, r2, lsl r1
   34cd4:	subs	r2, r1, #32
   34cd8:	sub	r1, fp, #88	; 0x58
   34cdc:	lslpl	r7, r0, r2
   34ce0:	add	r2, r1, #8
   34ce4:	sub	r1, fp, #104	; 0x68
   34ce8:	movwpl	r6, #0
   34cec:	add	r1, r1, #8
   34cf0:	vcvt.s32.f64	s0, d16
   34cf4:	vcmpe.f64	d16, #0.0
   34cf8:	str	r1, [sp, #104]	; 0x68
   34cfc:	vmrs	APSR_nzcv, fpscr
   34d00:	vmov	r0, s0
   34d04:	bmi	34d1c <flatcc_json_printer_fmt_float@@Base+0x224>
   34d08:	vcvt.f64.s32	d17, s0
   34d0c:	vsub.f64	d16, d16, d17
   34d10:	vcmp.f64	d16, #0.0
   34d14:	vmrs	APSR_nzcv, fpscr
   34d18:	addne	r0, r0, #1
   34d1c:	movw	r1, #347	; 0x15b
   34d20:	ldrd	r4, [r2]
   34d24:	mov	sl, #0
   34d28:	str	r2, [sp, #100]	; 0x64
   34d2c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   34d30:	ldr	r3, [fp, #-84]	; 0xffffffac
   34d34:	add	r0, r0, r1
   34d38:	str	sl, [sp, #20]
   34d3c:	asr	r1, r0, #31
   34d40:	add	r0, r0, r1, lsr #29
   34d44:	mvn	r1, #14
   34d48:	stm	sp, {r4, r5}
   34d4c:	and	r0, r1, r0, lsl #1
   34d50:	movw	r1, #27784	; 0x6c88
   34d54:	movt	r1, #4
   34d58:	add	r0, r0, r1
   34d5c:	ldrsh	r9, [r0, #24]
   34d60:	ldrd	r4, [r0, #16]
   34d64:	str	r9, [sp, #16]
   34d68:	str	r0, [sp, #40]	; 0x28
   34d6c:	sub	r0, fp, #88	; 0x58
   34d70:	str	r5, [sp, #12]
   34d74:	str	r4, [sp, #8]
   34d78:	bl	4040c <flatcc_json_printer_clear@@Base+0x188>
   34d7c:	add	r0, sp, #8
   34d80:	stm	sp, {r8, sl}
   34d84:	mov	r2, r6
   34d88:	mov	r3, r7
   34d8c:	stm	r0, {r4, r5, r9, sl}
   34d90:	sub	r0, fp, #56	; 0x38
   34d94:	bl	4040c <flatcc_json_printer_clear@@Base+0x188>
   34d98:	ldr	r6, [sp, #104]	; 0x68
   34d9c:	ldr	r2, [fp, #-104]	; 0xffffff98
   34da0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   34da4:	ldr	sl, [fp, #-56]	; 0xffffffc8
   34da8:	ldr	r7, [fp, #-52]	; 0xffffffcc
   34dac:	ldr	r8, [fp, #-48]	; 0xffffffd0
   34db0:	ldrd	r0, [r6]
   34db4:	stm	sp, {r0, r1, r4}
   34db8:	mov	r4, #0
   34dbc:	sub	r0, fp, #104	; 0x68
   34dc0:	str	r5, [sp, #12]
   34dc4:	str	r9, [sp, #16]
   34dc8:	str	r4, [sp, #20]
   34dcc:	bl	4040c <flatcc_json_printer_clear@@Base+0x188>
   34dd0:	ldr	r0, [sp, #100]	; 0x64
   34dd4:	ldr	r6, [r6]
   34dd8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   34ddc:	subs	r2, sl, #1
   34de0:	add	ip, sp, #8
   34de4:	sbc	r3, r7, #0
   34de8:	ldr	r5, [r0]
   34dec:	ldr	r0, [r0, #4]
   34df0:	str	r0, [sp, #80]	; 0x50
   34df4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   34df8:	str	r0, [sp, #68]	; 0x44
   34dfc:	ldr	r0, [fp, #-84]	; 0xffffffac
   34e00:	str	r0, [sp, #72]	; 0x48
   34e04:	ldr	r0, [fp, #-104]	; 0xffffff98
   34e08:	str	r6, [sp, #56]	; 0x38
   34e0c:	str	r6, [sp]
   34e10:	str	r4, [sp, #4]
   34e14:	stm	ip, {r2, r3, r8}
   34e18:	str	r4, [sp, #20]
   34e1c:	adds	r8, r0, #1
   34e20:	sub	r0, fp, #56	; 0x38
   34e24:	adc	r9, r1, #0
   34e28:	mov	r2, r8
   34e2c:	mov	r3, r9
   34e30:	bl	4046c <flatcc_json_printer_clear@@Base+0x1e8>
   34e34:	rsb	ip, r5, #0
   34e38:	add	r1, r5, #32
   34e3c:	movw	r7, #1233	; 0x4d1
   34e40:	movw	sl, #29176	; 0x71f8
   34e44:	mov	r4, #1
   34e48:	str	r5, [sp, #76]	; 0x4c
   34e4c:	str	r8, [sp, #60]	; 0x3c
   34e50:	ldr	lr, [fp, #-52]	; 0xffffffcc
   34e54:	lsr	r0, r8, ip
   34e58:	movt	sl, #4
   34e5c:	orr	r2, r0, r9, lsl r1
   34e60:	mvn	r0, #31
   34e64:	subs	r3, r0, r5
   34e68:	movw	r0, #14609	; 0x3911
   34e6c:	movt	r0, #1
   34e70:	lsrpl	r2, r9, r3
   34e74:	mla	r7, r5, r7, r0
   34e78:	add	r5, r4, r7, asr #12
   34e7c:	ldr	r6, [sl, r5, lsl #2]
   34e80:	cmp	r6, r2
   34e84:	lsr	r6, r4, r1
   34e88:	asrhi	r5, r7, #12
   34e8c:	cmp	r3, #0
   34e90:	lslpl	r6, r4, r3
   34e94:	lsl	r3, r4, ip
   34e98:	movwpl	r3, #0
   34e9c:	subs	r0, r3, #1
   34ea0:	sbc	r1, r6, #0
   34ea4:	and	r4, r0, r8
   34ea8:	cmp	r5, #0
   34eac:	add	r8, sp, #44	; 0x2c
   34eb0:	and	r7, r1, r9
   34eb4:	str	r7, [sp, #92]	; 0x5c
   34eb8:	ldr	r7, [fp, #-56]	; 0xffffffc8
   34ebc:	str	r9, [sp, #64]	; 0x40
   34ec0:	stm	r8, {r0, r3, r6}
   34ec4:	str	r1, [sp, #104]	; 0x68
   34ec8:	ble	34f58 <flatcc_json_printer_fmt_float@@Base+0x460>
   34ecc:	str	r4, [sp, #96]	; 0x60
   34ed0:	ldr	r4, [sl, r5, lsl #2]
   34ed4:	sub	r0, r5, #1
   34ed8:	mov	r1, #0
   34edc:	str	r0, [sp, #100]	; 0x64
   34ee0:	udiv	r3, r2, r4
   34ee4:	ldr	r0, [sp, #108]	; 0x6c
   34ee8:	mov	r5, r4
   34eec:	subs	sl, ip, #32
   34ef0:	mov	r8, r1
   34ef4:	mls	r2, r3, r4, r2
   34ef8:	ldr	r4, [sp, #96]	; 0x60
   34efc:	add	r6, r3, #48	; 0x30
   34f00:	strb	r6, [r0, r1]
   34f04:	rsb	r6, ip, #32
   34f08:	lsl	r0, r2, ip
   34f0c:	movwpl	r0, #0
   34f10:	lsr	r3, r2, r6
   34f14:	lslpl	r3, r2, sl
   34f18:	adds	r9, r0, r4
   34f1c:	ldr	r0, [sp, #92]	; 0x5c
   34f20:	adc	r3, r3, r0
   34f24:	subs	r0, r9, r7
   34f28:	sbcs	r0, r3, lr
   34f2c:	bcc	34f64 <flatcc_json_printer_fmt_float@@Base+0x46c>
   34f30:	ldr	r0, [sp, #100]	; 0x64
   34f34:	mov	r1, r8
   34f38:	cmp	r0, r8
   34f3c:	beq	35020 <flatcc_json_printer_fmt_float@@Base+0x528>
   34f40:	movw	r0, #52429	; 0xcccd
   34f44:	add	r1, r1, #1
   34f48:	movt	r0, #52428	; 0xcccc
   34f4c:	umull	r0, r3, r5, r0
   34f50:	lsr	r4, r3, #3
   34f54:	b	34ee0 <flatcc_json_printer_fmt_float@@Base+0x3e8>
   34f58:	mov	sl, lr
   34f5c:	mov	r6, #0
   34f60:	b	35030 <flatcc_json_printer_fmt_float@@Base+0x538>
   34f64:	ldr	r0, [sp, #56]	; 0x38
   34f68:	mov	r2, #0
   34f6c:	mov	r4, ip
   34f70:	stm	sp, {r0, r2}
   34f74:	ldr	r0, [sp, #68]	; 0x44
   34f78:	str	r0, [sp, #8]
   34f7c:	ldr	r0, [sp, #72]	; 0x48
   34f80:	str	r0, [sp, #12]
   34f84:	ldr	r0, [sp, #76]	; 0x4c
   34f88:	str	r0, [sp, #16]
   34f8c:	ldr	r0, [sp, #80]	; 0x50
   34f90:	str	r0, [sp, #20]
   34f94:	sub	r0, fp, #72	; 0x48
   34f98:	ldr	r2, [sp, #60]	; 0x3c
   34f9c:	str	r3, [sp, #104]	; 0x68
   34fa0:	ldr	r3, [sp, #64]	; 0x40
   34fa4:	str	lr, [sp, #96]	; 0x60
   34fa8:	bl	4046c <flatcc_json_printer_clear@@Base+0x1e8>
   34fac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34fb0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34fb4:	str	r7, [sp]
   34fb8:	cmp	sl, #0
   34fbc:	lsr	r1, r5, r6
   34fc0:	mov	r0, #1
   34fc4:	lsl	r6, r5, r4
   34fc8:	ldr	r7, [sp, #96]	; 0x60
   34fcc:	lslpl	r1, r5, sl
   34fd0:	movwpl	r6, #0
   34fd4:	stmib	sp, {r7, r9}
   34fd8:	ldr	r7, [sp, #104]	; 0x68
   34fdc:	str	r0, [sp, #24]
   34fe0:	mov	r0, #0
   34fe4:	str	r6, [sp, #16]
   34fe8:	str	r1, [sp, #20]
   34fec:	add	r6, r8, #1
   34ff0:	str	r0, [sp, #28]
   34ff4:	mov	r1, r6
   34ff8:	str	r7, [sp, #12]
   34ffc:	ldr	r0, [sp, #108]	; 0x6c
   35000:	bl	404c4 <flatcc_json_printer_clear@@Base+0x240>
   35004:	ldr	r1, [sp, #100]	; 0x64
   35008:	sub	r5, r1, r8
   3500c:	b	3514c <flatcc_json_printer_fmt_float@@Base+0x654>
   35010:			; <UNDEFINED> instruction: 0xffffffff
   35014:	svcvc	0x00efffff
   35018:			; <UNDEFINED> instruction: 0x509f79fe
   3501c:	svccc	0x00d34413
   35020:	ldr	r0, [sp, #100]	; 0x64
   35024:	mov	sl, lr
   35028:	add	r6, r1, #1
   3502c:	sub	r5, r0, r1
   35030:	rsb	r0, ip, #32
   35034:	mov	lr, #10
   35038:	mov	r9, #0
   3503c:	mov	r8, #1
   35040:	str	r0, [sp, #96]	; 0x60
   35044:	str	ip, [sp, #100]	; 0x64
   35048:	sub	r0, ip, #32
   3504c:	ldr	r2, [sp, #92]	; 0x5c
   35050:	ldr	ip, [sp, #44]	; 0x2c
   35054:	umull	r4, r1, r4, lr
   35058:	add	r2, r2, r2, lsl #2
   3505c:	ldr	r3, [sp, #100]	; 0x64
   35060:	cmp	r0, #0
   35064:	sub	r5, r5, #1
   35068:	add	r1, r1, r2, lsl #1
   3506c:	ldr	r2, [sp, #96]	; 0x60
   35070:	lsr	r3, r4, r3
   35074:	and	r4, r4, ip
   35078:	orr	r2, r3, r1, lsl r2
   3507c:	ldr	r3, [sp, #108]	; 0x6c
   35080:	lsrpl	r2, r1, r0
   35084:	add	r2, r2, #48	; 0x30
   35088:	strb	r2, [r3, r6]
   3508c:	umull	r8, r2, r8, lr
   35090:	add	r3, r9, r9, lsl #2
   35094:	add	r6, r6, #1
   35098:	add	r9, r2, r3, lsl #1
   3509c:	umull	r7, r2, r7, lr
   350a0:	add	r3, sl, sl, lsl #2
   350a4:	add	sl, r2, r3, lsl #1
   350a8:	ldr	r2, [sp, #104]	; 0x68
   350ac:	and	r2, r1, r2
   350b0:	subs	r1, r4, r7
   350b4:	sbcs	r1, r2, sl
   350b8:	bcs	35054 <flatcc_json_printer_fmt_float@@Base+0x55c>
   350bc:	ldr	r1, [sp, #56]	; 0x38
   350c0:	mov	r0, #0
   350c4:	str	r7, [fp, #-56]	; 0xffffffc8
   350c8:	str	sl, [fp, #-52]	; 0xffffffcc
   350cc:	str	r0, [sp, #4]
   350d0:	str	r1, [sp]
   350d4:	ldr	r0, [sp, #68]	; 0x44
   350d8:	str	r0, [sp, #8]
   350dc:	ldr	r0, [sp, #72]	; 0x48
   350e0:	str	r0, [sp, #12]
   350e4:	ldr	r0, [sp, #76]	; 0x4c
   350e8:	str	r0, [sp, #16]
   350ec:	ldr	r0, [sp, #80]	; 0x50
   350f0:	str	r0, [sp, #20]
   350f4:	str	r2, [sp, #92]	; 0x5c
   350f8:	sub	r0, fp, #72	; 0x48
   350fc:	ldr	r2, [sp, #60]	; 0x3c
   35100:	ldr	r3, [sp, #64]	; 0x40
   35104:	bl	4046c <flatcc_json_printer_clear@@Base+0x1e8>
   35108:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3510c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   35110:	stm	sp, {r7, sl}
   35114:	str	r4, [sp, #8]
   35118:	add	r3, sp, #20
   3511c:	ldr	r2, [sp, #92]	; 0x5c
   35120:	str	r2, [sp, #12]
   35124:	ldr	r2, [sp, #48]	; 0x30
   35128:	str	r2, [sp, #16]
   3512c:	ldr	r2, [sp, #52]	; 0x34
   35130:	stm	r3, {r2, r8, r9}
   35134:	umull	r2, r3, r0, r8
   35138:	mla	r0, r0, r9, r3
   3513c:	mla	r3, r1, r8, r0
   35140:	ldr	r0, [sp, #108]	; 0x6c
   35144:	mov	r1, r6
   35148:	bl	404c4 <flatcc_json_printer_clear@@Base+0x240>
   3514c:	ldr	r2, [sp, #84]	; 0x54
   35150:	cmp	r0, #0
   35154:	beq	351c4 <flatcc_json_printer_fmt_float@@Base+0x6cc>
   35158:	ldr	r0, [sp, #40]	; 0x28
   3515c:	cmp	r6, #3
   35160:	ldr	r1, [sp, #108]	; 0x6c
   35164:	ldrsh	r4, [r0, #26]
   35168:	sub	r0, r6, #1
   3516c:	movwlt	r0, #1
   35170:	sub	r7, r5, r4
   35174:	rsb	r2, r7, #0
   35178:	cmp	r0, r2
   3517c:	movge	r0, r2
   35180:	cmn	r7, #1
   35184:	ble	351ec <flatcc_json_printer_fmt_float@@Base+0x6f4>
   35188:	cmp	r7, #3
   3518c:	bcs	352c4 <flatcc_json_printer_fmt_float@@Base+0x7cc>
   35190:	cmp	r7, #0
   35194:	beq	352e4 <flatcc_json_printer_fmt_float@@Base+0x7ec>
   35198:	add	r0, r1, r6
   3519c:	mov	r1, #48	; 0x30
   351a0:	mov	r2, r7
   351a4:	bl	14eec <memset@plt>
   351a8:	ldr	r1, [sp, #108]	; 0x6c
   351ac:	ldr	r2, [sp, #88]	; 0x58
   351b0:	sub	r7, r7, #1
   351b4:	add	r6, r6, #1
   351b8:	cmp	r7, #0
   351bc:	bgt	351b0 <flatcc_json_printer_fmt_float@@Base+0x6b8>
   351c0:	b	352e8 <flatcc_json_printer_fmt_float@@Base+0x7f0>
   351c4:	ldr	r4, [sp, #108]	; 0x6c
   351c8:	ldr	r3, [sp, #36]	; 0x24
   351cc:	movw	r1, #27045	; 0x69a5
   351d0:	movt	r1, #4
   351d4:	mov	r0, r4
   351d8:	bl	14f28 <sprintf@plt>
   351dc:	ldr	r1, [sp, #88]	; 0x58
   351e0:	sub	r1, r4, r1
   351e4:	add	r0, r1, r0
   351e8:	b	352f4 <flatcc_json_printer_fmt_float@@Base+0x7fc>
   351ec:	cmp	r6, r2
   351f0:	bgt	35268 <flatcc_json_printer_fmt_float@@Base+0x770>
   351f4:	add	r8, r7, r6
   351f8:	cmn	r8, #2
   351fc:	blt	35268 <flatcc_json_printer_fmt_float@@Base+0x770>
   35200:	add	r7, r1, #2
   35204:	rsb	r0, r6, #0
   35208:	add	r2, r7, r2
   3520c:	add	r0, r2, r0
   35210:	mov	r2, r6
   35214:	bl	14e44 <memmove@plt>
   35218:	ldr	r1, [sp, #108]	; 0x6c
   3521c:	movw	r0, #11824	; 0x2e30
   35220:	rsb	r8, r8, #2
   35224:	cmp	r8, #3
   35228:	strh	r0, [r1]
   3522c:	mov	r0, #2
   35230:	blt	35260 <flatcc_json_printer_fmt_float@@Base+0x768>
   35234:	sub	r0, r4, r5
   35238:	mov	r1, #48	; 0x30
   3523c:	sub	r2, r0, r6
   35240:	mov	r0, r7
   35244:	bl	14eec <memset@plt>
   35248:	add	r0, r5, r6
   3524c:	sub	r0, r0, r4
   35250:	adds	r0, r0, #1
   35254:	bcc	35250 <flatcc_json_printer_fmt_float@@Base+0x758>
   35258:	ldr	r1, [sp, #108]	; 0x6c
   3525c:	mov	r0, r8
   35260:	add	r6, r0, r6
   35264:	b	352e4 <flatcc_json_printer_fmt_float@@Base+0x7ec>
   35268:	cmp	r6, #2
   3526c:	blt	352c4 <flatcc_json_printer_fmt_float@@Base+0x7cc>
   35270:	cmp	r0, #1
   35274:	blt	35298 <flatcc_json_printer_fmt_float@@Base+0x7a0>
   35278:	add	r4, r1, r6
   3527c:	mov	r3, #0
   35280:	sub	r2, r4, #1
   35284:	ldrb	r5, [r2, -r3]
   35288:	strb	r5, [r4, -r3]
   3528c:	add	r3, r3, #1
   35290:	cmp	r3, r0
   35294:	blt	35284 <flatcc_json_printer_fmt_float@@Base+0x78c>
   35298:	sub	r3, r6, r0
   3529c:	mov	r2, #46	; 0x2e
   352a0:	adds	r0, r0, r7
   352a4:	strb	r2, [r1, r3]
   352a8:	add	r3, r6, #1
   352ac:	beq	35304 <flatcc_json_printer_fmt_float@@Base+0x80c>
   352b0:	mov	r2, #101	; 0x65
   352b4:	add	r4, r6, #2
   352b8:	strb	r2, [r1, r3]
   352bc:	add	r1, r1, r4
   352c0:	b	352d8 <flatcc_json_printer_fmt_float@@Base+0x7e0>
   352c4:	mov	r0, #101	; 0x65
   352c8:	add	r4, r6, #1
   352cc:	strb	r0, [r1, r6]
   352d0:	add	r1, r1, r4
   352d4:	mov	r0, r7
   352d8:	bl	402c8 <flatcc_json_printer_clear@@Base+0x44>
   352dc:	ldr	r1, [sp, #108]	; 0x6c
   352e0:	add	r6, r0, r4
   352e4:	ldr	r2, [sp, #88]	; 0x58
   352e8:	mov	r0, #0
   352ec:	strb	r0, [r1, r6]!
   352f0:	sub	r0, r1, r2
   352f4:	sub	sp, fp, #40	; 0x28
   352f8:	vpop	{d8}
   352fc:	add	sp, sp, #4
   35300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35304:	mov	r6, r3
   35308:	b	352e4 <flatcc_json_printer_fmt_float@@Base+0x7ec>
   3530c:	movw	r0, #26900	; 0x6914
   35310:	movw	r1, #26904	; 0x6918
   35314:	movw	r3, #26991	; 0x696f
   35318:	mov	r2, #189	; 0xbd
   3531c:	movt	r0, #4
   35320:	movt	r1, #4
   35324:	movt	r3, #4
   35328:	bl	14f40 <__assert_fail@plt>
   3532c:	movw	r0, #27051	; 0x69ab
   35330:	movw	r1, #26904	; 0x6918
   35334:	movw	r3, #27088	; 0x69d0
   35338:	mov	r2, #138	; 0x8a
   3533c:	movt	r0, #4
   35340:	movt	r1, #4
   35344:	movt	r3, #4
   35348:	bl	14f40 <__assert_fail@plt>

0003534c <flatcc_json_printer_fmt_double@@Base>:
   3534c:	b	34b00 <flatcc_json_printer_fmt_float@@Base+0x8>

00035350 <flatcc_json_printer_fmt_bool@@Base>:
   35350:	cmp	r1, #0
   35354:	movwne	r1, #29300	; 0x7274
   35358:	movtne	r1, #25973	; 0x6575
   3535c:	strne	r1, [r0]
   35360:	movne	r0, #4
   35364:	bxne	lr
   35368:	mov	r1, #101	; 0x65
   3536c:	strb	r1, [r0, #4]
   35370:	movw	r1, #24934	; 0x6166
   35374:	movt	r1, #29548	; 0x736c
   35378:	str	r1, [r0]
   3537c:	mov	r0, #5
   35380:	bx	lr

00035384 <flatcc_json_printer_string@@Base>:
   35384:	b	35388 <flatcc_json_printer_string@@Base+0x4>
   35388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3538c:	add	fp, sp, #28
   35390:	sub	sp, sp, #12
   35394:	mov	r5, r0
   35398:	mov	r4, r0
   3539c:	mov	r6, r1
   353a0:	mov	r3, r2
   353a4:	ldr	r0, [r5, #20]!
   353a8:	str	r5, [sp, #4]
   353ac:	add	r1, r0, #1
   353b0:	str	r1, [r5]
   353b4:	mov	r1, #34	; 0x22
   353b8:	strb	r1, [r0]
   353bc:	ldrb	sl, [r6]
   353c0:	mov	r8, r6
   353c4:	cmp	sl, #32
   353c8:	bcc	353e8 <flatcc_json_printer_string@@Base+0x64>
   353cc:	uxtb	r0, sl
   353d0:	cmp	r0, #34	; 0x22
   353d4:	cmpne	r0, #92	; 0x5c
   353d8:	beq	353e8 <flatcc_json_printer_string@@Base+0x64>
   353dc:	ldrb	sl, [r8, #1]!
   353e0:	cmp	sl, #31
   353e4:	bhi	353cc <flatcc_json_printer_string@@Base+0x48>
   353e8:	ldr	r0, [r4, #20]
   353ec:	ldr	r1, [r4, #16]
   353f0:	sub	r9, r8, r6
   353f4:	add	r2, r0, r9
   353f8:	cmp	r2, r1
   353fc:	bcs	3541c <flatcc_json_printer_string@@Base+0x98>
   35400:	mov	r1, r6
   35404:	mov	r2, r9
   35408:	mov	r6, r3
   3540c:	bl	14e5c <memcpy@plt>
   35410:	mov	r2, r6
   35414:	mov	r7, r9
   35418:	b	354a8 <flatcc_json_printer_string@@Base+0x124>
   3541c:	cmp	r0, r1
   35420:	str	r3, [sp, #8]
   35424:	bcc	35440 <flatcc_json_printer_string@@Base+0xbc>
   35428:	ldr	r2, [r4, #44]	; 0x2c
   3542c:	mov	r0, r4
   35430:	mov	r1, #0
   35434:	blx	r2
   35438:	ldr	r1, [r4, #16]
   3543c:	ldr	r0, [r4, #20]
   35440:	sub	r5, r1, r0
   35444:	mov	r7, r9
   35448:	cmp	r5, r9
   3544c:	bcs	35494 <flatcc_json_printer_string@@Base+0x110>
   35450:	mov	r1, r6
   35454:	mov	r2, r5
   35458:	bl	14e5c <memcpy@plt>
   3545c:	ldr	r0, [r4, #20]
   35460:	ldr	r2, [r4, #44]	; 0x2c
   35464:	mov	r1, #0
   35468:	add	r0, r0, r5
   3546c:	str	r0, [r4, #20]
   35470:	mov	r0, r4
   35474:	blx	r2
   35478:	ldr	r1, [r4, #16]
   3547c:	ldr	r0, [r4, #20]
   35480:	sub	r7, r7, r5
   35484:	add	r6, r6, r5
   35488:	sub	r5, r1, r0
   3548c:	cmp	r7, r5
   35490:	bhi	35450 <flatcc_json_printer_string@@Base+0xcc>
   35494:	ldr	r5, [sp, #4]
   35498:	mov	r1, r6
   3549c:	mov	r2, r7
   354a0:	bl	14e5c <memcpy@plt>
   354a4:	ldr	r2, [sp, #8]
   354a8:	ldr	r0, [r5]
   354ac:	add	r1, r0, r7
   354b0:	add	r0, r1, #1
   354b4:	str	r0, [r5]
   354b8:	subs	r0, r2, r9
   354bc:	beq	35620 <flatcc_json_printer_string@@Base+0x29c>
   354c0:	mov	r2, #92	; 0x5c
   354c4:	strb	r2, [r1]
   354c8:	mvn	r1, #7
   354cc:	uxtab	r2, r1, sl
   354d0:	uxtb	r1, sl
   354d4:	cmp	r2, #5
   354d8:	bhi	35510 <flatcc_json_printer_string@@Base+0x18c>
   354dc:	add	r3, pc, #0
   354e0:	ldr	pc, [r3, r2, lsl #2]
   354e4:	strdeq	r5, [r3], -ip
   354e8:			; <UNDEFINED> instruction: 0x000355b0
   354ec:	andeq	r5, r3, r4, asr #11
   354f0:	andeq	r5, r3, r4, lsr r5
   354f4:	ldrdeq	r5, [r3], -r8
   354f8:	andeq	r5, r3, ip, ror #11
   354fc:	ldr	r1, [r5]
   35500:	add	r2, r1, #1
   35504:	str	r2, [r5]
   35508:	mov	r2, #98	; 0x62
   3550c:	b	35610 <flatcc_json_printer_string@@Base+0x28c>
   35510:	cmp	r1, #92	; 0x5c
   35514:	beq	35600 <flatcc_json_printer_string@@Base+0x27c>
   35518:	cmp	r1, #34	; 0x22
   3551c:	bne	35534 <flatcc_json_printer_string@@Base+0x1b0>
   35520:	ldr	r1, [r5]
   35524:	add	r2, r1, #1
   35528:	str	r2, [r5]
   3552c:	mov	r2, #34	; 0x22
   35530:	b	35610 <flatcc_json_printer_string@@Base+0x28c>
   35534:	ldr	r2, [r5]
   35538:	mov	r7, #48	; 0x30
   3553c:	cmp	r1, #160	; 0xa0
   35540:	add	r3, r2, #1
   35544:	str	r3, [r5]
   35548:	mov	r3, #117	; 0x75
   3554c:	strb	r3, [r2]
   35550:	ldr	r2, [r5]
   35554:	add	r3, r2, #1
   35558:	str	r3, [r5]
   3555c:	strb	r7, [r2]
   35560:	ldr	r2, [r5]
   35564:	add	r3, r2, #1
   35568:	str	r3, [r5]
   3556c:	strb	r7, [r2]
   35570:	ldr	r2, [r5]
   35574:	add	r3, r2, #1
   35578:	str	r3, [r5]
   3557c:	mov	r3, #87	; 0x57
   35580:	movwcc	r3, #48	; 0x30
   35584:	add	r1, r3, r1, lsr #4
   35588:	mov	r3, #87	; 0x57
   3558c:	strb	r1, [r2]
   35590:	ldr	r1, [r5]
   35594:	add	r2, r1, #1
   35598:	str	r2, [r5]
   3559c:	and	r2, sl, #15
   355a0:	cmp	r2, #10
   355a4:	movwcc	r3, #48	; 0x30
   355a8:	add	r2, r3, r2
   355ac:	b	35610 <flatcc_json_printer_string@@Base+0x28c>
   355b0:	ldr	r1, [r5]
   355b4:	add	r2, r1, #1
   355b8:	str	r2, [r5]
   355bc:	mov	r2, #116	; 0x74
   355c0:	b	35610 <flatcc_json_printer_string@@Base+0x28c>
   355c4:	ldr	r1, [r5]
   355c8:	add	r2, r1, #1
   355cc:	str	r2, [r5]
   355d0:	mov	r2, #110	; 0x6e
   355d4:	b	35610 <flatcc_json_printer_string@@Base+0x28c>
   355d8:	ldr	r1, [r5]
   355dc:	add	r2, r1, #1
   355e0:	str	r2, [r5]
   355e4:	mov	r2, #102	; 0x66
   355e8:	b	35610 <flatcc_json_printer_string@@Base+0x28c>
   355ec:	ldr	r1, [r5]
   355f0:	add	r2, r1, #1
   355f4:	str	r2, [r5]
   355f8:	mov	r2, #114	; 0x72
   355fc:	b	35610 <flatcc_json_printer_string@@Base+0x28c>
   35600:	ldr	r1, [r5]
   35604:	add	r2, r1, #1
   35608:	str	r2, [r5]
   3560c:	mov	r2, #92	; 0x5c
   35610:	strb	r2, [r1]
   35614:	sub	r3, r0, #1
   35618:	add	r6, r8, #1
   3561c:	b	353bc <flatcc_json_printer_string@@Base+0x38>
   35620:	mov	r0, #34	; 0x22
   35624:	strb	r0, [r1]
   35628:	sub	sp, fp, #28
   3562c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00035630 <flatcc_json_printer_write@@Base>:
   35630:	push	{r4, r5, r6, r7, fp, lr}
   35634:	add	fp, sp, #16
   35638:	mov	r6, r1
   3563c:	mov	r5, r0
   35640:	ldr	r1, [r0, #16]
   35644:	ldr	r0, [r0, #20]
   35648:	mov	r4, r2
   3564c:	add	r2, r0, r2
   35650:	cmp	r2, r1
   35654:	bcc	356c8 <flatcc_json_printer_write@@Base+0x98>
   35658:	cmp	r0, r1
   3565c:	bcc	35678 <flatcc_json_printer_write@@Base+0x48>
   35660:	ldr	r2, [r5, #44]	; 0x2c
   35664:	mov	r0, r5
   35668:	mov	r1, #0
   3566c:	blx	r2
   35670:	ldr	r1, [r5, #16]
   35674:	ldr	r0, [r5, #20]
   35678:	sub	r7, r1, r0
   3567c:	cmp	r7, r4
   35680:	bcs	356c8 <flatcc_json_printer_write@@Base+0x98>
   35684:	mov	r1, r6
   35688:	mov	r2, r7
   3568c:	bl	14e5c <memcpy@plt>
   35690:	ldr	r0, [r5, #20]
   35694:	ldr	r2, [r5, #44]	; 0x2c
   35698:	mov	r1, #0
   3569c:	add	r0, r0, r7
   356a0:	str	r0, [r5, #20]
   356a4:	mov	r0, r5
   356a8:	blx	r2
   356ac:	ldr	r1, [r5, #16]
   356b0:	ldr	r0, [r5, #20]
   356b4:	sub	r4, r4, r7
   356b8:	add	r6, r6, r7
   356bc:	sub	r7, r1, r0
   356c0:	cmp	r4, r7
   356c4:	bhi	35684 <flatcc_json_printer_write@@Base+0x54>
   356c8:	mov	r1, r6
   356cc:	mov	r2, r4
   356d0:	bl	14e5c <memcpy@plt>
   356d4:	ldr	r0, [r5, #20]
   356d8:	add	r0, r0, r4
   356dc:	str	r0, [r5, #20]
   356e0:	pop	{r4, r5, r6, r7, fp, pc}

000356e4 <flatcc_json_printer_nl@@Base>:
   356e4:	ldr	r1, [r0, #20]
   356e8:	add	r2, r1, #1
   356ec:	str	r2, [r0, #20]
   356f0:	mov	r2, #10
   356f4:	strb	r2, [r1]
   356f8:	ldr	r1, [r0, #16]
   356fc:	ldr	r2, [r0, #20]
   35700:	cmp	r2, r1
   35704:	bxcc	lr
   35708:	ldr	r2, [r0, #44]	; 0x2c
   3570c:	mov	r1, #0
   35710:	bx	r2

00035714 <flatcc_json_printer_char@@Base>:
   35714:	ldr	r2, [r0, #20]
   35718:	add	r3, r2, #1
   3571c:	str	r3, [r0, #20]
   35720:	strb	r1, [r2]
   35724:	bx	lr

00035728 <flatcc_json_printer_indent@@Base>:
   35728:	push	{r4, r5, r6, sl, fp, lr}
   3572c:	add	fp, sp, #16
   35730:	mov	r4, r0
   35734:	ldr	r1, [r0, #16]
   35738:	ldr	r0, [r0, #20]
   3573c:	ldrb	r2, [r4, #25]
   35740:	ldr	r3, [r4, #32]
   35744:	mla	r6, r3, r2, r0
   35748:	mul	r5, r3, r2
   3574c:	cmp	r6, r1
   35750:	bls	357c0 <flatcc_json_printer_indent@@Base+0x98>
   35754:	cmp	r0, r1
   35758:	bcc	35774 <flatcc_json_printer_indent@@Base+0x4c>
   3575c:	ldr	r2, [r4, #44]	; 0x2c
   35760:	mov	r0, r4
   35764:	mov	r1, #0
   35768:	blx	r2
   3576c:	ldr	r1, [r4, #16]
   35770:	ldr	r0, [r4, #20]
   35774:	sub	r6, r1, r0
   35778:	cmp	r6, r5
   3577c:	bcs	357c0 <flatcc_json_printer_indent@@Base+0x98>
   35780:	mov	r1, #32
   35784:	mov	r2, r6
   35788:	bl	14eec <memset@plt>
   3578c:	ldr	r0, [r4, #20]
   35790:	ldr	r2, [r4, #44]	; 0x2c
   35794:	mov	r1, #0
   35798:	add	r0, r0, r6
   3579c:	str	r0, [r4, #20]
   357a0:	mov	r0, r4
   357a4:	blx	r2
   357a8:	ldr	r1, [r4, #16]
   357ac:	ldr	r0, [r4, #20]
   357b0:	sub	r5, r5, r6
   357b4:	sub	r6, r1, r0
   357b8:	cmp	r5, r6
   357bc:	bhi	35780 <flatcc_json_printer_indent@@Base+0x58>
   357c0:	mov	r1, #32
   357c4:	mov	r2, r5
   357c8:	bl	14eec <memset@plt>
   357cc:	ldr	r0, [r4, #20]
   357d0:	add	r0, r0, r5
   357d4:	str	r0, [r4, #20]
   357d8:	pop	{r4, r5, r6, sl, fp, pc}

000357dc <flatcc_json_printer_add_level@@Base>:
   357dc:	ldr	r2, [r0, #32]
   357e0:	add	r1, r2, r1
   357e4:	str	r1, [r0, #32]
   357e8:	bx	lr

000357ec <flatcc_json_printer_get_level@@Base>:
   357ec:	ldr	r0, [r0, #32]
   357f0:	bx	lr

000357f4 <flatcc_json_printer_uint8@@Base>:
   357f4:	push	{r4, sl, fp, lr}
   357f8:	add	fp, sp, #8
   357fc:	mov	r2, r1
   35800:	ldr	r1, [r0, #20]
   35804:	mov	r4, r0
   35808:	mov	r0, r2
   3580c:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   35810:	ldr	r1, [r4, #20]
   35814:	add	r0, r1, r0
   35818:	str	r0, [r4, #20]
   3581c:	pop	{r4, sl, fp, pc}
   35820:	mov	r2, #0
   35824:	cmp	r0, #100	; 0x64
   35828:	bcc	35874 <flatcc_json_printer_uint8@@Base+0x80>
   3582c:	strb	r2, [r1, #3]
   35830:	movw	r2, #34079	; 0x851f
   35834:	movt	r2, #20971	; 0x51eb
   35838:	umull	r2, r3, r0, r2
   3583c:	mov	r2, #48	; 0x30
   35840:	orr	r2, r2, r3, lsr #5
   35844:	strb	r2, [r1]
   35848:	lsr	r2, r3, #5
   3584c:	mov	r3, #100	; 0x64
   35850:	mls	r0, r2, r3, r0
   35854:	movw	r2, #27224	; 0x6a58
   35858:	movt	r2, #4
   3585c:	uxtb	r0, r0
   35860:	add	r0, r2, r0, lsl #1
   35864:	ldrh	r0, [r0]
   35868:	strh	r0, [r1, #1]
   3586c:	mov	r0, #3
   35870:	bx	lr
   35874:	cmp	r0, #10
   35878:	addcc	r0, r0, #48	; 0x30
   3587c:	strbcc	r2, [r1, #1]
   35880:	strbcc	r0, [r1]
   35884:	movcc	r0, #1
   35888:	bxcc	lr
   3588c:	strb	r2, [r1, #2]
   35890:	movw	r2, #34079	; 0x851f
   35894:	movt	r2, #20971	; 0x51eb
   35898:	umull	r2, r3, r0, r2
   3589c:	lsr	r2, r3, #5
   358a0:	mov	r3, #100	; 0x64
   358a4:	mls	r0, r2, r3, r0
   358a8:	movw	r2, #27224	; 0x6a58
   358ac:	movt	r2, #4
   358b0:	add	r0, r2, r0, lsl #1
   358b4:	ldrh	r0, [r0]
   358b8:	strh	r0, [r1]
   358bc:	mov	r0, #2
   358c0:	bx	lr

000358c4 <flatcc_json_printer_uint16@@Base>:
   358c4:	push	{r4, sl, fp, lr}
   358c8:	add	fp, sp, #8
   358cc:	mov	r2, r1
   358d0:	ldr	r1, [r0, #20]
   358d4:	mov	r4, r0
   358d8:	mov	r0, r2
   358dc:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   358e0:	ldr	r1, [r4, #20]
   358e4:	add	r0, r1, r0
   358e8:	str	r0, [r4, #20]
   358ec:	pop	{r4, sl, fp, pc}
   358f0:	push	{fp, lr}
   358f4:	mov	fp, sp
   358f8:	mov	lr, r0
   358fc:	cmp	r0, #1000	; 0x3e8
   35900:	bcc	35918 <flatcc_json_printer_uint16@@Base+0x54>
   35904:	movw	r3, #9999	; 0x270f
   35908:	mov	r0, #4
   3590c:	cmp	lr, r3
   35910:	movwhi	r0, #5
   35914:	b	3593c <flatcc_json_printer_uint16@@Base+0x78>
   35918:	cmp	lr, #100	; 0x64
   3591c:	bcc	35930 <flatcc_json_printer_uint16@@Base+0x6c>
   35920:	mov	r0, #0
   35924:	strb	r0, [r1, #3]!
   35928:	mov	r0, #3
   3592c:	b	359e0 <flatcc_json_printer_uint16@@Base+0x11c>
   35930:	cmp	lr, #9
   35934:	mov	r0, #1
   35938:	movwhi	r0, #2
   3593c:	mov	r3, #0
   35940:	tst	r0, #1
   35944:	strb	r3, [r1, r0]!
   35948:	bne	35990 <flatcc_json_printer_uint16@@Base+0xcc>
   3594c:	cmp	r0, #2
   35950:	beq	35a20 <flatcc_json_printer_uint16@@Base+0x15c>
   35954:	cmp	r0, #4
   35958:	popne	{fp, pc}
   3595c:	movw	r2, #34079	; 0x851f
   35960:	movt	r2, #20971	; 0x51eb
   35964:	umull	r2, r3, lr, r2
   35968:	mov	r2, #100	; 0x64
   3596c:	lsr	r3, r3, #5
   35970:	mls	r2, r3, r2, lr
   35974:	uxth	ip, r2
   35978:	movw	r2, #27224	; 0x6a58
   3597c:	movt	r2, #4
   35980:	add	r2, r2, ip, lsl #1
   35984:	ldrh	r2, [r2]
   35988:	strh	r2, [r1, #-2]!
   3598c:	b	35a24 <flatcc_json_printer_uint16@@Base+0x160>
   35990:	cmp	r0, #1
   35994:	beq	35a58 <flatcc_json_printer_uint16@@Base+0x194>
   35998:	cmp	r0, #3
   3599c:	beq	359e0 <flatcc_json_printer_uint16@@Base+0x11c>
   359a0:	cmp	r0, #5
   359a4:	bne	35a54 <flatcc_json_printer_uint16@@Base+0x190>
   359a8:	movw	r0, #34079	; 0x851f
   359ac:	movw	r2, #27224	; 0x6a58
   359b0:	movt	r0, #20971	; 0x51eb
   359b4:	movt	r2, #4
   359b8:	umull	r0, r3, lr, r0
   359bc:	mov	r0, #100	; 0x64
   359c0:	lsr	r3, r3, #5
   359c4:	mls	r0, r3, r0, lr
   359c8:	mov	lr, r3
   359cc:	uxth	r0, r0
   359d0:	add	r0, r2, r0, lsl #1
   359d4:	ldrh	r0, [r0]
   359d8:	strh	r0, [r1, #-2]!
   359dc:	mov	r0, #5
   359e0:	movw	r3, #34079	; 0x851f
   359e4:	uxth	ip, lr
   359e8:	movt	r3, #20971	; 0x51eb
   359ec:	umull	r3, r2, ip, r3
   359f0:	lsr	r3, r2, #5
   359f4:	mov	r2, #100	; 0x64
   359f8:	mls	r2, r3, r2, lr
   359fc:	uxth	ip, r2
   35a00:	movw	r2, #27224	; 0x6a58
   35a04:	movt	r2, #4
   35a08:	add	r2, r2, ip, lsl #1
   35a0c:	ldrh	r2, [r2]
   35a10:	strh	r2, [r1, #-2]!
   35a14:	add	r2, r3, #48	; 0x30
   35a18:	strb	r2, [r1, #-1]
   35a1c:	pop	{fp, pc}
   35a20:	mov	r3, lr
   35a24:	uxth	ip, r3
   35a28:	movw	r3, #34079	; 0x851f
   35a2c:	movt	r3, #20971	; 0x51eb
   35a30:	umull	r3, r2, ip, r3
   35a34:	mov	r3, #100	; 0x64
   35a38:	lsr	r2, r2, #5
   35a3c:	mls	r2, r2, r3, ip
   35a40:	movw	r3, #27224	; 0x6a58
   35a44:	movt	r3, #4
   35a48:	add	r2, r3, r2, lsl #1
   35a4c:	ldrh	r2, [r2]
   35a50:	strh	r2, [r1, #-2]
   35a54:	pop	{fp, pc}
   35a58:	mov	r3, lr
   35a5c:	b	35a14 <flatcc_json_printer_uint16@@Base+0x150>

00035a60 <flatcc_json_printer_uint32@@Base>:
   35a60:	push	{r4, sl, fp, lr}
   35a64:	add	fp, sp, #8
   35a68:	mov	r2, r1
   35a6c:	ldr	r1, [r0, #20]
   35a70:	mov	r4, r0
   35a74:	mov	r0, r2
   35a78:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   35a7c:	ldr	r1, [r4, #20]
   35a80:	add	r0, r1, r0
   35a84:	str	r0, [r4, #20]
   35a88:	pop	{r4, sl, fp, pc}
   35a8c:	push	{fp, lr}
   35a90:	mov	fp, sp
   35a94:	mov	lr, r0
   35a98:	movw	r0, #10000	; 0x2710
   35a9c:	cmp	lr, r0
   35aa0:	bcc	35b04 <flatcc_json_printer_uint32@@Base+0xa4>
   35aa4:	movw	r0, #38528	; 0x9680
   35aa8:	movt	r0, #152	; 0x98
   35aac:	cmp	lr, r0
   35ab0:	bcc	35b20 <flatcc_json_printer_uint32@@Base+0xc0>
   35ab4:	movw	r0, #51712	; 0xca00
   35ab8:	movt	r0, #15258	; 0x3b9a
   35abc:	cmp	lr, r0
   35ac0:	bcc	35b50 <flatcc_json_printer_uint32@@Base+0xf0>
   35ac4:	movw	r0, #34079	; 0x851f
   35ac8:	movw	r2, #27224	; 0x6a58
   35acc:	movt	r0, #20971	; 0x51eb
   35ad0:	movt	r2, #4
   35ad4:	umull	r0, r3, lr, r0
   35ad8:	mov	r0, #100	; 0x64
   35adc:	lsr	r3, r3, #5
   35ae0:	mls	r0, r3, r0, lr
   35ae4:	mov	lr, r3
   35ae8:	add	r0, r2, r0, lsl #1
   35aec:	ldrh	r0, [r0]
   35af0:	strh	r0, [r1, #8]!
   35af4:	mov	r0, #0
   35af8:	strb	r0, [r1, #2]
   35afc:	mov	r0, #10
   35b00:	b	35bbc <flatcc_json_printer_uint32@@Base+0x15c>
   35b04:	cmp	lr, #100	; 0x64
   35b08:	bcc	35b40 <flatcc_json_printer_uint32@@Base+0xe0>
   35b0c:	lsr	r3, lr, #3
   35b10:	mov	r0, #3
   35b14:	cmp	r3, #124	; 0x7c
   35b18:	movwhi	r0, #4
   35b1c:	b	35b7c <flatcc_json_printer_uint32@@Base+0x11c>
   35b20:	movw	r0, #16960	; 0x4240
   35b24:	movt	r0, #15
   35b28:	cmp	lr, r0
   35b2c:	bcc	35b68 <flatcc_json_printer_uint32@@Base+0x108>
   35b30:	mov	r0, #0
   35b34:	strb	r0, [r1, #7]!
   35b38:	mov	r0, #7
   35b3c:	b	35ce8 <flatcc_json_printer_uint32@@Base+0x288>
   35b40:	cmp	lr, #9
   35b44:	mov	r0, #1
   35b48:	movwhi	r0, #2
   35b4c:	b	35b7c <flatcc_json_printer_uint32@@Base+0x11c>
   35b50:	movw	r3, #57599	; 0xe0ff
   35b54:	mov	r0, #8
   35b58:	movt	r3, #1525	; 0x5f5
   35b5c:	cmp	lr, r3
   35b60:	movwhi	r0, #9
   35b64:	b	35b7c <flatcc_json_printer_uint32@@Base+0x11c>
   35b68:	movw	r3, #34463	; 0x869f
   35b6c:	mov	r0, #5
   35b70:	movt	r3, #1
   35b74:	cmp	lr, r3
   35b78:	movwhi	r0, #6
   35b7c:	mov	r3, #0
   35b80:	tst	r0, #1
   35b84:	strb	r3, [r1, r0]!
   35b88:	bne	35c7c <flatcc_json_printer_uint32@@Base+0x21c>
   35b8c:	sub	r3, r0, #2
   35b90:	cmp	r3, #6
   35b94:	bhi	35d80 <flatcc_json_printer_uint32@@Base+0x320>
   35b98:	add	r2, pc, #0
   35b9c:	ldr	pc, [r2, r3, lsl #2]
   35ba0:	andeq	r5, r3, ip, asr #24
   35ba4:	andeq	r5, r3, r0, lsl #27
   35ba8:	andeq	r5, r3, ip, lsl ip
   35bac:	andeq	r5, r3, r0, lsl #27
   35bb0:	andeq	r5, r3, ip, ror #23
   35bb4:	andeq	r5, r3, r0, lsl #27
   35bb8:			; <UNDEFINED> instruction: 0x00035bbc
   35bbc:	movw	r2, #34079	; 0x851f
   35bc0:	movt	r2, #20971	; 0x51eb
   35bc4:	umull	r2, r3, lr, r2
   35bc8:	lsr	r2, r3, #5
   35bcc:	mov	r3, #100	; 0x64
   35bd0:	mls	ip, r2, r3, lr
   35bd4:	movw	r3, #27224	; 0x6a58
   35bd8:	mov	lr, r2
   35bdc:	movt	r3, #4
   35be0:	add	r3, r3, ip, lsl #1
   35be4:	ldrh	r3, [r3]
   35be8:	strh	r3, [r1, #-2]!
   35bec:	movw	r2, #34079	; 0x851f
   35bf0:	movt	r2, #20971	; 0x51eb
   35bf4:	umull	r2, r3, lr, r2
   35bf8:	lsr	r2, r3, #5
   35bfc:	mov	r3, #100	; 0x64
   35c00:	mls	ip, r2, r3, lr
   35c04:	movw	r3, #27224	; 0x6a58
   35c08:	mov	lr, r2
   35c0c:	movt	r3, #4
   35c10:	add	r3, r3, ip, lsl #1
   35c14:	ldrh	r3, [r3]
   35c18:	strh	r3, [r1, #-2]!
   35c1c:	movw	r2, #34079	; 0x851f
   35c20:	movt	r2, #20971	; 0x51eb
   35c24:	umull	r2, r3, lr, r2
   35c28:	lsr	r2, r3, #5
   35c2c:	mov	r3, #100	; 0x64
   35c30:	mls	ip, r2, r3, lr
   35c34:	movw	r3, #27224	; 0x6a58
   35c38:	mov	lr, r2
   35c3c:	movt	r3, #4
   35c40:	add	r3, r3, ip, lsl #1
   35c44:	ldrh	r3, [r3]
   35c48:	strh	r3, [r1, #-2]!
   35c4c:	movw	r2, #34079	; 0x851f
   35c50:	movt	r2, #20971	; 0x51eb
   35c54:	umull	r2, r3, lr, r2
   35c58:	lsr	r2, r3, #5
   35c5c:	mov	r3, #100	; 0x64
   35c60:	mls	r2, r2, r3, lr
   35c64:	movw	r3, #27224	; 0x6a58
   35c68:	movt	r3, #4
   35c6c:	add	r2, r3, r2, lsl #1
   35c70:	ldrh	r2, [r2]
   35c74:	strh	r2, [r1, #-2]
   35c78:	pop	{fp, pc}
   35c7c:	sub	ip, r0, #1
   35c80:	cmp	ip, #8
   35c84:	bhi	35d80 <flatcc_json_printer_uint32@@Base+0x320>
   35c88:	add	r3, pc, #0
   35c8c:	ldr	pc, [r3, ip, lsl #2]
   35c90:	andeq	r5, r3, r8, ror sp
   35c94:	andeq	r5, r3, r0, lsl #27
   35c98:	andeq	r5, r3, r8, asr #26
   35c9c:	andeq	r5, r3, r0, lsl #27
   35ca0:	andeq	r5, r3, r8, lsl sp
   35ca4:	andeq	r5, r3, r0, lsl #27
   35ca8:	andeq	r5, r3, r8, ror #25
   35cac:	andeq	r5, r3, r0, lsl #27
   35cb0:			; <UNDEFINED> instruction: 0x00035cb4
   35cb4:	movw	r0, #34079	; 0x851f
   35cb8:	movw	r2, #27224	; 0x6a58
   35cbc:	movt	r0, #20971	; 0x51eb
   35cc0:	movt	r2, #4
   35cc4:	umull	r0, r3, lr, r0
   35cc8:	mov	r0, #100	; 0x64
   35ccc:	lsr	r3, r3, #5
   35cd0:	mls	r0, r3, r0, lr
   35cd4:	mov	lr, r3
   35cd8:	add	r0, r2, r0, lsl #1
   35cdc:	ldrh	r0, [r0]
   35ce0:	strh	r0, [r1, #-2]!
   35ce4:	mov	r0, #9
   35ce8:	movw	r3, #34079	; 0x851f
   35cec:	movt	r3, #20971	; 0x51eb
   35cf0:	umull	r3, r2, lr, r3
   35cf4:	mov	r3, #100	; 0x64
   35cf8:	lsr	r2, r2, #5
   35cfc:	mls	ip, r2, r3, lr
   35d00:	movw	r3, #27224	; 0x6a58
   35d04:	mov	lr, r2
   35d08:	movt	r3, #4
   35d0c:	add	r3, r3, ip, lsl #1
   35d10:	ldrh	r3, [r3]
   35d14:	strh	r3, [r1, #-2]!
   35d18:	movw	r2, #34079	; 0x851f
   35d1c:	movt	r2, #20971	; 0x51eb
   35d20:	umull	r2, r3, lr, r2
   35d24:	lsr	r2, r3, #5
   35d28:	mov	r3, #100	; 0x64
   35d2c:	mls	ip, r2, r3, lr
   35d30:	movw	r3, #27224	; 0x6a58
   35d34:	mov	lr, r2
   35d38:	movt	r3, #4
   35d3c:	add	r3, r3, ip, lsl #1
   35d40:	ldrh	r3, [r3]
   35d44:	strh	r3, [r1, #-2]!
   35d48:	movw	r2, #34079	; 0x851f
   35d4c:	movt	r2, #20971	; 0x51eb
   35d50:	umull	r2, r3, lr, r2
   35d54:	lsr	r2, r3, #5
   35d58:	mov	r3, #100	; 0x64
   35d5c:	mls	ip, r2, r3, lr
   35d60:	movw	r3, #27224	; 0x6a58
   35d64:	mov	lr, r2
   35d68:	movt	r3, #4
   35d6c:	add	r3, r3, ip, lsl #1
   35d70:	ldrh	r3, [r3]
   35d74:	strh	r3, [r1, #-2]!
   35d78:	add	r2, lr, #48	; 0x30
   35d7c:	strb	r2, [r1, #-1]
   35d80:	pop	{fp, pc}

00035d84 <flatcc_json_printer_uint64@@Base>:
   35d84:	push	{r4, sl, fp, lr}
   35d88:	add	fp, sp, #8
   35d8c:	mov	r1, r3
   35d90:	mov	r3, r2
   35d94:	ldr	r2, [r0, #20]
   35d98:	mov	r4, r0
   35d9c:	mov	r0, r3
   35da0:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   35da4:	ldr	r1, [r4, #20]
   35da8:	add	r0, r1, r0
   35dac:	str	r0, [r4, #20]
   35db0:	pop	{r4, sl, fp, pc}
   35db4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35db8:	add	fp, sp, #28
   35dbc:	sub	sp, sp, #4
   35dc0:	mov	r7, r0
   35dc4:	movw	r0, #51711	; 0xc9ff
   35dc8:	mov	r4, r2
   35dcc:	movt	r0, #15258	; 0x3b9a
   35dd0:	subs	r0, r0, r7
   35dd4:	rscs	r0, r1, #0
   35dd8:	bcc	35df0 <flatcc_json_printer_uint64@@Base+0x6c>
   35ddc:	mov	r0, r7
   35de0:	mov	r1, r4
   35de4:	sub	sp, fp, #28
   35de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35dec:	b	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   35df0:	mov	r6, r1
   35df4:	movw	r1, #40960	; 0xa000
   35df8:	movw	r9, #27224	; 0x6a58
   35dfc:	movw	r0, #2328	; 0x918
   35e00:	movt	r1, #20082	; 0x4e72
   35e04:	movt	r9, #4
   35e08:	subs	r1, r7, r1
   35e0c:	sbcs	r0, r6, r0
   35e10:	bcc	35e70 <flatcc_json_printer_uint64@@Base+0xec>
   35e14:	movw	r1, #0
   35e18:	movw	r0, #34546	; 0x86f2
   35e1c:	movt	r1, #28609	; 0x6fc1
   35e20:	movt	r0, #35	; 0x23
   35e24:	subs	r1, r7, r1
   35e28:	sbcs	r0, r6, r0
   35e2c:	bcc	35ea0 <flatcc_json_printer_uint64@@Base+0x11c>
   35e30:	movw	r1, #0
   35e34:	movw	r0, #46771	; 0xb6b3
   35e38:	movt	r1, #42852	; 0xa764
   35e3c:	movt	r0, #3552	; 0xde0
   35e40:	subs	r1, r7, r1
   35e44:	sbcs	r0, r6, r0
   35e48:	bcc	35ee8 <flatcc_json_printer_uint64@@Base+0x164>
   35e4c:	movw	r1, #65535	; 0xffff
   35e50:	movw	r0, #8964	; 0x2304
   35e54:	mov	r8, #19
   35e58:	movt	r1, #35303	; 0x89e7
   35e5c:	movt	r0, #35527	; 0x8ac7
   35e60:	subs	r1, r1, r7
   35e64:	sbcs	r0, r0, r6
   35e68:	movwcc	r8, #20
   35e6c:	b	35f28 <flatcc_json_printer_uint64@@Base+0x1a4>
   35e70:	movw	r0, #59392	; 0xe800
   35e74:	movt	r0, #18550	; 0x4876
   35e78:	subs	r0, r7, r0
   35e7c:	sbcs	r0, r6, #23
   35e80:	bcc	35ecc <flatcc_json_printer_uint64@@Base+0x148>
   35e84:	movw	r0, #4095	; 0xfff
   35e88:	mov	r8, #12
   35e8c:	movt	r0, #54437	; 0xd4a5
   35e90:	subs	r0, r0, r7
   35e94:	rscs	r0, r6, #232	; 0xe8
   35e98:	movwcc	r8, #13
   35e9c:	b	35f28 <flatcc_json_printer_uint64@@Base+0x1a4>
   35ea0:	movw	r1, #32768	; 0x8000
   35ea4:	movw	r0, #36222	; 0x8d7e
   35ea8:	movt	r1, #42182	; 0xa4c6
   35eac:	movt	r0, #3
   35eb0:	subs	r1, r7, r1
   35eb4:	sbcs	r0, r6, r0
   35eb8:	bcc	35f0c <flatcc_json_printer_uint64@@Base+0x188>
   35ebc:	mov	r0, #0
   35ec0:	mov	r8, #16
   35ec4:	strb	r0, [r4, #16]!
   35ec8:	b	35fd8 <flatcc_json_printer_uint64@@Base+0x254>
   35ecc:	movw	r0, #58367	; 0xe3ff
   35ed0:	mov	r8, #10
   35ed4:	movt	r0, #21515	; 0x540b
   35ed8:	subs	r0, r0, r7
   35edc:	rscs	r0, r6, #2
   35ee0:	movwcc	r8, #11
   35ee4:	b	35f28 <flatcc_json_printer_uint64@@Base+0x1a4>
   35ee8:	movw	r1, #65535	; 0xffff
   35eec:	movw	r0, #17784	; 0x4578
   35ef0:	mov	r8, #17
   35ef4:	movt	r1, #23945	; 0x5d89
   35ef8:	movt	r0, #355	; 0x163
   35efc:	subs	r1, r1, r7
   35f00:	sbcs	r0, r0, r6
   35f04:	movwcc	r8, #18
   35f08:	b	35f28 <flatcc_json_printer_uint64@@Base+0x1a4>
   35f0c:	movw	r1, #16383	; 0x3fff
   35f10:	movw	r0, #23283	; 0x5af3
   35f14:	mov	r8, #14
   35f18:	movt	r1, #4218	; 0x107a
   35f1c:	subs	r1, r1, r7
   35f20:	sbcs	r0, r0, r6
   35f24:	movwcc	r8, #15
   35f28:	mov	r0, #0
   35f2c:	tst	r8, #1
   35f30:	strb	r0, [r4, r8]!
   35f34:	bne	3609c <flatcc_json_printer_uint64@@Base+0x318>
   35f38:	sub	r0, r8, #10
   35f3c:	cmp	r0, #10
   35f40:	bhi	361e8 <flatcc_json_printer_uint64@@Base+0x464>
   35f44:	add	r1, pc, #0
   35f48:	ldr	pc, [r1, r0, lsl #2]
   35f4c:	andeq	r6, r3, r8, rrx
   35f50:	andeq	r6, r3, r8, ror #3
   35f54:	andeq	r6, r3, r8, lsr r0
   35f58:	andeq	r6, r3, r8, ror #3
   35f5c:	andeq	r6, r3, r8
   35f60:	andeq	r6, r3, r8, ror #3
   35f64:	ldrdeq	r5, [r3], -r8
   35f68:	andeq	r6, r3, r8, ror #3
   35f6c:	andeq	r5, r3, r8, lsr #31
   35f70:	andeq	r6, r3, r8, ror #3
   35f74:	andeq	r5, r3, r8, ror pc
   35f78:	mov	r0, r7
   35f7c:	mov	r1, r6
   35f80:	mov	r2, #100	; 0x64
   35f84:	mov	r3, #0
   35f88:	mov	r5, #100	; 0x64
   35f8c:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   35f90:	mov	r6, r1
   35f94:	mls	r1, r0, r5, r7
   35f98:	mov	r7, r0
   35f9c:	add	r1, r9, r1, lsl #1
   35fa0:	ldrh	r1, [r1]
   35fa4:	strh	r1, [r4, #-2]!
   35fa8:	mov	r0, r7
   35fac:	mov	r1, r6
   35fb0:	mov	r2, #100	; 0x64
   35fb4:	mov	r3, #0
   35fb8:	mov	r5, #100	; 0x64
   35fbc:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   35fc0:	mov	r6, r1
   35fc4:	mls	r1, r0, r5, r7
   35fc8:	mov	r7, r0
   35fcc:	add	r1, r9, r1, lsl #1
   35fd0:	ldrh	r1, [r1]
   35fd4:	strh	r1, [r4, #-2]!
   35fd8:	mov	r0, r7
   35fdc:	mov	r1, r6
   35fe0:	mov	r2, #100	; 0x64
   35fe4:	mov	r3, #0
   35fe8:	mov	r5, #100	; 0x64
   35fec:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   35ff0:	mov	r6, r1
   35ff4:	mls	r1, r0, r5, r7
   35ff8:	mov	r7, r0
   35ffc:	add	r1, r9, r1, lsl #1
   36000:	ldrh	r1, [r1]
   36004:	strh	r1, [r4, #-2]!
   36008:	mov	r0, r7
   3600c:	mov	r1, r6
   36010:	mov	r2, #100	; 0x64
   36014:	mov	r3, #0
   36018:	mov	r5, #100	; 0x64
   3601c:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   36020:	mov	r6, r1
   36024:	mls	r1, r0, r5, r7
   36028:	mov	r7, r0
   3602c:	add	r1, r9, r1, lsl #1
   36030:	ldrh	r1, [r1]
   36034:	strh	r1, [r4, #-2]!
   36038:	mov	r0, r7
   3603c:	mov	r1, r6
   36040:	mov	r2, #100	; 0x64
   36044:	mov	r3, #0
   36048:	mov	r5, #100	; 0x64
   3604c:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   36050:	mov	r6, r1
   36054:	mls	r1, r0, r5, r7
   36058:	mov	r7, r0
   3605c:	add	r1, r9, r1, lsl #1
   36060:	ldrh	r1, [r1]
   36064:	strh	r1, [r4, #-2]!
   36068:	mov	r0, r7
   3606c:	mov	r1, r6
   36070:	mov	r2, #100	; 0x64
   36074:	mov	r3, #0
   36078:	mov	r5, #100	; 0x64
   3607c:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   36080:	mov	r6, r1
   36084:	mls	r1, r0, r5, r7
   36088:	mov	r7, r0
   3608c:	add	r1, r9, r1, lsl #1
   36090:	ldrh	r1, [r1]
   36094:	strh	r1, [r4, #-2]!
   36098:	b	361e8 <flatcc_json_printer_uint64@@Base+0x464>
   3609c:	sub	r0, r8, #11
   360a0:	cmp	r0, #8
   360a4:	bhi	361e8 <flatcc_json_printer_uint64@@Base+0x464>
   360a8:	add	r1, pc, #0
   360ac:	ldr	pc, [r1, r0, lsl #2]
   360b0:	andeq	r6, r3, ip, lsl #3
   360b4:	andeq	r6, r3, r8, ror #3
   360b8:	andeq	r6, r3, ip, asr r1
   360bc:	andeq	r6, r3, r8, ror #3
   360c0:	andeq	r6, r3, ip, lsr #2
   360c4:	andeq	r6, r3, r8, ror #3
   360c8:	strdeq	r6, [r3], -ip
   360cc:	andeq	r6, r3, r8, ror #3
   360d0:	ldrdeq	r6, [r3], -r4
   360d4:	mov	r0, r7
   360d8:	mov	r1, r6
   360dc:	mov	r2, #100	; 0x64
   360e0:	mov	r3, #0
   360e4:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   360e8:	mov	r7, r0
   360ec:	add	r0, r9, r2, lsl #1
   360f0:	mov	r6, r1
   360f4:	ldrh	r0, [r0]
   360f8:	strh	r0, [r4, #-2]!
   360fc:	mov	r0, r7
   36100:	mov	r1, r6
   36104:	mov	r2, #100	; 0x64
   36108:	mov	r3, #0
   3610c:	mov	r5, #100	; 0x64
   36110:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   36114:	mov	r6, r1
   36118:	mls	r1, r0, r5, r7
   3611c:	mov	r7, r0
   36120:	add	r1, r9, r1, lsl #1
   36124:	ldrh	r1, [r1]
   36128:	strh	r1, [r4, #-2]!
   3612c:	mov	r0, r7
   36130:	mov	r1, r6
   36134:	mov	r2, #100	; 0x64
   36138:	mov	r3, #0
   3613c:	mov	r5, #100	; 0x64
   36140:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   36144:	mov	r6, r1
   36148:	mls	r1, r0, r5, r7
   3614c:	mov	r7, r0
   36150:	add	r1, r9, r1, lsl #1
   36154:	ldrh	r1, [r1]
   36158:	strh	r1, [r4, #-2]!
   3615c:	mov	r0, r7
   36160:	mov	r1, r6
   36164:	mov	r2, #100	; 0x64
   36168:	mov	r3, #0
   3616c:	mov	r5, #100	; 0x64
   36170:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   36174:	mov	r6, r1
   36178:	mls	r1, r0, r5, r7
   3617c:	mov	r7, r0
   36180:	add	r1, r9, r1, lsl #1
   36184:	ldrh	r1, [r1]
   36188:	strh	r1, [r4, #-2]!
   3618c:	mov	r0, r7
   36190:	mov	r1, r6
   36194:	mov	r2, #100	; 0x64
   36198:	mov	r3, #0
   3619c:	mov	sl, #100	; 0x64
   361a0:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   361a4:	mov	r2, #10
   361a8:	mov	r3, #0
   361ac:	mov	r5, r0
   361b0:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   361b4:	orr	r0, r2, #48	; 0x30
   361b8:	mov	r1, r6
   361bc:	mov	r2, #1000	; 0x3e8
   361c0:	mov	r3, #0
   361c4:	strb	r0, [r4, #-3]!
   361c8:	mls	r0, r5, sl, r7
   361cc:	add	r0, r9, r0, lsl #1
   361d0:	ldrh	r0, [r0]
   361d4:	strh	r0, [r4, #1]
   361d8:	mov	r0, r7
   361dc:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   361e0:	mov	r7, r0
   361e4:	mov	r6, r1
   361e8:	mov	r0, r7
   361ec:	mov	r1, r6
   361f0:	mov	r2, #100	; 0x64
   361f4:	mov	r3, #0
   361f8:	mov	r5, #100	; 0x64
   361fc:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   36200:	mls	r2, r0, r5, r7
   36204:	mov	r3, #0
   36208:	add	r2, r9, r2, lsl #1
   3620c:	ldrh	r2, [r2]
   36210:	strh	r2, [r4, #-2]
   36214:	mov	r2, #100	; 0x64
   36218:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   3621c:	add	r0, r9, r2, lsl #1
   36220:	mov	r1, r6
   36224:	movw	r2, #10000	; 0x2710
   36228:	mov	r3, #0
   3622c:	ldrh	r0, [r0]
   36230:	strh	r0, [r4, #-4]
   36234:	mov	r0, r7
   36238:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   3623c:	mov	r2, #100	; 0x64
   36240:	mov	r3, #0
   36244:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   36248:	add	r0, r9, r2, lsl #1
   3624c:	movw	r2, #16960	; 0x4240
   36250:	mov	r1, r6
   36254:	mov	r3, #0
   36258:	movt	r2, #15
   3625c:	ldrh	r0, [r0]
   36260:	strh	r0, [r4, #-6]
   36264:	mov	r0, r7
   36268:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   3626c:	mov	r2, #100	; 0x64
   36270:	mov	r3, #0
   36274:	bl	40e00 <flatcc_json_printer_clear@@Base+0xb7c>
   36278:	add	r0, r9, r2, lsl #1
   3627c:	ldrh	r0, [r0]
   36280:	strh	r0, [r4, #-8]
   36284:	mov	r0, r8
   36288:	sub	sp, fp, #28
   3628c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00036290 <flatcc_json_printer_int8@@Base>:
   36290:	push	{r4, r5, fp, lr}
   36294:	add	fp, sp, #8
   36298:	mov	r2, r1
   3629c:	ldr	r1, [r0, #20]
   362a0:	mov	r4, r0
   362a4:	uxtb	r0, r2
   362a8:	cmn	r2, #1
   362ac:	rsble	r2, r2, #0
   362b0:	lsr	r5, r0, #7
   362b4:	movle	r0, #45	; 0x2d
   362b8:	strble	r0, [r1], #1
   362bc:	uxtb	r0, r2
   362c0:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   362c4:	ldr	r1, [r4, #20]
   362c8:	add	r0, r0, r5
   362cc:	add	r0, r1, r0
   362d0:	str	r0, [r4, #20]
   362d4:	pop	{r4, r5, fp, pc}

000362d8 <flatcc_json_printer_int16@@Base>:
   362d8:	push	{r4, r5, fp, lr}
   362dc:	add	fp, sp, #8
   362e0:	mov	r2, r1
   362e4:	ldr	r1, [r0, #20]
   362e8:	mov	r4, r0
   362ec:	uxth	r0, r2
   362f0:	cmn	r2, #1
   362f4:	rsble	r2, r2, #0
   362f8:	lsr	r5, r0, #15
   362fc:	movle	r0, #45	; 0x2d
   36300:	strble	r0, [r1], #1
   36304:	uxth	r0, r2
   36308:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   3630c:	ldr	r1, [r4, #20]
   36310:	add	r0, r0, r5
   36314:	add	r0, r1, r0
   36318:	str	r0, [r4, #20]
   3631c:	pop	{r4, r5, fp, pc}

00036320 <flatcc_json_printer_int32@@Base>:
   36320:	push	{r4, r5, fp, lr}
   36324:	add	fp, sp, #8
   36328:	mov	r2, r1
   3632c:	lsr	r5, r1, #31
   36330:	ldr	r1, [r0, #20]
   36334:	mov	r4, r0
   36338:	cmn	r2, #1
   3633c:	movle	r0, #45	; 0x2d
   36340:	rsble	r2, r2, #0
   36344:	strble	r0, [r1], #1
   36348:	mov	r0, r2
   3634c:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   36350:	ldr	r1, [r4, #20]
   36354:	add	r0, r0, r5
   36358:	add	r0, r1, r0
   3635c:	str	r0, [r4, #20]
   36360:	pop	{r4, r5, fp, pc}

00036364 <flatcc_json_printer_int64@@Base>:
   36364:	push	{r4, r5, fp, lr}
   36368:	add	fp, sp, #8
   3636c:	mov	r1, r3
   36370:	mov	r3, r2
   36374:	ldr	r2, [r0, #20]
   36378:	mov	r4, r0
   3637c:	lsr	r5, r1, #31
   36380:	cmn	r1, #1
   36384:	bgt	36398 <flatcc_json_printer_int64@@Base+0x34>
   36388:	mov	r0, #45	; 0x2d
   3638c:	rsbs	r3, r3, #0
   36390:	strb	r0, [r2], #1
   36394:	rsc	r1, r1, #0
   36398:	mov	r0, r3
   3639c:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   363a0:	ldr	r1, [r4, #20]
   363a4:	add	r0, r0, r5
   363a8:	add	r0, r1, r0
   363ac:	str	r0, [r4, #20]
   363b0:	pop	{r4, r5, fp, pc}

000363b4 <flatcc_json_printer_float@@Base>:
   363b4:	push	{r4, sl, fp, lr}
   363b8:	add	fp, sp, #8
   363bc:	vcvt.f64.f32	d0, s0
   363c0:	mov	r4, r0
   363c4:	ldr	r0, [r0, #20]
   363c8:	bl	34b00 <flatcc_json_printer_fmt_float@@Base+0x8>
   363cc:	ldr	r1, [r4, #20]
   363d0:	add	r0, r1, r0
   363d4:	str	r0, [r4, #20]
   363d8:	pop	{r4, sl, fp, pc}

000363dc <flatcc_json_printer_double@@Base>:
   363dc:	push	{r4, sl, fp, lr}
   363e0:	add	fp, sp, #8
   363e4:	mov	r4, r0
   363e8:	ldr	r0, [r0, #20]
   363ec:	bl	34b00 <flatcc_json_printer_fmt_float@@Base+0x8>
   363f0:	ldr	r1, [r4, #20]
   363f4:	add	r0, r1, r0
   363f8:	str	r0, [r4, #20]
   363fc:	pop	{r4, sl, fp, pc}

00036400 <flatcc_json_printer_enum@@Base>:
   36400:	push	{r4, r5, r6, r7, fp, lr}
   36404:	add	fp, sp, #16
   36408:	mov	r4, r0
   3640c:	ldr	r0, [r0, #20]
   36410:	mov	r6, r1
   36414:	mov	r1, #34	; 0x22
   36418:	mov	r5, r2
   3641c:	strb	r1, [r0]
   36420:	ldrb	r2, [r4, #26]
   36424:	ldr	r0, [r4, #20]
   36428:	ldr	r1, [r4, #16]
   3642c:	cmp	r2, #0
   36430:	addeq	r0, r0, #1
   36434:	add	r2, r0, r5
   36438:	str	r0, [r4, #20]
   3643c:	cmp	r2, r1
   36440:	bcc	364b4 <flatcc_json_printer_enum@@Base+0xb4>
   36444:	cmp	r0, r1
   36448:	bcc	36464 <flatcc_json_printer_enum@@Base+0x64>
   3644c:	ldr	r2, [r4, #44]	; 0x2c
   36450:	mov	r0, r4
   36454:	mov	r1, #0
   36458:	blx	r2
   3645c:	ldr	r1, [r4, #16]
   36460:	ldr	r0, [r4, #20]
   36464:	sub	r7, r1, r0
   36468:	cmp	r7, r5
   3646c:	bcs	364b4 <flatcc_json_printer_enum@@Base+0xb4>
   36470:	mov	r1, r6
   36474:	mov	r2, r7
   36478:	bl	14e5c <memcpy@plt>
   3647c:	ldr	r0, [r4, #20]
   36480:	ldr	r2, [r4, #44]	; 0x2c
   36484:	mov	r1, #0
   36488:	add	r0, r0, r7
   3648c:	str	r0, [r4, #20]
   36490:	mov	r0, r4
   36494:	blx	r2
   36498:	ldr	r1, [r4, #16]
   3649c:	ldr	r0, [r4, #20]
   364a0:	sub	r5, r5, r7
   364a4:	add	r6, r6, r7
   364a8:	sub	r7, r1, r0
   364ac:	cmp	r5, r7
   364b0:	bhi	36470 <flatcc_json_printer_enum@@Base+0x70>
   364b4:	mov	r1, r6
   364b8:	mov	r2, r5
   364bc:	bl	14e5c <memcpy@plt>
   364c0:	ldr	r0, [r4, #20]
   364c4:	add	r1, r0, r5
   364c8:	str	r1, [r4, #20]
   364cc:	mov	r1, #34	; 0x22
   364d0:	strb	r1, [r0, r5]
   364d4:	ldrb	r0, [r4, #26]
   364d8:	ldr	r1, [r4, #20]
   364dc:	cmp	r0, #0
   364e0:	addeq	r1, r1, #1
   364e4:	str	r1, [r4, #20]
   364e8:	pop	{r4, r5, r6, r7, fp, pc}

000364ec <flatcc_json_printer_delimit_enum_flags@@Base>:
   364ec:	ldrb	ip, [r0, #26]
   364f0:	ldr	r3, [r0, #20]
   364f4:	mov	r2, #34	; 0x22
   364f8:	cmp	r1, #0
   364fc:	movwne	r1, #1
   36500:	strb	r2, [r3]
   36504:	clz	r2, ip
   36508:	lsr	r2, r2, #5
   3650c:	orr	r1, r1, r2
   36510:	ldr	r2, [r0, #20]
   36514:	add	r1, r2, r1
   36518:	str	r1, [r0, #20]
   3651c:	bx	lr

00036520 <flatcc_json_printer_enum_flag@@Base>:
   36520:	push	{r4, r5, r6, r7, fp, lr}
   36524:	add	fp, sp, #16
   36528:	mov	r5, r0
   3652c:	ldr	r0, [r0, #20]
   36530:	mov	r6, r2
   36534:	mov	r2, #32
   36538:	cmp	r1, #0
   3653c:	mov	r4, r3
   36540:	strb	r2, [r0]
   36544:	ldr	r0, [r5, #20]
   36548:	ldr	r2, [r5, #16]
   3654c:	addgt	r0, r0, #1
   36550:	add	r1, r0, r3
   36554:	str	r0, [r5, #20]
   36558:	cmp	r1, r2
   3655c:	bcc	365d0 <flatcc_json_printer_enum_flag@@Base+0xb0>
   36560:	cmp	r0, r2
   36564:	bcc	36580 <flatcc_json_printer_enum_flag@@Base+0x60>
   36568:	ldr	r2, [r5, #44]	; 0x2c
   3656c:	mov	r0, r5
   36570:	mov	r1, #0
   36574:	blx	r2
   36578:	ldr	r2, [r5, #16]
   3657c:	ldr	r0, [r5, #20]
   36580:	sub	r7, r2, r0
   36584:	cmp	r7, r4
   36588:	bcs	365d0 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3658c:	mov	r1, r6
   36590:	mov	r2, r7
   36594:	bl	14e5c <memcpy@plt>
   36598:	ldr	r0, [r5, #20]
   3659c:	ldr	r2, [r5, #44]	; 0x2c
   365a0:	mov	r1, #0
   365a4:	add	r0, r0, r7
   365a8:	str	r0, [r5, #20]
   365ac:	mov	r0, r5
   365b0:	blx	r2
   365b4:	ldr	r1, [r5, #16]
   365b8:	ldr	r0, [r5, #20]
   365bc:	sub	r4, r4, r7
   365c0:	add	r6, r6, r7
   365c4:	sub	r7, r1, r0
   365c8:	cmp	r4, r7
   365cc:	bhi	3658c <flatcc_json_printer_enum_flag@@Base+0x6c>
   365d0:	mov	r1, r6
   365d4:	mov	r2, r4
   365d8:	bl	14e5c <memcpy@plt>
   365dc:	ldr	r0, [r5, #20]
   365e0:	add	r0, r0, r4
   365e4:	str	r0, [r5, #20]
   365e8:	pop	{r4, r5, r6, r7, fp, pc}

000365ec <flatcc_json_printer_string_field@@Base>:
   365ec:	push	{r4, r5, fp, lr}
   365f0:	add	fp, sp, #8
   365f4:	mov	r4, r0
   365f8:	mov	r0, #4
   365fc:	add	r0, r0, r2, lsl #1
   36600:	ldr	r2, [r1, #8]
   36604:	cmp	r0, r2
   36608:	popge	{r4, r5, fp, pc}
   3660c:	ldr	r2, [r1, #4]
   36610:	add	r0, r2, r0
   36614:	ldrh	r0, [r0]
   36618:	cmp	r0, #0
   3661c:	ldrne	r2, [r1]
   36620:	addsne	r5, r2, r0
   36624:	bne	3662c <flatcc_json_printer_string_field@@Base+0x40>
   36628:	pop	{r4, r5, fp, pc}
   3662c:	ldr	ip, [r1, #16]
   36630:	ldr	r2, [fp, #8]
   36634:	add	r0, ip, #1
   36638:	cmp	ip, #0
   3663c:	str	r0, [r1, #16]
   36640:	beq	36658 <flatcc_json_printer_string_field@@Base+0x6c>
   36644:	ldr	r0, [r4, #20]
   36648:	add	r1, r0, #1
   3664c:	str	r1, [r4, #20]
   36650:	mov	r1, #44	; 0x2c
   36654:	strb	r1, [r0]
   36658:	mov	r0, r4
   3665c:	mov	r1, r3
   36660:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   36664:	ldr	r0, [r5]
   36668:	ldr	r2, [r5, r0]!
   3666c:	mov	r0, r4
   36670:	add	r1, r5, #4
   36674:	pop	{r4, r5, fp, lr}
   36678:	b	35388 <flatcc_json_printer_string@@Base+0x4>
   3667c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   36680:	add	fp, sp, #24
   36684:	mov	r4, r0
   36688:	mov	r6, r1
   3668c:	ldr	r0, [r0, #20]
   36690:	mov	r8, r2
   36694:	ldrb	r1, [r4, #25]
   36698:	cmp	r1, #0
   3669c:	beq	36758 <flatcc_json_printer_string_field@@Base+0x16c>
   366a0:	add	r1, r0, #1
   366a4:	str	r1, [r4, #20]
   366a8:	mov	r1, #10
   366ac:	strb	r1, [r0]
   366b0:	ldr	r0, [r4, #20]
   366b4:	ldrb	r2, [r4, #25]
   366b8:	ldr	r3, [r4, #32]
   366bc:	ldr	r1, [r4, #16]
   366c0:	mla	r5, r3, r2, r0
   366c4:	mul	r7, r3, r2
   366c8:	cmp	r5, r1
   366cc:	bls	3673c <flatcc_json_printer_string_field@@Base+0x150>
   366d0:	cmp	r0, r1
   366d4:	bcc	366f0 <flatcc_json_printer_string_field@@Base+0x104>
   366d8:	ldr	r2, [r4, #44]	; 0x2c
   366dc:	mov	r0, r4
   366e0:	mov	r1, #0
   366e4:	blx	r2
   366e8:	ldr	r1, [r4, #16]
   366ec:	ldr	r0, [r4, #20]
   366f0:	sub	r5, r1, r0
   366f4:	cmp	r5, r7
   366f8:	bcs	3673c <flatcc_json_printer_string_field@@Base+0x150>
   366fc:	mov	r1, #32
   36700:	mov	r2, r5
   36704:	bl	14eec <memset@plt>
   36708:	ldr	r0, [r4, #20]
   3670c:	ldr	r2, [r4, #44]	; 0x2c
   36710:	mov	r1, #0
   36714:	add	r0, r0, r5
   36718:	str	r0, [r4, #20]
   3671c:	mov	r0, r4
   36720:	blx	r2
   36724:	ldr	r1, [r4, #16]
   36728:	ldr	r0, [r4, #20]
   3672c:	sub	r7, r7, r5
   36730:	sub	r5, r1, r0
   36734:	cmp	r7, r5
   36738:	bhi	366fc <flatcc_json_printer_string_field@@Base+0x110>
   3673c:	mov	r1, #32
   36740:	mov	r2, r7
   36744:	bl	14eec <memset@plt>
   36748:	ldr	r0, [r4, #20]
   3674c:	add	r0, r0, r7
   36750:	str	r0, [r4, #20]
   36754:	b	36778 <flatcc_json_printer_string_field@@Base+0x18c>
   36758:	ldr	r1, [r4, #16]
   3675c:	cmp	r0, r1
   36760:	bcc	36778 <flatcc_json_printer_string_field@@Base+0x18c>
   36764:	ldr	r2, [r4, #44]	; 0x2c
   36768:	mov	r0, r4
   3676c:	mov	r1, #0
   36770:	blx	r2
   36774:	ldr	r0, [r4, #20]
   36778:	mov	r1, #34	; 0x22
   3677c:	strb	r1, [r0]
   36780:	ldrb	r2, [r4, #26]
   36784:	ldr	r0, [r4, #20]
   36788:	ldr	r1, [r4, #16]
   3678c:	cmp	r2, #0
   36790:	addeq	r0, r0, #1
   36794:	add	r2, r0, r8
   36798:	str	r0, [r4, #20]
   3679c:	cmp	r2, r1
   367a0:	bcc	36814 <flatcc_json_printer_string_field@@Base+0x228>
   367a4:	cmp	r0, r1
   367a8:	bcc	367c4 <flatcc_json_printer_string_field@@Base+0x1d8>
   367ac:	ldr	r2, [r4, #44]	; 0x2c
   367b0:	mov	r0, r4
   367b4:	mov	r1, #0
   367b8:	blx	r2
   367bc:	ldr	r1, [r4, #16]
   367c0:	ldr	r0, [r4, #20]
   367c4:	sub	r7, r1, r0
   367c8:	cmp	r7, r8
   367cc:	bcs	36814 <flatcc_json_printer_string_field@@Base+0x228>
   367d0:	mov	r1, r6
   367d4:	mov	r2, r7
   367d8:	bl	14e5c <memcpy@plt>
   367dc:	ldr	r0, [r4, #20]
   367e0:	ldr	r2, [r4, #44]	; 0x2c
   367e4:	mov	r1, #0
   367e8:	add	r0, r0, r7
   367ec:	str	r0, [r4, #20]
   367f0:	mov	r0, r4
   367f4:	blx	r2
   367f8:	ldr	r1, [r4, #16]
   367fc:	ldr	r0, [r4, #20]
   36800:	sub	r8, r8, r7
   36804:	add	r6, r6, r7
   36808:	sub	r7, r1, r0
   3680c:	cmp	r8, r7
   36810:	bhi	367d0 <flatcc_json_printer_string_field@@Base+0x1e4>
   36814:	mov	r1, r6
   36818:	mov	r2, r8
   3681c:	bl	14e5c <memcpy@plt>
   36820:	ldr	r0, [r4, #20]
   36824:	add	r1, r0, r8
   36828:	str	r1, [r4, #20]
   3682c:	mov	r1, #34	; 0x22
   36830:	strb	r1, [r0, r8]
   36834:	ldrb	r0, [r4, #26]
   36838:	ldr	r1, [r4, #20]
   3683c:	cmp	r0, #0
   36840:	addeq	r1, r1, #1
   36844:	add	r0, r1, #1
   36848:	str	r0, [r4, #20]
   3684c:	mov	r0, #58	; 0x3a
   36850:	strb	r0, [r1]
   36854:	mov	r1, #32
   36858:	ldr	r0, [r4, #20]
   3685c:	strb	r1, [r0]
   36860:	ldrb	r0, [r4, #25]
   36864:	ldr	r1, [r4, #20]
   36868:	cmp	r0, #0
   3686c:	addne	r1, r1, #1
   36870:	str	r1, [r4, #20]
   36874:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00036878 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   36878:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3687c:	add	fp, sp, #28
   36880:	sub	sp, sp, #12
   36884:	mov	r4, r0
   36888:	mov	r0, #4
   3688c:	add	r0, r0, r2, lsl #1
   36890:	ldr	r2, [r1, #8]
   36894:	cmp	r0, r2
   36898:	bge	36a38 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3689c:	ldr	r2, [r1, #4]
   368a0:	add	r0, r2, r0
   368a4:	ldrh	r0, [r0]
   368a8:	cmp	r0, #0
   368ac:	beq	36a38 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   368b0:	ldr	r5, [fp, #12]
   368b4:	ldr	r2, [r1]
   368b8:	cmp	r5, #0
   368bc:	add	r6, r2, r0
   368c0:	movwne	r5, #1
   368c4:	cmp	r6, #0
   368c8:	beq	36a38 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   368cc:	ldr	r0, [r1, #16]
   368d0:	ldr	r2, [fp, #8]
   368d4:	add	r7, r0, #1
   368d8:	cmp	r0, #0
   368dc:	str	r7, [r1, #16]
   368e0:	beq	368f8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x80>
   368e4:	ldr	r0, [r4, #20]
   368e8:	add	r1, r0, #1
   368ec:	str	r1, [r4, #20]
   368f0:	mov	r1, #44	; 0x2c
   368f4:	strb	r1, [r0]
   368f8:	mov	r0, r4
   368fc:	mov	r1, r3
   36900:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   36904:	ldr	r0, [r6]
   36908:	ldr	r0, [r6, r0]!
   3690c:	str	r0, [sp, #8]
   36910:	ldr	r0, [r4, #20]
   36914:	add	r1, r0, #1
   36918:	str	r1, [r4, #20]
   3691c:	mov	r1, #34	; 0x22
   36920:	strb	r1, [r0]
   36924:	movw	r1, #43691	; 0xaaab
   36928:	ldr	r0, [sp, #8]
   3692c:	movt	r1, #43690	; 0xaaaa
   36930:	lsl	r0, r0, #2
   36934:	umull	r0, r1, r0, r1
   36938:	mov	r0, #3
   3693c:	add	r0, r0, r1, lsr #1
   36940:	ldr	r1, [r4, #16]
   36944:	bic	r7, r0, #3
   36948:	ldr	r0, [r4, #20]
   3694c:	add	r2, r0, r7
   36950:	cmp	r2, r1
   36954:	bcc	36970 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   36958:	ldr	r2, [r4, #44]	; 0x2c
   3695c:	mov	r0, r4
   36960:	mov	r1, #0
   36964:	blx	r2
   36968:	ldr	r1, [r4, #16]
   3696c:	ldr	r0, [r4, #20]
   36970:	add	r2, r0, r7
   36974:	add	r6, r6, #4
   36978:	cmp	r2, r1
   3697c:	bls	36a10 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   36980:	add	r9, sp, #4
   36984:	mov	sl, #3
   36988:	sub	r1, r1, r0
   3698c:	bic	r7, r1, #3
   36990:	add	r1, r7, r7, lsl #1
   36994:	cmp	r1, #0
   36998:	beq	36a40 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c8>
   3699c:	lsr	r8, r1, #2
   369a0:	mov	r1, r6
   369a4:	mov	r2, r9
   369a8:	mov	r3, r5
   369ac:	str	r8, [sp, #4]
   369b0:	bl	406ac <flatcc_json_printer_clear@@Base+0x428>
   369b4:	ldr	r0, [r4, #20]
   369b8:	mov	r1, #0
   369bc:	add	r0, r0, r7
   369c0:	str	r0, [r4, #20]
   369c4:	ldr	r0, [sp, #8]
   369c8:	sub	r0, r0, r8
   369cc:	str	r0, [sp, #8]
   369d0:	mov	r0, r4
   369d4:	ldr	r2, [r4, #44]	; 0x2c
   369d8:	blx	r2
   369dc:	ldr	r0, [sp, #8]
   369e0:	movw	r1, #43691	; 0xaaab
   369e4:	add	r6, r6, r8
   369e8:	movt	r1, #43690	; 0xaaaa
   369ec:	lsl	r0, r0, #2
   369f0:	umull	r0, r1, r0, r1
   369f4:	add	r0, sl, r1, lsr #1
   369f8:	ldr	r1, [r4, #16]
   369fc:	bic	r7, r0, #3
   36a00:	ldr	r0, [r4, #20]
   36a04:	add	r2, r0, r7
   36a08:	cmp	r2, r1
   36a0c:	bhi	36988 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x110>
   36a10:	orr	r3, r5, #128	; 0x80
   36a14:	add	r2, sp, #8
   36a18:	mov	r1, r6
   36a1c:	bl	406ac <flatcc_json_printer_clear@@Base+0x428>
   36a20:	ldr	r0, [r4, #20]
   36a24:	add	r1, r0, r7
   36a28:	add	r1, r1, #1
   36a2c:	str	r1, [r4, #20]
   36a30:	mov	r1, #34	; 0x22
   36a34:	strb	r1, [r0, r7]
   36a38:	sub	sp, fp, #28
   36a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36a40:	movw	r0, #27425	; 0x6b21
   36a44:	movw	r1, #26499	; 0x6783
   36a48:	movw	r3, #27431	; 0x6b27
   36a4c:	movw	r2, #277	; 0x115
   36a50:	movt	r0, #4
   36a54:	movt	r1, #4
   36a58:	movt	r3, #4
   36a5c:	bl	14f40 <__assert_fail@plt>

00036a60 <flatcc_json_printer_uint8_field@@Base>:
   36a60:	push	{r4, r5, r6, sl, fp, lr}
   36a64:	add	fp, sp, #16
   36a68:	mov	r4, r0
   36a6c:	mov	r0, #4
   36a70:	ldr	r5, [r1, #8]
   36a74:	add	r2, r0, r2, lsl #1
   36a78:	ldr	r0, [fp, #12]
   36a7c:	cmp	r2, r5
   36a80:	bge	36aa0 <flatcc_json_printer_uint8_field@@Base+0x40>
   36a84:	ldr	r5, [r1, #4]
   36a88:	add	r2, r5, r2
   36a8c:	ldrh	r2, [r2]
   36a90:	cmp	r2, #0
   36a94:	ldrne	r5, [r1]
   36a98:	addsne	r2, r5, r2
   36a9c:	bne	36b04 <flatcc_json_printer_uint8_field@@Base+0xa4>
   36aa0:	ldrb	r2, [r4, #29]
   36aa4:	mov	r6, r0
   36aa8:	cmp	r2, #0
   36aac:	beq	36b00 <flatcc_json_printer_uint8_field@@Base+0xa0>
   36ab0:	ldr	r0, [r1, #16]
   36ab4:	ldr	r2, [fp, #8]
   36ab8:	add	r5, r0, #1
   36abc:	cmp	r0, #0
   36ac0:	str	r5, [r1, #16]
   36ac4:	beq	36adc <flatcc_json_printer_uint8_field@@Base+0x7c>
   36ac8:	ldr	r0, [r4, #20]
   36acc:	add	r1, r0, #1
   36ad0:	str	r1, [r4, #20]
   36ad4:	mov	r1, #44	; 0x2c
   36ad8:	strb	r1, [r0]
   36adc:	mov	r0, r4
   36ae0:	mov	r1, r3
   36ae4:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   36ae8:	ldr	r1, [r4, #20]
   36aec:	mov	r0, r6
   36af0:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   36af4:	ldr	r1, [r4, #20]
   36af8:	add	r0, r1, r0
   36afc:	str	r0, [r4, #20]
   36b00:	pop	{r4, r5, r6, sl, fp, pc}
   36b04:	ldrb	r6, [r2]
   36b08:	cmp	r6, r0
   36b0c:	bne	36ab0 <flatcc_json_printer_uint8_field@@Base+0x50>
   36b10:	ldrb	r2, [r4, #28]
   36b14:	mov	r6, r0
   36b18:	cmp	r2, #0
   36b1c:	popne	{r4, r5, r6, sl, fp, pc}
   36b20:	b	36ab0 <flatcc_json_printer_uint8_field@@Base+0x50>

00036b24 <flatcc_json_printer_uint16_field@@Base>:
   36b24:	push	{r4, r5, r6, sl, fp, lr}
   36b28:	add	fp, sp, #16
   36b2c:	mov	r4, r0
   36b30:	mov	r0, #4
   36b34:	ldr	r5, [r1, #8]
   36b38:	add	r2, r0, r2, lsl #1
   36b3c:	ldr	r0, [fp, #12]
   36b40:	cmp	r2, r5
   36b44:	bge	36b64 <flatcc_json_printer_uint16_field@@Base+0x40>
   36b48:	ldr	r5, [r1, #4]
   36b4c:	add	r2, r5, r2
   36b50:	ldrh	r2, [r2]
   36b54:	cmp	r2, #0
   36b58:	ldrne	r5, [r1]
   36b5c:	addsne	r2, r5, r2
   36b60:	bne	36bc8 <flatcc_json_printer_uint16_field@@Base+0xa4>
   36b64:	ldrb	r2, [r4, #29]
   36b68:	mov	r6, r0
   36b6c:	cmp	r2, #0
   36b70:	beq	36bc4 <flatcc_json_printer_uint16_field@@Base+0xa0>
   36b74:	ldr	r0, [r1, #16]
   36b78:	ldr	r2, [fp, #8]
   36b7c:	add	r5, r0, #1
   36b80:	cmp	r0, #0
   36b84:	str	r5, [r1, #16]
   36b88:	beq	36ba0 <flatcc_json_printer_uint16_field@@Base+0x7c>
   36b8c:	ldr	r0, [r4, #20]
   36b90:	add	r1, r0, #1
   36b94:	str	r1, [r4, #20]
   36b98:	mov	r1, #44	; 0x2c
   36b9c:	strb	r1, [r0]
   36ba0:	mov	r0, r4
   36ba4:	mov	r1, r3
   36ba8:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   36bac:	ldr	r1, [r4, #20]
   36bb0:	mov	r0, r6
   36bb4:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   36bb8:	ldr	r1, [r4, #20]
   36bbc:	add	r0, r1, r0
   36bc0:	str	r0, [r4, #20]
   36bc4:	pop	{r4, r5, r6, sl, fp, pc}
   36bc8:	ldrh	r6, [r2]
   36bcc:	cmp	r6, r0
   36bd0:	bne	36b74 <flatcc_json_printer_uint16_field@@Base+0x50>
   36bd4:	ldrb	r2, [r4, #28]
   36bd8:	mov	r6, r0
   36bdc:	cmp	r2, #0
   36be0:	popne	{r4, r5, r6, sl, fp, pc}
   36be4:	b	36b74 <flatcc_json_printer_uint16_field@@Base+0x50>

00036be8 <flatcc_json_printer_uint32_field@@Base>:
   36be8:	push	{r4, r5, r6, sl, fp, lr}
   36bec:	add	fp, sp, #16
   36bf0:	mov	r4, r0
   36bf4:	mov	r0, #4
   36bf8:	ldr	r5, [r1, #8]
   36bfc:	add	r2, r0, r2, lsl #1
   36c00:	ldr	r0, [fp, #12]
   36c04:	cmp	r2, r5
   36c08:	bge	36c28 <flatcc_json_printer_uint32_field@@Base+0x40>
   36c0c:	ldr	r5, [r1, #4]
   36c10:	add	r2, r5, r2
   36c14:	ldrh	r2, [r2]
   36c18:	cmp	r2, #0
   36c1c:	ldrne	r5, [r1]
   36c20:	addsne	r2, r5, r2
   36c24:	bne	36c8c <flatcc_json_printer_uint32_field@@Base+0xa4>
   36c28:	ldrb	r2, [r4, #29]
   36c2c:	mov	r6, r0
   36c30:	cmp	r2, #0
   36c34:	beq	36c88 <flatcc_json_printer_uint32_field@@Base+0xa0>
   36c38:	ldr	r0, [r1, #16]
   36c3c:	ldr	r2, [fp, #8]
   36c40:	add	r5, r0, #1
   36c44:	cmp	r0, #0
   36c48:	str	r5, [r1, #16]
   36c4c:	beq	36c64 <flatcc_json_printer_uint32_field@@Base+0x7c>
   36c50:	ldr	r0, [r4, #20]
   36c54:	add	r1, r0, #1
   36c58:	str	r1, [r4, #20]
   36c5c:	mov	r1, #44	; 0x2c
   36c60:	strb	r1, [r0]
   36c64:	mov	r0, r4
   36c68:	mov	r1, r3
   36c6c:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   36c70:	ldr	r1, [r4, #20]
   36c74:	mov	r0, r6
   36c78:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   36c7c:	ldr	r1, [r4, #20]
   36c80:	add	r0, r1, r0
   36c84:	str	r0, [r4, #20]
   36c88:	pop	{r4, r5, r6, sl, fp, pc}
   36c8c:	ldr	r6, [r2]
   36c90:	cmp	r6, r0
   36c94:	bne	36c38 <flatcc_json_printer_uint32_field@@Base+0x50>
   36c98:	ldrb	r2, [r4, #28]
   36c9c:	mov	r6, r0
   36ca0:	cmp	r2, #0
   36ca4:	popne	{r4, r5, r6, sl, fp, pc}
   36ca8:	b	36c38 <flatcc_json_printer_uint32_field@@Base+0x50>

00036cac <flatcc_json_printer_uint64_field@@Base>:
   36cac:	push	{r4, r6, r7, r8, fp, lr}
   36cb0:	add	fp, sp, #16
   36cb4:	mov	r4, r0
   36cb8:	mov	r0, #4
   36cbc:	ldr	r6, [r1, #8]
   36cc0:	ldr	lr, [fp, #20]
   36cc4:	add	r7, r0, r2, lsl #1
   36cc8:	ldr	r2, [fp, #16]
   36ccc:	cmp	r7, r6
   36cd0:	bge	36cf0 <flatcc_json_printer_uint64_field@@Base+0x44>
   36cd4:	ldr	r6, [r1, #4]
   36cd8:	add	r7, r6, r7
   36cdc:	ldrh	r7, [r7]
   36ce0:	cmp	r7, #0
   36ce4:	ldrne	r6, [r1]
   36ce8:	addsne	r7, r6, r7
   36cec:	bne	36d5c <flatcc_json_printer_uint64_field@@Base+0xb0>
   36cf0:	ldrb	r0, [r4, #29]
   36cf4:	mov	r8, r2
   36cf8:	mov	r7, lr
   36cfc:	cmp	r0, #0
   36d00:	beq	36d58 <flatcc_json_printer_uint64_field@@Base+0xac>
   36d04:	ldr	r0, [r1, #16]
   36d08:	ldr	r2, [fp, #8]
   36d0c:	add	r6, r0, #1
   36d10:	cmp	r0, #0
   36d14:	str	r6, [r1, #16]
   36d18:	beq	36d30 <flatcc_json_printer_uint64_field@@Base+0x84>
   36d1c:	ldr	r0, [r4, #20]
   36d20:	add	r1, r0, #1
   36d24:	str	r1, [r4, #20]
   36d28:	mov	r1, #44	; 0x2c
   36d2c:	strb	r1, [r0]
   36d30:	mov	r0, r4
   36d34:	mov	r1, r3
   36d38:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   36d3c:	ldr	r2, [r4, #20]
   36d40:	mov	r0, r8
   36d44:	mov	r1, r7
   36d48:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   36d4c:	ldr	r1, [r4, #20]
   36d50:	add	r0, r1, r0
   36d54:	str	r0, [r4, #20]
   36d58:	pop	{r4, r6, r7, r8, fp, pc}
   36d5c:	ldr	r8, [r7]
   36d60:	ldr	r7, [r7, #4]
   36d64:	eor	ip, r7, lr
   36d68:	eor	r0, r8, r2
   36d6c:	orrs	r0, r0, ip
   36d70:	bne	36d04 <flatcc_json_printer_uint64_field@@Base+0x58>
   36d74:	ldrb	r0, [r4, #28]
   36d78:	mov	r8, r2
   36d7c:	mov	r7, lr
   36d80:	cmp	r0, #0
   36d84:	popne	{r4, r6, r7, r8, fp, pc}
   36d88:	b	36d04 <flatcc_json_printer_uint64_field@@Base+0x58>

00036d8c <flatcc_json_printer_int8_field@@Base>:
   36d8c:	push	{r4, r5, r6, sl, fp, lr}
   36d90:	add	fp, sp, #16
   36d94:	mov	r4, r0
   36d98:	mov	r0, #4
   36d9c:	ldr	r6, [r1, #8]
   36da0:	add	r2, r0, r2, lsl #1
   36da4:	ldr	r0, [fp, #12]
   36da8:	cmp	r2, r6
   36dac:	bge	36dcc <flatcc_json_printer_int8_field@@Base+0x40>
   36db0:	ldr	r6, [r1, #4]
   36db4:	add	r2, r6, r2
   36db8:	ldrh	r2, [r2]
   36dbc:	cmp	r2, #0
   36dc0:	ldrne	r6, [r1]
   36dc4:	addsne	r2, r6, r2
   36dc8:	bne	36e50 <flatcc_json_printer_int8_field@@Base+0xc4>
   36dcc:	ldrb	r2, [r4, #29]
   36dd0:	mov	r5, r0
   36dd4:	cmp	r2, #0
   36dd8:	beq	36e4c <flatcc_json_printer_int8_field@@Base+0xc0>
   36ddc:	ldr	r0, [r1, #16]
   36de0:	ldr	r2, [fp, #8]
   36de4:	add	r6, r0, #1
   36de8:	cmp	r0, #0
   36dec:	str	r6, [r1, #16]
   36df0:	beq	36e08 <flatcc_json_printer_int8_field@@Base+0x7c>
   36df4:	ldr	r0, [r4, #20]
   36df8:	add	r1, r0, #1
   36dfc:	str	r1, [r4, #20]
   36e00:	mov	r1, #44	; 0x2c
   36e04:	strb	r1, [r0]
   36e08:	mov	r0, r4
   36e0c:	mov	r1, r3
   36e10:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   36e14:	uxtb	r0, r5
   36e18:	ldr	r1, [r4, #20]
   36e1c:	lsr	r6, r0, #7
   36e20:	sxtb	r0, r5
   36e24:	cmn	r0, #1
   36e28:	movle	r0, #45	; 0x2d
   36e2c:	rsble	r5, r5, #0
   36e30:	strble	r0, [r1], #1
   36e34:	uxtb	r0, r5
   36e38:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   36e3c:	ldr	r1, [r4, #20]
   36e40:	add	r0, r0, r6
   36e44:	add	r0, r1, r0
   36e48:	str	r0, [r4, #20]
   36e4c:	pop	{r4, r5, r6, sl, fp, pc}
   36e50:	ldrb	r5, [r2]
   36e54:	uxtb	r2, r0
   36e58:	cmp	r5, r2
   36e5c:	bne	36ddc <flatcc_json_printer_int8_field@@Base+0x50>
   36e60:	ldrb	r2, [r4, #28]
   36e64:	mov	r5, r0
   36e68:	cmp	r2, #0
   36e6c:	popne	{r4, r5, r6, sl, fp, pc}
   36e70:	b	36ddc <flatcc_json_printer_int8_field@@Base+0x50>

00036e74 <flatcc_json_printer_int16_field@@Base>:
   36e74:	push	{r4, r5, r6, sl, fp, lr}
   36e78:	add	fp, sp, #16
   36e7c:	mov	r4, r0
   36e80:	mov	r0, #4
   36e84:	ldr	r6, [r1, #8]
   36e88:	add	r2, r0, r2, lsl #1
   36e8c:	ldr	r0, [fp, #12]
   36e90:	cmp	r2, r6
   36e94:	bge	36eb4 <flatcc_json_printer_int16_field@@Base+0x40>
   36e98:	ldr	r6, [r1, #4]
   36e9c:	add	r2, r6, r2
   36ea0:	ldrh	r2, [r2]
   36ea4:	cmp	r2, #0
   36ea8:	ldrne	r6, [r1]
   36eac:	addsne	r2, r6, r2
   36eb0:	bne	36f38 <flatcc_json_printer_int16_field@@Base+0xc4>
   36eb4:	ldrb	r2, [r4, #29]
   36eb8:	mov	r5, r0
   36ebc:	cmp	r2, #0
   36ec0:	beq	36f34 <flatcc_json_printer_int16_field@@Base+0xc0>
   36ec4:	ldr	r0, [r1, #16]
   36ec8:	ldr	r2, [fp, #8]
   36ecc:	add	r6, r0, #1
   36ed0:	cmp	r0, #0
   36ed4:	str	r6, [r1, #16]
   36ed8:	beq	36ef0 <flatcc_json_printer_int16_field@@Base+0x7c>
   36edc:	ldr	r0, [r4, #20]
   36ee0:	add	r1, r0, #1
   36ee4:	str	r1, [r4, #20]
   36ee8:	mov	r1, #44	; 0x2c
   36eec:	strb	r1, [r0]
   36ef0:	mov	r0, r4
   36ef4:	mov	r1, r3
   36ef8:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   36efc:	uxth	r0, r5
   36f00:	ldr	r1, [r4, #20]
   36f04:	lsr	r6, r0, #15
   36f08:	sxth	r0, r5
   36f0c:	cmn	r0, #1
   36f10:	movle	r0, #45	; 0x2d
   36f14:	rsble	r5, r5, #0
   36f18:	strble	r0, [r1], #1
   36f1c:	uxth	r0, r5
   36f20:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   36f24:	ldr	r1, [r4, #20]
   36f28:	add	r0, r0, r6
   36f2c:	add	r0, r1, r0
   36f30:	str	r0, [r4, #20]
   36f34:	pop	{r4, r5, r6, sl, fp, pc}
   36f38:	ldrh	r5, [r2]
   36f3c:	uxth	r2, r0
   36f40:	cmp	r5, r2
   36f44:	bne	36ec4 <flatcc_json_printer_int16_field@@Base+0x50>
   36f48:	ldrb	r2, [r4, #28]
   36f4c:	mov	r5, r0
   36f50:	cmp	r2, #0
   36f54:	popne	{r4, r5, r6, sl, fp, pc}
   36f58:	b	36ec4 <flatcc_json_printer_int16_field@@Base+0x50>

00036f5c <flatcc_json_printer_int32_field@@Base>:
   36f5c:	push	{r4, r5, r6, sl, fp, lr}
   36f60:	add	fp, sp, #16
   36f64:	mov	r4, r0
   36f68:	mov	r0, #4
   36f6c:	ldr	r6, [r1, #8]
   36f70:	add	r2, r0, r2, lsl #1
   36f74:	ldr	r0, [fp, #12]
   36f78:	cmp	r2, r6
   36f7c:	bge	36f9c <flatcc_json_printer_int32_field@@Base+0x40>
   36f80:	ldr	r6, [r1, #4]
   36f84:	add	r2, r6, r2
   36f88:	ldrh	r2, [r2]
   36f8c:	cmp	r2, #0
   36f90:	ldrne	r6, [r1]
   36f94:	addsne	r2, r6, r2
   36f98:	bne	37018 <flatcc_json_printer_int32_field@@Base+0xbc>
   36f9c:	ldrb	r2, [r4, #29]
   36fa0:	mov	r5, r0
   36fa4:	cmp	r2, #0
   36fa8:	beq	37014 <flatcc_json_printer_int32_field@@Base+0xb8>
   36fac:	ldr	r0, [r1, #16]
   36fb0:	ldr	r2, [fp, #8]
   36fb4:	add	r6, r0, #1
   36fb8:	cmp	r0, #0
   36fbc:	str	r6, [r1, #16]
   36fc0:	beq	36fd8 <flatcc_json_printer_int32_field@@Base+0x7c>
   36fc4:	ldr	r0, [r4, #20]
   36fc8:	add	r1, r0, #1
   36fcc:	str	r1, [r4, #20]
   36fd0:	mov	r1, #44	; 0x2c
   36fd4:	strb	r1, [r0]
   36fd8:	mov	r0, r4
   36fdc:	mov	r1, r3
   36fe0:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   36fe4:	ldr	r1, [r4, #20]
   36fe8:	cmn	r5, #1
   36fec:	lsr	r6, r5, #31
   36ff0:	movle	r0, #45	; 0x2d
   36ff4:	rsble	r5, r5, #0
   36ff8:	strble	r0, [r1], #1
   36ffc:	mov	r0, r5
   37000:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   37004:	ldr	r1, [r4, #20]
   37008:	add	r0, r0, r6
   3700c:	add	r0, r1, r0
   37010:	str	r0, [r4, #20]
   37014:	pop	{r4, r5, r6, sl, fp, pc}
   37018:	ldr	r5, [r2]
   3701c:	cmp	r5, r0
   37020:	bne	36fac <flatcc_json_printer_int32_field@@Base+0x50>
   37024:	ldrb	r2, [r4, #28]
   37028:	mov	r5, r0
   3702c:	cmp	r2, #0
   37030:	popne	{r4, r5, r6, sl, fp, pc}
   37034:	b	36fac <flatcc_json_printer_int32_field@@Base+0x50>

00037038 <flatcc_json_printer_int64_field@@Base>:
   37038:	push	{r4, r5, r6, r7, fp, lr}
   3703c:	add	fp, sp, #16
   37040:	mov	r4, r0
   37044:	mov	r0, #4
   37048:	ldr	r6, [r1, #8]
   3704c:	add	r7, r0, r2, lsl #1
   37050:	ldr	r0, [fp, #20]
   37054:	ldr	r2, [fp, #16]
   37058:	cmp	r7, r6
   3705c:	bge	3707c <flatcc_json_printer_int64_field@@Base+0x44>
   37060:	ldr	r6, [r1, #4]
   37064:	add	r7, r6, r7
   37068:	ldrh	r7, [r7]
   3706c:	cmp	r7, #0
   37070:	ldrne	r6, [r1]
   37074:	addsne	r7, r6, r7
   37078:	bne	37108 <flatcc_json_printer_int64_field@@Base+0xd0>
   3707c:	ldrb	r7, [r4, #29]
   37080:	mov	r6, r2
   37084:	cmp	r7, #0
   37088:	mov	r7, r0
   3708c:	beq	37104 <flatcc_json_printer_int64_field@@Base+0xcc>
   37090:	ldr	r0, [r1, #16]
   37094:	ldr	r2, [fp, #8]
   37098:	add	r5, r0, #1
   3709c:	cmp	r0, #0
   370a0:	str	r5, [r1, #16]
   370a4:	beq	370bc <flatcc_json_printer_int64_field@@Base+0x84>
   370a8:	ldr	r0, [r4, #20]
   370ac:	add	r1, r0, #1
   370b0:	str	r1, [r4, #20]
   370b4:	mov	r1, #44	; 0x2c
   370b8:	strb	r1, [r0]
   370bc:	mov	r0, r4
   370c0:	mov	r1, r3
   370c4:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   370c8:	ldr	r2, [r4, #20]
   370cc:	lsr	r5, r7, #31
   370d0:	cmn	r7, #1
   370d4:	bgt	370e8 <flatcc_json_printer_int64_field@@Base+0xb0>
   370d8:	mov	r0, #45	; 0x2d
   370dc:	rsbs	r6, r6, #0
   370e0:	strb	r0, [r2], #1
   370e4:	rsc	r7, r7, #0
   370e8:	mov	r0, r6
   370ec:	mov	r1, r7
   370f0:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   370f4:	ldr	r1, [r4, #20]
   370f8:	add	r0, r0, r5
   370fc:	add	r0, r1, r0
   37100:	str	r0, [r4, #20]
   37104:	pop	{r4, r5, r6, r7, fp, pc}
   37108:	ldrd	r6, [r7]
   3710c:	eor	ip, r7, r0
   37110:	eor	r5, r6, r2
   37114:	orrs	r5, r5, ip
   37118:	bne	37090 <flatcc_json_printer_int64_field@@Base+0x58>
   3711c:	ldrb	r7, [r4, #28]
   37120:	mov	r6, r2
   37124:	cmp	r7, #0
   37128:	mov	r7, r0
   3712c:	popne	{r4, r5, r6, r7, fp, pc}
   37130:	b	37090 <flatcc_json_printer_int64_field@@Base+0x58>

00037134 <flatcc_json_printer_bool_field@@Base>:
   37134:	push	{r4, r5, r6, sl, fp, lr}
   37138:	add	fp, sp, #16
   3713c:	mov	r4, r0
   37140:	mov	r0, #4
   37144:	ldr	r5, [r1, #8]
   37148:	add	r2, r0, r2, lsl #1
   3714c:	ldr	r0, [fp, #12]
   37150:	cmp	r2, r5
   37154:	bge	37174 <flatcc_json_printer_bool_field@@Base+0x40>
   37158:	ldr	r5, [r1, #4]
   3715c:	add	r2, r5, r2
   37160:	ldrh	r2, [r2]
   37164:	cmp	r2, #0
   37168:	ldrne	r5, [r1]
   3716c:	addsne	r2, r5, r2
   37170:	bne	3720c <flatcc_json_printer_bool_field@@Base+0xd8>
   37174:	ldrb	r2, [r4, #29]
   37178:	mov	r6, r0
   3717c:	cmp	r2, #0
   37180:	beq	37208 <flatcc_json_printer_bool_field@@Base+0xd4>
   37184:	ldr	r0, [r1, #16]
   37188:	ldr	r2, [fp, #8]
   3718c:	add	r5, r0, #1
   37190:	cmp	r0, #0
   37194:	str	r5, [r1, #16]
   37198:	beq	371b0 <flatcc_json_printer_bool_field@@Base+0x7c>
   3719c:	ldr	r0, [r4, #20]
   371a0:	add	r1, r0, #1
   371a4:	str	r1, [r4, #20]
   371a8:	mov	r1, #44	; 0x2c
   371ac:	strb	r1, [r0]
   371b0:	mov	r0, r4
   371b4:	mov	r1, r3
   371b8:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   371bc:	ldr	r0, [r4, #20]
   371c0:	cmp	r6, #0
   371c4:	beq	371e4 <flatcc_json_printer_bool_field@@Base+0xb0>
   371c8:	mov	r1, #0
   371cc:	strb	r1, [r0, #4]
   371d0:	movw	r1, #29300	; 0x7274
   371d4:	movt	r1, #25973	; 0x6575
   371d8:	str	r1, [r0]
   371dc:	mov	r0, #4
   371e0:	b	371fc <flatcc_json_printer_bool_field@@Base+0xc8>
   371e4:	mov	r1, #101	; 0x65
   371e8:	strh	r1, [r0, #4]
   371ec:	movw	r1, #24934	; 0x6166
   371f0:	movt	r1, #29548	; 0x736c
   371f4:	str	r1, [r0]
   371f8:	mov	r0, #5
   371fc:	ldr	r1, [r4, #20]
   37200:	add	r0, r1, r0
   37204:	str	r0, [r4, #20]
   37208:	pop	{r4, r5, r6, sl, fp, pc}
   3720c:	ldrb	r6, [r2]
   37210:	cmp	r6, r0
   37214:	bne	37184 <flatcc_json_printer_bool_field@@Base+0x50>
   37218:	ldrb	r2, [r4, #28]
   3721c:	mov	r6, r0
   37220:	cmp	r2, #0
   37224:	popne	{r4, r5, r6, sl, fp, pc}
   37228:	b	37184 <flatcc_json_printer_bool_field@@Base+0x50>

0003722c <flatcc_json_printer_float_field@@Base>:
   3722c:	push	{r4, r5, fp, lr}
   37230:	add	fp, sp, #8
   37234:	vpush	{d8}
   37238:	mov	r5, r0
   3723c:	mov	r0, #4
   37240:	vmov.f32	s16, s0
   37244:	add	r0, r0, r2, lsl #1
   37248:	ldr	r2, [r1, #8]
   3724c:	cmp	r0, r2
   37250:	bge	37270 <flatcc_json_printer_float_field@@Base+0x44>
   37254:	ldr	r2, [r1, #4]
   37258:	add	r0, r2, r0
   3725c:	ldrh	r0, [r0]
   37260:	cmp	r0, #0
   37264:	ldrne	r2, [r1]
   37268:	addsne	r0, r2, r0
   3726c:	bne	372d4 <flatcc_json_printer_float_field@@Base+0xa8>
   37270:	ldrb	r0, [r5, #29]
   37274:	cmp	r0, #0
   37278:	beq	372cc <flatcc_json_printer_float_field@@Base+0xa0>
   3727c:	ldr	r0, [r1, #16]
   37280:	ldr	r2, [fp, #8]
   37284:	add	r4, r0, #1
   37288:	cmp	r0, #0
   3728c:	str	r4, [r1, #16]
   37290:	beq	372a8 <flatcc_json_printer_float_field@@Base+0x7c>
   37294:	ldr	r0, [r5, #20]
   37298:	add	r1, r0, #1
   3729c:	str	r1, [r5, #20]
   372a0:	mov	r1, #44	; 0x2c
   372a4:	strb	r1, [r0]
   372a8:	mov	r0, r5
   372ac:	mov	r1, r3
   372b0:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   372b4:	vcvt.f64.f32	d0, s16
   372b8:	ldr	r0, [r5, #20]
   372bc:	bl	34b00 <flatcc_json_printer_fmt_float@@Base+0x8>
   372c0:	ldr	r1, [r5, #20]
   372c4:	add	r0, r1, r0
   372c8:	str	r0, [r5, #20]
   372cc:	vpop	{d8}
   372d0:	pop	{r4, r5, fp, pc}
   372d4:	vldr	s0, [r0]
   372d8:	vcmp.f32	s0, s16
   372dc:	vmrs	APSR_nzcv, fpscr
   372e0:	bne	372f8 <flatcc_json_printer_float_field@@Base+0xcc>
   372e4:	ldrb	r0, [r5, #28]
   372e8:	vmov.f32	s16, s0
   372ec:	cmp	r0, #0
   372f0:	bne	372cc <flatcc_json_printer_float_field@@Base+0xa0>
   372f4:	b	3727c <flatcc_json_printer_float_field@@Base+0x50>
   372f8:	vmov.f32	s16, s0
   372fc:	b	3727c <flatcc_json_printer_float_field@@Base+0x50>

00037300 <flatcc_json_printer_double_field@@Base>:
   37300:	push	{r4, r5, fp, lr}
   37304:	add	fp, sp, #8
   37308:	vpush	{d8}
   3730c:	mov	r5, r0
   37310:	mov	r0, #4
   37314:	vmov.f64	d8, d0
   37318:	add	r0, r0, r2, lsl #1
   3731c:	ldr	r2, [r1, #8]
   37320:	cmp	r0, r2
   37324:	bge	37344 <flatcc_json_printer_double_field@@Base+0x44>
   37328:	ldr	r2, [r1, #4]
   3732c:	add	r0, r2, r0
   37330:	ldrh	r0, [r0]
   37334:	cmp	r0, #0
   37338:	ldrne	r2, [r1]
   3733c:	addsne	r0, r2, r0
   37340:	bne	373a8 <flatcc_json_printer_double_field@@Base+0xa8>
   37344:	ldrb	r0, [r5, #29]
   37348:	cmp	r0, #0
   3734c:	beq	373a0 <flatcc_json_printer_double_field@@Base+0xa0>
   37350:	ldr	r0, [r1, #16]
   37354:	ldr	r2, [fp, #8]
   37358:	add	r4, r0, #1
   3735c:	cmp	r0, #0
   37360:	str	r4, [r1, #16]
   37364:	beq	3737c <flatcc_json_printer_double_field@@Base+0x7c>
   37368:	ldr	r0, [r5, #20]
   3736c:	add	r1, r0, #1
   37370:	str	r1, [r5, #20]
   37374:	mov	r1, #44	; 0x2c
   37378:	strb	r1, [r0]
   3737c:	mov	r0, r5
   37380:	mov	r1, r3
   37384:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37388:	ldr	r0, [r5, #20]
   3738c:	vmov.f64	d0, d8
   37390:	bl	34b00 <flatcc_json_printer_fmt_float@@Base+0x8>
   37394:	ldr	r1, [r5, #20]
   37398:	add	r0, r1, r0
   3739c:	str	r0, [r5, #20]
   373a0:	vpop	{d8}
   373a4:	pop	{r4, r5, fp, pc}
   373a8:	vldr	d16, [r0]
   373ac:	vcmp.f64	d16, d8
   373b0:	vmrs	APSR_nzcv, fpscr
   373b4:	bne	373cc <flatcc_json_printer_double_field@@Base+0xcc>
   373b8:	ldrb	r0, [r5, #28]
   373bc:	vmov.f64	d8, d16
   373c0:	cmp	r0, #0
   373c4:	bne	373a0 <flatcc_json_printer_double_field@@Base+0xa0>
   373c8:	b	37350 <flatcc_json_printer_double_field@@Base+0x50>
   373cc:	vmov.f64	d8, d16
   373d0:	b	37350 <flatcc_json_printer_double_field@@Base+0x50>

000373d4 <flatcc_json_printer_uint8_enum_field@@Base>:
   373d4:	push	{r4, r5, r6, r7, fp, lr}
   373d8:	add	fp, sp, #16
   373dc:	mov	r4, r0
   373e0:	mov	r0, #4
   373e4:	ldr	r7, [fp, #16]
   373e8:	ldr	ip, [fp, #12]
   373ec:	add	r5, r0, r2, lsl #1
   373f0:	ldr	r0, [r1, #8]
   373f4:	ldr	r2, [fp, #8]
   373f8:	cmp	r5, r0
   373fc:	bge	3741c <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   37400:	ldr	r0, [r1, #4]
   37404:	add	r0, r0, r5
   37408:	ldrh	r5, [r0]
   3740c:	cmp	r5, #0
   37410:	ldrne	r0, [r1]
   37414:	addsne	r5, r0, r5
   37418:	bne	3749c <flatcc_json_printer_uint8_enum_field@@Base+0xc8>
   3741c:	ldrb	r0, [r4, #29]
   37420:	mov	r6, ip
   37424:	cmp	r0, #0
   37428:	beq	37484 <flatcc_json_printer_uint8_enum_field@@Base+0xb0>
   3742c:	ldr	r0, [r1, #16]
   37430:	add	r5, r0, #1
   37434:	cmp	r0, #0
   37438:	str	r5, [r1, #16]
   3743c:	beq	37454 <flatcc_json_printer_uint8_enum_field@@Base+0x80>
   37440:	ldr	r0, [r4, #20]
   37444:	add	r1, r0, #1
   37448:	str	r1, [r4, #20]
   3744c:	mov	r1, #44	; 0x2c
   37450:	strb	r1, [r0]
   37454:	mov	r0, r4
   37458:	mov	r1, r3
   3745c:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37460:	ldrb	r0, [r4, #27]
   37464:	cmp	r0, #0
   37468:	beq	37488 <flatcc_json_printer_uint8_enum_field@@Base+0xb4>
   3746c:	ldr	r1, [r4, #20]
   37470:	mov	r0, r6
   37474:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   37478:	ldr	r1, [r4, #20]
   3747c:	add	r0, r1, r0
   37480:	str	r0, [r4, #20]
   37484:	pop	{r4, r5, r6, r7, fp, pc}
   37488:	mov	r0, r4
   3748c:	mov	r1, r6
   37490:	mov	r2, r7
   37494:	pop	{r4, r5, r6, r7, fp, lr}
   37498:	bx	r2
   3749c:	ldrb	r6, [r5]
   374a0:	cmp	r6, ip
   374a4:	bne	3742c <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   374a8:	ldrb	r0, [r4, #28]
   374ac:	mov	r6, ip
   374b0:	cmp	r0, #0
   374b4:	popne	{r4, r5, r6, r7, fp, pc}
   374b8:	b	3742c <flatcc_json_printer_uint8_enum_field@@Base+0x58>

000374bc <flatcc_json_printer_uint16_enum_field@@Base>:
   374bc:	push	{r4, r5, r6, r7, fp, lr}
   374c0:	add	fp, sp, #16
   374c4:	mov	r4, r0
   374c8:	mov	r0, #4
   374cc:	ldr	r7, [fp, #16]
   374d0:	ldr	ip, [fp, #12]
   374d4:	add	r5, r0, r2, lsl #1
   374d8:	ldr	r0, [r1, #8]
   374dc:	ldr	r2, [fp, #8]
   374e0:	cmp	r5, r0
   374e4:	bge	37504 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   374e8:	ldr	r0, [r1, #4]
   374ec:	add	r0, r0, r5
   374f0:	ldrh	r5, [r0]
   374f4:	cmp	r5, #0
   374f8:	ldrne	r0, [r1]
   374fc:	addsne	r5, r0, r5
   37500:	bne	37584 <flatcc_json_printer_uint16_enum_field@@Base+0xc8>
   37504:	ldrb	r0, [r4, #29]
   37508:	mov	r6, ip
   3750c:	cmp	r0, #0
   37510:	beq	3756c <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   37514:	ldr	r0, [r1, #16]
   37518:	add	r5, r0, #1
   3751c:	cmp	r0, #0
   37520:	str	r5, [r1, #16]
   37524:	beq	3753c <flatcc_json_printer_uint16_enum_field@@Base+0x80>
   37528:	ldr	r0, [r4, #20]
   3752c:	add	r1, r0, #1
   37530:	str	r1, [r4, #20]
   37534:	mov	r1, #44	; 0x2c
   37538:	strb	r1, [r0]
   3753c:	mov	r0, r4
   37540:	mov	r1, r3
   37544:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37548:	ldrb	r0, [r4, #27]
   3754c:	cmp	r0, #0
   37550:	beq	37570 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   37554:	ldr	r1, [r4, #20]
   37558:	mov	r0, r6
   3755c:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   37560:	ldr	r1, [r4, #20]
   37564:	add	r0, r1, r0
   37568:	str	r0, [r4, #20]
   3756c:	pop	{r4, r5, r6, r7, fp, pc}
   37570:	mov	r0, r4
   37574:	mov	r1, r6
   37578:	mov	r2, r7
   3757c:	pop	{r4, r5, r6, r7, fp, lr}
   37580:	bx	r2
   37584:	ldrh	r6, [r5]
   37588:	cmp	r6, ip
   3758c:	bne	37514 <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   37590:	ldrb	r0, [r4, #28]
   37594:	mov	r6, ip
   37598:	cmp	r0, #0
   3759c:	popne	{r4, r5, r6, r7, fp, pc}
   375a0:	b	37514 <flatcc_json_printer_uint16_enum_field@@Base+0x58>

000375a4 <flatcc_json_printer_uint32_enum_field@@Base>:
   375a4:	push	{r4, r5, r6, r7, fp, lr}
   375a8:	add	fp, sp, #16
   375ac:	mov	r4, r0
   375b0:	mov	r0, #4
   375b4:	ldr	r7, [fp, #16]
   375b8:	ldr	ip, [fp, #12]
   375bc:	add	r5, r0, r2, lsl #1
   375c0:	ldr	r0, [r1, #8]
   375c4:	ldr	r2, [fp, #8]
   375c8:	cmp	r5, r0
   375cc:	bge	375ec <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   375d0:	ldr	r0, [r1, #4]
   375d4:	add	r0, r0, r5
   375d8:	ldrh	r5, [r0]
   375dc:	cmp	r5, #0
   375e0:	ldrne	r0, [r1]
   375e4:	addsne	r5, r0, r5
   375e8:	bne	3766c <flatcc_json_printer_uint32_enum_field@@Base+0xc8>
   375ec:	ldrb	r0, [r4, #29]
   375f0:	mov	r6, ip
   375f4:	cmp	r0, #0
   375f8:	beq	37654 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   375fc:	ldr	r0, [r1, #16]
   37600:	add	r5, r0, #1
   37604:	cmp	r0, #0
   37608:	str	r5, [r1, #16]
   3760c:	beq	37624 <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   37610:	ldr	r0, [r4, #20]
   37614:	add	r1, r0, #1
   37618:	str	r1, [r4, #20]
   3761c:	mov	r1, #44	; 0x2c
   37620:	strb	r1, [r0]
   37624:	mov	r0, r4
   37628:	mov	r1, r3
   3762c:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37630:	ldrb	r0, [r4, #27]
   37634:	cmp	r0, #0
   37638:	beq	37658 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   3763c:	ldr	r1, [r4, #20]
   37640:	mov	r0, r6
   37644:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   37648:	ldr	r1, [r4, #20]
   3764c:	add	r0, r1, r0
   37650:	str	r0, [r4, #20]
   37654:	pop	{r4, r5, r6, r7, fp, pc}
   37658:	mov	r0, r4
   3765c:	mov	r1, r6
   37660:	mov	r2, r7
   37664:	pop	{r4, r5, r6, r7, fp, lr}
   37668:	bx	r2
   3766c:	ldr	r6, [r5]
   37670:	cmp	r6, ip
   37674:	bne	375fc <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   37678:	ldrb	r0, [r4, #28]
   3767c:	mov	r6, ip
   37680:	cmp	r0, #0
   37684:	popne	{r4, r5, r6, r7, fp, pc}
   37688:	b	375fc <flatcc_json_printer_uint32_enum_field@@Base+0x58>

0003768c <flatcc_json_printer_uint64_enum_field@@Base>:
   3768c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   37690:	add	fp, sp, #24
   37694:	mov	r4, r0
   37698:	mov	r0, #4
   3769c:	ldr	ip, [fp, #20]
   376a0:	ldr	r6, [fp, #16]
   376a4:	ldr	r5, [fp, #24]
   376a8:	add	r7, r0, r2, lsl #1
   376ac:	ldr	r0, [r1, #8]
   376b0:	ldr	r2, [fp, #8]
   376b4:	cmp	r7, r0
   376b8:	bge	376d8 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   376bc:	ldr	r0, [r1, #4]
   376c0:	add	r0, r0, r7
   376c4:	ldrh	r7, [r0]
   376c8:	cmp	r7, #0
   376cc:	ldrne	r0, [r1]
   376d0:	addsne	r7, r0, r7
   376d4:	bne	37764 <flatcc_json_printer_uint64_enum_field@@Base+0xd8>
   376d8:	ldrb	r0, [r4, #29]
   376dc:	mov	r8, r6
   376e0:	mov	r7, ip
   376e4:	cmp	r0, #0
   376e8:	beq	37748 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   376ec:	ldr	r0, [r1, #16]
   376f0:	add	r6, r0, #1
   376f4:	cmp	r0, #0
   376f8:	str	r6, [r1, #16]
   376fc:	beq	37714 <flatcc_json_printer_uint64_enum_field@@Base+0x88>
   37700:	ldr	r0, [r4, #20]
   37704:	add	r1, r0, #1
   37708:	str	r1, [r4, #20]
   3770c:	mov	r1, #44	; 0x2c
   37710:	strb	r1, [r0]
   37714:	mov	r0, r4
   37718:	mov	r1, r3
   3771c:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37720:	ldrb	r0, [r4, #27]
   37724:	cmp	r0, #0
   37728:	beq	3774c <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   3772c:	ldr	r2, [r4, #20]
   37730:	mov	r0, r8
   37734:	mov	r1, r7
   37738:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   3773c:	ldr	r1, [r4, #20]
   37740:	add	r0, r1, r0
   37744:	str	r0, [r4, #20]
   37748:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3774c:	mov	r0, r4
   37750:	mov	r2, r8
   37754:	mov	r3, r7
   37758:	mov	r1, r5
   3775c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   37760:	bx	r1
   37764:	ldr	r8, [r7]
   37768:	ldr	r7, [r7, #4]
   3776c:	eor	lr, r7, ip
   37770:	eor	r0, r8, r6
   37774:	orrs	r0, r0, lr
   37778:	bne	376ec <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   3777c:	ldrb	r0, [r4, #28]
   37780:	mov	r8, r6
   37784:	mov	r7, ip
   37788:	cmp	r0, #0
   3778c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   37790:	b	376ec <flatcc_json_printer_uint64_enum_field@@Base+0x60>

00037794 <flatcc_json_printer_int8_enum_field@@Base>:
   37794:	push	{r4, r5, r6, r7, fp, lr}
   37798:	add	fp, sp, #16
   3779c:	mov	r4, r0
   377a0:	mov	r0, #4
   377a4:	ldr	r5, [r1, #8]
   377a8:	ldr	ip, [fp, #16]
   377ac:	add	r6, r0, r2, lsl #1
   377b0:	ldr	r0, [fp, #12]
   377b4:	ldr	r2, [fp, #8]
   377b8:	cmp	r6, r5
   377bc:	bge	377dc <flatcc_json_printer_int8_enum_field@@Base+0x48>
   377c0:	ldr	r5, [r1, #4]
   377c4:	add	r6, r5, r6
   377c8:	ldrh	r6, [r6]
   377cc:	cmp	r6, #0
   377d0:	ldrne	r5, [r1]
   377d4:	addsne	r6, r5, r6
   377d8:	bne	37880 <flatcc_json_printer_int8_enum_field@@Base+0xec>
   377dc:	ldrb	r6, [r4, #29]
   377e0:	mov	r5, r0
   377e4:	cmp	r6, #0
   377e8:	beq	37868 <flatcc_json_printer_int8_enum_field@@Base+0xd4>
   377ec:	ldr	r0, [r1, #16]
   377f0:	mov	r7, ip
   377f4:	add	r6, r0, #1
   377f8:	cmp	r0, #0
   377fc:	str	r6, [r1, #16]
   37800:	beq	37818 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   37804:	ldr	r0, [r4, #20]
   37808:	add	r1, r0, #1
   3780c:	str	r1, [r4, #20]
   37810:	mov	r1, #44	; 0x2c
   37814:	strb	r1, [r0]
   37818:	mov	r0, r4
   3781c:	mov	r1, r3
   37820:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37824:	ldrb	r0, [r4, #27]
   37828:	cmp	r0, #0
   3782c:	beq	3786c <flatcc_json_printer_int8_enum_field@@Base+0xd8>
   37830:	uxtb	r0, r5
   37834:	ldr	r1, [r4, #20]
   37838:	lsr	r6, r0, #7
   3783c:	sxtb	r0, r5
   37840:	cmn	r0, #1
   37844:	movle	r0, #45	; 0x2d
   37848:	rsble	r5, r5, #0
   3784c:	strble	r0, [r1], #1
   37850:	uxtb	r0, r5
   37854:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   37858:	ldr	r1, [r4, #20]
   3785c:	add	r0, r0, r6
   37860:	add	r0, r1, r0
   37864:	str	r0, [r4, #20]
   37868:	pop	{r4, r5, r6, r7, fp, pc}
   3786c:	sxtb	r1, r5
   37870:	mov	r0, r4
   37874:	mov	r2, r7
   37878:	pop	{r4, r5, r6, r7, fp, lr}
   3787c:	bx	r2
   37880:	ldrb	r5, [r6]
   37884:	uxtb	r6, r0
   37888:	cmp	r5, r6
   3788c:	bne	377ec <flatcc_json_printer_int8_enum_field@@Base+0x58>
   37890:	ldrb	r6, [r4, #28]
   37894:	mov	r5, r0
   37898:	cmp	r6, #0
   3789c:	popne	{r4, r5, r6, r7, fp, pc}
   378a0:	b	377ec <flatcc_json_printer_int8_enum_field@@Base+0x58>

000378a4 <flatcc_json_printer_int16_enum_field@@Base>:
   378a4:	push	{r4, r5, r6, r7, fp, lr}
   378a8:	add	fp, sp, #16
   378ac:	mov	r4, r0
   378b0:	mov	r0, #4
   378b4:	ldr	r5, [r1, #8]
   378b8:	ldr	ip, [fp, #16]
   378bc:	add	r6, r0, r2, lsl #1
   378c0:	ldr	r0, [fp, #12]
   378c4:	ldr	r2, [fp, #8]
   378c8:	cmp	r6, r5
   378cc:	bge	378ec <flatcc_json_printer_int16_enum_field@@Base+0x48>
   378d0:	ldr	r5, [r1, #4]
   378d4:	add	r6, r5, r6
   378d8:	ldrh	r6, [r6]
   378dc:	cmp	r6, #0
   378e0:	ldrne	r5, [r1]
   378e4:	addsne	r6, r5, r6
   378e8:	bne	37990 <flatcc_json_printer_int16_enum_field@@Base+0xec>
   378ec:	ldrb	r6, [r4, #29]
   378f0:	mov	r5, r0
   378f4:	cmp	r6, #0
   378f8:	beq	37978 <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   378fc:	ldr	r0, [r1, #16]
   37900:	mov	r7, ip
   37904:	add	r6, r0, #1
   37908:	cmp	r0, #0
   3790c:	str	r6, [r1, #16]
   37910:	beq	37928 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   37914:	ldr	r0, [r4, #20]
   37918:	add	r1, r0, #1
   3791c:	str	r1, [r4, #20]
   37920:	mov	r1, #44	; 0x2c
   37924:	strb	r1, [r0]
   37928:	mov	r0, r4
   3792c:	mov	r1, r3
   37930:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37934:	ldrb	r0, [r4, #27]
   37938:	cmp	r0, #0
   3793c:	beq	3797c <flatcc_json_printer_int16_enum_field@@Base+0xd8>
   37940:	uxth	r0, r5
   37944:	ldr	r1, [r4, #20]
   37948:	lsr	r6, r0, #15
   3794c:	sxth	r0, r5
   37950:	cmn	r0, #1
   37954:	movle	r0, #45	; 0x2d
   37958:	rsble	r5, r5, #0
   3795c:	strble	r0, [r1], #1
   37960:	uxth	r0, r5
   37964:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   37968:	ldr	r1, [r4, #20]
   3796c:	add	r0, r0, r6
   37970:	add	r0, r1, r0
   37974:	str	r0, [r4, #20]
   37978:	pop	{r4, r5, r6, r7, fp, pc}
   3797c:	sxth	r1, r5
   37980:	mov	r0, r4
   37984:	mov	r2, r7
   37988:	pop	{r4, r5, r6, r7, fp, lr}
   3798c:	bx	r2
   37990:	ldrh	r5, [r6]
   37994:	uxth	r6, r0
   37998:	cmp	r5, r6
   3799c:	bne	378fc <flatcc_json_printer_int16_enum_field@@Base+0x58>
   379a0:	ldrb	r6, [r4, #28]
   379a4:	mov	r5, r0
   379a8:	cmp	r6, #0
   379ac:	popne	{r4, r5, r6, r7, fp, pc}
   379b0:	b	378fc <flatcc_json_printer_int16_enum_field@@Base+0x58>

000379b4 <flatcc_json_printer_int32_enum_field@@Base>:
   379b4:	push	{r4, r5, r6, r7, fp, lr}
   379b8:	add	fp, sp, #16
   379bc:	mov	r4, r0
   379c0:	mov	r0, #4
   379c4:	ldr	r5, [r1, #8]
   379c8:	ldr	ip, [fp, #16]
   379cc:	add	r6, r0, r2, lsl #1
   379d0:	ldr	r0, [fp, #12]
   379d4:	ldr	r2, [fp, #8]
   379d8:	cmp	r6, r5
   379dc:	bge	379fc <flatcc_json_printer_int32_enum_field@@Base+0x48>
   379e0:	ldr	r5, [r1, #4]
   379e4:	add	r6, r5, r6
   379e8:	ldrh	r6, [r6]
   379ec:	cmp	r6, #0
   379f0:	ldrne	r5, [r1]
   379f4:	addsne	r6, r5, r6
   379f8:	bne	37a98 <flatcc_json_printer_int32_enum_field@@Base+0xe4>
   379fc:	ldrb	r6, [r4, #29]
   37a00:	mov	r5, r0
   37a04:	cmp	r6, #0
   37a08:	beq	37a80 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   37a0c:	ldr	r0, [r1, #16]
   37a10:	mov	r7, ip
   37a14:	add	r6, r0, #1
   37a18:	cmp	r0, #0
   37a1c:	str	r6, [r1, #16]
   37a20:	beq	37a38 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   37a24:	ldr	r0, [r4, #20]
   37a28:	add	r1, r0, #1
   37a2c:	str	r1, [r4, #20]
   37a30:	mov	r1, #44	; 0x2c
   37a34:	strb	r1, [r0]
   37a38:	mov	r0, r4
   37a3c:	mov	r1, r3
   37a40:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37a44:	ldrb	r0, [r4, #27]
   37a48:	cmp	r0, #0
   37a4c:	beq	37a84 <flatcc_json_printer_int32_enum_field@@Base+0xd0>
   37a50:	ldr	r1, [r4, #20]
   37a54:	cmn	r5, #1
   37a58:	lsr	r6, r5, #31
   37a5c:	movle	r0, #45	; 0x2d
   37a60:	rsble	r5, r5, #0
   37a64:	strble	r0, [r1], #1
   37a68:	mov	r0, r5
   37a6c:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   37a70:	ldr	r1, [r4, #20]
   37a74:	add	r0, r0, r6
   37a78:	add	r0, r1, r0
   37a7c:	str	r0, [r4, #20]
   37a80:	pop	{r4, r5, r6, r7, fp, pc}
   37a84:	mov	r0, r4
   37a88:	mov	r1, r5
   37a8c:	mov	r2, r7
   37a90:	pop	{r4, r5, r6, r7, fp, lr}
   37a94:	bx	r2
   37a98:	ldr	r5, [r6]
   37a9c:	cmp	r5, r0
   37aa0:	bne	37a0c <flatcc_json_printer_int32_enum_field@@Base+0x58>
   37aa4:	ldrb	r6, [r4, #28]
   37aa8:	mov	r5, r0
   37aac:	cmp	r6, #0
   37ab0:	popne	{r4, r5, r6, r7, fp, pc}
   37ab4:	b	37a0c <flatcc_json_printer_int32_enum_field@@Base+0x58>

00037ab8 <flatcc_json_printer_int64_enum_field@@Base>:
   37ab8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   37abc:	add	fp, sp, #24
   37ac0:	mov	r4, r0
   37ac4:	mov	r0, #4
   37ac8:	ldr	r5, [r1, #8]
   37acc:	ldr	r6, [fp, #16]
   37ad0:	ldr	r9, [fp, #24]
   37ad4:	add	r7, r0, r2, lsl #1
   37ad8:	ldr	r0, [fp, #20]
   37adc:	ldr	r2, [fp, #8]
   37ae0:	cmp	r7, r5
   37ae4:	bge	37b04 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   37ae8:	ldr	r5, [r1, #4]
   37aec:	add	r7, r5, r7
   37af0:	ldrh	r7, [r7]
   37af4:	cmp	r7, #0
   37af8:	ldrne	r5, [r1]
   37afc:	addsne	r7, r5, r7
   37b00:	bne	37bb0 <flatcc_json_printer_int64_enum_field@@Base+0xf8>
   37b04:	ldrb	r7, [r4, #29]
   37b08:	mov	r8, r6
   37b0c:	cmp	r7, #0
   37b10:	mov	r7, r0
   37b14:	beq	37b94 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   37b18:	ldr	r0, [r1, #16]
   37b1c:	add	r6, r0, #1
   37b20:	cmp	r0, #0
   37b24:	str	r6, [r1, #16]
   37b28:	beq	37b40 <flatcc_json_printer_int64_enum_field@@Base+0x88>
   37b2c:	ldr	r0, [r4, #20]
   37b30:	add	r1, r0, #1
   37b34:	str	r1, [r4, #20]
   37b38:	mov	r1, #44	; 0x2c
   37b3c:	strb	r1, [r0]
   37b40:	mov	r0, r4
   37b44:	mov	r1, r3
   37b48:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37b4c:	ldrb	r0, [r4, #27]
   37b50:	cmp	r0, #0
   37b54:	beq	37b98 <flatcc_json_printer_int64_enum_field@@Base+0xe0>
   37b58:	ldr	r2, [r4, #20]
   37b5c:	lsr	r5, r7, #31
   37b60:	cmn	r7, #1
   37b64:	bgt	37b78 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   37b68:	mov	r0, #45	; 0x2d
   37b6c:	rsbs	r8, r8, #0
   37b70:	strb	r0, [r2], #1
   37b74:	rsc	r7, r7, #0
   37b78:	mov	r0, r8
   37b7c:	mov	r1, r7
   37b80:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   37b84:	ldr	r1, [r4, #20]
   37b88:	add	r0, r0, r5
   37b8c:	add	r0, r1, r0
   37b90:	str	r0, [r4, #20]
   37b94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   37b98:	mov	r0, r4
   37b9c:	mov	r2, r8
   37ba0:	mov	r3, r7
   37ba4:	mov	r1, r9
   37ba8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   37bac:	bx	r1
   37bb0:	ldr	r8, [r7]
   37bb4:	ldr	r7, [r7, #4]
   37bb8:	eor	ip, r7, r0
   37bbc:	eor	r5, r8, r6
   37bc0:	orrs	r5, r5, ip
   37bc4:	bne	37b18 <flatcc_json_printer_int64_enum_field@@Base+0x60>
   37bc8:	ldrb	r7, [r4, #28]
   37bcc:	mov	r8, r6
   37bd0:	cmp	r7, #0
   37bd4:	mov	r7, r0
   37bd8:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   37bdc:	b	37b18 <flatcc_json_printer_int64_enum_field@@Base+0x60>

00037be0 <flatcc_json_printer_bool_enum_field@@Base>:
   37be0:	push	{r4, r5, r6, r7, fp, lr}
   37be4:	add	fp, sp, #16
   37be8:	mov	r4, r0
   37bec:	mov	r0, #4
   37bf0:	ldr	r7, [fp, #16]
   37bf4:	ldr	ip, [fp, #12]
   37bf8:	add	r5, r0, r2, lsl #1
   37bfc:	ldr	r0, [r1, #8]
   37c00:	ldr	r2, [fp, #8]
   37c04:	cmp	r5, r0
   37c08:	bge	37c28 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   37c0c:	ldr	r0, [r1, #4]
   37c10:	add	r0, r0, r5
   37c14:	ldrh	r5, [r0]
   37c18:	cmp	r5, #0
   37c1c:	ldrne	r0, [r1]
   37c20:	addsne	r5, r0, r5
   37c24:	bne	37cdc <flatcc_json_printer_bool_enum_field@@Base+0xfc>
   37c28:	ldrb	r0, [r4, #29]
   37c2c:	mov	r6, ip
   37c30:	cmp	r0, #0
   37c34:	beq	37cd8 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   37c38:	ldr	r0, [r1, #16]
   37c3c:	add	r5, r0, #1
   37c40:	cmp	r0, #0
   37c44:	str	r5, [r1, #16]
   37c48:	beq	37c60 <flatcc_json_printer_bool_enum_field@@Base+0x80>
   37c4c:	ldr	r0, [r4, #20]
   37c50:	add	r1, r0, #1
   37c54:	str	r1, [r4, #20]
   37c58:	mov	r1, #44	; 0x2c
   37c5c:	strb	r1, [r0]
   37c60:	mov	r0, r4
   37c64:	mov	r1, r3
   37c68:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37c6c:	ldrb	r0, [r4, #27]
   37c70:	cmp	r0, #0
   37c74:	beq	37ca0 <flatcc_json_printer_bool_enum_field@@Base+0xc0>
   37c78:	ldr	r0, [r4, #20]
   37c7c:	cmp	r6, #0
   37c80:	beq	37cb4 <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   37c84:	mov	r1, #0
   37c88:	strb	r1, [r0, #4]
   37c8c:	movw	r1, #29300	; 0x7274
   37c90:	movt	r1, #25973	; 0x6575
   37c94:	str	r1, [r0]
   37c98:	mov	r0, #4
   37c9c:	b	37ccc <flatcc_json_printer_bool_enum_field@@Base+0xec>
   37ca0:	mov	r0, r4
   37ca4:	mov	r1, r6
   37ca8:	mov	r2, r7
   37cac:	pop	{r4, r5, r6, r7, fp, lr}
   37cb0:	bx	r2
   37cb4:	mov	r1, #101	; 0x65
   37cb8:	strh	r1, [r0, #4]
   37cbc:	movw	r1, #24934	; 0x6166
   37cc0:	movt	r1, #29548	; 0x736c
   37cc4:	str	r1, [r0]
   37cc8:	mov	r0, #5
   37ccc:	ldr	r1, [r4, #20]
   37cd0:	add	r0, r1, r0
   37cd4:	str	r0, [r4, #20]
   37cd8:	pop	{r4, r5, r6, r7, fp, pc}
   37cdc:	ldrb	r6, [r5]
   37ce0:	cmp	r6, ip
   37ce4:	bne	37c38 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   37ce8:	ldrb	r0, [r4, #28]
   37cec:	mov	r6, ip
   37cf0:	cmp	r0, #0
   37cf4:	popne	{r4, r5, r6, r7, fp, pc}
   37cf8:	b	37c38 <flatcc_json_printer_bool_enum_field@@Base+0x58>

00037cfc <flatcc_json_printer_uint8_struct_field@@Base>:
   37cfc:	push	{r4, r5, r6, sl, fp, lr}
   37d00:	add	fp, sp, #16
   37d04:	mov	r5, r1
   37d08:	ldrb	r6, [r2, r3]
   37d0c:	ldr	r2, [fp, #12]
   37d10:	ldr	r1, [fp, #8]
   37d14:	mov	r4, r0
   37d18:	cmp	r5, #0
   37d1c:	beq	37d34 <flatcc_json_printer_uint8_struct_field@@Base+0x38>
   37d20:	ldr	r0, [r4, #20]
   37d24:	add	r3, r0, #1
   37d28:	str	r3, [r4, #20]
   37d2c:	mov	r3, #44	; 0x2c
   37d30:	strb	r3, [r0]
   37d34:	mov	r0, r4
   37d38:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37d3c:	ldr	r1, [r4, #20]
   37d40:	mov	r0, r6
   37d44:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   37d48:	ldr	r1, [r4, #20]
   37d4c:	add	r0, r1, r0
   37d50:	str	r0, [r4, #20]
   37d54:	pop	{r4, r5, r6, sl, fp, pc}

00037d58 <flatcc_json_printer_uint16_struct_field@@Base>:
   37d58:	push	{r4, r5, r6, sl, fp, lr}
   37d5c:	add	fp, sp, #16
   37d60:	mov	r4, r0
   37d64:	add	r0, r2, r3
   37d68:	mov	r5, r1
   37d6c:	ldr	r2, [fp, #12]
   37d70:	ldr	r1, [fp, #8]
   37d74:	ldrh	r6, [r0]
   37d78:	cmp	r5, #0
   37d7c:	beq	37d94 <flatcc_json_printer_uint16_struct_field@@Base+0x3c>
   37d80:	ldr	r0, [r4, #20]
   37d84:	add	r3, r0, #1
   37d88:	str	r3, [r4, #20]
   37d8c:	mov	r3, #44	; 0x2c
   37d90:	strb	r3, [r0]
   37d94:	mov	r0, r4
   37d98:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37d9c:	ldr	r1, [r4, #20]
   37da0:	mov	r0, r6
   37da4:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   37da8:	ldr	r1, [r4, #20]
   37dac:	add	r0, r1, r0
   37db0:	str	r0, [r4, #20]
   37db4:	pop	{r4, r5, r6, sl, fp, pc}

00037db8 <flatcc_json_printer_uint32_struct_field@@Base>:
   37db8:	push	{r4, r5, r6, sl, fp, lr}
   37dbc:	add	fp, sp, #16
   37dc0:	mov	r5, r1
   37dc4:	ldr	r6, [r2, r3]
   37dc8:	ldr	r2, [fp, #12]
   37dcc:	ldr	r1, [fp, #8]
   37dd0:	mov	r4, r0
   37dd4:	cmp	r5, #0
   37dd8:	beq	37df0 <flatcc_json_printer_uint32_struct_field@@Base+0x38>
   37ddc:	ldr	r0, [r4, #20]
   37de0:	add	r3, r0, #1
   37de4:	str	r3, [r4, #20]
   37de8:	mov	r3, #44	; 0x2c
   37dec:	strb	r3, [r0]
   37df0:	mov	r0, r4
   37df4:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37df8:	ldr	r1, [r4, #20]
   37dfc:	mov	r0, r6
   37e00:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   37e04:	ldr	r1, [r4, #20]
   37e08:	add	r0, r1, r0
   37e0c:	str	r0, [r4, #20]
   37e10:	pop	{r4, r5, r6, sl, fp, pc}

00037e14 <flatcc_json_printer_uint64_struct_field@@Base>:
   37e14:	push	{r4, r5, r6, r7, fp, lr}
   37e18:	add	fp, sp, #16
   37e1c:	ldr	r7, [r2, r3]!
   37e20:	mov	r5, r1
   37e24:	ldr	r1, [fp, #8]
   37e28:	mov	r4, r0
   37e2c:	cmp	r5, #0
   37e30:	ldr	r6, [r2, #4]
   37e34:	ldr	r2, [fp, #12]
   37e38:	beq	37e50 <flatcc_json_printer_uint64_struct_field@@Base+0x3c>
   37e3c:	ldr	r0, [r4, #20]
   37e40:	add	r3, r0, #1
   37e44:	str	r3, [r4, #20]
   37e48:	mov	r3, #44	; 0x2c
   37e4c:	strb	r3, [r0]
   37e50:	mov	r0, r4
   37e54:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37e58:	ldr	r2, [r4, #20]
   37e5c:	mov	r0, r7
   37e60:	mov	r1, r6
   37e64:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   37e68:	ldr	r1, [r4, #20]
   37e6c:	add	r0, r1, r0
   37e70:	str	r0, [r4, #20]
   37e74:	pop	{r4, r5, r6, r7, fp, pc}

00037e78 <flatcc_json_printer_int8_struct_field@@Base>:
   37e78:	push	{r4, r5, r6, sl, fp, lr}
   37e7c:	add	fp, sp, #16
   37e80:	mov	r4, r0
   37e84:	add	r0, r2, r3
   37e88:	mov	ip, r1
   37e8c:	ldr	r2, [fp, #12]
   37e90:	ldr	r1, [fp, #8]
   37e94:	ldrsb	r5, [r0]
   37e98:	cmp	ip, #0
   37e9c:	beq	37eb4 <flatcc_json_printer_int8_struct_field@@Base+0x3c>
   37ea0:	ldr	r0, [r4, #20]
   37ea4:	add	r3, r0, #1
   37ea8:	str	r3, [r4, #20]
   37eac:	mov	r3, #44	; 0x2c
   37eb0:	strb	r3, [r0]
   37eb4:	mov	r0, r4
   37eb8:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37ebc:	ldr	r1, [r4, #20]
   37ec0:	uxtb	r0, r5
   37ec4:	cmn	r5, #1
   37ec8:	rsble	r5, r5, #0
   37ecc:	lsr	r6, r0, #7
   37ed0:	movle	r0, #45	; 0x2d
   37ed4:	strble	r0, [r1], #1
   37ed8:	uxtb	r0, r5
   37edc:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   37ee0:	ldr	r1, [r4, #20]
   37ee4:	add	r0, r0, r6
   37ee8:	add	r0, r1, r0
   37eec:	str	r0, [r4, #20]
   37ef0:	pop	{r4, r5, r6, sl, fp, pc}

00037ef4 <flatcc_json_printer_int16_struct_field@@Base>:
   37ef4:	push	{r4, r5, r6, sl, fp, lr}
   37ef8:	add	fp, sp, #16
   37efc:	mov	r4, r0
   37f00:	add	r0, r2, r3
   37f04:	mov	ip, r1
   37f08:	ldr	r2, [fp, #12]
   37f0c:	ldr	r1, [fp, #8]
   37f10:	ldrsh	r5, [r0]
   37f14:	cmp	ip, #0
   37f18:	beq	37f30 <flatcc_json_printer_int16_struct_field@@Base+0x3c>
   37f1c:	ldr	r0, [r4, #20]
   37f20:	add	r3, r0, #1
   37f24:	str	r3, [r4, #20]
   37f28:	mov	r3, #44	; 0x2c
   37f2c:	strb	r3, [r0]
   37f30:	mov	r0, r4
   37f34:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37f38:	ldr	r1, [r4, #20]
   37f3c:	uxth	r0, r5
   37f40:	cmn	r5, #1
   37f44:	rsble	r5, r5, #0
   37f48:	lsr	r6, r0, #15
   37f4c:	movle	r0, #45	; 0x2d
   37f50:	strble	r0, [r1], #1
   37f54:	uxth	r0, r5
   37f58:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   37f5c:	ldr	r1, [r4, #20]
   37f60:	add	r0, r0, r6
   37f64:	add	r0, r1, r0
   37f68:	str	r0, [r4, #20]
   37f6c:	pop	{r4, r5, r6, sl, fp, pc}

00037f70 <flatcc_json_printer_int32_struct_field@@Base>:
   37f70:	push	{r4, r5, r6, sl, fp, lr}
   37f74:	add	fp, sp, #16
   37f78:	mov	ip, r1
   37f7c:	ldr	r5, [r2, r3]
   37f80:	ldr	r2, [fp, #12]
   37f84:	ldr	r1, [fp, #8]
   37f88:	mov	r4, r0
   37f8c:	cmp	ip, #0
   37f90:	beq	37fa8 <flatcc_json_printer_int32_struct_field@@Base+0x38>
   37f94:	ldr	r0, [r4, #20]
   37f98:	add	r3, r0, #1
   37f9c:	str	r3, [r4, #20]
   37fa0:	mov	r3, #44	; 0x2c
   37fa4:	strb	r3, [r0]
   37fa8:	mov	r0, r4
   37fac:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   37fb0:	ldr	r1, [r4, #20]
   37fb4:	cmn	r5, #1
   37fb8:	lsr	r6, r5, #31
   37fbc:	movle	r0, #45	; 0x2d
   37fc0:	rsble	r5, r5, #0
   37fc4:	strble	r0, [r1], #1
   37fc8:	mov	r0, r5
   37fcc:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   37fd0:	ldr	r1, [r4, #20]
   37fd4:	add	r0, r0, r6
   37fd8:	add	r0, r1, r0
   37fdc:	str	r0, [r4, #20]
   37fe0:	pop	{r4, r5, r6, sl, fp, pc}

00037fe4 <flatcc_json_printer_int64_struct_field@@Base>:
   37fe4:	push	{r4, r5, r6, r7, fp, lr}
   37fe8:	add	fp, sp, #16
   37fec:	ldr	r7, [r2, r3]!
   37ff0:	mov	r5, r1
   37ff4:	ldr	r1, [fp, #8]
   37ff8:	mov	r4, r0
   37ffc:	cmp	r5, #0
   38000:	ldr	r6, [r2, #4]
   38004:	ldr	r2, [fp, #12]
   38008:	beq	38020 <flatcc_json_printer_int64_struct_field@@Base+0x3c>
   3800c:	ldr	r0, [r4, #20]
   38010:	add	r3, r0, #1
   38014:	str	r3, [r4, #20]
   38018:	mov	r3, #44	; 0x2c
   3801c:	strb	r3, [r0]
   38020:	mov	r0, r4
   38024:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   38028:	ldr	r2, [r4, #20]
   3802c:	lsr	r5, r6, #31
   38030:	cmn	r6, #1
   38034:	bgt	38048 <flatcc_json_printer_int64_struct_field@@Base+0x64>
   38038:	mov	r0, #45	; 0x2d
   3803c:	rsbs	r7, r7, #0
   38040:	strb	r0, [r2], #1
   38044:	rsc	r6, r6, #0
   38048:	mov	r0, r7
   3804c:	mov	r1, r6
   38050:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   38054:	ldr	r1, [r4, #20]
   38058:	add	r0, r0, r5
   3805c:	add	r0, r1, r0
   38060:	str	r0, [r4, #20]
   38064:	pop	{r4, r5, r6, r7, fp, pc}

00038068 <flatcc_json_printer_bool_struct_field@@Base>:
   38068:	push	{r4, r5, fp, lr}
   3806c:	add	fp, sp, #8
   38070:	mov	ip, r1
   38074:	ldrb	r5, [r2, r3]
   38078:	ldr	r2, [fp, #12]
   3807c:	ldr	r1, [fp, #8]
   38080:	mov	r4, r0
   38084:	cmp	ip, #0
   38088:	beq	380a0 <flatcc_json_printer_bool_struct_field@@Base+0x38>
   3808c:	ldr	r0, [r4, #20]
   38090:	add	r3, r0, #1
   38094:	str	r3, [r4, #20]
   38098:	mov	r3, #44	; 0x2c
   3809c:	strb	r3, [r0]
   380a0:	mov	r0, r4
   380a4:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   380a8:	ldr	r0, [r4, #20]
   380ac:	cmp	r5, #0
   380b0:	beq	380d0 <flatcc_json_printer_bool_struct_field@@Base+0x68>
   380b4:	mov	r1, #0
   380b8:	strb	r1, [r0, #4]
   380bc:	movw	r1, #29300	; 0x7274
   380c0:	movt	r1, #25973	; 0x6575
   380c4:	str	r1, [r0]
   380c8:	mov	r0, #4
   380cc:	b	380e8 <flatcc_json_printer_bool_struct_field@@Base+0x80>
   380d0:	mov	r1, #101	; 0x65
   380d4:	strh	r1, [r0, #4]
   380d8:	movw	r1, #24934	; 0x6166
   380dc:	movt	r1, #29548	; 0x736c
   380e0:	str	r1, [r0]
   380e4:	mov	r0, #5
   380e8:	ldr	r1, [r4, #20]
   380ec:	add	r0, r1, r0
   380f0:	str	r0, [r4, #20]
   380f4:	pop	{r4, r5, fp, pc}

000380f8 <flatcc_json_printer_float_struct_field@@Base>:
   380f8:	push	{r4, sl, fp, lr}
   380fc:	add	fp, sp, #8
   38100:	vpush	{d8}
   38104:	mov	r4, r0
   38108:	add	r0, r2, r3
   3810c:	mov	ip, r1
   38110:	ldr	r2, [fp, #12]
   38114:	ldr	r1, [fp, #8]
   38118:	vldr	s16, [r0]
   3811c:	cmp	ip, #0
   38120:	beq	38138 <flatcc_json_printer_float_struct_field@@Base+0x40>
   38124:	ldr	r0, [r4, #20]
   38128:	add	r3, r0, #1
   3812c:	str	r3, [r4, #20]
   38130:	mov	r3, #44	; 0x2c
   38134:	strb	r3, [r0]
   38138:	mov	r0, r4
   3813c:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   38140:	vcvt.f64.f32	d0, s16
   38144:	ldr	r0, [r4, #20]
   38148:	bl	34b00 <flatcc_json_printer_fmt_float@@Base+0x8>
   3814c:	ldr	r1, [r4, #20]
   38150:	add	r0, r1, r0
   38154:	str	r0, [r4, #20]
   38158:	vpop	{d8}
   3815c:	pop	{r4, sl, fp, pc}

00038160 <flatcc_json_printer_double_struct_field@@Base>:
   38160:	push	{r4, sl, fp, lr}
   38164:	add	fp, sp, #8
   38168:	vpush	{d8}
   3816c:	mov	r4, r0
   38170:	add	r0, r2, r3
   38174:	mov	ip, r1
   38178:	ldr	r2, [fp, #12]
   3817c:	ldr	r1, [fp, #8]
   38180:	vldr	d8, [r0]
   38184:	cmp	ip, #0
   38188:	beq	381a0 <flatcc_json_printer_double_struct_field@@Base+0x40>
   3818c:	ldr	r0, [r4, #20]
   38190:	add	r3, r0, #1
   38194:	str	r3, [r4, #20]
   38198:	mov	r3, #44	; 0x2c
   3819c:	strb	r3, [r0]
   381a0:	mov	r0, r4
   381a4:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   381a8:	ldr	r0, [r4, #20]
   381ac:	vorr	d0, d8, d8
   381b0:	bl	34b00 <flatcc_json_printer_fmt_float@@Base+0x8>
   381b4:	ldr	r1, [r4, #20]
   381b8:	add	r0, r1, r0
   381bc:	str	r0, [r4, #20]
   381c0:	vpop	{d8}
   381c4:	pop	{r4, sl, fp, pc}

000381c8 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   381c8:	push	{r4, r5, r6, r7, fp, lr}
   381cc:	add	fp, sp, #16
   381d0:	add	r7, fp, #8
   381d4:	mov	r5, r1
   381d8:	ldrb	r6, [r2, r3]
   381dc:	mov	r4, r0
   381e0:	ldm	r7, {r1, r2, r7}
   381e4:	cmp	r5, #0
   381e8:	beq	38200 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x38>
   381ec:	ldr	r0, [r4, #20]
   381f0:	add	r3, r0, #1
   381f4:	str	r3, [r4, #20]
   381f8:	mov	r3, #44	; 0x2c
   381fc:	strb	r3, [r0]
   38200:	mov	r0, r4
   38204:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   38208:	ldrb	r0, [r4, #27]
   3820c:	cmp	r0, #0
   38210:	beq	38230 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x68>
   38214:	ldr	r1, [r4, #20]
   38218:	mov	r0, r6
   3821c:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   38220:	ldr	r1, [r4, #20]
   38224:	add	r0, r1, r0
   38228:	str	r0, [r4, #20]
   3822c:	pop	{r4, r5, r6, r7, fp, pc}
   38230:	mov	r0, r4
   38234:	mov	r1, r6
   38238:	mov	r2, r7
   3823c:	pop	{r4, r5, r6, r7, fp, lr}
   38240:	bx	r2

00038244 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   38244:	push	{r4, r5, r6, r7, fp, lr}
   38248:	add	fp, sp, #16
   3824c:	mov	r4, r0
   38250:	add	r0, r2, r3
   38254:	add	r7, fp, #8
   38258:	mov	r5, r1
   3825c:	ldrh	r6, [r0]
   38260:	ldm	r7, {r1, r2, r7}
   38264:	cmp	r5, #0
   38268:	beq	38280 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x3c>
   3826c:	ldr	r0, [r4, #20]
   38270:	add	r3, r0, #1
   38274:	str	r3, [r4, #20]
   38278:	mov	r3, #44	; 0x2c
   3827c:	strb	r3, [r0]
   38280:	mov	r0, r4
   38284:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   38288:	ldrb	r0, [r4, #27]
   3828c:	cmp	r0, #0
   38290:	beq	382b0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x6c>
   38294:	ldr	r1, [r4, #20]
   38298:	mov	r0, r6
   3829c:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   382a0:	ldr	r1, [r4, #20]
   382a4:	add	r0, r1, r0
   382a8:	str	r0, [r4, #20]
   382ac:	pop	{r4, r5, r6, r7, fp, pc}
   382b0:	mov	r0, r4
   382b4:	mov	r1, r6
   382b8:	mov	r2, r7
   382bc:	pop	{r4, r5, r6, r7, fp, lr}
   382c0:	bx	r2

000382c4 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   382c4:	push	{r4, r5, r6, r7, fp, lr}
   382c8:	add	fp, sp, #16
   382cc:	add	r7, fp, #8
   382d0:	mov	r5, r1
   382d4:	ldr	r6, [r2, r3]
   382d8:	mov	r4, r0
   382dc:	ldm	r7, {r1, r2, r7}
   382e0:	cmp	r5, #0
   382e4:	beq	382fc <flatcc_json_printer_uint32_enum_struct_field@@Base+0x38>
   382e8:	ldr	r0, [r4, #20]
   382ec:	add	r3, r0, #1
   382f0:	str	r3, [r4, #20]
   382f4:	mov	r3, #44	; 0x2c
   382f8:	strb	r3, [r0]
   382fc:	mov	r0, r4
   38300:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   38304:	ldrb	r0, [r4, #27]
   38308:	cmp	r0, #0
   3830c:	beq	3832c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x68>
   38310:	ldr	r1, [r4, #20]
   38314:	mov	r0, r6
   38318:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   3831c:	ldr	r1, [r4, #20]
   38320:	add	r0, r1, r0
   38324:	str	r0, [r4, #20]
   38328:	pop	{r4, r5, r6, r7, fp, pc}
   3832c:	mov	r0, r4
   38330:	mov	r1, r6
   38334:	mov	r2, r7
   38338:	pop	{r4, r5, r6, r7, fp, lr}
   3833c:	bx	r2

00038340 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   38340:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   38344:	add	fp, sp, #24
   38348:	ldr	r6, [r2, r3]!
   3834c:	add	r8, fp, #8
   38350:	mov	r5, r1
   38354:	mov	r4, r0
   38358:	cmp	r5, #0
   3835c:	ldr	r7, [r2, #4]
   38360:	ldm	r8, {r1, r2, r8}
   38364:	beq	3837c <flatcc_json_printer_uint64_enum_struct_field@@Base+0x3c>
   38368:	ldr	r0, [r4, #20]
   3836c:	add	r3, r0, #1
   38370:	str	r3, [r4, #20]
   38374:	mov	r3, #44	; 0x2c
   38378:	strb	r3, [r0]
   3837c:	mov	r0, r4
   38380:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   38384:	ldrb	r0, [r4, #27]
   38388:	cmp	r0, #0
   3838c:	beq	383b0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   38390:	ldr	r2, [r4, #20]
   38394:	mov	r0, r6
   38398:	mov	r1, r7
   3839c:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   383a0:	ldr	r1, [r4, #20]
   383a4:	add	r0, r1, r0
   383a8:	str	r0, [r4, #20]
   383ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   383b0:	mov	r0, r4
   383b4:	mov	r2, r6
   383b8:	mov	r3, r7
   383bc:	mov	r1, r8
   383c0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   383c4:	bx	r1

000383c8 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   383c8:	push	{r4, r5, r6, r7, fp, lr}
   383cc:	add	fp, sp, #16
   383d0:	mov	r4, r0
   383d4:	add	r0, r2, r3
   383d8:	add	r7, fp, #8
   383dc:	mov	r5, r1
   383e0:	ldrsb	r6, [r0]
   383e4:	ldm	r7, {r1, r2, r7}
   383e8:	cmp	r5, #0
   383ec:	beq	38404 <flatcc_json_printer_int8_enum_struct_field@@Base+0x3c>
   383f0:	ldr	r0, [r4, #20]
   383f4:	add	r3, r0, #1
   383f8:	str	r3, [r4, #20]
   383fc:	mov	r3, #44	; 0x2c
   38400:	strb	r3, [r0]
   38404:	mov	r0, r4
   38408:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3840c:	ldrb	r0, [r4, #27]
   38410:	cmp	r0, #0
   38414:	beq	38450 <flatcc_json_printer_int8_enum_struct_field@@Base+0x88>
   38418:	ldr	r1, [r4, #20]
   3841c:	uxtb	r0, r6
   38420:	cmn	r6, #1
   38424:	rsble	r6, r6, #0
   38428:	lsr	r5, r0, #7
   3842c:	movle	r0, #45	; 0x2d
   38430:	strble	r0, [r1], #1
   38434:	uxtb	r0, r6
   38438:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   3843c:	ldr	r1, [r4, #20]
   38440:	add	r0, r0, r5
   38444:	add	r0, r1, r0
   38448:	str	r0, [r4, #20]
   3844c:	pop	{r4, r5, r6, r7, fp, pc}
   38450:	mov	r0, r4
   38454:	mov	r1, r6
   38458:	mov	r2, r7
   3845c:	pop	{r4, r5, r6, r7, fp, lr}
   38460:	bx	r2

00038464 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   38464:	push	{r4, r5, r6, r7, fp, lr}
   38468:	add	fp, sp, #16
   3846c:	mov	r4, r0
   38470:	add	r0, r2, r3
   38474:	add	r7, fp, #8
   38478:	mov	r5, r1
   3847c:	ldrsh	r6, [r0]
   38480:	ldm	r7, {r1, r2, r7}
   38484:	cmp	r5, #0
   38488:	beq	384a0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x3c>
   3848c:	ldr	r0, [r4, #20]
   38490:	add	r3, r0, #1
   38494:	str	r3, [r4, #20]
   38498:	mov	r3, #44	; 0x2c
   3849c:	strb	r3, [r0]
   384a0:	mov	r0, r4
   384a4:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   384a8:	ldrb	r0, [r4, #27]
   384ac:	cmp	r0, #0
   384b0:	beq	384ec <flatcc_json_printer_int16_enum_struct_field@@Base+0x88>
   384b4:	ldr	r1, [r4, #20]
   384b8:	uxth	r0, r6
   384bc:	cmn	r6, #1
   384c0:	rsble	r6, r6, #0
   384c4:	lsr	r5, r0, #15
   384c8:	movle	r0, #45	; 0x2d
   384cc:	strble	r0, [r1], #1
   384d0:	uxth	r0, r6
   384d4:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   384d8:	ldr	r1, [r4, #20]
   384dc:	add	r0, r0, r5
   384e0:	add	r0, r1, r0
   384e4:	str	r0, [r4, #20]
   384e8:	pop	{r4, r5, r6, r7, fp, pc}
   384ec:	mov	r0, r4
   384f0:	mov	r1, r6
   384f4:	mov	r2, r7
   384f8:	pop	{r4, r5, r6, r7, fp, lr}
   384fc:	bx	r2

00038500 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   38500:	push	{r4, r5, r6, r7, fp, lr}
   38504:	add	fp, sp, #16
   38508:	add	r7, fp, #8
   3850c:	mov	r5, r1
   38510:	ldr	r6, [r2, r3]
   38514:	mov	r4, r0
   38518:	ldm	r7, {r1, r2, r7}
   3851c:	cmp	r5, #0
   38520:	beq	38538 <flatcc_json_printer_int32_enum_struct_field@@Base+0x38>
   38524:	ldr	r0, [r4, #20]
   38528:	add	r3, r0, #1
   3852c:	str	r3, [r4, #20]
   38530:	mov	r3, #44	; 0x2c
   38534:	strb	r3, [r0]
   38538:	mov	r0, r4
   3853c:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   38540:	ldrb	r0, [r4, #27]
   38544:	cmp	r0, #0
   38548:	beq	38580 <flatcc_json_printer_int32_enum_struct_field@@Base+0x80>
   3854c:	ldr	r1, [r4, #20]
   38550:	cmn	r6, #1
   38554:	lsr	r5, r6, #31
   38558:	movle	r0, #45	; 0x2d
   3855c:	rsble	r6, r6, #0
   38560:	strble	r0, [r1], #1
   38564:	mov	r0, r6
   38568:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   3856c:	ldr	r1, [r4, #20]
   38570:	add	r0, r0, r5
   38574:	add	r0, r1, r0
   38578:	str	r0, [r4, #20]
   3857c:	pop	{r4, r5, r6, r7, fp, pc}
   38580:	mov	r0, r4
   38584:	mov	r1, r6
   38588:	mov	r2, r7
   3858c:	pop	{r4, r5, r6, r7, fp, lr}
   38590:	bx	r2

00038594 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   38594:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   38598:	add	fp, sp, #24
   3859c:	ldr	r7, [r2, r3]!
   385a0:	add	r8, fp, #8
   385a4:	mov	r6, r1
   385a8:	mov	r4, r0
   385ac:	cmp	r6, #0
   385b0:	ldr	r5, [r2, #4]
   385b4:	ldm	r8, {r1, r2, r8}
   385b8:	beq	385d0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x3c>
   385bc:	ldr	r0, [r4, #20]
   385c0:	add	r3, r0, #1
   385c4:	str	r3, [r4, #20]
   385c8:	mov	r3, #44	; 0x2c
   385cc:	strb	r3, [r0]
   385d0:	mov	r0, r4
   385d4:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   385d8:	ldrb	r0, [r4, #27]
   385dc:	cmp	r0, #0
   385e0:	beq	38624 <flatcc_json_printer_int64_enum_struct_field@@Base+0x90>
   385e4:	ldr	r2, [r4, #20]
   385e8:	lsr	r6, r5, #31
   385ec:	cmn	r5, #1
   385f0:	bgt	38604 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   385f4:	mov	r0, #45	; 0x2d
   385f8:	rsbs	r7, r7, #0
   385fc:	strb	r0, [r2], #1
   38600:	rsc	r5, r5, #0
   38604:	mov	r0, r7
   38608:	mov	r1, r5
   3860c:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   38610:	ldr	r1, [r4, #20]
   38614:	add	r0, r0, r6
   38618:	add	r0, r1, r0
   3861c:	str	r0, [r4, #20]
   38620:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   38624:	mov	r0, r4
   38628:	mov	r2, r7
   3862c:	mov	r3, r5
   38630:	mov	r1, r8
   38634:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   38638:	bx	r1

0003863c <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3863c:	push	{r4, r5, r6, r7, fp, lr}
   38640:	add	fp, sp, #16
   38644:	add	r7, fp, #8
   38648:	mov	r5, r1
   3864c:	ldrb	r6, [r2, r3]
   38650:	mov	r4, r0
   38654:	ldm	r7, {r1, r2, r7}
   38658:	cmp	r5, #0
   3865c:	beq	38674 <flatcc_json_printer_bool_enum_struct_field@@Base+0x38>
   38660:	ldr	r0, [r4, #20]
   38664:	add	r3, r0, #1
   38668:	str	r3, [r4, #20]
   3866c:	mov	r3, #44	; 0x2c
   38670:	strb	r3, [r0]
   38674:	mov	r0, r4
   38678:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3867c:	ldrb	r0, [r4, #27]
   38680:	cmp	r0, #0
   38684:	beq	386b0 <flatcc_json_printer_bool_enum_struct_field@@Base+0x74>
   38688:	ldr	r0, [r4, #20]
   3868c:	cmp	r6, #0
   38690:	beq	386c4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x88>
   38694:	mov	r1, #0
   38698:	strb	r1, [r0, #4]
   3869c:	movw	r1, #29300	; 0x7274
   386a0:	movt	r1, #25973	; 0x6575
   386a4:	str	r1, [r0]
   386a8:	mov	r0, #4
   386ac:	b	386dc <flatcc_json_printer_bool_enum_struct_field@@Base+0xa0>
   386b0:	mov	r0, r4
   386b4:	mov	r1, r6
   386b8:	mov	r2, r7
   386bc:	pop	{r4, r5, r6, r7, fp, lr}
   386c0:	bx	r2
   386c4:	mov	r1, #101	; 0x65
   386c8:	strh	r1, [r0, #4]
   386cc:	movw	r1, #24934	; 0x6166
   386d0:	movt	r1, #29548	; 0x736c
   386d4:	str	r1, [r0]
   386d8:	mov	r0, #5
   386dc:	ldr	r1, [r4, #20]
   386e0:	add	r0, r1, r0
   386e4:	str	r0, [r4, #20]
   386e8:	pop	{r4, r5, r6, r7, fp, pc}

000386ec <flatcc_json_printer_utype_vector_field@@Base>:
   386ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   386f0:	add	fp, sp, #28
   386f4:	sub	sp, sp, #4
   386f8:	mov	r4, r0
   386fc:	mov	r0, #4
   38700:	add	r0, r0, r2, lsl #1
   38704:	ldr	r2, [r1, #8]
   38708:	cmp	r0, r2
   3870c:	bge	38a94 <flatcc_json_printer_utype_vector_field@@Base+0x3a8>
   38710:	ldr	r2, [r1, #4]
   38714:	add	r0, r2, r0
   38718:	ldrh	r0, [r0]
   3871c:	cmp	r0, #0
   38720:	ldrne	r2, [r1]
   38724:	addsne	r8, r2, r0
   38728:	beq	38a94 <flatcc_json_printer_utype_vector_field@@Base+0x3a8>
   3872c:	ldr	r0, [r1, #16]
   38730:	ldr	r2, [fp, #8]
   38734:	add	r7, r0, #1
   38738:	cmp	r0, #0
   3873c:	str	r7, [r1, #16]
   38740:	beq	38758 <flatcc_json_printer_utype_vector_field@@Base+0x6c>
   38744:	ldr	r0, [r4, #20]
   38748:	add	r1, r0, #1
   3874c:	str	r1, [r4, #20]
   38750:	mov	r1, #44	; 0x2c
   38754:	strb	r1, [r0]
   38758:	ldr	r0, [r8]
   3875c:	mov	r1, r3
   38760:	ldr	r7, [r8, r0]!
   38764:	mov	r0, r4
   38768:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3876c:	ldr	r1, [r4, #32]
   38770:	ldr	r0, [r4, #20]
   38774:	cmp	r7, #0
   38778:	add	r1, r1, #1
   3877c:	str	r1, [r4, #32]
   38780:	add	r1, r0, #1
   38784:	str	r1, [r4, #20]
   38788:	mov	r1, #91	; 0x5b
   3878c:	strb	r1, [r0]
   38790:	beq	389b8 <flatcc_json_printer_utype_vector_field@@Base+0x2cc>
   38794:	ldrb	r0, [r4, #25]
   38798:	ldr	r1, [r4, #20]
   3879c:	cmp	r0, #0
   387a0:	beq	3885c <flatcc_json_printer_utype_vector_field@@Base+0x170>
   387a4:	add	r0, r1, #1
   387a8:	str	r0, [r4, #20]
   387ac:	mov	r0, #10
   387b0:	strb	r0, [r1]
   387b4:	ldr	r0, [r4, #20]
   387b8:	ldrb	r2, [r4, #25]
   387bc:	ldr	r3, [r4, #32]
   387c0:	ldr	r1, [r4, #16]
   387c4:	mla	r6, r3, r2, r0
   387c8:	mul	r5, r3, r2
   387cc:	cmp	r6, r1
   387d0:	bls	38840 <flatcc_json_printer_utype_vector_field@@Base+0x154>
   387d4:	cmp	r0, r1
   387d8:	bcc	387f4 <flatcc_json_printer_utype_vector_field@@Base+0x108>
   387dc:	ldr	r2, [r4, #44]	; 0x2c
   387e0:	mov	r0, r4
   387e4:	mov	r1, #0
   387e8:	blx	r2
   387ec:	ldr	r1, [r4, #16]
   387f0:	ldr	r0, [r4, #20]
   387f4:	sub	r6, r1, r0
   387f8:	cmp	r6, r5
   387fc:	bcs	38840 <flatcc_json_printer_utype_vector_field@@Base+0x154>
   38800:	mov	r1, #32
   38804:	mov	r2, r6
   38808:	bl	14eec <memset@plt>
   3880c:	ldr	r0, [r4, #20]
   38810:	ldr	r2, [r4, #44]	; 0x2c
   38814:	mov	r1, #0
   38818:	add	r0, r0, r6
   3881c:	str	r0, [r4, #20]
   38820:	mov	r0, r4
   38824:	blx	r2
   38828:	ldr	r1, [r4, #16]
   3882c:	ldr	r0, [r4, #20]
   38830:	sub	r5, r5, r6
   38834:	sub	r6, r1, r0
   38838:	cmp	r5, r6
   3883c:	bhi	38800 <flatcc_json_printer_utype_vector_field@@Base+0x114>
   38840:	mov	r1, #32
   38844:	mov	r2, r5
   38848:	bl	14eec <memset@plt>
   3884c:	ldr	r0, [r4, #20]
   38850:	add	r1, r0, r5
   38854:	str	r1, [r4, #20]
   38858:	b	3887c <flatcc_json_printer_utype_vector_field@@Base+0x190>
   3885c:	ldr	r0, [r4, #16]
   38860:	cmp	r1, r0
   38864:	bcc	3887c <flatcc_json_printer_utype_vector_field@@Base+0x190>
   38868:	ldr	r2, [r4, #44]	; 0x2c
   3886c:	mov	r0, r4
   38870:	mov	r1, #0
   38874:	blx	r2
   38878:	ldr	r1, [r4, #20]
   3887c:	ldrb	r0, [r8, #4]
   38880:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   38884:	ldr	r1, [r4, #20]
   38888:	subs	r9, r7, #1
   3888c:	add	r0, r1, r0
   38890:	str	r0, [r4, #20]
   38894:	beq	389b8 <flatcc_json_printer_utype_vector_field@@Base+0x2cc>
   38898:	ldr	r0, [r4, #20]
   3889c:	add	r7, r8, #5
   388a0:	mov	r8, #44	; 0x2c
   388a4:	mov	sl, #10
   388a8:	add	r1, r0, #1
   388ac:	sub	r9, r9, #1
   388b0:	str	r1, [r4, #20]
   388b4:	strb	r8, [r0]
   388b8:	ldrb	r0, [r4, #25]
   388bc:	ldr	r1, [r4, #20]
   388c0:	cmp	r0, #0
   388c4:	beq	3897c <flatcc_json_printer_utype_vector_field@@Base+0x290>
   388c8:	add	r0, r1, #1
   388cc:	str	r0, [r4, #20]
   388d0:	strb	sl, [r1]
   388d4:	ldr	r0, [r4, #20]
   388d8:	ldrb	r2, [r4, #25]
   388dc:	ldr	r3, [r4, #32]
   388e0:	ldr	r1, [r4, #16]
   388e4:	mla	r6, r3, r2, r0
   388e8:	mul	r5, r3, r2
   388ec:	cmp	r6, r1
   388f0:	bls	38960 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   388f4:	cmp	r0, r1
   388f8:	bcc	38914 <flatcc_json_printer_utype_vector_field@@Base+0x228>
   388fc:	ldr	r2, [r4, #44]	; 0x2c
   38900:	mov	r0, r4
   38904:	mov	r1, #0
   38908:	blx	r2
   3890c:	ldr	r1, [r4, #16]
   38910:	ldr	r0, [r4, #20]
   38914:	sub	r6, r1, r0
   38918:	cmp	r6, r5
   3891c:	bcs	38960 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   38920:	mov	r1, #32
   38924:	mov	r2, r6
   38928:	bl	14eec <memset@plt>
   3892c:	ldr	r0, [r4, #20]
   38930:	ldr	r2, [r4, #44]	; 0x2c
   38934:	mov	r1, #0
   38938:	add	r0, r0, r6
   3893c:	str	r0, [r4, #20]
   38940:	mov	r0, r4
   38944:	blx	r2
   38948:	ldr	r1, [r4, #16]
   3894c:	ldr	r0, [r4, #20]
   38950:	sub	r5, r5, r6
   38954:	sub	r6, r1, r0
   38958:	cmp	r5, r6
   3895c:	bhi	38920 <flatcc_json_printer_utype_vector_field@@Base+0x234>
   38960:	mov	r1, #32
   38964:	mov	r2, r5
   38968:	bl	14eec <memset@plt>
   3896c:	ldr	r0, [r4, #20]
   38970:	add	r1, r0, r5
   38974:	str	r1, [r4, #20]
   38978:	b	3899c <flatcc_json_printer_utype_vector_field@@Base+0x2b0>
   3897c:	ldr	r0, [r4, #16]
   38980:	cmp	r1, r0
   38984:	bcc	3899c <flatcc_json_printer_utype_vector_field@@Base+0x2b0>
   38988:	ldr	r2, [r4, #44]	; 0x2c
   3898c:	mov	r0, r4
   38990:	mov	r1, #0
   38994:	blx	r2
   38998:	ldr	r1, [r4, #20]
   3899c:	ldrb	r0, [r7], #1
   389a0:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   389a4:	ldr	r1, [r4, #20]
   389a8:	cmp	r9, #0
   389ac:	add	r0, r1, r0
   389b0:	str	r0, [r4, #20]
   389b4:	bne	388a8 <flatcc_json_printer_utype_vector_field@@Base+0x1bc>
   389b8:	ldrb	r1, [r4, #25]
   389bc:	ldr	r0, [r4, #20]
   389c0:	cmp	r1, #0
   389c4:	beq	38a84 <flatcc_json_printer_utype_vector_field@@Base+0x398>
   389c8:	add	r1, r0, #1
   389cc:	str	r1, [r4, #20]
   389d0:	mov	r1, #10
   389d4:	strb	r1, [r0]
   389d8:	ldr	r0, [r4, #32]
   389dc:	sub	r2, r0, #1
   389e0:	str	r2, [r4, #32]
   389e4:	ldrb	r3, [r4, #25]
   389e8:	ldr	r0, [r4, #20]
   389ec:	ldr	r1, [r4, #16]
   389f0:	mla	r7, r2, r3, r0
   389f4:	mul	r5, r2, r3
   389f8:	cmp	r7, r1
   389fc:	bls	38a6c <flatcc_json_printer_utype_vector_field@@Base+0x380>
   38a00:	cmp	r0, r1
   38a04:	bcc	38a20 <flatcc_json_printer_utype_vector_field@@Base+0x334>
   38a08:	ldr	r2, [r4, #44]	; 0x2c
   38a0c:	mov	r0, r4
   38a10:	mov	r1, #0
   38a14:	blx	r2
   38a18:	ldr	r1, [r4, #16]
   38a1c:	ldr	r0, [r4, #20]
   38a20:	sub	r6, r1, r0
   38a24:	cmp	r6, r5
   38a28:	bcs	38a6c <flatcc_json_printer_utype_vector_field@@Base+0x380>
   38a2c:	mov	r1, #32
   38a30:	mov	r2, r6
   38a34:	bl	14eec <memset@plt>
   38a38:	ldr	r0, [r4, #20]
   38a3c:	ldr	r2, [r4, #44]	; 0x2c
   38a40:	mov	r1, #0
   38a44:	add	r0, r0, r6
   38a48:	str	r0, [r4, #20]
   38a4c:	mov	r0, r4
   38a50:	blx	r2
   38a54:	ldr	r1, [r4, #16]
   38a58:	ldr	r0, [r4, #20]
   38a5c:	sub	r5, r5, r6
   38a60:	sub	r6, r1, r0
   38a64:	cmp	r5, r6
   38a68:	bhi	38a2c <flatcc_json_printer_utype_vector_field@@Base+0x340>
   38a6c:	mov	r1, #32
   38a70:	mov	r2, r5
   38a74:	bl	14eec <memset@plt>
   38a78:	ldr	r0, [r4, #20]
   38a7c:	add	r0, r0, r5
   38a80:	str	r0, [r4, #20]
   38a84:	add	r1, r0, #1
   38a88:	str	r1, [r4, #20]
   38a8c:	mov	r1, #93	; 0x5d
   38a90:	strb	r1, [r0]
   38a94:	sub	sp, fp, #28
   38a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00038a9c <flatcc_json_printer_uint8_vector_field@@Base>:
   38a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38aa0:	add	fp, sp, #28
   38aa4:	sub	sp, sp, #4
   38aa8:	mov	r4, r0
   38aac:	mov	r0, #4
   38ab0:	add	r0, r0, r2, lsl #1
   38ab4:	ldr	r2, [r1, #8]
   38ab8:	cmp	r0, r2
   38abc:	bge	38e44 <flatcc_json_printer_uint8_vector_field@@Base+0x3a8>
   38ac0:	ldr	r2, [r1, #4]
   38ac4:	add	r0, r2, r0
   38ac8:	ldrh	r0, [r0]
   38acc:	cmp	r0, #0
   38ad0:	ldrne	r2, [r1]
   38ad4:	addsne	r8, r2, r0
   38ad8:	beq	38e44 <flatcc_json_printer_uint8_vector_field@@Base+0x3a8>
   38adc:	ldr	r0, [r1, #16]
   38ae0:	ldr	r2, [fp, #8]
   38ae4:	add	r7, r0, #1
   38ae8:	cmp	r0, #0
   38aec:	str	r7, [r1, #16]
   38af0:	beq	38b08 <flatcc_json_printer_uint8_vector_field@@Base+0x6c>
   38af4:	ldr	r0, [r4, #20]
   38af8:	add	r1, r0, #1
   38afc:	str	r1, [r4, #20]
   38b00:	mov	r1, #44	; 0x2c
   38b04:	strb	r1, [r0]
   38b08:	ldr	r0, [r8]
   38b0c:	mov	r1, r3
   38b10:	ldr	r7, [r8, r0]!
   38b14:	mov	r0, r4
   38b18:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   38b1c:	ldr	r1, [r4, #32]
   38b20:	ldr	r0, [r4, #20]
   38b24:	cmp	r7, #0
   38b28:	add	r1, r1, #1
   38b2c:	str	r1, [r4, #32]
   38b30:	add	r1, r0, #1
   38b34:	str	r1, [r4, #20]
   38b38:	mov	r1, #91	; 0x5b
   38b3c:	strb	r1, [r0]
   38b40:	beq	38d68 <flatcc_json_printer_uint8_vector_field@@Base+0x2cc>
   38b44:	ldrb	r0, [r4, #25]
   38b48:	ldr	r1, [r4, #20]
   38b4c:	cmp	r0, #0
   38b50:	beq	38c0c <flatcc_json_printer_uint8_vector_field@@Base+0x170>
   38b54:	add	r0, r1, #1
   38b58:	str	r0, [r4, #20]
   38b5c:	mov	r0, #10
   38b60:	strb	r0, [r1]
   38b64:	ldr	r0, [r4, #20]
   38b68:	ldrb	r2, [r4, #25]
   38b6c:	ldr	r3, [r4, #32]
   38b70:	ldr	r1, [r4, #16]
   38b74:	mla	r6, r3, r2, r0
   38b78:	mul	r5, r3, r2
   38b7c:	cmp	r6, r1
   38b80:	bls	38bf0 <flatcc_json_printer_uint8_vector_field@@Base+0x154>
   38b84:	cmp	r0, r1
   38b88:	bcc	38ba4 <flatcc_json_printer_uint8_vector_field@@Base+0x108>
   38b8c:	ldr	r2, [r4, #44]	; 0x2c
   38b90:	mov	r0, r4
   38b94:	mov	r1, #0
   38b98:	blx	r2
   38b9c:	ldr	r1, [r4, #16]
   38ba0:	ldr	r0, [r4, #20]
   38ba4:	sub	r6, r1, r0
   38ba8:	cmp	r6, r5
   38bac:	bcs	38bf0 <flatcc_json_printer_uint8_vector_field@@Base+0x154>
   38bb0:	mov	r1, #32
   38bb4:	mov	r2, r6
   38bb8:	bl	14eec <memset@plt>
   38bbc:	ldr	r0, [r4, #20]
   38bc0:	ldr	r2, [r4, #44]	; 0x2c
   38bc4:	mov	r1, #0
   38bc8:	add	r0, r0, r6
   38bcc:	str	r0, [r4, #20]
   38bd0:	mov	r0, r4
   38bd4:	blx	r2
   38bd8:	ldr	r1, [r4, #16]
   38bdc:	ldr	r0, [r4, #20]
   38be0:	sub	r5, r5, r6
   38be4:	sub	r6, r1, r0
   38be8:	cmp	r5, r6
   38bec:	bhi	38bb0 <flatcc_json_printer_uint8_vector_field@@Base+0x114>
   38bf0:	mov	r1, #32
   38bf4:	mov	r2, r5
   38bf8:	bl	14eec <memset@plt>
   38bfc:	ldr	r0, [r4, #20]
   38c00:	add	r1, r0, r5
   38c04:	str	r1, [r4, #20]
   38c08:	b	38c2c <flatcc_json_printer_uint8_vector_field@@Base+0x190>
   38c0c:	ldr	r0, [r4, #16]
   38c10:	cmp	r1, r0
   38c14:	bcc	38c2c <flatcc_json_printer_uint8_vector_field@@Base+0x190>
   38c18:	ldr	r2, [r4, #44]	; 0x2c
   38c1c:	mov	r0, r4
   38c20:	mov	r1, #0
   38c24:	blx	r2
   38c28:	ldr	r1, [r4, #20]
   38c2c:	ldrb	r0, [r8, #4]
   38c30:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   38c34:	ldr	r1, [r4, #20]
   38c38:	subs	r9, r7, #1
   38c3c:	add	r0, r1, r0
   38c40:	str	r0, [r4, #20]
   38c44:	beq	38d68 <flatcc_json_printer_uint8_vector_field@@Base+0x2cc>
   38c48:	ldr	r0, [r4, #20]
   38c4c:	add	r7, r8, #5
   38c50:	mov	r8, #44	; 0x2c
   38c54:	mov	sl, #10
   38c58:	add	r1, r0, #1
   38c5c:	sub	r9, r9, #1
   38c60:	str	r1, [r4, #20]
   38c64:	strb	r8, [r0]
   38c68:	ldrb	r0, [r4, #25]
   38c6c:	ldr	r1, [r4, #20]
   38c70:	cmp	r0, #0
   38c74:	beq	38d2c <flatcc_json_printer_uint8_vector_field@@Base+0x290>
   38c78:	add	r0, r1, #1
   38c7c:	str	r0, [r4, #20]
   38c80:	strb	sl, [r1]
   38c84:	ldr	r0, [r4, #20]
   38c88:	ldrb	r2, [r4, #25]
   38c8c:	ldr	r3, [r4, #32]
   38c90:	ldr	r1, [r4, #16]
   38c94:	mla	r6, r3, r2, r0
   38c98:	mul	r5, r3, r2
   38c9c:	cmp	r6, r1
   38ca0:	bls	38d10 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   38ca4:	cmp	r0, r1
   38ca8:	bcc	38cc4 <flatcc_json_printer_uint8_vector_field@@Base+0x228>
   38cac:	ldr	r2, [r4, #44]	; 0x2c
   38cb0:	mov	r0, r4
   38cb4:	mov	r1, #0
   38cb8:	blx	r2
   38cbc:	ldr	r1, [r4, #16]
   38cc0:	ldr	r0, [r4, #20]
   38cc4:	sub	r6, r1, r0
   38cc8:	cmp	r6, r5
   38ccc:	bcs	38d10 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   38cd0:	mov	r1, #32
   38cd4:	mov	r2, r6
   38cd8:	bl	14eec <memset@plt>
   38cdc:	ldr	r0, [r4, #20]
   38ce0:	ldr	r2, [r4, #44]	; 0x2c
   38ce4:	mov	r1, #0
   38ce8:	add	r0, r0, r6
   38cec:	str	r0, [r4, #20]
   38cf0:	mov	r0, r4
   38cf4:	blx	r2
   38cf8:	ldr	r1, [r4, #16]
   38cfc:	ldr	r0, [r4, #20]
   38d00:	sub	r5, r5, r6
   38d04:	sub	r6, r1, r0
   38d08:	cmp	r5, r6
   38d0c:	bhi	38cd0 <flatcc_json_printer_uint8_vector_field@@Base+0x234>
   38d10:	mov	r1, #32
   38d14:	mov	r2, r5
   38d18:	bl	14eec <memset@plt>
   38d1c:	ldr	r0, [r4, #20]
   38d20:	add	r1, r0, r5
   38d24:	str	r1, [r4, #20]
   38d28:	b	38d4c <flatcc_json_printer_uint8_vector_field@@Base+0x2b0>
   38d2c:	ldr	r0, [r4, #16]
   38d30:	cmp	r1, r0
   38d34:	bcc	38d4c <flatcc_json_printer_uint8_vector_field@@Base+0x2b0>
   38d38:	ldr	r2, [r4, #44]	; 0x2c
   38d3c:	mov	r0, r4
   38d40:	mov	r1, #0
   38d44:	blx	r2
   38d48:	ldr	r1, [r4, #20]
   38d4c:	ldrb	r0, [r7], #1
   38d50:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   38d54:	ldr	r1, [r4, #20]
   38d58:	cmp	r9, #0
   38d5c:	add	r0, r1, r0
   38d60:	str	r0, [r4, #20]
   38d64:	bne	38c58 <flatcc_json_printer_uint8_vector_field@@Base+0x1bc>
   38d68:	ldrb	r1, [r4, #25]
   38d6c:	ldr	r0, [r4, #20]
   38d70:	cmp	r1, #0
   38d74:	beq	38e34 <flatcc_json_printer_uint8_vector_field@@Base+0x398>
   38d78:	add	r1, r0, #1
   38d7c:	str	r1, [r4, #20]
   38d80:	mov	r1, #10
   38d84:	strb	r1, [r0]
   38d88:	ldr	r0, [r4, #32]
   38d8c:	sub	r2, r0, #1
   38d90:	str	r2, [r4, #32]
   38d94:	ldrb	r3, [r4, #25]
   38d98:	ldr	r0, [r4, #20]
   38d9c:	ldr	r1, [r4, #16]
   38da0:	mla	r7, r2, r3, r0
   38da4:	mul	r5, r2, r3
   38da8:	cmp	r7, r1
   38dac:	bls	38e1c <flatcc_json_printer_uint8_vector_field@@Base+0x380>
   38db0:	cmp	r0, r1
   38db4:	bcc	38dd0 <flatcc_json_printer_uint8_vector_field@@Base+0x334>
   38db8:	ldr	r2, [r4, #44]	; 0x2c
   38dbc:	mov	r0, r4
   38dc0:	mov	r1, #0
   38dc4:	blx	r2
   38dc8:	ldr	r1, [r4, #16]
   38dcc:	ldr	r0, [r4, #20]
   38dd0:	sub	r6, r1, r0
   38dd4:	cmp	r6, r5
   38dd8:	bcs	38e1c <flatcc_json_printer_uint8_vector_field@@Base+0x380>
   38ddc:	mov	r1, #32
   38de0:	mov	r2, r6
   38de4:	bl	14eec <memset@plt>
   38de8:	ldr	r0, [r4, #20]
   38dec:	ldr	r2, [r4, #44]	; 0x2c
   38df0:	mov	r1, #0
   38df4:	add	r0, r0, r6
   38df8:	str	r0, [r4, #20]
   38dfc:	mov	r0, r4
   38e00:	blx	r2
   38e04:	ldr	r1, [r4, #16]
   38e08:	ldr	r0, [r4, #20]
   38e0c:	sub	r5, r5, r6
   38e10:	sub	r6, r1, r0
   38e14:	cmp	r5, r6
   38e18:	bhi	38ddc <flatcc_json_printer_uint8_vector_field@@Base+0x340>
   38e1c:	mov	r1, #32
   38e20:	mov	r2, r5
   38e24:	bl	14eec <memset@plt>
   38e28:	ldr	r0, [r4, #20]
   38e2c:	add	r0, r0, r5
   38e30:	str	r0, [r4, #20]
   38e34:	add	r1, r0, #1
   38e38:	str	r1, [r4, #20]
   38e3c:	mov	r1, #93	; 0x5d
   38e40:	strb	r1, [r0]
   38e44:	sub	sp, fp, #28
   38e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00038e4c <flatcc_json_printer_uint16_vector_field@@Base>:
   38e4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38e50:	add	fp, sp, #28
   38e54:	sub	sp, sp, #4
   38e58:	mov	r4, r0
   38e5c:	mov	r0, #4
   38e60:	add	r0, r0, r2, lsl #1
   38e64:	ldr	r2, [r1, #8]
   38e68:	cmp	r0, r2
   38e6c:	bge	391f4 <flatcc_json_printer_uint16_vector_field@@Base+0x3a8>
   38e70:	ldr	r2, [r1, #4]
   38e74:	add	r0, r2, r0
   38e78:	ldrh	r0, [r0]
   38e7c:	cmp	r0, #0
   38e80:	ldrne	r2, [r1]
   38e84:	addsne	r8, r2, r0
   38e88:	beq	391f4 <flatcc_json_printer_uint16_vector_field@@Base+0x3a8>
   38e8c:	ldr	r0, [r1, #16]
   38e90:	ldr	r2, [fp, #8]
   38e94:	add	r7, r0, #1
   38e98:	cmp	r0, #0
   38e9c:	str	r7, [r1, #16]
   38ea0:	beq	38eb8 <flatcc_json_printer_uint16_vector_field@@Base+0x6c>
   38ea4:	ldr	r0, [r4, #20]
   38ea8:	add	r1, r0, #1
   38eac:	str	r1, [r4, #20]
   38eb0:	mov	r1, #44	; 0x2c
   38eb4:	strb	r1, [r0]
   38eb8:	ldr	r0, [r8]
   38ebc:	mov	r1, r3
   38ec0:	ldr	r7, [r8, r0]!
   38ec4:	mov	r0, r4
   38ec8:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   38ecc:	ldr	r1, [r4, #32]
   38ed0:	ldr	r0, [r4, #20]
   38ed4:	cmp	r7, #0
   38ed8:	add	r1, r1, #1
   38edc:	str	r1, [r4, #32]
   38ee0:	add	r1, r0, #1
   38ee4:	str	r1, [r4, #20]
   38ee8:	mov	r1, #91	; 0x5b
   38eec:	strb	r1, [r0]
   38ef0:	beq	39118 <flatcc_json_printer_uint16_vector_field@@Base+0x2cc>
   38ef4:	ldrb	r0, [r4, #25]
   38ef8:	ldr	r1, [r4, #20]
   38efc:	cmp	r0, #0
   38f00:	beq	38fbc <flatcc_json_printer_uint16_vector_field@@Base+0x170>
   38f04:	add	r0, r1, #1
   38f08:	str	r0, [r4, #20]
   38f0c:	mov	r0, #10
   38f10:	strb	r0, [r1]
   38f14:	ldr	r0, [r4, #20]
   38f18:	ldrb	r2, [r4, #25]
   38f1c:	ldr	r3, [r4, #32]
   38f20:	ldr	r1, [r4, #16]
   38f24:	mla	r6, r3, r2, r0
   38f28:	mul	r5, r3, r2
   38f2c:	cmp	r6, r1
   38f30:	bls	38fa0 <flatcc_json_printer_uint16_vector_field@@Base+0x154>
   38f34:	cmp	r0, r1
   38f38:	bcc	38f54 <flatcc_json_printer_uint16_vector_field@@Base+0x108>
   38f3c:	ldr	r2, [r4, #44]	; 0x2c
   38f40:	mov	r0, r4
   38f44:	mov	r1, #0
   38f48:	blx	r2
   38f4c:	ldr	r1, [r4, #16]
   38f50:	ldr	r0, [r4, #20]
   38f54:	sub	r6, r1, r0
   38f58:	cmp	r6, r5
   38f5c:	bcs	38fa0 <flatcc_json_printer_uint16_vector_field@@Base+0x154>
   38f60:	mov	r1, #32
   38f64:	mov	r2, r6
   38f68:	bl	14eec <memset@plt>
   38f6c:	ldr	r0, [r4, #20]
   38f70:	ldr	r2, [r4, #44]	; 0x2c
   38f74:	mov	r1, #0
   38f78:	add	r0, r0, r6
   38f7c:	str	r0, [r4, #20]
   38f80:	mov	r0, r4
   38f84:	blx	r2
   38f88:	ldr	r1, [r4, #16]
   38f8c:	ldr	r0, [r4, #20]
   38f90:	sub	r5, r5, r6
   38f94:	sub	r6, r1, r0
   38f98:	cmp	r5, r6
   38f9c:	bhi	38f60 <flatcc_json_printer_uint16_vector_field@@Base+0x114>
   38fa0:	mov	r1, #32
   38fa4:	mov	r2, r5
   38fa8:	bl	14eec <memset@plt>
   38fac:	ldr	r0, [r4, #20]
   38fb0:	add	r1, r0, r5
   38fb4:	str	r1, [r4, #20]
   38fb8:	b	38fdc <flatcc_json_printer_uint16_vector_field@@Base+0x190>
   38fbc:	ldr	r0, [r4, #16]
   38fc0:	cmp	r1, r0
   38fc4:	bcc	38fdc <flatcc_json_printer_uint16_vector_field@@Base+0x190>
   38fc8:	ldr	r2, [r4, #44]	; 0x2c
   38fcc:	mov	r0, r4
   38fd0:	mov	r1, #0
   38fd4:	blx	r2
   38fd8:	ldr	r1, [r4, #20]
   38fdc:	ldrh	r0, [r8, #4]
   38fe0:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   38fe4:	ldr	r1, [r4, #20]
   38fe8:	subs	r9, r7, #1
   38fec:	add	r0, r1, r0
   38ff0:	str	r0, [r4, #20]
   38ff4:	beq	39118 <flatcc_json_printer_uint16_vector_field@@Base+0x2cc>
   38ff8:	ldr	r0, [r4, #20]
   38ffc:	add	r7, r8, #6
   39000:	mov	r8, #44	; 0x2c
   39004:	mov	sl, #10
   39008:	add	r1, r0, #1
   3900c:	sub	r9, r9, #1
   39010:	str	r1, [r4, #20]
   39014:	strb	r8, [r0]
   39018:	ldrb	r0, [r4, #25]
   3901c:	ldr	r1, [r4, #20]
   39020:	cmp	r0, #0
   39024:	beq	390dc <flatcc_json_printer_uint16_vector_field@@Base+0x290>
   39028:	add	r0, r1, #1
   3902c:	str	r0, [r4, #20]
   39030:	strb	sl, [r1]
   39034:	ldr	r0, [r4, #20]
   39038:	ldrb	r2, [r4, #25]
   3903c:	ldr	r3, [r4, #32]
   39040:	ldr	r1, [r4, #16]
   39044:	mla	r6, r3, r2, r0
   39048:	mul	r5, r3, r2
   3904c:	cmp	r6, r1
   39050:	bls	390c0 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   39054:	cmp	r0, r1
   39058:	bcc	39074 <flatcc_json_printer_uint16_vector_field@@Base+0x228>
   3905c:	ldr	r2, [r4, #44]	; 0x2c
   39060:	mov	r0, r4
   39064:	mov	r1, #0
   39068:	blx	r2
   3906c:	ldr	r1, [r4, #16]
   39070:	ldr	r0, [r4, #20]
   39074:	sub	r6, r1, r0
   39078:	cmp	r6, r5
   3907c:	bcs	390c0 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   39080:	mov	r1, #32
   39084:	mov	r2, r6
   39088:	bl	14eec <memset@plt>
   3908c:	ldr	r0, [r4, #20]
   39090:	ldr	r2, [r4, #44]	; 0x2c
   39094:	mov	r1, #0
   39098:	add	r0, r0, r6
   3909c:	str	r0, [r4, #20]
   390a0:	mov	r0, r4
   390a4:	blx	r2
   390a8:	ldr	r1, [r4, #16]
   390ac:	ldr	r0, [r4, #20]
   390b0:	sub	r5, r5, r6
   390b4:	sub	r6, r1, r0
   390b8:	cmp	r5, r6
   390bc:	bhi	39080 <flatcc_json_printer_uint16_vector_field@@Base+0x234>
   390c0:	mov	r1, #32
   390c4:	mov	r2, r5
   390c8:	bl	14eec <memset@plt>
   390cc:	ldr	r0, [r4, #20]
   390d0:	add	r1, r0, r5
   390d4:	str	r1, [r4, #20]
   390d8:	b	390fc <flatcc_json_printer_uint16_vector_field@@Base+0x2b0>
   390dc:	ldr	r0, [r4, #16]
   390e0:	cmp	r1, r0
   390e4:	bcc	390fc <flatcc_json_printer_uint16_vector_field@@Base+0x2b0>
   390e8:	ldr	r2, [r4, #44]	; 0x2c
   390ec:	mov	r0, r4
   390f0:	mov	r1, #0
   390f4:	blx	r2
   390f8:	ldr	r1, [r4, #20]
   390fc:	ldrh	r0, [r7], #2
   39100:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   39104:	ldr	r1, [r4, #20]
   39108:	cmp	r9, #0
   3910c:	add	r0, r1, r0
   39110:	str	r0, [r4, #20]
   39114:	bne	39008 <flatcc_json_printer_uint16_vector_field@@Base+0x1bc>
   39118:	ldrb	r1, [r4, #25]
   3911c:	ldr	r0, [r4, #20]
   39120:	cmp	r1, #0
   39124:	beq	391e4 <flatcc_json_printer_uint16_vector_field@@Base+0x398>
   39128:	add	r1, r0, #1
   3912c:	str	r1, [r4, #20]
   39130:	mov	r1, #10
   39134:	strb	r1, [r0]
   39138:	ldr	r0, [r4, #32]
   3913c:	sub	r2, r0, #1
   39140:	str	r2, [r4, #32]
   39144:	ldrb	r3, [r4, #25]
   39148:	ldr	r0, [r4, #20]
   3914c:	ldr	r1, [r4, #16]
   39150:	mla	r7, r2, r3, r0
   39154:	mul	r5, r2, r3
   39158:	cmp	r7, r1
   3915c:	bls	391cc <flatcc_json_printer_uint16_vector_field@@Base+0x380>
   39160:	cmp	r0, r1
   39164:	bcc	39180 <flatcc_json_printer_uint16_vector_field@@Base+0x334>
   39168:	ldr	r2, [r4, #44]	; 0x2c
   3916c:	mov	r0, r4
   39170:	mov	r1, #0
   39174:	blx	r2
   39178:	ldr	r1, [r4, #16]
   3917c:	ldr	r0, [r4, #20]
   39180:	sub	r6, r1, r0
   39184:	cmp	r6, r5
   39188:	bcs	391cc <flatcc_json_printer_uint16_vector_field@@Base+0x380>
   3918c:	mov	r1, #32
   39190:	mov	r2, r6
   39194:	bl	14eec <memset@plt>
   39198:	ldr	r0, [r4, #20]
   3919c:	ldr	r2, [r4, #44]	; 0x2c
   391a0:	mov	r1, #0
   391a4:	add	r0, r0, r6
   391a8:	str	r0, [r4, #20]
   391ac:	mov	r0, r4
   391b0:	blx	r2
   391b4:	ldr	r1, [r4, #16]
   391b8:	ldr	r0, [r4, #20]
   391bc:	sub	r5, r5, r6
   391c0:	sub	r6, r1, r0
   391c4:	cmp	r5, r6
   391c8:	bhi	3918c <flatcc_json_printer_uint16_vector_field@@Base+0x340>
   391cc:	mov	r1, #32
   391d0:	mov	r2, r5
   391d4:	bl	14eec <memset@plt>
   391d8:	ldr	r0, [r4, #20]
   391dc:	add	r0, r0, r5
   391e0:	str	r0, [r4, #20]
   391e4:	add	r1, r0, #1
   391e8:	str	r1, [r4, #20]
   391ec:	mov	r1, #93	; 0x5d
   391f0:	strb	r1, [r0]
   391f4:	sub	sp, fp, #28
   391f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000391fc <flatcc_json_printer_uint32_vector_field@@Base>:
   391fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39200:	add	fp, sp, #28
   39204:	sub	sp, sp, #4
   39208:	mov	r4, r0
   3920c:	mov	r0, #4
   39210:	add	r0, r0, r2, lsl #1
   39214:	ldr	r2, [r1, #8]
   39218:	cmp	r0, r2
   3921c:	bge	395a4 <flatcc_json_printer_uint32_vector_field@@Base+0x3a8>
   39220:	ldr	r2, [r1, #4]
   39224:	add	r0, r2, r0
   39228:	ldrh	r0, [r0]
   3922c:	cmp	r0, #0
   39230:	ldrne	r2, [r1]
   39234:	addsne	r8, r2, r0
   39238:	beq	395a4 <flatcc_json_printer_uint32_vector_field@@Base+0x3a8>
   3923c:	ldr	r0, [r1, #16]
   39240:	ldr	r2, [fp, #8]
   39244:	add	r7, r0, #1
   39248:	cmp	r0, #0
   3924c:	str	r7, [r1, #16]
   39250:	beq	39268 <flatcc_json_printer_uint32_vector_field@@Base+0x6c>
   39254:	ldr	r0, [r4, #20]
   39258:	add	r1, r0, #1
   3925c:	str	r1, [r4, #20]
   39260:	mov	r1, #44	; 0x2c
   39264:	strb	r1, [r0]
   39268:	ldr	r0, [r8]
   3926c:	mov	r1, r3
   39270:	ldr	r7, [r8, r0]!
   39274:	mov	r0, r4
   39278:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3927c:	ldr	r1, [r4, #32]
   39280:	ldr	r0, [r4, #20]
   39284:	cmp	r7, #0
   39288:	add	r1, r1, #1
   3928c:	str	r1, [r4, #32]
   39290:	add	r1, r0, #1
   39294:	str	r1, [r4, #20]
   39298:	mov	r1, #91	; 0x5b
   3929c:	strb	r1, [r0]
   392a0:	beq	394c8 <flatcc_json_printer_uint32_vector_field@@Base+0x2cc>
   392a4:	ldrb	r0, [r4, #25]
   392a8:	ldr	r1, [r4, #20]
   392ac:	cmp	r0, #0
   392b0:	beq	3936c <flatcc_json_printer_uint32_vector_field@@Base+0x170>
   392b4:	add	r0, r1, #1
   392b8:	str	r0, [r4, #20]
   392bc:	mov	r0, #10
   392c0:	strb	r0, [r1]
   392c4:	ldr	r0, [r4, #20]
   392c8:	ldrb	r2, [r4, #25]
   392cc:	ldr	r3, [r4, #32]
   392d0:	ldr	r1, [r4, #16]
   392d4:	mla	r6, r3, r2, r0
   392d8:	mul	r5, r3, r2
   392dc:	cmp	r6, r1
   392e0:	bls	39350 <flatcc_json_printer_uint32_vector_field@@Base+0x154>
   392e4:	cmp	r0, r1
   392e8:	bcc	39304 <flatcc_json_printer_uint32_vector_field@@Base+0x108>
   392ec:	ldr	r2, [r4, #44]	; 0x2c
   392f0:	mov	r0, r4
   392f4:	mov	r1, #0
   392f8:	blx	r2
   392fc:	ldr	r1, [r4, #16]
   39300:	ldr	r0, [r4, #20]
   39304:	sub	r6, r1, r0
   39308:	cmp	r6, r5
   3930c:	bcs	39350 <flatcc_json_printer_uint32_vector_field@@Base+0x154>
   39310:	mov	r1, #32
   39314:	mov	r2, r6
   39318:	bl	14eec <memset@plt>
   3931c:	ldr	r0, [r4, #20]
   39320:	ldr	r2, [r4, #44]	; 0x2c
   39324:	mov	r1, #0
   39328:	add	r0, r0, r6
   3932c:	str	r0, [r4, #20]
   39330:	mov	r0, r4
   39334:	blx	r2
   39338:	ldr	r1, [r4, #16]
   3933c:	ldr	r0, [r4, #20]
   39340:	sub	r5, r5, r6
   39344:	sub	r6, r1, r0
   39348:	cmp	r5, r6
   3934c:	bhi	39310 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
   39350:	mov	r1, #32
   39354:	mov	r2, r5
   39358:	bl	14eec <memset@plt>
   3935c:	ldr	r0, [r4, #20]
   39360:	add	r1, r0, r5
   39364:	str	r1, [r4, #20]
   39368:	b	3938c <flatcc_json_printer_uint32_vector_field@@Base+0x190>
   3936c:	ldr	r0, [r4, #16]
   39370:	cmp	r1, r0
   39374:	bcc	3938c <flatcc_json_printer_uint32_vector_field@@Base+0x190>
   39378:	ldr	r2, [r4, #44]	; 0x2c
   3937c:	mov	r0, r4
   39380:	mov	r1, #0
   39384:	blx	r2
   39388:	ldr	r1, [r4, #20]
   3938c:	ldr	r0, [r8, #4]
   39390:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   39394:	ldr	r1, [r4, #20]
   39398:	subs	r9, r7, #1
   3939c:	add	r0, r1, r0
   393a0:	str	r0, [r4, #20]
   393a4:	beq	394c8 <flatcc_json_printer_uint32_vector_field@@Base+0x2cc>
   393a8:	ldr	r0, [r4, #20]
   393ac:	add	r7, r8, #8
   393b0:	mov	r8, #44	; 0x2c
   393b4:	mov	sl, #10
   393b8:	add	r1, r0, #1
   393bc:	sub	r9, r9, #1
   393c0:	str	r1, [r4, #20]
   393c4:	strb	r8, [r0]
   393c8:	ldrb	r0, [r4, #25]
   393cc:	ldr	r1, [r4, #20]
   393d0:	cmp	r0, #0
   393d4:	beq	3948c <flatcc_json_printer_uint32_vector_field@@Base+0x290>
   393d8:	add	r0, r1, #1
   393dc:	str	r0, [r4, #20]
   393e0:	strb	sl, [r1]
   393e4:	ldr	r0, [r4, #20]
   393e8:	ldrb	r2, [r4, #25]
   393ec:	ldr	r3, [r4, #32]
   393f0:	ldr	r1, [r4, #16]
   393f4:	mla	r6, r3, r2, r0
   393f8:	mul	r5, r3, r2
   393fc:	cmp	r6, r1
   39400:	bls	39470 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   39404:	cmp	r0, r1
   39408:	bcc	39424 <flatcc_json_printer_uint32_vector_field@@Base+0x228>
   3940c:	ldr	r2, [r4, #44]	; 0x2c
   39410:	mov	r0, r4
   39414:	mov	r1, #0
   39418:	blx	r2
   3941c:	ldr	r1, [r4, #16]
   39420:	ldr	r0, [r4, #20]
   39424:	sub	r6, r1, r0
   39428:	cmp	r6, r5
   3942c:	bcs	39470 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   39430:	mov	r1, #32
   39434:	mov	r2, r6
   39438:	bl	14eec <memset@plt>
   3943c:	ldr	r0, [r4, #20]
   39440:	ldr	r2, [r4, #44]	; 0x2c
   39444:	mov	r1, #0
   39448:	add	r0, r0, r6
   3944c:	str	r0, [r4, #20]
   39450:	mov	r0, r4
   39454:	blx	r2
   39458:	ldr	r1, [r4, #16]
   3945c:	ldr	r0, [r4, #20]
   39460:	sub	r5, r5, r6
   39464:	sub	r6, r1, r0
   39468:	cmp	r5, r6
   3946c:	bhi	39430 <flatcc_json_printer_uint32_vector_field@@Base+0x234>
   39470:	mov	r1, #32
   39474:	mov	r2, r5
   39478:	bl	14eec <memset@plt>
   3947c:	ldr	r0, [r4, #20]
   39480:	add	r1, r0, r5
   39484:	str	r1, [r4, #20]
   39488:	b	394ac <flatcc_json_printer_uint32_vector_field@@Base+0x2b0>
   3948c:	ldr	r0, [r4, #16]
   39490:	cmp	r1, r0
   39494:	bcc	394ac <flatcc_json_printer_uint32_vector_field@@Base+0x2b0>
   39498:	ldr	r2, [r4, #44]	; 0x2c
   3949c:	mov	r0, r4
   394a0:	mov	r1, #0
   394a4:	blx	r2
   394a8:	ldr	r1, [r4, #20]
   394ac:	ldr	r0, [r7], #4
   394b0:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   394b4:	ldr	r1, [r4, #20]
   394b8:	cmp	r9, #0
   394bc:	add	r0, r1, r0
   394c0:	str	r0, [r4, #20]
   394c4:	bne	393b8 <flatcc_json_printer_uint32_vector_field@@Base+0x1bc>
   394c8:	ldrb	r1, [r4, #25]
   394cc:	ldr	r0, [r4, #20]
   394d0:	cmp	r1, #0
   394d4:	beq	39594 <flatcc_json_printer_uint32_vector_field@@Base+0x398>
   394d8:	add	r1, r0, #1
   394dc:	str	r1, [r4, #20]
   394e0:	mov	r1, #10
   394e4:	strb	r1, [r0]
   394e8:	ldr	r0, [r4, #32]
   394ec:	sub	r2, r0, #1
   394f0:	str	r2, [r4, #32]
   394f4:	ldrb	r3, [r4, #25]
   394f8:	ldr	r0, [r4, #20]
   394fc:	ldr	r1, [r4, #16]
   39500:	mla	r7, r2, r3, r0
   39504:	mul	r5, r2, r3
   39508:	cmp	r7, r1
   3950c:	bls	3957c <flatcc_json_printer_uint32_vector_field@@Base+0x380>
   39510:	cmp	r0, r1
   39514:	bcc	39530 <flatcc_json_printer_uint32_vector_field@@Base+0x334>
   39518:	ldr	r2, [r4, #44]	; 0x2c
   3951c:	mov	r0, r4
   39520:	mov	r1, #0
   39524:	blx	r2
   39528:	ldr	r1, [r4, #16]
   3952c:	ldr	r0, [r4, #20]
   39530:	sub	r6, r1, r0
   39534:	cmp	r6, r5
   39538:	bcs	3957c <flatcc_json_printer_uint32_vector_field@@Base+0x380>
   3953c:	mov	r1, #32
   39540:	mov	r2, r6
   39544:	bl	14eec <memset@plt>
   39548:	ldr	r0, [r4, #20]
   3954c:	ldr	r2, [r4, #44]	; 0x2c
   39550:	mov	r1, #0
   39554:	add	r0, r0, r6
   39558:	str	r0, [r4, #20]
   3955c:	mov	r0, r4
   39560:	blx	r2
   39564:	ldr	r1, [r4, #16]
   39568:	ldr	r0, [r4, #20]
   3956c:	sub	r5, r5, r6
   39570:	sub	r6, r1, r0
   39574:	cmp	r5, r6
   39578:	bhi	3953c <flatcc_json_printer_uint32_vector_field@@Base+0x340>
   3957c:	mov	r1, #32
   39580:	mov	r2, r5
   39584:	bl	14eec <memset@plt>
   39588:	ldr	r0, [r4, #20]
   3958c:	add	r0, r0, r5
   39590:	str	r0, [r4, #20]
   39594:	add	r1, r0, #1
   39598:	str	r1, [r4, #20]
   3959c:	mov	r1, #93	; 0x5d
   395a0:	strb	r1, [r0]
   395a4:	sub	sp, fp, #28
   395a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000395ac <flatcc_json_printer_uint64_vector_field@@Base>:
   395ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   395b0:	add	fp, sp, #28
   395b4:	sub	sp, sp, #4
   395b8:	mov	r4, r0
   395bc:	mov	r0, #4
   395c0:	add	r0, r0, r2, lsl #1
   395c4:	ldr	r2, [r1, #8]
   395c8:	cmp	r0, r2
   395cc:	bge	39958 <flatcc_json_printer_uint64_vector_field@@Base+0x3ac>
   395d0:	ldr	r2, [r1, #4]
   395d4:	add	r0, r2, r0
   395d8:	ldrh	r0, [r0]
   395dc:	cmp	r0, #0
   395e0:	ldrne	r2, [r1]
   395e4:	addsne	r8, r2, r0
   395e8:	beq	39958 <flatcc_json_printer_uint64_vector_field@@Base+0x3ac>
   395ec:	ldr	r0, [r1, #16]
   395f0:	ldr	r2, [fp, #8]
   395f4:	add	r7, r0, #1
   395f8:	cmp	r0, #0
   395fc:	str	r7, [r1, #16]
   39600:	beq	39618 <flatcc_json_printer_uint64_vector_field@@Base+0x6c>
   39604:	ldr	r0, [r4, #20]
   39608:	add	r1, r0, #1
   3960c:	str	r1, [r4, #20]
   39610:	mov	r1, #44	; 0x2c
   39614:	strb	r1, [r0]
   39618:	ldr	r0, [r8]
   3961c:	mov	r1, r3
   39620:	ldr	r7, [r8, r0]!
   39624:	mov	r0, r4
   39628:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3962c:	ldr	r1, [r4, #32]
   39630:	ldr	r0, [r4, #20]
   39634:	cmp	r7, #0
   39638:	add	r1, r1, #1
   3963c:	str	r1, [r4, #32]
   39640:	add	r1, r0, #1
   39644:	str	r1, [r4, #20]
   39648:	mov	r1, #91	; 0x5b
   3964c:	strb	r1, [r0]
   39650:	beq	3987c <flatcc_json_printer_uint64_vector_field@@Base+0x2d0>
   39654:	ldrb	r0, [r4, #25]
   39658:	ldr	r2, [r4, #20]
   3965c:	cmp	r0, #0
   39660:	beq	3971c <flatcc_json_printer_uint64_vector_field@@Base+0x170>
   39664:	add	r0, r2, #1
   39668:	str	r0, [r4, #20]
   3966c:	mov	r0, #10
   39670:	strb	r0, [r2]
   39674:	ldr	r0, [r4, #20]
   39678:	ldrb	r2, [r4, #25]
   3967c:	ldr	r3, [r4, #32]
   39680:	ldr	r1, [r4, #16]
   39684:	mla	r6, r3, r2, r0
   39688:	mul	r5, r3, r2
   3968c:	cmp	r6, r1
   39690:	bls	39700 <flatcc_json_printer_uint64_vector_field@@Base+0x154>
   39694:	cmp	r0, r1
   39698:	bcc	396b4 <flatcc_json_printer_uint64_vector_field@@Base+0x108>
   3969c:	ldr	r2, [r4, #44]	; 0x2c
   396a0:	mov	r0, r4
   396a4:	mov	r1, #0
   396a8:	blx	r2
   396ac:	ldr	r1, [r4, #16]
   396b0:	ldr	r0, [r4, #20]
   396b4:	sub	r6, r1, r0
   396b8:	cmp	r6, r5
   396bc:	bcs	39700 <flatcc_json_printer_uint64_vector_field@@Base+0x154>
   396c0:	mov	r1, #32
   396c4:	mov	r2, r6
   396c8:	bl	14eec <memset@plt>
   396cc:	ldr	r0, [r4, #20]
   396d0:	ldr	r2, [r4, #44]	; 0x2c
   396d4:	mov	r1, #0
   396d8:	add	r0, r0, r6
   396dc:	str	r0, [r4, #20]
   396e0:	mov	r0, r4
   396e4:	blx	r2
   396e8:	ldr	r1, [r4, #16]
   396ec:	ldr	r0, [r4, #20]
   396f0:	sub	r5, r5, r6
   396f4:	sub	r6, r1, r0
   396f8:	cmp	r5, r6
   396fc:	bhi	396c0 <flatcc_json_printer_uint64_vector_field@@Base+0x114>
   39700:	mov	r1, #32
   39704:	mov	r2, r5
   39708:	bl	14eec <memset@plt>
   3970c:	ldr	r0, [r4, #20]
   39710:	add	r2, r0, r5
   39714:	str	r2, [r4, #20]
   39718:	b	3973c <flatcc_json_printer_uint64_vector_field@@Base+0x190>
   3971c:	ldr	r0, [r4, #16]
   39720:	cmp	r2, r0
   39724:	bcc	3973c <flatcc_json_printer_uint64_vector_field@@Base+0x190>
   39728:	ldr	r2, [r4, #44]	; 0x2c
   3972c:	mov	r0, r4
   39730:	mov	r1, #0
   39734:	blx	r2
   39738:	ldr	r2, [r4, #20]
   3973c:	ldrd	r0, [r8, #4]
   39740:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   39744:	ldr	r1, [r4, #20]
   39748:	subs	r9, r7, #1
   3974c:	add	r0, r1, r0
   39750:	str	r0, [r4, #20]
   39754:	beq	3987c <flatcc_json_printer_uint64_vector_field@@Base+0x2d0>
   39758:	ldr	r0, [r4, #20]
   3975c:	add	r7, r8, #12
   39760:	mov	r8, #44	; 0x2c
   39764:	mov	sl, #10
   39768:	add	r1, r0, #1
   3976c:	sub	r9, r9, #1
   39770:	str	r1, [r4, #20]
   39774:	strb	r8, [r0]
   39778:	ldrb	r0, [r4, #25]
   3977c:	ldr	r2, [r4, #20]
   39780:	cmp	r0, #0
   39784:	beq	3983c <flatcc_json_printer_uint64_vector_field@@Base+0x290>
   39788:	add	r0, r2, #1
   3978c:	str	r0, [r4, #20]
   39790:	strb	sl, [r2]
   39794:	ldr	r0, [r4, #20]
   39798:	ldrb	r2, [r4, #25]
   3979c:	ldr	r3, [r4, #32]
   397a0:	ldr	r1, [r4, #16]
   397a4:	mla	r6, r3, r2, r0
   397a8:	mul	r5, r3, r2
   397ac:	cmp	r6, r1
   397b0:	bls	39820 <flatcc_json_printer_uint64_vector_field@@Base+0x274>
   397b4:	cmp	r0, r1
   397b8:	bcc	397d4 <flatcc_json_printer_uint64_vector_field@@Base+0x228>
   397bc:	ldr	r2, [r4, #44]	; 0x2c
   397c0:	mov	r0, r4
   397c4:	mov	r1, #0
   397c8:	blx	r2
   397cc:	ldr	r1, [r4, #16]
   397d0:	ldr	r0, [r4, #20]
   397d4:	sub	r6, r1, r0
   397d8:	cmp	r6, r5
   397dc:	bcs	39820 <flatcc_json_printer_uint64_vector_field@@Base+0x274>
   397e0:	mov	r1, #32
   397e4:	mov	r2, r6
   397e8:	bl	14eec <memset@plt>
   397ec:	ldr	r0, [r4, #20]
   397f0:	ldr	r2, [r4, #44]	; 0x2c
   397f4:	mov	r1, #0
   397f8:	add	r0, r0, r6
   397fc:	str	r0, [r4, #20]
   39800:	mov	r0, r4
   39804:	blx	r2
   39808:	ldr	r1, [r4, #16]
   3980c:	ldr	r0, [r4, #20]
   39810:	sub	r5, r5, r6
   39814:	sub	r6, r1, r0
   39818:	cmp	r5, r6
   3981c:	bhi	397e0 <flatcc_json_printer_uint64_vector_field@@Base+0x234>
   39820:	mov	r1, #32
   39824:	mov	r2, r5
   39828:	bl	14eec <memset@plt>
   3982c:	ldr	r0, [r4, #20]
   39830:	add	r2, r0, r5
   39834:	str	r2, [r4, #20]
   39838:	b	3985c <flatcc_json_printer_uint64_vector_field@@Base+0x2b0>
   3983c:	ldr	r0, [r4, #16]
   39840:	cmp	r2, r0
   39844:	bcc	3985c <flatcc_json_printer_uint64_vector_field@@Base+0x2b0>
   39848:	ldr	r2, [r4, #44]	; 0x2c
   3984c:	mov	r0, r4
   39850:	mov	r1, #0
   39854:	blx	r2
   39858:	ldr	r2, [r4, #20]
   3985c:	ldrd	r0, [r7]
   39860:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   39864:	ldr	r1, [r4, #20]
   39868:	add	r7, r7, #8
   3986c:	cmp	r9, #0
   39870:	add	r0, r1, r0
   39874:	str	r0, [r4, #20]
   39878:	bne	39768 <flatcc_json_printer_uint64_vector_field@@Base+0x1bc>
   3987c:	ldrb	r1, [r4, #25]
   39880:	ldr	r0, [r4, #20]
   39884:	cmp	r1, #0
   39888:	beq	39948 <flatcc_json_printer_uint64_vector_field@@Base+0x39c>
   3988c:	add	r1, r0, #1
   39890:	str	r1, [r4, #20]
   39894:	mov	r1, #10
   39898:	strb	r1, [r0]
   3989c:	ldr	r0, [r4, #32]
   398a0:	sub	r2, r0, #1
   398a4:	str	r2, [r4, #32]
   398a8:	ldrb	r3, [r4, #25]
   398ac:	ldr	r0, [r4, #20]
   398b0:	ldr	r1, [r4, #16]
   398b4:	mla	r7, r2, r3, r0
   398b8:	mul	r5, r2, r3
   398bc:	cmp	r7, r1
   398c0:	bls	39930 <flatcc_json_printer_uint64_vector_field@@Base+0x384>
   398c4:	cmp	r0, r1
   398c8:	bcc	398e4 <flatcc_json_printer_uint64_vector_field@@Base+0x338>
   398cc:	ldr	r2, [r4, #44]	; 0x2c
   398d0:	mov	r0, r4
   398d4:	mov	r1, #0
   398d8:	blx	r2
   398dc:	ldr	r1, [r4, #16]
   398e0:	ldr	r0, [r4, #20]
   398e4:	sub	r6, r1, r0
   398e8:	cmp	r6, r5
   398ec:	bcs	39930 <flatcc_json_printer_uint64_vector_field@@Base+0x384>
   398f0:	mov	r1, #32
   398f4:	mov	r2, r6
   398f8:	bl	14eec <memset@plt>
   398fc:	ldr	r0, [r4, #20]
   39900:	ldr	r2, [r4, #44]	; 0x2c
   39904:	mov	r1, #0
   39908:	add	r0, r0, r6
   3990c:	str	r0, [r4, #20]
   39910:	mov	r0, r4
   39914:	blx	r2
   39918:	ldr	r1, [r4, #16]
   3991c:	ldr	r0, [r4, #20]
   39920:	sub	r5, r5, r6
   39924:	sub	r6, r1, r0
   39928:	cmp	r5, r6
   3992c:	bhi	398f0 <flatcc_json_printer_uint64_vector_field@@Base+0x344>
   39930:	mov	r1, #32
   39934:	mov	r2, r5
   39938:	bl	14eec <memset@plt>
   3993c:	ldr	r0, [r4, #20]
   39940:	add	r0, r0, r5
   39944:	str	r0, [r4, #20]
   39948:	add	r1, r0, #1
   3994c:	str	r1, [r4, #20]
   39950:	mov	r1, #93	; 0x5d
   39954:	strb	r1, [r0]
   39958:	sub	sp, fp, #28
   3995c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00039960 <flatcc_json_printer_int8_vector_field@@Base>:
   39960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39964:	add	fp, sp, #28
   39968:	sub	sp, sp, #4
   3996c:	mov	r4, r0
   39970:	mov	r0, #4
   39974:	add	r0, r0, r2, lsl #1
   39978:	ldr	r2, [r1, #8]
   3997c:	cmp	r0, r2
   39980:	bge	39d4c <flatcc_json_printer_int8_vector_field@@Base+0x3ec>
   39984:	ldr	r2, [r1, #4]
   39988:	add	r0, r2, r0
   3998c:	ldrh	r0, [r0]
   39990:	cmp	r0, #0
   39994:	ldrne	r2, [r1]
   39998:	addsne	r8, r2, r0
   3999c:	beq	39d4c <flatcc_json_printer_int8_vector_field@@Base+0x3ec>
   399a0:	ldr	r0, [r1, #16]
   399a4:	ldr	r2, [fp, #8]
   399a8:	add	r7, r0, #1
   399ac:	cmp	r0, #0
   399b0:	str	r7, [r1, #16]
   399b4:	beq	399cc <flatcc_json_printer_int8_vector_field@@Base+0x6c>
   399b8:	ldr	r0, [r4, #20]
   399bc:	add	r1, r0, #1
   399c0:	str	r1, [r4, #20]
   399c4:	mov	r1, #44	; 0x2c
   399c8:	strb	r1, [r0]
   399cc:	ldr	r0, [r8]
   399d0:	mov	r1, r3
   399d4:	ldr	r7, [r8, r0]!
   399d8:	mov	r0, r4
   399dc:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   399e0:	ldr	r1, [r4, #32]
   399e4:	ldr	r0, [r4, #20]
   399e8:	cmp	r7, #0
   399ec:	add	r1, r1, #1
   399f0:	str	r1, [r4, #32]
   399f4:	add	r1, r0, #1
   399f8:	str	r1, [r4, #20]
   399fc:	mov	r1, #91	; 0x5b
   39a00:	strb	r1, [r0]
   39a04:	beq	39c70 <flatcc_json_printer_int8_vector_field@@Base+0x310>
   39a08:	ldrb	r0, [r4, #25]
   39a0c:	ldr	r1, [r4, #20]
   39a10:	cmp	r0, #0
   39a14:	beq	39ad0 <flatcc_json_printer_int8_vector_field@@Base+0x170>
   39a18:	add	r0, r1, #1
   39a1c:	str	r0, [r4, #20]
   39a20:	mov	r0, #10
   39a24:	strb	r0, [r1]
   39a28:	ldr	r0, [r4, #20]
   39a2c:	ldrb	r2, [r4, #25]
   39a30:	ldr	r3, [r4, #32]
   39a34:	ldr	r1, [r4, #16]
   39a38:	mla	r6, r3, r2, r0
   39a3c:	mul	r5, r3, r2
   39a40:	cmp	r6, r1
   39a44:	bls	39ab4 <flatcc_json_printer_int8_vector_field@@Base+0x154>
   39a48:	cmp	r0, r1
   39a4c:	bcc	39a68 <flatcc_json_printer_int8_vector_field@@Base+0x108>
   39a50:	ldr	r2, [r4, #44]	; 0x2c
   39a54:	mov	r0, r4
   39a58:	mov	r1, #0
   39a5c:	blx	r2
   39a60:	ldr	r1, [r4, #16]
   39a64:	ldr	r0, [r4, #20]
   39a68:	sub	r6, r1, r0
   39a6c:	cmp	r6, r5
   39a70:	bcs	39ab4 <flatcc_json_printer_int8_vector_field@@Base+0x154>
   39a74:	mov	r1, #32
   39a78:	mov	r2, r6
   39a7c:	bl	14eec <memset@plt>
   39a80:	ldr	r0, [r4, #20]
   39a84:	ldr	r2, [r4, #44]	; 0x2c
   39a88:	mov	r1, #0
   39a8c:	add	r0, r0, r6
   39a90:	str	r0, [r4, #20]
   39a94:	mov	r0, r4
   39a98:	blx	r2
   39a9c:	ldr	r1, [r4, #16]
   39aa0:	ldr	r0, [r4, #20]
   39aa4:	sub	r5, r5, r6
   39aa8:	sub	r6, r1, r0
   39aac:	cmp	r5, r6
   39ab0:	bhi	39a74 <flatcc_json_printer_int8_vector_field@@Base+0x114>
   39ab4:	mov	r1, #32
   39ab8:	mov	r2, r5
   39abc:	bl	14eec <memset@plt>
   39ac0:	ldr	r0, [r4, #20]
   39ac4:	add	r1, r0, r5
   39ac8:	str	r1, [r4, #20]
   39acc:	b	39af0 <flatcc_json_printer_int8_vector_field@@Base+0x190>
   39ad0:	ldr	r0, [r4, #16]
   39ad4:	cmp	r1, r0
   39ad8:	bcc	39af0 <flatcc_json_printer_int8_vector_field@@Base+0x190>
   39adc:	ldr	r2, [r4, #44]	; 0x2c
   39ae0:	mov	r0, r4
   39ae4:	mov	r1, #0
   39ae8:	blx	r2
   39aec:	ldr	r1, [r4, #20]
   39af0:	ldrb	r0, [r8, #4]
   39af4:	lsr	r5, r0, #7
   39af8:	sxtb	r0, r0
   39afc:	cmn	r0, #1
   39b00:	rsble	r0, r0, #0
   39b04:	movle	r2, #45	; 0x2d
   39b08:	uxtb	r0, r0
   39b0c:	strble	r2, [r1], #1
   39b10:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   39b14:	ldr	r1, [r4, #20]
   39b18:	add	r0, r0, r5
   39b1c:	subs	r9, r7, #1
   39b20:	add	r0, r1, r0
   39b24:	str	r0, [r4, #20]
   39b28:	beq	39c70 <flatcc_json_printer_int8_vector_field@@Base+0x310>
   39b2c:	ldr	r0, [r4, #20]
   39b30:	add	r7, r8, #5
   39b34:	mov	r8, #44	; 0x2c
   39b38:	mov	sl, #10
   39b3c:	add	r1, r0, #1
   39b40:	str	r1, [r4, #20]
   39b44:	strb	r8, [r0]
   39b48:	ldrb	r0, [r4, #25]
   39b4c:	ldr	r1, [r4, #20]
   39b50:	cmp	r0, #0
   39b54:	beq	39c0c <flatcc_json_printer_int8_vector_field@@Base+0x2ac>
   39b58:	add	r0, r1, #1
   39b5c:	str	r0, [r4, #20]
   39b60:	strb	sl, [r1]
   39b64:	ldr	r0, [r4, #20]
   39b68:	ldrb	r2, [r4, #25]
   39b6c:	ldr	r3, [r4, #32]
   39b70:	ldr	r1, [r4, #16]
   39b74:	mla	r6, r3, r2, r0
   39b78:	mul	r5, r3, r2
   39b7c:	cmp	r6, r1
   39b80:	bls	39bf0 <flatcc_json_printer_int8_vector_field@@Base+0x290>
   39b84:	cmp	r0, r1
   39b88:	bcc	39ba4 <flatcc_json_printer_int8_vector_field@@Base+0x244>
   39b8c:	ldr	r2, [r4, #44]	; 0x2c
   39b90:	mov	r0, r4
   39b94:	mov	r1, #0
   39b98:	blx	r2
   39b9c:	ldr	r1, [r4, #16]
   39ba0:	ldr	r0, [r4, #20]
   39ba4:	sub	r6, r1, r0
   39ba8:	cmp	r6, r5
   39bac:	bcs	39bf0 <flatcc_json_printer_int8_vector_field@@Base+0x290>
   39bb0:	mov	r1, #32
   39bb4:	mov	r2, r6
   39bb8:	bl	14eec <memset@plt>
   39bbc:	ldr	r0, [r4, #20]
   39bc0:	ldr	r2, [r4, #44]	; 0x2c
   39bc4:	mov	r1, #0
   39bc8:	add	r0, r0, r6
   39bcc:	str	r0, [r4, #20]
   39bd0:	mov	r0, r4
   39bd4:	blx	r2
   39bd8:	ldr	r1, [r4, #16]
   39bdc:	ldr	r0, [r4, #20]
   39be0:	sub	r5, r5, r6
   39be4:	sub	r6, r1, r0
   39be8:	cmp	r5, r6
   39bec:	bhi	39bb0 <flatcc_json_printer_int8_vector_field@@Base+0x250>
   39bf0:	mov	r1, #32
   39bf4:	mov	r2, r5
   39bf8:	bl	14eec <memset@plt>
   39bfc:	ldr	r0, [r4, #20]
   39c00:	add	r1, r0, r5
   39c04:	str	r1, [r4, #20]
   39c08:	b	39c2c <flatcc_json_printer_int8_vector_field@@Base+0x2cc>
   39c0c:	ldr	r0, [r4, #16]
   39c10:	cmp	r1, r0
   39c14:	bcc	39c2c <flatcc_json_printer_int8_vector_field@@Base+0x2cc>
   39c18:	ldr	r2, [r4, #44]	; 0x2c
   39c1c:	mov	r0, r4
   39c20:	mov	r1, #0
   39c24:	blx	r2
   39c28:	ldr	r1, [r4, #20]
   39c2c:	ldrb	r0, [r7]
   39c30:	sub	r9, r9, #1
   39c34:	lsr	r5, r0, #7
   39c38:	sxtb	r0, r0
   39c3c:	cmn	r0, #1
   39c40:	rsble	r0, r0, #0
   39c44:	movle	r2, #45	; 0x2d
   39c48:	uxtb	r0, r0
   39c4c:	strble	r2, [r1], #1
   39c50:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   39c54:	ldr	r1, [r4, #20]
   39c58:	add	r0, r0, r5
   39c5c:	add	r7, r7, #1
   39c60:	cmp	r9, #0
   39c64:	add	r0, r1, r0
   39c68:	str	r0, [r4, #20]
   39c6c:	bne	39b3c <flatcc_json_printer_int8_vector_field@@Base+0x1dc>
   39c70:	ldrb	r1, [r4, #25]
   39c74:	ldr	r0, [r4, #20]
   39c78:	cmp	r1, #0
   39c7c:	beq	39d3c <flatcc_json_printer_int8_vector_field@@Base+0x3dc>
   39c80:	add	r1, r0, #1
   39c84:	str	r1, [r4, #20]
   39c88:	mov	r1, #10
   39c8c:	strb	r1, [r0]
   39c90:	ldr	r0, [r4, #32]
   39c94:	sub	r2, r0, #1
   39c98:	str	r2, [r4, #32]
   39c9c:	ldrb	r3, [r4, #25]
   39ca0:	ldr	r0, [r4, #20]
   39ca4:	ldr	r1, [r4, #16]
   39ca8:	mla	r7, r2, r3, r0
   39cac:	mul	r5, r2, r3
   39cb0:	cmp	r7, r1
   39cb4:	bls	39d24 <flatcc_json_printer_int8_vector_field@@Base+0x3c4>
   39cb8:	cmp	r0, r1
   39cbc:	bcc	39cd8 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   39cc0:	ldr	r2, [r4, #44]	; 0x2c
   39cc4:	mov	r0, r4
   39cc8:	mov	r1, #0
   39ccc:	blx	r2
   39cd0:	ldr	r1, [r4, #16]
   39cd4:	ldr	r0, [r4, #20]
   39cd8:	sub	r6, r1, r0
   39cdc:	cmp	r6, r5
   39ce0:	bcs	39d24 <flatcc_json_printer_int8_vector_field@@Base+0x3c4>
   39ce4:	mov	r1, #32
   39ce8:	mov	r2, r6
   39cec:	bl	14eec <memset@plt>
   39cf0:	ldr	r0, [r4, #20]
   39cf4:	ldr	r2, [r4, #44]	; 0x2c
   39cf8:	mov	r1, #0
   39cfc:	add	r0, r0, r6
   39d00:	str	r0, [r4, #20]
   39d04:	mov	r0, r4
   39d08:	blx	r2
   39d0c:	ldr	r1, [r4, #16]
   39d10:	ldr	r0, [r4, #20]
   39d14:	sub	r5, r5, r6
   39d18:	sub	r6, r1, r0
   39d1c:	cmp	r5, r6
   39d20:	bhi	39ce4 <flatcc_json_printer_int8_vector_field@@Base+0x384>
   39d24:	mov	r1, #32
   39d28:	mov	r2, r5
   39d2c:	bl	14eec <memset@plt>
   39d30:	ldr	r0, [r4, #20]
   39d34:	add	r0, r0, r5
   39d38:	str	r0, [r4, #20]
   39d3c:	add	r1, r0, #1
   39d40:	str	r1, [r4, #20]
   39d44:	mov	r1, #93	; 0x5d
   39d48:	strb	r1, [r0]
   39d4c:	sub	sp, fp, #28
   39d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00039d54 <flatcc_json_printer_int16_vector_field@@Base>:
   39d54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39d58:	add	fp, sp, #28
   39d5c:	sub	sp, sp, #4
   39d60:	mov	r4, r0
   39d64:	mov	r0, #4
   39d68:	add	r0, r0, r2, lsl #1
   39d6c:	ldr	r2, [r1, #8]
   39d70:	cmp	r0, r2
   39d74:	bge	3a140 <flatcc_json_printer_int16_vector_field@@Base+0x3ec>
   39d78:	ldr	r2, [r1, #4]
   39d7c:	add	r0, r2, r0
   39d80:	ldrh	r0, [r0]
   39d84:	cmp	r0, #0
   39d88:	ldrne	r2, [r1]
   39d8c:	addsne	r8, r2, r0
   39d90:	beq	3a140 <flatcc_json_printer_int16_vector_field@@Base+0x3ec>
   39d94:	ldr	r0, [r1, #16]
   39d98:	ldr	r2, [fp, #8]
   39d9c:	add	r7, r0, #1
   39da0:	cmp	r0, #0
   39da4:	str	r7, [r1, #16]
   39da8:	beq	39dc0 <flatcc_json_printer_int16_vector_field@@Base+0x6c>
   39dac:	ldr	r0, [r4, #20]
   39db0:	add	r1, r0, #1
   39db4:	str	r1, [r4, #20]
   39db8:	mov	r1, #44	; 0x2c
   39dbc:	strb	r1, [r0]
   39dc0:	ldr	r0, [r8]
   39dc4:	mov	r1, r3
   39dc8:	ldr	r7, [r8, r0]!
   39dcc:	mov	r0, r4
   39dd0:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   39dd4:	ldr	r1, [r4, #32]
   39dd8:	ldr	r0, [r4, #20]
   39ddc:	cmp	r7, #0
   39de0:	add	r1, r1, #1
   39de4:	str	r1, [r4, #32]
   39de8:	add	r1, r0, #1
   39dec:	str	r1, [r4, #20]
   39df0:	mov	r1, #91	; 0x5b
   39df4:	strb	r1, [r0]
   39df8:	beq	3a064 <flatcc_json_printer_int16_vector_field@@Base+0x310>
   39dfc:	ldrb	r0, [r4, #25]
   39e00:	ldr	r1, [r4, #20]
   39e04:	cmp	r0, #0
   39e08:	beq	39ec4 <flatcc_json_printer_int16_vector_field@@Base+0x170>
   39e0c:	add	r0, r1, #1
   39e10:	str	r0, [r4, #20]
   39e14:	mov	r0, #10
   39e18:	strb	r0, [r1]
   39e1c:	ldr	r0, [r4, #20]
   39e20:	ldrb	r2, [r4, #25]
   39e24:	ldr	r3, [r4, #32]
   39e28:	ldr	r1, [r4, #16]
   39e2c:	mla	r6, r3, r2, r0
   39e30:	mul	r5, r3, r2
   39e34:	cmp	r6, r1
   39e38:	bls	39ea8 <flatcc_json_printer_int16_vector_field@@Base+0x154>
   39e3c:	cmp	r0, r1
   39e40:	bcc	39e5c <flatcc_json_printer_int16_vector_field@@Base+0x108>
   39e44:	ldr	r2, [r4, #44]	; 0x2c
   39e48:	mov	r0, r4
   39e4c:	mov	r1, #0
   39e50:	blx	r2
   39e54:	ldr	r1, [r4, #16]
   39e58:	ldr	r0, [r4, #20]
   39e5c:	sub	r6, r1, r0
   39e60:	cmp	r6, r5
   39e64:	bcs	39ea8 <flatcc_json_printer_int16_vector_field@@Base+0x154>
   39e68:	mov	r1, #32
   39e6c:	mov	r2, r6
   39e70:	bl	14eec <memset@plt>
   39e74:	ldr	r0, [r4, #20]
   39e78:	ldr	r2, [r4, #44]	; 0x2c
   39e7c:	mov	r1, #0
   39e80:	add	r0, r0, r6
   39e84:	str	r0, [r4, #20]
   39e88:	mov	r0, r4
   39e8c:	blx	r2
   39e90:	ldr	r1, [r4, #16]
   39e94:	ldr	r0, [r4, #20]
   39e98:	sub	r5, r5, r6
   39e9c:	sub	r6, r1, r0
   39ea0:	cmp	r5, r6
   39ea4:	bhi	39e68 <flatcc_json_printer_int16_vector_field@@Base+0x114>
   39ea8:	mov	r1, #32
   39eac:	mov	r2, r5
   39eb0:	bl	14eec <memset@plt>
   39eb4:	ldr	r0, [r4, #20]
   39eb8:	add	r1, r0, r5
   39ebc:	str	r1, [r4, #20]
   39ec0:	b	39ee4 <flatcc_json_printer_int16_vector_field@@Base+0x190>
   39ec4:	ldr	r0, [r4, #16]
   39ec8:	cmp	r1, r0
   39ecc:	bcc	39ee4 <flatcc_json_printer_int16_vector_field@@Base+0x190>
   39ed0:	ldr	r2, [r4, #44]	; 0x2c
   39ed4:	mov	r0, r4
   39ed8:	mov	r1, #0
   39edc:	blx	r2
   39ee0:	ldr	r1, [r4, #20]
   39ee4:	ldrh	r0, [r8, #4]
   39ee8:	lsr	r5, r0, #15
   39eec:	sxth	r0, r0
   39ef0:	cmn	r0, #1
   39ef4:	rsble	r0, r0, #0
   39ef8:	movle	r2, #45	; 0x2d
   39efc:	uxth	r0, r0
   39f00:	strble	r2, [r1], #1
   39f04:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   39f08:	ldr	r1, [r4, #20]
   39f0c:	add	r0, r0, r5
   39f10:	subs	r9, r7, #1
   39f14:	add	r0, r1, r0
   39f18:	str	r0, [r4, #20]
   39f1c:	beq	3a064 <flatcc_json_printer_int16_vector_field@@Base+0x310>
   39f20:	ldr	r0, [r4, #20]
   39f24:	add	r7, r8, #6
   39f28:	mov	r8, #44	; 0x2c
   39f2c:	mov	sl, #10
   39f30:	add	r1, r0, #1
   39f34:	str	r1, [r4, #20]
   39f38:	strb	r8, [r0]
   39f3c:	ldrb	r0, [r4, #25]
   39f40:	ldr	r1, [r4, #20]
   39f44:	cmp	r0, #0
   39f48:	beq	3a000 <flatcc_json_printer_int16_vector_field@@Base+0x2ac>
   39f4c:	add	r0, r1, #1
   39f50:	str	r0, [r4, #20]
   39f54:	strb	sl, [r1]
   39f58:	ldr	r0, [r4, #20]
   39f5c:	ldrb	r2, [r4, #25]
   39f60:	ldr	r3, [r4, #32]
   39f64:	ldr	r1, [r4, #16]
   39f68:	mla	r6, r3, r2, r0
   39f6c:	mul	r5, r3, r2
   39f70:	cmp	r6, r1
   39f74:	bls	39fe4 <flatcc_json_printer_int16_vector_field@@Base+0x290>
   39f78:	cmp	r0, r1
   39f7c:	bcc	39f98 <flatcc_json_printer_int16_vector_field@@Base+0x244>
   39f80:	ldr	r2, [r4, #44]	; 0x2c
   39f84:	mov	r0, r4
   39f88:	mov	r1, #0
   39f8c:	blx	r2
   39f90:	ldr	r1, [r4, #16]
   39f94:	ldr	r0, [r4, #20]
   39f98:	sub	r6, r1, r0
   39f9c:	cmp	r6, r5
   39fa0:	bcs	39fe4 <flatcc_json_printer_int16_vector_field@@Base+0x290>
   39fa4:	mov	r1, #32
   39fa8:	mov	r2, r6
   39fac:	bl	14eec <memset@plt>
   39fb0:	ldr	r0, [r4, #20]
   39fb4:	ldr	r2, [r4, #44]	; 0x2c
   39fb8:	mov	r1, #0
   39fbc:	add	r0, r0, r6
   39fc0:	str	r0, [r4, #20]
   39fc4:	mov	r0, r4
   39fc8:	blx	r2
   39fcc:	ldr	r1, [r4, #16]
   39fd0:	ldr	r0, [r4, #20]
   39fd4:	sub	r5, r5, r6
   39fd8:	sub	r6, r1, r0
   39fdc:	cmp	r5, r6
   39fe0:	bhi	39fa4 <flatcc_json_printer_int16_vector_field@@Base+0x250>
   39fe4:	mov	r1, #32
   39fe8:	mov	r2, r5
   39fec:	bl	14eec <memset@plt>
   39ff0:	ldr	r0, [r4, #20]
   39ff4:	add	r1, r0, r5
   39ff8:	str	r1, [r4, #20]
   39ffc:	b	3a020 <flatcc_json_printer_int16_vector_field@@Base+0x2cc>
   3a000:	ldr	r0, [r4, #16]
   3a004:	cmp	r1, r0
   3a008:	bcc	3a020 <flatcc_json_printer_int16_vector_field@@Base+0x2cc>
   3a00c:	ldr	r2, [r4, #44]	; 0x2c
   3a010:	mov	r0, r4
   3a014:	mov	r1, #0
   3a018:	blx	r2
   3a01c:	ldr	r1, [r4, #20]
   3a020:	ldrh	r0, [r7]
   3a024:	sub	r9, r9, #1
   3a028:	lsr	r5, r0, #15
   3a02c:	sxth	r0, r0
   3a030:	cmn	r0, #1
   3a034:	rsble	r0, r0, #0
   3a038:	movle	r2, #45	; 0x2d
   3a03c:	uxth	r0, r0
   3a040:	strble	r2, [r1], #1
   3a044:	bl	358f0 <flatcc_json_printer_uint16@@Base+0x2c>
   3a048:	ldr	r1, [r4, #20]
   3a04c:	add	r0, r0, r5
   3a050:	add	r7, r7, #2
   3a054:	cmp	r9, #0
   3a058:	add	r0, r1, r0
   3a05c:	str	r0, [r4, #20]
   3a060:	bne	39f30 <flatcc_json_printer_int16_vector_field@@Base+0x1dc>
   3a064:	ldrb	r1, [r4, #25]
   3a068:	ldr	r0, [r4, #20]
   3a06c:	cmp	r1, #0
   3a070:	beq	3a130 <flatcc_json_printer_int16_vector_field@@Base+0x3dc>
   3a074:	add	r1, r0, #1
   3a078:	str	r1, [r4, #20]
   3a07c:	mov	r1, #10
   3a080:	strb	r1, [r0]
   3a084:	ldr	r0, [r4, #32]
   3a088:	sub	r2, r0, #1
   3a08c:	str	r2, [r4, #32]
   3a090:	ldrb	r3, [r4, #25]
   3a094:	ldr	r0, [r4, #20]
   3a098:	ldr	r1, [r4, #16]
   3a09c:	mla	r7, r2, r3, r0
   3a0a0:	mul	r5, r2, r3
   3a0a4:	cmp	r7, r1
   3a0a8:	bls	3a118 <flatcc_json_printer_int16_vector_field@@Base+0x3c4>
   3a0ac:	cmp	r0, r1
   3a0b0:	bcc	3a0cc <flatcc_json_printer_int16_vector_field@@Base+0x378>
   3a0b4:	ldr	r2, [r4, #44]	; 0x2c
   3a0b8:	mov	r0, r4
   3a0bc:	mov	r1, #0
   3a0c0:	blx	r2
   3a0c4:	ldr	r1, [r4, #16]
   3a0c8:	ldr	r0, [r4, #20]
   3a0cc:	sub	r6, r1, r0
   3a0d0:	cmp	r6, r5
   3a0d4:	bcs	3a118 <flatcc_json_printer_int16_vector_field@@Base+0x3c4>
   3a0d8:	mov	r1, #32
   3a0dc:	mov	r2, r6
   3a0e0:	bl	14eec <memset@plt>
   3a0e4:	ldr	r0, [r4, #20]
   3a0e8:	ldr	r2, [r4, #44]	; 0x2c
   3a0ec:	mov	r1, #0
   3a0f0:	add	r0, r0, r6
   3a0f4:	str	r0, [r4, #20]
   3a0f8:	mov	r0, r4
   3a0fc:	blx	r2
   3a100:	ldr	r1, [r4, #16]
   3a104:	ldr	r0, [r4, #20]
   3a108:	sub	r5, r5, r6
   3a10c:	sub	r6, r1, r0
   3a110:	cmp	r5, r6
   3a114:	bhi	3a0d8 <flatcc_json_printer_int16_vector_field@@Base+0x384>
   3a118:	mov	r1, #32
   3a11c:	mov	r2, r5
   3a120:	bl	14eec <memset@plt>
   3a124:	ldr	r0, [r4, #20]
   3a128:	add	r0, r0, r5
   3a12c:	str	r0, [r4, #20]
   3a130:	add	r1, r0, #1
   3a134:	str	r1, [r4, #20]
   3a138:	mov	r1, #93	; 0x5d
   3a13c:	strb	r1, [r0]
   3a140:	sub	sp, fp, #28
   3a144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003a148 <flatcc_json_printer_int32_vector_field@@Base>:
   3a148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a14c:	add	fp, sp, #28
   3a150:	sub	sp, sp, #4
   3a154:	mov	r4, r0
   3a158:	mov	r0, #4
   3a15c:	add	r0, r0, r2, lsl #1
   3a160:	ldr	r2, [r1, #8]
   3a164:	cmp	r0, r2
   3a168:	bge	3a524 <flatcc_json_printer_int32_vector_field@@Base+0x3dc>
   3a16c:	ldr	r2, [r1, #4]
   3a170:	add	r0, r2, r0
   3a174:	ldrh	r0, [r0]
   3a178:	cmp	r0, #0
   3a17c:	ldrne	r2, [r1]
   3a180:	addsne	r8, r2, r0
   3a184:	beq	3a524 <flatcc_json_printer_int32_vector_field@@Base+0x3dc>
   3a188:	ldr	r0, [r1, #16]
   3a18c:	ldr	r2, [fp, #8]
   3a190:	add	r7, r0, #1
   3a194:	cmp	r0, #0
   3a198:	str	r7, [r1, #16]
   3a19c:	beq	3a1b4 <flatcc_json_printer_int32_vector_field@@Base+0x6c>
   3a1a0:	ldr	r0, [r4, #20]
   3a1a4:	add	r1, r0, #1
   3a1a8:	str	r1, [r4, #20]
   3a1ac:	mov	r1, #44	; 0x2c
   3a1b0:	strb	r1, [r0]
   3a1b4:	ldr	r0, [r8]
   3a1b8:	mov	r1, r3
   3a1bc:	ldr	r7, [r8, r0]!
   3a1c0:	mov	r0, r4
   3a1c4:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3a1c8:	ldr	r1, [r4, #32]
   3a1cc:	ldr	r0, [r4, #20]
   3a1d0:	cmp	r7, #0
   3a1d4:	add	r1, r1, #1
   3a1d8:	str	r1, [r4, #32]
   3a1dc:	add	r1, r0, #1
   3a1e0:	str	r1, [r4, #20]
   3a1e4:	mov	r1, #91	; 0x5b
   3a1e8:	strb	r1, [r0]
   3a1ec:	beq	3a448 <flatcc_json_printer_int32_vector_field@@Base+0x300>
   3a1f0:	ldrb	r0, [r4, #25]
   3a1f4:	ldr	r1, [r4, #20]
   3a1f8:	cmp	r0, #0
   3a1fc:	beq	3a2b8 <flatcc_json_printer_int32_vector_field@@Base+0x170>
   3a200:	add	r0, r1, #1
   3a204:	str	r0, [r4, #20]
   3a208:	mov	r0, #10
   3a20c:	strb	r0, [r1]
   3a210:	ldr	r0, [r4, #20]
   3a214:	ldrb	r2, [r4, #25]
   3a218:	ldr	r3, [r4, #32]
   3a21c:	ldr	r1, [r4, #16]
   3a220:	mla	r6, r3, r2, r0
   3a224:	mul	r5, r3, r2
   3a228:	cmp	r6, r1
   3a22c:	bls	3a29c <flatcc_json_printer_int32_vector_field@@Base+0x154>
   3a230:	cmp	r0, r1
   3a234:	bcc	3a250 <flatcc_json_printer_int32_vector_field@@Base+0x108>
   3a238:	ldr	r2, [r4, #44]	; 0x2c
   3a23c:	mov	r0, r4
   3a240:	mov	r1, #0
   3a244:	blx	r2
   3a248:	ldr	r1, [r4, #16]
   3a24c:	ldr	r0, [r4, #20]
   3a250:	sub	r6, r1, r0
   3a254:	cmp	r6, r5
   3a258:	bcs	3a29c <flatcc_json_printer_int32_vector_field@@Base+0x154>
   3a25c:	mov	r1, #32
   3a260:	mov	r2, r6
   3a264:	bl	14eec <memset@plt>
   3a268:	ldr	r0, [r4, #20]
   3a26c:	ldr	r2, [r4, #44]	; 0x2c
   3a270:	mov	r1, #0
   3a274:	add	r0, r0, r6
   3a278:	str	r0, [r4, #20]
   3a27c:	mov	r0, r4
   3a280:	blx	r2
   3a284:	ldr	r1, [r4, #16]
   3a288:	ldr	r0, [r4, #20]
   3a28c:	sub	r5, r5, r6
   3a290:	sub	r6, r1, r0
   3a294:	cmp	r5, r6
   3a298:	bhi	3a25c <flatcc_json_printer_int32_vector_field@@Base+0x114>
   3a29c:	mov	r1, #32
   3a2a0:	mov	r2, r5
   3a2a4:	bl	14eec <memset@plt>
   3a2a8:	ldr	r0, [r4, #20]
   3a2ac:	add	r1, r0, r5
   3a2b0:	str	r1, [r4, #20]
   3a2b4:	b	3a2d8 <flatcc_json_printer_int32_vector_field@@Base+0x190>
   3a2b8:	ldr	r0, [r4, #16]
   3a2bc:	cmp	r1, r0
   3a2c0:	bcc	3a2d8 <flatcc_json_printer_int32_vector_field@@Base+0x190>
   3a2c4:	ldr	r2, [r4, #44]	; 0x2c
   3a2c8:	mov	r0, r4
   3a2cc:	mov	r1, #0
   3a2d0:	blx	r2
   3a2d4:	ldr	r1, [r4, #20]
   3a2d8:	ldr	r0, [r8, #4]
   3a2dc:	cmn	r0, #1
   3a2e0:	lsr	r5, r0, #31
   3a2e4:	movle	r2, #45	; 0x2d
   3a2e8:	rsble	r0, r0, #0
   3a2ec:	strble	r2, [r1], #1
   3a2f0:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   3a2f4:	ldr	r1, [r4, #20]
   3a2f8:	add	r0, r0, r5
   3a2fc:	subs	r9, r7, #1
   3a300:	add	r0, r1, r0
   3a304:	str	r0, [r4, #20]
   3a308:	beq	3a448 <flatcc_json_printer_int32_vector_field@@Base+0x300>
   3a30c:	ldr	r0, [r4, #20]
   3a310:	add	r7, r8, #8
   3a314:	mov	r8, #44	; 0x2c
   3a318:	mov	sl, #10
   3a31c:	add	r1, r0, #1
   3a320:	str	r1, [r4, #20]
   3a324:	strb	r8, [r0]
   3a328:	ldrb	r0, [r4, #25]
   3a32c:	ldr	r1, [r4, #20]
   3a330:	cmp	r0, #0
   3a334:	beq	3a3ec <flatcc_json_printer_int32_vector_field@@Base+0x2a4>
   3a338:	add	r0, r1, #1
   3a33c:	str	r0, [r4, #20]
   3a340:	strb	sl, [r1]
   3a344:	ldr	r0, [r4, #20]
   3a348:	ldrb	r2, [r4, #25]
   3a34c:	ldr	r3, [r4, #32]
   3a350:	ldr	r1, [r4, #16]
   3a354:	mla	r6, r3, r2, r0
   3a358:	mul	r5, r3, r2
   3a35c:	cmp	r6, r1
   3a360:	bls	3a3d0 <flatcc_json_printer_int32_vector_field@@Base+0x288>
   3a364:	cmp	r0, r1
   3a368:	bcc	3a384 <flatcc_json_printer_int32_vector_field@@Base+0x23c>
   3a36c:	ldr	r2, [r4, #44]	; 0x2c
   3a370:	mov	r0, r4
   3a374:	mov	r1, #0
   3a378:	blx	r2
   3a37c:	ldr	r1, [r4, #16]
   3a380:	ldr	r0, [r4, #20]
   3a384:	sub	r6, r1, r0
   3a388:	cmp	r6, r5
   3a38c:	bcs	3a3d0 <flatcc_json_printer_int32_vector_field@@Base+0x288>
   3a390:	mov	r1, #32
   3a394:	mov	r2, r6
   3a398:	bl	14eec <memset@plt>
   3a39c:	ldr	r0, [r4, #20]
   3a3a0:	ldr	r2, [r4, #44]	; 0x2c
   3a3a4:	mov	r1, #0
   3a3a8:	add	r0, r0, r6
   3a3ac:	str	r0, [r4, #20]
   3a3b0:	mov	r0, r4
   3a3b4:	blx	r2
   3a3b8:	ldr	r1, [r4, #16]
   3a3bc:	ldr	r0, [r4, #20]
   3a3c0:	sub	r5, r5, r6
   3a3c4:	sub	r6, r1, r0
   3a3c8:	cmp	r5, r6
   3a3cc:	bhi	3a390 <flatcc_json_printer_int32_vector_field@@Base+0x248>
   3a3d0:	mov	r1, #32
   3a3d4:	mov	r2, r5
   3a3d8:	bl	14eec <memset@plt>
   3a3dc:	ldr	r0, [r4, #20]
   3a3e0:	add	r1, r0, r5
   3a3e4:	str	r1, [r4, #20]
   3a3e8:	b	3a40c <flatcc_json_printer_int32_vector_field@@Base+0x2c4>
   3a3ec:	ldr	r0, [r4, #16]
   3a3f0:	cmp	r1, r0
   3a3f4:	bcc	3a40c <flatcc_json_printer_int32_vector_field@@Base+0x2c4>
   3a3f8:	ldr	r2, [r4, #44]	; 0x2c
   3a3fc:	mov	r0, r4
   3a400:	mov	r1, #0
   3a404:	blx	r2
   3a408:	ldr	r1, [r4, #20]
   3a40c:	ldr	r0, [r7]
   3a410:	sub	r9, r9, #1
   3a414:	cmn	r0, #1
   3a418:	lsr	r5, r0, #31
   3a41c:	movle	r2, #45	; 0x2d
   3a420:	rsble	r0, r0, #0
   3a424:	strble	r2, [r1], #1
   3a428:	bl	35a8c <flatcc_json_printer_uint32@@Base+0x2c>
   3a42c:	ldr	r1, [r4, #20]
   3a430:	add	r0, r0, r5
   3a434:	add	r7, r7, #4
   3a438:	cmp	r9, #0
   3a43c:	add	r0, r1, r0
   3a440:	str	r0, [r4, #20]
   3a444:	bne	3a31c <flatcc_json_printer_int32_vector_field@@Base+0x1d4>
   3a448:	ldrb	r1, [r4, #25]
   3a44c:	ldr	r0, [r4, #20]
   3a450:	cmp	r1, #0
   3a454:	beq	3a514 <flatcc_json_printer_int32_vector_field@@Base+0x3cc>
   3a458:	add	r1, r0, #1
   3a45c:	str	r1, [r4, #20]
   3a460:	mov	r1, #10
   3a464:	strb	r1, [r0]
   3a468:	ldr	r0, [r4, #32]
   3a46c:	sub	r2, r0, #1
   3a470:	str	r2, [r4, #32]
   3a474:	ldrb	r3, [r4, #25]
   3a478:	ldr	r0, [r4, #20]
   3a47c:	ldr	r1, [r4, #16]
   3a480:	mla	r7, r2, r3, r0
   3a484:	mul	r5, r2, r3
   3a488:	cmp	r7, r1
   3a48c:	bls	3a4fc <flatcc_json_printer_int32_vector_field@@Base+0x3b4>
   3a490:	cmp	r0, r1
   3a494:	bcc	3a4b0 <flatcc_json_printer_int32_vector_field@@Base+0x368>
   3a498:	ldr	r2, [r4, #44]	; 0x2c
   3a49c:	mov	r0, r4
   3a4a0:	mov	r1, #0
   3a4a4:	blx	r2
   3a4a8:	ldr	r1, [r4, #16]
   3a4ac:	ldr	r0, [r4, #20]
   3a4b0:	sub	r6, r1, r0
   3a4b4:	cmp	r6, r5
   3a4b8:	bcs	3a4fc <flatcc_json_printer_int32_vector_field@@Base+0x3b4>
   3a4bc:	mov	r1, #32
   3a4c0:	mov	r2, r6
   3a4c4:	bl	14eec <memset@plt>
   3a4c8:	ldr	r0, [r4, #20]
   3a4cc:	ldr	r2, [r4, #44]	; 0x2c
   3a4d0:	mov	r1, #0
   3a4d4:	add	r0, r0, r6
   3a4d8:	str	r0, [r4, #20]
   3a4dc:	mov	r0, r4
   3a4e0:	blx	r2
   3a4e4:	ldr	r1, [r4, #16]
   3a4e8:	ldr	r0, [r4, #20]
   3a4ec:	sub	r5, r5, r6
   3a4f0:	sub	r6, r1, r0
   3a4f4:	cmp	r5, r6
   3a4f8:	bhi	3a4bc <flatcc_json_printer_int32_vector_field@@Base+0x374>
   3a4fc:	mov	r1, #32
   3a500:	mov	r2, r5
   3a504:	bl	14eec <memset@plt>
   3a508:	ldr	r0, [r4, #20]
   3a50c:	add	r0, r0, r5
   3a510:	str	r0, [r4, #20]
   3a514:	add	r1, r0, #1
   3a518:	str	r1, [r4, #20]
   3a51c:	mov	r1, #93	; 0x5d
   3a520:	strb	r1, [r0]
   3a524:	sub	sp, fp, #28
   3a528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003a52c <flatcc_json_printer_int64_vector_field@@Base>:
   3a52c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a530:	add	fp, sp, #28
   3a534:	sub	sp, sp, #4
   3a538:	mov	r4, r0
   3a53c:	mov	r0, #4
   3a540:	add	r0, r0, r2, lsl #1
   3a544:	ldr	r2, [r1, #8]
   3a548:	cmp	r0, r2
   3a54c:	bge	3a918 <flatcc_json_printer_int64_vector_field@@Base+0x3ec>
   3a550:	ldr	r2, [r1, #4]
   3a554:	add	r0, r2, r0
   3a558:	ldrh	r0, [r0]
   3a55c:	cmp	r0, #0
   3a560:	ldrne	r2, [r1]
   3a564:	addsne	r8, r2, r0
   3a568:	beq	3a918 <flatcc_json_printer_int64_vector_field@@Base+0x3ec>
   3a56c:	ldr	r0, [r1, #16]
   3a570:	ldr	r2, [fp, #8]
   3a574:	add	r7, r0, #1
   3a578:	cmp	r0, #0
   3a57c:	str	r7, [r1, #16]
   3a580:	beq	3a598 <flatcc_json_printer_int64_vector_field@@Base+0x6c>
   3a584:	ldr	r0, [r4, #20]
   3a588:	add	r1, r0, #1
   3a58c:	str	r1, [r4, #20]
   3a590:	mov	r1, #44	; 0x2c
   3a594:	strb	r1, [r0]
   3a598:	ldr	r0, [r8]
   3a59c:	mov	r1, r3
   3a5a0:	ldr	r7, [r8, r0]!
   3a5a4:	mov	r0, r4
   3a5a8:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3a5ac:	ldr	r1, [r4, #32]
   3a5b0:	ldr	r0, [r4, #20]
   3a5b4:	cmp	r7, #0
   3a5b8:	add	r1, r1, #1
   3a5bc:	str	r1, [r4, #32]
   3a5c0:	add	r1, r0, #1
   3a5c4:	str	r1, [r4, #20]
   3a5c8:	mov	r1, #91	; 0x5b
   3a5cc:	strb	r1, [r0]
   3a5d0:	beq	3a83c <flatcc_json_printer_int64_vector_field@@Base+0x310>
   3a5d4:	ldrb	r0, [r4, #25]
   3a5d8:	ldr	r2, [r4, #20]
   3a5dc:	cmp	r0, #0
   3a5e0:	beq	3a69c <flatcc_json_printer_int64_vector_field@@Base+0x170>
   3a5e4:	add	r0, r2, #1
   3a5e8:	str	r0, [r4, #20]
   3a5ec:	mov	r0, #10
   3a5f0:	strb	r0, [r2]
   3a5f4:	ldr	r0, [r4, #20]
   3a5f8:	ldrb	r2, [r4, #25]
   3a5fc:	ldr	r3, [r4, #32]
   3a600:	ldr	r1, [r4, #16]
   3a604:	mla	r6, r3, r2, r0
   3a608:	mul	r5, r3, r2
   3a60c:	cmp	r6, r1
   3a610:	bls	3a680 <flatcc_json_printer_int64_vector_field@@Base+0x154>
   3a614:	cmp	r0, r1
   3a618:	bcc	3a634 <flatcc_json_printer_int64_vector_field@@Base+0x108>
   3a61c:	ldr	r2, [r4, #44]	; 0x2c
   3a620:	mov	r0, r4
   3a624:	mov	r1, #0
   3a628:	blx	r2
   3a62c:	ldr	r1, [r4, #16]
   3a630:	ldr	r0, [r4, #20]
   3a634:	sub	r6, r1, r0
   3a638:	cmp	r6, r5
   3a63c:	bcs	3a680 <flatcc_json_printer_int64_vector_field@@Base+0x154>
   3a640:	mov	r1, #32
   3a644:	mov	r2, r6
   3a648:	bl	14eec <memset@plt>
   3a64c:	ldr	r0, [r4, #20]
   3a650:	ldr	r2, [r4, #44]	; 0x2c
   3a654:	mov	r1, #0
   3a658:	add	r0, r0, r6
   3a65c:	str	r0, [r4, #20]
   3a660:	mov	r0, r4
   3a664:	blx	r2
   3a668:	ldr	r1, [r4, #16]
   3a66c:	ldr	r0, [r4, #20]
   3a670:	sub	r5, r5, r6
   3a674:	sub	r6, r1, r0
   3a678:	cmp	r5, r6
   3a67c:	bhi	3a640 <flatcc_json_printer_int64_vector_field@@Base+0x114>
   3a680:	mov	r1, #32
   3a684:	mov	r2, r5
   3a688:	bl	14eec <memset@plt>
   3a68c:	ldr	r0, [r4, #20]
   3a690:	add	r2, r0, r5
   3a694:	str	r2, [r4, #20]
   3a698:	b	3a6bc <flatcc_json_printer_int64_vector_field@@Base+0x190>
   3a69c:	ldr	r0, [r4, #16]
   3a6a0:	cmp	r2, r0
   3a6a4:	bcc	3a6bc <flatcc_json_printer_int64_vector_field@@Base+0x190>
   3a6a8:	ldr	r2, [r4, #44]	; 0x2c
   3a6ac:	mov	r0, r4
   3a6b0:	mov	r1, #0
   3a6b4:	blx	r2
   3a6b8:	ldr	r2, [r4, #20]
   3a6bc:	ldrd	r0, [r8, #4]
   3a6c0:	lsr	r5, r1, #31
   3a6c4:	cmn	r1, #1
   3a6c8:	bgt	3a6dc <flatcc_json_printer_int64_vector_field@@Base+0x1b0>
   3a6cc:	mov	r3, #45	; 0x2d
   3a6d0:	rsbs	r0, r0, #0
   3a6d4:	strb	r3, [r2], #1
   3a6d8:	rsc	r1, r1, #0
   3a6dc:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   3a6e0:	ldr	r1, [r4, #20]
   3a6e4:	add	r0, r0, r5
   3a6e8:	subs	r9, r7, #1
   3a6ec:	add	r0, r1, r0
   3a6f0:	str	r0, [r4, #20]
   3a6f4:	beq	3a83c <flatcc_json_printer_int64_vector_field@@Base+0x310>
   3a6f8:	ldr	r0, [r4, #20]
   3a6fc:	add	r7, r8, #12
   3a700:	mov	r8, #44	; 0x2c
   3a704:	mov	sl, #10
   3a708:	add	r1, r0, #1
   3a70c:	str	r1, [r4, #20]
   3a710:	strb	r8, [r0]
   3a714:	ldrb	r0, [r4, #25]
   3a718:	ldr	r2, [r4, #20]
   3a71c:	cmp	r0, #0
   3a720:	beq	3a7d8 <flatcc_json_printer_int64_vector_field@@Base+0x2ac>
   3a724:	add	r0, r2, #1
   3a728:	str	r0, [r4, #20]
   3a72c:	strb	sl, [r2]
   3a730:	ldr	r0, [r4, #20]
   3a734:	ldrb	r2, [r4, #25]
   3a738:	ldr	r3, [r4, #32]
   3a73c:	ldr	r1, [r4, #16]
   3a740:	mla	r6, r3, r2, r0
   3a744:	mul	r5, r3, r2
   3a748:	cmp	r6, r1
   3a74c:	bls	3a7bc <flatcc_json_printer_int64_vector_field@@Base+0x290>
   3a750:	cmp	r0, r1
   3a754:	bcc	3a770 <flatcc_json_printer_int64_vector_field@@Base+0x244>
   3a758:	ldr	r2, [r4, #44]	; 0x2c
   3a75c:	mov	r0, r4
   3a760:	mov	r1, #0
   3a764:	blx	r2
   3a768:	ldr	r1, [r4, #16]
   3a76c:	ldr	r0, [r4, #20]
   3a770:	sub	r6, r1, r0
   3a774:	cmp	r6, r5
   3a778:	bcs	3a7bc <flatcc_json_printer_int64_vector_field@@Base+0x290>
   3a77c:	mov	r1, #32
   3a780:	mov	r2, r6
   3a784:	bl	14eec <memset@plt>
   3a788:	ldr	r0, [r4, #20]
   3a78c:	ldr	r2, [r4, #44]	; 0x2c
   3a790:	mov	r1, #0
   3a794:	add	r0, r0, r6
   3a798:	str	r0, [r4, #20]
   3a79c:	mov	r0, r4
   3a7a0:	blx	r2
   3a7a4:	ldr	r1, [r4, #16]
   3a7a8:	ldr	r0, [r4, #20]
   3a7ac:	sub	r5, r5, r6
   3a7b0:	sub	r6, r1, r0
   3a7b4:	cmp	r5, r6
   3a7b8:	bhi	3a77c <flatcc_json_printer_int64_vector_field@@Base+0x250>
   3a7bc:	mov	r1, #32
   3a7c0:	mov	r2, r5
   3a7c4:	bl	14eec <memset@plt>
   3a7c8:	ldr	r0, [r4, #20]
   3a7cc:	add	r2, r0, r5
   3a7d0:	str	r2, [r4, #20]
   3a7d4:	b	3a7f8 <flatcc_json_printer_int64_vector_field@@Base+0x2cc>
   3a7d8:	ldr	r0, [r4, #16]
   3a7dc:	cmp	r2, r0
   3a7e0:	bcc	3a7f8 <flatcc_json_printer_int64_vector_field@@Base+0x2cc>
   3a7e4:	ldr	r2, [r4, #44]	; 0x2c
   3a7e8:	mov	r0, r4
   3a7ec:	mov	r1, #0
   3a7f0:	blx	r2
   3a7f4:	ldr	r2, [r4, #20]
   3a7f8:	ldrd	r0, [r7]
   3a7fc:	sub	r9, r9, #1
   3a800:	lsr	r5, r1, #31
   3a804:	cmn	r1, #1
   3a808:	bgt	3a81c <flatcc_json_printer_int64_vector_field@@Base+0x2f0>
   3a80c:	mov	r3, #45	; 0x2d
   3a810:	rsbs	r0, r0, #0
   3a814:	strb	r3, [r2], #1
   3a818:	rsc	r1, r1, #0
   3a81c:	bl	35db4 <flatcc_json_printer_uint64@@Base+0x30>
   3a820:	ldr	r1, [r4, #20]
   3a824:	add	r0, r0, r5
   3a828:	add	r7, r7, #8
   3a82c:	cmp	r9, #0
   3a830:	add	r0, r1, r0
   3a834:	str	r0, [r4, #20]
   3a838:	bne	3a708 <flatcc_json_printer_int64_vector_field@@Base+0x1dc>
   3a83c:	ldrb	r1, [r4, #25]
   3a840:	ldr	r0, [r4, #20]
   3a844:	cmp	r1, #0
   3a848:	beq	3a908 <flatcc_json_printer_int64_vector_field@@Base+0x3dc>
   3a84c:	add	r1, r0, #1
   3a850:	str	r1, [r4, #20]
   3a854:	mov	r1, #10
   3a858:	strb	r1, [r0]
   3a85c:	ldr	r0, [r4, #32]
   3a860:	sub	r2, r0, #1
   3a864:	str	r2, [r4, #32]
   3a868:	ldrb	r3, [r4, #25]
   3a86c:	ldr	r0, [r4, #20]
   3a870:	ldr	r1, [r4, #16]
   3a874:	mla	r7, r2, r3, r0
   3a878:	mul	r5, r2, r3
   3a87c:	cmp	r7, r1
   3a880:	bls	3a8f0 <flatcc_json_printer_int64_vector_field@@Base+0x3c4>
   3a884:	cmp	r0, r1
   3a888:	bcc	3a8a4 <flatcc_json_printer_int64_vector_field@@Base+0x378>
   3a88c:	ldr	r2, [r4, #44]	; 0x2c
   3a890:	mov	r0, r4
   3a894:	mov	r1, #0
   3a898:	blx	r2
   3a89c:	ldr	r1, [r4, #16]
   3a8a0:	ldr	r0, [r4, #20]
   3a8a4:	sub	r6, r1, r0
   3a8a8:	cmp	r6, r5
   3a8ac:	bcs	3a8f0 <flatcc_json_printer_int64_vector_field@@Base+0x3c4>
   3a8b0:	mov	r1, #32
   3a8b4:	mov	r2, r6
   3a8b8:	bl	14eec <memset@plt>
   3a8bc:	ldr	r0, [r4, #20]
   3a8c0:	ldr	r2, [r4, #44]	; 0x2c
   3a8c4:	mov	r1, #0
   3a8c8:	add	r0, r0, r6
   3a8cc:	str	r0, [r4, #20]
   3a8d0:	mov	r0, r4
   3a8d4:	blx	r2
   3a8d8:	ldr	r1, [r4, #16]
   3a8dc:	ldr	r0, [r4, #20]
   3a8e0:	sub	r5, r5, r6
   3a8e4:	sub	r6, r1, r0
   3a8e8:	cmp	r5, r6
   3a8ec:	bhi	3a8b0 <flatcc_json_printer_int64_vector_field@@Base+0x384>
   3a8f0:	mov	r1, #32
   3a8f4:	mov	r2, r5
   3a8f8:	bl	14eec <memset@plt>
   3a8fc:	ldr	r0, [r4, #20]
   3a900:	add	r0, r0, r5
   3a904:	str	r0, [r4, #20]
   3a908:	add	r1, r0, #1
   3a90c:	str	r1, [r4, #20]
   3a910:	mov	r1, #93	; 0x5d
   3a914:	strb	r1, [r0]
   3a918:	sub	sp, fp, #28
   3a91c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003a920 <flatcc_json_printer_bool_vector_field@@Base>:
   3a920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a924:	add	fp, sp, #28
   3a928:	sub	sp, sp, #4
   3a92c:	mov	r4, r0
   3a930:	mov	r0, #4
   3a934:	add	r0, r0, r2, lsl #1
   3a938:	ldr	r2, [r1, #8]
   3a93c:	cmp	r0, r2
   3a940:	bge	3ad34 <flatcc_json_printer_bool_vector_field@@Base+0x414>
   3a944:	ldr	r2, [r1, #4]
   3a948:	add	r0, r2, r0
   3a94c:	ldrh	r0, [r0]
   3a950:	cmp	r0, #0
   3a954:	ldrne	r2, [r1]
   3a958:	addsne	sl, r2, r0
   3a95c:	beq	3ad34 <flatcc_json_printer_bool_vector_field@@Base+0x414>
   3a960:	ldr	r0, [r1, #16]
   3a964:	ldr	r2, [fp, #8]
   3a968:	add	r7, r0, #1
   3a96c:	cmp	r0, #0
   3a970:	str	r7, [r1, #16]
   3a974:	beq	3a98c <flatcc_json_printer_bool_vector_field@@Base+0x6c>
   3a978:	ldr	r0, [r4, #20]
   3a97c:	add	r1, r0, #1
   3a980:	str	r1, [r4, #20]
   3a984:	mov	r1, #44	; 0x2c
   3a988:	strb	r1, [r0]
   3a98c:	ldr	r0, [sl]
   3a990:	mov	r1, r3
   3a994:	ldr	r9, [sl, r0]!
   3a998:	mov	r0, r4
   3a99c:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3a9a0:	ldr	r1, [r4, #32]
   3a9a4:	ldr	r0, [r4, #20]
   3a9a8:	cmp	r9, #0
   3a9ac:	add	r1, r1, #1
   3a9b0:	str	r1, [r4, #32]
   3a9b4:	add	r1, r0, #1
   3a9b8:	str	r1, [r4, #20]
   3a9bc:	mov	r1, #91	; 0x5b
   3a9c0:	strb	r1, [r0]
   3a9c4:	beq	3ac58 <flatcc_json_printer_bool_vector_field@@Base+0x338>
   3a9c8:	ldrb	r1, [r4, #25]
   3a9cc:	ldr	r0, [r4, #20]
   3a9d0:	cmp	r1, #0
   3a9d4:	beq	3aa90 <flatcc_json_printer_bool_vector_field@@Base+0x170>
   3a9d8:	add	r1, r0, #1
   3a9dc:	str	r1, [r4, #20]
   3a9e0:	mov	r1, #10
   3a9e4:	strb	r1, [r0]
   3a9e8:	ldr	r0, [r4, #20]
   3a9ec:	ldrb	r2, [r4, #25]
   3a9f0:	ldr	r3, [r4, #32]
   3a9f4:	ldr	r1, [r4, #16]
   3a9f8:	mla	r7, r3, r2, r0
   3a9fc:	mul	r5, r3, r2
   3aa00:	cmp	r7, r1
   3aa04:	bls	3aa74 <flatcc_json_printer_bool_vector_field@@Base+0x154>
   3aa08:	cmp	r0, r1
   3aa0c:	bcc	3aa28 <flatcc_json_printer_bool_vector_field@@Base+0x108>
   3aa10:	ldr	r2, [r4, #44]	; 0x2c
   3aa14:	mov	r0, r4
   3aa18:	mov	r1, #0
   3aa1c:	blx	r2
   3aa20:	ldr	r1, [r4, #16]
   3aa24:	ldr	r0, [r4, #20]
   3aa28:	sub	r6, r1, r0
   3aa2c:	cmp	r6, r5
   3aa30:	bcs	3aa74 <flatcc_json_printer_bool_vector_field@@Base+0x154>
   3aa34:	mov	r1, #32
   3aa38:	mov	r2, r6
   3aa3c:	bl	14eec <memset@plt>
   3aa40:	ldr	r0, [r4, #20]
   3aa44:	ldr	r2, [r4, #44]	; 0x2c
   3aa48:	mov	r1, #0
   3aa4c:	add	r0, r0, r6
   3aa50:	str	r0, [r4, #20]
   3aa54:	mov	r0, r4
   3aa58:	blx	r2
   3aa5c:	ldr	r1, [r4, #16]
   3aa60:	ldr	r0, [r4, #20]
   3aa64:	sub	r5, r5, r6
   3aa68:	sub	r6, r1, r0
   3aa6c:	cmp	r5, r6
   3aa70:	bhi	3aa34 <flatcc_json_printer_bool_vector_field@@Base+0x114>
   3aa74:	mov	r1, #32
   3aa78:	mov	r2, r5
   3aa7c:	bl	14eec <memset@plt>
   3aa80:	ldr	r0, [r4, #20]
   3aa84:	add	r0, r0, r5
   3aa88:	str	r0, [r4, #20]
   3aa8c:	b	3aab0 <flatcc_json_printer_bool_vector_field@@Base+0x190>
   3aa90:	ldr	r1, [r4, #16]
   3aa94:	cmp	r0, r1
   3aa98:	bcc	3aab0 <flatcc_json_printer_bool_vector_field@@Base+0x190>
   3aa9c:	ldr	r2, [r4, #44]	; 0x2c
   3aaa0:	mov	r0, r4
   3aaa4:	mov	r1, #0
   3aaa8:	blx	r2
   3aaac:	ldr	r0, [r4, #20]
   3aab0:	ldrb	r1, [sl, #4]
   3aab4:	movw	r8, #29300	; 0x7274
   3aab8:	movt	r8, #25973	; 0x6575
   3aabc:	cmp	r1, #0
   3aac0:	beq	3aad8 <flatcc_json_printer_bool_vector_field@@Base+0x1b8>
   3aac4:	mov	r1, #0
   3aac8:	str	r8, [r0]
   3aacc:	strb	r1, [r0, #4]
   3aad0:	mov	r0, #4
   3aad4:	b	3aaf0 <flatcc_json_printer_bool_vector_field@@Base+0x1d0>
   3aad8:	mov	r1, #101	; 0x65
   3aadc:	strh	r1, [r0, #4]
   3aae0:	movw	r1, #24934	; 0x6166
   3aae4:	movt	r1, #29548	; 0x736c
   3aae8:	str	r1, [r0]
   3aaec:	mov	r0, #5
   3aaf0:	ldr	r1, [r4, #20]
   3aaf4:	subs	r9, r9, #1
   3aaf8:	add	r0, r1, r0
   3aafc:	str	r0, [r4, #20]
   3ab00:	beq	3ac58 <flatcc_json_printer_bool_vector_field@@Base+0x338>
   3ab04:	ldr	r0, [r4, #20]
   3ab08:	add	r7, sl, #5
   3ab0c:	mov	sl, #44	; 0x2c
   3ab10:	add	r1, r0, #1
   3ab14:	str	r1, [r4, #20]
   3ab18:	strb	sl, [r0]
   3ab1c:	ldrb	r1, [r4, #25]
   3ab20:	ldr	r0, [r4, #20]
   3ab24:	cmp	r1, #0
   3ab28:	beq	3abe4 <flatcc_json_printer_bool_vector_field@@Base+0x2c4>
   3ab2c:	add	r1, r0, #1
   3ab30:	str	r1, [r4, #20]
   3ab34:	mov	r1, #10
   3ab38:	strb	r1, [r0]
   3ab3c:	ldr	r0, [r4, #20]
   3ab40:	ldrb	r2, [r4, #25]
   3ab44:	ldr	r3, [r4, #32]
   3ab48:	ldr	r1, [r4, #16]
   3ab4c:	mla	r6, r3, r2, r0
   3ab50:	mul	r5, r3, r2
   3ab54:	cmp	r6, r1
   3ab58:	bls	3abc8 <flatcc_json_printer_bool_vector_field@@Base+0x2a8>
   3ab5c:	cmp	r0, r1
   3ab60:	bcc	3ab7c <flatcc_json_printer_bool_vector_field@@Base+0x25c>
   3ab64:	ldr	r2, [r4, #44]	; 0x2c
   3ab68:	mov	r0, r4
   3ab6c:	mov	r1, #0
   3ab70:	blx	r2
   3ab74:	ldr	r1, [r4, #16]
   3ab78:	ldr	r0, [r4, #20]
   3ab7c:	sub	r6, r1, r0
   3ab80:	cmp	r6, r5
   3ab84:	bcs	3abc8 <flatcc_json_printer_bool_vector_field@@Base+0x2a8>
   3ab88:	mov	r1, #32
   3ab8c:	mov	r2, r6
   3ab90:	bl	14eec <memset@plt>
   3ab94:	ldr	r0, [r4, #20]
   3ab98:	ldr	r2, [r4, #44]	; 0x2c
   3ab9c:	mov	r1, #0
   3aba0:	add	r0, r0, r6
   3aba4:	str	r0, [r4, #20]
   3aba8:	mov	r0, r4
   3abac:	blx	r2
   3abb0:	ldr	r1, [r4, #16]
   3abb4:	ldr	r0, [r4, #20]
   3abb8:	sub	r5, r5, r6
   3abbc:	sub	r6, r1, r0
   3abc0:	cmp	r5, r6
   3abc4:	bhi	3ab88 <flatcc_json_printer_bool_vector_field@@Base+0x268>
   3abc8:	mov	r1, #32
   3abcc:	mov	r2, r5
   3abd0:	bl	14eec <memset@plt>
   3abd4:	ldr	r0, [r4, #20]
   3abd8:	add	r0, r0, r5
   3abdc:	str	r0, [r4, #20]
   3abe0:	b	3ac04 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   3abe4:	ldr	r1, [r4, #16]
   3abe8:	cmp	r0, r1
   3abec:	bcc	3ac04 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   3abf0:	ldr	r2, [r4, #44]	; 0x2c
   3abf4:	mov	r0, r4
   3abf8:	mov	r1, #0
   3abfc:	blx	r2
   3ac00:	ldr	r0, [r4, #20]
   3ac04:	ldrb	r1, [r7]
   3ac08:	sub	r9, r9, #1
   3ac0c:	cmp	r1, #0
   3ac10:	beq	3ac28 <flatcc_json_printer_bool_vector_field@@Base+0x308>
   3ac14:	mov	r1, #0
   3ac18:	str	r8, [r0]
   3ac1c:	strb	r1, [r0, #4]
   3ac20:	mov	r0, #4
   3ac24:	b	3ac40 <flatcc_json_printer_bool_vector_field@@Base+0x320>
   3ac28:	mov	r1, #101	; 0x65
   3ac2c:	strh	r1, [r0, #4]
   3ac30:	movw	r1, #24934	; 0x6166
   3ac34:	movt	r1, #29548	; 0x736c
   3ac38:	str	r1, [r0]
   3ac3c:	mov	r0, #5
   3ac40:	ldr	r1, [r4, #20]
   3ac44:	add	r7, r7, #1
   3ac48:	cmp	r9, #0
   3ac4c:	add	r0, r1, r0
   3ac50:	str	r0, [r4, #20]
   3ac54:	bne	3ab10 <flatcc_json_printer_bool_vector_field@@Base+0x1f0>
   3ac58:	ldrb	r1, [r4, #25]
   3ac5c:	ldr	r0, [r4, #20]
   3ac60:	cmp	r1, #0
   3ac64:	beq	3ad24 <flatcc_json_printer_bool_vector_field@@Base+0x404>
   3ac68:	add	r1, r0, #1
   3ac6c:	str	r1, [r4, #20]
   3ac70:	mov	r1, #10
   3ac74:	strb	r1, [r0]
   3ac78:	ldr	r0, [r4, #32]
   3ac7c:	sub	r2, r0, #1
   3ac80:	str	r2, [r4, #32]
   3ac84:	ldrb	r3, [r4, #25]
   3ac88:	ldr	r0, [r4, #20]
   3ac8c:	ldr	r1, [r4, #16]
   3ac90:	mla	r7, r2, r3, r0
   3ac94:	mul	r5, r2, r3
   3ac98:	cmp	r7, r1
   3ac9c:	bls	3ad0c <flatcc_json_printer_bool_vector_field@@Base+0x3ec>
   3aca0:	cmp	r0, r1
   3aca4:	bcc	3acc0 <flatcc_json_printer_bool_vector_field@@Base+0x3a0>
   3aca8:	ldr	r2, [r4, #44]	; 0x2c
   3acac:	mov	r0, r4
   3acb0:	mov	r1, #0
   3acb4:	blx	r2
   3acb8:	ldr	r1, [r4, #16]
   3acbc:	ldr	r0, [r4, #20]
   3acc0:	sub	r6, r1, r0
   3acc4:	cmp	r6, r5
   3acc8:	bcs	3ad0c <flatcc_json_printer_bool_vector_field@@Base+0x3ec>
   3accc:	mov	r1, #32
   3acd0:	mov	r2, r6
   3acd4:	bl	14eec <memset@plt>
   3acd8:	ldr	r0, [r4, #20]
   3acdc:	ldr	r2, [r4, #44]	; 0x2c
   3ace0:	mov	r1, #0
   3ace4:	add	r0, r0, r6
   3ace8:	str	r0, [r4, #20]
   3acec:	mov	r0, r4
   3acf0:	blx	r2
   3acf4:	ldr	r1, [r4, #16]
   3acf8:	ldr	r0, [r4, #20]
   3acfc:	sub	r5, r5, r6
   3ad00:	sub	r6, r1, r0
   3ad04:	cmp	r5, r6
   3ad08:	bhi	3accc <flatcc_json_printer_bool_vector_field@@Base+0x3ac>
   3ad0c:	mov	r1, #32
   3ad10:	mov	r2, r5
   3ad14:	bl	14eec <memset@plt>
   3ad18:	ldr	r0, [r4, #20]
   3ad1c:	add	r0, r0, r5
   3ad20:	str	r0, [r4, #20]
   3ad24:	add	r1, r0, #1
   3ad28:	str	r1, [r4, #20]
   3ad2c:	mov	r1, #93	; 0x5d
   3ad30:	strb	r1, [r0]
   3ad34:	sub	sp, fp, #28
   3ad38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ad3c <flatcc_json_printer_float_vector_field@@Base>:
   3ad3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ad40:	add	fp, sp, #28
   3ad44:	sub	sp, sp, #4
   3ad48:	mov	r4, r0
   3ad4c:	mov	r0, #4
   3ad50:	add	r0, r0, r2, lsl #1
   3ad54:	ldr	r2, [r1, #8]
   3ad58:	cmp	r0, r2
   3ad5c:	bge	3b0f0 <flatcc_json_printer_float_vector_field@@Base+0x3b4>
   3ad60:	ldr	r2, [r1, #4]
   3ad64:	add	r0, r2, r0
   3ad68:	ldrh	r0, [r0]
   3ad6c:	cmp	r0, #0
   3ad70:	ldrne	r2, [r1]
   3ad74:	addsne	r8, r2, r0
   3ad78:	beq	3b0f0 <flatcc_json_printer_float_vector_field@@Base+0x3b4>
   3ad7c:	ldr	r0, [r1, #16]
   3ad80:	ldr	r2, [fp, #8]
   3ad84:	add	r7, r0, #1
   3ad88:	cmp	r0, #0
   3ad8c:	str	r7, [r1, #16]
   3ad90:	beq	3ada8 <flatcc_json_printer_float_vector_field@@Base+0x6c>
   3ad94:	ldr	r0, [r4, #20]
   3ad98:	add	r1, r0, #1
   3ad9c:	str	r1, [r4, #20]
   3ada0:	mov	r1, #44	; 0x2c
   3ada4:	strb	r1, [r0]
   3ada8:	ldr	r0, [r8]
   3adac:	mov	r1, r3
   3adb0:	ldr	r7, [r8, r0]!
   3adb4:	mov	r0, r4
   3adb8:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3adbc:	ldr	r1, [r4, #32]
   3adc0:	ldr	r0, [r4, #20]
   3adc4:	cmp	r7, #0
   3adc8:	add	r1, r1, #1
   3adcc:	str	r1, [r4, #32]
   3add0:	add	r1, r0, #1
   3add4:	str	r1, [r4, #20]
   3add8:	mov	r1, #91	; 0x5b
   3addc:	strb	r1, [r0]
   3ade0:	beq	3b014 <flatcc_json_printer_float_vector_field@@Base+0x2d8>
   3ade4:	ldrb	r1, [r4, #25]
   3ade8:	ldr	r0, [r4, #20]
   3adec:	cmp	r1, #0
   3adf0:	beq	3aeac <flatcc_json_printer_float_vector_field@@Base+0x170>
   3adf4:	add	r1, r0, #1
   3adf8:	str	r1, [r4, #20]
   3adfc:	mov	r1, #10
   3ae00:	strb	r1, [r0]
   3ae04:	ldr	r0, [r4, #20]
   3ae08:	ldrb	r2, [r4, #25]
   3ae0c:	ldr	r3, [r4, #32]
   3ae10:	ldr	r1, [r4, #16]
   3ae14:	mla	r6, r3, r2, r0
   3ae18:	mul	r5, r3, r2
   3ae1c:	cmp	r6, r1
   3ae20:	bls	3ae90 <flatcc_json_printer_float_vector_field@@Base+0x154>
   3ae24:	cmp	r0, r1
   3ae28:	bcc	3ae44 <flatcc_json_printer_float_vector_field@@Base+0x108>
   3ae2c:	ldr	r2, [r4, #44]	; 0x2c
   3ae30:	mov	r0, r4
   3ae34:	mov	r1, #0
   3ae38:	blx	r2
   3ae3c:	ldr	r1, [r4, #16]
   3ae40:	ldr	r0, [r4, #20]
   3ae44:	sub	r6, r1, r0
   3ae48:	cmp	r6, r5
   3ae4c:	bcs	3ae90 <flatcc_json_printer_float_vector_field@@Base+0x154>
   3ae50:	mov	r1, #32
   3ae54:	mov	r2, r6
   3ae58:	bl	14eec <memset@plt>
   3ae5c:	ldr	r0, [r4, #20]
   3ae60:	ldr	r2, [r4, #44]	; 0x2c
   3ae64:	mov	r1, #0
   3ae68:	add	r0, r0, r6
   3ae6c:	str	r0, [r4, #20]
   3ae70:	mov	r0, r4
   3ae74:	blx	r2
   3ae78:	ldr	r1, [r4, #16]
   3ae7c:	ldr	r0, [r4, #20]
   3ae80:	sub	r5, r5, r6
   3ae84:	sub	r6, r1, r0
   3ae88:	cmp	r5, r6
   3ae8c:	bhi	3ae50 <flatcc_json_printer_float_vector_field@@Base+0x114>
   3ae90:	mov	r1, #32
   3ae94:	mov	r2, r5
   3ae98:	bl	14eec <memset@plt>
   3ae9c:	ldr	r0, [r4, #20]
   3aea0:	add	r0, r0, r5
   3aea4:	str	r0, [r4, #20]
   3aea8:	b	3aecc <flatcc_json_printer_float_vector_field@@Base+0x190>
   3aeac:	ldr	r1, [r4, #16]
   3aeb0:	cmp	r0, r1
   3aeb4:	bcc	3aecc <flatcc_json_printer_float_vector_field@@Base+0x190>
   3aeb8:	ldr	r2, [r4, #44]	; 0x2c
   3aebc:	mov	r0, r4
   3aec0:	mov	r1, #0
   3aec4:	blx	r2
   3aec8:	ldr	r0, [r4, #20]
   3aecc:	vldr	s0, [r8, #4]
   3aed0:	vcvt.f64.f32	d0, s0
   3aed4:	bl	34b00 <flatcc_json_printer_fmt_float@@Base+0x8>
   3aed8:	ldr	r1, [r4, #20]
   3aedc:	subs	r9, r7, #1
   3aee0:	add	r0, r1, r0
   3aee4:	str	r0, [r4, #20]
   3aee8:	beq	3b014 <flatcc_json_printer_float_vector_field@@Base+0x2d8>
   3aeec:	ldr	r0, [r4, #20]
   3aef0:	add	r7, r8, #8
   3aef4:	mov	r8, #44	; 0x2c
   3aef8:	mov	sl, #10
   3aefc:	add	r1, r0, #1
   3af00:	sub	r9, r9, #1
   3af04:	str	r1, [r4, #20]
   3af08:	strb	r8, [r0]
   3af0c:	ldrb	r1, [r4, #25]
   3af10:	ldr	r0, [r4, #20]
   3af14:	cmp	r1, #0
   3af18:	beq	3afd0 <flatcc_json_printer_float_vector_field@@Base+0x294>
   3af1c:	add	r1, r0, #1
   3af20:	str	r1, [r4, #20]
   3af24:	strb	sl, [r0]
   3af28:	ldr	r0, [r4, #20]
   3af2c:	ldrb	r2, [r4, #25]
   3af30:	ldr	r3, [r4, #32]
   3af34:	ldr	r1, [r4, #16]
   3af38:	mla	r6, r3, r2, r0
   3af3c:	mul	r5, r3, r2
   3af40:	cmp	r6, r1
   3af44:	bls	3afb4 <flatcc_json_printer_float_vector_field@@Base+0x278>
   3af48:	cmp	r0, r1
   3af4c:	bcc	3af68 <flatcc_json_printer_float_vector_field@@Base+0x22c>
   3af50:	ldr	r2, [r4, #44]	; 0x2c
   3af54:	mov	r0, r4
   3af58:	mov	r1, #0
   3af5c:	blx	r2
   3af60:	ldr	r1, [r4, #16]
   3af64:	ldr	r0, [r4, #20]
   3af68:	sub	r6, r1, r0
   3af6c:	cmp	r6, r5
   3af70:	bcs	3afb4 <flatcc_json_printer_float_vector_field@@Base+0x278>
   3af74:	mov	r1, #32
   3af78:	mov	r2, r6
   3af7c:	bl	14eec <memset@plt>
   3af80:	ldr	r0, [r4, #20]
   3af84:	ldr	r2, [r4, #44]	; 0x2c
   3af88:	mov	r1, #0
   3af8c:	add	r0, r0, r6
   3af90:	str	r0, [r4, #20]
   3af94:	mov	r0, r4
   3af98:	blx	r2
   3af9c:	ldr	r1, [r4, #16]
   3afa0:	ldr	r0, [r4, #20]
   3afa4:	sub	r5, r5, r6
   3afa8:	sub	r6, r1, r0
   3afac:	cmp	r5, r6
   3afb0:	bhi	3af74 <flatcc_json_printer_float_vector_field@@Base+0x238>
   3afb4:	mov	r1, #32
   3afb8:	mov	r2, r5
   3afbc:	bl	14eec <memset@plt>
   3afc0:	ldr	r0, [r4, #20]
   3afc4:	add	r0, r0, r5
   3afc8:	str	r0, [r4, #20]
   3afcc:	b	3aff0 <flatcc_json_printer_float_vector_field@@Base+0x2b4>
   3afd0:	ldr	r1, [r4, #16]
   3afd4:	cmp	r0, r1
   3afd8:	bcc	3aff0 <flatcc_json_printer_float_vector_field@@Base+0x2b4>
   3afdc:	ldr	r2, [r4, #44]	; 0x2c
   3afe0:	mov	r0, r4
   3afe4:	mov	r1, #0
   3afe8:	blx	r2
   3afec:	ldr	r0, [r4, #20]
   3aff0:	vldr	s0, [r7]
   3aff4:	vcvt.f64.f32	d0, s0
   3aff8:	bl	34b00 <flatcc_json_printer_fmt_float@@Base+0x8>
   3affc:	ldr	r1, [r4, #20]
   3b000:	add	r7, r7, #4
   3b004:	cmp	r9, #0
   3b008:	add	r0, r1, r0
   3b00c:	str	r0, [r4, #20]
   3b010:	bne	3aefc <flatcc_json_printer_float_vector_field@@Base+0x1c0>
   3b014:	ldrb	r1, [r4, #25]
   3b018:	ldr	r0, [r4, #20]
   3b01c:	cmp	r1, #0
   3b020:	beq	3b0e0 <flatcc_json_printer_float_vector_field@@Base+0x3a4>
   3b024:	add	r1, r0, #1
   3b028:	str	r1, [r4, #20]
   3b02c:	mov	r1, #10
   3b030:	strb	r1, [r0]
   3b034:	ldr	r0, [r4, #32]
   3b038:	sub	r2, r0, #1
   3b03c:	str	r2, [r4, #32]
   3b040:	ldrb	r3, [r4, #25]
   3b044:	ldr	r0, [r4, #20]
   3b048:	ldr	r1, [r4, #16]
   3b04c:	mla	r7, r2, r3, r0
   3b050:	mul	r5, r2, r3
   3b054:	cmp	r7, r1
   3b058:	bls	3b0c8 <flatcc_json_printer_float_vector_field@@Base+0x38c>
   3b05c:	cmp	r0, r1
   3b060:	bcc	3b07c <flatcc_json_printer_float_vector_field@@Base+0x340>
   3b064:	ldr	r2, [r4, #44]	; 0x2c
   3b068:	mov	r0, r4
   3b06c:	mov	r1, #0
   3b070:	blx	r2
   3b074:	ldr	r1, [r4, #16]
   3b078:	ldr	r0, [r4, #20]
   3b07c:	sub	r6, r1, r0
   3b080:	cmp	r6, r5
   3b084:	bcs	3b0c8 <flatcc_json_printer_float_vector_field@@Base+0x38c>
   3b088:	mov	r1, #32
   3b08c:	mov	r2, r6
   3b090:	bl	14eec <memset@plt>
   3b094:	ldr	r0, [r4, #20]
   3b098:	ldr	r2, [r4, #44]	; 0x2c
   3b09c:	mov	r1, #0
   3b0a0:	add	r0, r0, r6
   3b0a4:	str	r0, [r4, #20]
   3b0a8:	mov	r0, r4
   3b0ac:	blx	r2
   3b0b0:	ldr	r1, [r4, #16]
   3b0b4:	ldr	r0, [r4, #20]
   3b0b8:	sub	r5, r5, r6
   3b0bc:	sub	r6, r1, r0
   3b0c0:	cmp	r5, r6
   3b0c4:	bhi	3b088 <flatcc_json_printer_float_vector_field@@Base+0x34c>
   3b0c8:	mov	r1, #32
   3b0cc:	mov	r2, r5
   3b0d0:	bl	14eec <memset@plt>
   3b0d4:	ldr	r0, [r4, #20]
   3b0d8:	add	r0, r0, r5
   3b0dc:	str	r0, [r4, #20]
   3b0e0:	add	r1, r0, #1
   3b0e4:	str	r1, [r4, #20]
   3b0e8:	mov	r1, #93	; 0x5d
   3b0ec:	strb	r1, [r0]
   3b0f0:	sub	sp, fp, #28
   3b0f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b0f8 <flatcc_json_printer_double_vector_field@@Base>:
   3b0f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b0fc:	add	fp, sp, #28
   3b100:	sub	sp, sp, #4
   3b104:	mov	r4, r0
   3b108:	mov	r0, #4
   3b10c:	add	r0, r0, r2, lsl #1
   3b110:	ldr	r2, [r1, #8]
   3b114:	cmp	r0, r2
   3b118:	bge	3b4a4 <flatcc_json_printer_double_vector_field@@Base+0x3ac>
   3b11c:	ldr	r2, [r1, #4]
   3b120:	add	r0, r2, r0
   3b124:	ldrh	r0, [r0]
   3b128:	cmp	r0, #0
   3b12c:	ldrne	r2, [r1]
   3b130:	addsne	r8, r2, r0
   3b134:	beq	3b4a4 <flatcc_json_printer_double_vector_field@@Base+0x3ac>
   3b138:	ldr	r0, [r1, #16]
   3b13c:	ldr	r2, [fp, #8]
   3b140:	add	r7, r0, #1
   3b144:	cmp	r0, #0
   3b148:	str	r7, [r1, #16]
   3b14c:	beq	3b164 <flatcc_json_printer_double_vector_field@@Base+0x6c>
   3b150:	ldr	r0, [r4, #20]
   3b154:	add	r1, r0, #1
   3b158:	str	r1, [r4, #20]
   3b15c:	mov	r1, #44	; 0x2c
   3b160:	strb	r1, [r0]
   3b164:	ldr	r0, [r8]
   3b168:	mov	r1, r3
   3b16c:	ldr	r7, [r8, r0]!
   3b170:	mov	r0, r4
   3b174:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3b178:	ldr	r1, [r4, #32]
   3b17c:	ldr	r0, [r4, #20]
   3b180:	cmp	r7, #0
   3b184:	add	r1, r1, #1
   3b188:	str	r1, [r4, #32]
   3b18c:	add	r1, r0, #1
   3b190:	str	r1, [r4, #20]
   3b194:	mov	r1, #91	; 0x5b
   3b198:	strb	r1, [r0]
   3b19c:	beq	3b3c8 <flatcc_json_printer_double_vector_field@@Base+0x2d0>
   3b1a0:	ldrb	r1, [r4, #25]
   3b1a4:	ldr	r0, [r4, #20]
   3b1a8:	cmp	r1, #0
   3b1ac:	beq	3b268 <flatcc_json_printer_double_vector_field@@Base+0x170>
   3b1b0:	add	r1, r0, #1
   3b1b4:	str	r1, [r4, #20]
   3b1b8:	mov	r1, #10
   3b1bc:	strb	r1, [r0]
   3b1c0:	ldr	r0, [r4, #20]
   3b1c4:	ldrb	r2, [r4, #25]
   3b1c8:	ldr	r3, [r4, #32]
   3b1cc:	ldr	r1, [r4, #16]
   3b1d0:	mla	r6, r3, r2, r0
   3b1d4:	mul	r5, r3, r2
   3b1d8:	cmp	r6, r1
   3b1dc:	bls	3b24c <flatcc_json_printer_double_vector_field@@Base+0x154>
   3b1e0:	cmp	r0, r1
   3b1e4:	bcc	3b200 <flatcc_json_printer_double_vector_field@@Base+0x108>
   3b1e8:	ldr	r2, [r4, #44]	; 0x2c
   3b1ec:	mov	r0, r4
   3b1f0:	mov	r1, #0
   3b1f4:	blx	r2
   3b1f8:	ldr	r1, [r4, #16]
   3b1fc:	ldr	r0, [r4, #20]
   3b200:	sub	r6, r1, r0
   3b204:	cmp	r6, r5
   3b208:	bcs	3b24c <flatcc_json_printer_double_vector_field@@Base+0x154>
   3b20c:	mov	r1, #32
   3b210:	mov	r2, r6
   3b214:	bl	14eec <memset@plt>
   3b218:	ldr	r0, [r4, #20]
   3b21c:	ldr	r2, [r4, #44]	; 0x2c
   3b220:	mov	r1, #0
   3b224:	add	r0, r0, r6
   3b228:	str	r0, [r4, #20]
   3b22c:	mov	r0, r4
   3b230:	blx	r2
   3b234:	ldr	r1, [r4, #16]
   3b238:	ldr	r0, [r4, #20]
   3b23c:	sub	r5, r5, r6
   3b240:	sub	r6, r1, r0
   3b244:	cmp	r5, r6
   3b248:	bhi	3b20c <flatcc_json_printer_double_vector_field@@Base+0x114>
   3b24c:	mov	r1, #32
   3b250:	mov	r2, r5
   3b254:	bl	14eec <memset@plt>
   3b258:	ldr	r0, [r4, #20]
   3b25c:	add	r0, r0, r5
   3b260:	str	r0, [r4, #20]
   3b264:	b	3b288 <flatcc_json_printer_double_vector_field@@Base+0x190>
   3b268:	ldr	r1, [r4, #16]
   3b26c:	cmp	r0, r1
   3b270:	bcc	3b288 <flatcc_json_printer_double_vector_field@@Base+0x190>
   3b274:	ldr	r2, [r4, #44]	; 0x2c
   3b278:	mov	r0, r4
   3b27c:	mov	r1, #0
   3b280:	blx	r2
   3b284:	ldr	r0, [r4, #20]
   3b288:	vldr	d0, [r8, #4]
   3b28c:	bl	34b00 <flatcc_json_printer_fmt_float@@Base+0x8>
   3b290:	ldr	r1, [r4, #20]
   3b294:	subs	r9, r7, #1
   3b298:	add	r0, r1, r0
   3b29c:	str	r0, [r4, #20]
   3b2a0:	beq	3b3c8 <flatcc_json_printer_double_vector_field@@Base+0x2d0>
   3b2a4:	ldr	r0, [r4, #20]
   3b2a8:	add	r7, r8, #12
   3b2ac:	mov	r8, #44	; 0x2c
   3b2b0:	mov	sl, #10
   3b2b4:	add	r1, r0, #1
   3b2b8:	sub	r9, r9, #1
   3b2bc:	str	r1, [r4, #20]
   3b2c0:	strb	r8, [r0]
   3b2c4:	ldrb	r1, [r4, #25]
   3b2c8:	ldr	r0, [r4, #20]
   3b2cc:	cmp	r1, #0
   3b2d0:	beq	3b388 <flatcc_json_printer_double_vector_field@@Base+0x290>
   3b2d4:	add	r1, r0, #1
   3b2d8:	str	r1, [r4, #20]
   3b2dc:	strb	sl, [r0]
   3b2e0:	ldr	r0, [r4, #20]
   3b2e4:	ldrb	r2, [r4, #25]
   3b2e8:	ldr	r3, [r4, #32]
   3b2ec:	ldr	r1, [r4, #16]
   3b2f0:	mla	r6, r3, r2, r0
   3b2f4:	mul	r5, r3, r2
   3b2f8:	cmp	r6, r1
   3b2fc:	bls	3b36c <flatcc_json_printer_double_vector_field@@Base+0x274>
   3b300:	cmp	r0, r1
   3b304:	bcc	3b320 <flatcc_json_printer_double_vector_field@@Base+0x228>
   3b308:	ldr	r2, [r4, #44]	; 0x2c
   3b30c:	mov	r0, r4
   3b310:	mov	r1, #0
   3b314:	blx	r2
   3b318:	ldr	r1, [r4, #16]
   3b31c:	ldr	r0, [r4, #20]
   3b320:	sub	r6, r1, r0
   3b324:	cmp	r6, r5
   3b328:	bcs	3b36c <flatcc_json_printer_double_vector_field@@Base+0x274>
   3b32c:	mov	r1, #32
   3b330:	mov	r2, r6
   3b334:	bl	14eec <memset@plt>
   3b338:	ldr	r0, [r4, #20]
   3b33c:	ldr	r2, [r4, #44]	; 0x2c
   3b340:	mov	r1, #0
   3b344:	add	r0, r0, r6
   3b348:	str	r0, [r4, #20]
   3b34c:	mov	r0, r4
   3b350:	blx	r2
   3b354:	ldr	r1, [r4, #16]
   3b358:	ldr	r0, [r4, #20]
   3b35c:	sub	r5, r5, r6
   3b360:	sub	r6, r1, r0
   3b364:	cmp	r5, r6
   3b368:	bhi	3b32c <flatcc_json_printer_double_vector_field@@Base+0x234>
   3b36c:	mov	r1, #32
   3b370:	mov	r2, r5
   3b374:	bl	14eec <memset@plt>
   3b378:	ldr	r0, [r4, #20]
   3b37c:	add	r0, r0, r5
   3b380:	str	r0, [r4, #20]
   3b384:	b	3b3a8 <flatcc_json_printer_double_vector_field@@Base+0x2b0>
   3b388:	ldr	r1, [r4, #16]
   3b38c:	cmp	r0, r1
   3b390:	bcc	3b3a8 <flatcc_json_printer_double_vector_field@@Base+0x2b0>
   3b394:	ldr	r2, [r4, #44]	; 0x2c
   3b398:	mov	r0, r4
   3b39c:	mov	r1, #0
   3b3a0:	blx	r2
   3b3a4:	ldr	r0, [r4, #20]
   3b3a8:	vldr	d0, [r7]
   3b3ac:	bl	34b00 <flatcc_json_printer_fmt_float@@Base+0x8>
   3b3b0:	ldr	r1, [r4, #20]
   3b3b4:	add	r7, r7, #8
   3b3b8:	cmp	r9, #0
   3b3bc:	add	r0, r1, r0
   3b3c0:	str	r0, [r4, #20]
   3b3c4:	bne	3b2b4 <flatcc_json_printer_double_vector_field@@Base+0x1bc>
   3b3c8:	ldrb	r1, [r4, #25]
   3b3cc:	ldr	r0, [r4, #20]
   3b3d0:	cmp	r1, #0
   3b3d4:	beq	3b494 <flatcc_json_printer_double_vector_field@@Base+0x39c>
   3b3d8:	add	r1, r0, #1
   3b3dc:	str	r1, [r4, #20]
   3b3e0:	mov	r1, #10
   3b3e4:	strb	r1, [r0]
   3b3e8:	ldr	r0, [r4, #32]
   3b3ec:	sub	r2, r0, #1
   3b3f0:	str	r2, [r4, #32]
   3b3f4:	ldrb	r3, [r4, #25]
   3b3f8:	ldr	r0, [r4, #20]
   3b3fc:	ldr	r1, [r4, #16]
   3b400:	mla	r7, r2, r3, r0
   3b404:	mul	r5, r2, r3
   3b408:	cmp	r7, r1
   3b40c:	bls	3b47c <flatcc_json_printer_double_vector_field@@Base+0x384>
   3b410:	cmp	r0, r1
   3b414:	bcc	3b430 <flatcc_json_printer_double_vector_field@@Base+0x338>
   3b418:	ldr	r2, [r4, #44]	; 0x2c
   3b41c:	mov	r0, r4
   3b420:	mov	r1, #0
   3b424:	blx	r2
   3b428:	ldr	r1, [r4, #16]
   3b42c:	ldr	r0, [r4, #20]
   3b430:	sub	r6, r1, r0
   3b434:	cmp	r6, r5
   3b438:	bcs	3b47c <flatcc_json_printer_double_vector_field@@Base+0x384>
   3b43c:	mov	r1, #32
   3b440:	mov	r2, r6
   3b444:	bl	14eec <memset@plt>
   3b448:	ldr	r0, [r4, #20]
   3b44c:	ldr	r2, [r4, #44]	; 0x2c
   3b450:	mov	r1, #0
   3b454:	add	r0, r0, r6
   3b458:	str	r0, [r4, #20]
   3b45c:	mov	r0, r4
   3b460:	blx	r2
   3b464:	ldr	r1, [r4, #16]
   3b468:	ldr	r0, [r4, #20]
   3b46c:	sub	r5, r5, r6
   3b470:	sub	r6, r1, r0
   3b474:	cmp	r5, r6
   3b478:	bhi	3b43c <flatcc_json_printer_double_vector_field@@Base+0x344>
   3b47c:	mov	r1, #32
   3b480:	mov	r2, r5
   3b484:	bl	14eec <memset@plt>
   3b488:	ldr	r0, [r4, #20]
   3b48c:	add	r0, r0, r5
   3b490:	str	r0, [r4, #20]
   3b494:	add	r1, r0, #1
   3b498:	str	r1, [r4, #20]
   3b49c:	mov	r1, #93	; 0x5d
   3b4a0:	strb	r1, [r0]
   3b4a4:	sub	sp, fp, #28
   3b4a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b4ac <flatcc_json_printer_utype_enum_vector_field@@Base>:
   3b4ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b4b0:	add	fp, sp, #28
   3b4b4:	sub	sp, sp, #4
   3b4b8:	mov	r4, r0
   3b4bc:	ldrb	r0, [r0, #27]
   3b4c0:	cmp	r0, #0
   3b4c4:	beq	3b4d8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   3b4c8:	mov	r0, r4
   3b4cc:	sub	sp, fp, #28
   3b4d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b4d4:	b	386ec <flatcc_json_printer_utype_vector_field@@Base>
   3b4d8:	mov	r0, #4
   3b4dc:	add	r0, r0, r2, lsl #1
   3b4e0:	ldr	r2, [r1, #8]
   3b4e4:	cmp	r0, r2
   3b4e8:	bge	3b85c <flatcc_json_printer_utype_enum_vector_field@@Base+0x3b0>
   3b4ec:	ldr	r2, [r1, #4]
   3b4f0:	add	r0, r2, r0
   3b4f4:	ldrh	r0, [r0]
   3b4f8:	cmp	r0, #0
   3b4fc:	ldrne	r2, [r1]
   3b500:	addsne	r8, r2, r0
   3b504:	beq	3b85c <flatcc_json_printer_utype_enum_vector_field@@Base+0x3b0>
   3b508:	ldr	r0, [r1, #16]
   3b50c:	ldr	sl, [fp, #12]
   3b510:	ldr	r2, [fp, #8]
   3b514:	add	r7, r0, #1
   3b518:	cmp	r0, #0
   3b51c:	str	r7, [r1, #16]
   3b520:	beq	3b538 <flatcc_json_printer_utype_enum_vector_field@@Base+0x8c>
   3b524:	ldr	r0, [r4, #20]
   3b528:	add	r1, r0, #1
   3b52c:	str	r1, [r4, #20]
   3b530:	mov	r1, #44	; 0x2c
   3b534:	strb	r1, [r0]
   3b538:	ldr	r0, [r8]
   3b53c:	mov	r1, r3
   3b540:	ldr	r9, [r8, r0]!
   3b544:	mov	r0, r4
   3b548:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3b54c:	ldr	r1, [r4, #32]
   3b550:	ldr	r0, [r4, #20]
   3b554:	cmp	r9, #0
   3b558:	add	r1, r1, #1
   3b55c:	str	r1, [r4, #32]
   3b560:	add	r1, r0, #1
   3b564:	str	r1, [r4, #20]
   3b568:	mov	r1, #91	; 0x5b
   3b56c:	strb	r1, [r0]
   3b570:	beq	3b780 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d4>
   3b574:	ldrb	r1, [r4, #25]
   3b578:	ldr	r0, [r4, #20]
   3b57c:	cmp	r1, #0
   3b580:	beq	3b63c <flatcc_json_printer_utype_enum_vector_field@@Base+0x190>
   3b584:	add	r1, r0, #1
   3b588:	str	r1, [r4, #20]
   3b58c:	mov	r1, #10
   3b590:	strb	r1, [r0]
   3b594:	ldr	r0, [r4, #20]
   3b598:	ldrb	r2, [r4, #25]
   3b59c:	ldr	r3, [r4, #32]
   3b5a0:	ldr	r1, [r4, #16]
   3b5a4:	mla	r7, r3, r2, r0
   3b5a8:	mul	r5, r3, r2
   3b5ac:	cmp	r7, r1
   3b5b0:	bls	3b620 <flatcc_json_printer_utype_enum_vector_field@@Base+0x174>
   3b5b4:	cmp	r0, r1
   3b5b8:	bcc	3b5d4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x128>
   3b5bc:	ldr	r2, [r4, #44]	; 0x2c
   3b5c0:	mov	r0, r4
   3b5c4:	mov	r1, #0
   3b5c8:	blx	r2
   3b5cc:	ldr	r1, [r4, #16]
   3b5d0:	ldr	r0, [r4, #20]
   3b5d4:	sub	r6, r1, r0
   3b5d8:	cmp	r6, r5
   3b5dc:	bcs	3b620 <flatcc_json_printer_utype_enum_vector_field@@Base+0x174>
   3b5e0:	mov	r1, #32
   3b5e4:	mov	r2, r6
   3b5e8:	bl	14eec <memset@plt>
   3b5ec:	ldr	r0, [r4, #20]
   3b5f0:	ldr	r2, [r4, #44]	; 0x2c
   3b5f4:	mov	r1, #0
   3b5f8:	add	r0, r0, r6
   3b5fc:	str	r0, [r4, #20]
   3b600:	mov	r0, r4
   3b604:	blx	r2
   3b608:	ldr	r1, [r4, #16]
   3b60c:	ldr	r0, [r4, #20]
   3b610:	sub	r5, r5, r6
   3b614:	sub	r6, r1, r0
   3b618:	cmp	r5, r6
   3b61c:	bhi	3b5e0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x134>
   3b620:	mov	r1, #32
   3b624:	mov	r2, r5
   3b628:	bl	14eec <memset@plt>
   3b62c:	ldr	r0, [r4, #20]
   3b630:	add	r0, r0, r5
   3b634:	str	r0, [r4, #20]
   3b638:	b	3b658 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ac>
   3b63c:	ldr	r1, [r4, #16]
   3b640:	cmp	r0, r1
   3b644:	bcc	3b658 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ac>
   3b648:	ldr	r2, [r4, #44]	; 0x2c
   3b64c:	mov	r0, r4
   3b650:	mov	r1, #0
   3b654:	blx	r2
   3b658:	ldrb	r1, [r8, #4]
   3b65c:	mov	r0, r4
   3b660:	blx	sl
   3b664:	subs	r9, r9, #1
   3b668:	beq	3b780 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d4>
   3b66c:	add	r7, r8, #5
   3b670:	mov	r8, #44	; 0x2c
   3b674:	ldr	r0, [r4, #20]
   3b678:	sub	r9, r9, #1
   3b67c:	add	r1, r0, #1
   3b680:	str	r1, [r4, #20]
   3b684:	strb	r8, [r0]
   3b688:	ldrb	r1, [r4, #25]
   3b68c:	ldr	r0, [r4, #20]
   3b690:	cmp	r1, #0
   3b694:	beq	3b750 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a4>
   3b698:	add	r1, r0, #1
   3b69c:	str	r1, [r4, #20]
   3b6a0:	mov	r1, #10
   3b6a4:	strb	r1, [r0]
   3b6a8:	ldr	r0, [r4, #20]
   3b6ac:	ldrb	r2, [r4, #25]
   3b6b0:	ldr	r3, [r4, #32]
   3b6b4:	ldr	r1, [r4, #16]
   3b6b8:	mla	r6, r3, r2, r0
   3b6bc:	mul	r5, r3, r2
   3b6c0:	cmp	r6, r1
   3b6c4:	bls	3b734 <flatcc_json_printer_utype_enum_vector_field@@Base+0x288>
   3b6c8:	cmp	r0, r1
   3b6cc:	bcc	3b6e8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x23c>
   3b6d0:	ldr	r2, [r4, #44]	; 0x2c
   3b6d4:	mov	r0, r4
   3b6d8:	mov	r1, #0
   3b6dc:	blx	r2
   3b6e0:	ldr	r1, [r4, #16]
   3b6e4:	ldr	r0, [r4, #20]
   3b6e8:	sub	r6, r1, r0
   3b6ec:	cmp	r6, r5
   3b6f0:	bcs	3b734 <flatcc_json_printer_utype_enum_vector_field@@Base+0x288>
   3b6f4:	mov	r1, #32
   3b6f8:	mov	r2, r6
   3b6fc:	bl	14eec <memset@plt>
   3b700:	ldr	r0, [r4, #20]
   3b704:	ldr	r2, [r4, #44]	; 0x2c
   3b708:	mov	r1, #0
   3b70c:	add	r0, r0, r6
   3b710:	str	r0, [r4, #20]
   3b714:	mov	r0, r4
   3b718:	blx	r2
   3b71c:	ldr	r1, [r4, #16]
   3b720:	ldr	r0, [r4, #20]
   3b724:	sub	r5, r5, r6
   3b728:	sub	r6, r1, r0
   3b72c:	cmp	r5, r6
   3b730:	bhi	3b6f4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x248>
   3b734:	mov	r1, #32
   3b738:	mov	r2, r5
   3b73c:	bl	14eec <memset@plt>
   3b740:	ldr	r0, [r4, #20]
   3b744:	add	r0, r0, r5
   3b748:	str	r0, [r4, #20]
   3b74c:	b	3b76c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c0>
   3b750:	ldr	r1, [r4, #16]
   3b754:	cmp	r0, r1
   3b758:	bcc	3b76c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c0>
   3b75c:	ldr	r2, [r4, #44]	; 0x2c
   3b760:	mov	r0, r4
   3b764:	mov	r1, #0
   3b768:	blx	r2
   3b76c:	ldrb	r1, [r7], #1
   3b770:	mov	r0, r4
   3b774:	blx	sl
   3b778:	cmp	r9, #0
   3b77c:	bne	3b674 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1c8>
   3b780:	ldrb	r1, [r4, #25]
   3b784:	ldr	r0, [r4, #20]
   3b788:	cmp	r1, #0
   3b78c:	beq	3b84c <flatcc_json_printer_utype_enum_vector_field@@Base+0x3a0>
   3b790:	add	r1, r0, #1
   3b794:	str	r1, [r4, #20]
   3b798:	mov	r1, #10
   3b79c:	strb	r1, [r0]
   3b7a0:	ldr	r0, [r4, #32]
   3b7a4:	sub	r2, r0, #1
   3b7a8:	str	r2, [r4, #32]
   3b7ac:	ldrb	r3, [r4, #25]
   3b7b0:	ldr	r0, [r4, #20]
   3b7b4:	ldr	r1, [r4, #16]
   3b7b8:	mla	r7, r2, r3, r0
   3b7bc:	mul	r5, r2, r3
   3b7c0:	cmp	r7, r1
   3b7c4:	bls	3b834 <flatcc_json_printer_utype_enum_vector_field@@Base+0x388>
   3b7c8:	cmp	r0, r1
   3b7cc:	bcc	3b7e8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x33c>
   3b7d0:	ldr	r2, [r4, #44]	; 0x2c
   3b7d4:	mov	r0, r4
   3b7d8:	mov	r1, #0
   3b7dc:	blx	r2
   3b7e0:	ldr	r1, [r4, #16]
   3b7e4:	ldr	r0, [r4, #20]
   3b7e8:	sub	r6, r1, r0
   3b7ec:	cmp	r6, r5
   3b7f0:	bcs	3b834 <flatcc_json_printer_utype_enum_vector_field@@Base+0x388>
   3b7f4:	mov	r1, #32
   3b7f8:	mov	r2, r6
   3b7fc:	bl	14eec <memset@plt>
   3b800:	ldr	r0, [r4, #20]
   3b804:	ldr	r2, [r4, #44]	; 0x2c
   3b808:	mov	r1, #0
   3b80c:	add	r0, r0, r6
   3b810:	str	r0, [r4, #20]
   3b814:	mov	r0, r4
   3b818:	blx	r2
   3b81c:	ldr	r1, [r4, #16]
   3b820:	ldr	r0, [r4, #20]
   3b824:	sub	r5, r5, r6
   3b828:	sub	r6, r1, r0
   3b82c:	cmp	r5, r6
   3b830:	bhi	3b7f4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x348>
   3b834:	mov	r1, #32
   3b838:	mov	r2, r5
   3b83c:	bl	14eec <memset@plt>
   3b840:	ldr	r0, [r4, #20]
   3b844:	add	r0, r0, r5
   3b848:	str	r0, [r4, #20]
   3b84c:	add	r1, r0, #1
   3b850:	str	r1, [r4, #20]
   3b854:	mov	r1, #93	; 0x5d
   3b858:	strb	r1, [r0]
   3b85c:	sub	sp, fp, #28
   3b860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b864 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   3b864:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b868:	add	fp, sp, #28
   3b86c:	sub	sp, sp, #4
   3b870:	mov	r4, r0
   3b874:	ldrb	r0, [r0, #27]
   3b878:	cmp	r0, #0
   3b87c:	beq	3b890 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   3b880:	mov	r0, r4
   3b884:	sub	sp, fp, #28
   3b888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b88c:	b	38a9c <flatcc_json_printer_uint8_vector_field@@Base>
   3b890:	mov	r0, #4
   3b894:	add	r0, r0, r2, lsl #1
   3b898:	ldr	r2, [r1, #8]
   3b89c:	cmp	r0, r2
   3b8a0:	bge	3bc14 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3b0>
   3b8a4:	ldr	r2, [r1, #4]
   3b8a8:	add	r0, r2, r0
   3b8ac:	ldrh	r0, [r0]
   3b8b0:	cmp	r0, #0
   3b8b4:	ldrne	r2, [r1]
   3b8b8:	addsne	r8, r2, r0
   3b8bc:	beq	3bc14 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3b0>
   3b8c0:	ldr	r0, [r1, #16]
   3b8c4:	ldr	sl, [fp, #12]
   3b8c8:	ldr	r2, [fp, #8]
   3b8cc:	add	r7, r0, #1
   3b8d0:	cmp	r0, #0
   3b8d4:	str	r7, [r1, #16]
   3b8d8:	beq	3b8f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x8c>
   3b8dc:	ldr	r0, [r4, #20]
   3b8e0:	add	r1, r0, #1
   3b8e4:	str	r1, [r4, #20]
   3b8e8:	mov	r1, #44	; 0x2c
   3b8ec:	strb	r1, [r0]
   3b8f0:	ldr	r0, [r8]
   3b8f4:	mov	r1, r3
   3b8f8:	ldr	r9, [r8, r0]!
   3b8fc:	mov	r0, r4
   3b900:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3b904:	ldr	r1, [r4, #32]
   3b908:	ldr	r0, [r4, #20]
   3b90c:	cmp	r9, #0
   3b910:	add	r1, r1, #1
   3b914:	str	r1, [r4, #32]
   3b918:	add	r1, r0, #1
   3b91c:	str	r1, [r4, #20]
   3b920:	mov	r1, #91	; 0x5b
   3b924:	strb	r1, [r0]
   3b928:	beq	3bb38 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d4>
   3b92c:	ldrb	r1, [r4, #25]
   3b930:	ldr	r0, [r4, #20]
   3b934:	cmp	r1, #0
   3b938:	beq	3b9f4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x190>
   3b93c:	add	r1, r0, #1
   3b940:	str	r1, [r4, #20]
   3b944:	mov	r1, #10
   3b948:	strb	r1, [r0]
   3b94c:	ldr	r0, [r4, #20]
   3b950:	ldrb	r2, [r4, #25]
   3b954:	ldr	r3, [r4, #32]
   3b958:	ldr	r1, [r4, #16]
   3b95c:	mla	r7, r3, r2, r0
   3b960:	mul	r5, r3, r2
   3b964:	cmp	r7, r1
   3b968:	bls	3b9d8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x174>
   3b96c:	cmp	r0, r1
   3b970:	bcc	3b98c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x128>
   3b974:	ldr	r2, [r4, #44]	; 0x2c
   3b978:	mov	r0, r4
   3b97c:	mov	r1, #0
   3b980:	blx	r2
   3b984:	ldr	r1, [r4, #16]
   3b988:	ldr	r0, [r4, #20]
   3b98c:	sub	r6, r1, r0
   3b990:	cmp	r6, r5
   3b994:	bcs	3b9d8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x174>
   3b998:	mov	r1, #32
   3b99c:	mov	r2, r6
   3b9a0:	bl	14eec <memset@plt>
   3b9a4:	ldr	r0, [r4, #20]
   3b9a8:	ldr	r2, [r4, #44]	; 0x2c
   3b9ac:	mov	r1, #0
   3b9b0:	add	r0, r0, r6
   3b9b4:	str	r0, [r4, #20]
   3b9b8:	mov	r0, r4
   3b9bc:	blx	r2
   3b9c0:	ldr	r1, [r4, #16]
   3b9c4:	ldr	r0, [r4, #20]
   3b9c8:	sub	r5, r5, r6
   3b9cc:	sub	r6, r1, r0
   3b9d0:	cmp	r5, r6
   3b9d4:	bhi	3b998 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x134>
   3b9d8:	mov	r1, #32
   3b9dc:	mov	r2, r5
   3b9e0:	bl	14eec <memset@plt>
   3b9e4:	ldr	r0, [r4, #20]
   3b9e8:	add	r0, r0, r5
   3b9ec:	str	r0, [r4, #20]
   3b9f0:	b	3ba10 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ac>
   3b9f4:	ldr	r1, [r4, #16]
   3b9f8:	cmp	r0, r1
   3b9fc:	bcc	3ba10 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ac>
   3ba00:	ldr	r2, [r4, #44]	; 0x2c
   3ba04:	mov	r0, r4
   3ba08:	mov	r1, #0
   3ba0c:	blx	r2
   3ba10:	ldrb	r1, [r8, #4]
   3ba14:	mov	r0, r4
   3ba18:	blx	sl
   3ba1c:	subs	r9, r9, #1
   3ba20:	beq	3bb38 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d4>
   3ba24:	add	r7, r8, #5
   3ba28:	mov	r8, #44	; 0x2c
   3ba2c:	ldr	r0, [r4, #20]
   3ba30:	sub	r9, r9, #1
   3ba34:	add	r1, r0, #1
   3ba38:	str	r1, [r4, #20]
   3ba3c:	strb	r8, [r0]
   3ba40:	ldrb	r1, [r4, #25]
   3ba44:	ldr	r0, [r4, #20]
   3ba48:	cmp	r1, #0
   3ba4c:	beq	3bb08 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a4>
   3ba50:	add	r1, r0, #1
   3ba54:	str	r1, [r4, #20]
   3ba58:	mov	r1, #10
   3ba5c:	strb	r1, [r0]
   3ba60:	ldr	r0, [r4, #20]
   3ba64:	ldrb	r2, [r4, #25]
   3ba68:	ldr	r3, [r4, #32]
   3ba6c:	ldr	r1, [r4, #16]
   3ba70:	mla	r6, r3, r2, r0
   3ba74:	mul	r5, r3, r2
   3ba78:	cmp	r6, r1
   3ba7c:	bls	3baec <flatcc_json_printer_uint8_enum_vector_field@@Base+0x288>
   3ba80:	cmp	r0, r1
   3ba84:	bcc	3baa0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x23c>
   3ba88:	ldr	r2, [r4, #44]	; 0x2c
   3ba8c:	mov	r0, r4
   3ba90:	mov	r1, #0
   3ba94:	blx	r2
   3ba98:	ldr	r1, [r4, #16]
   3ba9c:	ldr	r0, [r4, #20]
   3baa0:	sub	r6, r1, r0
   3baa4:	cmp	r6, r5
   3baa8:	bcs	3baec <flatcc_json_printer_uint8_enum_vector_field@@Base+0x288>
   3baac:	mov	r1, #32
   3bab0:	mov	r2, r6
   3bab4:	bl	14eec <memset@plt>
   3bab8:	ldr	r0, [r4, #20]
   3babc:	ldr	r2, [r4, #44]	; 0x2c
   3bac0:	mov	r1, #0
   3bac4:	add	r0, r0, r6
   3bac8:	str	r0, [r4, #20]
   3bacc:	mov	r0, r4
   3bad0:	blx	r2
   3bad4:	ldr	r1, [r4, #16]
   3bad8:	ldr	r0, [r4, #20]
   3badc:	sub	r5, r5, r6
   3bae0:	sub	r6, r1, r0
   3bae4:	cmp	r5, r6
   3bae8:	bhi	3baac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x248>
   3baec:	mov	r1, #32
   3baf0:	mov	r2, r5
   3baf4:	bl	14eec <memset@plt>
   3baf8:	ldr	r0, [r4, #20]
   3bafc:	add	r0, r0, r5
   3bb00:	str	r0, [r4, #20]
   3bb04:	b	3bb24 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c0>
   3bb08:	ldr	r1, [r4, #16]
   3bb0c:	cmp	r0, r1
   3bb10:	bcc	3bb24 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c0>
   3bb14:	ldr	r2, [r4, #44]	; 0x2c
   3bb18:	mov	r0, r4
   3bb1c:	mov	r1, #0
   3bb20:	blx	r2
   3bb24:	ldrb	r1, [r7], #1
   3bb28:	mov	r0, r4
   3bb2c:	blx	sl
   3bb30:	cmp	r9, #0
   3bb34:	bne	3ba2c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1c8>
   3bb38:	ldrb	r1, [r4, #25]
   3bb3c:	ldr	r0, [r4, #20]
   3bb40:	cmp	r1, #0
   3bb44:	beq	3bc04 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3a0>
   3bb48:	add	r1, r0, #1
   3bb4c:	str	r1, [r4, #20]
   3bb50:	mov	r1, #10
   3bb54:	strb	r1, [r0]
   3bb58:	ldr	r0, [r4, #32]
   3bb5c:	sub	r2, r0, #1
   3bb60:	str	r2, [r4, #32]
   3bb64:	ldrb	r3, [r4, #25]
   3bb68:	ldr	r0, [r4, #20]
   3bb6c:	ldr	r1, [r4, #16]
   3bb70:	mla	r7, r2, r3, r0
   3bb74:	mul	r5, r2, r3
   3bb78:	cmp	r7, r1
   3bb7c:	bls	3bbec <flatcc_json_printer_uint8_enum_vector_field@@Base+0x388>
   3bb80:	cmp	r0, r1
   3bb84:	bcc	3bba0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x33c>
   3bb88:	ldr	r2, [r4, #44]	; 0x2c
   3bb8c:	mov	r0, r4
   3bb90:	mov	r1, #0
   3bb94:	blx	r2
   3bb98:	ldr	r1, [r4, #16]
   3bb9c:	ldr	r0, [r4, #20]
   3bba0:	sub	r6, r1, r0
   3bba4:	cmp	r6, r5
   3bba8:	bcs	3bbec <flatcc_json_printer_uint8_enum_vector_field@@Base+0x388>
   3bbac:	mov	r1, #32
   3bbb0:	mov	r2, r6
   3bbb4:	bl	14eec <memset@plt>
   3bbb8:	ldr	r0, [r4, #20]
   3bbbc:	ldr	r2, [r4, #44]	; 0x2c
   3bbc0:	mov	r1, #0
   3bbc4:	add	r0, r0, r6
   3bbc8:	str	r0, [r4, #20]
   3bbcc:	mov	r0, r4
   3bbd0:	blx	r2
   3bbd4:	ldr	r1, [r4, #16]
   3bbd8:	ldr	r0, [r4, #20]
   3bbdc:	sub	r5, r5, r6
   3bbe0:	sub	r6, r1, r0
   3bbe4:	cmp	r5, r6
   3bbe8:	bhi	3bbac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x348>
   3bbec:	mov	r1, #32
   3bbf0:	mov	r2, r5
   3bbf4:	bl	14eec <memset@plt>
   3bbf8:	ldr	r0, [r4, #20]
   3bbfc:	add	r0, r0, r5
   3bc00:	str	r0, [r4, #20]
   3bc04:	add	r1, r0, #1
   3bc08:	str	r1, [r4, #20]
   3bc0c:	mov	r1, #93	; 0x5d
   3bc10:	strb	r1, [r0]
   3bc14:	sub	sp, fp, #28
   3bc18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003bc1c <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   3bc1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bc20:	add	fp, sp, #28
   3bc24:	sub	sp, sp, #4
   3bc28:	mov	r4, r0
   3bc2c:	ldrb	r0, [r0, #27]
   3bc30:	cmp	r0, #0
   3bc34:	beq	3bc48 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   3bc38:	mov	r0, r4
   3bc3c:	sub	sp, fp, #28
   3bc40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bc44:	b	38e4c <flatcc_json_printer_uint16_vector_field@@Base>
   3bc48:	mov	r0, #4
   3bc4c:	add	r0, r0, r2, lsl #1
   3bc50:	ldr	r2, [r1, #8]
   3bc54:	cmp	r0, r2
   3bc58:	bge	3bfcc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3b0>
   3bc5c:	ldr	r2, [r1, #4]
   3bc60:	add	r0, r2, r0
   3bc64:	ldrh	r0, [r0]
   3bc68:	cmp	r0, #0
   3bc6c:	ldrne	r2, [r1]
   3bc70:	addsne	r8, r2, r0
   3bc74:	beq	3bfcc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3b0>
   3bc78:	ldr	r0, [r1, #16]
   3bc7c:	ldr	sl, [fp, #12]
   3bc80:	ldr	r2, [fp, #8]
   3bc84:	add	r7, r0, #1
   3bc88:	cmp	r0, #0
   3bc8c:	str	r7, [r1, #16]
   3bc90:	beq	3bca8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x8c>
   3bc94:	ldr	r0, [r4, #20]
   3bc98:	add	r1, r0, #1
   3bc9c:	str	r1, [r4, #20]
   3bca0:	mov	r1, #44	; 0x2c
   3bca4:	strb	r1, [r0]
   3bca8:	ldr	r0, [r8]
   3bcac:	mov	r1, r3
   3bcb0:	ldr	r9, [r8, r0]!
   3bcb4:	mov	r0, r4
   3bcb8:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3bcbc:	ldr	r1, [r4, #32]
   3bcc0:	ldr	r0, [r4, #20]
   3bcc4:	cmp	r9, #0
   3bcc8:	add	r1, r1, #1
   3bccc:	str	r1, [r4, #32]
   3bcd0:	add	r1, r0, #1
   3bcd4:	str	r1, [r4, #20]
   3bcd8:	mov	r1, #91	; 0x5b
   3bcdc:	strb	r1, [r0]
   3bce0:	beq	3bef0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d4>
   3bce4:	ldrb	r1, [r4, #25]
   3bce8:	ldr	r0, [r4, #20]
   3bcec:	cmp	r1, #0
   3bcf0:	beq	3bdac <flatcc_json_printer_uint16_enum_vector_field@@Base+0x190>
   3bcf4:	add	r1, r0, #1
   3bcf8:	str	r1, [r4, #20]
   3bcfc:	mov	r1, #10
   3bd00:	strb	r1, [r0]
   3bd04:	ldr	r0, [r4, #20]
   3bd08:	ldrb	r2, [r4, #25]
   3bd0c:	ldr	r3, [r4, #32]
   3bd10:	ldr	r1, [r4, #16]
   3bd14:	mla	r7, r3, r2, r0
   3bd18:	mul	r5, r3, r2
   3bd1c:	cmp	r7, r1
   3bd20:	bls	3bd90 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x174>
   3bd24:	cmp	r0, r1
   3bd28:	bcc	3bd44 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x128>
   3bd2c:	ldr	r2, [r4, #44]	; 0x2c
   3bd30:	mov	r0, r4
   3bd34:	mov	r1, #0
   3bd38:	blx	r2
   3bd3c:	ldr	r1, [r4, #16]
   3bd40:	ldr	r0, [r4, #20]
   3bd44:	sub	r6, r1, r0
   3bd48:	cmp	r6, r5
   3bd4c:	bcs	3bd90 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x174>
   3bd50:	mov	r1, #32
   3bd54:	mov	r2, r6
   3bd58:	bl	14eec <memset@plt>
   3bd5c:	ldr	r0, [r4, #20]
   3bd60:	ldr	r2, [r4, #44]	; 0x2c
   3bd64:	mov	r1, #0
   3bd68:	add	r0, r0, r6
   3bd6c:	str	r0, [r4, #20]
   3bd70:	mov	r0, r4
   3bd74:	blx	r2
   3bd78:	ldr	r1, [r4, #16]
   3bd7c:	ldr	r0, [r4, #20]
   3bd80:	sub	r5, r5, r6
   3bd84:	sub	r6, r1, r0
   3bd88:	cmp	r5, r6
   3bd8c:	bhi	3bd50 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x134>
   3bd90:	mov	r1, #32
   3bd94:	mov	r2, r5
   3bd98:	bl	14eec <memset@plt>
   3bd9c:	ldr	r0, [r4, #20]
   3bda0:	add	r0, r0, r5
   3bda4:	str	r0, [r4, #20]
   3bda8:	b	3bdc8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ac>
   3bdac:	ldr	r1, [r4, #16]
   3bdb0:	cmp	r0, r1
   3bdb4:	bcc	3bdc8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ac>
   3bdb8:	ldr	r2, [r4, #44]	; 0x2c
   3bdbc:	mov	r0, r4
   3bdc0:	mov	r1, #0
   3bdc4:	blx	r2
   3bdc8:	ldrh	r1, [r8, #4]
   3bdcc:	mov	r0, r4
   3bdd0:	blx	sl
   3bdd4:	subs	r9, r9, #1
   3bdd8:	beq	3bef0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d4>
   3bddc:	add	r7, r8, #6
   3bde0:	mov	r8, #44	; 0x2c
   3bde4:	ldr	r0, [r4, #20]
   3bde8:	sub	r9, r9, #1
   3bdec:	add	r1, r0, #1
   3bdf0:	str	r1, [r4, #20]
   3bdf4:	strb	r8, [r0]
   3bdf8:	ldrb	r1, [r4, #25]
   3bdfc:	ldr	r0, [r4, #20]
   3be00:	cmp	r1, #0
   3be04:	beq	3bec0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a4>
   3be08:	add	r1, r0, #1
   3be0c:	str	r1, [r4, #20]
   3be10:	mov	r1, #10
   3be14:	strb	r1, [r0]
   3be18:	ldr	r0, [r4, #20]
   3be1c:	ldrb	r2, [r4, #25]
   3be20:	ldr	r3, [r4, #32]
   3be24:	ldr	r1, [r4, #16]
   3be28:	mla	r6, r3, r2, r0
   3be2c:	mul	r5, r3, r2
   3be30:	cmp	r6, r1
   3be34:	bls	3bea4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x288>
   3be38:	cmp	r0, r1
   3be3c:	bcc	3be58 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x23c>
   3be40:	ldr	r2, [r4, #44]	; 0x2c
   3be44:	mov	r0, r4
   3be48:	mov	r1, #0
   3be4c:	blx	r2
   3be50:	ldr	r1, [r4, #16]
   3be54:	ldr	r0, [r4, #20]
   3be58:	sub	r6, r1, r0
   3be5c:	cmp	r6, r5
   3be60:	bcs	3bea4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x288>
   3be64:	mov	r1, #32
   3be68:	mov	r2, r6
   3be6c:	bl	14eec <memset@plt>
   3be70:	ldr	r0, [r4, #20]
   3be74:	ldr	r2, [r4, #44]	; 0x2c
   3be78:	mov	r1, #0
   3be7c:	add	r0, r0, r6
   3be80:	str	r0, [r4, #20]
   3be84:	mov	r0, r4
   3be88:	blx	r2
   3be8c:	ldr	r1, [r4, #16]
   3be90:	ldr	r0, [r4, #20]
   3be94:	sub	r5, r5, r6
   3be98:	sub	r6, r1, r0
   3be9c:	cmp	r5, r6
   3bea0:	bhi	3be64 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x248>
   3bea4:	mov	r1, #32
   3bea8:	mov	r2, r5
   3beac:	bl	14eec <memset@plt>
   3beb0:	ldr	r0, [r4, #20]
   3beb4:	add	r0, r0, r5
   3beb8:	str	r0, [r4, #20]
   3bebc:	b	3bedc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c0>
   3bec0:	ldr	r1, [r4, #16]
   3bec4:	cmp	r0, r1
   3bec8:	bcc	3bedc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c0>
   3becc:	ldr	r2, [r4, #44]	; 0x2c
   3bed0:	mov	r0, r4
   3bed4:	mov	r1, #0
   3bed8:	blx	r2
   3bedc:	ldrh	r1, [r7], #2
   3bee0:	mov	r0, r4
   3bee4:	blx	sl
   3bee8:	cmp	r9, #0
   3beec:	bne	3bde4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c8>
   3bef0:	ldrb	r1, [r4, #25]
   3bef4:	ldr	r0, [r4, #20]
   3bef8:	cmp	r1, #0
   3befc:	beq	3bfbc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3a0>
   3bf00:	add	r1, r0, #1
   3bf04:	str	r1, [r4, #20]
   3bf08:	mov	r1, #10
   3bf0c:	strb	r1, [r0]
   3bf10:	ldr	r0, [r4, #32]
   3bf14:	sub	r2, r0, #1
   3bf18:	str	r2, [r4, #32]
   3bf1c:	ldrb	r3, [r4, #25]
   3bf20:	ldr	r0, [r4, #20]
   3bf24:	ldr	r1, [r4, #16]
   3bf28:	mla	r7, r2, r3, r0
   3bf2c:	mul	r5, r2, r3
   3bf30:	cmp	r7, r1
   3bf34:	bls	3bfa4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x388>
   3bf38:	cmp	r0, r1
   3bf3c:	bcc	3bf58 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x33c>
   3bf40:	ldr	r2, [r4, #44]	; 0x2c
   3bf44:	mov	r0, r4
   3bf48:	mov	r1, #0
   3bf4c:	blx	r2
   3bf50:	ldr	r1, [r4, #16]
   3bf54:	ldr	r0, [r4, #20]
   3bf58:	sub	r6, r1, r0
   3bf5c:	cmp	r6, r5
   3bf60:	bcs	3bfa4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x388>
   3bf64:	mov	r1, #32
   3bf68:	mov	r2, r6
   3bf6c:	bl	14eec <memset@plt>
   3bf70:	ldr	r0, [r4, #20]
   3bf74:	ldr	r2, [r4, #44]	; 0x2c
   3bf78:	mov	r1, #0
   3bf7c:	add	r0, r0, r6
   3bf80:	str	r0, [r4, #20]
   3bf84:	mov	r0, r4
   3bf88:	blx	r2
   3bf8c:	ldr	r1, [r4, #16]
   3bf90:	ldr	r0, [r4, #20]
   3bf94:	sub	r5, r5, r6
   3bf98:	sub	r6, r1, r0
   3bf9c:	cmp	r5, r6
   3bfa0:	bhi	3bf64 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x348>
   3bfa4:	mov	r1, #32
   3bfa8:	mov	r2, r5
   3bfac:	bl	14eec <memset@plt>
   3bfb0:	ldr	r0, [r4, #20]
   3bfb4:	add	r0, r0, r5
   3bfb8:	str	r0, [r4, #20]
   3bfbc:	add	r1, r0, #1
   3bfc0:	str	r1, [r4, #20]
   3bfc4:	mov	r1, #93	; 0x5d
   3bfc8:	strb	r1, [r0]
   3bfcc:	sub	sp, fp, #28
   3bfd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003bfd4 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   3bfd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bfd8:	add	fp, sp, #28
   3bfdc:	sub	sp, sp, #4
   3bfe0:	mov	r4, r0
   3bfe4:	ldrb	r0, [r0, #27]
   3bfe8:	cmp	r0, #0
   3bfec:	beq	3c000 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   3bff0:	mov	r0, r4
   3bff4:	sub	sp, fp, #28
   3bff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bffc:	b	391fc <flatcc_json_printer_uint32_vector_field@@Base>
   3c000:	mov	r0, #4
   3c004:	add	r0, r0, r2, lsl #1
   3c008:	ldr	r2, [r1, #8]
   3c00c:	cmp	r0, r2
   3c010:	bge	3c384 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3b0>
   3c014:	ldr	r2, [r1, #4]
   3c018:	add	r0, r2, r0
   3c01c:	ldrh	r0, [r0]
   3c020:	cmp	r0, #0
   3c024:	ldrne	r2, [r1]
   3c028:	addsne	r8, r2, r0
   3c02c:	beq	3c384 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3b0>
   3c030:	ldr	r0, [r1, #16]
   3c034:	ldr	sl, [fp, #12]
   3c038:	ldr	r2, [fp, #8]
   3c03c:	add	r7, r0, #1
   3c040:	cmp	r0, #0
   3c044:	str	r7, [r1, #16]
   3c048:	beq	3c060 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x8c>
   3c04c:	ldr	r0, [r4, #20]
   3c050:	add	r1, r0, #1
   3c054:	str	r1, [r4, #20]
   3c058:	mov	r1, #44	; 0x2c
   3c05c:	strb	r1, [r0]
   3c060:	ldr	r0, [r8]
   3c064:	mov	r1, r3
   3c068:	ldr	r9, [r8, r0]!
   3c06c:	mov	r0, r4
   3c070:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3c074:	ldr	r1, [r4, #32]
   3c078:	ldr	r0, [r4, #20]
   3c07c:	cmp	r9, #0
   3c080:	add	r1, r1, #1
   3c084:	str	r1, [r4, #32]
   3c088:	add	r1, r0, #1
   3c08c:	str	r1, [r4, #20]
   3c090:	mov	r1, #91	; 0x5b
   3c094:	strb	r1, [r0]
   3c098:	beq	3c2a8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d4>
   3c09c:	ldrb	r1, [r4, #25]
   3c0a0:	ldr	r0, [r4, #20]
   3c0a4:	cmp	r1, #0
   3c0a8:	beq	3c164 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x190>
   3c0ac:	add	r1, r0, #1
   3c0b0:	str	r1, [r4, #20]
   3c0b4:	mov	r1, #10
   3c0b8:	strb	r1, [r0]
   3c0bc:	ldr	r0, [r4, #20]
   3c0c0:	ldrb	r2, [r4, #25]
   3c0c4:	ldr	r3, [r4, #32]
   3c0c8:	ldr	r1, [r4, #16]
   3c0cc:	mla	r7, r3, r2, r0
   3c0d0:	mul	r5, r3, r2
   3c0d4:	cmp	r7, r1
   3c0d8:	bls	3c148 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x174>
   3c0dc:	cmp	r0, r1
   3c0e0:	bcc	3c0fc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x128>
   3c0e4:	ldr	r2, [r4, #44]	; 0x2c
   3c0e8:	mov	r0, r4
   3c0ec:	mov	r1, #0
   3c0f0:	blx	r2
   3c0f4:	ldr	r1, [r4, #16]
   3c0f8:	ldr	r0, [r4, #20]
   3c0fc:	sub	r6, r1, r0
   3c100:	cmp	r6, r5
   3c104:	bcs	3c148 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x174>
   3c108:	mov	r1, #32
   3c10c:	mov	r2, r6
   3c110:	bl	14eec <memset@plt>
   3c114:	ldr	r0, [r4, #20]
   3c118:	ldr	r2, [r4, #44]	; 0x2c
   3c11c:	mov	r1, #0
   3c120:	add	r0, r0, r6
   3c124:	str	r0, [r4, #20]
   3c128:	mov	r0, r4
   3c12c:	blx	r2
   3c130:	ldr	r1, [r4, #16]
   3c134:	ldr	r0, [r4, #20]
   3c138:	sub	r5, r5, r6
   3c13c:	sub	r6, r1, r0
   3c140:	cmp	r5, r6
   3c144:	bhi	3c108 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x134>
   3c148:	mov	r1, #32
   3c14c:	mov	r2, r5
   3c150:	bl	14eec <memset@plt>
   3c154:	ldr	r0, [r4, #20]
   3c158:	add	r0, r0, r5
   3c15c:	str	r0, [r4, #20]
   3c160:	b	3c180 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ac>
   3c164:	ldr	r1, [r4, #16]
   3c168:	cmp	r0, r1
   3c16c:	bcc	3c180 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ac>
   3c170:	ldr	r2, [r4, #44]	; 0x2c
   3c174:	mov	r0, r4
   3c178:	mov	r1, #0
   3c17c:	blx	r2
   3c180:	ldr	r1, [r8, #4]
   3c184:	mov	r0, r4
   3c188:	blx	sl
   3c18c:	subs	r9, r9, #1
   3c190:	beq	3c2a8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d4>
   3c194:	add	r7, r8, #8
   3c198:	mov	r8, #44	; 0x2c
   3c19c:	ldr	r0, [r4, #20]
   3c1a0:	sub	r9, r9, #1
   3c1a4:	add	r1, r0, #1
   3c1a8:	str	r1, [r4, #20]
   3c1ac:	strb	r8, [r0]
   3c1b0:	ldrb	r1, [r4, #25]
   3c1b4:	ldr	r0, [r4, #20]
   3c1b8:	cmp	r1, #0
   3c1bc:	beq	3c278 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a4>
   3c1c0:	add	r1, r0, #1
   3c1c4:	str	r1, [r4, #20]
   3c1c8:	mov	r1, #10
   3c1cc:	strb	r1, [r0]
   3c1d0:	ldr	r0, [r4, #20]
   3c1d4:	ldrb	r2, [r4, #25]
   3c1d8:	ldr	r3, [r4, #32]
   3c1dc:	ldr	r1, [r4, #16]
   3c1e0:	mla	r6, r3, r2, r0
   3c1e4:	mul	r5, r3, r2
   3c1e8:	cmp	r6, r1
   3c1ec:	bls	3c25c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   3c1f0:	cmp	r0, r1
   3c1f4:	bcc	3c210 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x23c>
   3c1f8:	ldr	r2, [r4, #44]	; 0x2c
   3c1fc:	mov	r0, r4
   3c200:	mov	r1, #0
   3c204:	blx	r2
   3c208:	ldr	r1, [r4, #16]
   3c20c:	ldr	r0, [r4, #20]
   3c210:	sub	r6, r1, r0
   3c214:	cmp	r6, r5
   3c218:	bcs	3c25c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   3c21c:	mov	r1, #32
   3c220:	mov	r2, r6
   3c224:	bl	14eec <memset@plt>
   3c228:	ldr	r0, [r4, #20]
   3c22c:	ldr	r2, [r4, #44]	; 0x2c
   3c230:	mov	r1, #0
   3c234:	add	r0, r0, r6
   3c238:	str	r0, [r4, #20]
   3c23c:	mov	r0, r4
   3c240:	blx	r2
   3c244:	ldr	r1, [r4, #16]
   3c248:	ldr	r0, [r4, #20]
   3c24c:	sub	r5, r5, r6
   3c250:	sub	r6, r1, r0
   3c254:	cmp	r5, r6
   3c258:	bhi	3c21c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x248>
   3c25c:	mov	r1, #32
   3c260:	mov	r2, r5
   3c264:	bl	14eec <memset@plt>
   3c268:	ldr	r0, [r4, #20]
   3c26c:	add	r0, r0, r5
   3c270:	str	r0, [r4, #20]
   3c274:	b	3c294 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c0>
   3c278:	ldr	r1, [r4, #16]
   3c27c:	cmp	r0, r1
   3c280:	bcc	3c294 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c0>
   3c284:	ldr	r2, [r4, #44]	; 0x2c
   3c288:	mov	r0, r4
   3c28c:	mov	r1, #0
   3c290:	blx	r2
   3c294:	ldr	r1, [r7], #4
   3c298:	mov	r0, r4
   3c29c:	blx	sl
   3c2a0:	cmp	r9, #0
   3c2a4:	bne	3c19c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c8>
   3c2a8:	ldrb	r1, [r4, #25]
   3c2ac:	ldr	r0, [r4, #20]
   3c2b0:	cmp	r1, #0
   3c2b4:	beq	3c374 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3a0>
   3c2b8:	add	r1, r0, #1
   3c2bc:	str	r1, [r4, #20]
   3c2c0:	mov	r1, #10
   3c2c4:	strb	r1, [r0]
   3c2c8:	ldr	r0, [r4, #32]
   3c2cc:	sub	r2, r0, #1
   3c2d0:	str	r2, [r4, #32]
   3c2d4:	ldrb	r3, [r4, #25]
   3c2d8:	ldr	r0, [r4, #20]
   3c2dc:	ldr	r1, [r4, #16]
   3c2e0:	mla	r7, r2, r3, r0
   3c2e4:	mul	r5, r2, r3
   3c2e8:	cmp	r7, r1
   3c2ec:	bls	3c35c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x388>
   3c2f0:	cmp	r0, r1
   3c2f4:	bcc	3c310 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x33c>
   3c2f8:	ldr	r2, [r4, #44]	; 0x2c
   3c2fc:	mov	r0, r4
   3c300:	mov	r1, #0
   3c304:	blx	r2
   3c308:	ldr	r1, [r4, #16]
   3c30c:	ldr	r0, [r4, #20]
   3c310:	sub	r6, r1, r0
   3c314:	cmp	r6, r5
   3c318:	bcs	3c35c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x388>
   3c31c:	mov	r1, #32
   3c320:	mov	r2, r6
   3c324:	bl	14eec <memset@plt>
   3c328:	ldr	r0, [r4, #20]
   3c32c:	ldr	r2, [r4, #44]	; 0x2c
   3c330:	mov	r1, #0
   3c334:	add	r0, r0, r6
   3c338:	str	r0, [r4, #20]
   3c33c:	mov	r0, r4
   3c340:	blx	r2
   3c344:	ldr	r1, [r4, #16]
   3c348:	ldr	r0, [r4, #20]
   3c34c:	sub	r5, r5, r6
   3c350:	sub	r6, r1, r0
   3c354:	cmp	r5, r6
   3c358:	bhi	3c31c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x348>
   3c35c:	mov	r1, #32
   3c360:	mov	r2, r5
   3c364:	bl	14eec <memset@plt>
   3c368:	ldr	r0, [r4, #20]
   3c36c:	add	r0, r0, r5
   3c370:	str	r0, [r4, #20]
   3c374:	add	r1, r0, #1
   3c378:	str	r1, [r4, #20]
   3c37c:	mov	r1, #93	; 0x5d
   3c380:	strb	r1, [r0]
   3c384:	sub	sp, fp, #28
   3c388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c38c <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   3c38c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c390:	add	fp, sp, #28
   3c394:	sub	sp, sp, #4
   3c398:	mov	r4, r0
   3c39c:	ldrb	r0, [r0, #27]
   3c3a0:	cmp	r0, #0
   3c3a4:	beq	3c3b8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   3c3a8:	mov	r0, r4
   3c3ac:	sub	sp, fp, #28
   3c3b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c3b4:	b	395ac <flatcc_json_printer_uint64_vector_field@@Base>
   3c3b8:	mov	r0, #4
   3c3bc:	add	r0, r0, r2, lsl #1
   3c3c0:	ldr	r2, [r1, #8]
   3c3c4:	cmp	r0, r2
   3c3c8:	bge	3c740 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b4>
   3c3cc:	ldr	r2, [r1, #4]
   3c3d0:	add	r0, r2, r0
   3c3d4:	ldrh	r0, [r0]
   3c3d8:	cmp	r0, #0
   3c3dc:	ldrne	r2, [r1]
   3c3e0:	addsne	r8, r2, r0
   3c3e4:	beq	3c740 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b4>
   3c3e8:	ldr	r0, [r1, #16]
   3c3ec:	ldr	sl, [fp, #12]
   3c3f0:	ldr	r2, [fp, #8]
   3c3f4:	add	r7, r0, #1
   3c3f8:	cmp	r0, #0
   3c3fc:	str	r7, [r1, #16]
   3c400:	beq	3c418 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x8c>
   3c404:	ldr	r0, [r4, #20]
   3c408:	add	r1, r0, #1
   3c40c:	str	r1, [r4, #20]
   3c410:	mov	r1, #44	; 0x2c
   3c414:	strb	r1, [r0]
   3c418:	ldr	r0, [r8]
   3c41c:	mov	r1, r3
   3c420:	ldr	r9, [r8, r0]!
   3c424:	mov	r0, r4
   3c428:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3c42c:	ldr	r1, [r4, #32]
   3c430:	ldr	r0, [r4, #20]
   3c434:	cmp	r9, #0
   3c438:	add	r1, r1, #1
   3c43c:	str	r1, [r4, #32]
   3c440:	add	r1, r0, #1
   3c444:	str	r1, [r4, #20]
   3c448:	mov	r1, #91	; 0x5b
   3c44c:	strb	r1, [r0]
   3c450:	beq	3c664 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2d8>
   3c454:	ldrb	r1, [r4, #25]
   3c458:	ldr	r0, [r4, #20]
   3c45c:	cmp	r1, #0
   3c460:	beq	3c51c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x190>
   3c464:	add	r1, r0, #1
   3c468:	str	r1, [r4, #20]
   3c46c:	mov	r1, #10
   3c470:	strb	r1, [r0]
   3c474:	ldr	r0, [r4, #20]
   3c478:	ldrb	r2, [r4, #25]
   3c47c:	ldr	r3, [r4, #32]
   3c480:	ldr	r1, [r4, #16]
   3c484:	mla	r7, r3, r2, r0
   3c488:	mul	r5, r3, r2
   3c48c:	cmp	r7, r1
   3c490:	bls	3c500 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x174>
   3c494:	cmp	r0, r1
   3c498:	bcc	3c4b4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x128>
   3c49c:	ldr	r2, [r4, #44]	; 0x2c
   3c4a0:	mov	r0, r4
   3c4a4:	mov	r1, #0
   3c4a8:	blx	r2
   3c4ac:	ldr	r1, [r4, #16]
   3c4b0:	ldr	r0, [r4, #20]
   3c4b4:	sub	r6, r1, r0
   3c4b8:	cmp	r6, r5
   3c4bc:	bcs	3c500 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x174>
   3c4c0:	mov	r1, #32
   3c4c4:	mov	r2, r6
   3c4c8:	bl	14eec <memset@plt>
   3c4cc:	ldr	r0, [r4, #20]
   3c4d0:	ldr	r2, [r4, #44]	; 0x2c
   3c4d4:	mov	r1, #0
   3c4d8:	add	r0, r0, r6
   3c4dc:	str	r0, [r4, #20]
   3c4e0:	mov	r0, r4
   3c4e4:	blx	r2
   3c4e8:	ldr	r1, [r4, #16]
   3c4ec:	ldr	r0, [r4, #20]
   3c4f0:	sub	r5, r5, r6
   3c4f4:	sub	r6, r1, r0
   3c4f8:	cmp	r5, r6
   3c4fc:	bhi	3c4c0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x134>
   3c500:	mov	r1, #32
   3c504:	mov	r2, r5
   3c508:	bl	14eec <memset@plt>
   3c50c:	ldr	r0, [r4, #20]
   3c510:	add	r0, r0, r5
   3c514:	str	r0, [r4, #20]
   3c518:	b	3c538 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ac>
   3c51c:	ldr	r1, [r4, #16]
   3c520:	cmp	r0, r1
   3c524:	bcc	3c538 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ac>
   3c528:	ldr	r2, [r4, #44]	; 0x2c
   3c52c:	mov	r0, r4
   3c530:	mov	r1, #0
   3c534:	blx	r2
   3c538:	ldrd	r2, [r8, #4]
   3c53c:	mov	r0, r4
   3c540:	blx	sl
   3c544:	subs	r9, r9, #1
   3c548:	beq	3c664 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2d8>
   3c54c:	add	r7, r8, #12
   3c550:	mov	r8, #44	; 0x2c
   3c554:	ldr	r0, [r4, #20]
   3c558:	sub	r9, r9, #1
   3c55c:	add	r1, r0, #1
   3c560:	str	r1, [r4, #20]
   3c564:	strb	r8, [r0]
   3c568:	ldrb	r1, [r4, #25]
   3c56c:	ldr	r0, [r4, #20]
   3c570:	cmp	r1, #0
   3c574:	beq	3c630 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a4>
   3c578:	add	r1, r0, #1
   3c57c:	str	r1, [r4, #20]
   3c580:	mov	r1, #10
   3c584:	strb	r1, [r0]
   3c588:	ldr	r0, [r4, #20]
   3c58c:	ldrb	r2, [r4, #25]
   3c590:	ldr	r3, [r4, #32]
   3c594:	ldr	r1, [r4, #16]
   3c598:	mla	r6, r3, r2, r0
   3c59c:	mul	r5, r3, r2
   3c5a0:	cmp	r6, r1
   3c5a4:	bls	3c614 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   3c5a8:	cmp	r0, r1
   3c5ac:	bcc	3c5c8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x23c>
   3c5b0:	ldr	r2, [r4, #44]	; 0x2c
   3c5b4:	mov	r0, r4
   3c5b8:	mov	r1, #0
   3c5bc:	blx	r2
   3c5c0:	ldr	r1, [r4, #16]
   3c5c4:	ldr	r0, [r4, #20]
   3c5c8:	sub	r6, r1, r0
   3c5cc:	cmp	r6, r5
   3c5d0:	bcs	3c614 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   3c5d4:	mov	r1, #32
   3c5d8:	mov	r2, r6
   3c5dc:	bl	14eec <memset@plt>
   3c5e0:	ldr	r0, [r4, #20]
   3c5e4:	ldr	r2, [r4, #44]	; 0x2c
   3c5e8:	mov	r1, #0
   3c5ec:	add	r0, r0, r6
   3c5f0:	str	r0, [r4, #20]
   3c5f4:	mov	r0, r4
   3c5f8:	blx	r2
   3c5fc:	ldr	r1, [r4, #16]
   3c600:	ldr	r0, [r4, #20]
   3c604:	sub	r5, r5, r6
   3c608:	sub	r6, r1, r0
   3c60c:	cmp	r5, r6
   3c610:	bhi	3c5d4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x248>
   3c614:	mov	r1, #32
   3c618:	mov	r2, r5
   3c61c:	bl	14eec <memset@plt>
   3c620:	ldr	r0, [r4, #20]
   3c624:	add	r0, r0, r5
   3c628:	str	r0, [r4, #20]
   3c62c:	b	3c64c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c0>
   3c630:	ldr	r1, [r4, #16]
   3c634:	cmp	r0, r1
   3c638:	bcc	3c64c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c0>
   3c63c:	ldr	r2, [r4, #44]	; 0x2c
   3c640:	mov	r0, r4
   3c644:	mov	r1, #0
   3c648:	blx	r2
   3c64c:	ldrd	r2, [r7]
   3c650:	mov	r0, r4
   3c654:	blx	sl
   3c658:	add	r7, r7, #8
   3c65c:	cmp	r9, #0
   3c660:	bne	3c554 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c8>
   3c664:	ldrb	r1, [r4, #25]
   3c668:	ldr	r0, [r4, #20]
   3c66c:	cmp	r1, #0
   3c670:	beq	3c730 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3a4>
   3c674:	add	r1, r0, #1
   3c678:	str	r1, [r4, #20]
   3c67c:	mov	r1, #10
   3c680:	strb	r1, [r0]
   3c684:	ldr	r0, [r4, #32]
   3c688:	sub	r2, r0, #1
   3c68c:	str	r2, [r4, #32]
   3c690:	ldrb	r3, [r4, #25]
   3c694:	ldr	r0, [r4, #20]
   3c698:	ldr	r1, [r4, #16]
   3c69c:	mla	r7, r2, r3, r0
   3c6a0:	mul	r5, r2, r3
   3c6a4:	cmp	r7, r1
   3c6a8:	bls	3c718 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x38c>
   3c6ac:	cmp	r0, r1
   3c6b0:	bcc	3c6cc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x340>
   3c6b4:	ldr	r2, [r4, #44]	; 0x2c
   3c6b8:	mov	r0, r4
   3c6bc:	mov	r1, #0
   3c6c0:	blx	r2
   3c6c4:	ldr	r1, [r4, #16]
   3c6c8:	ldr	r0, [r4, #20]
   3c6cc:	sub	r6, r1, r0
   3c6d0:	cmp	r6, r5
   3c6d4:	bcs	3c718 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x38c>
   3c6d8:	mov	r1, #32
   3c6dc:	mov	r2, r6
   3c6e0:	bl	14eec <memset@plt>
   3c6e4:	ldr	r0, [r4, #20]
   3c6e8:	ldr	r2, [r4, #44]	; 0x2c
   3c6ec:	mov	r1, #0
   3c6f0:	add	r0, r0, r6
   3c6f4:	str	r0, [r4, #20]
   3c6f8:	mov	r0, r4
   3c6fc:	blx	r2
   3c700:	ldr	r1, [r4, #16]
   3c704:	ldr	r0, [r4, #20]
   3c708:	sub	r5, r5, r6
   3c70c:	sub	r6, r1, r0
   3c710:	cmp	r5, r6
   3c714:	bhi	3c6d8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x34c>
   3c718:	mov	r1, #32
   3c71c:	mov	r2, r5
   3c720:	bl	14eec <memset@plt>
   3c724:	ldr	r0, [r4, #20]
   3c728:	add	r0, r0, r5
   3c72c:	str	r0, [r4, #20]
   3c730:	add	r1, r0, #1
   3c734:	str	r1, [r4, #20]
   3c738:	mov	r1, #93	; 0x5d
   3c73c:	strb	r1, [r0]
   3c740:	sub	sp, fp, #28
   3c744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c748 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   3c748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c74c:	add	fp, sp, #28
   3c750:	sub	sp, sp, #4
   3c754:	mov	r4, r0
   3c758:	ldrb	r0, [r0, #27]
   3c75c:	cmp	r0, #0
   3c760:	beq	3c774 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   3c764:	mov	r0, r4
   3c768:	sub	sp, fp, #28
   3c76c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c770:	b	39960 <flatcc_json_printer_int8_vector_field@@Base>
   3c774:	mov	r0, #4
   3c778:	add	r0, r0, r2, lsl #1
   3c77c:	ldr	r2, [r1, #8]
   3c780:	cmp	r0, r2
   3c784:	bge	3caf8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3b0>
   3c788:	ldr	r2, [r1, #4]
   3c78c:	add	r0, r2, r0
   3c790:	ldrh	r0, [r0]
   3c794:	cmp	r0, #0
   3c798:	ldrne	r2, [r1]
   3c79c:	addsne	r8, r2, r0
   3c7a0:	beq	3caf8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3b0>
   3c7a4:	ldr	r0, [r1, #16]
   3c7a8:	ldr	sl, [fp, #12]
   3c7ac:	ldr	r2, [fp, #8]
   3c7b0:	add	r7, r0, #1
   3c7b4:	cmp	r0, #0
   3c7b8:	str	r7, [r1, #16]
   3c7bc:	beq	3c7d4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x8c>
   3c7c0:	ldr	r0, [r4, #20]
   3c7c4:	add	r1, r0, #1
   3c7c8:	str	r1, [r4, #20]
   3c7cc:	mov	r1, #44	; 0x2c
   3c7d0:	strb	r1, [r0]
   3c7d4:	ldr	r0, [r8]
   3c7d8:	mov	r1, r3
   3c7dc:	ldr	r9, [r8, r0]!
   3c7e0:	mov	r0, r4
   3c7e4:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3c7e8:	ldr	r1, [r4, #32]
   3c7ec:	ldr	r0, [r4, #20]
   3c7f0:	cmp	r9, #0
   3c7f4:	add	r1, r1, #1
   3c7f8:	str	r1, [r4, #32]
   3c7fc:	add	r1, r0, #1
   3c800:	str	r1, [r4, #20]
   3c804:	mov	r1, #91	; 0x5b
   3c808:	strb	r1, [r0]
   3c80c:	beq	3ca1c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d4>
   3c810:	ldrb	r1, [r4, #25]
   3c814:	ldr	r0, [r4, #20]
   3c818:	cmp	r1, #0
   3c81c:	beq	3c8d8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x190>
   3c820:	add	r1, r0, #1
   3c824:	str	r1, [r4, #20]
   3c828:	mov	r1, #10
   3c82c:	strb	r1, [r0]
   3c830:	ldr	r0, [r4, #20]
   3c834:	ldrb	r2, [r4, #25]
   3c838:	ldr	r3, [r4, #32]
   3c83c:	ldr	r1, [r4, #16]
   3c840:	mla	r7, r3, r2, r0
   3c844:	mul	r5, r3, r2
   3c848:	cmp	r7, r1
   3c84c:	bls	3c8bc <flatcc_json_printer_int8_enum_vector_field@@Base+0x174>
   3c850:	cmp	r0, r1
   3c854:	bcc	3c870 <flatcc_json_printer_int8_enum_vector_field@@Base+0x128>
   3c858:	ldr	r2, [r4, #44]	; 0x2c
   3c85c:	mov	r0, r4
   3c860:	mov	r1, #0
   3c864:	blx	r2
   3c868:	ldr	r1, [r4, #16]
   3c86c:	ldr	r0, [r4, #20]
   3c870:	sub	r6, r1, r0
   3c874:	cmp	r6, r5
   3c878:	bcs	3c8bc <flatcc_json_printer_int8_enum_vector_field@@Base+0x174>
   3c87c:	mov	r1, #32
   3c880:	mov	r2, r6
   3c884:	bl	14eec <memset@plt>
   3c888:	ldr	r0, [r4, #20]
   3c88c:	ldr	r2, [r4, #44]	; 0x2c
   3c890:	mov	r1, #0
   3c894:	add	r0, r0, r6
   3c898:	str	r0, [r4, #20]
   3c89c:	mov	r0, r4
   3c8a0:	blx	r2
   3c8a4:	ldr	r1, [r4, #16]
   3c8a8:	ldr	r0, [r4, #20]
   3c8ac:	sub	r5, r5, r6
   3c8b0:	sub	r6, r1, r0
   3c8b4:	cmp	r5, r6
   3c8b8:	bhi	3c87c <flatcc_json_printer_int8_enum_vector_field@@Base+0x134>
   3c8bc:	mov	r1, #32
   3c8c0:	mov	r2, r5
   3c8c4:	bl	14eec <memset@plt>
   3c8c8:	ldr	r0, [r4, #20]
   3c8cc:	add	r0, r0, r5
   3c8d0:	str	r0, [r4, #20]
   3c8d4:	b	3c8f4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ac>
   3c8d8:	ldr	r1, [r4, #16]
   3c8dc:	cmp	r0, r1
   3c8e0:	bcc	3c8f4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ac>
   3c8e4:	ldr	r2, [r4, #44]	; 0x2c
   3c8e8:	mov	r0, r4
   3c8ec:	mov	r1, #0
   3c8f0:	blx	r2
   3c8f4:	ldrsb	r1, [r8, #4]
   3c8f8:	mov	r0, r4
   3c8fc:	blx	sl
   3c900:	subs	r9, r9, #1
   3c904:	beq	3ca1c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d4>
   3c908:	add	r7, r8, #5
   3c90c:	mov	r8, #44	; 0x2c
   3c910:	ldr	r0, [r4, #20]
   3c914:	sub	r9, r9, #1
   3c918:	add	r1, r0, #1
   3c91c:	str	r1, [r4, #20]
   3c920:	strb	r8, [r0]
   3c924:	ldrb	r1, [r4, #25]
   3c928:	ldr	r0, [r4, #20]
   3c92c:	cmp	r1, #0
   3c930:	beq	3c9ec <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a4>
   3c934:	add	r1, r0, #1
   3c938:	str	r1, [r4, #20]
   3c93c:	mov	r1, #10
   3c940:	strb	r1, [r0]
   3c944:	ldr	r0, [r4, #20]
   3c948:	ldrb	r2, [r4, #25]
   3c94c:	ldr	r3, [r4, #32]
   3c950:	ldr	r1, [r4, #16]
   3c954:	mla	r6, r3, r2, r0
   3c958:	mul	r5, r3, r2
   3c95c:	cmp	r6, r1
   3c960:	bls	3c9d0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x288>
   3c964:	cmp	r0, r1
   3c968:	bcc	3c984 <flatcc_json_printer_int8_enum_vector_field@@Base+0x23c>
   3c96c:	ldr	r2, [r4, #44]	; 0x2c
   3c970:	mov	r0, r4
   3c974:	mov	r1, #0
   3c978:	blx	r2
   3c97c:	ldr	r1, [r4, #16]
   3c980:	ldr	r0, [r4, #20]
   3c984:	sub	r6, r1, r0
   3c988:	cmp	r6, r5
   3c98c:	bcs	3c9d0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x288>
   3c990:	mov	r1, #32
   3c994:	mov	r2, r6
   3c998:	bl	14eec <memset@plt>
   3c99c:	ldr	r0, [r4, #20]
   3c9a0:	ldr	r2, [r4, #44]	; 0x2c
   3c9a4:	mov	r1, #0
   3c9a8:	add	r0, r0, r6
   3c9ac:	str	r0, [r4, #20]
   3c9b0:	mov	r0, r4
   3c9b4:	blx	r2
   3c9b8:	ldr	r1, [r4, #16]
   3c9bc:	ldr	r0, [r4, #20]
   3c9c0:	sub	r5, r5, r6
   3c9c4:	sub	r6, r1, r0
   3c9c8:	cmp	r5, r6
   3c9cc:	bhi	3c990 <flatcc_json_printer_int8_enum_vector_field@@Base+0x248>
   3c9d0:	mov	r1, #32
   3c9d4:	mov	r2, r5
   3c9d8:	bl	14eec <memset@plt>
   3c9dc:	ldr	r0, [r4, #20]
   3c9e0:	add	r0, r0, r5
   3c9e4:	str	r0, [r4, #20]
   3c9e8:	b	3ca08 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c0>
   3c9ec:	ldr	r1, [r4, #16]
   3c9f0:	cmp	r0, r1
   3c9f4:	bcc	3ca08 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c0>
   3c9f8:	ldr	r2, [r4, #44]	; 0x2c
   3c9fc:	mov	r0, r4
   3ca00:	mov	r1, #0
   3ca04:	blx	r2
   3ca08:	ldrsb	r1, [r7], #1
   3ca0c:	mov	r0, r4
   3ca10:	blx	sl
   3ca14:	cmp	r9, #0
   3ca18:	bne	3c910 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1c8>
   3ca1c:	ldrb	r1, [r4, #25]
   3ca20:	ldr	r0, [r4, #20]
   3ca24:	cmp	r1, #0
   3ca28:	beq	3cae8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3a0>
   3ca2c:	add	r1, r0, #1
   3ca30:	str	r1, [r4, #20]
   3ca34:	mov	r1, #10
   3ca38:	strb	r1, [r0]
   3ca3c:	ldr	r0, [r4, #32]
   3ca40:	sub	r2, r0, #1
   3ca44:	str	r2, [r4, #32]
   3ca48:	ldrb	r3, [r4, #25]
   3ca4c:	ldr	r0, [r4, #20]
   3ca50:	ldr	r1, [r4, #16]
   3ca54:	mla	r7, r2, r3, r0
   3ca58:	mul	r5, r2, r3
   3ca5c:	cmp	r7, r1
   3ca60:	bls	3cad0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x388>
   3ca64:	cmp	r0, r1
   3ca68:	bcc	3ca84 <flatcc_json_printer_int8_enum_vector_field@@Base+0x33c>
   3ca6c:	ldr	r2, [r4, #44]	; 0x2c
   3ca70:	mov	r0, r4
   3ca74:	mov	r1, #0
   3ca78:	blx	r2
   3ca7c:	ldr	r1, [r4, #16]
   3ca80:	ldr	r0, [r4, #20]
   3ca84:	sub	r6, r1, r0
   3ca88:	cmp	r6, r5
   3ca8c:	bcs	3cad0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x388>
   3ca90:	mov	r1, #32
   3ca94:	mov	r2, r6
   3ca98:	bl	14eec <memset@plt>
   3ca9c:	ldr	r0, [r4, #20]
   3caa0:	ldr	r2, [r4, #44]	; 0x2c
   3caa4:	mov	r1, #0
   3caa8:	add	r0, r0, r6
   3caac:	str	r0, [r4, #20]
   3cab0:	mov	r0, r4
   3cab4:	blx	r2
   3cab8:	ldr	r1, [r4, #16]
   3cabc:	ldr	r0, [r4, #20]
   3cac0:	sub	r5, r5, r6
   3cac4:	sub	r6, r1, r0
   3cac8:	cmp	r5, r6
   3cacc:	bhi	3ca90 <flatcc_json_printer_int8_enum_vector_field@@Base+0x348>
   3cad0:	mov	r1, #32
   3cad4:	mov	r2, r5
   3cad8:	bl	14eec <memset@plt>
   3cadc:	ldr	r0, [r4, #20]
   3cae0:	add	r0, r0, r5
   3cae4:	str	r0, [r4, #20]
   3cae8:	add	r1, r0, #1
   3caec:	str	r1, [r4, #20]
   3caf0:	mov	r1, #93	; 0x5d
   3caf4:	strb	r1, [r0]
   3caf8:	sub	sp, fp, #28
   3cafc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003cb00 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   3cb00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cb04:	add	fp, sp, #28
   3cb08:	sub	sp, sp, #4
   3cb0c:	mov	r4, r0
   3cb10:	ldrb	r0, [r0, #27]
   3cb14:	cmp	r0, #0
   3cb18:	beq	3cb2c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   3cb1c:	mov	r0, r4
   3cb20:	sub	sp, fp, #28
   3cb24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cb28:	b	39d54 <flatcc_json_printer_int16_vector_field@@Base>
   3cb2c:	mov	r0, #4
   3cb30:	add	r0, r0, r2, lsl #1
   3cb34:	ldr	r2, [r1, #8]
   3cb38:	cmp	r0, r2
   3cb3c:	bge	3ceb0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3b0>
   3cb40:	ldr	r2, [r1, #4]
   3cb44:	add	r0, r2, r0
   3cb48:	ldrh	r0, [r0]
   3cb4c:	cmp	r0, #0
   3cb50:	ldrne	r2, [r1]
   3cb54:	addsne	r8, r2, r0
   3cb58:	beq	3ceb0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3b0>
   3cb5c:	ldr	r0, [r1, #16]
   3cb60:	ldr	sl, [fp, #12]
   3cb64:	ldr	r2, [fp, #8]
   3cb68:	add	r7, r0, #1
   3cb6c:	cmp	r0, #0
   3cb70:	str	r7, [r1, #16]
   3cb74:	beq	3cb8c <flatcc_json_printer_int16_enum_vector_field@@Base+0x8c>
   3cb78:	ldr	r0, [r4, #20]
   3cb7c:	add	r1, r0, #1
   3cb80:	str	r1, [r4, #20]
   3cb84:	mov	r1, #44	; 0x2c
   3cb88:	strb	r1, [r0]
   3cb8c:	ldr	r0, [r8]
   3cb90:	mov	r1, r3
   3cb94:	ldr	r9, [r8, r0]!
   3cb98:	mov	r0, r4
   3cb9c:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3cba0:	ldr	r1, [r4, #32]
   3cba4:	ldr	r0, [r4, #20]
   3cba8:	cmp	r9, #0
   3cbac:	add	r1, r1, #1
   3cbb0:	str	r1, [r4, #32]
   3cbb4:	add	r1, r0, #1
   3cbb8:	str	r1, [r4, #20]
   3cbbc:	mov	r1, #91	; 0x5b
   3cbc0:	strb	r1, [r0]
   3cbc4:	beq	3cdd4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d4>
   3cbc8:	ldrb	r1, [r4, #25]
   3cbcc:	ldr	r0, [r4, #20]
   3cbd0:	cmp	r1, #0
   3cbd4:	beq	3cc90 <flatcc_json_printer_int16_enum_vector_field@@Base+0x190>
   3cbd8:	add	r1, r0, #1
   3cbdc:	str	r1, [r4, #20]
   3cbe0:	mov	r1, #10
   3cbe4:	strb	r1, [r0]
   3cbe8:	ldr	r0, [r4, #20]
   3cbec:	ldrb	r2, [r4, #25]
   3cbf0:	ldr	r3, [r4, #32]
   3cbf4:	ldr	r1, [r4, #16]
   3cbf8:	mla	r7, r3, r2, r0
   3cbfc:	mul	r5, r3, r2
   3cc00:	cmp	r7, r1
   3cc04:	bls	3cc74 <flatcc_json_printer_int16_enum_vector_field@@Base+0x174>
   3cc08:	cmp	r0, r1
   3cc0c:	bcc	3cc28 <flatcc_json_printer_int16_enum_vector_field@@Base+0x128>
   3cc10:	ldr	r2, [r4, #44]	; 0x2c
   3cc14:	mov	r0, r4
   3cc18:	mov	r1, #0
   3cc1c:	blx	r2
   3cc20:	ldr	r1, [r4, #16]
   3cc24:	ldr	r0, [r4, #20]
   3cc28:	sub	r6, r1, r0
   3cc2c:	cmp	r6, r5
   3cc30:	bcs	3cc74 <flatcc_json_printer_int16_enum_vector_field@@Base+0x174>
   3cc34:	mov	r1, #32
   3cc38:	mov	r2, r6
   3cc3c:	bl	14eec <memset@plt>
   3cc40:	ldr	r0, [r4, #20]
   3cc44:	ldr	r2, [r4, #44]	; 0x2c
   3cc48:	mov	r1, #0
   3cc4c:	add	r0, r0, r6
   3cc50:	str	r0, [r4, #20]
   3cc54:	mov	r0, r4
   3cc58:	blx	r2
   3cc5c:	ldr	r1, [r4, #16]
   3cc60:	ldr	r0, [r4, #20]
   3cc64:	sub	r5, r5, r6
   3cc68:	sub	r6, r1, r0
   3cc6c:	cmp	r5, r6
   3cc70:	bhi	3cc34 <flatcc_json_printer_int16_enum_vector_field@@Base+0x134>
   3cc74:	mov	r1, #32
   3cc78:	mov	r2, r5
   3cc7c:	bl	14eec <memset@plt>
   3cc80:	ldr	r0, [r4, #20]
   3cc84:	add	r0, r0, r5
   3cc88:	str	r0, [r4, #20]
   3cc8c:	b	3ccac <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ac>
   3cc90:	ldr	r1, [r4, #16]
   3cc94:	cmp	r0, r1
   3cc98:	bcc	3ccac <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ac>
   3cc9c:	ldr	r2, [r4, #44]	; 0x2c
   3cca0:	mov	r0, r4
   3cca4:	mov	r1, #0
   3cca8:	blx	r2
   3ccac:	ldrsh	r1, [r8, #4]
   3ccb0:	mov	r0, r4
   3ccb4:	blx	sl
   3ccb8:	subs	r9, r9, #1
   3ccbc:	beq	3cdd4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d4>
   3ccc0:	add	r7, r8, #6
   3ccc4:	mov	r8, #44	; 0x2c
   3ccc8:	ldr	r0, [r4, #20]
   3cccc:	sub	r9, r9, #1
   3ccd0:	add	r1, r0, #1
   3ccd4:	str	r1, [r4, #20]
   3ccd8:	strb	r8, [r0]
   3ccdc:	ldrb	r1, [r4, #25]
   3cce0:	ldr	r0, [r4, #20]
   3cce4:	cmp	r1, #0
   3cce8:	beq	3cda4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a4>
   3ccec:	add	r1, r0, #1
   3ccf0:	str	r1, [r4, #20]
   3ccf4:	mov	r1, #10
   3ccf8:	strb	r1, [r0]
   3ccfc:	ldr	r0, [r4, #20]
   3cd00:	ldrb	r2, [r4, #25]
   3cd04:	ldr	r3, [r4, #32]
   3cd08:	ldr	r1, [r4, #16]
   3cd0c:	mla	r6, r3, r2, r0
   3cd10:	mul	r5, r3, r2
   3cd14:	cmp	r6, r1
   3cd18:	bls	3cd88 <flatcc_json_printer_int16_enum_vector_field@@Base+0x288>
   3cd1c:	cmp	r0, r1
   3cd20:	bcc	3cd3c <flatcc_json_printer_int16_enum_vector_field@@Base+0x23c>
   3cd24:	ldr	r2, [r4, #44]	; 0x2c
   3cd28:	mov	r0, r4
   3cd2c:	mov	r1, #0
   3cd30:	blx	r2
   3cd34:	ldr	r1, [r4, #16]
   3cd38:	ldr	r0, [r4, #20]
   3cd3c:	sub	r6, r1, r0
   3cd40:	cmp	r6, r5
   3cd44:	bcs	3cd88 <flatcc_json_printer_int16_enum_vector_field@@Base+0x288>
   3cd48:	mov	r1, #32
   3cd4c:	mov	r2, r6
   3cd50:	bl	14eec <memset@plt>
   3cd54:	ldr	r0, [r4, #20]
   3cd58:	ldr	r2, [r4, #44]	; 0x2c
   3cd5c:	mov	r1, #0
   3cd60:	add	r0, r0, r6
   3cd64:	str	r0, [r4, #20]
   3cd68:	mov	r0, r4
   3cd6c:	blx	r2
   3cd70:	ldr	r1, [r4, #16]
   3cd74:	ldr	r0, [r4, #20]
   3cd78:	sub	r5, r5, r6
   3cd7c:	sub	r6, r1, r0
   3cd80:	cmp	r5, r6
   3cd84:	bhi	3cd48 <flatcc_json_printer_int16_enum_vector_field@@Base+0x248>
   3cd88:	mov	r1, #32
   3cd8c:	mov	r2, r5
   3cd90:	bl	14eec <memset@plt>
   3cd94:	ldr	r0, [r4, #20]
   3cd98:	add	r0, r0, r5
   3cd9c:	str	r0, [r4, #20]
   3cda0:	b	3cdc0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c0>
   3cda4:	ldr	r1, [r4, #16]
   3cda8:	cmp	r0, r1
   3cdac:	bcc	3cdc0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c0>
   3cdb0:	ldr	r2, [r4, #44]	; 0x2c
   3cdb4:	mov	r0, r4
   3cdb8:	mov	r1, #0
   3cdbc:	blx	r2
   3cdc0:	ldrsh	r1, [r7], #2
   3cdc4:	mov	r0, r4
   3cdc8:	blx	sl
   3cdcc:	cmp	r9, #0
   3cdd0:	bne	3ccc8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c8>
   3cdd4:	ldrb	r1, [r4, #25]
   3cdd8:	ldr	r0, [r4, #20]
   3cddc:	cmp	r1, #0
   3cde0:	beq	3cea0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3a0>
   3cde4:	add	r1, r0, #1
   3cde8:	str	r1, [r4, #20]
   3cdec:	mov	r1, #10
   3cdf0:	strb	r1, [r0]
   3cdf4:	ldr	r0, [r4, #32]
   3cdf8:	sub	r2, r0, #1
   3cdfc:	str	r2, [r4, #32]
   3ce00:	ldrb	r3, [r4, #25]
   3ce04:	ldr	r0, [r4, #20]
   3ce08:	ldr	r1, [r4, #16]
   3ce0c:	mla	r7, r2, r3, r0
   3ce10:	mul	r5, r2, r3
   3ce14:	cmp	r7, r1
   3ce18:	bls	3ce88 <flatcc_json_printer_int16_enum_vector_field@@Base+0x388>
   3ce1c:	cmp	r0, r1
   3ce20:	bcc	3ce3c <flatcc_json_printer_int16_enum_vector_field@@Base+0x33c>
   3ce24:	ldr	r2, [r4, #44]	; 0x2c
   3ce28:	mov	r0, r4
   3ce2c:	mov	r1, #0
   3ce30:	blx	r2
   3ce34:	ldr	r1, [r4, #16]
   3ce38:	ldr	r0, [r4, #20]
   3ce3c:	sub	r6, r1, r0
   3ce40:	cmp	r6, r5
   3ce44:	bcs	3ce88 <flatcc_json_printer_int16_enum_vector_field@@Base+0x388>
   3ce48:	mov	r1, #32
   3ce4c:	mov	r2, r6
   3ce50:	bl	14eec <memset@plt>
   3ce54:	ldr	r0, [r4, #20]
   3ce58:	ldr	r2, [r4, #44]	; 0x2c
   3ce5c:	mov	r1, #0
   3ce60:	add	r0, r0, r6
   3ce64:	str	r0, [r4, #20]
   3ce68:	mov	r0, r4
   3ce6c:	blx	r2
   3ce70:	ldr	r1, [r4, #16]
   3ce74:	ldr	r0, [r4, #20]
   3ce78:	sub	r5, r5, r6
   3ce7c:	sub	r6, r1, r0
   3ce80:	cmp	r5, r6
   3ce84:	bhi	3ce48 <flatcc_json_printer_int16_enum_vector_field@@Base+0x348>
   3ce88:	mov	r1, #32
   3ce8c:	mov	r2, r5
   3ce90:	bl	14eec <memset@plt>
   3ce94:	ldr	r0, [r4, #20]
   3ce98:	add	r0, r0, r5
   3ce9c:	str	r0, [r4, #20]
   3cea0:	add	r1, r0, #1
   3cea4:	str	r1, [r4, #20]
   3cea8:	mov	r1, #93	; 0x5d
   3ceac:	strb	r1, [r0]
   3ceb0:	sub	sp, fp, #28
   3ceb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ceb8 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   3ceb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cebc:	add	fp, sp, #28
   3cec0:	sub	sp, sp, #4
   3cec4:	mov	r4, r0
   3cec8:	ldrb	r0, [r0, #27]
   3cecc:	cmp	r0, #0
   3ced0:	beq	3cee4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   3ced4:	mov	r0, r4
   3ced8:	sub	sp, fp, #28
   3cedc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cee0:	b	3a148 <flatcc_json_printer_int32_vector_field@@Base>
   3cee4:	mov	r0, #4
   3cee8:	add	r0, r0, r2, lsl #1
   3ceec:	ldr	r2, [r1, #8]
   3cef0:	cmp	r0, r2
   3cef4:	bge	3d268 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3b0>
   3cef8:	ldr	r2, [r1, #4]
   3cefc:	add	r0, r2, r0
   3cf00:	ldrh	r0, [r0]
   3cf04:	cmp	r0, #0
   3cf08:	ldrne	r2, [r1]
   3cf0c:	addsne	r8, r2, r0
   3cf10:	beq	3d268 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3b0>
   3cf14:	ldr	r0, [r1, #16]
   3cf18:	ldr	sl, [fp, #12]
   3cf1c:	ldr	r2, [fp, #8]
   3cf20:	add	r7, r0, #1
   3cf24:	cmp	r0, #0
   3cf28:	str	r7, [r1, #16]
   3cf2c:	beq	3cf44 <flatcc_json_printer_int32_enum_vector_field@@Base+0x8c>
   3cf30:	ldr	r0, [r4, #20]
   3cf34:	add	r1, r0, #1
   3cf38:	str	r1, [r4, #20]
   3cf3c:	mov	r1, #44	; 0x2c
   3cf40:	strb	r1, [r0]
   3cf44:	ldr	r0, [r8]
   3cf48:	mov	r1, r3
   3cf4c:	ldr	r9, [r8, r0]!
   3cf50:	mov	r0, r4
   3cf54:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3cf58:	ldr	r1, [r4, #32]
   3cf5c:	ldr	r0, [r4, #20]
   3cf60:	cmp	r9, #0
   3cf64:	add	r1, r1, #1
   3cf68:	str	r1, [r4, #32]
   3cf6c:	add	r1, r0, #1
   3cf70:	str	r1, [r4, #20]
   3cf74:	mov	r1, #91	; 0x5b
   3cf78:	strb	r1, [r0]
   3cf7c:	beq	3d18c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d4>
   3cf80:	ldrb	r1, [r4, #25]
   3cf84:	ldr	r0, [r4, #20]
   3cf88:	cmp	r1, #0
   3cf8c:	beq	3d048 <flatcc_json_printer_int32_enum_vector_field@@Base+0x190>
   3cf90:	add	r1, r0, #1
   3cf94:	str	r1, [r4, #20]
   3cf98:	mov	r1, #10
   3cf9c:	strb	r1, [r0]
   3cfa0:	ldr	r0, [r4, #20]
   3cfa4:	ldrb	r2, [r4, #25]
   3cfa8:	ldr	r3, [r4, #32]
   3cfac:	ldr	r1, [r4, #16]
   3cfb0:	mla	r7, r3, r2, r0
   3cfb4:	mul	r5, r3, r2
   3cfb8:	cmp	r7, r1
   3cfbc:	bls	3d02c <flatcc_json_printer_int32_enum_vector_field@@Base+0x174>
   3cfc0:	cmp	r0, r1
   3cfc4:	bcc	3cfe0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x128>
   3cfc8:	ldr	r2, [r4, #44]	; 0x2c
   3cfcc:	mov	r0, r4
   3cfd0:	mov	r1, #0
   3cfd4:	blx	r2
   3cfd8:	ldr	r1, [r4, #16]
   3cfdc:	ldr	r0, [r4, #20]
   3cfe0:	sub	r6, r1, r0
   3cfe4:	cmp	r6, r5
   3cfe8:	bcs	3d02c <flatcc_json_printer_int32_enum_vector_field@@Base+0x174>
   3cfec:	mov	r1, #32
   3cff0:	mov	r2, r6
   3cff4:	bl	14eec <memset@plt>
   3cff8:	ldr	r0, [r4, #20]
   3cffc:	ldr	r2, [r4, #44]	; 0x2c
   3d000:	mov	r1, #0
   3d004:	add	r0, r0, r6
   3d008:	str	r0, [r4, #20]
   3d00c:	mov	r0, r4
   3d010:	blx	r2
   3d014:	ldr	r1, [r4, #16]
   3d018:	ldr	r0, [r4, #20]
   3d01c:	sub	r5, r5, r6
   3d020:	sub	r6, r1, r0
   3d024:	cmp	r5, r6
   3d028:	bhi	3cfec <flatcc_json_printer_int32_enum_vector_field@@Base+0x134>
   3d02c:	mov	r1, #32
   3d030:	mov	r2, r5
   3d034:	bl	14eec <memset@plt>
   3d038:	ldr	r0, [r4, #20]
   3d03c:	add	r0, r0, r5
   3d040:	str	r0, [r4, #20]
   3d044:	b	3d064 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ac>
   3d048:	ldr	r1, [r4, #16]
   3d04c:	cmp	r0, r1
   3d050:	bcc	3d064 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ac>
   3d054:	ldr	r2, [r4, #44]	; 0x2c
   3d058:	mov	r0, r4
   3d05c:	mov	r1, #0
   3d060:	blx	r2
   3d064:	ldr	r1, [r8, #4]
   3d068:	mov	r0, r4
   3d06c:	blx	sl
   3d070:	subs	r9, r9, #1
   3d074:	beq	3d18c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d4>
   3d078:	add	r7, r8, #8
   3d07c:	mov	r8, #44	; 0x2c
   3d080:	ldr	r0, [r4, #20]
   3d084:	sub	r9, r9, #1
   3d088:	add	r1, r0, #1
   3d08c:	str	r1, [r4, #20]
   3d090:	strb	r8, [r0]
   3d094:	ldrb	r1, [r4, #25]
   3d098:	ldr	r0, [r4, #20]
   3d09c:	cmp	r1, #0
   3d0a0:	beq	3d15c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a4>
   3d0a4:	add	r1, r0, #1
   3d0a8:	str	r1, [r4, #20]
   3d0ac:	mov	r1, #10
   3d0b0:	strb	r1, [r0]
   3d0b4:	ldr	r0, [r4, #20]
   3d0b8:	ldrb	r2, [r4, #25]
   3d0bc:	ldr	r3, [r4, #32]
   3d0c0:	ldr	r1, [r4, #16]
   3d0c4:	mla	r6, r3, r2, r0
   3d0c8:	mul	r5, r3, r2
   3d0cc:	cmp	r6, r1
   3d0d0:	bls	3d140 <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   3d0d4:	cmp	r0, r1
   3d0d8:	bcc	3d0f4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x23c>
   3d0dc:	ldr	r2, [r4, #44]	; 0x2c
   3d0e0:	mov	r0, r4
   3d0e4:	mov	r1, #0
   3d0e8:	blx	r2
   3d0ec:	ldr	r1, [r4, #16]
   3d0f0:	ldr	r0, [r4, #20]
   3d0f4:	sub	r6, r1, r0
   3d0f8:	cmp	r6, r5
   3d0fc:	bcs	3d140 <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   3d100:	mov	r1, #32
   3d104:	mov	r2, r6
   3d108:	bl	14eec <memset@plt>
   3d10c:	ldr	r0, [r4, #20]
   3d110:	ldr	r2, [r4, #44]	; 0x2c
   3d114:	mov	r1, #0
   3d118:	add	r0, r0, r6
   3d11c:	str	r0, [r4, #20]
   3d120:	mov	r0, r4
   3d124:	blx	r2
   3d128:	ldr	r1, [r4, #16]
   3d12c:	ldr	r0, [r4, #20]
   3d130:	sub	r5, r5, r6
   3d134:	sub	r6, r1, r0
   3d138:	cmp	r5, r6
   3d13c:	bhi	3d100 <flatcc_json_printer_int32_enum_vector_field@@Base+0x248>
   3d140:	mov	r1, #32
   3d144:	mov	r2, r5
   3d148:	bl	14eec <memset@plt>
   3d14c:	ldr	r0, [r4, #20]
   3d150:	add	r0, r0, r5
   3d154:	str	r0, [r4, #20]
   3d158:	b	3d178 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c0>
   3d15c:	ldr	r1, [r4, #16]
   3d160:	cmp	r0, r1
   3d164:	bcc	3d178 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c0>
   3d168:	ldr	r2, [r4, #44]	; 0x2c
   3d16c:	mov	r0, r4
   3d170:	mov	r1, #0
   3d174:	blx	r2
   3d178:	ldr	r1, [r7], #4
   3d17c:	mov	r0, r4
   3d180:	blx	sl
   3d184:	cmp	r9, #0
   3d188:	bne	3d080 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c8>
   3d18c:	ldrb	r1, [r4, #25]
   3d190:	ldr	r0, [r4, #20]
   3d194:	cmp	r1, #0
   3d198:	beq	3d258 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3a0>
   3d19c:	add	r1, r0, #1
   3d1a0:	str	r1, [r4, #20]
   3d1a4:	mov	r1, #10
   3d1a8:	strb	r1, [r0]
   3d1ac:	ldr	r0, [r4, #32]
   3d1b0:	sub	r2, r0, #1
   3d1b4:	str	r2, [r4, #32]
   3d1b8:	ldrb	r3, [r4, #25]
   3d1bc:	ldr	r0, [r4, #20]
   3d1c0:	ldr	r1, [r4, #16]
   3d1c4:	mla	r7, r2, r3, r0
   3d1c8:	mul	r5, r2, r3
   3d1cc:	cmp	r7, r1
   3d1d0:	bls	3d240 <flatcc_json_printer_int32_enum_vector_field@@Base+0x388>
   3d1d4:	cmp	r0, r1
   3d1d8:	bcc	3d1f4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x33c>
   3d1dc:	ldr	r2, [r4, #44]	; 0x2c
   3d1e0:	mov	r0, r4
   3d1e4:	mov	r1, #0
   3d1e8:	blx	r2
   3d1ec:	ldr	r1, [r4, #16]
   3d1f0:	ldr	r0, [r4, #20]
   3d1f4:	sub	r6, r1, r0
   3d1f8:	cmp	r6, r5
   3d1fc:	bcs	3d240 <flatcc_json_printer_int32_enum_vector_field@@Base+0x388>
   3d200:	mov	r1, #32
   3d204:	mov	r2, r6
   3d208:	bl	14eec <memset@plt>
   3d20c:	ldr	r0, [r4, #20]
   3d210:	ldr	r2, [r4, #44]	; 0x2c
   3d214:	mov	r1, #0
   3d218:	add	r0, r0, r6
   3d21c:	str	r0, [r4, #20]
   3d220:	mov	r0, r4
   3d224:	blx	r2
   3d228:	ldr	r1, [r4, #16]
   3d22c:	ldr	r0, [r4, #20]
   3d230:	sub	r5, r5, r6
   3d234:	sub	r6, r1, r0
   3d238:	cmp	r5, r6
   3d23c:	bhi	3d200 <flatcc_json_printer_int32_enum_vector_field@@Base+0x348>
   3d240:	mov	r1, #32
   3d244:	mov	r2, r5
   3d248:	bl	14eec <memset@plt>
   3d24c:	ldr	r0, [r4, #20]
   3d250:	add	r0, r0, r5
   3d254:	str	r0, [r4, #20]
   3d258:	add	r1, r0, #1
   3d25c:	str	r1, [r4, #20]
   3d260:	mov	r1, #93	; 0x5d
   3d264:	strb	r1, [r0]
   3d268:	sub	sp, fp, #28
   3d26c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d270 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   3d270:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d274:	add	fp, sp, #28
   3d278:	sub	sp, sp, #4
   3d27c:	mov	r4, r0
   3d280:	ldrb	r0, [r0, #27]
   3d284:	cmp	r0, #0
   3d288:	beq	3d29c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   3d28c:	mov	r0, r4
   3d290:	sub	sp, fp, #28
   3d294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d298:	b	3a52c <flatcc_json_printer_int64_vector_field@@Base>
   3d29c:	mov	r0, #4
   3d2a0:	add	r0, r0, r2, lsl #1
   3d2a4:	ldr	r2, [r1, #8]
   3d2a8:	cmp	r0, r2
   3d2ac:	bge	3d624 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b4>
   3d2b0:	ldr	r2, [r1, #4]
   3d2b4:	add	r0, r2, r0
   3d2b8:	ldrh	r0, [r0]
   3d2bc:	cmp	r0, #0
   3d2c0:	ldrne	r2, [r1]
   3d2c4:	addsne	r8, r2, r0
   3d2c8:	beq	3d624 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b4>
   3d2cc:	ldr	r0, [r1, #16]
   3d2d0:	ldr	sl, [fp, #12]
   3d2d4:	ldr	r2, [fp, #8]
   3d2d8:	add	r7, r0, #1
   3d2dc:	cmp	r0, #0
   3d2e0:	str	r7, [r1, #16]
   3d2e4:	beq	3d2fc <flatcc_json_printer_int64_enum_vector_field@@Base+0x8c>
   3d2e8:	ldr	r0, [r4, #20]
   3d2ec:	add	r1, r0, #1
   3d2f0:	str	r1, [r4, #20]
   3d2f4:	mov	r1, #44	; 0x2c
   3d2f8:	strb	r1, [r0]
   3d2fc:	ldr	r0, [r8]
   3d300:	mov	r1, r3
   3d304:	ldr	r9, [r8, r0]!
   3d308:	mov	r0, r4
   3d30c:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3d310:	ldr	r1, [r4, #32]
   3d314:	ldr	r0, [r4, #20]
   3d318:	cmp	r9, #0
   3d31c:	add	r1, r1, #1
   3d320:	str	r1, [r4, #32]
   3d324:	add	r1, r0, #1
   3d328:	str	r1, [r4, #20]
   3d32c:	mov	r1, #91	; 0x5b
   3d330:	strb	r1, [r0]
   3d334:	beq	3d548 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2d8>
   3d338:	ldrb	r1, [r4, #25]
   3d33c:	ldr	r0, [r4, #20]
   3d340:	cmp	r1, #0
   3d344:	beq	3d400 <flatcc_json_printer_int64_enum_vector_field@@Base+0x190>
   3d348:	add	r1, r0, #1
   3d34c:	str	r1, [r4, #20]
   3d350:	mov	r1, #10
   3d354:	strb	r1, [r0]
   3d358:	ldr	r0, [r4, #20]
   3d35c:	ldrb	r2, [r4, #25]
   3d360:	ldr	r3, [r4, #32]
   3d364:	ldr	r1, [r4, #16]
   3d368:	mla	r7, r3, r2, r0
   3d36c:	mul	r5, r3, r2
   3d370:	cmp	r7, r1
   3d374:	bls	3d3e4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x174>
   3d378:	cmp	r0, r1
   3d37c:	bcc	3d398 <flatcc_json_printer_int64_enum_vector_field@@Base+0x128>
   3d380:	ldr	r2, [r4, #44]	; 0x2c
   3d384:	mov	r0, r4
   3d388:	mov	r1, #0
   3d38c:	blx	r2
   3d390:	ldr	r1, [r4, #16]
   3d394:	ldr	r0, [r4, #20]
   3d398:	sub	r6, r1, r0
   3d39c:	cmp	r6, r5
   3d3a0:	bcs	3d3e4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x174>
   3d3a4:	mov	r1, #32
   3d3a8:	mov	r2, r6
   3d3ac:	bl	14eec <memset@plt>
   3d3b0:	ldr	r0, [r4, #20]
   3d3b4:	ldr	r2, [r4, #44]	; 0x2c
   3d3b8:	mov	r1, #0
   3d3bc:	add	r0, r0, r6
   3d3c0:	str	r0, [r4, #20]
   3d3c4:	mov	r0, r4
   3d3c8:	blx	r2
   3d3cc:	ldr	r1, [r4, #16]
   3d3d0:	ldr	r0, [r4, #20]
   3d3d4:	sub	r5, r5, r6
   3d3d8:	sub	r6, r1, r0
   3d3dc:	cmp	r5, r6
   3d3e0:	bhi	3d3a4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x134>
   3d3e4:	mov	r1, #32
   3d3e8:	mov	r2, r5
   3d3ec:	bl	14eec <memset@plt>
   3d3f0:	ldr	r0, [r4, #20]
   3d3f4:	add	r0, r0, r5
   3d3f8:	str	r0, [r4, #20]
   3d3fc:	b	3d41c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ac>
   3d400:	ldr	r1, [r4, #16]
   3d404:	cmp	r0, r1
   3d408:	bcc	3d41c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ac>
   3d40c:	ldr	r2, [r4, #44]	; 0x2c
   3d410:	mov	r0, r4
   3d414:	mov	r1, #0
   3d418:	blx	r2
   3d41c:	ldrd	r2, [r8, #4]
   3d420:	mov	r0, r4
   3d424:	blx	sl
   3d428:	subs	r9, r9, #1
   3d42c:	beq	3d548 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2d8>
   3d430:	add	r7, r8, #12
   3d434:	mov	r8, #44	; 0x2c
   3d438:	ldr	r0, [r4, #20]
   3d43c:	sub	r9, r9, #1
   3d440:	add	r1, r0, #1
   3d444:	str	r1, [r4, #20]
   3d448:	strb	r8, [r0]
   3d44c:	ldrb	r1, [r4, #25]
   3d450:	ldr	r0, [r4, #20]
   3d454:	cmp	r1, #0
   3d458:	beq	3d514 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a4>
   3d45c:	add	r1, r0, #1
   3d460:	str	r1, [r4, #20]
   3d464:	mov	r1, #10
   3d468:	strb	r1, [r0]
   3d46c:	ldr	r0, [r4, #20]
   3d470:	ldrb	r2, [r4, #25]
   3d474:	ldr	r3, [r4, #32]
   3d478:	ldr	r1, [r4, #16]
   3d47c:	mla	r6, r3, r2, r0
   3d480:	mul	r5, r3, r2
   3d484:	cmp	r6, r1
   3d488:	bls	3d4f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   3d48c:	cmp	r0, r1
   3d490:	bcc	3d4ac <flatcc_json_printer_int64_enum_vector_field@@Base+0x23c>
   3d494:	ldr	r2, [r4, #44]	; 0x2c
   3d498:	mov	r0, r4
   3d49c:	mov	r1, #0
   3d4a0:	blx	r2
   3d4a4:	ldr	r1, [r4, #16]
   3d4a8:	ldr	r0, [r4, #20]
   3d4ac:	sub	r6, r1, r0
   3d4b0:	cmp	r6, r5
   3d4b4:	bcs	3d4f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   3d4b8:	mov	r1, #32
   3d4bc:	mov	r2, r6
   3d4c0:	bl	14eec <memset@plt>
   3d4c4:	ldr	r0, [r4, #20]
   3d4c8:	ldr	r2, [r4, #44]	; 0x2c
   3d4cc:	mov	r1, #0
   3d4d0:	add	r0, r0, r6
   3d4d4:	str	r0, [r4, #20]
   3d4d8:	mov	r0, r4
   3d4dc:	blx	r2
   3d4e0:	ldr	r1, [r4, #16]
   3d4e4:	ldr	r0, [r4, #20]
   3d4e8:	sub	r5, r5, r6
   3d4ec:	sub	r6, r1, r0
   3d4f0:	cmp	r5, r6
   3d4f4:	bhi	3d4b8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x248>
   3d4f8:	mov	r1, #32
   3d4fc:	mov	r2, r5
   3d500:	bl	14eec <memset@plt>
   3d504:	ldr	r0, [r4, #20]
   3d508:	add	r0, r0, r5
   3d50c:	str	r0, [r4, #20]
   3d510:	b	3d530 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c0>
   3d514:	ldr	r1, [r4, #16]
   3d518:	cmp	r0, r1
   3d51c:	bcc	3d530 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c0>
   3d520:	ldr	r2, [r4, #44]	; 0x2c
   3d524:	mov	r0, r4
   3d528:	mov	r1, #0
   3d52c:	blx	r2
   3d530:	ldrd	r2, [r7]
   3d534:	mov	r0, r4
   3d538:	blx	sl
   3d53c:	add	r7, r7, #8
   3d540:	cmp	r9, #0
   3d544:	bne	3d438 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c8>
   3d548:	ldrb	r1, [r4, #25]
   3d54c:	ldr	r0, [r4, #20]
   3d550:	cmp	r1, #0
   3d554:	beq	3d614 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3a4>
   3d558:	add	r1, r0, #1
   3d55c:	str	r1, [r4, #20]
   3d560:	mov	r1, #10
   3d564:	strb	r1, [r0]
   3d568:	ldr	r0, [r4, #32]
   3d56c:	sub	r2, r0, #1
   3d570:	str	r2, [r4, #32]
   3d574:	ldrb	r3, [r4, #25]
   3d578:	ldr	r0, [r4, #20]
   3d57c:	ldr	r1, [r4, #16]
   3d580:	mla	r7, r2, r3, r0
   3d584:	mul	r5, r2, r3
   3d588:	cmp	r7, r1
   3d58c:	bls	3d5fc <flatcc_json_printer_int64_enum_vector_field@@Base+0x38c>
   3d590:	cmp	r0, r1
   3d594:	bcc	3d5b0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x340>
   3d598:	ldr	r2, [r4, #44]	; 0x2c
   3d59c:	mov	r0, r4
   3d5a0:	mov	r1, #0
   3d5a4:	blx	r2
   3d5a8:	ldr	r1, [r4, #16]
   3d5ac:	ldr	r0, [r4, #20]
   3d5b0:	sub	r6, r1, r0
   3d5b4:	cmp	r6, r5
   3d5b8:	bcs	3d5fc <flatcc_json_printer_int64_enum_vector_field@@Base+0x38c>
   3d5bc:	mov	r1, #32
   3d5c0:	mov	r2, r6
   3d5c4:	bl	14eec <memset@plt>
   3d5c8:	ldr	r0, [r4, #20]
   3d5cc:	ldr	r2, [r4, #44]	; 0x2c
   3d5d0:	mov	r1, #0
   3d5d4:	add	r0, r0, r6
   3d5d8:	str	r0, [r4, #20]
   3d5dc:	mov	r0, r4
   3d5e0:	blx	r2
   3d5e4:	ldr	r1, [r4, #16]
   3d5e8:	ldr	r0, [r4, #20]
   3d5ec:	sub	r5, r5, r6
   3d5f0:	sub	r6, r1, r0
   3d5f4:	cmp	r5, r6
   3d5f8:	bhi	3d5bc <flatcc_json_printer_int64_enum_vector_field@@Base+0x34c>
   3d5fc:	mov	r1, #32
   3d600:	mov	r2, r5
   3d604:	bl	14eec <memset@plt>
   3d608:	ldr	r0, [r4, #20]
   3d60c:	add	r0, r0, r5
   3d610:	str	r0, [r4, #20]
   3d614:	add	r1, r0, #1
   3d618:	str	r1, [r4, #20]
   3d61c:	mov	r1, #93	; 0x5d
   3d620:	strb	r1, [r0]
   3d624:	sub	sp, fp, #28
   3d628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d62c <flatcc_json_printer_bool_enum_vector_field@@Base>:
   3d62c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d630:	add	fp, sp, #28
   3d634:	sub	sp, sp, #4
   3d638:	mov	r4, r0
   3d63c:	ldrb	r0, [r0, #27]
   3d640:	cmp	r0, #0
   3d644:	beq	3d658 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   3d648:	mov	r0, r4
   3d64c:	sub	sp, fp, #28
   3d650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d654:	b	3a920 <flatcc_json_printer_bool_vector_field@@Base>
   3d658:	mov	r0, #4
   3d65c:	add	r0, r0, r2, lsl #1
   3d660:	ldr	r2, [r1, #8]
   3d664:	cmp	r0, r2
   3d668:	bge	3d9dc <flatcc_json_printer_bool_enum_vector_field@@Base+0x3b0>
   3d66c:	ldr	r2, [r1, #4]
   3d670:	add	r0, r2, r0
   3d674:	ldrh	r0, [r0]
   3d678:	cmp	r0, #0
   3d67c:	ldrne	r2, [r1]
   3d680:	addsne	r8, r2, r0
   3d684:	beq	3d9dc <flatcc_json_printer_bool_enum_vector_field@@Base+0x3b0>
   3d688:	ldr	r0, [r1, #16]
   3d68c:	ldr	sl, [fp, #12]
   3d690:	ldr	r2, [fp, #8]
   3d694:	add	r7, r0, #1
   3d698:	cmp	r0, #0
   3d69c:	str	r7, [r1, #16]
   3d6a0:	beq	3d6b8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x8c>
   3d6a4:	ldr	r0, [r4, #20]
   3d6a8:	add	r1, r0, #1
   3d6ac:	str	r1, [r4, #20]
   3d6b0:	mov	r1, #44	; 0x2c
   3d6b4:	strb	r1, [r0]
   3d6b8:	ldr	r0, [r8]
   3d6bc:	mov	r1, r3
   3d6c0:	ldr	r9, [r8, r0]!
   3d6c4:	mov	r0, r4
   3d6c8:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3d6cc:	ldr	r1, [r4, #32]
   3d6d0:	ldr	r0, [r4, #20]
   3d6d4:	cmp	r9, #0
   3d6d8:	add	r1, r1, #1
   3d6dc:	str	r1, [r4, #32]
   3d6e0:	add	r1, r0, #1
   3d6e4:	str	r1, [r4, #20]
   3d6e8:	mov	r1, #91	; 0x5b
   3d6ec:	strb	r1, [r0]
   3d6f0:	beq	3d900 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d4>
   3d6f4:	ldrb	r1, [r4, #25]
   3d6f8:	ldr	r0, [r4, #20]
   3d6fc:	cmp	r1, #0
   3d700:	beq	3d7bc <flatcc_json_printer_bool_enum_vector_field@@Base+0x190>
   3d704:	add	r1, r0, #1
   3d708:	str	r1, [r4, #20]
   3d70c:	mov	r1, #10
   3d710:	strb	r1, [r0]
   3d714:	ldr	r0, [r4, #20]
   3d718:	ldrb	r2, [r4, #25]
   3d71c:	ldr	r3, [r4, #32]
   3d720:	ldr	r1, [r4, #16]
   3d724:	mla	r7, r3, r2, r0
   3d728:	mul	r5, r3, r2
   3d72c:	cmp	r7, r1
   3d730:	bls	3d7a0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x174>
   3d734:	cmp	r0, r1
   3d738:	bcc	3d754 <flatcc_json_printer_bool_enum_vector_field@@Base+0x128>
   3d73c:	ldr	r2, [r4, #44]	; 0x2c
   3d740:	mov	r0, r4
   3d744:	mov	r1, #0
   3d748:	blx	r2
   3d74c:	ldr	r1, [r4, #16]
   3d750:	ldr	r0, [r4, #20]
   3d754:	sub	r6, r1, r0
   3d758:	cmp	r6, r5
   3d75c:	bcs	3d7a0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x174>
   3d760:	mov	r1, #32
   3d764:	mov	r2, r6
   3d768:	bl	14eec <memset@plt>
   3d76c:	ldr	r0, [r4, #20]
   3d770:	ldr	r2, [r4, #44]	; 0x2c
   3d774:	mov	r1, #0
   3d778:	add	r0, r0, r6
   3d77c:	str	r0, [r4, #20]
   3d780:	mov	r0, r4
   3d784:	blx	r2
   3d788:	ldr	r1, [r4, #16]
   3d78c:	ldr	r0, [r4, #20]
   3d790:	sub	r5, r5, r6
   3d794:	sub	r6, r1, r0
   3d798:	cmp	r5, r6
   3d79c:	bhi	3d760 <flatcc_json_printer_bool_enum_vector_field@@Base+0x134>
   3d7a0:	mov	r1, #32
   3d7a4:	mov	r2, r5
   3d7a8:	bl	14eec <memset@plt>
   3d7ac:	ldr	r0, [r4, #20]
   3d7b0:	add	r0, r0, r5
   3d7b4:	str	r0, [r4, #20]
   3d7b8:	b	3d7d8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ac>
   3d7bc:	ldr	r1, [r4, #16]
   3d7c0:	cmp	r0, r1
   3d7c4:	bcc	3d7d8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ac>
   3d7c8:	ldr	r2, [r4, #44]	; 0x2c
   3d7cc:	mov	r0, r4
   3d7d0:	mov	r1, #0
   3d7d4:	blx	r2
   3d7d8:	ldrb	r1, [r8, #4]
   3d7dc:	mov	r0, r4
   3d7e0:	blx	sl
   3d7e4:	subs	r9, r9, #1
   3d7e8:	beq	3d900 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d4>
   3d7ec:	add	r7, r8, #5
   3d7f0:	mov	r8, #44	; 0x2c
   3d7f4:	ldr	r0, [r4, #20]
   3d7f8:	sub	r9, r9, #1
   3d7fc:	add	r1, r0, #1
   3d800:	str	r1, [r4, #20]
   3d804:	strb	r8, [r0]
   3d808:	ldrb	r1, [r4, #25]
   3d80c:	ldr	r0, [r4, #20]
   3d810:	cmp	r1, #0
   3d814:	beq	3d8d0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a4>
   3d818:	add	r1, r0, #1
   3d81c:	str	r1, [r4, #20]
   3d820:	mov	r1, #10
   3d824:	strb	r1, [r0]
   3d828:	ldr	r0, [r4, #20]
   3d82c:	ldrb	r2, [r4, #25]
   3d830:	ldr	r3, [r4, #32]
   3d834:	ldr	r1, [r4, #16]
   3d838:	mla	r6, r3, r2, r0
   3d83c:	mul	r5, r3, r2
   3d840:	cmp	r6, r1
   3d844:	bls	3d8b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x288>
   3d848:	cmp	r0, r1
   3d84c:	bcc	3d868 <flatcc_json_printer_bool_enum_vector_field@@Base+0x23c>
   3d850:	ldr	r2, [r4, #44]	; 0x2c
   3d854:	mov	r0, r4
   3d858:	mov	r1, #0
   3d85c:	blx	r2
   3d860:	ldr	r1, [r4, #16]
   3d864:	ldr	r0, [r4, #20]
   3d868:	sub	r6, r1, r0
   3d86c:	cmp	r6, r5
   3d870:	bcs	3d8b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x288>
   3d874:	mov	r1, #32
   3d878:	mov	r2, r6
   3d87c:	bl	14eec <memset@plt>
   3d880:	ldr	r0, [r4, #20]
   3d884:	ldr	r2, [r4, #44]	; 0x2c
   3d888:	mov	r1, #0
   3d88c:	add	r0, r0, r6
   3d890:	str	r0, [r4, #20]
   3d894:	mov	r0, r4
   3d898:	blx	r2
   3d89c:	ldr	r1, [r4, #16]
   3d8a0:	ldr	r0, [r4, #20]
   3d8a4:	sub	r5, r5, r6
   3d8a8:	sub	r6, r1, r0
   3d8ac:	cmp	r5, r6
   3d8b0:	bhi	3d874 <flatcc_json_printer_bool_enum_vector_field@@Base+0x248>
   3d8b4:	mov	r1, #32
   3d8b8:	mov	r2, r5
   3d8bc:	bl	14eec <memset@plt>
   3d8c0:	ldr	r0, [r4, #20]
   3d8c4:	add	r0, r0, r5
   3d8c8:	str	r0, [r4, #20]
   3d8cc:	b	3d8ec <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c0>
   3d8d0:	ldr	r1, [r4, #16]
   3d8d4:	cmp	r0, r1
   3d8d8:	bcc	3d8ec <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c0>
   3d8dc:	ldr	r2, [r4, #44]	; 0x2c
   3d8e0:	mov	r0, r4
   3d8e4:	mov	r1, #0
   3d8e8:	blx	r2
   3d8ec:	ldrb	r1, [r7], #1
   3d8f0:	mov	r0, r4
   3d8f4:	blx	sl
   3d8f8:	cmp	r9, #0
   3d8fc:	bne	3d7f4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1c8>
   3d900:	ldrb	r1, [r4, #25]
   3d904:	ldr	r0, [r4, #20]
   3d908:	cmp	r1, #0
   3d90c:	beq	3d9cc <flatcc_json_printer_bool_enum_vector_field@@Base+0x3a0>
   3d910:	add	r1, r0, #1
   3d914:	str	r1, [r4, #20]
   3d918:	mov	r1, #10
   3d91c:	strb	r1, [r0]
   3d920:	ldr	r0, [r4, #32]
   3d924:	sub	r2, r0, #1
   3d928:	str	r2, [r4, #32]
   3d92c:	ldrb	r3, [r4, #25]
   3d930:	ldr	r0, [r4, #20]
   3d934:	ldr	r1, [r4, #16]
   3d938:	mla	r7, r2, r3, r0
   3d93c:	mul	r5, r2, r3
   3d940:	cmp	r7, r1
   3d944:	bls	3d9b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x388>
   3d948:	cmp	r0, r1
   3d94c:	bcc	3d968 <flatcc_json_printer_bool_enum_vector_field@@Base+0x33c>
   3d950:	ldr	r2, [r4, #44]	; 0x2c
   3d954:	mov	r0, r4
   3d958:	mov	r1, #0
   3d95c:	blx	r2
   3d960:	ldr	r1, [r4, #16]
   3d964:	ldr	r0, [r4, #20]
   3d968:	sub	r6, r1, r0
   3d96c:	cmp	r6, r5
   3d970:	bcs	3d9b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x388>
   3d974:	mov	r1, #32
   3d978:	mov	r2, r6
   3d97c:	bl	14eec <memset@plt>
   3d980:	ldr	r0, [r4, #20]
   3d984:	ldr	r2, [r4, #44]	; 0x2c
   3d988:	mov	r1, #0
   3d98c:	add	r0, r0, r6
   3d990:	str	r0, [r4, #20]
   3d994:	mov	r0, r4
   3d998:	blx	r2
   3d99c:	ldr	r1, [r4, #16]
   3d9a0:	ldr	r0, [r4, #20]
   3d9a4:	sub	r5, r5, r6
   3d9a8:	sub	r6, r1, r0
   3d9ac:	cmp	r5, r6
   3d9b0:	bhi	3d974 <flatcc_json_printer_bool_enum_vector_field@@Base+0x348>
   3d9b4:	mov	r1, #32
   3d9b8:	mov	r2, r5
   3d9bc:	bl	14eec <memset@plt>
   3d9c0:	ldr	r0, [r4, #20]
   3d9c4:	add	r0, r0, r5
   3d9c8:	str	r0, [r4, #20]
   3d9cc:	add	r1, r0, #1
   3d9d0:	str	r1, [r4, #20]
   3d9d4:	mov	r1, #93	; 0x5d
   3d9d8:	strb	r1, [r0]
   3d9dc:	sub	sp, fp, #28
   3d9e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d9e4 <flatcc_json_printer_struct_vector_field@@Base>:
   3d9e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d9e8:	add	fp, sp, #28
   3d9ec:	sub	sp, sp, #4
   3d9f0:	mov	r4, r0
   3d9f4:	mov	r0, #4
   3d9f8:	add	r0, r0, r2, lsl #1
   3d9fc:	ldr	r2, [r1, #8]
   3da00:	cmp	r0, r2
   3da04:	bge	3df74 <flatcc_json_printer_struct_vector_field@@Base+0x590>
   3da08:	ldr	r2, [r1, #4]
   3da0c:	add	r0, r2, r0
   3da10:	ldrh	r0, [r0]
   3da14:	cmp	r0, #0
   3da18:	ldrne	r2, [r1]
   3da1c:	addsne	r6, r2, r0
   3da20:	beq	3df74 <flatcc_json_printer_struct_vector_field@@Base+0x590>
   3da24:	ldr	r0, [r1, #16]
   3da28:	ldr	r2, [fp, #8]
   3da2c:	add	r7, r0, #1
   3da30:	cmp	r0, #0
   3da34:	str	r7, [r1, #16]
   3da38:	beq	3da50 <flatcc_json_printer_struct_vector_field@@Base+0x6c>
   3da3c:	ldr	r0, [r4, #20]
   3da40:	add	r1, r0, #1
   3da44:	str	r1, [r4, #20]
   3da48:	mov	r1, #44	; 0x2c
   3da4c:	strb	r1, [r0]
   3da50:	ldr	r0, [r6]
   3da54:	mov	r1, r3
   3da58:	ldr	r5, [r6, r0]!
   3da5c:	mov	r0, r4
   3da60:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3da64:	ldr	r1, [r4, #32]
   3da68:	ldr	r0, [r4, #20]
   3da6c:	cmp	r5, #0
   3da70:	add	r1, r1, #1
   3da74:	str	r1, [r4, #32]
   3da78:	add	r1, r0, #1
   3da7c:	str	r1, [r4, #20]
   3da80:	mov	r1, #91	; 0x5b
   3da84:	strb	r1, [r0]
   3da88:	beq	3de98 <flatcc_json_printer_struct_vector_field@@Base+0x4b4>
   3da8c:	ldrb	r1, [r4, #25]
   3da90:	ldr	r0, [r4, #20]
   3da94:	add	r9, r6, #4
   3da98:	cmp	r1, #0
   3da9c:	beq	3db58 <flatcc_json_printer_struct_vector_field@@Base+0x174>
   3daa0:	add	r1, r0, #1
   3daa4:	str	r1, [r4, #20]
   3daa8:	mov	r1, #10
   3daac:	strb	r1, [r0]
   3dab0:	ldr	r0, [r4, #20]
   3dab4:	ldrb	r2, [r4, #25]
   3dab8:	ldr	r3, [r4, #32]
   3dabc:	ldr	r1, [r4, #16]
   3dac0:	mla	r7, r3, r2, r0
   3dac4:	mul	r6, r3, r2
   3dac8:	cmp	r7, r1
   3dacc:	bls	3db3c <flatcc_json_printer_struct_vector_field@@Base+0x158>
   3dad0:	cmp	r0, r1
   3dad4:	bcc	3daf0 <flatcc_json_printer_struct_vector_field@@Base+0x10c>
   3dad8:	ldr	r2, [r4, #44]	; 0x2c
   3dadc:	mov	r0, r4
   3dae0:	mov	r1, #0
   3dae4:	blx	r2
   3dae8:	ldr	r1, [r4, #16]
   3daec:	ldr	r0, [r4, #20]
   3daf0:	sub	r7, r1, r0
   3daf4:	cmp	r7, r6
   3daf8:	bcs	3db3c <flatcc_json_printer_struct_vector_field@@Base+0x158>
   3dafc:	mov	r1, #32
   3db00:	mov	r2, r7
   3db04:	bl	14eec <memset@plt>
   3db08:	ldr	r0, [r4, #20]
   3db0c:	ldr	r2, [r4, #44]	; 0x2c
   3db10:	mov	r1, #0
   3db14:	add	r0, r0, r7
   3db18:	str	r0, [r4, #20]
   3db1c:	mov	r0, r4
   3db20:	blx	r2
   3db24:	ldr	r1, [r4, #16]
   3db28:	ldr	r0, [r4, #20]
   3db2c:	sub	r6, r6, r7
   3db30:	sub	r7, r1, r0
   3db34:	cmp	r6, r7
   3db38:	bhi	3dafc <flatcc_json_printer_struct_vector_field@@Base+0x118>
   3db3c:	mov	r1, #32
   3db40:	mov	r2, r6
   3db44:	bl	14eec <memset@plt>
   3db48:	ldr	r0, [r4, #20]
   3db4c:	add	r0, r0, r6
   3db50:	str	r0, [r4, #20]
   3db54:	b	3db78 <flatcc_json_printer_struct_vector_field@@Base+0x194>
   3db58:	ldr	r1, [r4, #16]
   3db5c:	cmp	r0, r1
   3db60:	bcc	3db78 <flatcc_json_printer_struct_vector_field@@Base+0x194>
   3db64:	ldr	r2, [r4, #44]	; 0x2c
   3db68:	mov	r0, r4
   3db6c:	mov	r1, #0
   3db70:	blx	r2
   3db74:	ldr	r0, [r4, #20]
   3db78:	add	r1, r0, #1
   3db7c:	ldr	r2, [fp, #16]
   3db80:	str	r1, [r4, #20]
   3db84:	ldr	r1, [r4, #32]
   3db88:	add	r1, r1, #1
   3db8c:	str	r1, [r4, #32]
   3db90:	mov	r1, #123	; 0x7b
   3db94:	strb	r1, [r0]
   3db98:	mov	r0, r4
   3db9c:	mov	r1, r9
   3dba0:	blx	r2
   3dba4:	ldrb	r1, [r4, #25]
   3dba8:	ldr	r0, [r4, #20]
   3dbac:	cmp	r1, #0
   3dbb0:	beq	3dc70 <flatcc_json_printer_struct_vector_field@@Base+0x28c>
   3dbb4:	add	r1, r0, #1
   3dbb8:	str	r1, [r4, #20]
   3dbbc:	mov	r1, #10
   3dbc0:	strb	r1, [r0]
   3dbc4:	ldr	r0, [r4, #32]
   3dbc8:	sub	r2, r0, #1
   3dbcc:	str	r2, [r4, #32]
   3dbd0:	ldrb	r3, [r4, #25]
   3dbd4:	ldr	r0, [r4, #20]
   3dbd8:	ldr	r1, [r4, #16]
   3dbdc:	mla	r7, r2, r3, r0
   3dbe0:	mul	r6, r2, r3
   3dbe4:	cmp	r7, r1
   3dbe8:	bls	3dc58 <flatcc_json_printer_struct_vector_field@@Base+0x274>
   3dbec:	cmp	r0, r1
   3dbf0:	bcc	3dc0c <flatcc_json_printer_struct_vector_field@@Base+0x228>
   3dbf4:	ldr	r2, [r4, #44]	; 0x2c
   3dbf8:	mov	r0, r4
   3dbfc:	mov	r1, #0
   3dc00:	blx	r2
   3dc04:	ldr	r1, [r4, #16]
   3dc08:	ldr	r0, [r4, #20]
   3dc0c:	sub	r7, r1, r0
   3dc10:	cmp	r7, r6
   3dc14:	bcs	3dc58 <flatcc_json_printer_struct_vector_field@@Base+0x274>
   3dc18:	mov	r1, #32
   3dc1c:	mov	r2, r7
   3dc20:	bl	14eec <memset@plt>
   3dc24:	ldr	r0, [r4, #20]
   3dc28:	ldr	r2, [r4, #44]	; 0x2c
   3dc2c:	mov	r1, #0
   3dc30:	add	r0, r0, r7
   3dc34:	str	r0, [r4, #20]
   3dc38:	mov	r0, r4
   3dc3c:	blx	r2
   3dc40:	ldr	r1, [r4, #16]
   3dc44:	ldr	r0, [r4, #20]
   3dc48:	sub	r6, r6, r7
   3dc4c:	sub	r7, r1, r0
   3dc50:	cmp	r6, r7
   3dc54:	bhi	3dc18 <flatcc_json_printer_struct_vector_field@@Base+0x234>
   3dc58:	mov	r1, #32
   3dc5c:	mov	r2, r6
   3dc60:	bl	14eec <memset@plt>
   3dc64:	ldr	r0, [r4, #20]
   3dc68:	add	r0, r0, r6
   3dc6c:	str	r0, [r4, #20]
   3dc70:	add	r1, r0, #1
   3dc74:	mov	sl, #125	; 0x7d
   3dc78:	subs	r5, r5, #1
   3dc7c:	str	r1, [r4, #20]
   3dc80:	strb	sl, [r0]
   3dc84:	beq	3de98 <flatcc_json_printer_struct_vector_field@@Base+0x4b4>
   3dc88:	mov	r8, #10
   3dc8c:	ldr	r0, [r4, #20]
   3dc90:	add	r1, r0, #1
   3dc94:	str	r1, [r4, #20]
   3dc98:	mov	r1, #44	; 0x2c
   3dc9c:	strb	r1, [r0]
   3dca0:	ldr	r0, [fp, #12]
   3dca4:	ldrb	r1, [r4, #25]
   3dca8:	add	r9, r9, r0
   3dcac:	ldr	r0, [r4, #20]
   3dcb0:	cmp	r1, #0
   3dcb4:	beq	3dd6c <flatcc_json_printer_struct_vector_field@@Base+0x388>
   3dcb8:	add	r1, r0, #1
   3dcbc:	str	r1, [r4, #20]
   3dcc0:	strb	r8, [r0]
   3dcc4:	ldr	r0, [r4, #20]
   3dcc8:	ldrb	r2, [r4, #25]
   3dccc:	ldr	r3, [r4, #32]
   3dcd0:	ldr	r1, [r4, #16]
   3dcd4:	mla	r7, r3, r2, r0
   3dcd8:	mul	r6, r3, r2
   3dcdc:	cmp	r7, r1
   3dce0:	bls	3dd50 <flatcc_json_printer_struct_vector_field@@Base+0x36c>
   3dce4:	cmp	r0, r1
   3dce8:	bcc	3dd04 <flatcc_json_printer_struct_vector_field@@Base+0x320>
   3dcec:	ldr	r2, [r4, #44]	; 0x2c
   3dcf0:	mov	r0, r4
   3dcf4:	mov	r1, #0
   3dcf8:	blx	r2
   3dcfc:	ldr	r1, [r4, #16]
   3dd00:	ldr	r0, [r4, #20]
   3dd04:	sub	r7, r1, r0
   3dd08:	cmp	r7, r6
   3dd0c:	bcs	3dd50 <flatcc_json_printer_struct_vector_field@@Base+0x36c>
   3dd10:	mov	r1, #32
   3dd14:	mov	r2, r7
   3dd18:	bl	14eec <memset@plt>
   3dd1c:	ldr	r0, [r4, #20]
   3dd20:	ldr	r2, [r4, #44]	; 0x2c
   3dd24:	mov	r1, #0
   3dd28:	add	r0, r0, r7
   3dd2c:	str	r0, [r4, #20]
   3dd30:	mov	r0, r4
   3dd34:	blx	r2
   3dd38:	ldr	r1, [r4, #16]
   3dd3c:	ldr	r0, [r4, #20]
   3dd40:	sub	r6, r6, r7
   3dd44:	sub	r7, r1, r0
   3dd48:	cmp	r6, r7
   3dd4c:	bhi	3dd10 <flatcc_json_printer_struct_vector_field@@Base+0x32c>
   3dd50:	mov	r1, #32
   3dd54:	mov	r2, r6
   3dd58:	bl	14eec <memset@plt>
   3dd5c:	ldr	r0, [r4, #20]
   3dd60:	add	r0, r0, r6
   3dd64:	str	r0, [r4, #20]
   3dd68:	b	3dd8c <flatcc_json_printer_struct_vector_field@@Base+0x3a8>
   3dd6c:	ldr	r1, [r4, #16]
   3dd70:	cmp	r0, r1
   3dd74:	bcc	3dd8c <flatcc_json_printer_struct_vector_field@@Base+0x3a8>
   3dd78:	ldr	r2, [r4, #44]	; 0x2c
   3dd7c:	mov	r0, r4
   3dd80:	mov	r1, #0
   3dd84:	blx	r2
   3dd88:	ldr	r0, [r4, #20]
   3dd8c:	add	r1, r0, #1
   3dd90:	ldr	r2, [fp, #16]
   3dd94:	sub	r5, r5, #1
   3dd98:	str	r1, [r4, #20]
   3dd9c:	ldr	r1, [r4, #32]
   3dda0:	add	r1, r1, #1
   3dda4:	str	r1, [r4, #32]
   3dda8:	mov	r1, #123	; 0x7b
   3ddac:	strb	r1, [r0]
   3ddb0:	mov	r0, r4
   3ddb4:	mov	r1, r9
   3ddb8:	blx	r2
   3ddbc:	ldrb	r1, [r4, #25]
   3ddc0:	ldr	r0, [r4, #20]
   3ddc4:	cmp	r1, #0
   3ddc8:	beq	3de84 <flatcc_json_printer_struct_vector_field@@Base+0x4a0>
   3ddcc:	add	r1, r0, #1
   3ddd0:	str	r1, [r4, #20]
   3ddd4:	strb	r8, [r0]
   3ddd8:	ldr	r0, [r4, #32]
   3dddc:	sub	r2, r0, #1
   3dde0:	str	r2, [r4, #32]
   3dde4:	ldrb	r3, [r4, #25]
   3dde8:	ldr	r0, [r4, #20]
   3ddec:	ldr	r1, [r4, #16]
   3ddf0:	mla	r7, r2, r3, r0
   3ddf4:	mul	r6, r2, r3
   3ddf8:	cmp	r7, r1
   3ddfc:	bls	3de6c <flatcc_json_printer_struct_vector_field@@Base+0x488>
   3de00:	cmp	r0, r1
   3de04:	bcc	3de20 <flatcc_json_printer_struct_vector_field@@Base+0x43c>
   3de08:	ldr	r2, [r4, #44]	; 0x2c
   3de0c:	mov	r0, r4
   3de10:	mov	r1, #0
   3de14:	blx	r2
   3de18:	ldr	r1, [r4, #16]
   3de1c:	ldr	r0, [r4, #20]
   3de20:	sub	r7, r1, r0
   3de24:	cmp	r7, r6
   3de28:	bcs	3de6c <flatcc_json_printer_struct_vector_field@@Base+0x488>
   3de2c:	mov	r1, #32
   3de30:	mov	r2, r7
   3de34:	bl	14eec <memset@plt>
   3de38:	ldr	r0, [r4, #20]
   3de3c:	ldr	r2, [r4, #44]	; 0x2c
   3de40:	mov	r1, #0
   3de44:	add	r0, r0, r7
   3de48:	str	r0, [r4, #20]
   3de4c:	mov	r0, r4
   3de50:	blx	r2
   3de54:	ldr	r1, [r4, #16]
   3de58:	ldr	r0, [r4, #20]
   3de5c:	sub	r6, r6, r7
   3de60:	sub	r7, r1, r0
   3de64:	cmp	r6, r7
   3de68:	bhi	3de2c <flatcc_json_printer_struct_vector_field@@Base+0x448>
   3de6c:	mov	r1, #32
   3de70:	mov	r2, r6
   3de74:	bl	14eec <memset@plt>
   3de78:	ldr	r0, [r4, #20]
   3de7c:	add	r0, r0, r6
   3de80:	str	r0, [r4, #20]
   3de84:	add	r1, r0, #1
   3de88:	cmp	r5, #0
   3de8c:	str	r1, [r4, #20]
   3de90:	strb	sl, [r0]
   3de94:	bne	3dc8c <flatcc_json_printer_struct_vector_field@@Base+0x2a8>
   3de98:	ldrb	r1, [r4, #25]
   3de9c:	ldr	r0, [r4, #20]
   3dea0:	cmp	r1, #0
   3dea4:	beq	3df64 <flatcc_json_printer_struct_vector_field@@Base+0x580>
   3dea8:	add	r1, r0, #1
   3deac:	str	r1, [r4, #20]
   3deb0:	mov	r1, #10
   3deb4:	strb	r1, [r0]
   3deb8:	ldr	r0, [r4, #32]
   3debc:	sub	r2, r0, #1
   3dec0:	str	r2, [r4, #32]
   3dec4:	ldrb	r3, [r4, #25]
   3dec8:	ldr	r0, [r4, #20]
   3decc:	ldr	r1, [r4, #16]
   3ded0:	mla	r7, r2, r3, r0
   3ded4:	mul	r5, r2, r3
   3ded8:	cmp	r7, r1
   3dedc:	bls	3df4c <flatcc_json_printer_struct_vector_field@@Base+0x568>
   3dee0:	cmp	r0, r1
   3dee4:	bcc	3df00 <flatcc_json_printer_struct_vector_field@@Base+0x51c>
   3dee8:	ldr	r2, [r4, #44]	; 0x2c
   3deec:	mov	r0, r4
   3def0:	mov	r1, #0
   3def4:	blx	r2
   3def8:	ldr	r1, [r4, #16]
   3defc:	ldr	r0, [r4, #20]
   3df00:	sub	r6, r1, r0
   3df04:	cmp	r6, r5
   3df08:	bcs	3df4c <flatcc_json_printer_struct_vector_field@@Base+0x568>
   3df0c:	mov	r1, #32
   3df10:	mov	r2, r6
   3df14:	bl	14eec <memset@plt>
   3df18:	ldr	r0, [r4, #20]
   3df1c:	ldr	r2, [r4, #44]	; 0x2c
   3df20:	mov	r1, #0
   3df24:	add	r0, r0, r6
   3df28:	str	r0, [r4, #20]
   3df2c:	mov	r0, r4
   3df30:	blx	r2
   3df34:	ldr	r1, [r4, #16]
   3df38:	ldr	r0, [r4, #20]
   3df3c:	sub	r5, r5, r6
   3df40:	sub	r6, r1, r0
   3df44:	cmp	r5, r6
   3df48:	bhi	3df0c <flatcc_json_printer_struct_vector_field@@Base+0x528>
   3df4c:	mov	r1, #32
   3df50:	mov	r2, r5
   3df54:	bl	14eec <memset@plt>
   3df58:	ldr	r0, [r4, #20]
   3df5c:	add	r0, r0, r5
   3df60:	str	r0, [r4, #20]
   3df64:	add	r1, r0, #1
   3df68:	str	r1, [r4, #20]
   3df6c:	mov	r1, #93	; 0x5d
   3df70:	strb	r1, [r0]
   3df74:	sub	sp, fp, #28
   3df78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003df7c <flatcc_json_printer_string_vector_field@@Base>:
   3df7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3df80:	add	fp, sp, #28
   3df84:	sub	sp, sp, #4
   3df88:	mov	r4, r0
   3df8c:	mov	r0, #4
   3df90:	add	r0, r0, r2, lsl #1
   3df94:	ldr	r2, [r1, #8]
   3df98:	cmp	r0, r2
   3df9c:	bge	3e328 <flatcc_json_printer_string_vector_field@@Base+0x3ac>
   3dfa0:	ldr	r2, [r1, #4]
   3dfa4:	add	r0, r2, r0
   3dfa8:	ldrh	r0, [r0]
   3dfac:	cmp	r0, #0
   3dfb0:	ldrne	r2, [r1]
   3dfb4:	addsne	r5, r2, r0
   3dfb8:	beq	3e328 <flatcc_json_printer_string_vector_field@@Base+0x3ac>
   3dfbc:	ldr	r0, [r1, #16]
   3dfc0:	ldr	r2, [fp, #8]
   3dfc4:	add	r7, r0, #1
   3dfc8:	cmp	r0, #0
   3dfcc:	str	r7, [r1, #16]
   3dfd0:	beq	3dfe8 <flatcc_json_printer_string_vector_field@@Base+0x6c>
   3dfd4:	ldr	r0, [r4, #20]
   3dfd8:	add	r1, r0, #1
   3dfdc:	str	r1, [r4, #20]
   3dfe0:	mov	r1, #44	; 0x2c
   3dfe4:	strb	r1, [r0]
   3dfe8:	ldr	r0, [r5]
   3dfec:	mov	r1, r3
   3dff0:	ldr	r8, [r5, r0]!
   3dff4:	mov	r0, r4
   3dff8:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3dffc:	ldr	r1, [r4, #32]
   3e000:	ldr	r0, [r4, #20]
   3e004:	cmp	r8, #0
   3e008:	add	r1, r1, #1
   3e00c:	str	r1, [r4, #32]
   3e010:	add	r1, r0, #1
   3e014:	str	r1, [r4, #20]
   3e018:	mov	r1, #91	; 0x5b
   3e01c:	strb	r1, [r0]
   3e020:	beq	3e24c <flatcc_json_printer_string_vector_field@@Base+0x2d0>
   3e024:	ldrb	r1, [r4, #25]
   3e028:	ldr	r0, [r4, #20]
   3e02c:	add	r9, r5, #4
   3e030:	cmp	r1, #0
   3e034:	beq	3e0f0 <flatcc_json_printer_string_vector_field@@Base+0x174>
   3e038:	add	r1, r0, #1
   3e03c:	str	r1, [r4, #20]
   3e040:	mov	r1, #10
   3e044:	strb	r1, [r0]
   3e048:	ldr	r0, [r4, #20]
   3e04c:	ldrb	r2, [r4, #25]
   3e050:	ldr	r3, [r4, #32]
   3e054:	ldr	r1, [r4, #16]
   3e058:	mla	r7, r3, r2, r0
   3e05c:	mul	r5, r3, r2
   3e060:	cmp	r7, r1
   3e064:	bls	3e0d4 <flatcc_json_printer_string_vector_field@@Base+0x158>
   3e068:	cmp	r0, r1
   3e06c:	bcc	3e088 <flatcc_json_printer_string_vector_field@@Base+0x10c>
   3e070:	ldr	r2, [r4, #44]	; 0x2c
   3e074:	mov	r0, r4
   3e078:	mov	r1, #0
   3e07c:	blx	r2
   3e080:	ldr	r1, [r4, #16]
   3e084:	ldr	r0, [r4, #20]
   3e088:	sub	r6, r1, r0
   3e08c:	cmp	r6, r5
   3e090:	bcs	3e0d4 <flatcc_json_printer_string_vector_field@@Base+0x158>
   3e094:	mov	r1, #32
   3e098:	mov	r2, r6
   3e09c:	bl	14eec <memset@plt>
   3e0a0:	ldr	r0, [r4, #20]
   3e0a4:	ldr	r2, [r4, #44]	; 0x2c
   3e0a8:	mov	r1, #0
   3e0ac:	add	r0, r0, r6
   3e0b0:	str	r0, [r4, #20]
   3e0b4:	mov	r0, r4
   3e0b8:	blx	r2
   3e0bc:	ldr	r1, [r4, #16]
   3e0c0:	ldr	r0, [r4, #20]
   3e0c4:	sub	r5, r5, r6
   3e0c8:	sub	r6, r1, r0
   3e0cc:	cmp	r5, r6
   3e0d0:	bhi	3e094 <flatcc_json_printer_string_vector_field@@Base+0x118>
   3e0d4:	mov	r1, #32
   3e0d8:	mov	r2, r5
   3e0dc:	bl	14eec <memset@plt>
   3e0e0:	ldr	r0, [r4, #20]
   3e0e4:	add	r0, r0, r5
   3e0e8:	str	r0, [r4, #20]
   3e0ec:	b	3e10c <flatcc_json_printer_string_vector_field@@Base+0x190>
   3e0f0:	ldr	r1, [r4, #16]
   3e0f4:	cmp	r0, r1
   3e0f8:	bcc	3e10c <flatcc_json_printer_string_vector_field@@Base+0x190>
   3e0fc:	ldr	r2, [r4, #44]	; 0x2c
   3e100:	mov	r0, r4
   3e104:	mov	r1, #0
   3e108:	blx	r2
   3e10c:	ldr	r0, [r9]
   3e110:	mov	r1, r9
   3e114:	ldr	r2, [r1, r0]!
   3e118:	mov	r0, r4
   3e11c:	add	r1, r1, #4
   3e120:	bl	35388 <flatcc_json_printer_string@@Base+0x4>
   3e124:	subs	r7, r8, #1
   3e128:	beq	3e24c <flatcc_json_printer_string_vector_field@@Base+0x2d0>
   3e12c:	mov	r8, #44	; 0x2c
   3e130:	mov	sl, #10
   3e134:	ldr	r0, [r4, #20]
   3e138:	add	r9, r9, #4
   3e13c:	sub	r7, r7, #1
   3e140:	add	r1, r0, #1
   3e144:	str	r1, [r4, #20]
   3e148:	strb	r8, [r0]
   3e14c:	ldrb	r1, [r4, #25]
   3e150:	ldr	r0, [r4, #20]
   3e154:	cmp	r1, #0
   3e158:	beq	3e210 <flatcc_json_printer_string_vector_field@@Base+0x294>
   3e15c:	add	r1, r0, #1
   3e160:	str	r1, [r4, #20]
   3e164:	strb	sl, [r0]
   3e168:	ldr	r0, [r4, #20]
   3e16c:	ldrb	r2, [r4, #25]
   3e170:	ldr	r3, [r4, #32]
   3e174:	ldr	r1, [r4, #16]
   3e178:	mla	r6, r3, r2, r0
   3e17c:	mul	r5, r3, r2
   3e180:	cmp	r6, r1
   3e184:	bls	3e1f4 <flatcc_json_printer_string_vector_field@@Base+0x278>
   3e188:	cmp	r0, r1
   3e18c:	bcc	3e1a8 <flatcc_json_printer_string_vector_field@@Base+0x22c>
   3e190:	ldr	r2, [r4, #44]	; 0x2c
   3e194:	mov	r0, r4
   3e198:	mov	r1, #0
   3e19c:	blx	r2
   3e1a0:	ldr	r1, [r4, #16]
   3e1a4:	ldr	r0, [r4, #20]
   3e1a8:	sub	r6, r1, r0
   3e1ac:	cmp	r6, r5
   3e1b0:	bcs	3e1f4 <flatcc_json_printer_string_vector_field@@Base+0x278>
   3e1b4:	mov	r1, #32
   3e1b8:	mov	r2, r6
   3e1bc:	bl	14eec <memset@plt>
   3e1c0:	ldr	r0, [r4, #20]
   3e1c4:	ldr	r2, [r4, #44]	; 0x2c
   3e1c8:	mov	r1, #0
   3e1cc:	add	r0, r0, r6
   3e1d0:	str	r0, [r4, #20]
   3e1d4:	mov	r0, r4
   3e1d8:	blx	r2
   3e1dc:	ldr	r1, [r4, #16]
   3e1e0:	ldr	r0, [r4, #20]
   3e1e4:	sub	r5, r5, r6
   3e1e8:	sub	r6, r1, r0
   3e1ec:	cmp	r5, r6
   3e1f0:	bhi	3e1b4 <flatcc_json_printer_string_vector_field@@Base+0x238>
   3e1f4:	mov	r1, #32
   3e1f8:	mov	r2, r5
   3e1fc:	bl	14eec <memset@plt>
   3e200:	ldr	r0, [r4, #20]
   3e204:	add	r0, r0, r5
   3e208:	str	r0, [r4, #20]
   3e20c:	b	3e22c <flatcc_json_printer_string_vector_field@@Base+0x2b0>
   3e210:	ldr	r1, [r4, #16]
   3e214:	cmp	r0, r1
   3e218:	bcc	3e22c <flatcc_json_printer_string_vector_field@@Base+0x2b0>
   3e21c:	ldr	r2, [r4, #44]	; 0x2c
   3e220:	mov	r0, r4
   3e224:	mov	r1, #0
   3e228:	blx	r2
   3e22c:	ldr	r0, [r9]
   3e230:	mov	r1, r9
   3e234:	ldr	r2, [r1, r0]!
   3e238:	mov	r0, r4
   3e23c:	add	r1, r1, #4
   3e240:	bl	35388 <flatcc_json_printer_string@@Base+0x4>
   3e244:	cmp	r7, #0
   3e248:	bne	3e134 <flatcc_json_printer_string_vector_field@@Base+0x1b8>
   3e24c:	ldrb	r1, [r4, #25]
   3e250:	ldr	r0, [r4, #20]
   3e254:	cmp	r1, #0
   3e258:	beq	3e318 <flatcc_json_printer_string_vector_field@@Base+0x39c>
   3e25c:	add	r1, r0, #1
   3e260:	str	r1, [r4, #20]
   3e264:	mov	r1, #10
   3e268:	strb	r1, [r0]
   3e26c:	ldr	r0, [r4, #32]
   3e270:	sub	r2, r0, #1
   3e274:	str	r2, [r4, #32]
   3e278:	ldrb	r3, [r4, #25]
   3e27c:	ldr	r0, [r4, #20]
   3e280:	ldr	r1, [r4, #16]
   3e284:	mla	r7, r2, r3, r0
   3e288:	mul	r5, r2, r3
   3e28c:	cmp	r7, r1
   3e290:	bls	3e300 <flatcc_json_printer_string_vector_field@@Base+0x384>
   3e294:	cmp	r0, r1
   3e298:	bcc	3e2b4 <flatcc_json_printer_string_vector_field@@Base+0x338>
   3e29c:	ldr	r2, [r4, #44]	; 0x2c
   3e2a0:	mov	r0, r4
   3e2a4:	mov	r1, #0
   3e2a8:	blx	r2
   3e2ac:	ldr	r1, [r4, #16]
   3e2b0:	ldr	r0, [r4, #20]
   3e2b4:	sub	r6, r1, r0
   3e2b8:	cmp	r6, r5
   3e2bc:	bcs	3e300 <flatcc_json_printer_string_vector_field@@Base+0x384>
   3e2c0:	mov	r1, #32
   3e2c4:	mov	r2, r6
   3e2c8:	bl	14eec <memset@plt>
   3e2cc:	ldr	r0, [r4, #20]
   3e2d0:	ldr	r2, [r4, #44]	; 0x2c
   3e2d4:	mov	r1, #0
   3e2d8:	add	r0, r0, r6
   3e2dc:	str	r0, [r4, #20]
   3e2e0:	mov	r0, r4
   3e2e4:	blx	r2
   3e2e8:	ldr	r1, [r4, #16]
   3e2ec:	ldr	r0, [r4, #20]
   3e2f0:	sub	r5, r5, r6
   3e2f4:	sub	r6, r1, r0
   3e2f8:	cmp	r5, r6
   3e2fc:	bhi	3e2c0 <flatcc_json_printer_string_vector_field@@Base+0x344>
   3e300:	mov	r1, #32
   3e304:	mov	r2, r5
   3e308:	bl	14eec <memset@plt>
   3e30c:	ldr	r0, [r4, #20]
   3e310:	add	r0, r0, r5
   3e314:	str	r0, [r4, #20]
   3e318:	add	r1, r0, #1
   3e31c:	str	r1, [r4, #20]
   3e320:	mov	r1, #93	; 0x5d
   3e324:	strb	r1, [r0]
   3e328:	sub	sp, fp, #28
   3e32c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e330 <flatcc_json_printer_table_vector_field@@Base>:
   3e330:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e334:	add	fp, sp, #28
   3e338:	sub	sp, sp, #20
   3e33c:	mov	sl, r1
   3e340:	ldr	r1, [r1, #8]
   3e344:	mov	r4, r0
   3e348:	mov	r0, #4
   3e34c:	add	r0, r0, r2, lsl #1
   3e350:	cmp	r0, r1
   3e354:	bge	3e7ac <flatcc_json_printer_table_vector_field@@Base+0x47c>
   3e358:	ldr	r1, [sl, #4]
   3e35c:	add	r0, r1, r0
   3e360:	ldrh	r0, [r0]
   3e364:	cmp	r0, #0
   3e368:	ldrne	r1, [sl]
   3e36c:	addsne	r5, r1, r0
   3e370:	beq	3e7ac <flatcc_json_printer_table_vector_field@@Base+0x47c>
   3e374:	ldr	r0, [sl, #16]
   3e378:	ldr	r2, [fp, #8]
   3e37c:	add	r1, r0, #1
   3e380:	cmp	r0, #0
   3e384:	str	r1, [sl, #16]
   3e388:	beq	3e3a0 <flatcc_json_printer_table_vector_field@@Base+0x70>
   3e38c:	ldr	r0, [r4, #20]
   3e390:	add	r1, r0, #1
   3e394:	str	r1, [r4, #20]
   3e398:	mov	r1, #44	; 0x2c
   3e39c:	strb	r1, [r0]
   3e3a0:	ldr	r0, [r5]
   3e3a4:	mov	r1, r3
   3e3a8:	ldr	r8, [r5, r0]!
   3e3ac:	mov	r0, r4
   3e3b0:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3e3b4:	ldr	r1, [r4, #32]
   3e3b8:	ldr	r0, [r4, #20]
   3e3bc:	cmp	r8, #0
   3e3c0:	add	r1, r1, #1
   3e3c4:	str	r1, [r4, #32]
   3e3c8:	add	r1, r0, #1
   3e3cc:	str	r1, [r4, #20]
   3e3d0:	mov	r1, #91	; 0x5b
   3e3d4:	strb	r1, [r0]
   3e3d8:	beq	3e6d0 <flatcc_json_printer_table_vector_field@@Base+0x3a0>
   3e3dc:	ldr	r0, [sl, #12]
   3e3e0:	ldr	r6, [fp, #12]
   3e3e4:	add	r5, r5, #4
   3e3e8:	subs	r0, r0, #1
   3e3ec:	beq	3e52c <flatcc_json_printer_table_vector_field@@Base+0x1fc>
   3e3f0:	ldr	r3, [r4, #32]
   3e3f4:	ldr	r2, [r4, #20]
   3e3f8:	ldr	r1, [r5]
   3e3fc:	add	r3, r3, #1
   3e400:	add	r1, r5, r1
   3e404:	str	r3, [r4, #32]
   3e408:	add	r3, r2, #1
   3e40c:	str	r3, [r4, #20]
   3e410:	mov	r3, #123	; 0x7b
   3e414:	strb	r3, [r2]
   3e418:	str	r0, [sp, #12]
   3e41c:	mov	r0, #0
   3e420:	str	r0, [sp, #16]
   3e424:	str	r1, [sp]
   3e428:	ldr	r0, [r1]
   3e42c:	sub	r2, r1, r0
   3e430:	str	r2, [sp, #4]
   3e434:	ldrh	r0, [r1, -r0]
   3e438:	mov	r1, sp
   3e43c:	str	r0, [sp, #8]
   3e440:	mov	r0, r4
   3e444:	blx	r6
   3e448:	ldrb	r1, [r4, #25]
   3e44c:	ldr	r0, [r4, #20]
   3e450:	cmp	r1, #0
   3e454:	beq	3e518 <flatcc_json_printer_table_vector_field@@Base+0x1e8>
   3e458:	add	r1, r0, #1
   3e45c:	str	r1, [r4, #20]
   3e460:	mov	r1, #10
   3e464:	strb	r1, [r0]
   3e468:	ldr	r0, [r4, #32]
   3e46c:	sub	r2, r0, #1
   3e470:	str	r2, [r4, #32]
   3e474:	ldrb	r3, [r4, #25]
   3e478:	ldr	r0, [r4, #20]
   3e47c:	ldr	r1, [r4, #16]
   3e480:	mla	r7, r2, r3, r0
   3e484:	mul	r6, r2, r3
   3e488:	cmp	r7, r1
   3e48c:	bls	3e4fc <flatcc_json_printer_table_vector_field@@Base+0x1cc>
   3e490:	cmp	r0, r1
   3e494:	bcc	3e4b0 <flatcc_json_printer_table_vector_field@@Base+0x180>
   3e498:	ldr	r2, [r4, #44]	; 0x2c
   3e49c:	mov	r0, r4
   3e4a0:	mov	r1, #0
   3e4a4:	blx	r2
   3e4a8:	ldr	r1, [r4, #16]
   3e4ac:	ldr	r0, [r4, #20]
   3e4b0:	sub	r7, r1, r0
   3e4b4:	cmp	r7, r6
   3e4b8:	bcs	3e4fc <flatcc_json_printer_table_vector_field@@Base+0x1cc>
   3e4bc:	mov	r1, #32
   3e4c0:	mov	r2, r7
   3e4c4:	bl	14eec <memset@plt>
   3e4c8:	ldr	r0, [r4, #20]
   3e4cc:	ldr	r2, [r4, #44]	; 0x2c
   3e4d0:	mov	r1, #0
   3e4d4:	add	r0, r0, r7
   3e4d8:	str	r0, [r4, #20]
   3e4dc:	mov	r0, r4
   3e4e0:	blx	r2
   3e4e4:	ldr	r1, [r4, #16]
   3e4e8:	ldr	r0, [r4, #20]
   3e4ec:	sub	r6, r6, r7
   3e4f0:	sub	r7, r1, r0
   3e4f4:	cmp	r6, r7
   3e4f8:	bhi	3e4bc <flatcc_json_printer_table_vector_field@@Base+0x18c>
   3e4fc:	mov	r1, #32
   3e500:	mov	r2, r6
   3e504:	bl	14eec <memset@plt>
   3e508:	ldr	r0, [r4, #20]
   3e50c:	add	r0, r0, r6
   3e510:	ldr	r6, [fp, #12]
   3e514:	str	r0, [r4, #20]
   3e518:	add	r1, r0, #1
   3e51c:	str	r1, [r4, #20]
   3e520:	mov	r1, #125	; 0x7d
   3e524:	strb	r1, [r0]
   3e528:	b	3e53c <flatcc_json_printer_table_vector_field@@Base+0x20c>
   3e52c:	ldr	r0, [r4, #36]	; 0x24
   3e530:	cmp	r0, #0
   3e534:	moveq	r0, #2
   3e538:	streq	r0, [r4, #36]	; 0x24
   3e53c:	subs	r9, r8, #1
   3e540:	beq	3e6d0 <flatcc_json_printer_table_vector_field@@Base+0x3a0>
   3e544:	mov	r8, #44	; 0x2c
   3e548:	ldr	r0, [r4, #20]
   3e54c:	sub	r9, r9, #1
   3e550:	add	r1, r0, #1
   3e554:	str	r1, [r4, #20]
   3e558:	strb	r8, [r0]
   3e55c:	ldr	r0, [sl, #12]
   3e560:	ldr	r1, [r5, #4]!
   3e564:	subs	r0, r0, #1
   3e568:	beq	3e688 <flatcc_json_printer_table_vector_field@@Base+0x358>
   3e56c:	ldr	r3, [r4, #32]
   3e570:	ldr	r2, [r4, #20]
   3e574:	add	r1, r5, r1
   3e578:	add	r3, r3, #1
   3e57c:	str	r3, [r4, #32]
   3e580:	add	r3, r2, #1
   3e584:	str	r3, [r4, #20]
   3e588:	mov	r3, #123	; 0x7b
   3e58c:	strb	r3, [r2]
   3e590:	str	r0, [sp, #12]
   3e594:	mov	r0, #0
   3e598:	str	r0, [sp, #16]
   3e59c:	str	r1, [sp]
   3e5a0:	ldr	r0, [r1]
   3e5a4:	sub	r2, r1, r0
   3e5a8:	str	r2, [sp, #4]
   3e5ac:	ldrh	r0, [r1, -r0]
   3e5b0:	mov	r1, sp
   3e5b4:	str	r0, [sp, #8]
   3e5b8:	mov	r0, r4
   3e5bc:	blx	r6
   3e5c0:	ldrb	r1, [r4, #25]
   3e5c4:	ldr	r0, [r4, #20]
   3e5c8:	cmp	r1, #0
   3e5cc:	beq	3e6b8 <flatcc_json_printer_table_vector_field@@Base+0x388>
   3e5d0:	add	r1, r0, #1
   3e5d4:	str	r1, [r4, #20]
   3e5d8:	mov	r1, #10
   3e5dc:	strb	r1, [r0]
   3e5e0:	ldr	r0, [r4, #32]
   3e5e4:	sub	r2, r0, #1
   3e5e8:	str	r2, [r4, #32]
   3e5ec:	ldrb	r3, [r4, #25]
   3e5f0:	ldr	r0, [r4, #20]
   3e5f4:	ldr	r1, [r4, #16]
   3e5f8:	mla	r6, r2, r3, r0
   3e5fc:	mul	r7, r2, r3
   3e600:	cmp	r6, r1
   3e604:	bls	3e69c <flatcc_json_printer_table_vector_field@@Base+0x36c>
   3e608:	cmp	r0, r1
   3e60c:	bcc	3e628 <flatcc_json_printer_table_vector_field@@Base+0x2f8>
   3e610:	ldr	r2, [r4, #44]	; 0x2c
   3e614:	mov	r0, r4
   3e618:	mov	r1, #0
   3e61c:	blx	r2
   3e620:	ldr	r1, [r4, #16]
   3e624:	ldr	r0, [r4, #20]
   3e628:	sub	r6, r1, r0
   3e62c:	cmp	r6, r7
   3e630:	bcs	3e674 <flatcc_json_printer_table_vector_field@@Base+0x344>
   3e634:	mov	r1, #32
   3e638:	mov	r2, r6
   3e63c:	bl	14eec <memset@plt>
   3e640:	ldr	r0, [r4, #20]
   3e644:	ldr	r2, [r4, #44]	; 0x2c
   3e648:	mov	r1, #0
   3e64c:	add	r0, r0, r6
   3e650:	str	r0, [r4, #20]
   3e654:	mov	r0, r4
   3e658:	blx	r2
   3e65c:	ldr	r1, [r4, #16]
   3e660:	ldr	r0, [r4, #20]
   3e664:	sub	r7, r7, r6
   3e668:	sub	r6, r1, r0
   3e66c:	cmp	r7, r6
   3e670:	bhi	3e634 <flatcc_json_printer_table_vector_field@@Base+0x304>
   3e674:	ldr	r6, [fp, #12]
   3e678:	mov	r1, #32
   3e67c:	mov	r2, r7
   3e680:	bl	14eec <memset@plt>
   3e684:	b	3e6ac <flatcc_json_printer_table_vector_field@@Base+0x37c>
   3e688:	ldr	r0, [r4, #36]	; 0x24
   3e68c:	cmp	r0, #0
   3e690:	moveq	r0, #2
   3e694:	streq	r0, [r4, #36]	; 0x24
   3e698:	b	3e6c8 <flatcc_json_printer_table_vector_field@@Base+0x398>
   3e69c:	mov	r1, #32
   3e6a0:	mov	r2, r7
   3e6a4:	bl	14eec <memset@plt>
   3e6a8:	ldr	r6, [fp, #12]
   3e6ac:	ldr	r0, [r4, #20]
   3e6b0:	add	r0, r0, r7
   3e6b4:	str	r0, [r4, #20]
   3e6b8:	add	r1, r0, #1
   3e6bc:	str	r1, [r4, #20]
   3e6c0:	mov	r1, #125	; 0x7d
   3e6c4:	strb	r1, [r0]
   3e6c8:	cmp	r9, #0
   3e6cc:	bne	3e548 <flatcc_json_printer_table_vector_field@@Base+0x218>
   3e6d0:	ldrb	r1, [r4, #25]
   3e6d4:	ldr	r0, [r4, #20]
   3e6d8:	cmp	r1, #0
   3e6dc:	beq	3e79c <flatcc_json_printer_table_vector_field@@Base+0x46c>
   3e6e0:	add	r1, r0, #1
   3e6e4:	str	r1, [r4, #20]
   3e6e8:	mov	r1, #10
   3e6ec:	strb	r1, [r0]
   3e6f0:	ldr	r0, [r4, #32]
   3e6f4:	sub	r2, r0, #1
   3e6f8:	str	r2, [r4, #32]
   3e6fc:	ldrb	r3, [r4, #25]
   3e700:	ldr	r0, [r4, #20]
   3e704:	ldr	r1, [r4, #16]
   3e708:	mla	r7, r2, r3, r0
   3e70c:	mul	r5, r2, r3
   3e710:	cmp	r7, r1
   3e714:	bls	3e784 <flatcc_json_printer_table_vector_field@@Base+0x454>
   3e718:	cmp	r0, r1
   3e71c:	bcc	3e738 <flatcc_json_printer_table_vector_field@@Base+0x408>
   3e720:	ldr	r2, [r4, #44]	; 0x2c
   3e724:	mov	r0, r4
   3e728:	mov	r1, #0
   3e72c:	blx	r2
   3e730:	ldr	r1, [r4, #16]
   3e734:	ldr	r0, [r4, #20]
   3e738:	sub	r6, r1, r0
   3e73c:	cmp	r6, r5
   3e740:	bcs	3e784 <flatcc_json_printer_table_vector_field@@Base+0x454>
   3e744:	mov	r1, #32
   3e748:	mov	r2, r6
   3e74c:	bl	14eec <memset@plt>
   3e750:	ldr	r0, [r4, #20]
   3e754:	ldr	r2, [r4, #44]	; 0x2c
   3e758:	mov	r1, #0
   3e75c:	add	r0, r0, r6
   3e760:	str	r0, [r4, #20]
   3e764:	mov	r0, r4
   3e768:	blx	r2
   3e76c:	ldr	r1, [r4, #16]
   3e770:	ldr	r0, [r4, #20]
   3e774:	sub	r5, r5, r6
   3e778:	sub	r6, r1, r0
   3e77c:	cmp	r5, r6
   3e780:	bhi	3e744 <flatcc_json_printer_table_vector_field@@Base+0x414>
   3e784:	mov	r1, #32
   3e788:	mov	r2, r5
   3e78c:	bl	14eec <memset@plt>
   3e790:	ldr	r0, [r4, #20]
   3e794:	add	r0, r0, r5
   3e798:	str	r0, [r4, #20]
   3e79c:	add	r1, r0, #1
   3e7a0:	str	r1, [r4, #20]
   3e7a4:	mov	r1, #93	; 0x5d
   3e7a8:	strb	r1, [r0]
   3e7ac:	sub	sp, fp, #28
   3e7b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e7b4 <flatcc_json_printer_union_vector_field@@Base>:
   3e7b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e7b8:	add	fp, sp, #28
   3e7bc:	sub	sp, sp, #140	; 0x8c
   3e7c0:	mov	r6, r1
   3e7c4:	ldr	r1, [r1, #8]
   3e7c8:	mov	r8, r0
   3e7cc:	sub	r9, r2, #1
   3e7d0:	mov	r0, #4
   3e7d4:	mov	r4, r3
   3e7d8:	mov	r5, #0
   3e7dc:	mov	sl, #0
   3e7e0:	add	r3, r0, r9, lsl #1
   3e7e4:	cmp	r3, r1
   3e7e8:	bge	3e808 <flatcc_json_printer_union_vector_field@@Base+0x54>
   3e7ec:	ldr	r7, [r6, #4]
   3e7f0:	mov	sl, #0
   3e7f4:	add	r3, r7, r3
   3e7f8:	ldrh	r3, [r3]
   3e7fc:	cmp	r3, #0
   3e800:	ldrne	r7, [r6]
   3e804:	addne	sl, r7, r3
   3e808:	ldr	r7, [fp, #8]
   3e80c:	add	r0, r0, r2, lsl #1
   3e810:	cmp	r0, r1
   3e814:	bge	3e830 <flatcc_json_printer_union_vector_field@@Base+0x7c>
   3e818:	ldr	r1, [r6, #4]
   3e81c:	add	r0, r1, r0
   3e820:	ldrh	r0, [r0]
   3e824:	cmp	r0, #0
   3e828:	ldrne	r1, [r6]
   3e82c:	addne	r5, r1, r0
   3e830:	ldr	r0, [r6, #12]
   3e834:	cmp	r7, #101	; 0x65
   3e838:	str	r5, [sp, #16]
   3e83c:	str	r0, [sp, #24]
   3e840:	bge	3eb34 <flatcc_json_printer_union_vector_field@@Base+0x380>
   3e844:	add	r5, sp, #32
   3e848:	mov	r1, r4
   3e84c:	mov	r2, r7
   3e850:	mov	r0, r5
   3e854:	bl	14e5c <memcpy@plt>
   3e858:	movw	r0, #29791	; 0x745f
   3e85c:	cmp	sl, #0
   3e860:	mov	r1, #101	; 0x65
   3e864:	movt	r0, #28793	; 0x7079
   3e868:	str	r0, [r5, r7]
   3e86c:	add	r0, r5, r7
   3e870:	ldr	r5, [sp, #16]
   3e874:	strb	r1, [r0, #4]
   3e878:	cmpne	r5, #0
   3e87c:	beq	3eb2c <flatcc_json_printer_union_vector_field@@Base+0x378>
   3e880:	ldr	r0, [fp, #12]
   3e884:	add	r1, r7, #5
   3e888:	add	r3, sp, #32
   3e88c:	mov	r2, r9
   3e890:	str	r1, [sp]
   3e894:	mov	r1, r6
   3e898:	str	r0, [sp, #4]
   3e89c:	mov	r0, r8
   3e8a0:	bl	3b4ac <flatcc_json_printer_utype_enum_vector_field@@Base>
   3e8a4:	ldr	r0, [r6, #16]
   3e8a8:	add	r1, r0, #1
   3e8ac:	cmp	r0, #0
   3e8b0:	str	r1, [r6, #16]
   3e8b4:	beq	3e8cc <flatcc_json_printer_union_vector_field@@Base+0x118>
   3e8b8:	ldr	r0, [r8, #20]
   3e8bc:	add	r1, r0, #1
   3e8c0:	str	r1, [r8, #20]
   3e8c4:	mov	r1, #44	; 0x2c
   3e8c8:	strb	r1, [r0]
   3e8cc:	ldr	r0, [r5]
   3e8d0:	ldr	r9, [sl]
   3e8d4:	mov	r1, r4
   3e8d8:	mov	r2, r7
   3e8dc:	ldr	r6, [r5, r0]!
   3e8e0:	str	r0, [sp, #12]
   3e8e4:	mov	r0, r8
   3e8e8:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3e8ec:	mov	r7, r8
   3e8f0:	cmp	r6, #0
   3e8f4:	ldr	r0, [r7, #20]!
   3e8f8:	add	r1, r0, #1
   3e8fc:	str	r1, [r7]
   3e900:	ldr	r1, [r7, #12]
   3e904:	add	r1, r1, #1
   3e908:	str	r1, [r7, #12]
   3e90c:	mov	r1, #91	; 0x5b
   3e910:	strb	r1, [r0]
   3e914:	beq	3ea50 <flatcc_json_printer_union_vector_field@@Base+0x29c>
   3e918:	add	r4, sl, r9
   3e91c:	ldr	r2, [fp, #16]
   3e920:	ldrb	r0, [r4, #4]
   3e924:	cmp	r0, #0
   3e928:	beq	3e94c <flatcc_json_printer_union_vector_field@@Base+0x198>
   3e92c:	add	r1, r5, #4
   3e930:	mov	r9, r2
   3e934:	str	r1, [sp, #20]
   3e938:	strb	r0, [sp, #28]
   3e93c:	add	r1, sp, #20
   3e940:	mov	r0, r8
   3e944:	blx	r2
   3e948:	b	3e99c <flatcc_json_printer_union_vector_field@@Base+0x1e8>
   3e94c:	ldr	r0, [r7]
   3e950:	mov	r9, r2
   3e954:	add	r1, r0, #1
   3e958:	str	r1, [r7]
   3e95c:	mov	r1, #110	; 0x6e
   3e960:	strb	r1, [r0]
   3e964:	ldr	r0, [r7]
   3e968:	add	r1, r0, #1
   3e96c:	str	r1, [r7]
   3e970:	mov	r1, #117	; 0x75
   3e974:	strb	r1, [r0]
   3e978:	ldr	r0, [r7]
   3e97c:	add	r1, r0, #1
   3e980:	str	r1, [r7]
   3e984:	mov	r1, #108	; 0x6c
   3e988:	strb	r1, [r0]
   3e98c:	ldr	r0, [r7]
   3e990:	add	r2, r0, #1
   3e994:	str	r2, [r7]
   3e998:	strb	r1, [r0]
   3e99c:	subs	r6, r6, #1
   3e9a0:	beq	3ea50 <flatcc_json_printer_union_vector_field@@Base+0x29c>
   3e9a4:	ldr	r0, [sp, #16]
   3e9a8:	ldr	r1, [sp, #12]
   3e9ac:	add	r4, r4, #5
   3e9b0:	mov	sl, #44	; 0x2c
   3e9b4:	add	r0, r1, r0
   3e9b8:	add	r5, r0, #8
   3e9bc:	ldrb	r0, [r4]
   3e9c0:	ldr	r1, [r7]
   3e9c4:	sub	r6, r6, #1
   3e9c8:	add	r2, r1, #1
   3e9cc:	cmp	r0, #0
   3e9d0:	str	r2, [r7]
   3e9d4:	strb	sl, [r1]
   3e9d8:	beq	3e9f4 <flatcc_json_printer_union_vector_field@@Base+0x240>
   3e9dc:	str	r5, [sp, #20]
   3e9e0:	strb	r0, [sp, #28]
   3e9e4:	mov	r0, r8
   3e9e8:	add	r1, sp, #20
   3e9ec:	blx	r9
   3e9f0:	b	3ea40 <flatcc_json_printer_union_vector_field@@Base+0x28c>
   3e9f4:	ldr	r0, [r7]
   3e9f8:	mov	r2, #108	; 0x6c
   3e9fc:	add	r1, r0, #1
   3ea00:	str	r1, [r7]
   3ea04:	mov	r1, #110	; 0x6e
   3ea08:	strb	r1, [r0]
   3ea0c:	ldr	r0, [r7]
   3ea10:	add	r1, r0, #1
   3ea14:	str	r1, [r7]
   3ea18:	mov	r1, #117	; 0x75
   3ea1c:	strb	r1, [r0]
   3ea20:	ldr	r0, [r7]
   3ea24:	add	r1, r0, #1
   3ea28:	str	r1, [r7]
   3ea2c:	strb	r2, [r0]
   3ea30:	ldr	r0, [r7]
   3ea34:	add	r1, r0, #1
   3ea38:	str	r1, [r7]
   3ea3c:	strb	r2, [r0]
   3ea40:	add	r5, r5, #4
   3ea44:	add	r4, r4, #1
   3ea48:	cmp	r6, #0
   3ea4c:	bne	3e9bc <flatcc_json_printer_union_vector_field@@Base+0x208>
   3ea50:	ldrb	r1, [r8, #25]
   3ea54:	ldr	r0, [r8, #20]
   3ea58:	cmp	r1, #0
   3ea5c:	beq	3eb1c <flatcc_json_printer_union_vector_field@@Base+0x368>
   3ea60:	add	r1, r0, #1
   3ea64:	str	r1, [r8, #20]
   3ea68:	mov	r1, #10
   3ea6c:	strb	r1, [r0]
   3ea70:	ldr	r0, [r8, #32]
   3ea74:	sub	r2, r0, #1
   3ea78:	str	r2, [r8, #32]
   3ea7c:	ldrb	r3, [r8, #25]
   3ea80:	ldr	r0, [r8, #20]
   3ea84:	ldr	r1, [r8, #16]
   3ea88:	mla	r6, r2, r3, r0
   3ea8c:	mul	r5, r2, r3
   3ea90:	cmp	r6, r1
   3ea94:	bls	3eb04 <flatcc_json_printer_union_vector_field@@Base+0x350>
   3ea98:	cmp	r0, r1
   3ea9c:	bcc	3eab8 <flatcc_json_printer_union_vector_field@@Base+0x304>
   3eaa0:	ldr	r2, [r8, #44]	; 0x2c
   3eaa4:	mov	r0, r8
   3eaa8:	mov	r1, #0
   3eaac:	blx	r2
   3eab0:	ldr	r1, [r8, #16]
   3eab4:	ldr	r0, [r8, #20]
   3eab8:	sub	r6, r1, r0
   3eabc:	cmp	r6, r5
   3eac0:	bcs	3eb04 <flatcc_json_printer_union_vector_field@@Base+0x350>
   3eac4:	mov	r1, #32
   3eac8:	mov	r2, r6
   3eacc:	bl	14eec <memset@plt>
   3ead0:	ldr	r0, [r8, #20]
   3ead4:	ldr	r2, [r8, #44]	; 0x2c
   3ead8:	mov	r1, #0
   3eadc:	add	r0, r0, r6
   3eae0:	str	r0, [r8, #20]
   3eae4:	mov	r0, r8
   3eae8:	blx	r2
   3eaec:	ldr	r1, [r8, #16]
   3eaf0:	ldr	r0, [r8, #20]
   3eaf4:	sub	r5, r5, r6
   3eaf8:	sub	r6, r1, r0
   3eafc:	cmp	r5, r6
   3eb00:	bhi	3eac4 <flatcc_json_printer_union_vector_field@@Base+0x310>
   3eb04:	mov	r1, #32
   3eb08:	mov	r2, r5
   3eb0c:	bl	14eec <memset@plt>
   3eb10:	ldr	r0, [r7]
   3eb14:	add	r0, r0, r5
   3eb18:	str	r0, [r7]
   3eb1c:	add	r1, r0, #1
   3eb20:	str	r1, [r7]
   3eb24:	mov	r1, #93	; 0x5d
   3eb28:	strb	r1, [r0]
   3eb2c:	sub	sp, fp, #28
   3eb30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3eb34:	ldr	r0, [r8, #36]	; 0x24
   3eb38:	movw	r1, #26499	; 0x6783
   3eb3c:	movw	r3, #26574	; 0x67ce
   3eb40:	movw	r2, #843	; 0x34b
   3eb44:	movt	r1, #4
   3eb48:	movt	r3, #4
   3eb4c:	cmp	r0, #0
   3eb50:	moveq	r0, #1
   3eb54:	streq	r0, [r8, #36]	; 0x24
   3eb58:	movw	r0, #26472	; 0x6768
   3eb5c:	movt	r0, #4
   3eb60:	bl	14f40 <__assert_fail@plt>

0003eb64 <flatcc_json_printer_table_field@@Base>:
   3eb64:	push	{r4, r5, r6, sl, fp, lr}
   3eb68:	add	fp, sp, #16
   3eb6c:	sub	sp, sp, #24
   3eb70:	mov	r5, r1
   3eb74:	ldr	r1, [r1, #8]
   3eb78:	mov	r4, r0
   3eb7c:	mov	r0, #4
   3eb80:	add	r0, r0, r2, lsl #1
   3eb84:	cmp	r0, r1
   3eb88:	bge	3eba8 <flatcc_json_printer_table_field@@Base+0x44>
   3eb8c:	ldr	r1, [r5, #4]
   3eb90:	add	r0, r1, r0
   3eb94:	ldrh	r0, [r0]
   3eb98:	cmp	r0, #0
   3eb9c:	ldrne	r1, [r5]
   3eba0:	addsne	r6, r1, r0
   3eba4:	bne	3ebb0 <flatcc_json_printer_table_field@@Base+0x4c>
   3eba8:	sub	sp, fp, #16
   3ebac:	pop	{r4, r5, r6, sl, fp, pc}
   3ebb0:	ldr	r0, [r5, #16]
   3ebb4:	ldr	r2, [fp, #8]
   3ebb8:	add	r1, r0, #1
   3ebbc:	cmp	r0, #0
   3ebc0:	str	r1, [r5, #16]
   3ebc4:	beq	3ebdc <flatcc_json_printer_table_field@@Base+0x78>
   3ebc8:	ldr	r0, [r4, #20]
   3ebcc:	add	r1, r0, #1
   3ebd0:	str	r1, [r4, #20]
   3ebd4:	mov	r1, #44	; 0x2c
   3ebd8:	strb	r1, [r0]
   3ebdc:	mov	r0, r4
   3ebe0:	mov	r1, r3
   3ebe4:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3ebe8:	ldr	r0, [r5, #12]
   3ebec:	subs	r0, r0, #1
   3ebf0:	beq	3ed30 <flatcc_json_printer_table_field@@Base+0x1cc>
   3ebf4:	ldr	r1, [r6]
   3ebf8:	ldr	r3, [r4, #20]
   3ebfc:	ldr	r2, [fp, #12]
   3ec00:	add	r1, r6, r1
   3ec04:	ldr	r6, [r4, #32]
   3ec08:	add	r6, r6, #1
   3ec0c:	str	r6, [r4, #32]
   3ec10:	add	r6, r3, #1
   3ec14:	str	r6, [r4, #20]
   3ec18:	mov	r6, #123	; 0x7b
   3ec1c:	strb	r6, [r3]
   3ec20:	str	r0, [sp, #16]
   3ec24:	mov	r0, #0
   3ec28:	str	r0, [sp, #20]
   3ec2c:	str	r1, [sp, #4]
   3ec30:	ldr	r0, [r1]
   3ec34:	sub	r3, r1, r0
   3ec38:	str	r3, [sp, #8]
   3ec3c:	ldrh	r0, [r1, -r0]
   3ec40:	add	r1, sp, #4
   3ec44:	str	r0, [sp, #12]
   3ec48:	mov	r0, r4
   3ec4c:	blx	r2
   3ec50:	ldrb	r1, [r4, #25]
   3ec54:	ldr	r0, [r4, #20]
   3ec58:	cmp	r1, #0
   3ec5c:	beq	3ed1c <flatcc_json_printer_table_field@@Base+0x1b8>
   3ec60:	add	r1, r0, #1
   3ec64:	str	r1, [r4, #20]
   3ec68:	mov	r1, #10
   3ec6c:	strb	r1, [r0]
   3ec70:	ldr	r0, [r4, #32]
   3ec74:	sub	r2, r0, #1
   3ec78:	str	r2, [r4, #32]
   3ec7c:	ldrb	r3, [r4, #25]
   3ec80:	ldr	r0, [r4, #20]
   3ec84:	ldr	r1, [r4, #16]
   3ec88:	mla	r6, r2, r3, r0
   3ec8c:	mul	r5, r2, r3
   3ec90:	cmp	r6, r1
   3ec94:	bls	3ed04 <flatcc_json_printer_table_field@@Base+0x1a0>
   3ec98:	cmp	r0, r1
   3ec9c:	bcc	3ecb8 <flatcc_json_printer_table_field@@Base+0x154>
   3eca0:	ldr	r2, [r4, #44]	; 0x2c
   3eca4:	mov	r0, r4
   3eca8:	mov	r1, #0
   3ecac:	blx	r2
   3ecb0:	ldr	r1, [r4, #16]
   3ecb4:	ldr	r0, [r4, #20]
   3ecb8:	sub	r6, r1, r0
   3ecbc:	cmp	r6, r5
   3ecc0:	bcs	3ed04 <flatcc_json_printer_table_field@@Base+0x1a0>
   3ecc4:	mov	r1, #32
   3ecc8:	mov	r2, r6
   3eccc:	bl	14eec <memset@plt>
   3ecd0:	ldr	r0, [r4, #20]
   3ecd4:	ldr	r2, [r4, #44]	; 0x2c
   3ecd8:	mov	r1, #0
   3ecdc:	add	r0, r0, r6
   3ece0:	str	r0, [r4, #20]
   3ece4:	mov	r0, r4
   3ece8:	blx	r2
   3ecec:	ldr	r1, [r4, #16]
   3ecf0:	ldr	r0, [r4, #20]
   3ecf4:	sub	r5, r5, r6
   3ecf8:	sub	r6, r1, r0
   3ecfc:	cmp	r5, r6
   3ed00:	bhi	3ecc4 <flatcc_json_printer_table_field@@Base+0x160>
   3ed04:	mov	r1, #32
   3ed08:	mov	r2, r5
   3ed0c:	bl	14eec <memset@plt>
   3ed10:	ldr	r0, [r4, #20]
   3ed14:	add	r0, r0, r5
   3ed18:	str	r0, [r4, #20]
   3ed1c:	add	r1, r0, #1
   3ed20:	str	r1, [r4, #20]
   3ed24:	mov	r1, #125	; 0x7d
   3ed28:	strb	r1, [r0]
   3ed2c:	b	3eba8 <flatcc_json_printer_table_field@@Base+0x44>
   3ed30:	ldr	r0, [r4, #36]	; 0x24
   3ed34:	cmp	r0, #0
   3ed38:	moveq	r0, #2
   3ed3c:	streq	r0, [r4, #36]	; 0x24
   3ed40:	b	3eba8 <flatcc_json_printer_table_field@@Base+0x44>

0003ed44 <flatcc_json_printer_union_field@@Base>:
   3ed44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ed48:	add	fp, sp, #28
   3ed4c:	sub	sp, sp, #20
   3ed50:	mov	r9, r1
   3ed54:	mov	r4, r0
   3ed58:	mov	r0, #2
   3ed5c:	mov	sl, r3
   3ed60:	lsl	r1, r2, #1
   3ed64:	add	r3, r0, r2, lsl #1
   3ed68:	ldr	r2, [r9, #8]
   3ed6c:	mov	r0, #0
   3ed70:	cmp	r3, r2
   3ed74:	bge	3ed90 <flatcc_json_printer_union_field@@Base+0x4c>
   3ed78:	ldr	r7, [r9, #4]
   3ed7c:	add	r3, r7, r3
   3ed80:	ldrh	r3, [r3]
   3ed84:	cmp	r3, #0
   3ed88:	ldrne	r0, [r9]
   3ed8c:	addne	r0, r0, r3
   3ed90:	add	r1, r1, #4
   3ed94:	cmp	r1, r2
   3ed98:	bge	3edb4 <flatcc_json_printer_union_field@@Base+0x70>
   3ed9c:	ldr	r2, [r9, #4]
   3eda0:	add	r1, r2, r1
   3eda4:	ldrh	r1, [r1]
   3eda8:	cmp	r1, #0
   3edac:	cmpne	r0, #0
   3edb0:	bne	3edbc <flatcc_json_printer_union_field@@Base+0x78>
   3edb4:	sub	sp, fp, #28
   3edb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3edbc:	ldr	r2, [r9]
   3edc0:	adds	r1, r2, r1
   3edc4:	str	r1, [sp, #4]
   3edc8:	beq	3edb4 <flatcc_json_printer_union_field@@Base+0x70>
   3edcc:	ldrb	r6, [r0]
   3edd0:	ldr	r0, [r9, #16]
   3edd4:	add	r1, r0, #1
   3edd8:	cmp	r0, #0
   3eddc:	str	r1, [r9, #16]
   3ede0:	beq	3edf8 <flatcc_json_printer_union_field@@Base+0xb4>
   3ede4:	ldr	r0, [r4, #20]
   3ede8:	add	r1, r0, #1
   3edec:	str	r1, [r4, #20]
   3edf0:	mov	r1, #44	; 0x2c
   3edf4:	strb	r1, [r0]
   3edf8:	ldrb	r1, [r4, #25]
   3edfc:	ldr	r8, [fp, #8]
   3ee00:	ldr	r0, [r4, #20]
   3ee04:	cmp	r1, #0
   3ee08:	beq	3eec0 <flatcc_json_printer_union_field@@Base+0x17c>
   3ee0c:	add	r1, r0, #1
   3ee10:	mov	r5, r6
   3ee14:	str	r1, [r4, #20]
   3ee18:	mov	r1, #10
   3ee1c:	strb	r1, [r0]
   3ee20:	ldr	r0, [r4, #20]
   3ee24:	ldrb	r2, [r4, #25]
   3ee28:	ldr	r3, [r4, #32]
   3ee2c:	ldr	r1, [r4, #16]
   3ee30:	mla	r6, r3, r2, r0
   3ee34:	mul	r7, r3, r2
   3ee38:	cmp	r6, r1
   3ee3c:	bls	3eee4 <flatcc_json_printer_union_field@@Base+0x1a0>
   3ee40:	cmp	r0, r1
   3ee44:	mov	r6, r5
   3ee48:	bcc	3ee64 <flatcc_json_printer_union_field@@Base+0x120>
   3ee4c:	ldr	r2, [r4, #44]	; 0x2c
   3ee50:	mov	r0, r4
   3ee54:	mov	r1, #0
   3ee58:	blx	r2
   3ee5c:	ldr	r1, [r4, #16]
   3ee60:	ldr	r0, [r4, #20]
   3ee64:	sub	r5, r1, r0
   3ee68:	cmp	r5, r7
   3ee6c:	bcs	3eeb0 <flatcc_json_printer_union_field@@Base+0x16c>
   3ee70:	mov	r1, #32
   3ee74:	mov	r2, r5
   3ee78:	bl	14eec <memset@plt>
   3ee7c:	ldr	r0, [r4, #20]
   3ee80:	ldr	r2, [r4, #44]	; 0x2c
   3ee84:	mov	r1, #0
   3ee88:	add	r0, r0, r5
   3ee8c:	str	r0, [r4, #20]
   3ee90:	mov	r0, r4
   3ee94:	blx	r2
   3ee98:	ldr	r1, [r4, #16]
   3ee9c:	ldr	r0, [r4, #20]
   3eea0:	sub	r7, r7, r5
   3eea4:	sub	r5, r1, r0
   3eea8:	cmp	r7, r5
   3eeac:	bhi	3ee70 <flatcc_json_printer_union_field@@Base+0x12c>
   3eeb0:	mov	r1, #32
   3eeb4:	mov	r2, r7
   3eeb8:	bl	14eec <memset@plt>
   3eebc:	b	3eef4 <flatcc_json_printer_union_field@@Base+0x1b0>
   3eec0:	ldr	r1, [r4, #16]
   3eec4:	cmp	r0, r1
   3eec8:	bcc	3ef00 <flatcc_json_printer_union_field@@Base+0x1bc>
   3eecc:	ldr	r2, [r4, #44]	; 0x2c
   3eed0:	mov	r0, r4
   3eed4:	mov	r1, #0
   3eed8:	blx	r2
   3eedc:	ldr	r0, [r4, #20]
   3eee0:	b	3ef00 <flatcc_json_printer_union_field@@Base+0x1bc>
   3eee4:	mov	r1, #32
   3eee8:	mov	r2, r7
   3eeec:	bl	14eec <memset@plt>
   3eef0:	mov	r6, r5
   3eef4:	ldr	r0, [r4, #20]
   3eef8:	add	r0, r0, r7
   3eefc:	str	r0, [r4, #20]
   3ef00:	mov	r1, #34	; 0x22
   3ef04:	strb	r1, [r0]
   3ef08:	ldrb	r2, [r4, #26]
   3ef0c:	ldr	r0, [r4, #20]
   3ef10:	ldr	r1, [r4, #16]
   3ef14:	cmp	r2, #0
   3ef18:	addeq	r0, r0, #1
   3ef1c:	add	r2, r0, r8
   3ef20:	str	r0, [r4, #20]
   3ef24:	cmp	r2, r1
   3ef28:	bcs	3ef40 <flatcc_json_printer_union_field@@Base+0x1fc>
   3ef2c:	mov	r1, sl
   3ef30:	mov	r2, r8
   3ef34:	bl	14e5c <memcpy@plt>
   3ef38:	mov	r7, r8
   3ef3c:	b	3efdc <flatcc_json_printer_union_field@@Base+0x298>
   3ef40:	cmp	r0, r1
   3ef44:	mov	r7, r8
   3ef48:	str	r6, [sp]
   3ef4c:	bcc	3ef68 <flatcc_json_printer_union_field@@Base+0x224>
   3ef50:	ldr	r2, [r4, #44]	; 0x2c
   3ef54:	mov	r0, r4
   3ef58:	mov	r1, #0
   3ef5c:	blx	r2
   3ef60:	ldr	r1, [r4, #16]
   3ef64:	ldr	r0, [r4, #20]
   3ef68:	sub	r8, r1, r0
   3ef6c:	mov	r6, sl
   3ef70:	mov	r5, r7
   3ef74:	cmp	r8, r7
   3ef78:	bcs	3efc8 <flatcc_json_printer_union_field@@Base+0x284>
   3ef7c:	mov	r7, r5
   3ef80:	mov	r6, sl
   3ef84:	mov	r1, r6
   3ef88:	mov	r2, r8
   3ef8c:	bl	14e5c <memcpy@plt>
   3ef90:	ldr	r0, [r4, #20]
   3ef94:	ldr	r2, [r4, #44]	; 0x2c
   3ef98:	mov	r1, #0
   3ef9c:	add	r0, r0, r8
   3efa0:	str	r0, [r4, #20]
   3efa4:	mov	r0, r4
   3efa8:	blx	r2
   3efac:	ldr	r1, [r4, #16]
   3efb0:	ldr	r0, [r4, #20]
   3efb4:	sub	r7, r7, r8
   3efb8:	add	r6, r6, r8
   3efbc:	sub	r8, r1, r0
   3efc0:	cmp	r7, r8
   3efc4:	bhi	3ef84 <flatcc_json_printer_union_field@@Base+0x240>
   3efc8:	mov	r1, r6
   3efcc:	mov	r2, r7
   3efd0:	bl	14e5c <memcpy@plt>
   3efd4:	ldr	r6, [sp]
   3efd8:	mov	r8, r5
   3efdc:	ldr	r0, [r4, #20]
   3efe0:	ldr	r1, [r4, #16]
   3efe4:	add	r0, r0, r7
   3efe8:	add	r2, r0, #5
   3efec:	str	r0, [r4, #20]
   3eff0:	cmp	r2, r1
   3eff4:	bcs	3f014 <flatcc_json_printer_union_field@@Base+0x2d0>
   3eff8:	mov	r1, #101	; 0x65
   3effc:	mov	r7, #5
   3f000:	strb	r1, [r0, #4]
   3f004:	movw	r1, #29791	; 0x745f
   3f008:	movt	r1, #28793	; 0x7079
   3f00c:	str	r1, [r0]
   3f010:	b	3f0b8 <flatcc_json_printer_union_field@@Base+0x374>
   3f014:	cmp	r0, r1
   3f018:	bcc	3f034 <flatcc_json_printer_union_field@@Base+0x2f0>
   3f01c:	ldr	r2, [r4, #44]	; 0x2c
   3f020:	mov	r0, r4
   3f024:	mov	r1, #0
   3f028:	blx	r2
   3f02c:	ldr	r1, [r4, #16]
   3f030:	ldr	r0, [r4, #20]
   3f034:	sub	r5, r1, r0
   3f038:	mov	r8, r6
   3f03c:	cmp	r5, #4
   3f040:	bhi	3f098 <flatcc_json_printer_union_field@@Base+0x354>
   3f044:	movw	r6, #26776	; 0x6898
   3f048:	mov	r7, #5
   3f04c:	movt	r6, #4
   3f050:	mov	r1, r6
   3f054:	mov	r2, r5
   3f058:	bl	14e5c <memcpy@plt>
   3f05c:	ldr	r0, [r4, #20]
   3f060:	ldr	r2, [r4, #44]	; 0x2c
   3f064:	mov	r1, #0
   3f068:	add	r0, r0, r5
   3f06c:	str	r0, [r4, #20]
   3f070:	mov	r0, r4
   3f074:	blx	r2
   3f078:	ldr	r1, [r4, #16]
   3f07c:	ldr	r0, [r4, #20]
   3f080:	sub	r7, r7, r5
   3f084:	add	r6, r6, r5
   3f088:	sub	r5, r1, r0
   3f08c:	cmp	r7, r5
   3f090:	bhi	3f050 <flatcc_json_printer_union_field@@Base+0x30c>
   3f094:	b	3f0a4 <flatcc_json_printer_union_field@@Base+0x360>
   3f098:	movw	r6, #26776	; 0x6898
   3f09c:	mov	r7, #5
   3f0a0:	movt	r6, #4
   3f0a4:	mov	r1, r6
   3f0a8:	mov	r2, r7
   3f0ac:	bl	14e5c <memcpy@plt>
   3f0b0:	mov	r6, r8
   3f0b4:	ldr	r8, [fp, #8]
   3f0b8:	ldr	r0, [r4, #20]
   3f0bc:	add	r1, r0, r7
   3f0c0:	str	r1, [r4, #20]
   3f0c4:	mov	r1, #34	; 0x22
   3f0c8:	strb	r1, [r0, r7]
   3f0cc:	ldrb	r0, [r4, #26]
   3f0d0:	ldr	r1, [r4, #20]
   3f0d4:	cmp	r0, #0
   3f0d8:	addeq	r1, r1, #1
   3f0dc:	add	r0, r1, #1
   3f0e0:	str	r0, [r4, #20]
   3f0e4:	mov	r0, #58	; 0x3a
   3f0e8:	strb	r0, [r1]
   3f0ec:	mov	r1, #32
   3f0f0:	ldr	r0, [r4, #20]
   3f0f4:	strb	r1, [r0]
   3f0f8:	ldrb	r0, [r4, #25]
   3f0fc:	ldr	r1, [r4, #20]
   3f100:	cmp	r0, #0
   3f104:	addne	r1, r1, #1
   3f108:	str	r1, [r4, #20]
   3f10c:	ldrb	r0, [r4, #27]
   3f110:	cmp	r0, #0
   3f114:	beq	3f130 <flatcc_json_printer_union_field@@Base+0x3ec>
   3f118:	mov	r0, r6
   3f11c:	bl	35820 <flatcc_json_printer_uint8@@Base+0x2c>
   3f120:	ldr	r1, [r4, #20]
   3f124:	add	r0, r1, r0
   3f128:	str	r0, [r4, #20]
   3f12c:	b	3f140 <flatcc_json_printer_union_field@@Base+0x3fc>
   3f130:	ldr	r2, [fp, #12]
   3f134:	mov	r0, r4
   3f138:	mov	r1, r6
   3f13c:	blx	r2
   3f140:	cmp	r6, #0
   3f144:	beq	3edb4 <flatcc_json_printer_union_field@@Base+0x70>
   3f148:	ldr	r0, [r4, #20]
   3f14c:	ldr	r5, [fp, #16]
   3f150:	mov	r2, r8
   3f154:	add	r1, r0, #1
   3f158:	str	r1, [r4, #20]
   3f15c:	mov	r1, #44	; 0x2c
   3f160:	strb	r1, [r0]
   3f164:	mov	r0, r4
   3f168:	mov	r1, sl
   3f16c:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3f170:	ldr	r0, [r9, #12]
   3f174:	ldr	r1, [sp, #4]
   3f178:	strb	r6, [sp, #16]
   3f17c:	str	r1, [sp, #8]
   3f180:	str	r0, [sp, #12]
   3f184:	add	r1, sp, #8
   3f188:	mov	r0, r4
   3f18c:	blx	r5
   3f190:	b	3edb4 <flatcc_json_printer_union_field@@Base+0x70>

0003f194 <flatcc_json_printer_union_table@@Base>:
   3f194:	push	{r4, r5, r6, sl, fp, lr}
   3f198:	add	fp, sp, #16
   3f19c:	sub	sp, sp, #24
   3f1a0:	mov	r4, r0
   3f1a4:	ldr	r0, [r1, #4]
   3f1a8:	subs	r0, r0, #1
   3f1ac:	beq	3f2ec <flatcc_json_printer_union_table@@Base+0x158>
   3f1b0:	ldr	r1, [r1]
   3f1b4:	ldr	r6, [r4, #32]
   3f1b8:	ldr	r3, [r1]
   3f1bc:	add	r6, r6, #1
   3f1c0:	add	r1, r1, r3
   3f1c4:	ldr	r3, [r4, #20]
   3f1c8:	str	r6, [r4, #32]
   3f1cc:	add	r6, r3, #1
   3f1d0:	str	r6, [r4, #20]
   3f1d4:	mov	r6, #123	; 0x7b
   3f1d8:	strb	r6, [r3]
   3f1dc:	str	r0, [sp, #16]
   3f1e0:	mov	r0, #0
   3f1e4:	str	r0, [sp, #20]
   3f1e8:	str	r1, [sp, #4]
   3f1ec:	ldr	r0, [r1]
   3f1f0:	sub	r3, r1, r0
   3f1f4:	str	r3, [sp, #8]
   3f1f8:	ldrh	r0, [r1, -r0]
   3f1fc:	add	r1, sp, #4
   3f200:	str	r0, [sp, #12]
   3f204:	mov	r0, r4
   3f208:	blx	r2
   3f20c:	ldrb	r1, [r4, #25]
   3f210:	ldr	r0, [r4, #20]
   3f214:	cmp	r1, #0
   3f218:	beq	3f2d8 <flatcc_json_printer_union_table@@Base+0x144>
   3f21c:	add	r1, r0, #1
   3f220:	str	r1, [r4, #20]
   3f224:	mov	r1, #10
   3f228:	strb	r1, [r0]
   3f22c:	ldr	r0, [r4, #32]
   3f230:	sub	r2, r0, #1
   3f234:	str	r2, [r4, #32]
   3f238:	ldrb	r3, [r4, #25]
   3f23c:	ldr	r0, [r4, #20]
   3f240:	ldr	r1, [r4, #16]
   3f244:	mla	r6, r2, r3, r0
   3f248:	mul	r5, r2, r3
   3f24c:	cmp	r6, r1
   3f250:	bls	3f2c0 <flatcc_json_printer_union_table@@Base+0x12c>
   3f254:	cmp	r0, r1
   3f258:	bcc	3f274 <flatcc_json_printer_union_table@@Base+0xe0>
   3f25c:	ldr	r2, [r4, #44]	; 0x2c
   3f260:	mov	r0, r4
   3f264:	mov	r1, #0
   3f268:	blx	r2
   3f26c:	ldr	r1, [r4, #16]
   3f270:	ldr	r0, [r4, #20]
   3f274:	sub	r6, r1, r0
   3f278:	cmp	r6, r5
   3f27c:	bcs	3f2c0 <flatcc_json_printer_union_table@@Base+0x12c>
   3f280:	mov	r1, #32
   3f284:	mov	r2, r6
   3f288:	bl	14eec <memset@plt>
   3f28c:	ldr	r0, [r4, #20]
   3f290:	ldr	r2, [r4, #44]	; 0x2c
   3f294:	mov	r1, #0
   3f298:	add	r0, r0, r6
   3f29c:	str	r0, [r4, #20]
   3f2a0:	mov	r0, r4
   3f2a4:	blx	r2
   3f2a8:	ldr	r1, [r4, #16]
   3f2ac:	ldr	r0, [r4, #20]
   3f2b0:	sub	r5, r5, r6
   3f2b4:	sub	r6, r1, r0
   3f2b8:	cmp	r5, r6
   3f2bc:	bhi	3f280 <flatcc_json_printer_union_table@@Base+0xec>
   3f2c0:	mov	r1, #32
   3f2c4:	mov	r2, r5
   3f2c8:	bl	14eec <memset@plt>
   3f2cc:	ldr	r0, [r4, #20]
   3f2d0:	add	r0, r0, r5
   3f2d4:	str	r0, [r4, #20]
   3f2d8:	add	r1, r0, #1
   3f2dc:	str	r1, [r4, #20]
   3f2e0:	mov	r1, #125	; 0x7d
   3f2e4:	strb	r1, [r0]
   3f2e8:	b	3f2fc <flatcc_json_printer_union_table@@Base+0x168>
   3f2ec:	ldr	r0, [r4, #36]	; 0x24
   3f2f0:	cmp	r0, #0
   3f2f4:	moveq	r0, #2
   3f2f8:	streq	r0, [r4, #36]	; 0x24
   3f2fc:	sub	sp, fp, #16
   3f300:	pop	{r4, r5, r6, sl, fp, pc}

0003f304 <flatcc_json_printer_union_struct@@Base>:
   3f304:	push	{r4, r5, r6, sl, fp, lr}
   3f308:	add	fp, sp, #16
   3f30c:	mov	r4, r0
   3f310:	ldr	r0, [r0, #20]
   3f314:	ldr	r3, [r4, #32]
   3f318:	add	r3, r3, #1
   3f31c:	str	r3, [r4, #32]
   3f320:	add	r3, r0, #1
   3f324:	str	r3, [r4, #20]
   3f328:	mov	r3, #123	; 0x7b
   3f32c:	strb	r3, [r0]
   3f330:	ldr	r0, [r1]
   3f334:	ldr	r1, [r0]
   3f338:	add	r1, r0, r1
   3f33c:	mov	r0, r4
   3f340:	blx	r2
   3f344:	ldrb	r1, [r4, #25]
   3f348:	ldr	r0, [r4, #20]
   3f34c:	cmp	r1, #0
   3f350:	beq	3f410 <flatcc_json_printer_union_struct@@Base+0x10c>
   3f354:	add	r1, r0, #1
   3f358:	str	r1, [r4, #20]
   3f35c:	mov	r1, #10
   3f360:	strb	r1, [r0]
   3f364:	ldr	r0, [r4, #32]
   3f368:	sub	r2, r0, #1
   3f36c:	str	r2, [r4, #32]
   3f370:	ldrb	r3, [r4, #25]
   3f374:	ldr	r0, [r4, #20]
   3f378:	ldr	r1, [r4, #16]
   3f37c:	mla	r6, r2, r3, r0
   3f380:	mul	r5, r2, r3
   3f384:	cmp	r6, r1
   3f388:	bls	3f3f8 <flatcc_json_printer_union_struct@@Base+0xf4>
   3f38c:	cmp	r0, r1
   3f390:	bcc	3f3ac <flatcc_json_printer_union_struct@@Base+0xa8>
   3f394:	ldr	r2, [r4, #44]	; 0x2c
   3f398:	mov	r0, r4
   3f39c:	mov	r1, #0
   3f3a0:	blx	r2
   3f3a4:	ldr	r1, [r4, #16]
   3f3a8:	ldr	r0, [r4, #20]
   3f3ac:	sub	r6, r1, r0
   3f3b0:	cmp	r6, r5
   3f3b4:	bcs	3f3f8 <flatcc_json_printer_union_struct@@Base+0xf4>
   3f3b8:	mov	r1, #32
   3f3bc:	mov	r2, r6
   3f3c0:	bl	14eec <memset@plt>
   3f3c4:	ldr	r0, [r4, #20]
   3f3c8:	ldr	r2, [r4, #44]	; 0x2c
   3f3cc:	mov	r1, #0
   3f3d0:	add	r0, r0, r6
   3f3d4:	str	r0, [r4, #20]
   3f3d8:	mov	r0, r4
   3f3dc:	blx	r2
   3f3e0:	ldr	r1, [r4, #16]
   3f3e4:	ldr	r0, [r4, #20]
   3f3e8:	sub	r5, r5, r6
   3f3ec:	sub	r6, r1, r0
   3f3f0:	cmp	r5, r6
   3f3f4:	bhi	3f3b8 <flatcc_json_printer_union_struct@@Base+0xb4>
   3f3f8:	mov	r1, #32
   3f3fc:	mov	r2, r5
   3f400:	bl	14eec <memset@plt>
   3f404:	ldr	r0, [r4, #20]
   3f408:	add	r0, r0, r5
   3f40c:	str	r0, [r4, #20]
   3f410:	add	r1, r0, #1
   3f414:	str	r1, [r4, #20]
   3f418:	mov	r1, #125	; 0x7d
   3f41c:	strb	r1, [r0]
   3f420:	pop	{r4, r5, r6, sl, fp, pc}

0003f424 <flatcc_json_printer_union_string@@Base>:
   3f424:	ldr	r1, [r1]
   3f428:	ldr	r2, [r1]
   3f42c:	ldr	r2, [r1, r2]!
   3f430:	add	r1, r1, #4
   3f434:	b	35388 <flatcc_json_printer_string@@Base+0x4>

0003f438 <flatcc_json_printer_embedded_struct_field@@Base>:
   3f438:	push	{r4, r5, r6, r7, fp, lr}
   3f43c:	add	fp, sp, #16
   3f440:	add	r7, fp, #8
   3f444:	mov	r5, r3
   3f448:	mov	r3, r1
   3f44c:	mov	r6, r2
   3f450:	mov	r4, r0
   3f454:	ldm	r7, {r1, r2, r7}
   3f458:	cmp	r3, #0
   3f45c:	beq	3f474 <flatcc_json_printer_embedded_struct_field@@Base+0x3c>
   3f460:	ldr	r0, [r4, #20]
   3f464:	add	r3, r0, #1
   3f468:	str	r3, [r4, #20]
   3f46c:	mov	r3, #44	; 0x2c
   3f470:	strb	r3, [r0]
   3f474:	mov	r0, r4
   3f478:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3f47c:	ldr	r1, [r4, #32]
   3f480:	ldr	r0, [r4, #20]
   3f484:	add	r1, r1, #1
   3f488:	str	r1, [r4, #32]
   3f48c:	add	r1, r0, #1
   3f490:	str	r1, [r4, #20]
   3f494:	mov	r1, #123	; 0x7b
   3f498:	strb	r1, [r0]
   3f49c:	add	r1, r6, r5
   3f4a0:	mov	r0, r4
   3f4a4:	blx	r7
   3f4a8:	ldrb	r1, [r4, #25]
   3f4ac:	ldr	r0, [r4, #20]
   3f4b0:	cmp	r1, #0
   3f4b4:	beq	3f574 <flatcc_json_printer_embedded_struct_field@@Base+0x13c>
   3f4b8:	add	r1, r0, #1
   3f4bc:	str	r1, [r4, #20]
   3f4c0:	mov	r1, #10
   3f4c4:	strb	r1, [r0]
   3f4c8:	ldr	r0, [r4, #32]
   3f4cc:	sub	r2, r0, #1
   3f4d0:	str	r2, [r4, #32]
   3f4d4:	ldrb	r3, [r4, #25]
   3f4d8:	ldr	r0, [r4, #20]
   3f4dc:	ldr	r1, [r4, #16]
   3f4e0:	mla	r7, r2, r3, r0
   3f4e4:	mul	r5, r2, r3
   3f4e8:	cmp	r7, r1
   3f4ec:	bls	3f55c <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   3f4f0:	cmp	r0, r1
   3f4f4:	bcc	3f510 <flatcc_json_printer_embedded_struct_field@@Base+0xd8>
   3f4f8:	ldr	r2, [r4, #44]	; 0x2c
   3f4fc:	mov	r0, r4
   3f500:	mov	r1, #0
   3f504:	blx	r2
   3f508:	ldr	r1, [r4, #16]
   3f50c:	ldr	r0, [r4, #20]
   3f510:	sub	r6, r1, r0
   3f514:	cmp	r6, r5
   3f518:	bcs	3f55c <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   3f51c:	mov	r1, #32
   3f520:	mov	r2, r6
   3f524:	bl	14eec <memset@plt>
   3f528:	ldr	r0, [r4, #20]
   3f52c:	ldr	r2, [r4, #44]	; 0x2c
   3f530:	mov	r1, #0
   3f534:	add	r0, r0, r6
   3f538:	str	r0, [r4, #20]
   3f53c:	mov	r0, r4
   3f540:	blx	r2
   3f544:	ldr	r1, [r4, #16]
   3f548:	ldr	r0, [r4, #20]
   3f54c:	sub	r5, r5, r6
   3f550:	sub	r6, r1, r0
   3f554:	cmp	r5, r6
   3f558:	bhi	3f51c <flatcc_json_printer_embedded_struct_field@@Base+0xe4>
   3f55c:	mov	r1, #32
   3f560:	mov	r2, r5
   3f564:	bl	14eec <memset@plt>
   3f568:	ldr	r0, [r4, #20]
   3f56c:	add	r0, r0, r5
   3f570:	str	r0, [r4, #20]
   3f574:	add	r1, r0, #1
   3f578:	str	r1, [r4, #20]
   3f57c:	mov	r1, #125	; 0x7d
   3f580:	strb	r1, [r0]
   3f584:	pop	{r4, r5, r6, r7, fp, pc}

0003f588 <flatcc_json_printer_struct_field@@Base>:
   3f588:	push	{r4, r5, r6, r7, fp, lr}
   3f58c:	add	fp, sp, #16
   3f590:	mov	r4, r0
   3f594:	mov	r0, #4
   3f598:	add	r0, r0, r2, lsl #1
   3f59c:	ldr	r2, [r1, #8]
   3f5a0:	cmp	r0, r2
   3f5a4:	popge	{r4, r5, r6, r7, fp, pc}
   3f5a8:	ldr	r2, [r1, #4]
   3f5ac:	add	r0, r2, r0
   3f5b0:	ldrh	r0, [r0]
   3f5b4:	cmp	r0, #0
   3f5b8:	ldrne	r2, [r1]
   3f5bc:	addsne	r5, r2, r0
   3f5c0:	bne	3f5c8 <flatcc_json_printer_struct_field@@Base+0x40>
   3f5c4:	pop	{r4, r5, r6, r7, fp, pc}
   3f5c8:	ldr	r0, [r1, #16]
   3f5cc:	ldr	r7, [fp, #12]
   3f5d0:	ldr	r2, [fp, #8]
   3f5d4:	add	r6, r0, #1
   3f5d8:	cmp	r0, #0
   3f5dc:	str	r6, [r1, #16]
   3f5e0:	beq	3f5f8 <flatcc_json_printer_struct_field@@Base+0x70>
   3f5e4:	ldr	r0, [r4, #20]
   3f5e8:	add	r1, r0, #1
   3f5ec:	str	r1, [r4, #20]
   3f5f0:	mov	r1, #44	; 0x2c
   3f5f4:	strb	r1, [r0]
   3f5f8:	mov	r0, r4
   3f5fc:	mov	r1, r3
   3f600:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3f604:	ldr	r1, [r4, #32]
   3f608:	ldr	r0, [r4, #20]
   3f60c:	add	r1, r1, #1
   3f610:	str	r1, [r4, #32]
   3f614:	add	r1, r0, #1
   3f618:	str	r1, [r4, #20]
   3f61c:	mov	r1, #123	; 0x7b
   3f620:	strb	r1, [r0]
   3f624:	mov	r0, r4
   3f628:	mov	r1, r5
   3f62c:	blx	r7
   3f630:	ldrb	r1, [r4, #25]
   3f634:	ldr	r0, [r4, #20]
   3f638:	cmp	r1, #0
   3f63c:	beq	3f6fc <flatcc_json_printer_struct_field@@Base+0x174>
   3f640:	add	r1, r0, #1
   3f644:	str	r1, [r4, #20]
   3f648:	mov	r1, #10
   3f64c:	strb	r1, [r0]
   3f650:	ldr	r0, [r4, #32]
   3f654:	sub	r2, r0, #1
   3f658:	str	r2, [r4, #32]
   3f65c:	ldrb	r3, [r4, #25]
   3f660:	ldr	r0, [r4, #20]
   3f664:	ldr	r1, [r4, #16]
   3f668:	mla	r7, r2, r3, r0
   3f66c:	mul	r5, r2, r3
   3f670:	cmp	r7, r1
   3f674:	bls	3f6e4 <flatcc_json_printer_struct_field@@Base+0x15c>
   3f678:	cmp	r0, r1
   3f67c:	bcc	3f698 <flatcc_json_printer_struct_field@@Base+0x110>
   3f680:	ldr	r2, [r4, #44]	; 0x2c
   3f684:	mov	r0, r4
   3f688:	mov	r1, #0
   3f68c:	blx	r2
   3f690:	ldr	r1, [r4, #16]
   3f694:	ldr	r0, [r4, #20]
   3f698:	sub	r6, r1, r0
   3f69c:	cmp	r6, r5
   3f6a0:	bcs	3f6e4 <flatcc_json_printer_struct_field@@Base+0x15c>
   3f6a4:	mov	r1, #32
   3f6a8:	mov	r2, r6
   3f6ac:	bl	14eec <memset@plt>
   3f6b0:	ldr	r0, [r4, #20]
   3f6b4:	ldr	r2, [r4, #44]	; 0x2c
   3f6b8:	mov	r1, #0
   3f6bc:	add	r0, r0, r6
   3f6c0:	str	r0, [r4, #20]
   3f6c4:	mov	r0, r4
   3f6c8:	blx	r2
   3f6cc:	ldr	r1, [r4, #16]
   3f6d0:	ldr	r0, [r4, #20]
   3f6d4:	sub	r5, r5, r6
   3f6d8:	sub	r6, r1, r0
   3f6dc:	cmp	r5, r6
   3f6e0:	bhi	3f6a4 <flatcc_json_printer_struct_field@@Base+0x11c>
   3f6e4:	mov	r1, #32
   3f6e8:	mov	r2, r5
   3f6ec:	bl	14eec <memset@plt>
   3f6f0:	ldr	r0, [r4, #20]
   3f6f4:	add	r0, r0, r5
   3f6f8:	str	r0, [r4, #20]
   3f6fc:	add	r1, r0, #1
   3f700:	str	r1, [r4, #20]
   3f704:	mov	r1, #125	; 0x7d
   3f708:	strb	r1, [r0]
   3f70c:	pop	{r4, r5, r6, r7, fp, pc}

0003f710 <flatcc_json_printer_struct_as_root@@Base>:
   3f710:	push	{r4, r5, r6, sl, fp, lr}
   3f714:	add	fp, sp, #16
   3f718:	mov	r5, r1
   3f71c:	mov	r4, r0
   3f720:	bl	3f898 <flatcc_json_printer_struct_as_root@@Base+0x188>
   3f724:	ldr	r1, [r4, #32]
   3f728:	ldr	r0, [r4, #20]
   3f72c:	ldr	r2, [fp, #8]
   3f730:	add	r1, r1, #1
   3f734:	str	r1, [r4, #32]
   3f738:	add	r1, r0, #1
   3f73c:	str	r1, [r4, #20]
   3f740:	mov	r1, #123	; 0x7b
   3f744:	strb	r1, [r0]
   3f748:	ldr	r0, [r5]
   3f74c:	add	r1, r5, r0
   3f750:	mov	r0, r4
   3f754:	blx	r2
   3f758:	ldrb	r1, [r4, #25]
   3f75c:	ldr	r0, [r4, #20]
   3f760:	cmp	r1, #0
   3f764:	beq	3f824 <flatcc_json_printer_struct_as_root@@Base+0x114>
   3f768:	add	r1, r0, #1
   3f76c:	str	r1, [r4, #20]
   3f770:	mov	r1, #10
   3f774:	strb	r1, [r0]
   3f778:	ldr	r0, [r4, #32]
   3f77c:	sub	r2, r0, #1
   3f780:	str	r2, [r4, #32]
   3f784:	ldrb	r3, [r4, #25]
   3f788:	ldr	r0, [r4, #20]
   3f78c:	ldr	r1, [r4, #16]
   3f790:	mla	r6, r2, r3, r0
   3f794:	mul	r5, r2, r3
   3f798:	cmp	r6, r1
   3f79c:	bls	3f80c <flatcc_json_printer_struct_as_root@@Base+0xfc>
   3f7a0:	cmp	r0, r1
   3f7a4:	bcc	3f7c0 <flatcc_json_printer_struct_as_root@@Base+0xb0>
   3f7a8:	ldr	r2, [r4, #44]	; 0x2c
   3f7ac:	mov	r0, r4
   3f7b0:	mov	r1, #0
   3f7b4:	blx	r2
   3f7b8:	ldr	r1, [r4, #16]
   3f7bc:	ldr	r0, [r4, #20]
   3f7c0:	sub	r6, r1, r0
   3f7c4:	cmp	r6, r5
   3f7c8:	bcs	3f80c <flatcc_json_printer_struct_as_root@@Base+0xfc>
   3f7cc:	mov	r1, #32
   3f7d0:	mov	r2, r6
   3f7d4:	bl	14eec <memset@plt>
   3f7d8:	ldr	r0, [r4, #20]
   3f7dc:	ldr	r2, [r4, #44]	; 0x2c
   3f7e0:	mov	r1, #0
   3f7e4:	add	r0, r0, r6
   3f7e8:	str	r0, [r4, #20]
   3f7ec:	mov	r0, r4
   3f7f0:	blx	r2
   3f7f4:	ldr	r1, [r4, #16]
   3f7f8:	ldr	r0, [r4, #20]
   3f7fc:	sub	r5, r5, r6
   3f800:	sub	r6, r1, r0
   3f804:	cmp	r5, r6
   3f808:	bhi	3f7cc <flatcc_json_printer_struct_as_root@@Base+0xbc>
   3f80c:	mov	r1, #32
   3f810:	mov	r2, r5
   3f814:	bl	14eec <memset@plt>
   3f818:	ldr	r0, [r4, #20]
   3f81c:	add	r0, r0, r5
   3f820:	str	r0, [r4, #20]
   3f824:	add	r1, r0, #1
   3f828:	str	r1, [r4, #20]
   3f82c:	mov	r1, #125	; 0x7d
   3f830:	strb	r1, [r0]
   3f834:	ldrb	r0, [r4, #25]
   3f838:	cmp	r0, #0
   3f83c:	beq	3f860 <flatcc_json_printer_struct_as_root@@Base+0x150>
   3f840:	ldr	r0, [r4, #32]
   3f844:	cmp	r0, #0
   3f848:	bne	3f860 <flatcc_json_printer_struct_as_root@@Base+0x150>
   3f84c:	ldr	r0, [r4, #20]
   3f850:	add	r1, r0, #1
   3f854:	str	r1, [r4, #20]
   3f858:	mov	r1, #10
   3f85c:	strb	r1, [r0]
   3f860:	ldr	r2, [r4, #44]	; 0x2c
   3f864:	mov	r0, r4
   3f868:	mov	r1, #1
   3f86c:	blx	r2
   3f870:	ldr	r1, [r4, #36]	; 0x24
   3f874:	mvn	r0, #0
   3f878:	cmp	r1, #0
   3f87c:	popne	{r4, r5, r6, sl, fp, pc}
   3f880:	ldr	r1, [r4, #12]
   3f884:	ldr	r2, [r4, #20]
   3f888:	ldr	r0, [r4]
   3f88c:	add	r1, r2, r1
   3f890:	sub	r0, r1, r0
   3f894:	pop	{r4, r5, r6, sl, fp, pc}
   3f898:	push	{r4, r5, fp, lr}
   3f89c:	add	fp, sp, #8
   3f8a0:	sub	sp, sp, #8
   3f8a4:	cmp	r1, #0
   3f8a8:	mov	r4, r0
   3f8ac:	mov	r0, #0
   3f8b0:	cmpne	r2, #7
   3f8b4:	str	r0, [sp, #4]
   3f8b8:	bls	3f8f8 <flatcc_json_printer_struct_as_root@@Base+0x1e8>
   3f8bc:	cmp	r3, #0
   3f8c0:	beq	3f8f0 <flatcc_json_printer_struct_as_root@@Base+0x1e0>
   3f8c4:	mov	r5, r1
   3f8c8:	add	r0, sp, #4
   3f8cc:	mov	r1, r3
   3f8d0:	mov	r2, #4
   3f8d4:	bl	14ef8 <strncpy@plt>
   3f8d8:	ldr	r0, [sp, #4]
   3f8dc:	cmp	r0, #0
   3f8e0:	beq	3f8f0 <flatcc_json_printer_struct_as_root@@Base+0x1e0>
   3f8e4:	ldr	r1, [r5, #4]
   3f8e8:	cmp	r1, r0
   3f8ec:	bne	3f928 <flatcc_json_printer_struct_as_root@@Base+0x218>
   3f8f0:	sub	sp, fp, #8
   3f8f4:	pop	{r4, r5, fp, pc}
   3f8f8:	ldr	r0, [r4, #36]	; 0x24
   3f8fc:	movw	r1, #26499	; 0x6783
   3f900:	movw	r3, #27674	; 0x6c1a
   3f904:	movw	r2, #1019	; 0x3fb
   3f908:	movt	r1, #4
   3f90c:	movt	r3, #4
   3f910:	cmp	r0, #0
   3f914:	moveq	r0, #1
   3f918:	streq	r0, [r4, #36]	; 0x24
   3f91c:	movw	r0, #27643	; 0x6bfb
   3f920:	movt	r0, #4
   3f924:	bl	14f40 <__assert_fail@plt>
   3f928:	ldr	r0, [r4, #36]	; 0x24
   3f92c:	movw	r1, #26499	; 0x6783
   3f930:	movw	r3, #27674	; 0x6c1a
   3f934:	movw	r2, #1028	; 0x404
   3f938:	movt	r1, #4
   3f93c:	movt	r3, #4
   3f940:	cmp	r0, #0
   3f944:	moveq	r0, #1
   3f948:	streq	r0, [r4, #36]	; 0x24
   3f94c:	movw	r0, #27753	; 0x6c69
   3f950:	movt	r0, #4
   3f954:	bl	14f40 <__assert_fail@plt>

0003f958 <flatcc_json_printer_table_as_root@@Base>:
   3f958:	push	{r4, r5, r6, sl, fp, lr}
   3f95c:	add	fp, sp, #16
   3f960:	sub	sp, sp, #24
   3f964:	mov	r5, r1
   3f968:	mov	r4, r0
   3f96c:	bl	3f898 <flatcc_json_printer_struct_as_root@@Base+0x188>
   3f970:	ldr	r2, [r4, #32]
   3f974:	ldr	r1, [r4, #20]
   3f978:	ldr	r0, [r5]
   3f97c:	add	r2, r2, #1
   3f980:	str	r2, [r4, #32]
   3f984:	add	r2, r1, #1
   3f988:	str	r2, [r4, #20]
   3f98c:	mov	r2, #123	; 0x7b
   3f990:	strb	r2, [r1]
   3f994:	mov	r1, #99	; 0x63
   3f998:	str	r1, [sp, #16]
   3f99c:	mov	r1, #0
   3f9a0:	str	r1, [sp, #20]
   3f9a4:	add	r1, r5, r0
   3f9a8:	str	r1, [sp, #4]
   3f9ac:	ldr	r0, [r5, r0]
   3f9b0:	sub	r2, r1, r0
   3f9b4:	str	r2, [sp, #8]
   3f9b8:	ldr	r2, [fp, #8]
   3f9bc:	ldrh	r0, [r1, -r0]
   3f9c0:	add	r1, sp, #4
   3f9c4:	str	r0, [sp, #12]
   3f9c8:	mov	r0, r4
   3f9cc:	blx	r2
   3f9d0:	ldrb	r1, [r4, #25]
   3f9d4:	ldr	r0, [r4, #20]
   3f9d8:	cmp	r1, #0
   3f9dc:	beq	3fa9c <flatcc_json_printer_table_as_root@@Base+0x144>
   3f9e0:	add	r1, r0, #1
   3f9e4:	str	r1, [r4, #20]
   3f9e8:	mov	r1, #10
   3f9ec:	strb	r1, [r0]
   3f9f0:	ldr	r0, [r4, #32]
   3f9f4:	sub	r2, r0, #1
   3f9f8:	str	r2, [r4, #32]
   3f9fc:	ldrb	r3, [r4, #25]
   3fa00:	ldr	r0, [r4, #20]
   3fa04:	ldr	r1, [r4, #16]
   3fa08:	mla	r6, r2, r3, r0
   3fa0c:	mul	r5, r2, r3
   3fa10:	cmp	r6, r1
   3fa14:	bls	3fa84 <flatcc_json_printer_table_as_root@@Base+0x12c>
   3fa18:	cmp	r0, r1
   3fa1c:	bcc	3fa38 <flatcc_json_printer_table_as_root@@Base+0xe0>
   3fa20:	ldr	r2, [r4, #44]	; 0x2c
   3fa24:	mov	r0, r4
   3fa28:	mov	r1, #0
   3fa2c:	blx	r2
   3fa30:	ldr	r1, [r4, #16]
   3fa34:	ldr	r0, [r4, #20]
   3fa38:	sub	r6, r1, r0
   3fa3c:	cmp	r6, r5
   3fa40:	bcs	3fa84 <flatcc_json_printer_table_as_root@@Base+0x12c>
   3fa44:	mov	r1, #32
   3fa48:	mov	r2, r6
   3fa4c:	bl	14eec <memset@plt>
   3fa50:	ldr	r0, [r4, #20]
   3fa54:	ldr	r2, [r4, #44]	; 0x2c
   3fa58:	mov	r1, #0
   3fa5c:	add	r0, r0, r6
   3fa60:	str	r0, [r4, #20]
   3fa64:	mov	r0, r4
   3fa68:	blx	r2
   3fa6c:	ldr	r1, [r4, #16]
   3fa70:	ldr	r0, [r4, #20]
   3fa74:	sub	r5, r5, r6
   3fa78:	sub	r6, r1, r0
   3fa7c:	cmp	r5, r6
   3fa80:	bhi	3fa44 <flatcc_json_printer_table_as_root@@Base+0xec>
   3fa84:	mov	r1, #32
   3fa88:	mov	r2, r5
   3fa8c:	bl	14eec <memset@plt>
   3fa90:	ldr	r0, [r4, #20]
   3fa94:	add	r0, r0, r5
   3fa98:	str	r0, [r4, #20]
   3fa9c:	add	r1, r0, #1
   3faa0:	str	r1, [r4, #20]
   3faa4:	mov	r1, #125	; 0x7d
   3faa8:	strb	r1, [r0]
   3faac:	ldrb	r0, [r4, #25]
   3fab0:	cmp	r0, #0
   3fab4:	beq	3fad8 <flatcc_json_printer_table_as_root@@Base+0x180>
   3fab8:	ldr	r0, [r4, #32]
   3fabc:	cmp	r0, #0
   3fac0:	bne	3fad8 <flatcc_json_printer_table_as_root@@Base+0x180>
   3fac4:	ldr	r0, [r4, #20]
   3fac8:	add	r1, r0, #1
   3facc:	str	r1, [r4, #20]
   3fad0:	mov	r1, #10
   3fad4:	strb	r1, [r0]
   3fad8:	ldr	r2, [r4, #44]	; 0x2c
   3fadc:	mov	r0, r4
   3fae0:	mov	r1, #1
   3fae4:	blx	r2
   3fae8:	ldr	r1, [r4, #36]	; 0x24
   3faec:	mvn	r0, #0
   3faf0:	cmp	r1, #0
   3faf4:	bne	3fb0c <flatcc_json_printer_table_as_root@@Base+0x1b4>
   3faf8:	ldr	r1, [r4, #12]
   3fafc:	ldr	r2, [r4, #20]
   3fb00:	ldr	r0, [r4]
   3fb04:	add	r1, r2, r1
   3fb08:	sub	r0, r1, r0
   3fb0c:	sub	sp, fp, #16
   3fb10:	pop	{r4, r5, r6, sl, fp, pc}

0003fb14 <flatcc_json_printer_struct_as_nested_root@@Base>:
   3fb14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3fb18:	add	fp, sp, #24
   3fb1c:	mov	r7, r1
   3fb20:	ldr	r1, [r1, #8]
   3fb24:	mov	r4, r0
   3fb28:	mov	r0, #4
   3fb2c:	add	r0, r0, r2, lsl #1
   3fb30:	cmp	r0, r1
   3fb34:	bge	3fb54 <flatcc_json_printer_struct_as_nested_root@@Base+0x40>
   3fb38:	ldr	r1, [r7, #4]
   3fb3c:	add	r0, r1, r0
   3fb40:	ldrh	r0, [r0]
   3fb44:	cmp	r0, #0
   3fb48:	ldrne	r1, [r7]
   3fb4c:	addsne	r0, r1, r0
   3fb50:	bne	3fb58 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   3fb54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3fb58:	ldr	r6, [r0]
   3fb5c:	mov	r5, r3
   3fb60:	ldr	r3, [fp, #12]
   3fb64:	ldr	r9, [fp, #16]
   3fb68:	ldr	r8, [fp, #8]
   3fb6c:	ldr	r2, [r6, r0]!
   3fb70:	mov	r0, r4
   3fb74:	mov	r1, r6
   3fb78:	bl	3f898 <flatcc_json_printer_struct_as_root@@Base+0x188>
   3fb7c:	ldr	r0, [r7, #16]
   3fb80:	add	r1, r0, #1
   3fb84:	cmp	r0, #0
   3fb88:	str	r1, [r7, #16]
   3fb8c:	beq	3fba4 <flatcc_json_printer_struct_as_nested_root@@Base+0x90>
   3fb90:	ldr	r0, [r4, #20]
   3fb94:	add	r1, r0, #1
   3fb98:	str	r1, [r4, #20]
   3fb9c:	mov	r1, #44	; 0x2c
   3fba0:	strb	r1, [r0]
   3fba4:	mov	r0, r4
   3fba8:	mov	r1, r5
   3fbac:	mov	r2, r8
   3fbb0:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3fbb4:	ldr	r1, [r4, #32]
   3fbb8:	ldr	r0, [r4, #20]
   3fbbc:	add	r1, r1, #1
   3fbc0:	str	r1, [r4, #32]
   3fbc4:	add	r1, r0, #1
   3fbc8:	str	r1, [r4, #20]
   3fbcc:	mov	r1, #123	; 0x7b
   3fbd0:	strb	r1, [r0]
   3fbd4:	ldr	r0, [r6]
   3fbd8:	add	r1, r6, r0
   3fbdc:	mov	r0, r4
   3fbe0:	blx	r9
   3fbe4:	ldrb	r1, [r4, #25]
   3fbe8:	ldr	r0, [r4, #20]
   3fbec:	cmp	r1, #0
   3fbf0:	beq	3fcb0 <flatcc_json_printer_struct_as_nested_root@@Base+0x19c>
   3fbf4:	add	r1, r0, #1
   3fbf8:	str	r1, [r4, #20]
   3fbfc:	mov	r1, #10
   3fc00:	strb	r1, [r0]
   3fc04:	ldr	r0, [r4, #32]
   3fc08:	sub	r2, r0, #1
   3fc0c:	str	r2, [r4, #32]
   3fc10:	ldrb	r3, [r4, #25]
   3fc14:	ldr	r0, [r4, #20]
   3fc18:	ldr	r1, [r4, #16]
   3fc1c:	mla	r7, r2, r3, r0
   3fc20:	mul	r5, r2, r3
   3fc24:	cmp	r7, r1
   3fc28:	bls	3fc98 <flatcc_json_printer_struct_as_nested_root@@Base+0x184>
   3fc2c:	cmp	r0, r1
   3fc30:	bcc	3fc4c <flatcc_json_printer_struct_as_nested_root@@Base+0x138>
   3fc34:	ldr	r2, [r4, #44]	; 0x2c
   3fc38:	mov	r0, r4
   3fc3c:	mov	r1, #0
   3fc40:	blx	r2
   3fc44:	ldr	r1, [r4, #16]
   3fc48:	ldr	r0, [r4, #20]
   3fc4c:	sub	r6, r1, r0
   3fc50:	cmp	r6, r5
   3fc54:	bcs	3fc98 <flatcc_json_printer_struct_as_nested_root@@Base+0x184>
   3fc58:	mov	r1, #32
   3fc5c:	mov	r2, r6
   3fc60:	bl	14eec <memset@plt>
   3fc64:	ldr	r0, [r4, #20]
   3fc68:	ldr	r2, [r4, #44]	; 0x2c
   3fc6c:	mov	r1, #0
   3fc70:	add	r0, r0, r6
   3fc74:	str	r0, [r4, #20]
   3fc78:	mov	r0, r4
   3fc7c:	blx	r2
   3fc80:	ldr	r1, [r4, #16]
   3fc84:	ldr	r0, [r4, #20]
   3fc88:	sub	r5, r5, r6
   3fc8c:	sub	r6, r1, r0
   3fc90:	cmp	r5, r6
   3fc94:	bhi	3fc58 <flatcc_json_printer_struct_as_nested_root@@Base+0x144>
   3fc98:	mov	r1, #32
   3fc9c:	mov	r2, r5
   3fca0:	bl	14eec <memset@plt>
   3fca4:	ldr	r0, [r4, #20]
   3fca8:	add	r0, r0, r5
   3fcac:	str	r0, [r4, #20]
   3fcb0:	add	r1, r0, #1
   3fcb4:	str	r1, [r4, #20]
   3fcb8:	mov	r1, #125	; 0x7d
   3fcbc:	strb	r1, [r0]
   3fcc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003fcc4 <flatcc_json_printer_table_as_nested_root@@Base>:
   3fcc4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3fcc8:	add	fp, sp, #24
   3fccc:	sub	sp, sp, #24
   3fcd0:	mov	r5, r1
   3fcd4:	ldr	r1, [r1, #8]
   3fcd8:	mov	r4, r0
   3fcdc:	mov	r0, #4
   3fce0:	add	r0, r0, r2, lsl #1
   3fce4:	cmp	r0, r1
   3fce8:	bge	3fd08 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   3fcec:	ldr	r1, [r5, #4]
   3fcf0:	add	r0, r1, r0
   3fcf4:	ldrh	r0, [r0]
   3fcf8:	cmp	r0, #0
   3fcfc:	ldrne	r1, [r5]
   3fd00:	addsne	r0, r1, r0
   3fd04:	bne	3fd10 <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   3fd08:	sub	sp, fp, #24
   3fd0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3fd10:	ldr	r1, [r0]
   3fd14:	mov	r6, r3
   3fd18:	ldr	r3, [fp, #12]
   3fd1c:	ldr	r8, [fp, #8]
   3fd20:	ldr	r2, [r1, r0]!
   3fd24:	mov	r0, r4
   3fd28:	add	r7, r1, #4
   3fd2c:	mov	r1, r7
   3fd30:	bl	3f898 <flatcc_json_printer_struct_as_root@@Base+0x188>
   3fd34:	ldr	r0, [r5, #16]
   3fd38:	add	r1, r0, #1
   3fd3c:	cmp	r0, #0
   3fd40:	str	r1, [r5, #16]
   3fd44:	beq	3fd5c <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   3fd48:	ldr	r0, [r4, #20]
   3fd4c:	add	r1, r0, #1
   3fd50:	str	r1, [r4, #20]
   3fd54:	mov	r1, #44	; 0x2c
   3fd58:	strb	r1, [r0]
   3fd5c:	mov	r0, r4
   3fd60:	mov	r1, r6
   3fd64:	mov	r2, r8
   3fd68:	bl	3667c <flatcc_json_printer_string_field@@Base+0x90>
   3fd6c:	ldr	r0, [r5, #12]
   3fd70:	subs	r0, r0, #1
   3fd74:	beq	3feb4 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   3fd78:	ldr	r1, [r7]
   3fd7c:	ldr	r3, [r4, #20]
   3fd80:	ldr	r2, [fp, #16]
   3fd84:	add	r1, r7, r1
   3fd88:	ldr	r7, [r4, #32]
   3fd8c:	add	r7, r7, #1
   3fd90:	str	r7, [r4, #32]
   3fd94:	add	r7, r3, #1
   3fd98:	str	r7, [r4, #20]
   3fd9c:	mov	r7, #123	; 0x7b
   3fda0:	strb	r7, [r3]
   3fda4:	str	r0, [sp, #16]
   3fda8:	mov	r0, #0
   3fdac:	str	r0, [sp, #20]
   3fdb0:	str	r1, [sp, #4]
   3fdb4:	ldr	r0, [r1]
   3fdb8:	sub	r3, r1, r0
   3fdbc:	str	r3, [sp, #8]
   3fdc0:	ldrh	r0, [r1, -r0]
   3fdc4:	add	r1, sp, #4
   3fdc8:	str	r0, [sp, #12]
   3fdcc:	mov	r0, r4
   3fdd0:	blx	r2
   3fdd4:	ldrb	r1, [r4, #25]
   3fdd8:	ldr	r0, [r4, #20]
   3fddc:	cmp	r1, #0
   3fde0:	beq	3fea0 <flatcc_json_printer_table_as_nested_root@@Base+0x1dc>
   3fde4:	add	r1, r0, #1
   3fde8:	str	r1, [r4, #20]
   3fdec:	mov	r1, #10
   3fdf0:	strb	r1, [r0]
   3fdf4:	ldr	r0, [r4, #32]
   3fdf8:	sub	r2, r0, #1
   3fdfc:	str	r2, [r4, #32]
   3fe00:	ldrb	r3, [r4, #25]
   3fe04:	ldr	r0, [r4, #20]
   3fe08:	ldr	r1, [r4, #16]
   3fe0c:	mla	r7, r2, r3, r0
   3fe10:	mul	r5, r2, r3
   3fe14:	cmp	r7, r1
   3fe18:	bls	3fe88 <flatcc_json_printer_table_as_nested_root@@Base+0x1c4>
   3fe1c:	cmp	r0, r1
   3fe20:	bcc	3fe3c <flatcc_json_printer_table_as_nested_root@@Base+0x178>
   3fe24:	ldr	r2, [r4, #44]	; 0x2c
   3fe28:	mov	r0, r4
   3fe2c:	mov	r1, #0
   3fe30:	blx	r2
   3fe34:	ldr	r1, [r4, #16]
   3fe38:	ldr	r0, [r4, #20]
   3fe3c:	sub	r6, r1, r0
   3fe40:	cmp	r6, r5
   3fe44:	bcs	3fe88 <flatcc_json_printer_table_as_nested_root@@Base+0x1c4>
   3fe48:	mov	r1, #32
   3fe4c:	mov	r2, r6
   3fe50:	bl	14eec <memset@plt>
   3fe54:	ldr	r0, [r4, #20]
   3fe58:	ldr	r2, [r4, #44]	; 0x2c
   3fe5c:	mov	r1, #0
   3fe60:	add	r0, r0, r6
   3fe64:	str	r0, [r4, #20]
   3fe68:	mov	r0, r4
   3fe6c:	blx	r2
   3fe70:	ldr	r1, [r4, #16]
   3fe74:	ldr	r0, [r4, #20]
   3fe78:	sub	r5, r5, r6
   3fe7c:	sub	r6, r1, r0
   3fe80:	cmp	r5, r6
   3fe84:	bhi	3fe48 <flatcc_json_printer_table_as_nested_root@@Base+0x184>
   3fe88:	mov	r1, #32
   3fe8c:	mov	r2, r5
   3fe90:	bl	14eec <memset@plt>
   3fe94:	ldr	r0, [r4, #20]
   3fe98:	add	r0, r0, r5
   3fe9c:	str	r0, [r4, #20]
   3fea0:	add	r1, r0, #1
   3fea4:	str	r1, [r4, #20]
   3fea8:	mov	r1, #125	; 0x7d
   3feac:	strb	r1, [r0]
   3feb0:	b	3fd08 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   3feb4:	ldr	r0, [r4, #36]	; 0x24
   3feb8:	cmp	r0, #0
   3febc:	moveq	r0, #2
   3fec0:	streq	r0, [r4, #36]	; 0x24
   3fec4:	b	3fd08 <flatcc_json_printer_table_as_nested_root@@Base+0x44>

0003fec8 <flatcc_json_printer_init@@Base>:
   3fec8:	push	{r4, r5, r6, sl, fp, lr}
   3fecc:	add	fp, sp, #16
   3fed0:	vmov.i32	q8, #0	; 0x00000000
   3fed4:	mov	r5, r0
   3fed8:	mov	r4, #0
   3fedc:	cmp	r1, #0
   3fee0:	movw	r6, #16448	; 0x4040
   3fee4:	str	r4, [r0, #32]
   3fee8:	mov	r0, #36	; 0x24
   3feec:	mov	r2, r5
   3fef0:	vst1.32	{d16-d17}, [r2], r0
   3fef4:	add	r0, r5, #16
   3fef8:	vst1.32	{d16-d17}, [r0]
   3fefc:	movw	r0, #33612	; 0x834c
   3ff00:	str	r4, [r2]
   3ff04:	movw	r2, #65380	; 0xff64
   3ff08:	movt	r0, #5
   3ff0c:	movt	r2, #3
   3ff10:	ldr	r0, [r0]
   3ff14:	movne	r0, r1
   3ff18:	str	r0, [r5, #40]	; 0x28
   3ff1c:	movw	r0, #16448	; 0x4040
   3ff20:	str	r2, [r5, #44]	; 0x2c
   3ff24:	bl	14e98 <malloc@plt>
   3ff28:	cmp	r0, #0
   3ff2c:	str	r0, [r5]
   3ff30:	beq	3ff58 <flatcc_json_printer_init@@Base+0x90>
   3ff34:	mov	r1, #16384	; 0x4000
   3ff38:	str	r6, [r5, #4]
   3ff3c:	str	r1, [r5, #8]
   3ff40:	mov	r1, #1
   3ff44:	strb	r1, [r5, #24]
   3ff48:	add	r1, r0, #16384	; 0x4000
   3ff4c:	str	r1, [r5, #16]
   3ff50:	str	r0, [r5, #20]
   3ff54:	b	3ff5c <flatcc_json_printer_init@@Base+0x94>
   3ff58:	mvn	r4, #0
   3ff5c:	mov	r0, r4
   3ff60:	pop	{r4, r5, r6, sl, fp, pc}
   3ff64:	push	{r4, r5, r6, sl, fp, lr}
   3ff68:	add	fp, sp, #16
   3ff6c:	mov	r4, r0
   3ff70:	cmp	r1, #0
   3ff74:	beq	3ff80 <flatcc_json_printer_init@@Base+0xb8>
   3ff78:	ldr	r5, [r4, #20]
   3ff7c:	b	3ff90 <flatcc_json_printer_init@@Base+0xc8>
   3ff80:	ldr	r6, [r4, #16]
   3ff84:	ldr	r5, [r4, #20]
   3ff88:	cmp	r5, r6
   3ff8c:	bcs	3ffbc <flatcc_json_printer_init@@Base+0xf4>
   3ff90:	ldr	r0, [r4]
   3ff94:	ldr	r3, [r4, #40]	; 0x28
   3ff98:	mov	r2, #1
   3ff9c:	sub	r5, r5, r0
   3ffa0:	mov	r1, r5
   3ffa4:	bl	14e8c <fwrite@plt>
   3ffa8:	ldr	r1, [r4, #12]
   3ffac:	ldr	r0, [r4]
   3ffb0:	str	r0, [r4, #20]
   3ffb4:	add	r1, r1, r5
   3ffb8:	b	40000 <flatcc_json_printer_init@@Base+0x138>
   3ffbc:	ldr	r0, [r4]
   3ffc0:	ldr	r1, [r4, #8]
   3ffc4:	ldr	r3, [r4, #40]	; 0x28
   3ffc8:	mov	r2, #1
   3ffcc:	bl	14e8c <fwrite@plt>
   3ffd0:	ldr	r0, [r4]
   3ffd4:	ldr	r1, [r4, #8]
   3ffd8:	sub	r5, r5, r6
   3ffdc:	mov	r2, r5
   3ffe0:	add	r1, r0, r1
   3ffe4:	bl	14e5c <memcpy@plt>
   3ffe8:	ldr	r0, [r4]
   3ffec:	ldr	r1, [r4, #8]
   3fff0:	ldr	r2, [r4, #12]
   3fff4:	add	r0, r0, r5
   3fff8:	add	r1, r2, r1
   3fffc:	str	r0, [r4, #20]
   40000:	str	r1, [r4, #12]
   40004:	mov	r1, #0
   40008:	strb	r1, [r0]
   4000c:	pop	{r4, r5, r6, sl, fp, pc}

00040010 <flatcc_json_printer_init_buffer@@Base>:
   40010:	push	{fp, lr}
   40014:	mov	fp, sp
   40018:	cmp	r2, #63	; 0x3f
   4001c:	bls	4005c <flatcc_json_printer_init_buffer@@Base+0x4c>
   40020:	vmov.i32	q8, #0	; 0x00000000
   40024:	add	r3, r0, #12
   40028:	vst1.32	{d16-d17}, [r3]
   4002c:	movw	r3, #124	; 0x7c
   40030:	movt	r3, #4
   40034:	str	r3, [r0, #44]	; 0x2c
   40038:	add	r3, r0, #28
   4003c:	vst1.32	{d16-d17}, [r3]
   40040:	sub	r3, r2, #64	; 0x40
   40044:	stm	r0, {r1, r2, r3}
   40048:	add	r2, r1, r3
   4004c:	str	r2, [r0, #16]
   40050:	str	r1, [r0, #20]
   40054:	mov	r0, #0
   40058:	pop	{fp, pc}
   4005c:	movw	r0, #26782	; 0x689e
   40060:	movw	r1, #26499	; 0x6783
   40064:	movw	r3, #26823	; 0x68c7
   40068:	movw	r2, #1165	; 0x48d
   4006c:	movt	r0, #4
   40070:	movt	r1, #4
   40074:	movt	r3, #4
   40078:	bl	14f40 <__assert_fail@plt>
   4007c:	ldr	r2, [r0, #16]
   40080:	ldr	r1, [r0, #20]
   40084:	cmp	r1, r2
   40088:	bcs	40094 <flatcc_json_printer_init_buffer@@Base+0x84>
   4008c:	mov	r2, r1
   40090:	b	400bc <flatcc_json_printer_init_buffer@@Base+0xac>
   40094:	ldr	r2, [r0, #36]	; 0x24
   40098:	cmp	r2, #0
   4009c:	moveq	r2, #3
   400a0:	streq	r2, [r0, #36]	; 0x24
   400a4:	ldr	r2, [r0]
   400a8:	ldr	r3, [r0, #12]
   400ac:	sub	r1, r1, r2
   400b0:	str	r2, [r0, #20]
   400b4:	add	r1, r1, r3
   400b8:	str	r1, [r0, #12]
   400bc:	mov	r0, #0
   400c0:	strb	r0, [r2]
   400c4:	bx	lr

000400c8 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   400c8:	push	{r4, r5, fp, lr}
   400cc:	add	fp, sp, #8
   400d0:	vmov.i32	q8, #0	; 0x00000000
   400d4:	cmp	r1, #0
   400d8:	mov	r5, r1
   400dc:	mov	r4, r0
   400e0:	add	r0, r0, #28
   400e4:	movweq	r5, #4096	; 0x1000
   400e8:	cmp	r5, #64	; 0x40
   400ec:	vst1.32	{d16-d17}, [r0]
   400f0:	add	r0, r4, #12
   400f4:	movls	r5, #64	; 0x40
   400f8:	vst1.32	{d16-d17}, [r0]
   400fc:	mov	r0, r5
   40100:	bl	14e98 <malloc@plt>
   40104:	mov	r1, r0
   40108:	movw	r2, #332	; 0x14c
   4010c:	mov	r0, #1
   40110:	strb	r0, [r4, #24]
   40114:	sub	r0, r5, #64	; 0x40
   40118:	movt	r2, #4
   4011c:	stm	r4, {r1, r5}
   40120:	cmp	r1, #0
   40124:	str	r0, [r4, #8]
   40128:	add	r0, r1, r0
   4012c:	str	r2, [r4, #44]	; 0x2c
   40130:	str	r0, [r4, #16]
   40134:	mov	r0, #0
   40138:	moveq	r0, #3
   4013c:	str	r1, [r4, #20]
   40140:	streq	r0, [r4, #36]	; 0x24
   40144:	mvneq	r0, #0
   40148:	pop	{r4, r5, fp, pc}
   4014c:	push	{r4, r5, fp, lr}
   40150:	add	fp, sp, #8
   40154:	mov	r4, r0
   40158:	ldr	r0, [r0]
   4015c:	mov	r1, #0
   40160:	ldr	r5, [r4, #20]
   40164:	strb	r1, [r5], -r0
   40168:	ldr	r0, [r4, #16]
   4016c:	ldr	r1, [r4, #20]
   40170:	cmp	r1, r0
   40174:	popcc	{r4, r5, fp, pc}
   40178:	ldm	r4, {r0, r1}
   4017c:	lsl	r1, r1, #1
   40180:	bl	14e80 <realloc@plt>
   40184:	cmp	r0, #0
   40188:	beq	401bc <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   4018c:	str	r0, [r4]
   40190:	mvn	r3, #63	; 0x3f
   40194:	add	r1, r0, r5
   40198:	ldr	r2, [r4, #4]
   4019c:	add	r3, r3, r2, lsl #1
   401a0:	lsl	r2, r2, #1
   401a4:	add	r0, r0, r3
   401a8:	str	r3, [r4, #8]
   401ac:	str	r2, [r4, #4]
   401b0:	str	r0, [r4, #16]
   401b4:	str	r1, [r4, #20]
   401b8:	b	401e0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x118>
   401bc:	ldr	r0, [r4, #36]	; 0x24
   401c0:	cmp	r0, #0
   401c4:	moveq	r0, #3
   401c8:	streq	r0, [r4, #36]	; 0x24
   401cc:	ldr	r0, [r4, #12]
   401d0:	ldr	r1, [r4]
   401d4:	add	r0, r0, r5
   401d8:	str	r1, [r4, #20]
   401dc:	str	r0, [r4, #12]
   401e0:	mov	r0, #0
   401e4:	strb	r0, [r1]
   401e8:	pop	{r4, r5, fp, pc}

000401ec <flatcc_json_printer_get_buffer@@Base>:
   401ec:	push	{r4, r5, fp, lr}
   401f0:	add	fp, sp, #8
   401f4:	ldr	r2, [r0, #44]	; 0x2c
   401f8:	mov	r4, r1
   401fc:	mov	r1, #0
   40200:	mov	r5, r0
   40204:	blx	r2
   40208:	cmp	r4, #0
   4020c:	beq	40224 <flatcc_json_printer_get_buffer@@Base+0x38>
   40210:	ldr	r0, [r5]
   40214:	ldr	r1, [r5, #20]
   40218:	sub	r1, r1, r0
   4021c:	str	r1, [r4]
   40220:	pop	{r4, r5, fp, pc}
   40224:	ldr	r0, [r5]
   40228:	pop	{r4, r5, fp, pc}

0004022c <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   4022c:	push	{r4, r5, fp, lr}
   40230:	add	fp, sp, #8
   40234:	ldr	r2, [r0, #44]	; 0x2c
   40238:	mov	r5, r1
   4023c:	mov	r1, #0
   40240:	mov	r4, r0
   40244:	blx	r2
   40248:	cmp	r5, #0
   4024c:	beq	40264 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x38>
   40250:	ldr	r0, [r4]
   40254:	ldr	r1, [r4, #20]
   40258:	sub	r1, r1, r0
   4025c:	str	r1, [r5]
   40260:	b	40268 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x3c>
   40264:	ldr	r0, [r4]
   40268:	vmov.i32	q8, #0	; 0x00000000
   4026c:	mov	r1, #32
   40270:	add	r2, r4, #16
   40274:	vst1.32	{d16-d17}, [r4], r1
   40278:	vst1.32	{d16-d17}, [r2]
   4027c:	vst1.32	{d16-d17}, [r4]
   40280:	pop	{r4, r5, fp, pc}

00040284 <flatcc_json_printer_clear@@Base>:
   40284:	push	{r4, sl, fp, lr}
   40288:	add	fp, sp, #8
   4028c:	mov	r4, r0
   40290:	ldrb	r0, [r0, #24]
   40294:	cmp	r0, #0
   40298:	beq	402ac <flatcc_json_printer_clear@@Base+0x28>
   4029c:	ldr	r0, [r4]
   402a0:	cmp	r0, #0
   402a4:	beq	402ac <flatcc_json_printer_clear@@Base+0x28>
   402a8:	bl	14e50 <free@plt>
   402ac:	vmov.i32	q8, #0	; 0x00000000
   402b0:	mov	r0, #32
   402b4:	add	r1, r4, #16
   402b8:	vst1.32	{d16-d17}, [r4], r0
   402bc:	vst1.32	{d16-d17}, [r1]
   402c0:	vst1.32	{d16-d17}, [r4]
   402c4:	pop	{r4, sl, fp, pc}
   402c8:	push	{r4, sl, fp, lr}
   402cc:	add	fp, sp, #8
   402d0:	cmn	r0, #1
   402d4:	ble	402e0 <flatcc_json_printer_clear@@Base+0x5c>
   402d8:	mov	lr, r1
   402dc:	b	402f0 <flatcc_json_printer_clear@@Base+0x6c>
   402e0:	mov	r2, #45	; 0x2d
   402e4:	mov	lr, r1
   402e8:	rsb	r0, r0, #0
   402ec:	strb	r2, [lr], #1
   402f0:	movw	ip, #26215	; 0x6667
   402f4:	mov	r3, lr
   402f8:	movt	ip, #26214	; 0x6666
   402fc:	smmul	r2, r0, ip
   40300:	asr	r4, r2, #2
   40304:	add	r2, r4, r2, lsr #31
   40308:	add	r4, r2, r2, lsl #2
   4030c:	sub	r4, r0, r4, lsl #1
   40310:	add	r0, r0, #9
   40314:	cmp	r0, #18
   40318:	mov	r0, r2
   4031c:	add	r4, r4, #48	; 0x30
   40320:	strb	r4, [r3], #1
   40324:	bhi	402fc <flatcc_json_printer_clear@@Base+0x78>
   40328:	mov	r2, #0
   4032c:	mov	r0, r3
   40330:	strb	r2, [r0], -lr
   40334:	cmp	r0, #2
   40338:	blt	40360 <flatcc_json_printer_clear@@Base+0xdc>
   4033c:	add	r0, r0, r0, lsr #31
   40340:	sub	r2, r3, #1
   40344:	asr	r0, r0, #1
   40348:	ldrb	ip, [lr]
   4034c:	ldrb	r4, [r2]
   40350:	subs	r0, r0, #1
   40354:	strb	r4, [lr], #1
   40358:	strb	ip, [r2], #-1
   4035c:	bne	40348 <flatcc_json_printer_clear@@Base+0xc4>
   40360:	sub	r0, r3, r1
   40364:	pop	{r4, sl, fp, pc}
   40368:	push	{r4, sl, fp, lr}
   4036c:	add	fp, sp, #8
   40370:	orrs	r1, r2, r3
   40374:	beq	403ec <flatcc_json_printer_clear@@Base+0x168>
   40378:	ldr	r1, [fp, #8]
   4037c:	mov	r4, #0
   40380:	cmp	r4, r3, lsr #22
   40384:	bne	403a0 <flatcc_json_printer_clear@@Base+0x11c>
   40388:	lsl	r3, r3, #10
   4038c:	sub	r1, r1, #10
   40390:	orr	r3, r3, r2, lsr #22
   40394:	lsl	r2, r2, #10
   40398:	cmp	r3, #4194304	; 0x400000
   4039c:	bcc	40388 <flatcc_json_printer_clear@@Base+0x104>
   403a0:	ldr	ip, [fp, #12]
   403a4:	cmp	r3, #0
   403a8:	bmi	403d4 <flatcc_json_printer_clear@@Base+0x150>
   403ac:	mvn	lr, #0
   403b0:	lsl	r3, r3, #1
   403b4:	lsl	r4, r2, #1
   403b8:	sub	r1, r1, #1
   403bc:	orr	r3, r3, r2, lsr #31
   403c0:	subs	r2, lr, r2, lsl #1
   403c4:	sbcs	r2, lr, r3
   403c8:	mov	r2, r4
   403cc:	blt	403b0 <flatcc_json_printer_clear@@Base+0x12c>
   403d0:	b	403d8 <flatcc_json_printer_clear@@Base+0x154>
   403d4:	mov	r4, r2
   403d8:	str	r4, [r0]
   403dc:	str	r3, [r0, #4]
   403e0:	str	r1, [r0, #8]
   403e4:	str	ip, [r0, #12]
   403e8:	pop	{r4, sl, fp, pc}
   403ec:	movw	r0, #26122	; 0x660a
   403f0:	movw	r1, #26131	; 0x6613
   403f4:	movw	r3, #26217	; 0x6669
   403f8:	mov	r2, #260	; 0x104
   403fc:	movt	r0, #4
   40400:	movt	r1, #4
   40404:	movt	r3, #4
   40408:	bl	14f40 <__assert_fail@plt>
   4040c:	push	{r4, r5, fp, lr}
   40410:	add	fp, sp, #8
   40414:	ldr	ip, [fp, #24]
   40418:	ldr	r1, [fp, #8]
   4041c:	mov	r5, #0
   40420:	add	r1, r1, ip
   40424:	ldr	ip, [fp, #16]
   40428:	add	r1, r1, #64	; 0x40
   4042c:	str	r1, [r0, #8]
   40430:	umull	r1, lr, ip, r2
   40434:	umull	ip, r1, ip, r3
   40438:	adds	lr, ip, lr
   4043c:	ldr	ip, [fp, #20]
   40440:	adc	r5, r5, #0
   40444:	umull	r2, r4, ip, r2
   40448:	umaal	r1, r4, ip, r3
   4044c:	adds	r2, lr, r2
   40450:	adc	r5, r5, #0
   40454:	adds	r2, r2, #-2147483648	; 0x80000000
   40458:	adcs	r1, r1, r5
   4045c:	str	r1, [r0]
   40460:	adc	r1, r4, #0
   40464:	str	r1, [r0, #4]
   40468:	pop	{r4, r5, fp, pc}
   4046c:	push	{fp, lr}
   40470:	mov	fp, sp
   40474:	ldr	r1, [fp, #16]
   40478:	ldr	ip, [fp, #8]
   4047c:	subs	r1, r2, r1
   40480:	str	ip, [r0, #8]
   40484:	str	r1, [r0]
   40488:	ldr	r1, [fp, #20]
   4048c:	sbcs	r1, r3, r1
   40490:	str	r1, [r0, #4]
   40494:	bcc	404a4 <flatcc_json_printer_clear@@Base+0x220>
   40498:	ldr	r0, [fp, #24]
   4049c:	cmp	ip, r0
   404a0:	popeq	{fp, pc}
   404a4:	movw	r0, #27129	; 0x69f9
   404a8:	movw	r1, #26131	; 0x6613
   404ac:	movw	r3, #27154	; 0x6a12
   404b0:	mov	r2, #239	; 0xef
   404b4:	movt	r0, #4
   404b8:	movt	r1, #4
   404bc:	movt	r3, #4
   404c0:	bl	14f40 <__assert_fail@plt>
   404c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   404c8:	add	fp, sp, #28
   404cc:	sub	sp, sp, #20
   404d0:	str	r1, [sp, #12]
   404d4:	ldr	r1, [fp, #16]
   404d8:	ldr	r9, [fp, #8]
   404dc:	mov	r8, r2
   404e0:	ldr	r2, [fp, #20]
   404e4:	ldr	lr, [fp, #12]
   404e8:	ldr	r4, [fp, #24]
   404ec:	str	r0, [sp, #16]
   404f0:	ldr	r0, [fp, #28]
   404f4:	mov	r6, #0
   404f8:	subs	r7, r9, r1
   404fc:	sbc	ip, lr, r2
   40500:	subs	r4, r7, r4
   40504:	sbcs	r4, ip, r0
   40508:	ldr	r0, [fp, #32]
   4050c:	ldr	r4, [fp, #36]	; 0x24
   40510:	movwcc	r6, #1
   40514:	adds	r5, r0, r8
   40518:	str	r5, [sp, #8]
   4051c:	adc	r5, r4, r3
   40520:	subs	sl, r8, r0
   40524:	sbc	r8, r3, r4
   40528:	subs	r3, r1, sl
   4052c:	str	r5, [sp, #4]
   40530:	sbcs	r3, r2, r8
   40534:	bcs	405f0 <flatcc_json_printer_clear@@Base+0x36c>
   40538:	ldr	r0, [fp, #24]
   4053c:	ldr	r4, [fp, #28]
   40540:	subs	r3, r7, r0
   40544:	mov	r7, r0
   40548:	sbcs	r3, ip, r4
   4054c:	bcc	40600 <flatcc_json_printer_clear@@Base+0x37c>
   40550:	ldr	r0, [sp, #12]
   40554:	sub	r0, r0, #1
   40558:	str	r0, [sp, #12]
   4055c:	adds	ip, r1, r7
   40560:	adc	r3, r2, r4
   40564:	subs	r6, ip, sl
   40568:	sbcs	r6, r3, r8
   4056c:	bcc	405a4 <flatcc_json_printer_clear@@Base+0x320>
   40570:	subs	r6, ip, sl
   40574:	mov	r5, lr
   40578:	mov	r0, r9
   4057c:	sbc	r4, r3, r8
   40580:	subs	lr, sl, r1
   40584:	sbc	r9, r8, r2
   40588:	subs	r6, lr, r6
   4058c:	mov	lr, r5
   40590:	sbcs	r6, r9, r4
   40594:	mov	r9, r0
   40598:	ldr	r4, [fp, #28]
   4059c:	ldr	r0, [sp, #12]
   405a0:	bcc	405fc <flatcc_json_printer_clear@@Base+0x378>
   405a4:	ldr	r2, [sp, #16]
   405a8:	ldrb	r1, [r2, r0]
   405ac:	sub	r1, r1, #1
   405b0:	strb	r1, [r2, r0]
   405b4:	subs	r1, r9, ip
   405b8:	sbc	r2, lr, r3
   405bc:	subs	r6, r1, r7
   405c0:	sbcs	r6, r2, r4
   405c4:	mov	r6, #0
   405c8:	movwcc	r6, #1
   405cc:	subs	r5, ip, sl
   405d0:	sbcs	r5, r3, r8
   405d4:	bcs	40608 <flatcc_json_printer_clear@@Base+0x384>
   405d8:	subs	r1, r1, r7
   405dc:	sbcs	r1, r2, r4
   405e0:	mov	r1, ip
   405e4:	mov	r2, r3
   405e8:	bcs	4055c <flatcc_json_printer_clear@@Base+0x2d8>
   405ec:	b	40608 <flatcc_json_printer_clear@@Base+0x384>
   405f0:	ldr	r4, [fp, #28]
   405f4:	ldr	r7, [fp, #24]
   405f8:	b	40600 <flatcc_json_printer_clear@@Base+0x37c>
   405fc:	mov	r6, #0
   40600:	mov	ip, r1
   40604:	mov	r3, r2
   40608:	ldr	r1, [sp, #8]
   4060c:	ldr	r5, [sp, #4]
   40610:	subs	r0, ip, r1
   40614:	sbcs	r0, r3, r5
   40618:	bcs	40658 <flatcc_json_printer_clear@@Base+0x3d4>
   4061c:	cmp	r6, #0
   40620:	bne	40658 <flatcc_json_printer_clear@@Base+0x3d4>
   40624:	adds	r8, ip, r7
   40628:	mov	r0, #0
   4062c:	adc	r2, r3, r4
   40630:	subs	r6, r8, r1
   40634:	sbcs	r6, r2, r5
   40638:	bcc	406a4 <flatcc_json_printer_clear@@Base+0x420>
   4063c:	subs	r6, r1, ip
   40640:	sbc	r4, r5, r3
   40644:	subs	r1, r8, r1
   40648:	sbc	r2, r2, r5
   4064c:	subs	r1, r1, r6
   40650:	sbcs	r1, r2, r4
   40654:	bcc	406a4 <flatcc_json_printer_clear@@Base+0x420>
   40658:	ldr	r0, [fp, #36]	; 0x24
   4065c:	ldr	r1, [fp, #32]
   40660:	lsl	r0, r0, #1
   40664:	mov	r2, r1
   40668:	orr	r1, r0, r1, lsr #31
   4066c:	subs	r2, ip, r2, lsl #1
   40670:	mov	r0, #0
   40674:	sbcs	r1, r3, r1
   40678:	bcc	406a4 <flatcc_json_printer_clear@@Base+0x420>
   4067c:	ldr	r0, [fp, #36]	; 0x24
   40680:	ldr	r1, [fp, #32]
   40684:	lsl	r0, r0, #2
   40688:	orr	r0, r0, r1, lsr #30
   4068c:	subs	r1, r9, r1, lsl #2
   40690:	sbc	r2, lr, r0
   40694:	subs	r1, r1, ip
   40698:	mov	r0, #0
   4069c:	sbcs	r1, r2, r3
   406a0:	movwcs	r0, #1
   406a4:	sub	sp, fp, #28
   406a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   406ac:	cmp	r2, #0
   406b0:	bxeq	lr
   406b4:	push	{r4, r5, fp, lr}
   406b8:	add	fp, sp, #8
   406bc:	ldr	lr, [r2]
   406c0:	bic	ip, r3, #224	; 0xe0
   406c4:	cmp	ip, #0
   406c8:	beq	406e0 <flatcc_json_printer_clear@@Base+0x45c>
   406cc:	cmp	ip, #1
   406d0:	bne	407a8 <flatcc_json_printer_clear@@Base+0x524>
   406d4:	movw	ip, #27578	; 0x6bba
   406d8:	movt	ip, #4
   406dc:	b	406e8 <flatcc_json_printer_clear@@Base+0x464>
   406e0:	movw	ip, #27513	; 0x6b79
   406e4:	movt	ip, #4
   406e8:	cmp	lr, #3
   406ec:	bcc	40750 <flatcc_json_printer_clear@@Base+0x4cc>
   406f0:	ldrb	r4, [r1]
   406f4:	sub	lr, lr, #3
   406f8:	cmp	lr, #2
   406fc:	ldrb	r4, [ip, r4, lsr #2]
   40700:	strb	r4, [r0]
   40704:	ldrb	r5, [r1, #1]
   40708:	ldrb	r4, [r1]
   4070c:	lsr	r5, r5, #4
   40710:	bfi	r5, r4, #4, #2
   40714:	ldrb	r4, [ip, r5]
   40718:	strb	r4, [r0, #1]
   4071c:	ldrb	r5, [r1, #2]
   40720:	ldrb	r4, [r1, #1]
   40724:	lsr	r5, r5, #6
   40728:	bfi	r5, r4, #2, #4
   4072c:	ldrb	r4, [ip, r5]
   40730:	strb	r4, [r0, #2]
   40734:	ldrb	r4, [r1, #2]
   40738:	add	r1, r1, #3
   4073c:	and	r4, r4, #63	; 0x3f
   40740:	ldrb	r4, [ip, r4]
   40744:	strb	r4, [r0, #3]
   40748:	add	r0, r0, #4
   4074c:	bhi	406f0 <flatcc_json_printer_clear@@Base+0x46c>
   40750:	and	r3, r3, #128	; 0x80
   40754:	cmp	lr, #1
   40758:	beq	407b0 <flatcc_json_printer_clear@@Base+0x52c>
   4075c:	cmp	lr, #2
   40760:	bne	407d8 <flatcc_json_printer_clear@@Base+0x554>
   40764:	ldrb	r5, [r1]
   40768:	cmp	r3, #0
   4076c:	ldrb	r5, [ip, r5, lsr #2]
   40770:	strb	r5, [r0]
   40774:	ldrb	r4, [r1, #1]
   40778:	ldrb	r5, [r1]
   4077c:	lsr	r4, r4, #4
   40780:	bfi	r4, r5, #4, #2
   40784:	ldrb	r5, [ip, r4]
   40788:	strb	r5, [r0, #1]
   4078c:	ldrb	r1, [r1, #1]
   40790:	and	r1, r1, #15
   40794:	ldrb	r1, [ip, r1, lsl #2]
   40798:	strb	r1, [r0, #2]
   4079c:	movne	r1, #61	; 0x3d
   407a0:	strbne	r1, [r0, #3]
   407a4:	b	407d8 <flatcc_json_printer_clear@@Base+0x554>
   407a8:	mov	r0, lr
   407ac:	b	407e0 <flatcc_json_printer_clear@@Base+0x55c>
   407b0:	ldrb	r5, [r1]
   407b4:	cmp	r3, #0
   407b8:	ldrb	r5, [ip, r5, lsr #2]
   407bc:	strb	r5, [r0]
   407c0:	ldrb	r1, [r1]
   407c4:	and	r1, r1, #3
   407c8:	ldrb	r1, [ip, r1, lsl #4]
   407cc:	strb	r1, [r0, #1]
   407d0:	movwne	r1, #15677	; 0x3d3d
   407d4:	strhne	r1, [r0, #2]
   407d8:	ldr	lr, [r2]
   407dc:	mov	r0, #0
   407e0:	sub	r0, lr, r0
   407e4:	str	r0, [r2]
   407e8:	pop	{r4, r5, fp, lr}
   407ec:	bx	lr
   407f0:	eor	r1, r1, #-2147483648	; 0x80000000
   407f4:	b	407fc <flatcc_json_printer_clear@@Base+0x578>
   407f8:	eor	r3, r3, #-2147483648	; 0x80000000
   407fc:	push	{r4, r5, lr}
   40800:	lsl	r4, r1, #1
   40804:	lsl	r5, r3, #1
   40808:	teq	r4, r5
   4080c:	teqeq	r0, r2
   40810:	orrsne	ip, r4, r0
   40814:	orrsne	ip, r5, r2
   40818:	mvnsne	ip, r4, asr #21
   4081c:	mvnsne	ip, r5, asr #21
   40820:	beq	40a0c <flatcc_json_printer_clear@@Base+0x788>
   40824:	lsr	r4, r4, #21
   40828:	rsbs	r5, r4, r5, lsr #21
   4082c:	rsblt	r5, r5, #0
   40830:	ble	40850 <flatcc_json_printer_clear@@Base+0x5cc>
   40834:	add	r4, r4, r5
   40838:	eor	r2, r0, r2
   4083c:	eor	r3, r1, r3
   40840:	eor	r0, r2, r0
   40844:	eor	r1, r3, r1
   40848:	eor	r2, r0, r2
   4084c:	eor	r3, r1, r3
   40850:	cmp	r5, #54	; 0x36
   40854:	pophi	{r4, r5, pc}
   40858:	tst	r1, #-2147483648	; 0x80000000
   4085c:	lsl	r1, r1, #12
   40860:	mov	ip, #1048576	; 0x100000
   40864:	orr	r1, ip, r1, lsr #12
   40868:	beq	40874 <flatcc_json_printer_clear@@Base+0x5f0>
   4086c:	rsbs	r0, r0, #0
   40870:	rsc	r1, r1, #0
   40874:	tst	r3, #-2147483648	; 0x80000000
   40878:	lsl	r3, r3, #12
   4087c:	orr	r3, ip, r3, lsr #12
   40880:	beq	4088c <flatcc_json_printer_clear@@Base+0x608>
   40884:	rsbs	r2, r2, #0
   40888:	rsc	r3, r3, #0
   4088c:	teq	r4, r5
   40890:	beq	409f4 <flatcc_json_printer_clear@@Base+0x770>
   40894:	sub	r4, r4, #1
   40898:	rsbs	lr, r5, #32
   4089c:	blt	408b8 <flatcc_json_printer_clear@@Base+0x634>
   408a0:	lsl	ip, r2, lr
   408a4:	adds	r0, r0, r2, lsr r5
   408a8:	adc	r1, r1, #0
   408ac:	adds	r0, r0, r3, lsl lr
   408b0:	adcs	r1, r1, r3, asr r5
   408b4:	b	408d4 <flatcc_json_printer_clear@@Base+0x650>
   408b8:	sub	r5, r5, #32
   408bc:	add	lr, lr, #32
   408c0:	cmp	r2, #1
   408c4:	lsl	ip, r3, lr
   408c8:	orrcs	ip, ip, #2
   408cc:	adds	r0, r0, r3, asr r5
   408d0:	adcs	r1, r1, r3, asr #31
   408d4:	and	r5, r1, #-2147483648	; 0x80000000
   408d8:	bpl	408e8 <flatcc_json_printer_clear@@Base+0x664>
   408dc:	rsbs	ip, ip, #0
   408e0:	rscs	r0, r0, #0
   408e4:	rsc	r1, r1, #0
   408e8:	cmp	r1, #1048576	; 0x100000
   408ec:	bcc	4092c <flatcc_json_printer_clear@@Base+0x6a8>
   408f0:	cmp	r1, #2097152	; 0x200000
   408f4:	bcc	40914 <flatcc_json_printer_clear@@Base+0x690>
   408f8:	lsrs	r1, r1, #1
   408fc:	rrxs	r0, r0
   40900:	rrx	ip, ip
   40904:	add	r4, r4, #1
   40908:	lsl	r2, r4, #21
   4090c:	cmn	r2, #4194304	; 0x400000
   40910:	bcs	40a6c <flatcc_json_printer_clear@@Base+0x7e8>
   40914:	cmp	ip, #-2147483648	; 0x80000000
   40918:	lsrseq	ip, r0, #1
   4091c:	adcs	r0, r0, #0
   40920:	adc	r1, r1, r4, lsl #20
   40924:	orr	r1, r1, r5
   40928:	pop	{r4, r5, pc}
   4092c:	lsls	ip, ip, #1
   40930:	adcs	r0, r0, r0
   40934:	adc	r1, r1, r1
   40938:	tst	r1, #1048576	; 0x100000
   4093c:	sub	r4, r4, #1
   40940:	bne	40914 <flatcc_json_printer_clear@@Base+0x690>
   40944:	teq	r1, #0
   40948:	moveq	r1, r0
   4094c:	moveq	r0, #0
   40950:	clz	r3, r1
   40954:	addeq	r3, r3, #32
   40958:	sub	r3, r3, #11
   4095c:	subs	r2, r3, #32
   40960:	bge	40984 <flatcc_json_printer_clear@@Base+0x700>
   40964:	adds	r2, r2, #12
   40968:	ble	40980 <flatcc_json_printer_clear@@Base+0x6fc>
   4096c:	add	ip, r2, #20
   40970:	rsb	r2, r2, #12
   40974:	lsl	r0, r1, ip
   40978:	lsr	r1, r1, r2
   4097c:	b	40994 <flatcc_json_printer_clear@@Base+0x710>
   40980:	add	r2, r2, #20
   40984:	rsble	ip, r2, #32
   40988:	lsl	r1, r1, r2
   4098c:	orrle	r1, r1, r0, lsr ip
   40990:	lslle	r0, r0, r2
   40994:	subs	r4, r4, r3
   40998:	addge	r1, r1, r4, lsl #20
   4099c:	orrge	r1, r1, r5
   409a0:	popge	{r4, r5, pc}
   409a4:	mvn	r4, r4
   409a8:	subs	r4, r4, #31
   409ac:	bge	409e8 <flatcc_json_printer_clear@@Base+0x764>
   409b0:	adds	r4, r4, #12
   409b4:	bgt	409d0 <flatcc_json_printer_clear@@Base+0x74c>
   409b8:	add	r4, r4, #20
   409bc:	rsb	r2, r4, #32
   409c0:	lsr	r0, r0, r4
   409c4:	orr	r0, r0, r1, lsl r2
   409c8:	orr	r1, r5, r1, lsr r4
   409cc:	pop	{r4, r5, pc}
   409d0:	rsb	r4, r4, #12
   409d4:	rsb	r2, r4, #32
   409d8:	lsr	r0, r0, r2
   409dc:	orr	r0, r0, r1, lsl r4
   409e0:	mov	r1, r5
   409e4:	pop	{r4, r5, pc}
   409e8:	lsr	r0, r1, r4
   409ec:	mov	r1, r5
   409f0:	pop	{r4, r5, pc}
   409f4:	teq	r4, #0
   409f8:	eor	r3, r3, #1048576	; 0x100000
   409fc:	eoreq	r1, r1, #1048576	; 0x100000
   40a00:	addeq	r4, r4, #1
   40a04:	subne	r5, r5, #1
   40a08:	b	40894 <flatcc_json_printer_clear@@Base+0x610>
   40a0c:	mvns	ip, r4, asr #21
   40a10:	mvnsne	ip, r5, asr #21
   40a14:	beq	40a7c <flatcc_json_printer_clear@@Base+0x7f8>
   40a18:	teq	r4, r5
   40a1c:	teqeq	r0, r2
   40a20:	beq	40a34 <flatcc_json_printer_clear@@Base+0x7b0>
   40a24:	orrs	ip, r4, r0
   40a28:	moveq	r1, r3
   40a2c:	moveq	r0, r2
   40a30:	pop	{r4, r5, pc}
   40a34:	teq	r1, r3
   40a38:	movne	r1, #0
   40a3c:	movne	r0, #0
   40a40:	popne	{r4, r5, pc}
   40a44:	lsrs	ip, r4, #21
   40a48:	bne	40a5c <flatcc_json_printer_clear@@Base+0x7d8>
   40a4c:	lsls	r0, r0, #1
   40a50:	adcs	r1, r1, r1
   40a54:	orrcs	r1, r1, #-2147483648	; 0x80000000
   40a58:	pop	{r4, r5, pc}
   40a5c:	adds	r4, r4, #4194304	; 0x400000
   40a60:	addcc	r1, r1, #1048576	; 0x100000
   40a64:	popcc	{r4, r5, pc}
   40a68:	and	r5, r1, #-2147483648	; 0x80000000
   40a6c:	orr	r1, r5, #2130706432	; 0x7f000000
   40a70:	orr	r1, r1, #15728640	; 0xf00000
   40a74:	mov	r0, #0
   40a78:	pop	{r4, r5, pc}
   40a7c:	mvns	ip, r4, asr #21
   40a80:	movne	r1, r3
   40a84:	movne	r0, r2
   40a88:	mvnseq	ip, r5, asr #21
   40a8c:	movne	r3, r1
   40a90:	movne	r2, r0
   40a94:	orrs	r4, r0, r1, lsl #12
   40a98:	orrseq	r5, r2, r3, lsl #12
   40a9c:	teqeq	r1, r3
   40aa0:	orrne	r1, r1, #524288	; 0x80000
   40aa4:	pop	{r4, r5, pc}
   40aa8:	teq	r0, #0
   40aac:	moveq	r1, #0
   40ab0:	bxeq	lr
   40ab4:	push	{r4, r5, lr}
   40ab8:	mov	r4, #1024	; 0x400
   40abc:	add	r4, r4, #50	; 0x32
   40ac0:	mov	r5, #0
   40ac4:	mov	r1, #0
   40ac8:	b	40944 <flatcc_json_printer_clear@@Base+0x6c0>
   40acc:	teq	r0, #0
   40ad0:	moveq	r1, #0
   40ad4:	bxeq	lr
   40ad8:	push	{r4, r5, lr}
   40adc:	mov	r4, #1024	; 0x400
   40ae0:	add	r4, r4, #50	; 0x32
   40ae4:	ands	r5, r0, #-2147483648	; 0x80000000
   40ae8:	rsbmi	r0, r0, #0
   40aec:	mov	r1, #0
   40af0:	b	40944 <flatcc_json_printer_clear@@Base+0x6c0>
   40af4:	lsls	r2, r0, #1
   40af8:	asr	r1, r2, #3
   40afc:	rrx	r1, r1
   40b00:	lsl	r0, r2, #28
   40b04:	andsne	r3, r2, #-16777216	; 0xff000000
   40b08:	teqne	r3, #-16777216	; 0xff000000
   40b0c:	eorne	r1, r1, #939524096	; 0x38000000
   40b10:	bxne	lr
   40b14:	bics	r2, r2, #-16777216	; 0xff000000
   40b18:	bxeq	lr
   40b1c:	teq	r3, #-16777216	; 0xff000000
   40b20:	orreq	r1, r1, #524288	; 0x80000
   40b24:	bxeq	lr
   40b28:	push	{r4, r5, lr}
   40b2c:	mov	r4, #896	; 0x380
   40b30:	and	r5, r1, #-2147483648	; 0x80000000
   40b34:	bic	r1, r1, #-2147483648	; 0x80000000
   40b38:	b	40944 <flatcc_json_printer_clear@@Base+0x6c0>
   40b3c:	orrs	r2, r0, r1
   40b40:	bxeq	lr
   40b44:	push	{r4, r5, lr}
   40b48:	mov	r5, #0
   40b4c:	b	40b6c <flatcc_json_printer_clear@@Base+0x8e8>
   40b50:	orrs	r2, r0, r1
   40b54:	bxeq	lr
   40b58:	push	{r4, r5, lr}
   40b5c:	ands	r5, r1, #-2147483648	; 0x80000000
   40b60:	bpl	40b6c <flatcc_json_printer_clear@@Base+0x8e8>
   40b64:	rsbs	r0, r0, #0
   40b68:	rsc	r1, r1, #0
   40b6c:	mov	r4, #1024	; 0x400
   40b70:	add	r4, r4, #50	; 0x32
   40b74:	lsrs	ip, r1, #22
   40b78:	beq	408e8 <flatcc_json_printer_clear@@Base+0x664>
   40b7c:	mov	r2, #3
   40b80:	lsrs	ip, ip, #3
   40b84:	addne	r2, r2, #3
   40b88:	lsrs	ip, ip, #3
   40b8c:	addne	r2, r2, #3
   40b90:	add	r2, r2, ip, lsr #3
   40b94:	rsb	r3, r2, #32
   40b98:	lsl	ip, r0, r3
   40b9c:	lsr	r0, r0, r2
   40ba0:	orr	r0, r0, r1, lsl r3
   40ba4:	lsr	r1, r1, r2
   40ba8:	add	r4, r4, r2
   40bac:	b	408e8 <flatcc_json_printer_clear@@Base+0x664>
   40bb0:	eor	r0, r0, #-2147483648	; 0x80000000
   40bb4:	b	40bbc <flatcc_json_printer_clear@@Base+0x938>
   40bb8:	eor	r1, r1, #-2147483648	; 0x80000000
   40bbc:	lsls	r2, r0, #1
   40bc0:	lslsne	r3, r1, #1
   40bc4:	teqne	r2, r3
   40bc8:	mvnsne	ip, r2, asr #24
   40bcc:	mvnsne	ip, r3, asr #24
   40bd0:	beq	40cc8 <flatcc_json_printer_clear@@Base+0xa44>
   40bd4:	lsr	r2, r2, #24
   40bd8:	rsbs	r3, r2, r3, lsr #24
   40bdc:	addgt	r2, r2, r3
   40be0:	eorgt	r1, r0, r1
   40be4:	eorgt	r0, r1, r0
   40be8:	eorgt	r1, r0, r1
   40bec:	rsblt	r3, r3, #0
   40bf0:	cmp	r3, #25
   40bf4:	bxhi	lr
   40bf8:	tst	r0, #-2147483648	; 0x80000000
   40bfc:	orr	r0, r0, #8388608	; 0x800000
   40c00:	bic	r0, r0, #-16777216	; 0xff000000
   40c04:	rsbne	r0, r0, #0
   40c08:	tst	r1, #-2147483648	; 0x80000000
   40c0c:	orr	r1, r1, #8388608	; 0x800000
   40c10:	bic	r1, r1, #-16777216	; 0xff000000
   40c14:	rsbne	r1, r1, #0
   40c18:	teq	r2, r3
   40c1c:	beq	40cb0 <flatcc_json_printer_clear@@Base+0xa2c>
   40c20:	sub	r2, r2, #1
   40c24:	adds	r0, r0, r1, asr r3
   40c28:	rsb	r3, r3, #32
   40c2c:	lsl	r1, r1, r3
   40c30:	and	r3, r0, #-2147483648	; 0x80000000
   40c34:	bpl	40c40 <flatcc_json_printer_clear@@Base+0x9bc>
   40c38:	rsbs	r1, r1, #0
   40c3c:	rsc	r0, r0, #0
   40c40:	cmp	r0, #8388608	; 0x800000
   40c44:	bcc	40c78 <flatcc_json_printer_clear@@Base+0x9f4>
   40c48:	cmp	r0, #16777216	; 0x1000000
   40c4c:	bcc	40c64 <flatcc_json_printer_clear@@Base+0x9e0>
   40c50:	lsrs	r0, r0, #1
   40c54:	rrx	r1, r1
   40c58:	add	r2, r2, #1
   40c5c:	cmp	r2, #254	; 0xfe
   40c60:	bcs	40d1c <flatcc_json_printer_clear@@Base+0xa98>
   40c64:	cmp	r1, #-2147483648	; 0x80000000
   40c68:	adc	r0, r0, r2, lsl #23
   40c6c:	biceq	r0, r0, #1
   40c70:	orr	r0, r0, r3
   40c74:	bx	lr
   40c78:	lsls	r1, r1, #1
   40c7c:	adc	r0, r0, r0
   40c80:	tst	r0, #8388608	; 0x800000
   40c84:	sub	r2, r2, #1
   40c88:	bne	40c64 <flatcc_json_printer_clear@@Base+0x9e0>
   40c8c:	clz	ip, r0
   40c90:	sub	ip, ip, #8
   40c94:	subs	r2, r2, ip
   40c98:	lsl	r0, r0, ip
   40c9c:	addge	r0, r0, r2, lsl #23
   40ca0:	rsblt	r2, r2, #0
   40ca4:	orrge	r0, r0, r3
   40ca8:	orrlt	r0, r3, r0, lsr r2
   40cac:	bx	lr
   40cb0:	teq	r2, #0
   40cb4:	eor	r1, r1, #8388608	; 0x800000
   40cb8:	eoreq	r0, r0, #8388608	; 0x800000
   40cbc:	addeq	r2, r2, #1
   40cc0:	subne	r3, r3, #1
   40cc4:	b	40c20 <flatcc_json_printer_clear@@Base+0x99c>
   40cc8:	lsl	r3, r1, #1
   40ccc:	mvns	ip, r2, asr #24
   40cd0:	mvnsne	ip, r3, asr #24
   40cd4:	beq	40d28 <flatcc_json_printer_clear@@Base+0xaa4>
   40cd8:	teq	r2, r3
   40cdc:	beq	40cec <flatcc_json_printer_clear@@Base+0xa68>
   40ce0:	teq	r2, #0
   40ce4:	moveq	r0, r1
   40ce8:	bx	lr
   40cec:	teq	r0, r1
   40cf0:	movne	r0, #0
   40cf4:	bxne	lr
   40cf8:	tst	r2, #-16777216	; 0xff000000
   40cfc:	bne	40d0c <flatcc_json_printer_clear@@Base+0xa88>
   40d00:	lsls	r0, r0, #1
   40d04:	orrcs	r0, r0, #-2147483648	; 0x80000000
   40d08:	bx	lr
   40d0c:	adds	r2, r2, #33554432	; 0x2000000
   40d10:	addcc	r0, r0, #8388608	; 0x800000
   40d14:	bxcc	lr
   40d18:	and	r3, r0, #-2147483648	; 0x80000000
   40d1c:	orr	r0, r3, #2130706432	; 0x7f000000
   40d20:	orr	r0, r0, #8388608	; 0x800000
   40d24:	bx	lr
   40d28:	mvns	r2, r2, asr #24
   40d2c:	movne	r0, r1
   40d30:	mvnseq	r3, r3, asr #24
   40d34:	movne	r1, r0
   40d38:	lsls	r2, r0, #9
   40d3c:	lslseq	r3, r1, #9
   40d40:	teqeq	r0, r1
   40d44:	orrne	r0, r0, #4194304	; 0x400000
   40d48:	bx	lr
   40d4c:	mov	r3, #0
   40d50:	b	40d5c <flatcc_json_printer_clear@@Base+0xad8>
   40d54:	ands	r3, r0, #-2147483648	; 0x80000000
   40d58:	rsbmi	r0, r0, #0
   40d5c:	movs	ip, r0
   40d60:	bxeq	lr
   40d64:	orr	r3, r3, #1258291200	; 0x4b000000
   40d68:	mov	r1, r0
   40d6c:	mov	r0, #0
   40d70:	b	40db4 <flatcc_json_printer_clear@@Base+0xb30>
   40d74:	orrs	r2, r0, r1
   40d78:	bxeq	lr
   40d7c:	mov	r3, #0
   40d80:	b	40d9c <flatcc_json_printer_clear@@Base+0xb18>
   40d84:	orrs	r2, r0, r1
   40d88:	bxeq	lr
   40d8c:	ands	r3, r1, #-2147483648	; 0x80000000
   40d90:	bpl	40d9c <flatcc_json_printer_clear@@Base+0xb18>
   40d94:	rsbs	r0, r0, #0
   40d98:	rsc	r1, r1, #0
   40d9c:	movs	ip, r1
   40da0:	moveq	ip, r0
   40da4:	moveq	r1, r0
   40da8:	moveq	r0, #0
   40dac:	orr	r3, r3, #1526726656	; 0x5b000000
   40db0:	subeq	r3, r3, #268435456	; 0x10000000
   40db4:	sub	r3, r3, #8388608	; 0x800000
   40db8:	clz	r2, ip
   40dbc:	subs	r2, r2, #8
   40dc0:	sub	r3, r3, r2, lsl #23
   40dc4:	blt	40de4 <flatcc_json_printer_clear@@Base+0xb60>
   40dc8:	add	r3, r3, r1, lsl r2
   40dcc:	lsl	ip, r0, r2
   40dd0:	rsb	r2, r2, #32
   40dd4:	cmp	ip, #-2147483648	; 0x80000000
   40dd8:	adc	r0, r3, r0, lsr r2
   40ddc:	biceq	r0, r0, #1
   40de0:	bx	lr
   40de4:	add	r2, r2, #32
   40de8:	lsl	ip, r1, r2
   40dec:	rsb	r2, r2, #32
   40df0:	orrs	r0, r0, ip, lsl #1
   40df4:	adc	r0, r3, r1, lsr r2
   40df8:	biceq	r0, r0, ip, lsr #31
   40dfc:	bx	lr
   40e00:	cmp	r3, #0
   40e04:	cmpeq	r2, #0
   40e08:	bne	40e20 <flatcc_json_printer_clear@@Base+0xb9c>
   40e0c:	cmp	r1, #0
   40e10:	cmpeq	r0, #0
   40e14:	mvnne	r1, #0
   40e18:	mvnne	r0, #0
   40e1c:	b	40e3c <flatcc_json_printer_clear@@Base+0xbb8>
   40e20:	sub	sp, sp, #8
   40e24:	push	{sp, lr}
   40e28:	bl	40e4c <flatcc_json_printer_clear@@Base+0xbc8>
   40e2c:	ldr	lr, [sp, #4]
   40e30:	add	sp, sp, #8
   40e34:	pop	{r2, r3}
   40e38:	bx	lr
   40e3c:	push	{r1, lr}
   40e40:	mov	r0, #8
   40e44:	bl	14e2c <raise@plt>
   40e48:	pop	{r1, pc}
   40e4c:	cmp	r1, r3
   40e50:	cmpeq	r0, r2
   40e54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40e58:	mov	r4, r0
   40e5c:	movcc	r0, #0
   40e60:	mov	r5, r1
   40e64:	ldr	lr, [sp, #36]	; 0x24
   40e68:	movcc	r1, r0
   40e6c:	bcc	40f68 <flatcc_json_printer_clear@@Base+0xce4>
   40e70:	cmp	r3, #0
   40e74:	clzeq	ip, r2
   40e78:	clzne	ip, r3
   40e7c:	addeq	ip, ip, #32
   40e80:	cmp	r5, #0
   40e84:	clzeq	r1, r4
   40e88:	addeq	r1, r1, #32
   40e8c:	clzne	r1, r5
   40e90:	sub	ip, ip, r1
   40e94:	sub	sl, ip, #32
   40e98:	lsl	r9, r3, ip
   40e9c:	rsb	fp, ip, #32
   40ea0:	orr	r9, r9, r2, lsl sl
   40ea4:	orr	r9, r9, r2, lsr fp
   40ea8:	lsl	r8, r2, ip
   40eac:	cmp	r5, r9
   40eb0:	cmpeq	r4, r8
   40eb4:	movcc	r0, #0
   40eb8:	movcc	r1, r0
   40ebc:	bcc	40ed8 <flatcc_json_printer_clear@@Base+0xc54>
   40ec0:	mov	r0, #1
   40ec4:	subs	r4, r4, r8
   40ec8:	lsl	r1, r0, sl
   40ecc:	orr	r1, r1, r0, lsr fp
   40ed0:	lsl	r0, r0, ip
   40ed4:	sbc	r5, r5, r9
   40ed8:	cmp	ip, #0
   40edc:	beq	40f68 <flatcc_json_printer_clear@@Base+0xce4>
   40ee0:	lsr	r6, r8, #1
   40ee4:	orr	r6, r6, r9, lsl #31
   40ee8:	lsr	r7, r9, #1
   40eec:	mov	r2, ip
   40ef0:	b	40f14 <flatcc_json_printer_clear@@Base+0xc90>
   40ef4:	subs	r3, r4, r6
   40ef8:	sbc	r8, r5, r7
   40efc:	adds	r3, r3, r3
   40f00:	adc	r8, r8, r8
   40f04:	adds	r4, r3, #1
   40f08:	adc	r5, r8, #0
   40f0c:	subs	r2, r2, #1
   40f10:	beq	40f30 <flatcc_json_printer_clear@@Base+0xcac>
   40f14:	cmp	r5, r7
   40f18:	cmpeq	r4, r6
   40f1c:	bcs	40ef4 <flatcc_json_printer_clear@@Base+0xc70>
   40f20:	adds	r4, r4, r4
   40f24:	adc	r5, r5, r5
   40f28:	subs	r2, r2, #1
   40f2c:	bne	40f14 <flatcc_json_printer_clear@@Base+0xc90>
   40f30:	lsr	r3, r4, ip
   40f34:	orr	r3, r3, r5, lsl fp
   40f38:	lsr	r2, r5, ip
   40f3c:	orr	r3, r3, r5, lsr sl
   40f40:	adds	r0, r0, r4
   40f44:	mov	r4, r3
   40f48:	lsl	r3, r2, ip
   40f4c:	orr	r3, r3, r4, lsl sl
   40f50:	lsl	ip, r4, ip
   40f54:	orr	r3, r3, r4, lsr fp
   40f58:	adc	r1, r1, r5
   40f5c:	subs	r0, r0, ip
   40f60:	mov	r5, r2
   40f64:	sbc	r1, r1, r3
   40f68:	cmp	lr, #0
   40f6c:	strdne	r4, [lr]
   40f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040f74 <__libc_csu_init@@Base>:
   40f74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   40f78:	mov	r7, r0
   40f7c:	ldr	r6, [pc, #72]	; 40fcc <__libc_csu_init@@Base+0x58>
   40f80:	ldr	r5, [pc, #72]	; 40fd0 <__libc_csu_init@@Base+0x5c>
   40f84:	add	r6, pc, r6
   40f88:	add	r5, pc, r5
   40f8c:	sub	r6, r6, r5
   40f90:	mov	r8, r1
   40f94:	mov	r9, r2
   40f98:	bl	14e0c <raise@plt-0x20>
   40f9c:	asrs	r6, r6, #2
   40fa0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   40fa4:	mov	r4, #0
   40fa8:	add	r4, r4, #1
   40fac:	ldr	r3, [r5], #4
   40fb0:	mov	r2, r9
   40fb4:	mov	r1, r8
   40fb8:	mov	r0, r7
   40fbc:	blx	r3
   40fc0:	cmp	r6, r4
   40fc4:	bne	40fa8 <__libc_csu_init@@Base+0x34>
   40fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   40fcc:	andeq	r6, r1, r0, lsl #31
   40fd0:	andeq	r6, r1, r8, ror pc

00040fd4 <__libc_csu_fini@@Base>:
   40fd4:	bx	lr

Disassembly of section .fini:

00040fd8 <.fini>:
   40fd8:	push	{r3, lr}
   40fdc:	pop	{r3, pc}
