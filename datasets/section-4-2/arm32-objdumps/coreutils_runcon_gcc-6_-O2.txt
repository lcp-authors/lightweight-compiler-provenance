
../repos/coreutils/src/runcon:     file format elf32-littlearm


Disassembly of section .init:

00010ed0 <.init>:
   10ed0:	push	{r3, lr}
   10ed4:	bl	11934 <abort@plt+0x774>
   10ed8:	pop	{r3, pc}

Disassembly of section .plt:

00010edc <calloc@plt-0x14>:
   10edc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ee0:	ldr	lr, [pc, #4]	; 10eec <calloc@plt-0x4>
   10ee4:	add	lr, pc, lr
   10ee8:	ldr	pc, [lr, #8]!
   10eec:	andeq	r5, r1, r4, lsl r1

00010ef0 <calloc@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #276]!	; 0x114

00010efc <fputs_unlocked@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #268]!	; 0x10c

00010f08 <raise@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #260]!	; 0x104

00010f14 <string_to_security_class@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #252]!	; 0xfc

00010f20 <is_selinux_enabled@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #244]!	; 0xf4

00010f2c <strcmp@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #236]!	; 0xec

00010f38 <fflush@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #228]!	; 0xe4

00010f44 <free@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #220]!	; 0xdc

00010f50 <_exit@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #212]!	; 0xd4

00010f5c <memcpy@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #204]!	; 0xcc

00010f68 <execvp@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #196]!	; 0xc4

00010f74 <mbsinit@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #188]!	; 0xbc

00010f80 <context_new@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #180]!	; 0xb4

00010f8c <memcmp@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #172]!	; 0xac

00010f98 <fputc_unlocked@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #164]!	; 0xa4

00010fa4 <context_role_set@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #156]!	; 0x9c

00010fb0 <dcgettext@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #148]!	; 0x94

00010fbc <context_type_set@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #140]!	; 0x8c

00010fc8 <realloc@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #132]!	; 0x84

00010fd4 <fgetfilecon@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #124]!	; 0x7c

00010fe0 <textdomain@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #116]!	; 0x74

00010fec <iswprint@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #108]!	; 0x6c

00010ff8 <fwrite@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #100]!	; 0x64

00011004 <lseek64@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #92]!	; 0x5c

00011010 <__ctype_get_mb_cur_max@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #84]!	; 0x54

0001101c <getcon@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #86016	; 0x15000
   11024:	ldr	pc, [ip, #76]!	; 0x4c

00011028 <__fpending@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #86016	; 0x15000
   11030:	ldr	pc, [ip, #68]!	; 0x44

00011034 <mbrtowc@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #86016	; 0x15000
   1103c:	ldr	pc, [ip, #60]!	; 0x3c

00011040 <error@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #86016	; 0x15000
   11048:	ldr	pc, [ip, #52]!	; 0x34

0001104c <security_check_context@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #86016	; 0x15000
   11054:	ldr	pc, [ip, #44]!	; 0x2c

00011058 <lgetfilecon@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #86016	; 0x15000
   11060:	ldr	pc, [ip, #36]!	; 0x24

00011064 <malloc@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #86016	; 0x15000
   1106c:	ldr	pc, [ip, #28]!

00011070 <__libc_start_main@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #86016	; 0x15000
   11078:	ldr	pc, [ip, #20]!

0001107c <__freading@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #86016	; 0x15000
   11084:	ldr	pc, [ip, #12]!

00011088 <__gmon_start__@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #86016	; 0x15000
   11090:	ldr	pc, [ip, #4]!

00011094 <getopt_long@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #20, 20	; 0x14000
   1109c:	ldr	pc, [ip, #4092]!	; 0xffc

000110a0 <__ctype_b_loc@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #20, 20	; 0x14000
   110a8:	ldr	pc, [ip, #4084]!	; 0xff4

000110ac <exit@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #20, 20	; 0x14000
   110b4:	ldr	pc, [ip, #4076]!	; 0xfec

000110b8 <context_user_set@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #20, 20	; 0x14000
   110c0:	ldr	pc, [ip, #4068]!	; 0xfe4

000110c4 <getfilecon@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #20, 20	; 0x14000
   110cc:	ldr	pc, [ip, #4060]!	; 0xfdc

000110d0 <strlen@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #20, 20	; 0x14000
   110d8:	ldr	pc, [ip, #4052]!	; 0xfd4

000110dc <__errno_location@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #20, 20	; 0x14000
   110e4:	ldr	pc, [ip, #4044]!	; 0xfcc

000110e8 <__cxa_atexit@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #20, 20	; 0x14000
   110f0:	ldr	pc, [ip, #4036]!	; 0xfc4

000110f4 <memset@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #20, 20	; 0x14000
   110fc:	ldr	pc, [ip, #4028]!	; 0xfbc

00011100 <__printf_chk@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #20, 20	; 0x14000
   11108:	ldr	pc, [ip, #4020]!	; 0xfb4

0001110c <fileno@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #20, 20	; 0x14000
   11114:	ldr	pc, [ip, #4012]!	; 0xfac

00011118 <__fprintf_chk@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #20, 20	; 0x14000
   11120:	ldr	pc, [ip, #4004]!	; 0xfa4

00011124 <fclose@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #20, 20	; 0x14000
   1112c:	ldr	pc, [ip, #3996]!	; 0xf9c

00011130 <fseeko64@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #20, 20	; 0x14000
   11138:	ldr	pc, [ip, #3988]!	; 0xf94

0001113c <__overflow@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #20, 20	; 0x14000
   11144:	ldr	pc, [ip, #3980]!	; 0xf8c

00011148 <setlocale@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #20, 20	; 0x14000
   11150:	ldr	pc, [ip, #3972]!	; 0xf84

00011154 <strrchr@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #20, 20	; 0x14000
   1115c:	ldr	pc, [ip, #3964]!	; 0xf7c

00011160 <nl_langinfo@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #20, 20	; 0x14000
   11168:	ldr	pc, [ip, #3956]!	; 0xf74

0001116c <security_compute_create@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #20, 20	; 0x14000
   11174:	ldr	pc, [ip, #3948]!	; 0xf6c

00011178 <freecon@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #20, 20	; 0x14000
   11180:	ldr	pc, [ip, #3940]!	; 0xf64

00011184 <bindtextdomain@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #20, 20	; 0x14000
   1118c:	ldr	pc, [ip, #3932]!	; 0xf5c

00011190 <context_range_set@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #20, 20	; 0x14000
   11198:	ldr	pc, [ip, #3924]!	; 0xf54

0001119c <setexeccon@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #20, 20	; 0x14000
   111a4:	ldr	pc, [ip, #3916]!	; 0xf4c

000111a8 <context_str@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #20, 20	; 0x14000
   111b0:	ldr	pc, [ip, #3908]!	; 0xf44

000111b4 <strncmp@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #20, 20	; 0x14000
   111bc:	ldr	pc, [ip, #3900]!	; 0xf3c

000111c0 <abort@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #20, 20	; 0x14000
   111c8:	ldr	pc, [ip, #3892]!	; 0xf34

Disassembly of section .text:

000111cc <.text>:
   111cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111d0:	sub	sp, sp, #44	; 0x2c
   111d4:	mov	r4, #0
   111d8:	mov	r7, r0
   111dc:	ldr	r0, [r1]
   111e0:	mov	r5, r1
   111e4:	str	r4, [sp, #24]
   111e8:	str	r4, [sp, #28]
   111ec:	str	r4, [sp, #32]
   111f0:	bl	11e28 <abort@plt+0xc68>
   111f4:	ldr	r1, [pc, #1656]	; 11874 <abort@plt+0x6b4>
   111f8:	mov	r0, #6
   111fc:	bl	11148 <setlocale@plt>
   11200:	ldr	sl, [pc, #1648]	; 11878 <abort@plt+0x6b8>
   11204:	ldr	r1, [pc, #1648]	; 1187c <abort@plt+0x6bc>
   11208:	ldr	r0, [pc, #1648]	; 11880 <abort@plt+0x6c0>
   1120c:	ldr	r9, [pc, #1648]	; 11884 <abort@plt+0x6c4>
   11210:	ldr	fp, [pc, #1648]	; 11888 <abort@plt+0x6c8>
   11214:	bl	11184 <bindtextdomain@plt>
   11218:	mov	r6, r4
   1121c:	ldr	r0, [pc, #1628]	; 11880 <abort@plt+0x6c0>
   11220:	add	r8, sp, #36	; 0x24
   11224:	bl	10fe0 <textdomain@plt>
   11228:	ldr	r0, [pc, #1628]	; 1188c <abort@plt+0x6cc>
   1122c:	bl	1522c <abort@plt+0x406c>
   11230:	str	r4, [sp, #20]
   11234:	str	r4, [sp, #12]
   11238:	str	r4, [sp, #16]
   1123c:	str	r4, [sp, #8]
   11240:	str	r8, [sp]
   11244:	mov	r3, sl
   11248:	mov	r2, r9
   1124c:	mov	r1, r5
   11250:	mov	r0, r7
   11254:	str	r6, [sp, #36]	; 0x24
   11258:	bl	11094 <getopt_long@plt>
   1125c:	cmn	r0, #1
   11260:	beq	11348 <abort@plt+0x188>
   11264:	cmp	r0, #108	; 0x6c
   11268:	beq	11330 <abort@plt+0x170>
   1126c:	bgt	112b8 <abort@plt+0xf8>
   11270:	cmn	r0, #2
   11274:	beq	112f8 <abort@plt+0x138>
   11278:	cmp	r0, #99	; 0x63
   1127c:	beq	112f0 <abort@plt+0x130>
   11280:	cmn	r0, #3
   11284:	bne	112d0 <abort@plt+0x110>
   11288:	ldr	r1, [pc, #1536]	; 11890 <abort@plt+0x6d0>
   1128c:	ldr	r3, [pc, #1536]	; 11894 <abort@plt+0x6d4>
   11290:	ldr	r2, [pc, #1536]	; 11898 <abort@plt+0x6d8>
   11294:	str	r6, [sp, #4]
   11298:	ldr	r0, [r1]
   1129c:	ldr	r3, [r3]
   112a0:	ldr	r1, [pc, #1524]	; 1189c <abort@plt+0x6dc>
   112a4:	str	r2, [sp]
   112a8:	ldr	r2, [pc, #1520]	; 118a0 <abort@plt+0x6e0>
   112ac:	bl	141dc <abort@plt+0x301c>
   112b0:	mov	r0, #0
   112b4:	bl	110ac <exit@plt>
   112b8:	cmp	r0, #116	; 0x74
   112bc:	beq	11300 <abort@plt+0x140>
   112c0:	cmp	r0, #117	; 0x75
   112c4:	beq	112d8 <abort@plt+0x118>
   112c8:	cmp	r0, #114	; 0x72
   112cc:	beq	11318 <abort@plt+0x158>
   112d0:	mov	r0, #1
   112d4:	bl	11a20 <abort@plt+0x860>
   112d8:	ldr	r3, [sp, #12]
   112dc:	cmp	r3, #0
   112e0:	bne	116d8 <abort@plt+0x518>
   112e4:	ldr	r3, [fp]
   112e8:	str	r3, [sp, #12]
   112ec:	b	11240 <abort@plt+0x80>
   112f0:	mov	r4, #1
   112f4:	b	11240 <abort@plt+0x80>
   112f8:	mov	r0, #0
   112fc:	bl	11a20 <abort@plt+0x860>
   11300:	ldr	r3, [sp, #20]
   11304:	cmp	r3, #0
   11308:	bne	116f8 <abort@plt+0x538>
   1130c:	ldr	r3, [fp]
   11310:	str	r3, [sp, #20]
   11314:	b	11240 <abort@plt+0x80>
   11318:	ldr	r3, [sp, #8]
   1131c:	cmp	r3, #0
   11320:	bne	11704 <abort@plt+0x544>
   11324:	ldr	r3, [fp]
   11328:	str	r3, [sp, #8]
   1132c:	b	11240 <abort@plt+0x80>
   11330:	ldr	r3, [sp, #16]
   11334:	cmp	r3, #0
   11338:	bne	11710 <abort@plt+0x550>
   1133c:	ldr	r3, [fp]
   11340:	str	r3, [sp, #16]
   11344:	b	11240 <abort@plt+0x80>
   11348:	ldr	r6, [pc, #1364]	; 118a4 <abort@plt+0x6e4>
   1134c:	ldr	r3, [r6]
   11350:	cmp	r7, r3
   11354:	beq	11468 <abort@plt+0x2a8>
   11358:	ldr	r2, [sp, #12]
   1135c:	ldr	r1, [sp, #8]
   11360:	cmp	r2, #0
   11364:	cmpeq	r1, #0
   11368:	moveq	r8, #1
   1136c:	movne	r8, #0
   11370:	bne	113ac <abort@plt+0x1ec>
   11374:	ldr	r2, [sp, #20]
   11378:	ldr	r1, [sp, #16]
   1137c:	cmp	r2, #0
   11380:	cmpeq	r1, #0
   11384:	moveq	r8, #1
   11388:	movne	r8, #0
   1138c:	eor	r8, r8, #1
   11390:	orrs	r8, r4, r8
   11394:	bne	114b4 <abort@plt+0x2f4>
   11398:	cmp	r7, r3
   1139c:	addgt	r2, r3, #1
   113a0:	strgt	r2, [r6]
   113a4:	ldrgt	r8, [r5, r3, lsl #2]
   113a8:	ble	117e0 <abort@plt+0x620>
   113ac:	ldr	r3, [r6]
   113b0:	cmp	r7, r3
   113b4:	ble	116b0 <abort@plt+0x4f0>
   113b8:	bl	10f20 <is_selinux_enabled@plt>
   113bc:	cmp	r0, #1
   113c0:	mov	r7, r0
   113c4:	bne	11804 <abort@plt+0x644>
   113c8:	cmp	r8, #0
   113cc:	beq	114bc <abort@plt+0x2fc>
   113d0:	mov	r0, r8
   113d4:	bl	10f80 <context_new@plt>
   113d8:	subs	r4, r0, #0
   113dc:	beq	1183c <abort@plt+0x67c>
   113e0:	mov	r0, r4
   113e4:	bl	111a8 <context_str@plt>
   113e8:	bl	1104c <security_check_context@plt>
   113ec:	cmp	r0, #0
   113f0:	blt	1182c <abort@plt+0x66c>
   113f4:	mov	r0, r4
   113f8:	bl	111a8 <context_str@plt>
   113fc:	bl	1119c <setexeccon@plt>
   11400:	cmp	r0, #0
   11404:	bne	11674 <abort@plt+0x4b4>
   11408:	ldr	r0, [sp, #24]
   1140c:	cmp	r0, #0
   11410:	beq	11418 <abort@plt+0x258>
   11414:	bl	11178 <freecon@plt>
   11418:	ldr	r3, [r6]
   1141c:	add	r1, r5, r3, lsl #2
   11420:	ldr	r0, [r5, r3, lsl #2]
   11424:	bl	10f68 <execvp@plt>
   11428:	bl	110dc <__errno_location@plt>
   1142c:	ldr	r3, [r6]
   11430:	ldr	r4, [r0]
   11434:	ldr	r0, [r5, r3, lsl #2]
   11438:	bl	13ce8 <abort@plt+0x2b28>
   1143c:	mov	r1, r4
   11440:	cmp	r4, #2
   11444:	ldr	r2, [pc, #1116]	; 118a8 <abort@plt+0x6e8>
   11448:	moveq	r4, #127	; 0x7f
   1144c:	movne	r4, #126	; 0x7e
   11450:	mov	r3, r0
   11454:	mov	r0, #0
   11458:	bl	11040 <error@plt>
   1145c:	mov	r0, r4
   11460:	add	sp, sp, #44	; 0x2c
   11464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11468:	add	r0, sp, #24
   1146c:	bl	1101c <getcon@plt>
   11470:	cmp	r0, #0
   11474:	blt	11604 <abort@plt+0x444>
   11478:	ldr	r4, [pc, #1040]	; 11890 <abort@plt+0x6d0>
   1147c:	ldr	r0, [sp, #24]
   11480:	ldr	r1, [r4]
   11484:	bl	10efc <fputs_unlocked@plt>
   11488:	ldr	r0, [r4]
   1148c:	ldr	r3, [r0, #20]
   11490:	ldr	r2, [r0, #24]
   11494:	cmp	r2, r3
   11498:	bls	115f4 <abort@plt+0x434>
   1149c:	add	r1, r3, #1
   114a0:	mov	r2, #10
   114a4:	str	r1, [r0, #20]
   114a8:	mov	r4, #0
   114ac:	strb	r2, [r3]
   114b0:	b	1145c <abort@plt+0x29c>
   114b4:	mov	r8, #0
   114b8:	b	113ac <abort@plt+0x1ec>
   114bc:	add	r0, sp, #24
   114c0:	bl	1101c <getcon@plt>
   114c4:	cmp	r0, #0
   114c8:	blt	11604 <abort@plt+0x444>
   114cc:	cmp	r4, #0
   114d0:	beq	11530 <abort@plt+0x370>
   114d4:	ldr	r3, [r6]
   114d8:	add	r1, sp, #28
   114dc:	ldr	r0, [r5, r3, lsl #2]
   114e0:	bl	13d70 <abort@plt+0x2bb0>
   114e4:	cmn	r0, #1
   114e8:	beq	117a0 <abort@plt+0x5e0>
   114ec:	ldr	r0, [pc, #952]	; 118ac <abort@plt+0x6ec>
   114f0:	ldr	r4, [sp, #24]
   114f4:	ldr	r9, [sp, #28]
   114f8:	bl	10f14 <string_to_security_class@plt>
   114fc:	mov	r1, r9
   11500:	add	r3, sp, #32
   11504:	mov	r2, r0
   11508:	mov	r0, r4
   1150c:	bl	1116c <security_compute_create@plt>
   11510:	cmp	r0, #0
   11514:	bne	11778 <abort@plt+0x5b8>
   11518:	ldr	r0, [sp, #28]
   1151c:	bl	11178 <freecon@plt>
   11520:	ldr	r0, [sp, #24]
   11524:	bl	11178 <freecon@plt>
   11528:	ldr	r3, [sp, #32]
   1152c:	str	r3, [sp, #24]
   11530:	ldr	r0, [sp, #24]
   11534:	bl	10f80 <context_new@plt>
   11538:	subs	r4, r0, #0
   1153c:	beq	1171c <abort@plt+0x55c>
   11540:	ldr	r3, [sp, #12]
   11544:	cmp	r3, #0
   11548:	beq	1155c <abort@plt+0x39c>
   1154c:	mov	r1, r3
   11550:	bl	110b8 <context_user_set@plt>
   11554:	cmp	r0, #0
   11558:	bne	11754 <abort@plt+0x594>
   1155c:	ldr	r3, [sp, #20]
   11560:	cmp	r3, #0
   11564:	beq	1157c <abort@plt+0x3bc>
   11568:	mov	r1, r3
   1156c:	mov	r0, r4
   11570:	bl	10fbc <context_type_set@plt>
   11574:	cmp	r0, #0
   11578:	bne	1162c <abort@plt+0x46c>
   1157c:	ldr	r3, [sp, #16]
   11580:	cmp	r3, #0
   11584:	beq	1159c <abort@plt+0x3dc>
   11588:	mov	r1, r3
   1158c:	mov	r0, r4
   11590:	bl	11190 <context_range_set@plt>
   11594:	cmp	r0, #0
   11598:	bne	11650 <abort@plt+0x490>
   1159c:	ldr	r3, [sp, #8]
   115a0:	cmp	r3, #0
   115a4:	beq	113e0 <abort@plt+0x220>
   115a8:	mov	r1, r3
   115ac:	mov	r0, r4
   115b0:	bl	10fa4 <context_role_set@plt>
   115b4:	cmp	r0, #0
   115b8:	beq	113e0 <abort@plt+0x220>
   115bc:	bl	110dc <__errno_location@plt>
   115c0:	mov	r2, #5
   115c4:	ldr	r1, [pc, #740]	; 118b0 <abort@plt+0x6f0>
   115c8:	ldr	r4, [r0]
   115cc:	mov	r0, #0
   115d0:	bl	10fb0 <dcgettext@plt>
   115d4:	mov	r5, r0
   115d8:	ldr	r0, [sp, #8]
   115dc:	bl	13ce8 <abort@plt+0x2b28>
   115e0:	mov	r2, r5
   115e4:	mov	r1, r4
   115e8:	mov	r3, r0
   115ec:	mov	r0, #1
   115f0:	bl	11040 <error@plt>
   115f4:	mov	r1, #10
   115f8:	bl	1113c <__overflow@plt>
   115fc:	mov	r4, #0
   11600:	b	1145c <abort@plt+0x29c>
   11604:	bl	110dc <__errno_location@plt>
   11608:	mov	r2, #5
   1160c:	ldr	r1, [pc, #672]	; 118b4 <abort@plt+0x6f4>
   11610:	ldr	r4, [r0]
   11614:	mov	r0, #0
   11618:	bl	10fb0 <dcgettext@plt>
   1161c:	mov	r1, r4
   11620:	mov	r2, r0
   11624:	mov	r0, #1
   11628:	bl	11040 <error@plt>
   1162c:	bl	110dc <__errno_location@plt>
   11630:	mov	r2, #5
   11634:	ldr	r1, [pc, #636]	; 118b8 <abort@plt+0x6f8>
   11638:	ldr	r4, [r0]
   1163c:	mov	r0, #0
   11640:	bl	10fb0 <dcgettext@plt>
   11644:	mov	r5, r0
   11648:	ldr	r0, [sp, #20]
   1164c:	b	115dc <abort@plt+0x41c>
   11650:	bl	110dc <__errno_location@plt>
   11654:	mov	r2, #5
   11658:	ldr	r1, [pc, #604]	; 118bc <abort@plt+0x6fc>
   1165c:	ldr	r4, [r0]
   11660:	mov	r0, #0
   11664:	bl	10fb0 <dcgettext@plt>
   11668:	mov	r5, r0
   1166c:	ldr	r0, [sp, #16]
   11670:	b	115dc <abort@plt+0x41c>
   11674:	bl	110dc <__errno_location@plt>
   11678:	ldr	r1, [pc, #576]	; 118c0 <abort@plt+0x700>
   1167c:	mov	r2, #5
   11680:	ldr	r5, [r0]
   11684:	mov	r0, #0
   11688:	bl	10fb0 <dcgettext@plt>
   1168c:	mov	r6, r0
   11690:	mov	r0, r4
   11694:	bl	111a8 <context_str@plt>
   11698:	bl	13ce8 <abort@plt+0x2b28>
   1169c:	mov	r2, r6
   116a0:	mov	r1, r5
   116a4:	mov	r3, r0
   116a8:	mov	r0, #1
   116ac:	bl	11040 <error@plt>
   116b0:	mov	r2, #5
   116b4:	ldr	r1, [pc, #520]	; 118c4 <abort@plt+0x704>
   116b8:	mov	r0, #0
   116bc:	bl	10fb0 <dcgettext@plt>
   116c0:	mov	r1, #0
   116c4:	mov	r2, r0
   116c8:	mov	r0, r1
   116cc:	bl	11040 <error@plt>
   116d0:	mov	r0, #1
   116d4:	bl	11a20 <abort@plt+0x860>
   116d8:	ldr	r1, [pc, #488]	; 118c8 <abort@plt+0x708>
   116dc:	mov	r2, #5
   116e0:	mov	r0, #0
   116e4:	bl	10fb0 <dcgettext@plt>
   116e8:	mov	r1, #0
   116ec:	mov	r2, r0
   116f0:	mov	r0, #1
   116f4:	bl	11040 <error@plt>
   116f8:	mov	r2, #5
   116fc:	ldr	r1, [pc, #456]	; 118cc <abort@plt+0x70c>
   11700:	b	116e0 <abort@plt+0x520>
   11704:	mov	r2, #5
   11708:	ldr	r1, [pc, #448]	; 118d0 <abort@plt+0x710>
   1170c:	b	116e0 <abort@plt+0x520>
   11710:	mov	r2, #5
   11714:	ldr	r1, [pc, #440]	; 118d4 <abort@plt+0x714>
   11718:	b	116e0 <abort@plt+0x520>
   1171c:	bl	110dc <__errno_location@plt>
   11720:	mov	r2, #5
   11724:	ldr	r1, [pc, #428]	; 118d8 <abort@plt+0x718>
   11728:	ldr	r5, [r0]
   1172c:	mov	r0, r4
   11730:	bl	10fb0 <dcgettext@plt>
   11734:	mov	r4, r0
   11738:	ldr	r0, [sp, #24]
   1173c:	bl	13ce8 <abort@plt+0x2b28>
   11740:	mov	r2, r4
   11744:	mov	r1, r5
   11748:	mov	r3, r0
   1174c:	mov	r0, #1
   11750:	bl	11040 <error@plt>
   11754:	bl	110dc <__errno_location@plt>
   11758:	mov	r2, #5
   1175c:	ldr	r1, [pc, #376]	; 118dc <abort@plt+0x71c>
   11760:	ldr	r4, [r0]
   11764:	mov	r0, #0
   11768:	bl	10fb0 <dcgettext@plt>
   1176c:	mov	r5, r0
   11770:	ldr	r0, [sp, #12]
   11774:	b	115dc <abort@plt+0x41c>
   11778:	bl	110dc <__errno_location@plt>
   1177c:	mov	r2, #5
   11780:	ldr	r1, [pc, #344]	; 118e0 <abort@plt+0x720>
   11784:	ldr	r4, [r0]
   11788:	mov	r0, r8
   1178c:	bl	10fb0 <dcgettext@plt>
   11790:	mov	r1, r4
   11794:	mov	r2, r0
   11798:	mov	r0, r7
   1179c:	bl	11040 <error@plt>
   117a0:	bl	110dc <__errno_location@plt>
   117a4:	mov	r2, #5
   117a8:	ldr	r1, [pc, #308]	; 118e4 <abort@plt+0x724>
   117ac:	ldr	r4, [r0]
   117b0:	mov	r0, r8
   117b4:	bl	10fb0 <dcgettext@plt>
   117b8:	ldr	r3, [r6]
   117bc:	ldr	r1, [r5, r3, lsl #2]
   117c0:	mov	r8, r0
   117c4:	mov	r0, #4
   117c8:	bl	13aa8 <abort@plt+0x28e8>
   117cc:	mov	r2, r8
   117d0:	mov	r1, r4
   117d4:	mov	r3, r0
   117d8:	mov	r0, r7
   117dc:	bl	11040 <error@plt>
   117e0:	mov	r2, #5
   117e4:	ldr	r1, [pc, #252]	; 118e8 <abort@plt+0x728>
   117e8:	mov	r0, r8
   117ec:	bl	10fb0 <dcgettext@plt>
   117f0:	mov	r1, r8
   117f4:	mov	r2, r0
   117f8:	mov	r0, r8
   117fc:	bl	11040 <error@plt>
   11800:	b	112d0 <abort@plt+0x110>
   11804:	mov	r2, #5
   11808:	ldr	r1, [pc, #220]	; 118ec <abort@plt+0x72c>
   1180c:	mov	r0, #0
   11810:	bl	10fb0 <dcgettext@plt>
   11814:	ldr	r3, [pc, #212]	; 118f0 <abort@plt+0x730>
   11818:	mov	r1, #0
   1181c:	ldr	r3, [r3]
   11820:	mov	r2, r0
   11824:	mov	r0, #1
   11828:	bl	11040 <error@plt>
   1182c:	bl	110dc <__errno_location@plt>
   11830:	mov	r2, #5
   11834:	ldr	r1, [pc, #184]	; 118f4 <abort@plt+0x734>
   11838:	b	11680 <abort@plt+0x4c0>
   1183c:	bl	110dc <__errno_location@plt>
   11840:	mov	r2, #5
   11844:	ldr	r1, [pc, #140]	; 118d8 <abort@plt+0x718>
   11848:	ldr	r5, [r0]
   1184c:	mov	r0, r4
   11850:	bl	10fb0 <dcgettext@plt>
   11854:	mov	r4, r0
   11858:	mov	r0, r8
   1185c:	bl	13ce8 <abort@plt+0x2b28>
   11860:	mov	r2, r4
   11864:	mov	r1, r5
   11868:	mov	r3, r0
   1186c:	mov	r0, r7
   11870:	bl	11040 <error@plt>
   11874:	andeq	r5, r1, r8, lsr #11
   11878:	andeq	r5, r1, r8, lsl #5
   1187c:	ldrdeq	r5, [r1], -r0
   11880:	andeq	r5, r1, r8, lsr #12
   11884:	andeq	r5, r1, r8, ror #13
   11888:	andeq	r6, r2, r0, ror r1
   1188c:	andeq	r1, r1, r4, asr #26
   11890:	andeq	r6, r2, ip, ror #2
   11894:	andeq	r6, r2, ip, lsl #2
   11898:	andeq	r5, r1, ip, lsr r7
   1189c:	andeq	r5, r1, r8, lsl #6
   118a0:	andeq	r5, r1, r4, lsr #12
   118a4:	andeq	r6, r2, r0, ror #2
   118a8:	andeq	r5, r1, r0, asr #17
   118ac:	andeq	r5, r1, ip, lsr #16
   118b0:	andeq	r5, r1, r8, lsr #17
   118b4:	andeq	r5, r1, ip, asr #14
   118b8:	andeq	r5, r1, r0, ror r8
   118bc:	andeq	r5, r1, ip, lsl #17
   118c0:	ldrdeq	r5, [r1], -r8
   118c4:	muleq	r1, ip, r7
   118c8:	andeq	r5, r1, r4, lsl r7
   118cc:	andeq	r5, r1, r4, lsl #14
   118d0:	strdeq	r5, [r1], -r4
   118d4:	andeq	r5, r1, r4, lsr #14
   118d8:	ldrdeq	r5, [r1], -ip
   118dc:	andeq	r5, r1, r4, asr r8
   118e0:	andeq	r5, r1, r4, lsr r8
   118e4:	andeq	r5, r1, r4, lsl #16
   118e8:	andeq	r5, r1, ip, ror #14
   118ec:			; <UNDEFINED> instruction: 0x000157b4
   118f0:	andeq	r6, r2, r0, lsl #3
   118f4:	andeq	r5, r1, r4, asr #17
   118f8:	mov	fp, #0
   118fc:	mov	lr, #0
   11900:	pop	{r1}		; (ldr r1, [sp], #4)
   11904:	mov	r2, sp
   11908:	push	{r2}		; (str r2, [sp, #-4]!)
   1190c:	push	{r0}		; (str r0, [sp, #-4]!)
   11910:	ldr	ip, [pc, #16]	; 11928 <abort@plt+0x768>
   11914:	push	{ip}		; (str ip, [sp, #-4]!)
   11918:	ldr	r0, [pc, #12]	; 1192c <abort@plt+0x76c>
   1191c:	ldr	r3, [pc, #12]	; 11930 <abort@plt+0x770>
   11920:	bl	11070 <__libc_start_main@plt>
   11924:	bl	111c0 <abort@plt>
   11928:	andeq	r5, r1, r8, lsr #4
   1192c:	andeq	r1, r1, ip, asr #3
   11930:	andeq	r5, r1, r8, asr #3
   11934:	ldr	r3, [pc, #20]	; 11950 <abort@plt+0x790>
   11938:	ldr	r2, [pc, #20]	; 11954 <abort@plt+0x794>
   1193c:	add	r3, pc, r3
   11940:	ldr	r2, [r3, r2]
   11944:	cmp	r2, #0
   11948:	bxeq	lr
   1194c:	b	11088 <__gmon_start__@plt>
   11950:			; <UNDEFINED> instruction: 0x000146bc
   11954:	andeq	r0, r0, r0, lsl #2
   11958:	ldr	r3, [pc, #28]	; 1197c <abort@plt+0x7bc>
   1195c:	ldr	r0, [pc, #28]	; 11980 <abort@plt+0x7c0>
   11960:	sub	r3, r3, r0
   11964:	cmp	r3, #6
   11968:	bxls	lr
   1196c:	ldr	r3, [pc, #16]	; 11984 <abort@plt+0x7c4>
   11970:	cmp	r3, #0
   11974:	bxeq	lr
   11978:	bx	r3
   1197c:	andeq	r6, r2, r7, asr r1
   11980:	andeq	r6, r2, r4, asr r1
   11984:	andeq	r0, r0, r0
   11988:	ldr	r1, [pc, #36]	; 119b4 <abort@plt+0x7f4>
   1198c:	ldr	r0, [pc, #36]	; 119b8 <abort@plt+0x7f8>
   11990:	sub	r1, r1, r0
   11994:	asr	r1, r1, #2
   11998:	add	r1, r1, r1, lsr #31
   1199c:	asrs	r1, r1, #1
   119a0:	bxeq	lr
   119a4:	ldr	r3, [pc, #16]	; 119bc <abort@plt+0x7fc>
   119a8:	cmp	r3, #0
   119ac:	bxeq	lr
   119b0:	bx	r3
   119b4:	andeq	r6, r2, r4, asr r1
   119b8:	andeq	r6, r2, r4, asr r1
   119bc:	andeq	r0, r0, r0
   119c0:	push	{r4, lr}
   119c4:	ldr	r4, [pc, #24]	; 119e4 <abort@plt+0x824>
   119c8:	ldrb	r3, [r4]
   119cc:	cmp	r3, #0
   119d0:	popne	{r4, pc}
   119d4:	bl	11958 <abort@plt+0x798>
   119d8:	mov	r3, #1
   119dc:	strb	r3, [r4]
   119e0:	pop	{r4, pc}
   119e4:	andeq	r6, r2, r4, ror r1
   119e8:	ldr	r0, [pc, #40]	; 11a18 <abort@plt+0x858>
   119ec:	ldr	r3, [r0]
   119f0:	cmp	r3, #0
   119f4:	bne	119fc <abort@plt+0x83c>
   119f8:	b	11988 <abort@plt+0x7c8>
   119fc:	ldr	r3, [pc, #24]	; 11a1c <abort@plt+0x85c>
   11a00:	cmp	r3, #0
   11a04:	beq	119f8 <abort@plt+0x838>
   11a08:	push	{r4, lr}
   11a0c:	blx	r3
   11a10:	pop	{r4, lr}
   11a14:	b	11988 <abort@plt+0x7c8>
   11a18:	andeq	r5, r2, ip, lsl #30
   11a1c:	andeq	r0, r0, r0
   11a20:	subs	r6, r0, #0
   11a24:	push	{r7, lr}
   11a28:	sub	sp, sp, #56	; 0x38
   11a2c:	beq	11a68 <abort@plt+0x8a8>
   11a30:	ldr	r3, [pc, #664]	; 11cd0 <abort@plt+0xb10>
   11a34:	mov	r2, #5
   11a38:	ldr	r1, [pc, #660]	; 11cd4 <abort@plt+0xb14>
   11a3c:	mov	r0, #0
   11a40:	ldr	r4, [r3]
   11a44:	bl	10fb0 <dcgettext@plt>
   11a48:	ldr	r3, [pc, #648]	; 11cd8 <abort@plt+0xb18>
   11a4c:	mov	r1, #1
   11a50:	ldr	r3, [r3]
   11a54:	mov	r2, r0
   11a58:	mov	r0, r4
   11a5c:	bl	11118 <__fprintf_chk@plt>
   11a60:	mov	r0, r6
   11a64:	bl	110ac <exit@plt>
   11a68:	mov	r2, #5
   11a6c:	ldr	r1, [pc, #616]	; 11cdc <abort@plt+0xb1c>
   11a70:	bl	10fb0 <dcgettext@plt>
   11a74:	ldr	r3, [pc, #604]	; 11cd8 <abort@plt+0xb18>
   11a78:	ldr	r7, [pc, #608]	; 11ce0 <abort@plt+0xb20>
   11a7c:	ldr	r4, [pc, #608]	; 11ce4 <abort@plt+0xb24>
   11a80:	ldr	r3, [r3]
   11a84:	mov	r2, r3
   11a88:	mov	r1, r0
   11a8c:	mov	r0, #1
   11a90:	bl	11100 <__printf_chk@plt>
   11a94:	mov	r2, #5
   11a98:	ldr	r1, [pc, #584]	; 11ce8 <abort@plt+0xb28>
   11a9c:	mov	r0, r6
   11aa0:	bl	10fb0 <dcgettext@plt>
   11aa4:	ldr	r1, [r7]
   11aa8:	bl	10efc <fputs_unlocked@plt>
   11aac:	mov	r2, #5
   11ab0:	ldr	r1, [pc, #564]	; 11cec <abort@plt+0xb2c>
   11ab4:	mov	r0, r6
   11ab8:	bl	10fb0 <dcgettext@plt>
   11abc:	ldr	r1, [r7]
   11ac0:	bl	10efc <fputs_unlocked@plt>
   11ac4:	mov	r2, #5
   11ac8:	ldr	r1, [pc, #544]	; 11cf0 <abort@plt+0xb30>
   11acc:	mov	r0, r6
   11ad0:	bl	10fb0 <dcgettext@plt>
   11ad4:	ldr	r1, [r7]
   11ad8:	bl	10efc <fputs_unlocked@plt>
   11adc:	mov	r2, #5
   11ae0:	ldr	r1, [pc, #524]	; 11cf4 <abort@plt+0xb34>
   11ae4:	mov	r0, r6
   11ae8:	bl	10fb0 <dcgettext@plt>
   11aec:	ldr	r1, [r7]
   11af0:	bl	10efc <fputs_unlocked@plt>
   11af4:	mov	r2, #5
   11af8:	ldr	r1, [pc, #504]	; 11cf8 <abort@plt+0xb38>
   11afc:	mov	r0, r6
   11b00:	bl	10fb0 <dcgettext@plt>
   11b04:	ldr	r1, [r7]
   11b08:	bl	10efc <fputs_unlocked@plt>
   11b0c:	ldm	r4!, {r0, r1, r2, r3}
   11b10:	mov	lr, sp
   11b14:	stmia	lr!, {r0, r1, r2, r3}
   11b18:	ldm	r4!, {r0, r1, r2, r3}
   11b1c:	ldr	ip, [sp]
   11b20:	stmia	lr!, {r0, r1, r2, r3}
   11b24:	cmp	ip, #0
   11b28:	ldm	r4!, {r0, r1, r2, r3}
   11b2c:	stmia	lr!, {r0, r1, r2, r3}
   11b30:	ldm	r4, {r0, r1}
   11b34:	moveq	r4, sp
   11b38:	stm	lr, {r0, r1}
   11b3c:	beq	11b6c <abort@plt+0x9ac>
   11b40:	ldr	r5, [pc, #436]	; 11cfc <abort@plt+0xb3c>
   11b44:	mov	r4, sp
   11b48:	b	11b58 <abort@plt+0x998>
   11b4c:	ldr	ip, [r4, #8]!
   11b50:	cmp	ip, #0
   11b54:	beq	11b6c <abort@plt+0x9ac>
   11b58:	mov	r1, ip
   11b5c:	mov	r0, r5
   11b60:	bl	10f2c <strcmp@plt>
   11b64:	cmp	r0, #0
   11b68:	bne	11b4c <abort@plt+0x98c>
   11b6c:	ldr	r4, [r4, #4]
   11b70:	mov	r2, #5
   11b74:	cmp	r4, #0
   11b78:	ldr	r1, [pc, #384]	; 11d00 <abort@plt+0xb40>
   11b7c:	beq	11c24 <abort@plt+0xa64>
   11b80:	mov	r0, #0
   11b84:	bl	10fb0 <dcgettext@plt>
   11b88:	ldr	r3, [pc, #372]	; 11d04 <abort@plt+0xb44>
   11b8c:	ldr	r2, [pc, #372]	; 11d08 <abort@plt+0xb48>
   11b90:	mov	r1, r0
   11b94:	mov	r0, #1
   11b98:	bl	11100 <__printf_chk@plt>
   11b9c:	mov	r1, #0
   11ba0:	mov	r0, #5
   11ba4:	bl	11148 <setlocale@plt>
   11ba8:	cmp	r0, #0
   11bac:	ldreq	r5, [pc, #328]	; 11cfc <abort@plt+0xb3c>
   11bb0:	beq	11bcc <abort@plt+0xa0c>
   11bb4:	mov	r2, #3
   11bb8:	ldr	r1, [pc, #332]	; 11d0c <abort@plt+0xb4c>
   11bbc:	bl	111b4 <strncmp@plt>
   11bc0:	ldr	r5, [pc, #308]	; 11cfc <abort@plt+0xb3c>
   11bc4:	cmp	r0, #0
   11bc8:	bne	11cb4 <abort@plt+0xaf4>
   11bcc:	mov	r2, #5
   11bd0:	ldr	r1, [pc, #312]	; 11d10 <abort@plt+0xb50>
   11bd4:	mov	r0, #0
   11bd8:	bl	10fb0 <dcgettext@plt>
   11bdc:	ldr	r3, [pc, #280]	; 11cfc <abort@plt+0xb3c>
   11be0:	ldr	r2, [pc, #284]	; 11d04 <abort@plt+0xb44>
   11be4:	mov	r1, r0
   11be8:	mov	r0, #1
   11bec:	bl	11100 <__printf_chk@plt>
   11bf0:	mov	r2, #5
   11bf4:	ldr	r1, [pc, #280]	; 11d14 <abort@plt+0xb54>
   11bf8:	mov	r0, #0
   11bfc:	bl	10fb0 <dcgettext@plt>
   11c00:	ldr	r2, [pc, #272]	; 11d18 <abort@plt+0xb58>
   11c04:	cmp	r4, r5
   11c08:	ldr	r3, [pc, #268]	; 11d1c <abort@plt+0xb5c>
   11c0c:	movne	r3, r2
   11c10:	mov	r1, r0
   11c14:	mov	r2, r4
   11c18:	mov	r0, #1
   11c1c:	bl	11100 <__printf_chk@plt>
   11c20:	b	11a60 <abort@plt+0x8a0>
   11c24:	mov	r0, r4
   11c28:	bl	10fb0 <dcgettext@plt>
   11c2c:	ldr	r3, [pc, #208]	; 11d04 <abort@plt+0xb44>
   11c30:	ldr	r2, [pc, #208]	; 11d08 <abort@plt+0xb48>
   11c34:	mov	r1, r0
   11c38:	mov	r0, #1
   11c3c:	bl	11100 <__printf_chk@plt>
   11c40:	mov	r1, r4
   11c44:	mov	r0, #5
   11c48:	bl	11148 <setlocale@plt>
   11c4c:	cmp	r0, #0
   11c50:	beq	11c68 <abort@plt+0xaa8>
   11c54:	mov	r2, #3
   11c58:	ldr	r1, [pc, #172]	; 11d0c <abort@plt+0xb4c>
   11c5c:	bl	111b4 <strncmp@plt>
   11c60:	cmp	r0, #0
   11c64:	bne	11cac <abort@plt+0xaec>
   11c68:	mov	r2, #5
   11c6c:	ldr	r1, [pc, #156]	; 11d10 <abort@plt+0xb50>
   11c70:	mov	r0, #0
   11c74:	bl	10fb0 <dcgettext@plt>
   11c78:	ldr	r3, [pc, #124]	; 11cfc <abort@plt+0xb3c>
   11c7c:	ldr	r2, [pc, #128]	; 11d04 <abort@plt+0xb44>
   11c80:	mov	r4, r3
   11c84:	mov	r1, r0
   11c88:	mov	r0, #1
   11c8c:	bl	11100 <__printf_chk@plt>
   11c90:	ldr	r1, [pc, #124]	; 11d14 <abort@plt+0xb54>
   11c94:	mov	r2, #5
   11c98:	mov	r0, #0
   11c9c:	bl	10fb0 <dcgettext@plt>
   11ca0:	ldr	r3, [pc, #116]	; 11d1c <abort@plt+0xb5c>
   11ca4:	mov	r1, r0
   11ca8:	b	11c14 <abort@plt+0xa54>
   11cac:	ldr	r5, [pc, #72]	; 11cfc <abort@plt+0xb3c>
   11cb0:	mov	r4, r5
   11cb4:	mov	r2, #5
   11cb8:	ldr	r1, [pc, #96]	; 11d20 <abort@plt+0xb60>
   11cbc:	mov	r0, #0
   11cc0:	bl	10fb0 <dcgettext@plt>
   11cc4:	ldr	r1, [r7]
   11cc8:	bl	10efc <fputs_unlocked@plt>
   11ccc:	b	11bcc <abort@plt+0xa0c>
   11cd0:	andeq	r6, r2, r8, ror #2
   11cd4:	andeq	r5, r1, r0, lsl r3
   11cd8:	andeq	r6, r2, r0, lsl #3
   11cdc:	andeq	r5, r1, r8, lsr r3
   11ce0:	andeq	r6, r2, ip, ror #2
   11ce4:	andeq	r5, r1, r0, asr r2
   11ce8:	andeq	r5, r1, r4, lsr #7
   11cec:	andeq	r5, r1, r4, lsr #8
   11cf0:	andeq	r5, r1, r0, ror r4
   11cf4:	andeq	r5, r1, ip, ror r5
   11cf8:	andeq	r5, r1, ip, lsr #11
   11cfc:	andeq	r5, r1, r8, lsl #6
   11d00:	andeq	r5, r1, r4, ror #11
   11d04:	strdeq	r5, [r1], -ip
   11d08:	andeq	r5, r1, r4, lsr #12
   11d0c:	andeq	r5, r1, r4, lsr r6
   11d10:	andeq	r5, r1, r0, lsl #13
   11d14:	muleq	r1, ip, r6
   11d18:	andeq	r5, r1, r8, lsr #11
   11d1c:	andeq	r5, r1, r4, lsl #18
   11d20:	andeq	r5, r1, r8, lsr r6
   11d24:	ldr	r3, [pc, #4]	; 11d30 <abort@plt+0xb70>
   11d28:	str	r0, [r3]
   11d2c:	bx	lr
   11d30:	andeq	r6, r2, r8, ror r1
   11d34:	ldr	r3, [pc, #4]	; 11d40 <abort@plt+0xb80>
   11d38:	strb	r0, [r3, #4]
   11d3c:	bx	lr
   11d40:	andeq	r6, r2, r8, ror r1
   11d44:	ldr	r3, [pc, #192]	; 11e0c <abort@plt+0xc4c>
   11d48:	push	{r4, r5, r6, lr}
   11d4c:	sub	sp, sp, #8
   11d50:	ldr	r0, [r3]
   11d54:	bl	14930 <abort@plt+0x3770>
   11d58:	cmp	r0, #0
   11d5c:	beq	11d80 <abort@plt+0xbc0>
   11d60:	ldr	r4, [pc, #168]	; 11e10 <abort@plt+0xc50>
   11d64:	ldrb	r3, [r4, #4]
   11d68:	cmp	r3, #0
   11d6c:	beq	11d9c <abort@plt+0xbdc>
   11d70:	bl	110dc <__errno_location@plt>
   11d74:	ldr	r3, [r0]
   11d78:	cmp	r3, #32
   11d7c:	bne	11d9c <abort@plt+0xbdc>
   11d80:	ldr	r3, [pc, #140]	; 11e14 <abort@plt+0xc54>
   11d84:	ldr	r0, [r3]
   11d88:	bl	14930 <abort@plt+0x3770>
   11d8c:	cmp	r0, #0
   11d90:	bne	11de4 <abort@plt+0xc24>
   11d94:	add	sp, sp, #8
   11d98:	pop	{r4, r5, r6, pc}
   11d9c:	mov	r2, #5
   11da0:	ldr	r1, [pc, #112]	; 11e18 <abort@plt+0xc58>
   11da4:	mov	r0, #0
   11da8:	bl	10fb0 <dcgettext@plt>
   11dac:	ldr	r4, [r4]
   11db0:	cmp	r4, #0
   11db4:	mov	r5, r0
   11db8:	beq	11df0 <abort@plt+0xc30>
   11dbc:	bl	110dc <__errno_location@plt>
   11dc0:	ldr	r6, [r0]
   11dc4:	mov	r0, r4
   11dc8:	bl	13b50 <abort@plt+0x2990>
   11dcc:	mov	r1, r6
   11dd0:	str	r5, [sp]
   11dd4:	ldr	r2, [pc, #64]	; 11e1c <abort@plt+0xc5c>
   11dd8:	mov	r3, r0
   11ddc:	mov	r0, #0
   11de0:	bl	11040 <error@plt>
   11de4:	ldr	r3, [pc, #52]	; 11e20 <abort@plt+0xc60>
   11de8:	ldr	r0, [r3]
   11dec:	bl	10f50 <_exit@plt>
   11df0:	bl	110dc <__errno_location@plt>
   11df4:	mov	r3, r5
   11df8:	ldr	r2, [pc, #36]	; 11e24 <abort@plt+0xc64>
   11dfc:	ldr	r1, [r0]
   11e00:	mov	r0, r4
   11e04:	bl	11040 <error@plt>
   11e08:	b	11de4 <abort@plt+0xc24>
   11e0c:	andeq	r6, r2, ip, ror #2
   11e10:	andeq	r6, r2, r8, ror r1
   11e14:	andeq	r6, r2, r8, ror #2
   11e18:			; <UNDEFINED> instruction: 0x000159b0
   11e1c:			; <UNDEFINED> instruction: 0x000159bc
   11e20:	andeq	r6, r2, r0, lsl r1
   11e24:	andeq	r5, r1, r0, asr #17
   11e28:	push	{r4, r5, r6, lr}
   11e2c:	subs	r4, r0, #0
   11e30:	beq	11ea4 <abort@plt+0xce4>
   11e34:	mov	r1, #47	; 0x2f
   11e38:	bl	11154 <strrchr@plt>
   11e3c:	subs	r5, r0, #0
   11e40:	beq	11e90 <abort@plt+0xcd0>
   11e44:	add	r6, r5, #1
   11e48:	sub	r3, r6, r4
   11e4c:	cmp	r3, #6
   11e50:	ble	11e90 <abort@plt+0xcd0>
   11e54:	mov	r2, #7
   11e58:	ldr	r1, [pc, #96]	; 11ec0 <abort@plt+0xd00>
   11e5c:	sub	r0, r5, #6
   11e60:	bl	111b4 <strncmp@plt>
   11e64:	cmp	r0, #0
   11e68:	bne	11e90 <abort@plt+0xcd0>
   11e6c:	mov	r2, #3
   11e70:	ldr	r1, [pc, #76]	; 11ec4 <abort@plt+0xd04>
   11e74:	mov	r0, r6
   11e78:	bl	111b4 <strncmp@plt>
   11e7c:	cmp	r0, #0
   11e80:	movne	r4, r6
   11e84:	ldreq	r3, [pc, #60]	; 11ec8 <abort@plt+0xd08>
   11e88:	addeq	r4, r5, #4
   11e8c:	streq	r4, [r3]
   11e90:	ldr	r2, [pc, #52]	; 11ecc <abort@plt+0xd0c>
   11e94:	ldr	r3, [pc, #52]	; 11ed0 <abort@plt+0xd10>
   11e98:	str	r4, [r2]
   11e9c:	str	r4, [r3]
   11ea0:	pop	{r4, r5, r6, pc}
   11ea4:	ldr	r3, [pc, #40]	; 11ed4 <abort@plt+0xd14>
   11ea8:	mov	r2, #55	; 0x37
   11eac:	mov	r1, #1
   11eb0:	ldr	r3, [r3]
   11eb4:	ldr	r0, [pc, #28]	; 11ed8 <abort@plt+0xd18>
   11eb8:	bl	10ff8 <fwrite@plt>
   11ebc:	bl	111c0 <abort@plt>
   11ec0:	strdeq	r5, [r1], -ip
   11ec4:	andeq	r5, r1, r4, lsl #20
   11ec8:	andeq	r6, r2, r8, asr r1
   11ecc:	andeq	r6, r2, r0, lsl #3
   11ed0:	andeq	r6, r2, ip, asr r1
   11ed4:	andeq	r6, r2, r8, ror #2
   11ed8:	andeq	r5, r1, r4, asr #19
   11edc:	push	{r4, r5, r6, lr}
   11ee0:	mov	r2, #48	; 0x30
   11ee4:	mov	r4, r1
   11ee8:	mov	r1, #0
   11eec:	mov	r5, r0
   11ef0:	bl	110f4 <memset@plt>
   11ef4:	cmp	r4, #10
   11ef8:	beq	11f08 <abort@plt+0xd48>
   11efc:	str	r4, [r5]
   11f00:	mov	r0, r5
   11f04:	pop	{r4, r5, r6, pc}
   11f08:	bl	111c0 <abort@plt>
   11f0c:	push	{r4, r5, r6, lr}
   11f10:	mov	r4, r0
   11f14:	mov	r5, r1
   11f18:	bl	14ba4 <abort@plt+0x39e4>
   11f1c:	ldrb	r3, [r0]
   11f20:	bic	r3, r3, #32
   11f24:	cmp	r3, #85	; 0x55
   11f28:	bne	11f88 <abort@plt+0xdc8>
   11f2c:	ldrb	r3, [r0, #1]
   11f30:	bic	r3, r3, #32
   11f34:	cmp	r3, #84	; 0x54
   11f38:	bne	11fc4 <abort@plt+0xe04>
   11f3c:	ldrb	r3, [r0, #2]
   11f40:	bic	r3, r3, #32
   11f44:	cmp	r3, #70	; 0x46
   11f48:	bne	11fc4 <abort@plt+0xe04>
   11f4c:	ldrb	r3, [r0, #3]
   11f50:	cmp	r3, #45	; 0x2d
   11f54:	bne	11fc4 <abort@plt+0xe04>
   11f58:	ldrb	r3, [r0, #4]
   11f5c:	cmp	r3, #56	; 0x38
   11f60:	bne	11fc4 <abort@plt+0xe04>
   11f64:	ldrb	r3, [r0, #5]
   11f68:	cmp	r3, #0
   11f6c:	bne	11fc4 <abort@plt+0xe04>
   11f70:	ldrb	r2, [r4]
   11f74:	ldr	r3, [pc, #152]	; 12014 <abort@plt+0xe54>
   11f78:	ldr	r0, [pc, #152]	; 12018 <abort@plt+0xe58>
   11f7c:	cmp	r2, #96	; 0x60
   11f80:	movne	r0, r3
   11f84:	pop	{r4, r5, r6, pc}
   11f88:	cmp	r3, #71	; 0x47
   11f8c:	bne	11fc4 <abort@plt+0xe04>
   11f90:	ldrb	r3, [r0, #1]
   11f94:	bic	r3, r3, #32
   11f98:	cmp	r3, #66	; 0x42
   11f9c:	bne	11fc4 <abort@plt+0xe04>
   11fa0:	ldrb	r3, [r0, #2]
   11fa4:	cmp	r3, #49	; 0x31
   11fa8:	bne	11fc4 <abort@plt+0xe04>
   11fac:	ldrb	r3, [r0, #3]
   11fb0:	cmp	r3, #56	; 0x38
   11fb4:	bne	11fc4 <abort@plt+0xe04>
   11fb8:	ldrb	r3, [r0, #4]
   11fbc:	cmp	r3, #48	; 0x30
   11fc0:	beq	11fd8 <abort@plt+0xe18>
   11fc4:	ldr	r3, [pc, #80]	; 1201c <abort@plt+0xe5c>
   11fc8:	cmp	r5, #9
   11fcc:	ldr	r0, [pc, #76]	; 12020 <abort@plt+0xe60>
   11fd0:	movne	r0, r3
   11fd4:	pop	{r4, r5, r6, pc}
   11fd8:	ldrb	r3, [r0, #5]
   11fdc:	cmp	r3, #51	; 0x33
   11fe0:	bne	11fc4 <abort@plt+0xe04>
   11fe4:	ldrb	r3, [r0, #6]
   11fe8:	cmp	r3, #48	; 0x30
   11fec:	bne	11fc4 <abort@plt+0xe04>
   11ff0:	ldrb	r3, [r0, #7]
   11ff4:	cmp	r3, #0
   11ff8:	bne	11fc4 <abort@plt+0xe04>
   11ffc:	ldrb	r2, [r4]
   12000:	ldr	r3, [pc, #28]	; 12024 <abort@plt+0xe64>
   12004:	ldr	r0, [pc, #28]	; 12028 <abort@plt+0xe68>
   12008:	cmp	r2, #96	; 0x60
   1200c:	movne	r0, r3
   12010:	pop	{r4, r5, r6, pc}
   12014:	andeq	r5, r1, r0, ror #20
   12018:	andeq	r5, r1, ip, asr sl
   1201c:	andeq	r5, r1, r0, ror sl
   12020:	andeq	r5, r1, ip, ror #20
   12024:	andeq	r5, r1, r8, ror #20
   12028:	andeq	r5, r1, r4, ror #20
   1202c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12030:	sub	sp, sp, #116	; 0x74
   12034:	mov	sl, r0
   12038:	str	r3, [sp, #24]
   1203c:	mov	r3, #1
   12040:	mov	r8, r1
   12044:	str	r2, [sp, #56]	; 0x38
   12048:	str	r3, [sp, #36]	; 0x24
   1204c:	bl	11010 <__ctype_get_mb_cur_max@plt>
   12050:	ldr	r3, [sp, #156]	; 0x9c
   12054:	mov	fp, r8
   12058:	mov	r2, #0
   1205c:	lsr	r3, r3, #1
   12060:	and	r3, r3, #1
   12064:	str	r2, [sp, #68]	; 0x44
   12068:	str	r3, [sp, #28]
   1206c:	str	r2, [sp, #40]	; 0x28
   12070:	str	r2, [sp, #44]	; 0x2c
   12074:	str	r2, [sp, #52]	; 0x34
   12078:	str	r2, [sp, #64]	; 0x40
   1207c:	str	r2, [sp, #72]	; 0x48
   12080:	str	sl, [sp, #32]
   12084:	str	r0, [sp, #76]	; 0x4c
   12088:	ldr	r3, [sp, #152]	; 0x98
   1208c:	cmp	r3, #10
   12090:	ldrls	pc, [pc, r3, lsl #2]
   12094:	b	13254 <abort@plt+0x2094>
   12098:	andeq	r2, r1, r4, asr #1
   1209c:	andeq	r2, r1, ip, lsr #7
   120a0:	ldrdeq	r2, [r1], -r0
   120a4:	strdeq	r2, [r1], -r4
   120a8:	andeq	r2, r1, r0, lsr #10
   120ac:	strdeq	r2, [r1], -r4
   120b0:	andeq	r2, r1, ip, asr #9
   120b4:	andeq	r2, r1, r8, lsl #8
   120b8:	andeq	r2, r1, r0, lsr #8
   120bc:	andeq	r2, r1, r0, lsr #8
   120c0:	andeq	r2, r1, r0, lsr #8
   120c4:	mov	r3, #0
   120c8:	mov	r7, r3
   120cc:	str	r3, [sp, #28]
   120d0:	ldr	r3, [sp, #44]	; 0x2c
   120d4:	mov	sl, #0
   120d8:	eor	r3, r3, #1
   120dc:	str	r3, [sp, #60]	; 0x3c
   120e0:	ldr	r3, [sp, #24]
   120e4:	cmn	r3, #1
   120e8:	beq	1264c <abort@plt+0x148c>
   120ec:	ldr	r3, [sp, #24]
   120f0:	subs	r5, r3, sl
   120f4:	movne	r5, #1
   120f8:	cmp	r5, #0
   120fc:	beq	12664 <abort@plt+0x14a4>
   12100:	ldr	r3, [sp, #152]	; 0x98
   12104:	ldr	r8, [sp, #44]	; 0x2c
   12108:	cmp	r3, #2
   1210c:	moveq	r8, #0
   12110:	andne	r8, r8, #1
   12114:	ldr	r3, [sp, #52]	; 0x34
   12118:	adds	r9, r3, #0
   1211c:	movne	r9, #1
   12120:	ands	r6, r9, r8
   12124:	beq	12acc <abort@plt+0x190c>
   12128:	ldr	r2, [sp, #52]	; 0x34
   1212c:	ldr	r1, [sp, #24]
   12130:	cmp	r2, #1
   12134:	mov	r3, r2
   12138:	movls	r3, #0
   1213c:	movhi	r3, #1
   12140:	cmn	r1, #1
   12144:	movne	r3, #0
   12148:	cmp	r3, #0
   1214c:	add	r4, sl, r2
   12150:	beq	12160 <abort@plt+0xfa0>
   12154:	ldr	r0, [sp, #56]	; 0x38
   12158:	bl	110d0 <strlen@plt>
   1215c:	str	r0, [sp, #24]
   12160:	ldr	r3, [sp, #24]
   12164:	cmp	r3, r4
   12168:	ldr	r3, [sp, #56]	; 0x38
   1216c:	add	r3, r3, sl
   12170:	str	r3, [sp, #48]	; 0x30
   12174:	bcc	12ad8 <abort@plt+0x1918>
   12178:	mov	r0, r3
   1217c:	ldr	r2, [sp, #52]	; 0x34
   12180:	ldr	r1, [sp, #64]	; 0x40
   12184:	bl	10f8c <memcmp@plt>
   12188:	cmp	r0, #0
   1218c:	bne	12ad8 <abort@plt+0x1918>
   12190:	ldr	r3, [sp, #28]
   12194:	cmp	r3, #0
   12198:	bne	13354 <abort@plt+0x2194>
   1219c:	ldr	r3, [sp, #48]	; 0x30
   121a0:	ldrb	r4, [r3]
   121a4:	cmp	r4, #126	; 0x7e
   121a8:	ldrls	pc, [pc, r4, lsl #2]
   121ac:	b	12a6c <abort@plt+0x18ac>
   121b0:	muleq	r1, r0, r8
   121b4:	andeq	r2, r1, ip, ror #20
   121b8:	andeq	r2, r1, ip, ror #20
   121bc:	andeq	r2, r1, ip, ror #20
   121c0:	andeq	r2, r1, ip, ror #20
   121c4:	andeq	r2, r1, ip, ror #20
   121c8:	andeq	r2, r1, ip, ror #20
   121cc:	andeq	r2, r1, r4, ror r8
   121d0:	andeq	r2, r1, r8, asr r8
   121d4:	andeq	r2, r1, r4, asr sl
   121d8:			; <UNDEFINED> instruction: 0x000127b8
   121dc:	muleq	r1, ip, r7
   121e0:	andeq	r2, r1, r0, lsr sl
   121e4:	andeq	r2, r1, ip, lsl #20
   121e8:	andeq	r2, r1, ip, ror #20
   121ec:	andeq	r2, r1, ip, ror #20
   121f0:	andeq	r2, r1, ip, ror #20
   121f4:	andeq	r2, r1, ip, ror #20
   121f8:	andeq	r2, r1, ip, ror #20
   121fc:	andeq	r2, r1, ip, ror #20
   12200:	andeq	r2, r1, ip, ror #20
   12204:	andeq	r2, r1, ip, ror #20
   12208:	andeq	r2, r1, ip, ror #20
   1220c:	andeq	r2, r1, ip, ror #20
   12210:	andeq	r2, r1, ip, ror #20
   12214:	andeq	r2, r1, ip, ror #20
   12218:	andeq	r2, r1, ip, ror #20
   1221c:	andeq	r2, r1, ip, ror #20
   12220:	andeq	r2, r1, ip, ror #20
   12224:	andeq	r2, r1, ip, ror #20
   12228:	andeq	r2, r1, ip, ror #20
   1222c:	andeq	r2, r1, ip, ror #20
   12230:	andeq	r2, r1, ip, asr #20
   12234:	andeq	r2, r1, r0, lsl #19
   12238:	andeq	r2, r1, r0, lsl #19
   1223c:	muleq	r1, r0, r5
   12240:	andeq	r2, r1, r0, lsl #19
   12244:	andeq	r2, r1, r8, lsl sl
   12248:	andeq	r2, r1, r0, lsl #19
   1224c:	andeq	r2, r1, ip, ror #19
   12250:	andeq	r2, r1, r0, lsl #19
   12254:	andeq	r2, r1, r0, lsl #19
   12258:	andeq	r2, r1, r0, lsl #19
   1225c:	andeq	r2, r1, r8, lsl sl
   12260:	andeq	r2, r1, r8, lsl sl
   12264:	andeq	r2, r1, r8, lsl sl
   12268:	andeq	r2, r1, r8, lsl sl
   1226c:	andeq	r2, r1, r8, lsl sl
   12270:	andeq	r2, r1, r8, lsl sl
   12274:	andeq	r2, r1, r8, lsl sl
   12278:	andeq	r2, r1, r8, lsl sl
   1227c:	andeq	r2, r1, r8, lsl sl
   12280:	andeq	r2, r1, r8, lsl sl
   12284:	andeq	r2, r1, r8, lsl sl
   12288:	andeq	r2, r1, r8, lsl sl
   1228c:	andeq	r2, r1, r8, lsl sl
   12290:	andeq	r2, r1, r8, lsl sl
   12294:	andeq	r2, r1, r8, lsl sl
   12298:	andeq	r2, r1, r8, lsl sl
   1229c:	andeq	r2, r1, r0, lsl #19
   122a0:	andeq	r2, r1, r0, lsl #19
   122a4:	andeq	r2, r1, r0, lsl #19
   122a8:	andeq	r2, r1, r0, lsl #19
   122ac:			; <UNDEFINED> instruction: 0x000129bc
   122b0:	andeq	r2, r1, ip, ror #20
   122b4:	andeq	r2, r1, r8, lsl sl
   122b8:	andeq	r2, r1, r8, lsl sl
   122bc:	andeq	r2, r1, r8, lsl sl
   122c0:	andeq	r2, r1, r8, lsl sl
   122c4:	andeq	r2, r1, r8, lsl sl
   122c8:	andeq	r2, r1, r8, lsl sl
   122cc:	andeq	r2, r1, r8, lsl sl
   122d0:	andeq	r2, r1, r8, lsl sl
   122d4:	andeq	r2, r1, r8, lsl sl
   122d8:	andeq	r2, r1, r8, lsl sl
   122dc:	andeq	r2, r1, r8, lsl sl
   122e0:	andeq	r2, r1, r8, lsl sl
   122e4:	andeq	r2, r1, r8, lsl sl
   122e8:	andeq	r2, r1, r8, lsl sl
   122ec:	andeq	r2, r1, r8, lsl sl
   122f0:	andeq	r2, r1, r8, lsl sl
   122f4:	andeq	r2, r1, r8, lsl sl
   122f8:	andeq	r2, r1, r8, lsl sl
   122fc:	andeq	r2, r1, r8, lsl sl
   12300:	andeq	r2, r1, r8, lsl sl
   12304:	andeq	r2, r1, r8, lsl sl
   12308:	andeq	r2, r1, r8, lsl sl
   1230c:	andeq	r2, r1, r8, lsl sl
   12310:	andeq	r2, r1, r8, lsl sl
   12314:	andeq	r2, r1, r8, lsl sl
   12318:	andeq	r2, r1, r8, lsl sl
   1231c:	andeq	r2, r1, r0, lsl #19
   12320:	ldrdeq	r2, [r1], -ip
   12324:	andeq	r2, r1, r8, lsl sl
   12328:	andeq	r2, r1, r0, lsl #19
   1232c:	andeq	r2, r1, r8, lsl sl
   12330:	andeq	r2, r1, r0, lsl #19
   12334:	andeq	r2, r1, r8, lsl sl
   12338:	andeq	r2, r1, r8, lsl sl
   1233c:	andeq	r2, r1, r8, lsl sl
   12340:	andeq	r2, r1, r8, lsl sl
   12344:	andeq	r2, r1, r8, lsl sl
   12348:	andeq	r2, r1, r8, lsl sl
   1234c:	andeq	r2, r1, r8, lsl sl
   12350:	andeq	r2, r1, r8, lsl sl
   12354:	andeq	r2, r1, r8, lsl sl
   12358:	andeq	r2, r1, r8, lsl sl
   1235c:	andeq	r2, r1, r8, lsl sl
   12360:	andeq	r2, r1, r8, lsl sl
   12364:	andeq	r2, r1, r8, lsl sl
   12368:	andeq	r2, r1, r8, lsl sl
   1236c:	andeq	r2, r1, r8, lsl sl
   12370:	andeq	r2, r1, r8, lsl sl
   12374:	andeq	r2, r1, r8, lsl sl
   12378:	andeq	r2, r1, r8, lsl sl
   1237c:	andeq	r2, r1, r8, lsl sl
   12380:	andeq	r2, r1, r8, lsl sl
   12384:	andeq	r2, r1, r8, lsl sl
   12388:	andeq	r2, r1, r8, lsl sl
   1238c:	andeq	r2, r1, r8, lsl sl
   12390:	andeq	r2, r1, r8, lsl sl
   12394:	andeq	r2, r1, r8, lsl sl
   12398:	andeq	r2, r1, r8, lsl sl
   1239c:	andeq	r2, r1, r0, ror r5
   123a0:	andeq	r2, r1, r0, lsl #19
   123a4:	andeq	r2, r1, r0, ror r5
   123a8:	muleq	r1, r0, r5
   123ac:	mov	r3, #1
   123b0:	str	r3, [sp, #28]
   123b4:	str	r3, [sp, #52]	; 0x34
   123b8:	ldr	r3, [pc, #4000]	; 13360 <abort@plt+0x21a0>
   123bc:	mov	r7, #0
   123c0:	str	r3, [sp, #64]	; 0x40
   123c4:	mov	r3, #2
   123c8:	str	r3, [sp, #152]	; 0x98
   123cc:	b	120d0 <abort@plt+0xf10>
   123d0:	ldr	r3, [sp, #28]
   123d4:	cmp	r3, #0
   123d8:	beq	12534 <abort@plt+0x1374>
   123dc:	mov	r3, #1
   123e0:	str	r3, [sp, #52]	; 0x34
   123e4:	ldr	r3, [pc, #3956]	; 13360 <abort@plt+0x21a0>
   123e8:	mov	r7, #0
   123ec:	str	r3, [sp, #64]	; 0x40
   123f0:	b	120d0 <abort@plt+0xf10>
   123f4:	mov	r3, #1
   123f8:	str	r3, [sp, #44]	; 0x2c
   123fc:	str	r3, [sp, #52]	; 0x34
   12400:	str	r3, [sp, #28]
   12404:	b	123b8 <abort@plt+0x11f8>
   12408:	mov	r3, #0
   1240c:	str	r3, [sp, #28]
   12410:	mov	r3, #1
   12414:	str	r3, [sp, #44]	; 0x2c
   12418:	mov	r7, #0
   1241c:	b	120d0 <abort@plt+0xf10>
   12420:	ldr	r3, [sp, #152]	; 0x98
   12424:	cmp	r3, #10
   12428:	beq	1246c <abort@plt+0x12ac>
   1242c:	mov	r2, #5
   12430:	ldr	r1, [pc, #3884]	; 13364 <abort@plt+0x21a4>
   12434:	mov	r0, #0
   12438:	bl	10fb0 <dcgettext@plt>
   1243c:	ldr	r2, [pc, #3872]	; 13364 <abort@plt+0x21a4>
   12440:	cmp	r0, r2
   12444:	str	r0, [sp, #164]	; 0xa4
   12448:	beq	13450 <abort@plt+0x2290>
   1244c:	mov	r2, #5
   12450:	ldr	r1, [pc, #3848]	; 13360 <abort@plt+0x21a0>
   12454:	mov	r0, #0
   12458:	bl	10fb0 <dcgettext@plt>
   1245c:	ldr	r2, [pc, #3836]	; 13360 <abort@plt+0x21a0>
   12460:	cmp	r0, r2
   12464:	str	r0, [sp, #168]	; 0xa8
   12468:	beq	13440 <abort@plt+0x2280>
   1246c:	ldr	r7, [sp, #28]
   12470:	cmp	r7, #0
   12474:	movne	r7, #0
   12478:	bne	124ac <abort@plt+0x12ec>
   1247c:	ldr	r3, [sp, #164]	; 0xa4
   12480:	ldrb	r3, [r3]
   12484:	cmp	r3, #0
   12488:	beq	13460 <abort@plt+0x22a0>
   1248c:	ldr	r2, [sp, #164]	; 0xa4
   12490:	ldr	r1, [sp, #32]
   12494:	cmp	fp, r7
   12498:	strbhi	r3, [r1, r7]
   1249c:	ldrb	r3, [r2, #1]!
   124a0:	add	r7, r7, #1
   124a4:	cmp	r3, #0
   124a8:	bne	12494 <abort@plt+0x12d4>
   124ac:	ldr	r0, [sp, #168]	; 0xa8
   124b0:	bl	110d0 <strlen@plt>
   124b4:	ldr	r3, [sp, #168]	; 0xa8
   124b8:	str	r3, [sp, #64]	; 0x40
   124bc:	mov	r3, #1
   124c0:	str	r3, [sp, #44]	; 0x2c
   124c4:	str	r0, [sp, #52]	; 0x34
   124c8:	b	120d0 <abort@plt+0xf10>
   124cc:	mov	r3, #1
   124d0:	str	r3, [sp, #44]	; 0x2c
   124d4:	str	r3, [sp, #52]	; 0x34
   124d8:	str	r3, [sp, #28]
   124dc:	ldr	r3, [pc, #3716]	; 13368 <abort@plt+0x21a8>
   124e0:	mov	r7, #0
   124e4:	str	r3, [sp, #64]	; 0x40
   124e8:	mov	r3, #5
   124ec:	str	r3, [sp, #152]	; 0x98
   124f0:	b	120d0 <abort@plt+0xf10>
   124f4:	ldr	r3, [sp, #28]
   124f8:	cmp	r3, #0
   124fc:	beq	131fc <abort@plt+0x203c>
   12500:	ldr	r3, [sp, #28]
   12504:	mov	r7, #0
   12508:	str	r3, [sp, #44]	; 0x2c
   1250c:	mov	r3, #1
   12510:	str	r3, [sp, #52]	; 0x34
   12514:	ldr	r3, [pc, #3660]	; 13368 <abort@plt+0x21a8>
   12518:	str	r3, [sp, #64]	; 0x40
   1251c:	b	120d0 <abort@plt+0xf10>
   12520:	ldr	r3, [sp, #28]
   12524:	cmp	r3, #0
   12528:	mov	r3, #1
   1252c:	streq	r3, [sp, #44]	; 0x2c
   12530:	bne	123b4 <abort@plt+0x11f4>
   12534:	cmp	fp, #0
   12538:	beq	1322c <abort@plt+0x206c>
   1253c:	ldr	r3, [sp, #32]
   12540:	mov	r2, #39	; 0x27
   12544:	mov	r7, #1
   12548:	strb	r2, [r3]
   1254c:	mov	r3, #0
   12550:	str	r3, [sp, #28]
   12554:	mov	r3, #1
   12558:	str	r3, [sp, #52]	; 0x34
   1255c:	ldr	r3, [pc, #3580]	; 13360 <abort@plt+0x21a0>
   12560:	str	r3, [sp, #64]	; 0x40
   12564:	mov	r3, #2
   12568:	str	r3, [sp, #152]	; 0x98
   1256c:	b	120d0 <abort@plt+0xf10>
   12570:	ldr	r3, [sp, #24]
   12574:	cmn	r3, #1
   12578:	beq	13190 <abort@plt+0x1fd0>
   1257c:	ldr	r3, [sp, #24]
   12580:	subs	r3, r3, #1
   12584:	movne	r3, #1
   12588:	cmp	r3, #0
   1258c:	bne	12598 <abort@plt+0x13d8>
   12590:	cmp	sl, #0
   12594:	beq	12984 <abort@plt+0x17c4>
   12598:	ldr	r3, [sp, #152]	; 0x98
   1259c:	mov	r5, #0
   125a0:	sub	r2, r3, #2
   125a4:	mov	r8, r5
   125a8:	clz	r2, r2
   125ac:	lsr	r2, r2, #5
   125b0:	ldr	r3, [sp, #60]	; 0x3c
   125b4:	ldr	r1, [sp, #28]
   125b8:	orr	r3, r2, r3
   125bc:	eor	r3, r3, #1
   125c0:	orr	r3, r1, r3
   125c4:	tst	r3, #255	; 0xff
   125c8:	bne	12cf4 <abort@plt+0x1b34>
   125cc:	cmp	r6, #0
   125d0:	bne	12720 <abort@plt+0x1560>
   125d4:	ldr	r3, [sp, #40]	; 0x28
   125d8:	eor	r8, r8, #1
   125dc:	and	r8, r8, r3
   125e0:	add	sl, sl, #1
   125e4:	uxtb	r6, r8
   125e8:	cmp	r6, #0
   125ec:	beq	12620 <abort@plt+0x1460>
   125f0:	cmp	fp, r7
   125f4:	movhi	r2, #39	; 0x27
   125f8:	ldrhi	r3, [sp, #32]
   125fc:	strbhi	r2, [r3, r7]
   12600:	add	r3, r7, #1
   12604:	cmp	fp, r3
   12608:	movhi	r1, #39	; 0x27
   1260c:	ldrhi	r2, [sp, #32]
   12610:	add	r7, r7, #2
   12614:	strbhi	r1, [r2, r3]
   12618:	mov	r3, #0
   1261c:	str	r3, [sp, #40]	; 0x28
   12620:	cmp	r7, fp
   12624:	ldrcc	r3, [sp, #32]
   12628:	strbcc	r4, [r3, r7]
   1262c:	ldr	r3, [sp, #36]	; 0x24
   12630:	cmp	r5, #0
   12634:	moveq	r3, #0
   12638:	str	r3, [sp, #36]	; 0x24
   1263c:	ldr	r3, [sp, #24]
   12640:	add	r7, r7, #1
   12644:	cmn	r3, #1
   12648:	bne	120ec <abort@plt+0xf2c>
   1264c:	ldr	r3, [sp, #56]	; 0x38
   12650:	ldrb	r5, [r3, sl]
   12654:	adds	r5, r5, #0
   12658:	movne	r5, #1
   1265c:	cmp	r5, #0
   12660:	bne	12100 <abort@plt+0xf40>
   12664:	ldr	r3, [sp, #152]	; 0x98
   12668:	ldr	r1, [sp, #28]
   1266c:	sub	r3, r3, #2
   12670:	clz	r3, r3
   12674:	lsr	r3, r3, #5
   12678:	and	r9, r1, r3
   1267c:	cmp	r7, #0
   12680:	movne	r2, #0
   12684:	andeq	r2, r9, #1
   12688:	cmp	r2, #0
   1268c:	bne	13068 <abort@plt+0x1ea8>
   12690:	eor	r2, r1, #1
   12694:	ands	r3, r3, r2
   12698:	beq	13524 <abort@plt+0x2364>
   1269c:	ldr	r2, [sp, #68]	; 0x44
   126a0:	cmp	r2, #0
   126a4:	beq	13510 <abort@plt+0x2350>
   126a8:	ldr	r3, [sp, #36]	; 0x24
   126ac:	cmp	r3, #0
   126b0:	bne	134c8 <abort@plt+0x2308>
   126b4:	ldr	r2, [sp, #72]	; 0x48
   126b8:	clz	r3, fp
   126bc:	cmp	r2, #0
   126c0:	lsr	r3, r3, #5
   126c4:	moveq	r3, #0
   126c8:	cmp	r3, #0
   126cc:	beq	13468 <abort@plt+0x22a8>
   126d0:	str	r3, [sp, #68]	; 0x44
   126d4:	ldr	fp, [sp, #72]	; 0x48
   126d8:	b	12088 <abort@plt+0xec8>
   126dc:	ldr	r3, [sp, #152]	; 0x98
   126e0:	cmp	r3, #2
   126e4:	beq	12d38 <abort@plt+0x1b78>
   126e8:	ldr	r3, [sp, #44]	; 0x2c
   126ec:	ldr	r2, [sp, #28]
   126f0:	and	r2, r3, r2
   126f4:	ands	r2, r9, r2
   126f8:	bne	12d44 <abort@plt+0x1b84>
   126fc:	mov	r4, #92	; 0x5c
   12700:	mov	r3, r4
   12704:	ldr	r1, [sp, #44]	; 0x2c
   12708:	cmp	r1, #0
   1270c:	moveq	r5, #0
   12710:	moveq	r8, r1
   12714:	beq	125b0 <abort@plt+0x13f0>
   12718:	mov	r4, r3
   1271c:	mov	r5, #0
   12720:	ldr	r3, [sp, #28]
   12724:	cmp	r3, #0
   12728:	bne	12d2c <abort@plt+0x1b6c>
   1272c:	ldr	r3, [sp, #40]	; 0x28
   12730:	eor	r9, r3, #1
   12734:	and	r9, r9, r2
   12738:	ands	r9, r9, #255	; 0xff
   1273c:	beq	12780 <abort@plt+0x15c0>
   12740:	cmp	fp, r7
   12744:	movhi	r2, #39	; 0x27
   12748:	ldrhi	r3, [sp, #32]
   1274c:	str	r9, [sp, #40]	; 0x28
   12750:	strbhi	r2, [r3, r7]
   12754:	add	r3, r7, #1
   12758:	cmp	fp, r3
   1275c:	movhi	r1, #36	; 0x24
   12760:	ldrhi	r2, [sp, #32]
   12764:	strbhi	r1, [r2, r3]
   12768:	add	r3, r7, #2
   1276c:	cmp	fp, r3
   12770:	add	r7, r7, #3
   12774:	ldrhi	r2, [sp, #32]
   12778:	movhi	r1, #39	; 0x27
   1277c:	strbhi	r1, [r2, r3]
   12780:	cmp	fp, r7
   12784:	movhi	r2, #92	; 0x5c
   12788:	ldrhi	r3, [sp, #32]
   1278c:	add	sl, sl, #1
   12790:	strbhi	r2, [r3, r7]
   12794:	add	r7, r7, #1
   12798:	b	12620 <abort@plt+0x1460>
   1279c:	ldr	r3, [sp, #152]	; 0x98
   127a0:	mov	r4, #11
   127a4:	sub	r2, r3, #2
   127a8:	mov	r3, #118	; 0x76
   127ac:	clz	r2, r2
   127b0:	lsr	r2, r2, #5
   127b4:	b	12704 <abort@plt+0x1544>
   127b8:	mov	r4, #10
   127bc:	mov	r3, #110	; 0x6e
   127c0:	ldr	r2, [sp, #152]	; 0x98
   127c4:	ldr	r1, [sp, #28]
   127c8:	sub	r2, r2, #2
   127cc:	clz	r2, r2
   127d0:	lsr	r2, r2, #5
   127d4:	ands	r1, r1, r2
   127d8:	beq	12704 <abort@plt+0x1544>
   127dc:	ldr	sl, [sp, #32]
   127e0:	mov	r8, fp
   127e4:	mov	r2, r1
   127e8:	mov	r3, #2
   127ec:	str	r3, [sp, #152]	; 0x98
   127f0:	ldr	r9, [sp, #44]	; 0x2c
   127f4:	ldr	r3, [sp, #152]	; 0x98
   127f8:	and	r9, r9, r2
   127fc:	tst	r9, #255	; 0xff
   12800:	movne	r3, #4
   12804:	str	r3, [sp, #152]	; 0x98
   12808:	ldr	r3, [sp, #156]	; 0x9c
   1280c:	mov	ip, #0
   12810:	bic	r3, r3, #2
   12814:	str	r3, [sp, #4]
   12818:	ldr	r3, [sp, #168]	; 0xa8
   1281c:	ldr	r2, [sp, #56]	; 0x38
   12820:	str	r3, [sp, #16]
   12824:	ldr	r3, [sp, #164]	; 0xa4
   12828:	mov	r1, r8
   1282c:	str	r3, [sp, #12]
   12830:	ldr	r3, [sp, #152]	; 0x98
   12834:	mov	r0, sl
   12838:	str	r3, [sp]
   1283c:	str	ip, [sp, #8]
   12840:	ldr	r3, [sp, #24]
   12844:	bl	1202c <abort@plt+0xe6c>
   12848:	mov	fp, r0
   1284c:	mov	r0, fp
   12850:	add	sp, sp, #116	; 0x74
   12854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12858:	ldr	r3, [sp, #152]	; 0x98
   1285c:	mov	r4, #8
   12860:	sub	r2, r3, #2
   12864:	mov	r3, #98	; 0x62
   12868:	clz	r2, r2
   1286c:	lsr	r2, r2, #5
   12870:	b	12704 <abort@plt+0x1544>
   12874:	ldr	r3, [sp, #152]	; 0x98
   12878:	mov	r4, #7
   1287c:	sub	r2, r3, #2
   12880:	mov	r3, #97	; 0x61
   12884:	clz	r2, r2
   12888:	lsr	r2, r2, #5
   1288c:	b	12704 <abort@plt+0x1544>
   12890:	ldr	r3, [sp, #44]	; 0x2c
   12894:	cmp	r3, #0
   12898:	beq	1307c <abort@plt+0x1ebc>
   1289c:	ldr	r3, [sp, #28]
   128a0:	cmp	r3, #0
   128a4:	bne	13354 <abort@plt+0x2194>
   128a8:	ldr	r3, [sp, #152]	; 0x98
   128ac:	sub	r2, r3, #2
   128b0:	ldr	r3, [sp, #40]	; 0x28
   128b4:	clz	r2, r2
   128b8:	eor	r3, r3, #1
   128bc:	lsr	r2, r2, #5
   128c0:	ands	r3, r2, r3
   128c4:	moveq	r1, r7
   128c8:	beq	1290c <abort@plt+0x174c>
   128cc:	cmp	fp, r7
   128d0:	movhi	r0, #39	; 0x27
   128d4:	ldrhi	r1, [sp, #32]
   128d8:	str	r3, [sp, #40]	; 0x28
   128dc:	strbhi	r0, [r1, r7]
   128e0:	add	r1, r7, #1
   128e4:	cmp	fp, r1
   128e8:	movhi	ip, #36	; 0x24
   128ec:	ldrhi	r0, [sp, #32]
   128f0:	strbhi	ip, [r0, r1]
   128f4:	add	r1, r7, #2
   128f8:	cmp	fp, r1
   128fc:	movhi	ip, #39	; 0x27
   12900:	ldrhi	r0, [sp, #32]
   12904:	strbhi	ip, [r0, r1]
   12908:	add	r1, r7, #3
   1290c:	cmp	fp, r1
   12910:	movhi	r0, #92	; 0x5c
   12914:	ldrhi	r3, [sp, #32]
   12918:	add	r7, r1, #1
   1291c:	strbhi	r0, [r3, r1]
   12920:	cmp	r8, #0
   12924:	beq	13268 <abort@plt+0x20a8>
   12928:	ldr	r0, [sp, #24]
   1292c:	add	r3, sl, #1
   12930:	cmp	r3, r0
   12934:	bcs	131a4 <abort@plt+0x1fe4>
   12938:	ldr	r0, [sp, #56]	; 0x38
   1293c:	ldrb	r3, [r0, r3]
   12940:	sub	r3, r3, #48	; 0x30
   12944:	cmp	r3, #9
   12948:	bhi	131a4 <abort@plt+0x1fe4>
   1294c:	cmp	fp, r7
   12950:	movhi	r3, #48	; 0x30
   12954:	ldrhi	r0, [sp, #32]
   12958:	ldr	r5, [sp, #28]
   1295c:	mov	r4, #48	; 0x30
   12960:	strbhi	r3, [r0, r7]
   12964:	add	r3, r1, #2
   12968:	cmp	fp, r3
   1296c:	movhi	r0, #48	; 0x30
   12970:	ldrhi	ip, [sp, #32]
   12974:	add	r7, r1, #3
   12978:	strbhi	r0, [ip, r3]
   1297c:	b	125b0 <abort@plt+0x13f0>
   12980:	mov	r5, #0
   12984:	ldr	r3, [sp, #152]	; 0x98
   12988:	sub	r2, r3, #2
   1298c:	ldr	r3, [sp, #28]
   12990:	clz	r2, r2
   12994:	lsr	r2, r2, #5
   12998:	ands	r8, r3, r2
   1299c:	beq	125b0 <abort@plt+0x13f0>
   129a0:	mov	r3, r8
   129a4:	mov	r2, r3
   129a8:	mov	r3, #2
   129ac:	ldr	sl, [sp, #32]
   129b0:	mov	r8, fp
   129b4:	str	r3, [sp, #152]	; 0x98
   129b8:	b	127f0 <abort@plt+0x1630>
   129bc:	ldr	r3, [sp, #152]	; 0x98
   129c0:	cmp	r3, #2
   129c4:	beq	130e8 <abort@plt+0x1f28>
   129c8:	cmp	r3, #5
   129cc:	beq	130a8 <abort@plt+0x1ee8>
   129d0:	mov	r5, #0
   129d4:	sub	r2, r3, #2
   129d8:	mov	r8, r5
   129dc:	clz	r2, r2
   129e0:	mov	r4, #63	; 0x3f
   129e4:	lsr	r2, r2, #5
   129e8:	b	125b0 <abort@plt+0x13f0>
   129ec:	ldr	r3, [sp, #152]	; 0x98
   129f0:	cmp	r3, #2
   129f4:	beq	13108 <abort@plt+0x1f48>
   129f8:	mov	r2, #0
   129fc:	str	r5, [sp, #68]	; 0x44
   12a00:	mov	r8, r2
   12a04:	mov	r4, #39	; 0x27
   12a08:	b	125b0 <abort@plt+0x13f0>
   12a0c:	mov	r4, #13
   12a10:	mov	r3, #114	; 0x72
   12a14:	b	127c0 <abort@plt+0x1600>
   12a18:	ldr	r3, [sp, #152]	; 0x98
   12a1c:	mov	r8, #0
   12a20:	sub	r2, r3, #2
   12a24:	clz	r2, r2
   12a28:	lsr	r2, r2, #5
   12a2c:	b	125b0 <abort@plt+0x13f0>
   12a30:	ldr	r3, [sp, #152]	; 0x98
   12a34:	mov	r4, #12
   12a38:	sub	r2, r3, #2
   12a3c:	mov	r3, #102	; 0x66
   12a40:	clz	r2, r2
   12a44:	lsr	r2, r2, #5
   12a48:	b	12704 <abort@plt+0x1544>
   12a4c:	mov	r5, r6
   12a50:	b	12984 <abort@plt+0x17c4>
   12a54:	ldr	r3, [sp, #152]	; 0x98
   12a58:	sub	r2, r3, #2
   12a5c:	mov	r3, #116	; 0x74
   12a60:	clz	r2, r2
   12a64:	lsr	r2, r2, #5
   12a68:	b	12704 <abort@plt+0x1544>
   12a6c:	ldr	r8, [sp, #76]	; 0x4c
   12a70:	cmp	r8, #1
   12a74:	bne	12f24 <abort@plt+0x1d64>
   12a78:	bl	110a0 <__ctype_b_loc@plt>
   12a7c:	sxth	r3, r4
   12a80:	mov	ip, r8
   12a84:	lsl	r3, r3, #1
   12a88:	ldr	r2, [r0]
   12a8c:	ldrh	r3, [r2, r3]
   12a90:	and	r3, r3, #16384	; 0x4000
   12a94:	cmp	r3, #0
   12a98:	movne	r5, #1
   12a9c:	moveq	r5, #0
   12aa0:	moveq	r3, #1
   12aa4:	movne	r3, #0
   12aa8:	ldr	r2, [sp, #44]	; 0x2c
   12aac:	and	r3, r3, r2
   12ab0:	ands	r8, r3, #255	; 0xff
   12ab4:	bne	12db8 <abort@plt+0x1bf8>
   12ab8:	ldr	r3, [sp, #152]	; 0x98
   12abc:	sub	r2, r3, #2
   12ac0:	clz	r2, r2
   12ac4:	lsr	r2, r2, #5
   12ac8:	b	125b0 <abort@plt+0x13f0>
   12acc:	ldr	r3, [sp, #56]	; 0x38
   12ad0:	add	r3, r3, sl
   12ad4:	str	r3, [sp, #48]	; 0x30
   12ad8:	ldr	r3, [sp, #48]	; 0x30
   12adc:	mov	r6, #0
   12ae0:	ldrb	r4, [r3]
   12ae4:	cmp	r4, #126	; 0x7e
   12ae8:	ldrls	pc, [pc, r4, lsl #2]
   12aec:	b	12a6c <abort@plt+0x18ac>
   12af0:	muleq	r1, r0, r8
   12af4:	andeq	r2, r1, ip, ror #20
   12af8:	andeq	r2, r1, ip, ror #20
   12afc:	andeq	r2, r1, ip, ror #20
   12b00:	andeq	r2, r1, ip, ror #20
   12b04:	andeq	r2, r1, ip, ror #20
   12b08:	andeq	r2, r1, ip, ror #20
   12b0c:	andeq	r2, r1, r4, ror r8
   12b10:	andeq	r2, r1, r8, asr r8
   12b14:	andeq	r2, r1, ip, ror #25
   12b18:			; <UNDEFINED> instruction: 0x000127b8
   12b1c:	muleq	r1, ip, r7
   12b20:	andeq	r2, r1, r0, lsr sl
   12b24:	andeq	r2, r1, ip, lsl #20
   12b28:	andeq	r2, r1, ip, ror #20
   12b2c:	andeq	r2, r1, ip, ror #20
   12b30:	andeq	r2, r1, ip, ror #20
   12b34:	andeq	r2, r1, ip, ror #20
   12b38:	andeq	r2, r1, ip, ror #20
   12b3c:	andeq	r2, r1, ip, ror #20
   12b40:	andeq	r2, r1, ip, ror #20
   12b44:	andeq	r2, r1, ip, ror #20
   12b48:	andeq	r2, r1, ip, ror #20
   12b4c:	andeq	r2, r1, ip, ror #20
   12b50:	andeq	r2, r1, ip, ror #20
   12b54:	andeq	r2, r1, ip, ror #20
   12b58:	andeq	r2, r1, ip, ror #20
   12b5c:	andeq	r2, r1, ip, ror #20
   12b60:	andeq	r2, r1, ip, ror #20
   12b64:	andeq	r2, r1, ip, ror #20
   12b68:	andeq	r2, r1, ip, ror #20
   12b6c:	andeq	r2, r1, ip, ror #20
   12b70:	andeq	r2, r1, r4, lsl #19
   12b74:	andeq	r2, r1, r0, lsl #19
   12b78:	andeq	r2, r1, r0, lsl #19
   12b7c:	muleq	r1, r0, r5
   12b80:	andeq	r2, r1, r0, lsl #19
   12b84:	andeq	r2, r1, r8, lsl sl
   12b88:	andeq	r2, r1, r0, lsl #19
   12b8c:	andeq	r2, r1, ip, ror #19
   12b90:	andeq	r2, r1, r0, lsl #19
   12b94:	andeq	r2, r1, r0, lsl #19
   12b98:	andeq	r2, r1, r0, lsl #19
   12b9c:	andeq	r2, r1, r8, lsl sl
   12ba0:	andeq	r2, r1, r8, lsl sl
   12ba4:	andeq	r2, r1, r8, lsl sl
   12ba8:	andeq	r2, r1, r8, lsl sl
   12bac:	andeq	r2, r1, r8, lsl sl
   12bb0:	andeq	r2, r1, r8, lsl sl
   12bb4:	andeq	r2, r1, r8, lsl sl
   12bb8:	andeq	r2, r1, r8, lsl sl
   12bbc:	andeq	r2, r1, r8, lsl sl
   12bc0:	andeq	r2, r1, r8, lsl sl
   12bc4:	andeq	r2, r1, r8, lsl sl
   12bc8:	andeq	r2, r1, r8, lsl sl
   12bcc:	andeq	r2, r1, r8, lsl sl
   12bd0:	andeq	r2, r1, r8, lsl sl
   12bd4:	andeq	r2, r1, r8, lsl sl
   12bd8:	andeq	r2, r1, r8, lsl sl
   12bdc:	andeq	r2, r1, r0, lsl #19
   12be0:	andeq	r2, r1, r0, lsl #19
   12be4:	andeq	r2, r1, r0, lsl #19
   12be8:	andeq	r2, r1, r0, lsl #19
   12bec:			; <UNDEFINED> instruction: 0x000129bc
   12bf0:	andeq	r2, r1, ip, ror #20
   12bf4:	andeq	r2, r1, r8, lsl sl
   12bf8:	andeq	r2, r1, r8, lsl sl
   12bfc:	andeq	r2, r1, r8, lsl sl
   12c00:	andeq	r2, r1, r8, lsl sl
   12c04:	andeq	r2, r1, r8, lsl sl
   12c08:	andeq	r2, r1, r8, lsl sl
   12c0c:	andeq	r2, r1, r8, lsl sl
   12c10:	andeq	r2, r1, r8, lsl sl
   12c14:	andeq	r2, r1, r8, lsl sl
   12c18:	andeq	r2, r1, r8, lsl sl
   12c1c:	andeq	r2, r1, r8, lsl sl
   12c20:	andeq	r2, r1, r8, lsl sl
   12c24:	andeq	r2, r1, r8, lsl sl
   12c28:	andeq	r2, r1, r8, lsl sl
   12c2c:	andeq	r2, r1, r8, lsl sl
   12c30:	andeq	r2, r1, r8, lsl sl
   12c34:	andeq	r2, r1, r8, lsl sl
   12c38:	andeq	r2, r1, r8, lsl sl
   12c3c:	andeq	r2, r1, r8, lsl sl
   12c40:	andeq	r2, r1, r8, lsl sl
   12c44:	andeq	r2, r1, r8, lsl sl
   12c48:	andeq	r2, r1, r8, lsl sl
   12c4c:	andeq	r2, r1, r8, lsl sl
   12c50:	andeq	r2, r1, r8, lsl sl
   12c54:	andeq	r2, r1, r8, lsl sl
   12c58:	andeq	r2, r1, r8, lsl sl
   12c5c:	andeq	r2, r1, r0, lsl #19
   12c60:	ldrdeq	r2, [r1], -ip
   12c64:	andeq	r2, r1, r8, lsl sl
   12c68:	andeq	r2, r1, r0, lsl #19
   12c6c:	andeq	r2, r1, r8, lsl sl
   12c70:	andeq	r2, r1, r0, lsl #19
   12c74:	andeq	r2, r1, r8, lsl sl
   12c78:	andeq	r2, r1, r8, lsl sl
   12c7c:	andeq	r2, r1, r8, lsl sl
   12c80:	andeq	r2, r1, r8, lsl sl
   12c84:	andeq	r2, r1, r8, lsl sl
   12c88:	andeq	r2, r1, r8, lsl sl
   12c8c:	andeq	r2, r1, r8, lsl sl
   12c90:	andeq	r2, r1, r8, lsl sl
   12c94:	andeq	r2, r1, r8, lsl sl
   12c98:	andeq	r2, r1, r8, lsl sl
   12c9c:	andeq	r2, r1, r8, lsl sl
   12ca0:	andeq	r2, r1, r8, lsl sl
   12ca4:	andeq	r2, r1, r8, lsl sl
   12ca8:	andeq	r2, r1, r8, lsl sl
   12cac:	andeq	r2, r1, r8, lsl sl
   12cb0:	andeq	r2, r1, r8, lsl sl
   12cb4:	andeq	r2, r1, r8, lsl sl
   12cb8:	andeq	r2, r1, r8, lsl sl
   12cbc:	andeq	r2, r1, r8, lsl sl
   12cc0:	andeq	r2, r1, r8, lsl sl
   12cc4:	andeq	r2, r1, r8, lsl sl
   12cc8:	andeq	r2, r1, r8, lsl sl
   12ccc:	andeq	r2, r1, r8, lsl sl
   12cd0:	andeq	r2, r1, r8, lsl sl
   12cd4:	andeq	r2, r1, r8, lsl sl
   12cd8:	andeq	r2, r1, r8, lsl sl
   12cdc:	andeq	r2, r1, r0, ror r5
   12ce0:	andeq	r2, r1, r0, lsl #19
   12ce4:	andeq	r2, r1, r0, ror r5
   12ce8:	muleq	r1, r0, r5
   12cec:	mov	r3, #116	; 0x74
   12cf0:	b	127c0 <abort@plt+0x1600>
   12cf4:	ldr	r3, [sp, #160]	; 0xa0
   12cf8:	cmp	r3, #0
   12cfc:	beq	125cc <abort@plt+0x140c>
   12d00:	lsr	r3, r4, #5
   12d04:	ldr	r0, [sp, #160]	; 0xa0
   12d08:	uxtb	r3, r3
   12d0c:	and	r1, r4, #31
   12d10:	ldr	r0, [r0, r3, lsl #2]
   12d14:	lsr	r3, r0, r1
   12d18:	tst	r3, #1
   12d1c:	beq	125cc <abort@plt+0x140c>
   12d20:	ldr	r3, [sp, #28]
   12d24:	cmp	r3, #0
   12d28:	beq	1272c <abort@plt+0x156c>
   12d2c:	ldr	sl, [sp, #32]
   12d30:	mov	r8, fp
   12d34:	b	127f0 <abort@plt+0x1630>
   12d38:	ldr	r3, [sp, #28]
   12d3c:	cmp	r3, #0
   12d40:	bne	13294 <abort@plt+0x20d4>
   12d44:	add	sl, sl, #1
   12d48:	ldr	r6, [sp, #40]	; 0x28
   12d4c:	mov	r5, #0
   12d50:	mov	r4, #92	; 0x5c
   12d54:	b	125e8 <abort@plt+0x1428>
   12d58:	cmp	r9, r8
   12d5c:	bne	12fcc <abort@plt+0x1e0c>
   12d60:	ldr	r0, [sp, #100]	; 0x64
   12d64:	bl	10fec <iswprint@plt>
   12d68:	add	r5, r5, r4
   12d6c:	cmp	r0, #0
   12d70:	add	r0, sp, #104	; 0x68
   12d74:	moveq	r6, #0
   12d78:	bl	10f74 <mbsinit@plt>
   12d7c:	cmp	r0, #0
   12d80:	beq	12f60 <abort@plt+0x1da0>
   12d84:	mov	r2, r6
   12d88:	mov	ip, r5
   12d8c:	eor	r5, r2, #1
   12d90:	ldr	r4, [sp, #80]	; 0x50
   12d94:	ldr	r6, [sp, #84]	; 0x54
   12d98:	ldr	r7, [sp, #88]	; 0x58
   12d9c:	uxtb	r5, r5
   12da0:	cmp	ip, #1
   12da4:	bls	132a4 <abort@plt+0x20e4>
   12da8:	ldr	r3, [sp, #44]	; 0x2c
   12dac:	and	r8, r3, r5
   12db0:	mov	r5, r2
   12db4:	uxtb	r8, r8
   12db8:	add	r2, sl, ip
   12dbc:	ldr	r0, [sp, #48]	; 0x30
   12dc0:	mov	r1, #0
   12dc4:	str	r5, [sp, #48]	; 0x30
   12dc8:	ldr	r9, [sp, #28]
   12dcc:	ldr	ip, [sp, #40]	; 0x28
   12dd0:	ldr	r3, [sp, #32]
   12dd4:	ldr	r5, [sp, #152]	; 0x98
   12dd8:	b	12e94 <abort@plt+0x1cd4>
   12ddc:	cmp	r9, #0
   12de0:	bne	131b8 <abort@plt+0x1ff8>
   12de4:	eor	r1, ip, #1
   12de8:	cmp	r5, #2
   12dec:	movne	r1, #0
   12df0:	andeq	r1, r1, #1
   12df4:	cmp	r1, #0
   12df8:	beq	12e30 <abort@plt+0x1c70>
   12dfc:	cmp	fp, r7
   12e00:	movhi	ip, #39	; 0x27
   12e04:	strbhi	ip, [r3, r7]
   12e08:	add	ip, r7, #1
   12e0c:	cmp	fp, ip
   12e10:	movhi	lr, #36	; 0x24
   12e14:	strbhi	lr, [r3, ip]
   12e18:	add	ip, r7, #2
   12e1c:	cmp	fp, ip
   12e20:	movhi	lr, #39	; 0x27
   12e24:	strbhi	lr, [r3, ip]
   12e28:	add	r7, r7, #3
   12e2c:	mov	ip, r1
   12e30:	cmp	fp, r7
   12e34:	movhi	r1, #92	; 0x5c
   12e38:	strbhi	r1, [r3, r7]
   12e3c:	add	r1, r7, #1
   12e40:	cmp	fp, r1
   12e44:	lsrhi	lr, r4, #6
   12e48:	addhi	lr, lr, #48	; 0x30
   12e4c:	strbhi	lr, [r3, r1]
   12e50:	add	lr, r7, #2
   12e54:	cmp	fp, lr
   12e58:	lsrhi	r1, r4, #3
   12e5c:	andhi	r1, r1, #7
   12e60:	addhi	r1, r1, #48	; 0x30
   12e64:	add	sl, sl, #1
   12e68:	strbhi	r1, [r3, lr]
   12e6c:	and	r4, r4, #7
   12e70:	cmp	r2, sl
   12e74:	add	r4, r4, #48	; 0x30
   12e78:	add	r7, r7, #3
   12e7c:	bls	131dc <abort@plt+0x201c>
   12e80:	mov	r1, r8
   12e84:	cmp	fp, r7
   12e88:	strbhi	r4, [r3, r7]
   12e8c:	ldrb	r4, [r0, #1]!
   12e90:	add	r7, r7, #1
   12e94:	cmp	r8, #0
   12e98:	bne	12ddc <abort@plt+0x1c1c>
   12e9c:	cmp	r6, #0
   12ea0:	bne	12ef0 <abort@plt+0x1d30>
   12ea4:	eor	r6, r1, #1
   12ea8:	and	r6, r6, ip
   12eac:	add	sl, sl, #1
   12eb0:	cmp	r2, sl
   12eb4:	uxtb	r6, r6
   12eb8:	bls	12f18 <abort@plt+0x1d58>
   12ebc:	cmp	r6, #0
   12ec0:	beq	12e84 <abort@plt+0x1cc4>
   12ec4:	cmp	fp, r7
   12ec8:	movhi	ip, #39	; 0x27
   12ecc:	strbhi	ip, [r3, r7]
   12ed0:	add	ip, r7, #1
   12ed4:	cmp	fp, ip
   12ed8:	movhi	lr, #39	; 0x27
   12edc:	strbhi	lr, [r3, ip]
   12ee0:	add	r7, r7, #2
   12ee4:	mov	r6, r8
   12ee8:	mov	ip, r8
   12eec:	b	12e84 <abort@plt+0x1cc4>
   12ef0:	cmp	fp, r7
   12ef4:	eor	r6, r1, #1
   12ef8:	movhi	lr, #92	; 0x5c
   12efc:	and	r6, r6, ip
   12f00:	add	sl, sl, #1
   12f04:	strbhi	lr, [r3, r7]
   12f08:	cmp	r2, sl
   12f0c:	add	r7, r7, #1
   12f10:	uxtb	r6, r6
   12f14:	bhi	12ebc <abort@plt+0x1cfc>
   12f18:	str	ip, [sp, #40]	; 0x28
   12f1c:	ldr	r5, [sp, #48]	; 0x30
   12f20:	b	125e8 <abort@plt+0x1428>
   12f24:	ldr	r3, [sp, #24]
   12f28:	cmn	r3, #1
   12f2c:	mov	r3, #0
   12f30:	str	r3, [sp, #104]	; 0x68
   12f34:	str	r3, [sp, #108]	; 0x6c
   12f38:	beq	13258 <abort@plt+0x2098>
   12f3c:	mov	r2, r5
   12f40:	mov	r3, #0
   12f44:	str	r7, [sp, #88]	; 0x58
   12f48:	ldr	r7, [sp, #152]	; 0x98
   12f4c:	str	r5, [sp, #92]	; 0x5c
   12f50:	str	r6, [sp, #84]	; 0x54
   12f54:	mov	r5, r3
   12f58:	mov	r6, r2
   12f5c:	str	r4, [sp, #80]	; 0x50
   12f60:	ldr	r3, [sp, #56]	; 0x38
   12f64:	add	r9, sl, r5
   12f68:	add	r8, r3, r9
   12f6c:	ldr	r3, [sp, #24]
   12f70:	mov	r1, r8
   12f74:	sub	r2, r3, r9
   12f78:	add	r0, sp, #100	; 0x64
   12f7c:	add	r3, sp, #104	; 0x68
   12f80:	bl	14bd8 <abort@plt+0x3a18>
   12f84:	subs	r4, r0, #0
   12f88:	beq	13330 <abort@plt+0x2170>
   12f8c:	cmn	r4, #1
   12f90:	beq	13310 <abort@plt+0x2150>
   12f94:	cmn	r4, #2
   12f98:	beq	132b0 <abort@plt+0x20f0>
   12f9c:	ldr	r2, [sp, #28]
   12fa0:	cmp	r7, #2
   12fa4:	movne	r2, #0
   12fa8:	andeq	r2, r2, #1
   12fac:	cmp	r2, #0
   12fb0:	beq	12d60 <abort@plt+0x1ba0>
   12fb4:	cmp	r4, #1
   12fb8:	beq	12d60 <abort@plt+0x1ba0>
   12fbc:	sub	r3, r4, #1
   12fc0:	add	r9, r3, r9
   12fc4:	ldr	r3, [sp, #56]	; 0x38
   12fc8:	add	r9, r3, r9
   12fcc:	ldrb	r3, [r8, #1]!
   12fd0:	sub	r3, r3, #91	; 0x5b
   12fd4:	cmp	r3, #33	; 0x21
   12fd8:	ldrls	pc, [pc, r3, lsl #2]
   12fdc:	b	12d58 <abort@plt+0x1b98>
   12fe0:	andeq	r3, r1, r8, rrx
   12fe4:	andeq	r3, r1, r8, rrx
   12fe8:	andeq	r2, r1, r8, asr sp
   12fec:	andeq	r3, r1, r8, rrx
   12ff0:	andeq	r2, r1, r8, asr sp
   12ff4:	andeq	r3, r1, r8, rrx
   12ff8:	andeq	r2, r1, r8, asr sp
   12ffc:	andeq	r2, r1, r8, asr sp
   13000:	andeq	r2, r1, r8, asr sp
   13004:	andeq	r2, r1, r8, asr sp
   13008:	andeq	r2, r1, r8, asr sp
   1300c:	andeq	r2, r1, r8, asr sp
   13010:	andeq	r2, r1, r8, asr sp
   13014:	andeq	r2, r1, r8, asr sp
   13018:	andeq	r2, r1, r8, asr sp
   1301c:	andeq	r2, r1, r8, asr sp
   13020:	andeq	r2, r1, r8, asr sp
   13024:	andeq	r2, r1, r8, asr sp
   13028:	andeq	r2, r1, r8, asr sp
   1302c:	andeq	r2, r1, r8, asr sp
   13030:	andeq	r2, r1, r8, asr sp
   13034:	andeq	r2, r1, r8, asr sp
   13038:	andeq	r2, r1, r8, asr sp
   1303c:	andeq	r2, r1, r8, asr sp
   13040:	andeq	r2, r1, r8, asr sp
   13044:	andeq	r2, r1, r8, asr sp
   13048:	andeq	r2, r1, r8, asr sp
   1304c:	andeq	r2, r1, r8, asr sp
   13050:	andeq	r2, r1, r8, asr sp
   13054:	andeq	r2, r1, r8, asr sp
   13058:	andeq	r2, r1, r8, asr sp
   1305c:	andeq	r2, r1, r8, asr sp
   13060:	andeq	r2, r1, r8, asr sp
   13064:	andeq	r3, r1, r8, rrx
   13068:	mov	r3, #2
   1306c:	ldr	sl, [sp, #32]
   13070:	mov	r8, fp
   13074:	str	r3, [sp, #152]	; 0x98
   13078:	b	127f0 <abort@plt+0x1630>
   1307c:	ldr	r3, [sp, #156]	; 0x9c
   13080:	tst	r3, #1
   13084:	bne	131b0 <abort@plt+0x1ff0>
   13088:	ldr	r3, [sp, #152]	; 0x98
   1308c:	ldr	r4, [sp, #44]	; 0x2c
   13090:	sub	r2, r3, #2
   13094:	mov	r5, #0
   13098:	clz	r2, r2
   1309c:	mov	r8, r4
   130a0:	lsr	r2, r2, #5
   130a4:	b	125b0 <abort@plt+0x13f0>
   130a8:	ldr	r3, [sp, #156]	; 0x9c
   130ac:	ands	r9, r3, #4
   130b0:	beq	131e8 <abort@plt+0x2028>
   130b4:	ldr	r2, [sp, #24]
   130b8:	add	r3, sl, #2
   130bc:	cmp	r3, r2
   130c0:	bcs	130d4 <abort@plt+0x1f14>
   130c4:	ldr	r2, [sp, #48]	; 0x30
   130c8:	ldrb	r4, [r2, #1]
   130cc:	cmp	r4, #63	; 0x3f
   130d0:	beq	13370 <abort@plt+0x21b0>
   130d4:	mov	r2, #0
   130d8:	mov	r8, r2
   130dc:	mov	r5, r2
   130e0:	mov	r4, #63	; 0x3f
   130e4:	b	125b0 <abort@plt+0x13f0>
   130e8:	ldr	r3, [sp, #28]
   130ec:	cmp	r3, #0
   130f0:	bne	13414 <abort@plt+0x2254>
   130f4:	mov	r2, r5
   130f8:	mov	r8, r3
   130fc:	mov	r5, #0
   13100:	mov	r4, #63	; 0x3f
   13104:	b	125b0 <abort@plt+0x13f0>
   13108:	ldr	r3, [sp, #28]
   1310c:	cmp	r3, #0
   13110:	bne	13414 <abort@plt+0x2254>
   13114:	ldr	r2, [sp, #72]	; 0x48
   13118:	adds	r3, fp, #0
   1311c:	movne	r3, #1
   13120:	cmp	r2, #0
   13124:	movne	r3, #0
   13128:	cmp	r3, #0
   1312c:	strne	fp, [sp, #72]	; 0x48
   13130:	movne	fp, #0
   13134:	bne	13170 <abort@plt+0x1fb0>
   13138:	cmp	fp, r7
   1313c:	movhi	r2, #39	; 0x27
   13140:	ldrhi	r3, [sp, #32]
   13144:	strbhi	r2, [r3, r7]
   13148:	add	r3, r7, #1
   1314c:	cmp	fp, r3
   13150:	movhi	r1, #92	; 0x5c
   13154:	ldrhi	r2, [sp, #32]
   13158:	strbhi	r1, [r2, r3]
   1315c:	add	r3, r7, #2
   13160:	cmp	fp, r3
   13164:	movhi	r1, #39	; 0x27
   13168:	ldrhi	r2, [sp, #32]
   1316c:	strbhi	r1, [r2, r3]
   13170:	ldr	r3, [sp, #28]
   13174:	add	r7, r7, #3
   13178:	mov	r2, r5
   1317c:	mov	r8, r3
   13180:	str	r5, [sp, #68]	; 0x44
   13184:	str	r3, [sp, #40]	; 0x28
   13188:	mov	r4, #39	; 0x27
   1318c:	b	125b0 <abort@plt+0x13f0>
   13190:	ldr	r3, [sp, #56]	; 0x38
   13194:	ldrb	r3, [r3, #1]
   13198:	adds	r3, r3, #0
   1319c:	movne	r3, #1
   131a0:	b	12588 <abort@plt+0x13c8>
   131a4:	ldr	r5, [sp, #28]
   131a8:	mov	r4, #48	; 0x30
   131ac:	b	125b0 <abort@plt+0x13f0>
   131b0:	add	sl, sl, #1
   131b4:	b	120e0 <abort@plt+0xf20>
   131b8:	mov	sl, r3
   131bc:	ldr	r3, [sp, #28]
   131c0:	mov	r8, fp
   131c4:	str	r3, [sp, #44]	; 0x2c
   131c8:	ldr	r3, [sp, #152]	; 0x98
   131cc:	sub	r2, r3, #2
   131d0:	clz	r2, r2
   131d4:	lsr	r2, r2, #5
   131d8:	b	127f0 <abort@plt+0x1630>
   131dc:	str	ip, [sp, #40]	; 0x28
   131e0:	ldr	r5, [sp, #48]	; 0x30
   131e4:	b	12620 <abort@plt+0x1460>
   131e8:	mov	r2, r9
   131ec:	mov	r8, r9
   131f0:	mov	r5, #0
   131f4:	mov	r4, #63	; 0x3f
   131f8:	b	125b0 <abort@plt+0x13f0>
   131fc:	cmp	fp, #0
   13200:	beq	13278 <abort@plt+0x20b8>
   13204:	ldr	r1, [sp, #32]
   13208:	mov	r3, #34	; 0x22
   1320c:	mov	r2, #1
   13210:	strb	r3, [r1]
   13214:	ldr	r3, [pc, #332]	; 13368 <abort@plt+0x21a8>
   13218:	str	r2, [sp, #52]	; 0x34
   1321c:	mov	r7, r2
   13220:	str	r2, [sp, #44]	; 0x2c
   13224:	str	r3, [sp, #64]	; 0x40
   13228:	b	120d0 <abort@plt+0xf10>
   1322c:	ldr	r3, [pc, #300]	; 13360 <abort@plt+0x21a0>
   13230:	str	r3, [sp, #64]	; 0x40
   13234:	mov	r3, #0
   13238:	str	r3, [sp, #28]
   1323c:	mov	r3, #1
   13240:	str	r3, [sp, #52]	; 0x34
   13244:	mov	r7, r3
   13248:	mov	r3, #2
   1324c:	str	r3, [sp, #152]	; 0x98
   13250:	b	120d0 <abort@plt+0xf10>
   13254:	bl	111c0 <abort@plt>
   13258:	ldr	r0, [sp, #56]	; 0x38
   1325c:	bl	110d0 <strlen@plt>
   13260:	str	r0, [sp, #24]
   13264:	b	12f3c <abort@plt+0x1d7c>
   13268:	mov	r5, r8
   1326c:	mov	r4, #48	; 0x30
   13270:	ldr	r8, [sp, #44]	; 0x2c
   13274:	b	125b0 <abort@plt+0x13f0>
   13278:	mov	r3, #1
   1327c:	str	r3, [sp, #52]	; 0x34
   13280:	mov	r7, r3
   13284:	str	r3, [sp, #44]	; 0x2c
   13288:	ldr	r3, [pc, #216]	; 13368 <abort@plt+0x21a8>
   1328c:	str	r3, [sp, #64]	; 0x40
   13290:	b	120d0 <abort@plt+0xf10>
   13294:	ldr	sl, [sp, #32]
   13298:	mov	r8, fp
   1329c:	mov	r2, r3
   132a0:	b	127f0 <abort@plt+0x1630>
   132a4:	mov	r3, r5
   132a8:	mov	r5, r2
   132ac:	b	12aa8 <abort@plt+0x18e8>
   132b0:	ldr	r1, [sp, #24]
   132b4:	mov	r2, r5
   132b8:	cmp	r1, r9
   132bc:	mov	ip, r5
   132c0:	ldr	r4, [sp, #80]	; 0x50
   132c4:	ldr	r5, [sp, #92]	; 0x5c
   132c8:	ldr	r6, [sp, #84]	; 0x54
   132cc:	ldr	r7, [sp, #88]	; 0x58
   132d0:	bls	13304 <abort@plt+0x2144>
   132d4:	ldrb	r3, [r8]
   132d8:	cmp	r3, #0
   132dc:	bne	132f0 <abort@plt+0x2130>
   132e0:	b	13308 <abort@plt+0x2148>
   132e4:	ldrb	r3, [r8, #1]!
   132e8:	cmp	r3, #0
   132ec:	beq	13408 <abort@plt+0x2248>
   132f0:	add	r2, r2, #1
   132f4:	add	r3, sl, r2
   132f8:	cmp	r1, r3
   132fc:	bhi	132e4 <abort@plt+0x2124>
   13300:	mov	ip, r2
   13304:	mov	r3, #0
   13308:	mov	r2, r3
   1330c:	b	12da0 <abort@plt+0x1be0>
   13310:	mov	r3, #0
   13314:	mov	ip, r5
   13318:	ldr	r4, [sp, #80]	; 0x50
   1331c:	ldr	r5, [sp, #92]	; 0x5c
   13320:	ldr	r6, [sp, #84]	; 0x54
   13324:	ldr	r7, [sp, #88]	; 0x58
   13328:	mov	r2, r3
   1332c:	b	12da0 <abort@plt+0x1be0>
   13330:	mov	r3, r6
   13334:	mov	ip, r5
   13338:	eor	r5, r3, #1
   1333c:	mov	r2, r6
   13340:	ldr	r4, [sp, #80]	; 0x50
   13344:	ldr	r6, [sp, #84]	; 0x54
   13348:	ldr	r7, [sp, #88]	; 0x58
   1334c:	uxtb	r5, r5
   13350:	b	12da0 <abort@plt+0x1be0>
   13354:	ldr	sl, [sp, #32]
   13358:	mov	r8, fp
   1335c:	b	131c4 <abort@plt+0x2004>
   13360:	andeq	r5, r1, r0, ror sl
   13364:	andeq	r5, r1, r4, ror sl
   13368:	andeq	r5, r1, ip, ror #20
   1336c:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13370:	ldr	r2, [sp, #56]	; 0x38
   13374:	ldrb	r1, [r2, r3]
   13378:	sub	r2, r1, #33	; 0x21
   1337c:	uxtb	r2, r2
   13380:	cmp	r2, #29
   13384:	bhi	13424 <abort@plt+0x2264>
   13388:	ldr	r0, [pc, #-36]	; 1336c <abort@plt+0x21ac>
   1338c:	mov	ip, #1
   13390:	ands	r2, r0, ip, lsl r2
   13394:	beq	13434 <abort@plt+0x2274>
   13398:	ldr	r2, [sp, #28]
   1339c:	cmp	r2, #0
   133a0:	bne	13534 <abort@plt+0x2374>
   133a4:	cmp	fp, r7
   133a8:	ldr	r8, [sp, #28]
   133ac:	ldrhi	r2, [sp, #32]
   133b0:	mov	sl, r3
   133b4:	mov	r5, r8
   133b8:	strbhi	r4, [r2, r7]
   133bc:	add	r2, r7, #1
   133c0:	cmp	fp, r2
   133c4:	movhi	r0, #34	; 0x22
   133c8:	ldrhi	ip, [sp, #32]
   133cc:	mov	r4, r1
   133d0:	strbhi	r0, [ip, r2]
   133d4:	add	r2, r7, #2
   133d8:	cmp	fp, r2
   133dc:	movhi	r0, #34	; 0x22
   133e0:	ldrhi	ip, [sp, #32]
   133e4:	strbhi	r0, [ip, r2]
   133e8:	add	r2, r7, #3
   133ec:	cmp	fp, r2
   133f0:	movhi	r0, #63	; 0x3f
   133f4:	ldrhi	ip, [sp, #32]
   133f8:	add	r7, r7, #4
   133fc:	strbhi	r0, [ip, r2]
   13400:	mov	r2, r8
   13404:	b	125b0 <abort@plt+0x13f0>
   13408:	mov	ip, r2
   1340c:	mov	r2, r3
   13410:	b	12da0 <abort@plt+0x1be0>
   13414:	ldr	sl, [sp, #32]
   13418:	mov	r8, fp
   1341c:	ldr	r2, [sp, #28]
   13420:	b	127f0 <abort@plt+0x1630>
   13424:	mov	r2, #0
   13428:	mov	r8, r2
   1342c:	mov	r5, r2
   13430:	b	125b0 <abort@plt+0x13f0>
   13434:	mov	r8, r2
   13438:	mov	r5, #0
   1343c:	b	125b0 <abort@plt+0x13f0>
   13440:	ldr	r1, [sp, #152]	; 0x98
   13444:	bl	11f0c <abort@plt+0xd4c>
   13448:	str	r0, [sp, #168]	; 0xa8
   1344c:	b	1246c <abort@plt+0x12ac>
   13450:	ldr	r1, [sp, #152]	; 0x98
   13454:	bl	11f0c <abort@plt+0xd4c>
   13458:	str	r0, [sp, #164]	; 0xa4
   1345c:	b	1244c <abort@plt+0x128c>
   13460:	ldr	r7, [sp, #28]
   13464:	b	124ac <abort@plt+0x12ec>
   13468:	ldr	sl, [sp, #32]
   1346c:	ldr	r2, [sp, #68]	; 0x44
   13470:	mov	r8, fp
   13474:	mov	fp, r7
   13478:	ldr	r3, [sp, #64]	; 0x40
   1347c:	cmp	r3, #0
   13480:	moveq	r2, #0
   13484:	andne	r2, r2, #1
   13488:	cmp	r2, #0
   1348c:	beq	134b8 <abort@plt+0x22f8>
   13490:	mov	r2, r3
   13494:	ldrb	r3, [r3]
   13498:	cmp	r3, #0
   1349c:	beq	134b8 <abort@plt+0x22f8>
   134a0:	cmp	r8, fp
   134a4:	strbhi	r3, [sl, fp]
   134a8:	ldrb	r3, [r2, #1]!
   134ac:	add	fp, fp, #1
   134b0:	cmp	r3, #0
   134b4:	bne	134a0 <abort@plt+0x22e0>
   134b8:	cmp	r8, fp
   134bc:	movhi	r3, #0
   134c0:	strbhi	r3, [sl, fp]
   134c4:	b	1284c <abort@plt+0x168c>
   134c8:	ldr	r3, [sp, #168]	; 0xa8
   134cc:	ldr	sl, [sp, #32]
   134d0:	str	r3, [sp, #16]
   134d4:	ldr	r3, [sp, #164]	; 0xa4
   134d8:	mov	ip, #5
   134dc:	str	r3, [sp, #12]
   134e0:	ldr	r3, [sp, #160]	; 0xa0
   134e4:	ldr	r2, [sp, #56]	; 0x38
   134e8:	str	r3, [sp, #8]
   134ec:	ldr	r3, [sp, #156]	; 0x9c
   134f0:	ldr	r1, [sp, #72]	; 0x48
   134f4:	str	r3, [sp, #4]
   134f8:	mov	r0, sl
   134fc:	ldr	r3, [sp, #24]
   13500:	str	ip, [sp]
   13504:	bl	1202c <abort@plt+0xe6c>
   13508:	mov	fp, r0
   1350c:	b	1284c <abort@plt+0x168c>
   13510:	mov	r8, fp
   13514:	ldr	sl, [sp, #32]
   13518:	mov	fp, r7
   1351c:	mov	r2, r3
   13520:	b	13478 <abort@plt+0x22b8>
   13524:	mov	r8, fp
   13528:	ldr	sl, [sp, #32]
   1352c:	mov	fp, r7
   13530:	b	13478 <abort@plt+0x22b8>
   13534:	ldr	sl, [sp, #32]
   13538:	mov	r8, fp
   1353c:	b	12808 <abort@plt+0x1648>
   13540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13544:	sub	sp, sp, #52	; 0x34
   13548:	mov	r4, r0
   1354c:	mov	r5, r3
   13550:	mov	sl, r1
   13554:	mov	fp, r2
   13558:	bl	110dc <__errno_location@plt>
   1355c:	ldr	r7, [pc, #412]	; 13700 <abort@plt+0x2540>
   13560:	cmn	r4, #-2147483647	; 0x80000001
   13564:	ldr	r6, [r7]
   13568:	mov	r8, r0
   1356c:	movne	r0, #0
   13570:	moveq	r0, #1
   13574:	ldr	r3, [r8]
   13578:	orrs	r0, r0, r4, lsr #31
   1357c:	str	r3, [sp, #24]
   13580:	bne	136fc <abort@plt+0x253c>
   13584:	ldr	r2, [r7, #4]
   13588:	cmp	r4, r2
   1358c:	blt	135ec <abort@plt+0x242c>
   13590:	add	r9, r7, #8
   13594:	cmp	r6, r9
   13598:	str	r2, [sp, #44]	; 0x2c
   1359c:	beq	136cc <abort@plt+0x250c>
   135a0:	mov	r3, #8
   135a4:	sub	r2, r4, r2
   135a8:	mov	r0, r6
   135ac:	str	r3, [sp]
   135b0:	add	r2, r2, #1
   135b4:	mvn	r3, #-2147483648	; 0x80000000
   135b8:	add	r1, sp, #44	; 0x2c
   135bc:	bl	14464 <abort@plt+0x32a4>
   135c0:	mov	r6, r0
   135c4:	str	r0, [r7]
   135c8:	ldr	r0, [r7, #4]
   135cc:	ldr	r2, [sp, #44]	; 0x2c
   135d0:	mov	r1, #0
   135d4:	sub	r2, r2, r0
   135d8:	add	r0, r6, r0, lsl #3
   135dc:	lsl	r2, r2, #3
   135e0:	bl	110f4 <memset@plt>
   135e4:	ldr	r3, [sp, #44]	; 0x2c
   135e8:	str	r3, [r7, #4]
   135ec:	add	r3, r6, r4, lsl #3
   135f0:	ldr	r1, [r5, #4]
   135f4:	ldr	r7, [r3, #4]
   135f8:	ldr	r9, [r6, r4, lsl #3]
   135fc:	ldr	r2, [r5, #40]	; 0x28
   13600:	ldr	ip, [r5, #44]	; 0x2c
   13604:	add	r0, r5, #8
   13608:	str	r3, [sp, #28]
   1360c:	ldr	r3, [r5]
   13610:	orr	r1, r1, #1
   13614:	mov	lr, r0
   13618:	str	r1, [sp, #32]
   1361c:	str	r0, [sp, #36]	; 0x24
   13620:	str	r1, [sp, #4]
   13624:	str	r2, [sp, #12]
   13628:	str	r3, [sp]
   1362c:	mov	r0, r7
   13630:	mov	r1, r9
   13634:	str	ip, [sp, #16]
   13638:	str	lr, [sp, #8]
   1363c:	mov	r3, fp
   13640:	mov	r2, sl
   13644:	bl	1202c <abort@plt+0xe6c>
   13648:	cmp	r9, r0
   1364c:	bhi	136b8 <abort@plt+0x24f8>
   13650:	ldr	r3, [pc, #172]	; 13704 <abort@plt+0x2544>
   13654:	add	r9, r0, #1
   13658:	cmp	r7, r3
   1365c:	str	r9, [r6, r4, lsl #3]
   13660:	beq	1366c <abort@plt+0x24ac>
   13664:	mov	r0, r7
   13668:	bl	14aac <abort@plt+0x38ec>
   1366c:	mov	r0, r9
   13670:	bl	14300 <abort@plt+0x3140>
   13674:	ldr	lr, [sp, #28]
   13678:	ldr	ip, [r5, #44]	; 0x2c
   1367c:	ldr	r4, [r5, #40]	; 0x28
   13680:	mov	r3, fp
   13684:	mov	r2, sl
   13688:	mov	r1, r9
   1368c:	str	r0, [lr, #4]
   13690:	ldr	lr, [r5]
   13694:	ldr	r5, [sp, #36]	; 0x24
   13698:	str	ip, [sp, #16]
   1369c:	str	r5, [sp, #8]
   136a0:	ldr	r5, [sp, #32]
   136a4:	str	r4, [sp, #12]
   136a8:	str	r5, [sp, #4]
   136ac:	str	lr, [sp]
   136b0:	mov	r7, r0
   136b4:	bl	1202c <abort@plt+0xe6c>
   136b8:	ldr	r3, [sp, #24]
   136bc:	mov	r0, r7
   136c0:	str	r3, [r8]
   136c4:	add	sp, sp, #52	; 0x34
   136c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136cc:	mov	r3, #8
   136d0:	sub	r2, r4, r2
   136d4:	str	r3, [sp]
   136d8:	add	r1, sp, #44	; 0x2c
   136dc:	add	r2, r2, #1
   136e0:	mvn	r3, #-2147483648	; 0x80000000
   136e4:	bl	14464 <abort@plt+0x32a4>
   136e8:	mov	r6, r0
   136ec:	ldm	r9, {r0, r1}
   136f0:	str	r6, [r7]
   136f4:	stm	r6, {r0, r1}
   136f8:	b	135c8 <abort@plt+0x2408>
   136fc:	bl	111c0 <abort@plt>
   13700:	andeq	r6, r2, r4, lsl r1
   13704:	andeq	r6, r2, r4, lsl #3
   13708:	push	{r4, r5, r6, lr}
   1370c:	mov	r5, r0
   13710:	bl	110dc <__errno_location@plt>
   13714:	cmp	r5, #0
   13718:	mov	r1, #48	; 0x30
   1371c:	mov	r4, r0
   13720:	ldr	r0, [pc, #16]	; 13738 <abort@plt+0x2578>
   13724:	ldr	r6, [r4]
   13728:	movne	r0, r5
   1372c:	bl	14760 <abort@plt+0x35a0>
   13730:	str	r6, [r4]
   13734:	pop	{r4, r5, r6, pc}
   13738:	andeq	r6, r2, r4, lsl #5
   1373c:	ldr	r3, [pc, #12]	; 13750 <abort@plt+0x2590>
   13740:	cmp	r0, #0
   13744:	moveq	r0, r3
   13748:	ldr	r0, [r0]
   1374c:	bx	lr
   13750:	andeq	r6, r2, r4, lsl #5
   13754:	ldr	r3, [pc, #12]	; 13768 <abort@plt+0x25a8>
   13758:	cmp	r0, #0
   1375c:	moveq	r0, r3
   13760:	str	r1, [r0]
   13764:	bx	lr
   13768:	andeq	r6, r2, r4, lsl #5
   1376c:	ldr	r3, [pc, #52]	; 137a8 <abort@plt+0x25e8>
   13770:	cmp	r0, #0
   13774:	moveq	r0, r3
   13778:	add	r3, r0, #8
   1377c:	push	{lr}		; (str lr, [sp, #-4]!)
   13780:	lsr	lr, r1, #5
   13784:	and	r1, r1, #31
   13788:	ldr	ip, [r3, lr, lsl #2]
   1378c:	lsr	r0, ip, r1
   13790:	eor	r2, r2, r0
   13794:	and	r2, r2, #1
   13798:	and	r0, r0, #1
   1379c:	eor	r1, ip, r2, lsl r1
   137a0:	str	r1, [r3, lr, lsl #2]
   137a4:	pop	{pc}		; (ldr pc, [sp], #4)
   137a8:	andeq	r6, r2, r4, lsl #5
   137ac:	ldr	r3, [pc, #16]	; 137c4 <abort@plt+0x2604>
   137b0:	cmp	r0, #0
   137b4:	movne	r3, r0
   137b8:	ldr	r0, [r3, #4]
   137bc:	str	r1, [r3, #4]
   137c0:	bx	lr
   137c4:	andeq	r6, r2, r4, lsl #5
   137c8:	ldr	r3, [pc, #44]	; 137fc <abort@plt+0x263c>
   137cc:	cmp	r0, #0
   137d0:	moveq	r0, r3
   137d4:	mov	ip, #10
   137d8:	cmp	r2, #0
   137dc:	cmpne	r1, #0
   137e0:	str	ip, [r0]
   137e4:	beq	137f4 <abort@plt+0x2634>
   137e8:	str	r1, [r0, #40]	; 0x28
   137ec:	str	r2, [r0, #44]	; 0x2c
   137f0:	bx	lr
   137f4:	push	{r4, lr}
   137f8:	bl	111c0 <abort@plt>
   137fc:	andeq	r6, r2, r4, lsl #5
   13800:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13804:	sub	sp, sp, #24
   13808:	ldr	ip, [pc, #108]	; 1387c <abort@plt+0x26bc>
   1380c:	ldr	r4, [sp, #56]	; 0x38
   13810:	mov	r9, r2
   13814:	cmp	r4, #0
   13818:	moveq	r4, ip
   1381c:	mov	sl, r3
   13820:	mov	r7, r0
   13824:	mov	r8, r1
   13828:	bl	110dc <__errno_location@plt>
   1382c:	ldr	r3, [r4, #44]	; 0x2c
   13830:	mov	r1, r8
   13834:	ldr	r6, [r0]
   13838:	str	r3, [sp, #16]
   1383c:	ldr	r2, [r4, #40]	; 0x28
   13840:	add	r3, r4, #8
   13844:	str	r3, [sp, #8]
   13848:	str	r2, [sp, #12]
   1384c:	ldr	r2, [r4, #4]
   13850:	mov	r5, r0
   13854:	str	r2, [sp, #4]
   13858:	ldr	ip, [r4]
   1385c:	mov	r3, sl
   13860:	mov	r2, r9
   13864:	mov	r0, r7
   13868:	str	ip, [sp]
   1386c:	bl	1202c <abort@plt+0xe6c>
   13870:	str	r6, [r5]
   13874:	add	sp, sp, #24
   13878:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1387c:	andeq	r6, r2, r4, lsl #5
   13880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13884:	cmp	r3, #0
   13888:	sub	sp, sp, #44	; 0x2c
   1388c:	ldr	r4, [pc, #192]	; 13954 <abort@plt+0x2794>
   13890:	mov	r6, r2
   13894:	movne	r4, r3
   13898:	mov	r9, r1
   1389c:	mov	r8, r0
   138a0:	bl	110dc <__errno_location@plt>
   138a4:	ldr	r3, [r4, #44]	; 0x2c
   138a8:	ldr	r5, [r4, #4]
   138ac:	add	sl, r4, #8
   138b0:	cmp	r6, #0
   138b4:	orreq	r5, r5, #1
   138b8:	mov	r1, #0
   138bc:	ldr	r2, [r0]
   138c0:	str	r3, [sp, #16]
   138c4:	ldr	r3, [r4, #40]	; 0x28
   138c8:	stmib	sp, {r5, sl}
   138cc:	str	r3, [sp, #12]
   138d0:	ldr	r3, [r4]
   138d4:	mov	r7, r0
   138d8:	str	r2, [sp, #28]
   138dc:	str	r3, [sp]
   138e0:	mov	r2, r8
   138e4:	mov	r3, r9
   138e8:	mov	r0, r1
   138ec:	bl	1202c <abort@plt+0xe6c>
   138f0:	add	r1, r0, #1
   138f4:	mov	fp, r0
   138f8:	mov	r0, r1
   138fc:	str	r1, [sp, #36]	; 0x24
   13900:	bl	14300 <abort@plt+0x3140>
   13904:	ldr	r3, [r4, #44]	; 0x2c
   13908:	mov	r2, r8
   1390c:	str	r3, [sp, #16]
   13910:	ldr	r3, [r4, #40]	; 0x28
   13914:	str	r5, [sp, #4]
   13918:	str	r3, [sp, #12]
   1391c:	str	sl, [sp, #8]
   13920:	ldr	ip, [r4]
   13924:	ldr	r1, [sp, #36]	; 0x24
   13928:	mov	r3, r9
   1392c:	str	ip, [sp]
   13930:	str	r0, [sp, #32]
   13934:	bl	1202c <abort@plt+0xe6c>
   13938:	ldr	r2, [sp, #28]
   1393c:	cmp	r6, #0
   13940:	str	r2, [r7]
   13944:	ldr	r0, [sp, #32]
   13948:	strne	fp, [r6]
   1394c:	add	sp, sp, #44	; 0x2c
   13950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13954:	andeq	r6, r2, r4, lsl #5
   13958:	mov	r3, r2
   1395c:	mov	r2, #0
   13960:	b	13880 <abort@plt+0x26c0>
   13964:	push	{r4, r5, r6, r7, r8, lr}
   13968:	ldr	r6, [pc, #116]	; 139e4 <abort@plt+0x2824>
   1396c:	ldr	r3, [r6, #4]
   13970:	ldr	r7, [r6]
   13974:	cmp	r3, #1
   13978:	movgt	r5, r7
   1397c:	movgt	r4, #1
   13980:	ble	139a0 <abort@plt+0x27e0>
   13984:	ldr	r0, [r5, #12]
   13988:	bl	14aac <abort@plt+0x38ec>
   1398c:	ldr	r3, [r6, #4]
   13990:	add	r4, r4, #1
   13994:	cmp	r3, r4
   13998:	add	r5, r5, #8
   1399c:	bgt	13984 <abort@plt+0x27c4>
   139a0:	ldr	r0, [r7, #4]
   139a4:	ldr	r4, [pc, #60]	; 139e8 <abort@plt+0x2828>
   139a8:	cmp	r0, r4
   139ac:	beq	139c0 <abort@plt+0x2800>
   139b0:	bl	14aac <abort@plt+0x38ec>
   139b4:	mov	r3, #256	; 0x100
   139b8:	str	r4, [r6, #12]
   139bc:	str	r3, [r6, #8]
   139c0:	ldr	r4, [pc, #36]	; 139ec <abort@plt+0x282c>
   139c4:	cmp	r7, r4
   139c8:	beq	139d8 <abort@plt+0x2818>
   139cc:	mov	r0, r7
   139d0:	bl	14aac <abort@plt+0x38ec>
   139d4:	str	r4, [r6]
   139d8:	mov	r3, #1
   139dc:	str	r3, [r6, #4]
   139e0:	pop	{r4, r5, r6, r7, r8, pc}
   139e4:	andeq	r6, r2, r4, lsl r1
   139e8:	andeq	r6, r2, r4, lsl #3
   139ec:	andeq	r6, r2, ip, lsl r1
   139f0:	ldr	r3, [pc, #4]	; 139fc <abort@plt+0x283c>
   139f4:	mvn	r2, #0
   139f8:	b	13540 <abort@plt+0x2380>
   139fc:	andeq	r6, r2, r4, lsl #5
   13a00:	ldr	r3, [pc]	; 13a08 <abort@plt+0x2848>
   13a04:	b	13540 <abort@plt+0x2380>
   13a08:	andeq	r6, r2, r4, lsl #5
   13a0c:	mov	r1, r0
   13a10:	ldr	r3, [pc, #8]	; 13a20 <abort@plt+0x2860>
   13a14:	mvn	r2, #0
   13a18:	mov	r0, #0
   13a1c:	b	13540 <abort@plt+0x2380>
   13a20:	andeq	r6, r2, r4, lsl #5
   13a24:	mov	r2, r1
   13a28:	ldr	r3, [pc, #8]	; 13a38 <abort@plt+0x2878>
   13a2c:	mov	r1, r0
   13a30:	mov	r0, #0
   13a34:	b	13540 <abort@plt+0x2380>
   13a38:	andeq	r6, r2, r4, lsl #5
   13a3c:	push	{r4, r5, lr}
   13a40:	sub	sp, sp, #52	; 0x34
   13a44:	mov	r5, r2
   13a48:	mov	r4, r0
   13a4c:	mov	r0, sp
   13a50:	bl	11edc <abort@plt+0xd1c>
   13a54:	mov	r3, sp
   13a58:	mov	r1, r5
   13a5c:	mov	r0, r4
   13a60:	mvn	r2, #0
   13a64:	bl	13540 <abort@plt+0x2380>
   13a68:	add	sp, sp, #52	; 0x34
   13a6c:	pop	{r4, r5, pc}
   13a70:	push	{r4, r5, r6, lr}
   13a74:	sub	sp, sp, #48	; 0x30
   13a78:	mov	r5, r2
   13a7c:	mov	r6, r3
   13a80:	mov	r4, r0
   13a84:	mov	r0, sp
   13a88:	bl	11edc <abort@plt+0xd1c>
   13a8c:	mov	r3, sp
   13a90:	mov	r2, r6
   13a94:	mov	r1, r5
   13a98:	mov	r0, r4
   13a9c:	bl	13540 <abort@plt+0x2380>
   13aa0:	add	sp, sp, #48	; 0x30
   13aa4:	pop	{r4, r5, r6, pc}
   13aa8:	mov	r2, r1
   13aac:	mov	r1, r0
   13ab0:	mov	r0, #0
   13ab4:	b	13a3c <abort@plt+0x287c>
   13ab8:	mov	r3, r2
   13abc:	mov	r2, r1
   13ac0:	mov	r1, r0
   13ac4:	mov	r0, #0
   13ac8:	b	13a70 <abort@plt+0x28b0>
   13acc:	push	{r4, r5, r6, r7, r8, lr}
   13ad0:	mov	r7, r0
   13ad4:	ldr	lr, [pc, #100]	; 13b40 <abort@plt+0x2980>
   13ad8:	mov	r8, r1
   13adc:	mov	r4, r2
   13ae0:	ldm	lr!, {r0, r1, r2, r3}
   13ae4:	sub	sp, sp, #48	; 0x30
   13ae8:	mov	ip, sp
   13aec:	lsr	r5, r4, #5
   13af0:	stmia	ip!, {r0, r1, r2, r3}
   13af4:	add	r6, sp, #8
   13af8:	ldm	lr!, {r0, r1, r2, r3}
   13afc:	and	r4, r4, #31
   13b00:	stmia	ip!, {r0, r1, r2, r3}
   13b04:	ldm	lr, {r0, r1, r2, r3}
   13b08:	stm	ip, {r0, r1, r2, r3}
   13b0c:	mov	r2, r8
   13b10:	ldr	lr, [r6, r5, lsl #2]
   13b14:	mov	r1, r7
   13b18:	mov	r3, sp
   13b1c:	lsr	ip, lr, r4
   13b20:	eor	ip, ip, #1
   13b24:	and	ip, ip, #1
   13b28:	mov	r0, #0
   13b2c:	eor	r4, lr, ip, lsl r4
   13b30:	str	r4, [r6, r5, lsl #2]
   13b34:	bl	13540 <abort@plt+0x2380>
   13b38:	add	sp, sp, #48	; 0x30
   13b3c:	pop	{r4, r5, r6, r7, r8, pc}
   13b40:	andeq	r6, r2, r4, lsl #5
   13b44:	mov	r2, r1
   13b48:	mvn	r1, #0
   13b4c:	b	13acc <abort@plt+0x290c>
   13b50:	mov	r2, #58	; 0x3a
   13b54:	mvn	r1, #0
   13b58:	b	13acc <abort@plt+0x290c>
   13b5c:	mov	r2, #58	; 0x3a
   13b60:	b	13acc <abort@plt+0x290c>
   13b64:	push	{r4, r5, r6, r7, lr}
   13b68:	sub	sp, sp, #100	; 0x64
   13b6c:	mov	r6, r0
   13b70:	mov	r0, sp
   13b74:	mov	r7, r2
   13b78:	bl	11edc <abort@plt+0xd1c>
   13b7c:	mov	ip, sp
   13b80:	add	lr, sp, #48	; 0x30
   13b84:	ldm	ip!, {r0, r1, r2, r3}
   13b88:	stmia	lr!, {r0, r1, r2, r3}
   13b8c:	ldm	ip!, {r0, r1, r2, r3}
   13b90:	ldr	r5, [sp, #60]	; 0x3c
   13b94:	stmia	lr!, {r0, r1, r2, r3}
   13b98:	mvn	r4, r5
   13b9c:	ldm	ip, {r0, r1, r2, r3}
   13ba0:	and	ip, r4, #67108864	; 0x4000000
   13ba4:	eor	ip, ip, r5
   13ba8:	str	ip, [sp, #60]	; 0x3c
   13bac:	stm	lr, {r0, r1, r2, r3}
   13bb0:	mov	r1, r7
   13bb4:	mov	r0, r6
   13bb8:	add	r3, sp, #48	; 0x30
   13bbc:	mvn	r2, #0
   13bc0:	bl	13540 <abort@plt+0x2380>
   13bc4:	add	sp, sp, #100	; 0x64
   13bc8:	pop	{r4, r5, r6, r7, pc}
   13bcc:	push	{r4, r5, r6, r7, r8, lr}
   13bd0:	mov	r5, r1
   13bd4:	ldr	lr, [pc, #100]	; 13c40 <abort@plt+0x2a80>
   13bd8:	mov	r4, r2
   13bdc:	mov	r7, r0
   13be0:	mov	r8, r3
   13be4:	ldm	lr!, {r0, r1, r2, r3}
   13be8:	sub	sp, sp, #48	; 0x30
   13bec:	mov	ip, sp
   13bf0:	mov	r6, #10
   13bf4:	stmia	ip!, {r0, r1, r2, r3}
   13bf8:	cmp	r4, #0
   13bfc:	cmpne	r5, #0
   13c00:	ldm	lr!, {r0, r1, r2, r3}
   13c04:	str	r6, [sp]
   13c08:	stmia	ip!, {r0, r1, r2, r3}
   13c0c:	ldm	lr, {r0, r1, r2, r3}
   13c10:	stm	ip, {r0, r1, r2, r3}
   13c14:	beq	13c3c <abort@plt+0x2a7c>
   13c18:	mov	r3, sp
   13c1c:	mov	r1, r8
   13c20:	mov	r0, r7
   13c24:	ldr	r2, [sp, #72]	; 0x48
   13c28:	str	r5, [sp, #40]	; 0x28
   13c2c:	str	r4, [sp, #44]	; 0x2c
   13c30:	bl	13540 <abort@plt+0x2380>
   13c34:	add	sp, sp, #48	; 0x30
   13c38:	pop	{r4, r5, r6, r7, r8, pc}
   13c3c:	bl	111c0 <abort@plt>
   13c40:	andeq	r6, r2, r4, lsl #5
   13c44:	push	{lr}		; (str lr, [sp, #-4]!)
   13c48:	sub	sp, sp, #12
   13c4c:	mvn	ip, #0
   13c50:	str	ip, [sp]
   13c54:	bl	13bcc <abort@plt+0x2a0c>
   13c58:	add	sp, sp, #12
   13c5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13c60:	push	{lr}		; (str lr, [sp, #-4]!)
   13c64:	sub	sp, sp, #12
   13c68:	mvn	ip, #0
   13c6c:	mov	r3, r2
   13c70:	str	ip, [sp]
   13c74:	mov	r2, r1
   13c78:	mov	r1, r0
   13c7c:	mov	r0, #0
   13c80:	bl	13bcc <abort@plt+0x2a0c>
   13c84:	add	sp, sp, #12
   13c88:	pop	{pc}		; (ldr pc, [sp], #4)
   13c8c:	push	{lr}		; (str lr, [sp, #-4]!)
   13c90:	sub	sp, sp, #12
   13c94:	str	r3, [sp]
   13c98:	mov	r3, r2
   13c9c:	mov	r2, r1
   13ca0:	mov	r1, r0
   13ca4:	mov	r0, #0
   13ca8:	bl	13bcc <abort@plt+0x2a0c>
   13cac:	add	sp, sp, #12
   13cb0:	pop	{pc}		; (ldr pc, [sp], #4)
   13cb4:	ldr	r3, [pc]	; 13cbc <abort@plt+0x2afc>
   13cb8:	b	13540 <abort@plt+0x2380>
   13cbc:	andeq	r6, r2, r4, lsr #2
   13cc0:	mov	r2, r1
   13cc4:	ldr	r3, [pc, #8]	; 13cd4 <abort@plt+0x2b14>
   13cc8:	mov	r1, r0
   13ccc:	mov	r0, #0
   13cd0:	b	13540 <abort@plt+0x2380>
   13cd4:	andeq	r6, r2, r4, lsr #2
   13cd8:	ldr	r3, [pc, #4]	; 13ce4 <abort@plt+0x2b24>
   13cdc:	mvn	r2, #0
   13ce0:	b	13540 <abort@plt+0x2380>
   13ce4:	andeq	r6, r2, r4, lsr #2
   13ce8:	mov	r1, r0
   13cec:	ldr	r3, [pc, #8]	; 13cfc <abort@plt+0x2b3c>
   13cf0:	mvn	r2, #0
   13cf4:	mov	r0, #0
   13cf8:	b	13540 <abort@plt+0x2380>
   13cfc:	andeq	r6, r2, r4, lsr #2
   13d00:	push	{r4, r5, r6, r7, r8, lr}
   13d04:	subs	r4, r0, #0
   13d08:	beq	13d58 <abort@plt+0x2b98>
   13d0c:	cmp	r4, #10
   13d10:	beq	13d1c <abort@plt+0x2b5c>
   13d14:	mov	r0, r4
   13d18:	pop	{r4, r5, r6, r7, r8, pc}
   13d1c:	ldr	r6, [r1]
   13d20:	mov	r5, r1
   13d24:	mov	r0, r6
   13d28:	ldr	r1, [pc, #60]	; 13d6c <abort@plt+0x2bac>
   13d2c:	bl	10f2c <strcmp@plt>
   13d30:	subs	r7, r0, #0
   13d34:	bne	13d14 <abort@plt+0x2b54>
   13d38:	mov	r0, r6
   13d3c:	bl	11178 <freecon@plt>
   13d40:	str	r7, [r5]
   13d44:	bl	110dc <__errno_location@plt>
   13d48:	mov	r3, #61	; 0x3d
   13d4c:	mvn	r4, #0
   13d50:	str	r3, [r0]
   13d54:	b	13d14 <abort@plt+0x2b54>
   13d58:	bl	110dc <__errno_location@plt>
   13d5c:	mov	r3, #95	; 0x5f
   13d60:	mvn	r4, #0
   13d64:	str	r3, [r0]
   13d68:	b	13d14 <abort@plt+0x2b54>
   13d6c:	andeq	r5, r1, r0, ror #21
   13d70:	push	{r4, lr}
   13d74:	mov	r4, r1
   13d78:	bl	110c4 <getfilecon@plt>
   13d7c:	mov	r1, r4
   13d80:	pop	{r4, lr}
   13d84:	b	13d00 <abort@plt+0x2b40>
   13d88:	push	{r4, lr}
   13d8c:	mov	r4, r1
   13d90:	bl	11058 <lgetfilecon@plt>
   13d94:	mov	r1, r4
   13d98:	pop	{r4, lr}
   13d9c:	b	13d00 <abort@plt+0x2b40>
   13da0:	push	{r4, lr}
   13da4:	mov	r4, r1
   13da8:	bl	10fd4 <fgetfilecon@plt>
   13dac:	mov	r1, r4
   13db0:	pop	{r4, lr}
   13db4:	b	13d00 <abort@plt+0x2b40>
   13db8:	push	{r4, r5, r6, lr}
   13dbc:	sub	sp, sp, #32
   13dc0:	cmp	r1, #0
   13dc4:	mov	r4, r0
   13dc8:	ldr	r5, [sp, #48]	; 0x30
   13dcc:	ldr	r6, [sp, #52]	; 0x34
   13dd0:	beq	140e8 <abort@plt+0x2f28>
   13dd4:	stm	sp, {r2, r3}
   13dd8:	mov	r3, r1
   13ddc:	ldr	r2, [pc, #808]	; 1410c <abort@plt+0x2f4c>
   13de0:	mov	r1, #1
   13de4:	bl	11118 <__fprintf_chk@plt>
   13de8:	mov	r2, #5
   13dec:	ldr	r1, [pc, #796]	; 14110 <abort@plt+0x2f50>
   13df0:	mov	r0, #0
   13df4:	bl	10fb0 <dcgettext@plt>
   13df8:	ldr	r3, [pc, #788]	; 14114 <abort@plt+0x2f54>
   13dfc:	ldr	r2, [pc, #788]	; 14118 <abort@plt+0x2f58>
   13e00:	str	r3, [sp]
   13e04:	mov	r1, #1
   13e08:	mov	r3, r0
   13e0c:	mov	r0, r4
   13e10:	bl	11118 <__fprintf_chk@plt>
   13e14:	mov	r1, r4
   13e18:	mov	r0, #10
   13e1c:	bl	10f98 <fputc_unlocked@plt>
   13e20:	mov	r2, #5
   13e24:	ldr	r1, [pc, #752]	; 1411c <abort@plt+0x2f5c>
   13e28:	mov	r0, #0
   13e2c:	bl	10fb0 <dcgettext@plt>
   13e30:	mov	r1, #1
   13e34:	ldr	r3, [pc, #740]	; 14120 <abort@plt+0x2f60>
   13e38:	mov	r2, r0
   13e3c:	mov	r0, r4
   13e40:	bl	11118 <__fprintf_chk@plt>
   13e44:	mov	r1, r4
   13e48:	mov	r0, #10
   13e4c:	bl	10f98 <fputc_unlocked@plt>
   13e50:	cmp	r6, #9
   13e54:	ldrls	pc, [pc, r6, lsl #2]
   13e58:	b	14100 <abort@plt+0x2f40>
   13e5c:	andeq	r3, r1, r0, ror #29
   13e60:	andeq	r3, r1, r8, ror #29
   13e64:	andeq	r3, r1, r4, lsl pc
   13e68:	andeq	r3, r1, r8, asr #30
   13e6c:	andeq	r3, r1, r4, lsl #31
   13e70:	andeq	r3, r1, r0, asr #31
   13e74:	strdeq	r3, [r1], -ip
   13e78:	andeq	r4, r1, r0, asr #32
   13e7c:	muleq	r1, r0, r0
   13e80:	andeq	r3, r1, r4, lsl #29
   13e84:	ldr	r1, [pc, #664]	; 14124 <abort@plt+0x2f64>
   13e88:	mov	r2, #5
   13e8c:	mov	r0, #0
   13e90:	bl	10fb0 <dcgettext@plt>
   13e94:	ldr	ip, [r5, #32]
   13e98:	ldr	r1, [r5, #28]
   13e9c:	ldr	r2, [r5, #24]
   13ea0:	ldr	r3, [r5]
   13ea4:	ldr	r6, [r5, #20]
   13ea8:	str	ip, [sp, #28]
   13eac:	ldr	lr, [r5, #16]
   13eb0:	str	r1, [sp, #24]
   13eb4:	ldr	ip, [r5, #12]
   13eb8:	str	r2, [sp, #20]
   13ebc:	ldr	r1, [r5, #8]
   13ec0:	ldr	r2, [r5, #4]
   13ec4:	str	r6, [sp, #16]
   13ec8:	stmib	sp, {r1, ip, lr}
   13ecc:	mov	r1, #1
   13ed0:	str	r2, [sp]
   13ed4:	mov	r2, r0
   13ed8:	mov	r0, r4
   13edc:	bl	11118 <__fprintf_chk@plt>
   13ee0:	add	sp, sp, #32
   13ee4:	pop	{r4, r5, r6, pc}
   13ee8:	mov	r2, #5
   13eec:	ldr	r1, [pc, #564]	; 14128 <abort@plt+0x2f68>
   13ef0:	mov	r0, #0
   13ef4:	bl	10fb0 <dcgettext@plt>
   13ef8:	ldr	r3, [r5]
   13efc:	mov	r1, #1
   13f00:	mov	r2, r0
   13f04:	mov	r0, r4
   13f08:	add	sp, sp, #32
   13f0c:	pop	{r4, r5, r6, lr}
   13f10:	b	11118 <__fprintf_chk@plt>
   13f14:	mov	r2, #5
   13f18:	ldr	r1, [pc, #524]	; 1412c <abort@plt+0x2f6c>
   13f1c:	mov	r0, #0
   13f20:	bl	10fb0 <dcgettext@plt>
   13f24:	ldr	r2, [r5, #4]
   13f28:	ldr	r3, [r5]
   13f2c:	mov	r1, #1
   13f30:	str	r2, [sp, #48]	; 0x30
   13f34:	mov	r2, r0
   13f38:	mov	r0, r4
   13f3c:	add	sp, sp, #32
   13f40:	pop	{r4, r5, r6, lr}
   13f44:	b	11118 <__fprintf_chk@plt>
   13f48:	mov	r2, #5
   13f4c:	ldr	r1, [pc, #476]	; 14130 <abort@plt+0x2f70>
   13f50:	mov	r0, #0
   13f54:	bl	10fb0 <dcgettext@plt>
   13f58:	ldr	r1, [r5, #8]
   13f5c:	ldr	r2, [r5, #4]
   13f60:	ldr	r3, [r5]
   13f64:	str	r1, [sp, #52]	; 0x34
   13f68:	str	r2, [sp, #48]	; 0x30
   13f6c:	mov	r1, #1
   13f70:	mov	r2, r0
   13f74:	mov	r0, r4
   13f78:	add	sp, sp, #32
   13f7c:	pop	{r4, r5, r6, lr}
   13f80:	b	11118 <__fprintf_chk@plt>
   13f84:	mov	r2, #5
   13f88:	ldr	r1, [pc, #420]	; 14134 <abort@plt+0x2f74>
   13f8c:	mov	r0, #0
   13f90:	bl	10fb0 <dcgettext@plt>
   13f94:	ldr	r1, [r5, #8]
   13f98:	ldr	ip, [r5, #12]
   13f9c:	ldr	r2, [r5, #4]
   13fa0:	ldr	r3, [r5]
   13fa4:	stmib	sp, {r1, ip}
   13fa8:	str	r2, [sp]
   13fac:	mov	r1, #1
   13fb0:	mov	r2, r0
   13fb4:	mov	r0, r4
   13fb8:	bl	11118 <__fprintf_chk@plt>
   13fbc:	b	13ee0 <abort@plt+0x2d20>
   13fc0:	mov	r2, #5
   13fc4:	ldr	r1, [pc, #364]	; 14138 <abort@plt+0x2f78>
   13fc8:	mov	r0, #0
   13fcc:	bl	10fb0 <dcgettext@plt>
   13fd0:	add	r1, r5, #8
   13fd4:	ldr	r2, [r5, #4]
   13fd8:	ldm	r1, {r1, ip, lr}
   13fdc:	ldr	r3, [r5]
   13fe0:	str	r2, [sp]
   13fe4:	stmib	sp, {r1, ip, lr}
   13fe8:	mov	r1, #1
   13fec:	mov	r2, r0
   13ff0:	mov	r0, r4
   13ff4:	bl	11118 <__fprintf_chk@plt>
   13ff8:	b	13ee0 <abort@plt+0x2d20>
   13ffc:	mov	r2, #5
   14000:	ldr	r1, [pc, #308]	; 1413c <abort@plt+0x2f7c>
   14004:	mov	r0, #0
   14008:	bl	10fb0 <dcgettext@plt>
   1400c:	add	r1, r5, #8
   14010:	ldr	r2, [r5, #4]
   14014:	ldm	r1, {r1, ip, lr}
   14018:	ldr	r6, [r5, #20]
   1401c:	ldr	r3, [r5]
   14020:	stmib	sp, {r1, ip, lr}
   14024:	mov	r1, #1
   14028:	str	r2, [sp]
   1402c:	str	r6, [sp, #16]
   14030:	mov	r2, r0
   14034:	mov	r0, r4
   14038:	bl	11118 <__fprintf_chk@plt>
   1403c:	b	13ee0 <abort@plt+0x2d20>
   14040:	mov	r2, #5
   14044:	ldr	r1, [pc, #244]	; 14140 <abort@plt+0x2f80>
   14048:	mov	r0, #0
   1404c:	bl	10fb0 <dcgettext@plt>
   14050:	ldr	r2, [r5, #24]
   14054:	ldr	r3, [r5]
   14058:	ldr	r6, [r5, #20]
   1405c:	ldr	lr, [r5, #16]
   14060:	ldr	ip, [r5, #12]
   14064:	str	r2, [sp, #20]
   14068:	ldr	r1, [r5, #8]
   1406c:	ldr	r2, [r5, #4]
   14070:	str	r6, [sp, #16]
   14074:	stmib	sp, {r1, ip, lr}
   14078:	mov	r1, #1
   1407c:	str	r2, [sp]
   14080:	mov	r2, r0
   14084:	mov	r0, r4
   14088:	bl	11118 <__fprintf_chk@plt>
   1408c:	b	13ee0 <abort@plt+0x2d20>
   14090:	mov	r2, #5
   14094:	ldr	r1, [pc, #168]	; 14144 <abort@plt+0x2f84>
   14098:	mov	r0, #0
   1409c:	bl	10fb0 <dcgettext@plt>
   140a0:	ldr	r1, [r5, #28]
   140a4:	ldr	r2, [r5, #24]
   140a8:	ldr	r3, [r5]
   140ac:	ldr	r6, [r5, #20]
   140b0:	ldr	lr, [r5, #16]
   140b4:	str	r1, [sp, #24]
   140b8:	ldr	ip, [r5, #12]
   140bc:	str	r2, [sp, #20]
   140c0:	ldr	r1, [r5, #8]
   140c4:	ldr	r2, [r5, #4]
   140c8:	str	r6, [sp, #16]
   140cc:	stmib	sp, {r1, ip, lr}
   140d0:	mov	r1, #1
   140d4:	str	r2, [sp]
   140d8:	mov	r2, r0
   140dc:	mov	r0, r4
   140e0:	bl	11118 <__fprintf_chk@plt>
   140e4:	b	13ee0 <abort@plt+0x2d20>
   140e8:	str	r3, [sp]
   140ec:	mov	r1, #1
   140f0:	mov	r3, r2
   140f4:	ldr	r2, [pc, #76]	; 14148 <abort@plt+0x2f88>
   140f8:	bl	11118 <__fprintf_chk@plt>
   140fc:	b	13de8 <abort@plt+0x2c28>
   14100:	mov	r2, #5
   14104:	ldr	r1, [pc, #64]	; 1414c <abort@plt+0x2f8c>
   14108:	b	13e8c <abort@plt+0x2ccc>
   1410c:	andeq	r5, r1, ip, ror #21
   14110:	andeq	r5, r1, r0, lsl #22
   14114:	andeq	r0, r0, r6, ror #15
   14118:	ldrdeq	r5, [r1], -r8
   1411c:	andeq	r5, r1, r4, lsl #22
   14120:			; <UNDEFINED> instruction: 0x00015bb0
   14124:	andeq	r5, r1, r0, ror #25
   14128:	ldrdeq	r5, [r1], -r4
   1412c:	andeq	r5, r1, r4, ror #23
   14130:	strdeq	r5, [r1], -ip
   14134:	andeq	r5, r1, r8, lsl ip
   14138:	andeq	r5, r1, r8, lsr ip
   1413c:	andeq	r5, r1, ip, asr ip
   14140:	andeq	r5, r1, r4, lsl #25
   14144:			; <UNDEFINED> instruction: 0x00015cb0
   14148:	strdeq	r5, [r1], -r8
   1414c:	andeq	r5, r1, r4, lsl sp
   14150:	push	{r4, r5, lr}
   14154:	sub	sp, sp, #12
   14158:	ldr	r5, [sp, #24]
   1415c:	ldr	ip, [r5]
   14160:	cmp	ip, #0
   14164:	beq	14180 <abort@plt+0x2fc0>
   14168:	mov	lr, r5
   1416c:	mov	ip, #0
   14170:	ldr	r4, [lr, #4]!
   14174:	add	ip, ip, #1
   14178:	cmp	r4, #0
   1417c:	bne	14170 <abort@plt+0x2fb0>
   14180:	stm	sp, {r5, ip}
   14184:	bl	13db8 <abort@plt+0x2bf8>
   14188:	add	sp, sp, #12
   1418c:	pop	{r4, r5, pc}
   14190:	push	{r4, r5, lr}
   14194:	sub	sp, sp, #52	; 0x34
   14198:	add	r5, sp, #4
   1419c:	ldr	r4, [sp, #64]	; 0x40
   141a0:	mov	ip, #0
   141a4:	sub	r4, r4, #4
   141a8:	ldr	lr, [r4, #4]!
   141ac:	cmp	lr, #0
   141b0:	str	lr, [r5, #4]!
   141b4:	beq	141c4 <abort@plt+0x3004>
   141b8:	add	ip, ip, #1
   141bc:	cmp	ip, #10
   141c0:	bne	141a8 <abort@plt+0x2fe8>
   141c4:	add	lr, sp, #8
   141c8:	str	ip, [sp, #4]
   141cc:	str	lr, [sp]
   141d0:	bl	13db8 <abort@plt+0x2bf8>
   141d4:	add	sp, sp, #52	; 0x34
   141d8:	pop	{r4, r5, pc}
   141dc:	push	{r3}		; (str r3, [sp, #-4]!)
   141e0:	push	{r4, lr}
   141e4:	sub	sp, sp, #60	; 0x3c
   141e8:	add	lr, sp, #56	; 0x38
   141ec:	add	r3, sp, #72	; 0x48
   141f0:	str	r3, [lr, #-44]!	; 0xffffffd4
   141f4:	add	r4, sp, #68	; 0x44
   141f8:	mov	r3, #0
   141fc:	ldr	ip, [r4, #4]!
   14200:	cmp	ip, #0
   14204:	str	ip, [lr, #4]!
   14208:	beq	14218 <abort@plt+0x3058>
   1420c:	add	r3, r3, #1
   14210:	cmp	r3, #10
   14214:	bne	141fc <abort@plt+0x303c>
   14218:	add	ip, sp, #16
   1421c:	str	r3, [sp, #4]
   14220:	str	ip, [sp]
   14224:	ldr	r3, [sp, #68]	; 0x44
   14228:	bl	13db8 <abort@plt+0x2bf8>
   1422c:	add	sp, sp, #60	; 0x3c
   14230:	pop	{r4, lr}
   14234:	add	sp, sp, #4
   14238:	bx	lr
   1423c:	ldr	r3, [pc, #116]	; 142b8 <abort@plt+0x30f8>
   14240:	push	{r4, lr}
   14244:	mov	r0, #10
   14248:	ldr	r1, [r3]
   1424c:	bl	10f98 <fputc_unlocked@plt>
   14250:	mov	r2, #5
   14254:	ldr	r1, [pc, #96]	; 142bc <abort@plt+0x30fc>
   14258:	mov	r0, #0
   1425c:	bl	10fb0 <dcgettext@plt>
   14260:	ldr	r2, [pc, #88]	; 142c0 <abort@plt+0x3100>
   14264:	mov	r1, r0
   14268:	mov	r0, #1
   1426c:	bl	11100 <__printf_chk@plt>
   14270:	mov	r2, #5
   14274:	ldr	r1, [pc, #72]	; 142c4 <abort@plt+0x3104>
   14278:	mov	r0, #0
   1427c:	bl	10fb0 <dcgettext@plt>
   14280:	ldr	r3, [pc, #64]	; 142c8 <abort@plt+0x3108>
   14284:	ldr	r2, [pc, #64]	; 142cc <abort@plt+0x310c>
   14288:	mov	r1, r0
   1428c:	mov	r0, #1
   14290:	bl	11100 <__printf_chk@plt>
   14294:	mov	r2, #5
   14298:	ldr	r1, [pc, #48]	; 142d0 <abort@plt+0x3110>
   1429c:	mov	r0, #0
   142a0:	bl	10fb0 <dcgettext@plt>
   142a4:	ldr	r2, [pc, #40]	; 142d4 <abort@plt+0x3114>
   142a8:	pop	{r4, lr}
   142ac:	mov	r1, r0
   142b0:	mov	r0, #1
   142b4:	b	11100 <__printf_chk@plt>
   142b8:	andeq	r6, r2, ip, ror #2
   142bc:	andeq	r5, r1, r0, asr sp
   142c0:	andeq	r5, r1, r4, ror #26
   142c4:	andeq	r5, r1, ip, ror sp
   142c8:	strdeq	r5, [r1], -ip
   142cc:	andeq	r5, r1, r4, lsr #12
   142d0:	muleq	r1, r0, sp
   142d4:			; <UNDEFINED> instruction: 0x00015db8
   142d8:	push	{r4, lr}
   142dc:	bl	148a8 <abort@plt+0x36e8>
   142e0:	cmp	r0, #0
   142e4:	popne	{r4, pc}
   142e8:	bl	14820 <abort@plt+0x3660>
   142ec:	push	{r4, lr}
   142f0:	bl	148a8 <abort@plt+0x36e8>
   142f4:	cmp	r0, #0
   142f8:	popne	{r4, pc}
   142fc:	bl	14820 <abort@plt+0x3660>
   14300:	push	{r4, lr}
   14304:	bl	148a8 <abort@plt+0x36e8>
   14308:	cmp	r0, #0
   1430c:	popne	{r4, pc}
   14310:	bl	14820 <abort@plt+0x3660>
   14314:	push	{r4, r5, r6, lr}
   14318:	mov	r5, r0
   1431c:	mov	r4, r1
   14320:	bl	148d4 <abort@plt+0x3714>
   14324:	cmp	r0, #0
   14328:	popne	{r4, r5, r6, pc}
   1432c:	adds	r4, r4, #0
   14330:	movne	r4, #1
   14334:	cmp	r5, #0
   14338:	orreq	r4, r4, #1
   1433c:	cmp	r4, #0
   14340:	popeq	{r4, r5, r6, pc}
   14344:	bl	14820 <abort@plt+0x3660>
   14348:	push	{r4, lr}
   1434c:	cmp	r1, #0
   14350:	orreq	r1, r1, #1
   14354:	bl	148d4 <abort@plt+0x3714>
   14358:	cmp	r0, #0
   1435c:	popne	{r4, pc}
   14360:	bl	14820 <abort@plt+0x3660>
   14364:	push	{r4, r5, r6, lr}
   14368:	mov	r6, r0
   1436c:	mov	r5, r1
   14370:	mov	r4, r2
   14374:	bl	14c2c <abort@plt+0x3a6c>
   14378:	cmp	r0, #0
   1437c:	popne	{r4, r5, r6, pc}
   14380:	cmp	r6, #0
   14384:	beq	14394 <abort@plt+0x31d4>
   14388:	cmp	r5, #0
   1438c:	cmpne	r4, #0
   14390:	popeq	{r4, r5, r6, pc}
   14394:	bl	14820 <abort@plt+0x3660>
   14398:	b	14364 <abort@plt+0x31a4>
   1439c:	cmp	r2, #0
   143a0:	cmpne	r1, #0
   143a4:	moveq	r2, #1
   143a8:	moveq	r1, r2
   143ac:	push	{r4, lr}
   143b0:	bl	14c2c <abort@plt+0x3a6c>
   143b4:	cmp	r0, #0
   143b8:	popne	{r4, pc}
   143bc:	bl	14820 <abort@plt+0x3660>
   143c0:	mov	r2, r1
   143c4:	mov	r1, r0
   143c8:	mov	r0, #0
   143cc:	b	14364 <abort@plt+0x31a4>
   143d0:	mov	r2, r1
   143d4:	mov	r1, r0
   143d8:	mov	r0, #0
   143dc:	b	1439c <abort@plt+0x31dc>
   143e0:	push	{r4, r5, r6, lr}
   143e4:	subs	r6, r0, #0
   143e8:	sub	sp, sp, #8
   143ec:	mov	r5, r1
   143f0:	ldr	r4, [r1]
   143f4:	beq	14430 <abort@plt+0x3270>
   143f8:	lsr	r1, r4, #1
   143fc:	add	r3, r1, #1
   14400:	mvn	r3, r3
   14404:	cmp	r4, r3
   14408:	bhi	1442c <abort@plt+0x326c>
   1440c:	add	r4, r4, #1
   14410:	add	r4, r4, r1
   14414:	mov	r0, r6
   14418:	mov	r1, r4
   1441c:	bl	14364 <abort@plt+0x31a4>
   14420:	str	r4, [r5]
   14424:	add	sp, sp, #8
   14428:	pop	{r4, r5, r6, pc}
   1442c:	bl	14820 <abort@plt+0x3660>
   14430:	cmp	r4, #0
   14434:	bne	14414 <abort@plt+0x3254>
   14438:	mov	r1, r2
   1443c:	mov	r0, #64	; 0x40
   14440:	str	r2, [sp, #4]
   14444:	bl	14d6c <abort@plt+0x3bac>
   14448:	ldr	r2, [sp, #4]
   1444c:	cmp	r0, #0
   14450:	movne	r4, r0
   14454:	addeq	r4, r0, #1
   14458:	b	14414 <abort@plt+0x3254>
   1445c:	mov	r2, #1
   14460:	b	143e0 <abort@plt+0x3220>
   14464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14468:	sub	sp, sp, #12
   1446c:	ldr	r6, [r1]
   14470:	mov	sl, r1
   14474:	mov	r9, r0
   14478:	asrs	r4, r6, #1
   1447c:	mov	r5, r2
   14480:	mov	fp, r3
   14484:	ldr	r7, [sp, #48]	; 0x30
   14488:	bmi	145f4 <abort@plt+0x3434>
   1448c:	mvn	r3, #-2147483648	; 0x80000000
   14490:	sub	r3, r3, r4
   14494:	cmp	r6, r3
   14498:	movle	r3, #0
   1449c:	movgt	r3, #1
   144a0:	mvn	r8, fp
   144a4:	cmp	r3, #0
   144a8:	addeq	r4, r4, r6
   144ac:	mvnne	r4, #-2147483648	; 0x80000000
   144b0:	lsr	r8, r8, #31
   144b4:	cmp	fp, r4
   144b8:	movge	r3, #0
   144bc:	andlt	r3, r8, #1
   144c0:	cmp	r3, #0
   144c4:	beq	145ac <abort@plt+0x33ec>
   144c8:	cmp	r7, #0
   144cc:	blt	1467c <abort@plt+0x34bc>
   144d0:	bne	14674 <abort@plt+0x34b4>
   144d4:	mov	r2, #64	; 0x40
   144d8:	mov	r1, r7
   144dc:	mov	r0, r2
   144e0:	str	r2, [sp, #4]
   144e4:	bl	14f78 <abort@plt+0x3db8>
   144e8:	ldr	r2, [sp, #4]
   144ec:	mov	r1, r7
   144f0:	mov	r4, r0
   144f4:	mov	r0, r2
   144f8:	bl	15198 <abort@plt+0x3fd8>
   144fc:	ldr	r2, [sp, #4]
   14500:	sub	r1, r2, r1
   14504:	cmp	r9, #0
   14508:	sub	r3, r4, r6
   1450c:	streq	r9, [sl]
   14510:	cmp	r3, r5
   14514:	bge	14598 <abort@plt+0x33d8>
   14518:	cmp	r5, #0
   1451c:	blt	14608 <abort@plt+0x3448>
   14520:	cmp	r6, #0
   14524:	blt	14544 <abort@plt+0x3384>
   14528:	mvn	r3, #-2147483648	; 0x80000000
   1452c:	sub	r3, r3, r5
   14530:	cmp	r6, r3
   14534:	movle	r3, #0
   14538:	movgt	r3, #1
   1453c:	cmp	r3, #0
   14540:	bne	14704 <abort@plt+0x3544>
   14544:	add	r5, r6, r5
   14548:	cmp	fp, r5
   1454c:	movge	r8, #0
   14550:	andlt	r8, r8, #1
   14554:	cmp	r8, #0
   14558:	mov	r4, r5
   1455c:	bne	14704 <abort@plt+0x3544>
   14560:	cmp	r7, #0
   14564:	blt	1461c <abort@plt+0x345c>
   14568:	beq	14594 <abort@plt+0x33d4>
   1456c:	cmp	r5, #0
   14570:	blt	146c4 <abort@plt+0x3504>
   14574:	mov	r1, r7
   14578:	mvn	r0, #-2147483648	; 0x80000000
   1457c:	bl	14f78 <abort@plt+0x3db8>
   14580:	cmp	r5, r0
   14584:	movle	r0, #0
   14588:	movgt	r0, #1
   1458c:	cmp	r0, #0
   14590:	bne	14704 <abort@plt+0x3544>
   14594:	mul	r1, r5, r7
   14598:	mov	r0, r9
   1459c:	bl	14314 <abort@plt+0x3154>
   145a0:	str	r4, [sl]
   145a4:	add	sp, sp, #12
   145a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145ac:	cmp	r7, #0
   145b0:	blt	14648 <abort@plt+0x3488>
   145b4:	beq	144d4 <abort@plt+0x3314>
   145b8:	cmp	r4, #0
   145bc:	blt	14684 <abort@plt+0x34c4>
   145c0:	mov	r1, r7
   145c4:	mvn	r0, #-2147483648	; 0x80000000
   145c8:	bl	14f78 <abort@plt+0x3db8>
   145cc:	cmp	r0, r4
   145d0:	movge	r0, #0
   145d4:	movlt	r0, #1
   145d8:	cmp	r0, #0
   145dc:	mvnne	r2, #-2147483648	; 0x80000000
   145e0:	bne	144d8 <abort@plt+0x3318>
   145e4:	mul	r1, r7, r4
   145e8:	cmp	r1, #63	; 0x3f
   145ec:	bgt	14504 <abort@plt+0x3344>
   145f0:	b	144d4 <abort@plt+0x3314>
   145f4:	rsb	r3, r4, #-2147483648	; 0x80000000
   145f8:	cmp	r6, r3
   145fc:	movge	r3, #0
   14600:	movlt	r3, #1
   14604:	b	144a0 <abort@plt+0x32e0>
   14608:	rsb	r3, r5, #-2147483648	; 0x80000000
   1460c:	cmp	r6, r3
   14610:	movge	r3, #0
   14614:	movlt	r3, #1
   14618:	b	1453c <abort@plt+0x337c>
   1461c:	cmp	r5, #0
   14620:	blt	146a8 <abort@plt+0x34e8>
   14624:	cmn	r7, #1
   14628:	beq	14594 <abort@plt+0x33d4>
   1462c:	mov	r1, r7
   14630:	mov	r0, #-2147483648	; 0x80000000
   14634:	bl	14f78 <abort@plt+0x3db8>
   14638:	cmp	r5, r0
   1463c:	movle	r0, #0
   14640:	movgt	r0, #1
   14644:	b	1458c <abort@plt+0x33cc>
   14648:	cmp	r4, #0
   1464c:	blt	146e8 <abort@plt+0x3528>
   14650:	cmn	r7, #1
   14654:	beq	145e4 <abort@plt+0x3424>
   14658:	mov	r1, r7
   1465c:	mov	r0, #-2147483648	; 0x80000000
   14660:	bl	14f78 <abort@plt+0x3db8>
   14664:	cmp	r0, r4
   14668:	movge	r0, #0
   1466c:	movlt	r0, #1
   14670:	b	145d8 <abort@plt+0x3418>
   14674:	mov	r4, fp
   14678:	b	145c0 <abort@plt+0x3400>
   1467c:	mov	r4, fp
   14680:	b	14650 <abort@plt+0x3490>
   14684:	cmn	r4, #1
   14688:	beq	145e4 <abort@plt+0x3424>
   1468c:	mov	r1, r4
   14690:	mov	r0, #-2147483648	; 0x80000000
   14694:	bl	14f78 <abort@plt+0x3db8>
   14698:	cmp	r7, r0
   1469c:	movle	r0, #0
   146a0:	movgt	r0, #1
   146a4:	b	145d8 <abort@plt+0x3418>
   146a8:	mov	r1, r7
   146ac:	mvn	r0, #-2147483648	; 0x80000000
   146b0:	bl	14f78 <abort@plt+0x3db8>
   146b4:	cmp	r5, r0
   146b8:	movge	r0, #0
   146bc:	movlt	r0, #1
   146c0:	b	1458c <abort@plt+0x33cc>
   146c4:	cmn	r5, #1
   146c8:	beq	14594 <abort@plt+0x33d4>
   146cc:	mov	r1, r5
   146d0:	mov	r0, #-2147483648	; 0x80000000
   146d4:	bl	14f78 <abort@plt+0x3db8>
   146d8:	cmp	r7, r0
   146dc:	movle	r0, #0
   146e0:	movgt	r0, #1
   146e4:	b	1458c <abort@plt+0x33cc>
   146e8:	mov	r1, r7
   146ec:	mvn	r0, #-2147483648	; 0x80000000
   146f0:	bl	14f78 <abort@plt+0x3db8>
   146f4:	cmp	r0, r4
   146f8:	movle	r0, #0
   146fc:	movgt	r0, #1
   14700:	b	145d8 <abort@plt+0x3418>
   14704:	bl	14820 <abort@plt+0x3660>
   14708:	push	{r4, lr}
   1470c:	mov	r1, #1
   14710:	bl	14860 <abort@plt+0x36a0>
   14714:	cmp	r0, #0
   14718:	popne	{r4, pc}
   1471c:	bl	14820 <abort@plt+0x3660>
   14720:	push	{r4, lr}
   14724:	mov	r1, #1
   14728:	bl	14860 <abort@plt+0x36a0>
   1472c:	cmp	r0, #0
   14730:	popne	{r4, pc}
   14734:	bl	14820 <abort@plt+0x3660>
   14738:	push	{r4, lr}
   1473c:	bl	14860 <abort@plt+0x36a0>
   14740:	cmp	r0, #0
   14744:	popne	{r4, pc}
   14748:	bl	14820 <abort@plt+0x3660>
   1474c:	push	{r4, lr}
   14750:	bl	14860 <abort@plt+0x36a0>
   14754:	cmp	r0, #0
   14758:	popne	{r4, pc}
   1475c:	bl	14820 <abort@plt+0x3660>
   14760:	push	{r4, r5, r6, lr}
   14764:	mov	r6, r0
   14768:	mov	r0, r1
   1476c:	mov	r4, r1
   14770:	bl	148a8 <abort@plt+0x36e8>
   14774:	subs	r5, r0, #0
   14778:	beq	14790 <abort@plt+0x35d0>
   1477c:	mov	r2, r4
   14780:	mov	r1, r6
   14784:	bl	10f5c <memcpy@plt>
   14788:	mov	r0, r5
   1478c:	pop	{r4, r5, r6, pc}
   14790:	bl	14820 <abort@plt+0x3660>
   14794:	push	{r4, r5, r6, lr}
   14798:	mov	r6, r0
   1479c:	mov	r0, r1
   147a0:	mov	r4, r1
   147a4:	bl	148a8 <abort@plt+0x36e8>
   147a8:	subs	r5, r0, #0
   147ac:	beq	147c4 <abort@plt+0x3604>
   147b0:	mov	r2, r4
   147b4:	mov	r1, r6
   147b8:	bl	10f5c <memcpy@plt>
   147bc:	mov	r0, r5
   147c0:	pop	{r4, r5, r6, pc}
   147c4:	bl	14820 <abort@plt+0x3660>
   147c8:	push	{r4, r5, r6, lr}
   147cc:	mov	r6, r0
   147d0:	add	r0, r1, #1
   147d4:	mov	r4, r1
   147d8:	bl	148a8 <abort@plt+0x36e8>
   147dc:	subs	r5, r0, #0
   147e0:	beq	14800 <abort@plt+0x3640>
   147e4:	mov	r3, #0
   147e8:	mov	r1, r6
   147ec:	strb	r3, [r5, r4]
   147f0:	mov	r2, r4
   147f4:	bl	10f5c <memcpy@plt>
   147f8:	mov	r0, r5
   147fc:	pop	{r4, r5, r6, pc}
   14800:	bl	14820 <abort@plt+0x3660>
   14804:	push	{r4, lr}
   14808:	mov	r4, r0
   1480c:	bl	110d0 <strlen@plt>
   14810:	add	r1, r0, #1
   14814:	mov	r0, r4
   14818:	pop	{r4, lr}
   1481c:	b	14760 <abort@plt+0x35a0>
   14820:	ldr	r3, [pc, #44]	; 14854 <abort@plt+0x3694>
   14824:	push	{r4, lr}
   14828:	mov	r2, #5
   1482c:	ldr	r1, [pc, #36]	; 14858 <abort@plt+0x3698>
   14830:	mov	r0, #0
   14834:	ldr	r4, [r3]
   14838:	bl	10fb0 <dcgettext@plt>
   1483c:	ldr	r2, [pc, #24]	; 1485c <abort@plt+0x369c>
   14840:	mov	r1, #0
   14844:	mov	r3, r0
   14848:	mov	r0, r4
   1484c:	bl	11040 <error@plt>
   14850:	bl	111c0 <abort@plt>
   14854:	andeq	r6, r2, r0, lsl r1
   14858:	andeq	r5, r1, r8, lsl #28
   1485c:	andeq	r5, r1, r0, asr #17
   14860:	cmp	r1, #0
   14864:	cmpne	r0, #0
   14868:	moveq	r1, #1
   1486c:	moveq	r0, r1
   14870:	umull	r2, r3, r0, r1
   14874:	adds	r3, r3, #0
   14878:	movne	r3, #1
   1487c:	cmp	r2, #0
   14880:	blt	14890 <abort@plt+0x36d0>
   14884:	cmp	r3, #0
   14888:	bne	14890 <abort@plt+0x36d0>
   1488c:	b	10ef0 <calloc@plt>
   14890:	push	{r4, lr}
   14894:	bl	110dc <__errno_location@plt>
   14898:	mov	r3, #12
   1489c:	str	r3, [r0]
   148a0:	mov	r0, #0
   148a4:	pop	{r4, pc}
   148a8:	cmp	r0, #0
   148ac:	moveq	r0, #1
   148b0:	cmp	r0, #0
   148b4:	blt	148bc <abort@plt+0x36fc>
   148b8:	b	11064 <malloc@plt>
   148bc:	push	{r4, lr}
   148c0:	bl	110dc <__errno_location@plt>
   148c4:	mov	r3, #12
   148c8:	str	r3, [r0]
   148cc:	mov	r0, #0
   148d0:	pop	{r4, pc}
   148d4:	cmp	r0, #0
   148d8:	beq	148fc <abort@plt+0x373c>
   148dc:	cmp	r1, #0
   148e0:	push	{lr}		; (str lr, [sp, #-4]!)
   148e4:	sub	sp, sp, #12
   148e8:	beq	14904 <abort@plt+0x3744>
   148ec:	blt	1491c <abort@plt+0x375c>
   148f0:	add	sp, sp, #12
   148f4:	pop	{lr}		; (ldr lr, [sp], #4)
   148f8:	b	10fc8 <realloc@plt>
   148fc:	mov	r0, r1
   14900:	b	148a8 <abort@plt+0x36e8>
   14904:	str	r1, [sp, #4]
   14908:	bl	14aac <abort@plt+0x38ec>
   1490c:	ldr	r3, [sp, #4]
   14910:	mov	r0, r3
   14914:	add	sp, sp, #12
   14918:	pop	{pc}		; (ldr pc, [sp], #4)
   1491c:	bl	110dc <__errno_location@plt>
   14920:	mov	r2, #12
   14924:	mov	r3, #0
   14928:	str	r2, [r0]
   1492c:	b	14910 <abort@plt+0x3750>
   14930:	push	{r4, r5, r6, lr}
   14934:	mov	r4, r0
   14938:	bl	11028 <__fpending@plt>
   1493c:	ldr	r5, [r4]
   14940:	and	r5, r5, #32
   14944:	mov	r6, r0
   14948:	mov	r0, r4
   1494c:	bl	149ac <abort@plt+0x37ec>
   14950:	cmp	r5, #0
   14954:	mov	r4, r0
   14958:	bne	14978 <abort@plt+0x37b8>
   1495c:	cmp	r0, #0
   14960:	beq	14970 <abort@plt+0x37b0>
   14964:	cmp	r6, #0
   14968:	beq	14994 <abort@plt+0x37d4>
   1496c:	mvn	r4, #0
   14970:	mov	r0, r4
   14974:	pop	{r4, r5, r6, pc}
   14978:	cmp	r0, #0
   1497c:	bne	1496c <abort@plt+0x37ac>
   14980:	bl	110dc <__errno_location@plt>
   14984:	str	r4, [r0]
   14988:	mvn	r4, #0
   1498c:	mov	r0, r4
   14990:	pop	{r4, r5, r6, pc}
   14994:	bl	110dc <__errno_location@plt>
   14998:	ldr	r4, [r0]
   1499c:	subs	r4, r4, #9
   149a0:	mvnne	r4, #0
   149a4:	mov	r0, r4
   149a8:	pop	{r4, r5, r6, pc}
   149ac:	push	{r4, r5, lr}
   149b0:	sub	sp, sp, #12
   149b4:	mov	r4, r0
   149b8:	bl	1110c <fileno@plt>
   149bc:	cmp	r0, #0
   149c0:	mov	r0, r4
   149c4:	blt	14a40 <abort@plt+0x3880>
   149c8:	bl	1107c <__freading@plt>
   149cc:	cmp	r0, #0
   149d0:	bne	14a0c <abort@plt+0x384c>
   149d4:	mov	r0, r4
   149d8:	bl	14a4c <abort@plt+0x388c>
   149dc:	cmp	r0, #0
   149e0:	beq	14a3c <abort@plt+0x387c>
   149e4:	bl	110dc <__errno_location@plt>
   149e8:	mov	r5, r0
   149ec:	mov	r0, r4
   149f0:	ldr	r4, [r5]
   149f4:	bl	11124 <fclose@plt>
   149f8:	cmp	r4, #0
   149fc:	mvnne	r0, #0
   14a00:	strne	r4, [r5]
   14a04:	add	sp, sp, #12
   14a08:	pop	{r4, r5, pc}
   14a0c:	mov	r0, r4
   14a10:	bl	1110c <fileno@plt>
   14a14:	mov	r3, #1
   14a18:	str	r3, [sp]
   14a1c:	mov	r2, #0
   14a20:	mov	r3, #0
   14a24:	bl	11004 <lseek64@plt>
   14a28:	mvn	r3, #0
   14a2c:	mvn	r2, #0
   14a30:	cmp	r1, r3
   14a34:	cmpeq	r0, r2
   14a38:	bne	149d4 <abort@plt+0x3814>
   14a3c:	mov	r0, r4
   14a40:	add	sp, sp, #12
   14a44:	pop	{r4, r5, lr}
   14a48:	b	11124 <fclose@plt>
   14a4c:	push	{r4, lr}
   14a50:	subs	r4, r0, #0
   14a54:	sub	sp, sp, #8
   14a58:	beq	14a74 <abort@plt+0x38b4>
   14a5c:	bl	1107c <__freading@plt>
   14a60:	cmp	r0, #0
   14a64:	beq	14a74 <abort@plt+0x38b4>
   14a68:	ldr	r3, [r4]
   14a6c:	tst	r3, #256	; 0x100
   14a70:	bne	14a84 <abort@plt+0x38c4>
   14a74:	mov	r0, r4
   14a78:	add	sp, sp, #8
   14a7c:	pop	{r4, lr}
   14a80:	b	10f38 <fflush@plt>
   14a84:	mov	r3, #1
   14a88:	str	r3, [sp]
   14a8c:	mov	r2, #0
   14a90:	mov	r3, #0
   14a94:	mov	r0, r4
   14a98:	bl	14b04 <abort@plt+0x3944>
   14a9c:	mov	r0, r4
   14aa0:	add	sp, sp, #8
   14aa4:	pop	{r4, lr}
   14aa8:	b	10f38 <fflush@plt>
   14aac:	push	{r4, r5, lr}
   14ab0:	sub	sp, sp, #12
   14ab4:	mov	r5, r0
   14ab8:	bl	110dc <__errno_location@plt>
   14abc:	mov	r2, #0
   14ac0:	mov	r4, r0
   14ac4:	ldr	r3, [r0]
   14ac8:	str	r2, [r4]
   14acc:	mov	r0, r5
   14ad0:	str	r3, [sp]
   14ad4:	str	r3, [sp, #4]
   14ad8:	bl	10f44 <free@plt>
   14adc:	ldr	r3, [r4]
   14ae0:	add	r2, sp, #8
   14ae4:	cmp	r3, #0
   14ae8:	moveq	r3, #4
   14aec:	movne	r3, #0
   14af0:	add	r3, r2, r3
   14af4:	ldr	r3, [r3, #-8]
   14af8:	str	r3, [r4]
   14afc:	add	sp, sp, #12
   14b00:	pop	{r4, r5, pc}
   14b04:	push	{r4, r5, r6, r7, r8, lr}
   14b08:	sub	sp, sp, #8
   14b0c:	ldmib	r0, {ip, lr}
   14b10:	mov	r4, r0
   14b14:	ldr	r5, [sp, #32]
   14b18:	cmp	lr, ip
   14b1c:	beq	14b34 <abort@plt+0x3974>
   14b20:	str	r5, [sp, #32]
   14b24:	mov	r0, r4
   14b28:	add	sp, sp, #8
   14b2c:	pop	{r4, r5, r6, r7, r8, lr}
   14b30:	b	11130 <fseeko64@plt>
   14b34:	ldr	lr, [r0, #20]
   14b38:	ldr	ip, [r0, #16]
   14b3c:	cmp	lr, ip
   14b40:	bne	14b20 <abort@plt+0x3960>
   14b44:	ldr	r8, [r0, #36]	; 0x24
   14b48:	cmp	r8, #0
   14b4c:	bne	14b20 <abort@plt+0x3960>
   14b50:	mov	r6, r2
   14b54:	mov	r7, r3
   14b58:	bl	1110c <fileno@plt>
   14b5c:	mov	r2, r6
   14b60:	mov	r3, r7
   14b64:	str	r5, [sp]
   14b68:	bl	11004 <lseek64@plt>
   14b6c:	mvn	r3, #0
   14b70:	mvn	r2, #0
   14b74:	cmp	r1, r3
   14b78:	cmpeq	r0, r2
   14b7c:	beq	14b9c <abort@plt+0x39dc>
   14b80:	ldr	r3, [r4]
   14b84:	strd	r0, [r4, #80]	; 0x50
   14b88:	mov	r0, r8
   14b8c:	bic	r3, r3, #16
   14b90:	str	r3, [r4]
   14b94:	add	sp, sp, #8
   14b98:	pop	{r4, r5, r6, r7, r8, pc}
   14b9c:	mvn	r0, #0
   14ba0:	b	14b94 <abort@plt+0x39d4>
   14ba4:	push	{r4, lr}
   14ba8:	mov	r0, #14
   14bac:	bl	11160 <nl_langinfo@plt>
   14bb0:	cmp	r0, #0
   14bb4:	beq	14bcc <abort@plt+0x3a0c>
   14bb8:	ldrb	r2, [r0]
   14bbc:	ldr	r3, [pc, #16]	; 14bd4 <abort@plt+0x3a14>
   14bc0:	cmp	r2, #0
   14bc4:	moveq	r0, r3
   14bc8:	pop	{r4, pc}
   14bcc:	ldr	r0, [pc]	; 14bd4 <abort@plt+0x3a14>
   14bd0:	pop	{r4, pc}
   14bd4:	andeq	r5, r1, ip, lsl lr
   14bd8:	push	{r4, r5, r6, r7, lr}
   14bdc:	subs	r6, r0, #0
   14be0:	sub	sp, sp, #12
   14be4:	addeq	r6, sp, #4
   14be8:	mov	r0, r6
   14bec:	mov	r5, r2
   14bf0:	mov	r7, r1
   14bf4:	bl	11034 <mbrtowc@plt>
   14bf8:	cmp	r5, #0
   14bfc:	cmnne	r0, #3
   14c00:	mov	r4, r0
   14c04:	bls	14c20 <abort@plt+0x3a60>
   14c08:	mov	r0, #0
   14c0c:	bl	14c78 <abort@plt+0x3ab8>
   14c10:	cmp	r0, #0
   14c14:	moveq	r4, #1
   14c18:	ldrbeq	r3, [r7]
   14c1c:	streq	r3, [r6]
   14c20:	mov	r0, r4
   14c24:	add	sp, sp, #12
   14c28:	pop	{r4, r5, r6, r7, pc}
   14c2c:	push	{r4, r5, r6, lr}
   14c30:	subs	r4, r2, #0
   14c34:	mov	r6, r0
   14c38:	mov	r5, r1
   14c3c:	beq	14c68 <abort@plt+0x3aa8>
   14c40:	mov	r1, r4
   14c44:	mvn	r0, #0
   14c48:	bl	14d6c <abort@plt+0x3bac>
   14c4c:	cmp	r0, r5
   14c50:	bcs	14c68 <abort@plt+0x3aa8>
   14c54:	bl	110dc <__errno_location@plt>
   14c58:	mov	r3, #12
   14c5c:	str	r3, [r0]
   14c60:	mov	r0, #0
   14c64:	pop	{r4, r5, r6, pc}
   14c68:	mul	r1, r5, r4
   14c6c:	mov	r0, r6
   14c70:	pop	{r4, r5, r6, lr}
   14c74:	b	148d4 <abort@plt+0x3714>
   14c78:	push	{lr}		; (str lr, [sp, #-4]!)
   14c7c:	sub	sp, sp, #268	; 0x10c
   14c80:	add	r1, sp, #4
   14c84:	ldr	r2, [pc, #60]	; 14cc8 <abort@plt+0x3b08>
   14c88:	bl	14cd4 <abort@plt+0x3b14>
   14c8c:	cmp	r0, #0
   14c90:	movne	r0, #0
   14c94:	bne	14cc0 <abort@plt+0x3b00>
   14c98:	ldr	r1, [pc, #44]	; 14ccc <abort@plt+0x3b0c>
   14c9c:	add	r0, sp, #4
   14ca0:	bl	10f2c <strcmp@plt>
   14ca4:	cmp	r0, #0
   14ca8:	beq	14cc0 <abort@plt+0x3b00>
   14cac:	add	r0, sp, #4
   14cb0:	ldr	r1, [pc, #24]	; 14cd0 <abort@plt+0x3b10>
   14cb4:	bl	10f2c <strcmp@plt>
   14cb8:	adds	r0, r0, #0
   14cbc:	movne	r0, #1
   14cc0:	add	sp, sp, #268	; 0x10c
   14cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   14cc8:	andeq	r0, r0, r1, lsl #2
   14ccc:	andeq	r5, r1, r4, lsr #28
   14cd0:	andeq	r5, r1, r8, lsr #28
   14cd4:	push	{r4, r5, r6, lr}
   14cd8:	mov	r5, r1
   14cdc:	mov	r1, #0
   14ce0:	mov	r4, r2
   14ce4:	bl	11148 <setlocale@plt>
   14ce8:	subs	r6, r0, #0
   14cec:	beq	14d48 <abort@plt+0x3b88>
   14cf0:	bl	110d0 <strlen@plt>
   14cf4:	cmp	r4, r0
   14cf8:	bhi	14d30 <abort@plt+0x3b70>
   14cfc:	cmp	r4, #0
   14d00:	bne	14d0c <abort@plt+0x3b4c>
   14d04:	mov	r0, #34	; 0x22
   14d08:	pop	{r4, r5, r6, pc}
   14d0c:	sub	r4, r4, #1
   14d10:	mov	r1, r6
   14d14:	mov	r2, r4
   14d18:	mov	r0, r5
   14d1c:	bl	10f5c <memcpy@plt>
   14d20:	mov	r3, #0
   14d24:	strb	r3, [r5, r4]
   14d28:	mov	r0, #34	; 0x22
   14d2c:	pop	{r4, r5, r6, pc}
   14d30:	add	r2, r0, #1
   14d34:	mov	r1, r6
   14d38:	mov	r0, r5
   14d3c:	bl	10f5c <memcpy@plt>
   14d40:	mov	r0, #0
   14d44:	pop	{r4, r5, r6, pc}
   14d48:	cmp	r4, #0
   14d4c:	beq	14d5c <abort@plt+0x3b9c>
   14d50:	strb	r6, [r5]
   14d54:	mov	r0, #22
   14d58:	pop	{r4, r5, r6, pc}
   14d5c:	mov	r0, #22
   14d60:	pop	{r4, r5, r6, pc}
   14d64:	mov	r1, #0
   14d68:	b	11148 <setlocale@plt>
   14d6c:	subs	r2, r1, #1
   14d70:	bxeq	lr
   14d74:	bcc	14f4c <abort@plt+0x3d8c>
   14d78:	cmp	r0, r1
   14d7c:	bls	14f30 <abort@plt+0x3d70>
   14d80:	tst	r1, r2
   14d84:	beq	14f3c <abort@plt+0x3d7c>
   14d88:	clz	r3, r0
   14d8c:	clz	r2, r1
   14d90:	sub	r3, r2, r3
   14d94:	rsbs	r3, r3, #31
   14d98:	addne	r3, r3, r3, lsl #1
   14d9c:	mov	r2, #0
   14da0:	addne	pc, pc, r3, lsl #2
   14da4:	nop			; (mov r0, r0)
   14da8:	cmp	r0, r1, lsl #31
   14dac:	adc	r2, r2, r2
   14db0:	subcs	r0, r0, r1, lsl #31
   14db4:	cmp	r0, r1, lsl #30
   14db8:	adc	r2, r2, r2
   14dbc:	subcs	r0, r0, r1, lsl #30
   14dc0:	cmp	r0, r1, lsl #29
   14dc4:	adc	r2, r2, r2
   14dc8:	subcs	r0, r0, r1, lsl #29
   14dcc:	cmp	r0, r1, lsl #28
   14dd0:	adc	r2, r2, r2
   14dd4:	subcs	r0, r0, r1, lsl #28
   14dd8:	cmp	r0, r1, lsl #27
   14ddc:	adc	r2, r2, r2
   14de0:	subcs	r0, r0, r1, lsl #27
   14de4:	cmp	r0, r1, lsl #26
   14de8:	adc	r2, r2, r2
   14dec:	subcs	r0, r0, r1, lsl #26
   14df0:	cmp	r0, r1, lsl #25
   14df4:	adc	r2, r2, r2
   14df8:	subcs	r0, r0, r1, lsl #25
   14dfc:	cmp	r0, r1, lsl #24
   14e00:	adc	r2, r2, r2
   14e04:	subcs	r0, r0, r1, lsl #24
   14e08:	cmp	r0, r1, lsl #23
   14e0c:	adc	r2, r2, r2
   14e10:	subcs	r0, r0, r1, lsl #23
   14e14:	cmp	r0, r1, lsl #22
   14e18:	adc	r2, r2, r2
   14e1c:	subcs	r0, r0, r1, lsl #22
   14e20:	cmp	r0, r1, lsl #21
   14e24:	adc	r2, r2, r2
   14e28:	subcs	r0, r0, r1, lsl #21
   14e2c:	cmp	r0, r1, lsl #20
   14e30:	adc	r2, r2, r2
   14e34:	subcs	r0, r0, r1, lsl #20
   14e38:	cmp	r0, r1, lsl #19
   14e3c:	adc	r2, r2, r2
   14e40:	subcs	r0, r0, r1, lsl #19
   14e44:	cmp	r0, r1, lsl #18
   14e48:	adc	r2, r2, r2
   14e4c:	subcs	r0, r0, r1, lsl #18
   14e50:	cmp	r0, r1, lsl #17
   14e54:	adc	r2, r2, r2
   14e58:	subcs	r0, r0, r1, lsl #17
   14e5c:	cmp	r0, r1, lsl #16
   14e60:	adc	r2, r2, r2
   14e64:	subcs	r0, r0, r1, lsl #16
   14e68:	cmp	r0, r1, lsl #15
   14e6c:	adc	r2, r2, r2
   14e70:	subcs	r0, r0, r1, lsl #15
   14e74:	cmp	r0, r1, lsl #14
   14e78:	adc	r2, r2, r2
   14e7c:	subcs	r0, r0, r1, lsl #14
   14e80:	cmp	r0, r1, lsl #13
   14e84:	adc	r2, r2, r2
   14e88:	subcs	r0, r0, r1, lsl #13
   14e8c:	cmp	r0, r1, lsl #12
   14e90:	adc	r2, r2, r2
   14e94:	subcs	r0, r0, r1, lsl #12
   14e98:	cmp	r0, r1, lsl #11
   14e9c:	adc	r2, r2, r2
   14ea0:	subcs	r0, r0, r1, lsl #11
   14ea4:	cmp	r0, r1, lsl #10
   14ea8:	adc	r2, r2, r2
   14eac:	subcs	r0, r0, r1, lsl #10
   14eb0:	cmp	r0, r1, lsl #9
   14eb4:	adc	r2, r2, r2
   14eb8:	subcs	r0, r0, r1, lsl #9
   14ebc:	cmp	r0, r1, lsl #8
   14ec0:	adc	r2, r2, r2
   14ec4:	subcs	r0, r0, r1, lsl #8
   14ec8:	cmp	r0, r1, lsl #7
   14ecc:	adc	r2, r2, r2
   14ed0:	subcs	r0, r0, r1, lsl #7
   14ed4:	cmp	r0, r1, lsl #6
   14ed8:	adc	r2, r2, r2
   14edc:	subcs	r0, r0, r1, lsl #6
   14ee0:	cmp	r0, r1, lsl #5
   14ee4:	adc	r2, r2, r2
   14ee8:	subcs	r0, r0, r1, lsl #5
   14eec:	cmp	r0, r1, lsl #4
   14ef0:	adc	r2, r2, r2
   14ef4:	subcs	r0, r0, r1, lsl #4
   14ef8:	cmp	r0, r1, lsl #3
   14efc:	adc	r2, r2, r2
   14f00:	subcs	r0, r0, r1, lsl #3
   14f04:	cmp	r0, r1, lsl #2
   14f08:	adc	r2, r2, r2
   14f0c:	subcs	r0, r0, r1, lsl #2
   14f10:	cmp	r0, r1, lsl #1
   14f14:	adc	r2, r2, r2
   14f18:	subcs	r0, r0, r1, lsl #1
   14f1c:	cmp	r0, r1
   14f20:	adc	r2, r2, r2
   14f24:	subcs	r0, r0, r1
   14f28:	mov	r0, r2
   14f2c:	bx	lr
   14f30:	moveq	r0, #1
   14f34:	movne	r0, #0
   14f38:	bx	lr
   14f3c:	clz	r2, r1
   14f40:	rsb	r2, r2, #31
   14f44:	lsr	r0, r0, r2
   14f48:	bx	lr
   14f4c:	cmp	r0, #0
   14f50:	mvnne	r0, #0
   14f54:	b	151b8 <abort@plt+0x3ff8>
   14f58:	cmp	r1, #0
   14f5c:	beq	14f4c <abort@plt+0x3d8c>
   14f60:	push	{r0, r1, lr}
   14f64:	bl	14d6c <abort@plt+0x3bac>
   14f68:	pop	{r1, r2, lr}
   14f6c:	mul	r3, r2, r0
   14f70:	sub	r1, r1, r3
   14f74:	bx	lr
   14f78:	cmp	r1, #0
   14f7c:	beq	15188 <abort@plt+0x3fc8>
   14f80:	eor	ip, r0, r1
   14f84:	rsbmi	r1, r1, #0
   14f88:	subs	r2, r1, #1
   14f8c:	beq	15154 <abort@plt+0x3f94>
   14f90:	movs	r3, r0
   14f94:	rsbmi	r3, r0, #0
   14f98:	cmp	r3, r1
   14f9c:	bls	15160 <abort@plt+0x3fa0>
   14fa0:	tst	r1, r2
   14fa4:	beq	15170 <abort@plt+0x3fb0>
   14fa8:	clz	r2, r3
   14fac:	clz	r0, r1
   14fb0:	sub	r2, r0, r2
   14fb4:	rsbs	r2, r2, #31
   14fb8:	addne	r2, r2, r2, lsl #1
   14fbc:	mov	r0, #0
   14fc0:	addne	pc, pc, r2, lsl #2
   14fc4:	nop			; (mov r0, r0)
   14fc8:	cmp	r3, r1, lsl #31
   14fcc:	adc	r0, r0, r0
   14fd0:	subcs	r3, r3, r1, lsl #31
   14fd4:	cmp	r3, r1, lsl #30
   14fd8:	adc	r0, r0, r0
   14fdc:	subcs	r3, r3, r1, lsl #30
   14fe0:	cmp	r3, r1, lsl #29
   14fe4:	adc	r0, r0, r0
   14fe8:	subcs	r3, r3, r1, lsl #29
   14fec:	cmp	r3, r1, lsl #28
   14ff0:	adc	r0, r0, r0
   14ff4:	subcs	r3, r3, r1, lsl #28
   14ff8:	cmp	r3, r1, lsl #27
   14ffc:	adc	r0, r0, r0
   15000:	subcs	r3, r3, r1, lsl #27
   15004:	cmp	r3, r1, lsl #26
   15008:	adc	r0, r0, r0
   1500c:	subcs	r3, r3, r1, lsl #26
   15010:	cmp	r3, r1, lsl #25
   15014:	adc	r0, r0, r0
   15018:	subcs	r3, r3, r1, lsl #25
   1501c:	cmp	r3, r1, lsl #24
   15020:	adc	r0, r0, r0
   15024:	subcs	r3, r3, r1, lsl #24
   15028:	cmp	r3, r1, lsl #23
   1502c:	adc	r0, r0, r0
   15030:	subcs	r3, r3, r1, lsl #23
   15034:	cmp	r3, r1, lsl #22
   15038:	adc	r0, r0, r0
   1503c:	subcs	r3, r3, r1, lsl #22
   15040:	cmp	r3, r1, lsl #21
   15044:	adc	r0, r0, r0
   15048:	subcs	r3, r3, r1, lsl #21
   1504c:	cmp	r3, r1, lsl #20
   15050:	adc	r0, r0, r0
   15054:	subcs	r3, r3, r1, lsl #20
   15058:	cmp	r3, r1, lsl #19
   1505c:	adc	r0, r0, r0
   15060:	subcs	r3, r3, r1, lsl #19
   15064:	cmp	r3, r1, lsl #18
   15068:	adc	r0, r0, r0
   1506c:	subcs	r3, r3, r1, lsl #18
   15070:	cmp	r3, r1, lsl #17
   15074:	adc	r0, r0, r0
   15078:	subcs	r3, r3, r1, lsl #17
   1507c:	cmp	r3, r1, lsl #16
   15080:	adc	r0, r0, r0
   15084:	subcs	r3, r3, r1, lsl #16
   15088:	cmp	r3, r1, lsl #15
   1508c:	adc	r0, r0, r0
   15090:	subcs	r3, r3, r1, lsl #15
   15094:	cmp	r3, r1, lsl #14
   15098:	adc	r0, r0, r0
   1509c:	subcs	r3, r3, r1, lsl #14
   150a0:	cmp	r3, r1, lsl #13
   150a4:	adc	r0, r0, r0
   150a8:	subcs	r3, r3, r1, lsl #13
   150ac:	cmp	r3, r1, lsl #12
   150b0:	adc	r0, r0, r0
   150b4:	subcs	r3, r3, r1, lsl #12
   150b8:	cmp	r3, r1, lsl #11
   150bc:	adc	r0, r0, r0
   150c0:	subcs	r3, r3, r1, lsl #11
   150c4:	cmp	r3, r1, lsl #10
   150c8:	adc	r0, r0, r0
   150cc:	subcs	r3, r3, r1, lsl #10
   150d0:	cmp	r3, r1, lsl #9
   150d4:	adc	r0, r0, r0
   150d8:	subcs	r3, r3, r1, lsl #9
   150dc:	cmp	r3, r1, lsl #8
   150e0:	adc	r0, r0, r0
   150e4:	subcs	r3, r3, r1, lsl #8
   150e8:	cmp	r3, r1, lsl #7
   150ec:	adc	r0, r0, r0
   150f0:	subcs	r3, r3, r1, lsl #7
   150f4:	cmp	r3, r1, lsl #6
   150f8:	adc	r0, r0, r0
   150fc:	subcs	r3, r3, r1, lsl #6
   15100:	cmp	r3, r1, lsl #5
   15104:	adc	r0, r0, r0
   15108:	subcs	r3, r3, r1, lsl #5
   1510c:	cmp	r3, r1, lsl #4
   15110:	adc	r0, r0, r0
   15114:	subcs	r3, r3, r1, lsl #4
   15118:	cmp	r3, r1, lsl #3
   1511c:	adc	r0, r0, r0
   15120:	subcs	r3, r3, r1, lsl #3
   15124:	cmp	r3, r1, lsl #2
   15128:	adc	r0, r0, r0
   1512c:	subcs	r3, r3, r1, lsl #2
   15130:	cmp	r3, r1, lsl #1
   15134:	adc	r0, r0, r0
   15138:	subcs	r3, r3, r1, lsl #1
   1513c:	cmp	r3, r1
   15140:	adc	r0, r0, r0
   15144:	subcs	r3, r3, r1
   15148:	cmp	ip, #0
   1514c:	rsbmi	r0, r0, #0
   15150:	bx	lr
   15154:	teq	ip, r0
   15158:	rsbmi	r0, r0, #0
   1515c:	bx	lr
   15160:	movcc	r0, #0
   15164:	asreq	r0, ip, #31
   15168:	orreq	r0, r0, #1
   1516c:	bx	lr
   15170:	clz	r2, r1
   15174:	rsb	r2, r2, #31
   15178:	cmp	ip, #0
   1517c:	lsr	r0, r3, r2
   15180:	rsbmi	r0, r0, #0
   15184:	bx	lr
   15188:	cmp	r0, #0
   1518c:	mvngt	r0, #-2147483648	; 0x80000000
   15190:	movlt	r0, #-2147483648	; 0x80000000
   15194:	b	151b8 <abort@plt+0x3ff8>
   15198:	cmp	r1, #0
   1519c:	beq	15188 <abort@plt+0x3fc8>
   151a0:	push	{r0, r1, lr}
   151a4:	bl	14f80 <abort@plt+0x3dc0>
   151a8:	pop	{r1, r2, lr}
   151ac:	mul	r3, r2, r0
   151b0:	sub	r1, r1, r3
   151b4:	bx	lr
   151b8:	push	{r1, lr}
   151bc:	mov	r0, #8
   151c0:	bl	10f08 <raise@plt>
   151c4:	pop	{r1, pc}
   151c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   151cc:	mov	r7, r0
   151d0:	ldr	r6, [pc, #72]	; 15220 <abort@plt+0x4060>
   151d4:	ldr	r5, [pc, #72]	; 15224 <abort@plt+0x4064>
   151d8:	add	r6, pc, r6
   151dc:	add	r5, pc, r5
   151e0:	sub	r6, r6, r5
   151e4:	mov	r8, r1
   151e8:	mov	r9, r2
   151ec:	bl	10ed0 <calloc@plt-0x20>
   151f0:	asrs	r6, r6, #2
   151f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   151f8:	mov	r4, #0
   151fc:	add	r4, r4, #1
   15200:	ldr	r3, [r5], #4
   15204:	mov	r2, r9
   15208:	mov	r1, r8
   1520c:	mov	r0, r7
   15210:	blx	r3
   15214:	cmp	r6, r4
   15218:	bne	151fc <abort@plt+0x403c>
   1521c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15220:	andeq	r0, r1, r8, lsr #26
   15224:	andeq	r0, r1, r0, lsr #26
   15228:	bx	lr
   1522c:	ldr	r3, [pc, #12]	; 15240 <abort@plt+0x4080>
   15230:	mov	r1, #0
   15234:	add	r3, pc, r3
   15238:	ldr	r2, [r3]
   1523c:	b	110e8 <__cxa_atexit@plt>
   15240:	andeq	r0, r1, ip, asr #29

Disassembly of section .fini:

00015244 <.fini>:
   15244:	push	{r3, lr}
   15248:	pop	{r3, pc}
