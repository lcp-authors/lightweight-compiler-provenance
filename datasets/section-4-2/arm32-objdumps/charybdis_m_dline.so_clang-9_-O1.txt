
../repos/charybdis/modules/.libs/m_dline.so:     file format elf32-littlearm


Disassembly of section .init:

00000b44 <_init>:
 b44:	push	{r3, lr}
 b48:	bl	d14 <call_weak_fn>
 b4c:	pop	{r3, pc}

Disassembly of section .plt:

00000b50 <.plt>:
 b50:	push	{lr}		; (str lr, [sp, #-4]!)
 b54:	ldr	lr, [pc, #4]	; b60 <.plt+0x10>
 b58:	add	lr, pc, lr
 b5c:	ldr	pc, [lr, #8]!
 b60:	.word	0x000124a0

00000b64 <make_conf@plt>:
 b64:	add	ip, pc, #0, 12
 b68:	add	ip, ip, #73728	; 0x12000
 b6c:	ldr	pc, [ip, #1184]!	; 0x4a0

00000b70 <parse_netmask_strict@plt>:
 b70:	add	ip, pc, #0, 12
 b74:	add	ip, ip, #73728	; 0x12000
 b78:	ldr	pc, [ip, #1176]!	; 0x498

00000b7c <rb_current_time@plt>:
 b7c:	add	ip, pc, #0, 12
 b80:	add	ip, ip, #73728	; 0x12000
 b84:	ldr	pc, [ip, #1168]!	; 0x490

00000b88 <sendto_match_servs@plt>:
 b88:	add	ip, pc, #0, 12
 b8c:	add	ip, ip, #73728	; 0x12000
 b90:	ldr	pc, [ip, #1160]!	; 0x488

00000b94 <__cxa_finalize@plt>:
 b94:	add	ip, pc, #0, 12
 b98:	add	ip, ip, #73728	; 0x12000
 b9c:	ldr	pc, [ip, #1152]!	; 0x480

00000ba0 <sendto_one@plt>:
 ba0:	add	ip, pc, #0, 12
 ba4:	add	ip, ip, #73728	; 0x12000
 ba8:	ldr	pc, [ip, #1144]!	; 0x478

00000bac <rb_outofmemory@plt>:
 bac:	add	ip, pc, #0, 12
 bb0:	add	ip, ip, #73728	; 0x12000
 bb4:	ldr	pc, [ip, #1136]!	; 0x470

00000bb8 <parse_netmask@plt>:
 bb8:	add	ip, pc, #0, 12
 bbc:	add	ip, ip, #73728	; 0x12000
 bc0:	ldr	pc, [ip, #1128]!	; 0x468

00000bc4 <sendto_realops_snomask@plt>:
 bc4:	add	ip, pc, #0, 12
 bc8:	add	ip, ip, #73728	; 0x12000
 bcc:	ldr	pc, [ip, #1120]!	; 0x460

00000bd0 <bandb_add@plt>:
 bd0:	add	ip, pc, #0, 12
 bd4:	add	ip, ip, #73728	; 0x12000
 bd8:	ldr	pc, [ip, #1112]!	; 0x458

00000bdc <get_oper_name@plt>:
 bdc:	add	ip, pc, #0, 12
 be0:	add	ip, ip, #73728	; 0x12000
 be4:	ldr	pc, [ip, #1104]!	; 0x450

00000be8 <rb_free_rb_dlink_node@plt>:
 be8:	add	ip, pc, #0, 12
 bec:	add	ip, ip, #73728	; 0x12000
 bf0:	ldr	pc, [ip, #1096]!	; 0x448

00000bf4 <operhash_add@plt>:
 bf4:	add	ip, pc, #0, 12
 bf8:	add	ip, ip, #73728	; 0x12000
 bfc:	ldr	pc, [ip, #1088]!	; 0x440

00000c00 <strcpy@plt>:
 c00:	add	ip, pc, #0, 12
 c04:	add	ip, ip, #73728	; 0x12000
 c08:	ldr	pc, [ip, #1080]!	; 0x438

00000c0c <add_temp_dline@plt>:
 c0c:	add	ip, pc, #0, 12
 c10:	add	ip, ip, #73728	; 0x12000
 c14:	ldr	pc, [ip, #1072]!	; 0x430

00000c18 <rb_set_time@plt>:
 c18:	add	ip, pc, #0, 12
 c1c:	add	ip, ip, #73728	; 0x12000
 c20:	ldr	pc, [ip, #1064]!	; 0x428

00000c24 <malloc@plt>:
 c24:	add	ip, pc, #0, 12
 c28:	add	ip, ip, #73728	; 0x12000
 c2c:	ldr	pc, [ip, #1056]!	; 0x420

00000c30 <add_conf_by_address@plt>:
 c30:	add	ip, pc, #0, 12
 c34:	add	ip, ip, #73728	; 0x12000
 c38:	ldr	pc, [ip, #1048]!	; 0x418

00000c3c <__gmon_start__@plt>:
 c3c:	add	ip, pc, #0, 12
 c40:	add	ip, ip, #73728	; 0x12000
 c44:	ldr	pc, [ip, #1040]!	; 0x410

00000c48 <strlen@plt>:
 c48:	add	ip, pc, #0, 12
 c4c:	add	ip, ip, #73728	; 0x12000
 c50:	ldr	pc, [ip, #1032]!	; 0x408

00000c54 <strchr@plt>:
 c54:	add	ip, pc, #0, 12
 c58:	add	ip, ip, #73728	; 0x12000
 c5c:	ldr	pc, [ip, #1024]!	; 0x400

00000c60 <delete_one_address_conf@plt>:
 c60:	add	ip, pc, #0, 12
 c64:	add	ip, ip, #73728	; 0x12000
 c68:	ldr	pc, [ip, #1016]!	; 0x3f8

00000c6c <ilog@plt>:
 c6c:	add	ip, pc, #0, 12
 c70:	add	ip, ip, #73728	; 0x12000
 c74:	ldr	pc, [ip, #1008]!	; 0x3f0

00000c78 <match@plt>:
 c78:	add	ip, pc, #0, 12
 c7c:	add	ip, ip, #73728	; 0x12000
 c80:	ldr	pc, [ip, #1000]!	; 0x3e8

00000c84 <valid_temp_time@plt>:
 c84:	add	ip, pc, #0, 12
 c88:	add	ip, ip, #73728	; 0x12000
 c8c:	ldr	pc, [ip, #992]!	; 0x3e0

00000c90 <check_dlines@plt>:
 c90:	add	ip, pc, #0, 12
 c94:	add	ip, ip, #73728	; 0x12000
 c98:	ldr	pc, [ip, #984]!	; 0x3d8

00000c9c <sendto_one_notice@plt>:
 c9c:	add	ip, pc, #0, 12
 ca0:	add	ip, ip, #73728	; 0x12000
 ca4:	ldr	pc, [ip, #976]!	; 0x3d0

00000ca8 <bandb_del@plt>:
 ca8:	add	ip, pc, #0, 12
 cac:	add	ip, ip, #73728	; 0x12000
 cb0:	ldr	pc, [ip, #968]!	; 0x3c8

00000cb4 <atoi@plt>:
 cb4:	add	ip, pc, #0, 12
 cb8:	add	ip, ip, #73728	; 0x12000
 cbc:	ldr	pc, [ip, #960]!	; 0x3c0

00000cc0 <find_exact_conf_by_address@plt>:
 cc0:	add	ip, pc, #0, 12
 cc4:	add	ip, ip, #73728	; 0x12000
 cc8:	ldr	pc, [ip, #952]!	; 0x3b8

00000ccc <rb_strlcpy@plt>:
 ccc:	add	ip, pc, #0, 12
 cd0:	add	ip, ip, #73728	; 0x12000
 cd4:	ldr	pc, [ip, #944]!	; 0x3b0

00000cd8 <find_shared_conf@plt>:
 cd8:	add	ip, pc, #0, 12
 cdc:	add	ip, ip, #73728	; 0x12000
 ce0:	ldr	pc, [ip, #936]!	; 0x3a8

00000ce4 <privilegeset_in_set@plt>:
 ce4:	add	ip, pc, #0, 12
 ce8:	add	ip, ip, #73728	; 0x12000
 cec:	ldr	pc, [ip, #928]!	; 0x3a0

00000cf0 <irccmp@plt>:
 cf0:	add	ip, pc, #0, 12
 cf4:	add	ip, ip, #73728	; 0x12000
 cf8:	ldr	pc, [ip, #920]!	; 0x398

00000cfc <find_dline@plt>:
 cfc:	add	ip, pc, #0, 12
 d00:	add	ip, ip, #73728	; 0x12000
 d04:	ldr	pc, [ip, #912]!	; 0x390

00000d08 <__assert_fail@plt>:
 d08:	add	ip, pc, #0, 12
 d0c:	add	ip, ip, #73728	; 0x12000
 d10:	ldr	pc, [ip, #904]!	; 0x388

Disassembly of section .text:

00000d14 <call_weak_fn>:
     d14:	ldr	r3, [pc, #20]	; d30 <call_weak_fn+0x1c>
     d18:	ldr	r2, [pc, #20]	; d34 <call_weak_fn+0x20>
     d1c:	add	r3, pc, r3
     d20:	ldr	r2, [r3, r2]
     d24:	cmp	r2, #0
     d28:	bxeq	lr
     d2c:	b	c3c <__gmon_start__@plt>
     d30:	.word	0x000122dc
     d34:	.word	0x000000a4

00000d38 <deregister_tm_clones>:
     d38:	ldr	r0, [pc, #44]	; d6c <deregister_tm_clones+0x34>
     d3c:	ldr	r3, [pc, #44]	; d70 <deregister_tm_clones+0x38>
     d40:	add	r0, pc, r0
     d44:	add	r3, pc, r3
     d48:	cmp	r3, r0
     d4c:	ldr	r3, [pc, #32]	; d74 <deregister_tm_clones+0x3c>
     d50:	add	r3, pc, r3
     d54:	bxeq	lr
     d58:	ldr	r2, [pc, #24]	; d78 <deregister_tm_clones+0x40>
     d5c:	ldr	r3, [r3, r2]
     d60:	cmp	r3, #0
     d64:	bxeq	lr
     d68:	bx	r3
     d6c:	.word	0x00012434
     d70:	.word	0x00012430
     d74:	.word	0x000122a8
     d78:	.word	0x000000a0

00000d7c <register_tm_clones>:
     d7c:	ldr	r0, [pc, #56]	; dbc <register_tm_clones+0x40>
     d80:	ldr	r3, [pc, #56]	; dc0 <register_tm_clones+0x44>
     d84:	add	r0, pc, r0
     d88:	add	r3, pc, r3
     d8c:	sub	r1, r3, r0
     d90:	ldr	r3, [pc, #44]	; dc4 <register_tm_clones+0x48>
     d94:	asr	r1, r1, #2
     d98:	add	r3, pc, r3
     d9c:	add	r1, r1, r1, lsr #31
     da0:	asrs	r1, r1, #1
     da4:	bxeq	lr
     da8:	ldr	r2, [pc, #24]	; dc8 <register_tm_clones+0x4c>
     dac:	ldr	r3, [r3, r2]
     db0:	cmp	r3, #0
     db4:	bxeq	lr
     db8:	bx	r3
     dbc:	.word	0x000123f0
     dc0:	.word	0x000123ec
     dc4:	.word	0x00012260
     dc8:	.word	0x000000ac

00000dcc <__do_global_dtors_aux>:
     dcc:	ldr	r3, [pc, #76]	; e20 <__do_global_dtors_aux+0x54>
     dd0:	ldr	r2, [pc, #76]	; e24 <__do_global_dtors_aux+0x58>
     dd4:	add	r3, pc, r3
     dd8:	add	r2, pc, r2
     ddc:	ldrb	r3, [r3]
     de0:	cmp	r3, #0
     de4:	bxne	lr
     de8:	ldr	r3, [pc, #56]	; e28 <__do_global_dtors_aux+0x5c>
     dec:	push	{r4, lr}
     df0:	ldr	r3, [r2, r3]
     df4:	cmp	r3, #0
     df8:	beq	e08 <__do_global_dtors_aux+0x3c>
     dfc:	ldr	r3, [pc, #40]	; e2c <__do_global_dtors_aux+0x60>
     e00:	ldr	r0, [pc, r3]
     e04:	bl	b94 <__cxa_finalize@plt>
     e08:	bl	d38 <deregister_tm_clones>
     e0c:	ldr	r3, [pc, #28]	; e30 <__do_global_dtors_aux+0x64>
     e10:	mov	r2, #1
     e14:	add	r3, pc, r3
     e18:	strb	r2, [r3]
     e1c:	pop	{r4, pc}
     e20:	.word	0x000123a0
     e24:	.word	0x00012220
     e28:	.word	0x0000009c
     e2c:	.word	0x000122b4
     e30:	.word	0x00012360

00000e34 <frame_dummy>:
     e34:	b	d7c <register_tm_clones>

00000e38 <me_dline>:
     e38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
     e3c:	add	fp, sp, #24
     e40:	mov	r4, r2
     e44:	ldr	r6, [fp, #8]
     e48:	ldr	r0, [r6, #4]
     e4c:	bl	cb4 <atoi@plt>
     e50:	mov	r5, r0
     e54:	ldrh	r0, [r4, #80]	; 0x50
     e58:	cmp	r0, #64	; 0x40
     e5c:	bne	ed8 <me_dline+0xa0>
     e60:	ldr	r0, [r4, #24]
     e64:	cmp	r0, #0
     e68:	beq	ed8 <me_dline+0xa0>
     e6c:	mov	r3, #4096	; 0x1000
     e70:	cmp	r5, #0
     e74:	movwgt	r3, #2048	; 0x800
     e78:	ldr	r2, [r4, #32]
     e7c:	add	r0, r4, #152	; 0x98
     e80:	add	r1, r4, #163	; 0xa3
     e84:	add	r2, r2, #88	; 0x58
     e88:	bl	cd8 <find_shared_conf@plt>
     e8c:	cmp	r0, #0
     e90:	beq	ed8 <me_dline+0xa0>
     e94:	ldr	r8, [r6, #8]
     e98:	ldr	r7, [r6, #12]
     e9c:	mov	r0, r7
     ea0:	bl	c48 <strlen@plt>
     ea4:	add	r0, r0, #8
     ea8:	bic	r0, r0, #7
     eac:	sub	r6, sp, r0
     eb0:	mov	sp, r6
     eb4:	mov	r0, r6
     eb8:	mov	r1, r7
     ebc:	bl	c00 <strcpy@plt>
     ec0:	mov	r0, r4
     ec4:	mov	r1, r8
     ec8:	mov	r2, r5
     ecc:	mov	r3, r6
     ed0:	bl	134c <apply_dline>
     ed4:	bl	c90 <check_dlines@plt>
     ed8:	sub	sp, fp, #24
     edc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00000ee0 <mo_dline>:
     ee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     ee4:	add	fp, sp, #28
     ee8:	sub	sp, sp, #92	; 0x5c
     eec:	mov	r4, r2
     ef0:	ldr	r0, [pc, #608]	; 1158 <mo_dline+0x278>
     ef4:	add	r0, pc, r0
     ef8:	vldr	d16, [r0]
     efc:	mov	r0, #110	; 0x6e
     f00:	strh	r0, [fp, #-40]	; 0xffffffd8
     f04:	vstr	d16, [fp, #-48]	; 0xffffffd0
     f08:	ldr	r0, [r2, #24]
     f0c:	cmp	r0, #0
     f10:	beq	f80 <mo_dline+0xa0>
     f14:	ldr	r0, [r0, #36]	; 0x24
     f18:	cmp	r0, #0
     f1c:	beq	f80 <mo_dline+0xa0>
     f20:	mov	r7, r3
     f24:	ldr	r1, [pc, #560]	; 115c <mo_dline+0x27c>
     f28:	add	r1, pc, r1
     f2c:	bl	ce4 <privilegeset_in_set@plt>
     f30:	cmp	r0, #0
     f34:	beq	f80 <mo_dline+0xa0>
     f38:	ldr	r9, [fp, #8]
     f3c:	ldr	r0, [r9, #4]
     f40:	bl	c84 <valid_temp_time@plt>
     f44:	mov	sl, r0
     f48:	mov	r6, #1
     f4c:	cmn	r0, #1
     f50:	movwgt	r6, #2
     f54:	ldr	r5, [r9, r6, lsl #2]
     f58:	sub	r0, fp, #112	; 0x70
     f5c:	mov	r1, r5
     f60:	mov	r2, #64	; 0x40
     f64:	bl	ccc <rb_strlcpy@plt>
     f68:	ldrb	r0, [r5]
     f6c:	cmp	r0, #58	; 0x3a
     f70:	bne	fbc <mo_dline+0xdc>
     f74:	ldr	r1, [pc, #496]	; 116c <mo_dline+0x28c>
     f78:	add	r1, pc, r1
     f7c:	b	1070 <mo_dline+0x190>
     f80:	sub	sp, sp, #8
     f84:	ldr	r0, [pc, #468]	; 1160 <mo_dline+0x280>
     f88:	add	r0, pc, r0
     f8c:	str	r0, [sp]
     f90:	add	r3, r4, #88	; 0x58
     f94:	ldr	r0, [pc, #456]	; 1164 <mo_dline+0x284>
     f98:	ldr	r0, [pc, r0]
     f9c:	add	r2, r0, #88	; 0x58
     fa0:	ldr	r1, [pc, #448]	; 1168 <mo_dline+0x288>
     fa4:	add	r1, pc, r1
     fa8:	mov	r0, r4
     fac:	bl	ba0 <sendto_one@plt>
     fb0:	add	sp, sp, #8
     fb4:	sub	sp, fp, #28
     fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     fbc:	mov	r0, r5
     fc0:	mov	r1, #0
     fc4:	mov	r2, #0
     fc8:	bl	b70 <parse_netmask_strict@plt>
     fcc:	orr	r0, r0, #1
     fd0:	cmp	r0, #3
     fd4:	bne	1068 <mo_dline+0x188>
     fd8:	mov	r0, #0
     fdc:	str	r0, [fp, #-116]	; 0xffffff8c
     fe0:	add	r8, r6, #1
     fe4:	add	r0, r6, #3
     fe8:	cmp	r0, r7
     fec:	bgt	100c <mo_dline+0x12c>
     ff0:	str	r0, [fp, #-120]	; 0xffffff88
     ff4:	ldr	r0, [r9, r8, lsl #2]
     ff8:	ldr	r1, [pc, #372]	; 1174 <mo_dline+0x294>
     ffc:	add	r1, pc, r1
    1000:	bl	cf0 <irccmp@plt>
    1004:	cmp	r0, #0
    1008:	beq	1108 <mo_dline+0x228>
    100c:	sub	r1, fp, #48	; 0x30
    1010:	cmp	r8, r7
    1014:	bge	1084 <mo_dline+0x1a4>
    1018:	ldr	r8, [r9, r8, lsl #2]
    101c:	cmp	r8, #0
    1020:	beq	1084 <mo_dline+0x1a4>
    1024:	ldrb	r0, [r8]
    1028:	cmp	r0, #0
    102c:	ldr	r6, [fp, #-116]	; 0xffffff8c
    1030:	mov	r7, r1
    1034:	beq	108c <mo_dline+0x1ac>
    1038:	mov	r0, r8
    103c:	bl	c48 <strlen@plt>
    1040:	add	r0, r0, #8
    1044:	bic	r0, r0, #7
    1048:	sub	r7, sp, r0
    104c:	mov	sp, r7
    1050:	mov	r0, r7
    1054:	mov	r1, r8
    1058:	bl	c00 <strcpy@plt>
    105c:	cmp	r6, #0
    1060:	bne	1094 <mo_dline+0x1b4>
    1064:	b	10e8 <mo_dline+0x208>
    1068:	ldr	r1, [pc, #256]	; 1170 <mo_dline+0x290>
    106c:	add	r1, pc, r1
    1070:	mov	r0, r4
    1074:	mov	r2, r5
    1078:	bl	c9c <sendto_one_notice@plt>
    107c:	sub	sp, fp, #28
    1080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1084:	ldr	r6, [fp, #-116]	; 0xffffff8c
    1088:	mov	r7, r1
    108c:	cmp	r6, #0
    1090:	beq	10e8 <mo_dline+0x208>
    1094:	ldr	r0, [pc, #228]	; 1180 <mo_dline+0x2a0>
    1098:	ldr	r0, [pc, r0]
    109c:	ldr	r2, [r0]
    10a0:	sub	sp, sp, #24
    10a4:	ldr	r0, [pc, #216]	; 1184 <mo_dline+0x2a4>
    10a8:	add	r0, pc, r0
    10ac:	stm	sp, {r0, r6, sl}
    10b0:	str	r5, [sp, #12]
    10b4:	str	r7, [sp, #16]
    10b8:	mov	r0, r4
    10bc:	mov	r1, r6
    10c0:	mov	r3, #0
    10c4:	bl	b88 <sendto_match_servs@plt>
    10c8:	add	sp, sp, #24
    10cc:	ldr	r0, [pc, #180]	; 1188 <mo_dline+0x2a8>
    10d0:	ldr	r0, [pc, r0]
    10d4:	add	r1, r0, #88	; 0x58
    10d8:	mov	r0, r6
    10dc:	bl	c78 <match@plt>
    10e0:	cmp	r0, #0
    10e4:	beq	1100 <mo_dline+0x220>
    10e8:	mov	r0, r4
    10ec:	mov	r1, r5
    10f0:	mov	r2, sl
    10f4:	mov	r3, r7
    10f8:	bl	134c <apply_dline>
    10fc:	bl	c90 <check_dlines@plt>
    1100:	sub	sp, fp, #28
    1104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1108:	ldr	r0, [r4, #24]
    110c:	cmp	r0, #0
    1110:	beq	1148 <mo_dline+0x268>
    1114:	ldr	r0, [r0, #36]	; 0x24
    1118:	cmp	r0, #0
    111c:	beq	1148 <mo_dline+0x268>
    1120:	ldr	r1, [pc, #80]	; 1178 <mo_dline+0x298>
    1124:	add	r1, pc, r1
    1128:	bl	ce4 <privilegeset_in_set@plt>
    112c:	cmp	r0, #0
    1130:	beq	1148 <mo_dline+0x268>
    1134:	add	r0, r9, r6, lsl #2
    1138:	ldr	r0, [r0, #8]
    113c:	str	r0, [fp, #-116]	; 0xffffff8c
    1140:	ldr	r8, [fp, #-120]	; 0xffffff88
    1144:	b	100c <mo_dline+0x12c>
    1148:	sub	sp, sp, #8
    114c:	ldr	r0, [pc, #40]	; 117c <mo_dline+0x29c>
    1150:	add	r0, pc, r0
    1154:	b	f8c <mo_dline+0xac>
    1158:	.word	0x000010e4
    115c:	.word	0x00000c40
    1160:	.word	0x00000be5
    1164:	.word	0x00012110
    1168:	.word	0x00000bcf
    116c:	.word	0x00000c22
    1170:	.word	0x00000b5c
    1174:	.word	0x00000bff
    1178:	.word	0x00000ada
    117c:	.word	0x00000ab3
    1180:	.word	0x00012014
    1184:	.word	0x00000b65
    1188:	.word	0x00011fd8

0000118c <me_undline>:
    118c:	push	{r4, r5, fp, lr}
    1190:	add	fp, sp, #8
    1194:	ldrh	r0, [r2, #80]	; 0x50
    1198:	cmp	r0, #64	; 0x40
    119c:	bne	11e4 <me_undline+0x58>
    11a0:	mov	r4, r2
    11a4:	ldr	r0, [r2, #24]
    11a8:	cmp	r0, #0
    11ac:	popeq	{r4, r5, fp, pc}
    11b0:	ldr	r5, [fp, #8]
    11b4:	ldr	r2, [r4, #32]
    11b8:	add	r0, r4, #152	; 0x98
    11bc:	add	r1, r4, #163	; 0xa3
    11c0:	add	r2, r2, #88	; 0x58
    11c4:	mov	r3, #8192	; 0x2000
    11c8:	bl	cd8 <find_shared_conf@plt>
    11cc:	cmp	r0, #0
    11d0:	beq	11e4 <me_undline+0x58>
    11d4:	ldr	r1, [r5, #4]
    11d8:	mov	r0, r4
    11dc:	pop	{r4, r5, fp, lr}
    11e0:	b	185c <apply_undline>
    11e4:	pop	{r4, r5, fp, pc}

000011e8 <mo_undline>:
    11e8:	push	{r4, r5, r6, r7, fp, lr}
    11ec:	add	fp, sp, #16
    11f0:	sub	sp, sp, #16
    11f4:	mov	r4, r2
    11f8:	ldr	r0, [r2, #24]
    11fc:	cmp	r0, #0
    1200:	beq	1264 <mo_undline+0x7c>
    1204:	ldr	r0, [r0, #36]	; 0x24
    1208:	cmp	r0, #0
    120c:	beq	1264 <mo_undline+0x7c>
    1210:	mov	r6, r3
    1214:	ldr	r7, [fp, #8]
    1218:	ldr	r1, [pc, #260]	; 1324 <mo_undline+0x13c>
    121c:	add	r1, pc, r1
    1220:	bl	ce4 <privilegeset_in_set@plt>
    1224:	cmp	r0, #0
    1228:	beq	1264 <mo_undline+0x7c>
    122c:	ldr	r5, [r7, #4]
    1230:	cmp	r6, #4
    1234:	blt	1250 <mo_undline+0x68>
    1238:	ldr	r0, [r7, #8]
    123c:	ldr	r1, [pc, #240]	; 1334 <mo_undline+0x14c>
    1240:	add	r1, pc, r1
    1244:	bl	cf0 <irccmp@plt>
    1248:	cmp	r0, #0
    124c:	beq	1298 <mo_undline+0xb0>
    1250:	mov	r0, r4
    1254:	mov	r1, r5
    1258:	sub	sp, fp, #16
    125c:	pop	{r4, r5, r6, r7, fp, lr}
    1260:	b	185c <apply_undline>
    1264:	ldr	r0, [pc, #188]	; 1328 <mo_undline+0x140>
    1268:	add	r0, pc, r0
    126c:	str	r0, [sp]
    1270:	add	r3, r4, #88	; 0x58
    1274:	ldr	r0, [pc, #176]	; 132c <mo_undline+0x144>
    1278:	ldr	r0, [pc, r0]
    127c:	add	r2, r0, #88	; 0x58
    1280:	ldr	r1, [pc, #168]	; 1330 <mo_undline+0x148>
    1284:	add	r1, pc, r1
    1288:	mov	r0, r4
    128c:	bl	ba0 <sendto_one@plt>
    1290:	sub	sp, fp, #16
    1294:	pop	{r4, r5, r6, r7, fp, pc}
    1298:	ldr	r0, [r4, #24]
    129c:	cmp	r0, #0
    12a0:	beq	1318 <mo_undline+0x130>
    12a4:	ldr	r0, [r0, #36]	; 0x24
    12a8:	cmp	r0, #0
    12ac:	beq	1318 <mo_undline+0x130>
    12b0:	ldr	r1, [pc, #128]	; 1338 <mo_undline+0x150>
    12b4:	add	r1, pc, r1
    12b8:	bl	ce4 <privilegeset_in_set@plt>
    12bc:	cmp	r0, #0
    12c0:	beq	1318 <mo_undline+0x130>
    12c4:	ldr	r0, [pc, #116]	; 1340 <mo_undline+0x158>
    12c8:	ldr	r0, [pc, r0]
    12cc:	ldr	r2, [r0]
    12d0:	ldr	r6, [r7, #12]
    12d4:	ldr	r0, [pc, #104]	; 1344 <mo_undline+0x15c>
    12d8:	add	r0, pc, r0
    12dc:	stm	sp, {r0, r6}
    12e0:	str	r5, [sp, #8]
    12e4:	mov	r0, r4
    12e8:	mov	r1, r6
    12ec:	mov	r3, #0
    12f0:	bl	b88 <sendto_match_servs@plt>
    12f4:	ldr	r0, [pc, #76]	; 1348 <mo_undline+0x160>
    12f8:	ldr	r0, [pc, r0]
    12fc:	add	r1, r0, #88	; 0x58
    1300:	mov	r0, r6
    1304:	bl	c78 <match@plt>
    1308:	cmp	r0, #0
    130c:	bne	1250 <mo_undline+0x68>
    1310:	sub	sp, fp, #16
    1314:	pop	{r4, r5, r6, r7, fp, pc}
    1318:	ldr	r0, [pc, #28]	; 133c <mo_undline+0x154>
    131c:	add	r0, pc, r0
    1320:	b	126c <mo_undline+0x84>
    1324:	.word	0x0000094c
    1328:	.word	0x00000be3
    132c:	.word	0x00011e30
    1330:	.word	0x000008ef
    1334:	.word	0x000009bb
    1338:	.word	0x0000094a
    133c:	.word	0x000008e7
    1340:	.word	0x00011de4
    1344:	.word	0x00000b7b
    1348:	.word	0x00011db0

0000134c <apply_dline>:
    134c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1350:	add	fp, sp, #28
    1354:	sub	sp, sp, #156	; 0x9c
    1358:	mov	r5, r3
    135c:	mov	r8, r2
    1360:	mov	r6, r1
    1364:	mov	r4, r0
    1368:	add	r1, sp, #28
    136c:	add	r2, sp, #24
    1370:	mov	r0, r6
    1374:	bl	b70 <parse_netmask_strict@plt>
    1378:	orr	r1, r0, #1
    137c:	cmp	r1, #3
    1380:	bne	1400 <apply_dline+0xb4>
    1384:	mov	r7, #2
    1388:	cmp	r0, #3
    138c:	movweq	r7, #10
    1390:	ldr	r0, [r4, #24]
    1394:	cmp	r0, #0
    1398:	beq	141c <apply_dline+0xd0>
    139c:	ldr	r0, [r0, #36]	; 0x24
    13a0:	cmp	r0, #0
    13a4:	beq	13bc <apply_dline+0x70>
    13a8:	ldr	r1, [pc, #1068]	; 17dc <apply_dline+0x490>
    13ac:	add	r1, pc, r1
    13b0:	bl	ce4 <privilegeset_in_set@plt>
    13b4:	cmp	r0, #0
    13b8:	bne	13e8 <apply_dline+0x9c>
    13bc:	ldr	r0, [r4, #24]
    13c0:	cmp	r0, #0
    13c4:	beq	141c <apply_dline+0xd0>
    13c8:	ldr	r0, [r0, #36]	; 0x24
    13cc:	cmp	r0, #0
    13d0:	beq	141c <apply_dline+0xd0>
    13d4:	ldr	r1, [pc, #1028]	; 17e0 <apply_dline+0x494>
    13d8:	add	r1, pc, r1
    13dc:	bl	ce4 <privilegeset_in_set@plt>
    13e0:	cmp	r0, #0
    13e4:	beq	141c <apply_dline+0xd0>
    13e8:	ldr	r0, [sp, #24]
    13ec:	cmp	r0, #7
    13f0:	bgt	1440 <apply_dline+0xf4>
    13f4:	ldr	r1, [pc, #1000]	; 17e4 <apply_dline+0x498>
    13f8:	add	r1, pc, r1
    13fc:	b	1430 <apply_dline+0xe4>
    1400:	add	r3, r4, #88	; 0x58
    1404:	ldr	r0, [pc, #968]	; 17d4 <apply_dline+0x488>
    1408:	ldr	r0, [pc, r0]
    140c:	add	r2, r0, #88	; 0x58
    1410:	ldr	r1, [pc, #960]	; 17d8 <apply_dline+0x48c>
    1414:	add	r1, pc, r1
    1418:	b	1700 <apply_dline+0x3b4>
    141c:	ldr	r0, [sp, #24]
    1420:	cmp	r0, #15
    1424:	bgt	1440 <apply_dline+0xf4>
    1428:	ldr	r1, [pc, #952]	; 17e8 <apply_dline+0x49c>
    142c:	add	r1, pc, r1
    1430:	mov	r0, r4
    1434:	bl	c9c <sendto_one_notice@plt>
    1438:	sub	sp, fp, #28
    143c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1440:	ldr	r0, [pc, #932]	; 17ec <apply_dline+0x4a0>
    1444:	ldr	r0, [pc, r0]
    1448:	ldr	r0, [r0, #140]	; 0x8c
    144c:	cmp	r0, #0
    1450:	beq	1494 <apply_dline+0x148>
    1454:	add	r0, sp, #28
    1458:	mov	r1, r7
    145c:	bl	cfc <find_dline@plt>
    1460:	cmp	r0, #0
    1464:	beq	1494 <apply_dline+0x148>
    1468:	mov	r7, r0
    146c:	ldr	r0, [r0, #16]
    1470:	add	r2, sp, #20
    1474:	mov	r1, #0
    1478:	bl	b70 <parse_netmask_strict@plt>
    147c:	cmp	r0, #0
    1480:	beq	1494 <apply_dline+0x148>
    1484:	ldr	r0, [sp, #20]
    1488:	ldr	r1, [sp, #24]
    148c:	cmp	r1, r0
    1490:	bge	1764 <apply_dline+0x418>
    1494:	bl	c18 <rb_set_time@plt>
    1498:	bl	b64 <make_conf@plt>
    149c:	mov	r7, r0
    14a0:	mov	r0, #131072	; 0x20000
    14a4:	str	r0, [r7]
    14a8:	bl	b7c <rb_current_time@plt>
    14ac:	str	r0, [r7, #40]	; 0x28
    14b0:	mov	r0, r6
    14b4:	bl	182c <rb_strdup>
    14b8:	str	r0, [r7, #16]
    14bc:	mov	r0, r5
    14c0:	bl	182c <rb_strdup>
    14c4:	str	r0, [r7, #20]
    14c8:	mov	r0, r4
    14cc:	bl	bdc <get_oper_name@plt>
    14d0:	bl	bf4 <operhash_add@plt>
    14d4:	str	r0, [r7, #12]
    14d8:	mov	r0, r5
    14dc:	bl	c48 <strlen@plt>
    14e0:	movw	r1, #391	; 0x187
    14e4:	cmp	r0, r1
    14e8:	movcs	r0, #0
    14ec:	strbcs	r0, [r5, #390]	; 0x186
    14f0:	mov	r0, r5
    14f4:	mov	r1, #124	; 0x7c
    14f8:	bl	c54 <strchr@plt>
    14fc:	cmp	r0, #0
    1500:	beq	15bc <apply_dline+0x270>
    1504:	mov	r6, r0
    1508:	mov	r0, #0
    150c:	strb	r0, [r6]
    1510:	ldrb	r0, [r6, #1]!
    1514:	cmp	r0, #0
    1518:	beq	1528 <apply_dline+0x1dc>
    151c:	mov	r0, r6
    1520:	bl	182c <rb_strdup>
    1524:	str	r0, [r7, #24]
    1528:	cmp	r8, #1
    152c:	blt	15c8 <apply_dline+0x27c>
    1530:	bl	b7c <rb_current_time@plt>
    1534:	add	r0, r0, r8
    1538:	str	r0, [r7, #36]	; 0x24
    153c:	mov	r0, r7
    1540:	bl	c0c <add_temp_dline@plt>
    1544:	cmp	r6, #0
    1548:	movw	sl, #34953	; 0x8889
    154c:	movt	sl, #34952	; 0x8888
    1550:	beq	1678 <apply_dline+0x32c>
    1554:	ldrb	r0, [r6]
    1558:	cmp	r0, #0
    155c:	beq	1678 <apply_dline+0x32c>
    1560:	mov	r0, r4
    1564:	bl	bdc <get_oper_name@plt>
    1568:	mov	r3, r0
    156c:	ldr	r0, [r7, #16]
    1570:	umull	r1, r2, r8, sl
    1574:	lsr	r9, r2, #5
    1578:	str	r9, [sp]
    157c:	stmib	sp, {r0, r5, r6}
    1580:	ldr	r2, [pc, #644]	; 180c <apply_dline+0x4c0>
    1584:	add	r2, pc, r2
    1588:	mov	r0, #256	; 0x100
    158c:	mov	r1, #0
    1590:	bl	bc4 <sendto_realops_snomask@plt>
    1594:	mov	r0, r4
    1598:	bl	bdc <get_oper_name@plt>
    159c:	mov	r2, r0
    15a0:	ldr	r0, [r7, #16]
    15a4:	stm	sp, {r0, r5, r6}
    15a8:	ldr	r1, [pc, #608]	; 1810 <apply_dline+0x4c4>
    15ac:	add	r1, pc, r1
    15b0:	mov	r0, #7
    15b4:	mov	r3, r9
    15b8:	b	16d0 <apply_dline+0x384>
    15bc:	mov	r6, #0
    15c0:	cmp	r8, #1
    15c4:	bge	1530 <apply_dline+0x1e4>
    15c8:	ldr	r0, [r7, #16]
    15cc:	str	r7, [sp]
    15d0:	mov	r8, #0
    15d4:	mov	r1, #131072	; 0x20000
    15d8:	mov	r2, #0
    15dc:	mov	r3, #0
    15e0:	bl	c30 <add_conf_by_address@plt>
    15e4:	ldr	r2, [r7, #16]
    15e8:	ldr	r1, [r7, #24]
    15ec:	cmp	r1, #0
    15f0:	mov	r0, #0
    15f4:	beq	1604 <apply_dline+0x2b8>
    15f8:	ldrb	r0, [r1]
    15fc:	cmp	r0, #0
    1600:	movne	r0, r1
    1604:	str	r5, [sp]
    1608:	stmib	sp, {r0, r8}
    160c:	mov	r0, #1
    1610:	mov	r1, r4
    1614:	mov	r3, #0
    1618:	bl	bd0 <bandb_add@plt>
    161c:	cmp	r6, #0
    1620:	beq	1710 <apply_dline+0x3c4>
    1624:	ldrb	r0, [r6]
    1628:	cmp	r0, #0
    162c:	beq	1710 <apply_dline+0x3c4>
    1630:	mov	r0, r4
    1634:	bl	bdc <get_oper_name@plt>
    1638:	mov	r3, r0
    163c:	ldr	r0, [r7, #16]
    1640:	stm	sp, {r0, r5, r6}
    1644:	ldr	r2, [pc, #472]	; 1824 <apply_dline+0x4d8>
    1648:	add	r2, pc, r2
    164c:	mov	r0, #256	; 0x100
    1650:	mov	r1, #0
    1654:	bl	bc4 <sendto_realops_snomask@plt>
    1658:	mov	r0, r4
    165c:	bl	bdc <get_oper_name@plt>
    1660:	mov	r2, r0
    1664:	ldr	r3, [r7, #16]
    1668:	stm	sp, {r5, r6}
    166c:	ldr	r1, [pc, #436]	; 1828 <apply_dline+0x4dc>
    1670:	add	r1, pc, r1
    1674:	b	1754 <apply_dline+0x408>
    1678:	mov	r0, r4
    167c:	bl	bdc <get_oper_name@plt>
    1680:	mov	r3, r0
    1684:	ldr	r0, [r7, #16]
    1688:	umull	r1, r2, r8, sl
    168c:	lsr	r6, r2, #5
    1690:	str	r6, [sp]
    1694:	stmib	sp, {r0, r5}
    1698:	ldr	r2, [pc, #356]	; 1804 <apply_dline+0x4b8>
    169c:	add	r2, pc, r2
    16a0:	mov	r0, #256	; 0x100
    16a4:	mov	r1, #0
    16a8:	bl	bc4 <sendto_realops_snomask@plt>
    16ac:	mov	r0, r4
    16b0:	bl	bdc <get_oper_name@plt>
    16b4:	mov	r2, r0
    16b8:	ldr	r0, [r7, #16]
    16bc:	stm	sp, {r0, r5}
    16c0:	ldr	r1, [pc, #320]	; 1808 <apply_dline+0x4bc>
    16c4:	add	r1, pc, r1
    16c8:	mov	r0, #7
    16cc:	mov	r3, r6
    16d0:	bl	c6c <ilog@plt>
    16d4:	ldr	r0, [r7, #16]
    16d8:	umull	r1, r2, r8, sl
    16dc:	lsr	r1, r2, #5
    16e0:	str	r1, [sp]
    16e4:	str	r0, [sp, #4]
    16e8:	add	r3, r4, #88	; 0x58
    16ec:	ldr	r0, [pc, #288]	; 1814 <apply_dline+0x4c8>
    16f0:	ldr	r0, [pc, r0]
    16f4:	add	r2, r0, #88	; 0x58
    16f8:	ldr	r1, [pc, #280]	; 1818 <apply_dline+0x4cc>
    16fc:	add	r1, pc, r1
    1700:	mov	r0, r4
    1704:	bl	ba0 <sendto_one@plt>
    1708:	sub	sp, fp, #28
    170c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1710:	mov	r0, r4
    1714:	bl	bdc <get_oper_name@plt>
    1718:	mov	r3, r0
    171c:	ldr	r0, [r7, #16]
    1720:	stm	sp, {r0, r5}
    1724:	ldr	r2, [pc, #240]	; 181c <apply_dline+0x4d0>
    1728:	add	r2, pc, r2
    172c:	mov	r0, #256	; 0x100
    1730:	mov	r1, #0
    1734:	bl	bc4 <sendto_realops_snomask@plt>
    1738:	mov	r0, r4
    173c:	bl	bdc <get_oper_name@plt>
    1740:	mov	r2, r0
    1744:	ldr	r3, [r7, #16]
    1748:	str	r5, [sp]
    174c:	ldr	r1, [pc, #204]	; 1820 <apply_dline+0x4d4>
    1750:	add	r1, pc, r1
    1754:	mov	r0, #7
    1758:	bl	c6c <ilog@plt>
    175c:	sub	sp, fp, #28
    1760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1764:	ldr	r1, [r7, #16]
    1768:	ldr	r2, [r7, #20]
    176c:	ldr	r0, [pc, #124]	; 17f0 <apply_dline+0x4a4>
    1770:	add	r0, pc, r0
    1774:	cmp	r2, #0
    1778:	movne	r0, r2
    177c:	add	r3, r4, #88	; 0x58
    1780:	ldrb	r2, [r7, #4]
    1784:	tst	r2, #64	; 0x40
    1788:	bne	17b0 <apply_dline+0x464>
    178c:	str	r6, [sp]
    1790:	str	r1, [sp, #4]
    1794:	str	r0, [sp, #8]
    1798:	ldr	r0, [pc, #92]	; 17fc <apply_dline+0x4b0>
    179c:	ldr	r0, [pc, r0]
    17a0:	add	r2, r0, #88	; 0x58
    17a4:	ldr	r1, [pc, #84]	; 1800 <apply_dline+0x4b4>
    17a8:	add	r1, pc, r1
    17ac:	b	1700 <apply_dline+0x3b4>
    17b0:	str	r6, [sp]
    17b4:	str	r1, [sp, #4]
    17b8:	str	r0, [sp, #8]
    17bc:	ldr	r0, [pc, #48]	; 17f4 <apply_dline+0x4a8>
    17c0:	ldr	r0, [pc, r0]
    17c4:	add	r2, r0, #88	; 0x58
    17c8:	ldr	r1, [pc, #40]	; 17f8 <apply_dline+0x4ac>
    17cc:	add	r1, pc, r1
    17d0:	b	1700 <apply_dline+0x3b4>
    17d4:	.word	0x00011ca0
    17d8:	.word	0x00000812
    17dc:	.word	0x00000898
    17e0:	.word	0x00000877
    17e4:	.word	0x00000869
    17e8:	.word	0x0000086c
    17ec:	.word	0x00011c6c
    17f0:	.word	0x0000055a
    17f4:	.word	0x000118e8
    17f8:	.word	0x0000050a
    17fc:	.word	0x0001190c
    1800:	.word	0x0000055d
    1804:	.word	0x0000069a
    1808:	.word	0x000006a2
    180c:	.word	0x000007f0
    1810:	.word	0x000007fb
    1814:	.word	0x000119b8
    1818:	.word	0x000006bc
    181c:	.word	0x000006c7
    1820:	.word	0x000006bd
    1824:	.word	0x000007d2
    1828:	.word	0x000007cb

0000182c <rb_strdup>:
    182c:	push	{r4, sl, fp, lr}
    1830:	add	fp, sp, #8
    1834:	mov	r4, r0
    1838:	bl	c48 <strlen@plt>
    183c:	add	r0, r0, #1
    1840:	bl	c24 <malloc@plt>
    1844:	cmp	r0, #0
    1848:	beq	1858 <rb_strdup+0x2c>
    184c:	mov	r1, r4
    1850:	pop	{r4, sl, fp, lr}
    1854:	b	c00 <strcpy@plt>
    1858:	bl	bac <rb_outofmemory@plt>

0000185c <apply_undline>:
    185c:	push	{r4, r5, r6, sl, fp, lr}
    1860:	add	fp, sp, #16
    1864:	sub	sp, sp, #520	; 0x208
    1868:	mov	r6, r1
    186c:	mov	r4, r0
    1870:	mov	r0, r1
    1874:	mov	r1, #0
    1878:	mov	r2, #0
    187c:	bl	bb8 <parse_netmask@plt>
    1880:	orr	r0, r0, #1
    1884:	cmp	r0, #3
    1888:	bne	193c <apply_undline+0xe0>
    188c:	mov	r0, r6
    1890:	mov	r1, #131072	; 0x20000
    1894:	mov	r2, #0
    1898:	bl	cc0 <find_exact_conf_by_address@plt>
    189c:	cmp	r0, #0
    18a0:	beq	1948 <apply_undline+0xec>
    18a4:	mov	r5, r0
    18a8:	ldr	r1, [r0, #16]
    18ac:	add	r6, sp, #8
    18b0:	mov	r0, r6
    18b4:	mov	r2, #512	; 0x200
    18b8:	bl	ccc <rb_strlcpy@plt>
    18bc:	mov	r0, r5
    18c0:	bl	1a20 <remove_temp_dline>
    18c4:	cmp	r0, #0
    18c8:	beq	1964 <apply_undline+0x108>
    18cc:	str	r6, [sp]
    18d0:	add	r3, r4, #88	; 0x58
    18d4:	ldr	r0, [pc, #292]	; 1a00 <apply_undline+0x1a4>
    18d8:	ldr	r0, [pc, r0]
    18dc:	add	r2, r0, #88	; 0x58
    18e0:	ldr	r1, [pc, #284]	; 1a04 <apply_undline+0x1a8>
    18e4:	add	r1, pc, r1
    18e8:	mov	r0, r4
    18ec:	bl	ba0 <sendto_one@plt>
    18f0:	mov	r0, r4
    18f4:	bl	bdc <get_oper_name@plt>
    18f8:	mov	r3, r0
    18fc:	str	r6, [sp]
    1900:	ldr	r2, [pc, #256]	; 1a08 <apply_undline+0x1ac>
    1904:	add	r2, pc, r2
    1908:	mov	r0, #256	; 0x100
    190c:	mov	r1, #0
    1910:	bl	bc4 <sendto_realops_snomask@plt>
    1914:	mov	r0, r4
    1918:	bl	bdc <get_oper_name@plt>
    191c:	mov	r2, r0
    1920:	ldr	r1, [pc, #228]	; 1a0c <apply_undline+0x1b0>
    1924:	add	r1, pc, r1
    1928:	mov	r0, #7
    192c:	mov	r3, r6
    1930:	bl	c6c <ilog@plt>
    1934:	sub	sp, fp, #16
    1938:	pop	{r4, r5, r6, sl, fp, pc}
    193c:	ldr	r1, [pc, #180]	; 19f8 <apply_undline+0x19c>
    1940:	add	r1, pc, r1
    1944:	b	1950 <apply_undline+0xf4>
    1948:	ldr	r1, [pc, #172]	; 19fc <apply_undline+0x1a0>
    194c:	add	r1, pc, r1
    1950:	mov	r0, r4
    1954:	mov	r2, r6
    1958:	bl	c9c <sendto_one_notice@plt>
    195c:	sub	sp, fp, #16
    1960:	pop	{r4, r5, r6, sl, fp, pc}
    1964:	ldr	r1, [r5, #16]
    1968:	mov	r0, #1
    196c:	mov	r2, #0
    1970:	bl	ca8 <bandb_del@plt>
    1974:	ldr	r0, [r5, #16]
    1978:	str	r0, [sp]
    197c:	add	r3, r4, #88	; 0x58
    1980:	ldr	r0, [pc, #136]	; 1a10 <apply_undline+0x1b4>
    1984:	ldr	r0, [pc, r0]
    1988:	add	r2, r0, #88	; 0x58
    198c:	ldr	r1, [pc, #128]	; 1a14 <apply_undline+0x1b8>
    1990:	add	r1, pc, r1
    1994:	mov	r0, r4
    1998:	bl	ba0 <sendto_one@plt>
    199c:	mov	r0, r4
    19a0:	bl	bdc <get_oper_name@plt>
    19a4:	mov	r3, r0
    19a8:	ldr	r0, [r5, #16]
    19ac:	str	r0, [sp]
    19b0:	ldr	r2, [pc, #96]	; 1a18 <apply_undline+0x1bc>
    19b4:	add	r2, pc, r2
    19b8:	mov	r0, #256	; 0x100
    19bc:	mov	r1, #0
    19c0:	bl	bc4 <sendto_realops_snomask@plt>
    19c4:	mov	r0, r4
    19c8:	bl	bdc <get_oper_name@plt>
    19cc:	mov	r2, r0
    19d0:	ldr	r3, [r5, #16]
    19d4:	ldr	r1, [pc, #64]	; 1a1c <apply_undline+0x1c0>
    19d8:	add	r1, pc, r1
    19dc:	mov	r0, #7
    19e0:	bl	c6c <ilog@plt>
    19e4:	ldr	r0, [r5, #16]
    19e8:	mov	r1, r5
    19ec:	bl	c60 <delete_one_address_conf@plt>
    19f0:	sub	sp, fp, #16
    19f4:	pop	{r4, r5, r6, sl, fp, pc}
    19f8:	.word	0x00000288
    19fc:	.word	0x0000051b
    1a00:	.word	0x000117d0
    1a04:	.word	0x00000595
    1a08:	.word	0x000005aa
    1a0c:	.word	0x000005b8
    1a10:	.word	0x00011724
    1a14:	.word	0x00000555
    1a18:	.word	0x0000055b
    1a1c:	.word	0x00000504

00001a20 <remove_temp_dline>:
    1a20:	push	{r4, r5, fp, lr}
    1a24:	add	fp, sp, #8
    1a28:	mov	r4, r0
    1a2c:	mov	r0, #0
    1a30:	ldr	r2, [pc, #108]	; 1aa4 <remove_temp_dline+0x84>
    1a34:	ldr	r2, [pc, r2]
    1a38:	b	1a48 <remove_temp_dline+0x28>
    1a3c:	add	r0, r0, #1
    1a40:	cmp	r0, #4
    1a44:	beq	1a9c <remove_temp_dline+0x7c>
    1a48:	add	r3, r0, r0, lsl #1
    1a4c:	mov	r1, r2
    1a50:	ldr	r5, [r1, r3, lsl #2]!
    1a54:	cmp	r5, #0
    1a58:	beq	1a3c <remove_temp_dline+0x1c>
    1a5c:	ldr	r3, [r5]
    1a60:	cmp	r3, r4
    1a64:	beq	1a78 <remove_temp_dline+0x58>
    1a68:	ldr	r5, [r5, #8]
    1a6c:	cmp	r5, #0
    1a70:	bne	1a5c <remove_temp_dline+0x3c>
    1a74:	b	1a3c <remove_temp_dline+0x1c>
    1a78:	mov	r0, r5
    1a7c:	bl	1aa8 <rb_dlinkDelete>
    1a80:	mov	r0, r5
    1a84:	bl	be8 <rb_free_rb_dlink_node@plt>
    1a88:	ldr	r0, [r4, #16]
    1a8c:	mov	r1, r4
    1a90:	bl	c60 <delete_one_address_conf@plt>
    1a94:	mov	r0, #1
    1a98:	pop	{r4, r5, fp, pc}
    1a9c:	mov	r0, #0
    1aa0:	pop	{r4, r5, fp, pc}
    1aa4:	.word	0x0001166c

00001aa8 <rb_dlinkDelete>:
    1aa8:	push	{fp, lr}
    1aac:	mov	fp, sp
    1ab0:	cmp	r0, #0
    1ab4:	beq	1b08 <rb_dlinkDelete+0x60>
    1ab8:	cmp	r1, #0
    1abc:	beq	1b28 <rb_dlinkDelete+0x80>
    1ac0:	ldr	ip, [r0, #4]
    1ac4:	ldr	r3, [r0, #8]
    1ac8:	add	r2, r3, #4
    1acc:	cmp	r3, #0
    1ad0:	addeq	r2, r1, #4
    1ad4:	str	ip, [r2]
    1ad8:	ldmib	r0, {r2, ip}
    1adc:	cmp	r2, #0
    1ae0:	mov	r3, r1
    1ae4:	addne	r3, r2, #8
    1ae8:	str	ip, [r3]
    1aec:	mov	r2, #0
    1af0:	str	r2, [r0, #4]
    1af4:	str	r2, [r0, #8]
    1af8:	ldr	r0, [r1, #8]
    1afc:	sub	r0, r0, #1
    1b00:	str	r0, [r1, #8]
    1b04:	pop	{fp, pc}
    1b08:	ldr	r0, [pc, #56]	; 1b48 <rb_dlinkDelete+0xa0>
    1b0c:	add	r0, pc, r0
    1b10:	ldr	r1, [pc, #52]	; 1b4c <rb_dlinkDelete+0xa4>
    1b14:	add	r1, pc, r1
    1b18:	ldr	r3, [pc, #48]	; 1b50 <rb_dlinkDelete+0xa8>
    1b1c:	add	r3, pc, r3
    1b20:	mov	r2, #235	; 0xeb
    1b24:	bl	d08 <__assert_fail@plt>
    1b28:	ldr	r0, [pc, #36]	; 1b54 <rb_dlinkDelete+0xac>
    1b2c:	add	r0, pc, r0
    1b30:	ldr	r1, [pc, #32]	; 1b58 <rb_dlinkDelete+0xb0>
    1b34:	add	r1, pc, r1
    1b38:	ldr	r3, [pc, #28]	; 1b5c <rb_dlinkDelete+0xb4>
    1b3c:	add	r3, pc, r3
    1b40:	mov	r2, #236	; 0xec
    1b44:	bl	d08 <__assert_fail@plt>
    1b48:	.word	0x00000427
    1b4c:	.word	0x00000429
    1b50:	.word	0x0000043d
    1b54:	.word	0x00000463
    1b58:	.word	0x00000409
    1b5c:	.word	0x0000041d

Disassembly of section .fini:

00001b60 <_fini>:
    1b60:	push	{r3, lr}
    1b64:	pop	{r3, pc}
