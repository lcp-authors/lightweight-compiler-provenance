
../repos/coreutils/src/mktemp:     file format elf32-littlearm


Disassembly of section .init:

00010e40 <.init>:
   10e40:	push	{r3, lr}
   10e44:	bl	11124 <__mempcpy_chk@plt+0x48>
   10e48:	pop	{r3, pc}

Disassembly of section .plt:

00010e4c <calloc@plt-0x14>:
   10e4c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e50:	ldr	lr, [pc, #4]	; 10e5c <calloc@plt-0x4>
   10e54:	add	lr, pc, lr
   10e58:	ldr	pc, [lr, #8]!
   10e5c:	andeq	r5, r1, r4, lsr #3

00010e60 <calloc@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #420]!	; 0x1a4

00010e6c <fputs_unlocked@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #412]!	; 0x19c

00010e78 <raise@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #404]!	; 0x194

00010e84 <strcmp@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #396]!	; 0x18c

00010e90 <fflush@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #388]!	; 0x184

00010e9c <free@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #380]!	; 0x17c

00010ea8 <clock_gettime@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #372]!	; 0x174

00010eb4 <_exit@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #364]!	; 0x16c

00010ec0 <memcpy@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #356]!	; 0x164

00010ecc <mbsinit@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #348]!	; 0x15c

00010ed8 <dcgettext@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #340]!	; 0x154

00010ee4 <realloc@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #332]!	; 0x14c

00010ef0 <textdomain@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #324]!	; 0x144

00010efc <iswprint@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #316]!	; 0x13c

00010f08 <lseek64@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #308]!	; 0x134

00010f14 <__ctype_get_mb_cur_max@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #300]!	; 0x12c

00010f20 <__fpending@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #292]!	; 0x124

00010f2c <ferror_unlocked@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #284]!	; 0x11c

00010f38 <mbrtowc@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #276]!	; 0x114

00010f44 <error@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #268]!	; 0x10c

00010f50 <open64@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #260]!	; 0x104

00010f5c <getenv@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #252]!	; 0xfc

00010f68 <puts@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #244]!	; 0xf4

00010f74 <malloc@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #236]!	; 0xec

00010f80 <__libc_start_main@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #228]!	; 0xe4

00010f8c <__freading@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #220]!	; 0xdc

00010f98 <__gmon_start__@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #212]!	; 0xd4

00010fa4 <getopt_long@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #204]!	; 0xcc

00010fb0 <__ctype_b_loc@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #196]!	; 0xc4

00010fbc <exit@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #188]!	; 0xbc

00010fc8 <bcmp@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #180]!	; 0xb4

00010fd4 <strlen@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #172]!	; 0xac

00010fe0 <__errno_location@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #164]!	; 0xa4

00010fec <__cxa_atexit@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #156]!	; 0x9c

00010ff8 <mkdir@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #148]!	; 0x94

00011004 <memset@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #140]!	; 0x8c

00011010 <__printf_chk@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #132]!	; 0x84

0001101c <fileno@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #86016	; 0x15000
   11024:	ldr	pc, [ip, #124]!	; 0x7c

00011028 <__fprintf_chk@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #86016	; 0x15000
   11030:	ldr	pc, [ip, #116]!	; 0x74

00011034 <fclose@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #86016	; 0x15000
   1103c:	ldr	pc, [ip, #108]!	; 0x6c

00011040 <fseeko64@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #86016	; 0x15000
   11048:	ldr	pc, [ip, #100]!	; 0x64

0001104c <setlocale@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #86016	; 0x15000
   11054:	ldr	pc, [ip, #92]!	; 0x5c

00011058 <strrchr@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #86016	; 0x15000
   11060:	ldr	pc, [ip, #84]!	; 0x54

00011064 <nl_langinfo@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #86016	; 0x15000
   1106c:	ldr	pc, [ip, #76]!	; 0x4c

00011070 <remove@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #86016	; 0x15000
   11078:	ldr	pc, [ip, #68]!	; 0x44

0001107c <bindtextdomain@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #86016	; 0x15000
   11084:	ldr	pc, [ip, #60]!	; 0x3c

00011088 <getrandom@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #86016	; 0x15000
   11090:	ldr	pc, [ip, #52]!	; 0x34

00011094 <fputs@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #86016	; 0x15000
   1109c:	ldr	pc, [ip, #44]!	; 0x2c

000110a0 <strncmp@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #86016	; 0x15000
   110a8:	ldr	pc, [ip, #36]!	; 0x24

000110ac <abort@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #86016	; 0x15000
   110b4:	ldr	pc, [ip, #28]!

000110b8 <close@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #86016	; 0x15000
   110c0:	ldr	pc, [ip, #20]!

000110c4 <__lxstat64@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #86016	; 0x15000
   110cc:	ldr	pc, [ip, #12]!

000110d0 <strspn@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #86016	; 0x15000
   110d8:	ldr	pc, [ip, #4]!

000110dc <__mempcpy_chk@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #20, 20	; 0x14000
   110e4:	ldr	pc, [ip, #4092]!	; 0xffc

Disassembly of section .text:

000110e8 <.text>:
   110e8:	mov	fp, #0
   110ec:	mov	lr, #0
   110f0:	pop	{r1}		; (ldr r1, [sp], #4)
   110f4:	mov	r2, sp
   110f8:	push	{r2}		; (str r2, [sp, #-4]!)
   110fc:	push	{r0}		; (str r0, [sp, #-4]!)
   11100:	ldr	ip, [pc, #16]	; 11118 <__mempcpy_chk@plt+0x3c>
   11104:	push	{ip}		; (str ip, [sp, #-4]!)
   11108:	ldr	r0, [pc, #12]	; 1111c <__mempcpy_chk@plt+0x40>
   1110c:	ldr	r3, [pc, #12]	; 11120 <__mempcpy_chk@plt+0x44>
   11110:	bl	10f80 <__libc_start_main@plt>
   11114:	bl	110ac <abort@plt>
   11118:	andeq	r4, r1, ip, lsr #24
   1111c:	muleq	r1, r8, r4
   11120:	andeq	r4, r1, ip, asr #23
   11124:	ldr	r3, [pc, #20]	; 11140 <__mempcpy_chk@plt+0x64>
   11128:	ldr	r2, [pc, #20]	; 11144 <__mempcpy_chk@plt+0x68>
   1112c:	add	r3, pc, r3
   11130:	ldr	r2, [r3, r2]
   11134:	cmp	r2, #0
   11138:	bxeq	lr
   1113c:	b	10f98 <__gmon_start__@plt>
   11140:	andeq	r4, r1, ip, asr #29
   11144:	andeq	r0, r0, r4, ror #1
   11148:	ldr	r0, [pc, #24]	; 11168 <__mempcpy_chk@plt+0x8c>
   1114c:	ldr	r3, [pc, #24]	; 1116c <__mempcpy_chk@plt+0x90>
   11150:	cmp	r3, r0
   11154:	bxeq	lr
   11158:	ldr	r3, [pc, #16]	; 11170 <__mempcpy_chk@plt+0x94>
   1115c:	cmp	r3, #0
   11160:	bxeq	lr
   11164:	bx	r3
   11168:	andeq	r6, r2, r8, lsr r1
   1116c:	andeq	r6, r2, r8, lsr r1
   11170:	andeq	r0, r0, r0
   11174:	ldr	r0, [pc, #36]	; 111a0 <__mempcpy_chk@plt+0xc4>
   11178:	ldr	r1, [pc, #36]	; 111a4 <__mempcpy_chk@plt+0xc8>
   1117c:	sub	r1, r1, r0
   11180:	asr	r1, r1, #2
   11184:	add	r1, r1, r1, lsr #31
   11188:	asrs	r1, r1, #1
   1118c:	bxeq	lr
   11190:	ldr	r3, [pc, #16]	; 111a8 <__mempcpy_chk@plt+0xcc>
   11194:	cmp	r3, #0
   11198:	bxeq	lr
   1119c:	bx	r3
   111a0:	andeq	r6, r2, r8, lsr r1
   111a4:	andeq	r6, r2, r8, lsr r1
   111a8:	andeq	r0, r0, r0
   111ac:	push	{r4, lr}
   111b0:	ldr	r4, [pc, #24]	; 111d0 <__mempcpy_chk@plt+0xf4>
   111b4:	ldrb	r3, [r4]
   111b8:	cmp	r3, #0
   111bc:	popne	{r4, pc}
   111c0:	bl	11148 <__mempcpy_chk@plt+0x6c>
   111c4:	mov	r3, #1
   111c8:	strb	r3, [r4]
   111cc:	pop	{r4, pc}
   111d0:	andeq	r6, r2, r4, asr r1
   111d4:	b	11174 <__mempcpy_chk@plt+0x98>
   111d8:	push	{fp, lr}
   111dc:	mov	fp, sp
   111e0:	sub	sp, sp, #56	; 0x38
   111e4:	mov	r8, r0
   111e8:	cmp	r0, #0
   111ec:	bne	11458 <__mempcpy_chk@plt+0x37c>
   111f0:	movw	r1, #19595	; 0x4c8b
   111f4:	mov	r0, #0
   111f8:	mov	r2, #5
   111fc:	movt	r1, #1
   11200:	bl	10ed8 <dcgettext@plt>
   11204:	mov	r1, r0
   11208:	movw	r0, #24928	; 0x6160
   1120c:	movt	r0, #2
   11210:	ldr	r2, [r0]
   11214:	mov	r0, #1
   11218:	bl	11010 <__printf_chk@plt>
   1121c:	movw	r1, #19629	; 0x4cad
   11220:	mov	r0, #0
   11224:	mov	r2, #5
   11228:	movt	r1, #1
   1122c:	bl	10ed8 <dcgettext@plt>
   11230:	movw	r9, #24908	; 0x614c
   11234:	movt	r9, #2
   11238:	ldr	r1, [r9]
   1123c:	bl	10e6c <fputs_unlocked@plt>
   11240:	movw	r1, #19840	; 0x4d80
   11244:	mov	r0, #0
   11248:	mov	r2, #5
   1124c:	movt	r1, #1
   11250:	bl	10ed8 <dcgettext@plt>
   11254:	ldr	r1, [r9]
   11258:	bl	10e6c <fputs_unlocked@plt>
   1125c:	ldr	r1, [r9]
   11260:	movw	r0, #21698	; 0x54c2
   11264:	movt	r0, #1
   11268:	bl	10e6c <fputs_unlocked@plt>
   1126c:	movw	r1, #19914	; 0x4dca
   11270:	mov	r0, #0
   11274:	mov	r2, #5
   11278:	movt	r1, #1
   1127c:	bl	10ed8 <dcgettext@plt>
   11280:	ldr	r1, [r9]
   11284:	bl	10e6c <fputs_unlocked@plt>
   11288:	movw	r1, #20118	; 0x4e96
   1128c:	mov	r0, #0
   11290:	mov	r2, #5
   11294:	movt	r1, #1
   11298:	bl	10ed8 <dcgettext@plt>
   1129c:	ldr	r1, [r9]
   112a0:	bl	10e6c <fputs_unlocked@plt>
   112a4:	movw	r1, #20274	; 0x4f32
   112a8:	mov	r0, #0
   112ac:	mov	r2, #5
   112b0:	movt	r1, #1
   112b4:	bl	10ed8 <dcgettext@plt>
   112b8:	ldr	r1, [r9]
   112bc:	bl	10e6c <fputs_unlocked@plt>
   112c0:	movw	r1, #20637	; 0x509d
   112c4:	mov	r0, #0
   112c8:	mov	r2, #5
   112cc:	movt	r1, #1
   112d0:	bl	10ed8 <dcgettext@plt>
   112d4:	ldr	r1, [r9]
   112d8:	bl	10e6c <fputs_unlocked@plt>
   112dc:	movw	r1, #20862	; 0x517e
   112e0:	mov	r0, #0
   112e4:	mov	r2, #5
   112e8:	movt	r1, #1
   112ec:	bl	10ed8 <dcgettext@plt>
   112f0:	ldr	r1, [r9]
   112f4:	bl	10e6c <fputs_unlocked@plt>
   112f8:	movw	r1, #20907	; 0x51ab
   112fc:	mov	r0, #0
   11300:	mov	r2, #5
   11304:	movt	r1, #1
   11308:	bl	10ed8 <dcgettext@plt>
   1130c:	ldr	r1, [r9]
   11310:	bl	10e6c <fputs_unlocked@plt>
   11314:	movw	r0, #21896	; 0x5588
   11318:	mov	r6, sp
   1131c:	movt	r0, #1
   11320:	mov	r1, r6
   11324:	ldm	r0!, {r2, r3, r4, r5}
   11328:	stmia	r1!, {r2, r3, r4, r5}
   1132c:	ldm	r0!, {r2, r3, r4, r5, r7}
   11330:	stmia	r1!, {r2, r3, r4, r5, r7}
   11334:	ldm	r0, {r2, r3, r4, r5, r7}
   11338:	stm	r1, {r2, r3, r4, r5, r7}
   1133c:	movw	r1, #21389	; 0x538d
   11340:	movw	r5, #20961	; 0x51e1
   11344:	movt	r1, #1
   11348:	movt	r5, #1
   1134c:	mov	r0, r5
   11350:	bl	10e84 <strcmp@plt>
   11354:	cmp	r0, #0
   11358:	ldrne	r1, [r6, #8]!
   1135c:	cmpne	r1, #0
   11360:	bne	1134c <__mempcpy_chk@plt+0x270>
   11364:	movw	r1, #21484	; 0x53ec
   11368:	ldr	r6, [r6, #4]
   1136c:	mov	r0, #0
   11370:	mov	r2, #5
   11374:	movt	r1, #1
   11378:	bl	10ed8 <dcgettext@plt>
   1137c:	movw	r2, #21000	; 0x5208
   11380:	movw	r3, #21507	; 0x5403
   11384:	mov	r1, r0
   11388:	mov	r0, #1
   1138c:	movt	r2, #1
   11390:	movt	r3, #1
   11394:	bl	11010 <__printf_chk@plt>
   11398:	cmp	r6, #0
   1139c:	mov	r0, #5
   113a0:	mov	r1, #0
   113a4:	moveq	r6, r5
   113a8:	bl	1104c <setlocale@plt>
   113ac:	cmp	r0, #0
   113b0:	beq	113e8 <__mempcpy_chk@plt+0x30c>
   113b4:	movw	r1, #21547	; 0x542b
   113b8:	mov	r2, #3
   113bc:	movt	r1, #1
   113c0:	bl	110a0 <strncmp@plt>
   113c4:	cmp	r0, #0
   113c8:	beq	113e8 <__mempcpy_chk@plt+0x30c>
   113cc:	movw	r1, #21551	; 0x542f
   113d0:	mov	r0, #0
   113d4:	mov	r2, #5
   113d8:	movt	r1, #1
   113dc:	bl	10ed8 <dcgettext@plt>
   113e0:	ldr	r1, [r9]
   113e4:	bl	10e6c <fputs_unlocked@plt>
   113e8:	movw	r1, #21622	; 0x5476
   113ec:	mov	r0, #0
   113f0:	mov	r2, #5
   113f4:	movt	r1, #1
   113f8:	bl	10ed8 <dcgettext@plt>
   113fc:	movw	r2, #21507	; 0x5403
   11400:	mov	r1, r0
   11404:	mov	r0, #1
   11408:	mov	r3, r5
   1140c:	movt	r2, #1
   11410:	bl	11010 <__printf_chk@plt>
   11414:	movw	r1, #21649	; 0x5491
   11418:	mov	r0, #0
   1141c:	mov	r2, #5
   11420:	movt	r1, #1
   11424:	bl	10ed8 <dcgettext@plt>
   11428:	mov	r1, r0
   1142c:	movw	r0, #21417	; 0x53a9
   11430:	movw	r3, #21699	; 0x54c3
   11434:	cmp	r6, r5
   11438:	mov	r2, r6
   1143c:	movt	r0, #1
   11440:	movt	r3, #1
   11444:	moveq	r3, r0
   11448:	mov	r0, #1
   1144c:	bl	11010 <__printf_chk@plt>
   11450:	mov	r0, r8
   11454:	bl	10fbc <exit@plt>
   11458:	movw	r0, #24904	; 0x6148
   1145c:	movw	r1, #19556	; 0x4c64
   11460:	mov	r2, #5
   11464:	movt	r0, #2
   11468:	movt	r1, #1
   1146c:	ldr	r5, [r0]
   11470:	mov	r0, #0
   11474:	bl	10ed8 <dcgettext@plt>
   11478:	mov	r2, r0
   1147c:	movw	r0, #24928	; 0x6160
   11480:	mov	r1, #1
   11484:	movt	r0, #2
   11488:	ldr	r3, [r0]
   1148c:	mov	r0, r5
   11490:	bl	11028 <__fprintf_chk@plt>
   11494:	b	11450 <__mempcpy_chk@plt+0x374>
   11498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1149c:	add	fp, sp, #28
   114a0:	sub	sp, sp, #36	; 0x24
   114a4:	mov	r5, r0
   114a8:	ldr	r0, [r1]
   114ac:	mov	r4, r1
   114b0:	bl	12018 <__mempcpy_chk@plt+0xf3c>
   114b4:	movw	r1, #21699	; 0x54c3
   114b8:	mov	r0, #6
   114bc:	movt	r1, #1
   114c0:	bl	1104c <setlocale@plt>
   114c4:	movw	r6, #21004	; 0x520c
   114c8:	movw	r1, #20968	; 0x51e8
   114cc:	movt	r6, #1
   114d0:	movt	r1, #1
   114d4:	mov	r0, r6
   114d8:	bl	1107c <bindtextdomain@plt>
   114dc:	mov	r0, r6
   114e0:	bl	10ef0 <textdomain@plt>
   114e4:	movw	r0, #6928	; 0x1b10
   114e8:	movt	r0, #1
   114ec:	bl	14c30 <__mempcpy_chk@plt+0x3b54>
   114f0:	mov	r0, #0
   114f4:	movw	r8, #20992	; 0x5200
   114f8:	movw	r7, #21768	; 0x5508
   114fc:	mov	r1, #0
   11500:	mov	r6, #0
   11504:	mov	r9, #0
   11508:	str	r0, [sp, #24]
   1150c:	mov	r0, #0
   11510:	movt	r8, #1
   11514:	movt	r7, #1
   11518:	str	r1, [sp, #20]
   1151c:	str	r0, [sp, #16]
   11520:	mov	r0, #0
   11524:	str	r0, [sp, #28]
   11528:	mov	r0, #0
   1152c:	str	r0, [sp, #32]
   11530:	mov	r0, #0
   11534:	mov	sl, r0
   11538:	mov	r0, r5
   1153c:	mov	r1, r4
   11540:	mov	r2, r8
   11544:	mov	r3, r7
   11548:	str	r6, [sp]
   1154c:	bl	10fa4 <getopt_long@plt>
   11550:	cmp	r0, #99	; 0x63
   11554:	ble	115ec <__mempcpy_chk@plt+0x510>
   11558:	sub	r1, r0, #112	; 0x70
   1155c:	cmp	r1, #5
   11560:	bhi	1159c <__mempcpy_chk@plt+0x4c0>
   11564:	add	r2, pc, #4
   11568:	mov	r0, #1
   1156c:	ldr	pc, [r2, r1, lsl #2]
   11570:	andeq	r1, r1, r8, lsl #11
   11574:	andeq	r1, r1, r4, lsr r5
   11578:	andeq	r1, r1, r8, asr #21
   1157c:	andeq	r1, r1, r8, asr #21
   11580:	andeq	r1, r1, r8, asr #11
   11584:	ldrdeq	r1, [r1], -ip
   11588:	movw	r0, #24912	; 0x6150
   1158c:	movt	r0, #2
   11590:	ldr	r0, [r0]
   11594:	str	r0, [sp, #20]
   11598:	b	115d0 <__mempcpy_chk@plt+0x4f4>
   1159c:	cmp	r0, #100	; 0x64
   115a0:	bne	115b0 <__mempcpy_chk@plt+0x4d4>
   115a4:	mov	r0, #1
   115a8:	str	r0, [sp, #24]
   115ac:	b	115e4 <__mempcpy_chk@plt+0x508>
   115b0:	cmp	r0, #256	; 0x100
   115b4:	bne	11ac8 <__mempcpy_chk@plt+0x9ec>
   115b8:	movw	r0, #24912	; 0x6150
   115bc:	movt	r0, #2
   115c0:	ldr	r9, [r0]
   115c4:	b	115e4 <__mempcpy_chk@plt+0x508>
   115c8:	mov	r0, #1
   115cc:	str	r0, [sp, #16]
   115d0:	mov	r0, #1
   115d4:	str	r0, [sp, #32]
   115d8:	b	115e4 <__mempcpy_chk@plt+0x508>
   115dc:	mov	r0, #1
   115e0:	str	r0, [sp, #28]
   115e4:	mov	r0, sl
   115e8:	b	11534 <__mempcpy_chk@plt+0x458>
   115ec:	cmn	r0, #2
   115f0:	ble	119f0 <__mempcpy_chk@plt+0x914>
   115f4:	cmn	r0, #1
   115f8:	bne	11a08 <__mempcpy_chk@plt+0x92c>
   115fc:	movw	r0, #24896	; 0x6140
   11600:	movt	r0, #2
   11604:	ldr	r0, [r0]
   11608:	sub	r1, r5, r0
   1160c:	cmp	r1, #2
   11610:	bcs	11aa4 <__mempcpy_chk@plt+0x9c8>
   11614:	cmp	r1, #0
   11618:	beq	11624 <__mempcpy_chk@plt+0x548>
   1161c:	ldr	r7, [r4, r0, lsl #2]
   11620:	b	11634 <__mempcpy_chk@plt+0x558>
   11624:	movw	r7, #21751	; 0x54f7
   11628:	mov	r0, #1
   1162c:	movt	r7, #1
   11630:	str	r0, [sp, #32]
   11634:	cmp	r9, #0
   11638:	beq	116a0 <__mempcpy_chk@plt+0x5c4>
   1163c:	mov	r0, r7
   11640:	bl	10fd4 <strlen@plt>
   11644:	cmp	r0, #0
   11648:	beq	11a98 <__mempcpy_chk@plt+0x9bc>
   1164c:	mov	r5, r0
   11650:	add	r0, r0, r7
   11654:	ldrb	r0, [r0, #-1]
   11658:	cmp	r0, #88	; 0x58
   1165c:	bne	11a98 <__mempcpy_chk@plt+0x9bc>
   11660:	mov	r0, r9
   11664:	bl	10fd4 <strlen@plt>
   11668:	add	r6, r0, #1
   1166c:	mov	r8, r0
   11670:	add	r0, r6, r5
   11674:	bl	1436c <__mempcpy_chk@plt+0x3290>
   11678:	mov	r1, r7
   1167c:	mov	r2, r5
   11680:	mov	r4, r0
   11684:	bl	10ec0 <memcpy@plt>
   11688:	add	r7, r4, r5
   1168c:	mov	r1, r9
   11690:	mov	r2, r6
   11694:	mov	r0, r7
   11698:	bl	10ec0 <memcpy@plt>
   1169c:	b	116dc <__mempcpy_chk@plt+0x600>
   116a0:	mov	r0, r7
   116a4:	bl	14730 <__mempcpy_chk@plt+0x3654>
   116a8:	mov	r1, #88	; 0x58
   116ac:	mov	r4, r0
   116b0:	bl	11058 <strrchr@plt>
   116b4:	cmp	r0, #0
   116b8:	beq	116c4 <__mempcpy_chk@plt+0x5e8>
   116bc:	add	r7, r0, #1
   116c0:	b	116d0 <__mempcpy_chk@plt+0x5f4>
   116c4:	mov	r0, r4
   116c8:	bl	10fd4 <strlen@plt>
   116cc:	add	r7, r4, r0
   116d0:	mov	r0, r7
   116d4:	bl	10fd4 <strlen@plt>
   116d8:	mov	r8, r0
   116dc:	cmp	r8, #0
   116e0:	beq	116f4 <__mempcpy_chk@plt+0x618>
   116e4:	mov	r0, r7
   116e8:	bl	11b54 <__mempcpy_chk@plt+0xa78>
   116ec:	cmp	r0, r7
   116f0:	bne	11ad0 <__mempcpy_chk@plt+0x9f4>
   116f4:	subs	r0, r7, r4
   116f8:	beq	11a64 <__mempcpy_chk@plt+0x988>
   116fc:	sub	r0, r4, r7
   11700:	sub	r1, r7, #1
   11704:	mov	r5, #0
   11708:	ldrb	r2, [r1, -r5]
   1170c:	cmp	r2, #88	; 0x58
   11710:	bne	11720 <__mempcpy_chk@plt+0x644>
   11714:	add	r5, r5, #1
   11718:	adds	r2, r0, r5
   1171c:	bne	11708 <__mempcpy_chk@plt+0x62c>
   11720:	cmp	r5, #2
   11724:	bls	11a64 <__mempcpy_chk@plt+0x988>
   11728:	ldr	r0, [sp, #32]
   1172c:	tst	r0, #1
   11730:	beq	117a4 <__mempcpy_chk@plt+0x6c8>
   11734:	ldr	r0, [sp, #16]
   11738:	tst	r0, #1
   1173c:	beq	117ac <__mempcpy_chk@plt+0x6d0>
   11740:	movw	r0, #21173	; 0x52b5
   11744:	movt	r0, #1
   11748:	bl	10f5c <getenv@plt>
   1174c:	ldr	r1, [sp, #20]
   11750:	cmp	r0, #0
   11754:	beq	11768 <__mempcpy_chk@plt+0x68c>
   11758:	mov	r6, r0
   1175c:	ldrb	r0, [r0]
   11760:	cmp	r0, #0
   11764:	bne	11788 <__mempcpy_chk@plt+0x6ac>
   11768:	cmp	r1, #0
   1176c:	beq	11780 <__mempcpy_chk@plt+0x6a4>
   11770:	ldrb	r0, [r1]
   11774:	mov	r6, r1
   11778:	cmp	r0, #0
   1177c:	bne	11788 <__mempcpy_chk@plt+0x6ac>
   11780:	movw	r6, #21180	; 0x52bc
   11784:	movt	r6, #1
   11788:	mov	r0, r4
   1178c:	bl	11b54 <__mempcpy_chk@plt+0xa78>
   11790:	cmp	r0, r4
   11794:	beq	11804 <__mempcpy_chk@plt+0x728>
   11798:	movw	r1, #21185	; 0x52c1
   1179c:	movt	r1, #1
   117a0:	b	11a6c <__mempcpy_chk@plt+0x990>
   117a4:	mov	r6, r4
   117a8:	b	11820 <__mempcpy_chk@plt+0x744>
   117ac:	ldr	r6, [sp, #20]
   117b0:	cmp	r6, #0
   117b4:	beq	117c4 <__mempcpy_chk@plt+0x6e8>
   117b8:	ldrb	r0, [r6]
   117bc:	cmp	r0, #0
   117c0:	bne	117f8 <__mempcpy_chk@plt+0x71c>
   117c4:	movw	r0, #21173	; 0x52b5
   117c8:	movt	r0, #1
   117cc:	bl	10f5c <getenv@plt>
   117d0:	cmp	r0, #0
   117d4:	beq	117f0 <__mempcpy_chk@plt+0x714>
   117d8:	ldrb	r1, [r0]
   117dc:	movw	r6, #21180	; 0x52bc
   117e0:	movt	r6, #1
   117e4:	cmp	r1, #0
   117e8:	movne	r6, r0
   117ec:	b	117f8 <__mempcpy_chk@plt+0x71c>
   117f0:	movw	r6, #21180	; 0x52bc
   117f4:	movt	r6, #1
   117f8:	ldrb	r0, [r4]
   117fc:	cmp	r0, #47	; 0x2f
   11800:	beq	11b04 <__mempcpy_chk@plt+0xa28>
   11804:	mov	r0, r6
   11808:	mov	r1, r4
   1180c:	mov	r2, #0
   11810:	bl	11e54 <__mempcpy_chk@plt+0xd78>
   11814:	mov	r6, r0
   11818:	mov	r0, r4
   1181c:	bl	11f4c <__mempcpy_chk@plt+0xe70>
   11820:	mov	r0, r6
   11824:	bl	14730 <__mempcpy_chk@plt+0x3654>
   11828:	mov	r4, r0
   1182c:	ldr	r0, [sp, #24]
   11830:	tst	r0, #1
   11834:	beq	118b4 <__mempcpy_chk@plt+0x7d8>
   11838:	str	r5, [sp]
   1183c:	ldr	r5, [sp, #28]
   11840:	mov	r3, #1
   11844:	mov	r0, r4
   11848:	mov	r1, r8
   1184c:	mov	r2, #0
   11850:	mov	r7, #1
   11854:	tst	r5, #1
   11858:	movwne	r3, #2
   1185c:	bl	13b50 <__mempcpy_chk@plt+0x2a74>
   11860:	clz	r0, r0
   11864:	lsr	r0, r0, #5
   11868:	orr	r1, sl, r0
   1186c:	tst	r1, #1
   11870:	bne	1191c <__mempcpy_chk@plt+0x840>
   11874:	bl	10fe0 <__errno_location@plt>
   11878:	movw	r1, #21296	; 0x5330
   1187c:	ldr	r4, [r0]
   11880:	mov	r0, #0
   11884:	mov	r2, #5
   11888:	movt	r1, #1
   1188c:	bl	10ed8 <dcgettext@plt>
   11890:	mov	r5, r0
   11894:	mov	r0, r6
   11898:	bl	13a04 <__mempcpy_chk@plt+0x2928>
   1189c:	mov	r3, r0
   118a0:	mov	r0, #0
   118a4:	mov	r1, r4
   118a8:	mov	r2, r5
   118ac:	bl	10f44 <error@plt>
   118b0:	b	119e4 <__mempcpy_chk@plt+0x908>
   118b4:	str	r5, [sp]
   118b8:	ldr	r5, [sp, #28]
   118bc:	mov	r0, r4
   118c0:	mov	r1, r8
   118c4:	mov	r2, #0
   118c8:	ands	r3, r5, #1
   118cc:	movwne	r3, #2
   118d0:	bl	13b50 <__mempcpy_chk@plt+0x2a74>
   118d4:	cmp	r0, #0
   118d8:	bmi	118f4 <__mempcpy_chk@plt+0x818>
   118dc:	tst	r5, #1
   118e0:	beq	11904 <__mempcpy_chk@plt+0x828>
   118e4:	mov	r0, r4
   118e8:	bl	10f68 <puts@plt>
   118ec:	mov	r7, #0
   118f0:	b	119e4 <__mempcpy_chk@plt+0x908>
   118f4:	mov	r7, #1
   118f8:	tst	sl, #1
   118fc:	beq	119a4 <__mempcpy_chk@plt+0x8c8>
   11900:	b	119e4 <__mempcpy_chk@plt+0x908>
   11904:	bl	110b8 <close@plt>
   11908:	clz	r0, r0
   1190c:	lsr	r0, r0, #5
   11910:	orr	r1, sl, r0
   11914:	tst	r1, #1
   11918:	beq	119a4 <__mempcpy_chk@plt+0x8c8>
   1191c:	mov	r7, #1
   11920:	cmp	r0, #0
   11924:	beq	119e4 <__mempcpy_chk@plt+0x908>
   11928:	mov	r0, r4
   1192c:	bl	10f68 <puts@plt>
   11930:	mov	r7, #0
   11934:	tst	r5, #1
   11938:	bne	119e4 <__mempcpy_chk@plt+0x908>
   1193c:	movw	r0, #24917	; 0x6155
   11940:	mov	r1, #1
   11944:	movt	r0, #2
   11948:	strb	r1, [r0]
   1194c:	movw	r0, #24908	; 0x614c
   11950:	movt	r0, #2
   11954:	ldr	r0, [r0]
   11958:	bl	11bd4 <__mempcpy_chk@plt+0xaf8>
   1195c:	cmp	r0, #0
   11960:	beq	119e4 <__mempcpy_chk@plt+0x908>
   11964:	bl	10fe0 <__errno_location@plt>
   11968:	ldr	r5, [r0]
   1196c:	mov	r0, r4
   11970:	bl	11070 <remove@plt>
   11974:	tst	sl, #1
   11978:	bne	119e0 <__mempcpy_chk@plt+0x904>
   1197c:	movw	r1, #21377	; 0x5381
   11980:	mov	r0, #0
   11984:	mov	r2, #5
   11988:	movt	r1, #1
   1198c:	bl	10ed8 <dcgettext@plt>
   11990:	mov	r2, r0
   11994:	mov	r0, #0
   11998:	mov	r1, r5
   1199c:	bl	10f44 <error@plt>
   119a0:	b	119e0 <__mempcpy_chk@plt+0x904>
   119a4:	bl	10fe0 <__errno_location@plt>
   119a8:	movw	r1, #21339	; 0x535b
   119ac:	ldr	r4, [r0]
   119b0:	mov	r0, #0
   119b4:	mov	r2, #5
   119b8:	movt	r1, #1
   119bc:	bl	10ed8 <dcgettext@plt>
   119c0:	mov	r5, r0
   119c4:	mov	r0, r6
   119c8:	bl	13a04 <__mempcpy_chk@plt+0x2928>
   119cc:	mov	r3, r0
   119d0:	mov	r0, #0
   119d4:	mov	r1, r4
   119d8:	mov	r2, r5
   119dc:	bl	10f44 <error@plt>
   119e0:	mov	r7, #1
   119e4:	mov	r0, r7
   119e8:	sub	sp, fp, #28
   119ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119f0:	cmn	r0, #3
   119f4:	beq	11a10 <__mempcpy_chk@plt+0x934>
   119f8:	cmn	r0, #2
   119fc:	bne	11ac8 <__mempcpy_chk@plt+0x9ec>
   11a00:	mov	r0, #0
   11a04:	bl	111d8 <__mempcpy_chk@plt+0xfc>
   11a08:	cmp	r0, #86	; 0x56
   11a0c:	bne	11ac8 <__mempcpy_chk@plt+0x9ec>
   11a10:	movw	r0, #24816	; 0x60f0
   11a14:	movw	r2, #21027	; 0x5223
   11a18:	mov	r1, #0
   11a1c:	movw	r7, #21014	; 0x5216
   11a20:	movt	r0, #2
   11a24:	movt	r2, #1
   11a28:	str	r1, [sp, #8]
   11a2c:	movw	r1, #20961	; 0x51e1
   11a30:	movt	r7, #1
   11a34:	movt	r1, #1
   11a38:	ldr	r3, [r0]
   11a3c:	movw	r0, #24908	; 0x614c
   11a40:	str	r2, [sp, #4]
   11a44:	movw	r2, #21000	; 0x5208
   11a48:	str	r7, [sp]
   11a4c:	movt	r0, #2
   11a50:	movt	r2, #1
   11a54:	ldr	r0, [r0]
   11a58:	bl	14234 <__mempcpy_chk@plt+0x3158>
   11a5c:	mov	r0, #0
   11a60:	bl	10fbc <exit@plt>
   11a64:	movw	r1, #21146	; 0x529a
   11a68:	movt	r1, #1
   11a6c:	mov	r0, #0
   11a70:	mov	r2, #5
   11a74:	bl	10ed8 <dcgettext@plt>
   11a78:	mov	r5, r0
   11a7c:	mov	r0, r4
   11a80:	bl	13a04 <__mempcpy_chk@plt+0x2928>
   11a84:	mov	r3, r0
   11a88:	mov	r0, #1
   11a8c:	mov	r1, #0
   11a90:	mov	r2, r5
   11a94:	bl	10f44 <error@plt>
   11a98:	movw	r1, #21057	; 0x5241
   11a9c:	movt	r1, #1
   11aa0:	b	11ad8 <__mempcpy_chk@plt+0x9fc>
   11aa4:	movw	r1, #21038	; 0x522e
   11aa8:	mov	r0, #0
   11aac:	mov	r2, #5
   11ab0:	movt	r1, #1
   11ab4:	bl	10ed8 <dcgettext@plt>
   11ab8:	mov	r2, r0
   11abc:	mov	r0, #0
   11ac0:	mov	r1, #0
   11ac4:	bl	10f44 <error@plt>
   11ac8:	mov	r0, #1
   11acc:	bl	111d8 <__mempcpy_chk@plt+0xfc>
   11ad0:	movw	r1, #21098	; 0x526a
   11ad4:	movt	r1, #1
   11ad8:	mov	r0, #0
   11adc:	mov	r2, #5
   11ae0:	bl	10ed8 <dcgettext@plt>
   11ae4:	mov	r4, r0
   11ae8:	mov	r0, r7
   11aec:	bl	13a04 <__mempcpy_chk@plt+0x2928>
   11af0:	mov	r3, r0
   11af4:	mov	r0, #1
   11af8:	mov	r1, #0
   11afc:	mov	r2, r4
   11b00:	bl	10f44 <error@plt>
   11b04:	movw	r1, #21236	; 0x52f4
   11b08:	movt	r1, #1
   11b0c:	b	11a6c <__mempcpy_chk@plt+0x990>
   11b10:	push	{fp, lr}
   11b14:	mov	fp, sp
   11b18:	movw	r0, #24917	; 0x6155
   11b1c:	movt	r0, #2
   11b20:	ldrb	r0, [r0]
   11b24:	cmp	r0, #0
   11b28:	beq	11b4c <__mempcpy_chk@plt+0xa70>
   11b2c:	movw	r0, #24904	; 0x6148
   11b30:	movt	r0, #2
   11b34:	ldr	r0, [r0]
   11b38:	bl	11bd4 <__mempcpy_chk@plt+0xaf8>
   11b3c:	cmp	r0, #0
   11b40:	popeq	{fp, pc}
   11b44:	mov	r0, #1
   11b48:	bl	10eb4 <_exit@plt>
   11b4c:	pop	{fp, lr}
   11b50:	b	11c74 <__mempcpy_chk@plt+0xb98>
   11b54:	sub	r0, r0, #1
   11b58:	ldrb	r3, [r0, #1]!
   11b5c:	cmp	r3, #47	; 0x2f
   11b60:	beq	11b58 <__mempcpy_chk@plt+0xa7c>
   11b64:	mov	r2, #0
   11b68:	mov	r1, r0
   11b6c:	uxtb	r3, r3
   11b70:	cmp	r3, #47	; 0x2f
   11b74:	beq	11b90 <__mempcpy_chk@plt+0xab4>
   11b78:	cmp	r3, #0
   11b7c:	bxeq	lr
   11b80:	tst	r2, #1
   11b84:	mov	r2, #0
   11b88:	movne	r0, r1
   11b8c:	b	11b94 <__mempcpy_chk@plt+0xab8>
   11b90:	mov	r2, #1
   11b94:	ldrb	r3, [r1, #1]!
   11b98:	b	11b6c <__mempcpy_chk@plt+0xa90>
   11b9c:	push	{r4, sl, fp, lr}
   11ba0:	add	fp, sp, #8
   11ba4:	mov	r4, r0
   11ba8:	bl	10fd4 <strlen@plt>
   11bac:	mov	r1, r0
   11bb0:	sub	r2, r4, #1
   11bb4:	mov	r0, r1
   11bb8:	cmp	r1, #2
   11bbc:	bcc	11bd0 <__mempcpy_chk@plt+0xaf4>
   11bc0:	ldrb	r3, [r2, r0]
   11bc4:	sub	r1, r0, #1
   11bc8:	cmp	r3, #47	; 0x2f
   11bcc:	beq	11bb4 <__mempcpy_chk@plt+0xad8>
   11bd0:	pop	{r4, sl, fp, pc}
   11bd4:	push	{r4, r5, r6, sl, fp, lr}
   11bd8:	add	fp, sp, #16
   11bdc:	mov	r4, r0
   11be0:	bl	10f20 <__fpending@plt>
   11be4:	mov	r5, r0
   11be8:	mov	r0, r4
   11bec:	bl	10f2c <ferror_unlocked@plt>
   11bf0:	mov	r6, r0
   11bf4:	mov	r0, r4
   11bf8:	bl	11d5c <__mempcpy_chk@plt+0xc80>
   11bfc:	cmp	r6, #0
   11c00:	beq	11c20 <__mempcpy_chk@plt+0xb44>
   11c04:	mvn	r4, #0
   11c08:	cmp	r0, #0
   11c0c:	bne	11c4c <__mempcpy_chk@plt+0xb70>
   11c10:	bl	10fe0 <__errno_location@plt>
   11c14:	mov	r1, #0
   11c18:	str	r1, [r0]
   11c1c:	b	11c4c <__mempcpy_chk@plt+0xb70>
   11c20:	cmp	r0, #0
   11c24:	mov	r4, r0
   11c28:	mvnne	r4, #0
   11c2c:	cmp	r5, #0
   11c30:	bne	11c4c <__mempcpy_chk@plt+0xb70>
   11c34:	cmp	r0, #0
   11c38:	beq	11c4c <__mempcpy_chk@plt+0xb70>
   11c3c:	bl	10fe0 <__errno_location@plt>
   11c40:	ldr	r0, [r0]
   11c44:	subs	r4, r0, #9
   11c48:	mvnne	r4, #0
   11c4c:	mov	r0, r4
   11c50:	pop	{r4, r5, r6, sl, fp, pc}
   11c54:	movw	r1, #24920	; 0x6158
   11c58:	movt	r1, #2
   11c5c:	str	r0, [r1]
   11c60:	bx	lr
   11c64:	movw	r1, #24924	; 0x615c
   11c68:	movt	r1, #2
   11c6c:	strb	r0, [r1]
   11c70:	bx	lr
   11c74:	push	{r4, r5, r6, sl, fp, lr}
   11c78:	add	fp, sp, #16
   11c7c:	sub	sp, sp, #8
   11c80:	movw	r0, #24908	; 0x614c
   11c84:	movt	r0, #2
   11c88:	ldr	r0, [r0]
   11c8c:	bl	11bd4 <__mempcpy_chk@plt+0xaf8>
   11c90:	cmp	r0, #0
   11c94:	beq	11cbc <__mempcpy_chk@plt+0xbe0>
   11c98:	movw	r0, #24924	; 0x615c
   11c9c:	movt	r0, #2
   11ca0:	ldrb	r0, [r0]
   11ca4:	cmp	r0, #0
   11ca8:	beq	11cdc <__mempcpy_chk@plt+0xc00>
   11cac:	bl	10fe0 <__errno_location@plt>
   11cb0:	ldr	r0, [r0]
   11cb4:	cmp	r0, #32
   11cb8:	bne	11cdc <__mempcpy_chk@plt+0xc00>
   11cbc:	movw	r0, #24904	; 0x6148
   11cc0:	movt	r0, #2
   11cc4:	ldr	r0, [r0]
   11cc8:	bl	11bd4 <__mempcpy_chk@plt+0xaf8>
   11ccc:	cmp	r0, #0
   11cd0:	subeq	sp, fp, #16
   11cd4:	popeq	{r4, r5, r6, sl, fp, pc}
   11cd8:	b	11d4c <__mempcpy_chk@plt+0xc70>
   11cdc:	movw	r1, #21377	; 0x5381
   11ce0:	mov	r0, #0
   11ce4:	mov	r2, #5
   11ce8:	movt	r1, #1
   11cec:	bl	10ed8 <dcgettext@plt>
   11cf0:	mov	r4, r0
   11cf4:	movw	r0, #24920	; 0x6158
   11cf8:	movt	r0, #2
   11cfc:	ldr	r6, [r0]
   11d00:	bl	10fe0 <__errno_location@plt>
   11d04:	ldr	r5, [r0]
   11d08:	cmp	r6, #0
   11d0c:	bne	11d28 <__mempcpy_chk@plt+0xc4c>
   11d10:	movw	r2, #21971	; 0x55d3
   11d14:	mov	r0, #0
   11d18:	mov	r1, r5
   11d1c:	mov	r3, r4
   11d20:	movt	r2, #1
   11d24:	b	11d48 <__mempcpy_chk@plt+0xc6c>
   11d28:	mov	r0, r6
   11d2c:	bl	137c4 <__mempcpy_chk@plt+0x26e8>
   11d30:	movw	r2, #21967	; 0x55cf
   11d34:	mov	r3, r0
   11d38:	str	r4, [sp]
   11d3c:	mov	r0, #0
   11d40:	mov	r1, r5
   11d44:	movt	r2, #1
   11d48:	bl	10f44 <error@plt>
   11d4c:	movw	r0, #24820	; 0x60f4
   11d50:	movt	r0, #2
   11d54:	ldr	r0, [r0]
   11d58:	bl	10eb4 <_exit@plt>
   11d5c:	push	{r4, r5, r6, sl, fp, lr}
   11d60:	add	fp, sp, #16
   11d64:	sub	sp, sp, #8
   11d68:	mov	r4, r0
   11d6c:	bl	1101c <fileno@plt>
   11d70:	cmn	r0, #1
   11d74:	ble	11de8 <__mempcpy_chk@plt+0xd0c>
   11d78:	mov	r0, r4
   11d7c:	bl	10f8c <__freading@plt>
   11d80:	cmp	r0, #0
   11d84:	beq	11db0 <__mempcpy_chk@plt+0xcd4>
   11d88:	mov	r0, r4
   11d8c:	bl	1101c <fileno@plt>
   11d90:	mov	r1, #1
   11d94:	mov	r2, #0
   11d98:	mov	r3, #0
   11d9c:	str	r1, [sp]
   11da0:	bl	10f08 <lseek64@plt>
   11da4:	and	r0, r0, r1
   11da8:	cmn	r0, #1
   11dac:	beq	11de8 <__mempcpy_chk@plt+0xd0c>
   11db0:	mov	r0, r4
   11db4:	bl	11df8 <__mempcpy_chk@plt+0xd1c>
   11db8:	cmp	r0, #0
   11dbc:	beq	11de8 <__mempcpy_chk@plt+0xd0c>
   11dc0:	bl	10fe0 <__errno_location@plt>
   11dc4:	ldr	r6, [r0]
   11dc8:	mov	r5, r0
   11dcc:	mov	r0, r4
   11dd0:	bl	11034 <fclose@plt>
   11dd4:	cmp	r6, #0
   11dd8:	strne	r6, [r5]
   11ddc:	mvnne	r0, #0
   11de0:	sub	sp, fp, #16
   11de4:	pop	{r4, r5, r6, sl, fp, pc}
   11de8:	mov	r0, r4
   11dec:	sub	sp, fp, #16
   11df0:	pop	{r4, r5, r6, sl, fp, lr}
   11df4:	b	11034 <fclose@plt>
   11df8:	push	{r4, sl, fp, lr}
   11dfc:	add	fp, sp, #8
   11e00:	sub	sp, sp, #8
   11e04:	mov	r4, r0
   11e08:	cmp	r0, #0
   11e0c:	beq	11e44 <__mempcpy_chk@plt+0xd68>
   11e10:	mov	r0, r4
   11e14:	bl	10f8c <__freading@plt>
   11e18:	cmp	r0, #0
   11e1c:	beq	11e44 <__mempcpy_chk@plt+0xd68>
   11e20:	ldrb	r0, [r4, #1]
   11e24:	tst	r0, #1
   11e28:	beq	11e44 <__mempcpy_chk@plt+0xd68>
   11e2c:	mov	r0, #1
   11e30:	mov	r2, #0
   11e34:	mov	r3, #0
   11e38:	str	r0, [sp]
   11e3c:	mov	r0, r4
   11e40:	bl	11f74 <__mempcpy_chk@plt+0xe98>
   11e44:	mov	r0, r4
   11e48:	sub	sp, fp, #8
   11e4c:	pop	{r4, sl, fp, lr}
   11e50:	b	10e90 <fflush@plt>
   11e54:	push	{fp, lr}
   11e58:	mov	fp, sp
   11e5c:	bl	11e6c <__mempcpy_chk@plt+0xd90>
   11e60:	cmp	r0, #0
   11e64:	popne	{fp, pc}
   11e68:	bl	14768 <__mempcpy_chk@plt+0x368c>
   11e6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e70:	add	fp, sp, #28
   11e74:	push	{r2}		; (str r2, [sp, #-4]!)
   11e78:	mov	sl, r1
   11e7c:	mov	r7, r0
   11e80:	bl	11b54 <__mempcpy_chk@plt+0xa78>
   11e84:	sub	r4, r0, r7
   11e88:	bl	11b9c <__mempcpy_chk@plt+0xac0>
   11e8c:	mov	r6, r0
   11e90:	add	r5, r4, r0
   11e94:	mov	r0, sl
   11e98:	bl	10fd4 <strlen@plt>
   11e9c:	mov	r9, r0
   11ea0:	cmp	r6, #0
   11ea4:	beq	11ecc <__mempcpy_chk@plt+0xdf0>
   11ea8:	add	r0, r5, r7
   11eac:	mov	r4, #0
   11eb0:	ldrb	r0, [r0, #-1]
   11eb4:	cmp	r0, #47	; 0x2f
   11eb8:	beq	11edc <__mempcpy_chk@plt+0xe00>
   11ebc:	ldrb	r0, [sl]
   11ec0:	subs	r4, r0, #47	; 0x2f
   11ec4:	movwne	r4, #47	; 0x2f
   11ec8:	b	11edc <__mempcpy_chk@plt+0xe00>
   11ecc:	ldrb	r0, [sl]
   11ed0:	mov	r4, #0
   11ed4:	cmp	r0, #47	; 0x2f
   11ed8:	movweq	r4, #46	; 0x2e
   11edc:	uxtb	r8, r4
   11ee0:	add	r0, r9, r5
   11ee4:	cmp	r8, #0
   11ee8:	movwne	r8, #1
   11eec:	add	r0, r0, r8
   11ef0:	add	r0, r0, #1
   11ef4:	bl	14800 <__mempcpy_chk@plt+0x3724>
   11ef8:	mov	r6, r0
   11efc:	cmp	r0, #0
   11f00:	beq	11f40 <__mempcpy_chk@plt+0xe64>
   11f04:	mov	r0, r6
   11f08:	mov	r1, r7
   11f0c:	mov	r2, r5
   11f10:	mvn	r3, #0
   11f14:	bl	110dc <__mempcpy_chk@plt>
   11f18:	ldr	r1, [sp]
   11f1c:	strb	r4, [r0], r8
   11f20:	mov	r2, r9
   11f24:	mvn	r3, #0
   11f28:	cmp	r1, #0
   11f2c:	strne	r0, [r1]
   11f30:	mov	r1, sl
   11f34:	bl	110dc <__mempcpy_chk@plt>
   11f38:	mov	r1, #0
   11f3c:	strb	r1, [r0]
   11f40:	mov	r0, r6
   11f44:	sub	sp, fp, #28
   11f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f4c:	push	{r4, r5, r6, sl, fp, lr}
   11f50:	add	fp, sp, #16
   11f54:	mov	r4, r0
   11f58:	bl	10fe0 <__errno_location@plt>
   11f5c:	ldr	r6, [r0]
   11f60:	mov	r5, r0
   11f64:	mov	r0, r4
   11f68:	bl	10e9c <free@plt>
   11f6c:	str	r6, [r5]
   11f70:	pop	{r4, r5, r6, sl, fp, pc}
   11f74:	push	{r4, r5, r6, r7, fp, lr}
   11f78:	add	fp, sp, #16
   11f7c:	sub	sp, sp, #8
   11f80:	mov	r4, r0
   11f84:	ldr	r0, [r0, #4]
   11f88:	mov	r5, r3
   11f8c:	mov	r6, r2
   11f90:	ldr	r1, [r4, #8]
   11f94:	cmp	r1, r0
   11f98:	bne	11fb4 <__mempcpy_chk@plt+0xed8>
   11f9c:	ldrd	r0, [r4, #16]
   11fa0:	cmp	r1, r0
   11fa4:	bne	11fb4 <__mempcpy_chk@plt+0xed8>
   11fa8:	ldr	r0, [r4, #36]	; 0x24
   11fac:	cmp	r0, #0
   11fb0:	beq	11fcc <__mempcpy_chk@plt+0xef0>
   11fb4:	mov	r0, r4
   11fb8:	mov	r2, r6
   11fbc:	mov	r3, r5
   11fc0:	sub	sp, fp, #16
   11fc4:	pop	{r4, r5, r6, r7, fp, lr}
   11fc8:	b	11040 <fseeko64@plt>
   11fcc:	ldr	r7, [fp, #8]
   11fd0:	mov	r0, r4
   11fd4:	bl	1101c <fileno@plt>
   11fd8:	mov	r2, r6
   11fdc:	mov	r3, r5
   11fe0:	str	r7, [sp]
   11fe4:	bl	10f08 <lseek64@plt>
   11fe8:	and	r2, r0, r1
   11fec:	cmn	r2, #1
   11ff0:	beq	1200c <__mempcpy_chk@plt+0xf30>
   11ff4:	strd	r0, [r4, #80]	; 0x50
   11ff8:	ldr	r0, [r4]
   11ffc:	bic	r0, r0, #16
   12000:	str	r0, [r4]
   12004:	mov	r0, #0
   12008:	b	12010 <__mempcpy_chk@plt+0xf34>
   1200c:	mvn	r0, #0
   12010:	sub	sp, fp, #16
   12014:	pop	{r4, r5, r6, r7, fp, pc}
   12018:	push	{r4, r5, fp, lr}
   1201c:	add	fp, sp, #8
   12020:	cmp	r0, #0
   12024:	beq	120b8 <__mempcpy_chk@plt+0xfdc>
   12028:	mov	r1, #47	; 0x2f
   1202c:	mov	r4, r0
   12030:	bl	11058 <strrchr@plt>
   12034:	cmp	r0, #0
   12038:	mov	r5, r4
   1203c:	addne	r5, r0, #1
   12040:	sub	r0, r5, r4
   12044:	cmp	r0, #7
   12048:	blt	1209c <__mempcpy_chk@plt+0xfc0>
   1204c:	movw	r1, #22030	; 0x560e
   12050:	sub	r0, r5, #7
   12054:	mov	r2, #7
   12058:	movt	r1, #1
   1205c:	bl	110a0 <strncmp@plt>
   12060:	cmp	r0, #0
   12064:	bne	1209c <__mempcpy_chk@plt+0xfc0>
   12068:	movw	r1, #22038	; 0x5616
   1206c:	mov	r0, r5
   12070:	mov	r2, #3
   12074:	movt	r1, #1
   12078:	bl	110a0 <strncmp@plt>
   1207c:	cmp	r0, #0
   12080:	beq	1208c <__mempcpy_chk@plt+0xfb0>
   12084:	mov	r4, r5
   12088:	b	1209c <__mempcpy_chk@plt+0xfc0>
   1208c:	movw	r0, #24888	; 0x6138
   12090:	add	r4, r5, #3
   12094:	movt	r0, #2
   12098:	str	r4, [r0]
   1209c:	movw	r0, #24892	; 0x613c
   120a0:	movt	r0, #2
   120a4:	str	r4, [r0]
   120a8:	movw	r0, #24928	; 0x6160
   120ac:	movt	r0, #2
   120b0:	str	r4, [r0]
   120b4:	pop	{r4, r5, fp, pc}
   120b8:	movw	r0, #24904	; 0x6148
   120bc:	movt	r0, #2
   120c0:	ldr	r1, [r0]
   120c4:	movw	r0, #21974	; 0x55d6
   120c8:	movt	r0, #1
   120cc:	bl	11094 <fputs@plt>
   120d0:	bl	110ac <abort@plt>
   120d4:	push	{r4, r5, r6, sl, fp, lr}
   120d8:	add	fp, sp, #16
   120dc:	mov	r4, r0
   120e0:	movw	r0, #24936	; 0x6168
   120e4:	movt	r0, #2
   120e8:	cmp	r4, #0
   120ec:	moveq	r4, r0
   120f0:	bl	10fe0 <__errno_location@plt>
   120f4:	ldr	r6, [r0]
   120f8:	mov	r5, r0
   120fc:	mov	r0, r4
   12100:	mov	r1, #48	; 0x30
   12104:	bl	1468c <__mempcpy_chk@plt+0x35b0>
   12108:	str	r6, [r5]
   1210c:	pop	{r4, r5, r6, sl, fp, pc}
   12110:	movw	r1, #24936	; 0x6168
   12114:	cmp	r0, #0
   12118:	movt	r1, #2
   1211c:	movne	r1, r0
   12120:	ldr	r0, [r1]
   12124:	bx	lr
   12128:	movw	r2, #24936	; 0x6168
   1212c:	cmp	r0, #0
   12130:	movt	r2, #2
   12134:	movne	r2, r0
   12138:	str	r1, [r2]
   1213c:	bx	lr
   12140:	movw	r3, #24936	; 0x6168
   12144:	cmp	r0, #0
   12148:	and	r2, r2, #1
   1214c:	movt	r3, #2
   12150:	movne	r3, r0
   12154:	ubfx	r0, r1, #5, #3
   12158:	and	r1, r1, #31
   1215c:	add	ip, r3, r0, lsl #2
   12160:	mov	r0, #1
   12164:	ldr	r3, [ip, #8]
   12168:	and	r0, r0, r3, lsr r1
   1216c:	eor	r2, r0, r2
   12170:	eor	r1, r3, r2, lsl r1
   12174:	str	r1, [ip, #8]
   12178:	bx	lr
   1217c:	movw	r2, #24936	; 0x6168
   12180:	cmp	r0, #0
   12184:	movt	r2, #2
   12188:	movne	r2, r0
   1218c:	ldr	r0, [r2, #4]
   12190:	str	r1, [r2, #4]
   12194:	bx	lr
   12198:	push	{fp, lr}
   1219c:	mov	fp, sp
   121a0:	movw	r3, #24936	; 0x6168
   121a4:	cmp	r0, #0
   121a8:	movt	r3, #2
   121ac:	movne	r3, r0
   121b0:	cmp	r1, #0
   121b4:	mov	r0, #10
   121b8:	cmpne	r2, #0
   121bc:	str	r0, [r3]
   121c0:	bne	121c8 <__mempcpy_chk@plt+0x10ec>
   121c4:	bl	110ac <abort@plt>
   121c8:	str	r1, [r3, #40]	; 0x28
   121cc:	str	r2, [r3, #44]	; 0x2c
   121d0:	pop	{fp, pc}
   121d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121d8:	add	fp, sp, #28
   121dc:	sub	sp, sp, #20
   121e0:	mov	r7, r0
   121e4:	ldr	r0, [fp, #8]
   121e8:	movw	r5, #24936	; 0x6168
   121ec:	mov	r8, r3
   121f0:	mov	r9, r2
   121f4:	mov	sl, r1
   121f8:	movt	r5, #2
   121fc:	cmp	r0, #0
   12200:	movne	r5, r0
   12204:	bl	10fe0 <__errno_location@plt>
   12208:	ldr	r2, [r5, #40]	; 0x28
   1220c:	ldr	r3, [r5, #44]	; 0x2c
   12210:	mov	r4, r0
   12214:	ldm	r5, {r0, r1}
   12218:	add	r5, r5, #8
   1221c:	ldr	r6, [r4]
   12220:	stm	sp, {r0, r1, r5}
   12224:	mov	r0, r7
   12228:	mov	r1, sl
   1222c:	str	r2, [sp, #12]
   12230:	str	r3, [sp, #16]
   12234:	mov	r2, r9
   12238:	mov	r3, r8
   1223c:	bl	1224c <__mempcpy_chk@plt+0x1170>
   12240:	str	r6, [r4]
   12244:	sub	sp, fp, #28
   12248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1224c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12250:	add	fp, sp, #28
   12254:	sub	sp, sp, #156	; 0x9c
   12258:	mov	r5, r0
   1225c:	add	r0, r2, #1
   12260:	mov	r6, r1
   12264:	mov	sl, r3
   12268:	str	r2, [fp, #-80]	; 0xffffffb0
   1226c:	str	r0, [sp, #72]	; 0x48
   12270:	ldr	r0, [fp, #12]
   12274:	and	r1, r0, #1
   12278:	str	r1, [sp, #32]
   1227c:	and	r1, r0, #4
   12280:	str	r1, [sp, #28]
   12284:	ubfx	r9, r0, #1, #1
   12288:	bl	10f14 <__ctype_get_mb_cur_max@plt>
   1228c:	str	r0, [sp, #40]	; 0x28
   12290:	ldr	r0, [fp, #24]
   12294:	ldr	r7, [fp, #8]
   12298:	mov	r1, #0
   1229c:	mov	lr, #0
   122a0:	str	r5, [fp, #-84]	; 0xffffffac
   122a4:	str	r1, [sp, #60]	; 0x3c
   122a8:	mov	r1, #1
   122ac:	str	r1, [fp, #-48]	; 0xffffffd0
   122b0:	str	r0, [sp, #80]	; 0x50
   122b4:	ldr	r0, [fp, #20]
   122b8:	str	r0, [sp, #76]	; 0x4c
   122bc:	mov	r0, #0
   122c0:	str	r0, [sp, #56]	; 0x38
   122c4:	mov	r0, #0
   122c8:	str	r0, [fp, #-88]	; 0xffffffa8
   122cc:	mov	r0, #0
   122d0:	str	r0, [fp, #-72]	; 0xffffffb8
   122d4:	mov	r0, #0
   122d8:	cmp	r7, #10
   122dc:	bhi	132b8 <__mempcpy_chk@plt+0x21dc>
   122e0:	add	r1, pc, #24
   122e4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   122e8:	mov	ip, r6
   122ec:	mov	r8, #0
   122f0:	mov	r2, #1
   122f4:	mov	r6, #0
   122f8:	mov	r3, sl
   122fc:	ldr	pc, [r1, r7, lsl #2]
   12300:	andeq	r2, r1, ip, ror #7
   12304:	andeq	r2, r1, r0, asr #8
   12308:	andeq	r2, r1, r0, lsl #8
   1230c:	andeq	r2, r1, r4, ror #7
   12310:	andeq	r2, r1, r4, lsr r4
   12314:	andeq	r2, r1, r8, ror #8
   12318:	andeq	r2, r1, r0, lsl r4
   1231c:	andeq	r2, r1, ip, ror #9
   12320:	andeq	r2, r1, ip, lsr #6
   12324:	andeq	r2, r1, ip, lsr #6
   12328:	andeq	r2, r1, ip, ror #6
   1232c:	movw	r0, #22122	; 0x566a
   12330:	mov	r1, r7
   12334:	mov	r6, r5
   12338:	mov	r4, ip
   1233c:	mov	r5, lr
   12340:	movt	r0, #1
   12344:	bl	13a1c <__mempcpy_chk@plt+0x2940>
   12348:	str	r0, [sp, #76]	; 0x4c
   1234c:	movw	r0, #22124	; 0x566c
   12350:	mov	r1, r7
   12354:	movt	r0, #1
   12358:	bl	13a1c <__mempcpy_chk@plt+0x2940>
   1235c:	mov	lr, r5
   12360:	mov	r5, r6
   12364:	mov	ip, r4
   12368:	str	r0, [sp, #80]	; 0x50
   1236c:	mov	r8, #0
   12370:	tst	r9, #1
   12374:	str	lr, [sp, #44]	; 0x2c
   12378:	bne	123b0 <__mempcpy_chk@plt+0x12d4>
   1237c:	ldr	r0, [sp, #76]	; 0x4c
   12380:	ldrb	r0, [r0]
   12384:	cmp	r0, #0
   12388:	beq	123b0 <__mempcpy_chk@plt+0x12d4>
   1238c:	ldr	r1, [sp, #76]	; 0x4c
   12390:	mov	r8, #0
   12394:	add	r1, r1, #1
   12398:	cmp	r8, ip
   1239c:	strbcc	r0, [r5, r8]
   123a0:	ldrb	r0, [r1, r8]
   123a4:	add	r8, r8, #1
   123a8:	cmp	r0, #0
   123ac:	bne	12398 <__mempcpy_chk@plt+0x12bc>
   123b0:	ldr	r6, [sp, #80]	; 0x50
   123b4:	mov	r4, ip
   123b8:	mov	r0, r6
   123bc:	bl	10fd4 <strlen@plt>
   123c0:	mov	ip, r4
   123c4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   123c8:	ldr	lr, [sp, #44]	; 0x2c
   123cc:	str	r6, [fp, #-88]	; 0xffffffa8
   123d0:	str	r0, [fp, #-72]	; 0xffffffb8
   123d4:	mov	r2, #1
   123d8:	mov	r6, r9
   123dc:	mov	r3, sl
   123e0:	b	124ec <__mempcpy_chk@plt+0x1410>
   123e4:	mov	r0, #1
   123e8:	b	12440 <__mempcpy_chk@plt+0x1364>
   123ec:	mov	r7, #0
   123f0:	mov	r8, #0
   123f4:	mov	r2, r0
   123f8:	mov	r6, #0
   123fc:	b	124ec <__mempcpy_chk@plt+0x1410>
   12400:	tst	r9, #1
   12404:	bne	12440 <__mempcpy_chk@plt+0x1364>
   12408:	mov	r2, r0
   1240c:	b	12498 <__mempcpy_chk@plt+0x13bc>
   12410:	mov	r0, #1
   12414:	mov	r8, #0
   12418:	mov	r7, #5
   1241c:	mov	r2, #1
   12420:	str	r0, [fp, #-72]	; 0xffffffb8
   12424:	movw	r0, #22120	; 0x5668
   12428:	movt	r0, #1
   1242c:	str	r0, [fp, #-88]	; 0xffffffa8
   12430:	b	12460 <__mempcpy_chk@plt+0x1384>
   12434:	mov	r2, #1
   12438:	tst	r9, #1
   1243c:	beq	12498 <__mempcpy_chk@plt+0x13bc>
   12440:	mov	r1, #1
   12444:	mov	r8, #0
   12448:	mov	r7, #2
   1244c:	mov	r2, r0
   12450:	str	r1, [fp, #-72]	; 0xffffffb8
   12454:	movw	r1, #22124	; 0x566c
   12458:	movt	r1, #1
   1245c:	str	r1, [fp, #-88]	; 0xffffffa8
   12460:	mov	r6, #1
   12464:	b	124ec <__mempcpy_chk@plt+0x1410>
   12468:	tst	r9, #1
   1246c:	beq	124bc <__mempcpy_chk@plt+0x13e0>
   12470:	mov	r0, #1
   12474:	mov	r8, #0
   12478:	mov	r2, #1
   1247c:	mov	r6, #1
   12480:	mov	r7, #5
   12484:	str	r0, [fp, #-72]	; 0xffffffb8
   12488:	movw	r0, #22120	; 0x5668
   1248c:	movt	r0, #1
   12490:	str	r0, [fp, #-88]	; 0xffffffa8
   12494:	b	124ec <__mempcpy_chk@plt+0x1410>
   12498:	cmp	ip, #0
   1249c:	mov	r8, #1
   124a0:	mov	r6, #0
   124a4:	mov	r7, #2
   124a8:	movne	r0, #39	; 0x27
   124ac:	strbne	r0, [r5]
   124b0:	movw	r0, #22124	; 0x566c
   124b4:	movt	r0, #1
   124b8:	b	124e0 <__mempcpy_chk@plt+0x1404>
   124bc:	cmp	ip, #0
   124c0:	mov	r8, #1
   124c4:	mov	r2, #1
   124c8:	mov	r7, #5
   124cc:	mov	r6, #0
   124d0:	movne	r0, #34	; 0x22
   124d4:	strbne	r0, [r5]
   124d8:	movw	r0, #22120	; 0x5668
   124dc:	movt	r0, #1
   124e0:	str	r0, [fp, #-88]	; 0xffffffa8
   124e4:	mov	r0, #1
   124e8:	str	r0, [fp, #-72]	; 0xffffffb8
   124ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   124f0:	str	r7, [fp, #-68]	; 0xffffffbc
   124f4:	str	r6, [fp, #-76]	; 0xffffffb4
   124f8:	str	r2, [sp, #84]	; 0x54
   124fc:	cmp	r0, #0
   12500:	movwne	r0, #1
   12504:	and	r1, r0, r6
   12508:	and	r1, r2, r1
   1250c:	str	r1, [sp, #48]	; 0x30
   12510:	sub	r1, r7, #2
   12514:	clz	r1, r1
   12518:	lsr	r1, r1, #5
   1251c:	and	r1, r1, r6
   12520:	str	r1, [sp, #64]	; 0x40
   12524:	subs	r1, r7, #2
   12528:	eor	r7, r6, #1
   1252c:	movwne	r1, #1
   12530:	str	r7, [sp, #92]	; 0x5c
   12534:	orr	r7, r1, r7
   12538:	and	r1, r1, r2
   1253c:	and	r0, r0, r1
   12540:	str	r7, [sp, #68]	; 0x44
   12544:	mov	r7, #0
   12548:	str	r0, [fp, #-60]	; 0xffffffc4
   1254c:	orr	r0, r1, r6
   12550:	ldr	r1, [fp, #16]
   12554:	eor	r0, r0, #1
   12558:	clz	r1, r1
   1255c:	lsr	r1, r1, #5
   12560:	orr	r0, r1, r0
   12564:	str	r0, [fp, #-64]	; 0xffffffc0
   12568:	eor	r0, r2, #1
   1256c:	str	r0, [sp, #52]	; 0x34
   12570:	cmn	r3, #1
   12574:	beq	12584 <__mempcpy_chk@plt+0x14a8>
   12578:	cmp	r7, r3
   1257c:	bne	12590 <__mempcpy_chk@plt+0x14b4>
   12580:	b	130ec <__mempcpy_chk@plt+0x2010>
   12584:	ldrb	r0, [r4, r7]
   12588:	cmp	r0, #0
   1258c:	beq	130f4 <__mempcpy_chk@plt+0x2018>
   12590:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12594:	cmp	r0, #0
   12598:	beq	125e0 <__mempcpy_chk@plt+0x1504>
   1259c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   125a0:	add	r5, r7, r0
   125a4:	cmp	r0, #2
   125a8:	bcc	125f4 <__mempcpy_chk@plt+0x1518>
   125ac:	mov	r0, #0
   125b0:	cmn	r3, #1
   125b4:	str	r0, [fp, #-56]	; 0xffffffc8
   125b8:	bne	125fc <__mempcpy_chk@plt+0x1520>
   125bc:	mov	r0, r4
   125c0:	mov	r4, ip
   125c4:	mov	r6, lr
   125c8:	bl	10fd4 <strlen@plt>
   125cc:	mov	ip, r4
   125d0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   125d4:	mov	lr, r6
   125d8:	mov	r3, r0
   125dc:	b	125fc <__mempcpy_chk@plt+0x1520>
   125e0:	mov	r0, #0
   125e4:	mov	sl, r3
   125e8:	str	r0, [fp, #-56]	; 0xffffffc8
   125ec:	mov	r0, #0
   125f0:	b	12668 <__mempcpy_chk@plt+0x158c>
   125f4:	mov	r0, #0
   125f8:	str	r0, [fp, #-56]	; 0xffffffc8
   125fc:	cmp	r5, r3
   12600:	bls	12614 <__mempcpy_chk@plt+0x1538>
   12604:	ldr	r5, [fp, #-84]	; 0xffffffac
   12608:	mov	r0, #0
   1260c:	mov	sl, r3
   12610:	b	12668 <__mempcpy_chk@plt+0x158c>
   12614:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12618:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1261c:	add	r0, r4, r7
   12620:	mov	r5, lr
   12624:	mov	r6, ip
   12628:	mov	sl, r3
   1262c:	bl	10fc8 <bcmp@plt>
   12630:	ldr	r2, [sp, #92]	; 0x5c
   12634:	cmp	r0, #0
   12638:	ldr	r3, [fp, #-84]	; 0xffffffac
   1263c:	mov	r1, r0
   12640:	movwne	r1, #1
   12644:	orr	r1, r1, r2
   12648:	tst	r1, #1
   1264c:	beq	13178 <__mempcpy_chk@plt+0x209c>
   12650:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12654:	clz	r0, r0
   12658:	mov	lr, r5
   1265c:	mov	ip, r6
   12660:	mov	r5, r3
   12664:	lsr	r0, r0, #5
   12668:	str	r0, [fp, #-52]	; 0xffffffcc
   1266c:	ldrb	r6, [r4, r7]
   12670:	cmp	r6, #126	; 0x7e
   12674:	bhi	12b9c <__mempcpy_chk@plt+0x1ac0>
   12678:	add	r3, pc, #16
   1267c:	mov	r9, #1
   12680:	mov	r2, #110	; 0x6e
   12684:	mov	r0, #97	; 0x61
   12688:	mov	r1, #0
   1268c:	ldr	pc, [r3, r6, lsl #2]
   12690:	andeq	r2, r1, r0, lsl #20
   12694:	muleq	r1, ip, fp
   12698:	muleq	r1, ip, fp
   1269c:	muleq	r1, ip, fp
   126a0:	muleq	r1, ip, fp
   126a4:	muleq	r1, ip, fp
   126a8:	muleq	r1, ip, fp
   126ac:	andeq	r2, r1, ip, lsl ip
   126b0:	andeq	r2, r1, r0, ror #19
   126b4:	ldrdeq	r2, [r1], -r8
   126b8:	andeq	r2, r1, ip, ror #19
   126bc:	andeq	r2, r1, r4, lsl #22
   126c0:	ldrdeq	r2, [r1], -r0
   126c4:	andeq	r2, r1, r8, ror #19
   126c8:	muleq	r1, ip, fp
   126cc:	muleq	r1, ip, fp
   126d0:	muleq	r1, ip, fp
   126d4:	muleq	r1, ip, fp
   126d8:	muleq	r1, ip, fp
   126dc:	muleq	r1, ip, fp
   126e0:	muleq	r1, ip, fp
   126e4:	muleq	r1, ip, fp
   126e8:	muleq	r1, ip, fp
   126ec:	muleq	r1, ip, fp
   126f0:	muleq	r1, ip, fp
   126f4:	muleq	r1, ip, fp
   126f8:	muleq	r1, ip, fp
   126fc:	muleq	r1, ip, fp
   12700:	muleq	r1, ip, fp
   12704:	muleq	r1, ip, fp
   12708:	muleq	r1, ip, fp
   1270c:	muleq	r1, ip, fp
   12710:	andeq	r2, r1, r0, lsl #19
   12714:	andeq	r2, r1, r4, lsl #19
   12718:	andeq	r2, r1, r4, lsl #19
   1271c:	andeq	r2, r1, r8, ror #18
   12720:	andeq	r2, r1, r4, lsl #19
   12724:	andeq	r2, r1, ip, lsl #17
   12728:	andeq	r2, r1, r4, lsl #19
   1272c:	andeq	r2, r1, ip, lsl #22
   12730:	andeq	r2, r1, r4, lsl #19
   12734:	andeq	r2, r1, r4, lsl #19
   12738:	andeq	r2, r1, r4, lsl #19
   1273c:	andeq	r2, r1, ip, lsl #17
   12740:	andeq	r2, r1, ip, lsl #17
   12744:	andeq	r2, r1, ip, lsl #17
   12748:	andeq	r2, r1, ip, lsl #17
   1274c:	andeq	r2, r1, ip, lsl #17
   12750:	andeq	r2, r1, ip, lsl #17
   12754:	andeq	r2, r1, ip, lsl #17
   12758:	andeq	r2, r1, ip, lsl #17
   1275c:	andeq	r2, r1, ip, lsl #17
   12760:	andeq	r2, r1, ip, lsl #17
   12764:	andeq	r2, r1, ip, lsl #17
   12768:	andeq	r2, r1, ip, lsl #17
   1276c:	andeq	r2, r1, ip, lsl #17
   12770:	andeq	r2, r1, ip, lsl #17
   12774:	andeq	r2, r1, ip, lsl #17
   12778:	andeq	r2, r1, ip, lsl #17
   1277c:	andeq	r2, r1, r4, lsl #19
   12780:	andeq	r2, r1, r4, lsl #19
   12784:	andeq	r2, r1, r4, lsl #19
   12788:	andeq	r2, r1, r4, lsl #19
   1278c:	ldrdeq	r2, [r1], -r8
   12790:	muleq	r1, ip, fp
   12794:	andeq	r2, r1, ip, lsl #17
   12798:	andeq	r2, r1, ip, lsl #17
   1279c:	andeq	r2, r1, ip, lsl #17
   127a0:	andeq	r2, r1, ip, lsl #17
   127a4:	andeq	r2, r1, ip, lsl #17
   127a8:	andeq	r2, r1, ip, lsl #17
   127ac:	andeq	r2, r1, ip, lsl #17
   127b0:	andeq	r2, r1, ip, lsl #17
   127b4:	andeq	r2, r1, ip, lsl #17
   127b8:	andeq	r2, r1, ip, lsl #17
   127bc:	andeq	r2, r1, ip, lsl #17
   127c0:	andeq	r2, r1, ip, lsl #17
   127c4:	andeq	r2, r1, ip, lsl #17
   127c8:	andeq	r2, r1, ip, lsl #17
   127cc:	andeq	r2, r1, ip, lsl #17
   127d0:	andeq	r2, r1, ip, lsl #17
   127d4:	andeq	r2, r1, ip, lsl #17
   127d8:	andeq	r2, r1, ip, lsl #17
   127dc:	andeq	r2, r1, ip, lsl #17
   127e0:	andeq	r2, r1, ip, lsl #17
   127e4:	andeq	r2, r1, ip, lsl #17
   127e8:	andeq	r2, r1, ip, lsl #17
   127ec:	andeq	r2, r1, ip, lsl #17
   127f0:	andeq	r2, r1, ip, lsl #17
   127f4:	andeq	r2, r1, ip, lsl #17
   127f8:	andeq	r2, r1, ip, lsl #17
   127fc:	andeq	r2, r1, r4, lsl #19
   12800:	andeq	r2, r1, ip, lsr #19
   12804:	andeq	r2, r1, ip, lsl #17
   12808:	andeq	r2, r1, r4, lsl #19
   1280c:	andeq	r2, r1, ip, lsl #17
   12810:	andeq	r2, r1, r4, lsl #19
   12814:	andeq	r2, r1, ip, lsl #17
   12818:	andeq	r2, r1, ip, lsl #17
   1281c:	andeq	r2, r1, ip, lsl #17
   12820:	andeq	r2, r1, ip, lsl #17
   12824:	andeq	r2, r1, ip, lsl #17
   12828:	andeq	r2, r1, ip, lsl #17
   1282c:	andeq	r2, r1, ip, lsl #17
   12830:	andeq	r2, r1, ip, lsl #17
   12834:	andeq	r2, r1, ip, lsl #17
   12838:	andeq	r2, r1, ip, lsl #17
   1283c:	andeq	r2, r1, ip, lsl #17
   12840:	andeq	r2, r1, ip, lsl #17
   12844:	andeq	r2, r1, ip, lsl #17
   12848:	andeq	r2, r1, ip, lsl #17
   1284c:	andeq	r2, r1, ip, lsl #17
   12850:	andeq	r2, r1, ip, lsl #17
   12854:	andeq	r2, r1, ip, lsl #17
   12858:	andeq	r2, r1, ip, lsl #17
   1285c:	andeq	r2, r1, ip, lsl #17
   12860:	andeq	r2, r1, ip, lsl #17
   12864:	andeq	r2, r1, ip, lsl #17
   12868:	andeq	r2, r1, ip, lsl #17
   1286c:	andeq	r2, r1, ip, lsl #17
   12870:	andeq	r2, r1, ip, lsl #17
   12874:	andeq	r2, r1, ip, lsl #17
   12878:	andeq	r2, r1, ip, lsl #17
   1287c:	andeq	r2, r1, r0, asr #18
   12880:	andeq	r2, r1, r4, lsl #19
   12884:	andeq	r2, r1, r0, asr #18
   12888:	andeq	r2, r1, r8, ror #18
   1288c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12890:	tst	r0, #1
   12894:	bne	128c0 <__mempcpy_chk@plt+0x17e4>
   12898:	ldr	r1, [fp, #16]
   1289c:	ubfx	r0, r6, #5, #3
   128a0:	mov	r2, #1
   128a4:	ldr	r0, [r1, r0, lsl #2]
   128a8:	and	r1, r6, #31
   128ac:	tst	r0, r2, lsl r1
   128b0:	beq	128c0 <__mempcpy_chk@plt+0x17e4>
   128b4:	mov	r0, r6
   128b8:	mov	r1, r9
   128bc:	b	128d4 <__mempcpy_chk@plt+0x17f8>
   128c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   128c4:	mov	r1, r9
   128c8:	cmp	r0, #0
   128cc:	mov	r0, r6
   128d0:	beq	13020 <__mempcpy_chk@plt+0x1f44>
   128d4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   128d8:	tst	r2, #1
   128dc:	bne	131bc <__mempcpy_chk@plt+0x20e0>
   128e0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   128e4:	subs	r2, r2, #2
   128e8:	movwne	r2, #1
   128ec:	orr	r2, r2, lr
   128f0:	tst	r2, #1
   128f4:	bne	1292c <__mempcpy_chk@plt+0x1850>
   128f8:	cmp	r8, ip
   128fc:	mov	lr, #1
   12900:	movcc	r2, #39	; 0x27
   12904:	strbcc	r2, [r5, r8]
   12908:	add	r2, r8, #1
   1290c:	cmp	r2, ip
   12910:	movcc	r3, #36	; 0x24
   12914:	strbcc	r3, [r5, r2]
   12918:	add	r2, r8, #2
   1291c:	add	r8, r8, #3
   12920:	cmp	r2, ip
   12924:	movcc	r3, #39	; 0x27
   12928:	strbcc	r3, [r5, r2]
   1292c:	cmp	r8, ip
   12930:	movcc	r2, #92	; 0x5c
   12934:	strbcc	r2, [r5, r8]
   12938:	add	r8, r8, #1
   1293c:	b	13060 <__mempcpy_chk@plt+0x1f84>
   12940:	cmp	sl, #1
   12944:	beq	12968 <__mempcpy_chk@plt+0x188c>
   12948:	mov	r9, #0
   1294c:	cmn	sl, #1
   12950:	bne	12974 <__mempcpy_chk@plt+0x1898>
   12954:	ldrb	r0, [r4, #1]
   12958:	cmp	r0, #0
   1295c:	beq	12968 <__mempcpy_chk@plt+0x188c>
   12960:	mvn	sl, #0
   12964:	b	12974 <__mempcpy_chk@plt+0x1898>
   12968:	mov	r9, #0
   1296c:	cmp	r7, #0
   12970:	beq	12980 <__mempcpy_chk@plt+0x18a4>
   12974:	mov	r0, #0
   12978:	str	r0, [fp, #-56]	; 0xffffffc8
   1297c:	b	1288c <__mempcpy_chk@plt+0x17b0>
   12980:	mov	r1, #1
   12984:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12988:	cmp	r0, #2
   1298c:	bne	129a4 <__mempcpy_chk@plt+0x18c8>
   12990:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12994:	mov	r9, r1
   12998:	tst	r0, #1
   1299c:	beq	1288c <__mempcpy_chk@plt+0x17b0>
   129a0:	b	131bc <__mempcpy_chk@plt+0x20e0>
   129a4:	mov	r9, r1
   129a8:	b	1288c <__mempcpy_chk@plt+0x17b0>
   129ac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   129b0:	cmp	r0, #2
   129b4:	bne	12bf8 <__mempcpy_chk@plt+0x1b1c>
   129b8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   129bc:	tst	r0, #1
   129c0:	bne	131bc <__mempcpy_chk@plt+0x20e0>
   129c4:	mov	r0, #0
   129c8:	str	r0, [fp, #-56]	; 0xffffffc8
   129cc:	b	12c10 <__mempcpy_chk@plt+0x1b34>
   129d0:	mov	r0, #102	; 0x66
   129d4:	b	12c1c <__mempcpy_chk@plt+0x1b40>
   129d8:	mov	r2, #116	; 0x74
   129dc:	b	129ec <__mempcpy_chk@plt+0x1910>
   129e0:	mov	r0, #98	; 0x62
   129e4:	b	12c1c <__mempcpy_chk@plt+0x1b40>
   129e8:	mov	r2, #114	; 0x72
   129ec:	ldr	r0, [sp, #68]	; 0x44
   129f0:	tst	r0, #1
   129f4:	mov	r0, r2
   129f8:	bne	12c1c <__mempcpy_chk@plt+0x1b40>
   129fc:	b	131bc <__mempcpy_chk@plt+0x20e0>
   12a00:	ldr	r0, [sp, #84]	; 0x54
   12a04:	tst	r0, #1
   12a08:	beq	12c3c <__mempcpy_chk@plt+0x1b60>
   12a0c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12a10:	tst	r0, #1
   12a14:	bne	132a8 <__mempcpy_chk@plt+0x21cc>
   12a18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12a1c:	mov	r2, sl
   12a20:	subs	r0, r0, #2
   12a24:	movwne	r0, #1
   12a28:	orr	r0, r0, lr
   12a2c:	tst	r0, #1
   12a30:	bne	12a68 <__mempcpy_chk@plt+0x198c>
   12a34:	cmp	r8, ip
   12a38:	mov	lr, #1
   12a3c:	movcc	r0, #39	; 0x27
   12a40:	strbcc	r0, [r5, r8]
   12a44:	add	r0, r8, #1
   12a48:	cmp	r0, ip
   12a4c:	movcc	r1, #36	; 0x24
   12a50:	strbcc	r1, [r5, r0]
   12a54:	add	r0, r8, #2
   12a58:	add	r8, r8, #3
   12a5c:	cmp	r0, ip
   12a60:	movcc	r1, #39	; 0x27
   12a64:	strbcc	r1, [r5, r0]
   12a68:	mov	r1, #1
   12a6c:	cmp	r8, ip
   12a70:	mov	r9, #0
   12a74:	mov	r6, #48	; 0x30
   12a78:	str	r1, [fp, #-56]	; 0xffffffc8
   12a7c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12a80:	movcc	r0, #92	; 0x5c
   12a84:	strbcc	r0, [r5, r8]
   12a88:	add	r0, r8, #1
   12a8c:	cmp	r1, #2
   12a90:	beq	12d98 <__mempcpy_chk@plt+0x1cbc>
   12a94:	add	r1, r7, #1
   12a98:	cmp	r1, r2
   12a9c:	bcs	12d98 <__mempcpy_chk@plt+0x1cbc>
   12aa0:	ldrb	r1, [r4, r1]
   12aa4:	sub	r1, r1, #48	; 0x30
   12aa8:	uxtb	r1, r1
   12aac:	cmp	r1, #9
   12ab0:	bhi	12d98 <__mempcpy_chk@plt+0x1cbc>
   12ab4:	cmp	r0, ip
   12ab8:	movcc	r1, #48	; 0x30
   12abc:	strbcc	r1, [r5, r0]
   12ac0:	add	r0, r8, #2
   12ac4:	add	r8, r8, #3
   12ac8:	cmp	r0, ip
   12acc:	movcc	r1, #48	; 0x30
   12ad0:	strbcc	r1, [r5, r0]
   12ad4:	b	1288c <__mempcpy_chk@plt+0x17b0>
   12ad8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12adc:	mov	r6, #63	; 0x3f
   12ae0:	cmp	r0, #5
   12ae4:	beq	12da0 <__mempcpy_chk@plt+0x1cc4>
   12ae8:	mov	r1, #0
   12aec:	cmp	r0, #2
   12af0:	str	r1, [fp, #-56]	; 0xffffffc8
   12af4:	bne	12e54 <__mempcpy_chk@plt+0x1d78>
   12af8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12afc:	mov	r9, #0
   12b00:	b	12998 <__mempcpy_chk@plt+0x18bc>
   12b04:	mov	r0, #118	; 0x76
   12b08:	b	12c1c <__mempcpy_chk@plt+0x1b40>
   12b0c:	mov	r0, #1
   12b10:	mov	r6, #39	; 0x27
   12b14:	str	r0, [sp, #60]	; 0x3c
   12b18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b1c:	cmp	r0, #2
   12b20:	bne	12b94 <__mempcpy_chk@plt+0x1ab8>
   12b24:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b28:	tst	r0, #1
   12b2c:	bne	131bc <__mempcpy_chk@plt+0x20e0>
   12b30:	ldr	r2, [sp, #56]	; 0x38
   12b34:	clz	r1, ip
   12b38:	mov	lr, #0
   12b3c:	lsr	r1, r1, #5
   12b40:	cmp	r2, #0
   12b44:	mov	r0, r2
   12b48:	movwne	r0, #1
   12b4c:	orrs	r0, r0, r1
   12b50:	moveq	r2, ip
   12b54:	moveq	ip, r0
   12b58:	cmp	r8, ip
   12b5c:	str	r2, [sp, #56]	; 0x38
   12b60:	movcc	r0, #39	; 0x27
   12b64:	strbcc	r0, [r5, r8]
   12b68:	add	r0, r8, #1
   12b6c:	cmp	r0, ip
   12b70:	movcc	r1, #92	; 0x5c
   12b74:	strbcc	r1, [r5, r0]
   12b78:	add	r0, r8, #2
   12b7c:	add	r8, r8, #3
   12b80:	cmp	r0, ip
   12b84:	movcc	r1, #39	; 0x27
   12b88:	strbcc	r1, [r5, r0]
   12b8c:	mov	r0, #0
   12b90:	str	r0, [fp, #-56]	; 0xffffffc8
   12b94:	mov	r9, #1
   12b98:	b	1288c <__mempcpy_chk@plt+0x17b0>
   12b9c:	ldr	r0, [sp, #40]	; 0x28
   12ba0:	str	lr, [sp, #44]	; 0x2c
   12ba4:	str	ip, [sp, #88]	; 0x58
   12ba8:	cmp	r0, #1
   12bac:	bne	12c5c <__mempcpy_chk@plt+0x1b80>
   12bb0:	str	sl, [sp, #36]	; 0x24
   12bb4:	bl	10fb0 <__ctype_b_loc@plt>
   12bb8:	ldr	r0, [r0]
   12bbc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12bc0:	mov	r1, #1
   12bc4:	add	r0, r0, r6, lsl #1
   12bc8:	ldrb	r0, [r0, #1]
   12bcc:	ubfx	r9, r0, #6, #1
   12bd0:	ldr	r0, [sp, #52]	; 0x34
   12bd4:	ldr	lr, [sp, #44]	; 0x2c
   12bd8:	cmp	r1, #1
   12bdc:	orr	r3, r9, r0
   12be0:	bhi	12e5c <__mempcpy_chk@plt+0x1d80>
   12be4:	tst	r3, #1
   12be8:	beq	12e5c <__mempcpy_chk@plt+0x1d80>
   12bec:	ldr	sl, [sp, #36]	; 0x24
   12bf0:	ldr	ip, [sp, #88]	; 0x58
   12bf4:	b	1288c <__mempcpy_chk@plt+0x17b0>
   12bf8:	ldr	r1, [sp, #48]	; 0x30
   12bfc:	mov	r0, #0
   12c00:	str	r0, [fp, #-56]	; 0xffffffc8
   12c04:	mov	r0, #92	; 0x5c
   12c08:	cmp	r1, #0
   12c0c:	beq	12c1c <__mempcpy_chk@plt+0x1b40>
   12c10:	mov	r6, #92	; 0x5c
   12c14:	mov	r9, #0
   12c18:	b	13020 <__mempcpy_chk@plt+0x1f44>
   12c1c:	mov	r1, #0
   12c20:	mov	r9, #0
   12c24:	str	r1, [fp, #-56]	; 0xffffffc8
   12c28:	ldr	r1, [sp, #84]	; 0x54
   12c2c:	tst	r1, #1
   12c30:	mov	r1, #0
   12c34:	beq	1288c <__mempcpy_chk@plt+0x17b0>
   12c38:	b	128d4 <__mempcpy_chk@plt+0x17f8>
   12c3c:	ldr	r0, [sp, #32]
   12c40:	mov	r6, #0
   12c44:	mov	r9, #0
   12c48:	cmp	r0, #0
   12c4c:	mov	r0, #0
   12c50:	str	r0, [fp, #-56]	; 0xffffffc8
   12c54:	beq	1288c <__mempcpy_chk@plt+0x17b0>
   12c58:	b	13078 <__mempcpy_chk@plt+0x1f9c>
   12c5c:	mov	r0, #0
   12c60:	cmn	sl, #1
   12c64:	sub	r3, fp, #40	; 0x28
   12c68:	str	r0, [fp, #-36]	; 0xffffffdc
   12c6c:	str	r0, [fp, #-40]	; 0xffffffd8
   12c70:	bne	12c88 <__mempcpy_chk@plt+0x1bac>
   12c74:	mov	r0, r4
   12c78:	bl	10fd4 <strlen@plt>
   12c7c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12c80:	sub	r3, fp, #40	; 0x28
   12c84:	mov	sl, r0
   12c88:	ldr	r0, [sp, #72]	; 0x48
   12c8c:	mov	r9, #1
   12c90:	mov	r1, #0
   12c94:	str	sl, [sp, #36]	; 0x24
   12c98:	add	r0, r0, r7
   12c9c:	str	r0, [sp, #20]
   12ca0:	add	r0, r1, r7
   12ca4:	str	r1, [sp, #24]
   12ca8:	add	r1, r4, r0
   12cac:	mov	r4, r0
   12cb0:	sub	r2, sl, r0
   12cb4:	sub	r0, fp, #44	; 0x2c
   12cb8:	bl	148b8 <__mempcpy_chk@plt+0x37dc>
   12cbc:	cmp	r0, #0
   12cc0:	beq	130cc <__mempcpy_chk@plt+0x1ff0>
   12cc4:	cmn	r0, #1
   12cc8:	beq	13084 <__mempcpy_chk@plt+0x1fa8>
   12ccc:	ldr	r2, [sp, #36]	; 0x24
   12cd0:	cmn	r0, #2
   12cd4:	beq	1308c <__mempcpy_chk@plt+0x1fb0>
   12cd8:	ldr	r2, [sp, #64]	; 0x40
   12cdc:	ldr	ip, [sp, #88]	; 0x58
   12ce0:	ldr	r4, [sp, #84]	; 0x54
   12ce4:	ldr	lr, [fp, #-48]	; 0xffffffd0
   12ce8:	cmp	r0, #2
   12cec:	mov	r1, #0
   12cf0:	movwcc	r1, #1
   12cf4:	eor	r2, r2, #1
   12cf8:	orrs	r1, r2, r1
   12cfc:	bne	12d4c <__mempcpy_chk@plt+0x1c70>
   12d00:	ldr	r1, [sp, #24]
   12d04:	ldr	r2, [sp, #20]
   12d08:	add	r1, r2, r1
   12d0c:	sub	r2, r0, #1
   12d10:	ldrb	r3, [r1]
   12d14:	sub	r5, r3, #94	; 0x5e
   12d18:	cmp	r5, #30
   12d1c:	bhi	12d34 <__mempcpy_chk@plt+0x1c58>
   12d20:	mov	r4, #1
   12d24:	mov	sl, #1073741829	; 0x40000005
   12d28:	tst	sl, r4, lsl r5
   12d2c:	ldr	r4, [sp, #84]	; 0x54
   12d30:	bne	13194 <__mempcpy_chk@plt+0x20b8>
   12d34:	sub	r3, r3, #91	; 0x5b
   12d38:	cmp	r3, #2
   12d3c:	bcc	13194 <__mempcpy_chk@plt+0x20b8>
   12d40:	add	r1, r1, #1
   12d44:	subs	r2, r2, #1
   12d48:	bne	12d10 <__mempcpy_chk@plt+0x1c34>
   12d4c:	ldr	r5, [sp, #24]
   12d50:	str	lr, [fp, #-48]	; 0xffffffd0
   12d54:	add	r5, r0, r5
   12d58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d5c:	bl	10efc <iswprint@plt>
   12d60:	cmp	r0, #0
   12d64:	sub	r4, fp, #40	; 0x28
   12d68:	movwne	r0, #1
   12d6c:	and	r9, r9, r0
   12d70:	mov	r0, r4
   12d74:	bl	10ecc <mbsinit@plt>
   12d78:	mov	r1, r5
   12d7c:	mov	r3, r4
   12d80:	ldr	sl, [sp, #36]	; 0x24
   12d84:	ldr	r5, [fp, #-84]	; 0xffffffac
   12d88:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12d8c:	cmp	r0, #0
   12d90:	beq	12ca0 <__mempcpy_chk@plt+0x1bc4>
   12d94:	b	12bd0 <__mempcpy_chk@plt+0x1af4>
   12d98:	mov	r8, r0
   12d9c:	b	1288c <__mempcpy_chk@plt+0x17b0>
   12da0:	mov	r0, #0
   12da4:	str	r0, [fp, #-56]	; 0xffffffc8
   12da8:	ldr	r0, [sp, #28]
   12dac:	cmp	r0, #0
   12db0:	beq	12e54 <__mempcpy_chk@plt+0x1d78>
   12db4:	add	r0, r7, #2
   12db8:	mov	r1, sl
   12dbc:	cmp	r0, sl
   12dc0:	bcs	12e54 <__mempcpy_chk@plt+0x1d78>
   12dc4:	add	r1, r7, r4
   12dc8:	ldrb	r1, [r1, #1]
   12dcc:	cmp	r1, #63	; 0x3f
   12dd0:	bne	12e54 <__mempcpy_chk@plt+0x1d78>
   12dd4:	ldrb	r9, [r4, r0]
   12dd8:	sub	r2, r9, #33	; 0x21
   12ddc:	cmp	r2, #29
   12de0:	bhi	12e54 <__mempcpy_chk@plt+0x1d78>
   12de4:	mov	r1, r4
   12de8:	movw	r4, #20929	; 0x51c1
   12dec:	mov	r3, #1
   12df0:	movt	r4, #14336	; 0x3800
   12df4:	tst	r4, r3, lsl r2
   12df8:	beq	130e0 <__mempcpy_chk@plt+0x2004>
   12dfc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12e00:	tst	r2, #1
   12e04:	bne	132b0 <__mempcpy_chk@plt+0x21d4>
   12e08:	cmp	r8, ip
   12e0c:	mov	r4, r1
   12e10:	mov	r7, r0
   12e14:	mov	r6, r9
   12e18:	movcc	r2, #63	; 0x3f
   12e1c:	strbcc	r2, [r5, r8]
   12e20:	add	r2, r8, #1
   12e24:	cmp	r2, ip
   12e28:	movcc	r3, #34	; 0x22
   12e2c:	strbcc	r3, [r5, r2]
   12e30:	add	r2, r8, #2
   12e34:	cmp	r2, ip
   12e38:	movcc	r3, #34	; 0x22
   12e3c:	strbcc	r3, [r5, r2]
   12e40:	add	r2, r8, #3
   12e44:	add	r8, r8, #4
   12e48:	cmp	r2, ip
   12e4c:	movcc	r3, #63	; 0x3f
   12e50:	strbcc	r3, [r5, r2]
   12e54:	mov	r9, #0
   12e58:	b	1288c <__mempcpy_chk@plt+0x17b0>
   12e5c:	ldr	sl, [sp, #36]	; 0x24
   12e60:	add	r0, r1, r7
   12e64:	mov	r2, #0
   12e68:	str	r3, [sp, #24]
   12e6c:	str	r0, [fp, #-56]	; 0xffffffc8
   12e70:	tst	r3, #1
   12e74:	beq	12ea0 <__mempcpy_chk@plt+0x1dc4>
   12e78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12e7c:	tst	r0, #1
   12e80:	beq	12f68 <__mempcpy_chk@plt+0x1e8c>
   12e84:	ldr	r1, [sp, #88]	; 0x58
   12e88:	mov	r0, r3
   12e8c:	cmp	r8, r1
   12e90:	movcc	r1, #92	; 0x5c
   12e94:	strbcc	r1, [r5, r8]
   12e98:	add	r8, r8, #1
   12e9c:	b	12f6c <__mempcpy_chk@plt+0x1e90>
   12ea0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12ea4:	tst	r1, #1
   12ea8:	bne	131b8 <__mempcpy_chk@plt+0x20dc>
   12eac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12eb0:	subs	r2, r1, #2
   12eb4:	movwne	r2, #1
   12eb8:	orr	r2, r2, lr
   12ebc:	tst	r2, #1
   12ec0:	bne	12f04 <__mempcpy_chk@plt+0x1e28>
   12ec4:	ldr	r1, [sp, #88]	; 0x58
   12ec8:	add	r2, r8, #1
   12ecc:	mov	lr, #1
   12ed0:	cmp	r8, r1
   12ed4:	movcc	r1, #39	; 0x27
   12ed8:	strbcc	r1, [r5, r8]
   12edc:	ldr	r1, [sp, #88]	; 0x58
   12ee0:	cmp	r2, r1
   12ee4:	movcc	r1, #36	; 0x24
   12ee8:	strbcc	r1, [r5, r2]
   12eec:	ldr	r1, [sp, #88]	; 0x58
   12ef0:	add	r2, r8, #2
   12ef4:	add	r8, r8, #3
   12ef8:	cmp	r2, r1
   12efc:	movcc	r1, #39	; 0x27
   12f00:	strbcc	r1, [r5, r2]
   12f04:	ldr	r1, [sp, #88]	; 0x58
   12f08:	add	r2, r8, #1
   12f0c:	mov	r0, r3
   12f10:	cmp	r8, r1
   12f14:	movcc	r1, #92	; 0x5c
   12f18:	strbcc	r1, [r5, r8]
   12f1c:	ldr	r1, [sp, #88]	; 0x58
   12f20:	cmp	r2, r1
   12f24:	bcs	12f38 <__mempcpy_chk@plt+0x1e5c>
   12f28:	uxtb	r3, r6
   12f2c:	mov	r1, #48	; 0x30
   12f30:	orr	r3, r1, r3, lsr #6
   12f34:	strb	r3, [r5, r2]
   12f38:	ldr	r1, [sp, #88]	; 0x58
   12f3c:	add	r2, r8, #2
   12f40:	add	r8, r8, #3
   12f44:	cmp	r2, r1
   12f48:	lsrcc	r3, r6, #3
   12f4c:	movcc	r1, #6
   12f50:	bficc	r3, r1, #3, #29
   12f54:	mov	r1, #6
   12f58:	bfi	r6, r1, #3, #29
   12f5c:	strbcc	r3, [r5, r2]
   12f60:	mov	r2, #1
   12f64:	b	12f74 <__mempcpy_chk@plt+0x1e98>
   12f68:	mov	r0, r3
   12f6c:	mov	r1, #0
   12f70:	str	r1, [fp, #-52]	; 0xffffffcc
   12f74:	mov	ip, r2
   12f78:	and	r1, r2, #1
   12f7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12f80:	add	r3, r7, #1
   12f84:	cmp	r2, r3
   12f88:	bls	13010 <__mempcpy_chk@plt+0x1f34>
   12f8c:	cmp	r1, #0
   12f90:	mvn	r5, lr
   12f94:	movwne	r1, #1
   12f98:	orr	r5, r5, r1
   12f9c:	tst	r5, #1
   12fa0:	bne	12fe4 <__mempcpy_chk@plt+0x1f08>
   12fa4:	ldr	r1, [sp, #88]	; 0x58
   12fa8:	ldr	r5, [fp, #-84]	; 0xffffffac
   12fac:	mov	r2, r4
   12fb0:	ldr	r4, [sp, #88]	; 0x58
   12fb4:	ldr	r0, [sp, #24]
   12fb8:	mov	lr, #0
   12fbc:	cmp	r8, r1
   12fc0:	movcc	r1, #39	; 0x27
   12fc4:	strbcc	r1, [r5, r8]
   12fc8:	add	r1, r8, #1
   12fcc:	add	r8, r8, #2
   12fd0:	cmp	r1, r4
   12fd4:	movcc	r4, #39	; 0x27
   12fd8:	strbcc	r4, [r5, r1]
   12fdc:	mov	r4, r2
   12fe0:	b	12fe8 <__mempcpy_chk@plt+0x1f0c>
   12fe4:	ldr	r5, [fp, #-84]	; 0xffffffac
   12fe8:	ldr	r1, [sp, #88]	; 0x58
   12fec:	mov	r2, ip
   12ff0:	cmp	r8, r1
   12ff4:	ldr	r1, [sp, #72]	; 0x48
   12ff8:	strbcc	r6, [r5, r8]
   12ffc:	add	r8, r8, #1
   13000:	ldrb	r6, [r1, r7]
   13004:	mov	r7, r3
   13008:	mov	r3, r0
   1300c:	b	12e70 <__mempcpy_chk@plt+0x1d94>
   13010:	ldr	ip, [sp, #88]	; 0x58
   13014:	cmp	r1, #0
   13018:	movwne	r1, #1
   1301c:	str	r1, [fp, #-56]	; 0xffffffc8
   13020:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13024:	cmp	r0, #0
   13028:	bne	13058 <__mempcpy_chk@plt+0x1f7c>
   1302c:	tst	lr, #1
   13030:	beq	13058 <__mempcpy_chk@plt+0x1f7c>
   13034:	cmp	r8, ip
   13038:	mov	lr, #0
   1303c:	movcc	r0, #39	; 0x27
   13040:	strbcc	r0, [r5, r8]
   13044:	add	r0, r8, #1
   13048:	add	r8, r8, #2
   1304c:	cmp	r0, ip
   13050:	movcc	r1, #39	; 0x27
   13054:	strbcc	r1, [r5, r0]
   13058:	mov	r1, r9
   1305c:	mov	r0, r6
   13060:	cmp	r8, ip
   13064:	strbcc	r0, [r5, r8]
   13068:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1306c:	add	r8, r8, #1
   13070:	and	r0, r0, r1
   13074:	str	r0, [fp, #-48]	; 0xffffffd0
   13078:	mov	r3, sl
   1307c:	add	r7, r7, #1
   13080:	b	12570 <__mempcpy_chk@plt+0x1494>
   13084:	mov	r9, #0
   13088:	b	130cc <__mempcpy_chk@plt+0x1ff0>
   1308c:	mov	r9, #0
   13090:	cmp	r2, r4
   13094:	bls	130cc <__mempcpy_chk@plt+0x1ff0>
   13098:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1309c:	ldr	r1, [sp, #24]
   130a0:	add	r0, r4, r7
   130a4:	mov	r3, r1
   130a8:	ldrb	r1, [r0, r1]
   130ac:	cmp	r1, #0
   130b0:	beq	130d8 <__mempcpy_chk@plt+0x1ffc>
   130b4:	add	r3, r3, #1
   130b8:	add	r1, r7, r3
   130bc:	cmp	r1, r2
   130c0:	mov	r1, r3
   130c4:	bcc	130a4 <__mempcpy_chk@plt+0x1fc8>
   130c8:	b	12bd0 <__mempcpy_chk@plt+0x1af4>
   130cc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   130d0:	ldr	r1, [sp, #24]
   130d4:	b	12bd0 <__mempcpy_chk@plt+0x1af4>
   130d8:	mov	r1, r3
   130dc:	b	12bd0 <__mempcpy_chk@plt+0x1af4>
   130e0:	mov	r9, #0
   130e4:	mov	r4, r1
   130e8:	b	1288c <__mempcpy_chk@plt+0x17b0>
   130ec:	mov	sl, r7
   130f0:	b	130f8 <__mempcpy_chk@plt+0x201c>
   130f4:	mvn	sl, #0
   130f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   130fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13100:	eor	r0, r1, #2
   13104:	orr	r0, r0, r8
   13108:	clz	r0, r0
   1310c:	lsr	r0, r0, #5
   13110:	tst	r2, r0
   13114:	bne	131bc <__mempcpy_chk@plt+0x20e0>
   13118:	subs	r0, r1, #2
   1311c:	movwne	r0, #1
   13120:	orr	r0, r2, r0
   13124:	tst	r0, #1
   13128:	ldreq	r0, [sp, #60]	; 0x3c
   1312c:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   13130:	eoreq	r0, r0, #1
   13134:	tsteq	r0, #1
   13138:	bne	13250 <__mempcpy_chk@plt+0x2174>
   1313c:	tst	r1, #1
   13140:	bne	1321c <__mempcpy_chk@plt+0x2140>
   13144:	ldr	r6, [sp, #56]	; 0x38
   13148:	mov	r9, #0
   1314c:	cmp	r6, #0
   13150:	beq	13248 <__mempcpy_chk@plt+0x216c>
   13154:	ldr	r0, [sp, #84]	; 0x54
   13158:	mov	r1, #0
   1315c:	mov	r7, #2
   13160:	cmp	ip, #0
   13164:	str	r1, [fp, #-48]	; 0xffffffd0
   13168:	mov	r1, #0
   1316c:	str	r1, [fp, #-76]	; 0xffffffb4
   13170:	beq	122d8 <__mempcpy_chk@plt+0x11fc>
   13174:	b	13250 <__mempcpy_chk@plt+0x2174>
   13178:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1317c:	ldr	r1, [fp, #12]
   13180:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13184:	mov	r5, r3
   13188:	mov	ip, r6
   1318c:	mov	r3, sl
   13190:	b	131e0 <__mempcpy_chk@plt+0x2104>
   13194:	tst	r4, #1
   13198:	ldr	r5, [fp, #-84]	; 0xffffffac
   1319c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   131a0:	ldr	r1, [fp, #12]
   131a4:	ldr	r3, [sp, #36]	; 0x24
   131a8:	mov	r0, #2
   131ac:	movwne	r0, #4
   131b0:	mov	r2, r0
   131b4:	b	131e0 <__mempcpy_chk@plt+0x2104>
   131b8:	ldr	ip, [sp, #88]	; 0x58
   131bc:	ldr	r1, [sp, #84]	; 0x54
   131c0:	mov	r0, #2
   131c4:	tst	r1, #1
   131c8:	movwne	r0, #4
   131cc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   131d0:	ldr	r1, [fp, #12]
   131d4:	mov	r3, sl
   131d8:	cmp	r2, #2
   131dc:	moveq	r2, r0
   131e0:	mov	r0, #0
   131e4:	bic	r1, r1, #2
   131e8:	str	r2, [sp]
   131ec:	mov	r2, r4
   131f0:	str	r0, [sp, #8]
   131f4:	ldr	r0, [sp, #76]	; 0x4c
   131f8:	str	r1, [sp, #4]
   131fc:	mov	r1, ip
   13200:	str	r0, [sp, #12]
   13204:	ldr	r0, [sp, #80]	; 0x50
   13208:	str	r0, [sp, #16]
   1320c:	mov	r0, r5
   13210:	bl	1224c <__mempcpy_chk@plt+0x1170>
   13214:	mov	r8, r0
   13218:	b	1329c <__mempcpy_chk@plt+0x21c0>
   1321c:	mov	r0, #5
   13220:	ldr	r1, [sp, #56]	; 0x38
   13224:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13228:	mov	r3, sl
   1322c:	str	r0, [sp]
   13230:	ldr	r0, [fp, #12]
   13234:	str	r0, [sp, #4]
   13238:	ldr	r0, [fp, #16]
   1323c:	str	r0, [sp, #8]
   13240:	ldr	r0, [sp, #76]	; 0x4c
   13244:	b	13200 <__mempcpy_chk@plt+0x2124>
   13248:	mov	r0, #0
   1324c:	str	r0, [fp, #-76]	; 0xffffffb4
   13250:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13254:	cmp	r1, #0
   13258:	beq	13290 <__mempcpy_chk@plt+0x21b4>
   1325c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13260:	tst	r0, #1
   13264:	bne	13290 <__mempcpy_chk@plt+0x21b4>
   13268:	ldrb	r0, [r1]
   1326c:	cmp	r0, #0
   13270:	beq	13290 <__mempcpy_chk@plt+0x21b4>
   13274:	add	r1, r1, #1
   13278:	cmp	r8, ip
   1327c:	strbcc	r0, [r5, r8]
   13280:	add	r8, r8, #1
   13284:	ldrb	r0, [r1], #1
   13288:	cmp	r0, #0
   1328c:	bne	13278 <__mempcpy_chk@plt+0x219c>
   13290:	cmp	r8, ip
   13294:	movcc	r0, #0
   13298:	strbcc	r0, [r5, r8]
   1329c:	mov	r0, r8
   132a0:	sub	sp, fp, #28
   132a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132a8:	mov	r0, #4
   132ac:	b	131cc <__mempcpy_chk@plt+0x20f0>
   132b0:	mov	r4, r1
   132b4:	b	131bc <__mempcpy_chk@plt+0x20e0>
   132b8:	bl	110ac <abort@plt>
   132bc:	mov	r3, r2
   132c0:	mov	r2, #0
   132c4:	b	132c8 <__mempcpy_chk@plt+0x21ec>
   132c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132cc:	add	fp, sp, #28
   132d0:	sub	sp, sp, #36	; 0x24
   132d4:	movw	r8, #24936	; 0x6168
   132d8:	cmp	r3, #0
   132dc:	mov	r4, r2
   132e0:	str	r2, [sp, #24]
   132e4:	mov	r5, r1
   132e8:	mov	r6, r0
   132ec:	str	r0, [sp, #20]
   132f0:	movt	r8, #2
   132f4:	movne	r8, r3
   132f8:	bl	10fe0 <__errno_location@plt>
   132fc:	str	r0, [sp, #28]
   13300:	ldr	r1, [r8, #40]	; 0x28
   13304:	ldr	r2, [r8, #44]	; 0x2c
   13308:	ldr	r7, [r0]
   1330c:	cmp	r4, #0
   13310:	add	sl, r8, #8
   13314:	mov	r0, #0
   13318:	ldm	r8, {r3, r9}
   1331c:	orreq	r9, r9, #1
   13320:	stm	sp, {r3, r9, sl}
   13324:	str	r1, [sp, #12]
   13328:	str	r2, [sp, #16]
   1332c:	mov	r1, #0
   13330:	mov	r2, r6
   13334:	mov	r3, r5
   13338:	str	r7, [sp, #32]
   1333c:	mov	r7, r5
   13340:	bl	1224c <__mempcpy_chk@plt+0x1170>
   13344:	add	r4, r0, #1
   13348:	mov	r5, r0
   1334c:	mov	r0, r4
   13350:	bl	1436c <__mempcpy_chk@plt+0x3290>
   13354:	mov	r6, r0
   13358:	ldr	r0, [r8]
   1335c:	ldr	r2, [r8, #44]	; 0x2c
   13360:	ldr	r1, [r8, #40]	; 0x28
   13364:	mov	r3, r7
   13368:	stm	sp, {r0, r9, sl}
   1336c:	str	r2, [sp, #16]
   13370:	ldr	r2, [sp, #20]
   13374:	str	r1, [sp, #12]
   13378:	mov	r0, r6
   1337c:	mov	r1, r4
   13380:	bl	1224c <__mempcpy_chk@plt+0x1170>
   13384:	ldr	r0, [sp, #24]
   13388:	ldr	r1, [sp, #32]
   1338c:	ldr	r2, [sp, #28]
   13390:	cmp	r0, #0
   13394:	str	r1, [r2]
   13398:	strne	r5, [r0]
   1339c:	mov	r0, r6
   133a0:	sub	sp, fp, #28
   133a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   133ac:	add	fp, sp, #24
   133b0:	movw	r5, #24828	; 0x60fc
   133b4:	movw	r8, #24824	; 0x60f8
   133b8:	movt	r5, #2
   133bc:	movt	r8, #2
   133c0:	ldr	r0, [r5]
   133c4:	ldr	r4, [r8]
   133c8:	cmp	r0, #2
   133cc:	blt	133f8 <__mempcpy_chk@plt+0x231c>
   133d0:	add	r7, r4, #12
   133d4:	mov	r6, #0
   133d8:	ldr	r0, [r7, r6, lsl #3]
   133dc:	bl	11f4c <__mempcpy_chk@plt+0xe70>
   133e0:	ldr	r1, [r5]
   133e4:	add	r2, r6, #2
   133e8:	add	r0, r6, #1
   133ec:	mov	r6, r0
   133f0:	cmp	r2, r1
   133f4:	blt	133d8 <__mempcpy_chk@plt+0x22fc>
   133f8:	ldr	r0, [r4, #4]
   133fc:	movw	r9, #24984	; 0x6198
   13400:	movw	r7, #24832	; 0x6100
   13404:	movt	r9, #2
   13408:	movt	r7, #2
   1340c:	cmp	r0, r9
   13410:	beq	13420 <__mempcpy_chk@plt+0x2344>
   13414:	bl	11f4c <__mempcpy_chk@plt+0xe70>
   13418:	mov	r0, #256	; 0x100
   1341c:	stm	r7, {r0, r9}
   13420:	cmp	r4, r7
   13424:	beq	13434 <__mempcpy_chk@plt+0x2358>
   13428:	mov	r0, r4
   1342c:	bl	11f4c <__mempcpy_chk@plt+0xe70>
   13430:	str	r7, [r8]
   13434:	mov	r0, #1
   13438:	str	r0, [r5]
   1343c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13440:	movw	r3, #24936	; 0x6168
   13444:	mvn	r2, #0
   13448:	movt	r3, #2
   1344c:	b	13450 <__mempcpy_chk@plt+0x2374>
   13450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13454:	add	fp, sp, #28
   13458:	sub	sp, sp, #44	; 0x2c
   1345c:	mov	r7, r3
   13460:	str	r2, [sp, #36]	; 0x24
   13464:	str	r1, [sp, #32]
   13468:	mov	r5, r0
   1346c:	bl	10fe0 <__errno_location@plt>
   13470:	cmp	r5, #0
   13474:	bmi	135e4 <__mempcpy_chk@plt+0x2508>
   13478:	cmn	r5, #-2147483647	; 0x80000001
   1347c:	beq	135e4 <__mempcpy_chk@plt+0x2508>
   13480:	movw	r8, #24828	; 0x60fc
   13484:	movw	r4, #24824	; 0x60f8
   13488:	str	r0, [sp, #28]
   1348c:	ldr	r0, [r0]
   13490:	movt	r8, #2
   13494:	movt	r4, #2
   13498:	ldr	r1, [r8]
   1349c:	ldr	r6, [r4]
   134a0:	str	r0, [sp, #24]
   134a4:	cmp	r1, r5
   134a8:	ble	134b4 <__mempcpy_chk@plt+0x23d8>
   134ac:	mov	sl, r6
   134b0:	b	13520 <__mempcpy_chk@plt+0x2444>
   134b4:	movw	r9, #24832	; 0x6100
   134b8:	mov	r0, #8
   134bc:	str	r1, [fp, #-32]	; 0xffffffe0
   134c0:	sub	r1, r5, r1
   134c4:	mvn	r3, #-2147483648	; 0x80000000
   134c8:	movt	r9, #2
   134cc:	str	r0, [sp]
   134d0:	add	r2, r1, #1
   134d4:	sub	r1, fp, #32
   134d8:	subs	r0, r6, r9
   134dc:	movne	r0, r6
   134e0:	bl	1449c <__mempcpy_chk@plt+0x33c0>
   134e4:	mov	sl, r0
   134e8:	cmp	r6, r9
   134ec:	str	r0, [r4]
   134f0:	bne	134fc <__mempcpy_chk@plt+0x2420>
   134f4:	ldrd	r0, [r9]
   134f8:	stm	sl, {r0, r1}
   134fc:	ldr	r1, [r8]
   13500:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13504:	add	r0, sl, r1, lsl #3
   13508:	sub	r1, r2, r1
   1350c:	lsl	r2, r1, #3
   13510:	mov	r1, #0
   13514:	bl	11004 <memset@plt>
   13518:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1351c:	str	r0, [r8]
   13520:	mov	r9, sl
   13524:	ldm	r7, {r0, r1}
   13528:	orr	r8, r1, #1
   1352c:	add	r1, r7, #8
   13530:	ldr	r2, [r7, #40]	; 0x28
   13534:	ldr	r3, [r7, #44]	; 0x2c
   13538:	ldr	r6, [r9, r5, lsl #3]!
   1353c:	str	r1, [sp, #20]
   13540:	ldr	r4, [r9, #4]!
   13544:	stm	sp, {r0, r8}
   13548:	add	r0, sp, #8
   1354c:	stm	r0, {r1, r2, r3}
   13550:	ldr	r2, [sp, #32]
   13554:	ldr	r3, [sp, #36]	; 0x24
   13558:	mov	r1, r6
   1355c:	mov	r0, r4
   13560:	bl	1224c <__mempcpy_chk@plt+0x1170>
   13564:	cmp	r6, r0
   13568:	bhi	135cc <__mempcpy_chk@plt+0x24f0>
   1356c:	add	r6, r0, #1
   13570:	movw	r0, #24984	; 0x6198
   13574:	movt	r0, #2
   13578:	str	r6, [sl, r5, lsl #3]
   1357c:	cmp	r4, r0
   13580:	beq	1358c <__mempcpy_chk@plt+0x24b0>
   13584:	mov	r0, r4
   13588:	bl	11f4c <__mempcpy_chk@plt+0xe70>
   1358c:	mov	r0, r6
   13590:	bl	1436c <__mempcpy_chk@plt+0x3290>
   13594:	str	r0, [r9]
   13598:	mov	r4, r0
   1359c:	add	r3, sp, #8
   135a0:	ldr	r0, [r7]
   135a4:	ldr	r1, [r7, #40]	; 0x28
   135a8:	ldr	r2, [r7, #44]	; 0x2c
   135ac:	stm	sp, {r0, r8}
   135b0:	ldr	r0, [sp, #20]
   135b4:	stm	r3, {r0, r1, r2}
   135b8:	ldr	r2, [sp, #32]
   135bc:	ldr	r3, [sp, #36]	; 0x24
   135c0:	mov	r0, r4
   135c4:	mov	r1, r6
   135c8:	bl	1224c <__mempcpy_chk@plt+0x1170>
   135cc:	ldr	r0, [sp, #28]
   135d0:	ldr	r1, [sp, #24]
   135d4:	str	r1, [r0]
   135d8:	mov	r0, r4
   135dc:	sub	sp, fp, #28
   135e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135e4:	bl	110ac <abort@plt>
   135e8:	movw	r3, #24936	; 0x6168
   135ec:	movt	r3, #2
   135f0:	b	13450 <__mempcpy_chk@plt+0x2374>
   135f4:	movw	r3, #24936	; 0x6168
   135f8:	mov	r1, r0
   135fc:	mov	r0, #0
   13600:	mvn	r2, #0
   13604:	movt	r3, #2
   13608:	b	13450 <__mempcpy_chk@plt+0x2374>
   1360c:	movw	r3, #24936	; 0x6168
   13610:	mov	r2, r1
   13614:	mov	r1, r0
   13618:	mov	r0, #0
   1361c:	movt	r3, #2
   13620:	b	13450 <__mempcpy_chk@plt+0x2374>
   13624:	push	{fp, lr}
   13628:	mov	fp, sp
   1362c:	sub	sp, sp, #48	; 0x30
   13630:	vmov.i32	q8, #0	; 0x00000000
   13634:	mov	ip, #32
   13638:	mov	r3, sp
   1363c:	mov	lr, r2
   13640:	cmp	r1, #10
   13644:	add	r2, r3, #16
   13648:	vst1.64	{d16-d17}, [r3], ip
   1364c:	vst1.64	{d16-d17}, [r2]
   13650:	vst1.64	{d16-d17}, [r3]
   13654:	beq	13674 <__mempcpy_chk@plt+0x2598>
   13658:	str	r1, [sp]
   1365c:	mov	r3, sp
   13660:	mov	r1, lr
   13664:	mvn	r2, #0
   13668:	bl	13450 <__mempcpy_chk@plt+0x2374>
   1366c:	mov	sp, fp
   13670:	pop	{fp, pc}
   13674:	bl	110ac <abort@plt>
   13678:	push	{r4, sl, fp, lr}
   1367c:	add	fp, sp, #8
   13680:	sub	sp, sp, #48	; 0x30
   13684:	vmov.i32	q8, #0	; 0x00000000
   13688:	mov	ip, r3
   1368c:	mov	r3, sp
   13690:	mov	lr, #32
   13694:	cmp	r1, #10
   13698:	add	r4, r3, #16
   1369c:	vst1.64	{d16-d17}, [r3], lr
   136a0:	vst1.64	{d16-d17}, [r4]
   136a4:	vst1.64	{d16-d17}, [r3]
   136a8:	beq	136c8 <__mempcpy_chk@plt+0x25ec>
   136ac:	str	r1, [sp]
   136b0:	mov	r1, r2
   136b4:	mov	r3, sp
   136b8:	mov	r2, ip
   136bc:	bl	13450 <__mempcpy_chk@plt+0x2374>
   136c0:	sub	sp, fp, #8
   136c4:	pop	{r4, sl, fp, pc}
   136c8:	bl	110ac <abort@plt>
   136cc:	mov	r2, r1
   136d0:	mov	r1, r0
   136d4:	mov	r0, #0
   136d8:	b	13624 <__mempcpy_chk@plt+0x2548>
   136dc:	mov	r3, r2
   136e0:	mov	r2, r1
   136e4:	mov	r1, r0
   136e8:	mov	r0, #0
   136ec:	b	13678 <__mempcpy_chk@plt+0x259c>
   136f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   136f4:	add	fp, sp, #24
   136f8:	sub	sp, sp, #48	; 0x30
   136fc:	movw	r8, #24936	; 0x6168
   13700:	mov	lr, r0
   13704:	mov	r3, sp
   13708:	mov	ip, r1
   1370c:	movt	r8, #2
   13710:	mov	r1, r3
   13714:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   13718:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   1371c:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   13720:	stm	r1, {r0, r4, r5, r6, r7, r9}
   13724:	ubfx	r0, r2, #5, #3
   13728:	and	r2, r2, #31
   1372c:	mov	r4, #1
   13730:	add	r0, r3, r0, lsl #2
   13734:	ldr	r1, [r0, #8]
   13738:	bic	r4, r4, r1, lsr r2
   1373c:	eor	r1, r1, r4, lsl r2
   13740:	mov	r2, ip
   13744:	str	r1, [r0, #8]
   13748:	mov	r0, #0
   1374c:	mov	r1, lr
   13750:	bl	13450 <__mempcpy_chk@plt+0x2374>
   13754:	sub	sp, fp, #24
   13758:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1375c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13760:	add	fp, sp, #24
   13764:	sub	sp, sp, #48	; 0x30
   13768:	movw	lr, #24936	; 0x6168
   1376c:	mov	ip, r0
   13770:	mov	r3, sp
   13774:	movt	lr, #2
   13778:	mov	r2, r3
   1377c:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   13780:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   13784:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   13788:	stm	r2, {r0, r4, r5, r6, r7, r8}
   1378c:	ubfx	r0, r1, #5, #3
   13790:	and	r1, r1, #31
   13794:	mov	r7, #1
   13798:	add	r0, r3, r0, lsl #2
   1379c:	ldr	r2, [r0, #8]
   137a0:	bic	r7, r7, r2, lsr r1
   137a4:	eor	r1, r2, r7, lsl r1
   137a8:	mvn	r2, #0
   137ac:	str	r1, [r0, #8]
   137b0:	mov	r0, #0
   137b4:	mov	r1, ip
   137b8:	bl	13450 <__mempcpy_chk@plt+0x2374>
   137bc:	sub	sp, fp, #24
   137c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   137c4:	push	{r4, r5, r6, r7, fp, lr}
   137c8:	add	fp, sp, #16
   137cc:	sub	sp, sp, #48	; 0x30
   137d0:	movw	lr, #24936	; 0x6168
   137d4:	mov	ip, r0
   137d8:	mov	r3, sp
   137dc:	movt	lr, #2
   137e0:	mov	r2, r3
   137e4:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   137e8:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   137ec:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   137f0:	stm	r2, {r0, r1, r4, r5, r6, r7}
   137f4:	mov	r1, ip
   137f8:	mvn	r2, #0
   137fc:	ldr	r0, [sp, #12]
   13800:	orr	r0, r0, #67108864	; 0x4000000
   13804:	str	r0, [sp, #12]
   13808:	mov	r0, #0
   1380c:	bl	13450 <__mempcpy_chk@plt+0x2374>
   13810:	sub	sp, fp, #16
   13814:	pop	{r4, r5, r6, r7, fp, pc}
   13818:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1381c:	add	fp, sp, #24
   13820:	sub	sp, sp, #48	; 0x30
   13824:	movw	r8, #24936	; 0x6168
   13828:	mov	ip, r1
   1382c:	mov	lr, r0
   13830:	mov	r3, sp
   13834:	movt	r8, #2
   13838:	mov	r2, r3
   1383c:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   13840:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13844:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   13848:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1384c:	mov	r1, lr
   13850:	mov	r2, ip
   13854:	ldr	r0, [sp, #12]
   13858:	orr	r0, r0, #67108864	; 0x4000000
   1385c:	str	r0, [sp, #12]
   13860:	mov	r0, #0
   13864:	bl	13450 <__mempcpy_chk@plt+0x2374>
   13868:	sub	sp, fp, #24
   1386c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13870:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13874:	add	fp, sp, #24
   13878:	sub	sp, sp, #96	; 0x60
   1387c:	vmov.i32	q8, #0	; 0x00000000
   13880:	mov	lr, sp
   13884:	mov	ip, r2
   13888:	cmp	r1, #10
   1388c:	add	r3, lr, #16
   13890:	mov	r2, lr
   13894:	vst1.64	{d16-d17}, [r3]
   13898:	mov	r3, #28
   1389c:	vst1.64	{d16-d17}, [r2], r3
   138a0:	vst1.32	{d16-d17}, [r2]
   138a4:	beq	138e4 <__mempcpy_chk@plt+0x2808>
   138a8:	str	r1, [sp, #48]	; 0x30
   138ac:	add	r3, sp, #48	; 0x30
   138b0:	ldm	lr!, {r2, r4, r5, r6, r7}
   138b4:	add	r1, r3, #4
   138b8:	stmia	r1!, {r2, r4, r5, r6, r7}
   138bc:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   138c0:	stm	r1, {r2, r4, r5, r6, r7, r8}
   138c4:	mvn	r2, #0
   138c8:	ldr	r1, [sp, #60]	; 0x3c
   138cc:	orr	r1, r1, #67108864	; 0x4000000
   138d0:	str	r1, [sp, #60]	; 0x3c
   138d4:	mov	r1, ip
   138d8:	bl	13450 <__mempcpy_chk@plt+0x2374>
   138dc:	sub	sp, fp, #24
   138e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   138e4:	bl	110ac <abort@plt>
   138e8:	push	{fp, lr}
   138ec:	mov	fp, sp
   138f0:	sub	sp, sp, #8
   138f4:	mvn	ip, #0
   138f8:	str	ip, [sp]
   138fc:	bl	13908 <__mempcpy_chk@plt+0x282c>
   13900:	mov	sp, fp
   13904:	pop	{fp, pc}
   13908:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1390c:	add	fp, sp, #24
   13910:	sub	sp, sp, #48	; 0x30
   13914:	movw	ip, #24936	; 0x6168
   13918:	mov	lr, r3
   1391c:	mov	r3, sp
   13920:	cmp	r1, #0
   13924:	movt	ip, #2
   13928:	cmpne	r2, #0
   1392c:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   13930:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   13934:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   13938:	stm	r3, {r4, r5, r6, r7, r8, r9}
   1393c:	mov	r3, #10
   13940:	str	r3, [sp]
   13944:	bne	1394c <__mempcpy_chk@plt+0x2870>
   13948:	bl	110ac <abort@plt>
   1394c:	ldr	ip, [fp, #8]
   13950:	str	r2, [sp, #44]	; 0x2c
   13954:	str	r1, [sp, #40]	; 0x28
   13958:	mov	r3, sp
   1395c:	mov	r1, lr
   13960:	mov	r2, ip
   13964:	bl	13450 <__mempcpy_chk@plt+0x2374>
   13968:	sub	sp, fp, #24
   1396c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13970:	push	{fp, lr}
   13974:	mov	fp, sp
   13978:	sub	sp, sp, #8
   1397c:	mov	r3, r2
   13980:	mov	r2, r1
   13984:	mov	r1, r0
   13988:	mvn	r0, #0
   1398c:	str	r0, [sp]
   13990:	mov	r0, #0
   13994:	bl	13908 <__mempcpy_chk@plt+0x282c>
   13998:	mov	sp, fp
   1399c:	pop	{fp, pc}
   139a0:	push	{fp, lr}
   139a4:	mov	fp, sp
   139a8:	sub	sp, sp, #8
   139ac:	mov	ip, r2
   139b0:	mov	r2, r1
   139b4:	mov	r1, r0
   139b8:	str	r3, [sp]
   139bc:	mov	r0, #0
   139c0:	mov	r3, ip
   139c4:	bl	13908 <__mempcpy_chk@plt+0x282c>
   139c8:	mov	sp, fp
   139cc:	pop	{fp, pc}
   139d0:	movw	r3, #24840	; 0x6108
   139d4:	movt	r3, #2
   139d8:	b	13450 <__mempcpy_chk@plt+0x2374>
   139dc:	movw	r3, #24840	; 0x6108
   139e0:	mov	r2, r1
   139e4:	mov	r1, r0
   139e8:	mov	r0, #0
   139ec:	movt	r3, #2
   139f0:	b	13450 <__mempcpy_chk@plt+0x2374>
   139f4:	movw	r3, #24840	; 0x6108
   139f8:	mvn	r2, #0
   139fc:	movt	r3, #2
   13a00:	b	13450 <__mempcpy_chk@plt+0x2374>
   13a04:	movw	r3, #24840	; 0x6108
   13a08:	mov	r1, r0
   13a0c:	mov	r0, #0
   13a10:	mvn	r2, #0
   13a14:	movt	r3, #2
   13a18:	b	13450 <__mempcpy_chk@plt+0x2374>
   13a1c:	push	{r4, r5, fp, lr}
   13a20:	add	fp, sp, #8
   13a24:	mov	r5, r0
   13a28:	mov	r4, r1
   13a2c:	mov	r0, #0
   13a30:	mov	r2, #5
   13a34:	mov	r1, r5
   13a38:	bl	10ed8 <dcgettext@plt>
   13a3c:	cmp	r0, r5
   13a40:	popne	{r4, r5, fp, pc}
   13a44:	bl	14880 <__mempcpy_chk@plt+0x37a4>
   13a48:	ldrb	r1, [r0]
   13a4c:	and	r1, r1, #223	; 0xdf
   13a50:	cmp	r1, #71	; 0x47
   13a54:	beq	13abc <__mempcpy_chk@plt+0x29e0>
   13a58:	cmp	r1, #85	; 0x55
   13a5c:	bne	13b14 <__mempcpy_chk@plt+0x2a38>
   13a60:	ldrb	r1, [r0, #1]
   13a64:	and	r1, r1, #223	; 0xdf
   13a68:	cmp	r1, #84	; 0x54
   13a6c:	bne	13b14 <__mempcpy_chk@plt+0x2a38>
   13a70:	ldrb	r1, [r0, #2]
   13a74:	and	r1, r1, #223	; 0xdf
   13a78:	cmp	r1, #70	; 0x46
   13a7c:	bne	13b14 <__mempcpy_chk@plt+0x2a38>
   13a80:	ldrb	r1, [r0, #3]
   13a84:	cmp	r1, #45	; 0x2d
   13a88:	bne	13b14 <__mempcpy_chk@plt+0x2a38>
   13a8c:	ldrb	r1, [r0, #4]
   13a90:	cmp	r1, #56	; 0x38
   13a94:	bne	13b14 <__mempcpy_chk@plt+0x2a38>
   13a98:	ldrb	r0, [r0, #5]
   13a9c:	cmp	r0, #0
   13aa0:	bne	13b14 <__mempcpy_chk@plt+0x2a38>
   13aa4:	ldrb	r1, [r5]
   13aa8:	movw	r2, #22126	; 0x566e
   13aac:	movw	r0, #22130	; 0x5672
   13ab0:	movt	r2, #1
   13ab4:	movt	r0, #1
   13ab8:	b	13b44 <__mempcpy_chk@plt+0x2a68>
   13abc:	ldrb	r1, [r0, #1]
   13ac0:	and	r1, r1, #223	; 0xdf
   13ac4:	cmp	r1, #66	; 0x42
   13ac8:	bne	13b14 <__mempcpy_chk@plt+0x2a38>
   13acc:	ldrb	r1, [r0, #2]
   13ad0:	cmp	r1, #49	; 0x31
   13ad4:	bne	13b14 <__mempcpy_chk@plt+0x2a38>
   13ad8:	ldrb	r1, [r0, #3]
   13adc:	cmp	r1, #56	; 0x38
   13ae0:	bne	13b14 <__mempcpy_chk@plt+0x2a38>
   13ae4:	ldrb	r1, [r0, #4]
   13ae8:	cmp	r1, #48	; 0x30
   13aec:	bne	13b14 <__mempcpy_chk@plt+0x2a38>
   13af0:	ldrb	r1, [r0, #5]
   13af4:	cmp	r1, #51	; 0x33
   13af8:	bne	13b14 <__mempcpy_chk@plt+0x2a38>
   13afc:	ldrb	r1, [r0, #6]
   13b00:	cmp	r1, #48	; 0x30
   13b04:	bne	13b14 <__mempcpy_chk@plt+0x2a38>
   13b08:	ldrb	r0, [r0, #7]
   13b0c:	cmp	r0, #0
   13b10:	beq	13b30 <__mempcpy_chk@plt+0x2a54>
   13b14:	movw	r1, #22120	; 0x5668
   13b18:	movw	r0, #22124	; 0x566c
   13b1c:	cmp	r4, #9
   13b20:	movt	r1, #1
   13b24:	movt	r0, #1
   13b28:	moveq	r0, r1
   13b2c:	pop	{r4, r5, fp, pc}
   13b30:	ldrb	r1, [r5]
   13b34:	movw	r2, #22134	; 0x5676
   13b38:	movw	r0, #22138	; 0x567a
   13b3c:	movt	r2, #1
   13b40:	movt	r0, #1
   13b44:	cmp	r1, #96	; 0x60
   13b48:	moveq	r0, r2
   13b4c:	pop	{r4, r5, fp, pc}
   13b50:	push	{fp, lr}
   13b54:	mov	fp, sp
   13b58:	sub	sp, sp, #8
   13b5c:	str	r2, [sp, #4]
   13b60:	ldr	r2, [fp, #8]
   13b64:	str	r2, [sp]
   13b68:	movw	r2, #22228	; 0x56d4
   13b6c:	movt	r2, #1
   13b70:	ldr	r3, [r2, r3, lsl #2]
   13b74:	add	r2, sp, #4
   13b78:	bl	13bec <__mempcpy_chk@plt+0x2b10>
   13b7c:	mov	sp, fp
   13b80:	pop	{fp, pc}
   13b84:	ldr	r1, [r1]
   13b88:	mov	r2, #384	; 0x180
   13b8c:	orr	r1, r1, #194	; 0xc2
   13b90:	bic	r1, r1, #1
   13b94:	b	10f50 <open64@plt>
   13b98:	mov	r1, #448	; 0x1c0
   13b9c:	b	10ff8 <mkdir@plt>
   13ba0:	push	{r4, sl, fp, lr}
   13ba4:	add	fp, sp, #8
   13ba8:	sub	sp, sp, #104	; 0x68
   13bac:	mov	r1, sp
   13bb0:	bl	14c48 <__mempcpy_chk@plt+0x3b6c>
   13bb4:	mov	r4, r0
   13bb8:	bl	10fe0 <__errno_location@plt>
   13bbc:	cmp	r4, #0
   13bc0:	beq	13bd0 <__mempcpy_chk@plt+0x2af4>
   13bc4:	ldr	r1, [r0]
   13bc8:	cmp	r1, #75	; 0x4b
   13bcc:	bne	13bd8 <__mempcpy_chk@plt+0x2afc>
   13bd0:	mov	r1, #17
   13bd4:	str	r1, [r0]
   13bd8:	ldr	r0, [r0]
   13bdc:	subs	r0, r0, #2
   13be0:	mvnne	r0, #0
   13be4:	sub	sp, fp, #8
   13be8:	pop	{r4, sl, fp, pc}
   13bec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bf0:	add	fp, sp, #28
   13bf4:	sub	sp, sp, #60	; 0x3c
   13bf8:	mov	r7, r3
   13bfc:	mov	r9, r2
   13c00:	mov	r4, r1
   13c04:	mov	r6, r0
   13c08:	bl	10fe0 <__errno_location@plt>
   13c0c:	str	r0, [sp, #20]
   13c10:	ldr	sl, [r0]
   13c14:	mov	r0, #0
   13c18:	str	r0, [sp, #36]	; 0x24
   13c1c:	add	r0, sp, #32
   13c20:	lsr	r0, r0, #3
   13c24:	str	r0, [sp, #32]
   13c28:	ldr	r0, [fp, #8]
   13c2c:	add	r5, r0, r4
   13c30:	mov	r0, r6
   13c34:	bl	10fd4 <strlen@plt>
   13c38:	mvn	r8, #0
   13c3c:	mov	r4, #22
   13c40:	cmp	r0, r5
   13c44:	bcc	13e0c <__mempcpy_chk@plt+0x2d30>
   13c48:	sub	r0, r0, r5
   13c4c:	movw	r1, #21096	; 0x5268
   13c50:	add	r5, r6, r0
   13c54:	movt	r1, #1
   13c58:	mov	r0, r5
   13c5c:	bl	110d0 <strspn@plt>
   13c60:	ldr	r1, [fp, #8]
   13c64:	cmp	r0, r1
   13c68:	bcc	13e0c <__mempcpy_chk@plt+0x2d30>
   13c6c:	movw	r0, #15264	; 0x3ba0
   13c70:	movw	r4, #22240	; 0x56e0
   13c74:	str	r6, [sp, #8]
   13c78:	movw	r6, #45309	; 0xb0fd
   13c7c:	str	sl, [sp, #4]
   13c80:	str	r5, [sp, #28]
   13c84:	mov	sl, #0
   13c88:	mov	r2, #0
   13c8c:	str	r7, [sp, #16]
   13c90:	str	r9, [sp, #12]
   13c94:	movt	r0, #1
   13c98:	movt	r6, #34736	; 0x87b0
   13c9c:	movt	r4, #1
   13ca0:	sub	r0, r7, r0
   13ca4:	clz	r0, r0
   13ca8:	lsr	r5, r0, #5
   13cac:	cmp	r1, #0
   13cb0:	str	r2, [sp, #24]
   13cb4:	beq	13db0 <__mempcpy_chk@plt+0x2cd4>
   13cb8:	mov	r7, #0
   13cbc:	ldr	r8, [sp, #32]
   13cc0:	ldr	r9, [sp, #36]	; 0x24
   13cc4:	cmp	sl, #0
   13cc8:	bne	13d6c <__mempcpy_chk@plt+0x2c90>
   13ccc:	movw	r4, #39131	; 0x98db
   13cd0:	sub	sl, fp, #40	; 0x28
   13cd4:	movt	r4, #62617	; 0xf499
   13cd8:	tst	r5, #1
   13cdc:	beq	13d04 <__mempcpy_chk@plt+0x2c28>
   13ce0:	mov	r0, sl
   13ce4:	mov	r1, #8
   13ce8:	mov	r2, #1
   13cec:	bl	11088 <getrandom@plt>
   13cf0:	cmp	r0, #8
   13cf4:	bne	13d04 <__mempcpy_chk@plt+0x2c28>
   13cf8:	ldr	r8, [fp, #-40]	; 0xffffffd8
   13cfc:	ldr	r9, [fp, #-36]	; 0xffffffdc
   13d00:	b	13d40 <__mempcpy_chk@plt+0x2c64>
   13d04:	mov	r0, #1
   13d08:	add	r1, sp, #40	; 0x28
   13d0c:	bl	10ea8 <clock_gettime@plt>
   13d10:	ldr	r0, [sp, #44]	; 0x2c
   13d14:	movw	r5, #12006	; 0x2ee6
   13d18:	movt	r5, #10171	; 0x27bb
   13d1c:	eor	r1, r8, r0
   13d20:	eor	r0, r9, r0, asr #31
   13d24:	umull	r2, r3, r1, r6
   13d28:	mul	r0, r0, r6
   13d2c:	mla	r1, r1, r5, r3
   13d30:	movw	r3, #62253	; 0xf32d
   13d34:	movt	r3, #46340	; 0xb504
   13d38:	adds	r8, r2, r3
   13d3c:	adc	r9, r1, r0
   13d40:	movw	r0, #21503	; 0x53ff
   13d44:	mov	r5, #1
   13d48:	str	r8, [sp, #32]
   13d4c:	str	r9, [sp, #36]	; 0x24
   13d50:	movt	r0, #2727	; 0xaa7
   13d54:	subs	r0, r0, r8
   13d58:	sbcs	r0, r4, r9
   13d5c:	bcc	13cd8 <__mempcpy_chk@plt+0x2bfc>
   13d60:	movw	r4, #22240	; 0x56e0
   13d64:	mov	sl, #10
   13d68:	movt	r4, #1
   13d6c:	mov	r0, r8
   13d70:	mov	r1, r9
   13d74:	mov	r2, #62	; 0x3e
   13d78:	mov	r3, #0
   13d7c:	bl	14a58 <__mempcpy_chk@plt+0x397c>
   13d80:	rsb	r2, r0, r0, lsl #5
   13d84:	ldr	r3, [sp, #28]
   13d88:	sub	sl, sl, #1
   13d8c:	sub	r2, r8, r2, lsl #1
   13d90:	ldrb	r2, [r4, r2]
   13d94:	strb	r2, [r3, r7]
   13d98:	str	r0, [sp, #32]
   13d9c:	ldr	r0, [fp, #8]
   13da0:	add	r7, r7, #1
   13da4:	str	r1, [sp, #36]	; 0x24
   13da8:	cmp	r7, r0
   13dac:	bne	13cbc <__mempcpy_chk@plt+0x2be0>
   13db0:	ldr	r9, [sp, #12]
   13db4:	ldr	r0, [sp, #8]
   13db8:	ldr	r7, [sp, #16]
   13dbc:	mov	r1, r9
   13dc0:	blx	r7
   13dc4:	cmn	r0, #1
   13dc8:	bgt	13e04 <__mempcpy_chk@plt+0x2d28>
   13dcc:	ldr	r0, [sp, #20]
   13dd0:	ldr	r0, [r0]
   13dd4:	cmp	r0, #17
   13dd8:	bne	13e20 <__mempcpy_chk@plt+0x2d44>
   13ddc:	ldr	r2, [sp, #24]
   13de0:	movw	r0, #41720	; 0xa2f8
   13de4:	ldr	r1, [fp, #8]
   13de8:	movt	r0, #3
   13dec:	add	r2, r2, #1
   13df0:	cmp	r2, r0
   13df4:	bne	13cac <__mempcpy_chk@plt+0x2bd0>
   13df8:	mvn	r8, #0
   13dfc:	mov	r4, #17
   13e00:	b	13e0c <__mempcpy_chk@plt+0x2d30>
   13e04:	ldr	r4, [sp, #4]
   13e08:	mov	r8, r0
   13e0c:	ldr	r0, [sp, #20]
   13e10:	str	r4, [r0]
   13e14:	mov	r0, r8
   13e18:	sub	sp, fp, #28
   13e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e20:	mvn	r8, #0
   13e24:	b	13e14 <__mempcpy_chk@plt+0x2d38>
   13e28:	push	{fp, lr}
   13e2c:	mov	fp, sp
   13e30:	sub	sp, sp, #8
   13e34:	str	r2, [sp, #4]
   13e38:	mov	r2, #6
   13e3c:	str	r2, [sp]
   13e40:	movw	r2, #22228	; 0x56d4
   13e44:	movt	r2, #1
   13e48:	ldr	r3, [r2, r3, lsl #2]
   13e4c:	add	r2, sp, #4
   13e50:	bl	13bec <__mempcpy_chk@plt+0x2b10>
   13e54:	mov	sp, fp
   13e58:	pop	{fp, pc}
   13e5c:	push	{fp, lr}
   13e60:	mov	fp, sp
   13e64:	sub	sp, sp, #8
   13e68:	mov	ip, #6
   13e6c:	str	ip, [sp]
   13e70:	bl	13bec <__mempcpy_chk@plt+0x2b10>
   13e74:	mov	sp, fp
   13e78:	pop	{fp, pc}
   13e7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13e80:	add	fp, sp, #24
   13e84:	sub	sp, sp, #32
   13e88:	ldr	r6, [fp, #12]
   13e8c:	ldr	r7, [fp, #8]
   13e90:	mov	r4, r2
   13e94:	mov	r8, r0
   13e98:	cmp	r1, #0
   13e9c:	beq	13ec4 <__mempcpy_chk@plt+0x2de8>
   13ea0:	movw	r2, #22303	; 0x571f
   13ea4:	mov	r5, r1
   13ea8:	str	r3, [sp, #4]
   13eac:	str	r4, [sp]
   13eb0:	mov	r0, r8
   13eb4:	mov	r1, #1
   13eb8:	movt	r2, #1
   13ebc:	mov	r3, r5
   13ec0:	b	13edc <__mempcpy_chk@plt+0x2e00>
   13ec4:	movw	r2, #22315	; 0x572b
   13ec8:	str	r3, [sp]
   13ecc:	mov	r0, r8
   13ed0:	mov	r1, #1
   13ed4:	mov	r3, r4
   13ed8:	movt	r2, #1
   13edc:	bl	11028 <__fprintf_chk@plt>
   13ee0:	movw	r1, #22322	; 0x5732
   13ee4:	mov	r0, #0
   13ee8:	mov	r2, #5
   13eec:	movt	r1, #1
   13ef0:	bl	10ed8 <dcgettext@plt>
   13ef4:	movw	r2, #23040	; 0x5a00
   13ef8:	mov	r3, r0
   13efc:	movw	r0, #2022	; 0x7e6
   13f00:	mov	r1, #1
   13f04:	movt	r2, #1
   13f08:	str	r0, [sp]
   13f0c:	mov	r0, r8
   13f10:	bl	11028 <__fprintf_chk@plt>
   13f14:	movw	r4, #21698	; 0x54c2
   13f18:	mov	r1, r8
   13f1c:	movt	r4, #1
   13f20:	mov	r0, r4
   13f24:	bl	10e6c <fputs_unlocked@plt>
   13f28:	movw	r1, #22326	; 0x5736
   13f2c:	mov	r0, #0
   13f30:	mov	r2, #5
   13f34:	movt	r1, #1
   13f38:	bl	10ed8 <dcgettext@plt>
   13f3c:	movw	r3, #22497	; 0x57e1
   13f40:	mov	r2, r0
   13f44:	mov	r0, r8
   13f48:	mov	r1, #1
   13f4c:	movt	r3, #1
   13f50:	bl	11028 <__fprintf_chk@plt>
   13f54:	mov	r0, r4
   13f58:	mov	r1, r8
   13f5c:	bl	10e6c <fputs_unlocked@plt>
   13f60:	cmp	r6, #9
   13f64:	bhi	13fc8 <__mempcpy_chk@plt+0x2eec>
   13f68:	add	r0, pc, #0
   13f6c:	ldr	pc, [r0, r6, lsl #2]
   13f70:	andeq	r4, r1, r0, lsr #3
   13f74:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   13f78:	ldrdeq	r3, [r1], -r4
   13f7c:	strdeq	r3, [r1], -ip
   13f80:	andeq	r4, r1, r4, lsr #32
   13f84:	andeq	r4, r1, ip, asr #32
   13f88:	andeq	r4, r1, r4, ror r0
   13f8c:	andeq	r4, r1, ip, lsr #1
   13f90:	andeq	r4, r1, ip, asr #2
   13f94:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13f98:	movw	r1, #22531	; 0x5803
   13f9c:	mov	r0, #0
   13fa0:	mov	r2, #5
   13fa4:	movt	r1, #1
   13fa8:	bl	10ed8 <dcgettext@plt>
   13fac:	ldr	r3, [r7]
   13fb0:	mov	r2, r0
   13fb4:	mov	r0, r8
   13fb8:	mov	r1, #1
   13fbc:	sub	sp, fp, #24
   13fc0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13fc4:	b	11028 <__fprintf_chk@plt>
   13fc8:	movw	r1, #22850	; 0x5942
   13fcc:	movt	r1, #1
   13fd0:	b	140fc <__mempcpy_chk@plt+0x3020>
   13fd4:	movw	r1, #22547	; 0x5813
   13fd8:	mov	r0, #0
   13fdc:	mov	r2, #5
   13fe0:	movt	r1, #1
   13fe4:	bl	10ed8 <dcgettext@plt>
   13fe8:	mov	r2, r0
   13fec:	ldr	r3, [r7]
   13ff0:	ldr	r0, [r7, #4]
   13ff4:	str	r0, [sp]
   13ff8:	b	140e8 <__mempcpy_chk@plt+0x300c>
   13ffc:	movw	r1, #22570	; 0x582a
   14000:	mov	r0, #0
   14004:	mov	r2, #5
   14008:	movt	r1, #1
   1400c:	bl	10ed8 <dcgettext@plt>
   14010:	mov	r2, r0
   14014:	ldr	r3, [r7]
   14018:	ldmib	r7, {r0, r1}
   1401c:	stm	sp, {r0, r1}
   14020:	b	140e8 <__mempcpy_chk@plt+0x300c>
   14024:	movw	r1, #22598	; 0x5846
   14028:	mov	r0, #0
   1402c:	mov	r2, #5
   14030:	movt	r1, #1
   14034:	bl	10ed8 <dcgettext@plt>
   14038:	ldr	r3, [r7]
   1403c:	mov	r2, r0
   14040:	ldmib	r7, {r0, r1, r7}
   14044:	stm	sp, {r0, r1, r7}
   14048:	b	140e8 <__mempcpy_chk@plt+0x300c>
   1404c:	movw	r1, #22630	; 0x5866
   14050:	mov	r0, #0
   14054:	mov	r2, #5
   14058:	movt	r1, #1
   1405c:	bl	10ed8 <dcgettext@plt>
   14060:	ldr	r3, [r7]
   14064:	mov	r2, r0
   14068:	ldmib	r7, {r0, r1, r6, r7}
   1406c:	stm	sp, {r0, r1, r6, r7}
   14070:	b	140e8 <__mempcpy_chk@plt+0x300c>
   14074:	movw	r1, #22666	; 0x588a
   14078:	mov	r0, #0
   1407c:	mov	r2, #5
   14080:	movt	r1, #1
   14084:	bl	10ed8 <dcgettext@plt>
   14088:	mov	r2, r0
   1408c:	ldr	r3, [r7]
   14090:	ldmib	r7, {r0, r1, r6}
   14094:	ldr	r5, [r7, #16]
   14098:	ldr	r7, [r7, #20]
   1409c:	stm	sp, {r0, r1, r6}
   140a0:	str	r5, [sp, #12]
   140a4:	str	r7, [sp, #16]
   140a8:	b	140e8 <__mempcpy_chk@plt+0x300c>
   140ac:	movw	r1, #22706	; 0x58b2
   140b0:	mov	r0, #0
   140b4:	mov	r2, #5
   140b8:	movt	r1, #1
   140bc:	bl	10ed8 <dcgettext@plt>
   140c0:	mov	r2, r0
   140c4:	ldr	r3, [r7]
   140c8:	ldmib	r7, {r0, r1, r6}
   140cc:	ldr	r5, [r7, #16]
   140d0:	ldr	r4, [r7, #20]
   140d4:	ldr	r7, [r7, #24]
   140d8:	stm	sp, {r0, r1, r6}
   140dc:	str	r5, [sp, #12]
   140e0:	str	r4, [sp, #16]
   140e4:	str	r7, [sp, #20]
   140e8:	mov	r0, r8
   140ec:	mov	r1, #1
   140f0:	b	1419c <__mempcpy_chk@plt+0x30c0>
   140f4:	movw	r1, #22798	; 0x590e
   140f8:	movt	r1, #1
   140fc:	mov	r0, #0
   14100:	mov	r2, #5
   14104:	bl	10ed8 <dcgettext@plt>
   14108:	mov	ip, r0
   1410c:	ldr	r3, [r7]
   14110:	ldr	r0, [r7, #4]
   14114:	ldr	r1, [r7, #8]
   14118:	ldr	r6, [r7, #12]
   1411c:	ldr	r5, [r7, #16]
   14120:	ldr	r4, [r7, #20]
   14124:	ldr	r2, [r7, #24]
   14128:	ldr	lr, [r7, #28]
   1412c:	ldr	r7, [r7, #32]
   14130:	stm	sp, {r0, r1, r6}
   14134:	str	r5, [sp, #12]
   14138:	str	r4, [sp, #16]
   1413c:	str	r2, [sp, #20]
   14140:	str	lr, [sp, #24]
   14144:	str	r7, [sp, #28]
   14148:	b	14190 <__mempcpy_chk@plt+0x30b4>
   1414c:	movw	r1, #22750	; 0x58de
   14150:	mov	r0, #0
   14154:	mov	r2, #5
   14158:	movt	r1, #1
   1415c:	bl	10ed8 <dcgettext@plt>
   14160:	mov	ip, r0
   14164:	ldr	r3, [r7]
   14168:	ldmib	r7, {r0, r1, r6}
   1416c:	ldr	r5, [r7, #16]
   14170:	ldr	r4, [r7, #20]
   14174:	ldr	r2, [r7, #24]
   14178:	ldr	r7, [r7, #28]
   1417c:	stm	sp, {r0, r1, r6}
   14180:	str	r5, [sp, #12]
   14184:	str	r4, [sp, #16]
   14188:	str	r2, [sp, #20]
   1418c:	str	r7, [sp, #24]
   14190:	mov	r0, r8
   14194:	mov	r1, #1
   14198:	mov	r2, ip
   1419c:	bl	11028 <__fprintf_chk@plt>
   141a0:	sub	sp, fp, #24
   141a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   141a8:	push	{r4, sl, fp, lr}
   141ac:	add	fp, sp, #8
   141b0:	sub	sp, sp, #8
   141b4:	ldr	ip, [fp, #8]
   141b8:	mov	lr, #0
   141bc:	ldr	r4, [ip, lr, lsl #2]
   141c0:	add	lr, lr, #1
   141c4:	cmp	r4, #0
   141c8:	bne	141bc <__mempcpy_chk@plt+0x30e0>
   141cc:	sub	r4, lr, #1
   141d0:	str	ip, [sp]
   141d4:	str	r4, [sp, #4]
   141d8:	bl	13e7c <__mempcpy_chk@plt+0x2da0>
   141dc:	sub	sp, fp, #8
   141e0:	pop	{r4, sl, fp, pc}
   141e4:	push	{r4, r5, fp, lr}
   141e8:	add	fp, sp, #8
   141ec:	sub	sp, sp, #48	; 0x30
   141f0:	ldr	r4, [fp, #8]
   141f4:	mov	ip, #0
   141f8:	add	lr, sp, #8
   141fc:	ldr	r5, [r4]
   14200:	cmp	r5, #0
   14204:	str	r5, [lr, ip, lsl #2]
   14208:	beq	14220 <__mempcpy_chk@plt+0x3144>
   1420c:	add	ip, ip, #1
   14210:	add	r4, r4, #4
   14214:	cmp	ip, #10
   14218:	bne	141fc <__mempcpy_chk@plt+0x3120>
   1421c:	mov	ip, #10
   14220:	str	lr, [sp]
   14224:	str	ip, [sp, #4]
   14228:	bl	13e7c <__mempcpy_chk@plt+0x2da0>
   1422c:	sub	sp, fp, #8
   14230:	pop	{r4, r5, fp, pc}
   14234:	push	{fp, lr}
   14238:	mov	fp, sp
   1423c:	sub	sp, sp, #8
   14240:	add	ip, fp, #8
   14244:	str	ip, [sp, #4]
   14248:	str	ip, [sp]
   1424c:	bl	141e4 <__mempcpy_chk@plt+0x3108>
   14250:	mov	sp, fp
   14254:	pop	{fp, pc}
   14258:	push	{fp, lr}
   1425c:	mov	fp, sp
   14260:	movw	r0, #24908	; 0x614c
   14264:	movt	r0, #2
   14268:	ldr	r1, [r0]
   1426c:	movw	r0, #21698	; 0x54c2
   14270:	movt	r0, #1
   14274:	bl	10e6c <fputs_unlocked@plt>
   14278:	movw	r1, #22910	; 0x597e
   1427c:	mov	r0, #0
   14280:	mov	r2, #5
   14284:	movt	r1, #1
   14288:	bl	10ed8 <dcgettext@plt>
   1428c:	movw	r2, #22930	; 0x5992
   14290:	mov	r1, r0
   14294:	mov	r0, #1
   14298:	movt	r2, #1
   1429c:	bl	11010 <__printf_chk@plt>
   142a0:	movw	r1, #22952	; 0x59a8
   142a4:	mov	r0, #0
   142a8:	mov	r2, #5
   142ac:	movt	r1, #1
   142b0:	bl	10ed8 <dcgettext@plt>
   142b4:	movw	r2, #21000	; 0x5208
   142b8:	movw	r3, #21507	; 0x5403
   142bc:	mov	r1, r0
   142c0:	mov	r0, #1
   142c4:	movt	r2, #1
   142c8:	movt	r3, #1
   142cc:	bl	11010 <__printf_chk@plt>
   142d0:	movw	r1, #22972	; 0x59bc
   142d4:	mov	r0, #0
   142d8:	mov	r2, #5
   142dc:	movt	r1, #1
   142e0:	bl	10ed8 <dcgettext@plt>
   142e4:	movw	r2, #23011	; 0x59e3
   142e8:	mov	r1, r0
   142ec:	mov	r0, #1
   142f0:	movt	r2, #1
   142f4:	pop	{fp, lr}
   142f8:	b	11010 <__printf_chk@plt>
   142fc:	b	14300 <__mempcpy_chk@plt+0x3224>
   14300:	push	{r4, r5, r6, sl, fp, lr}
   14304:	add	fp, sp, #16
   14308:	mov	r4, r2
   1430c:	mov	r5, r1
   14310:	mov	r6, r0
   14314:	bl	1491c <__mempcpy_chk@plt+0x3840>
   14318:	cmp	r0, #0
   1431c:	popne	{r4, r5, r6, sl, fp, pc}
   14320:	cmp	r6, #0
   14324:	beq	14338 <__mempcpy_chk@plt+0x325c>
   14328:	cmp	r5, #0
   1432c:	cmpne	r4, #0
   14330:	bne	14338 <__mempcpy_chk@plt+0x325c>
   14334:	pop	{r4, r5, r6, sl, fp, pc}
   14338:	bl	14768 <__mempcpy_chk@plt+0x368c>
   1433c:	push	{fp, lr}
   14340:	mov	fp, sp
   14344:	bl	14800 <__mempcpy_chk@plt+0x3724>
   14348:	cmp	r0, #0
   1434c:	popne	{fp, pc}
   14350:	bl	14768 <__mempcpy_chk@plt+0x368c>
   14354:	push	{fp, lr}
   14358:	mov	fp, sp
   1435c:	bl	14800 <__mempcpy_chk@plt+0x3724>
   14360:	cmp	r0, #0
   14364:	popne	{fp, pc}
   14368:	bl	14768 <__mempcpy_chk@plt+0x368c>
   1436c:	push	{fp, lr}
   14370:	mov	fp, sp
   14374:	bl	14800 <__mempcpy_chk@plt+0x3724>
   14378:	cmp	r0, #0
   1437c:	popne	{fp, pc}
   14380:	bl	14768 <__mempcpy_chk@plt+0x368c>
   14384:	push	{r4, r5, fp, lr}
   14388:	add	fp, sp, #8
   1438c:	mov	r4, r1
   14390:	mov	r5, r0
   14394:	bl	14830 <__mempcpy_chk@plt+0x3754>
   14398:	cmp	r0, #0
   1439c:	popne	{r4, r5, fp, pc}
   143a0:	cmp	r5, #0
   143a4:	beq	143b4 <__mempcpy_chk@plt+0x32d8>
   143a8:	cmp	r4, #0
   143ac:	bne	143b4 <__mempcpy_chk@plt+0x32d8>
   143b0:	pop	{r4, r5, fp, pc}
   143b4:	bl	14768 <__mempcpy_chk@plt+0x368c>
   143b8:	push	{fp, lr}
   143bc:	mov	fp, sp
   143c0:	cmp	r1, #0
   143c4:	orreq	r1, r1, #1
   143c8:	bl	14830 <__mempcpy_chk@plt+0x3754>
   143cc:	cmp	r0, #0
   143d0:	popne	{fp, pc}
   143d4:	bl	14768 <__mempcpy_chk@plt+0x368c>
   143d8:	push	{fp, lr}
   143dc:	mov	fp, sp
   143e0:	clz	r3, r2
   143e4:	lsr	ip, r3, #5
   143e8:	clz	r3, r1
   143ec:	lsr	r3, r3, #5
   143f0:	orrs	r3, r3, ip
   143f4:	movwne	r1, #1
   143f8:	movwne	r2, #1
   143fc:	bl	1491c <__mempcpy_chk@plt+0x3840>
   14400:	cmp	r0, #0
   14404:	popne	{fp, pc}
   14408:	bl	14768 <__mempcpy_chk@plt+0x368c>
   1440c:	push	{fp, lr}
   14410:	mov	fp, sp
   14414:	mov	r2, r1
   14418:	mov	r1, r0
   1441c:	mov	r0, #0
   14420:	bl	1491c <__mempcpy_chk@plt+0x3840>
   14424:	cmp	r0, #0
   14428:	popne	{fp, pc}
   1442c:	bl	14768 <__mempcpy_chk@plt+0x368c>
   14430:	mov	r2, r1
   14434:	mov	r1, r0
   14438:	mov	r0, #0
   1443c:	b	143d8 <__mempcpy_chk@plt+0x32fc>
   14440:	mov	r2, #1
   14444:	b	14448 <__mempcpy_chk@plt+0x336c>
   14448:	push	{r4, r5, fp, lr}
   1444c:	add	fp, sp, #8
   14450:	ldr	r5, [r1]
   14454:	mov	r4, r1
   14458:	cmp	r0, #0
   1445c:	beq	14474 <__mempcpy_chk@plt+0x3398>
   14460:	mov	r1, #1
   14464:	add	r1, r1, r5, lsr #1
   14468:	adds	r5, r5, r1
   1446c:	bcc	1448c <__mempcpy_chk@plt+0x33b0>
   14470:	bl	14768 <__mempcpy_chk@plt+0x368c>
   14474:	cmp	r5, #0
   14478:	bne	1448c <__mempcpy_chk@plt+0x33b0>
   1447c:	mov	r1, #64	; 0x40
   14480:	cmp	r2, #64	; 0x40
   14484:	udiv	r5, r1, r2
   14488:	addhi	r5, r5, #1
   1448c:	mov	r1, r5
   14490:	bl	14300 <__mempcpy_chk@plt+0x3224>
   14494:	str	r5, [r4]
   14498:	pop	{r4, r5, fp, pc}
   1449c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144a0:	add	fp, sp, #24
   144a4:	ldr	r6, [r1]
   144a8:	mov	r8, r1
   144ac:	ldr	r4, [fp, #8]
   144b0:	add	r1, r6, r6, asr #1
   144b4:	cmp	r1, r6
   144b8:	mvnvs	r1, #-2147483648	; 0x80000000
   144bc:	cmp	r1, r3
   144c0:	mov	r5, r1
   144c4:	movgt	r5, r3
   144c8:	cmn	r3, #1
   144cc:	movle	r5, r1
   144d0:	cmn	r4, #1
   144d4:	ble	144f4 <__mempcpy_chk@plt+0x3418>
   144d8:	cmp	r4, #0
   144dc:	beq	14548 <__mempcpy_chk@plt+0x346c>
   144e0:	cmn	r5, #1
   144e4:	ble	1451c <__mempcpy_chk@plt+0x3440>
   144e8:	mvn	r7, #-2147483648	; 0x80000000
   144ec:	udiv	r1, r7, r4
   144f0:	b	14510 <__mempcpy_chk@plt+0x3434>
   144f4:	cmn	r5, #1
   144f8:	ble	14538 <__mempcpy_chk@plt+0x345c>
   144fc:	cmn	r4, #1
   14500:	beq	14548 <__mempcpy_chk@plt+0x346c>
   14504:	mov	r1, #-2147483648	; 0x80000000
   14508:	mvn	r7, #-2147483648	; 0x80000000
   1450c:	sdiv	r1, r1, r4
   14510:	cmp	r1, r5
   14514:	bge	14548 <__mempcpy_chk@plt+0x346c>
   14518:	b	14558 <__mempcpy_chk@plt+0x347c>
   1451c:	beq	14548 <__mempcpy_chk@plt+0x346c>
   14520:	mov	r1, #-2147483648	; 0x80000000
   14524:	mvn	r7, #-2147483648	; 0x80000000
   14528:	sdiv	r1, r1, r5
   1452c:	cmp	r1, r4
   14530:	bge	14548 <__mempcpy_chk@plt+0x346c>
   14534:	b	14558 <__mempcpy_chk@plt+0x347c>
   14538:	mvn	r7, #-2147483648	; 0x80000000
   1453c:	sdiv	r1, r7, r4
   14540:	cmp	r5, r1
   14544:	blt	14558 <__mempcpy_chk@plt+0x347c>
   14548:	mul	r1, r5, r4
   1454c:	mov	r7, #64	; 0x40
   14550:	cmp	r1, #63	; 0x3f
   14554:	bgt	14560 <__mempcpy_chk@plt+0x3484>
   14558:	sdiv	r5, r7, r4
   1455c:	mul	r1, r5, r4
   14560:	cmp	r0, #0
   14564:	moveq	r7, #0
   14568:	streq	r7, [r8]
   1456c:	sub	r7, r5, r6
   14570:	cmp	r7, r2
   14574:	bge	14618 <__mempcpy_chk@plt+0x353c>
   14578:	add	r5, r6, r2
   1457c:	mov	r2, #0
   14580:	mov	r1, #0
   14584:	cmp	r5, r3
   14588:	movwgt	r2, #1
   1458c:	cmn	r3, #1
   14590:	movwgt	r1, #1
   14594:	cmp	r5, r6
   14598:	bvs	14600 <__mempcpy_chk@plt+0x3524>
   1459c:	ands	r1, r1, r2
   145a0:	bne	14600 <__mempcpy_chk@plt+0x3524>
   145a4:	cmn	r4, #1
   145a8:	ble	145c8 <__mempcpy_chk@plt+0x34ec>
   145ac:	cmp	r4, #0
   145b0:	beq	14614 <__mempcpy_chk@plt+0x3538>
   145b4:	cmn	r5, #1
   145b8:	ble	145ec <__mempcpy_chk@plt+0x3510>
   145bc:	mvn	r1, #-2147483648	; 0x80000000
   145c0:	udiv	r1, r1, r4
   145c4:	b	145e0 <__mempcpy_chk@plt+0x3504>
   145c8:	cmn	r5, #1
   145cc:	ble	14604 <__mempcpy_chk@plt+0x3528>
   145d0:	cmn	r4, #1
   145d4:	beq	14614 <__mempcpy_chk@plt+0x3538>
   145d8:	mov	r1, #-2147483648	; 0x80000000
   145dc:	sdiv	r1, r1, r4
   145e0:	cmp	r1, r5
   145e4:	bge	14614 <__mempcpy_chk@plt+0x3538>
   145e8:	b	14600 <__mempcpy_chk@plt+0x3524>
   145ec:	beq	14614 <__mempcpy_chk@plt+0x3538>
   145f0:	mov	r1, #-2147483648	; 0x80000000
   145f4:	sdiv	r1, r1, r5
   145f8:	cmp	r1, r4
   145fc:	bge	14614 <__mempcpy_chk@plt+0x3538>
   14600:	bl	14768 <__mempcpy_chk@plt+0x368c>
   14604:	mvn	r1, #-2147483648	; 0x80000000
   14608:	sdiv	r1, r1, r4
   1460c:	cmp	r5, r1
   14610:	blt	14600 <__mempcpy_chk@plt+0x3524>
   14614:	mul	r1, r5, r4
   14618:	bl	14384 <__mempcpy_chk@plt+0x32a8>
   1461c:	str	r5, [r8]
   14620:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14624:	push	{fp, lr}
   14628:	mov	fp, sp
   1462c:	mov	r1, #1
   14630:	bl	147ac <__mempcpy_chk@plt+0x36d0>
   14634:	cmp	r0, #0
   14638:	popne	{fp, pc}
   1463c:	bl	14768 <__mempcpy_chk@plt+0x368c>
   14640:	push	{fp, lr}
   14644:	mov	fp, sp
   14648:	bl	147ac <__mempcpy_chk@plt+0x36d0>
   1464c:	cmp	r0, #0
   14650:	popne	{fp, pc}
   14654:	bl	14768 <__mempcpy_chk@plt+0x368c>
   14658:	push	{fp, lr}
   1465c:	mov	fp, sp
   14660:	mov	r1, #1
   14664:	bl	147ac <__mempcpy_chk@plt+0x36d0>
   14668:	cmp	r0, #0
   1466c:	popne	{fp, pc}
   14670:	bl	14768 <__mempcpy_chk@plt+0x368c>
   14674:	push	{fp, lr}
   14678:	mov	fp, sp
   1467c:	bl	147ac <__mempcpy_chk@plt+0x36d0>
   14680:	cmp	r0, #0
   14684:	popne	{fp, pc}
   14688:	bl	14768 <__mempcpy_chk@plt+0x368c>
   1468c:	push	{r4, r5, fp, lr}
   14690:	add	fp, sp, #8
   14694:	mov	r5, r0
   14698:	mov	r0, r1
   1469c:	mov	r4, r1
   146a0:	bl	14800 <__mempcpy_chk@plt+0x3724>
   146a4:	cmp	r0, #0
   146a8:	beq	146bc <__mempcpy_chk@plt+0x35e0>
   146ac:	mov	r1, r5
   146b0:	mov	r2, r4
   146b4:	pop	{r4, r5, fp, lr}
   146b8:	b	10ec0 <memcpy@plt>
   146bc:	bl	14768 <__mempcpy_chk@plt+0x368c>
   146c0:	push	{r4, r5, fp, lr}
   146c4:	add	fp, sp, #8
   146c8:	mov	r5, r0
   146cc:	mov	r0, r1
   146d0:	mov	r4, r1
   146d4:	bl	14800 <__mempcpy_chk@plt+0x3724>
   146d8:	cmp	r0, #0
   146dc:	beq	146f0 <__mempcpy_chk@plt+0x3614>
   146e0:	mov	r1, r5
   146e4:	mov	r2, r4
   146e8:	pop	{r4, r5, fp, lr}
   146ec:	b	10ec0 <memcpy@plt>
   146f0:	bl	14768 <__mempcpy_chk@plt+0x368c>
   146f4:	push	{r4, r5, fp, lr}
   146f8:	add	fp, sp, #8
   146fc:	mov	r5, r0
   14700:	add	r0, r1, #1
   14704:	mov	r4, r1
   14708:	bl	14800 <__mempcpy_chk@plt+0x3724>
   1470c:	cmp	r0, #0
   14710:	beq	1472c <__mempcpy_chk@plt+0x3650>
   14714:	mov	r1, #0
   14718:	mov	r2, r4
   1471c:	strb	r1, [r0, r4]
   14720:	mov	r1, r5
   14724:	pop	{r4, r5, fp, lr}
   14728:	b	10ec0 <memcpy@plt>
   1472c:	bl	14768 <__mempcpy_chk@plt+0x368c>
   14730:	push	{r4, r5, fp, lr}
   14734:	add	fp, sp, #8
   14738:	mov	r4, r0
   1473c:	bl	10fd4 <strlen@plt>
   14740:	add	r5, r0, #1
   14744:	mov	r0, r5
   14748:	bl	14800 <__mempcpy_chk@plt+0x3724>
   1474c:	cmp	r0, #0
   14750:	beq	14764 <__mempcpy_chk@plt+0x3688>
   14754:	mov	r1, r4
   14758:	mov	r2, r5
   1475c:	pop	{r4, r5, fp, lr}
   14760:	b	10ec0 <memcpy@plt>
   14764:	bl	14768 <__mempcpy_chk@plt+0x368c>
   14768:	push	{fp, lr}
   1476c:	mov	fp, sp
   14770:	movw	r0, #24820	; 0x60f4
   14774:	movw	r1, #23087	; 0x5a2f
   14778:	mov	r2, #5
   1477c:	movt	r0, #2
   14780:	movt	r1, #1
   14784:	ldr	r4, [r0]
   14788:	mov	r0, #0
   1478c:	bl	10ed8 <dcgettext@plt>
   14790:	movw	r2, #21971	; 0x55d3
   14794:	mov	r3, r0
   14798:	mov	r0, r4
   1479c:	mov	r1, #0
   147a0:	movt	r2, #1
   147a4:	bl	10f44 <error@plt>
   147a8:	bl	110ac <abort@plt>
   147ac:	clz	r2, r1
   147b0:	clz	r3, r0
   147b4:	lsr	r2, r2, #5
   147b8:	lsr	r3, r3, #5
   147bc:	orrs	r2, r3, r2
   147c0:	movwne	r1, #1
   147c4:	movwne	r0, #1
   147c8:	cmp	r1, #0
   147cc:	beq	147fc <__mempcpy_chk@plt+0x3720>
   147d0:	mvn	r2, #-2147483648	; 0x80000000
   147d4:	udiv	r2, r2, r1
   147d8:	cmp	r2, r0
   147dc:	bcs	147fc <__mempcpy_chk@plt+0x3720>
   147e0:	push	{fp, lr}
   147e4:	mov	fp, sp
   147e8:	bl	10fe0 <__errno_location@plt>
   147ec:	mov	r1, #12
   147f0:	str	r1, [r0]
   147f4:	mov	r0, #0
   147f8:	pop	{fp, pc}
   147fc:	b	10e60 <calloc@plt>
   14800:	cmp	r0, #0
   14804:	movweq	r0, #1
   14808:	cmn	r0, #1
   1480c:	ble	14814 <__mempcpy_chk@plt+0x3738>
   14810:	b	10f74 <malloc@plt>
   14814:	push	{fp, lr}
   14818:	mov	fp, sp
   1481c:	bl	10fe0 <__errno_location@plt>
   14820:	mov	r1, #12
   14824:	str	r1, [r0]
   14828:	mov	r0, #0
   1482c:	pop	{fp, pc}
   14830:	push	{fp, lr}
   14834:	mov	fp, sp
   14838:	cmp	r0, #0
   1483c:	beq	14858 <__mempcpy_chk@plt+0x377c>
   14840:	cmp	r1, #0
   14844:	beq	14864 <__mempcpy_chk@plt+0x3788>
   14848:	cmn	r1, #1
   1484c:	ble	1486c <__mempcpy_chk@plt+0x3790>
   14850:	pop	{fp, lr}
   14854:	b	10ee4 <realloc@plt>
   14858:	mov	r0, r1
   1485c:	pop	{fp, lr}
   14860:	b	14800 <__mempcpy_chk@plt+0x3724>
   14864:	bl	11f4c <__mempcpy_chk@plt+0xe70>
   14868:	b	14878 <__mempcpy_chk@plt+0x379c>
   1486c:	bl	10fe0 <__errno_location@plt>
   14870:	mov	r1, #12
   14874:	str	r1, [r0]
   14878:	mov	r0, #0
   1487c:	pop	{fp, pc}
   14880:	push	{fp, lr}
   14884:	mov	fp, sp
   14888:	mov	r0, #14
   1488c:	bl	11064 <nl_langinfo@plt>
   14890:	movw	r1, #21699	; 0x54c3
   14894:	cmp	r0, #0
   14898:	movt	r1, #1
   1489c:	movne	r1, r0
   148a0:	movw	r0, #23104	; 0x5a40
   148a4:	ldrb	r2, [r1]
   148a8:	movt	r0, #1
   148ac:	cmp	r2, #0
   148b0:	movne	r0, r1
   148b4:	pop	{fp, pc}
   148b8:	push	{r4, r5, r6, r7, fp, lr}
   148bc:	add	fp, sp, #16
   148c0:	sub	sp, sp, #8
   148c4:	cmp	r0, #0
   148c8:	add	r5, sp, #4
   148cc:	mov	r7, r2
   148d0:	mov	r4, r1
   148d4:	movne	r5, r0
   148d8:	mov	r0, r5
   148dc:	bl	10f38 <mbrtowc@plt>
   148e0:	mov	r6, r0
   148e4:	cmp	r7, #0
   148e8:	beq	14910 <__mempcpy_chk@plt+0x3834>
   148ec:	cmn	r6, #2
   148f0:	bcc	14910 <__mempcpy_chk@plt+0x3834>
   148f4:	mov	r0, #0
   148f8:	bl	14958 <__mempcpy_chk@plt+0x387c>
   148fc:	cmp	r0, #0
   14900:	bne	14910 <__mempcpy_chk@plt+0x3834>
   14904:	ldrb	r0, [r4]
   14908:	mov	r6, #1
   1490c:	str	r0, [r5]
   14910:	mov	r0, r6
   14914:	sub	sp, fp, #16
   14918:	pop	{r4, r5, r6, r7, fp, pc}
   1491c:	cmp	r2, #0
   14920:	beq	14950 <__mempcpy_chk@plt+0x3874>
   14924:	mvn	r3, #0
   14928:	udiv	r3, r3, r2
   1492c:	cmp	r3, r1
   14930:	bcs	14950 <__mempcpy_chk@plt+0x3874>
   14934:	push	{fp, lr}
   14938:	mov	fp, sp
   1493c:	bl	10fe0 <__errno_location@plt>
   14940:	mov	r1, #12
   14944:	str	r1, [r0]
   14948:	mov	r0, #0
   1494c:	pop	{fp, pc}
   14950:	mul	r1, r2, r1
   14954:	b	14830 <__mempcpy_chk@plt+0x3754>
   14958:	push	{r4, sl, fp, lr}
   1495c:	add	fp, sp, #8
   14960:	sub	sp, sp, #264	; 0x108
   14964:	add	r1, sp, #7
   14968:	movw	r2, #257	; 0x101
   1496c:	bl	149c4 <__mempcpy_chk@plt+0x38e8>
   14970:	mov	r4, #0
   14974:	cmp	r0, #0
   14978:	bne	149b8 <__mempcpy_chk@plt+0x38dc>
   1497c:	movw	r1, #23110	; 0x5a46
   14980:	add	r0, sp, #7
   14984:	mov	r2, #2
   14988:	movt	r1, #1
   1498c:	bl	10fc8 <bcmp@plt>
   14990:	cmp	r0, #0
   14994:	beq	149b8 <__mempcpy_chk@plt+0x38dc>
   14998:	movw	r1, #23112	; 0x5a48
   1499c:	add	r0, sp, #7
   149a0:	mov	r2, #6
   149a4:	movt	r1, #1
   149a8:	bl	10fc8 <bcmp@plt>
   149ac:	cmp	r0, #0
   149b0:	mov	r4, r0
   149b4:	movwne	r4, #1
   149b8:	mov	r0, r4
   149bc:	sub	sp, fp, #8
   149c0:	pop	{r4, sl, fp, pc}
   149c4:	push	{r4, r5, r6, r7, fp, lr}
   149c8:	add	fp, sp, #16
   149cc:	mov	r4, r1
   149d0:	mov	r1, #0
   149d4:	mov	r6, r2
   149d8:	bl	1104c <setlocale@plt>
   149dc:	cmp	r0, #0
   149e0:	beq	14a0c <__mempcpy_chk@plt+0x3930>
   149e4:	mov	r7, r0
   149e8:	bl	10fd4 <strlen@plt>
   149ec:	cmp	r0, r6
   149f0:	bcs	14a20 <__mempcpy_chk@plt+0x3944>
   149f4:	add	r2, r0, #1
   149f8:	mov	r0, r4
   149fc:	mov	r1, r7
   14a00:	bl	10ec0 <memcpy@plt>
   14a04:	mov	r5, #0
   14a08:	b	14a48 <__mempcpy_chk@plt+0x396c>
   14a0c:	cmp	r6, #0
   14a10:	mov	r5, #22
   14a14:	movne	r0, #0
   14a18:	strbne	r0, [r4]
   14a1c:	b	14a48 <__mempcpy_chk@plt+0x396c>
   14a20:	mov	r5, #34	; 0x22
   14a24:	cmp	r6, #0
   14a28:	beq	14a48 <__mempcpy_chk@plt+0x396c>
   14a2c:	sub	r6, r6, #1
   14a30:	mov	r0, r4
   14a34:	mov	r1, r7
   14a38:	mov	r2, r6
   14a3c:	bl	10ec0 <memcpy@plt>
   14a40:	mov	r0, #0
   14a44:	strb	r0, [r4, r6]
   14a48:	mov	r0, r5
   14a4c:	pop	{r4, r5, r6, r7, fp, pc}
   14a50:	mov	r1, #0
   14a54:	b	1104c <setlocale@plt>
   14a58:	cmp	r3, #0
   14a5c:	cmpeq	r2, #0
   14a60:	bne	14a78 <__mempcpy_chk@plt+0x399c>
   14a64:	cmp	r1, #0
   14a68:	cmpeq	r0, #0
   14a6c:	mvnne	r1, #0
   14a70:	mvnne	r0, #0
   14a74:	b	14a94 <__mempcpy_chk@plt+0x39b8>
   14a78:	sub	sp, sp, #8
   14a7c:	push	{sp, lr}
   14a80:	bl	14aa4 <__mempcpy_chk@plt+0x39c8>
   14a84:	ldr	lr, [sp, #4]
   14a88:	add	sp, sp, #8
   14a8c:	pop	{r2, r3}
   14a90:	bx	lr
   14a94:	push	{r1, lr}
   14a98:	mov	r0, #8
   14a9c:	bl	10e78 <raise@plt>
   14aa0:	pop	{r1, pc}
   14aa4:	cmp	r1, r3
   14aa8:	cmpeq	r0, r2
   14aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ab0:	mov	r4, r0
   14ab4:	movcc	r0, #0
   14ab8:	mov	r5, r1
   14abc:	ldr	lr, [sp, #36]	; 0x24
   14ac0:	movcc	r1, r0
   14ac4:	bcc	14bc0 <__mempcpy_chk@plt+0x3ae4>
   14ac8:	cmp	r3, #0
   14acc:	clzeq	ip, r2
   14ad0:	clzne	ip, r3
   14ad4:	addeq	ip, ip, #32
   14ad8:	cmp	r5, #0
   14adc:	clzeq	r1, r4
   14ae0:	addeq	r1, r1, #32
   14ae4:	clzne	r1, r5
   14ae8:	sub	ip, ip, r1
   14aec:	sub	sl, ip, #32
   14af0:	lsl	r9, r3, ip
   14af4:	rsb	fp, ip, #32
   14af8:	orr	r9, r9, r2, lsl sl
   14afc:	orr	r9, r9, r2, lsr fp
   14b00:	lsl	r8, r2, ip
   14b04:	cmp	r5, r9
   14b08:	cmpeq	r4, r8
   14b0c:	movcc	r0, #0
   14b10:	movcc	r1, r0
   14b14:	bcc	14b30 <__mempcpy_chk@plt+0x3a54>
   14b18:	mov	r0, #1
   14b1c:	subs	r4, r4, r8
   14b20:	lsl	r1, r0, sl
   14b24:	orr	r1, r1, r0, lsr fp
   14b28:	lsl	r0, r0, ip
   14b2c:	sbc	r5, r5, r9
   14b30:	cmp	ip, #0
   14b34:	beq	14bc0 <__mempcpy_chk@plt+0x3ae4>
   14b38:	lsr	r6, r8, #1
   14b3c:	orr	r6, r6, r9, lsl #31
   14b40:	lsr	r7, r9, #1
   14b44:	mov	r2, ip
   14b48:	b	14b6c <__mempcpy_chk@plt+0x3a90>
   14b4c:	subs	r3, r4, r6
   14b50:	sbc	r8, r5, r7
   14b54:	adds	r3, r3, r3
   14b58:	adc	r8, r8, r8
   14b5c:	adds	r4, r3, #1
   14b60:	adc	r5, r8, #0
   14b64:	subs	r2, r2, #1
   14b68:	beq	14b88 <__mempcpy_chk@plt+0x3aac>
   14b6c:	cmp	r5, r7
   14b70:	cmpeq	r4, r6
   14b74:	bcs	14b4c <__mempcpy_chk@plt+0x3a70>
   14b78:	adds	r4, r4, r4
   14b7c:	adc	r5, r5, r5
   14b80:	subs	r2, r2, #1
   14b84:	bne	14b6c <__mempcpy_chk@plt+0x3a90>
   14b88:	lsr	r3, r4, ip
   14b8c:	orr	r3, r3, r5, lsl fp
   14b90:	lsr	r2, r5, ip
   14b94:	orr	r3, r3, r5, lsr sl
   14b98:	adds	r0, r0, r4
   14b9c:	mov	r4, r3
   14ba0:	lsl	r3, r2, ip
   14ba4:	orr	r3, r3, r4, lsl sl
   14ba8:	lsl	ip, r4, ip
   14bac:	orr	r3, r3, r4, lsr fp
   14bb0:	adc	r1, r1, r5
   14bb4:	subs	r0, r0, ip
   14bb8:	mov	r5, r2
   14bbc:	sbc	r1, r1, r3
   14bc0:	cmp	lr, #0
   14bc4:	strdne	r4, [lr]
   14bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bcc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14bd0:	mov	r7, r0
   14bd4:	ldr	r6, [pc, #72]	; 14c24 <__mempcpy_chk@plt+0x3b48>
   14bd8:	ldr	r5, [pc, #72]	; 14c28 <__mempcpy_chk@plt+0x3b4c>
   14bdc:	add	r6, pc, r6
   14be0:	add	r5, pc, r5
   14be4:	sub	r6, r6, r5
   14be8:	mov	r8, r1
   14bec:	mov	r9, r2
   14bf0:	bl	10e40 <calloc@plt-0x20>
   14bf4:	asrs	r6, r6, #2
   14bf8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bfc:	mov	r4, #0
   14c00:	add	r4, r4, #1
   14c04:	ldr	r3, [r5], #4
   14c08:	mov	r2, r9
   14c0c:	mov	r1, r8
   14c10:	mov	r0, r7
   14c14:	blx	r3
   14c18:	cmp	r6, r4
   14c1c:	bne	14c00 <__mempcpy_chk@plt+0x3b24>
   14c20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c24:	andeq	r1, r1, r8, lsr #6
   14c28:	andeq	r1, r1, r0, lsr #6
   14c2c:	bx	lr
   14c30:	ldr	r3, [pc, #12]	; 14c44 <__mempcpy_chk@plt+0x3b68>
   14c34:	mov	r1, #0
   14c38:	add	r3, pc, r3
   14c3c:	ldr	r2, [r3]
   14c40:	b	10fec <__cxa_atexit@plt>
   14c44:	andeq	r1, r1, ip, lsr #9
   14c48:	mov	r2, r1
   14c4c:	mov	r1, r0
   14c50:	mov	r0, #3
   14c54:	b	110c4 <__lxstat64@plt>

Disassembly of section .fini:

00014c58 <.fini>:
   14c58:	push	{r3, lr}
   14c5c:	pop	{r3, pc}
