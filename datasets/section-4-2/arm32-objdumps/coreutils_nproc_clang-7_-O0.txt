
../repos/coreutils/src/nproc:     file format elf32-littlearm


Disassembly of section .init:

00010db0 <.init>:
   10db0:	push	{r3, lr}
   10db4:	bl	11070 <__assert_fail@plt+0x48>
   10db8:	pop	{r3, pc}

Disassembly of section .plt:

00010dbc <calloc@plt-0x14>:
   10dbc:	push	{lr}		; (str lr, [sp, #-4]!)
   10dc0:	ldr	lr, [pc, #4]	; 10dcc <calloc@plt-0x4>
   10dc4:	add	lr, pc, lr
   10dc8:	ldr	pc, [lr, #8]!
   10dcc:	andeq	sp, r1, r4, lsr r2

00010dd0 <calloc@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #118784	; 0x1d000
   10dd8:	ldr	pc, [ip, #564]!	; 0x234

00010ddc <fputs_unlocked@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #118784	; 0x1d000
   10de4:	ldr	pc, [ip, #556]!	; 0x22c

00010de8 <raise@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #118784	; 0x1d000
   10df0:	ldr	pc, [ip, #548]!	; 0x224

00010df4 <strcmp@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #118784	; 0x1d000
   10dfc:	ldr	pc, [ip, #540]!	; 0x21c

00010e00 <printf@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #118784	; 0x1d000
   10e08:	ldr	pc, [ip, #532]!	; 0x214

00010e0c <fflush@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #118784	; 0x1d000
   10e14:	ldr	pc, [ip, #524]!	; 0x20c

00010e18 <free@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #118784	; 0x1d000
   10e20:	ldr	pc, [ip, #516]!	; 0x204

00010e24 <_exit@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #118784	; 0x1d000
   10e2c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e30 <memcpy@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #118784	; 0x1d000
   10e38:	ldr	pc, [ip, #500]!	; 0x1f4

00010e3c <mbsinit@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #118784	; 0x1d000
   10e44:	ldr	pc, [ip, #492]!	; 0x1ec

00010e48 <__sched_cpucount@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #118784	; 0x1d000
   10e50:	ldr	pc, [ip, #484]!	; 0x1e4

00010e54 <memcmp@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #118784	; 0x1d000
   10e5c:	ldr	pc, [ip, #476]!	; 0x1dc

00010e60 <sysconf@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #118784	; 0x1d000
   10e68:	ldr	pc, [ip, #468]!	; 0x1d4

00010e6c <realloc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #118784	; 0x1d000
   10e74:	ldr	pc, [ip, #460]!	; 0x1cc

00010e78 <textdomain@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #118784	; 0x1d000
   10e80:	ldr	pc, [ip, #452]!	; 0x1c4

00010e84 <iswprint@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #118784	; 0x1d000
   10e8c:	ldr	pc, [ip, #444]!	; 0x1bc

00010e90 <lseek64@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #118784	; 0x1d000
   10e98:	ldr	pc, [ip, #436]!	; 0x1b4

00010e9c <__ctype_get_mb_cur_max@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #118784	; 0x1d000
   10ea4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ea8 <__fpending@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #118784	; 0x1d000
   10eb0:	ldr	pc, [ip, #420]!	; 0x1a4

00010eb4 <ferror_unlocked@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #118784	; 0x1d000
   10ebc:	ldr	pc, [ip, #412]!	; 0x19c

00010ec0 <mbrtowc@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #118784	; 0x1d000
   10ec8:	ldr	pc, [ip, #404]!	; 0x194

00010ecc <error@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #118784	; 0x1d000
   10ed4:	ldr	pc, [ip, #396]!	; 0x18c

00010ed8 <getenv@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #118784	; 0x1d000
   10ee0:	ldr	pc, [ip, #388]!	; 0x184

00010ee4 <malloc@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #118784	; 0x1d000
   10eec:	ldr	pc, [ip, #380]!	; 0x17c

00010ef0 <__libc_start_main@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #118784	; 0x1d000
   10ef8:	ldr	pc, [ip, #372]!	; 0x174

00010efc <__freading@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #118784	; 0x1d000
   10f04:	ldr	pc, [ip, #364]!	; 0x16c

00010f08 <__gmon_start__@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #118784	; 0x1d000
   10f10:	ldr	pc, [ip, #356]!	; 0x164

00010f14 <getopt_long@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #118784	; 0x1d000
   10f1c:	ldr	pc, [ip, #348]!	; 0x15c

00010f20 <__ctype_b_loc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #118784	; 0x1d000
   10f28:	ldr	pc, [ip, #340]!	; 0x154

00010f2c <exit@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #118784	; 0x1d000
   10f34:	ldr	pc, [ip, #332]!	; 0x14c

00010f38 <gettext@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #118784	; 0x1d000
   10f40:	ldr	pc, [ip, #324]!	; 0x144

00010f44 <strtoul@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #118784	; 0x1d000
   10f4c:	ldr	pc, [ip, #316]!	; 0x13c

00010f50 <strlen@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #118784	; 0x1d000
   10f58:	ldr	pc, [ip, #308]!	; 0x134

00010f5c <strchr@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #118784	; 0x1d000
   10f64:	ldr	pc, [ip, #300]!	; 0x12c

00010f68 <fprintf@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #118784	; 0x1d000
   10f70:	ldr	pc, [ip, #292]!	; 0x124

00010f74 <__errno_location@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #118784	; 0x1d000
   10f7c:	ldr	pc, [ip, #284]!	; 0x11c

00010f80 <__cxa_atexit@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #118784	; 0x1d000
   10f88:	ldr	pc, [ip, #276]!	; 0x114

00010f8c <memset@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #118784	; 0x1d000
   10f94:	ldr	pc, [ip, #268]!	; 0x10c

00010f98 <fileno@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #118784	; 0x1d000
   10fa0:	ldr	pc, [ip, #260]!	; 0x104

00010fa4 <strtoumax@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #118784	; 0x1d000
   10fac:	ldr	pc, [ip, #252]!	; 0xfc

00010fb0 <fclose@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #118784	; 0x1d000
   10fb8:	ldr	pc, [ip, #244]!	; 0xf4

00010fbc <fseeko64@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #118784	; 0x1d000
   10fc4:	ldr	pc, [ip, #236]!	; 0xec

00010fc8 <setlocale@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #118784	; 0x1d000
   10fd0:	ldr	pc, [ip, #228]!	; 0xe4

00010fd4 <strrchr@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #118784	; 0x1d000
   10fdc:	ldr	pc, [ip, #220]!	; 0xdc

00010fe0 <nl_langinfo@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #118784	; 0x1d000
   10fe8:	ldr	pc, [ip, #212]!	; 0xd4

00010fec <sched_getaffinity@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #118784	; 0x1d000
   10ff4:	ldr	pc, [ip, #204]!	; 0xcc

00010ff8 <bindtextdomain@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #118784	; 0x1d000
   11000:	ldr	pc, [ip, #196]!	; 0xc4

00011004 <fputs@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #118784	; 0x1d000
   1100c:	ldr	pc, [ip, #188]!	; 0xbc

00011010 <strncmp@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #118784	; 0x1d000
   11018:	ldr	pc, [ip, #180]!	; 0xb4

0001101c <abort@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #118784	; 0x1d000
   11024:	ldr	pc, [ip, #172]!	; 0xac

00011028 <__assert_fail@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #118784	; 0x1d000
   11030:	ldr	pc, [ip, #164]!	; 0xa4

Disassembly of section .text:

00011034 <.text>:
   11034:	mov	fp, #0
   11038:	mov	lr, #0
   1103c:	pop	{r1}		; (ldr r1, [sp], #4)
   11040:	mov	r2, sp
   11044:	push	{r2}		; (str r2, [sp, #-4]!)
   11048:	push	{r0}		; (str r0, [sp, #-4]!)
   1104c:	ldr	ip, [pc, #16]	; 11064 <__assert_fail@plt+0x3c>
   11050:	push	{ip}		; (str ip, [sp, #-4]!)
   11054:	ldr	r0, [pc, #12]	; 11068 <__assert_fail@plt+0x40>
   11058:	ldr	r3, [pc, #12]	; 1106c <__assert_fail@plt+0x44>
   1105c:	bl	10ef0 <__libc_start_main@plt>
   11060:	bl	1101c <abort@plt>
   11064:	andeq	ip, r1, r0, ror #12
   11068:	andeq	r1, r1, r8, lsl #8
   1106c:	andeq	ip, r1, r0, lsl #12
   11070:	ldr	r3, [pc, #20]	; 1108c <__assert_fail@plt+0x64>
   11074:	ldr	r2, [pc, #20]	; 11090 <__assert_fail@plt+0x68>
   11078:	add	r3, pc, r3
   1107c:	ldr	r2, [r3, r2]
   11080:	cmp	r2, #0
   11084:	bxeq	lr
   11088:	b	10f08 <__gmon_start__@plt>
   1108c:	andeq	ip, r1, r0, lsl #31
   11090:	ldrdeq	r0, [r0], -r8
   11094:	ldr	r0, [pc, #24]	; 110b4 <__assert_fail@plt+0x8c>
   11098:	ldr	r3, [pc, #24]	; 110b8 <__assert_fail@plt+0x90>
   1109c:	cmp	r3, r0
   110a0:	bxeq	lr
   110a4:	ldr	r3, [pc, #16]	; 110bc <__assert_fail@plt+0x94>
   110a8:	cmp	r3, #0
   110ac:	bxeq	lr
   110b0:	bx	r3
   110b4:	andeq	lr, r2, ip, lsr #2
   110b8:	andeq	lr, r2, ip, lsr #2
   110bc:	andeq	r0, r0, r0
   110c0:	ldr	r0, [pc, #36]	; 110ec <__assert_fail@plt+0xc4>
   110c4:	ldr	r1, [pc, #36]	; 110f0 <__assert_fail@plt+0xc8>
   110c8:	sub	r1, r1, r0
   110cc:	asr	r1, r1, #2
   110d0:	add	r1, r1, r1, lsr #31
   110d4:	asrs	r1, r1, #1
   110d8:	bxeq	lr
   110dc:	ldr	r3, [pc, #16]	; 110f4 <__assert_fail@plt+0xcc>
   110e0:	cmp	r3, #0
   110e4:	bxeq	lr
   110e8:	bx	r3
   110ec:	andeq	lr, r2, ip, lsr #2
   110f0:	andeq	lr, r2, ip, lsr #2
   110f4:	andeq	r0, r0, r0
   110f8:	push	{r4, lr}
   110fc:	ldr	r4, [pc, #24]	; 1111c <__assert_fail@plt+0xf4>
   11100:	ldrb	r3, [r4]
   11104:	cmp	r3, #0
   11108:	popne	{r4, pc}
   1110c:	bl	11094 <__assert_fail@plt+0x6c>
   11110:	mov	r3, #1
   11114:	strb	r3, [r4]
   11118:	pop	{r4, pc}
   1111c:	andeq	lr, r2, ip, asr #2
   11120:	b	110c0 <__assert_fail@plt+0x98>
   11124:	push	{fp, lr}
   11128:	mov	fp, sp
   1112c:	sub	sp, sp, #40	; 0x28
   11130:	str	r0, [fp, #-4]
   11134:	ldr	r0, [fp, #-4]
   11138:	cmp	r0, #0
   1113c:	beq	1118c <__assert_fail@plt+0x164>
   11140:	b	11144 <__assert_fail@plt+0x11c>
   11144:	movw	r0, #57664	; 0xe140
   11148:	movt	r0, #2
   1114c:	ldr	r0, [r0]
   11150:	movw	r1, #50824	; 0xc688
   11154:	movt	r1, #1
   11158:	str	r0, [fp, #-8]
   1115c:	mov	r0, r1
   11160:	bl	10f38 <gettext@plt>
   11164:	movw	r1, #57688	; 0xe158
   11168:	movt	r1, #2
   1116c:	ldr	r2, [r1]
   11170:	ldr	r1, [fp, #-8]
   11174:	str	r0, [fp, #-12]
   11178:	mov	r0, r1
   1117c:	ldr	r1, [fp, #-12]
   11180:	bl	10f68 <fprintf@plt>
   11184:	str	r0, [fp, #-16]
   11188:	b	1124c <__assert_fail@plt+0x224>
   1118c:	movw	r0, #50863	; 0xc6af
   11190:	movt	r0, #1
   11194:	bl	10f38 <gettext@plt>
   11198:	movw	lr, #57688	; 0xe158
   1119c:	movt	lr, #2
   111a0:	ldr	r1, [lr]
   111a4:	bl	10e00 <printf@plt>
   111a8:	movw	r1, #50886	; 0xc6c6
   111ac:	movt	r1, #1
   111b0:	str	r0, [sp, #20]
   111b4:	mov	r0, r1
   111b8:	bl	10f38 <gettext@plt>
   111bc:	movw	r1, #57668	; 0xe144
   111c0:	movt	r1, #2
   111c4:	ldr	r1, [r1]
   111c8:	bl	10ddc <fputs_unlocked@plt>
   111cc:	movw	r1, #51014	; 0xc746
   111d0:	movt	r1, #1
   111d4:	str	r0, [sp, #16]
   111d8:	mov	r0, r1
   111dc:	bl	10f38 <gettext@plt>
   111e0:	movw	r1, #57668	; 0xe144
   111e4:	movt	r1, #2
   111e8:	ldr	r1, [r1]
   111ec:	bl	10ddc <fputs_unlocked@plt>
   111f0:	movw	r1, #51131	; 0xc7bb
   111f4:	movt	r1, #1
   111f8:	str	r0, [sp, #12]
   111fc:	mov	r0, r1
   11200:	bl	10f38 <gettext@plt>
   11204:	movw	r1, #57668	; 0xe144
   11208:	movt	r1, #2
   1120c:	ldr	r1, [r1]
   11210:	bl	10ddc <fputs_unlocked@plt>
   11214:	movw	r1, #51176	; 0xc7e8
   11218:	movt	r1, #1
   1121c:	str	r0, [sp, #8]
   11220:	mov	r0, r1
   11224:	bl	10f38 <gettext@plt>
   11228:	movw	r1, #57668	; 0xe144
   1122c:	movt	r1, #2
   11230:	ldr	r1, [r1]
   11234:	bl	10ddc <fputs_unlocked@plt>
   11238:	movw	r1, #51230	; 0xc81e
   1123c:	movt	r1, #1
   11240:	str	r0, [sp, #4]
   11244:	mov	r0, r1
   11248:	bl	11254 <__assert_fail@plt+0x22c>
   1124c:	ldr	r0, [fp, #-4]
   11250:	bl	10f2c <exit@plt>
   11254:	push	{fp, lr}
   11258:	mov	fp, sp
   1125c:	sub	sp, sp, #96	; 0x60
   11260:	add	r1, sp, #36	; 0x24
   11264:	movw	r2, #51744	; 0xca20
   11268:	movt	r2, #1
   1126c:	str	r0, [fp, #-4]
   11270:	mov	r0, r1
   11274:	str	r1, [sp, #20]
   11278:	mov	r1, r2
   1127c:	movw	r2, #56	; 0x38
   11280:	bl	10e30 <memcpy@plt>
   11284:	ldr	r0, [fp, #-4]
   11288:	str	r0, [sp, #32]
   1128c:	ldr	r0, [sp, #20]
   11290:	str	r0, [sp, #28]
   11294:	ldr	r0, [sp, #28]
   11298:	ldr	r0, [r0]
   1129c:	movw	r1, #0
   112a0:	cmp	r0, r1
   112a4:	movw	r0, #0
   112a8:	str	r0, [sp, #16]
   112ac:	beq	112d8 <__assert_fail@plt+0x2b0>
   112b0:	ldr	r0, [fp, #-4]
   112b4:	ldr	r1, [sp, #28]
   112b8:	ldr	r1, [r1]
   112bc:	bl	10df4 <strcmp@plt>
   112c0:	cmp	r0, #0
   112c4:	movw	r0, #0
   112c8:	moveq	r0, #1
   112cc:	mvn	r1, #0
   112d0:	eor	r0, r0, r1
   112d4:	str	r0, [sp, #16]
   112d8:	ldr	r0, [sp, #16]
   112dc:	tst	r0, #1
   112e0:	beq	112f4 <__assert_fail@plt+0x2cc>
   112e4:	ldr	r0, [sp, #28]
   112e8:	add	r0, r0, #8
   112ec:	str	r0, [sp, #28]
   112f0:	b	11294 <__assert_fail@plt+0x26c>
   112f4:	ldr	r0, [sp, #28]
   112f8:	ldr	r0, [r0, #4]
   112fc:	movw	r1, #0
   11300:	cmp	r0, r1
   11304:	beq	11314 <__assert_fail@plt+0x2ec>
   11308:	ldr	r0, [sp, #28]
   1130c:	ldr	r0, [r0, #4]
   11310:	str	r0, [sp, #32]
   11314:	movw	r0, #51424	; 0xc8e0
   11318:	movt	r0, #1
   1131c:	bl	10f38 <gettext@plt>
   11320:	movw	r1, #51260	; 0xc83c
   11324:	movt	r1, #1
   11328:	movw	r2, #51447	; 0xc8f7
   1132c:	movt	r2, #1
   11330:	bl	10e00 <printf@plt>
   11334:	movw	r1, #5
   11338:	str	r0, [sp, #12]
   1133c:	mov	r0, r1
   11340:	movw	r1, #0
   11344:	bl	10fc8 <setlocale@plt>
   11348:	str	r0, [sp, #24]
   1134c:	ldr	r0, [sp, #24]
   11350:	movw	r1, #0
   11354:	cmp	r0, r1
   11358:	beq	11398 <__assert_fail@plt+0x370>
   1135c:	ldr	r0, [sp, #24]
   11360:	movw	r1, #51487	; 0xc91f
   11364:	movt	r1, #1
   11368:	movw	r2, #3
   1136c:	bl	11010 <strncmp@plt>
   11370:	cmp	r0, #0
   11374:	beq	11398 <__assert_fail@plt+0x370>
   11378:	movw	r0, #51491	; 0xc923
   1137c:	movt	r0, #1
   11380:	bl	10f38 <gettext@plt>
   11384:	movw	lr, #57668	; 0xe144
   11388:	movt	lr, #2
   1138c:	ldr	r1, [lr]
   11390:	bl	10ddc <fputs_unlocked@plt>
   11394:	str	r0, [sp, #8]
   11398:	movw	r0, #51562	; 0xc96a
   1139c:	movt	r0, #1
   113a0:	bl	10f38 <gettext@plt>
   113a4:	ldr	r2, [fp, #-4]
   113a8:	movw	r1, #51447	; 0xc8f7
   113ac:	movt	r1, #1
   113b0:	bl	10e00 <printf@plt>
   113b4:	movw	r1, #51589	; 0xc985
   113b8:	movt	r1, #1
   113bc:	str	r0, [sp, #4]
   113c0:	mov	r0, r1
   113c4:	bl	10f38 <gettext@plt>
   113c8:	ldr	r1, [sp, #32]
   113cc:	ldr	r2, [sp, #32]
   113d0:	ldr	lr, [fp, #-4]
   113d4:	cmp	r2, lr
   113d8:	movw	r2, #0
   113dc:	moveq	r2, #1
   113e0:	tst	r2, #1
   113e4:	movw	r2, #51013	; 0xc745
   113e8:	movt	r2, #1
   113ec:	movw	lr, #51357	; 0xc89d
   113f0:	movt	lr, #1
   113f4:	movne	r2, lr
   113f8:	bl	10e00 <printf@plt>
   113fc:	str	r0, [sp]
   11400:	mov	sp, fp
   11404:	pop	{fp, pc}
   11408:	push	{fp, lr}
   1140c:	mov	fp, sp
   11410:	sub	sp, sp, #88	; 0x58
   11414:	movw	r2, #0
   11418:	str	r2, [fp, #-4]
   1141c:	str	r0, [fp, #-8]
   11420:	str	r1, [fp, #-12]
   11424:	str	r2, [fp, #-20]	; 0xffffffec
   11428:	ldr	r0, [fp, #-12]
   1142c:	ldr	r0, [r0]
   11430:	bl	11b8c <__assert_fail@plt+0xb64>
   11434:	movw	r0, #6
   11438:	movw	r1, #51013	; 0xc745
   1143c:	movt	r1, #1
   11440:	bl	10fc8 <setlocale@plt>
   11444:	movw	r1, #51264	; 0xc840
   11448:	movt	r1, #1
   1144c:	str	r0, [fp, #-32]	; 0xffffffe0
   11450:	mov	r0, r1
   11454:	movw	r1, #51236	; 0xc824
   11458:	movt	r1, #1
   1145c:	bl	10ff8 <bindtextdomain@plt>
   11460:	movw	r1, #51264	; 0xc840
   11464:	movt	r1, #1
   11468:	str	r0, [fp, #-36]	; 0xffffffdc
   1146c:	mov	r0, r1
   11470:	bl	10e78 <textdomain@plt>
   11474:	movw	r1, #5868	; 0x16ec
   11478:	movt	r1, #1
   1147c:	str	r0, [fp, #-40]	; 0xffffffd8
   11480:	mov	r0, r1
   11484:	bl	1c664 <__assert_fail@plt+0xb63c>
   11488:	movw	r1, #2
   1148c:	str	r1, [fp, #-24]	; 0xffffffe8
   11490:	str	r0, [sp, #44]	; 0x2c
   11494:	ldr	r0, [fp, #-8]
   11498:	ldr	r1, [fp, #-12]
   1149c:	movw	r2, #51013	; 0xc745
   114a0:	movt	r2, #1
   114a4:	movw	r3, #51664	; 0xc9d0
   114a8:	movt	r3, #1
   114ac:	movw	ip, #0
   114b0:	str	ip, [sp]
   114b4:	bl	10f14 <getopt_long@plt>
   114b8:	str	r0, [fp, #-28]	; 0xffffffe4
   114bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   114c0:	cmn	r0, #1
   114c4:	bne	114cc <__assert_fail@plt+0x4a4>
   114c8:	b	115e0 <__assert_fail@plt+0x5b8>
   114cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   114d0:	cmn	r0, #3
   114d4:	str	r0, [sp, #40]	; 0x28
   114d8:	beq	1151c <__assert_fail@plt+0x4f4>
   114dc:	b	114e0 <__assert_fail@plt+0x4b8>
   114e0:	ldr	r0, [sp, #40]	; 0x28
   114e4:	cmn	r0, #2
   114e8:	beq	11514 <__assert_fail@plt+0x4ec>
   114ec:	b	114f0 <__assert_fail@plt+0x4c8>
   114f0:	ldr	r0, [sp, #40]	; 0x28
   114f4:	cmp	r0, #256	; 0x100
   114f8:	beq	11564 <__assert_fail@plt+0x53c>
   114fc:	b	11500 <__assert_fail@plt+0x4d8>
   11500:	movw	r0, #257	; 0x101
   11504:	ldr	r1, [sp, #40]	; 0x28
   11508:	cmp	r1, r0
   1150c:	beq	11570 <__assert_fail@plt+0x548>
   11510:	b	115d4 <__assert_fail@plt+0x5ac>
   11514:	movw	r0, #0
   11518:	bl	11124 <__assert_fail@plt+0xfc>
   1151c:	movw	r0, #57668	; 0xe144
   11520:	movt	r0, #2
   11524:	ldr	r0, [r0]
   11528:	movw	r1, #57572	; 0xe0e4
   1152c:	movt	r1, #2
   11530:	ldr	r3, [r1]
   11534:	movw	r1, #51230	; 0xc81e
   11538:	movt	r1, #1
   1153c:	movw	r2, #51260	; 0xc83c
   11540:	movt	r2, #1
   11544:	movw	ip, #51274	; 0xc84a
   11548:	movt	ip, #1
   1154c:	str	ip, [sp]
   11550:	movw	ip, #0
   11554:	str	ip, [sp, #4]
   11558:	bl	14aa4 <__assert_fail@plt+0x3a7c>
   1155c:	movw	r0, #0
   11560:	bl	10f2c <exit@plt>
   11564:	movw	r0, #0
   11568:	str	r0, [fp, #-24]	; 0xffffffe8
   1156c:	b	115dc <__assert_fail@plt+0x5b4>
   11570:	movw	r0, #57672	; 0xe148
   11574:	movt	r0, #2
   11578:	ldr	r0, [r0]
   1157c:	movw	r1, #51292	; 0xc85c
   11580:	movt	r1, #1
   11584:	str	r0, [sp, #36]	; 0x24
   11588:	mov	r0, r1
   1158c:	bl	10f38 <gettext@plt>
   11590:	mov	r1, sp
   11594:	mov	lr, #0
   11598:	str	lr, [r1, #16]
   1159c:	str	r0, [r1, #12]
   115a0:	movw	r0, #51013	; 0xc745
   115a4:	movt	r0, #1
   115a8:	str	r0, [r1, #8]
   115ac:	str	lr, [r1, #4]
   115b0:	mvn	r0, #0
   115b4:	str	r0, [r1]
   115b8:	ldr	r0, [sp, #36]	; 0x24
   115bc:	mov	r2, lr
   115c0:	mov	r3, lr
   115c4:	bl	17c68 <__assert_fail@plt+0x6c40>
   115c8:	str	r0, [fp, #-20]	; 0xffffffec
   115cc:	str	r1, [sp, #32]
   115d0:	b	115dc <__assert_fail@plt+0x5b4>
   115d4:	movw	r0, #1
   115d8:	bl	11124 <__assert_fail@plt+0xfc>
   115dc:	b	11494 <__assert_fail@plt+0x46c>
   115e0:	ldr	r0, [fp, #-8]
   115e4:	movw	r1, #57656	; 0xe138
   115e8:	movt	r1, #2
   115ec:	ldr	r1, [r1]
   115f0:	cmp	r0, r1
   115f4:	beq	11648 <__assert_fail@plt+0x620>
   115f8:	movw	r0, #51307	; 0xc86b
   115fc:	movt	r0, #1
   11600:	bl	10f38 <gettext@plt>
   11604:	ldr	lr, [fp, #-12]
   11608:	movw	r1, #57656	; 0xe138
   1160c:	movt	r1, #2
   11610:	ldr	r1, [r1]
   11614:	add	r1, lr, r1, lsl #2
   11618:	ldr	r1, [r1]
   1161c:	str	r0, [sp, #28]
   11620:	mov	r0, r1
   11624:	bl	141e8 <__assert_fail@plt+0x31c0>
   11628:	movw	r1, #0
   1162c:	str	r0, [sp, #24]
   11630:	mov	r0, r1
   11634:	ldr	r2, [sp, #28]
   11638:	ldr	r3, [sp, #24]
   1163c:	bl	10ecc <error@plt>
   11640:	movw	r0, #1
   11644:	bl	11124 <__assert_fail@plt+0xfc>
   11648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1164c:	bl	1180c <__assert_fail@plt+0x7e4>
   11650:	str	r0, [fp, #-16]
   11654:	ldr	r0, [fp, #-20]	; 0xffffffec
   11658:	ldr	lr, [fp, #-16]
   1165c:	cmp	r0, lr
   11660:	bcs	11678 <__assert_fail@plt+0x650>
   11664:	ldr	r0, [fp, #-20]	; 0xffffffec
   11668:	ldr	r1, [fp, #-16]
   1166c:	sub	r0, r1, r0
   11670:	str	r0, [fp, #-16]
   11674:	b	11680 <__assert_fail@plt+0x658>
   11678:	movw	r0, #1
   1167c:	str	r0, [fp, #-16]
   11680:	ldr	r1, [fp, #-16]
   11684:	movw	r0, #51324	; 0xc87c
   11688:	movt	r0, #1
   1168c:	bl	10e00 <printf@plt>
   11690:	movw	r1, #0
   11694:	str	r0, [sp, #20]
   11698:	mov	r0, r1
   1169c:	mov	sp, fp
   116a0:	pop	{fp, pc}
   116a4:	sub	sp, sp, #4
   116a8:	str	r0, [sp]
   116ac:	ldr	r0, [sp]
   116b0:	movw	r1, #57680	; 0xe150
   116b4:	movt	r1, #2
   116b8:	str	r0, [r1]
   116bc:	add	sp, sp, #4
   116c0:	bx	lr
   116c4:	sub	sp, sp, #4
   116c8:	and	r0, r0, #1
   116cc:	strb	r0, [sp, #3]
   116d0:	ldrb	r0, [sp, #3]
   116d4:	and	r0, r0, #1
   116d8:	movw	r1, #57684	; 0xe154
   116dc:	movt	r1, #2
   116e0:	strb	r0, [r1]
   116e4:	add	sp, sp, #4
   116e8:	bx	lr
   116ec:	push	{fp, lr}
   116f0:	mov	fp, sp
   116f4:	sub	sp, sp, #24
   116f8:	movw	r0, #57668	; 0xe144
   116fc:	movt	r0, #2
   11700:	ldr	r0, [r0]
   11704:	bl	1a798 <__assert_fail@plt+0x9770>
   11708:	cmp	r0, #0
   1170c:	beq	117dc <__assert_fail@plt+0x7b4>
   11710:	movw	r0, #57684	; 0xe154
   11714:	movt	r0, #2
   11718:	ldrb	r0, [r0]
   1171c:	tst	r0, #1
   11720:	beq	11734 <__assert_fail@plt+0x70c>
   11724:	bl	10f74 <__errno_location@plt>
   11728:	ldr	r0, [r0]
   1172c:	cmp	r0, #32
   11730:	beq	117dc <__assert_fail@plt+0x7b4>
   11734:	movw	r0, #51815	; 0xca67
   11738:	movt	r0, #1
   1173c:	bl	10f38 <gettext@plt>
   11740:	str	r0, [fp, #-4]
   11744:	movw	r0, #57680	; 0xe150
   11748:	movt	r0, #2
   1174c:	ldr	r0, [r0]
   11750:	movw	lr, #0
   11754:	cmp	r0, lr
   11758:	beq	117b0 <__assert_fail@plt+0x788>
   1175c:	bl	10f74 <__errno_location@plt>
   11760:	ldr	r1, [r0]
   11764:	movw	r0, #57680	; 0xe150
   11768:	movt	r0, #2
   1176c:	ldr	r0, [r0]
   11770:	str	r1, [fp, #-8]
   11774:	bl	13f4c <__assert_fail@plt+0x2f24>
   11778:	ldr	r1, [fp, #-4]
   1177c:	movw	lr, #0
   11780:	str	r0, [sp, #12]
   11784:	mov	r0, lr
   11788:	ldr	lr, [fp, #-8]
   1178c:	str	r1, [sp, #8]
   11790:	mov	r1, lr
   11794:	movw	r2, #51827	; 0xca73
   11798:	movt	r2, #1
   1179c:	ldr	r3, [sp, #12]
   117a0:	ldr	ip, [sp, #8]
   117a4:	str	ip, [sp]
   117a8:	bl	10ecc <error@plt>
   117ac:	b	117cc <__assert_fail@plt+0x7a4>
   117b0:	bl	10f74 <__errno_location@plt>
   117b4:	ldr	r1, [r0]
   117b8:	ldr	r3, [fp, #-4]
   117bc:	movw	r0, #0
   117c0:	movw	r2, #51831	; 0xca77
   117c4:	movt	r2, #1
   117c8:	bl	10ecc <error@plt>
   117cc:	movw	r0, #57576	; 0xe0e8
   117d0:	movt	r0, #2
   117d4:	ldr	r0, [r0]
   117d8:	bl	10e24 <_exit@plt>
   117dc:	movw	r0, #57664	; 0xe140
   117e0:	movt	r0, #2
   117e4:	ldr	r0, [r0]
   117e8:	bl	1a798 <__assert_fail@plt+0x9770>
   117ec:	cmp	r0, #0
   117f0:	beq	11804 <__assert_fail@plt+0x7dc>
   117f4:	movw	r0, #57576	; 0xe0e8
   117f8:	movt	r0, #2
   117fc:	ldr	r0, [r0]
   11800:	bl	10e24 <_exit@plt>
   11804:	mov	sp, fp
   11808:	pop	{fp, pc}
   1180c:	push	{fp, lr}
   11810:	mov	fp, sp
   11814:	sub	sp, sp, #32
   11818:	str	r0, [fp, #-8]
   1181c:	mvn	r0, #0
   11820:	str	r0, [fp, #-12]
   11824:	ldr	r0, [fp, #-8]
   11828:	cmp	r0, #2
   1182c:	bne	118b0 <__assert_fail@plt+0x888>
   11830:	movw	r0, #51834	; 0xca7a
   11834:	movt	r0, #1
   11838:	bl	10ed8 <getenv@plt>
   1183c:	bl	118f4 <__assert_fail@plt+0x8cc>
   11840:	str	r0, [sp, #16]
   11844:	movw	r0, #51850	; 0xca8a
   11848:	movt	r0, #1
   1184c:	bl	10ed8 <getenv@plt>
   11850:	bl	118f4 <__assert_fail@plt+0x8cc>
   11854:	str	r0, [fp, #-12]
   11858:	ldr	r0, [fp, #-12]
   1185c:	cmp	r0, #0
   11860:	bne	1186c <__assert_fail@plt+0x844>
   11864:	mvn	r0, #0
   11868:	str	r0, [fp, #-12]
   1186c:	ldr	r0, [sp, #16]
   11870:	cmp	r0, #0
   11874:	beq	118a8 <__assert_fail@plt+0x880>
   11878:	ldr	r0, [sp, #16]
   1187c:	ldr	r1, [fp, #-12]
   11880:	cmp	r0, r1
   11884:	bcs	11894 <__assert_fail@plt+0x86c>
   11888:	ldr	r0, [sp, #16]
   1188c:	str	r0, [sp, #8]
   11890:	b	1189c <__assert_fail@plt+0x874>
   11894:	ldr	r0, [fp, #-12]
   11898:	str	r0, [sp, #8]
   1189c:	ldr	r0, [sp, #8]
   118a0:	str	r0, [fp, #-4]
   118a4:	b	118e8 <__assert_fail@plt+0x8c0>
   118a8:	movw	r0, #1
   118ac:	str	r0, [fp, #-8]
   118b0:	ldr	r0, [fp, #-8]
   118b4:	bl	11a4c <__assert_fail@plt+0xa24>
   118b8:	str	r0, [sp, #12]
   118bc:	ldr	r0, [sp, #12]
   118c0:	ldr	lr, [fp, #-12]
   118c4:	cmp	r0, lr
   118c8:	bcs	118d8 <__assert_fail@plt+0x8b0>
   118cc:	ldr	r0, [sp, #12]
   118d0:	str	r0, [sp, #4]
   118d4:	b	118e0 <__assert_fail@plt+0x8b8>
   118d8:	ldr	r0, [fp, #-12]
   118dc:	str	r0, [sp, #4]
   118e0:	ldr	r0, [sp, #4]
   118e4:	str	r0, [fp, #-4]
   118e8:	ldr	r0, [fp, #-4]
   118ec:	mov	sp, fp
   118f0:	pop	{fp, pc}
   118f4:	push	{fp, lr}
   118f8:	mov	fp, sp
   118fc:	sub	sp, sp, #32
   11900:	str	r0, [fp, #-8]
   11904:	movw	r0, #0
   11908:	str	r0, [fp, #-12]
   1190c:	ldr	r1, [fp, #-8]
   11910:	cmp	r1, r0
   11914:	bne	11924 <__assert_fail@plt+0x8fc>
   11918:	ldr	r0, [fp, #-12]
   1191c:	str	r0, [fp, #-4]
   11920:	b	11a40 <__assert_fail@plt+0xa18>
   11924:	b	11928 <__assert_fail@plt+0x900>
   11928:	ldr	r0, [fp, #-8]
   1192c:	ldrb	r0, [r0]
   11930:	cmp	r0, #0
   11934:	movw	r0, #0
   11938:	str	r0, [sp, #8]
   1193c:	beq	11950 <__assert_fail@plt+0x928>
   11940:	ldr	r0, [fp, #-8]
   11944:	ldrb	r0, [r0]
   11948:	bl	1a540 <__assert_fail@plt+0x9518>
   1194c:	str	r0, [sp, #8]
   11950:	ldr	r0, [sp, #8]
   11954:	tst	r0, #1
   11958:	beq	1196c <__assert_fail@plt+0x944>
   1195c:	ldr	r0, [fp, #-8]
   11960:	add	r0, r0, #1
   11964:	str	r0, [fp, #-8]
   11968:	b	11928 <__assert_fail@plt+0x900>
   1196c:	ldr	r0, [fp, #-8]
   11970:	ldrb	r0, [r0]
   11974:	bl	1a250 <__assert_fail@plt+0x9228>
   11978:	tst	r0, #1
   1197c:	beq	11a38 <__assert_fail@plt+0xa10>
   11980:	movw	r0, #0
   11984:	str	r0, [sp, #16]
   11988:	ldr	r0, [fp, #-8]
   1198c:	add	r1, sp, #16
   11990:	movw	r2, #10
   11994:	bl	10f44 <strtoul@plt>
   11998:	str	r0, [sp, #12]
   1199c:	ldr	r0, [sp, #16]
   119a0:	movw	r1, #0
   119a4:	cmp	r0, r1
   119a8:	beq	11a34 <__assert_fail@plt+0xa0c>
   119ac:	b	119b0 <__assert_fail@plt+0x988>
   119b0:	ldr	r0, [sp, #16]
   119b4:	ldrb	r0, [r0]
   119b8:	cmp	r0, #0
   119bc:	movw	r0, #0
   119c0:	str	r0, [sp, #4]
   119c4:	beq	119d8 <__assert_fail@plt+0x9b0>
   119c8:	ldr	r0, [sp, #16]
   119cc:	ldrb	r0, [r0]
   119d0:	bl	1a540 <__assert_fail@plt+0x9518>
   119d4:	str	r0, [sp, #4]
   119d8:	ldr	r0, [sp, #4]
   119dc:	tst	r0, #1
   119e0:	beq	119f4 <__assert_fail@plt+0x9cc>
   119e4:	ldr	r0, [sp, #16]
   119e8:	add	r0, r0, #1
   119ec:	str	r0, [sp, #16]
   119f0:	b	119b0 <__assert_fail@plt+0x988>
   119f4:	ldr	r0, [sp, #16]
   119f8:	ldrb	r0, [r0]
   119fc:	cmp	r0, #0
   11a00:	bne	11a10 <__assert_fail@plt+0x9e8>
   11a04:	ldr	r0, [sp, #12]
   11a08:	str	r0, [fp, #-4]
   11a0c:	b	11a40 <__assert_fail@plt+0xa18>
   11a10:	ldr	r0, [sp, #16]
   11a14:	ldrb	r0, [r0]
   11a18:	cmp	r0, #44	; 0x2c
   11a1c:	bne	11a2c <__assert_fail@plt+0xa04>
   11a20:	ldr	r0, [sp, #12]
   11a24:	str	r0, [fp, #-4]
   11a28:	b	11a40 <__assert_fail@plt+0xa18>
   11a2c:	b	11a30 <__assert_fail@plt+0xa08>
   11a30:	b	11a34 <__assert_fail@plt+0xa0c>
   11a34:	b	11a38 <__assert_fail@plt+0xa10>
   11a38:	ldr	r0, [fp, #-12]
   11a3c:	str	r0, [fp, #-4]
   11a40:	ldr	r0, [fp, #-4]
   11a44:	mov	sp, fp
   11a48:	pop	{fp, pc}
   11a4c:	push	{fp, lr}
   11a50:	mov	fp, sp
   11a54:	sub	sp, sp, #24
   11a58:	str	r0, [fp, #-8]
   11a5c:	ldr	r0, [fp, #-8]
   11a60:	cmp	r0, #1
   11a64:	bne	11ab0 <__assert_fail@plt+0xa88>
   11a68:	bl	11b28 <__assert_fail@plt+0xb00>
   11a6c:	str	r0, [sp, #12]
   11a70:	ldr	r0, [sp, #12]
   11a74:	cmp	r0, #0
   11a78:	bls	11a88 <__assert_fail@plt+0xa60>
   11a7c:	ldr	r0, [sp, #12]
   11a80:	str	r0, [fp, #-4]
   11a84:	b	11b1c <__assert_fail@plt+0xaf4>
   11a88:	movw	r0, #84	; 0x54
   11a8c:	bl	10e60 <sysconf@plt>
   11a90:	str	r0, [sp, #8]
   11a94:	ldr	r0, [sp, #8]
   11a98:	cmp	r0, #0
   11a9c:	ble	11aac <__assert_fail@plt+0xa84>
   11aa0:	ldr	r0, [sp, #8]
   11aa4:	str	r0, [fp, #-4]
   11aa8:	b	11b1c <__assert_fail@plt+0xaf4>
   11aac:	b	11b14 <__assert_fail@plt+0xaec>
   11ab0:	movw	r0, #83	; 0x53
   11ab4:	bl	10e60 <sysconf@plt>
   11ab8:	str	r0, [sp, #4]
   11abc:	ldr	r0, [sp, #4]
   11ac0:	cmp	r0, #1
   11ac4:	beq	11ad4 <__assert_fail@plt+0xaac>
   11ac8:	ldr	r0, [sp, #4]
   11acc:	cmp	r0, #2
   11ad0:	bne	11af8 <__assert_fail@plt+0xad0>
   11ad4:	bl	11b28 <__assert_fail@plt+0xb00>
   11ad8:	str	r0, [sp]
   11adc:	ldr	r0, [sp]
   11ae0:	ldr	lr, [sp, #4]
   11ae4:	cmp	r0, lr
   11ae8:	bls	11af4 <__assert_fail@plt+0xacc>
   11aec:	ldr	r0, [sp]
   11af0:	str	r0, [sp, #4]
   11af4:	b	11af8 <__assert_fail@plt+0xad0>
   11af8:	ldr	r0, [sp, #4]
   11afc:	cmp	r0, #0
   11b00:	ble	11b10 <__assert_fail@plt+0xae8>
   11b04:	ldr	r0, [sp, #4]
   11b08:	str	r0, [fp, #-4]
   11b0c:	b	11b1c <__assert_fail@plt+0xaf4>
   11b10:	b	11b14 <__assert_fail@plt+0xaec>
   11b14:	movw	r0, #1
   11b18:	str	r0, [fp, #-4]
   11b1c:	ldr	r0, [fp, #-4]
   11b20:	mov	sp, fp
   11b24:	pop	{fp, pc}
   11b28:	push	{fp, lr}
   11b2c:	mov	fp, sp
   11b30:	sub	sp, sp, #136	; 0x88
   11b34:	movw	r0, #0
   11b38:	movw	r1, #128	; 0x80
   11b3c:	add	r2, sp, #4
   11b40:	bl	10fec <sched_getaffinity@plt>
   11b44:	cmp	r0, #0
   11b48:	bne	11b78 <__assert_fail@plt+0xb50>
   11b4c:	movw	r0, #128	; 0x80
   11b50:	add	r1, sp, #4
   11b54:	bl	10e48 <__sched_cpucount@plt>
   11b58:	str	r0, [sp]
   11b5c:	ldr	r0, [sp]
   11b60:	cmp	r0, #0
   11b64:	bls	11b74 <__assert_fail@plt+0xb4c>
   11b68:	ldr	r0, [sp]
   11b6c:	str	r0, [fp, #-4]
   11b70:	b	11b80 <__assert_fail@plt+0xb58>
   11b74:	b	11b78 <__assert_fail@plt+0xb50>
   11b78:	movw	r0, #0
   11b7c:	str	r0, [fp, #-4]
   11b80:	ldr	r0, [fp, #-4]
   11b84:	mov	sp, fp
   11b88:	pop	{fp, pc}
   11b8c:	push	{fp, lr}
   11b90:	mov	fp, sp
   11b94:	sub	sp, sp, #24
   11b98:	str	r0, [fp, #-4]
   11b9c:	ldr	r0, [fp, #-4]
   11ba0:	movw	r1, #0
   11ba4:	cmp	r0, r1
   11ba8:	bne	11bcc <__assert_fail@plt+0xba4>
   11bac:	movw	r0, #57664	; 0xe140
   11bb0:	movt	r0, #2
   11bb4:	ldr	r1, [r0]
   11bb8:	movw	r0, #51867	; 0xca9b
   11bbc:	movt	r0, #1
   11bc0:	bl	11004 <fputs@plt>
   11bc4:	str	r0, [sp, #8]
   11bc8:	bl	1101c <abort@plt>
   11bcc:	ldr	r0, [fp, #-4]
   11bd0:	movw	r1, #47	; 0x2f
   11bd4:	bl	10fd4 <strrchr@plt>
   11bd8:	str	r0, [fp, #-8]
   11bdc:	ldr	r0, [fp, #-8]
   11be0:	movw	r1, #0
   11be4:	cmp	r0, r1
   11be8:	beq	11bfc <__assert_fail@plt+0xbd4>
   11bec:	ldr	r0, [fp, #-8]
   11bf0:	add	r0, r0, #1
   11bf4:	str	r0, [sp, #4]
   11bf8:	b	11c04 <__assert_fail@plt+0xbdc>
   11bfc:	ldr	r0, [fp, #-4]
   11c00:	str	r0, [sp, #4]
   11c04:	ldr	r0, [sp, #4]
   11c08:	str	r0, [sp, #12]
   11c0c:	ldr	r0, [sp, #12]
   11c10:	ldr	r1, [fp, #-4]
   11c14:	sub	r0, r0, r1
   11c18:	cmp	r0, #7
   11c1c:	blt	11c88 <__assert_fail@plt+0xc60>
   11c20:	ldr	r0, [sp, #12]
   11c24:	mvn	r1, #6
   11c28:	add	r0, r0, r1
   11c2c:	movw	r1, #51923	; 0xcad3
   11c30:	movt	r1, #1
   11c34:	movw	r2, #7
   11c38:	bl	11010 <strncmp@plt>
   11c3c:	cmp	r0, #0
   11c40:	bne	11c88 <__assert_fail@plt+0xc60>
   11c44:	ldr	r0, [sp, #12]
   11c48:	str	r0, [fp, #-4]
   11c4c:	ldr	r0, [sp, #12]
   11c50:	movw	r1, #51931	; 0xcadb
   11c54:	movt	r1, #1
   11c58:	movw	r2, #3
   11c5c:	bl	11010 <strncmp@plt>
   11c60:	cmp	r0, #0
   11c64:	bne	11c84 <__assert_fail@plt+0xc5c>
   11c68:	ldr	r0, [sp, #12]
   11c6c:	add	r0, r0, #3
   11c70:	str	r0, [fp, #-4]
   11c74:	ldr	r0, [fp, #-4]
   11c78:	movw	r1, #57648	; 0xe130
   11c7c:	movt	r1, #2
   11c80:	str	r0, [r1]
   11c84:	b	11c88 <__assert_fail@plt+0xc60>
   11c88:	ldr	r0, [fp, #-4]
   11c8c:	movw	r1, #57688	; 0xe158
   11c90:	movt	r1, #2
   11c94:	str	r0, [r1]
   11c98:	ldr	r0, [fp, #-4]
   11c9c:	movw	r1, #57652	; 0xe134
   11ca0:	movt	r1, #2
   11ca4:	str	r0, [r1]
   11ca8:	mov	sp, fp
   11cac:	pop	{fp, pc}
   11cb0:	push	{fp, lr}
   11cb4:	mov	fp, sp
   11cb8:	sub	sp, sp, #24
   11cbc:	str	r0, [fp, #-4]
   11cc0:	bl	10f74 <__errno_location@plt>
   11cc4:	ldr	r0, [r0]
   11cc8:	str	r0, [fp, #-8]
   11ccc:	ldr	r0, [fp, #-4]
   11cd0:	movw	lr, #0
   11cd4:	cmp	r0, lr
   11cd8:	beq	11ce8 <__assert_fail@plt+0xcc0>
   11cdc:	ldr	r0, [fp, #-4]
   11ce0:	str	r0, [sp, #8]
   11ce4:	b	11cf8 <__assert_fail@plt+0xcd0>
   11ce8:	movw	r0, #57692	; 0xe15c
   11cec:	movt	r0, #2
   11cf0:	str	r0, [sp, #8]
   11cf4:	b	11cf8 <__assert_fail@plt+0xcd0>
   11cf8:	ldr	r0, [sp, #8]
   11cfc:	movw	r1, #48	; 0x30
   11d00:	bl	17910 <__assert_fail@plt+0x68e8>
   11d04:	str	r0, [sp, #12]
   11d08:	ldr	r0, [fp, #-8]
   11d0c:	str	r0, [sp, #4]
   11d10:	bl	10f74 <__errno_location@plt>
   11d14:	ldr	r1, [sp, #4]
   11d18:	str	r1, [r0]
   11d1c:	ldr	r0, [sp, #12]
   11d20:	mov	sp, fp
   11d24:	pop	{fp, pc}
   11d28:	sub	sp, sp, #8
   11d2c:	str	r0, [sp, #4]
   11d30:	ldr	r0, [sp, #4]
   11d34:	movw	r1, #0
   11d38:	cmp	r0, r1
   11d3c:	beq	11d4c <__assert_fail@plt+0xd24>
   11d40:	ldr	r0, [sp, #4]
   11d44:	str	r0, [sp]
   11d48:	b	11d5c <__assert_fail@plt+0xd34>
   11d4c:	movw	r0, #57692	; 0xe15c
   11d50:	movt	r0, #2
   11d54:	str	r0, [sp]
   11d58:	b	11d5c <__assert_fail@plt+0xd34>
   11d5c:	ldr	r0, [sp]
   11d60:	ldr	r0, [r0]
   11d64:	add	sp, sp, #8
   11d68:	bx	lr
   11d6c:	sub	sp, sp, #16
   11d70:	str	r0, [sp, #12]
   11d74:	str	r1, [sp, #8]
   11d78:	ldr	r0, [sp, #8]
   11d7c:	ldr	r1, [sp, #12]
   11d80:	movw	r2, #0
   11d84:	cmp	r1, r2
   11d88:	str	r0, [sp, #4]
   11d8c:	beq	11d9c <__assert_fail@plt+0xd74>
   11d90:	ldr	r0, [sp, #12]
   11d94:	str	r0, [sp]
   11d98:	b	11dac <__assert_fail@plt+0xd84>
   11d9c:	movw	r0, #57692	; 0xe15c
   11da0:	movt	r0, #2
   11da4:	str	r0, [sp]
   11da8:	b	11dac <__assert_fail@plt+0xd84>
   11dac:	ldr	r0, [sp]
   11db0:	ldr	r1, [sp, #4]
   11db4:	str	r1, [r0]
   11db8:	add	sp, sp, #16
   11dbc:	bx	lr
   11dc0:	sub	sp, sp, #32
   11dc4:	str	r0, [sp, #28]
   11dc8:	strb	r1, [sp, #27]
   11dcc:	str	r2, [sp, #20]
   11dd0:	ldrb	r0, [sp, #27]
   11dd4:	strb	r0, [sp, #19]
   11dd8:	ldr	r0, [sp, #28]
   11ddc:	movw	r1, #0
   11de0:	cmp	r0, r1
   11de4:	beq	11df4 <__assert_fail@plt+0xdcc>
   11de8:	ldr	r0, [sp, #28]
   11dec:	str	r0, [sp]
   11df0:	b	11e04 <__assert_fail@plt+0xddc>
   11df4:	movw	r0, #57692	; 0xe15c
   11df8:	movt	r0, #2
   11dfc:	str	r0, [sp]
   11e00:	b	11e04 <__assert_fail@plt+0xddc>
   11e04:	ldr	r0, [sp]
   11e08:	add	r0, r0, #8
   11e0c:	ldrb	r1, [sp, #19]
   11e10:	lsr	r1, r1, #5
   11e14:	add	r0, r0, r1, lsl #2
   11e18:	str	r0, [sp, #12]
   11e1c:	ldrb	r0, [sp, #19]
   11e20:	and	r0, r0, #31
   11e24:	str	r0, [sp, #8]
   11e28:	ldr	r0, [sp, #12]
   11e2c:	ldr	r0, [r0]
   11e30:	ldr	r1, [sp, #8]
   11e34:	lsr	r0, r0, r1
   11e38:	and	r0, r0, #1
   11e3c:	str	r0, [sp, #4]
   11e40:	ldr	r0, [sp, #20]
   11e44:	and	r0, r0, #1
   11e48:	ldr	r1, [sp, #4]
   11e4c:	eor	r0, r0, r1
   11e50:	ldr	r1, [sp, #8]
   11e54:	lsl	r0, r0, r1
   11e58:	ldr	r1, [sp, #12]
   11e5c:	ldr	r2, [r1]
   11e60:	eor	r0, r2, r0
   11e64:	str	r0, [r1]
   11e68:	ldr	r0, [sp, #4]
   11e6c:	add	sp, sp, #32
   11e70:	bx	lr
   11e74:	sub	sp, sp, #12
   11e78:	str	r0, [sp, #8]
   11e7c:	str	r1, [sp, #4]
   11e80:	ldr	r0, [sp, #8]
   11e84:	movw	r1, #0
   11e88:	cmp	r0, r1
   11e8c:	bne	11e9c <__assert_fail@plt+0xe74>
   11e90:	movw	r0, #57692	; 0xe15c
   11e94:	movt	r0, #2
   11e98:	str	r0, [sp, #8]
   11e9c:	ldr	r0, [sp, #8]
   11ea0:	ldr	r0, [r0, #4]
   11ea4:	str	r0, [sp]
   11ea8:	ldr	r0, [sp, #4]
   11eac:	ldr	r1, [sp, #8]
   11eb0:	str	r0, [r1, #4]
   11eb4:	ldr	r0, [sp]
   11eb8:	add	sp, sp, #12
   11ebc:	bx	lr
   11ec0:	push	{fp, lr}
   11ec4:	mov	fp, sp
   11ec8:	sub	sp, sp, #16
   11ecc:	str	r0, [fp, #-4]
   11ed0:	str	r1, [sp, #8]
   11ed4:	str	r2, [sp, #4]
   11ed8:	ldr	r0, [fp, #-4]
   11edc:	movw	r1, #0
   11ee0:	cmp	r0, r1
   11ee4:	bne	11ef4 <__assert_fail@plt+0xecc>
   11ee8:	movw	r0, #57692	; 0xe15c
   11eec:	movt	r0, #2
   11ef0:	str	r0, [fp, #-4]
   11ef4:	ldr	r0, [fp, #-4]
   11ef8:	movw	r1, #10
   11efc:	str	r1, [r0]
   11f00:	ldr	r0, [sp, #8]
   11f04:	movw	r1, #0
   11f08:	cmp	r0, r1
   11f0c:	beq	11f20 <__assert_fail@plt+0xef8>
   11f10:	ldr	r0, [sp, #4]
   11f14:	movw	r1, #0
   11f18:	cmp	r0, r1
   11f1c:	bne	11f24 <__assert_fail@plt+0xefc>
   11f20:	bl	1101c <abort@plt>
   11f24:	ldr	r0, [sp, #8]
   11f28:	ldr	r1, [fp, #-4]
   11f2c:	str	r0, [r1, #40]	; 0x28
   11f30:	ldr	r0, [sp, #4]
   11f34:	ldr	r1, [fp, #-4]
   11f38:	str	r0, [r1, #44]	; 0x2c
   11f3c:	mov	sp, fp
   11f40:	pop	{fp, pc}
   11f44:	push	{r4, r5, r6, sl, fp, lr}
   11f48:	add	fp, sp, #16
   11f4c:	sub	sp, sp, #64	; 0x40
   11f50:	ldr	ip, [fp, #8]
   11f54:	str	r0, [fp, #-20]	; 0xffffffec
   11f58:	str	r1, [fp, #-24]	; 0xffffffe8
   11f5c:	str	r2, [fp, #-28]	; 0xffffffe4
   11f60:	str	r3, [fp, #-32]	; 0xffffffe0
   11f64:	ldr	r0, [fp, #8]
   11f68:	movw	r1, #0
   11f6c:	cmp	r0, r1
   11f70:	str	ip, [sp, #32]
   11f74:	beq	11f84 <__assert_fail@plt+0xf5c>
   11f78:	ldr	r0, [fp, #8]
   11f7c:	str	r0, [sp, #28]
   11f80:	b	11f94 <__assert_fail@plt+0xf6c>
   11f84:	movw	r0, #57692	; 0xe15c
   11f88:	movt	r0, #2
   11f8c:	str	r0, [sp, #28]
   11f90:	b	11f94 <__assert_fail@plt+0xf6c>
   11f94:	ldr	r0, [sp, #28]
   11f98:	str	r0, [fp, #-36]	; 0xffffffdc
   11f9c:	bl	10f74 <__errno_location@plt>
   11fa0:	ldr	r0, [r0]
   11fa4:	str	r0, [sp, #40]	; 0x28
   11fa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11fac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11fb0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11fb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11fb8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   11fbc:	ldr	lr, [lr]
   11fc0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   11fc4:	ldr	ip, [ip, #4]
   11fc8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   11fcc:	add	r4, r4, #8
   11fd0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   11fd4:	ldr	r5, [r5, #40]	; 0x28
   11fd8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   11fdc:	ldr	r6, [r6, #44]	; 0x2c
   11fe0:	str	lr, [sp]
   11fe4:	str	ip, [sp, #4]
   11fe8:	str	r4, [sp, #8]
   11fec:	str	r5, [sp, #12]
   11ff0:	str	r6, [sp, #16]
   11ff4:	bl	1201c <__assert_fail@plt+0xff4>
   11ff8:	str	r0, [sp, #36]	; 0x24
   11ffc:	ldr	r0, [sp, #40]	; 0x28
   12000:	str	r0, [sp, #24]
   12004:	bl	10f74 <__errno_location@plt>
   12008:	ldr	r1, [sp, #24]
   1200c:	str	r1, [r0]
   12010:	ldr	r0, [sp, #36]	; 0x24
   12014:	sub	sp, fp, #16
   12018:	pop	{r4, r5, r6, sl, fp, pc}
   1201c:	push	{r4, r5, r6, sl, fp, lr}
   12020:	add	fp, sp, #16
   12024:	sub	sp, sp, #168	; 0xa8
   12028:	ldr	ip, [fp, #24]
   1202c:	ldr	lr, [fp, #20]
   12030:	ldr	r4, [fp, #16]
   12034:	ldr	r5, [fp, #12]
   12038:	ldr	r6, [fp, #8]
   1203c:	str	r0, [fp, #-24]	; 0xffffffe8
   12040:	str	r1, [fp, #-28]	; 0xffffffe4
   12044:	str	r2, [fp, #-32]	; 0xffffffe0
   12048:	str	r3, [fp, #-36]	; 0xffffffdc
   1204c:	movw	r0, #0
   12050:	str	r0, [fp, #-44]	; 0xffffffd4
   12054:	str	r0, [fp, #-48]	; 0xffffffd0
   12058:	str	r0, [fp, #-52]	; 0xffffffcc
   1205c:	str	r0, [fp, #-56]	; 0xffffffc8
   12060:	movw	r0, #0
   12064:	strb	r0, [fp, #-57]	; 0xffffffc7
   12068:	str	r6, [sp, #80]	; 0x50
   1206c:	str	lr, [sp, #76]	; 0x4c
   12070:	str	r4, [sp, #72]	; 0x48
   12074:	str	r5, [sp, #68]	; 0x44
   12078:	str	ip, [sp, #64]	; 0x40
   1207c:	bl	10e9c <__ctype_get_mb_cur_max@plt>
   12080:	cmp	r0, #1
   12084:	movw	r0, #0
   12088:	moveq	r0, #1
   1208c:	and	r0, r0, #1
   12090:	strb	r0, [fp, #-58]	; 0xffffffc6
   12094:	ldr	r0, [fp, #12]
   12098:	and	r0, r0, #2
   1209c:	cmp	r0, #0
   120a0:	movw	r0, #0
   120a4:	movne	r0, #1
   120a8:	and	r0, r0, #1
   120ac:	strb	r0, [fp, #-59]	; 0xffffffc5
   120b0:	movw	r0, #0
   120b4:	strb	r0, [fp, #-60]	; 0xffffffc4
   120b8:	strb	r0, [fp, #-61]	; 0xffffffc3
   120bc:	movw	r0, #1
   120c0:	strb	r0, [fp, #-62]	; 0xffffffc2
   120c4:	ldr	r0, [fp, #8]
   120c8:	cmp	r0, #10
   120cc:	str	r0, [sp, #60]	; 0x3c
   120d0:	bhi	122f8 <__assert_fail@plt+0x12d0>
   120d4:	add	r0, pc, #8
   120d8:	ldr	r1, [sp, #60]	; 0x3c
   120dc:	ldr	r0, [r0, r1, lsl #2]
   120e0:	mov	pc, r0
   120e4:	andeq	r2, r1, ip, ror #5
   120e8:	andeq	r2, r1, r8, ror #4
   120ec:	andeq	r2, r1, r8, lsl #5
   120f0:	andeq	r2, r1, r0, ror #4
   120f4:	andeq	r2, r1, r0, ror r2
   120f8:	andeq	r2, r1, r0, lsr #2
   120fc:	andeq	r2, r1, r0, lsl r1
   12100:	andeq	r2, r1, r4, lsl #3
   12104:	muleq	r1, r8, r1
   12108:	muleq	r1, r8, r1
   1210c:	muleq	r1, r8, r1
   12110:	movw	r0, #5
   12114:	str	r0, [fp, #8]
   12118:	movw	r0, #1
   1211c:	strb	r0, [fp, #-59]	; 0xffffffc5
   12120:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12124:	tst	r0, #1
   12128:	bne	12164 <__assert_fail@plt+0x113c>
   1212c:	b	12130 <__assert_fail@plt+0x1108>
   12130:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12134:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12138:	cmp	r0, r1
   1213c:	bcs	12154 <__assert_fail@plt+0x112c>
   12140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12144:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12148:	add	r0, r0, r1
   1214c:	movw	r1, #34	; 0x22
   12150:	strb	r1, [r0]
   12154:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12158:	add	r0, r0, #1
   1215c:	str	r0, [fp, #-44]	; 0xffffffd4
   12160:	b	12164 <__assert_fail@plt+0x113c>
   12164:	movw	r0, #1
   12168:	strb	r0, [fp, #-57]	; 0xffffffc7
   1216c:	movw	r0, #52011	; 0xcb2b
   12170:	movt	r0, #1
   12174:	str	r0, [fp, #-52]	; 0xffffffcc
   12178:	movw	r0, #1
   1217c:	str	r0, [fp, #-56]	; 0xffffffc8
   12180:	b	122fc <__assert_fail@plt+0x12d4>
   12184:	movw	r0, #1
   12188:	strb	r0, [fp, #-57]	; 0xffffffc7
   1218c:	movw	r0, #0
   12190:	strb	r0, [fp, #-59]	; 0xffffffc5
   12194:	b	122fc <__assert_fail@plt+0x12d4>
   12198:	ldr	r0, [fp, #8]
   1219c:	cmp	r0, #10
   121a0:	beq	121cc <__assert_fail@plt+0x11a4>
   121a4:	ldr	r1, [fp, #8]
   121a8:	movw	r0, #52013	; 0xcb2d
   121ac:	movt	r0, #1
   121b0:	bl	1420c <__assert_fail@plt+0x31e4>
   121b4:	str	r0, [fp, #20]
   121b8:	ldr	r1, [fp, #8]
   121bc:	movw	r0, #52015	; 0xcb2f
   121c0:	movt	r0, #1
   121c4:	bl	1420c <__assert_fail@plt+0x31e4>
   121c8:	str	r0, [fp, #24]
   121cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   121d0:	tst	r0, #1
   121d4:	bne	12240 <__assert_fail@plt+0x1218>
   121d8:	ldr	r0, [fp, #20]
   121dc:	str	r0, [fp, #-52]	; 0xffffffcc
   121e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   121e4:	ldrsb	r0, [r0]
   121e8:	cmp	r0, #0
   121ec:	beq	1223c <__assert_fail@plt+0x1214>
   121f0:	b	121f4 <__assert_fail@plt+0x11cc>
   121f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   121f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   121fc:	cmp	r0, r1
   12200:	bcs	1221c <__assert_fail@plt+0x11f4>
   12204:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12208:	ldrb	r0, [r0]
   1220c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12210:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12214:	add	r1, r1, r2
   12218:	strb	r0, [r1]
   1221c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12220:	add	r0, r0, #1
   12224:	str	r0, [fp, #-44]	; 0xffffffd4
   12228:	b	1222c <__assert_fail@plt+0x1204>
   1222c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12230:	add	r0, r0, #1
   12234:	str	r0, [fp, #-52]	; 0xffffffcc
   12238:	b	121e0 <__assert_fail@plt+0x11b8>
   1223c:	b	12240 <__assert_fail@plt+0x1218>
   12240:	movw	r0, #1
   12244:	strb	r0, [fp, #-57]	; 0xffffffc7
   12248:	ldr	r0, [fp, #24]
   1224c:	str	r0, [fp, #-52]	; 0xffffffcc
   12250:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12254:	bl	10f50 <strlen@plt>
   12258:	str	r0, [fp, #-56]	; 0xffffffc8
   1225c:	b	122fc <__assert_fail@plt+0x12d4>
   12260:	movw	r0, #1
   12264:	strb	r0, [fp, #-57]	; 0xffffffc7
   12268:	movw	r0, #1
   1226c:	strb	r0, [fp, #-59]	; 0xffffffc5
   12270:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12274:	tst	r0, #1
   12278:	bne	12284 <__assert_fail@plt+0x125c>
   1227c:	movw	r0, #1
   12280:	strb	r0, [fp, #-57]	; 0xffffffc7
   12284:	b	12288 <__assert_fail@plt+0x1260>
   12288:	movw	r0, #2
   1228c:	str	r0, [fp, #8]
   12290:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12294:	tst	r0, #1
   12298:	bne	122d4 <__assert_fail@plt+0x12ac>
   1229c:	b	122a0 <__assert_fail@plt+0x1278>
   122a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   122a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   122a8:	cmp	r0, r1
   122ac:	bcs	122c4 <__assert_fail@plt+0x129c>
   122b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   122b8:	add	r0, r0, r1
   122bc:	movw	r1, #39	; 0x27
   122c0:	strb	r1, [r0]
   122c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   122c8:	add	r0, r0, #1
   122cc:	str	r0, [fp, #-44]	; 0xffffffd4
   122d0:	b	122d4 <__assert_fail@plt+0x12ac>
   122d4:	movw	r0, #52015	; 0xcb2f
   122d8:	movt	r0, #1
   122dc:	str	r0, [fp, #-52]	; 0xffffffcc
   122e0:	movw	r0, #1
   122e4:	str	r0, [fp, #-56]	; 0xffffffc8
   122e8:	b	122fc <__assert_fail@plt+0x12d4>
   122ec:	movw	r0, #0
   122f0:	strb	r0, [fp, #-59]	; 0xffffffc5
   122f4:	b	122fc <__assert_fail@plt+0x12d4>
   122f8:	bl	1101c <abort@plt>
   122fc:	movw	r0, #0
   12300:	str	r0, [fp, #-40]	; 0xffffffd8
   12304:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12308:	cmn	r0, #1
   1230c:	bne	12338 <__assert_fail@plt+0x1310>
   12310:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12314:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12318:	add	r0, r0, r1
   1231c:	ldrb	r0, [r0]
   12320:	cmp	r0, #0
   12324:	movw	r0, #0
   12328:	moveq	r0, #1
   1232c:	and	r0, r0, #1
   12330:	str	r0, [sp, #56]	; 0x38
   12334:	b	12354 <__assert_fail@plt+0x132c>
   12338:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1233c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12340:	cmp	r0, r1
   12344:	movw	r0, #0
   12348:	moveq	r0, #1
   1234c:	and	r0, r0, #1
   12350:	str	r0, [sp, #56]	; 0x38
   12354:	ldr	r0, [sp, #56]	; 0x38
   12358:	cmp	r0, #0
   1235c:	movw	r0, #0
   12360:	movne	r0, #1
   12364:	mvn	r1, #0
   12368:	eor	r0, r0, r1
   1236c:	tst	r0, #1
   12370:	beq	13560 <__assert_fail@plt+0x2538>
   12374:	movw	r0, #0
   12378:	strb	r0, [fp, #-65]	; 0xffffffbf
   1237c:	strb	r0, [fp, #-66]	; 0xffffffbe
   12380:	strb	r0, [fp, #-67]	; 0xffffffbd
   12384:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12388:	tst	r0, #1
   1238c:	beq	12438 <__assert_fail@plt+0x1410>
   12390:	ldr	r0, [fp, #8]
   12394:	cmp	r0, #2
   12398:	beq	12438 <__assert_fail@plt+0x1410>
   1239c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   123a0:	cmp	r0, #0
   123a4:	beq	12438 <__assert_fail@plt+0x1410>
   123a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   123ac:	ldr	r1, [fp, #-56]	; 0xffffffc8
   123b0:	add	r0, r0, r1
   123b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   123b8:	cmn	r1, #1
   123bc:	str	r0, [sp, #52]	; 0x34
   123c0:	bne	123e8 <__assert_fail@plt+0x13c0>
   123c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   123c8:	movw	r1, #1
   123cc:	cmp	r1, r0
   123d0:	bcs	123e8 <__assert_fail@plt+0x13c0>
   123d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   123d8:	bl	10f50 <strlen@plt>
   123dc:	str	r0, [fp, #-36]	; 0xffffffdc
   123e0:	str	r0, [sp, #48]	; 0x30
   123e4:	b	123f0 <__assert_fail@plt+0x13c8>
   123e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   123ec:	str	r0, [sp, #48]	; 0x30
   123f0:	ldr	r0, [sp, #48]	; 0x30
   123f4:	ldr	r1, [sp, #52]	; 0x34
   123f8:	cmp	r1, r0
   123fc:	bhi	12438 <__assert_fail@plt+0x1410>
   12400:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12404:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12408:	add	r0, r0, r1
   1240c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12410:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12414:	bl	10e54 <memcmp@plt>
   12418:	cmp	r0, #0
   1241c:	bne	12438 <__assert_fail@plt+0x1410>
   12420:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12424:	tst	r0, #1
   12428:	beq	12430 <__assert_fail@plt+0x1408>
   1242c:	b	136e0 <__assert_fail@plt+0x26b8>
   12430:	movw	r0, #1
   12434:	strb	r0, [fp, #-65]	; 0xffffffbf
   12438:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1243c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12440:	ldrb	r0, [r0, r1]
   12444:	strb	r0, [fp, #-63]	; 0xffffffc1
   12448:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1244c:	mov	r1, r0
   12450:	cmp	r0, #126	; 0x7e
   12454:	str	r1, [sp, #44]	; 0x2c
   12458:	bhi	12cc8 <__assert_fail@plt+0x1ca0>
   1245c:	add	r0, pc, #8
   12460:	ldr	r1, [sp, #44]	; 0x2c
   12464:	ldr	r0, [r0, r1, lsl #2]
   12468:	mov	pc, r0
   1246c:	andeq	r2, r1, r8, ror #12
   12470:	andeq	r2, r1, r8, asr #25
   12474:	andeq	r2, r1, r8, asr #25
   12478:	andeq	r2, r1, r8, asr #25
   1247c:	andeq	r2, r1, r8, asr #25
   12480:	andeq	r2, r1, r8, asr #25
   12484:	andeq	r2, r1, r8, asr #25
   12488:	andeq	r2, r1, r0, ror sl
   1248c:	andeq	r2, r1, ip, ror sl
   12490:	andeq	r2, r1, ip, lsr #21
   12494:	muleq	r1, r4, sl
   12498:			; <UNDEFINED> instruction: 0x00012ab8
   1249c:	andeq	r2, r1, r8, lsl #21
   124a0:	andeq	r2, r1, r0, lsr #21
   124a4:	andeq	r2, r1, r8, asr #25
   124a8:	andeq	r2, r1, r8, asr #25
   124ac:	andeq	r2, r1, r8, asr #25
   124b0:	andeq	r2, r1, r8, asr #25
   124b4:	andeq	r2, r1, r8, asr #25
   124b8:	andeq	r2, r1, r8, asr #25
   124bc:	andeq	r2, r1, r8, asr #25
   124c0:	andeq	r2, r1, r8, asr #25
   124c4:	andeq	r2, r1, r8, asr #25
   124c8:	andeq	r2, r1, r8, asr #25
   124cc:	andeq	r2, r1, r8, asr #25
   124d0:	andeq	r2, r1, r8, asr #25
   124d4:	andeq	r2, r1, r8, asr #25
   124d8:	andeq	r2, r1, r8, asr #25
   124dc:	andeq	r2, r1, r8, asr #25
   124e0:	andeq	r2, r1, r8, asr #25
   124e4:	andeq	r2, r1, r8, asr #25
   124e8:	andeq	r2, r1, r8, asr #25
   124ec:	muleq	r1, ip, fp
   124f0:	andeq	r2, r1, r4, lsr #23
   124f4:	andeq	r2, r1, r4, lsr #23
   124f8:	andeq	r2, r1, r8, lsl #23
   124fc:	andeq	r2, r1, r4, lsr #23
   12500:			; <UNDEFINED> instruction: 0x00012cbc
   12504:	andeq	r2, r1, r4, lsr #23
   12508:	andeq	r2, r1, r4, asr #23
   1250c:	andeq	r2, r1, r4, lsr #23
   12510:	andeq	r2, r1, r4, lsr #23
   12514:	andeq	r2, r1, r4, lsr #23
   12518:			; <UNDEFINED> instruction: 0x00012cbc
   1251c:			; <UNDEFINED> instruction: 0x00012cbc
   12520:			; <UNDEFINED> instruction: 0x00012cbc
   12524:			; <UNDEFINED> instruction: 0x00012cbc
   12528:			; <UNDEFINED> instruction: 0x00012cbc
   1252c:			; <UNDEFINED> instruction: 0x00012cbc
   12530:			; <UNDEFINED> instruction: 0x00012cbc
   12534:			; <UNDEFINED> instruction: 0x00012cbc
   12538:			; <UNDEFINED> instruction: 0x00012cbc
   1253c:			; <UNDEFINED> instruction: 0x00012cbc
   12540:			; <UNDEFINED> instruction: 0x00012cbc
   12544:			; <UNDEFINED> instruction: 0x00012cbc
   12548:			; <UNDEFINED> instruction: 0x00012cbc
   1254c:			; <UNDEFINED> instruction: 0x00012cbc
   12550:			; <UNDEFINED> instruction: 0x00012cbc
   12554:			; <UNDEFINED> instruction: 0x00012cbc
   12558:	andeq	r2, r1, r4, lsr #23
   1255c:	andeq	r2, r1, r4, lsr #23
   12560:	andeq	r2, r1, r4, lsr #23
   12564:	andeq	r2, r1, r4, lsr #23
   12568:	andeq	r2, r1, r4, ror r8
   1256c:	andeq	r2, r1, r8, asr #25
   12570:			; <UNDEFINED> instruction: 0x00012cbc
   12574:			; <UNDEFINED> instruction: 0x00012cbc
   12578:			; <UNDEFINED> instruction: 0x00012cbc
   1257c:			; <UNDEFINED> instruction: 0x00012cbc
   12580:			; <UNDEFINED> instruction: 0x00012cbc
   12584:			; <UNDEFINED> instruction: 0x00012cbc
   12588:			; <UNDEFINED> instruction: 0x00012cbc
   1258c:			; <UNDEFINED> instruction: 0x00012cbc
   12590:			; <UNDEFINED> instruction: 0x00012cbc
   12594:			; <UNDEFINED> instruction: 0x00012cbc
   12598:			; <UNDEFINED> instruction: 0x00012cbc
   1259c:			; <UNDEFINED> instruction: 0x00012cbc
   125a0:			; <UNDEFINED> instruction: 0x00012cbc
   125a4:			; <UNDEFINED> instruction: 0x00012cbc
   125a8:			; <UNDEFINED> instruction: 0x00012cbc
   125ac:			; <UNDEFINED> instruction: 0x00012cbc
   125b0:			; <UNDEFINED> instruction: 0x00012cbc
   125b4:			; <UNDEFINED> instruction: 0x00012cbc
   125b8:			; <UNDEFINED> instruction: 0x00012cbc
   125bc:			; <UNDEFINED> instruction: 0x00012cbc
   125c0:			; <UNDEFINED> instruction: 0x00012cbc
   125c4:			; <UNDEFINED> instruction: 0x00012cbc
   125c8:			; <UNDEFINED> instruction: 0x00012cbc
   125cc:			; <UNDEFINED> instruction: 0x00012cbc
   125d0:			; <UNDEFINED> instruction: 0x00012cbc
   125d4:			; <UNDEFINED> instruction: 0x00012cbc
   125d8:	andeq	r2, r1, r4, lsr #23
   125dc:	andeq	r2, r1, r4, asr #21
   125e0:			; <UNDEFINED> instruction: 0x00012cbc
   125e4:	andeq	r2, r1, r4, lsr #23
   125e8:			; <UNDEFINED> instruction: 0x00012cbc
   125ec:	andeq	r2, r1, r4, lsr #23
   125f0:			; <UNDEFINED> instruction: 0x00012cbc
   125f4:			; <UNDEFINED> instruction: 0x00012cbc
   125f8:			; <UNDEFINED> instruction: 0x00012cbc
   125fc:			; <UNDEFINED> instruction: 0x00012cbc
   12600:			; <UNDEFINED> instruction: 0x00012cbc
   12604:			; <UNDEFINED> instruction: 0x00012cbc
   12608:			; <UNDEFINED> instruction: 0x00012cbc
   1260c:			; <UNDEFINED> instruction: 0x00012cbc
   12610:			; <UNDEFINED> instruction: 0x00012cbc
   12614:			; <UNDEFINED> instruction: 0x00012cbc
   12618:			; <UNDEFINED> instruction: 0x00012cbc
   1261c:			; <UNDEFINED> instruction: 0x00012cbc
   12620:			; <UNDEFINED> instruction: 0x00012cbc
   12624:			; <UNDEFINED> instruction: 0x00012cbc
   12628:			; <UNDEFINED> instruction: 0x00012cbc
   1262c:			; <UNDEFINED> instruction: 0x00012cbc
   12630:			; <UNDEFINED> instruction: 0x00012cbc
   12634:			; <UNDEFINED> instruction: 0x00012cbc
   12638:			; <UNDEFINED> instruction: 0x00012cbc
   1263c:			; <UNDEFINED> instruction: 0x00012cbc
   12640:			; <UNDEFINED> instruction: 0x00012cbc
   12644:			; <UNDEFINED> instruction: 0x00012cbc
   12648:			; <UNDEFINED> instruction: 0x00012cbc
   1264c:			; <UNDEFINED> instruction: 0x00012cbc
   12650:			; <UNDEFINED> instruction: 0x00012cbc
   12654:			; <UNDEFINED> instruction: 0x00012cbc
   12658:	andeq	r2, r1, r4, asr fp
   1265c:	andeq	r2, r1, r4, lsr #23
   12660:	andeq	r2, r1, r4, asr fp
   12664:	andeq	r2, r1, r8, lsl #23
   12668:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1266c:	tst	r0, #1
   12670:	beq	12858 <__assert_fail@plt+0x1830>
   12674:	b	12678 <__assert_fail@plt+0x1650>
   12678:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1267c:	tst	r0, #1
   12680:	beq	12688 <__assert_fail@plt+0x1660>
   12684:	b	136e0 <__assert_fail@plt+0x26b8>
   12688:	movw	r0, #1
   1268c:	strb	r0, [fp, #-66]	; 0xffffffbe
   12690:	ldr	r0, [fp, #8]
   12694:	cmp	r0, #2
   12698:	bne	1274c <__assert_fail@plt+0x1724>
   1269c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   126a0:	tst	r0, #1
   126a4:	bne	1274c <__assert_fail@plt+0x1724>
   126a8:	b	126ac <__assert_fail@plt+0x1684>
   126ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   126b4:	cmp	r0, r1
   126b8:	bcs	126d0 <__assert_fail@plt+0x16a8>
   126bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   126c4:	add	r0, r0, r1
   126c8:	movw	r1, #39	; 0x27
   126cc:	strb	r1, [r0]
   126d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126d4:	add	r0, r0, #1
   126d8:	str	r0, [fp, #-44]	; 0xffffffd4
   126dc:	b	126e0 <__assert_fail@plt+0x16b8>
   126e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   126e8:	cmp	r0, r1
   126ec:	bcs	12704 <__assert_fail@plt+0x16dc>
   126f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   126f8:	add	r0, r0, r1
   126fc:	movw	r1, #36	; 0x24
   12700:	strb	r1, [r0]
   12704:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12708:	add	r0, r0, #1
   1270c:	str	r0, [fp, #-44]	; 0xffffffd4
   12710:	b	12714 <__assert_fail@plt+0x16ec>
   12714:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12718:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1271c:	cmp	r0, r1
   12720:	bcs	12738 <__assert_fail@plt+0x1710>
   12724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12728:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1272c:	add	r0, r0, r1
   12730:	movw	r1, #39	; 0x27
   12734:	strb	r1, [r0]
   12738:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1273c:	add	r0, r0, #1
   12740:	str	r0, [fp, #-44]	; 0xffffffd4
   12744:	movw	r0, #1
   12748:	strb	r0, [fp, #-60]	; 0xffffffc4
   1274c:	b	12750 <__assert_fail@plt+0x1728>
   12750:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12754:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12758:	cmp	r0, r1
   1275c:	bcs	12774 <__assert_fail@plt+0x174c>
   12760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12764:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12768:	add	r0, r0, r1
   1276c:	movw	r1, #92	; 0x5c
   12770:	strb	r1, [r0]
   12774:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12778:	add	r0, r0, #1
   1277c:	str	r0, [fp, #-44]	; 0xffffffd4
   12780:	b	12784 <__assert_fail@plt+0x175c>
   12784:	ldr	r0, [fp, #8]
   12788:	cmp	r0, #2
   1278c:	beq	1284c <__assert_fail@plt+0x1824>
   12790:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12794:	add	r0, r0, #1
   12798:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1279c:	cmp	r0, r1
   127a0:	bcs	1284c <__assert_fail@plt+0x1824>
   127a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127ac:	add	r1, r1, #1
   127b0:	add	r0, r0, r1
   127b4:	ldrb	r0, [r0]
   127b8:	movw	r1, #48	; 0x30
   127bc:	cmp	r1, r0
   127c0:	bgt	1284c <__assert_fail@plt+0x1824>
   127c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   127cc:	add	r1, r1, #1
   127d0:	add	r0, r0, r1
   127d4:	ldrb	r0, [r0]
   127d8:	cmp	r0, #57	; 0x39
   127dc:	bgt	1284c <__assert_fail@plt+0x1824>
   127e0:	b	127e4 <__assert_fail@plt+0x17bc>
   127e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   127e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   127ec:	cmp	r0, r1
   127f0:	bcs	12808 <__assert_fail@plt+0x17e0>
   127f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   127f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   127fc:	add	r0, r0, r1
   12800:	movw	r1, #48	; 0x30
   12804:	strb	r1, [r0]
   12808:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1280c:	add	r0, r0, #1
   12810:	str	r0, [fp, #-44]	; 0xffffffd4
   12814:	b	12818 <__assert_fail@plt+0x17f0>
   12818:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1281c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12820:	cmp	r0, r1
   12824:	bcs	1283c <__assert_fail@plt+0x1814>
   12828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1282c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12830:	add	r0, r0, r1
   12834:	movw	r1, #48	; 0x30
   12838:	strb	r1, [r0]
   1283c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12840:	add	r0, r0, #1
   12844:	str	r0, [fp, #-44]	; 0xffffffd4
   12848:	b	1284c <__assert_fail@plt+0x1824>
   1284c:	movw	r0, #48	; 0x30
   12850:	strb	r0, [fp, #-63]	; 0xffffffc1
   12854:	b	12870 <__assert_fail@plt+0x1848>
   12858:	ldr	r0, [fp, #12]
   1285c:	and	r0, r0, #1
   12860:	cmp	r0, #0
   12864:	beq	1286c <__assert_fail@plt+0x1844>
   12868:	b	13550 <__assert_fail@plt+0x2528>
   1286c:	b	12870 <__assert_fail@plt+0x1848>
   12870:	b	132ec <__assert_fail@plt+0x22c4>
   12874:	ldr	r0, [fp, #8]
   12878:	cmp	r0, #2
   1287c:	str	r0, [sp, #40]	; 0x28
   12880:	beq	12898 <__assert_fail@plt+0x1870>
   12884:	b	12888 <__assert_fail@plt+0x1860>
   12888:	ldr	r0, [sp, #40]	; 0x28
   1288c:	cmp	r0, #5
   12890:	beq	128ac <__assert_fail@plt+0x1884>
   12894:	b	12a68 <__assert_fail@plt+0x1a40>
   12898:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1289c:	tst	r0, #1
   128a0:	beq	128a8 <__assert_fail@plt+0x1880>
   128a4:	b	136e0 <__assert_fail@plt+0x26b8>
   128a8:	b	12a6c <__assert_fail@plt+0x1a44>
   128ac:	ldr	r0, [fp, #12]
   128b0:	and	r0, r0, #4
   128b4:	cmp	r0, #0
   128b8:	beq	12a64 <__assert_fail@plt+0x1a3c>
   128bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   128c0:	add	r0, r0, #2
   128c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   128c8:	cmp	r0, r1
   128cc:	bcs	12a64 <__assert_fail@plt+0x1a3c>
   128d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   128d8:	add	r1, r1, #1
   128dc:	add	r0, r0, r1
   128e0:	ldrb	r0, [r0]
   128e4:	cmp	r0, #63	; 0x3f
   128e8:	bne	12a64 <__assert_fail@plt+0x1a3c>
   128ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   128f4:	add	r0, r0, r1
   128f8:	ldrb	r0, [r0, #2]
   128fc:	mov	r1, r0
   12900:	cmp	r0, #33	; 0x21
   12904:	str	r1, [sp, #36]	; 0x24
   12908:	beq	12958 <__assert_fail@plt+0x1930>
   1290c:	b	12910 <__assert_fail@plt+0x18e8>
   12910:	ldr	r0, [sp, #36]	; 0x24
   12914:	sub	r1, r0, #39	; 0x27
   12918:	cmp	r1, #3
   1291c:	bcc	12958 <__assert_fail@plt+0x1930>
   12920:	b	12924 <__assert_fail@plt+0x18fc>
   12924:	ldr	r0, [sp, #36]	; 0x24
   12928:	cmp	r0, #45	; 0x2d
   1292c:	beq	12958 <__assert_fail@plt+0x1930>
   12930:	b	12934 <__assert_fail@plt+0x190c>
   12934:	ldr	r0, [sp, #36]	; 0x24
   12938:	cmp	r0, #47	; 0x2f
   1293c:	beq	12958 <__assert_fail@plt+0x1930>
   12940:	b	12944 <__assert_fail@plt+0x191c>
   12944:	ldr	r0, [sp, #36]	; 0x24
   12948:	sub	r1, r0, #60	; 0x3c
   1294c:	cmp	r1, #2
   12950:	bhi	12a5c <__assert_fail@plt+0x1a34>
   12954:	b	12958 <__assert_fail@plt+0x1930>
   12958:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1295c:	tst	r0, #1
   12960:	beq	12968 <__assert_fail@plt+0x1940>
   12964:	b	136e0 <__assert_fail@plt+0x26b8>
   12968:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1296c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12970:	add	r1, r1, #2
   12974:	add	r0, r0, r1
   12978:	ldrb	r0, [r0]
   1297c:	strb	r0, [fp, #-63]	; 0xffffffc1
   12980:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12984:	add	r0, r0, #2
   12988:	str	r0, [fp, #-40]	; 0xffffffd8
   1298c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12990:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12994:	cmp	r0, r1
   12998:	bcs	129b0 <__assert_fail@plt+0x1988>
   1299c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129a4:	add	r0, r0, r1
   129a8:	movw	r1, #63	; 0x3f
   129ac:	strb	r1, [r0]
   129b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129b4:	add	r0, r0, #1
   129b8:	str	r0, [fp, #-44]	; 0xffffffd4
   129bc:	b	129c0 <__assert_fail@plt+0x1998>
   129c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129c8:	cmp	r0, r1
   129cc:	bcs	129e4 <__assert_fail@plt+0x19bc>
   129d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   129d8:	add	r0, r0, r1
   129dc:	movw	r1, #34	; 0x22
   129e0:	strb	r1, [r0]
   129e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129e8:	add	r0, r0, #1
   129ec:	str	r0, [fp, #-44]	; 0xffffffd4
   129f0:	b	129f4 <__assert_fail@plt+0x19cc>
   129f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129fc:	cmp	r0, r1
   12a00:	bcs	12a18 <__assert_fail@plt+0x19f0>
   12a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a0c:	add	r0, r0, r1
   12a10:	movw	r1, #34	; 0x22
   12a14:	strb	r1, [r0]
   12a18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a1c:	add	r0, r0, #1
   12a20:	str	r0, [fp, #-44]	; 0xffffffd4
   12a24:	b	12a28 <__assert_fail@plt+0x1a00>
   12a28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a30:	cmp	r0, r1
   12a34:	bcs	12a4c <__assert_fail@plt+0x1a24>
   12a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a40:	add	r0, r0, r1
   12a44:	movw	r1, #63	; 0x3f
   12a48:	strb	r1, [r0]
   12a4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a50:	add	r0, r0, #1
   12a54:	str	r0, [fp, #-44]	; 0xffffffd4
   12a58:	b	12a60 <__assert_fail@plt+0x1a38>
   12a5c:	b	12a60 <__assert_fail@plt+0x1a38>
   12a60:	b	12a64 <__assert_fail@plt+0x1a3c>
   12a64:	b	12a6c <__assert_fail@plt+0x1a44>
   12a68:	b	12a6c <__assert_fail@plt+0x1a44>
   12a6c:	b	132ec <__assert_fail@plt+0x22c4>
   12a70:	movw	r0, #97	; 0x61
   12a74:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a78:	b	12b38 <__assert_fail@plt+0x1b10>
   12a7c:	movw	r0, #98	; 0x62
   12a80:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a84:	b	12b38 <__assert_fail@plt+0x1b10>
   12a88:	movw	r0, #102	; 0x66
   12a8c:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a90:	b	12b38 <__assert_fail@plt+0x1b10>
   12a94:	movw	r0, #110	; 0x6e
   12a98:	strb	r0, [fp, #-64]	; 0xffffffc0
   12a9c:	b	12b18 <__assert_fail@plt+0x1af0>
   12aa0:	movw	r0, #114	; 0x72
   12aa4:	strb	r0, [fp, #-64]	; 0xffffffc0
   12aa8:	b	12b18 <__assert_fail@plt+0x1af0>
   12aac:	movw	r0, #116	; 0x74
   12ab0:	strb	r0, [fp, #-64]	; 0xffffffc0
   12ab4:	b	12b18 <__assert_fail@plt+0x1af0>
   12ab8:	movw	r0, #118	; 0x76
   12abc:	strb	r0, [fp, #-64]	; 0xffffffc0
   12ac0:	b	12b38 <__assert_fail@plt+0x1b10>
   12ac4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12ac8:	strb	r0, [fp, #-64]	; 0xffffffc0
   12acc:	ldr	r0, [fp, #8]
   12ad0:	cmp	r0, #2
   12ad4:	bne	12aec <__assert_fail@plt+0x1ac4>
   12ad8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12adc:	tst	r0, #1
   12ae0:	beq	12ae8 <__assert_fail@plt+0x1ac0>
   12ae4:	b	136e0 <__assert_fail@plt+0x26b8>
   12ae8:	b	13474 <__assert_fail@plt+0x244c>
   12aec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12af0:	tst	r0, #1
   12af4:	beq	12b14 <__assert_fail@plt+0x1aec>
   12af8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12afc:	tst	r0, #1
   12b00:	beq	12b14 <__assert_fail@plt+0x1aec>
   12b04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12b08:	cmp	r0, #0
   12b0c:	beq	12b14 <__assert_fail@plt+0x1aec>
   12b10:	b	13474 <__assert_fail@plt+0x244c>
   12b14:	b	12b18 <__assert_fail@plt+0x1af0>
   12b18:	ldr	r0, [fp, #8]
   12b1c:	cmp	r0, #2
   12b20:	bne	12b34 <__assert_fail@plt+0x1b0c>
   12b24:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12b28:	tst	r0, #1
   12b2c:	beq	12b34 <__assert_fail@plt+0x1b0c>
   12b30:	b	136e0 <__assert_fail@plt+0x26b8>
   12b34:	b	12b38 <__assert_fail@plt+0x1b10>
   12b38:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12b3c:	tst	r0, #1
   12b40:	beq	12b50 <__assert_fail@plt+0x1b28>
   12b44:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   12b48:	strb	r0, [fp, #-63]	; 0xffffffc1
   12b4c:	b	13360 <__assert_fail@plt+0x2338>
   12b50:	b	132ec <__assert_fail@plt+0x22c4>
   12b54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b58:	cmn	r0, #1
   12b5c:	bne	12b74 <__assert_fail@plt+0x1b4c>
   12b60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b64:	ldrb	r0, [r0, #1]
   12b68:	cmp	r0, #0
   12b6c:	beq	12b84 <__assert_fail@plt+0x1b5c>
   12b70:	b	12b80 <__assert_fail@plt+0x1b58>
   12b74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12b78:	cmp	r0, #1
   12b7c:	beq	12b84 <__assert_fail@plt+0x1b5c>
   12b80:	b	132ec <__assert_fail@plt+0x22c4>
   12b84:	b	12b88 <__assert_fail@plt+0x1b60>
   12b88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12b8c:	cmp	r0, #0
   12b90:	beq	12b98 <__assert_fail@plt+0x1b70>
   12b94:	b	132ec <__assert_fail@plt+0x22c4>
   12b98:	b	12b9c <__assert_fail@plt+0x1b74>
   12b9c:	movw	r0, #1
   12ba0:	strb	r0, [fp, #-67]	; 0xffffffbd
   12ba4:	ldr	r0, [fp, #8]
   12ba8:	cmp	r0, #2
   12bac:	bne	12bc0 <__assert_fail@plt+0x1b98>
   12bb0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12bb4:	tst	r0, #1
   12bb8:	beq	12bc0 <__assert_fail@plt+0x1b98>
   12bbc:	b	136e0 <__assert_fail@plt+0x26b8>
   12bc0:	b	132ec <__assert_fail@plt+0x22c4>
   12bc4:	movw	r0, #1
   12bc8:	strb	r0, [fp, #-61]	; 0xffffffc3
   12bcc:	strb	r0, [fp, #-67]	; 0xffffffbd
   12bd0:	ldr	r0, [fp, #8]
   12bd4:	cmp	r0, #2
   12bd8:	bne	12cb8 <__assert_fail@plt+0x1c90>
   12bdc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12be0:	tst	r0, #1
   12be4:	beq	12bec <__assert_fail@plt+0x1bc4>
   12be8:	b	136e0 <__assert_fail@plt+0x26b8>
   12bec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12bf0:	cmp	r0, #0
   12bf4:	beq	12c14 <__assert_fail@plt+0x1bec>
   12bf8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12bfc:	cmp	r0, #0
   12c00:	bne	12c14 <__assert_fail@plt+0x1bec>
   12c04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12c08:	str	r0, [fp, #-48]	; 0xffffffd0
   12c0c:	movw	r0, #0
   12c10:	str	r0, [fp, #-28]	; 0xffffffe4
   12c14:	b	12c18 <__assert_fail@plt+0x1bf0>
   12c18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c20:	cmp	r0, r1
   12c24:	bcs	12c3c <__assert_fail@plt+0x1c14>
   12c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c30:	add	r0, r0, r1
   12c34:	movw	r1, #39	; 0x27
   12c38:	strb	r1, [r0]
   12c3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c40:	add	r0, r0, #1
   12c44:	str	r0, [fp, #-44]	; 0xffffffd4
   12c48:	b	12c4c <__assert_fail@plt+0x1c24>
   12c4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c54:	cmp	r0, r1
   12c58:	bcs	12c70 <__assert_fail@plt+0x1c48>
   12c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c64:	add	r0, r0, r1
   12c68:	movw	r1, #92	; 0x5c
   12c6c:	strb	r1, [r0]
   12c70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c74:	add	r0, r0, #1
   12c78:	str	r0, [fp, #-44]	; 0xffffffd4
   12c7c:	b	12c80 <__assert_fail@plt+0x1c58>
   12c80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c88:	cmp	r0, r1
   12c8c:	bcs	12ca4 <__assert_fail@plt+0x1c7c>
   12c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c98:	add	r0, r0, r1
   12c9c:	movw	r1, #39	; 0x27
   12ca0:	strb	r1, [r0]
   12ca4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ca8:	add	r0, r0, #1
   12cac:	str	r0, [fp, #-44]	; 0xffffffd4
   12cb0:	movw	r0, #0
   12cb4:	strb	r0, [fp, #-60]	; 0xffffffc4
   12cb8:	b	132ec <__assert_fail@plt+0x22c4>
   12cbc:	movw	r0, #1
   12cc0:	strb	r0, [fp, #-67]	; 0xffffffbd
   12cc4:	b	132ec <__assert_fail@plt+0x22c4>
   12cc8:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   12ccc:	tst	r0, #1
   12cd0:	beq	12d14 <__assert_fail@plt+0x1cec>
   12cd4:	mov	r0, #1
   12cd8:	str	r0, [fp, #-72]	; 0xffffffb8
   12cdc:	bl	10f20 <__ctype_b_loc@plt>
   12ce0:	ldr	r0, [r0]
   12ce4:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   12ce8:	mov	r1, lr
   12cec:	add	r0, r0, lr, lsl #1
   12cf0:	ldrh	r0, [r0]
   12cf4:	and	r0, r0, #16384	; 0x4000
   12cf8:	cmp	r0, #0
   12cfc:	movw	r0, #0
   12d00:	movne	r0, #1
   12d04:	and	r0, r0, #1
   12d08:	strb	r0, [fp, #-73]	; 0xffffffb7
   12d0c:	str	r1, [sp, #32]
   12d10:	b	12fa0 <__assert_fail@plt+0x1f78>
   12d14:	sub	r0, fp, #84	; 0x54
   12d18:	movw	r1, #0
   12d1c:	and	r1, r1, #255	; 0xff
   12d20:	movw	r2, #8
   12d24:	bl	10f8c <memset@plt>
   12d28:	movw	r0, #0
   12d2c:	str	r0, [fp, #-72]	; 0xffffffb8
   12d30:	movw	r0, #1
   12d34:	strb	r0, [fp, #-73]	; 0xffffffb7
   12d38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d3c:	cmn	r0, #1
   12d40:	bne	12d50 <__assert_fail@plt+0x1d28>
   12d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d48:	bl	10f50 <strlen@plt>
   12d4c:	str	r0, [fp, #-36]	; 0xffffffdc
   12d50:	b	12d54 <__assert_fail@plt+0x1d2c>
   12d54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d58:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d5c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12d60:	add	r1, r1, r2
   12d64:	add	r1, r0, r1
   12d68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12d70:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12d74:	add	r2, r2, r3
   12d78:	sub	r2, r0, r2
   12d7c:	sub	r0, fp, #88	; 0x58
   12d80:	sub	r3, fp, #84	; 0x54
   12d84:	bl	1ad80 <__assert_fail@plt+0x9d58>
   12d88:	str	r0, [sp, #92]	; 0x5c
   12d8c:	ldr	r0, [sp, #92]	; 0x5c
   12d90:	cmp	r0, #0
   12d94:	bne	12d9c <__assert_fail@plt+0x1d74>
   12d98:	b	12f9c <__assert_fail@plt+0x1f74>
   12d9c:	ldr	r0, [sp, #92]	; 0x5c
   12da0:	cmn	r0, #1
   12da4:	bne	12db4 <__assert_fail@plt+0x1d8c>
   12da8:	movw	r0, #0
   12dac:	strb	r0, [fp, #-73]	; 0xffffffb7
   12db0:	b	12f9c <__assert_fail@plt+0x1f74>
   12db4:	ldr	r0, [sp, #92]	; 0x5c
   12db8:	cmn	r0, #2
   12dbc:	bne	12e30 <__assert_fail@plt+0x1e08>
   12dc0:	movw	r0, #0
   12dc4:	strb	r0, [fp, #-73]	; 0xffffffb7
   12dc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12dcc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12dd0:	add	r0, r0, r1
   12dd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12dd8:	cmp	r0, r1
   12ddc:	movw	r0, #0
   12de0:	str	r0, [sp, #28]
   12de4:	bcs	12e10 <__assert_fail@plt+0x1de8>
   12de8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12df0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12df4:	add	r1, r1, r2
   12df8:	add	r0, r0, r1
   12dfc:	ldrb	r0, [r0]
   12e00:	cmp	r0, #0
   12e04:	movw	r0, #0
   12e08:	movne	r0, #1
   12e0c:	str	r0, [sp, #28]
   12e10:	ldr	r0, [sp, #28]
   12e14:	tst	r0, #1
   12e18:	beq	12e2c <__assert_fail@plt+0x1e04>
   12e1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12e20:	add	r0, r0, #1
   12e24:	str	r0, [fp, #-72]	; 0xffffffb8
   12e28:	b	12dc8 <__assert_fail@plt+0x1da0>
   12e2c:	b	12f9c <__assert_fail@plt+0x1f74>
   12e30:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12e34:	tst	r0, #1
   12e38:	beq	12f44 <__assert_fail@plt+0x1f1c>
   12e3c:	ldr	r0, [fp, #8]
   12e40:	cmp	r0, #2
   12e44:	bne	12f44 <__assert_fail@plt+0x1f1c>
   12e48:	movw	r0, #1
   12e4c:	str	r0, [sp, #88]	; 0x58
   12e50:	ldr	r0, [sp, #88]	; 0x58
   12e54:	ldr	r1, [sp, #92]	; 0x5c
   12e58:	cmp	r0, r1
   12e5c:	bcs	12f40 <__assert_fail@plt+0x1f18>
   12e60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e68:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12e6c:	add	r1, r1, r2
   12e70:	ldr	r2, [sp, #88]	; 0x58
   12e74:	add	r1, r1, r2
   12e78:	ldrb	r0, [r0, r1]
   12e7c:	sub	r0, r0, #91	; 0x5b
   12e80:	cmp	r0, #33	; 0x21
   12e84:	str	r0, [sp, #24]
   12e88:	bhi	12f28 <__assert_fail@plt+0x1f00>
   12e8c:	add	r0, pc, #8
   12e90:	ldr	r1, [sp, #24]
   12e94:	ldr	r0, [r0, r1, lsl #2]
   12e98:	mov	pc, r0
   12e9c:	andeq	r2, r1, r4, lsr #30
   12ea0:	andeq	r2, r1, r4, lsr #30
   12ea4:	andeq	r2, r1, r8, lsr #30
   12ea8:	andeq	r2, r1, r4, lsr #30
   12eac:	andeq	r2, r1, r8, lsr #30
   12eb0:	andeq	r2, r1, r4, lsr #30
   12eb4:	andeq	r2, r1, r8, lsr #30
   12eb8:	andeq	r2, r1, r8, lsr #30
   12ebc:	andeq	r2, r1, r8, lsr #30
   12ec0:	andeq	r2, r1, r8, lsr #30
   12ec4:	andeq	r2, r1, r8, lsr #30
   12ec8:	andeq	r2, r1, r8, lsr #30
   12ecc:	andeq	r2, r1, r8, lsr #30
   12ed0:	andeq	r2, r1, r8, lsr #30
   12ed4:	andeq	r2, r1, r8, lsr #30
   12ed8:	andeq	r2, r1, r8, lsr #30
   12edc:	andeq	r2, r1, r8, lsr #30
   12ee0:	andeq	r2, r1, r8, lsr #30
   12ee4:	andeq	r2, r1, r8, lsr #30
   12ee8:	andeq	r2, r1, r8, lsr #30
   12eec:	andeq	r2, r1, r8, lsr #30
   12ef0:	andeq	r2, r1, r8, lsr #30
   12ef4:	andeq	r2, r1, r8, lsr #30
   12ef8:	andeq	r2, r1, r8, lsr #30
   12efc:	andeq	r2, r1, r8, lsr #30
   12f00:	andeq	r2, r1, r8, lsr #30
   12f04:	andeq	r2, r1, r8, lsr #30
   12f08:	andeq	r2, r1, r8, lsr #30
   12f0c:	andeq	r2, r1, r8, lsr #30
   12f10:	andeq	r2, r1, r8, lsr #30
   12f14:	andeq	r2, r1, r8, lsr #30
   12f18:	andeq	r2, r1, r8, lsr #30
   12f1c:	andeq	r2, r1, r8, lsr #30
   12f20:	andeq	r2, r1, r4, lsr #30
   12f24:	b	136e0 <__assert_fail@plt+0x26b8>
   12f28:	b	12f2c <__assert_fail@plt+0x1f04>
   12f2c:	b	12f30 <__assert_fail@plt+0x1f08>
   12f30:	ldr	r0, [sp, #88]	; 0x58
   12f34:	add	r0, r0, #1
   12f38:	str	r0, [sp, #88]	; 0x58
   12f3c:	b	12e50 <__assert_fail@plt+0x1e28>
   12f40:	b	12f44 <__assert_fail@plt+0x1f1c>
   12f44:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12f48:	bl	10e84 <iswprint@plt>
   12f4c:	cmp	r0, #0
   12f50:	bne	12f5c <__assert_fail@plt+0x1f34>
   12f54:	movw	r0, #0
   12f58:	strb	r0, [fp, #-73]	; 0xffffffb7
   12f5c:	ldr	r0, [sp, #92]	; 0x5c
   12f60:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12f64:	add	r0, r1, r0
   12f68:	str	r0, [fp, #-72]	; 0xffffffb8
   12f6c:	b	12f70 <__assert_fail@plt+0x1f48>
   12f70:	b	12f74 <__assert_fail@plt+0x1f4c>
   12f74:	b	12f78 <__assert_fail@plt+0x1f50>
   12f78:	sub	r0, fp, #84	; 0x54
   12f7c:	bl	10e3c <mbsinit@plt>
   12f80:	cmp	r0, #0
   12f84:	movw	r0, #0
   12f88:	movne	r0, #1
   12f8c:	mvn	lr, #0
   12f90:	eor	r0, r0, lr
   12f94:	tst	r0, #1
   12f98:	bne	12d54 <__assert_fail@plt+0x1d2c>
   12f9c:	b	12fa0 <__assert_fail@plt+0x1f78>
   12fa0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12fa4:	and	r0, r0, #1
   12fa8:	strb	r0, [fp, #-67]	; 0xffffffbd
   12fac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12fb0:	movw	r1, #1
   12fb4:	cmp	r1, r0
   12fb8:	bcc	12fd4 <__assert_fail@plt+0x1fac>
   12fbc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12fc0:	tst	r0, #1
   12fc4:	beq	132e8 <__assert_fail@plt+0x22c0>
   12fc8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12fcc:	tst	r0, #1
   12fd0:	bne	132e8 <__assert_fail@plt+0x22c0>
   12fd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fd8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12fdc:	add	r0, r0, r1
   12fe0:	str	r0, [sp, #84]	; 0x54
   12fe4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12fe8:	tst	r0, #1
   12fec:	beq	1319c <__assert_fail@plt+0x2174>
   12ff0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   12ff4:	tst	r0, #1
   12ff8:	bne	1319c <__assert_fail@plt+0x2174>
   12ffc:	b	13000 <__assert_fail@plt+0x1fd8>
   13000:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13004:	tst	r0, #1
   13008:	beq	13010 <__assert_fail@plt+0x1fe8>
   1300c:	b	136e0 <__assert_fail@plt+0x26b8>
   13010:	movw	r0, #1
   13014:	strb	r0, [fp, #-66]	; 0xffffffbe
   13018:	ldr	r0, [fp, #8]
   1301c:	cmp	r0, #2
   13020:	bne	130d4 <__assert_fail@plt+0x20ac>
   13024:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13028:	tst	r0, #1
   1302c:	bne	130d4 <__assert_fail@plt+0x20ac>
   13030:	b	13034 <__assert_fail@plt+0x200c>
   13034:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13038:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1303c:	cmp	r0, r1
   13040:	bcs	13058 <__assert_fail@plt+0x2030>
   13044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13048:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1304c:	add	r0, r0, r1
   13050:	movw	r1, #39	; 0x27
   13054:	strb	r1, [r0]
   13058:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1305c:	add	r0, r0, #1
   13060:	str	r0, [fp, #-44]	; 0xffffffd4
   13064:	b	13068 <__assert_fail@plt+0x2040>
   13068:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1306c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13070:	cmp	r0, r1
   13074:	bcs	1308c <__assert_fail@plt+0x2064>
   13078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1307c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13080:	add	r0, r0, r1
   13084:	movw	r1, #36	; 0x24
   13088:	strb	r1, [r0]
   1308c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13090:	add	r0, r0, #1
   13094:	str	r0, [fp, #-44]	; 0xffffffd4
   13098:	b	1309c <__assert_fail@plt+0x2074>
   1309c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130a4:	cmp	r0, r1
   130a8:	bcs	130c0 <__assert_fail@plt+0x2098>
   130ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130b4:	add	r0, r0, r1
   130b8:	movw	r1, #39	; 0x27
   130bc:	strb	r1, [r0]
   130c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130c4:	add	r0, r0, #1
   130c8:	str	r0, [fp, #-44]	; 0xffffffd4
   130cc:	movw	r0, #1
   130d0:	strb	r0, [fp, #-60]	; 0xffffffc4
   130d4:	b	130d8 <__assert_fail@plt+0x20b0>
   130d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   130dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   130e0:	cmp	r0, r1
   130e4:	bcs	130fc <__assert_fail@plt+0x20d4>
   130e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   130f0:	add	r0, r0, r1
   130f4:	movw	r1, #92	; 0x5c
   130f8:	strb	r1, [r0]
   130fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13100:	add	r0, r0, #1
   13104:	str	r0, [fp, #-44]	; 0xffffffd4
   13108:	b	1310c <__assert_fail@plt+0x20e4>
   1310c:	b	13110 <__assert_fail@plt+0x20e8>
   13110:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13114:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13118:	cmp	r0, r1
   1311c:	bcs	1313c <__assert_fail@plt+0x2114>
   13120:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13124:	asr	r0, r0, #6
   13128:	add	r0, r0, #48	; 0x30
   1312c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13130:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13134:	add	r1, r1, r2
   13138:	strb	r0, [r1]
   1313c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13140:	add	r0, r0, #1
   13144:	str	r0, [fp, #-44]	; 0xffffffd4
   13148:	b	1314c <__assert_fail@plt+0x2124>
   1314c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13150:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13154:	cmp	r0, r1
   13158:	bcs	1317c <__assert_fail@plt+0x2154>
   1315c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13160:	asr	r0, r0, #3
   13164:	and	r0, r0, #7
   13168:	add	r0, r0, #48	; 0x30
   1316c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13170:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13174:	add	r1, r1, r2
   13178:	strb	r0, [r1]
   1317c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13180:	add	r0, r0, #1
   13184:	str	r0, [fp, #-44]	; 0xffffffd4
   13188:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1318c:	and	r0, r0, #7
   13190:	add	r0, r0, #48	; 0x30
   13194:	strb	r0, [fp, #-63]	; 0xffffffc1
   13198:	b	131e8 <__assert_fail@plt+0x21c0>
   1319c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   131a0:	tst	r0, #1
   131a4:	beq	131e4 <__assert_fail@plt+0x21bc>
   131a8:	b	131ac <__assert_fail@plt+0x2184>
   131ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   131b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   131b4:	cmp	r0, r1
   131b8:	bcs	131d0 <__assert_fail@plt+0x21a8>
   131bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   131c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   131c4:	add	r0, r0, r1
   131c8:	movw	r1, #92	; 0x5c
   131cc:	strb	r1, [r0]
   131d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   131d4:	add	r0, r0, #1
   131d8:	str	r0, [fp, #-44]	; 0xffffffd4
   131dc:	movw	r0, #0
   131e0:	strb	r0, [fp, #-65]	; 0xffffffbf
   131e4:	b	131e8 <__assert_fail@plt+0x21c0>
   131e8:	ldr	r0, [sp, #84]	; 0x54
   131ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   131f0:	add	r1, r1, #1
   131f4:	cmp	r0, r1
   131f8:	bhi	13200 <__assert_fail@plt+0x21d8>
   131fc:	b	132e4 <__assert_fail@plt+0x22bc>
   13200:	b	13204 <__assert_fail@plt+0x21dc>
   13204:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13208:	tst	r0, #1
   1320c:	beq	1328c <__assert_fail@plt+0x2264>
   13210:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13214:	tst	r0, #1
   13218:	bne	1328c <__assert_fail@plt+0x2264>
   1321c:	b	13220 <__assert_fail@plt+0x21f8>
   13220:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13224:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13228:	cmp	r0, r1
   1322c:	bcs	13244 <__assert_fail@plt+0x221c>
   13230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13234:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13238:	add	r0, r0, r1
   1323c:	movw	r1, #39	; 0x27
   13240:	strb	r1, [r0]
   13244:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13248:	add	r0, r0, #1
   1324c:	str	r0, [fp, #-44]	; 0xffffffd4
   13250:	b	13254 <__assert_fail@plt+0x222c>
   13254:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13258:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1325c:	cmp	r0, r1
   13260:	bcs	13278 <__assert_fail@plt+0x2250>
   13264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13268:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1326c:	add	r0, r0, r1
   13270:	movw	r1, #39	; 0x27
   13274:	strb	r1, [r0]
   13278:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1327c:	add	r0, r0, #1
   13280:	str	r0, [fp, #-44]	; 0xffffffd4
   13284:	movw	r0, #0
   13288:	strb	r0, [fp, #-60]	; 0xffffffc4
   1328c:	b	13290 <__assert_fail@plt+0x2268>
   13290:	b	13294 <__assert_fail@plt+0x226c>
   13294:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13298:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1329c:	cmp	r0, r1
   132a0:	bcs	132b8 <__assert_fail@plt+0x2290>
   132a4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   132a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   132ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   132b0:	add	r1, r1, r2
   132b4:	strb	r0, [r1]
   132b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132bc:	add	r0, r0, #1
   132c0:	str	r0, [fp, #-44]	; 0xffffffd4
   132c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   132cc:	add	r1, r1, #1
   132d0:	str	r1, [fp, #-40]	; 0xffffffd8
   132d4:	add	r0, r0, r1
   132d8:	ldrb	r0, [r0]
   132dc:	strb	r0, [fp, #-63]	; 0xffffffc1
   132e0:	b	12fe4 <__assert_fail@plt+0x1fbc>
   132e4:	b	13474 <__assert_fail@plt+0x244c>
   132e8:	b	132ec <__assert_fail@plt+0x22c4>
   132ec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   132f0:	tst	r0, #1
   132f4:	beq	13304 <__assert_fail@plt+0x22dc>
   132f8:	ldr	r0, [fp, #8]
   132fc:	cmp	r0, #2
   13300:	bne	13310 <__assert_fail@plt+0x22e8>
   13304:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13308:	tst	r0, #1
   1330c:	beq	1334c <__assert_fail@plt+0x2324>
   13310:	ldr	r0, [fp, #16]
   13314:	movw	r1, #0
   13318:	cmp	r0, r1
   1331c:	beq	1334c <__assert_fail@plt+0x2324>
   13320:	ldr	r0, [fp, #16]
   13324:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13328:	lsr	r1, r1, #5
   1332c:	add	r0, r0, r1, lsl #2
   13330:	ldr	r0, [r0]
   13334:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13338:	and	r1, r1, #31
   1333c:	lsr	r0, r0, r1
   13340:	and	r0, r0, #1
   13344:	cmp	r0, #0
   13348:	bne	1335c <__assert_fail@plt+0x2334>
   1334c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13350:	tst	r0, #1
   13354:	bne	1335c <__assert_fail@plt+0x2334>
   13358:	b	13474 <__assert_fail@plt+0x244c>
   1335c:	b	13360 <__assert_fail@plt+0x2338>
   13360:	b	13364 <__assert_fail@plt+0x233c>
   13364:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13368:	tst	r0, #1
   1336c:	beq	13374 <__assert_fail@plt+0x234c>
   13370:	b	136e0 <__assert_fail@plt+0x26b8>
   13374:	movw	r0, #1
   13378:	strb	r0, [fp, #-66]	; 0xffffffbe
   1337c:	ldr	r0, [fp, #8]
   13380:	cmp	r0, #2
   13384:	bne	13438 <__assert_fail@plt+0x2410>
   13388:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1338c:	tst	r0, #1
   13390:	bne	13438 <__assert_fail@plt+0x2410>
   13394:	b	13398 <__assert_fail@plt+0x2370>
   13398:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1339c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133a0:	cmp	r0, r1
   133a4:	bcs	133bc <__assert_fail@plt+0x2394>
   133a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133b0:	add	r0, r0, r1
   133b4:	movw	r1, #39	; 0x27
   133b8:	strb	r1, [r0]
   133bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133c0:	add	r0, r0, #1
   133c4:	str	r0, [fp, #-44]	; 0xffffffd4
   133c8:	b	133cc <__assert_fail@plt+0x23a4>
   133cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133d4:	cmp	r0, r1
   133d8:	bcs	133f0 <__assert_fail@plt+0x23c8>
   133dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133e4:	add	r0, r0, r1
   133e8:	movw	r1, #36	; 0x24
   133ec:	strb	r1, [r0]
   133f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133f4:	add	r0, r0, #1
   133f8:	str	r0, [fp, #-44]	; 0xffffffd4
   133fc:	b	13400 <__assert_fail@plt+0x23d8>
   13400:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13404:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13408:	cmp	r0, r1
   1340c:	bcs	13424 <__assert_fail@plt+0x23fc>
   13410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13414:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13418:	add	r0, r0, r1
   1341c:	movw	r1, #39	; 0x27
   13420:	strb	r1, [r0]
   13424:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13428:	add	r0, r0, #1
   1342c:	str	r0, [fp, #-44]	; 0xffffffd4
   13430:	movw	r0, #1
   13434:	strb	r0, [fp, #-60]	; 0xffffffc4
   13438:	b	1343c <__assert_fail@plt+0x2414>
   1343c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13440:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13444:	cmp	r0, r1
   13448:	bcs	13460 <__assert_fail@plt+0x2438>
   1344c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13450:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13454:	add	r0, r0, r1
   13458:	movw	r1, #92	; 0x5c
   1345c:	strb	r1, [r0]
   13460:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13464:	add	r0, r0, #1
   13468:	str	r0, [fp, #-44]	; 0xffffffd4
   1346c:	b	13470 <__assert_fail@plt+0x2448>
   13470:	b	13474 <__assert_fail@plt+0x244c>
   13474:	b	13478 <__assert_fail@plt+0x2450>
   13478:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1347c:	tst	r0, #1
   13480:	beq	13500 <__assert_fail@plt+0x24d8>
   13484:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13488:	tst	r0, #1
   1348c:	bne	13500 <__assert_fail@plt+0x24d8>
   13490:	b	13494 <__assert_fail@plt+0x246c>
   13494:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13498:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1349c:	cmp	r0, r1
   134a0:	bcs	134b8 <__assert_fail@plt+0x2490>
   134a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   134ac:	add	r0, r0, r1
   134b0:	movw	r1, #39	; 0x27
   134b4:	strb	r1, [r0]
   134b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134bc:	add	r0, r0, #1
   134c0:	str	r0, [fp, #-44]	; 0xffffffd4
   134c4:	b	134c8 <__assert_fail@plt+0x24a0>
   134c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134d0:	cmp	r0, r1
   134d4:	bcs	134ec <__assert_fail@plt+0x24c4>
   134d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   134e0:	add	r0, r0, r1
   134e4:	movw	r1, #39	; 0x27
   134e8:	strb	r1, [r0]
   134ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134f0:	add	r0, r0, #1
   134f4:	str	r0, [fp, #-44]	; 0xffffffd4
   134f8:	movw	r0, #0
   134fc:	strb	r0, [fp, #-60]	; 0xffffffc4
   13500:	b	13504 <__assert_fail@plt+0x24dc>
   13504:	b	13508 <__assert_fail@plt+0x24e0>
   13508:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1350c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13510:	cmp	r0, r1
   13514:	bcs	1352c <__assert_fail@plt+0x2504>
   13518:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1351c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13520:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13524:	add	r1, r1, r2
   13528:	strb	r0, [r1]
   1352c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13530:	add	r0, r0, #1
   13534:	str	r0, [fp, #-44]	; 0xffffffd4
   13538:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1353c:	tst	r0, #1
   13540:	bne	1354c <__assert_fail@plt+0x2524>
   13544:	movw	r0, #0
   13548:	strb	r0, [fp, #-62]	; 0xffffffc2
   1354c:	b	13550 <__assert_fail@plt+0x2528>
   13550:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13554:	add	r0, r0, #1
   13558:	str	r0, [fp, #-40]	; 0xffffffd8
   1355c:	b	12304 <__assert_fail@plt+0x12dc>
   13560:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13564:	cmp	r0, #0
   13568:	bne	13588 <__assert_fail@plt+0x2560>
   1356c:	ldr	r0, [fp, #8]
   13570:	cmp	r0, #2
   13574:	bne	13588 <__assert_fail@plt+0x2560>
   13578:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1357c:	tst	r0, #1
   13580:	beq	13588 <__assert_fail@plt+0x2560>
   13584:	b	136e0 <__assert_fail@plt+0x26b8>
   13588:	ldr	r0, [fp, #8]
   1358c:	cmp	r0, #2
   13590:	bne	13630 <__assert_fail@plt+0x2608>
   13594:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13598:	tst	r0, #1
   1359c:	bne	13630 <__assert_fail@plt+0x2608>
   135a0:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   135a4:	tst	r0, #1
   135a8:	beq	13630 <__assert_fail@plt+0x2608>
   135ac:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   135b0:	tst	r0, #1
   135b4:	beq	135fc <__assert_fail@plt+0x25d4>
   135b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   135c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   135c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   135c8:	ldr	ip, [fp, #12]
   135cc:	ldr	lr, [fp, #16]
   135d0:	ldr	r4, [fp, #20]
   135d4:	ldr	r5, [fp, #24]
   135d8:	movw	r6, #5
   135dc:	str	r6, [sp]
   135e0:	str	ip, [sp, #4]
   135e4:	str	lr, [sp, #8]
   135e8:	str	r4, [sp, #12]
   135ec:	str	r5, [sp, #16]
   135f0:	bl	1201c <__assert_fail@plt+0xff4>
   135f4:	str	r0, [fp, #-20]	; 0xffffffec
   135f8:	b	13748 <__assert_fail@plt+0x2720>
   135fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13600:	cmp	r0, #0
   13604:	bne	13628 <__assert_fail@plt+0x2600>
   13608:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1360c:	cmp	r0, #0
   13610:	beq	13628 <__assert_fail@plt+0x2600>
   13614:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13618:	str	r0, [fp, #-28]	; 0xffffffe4
   1361c:	movw	r0, #0
   13620:	str	r0, [fp, #-44]	; 0xffffffd4
   13624:	b	120c4 <__assert_fail@plt+0x109c>
   13628:	b	1362c <__assert_fail@plt+0x2604>
   1362c:	b	13630 <__assert_fail@plt+0x2608>
   13630:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13634:	movw	r1, #0
   13638:	cmp	r0, r1
   1363c:	beq	136b0 <__assert_fail@plt+0x2688>
   13640:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13644:	tst	r0, #1
   13648:	bne	136b0 <__assert_fail@plt+0x2688>
   1364c:	b	13650 <__assert_fail@plt+0x2628>
   13650:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13654:	ldrsb	r0, [r0]
   13658:	cmp	r0, #0
   1365c:	beq	136ac <__assert_fail@plt+0x2684>
   13660:	b	13664 <__assert_fail@plt+0x263c>
   13664:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13668:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1366c:	cmp	r0, r1
   13670:	bcs	1368c <__assert_fail@plt+0x2664>
   13674:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13678:	ldrb	r0, [r0]
   1367c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13680:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13684:	add	r1, r1, r2
   13688:	strb	r0, [r1]
   1368c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13690:	add	r0, r0, #1
   13694:	str	r0, [fp, #-44]	; 0xffffffd4
   13698:	b	1369c <__assert_fail@plt+0x2674>
   1369c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   136a0:	add	r0, r0, #1
   136a4:	str	r0, [fp, #-52]	; 0xffffffcc
   136a8:	b	13650 <__assert_fail@plt+0x2628>
   136ac:	b	136b0 <__assert_fail@plt+0x2688>
   136b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136b8:	cmp	r0, r1
   136bc:	bcs	136d4 <__assert_fail@plt+0x26ac>
   136c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   136c8:	add	r0, r0, r1
   136cc:	movw	r1, #0
   136d0:	strb	r1, [r0]
   136d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136d8:	str	r0, [fp, #-20]	; 0xffffffec
   136dc:	b	13748 <__assert_fail@plt+0x2720>
   136e0:	ldr	r0, [fp, #8]
   136e4:	cmp	r0, #2
   136e8:	bne	13700 <__assert_fail@plt+0x26d8>
   136ec:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   136f0:	tst	r0, #1
   136f4:	beq	13700 <__assert_fail@plt+0x26d8>
   136f8:	movw	r0, #4
   136fc:	str	r0, [fp, #8]
   13700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13704:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13708:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1370c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13710:	ldr	ip, [fp, #8]
   13714:	ldr	lr, [fp, #12]
   13718:	mvn	r4, #2
   1371c:	and	lr, lr, r4
   13720:	ldr	r4, [fp, #20]
   13724:	ldr	r5, [fp, #24]
   13728:	str	ip, [sp]
   1372c:	str	lr, [sp, #4]
   13730:	movw	ip, #0
   13734:	str	ip, [sp, #8]
   13738:	str	r4, [sp, #12]
   1373c:	str	r5, [sp, #16]
   13740:	bl	1201c <__assert_fail@plt+0xff4>
   13744:	str	r0, [fp, #-20]	; 0xffffffec
   13748:	ldr	r0, [fp, #-20]	; 0xffffffec
   1374c:	sub	sp, fp, #16
   13750:	pop	{r4, r5, r6, sl, fp, pc}
   13754:	push	{fp, lr}
   13758:	mov	fp, sp
   1375c:	sub	sp, sp, #16
   13760:	str	r0, [fp, #-4]
   13764:	str	r1, [sp, #8]
   13768:	str	r2, [sp, #4]
   1376c:	ldr	r0, [fp, #-4]
   13770:	ldr	r1, [sp, #8]
   13774:	ldr	r3, [sp, #4]
   13778:	movw	r2, #0
   1377c:	bl	13788 <__assert_fail@plt+0x2760>
   13780:	mov	sp, fp
   13784:	pop	{fp, pc}
   13788:	push	{r4, r5, r6, sl, fp, lr}
   1378c:	add	fp, sp, #16
   13790:	sub	sp, sp, #72	; 0x48
   13794:	str	r0, [fp, #-20]	; 0xffffffec
   13798:	str	r1, [fp, #-24]	; 0xffffffe8
   1379c:	str	r2, [fp, #-28]	; 0xffffffe4
   137a0:	str	r3, [fp, #-32]	; 0xffffffe0
   137a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137a8:	movw	r1, #0
   137ac:	cmp	r0, r1
   137b0:	beq	137c0 <__assert_fail@plt+0x2798>
   137b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137b8:	str	r0, [sp, #32]
   137bc:	b	137d0 <__assert_fail@plt+0x27a8>
   137c0:	movw	r0, #57692	; 0xe15c
   137c4:	movt	r0, #2
   137c8:	str	r0, [sp, #32]
   137cc:	b	137d0 <__assert_fail@plt+0x27a8>
   137d0:	ldr	r0, [sp, #32]
   137d4:	str	r0, [fp, #-36]	; 0xffffffdc
   137d8:	bl	10f74 <__errno_location@plt>
   137dc:	ldr	r0, [r0]
   137e0:	str	r0, [fp, #-40]	; 0xffffffd8
   137e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   137e8:	ldr	r0, [r0, #4]
   137ec:	ldr	lr, [fp, #-28]	; 0xffffffe4
   137f0:	movw	r1, #0
   137f4:	cmp	lr, r1
   137f8:	movw	lr, #0
   137fc:	movne	lr, #1
   13800:	tst	lr, #1
   13804:	mov	lr, r1
   13808:	moveq	lr, #1
   1380c:	orr	r0, r0, lr
   13810:	str	r0, [sp, #44]	; 0x2c
   13814:	ldr	r2, [fp, #-20]	; 0xffffffec
   13818:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1381c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13820:	ldr	r0, [r0]
   13824:	ldr	lr, [sp, #44]	; 0x2c
   13828:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1382c:	add	ip, ip, #8
   13830:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13834:	ldr	r4, [r4, #40]	; 0x28
   13838:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1383c:	ldr	r5, [r5, #44]	; 0x2c
   13840:	str	r0, [sp, #28]
   13844:	mov	r0, r1
   13848:	ldr	r6, [sp, #28]
   1384c:	str	r6, [sp]
   13850:	str	lr, [sp, #4]
   13854:	str	ip, [sp, #8]
   13858:	str	r4, [sp, #12]
   1385c:	str	r5, [sp, #16]
   13860:	bl	1201c <__assert_fail@plt+0xff4>
   13864:	add	r0, r0, #1
   13868:	str	r0, [sp, #40]	; 0x28
   1386c:	ldr	r0, [sp, #40]	; 0x28
   13870:	bl	14cac <__assert_fail@plt+0x3c84>
   13874:	str	r0, [sp, #36]	; 0x24
   13878:	ldr	r0, [sp, #36]	; 0x24
   1387c:	ldr	r1, [sp, #40]	; 0x28
   13880:	ldr	r2, [fp, #-20]	; 0xffffffec
   13884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13888:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1388c:	ldr	ip, [ip]
   13890:	ldr	lr, [sp, #44]	; 0x2c
   13894:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13898:	add	r4, r4, #8
   1389c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   138a0:	ldr	r5, [r5, #40]	; 0x28
   138a4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   138a8:	ldr	r6, [r6, #44]	; 0x2c
   138ac:	str	ip, [sp]
   138b0:	str	lr, [sp, #4]
   138b4:	str	r4, [sp, #8]
   138b8:	str	r5, [sp, #12]
   138bc:	str	r6, [sp, #16]
   138c0:	bl	1201c <__assert_fail@plt+0xff4>
   138c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   138c8:	str	r0, [sp, #24]
   138cc:	str	r1, [sp, #20]
   138d0:	bl	10f74 <__errno_location@plt>
   138d4:	ldr	r1, [sp, #20]
   138d8:	str	r1, [r0]
   138dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   138e0:	movw	r2, #0
   138e4:	cmp	r0, r2
   138e8:	beq	138fc <__assert_fail@plt+0x28d4>
   138ec:	ldr	r0, [sp, #40]	; 0x28
   138f0:	sub	r0, r0, #1
   138f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138f8:	str	r0, [r1]
   138fc:	ldr	r0, [sp, #36]	; 0x24
   13900:	sub	sp, fp, #16
   13904:	pop	{r4, r5, r6, sl, fp, pc}
   13908:	push	{fp, lr}
   1390c:	mov	fp, sp
   13910:	sub	sp, sp, #8
   13914:	movw	r0, #57580	; 0xe0ec
   13918:	movt	r0, #2
   1391c:	ldr	r0, [r0]
   13920:	str	r0, [sp, #4]
   13924:	movw	r0, #1
   13928:	str	r0, [sp]
   1392c:	ldr	r0, [sp]
   13930:	movw	r1, #57584	; 0xe0f0
   13934:	movt	r1, #2
   13938:	ldr	r1, [r1]
   1393c:	cmp	r0, r1
   13940:	bge	13968 <__assert_fail@plt+0x2940>
   13944:	ldr	r0, [sp, #4]
   13948:	ldr	r1, [sp]
   1394c:	add	r0, r0, r1, lsl #3
   13950:	ldr	r0, [r0, #4]
   13954:	bl	1aa04 <__assert_fail@plt+0x99dc>
   13958:	ldr	r0, [sp]
   1395c:	add	r0, r0, #1
   13960:	str	r0, [sp]
   13964:	b	1392c <__assert_fail@plt+0x2904>
   13968:	ldr	r0, [sp, #4]
   1396c:	ldr	r0, [r0, #4]
   13970:	movw	r1, #57740	; 0xe18c
   13974:	movt	r1, #2
   13978:	cmp	r0, r1
   1397c:	beq	139a8 <__assert_fail@plt+0x2980>
   13980:	ldr	r0, [sp, #4]
   13984:	ldr	r0, [r0, #4]
   13988:	bl	1aa04 <__assert_fail@plt+0x99dc>
   1398c:	movw	r0, #256	; 0x100
   13990:	movw	lr, #57588	; 0xe0f4
   13994:	movt	lr, #2
   13998:	str	r0, [lr]
   1399c:	movw	r0, #57740	; 0xe18c
   139a0:	movt	r0, #2
   139a4:	str	r0, [lr, #4]
   139a8:	ldr	r0, [sp, #4]
   139ac:	movw	r1, #57588	; 0xe0f4
   139b0:	movt	r1, #2
   139b4:	cmp	r0, r1
   139b8:	beq	139d8 <__assert_fail@plt+0x29b0>
   139bc:	ldr	r0, [sp, #4]
   139c0:	bl	1aa04 <__assert_fail@plt+0x99dc>
   139c4:	movw	r0, #57580	; 0xe0ec
   139c8:	movt	r0, #2
   139cc:	movw	lr, #57588	; 0xe0f4
   139d0:	movt	lr, #2
   139d4:	str	lr, [r0]
   139d8:	movw	r0, #57584	; 0xe0f0
   139dc:	movt	r0, #2
   139e0:	movw	r1, #1
   139e4:	str	r1, [r0]
   139e8:	mov	sp, fp
   139ec:	pop	{fp, pc}
   139f0:	push	{fp, lr}
   139f4:	mov	fp, sp
   139f8:	sub	sp, sp, #8
   139fc:	str	r0, [sp, #4]
   13a00:	str	r1, [sp]
   13a04:	ldr	r0, [sp, #4]
   13a08:	ldr	r1, [sp]
   13a0c:	mvn	r2, #0
   13a10:	movw	r3, #57692	; 0xe15c
   13a14:	movt	r3, #2
   13a18:	bl	13a24 <__assert_fail@plt+0x29fc>
   13a1c:	mov	sp, fp
   13a20:	pop	{fp, pc}
   13a24:	push	{r4, r5, r6, sl, fp, lr}
   13a28:	add	fp, sp, #16
   13a2c:	sub	sp, sp, #88	; 0x58
   13a30:	str	r0, [fp, #-20]	; 0xffffffec
   13a34:	str	r1, [fp, #-24]	; 0xffffffe8
   13a38:	str	r2, [fp, #-28]	; 0xffffffe4
   13a3c:	str	r3, [fp, #-32]	; 0xffffffe0
   13a40:	bl	10f74 <__errno_location@plt>
   13a44:	ldr	r1, [pc, #676]	; 13cf0 <__assert_fail@plt+0x2cc8>
   13a48:	ldr	r0, [r0]
   13a4c:	str	r0, [fp, #-36]	; 0xffffffdc
   13a50:	movw	r0, #57580	; 0xe0ec
   13a54:	movt	r0, #2
   13a58:	ldr	r0, [r0]
   13a5c:	str	r0, [fp, #-40]	; 0xffffffd8
   13a60:	str	r1, [fp, #-44]	; 0xffffffd4
   13a64:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a68:	movw	r1, #0
   13a6c:	cmp	r1, r0
   13a70:	bgt	13a84 <__assert_fail@plt+0x2a5c>
   13a74:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a7c:	cmp	r0, r1
   13a80:	blt	13a88 <__assert_fail@plt+0x2a60>
   13a84:	bl	1101c <abort@plt>
   13a88:	movw	r0, #57584	; 0xe0f0
   13a8c:	movt	r0, #2
   13a90:	ldr	r0, [r0]
   13a94:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a98:	cmp	r0, r1
   13a9c:	bgt	13b94 <__assert_fail@plt+0x2b6c>
   13aa0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13aa4:	movw	r1, #57588	; 0xe0f4
   13aa8:	movt	r1, #2
   13aac:	cmp	r0, r1
   13ab0:	movw	r0, #0
   13ab4:	moveq	r0, #1
   13ab8:	and	r0, r0, #1
   13abc:	strb	r0, [fp, #-45]	; 0xffffffd3
   13ac0:	movw	r0, #57584	; 0xe0f0
   13ac4:	movt	r0, #2
   13ac8:	ldr	r0, [r0]
   13acc:	str	r0, [sp, #52]	; 0x34
   13ad0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13ad4:	tst	r0, #1
   13ad8:	beq	13ae8 <__assert_fail@plt+0x2ac0>
   13adc:	movw	r0, #0
   13ae0:	str	r0, [sp, #32]
   13ae4:	b	13af0 <__assert_fail@plt+0x2ac8>
   13ae8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13aec:	str	r0, [sp, #32]
   13af0:	ldr	r0, [sp, #32]
   13af4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13af8:	movw	r2, #57584	; 0xe0f0
   13afc:	movt	r2, #2
   13b00:	ldr	r2, [r2]
   13b04:	sub	r1, r1, r2
   13b08:	add	r2, r1, #1
   13b0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13b10:	add	r1, sp, #52	; 0x34
   13b14:	movw	ip, #8
   13b18:	str	ip, [sp]
   13b1c:	bl	14ee8 <__assert_fail@plt+0x3ec0>
   13b20:	str	r0, [fp, #-40]	; 0xffffffd8
   13b24:	movw	r1, #57580	; 0xe0ec
   13b28:	movt	r1, #2
   13b2c:	str	r0, [r1]
   13b30:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13b34:	tst	r0, #1
   13b38:	beq	13b58 <__assert_fail@plt+0x2b30>
   13b3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b40:	movw	r1, #57588	; 0xe0f4
   13b44:	movt	r1, #2
   13b48:	ldr	r2, [r1]
   13b4c:	str	r2, [r0]
   13b50:	ldr	r1, [r1, #4]
   13b54:	str	r1, [r0, #4]
   13b58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b5c:	movw	r1, #57584	; 0xe0f0
   13b60:	movt	r1, #2
   13b64:	ldr	r1, [r1]
   13b68:	add	r0, r0, r1, lsl #3
   13b6c:	ldr	r2, [sp, #52]	; 0x34
   13b70:	sub	r1, r2, r1
   13b74:	lsl	r2, r1, #3
   13b78:	movw	r1, #0
   13b7c:	and	r1, r1, #255	; 0xff
   13b80:	bl	10f8c <memset@plt>
   13b84:	ldr	r0, [sp, #52]	; 0x34
   13b88:	movw	r1, #57584	; 0xe0f0
   13b8c:	movt	r1, #2
   13b90:	str	r0, [r1]
   13b94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b98:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b9c:	ldr	r0, [r0, r1, lsl #3]
   13ba0:	str	r0, [sp, #48]	; 0x30
   13ba4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ba8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13bac:	add	r0, r0, r1, lsl #3
   13bb0:	ldr	r0, [r0, #4]
   13bb4:	str	r0, [sp, #44]	; 0x2c
   13bb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bbc:	ldr	r0, [r0, #4]
   13bc0:	orr	r0, r0, #1
   13bc4:	str	r0, [sp, #40]	; 0x28
   13bc8:	ldr	r0, [sp, #44]	; 0x2c
   13bcc:	ldr	r1, [sp, #48]	; 0x30
   13bd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13bd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13bd8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13bdc:	ldr	ip, [ip]
   13be0:	ldr	lr, [sp, #40]	; 0x28
   13be4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13be8:	add	r4, r4, #8
   13bec:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13bf0:	ldr	r5, [r5, #40]	; 0x28
   13bf4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13bf8:	ldr	r6, [r6, #44]	; 0x2c
   13bfc:	str	ip, [sp]
   13c00:	str	lr, [sp, #4]
   13c04:	str	r4, [sp, #8]
   13c08:	str	r5, [sp, #12]
   13c0c:	str	r6, [sp, #16]
   13c10:	bl	1201c <__assert_fail@plt+0xff4>
   13c14:	str	r0, [sp, #36]	; 0x24
   13c18:	ldr	r0, [sp, #48]	; 0x30
   13c1c:	ldr	r1, [sp, #36]	; 0x24
   13c20:	cmp	r0, r1
   13c24:	bhi	13cd0 <__assert_fail@plt+0x2ca8>
   13c28:	ldr	r0, [sp, #36]	; 0x24
   13c2c:	add	r0, r0, #1
   13c30:	str	r0, [sp, #48]	; 0x30
   13c34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13c38:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c3c:	add	r1, r1, r2, lsl #3
   13c40:	str	r0, [r1]
   13c44:	ldr	r0, [sp, #44]	; 0x2c
   13c48:	movw	r1, #57740	; 0xe18c
   13c4c:	movt	r1, #2
   13c50:	cmp	r0, r1
   13c54:	beq	13c60 <__assert_fail@plt+0x2c38>
   13c58:	ldr	r0, [sp, #44]	; 0x2c
   13c5c:	bl	1aa04 <__assert_fail@plt+0x99dc>
   13c60:	ldr	r0, [sp, #48]	; 0x30
   13c64:	bl	14cac <__assert_fail@plt+0x3c84>
   13c68:	mov	lr, r0
   13c6c:	str	r0, [sp, #44]	; 0x2c
   13c70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13c74:	ldr	r1, [fp, #-20]	; 0xffffffec
   13c78:	add	r0, r0, r1, lsl #3
   13c7c:	str	lr, [r0, #4]
   13c80:	ldr	r0, [sp, #44]	; 0x2c
   13c84:	ldr	r1, [sp, #48]	; 0x30
   13c88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c90:	ldr	lr, [fp, #-32]	; 0xffffffe0
   13c94:	ldr	lr, [lr]
   13c98:	ldr	ip, [sp, #40]	; 0x28
   13c9c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13ca0:	add	r4, r4, #8
   13ca4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13ca8:	ldr	r5, [r5, #40]	; 0x28
   13cac:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13cb0:	ldr	r6, [r6, #44]	; 0x2c
   13cb4:	str	lr, [sp]
   13cb8:	str	ip, [sp, #4]
   13cbc:	str	r4, [sp, #8]
   13cc0:	str	r5, [sp, #12]
   13cc4:	str	r6, [sp, #16]
   13cc8:	bl	1201c <__assert_fail@plt+0xff4>
   13ccc:	str	r0, [sp, #28]
   13cd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13cd4:	str	r0, [sp, #24]
   13cd8:	bl	10f74 <__errno_location@plt>
   13cdc:	ldr	lr, [sp, #24]
   13ce0:	str	lr, [r0]
   13ce4:	ldr	r0, [sp, #44]	; 0x2c
   13ce8:	sub	sp, fp, #16
   13cec:	pop	{r4, r5, r6, sl, fp, pc}
   13cf0:	svcvc	0x00ffffff
   13cf4:	push	{fp, lr}
   13cf8:	mov	fp, sp
   13cfc:	sub	sp, sp, #16
   13d00:	str	r0, [fp, #-4]
   13d04:	str	r1, [sp, #8]
   13d08:	str	r2, [sp, #4]
   13d0c:	ldr	r0, [fp, #-4]
   13d10:	ldr	r1, [sp, #8]
   13d14:	ldr	r2, [sp, #4]
   13d18:	movw	r3, #57692	; 0xe15c
   13d1c:	movt	r3, #2
   13d20:	bl	13a24 <__assert_fail@plt+0x29fc>
   13d24:	mov	sp, fp
   13d28:	pop	{fp, pc}
   13d2c:	push	{fp, lr}
   13d30:	mov	fp, sp
   13d34:	sub	sp, sp, #8
   13d38:	str	r0, [sp, #4]
   13d3c:	ldr	r1, [sp, #4]
   13d40:	movw	r0, #0
   13d44:	bl	139f0 <__assert_fail@plt+0x29c8>
   13d48:	mov	sp, fp
   13d4c:	pop	{fp, pc}
   13d50:	push	{fp, lr}
   13d54:	mov	fp, sp
   13d58:	sub	sp, sp, #8
   13d5c:	str	r0, [sp, #4]
   13d60:	str	r1, [sp]
   13d64:	ldr	r1, [sp, #4]
   13d68:	ldr	r2, [sp]
   13d6c:	movw	r0, #0
   13d70:	bl	13cf4 <__assert_fail@plt+0x2ccc>
   13d74:	mov	sp, fp
   13d78:	pop	{fp, pc}
   13d7c:	push	{fp, lr}
   13d80:	mov	fp, sp
   13d84:	sub	sp, sp, #64	; 0x40
   13d88:	str	r0, [fp, #-4]
   13d8c:	str	r1, [fp, #-8]
   13d90:	str	r2, [fp, #-12]
   13d94:	ldr	r1, [fp, #-8]
   13d98:	add	r0, sp, #4
   13d9c:	bl	13dbc <__assert_fail@plt+0x2d94>
   13da0:	ldr	r0, [fp, #-4]
   13da4:	ldr	r1, [fp, #-12]
   13da8:	mvn	r2, #0
   13dac:	add	r3, sp, #4
   13db0:	bl	13a24 <__assert_fail@plt+0x29fc>
   13db4:	mov	sp, fp
   13db8:	pop	{fp, pc}
   13dbc:	push	{fp, lr}
   13dc0:	mov	fp, sp
   13dc4:	sub	sp, sp, #8
   13dc8:	str	r1, [sp, #4]
   13dcc:	mov	r1, r0
   13dd0:	str	r0, [sp]
   13dd4:	mov	r0, r1
   13dd8:	movw	r1, #0
   13ddc:	and	r1, r1, #255	; 0xff
   13de0:	movw	r2, #48	; 0x30
   13de4:	bl	10f8c <memset@plt>
   13de8:	ldr	r0, [sp, #4]
   13dec:	cmp	r0, #10
   13df0:	bne	13df8 <__assert_fail@plt+0x2dd0>
   13df4:	bl	1101c <abort@plt>
   13df8:	ldr	r0, [sp, #4]
   13dfc:	ldr	r1, [sp]
   13e00:	str	r0, [r1]
   13e04:	mov	sp, fp
   13e08:	pop	{fp, pc}
   13e0c:	push	{fp, lr}
   13e10:	mov	fp, sp
   13e14:	sub	sp, sp, #64	; 0x40
   13e18:	str	r0, [fp, #-4]
   13e1c:	str	r1, [fp, #-8]
   13e20:	str	r2, [fp, #-12]
   13e24:	str	r3, [fp, #-16]
   13e28:	ldr	r1, [fp, #-8]
   13e2c:	mov	r0, sp
   13e30:	bl	13dbc <__assert_fail@plt+0x2d94>
   13e34:	ldr	r0, [fp, #-4]
   13e38:	ldr	r1, [fp, #-12]
   13e3c:	ldr	r2, [fp, #-16]
   13e40:	mov	r3, sp
   13e44:	bl	13a24 <__assert_fail@plt+0x29fc>
   13e48:	mov	sp, fp
   13e4c:	pop	{fp, pc}
   13e50:	push	{fp, lr}
   13e54:	mov	fp, sp
   13e58:	sub	sp, sp, #8
   13e5c:	str	r0, [sp, #4]
   13e60:	str	r1, [sp]
   13e64:	ldr	r1, [sp, #4]
   13e68:	ldr	r2, [sp]
   13e6c:	movw	r0, #0
   13e70:	bl	13d7c <__assert_fail@plt+0x2d54>
   13e74:	mov	sp, fp
   13e78:	pop	{fp, pc}
   13e7c:	push	{fp, lr}
   13e80:	mov	fp, sp
   13e84:	sub	sp, sp, #16
   13e88:	str	r0, [fp, #-4]
   13e8c:	str	r1, [sp, #8]
   13e90:	str	r2, [sp, #4]
   13e94:	ldr	r1, [fp, #-4]
   13e98:	ldr	r2, [sp, #8]
   13e9c:	ldr	r3, [sp, #4]
   13ea0:	movw	r0, #0
   13ea4:	bl	13e0c <__assert_fail@plt+0x2de4>
   13ea8:	mov	sp, fp
   13eac:	pop	{fp, pc}
   13eb0:	push	{fp, lr}
   13eb4:	mov	fp, sp
   13eb8:	sub	sp, sp, #72	; 0x48
   13ebc:	movw	r3, #57692	; 0xe15c
   13ec0:	movt	r3, #2
   13ec4:	str	r0, [fp, #-4]
   13ec8:	str	r1, [fp, #-8]
   13ecc:	strb	r2, [fp, #-9]
   13ed0:	add	r0, sp, #12
   13ed4:	mov	r1, r0
   13ed8:	str	r0, [sp, #8]
   13edc:	mov	r0, r1
   13ee0:	mov	r1, r3
   13ee4:	movw	r2, #48	; 0x30
   13ee8:	bl	10e30 <memcpy@plt>
   13eec:	ldr	r0, [sp, #8]
   13ef0:	ldrb	r1, [fp, #-9]
   13ef4:	movw	r2, #1
   13ef8:	bl	11dc0 <__assert_fail@plt+0xd98>
   13efc:	ldr	r1, [fp, #-4]
   13f00:	ldr	r2, [fp, #-8]
   13f04:	movw	r3, #0
   13f08:	str	r0, [sp, #4]
   13f0c:	mov	r0, r3
   13f10:	add	r3, sp, #12
   13f14:	bl	13a24 <__assert_fail@plt+0x29fc>
   13f18:	mov	sp, fp
   13f1c:	pop	{fp, pc}
   13f20:	push	{fp, lr}
   13f24:	mov	fp, sp
   13f28:	sub	sp, sp, #8
   13f2c:	str	r0, [sp, #4]
   13f30:	strb	r1, [sp, #3]
   13f34:	ldr	r0, [sp, #4]
   13f38:	mvn	r1, #0
   13f3c:	ldrb	r2, [sp, #3]
   13f40:	bl	13eb0 <__assert_fail@plt+0x2e88>
   13f44:	mov	sp, fp
   13f48:	pop	{fp, pc}
   13f4c:	push	{fp, lr}
   13f50:	mov	fp, sp
   13f54:	sub	sp, sp, #8
   13f58:	str	r0, [sp, #4]
   13f5c:	ldr	r0, [sp, #4]
   13f60:	movw	r1, #58	; 0x3a
   13f64:	and	r1, r1, #255	; 0xff
   13f68:	bl	13f20 <__assert_fail@plt+0x2ef8>
   13f6c:	mov	sp, fp
   13f70:	pop	{fp, pc}
   13f74:	push	{fp, lr}
   13f78:	mov	fp, sp
   13f7c:	sub	sp, sp, #8
   13f80:	str	r0, [sp, #4]
   13f84:	str	r1, [sp]
   13f88:	ldr	r0, [sp, #4]
   13f8c:	ldr	r1, [sp]
   13f90:	movw	r2, #58	; 0x3a
   13f94:	and	r2, r2, #255	; 0xff
   13f98:	bl	13eb0 <__assert_fail@plt+0x2e88>
   13f9c:	mov	sp, fp
   13fa0:	pop	{fp, pc}
   13fa4:	push	{fp, lr}
   13fa8:	mov	fp, sp
   13fac:	sub	sp, sp, #120	; 0x78
   13fb0:	str	r0, [fp, #-4]
   13fb4:	str	r1, [fp, #-8]
   13fb8:	str	r2, [fp, #-12]
   13fbc:	ldr	r1, [fp, #-8]
   13fc0:	add	r0, sp, #12
   13fc4:	bl	13dbc <__assert_fail@plt+0x2d94>
   13fc8:	add	r0, sp, #60	; 0x3c
   13fcc:	mov	r1, r0
   13fd0:	add	r2, sp, #12
   13fd4:	str	r0, [sp, #8]
   13fd8:	mov	r0, r1
   13fdc:	mov	r1, r2
   13fe0:	movw	r2, #48	; 0x30
   13fe4:	bl	10e30 <memcpy@plt>
   13fe8:	ldr	r0, [sp, #8]
   13fec:	movw	r1, #58	; 0x3a
   13ff0:	and	r1, r1, #255	; 0xff
   13ff4:	movw	r2, #1
   13ff8:	bl	11dc0 <__assert_fail@plt+0xd98>
   13ffc:	ldr	r1, [fp, #-4]
   14000:	ldr	r2, [fp, #-12]
   14004:	str	r0, [sp, #4]
   14008:	mov	r0, r1
   1400c:	mov	r1, r2
   14010:	mvn	r2, #0
   14014:	add	r3, sp, #60	; 0x3c
   14018:	bl	13a24 <__assert_fail@plt+0x29fc>
   1401c:	mov	sp, fp
   14020:	pop	{fp, pc}
   14024:	push	{fp, lr}
   14028:	mov	fp, sp
   1402c:	sub	sp, sp, #24
   14030:	str	r0, [fp, #-4]
   14034:	str	r1, [fp, #-8]
   14038:	str	r2, [sp, #12]
   1403c:	str	r3, [sp, #8]
   14040:	ldr	r0, [fp, #-4]
   14044:	ldr	r1, [fp, #-8]
   14048:	ldr	r2, [sp, #12]
   1404c:	ldr	r3, [sp, #8]
   14050:	mvn	ip, #0
   14054:	str	ip, [sp]
   14058:	bl	14064 <__assert_fail@plt+0x303c>
   1405c:	mov	sp, fp
   14060:	pop	{fp, pc}
   14064:	push	{fp, lr}
   14068:	mov	fp, sp
   1406c:	sub	sp, sp, #72	; 0x48
   14070:	ldr	ip, [fp, #8]
   14074:	movw	lr, #57692	; 0xe15c
   14078:	movt	lr, #2
   1407c:	str	r0, [fp, #-4]
   14080:	str	r1, [fp, #-8]
   14084:	str	r2, [fp, #-12]
   14088:	str	r3, [fp, #-16]
   1408c:	add	r0, sp, #8
   14090:	mov	r1, r0
   14094:	str	r0, [sp, #4]
   14098:	mov	r0, r1
   1409c:	mov	r1, lr
   140a0:	movw	r2, #48	; 0x30
   140a4:	str	ip, [sp]
   140a8:	bl	10e30 <memcpy@plt>
   140ac:	ldr	r1, [fp, #-8]
   140b0:	ldr	r2, [fp, #-12]
   140b4:	ldr	r0, [sp, #4]
   140b8:	bl	11ec0 <__assert_fail@plt+0xe98>
   140bc:	ldr	r0, [fp, #-4]
   140c0:	ldr	r1, [fp, #-16]
   140c4:	ldr	r2, [fp, #8]
   140c8:	add	r3, sp, #8
   140cc:	bl	13a24 <__assert_fail@plt+0x29fc>
   140d0:	mov	sp, fp
   140d4:	pop	{fp, pc}
   140d8:	push	{fp, lr}
   140dc:	mov	fp, sp
   140e0:	sub	sp, sp, #16
   140e4:	str	r0, [fp, #-4]
   140e8:	str	r1, [sp, #8]
   140ec:	str	r2, [sp, #4]
   140f0:	ldr	r1, [fp, #-4]
   140f4:	ldr	r2, [sp, #8]
   140f8:	ldr	r3, [sp, #4]
   140fc:	movw	r0, #0
   14100:	bl	14024 <__assert_fail@plt+0x2ffc>
   14104:	mov	sp, fp
   14108:	pop	{fp, pc}
   1410c:	push	{fp, lr}
   14110:	mov	fp, sp
   14114:	sub	sp, sp, #24
   14118:	str	r0, [fp, #-4]
   1411c:	str	r1, [fp, #-8]
   14120:	str	r2, [sp, #12]
   14124:	str	r3, [sp, #8]
   14128:	ldr	r1, [fp, #-4]
   1412c:	ldr	r2, [fp, #-8]
   14130:	ldr	r3, [sp, #12]
   14134:	ldr	r0, [sp, #8]
   14138:	movw	ip, #0
   1413c:	str	r0, [sp, #4]
   14140:	mov	r0, ip
   14144:	ldr	ip, [sp, #4]
   14148:	str	ip, [sp]
   1414c:	bl	14064 <__assert_fail@plt+0x303c>
   14150:	mov	sp, fp
   14154:	pop	{fp, pc}
   14158:	push	{fp, lr}
   1415c:	mov	fp, sp
   14160:	sub	sp, sp, #16
   14164:	str	r0, [fp, #-4]
   14168:	str	r1, [sp, #8]
   1416c:	str	r2, [sp, #4]
   14170:	ldr	r0, [fp, #-4]
   14174:	ldr	r1, [sp, #8]
   14178:	ldr	r2, [sp, #4]
   1417c:	movw	r3, #57596	; 0xe0fc
   14180:	movt	r3, #2
   14184:	bl	13a24 <__assert_fail@plt+0x29fc>
   14188:	mov	sp, fp
   1418c:	pop	{fp, pc}
   14190:	push	{fp, lr}
   14194:	mov	fp, sp
   14198:	sub	sp, sp, #8
   1419c:	str	r0, [sp, #4]
   141a0:	str	r1, [sp]
   141a4:	ldr	r1, [sp, #4]
   141a8:	ldr	r2, [sp]
   141ac:	movw	r0, #0
   141b0:	bl	14158 <__assert_fail@plt+0x3130>
   141b4:	mov	sp, fp
   141b8:	pop	{fp, pc}
   141bc:	push	{fp, lr}
   141c0:	mov	fp, sp
   141c4:	sub	sp, sp, #8
   141c8:	str	r0, [sp, #4]
   141cc:	str	r1, [sp]
   141d0:	ldr	r0, [sp, #4]
   141d4:	ldr	r1, [sp]
   141d8:	mvn	r2, #0
   141dc:	bl	14158 <__assert_fail@plt+0x3130>
   141e0:	mov	sp, fp
   141e4:	pop	{fp, pc}
   141e8:	push	{fp, lr}
   141ec:	mov	fp, sp
   141f0:	sub	sp, sp, #8
   141f4:	str	r0, [sp, #4]
   141f8:	ldr	r1, [sp, #4]
   141fc:	movw	r0, #0
   14200:	bl	141bc <__assert_fail@plt+0x3194>
   14204:	mov	sp, fp
   14208:	pop	{fp, pc}
   1420c:	push	{fp, lr}
   14210:	mov	fp, sp
   14214:	sub	sp, sp, #24
   14218:	str	r0, [fp, #-8]
   1421c:	str	r1, [sp, #12]
   14220:	ldr	r0, [fp, #-8]
   14224:	bl	10f38 <gettext@plt>
   14228:	str	r0, [sp, #8]
   1422c:	ldr	r0, [sp, #8]
   14230:	ldr	r1, [fp, #-8]
   14234:	cmp	r0, r1
   14238:	beq	14248 <__assert_fail@plt+0x3220>
   1423c:	ldr	r0, [sp, #8]
   14240:	str	r0, [fp, #-4]
   14244:	b	14314 <__assert_fail@plt+0x32ec>
   14248:	bl	1ad24 <__assert_fail@plt+0x9cfc>
   1424c:	str	r0, [sp, #4]
   14250:	ldr	r0, [sp, #4]
   14254:	movw	r1, #52017	; 0xcb31
   14258:	movt	r1, #1
   1425c:	bl	1a6e0 <__assert_fail@plt+0x96b8>
   14260:	cmp	r0, #0
   14264:	bne	1429c <__assert_fail@plt+0x3274>
   14268:	ldr	r0, [fp, #-8]
   1426c:	ldrb	r0, [r0]
   14270:	cmp	r0, #96	; 0x60
   14274:	movw	r0, #0
   14278:	moveq	r0, #1
   1427c:	tst	r0, #1
   14280:	movw	r0, #52027	; 0xcb3b
   14284:	movt	r0, #1
   14288:	movw	r1, #52023	; 0xcb37
   1428c:	movt	r1, #1
   14290:	movne	r0, r1
   14294:	str	r0, [fp, #-4]
   14298:	b	14314 <__assert_fail@plt+0x32ec>
   1429c:	ldr	r0, [sp, #4]
   142a0:	movw	r1, #52031	; 0xcb3f
   142a4:	movt	r1, #1
   142a8:	bl	1a6e0 <__assert_fail@plt+0x96b8>
   142ac:	cmp	r0, #0
   142b0:	bne	142e8 <__assert_fail@plt+0x32c0>
   142b4:	ldr	r0, [fp, #-8]
   142b8:	ldrb	r0, [r0]
   142bc:	cmp	r0, #96	; 0x60
   142c0:	movw	r0, #0
   142c4:	moveq	r0, #1
   142c8:	tst	r0, #1
   142cc:	movw	r0, #52043	; 0xcb4b
   142d0:	movt	r0, #1
   142d4:	movw	r1, #52039	; 0xcb47
   142d8:	movt	r1, #1
   142dc:	movne	r0, r1
   142e0:	str	r0, [fp, #-4]
   142e4:	b	14314 <__assert_fail@plt+0x32ec>
   142e8:	ldr	r0, [sp, #12]
   142ec:	cmp	r0, #9
   142f0:	movw	r0, #0
   142f4:	moveq	r0, #1
   142f8:	tst	r0, #1
   142fc:	movw	r0, #52015	; 0xcb2f
   14300:	movt	r0, #1
   14304:	movw	r1, #52011	; 0xcb2b
   14308:	movt	r1, #1
   1430c:	movne	r0, r1
   14310:	str	r0, [fp, #-4]
   14314:	ldr	r0, [fp, #-4]
   14318:	mov	sp, fp
   1431c:	pop	{fp, pc}
   14320:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14324:	add	fp, sp, #28
   14328:	sub	sp, sp, #260	; 0x104
   1432c:	ldr	ip, [fp, #12]
   14330:	ldr	lr, [fp, #8]
   14334:	str	r0, [fp, #-32]	; 0xffffffe0
   14338:	str	r1, [fp, #-36]	; 0xffffffdc
   1433c:	str	r2, [fp, #-40]	; 0xffffffd8
   14340:	str	r3, [fp, #-44]	; 0xffffffd4
   14344:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14348:	movw	r1, #0
   1434c:	cmp	r0, r1
   14350:	str	lr, [fp, #-48]	; 0xffffffd0
   14354:	str	ip, [fp, #-52]	; 0xffffffcc
   14358:	beq	14390 <__assert_fail@plt+0x3368>
   1435c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14360:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14364:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14368:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1436c:	movw	ip, #52132	; 0xcba4
   14370:	movt	ip, #1
   14374:	str	r1, [fp, #-56]	; 0xffffffc8
   14378:	mov	r1, ip
   1437c:	ldr	ip, [fp, #-56]	; 0xffffffc8
   14380:	str	ip, [sp]
   14384:	bl	10f68 <fprintf@plt>
   14388:	str	r0, [fp, #-60]	; 0xffffffc4
   1438c:	b	143ac <__assert_fail@plt+0x3384>
   14390:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14394:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14398:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1439c:	movw	r1, #52144	; 0xcbb0
   143a0:	movt	r1, #1
   143a4:	bl	10f68 <fprintf@plt>
   143a8:	str	r0, [fp, #-64]	; 0xffffffc0
   143ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   143b0:	movw	r1, #52151	; 0xcbb7
   143b4:	movt	r1, #1
   143b8:	str	r0, [fp, #-68]	; 0xffffffbc
   143bc:	mov	r0, r1
   143c0:	bl	10f38 <gettext@plt>
   143c4:	movw	r1, #52869	; 0xce85
   143c8:	movt	r1, #1
   143cc:	movw	r3, #2022	; 0x7e6
   143d0:	ldr	lr, [fp, #-68]	; 0xffffffbc
   143d4:	str	r0, [fp, #-72]	; 0xffffffb8
   143d8:	mov	r0, lr
   143dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   143e0:	bl	10f68 <fprintf@plt>
   143e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   143e8:	movw	r2, #51012	; 0xc744
   143ec:	movt	r2, #1
   143f0:	str	r0, [fp, #-76]	; 0xffffffb4
   143f4:	mov	r0, r2
   143f8:	str	r2, [fp, #-80]	; 0xffffffb0
   143fc:	bl	10ddc <fputs_unlocked@plt>
   14400:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14404:	movw	r2, #52155	; 0xcbbb
   14408:	movt	r2, #1
   1440c:	str	r0, [fp, #-84]	; 0xffffffac
   14410:	mov	r0, r2
   14414:	str	r1, [fp, #-88]	; 0xffffffa8
   14418:	bl	10f38 <gettext@plt>
   1441c:	movw	r2, #52326	; 0xcc66
   14420:	movt	r2, #1
   14424:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14428:	str	r0, [fp, #-92]	; 0xffffffa4
   1442c:	mov	r0, r1
   14430:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14434:	bl	10f68 <fprintf@plt>
   14438:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1443c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14440:	str	r0, [fp, #-96]	; 0xffffffa0
   14444:	mov	r0, r2
   14448:	bl	10ddc <fputs_unlocked@plt>
   1444c:	ldr	r1, [fp, #12]
   14450:	cmp	r1, #9
   14454:	str	r0, [fp, #-100]	; 0xffffff9c
   14458:	str	r1, [fp, #-104]	; 0xffffff98
   1445c:	bhi	1489c <__assert_fail@plt+0x3874>
   14460:	add	r0, pc, #8
   14464:	ldr	r1, [fp, #-104]	; 0xffffff98
   14468:	ldr	r0, [r0, r1, lsl #2]
   1446c:	mov	pc, r0
   14470:	muleq	r1, r8, r4
   14474:	muleq	r1, ip, r4
   14478:	ldrdeq	r4, [r1], -r8
   1447c:	andeq	r4, r1, ip, lsl r5
   14480:	andeq	r4, r1, r8, ror r5
   14484:	andeq	r4, r1, r0, ror #11
   14488:	andeq	r4, r1, r4, asr r6
   1448c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14490:	andeq	r4, r1, r0, ror #14
   14494:	strdeq	r4, [r1], -r8
   14498:	b	1493c <__assert_fail@plt+0x3914>
   1449c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144a0:	movw	r1, #52360	; 0xcc88
   144a4:	movt	r1, #1
   144a8:	str	r0, [fp, #-108]	; 0xffffff94
   144ac:	mov	r0, r1
   144b0:	bl	10f38 <gettext@plt>
   144b4:	ldr	r1, [fp, #8]
   144b8:	ldr	r2, [r1]
   144bc:	ldr	r1, [fp, #-108]	; 0xffffff94
   144c0:	str	r0, [fp, #-112]	; 0xffffff90
   144c4:	mov	r0, r1
   144c8:	ldr	r1, [fp, #-112]	; 0xffffff90
   144cc:	bl	10f68 <fprintf@plt>
   144d0:	str	r0, [fp, #-116]	; 0xffffff8c
   144d4:	b	1493c <__assert_fail@plt+0x3914>
   144d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144dc:	movw	r1, #52376	; 0xcc98
   144e0:	movt	r1, #1
   144e4:	str	r0, [fp, #-120]	; 0xffffff88
   144e8:	mov	r0, r1
   144ec:	bl	10f38 <gettext@plt>
   144f0:	ldr	r1, [fp, #8]
   144f4:	ldr	r2, [r1]
   144f8:	ldr	r1, [fp, #8]
   144fc:	ldr	r3, [r1, #4]
   14500:	ldr	r1, [fp, #-120]	; 0xffffff88
   14504:	str	r0, [fp, #-124]	; 0xffffff84
   14508:	mov	r0, r1
   1450c:	ldr	r1, [fp, #-124]	; 0xffffff84
   14510:	bl	10f68 <fprintf@plt>
   14514:	str	r0, [fp, #-128]	; 0xffffff80
   14518:	b	1493c <__assert_fail@plt+0x3914>
   1451c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14520:	movw	r1, #52399	; 0xccaf
   14524:	movt	r1, #1
   14528:	str	r0, [fp, #-132]	; 0xffffff7c
   1452c:	mov	r0, r1
   14530:	bl	10f38 <gettext@plt>
   14534:	ldr	r1, [fp, #8]
   14538:	ldr	r2, [r1]
   1453c:	ldr	r1, [fp, #8]
   14540:	ldr	r3, [r1, #4]
   14544:	ldr	r1, [fp, #8]
   14548:	ldr	r1, [r1, #8]
   1454c:	ldr	lr, [fp, #-132]	; 0xffffff7c
   14550:	str	r0, [fp, #-136]	; 0xffffff78
   14554:	mov	r0, lr
   14558:	ldr	ip, [fp, #-136]	; 0xffffff78
   1455c:	str	r1, [fp, #-140]	; 0xffffff74
   14560:	mov	r1, ip
   14564:	ldr	r4, [fp, #-140]	; 0xffffff74
   14568:	str	r4, [sp]
   1456c:	bl	10f68 <fprintf@plt>
   14570:	str	r0, [sp, #144]	; 0x90
   14574:	b	1493c <__assert_fail@plt+0x3914>
   14578:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1457c:	movw	r1, #52427	; 0xcccb
   14580:	movt	r1, #1
   14584:	str	r0, [sp, #140]	; 0x8c
   14588:	mov	r0, r1
   1458c:	bl	10f38 <gettext@plt>
   14590:	ldr	r1, [fp, #8]
   14594:	ldr	r2, [r1]
   14598:	ldr	r1, [fp, #8]
   1459c:	ldr	r3, [r1, #4]
   145a0:	ldr	r1, [fp, #8]
   145a4:	ldr	r1, [r1, #8]
   145a8:	ldr	lr, [fp, #8]
   145ac:	ldr	lr, [lr, #12]
   145b0:	ldr	ip, [sp, #140]	; 0x8c
   145b4:	str	r0, [sp, #136]	; 0x88
   145b8:	mov	r0, ip
   145bc:	ldr	r4, [sp, #136]	; 0x88
   145c0:	str	r1, [sp, #132]	; 0x84
   145c4:	mov	r1, r4
   145c8:	ldr	r5, [sp, #132]	; 0x84
   145cc:	str	r5, [sp]
   145d0:	str	lr, [sp, #4]
   145d4:	bl	10f68 <fprintf@plt>
   145d8:	str	r0, [sp, #128]	; 0x80
   145dc:	b	1493c <__assert_fail@plt+0x3914>
   145e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145e4:	movw	r1, #52459	; 0xcceb
   145e8:	movt	r1, #1
   145ec:	str	r0, [sp, #124]	; 0x7c
   145f0:	mov	r0, r1
   145f4:	bl	10f38 <gettext@plt>
   145f8:	ldr	r1, [fp, #8]
   145fc:	ldr	r2, [r1]
   14600:	ldr	r1, [fp, #8]
   14604:	ldr	r3, [r1, #4]
   14608:	ldr	r1, [fp, #8]
   1460c:	ldr	r1, [r1, #8]
   14610:	ldr	lr, [fp, #8]
   14614:	ldr	lr, [lr, #12]
   14618:	ldr	ip, [fp, #8]
   1461c:	ldr	ip, [ip, #16]
   14620:	ldr	r4, [sp, #124]	; 0x7c
   14624:	str	r0, [sp, #120]	; 0x78
   14628:	mov	r0, r4
   1462c:	ldr	r5, [sp, #120]	; 0x78
   14630:	str	r1, [sp, #116]	; 0x74
   14634:	mov	r1, r5
   14638:	ldr	r6, [sp, #116]	; 0x74
   1463c:	str	r6, [sp]
   14640:	str	lr, [sp, #4]
   14644:	str	ip, [sp, #8]
   14648:	bl	10f68 <fprintf@plt>
   1464c:	str	r0, [sp, #112]	; 0x70
   14650:	b	1493c <__assert_fail@plt+0x3914>
   14654:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14658:	movw	r1, #52495	; 0xcd0f
   1465c:	movt	r1, #1
   14660:	str	r0, [sp, #108]	; 0x6c
   14664:	mov	r0, r1
   14668:	bl	10f38 <gettext@plt>
   1466c:	ldr	r1, [fp, #8]
   14670:	ldr	r2, [r1]
   14674:	ldr	r1, [fp, #8]
   14678:	ldr	r3, [r1, #4]
   1467c:	ldr	r1, [fp, #8]
   14680:	ldr	r1, [r1, #8]
   14684:	ldr	lr, [fp, #8]
   14688:	ldr	lr, [lr, #12]
   1468c:	ldr	ip, [fp, #8]
   14690:	ldr	ip, [ip, #16]
   14694:	ldr	r4, [fp, #8]
   14698:	ldr	r4, [r4, #20]
   1469c:	ldr	r5, [sp, #108]	; 0x6c
   146a0:	str	r0, [sp, #104]	; 0x68
   146a4:	mov	r0, r5
   146a8:	ldr	r6, [sp, #104]	; 0x68
   146ac:	str	r1, [sp, #100]	; 0x64
   146b0:	mov	r1, r6
   146b4:	ldr	r7, [sp, #100]	; 0x64
   146b8:	str	r7, [sp]
   146bc:	str	lr, [sp, #4]
   146c0:	str	ip, [sp, #8]
   146c4:	str	r4, [sp, #12]
   146c8:	bl	10f68 <fprintf@plt>
   146cc:	str	r0, [sp, #96]	; 0x60
   146d0:	b	1493c <__assert_fail@plt+0x3914>
   146d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   146d8:	movw	r1, #52535	; 0xcd37
   146dc:	movt	r1, #1
   146e0:	str	r0, [sp, #92]	; 0x5c
   146e4:	mov	r0, r1
   146e8:	bl	10f38 <gettext@plt>
   146ec:	ldr	r1, [fp, #8]
   146f0:	ldr	r2, [r1]
   146f4:	ldr	r1, [fp, #8]
   146f8:	ldr	r3, [r1, #4]
   146fc:	ldr	r1, [fp, #8]
   14700:	ldr	r1, [r1, #8]
   14704:	ldr	lr, [fp, #8]
   14708:	ldr	lr, [lr, #12]
   1470c:	ldr	ip, [fp, #8]
   14710:	ldr	ip, [ip, #16]
   14714:	ldr	r4, [fp, #8]
   14718:	ldr	r4, [r4, #20]
   1471c:	ldr	r5, [fp, #8]
   14720:	ldr	r5, [r5, #24]
   14724:	ldr	r6, [sp, #92]	; 0x5c
   14728:	str	r0, [sp, #88]	; 0x58
   1472c:	mov	r0, r6
   14730:	ldr	r7, [sp, #88]	; 0x58
   14734:	str	r1, [sp, #84]	; 0x54
   14738:	mov	r1, r7
   1473c:	ldr	r8, [sp, #84]	; 0x54
   14740:	str	r8, [sp]
   14744:	str	lr, [sp, #4]
   14748:	str	ip, [sp, #8]
   1474c:	str	r4, [sp, #12]
   14750:	str	r5, [sp, #16]
   14754:	bl	10f68 <fprintf@plt>
   14758:	str	r0, [sp, #80]	; 0x50
   1475c:	b	1493c <__assert_fail@plt+0x3914>
   14760:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14764:	movw	r1, #52579	; 0xcd63
   14768:	movt	r1, #1
   1476c:	str	r0, [sp, #76]	; 0x4c
   14770:	mov	r0, r1
   14774:	bl	10f38 <gettext@plt>
   14778:	ldr	r1, [fp, #8]
   1477c:	ldr	r2, [r1]
   14780:	ldr	r1, [fp, #8]
   14784:	ldr	r3, [r1, #4]
   14788:	ldr	r1, [fp, #8]
   1478c:	ldr	r1, [r1, #8]
   14790:	ldr	lr, [fp, #8]
   14794:	ldr	lr, [lr, #12]
   14798:	ldr	ip, [fp, #8]
   1479c:	ldr	ip, [ip, #16]
   147a0:	ldr	r4, [fp, #8]
   147a4:	ldr	r4, [r4, #20]
   147a8:	ldr	r5, [fp, #8]
   147ac:	ldr	r5, [r5, #24]
   147b0:	ldr	r6, [fp, #8]
   147b4:	ldr	r6, [r6, #28]
   147b8:	ldr	r7, [sp, #76]	; 0x4c
   147bc:	str	r0, [sp, #72]	; 0x48
   147c0:	mov	r0, r7
   147c4:	ldr	r8, [sp, #72]	; 0x48
   147c8:	str	r1, [sp, #68]	; 0x44
   147cc:	mov	r1, r8
   147d0:	ldr	r9, [sp, #68]	; 0x44
   147d4:	str	r9, [sp]
   147d8:	str	lr, [sp, #4]
   147dc:	str	ip, [sp, #8]
   147e0:	str	r4, [sp, #12]
   147e4:	str	r5, [sp, #16]
   147e8:	str	r6, [sp, #20]
   147ec:	bl	10f68 <fprintf@plt>
   147f0:	str	r0, [sp, #64]	; 0x40
   147f4:	b	1493c <__assert_fail@plt+0x3914>
   147f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147fc:	movw	r1, #52627	; 0xcd93
   14800:	movt	r1, #1
   14804:	str	r0, [sp, #60]	; 0x3c
   14808:	mov	r0, r1
   1480c:	bl	10f38 <gettext@plt>
   14810:	ldr	r1, [fp, #8]
   14814:	ldr	r2, [r1]
   14818:	ldr	r1, [fp, #8]
   1481c:	ldr	r3, [r1, #4]
   14820:	ldr	r1, [fp, #8]
   14824:	ldr	r1, [r1, #8]
   14828:	ldr	lr, [fp, #8]
   1482c:	ldr	lr, [lr, #12]
   14830:	ldr	ip, [fp, #8]
   14834:	ldr	ip, [ip, #16]
   14838:	ldr	r4, [fp, #8]
   1483c:	ldr	r4, [r4, #20]
   14840:	ldr	r5, [fp, #8]
   14844:	ldr	r5, [r5, #24]
   14848:	ldr	r6, [fp, #8]
   1484c:	ldr	r6, [r6, #28]
   14850:	ldr	r7, [fp, #8]
   14854:	ldr	r7, [r7, #32]
   14858:	ldr	r8, [sp, #60]	; 0x3c
   1485c:	str	r0, [sp, #56]	; 0x38
   14860:	mov	r0, r8
   14864:	ldr	r9, [sp, #56]	; 0x38
   14868:	str	r1, [sp, #52]	; 0x34
   1486c:	mov	r1, r9
   14870:	ldr	sl, [sp, #52]	; 0x34
   14874:	str	sl, [sp]
   14878:	str	lr, [sp, #4]
   1487c:	str	ip, [sp, #8]
   14880:	str	r4, [sp, #12]
   14884:	str	r5, [sp, #16]
   14888:	str	r6, [sp, #20]
   1488c:	str	r7, [sp, #24]
   14890:	bl	10f68 <fprintf@plt>
   14894:	str	r0, [sp, #48]	; 0x30
   14898:	b	1493c <__assert_fail@plt+0x3914>
   1489c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148a0:	movw	r1, #52679	; 0xcdc7
   148a4:	movt	r1, #1
   148a8:	str	r0, [sp, #44]	; 0x2c
   148ac:	mov	r0, r1
   148b0:	bl	10f38 <gettext@plt>
   148b4:	ldr	r1, [fp, #8]
   148b8:	ldr	r2, [r1]
   148bc:	ldr	r1, [fp, #8]
   148c0:	ldr	r3, [r1, #4]
   148c4:	ldr	r1, [fp, #8]
   148c8:	ldr	r1, [r1, #8]
   148cc:	ldr	lr, [fp, #8]
   148d0:	ldr	lr, [lr, #12]
   148d4:	ldr	ip, [fp, #8]
   148d8:	ldr	ip, [ip, #16]
   148dc:	ldr	r4, [fp, #8]
   148e0:	ldr	r4, [r4, #20]
   148e4:	ldr	r5, [fp, #8]
   148e8:	ldr	r5, [r5, #24]
   148ec:	ldr	r6, [fp, #8]
   148f0:	ldr	r6, [r6, #28]
   148f4:	ldr	r7, [fp, #8]
   148f8:	ldr	r7, [r7, #32]
   148fc:	ldr	r8, [sp, #44]	; 0x2c
   14900:	str	r0, [sp, #40]	; 0x28
   14904:	mov	r0, r8
   14908:	ldr	r9, [sp, #40]	; 0x28
   1490c:	str	r1, [sp, #36]	; 0x24
   14910:	mov	r1, r9
   14914:	ldr	sl, [sp, #36]	; 0x24
   14918:	str	sl, [sp]
   1491c:	str	lr, [sp, #4]
   14920:	str	ip, [sp, #8]
   14924:	str	r4, [sp, #12]
   14928:	str	r5, [sp, #16]
   1492c:	str	r6, [sp, #20]
   14930:	str	r7, [sp, #24]
   14934:	bl	10f68 <fprintf@plt>
   14938:	str	r0, [sp, #32]
   1493c:	sub	sp, fp, #28
   14940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14944:	push	{fp, lr}
   14948:	mov	fp, sp
   1494c:	sub	sp, sp, #32
   14950:	ldr	ip, [fp, #8]
   14954:	str	r0, [fp, #-4]
   14958:	str	r1, [fp, #-8]
   1495c:	str	r2, [fp, #-12]
   14960:	str	r3, [sp, #16]
   14964:	movw	r0, #0
   14968:	str	r0, [sp, #12]
   1496c:	str	ip, [sp, #8]
   14970:	ldr	r0, [fp, #8]
   14974:	ldr	r1, [sp, #12]
   14978:	add	r0, r0, r1, lsl #2
   1497c:	ldr	r0, [r0]
   14980:	movw	r1, #0
   14984:	cmp	r0, r1
   14988:	beq	149a0 <__assert_fail@plt+0x3978>
   1498c:	b	14990 <__assert_fail@plt+0x3968>
   14990:	ldr	r0, [sp, #12]
   14994:	add	r0, r0, #1
   14998:	str	r0, [sp, #12]
   1499c:	b	14970 <__assert_fail@plt+0x3948>
   149a0:	ldr	r0, [fp, #-4]
   149a4:	ldr	r1, [fp, #-8]
   149a8:	ldr	r2, [fp, #-12]
   149ac:	ldr	r3, [sp, #16]
   149b0:	ldr	ip, [fp, #8]
   149b4:	ldr	lr, [sp, #12]
   149b8:	str	ip, [sp]
   149bc:	str	lr, [sp, #4]
   149c0:	bl	14320 <__assert_fail@plt+0x32f8>
   149c4:	mov	sp, fp
   149c8:	pop	{fp, pc}
   149cc:	push	{fp, lr}
   149d0:	mov	fp, sp
   149d4:	sub	sp, sp, #80	; 0x50
   149d8:	ldr	ip, [fp, #8]
   149dc:	str	ip, [fp, #-4]
   149e0:	str	r0, [fp, #-8]
   149e4:	str	r1, [fp, #-12]
   149e8:	str	r2, [fp, #-16]
   149ec:	str	r3, [fp, #-20]	; 0xffffffec
   149f0:	movw	r0, #0
   149f4:	str	r0, [fp, #-24]	; 0xffffffe8
   149f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149fc:	cmp	r0, #10
   14a00:	movw	r0, #0
   14a04:	str	r0, [sp, #12]
   14a08:	bcs	14a40 <__assert_fail@plt+0x3a18>
   14a0c:	ldr	r0, [fp, #-4]
   14a10:	add	r1, r0, #4
   14a14:	str	r1, [fp, #-4]
   14a18:	ldr	r0, [r0]
   14a1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14a20:	add	r2, sp, #16
   14a24:	add	r1, r2, r1, lsl #2
   14a28:	str	r0, [r1]
   14a2c:	movw	r1, #0
   14a30:	cmp	r0, r1
   14a34:	movw	r0, #0
   14a38:	movne	r0, #1
   14a3c:	str	r0, [sp, #12]
   14a40:	ldr	r0, [sp, #12]
   14a44:	tst	r0, #1
   14a48:	beq	14a60 <__assert_fail@plt+0x3a38>
   14a4c:	b	14a50 <__assert_fail@plt+0x3a28>
   14a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a54:	add	r0, r0, #1
   14a58:	str	r0, [fp, #-24]	; 0xffffffe8
   14a5c:	b	149f8 <__assert_fail@plt+0x39d0>
   14a60:	add	r0, sp, #16
   14a64:	ldr	r1, [fp, #-8]
   14a68:	ldr	r2, [fp, #-12]
   14a6c:	ldr	r3, [fp, #-16]
   14a70:	ldr	ip, [fp, #-20]	; 0xffffffec
   14a74:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14a78:	str	r0, [sp, #8]
   14a7c:	mov	r0, r1
   14a80:	mov	r1, r2
   14a84:	mov	r2, r3
   14a88:	mov	r3, ip
   14a8c:	ldr	ip, [sp, #8]
   14a90:	str	ip, [sp]
   14a94:	str	lr, [sp, #4]
   14a98:	bl	14320 <__assert_fail@plt+0x32f8>
   14a9c:	mov	sp, fp
   14aa0:	pop	{fp, pc}
   14aa4:	push	{fp, lr}
   14aa8:	mov	fp, sp
   14aac:	sub	sp, sp, #32
   14ab0:	str	r0, [fp, #-4]
   14ab4:	str	r1, [fp, #-8]
   14ab8:	str	r2, [fp, #-12]
   14abc:	str	r3, [sp, #16]
   14ac0:	add	r0, fp, #8
   14ac4:	str	r0, [sp, #12]
   14ac8:	ldr	r0, [fp, #-4]
   14acc:	ldr	r1, [fp, #-8]
   14ad0:	ldr	r2, [fp, #-12]
   14ad4:	ldr	r3, [sp, #16]
   14ad8:	ldr	ip, [sp, #12]
   14adc:	mov	lr, sp
   14ae0:	str	ip, [lr]
   14ae4:	bl	149cc <__assert_fail@plt+0x39a4>
   14ae8:	add	r0, sp, #12
   14aec:	str	r0, [sp, #8]
   14af0:	mov	sp, fp
   14af4:	pop	{fp, pc}
   14af8:	push	{fp, lr}
   14afc:	mov	fp, sp
   14b00:	sub	sp, sp, #16
   14b04:	movw	r0, #57668	; 0xe144
   14b08:	movt	r0, #2
   14b0c:	ldr	r1, [r0]
   14b10:	movw	r0, #51012	; 0xc744
   14b14:	movt	r0, #1
   14b18:	bl	10ddc <fputs_unlocked@plt>
   14b1c:	movw	r1, #52739	; 0xce03
   14b20:	movt	r1, #1
   14b24:	str	r0, [fp, #-4]
   14b28:	mov	r0, r1
   14b2c:	bl	10f38 <gettext@plt>
   14b30:	movw	r1, #52759	; 0xce17
   14b34:	movt	r1, #1
   14b38:	bl	10e00 <printf@plt>
   14b3c:	movw	r1, #52781	; 0xce2d
   14b40:	movt	r1, #1
   14b44:	str	r0, [sp, #8]
   14b48:	mov	r0, r1
   14b4c:	bl	10f38 <gettext@plt>
   14b50:	movw	r1, #51260	; 0xc83c
   14b54:	movt	r1, #1
   14b58:	movw	r2, #51447	; 0xc8f7
   14b5c:	movt	r2, #1
   14b60:	bl	10e00 <printf@plt>
   14b64:	movw	r1, #52801	; 0xce41
   14b68:	movt	r1, #1
   14b6c:	str	r0, [sp, #4]
   14b70:	mov	r0, r1
   14b74:	bl	10f38 <gettext@plt>
   14b78:	movw	r1, #52840	; 0xce68
   14b7c:	movt	r1, #1
   14b80:	bl	10e00 <printf@plt>
   14b84:	str	r0, [sp]
   14b88:	mov	sp, fp
   14b8c:	pop	{fp, pc}
   14b90:	push	{fp, lr}
   14b94:	mov	fp, sp
   14b98:	sub	sp, sp, #16
   14b9c:	str	r0, [fp, #-4]
   14ba0:	str	r1, [sp, #8]
   14ba4:	str	r2, [sp, #4]
   14ba8:	ldr	r0, [fp, #-4]
   14bac:	ldr	r1, [sp, #8]
   14bb0:	ldr	r2, [sp, #4]
   14bb4:	bl	14bc0 <__assert_fail@plt+0x3b98>
   14bb8:	mov	sp, fp
   14bbc:	pop	{fp, pc}
   14bc0:	push	{fp, lr}
   14bc4:	mov	fp, sp
   14bc8:	sub	sp, sp, #16
   14bcc:	str	r0, [fp, #-4]
   14bd0:	str	r1, [sp, #8]
   14bd4:	str	r2, [sp, #4]
   14bd8:	ldr	r0, [fp, #-4]
   14bdc:	ldr	r1, [sp, #8]
   14be0:	ldr	r2, [sp, #4]
   14be4:	bl	1ae30 <__assert_fail@plt+0x9e08>
   14be8:	str	r0, [sp]
   14bec:	ldr	r0, [sp]
   14bf0:	movw	r1, #0
   14bf4:	cmp	r0, r1
   14bf8:	bne	14c28 <__assert_fail@plt+0x3c00>
   14bfc:	ldr	r0, [fp, #-4]
   14c00:	movw	r1, #0
   14c04:	cmp	r0, r1
   14c08:	beq	14c24 <__assert_fail@plt+0x3bfc>
   14c0c:	ldr	r0, [sp, #8]
   14c10:	cmp	r0, #0
   14c14:	beq	14c28 <__assert_fail@plt+0x3c00>
   14c18:	ldr	r0, [sp, #4]
   14c1c:	cmp	r0, #0
   14c20:	beq	14c28 <__assert_fail@plt+0x3c00>
   14c24:	bl	17a10 <__assert_fail@plt+0x69e8>
   14c28:	ldr	r0, [sp]
   14c2c:	mov	sp, fp
   14c30:	pop	{fp, pc}
   14c34:	push	{fp, lr}
   14c38:	mov	fp, sp
   14c3c:	sub	sp, sp, #8
   14c40:	str	r0, [sp, #4]
   14c44:	ldr	r0, [sp, #4]
   14c48:	bl	19f8c <__assert_fail@plt+0x8f64>
   14c4c:	bl	14c58 <__assert_fail@plt+0x3c30>
   14c50:	mov	sp, fp
   14c54:	pop	{fp, pc}
   14c58:	push	{fp, lr}
   14c5c:	mov	fp, sp
   14c60:	sub	sp, sp, #8
   14c64:	str	r0, [sp, #4]
   14c68:	ldr	r0, [sp, #4]
   14c6c:	movw	r1, #0
   14c70:	cmp	r0, r1
   14c74:	bne	14c7c <__assert_fail@plt+0x3c54>
   14c78:	bl	17a10 <__assert_fail@plt+0x69e8>
   14c7c:	ldr	r0, [sp, #4]
   14c80:	mov	sp, fp
   14c84:	pop	{fp, pc}
   14c88:	push	{fp, lr}
   14c8c:	mov	fp, sp
   14c90:	sub	sp, sp, #8
   14c94:	str	r0, [sp, #4]
   14c98:	ldr	r0, [sp, #4]
   14c9c:	bl	1ab6c <__assert_fail@plt+0x9b44>
   14ca0:	bl	14c58 <__assert_fail@plt+0x3c30>
   14ca4:	mov	sp, fp
   14ca8:	pop	{fp, pc}
   14cac:	push	{fp, lr}
   14cb0:	mov	fp, sp
   14cb4:	sub	sp, sp, #8
   14cb8:	str	r0, [sp, #4]
   14cbc:	ldr	r0, [sp, #4]
   14cc0:	bl	14c34 <__assert_fail@plt+0x3c0c>
   14cc4:	mov	sp, fp
   14cc8:	pop	{fp, pc}
   14ccc:	push	{fp, lr}
   14cd0:	mov	fp, sp
   14cd4:	sub	sp, sp, #16
   14cd8:	str	r0, [fp, #-4]
   14cdc:	str	r1, [sp, #8]
   14ce0:	ldr	r0, [fp, #-4]
   14ce4:	ldr	r1, [sp, #8]
   14ce8:	bl	19ffc <__assert_fail@plt+0x8fd4>
   14cec:	str	r0, [sp, #4]
   14cf0:	ldr	r0, [sp, #4]
   14cf4:	movw	r1, #0
   14cf8:	cmp	r0, r1
   14cfc:	bne	14d20 <__assert_fail@plt+0x3cf8>
   14d00:	ldr	r0, [fp, #-4]
   14d04:	movw	r1, #0
   14d08:	cmp	r0, r1
   14d0c:	beq	14d1c <__assert_fail@plt+0x3cf4>
   14d10:	ldr	r0, [sp, #8]
   14d14:	cmp	r0, #0
   14d18:	beq	14d20 <__assert_fail@plt+0x3cf8>
   14d1c:	bl	17a10 <__assert_fail@plt+0x69e8>
   14d20:	ldr	r0, [sp, #4]
   14d24:	mov	sp, fp
   14d28:	pop	{fp, pc}
   14d2c:	push	{fp, lr}
   14d30:	mov	fp, sp
   14d34:	sub	sp, sp, #8
   14d38:	str	r0, [sp, #4]
   14d3c:	str	r1, [sp]
   14d40:	ldr	r0, [sp, #4]
   14d44:	ldr	r1, [sp]
   14d48:	bl	1abac <__assert_fail@plt+0x9b84>
   14d4c:	bl	14c58 <__assert_fail@plt+0x3c30>
   14d50:	mov	sp, fp
   14d54:	pop	{fp, pc}
   14d58:	push	{fp, lr}
   14d5c:	mov	fp, sp
   14d60:	sub	sp, sp, #16
   14d64:	str	r0, [fp, #-4]
   14d68:	str	r1, [sp, #8]
   14d6c:	str	r2, [sp, #4]
   14d70:	ldr	r0, [fp, #-4]
   14d74:	ldr	r1, [sp, #8]
   14d78:	ldr	r2, [sp, #4]
   14d7c:	bl	1aca4 <__assert_fail@plt+0x9c7c>
   14d80:	bl	14c58 <__assert_fail@plt+0x3c30>
   14d84:	mov	sp, fp
   14d88:	pop	{fp, pc}
   14d8c:	push	{fp, lr}
   14d90:	mov	fp, sp
   14d94:	sub	sp, sp, #8
   14d98:	str	r0, [sp, #4]
   14d9c:	str	r1, [sp]
   14da0:	ldr	r1, [sp, #4]
   14da4:	ldr	r2, [sp]
   14da8:	movw	r0, #0
   14dac:	bl	14bc0 <__assert_fail@plt+0x3b98>
   14db0:	mov	sp, fp
   14db4:	pop	{fp, pc}
   14db8:	push	{fp, lr}
   14dbc:	mov	fp, sp
   14dc0:	sub	sp, sp, #8
   14dc4:	str	r0, [sp, #4]
   14dc8:	str	r1, [sp]
   14dcc:	ldr	r1, [sp, #4]
   14dd0:	ldr	r2, [sp]
   14dd4:	movw	r0, #0
   14dd8:	bl	14d58 <__assert_fail@plt+0x3d30>
   14ddc:	mov	sp, fp
   14de0:	pop	{fp, pc}
   14de4:	push	{fp, lr}
   14de8:	mov	fp, sp
   14dec:	sub	sp, sp, #8
   14df0:	str	r0, [sp, #4]
   14df4:	str	r1, [sp]
   14df8:	ldr	r0, [sp, #4]
   14dfc:	ldr	r1, [sp]
   14e00:	movw	r2, #1
   14e04:	bl	14e10 <__assert_fail@plt+0x3de8>
   14e08:	mov	sp, fp
   14e0c:	pop	{fp, pc}
   14e10:	push	{fp, lr}
   14e14:	mov	fp, sp
   14e18:	sub	sp, sp, #16
   14e1c:	str	r0, [fp, #-4]
   14e20:	str	r1, [sp, #8]
   14e24:	str	r2, [sp, #4]
   14e28:	ldr	r0, [sp, #8]
   14e2c:	ldr	r0, [r0]
   14e30:	str	r0, [sp]
   14e34:	ldr	r0, [fp, #-4]
   14e38:	movw	r1, #0
   14e3c:	cmp	r0, r1
   14e40:	bne	14e8c <__assert_fail@plt+0x3e64>
   14e44:	ldr	r0, [sp]
   14e48:	cmp	r0, #0
   14e4c:	bne	14e88 <__assert_fail@plt+0x3e60>
   14e50:	ldr	r0, [sp, #4]
   14e54:	movw	r1, #64	; 0x40
   14e58:	udiv	r0, r1, r0
   14e5c:	str	r0, [sp]
   14e60:	ldr	r0, [sp]
   14e64:	cmp	r0, #0
   14e68:	movw	r0, #0
   14e6c:	movne	r0, #1
   14e70:	mvn	r1, #0
   14e74:	eor	r0, r0, r1
   14e78:	and	r0, r0, #1
   14e7c:	ldr	r1, [sp]
   14e80:	add	r0, r1, r0
   14e84:	str	r0, [sp]
   14e88:	b	14ebc <__assert_fail@plt+0x3e94>
   14e8c:	ldr	r0, [sp]
   14e90:	ldr	r1, [sp]
   14e94:	lsr	r1, r1, #1
   14e98:	add	r1, r1, #1
   14e9c:	adds	r0, r0, r1
   14ea0:	mov	r1, #0
   14ea4:	adc	r1, r1, #0
   14ea8:	str	r0, [sp]
   14eac:	tst	r1, #1
   14eb0:	beq	14eb8 <__assert_fail@plt+0x3e90>
   14eb4:	bl	17a10 <__assert_fail@plt+0x69e8>
   14eb8:	b	14ebc <__assert_fail@plt+0x3e94>
   14ebc:	ldr	r0, [fp, #-4]
   14ec0:	ldr	r1, [sp]
   14ec4:	ldr	r2, [sp, #4]
   14ec8:	bl	14bc0 <__assert_fail@plt+0x3b98>
   14ecc:	str	r0, [fp, #-4]
   14ed0:	ldr	r0, [sp]
   14ed4:	ldr	r1, [sp, #8]
   14ed8:	str	r0, [r1]
   14edc:	ldr	r0, [fp, #-4]
   14ee0:	mov	sp, fp
   14ee4:	pop	{fp, pc}
   14ee8:	push	{fp, lr}
   14eec:	mov	fp, sp
   14ef0:	sub	sp, sp, #376	; 0x178
   14ef4:	ldr	ip, [fp, #8]
   14ef8:	str	r0, [fp, #-4]
   14efc:	str	r1, [fp, #-8]
   14f00:	str	r2, [fp, #-12]
   14f04:	str	r3, [fp, #-16]
   14f08:	ldr	r0, [fp, #-8]
   14f0c:	ldr	r0, [r0]
   14f10:	str	r0, [fp, #-20]	; 0xffffffec
   14f14:	ldr	r0, [fp, #-20]	; 0xffffffec
   14f18:	ldr	r1, [fp, #-20]	; 0xffffffec
   14f1c:	asr	r1, r1, #1
   14f20:	add	r1, r0, r1
   14f24:	mov	r2, #1
   14f28:	cmp	r1, r0
   14f2c:	movwvc	r2, #0
   14f30:	str	r1, [fp, #-24]	; 0xffffffe8
   14f34:	tst	r2, #1
   14f38:	str	ip, [fp, #-36]	; 0xffffffdc
   14f3c:	beq	14f48 <__assert_fail@plt+0x3f20>
   14f40:	ldr	r0, [pc, #4044]	; 15f14 <__assert_fail@plt+0x4eec>
   14f44:	str	r0, [fp, #-24]	; 0xffffffe8
   14f48:	ldr	r0, [fp, #-16]
   14f4c:	movw	r1, #0
   14f50:	cmp	r1, r0
   14f54:	bgt	14f70 <__assert_fail@plt+0x3f48>
   14f58:	ldr	r0, [fp, #-16]
   14f5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14f60:	cmp	r0, r1
   14f64:	bge	14f70 <__assert_fail@plt+0x3f48>
   14f68:	ldr	r0, [fp, #-16]
   14f6c:	str	r0, [fp, #-24]	; 0xffffffe8
   14f70:	b	15348 <__assert_fail@plt+0x4320>
   14f74:	b	14f78 <__assert_fail@plt+0x3f50>
   14f78:	ldr	r0, [fp, #8]
   14f7c:	cmp	r0, #0
   14f80:	bge	15094 <__assert_fail@plt+0x406c>
   14f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f88:	cmp	r0, #0
   14f8c:	bge	15018 <__assert_fail@plt+0x3ff0>
   14f90:	b	14f94 <__assert_fail@plt+0x3f6c>
   14f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f98:	ldr	r1, [fp, #8]
   14f9c:	movw	r2, #127	; 0x7f
   14fa0:	sdiv	r1, r2, r1
   14fa4:	cmp	r0, r1
   14fa8:	blt	15134 <__assert_fail@plt+0x410c>
   14fac:	b	1514c <__assert_fail@plt+0x4124>
   14fb0:	b	14fb4 <__assert_fail@plt+0x3f8c>
   14fb4:	ldr	r0, [pc, #4076]	; 15fa8 <__assert_fail@plt+0x4f80>
   14fb8:	ldr	r1, [fp, #8]
   14fbc:	cmp	r1, r0
   14fc0:	blt	14fd8 <__assert_fail@plt+0x3fb0>
   14fc4:	b	14fe4 <__assert_fail@plt+0x3fbc>
   14fc8:	ldr	r0, [fp, #8]
   14fcc:	movw	r1, #0
   14fd0:	cmp	r1, r0
   14fd4:	bge	14fe4 <__assert_fail@plt+0x3fbc>
   14fd8:	movw	r0, #0
   14fdc:	str	r0, [fp, #-40]	; 0xffffffd8
   14fe0:	b	14ffc <__assert_fail@plt+0x3fd4>
   14fe4:	ldr	r0, [fp, #8]
   14fe8:	movw	r1, #0
   14fec:	sub	r0, r1, r0
   14ff0:	movw	r1, #127	; 0x7f
   14ff4:	sdiv	r0, r1, r0
   14ff8:	str	r0, [fp, #-40]	; 0xffffffd8
   14ffc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15000:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15004:	mvn	r2, #0
   15008:	sub	r1, r2, r1
   1500c:	cmp	r0, r1
   15010:	ble	15134 <__assert_fail@plt+0x410c>
   15014:	b	1514c <__assert_fail@plt+0x4124>
   15018:	b	1501c <__assert_fail@plt+0x3ff4>
   1501c:	b	15078 <__assert_fail@plt+0x4050>
   15020:	b	15078 <__assert_fail@plt+0x4050>
   15024:	ldr	r0, [fp, #8]
   15028:	cmn	r0, #1
   1502c:	bne	15078 <__assert_fail@plt+0x4050>
   15030:	b	15034 <__assert_fail@plt+0x400c>
   15034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15038:	mvn	r1, #127	; 0x7f
   1503c:	add	r0, r0, r1
   15040:	movw	r1, #0
   15044:	cmp	r1, r0
   15048:	blt	15134 <__assert_fail@plt+0x410c>
   1504c:	b	1514c <__assert_fail@plt+0x4124>
   15050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15054:	movw	r1, #0
   15058:	cmp	r1, r0
   1505c:	bge	1514c <__assert_fail@plt+0x4124>
   15060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15064:	sub	r0, r0, #1
   15068:	movw	r1, #127	; 0x7f
   1506c:	cmp	r1, r0
   15070:	blt	15134 <__assert_fail@plt+0x410c>
   15074:	b	1514c <__assert_fail@plt+0x4124>
   15078:	ldr	r0, [fp, #8]
   1507c:	mvn	r1, #127	; 0x7f
   15080:	sdiv	r0, r1, r0
   15084:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15088:	cmp	r0, r1
   1508c:	blt	15134 <__assert_fail@plt+0x410c>
   15090:	b	1514c <__assert_fail@plt+0x4124>
   15094:	ldr	r0, [fp, #8]
   15098:	cmp	r0, #0
   1509c:	bne	150a4 <__assert_fail@plt+0x407c>
   150a0:	b	1514c <__assert_fail@plt+0x4124>
   150a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150a8:	cmp	r0, #0
   150ac:	bge	1511c <__assert_fail@plt+0x40f4>
   150b0:	b	150b4 <__assert_fail@plt+0x408c>
   150b4:	b	15100 <__assert_fail@plt+0x40d8>
   150b8:	b	15100 <__assert_fail@plt+0x40d8>
   150bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150c0:	cmn	r0, #1
   150c4:	bne	15100 <__assert_fail@plt+0x40d8>
   150c8:	b	150cc <__assert_fail@plt+0x40a4>
   150cc:	ldr	r0, [fp, #8]
   150d0:	mvn	r1, #127	; 0x7f
   150d4:	add	r0, r0, r1
   150d8:	movw	r1, #0
   150dc:	cmp	r1, r0
   150e0:	blt	15134 <__assert_fail@plt+0x410c>
   150e4:	b	1514c <__assert_fail@plt+0x4124>
   150e8:	ldr	r0, [fp, #8]
   150ec:	sub	r0, r0, #1
   150f0:	movw	r1, #127	; 0x7f
   150f4:	cmp	r1, r0
   150f8:	blt	15134 <__assert_fail@plt+0x410c>
   150fc:	b	1514c <__assert_fail@plt+0x4124>
   15100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15104:	mvn	r1, #127	; 0x7f
   15108:	sdiv	r0, r1, r0
   1510c:	ldr	r1, [fp, #8]
   15110:	cmp	r0, r1
   15114:	blt	15134 <__assert_fail@plt+0x410c>
   15118:	b	1514c <__assert_fail@plt+0x4124>
   1511c:	ldr	r0, [fp, #8]
   15120:	movw	r1, #127	; 0x7f
   15124:	sdiv	r0, r1, r0
   15128:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1512c:	cmp	r0, r1
   15130:	bge	1514c <__assert_fail@plt+0x4124>
   15134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15138:	ldr	r1, [fp, #8]
   1513c:	mul	r0, r0, r1
   15140:	sxtb	r0, r0
   15144:	str	r0, [fp, #-28]	; 0xffffffe4
   15148:	b	16360 <__assert_fail@plt+0x5338>
   1514c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15150:	ldr	r1, [fp, #8]
   15154:	mul	r0, r0, r1
   15158:	sxtb	r0, r0
   1515c:	str	r0, [fp, #-28]	; 0xffffffe4
   15160:	b	16370 <__assert_fail@plt+0x5348>
   15164:	ldr	r0, [fp, #8]
   15168:	cmp	r0, #0
   1516c:	bge	1527c <__assert_fail@plt+0x4254>
   15170:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15174:	cmp	r0, #0
   15178:	bge	15204 <__assert_fail@plt+0x41dc>
   1517c:	b	15180 <__assert_fail@plt+0x4158>
   15180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15184:	ldr	r1, [fp, #8]
   15188:	movw	r2, #255	; 0xff
   1518c:	sdiv	r1, r2, r1
   15190:	cmp	r0, r1
   15194:	blt	15318 <__assert_fail@plt+0x42f0>
   15198:	b	15330 <__assert_fail@plt+0x4308>
   1519c:	b	151a0 <__assert_fail@plt+0x4178>
   151a0:	ldr	r0, [pc, #3584]	; 15fa8 <__assert_fail@plt+0x4f80>
   151a4:	ldr	r1, [fp, #8]
   151a8:	cmp	r1, r0
   151ac:	blt	151c4 <__assert_fail@plt+0x419c>
   151b0:	b	151d0 <__assert_fail@plt+0x41a8>
   151b4:	ldr	r0, [fp, #8]
   151b8:	movw	r1, #0
   151bc:	cmp	r1, r0
   151c0:	bge	151d0 <__assert_fail@plt+0x41a8>
   151c4:	movw	r0, #0
   151c8:	str	r0, [fp, #-44]	; 0xffffffd4
   151cc:	b	151e8 <__assert_fail@plt+0x41c0>
   151d0:	ldr	r0, [fp, #8]
   151d4:	movw	r1, #0
   151d8:	sub	r0, r1, r0
   151dc:	movw	r1, #255	; 0xff
   151e0:	sdiv	r0, r1, r0
   151e4:	str	r0, [fp, #-44]	; 0xffffffd4
   151e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   151f0:	mvn	r2, #0
   151f4:	sub	r1, r2, r1
   151f8:	cmp	r0, r1
   151fc:	ble	15318 <__assert_fail@plt+0x42f0>
   15200:	b	15330 <__assert_fail@plt+0x4308>
   15204:	b	15208 <__assert_fail@plt+0x41e0>
   15208:	b	15260 <__assert_fail@plt+0x4238>
   1520c:	b	15260 <__assert_fail@plt+0x4238>
   15210:	ldr	r0, [fp, #8]
   15214:	cmn	r0, #1
   15218:	bne	15260 <__assert_fail@plt+0x4238>
   1521c:	b	15220 <__assert_fail@plt+0x41f8>
   15220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15224:	add	r0, r0, #0
   15228:	movw	r1, #0
   1522c:	cmp	r1, r0
   15230:	blt	15318 <__assert_fail@plt+0x42f0>
   15234:	b	15330 <__assert_fail@plt+0x4308>
   15238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1523c:	movw	r1, #0
   15240:	cmp	r1, r0
   15244:	bge	15330 <__assert_fail@plt+0x4308>
   15248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1524c:	sub	r0, r0, #1
   15250:	mvn	r1, #0
   15254:	cmp	r1, r0
   15258:	blt	15318 <__assert_fail@plt+0x42f0>
   1525c:	b	15330 <__assert_fail@plt+0x4308>
   15260:	ldr	r0, [fp, #8]
   15264:	movw	r1, #0
   15268:	sdiv	r0, r1, r0
   1526c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15270:	cmp	r0, r1
   15274:	blt	15318 <__assert_fail@plt+0x42f0>
   15278:	b	15330 <__assert_fail@plt+0x4308>
   1527c:	ldr	r0, [fp, #8]
   15280:	cmp	r0, #0
   15284:	bne	1528c <__assert_fail@plt+0x4264>
   15288:	b	15330 <__assert_fail@plt+0x4308>
   1528c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15290:	cmp	r0, #0
   15294:	bge	15300 <__assert_fail@plt+0x42d8>
   15298:	b	1529c <__assert_fail@plt+0x4274>
   1529c:	b	152e4 <__assert_fail@plt+0x42bc>
   152a0:	b	152e4 <__assert_fail@plt+0x42bc>
   152a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152a8:	cmn	r0, #1
   152ac:	bne	152e4 <__assert_fail@plt+0x42bc>
   152b0:	b	152b4 <__assert_fail@plt+0x428c>
   152b4:	ldr	r0, [fp, #8]
   152b8:	add	r0, r0, #0
   152bc:	movw	r1, #0
   152c0:	cmp	r1, r0
   152c4:	blt	15318 <__assert_fail@plt+0x42f0>
   152c8:	b	15330 <__assert_fail@plt+0x4308>
   152cc:	ldr	r0, [fp, #8]
   152d0:	sub	r0, r0, #1
   152d4:	mvn	r1, #0
   152d8:	cmp	r1, r0
   152dc:	blt	15318 <__assert_fail@plt+0x42f0>
   152e0:	b	15330 <__assert_fail@plt+0x4308>
   152e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152e8:	movw	r1, #0
   152ec:	sdiv	r0, r1, r0
   152f0:	ldr	r1, [fp, #8]
   152f4:	cmp	r0, r1
   152f8:	blt	15318 <__assert_fail@plt+0x42f0>
   152fc:	b	15330 <__assert_fail@plt+0x4308>
   15300:	ldr	r0, [fp, #8]
   15304:	movw	r1, #255	; 0xff
   15308:	sdiv	r0, r1, r0
   1530c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15310:	cmp	r0, r1
   15314:	bge	15330 <__assert_fail@plt+0x4308>
   15318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1531c:	ldr	r1, [fp, #8]
   15320:	mul	r0, r0, r1
   15324:	and	r0, r0, #255	; 0xff
   15328:	str	r0, [fp, #-28]	; 0xffffffe4
   1532c:	b	16360 <__assert_fail@plt+0x5338>
   15330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15334:	ldr	r1, [fp, #8]
   15338:	mul	r0, r0, r1
   1533c:	and	r0, r0, #255	; 0xff
   15340:	str	r0, [fp, #-28]	; 0xffffffe4
   15344:	b	16370 <__assert_fail@plt+0x5348>
   15348:	b	15720 <__assert_fail@plt+0x46f8>
   1534c:	b	15350 <__assert_fail@plt+0x4328>
   15350:	ldr	r0, [fp, #8]
   15354:	cmp	r0, #0
   15358:	bge	1546c <__assert_fail@plt+0x4444>
   1535c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15360:	cmp	r0, #0
   15364:	bge	153f0 <__assert_fail@plt+0x43c8>
   15368:	b	1536c <__assert_fail@plt+0x4344>
   1536c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15370:	ldr	r1, [fp, #8]
   15374:	movw	r2, #32767	; 0x7fff
   15378:	sdiv	r1, r2, r1
   1537c:	cmp	r0, r1
   15380:	blt	1550c <__assert_fail@plt+0x44e4>
   15384:	b	15524 <__assert_fail@plt+0x44fc>
   15388:	b	1538c <__assert_fail@plt+0x4364>
   1538c:	ldr	r0, [pc, #3092]	; 15fa8 <__assert_fail@plt+0x4f80>
   15390:	ldr	r1, [fp, #8]
   15394:	cmp	r1, r0
   15398:	blt	153b0 <__assert_fail@plt+0x4388>
   1539c:	b	153bc <__assert_fail@plt+0x4394>
   153a0:	ldr	r0, [fp, #8]
   153a4:	movw	r1, #0
   153a8:	cmp	r1, r0
   153ac:	bge	153bc <__assert_fail@plt+0x4394>
   153b0:	movw	r0, #0
   153b4:	str	r0, [fp, #-48]	; 0xffffffd0
   153b8:	b	153d4 <__assert_fail@plt+0x43ac>
   153bc:	ldr	r0, [fp, #8]
   153c0:	movw	r1, #0
   153c4:	sub	r0, r1, r0
   153c8:	movw	r1, #32767	; 0x7fff
   153cc:	sdiv	r0, r1, r0
   153d0:	str	r0, [fp, #-48]	; 0xffffffd0
   153d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   153d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153dc:	mvn	r2, #0
   153e0:	sub	r1, r2, r1
   153e4:	cmp	r0, r1
   153e8:	ble	1550c <__assert_fail@plt+0x44e4>
   153ec:	b	15524 <__assert_fail@plt+0x44fc>
   153f0:	b	153f4 <__assert_fail@plt+0x43cc>
   153f4:	b	15450 <__assert_fail@plt+0x4428>
   153f8:	b	15450 <__assert_fail@plt+0x4428>
   153fc:	ldr	r0, [fp, #8]
   15400:	cmn	r0, #1
   15404:	bne	15450 <__assert_fail@plt+0x4428>
   15408:	b	1540c <__assert_fail@plt+0x43e4>
   1540c:	ldr	r0, [pc, #3928]	; 1636c <__assert_fail@plt+0x5344>
   15410:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15414:	add	r0, r1, r0
   15418:	movw	r1, #0
   1541c:	cmp	r1, r0
   15420:	blt	1550c <__assert_fail@plt+0x44e4>
   15424:	b	15524 <__assert_fail@plt+0x44fc>
   15428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1542c:	movw	r1, #0
   15430:	cmp	r1, r0
   15434:	bge	15524 <__assert_fail@plt+0x44fc>
   15438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1543c:	sub	r0, r0, #1
   15440:	movw	r1, #32767	; 0x7fff
   15444:	cmp	r1, r0
   15448:	blt	1550c <__assert_fail@plt+0x44e4>
   1544c:	b	15524 <__assert_fail@plt+0x44fc>
   15450:	ldr	r0, [pc, #3860]	; 1636c <__assert_fail@plt+0x5344>
   15454:	ldr	r1, [fp, #8]
   15458:	sdiv	r0, r0, r1
   1545c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15460:	cmp	r0, r1
   15464:	blt	1550c <__assert_fail@plt+0x44e4>
   15468:	b	15524 <__assert_fail@plt+0x44fc>
   1546c:	ldr	r0, [fp, #8]
   15470:	cmp	r0, #0
   15474:	bne	1547c <__assert_fail@plt+0x4454>
   15478:	b	15524 <__assert_fail@plt+0x44fc>
   1547c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15480:	cmp	r0, #0
   15484:	bge	154f4 <__assert_fail@plt+0x44cc>
   15488:	b	1548c <__assert_fail@plt+0x4464>
   1548c:	b	154d8 <__assert_fail@plt+0x44b0>
   15490:	b	154d8 <__assert_fail@plt+0x44b0>
   15494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15498:	cmn	r0, #1
   1549c:	bne	154d8 <__assert_fail@plt+0x44b0>
   154a0:	b	154a4 <__assert_fail@plt+0x447c>
   154a4:	ldr	r0, [pc, #3776]	; 1636c <__assert_fail@plt+0x5344>
   154a8:	ldr	r1, [fp, #8]
   154ac:	add	r0, r1, r0
   154b0:	movw	r1, #0
   154b4:	cmp	r1, r0
   154b8:	blt	1550c <__assert_fail@plt+0x44e4>
   154bc:	b	15524 <__assert_fail@plt+0x44fc>
   154c0:	ldr	r0, [fp, #8]
   154c4:	sub	r0, r0, #1
   154c8:	movw	r1, #32767	; 0x7fff
   154cc:	cmp	r1, r0
   154d0:	blt	1550c <__assert_fail@plt+0x44e4>
   154d4:	b	15524 <__assert_fail@plt+0x44fc>
   154d8:	ldr	r0, [pc, #3724]	; 1636c <__assert_fail@plt+0x5344>
   154dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   154e0:	sdiv	r0, r0, r1
   154e4:	ldr	r1, [fp, #8]
   154e8:	cmp	r0, r1
   154ec:	blt	1550c <__assert_fail@plt+0x44e4>
   154f0:	b	15524 <__assert_fail@plt+0x44fc>
   154f4:	ldr	r0, [fp, #8]
   154f8:	movw	r1, #32767	; 0x7fff
   154fc:	sdiv	r0, r1, r0
   15500:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15504:	cmp	r0, r1
   15508:	bge	15524 <__assert_fail@plt+0x44fc>
   1550c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15510:	ldr	r1, [fp, #8]
   15514:	mul	r0, r0, r1
   15518:	sxth	r0, r0
   1551c:	str	r0, [fp, #-28]	; 0xffffffe4
   15520:	b	16360 <__assert_fail@plt+0x5338>
   15524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15528:	ldr	r1, [fp, #8]
   1552c:	mul	r0, r0, r1
   15530:	sxth	r0, r0
   15534:	str	r0, [fp, #-28]	; 0xffffffe4
   15538:	b	16370 <__assert_fail@plt+0x5348>
   1553c:	ldr	r0, [fp, #8]
   15540:	cmp	r0, #0
   15544:	bge	15654 <__assert_fail@plt+0x462c>
   15548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1554c:	cmp	r0, #0
   15550:	bge	155dc <__assert_fail@plt+0x45b4>
   15554:	b	15558 <__assert_fail@plt+0x4530>
   15558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1555c:	ldr	r1, [fp, #8]
   15560:	movw	r2, #65535	; 0xffff
   15564:	sdiv	r1, r2, r1
   15568:	cmp	r0, r1
   1556c:	blt	156f0 <__assert_fail@plt+0x46c8>
   15570:	b	15708 <__assert_fail@plt+0x46e0>
   15574:	b	15578 <__assert_fail@plt+0x4550>
   15578:	ldr	r0, [pc, #2600]	; 15fa8 <__assert_fail@plt+0x4f80>
   1557c:	ldr	r1, [fp, #8]
   15580:	cmp	r1, r0
   15584:	blt	1559c <__assert_fail@plt+0x4574>
   15588:	b	155a8 <__assert_fail@plt+0x4580>
   1558c:	ldr	r0, [fp, #8]
   15590:	movw	r1, #0
   15594:	cmp	r1, r0
   15598:	bge	155a8 <__assert_fail@plt+0x4580>
   1559c:	movw	r0, #0
   155a0:	str	r0, [fp, #-52]	; 0xffffffcc
   155a4:	b	155c0 <__assert_fail@plt+0x4598>
   155a8:	ldr	r0, [fp, #8]
   155ac:	movw	r1, #0
   155b0:	sub	r0, r1, r0
   155b4:	movw	r1, #65535	; 0xffff
   155b8:	sdiv	r0, r1, r0
   155bc:	str	r0, [fp, #-52]	; 0xffffffcc
   155c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   155c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   155c8:	mvn	r2, #0
   155cc:	sub	r1, r2, r1
   155d0:	cmp	r0, r1
   155d4:	ble	156f0 <__assert_fail@plt+0x46c8>
   155d8:	b	15708 <__assert_fail@plt+0x46e0>
   155dc:	b	155e0 <__assert_fail@plt+0x45b8>
   155e0:	b	15638 <__assert_fail@plt+0x4610>
   155e4:	b	15638 <__assert_fail@plt+0x4610>
   155e8:	ldr	r0, [fp, #8]
   155ec:	cmn	r0, #1
   155f0:	bne	15638 <__assert_fail@plt+0x4610>
   155f4:	b	155f8 <__assert_fail@plt+0x45d0>
   155f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155fc:	add	r0, r0, #0
   15600:	movw	r1, #0
   15604:	cmp	r1, r0
   15608:	blt	156f0 <__assert_fail@plt+0x46c8>
   1560c:	b	15708 <__assert_fail@plt+0x46e0>
   15610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15614:	movw	r1, #0
   15618:	cmp	r1, r0
   1561c:	bge	15708 <__assert_fail@plt+0x46e0>
   15620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15624:	sub	r0, r0, #1
   15628:	mvn	r1, #0
   1562c:	cmp	r1, r0
   15630:	blt	156f0 <__assert_fail@plt+0x46c8>
   15634:	b	15708 <__assert_fail@plt+0x46e0>
   15638:	ldr	r0, [fp, #8]
   1563c:	movw	r1, #0
   15640:	sdiv	r0, r1, r0
   15644:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15648:	cmp	r0, r1
   1564c:	blt	156f0 <__assert_fail@plt+0x46c8>
   15650:	b	15708 <__assert_fail@plt+0x46e0>
   15654:	ldr	r0, [fp, #8]
   15658:	cmp	r0, #0
   1565c:	bne	15664 <__assert_fail@plt+0x463c>
   15660:	b	15708 <__assert_fail@plt+0x46e0>
   15664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15668:	cmp	r0, #0
   1566c:	bge	156d8 <__assert_fail@plt+0x46b0>
   15670:	b	15674 <__assert_fail@plt+0x464c>
   15674:	b	156bc <__assert_fail@plt+0x4694>
   15678:	b	156bc <__assert_fail@plt+0x4694>
   1567c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15680:	cmn	r0, #1
   15684:	bne	156bc <__assert_fail@plt+0x4694>
   15688:	b	1568c <__assert_fail@plt+0x4664>
   1568c:	ldr	r0, [fp, #8]
   15690:	add	r0, r0, #0
   15694:	movw	r1, #0
   15698:	cmp	r1, r0
   1569c:	blt	156f0 <__assert_fail@plt+0x46c8>
   156a0:	b	15708 <__assert_fail@plt+0x46e0>
   156a4:	ldr	r0, [fp, #8]
   156a8:	sub	r0, r0, #1
   156ac:	mvn	r1, #0
   156b0:	cmp	r1, r0
   156b4:	blt	156f0 <__assert_fail@plt+0x46c8>
   156b8:	b	15708 <__assert_fail@plt+0x46e0>
   156bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156c0:	movw	r1, #0
   156c4:	sdiv	r0, r1, r0
   156c8:	ldr	r1, [fp, #8]
   156cc:	cmp	r0, r1
   156d0:	blt	156f0 <__assert_fail@plt+0x46c8>
   156d4:	b	15708 <__assert_fail@plt+0x46e0>
   156d8:	ldr	r0, [fp, #8]
   156dc:	movw	r1, #65535	; 0xffff
   156e0:	sdiv	r0, r1, r0
   156e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156e8:	cmp	r0, r1
   156ec:	bge	15708 <__assert_fail@plt+0x46e0>
   156f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156f4:	ldr	r1, [fp, #8]
   156f8:	mul	r0, r0, r1
   156fc:	uxth	r0, r0
   15700:	str	r0, [fp, #-28]	; 0xffffffe4
   15704:	b	16360 <__assert_fail@plt+0x5338>
   15708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1570c:	ldr	r1, [fp, #8]
   15710:	mul	r0, r0, r1
   15714:	uxth	r0, r0
   15718:	str	r0, [fp, #-28]	; 0xffffffe4
   1571c:	b	16370 <__assert_fail@plt+0x5348>
   15720:	b	15724 <__assert_fail@plt+0x46fc>
   15724:	b	15728 <__assert_fail@plt+0x4700>
   15728:	ldr	r0, [fp, #8]
   1572c:	cmp	r0, #0
   15730:	bge	15834 <__assert_fail@plt+0x480c>
   15734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15738:	cmp	r0, #0
   1573c:	bge	157c8 <__assert_fail@plt+0x47a0>
   15740:	b	15744 <__assert_fail@plt+0x471c>
   15744:	ldr	r0, [pc, #1992]	; 15f14 <__assert_fail@plt+0x4eec>
   15748:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1574c:	ldr	r2, [fp, #8]
   15750:	sdiv	r0, r0, r2
   15754:	cmp	r1, r0
   15758:	blt	158c4 <__assert_fail@plt+0x489c>
   1575c:	b	158d8 <__assert_fail@plt+0x48b0>
   15760:	b	15764 <__assert_fail@plt+0x473c>
   15764:	ldr	r0, [pc, #2108]	; 15fa8 <__assert_fail@plt+0x4f80>
   15768:	ldr	r1, [fp, #8]
   1576c:	cmp	r1, r0
   15770:	blt	15788 <__assert_fail@plt+0x4760>
   15774:	b	15794 <__assert_fail@plt+0x476c>
   15778:	ldr	r0, [fp, #8]
   1577c:	movw	r1, #0
   15780:	cmp	r1, r0
   15784:	bge	15794 <__assert_fail@plt+0x476c>
   15788:	movw	r0, #0
   1578c:	str	r0, [fp, #-56]	; 0xffffffc8
   15790:	b	157ac <__assert_fail@plt+0x4784>
   15794:	ldr	r0, [pc, #1912]	; 15f14 <__assert_fail@plt+0x4eec>
   15798:	ldr	r1, [fp, #8]
   1579c:	movw	r2, #0
   157a0:	sub	r1, r2, r1
   157a4:	sdiv	r0, r0, r1
   157a8:	str	r0, [fp, #-56]	; 0xffffffc8
   157ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   157b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157b4:	mvn	r2, #0
   157b8:	sub	r1, r2, r1
   157bc:	cmp	r0, r1
   157c0:	ble	158c4 <__assert_fail@plt+0x489c>
   157c4:	b	158d8 <__assert_fail@plt+0x48b0>
   157c8:	ldr	r0, [fp, #8]
   157cc:	cmn	r0, #1
   157d0:	bne	15818 <__assert_fail@plt+0x47f0>
   157d4:	b	157d8 <__assert_fail@plt+0x47b0>
   157d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157dc:	add	r0, r0, #-2147483648	; 0x80000000
   157e0:	movw	r1, #0
   157e4:	cmp	r1, r0
   157e8:	blt	158c4 <__assert_fail@plt+0x489c>
   157ec:	b	158d8 <__assert_fail@plt+0x48b0>
   157f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157f4:	movw	r1, #0
   157f8:	cmp	r1, r0
   157fc:	bge	158d8 <__assert_fail@plt+0x48b0>
   15800:	ldr	r0, [pc, #1804]	; 15f14 <__assert_fail@plt+0x4eec>
   15804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15808:	sub	r1, r1, #1
   1580c:	cmp	r0, r1
   15810:	blt	158c4 <__assert_fail@plt+0x489c>
   15814:	b	158d8 <__assert_fail@plt+0x48b0>
   15818:	ldr	r0, [pc, #4072]	; 16808 <__assert_fail@plt+0x57e0>
   1581c:	ldr	r1, [fp, #8]
   15820:	sdiv	r0, r0, r1
   15824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15828:	cmp	r0, r1
   1582c:	blt	158c4 <__assert_fail@plt+0x489c>
   15830:	b	158d8 <__assert_fail@plt+0x48b0>
   15834:	ldr	r0, [fp, #8]
   15838:	cmp	r0, #0
   1583c:	bne	15844 <__assert_fail@plt+0x481c>
   15840:	b	158d8 <__assert_fail@plt+0x48b0>
   15844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15848:	cmp	r0, #0
   1584c:	bge	158ac <__assert_fail@plt+0x4884>
   15850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15854:	cmn	r0, #1
   15858:	bne	15890 <__assert_fail@plt+0x4868>
   1585c:	b	15860 <__assert_fail@plt+0x4838>
   15860:	ldr	r0, [fp, #8]
   15864:	add	r0, r0, #-2147483648	; 0x80000000
   15868:	movw	r1, #0
   1586c:	cmp	r1, r0
   15870:	blt	158c4 <__assert_fail@plt+0x489c>
   15874:	b	158d8 <__assert_fail@plt+0x48b0>
   15878:	ldr	r0, [pc, #1684]	; 15f14 <__assert_fail@plt+0x4eec>
   1587c:	ldr	r1, [fp, #8]
   15880:	sub	r1, r1, #1
   15884:	cmp	r0, r1
   15888:	blt	158c4 <__assert_fail@plt+0x489c>
   1588c:	b	158d8 <__assert_fail@plt+0x48b0>
   15890:	ldr	r0, [pc, #3952]	; 16808 <__assert_fail@plt+0x57e0>
   15894:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15898:	sdiv	r0, r0, r1
   1589c:	ldr	r1, [fp, #8]
   158a0:	cmp	r0, r1
   158a4:	blt	158c4 <__assert_fail@plt+0x489c>
   158a8:	b	158d8 <__assert_fail@plt+0x48b0>
   158ac:	ldr	r0, [pc, #1632]	; 15f14 <__assert_fail@plt+0x4eec>
   158b0:	ldr	r1, [fp, #8]
   158b4:	sdiv	r0, r0, r1
   158b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158bc:	cmp	r0, r1
   158c0:	bge	158d8 <__assert_fail@plt+0x48b0>
   158c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158c8:	ldr	r1, [fp, #8]
   158cc:	mul	r0, r0, r1
   158d0:	str	r0, [fp, #-28]	; 0xffffffe4
   158d4:	b	16360 <__assert_fail@plt+0x5338>
   158d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158dc:	ldr	r1, [fp, #8]
   158e0:	mul	r0, r0, r1
   158e4:	str	r0, [fp, #-28]	; 0xffffffe4
   158e8:	b	16370 <__assert_fail@plt+0x5348>
   158ec:	ldr	r0, [fp, #8]
   158f0:	cmp	r0, #0
   158f4:	bge	15a04 <__assert_fail@plt+0x49dc>
   158f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158fc:	cmp	r0, #0
   15900:	bge	1598c <__assert_fail@plt+0x4964>
   15904:	b	15924 <__assert_fail@plt+0x48fc>
   15908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1590c:	ldr	r1, [fp, #8]
   15910:	mvn	r2, #0
   15914:	udiv	r1, r2, r1
   15918:	cmp	r0, r1
   1591c:	bcc	15aa0 <__assert_fail@plt+0x4a78>
   15920:	b	15ab4 <__assert_fail@plt+0x4a8c>
   15924:	b	15928 <__assert_fail@plt+0x4900>
   15928:	ldr	r0, [pc, #1656]	; 15fa8 <__assert_fail@plt+0x4f80>
   1592c:	ldr	r1, [fp, #8]
   15930:	cmp	r1, r0
   15934:	blt	1594c <__assert_fail@plt+0x4924>
   15938:	b	15958 <__assert_fail@plt+0x4930>
   1593c:	ldr	r0, [fp, #8]
   15940:	movw	r1, #0
   15944:	cmp	r1, r0
   15948:	bge	15958 <__assert_fail@plt+0x4930>
   1594c:	movw	r0, #1
   15950:	str	r0, [fp, #-60]	; 0xffffffc4
   15954:	b	15970 <__assert_fail@plt+0x4948>
   15958:	ldr	r0, [fp, #8]
   1595c:	movw	r1, #0
   15960:	sub	r0, r1, r0
   15964:	mvn	r1, #0
   15968:	udiv	r0, r1, r0
   1596c:	str	r0, [fp, #-60]	; 0xffffffc4
   15970:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15974:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15978:	mvn	r2, #0
   1597c:	sub	r1, r2, r1
   15980:	cmp	r0, r1
   15984:	bls	15aa0 <__assert_fail@plt+0x4a78>
   15988:	b	15ab4 <__assert_fail@plt+0x4a8c>
   1598c:	b	15990 <__assert_fail@plt+0x4968>
   15990:	b	159e8 <__assert_fail@plt+0x49c0>
   15994:	b	159e8 <__assert_fail@plt+0x49c0>
   15998:	ldr	r0, [fp, #8]
   1599c:	cmn	r0, #1
   159a0:	bne	159e8 <__assert_fail@plt+0x49c0>
   159a4:	b	159a8 <__assert_fail@plt+0x4980>
   159a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159ac:	add	r0, r0, #0
   159b0:	movw	r1, #0
   159b4:	cmp	r1, r0
   159b8:	blt	15aa0 <__assert_fail@plt+0x4a78>
   159bc:	b	15ab4 <__assert_fail@plt+0x4a8c>
   159c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159c4:	movw	r1, #0
   159c8:	cmp	r1, r0
   159cc:	bge	15ab4 <__assert_fail@plt+0x4a8c>
   159d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159d4:	sub	r0, r0, #1
   159d8:	mvn	r1, #0
   159dc:	cmp	r1, r0
   159e0:	blt	15aa0 <__assert_fail@plt+0x4a78>
   159e4:	b	15ab4 <__assert_fail@plt+0x4a8c>
   159e8:	ldr	r0, [fp, #8]
   159ec:	movw	r1, #0
   159f0:	sdiv	r0, r1, r0
   159f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   159f8:	cmp	r0, r1
   159fc:	blt	15aa0 <__assert_fail@plt+0x4a78>
   15a00:	b	15ab4 <__assert_fail@plt+0x4a8c>
   15a04:	ldr	r0, [fp, #8]
   15a08:	cmp	r0, #0
   15a0c:	bne	15a14 <__assert_fail@plt+0x49ec>
   15a10:	b	15ab4 <__assert_fail@plt+0x4a8c>
   15a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a18:	cmp	r0, #0
   15a1c:	bge	15a88 <__assert_fail@plt+0x4a60>
   15a20:	b	15a24 <__assert_fail@plt+0x49fc>
   15a24:	b	15a6c <__assert_fail@plt+0x4a44>
   15a28:	b	15a6c <__assert_fail@plt+0x4a44>
   15a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a30:	cmn	r0, #1
   15a34:	bne	15a6c <__assert_fail@plt+0x4a44>
   15a38:	b	15a3c <__assert_fail@plt+0x4a14>
   15a3c:	ldr	r0, [fp, #8]
   15a40:	add	r0, r0, #0
   15a44:	movw	r1, #0
   15a48:	cmp	r1, r0
   15a4c:	blt	15aa0 <__assert_fail@plt+0x4a78>
   15a50:	b	15ab4 <__assert_fail@plt+0x4a8c>
   15a54:	ldr	r0, [fp, #8]
   15a58:	sub	r0, r0, #1
   15a5c:	mvn	r1, #0
   15a60:	cmp	r1, r0
   15a64:	blt	15aa0 <__assert_fail@plt+0x4a78>
   15a68:	b	15ab4 <__assert_fail@plt+0x4a8c>
   15a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a70:	movw	r1, #0
   15a74:	sdiv	r0, r1, r0
   15a78:	ldr	r1, [fp, #8]
   15a7c:	cmp	r0, r1
   15a80:	blt	15aa0 <__assert_fail@plt+0x4a78>
   15a84:	b	15ab4 <__assert_fail@plt+0x4a8c>
   15a88:	ldr	r0, [fp, #8]
   15a8c:	mvn	r1, #0
   15a90:	udiv	r0, r1, r0
   15a94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a98:	cmp	r0, r1
   15a9c:	bcs	15ab4 <__assert_fail@plt+0x4a8c>
   15aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15aa4:	ldr	r1, [fp, #8]
   15aa8:	mul	r0, r0, r1
   15aac:	str	r0, [fp, #-28]	; 0xffffffe4
   15ab0:	b	16360 <__assert_fail@plt+0x5338>
   15ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ab8:	ldr	r1, [fp, #8]
   15abc:	mul	r0, r0, r1
   15ac0:	str	r0, [fp, #-28]	; 0xffffffe4
   15ac4:	b	16370 <__assert_fail@plt+0x5348>
   15ac8:	b	15acc <__assert_fail@plt+0x4aa4>
   15acc:	b	15ad0 <__assert_fail@plt+0x4aa8>
   15ad0:	ldr	r0, [fp, #8]
   15ad4:	cmp	r0, #0
   15ad8:	bge	15bdc <__assert_fail@plt+0x4bb4>
   15adc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ae0:	cmp	r0, #0
   15ae4:	bge	15b70 <__assert_fail@plt+0x4b48>
   15ae8:	b	15aec <__assert_fail@plt+0x4ac4>
   15aec:	ldr	r0, [pc, #1056]	; 15f14 <__assert_fail@plt+0x4eec>
   15af0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15af4:	ldr	r2, [fp, #8]
   15af8:	sdiv	r0, r0, r2
   15afc:	cmp	r1, r0
   15b00:	blt	15c6c <__assert_fail@plt+0x4c44>
   15b04:	b	15c80 <__assert_fail@plt+0x4c58>
   15b08:	b	15b0c <__assert_fail@plt+0x4ae4>
   15b0c:	ldr	r0, [pc, #1172]	; 15fa8 <__assert_fail@plt+0x4f80>
   15b10:	ldr	r1, [fp, #8]
   15b14:	cmp	r1, r0
   15b18:	blt	15b30 <__assert_fail@plt+0x4b08>
   15b1c:	b	15b3c <__assert_fail@plt+0x4b14>
   15b20:	ldr	r0, [fp, #8]
   15b24:	movw	r1, #0
   15b28:	cmp	r1, r0
   15b2c:	bge	15b3c <__assert_fail@plt+0x4b14>
   15b30:	movw	r0, #0
   15b34:	str	r0, [fp, #-64]	; 0xffffffc0
   15b38:	b	15b54 <__assert_fail@plt+0x4b2c>
   15b3c:	ldr	r0, [pc, #976]	; 15f14 <__assert_fail@plt+0x4eec>
   15b40:	ldr	r1, [fp, #8]
   15b44:	movw	r2, #0
   15b48:	sub	r1, r2, r1
   15b4c:	sdiv	r0, r0, r1
   15b50:	str	r0, [fp, #-64]	; 0xffffffc0
   15b54:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15b58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b5c:	mvn	r2, #0
   15b60:	sub	r1, r2, r1
   15b64:	cmp	r0, r1
   15b68:	ble	15c6c <__assert_fail@plt+0x4c44>
   15b6c:	b	15c80 <__assert_fail@plt+0x4c58>
   15b70:	ldr	r0, [fp, #8]
   15b74:	cmn	r0, #1
   15b78:	bne	15bc0 <__assert_fail@plt+0x4b98>
   15b7c:	b	15b80 <__assert_fail@plt+0x4b58>
   15b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b84:	add	r0, r0, #-2147483648	; 0x80000000
   15b88:	movw	r1, #0
   15b8c:	cmp	r1, r0
   15b90:	blt	15c6c <__assert_fail@plt+0x4c44>
   15b94:	b	15c80 <__assert_fail@plt+0x4c58>
   15b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b9c:	movw	r1, #0
   15ba0:	cmp	r1, r0
   15ba4:	bge	15c80 <__assert_fail@plt+0x4c58>
   15ba8:	ldr	r0, [pc, #868]	; 15f14 <__assert_fail@plt+0x4eec>
   15bac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bb0:	sub	r1, r1, #1
   15bb4:	cmp	r0, r1
   15bb8:	blt	15c6c <__assert_fail@plt+0x4c44>
   15bbc:	b	15c80 <__assert_fail@plt+0x4c58>
   15bc0:	ldr	r0, [pc, #3136]	; 16808 <__assert_fail@plt+0x57e0>
   15bc4:	ldr	r1, [fp, #8]
   15bc8:	sdiv	r0, r0, r1
   15bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bd0:	cmp	r0, r1
   15bd4:	blt	15c6c <__assert_fail@plt+0x4c44>
   15bd8:	b	15c80 <__assert_fail@plt+0x4c58>
   15bdc:	ldr	r0, [fp, #8]
   15be0:	cmp	r0, #0
   15be4:	bne	15bec <__assert_fail@plt+0x4bc4>
   15be8:	b	15c80 <__assert_fail@plt+0x4c58>
   15bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bf0:	cmp	r0, #0
   15bf4:	bge	15c54 <__assert_fail@plt+0x4c2c>
   15bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bfc:	cmn	r0, #1
   15c00:	bne	15c38 <__assert_fail@plt+0x4c10>
   15c04:	b	15c08 <__assert_fail@plt+0x4be0>
   15c08:	ldr	r0, [fp, #8]
   15c0c:	add	r0, r0, #-2147483648	; 0x80000000
   15c10:	movw	r1, #0
   15c14:	cmp	r1, r0
   15c18:	blt	15c6c <__assert_fail@plt+0x4c44>
   15c1c:	b	15c80 <__assert_fail@plt+0x4c58>
   15c20:	ldr	r0, [pc, #748]	; 15f14 <__assert_fail@plt+0x4eec>
   15c24:	ldr	r1, [fp, #8]
   15c28:	sub	r1, r1, #1
   15c2c:	cmp	r0, r1
   15c30:	blt	15c6c <__assert_fail@plt+0x4c44>
   15c34:	b	15c80 <__assert_fail@plt+0x4c58>
   15c38:	ldr	r0, [pc, #3016]	; 16808 <__assert_fail@plt+0x57e0>
   15c3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c40:	sdiv	r0, r0, r1
   15c44:	ldr	r1, [fp, #8]
   15c48:	cmp	r0, r1
   15c4c:	blt	15c6c <__assert_fail@plt+0x4c44>
   15c50:	b	15c80 <__assert_fail@plt+0x4c58>
   15c54:	ldr	r0, [pc, #696]	; 15f14 <__assert_fail@plt+0x4eec>
   15c58:	ldr	r1, [fp, #8]
   15c5c:	sdiv	r0, r0, r1
   15c60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c64:	cmp	r0, r1
   15c68:	bge	15c80 <__assert_fail@plt+0x4c58>
   15c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c70:	ldr	r1, [fp, #8]
   15c74:	mul	r0, r0, r1
   15c78:	str	r0, [fp, #-28]	; 0xffffffe4
   15c7c:	b	16360 <__assert_fail@plt+0x5338>
   15c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c84:	ldr	r1, [fp, #8]
   15c88:	mul	r0, r0, r1
   15c8c:	str	r0, [fp, #-28]	; 0xffffffe4
   15c90:	b	16370 <__assert_fail@plt+0x5348>
   15c94:	ldr	r0, [fp, #8]
   15c98:	cmp	r0, #0
   15c9c:	bge	15dac <__assert_fail@plt+0x4d84>
   15ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ca4:	cmp	r0, #0
   15ca8:	bge	15d34 <__assert_fail@plt+0x4d0c>
   15cac:	b	15ccc <__assert_fail@plt+0x4ca4>
   15cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cb4:	ldr	r1, [fp, #8]
   15cb8:	mvn	r2, #0
   15cbc:	udiv	r1, r2, r1
   15cc0:	cmp	r0, r1
   15cc4:	bcc	15e48 <__assert_fail@plt+0x4e20>
   15cc8:	b	15e5c <__assert_fail@plt+0x4e34>
   15ccc:	b	15cd0 <__assert_fail@plt+0x4ca8>
   15cd0:	ldr	r0, [pc, #720]	; 15fa8 <__assert_fail@plt+0x4f80>
   15cd4:	ldr	r1, [fp, #8]
   15cd8:	cmp	r1, r0
   15cdc:	blt	15cf4 <__assert_fail@plt+0x4ccc>
   15ce0:	b	15d00 <__assert_fail@plt+0x4cd8>
   15ce4:	ldr	r0, [fp, #8]
   15ce8:	movw	r1, #0
   15cec:	cmp	r1, r0
   15cf0:	bge	15d00 <__assert_fail@plt+0x4cd8>
   15cf4:	movw	r0, #1
   15cf8:	str	r0, [fp, #-68]	; 0xffffffbc
   15cfc:	b	15d18 <__assert_fail@plt+0x4cf0>
   15d00:	ldr	r0, [fp, #8]
   15d04:	movw	r1, #0
   15d08:	sub	r0, r1, r0
   15d0c:	mvn	r1, #0
   15d10:	udiv	r0, r1, r0
   15d14:	str	r0, [fp, #-68]	; 0xffffffbc
   15d18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d20:	mvn	r2, #0
   15d24:	sub	r1, r2, r1
   15d28:	cmp	r0, r1
   15d2c:	bls	15e48 <__assert_fail@plt+0x4e20>
   15d30:	b	15e5c <__assert_fail@plt+0x4e34>
   15d34:	b	15d38 <__assert_fail@plt+0x4d10>
   15d38:	b	15d90 <__assert_fail@plt+0x4d68>
   15d3c:	b	15d90 <__assert_fail@plt+0x4d68>
   15d40:	ldr	r0, [fp, #8]
   15d44:	cmn	r0, #1
   15d48:	bne	15d90 <__assert_fail@plt+0x4d68>
   15d4c:	b	15d50 <__assert_fail@plt+0x4d28>
   15d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d54:	add	r0, r0, #0
   15d58:	movw	r1, #0
   15d5c:	cmp	r1, r0
   15d60:	blt	15e48 <__assert_fail@plt+0x4e20>
   15d64:	b	15e5c <__assert_fail@plt+0x4e34>
   15d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d6c:	movw	r1, #0
   15d70:	cmp	r1, r0
   15d74:	bge	15e5c <__assert_fail@plt+0x4e34>
   15d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d7c:	sub	r0, r0, #1
   15d80:	mvn	r1, #0
   15d84:	cmp	r1, r0
   15d88:	blt	15e48 <__assert_fail@plt+0x4e20>
   15d8c:	b	15e5c <__assert_fail@plt+0x4e34>
   15d90:	ldr	r0, [fp, #8]
   15d94:	movw	r1, #0
   15d98:	sdiv	r0, r1, r0
   15d9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15da0:	cmp	r0, r1
   15da4:	blt	15e48 <__assert_fail@plt+0x4e20>
   15da8:	b	15e5c <__assert_fail@plt+0x4e34>
   15dac:	ldr	r0, [fp, #8]
   15db0:	cmp	r0, #0
   15db4:	bne	15dbc <__assert_fail@plt+0x4d94>
   15db8:	b	15e5c <__assert_fail@plt+0x4e34>
   15dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dc0:	cmp	r0, #0
   15dc4:	bge	15e30 <__assert_fail@plt+0x4e08>
   15dc8:	b	15dcc <__assert_fail@plt+0x4da4>
   15dcc:	b	15e14 <__assert_fail@plt+0x4dec>
   15dd0:	b	15e14 <__assert_fail@plt+0x4dec>
   15dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dd8:	cmn	r0, #1
   15ddc:	bne	15e14 <__assert_fail@plt+0x4dec>
   15de0:	b	15de4 <__assert_fail@plt+0x4dbc>
   15de4:	ldr	r0, [fp, #8]
   15de8:	add	r0, r0, #0
   15dec:	movw	r1, #0
   15df0:	cmp	r1, r0
   15df4:	blt	15e48 <__assert_fail@plt+0x4e20>
   15df8:	b	15e5c <__assert_fail@plt+0x4e34>
   15dfc:	ldr	r0, [fp, #8]
   15e00:	sub	r0, r0, #1
   15e04:	mvn	r1, #0
   15e08:	cmp	r1, r0
   15e0c:	blt	15e48 <__assert_fail@plt+0x4e20>
   15e10:	b	15e5c <__assert_fail@plt+0x4e34>
   15e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e18:	movw	r1, #0
   15e1c:	sdiv	r0, r1, r0
   15e20:	ldr	r1, [fp, #8]
   15e24:	cmp	r0, r1
   15e28:	blt	15e48 <__assert_fail@plt+0x4e20>
   15e2c:	b	15e5c <__assert_fail@plt+0x4e34>
   15e30:	ldr	r0, [fp, #8]
   15e34:	mvn	r1, #0
   15e38:	udiv	r0, r1, r0
   15e3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e40:	cmp	r0, r1
   15e44:	bcs	15e5c <__assert_fail@plt+0x4e34>
   15e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e4c:	ldr	r1, [fp, #8]
   15e50:	mul	r0, r0, r1
   15e54:	str	r0, [fp, #-28]	; 0xffffffe4
   15e58:	b	16360 <__assert_fail@plt+0x5338>
   15e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e60:	ldr	r1, [fp, #8]
   15e64:	mul	r0, r0, r1
   15e68:	str	r0, [fp, #-28]	; 0xffffffe4
   15e6c:	b	16370 <__assert_fail@plt+0x5348>
   15e70:	b	15e74 <__assert_fail@plt+0x4e4c>
   15e74:	ldr	r0, [fp, #8]
   15e78:	cmp	r0, #0
   15e7c:	bge	1600c <__assert_fail@plt+0x4fe4>
   15e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e84:	cmp	r0, #0
   15e88:	bge	15f74 <__assert_fail@plt+0x4f4c>
   15e8c:	b	15e90 <__assert_fail@plt+0x4e68>
   15e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e94:	ldr	r1, [fp, #8]
   15e98:	asr	r3, r1, #31
   15e9c:	mvn	r2, #0
   15ea0:	mvn	ip, #-2147483648	; 0x80000000
   15ea4:	str	r0, [fp, #-72]	; 0xffffffb8
   15ea8:	mov	r0, r2
   15eac:	str	r1, [fp, #-76]	; 0xffffffb4
   15eb0:	mov	r1, ip
   15eb4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15eb8:	bl	1c3b8 <__assert_fail@plt+0xb390>
   15ebc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15ec0:	subs	r0, r2, r0
   15ec4:	rscs	r1, r1, r2, asr #31
   15ec8:	str	r0, [fp, #-80]	; 0xffffffb0
   15ecc:	str	r1, [fp, #-84]	; 0xffffffac
   15ed0:	blt	160ec <__assert_fail@plt+0x50c4>
   15ed4:	b	16100 <__assert_fail@plt+0x50d8>
   15ed8:	b	15edc <__assert_fail@plt+0x4eb4>
   15edc:	ldr	r0, [pc, #196]	; 15fa8 <__assert_fail@plt+0x4f80>
   15ee0:	ldr	r1, [fp, #8]
   15ee4:	cmp	r1, r0
   15ee8:	blt	15f00 <__assert_fail@plt+0x4ed8>
   15eec:	b	15f18 <__assert_fail@plt+0x4ef0>
   15ef0:	ldr	r0, [fp, #8]
   15ef4:	movw	r1, #0
   15ef8:	cmp	r1, r0
   15efc:	bge	15f18 <__assert_fail@plt+0x4ef0>
   15f00:	mov	r0, #0
   15f04:	mvn	r1, #0
   15f08:	str	r1, [fp, #-88]	; 0xffffffa8
   15f0c:	str	r0, [fp, #-92]	; 0xffffffa4
   15f10:	b	15f4c <__assert_fail@plt+0x4f24>
   15f14:	svcvc	0x00ffffff
   15f18:	ldr	r0, [fp, #8]
   15f1c:	rsb	r0, r0, #0
   15f20:	asr	r3, r0, #31
   15f24:	mvn	r1, #0
   15f28:	mvn	r2, #-2147483648	; 0x80000000
   15f2c:	str	r0, [fp, #-96]	; 0xffffffa0
   15f30:	mov	r0, r1
   15f34:	mov	r1, r2
   15f38:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15f3c:	bl	1c3b8 <__assert_fail@plt+0xb390>
   15f40:	str	r0, [fp, #-88]	; 0xffffffa8
   15f44:	str	r1, [fp, #-92]	; 0xffffffa4
   15f48:	b	15f4c <__assert_fail@plt+0x4f24>
   15f4c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15f50:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15f54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f58:	mvn	r2, r2
   15f5c:	subs	r1, r2, r1
   15f60:	rscs	r0, r0, r2, asr #31
   15f64:	str	r1, [fp, #-100]	; 0xffffff9c
   15f68:	str	r0, [fp, #-104]	; 0xffffff98
   15f6c:	bge	160ec <__assert_fail@plt+0x50c4>
   15f70:	b	16100 <__assert_fail@plt+0x50d8>
   15f74:	ldr	r0, [fp, #8]
   15f78:	cmn	r0, #1
   15f7c:	bne	15fcc <__assert_fail@plt+0x4fa4>
   15f80:	b	15f84 <__assert_fail@plt+0x4f5c>
   15f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f88:	mov	r1, #-2147483648	; 0x80000000
   15f8c:	add	r1, r1, r0, asr #31
   15f90:	rsbs	r0, r0, #0
   15f94:	rscs	r1, r1, #0
   15f98:	str	r0, [fp, #-108]	; 0xffffff94
   15f9c:	str	r1, [fp, #-112]	; 0xffffff90
   15fa0:	blt	160ec <__assert_fail@plt+0x50c4>
   15fa4:	b	16100 <__assert_fail@plt+0x50d8>
   15fa8:	andhi	r0, r0, r1
   15fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fb0:	movw	r1, #0
   15fb4:	cmp	r1, r0
   15fb8:	bge	16100 <__assert_fail@plt+0x50d8>
   15fbc:	mov	r0, #0
   15fc0:	cmp	r0, #0
   15fc4:	bne	160ec <__assert_fail@plt+0x50c4>
   15fc8:	b	16100 <__assert_fail@plt+0x50d8>
   15fcc:	ldr	r0, [fp, #8]
   15fd0:	asr	r3, r0, #31
   15fd4:	mov	r1, #0
   15fd8:	mov	r2, #-2147483648	; 0x80000000
   15fdc:	str	r0, [fp, #-116]	; 0xffffff8c
   15fe0:	mov	r0, r1
   15fe4:	mov	r1, r2
   15fe8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   15fec:	bl	1c3b8 <__assert_fail@plt+0xb390>
   15ff0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ff4:	subs	r0, r0, r2
   15ff8:	sbcs	r1, r1, r2, asr #31
   15ffc:	str	r0, [fp, #-120]	; 0xffffff88
   16000:	str	r1, [fp, #-124]	; 0xffffff84
   16004:	blt	160ec <__assert_fail@plt+0x50c4>
   16008:	b	16100 <__assert_fail@plt+0x50d8>
   1600c:	ldr	r0, [fp, #8]
   16010:	cmp	r0, #0
   16014:	bne	1601c <__assert_fail@plt+0x4ff4>
   16018:	b	16100 <__assert_fail@plt+0x50d8>
   1601c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16020:	cmp	r0, #0
   16024:	bge	160ac <__assert_fail@plt+0x5084>
   16028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1602c:	cmn	r0, #1
   16030:	bne	1606c <__assert_fail@plt+0x5044>
   16034:	b	16038 <__assert_fail@plt+0x5010>
   16038:	ldr	r0, [fp, #8]
   1603c:	mov	r1, #-2147483648	; 0x80000000
   16040:	add	r1, r1, r0, asr #31
   16044:	rsbs	r0, r0, #0
   16048:	rscs	r1, r1, #0
   1604c:	str	r0, [fp, #-128]	; 0xffffff80
   16050:	str	r1, [fp, #-132]	; 0xffffff7c
   16054:	blt	160ec <__assert_fail@plt+0x50c4>
   16058:	b	16100 <__assert_fail@plt+0x50d8>
   1605c:	mov	r0, #0
   16060:	cmp	r0, #0
   16064:	bne	160ec <__assert_fail@plt+0x50c4>
   16068:	b	16100 <__assert_fail@plt+0x50d8>
   1606c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16070:	asr	r3, r0, #31
   16074:	mov	r1, #0
   16078:	mov	r2, #-2147483648	; 0x80000000
   1607c:	str	r0, [fp, #-136]	; 0xffffff78
   16080:	mov	r0, r1
   16084:	mov	r1, r2
   16088:	ldr	r2, [fp, #-136]	; 0xffffff78
   1608c:	bl	1c3b8 <__assert_fail@plt+0xb390>
   16090:	ldr	r2, [fp, #8]
   16094:	subs	r0, r0, r2
   16098:	sbcs	r1, r1, r2, asr #31
   1609c:	str	r0, [fp, #-140]	; 0xffffff74
   160a0:	str	r1, [fp, #-144]	; 0xffffff70
   160a4:	blt	160ec <__assert_fail@plt+0x50c4>
   160a8:	b	16100 <__assert_fail@plt+0x50d8>
   160ac:	ldr	r0, [fp, #8]
   160b0:	asr	r3, r0, #31
   160b4:	mvn	r1, #0
   160b8:	mvn	r2, #-2147483648	; 0x80000000
   160bc:	str	r0, [fp, #-148]	; 0xffffff6c
   160c0:	mov	r0, r1
   160c4:	mov	r1, r2
   160c8:	ldr	r2, [fp, #-148]	; 0xffffff6c
   160cc:	bl	1c3b8 <__assert_fail@plt+0xb390>
   160d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160d4:	subs	r0, r0, r2
   160d8:	sbcs	r1, r1, r2, asr #31
   160dc:	str	r0, [fp, #-152]	; 0xffffff68
   160e0:	str	r1, [fp, #-156]	; 0xffffff64
   160e4:	bge	16100 <__assert_fail@plt+0x50d8>
   160e8:	b	160ec <__assert_fail@plt+0x50c4>
   160ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160f0:	ldr	r1, [fp, #8]
   160f4:	mul	r0, r0, r1
   160f8:	str	r0, [fp, #-28]	; 0xffffffe4
   160fc:	b	16360 <__assert_fail@plt+0x5338>
   16100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16104:	ldr	r1, [fp, #8]
   16108:	mul	r0, r0, r1
   1610c:	str	r0, [fp, #-28]	; 0xffffffe4
   16110:	b	16370 <__assert_fail@plt+0x5348>
   16114:	ldr	r0, [fp, #8]
   16118:	cmp	r0, #0
   1611c:	bge	1627c <__assert_fail@plt+0x5254>
   16120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16124:	cmp	r0, #0
   16128:	bge	16204 <__assert_fail@plt+0x51dc>
   1612c:	b	16174 <__assert_fail@plt+0x514c>
   16130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16134:	ldr	r1, [fp, #8]
   16138:	asr	r3, r1, #31
   1613c:	mvn	r2, #0
   16140:	str	r0, [fp, #-160]	; 0xffffff60
   16144:	mov	r0, r2
   16148:	str	r1, [fp, #-164]	; 0xffffff5c
   1614c:	mov	r1, r2
   16150:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16154:	bl	1c48c <__assert_fail@plt+0xb464>
   16158:	ldr	r2, [fp, #-160]	; 0xffffff60
   1615c:	subs	r0, r2, r0
   16160:	rscs	r1, r1, r2, asr #31
   16164:	str	r0, [fp, #-168]	; 0xffffff58
   16168:	str	r1, [fp, #-172]	; 0xffffff54
   1616c:	bcc	16338 <__assert_fail@plt+0x5310>
   16170:	b	1634c <__assert_fail@plt+0x5324>
   16174:	b	16178 <__assert_fail@plt+0x5150>
   16178:	ldr	r0, [pc, #-472]	; 15fa8 <__assert_fail@plt+0x4f80>
   1617c:	ldr	r1, [fp, #8]
   16180:	cmp	r1, r0
   16184:	blt	1619c <__assert_fail@plt+0x5174>
   16188:	b	161b0 <__assert_fail@plt+0x5188>
   1618c:	ldr	r0, [fp, #8]
   16190:	movw	r1, #0
   16194:	cmp	r1, r0
   16198:	bge	161b0 <__assert_fail@plt+0x5188>
   1619c:	mov	r0, #1
   161a0:	mvn	r1, #0
   161a4:	str	r1, [fp, #-176]	; 0xffffff50
   161a8:	str	r0, [fp, #-180]	; 0xffffff4c
   161ac:	b	161dc <__assert_fail@plt+0x51b4>
   161b0:	ldr	r0, [fp, #8]
   161b4:	rsb	r0, r0, #0
   161b8:	asr	r3, r0, #31
   161bc:	mvn	r1, #0
   161c0:	str	r0, [fp, #-184]	; 0xffffff48
   161c4:	mov	r0, r1
   161c8:	ldr	r2, [fp, #-184]	; 0xffffff48
   161cc:	bl	1c48c <__assert_fail@plt+0xb464>
   161d0:	str	r0, [fp, #-176]	; 0xffffff50
   161d4:	str	r1, [fp, #-180]	; 0xffffff4c
   161d8:	b	161dc <__assert_fail@plt+0x51b4>
   161dc:	ldr	r0, [fp, #-180]	; 0xffffff4c
   161e0:	ldr	r1, [fp, #-176]	; 0xffffff50
   161e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   161e8:	mvn	r2, r2
   161ec:	subs	r1, r2, r1
   161f0:	rscs	r0, r0, r2, asr #31
   161f4:	str	r1, [sp, #188]	; 0xbc
   161f8:	str	r0, [sp, #184]	; 0xb8
   161fc:	bcs	16338 <__assert_fail@plt+0x5310>
   16200:	b	1634c <__assert_fail@plt+0x5324>
   16204:	b	16208 <__assert_fail@plt+0x51e0>
   16208:	b	16260 <__assert_fail@plt+0x5238>
   1620c:	b	16260 <__assert_fail@plt+0x5238>
   16210:	ldr	r0, [fp, #8]
   16214:	cmn	r0, #1
   16218:	bne	16260 <__assert_fail@plt+0x5238>
   1621c:	b	16220 <__assert_fail@plt+0x51f8>
   16220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16224:	add	r0, r0, #0
   16228:	movw	r1, #0
   1622c:	cmp	r1, r0
   16230:	blt	16338 <__assert_fail@plt+0x5310>
   16234:	b	1634c <__assert_fail@plt+0x5324>
   16238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1623c:	movw	r1, #0
   16240:	cmp	r1, r0
   16244:	bge	1634c <__assert_fail@plt+0x5324>
   16248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1624c:	sub	r0, r0, #1
   16250:	mvn	r1, #0
   16254:	cmp	r1, r0
   16258:	blt	16338 <__assert_fail@plt+0x5310>
   1625c:	b	1634c <__assert_fail@plt+0x5324>
   16260:	ldr	r0, [fp, #8]
   16264:	movw	r1, #0
   16268:	sdiv	r0, r1, r0
   1626c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16270:	cmp	r0, r1
   16274:	blt	16338 <__assert_fail@plt+0x5310>
   16278:	b	1634c <__assert_fail@plt+0x5324>
   1627c:	ldr	r0, [fp, #8]
   16280:	cmp	r0, #0
   16284:	bne	1628c <__assert_fail@plt+0x5264>
   16288:	b	1634c <__assert_fail@plt+0x5324>
   1628c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16290:	cmp	r0, #0
   16294:	bge	16300 <__assert_fail@plt+0x52d8>
   16298:	b	1629c <__assert_fail@plt+0x5274>
   1629c:	b	162e4 <__assert_fail@plt+0x52bc>
   162a0:	b	162e4 <__assert_fail@plt+0x52bc>
   162a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162a8:	cmn	r0, #1
   162ac:	bne	162e4 <__assert_fail@plt+0x52bc>
   162b0:	b	162b4 <__assert_fail@plt+0x528c>
   162b4:	ldr	r0, [fp, #8]
   162b8:	add	r0, r0, #0
   162bc:	movw	r1, #0
   162c0:	cmp	r1, r0
   162c4:	blt	16338 <__assert_fail@plt+0x5310>
   162c8:	b	1634c <__assert_fail@plt+0x5324>
   162cc:	ldr	r0, [fp, #8]
   162d0:	sub	r0, r0, #1
   162d4:	mvn	r1, #0
   162d8:	cmp	r1, r0
   162dc:	blt	16338 <__assert_fail@plt+0x5310>
   162e0:	b	1634c <__assert_fail@plt+0x5324>
   162e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162e8:	movw	r1, #0
   162ec:	sdiv	r0, r1, r0
   162f0:	ldr	r1, [fp, #8]
   162f4:	cmp	r0, r1
   162f8:	blt	16338 <__assert_fail@plt+0x5310>
   162fc:	b	1634c <__assert_fail@plt+0x5324>
   16300:	ldr	r0, [fp, #8]
   16304:	asr	r3, r0, #31
   16308:	mvn	r1, #0
   1630c:	str	r0, [sp, #180]	; 0xb4
   16310:	mov	r0, r1
   16314:	ldr	r2, [sp, #180]	; 0xb4
   16318:	bl	1c48c <__assert_fail@plt+0xb464>
   1631c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16320:	subs	r0, r0, r2
   16324:	sbcs	r1, r1, r2, asr #31
   16328:	str	r0, [sp, #176]	; 0xb0
   1632c:	str	r1, [sp, #172]	; 0xac
   16330:	bcs	1634c <__assert_fail@plt+0x5324>
   16334:	b	16338 <__assert_fail@plt+0x5310>
   16338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1633c:	ldr	r1, [fp, #8]
   16340:	mul	r0, r0, r1
   16344:	str	r0, [fp, #-28]	; 0xffffffe4
   16348:	b	16360 <__assert_fail@plt+0x5338>
   1634c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16350:	ldr	r1, [fp, #8]
   16354:	mul	r0, r0, r1
   16358:	str	r0, [fp, #-28]	; 0xffffffe4
   1635c:	b	16370 <__assert_fail@plt+0x5348>
   16360:	ldr	r0, [pc, #-1108]	; 15f14 <__assert_fail@plt+0x4eec>
   16364:	str	r0, [sp, #168]	; 0xa8
   16368:	b	16390 <__assert_fail@plt+0x5368>
   1636c:			; <UNDEFINED> instruction: 0xffff8000
   16370:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16374:	cmp	r0, #64	; 0x40
   16378:	movw	r0, #0
   1637c:	movlt	r0, #1
   16380:	tst	r0, #1
   16384:	movw	r0, #64	; 0x40
   16388:	moveq	r0, #0
   1638c:	str	r0, [sp, #168]	; 0xa8
   16390:	ldr	r0, [sp, #168]	; 0xa8
   16394:	str	r0, [fp, #-32]	; 0xffffffe0
   16398:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1639c:	cmp	r0, #0
   163a0:	beq	163d0 <__assert_fail@plt+0x53a8>
   163a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163a8:	ldr	r1, [fp, #8]
   163ac:	sdiv	r0, r0, r1
   163b0:	str	r0, [fp, #-24]	; 0xffffffe8
   163b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163b8:	mov	r1, r0
   163bc:	ldr	r2, [fp, #8]
   163c0:	sdiv	r3, r0, r2
   163c4:	mls	r0, r3, r2, r0
   163c8:	sub	r0, r1, r0
   163cc:	str	r0, [fp, #-28]	; 0xffffffe4
   163d0:	ldr	r0, [fp, #-4]
   163d4:	movw	r1, #0
   163d8:	cmp	r0, r1
   163dc:	bne	163ec <__assert_fail@plt+0x53c4>
   163e0:	ldr	r0, [fp, #-8]
   163e4:	movw	r1, #0
   163e8:	str	r1, [r0]
   163ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   163f4:	sub	r0, r0, r1
   163f8:	ldr	r1, [fp, #-12]
   163fc:	cmp	r0, r1
   16400:	bge	17838 <__assert_fail@plt+0x6810>
   16404:	ldr	r0, [fp, #-20]	; 0xffffffec
   16408:	ldr	r1, [fp, #-12]
   1640c:	add	r1, r0, r1
   16410:	mov	r2, #1
   16414:	cmp	r1, r0
   16418:	movwvc	r2, #0
   1641c:	str	r1, [fp, #-24]	; 0xffffffe8
   16420:	tst	r2, #1
   16424:	bne	17834 <__assert_fail@plt+0x680c>
   16428:	ldr	r0, [fp, #-16]
   1642c:	movw	r1, #0
   16430:	cmp	r1, r0
   16434:	bgt	16448 <__assert_fail@plt+0x5420>
   16438:	ldr	r0, [fp, #-16]
   1643c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16440:	cmp	r0, r1
   16444:	blt	17834 <__assert_fail@plt+0x680c>
   16448:	b	16824 <__assert_fail@plt+0x57fc>
   1644c:	b	16450 <__assert_fail@plt+0x5428>
   16450:	ldr	r0, [fp, #8]
   16454:	cmp	r0, #0
   16458:	bge	1656c <__assert_fail@plt+0x5544>
   1645c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16460:	cmp	r0, #0
   16464:	bge	164f0 <__assert_fail@plt+0x54c8>
   16468:	b	1646c <__assert_fail@plt+0x5444>
   1646c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16470:	ldr	r1, [fp, #8]
   16474:	movw	r2, #127	; 0x7f
   16478:	sdiv	r1, r2, r1
   1647c:	cmp	r0, r1
   16480:	blt	1660c <__assert_fail@plt+0x55e4>
   16484:	b	16624 <__assert_fail@plt+0x55fc>
   16488:	b	1648c <__assert_fail@plt+0x5464>
   1648c:	ldr	r0, [pc, #-1260]	; 15fa8 <__assert_fail@plt+0x4f80>
   16490:	ldr	r1, [fp, #8]
   16494:	cmp	r1, r0
   16498:	blt	164b0 <__assert_fail@plt+0x5488>
   1649c:	b	164bc <__assert_fail@plt+0x5494>
   164a0:	ldr	r0, [fp, #8]
   164a4:	movw	r1, #0
   164a8:	cmp	r1, r0
   164ac:	bge	164bc <__assert_fail@plt+0x5494>
   164b0:	movw	r0, #0
   164b4:	str	r0, [sp, #164]	; 0xa4
   164b8:	b	164d4 <__assert_fail@plt+0x54ac>
   164bc:	ldr	r0, [fp, #8]
   164c0:	movw	r1, #0
   164c4:	sub	r0, r1, r0
   164c8:	movw	r1, #127	; 0x7f
   164cc:	sdiv	r0, r1, r0
   164d0:	str	r0, [sp, #164]	; 0xa4
   164d4:	ldr	r0, [sp, #164]	; 0xa4
   164d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164dc:	mvn	r2, #0
   164e0:	sub	r1, r2, r1
   164e4:	cmp	r0, r1
   164e8:	ble	1660c <__assert_fail@plt+0x55e4>
   164ec:	b	16624 <__assert_fail@plt+0x55fc>
   164f0:	b	164f4 <__assert_fail@plt+0x54cc>
   164f4:	b	16550 <__assert_fail@plt+0x5528>
   164f8:	b	16550 <__assert_fail@plt+0x5528>
   164fc:	ldr	r0, [fp, #8]
   16500:	cmn	r0, #1
   16504:	bne	16550 <__assert_fail@plt+0x5528>
   16508:	b	1650c <__assert_fail@plt+0x54e4>
   1650c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16510:	mvn	r1, #127	; 0x7f
   16514:	add	r0, r0, r1
   16518:	movw	r1, #0
   1651c:	cmp	r1, r0
   16520:	blt	1660c <__assert_fail@plt+0x55e4>
   16524:	b	16624 <__assert_fail@plt+0x55fc>
   16528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1652c:	movw	r1, #0
   16530:	cmp	r1, r0
   16534:	bge	16624 <__assert_fail@plt+0x55fc>
   16538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1653c:	sub	r0, r0, #1
   16540:	movw	r1, #127	; 0x7f
   16544:	cmp	r1, r0
   16548:	blt	1660c <__assert_fail@plt+0x55e4>
   1654c:	b	16624 <__assert_fail@plt+0x55fc>
   16550:	ldr	r0, [fp, #8]
   16554:	mvn	r1, #127	; 0x7f
   16558:	sdiv	r0, r1, r0
   1655c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16560:	cmp	r0, r1
   16564:	blt	1660c <__assert_fail@plt+0x55e4>
   16568:	b	16624 <__assert_fail@plt+0x55fc>
   1656c:	ldr	r0, [fp, #8]
   16570:	cmp	r0, #0
   16574:	bne	1657c <__assert_fail@plt+0x5554>
   16578:	b	16624 <__assert_fail@plt+0x55fc>
   1657c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16580:	cmp	r0, #0
   16584:	bge	165f4 <__assert_fail@plt+0x55cc>
   16588:	b	1658c <__assert_fail@plt+0x5564>
   1658c:	b	165d8 <__assert_fail@plt+0x55b0>
   16590:	b	165d8 <__assert_fail@plt+0x55b0>
   16594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16598:	cmn	r0, #1
   1659c:	bne	165d8 <__assert_fail@plt+0x55b0>
   165a0:	b	165a4 <__assert_fail@plt+0x557c>
   165a4:	ldr	r0, [fp, #8]
   165a8:	mvn	r1, #127	; 0x7f
   165ac:	add	r0, r0, r1
   165b0:	movw	r1, #0
   165b4:	cmp	r1, r0
   165b8:	blt	1660c <__assert_fail@plt+0x55e4>
   165bc:	b	16624 <__assert_fail@plt+0x55fc>
   165c0:	ldr	r0, [fp, #8]
   165c4:	sub	r0, r0, #1
   165c8:	movw	r1, #127	; 0x7f
   165cc:	cmp	r1, r0
   165d0:	blt	1660c <__assert_fail@plt+0x55e4>
   165d4:	b	16624 <__assert_fail@plt+0x55fc>
   165d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165dc:	mvn	r1, #127	; 0x7f
   165e0:	sdiv	r0, r1, r0
   165e4:	ldr	r1, [fp, #8]
   165e8:	cmp	r0, r1
   165ec:	blt	1660c <__assert_fail@plt+0x55e4>
   165f0:	b	16624 <__assert_fail@plt+0x55fc>
   165f4:	ldr	r0, [fp, #8]
   165f8:	movw	r1, #127	; 0x7f
   165fc:	sdiv	r0, r1, r0
   16600:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16604:	cmp	r0, r1
   16608:	bge	16624 <__assert_fail@plt+0x55fc>
   1660c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16610:	ldr	r1, [fp, #8]
   16614:	mul	r0, r0, r1
   16618:	sxtb	r0, r0
   1661c:	str	r0, [fp, #-28]	; 0xffffffe4
   16620:	b	17834 <__assert_fail@plt+0x680c>
   16624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16628:	ldr	r1, [fp, #8]
   1662c:	mul	r0, r0, r1
   16630:	sxtb	r0, r0
   16634:	str	r0, [fp, #-28]	; 0xffffffe4
   16638:	b	17838 <__assert_fail@plt+0x6810>
   1663c:	ldr	r0, [fp, #8]
   16640:	cmp	r0, #0
   16644:	bge	16754 <__assert_fail@plt+0x572c>
   16648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1664c:	cmp	r0, #0
   16650:	bge	166dc <__assert_fail@plt+0x56b4>
   16654:	b	16658 <__assert_fail@plt+0x5630>
   16658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1665c:	ldr	r1, [fp, #8]
   16660:	movw	r2, #255	; 0xff
   16664:	sdiv	r1, r2, r1
   16668:	cmp	r0, r1
   1666c:	blt	167f0 <__assert_fail@plt+0x57c8>
   16670:	b	1680c <__assert_fail@plt+0x57e4>
   16674:	b	16678 <__assert_fail@plt+0x5650>
   16678:	ldr	r0, [pc, #-1752]	; 15fa8 <__assert_fail@plt+0x4f80>
   1667c:	ldr	r1, [fp, #8]
   16680:	cmp	r1, r0
   16684:	blt	1669c <__assert_fail@plt+0x5674>
   16688:	b	166a8 <__assert_fail@plt+0x5680>
   1668c:	ldr	r0, [fp, #8]
   16690:	movw	r1, #0
   16694:	cmp	r1, r0
   16698:	bge	166a8 <__assert_fail@plt+0x5680>
   1669c:	movw	r0, #0
   166a0:	str	r0, [sp, #160]	; 0xa0
   166a4:	b	166c0 <__assert_fail@plt+0x5698>
   166a8:	ldr	r0, [fp, #8]
   166ac:	movw	r1, #0
   166b0:	sub	r0, r1, r0
   166b4:	movw	r1, #255	; 0xff
   166b8:	sdiv	r0, r1, r0
   166bc:	str	r0, [sp, #160]	; 0xa0
   166c0:	ldr	r0, [sp, #160]	; 0xa0
   166c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166c8:	mvn	r2, #0
   166cc:	sub	r1, r2, r1
   166d0:	cmp	r0, r1
   166d4:	ble	167f0 <__assert_fail@plt+0x57c8>
   166d8:	b	1680c <__assert_fail@plt+0x57e4>
   166dc:	b	166e0 <__assert_fail@plt+0x56b8>
   166e0:	b	16738 <__assert_fail@plt+0x5710>
   166e4:	b	16738 <__assert_fail@plt+0x5710>
   166e8:	ldr	r0, [fp, #8]
   166ec:	cmn	r0, #1
   166f0:	bne	16738 <__assert_fail@plt+0x5710>
   166f4:	b	166f8 <__assert_fail@plt+0x56d0>
   166f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166fc:	add	r0, r0, #0
   16700:	movw	r1, #0
   16704:	cmp	r1, r0
   16708:	blt	167f0 <__assert_fail@plt+0x57c8>
   1670c:	b	1680c <__assert_fail@plt+0x57e4>
   16710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16714:	movw	r1, #0
   16718:	cmp	r1, r0
   1671c:	bge	1680c <__assert_fail@plt+0x57e4>
   16720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16724:	sub	r0, r0, #1
   16728:	mvn	r1, #0
   1672c:	cmp	r1, r0
   16730:	blt	167f0 <__assert_fail@plt+0x57c8>
   16734:	b	1680c <__assert_fail@plt+0x57e4>
   16738:	ldr	r0, [fp, #8]
   1673c:	movw	r1, #0
   16740:	sdiv	r0, r1, r0
   16744:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16748:	cmp	r0, r1
   1674c:	blt	167f0 <__assert_fail@plt+0x57c8>
   16750:	b	1680c <__assert_fail@plt+0x57e4>
   16754:	ldr	r0, [fp, #8]
   16758:	cmp	r0, #0
   1675c:	bne	16764 <__assert_fail@plt+0x573c>
   16760:	b	1680c <__assert_fail@plt+0x57e4>
   16764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16768:	cmp	r0, #0
   1676c:	bge	167d8 <__assert_fail@plt+0x57b0>
   16770:	b	16774 <__assert_fail@plt+0x574c>
   16774:	b	167bc <__assert_fail@plt+0x5794>
   16778:	b	167bc <__assert_fail@plt+0x5794>
   1677c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16780:	cmn	r0, #1
   16784:	bne	167bc <__assert_fail@plt+0x5794>
   16788:	b	1678c <__assert_fail@plt+0x5764>
   1678c:	ldr	r0, [fp, #8]
   16790:	add	r0, r0, #0
   16794:	movw	r1, #0
   16798:	cmp	r1, r0
   1679c:	blt	167f0 <__assert_fail@plt+0x57c8>
   167a0:	b	1680c <__assert_fail@plt+0x57e4>
   167a4:	ldr	r0, [fp, #8]
   167a8:	sub	r0, r0, #1
   167ac:	mvn	r1, #0
   167b0:	cmp	r1, r0
   167b4:	blt	167f0 <__assert_fail@plt+0x57c8>
   167b8:	b	1680c <__assert_fail@plt+0x57e4>
   167bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167c0:	movw	r1, #0
   167c4:	sdiv	r0, r1, r0
   167c8:	ldr	r1, [fp, #8]
   167cc:	cmp	r0, r1
   167d0:	blt	167f0 <__assert_fail@plt+0x57c8>
   167d4:	b	1680c <__assert_fail@plt+0x57e4>
   167d8:	ldr	r0, [fp, #8]
   167dc:	movw	r1, #255	; 0xff
   167e0:	sdiv	r0, r1, r0
   167e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167e8:	cmp	r0, r1
   167ec:	bge	1680c <__assert_fail@plt+0x57e4>
   167f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167f4:	ldr	r1, [fp, #8]
   167f8:	mul	r0, r0, r1
   167fc:	and	r0, r0, #255	; 0xff
   16800:	str	r0, [fp, #-28]	; 0xffffffe4
   16804:	b	17834 <__assert_fail@plt+0x680c>
   16808:	andhi	r0, r0, r0
   1680c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16810:	ldr	r1, [fp, #8]
   16814:	mul	r0, r0, r1
   16818:	and	r0, r0, #255	; 0xff
   1681c:	str	r0, [fp, #-28]	; 0xffffffe4
   16820:	b	17838 <__assert_fail@plt+0x6810>
   16824:	b	16bfc <__assert_fail@plt+0x5bd4>
   16828:	b	1682c <__assert_fail@plt+0x5804>
   1682c:	ldr	r0, [fp, #8]
   16830:	cmp	r0, #0
   16834:	bge	16948 <__assert_fail@plt+0x5920>
   16838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1683c:	cmp	r0, #0
   16840:	bge	168cc <__assert_fail@plt+0x58a4>
   16844:	b	16848 <__assert_fail@plt+0x5820>
   16848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1684c:	ldr	r1, [fp, #8]
   16850:	movw	r2, #32767	; 0x7fff
   16854:	sdiv	r1, r2, r1
   16858:	cmp	r0, r1
   1685c:	blt	169e8 <__assert_fail@plt+0x59c0>
   16860:	b	16a00 <__assert_fail@plt+0x59d8>
   16864:	b	16868 <__assert_fail@plt+0x5840>
   16868:	ldr	r0, [pc, #4084]	; 17864 <__assert_fail@plt+0x683c>
   1686c:	ldr	r1, [fp, #8]
   16870:	cmp	r1, r0
   16874:	blt	1688c <__assert_fail@plt+0x5864>
   16878:	b	16898 <__assert_fail@plt+0x5870>
   1687c:	ldr	r0, [fp, #8]
   16880:	movw	r1, #0
   16884:	cmp	r1, r0
   16888:	bge	16898 <__assert_fail@plt+0x5870>
   1688c:	movw	r0, #0
   16890:	str	r0, [sp, #156]	; 0x9c
   16894:	b	168b0 <__assert_fail@plt+0x5888>
   16898:	ldr	r0, [fp, #8]
   1689c:	movw	r1, #0
   168a0:	sub	r0, r1, r0
   168a4:	movw	r1, #32767	; 0x7fff
   168a8:	sdiv	r0, r1, r0
   168ac:	str	r0, [sp, #156]	; 0x9c
   168b0:	ldr	r0, [sp, #156]	; 0x9c
   168b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168b8:	mvn	r2, #0
   168bc:	sub	r1, r2, r1
   168c0:	cmp	r0, r1
   168c4:	ble	169e8 <__assert_fail@plt+0x59c0>
   168c8:	b	16a00 <__assert_fail@plt+0x59d8>
   168cc:	b	168d0 <__assert_fail@plt+0x58a8>
   168d0:	b	1692c <__assert_fail@plt+0x5904>
   168d4:	b	1692c <__assert_fail@plt+0x5904>
   168d8:	ldr	r0, [fp, #8]
   168dc:	cmn	r0, #1
   168e0:	bne	1692c <__assert_fail@plt+0x5904>
   168e4:	b	168e8 <__assert_fail@plt+0x58c0>
   168e8:	ldr	r0, [pc, #3964]	; 1786c <__assert_fail@plt+0x6844>
   168ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168f0:	add	r0, r1, r0
   168f4:	movw	r1, #0
   168f8:	cmp	r1, r0
   168fc:	blt	169e8 <__assert_fail@plt+0x59c0>
   16900:	b	16a00 <__assert_fail@plt+0x59d8>
   16904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16908:	movw	r1, #0
   1690c:	cmp	r1, r0
   16910:	bge	16a00 <__assert_fail@plt+0x59d8>
   16914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16918:	sub	r0, r0, #1
   1691c:	movw	r1, #32767	; 0x7fff
   16920:	cmp	r1, r0
   16924:	blt	169e8 <__assert_fail@plt+0x59c0>
   16928:	b	16a00 <__assert_fail@plt+0x59d8>
   1692c:	ldr	r0, [pc, #3896]	; 1786c <__assert_fail@plt+0x6844>
   16930:	ldr	r1, [fp, #8]
   16934:	sdiv	r0, r0, r1
   16938:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1693c:	cmp	r0, r1
   16940:	blt	169e8 <__assert_fail@plt+0x59c0>
   16944:	b	16a00 <__assert_fail@plt+0x59d8>
   16948:	ldr	r0, [fp, #8]
   1694c:	cmp	r0, #0
   16950:	bne	16958 <__assert_fail@plt+0x5930>
   16954:	b	16a00 <__assert_fail@plt+0x59d8>
   16958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1695c:	cmp	r0, #0
   16960:	bge	169d0 <__assert_fail@plt+0x59a8>
   16964:	b	16968 <__assert_fail@plt+0x5940>
   16968:	b	169b4 <__assert_fail@plt+0x598c>
   1696c:	b	169b4 <__assert_fail@plt+0x598c>
   16970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16974:	cmn	r0, #1
   16978:	bne	169b4 <__assert_fail@plt+0x598c>
   1697c:	b	16980 <__assert_fail@plt+0x5958>
   16980:	ldr	r0, [pc, #3812]	; 1786c <__assert_fail@plt+0x6844>
   16984:	ldr	r1, [fp, #8]
   16988:	add	r0, r1, r0
   1698c:	movw	r1, #0
   16990:	cmp	r1, r0
   16994:	blt	169e8 <__assert_fail@plt+0x59c0>
   16998:	b	16a00 <__assert_fail@plt+0x59d8>
   1699c:	ldr	r0, [fp, #8]
   169a0:	sub	r0, r0, #1
   169a4:	movw	r1, #32767	; 0x7fff
   169a8:	cmp	r1, r0
   169ac:	blt	169e8 <__assert_fail@plt+0x59c0>
   169b0:	b	16a00 <__assert_fail@plt+0x59d8>
   169b4:	ldr	r0, [pc, #3760]	; 1786c <__assert_fail@plt+0x6844>
   169b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169bc:	sdiv	r0, r0, r1
   169c0:	ldr	r1, [fp, #8]
   169c4:	cmp	r0, r1
   169c8:	blt	169e8 <__assert_fail@plt+0x59c0>
   169cc:	b	16a00 <__assert_fail@plt+0x59d8>
   169d0:	ldr	r0, [fp, #8]
   169d4:	movw	r1, #32767	; 0x7fff
   169d8:	sdiv	r0, r1, r0
   169dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169e0:	cmp	r0, r1
   169e4:	bge	16a00 <__assert_fail@plt+0x59d8>
   169e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169ec:	ldr	r1, [fp, #8]
   169f0:	mul	r0, r0, r1
   169f4:	sxth	r0, r0
   169f8:	str	r0, [fp, #-28]	; 0xffffffe4
   169fc:	b	17834 <__assert_fail@plt+0x680c>
   16a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a04:	ldr	r1, [fp, #8]
   16a08:	mul	r0, r0, r1
   16a0c:	sxth	r0, r0
   16a10:	str	r0, [fp, #-28]	; 0xffffffe4
   16a14:	b	17838 <__assert_fail@plt+0x6810>
   16a18:	ldr	r0, [fp, #8]
   16a1c:	cmp	r0, #0
   16a20:	bge	16b30 <__assert_fail@plt+0x5b08>
   16a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a28:	cmp	r0, #0
   16a2c:	bge	16ab8 <__assert_fail@plt+0x5a90>
   16a30:	b	16a34 <__assert_fail@plt+0x5a0c>
   16a34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a38:	ldr	r1, [fp, #8]
   16a3c:	movw	r2, #65535	; 0xffff
   16a40:	sdiv	r1, r2, r1
   16a44:	cmp	r0, r1
   16a48:	blt	16bcc <__assert_fail@plt+0x5ba4>
   16a4c:	b	16be4 <__assert_fail@plt+0x5bbc>
   16a50:	b	16a54 <__assert_fail@plt+0x5a2c>
   16a54:	ldr	r0, [pc, #3592]	; 17864 <__assert_fail@plt+0x683c>
   16a58:	ldr	r1, [fp, #8]
   16a5c:	cmp	r1, r0
   16a60:	blt	16a78 <__assert_fail@plt+0x5a50>
   16a64:	b	16a84 <__assert_fail@plt+0x5a5c>
   16a68:	ldr	r0, [fp, #8]
   16a6c:	movw	r1, #0
   16a70:	cmp	r1, r0
   16a74:	bge	16a84 <__assert_fail@plt+0x5a5c>
   16a78:	movw	r0, #0
   16a7c:	str	r0, [sp, #152]	; 0x98
   16a80:	b	16a9c <__assert_fail@plt+0x5a74>
   16a84:	ldr	r0, [fp, #8]
   16a88:	movw	r1, #0
   16a8c:	sub	r0, r1, r0
   16a90:	movw	r1, #65535	; 0xffff
   16a94:	sdiv	r0, r1, r0
   16a98:	str	r0, [sp, #152]	; 0x98
   16a9c:	ldr	r0, [sp, #152]	; 0x98
   16aa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16aa4:	mvn	r2, #0
   16aa8:	sub	r1, r2, r1
   16aac:	cmp	r0, r1
   16ab0:	ble	16bcc <__assert_fail@plt+0x5ba4>
   16ab4:	b	16be4 <__assert_fail@plt+0x5bbc>
   16ab8:	b	16abc <__assert_fail@plt+0x5a94>
   16abc:	b	16b14 <__assert_fail@plt+0x5aec>
   16ac0:	b	16b14 <__assert_fail@plt+0x5aec>
   16ac4:	ldr	r0, [fp, #8]
   16ac8:	cmn	r0, #1
   16acc:	bne	16b14 <__assert_fail@plt+0x5aec>
   16ad0:	b	16ad4 <__assert_fail@plt+0x5aac>
   16ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ad8:	add	r0, r0, #0
   16adc:	movw	r1, #0
   16ae0:	cmp	r1, r0
   16ae4:	blt	16bcc <__assert_fail@plt+0x5ba4>
   16ae8:	b	16be4 <__assert_fail@plt+0x5bbc>
   16aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16af0:	movw	r1, #0
   16af4:	cmp	r1, r0
   16af8:	bge	16be4 <__assert_fail@plt+0x5bbc>
   16afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b00:	sub	r0, r0, #1
   16b04:	mvn	r1, #0
   16b08:	cmp	r1, r0
   16b0c:	blt	16bcc <__assert_fail@plt+0x5ba4>
   16b10:	b	16be4 <__assert_fail@plt+0x5bbc>
   16b14:	ldr	r0, [fp, #8]
   16b18:	movw	r1, #0
   16b1c:	sdiv	r0, r1, r0
   16b20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b24:	cmp	r0, r1
   16b28:	blt	16bcc <__assert_fail@plt+0x5ba4>
   16b2c:	b	16be4 <__assert_fail@plt+0x5bbc>
   16b30:	ldr	r0, [fp, #8]
   16b34:	cmp	r0, #0
   16b38:	bne	16b40 <__assert_fail@plt+0x5b18>
   16b3c:	b	16be4 <__assert_fail@plt+0x5bbc>
   16b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b44:	cmp	r0, #0
   16b48:	bge	16bb4 <__assert_fail@plt+0x5b8c>
   16b4c:	b	16b50 <__assert_fail@plt+0x5b28>
   16b50:	b	16b98 <__assert_fail@plt+0x5b70>
   16b54:	b	16b98 <__assert_fail@plt+0x5b70>
   16b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b5c:	cmn	r0, #1
   16b60:	bne	16b98 <__assert_fail@plt+0x5b70>
   16b64:	b	16b68 <__assert_fail@plt+0x5b40>
   16b68:	ldr	r0, [fp, #8]
   16b6c:	add	r0, r0, #0
   16b70:	movw	r1, #0
   16b74:	cmp	r1, r0
   16b78:	blt	16bcc <__assert_fail@plt+0x5ba4>
   16b7c:	b	16be4 <__assert_fail@plt+0x5bbc>
   16b80:	ldr	r0, [fp, #8]
   16b84:	sub	r0, r0, #1
   16b88:	mvn	r1, #0
   16b8c:	cmp	r1, r0
   16b90:	blt	16bcc <__assert_fail@plt+0x5ba4>
   16b94:	b	16be4 <__assert_fail@plt+0x5bbc>
   16b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b9c:	movw	r1, #0
   16ba0:	sdiv	r0, r1, r0
   16ba4:	ldr	r1, [fp, #8]
   16ba8:	cmp	r0, r1
   16bac:	blt	16bcc <__assert_fail@plt+0x5ba4>
   16bb0:	b	16be4 <__assert_fail@plt+0x5bbc>
   16bb4:	ldr	r0, [fp, #8]
   16bb8:	movw	r1, #65535	; 0xffff
   16bbc:	sdiv	r0, r1, r0
   16bc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16bc4:	cmp	r0, r1
   16bc8:	bge	16be4 <__assert_fail@plt+0x5bbc>
   16bcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bd0:	ldr	r1, [fp, #8]
   16bd4:	mul	r0, r0, r1
   16bd8:	uxth	r0, r0
   16bdc:	str	r0, [fp, #-28]	; 0xffffffe4
   16be0:	b	17834 <__assert_fail@plt+0x680c>
   16be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16be8:	ldr	r1, [fp, #8]
   16bec:	mul	r0, r0, r1
   16bf0:	uxth	r0, r0
   16bf4:	str	r0, [fp, #-28]	; 0xffffffe4
   16bf8:	b	17838 <__assert_fail@plt+0x6810>
   16bfc:	b	16c00 <__assert_fail@plt+0x5bd8>
   16c00:	b	16c04 <__assert_fail@plt+0x5bdc>
   16c04:	ldr	r0, [fp, #8]
   16c08:	cmp	r0, #0
   16c0c:	bge	16d10 <__assert_fail@plt+0x5ce8>
   16c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c14:	cmp	r0, #0
   16c18:	bge	16ca4 <__assert_fail@plt+0x5c7c>
   16c1c:	b	16c20 <__assert_fail@plt+0x5bf8>
   16c20:	ldr	r0, [pc, #3128]	; 17860 <__assert_fail@plt+0x6838>
   16c24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c28:	ldr	r2, [fp, #8]
   16c2c:	sdiv	r0, r0, r2
   16c30:	cmp	r1, r0
   16c34:	blt	16da0 <__assert_fail@plt+0x5d78>
   16c38:	b	16db4 <__assert_fail@plt+0x5d8c>
   16c3c:	b	16c40 <__assert_fail@plt+0x5c18>
   16c40:	ldr	r0, [pc, #3100]	; 17864 <__assert_fail@plt+0x683c>
   16c44:	ldr	r1, [fp, #8]
   16c48:	cmp	r1, r0
   16c4c:	blt	16c64 <__assert_fail@plt+0x5c3c>
   16c50:	b	16c70 <__assert_fail@plt+0x5c48>
   16c54:	ldr	r0, [fp, #8]
   16c58:	movw	r1, #0
   16c5c:	cmp	r1, r0
   16c60:	bge	16c70 <__assert_fail@plt+0x5c48>
   16c64:	movw	r0, #0
   16c68:	str	r0, [sp, #148]	; 0x94
   16c6c:	b	16c88 <__assert_fail@plt+0x5c60>
   16c70:	ldr	r0, [pc, #3048]	; 17860 <__assert_fail@plt+0x6838>
   16c74:	ldr	r1, [fp, #8]
   16c78:	movw	r2, #0
   16c7c:	sub	r1, r2, r1
   16c80:	sdiv	r0, r0, r1
   16c84:	str	r0, [sp, #148]	; 0x94
   16c88:	ldr	r0, [sp, #148]	; 0x94
   16c8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c90:	mvn	r2, #0
   16c94:	sub	r1, r2, r1
   16c98:	cmp	r0, r1
   16c9c:	ble	16da0 <__assert_fail@plt+0x5d78>
   16ca0:	b	16db4 <__assert_fail@plt+0x5d8c>
   16ca4:	ldr	r0, [fp, #8]
   16ca8:	cmn	r0, #1
   16cac:	bne	16cf4 <__assert_fail@plt+0x5ccc>
   16cb0:	b	16cb4 <__assert_fail@plt+0x5c8c>
   16cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cb8:	add	r0, r0, #-2147483648	; 0x80000000
   16cbc:	movw	r1, #0
   16cc0:	cmp	r1, r0
   16cc4:	blt	16da0 <__assert_fail@plt+0x5d78>
   16cc8:	b	16db4 <__assert_fail@plt+0x5d8c>
   16ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cd0:	movw	r1, #0
   16cd4:	cmp	r1, r0
   16cd8:	bge	16db4 <__assert_fail@plt+0x5d8c>
   16cdc:	ldr	r0, [pc, #2940]	; 17860 <__assert_fail@plt+0x6838>
   16ce0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ce4:	sub	r1, r1, #1
   16ce8:	cmp	r0, r1
   16cec:	blt	16da0 <__assert_fail@plt+0x5d78>
   16cf0:	b	16db4 <__assert_fail@plt+0x5d8c>
   16cf4:	ldr	r0, [pc, #2924]	; 17868 <__assert_fail@plt+0x6840>
   16cf8:	ldr	r1, [fp, #8]
   16cfc:	sdiv	r0, r0, r1
   16d00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d04:	cmp	r0, r1
   16d08:	blt	16da0 <__assert_fail@plt+0x5d78>
   16d0c:	b	16db4 <__assert_fail@plt+0x5d8c>
   16d10:	ldr	r0, [fp, #8]
   16d14:	cmp	r0, #0
   16d18:	bne	16d20 <__assert_fail@plt+0x5cf8>
   16d1c:	b	16db4 <__assert_fail@plt+0x5d8c>
   16d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d24:	cmp	r0, #0
   16d28:	bge	16d88 <__assert_fail@plt+0x5d60>
   16d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d30:	cmn	r0, #1
   16d34:	bne	16d6c <__assert_fail@plt+0x5d44>
   16d38:	b	16d3c <__assert_fail@plt+0x5d14>
   16d3c:	ldr	r0, [fp, #8]
   16d40:	add	r0, r0, #-2147483648	; 0x80000000
   16d44:	movw	r1, #0
   16d48:	cmp	r1, r0
   16d4c:	blt	16da0 <__assert_fail@plt+0x5d78>
   16d50:	b	16db4 <__assert_fail@plt+0x5d8c>
   16d54:	ldr	r0, [pc, #2820]	; 17860 <__assert_fail@plt+0x6838>
   16d58:	ldr	r1, [fp, #8]
   16d5c:	sub	r1, r1, #1
   16d60:	cmp	r0, r1
   16d64:	blt	16da0 <__assert_fail@plt+0x5d78>
   16d68:	b	16db4 <__assert_fail@plt+0x5d8c>
   16d6c:	ldr	r0, [pc, #2804]	; 17868 <__assert_fail@plt+0x6840>
   16d70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d74:	sdiv	r0, r0, r1
   16d78:	ldr	r1, [fp, #8]
   16d7c:	cmp	r0, r1
   16d80:	blt	16da0 <__assert_fail@plt+0x5d78>
   16d84:	b	16db4 <__assert_fail@plt+0x5d8c>
   16d88:	ldr	r0, [pc, #2768]	; 17860 <__assert_fail@plt+0x6838>
   16d8c:	ldr	r1, [fp, #8]
   16d90:	sdiv	r0, r0, r1
   16d94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d98:	cmp	r0, r1
   16d9c:	bge	16db4 <__assert_fail@plt+0x5d8c>
   16da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16da4:	ldr	r1, [fp, #8]
   16da8:	mul	r0, r0, r1
   16dac:	str	r0, [fp, #-28]	; 0xffffffe4
   16db0:	b	17834 <__assert_fail@plt+0x680c>
   16db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16db8:	ldr	r1, [fp, #8]
   16dbc:	mul	r0, r0, r1
   16dc0:	str	r0, [fp, #-28]	; 0xffffffe4
   16dc4:	b	17838 <__assert_fail@plt+0x6810>
   16dc8:	ldr	r0, [fp, #8]
   16dcc:	cmp	r0, #0
   16dd0:	bge	16ee0 <__assert_fail@plt+0x5eb8>
   16dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dd8:	cmp	r0, #0
   16ddc:	bge	16e68 <__assert_fail@plt+0x5e40>
   16de0:	b	16e00 <__assert_fail@plt+0x5dd8>
   16de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16de8:	ldr	r1, [fp, #8]
   16dec:	mvn	r2, #0
   16df0:	udiv	r1, r2, r1
   16df4:	cmp	r0, r1
   16df8:	bcc	16f7c <__assert_fail@plt+0x5f54>
   16dfc:	b	16f90 <__assert_fail@plt+0x5f68>
   16e00:	b	16e04 <__assert_fail@plt+0x5ddc>
   16e04:	ldr	r0, [pc, #2648]	; 17864 <__assert_fail@plt+0x683c>
   16e08:	ldr	r1, [fp, #8]
   16e0c:	cmp	r1, r0
   16e10:	blt	16e28 <__assert_fail@plt+0x5e00>
   16e14:	b	16e34 <__assert_fail@plt+0x5e0c>
   16e18:	ldr	r0, [fp, #8]
   16e1c:	movw	r1, #0
   16e20:	cmp	r1, r0
   16e24:	bge	16e34 <__assert_fail@plt+0x5e0c>
   16e28:	movw	r0, #1
   16e2c:	str	r0, [sp, #144]	; 0x90
   16e30:	b	16e4c <__assert_fail@plt+0x5e24>
   16e34:	ldr	r0, [fp, #8]
   16e38:	movw	r1, #0
   16e3c:	sub	r0, r1, r0
   16e40:	mvn	r1, #0
   16e44:	udiv	r0, r1, r0
   16e48:	str	r0, [sp, #144]	; 0x90
   16e4c:	ldr	r0, [sp, #144]	; 0x90
   16e50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e54:	mvn	r2, #0
   16e58:	sub	r1, r2, r1
   16e5c:	cmp	r0, r1
   16e60:	bls	16f7c <__assert_fail@plt+0x5f54>
   16e64:	b	16f90 <__assert_fail@plt+0x5f68>
   16e68:	b	16e6c <__assert_fail@plt+0x5e44>
   16e6c:	b	16ec4 <__assert_fail@plt+0x5e9c>
   16e70:	b	16ec4 <__assert_fail@plt+0x5e9c>
   16e74:	ldr	r0, [fp, #8]
   16e78:	cmn	r0, #1
   16e7c:	bne	16ec4 <__assert_fail@plt+0x5e9c>
   16e80:	b	16e84 <__assert_fail@plt+0x5e5c>
   16e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e88:	add	r0, r0, #0
   16e8c:	movw	r1, #0
   16e90:	cmp	r1, r0
   16e94:	blt	16f7c <__assert_fail@plt+0x5f54>
   16e98:	b	16f90 <__assert_fail@plt+0x5f68>
   16e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ea0:	movw	r1, #0
   16ea4:	cmp	r1, r0
   16ea8:	bge	16f90 <__assert_fail@plt+0x5f68>
   16eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eb0:	sub	r0, r0, #1
   16eb4:	mvn	r1, #0
   16eb8:	cmp	r1, r0
   16ebc:	blt	16f7c <__assert_fail@plt+0x5f54>
   16ec0:	b	16f90 <__assert_fail@plt+0x5f68>
   16ec4:	ldr	r0, [fp, #8]
   16ec8:	movw	r1, #0
   16ecc:	sdiv	r0, r1, r0
   16ed0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ed4:	cmp	r0, r1
   16ed8:	blt	16f7c <__assert_fail@plt+0x5f54>
   16edc:	b	16f90 <__assert_fail@plt+0x5f68>
   16ee0:	ldr	r0, [fp, #8]
   16ee4:	cmp	r0, #0
   16ee8:	bne	16ef0 <__assert_fail@plt+0x5ec8>
   16eec:	b	16f90 <__assert_fail@plt+0x5f68>
   16ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ef4:	cmp	r0, #0
   16ef8:	bge	16f64 <__assert_fail@plt+0x5f3c>
   16efc:	b	16f00 <__assert_fail@plt+0x5ed8>
   16f00:	b	16f48 <__assert_fail@plt+0x5f20>
   16f04:	b	16f48 <__assert_fail@plt+0x5f20>
   16f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f0c:	cmn	r0, #1
   16f10:	bne	16f48 <__assert_fail@plt+0x5f20>
   16f14:	b	16f18 <__assert_fail@plt+0x5ef0>
   16f18:	ldr	r0, [fp, #8]
   16f1c:	add	r0, r0, #0
   16f20:	movw	r1, #0
   16f24:	cmp	r1, r0
   16f28:	blt	16f7c <__assert_fail@plt+0x5f54>
   16f2c:	b	16f90 <__assert_fail@plt+0x5f68>
   16f30:	ldr	r0, [fp, #8]
   16f34:	sub	r0, r0, #1
   16f38:	mvn	r1, #0
   16f3c:	cmp	r1, r0
   16f40:	blt	16f7c <__assert_fail@plt+0x5f54>
   16f44:	b	16f90 <__assert_fail@plt+0x5f68>
   16f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f4c:	movw	r1, #0
   16f50:	sdiv	r0, r1, r0
   16f54:	ldr	r1, [fp, #8]
   16f58:	cmp	r0, r1
   16f5c:	blt	16f7c <__assert_fail@plt+0x5f54>
   16f60:	b	16f90 <__assert_fail@plt+0x5f68>
   16f64:	ldr	r0, [fp, #8]
   16f68:	mvn	r1, #0
   16f6c:	udiv	r0, r1, r0
   16f70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f74:	cmp	r0, r1
   16f78:	bcs	16f90 <__assert_fail@plt+0x5f68>
   16f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f80:	ldr	r1, [fp, #8]
   16f84:	mul	r0, r0, r1
   16f88:	str	r0, [fp, #-28]	; 0xffffffe4
   16f8c:	b	17834 <__assert_fail@plt+0x680c>
   16f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f94:	ldr	r1, [fp, #8]
   16f98:	mul	r0, r0, r1
   16f9c:	str	r0, [fp, #-28]	; 0xffffffe4
   16fa0:	b	17838 <__assert_fail@plt+0x6810>
   16fa4:	b	16fa8 <__assert_fail@plt+0x5f80>
   16fa8:	b	16fac <__assert_fail@plt+0x5f84>
   16fac:	ldr	r0, [fp, #8]
   16fb0:	cmp	r0, #0
   16fb4:	bge	170b8 <__assert_fail@plt+0x6090>
   16fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fbc:	cmp	r0, #0
   16fc0:	bge	1704c <__assert_fail@plt+0x6024>
   16fc4:	b	16fc8 <__assert_fail@plt+0x5fa0>
   16fc8:	ldr	r0, [pc, #2192]	; 17860 <__assert_fail@plt+0x6838>
   16fcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fd0:	ldr	r2, [fp, #8]
   16fd4:	sdiv	r0, r0, r2
   16fd8:	cmp	r1, r0
   16fdc:	blt	17148 <__assert_fail@plt+0x6120>
   16fe0:	b	1715c <__assert_fail@plt+0x6134>
   16fe4:	b	16fe8 <__assert_fail@plt+0x5fc0>
   16fe8:	ldr	r0, [pc, #2164]	; 17864 <__assert_fail@plt+0x683c>
   16fec:	ldr	r1, [fp, #8]
   16ff0:	cmp	r1, r0
   16ff4:	blt	1700c <__assert_fail@plt+0x5fe4>
   16ff8:	b	17018 <__assert_fail@plt+0x5ff0>
   16ffc:	ldr	r0, [fp, #8]
   17000:	movw	r1, #0
   17004:	cmp	r1, r0
   17008:	bge	17018 <__assert_fail@plt+0x5ff0>
   1700c:	movw	r0, #0
   17010:	str	r0, [sp, #140]	; 0x8c
   17014:	b	17030 <__assert_fail@plt+0x6008>
   17018:	ldr	r0, [pc, #2112]	; 17860 <__assert_fail@plt+0x6838>
   1701c:	ldr	r1, [fp, #8]
   17020:	movw	r2, #0
   17024:	sub	r1, r2, r1
   17028:	sdiv	r0, r0, r1
   1702c:	str	r0, [sp, #140]	; 0x8c
   17030:	ldr	r0, [sp, #140]	; 0x8c
   17034:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17038:	mvn	r2, #0
   1703c:	sub	r1, r2, r1
   17040:	cmp	r0, r1
   17044:	ble	17148 <__assert_fail@plt+0x6120>
   17048:	b	1715c <__assert_fail@plt+0x6134>
   1704c:	ldr	r0, [fp, #8]
   17050:	cmn	r0, #1
   17054:	bne	1709c <__assert_fail@plt+0x6074>
   17058:	b	1705c <__assert_fail@plt+0x6034>
   1705c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17060:	add	r0, r0, #-2147483648	; 0x80000000
   17064:	movw	r1, #0
   17068:	cmp	r1, r0
   1706c:	blt	17148 <__assert_fail@plt+0x6120>
   17070:	b	1715c <__assert_fail@plt+0x6134>
   17074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17078:	movw	r1, #0
   1707c:	cmp	r1, r0
   17080:	bge	1715c <__assert_fail@plt+0x6134>
   17084:	ldr	r0, [pc, #2004]	; 17860 <__assert_fail@plt+0x6838>
   17088:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1708c:	sub	r1, r1, #1
   17090:	cmp	r0, r1
   17094:	blt	17148 <__assert_fail@plt+0x6120>
   17098:	b	1715c <__assert_fail@plt+0x6134>
   1709c:	ldr	r0, [pc, #1988]	; 17868 <__assert_fail@plt+0x6840>
   170a0:	ldr	r1, [fp, #8]
   170a4:	sdiv	r0, r0, r1
   170a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170ac:	cmp	r0, r1
   170b0:	blt	17148 <__assert_fail@plt+0x6120>
   170b4:	b	1715c <__assert_fail@plt+0x6134>
   170b8:	ldr	r0, [fp, #8]
   170bc:	cmp	r0, #0
   170c0:	bne	170c8 <__assert_fail@plt+0x60a0>
   170c4:	b	1715c <__assert_fail@plt+0x6134>
   170c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170cc:	cmp	r0, #0
   170d0:	bge	17130 <__assert_fail@plt+0x6108>
   170d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170d8:	cmn	r0, #1
   170dc:	bne	17114 <__assert_fail@plt+0x60ec>
   170e0:	b	170e4 <__assert_fail@plt+0x60bc>
   170e4:	ldr	r0, [fp, #8]
   170e8:	add	r0, r0, #-2147483648	; 0x80000000
   170ec:	movw	r1, #0
   170f0:	cmp	r1, r0
   170f4:	blt	17148 <__assert_fail@plt+0x6120>
   170f8:	b	1715c <__assert_fail@plt+0x6134>
   170fc:	ldr	r0, [pc, #1884]	; 17860 <__assert_fail@plt+0x6838>
   17100:	ldr	r1, [fp, #8]
   17104:	sub	r1, r1, #1
   17108:	cmp	r0, r1
   1710c:	blt	17148 <__assert_fail@plt+0x6120>
   17110:	b	1715c <__assert_fail@plt+0x6134>
   17114:	ldr	r0, [pc, #1868]	; 17868 <__assert_fail@plt+0x6840>
   17118:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1711c:	sdiv	r0, r0, r1
   17120:	ldr	r1, [fp, #8]
   17124:	cmp	r0, r1
   17128:	blt	17148 <__assert_fail@plt+0x6120>
   1712c:	b	1715c <__assert_fail@plt+0x6134>
   17130:	ldr	r0, [pc, #1832]	; 17860 <__assert_fail@plt+0x6838>
   17134:	ldr	r1, [fp, #8]
   17138:	sdiv	r0, r0, r1
   1713c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17140:	cmp	r0, r1
   17144:	bge	1715c <__assert_fail@plt+0x6134>
   17148:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1714c:	ldr	r1, [fp, #8]
   17150:	mul	r0, r0, r1
   17154:	str	r0, [fp, #-28]	; 0xffffffe4
   17158:	b	17834 <__assert_fail@plt+0x680c>
   1715c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17160:	ldr	r1, [fp, #8]
   17164:	mul	r0, r0, r1
   17168:	str	r0, [fp, #-28]	; 0xffffffe4
   1716c:	b	17838 <__assert_fail@plt+0x6810>
   17170:	ldr	r0, [fp, #8]
   17174:	cmp	r0, #0
   17178:	bge	17288 <__assert_fail@plt+0x6260>
   1717c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17180:	cmp	r0, #0
   17184:	bge	17210 <__assert_fail@plt+0x61e8>
   17188:	b	171a8 <__assert_fail@plt+0x6180>
   1718c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17190:	ldr	r1, [fp, #8]
   17194:	mvn	r2, #0
   17198:	udiv	r1, r2, r1
   1719c:	cmp	r0, r1
   171a0:	bcc	17324 <__assert_fail@plt+0x62fc>
   171a4:	b	17338 <__assert_fail@plt+0x6310>
   171a8:	b	171ac <__assert_fail@plt+0x6184>
   171ac:	ldr	r0, [pc, #1712]	; 17864 <__assert_fail@plt+0x683c>
   171b0:	ldr	r1, [fp, #8]
   171b4:	cmp	r1, r0
   171b8:	blt	171d0 <__assert_fail@plt+0x61a8>
   171bc:	b	171dc <__assert_fail@plt+0x61b4>
   171c0:	ldr	r0, [fp, #8]
   171c4:	movw	r1, #0
   171c8:	cmp	r1, r0
   171cc:	bge	171dc <__assert_fail@plt+0x61b4>
   171d0:	movw	r0, #1
   171d4:	str	r0, [sp, #136]	; 0x88
   171d8:	b	171f4 <__assert_fail@plt+0x61cc>
   171dc:	ldr	r0, [fp, #8]
   171e0:	movw	r1, #0
   171e4:	sub	r0, r1, r0
   171e8:	mvn	r1, #0
   171ec:	udiv	r0, r1, r0
   171f0:	str	r0, [sp, #136]	; 0x88
   171f4:	ldr	r0, [sp, #136]	; 0x88
   171f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171fc:	mvn	r2, #0
   17200:	sub	r1, r2, r1
   17204:	cmp	r0, r1
   17208:	bls	17324 <__assert_fail@plt+0x62fc>
   1720c:	b	17338 <__assert_fail@plt+0x6310>
   17210:	b	17214 <__assert_fail@plt+0x61ec>
   17214:	b	1726c <__assert_fail@plt+0x6244>
   17218:	b	1726c <__assert_fail@plt+0x6244>
   1721c:	ldr	r0, [fp, #8]
   17220:	cmn	r0, #1
   17224:	bne	1726c <__assert_fail@plt+0x6244>
   17228:	b	1722c <__assert_fail@plt+0x6204>
   1722c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17230:	add	r0, r0, #0
   17234:	movw	r1, #0
   17238:	cmp	r1, r0
   1723c:	blt	17324 <__assert_fail@plt+0x62fc>
   17240:	b	17338 <__assert_fail@plt+0x6310>
   17244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17248:	movw	r1, #0
   1724c:	cmp	r1, r0
   17250:	bge	17338 <__assert_fail@plt+0x6310>
   17254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17258:	sub	r0, r0, #1
   1725c:	mvn	r1, #0
   17260:	cmp	r1, r0
   17264:	blt	17324 <__assert_fail@plt+0x62fc>
   17268:	b	17338 <__assert_fail@plt+0x6310>
   1726c:	ldr	r0, [fp, #8]
   17270:	movw	r1, #0
   17274:	sdiv	r0, r1, r0
   17278:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1727c:	cmp	r0, r1
   17280:	blt	17324 <__assert_fail@plt+0x62fc>
   17284:	b	17338 <__assert_fail@plt+0x6310>
   17288:	ldr	r0, [fp, #8]
   1728c:	cmp	r0, #0
   17290:	bne	17298 <__assert_fail@plt+0x6270>
   17294:	b	17338 <__assert_fail@plt+0x6310>
   17298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1729c:	cmp	r0, #0
   172a0:	bge	1730c <__assert_fail@plt+0x62e4>
   172a4:	b	172a8 <__assert_fail@plt+0x6280>
   172a8:	b	172f0 <__assert_fail@plt+0x62c8>
   172ac:	b	172f0 <__assert_fail@plt+0x62c8>
   172b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172b4:	cmn	r0, #1
   172b8:	bne	172f0 <__assert_fail@plt+0x62c8>
   172bc:	b	172c0 <__assert_fail@plt+0x6298>
   172c0:	ldr	r0, [fp, #8]
   172c4:	add	r0, r0, #0
   172c8:	movw	r1, #0
   172cc:	cmp	r1, r0
   172d0:	blt	17324 <__assert_fail@plt+0x62fc>
   172d4:	b	17338 <__assert_fail@plt+0x6310>
   172d8:	ldr	r0, [fp, #8]
   172dc:	sub	r0, r0, #1
   172e0:	mvn	r1, #0
   172e4:	cmp	r1, r0
   172e8:	blt	17324 <__assert_fail@plt+0x62fc>
   172ec:	b	17338 <__assert_fail@plt+0x6310>
   172f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172f4:	movw	r1, #0
   172f8:	sdiv	r0, r1, r0
   172fc:	ldr	r1, [fp, #8]
   17300:	cmp	r0, r1
   17304:	blt	17324 <__assert_fail@plt+0x62fc>
   17308:	b	17338 <__assert_fail@plt+0x6310>
   1730c:	ldr	r0, [fp, #8]
   17310:	mvn	r1, #0
   17314:	udiv	r0, r1, r0
   17318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1731c:	cmp	r0, r1
   17320:	bcs	17338 <__assert_fail@plt+0x6310>
   17324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17328:	ldr	r1, [fp, #8]
   1732c:	mul	r0, r0, r1
   17330:	str	r0, [fp, #-28]	; 0xffffffe4
   17334:	b	17834 <__assert_fail@plt+0x680c>
   17338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1733c:	ldr	r1, [fp, #8]
   17340:	mul	r0, r0, r1
   17344:	str	r0, [fp, #-28]	; 0xffffffe4
   17348:	b	17838 <__assert_fail@plt+0x6810>
   1734c:	b	17350 <__assert_fail@plt+0x6328>
   17350:	ldr	r0, [fp, #8]
   17354:	cmp	r0, #0
   17358:	bge	174e0 <__assert_fail@plt+0x64b8>
   1735c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17360:	cmp	r0, #0
   17364:	bge	1744c <__assert_fail@plt+0x6424>
   17368:	b	1736c <__assert_fail@plt+0x6344>
   1736c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17370:	ldr	r1, [fp, #8]
   17374:	asr	r3, r1, #31
   17378:	mvn	r2, #0
   1737c:	mvn	ip, #-2147483648	; 0x80000000
   17380:	str	r0, [sp, #132]	; 0x84
   17384:	mov	r0, r2
   17388:	str	r1, [sp, #128]	; 0x80
   1738c:	mov	r1, ip
   17390:	ldr	r2, [sp, #128]	; 0x80
   17394:	bl	1c3b8 <__assert_fail@plt+0xb390>
   17398:	ldr	r2, [sp, #132]	; 0x84
   1739c:	subs	r0, r2, r0
   173a0:	rscs	r1, r1, r2, asr #31
   173a4:	str	r0, [sp, #124]	; 0x7c
   173a8:	str	r1, [sp, #120]	; 0x78
   173ac:	blt	175c0 <__assert_fail@plt+0x6598>
   173b0:	b	175d4 <__assert_fail@plt+0x65ac>
   173b4:	b	173b8 <__assert_fail@plt+0x6390>
   173b8:	ldr	r0, [pc, #1188]	; 17864 <__assert_fail@plt+0x683c>
   173bc:	ldr	r1, [fp, #8]
   173c0:	cmp	r1, r0
   173c4:	blt	173dc <__assert_fail@plt+0x63b4>
   173c8:	b	173f0 <__assert_fail@plt+0x63c8>
   173cc:	ldr	r0, [fp, #8]
   173d0:	movw	r1, #0
   173d4:	cmp	r1, r0
   173d8:	bge	173f0 <__assert_fail@plt+0x63c8>
   173dc:	mov	r0, #0
   173e0:	mvn	r1, #0
   173e4:	str	r1, [sp, #116]	; 0x74
   173e8:	str	r0, [sp, #112]	; 0x70
   173ec:	b	17424 <__assert_fail@plt+0x63fc>
   173f0:	ldr	r0, [fp, #8]
   173f4:	rsb	r0, r0, #0
   173f8:	asr	r3, r0, #31
   173fc:	mvn	r1, #0
   17400:	mvn	r2, #-2147483648	; 0x80000000
   17404:	str	r0, [sp, #108]	; 0x6c
   17408:	mov	r0, r1
   1740c:	mov	r1, r2
   17410:	ldr	r2, [sp, #108]	; 0x6c
   17414:	bl	1c3b8 <__assert_fail@plt+0xb390>
   17418:	str	r0, [sp, #116]	; 0x74
   1741c:	str	r1, [sp, #112]	; 0x70
   17420:	b	17424 <__assert_fail@plt+0x63fc>
   17424:	ldr	r0, [sp, #112]	; 0x70
   17428:	ldr	r1, [sp, #116]	; 0x74
   1742c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17430:	mvn	r2, r2
   17434:	subs	r1, r2, r1
   17438:	rscs	r0, r0, r2, asr #31
   1743c:	str	r1, [sp, #104]	; 0x68
   17440:	str	r0, [sp, #100]	; 0x64
   17444:	bge	175c0 <__assert_fail@plt+0x6598>
   17448:	b	175d4 <__assert_fail@plt+0x65ac>
   1744c:	ldr	r0, [fp, #8]
   17450:	cmn	r0, #1
   17454:	bne	174a0 <__assert_fail@plt+0x6478>
   17458:	b	1745c <__assert_fail@plt+0x6434>
   1745c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17460:	mov	r1, #-2147483648	; 0x80000000
   17464:	add	r1, r1, r0, asr #31
   17468:	rsbs	r0, r0, #0
   1746c:	rscs	r1, r1, #0
   17470:	str	r0, [sp, #96]	; 0x60
   17474:	str	r1, [sp, #92]	; 0x5c
   17478:	blt	175c0 <__assert_fail@plt+0x6598>
   1747c:	b	175d4 <__assert_fail@plt+0x65ac>
   17480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17484:	movw	r1, #0
   17488:	cmp	r1, r0
   1748c:	bge	175d4 <__assert_fail@plt+0x65ac>
   17490:	mov	r0, #0
   17494:	cmp	r0, #0
   17498:	bne	175c0 <__assert_fail@plt+0x6598>
   1749c:	b	175d4 <__assert_fail@plt+0x65ac>
   174a0:	ldr	r0, [fp, #8]
   174a4:	asr	r3, r0, #31
   174a8:	mov	r1, #0
   174ac:	mov	r2, #-2147483648	; 0x80000000
   174b0:	str	r0, [sp, #88]	; 0x58
   174b4:	mov	r0, r1
   174b8:	mov	r1, r2
   174bc:	ldr	r2, [sp, #88]	; 0x58
   174c0:	bl	1c3b8 <__assert_fail@plt+0xb390>
   174c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   174c8:	subs	r0, r0, r2
   174cc:	sbcs	r1, r1, r2, asr #31
   174d0:	str	r0, [sp, #84]	; 0x54
   174d4:	str	r1, [sp, #80]	; 0x50
   174d8:	blt	175c0 <__assert_fail@plt+0x6598>
   174dc:	b	175d4 <__assert_fail@plt+0x65ac>
   174e0:	ldr	r0, [fp, #8]
   174e4:	cmp	r0, #0
   174e8:	bne	174f0 <__assert_fail@plt+0x64c8>
   174ec:	b	175d4 <__assert_fail@plt+0x65ac>
   174f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174f4:	cmp	r0, #0
   174f8:	bge	17580 <__assert_fail@plt+0x6558>
   174fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17500:	cmn	r0, #1
   17504:	bne	17540 <__assert_fail@plt+0x6518>
   17508:	b	1750c <__assert_fail@plt+0x64e4>
   1750c:	ldr	r0, [fp, #8]
   17510:	mov	r1, #-2147483648	; 0x80000000
   17514:	add	r1, r1, r0, asr #31
   17518:	rsbs	r0, r0, #0
   1751c:	rscs	r1, r1, #0
   17520:	str	r0, [sp, #76]	; 0x4c
   17524:	str	r1, [sp, #72]	; 0x48
   17528:	blt	175c0 <__assert_fail@plt+0x6598>
   1752c:	b	175d4 <__assert_fail@plt+0x65ac>
   17530:	mov	r0, #0
   17534:	cmp	r0, #0
   17538:	bne	175c0 <__assert_fail@plt+0x6598>
   1753c:	b	175d4 <__assert_fail@plt+0x65ac>
   17540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17544:	asr	r3, r0, #31
   17548:	mov	r1, #0
   1754c:	mov	r2, #-2147483648	; 0x80000000
   17550:	str	r0, [sp, #68]	; 0x44
   17554:	mov	r0, r1
   17558:	mov	r1, r2
   1755c:	ldr	r2, [sp, #68]	; 0x44
   17560:	bl	1c3b8 <__assert_fail@plt+0xb390>
   17564:	ldr	r2, [fp, #8]
   17568:	subs	r0, r0, r2
   1756c:	sbcs	r1, r1, r2, asr #31
   17570:	str	r0, [sp, #64]	; 0x40
   17574:	str	r1, [sp, #60]	; 0x3c
   17578:	blt	175c0 <__assert_fail@plt+0x6598>
   1757c:	b	175d4 <__assert_fail@plt+0x65ac>
   17580:	ldr	r0, [fp, #8]
   17584:	asr	r3, r0, #31
   17588:	mvn	r1, #0
   1758c:	mvn	r2, #-2147483648	; 0x80000000
   17590:	str	r0, [sp, #56]	; 0x38
   17594:	mov	r0, r1
   17598:	mov	r1, r2
   1759c:	ldr	r2, [sp, #56]	; 0x38
   175a0:	bl	1c3b8 <__assert_fail@plt+0xb390>
   175a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   175a8:	subs	r0, r0, r2
   175ac:	sbcs	r1, r1, r2, asr #31
   175b0:	str	r0, [sp, #52]	; 0x34
   175b4:	str	r1, [sp, #48]	; 0x30
   175b8:	bge	175d4 <__assert_fail@plt+0x65ac>
   175bc:	b	175c0 <__assert_fail@plt+0x6598>
   175c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175c4:	ldr	r1, [fp, #8]
   175c8:	mul	r0, r0, r1
   175cc:	str	r0, [fp, #-28]	; 0xffffffe4
   175d0:	b	17834 <__assert_fail@plt+0x680c>
   175d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175d8:	ldr	r1, [fp, #8]
   175dc:	mul	r0, r0, r1
   175e0:	str	r0, [fp, #-28]	; 0xffffffe4
   175e4:	b	17838 <__assert_fail@plt+0x6810>
   175e8:	ldr	r0, [fp, #8]
   175ec:	cmp	r0, #0
   175f0:	bge	17750 <__assert_fail@plt+0x6728>
   175f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175f8:	cmp	r0, #0
   175fc:	bge	176d8 <__assert_fail@plt+0x66b0>
   17600:	b	17648 <__assert_fail@plt+0x6620>
   17604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17608:	ldr	r1, [fp, #8]
   1760c:	asr	r3, r1, #31
   17610:	mvn	r2, #0
   17614:	str	r0, [sp, #44]	; 0x2c
   17618:	mov	r0, r2
   1761c:	str	r1, [sp, #40]	; 0x28
   17620:	mov	r1, r2
   17624:	ldr	r2, [sp, #40]	; 0x28
   17628:	bl	1c48c <__assert_fail@plt+0xb464>
   1762c:	ldr	r2, [sp, #44]	; 0x2c
   17630:	subs	r0, r2, r0
   17634:	rscs	r1, r1, r2, asr #31
   17638:	str	r0, [sp, #36]	; 0x24
   1763c:	str	r1, [sp, #32]
   17640:	bcc	1780c <__assert_fail@plt+0x67e4>
   17644:	b	17820 <__assert_fail@plt+0x67f8>
   17648:	b	1764c <__assert_fail@plt+0x6624>
   1764c:	ldr	r0, [pc, #528]	; 17864 <__assert_fail@plt+0x683c>
   17650:	ldr	r1, [fp, #8]
   17654:	cmp	r1, r0
   17658:	blt	17670 <__assert_fail@plt+0x6648>
   1765c:	b	17684 <__assert_fail@plt+0x665c>
   17660:	ldr	r0, [fp, #8]
   17664:	movw	r1, #0
   17668:	cmp	r1, r0
   1766c:	bge	17684 <__assert_fail@plt+0x665c>
   17670:	mov	r0, #1
   17674:	mvn	r1, #0
   17678:	str	r1, [sp, #28]
   1767c:	str	r0, [sp, #24]
   17680:	b	176b0 <__assert_fail@plt+0x6688>
   17684:	ldr	r0, [fp, #8]
   17688:	rsb	r0, r0, #0
   1768c:	asr	r3, r0, #31
   17690:	mvn	r1, #0
   17694:	str	r0, [sp, #20]
   17698:	mov	r0, r1
   1769c:	ldr	r2, [sp, #20]
   176a0:	bl	1c48c <__assert_fail@plt+0xb464>
   176a4:	str	r0, [sp, #28]
   176a8:	str	r1, [sp, #24]
   176ac:	b	176b0 <__assert_fail@plt+0x6688>
   176b0:	ldr	r0, [sp, #24]
   176b4:	ldr	r1, [sp, #28]
   176b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176bc:	mvn	r2, r2
   176c0:	subs	r1, r2, r1
   176c4:	rscs	r0, r0, r2, asr #31
   176c8:	str	r1, [sp, #16]
   176cc:	str	r0, [sp, #12]
   176d0:	bcs	1780c <__assert_fail@plt+0x67e4>
   176d4:	b	17820 <__assert_fail@plt+0x67f8>
   176d8:	b	176dc <__assert_fail@plt+0x66b4>
   176dc:	b	17734 <__assert_fail@plt+0x670c>
   176e0:	b	17734 <__assert_fail@plt+0x670c>
   176e4:	ldr	r0, [fp, #8]
   176e8:	cmn	r0, #1
   176ec:	bne	17734 <__assert_fail@plt+0x670c>
   176f0:	b	176f4 <__assert_fail@plt+0x66cc>
   176f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176f8:	add	r0, r0, #0
   176fc:	movw	r1, #0
   17700:	cmp	r1, r0
   17704:	blt	1780c <__assert_fail@plt+0x67e4>
   17708:	b	17820 <__assert_fail@plt+0x67f8>
   1770c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17710:	movw	r1, #0
   17714:	cmp	r1, r0
   17718:	bge	17820 <__assert_fail@plt+0x67f8>
   1771c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17720:	sub	r0, r0, #1
   17724:	mvn	r1, #0
   17728:	cmp	r1, r0
   1772c:	blt	1780c <__assert_fail@plt+0x67e4>
   17730:	b	17820 <__assert_fail@plt+0x67f8>
   17734:	ldr	r0, [fp, #8]
   17738:	movw	r1, #0
   1773c:	sdiv	r0, r1, r0
   17740:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17744:	cmp	r0, r1
   17748:	blt	1780c <__assert_fail@plt+0x67e4>
   1774c:	b	17820 <__assert_fail@plt+0x67f8>
   17750:	ldr	r0, [fp, #8]
   17754:	cmp	r0, #0
   17758:	bne	17760 <__assert_fail@plt+0x6738>
   1775c:	b	17820 <__assert_fail@plt+0x67f8>
   17760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17764:	cmp	r0, #0
   17768:	bge	177d4 <__assert_fail@plt+0x67ac>
   1776c:	b	17770 <__assert_fail@plt+0x6748>
   17770:	b	177b8 <__assert_fail@plt+0x6790>
   17774:	b	177b8 <__assert_fail@plt+0x6790>
   17778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1777c:	cmn	r0, #1
   17780:	bne	177b8 <__assert_fail@plt+0x6790>
   17784:	b	17788 <__assert_fail@plt+0x6760>
   17788:	ldr	r0, [fp, #8]
   1778c:	add	r0, r0, #0
   17790:	movw	r1, #0
   17794:	cmp	r1, r0
   17798:	blt	1780c <__assert_fail@plt+0x67e4>
   1779c:	b	17820 <__assert_fail@plt+0x67f8>
   177a0:	ldr	r0, [fp, #8]
   177a4:	sub	r0, r0, #1
   177a8:	mvn	r1, #0
   177ac:	cmp	r1, r0
   177b0:	blt	1780c <__assert_fail@plt+0x67e4>
   177b4:	b	17820 <__assert_fail@plt+0x67f8>
   177b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177bc:	movw	r1, #0
   177c0:	sdiv	r0, r1, r0
   177c4:	ldr	r1, [fp, #8]
   177c8:	cmp	r0, r1
   177cc:	blt	1780c <__assert_fail@plt+0x67e4>
   177d0:	b	17820 <__assert_fail@plt+0x67f8>
   177d4:	ldr	r0, [fp, #8]
   177d8:	asr	r3, r0, #31
   177dc:	mvn	r1, #0
   177e0:	str	r0, [sp, #8]
   177e4:	mov	r0, r1
   177e8:	ldr	r2, [sp, #8]
   177ec:	bl	1c48c <__assert_fail@plt+0xb464>
   177f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177f4:	subs	r0, r0, r2
   177f8:	sbcs	r1, r1, r2, asr #31
   177fc:	str	r0, [sp, #4]
   17800:	str	r1, [sp]
   17804:	bcs	17820 <__assert_fail@plt+0x67f8>
   17808:	b	1780c <__assert_fail@plt+0x67e4>
   1780c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17810:	ldr	r1, [fp, #8]
   17814:	mul	r0, r0, r1
   17818:	str	r0, [fp, #-28]	; 0xffffffe4
   1781c:	b	17834 <__assert_fail@plt+0x680c>
   17820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17824:	ldr	r1, [fp, #8]
   17828:	mul	r0, r0, r1
   1782c:	str	r0, [fp, #-28]	; 0xffffffe4
   17830:	b	17838 <__assert_fail@plt+0x6810>
   17834:	bl	17a10 <__assert_fail@plt+0x69e8>
   17838:	ldr	r0, [fp, #-4]
   1783c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17840:	bl	14ccc <__assert_fail@plt+0x3ca4>
   17844:	str	r0, [fp, #-4]
   17848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1784c:	ldr	r1, [fp, #-8]
   17850:	str	r0, [r1]
   17854:	ldr	r0, [fp, #-4]
   17858:	mov	sp, fp
   1785c:	pop	{fp, pc}
   17860:	svcvc	0x00ffffff
   17864:	andhi	r0, r0, r1
   17868:	andhi	r0, r0, r0
   1786c:			; <UNDEFINED> instruction: 0xffff8000
   17870:	push	{fp, lr}
   17874:	mov	fp, sp
   17878:	sub	sp, sp, #8
   1787c:	str	r0, [sp, #4]
   17880:	ldr	r0, [sp, #4]
   17884:	movw	r1, #1
   17888:	bl	17894 <__assert_fail@plt+0x686c>
   1788c:	mov	sp, fp
   17890:	pop	{fp, pc}
   17894:	push	{fp, lr}
   17898:	mov	fp, sp
   1789c:	sub	sp, sp, #8
   178a0:	str	r0, [sp, #4]
   178a4:	str	r1, [sp]
   178a8:	ldr	r0, [sp, #4]
   178ac:	ldr	r1, [sp]
   178b0:	bl	19ef0 <__assert_fail@plt+0x8ec8>
   178b4:	bl	14c58 <__assert_fail@plt+0x3c30>
   178b8:	mov	sp, fp
   178bc:	pop	{fp, pc}
   178c0:	push	{fp, lr}
   178c4:	mov	fp, sp
   178c8:	sub	sp, sp, #8
   178cc:	str	r0, [sp, #4]
   178d0:	ldr	r0, [sp, #4]
   178d4:	movw	r1, #1
   178d8:	bl	178e4 <__assert_fail@plt+0x68bc>
   178dc:	mov	sp, fp
   178e0:	pop	{fp, pc}
   178e4:	push	{fp, lr}
   178e8:	mov	fp, sp
   178ec:	sub	sp, sp, #8
   178f0:	str	r0, [sp, #4]
   178f4:	str	r1, [sp]
   178f8:	ldr	r0, [sp, #4]
   178fc:	ldr	r1, [sp]
   17900:	bl	1ac14 <__assert_fail@plt+0x9bec>
   17904:	bl	14c58 <__assert_fail@plt+0x3c30>
   17908:	mov	sp, fp
   1790c:	pop	{fp, pc}
   17910:	push	{fp, lr}
   17914:	mov	fp, sp
   17918:	sub	sp, sp, #16
   1791c:	str	r0, [fp, #-4]
   17920:	str	r1, [sp, #8]
   17924:	ldr	r0, [sp, #8]
   17928:	bl	14c34 <__assert_fail@plt+0x3c0c>
   1792c:	ldr	r1, [fp, #-4]
   17930:	ldr	r2, [sp, #8]
   17934:	str	r0, [sp, #4]
   17938:	bl	10e30 <memcpy@plt>
   1793c:	ldr	r0, [sp, #4]
   17940:	mov	sp, fp
   17944:	pop	{fp, pc}
   17948:	push	{fp, lr}
   1794c:	mov	fp, sp
   17950:	sub	sp, sp, #16
   17954:	str	r0, [fp, #-4]
   17958:	str	r1, [sp, #8]
   1795c:	ldr	r0, [sp, #8]
   17960:	bl	14c88 <__assert_fail@plt+0x3c60>
   17964:	ldr	r1, [fp, #-4]
   17968:	ldr	r2, [sp, #8]
   1796c:	str	r0, [sp, #4]
   17970:	bl	10e30 <memcpy@plt>
   17974:	ldr	r0, [sp, #4]
   17978:	mov	sp, fp
   1797c:	pop	{fp, pc}
   17980:	push	{fp, lr}
   17984:	mov	fp, sp
   17988:	sub	sp, sp, #16
   1798c:	str	r0, [fp, #-4]
   17990:	str	r1, [sp, #8]
   17994:	ldr	r0, [sp, #8]
   17998:	add	r0, r0, #1
   1799c:	bl	14c88 <__assert_fail@plt+0x3c60>
   179a0:	str	r0, [sp, #4]
   179a4:	ldr	r0, [sp, #4]
   179a8:	ldr	r1, [sp, #8]
   179ac:	add	r0, r0, r1
   179b0:	movw	r1, #0
   179b4:	strb	r1, [r0]
   179b8:	ldr	r0, [sp, #4]
   179bc:	ldr	r1, [fp, #-4]
   179c0:	ldr	r2, [sp, #8]
   179c4:	str	r0, [sp]
   179c8:	bl	10e30 <memcpy@plt>
   179cc:	ldr	r0, [sp]
   179d0:	mov	sp, fp
   179d4:	pop	{fp, pc}
   179d8:	push	{fp, lr}
   179dc:	mov	fp, sp
   179e0:	sub	sp, sp, #8
   179e4:	str	r0, [sp, #4]
   179e8:	ldr	r0, [sp, #4]
   179ec:	ldr	r1, [sp, #4]
   179f0:	str	r0, [sp]
   179f4:	mov	r0, r1
   179f8:	bl	10f50 <strlen@plt>
   179fc:	add	r1, r0, #1
   17a00:	ldr	r0, [sp]
   17a04:	bl	17910 <__assert_fail@plt+0x68e8>
   17a08:	mov	sp, fp
   17a0c:	pop	{fp, pc}
   17a10:	push	{fp, lr}
   17a14:	mov	fp, sp
   17a18:	sub	sp, sp, #8
   17a1c:	movw	r0, #57576	; 0xe0e8
   17a20:	movt	r0, #2
   17a24:	ldr	r0, [r0]
   17a28:	movw	r1, #52916	; 0xceb4
   17a2c:	movt	r1, #1
   17a30:	str	r0, [sp, #4]
   17a34:	mov	r0, r1
   17a38:	bl	10f38 <gettext@plt>
   17a3c:	ldr	r1, [sp, #4]
   17a40:	str	r0, [sp]
   17a44:	mov	r0, r1
   17a48:	movw	r1, #0
   17a4c:	movw	r2, #51831	; 0xca77
   17a50:	movt	r2, #1
   17a54:	ldr	r3, [sp]
   17a58:	bl	10ecc <error@plt>
   17a5c:	bl	1101c <abort@plt>
   17a60:	push	{r4, r5, r6, sl, fp, lr}
   17a64:	add	fp, sp, #16
   17a68:	sub	sp, sp, #112	; 0x70
   17a6c:	ldr	ip, [fp, #12]
   17a70:	ldr	lr, [fp, #8]
   17a74:	ldr	r4, [fp, #24]
   17a78:	ldr	r5, [fp, #20]
   17a7c:	ldr	r6, [fp, #16]
   17a80:	str	r0, [fp, #-20]	; 0xffffffec
   17a84:	str	r1, [fp, #-24]	; 0xffffffe8
   17a88:	str	r3, [fp, #-28]	; 0xffffffe4
   17a8c:	str	r2, [fp, #-32]	; 0xffffffe0
   17a90:	str	ip, [fp, #-36]	; 0xffffffdc
   17a94:	str	lr, [fp, #-40]	; 0xffffffd8
   17a98:	ldr	r0, [fp, #-20]	; 0xffffffec
   17a9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17aa0:	ldr	r1, [fp, #16]
   17aa4:	movw	r3, #0
   17aa8:	str	r1, [fp, #-60]	; 0xffffffc4
   17aac:	mov	r1, r3
   17ab0:	sub	r3, fp, #56	; 0x38
   17ab4:	ldr	ip, [fp, #-60]	; 0xffffffc4
   17ab8:	str	ip, [sp]
   17abc:	str	r5, [sp, #64]	; 0x40
   17ac0:	str	r4, [sp, #60]	; 0x3c
   17ac4:	str	r6, [sp, #56]	; 0x38
   17ac8:	bl	17cf0 <__assert_fail@plt+0x6cc8>
   17acc:	str	r0, [fp, #-44]	; 0xffffffd4
   17ad0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ad4:	cmp	r0, #0
   17ad8:	bne	17b78 <__assert_fail@plt+0x6b50>
   17adc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17ae0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17ae4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17ae8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17aec:	subs	r0, r0, r2
   17af0:	sbcs	r1, r1, r3
   17af4:	str	r0, [sp, #52]	; 0x34
   17af8:	str	r1, [sp, #48]	; 0x30
   17afc:	bcc	17b2c <__assert_fail@plt+0x6b04>
   17b00:	b	17b04 <__assert_fail@plt+0x6adc>
   17b04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17b08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17b0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17b10:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17b14:	subs	r0, r0, r2
   17b18:	sbcs	r1, r1, r3
   17b1c:	str	r0, [sp, #44]	; 0x2c
   17b20:	str	r1, [sp, #40]	; 0x28
   17b24:	bcs	17b74 <__assert_fail@plt+0x6b4c>
   17b28:	b	17b2c <__assert_fail@plt+0x6b04>
   17b2c:	mov	r0, #1
   17b30:	str	r0, [fp, #-44]	; 0xffffffd4
   17b34:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17b38:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17b3c:	subs	r0, r0, #1073741824	; 0x40000000
   17b40:	sbcs	r1, r1, #0
   17b44:	str	r0, [sp, #36]	; 0x24
   17b48:	str	r1, [sp, #32]
   17b4c:	bcc	17b64 <__assert_fail@plt+0x6b3c>
   17b50:	b	17b54 <__assert_fail@plt+0x6b2c>
   17b54:	bl	10f74 <__errno_location@plt>
   17b58:	movw	lr, #75	; 0x4b
   17b5c:	str	lr, [r0]
   17b60:	b	17b70 <__assert_fail@plt+0x6b48>
   17b64:	bl	10f74 <__errno_location@plt>
   17b68:	movw	lr, #34	; 0x22
   17b6c:	str	lr, [r0]
   17b70:	b	17b74 <__assert_fail@plt+0x6b4c>
   17b74:	b	17bb4 <__assert_fail@plt+0x6b8c>
   17b78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b7c:	cmp	r0, #1
   17b80:	bne	17b94 <__assert_fail@plt+0x6b6c>
   17b84:	bl	10f74 <__errno_location@plt>
   17b88:	movw	lr, #75	; 0x4b
   17b8c:	str	lr, [r0]
   17b90:	b	17bb0 <__assert_fail@plt+0x6b88>
   17b94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17b98:	cmp	r0, #3
   17b9c:	bne	17bac <__assert_fail@plt+0x6b84>
   17ba0:	bl	10f74 <__errno_location@plt>
   17ba4:	movw	lr, #0
   17ba8:	str	lr, [r0]
   17bac:	b	17bb0 <__assert_fail@plt+0x6b88>
   17bb0:	b	17bb4 <__assert_fail@plt+0x6b8c>
   17bb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17bb8:	cmp	r0, #0
   17bbc:	beq	17c58 <__assert_fail@plt+0x6c30>
   17bc0:	ldr	r0, [fp, #24]
   17bc4:	cmp	r0, #0
   17bc8:	beq	17bd8 <__assert_fail@plt+0x6bb0>
   17bcc:	ldr	r0, [fp, #24]
   17bd0:	str	r0, [sp, #28]
   17bd4:	b	17be4 <__assert_fail@plt+0x6bbc>
   17bd8:	movw	r0, #1
   17bdc:	str	r0, [sp, #28]
   17be0:	b	17be4 <__assert_fail@plt+0x6bbc>
   17be4:	ldr	r0, [sp, #28]
   17be8:	str	r0, [sp, #24]
   17bec:	bl	10f74 <__errno_location@plt>
   17bf0:	ldr	r0, [r0]
   17bf4:	cmp	r0, #22
   17bf8:	bne	17c08 <__assert_fail@plt+0x6be0>
   17bfc:	movw	r0, #0
   17c00:	str	r0, [sp, #20]
   17c04:	b	17c14 <__assert_fail@plt+0x6bec>
   17c08:	bl	10f74 <__errno_location@plt>
   17c0c:	ldr	r0, [r0]
   17c10:	str	r0, [sp, #20]
   17c14:	ldr	r0, [sp, #20]
   17c18:	ldr	r3, [fp, #20]
   17c1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17c20:	str	r0, [sp, #16]
   17c24:	mov	r0, r1
   17c28:	str	r3, [sp, #12]
   17c2c:	bl	141e8 <__assert_fail@plt+0x31c0>
   17c30:	ldr	r1, [sp, #24]
   17c34:	str	r0, [sp, #8]
   17c38:	mov	r0, r1
   17c3c:	ldr	r1, [sp, #16]
   17c40:	movw	r2, #51827	; 0xca73
   17c44:	movt	r2, #1
   17c48:	ldr	r3, [sp, #12]
   17c4c:	ldr	lr, [sp, #8]
   17c50:	str	lr, [sp]
   17c54:	bl	10ecc <error@plt>
   17c58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17c5c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17c60:	sub	sp, fp, #16
   17c64:	pop	{r4, r5, r6, sl, fp, pc}
   17c68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17c6c:	add	fp, sp, #24
   17c70:	sub	sp, sp, #56	; 0x38
   17c74:	ldr	r1, [fp, #12]
   17c78:	ldr	ip, [fp, #8]
   17c7c:	ldr	lr, [fp, #24]
   17c80:	ldr	r4, [fp, #20]
   17c84:	ldr	r5, [fp, #16]
   17c88:	str	r0, [fp, #-28]	; 0xffffffe4
   17c8c:	str	r3, [sp, #44]	; 0x2c
   17c90:	str	r2, [sp, #40]	; 0x28
   17c94:	str	r1, [sp, #36]	; 0x24
   17c98:	str	ip, [sp, #32]
   17c9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17ca0:	ldr	r2, [sp, #40]	; 0x28
   17ca4:	ldr	r3, [sp, #44]	; 0x2c
   17ca8:	ldr	r1, [sp, #32]
   17cac:	ldr	ip, [sp, #36]	; 0x24
   17cb0:	ldr	r6, [fp, #16]
   17cb4:	ldr	r7, [fp, #20]
   17cb8:	ldr	r8, [fp, #24]
   17cbc:	mov	r9, sp
   17cc0:	str	r8, [r9, #16]
   17cc4:	str	r7, [r9, #12]
   17cc8:	str	r6, [r9, #8]
   17ccc:	str	ip, [r9, #4]
   17cd0:	str	r1, [r9]
   17cd4:	mov	r1, #10
   17cd8:	str	lr, [sp, #28]
   17cdc:	str	r4, [sp, #24]
   17ce0:	str	r5, [sp, #20]
   17ce4:	bl	17a60 <__assert_fail@plt+0x6a38>
   17ce8:	sub	sp, fp, #24
   17cec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17cf0:	push	{fp, lr}
   17cf4:	mov	fp, sp
   17cf8:	sub	sp, sp, #88	; 0x58
   17cfc:	ldr	ip, [fp, #8]
   17d00:	str	r0, [fp, #-8]
   17d04:	str	r1, [fp, #-12]
   17d08:	str	r2, [fp, #-16]
   17d0c:	str	r3, [fp, #-20]	; 0xffffffec
   17d10:	movw	r0, #0
   17d14:	str	r0, [sp, #44]	; 0x2c
   17d18:	ldr	r1, [fp, #-16]
   17d1c:	cmp	r0, r1
   17d20:	str	ip, [sp, #20]
   17d24:	bgt	17d38 <__assert_fail@plt+0x6d10>
   17d28:	ldr	r0, [fp, #-16]
   17d2c:	cmp	r0, #36	; 0x24
   17d30:	bgt	17d38 <__assert_fail@plt+0x6d10>
   17d34:	b	17d58 <__assert_fail@plt+0x6d30>
   17d38:	movw	r0, #52933	; 0xcec5
   17d3c:	movt	r0, #1
   17d40:	movw	r1, #52971	; 0xceeb
   17d44:	movt	r1, #1
   17d48:	movw	r2, #85	; 0x55
   17d4c:	movw	r3, #52987	; 0xcefb
   17d50:	movt	r3, #1
   17d54:	bl	11028 <__assert_fail@plt>
   17d58:	ldr	r0, [fp, #-12]
   17d5c:	movw	r1, #0
   17d60:	cmp	r0, r1
   17d64:	beq	17d74 <__assert_fail@plt+0x6d4c>
   17d68:	ldr	r0, [fp, #-12]
   17d6c:	str	r0, [sp, #16]
   17d70:	b	17d80 <__assert_fail@plt+0x6d58>
   17d74:	sub	r0, fp, #24
   17d78:	str	r0, [sp, #16]
   17d7c:	b	17d80 <__assert_fail@plt+0x6d58>
   17d80:	ldr	r0, [sp, #16]
   17d84:	str	r0, [fp, #-28]	; 0xffffffe4
   17d88:	bl	10f74 <__errno_location@plt>
   17d8c:	movw	lr, #0
   17d90:	str	lr, [r0]
   17d94:	ldr	r0, [fp, #-8]
   17d98:	str	r0, [sp, #40]	; 0x28
   17d9c:	ldr	r0, [sp, #40]	; 0x28
   17da0:	ldrb	r0, [r0]
   17da4:	strb	r0, [sp, #39]	; 0x27
   17da8:	bl	10f20 <__ctype_b_loc@plt>
   17dac:	ldr	r0, [r0]
   17db0:	ldrb	lr, [sp, #39]	; 0x27
   17db4:	mov	r1, lr
   17db8:	add	r0, r0, lr, lsl #1
   17dbc:	ldrh	r0, [r0]
   17dc0:	and	r0, r0, #8192	; 0x2000
   17dc4:	cmp	r0, #0
   17dc8:	str	r1, [sp, #12]
   17dcc:	beq	17de8 <__assert_fail@plt+0x6dc0>
   17dd0:	ldr	r0, [sp, #40]	; 0x28
   17dd4:	add	r1, r0, #1
   17dd8:	str	r1, [sp, #40]	; 0x28
   17ddc:	ldrb	r0, [r0, #1]
   17de0:	strb	r0, [sp, #39]	; 0x27
   17de4:	b	17da8 <__assert_fail@plt+0x6d80>
   17de8:	ldrb	r0, [sp, #39]	; 0x27
   17dec:	cmp	r0, #45	; 0x2d
   17df0:	bne	17e00 <__assert_fail@plt+0x6dd8>
   17df4:	movw	r0, #4
   17df8:	str	r0, [fp, #-4]
   17dfc:	b	1837c <__assert_fail@plt+0x7354>
   17e00:	ldr	r0, [fp, #-8]
   17e04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e08:	ldr	r2, [fp, #-16]
   17e0c:	bl	10fa4 <strtoumax@plt>
   17e10:	str	r1, [fp, #-36]	; 0xffffffdc
   17e14:	str	r0, [fp, #-40]	; 0xffffffd8
   17e18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e1c:	ldr	r0, [r0]
   17e20:	ldr	r1, [fp, #-8]
   17e24:	cmp	r0, r1
   17e28:	bne	17e94 <__assert_fail@plt+0x6e6c>
   17e2c:	ldr	r0, [fp, #8]
   17e30:	movw	r1, #0
   17e34:	cmp	r0, r1
   17e38:	beq	17e84 <__assert_fail@plt+0x6e5c>
   17e3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e40:	ldr	r0, [r0]
   17e44:	ldrb	r0, [r0]
   17e48:	cmp	r0, #0
   17e4c:	beq	17e84 <__assert_fail@plt+0x6e5c>
   17e50:	ldr	r0, [fp, #8]
   17e54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e58:	ldr	r1, [r1]
   17e5c:	ldrb	r1, [r1]
   17e60:	bl	10f5c <strchr@plt>
   17e64:	movw	r1, #0
   17e68:	cmp	r0, r1
   17e6c:	beq	17e84 <__assert_fail@plt+0x6e5c>
   17e70:	mov	r0, #0
   17e74:	str	r0, [fp, #-36]	; 0xffffffdc
   17e78:	mov	r0, #1
   17e7c:	str	r0, [fp, #-40]	; 0xffffffd8
   17e80:	b	17e90 <__assert_fail@plt+0x6e68>
   17e84:	movw	r0, #4
   17e88:	str	r0, [fp, #-4]
   17e8c:	b	1837c <__assert_fail@plt+0x7354>
   17e90:	b	17ecc <__assert_fail@plt+0x6ea4>
   17e94:	bl	10f74 <__errno_location@plt>
   17e98:	ldr	r0, [r0]
   17e9c:	cmp	r0, #0
   17ea0:	beq	17ec8 <__assert_fail@plt+0x6ea0>
   17ea4:	bl	10f74 <__errno_location@plt>
   17ea8:	ldr	r0, [r0]
   17eac:	cmp	r0, #34	; 0x22
   17eb0:	beq	17ec0 <__assert_fail@plt+0x6e98>
   17eb4:	movw	r0, #4
   17eb8:	str	r0, [fp, #-4]
   17ebc:	b	1837c <__assert_fail@plt+0x7354>
   17ec0:	movw	r0, #1
   17ec4:	str	r0, [sp, #44]	; 0x2c
   17ec8:	b	17ecc <__assert_fail@plt+0x6ea4>
   17ecc:	ldr	r0, [fp, #8]
   17ed0:	movw	r1, #0
   17ed4:	cmp	r0, r1
   17ed8:	bne	17efc <__assert_fail@plt+0x6ed4>
   17edc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17ee0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17ee4:	ldr	r2, [fp, #-20]	; 0xffffffec
   17ee8:	str	r1, [r2, #4]
   17eec:	str	r0, [r2]
   17ef0:	ldr	r0, [sp, #44]	; 0x2c
   17ef4:	str	r0, [fp, #-4]
   17ef8:	b	1837c <__assert_fail@plt+0x7354>
   17efc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17f00:	ldr	r0, [r0]
   17f04:	ldrb	r0, [r0]
   17f08:	cmp	r0, #0
   17f0c:	beq	18360 <__assert_fail@plt+0x7338>
   17f10:	movw	r0, #1024	; 0x400
   17f14:	str	r0, [sp, #32]
   17f18:	movw	r0, #1
   17f1c:	str	r0, [sp, #28]
   17f20:	ldr	r0, [fp, #8]
   17f24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17f28:	ldr	r1, [r1]
   17f2c:	ldrb	r1, [r1]
   17f30:	bl	10f5c <strchr@plt>
   17f34:	movw	r1, #0
   17f38:	cmp	r0, r1
   17f3c:	bne	17f64 <__assert_fail@plt+0x6f3c>
   17f40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17f44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17f48:	ldr	r2, [fp, #-20]	; 0xffffffec
   17f4c:	str	r1, [r2, #4]
   17f50:	str	r0, [r2]
   17f54:	ldr	r0, [sp, #44]	; 0x2c
   17f58:	orr	r0, r0, #2
   17f5c:	str	r0, [fp, #-4]
   17f60:	b	1837c <__assert_fail@plt+0x7354>
   17f64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17f68:	ldr	r0, [r0]
   17f6c:	ldrb	r0, [r0]
   17f70:	sub	r0, r0, #69	; 0x45
   17f74:	cmp	r0, #47	; 0x2f
   17f78:	str	r0, [sp, #8]
   17f7c:	bhi	180e8 <__assert_fail@plt+0x70c0>
   17f80:	add	r0, pc, #8
   17f84:	ldr	r1, [sp, #8]
   17f88:	ldr	r0, [r0, r1, lsl #2]
   17f8c:	mov	pc, r0
   17f90:	andeq	r8, r1, r0, asr r0
   17f94:	andeq	r8, r1, r8, ror #1
   17f98:	andeq	r8, r1, r0, asr r0
   17f9c:	andeq	r8, r1, r8, ror #1
   17fa0:	andeq	r8, r1, r8, ror #1
   17fa4:	andeq	r8, r1, r8, ror #1
   17fa8:	andeq	r8, r1, r0, asr r0
   17fac:	andeq	r8, r1, r8, ror #1
   17fb0:	andeq	r8, r1, r0, asr r0
   17fb4:	andeq	r8, r1, r8, ror #1
   17fb8:	andeq	r8, r1, r8, ror #1
   17fbc:	andeq	r8, r1, r0, asr r0
   17fc0:	andeq	r8, r1, r8, ror #1
   17fc4:	andeq	r8, r1, r8, ror #1
   17fc8:	andeq	r8, r1, r8, ror #1
   17fcc:	andeq	r8, r1, r0, asr r0
   17fd0:	andeq	r8, r1, r8, ror #1
   17fd4:	andeq	r8, r1, r8, ror #1
   17fd8:	andeq	r8, r1, r8, ror #1
   17fdc:	andeq	r8, r1, r8, ror #1
   17fe0:	andeq	r8, r1, r0, asr r0
   17fe4:	andeq	r8, r1, r0, asr r0
   17fe8:	andeq	r8, r1, r8, ror #1
   17fec:	andeq	r8, r1, r8, ror #1
   17ff0:	andeq	r8, r1, r8, ror #1
   17ff4:	andeq	r8, r1, r8, ror #1
   17ff8:	andeq	r8, r1, r8, ror #1
   17ffc:	andeq	r8, r1, r8, ror #1
   18000:	andeq	r8, r1, r8, ror #1
   18004:	andeq	r8, r1, r8, ror #1
   18008:	andeq	r8, r1, r8, ror #1
   1800c:	andeq	r8, r1, r8, ror #1
   18010:	andeq	r8, r1, r8, ror #1
   18014:	andeq	r8, r1, r8, ror #1
   18018:	andeq	r8, r1, r0, asr r0
   1801c:	andeq	r8, r1, r8, ror #1
   18020:	andeq	r8, r1, r8, ror #1
   18024:	andeq	r8, r1, r8, ror #1
   18028:	andeq	r8, r1, r0, asr r0
   1802c:	andeq	r8, r1, r8, ror #1
   18030:	andeq	r8, r1, r0, asr r0
   18034:	andeq	r8, r1, r8, ror #1
   18038:	andeq	r8, r1, r8, ror #1
   1803c:	andeq	r8, r1, r8, ror #1
   18040:	andeq	r8, r1, r8, ror #1
   18044:	andeq	r8, r1, r8, ror #1
   18048:	andeq	r8, r1, r8, ror #1
   1804c:	andeq	r8, r1, r0, asr r0
   18050:	ldr	r0, [fp, #8]
   18054:	movw	r1, #48	; 0x30
   18058:	bl	10f5c <strchr@plt>
   1805c:	movw	r1, #0
   18060:	cmp	r0, r1
   18064:	beq	180e4 <__assert_fail@plt+0x70bc>
   18068:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1806c:	ldr	r0, [r0]
   18070:	ldrb	r0, [r0, #1]
   18074:	mov	r1, r0
   18078:	cmp	r0, #66	; 0x42
   1807c:	str	r1, [sp, #4]
   18080:	beq	180cc <__assert_fail@plt+0x70a4>
   18084:	b	18088 <__assert_fail@plt+0x7060>
   18088:	ldr	r0, [sp, #4]
   1808c:	cmp	r0, #68	; 0x44
   18090:	beq	180cc <__assert_fail@plt+0x70a4>
   18094:	b	18098 <__assert_fail@plt+0x7070>
   18098:	ldr	r0, [sp, #4]
   1809c:	cmp	r0, #105	; 0x69
   180a0:	bne	180e0 <__assert_fail@plt+0x70b8>
   180a4:	b	180a8 <__assert_fail@plt+0x7080>
   180a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   180ac:	ldr	r0, [r0]
   180b0:	ldrb	r0, [r0, #2]
   180b4:	cmp	r0, #66	; 0x42
   180b8:	bne	180c8 <__assert_fail@plt+0x70a0>
   180bc:	ldr	r0, [sp, #28]
   180c0:	add	r0, r0, #2
   180c4:	str	r0, [sp, #28]
   180c8:	b	180e0 <__assert_fail@plt+0x70b8>
   180cc:	movw	r0, #1000	; 0x3e8
   180d0:	str	r0, [sp, #32]
   180d4:	ldr	r0, [sp, #28]
   180d8:	add	r0, r0, #1
   180dc:	str	r0, [sp, #28]
   180e0:	b	180e4 <__assert_fail@plt+0x70bc>
   180e4:	b	180e8 <__assert_fail@plt+0x70c0>
   180e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   180ec:	ldr	r0, [r0]
   180f0:	ldrb	r0, [r0]
   180f4:	sub	r0, r0, #66	; 0x42
   180f8:	cmp	r0, #53	; 0x35
   180fc:	str	r0, [sp]
   18100:	bhi	182f4 <__assert_fail@plt+0x72cc>
   18104:	add	r0, pc, #8
   18108:	ldr	r1, [sp]
   1810c:	ldr	r0, [r0, r1, lsl #2]
   18110:	mov	pc, r0
   18114:	andeq	r8, r1, r0, lsl #4
   18118:	strdeq	r8, [r1], -r4
   1811c:	strdeq	r8, [r1], -r4
   18120:	andeq	r8, r1, r0, lsr #4
   18124:	strdeq	r8, [r1], -r4
   18128:	andeq	r8, r1, r8, lsr r2
   1812c:	strdeq	r8, [r1], -r4
   18130:	strdeq	r8, [r1], -r4
   18134:	strdeq	r8, [r1], -r4
   18138:	andeq	r8, r1, r0, asr r2
   1813c:	strdeq	r8, [r1], -r4
   18140:	andeq	r8, r1, r8, ror #4
   18144:	strdeq	r8, [r1], -r4
   18148:	strdeq	r8, [r1], -r4
   1814c:	andeq	r8, r1, r0, lsl #5
   18150:	strdeq	r8, [r1], -r4
   18154:	strdeq	r8, [r1], -r4
   18158:	strdeq	r8, [r1], -r4
   1815c:	muleq	r1, r8, r2
   18160:	strdeq	r8, [r1], -r4
   18164:	strdeq	r8, [r1], -r4
   18168:	strdeq	r8, [r1], -r4
   1816c:	strdeq	r8, [r1], -r4
   18170:	andeq	r8, r1, r4, asr #5
   18174:	ldrdeq	r8, [r1], -ip
   18178:	strdeq	r8, [r1], -r4
   1817c:	strdeq	r8, [r1], -r4
   18180:	strdeq	r8, [r1], -r4
   18184:	strdeq	r8, [r1], -r4
   18188:	strdeq	r8, [r1], -r4
   1818c:	strdeq	r8, [r1], -r4
   18190:	strdeq	r8, [r1], -r4
   18194:	andeq	r8, r1, ip, ror #3
   18198:	andeq	r8, r1, r4, lsl r2
   1819c:	strdeq	r8, [r1], -r4
   181a0:	strdeq	r8, [r1], -r4
   181a4:	strdeq	r8, [r1], -r4
   181a8:	andeq	r8, r1, r8, lsr r2
   181ac:	strdeq	r8, [r1], -r4
   181b0:	strdeq	r8, [r1], -r4
   181b4:	strdeq	r8, [r1], -r4
   181b8:	andeq	r8, r1, r0, asr r2
   181bc:	strdeq	r8, [r1], -r4
   181c0:	andeq	r8, r1, r8, ror #4
   181c4:	strdeq	r8, [r1], -r4
   181c8:	strdeq	r8, [r1], -r4
   181cc:	strdeq	r8, [r1], -r4
   181d0:	strdeq	r8, [r1], -r4
   181d4:	strdeq	r8, [r1], -r4
   181d8:	strdeq	r8, [r1], -r4
   181dc:	muleq	r1, r8, r2
   181e0:	strdeq	r8, [r1], -r4
   181e4:	strdeq	r8, [r1], -r4
   181e8:			; <UNDEFINED> instruction: 0x000182b0
   181ec:	sub	r0, fp, #40	; 0x28
   181f0:	movw	r1, #512	; 0x200
   181f4:	bl	18388 <__assert_fail@plt+0x7360>
   181f8:	str	r0, [sp, #24]
   181fc:	b	18318 <__assert_fail@plt+0x72f0>
   18200:	sub	r0, fp, #40	; 0x28
   18204:	movw	r1, #1024	; 0x400
   18208:	bl	18388 <__assert_fail@plt+0x7360>
   1820c:	str	r0, [sp, #24]
   18210:	b	18318 <__assert_fail@plt+0x72f0>
   18214:	movw	r0, #0
   18218:	str	r0, [sp, #24]
   1821c:	b	18318 <__assert_fail@plt+0x72f0>
   18220:	ldr	r1, [sp, #32]
   18224:	sub	r0, fp, #40	; 0x28
   18228:	movw	r2, #6
   1822c:	bl	19e90 <__assert_fail@plt+0x8e68>
   18230:	str	r0, [sp, #24]
   18234:	b	18318 <__assert_fail@plt+0x72f0>
   18238:	ldr	r1, [sp, #32]
   1823c:	sub	r0, fp, #40	; 0x28
   18240:	movw	r2, #3
   18244:	bl	19e90 <__assert_fail@plt+0x8e68>
   18248:	str	r0, [sp, #24]
   1824c:	b	18318 <__assert_fail@plt+0x72f0>
   18250:	ldr	r1, [sp, #32]
   18254:	sub	r0, fp, #40	; 0x28
   18258:	movw	r2, #1
   1825c:	bl	19e90 <__assert_fail@plt+0x8e68>
   18260:	str	r0, [sp, #24]
   18264:	b	18318 <__assert_fail@plt+0x72f0>
   18268:	ldr	r1, [sp, #32]
   1826c:	sub	r0, fp, #40	; 0x28
   18270:	movw	r2, #2
   18274:	bl	19e90 <__assert_fail@plt+0x8e68>
   18278:	str	r0, [sp, #24]
   1827c:	b	18318 <__assert_fail@plt+0x72f0>
   18280:	ldr	r1, [sp, #32]
   18284:	sub	r0, fp, #40	; 0x28
   18288:	movw	r2, #5
   1828c:	bl	19e90 <__assert_fail@plt+0x8e68>
   18290:	str	r0, [sp, #24]
   18294:	b	18318 <__assert_fail@plt+0x72f0>
   18298:	ldr	r1, [sp, #32]
   1829c:	sub	r0, fp, #40	; 0x28
   182a0:	movw	r2, #4
   182a4:	bl	19e90 <__assert_fail@plt+0x8e68>
   182a8:	str	r0, [sp, #24]
   182ac:	b	18318 <__assert_fail@plt+0x72f0>
   182b0:	sub	r0, fp, #40	; 0x28
   182b4:	movw	r1, #2
   182b8:	bl	18388 <__assert_fail@plt+0x7360>
   182bc:	str	r0, [sp, #24]
   182c0:	b	18318 <__assert_fail@plt+0x72f0>
   182c4:	ldr	r1, [sp, #32]
   182c8:	sub	r0, fp, #40	; 0x28
   182cc:	movw	r2, #8
   182d0:	bl	19e90 <__assert_fail@plt+0x8e68>
   182d4:	str	r0, [sp, #24]
   182d8:	b	18318 <__assert_fail@plt+0x72f0>
   182dc:	ldr	r1, [sp, #32]
   182e0:	sub	r0, fp, #40	; 0x28
   182e4:	movw	r2, #7
   182e8:	bl	19e90 <__assert_fail@plt+0x8e68>
   182ec:	str	r0, [sp, #24]
   182f0:	b	18318 <__assert_fail@plt+0x72f0>
   182f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   182f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   182fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   18300:	str	r1, [r2, #4]
   18304:	str	r0, [r2]
   18308:	ldr	r0, [sp, #44]	; 0x2c
   1830c:	orr	r0, r0, #2
   18310:	str	r0, [fp, #-4]
   18314:	b	1837c <__assert_fail@plt+0x7354>
   18318:	ldr	r0, [sp, #24]
   1831c:	ldr	r1, [sp, #44]	; 0x2c
   18320:	orr	r0, r1, r0
   18324:	str	r0, [sp, #44]	; 0x2c
   18328:	ldr	r0, [sp, #28]
   1832c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18330:	ldr	r2, [r1]
   18334:	add	r0, r2, r0
   18338:	str	r0, [r1]
   1833c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18340:	ldr	r0, [r0]
   18344:	ldrsb	r0, [r0]
   18348:	cmp	r0, #0
   1834c:	beq	1835c <__assert_fail@plt+0x7334>
   18350:	ldr	r0, [sp, #44]	; 0x2c
   18354:	orr	r0, r0, #2
   18358:	str	r0, [sp, #44]	; 0x2c
   1835c:	b	18360 <__assert_fail@plt+0x7338>
   18360:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18364:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18368:	ldr	r2, [fp, #-20]	; 0xffffffec
   1836c:	str	r1, [r2, #4]
   18370:	str	r0, [r2]
   18374:	ldr	r0, [sp, #44]	; 0x2c
   18378:	str	r0, [fp, #-4]
   1837c:	ldr	r0, [fp, #-4]
   18380:	mov	sp, fp
   18384:	pop	{fp, pc}
   18388:	push	{fp, lr}
   1838c:	mov	fp, sp
   18390:	sub	sp, sp, #568	; 0x238
   18394:	str	r0, [fp, #-8]
   18398:	str	r1, [fp, #-12]
   1839c:	b	188d0 <__assert_fail@plt+0x78a8>
   183a0:	b	18644 <__assert_fail@plt+0x761c>
   183a4:	ldr	r0, [fp, #-12]
   183a8:	cmp	r0, #0
   183ac:	bge	18524 <__assert_fail@plt+0x74fc>
   183b0:	mov	r0, #1
   183b4:	cmp	r0, #0
   183b8:	bne	18470 <__assert_fail@plt+0x7448>
   183bc:	b	183c0 <__assert_fail@plt+0x7398>
   183c0:	b	183c4 <__assert_fail@plt+0x739c>
   183c4:	ldr	r0, [fp, #-8]
   183c8:	ldr	r1, [r0]
   183cc:	ldr	r0, [r0, #4]
   183d0:	ldr	r2, [fp, #-12]
   183d4:	mov	r3, #127	; 0x7f
   183d8:	sdiv	r2, r3, r2
   183dc:	subs	r1, r1, r2
   183e0:	sbcs	r0, r0, r2, asr #31
   183e4:	str	r1, [fp, #-28]	; 0xffffffe4
   183e8:	str	r0, [fp, #-32]	; 0xffffffe0
   183ec:	bcc	185fc <__assert_fail@plt+0x75d4>
   183f0:	b	18620 <__assert_fail@plt+0x75f8>
   183f4:	b	183f8 <__assert_fail@plt+0x73d0>
   183f8:	ldr	r0, [pc, #4088]	; 193f8 <__assert_fail@plt+0x83d0>
   183fc:	ldr	r1, [fp, #-12]
   18400:	cmp	r1, r0
   18404:	blt	1841c <__assert_fail@plt+0x73f4>
   18408:	b	18428 <__assert_fail@plt+0x7400>
   1840c:	ldr	r0, [fp, #-12]
   18410:	movw	r1, #0
   18414:	cmp	r1, r0
   18418:	bge	18428 <__assert_fail@plt+0x7400>
   1841c:	movw	r0, #0
   18420:	str	r0, [fp, #-36]	; 0xffffffdc
   18424:	b	18440 <__assert_fail@plt+0x7418>
   18428:	ldr	r0, [fp, #-12]
   1842c:	movw	r1, #0
   18430:	sub	r0, r1, r0
   18434:	movw	r1, #127	; 0x7f
   18438:	sdiv	r0, r1, r0
   1843c:	str	r0, [fp, #-36]	; 0xffffffdc
   18440:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18444:	ldr	r1, [fp, #-8]
   18448:	ldr	r2, [r1]
   1844c:	ldr	r1, [r1, #4]
   18450:	mvn	r1, r1
   18454:	mvn	r2, r2
   18458:	subs	r2, r2, r0
   1845c:	sbcs	r0, r1, r0, asr #31
   18460:	str	r2, [fp, #-40]	; 0xffffffd8
   18464:	str	r0, [fp, #-44]	; 0xffffffd4
   18468:	bcs	185fc <__assert_fail@plt+0x75d4>
   1846c:	b	18620 <__assert_fail@plt+0x75f8>
   18470:	b	18474 <__assert_fail@plt+0x744c>
   18474:	b	184f4 <__assert_fail@plt+0x74cc>
   18478:	b	184f4 <__assert_fail@plt+0x74cc>
   1847c:	ldr	r0, [fp, #-12]
   18480:	cmn	r0, #1
   18484:	bne	184f4 <__assert_fail@plt+0x74cc>
   18488:	b	184ac <__assert_fail@plt+0x7484>
   1848c:	ldr	r0, [fp, #-8]
   18490:	ldr	r1, [r0]
   18494:	ldr	r0, [r0, #4]
   18498:	eor	r1, r1, #128	; 0x80
   1849c:	orr	r0, r1, r0
   184a0:	cmp	r0, #0
   184a4:	bne	185fc <__assert_fail@plt+0x75d4>
   184a8:	b	18620 <__assert_fail@plt+0x75f8>
   184ac:	ldr	r0, [fp, #-8]
   184b0:	ldr	r1, [r0]
   184b4:	ldr	r0, [r0, #4]
   184b8:	orr	r0, r1, r0
   184bc:	cmp	r0, #0
   184c0:	beq	18620 <__assert_fail@plt+0x75f8>
   184c4:	b	184c8 <__assert_fail@plt+0x74a0>
   184c8:	ldr	r0, [fp, #-8]
   184cc:	ldr	r1, [r0]
   184d0:	ldr	r0, [r0, #4]
   184d4:	subs	r1, r1, #1
   184d8:	sbc	r0, r0, #0
   184dc:	rsbs	r1, r1, #127	; 0x7f
   184e0:	rscs	r0, r0, #0
   184e4:	str	r1, [fp, #-48]	; 0xffffffd0
   184e8:	str	r0, [fp, #-52]	; 0xffffffcc
   184ec:	bcc	185fc <__assert_fail@plt+0x75d4>
   184f0:	b	18620 <__assert_fail@plt+0x75f8>
   184f4:	ldr	r0, [fp, #-12]
   184f8:	mvn	r1, #127	; 0x7f
   184fc:	sdiv	r0, r1, r0
   18500:	ldr	r1, [fp, #-8]
   18504:	ldr	r2, [r1]
   18508:	ldr	r1, [r1, #4]
   1850c:	subs	r2, r0, r2
   18510:	rscs	r0, r1, r0, asr #31
   18514:	str	r2, [fp, #-56]	; 0xffffffc8
   18518:	str	r0, [fp, #-60]	; 0xffffffc4
   1851c:	bcc	185fc <__assert_fail@plt+0x75d4>
   18520:	b	18620 <__assert_fail@plt+0x75f8>
   18524:	ldr	r0, [fp, #-12]
   18528:	cmp	r0, #0
   1852c:	bne	18534 <__assert_fail@plt+0x750c>
   18530:	b	18620 <__assert_fail@plt+0x75f8>
   18534:	mov	r0, #1
   18538:	cmp	r0, #0
   1853c:	bne	185cc <__assert_fail@plt+0x75a4>
   18540:	b	18544 <__assert_fail@plt+0x751c>
   18544:	ldr	r0, [fp, #-8]
   18548:	ldr	r1, [r0]
   1854c:	ldr	r0, [r0, #4]
   18550:	and	r0, r1, r0
   18554:	cmn	r0, #1
   18558:	bne	18598 <__assert_fail@plt+0x7570>
   1855c:	b	18560 <__assert_fail@plt+0x7538>
   18560:	b	18564 <__assert_fail@plt+0x753c>
   18564:	ldr	r0, [fp, #-12]
   18568:	mvn	r1, #127	; 0x7f
   1856c:	add	r0, r0, r1
   18570:	movw	r1, #0
   18574:	cmp	r1, r0
   18578:	blt	185fc <__assert_fail@plt+0x75d4>
   1857c:	b	18620 <__assert_fail@plt+0x75f8>
   18580:	ldr	r0, [fp, #-12]
   18584:	sub	r0, r0, #1
   18588:	movw	r1, #127	; 0x7f
   1858c:	cmp	r1, r0
   18590:	blt	185fc <__assert_fail@plt+0x75d4>
   18594:	b	18620 <__assert_fail@plt+0x75f8>
   18598:	ldr	r0, [fp, #-8]
   1859c:	ldr	r2, [r0]
   185a0:	ldr	r3, [r0, #4]
   185a4:	mvn	r0, #127	; 0x7f
   185a8:	mvn	r1, #0
   185ac:	bl	1c48c <__assert_fail@plt+0xb464>
   185b0:	ldr	r2, [fp, #-12]
   185b4:	subs	r0, r0, r2
   185b8:	sbcs	r1, r1, r2, asr #31
   185bc:	str	r0, [fp, #-64]	; 0xffffffc0
   185c0:	str	r1, [fp, #-68]	; 0xffffffbc
   185c4:	bcc	185fc <__assert_fail@plt+0x75d4>
   185c8:	b	18620 <__assert_fail@plt+0x75f8>
   185cc:	ldr	r0, [fp, #-12]
   185d0:	mov	r1, #127	; 0x7f
   185d4:	sdiv	r0, r1, r0
   185d8:	ldr	r1, [fp, #-8]
   185dc:	ldr	r2, [r1]
   185e0:	ldr	r1, [r1, #4]
   185e4:	subs	r2, r0, r2
   185e8:	rscs	r0, r1, r0, asr #31
   185ec:	str	r2, [fp, #-72]	; 0xffffffb8
   185f0:	str	r0, [fp, #-76]	; 0xffffffb4
   185f4:	bcs	18620 <__assert_fail@plt+0x75f8>
   185f8:	b	185fc <__assert_fail@plt+0x75d4>
   185fc:	ldr	r0, [fp, #-8]
   18600:	ldr	r0, [r0]
   18604:	ldr	r1, [fp, #-12]
   18608:	mul	r0, r0, r1
   1860c:	sxtb	r0, r0
   18610:	asr	r1, r0, #31
   18614:	str	r0, [fp, #-24]	; 0xffffffe8
   18618:	str	r1, [fp, #-20]	; 0xffffffec
   1861c:	b	19e44 <__assert_fail@plt+0x8e1c>
   18620:	ldr	r0, [fp, #-8]
   18624:	ldr	r0, [r0]
   18628:	ldr	r1, [fp, #-12]
   1862c:	mul	r0, r0, r1
   18630:	sxtb	r0, r0
   18634:	asr	r1, r0, #31
   18638:	str	r0, [fp, #-24]	; 0xffffffe8
   1863c:	str	r1, [fp, #-20]	; 0xffffffec
   18640:	b	19e60 <__assert_fail@plt+0x8e38>
   18644:	ldr	r0, [fp, #-12]
   18648:	cmp	r0, #0
   1864c:	bge	187a4 <__assert_fail@plt+0x777c>
   18650:	mov	r0, #1
   18654:	cmp	r0, #0
   18658:	bne	18710 <__assert_fail@plt+0x76e8>
   1865c:	b	18660 <__assert_fail@plt+0x7638>
   18660:	b	18664 <__assert_fail@plt+0x763c>
   18664:	ldr	r0, [fp, #-8]
   18668:	ldr	r1, [r0]
   1866c:	ldr	r0, [r0, #4]
   18670:	ldr	r2, [fp, #-12]
   18674:	mov	r3, #255	; 0xff
   18678:	sdiv	r2, r3, r2
   1867c:	subs	r1, r1, r2
   18680:	sbcs	r0, r0, r2, asr #31
   18684:	str	r1, [fp, #-80]	; 0xffffffb0
   18688:	str	r0, [fp, #-84]	; 0xffffffac
   1868c:	bcc	18888 <__assert_fail@plt+0x7860>
   18690:	b	188ac <__assert_fail@plt+0x7884>
   18694:	b	18698 <__assert_fail@plt+0x7670>
   18698:	ldr	r0, [pc, #3416]	; 193f8 <__assert_fail@plt+0x83d0>
   1869c:	ldr	r1, [fp, #-12]
   186a0:	cmp	r1, r0
   186a4:	blt	186bc <__assert_fail@plt+0x7694>
   186a8:	b	186c8 <__assert_fail@plt+0x76a0>
   186ac:	ldr	r0, [fp, #-12]
   186b0:	movw	r1, #0
   186b4:	cmp	r1, r0
   186b8:	bge	186c8 <__assert_fail@plt+0x76a0>
   186bc:	movw	r0, #0
   186c0:	str	r0, [fp, #-88]	; 0xffffffa8
   186c4:	b	186e0 <__assert_fail@plt+0x76b8>
   186c8:	ldr	r0, [fp, #-12]
   186cc:	movw	r1, #0
   186d0:	sub	r0, r1, r0
   186d4:	movw	r1, #255	; 0xff
   186d8:	sdiv	r0, r1, r0
   186dc:	str	r0, [fp, #-88]	; 0xffffffa8
   186e0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   186e4:	ldr	r1, [fp, #-8]
   186e8:	ldr	r2, [r1]
   186ec:	ldr	r1, [r1, #4]
   186f0:	mvn	r1, r1
   186f4:	mvn	r2, r2
   186f8:	subs	r2, r2, r0
   186fc:	sbcs	r0, r1, r0, asr #31
   18700:	str	r2, [fp, #-92]	; 0xffffffa4
   18704:	str	r0, [fp, #-96]	; 0xffffffa0
   18708:	bcs	18888 <__assert_fail@plt+0x7860>
   1870c:	b	188ac <__assert_fail@plt+0x7884>
   18710:	b	18714 <__assert_fail@plt+0x76ec>
   18714:	b	18774 <__assert_fail@plt+0x774c>
   18718:	b	18774 <__assert_fail@plt+0x774c>
   1871c:	ldr	r0, [fp, #-12]
   18720:	cmn	r0, #1
   18724:	bne	18774 <__assert_fail@plt+0x774c>
   18728:	b	18748 <__assert_fail@plt+0x7720>
   1872c:	ldr	r0, [fp, #-8]
   18730:	ldr	r1, [r0]
   18734:	ldr	r0, [r0, #4]
   18738:	orr	r0, r1, r0
   1873c:	cmp	r0, #0
   18740:	bne	18888 <__assert_fail@plt+0x7860>
   18744:	b	188ac <__assert_fail@plt+0x7884>
   18748:	ldr	r0, [fp, #-8]
   1874c:	ldr	r1, [r0]
   18750:	ldr	r0, [r0, #4]
   18754:	orr	r0, r1, r0
   18758:	cmp	r0, #0
   1875c:	beq	188ac <__assert_fail@plt+0x7884>
   18760:	b	18764 <__assert_fail@plt+0x773c>
   18764:	mov	r0, #0
   18768:	cmp	r0, #0
   1876c:	bne	18888 <__assert_fail@plt+0x7860>
   18770:	b	188ac <__assert_fail@plt+0x7884>
   18774:	ldr	r0, [fp, #-12]
   18778:	mov	r1, #0
   1877c:	sdiv	r0, r1, r0
   18780:	ldr	r1, [fp, #-8]
   18784:	ldr	r2, [r1]
   18788:	ldr	r1, [r1, #4]
   1878c:	subs	r2, r0, r2
   18790:	rscs	r0, r1, r0, asr #31
   18794:	str	r2, [fp, #-100]	; 0xffffff9c
   18798:	str	r0, [fp, #-104]	; 0xffffff98
   1879c:	bcc	18888 <__assert_fail@plt+0x7860>
   187a0:	b	188ac <__assert_fail@plt+0x7884>
   187a4:	ldr	r0, [fp, #-12]
   187a8:	cmp	r0, #0
   187ac:	bne	187b4 <__assert_fail@plt+0x778c>
   187b0:	b	188ac <__assert_fail@plt+0x7884>
   187b4:	mov	r0, #1
   187b8:	cmp	r0, #0
   187bc:	bne	18858 <__assert_fail@plt+0x7830>
   187c0:	b	187c4 <__assert_fail@plt+0x779c>
   187c4:	b	187cc <__assert_fail@plt+0x77a4>
   187c8:	b	187d0 <__assert_fail@plt+0x77a8>
   187cc:	b	18820 <__assert_fail@plt+0x77f8>
   187d0:	ldr	r0, [fp, #-8]
   187d4:	ldr	r1, [r0]
   187d8:	ldr	r0, [r0, #4]
   187dc:	and	r0, r1, r0
   187e0:	cmn	r0, #1
   187e4:	bne	18820 <__assert_fail@plt+0x77f8>
   187e8:	b	187ec <__assert_fail@plt+0x77c4>
   187ec:	b	187f0 <__assert_fail@plt+0x77c8>
   187f0:	ldr	r0, [fp, #-12]
   187f4:	add	r0, r0, #0
   187f8:	movw	r1, #0
   187fc:	cmp	r1, r0
   18800:	blt	18888 <__assert_fail@plt+0x7860>
   18804:	b	188ac <__assert_fail@plt+0x7884>
   18808:	ldr	r0, [fp, #-12]
   1880c:	sub	r0, r0, #1
   18810:	mvn	r1, #0
   18814:	cmp	r1, r0
   18818:	blt	18888 <__assert_fail@plt+0x7860>
   1881c:	b	188ac <__assert_fail@plt+0x7884>
   18820:	ldr	r0, [fp, #-8]
   18824:	ldr	r2, [r0]
   18828:	ldr	r3, [r0, #4]
   1882c:	mov	r0, #0
   18830:	str	r0, [fp, #-108]	; 0xffffff94
   18834:	ldr	r1, [fp, #-108]	; 0xffffff94
   18838:	bl	1c48c <__assert_fail@plt+0xb464>
   1883c:	ldr	r2, [fp, #-12]
   18840:	subs	r0, r0, r2
   18844:	sbcs	r1, r1, r2, asr #31
   18848:	str	r0, [fp, #-112]	; 0xffffff90
   1884c:	str	r1, [fp, #-116]	; 0xffffff8c
   18850:	bcc	18888 <__assert_fail@plt+0x7860>
   18854:	b	188ac <__assert_fail@plt+0x7884>
   18858:	ldr	r0, [fp, #-12]
   1885c:	mov	r1, #255	; 0xff
   18860:	sdiv	r0, r1, r0
   18864:	ldr	r1, [fp, #-8]
   18868:	ldr	r2, [r1]
   1886c:	ldr	r1, [r1, #4]
   18870:	subs	r2, r0, r2
   18874:	rscs	r0, r1, r0, asr #31
   18878:	str	r2, [fp, #-120]	; 0xffffff88
   1887c:	str	r0, [fp, #-124]	; 0xffffff84
   18880:	bcs	188ac <__assert_fail@plt+0x7884>
   18884:	b	18888 <__assert_fail@plt+0x7860>
   18888:	ldr	r0, [fp, #-8]
   1888c:	ldr	r0, [r0]
   18890:	ldr	r1, [fp, #-12]
   18894:	mul	r0, r0, r1
   18898:	uxtb	r0, r0
   1889c:	mov	r1, #0
   188a0:	str	r1, [fp, #-20]	; 0xffffffec
   188a4:	str	r0, [fp, #-24]	; 0xffffffe8
   188a8:	b	19e44 <__assert_fail@plt+0x8e1c>
   188ac:	ldr	r0, [fp, #-8]
   188b0:	ldr	r0, [r0]
   188b4:	ldr	r1, [fp, #-12]
   188b8:	mul	r0, r0, r1
   188bc:	uxtb	r0, r0
   188c0:	mov	r1, #0
   188c4:	str	r1, [fp, #-20]	; 0xffffffec
   188c8:	str	r0, [fp, #-24]	; 0xffffffe8
   188cc:	b	19e60 <__assert_fail@plt+0x8e38>
   188d0:	b	18e0c <__assert_fail@plt+0x7de4>
   188d4:	b	18b80 <__assert_fail@plt+0x7b58>
   188d8:	ldr	r0, [fp, #-12]
   188dc:	cmp	r0, #0
   188e0:	bge	18a5c <__assert_fail@plt+0x7a34>
   188e4:	mov	r0, #1
   188e8:	cmp	r0, #0
   188ec:	bne	189a4 <__assert_fail@plt+0x797c>
   188f0:	b	188f4 <__assert_fail@plt+0x78cc>
   188f4:	b	188f8 <__assert_fail@plt+0x78d0>
   188f8:	ldr	r0, [fp, #-8]
   188fc:	ldr	r1, [r0]
   18900:	ldr	r0, [r0, #4]
   18904:	ldr	r2, [fp, #-12]
   18908:	movw	r3, #32767	; 0x7fff
   1890c:	sdiv	r2, r3, r2
   18910:	subs	r1, r1, r2
   18914:	sbcs	r0, r0, r2, asr #31
   18918:	str	r1, [fp, #-128]	; 0xffffff80
   1891c:	str	r0, [fp, #-132]	; 0xffffff7c
   18920:	bcc	18b38 <__assert_fail@plt+0x7b10>
   18924:	b	18b5c <__assert_fail@plt+0x7b34>
   18928:	b	1892c <__assert_fail@plt+0x7904>
   1892c:	ldr	r0, [pc, #2756]	; 193f8 <__assert_fail@plt+0x83d0>
   18930:	ldr	r1, [fp, #-12]
   18934:	cmp	r1, r0
   18938:	blt	18950 <__assert_fail@plt+0x7928>
   1893c:	b	1895c <__assert_fail@plt+0x7934>
   18940:	ldr	r0, [fp, #-12]
   18944:	movw	r1, #0
   18948:	cmp	r1, r0
   1894c:	bge	1895c <__assert_fail@plt+0x7934>
   18950:	movw	r0, #0
   18954:	str	r0, [fp, #-136]	; 0xffffff78
   18958:	b	18974 <__assert_fail@plt+0x794c>
   1895c:	ldr	r0, [fp, #-12]
   18960:	movw	r1, #0
   18964:	sub	r0, r1, r0
   18968:	movw	r1, #32767	; 0x7fff
   1896c:	sdiv	r0, r1, r0
   18970:	str	r0, [fp, #-136]	; 0xffffff78
   18974:	ldr	r0, [fp, #-136]	; 0xffffff78
   18978:	ldr	r1, [fp, #-8]
   1897c:	ldr	r2, [r1]
   18980:	ldr	r1, [r1, #4]
   18984:	mvn	r1, r1
   18988:	mvn	r2, r2
   1898c:	subs	r2, r2, r0
   18990:	sbcs	r0, r1, r0, asr #31
   18994:	str	r2, [fp, #-140]	; 0xffffff74
   18998:	str	r0, [fp, #-144]	; 0xffffff70
   1899c:	bcs	18b38 <__assert_fail@plt+0x7b10>
   189a0:	b	18b5c <__assert_fail@plt+0x7b34>
   189a4:	b	189a8 <__assert_fail@plt+0x7980>
   189a8:	b	18a28 <__assert_fail@plt+0x7a00>
   189ac:	b	18a28 <__assert_fail@plt+0x7a00>
   189b0:	ldr	r0, [fp, #-12]
   189b4:	cmn	r0, #1
   189b8:	bne	18a28 <__assert_fail@plt+0x7a00>
   189bc:	b	189e0 <__assert_fail@plt+0x79b8>
   189c0:	ldr	r0, [fp, #-8]
   189c4:	ldr	r1, [r0]
   189c8:	ldr	r0, [r0, #4]
   189cc:	eor	r1, r1, #32768	; 0x8000
   189d0:	orr	r0, r1, r0
   189d4:	cmp	r0, #0
   189d8:	bne	18b38 <__assert_fail@plt+0x7b10>
   189dc:	b	18b5c <__assert_fail@plt+0x7b34>
   189e0:	ldr	r0, [fp, #-8]
   189e4:	ldr	r1, [r0]
   189e8:	ldr	r0, [r0, #4]
   189ec:	orr	r0, r1, r0
   189f0:	cmp	r0, #0
   189f4:	beq	18b5c <__assert_fail@plt+0x7b34>
   189f8:	b	189fc <__assert_fail@plt+0x79d4>
   189fc:	ldr	r0, [fp, #-8]
   18a00:	ldr	r1, [r0]
   18a04:	ldr	r0, [r0, #4]
   18a08:	subs	r1, r1, #1
   18a0c:	sbc	r0, r0, #0
   18a10:	lsr	r1, r1, #15
   18a14:	orr	r1, r1, r0, lsl #17
   18a18:	orr	r0, r1, r0, lsr #15
   18a1c:	cmp	r0, #0
   18a20:	bne	18b38 <__assert_fail@plt+0x7b10>
   18a24:	b	18b5c <__assert_fail@plt+0x7b34>
   18a28:	ldr	r0, [fp, #-12]
   18a2c:	movw	r1, #32768	; 0x8000
   18a30:	movt	r1, #65535	; 0xffff
   18a34:	sdiv	r0, r1, r0
   18a38:	ldr	r1, [fp, #-8]
   18a3c:	ldr	r2, [r1]
   18a40:	ldr	r1, [r1, #4]
   18a44:	subs	r2, r0, r2
   18a48:	rscs	r0, r1, r0, asr #31
   18a4c:	str	r2, [fp, #-148]	; 0xffffff6c
   18a50:	str	r0, [fp, #-152]	; 0xffffff68
   18a54:	bcc	18b38 <__assert_fail@plt+0x7b10>
   18a58:	b	18b5c <__assert_fail@plt+0x7b34>
   18a5c:	ldr	r0, [fp, #-12]
   18a60:	cmp	r0, #0
   18a64:	bne	18a6c <__assert_fail@plt+0x7a44>
   18a68:	b	18b5c <__assert_fail@plt+0x7b34>
   18a6c:	mov	r0, #1
   18a70:	cmp	r0, #0
   18a74:	bne	18b08 <__assert_fail@plt+0x7ae0>
   18a78:	b	18a7c <__assert_fail@plt+0x7a54>
   18a7c:	ldr	r0, [fp, #-8]
   18a80:	ldr	r1, [r0]
   18a84:	ldr	r0, [r0, #4]
   18a88:	and	r0, r1, r0
   18a8c:	cmn	r0, #1
   18a90:	bne	18ad0 <__assert_fail@plt+0x7aa8>
   18a94:	b	18a98 <__assert_fail@plt+0x7a70>
   18a98:	b	18a9c <__assert_fail@plt+0x7a74>
   18a9c:	ldr	r0, [pc, #4064]	; 19a84 <__assert_fail@plt+0x8a5c>
   18aa0:	ldr	r1, [fp, #-12]
   18aa4:	add	r0, r1, r0
   18aa8:	movw	r1, #0
   18aac:	cmp	r1, r0
   18ab0:	blt	18b38 <__assert_fail@plt+0x7b10>
   18ab4:	b	18b5c <__assert_fail@plt+0x7b34>
   18ab8:	ldr	r0, [fp, #-12]
   18abc:	sub	r0, r0, #1
   18ac0:	movw	r1, #32767	; 0x7fff
   18ac4:	cmp	r1, r0
   18ac8:	blt	18b38 <__assert_fail@plt+0x7b10>
   18acc:	b	18b5c <__assert_fail@plt+0x7b34>
   18ad0:	ldr	r0, [fp, #-8]
   18ad4:	ldr	r2, [r0]
   18ad8:	ldr	r3, [r0, #4]
   18adc:	movw	r0, #32768	; 0x8000
   18ae0:	movt	r0, #65535	; 0xffff
   18ae4:	mvn	r1, #0
   18ae8:	bl	1c48c <__assert_fail@plt+0xb464>
   18aec:	ldr	r2, [fp, #-12]
   18af0:	subs	r0, r0, r2
   18af4:	sbcs	r1, r1, r2, asr #31
   18af8:	str	r0, [fp, #-156]	; 0xffffff64
   18afc:	str	r1, [fp, #-160]	; 0xffffff60
   18b00:	bcc	18b38 <__assert_fail@plt+0x7b10>
   18b04:	b	18b5c <__assert_fail@plt+0x7b34>
   18b08:	ldr	r0, [fp, #-12]
   18b0c:	movw	r1, #32767	; 0x7fff
   18b10:	sdiv	r0, r1, r0
   18b14:	ldr	r1, [fp, #-8]
   18b18:	ldr	r2, [r1]
   18b1c:	ldr	r1, [r1, #4]
   18b20:	subs	r2, r0, r2
   18b24:	rscs	r0, r1, r0, asr #31
   18b28:	str	r2, [fp, #-164]	; 0xffffff5c
   18b2c:	str	r0, [fp, #-168]	; 0xffffff58
   18b30:	bcs	18b5c <__assert_fail@plt+0x7b34>
   18b34:	b	18b38 <__assert_fail@plt+0x7b10>
   18b38:	ldr	r0, [fp, #-8]
   18b3c:	ldr	r0, [r0]
   18b40:	ldr	r1, [fp, #-12]
   18b44:	mul	r0, r0, r1
   18b48:	sxth	r0, r0
   18b4c:	asr	r1, r0, #31
   18b50:	str	r0, [fp, #-24]	; 0xffffffe8
   18b54:	str	r1, [fp, #-20]	; 0xffffffec
   18b58:	b	19e44 <__assert_fail@plt+0x8e1c>
   18b5c:	ldr	r0, [fp, #-8]
   18b60:	ldr	r0, [r0]
   18b64:	ldr	r1, [fp, #-12]
   18b68:	mul	r0, r0, r1
   18b6c:	sxth	r0, r0
   18b70:	asr	r1, r0, #31
   18b74:	str	r0, [fp, #-24]	; 0xffffffe8
   18b78:	str	r1, [fp, #-20]	; 0xffffffec
   18b7c:	b	19e60 <__assert_fail@plt+0x8e38>
   18b80:	ldr	r0, [fp, #-12]
   18b84:	cmp	r0, #0
   18b88:	bge	18ce0 <__assert_fail@plt+0x7cb8>
   18b8c:	mov	r0, #1
   18b90:	cmp	r0, #0
   18b94:	bne	18c4c <__assert_fail@plt+0x7c24>
   18b98:	b	18b9c <__assert_fail@plt+0x7b74>
   18b9c:	b	18ba0 <__assert_fail@plt+0x7b78>
   18ba0:	ldr	r0, [fp, #-8]
   18ba4:	ldr	r1, [r0]
   18ba8:	ldr	r0, [r0, #4]
   18bac:	ldr	r2, [fp, #-12]
   18bb0:	movw	r3, #65535	; 0xffff
   18bb4:	sdiv	r2, r3, r2
   18bb8:	subs	r1, r1, r2
   18bbc:	sbcs	r0, r0, r2, asr #31
   18bc0:	str	r1, [fp, #-172]	; 0xffffff54
   18bc4:	str	r0, [fp, #-176]	; 0xffffff50
   18bc8:	bcc	18dc4 <__assert_fail@plt+0x7d9c>
   18bcc:	b	18de8 <__assert_fail@plt+0x7dc0>
   18bd0:	b	18bd4 <__assert_fail@plt+0x7bac>
   18bd4:	ldr	r0, [pc, #2076]	; 193f8 <__assert_fail@plt+0x83d0>
   18bd8:	ldr	r1, [fp, #-12]
   18bdc:	cmp	r1, r0
   18be0:	blt	18bf8 <__assert_fail@plt+0x7bd0>
   18be4:	b	18c04 <__assert_fail@plt+0x7bdc>
   18be8:	ldr	r0, [fp, #-12]
   18bec:	movw	r1, #0
   18bf0:	cmp	r1, r0
   18bf4:	bge	18c04 <__assert_fail@plt+0x7bdc>
   18bf8:	movw	r0, #0
   18bfc:	str	r0, [fp, #-180]	; 0xffffff4c
   18c00:	b	18c1c <__assert_fail@plt+0x7bf4>
   18c04:	ldr	r0, [fp, #-12]
   18c08:	movw	r1, #0
   18c0c:	sub	r0, r1, r0
   18c10:	movw	r1, #65535	; 0xffff
   18c14:	sdiv	r0, r1, r0
   18c18:	str	r0, [fp, #-180]	; 0xffffff4c
   18c1c:	ldr	r0, [fp, #-180]	; 0xffffff4c
   18c20:	ldr	r1, [fp, #-8]
   18c24:	ldr	r2, [r1]
   18c28:	ldr	r1, [r1, #4]
   18c2c:	mvn	r1, r1
   18c30:	mvn	r2, r2
   18c34:	subs	r2, r2, r0
   18c38:	sbcs	r0, r1, r0, asr #31
   18c3c:	str	r2, [fp, #-184]	; 0xffffff48
   18c40:	str	r0, [fp, #-188]	; 0xffffff44
   18c44:	bcs	18dc4 <__assert_fail@plt+0x7d9c>
   18c48:	b	18de8 <__assert_fail@plt+0x7dc0>
   18c4c:	b	18c50 <__assert_fail@plt+0x7c28>
   18c50:	b	18cb0 <__assert_fail@plt+0x7c88>
   18c54:	b	18cb0 <__assert_fail@plt+0x7c88>
   18c58:	ldr	r0, [fp, #-12]
   18c5c:	cmn	r0, #1
   18c60:	bne	18cb0 <__assert_fail@plt+0x7c88>
   18c64:	b	18c84 <__assert_fail@plt+0x7c5c>
   18c68:	ldr	r0, [fp, #-8]
   18c6c:	ldr	r1, [r0]
   18c70:	ldr	r0, [r0, #4]
   18c74:	orr	r0, r1, r0
   18c78:	cmp	r0, #0
   18c7c:	bne	18dc4 <__assert_fail@plt+0x7d9c>
   18c80:	b	18de8 <__assert_fail@plt+0x7dc0>
   18c84:	ldr	r0, [fp, #-8]
   18c88:	ldr	r1, [r0]
   18c8c:	ldr	r0, [r0, #4]
   18c90:	orr	r0, r1, r0
   18c94:	cmp	r0, #0
   18c98:	beq	18de8 <__assert_fail@plt+0x7dc0>
   18c9c:	b	18ca0 <__assert_fail@plt+0x7c78>
   18ca0:	mov	r0, #0
   18ca4:	cmp	r0, #0
   18ca8:	bne	18dc4 <__assert_fail@plt+0x7d9c>
   18cac:	b	18de8 <__assert_fail@plt+0x7dc0>
   18cb0:	ldr	r0, [fp, #-12]
   18cb4:	mov	r1, #0
   18cb8:	sdiv	r0, r1, r0
   18cbc:	ldr	r1, [fp, #-8]
   18cc0:	ldr	r2, [r1]
   18cc4:	ldr	r1, [r1, #4]
   18cc8:	subs	r2, r0, r2
   18ccc:	rscs	r0, r1, r0, asr #31
   18cd0:	str	r2, [fp, #-192]	; 0xffffff40
   18cd4:	str	r0, [fp, #-196]	; 0xffffff3c
   18cd8:	bcc	18dc4 <__assert_fail@plt+0x7d9c>
   18cdc:	b	18de8 <__assert_fail@plt+0x7dc0>
   18ce0:	ldr	r0, [fp, #-12]
   18ce4:	cmp	r0, #0
   18ce8:	bne	18cf0 <__assert_fail@plt+0x7cc8>
   18cec:	b	18de8 <__assert_fail@plt+0x7dc0>
   18cf0:	mov	r0, #1
   18cf4:	cmp	r0, #0
   18cf8:	bne	18d94 <__assert_fail@plt+0x7d6c>
   18cfc:	b	18d00 <__assert_fail@plt+0x7cd8>
   18d00:	b	18d08 <__assert_fail@plt+0x7ce0>
   18d04:	b	18d0c <__assert_fail@plt+0x7ce4>
   18d08:	b	18d5c <__assert_fail@plt+0x7d34>
   18d0c:	ldr	r0, [fp, #-8]
   18d10:	ldr	r1, [r0]
   18d14:	ldr	r0, [r0, #4]
   18d18:	and	r0, r1, r0
   18d1c:	cmn	r0, #1
   18d20:	bne	18d5c <__assert_fail@plt+0x7d34>
   18d24:	b	18d28 <__assert_fail@plt+0x7d00>
   18d28:	b	18d2c <__assert_fail@plt+0x7d04>
   18d2c:	ldr	r0, [fp, #-12]
   18d30:	add	r0, r0, #0
   18d34:	movw	r1, #0
   18d38:	cmp	r1, r0
   18d3c:	blt	18dc4 <__assert_fail@plt+0x7d9c>
   18d40:	b	18de8 <__assert_fail@plt+0x7dc0>
   18d44:	ldr	r0, [fp, #-12]
   18d48:	sub	r0, r0, #1
   18d4c:	mvn	r1, #0
   18d50:	cmp	r1, r0
   18d54:	blt	18dc4 <__assert_fail@plt+0x7d9c>
   18d58:	b	18de8 <__assert_fail@plt+0x7dc0>
   18d5c:	ldr	r0, [fp, #-8]
   18d60:	ldr	r2, [r0]
   18d64:	ldr	r3, [r0, #4]
   18d68:	mov	r0, #0
   18d6c:	str	r0, [fp, #-200]	; 0xffffff38
   18d70:	ldr	r1, [fp, #-200]	; 0xffffff38
   18d74:	bl	1c48c <__assert_fail@plt+0xb464>
   18d78:	ldr	r2, [fp, #-12]
   18d7c:	subs	r0, r0, r2
   18d80:	sbcs	r1, r1, r2, asr #31
   18d84:	str	r0, [fp, #-204]	; 0xffffff34
   18d88:	str	r1, [fp, #-208]	; 0xffffff30
   18d8c:	bcc	18dc4 <__assert_fail@plt+0x7d9c>
   18d90:	b	18de8 <__assert_fail@plt+0x7dc0>
   18d94:	ldr	r0, [fp, #-12]
   18d98:	movw	r1, #65535	; 0xffff
   18d9c:	sdiv	r0, r1, r0
   18da0:	ldr	r1, [fp, #-8]
   18da4:	ldr	r2, [r1]
   18da8:	ldr	r1, [r1, #4]
   18dac:	subs	r2, r0, r2
   18db0:	rscs	r0, r1, r0, asr #31
   18db4:	str	r2, [fp, #-212]	; 0xffffff2c
   18db8:	str	r0, [fp, #-216]	; 0xffffff28
   18dbc:	bcs	18de8 <__assert_fail@plt+0x7dc0>
   18dc0:	b	18dc4 <__assert_fail@plt+0x7d9c>
   18dc4:	ldr	r0, [fp, #-8]
   18dc8:	ldr	r0, [r0]
   18dcc:	ldr	r1, [fp, #-12]
   18dd0:	mul	r0, r0, r1
   18dd4:	uxth	r0, r0
   18dd8:	mov	r1, #0
   18ddc:	str	r1, [fp, #-20]	; 0xffffffec
   18de0:	str	r0, [fp, #-24]	; 0xffffffe8
   18de4:	b	19e44 <__assert_fail@plt+0x8e1c>
   18de8:	ldr	r0, [fp, #-8]
   18dec:	ldr	r0, [r0]
   18df0:	ldr	r1, [fp, #-12]
   18df4:	mul	r0, r0, r1
   18df8:	uxth	r0, r0
   18dfc:	mov	r1, #0
   18e00:	str	r1, [fp, #-20]	; 0xffffffec
   18e04:	str	r0, [fp, #-24]	; 0xffffffe8
   18e08:	b	19e60 <__assert_fail@plt+0x8e38>
   18e0c:	b	19324 <__assert_fail@plt+0x82fc>
   18e10:	b	190a0 <__assert_fail@plt+0x8078>
   18e14:	ldr	r0, [fp, #-12]
   18e18:	cmp	r0, #0
   18e1c:	bge	18f8c <__assert_fail@plt+0x7f64>
   18e20:	mov	r0, #1
   18e24:	cmp	r0, #0
   18e28:	bne	18ee0 <__assert_fail@plt+0x7eb8>
   18e2c:	b	18e30 <__assert_fail@plt+0x7e08>
   18e30:	b	18e34 <__assert_fail@plt+0x7e0c>
   18e34:	ldr	r0, [fp, #-8]
   18e38:	ldr	r1, [r0]
   18e3c:	ldr	r0, [r0, #4]
   18e40:	ldr	r2, [fp, #-12]
   18e44:	mvn	r3, #-2147483648	; 0x80000000
   18e48:	sdiv	r2, r3, r2
   18e4c:	subs	r1, r1, r2
   18e50:	sbcs	r0, r0, r2, asr #31
   18e54:	str	r1, [fp, #-220]	; 0xffffff24
   18e58:	str	r0, [fp, #-224]	; 0xffffff20
   18e5c:	bcc	19060 <__assert_fail@plt+0x8038>
   18e60:	b	19080 <__assert_fail@plt+0x8058>
   18e64:	b	18e68 <__assert_fail@plt+0x7e40>
   18e68:	ldr	r0, [pc, #1416]	; 193f8 <__assert_fail@plt+0x83d0>
   18e6c:	ldr	r1, [fp, #-12]
   18e70:	cmp	r1, r0
   18e74:	blt	18e8c <__assert_fail@plt+0x7e64>
   18e78:	b	18e98 <__assert_fail@plt+0x7e70>
   18e7c:	ldr	r0, [fp, #-12]
   18e80:	movw	r1, #0
   18e84:	cmp	r1, r0
   18e88:	bge	18e98 <__assert_fail@plt+0x7e70>
   18e8c:	movw	r0, #0
   18e90:	str	r0, [fp, #-228]	; 0xffffff1c
   18e94:	b	18eb0 <__assert_fail@plt+0x7e88>
   18e98:	ldr	r0, [pc, #4076]	; 19e8c <__assert_fail@plt+0x8e64>
   18e9c:	ldr	r1, [fp, #-12]
   18ea0:	movw	r2, #0
   18ea4:	sub	r1, r2, r1
   18ea8:	sdiv	r0, r0, r1
   18eac:	str	r0, [fp, #-228]	; 0xffffff1c
   18eb0:	ldr	r0, [fp, #-228]	; 0xffffff1c
   18eb4:	ldr	r1, [fp, #-8]
   18eb8:	ldr	r2, [r1]
   18ebc:	ldr	r1, [r1, #4]
   18ec0:	mvn	r1, r1
   18ec4:	mvn	r2, r2
   18ec8:	subs	r2, r2, r0
   18ecc:	sbcs	r0, r1, r0, asr #31
   18ed0:	str	r2, [fp, #-232]	; 0xffffff18
   18ed4:	str	r0, [fp, #-236]	; 0xffffff14
   18ed8:	bcs	19060 <__assert_fail@plt+0x8038>
   18edc:	b	19080 <__assert_fail@plt+0x8058>
   18ee0:	ldr	r0, [fp, #-12]
   18ee4:	cmn	r0, #1
   18ee8:	bne	18f5c <__assert_fail@plt+0x7f34>
   18eec:	b	18f10 <__assert_fail@plt+0x7ee8>
   18ef0:	ldr	r0, [fp, #-8]
   18ef4:	ldr	r1, [r0]
   18ef8:	ldr	r0, [r0, #4]
   18efc:	eor	r1, r1, #-2147483648	; 0x80000000
   18f00:	orr	r0, r1, r0
   18f04:	cmp	r0, #0
   18f08:	bne	19060 <__assert_fail@plt+0x8038>
   18f0c:	b	19080 <__assert_fail@plt+0x8058>
   18f10:	ldr	r0, [fp, #-8]
   18f14:	ldr	r1, [r0]
   18f18:	ldr	r0, [r0, #4]
   18f1c:	orr	r0, r1, r0
   18f20:	cmp	r0, #0
   18f24:	beq	19080 <__assert_fail@plt+0x8058>
   18f28:	b	18f2c <__assert_fail@plt+0x7f04>
   18f2c:	ldr	r0, [fp, #-8]
   18f30:	ldr	r1, [r0]
   18f34:	ldr	r0, [r0, #4]
   18f38:	subs	r1, r1, #1
   18f3c:	sbc	r0, r0, #0
   18f40:	mvn	r2, #-2147483648	; 0x80000000
   18f44:	subs	r1, r2, r1
   18f48:	rscs	r0, r0, #0
   18f4c:	str	r1, [fp, #-240]	; 0xffffff10
   18f50:	str	r0, [fp, #-244]	; 0xffffff0c
   18f54:	bcc	19060 <__assert_fail@plt+0x8038>
   18f58:	b	19080 <__assert_fail@plt+0x8058>
   18f5c:	ldr	r0, [fp, #-12]
   18f60:	mov	r1, #-2147483648	; 0x80000000
   18f64:	sdiv	r0, r1, r0
   18f68:	ldr	r1, [fp, #-8]
   18f6c:	ldr	r2, [r1]
   18f70:	ldr	r1, [r1, #4]
   18f74:	subs	r2, r0, r2
   18f78:	rscs	r0, r1, r0, asr #31
   18f7c:	str	r2, [fp, #-248]	; 0xffffff08
   18f80:	str	r0, [fp, #-252]	; 0xffffff04
   18f84:	bcc	19060 <__assert_fail@plt+0x8038>
   18f88:	b	19080 <__assert_fail@plt+0x8058>
   18f8c:	ldr	r0, [fp, #-12]
   18f90:	cmp	r0, #0
   18f94:	bne	18f9c <__assert_fail@plt+0x7f74>
   18f98:	b	19080 <__assert_fail@plt+0x8058>
   18f9c:	mov	r0, #1
   18fa0:	cmp	r0, #0
   18fa4:	bne	19030 <__assert_fail@plt+0x8008>
   18fa8:	b	18fac <__assert_fail@plt+0x7f84>
   18fac:	ldr	r0, [fp, #-8]
   18fb0:	ldr	r1, [r0]
   18fb4:	ldr	r0, [r0, #4]
   18fb8:	and	r0, r1, r0
   18fbc:	cmn	r0, #1
   18fc0:	bne	18ffc <__assert_fail@plt+0x7fd4>
   18fc4:	b	18fc8 <__assert_fail@plt+0x7fa0>
   18fc8:	b	18fcc <__assert_fail@plt+0x7fa4>
   18fcc:	ldr	r0, [fp, #-12]
   18fd0:	add	r0, r0, #-2147483648	; 0x80000000
   18fd4:	movw	r1, #0
   18fd8:	cmp	r1, r0
   18fdc:	blt	19060 <__assert_fail@plt+0x8038>
   18fe0:	b	19080 <__assert_fail@plt+0x8058>
   18fe4:	ldr	r0, [pc, #3744]	; 19e8c <__assert_fail@plt+0x8e64>
   18fe8:	ldr	r1, [fp, #-12]
   18fec:	sub	r1, r1, #1
   18ff0:	cmp	r0, r1
   18ff4:	blt	19060 <__assert_fail@plt+0x8038>
   18ff8:	b	19080 <__assert_fail@plt+0x8058>
   18ffc:	ldr	r0, [fp, #-8]
   19000:	ldr	r2, [r0]
   19004:	ldr	r3, [r0, #4]
   19008:	mov	r0, #-2147483648	; 0x80000000
   1900c:	mvn	r1, #0
   19010:	bl	1c48c <__assert_fail@plt+0xb464>
   19014:	ldr	r2, [fp, #-12]
   19018:	subs	r0, r0, r2
   1901c:	sbcs	r1, r1, r2, asr #31
   19020:	str	r0, [fp, #-256]	; 0xffffff00
   19024:	str	r1, [fp, #-260]	; 0xfffffefc
   19028:	bcc	19060 <__assert_fail@plt+0x8038>
   1902c:	b	19080 <__assert_fail@plt+0x8058>
   19030:	ldr	r0, [fp, #-12]
   19034:	mvn	r1, #-2147483648	; 0x80000000
   19038:	sdiv	r0, r1, r0
   1903c:	ldr	r1, [fp, #-8]
   19040:	ldr	r2, [r1]
   19044:	ldr	r1, [r1, #4]
   19048:	subs	r2, r0, r2
   1904c:	rscs	r0, r1, r0, asr #31
   19050:	str	r2, [fp, #-264]	; 0xfffffef8
   19054:	str	r0, [fp, #-268]	; 0xfffffef4
   19058:	bcs	19080 <__assert_fail@plt+0x8058>
   1905c:	b	19060 <__assert_fail@plt+0x8038>
   19060:	ldr	r0, [fp, #-8]
   19064:	ldr	r0, [r0]
   19068:	ldr	r1, [fp, #-12]
   1906c:	mul	r0, r0, r1
   19070:	asr	r1, r0, #31
   19074:	str	r0, [fp, #-24]	; 0xffffffe8
   19078:	str	r1, [fp, #-20]	; 0xffffffec
   1907c:	b	19e44 <__assert_fail@plt+0x8e1c>
   19080:	ldr	r0, [fp, #-8]
   19084:	ldr	r0, [r0]
   19088:	ldr	r1, [fp, #-12]
   1908c:	mul	r0, r0, r1
   19090:	asr	r1, r0, #31
   19094:	str	r0, [fp, #-24]	; 0xffffffe8
   19098:	str	r1, [fp, #-20]	; 0xffffffec
   1909c:	b	19e60 <__assert_fail@plt+0x8e38>
   190a0:	ldr	r0, [fp, #-12]
   190a4:	cmp	r0, #0
   190a8:	bge	19200 <__assert_fail@plt+0x81d8>
   190ac:	mov	r0, #1
   190b0:	cmp	r0, #0
   190b4:	bne	1916c <__assert_fail@plt+0x8144>
   190b8:	b	190bc <__assert_fail@plt+0x8094>
   190bc:	b	190f0 <__assert_fail@plt+0x80c8>
   190c0:	ldr	r0, [fp, #-8]
   190c4:	ldr	r1, [r0]
   190c8:	ldr	r0, [r0, #4]
   190cc:	ldr	r2, [fp, #-12]
   190d0:	mvn	r3, #0
   190d4:	udiv	r2, r3, r2
   190d8:	subs	r1, r1, r2
   190dc:	sbcs	r0, r0, #0
   190e0:	str	r1, [fp, #-272]	; 0xfffffef0
   190e4:	str	r0, [fp, #-276]	; 0xfffffeec
   190e8:	bcc	192e4 <__assert_fail@plt+0x82bc>
   190ec:	b	19304 <__assert_fail@plt+0x82dc>
   190f0:	b	190f4 <__assert_fail@plt+0x80cc>
   190f4:	ldr	r0, [pc, #3468]	; 19e88 <__assert_fail@plt+0x8e60>
   190f8:	ldr	r1, [fp, #-12]
   190fc:	cmp	r1, r0
   19100:	blt	19118 <__assert_fail@plt+0x80f0>
   19104:	b	19124 <__assert_fail@plt+0x80fc>
   19108:	ldr	r0, [fp, #-12]
   1910c:	movw	r1, #0
   19110:	cmp	r1, r0
   19114:	bge	19124 <__assert_fail@plt+0x80fc>
   19118:	movw	r0, #1
   1911c:	str	r0, [fp, #-280]	; 0xfffffee8
   19120:	b	1913c <__assert_fail@plt+0x8114>
   19124:	ldr	r0, [fp, #-12]
   19128:	movw	r1, #0
   1912c:	sub	r0, r1, r0
   19130:	mvn	r1, #0
   19134:	udiv	r0, r1, r0
   19138:	str	r0, [fp, #-280]	; 0xfffffee8
   1913c:	ldr	r0, [fp, #-280]	; 0xfffffee8
   19140:	ldr	r1, [fp, #-8]
   19144:	ldr	r2, [r1]
   19148:	ldr	r1, [r1, #4]
   1914c:	mvn	r1, r1
   19150:	mvn	r2, r2
   19154:	subs	r0, r2, r0
   19158:	sbcs	r1, r1, #0
   1915c:	str	r0, [sp, #284]	; 0x11c
   19160:	str	r1, [sp, #280]	; 0x118
   19164:	bcs	192e4 <__assert_fail@plt+0x82bc>
   19168:	b	19304 <__assert_fail@plt+0x82dc>
   1916c:	b	19170 <__assert_fail@plt+0x8148>
   19170:	b	191d0 <__assert_fail@plt+0x81a8>
   19174:	b	191d0 <__assert_fail@plt+0x81a8>
   19178:	ldr	r0, [fp, #-12]
   1917c:	cmn	r0, #1
   19180:	bne	191d0 <__assert_fail@plt+0x81a8>
   19184:	b	191a4 <__assert_fail@plt+0x817c>
   19188:	ldr	r0, [fp, #-8]
   1918c:	ldr	r1, [r0]
   19190:	ldr	r0, [r0, #4]
   19194:	orr	r0, r1, r0
   19198:	cmp	r0, #0
   1919c:	bne	192e4 <__assert_fail@plt+0x82bc>
   191a0:	b	19304 <__assert_fail@plt+0x82dc>
   191a4:	ldr	r0, [fp, #-8]
   191a8:	ldr	r1, [r0]
   191ac:	ldr	r0, [r0, #4]
   191b0:	orr	r0, r1, r0
   191b4:	cmp	r0, #0
   191b8:	beq	19304 <__assert_fail@plt+0x82dc>
   191bc:	b	191c0 <__assert_fail@plt+0x8198>
   191c0:	mov	r0, #0
   191c4:	cmp	r0, #0
   191c8:	bne	192e4 <__assert_fail@plt+0x82bc>
   191cc:	b	19304 <__assert_fail@plt+0x82dc>
   191d0:	ldr	r0, [fp, #-12]
   191d4:	mov	r1, #0
   191d8:	sdiv	r0, r1, r0
   191dc:	ldr	r1, [fp, #-8]
   191e0:	ldr	r2, [r1]
   191e4:	ldr	r1, [r1, #4]
   191e8:	subs	r2, r0, r2
   191ec:	rscs	r0, r1, r0, asr #31
   191f0:	str	r2, [sp, #276]	; 0x114
   191f4:	str	r0, [sp, #272]	; 0x110
   191f8:	bcc	192e4 <__assert_fail@plt+0x82bc>
   191fc:	b	19304 <__assert_fail@plt+0x82dc>
   19200:	ldr	r0, [fp, #-12]
   19204:	cmp	r0, #0
   19208:	bne	19210 <__assert_fail@plt+0x81e8>
   1920c:	b	19304 <__assert_fail@plt+0x82dc>
   19210:	mov	r0, #1
   19214:	cmp	r0, #0
   19218:	bne	192b4 <__assert_fail@plt+0x828c>
   1921c:	b	19220 <__assert_fail@plt+0x81f8>
   19220:	b	19228 <__assert_fail@plt+0x8200>
   19224:	b	1922c <__assert_fail@plt+0x8204>
   19228:	b	1927c <__assert_fail@plt+0x8254>
   1922c:	ldr	r0, [fp, #-8]
   19230:	ldr	r1, [r0]
   19234:	ldr	r0, [r0, #4]
   19238:	and	r0, r1, r0
   1923c:	cmn	r0, #1
   19240:	bne	1927c <__assert_fail@plt+0x8254>
   19244:	b	19248 <__assert_fail@plt+0x8220>
   19248:	b	1924c <__assert_fail@plt+0x8224>
   1924c:	ldr	r0, [fp, #-12]
   19250:	add	r0, r0, #0
   19254:	movw	r1, #0
   19258:	cmp	r1, r0
   1925c:	blt	192e4 <__assert_fail@plt+0x82bc>
   19260:	b	19304 <__assert_fail@plt+0x82dc>
   19264:	ldr	r0, [fp, #-12]
   19268:	sub	r0, r0, #1
   1926c:	mvn	r1, #0
   19270:	cmp	r1, r0
   19274:	blt	192e4 <__assert_fail@plt+0x82bc>
   19278:	b	19304 <__assert_fail@plt+0x82dc>
   1927c:	ldr	r0, [fp, #-8]
   19280:	ldr	r2, [r0]
   19284:	ldr	r3, [r0, #4]
   19288:	mov	r0, #0
   1928c:	str	r0, [sp, #268]	; 0x10c
   19290:	ldr	r1, [sp, #268]	; 0x10c
   19294:	bl	1c48c <__assert_fail@plt+0xb464>
   19298:	ldr	r2, [fp, #-12]
   1929c:	subs	r0, r0, r2
   192a0:	sbcs	r1, r1, r2, asr #31
   192a4:	str	r0, [sp, #264]	; 0x108
   192a8:	str	r1, [sp, #260]	; 0x104
   192ac:	bcc	192e4 <__assert_fail@plt+0x82bc>
   192b0:	b	19304 <__assert_fail@plt+0x82dc>
   192b4:	ldr	r0, [fp, #-12]
   192b8:	mvn	r1, #0
   192bc:	udiv	r0, r1, r0
   192c0:	ldr	r1, [fp, #-8]
   192c4:	ldr	r2, [r1]
   192c8:	ldr	r1, [r1, #4]
   192cc:	subs	r0, r0, r2
   192d0:	rscs	r1, r1, #0
   192d4:	str	r0, [sp, #256]	; 0x100
   192d8:	str	r1, [sp, #252]	; 0xfc
   192dc:	bcs	19304 <__assert_fail@plt+0x82dc>
   192e0:	b	192e4 <__assert_fail@plt+0x82bc>
   192e4:	ldr	r0, [fp, #-8]
   192e8:	ldr	r0, [r0]
   192ec:	ldr	r1, [fp, #-12]
   192f0:	mul	r0, r0, r1
   192f4:	mov	r1, #0
   192f8:	str	r1, [fp, #-20]	; 0xffffffec
   192fc:	str	r0, [fp, #-24]	; 0xffffffe8
   19300:	b	19e44 <__assert_fail@plt+0x8e1c>
   19304:	ldr	r0, [fp, #-8]
   19308:	ldr	r0, [r0]
   1930c:	ldr	r1, [fp, #-12]
   19310:	mul	r0, r0, r1
   19314:	mov	r1, #0
   19318:	str	r1, [fp, #-20]	; 0xffffffec
   1931c:	str	r0, [fp, #-24]	; 0xffffffe8
   19320:	b	19e60 <__assert_fail@plt+0x8e38>
   19324:	b	19840 <__assert_fail@plt+0x8818>
   19328:	b	195bc <__assert_fail@plt+0x8594>
   1932c:	ldr	r0, [fp, #-12]
   19330:	cmp	r0, #0
   19334:	bge	194a8 <__assert_fail@plt+0x8480>
   19338:	mov	r0, #1
   1933c:	cmp	r0, #0
   19340:	bne	193fc <__assert_fail@plt+0x83d4>
   19344:	b	19348 <__assert_fail@plt+0x8320>
   19348:	b	1934c <__assert_fail@plt+0x8324>
   1934c:	ldr	r0, [fp, #-8]
   19350:	ldr	r1, [r0]
   19354:	ldr	r0, [r0, #4]
   19358:	ldr	r2, [fp, #-12]
   1935c:	mvn	r3, #-2147483648	; 0x80000000
   19360:	sdiv	r2, r3, r2
   19364:	subs	r1, r1, r2
   19368:	sbcs	r0, r0, r2, asr #31
   1936c:	str	r1, [sp, #248]	; 0xf8
   19370:	str	r0, [sp, #244]	; 0xf4
   19374:	bcc	1957c <__assert_fail@plt+0x8554>
   19378:	b	1959c <__assert_fail@plt+0x8574>
   1937c:	b	19380 <__assert_fail@plt+0x8358>
   19380:	ldr	r0, [pc, #2816]	; 19e88 <__assert_fail@plt+0x8e60>
   19384:	ldr	r1, [fp, #-12]
   19388:	cmp	r1, r0
   1938c:	blt	193a4 <__assert_fail@plt+0x837c>
   19390:	b	193b0 <__assert_fail@plt+0x8388>
   19394:	ldr	r0, [fp, #-12]
   19398:	movw	r1, #0
   1939c:	cmp	r1, r0
   193a0:	bge	193b0 <__assert_fail@plt+0x8388>
   193a4:	movw	r0, #0
   193a8:	str	r0, [sp, #240]	; 0xf0
   193ac:	b	193c8 <__assert_fail@plt+0x83a0>
   193b0:	ldr	r0, [pc, #2772]	; 19e8c <__assert_fail@plt+0x8e64>
   193b4:	ldr	r1, [fp, #-12]
   193b8:	movw	r2, #0
   193bc:	sub	r1, r2, r1
   193c0:	sdiv	r0, r0, r1
   193c4:	str	r0, [sp, #240]	; 0xf0
   193c8:	ldr	r0, [sp, #240]	; 0xf0
   193cc:	ldr	r1, [fp, #-8]
   193d0:	ldr	r2, [r1]
   193d4:	ldr	r1, [r1, #4]
   193d8:	mvn	r1, r1
   193dc:	mvn	r2, r2
   193e0:	subs	r2, r2, r0
   193e4:	sbcs	r0, r1, r0, asr #31
   193e8:	str	r2, [sp, #236]	; 0xec
   193ec:	str	r0, [sp, #232]	; 0xe8
   193f0:	bcs	1957c <__assert_fail@plt+0x8554>
   193f4:	b	1959c <__assert_fail@plt+0x8574>
   193f8:	andhi	r0, r0, r1
   193fc:	ldr	r0, [fp, #-12]
   19400:	cmn	r0, #1
   19404:	bne	19478 <__assert_fail@plt+0x8450>
   19408:	b	1942c <__assert_fail@plt+0x8404>
   1940c:	ldr	r0, [fp, #-8]
   19410:	ldr	r1, [r0]
   19414:	ldr	r0, [r0, #4]
   19418:	eor	r1, r1, #-2147483648	; 0x80000000
   1941c:	orr	r0, r1, r0
   19420:	cmp	r0, #0
   19424:	bne	1957c <__assert_fail@plt+0x8554>
   19428:	b	1959c <__assert_fail@plt+0x8574>
   1942c:	ldr	r0, [fp, #-8]
   19430:	ldr	r1, [r0]
   19434:	ldr	r0, [r0, #4]
   19438:	orr	r0, r1, r0
   1943c:	cmp	r0, #0
   19440:	beq	1959c <__assert_fail@plt+0x8574>
   19444:	b	19448 <__assert_fail@plt+0x8420>
   19448:	ldr	r0, [fp, #-8]
   1944c:	ldr	r1, [r0]
   19450:	ldr	r0, [r0, #4]
   19454:	subs	r1, r1, #1
   19458:	sbc	r0, r0, #0
   1945c:	mvn	r2, #-2147483648	; 0x80000000
   19460:	subs	r1, r2, r1
   19464:	rscs	r0, r0, #0
   19468:	str	r1, [sp, #228]	; 0xe4
   1946c:	str	r0, [sp, #224]	; 0xe0
   19470:	bcc	1957c <__assert_fail@plt+0x8554>
   19474:	b	1959c <__assert_fail@plt+0x8574>
   19478:	ldr	r0, [fp, #-12]
   1947c:	mov	r1, #-2147483648	; 0x80000000
   19480:	sdiv	r0, r1, r0
   19484:	ldr	r1, [fp, #-8]
   19488:	ldr	r2, [r1]
   1948c:	ldr	r1, [r1, #4]
   19490:	subs	r2, r0, r2
   19494:	rscs	r0, r1, r0, asr #31
   19498:	str	r2, [sp, #220]	; 0xdc
   1949c:	str	r0, [sp, #216]	; 0xd8
   194a0:	bcc	1957c <__assert_fail@plt+0x8554>
   194a4:	b	1959c <__assert_fail@plt+0x8574>
   194a8:	ldr	r0, [fp, #-12]
   194ac:	cmp	r0, #0
   194b0:	bne	194b8 <__assert_fail@plt+0x8490>
   194b4:	b	1959c <__assert_fail@plt+0x8574>
   194b8:	mov	r0, #1
   194bc:	cmp	r0, #0
   194c0:	bne	1954c <__assert_fail@plt+0x8524>
   194c4:	b	194c8 <__assert_fail@plt+0x84a0>
   194c8:	ldr	r0, [fp, #-8]
   194cc:	ldr	r1, [r0]
   194d0:	ldr	r0, [r0, #4]
   194d4:	and	r0, r1, r0
   194d8:	cmn	r0, #1
   194dc:	bne	19518 <__assert_fail@plt+0x84f0>
   194e0:	b	194e4 <__assert_fail@plt+0x84bc>
   194e4:	b	194e8 <__assert_fail@plt+0x84c0>
   194e8:	ldr	r0, [fp, #-12]
   194ec:	add	r0, r0, #-2147483648	; 0x80000000
   194f0:	movw	r1, #0
   194f4:	cmp	r1, r0
   194f8:	blt	1957c <__assert_fail@plt+0x8554>
   194fc:	b	1959c <__assert_fail@plt+0x8574>
   19500:	ldr	r0, [pc, #2436]	; 19e8c <__assert_fail@plt+0x8e64>
   19504:	ldr	r1, [fp, #-12]
   19508:	sub	r1, r1, #1
   1950c:	cmp	r0, r1
   19510:	blt	1957c <__assert_fail@plt+0x8554>
   19514:	b	1959c <__assert_fail@plt+0x8574>
   19518:	ldr	r0, [fp, #-8]
   1951c:	ldr	r2, [r0]
   19520:	ldr	r3, [r0, #4]
   19524:	mov	r0, #-2147483648	; 0x80000000
   19528:	mvn	r1, #0
   1952c:	bl	1c48c <__assert_fail@plt+0xb464>
   19530:	ldr	r2, [fp, #-12]
   19534:	subs	r0, r0, r2
   19538:	sbcs	r1, r1, r2, asr #31
   1953c:	str	r0, [sp, #212]	; 0xd4
   19540:	str	r1, [sp, #208]	; 0xd0
   19544:	bcc	1957c <__assert_fail@plt+0x8554>
   19548:	b	1959c <__assert_fail@plt+0x8574>
   1954c:	ldr	r0, [fp, #-12]
   19550:	mvn	r1, #-2147483648	; 0x80000000
   19554:	sdiv	r0, r1, r0
   19558:	ldr	r1, [fp, #-8]
   1955c:	ldr	r2, [r1]
   19560:	ldr	r1, [r1, #4]
   19564:	subs	r2, r0, r2
   19568:	rscs	r0, r1, r0, asr #31
   1956c:	str	r2, [sp, #204]	; 0xcc
   19570:	str	r0, [sp, #200]	; 0xc8
   19574:	bcs	1959c <__assert_fail@plt+0x8574>
   19578:	b	1957c <__assert_fail@plt+0x8554>
   1957c:	ldr	r0, [fp, #-8]
   19580:	ldr	r0, [r0]
   19584:	ldr	r1, [fp, #-12]
   19588:	mul	r0, r0, r1
   1958c:	asr	r1, r0, #31
   19590:	str	r0, [fp, #-24]	; 0xffffffe8
   19594:	str	r1, [fp, #-20]	; 0xffffffec
   19598:	b	19e44 <__assert_fail@plt+0x8e1c>
   1959c:	ldr	r0, [fp, #-8]
   195a0:	ldr	r0, [r0]
   195a4:	ldr	r1, [fp, #-12]
   195a8:	mul	r0, r0, r1
   195ac:	asr	r1, r0, #31
   195b0:	str	r0, [fp, #-24]	; 0xffffffe8
   195b4:	str	r1, [fp, #-20]	; 0xffffffec
   195b8:	b	19e60 <__assert_fail@plt+0x8e38>
   195bc:	ldr	r0, [fp, #-12]
   195c0:	cmp	r0, #0
   195c4:	bge	1971c <__assert_fail@plt+0x86f4>
   195c8:	mov	r0, #1
   195cc:	cmp	r0, #0
   195d0:	bne	19688 <__assert_fail@plt+0x8660>
   195d4:	b	195d8 <__assert_fail@plt+0x85b0>
   195d8:	b	1960c <__assert_fail@plt+0x85e4>
   195dc:	ldr	r0, [fp, #-8]
   195e0:	ldr	r1, [r0]
   195e4:	ldr	r0, [r0, #4]
   195e8:	ldr	r2, [fp, #-12]
   195ec:	mvn	r3, #0
   195f0:	udiv	r2, r3, r2
   195f4:	subs	r1, r1, r2
   195f8:	sbcs	r0, r0, #0
   195fc:	str	r1, [sp, #196]	; 0xc4
   19600:	str	r0, [sp, #192]	; 0xc0
   19604:	bcc	19800 <__assert_fail@plt+0x87d8>
   19608:	b	19820 <__assert_fail@plt+0x87f8>
   1960c:	b	19610 <__assert_fail@plt+0x85e8>
   19610:	ldr	r0, [pc, #2160]	; 19e88 <__assert_fail@plt+0x8e60>
   19614:	ldr	r1, [fp, #-12]
   19618:	cmp	r1, r0
   1961c:	blt	19634 <__assert_fail@plt+0x860c>
   19620:	b	19640 <__assert_fail@plt+0x8618>
   19624:	ldr	r0, [fp, #-12]
   19628:	movw	r1, #0
   1962c:	cmp	r1, r0
   19630:	bge	19640 <__assert_fail@plt+0x8618>
   19634:	movw	r0, #1
   19638:	str	r0, [sp, #188]	; 0xbc
   1963c:	b	19658 <__assert_fail@plt+0x8630>
   19640:	ldr	r0, [fp, #-12]
   19644:	movw	r1, #0
   19648:	sub	r0, r1, r0
   1964c:	mvn	r1, #0
   19650:	udiv	r0, r1, r0
   19654:	str	r0, [sp, #188]	; 0xbc
   19658:	ldr	r0, [sp, #188]	; 0xbc
   1965c:	ldr	r1, [fp, #-8]
   19660:	ldr	r2, [r1]
   19664:	ldr	r1, [r1, #4]
   19668:	mvn	r1, r1
   1966c:	mvn	r2, r2
   19670:	subs	r0, r2, r0
   19674:	sbcs	r1, r1, #0
   19678:	str	r0, [sp, #184]	; 0xb8
   1967c:	str	r1, [sp, #180]	; 0xb4
   19680:	bcs	19800 <__assert_fail@plt+0x87d8>
   19684:	b	19820 <__assert_fail@plt+0x87f8>
   19688:	b	1968c <__assert_fail@plt+0x8664>
   1968c:	b	196ec <__assert_fail@plt+0x86c4>
   19690:	b	196ec <__assert_fail@plt+0x86c4>
   19694:	ldr	r0, [fp, #-12]
   19698:	cmn	r0, #1
   1969c:	bne	196ec <__assert_fail@plt+0x86c4>
   196a0:	b	196c0 <__assert_fail@plt+0x8698>
   196a4:	ldr	r0, [fp, #-8]
   196a8:	ldr	r1, [r0]
   196ac:	ldr	r0, [r0, #4]
   196b0:	orr	r0, r1, r0
   196b4:	cmp	r0, #0
   196b8:	bne	19800 <__assert_fail@plt+0x87d8>
   196bc:	b	19820 <__assert_fail@plt+0x87f8>
   196c0:	ldr	r0, [fp, #-8]
   196c4:	ldr	r1, [r0]
   196c8:	ldr	r0, [r0, #4]
   196cc:	orr	r0, r1, r0
   196d0:	cmp	r0, #0
   196d4:	beq	19820 <__assert_fail@plt+0x87f8>
   196d8:	b	196dc <__assert_fail@plt+0x86b4>
   196dc:	mov	r0, #0
   196e0:	cmp	r0, #0
   196e4:	bne	19800 <__assert_fail@plt+0x87d8>
   196e8:	b	19820 <__assert_fail@plt+0x87f8>
   196ec:	ldr	r0, [fp, #-12]
   196f0:	mov	r1, #0
   196f4:	sdiv	r0, r1, r0
   196f8:	ldr	r1, [fp, #-8]
   196fc:	ldr	r2, [r1]
   19700:	ldr	r1, [r1, #4]
   19704:	subs	r2, r0, r2
   19708:	rscs	r0, r1, r0, asr #31
   1970c:	str	r2, [sp, #176]	; 0xb0
   19710:	str	r0, [sp, #172]	; 0xac
   19714:	bcc	19800 <__assert_fail@plt+0x87d8>
   19718:	b	19820 <__assert_fail@plt+0x87f8>
   1971c:	ldr	r0, [fp, #-12]
   19720:	cmp	r0, #0
   19724:	bne	1972c <__assert_fail@plt+0x8704>
   19728:	b	19820 <__assert_fail@plt+0x87f8>
   1972c:	mov	r0, #1
   19730:	cmp	r0, #0
   19734:	bne	197d0 <__assert_fail@plt+0x87a8>
   19738:	b	1973c <__assert_fail@plt+0x8714>
   1973c:	b	19744 <__assert_fail@plt+0x871c>
   19740:	b	19748 <__assert_fail@plt+0x8720>
   19744:	b	19798 <__assert_fail@plt+0x8770>
   19748:	ldr	r0, [fp, #-8]
   1974c:	ldr	r1, [r0]
   19750:	ldr	r0, [r0, #4]
   19754:	and	r0, r1, r0
   19758:	cmn	r0, #1
   1975c:	bne	19798 <__assert_fail@plt+0x8770>
   19760:	b	19764 <__assert_fail@plt+0x873c>
   19764:	b	19768 <__assert_fail@plt+0x8740>
   19768:	ldr	r0, [fp, #-12]
   1976c:	add	r0, r0, #0
   19770:	movw	r1, #0
   19774:	cmp	r1, r0
   19778:	blt	19800 <__assert_fail@plt+0x87d8>
   1977c:	b	19820 <__assert_fail@plt+0x87f8>
   19780:	ldr	r0, [fp, #-12]
   19784:	sub	r0, r0, #1
   19788:	mvn	r1, #0
   1978c:	cmp	r1, r0
   19790:	blt	19800 <__assert_fail@plt+0x87d8>
   19794:	b	19820 <__assert_fail@plt+0x87f8>
   19798:	ldr	r0, [fp, #-8]
   1979c:	ldr	r2, [r0]
   197a0:	ldr	r3, [r0, #4]
   197a4:	mov	r0, #0
   197a8:	str	r0, [sp, #168]	; 0xa8
   197ac:	ldr	r1, [sp, #168]	; 0xa8
   197b0:	bl	1c48c <__assert_fail@plt+0xb464>
   197b4:	ldr	r2, [fp, #-12]
   197b8:	subs	r0, r0, r2
   197bc:	sbcs	r1, r1, r2, asr #31
   197c0:	str	r0, [sp, #164]	; 0xa4
   197c4:	str	r1, [sp, #160]	; 0xa0
   197c8:	bcc	19800 <__assert_fail@plt+0x87d8>
   197cc:	b	19820 <__assert_fail@plt+0x87f8>
   197d0:	ldr	r0, [fp, #-12]
   197d4:	mvn	r1, #0
   197d8:	udiv	r0, r1, r0
   197dc:	ldr	r1, [fp, #-8]
   197e0:	ldr	r2, [r1]
   197e4:	ldr	r1, [r1, #4]
   197e8:	subs	r0, r0, r2
   197ec:	rscs	r1, r1, #0
   197f0:	str	r0, [sp, #156]	; 0x9c
   197f4:	str	r1, [sp, #152]	; 0x98
   197f8:	bcs	19820 <__assert_fail@plt+0x87f8>
   197fc:	b	19800 <__assert_fail@plt+0x87d8>
   19800:	ldr	r0, [fp, #-8]
   19804:	ldr	r0, [r0]
   19808:	ldr	r1, [fp, #-12]
   1980c:	mul	r0, r0, r1
   19810:	mov	r1, #0
   19814:	str	r1, [fp, #-20]	; 0xffffffec
   19818:	str	r0, [fp, #-24]	; 0xffffffe8
   1981c:	b	19e44 <__assert_fail@plt+0x8e1c>
   19820:	ldr	r0, [fp, #-8]
   19824:	ldr	r0, [r0]
   19828:	ldr	r1, [fp, #-12]
   1982c:	mul	r0, r0, r1
   19830:	mov	r1, #0
   19834:	str	r1, [fp, #-20]	; 0xffffffec
   19838:	str	r0, [fp, #-24]	; 0xffffffe8
   1983c:	b	19e60 <__assert_fail@plt+0x8e38>
   19840:	b	19b5c <__assert_fail@plt+0x8b34>
   19844:	ldr	r0, [fp, #-12]
   19848:	cmp	r0, #0
   1984c:	bge	19a10 <__assert_fail@plt+0x89e8>
   19850:	mov	r0, #1
   19854:	cmp	r0, #0
   19858:	bne	19958 <__assert_fail@plt+0x8930>
   1985c:	b	19860 <__assert_fail@plt+0x8838>
   19860:	b	19864 <__assert_fail@plt+0x883c>
   19864:	ldr	r0, [fp, #-8]
   19868:	ldr	r1, [r0]
   1986c:	ldr	r0, [r0, #4]
   19870:	ldr	r2, [fp, #-12]
   19874:	asr	r3, r2, #31
   19878:	mvn	ip, #0
   1987c:	mvn	lr, #-2147483648	; 0x80000000
   19880:	str	r0, [sp, #148]	; 0x94
   19884:	mov	r0, ip
   19888:	str	r1, [sp, #144]	; 0x90
   1988c:	mov	r1, lr
   19890:	bl	1c3b8 <__assert_fail@plt+0xb390>
   19894:	ldr	r2, [sp, #144]	; 0x90
   19898:	subs	r0, r2, r0
   1989c:	ldr	r2, [sp, #148]	; 0x94
   198a0:	sbcs	r1, r2, r1
   198a4:	str	r0, [sp, #140]	; 0x8c
   198a8:	str	r1, [sp, #136]	; 0x88
   198ac:	bcc	19b04 <__assert_fail@plt+0x8adc>
   198b0:	b	19b30 <__assert_fail@plt+0x8b08>
   198b4:	b	198b8 <__assert_fail@plt+0x8890>
   198b8:	ldr	r0, [pc, #1480]	; 19e88 <__assert_fail@plt+0x8e60>
   198bc:	ldr	r1, [fp, #-12]
   198c0:	cmp	r1, r0
   198c4:	blt	198dc <__assert_fail@plt+0x88b4>
   198c8:	b	198f0 <__assert_fail@plt+0x88c8>
   198cc:	ldr	r0, [fp, #-12]
   198d0:	movw	r1, #0
   198d4:	cmp	r1, r0
   198d8:	bge	198f0 <__assert_fail@plt+0x88c8>
   198dc:	mov	r0, #0
   198e0:	mvn	r1, #0
   198e4:	str	r1, [sp, #132]	; 0x84
   198e8:	str	r0, [sp, #128]	; 0x80
   198ec:	b	19924 <__assert_fail@plt+0x88fc>
   198f0:	ldr	r0, [fp, #-12]
   198f4:	rsb	r0, r0, #0
   198f8:	asr	r3, r0, #31
   198fc:	mvn	r1, #0
   19900:	mvn	r2, #-2147483648	; 0x80000000
   19904:	str	r0, [sp, #124]	; 0x7c
   19908:	mov	r0, r1
   1990c:	mov	r1, r2
   19910:	ldr	r2, [sp, #124]	; 0x7c
   19914:	bl	1c3b8 <__assert_fail@plt+0xb390>
   19918:	str	r0, [sp, #132]	; 0x84
   1991c:	str	r1, [sp, #128]	; 0x80
   19920:	b	19924 <__assert_fail@plt+0x88fc>
   19924:	ldr	r0, [sp, #128]	; 0x80
   19928:	ldr	r1, [sp, #132]	; 0x84
   1992c:	ldr	r2, [fp, #-8]
   19930:	ldr	r3, [r2]
   19934:	ldr	r2, [r2, #4]
   19938:	mvn	r2, r2
   1993c:	mvn	r3, r3
   19940:	subs	r1, r3, r1
   19944:	sbcs	r0, r2, r0
   19948:	str	r1, [sp, #120]	; 0x78
   1994c:	str	r0, [sp, #116]	; 0x74
   19950:	bcs	19b04 <__assert_fail@plt+0x8adc>
   19954:	b	19b30 <__assert_fail@plt+0x8b08>
   19958:	ldr	r0, [fp, #-12]
   1995c:	cmn	r0, #1
   19960:	bne	199c8 <__assert_fail@plt+0x89a0>
   19964:	b	19988 <__assert_fail@plt+0x8960>
   19968:	ldr	r0, [fp, #-8]
   1996c:	ldr	r1, [r0]
   19970:	ldr	r0, [r0, #4]
   19974:	eor	r0, r0, #-2147483648	; 0x80000000
   19978:	orr	r0, r1, r0
   1997c:	cmp	r0, #0
   19980:	bne	19b04 <__assert_fail@plt+0x8adc>
   19984:	b	19b30 <__assert_fail@plt+0x8b08>
   19988:	ldr	r0, [fp, #-8]
   1998c:	ldr	r1, [r0]
   19990:	ldr	r0, [r0, #4]
   19994:	orr	r0, r1, r0
   19998:	cmp	r0, #0
   1999c:	beq	19b30 <__assert_fail@plt+0x8b08>
   199a0:	b	199a4 <__assert_fail@plt+0x897c>
   199a4:	ldr	r0, [fp, #-8]
   199a8:	ldr	r1, [r0]
   199ac:	ldr	r0, [r0, #4]
   199b0:	subs	r1, r1, #1
   199b4:	sbc	r0, r0, #0
   199b8:	cmp	r0, #0
   199bc:	str	r1, [sp, #112]	; 0x70
   199c0:	blt	19b04 <__assert_fail@plt+0x8adc>
   199c4:	b	19b30 <__assert_fail@plt+0x8b08>
   199c8:	ldr	r0, [fp, #-12]
   199cc:	asr	r3, r0, #31
   199d0:	mov	r1, #0
   199d4:	mov	r2, #-2147483648	; 0x80000000
   199d8:	str	r0, [sp, #108]	; 0x6c
   199dc:	mov	r0, r1
   199e0:	mov	r1, r2
   199e4:	ldr	r2, [sp, #108]	; 0x6c
   199e8:	bl	1c3b8 <__assert_fail@plt+0xb390>
   199ec:	ldr	r2, [fp, #-8]
   199f0:	ldr	r3, [r2]
   199f4:	ldr	r2, [r2, #4]
   199f8:	subs	r0, r0, r3
   199fc:	sbcs	r1, r1, r2
   19a00:	str	r0, [sp, #104]	; 0x68
   19a04:	str	r1, [sp, #100]	; 0x64
   19a08:	bcc	19b04 <__assert_fail@plt+0x8adc>
   19a0c:	b	19b30 <__assert_fail@plt+0x8b08>
   19a10:	ldr	r0, [fp, #-12]
   19a14:	cmp	r0, #0
   19a18:	bne	19a20 <__assert_fail@plt+0x89f8>
   19a1c:	b	19b30 <__assert_fail@plt+0x8b08>
   19a20:	mov	r0, #1
   19a24:	cmp	r0, #0
   19a28:	bne	19abc <__assert_fail@plt+0x8a94>
   19a2c:	b	19a30 <__assert_fail@plt+0x8a08>
   19a30:	ldr	r0, [fp, #-8]
   19a34:	ldr	r1, [r0]
   19a38:	ldr	r0, [r0, #4]
   19a3c:	and	r0, r1, r0
   19a40:	cmn	r0, #1
   19a44:	bne	19a88 <__assert_fail@plt+0x8a60>
   19a48:	b	19a4c <__assert_fail@plt+0x8a24>
   19a4c:	b	19a50 <__assert_fail@plt+0x8a28>
   19a50:	ldr	r0, [fp, #-12]
   19a54:	mov	r1, #-2147483648	; 0x80000000
   19a58:	add	r1, r1, r0, asr #31
   19a5c:	rsbs	r0, r0, #0
   19a60:	rscs	r1, r1, #0
   19a64:	str	r0, [sp, #96]	; 0x60
   19a68:	str	r1, [sp, #92]	; 0x5c
   19a6c:	blt	19b04 <__assert_fail@plt+0x8adc>
   19a70:	b	19b30 <__assert_fail@plt+0x8b08>
   19a74:	mov	r0, #0
   19a78:	cmp	r0, #0
   19a7c:	bne	19b04 <__assert_fail@plt+0x8adc>
   19a80:	b	19b30 <__assert_fail@plt+0x8b08>
   19a84:			; <UNDEFINED> instruction: 0xffff8000
   19a88:	ldr	r0, [fp, #-8]
   19a8c:	ldr	r2, [r0]
   19a90:	ldr	r3, [r0, #4]
   19a94:	mov	r0, #0
   19a98:	mov	r1, #-2147483648	; 0x80000000
   19a9c:	bl	1c48c <__assert_fail@plt+0xb464>
   19aa0:	ldr	r2, [fp, #-12]
   19aa4:	subs	r0, r0, r2
   19aa8:	sbcs	r1, r1, r2, asr #31
   19aac:	str	r0, [sp, #88]	; 0x58
   19ab0:	str	r1, [sp, #84]	; 0x54
   19ab4:	bcc	19b04 <__assert_fail@plt+0x8adc>
   19ab8:	b	19b30 <__assert_fail@plt+0x8b08>
   19abc:	ldr	r0, [fp, #-12]
   19ac0:	asr	r3, r0, #31
   19ac4:	mvn	r1, #0
   19ac8:	mvn	r2, #-2147483648	; 0x80000000
   19acc:	str	r0, [sp, #80]	; 0x50
   19ad0:	mov	r0, r1
   19ad4:	mov	r1, r2
   19ad8:	ldr	r2, [sp, #80]	; 0x50
   19adc:	bl	1c3b8 <__assert_fail@plt+0xb390>
   19ae0:	ldr	r2, [fp, #-8]
   19ae4:	ldr	r3, [r2]
   19ae8:	ldr	r2, [r2, #4]
   19aec:	subs	r0, r0, r3
   19af0:	sbcs	r1, r1, r2
   19af4:	str	r0, [sp, #76]	; 0x4c
   19af8:	str	r1, [sp, #72]	; 0x48
   19afc:	bcs	19b30 <__assert_fail@plt+0x8b08>
   19b00:	b	19b04 <__assert_fail@plt+0x8adc>
   19b04:	ldr	r0, [fp, #-8]
   19b08:	ldr	r1, [r0]
   19b0c:	ldr	r0, [r0, #4]
   19b10:	ldr	r2, [fp, #-12]
   19b14:	asr	r3, r2, #31
   19b18:	umull	ip, lr, r1, r2
   19b1c:	mla	r1, r1, r3, lr
   19b20:	mla	r0, r0, r2, r1
   19b24:	str	ip, [fp, #-24]	; 0xffffffe8
   19b28:	str	r0, [fp, #-20]	; 0xffffffec
   19b2c:	b	19e44 <__assert_fail@plt+0x8e1c>
   19b30:	ldr	r0, [fp, #-8]
   19b34:	ldr	r1, [r0]
   19b38:	ldr	r0, [r0, #4]
   19b3c:	ldr	r2, [fp, #-12]
   19b40:	asr	r3, r2, #31
   19b44:	umull	ip, lr, r1, r2
   19b48:	mla	r1, r1, r3, lr
   19b4c:	mla	r0, r0, r2, r1
   19b50:	str	ip, [fp, #-24]	; 0xffffffe8
   19b54:	str	r0, [fp, #-20]	; 0xffffffec
   19b58:	b	19e60 <__assert_fail@plt+0x8e38>
   19b5c:	ldr	r0, [fp, #-12]
   19b60:	cmp	r0, #0
   19b64:	bge	19cf8 <__assert_fail@plt+0x8cd0>
   19b68:	mov	r0, #1
   19b6c:	cmp	r0, #0
   19b70:	bne	19c64 <__assert_fail@plt+0x8c3c>
   19b74:	b	19b78 <__assert_fail@plt+0x8b50>
   19b78:	b	19bc8 <__assert_fail@plt+0x8ba0>
   19b7c:	ldr	r0, [fp, #-8]
   19b80:	ldr	r1, [r0]
   19b84:	ldr	r0, [r0, #4]
   19b88:	ldr	r2, [fp, #-12]
   19b8c:	asr	r3, r2, #31
   19b90:	mvn	ip, #0
   19b94:	str	r0, [sp, #68]	; 0x44
   19b98:	mov	r0, ip
   19b9c:	str	r1, [sp, #64]	; 0x40
   19ba0:	mov	r1, ip
   19ba4:	bl	1c48c <__assert_fail@plt+0xb464>
   19ba8:	ldr	r2, [sp, #64]	; 0x40
   19bac:	subs	r0, r2, r0
   19bb0:	ldr	r2, [sp, #68]	; 0x44
   19bb4:	sbcs	r1, r2, r1
   19bb8:	str	r0, [sp, #60]	; 0x3c
   19bbc:	str	r1, [sp, #56]	; 0x38
   19bc0:	bcc	19dec <__assert_fail@plt+0x8dc4>
   19bc4:	b	19e18 <__assert_fail@plt+0x8df0>
   19bc8:	b	19bcc <__assert_fail@plt+0x8ba4>
   19bcc:	ldr	r0, [pc, #692]	; 19e88 <__assert_fail@plt+0x8e60>
   19bd0:	ldr	r1, [fp, #-12]
   19bd4:	cmp	r1, r0
   19bd8:	blt	19bf0 <__assert_fail@plt+0x8bc8>
   19bdc:	b	19c04 <__assert_fail@plt+0x8bdc>
   19be0:	ldr	r0, [fp, #-12]
   19be4:	movw	r1, #0
   19be8:	cmp	r1, r0
   19bec:	bge	19c04 <__assert_fail@plt+0x8bdc>
   19bf0:	mov	r0, #1
   19bf4:	mvn	r1, #0
   19bf8:	str	r1, [sp, #52]	; 0x34
   19bfc:	str	r0, [sp, #48]	; 0x30
   19c00:	b	19c30 <__assert_fail@plt+0x8c08>
   19c04:	ldr	r0, [fp, #-12]
   19c08:	rsb	r0, r0, #0
   19c0c:	asr	r3, r0, #31
   19c10:	mvn	r1, #0
   19c14:	str	r0, [sp, #44]	; 0x2c
   19c18:	mov	r0, r1
   19c1c:	ldr	r2, [sp, #44]	; 0x2c
   19c20:	bl	1c48c <__assert_fail@plt+0xb464>
   19c24:	str	r0, [sp, #52]	; 0x34
   19c28:	str	r1, [sp, #48]	; 0x30
   19c2c:	b	19c30 <__assert_fail@plt+0x8c08>
   19c30:	ldr	r0, [sp, #48]	; 0x30
   19c34:	ldr	r1, [sp, #52]	; 0x34
   19c38:	ldr	r2, [fp, #-8]
   19c3c:	ldr	r3, [r2]
   19c40:	ldr	r2, [r2, #4]
   19c44:	mvn	r2, r2
   19c48:	mvn	r3, r3
   19c4c:	subs	r1, r3, r1
   19c50:	sbcs	r0, r2, r0
   19c54:	str	r1, [sp, #40]	; 0x28
   19c58:	str	r0, [sp, #36]	; 0x24
   19c5c:	bcs	19dec <__assert_fail@plt+0x8dc4>
   19c60:	b	19e18 <__assert_fail@plt+0x8df0>
   19c64:	b	19c68 <__assert_fail@plt+0x8c40>
   19c68:	b	19cc8 <__assert_fail@plt+0x8ca0>
   19c6c:	b	19cc8 <__assert_fail@plt+0x8ca0>
   19c70:	ldr	r0, [fp, #-12]
   19c74:	cmn	r0, #1
   19c78:	bne	19cc8 <__assert_fail@plt+0x8ca0>
   19c7c:	b	19c9c <__assert_fail@plt+0x8c74>
   19c80:	ldr	r0, [fp, #-8]
   19c84:	ldr	r1, [r0]
   19c88:	ldr	r0, [r0, #4]
   19c8c:	orr	r0, r1, r0
   19c90:	cmp	r0, #0
   19c94:	bne	19dec <__assert_fail@plt+0x8dc4>
   19c98:	b	19e18 <__assert_fail@plt+0x8df0>
   19c9c:	ldr	r0, [fp, #-8]
   19ca0:	ldr	r1, [r0]
   19ca4:	ldr	r0, [r0, #4]
   19ca8:	orr	r0, r1, r0
   19cac:	cmp	r0, #0
   19cb0:	beq	19e18 <__assert_fail@plt+0x8df0>
   19cb4:	b	19cb8 <__assert_fail@plt+0x8c90>
   19cb8:	mov	r0, #0
   19cbc:	cmp	r0, #0
   19cc0:	bne	19dec <__assert_fail@plt+0x8dc4>
   19cc4:	b	19e18 <__assert_fail@plt+0x8df0>
   19cc8:	ldr	r0, [fp, #-12]
   19ccc:	mov	r1, #0
   19cd0:	sdiv	r0, r1, r0
   19cd4:	ldr	r1, [fp, #-8]
   19cd8:	ldr	r2, [r1]
   19cdc:	ldr	r1, [r1, #4]
   19ce0:	subs	r2, r0, r2
   19ce4:	rscs	r0, r1, r0, asr #31
   19ce8:	str	r2, [sp, #32]
   19cec:	str	r0, [sp, #28]
   19cf0:	bcc	19dec <__assert_fail@plt+0x8dc4>
   19cf4:	b	19e18 <__assert_fail@plt+0x8df0>
   19cf8:	ldr	r0, [fp, #-12]
   19cfc:	cmp	r0, #0
   19d00:	bne	19d08 <__assert_fail@plt+0x8ce0>
   19d04:	b	19e18 <__assert_fail@plt+0x8df0>
   19d08:	mov	r0, #1
   19d0c:	cmp	r0, #0
   19d10:	bne	19dac <__assert_fail@plt+0x8d84>
   19d14:	b	19d18 <__assert_fail@plt+0x8cf0>
   19d18:	b	19d20 <__assert_fail@plt+0x8cf8>
   19d1c:	b	19d24 <__assert_fail@plt+0x8cfc>
   19d20:	b	19d74 <__assert_fail@plt+0x8d4c>
   19d24:	ldr	r0, [fp, #-8]
   19d28:	ldr	r1, [r0]
   19d2c:	ldr	r0, [r0, #4]
   19d30:	and	r0, r1, r0
   19d34:	cmn	r0, #1
   19d38:	bne	19d74 <__assert_fail@plt+0x8d4c>
   19d3c:	b	19d40 <__assert_fail@plt+0x8d18>
   19d40:	b	19d44 <__assert_fail@plt+0x8d1c>
   19d44:	ldr	r0, [fp, #-12]
   19d48:	add	r0, r0, #0
   19d4c:	movw	r1, #0
   19d50:	cmp	r1, r0
   19d54:	blt	19dec <__assert_fail@plt+0x8dc4>
   19d58:	b	19e18 <__assert_fail@plt+0x8df0>
   19d5c:	ldr	r0, [fp, #-12]
   19d60:	sub	r0, r0, #1
   19d64:	mvn	r1, #0
   19d68:	cmp	r1, r0
   19d6c:	blt	19dec <__assert_fail@plt+0x8dc4>
   19d70:	b	19e18 <__assert_fail@plt+0x8df0>
   19d74:	ldr	r0, [fp, #-8]
   19d78:	ldr	r2, [r0]
   19d7c:	ldr	r3, [r0, #4]
   19d80:	mov	r0, #0
   19d84:	str	r0, [sp, #24]
   19d88:	ldr	r1, [sp, #24]
   19d8c:	bl	1c48c <__assert_fail@plt+0xb464>
   19d90:	ldr	r2, [fp, #-12]
   19d94:	subs	r0, r0, r2
   19d98:	sbcs	r1, r1, r2, asr #31
   19d9c:	str	r0, [sp, #20]
   19da0:	str	r1, [sp, #16]
   19da4:	bcc	19dec <__assert_fail@plt+0x8dc4>
   19da8:	b	19e18 <__assert_fail@plt+0x8df0>
   19dac:	ldr	r0, [fp, #-12]
   19db0:	asr	r3, r0, #31
   19db4:	mvn	r1, #0
   19db8:	str	r0, [sp, #12]
   19dbc:	mov	r0, r1
   19dc0:	ldr	r2, [sp, #12]
   19dc4:	bl	1c48c <__assert_fail@plt+0xb464>
   19dc8:	ldr	r2, [fp, #-8]
   19dcc:	ldr	r3, [r2]
   19dd0:	ldr	r2, [r2, #4]
   19dd4:	subs	r0, r0, r3
   19dd8:	sbcs	r1, r1, r2
   19ddc:	str	r0, [sp, #8]
   19de0:	str	r1, [sp, #4]
   19de4:	bcs	19e18 <__assert_fail@plt+0x8df0>
   19de8:	b	19dec <__assert_fail@plt+0x8dc4>
   19dec:	ldr	r0, [fp, #-8]
   19df0:	ldr	r1, [r0]
   19df4:	ldr	r0, [r0, #4]
   19df8:	ldr	r2, [fp, #-12]
   19dfc:	asr	r3, r2, #31
   19e00:	umull	ip, lr, r1, r2
   19e04:	mla	r1, r1, r3, lr
   19e08:	mla	r0, r0, r2, r1
   19e0c:	str	ip, [fp, #-24]	; 0xffffffe8
   19e10:	str	r0, [fp, #-20]	; 0xffffffec
   19e14:	b	19e44 <__assert_fail@plt+0x8e1c>
   19e18:	ldr	r0, [fp, #-8]
   19e1c:	ldr	r1, [r0]
   19e20:	ldr	r0, [r0, #4]
   19e24:	ldr	r2, [fp, #-12]
   19e28:	asr	r3, r2, #31
   19e2c:	umull	ip, lr, r1, r2
   19e30:	mla	r1, r1, r3, lr
   19e34:	mla	r0, r0, r2, r1
   19e38:	str	ip, [fp, #-24]	; 0xffffffe8
   19e3c:	str	r0, [fp, #-20]	; 0xffffffec
   19e40:	b	19e60 <__assert_fail@plt+0x8e38>
   19e44:	ldr	r0, [fp, #-8]
   19e48:	mvn	r1, #0
   19e4c:	str	r1, [r0, #4]
   19e50:	str	r1, [r0]
   19e54:	movw	r0, #1
   19e58:	str	r0, [fp, #-4]
   19e5c:	b	19e7c <__assert_fail@plt+0x8e54>
   19e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e64:	ldr	r1, [fp, #-20]	; 0xffffffec
   19e68:	ldr	r2, [fp, #-8]
   19e6c:	str	r1, [r2, #4]
   19e70:	str	r0, [r2]
   19e74:	movw	r0, #0
   19e78:	str	r0, [fp, #-4]
   19e7c:	ldr	r0, [fp, #-4]
   19e80:	mov	sp, fp
   19e84:	pop	{fp, pc}
   19e88:	andhi	r0, r0, r1
   19e8c:	svcvc	0x00ffffff
   19e90:	push	{fp, lr}
   19e94:	mov	fp, sp
   19e98:	sub	sp, sp, #16
   19e9c:	str	r0, [fp, #-4]
   19ea0:	str	r1, [sp, #8]
   19ea4:	str	r2, [sp, #4]
   19ea8:	movw	r0, #0
   19eac:	str	r0, [sp]
   19eb0:	ldr	r0, [sp, #4]
   19eb4:	mvn	r1, #0
   19eb8:	add	r1, r0, r1
   19ebc:	str	r1, [sp, #4]
   19ec0:	cmp	r0, #0
   19ec4:	beq	19ee4 <__assert_fail@plt+0x8ebc>
   19ec8:	ldr	r0, [fp, #-4]
   19ecc:	ldr	r1, [sp, #8]
   19ed0:	bl	18388 <__assert_fail@plt+0x7360>
   19ed4:	ldr	r1, [sp]
   19ed8:	orr	r0, r1, r0
   19edc:	str	r0, [sp]
   19ee0:	b	19eb0 <__assert_fail@plt+0x8e88>
   19ee4:	ldr	r0, [sp]
   19ee8:	mov	sp, fp
   19eec:	pop	{fp, pc}
   19ef0:	push	{fp, lr}
   19ef4:	mov	fp, sp
   19ef8:	sub	sp, sp, #16
   19efc:	str	r0, [sp, #8]
   19f00:	str	r1, [sp, #4]
   19f04:	ldr	r0, [sp, #8]
   19f08:	cmp	r0, #0
   19f0c:	beq	19f1c <__assert_fail@plt+0x8ef4>
   19f10:	ldr	r0, [sp, #4]
   19f14:	cmp	r0, #0
   19f18:	bne	19f28 <__assert_fail@plt+0x8f00>
   19f1c:	movw	r0, #1
   19f20:	str	r0, [sp, #4]
   19f24:	str	r0, [sp, #8]
   19f28:	ldr	r0, [sp, #4]
   19f2c:	cmp	r0, #0
   19f30:	beq	19f64 <__assert_fail@plt+0x8f3c>
   19f34:	ldr	r0, [pc, #76]	; 19f88 <__assert_fail@plt+0x8f60>
   19f38:	ldr	r1, [sp, #4]
   19f3c:	udiv	r0, r0, r1
   19f40:	ldr	r1, [sp, #8]
   19f44:	cmp	r0, r1
   19f48:	bcs	19f64 <__assert_fail@plt+0x8f3c>
   19f4c:	bl	10f74 <__errno_location@plt>
   19f50:	movw	lr, #12
   19f54:	str	lr, [r0]
   19f58:	movw	r0, #0
   19f5c:	str	r0, [fp, #-4]
   19f60:	b	19f7c <__assert_fail@plt+0x8f54>
   19f64:	ldr	r0, [sp, #8]
   19f68:	ldr	r1, [sp, #4]
   19f6c:	bl	10dd0 <calloc@plt>
   19f70:	str	r0, [sp]
   19f74:	ldr	r0, [sp]
   19f78:	str	r0, [fp, #-4]
   19f7c:	ldr	r0, [fp, #-4]
   19f80:	mov	sp, fp
   19f84:	pop	{fp, pc}
   19f88:	svcvc	0x00ffffff
   19f8c:	push	{fp, lr}
   19f90:	mov	fp, sp
   19f94:	sub	sp, sp, #16
   19f98:	str	r0, [sp, #8]
   19f9c:	ldr	r0, [sp, #8]
   19fa0:	cmp	r0, #0
   19fa4:	bne	19fb0 <__assert_fail@plt+0x8f88>
   19fa8:	movw	r0, #1
   19fac:	str	r0, [sp, #8]
   19fb0:	ldr	r0, [pc, #64]	; 19ff8 <__assert_fail@plt+0x8fd0>
   19fb4:	ldr	r1, [sp, #8]
   19fb8:	cmp	r0, r1
   19fbc:	bcs	19fd8 <__assert_fail@plt+0x8fb0>
   19fc0:	bl	10f74 <__errno_location@plt>
   19fc4:	movw	lr, #12
   19fc8:	str	lr, [r0]
   19fcc:	movw	r0, #0
   19fd0:	str	r0, [fp, #-4]
   19fd4:	b	19fec <__assert_fail@plt+0x8fc4>
   19fd8:	ldr	r0, [sp, #8]
   19fdc:	bl	10ee4 <malloc@plt>
   19fe0:	str	r0, [sp, #4]
   19fe4:	ldr	r0, [sp, #4]
   19fe8:	str	r0, [fp, #-4]
   19fec:	ldr	r0, [fp, #-4]
   19ff0:	mov	sp, fp
   19ff4:	pop	{fp, pc}
   19ff8:	svcvc	0x00ffffff
   19ffc:	push	{fp, lr}
   1a000:	mov	fp, sp
   1a004:	sub	sp, sp, #16
   1a008:	str	r0, [sp, #8]
   1a00c:	str	r1, [sp, #4]
   1a010:	ldr	r0, [sp, #8]
   1a014:	movw	r1, #0
   1a018:	cmp	r0, r1
   1a01c:	bne	1a030 <__assert_fail@plt+0x9008>
   1a020:	ldr	r0, [sp, #4]
   1a024:	bl	19f8c <__assert_fail@plt+0x8f64>
   1a028:	str	r0, [fp, #-4]
   1a02c:	b	1a090 <__assert_fail@plt+0x9068>
   1a030:	ldr	r0, [sp, #4]
   1a034:	cmp	r0, #0
   1a038:	bne	1a050 <__assert_fail@plt+0x9028>
   1a03c:	ldr	r0, [sp, #8]
   1a040:	bl	1aa04 <__assert_fail@plt+0x99dc>
   1a044:	movw	r0, #0
   1a048:	str	r0, [fp, #-4]
   1a04c:	b	1a090 <__assert_fail@plt+0x9068>
   1a050:	ldr	r0, [pc, #68]	; 1a09c <__assert_fail@plt+0x9074>
   1a054:	ldr	r1, [sp, #4]
   1a058:	cmp	r0, r1
   1a05c:	bcs	1a078 <__assert_fail@plt+0x9050>
   1a060:	bl	10f74 <__errno_location@plt>
   1a064:	movw	lr, #12
   1a068:	str	lr, [r0]
   1a06c:	movw	r0, #0
   1a070:	str	r0, [fp, #-4]
   1a074:	b	1a090 <__assert_fail@plt+0x9068>
   1a078:	ldr	r0, [sp, #8]
   1a07c:	ldr	r1, [sp, #4]
   1a080:	bl	10e6c <realloc@plt>
   1a084:	str	r0, [sp]
   1a088:	ldr	r0, [sp]
   1a08c:	str	r0, [fp, #-4]
   1a090:	ldr	r0, [fp, #-4]
   1a094:	mov	sp, fp
   1a098:	pop	{fp, pc}
   1a09c:	svcvc	0x00ffffff
   1a0a0:	sub	sp, sp, #12
   1a0a4:	str	r0, [sp, #4]
   1a0a8:	ldr	r0, [sp, #4]
   1a0ac:	sub	r1, r0, #48	; 0x30
   1a0b0:	cmp	r1, #10
   1a0b4:	str	r0, [sp]
   1a0b8:	bcc	1a0e8 <__assert_fail@plt+0x90c0>
   1a0bc:	b	1a0c0 <__assert_fail@plt+0x9098>
   1a0c0:	ldr	r0, [sp]
   1a0c4:	sub	r1, r0, #65	; 0x41
   1a0c8:	cmp	r1, #26
   1a0cc:	bcc	1a0e8 <__assert_fail@plt+0x90c0>
   1a0d0:	b	1a0d4 <__assert_fail@plt+0x90ac>
   1a0d4:	ldr	r0, [sp]
   1a0d8:	sub	r1, r0, #97	; 0x61
   1a0dc:	cmp	r1, #25
   1a0e0:	bhi	1a0f8 <__assert_fail@plt+0x90d0>
   1a0e4:	b	1a0e8 <__assert_fail@plt+0x90c0>
   1a0e8:	movw	r0, #1
   1a0ec:	and	r0, r0, #1
   1a0f0:	strb	r0, [sp, #11]
   1a0f4:	b	1a104 <__assert_fail@plt+0x90dc>
   1a0f8:	movw	r0, #0
   1a0fc:	and	r0, r0, #1
   1a100:	strb	r0, [sp, #11]
   1a104:	ldrb	r0, [sp, #11]
   1a108:	and	r0, r0, #1
   1a10c:	add	sp, sp, #12
   1a110:	bx	lr
   1a114:	sub	sp, sp, #12
   1a118:	str	r0, [sp, #4]
   1a11c:	ldr	r0, [sp, #4]
   1a120:	sub	r1, r0, #65	; 0x41
   1a124:	cmp	r1, #26
   1a128:	str	r0, [sp]
   1a12c:	bcc	1a148 <__assert_fail@plt+0x9120>
   1a130:	b	1a134 <__assert_fail@plt+0x910c>
   1a134:	ldr	r0, [sp]
   1a138:	sub	r1, r0, #97	; 0x61
   1a13c:	cmp	r1, #25
   1a140:	bhi	1a158 <__assert_fail@plt+0x9130>
   1a144:	b	1a148 <__assert_fail@plt+0x9120>
   1a148:	movw	r0, #1
   1a14c:	and	r0, r0, #1
   1a150:	strb	r0, [sp, #11]
   1a154:	b	1a164 <__assert_fail@plt+0x913c>
   1a158:	movw	r0, #0
   1a15c:	and	r0, r0, #1
   1a160:	strb	r0, [sp, #11]
   1a164:	ldrb	r0, [sp, #11]
   1a168:	and	r0, r0, #1
   1a16c:	add	sp, sp, #12
   1a170:	bx	lr
   1a174:	sub	sp, sp, #8
   1a178:	str	r0, [sp]
   1a17c:	ldr	r0, [sp]
   1a180:	cmp	r0, #127	; 0x7f
   1a184:	bhi	1a19c <__assert_fail@plt+0x9174>
   1a188:	b	1a18c <__assert_fail@plt+0x9164>
   1a18c:	movw	r0, #1
   1a190:	and	r0, r0, #1
   1a194:	strb	r0, [sp, #7]
   1a198:	b	1a1a8 <__assert_fail@plt+0x9180>
   1a19c:	movw	r0, #0
   1a1a0:	and	r0, r0, #1
   1a1a4:	strb	r0, [sp, #7]
   1a1a8:	ldrb	r0, [sp, #7]
   1a1ac:	and	r0, r0, #1
   1a1b0:	add	sp, sp, #8
   1a1b4:	bx	lr
   1a1b8:	sub	sp, sp, #8
   1a1bc:	str	r0, [sp, #4]
   1a1c0:	ldr	r0, [sp, #4]
   1a1c4:	cmp	r0, #32
   1a1c8:	movw	r0, #1
   1a1cc:	str	r0, [sp]
   1a1d0:	beq	1a1e8 <__assert_fail@plt+0x91c0>
   1a1d4:	ldr	r0, [sp, #4]
   1a1d8:	cmp	r0, #9
   1a1dc:	movw	r0, #0
   1a1e0:	moveq	r0, #1
   1a1e4:	str	r0, [sp]
   1a1e8:	ldr	r0, [sp]
   1a1ec:	and	r0, r0, #1
   1a1f0:	add	sp, sp, #8
   1a1f4:	bx	lr
   1a1f8:	sub	sp, sp, #12
   1a1fc:	str	r0, [sp, #4]
   1a200:	ldr	r0, [sp, #4]
   1a204:	cmp	r0, #32
   1a208:	str	r0, [sp]
   1a20c:	bcc	1a224 <__assert_fail@plt+0x91fc>
   1a210:	b	1a214 <__assert_fail@plt+0x91ec>
   1a214:	ldr	r0, [sp]
   1a218:	cmp	r0, #127	; 0x7f
   1a21c:	bne	1a234 <__assert_fail@plt+0x920c>
   1a220:	b	1a224 <__assert_fail@plt+0x91fc>
   1a224:	movw	r0, #1
   1a228:	and	r0, r0, #1
   1a22c:	strb	r0, [sp, #11]
   1a230:	b	1a240 <__assert_fail@plt+0x9218>
   1a234:	movw	r0, #0
   1a238:	and	r0, r0, #1
   1a23c:	strb	r0, [sp, #11]
   1a240:	ldrb	r0, [sp, #11]
   1a244:	and	r0, r0, #1
   1a248:	add	sp, sp, #12
   1a24c:	bx	lr
   1a250:	sub	sp, sp, #8
   1a254:	str	r0, [sp]
   1a258:	ldr	r0, [sp]
   1a25c:	sub	r0, r0, #48	; 0x30
   1a260:	cmp	r0, #9
   1a264:	bhi	1a27c <__assert_fail@plt+0x9254>
   1a268:	b	1a26c <__assert_fail@plt+0x9244>
   1a26c:	movw	r0, #1
   1a270:	and	r0, r0, #1
   1a274:	strb	r0, [sp, #7]
   1a278:	b	1a288 <__assert_fail@plt+0x9260>
   1a27c:	movw	r0, #0
   1a280:	and	r0, r0, #1
   1a284:	strb	r0, [sp, #7]
   1a288:	ldrb	r0, [sp, #7]
   1a28c:	and	r0, r0, #1
   1a290:	add	sp, sp, #8
   1a294:	bx	lr
   1a298:	sub	sp, sp, #8
   1a29c:	str	r0, [sp]
   1a2a0:	ldr	r0, [sp]
   1a2a4:	sub	r0, r0, #33	; 0x21
   1a2a8:	cmp	r0, #93	; 0x5d
   1a2ac:	bhi	1a2c4 <__assert_fail@plt+0x929c>
   1a2b0:	b	1a2b4 <__assert_fail@plt+0x928c>
   1a2b4:	movw	r0, #1
   1a2b8:	and	r0, r0, #1
   1a2bc:	strb	r0, [sp, #7]
   1a2c0:	b	1a2d0 <__assert_fail@plt+0x92a8>
   1a2c4:	movw	r0, #0
   1a2c8:	and	r0, r0, #1
   1a2cc:	strb	r0, [sp, #7]
   1a2d0:	ldrb	r0, [sp, #7]
   1a2d4:	and	r0, r0, #1
   1a2d8:	add	sp, sp, #8
   1a2dc:	bx	lr
   1a2e0:	sub	sp, sp, #8
   1a2e4:	str	r0, [sp]
   1a2e8:	ldr	r0, [sp]
   1a2ec:	sub	r0, r0, #97	; 0x61
   1a2f0:	cmp	r0, #25
   1a2f4:	bhi	1a30c <__assert_fail@plt+0x92e4>
   1a2f8:	b	1a2fc <__assert_fail@plt+0x92d4>
   1a2fc:	movw	r0, #1
   1a300:	and	r0, r0, #1
   1a304:	strb	r0, [sp, #7]
   1a308:	b	1a318 <__assert_fail@plt+0x92f0>
   1a30c:	movw	r0, #0
   1a310:	and	r0, r0, #1
   1a314:	strb	r0, [sp, #7]
   1a318:	ldrb	r0, [sp, #7]
   1a31c:	and	r0, r0, #1
   1a320:	add	sp, sp, #8
   1a324:	bx	lr
   1a328:	sub	sp, sp, #8
   1a32c:	str	r0, [sp]
   1a330:	ldr	r0, [sp]
   1a334:	sub	r0, r0, #32
   1a338:	cmp	r0, #94	; 0x5e
   1a33c:	bhi	1a354 <__assert_fail@plt+0x932c>
   1a340:	b	1a344 <__assert_fail@plt+0x931c>
   1a344:	movw	r0, #1
   1a348:	and	r0, r0, #1
   1a34c:	strb	r0, [sp, #7]
   1a350:	b	1a360 <__assert_fail@plt+0x9338>
   1a354:	movw	r0, #0
   1a358:	and	r0, r0, #1
   1a35c:	strb	r0, [sp, #7]
   1a360:	ldrb	r0, [sp, #7]
   1a364:	and	r0, r0, #1
   1a368:	add	sp, sp, #8
   1a36c:	bx	lr
   1a370:	sub	sp, sp, #12
   1a374:	str	r0, [sp, #4]
   1a378:	ldr	r0, [sp, #4]
   1a37c:	sub	r0, r0, #33	; 0x21
   1a380:	cmp	r0, #93	; 0x5d
   1a384:	str	r0, [sp]
   1a388:	bhi	1a524 <__assert_fail@plt+0x94fc>
   1a38c:	add	r0, pc, #8
   1a390:	ldr	r1, [sp]
   1a394:	ldr	r0, [r0, r1, lsl #2]
   1a398:	mov	pc, r0
   1a39c:	andeq	sl, r1, r4, lsl r5
   1a3a0:	andeq	sl, r1, r4, lsl r5
   1a3a4:	andeq	sl, r1, r4, lsl r5
   1a3a8:	andeq	sl, r1, r4, lsl r5
   1a3ac:	andeq	sl, r1, r4, lsl r5
   1a3b0:	andeq	sl, r1, r4, lsl r5
   1a3b4:	andeq	sl, r1, r4, lsl r5
   1a3b8:	andeq	sl, r1, r4, lsl r5
   1a3bc:	andeq	sl, r1, r4, lsl r5
   1a3c0:	andeq	sl, r1, r4, lsl r5
   1a3c4:	andeq	sl, r1, r4, lsl r5
   1a3c8:	andeq	sl, r1, r4, lsl r5
   1a3cc:	andeq	sl, r1, r4, lsl r5
   1a3d0:	andeq	sl, r1, r4, lsl r5
   1a3d4:	andeq	sl, r1, r4, lsl r5
   1a3d8:	andeq	sl, r1, r4, lsr #10
   1a3dc:	andeq	sl, r1, r4, lsr #10
   1a3e0:	andeq	sl, r1, r4, lsr #10
   1a3e4:	andeq	sl, r1, r4, lsr #10
   1a3e8:	andeq	sl, r1, r4, lsr #10
   1a3ec:	andeq	sl, r1, r4, lsr #10
   1a3f0:	andeq	sl, r1, r4, lsr #10
   1a3f4:	andeq	sl, r1, r4, lsr #10
   1a3f8:	andeq	sl, r1, r4, lsr #10
   1a3fc:	andeq	sl, r1, r4, lsr #10
   1a400:	andeq	sl, r1, r4, lsl r5
   1a404:	andeq	sl, r1, r4, lsl r5
   1a408:	andeq	sl, r1, r4, lsl r5
   1a40c:	andeq	sl, r1, r4, lsl r5
   1a410:	andeq	sl, r1, r4, lsl r5
   1a414:	andeq	sl, r1, r4, lsl r5
   1a418:	andeq	sl, r1, r4, lsl r5
   1a41c:	andeq	sl, r1, r4, lsr #10
   1a420:	andeq	sl, r1, r4, lsr #10
   1a424:	andeq	sl, r1, r4, lsr #10
   1a428:	andeq	sl, r1, r4, lsr #10
   1a42c:	andeq	sl, r1, r4, lsr #10
   1a430:	andeq	sl, r1, r4, lsr #10
   1a434:	andeq	sl, r1, r4, lsr #10
   1a438:	andeq	sl, r1, r4, lsr #10
   1a43c:	andeq	sl, r1, r4, lsr #10
   1a440:	andeq	sl, r1, r4, lsr #10
   1a444:	andeq	sl, r1, r4, lsr #10
   1a448:	andeq	sl, r1, r4, lsr #10
   1a44c:	andeq	sl, r1, r4, lsr #10
   1a450:	andeq	sl, r1, r4, lsr #10
   1a454:	andeq	sl, r1, r4, lsr #10
   1a458:	andeq	sl, r1, r4, lsr #10
   1a45c:	andeq	sl, r1, r4, lsr #10
   1a460:	andeq	sl, r1, r4, lsr #10
   1a464:	andeq	sl, r1, r4, lsr #10
   1a468:	andeq	sl, r1, r4, lsr #10
   1a46c:	andeq	sl, r1, r4, lsr #10
   1a470:	andeq	sl, r1, r4, lsr #10
   1a474:	andeq	sl, r1, r4, lsr #10
   1a478:	andeq	sl, r1, r4, lsr #10
   1a47c:	andeq	sl, r1, r4, lsr #10
   1a480:	andeq	sl, r1, r4, lsr #10
   1a484:	andeq	sl, r1, r4, lsl r5
   1a488:	andeq	sl, r1, r4, lsl r5
   1a48c:	andeq	sl, r1, r4, lsl r5
   1a490:	andeq	sl, r1, r4, lsl r5
   1a494:	andeq	sl, r1, r4, lsl r5
   1a498:	andeq	sl, r1, r4, lsl r5
   1a49c:	andeq	sl, r1, r4, lsr #10
   1a4a0:	andeq	sl, r1, r4, lsr #10
   1a4a4:	andeq	sl, r1, r4, lsr #10
   1a4a8:	andeq	sl, r1, r4, lsr #10
   1a4ac:	andeq	sl, r1, r4, lsr #10
   1a4b0:	andeq	sl, r1, r4, lsr #10
   1a4b4:	andeq	sl, r1, r4, lsr #10
   1a4b8:	andeq	sl, r1, r4, lsr #10
   1a4bc:	andeq	sl, r1, r4, lsr #10
   1a4c0:	andeq	sl, r1, r4, lsr #10
   1a4c4:	andeq	sl, r1, r4, lsr #10
   1a4c8:	andeq	sl, r1, r4, lsr #10
   1a4cc:	andeq	sl, r1, r4, lsr #10
   1a4d0:	andeq	sl, r1, r4, lsr #10
   1a4d4:	andeq	sl, r1, r4, lsr #10
   1a4d8:	andeq	sl, r1, r4, lsr #10
   1a4dc:	andeq	sl, r1, r4, lsr #10
   1a4e0:	andeq	sl, r1, r4, lsr #10
   1a4e4:	andeq	sl, r1, r4, lsr #10
   1a4e8:	andeq	sl, r1, r4, lsr #10
   1a4ec:	andeq	sl, r1, r4, lsr #10
   1a4f0:	andeq	sl, r1, r4, lsr #10
   1a4f4:	andeq	sl, r1, r4, lsr #10
   1a4f8:	andeq	sl, r1, r4, lsr #10
   1a4fc:	andeq	sl, r1, r4, lsr #10
   1a500:	andeq	sl, r1, r4, lsr #10
   1a504:	andeq	sl, r1, r4, lsl r5
   1a508:	andeq	sl, r1, r4, lsl r5
   1a50c:	andeq	sl, r1, r4, lsl r5
   1a510:	andeq	sl, r1, r4, lsl r5
   1a514:	movw	r0, #1
   1a518:	and	r0, r0, #1
   1a51c:	strb	r0, [sp, #11]
   1a520:	b	1a530 <__assert_fail@plt+0x9508>
   1a524:	movw	r0, #0
   1a528:	and	r0, r0, #1
   1a52c:	strb	r0, [sp, #11]
   1a530:	ldrb	r0, [sp, #11]
   1a534:	and	r0, r0, #1
   1a538:	add	sp, sp, #12
   1a53c:	bx	lr
   1a540:	sub	sp, sp, #12
   1a544:	str	r0, [sp, #4]
   1a548:	ldr	r0, [sp, #4]
   1a54c:	sub	r1, r0, #9
   1a550:	cmp	r1, #5
   1a554:	str	r0, [sp]
   1a558:	bcc	1a570 <__assert_fail@plt+0x9548>
   1a55c:	b	1a560 <__assert_fail@plt+0x9538>
   1a560:	ldr	r0, [sp]
   1a564:	cmp	r0, #32
   1a568:	bne	1a580 <__assert_fail@plt+0x9558>
   1a56c:	b	1a570 <__assert_fail@plt+0x9548>
   1a570:	movw	r0, #1
   1a574:	and	r0, r0, #1
   1a578:	strb	r0, [sp, #11]
   1a57c:	b	1a58c <__assert_fail@plt+0x9564>
   1a580:	movw	r0, #0
   1a584:	and	r0, r0, #1
   1a588:	strb	r0, [sp, #11]
   1a58c:	ldrb	r0, [sp, #11]
   1a590:	and	r0, r0, #1
   1a594:	add	sp, sp, #12
   1a598:	bx	lr
   1a59c:	sub	sp, sp, #8
   1a5a0:	str	r0, [sp]
   1a5a4:	ldr	r0, [sp]
   1a5a8:	sub	r0, r0, #65	; 0x41
   1a5ac:	cmp	r0, #25
   1a5b0:	bhi	1a5c8 <__assert_fail@plt+0x95a0>
   1a5b4:	b	1a5b8 <__assert_fail@plt+0x9590>
   1a5b8:	movw	r0, #1
   1a5bc:	and	r0, r0, #1
   1a5c0:	strb	r0, [sp, #7]
   1a5c4:	b	1a5d4 <__assert_fail@plt+0x95ac>
   1a5c8:	movw	r0, #0
   1a5cc:	and	r0, r0, #1
   1a5d0:	strb	r0, [sp, #7]
   1a5d4:	ldrb	r0, [sp, #7]
   1a5d8:	and	r0, r0, #1
   1a5dc:	add	sp, sp, #8
   1a5e0:	bx	lr
   1a5e4:	sub	sp, sp, #12
   1a5e8:	str	r0, [sp, #4]
   1a5ec:	ldr	r0, [sp, #4]
   1a5f0:	sub	r1, r0, #48	; 0x30
   1a5f4:	cmp	r1, #10
   1a5f8:	str	r0, [sp]
   1a5fc:	bcc	1a62c <__assert_fail@plt+0x9604>
   1a600:	b	1a604 <__assert_fail@plt+0x95dc>
   1a604:	ldr	r0, [sp]
   1a608:	sub	r1, r0, #65	; 0x41
   1a60c:	cmp	r1, #6
   1a610:	bcc	1a62c <__assert_fail@plt+0x9604>
   1a614:	b	1a618 <__assert_fail@plt+0x95f0>
   1a618:	ldr	r0, [sp]
   1a61c:	sub	r1, r0, #97	; 0x61
   1a620:	cmp	r1, #5
   1a624:	bhi	1a63c <__assert_fail@plt+0x9614>
   1a628:	b	1a62c <__assert_fail@plt+0x9604>
   1a62c:	movw	r0, #1
   1a630:	and	r0, r0, #1
   1a634:	strb	r0, [sp, #11]
   1a638:	b	1a648 <__assert_fail@plt+0x9620>
   1a63c:	movw	r0, #0
   1a640:	and	r0, r0, #1
   1a644:	strb	r0, [sp, #11]
   1a648:	ldrb	r0, [sp, #11]
   1a64c:	and	r0, r0, #1
   1a650:	add	sp, sp, #12
   1a654:	bx	lr
   1a658:	sub	sp, sp, #8
   1a65c:	str	r0, [sp]
   1a660:	ldr	r0, [sp]
   1a664:	sub	r0, r0, #65	; 0x41
   1a668:	cmp	r0, #25
   1a66c:	bhi	1a688 <__assert_fail@plt+0x9660>
   1a670:	b	1a674 <__assert_fail@plt+0x964c>
   1a674:	ldr	r0, [sp]
   1a678:	sub	r0, r0, #65	; 0x41
   1a67c:	add	r0, r0, #97	; 0x61
   1a680:	str	r0, [sp, #4]
   1a684:	b	1a690 <__assert_fail@plt+0x9668>
   1a688:	ldr	r0, [sp]
   1a68c:	str	r0, [sp, #4]
   1a690:	ldr	r0, [sp, #4]
   1a694:	add	sp, sp, #8
   1a698:	bx	lr
   1a69c:	sub	sp, sp, #8
   1a6a0:	str	r0, [sp]
   1a6a4:	ldr	r0, [sp]
   1a6a8:	sub	r0, r0, #97	; 0x61
   1a6ac:	cmp	r0, #25
   1a6b0:	bhi	1a6cc <__assert_fail@plt+0x96a4>
   1a6b4:	b	1a6b8 <__assert_fail@plt+0x9690>
   1a6b8:	ldr	r0, [sp]
   1a6bc:	sub	r0, r0, #97	; 0x61
   1a6c0:	add	r0, r0, #65	; 0x41
   1a6c4:	str	r0, [sp, #4]
   1a6c8:	b	1a6d4 <__assert_fail@plt+0x96ac>
   1a6cc:	ldr	r0, [sp]
   1a6d0:	str	r0, [sp, #4]
   1a6d4:	ldr	r0, [sp, #4]
   1a6d8:	add	sp, sp, #8
   1a6dc:	bx	lr
   1a6e0:	push	{fp, lr}
   1a6e4:	mov	fp, sp
   1a6e8:	sub	sp, sp, #24
   1a6ec:	str	r0, [fp, #-8]
   1a6f0:	str	r1, [sp, #12]
   1a6f4:	ldr	r0, [fp, #-8]
   1a6f8:	str	r0, [sp, #8]
   1a6fc:	ldr	r0, [sp, #12]
   1a700:	str	r0, [sp, #4]
   1a704:	ldr	r0, [sp, #8]
   1a708:	ldr	r1, [sp, #4]
   1a70c:	cmp	r0, r1
   1a710:	bne	1a720 <__assert_fail@plt+0x96f8>
   1a714:	movw	r0, #0
   1a718:	str	r0, [fp, #-4]
   1a71c:	b	1a78c <__assert_fail@plt+0x9764>
   1a720:	b	1a724 <__assert_fail@plt+0x96fc>
   1a724:	ldr	r0, [sp, #8]
   1a728:	ldrb	r0, [r0]
   1a72c:	bl	1a658 <__assert_fail@plt+0x9630>
   1a730:	strb	r0, [sp, #3]
   1a734:	ldr	r0, [sp, #4]
   1a738:	ldrb	r0, [r0]
   1a73c:	bl	1a658 <__assert_fail@plt+0x9630>
   1a740:	strb	r0, [sp, #2]
   1a744:	ldrb	r0, [sp, #3]
   1a748:	cmp	r0, #0
   1a74c:	bne	1a754 <__assert_fail@plt+0x972c>
   1a750:	b	1a77c <__assert_fail@plt+0x9754>
   1a754:	ldr	r0, [sp, #8]
   1a758:	add	r0, r0, #1
   1a75c:	str	r0, [sp, #8]
   1a760:	ldr	r0, [sp, #4]
   1a764:	add	r0, r0, #1
   1a768:	str	r0, [sp, #4]
   1a76c:	ldrb	r0, [sp, #3]
   1a770:	ldrb	r1, [sp, #2]
   1a774:	cmp	r0, r1
   1a778:	beq	1a724 <__assert_fail@plt+0x96fc>
   1a77c:	ldrb	r0, [sp, #3]
   1a780:	ldrb	r1, [sp, #2]
   1a784:	sub	r0, r0, r1
   1a788:	str	r0, [fp, #-4]
   1a78c:	ldr	r0, [fp, #-4]
   1a790:	mov	sp, fp
   1a794:	pop	{fp, pc}
   1a798:	push	{fp, lr}
   1a79c:	mov	fp, sp
   1a7a0:	sub	sp, sp, #16
   1a7a4:	str	r0, [sp, #8]
   1a7a8:	ldr	r0, [sp, #8]
   1a7ac:	bl	10ea8 <__fpending@plt>
   1a7b0:	cmp	r0, #0
   1a7b4:	movw	r0, #0
   1a7b8:	movne	r0, #1
   1a7bc:	and	r0, r0, #1
   1a7c0:	strb	r0, [sp, #7]
   1a7c4:	ldr	r0, [sp, #8]
   1a7c8:	bl	10eb4 <ferror_unlocked@plt>
   1a7cc:	cmp	r0, #0
   1a7d0:	movw	r0, #0
   1a7d4:	movne	r0, #1
   1a7d8:	and	r0, r0, #1
   1a7dc:	strb	r0, [sp, #6]
   1a7e0:	ldr	r0, [sp, #8]
   1a7e4:	bl	1a868 <__assert_fail@plt+0x9840>
   1a7e8:	cmp	r0, #0
   1a7ec:	movw	r0, #0
   1a7f0:	movne	r0, #1
   1a7f4:	and	r0, r0, #1
   1a7f8:	strb	r0, [sp, #5]
   1a7fc:	ldrb	r0, [sp, #6]
   1a800:	tst	r0, #1
   1a804:	bne	1a830 <__assert_fail@plt+0x9808>
   1a808:	ldrb	r0, [sp, #5]
   1a80c:	tst	r0, #1
   1a810:	beq	1a854 <__assert_fail@plt+0x982c>
   1a814:	ldrb	r0, [sp, #7]
   1a818:	tst	r0, #1
   1a81c:	bne	1a830 <__assert_fail@plt+0x9808>
   1a820:	bl	10f74 <__errno_location@plt>
   1a824:	ldr	r0, [r0]
   1a828:	cmp	r0, #9
   1a82c:	beq	1a854 <__assert_fail@plt+0x982c>
   1a830:	ldrb	r0, [sp, #5]
   1a834:	tst	r0, #1
   1a838:	bne	1a848 <__assert_fail@plt+0x9820>
   1a83c:	bl	10f74 <__errno_location@plt>
   1a840:	movw	lr, #0
   1a844:	str	lr, [r0]
   1a848:	mvn	r0, #0
   1a84c:	str	r0, [fp, #-4]
   1a850:	b	1a85c <__assert_fail@plt+0x9834>
   1a854:	movw	r0, #0
   1a858:	str	r0, [fp, #-4]
   1a85c:	ldr	r0, [fp, #-4]
   1a860:	mov	sp, fp
   1a864:	pop	{fp, pc}
   1a868:	push	{fp, lr}
   1a86c:	mov	fp, sp
   1a870:	sub	sp, sp, #32
   1a874:	str	r0, [fp, #-8]
   1a878:	movw	r0, #0
   1a87c:	str	r0, [fp, #-12]
   1a880:	str	r0, [sp, #12]
   1a884:	ldr	r0, [fp, #-8]
   1a888:	bl	10f98 <fileno@plt>
   1a88c:	str	r0, [sp, #16]
   1a890:	ldr	r0, [sp, #16]
   1a894:	cmp	r0, #0
   1a898:	bge	1a8ac <__assert_fail@plt+0x9884>
   1a89c:	ldr	r0, [fp, #-8]
   1a8a0:	bl	10fb0 <fclose@plt>
   1a8a4:	str	r0, [fp, #-4]
   1a8a8:	b	1a948 <__assert_fail@plt+0x9920>
   1a8ac:	ldr	r0, [fp, #-8]
   1a8b0:	bl	10efc <__freading@plt>
   1a8b4:	cmp	r0, #0
   1a8b8:	beq	1a8f0 <__assert_fail@plt+0x98c8>
   1a8bc:	ldr	r0, [fp, #-8]
   1a8c0:	bl	10f98 <fileno@plt>
   1a8c4:	mov	lr, sp
   1a8c8:	mov	r1, #1
   1a8cc:	str	r1, [lr]
   1a8d0:	mov	r1, #0
   1a8d4:	mov	r2, r1
   1a8d8:	mov	r3, r1
   1a8dc:	bl	10e90 <lseek64@plt>
   1a8e0:	and	r0, r0, r1
   1a8e4:	cmn	r0, #1
   1a8e8:	beq	1a90c <__assert_fail@plt+0x98e4>
   1a8ec:	b	1a8f0 <__assert_fail@plt+0x98c8>
   1a8f0:	ldr	r0, [fp, #-8]
   1a8f4:	bl	1a954 <__assert_fail@plt+0x992c>
   1a8f8:	cmp	r0, #0
   1a8fc:	beq	1a90c <__assert_fail@plt+0x98e4>
   1a900:	bl	10f74 <__errno_location@plt>
   1a904:	ldr	r0, [r0]
   1a908:	str	r0, [fp, #-12]
   1a90c:	ldr	r0, [fp, #-8]
   1a910:	bl	10fb0 <fclose@plt>
   1a914:	str	r0, [sp, #12]
   1a918:	ldr	r0, [fp, #-12]
   1a91c:	cmp	r0, #0
   1a920:	beq	1a940 <__assert_fail@plt+0x9918>
   1a924:	ldr	r0, [fp, #-12]
   1a928:	str	r0, [sp, #8]
   1a92c:	bl	10f74 <__errno_location@plt>
   1a930:	ldr	lr, [sp, #8]
   1a934:	str	lr, [r0]
   1a938:	mvn	r0, #0
   1a93c:	str	r0, [sp, #12]
   1a940:	ldr	r0, [sp, #12]
   1a944:	str	r0, [fp, #-4]
   1a948:	ldr	r0, [fp, #-4]
   1a94c:	mov	sp, fp
   1a950:	pop	{fp, pc}
   1a954:	push	{fp, lr}
   1a958:	mov	fp, sp
   1a95c:	sub	sp, sp, #8
   1a960:	str	r0, [sp]
   1a964:	ldr	r0, [sp]
   1a968:	movw	r1, #0
   1a96c:	cmp	r0, r1
   1a970:	beq	1a984 <__assert_fail@plt+0x995c>
   1a974:	ldr	r0, [sp]
   1a978:	bl	10efc <__freading@plt>
   1a97c:	cmp	r0, #0
   1a980:	bne	1a994 <__assert_fail@plt+0x996c>
   1a984:	ldr	r0, [sp]
   1a988:	bl	10e0c <fflush@plt>
   1a98c:	str	r0, [sp, #4]
   1a990:	b	1a9a8 <__assert_fail@plt+0x9980>
   1a994:	ldr	r0, [sp]
   1a998:	bl	1a9b4 <__assert_fail@plt+0x998c>
   1a99c:	ldr	r0, [sp]
   1a9a0:	bl	10e0c <fflush@plt>
   1a9a4:	str	r0, [sp, #4]
   1a9a8:	ldr	r0, [sp, #4]
   1a9ac:	mov	sp, fp
   1a9b0:	pop	{fp, pc}
   1a9b4:	push	{fp, lr}
   1a9b8:	mov	fp, sp
   1a9bc:	sub	sp, sp, #16
   1a9c0:	str	r0, [fp, #-4]
   1a9c4:	ldr	r0, [fp, #-4]
   1a9c8:	ldr	r0, [r0]
   1a9cc:	and	r0, r0, #256	; 0x100
   1a9d0:	cmp	r0, #0
   1a9d4:	beq	1a9fc <__assert_fail@plt+0x99d4>
   1a9d8:	ldr	r0, [fp, #-4]
   1a9dc:	mov	r1, sp
   1a9e0:	mov	r2, #1
   1a9e4:	str	r2, [r1]
   1a9e8:	mov	r1, #0
   1a9ec:	mov	r2, r1
   1a9f0:	mov	r3, r1
   1a9f4:	bl	1aa44 <__assert_fail@plt+0x9a1c>
   1a9f8:	str	r0, [sp, #8]
   1a9fc:	mov	sp, fp
   1aa00:	pop	{fp, pc}
   1aa04:	push	{fp, lr}
   1aa08:	mov	fp, sp
   1aa0c:	sub	sp, sp, #16
   1aa10:	str	r0, [fp, #-4]
   1aa14:	bl	10f74 <__errno_location@plt>
   1aa18:	ldr	r0, [r0]
   1aa1c:	str	r0, [sp, #8]
   1aa20:	ldr	r0, [fp, #-4]
   1aa24:	bl	10e18 <free@plt>
   1aa28:	ldr	r0, [sp, #8]
   1aa2c:	str	r0, [sp, #4]
   1aa30:	bl	10f74 <__errno_location@plt>
   1aa34:	ldr	lr, [sp, #4]
   1aa38:	str	lr, [r0]
   1aa3c:	mov	sp, fp
   1aa40:	pop	{fp, pc}
   1aa44:	push	{fp, lr}
   1aa48:	mov	fp, sp
   1aa4c:	sub	sp, sp, #32
   1aa50:	ldr	r1, [fp, #8]
   1aa54:	str	r0, [fp, #-8]
   1aa58:	str	r3, [sp, #20]
   1aa5c:	str	r2, [sp, #16]
   1aa60:	ldr	r0, [fp, #-8]
   1aa64:	ldr	r0, [r0, #8]
   1aa68:	ldr	r2, [fp, #-8]
   1aa6c:	ldr	r2, [r2, #4]
   1aa70:	cmp	r0, r2
   1aa74:	str	r1, [sp, #4]
   1aa78:	bne	1ab24 <__assert_fail@plt+0x9afc>
   1aa7c:	ldr	r0, [fp, #-8]
   1aa80:	ldr	r0, [r0, #20]
   1aa84:	ldr	r1, [fp, #-8]
   1aa88:	ldr	r1, [r1, #16]
   1aa8c:	cmp	r0, r1
   1aa90:	bne	1ab24 <__assert_fail@plt+0x9afc>
   1aa94:	ldr	r0, [fp, #-8]
   1aa98:	ldr	r0, [r0, #36]	; 0x24
   1aa9c:	movw	r1, #0
   1aaa0:	cmp	r0, r1
   1aaa4:	bne	1ab24 <__assert_fail@plt+0x9afc>
   1aaa8:	ldr	r0, [fp, #-8]
   1aaac:	bl	10f98 <fileno@plt>
   1aab0:	ldr	r2, [sp, #16]
   1aab4:	ldr	r3, [sp, #20]
   1aab8:	ldr	lr, [fp, #8]
   1aabc:	mov	r1, sp
   1aac0:	str	lr, [r1]
   1aac4:	bl	10e90 <lseek64@plt>
   1aac8:	str	r1, [sp, #12]
   1aacc:	str	r0, [sp, #8]
   1aad0:	ldr	r0, [sp, #8]
   1aad4:	ldr	r1, [sp, #12]
   1aad8:	and	r0, r0, r1
   1aadc:	cmn	r0, #1
   1aae0:	bne	1aaf4 <__assert_fail@plt+0x9acc>
   1aae4:	b	1aae8 <__assert_fail@plt+0x9ac0>
   1aae8:	mvn	r0, #0
   1aaec:	str	r0, [fp, #-4]
   1aaf0:	b	1ab44 <__assert_fail@plt+0x9b1c>
   1aaf4:	ldr	r0, [fp, #-8]
   1aaf8:	ldr	r1, [r0]
   1aafc:	bic	r1, r1, #16
   1ab00:	str	r1, [r0]
   1ab04:	ldr	r0, [sp, #8]
   1ab08:	ldr	r1, [sp, #12]
   1ab0c:	ldr	r2, [fp, #-8]
   1ab10:	str	r1, [r2, #84]	; 0x54
   1ab14:	str	r0, [r2, #80]	; 0x50
   1ab18:	movw	r0, #0
   1ab1c:	str	r0, [fp, #-4]
   1ab20:	b	1ab44 <__assert_fail@plt+0x9b1c>
   1ab24:	ldr	r0, [fp, #-8]
   1ab28:	ldr	r2, [sp, #16]
   1ab2c:	ldr	r3, [sp, #20]
   1ab30:	ldr	r1, [fp, #8]
   1ab34:	mov	ip, sp
   1ab38:	str	r1, [ip]
   1ab3c:	bl	10fbc <fseeko64@plt>
   1ab40:	str	r0, [fp, #-4]
   1ab44:	ldr	r0, [fp, #-4]
   1ab48:	mov	sp, fp
   1ab4c:	pop	{fp, pc}
   1ab50:	push	{fp, lr}
   1ab54:	mov	fp, sp
   1ab58:	bl	10f74 <__errno_location@plt>
   1ab5c:	movw	lr, #12
   1ab60:	str	lr, [r0]
   1ab64:	movw	r0, #0
   1ab68:	pop	{fp, pc}
   1ab6c:	push	{fp, lr}
   1ab70:	mov	fp, sp
   1ab74:	sub	sp, sp, #8
   1ab78:	str	r0, [sp, #4]
   1ab7c:	ldr	r0, [sp, #4]
   1ab80:	cmn	r0, #1
   1ab84:	bhi	1ab98 <__assert_fail@plt+0x9b70>
   1ab88:	ldr	r0, [sp, #4]
   1ab8c:	bl	19f8c <__assert_fail@plt+0x8f64>
   1ab90:	str	r0, [sp]
   1ab94:	b	1aba0 <__assert_fail@plt+0x9b78>
   1ab98:	bl	1ab50 <__assert_fail@plt+0x9b28>
   1ab9c:	str	r0, [sp]
   1aba0:	ldr	r0, [sp]
   1aba4:	mov	sp, fp
   1aba8:	pop	{fp, pc}
   1abac:	push	{fp, lr}
   1abb0:	mov	fp, sp
   1abb4:	sub	sp, sp, #16
   1abb8:	str	r0, [fp, #-4]
   1abbc:	str	r1, [sp, #8]
   1abc0:	ldr	r0, [sp, #8]
   1abc4:	cmn	r0, #1
   1abc8:	bhi	1ac00 <__assert_fail@plt+0x9bd8>
   1abcc:	ldr	r0, [fp, #-4]
   1abd0:	ldr	r1, [sp, #8]
   1abd4:	ldr	r2, [sp, #8]
   1abd8:	cmp	r2, #0
   1abdc:	movw	r2, #0
   1abe0:	movne	r2, #1
   1abe4:	mvn	r3, #0
   1abe8:	eor	r2, r2, r3
   1abec:	and	r2, r2, #1
   1abf0:	orr	r1, r1, r2
   1abf4:	bl	19ffc <__assert_fail@plt+0x8fd4>
   1abf8:	str	r0, [sp, #4]
   1abfc:	b	1ac08 <__assert_fail@plt+0x9be0>
   1ac00:	bl	1ab50 <__assert_fail@plt+0x9b28>
   1ac04:	str	r0, [sp, #4]
   1ac08:	ldr	r0, [sp, #4]
   1ac0c:	mov	sp, fp
   1ac10:	pop	{fp, pc}
   1ac14:	push	{fp, lr}
   1ac18:	mov	fp, sp
   1ac1c:	sub	sp, sp, #16
   1ac20:	str	r0, [sp, #8]
   1ac24:	str	r1, [sp, #4]
   1ac28:	ldr	r0, [sp, #8]
   1ac2c:	mvn	r1, #0
   1ac30:	cmp	r1, r0
   1ac34:	bcs	1ac58 <__assert_fail@plt+0x9c30>
   1ac38:	ldr	r0, [sp, #4]
   1ac3c:	cmp	r0, #0
   1ac40:	beq	1ac50 <__assert_fail@plt+0x9c28>
   1ac44:	bl	1ab50 <__assert_fail@plt+0x9b28>
   1ac48:	str	r0, [fp, #-4]
   1ac4c:	b	1ac98 <__assert_fail@plt+0x9c70>
   1ac50:	movw	r0, #0
   1ac54:	str	r0, [sp, #8]
   1ac58:	ldr	r0, [sp, #4]
   1ac5c:	mvn	r1, #0
   1ac60:	cmp	r1, r0
   1ac64:	bcs	1ac88 <__assert_fail@plt+0x9c60>
   1ac68:	ldr	r0, [sp, #8]
   1ac6c:	cmp	r0, #0
   1ac70:	beq	1ac80 <__assert_fail@plt+0x9c58>
   1ac74:	bl	1ab50 <__assert_fail@plt+0x9b28>
   1ac78:	str	r0, [fp, #-4]
   1ac7c:	b	1ac98 <__assert_fail@plt+0x9c70>
   1ac80:	movw	r0, #0
   1ac84:	str	r0, [sp, #4]
   1ac88:	ldr	r0, [sp, #8]
   1ac8c:	ldr	r1, [sp, #4]
   1ac90:	bl	19ef0 <__assert_fail@plt+0x8ec8>
   1ac94:	str	r0, [fp, #-4]
   1ac98:	ldr	r0, [fp, #-4]
   1ac9c:	mov	sp, fp
   1aca0:	pop	{fp, pc}
   1aca4:	push	{fp, lr}
   1aca8:	mov	fp, sp
   1acac:	sub	sp, sp, #16
   1acb0:	str	r0, [fp, #-4]
   1acb4:	str	r1, [sp, #8]
   1acb8:	str	r2, [sp, #4]
   1acbc:	ldr	r0, [sp, #8]
   1acc0:	cmp	r0, #0
   1acc4:	beq	1acd4 <__assert_fail@plt+0x9cac>
   1acc8:	ldr	r0, [sp, #4]
   1accc:	cmp	r0, #0
   1acd0:	bne	1ace0 <__assert_fail@plt+0x9cb8>
   1acd4:	movw	r0, #1
   1acd8:	str	r0, [sp, #4]
   1acdc:	str	r0, [sp, #8]
   1ace0:	ldr	r0, [sp, #8]
   1ace4:	cmn	r0, #1
   1ace8:	bhi	1ad10 <__assert_fail@plt+0x9ce8>
   1acec:	ldr	r0, [sp, #4]
   1acf0:	cmn	r0, #1
   1acf4:	bhi	1ad10 <__assert_fail@plt+0x9ce8>
   1acf8:	ldr	r0, [fp, #-4]
   1acfc:	ldr	r1, [sp, #8]
   1ad00:	ldr	r2, [sp, #4]
   1ad04:	bl	1ae30 <__assert_fail@plt+0x9e08>
   1ad08:	str	r0, [sp]
   1ad0c:	b	1ad18 <__assert_fail@plt+0x9cf0>
   1ad10:	bl	1ab50 <__assert_fail@plt+0x9b28>
   1ad14:	str	r0, [sp]
   1ad18:	ldr	r0, [sp]
   1ad1c:	mov	sp, fp
   1ad20:	pop	{fp, pc}
   1ad24:	push	{fp, lr}
   1ad28:	mov	fp, sp
   1ad2c:	sub	sp, sp, #8
   1ad30:	movw	r0, #14
   1ad34:	bl	10fe0 <nl_langinfo@plt>
   1ad38:	str	r0, [sp, #4]
   1ad3c:	ldr	r0, [sp, #4]
   1ad40:	movw	lr, #0
   1ad44:	cmp	r0, lr
   1ad48:	bne	1ad58 <__assert_fail@plt+0x9d30>
   1ad4c:	movw	r0, #51013	; 0xc745
   1ad50:	movt	r0, #1
   1ad54:	str	r0, [sp, #4]
   1ad58:	ldr	r0, [sp, #4]
   1ad5c:	ldrb	r0, [r0]
   1ad60:	cmp	r0, #0
   1ad64:	bne	1ad74 <__assert_fail@plt+0x9d4c>
   1ad68:	movw	r0, #53066	; 0xcf4a
   1ad6c:	movt	r0, #1
   1ad70:	str	r0, [sp, #4]
   1ad74:	ldr	r0, [sp, #4]
   1ad78:	mov	sp, fp
   1ad7c:	pop	{fp, pc}
   1ad80:	push	{fp, lr}
   1ad84:	mov	fp, sp
   1ad88:	sub	sp, sp, #32
   1ad8c:	str	r0, [fp, #-8]
   1ad90:	str	r1, [fp, #-12]
   1ad94:	str	r2, [sp, #16]
   1ad98:	str	r3, [sp, #12]
   1ad9c:	ldr	r0, [fp, #-8]
   1ada0:	movw	r1, #0
   1ada4:	cmp	r0, r1
   1ada8:	bne	1adb4 <__assert_fail@plt+0x9d8c>
   1adac:	add	r0, sp, #4
   1adb0:	str	r0, [fp, #-8]
   1adb4:	ldr	r0, [fp, #-8]
   1adb8:	ldr	r1, [fp, #-12]
   1adbc:	ldr	r2, [sp, #16]
   1adc0:	ldr	r3, [sp, #12]
   1adc4:	bl	10ec0 <mbrtowc@plt>
   1adc8:	str	r0, [sp, #8]
   1adcc:	ldr	r0, [sp, #8]
   1add0:	mvn	r1, #1
   1add4:	cmp	r1, r0
   1add8:	bhi	1ae1c <__assert_fail@plt+0x9df4>
   1addc:	ldr	r0, [sp, #16]
   1ade0:	cmp	r0, #0
   1ade4:	beq	1ae1c <__assert_fail@plt+0x9df4>
   1ade8:	movw	r0, #0
   1adec:	bl	1c1c0 <__assert_fail@plt+0xb198>
   1adf0:	tst	r0, #1
   1adf4:	bne	1ae1c <__assert_fail@plt+0x9df4>
   1adf8:	ldr	r0, [fp, #-12]
   1adfc:	ldrb	r0, [r0]
   1ae00:	strb	r0, [sp, #3]
   1ae04:	ldrb	r0, [sp, #3]
   1ae08:	ldr	r1, [fp, #-8]
   1ae0c:	str	r0, [r1]
   1ae10:	movw	r0, #1
   1ae14:	str	r0, [fp, #-4]
   1ae18:	b	1ae24 <__assert_fail@plt+0x9dfc>
   1ae1c:	ldr	r0, [sp, #8]
   1ae20:	str	r0, [fp, #-4]
   1ae24:	ldr	r0, [fp, #-4]
   1ae28:	mov	sp, fp
   1ae2c:	pop	{fp, pc}
   1ae30:	push	{fp, lr}
   1ae34:	mov	fp, sp
   1ae38:	sub	sp, sp, #176	; 0xb0
   1ae3c:	str	r0, [fp, #-8]
   1ae40:	str	r1, [fp, #-12]
   1ae44:	str	r2, [fp, #-16]
   1ae48:	b	1b200 <__assert_fail@plt+0xa1d8>
   1ae4c:	b	1b020 <__assert_fail@plt+0x9ff8>
   1ae50:	ldr	r0, [fp, #-16]
   1ae54:	cmp	r0, #0
   1ae58:	bcs	1af5c <__assert_fail@plt+0x9f34>
   1ae5c:	ldr	r0, [fp, #-12]
   1ae60:	cmp	r0, #0
   1ae64:	bcs	1aeec <__assert_fail@plt+0x9ec4>
   1ae68:	b	1ae88 <__assert_fail@plt+0x9e60>
   1ae6c:	ldr	r0, [fp, #-12]
   1ae70:	ldr	r1, [fp, #-16]
   1ae74:	movw	r2, #127	; 0x7f
   1ae78:	udiv	r1, r2, r1
   1ae7c:	cmp	r0, r1
   1ae80:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1ae84:	b	1b008 <__assert_fail@plt+0x9fe0>
   1ae88:	b	1ae9c <__assert_fail@plt+0x9e74>
   1ae8c:	ldr	r0, [fp, #-16]
   1ae90:	cmp	r0, #1
   1ae94:	bcc	1aeac <__assert_fail@plt+0x9e84>
   1ae98:	b	1aeb8 <__assert_fail@plt+0x9e90>
   1ae9c:	ldr	r0, [fp, #-16]
   1aea0:	movw	r1, #0
   1aea4:	cmp	r1, r0
   1aea8:	bcs	1aeb8 <__assert_fail@plt+0x9e90>
   1aeac:	movw	r0, #0
   1aeb0:	str	r0, [fp, #-24]	; 0xffffffe8
   1aeb4:	b	1aed0 <__assert_fail@plt+0x9ea8>
   1aeb8:	ldr	r0, [fp, #-16]
   1aebc:	movw	r1, #0
   1aec0:	sub	r0, r1, r0
   1aec4:	movw	r1, #127	; 0x7f
   1aec8:	udiv	r0, r1, r0
   1aecc:	str	r0, [fp, #-24]	; 0xffffffe8
   1aed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aed4:	ldr	r1, [fp, #-12]
   1aed8:	mvn	r2, #0
   1aedc:	sub	r1, r2, r1
   1aee0:	cmp	r0, r1
   1aee4:	bls	1aff0 <__assert_fail@plt+0x9fc8>
   1aee8:	b	1b008 <__assert_fail@plt+0x9fe0>
   1aeec:	ldr	r0, [fp, #-16]
   1aef0:	cmn	r0, #1
   1aef4:	bne	1af40 <__assert_fail@plt+0x9f18>
   1aef8:	b	1af18 <__assert_fail@plt+0x9ef0>
   1aefc:	ldr	r0, [fp, #-12]
   1af00:	mvn	r1, #127	; 0x7f
   1af04:	add	r0, r0, r1
   1af08:	movw	r1, #0
   1af0c:	cmp	r1, r0
   1af10:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1af14:	b	1b008 <__assert_fail@plt+0x9fe0>
   1af18:	ldr	r0, [fp, #-12]
   1af1c:	movw	r1, #0
   1af20:	cmp	r1, r0
   1af24:	bcs	1b008 <__assert_fail@plt+0x9fe0>
   1af28:	ldr	r0, [fp, #-12]
   1af2c:	sub	r0, r0, #1
   1af30:	movw	r1, #127	; 0x7f
   1af34:	cmp	r1, r0
   1af38:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1af3c:	b	1b008 <__assert_fail@plt+0x9fe0>
   1af40:	ldr	r0, [fp, #-16]
   1af44:	mvn	r1, #127	; 0x7f
   1af48:	udiv	r0, r1, r0
   1af4c:	ldr	r1, [fp, #-12]
   1af50:	cmp	r0, r1
   1af54:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1af58:	b	1b008 <__assert_fail@plt+0x9fe0>
   1af5c:	ldr	r0, [fp, #-16]
   1af60:	cmp	r0, #0
   1af64:	bne	1af6c <__assert_fail@plt+0x9f44>
   1af68:	b	1b008 <__assert_fail@plt+0x9fe0>
   1af6c:	ldr	r0, [fp, #-12]
   1af70:	cmp	r0, #0
   1af74:	bcs	1afd8 <__assert_fail@plt+0x9fb0>
   1af78:	ldr	r0, [fp, #-12]
   1af7c:	cmn	r0, #1
   1af80:	bne	1afbc <__assert_fail@plt+0x9f94>
   1af84:	b	1afa4 <__assert_fail@plt+0x9f7c>
   1af88:	ldr	r0, [fp, #-16]
   1af8c:	mvn	r1, #127	; 0x7f
   1af90:	add	r0, r0, r1
   1af94:	movw	r1, #0
   1af98:	cmp	r1, r0
   1af9c:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1afa0:	b	1b008 <__assert_fail@plt+0x9fe0>
   1afa4:	ldr	r0, [fp, #-16]
   1afa8:	sub	r0, r0, #1
   1afac:	movw	r1, #127	; 0x7f
   1afb0:	cmp	r1, r0
   1afb4:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1afb8:	b	1b008 <__assert_fail@plt+0x9fe0>
   1afbc:	ldr	r0, [fp, #-12]
   1afc0:	mvn	r1, #127	; 0x7f
   1afc4:	udiv	r0, r1, r0
   1afc8:	ldr	r1, [fp, #-16]
   1afcc:	cmp	r0, r1
   1afd0:	bcc	1aff0 <__assert_fail@plt+0x9fc8>
   1afd4:	b	1b008 <__assert_fail@plt+0x9fe0>
   1afd8:	ldr	r0, [fp, #-16]
   1afdc:	movw	r1, #127	; 0x7f
   1afe0:	udiv	r0, r1, r0
   1afe4:	ldr	r1, [fp, #-12]
   1afe8:	cmp	r0, r1
   1afec:	bcs	1b008 <__assert_fail@plt+0x9fe0>
   1aff0:	ldr	r0, [fp, #-12]
   1aff4:	ldr	r1, [fp, #-16]
   1aff8:	mul	r0, r0, r1
   1affc:	sxtb	r0, r0
   1b000:	str	r0, [fp, #-20]	; 0xffffffec
   1b004:	b	1c180 <__assert_fail@plt+0xb158>
   1b008:	ldr	r0, [fp, #-12]
   1b00c:	ldr	r1, [fp, #-16]
   1b010:	mul	r0, r0, r1
   1b014:	sxtb	r0, r0
   1b018:	str	r0, [fp, #-20]	; 0xffffffec
   1b01c:	b	1c198 <__assert_fail@plt+0xb170>
   1b020:	ldr	r0, [fp, #-16]
   1b024:	cmp	r0, #0
   1b028:	bcs	1b134 <__assert_fail@plt+0xa10c>
   1b02c:	ldr	r0, [fp, #-12]
   1b030:	cmp	r0, #0
   1b034:	bcs	1b0bc <__assert_fail@plt+0xa094>
   1b038:	b	1b058 <__assert_fail@plt+0xa030>
   1b03c:	ldr	r0, [fp, #-12]
   1b040:	ldr	r1, [fp, #-16]
   1b044:	movw	r2, #255	; 0xff
   1b048:	udiv	r1, r2, r1
   1b04c:	cmp	r0, r1
   1b050:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b054:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b058:	b	1b06c <__assert_fail@plt+0xa044>
   1b05c:	ldr	r0, [fp, #-16]
   1b060:	cmp	r0, #1
   1b064:	bcc	1b07c <__assert_fail@plt+0xa054>
   1b068:	b	1b088 <__assert_fail@plt+0xa060>
   1b06c:	ldr	r0, [fp, #-16]
   1b070:	movw	r1, #0
   1b074:	cmp	r1, r0
   1b078:	bcs	1b088 <__assert_fail@plt+0xa060>
   1b07c:	movw	r0, #0
   1b080:	str	r0, [fp, #-28]	; 0xffffffe4
   1b084:	b	1b0a0 <__assert_fail@plt+0xa078>
   1b088:	ldr	r0, [fp, #-16]
   1b08c:	movw	r1, #0
   1b090:	sub	r0, r1, r0
   1b094:	movw	r1, #255	; 0xff
   1b098:	udiv	r0, r1, r0
   1b09c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b0a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b0a4:	ldr	r1, [fp, #-12]
   1b0a8:	mvn	r2, #0
   1b0ac:	sub	r1, r2, r1
   1b0b0:	cmp	r0, r1
   1b0b4:	bls	1b1d0 <__assert_fail@plt+0xa1a8>
   1b0b8:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b0bc:	b	1b0c4 <__assert_fail@plt+0xa09c>
   1b0c0:	b	1b0c8 <__assert_fail@plt+0xa0a0>
   1b0c4:	b	1b118 <__assert_fail@plt+0xa0f0>
   1b0c8:	ldr	r0, [fp, #-16]
   1b0cc:	cmn	r0, #1
   1b0d0:	bne	1b118 <__assert_fail@plt+0xa0f0>
   1b0d4:	b	1b0f0 <__assert_fail@plt+0xa0c8>
   1b0d8:	ldr	r0, [fp, #-12]
   1b0dc:	add	r0, r0, #0
   1b0e0:	movw	r1, #0
   1b0e4:	cmp	r1, r0
   1b0e8:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b0ec:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b0f0:	ldr	r0, [fp, #-12]
   1b0f4:	movw	r1, #0
   1b0f8:	cmp	r1, r0
   1b0fc:	bcs	1b1e8 <__assert_fail@plt+0xa1c0>
   1b100:	ldr	r0, [fp, #-12]
   1b104:	sub	r0, r0, #1
   1b108:	mvn	r1, #0
   1b10c:	cmp	r1, r0
   1b110:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b114:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b118:	ldr	r0, [fp, #-16]
   1b11c:	movw	r1, #0
   1b120:	udiv	r0, r1, r0
   1b124:	ldr	r1, [fp, #-12]
   1b128:	cmp	r0, r1
   1b12c:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b130:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b134:	ldr	r0, [fp, #-16]
   1b138:	cmp	r0, #0
   1b13c:	bne	1b144 <__assert_fail@plt+0xa11c>
   1b140:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b144:	ldr	r0, [fp, #-12]
   1b148:	cmp	r0, #0
   1b14c:	bcs	1b1b8 <__assert_fail@plt+0xa190>
   1b150:	b	1b158 <__assert_fail@plt+0xa130>
   1b154:	b	1b15c <__assert_fail@plt+0xa134>
   1b158:	b	1b19c <__assert_fail@plt+0xa174>
   1b15c:	ldr	r0, [fp, #-12]
   1b160:	cmn	r0, #1
   1b164:	bne	1b19c <__assert_fail@plt+0xa174>
   1b168:	b	1b184 <__assert_fail@plt+0xa15c>
   1b16c:	ldr	r0, [fp, #-16]
   1b170:	add	r0, r0, #0
   1b174:	movw	r1, #0
   1b178:	cmp	r1, r0
   1b17c:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b180:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b184:	ldr	r0, [fp, #-16]
   1b188:	sub	r0, r0, #1
   1b18c:	mvn	r1, #0
   1b190:	cmp	r1, r0
   1b194:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b198:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b19c:	ldr	r0, [fp, #-12]
   1b1a0:	movw	r1, #0
   1b1a4:	udiv	r0, r1, r0
   1b1a8:	ldr	r1, [fp, #-16]
   1b1ac:	cmp	r0, r1
   1b1b0:	bcc	1b1d0 <__assert_fail@plt+0xa1a8>
   1b1b4:	b	1b1e8 <__assert_fail@plt+0xa1c0>
   1b1b8:	ldr	r0, [fp, #-16]
   1b1bc:	movw	r1, #255	; 0xff
   1b1c0:	udiv	r0, r1, r0
   1b1c4:	ldr	r1, [fp, #-12]
   1b1c8:	cmp	r0, r1
   1b1cc:	bcs	1b1e8 <__assert_fail@plt+0xa1c0>
   1b1d0:	ldr	r0, [fp, #-12]
   1b1d4:	ldr	r1, [fp, #-16]
   1b1d8:	mul	r0, r0, r1
   1b1dc:	and	r0, r0, #255	; 0xff
   1b1e0:	str	r0, [fp, #-20]	; 0xffffffec
   1b1e4:	b	1c180 <__assert_fail@plt+0xb158>
   1b1e8:	ldr	r0, [fp, #-12]
   1b1ec:	ldr	r1, [fp, #-16]
   1b1f0:	mul	r0, r0, r1
   1b1f4:	and	r0, r0, #255	; 0xff
   1b1f8:	str	r0, [fp, #-20]	; 0xffffffec
   1b1fc:	b	1c198 <__assert_fail@plt+0xb170>
   1b200:	b	1b5b8 <__assert_fail@plt+0xa590>
   1b204:	b	1b3d8 <__assert_fail@plt+0xa3b0>
   1b208:	ldr	r0, [fp, #-16]
   1b20c:	cmp	r0, #0
   1b210:	bcs	1b314 <__assert_fail@plt+0xa2ec>
   1b214:	ldr	r0, [fp, #-12]
   1b218:	cmp	r0, #0
   1b21c:	bcs	1b2a4 <__assert_fail@plt+0xa27c>
   1b220:	b	1b240 <__assert_fail@plt+0xa218>
   1b224:	ldr	r0, [fp, #-12]
   1b228:	ldr	r1, [fp, #-16]
   1b22c:	movw	r2, #32767	; 0x7fff
   1b230:	udiv	r1, r2, r1
   1b234:	cmp	r0, r1
   1b238:	bcc	1b3a8 <__assert_fail@plt+0xa380>
   1b23c:	b	1b3c0 <__assert_fail@plt+0xa398>
   1b240:	b	1b254 <__assert_fail@plt+0xa22c>
   1b244:	ldr	r0, [fp, #-16]
   1b248:	cmp	r0, #1
   1b24c:	bcc	1b264 <__assert_fail@plt+0xa23c>
   1b250:	b	1b270 <__assert_fail@plt+0xa248>
   1b254:	ldr	r0, [fp, #-16]
   1b258:	movw	r1, #0
   1b25c:	cmp	r1, r0
   1b260:	bcs	1b270 <__assert_fail@plt+0xa248>
   1b264:	movw	r0, #0
   1b268:	str	r0, [fp, #-32]	; 0xffffffe0
   1b26c:	b	1b288 <__assert_fail@plt+0xa260>
   1b270:	ldr	r0, [fp, #-16]
   1b274:	movw	r1, #0
   1b278:	sub	r0, r1, r0
   1b27c:	movw	r1, #32767	; 0x7fff
   1b280:	udiv	r0, r1, r0
   1b284:	str	r0, [fp, #-32]	; 0xffffffe0
   1b288:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b28c:	ldr	r1, [fp, #-12]
   1b290:	mvn	r2, #0
   1b294:	sub	r1, r2, r1
   1b298:	cmp	r0, r1
   1b29c:	bls	1b3a8 <__assert_fail@plt+0xa380>
   1b2a0:	b	1b3c0 <__assert_fail@plt+0xa398>
   1b2a4:	ldr	r0, [fp, #-16]
   1b2a8:	cmn	r0, #1
   1b2ac:	bne	1b2f8 <__assert_fail@plt+0xa2d0>
   1b2b0:	b	1b2d0 <__assert_fail@plt+0xa2a8>
   1b2b4:	ldr	r0, [pc, #3840]	; 1c1bc <__assert_fail@plt+0xb194>
   1b2b8:	ldr	r1, [fp, #-12]
   1b2bc:	add	r0, r1, r0
   1b2c0:	movw	r1, #0
   1b2c4:	cmp	r1, r0
   1b2c8:	bcc	1b3a8 <__assert_fail@plt+0xa380>
   1b2cc:	b	1b3c0 <__assert_fail@plt+0xa398>
   1b2d0:	ldr	r0, [fp, #-12]
   1b2d4:	movw	r1, #0
   1b2d8:	cmp	r1, r0
   1b2dc:	bcs	1b3c0 <__assert_fail@plt+0xa398>
   1b2e0:	ldr	r0, [fp, #-12]
   1b2e4:	sub	r0, r0, #1
   1b2e8:	movw	r1, #32767	; 0x7fff
   1b2ec:	cmp	r1, r0
   1b2f0:	bcc	1b3a8 <__assert_fail@plt+0xa380>
   1b2f4:	b	1b3c0 <__assert_fail@plt+0xa398>
   1b2f8:	ldr	r0, [pc, #3772]	; 1c1bc <__assert_fail@plt+0xb194>
   1b2fc:	ldr	r1, [fp, #-16]
   1b300:	udiv	r0, r0, r1
   1b304:	ldr	r1, [fp, #-12]
   1b308:	cmp	r0, r1
   1b30c:	bcc	1b3a8 <__assert_fail@plt+0xa380>
   1b310:	b	1b3c0 <__assert_fail@plt+0xa398>
   1b314:	ldr	r0, [fp, #-16]
   1b318:	cmp	r0, #0
   1b31c:	bne	1b324 <__assert_fail@plt+0xa2fc>
   1b320:	b	1b3c0 <__assert_fail@plt+0xa398>
   1b324:	ldr	r0, [fp, #-12]
   1b328:	cmp	r0, #0
   1b32c:	bcs	1b390 <__assert_fail@plt+0xa368>
   1b330:	ldr	r0, [fp, #-12]
   1b334:	cmn	r0, #1
   1b338:	bne	1b374 <__assert_fail@plt+0xa34c>
   1b33c:	b	1b35c <__assert_fail@plt+0xa334>
   1b340:	ldr	r0, [pc, #3700]	; 1c1bc <__assert_fail@plt+0xb194>
   1b344:	ldr	r1, [fp, #-16]
   1b348:	add	r0, r1, r0
   1b34c:	movw	r1, #0
   1b350:	cmp	r1, r0
   1b354:	bcc	1b3a8 <__assert_fail@plt+0xa380>
   1b358:	b	1b3c0 <__assert_fail@plt+0xa398>
   1b35c:	ldr	r0, [fp, #-16]
   1b360:	sub	r0, r0, #1
   1b364:	movw	r1, #32767	; 0x7fff
   1b368:	cmp	r1, r0
   1b36c:	bcc	1b3a8 <__assert_fail@plt+0xa380>
   1b370:	b	1b3c0 <__assert_fail@plt+0xa398>
   1b374:	ldr	r0, [pc, #3648]	; 1c1bc <__assert_fail@plt+0xb194>
   1b378:	ldr	r1, [fp, #-12]
   1b37c:	udiv	r0, r0, r1
   1b380:	ldr	r1, [fp, #-16]
   1b384:	cmp	r0, r1
   1b388:	bcc	1b3a8 <__assert_fail@plt+0xa380>
   1b38c:	b	1b3c0 <__assert_fail@plt+0xa398>
   1b390:	ldr	r0, [fp, #-16]
   1b394:	movw	r1, #32767	; 0x7fff
   1b398:	udiv	r0, r1, r0
   1b39c:	ldr	r1, [fp, #-12]
   1b3a0:	cmp	r0, r1
   1b3a4:	bcs	1b3c0 <__assert_fail@plt+0xa398>
   1b3a8:	ldr	r0, [fp, #-12]
   1b3ac:	ldr	r1, [fp, #-16]
   1b3b0:	mul	r0, r0, r1
   1b3b4:	sxth	r0, r0
   1b3b8:	str	r0, [fp, #-20]	; 0xffffffec
   1b3bc:	b	1c180 <__assert_fail@plt+0xb158>
   1b3c0:	ldr	r0, [fp, #-12]
   1b3c4:	ldr	r1, [fp, #-16]
   1b3c8:	mul	r0, r0, r1
   1b3cc:	sxth	r0, r0
   1b3d0:	str	r0, [fp, #-20]	; 0xffffffec
   1b3d4:	b	1c198 <__assert_fail@plt+0xb170>
   1b3d8:	ldr	r0, [fp, #-16]
   1b3dc:	cmp	r0, #0
   1b3e0:	bcs	1b4ec <__assert_fail@plt+0xa4c4>
   1b3e4:	ldr	r0, [fp, #-12]
   1b3e8:	cmp	r0, #0
   1b3ec:	bcs	1b474 <__assert_fail@plt+0xa44c>
   1b3f0:	b	1b410 <__assert_fail@plt+0xa3e8>
   1b3f4:	ldr	r0, [fp, #-12]
   1b3f8:	ldr	r1, [fp, #-16]
   1b3fc:	movw	r2, #65535	; 0xffff
   1b400:	udiv	r1, r2, r1
   1b404:	cmp	r0, r1
   1b408:	bcc	1b588 <__assert_fail@plt+0xa560>
   1b40c:	b	1b5a0 <__assert_fail@plt+0xa578>
   1b410:	b	1b424 <__assert_fail@plt+0xa3fc>
   1b414:	ldr	r0, [fp, #-16]
   1b418:	cmp	r0, #1
   1b41c:	bcc	1b434 <__assert_fail@plt+0xa40c>
   1b420:	b	1b440 <__assert_fail@plt+0xa418>
   1b424:	ldr	r0, [fp, #-16]
   1b428:	movw	r1, #0
   1b42c:	cmp	r1, r0
   1b430:	bcs	1b440 <__assert_fail@plt+0xa418>
   1b434:	movw	r0, #0
   1b438:	str	r0, [fp, #-36]	; 0xffffffdc
   1b43c:	b	1b458 <__assert_fail@plt+0xa430>
   1b440:	ldr	r0, [fp, #-16]
   1b444:	movw	r1, #0
   1b448:	sub	r0, r1, r0
   1b44c:	movw	r1, #65535	; 0xffff
   1b450:	udiv	r0, r1, r0
   1b454:	str	r0, [fp, #-36]	; 0xffffffdc
   1b458:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b45c:	ldr	r1, [fp, #-12]
   1b460:	mvn	r2, #0
   1b464:	sub	r1, r2, r1
   1b468:	cmp	r0, r1
   1b46c:	bls	1b588 <__assert_fail@plt+0xa560>
   1b470:	b	1b5a0 <__assert_fail@plt+0xa578>
   1b474:	b	1b47c <__assert_fail@plt+0xa454>
   1b478:	b	1b480 <__assert_fail@plt+0xa458>
   1b47c:	b	1b4d0 <__assert_fail@plt+0xa4a8>
   1b480:	ldr	r0, [fp, #-16]
   1b484:	cmn	r0, #1
   1b488:	bne	1b4d0 <__assert_fail@plt+0xa4a8>
   1b48c:	b	1b4a8 <__assert_fail@plt+0xa480>
   1b490:	ldr	r0, [fp, #-12]
   1b494:	add	r0, r0, #0
   1b498:	movw	r1, #0
   1b49c:	cmp	r1, r0
   1b4a0:	bcc	1b588 <__assert_fail@plt+0xa560>
   1b4a4:	b	1b5a0 <__assert_fail@plt+0xa578>
   1b4a8:	ldr	r0, [fp, #-12]
   1b4ac:	movw	r1, #0
   1b4b0:	cmp	r1, r0
   1b4b4:	bcs	1b5a0 <__assert_fail@plt+0xa578>
   1b4b8:	ldr	r0, [fp, #-12]
   1b4bc:	sub	r0, r0, #1
   1b4c0:	mvn	r1, #0
   1b4c4:	cmp	r1, r0
   1b4c8:	bcc	1b588 <__assert_fail@plt+0xa560>
   1b4cc:	b	1b5a0 <__assert_fail@plt+0xa578>
   1b4d0:	ldr	r0, [fp, #-16]
   1b4d4:	movw	r1, #0
   1b4d8:	udiv	r0, r1, r0
   1b4dc:	ldr	r1, [fp, #-12]
   1b4e0:	cmp	r0, r1
   1b4e4:	bcc	1b588 <__assert_fail@plt+0xa560>
   1b4e8:	b	1b5a0 <__assert_fail@plt+0xa578>
   1b4ec:	ldr	r0, [fp, #-16]
   1b4f0:	cmp	r0, #0
   1b4f4:	bne	1b4fc <__assert_fail@plt+0xa4d4>
   1b4f8:	b	1b5a0 <__assert_fail@plt+0xa578>
   1b4fc:	ldr	r0, [fp, #-12]
   1b500:	cmp	r0, #0
   1b504:	bcs	1b570 <__assert_fail@plt+0xa548>
   1b508:	b	1b510 <__assert_fail@plt+0xa4e8>
   1b50c:	b	1b514 <__assert_fail@plt+0xa4ec>
   1b510:	b	1b554 <__assert_fail@plt+0xa52c>
   1b514:	ldr	r0, [fp, #-12]
   1b518:	cmn	r0, #1
   1b51c:	bne	1b554 <__assert_fail@plt+0xa52c>
   1b520:	b	1b53c <__assert_fail@plt+0xa514>
   1b524:	ldr	r0, [fp, #-16]
   1b528:	add	r0, r0, #0
   1b52c:	movw	r1, #0
   1b530:	cmp	r1, r0
   1b534:	bcc	1b588 <__assert_fail@plt+0xa560>
   1b538:	b	1b5a0 <__assert_fail@plt+0xa578>
   1b53c:	ldr	r0, [fp, #-16]
   1b540:	sub	r0, r0, #1
   1b544:	mvn	r1, #0
   1b548:	cmp	r1, r0
   1b54c:	bcc	1b588 <__assert_fail@plt+0xa560>
   1b550:	b	1b5a0 <__assert_fail@plt+0xa578>
   1b554:	ldr	r0, [fp, #-12]
   1b558:	movw	r1, #0
   1b55c:	udiv	r0, r1, r0
   1b560:	ldr	r1, [fp, #-16]
   1b564:	cmp	r0, r1
   1b568:	bcc	1b588 <__assert_fail@plt+0xa560>
   1b56c:	b	1b5a0 <__assert_fail@plt+0xa578>
   1b570:	ldr	r0, [fp, #-16]
   1b574:	movw	r1, #65535	; 0xffff
   1b578:	udiv	r0, r1, r0
   1b57c:	ldr	r1, [fp, #-12]
   1b580:	cmp	r0, r1
   1b584:	bcs	1b5a0 <__assert_fail@plt+0xa578>
   1b588:	ldr	r0, [fp, #-12]
   1b58c:	ldr	r1, [fp, #-16]
   1b590:	mul	r0, r0, r1
   1b594:	uxth	r0, r0
   1b598:	str	r0, [fp, #-20]	; 0xffffffec
   1b59c:	b	1c180 <__assert_fail@plt+0xb158>
   1b5a0:	ldr	r0, [fp, #-12]
   1b5a4:	ldr	r1, [fp, #-16]
   1b5a8:	mul	r0, r0, r1
   1b5ac:	uxth	r0, r0
   1b5b0:	str	r0, [fp, #-20]	; 0xffffffec
   1b5b4:	b	1c198 <__assert_fail@plt+0xb170>
   1b5b8:	b	1b5bc <__assert_fail@plt+0xa594>
   1b5bc:	b	1b780 <__assert_fail@plt+0xa758>
   1b5c0:	ldr	r0, [fp, #-16]
   1b5c4:	cmp	r0, #0
   1b5c8:	bcs	1b6c8 <__assert_fail@plt+0xa6a0>
   1b5cc:	ldr	r0, [fp, #-12]
   1b5d0:	cmp	r0, #0
   1b5d4:	bcs	1b65c <__assert_fail@plt+0xa634>
   1b5d8:	b	1b5f8 <__assert_fail@plt+0xa5d0>
   1b5dc:	ldr	r0, [pc, #3024]	; 1c1b4 <__assert_fail@plt+0xb18c>
   1b5e0:	ldr	r1, [fp, #-12]
   1b5e4:	ldr	r2, [fp, #-16]
   1b5e8:	udiv	r0, r0, r2
   1b5ec:	cmp	r1, r0
   1b5f0:	bcc	1b758 <__assert_fail@plt+0xa730>
   1b5f4:	b	1b76c <__assert_fail@plt+0xa744>
   1b5f8:	b	1b60c <__assert_fail@plt+0xa5e4>
   1b5fc:	ldr	r0, [fp, #-16]
   1b600:	cmp	r0, #1
   1b604:	bcc	1b61c <__assert_fail@plt+0xa5f4>
   1b608:	b	1b628 <__assert_fail@plt+0xa600>
   1b60c:	ldr	r0, [fp, #-16]
   1b610:	movw	r1, #0
   1b614:	cmp	r1, r0
   1b618:	bcs	1b628 <__assert_fail@plt+0xa600>
   1b61c:	movw	r0, #0
   1b620:	str	r0, [fp, #-40]	; 0xffffffd8
   1b624:	b	1b640 <__assert_fail@plt+0xa618>
   1b628:	ldr	r0, [pc, #2948]	; 1c1b4 <__assert_fail@plt+0xb18c>
   1b62c:	ldr	r1, [fp, #-16]
   1b630:	movw	r2, #0
   1b634:	sub	r1, r2, r1
   1b638:	udiv	r0, r0, r1
   1b63c:	str	r0, [fp, #-40]	; 0xffffffd8
   1b640:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b644:	ldr	r1, [fp, #-12]
   1b648:	mvn	r2, #0
   1b64c:	sub	r1, r2, r1
   1b650:	cmp	r0, r1
   1b654:	bls	1b758 <__assert_fail@plt+0xa730>
   1b658:	b	1b76c <__assert_fail@plt+0xa744>
   1b65c:	ldr	r0, [fp, #-16]
   1b660:	cmn	r0, #1
   1b664:	bne	1b6ac <__assert_fail@plt+0xa684>
   1b668:	b	1b684 <__assert_fail@plt+0xa65c>
   1b66c:	ldr	r0, [fp, #-12]
   1b670:	add	r0, r0, #-2147483648	; 0x80000000
   1b674:	movw	r1, #0
   1b678:	cmp	r1, r0
   1b67c:	bcc	1b758 <__assert_fail@plt+0xa730>
   1b680:	b	1b76c <__assert_fail@plt+0xa744>
   1b684:	ldr	r0, [fp, #-12]
   1b688:	movw	r1, #0
   1b68c:	cmp	r1, r0
   1b690:	bcs	1b76c <__assert_fail@plt+0xa744>
   1b694:	ldr	r0, [pc, #2840]	; 1c1b4 <__assert_fail@plt+0xb18c>
   1b698:	ldr	r1, [fp, #-12]
   1b69c:	sub	r1, r1, #1
   1b6a0:	cmp	r0, r1
   1b6a4:	bcc	1b758 <__assert_fail@plt+0xa730>
   1b6a8:	b	1b76c <__assert_fail@plt+0xa744>
   1b6ac:	ldr	r0, [pc, #2820]	; 1c1b8 <__assert_fail@plt+0xb190>
   1b6b0:	ldr	r1, [fp, #-16]
   1b6b4:	udiv	r0, r0, r1
   1b6b8:	ldr	r1, [fp, #-12]
   1b6bc:	cmp	r0, r1
   1b6c0:	bcc	1b758 <__assert_fail@plt+0xa730>
   1b6c4:	b	1b76c <__assert_fail@plt+0xa744>
   1b6c8:	ldr	r0, [fp, #-16]
   1b6cc:	cmp	r0, #0
   1b6d0:	bne	1b6d8 <__assert_fail@plt+0xa6b0>
   1b6d4:	b	1b76c <__assert_fail@plt+0xa744>
   1b6d8:	ldr	r0, [fp, #-12]
   1b6dc:	cmp	r0, #0
   1b6e0:	bcs	1b740 <__assert_fail@plt+0xa718>
   1b6e4:	ldr	r0, [fp, #-12]
   1b6e8:	cmn	r0, #1
   1b6ec:	bne	1b724 <__assert_fail@plt+0xa6fc>
   1b6f0:	b	1b70c <__assert_fail@plt+0xa6e4>
   1b6f4:	ldr	r0, [fp, #-16]
   1b6f8:	add	r0, r0, #-2147483648	; 0x80000000
   1b6fc:	movw	r1, #0
   1b700:	cmp	r1, r0
   1b704:	bcc	1b758 <__assert_fail@plt+0xa730>
   1b708:	b	1b76c <__assert_fail@plt+0xa744>
   1b70c:	ldr	r0, [pc, #2720]	; 1c1b4 <__assert_fail@plt+0xb18c>
   1b710:	ldr	r1, [fp, #-16]
   1b714:	sub	r1, r1, #1
   1b718:	cmp	r0, r1
   1b71c:	bcc	1b758 <__assert_fail@plt+0xa730>
   1b720:	b	1b76c <__assert_fail@plt+0xa744>
   1b724:	ldr	r0, [pc, #2700]	; 1c1b8 <__assert_fail@plt+0xb190>
   1b728:	ldr	r1, [fp, #-12]
   1b72c:	udiv	r0, r0, r1
   1b730:	ldr	r1, [fp, #-16]
   1b734:	cmp	r0, r1
   1b738:	bcc	1b758 <__assert_fail@plt+0xa730>
   1b73c:	b	1b76c <__assert_fail@plt+0xa744>
   1b740:	ldr	r0, [pc, #2668]	; 1c1b4 <__assert_fail@plt+0xb18c>
   1b744:	ldr	r1, [fp, #-16]
   1b748:	udiv	r0, r0, r1
   1b74c:	ldr	r1, [fp, #-12]
   1b750:	cmp	r0, r1
   1b754:	bcs	1b76c <__assert_fail@plt+0xa744>
   1b758:	ldr	r0, [fp, #-12]
   1b75c:	ldr	r1, [fp, #-16]
   1b760:	mul	r0, r0, r1
   1b764:	str	r0, [fp, #-20]	; 0xffffffec
   1b768:	b	1c180 <__assert_fail@plt+0xb158>
   1b76c:	ldr	r0, [fp, #-12]
   1b770:	ldr	r1, [fp, #-16]
   1b774:	mul	r0, r0, r1
   1b778:	str	r0, [fp, #-20]	; 0xffffffec
   1b77c:	b	1c198 <__assert_fail@plt+0xb170>
   1b780:	ldr	r0, [fp, #-16]
   1b784:	cmp	r0, #0
   1b788:	bcs	1b894 <__assert_fail@plt+0xa86c>
   1b78c:	ldr	r0, [fp, #-12]
   1b790:	cmp	r0, #0
   1b794:	bcs	1b81c <__assert_fail@plt+0xa7f4>
   1b798:	b	1b7b8 <__assert_fail@plt+0xa790>
   1b79c:	ldr	r0, [fp, #-12]
   1b7a0:	ldr	r1, [fp, #-16]
   1b7a4:	mvn	r2, #0
   1b7a8:	udiv	r1, r2, r1
   1b7ac:	cmp	r0, r1
   1b7b0:	bcc	1b930 <__assert_fail@plt+0xa908>
   1b7b4:	b	1b944 <__assert_fail@plt+0xa91c>
   1b7b8:	b	1b7cc <__assert_fail@plt+0xa7a4>
   1b7bc:	ldr	r0, [fp, #-16]
   1b7c0:	cmp	r0, #1
   1b7c4:	bcc	1b7dc <__assert_fail@plt+0xa7b4>
   1b7c8:	b	1b7e8 <__assert_fail@plt+0xa7c0>
   1b7cc:	ldr	r0, [fp, #-16]
   1b7d0:	movw	r1, #0
   1b7d4:	cmp	r1, r0
   1b7d8:	bcs	1b7e8 <__assert_fail@plt+0xa7c0>
   1b7dc:	movw	r0, #1
   1b7e0:	str	r0, [fp, #-44]	; 0xffffffd4
   1b7e4:	b	1b800 <__assert_fail@plt+0xa7d8>
   1b7e8:	ldr	r0, [fp, #-16]
   1b7ec:	movw	r1, #0
   1b7f0:	sub	r0, r1, r0
   1b7f4:	mvn	r1, #0
   1b7f8:	udiv	r0, r1, r0
   1b7fc:	str	r0, [fp, #-44]	; 0xffffffd4
   1b800:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b804:	ldr	r1, [fp, #-12]
   1b808:	mvn	r2, #0
   1b80c:	sub	r1, r2, r1
   1b810:	cmp	r0, r1
   1b814:	bls	1b930 <__assert_fail@plt+0xa908>
   1b818:	b	1b944 <__assert_fail@plt+0xa91c>
   1b81c:	b	1b824 <__assert_fail@plt+0xa7fc>
   1b820:	b	1b828 <__assert_fail@plt+0xa800>
   1b824:	b	1b878 <__assert_fail@plt+0xa850>
   1b828:	ldr	r0, [fp, #-16]
   1b82c:	cmn	r0, #1
   1b830:	bne	1b878 <__assert_fail@plt+0xa850>
   1b834:	b	1b850 <__assert_fail@plt+0xa828>
   1b838:	ldr	r0, [fp, #-12]
   1b83c:	add	r0, r0, #0
   1b840:	movw	r1, #0
   1b844:	cmp	r1, r0
   1b848:	bcc	1b930 <__assert_fail@plt+0xa908>
   1b84c:	b	1b944 <__assert_fail@plt+0xa91c>
   1b850:	ldr	r0, [fp, #-12]
   1b854:	movw	r1, #0
   1b858:	cmp	r1, r0
   1b85c:	bcs	1b944 <__assert_fail@plt+0xa91c>
   1b860:	ldr	r0, [fp, #-12]
   1b864:	sub	r0, r0, #1
   1b868:	mvn	r1, #0
   1b86c:	cmp	r1, r0
   1b870:	bcc	1b930 <__assert_fail@plt+0xa908>
   1b874:	b	1b944 <__assert_fail@plt+0xa91c>
   1b878:	ldr	r0, [fp, #-16]
   1b87c:	movw	r1, #0
   1b880:	udiv	r0, r1, r0
   1b884:	ldr	r1, [fp, #-12]
   1b888:	cmp	r0, r1
   1b88c:	bcc	1b930 <__assert_fail@plt+0xa908>
   1b890:	b	1b944 <__assert_fail@plt+0xa91c>
   1b894:	ldr	r0, [fp, #-16]
   1b898:	cmp	r0, #0
   1b89c:	bne	1b8a4 <__assert_fail@plt+0xa87c>
   1b8a0:	b	1b944 <__assert_fail@plt+0xa91c>
   1b8a4:	ldr	r0, [fp, #-12]
   1b8a8:	cmp	r0, #0
   1b8ac:	bcs	1b918 <__assert_fail@plt+0xa8f0>
   1b8b0:	b	1b8b8 <__assert_fail@plt+0xa890>
   1b8b4:	b	1b8bc <__assert_fail@plt+0xa894>
   1b8b8:	b	1b8fc <__assert_fail@plt+0xa8d4>
   1b8bc:	ldr	r0, [fp, #-12]
   1b8c0:	cmn	r0, #1
   1b8c4:	bne	1b8fc <__assert_fail@plt+0xa8d4>
   1b8c8:	b	1b8e4 <__assert_fail@plt+0xa8bc>
   1b8cc:	ldr	r0, [fp, #-16]
   1b8d0:	add	r0, r0, #0
   1b8d4:	movw	r1, #0
   1b8d8:	cmp	r1, r0
   1b8dc:	bcc	1b930 <__assert_fail@plt+0xa908>
   1b8e0:	b	1b944 <__assert_fail@plt+0xa91c>
   1b8e4:	ldr	r0, [fp, #-16]
   1b8e8:	sub	r0, r0, #1
   1b8ec:	mvn	r1, #0
   1b8f0:	cmp	r1, r0
   1b8f4:	bcc	1b930 <__assert_fail@plt+0xa908>
   1b8f8:	b	1b944 <__assert_fail@plt+0xa91c>
   1b8fc:	ldr	r0, [fp, #-12]
   1b900:	movw	r1, #0
   1b904:	udiv	r0, r1, r0
   1b908:	ldr	r1, [fp, #-16]
   1b90c:	cmp	r0, r1
   1b910:	bcc	1b930 <__assert_fail@plt+0xa908>
   1b914:	b	1b944 <__assert_fail@plt+0xa91c>
   1b918:	ldr	r0, [fp, #-16]
   1b91c:	mvn	r1, #0
   1b920:	udiv	r0, r1, r0
   1b924:	ldr	r1, [fp, #-12]
   1b928:	cmp	r0, r1
   1b92c:	bcs	1b944 <__assert_fail@plt+0xa91c>
   1b930:	ldr	r0, [fp, #-12]
   1b934:	ldr	r1, [fp, #-16]
   1b938:	mul	r0, r0, r1
   1b93c:	str	r0, [fp, #-20]	; 0xffffffec
   1b940:	b	1c180 <__assert_fail@plt+0xb158>
   1b944:	ldr	r0, [fp, #-12]
   1b948:	ldr	r1, [fp, #-16]
   1b94c:	mul	r0, r0, r1
   1b950:	str	r0, [fp, #-20]	; 0xffffffec
   1b954:	b	1c198 <__assert_fail@plt+0xb170>
   1b958:	b	1b95c <__assert_fail@plt+0xa934>
   1b95c:	b	1bb20 <__assert_fail@plt+0xaaf8>
   1b960:	ldr	r0, [fp, #-16]
   1b964:	cmp	r0, #0
   1b968:	bcs	1ba68 <__assert_fail@plt+0xaa40>
   1b96c:	ldr	r0, [fp, #-12]
   1b970:	cmp	r0, #0
   1b974:	bcs	1b9fc <__assert_fail@plt+0xa9d4>
   1b978:	b	1b998 <__assert_fail@plt+0xa970>
   1b97c:	ldr	r0, [pc, #2096]	; 1c1b4 <__assert_fail@plt+0xb18c>
   1b980:	ldr	r1, [fp, #-12]
   1b984:	ldr	r2, [fp, #-16]
   1b988:	udiv	r0, r0, r2
   1b98c:	cmp	r1, r0
   1b990:	bcc	1baf8 <__assert_fail@plt+0xaad0>
   1b994:	b	1bb0c <__assert_fail@plt+0xaae4>
   1b998:	b	1b9ac <__assert_fail@plt+0xa984>
   1b99c:	ldr	r0, [fp, #-16]
   1b9a0:	cmp	r0, #1
   1b9a4:	bcc	1b9bc <__assert_fail@plt+0xa994>
   1b9a8:	b	1b9c8 <__assert_fail@plt+0xa9a0>
   1b9ac:	ldr	r0, [fp, #-16]
   1b9b0:	movw	r1, #0
   1b9b4:	cmp	r1, r0
   1b9b8:	bcs	1b9c8 <__assert_fail@plt+0xa9a0>
   1b9bc:	movw	r0, #0
   1b9c0:	str	r0, [fp, #-48]	; 0xffffffd0
   1b9c4:	b	1b9e0 <__assert_fail@plt+0xa9b8>
   1b9c8:	ldr	r0, [pc, #2020]	; 1c1b4 <__assert_fail@plt+0xb18c>
   1b9cc:	ldr	r1, [fp, #-16]
   1b9d0:	movw	r2, #0
   1b9d4:	sub	r1, r2, r1
   1b9d8:	udiv	r0, r0, r1
   1b9dc:	str	r0, [fp, #-48]	; 0xffffffd0
   1b9e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b9e4:	ldr	r1, [fp, #-12]
   1b9e8:	mvn	r2, #0
   1b9ec:	sub	r1, r2, r1
   1b9f0:	cmp	r0, r1
   1b9f4:	bls	1baf8 <__assert_fail@plt+0xaad0>
   1b9f8:	b	1bb0c <__assert_fail@plt+0xaae4>
   1b9fc:	ldr	r0, [fp, #-16]
   1ba00:	cmn	r0, #1
   1ba04:	bne	1ba4c <__assert_fail@plt+0xaa24>
   1ba08:	b	1ba24 <__assert_fail@plt+0xa9fc>
   1ba0c:	ldr	r0, [fp, #-12]
   1ba10:	add	r0, r0, #-2147483648	; 0x80000000
   1ba14:	movw	r1, #0
   1ba18:	cmp	r1, r0
   1ba1c:	bcc	1baf8 <__assert_fail@plt+0xaad0>
   1ba20:	b	1bb0c <__assert_fail@plt+0xaae4>
   1ba24:	ldr	r0, [fp, #-12]
   1ba28:	movw	r1, #0
   1ba2c:	cmp	r1, r0
   1ba30:	bcs	1bb0c <__assert_fail@plt+0xaae4>
   1ba34:	ldr	r0, [pc, #1912]	; 1c1b4 <__assert_fail@plt+0xb18c>
   1ba38:	ldr	r1, [fp, #-12]
   1ba3c:	sub	r1, r1, #1
   1ba40:	cmp	r0, r1
   1ba44:	bcc	1baf8 <__assert_fail@plt+0xaad0>
   1ba48:	b	1bb0c <__assert_fail@plt+0xaae4>
   1ba4c:	ldr	r0, [pc, #1892]	; 1c1b8 <__assert_fail@plt+0xb190>
   1ba50:	ldr	r1, [fp, #-16]
   1ba54:	udiv	r0, r0, r1
   1ba58:	ldr	r1, [fp, #-12]
   1ba5c:	cmp	r0, r1
   1ba60:	bcc	1baf8 <__assert_fail@plt+0xaad0>
   1ba64:	b	1bb0c <__assert_fail@plt+0xaae4>
   1ba68:	ldr	r0, [fp, #-16]
   1ba6c:	cmp	r0, #0
   1ba70:	bne	1ba78 <__assert_fail@plt+0xaa50>
   1ba74:	b	1bb0c <__assert_fail@plt+0xaae4>
   1ba78:	ldr	r0, [fp, #-12]
   1ba7c:	cmp	r0, #0
   1ba80:	bcs	1bae0 <__assert_fail@plt+0xaab8>
   1ba84:	ldr	r0, [fp, #-12]
   1ba88:	cmn	r0, #1
   1ba8c:	bne	1bac4 <__assert_fail@plt+0xaa9c>
   1ba90:	b	1baac <__assert_fail@plt+0xaa84>
   1ba94:	ldr	r0, [fp, #-16]
   1ba98:	add	r0, r0, #-2147483648	; 0x80000000
   1ba9c:	movw	r1, #0
   1baa0:	cmp	r1, r0
   1baa4:	bcc	1baf8 <__assert_fail@plt+0xaad0>
   1baa8:	b	1bb0c <__assert_fail@plt+0xaae4>
   1baac:	ldr	r0, [pc, #1792]	; 1c1b4 <__assert_fail@plt+0xb18c>
   1bab0:	ldr	r1, [fp, #-16]
   1bab4:	sub	r1, r1, #1
   1bab8:	cmp	r0, r1
   1babc:	bcc	1baf8 <__assert_fail@plt+0xaad0>
   1bac0:	b	1bb0c <__assert_fail@plt+0xaae4>
   1bac4:	ldr	r0, [pc, #1772]	; 1c1b8 <__assert_fail@plt+0xb190>
   1bac8:	ldr	r1, [fp, #-12]
   1bacc:	udiv	r0, r0, r1
   1bad0:	ldr	r1, [fp, #-16]
   1bad4:	cmp	r0, r1
   1bad8:	bcc	1baf8 <__assert_fail@plt+0xaad0>
   1badc:	b	1bb0c <__assert_fail@plt+0xaae4>
   1bae0:	ldr	r0, [pc, #1740]	; 1c1b4 <__assert_fail@plt+0xb18c>
   1bae4:	ldr	r1, [fp, #-16]
   1bae8:	udiv	r0, r0, r1
   1baec:	ldr	r1, [fp, #-12]
   1baf0:	cmp	r0, r1
   1baf4:	bcs	1bb0c <__assert_fail@plt+0xaae4>
   1baf8:	ldr	r0, [fp, #-12]
   1bafc:	ldr	r1, [fp, #-16]
   1bb00:	mul	r0, r0, r1
   1bb04:	str	r0, [fp, #-20]	; 0xffffffec
   1bb08:	b	1c180 <__assert_fail@plt+0xb158>
   1bb0c:	ldr	r0, [fp, #-12]
   1bb10:	ldr	r1, [fp, #-16]
   1bb14:	mul	r0, r0, r1
   1bb18:	str	r0, [fp, #-20]	; 0xffffffec
   1bb1c:	b	1c198 <__assert_fail@plt+0xb170>
   1bb20:	ldr	r0, [fp, #-16]
   1bb24:	cmp	r0, #0
   1bb28:	bcs	1bc34 <__assert_fail@plt+0xac0c>
   1bb2c:	ldr	r0, [fp, #-12]
   1bb30:	cmp	r0, #0
   1bb34:	bcs	1bbbc <__assert_fail@plt+0xab94>
   1bb38:	b	1bb58 <__assert_fail@plt+0xab30>
   1bb3c:	ldr	r0, [fp, #-12]
   1bb40:	ldr	r1, [fp, #-16]
   1bb44:	mvn	r2, #0
   1bb48:	udiv	r1, r2, r1
   1bb4c:	cmp	r0, r1
   1bb50:	bcc	1bcd0 <__assert_fail@plt+0xaca8>
   1bb54:	b	1bce4 <__assert_fail@plt+0xacbc>
   1bb58:	b	1bb6c <__assert_fail@plt+0xab44>
   1bb5c:	ldr	r0, [fp, #-16]
   1bb60:	cmp	r0, #1
   1bb64:	bcc	1bb7c <__assert_fail@plt+0xab54>
   1bb68:	b	1bb88 <__assert_fail@plt+0xab60>
   1bb6c:	ldr	r0, [fp, #-16]
   1bb70:	movw	r1, #0
   1bb74:	cmp	r1, r0
   1bb78:	bcs	1bb88 <__assert_fail@plt+0xab60>
   1bb7c:	movw	r0, #1
   1bb80:	str	r0, [fp, #-52]	; 0xffffffcc
   1bb84:	b	1bba0 <__assert_fail@plt+0xab78>
   1bb88:	ldr	r0, [fp, #-16]
   1bb8c:	movw	r1, #0
   1bb90:	sub	r0, r1, r0
   1bb94:	mvn	r1, #0
   1bb98:	udiv	r0, r1, r0
   1bb9c:	str	r0, [fp, #-52]	; 0xffffffcc
   1bba0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1bba4:	ldr	r1, [fp, #-12]
   1bba8:	mvn	r2, #0
   1bbac:	sub	r1, r2, r1
   1bbb0:	cmp	r0, r1
   1bbb4:	bls	1bcd0 <__assert_fail@plt+0xaca8>
   1bbb8:	b	1bce4 <__assert_fail@plt+0xacbc>
   1bbbc:	b	1bbc4 <__assert_fail@plt+0xab9c>
   1bbc0:	b	1bbc8 <__assert_fail@plt+0xaba0>
   1bbc4:	b	1bc18 <__assert_fail@plt+0xabf0>
   1bbc8:	ldr	r0, [fp, #-16]
   1bbcc:	cmn	r0, #1
   1bbd0:	bne	1bc18 <__assert_fail@plt+0xabf0>
   1bbd4:	b	1bbf0 <__assert_fail@plt+0xabc8>
   1bbd8:	ldr	r0, [fp, #-12]
   1bbdc:	add	r0, r0, #0
   1bbe0:	movw	r1, #0
   1bbe4:	cmp	r1, r0
   1bbe8:	bcc	1bcd0 <__assert_fail@plt+0xaca8>
   1bbec:	b	1bce4 <__assert_fail@plt+0xacbc>
   1bbf0:	ldr	r0, [fp, #-12]
   1bbf4:	movw	r1, #0
   1bbf8:	cmp	r1, r0
   1bbfc:	bcs	1bce4 <__assert_fail@plt+0xacbc>
   1bc00:	ldr	r0, [fp, #-12]
   1bc04:	sub	r0, r0, #1
   1bc08:	mvn	r1, #0
   1bc0c:	cmp	r1, r0
   1bc10:	bcc	1bcd0 <__assert_fail@plt+0xaca8>
   1bc14:	b	1bce4 <__assert_fail@plt+0xacbc>
   1bc18:	ldr	r0, [fp, #-16]
   1bc1c:	movw	r1, #0
   1bc20:	udiv	r0, r1, r0
   1bc24:	ldr	r1, [fp, #-12]
   1bc28:	cmp	r0, r1
   1bc2c:	bcc	1bcd0 <__assert_fail@plt+0xaca8>
   1bc30:	b	1bce4 <__assert_fail@plt+0xacbc>
   1bc34:	ldr	r0, [fp, #-16]
   1bc38:	cmp	r0, #0
   1bc3c:	bne	1bc44 <__assert_fail@plt+0xac1c>
   1bc40:	b	1bce4 <__assert_fail@plt+0xacbc>
   1bc44:	ldr	r0, [fp, #-12]
   1bc48:	cmp	r0, #0
   1bc4c:	bcs	1bcb8 <__assert_fail@plt+0xac90>
   1bc50:	b	1bc58 <__assert_fail@plt+0xac30>
   1bc54:	b	1bc5c <__assert_fail@plt+0xac34>
   1bc58:	b	1bc9c <__assert_fail@plt+0xac74>
   1bc5c:	ldr	r0, [fp, #-12]
   1bc60:	cmn	r0, #1
   1bc64:	bne	1bc9c <__assert_fail@plt+0xac74>
   1bc68:	b	1bc84 <__assert_fail@plt+0xac5c>
   1bc6c:	ldr	r0, [fp, #-16]
   1bc70:	add	r0, r0, #0
   1bc74:	movw	r1, #0
   1bc78:	cmp	r1, r0
   1bc7c:	bcc	1bcd0 <__assert_fail@plt+0xaca8>
   1bc80:	b	1bce4 <__assert_fail@plt+0xacbc>
   1bc84:	ldr	r0, [fp, #-16]
   1bc88:	sub	r0, r0, #1
   1bc8c:	mvn	r1, #0
   1bc90:	cmp	r1, r0
   1bc94:	bcc	1bcd0 <__assert_fail@plt+0xaca8>
   1bc98:	b	1bce4 <__assert_fail@plt+0xacbc>
   1bc9c:	ldr	r0, [fp, #-12]
   1bca0:	movw	r1, #0
   1bca4:	udiv	r0, r1, r0
   1bca8:	ldr	r1, [fp, #-16]
   1bcac:	cmp	r0, r1
   1bcb0:	bcc	1bcd0 <__assert_fail@plt+0xaca8>
   1bcb4:	b	1bce4 <__assert_fail@plt+0xacbc>
   1bcb8:	ldr	r0, [fp, #-16]
   1bcbc:	mvn	r1, #0
   1bcc0:	udiv	r0, r1, r0
   1bcc4:	ldr	r1, [fp, #-12]
   1bcc8:	cmp	r0, r1
   1bccc:	bcs	1bce4 <__assert_fail@plt+0xacbc>
   1bcd0:	ldr	r0, [fp, #-12]
   1bcd4:	ldr	r1, [fp, #-16]
   1bcd8:	mul	r0, r0, r1
   1bcdc:	str	r0, [fp, #-20]	; 0xffffffec
   1bce0:	b	1c180 <__assert_fail@plt+0xb158>
   1bce4:	ldr	r0, [fp, #-12]
   1bce8:	ldr	r1, [fp, #-16]
   1bcec:	mul	r0, r0, r1
   1bcf0:	str	r0, [fp, #-20]	; 0xffffffec
   1bcf4:	b	1c198 <__assert_fail@plt+0xb170>
   1bcf8:	b	1bf4c <__assert_fail@plt+0xaf24>
   1bcfc:	ldr	r0, [fp, #-16]
   1bd00:	cmp	r0, #0
   1bd04:	bcs	1be64 <__assert_fail@plt+0xae3c>
   1bd08:	ldr	r0, [fp, #-12]
   1bd0c:	cmp	r0, #0
   1bd10:	bcs	1bde0 <__assert_fail@plt+0xadb8>
   1bd14:	b	1bd18 <__assert_fail@plt+0xacf0>
   1bd18:	ldr	r0, [fp, #-12]
   1bd1c:	ldr	r2, [fp, #-16]
   1bd20:	mvn	r1, #0
   1bd24:	mvn	r3, #-2147483648	; 0x80000000
   1bd28:	mov	ip, #0
   1bd2c:	str	r0, [fp, #-56]	; 0xffffffc8
   1bd30:	mov	r0, r1
   1bd34:	mov	r1, r3
   1bd38:	mov	r3, ip
   1bd3c:	bl	1c48c <__assert_fail@plt+0xb464>
   1bd40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bd44:	subs	r0, r2, r0
   1bd48:	rscs	r1, r1, #0
   1bd4c:	str	r0, [fp, #-60]	; 0xffffffc4
   1bd50:	str	r1, [fp, #-64]	; 0xffffffc0
   1bd54:	blt	1bf24 <__assert_fail@plt+0xaefc>
   1bd58:	b	1bf38 <__assert_fail@plt+0xaf10>
   1bd5c:	b	1bd70 <__assert_fail@plt+0xad48>
   1bd60:	ldr	r0, [fp, #-16]
   1bd64:	cmp	r0, #1
   1bd68:	bcc	1bd80 <__assert_fail@plt+0xad58>
   1bd6c:	b	1bd94 <__assert_fail@plt+0xad6c>
   1bd70:	ldr	r0, [fp, #-16]
   1bd74:	movw	r1, #0
   1bd78:	cmp	r1, r0
   1bd7c:	bcs	1bd94 <__assert_fail@plt+0xad6c>
   1bd80:	mov	r0, #0
   1bd84:	mvn	r1, #0
   1bd88:	str	r1, [fp, #-68]	; 0xffffffbc
   1bd8c:	str	r0, [fp, #-72]	; 0xffffffb8
   1bd90:	b	1bdb8 <__assert_fail@plt+0xad90>
   1bd94:	ldr	r0, [fp, #-16]
   1bd98:	rsb	r2, r0, #0
   1bd9c:	mvn	r0, #0
   1bda0:	mvn	r1, #-2147483648	; 0x80000000
   1bda4:	mov	r3, #0
   1bda8:	bl	1c48c <__assert_fail@plt+0xb464>
   1bdac:	str	r0, [fp, #-68]	; 0xffffffbc
   1bdb0:	str	r1, [fp, #-72]	; 0xffffffb8
   1bdb4:	b	1bdb8 <__assert_fail@plt+0xad90>
   1bdb8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1bdbc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1bdc0:	ldr	r2, [fp, #-12]
   1bdc4:	mvn	r2, r2
   1bdc8:	subs	r1, r2, r1
   1bdcc:	rscs	r0, r0, #0
   1bdd0:	str	r1, [fp, #-76]	; 0xffffffb4
   1bdd4:	str	r0, [fp, #-80]	; 0xffffffb0
   1bdd8:	bge	1bf24 <__assert_fail@plt+0xaefc>
   1bddc:	b	1bf38 <__assert_fail@plt+0xaf10>
   1bde0:	ldr	r0, [fp, #-16]
   1bde4:	cmn	r0, #1
   1bde8:	bne	1be30 <__assert_fail@plt+0xae08>
   1bdec:	b	1be10 <__assert_fail@plt+0xade8>
   1bdf0:	ldr	r0, [fp, #-12]
   1bdf4:	rsbs	r0, r0, #0
   1bdf8:	mov	r1, #0
   1bdfc:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1be00:	str	r0, [fp, #-84]	; 0xffffffac
   1be04:	str	r1, [sp, #88]	; 0x58
   1be08:	blt	1bf24 <__assert_fail@plt+0xaefc>
   1be0c:	b	1bf38 <__assert_fail@plt+0xaf10>
   1be10:	ldr	r0, [fp, #-12]
   1be14:	movw	r1, #0
   1be18:	cmp	r1, r0
   1be1c:	bcs	1bf38 <__assert_fail@plt+0xaf10>
   1be20:	mov	r0, #0
   1be24:	cmp	r0, #0
   1be28:	bne	1bf24 <__assert_fail@plt+0xaefc>
   1be2c:	b	1bf38 <__assert_fail@plt+0xaf10>
   1be30:	ldr	r2, [fp, #-16]
   1be34:	mov	r1, #-2147483648	; 0x80000000
   1be38:	mov	r0, #0
   1be3c:	str	r0, [sp, #84]	; 0x54
   1be40:	ldr	r3, [sp, #84]	; 0x54
   1be44:	bl	1c3b8 <__assert_fail@plt+0xb390>
   1be48:	ldr	r2, [fp, #-12]
   1be4c:	subs	r0, r0, r2
   1be50:	sbcs	r1, r1, #0
   1be54:	str	r0, [sp, #80]	; 0x50
   1be58:	str	r1, [sp, #76]	; 0x4c
   1be5c:	blt	1bf24 <__assert_fail@plt+0xaefc>
   1be60:	b	1bf38 <__assert_fail@plt+0xaf10>
   1be64:	ldr	r0, [fp, #-16]
   1be68:	cmp	r0, #0
   1be6c:	bne	1be74 <__assert_fail@plt+0xae4c>
   1be70:	b	1bf38 <__assert_fail@plt+0xaf10>
   1be74:	ldr	r0, [fp, #-12]
   1be78:	cmp	r0, #0
   1be7c:	bcs	1bef4 <__assert_fail@plt+0xaecc>
   1be80:	ldr	r0, [fp, #-12]
   1be84:	cmn	r0, #1
   1be88:	bne	1bec0 <__assert_fail@plt+0xae98>
   1be8c:	b	1beb0 <__assert_fail@plt+0xae88>
   1be90:	ldr	r0, [fp, #-16]
   1be94:	rsbs	r0, r0, #0
   1be98:	mov	r1, #0
   1be9c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1bea0:	str	r0, [sp, #72]	; 0x48
   1bea4:	str	r1, [sp, #68]	; 0x44
   1bea8:	blt	1bf24 <__assert_fail@plt+0xaefc>
   1beac:	b	1bf38 <__assert_fail@plt+0xaf10>
   1beb0:	mov	r0, #0
   1beb4:	cmp	r0, #0
   1beb8:	bne	1bf24 <__assert_fail@plt+0xaefc>
   1bebc:	b	1bf38 <__assert_fail@plt+0xaf10>
   1bec0:	ldr	r2, [fp, #-12]
   1bec4:	mov	r1, #-2147483648	; 0x80000000
   1bec8:	mov	r0, #0
   1becc:	str	r0, [sp, #64]	; 0x40
   1bed0:	ldr	r3, [sp, #64]	; 0x40
   1bed4:	bl	1c3b8 <__assert_fail@plt+0xb390>
   1bed8:	ldr	r2, [fp, #-16]
   1bedc:	subs	r0, r0, r2
   1bee0:	sbcs	r1, r1, #0
   1bee4:	str	r0, [sp, #60]	; 0x3c
   1bee8:	str	r1, [sp, #56]	; 0x38
   1beec:	blt	1bf24 <__assert_fail@plt+0xaefc>
   1bef0:	b	1bf38 <__assert_fail@plt+0xaf10>
   1bef4:	ldr	r2, [fp, #-16]
   1bef8:	mvn	r0, #0
   1befc:	mvn	r1, #-2147483648	; 0x80000000
   1bf00:	mov	r3, #0
   1bf04:	bl	1c48c <__assert_fail@plt+0xb464>
   1bf08:	ldr	r2, [fp, #-12]
   1bf0c:	subs	r0, r0, r2
   1bf10:	sbcs	r1, r1, #0
   1bf14:	str	r0, [sp, #52]	; 0x34
   1bf18:	str	r1, [sp, #48]	; 0x30
   1bf1c:	bge	1bf38 <__assert_fail@plt+0xaf10>
   1bf20:	b	1bf24 <__assert_fail@plt+0xaefc>
   1bf24:	ldr	r0, [fp, #-12]
   1bf28:	ldr	r1, [fp, #-16]
   1bf2c:	mul	r0, r0, r1
   1bf30:	str	r0, [fp, #-20]	; 0xffffffec
   1bf34:	b	1c180 <__assert_fail@plt+0xb158>
   1bf38:	ldr	r0, [fp, #-12]
   1bf3c:	ldr	r1, [fp, #-16]
   1bf40:	mul	r0, r0, r1
   1bf44:	str	r0, [fp, #-20]	; 0xffffffec
   1bf48:	b	1c198 <__assert_fail@plt+0xb170>
   1bf4c:	ldr	r0, [fp, #-16]
   1bf50:	cmp	r0, #0
   1bf54:	bcs	1c0a0 <__assert_fail@plt+0xb078>
   1bf58:	ldr	r0, [fp, #-12]
   1bf5c:	cmp	r0, #0
   1bf60:	bcs	1c028 <__assert_fail@plt+0xb000>
   1bf64:	b	1bfa0 <__assert_fail@plt+0xaf78>
   1bf68:	ldr	r0, [fp, #-12]
   1bf6c:	ldr	r2, [fp, #-16]
   1bf70:	mvn	r1, #0
   1bf74:	mov	r3, #0
   1bf78:	str	r0, [sp, #44]	; 0x2c
   1bf7c:	mov	r0, r1
   1bf80:	bl	1c48c <__assert_fail@plt+0xb464>
   1bf84:	ldr	r2, [sp, #44]	; 0x2c
   1bf88:	subs	r0, r2, r0
   1bf8c:	rscs	r1, r1, #0
   1bf90:	str	r0, [sp, #40]	; 0x28
   1bf94:	str	r1, [sp, #36]	; 0x24
   1bf98:	bcc	1c158 <__assert_fail@plt+0xb130>
   1bf9c:	b	1c16c <__assert_fail@plt+0xb144>
   1bfa0:	b	1bfb4 <__assert_fail@plt+0xaf8c>
   1bfa4:	ldr	r0, [fp, #-16]
   1bfa8:	cmp	r0, #1
   1bfac:	bcc	1bfc4 <__assert_fail@plt+0xaf9c>
   1bfb0:	b	1bfd8 <__assert_fail@plt+0xafb0>
   1bfb4:	ldr	r0, [fp, #-16]
   1bfb8:	movw	r1, #0
   1bfbc:	cmp	r1, r0
   1bfc0:	bcs	1bfd8 <__assert_fail@plt+0xafb0>
   1bfc4:	mov	r0, #1
   1bfc8:	mvn	r1, #0
   1bfcc:	str	r1, [sp, #32]
   1bfd0:	str	r0, [sp, #28]
   1bfd4:	b	1c000 <__assert_fail@plt+0xafd8>
   1bfd8:	ldr	r0, [fp, #-16]
   1bfdc:	rsb	r2, r0, #0
   1bfe0:	mvn	r0, #0
   1bfe4:	mov	r3, #0
   1bfe8:	str	r0, [sp, #24]
   1bfec:	ldr	r1, [sp, #24]
   1bff0:	bl	1c48c <__assert_fail@plt+0xb464>
   1bff4:	str	r0, [sp, #32]
   1bff8:	str	r1, [sp, #28]
   1bffc:	b	1c000 <__assert_fail@plt+0xafd8>
   1c000:	ldr	r0, [sp, #28]
   1c004:	ldr	r1, [sp, #32]
   1c008:	ldr	r2, [fp, #-12]
   1c00c:	mvn	r2, r2
   1c010:	subs	r1, r2, r1
   1c014:	rscs	r0, r0, #0
   1c018:	str	r1, [sp, #20]
   1c01c:	str	r0, [sp, #16]
   1c020:	bcs	1c158 <__assert_fail@plt+0xb130>
   1c024:	b	1c16c <__assert_fail@plt+0xb144>
   1c028:	b	1c030 <__assert_fail@plt+0xb008>
   1c02c:	b	1c034 <__assert_fail@plt+0xb00c>
   1c030:	b	1c084 <__assert_fail@plt+0xb05c>
   1c034:	ldr	r0, [fp, #-16]
   1c038:	cmn	r0, #1
   1c03c:	bne	1c084 <__assert_fail@plt+0xb05c>
   1c040:	b	1c05c <__assert_fail@plt+0xb034>
   1c044:	ldr	r0, [fp, #-12]
   1c048:	add	r0, r0, #0
   1c04c:	movw	r1, #0
   1c050:	cmp	r1, r0
   1c054:	bcc	1c158 <__assert_fail@plt+0xb130>
   1c058:	b	1c16c <__assert_fail@plt+0xb144>
   1c05c:	ldr	r0, [fp, #-12]
   1c060:	movw	r1, #0
   1c064:	cmp	r1, r0
   1c068:	bcs	1c16c <__assert_fail@plt+0xb144>
   1c06c:	ldr	r0, [fp, #-12]
   1c070:	sub	r0, r0, #1
   1c074:	mvn	r1, #0
   1c078:	cmp	r1, r0
   1c07c:	bcc	1c158 <__assert_fail@plt+0xb130>
   1c080:	b	1c16c <__assert_fail@plt+0xb144>
   1c084:	ldr	r0, [fp, #-16]
   1c088:	movw	r1, #0
   1c08c:	udiv	r0, r1, r0
   1c090:	ldr	r1, [fp, #-12]
   1c094:	cmp	r0, r1
   1c098:	bcc	1c158 <__assert_fail@plt+0xb130>
   1c09c:	b	1c16c <__assert_fail@plt+0xb144>
   1c0a0:	ldr	r0, [fp, #-16]
   1c0a4:	cmp	r0, #0
   1c0a8:	bne	1c0b0 <__assert_fail@plt+0xb088>
   1c0ac:	b	1c16c <__assert_fail@plt+0xb144>
   1c0b0:	ldr	r0, [fp, #-12]
   1c0b4:	cmp	r0, #0
   1c0b8:	bcs	1c124 <__assert_fail@plt+0xb0fc>
   1c0bc:	b	1c0c4 <__assert_fail@plt+0xb09c>
   1c0c0:	b	1c0c8 <__assert_fail@plt+0xb0a0>
   1c0c4:	b	1c108 <__assert_fail@plt+0xb0e0>
   1c0c8:	ldr	r0, [fp, #-12]
   1c0cc:	cmn	r0, #1
   1c0d0:	bne	1c108 <__assert_fail@plt+0xb0e0>
   1c0d4:	b	1c0f0 <__assert_fail@plt+0xb0c8>
   1c0d8:	ldr	r0, [fp, #-16]
   1c0dc:	add	r0, r0, #0
   1c0e0:	movw	r1, #0
   1c0e4:	cmp	r1, r0
   1c0e8:	bcc	1c158 <__assert_fail@plt+0xb130>
   1c0ec:	b	1c16c <__assert_fail@plt+0xb144>
   1c0f0:	ldr	r0, [fp, #-16]
   1c0f4:	sub	r0, r0, #1
   1c0f8:	mvn	r1, #0
   1c0fc:	cmp	r1, r0
   1c100:	bcc	1c158 <__assert_fail@plt+0xb130>
   1c104:	b	1c16c <__assert_fail@plt+0xb144>
   1c108:	ldr	r0, [fp, #-12]
   1c10c:	movw	r1, #0
   1c110:	udiv	r0, r1, r0
   1c114:	ldr	r1, [fp, #-16]
   1c118:	cmp	r0, r1
   1c11c:	bcc	1c158 <__assert_fail@plt+0xb130>
   1c120:	b	1c16c <__assert_fail@plt+0xb144>
   1c124:	ldr	r2, [fp, #-16]
   1c128:	mvn	r0, #0
   1c12c:	mov	r3, #0
   1c130:	str	r0, [sp, #12]
   1c134:	ldr	r1, [sp, #12]
   1c138:	bl	1c48c <__assert_fail@plt+0xb464>
   1c13c:	ldr	r2, [fp, #-12]
   1c140:	subs	r0, r0, r2
   1c144:	sbcs	r1, r1, #0
   1c148:	str	r0, [sp, #8]
   1c14c:	str	r1, [sp, #4]
   1c150:	bcs	1c16c <__assert_fail@plt+0xb144>
   1c154:	b	1c158 <__assert_fail@plt+0xb130>
   1c158:	ldr	r0, [fp, #-12]
   1c15c:	ldr	r1, [fp, #-16]
   1c160:	mul	r0, r0, r1
   1c164:	str	r0, [fp, #-20]	; 0xffffffec
   1c168:	b	1c180 <__assert_fail@plt+0xb158>
   1c16c:	ldr	r0, [fp, #-12]
   1c170:	ldr	r1, [fp, #-16]
   1c174:	mul	r0, r0, r1
   1c178:	str	r0, [fp, #-20]	; 0xffffffec
   1c17c:	b	1c198 <__assert_fail@plt+0xb170>
   1c180:	bl	10f74 <__errno_location@plt>
   1c184:	movw	lr, #12
   1c188:	str	lr, [r0]
   1c18c:	movw	r0, #0
   1c190:	str	r0, [fp, #-4]
   1c194:	b	1c1a8 <__assert_fail@plt+0xb180>
   1c198:	ldr	r0, [fp, #-8]
   1c19c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c1a0:	bl	19ffc <__assert_fail@plt+0x8fd4>
   1c1a4:	str	r0, [fp, #-4]
   1c1a8:	ldr	r0, [fp, #-4]
   1c1ac:	mov	sp, fp
   1c1b0:	pop	{fp, pc}
   1c1b4:	svcvc	0x00ffffff
   1c1b8:	andhi	r0, r0, r0
   1c1bc:			; <UNDEFINED> instruction: 0xffff8000
   1c1c0:	push	{r4, r5, fp, lr}
   1c1c4:	add	fp, sp, #8
   1c1c8:	sub	sp, sp, #272	; 0x110
   1c1cc:	add	r1, sp, #7
   1c1d0:	str	r0, [fp, #-16]
   1c1d4:	ldr	r0, [fp, #-16]
   1c1d8:	movw	r2, #257	; 0x101
   1c1dc:	bl	1c25c <__assert_fail@plt+0xb234>
   1c1e0:	cmp	r0, #0
   1c1e4:	beq	1c1f8 <__assert_fail@plt+0xb1d0>
   1c1e8:	movw	r0, #0
   1c1ec:	and	r0, r0, #1
   1c1f0:	strb	r0, [fp, #-9]
   1c1f4:	b	1c24c <__assert_fail@plt+0xb224>
   1c1f8:	add	r0, sp, #7
   1c1fc:	movw	r1, #53072	; 0xcf50
   1c200:	movt	r1, #1
   1c204:	bl	10df4 <strcmp@plt>
   1c208:	cmp	r0, #0
   1c20c:	movw	r0, #1
   1c210:	str	r0, [sp]
   1c214:	beq	1c238 <__assert_fail@plt+0xb210>
   1c218:	add	r0, sp, #7
   1c21c:	movw	r1, #53074	; 0xcf52
   1c220:	movt	r1, #1
   1c224:	bl	10df4 <strcmp@plt>
   1c228:	cmp	r0, #0
   1c22c:	movw	r0, #0
   1c230:	moveq	r0, #1
   1c234:	str	r0, [sp]
   1c238:	ldr	r0, [sp]
   1c23c:	mvn	r1, #0
   1c240:	eor	r0, r0, r1
   1c244:	and	r0, r0, #1
   1c248:	strb	r0, [fp, #-9]
   1c24c:	ldrb	r0, [fp, #-9]
   1c250:	and	r0, r0, #1
   1c254:	sub	sp, fp, #8
   1c258:	pop	{r4, r5, fp, pc}
   1c25c:	push	{fp, lr}
   1c260:	mov	fp, sp
   1c264:	sub	sp, sp, #16
   1c268:	str	r0, [fp, #-4]
   1c26c:	str	r1, [sp, #8]
   1c270:	str	r2, [sp, #4]
   1c274:	ldr	r0, [fp, #-4]
   1c278:	ldr	r1, [sp, #8]
   1c27c:	ldr	r2, [sp, #4]
   1c280:	bl	1c28c <__assert_fail@plt+0xb264>
   1c284:	mov	sp, fp
   1c288:	pop	{fp, pc}
   1c28c:	push	{fp, lr}
   1c290:	mov	fp, sp
   1c294:	sub	sp, sp, #24
   1c298:	str	r0, [fp, #-8]
   1c29c:	str	r1, [sp, #12]
   1c2a0:	str	r2, [sp, #8]
   1c2a4:	ldr	r0, [fp, #-8]
   1c2a8:	bl	1c38c <__assert_fail@plt+0xb364>
   1c2ac:	str	r0, [sp, #4]
   1c2b0:	ldr	r0, [sp, #4]
   1c2b4:	movw	r1, #0
   1c2b8:	cmp	r0, r1
   1c2bc:	bne	1c2e4 <__assert_fail@plt+0xb2bc>
   1c2c0:	ldr	r0, [sp, #8]
   1c2c4:	cmp	r0, #0
   1c2c8:	bls	1c2d8 <__assert_fail@plt+0xb2b0>
   1c2cc:	ldr	r0, [sp, #12]
   1c2d0:	movw	r1, #0
   1c2d4:	strb	r1, [r0]
   1c2d8:	movw	r0, #22
   1c2dc:	str	r0, [fp, #-4]
   1c2e0:	b	1c360 <__assert_fail@plt+0xb338>
   1c2e4:	ldr	r0, [sp, #4]
   1c2e8:	bl	10f50 <strlen@plt>
   1c2ec:	str	r0, [sp]
   1c2f0:	ldr	r0, [sp]
   1c2f4:	ldr	lr, [sp, #8]
   1c2f8:	cmp	r0, lr
   1c2fc:	bcs	1c320 <__assert_fail@plt+0xb2f8>
   1c300:	ldr	r0, [sp, #12]
   1c304:	ldr	r1, [sp, #4]
   1c308:	ldr	r2, [sp]
   1c30c:	add	r2, r2, #1
   1c310:	bl	10e30 <memcpy@plt>
   1c314:	movw	r0, #0
   1c318:	str	r0, [fp, #-4]
   1c31c:	b	1c360 <__assert_fail@plt+0xb338>
   1c320:	ldr	r0, [sp, #8]
   1c324:	cmp	r0, #0
   1c328:	bls	1c358 <__assert_fail@plt+0xb330>
   1c32c:	ldr	r0, [sp, #12]
   1c330:	ldr	r1, [sp, #4]
   1c334:	ldr	r2, [sp, #8]
   1c338:	sub	r2, r2, #1
   1c33c:	bl	10e30 <memcpy@plt>
   1c340:	ldr	r0, [sp, #12]
   1c344:	ldr	r1, [sp, #8]
   1c348:	sub	r1, r1, #1
   1c34c:	add	r0, r0, r1
   1c350:	movw	r1, #0
   1c354:	strb	r1, [r0]
   1c358:	movw	r0, #34	; 0x22
   1c35c:	str	r0, [fp, #-4]
   1c360:	ldr	r0, [fp, #-4]
   1c364:	mov	sp, fp
   1c368:	pop	{fp, pc}
   1c36c:	push	{fp, lr}
   1c370:	mov	fp, sp
   1c374:	sub	sp, sp, #8
   1c378:	str	r0, [sp, #4]
   1c37c:	ldr	r0, [sp, #4]
   1c380:	bl	1c38c <__assert_fail@plt+0xb364>
   1c384:	mov	sp, fp
   1c388:	pop	{fp, pc}
   1c38c:	push	{fp, lr}
   1c390:	mov	fp, sp
   1c394:	sub	sp, sp, #8
   1c398:	str	r0, [sp, #4]
   1c39c:	ldr	r0, [sp, #4]
   1c3a0:	movw	r1, #0
   1c3a4:	bl	10fc8 <setlocale@plt>
   1c3a8:	str	r0, [sp]
   1c3ac:	ldr	r0, [sp]
   1c3b0:	mov	sp, fp
   1c3b4:	pop	{fp, pc}
   1c3b8:	cmp	r3, #0
   1c3bc:	cmpeq	r2, #0
   1c3c0:	bne	1c3e4 <__assert_fail@plt+0xb3bc>
   1c3c4:	cmp	r1, #0
   1c3c8:	movlt	r1, #-2147483648	; 0x80000000
   1c3cc:	movlt	r0, #0
   1c3d0:	blt	1c3e0 <__assert_fail@plt+0xb3b8>
   1c3d4:	cmpeq	r0, #0
   1c3d8:	mvnne	r1, #-2147483648	; 0x80000000
   1c3dc:	mvnne	r0, #0
   1c3e0:	b	1c4c8 <__assert_fail@plt+0xb4a0>
   1c3e4:	sub	sp, sp, #8
   1c3e8:	push	{sp, lr}
   1c3ec:	cmp	r1, #0
   1c3f0:	blt	1c410 <__assert_fail@plt+0xb3e8>
   1c3f4:	cmp	r3, #0
   1c3f8:	blt	1c444 <__assert_fail@plt+0xb41c>
   1c3fc:	bl	1c4d8 <__assert_fail@plt+0xb4b0>
   1c400:	ldr	lr, [sp, #4]
   1c404:	add	sp, sp, #8
   1c408:	pop	{r2, r3}
   1c40c:	bx	lr
   1c410:	rsbs	r0, r0, #0
   1c414:	sbc	r1, r1, r1, lsl #1
   1c418:	cmp	r3, #0
   1c41c:	blt	1c468 <__assert_fail@plt+0xb440>
   1c420:	bl	1c4d8 <__assert_fail@plt+0xb4b0>
   1c424:	ldr	lr, [sp, #4]
   1c428:	add	sp, sp, #8
   1c42c:	pop	{r2, r3}
   1c430:	rsbs	r0, r0, #0
   1c434:	sbc	r1, r1, r1, lsl #1
   1c438:	rsbs	r2, r2, #0
   1c43c:	sbc	r3, r3, r3, lsl #1
   1c440:	bx	lr
   1c444:	rsbs	r2, r2, #0
   1c448:	sbc	r3, r3, r3, lsl #1
   1c44c:	bl	1c4d8 <__assert_fail@plt+0xb4b0>
   1c450:	ldr	lr, [sp, #4]
   1c454:	add	sp, sp, #8
   1c458:	pop	{r2, r3}
   1c45c:	rsbs	r0, r0, #0
   1c460:	sbc	r1, r1, r1, lsl #1
   1c464:	bx	lr
   1c468:	rsbs	r2, r2, #0
   1c46c:	sbc	r3, r3, r3, lsl #1
   1c470:	bl	1c4d8 <__assert_fail@plt+0xb4b0>
   1c474:	ldr	lr, [sp, #4]
   1c478:	add	sp, sp, #8
   1c47c:	pop	{r2, r3}
   1c480:	rsbs	r2, r2, #0
   1c484:	sbc	r3, r3, r3, lsl #1
   1c488:	bx	lr
   1c48c:	cmp	r3, #0
   1c490:	cmpeq	r2, #0
   1c494:	bne	1c4ac <__assert_fail@plt+0xb484>
   1c498:	cmp	r1, #0
   1c49c:	cmpeq	r0, #0
   1c4a0:	mvnne	r1, #0
   1c4a4:	mvnne	r0, #0
   1c4a8:	b	1c4c8 <__assert_fail@plt+0xb4a0>
   1c4ac:	sub	sp, sp, #8
   1c4b0:	push	{sp, lr}
   1c4b4:	bl	1c4d8 <__assert_fail@plt+0xb4b0>
   1c4b8:	ldr	lr, [sp, #4]
   1c4bc:	add	sp, sp, #8
   1c4c0:	pop	{r2, r3}
   1c4c4:	bx	lr
   1c4c8:	push	{r1, lr}
   1c4cc:	mov	r0, #8
   1c4d0:	bl	10de8 <raise@plt>
   1c4d4:	pop	{r1, pc}
   1c4d8:	cmp	r1, r3
   1c4dc:	cmpeq	r0, r2
   1c4e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4e4:	mov	r4, r0
   1c4e8:	movcc	r0, #0
   1c4ec:	mov	r5, r1
   1c4f0:	ldr	lr, [sp, #36]	; 0x24
   1c4f4:	movcc	r1, r0
   1c4f8:	bcc	1c5f4 <__assert_fail@plt+0xb5cc>
   1c4fc:	cmp	r3, #0
   1c500:	clzeq	ip, r2
   1c504:	clzne	ip, r3
   1c508:	addeq	ip, ip, #32
   1c50c:	cmp	r5, #0
   1c510:	clzeq	r1, r4
   1c514:	addeq	r1, r1, #32
   1c518:	clzne	r1, r5
   1c51c:	sub	ip, ip, r1
   1c520:	sub	sl, ip, #32
   1c524:	lsl	r9, r3, ip
   1c528:	rsb	fp, ip, #32
   1c52c:	orr	r9, r9, r2, lsl sl
   1c530:	orr	r9, r9, r2, lsr fp
   1c534:	lsl	r8, r2, ip
   1c538:	cmp	r5, r9
   1c53c:	cmpeq	r4, r8
   1c540:	movcc	r0, #0
   1c544:	movcc	r1, r0
   1c548:	bcc	1c564 <__assert_fail@plt+0xb53c>
   1c54c:	mov	r0, #1
   1c550:	subs	r4, r4, r8
   1c554:	lsl	r1, r0, sl
   1c558:	orr	r1, r1, r0, lsr fp
   1c55c:	lsl	r0, r0, ip
   1c560:	sbc	r5, r5, r9
   1c564:	cmp	ip, #0
   1c568:	beq	1c5f4 <__assert_fail@plt+0xb5cc>
   1c56c:	lsr	r6, r8, #1
   1c570:	orr	r6, r6, r9, lsl #31
   1c574:	lsr	r7, r9, #1
   1c578:	mov	r2, ip
   1c57c:	b	1c5a0 <__assert_fail@plt+0xb578>
   1c580:	subs	r3, r4, r6
   1c584:	sbc	r8, r5, r7
   1c588:	adds	r3, r3, r3
   1c58c:	adc	r8, r8, r8
   1c590:	adds	r4, r3, #1
   1c594:	adc	r5, r8, #0
   1c598:	subs	r2, r2, #1
   1c59c:	beq	1c5bc <__assert_fail@plt+0xb594>
   1c5a0:	cmp	r5, r7
   1c5a4:	cmpeq	r4, r6
   1c5a8:	bcs	1c580 <__assert_fail@plt+0xb558>
   1c5ac:	adds	r4, r4, r4
   1c5b0:	adc	r5, r5, r5
   1c5b4:	subs	r2, r2, #1
   1c5b8:	bne	1c5a0 <__assert_fail@plt+0xb578>
   1c5bc:	lsr	r3, r4, ip
   1c5c0:	orr	r3, r3, r5, lsl fp
   1c5c4:	lsr	r2, r5, ip
   1c5c8:	orr	r3, r3, r5, lsr sl
   1c5cc:	adds	r0, r0, r4
   1c5d0:	mov	r4, r3
   1c5d4:	lsl	r3, r2, ip
   1c5d8:	orr	r3, r3, r4, lsl sl
   1c5dc:	lsl	ip, r4, ip
   1c5e0:	orr	r3, r3, r4, lsr fp
   1c5e4:	adc	r1, r1, r5
   1c5e8:	subs	r0, r0, ip
   1c5ec:	mov	r5, r2
   1c5f0:	sbc	r1, r1, r3
   1c5f4:	cmp	lr, #0
   1c5f8:	strdne	r4, [lr]
   1c5fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c600:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c604:	mov	r7, r0
   1c608:	ldr	r6, [pc, #72]	; 1c658 <__assert_fail@plt+0xb630>
   1c60c:	ldr	r5, [pc, #72]	; 1c65c <__assert_fail@plt+0xb634>
   1c610:	add	r6, pc, r6
   1c614:	add	r5, pc, r5
   1c618:	sub	r6, r6, r5
   1c61c:	mov	r8, r1
   1c620:	mov	r9, r2
   1c624:	bl	10db0 <calloc@plt-0x20>
   1c628:	asrs	r6, r6, #2
   1c62c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c630:	mov	r4, #0
   1c634:	add	r4, r4, #1
   1c638:	ldr	r3, [r5], #4
   1c63c:	mov	r2, r9
   1c640:	mov	r1, r8
   1c644:	mov	r0, r7
   1c648:	blx	r3
   1c64c:	cmp	r6, r4
   1c650:	bne	1c634 <__assert_fail@plt+0xb60c>
   1c654:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c658:	strdeq	r1, [r1], -r4
   1c65c:	andeq	r1, r1, ip, ror #17
   1c660:	bx	lr
   1c664:	ldr	r3, [pc, #12]	; 1c678 <__assert_fail@plt+0xb650>
   1c668:	mov	r1, #0
   1c66c:	add	r3, pc, r3
   1c670:	ldr	r2, [r3]
   1c674:	b	10f80 <__cxa_atexit@plt>
   1c678:	andeq	r1, r1, ip, ror #20

Disassembly of section .fini:

0001c67c <.fini>:
   1c67c:	push	{r3, lr}
   1c680:	pop	{r3, pc}
