
../repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

00010b04 <.init>:
   10b04:	push	{r3, lr}
   10b08:	bl	10c38 <_start@@Base+0x3c>
   10b0c:	pop	{r3, pc}

Disassembly of section .plt:

00010b10 <calloc@plt-0x14>:
   10b10:	push	{lr}		; (str lr, [sp, #-4]!)
   10b14:	ldr	lr, [pc, #4]	; 10b20 <calloc@plt-0x4>
   10b18:	add	lr, pc, lr
   10b1c:	ldr	pc, [lr, #8]!
   10b20:	andeq	r1, r1, r0, ror #9

00010b24 <calloc@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b30 <strcmp@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b3c <printf@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b48 <__isoc99_fscanf@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b54 <fopen@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b60 <fflush@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b6c <free@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b78 <fgets@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b84 <strdup@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b90 <puts@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1176]!	; 0x498

00010b9c <malloc@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1168]!	; 0x490

00010ba8 <__libc_start_main@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1160]!	; 0x488

00010bb4 <__gmon_start__@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1152]!	; 0x480

00010bc0 <feof@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1144]!	; 0x478

00010bcc <strlen@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #69632	; 0x11000
   10bd4:	ldr	pc, [ip, #1136]!	; 0x470

00010bd8 <putchar@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #69632	; 0x11000
   10be0:	ldr	pc, [ip, #1128]!	; 0x468

00010be4 <fclose@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #69632	; 0x11000
   10bec:	ldr	pc, [ip, #1120]!	; 0x460

00010bf0 <abort@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #69632	; 0x11000
   10bf8:	ldr	pc, [ip, #1112]!	; 0x458

Disassembly of section .text:

00010bfc <_start@@Base>:
   10bfc:	mov	fp, #0
   10c00:	mov	lr, #0
   10c04:	pop	{r1}		; (ldr r1, [sp], #4)
   10c08:	mov	r2, sp
   10c0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10c10:	push	{r0}		; (str r0, [sp, #-4]!)
   10c14:	ldr	ip, [pc, #16]	; 10c2c <_start@@Base+0x30>
   10c18:	push	{ip}		; (str ip, [sp, #-4]!)
   10c1c:	ldr	r0, [pc, #12]	; 10c30 <_start@@Base+0x34>
   10c20:	ldr	r3, [pc, #12]	; 10c34 <_start@@Base+0x38>
   10c24:	bl	10ba8 <__libc_start_main@plt>
   10c28:	bl	10bf0 <abort@plt>
   10c2c:	andeq	r1, r1, ip, asr r6
   10c30:	andeq	r1, r1, ip, asr r0
   10c34:	strdeq	r1, [r1], -ip
   10c38:	ldr	r3, [pc, #20]	; 10c54 <_start@@Base+0x58>
   10c3c:	ldr	r2, [pc, #20]	; 10c58 <_start@@Base+0x5c>
   10c40:	add	r3, pc, r3
   10c44:	ldr	r2, [r3, r2]
   10c48:	cmp	r2, #0
   10c4c:	bxeq	lr
   10c50:	b	10bb4 <__gmon_start__@plt>
   10c54:			; <UNDEFINED> instruction: 0x000113b8
   10c58:	andeq	r0, r0, r4, asr r0
   10c5c:	ldr	r0, [pc, #24]	; 10c7c <_start@@Base+0x80>
   10c60:	ldr	r3, [pc, #24]	; 10c80 <_start@@Base+0x84>
   10c64:	cmp	r3, r0
   10c68:	bxeq	lr
   10c6c:	ldr	r3, [pc, #16]	; 10c84 <_start@@Base+0x88>
   10c70:	cmp	r3, #0
   10c74:	bxeq	lr
   10c78:	bx	r3
   10c7c:	andeq	r2, r2, r0, rrx
   10c80:	andeq	r2, r2, r0, rrx
   10c84:	andeq	r0, r0, r0
   10c88:	ldr	r0, [pc, #36]	; 10cb4 <_start@@Base+0xb8>
   10c8c:	ldr	r1, [pc, #36]	; 10cb8 <_start@@Base+0xbc>
   10c90:	sub	r1, r1, r0
   10c94:	asr	r1, r1, #2
   10c98:	add	r1, r1, r1, lsr #31
   10c9c:	asrs	r1, r1, #1
   10ca0:	bxeq	lr
   10ca4:	ldr	r3, [pc, #16]	; 10cbc <_start@@Base+0xc0>
   10ca8:	cmp	r3, #0
   10cac:	bxeq	lr
   10cb0:	bx	r3
   10cb4:	andeq	r2, r2, r0, rrx
   10cb8:	andeq	r2, r2, r0, rrx
   10cbc:	andeq	r0, r0, r0
   10cc0:	push	{r4, lr}
   10cc4:	ldr	r4, [pc, #24]	; 10ce4 <_start@@Base+0xe8>
   10cc8:	ldrb	r3, [r4]
   10ccc:	cmp	r3, #0
   10cd0:	popne	{r4, pc}
   10cd4:	bl	10c5c <_start@@Base+0x60>
   10cd8:	mov	r3, #1
   10cdc:	strb	r3, [r4]
   10ce0:	pop	{r4, pc}
   10ce4:	andeq	r2, r2, r4, rrx
   10ce8:	b	10c88 <_start@@Base+0x8c>

00010cec <fp_insere@@Base>:
   10cec:	push	{r4, r5, r6, sl, fp, lr}
   10cf0:	add	fp, sp, #16
   10cf4:	cmp	r0, #0
   10cf8:	mvneq	r0, #0
   10cfc:	popeq	{r4, r5, r6, sl, fp, pc}
   10d00:	mov	r4, r0
   10d04:	ldm	r0, {r3, r6}
   10d08:	mov	r0, #0
   10d0c:	cmp	r3, r6
   10d10:	popeq	{r4, r5, r6, sl, fp, pc}
   10d14:	mov	r0, r2
   10d18:	bl	113c4 <elemento_cria@@Base>
   10d1c:	mov	r5, r0
   10d20:	ldr	r0, [r4]
   10d24:	mov	r6, #0
   10d28:	cmp	r0, #1
   10d2c:	blt	10d58 <fp_insere@@Base+0x6c>
   10d30:	ldr	r0, [r4, #8]
   10d34:	ldr	r0, [r0, r6, lsl #2]
   10d38:	mov	r1, r5
   10d3c:	bl	11408 <maior_que@@Base>
   10d40:	cmp	r0, #0
   10d44:	beq	10d58 <fp_insere@@Base+0x6c>
   10d48:	ldr	r0, [r4]
   10d4c:	add	r6, r6, #1
   10d50:	cmp	r6, r0
   10d54:	blt	10d30 <fp_insere@@Base+0x44>
   10d58:	ldr	r0, [r4]
   10d5c:	ldr	r1, [r4, #8]
   10d60:	cmp	r0, r6
   10d64:	blt	10d88 <fp_insere@@Base+0x9c>
   10d68:	mov	r2, r0
   10d6c:	ldr	r3, [r1, r2, lsl #2]!
   10d70:	str	r3, [r1, #4]
   10d74:	sub	r3, r2, #1
   10d78:	ldr	r1, [r4, #8]
   10d7c:	cmp	r2, r6
   10d80:	mov	r2, r3
   10d84:	bgt	10d6c <fp_insere@@Base+0x80>
   10d88:	str	r5, [r1, r6, lsl #2]
   10d8c:	add	r0, r0, #1
   10d90:	str	r0, [r4]
   10d94:	mov	r0, #1
   10d98:	pop	{r4, r5, r6, sl, fp, pc}

00010d9c <fp_remove@@Base>:
   10d9c:	push	{fp, lr}
   10da0:	mov	fp, sp
   10da4:	mov	r1, #0
   10da8:	cmp	r0, #0
   10dac:	ldrne	lr, [r0]
   10db0:	cmpne	lr, #0
   10db4:	bne	10dc0 <fp_remove@@Base+0x24>
   10db8:	mov	r0, r1
   10dbc:	pop	{fp, pc}
   10dc0:	ldr	r1, [r0, #8]
   10dc4:	ldr	ip, [r1]
   10dc8:	cmp	lr, #1
   10dcc:	blt	10df0 <fp_remove@@Base+0x54>
   10dd0:	mov	r3, #0
   10dd4:	ldr	r1, [r0, #8]
   10dd8:	add	r2, r1, r3, lsl #2
   10ddc:	ldr	r2, [r2, #4]
   10de0:	str	r2, [r1, r3, lsl #2]
   10de4:	add	r3, r3, #1
   10de8:	cmp	lr, r3
   10dec:	bne	10dd4 <fp_remove@@Base+0x38>
   10df0:	sub	r1, lr, #1
   10df4:	str	r1, [r0]
   10df8:	ldr	r1, [ip, #4]
   10dfc:	mov	r0, r1
   10e00:	pop	{fp, pc}

00010e04 <fp_carrega@@Base>:
   10e04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10e08:	add	fp, sp, #24
   10e0c:	sub	sp, sp, #264	; 0x108
   10e10:	mov	r2, r1
   10e14:	mov	r4, r0
   10e18:	movw	r1, #5748	; 0x1674
   10e1c:	movt	r1, #1
   10e20:	mov	r0, r2
   10e24:	bl	10b54 <fopen@plt>
   10e28:	cmp	r0, #0
   10e2c:	beq	10eb4 <fp_carrega@@Base+0xb0>
   10e30:	mov	r5, r0
   10e34:	bl	10bc0 <feof@plt>
   10e38:	cmp	r0, #0
   10e3c:	bne	10ea4 <fp_carrega@@Base+0xa0>
   10e40:	movw	r8, #5750	; 0x1676
   10e44:	movt	r8, #1
   10e48:	mov	r9, sp
   10e4c:	add	r6, sp, #4
   10e50:	mov	r7, #0
   10e54:	mov	r0, r5
   10e58:	mov	r1, r8
   10e5c:	mov	r2, r9
   10e60:	bl	10b48 <__isoc99_fscanf@plt>
   10e64:	mov	r0, r6
   10e68:	mov	r1, #256	; 0x100
   10e6c:	mov	r2, r5
   10e70:	bl	10b78 <fgets@plt>
   10e74:	mov	r0, r6
   10e78:	bl	10bcc <strlen@plt>
   10e7c:	add	r0, r6, r0
   10e80:	strb	r7, [r0, #-1]
   10e84:	ldr	r2, [sp]
   10e88:	mov	r0, r4
   10e8c:	mov	r1, r6
   10e90:	bl	10cec <fp_insere@@Base>
   10e94:	mov	r0, r5
   10e98:	bl	10bc0 <feof@plt>
   10e9c:	cmp	r0, #0
   10ea0:	beq	10e54 <fp_carrega@@Base+0x50>
   10ea4:	mov	r0, r5
   10ea8:	bl	10be4 <fclose@plt>
   10eac:	sub	sp, fp, #24
   10eb0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10eb4:	movw	r0, #6368	; 0x18e0
   10eb8:	movt	r0, #1
   10ebc:	bl	10b90 <puts@plt>
   10ec0:	sub	sp, fp, #24
   10ec4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00010ec8 <heap_insere@@Base>:
   10ec8:	push	{r4, r5, r6, r7, fp, lr}
   10ecc:	add	fp, sp, #16
   10ed0:	mov	r7, r1
   10ed4:	mov	r4, r0
   10ed8:	ldr	r0, [r0]
   10edc:	ldr	r1, [r4, #4]
   10ee0:	mov	r5, #0
   10ee4:	cmp	r0, r1
   10ee8:	beq	10f84 <heap_insere@@Base+0xbc>
   10eec:	mov	r0, r3
   10ef0:	mov	r1, r2
   10ef4:	bl	113c4 <elemento_cria@@Base>
   10ef8:	mov	r6, r0
   10efc:	ldr	r0, [r4]
   10f00:	cmp	r0, #1
   10f04:	blt	10f40 <heap_insere@@Base+0x78>
   10f08:	mov	r5, #0
   10f0c:	ldr	r0, [r4, #8]
   10f10:	ldr	r0, [r0, r5, lsl #2]
   10f14:	mov	r1, r6
   10f18:	blx	r7
   10f1c:	cmp	r0, #1
   10f20:	beq	10f4c <heap_insere@@Base+0x84>
   10f24:	ldr	r0, [r4]
   10f28:	add	r5, r5, #1
   10f2c:	cmp	r5, r0
   10f30:	blt	10f0c <heap_insere@@Base+0x44>
   10f34:	mov	r1, r4
   10f38:	ldr	r0, [r1, #8]!
   10f3c:	b	10f5c <heap_insere@@Base+0x94>
   10f40:	ldr	r0, [r4, #8]
   10f44:	mov	r5, #0
   10f48:	b	10f74 <heap_insere@@Base+0xac>
   10f4c:	mov	r1, r4
   10f50:	ldr	r0, [r1, #8]!
   10f54:	cmp	r5, #0
   10f58:	beq	10f74 <heap_insere@@Base+0xac>
   10f5c:	mov	r2, r5
   10f60:	ldr	r3, [r0, r2, lsl #2]!
   10f64:	str	r3, [r0, #4]
   10f68:	subs	r2, r2, #1
   10f6c:	ldr	r0, [r1]
   10f70:	bgt	10f60 <heap_insere@@Base+0x98>
   10f74:	str	r6, [r0, r5, lsl #2]
   10f78:	ldr	r0, [r4]
   10f7c:	add	r0, r0, #1
   10f80:	str	r0, [r4]
   10f84:	mov	r0, r5
   10f88:	pop	{r4, r5, r6, r7, fp, pc}

00010f8c <heap_remove@@Base>:
   10f8c:	mov	r0, #0
   10f90:	bx	lr

00010f94 <heap_carrega@@Base>:
   10f94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f98:	add	fp, sp, #28
   10f9c:	sub	sp, sp, #268	; 0x10c
   10fa0:	mov	r4, r1
   10fa4:	mov	r5, r0
   10fa8:	movw	r1, #5748	; 0x1674
   10fac:	movt	r1, #1
   10fb0:	mov	r0, r2
   10fb4:	bl	10b54 <fopen@plt>
   10fb8:	cmp	r0, #0
   10fbc:	beq	11048 <heap_carrega@@Base+0xb4>
   10fc0:	mov	r6, r0
   10fc4:	bl	10bc0 <feof@plt>
   10fc8:	cmp	r0, #0
   10fcc:	bne	11038 <heap_carrega@@Base+0xa4>
   10fd0:	movw	r8, #5750	; 0x1676
   10fd4:	movt	r8, #1
   10fd8:	add	r9, sp, #4
   10fdc:	add	r7, sp, #8
   10fe0:	mov	sl, #0
   10fe4:	mov	r0, r6
   10fe8:	mov	r1, r8
   10fec:	mov	r2, r9
   10ff0:	bl	10b48 <__isoc99_fscanf@plt>
   10ff4:	mov	r0, r7
   10ff8:	mov	r1, #256	; 0x100
   10ffc:	mov	r2, r6
   11000:	bl	10b78 <fgets@plt>
   11004:	mov	r0, r7
   11008:	bl	10bcc <strlen@plt>
   1100c:	add	r0, r7, r0
   11010:	strb	sl, [r0, #-1]
   11014:	ldr	r3, [sp, #4]
   11018:	mov	r0, r5
   1101c:	mov	r1, r4
   11020:	mov	r2, r7
   11024:	bl	10ec8 <heap_insere@@Base>
   11028:	mov	r0, r6
   1102c:	bl	10bc0 <feof@plt>
   11030:	cmp	r0, #0
   11034:	beq	10fe4 <heap_carrega@@Base+0x50>
   11038:	mov	r0, r6
   1103c:	bl	10be4 <fclose@plt>
   11040:	sub	sp, fp, #28
   11044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11048:	movw	r0, #6368	; 0x18e0
   1104c:	movt	r0, #1
   11050:	bl	10b90 <puts@plt>
   11054:	sub	sp, fp, #28
   11058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001105c <main@@Base>:
   1105c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11060:	add	fp, sp, #24
   11064:	mov	r0, #42	; 0x2a
   11068:	bl	1130c <vetor_cria@@Base>
   1106c:	mov	r4, r0
   11070:	movw	r0, #6416	; 0x1910
   11074:	movt	r0, #1
   11078:	bl	10b90 <puts@plt>
   1107c:	movw	r1, #5754	; 0x167a
   11080:	movt	r1, #1
   11084:	mov	r0, r4
   11088:	bl	10e04 <fp_carrega@@Base>
   1108c:	movw	r7, #8296	; 0x2068
   11090:	movt	r7, #2
   11094:	ldr	r1, [r7]
   11098:	movw	r0, #5764	; 0x1684
   1109c:	movt	r0, #1
   110a0:	bl	10b3c <printf@plt>
   110a4:	mov	r0, r4
   110a8:	bl	114dc <vetor_imprime@@Base>
   110ac:	ldr	r0, [r4]
   110b0:	cmp	r0, #42	; 0x2a
   110b4:	bne	110e4 <main@@Base+0x88>
   110b8:	mov	r0, r4
   110bc:	bl	10d9c <fp_remove@@Base>
   110c0:	mov	r1, r0
   110c4:	movw	r0, #5819	; 0x16bb
   110c8:	movt	r0, #1
   110cc:	bl	10b30 <strcmp@plt>
   110d0:	cmp	r0, #0
   110d4:	beq	110fc <main@@Base+0xa0>
   110d8:	movw	r0, #6544	; 0x1990
   110dc:	movt	r0, #1
   110e0:	b	110ec <main@@Base+0x90>
   110e4:	movw	r0, #6672	; 0x1a10
   110e8:	movt	r0, #1
   110ec:	bl	10b90 <puts@plt>
   110f0:	mov	r4, #1
   110f4:	mov	r0, r4
   110f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   110fc:	mov	r6, #0
   11100:	str	r6, [r7]
   11104:	mov	r0, r4
   11108:	bl	10d9c <fp_remove@@Base>
   1110c:	ldr	r1, [r7]
   11110:	movw	r0, #5837	; 0x16cd
   11114:	movt	r0, #1
   11118:	bl	10b3c <printf@plt>
   1111c:	str	r6, [r7]
   11120:	movw	r5, #5889	; 0x1701
   11124:	movt	r5, #1
   11128:	mov	r0, r4
   1112c:	mov	r1, r5
   11130:	mov	r2, #99	; 0x63
   11134:	bl	10cec <fp_insere@@Base>
   11138:	ldr	r1, [r7]
   1113c:	movw	r0, #5903	; 0x170f
   11140:	movt	r0, #1
   11144:	bl	10b3c <printf@plt>
   11148:	mov	r0, r4
   1114c:	bl	10d9c <fp_remove@@Base>
   11150:	str	r6, [r7]
   11154:	mov	r0, r4
   11158:	mov	r1, r5
   1115c:	mov	r2, #0
   11160:	bl	10cec <fp_insere@@Base>
   11164:	ldr	r1, [r7]
   11168:	movw	r0, #5974	; 0x1756
   1116c:	movt	r0, #1
   11170:	bl	10b3c <printf@plt>
   11174:	mov	r0, r4
   11178:	bl	10d9c <fp_remove@@Base>
   1117c:	str	r6, [r7]
   11180:	mov	r0, r4
   11184:	mov	r1, r5
   11188:	mov	r2, #42	; 0x2a
   1118c:	bl	10cec <fp_insere@@Base>
   11190:	ldr	r1, [r7]
   11194:	movw	r0, #6045	; 0x179d
   11198:	movt	r0, #1
   1119c:	bl	10b3c <printf@plt>
   111a0:	movw	r0, #6480	; 0x1950
   111a4:	movt	r0, #1
   111a8:	bl	10b90 <puts@plt>
   111ac:	mov	r0, #42	; 0x2a
   111b0:	bl	11368 <vetor_criaHeap@@Base>
   111b4:	mov	r4, r0
   111b8:	movw	r1, #5128	; 0x1408
   111bc:	movt	r1, #1
   111c0:	movw	r2, #5754	; 0x167a
   111c4:	movt	r2, #1
   111c8:	bl	10f94 <heap_carrega@@Base>
   111cc:	ldr	r1, [r7]
   111d0:	movw	r0, #6115	; 0x17e3
   111d4:	movt	r0, #1
   111d8:	bl	10b3c <printf@plt>
   111dc:	mov	r0, r4
   111e0:	bl	1156c <vetor_imprimeHeap@@Base>
   111e4:	ldr	r0, [r4]
   111e8:	cmp	r0, #42	; 0x2a
   111ec:	bne	11218 <main@@Base+0x1bc>
   111f0:	movw	r0, #5819	; 0x16bb
   111f4:	movt	r0, #1
   111f8:	mov	r5, #0
   111fc:	mov	r1, #0
   11200:	bl	10b30 <strcmp@plt>
   11204:	cmp	r0, #0
   11208:	beq	11224 <main@@Base+0x1c8>
   1120c:	movw	r0, #6544	; 0x1990
   11210:	movt	r0, #1
   11214:	b	110ec <main@@Base+0x90>
   11218:	movw	r0, #6624	; 0x19e0
   1121c:	movt	r0, #1
   11220:	b	110ec <main@@Base+0x90>
   11224:	str	r5, [r7]
   11228:	movw	r0, #6170	; 0x181a
   1122c:	movt	r0, #1
   11230:	mov	r1, #0
   11234:	bl	10b3c <printf@plt>
   11238:	str	r5, [r7]
   1123c:	movw	r8, #5128	; 0x1408
   11240:	movt	r8, #1
   11244:	movw	r6, #5889	; 0x1701
   11248:	movt	r6, #1
   1124c:	mov	r0, r4
   11250:	mov	r1, r8
   11254:	mov	r2, r6
   11258:	mov	r3, #99	; 0x63
   1125c:	bl	10ec8 <heap_insere@@Base>
   11260:	ldr	r1, [r7]
   11264:	movw	r0, #6222	; 0x184e
   11268:	movt	r0, #1
   1126c:	bl	10b3c <printf@plt>
   11270:	str	r5, [r7]
   11274:	mov	r0, r4
   11278:	mov	r1, r8
   1127c:	mov	r2, r6
   11280:	mov	r3, #0
   11284:	bl	10ec8 <heap_insere@@Base>
   11288:	ldr	r1, [r7]
   1128c:	movw	r0, #6293	; 0x1895
   11290:	movt	r0, #1
   11294:	bl	10b3c <printf@plt>
   11298:	str	r5, [r7]
   1129c:	mov	r5, #42	; 0x2a
   112a0:	mov	r0, r4
   112a4:	mov	r1, r8
   112a8:	mov	r2, r6
   112ac:	mov	r3, #42	; 0x2a
   112b0:	bl	10ec8 <heap_insere@@Base>
   112b4:	ldr	r1, [r7]
   112b8:	movw	r0, #6045	; 0x179d
   112bc:	movt	r0, #1
   112c0:	bl	10b3c <printf@plt>
   112c4:	mov	r0, #42	; 0x2a
   112c8:	bl	11368 <vetor_criaHeap@@Base>
   112cc:	movw	r1, #5236	; 0x1474
   112d0:	movt	r1, #1
   112d4:	movw	r2, #5754	; 0x167a
   112d8:	movt	r2, #1
   112dc:	bl	10f94 <heap_carrega@@Base>
   112e0:	ldr	r1, [r7]
   112e4:	movw	r0, #6115	; 0x17e3
   112e8:	movt	r0, #1
   112ec:	bl	10b3c <printf@plt>
   112f0:	mov	r4, #0
   112f4:	mov	r0, #0
   112f8:	bl	10b90 <puts@plt>
   112fc:	subs	r5, r5, #1
   11300:	bne	112f4 <main@@Base+0x298>
   11304:	mov	r0, r4
   11308:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001130c <vetor_cria@@Base>:
   1130c:	push	{r4, r5, fp, lr}
   11310:	add	fp, sp, #8
   11314:	mov	r5, r0
   11318:	mov	r0, #12
   1131c:	bl	10b9c <malloc@plt>
   11320:	cmp	r0, #0
   11324:	beq	1135c <vetor_cria@@Base+0x50>
   11328:	mov	r4, r0
   1132c:	mov	r0, #0
   11330:	stm	r4, {r0, r5}
   11334:	mov	r0, r5
   11338:	mov	r1, #4
   1133c:	bl	10b24 <calloc@plt>
   11340:	str	r0, [r4, #8]
   11344:	cmp	r0, #0
   11348:	beq	11354 <vetor_cria@@Base+0x48>
   1134c:	mov	r0, r4
   11350:	pop	{r4, r5, fp, pc}
   11354:	mov	r0, r4
   11358:	bl	10b6c <free@plt>
   1135c:	mov	r4, #0
   11360:	mov	r0, r4
   11364:	pop	{r4, r5, fp, pc}

00011368 <vetor_criaHeap@@Base>:
   11368:	push	{r4, r5, fp, lr}
   1136c:	add	fp, sp, #8
   11370:	mov	r5, r0
   11374:	mov	r0, #12
   11378:	bl	10b9c <malloc@plt>
   1137c:	cmp	r0, #0
   11380:	beq	113b8 <vetor_criaHeap@@Base+0x50>
   11384:	mov	r4, r0
   11388:	mov	r0, #0
   1138c:	stm	r4, {r0, r5}
   11390:	add	r0, r5, #1
   11394:	mov	r1, #4
   11398:	bl	10b24 <calloc@plt>
   1139c:	str	r0, [r4, #8]
   113a0:	cmp	r0, #0
   113a4:	beq	113b0 <vetor_criaHeap@@Base+0x48>
   113a8:	mov	r0, r4
   113ac:	pop	{r4, r5, fp, pc}
   113b0:	mov	r0, r4
   113b4:	bl	10b6c <free@plt>
   113b8:	mov	r4, #0
   113bc:	mov	r0, r4
   113c0:	pop	{r4, r5, fp, pc}

000113c4 <elemento_cria@@Base>:
   113c4:	push	{r4, r5, r6, sl, fp, lr}
   113c8:	add	fp, sp, #16
   113cc:	mov	r6, r1
   113d0:	mov	r5, r0
   113d4:	mov	r0, #8
   113d8:	bl	10b9c <malloc@plt>
   113dc:	cmp	r0, #0
   113e0:	moveq	r4, #0
   113e4:	moveq	r0, r4
   113e8:	popeq	{r4, r5, r6, sl, fp, pc}
   113ec:	mov	r4, r0
   113f0:	mov	r0, r6
   113f4:	bl	10b84 <strdup@plt>
   113f8:	str	r5, [r4]
   113fc:	str	r0, [r4, #4]
   11400:	mov	r0, r4
   11404:	pop	{r4, r5, r6, sl, fp, pc}

00011408 <maior_que@@Base>:
   11408:	push	{r4, r5, fp, lr}
   1140c:	add	fp, sp, #8
   11410:	cmp	r0, #0
   11414:	movne	r5, r1
   11418:	cmpne	r1, #0
   1141c:	bne	11434 <maior_que@@Base+0x2c>
   11420:	movw	r0, #6754	; 0x1a62
   11424:	movt	r0, #1
   11428:	bl	10b90 <puts@plt>
   1142c:	mov	r0, #0
   11430:	pop	{r4, r5, fp, pc}
   11434:	mov	r4, r0
   11438:	movw	r0, #8288	; 0x2060
   1143c:	movt	r0, #2
   11440:	ldr	r0, [r0]
   11444:	bl	10b60 <fflush@plt>
   11448:	movw	r0, #8296	; 0x2068
   1144c:	movt	r0, #2
   11450:	ldr	r1, [r0]
   11454:	add	r1, r1, #1
   11458:	str	r1, [r0]
   1145c:	ldr	r1, [r5]
   11460:	ldr	r2, [r4]
   11464:	mov	r0, #0
   11468:	cmp	r2, r1
   1146c:	movwgt	r0, #1
   11470:	pop	{r4, r5, fp, pc}

00011474 <maior_que_HeapSort@@Base>:
   11474:	push	{r4, r5, fp, lr}
   11478:	add	fp, sp, #8
   1147c:	cmp	r0, #0
   11480:	movne	r5, r1
   11484:	cmpne	r1, #0
   11488:	bne	114a0 <maior_que_HeapSort@@Base+0x2c>
   1148c:	movw	r0, #6754	; 0x1a62
   11490:	movt	r0, #1
   11494:	bl	10b90 <puts@plt>
   11498:	mov	r0, #0
   1149c:	pop	{r4, r5, fp, pc}
   114a0:	mov	r4, r0
   114a4:	movw	r0, #8288	; 0x2060
   114a8:	movt	r0, #2
   114ac:	ldr	r0, [r0]
   114b0:	bl	10b60 <fflush@plt>
   114b4:	movw	r0, #8296	; 0x2068
   114b8:	movt	r0, #2
   114bc:	ldr	r1, [r0]
   114c0:	add	r1, r1, #1
   114c4:	str	r1, [r0]
   114c8:	ldr	r1, [r5, #4]
   114cc:	ldr	r0, [r4, #4]
   114d0:	bl	10b30 <strcmp@plt>
   114d4:	lsr	r0, r0, #31
   114d8:	pop	{r4, r5, fp, pc}

000114dc <vetor_imprime@@Base>:
   114dc:	push	{r4, r5, r6, sl, fp, lr}
   114e0:	add	fp, sp, #16
   114e4:	mov	r4, r0
   114e8:	ldr	r0, [r0]
   114ec:	cmp	r0, #1
   114f0:	blt	1155c <vetor_imprime@@Base+0x80>
   114f4:	ldr	r0, [r4, #8]
   114f8:	ldr	r0, [r0]
   114fc:	ldr	r2, [r0]
   11500:	ldr	r1, [r0, #4]
   11504:	movw	r0, #6710	; 0x1a36
   11508:	movt	r0, #1
   1150c:	bl	10b3c <printf@plt>
   11510:	ldr	r0, [r4]
   11514:	cmp	r0, #2
   11518:	blt	11550 <vetor_imprime@@Base+0x74>
   1151c:	mov	r6, #1
   11520:	movw	r5, #6739	; 0x1a53
   11524:	movt	r5, #1
   11528:	ldr	r0, [r4, #8]
   1152c:	ldr	r0, [r0, r6, lsl #2]
   11530:	ldr	r2, [r0]
   11534:	ldr	r1, [r0, #4]
   11538:	mov	r0, r5
   1153c:	bl	10b3c <printf@plt>
   11540:	add	r6, r6, #1
   11544:	ldr	r0, [r4]
   11548:	cmp	r6, r0
   1154c:	blt	11528 <vetor_imprime@@Base+0x4c>
   11550:	mov	r0, #10
   11554:	pop	{r4, r5, r6, sl, fp, lr}
   11558:	b	10bd8 <putchar@plt>
   1155c:	movw	r0, #6768	; 0x1a70
   11560:	movt	r0, #1
   11564:	pop	{r4, r5, r6, sl, fp, lr}
   11568:	b	10b90 <puts@plt>

0001156c <vetor_imprimeHeap@@Base>:
   1156c:	push	{r4, r5, r6, sl, fp, lr}
   11570:	add	fp, sp, #16
   11574:	mov	r4, r0
   11578:	ldr	r0, [r0]
   1157c:	cmp	r0, #1
   11580:	blt	115ec <vetor_imprimeHeap@@Base+0x80>
   11584:	ldr	r0, [r4, #8]
   11588:	ldr	r0, [r0, #4]
   1158c:	ldr	r2, [r0]
   11590:	ldr	r1, [r0, #4]
   11594:	movw	r0, #6710	; 0x1a36
   11598:	movt	r0, #1
   1159c:	bl	10b3c <printf@plt>
   115a0:	ldr	r0, [r4]
   115a4:	cmp	r0, #3
   115a8:	blt	115e0 <vetor_imprimeHeap@@Base+0x74>
   115ac:	mov	r6, #2
   115b0:	movw	r5, #6739	; 0x1a53
   115b4:	movt	r5, #1
   115b8:	ldr	r0, [r4, #8]
   115bc:	ldr	r0, [r0, r6, lsl #2]
   115c0:	ldr	r2, [r0]
   115c4:	ldr	r1, [r0, #4]
   115c8:	mov	r0, r5
   115cc:	bl	10b3c <printf@plt>
   115d0:	add	r6, r6, #1
   115d4:	ldr	r0, [r4]
   115d8:	cmp	r6, r0
   115dc:	blt	115b8 <vetor_imprimeHeap@@Base+0x4c>
   115e0:	mov	r0, #10
   115e4:	pop	{r4, r5, r6, sl, fp, lr}
   115e8:	b	10bd8 <putchar@plt>
   115ec:	movw	r0, #6768	; 0x1a70
   115f0:	movt	r0, #1
   115f4:	pop	{r4, r5, r6, sl, fp, lr}
   115f8:	b	10b90 <puts@plt>

000115fc <__libc_csu_init@@Base>:
   115fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11600:	mov	r7, r0
   11604:	ldr	r6, [pc, #72]	; 11654 <__libc_csu_init@@Base+0x58>
   11608:	ldr	r5, [pc, #72]	; 11658 <__libc_csu_init@@Base+0x5c>
   1160c:	add	r6, pc, r6
   11610:	add	r5, pc, r5
   11614:	sub	r6, r6, r5
   11618:	mov	r8, r1
   1161c:	mov	r9, r2
   11620:	bl	10b04 <calloc@plt-0x20>
   11624:	asrs	r6, r6, #2
   11628:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1162c:	mov	r4, #0
   11630:	add	r4, r4, #1
   11634:	ldr	r3, [r5], #4
   11638:	mov	r2, r9
   1163c:	mov	r1, r8
   11640:	mov	r0, r7
   11644:	blx	r3
   11648:	cmp	r6, r4
   1164c:	bne	11630 <__libc_csu_init@@Base+0x34>
   11650:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11654:	strdeq	r0, [r1], -r8
   11658:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0001165c <__libc_csu_fini@@Base>:
   1165c:	bx	lr

Disassembly of section .fini:

00011660 <.fini>:
   11660:	push	{r3, lr}
   11664:	pop	{r3, pc}
