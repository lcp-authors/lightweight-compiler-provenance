
../repos/sgerbino-table-2fdd8d0/bin/table_column_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r4, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #20, 20	; 0x14000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #20, 20	; 0x14000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #20, 20	; 0x14000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #20, 20	; 0x14000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #20, 20	; 0x14000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #20, 20	; 0x14000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #20, 20	; 0x14000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #20, 20	; 0x14000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #20, 20	; 0x14000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #20, 20	; 0x14000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #20, 20	; 0x14000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #20, 20	; 0x14000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:	andeq	r5, r1, r0, lsr r4
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	ldrdeq	r5, [r1], -r0
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r6, r2, r8, asr #32
   11fa4:	andeq	r6, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r6, r2, r8, asr #32
   11fdc:	andeq	r6, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r6, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{r4, r5, r6, r7, fp, lr}
   12014:	add	fp, sp, #16
   12018:	sub	sp, sp, #56	; 0x38
   1201c:	mov	r7, sp
   12020:	mov	r0, r7
   12024:	bl	1215c <table_init@@Base>
   12028:	ldr	r1, [pc, #192]	; 120f0 <main@@Base+0xe0>
   1202c:	mov	r0, r7
   12030:	mov	r2, #0
   12034:	mov	r4, #0
   12038:	add	r1, pc, r1
   1203c:	bl	12bd0 <table_add_column@@Base>
   12040:	ldr	r1, [pc, #172]	; 120f4 <main@@Base+0xe4>
   12044:	mov	r6, r0
   12048:	mov	r0, r7
   1204c:	mov	r2, #21
   12050:	add	r1, pc, r1
   12054:	bl	12bd0 <table_add_column@@Base>
   12058:	mov	r5, r0
   1205c:	mov	r0, r7
   12060:	bl	12b48 <table_get_column_length@@Base>
   12064:	cmp	r0, #2
   12068:	beq	1207c <main@@Base+0x6c>
   1206c:	ldr	r0, [pc, #132]	; 120f8 <main@@Base+0xe8>
   12070:	add	r0, pc, r0
   12074:	bl	11e9c <printf@plt>
   12078:	mvn	r4, #0
   1207c:	mov	r0, sp
   12080:	mov	r1, r6
   12084:	bl	12bac <table_get_column_name@@Base>
   12088:	ldr	r1, [pc, #108]	; 120fc <main@@Base+0xec>
   1208c:	add	r1, pc, r1
   12090:	bl	11e90 <strcmp@plt>
   12094:	cmp	r0, #0
   12098:	beq	120ac <main@@Base+0x9c>
   1209c:	ldr	r0, [pc, #92]	; 12100 <main@@Base+0xf0>
   120a0:	add	r0, pc, r0
   120a4:	bl	11e9c <printf@plt>
   120a8:	mvn	r4, #0
   120ac:	mov	r0, sp
   120b0:	mov	r1, r5
   120b4:	bl	12bac <table_get_column_name@@Base>
   120b8:	ldr	r1, [pc, #68]	; 12104 <main@@Base+0xf4>
   120bc:	add	r1, pc, r1
   120c0:	bl	11e90 <strcmp@plt>
   120c4:	cmp	r0, #0
   120c8:	beq	120dc <main@@Base+0xcc>
   120cc:	ldr	r0, [pc, #52]	; 12108 <main@@Base+0xf8>
   120d0:	add	r0, pc, r0
   120d4:	bl	11e9c <printf@plt>
   120d8:	mvn	r4, #0
   120dc:	mov	r0, sp
   120e0:	bl	121b8 <table_destroy@@Base>
   120e4:	mov	r0, r4
   120e8:	sub	sp, fp, #16
   120ec:	pop	{r4, r5, r6, r7, fp, pc}
   120f0:	andeq	r3, r0, r0, lsl #8
   120f4:	andeq	r3, r0, sl, lsr #8
   120f8:	andeq	r3, r0, fp, asr #7
   120fc:	andeq	r3, r0, ip, lsr #7
   12100:	andeq	r3, r0, r0, asr #7
   12104:			; <UNDEFINED> instruction: 0x000033be
   12108:	muleq	r0, r0, r3

0001210c <table_new@@Base>:
   1210c:	push	{fp, lr}
   12110:	mov	fp, sp
   12114:	mov	r0, #56	; 0x38
   12118:	bl	11ecc <malloc@plt>
   1211c:	mov	r1, #0
   12120:	mov	r2, #10
   12124:	mov	r3, #20
   12128:	vmov.i32	q8, #0	; 0x00000000
   1212c:	str	r1, [r0]
   12130:	stmib	r0, {r1, r2}
   12134:	str	r1, [r0, #12]
   12138:	str	r1, [r0, #16]
   1213c:	str	r1, [r0, #20]
   12140:	str	r3, [r0, #24]
   12144:	str	r1, [r0, #28]
   12148:	str	r2, [r0, #48]	; 0x30
   1214c:	str	r1, [r0, #52]	; 0x34
   12150:	add	r1, r0, #32
   12154:	vst1.32	{d16-d17}, [r1]
   12158:	pop	{fp, pc}

0001215c <table_init@@Base>:
   1215c:	mov	r1, #0
   12160:	mov	r2, #10
   12164:	mov	r3, #20
   12168:	vmov.i32	q8, #0	; 0x00000000
   1216c:	str	r1, [r0]
   12170:	stmib	r0, {r1, r2}
   12174:	str	r1, [r0, #12]
   12178:	str	r1, [r0, #16]
   1217c:	str	r1, [r0, #20]
   12180:	str	r3, [r0, #24]
   12184:	str	r1, [r0, #28]
   12188:	str	r2, [r0, #48]	; 0x30
   1218c:	str	r1, [r0, #52]	; 0x34
   12190:	add	r0, r0, #32
   12194:	vst1.32	{d16-d17}, [r0]
   12198:	bx	lr

0001219c <table_delete@@Base>:
   1219c:	push	{r4, sl, fp, lr}
   121a0:	add	fp, sp, #8
   121a4:	mov	r4, r0
   121a8:	bl	121b8 <table_destroy@@Base>
   121ac:	mov	r0, r4
   121b0:	pop	{r4, sl, fp, lr}
   121b4:	b	11ea8 <free@plt>

000121b8 <table_destroy@@Base>:
   121b8:	cmp	r0, #0
   121bc:	bxeq	lr
   121c0:	push	{r4, r5, r6, sl, fp, lr}
   121c4:	add	fp, sp, #16
   121c8:	mvn	r1, #0
   121cc:	mvn	r2, #0
   121d0:	mov	r3, #64	; 0x40
   121d4:	mov	r4, r0
   121d8:	bl	12a54 <table_notify@@Base>
   121dc:	mov	r0, r4
   121e0:	bl	1386c <table_get_row_length@@Base>
   121e4:	cmp	r0, #1
   121e8:	blt	1220c <table_destroy@@Base+0x54>
   121ec:	mov	r5, r0
   121f0:	mov	r6, #0
   121f4:	mov	r0, r4
   121f8:	mov	r1, r6
   121fc:	bl	13814 <table_row_destroy@@Base>
   12200:	add	r6, r6, #1
   12204:	cmp	r5, r6
   12208:	bne	121f4 <table_destroy@@Base+0x3c>
   1220c:	ldr	r0, [r4, #16]
   12210:	cmp	r0, #0
   12214:	beq	1221c <table_destroy@@Base+0x64>
   12218:	bl	11ea8 <free@plt>
   1221c:	mov	r0, r4
   12220:	bl	12b48 <table_get_column_length@@Base>
   12224:	cmp	r0, #1
   12228:	blt	1224c <table_destroy@@Base+0x94>
   1222c:	mov	r5, r0
   12230:	mov	r6, #0
   12234:	mov	r0, r4
   12238:	mov	r1, r6
   1223c:	bl	12b30 <table_column_destroy@@Base>
   12240:	add	r6, r6, #1
   12244:	cmp	r5, r6
   12248:	bne	12234 <table_destroy@@Base+0x7c>
   1224c:	ldr	r0, [r4]
   12250:	cmp	r0, #0
   12254:	beq	1225c <table_destroy@@Base+0xa4>
   12258:	bl	11ea8 <free@plt>
   1225c:	ldr	r0, [r4, #36]	; 0x24
   12260:	cmp	r0, #0
   12264:	beq	1226c <table_destroy@@Base+0xb4>
   12268:	bl	11ea8 <free@plt>
   1226c:	ldr	r0, [r4, #40]	; 0x28
   12270:	cmp	r0, #0
   12274:	beq	1227c <table_destroy@@Base+0xc4>
   12278:	bl	11ea8 <free@plt>
   1227c:	ldr	r0, [r4, #44]	; 0x2c
   12280:	cmp	r0, #0
   12284:	pop	{r4, r5, r6, sl, fp, lr}
   12288:	beq	12290 <table_destroy@@Base+0xd8>
   1228c:	b	11ea8 <free@plt>
   12290:	bx	lr

00012294 <table_dupe@@Base>:
   12294:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12298:	add	fp, sp, #28
   1229c:	sub	sp, sp, #12
   122a0:	mov	r4, r0
   122a4:	bl	1386c <table_get_row_length@@Base>
   122a8:	mov	r8, r0
   122ac:	mov	r0, r4
   122b0:	bl	12b48 <table_get_column_length@@Base>
   122b4:	mov	r6, r0
   122b8:	mov	r0, #56	; 0x38
   122bc:	bl	11ecc <malloc@plt>
   122c0:	mov	sl, r0
   122c4:	mov	r5, #0
   122c8:	mov	r0, #10
   122cc:	mov	r1, #20
   122d0:	cmp	r6, #1
   122d4:	vmov.i32	q8, #0	; 0x00000000
   122d8:	str	r5, [sl]
   122dc:	str	r5, [sl, #4]
   122e0:	str	r0, [sl, #8]
   122e4:	str	r5, [sl, #12]
   122e8:	str	r5, [sl, #16]
   122ec:	str	r5, [sl, #20]
   122f0:	str	r1, [sl, #24]
   122f4:	str	r5, [sl, #28]
   122f8:	str	r0, [sl, #48]	; 0x30
   122fc:	add	r0, sl, #32
   12300:	str	r5, [sl, #52]	; 0x34
   12304:	vst1.32	{d16-d17}, [r0]
   12308:	blt	12344 <table_dupe@@Base+0xb0>
   1230c:	mov	r0, r4
   12310:	mov	r1, r5
   12314:	bl	12bac <table_get_column_name@@Base>
   12318:	mov	r7, r0
   1231c:	mov	r0, r4
   12320:	mov	r1, r5
   12324:	bl	12bbc <table_get_column_data_type@@Base>
   12328:	mov	r2, r0
   1232c:	mov	r0, sl
   12330:	mov	r1, r7
   12334:	bl	12bd0 <table_add_column@@Base>
   12338:	add	r5, r5, #1
   1233c:	cmp	r6, r5
   12340:	bne	1230c <table_dupe@@Base+0x78>
   12344:	cmp	r8, #1
   12348:	blt	127b4 <table_dupe@@Base+0x520>
   1234c:	mov	r5, #0
   12350:	add	r9, sp, #8
   12354:	mov	r0, sl
   12358:	bl	13874 <table_add_row@@Base>
   1235c:	cmp	r6, #1
   12360:	blt	127a8 <table_dupe@@Base+0x514>
   12364:	mov	r7, #0
   12368:	mov	r0, r4
   1236c:	mov	r1, r7
   12370:	bl	12bbc <table_get_column_data_type@@Base>
   12374:	cmp	r0, #23
   12378:	bhi	1279c <table_dupe@@Base+0x508>
   1237c:	add	r1, pc, #4
   12380:	ldr	r0, [r1, r0, lsl #2]
   12384:	add	pc, r1, r0
   12388:	andeq	r0, r0, r0, rrx
   1238c:	andeq	r0, r0, r8, lsl #1
   12390:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12394:	ldrdeq	r0, [r0], -r8
   12398:	andeq	r0, r0, r0, lsl #2
   1239c:	andeq	r0, r0, r8, lsr #2
   123a0:	andeq	r0, r0, r0, asr r1
   123a4:	andeq	r0, r0, r8, ror r1
   123a8:	andeq	r0, r0, r0, lsr #3
   123ac:	andeq	r0, r0, r8, asr #3
   123b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   123b4:	andeq	r0, r0, r8, lsl r2
   123b8:	andeq	r0, r0, r0, asr #4
   123bc:	andeq	r0, r0, r8, ror #4
   123c0:	muleq	r0, r0, r2
   123c4:			; <UNDEFINED> instruction: 0x000002b8
   123c8:	andeq	r0, r0, r0, ror #5
   123cc:	andeq	r0, r0, r4, lsl #6
   123d0:	andeq	r0, r0, r8, lsr #6
   123d4:	andeq	r0, r0, ip, asr #6
   123d8:	andeq	r0, r0, r4, ror r3
   123dc:	muleq	r0, ip, r3
   123e0:	andeq	r0, r0, r4, asr #7
   123e4:	andeq	r0, r0, ip, ror #7
   123e8:	mov	r0, r4
   123ec:	mov	r1, r5
   123f0:	mov	r2, r7
   123f4:	bl	135c4 <table_get_int@@Base>
   123f8:	mov	r3, r0
   123fc:	mov	r0, sl
   12400:	mov	r1, r5
   12404:	mov	r2, r7
   12408:	bl	13dd0 <table_set_int@@Base>
   1240c:	b	1279c <table_dupe@@Base+0x508>
   12410:	mov	r0, r4
   12414:	mov	r1, r5
   12418:	mov	r2, r7
   1241c:	bl	135dc <table_get_uint@@Base>
   12420:	mov	r3, r0
   12424:	mov	r0, sl
   12428:	mov	r1, r5
   1242c:	mov	r2, r7
   12430:	bl	13e50 <table_set_uint@@Base>
   12434:	b	1279c <table_dupe@@Base+0x508>
   12438:	mov	r0, r4
   1243c:	mov	r1, r5
   12440:	mov	r2, r7
   12444:	bl	135f4 <table_get_int8@@Base>
   12448:	mov	r3, r0
   1244c:	mov	r0, sl
   12450:	mov	r1, r5
   12454:	mov	r2, r7
   12458:	bl	13ed0 <table_set_int8@@Base>
   1245c:	b	1279c <table_dupe@@Base+0x508>
   12460:	mov	r0, r4
   12464:	mov	r1, r5
   12468:	mov	r2, r7
   1246c:	bl	1360c <table_get_uint8@@Base>
   12470:	mov	r3, r0
   12474:	mov	r0, sl
   12478:	mov	r1, r5
   1247c:	mov	r2, r7
   12480:	bl	13f50 <table_set_uint8@@Base>
   12484:	b	1279c <table_dupe@@Base+0x508>
   12488:	mov	r0, r4
   1248c:	mov	r1, r5
   12490:	mov	r2, r7
   12494:	bl	13624 <table_get_int16@@Base>
   12498:	mov	r3, r0
   1249c:	mov	r0, sl
   124a0:	mov	r1, r5
   124a4:	mov	r2, r7
   124a8:	bl	13fd0 <table_set_int16@@Base>
   124ac:	b	1279c <table_dupe@@Base+0x508>
   124b0:	mov	r0, r4
   124b4:	mov	r1, r5
   124b8:	mov	r2, r7
   124bc:	bl	1363c <table_get_uint16@@Base>
   124c0:	mov	r3, r0
   124c4:	mov	r0, sl
   124c8:	mov	r1, r5
   124cc:	mov	r2, r7
   124d0:	bl	14050 <table_set_uint16@@Base>
   124d4:	b	1279c <table_dupe@@Base+0x508>
   124d8:	mov	r0, r4
   124dc:	mov	r1, r5
   124e0:	mov	r2, r7
   124e4:	bl	13654 <table_get_int32@@Base>
   124e8:	mov	r3, r0
   124ec:	mov	r0, sl
   124f0:	mov	r1, r5
   124f4:	mov	r2, r7
   124f8:	bl	140d0 <table_set_int32@@Base>
   124fc:	b	1279c <table_dupe@@Base+0x508>
   12500:	mov	r0, r4
   12504:	mov	r1, r5
   12508:	mov	r2, r7
   1250c:	bl	1366c <table_get_uint32@@Base>
   12510:	mov	r3, r0
   12514:	mov	r0, sl
   12518:	mov	r1, r5
   1251c:	mov	r2, r7
   12520:	bl	14150 <table_set_uint32@@Base>
   12524:	b	1279c <table_dupe@@Base+0x508>
   12528:	mov	r0, r4
   1252c:	mov	r1, r5
   12530:	mov	r2, r7
   12534:	bl	13684 <table_get_int64@@Base>
   12538:	stm	sp, {r0, r1}
   1253c:	mov	r0, sl
   12540:	mov	r1, r5
   12544:	mov	r2, r7
   12548:	bl	141d0 <table_set_int64@@Base>
   1254c:	b	1279c <table_dupe@@Base+0x508>
   12550:	mov	r0, r4
   12554:	mov	r1, r5
   12558:	mov	r2, r7
   1255c:	bl	1369c <table_get_uint64@@Base>
   12560:	stm	sp, {r0, r1}
   12564:	mov	r0, sl
   12568:	mov	r1, r5
   1256c:	mov	r2, r7
   12570:	bl	14258 <table_set_uint64@@Base>
   12574:	b	1279c <table_dupe@@Base+0x508>
   12578:	mov	r0, r4
   1257c:	mov	r1, r5
   12580:	mov	r2, r7
   12584:	bl	136b4 <table_get_short@@Base>
   12588:	mov	r3, r0
   1258c:	mov	r0, sl
   12590:	mov	r1, r5
   12594:	mov	r2, r7
   12598:	bl	142e0 <table_set_short@@Base>
   1259c:	b	1279c <table_dupe@@Base+0x508>
   125a0:	mov	r0, r4
   125a4:	mov	r1, r5
   125a8:	mov	r2, r7
   125ac:	bl	136cc <table_get_ushort@@Base>
   125b0:	mov	r3, r0
   125b4:	mov	r0, sl
   125b8:	mov	r1, r5
   125bc:	mov	r2, r7
   125c0:	bl	14360 <table_set_ushort@@Base>
   125c4:	b	1279c <table_dupe@@Base+0x508>
   125c8:	mov	r0, r4
   125cc:	mov	r1, r5
   125d0:	mov	r2, r7
   125d4:	bl	136e4 <table_get_long@@Base>
   125d8:	mov	r3, r0
   125dc:	mov	r0, sl
   125e0:	mov	r1, r5
   125e4:	mov	r2, r7
   125e8:	bl	143e0 <table_set_long@@Base>
   125ec:	b	1279c <table_dupe@@Base+0x508>
   125f0:	mov	r0, r4
   125f4:	mov	r1, r5
   125f8:	mov	r2, r7
   125fc:	bl	136fc <table_get_ulong@@Base>
   12600:	mov	r3, r0
   12604:	mov	r0, sl
   12608:	mov	r1, r5
   1260c:	mov	r2, r7
   12610:	bl	14460 <table_set_ulong@@Base>
   12614:	b	1279c <table_dupe@@Base+0x508>
   12618:	mov	r0, r4
   1261c:	mov	r1, r5
   12620:	mov	r2, r7
   12624:	bl	13714 <table_get_llong@@Base>
   12628:	stm	sp, {r0, r1}
   1262c:	mov	r0, sl
   12630:	mov	r1, r5
   12634:	mov	r2, r7
   12638:	bl	144e0 <table_set_llong@@Base>
   1263c:	b	1279c <table_dupe@@Base+0x508>
   12640:	mov	r0, r4
   12644:	mov	r1, r5
   12648:	mov	r2, r7
   1264c:	bl	1372c <table_get_ullong@@Base>
   12650:	stm	sp, {r0, r1}
   12654:	mov	r0, sl
   12658:	mov	r1, r5
   1265c:	mov	r2, r7
   12660:	bl	14568 <table_set_ullong@@Base>
   12664:	b	1279c <table_dupe@@Base+0x508>
   12668:	mov	r0, r4
   1266c:	mov	r1, r5
   12670:	mov	r2, r7
   12674:	bl	13744 <table_get_float@@Base>
   12678:	mov	r0, sl
   1267c:	mov	r1, r5
   12680:	mov	r2, r7
   12684:	bl	145f0 <table_set_float@@Base>
   12688:	b	1279c <table_dupe@@Base+0x508>
   1268c:	mov	r0, r4
   12690:	mov	r1, r5
   12694:	mov	r2, r7
   12698:	bl	1375c <table_get_double@@Base>
   1269c:	mov	r0, sl
   126a0:	mov	r1, r5
   126a4:	mov	r2, r7
   126a8:	bl	1467c <table_set_double@@Base>
   126ac:	b	1279c <table_dupe@@Base+0x508>
   126b0:	mov	r0, r4
   126b4:	mov	r1, r5
   126b8:	mov	r2, r7
   126bc:	bl	13774 <table_get_ldouble@@Base>
   126c0:	mov	r0, sl
   126c4:	mov	r1, r5
   126c8:	mov	r2, r7
   126cc:	bl	14704 <table_set_ldouble@@Base>
   126d0:	b	1279c <table_dupe@@Base+0x508>
   126d4:	mov	r0, r4
   126d8:	mov	r1, r5
   126dc:	mov	r2, r7
   126e0:	bl	1378c <table_get_char@@Base>
   126e4:	mov	r3, r0
   126e8:	mov	r0, sl
   126ec:	mov	r1, r5
   126f0:	mov	r2, r7
   126f4:	bl	147ac <table_set_char@@Base>
   126f8:	b	1279c <table_dupe@@Base+0x508>
   126fc:	mov	r0, r4
   12700:	mov	r1, r5
   12704:	mov	r2, r7
   12708:	bl	137a4 <table_get_uchar@@Base>
   1270c:	mov	r3, r0
   12710:	mov	r0, sl
   12714:	mov	r1, r5
   12718:	mov	r2, r7
   1271c:	bl	1482c <table_set_uchar@@Base>
   12720:	b	1279c <table_dupe@@Base+0x508>
   12724:	mov	r0, r4
   12728:	mov	r1, r5
   1272c:	mov	r2, r7
   12730:	bl	137bc <table_get_string@@Base>
   12734:	mov	r3, r0
   12738:	mov	r0, sl
   1273c:	mov	r1, r5
   12740:	mov	r2, r7
   12744:	bl	1478c <table_set_string@@Base>
   12748:	b	1279c <table_dupe@@Base+0x508>
   1274c:	mov	r0, r4
   12750:	mov	r1, r5
   12754:	mov	r2, r7
   12758:	bl	135ac <table_get_bool@@Base>
   1275c:	mov	r3, r0
   12760:	mov	r0, sl
   12764:	mov	r1, r5
   12768:	mov	r2, r7
   1276c:	bl	13d50 <table_set_bool@@Base>
   12770:	b	1279c <table_dupe@@Base+0x508>
   12774:	mov	r0, r4
   12778:	mov	r1, r5
   1277c:	mov	r2, r7
   12780:	bl	137d0 <table_get_ptr@@Base>
   12784:	str	r0, [sp, #8]
   12788:	mov	r0, sl
   1278c:	mov	r1, r5
   12790:	mov	r2, r7
   12794:	mov	r3, r9
   12798:	bl	148ac <table_set_ptr@@Base>
   1279c:	add	r7, r7, #1
   127a0:	cmp	r6, r7
   127a4:	bne	12368 <table_dupe@@Base+0xd4>
   127a8:	add	r5, r5, #1
   127ac:	cmp	r5, r8
   127b0:	bne	12354 <table_dupe@@Base+0xc0>
   127b4:	mov	r0, sl
   127b8:	sub	sp, fp, #28
   127bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000127c0 <table_get_major_version@@Base>:
   127c0:	mov	r0, #0
   127c4:	bx	lr

000127c8 <table_get_minor_version@@Base>:
   127c8:	mov	r0, #0
   127cc:	bx	lr

000127d0 <table_get_patch_version@@Base>:
   127d0:	mov	r0, #0
   127d4:	bx	lr

000127d8 <table_get_version@@Base>:
   127d8:	ldr	r0, [pc, #4]	; 127e4 <table_get_version@@Base+0xc>
   127dc:	add	r0, pc, r0
   127e0:	bx	lr
   127e4:	ldrdeq	r2, [r0], -r3

000127e8 <table_get_callback_length@@Base>:
   127e8:	ldr	r0, [r0, #32]
   127ec:	bx	lr

000127f0 <table_register_callback@@Base>:
   127f0:	push	{r4, r5, r6, r7, fp, lr}
   127f4:	add	fp, sp, #16
   127f8:	mov	r5, r0
   127fc:	ldr	r0, [r0, #32]
   12800:	mov	r4, r3
   12804:	mov	r6, r2
   12808:	mov	r7, r1
   1280c:	cmp	r0, #1
   12810:	blt	12844 <table_register_callback@@Base+0x54>
   12814:	ldr	r2, [r5, #36]	; 0x24
   12818:	mov	r1, #0
   1281c:	ldr	r3, [r2, r1, lsl #2]
   12820:	cmp	r3, r7
   12824:	bne	12838 <table_register_callback@@Base+0x48>
   12828:	ldr	r3, [r5, #40]	; 0x28
   1282c:	ldr	r3, [r3, r1, lsl #2]
   12830:	cmp	r3, r6
   12834:	beq	128c8 <table_register_callback@@Base+0xd8>
   12838:	add	r1, r1, #1
   1283c:	cmp	r1, r0
   12840:	blt	1281c <table_register_callback@@Base+0x2c>
   12844:	ldr	r1, [r5, #48]	; 0x30
   12848:	udiv	r2, r0, r1
   1284c:	mls	r2, r2, r1, r0
   12850:	cmp	r2, #0
   12854:	bne	128a0 <table_register_callback@@Base+0xb0>
   12858:	ldr	r2, [r5, #52]	; 0x34
   1285c:	ldr	r0, [r5, #36]	; 0x24
   12860:	add	r1, r2, r1
   12864:	str	r1, [r5, #52]	; 0x34
   12868:	lsl	r1, r1, #2
   1286c:	bl	11eb4 <realloc@plt>
   12870:	str	r0, [r5, #36]	; 0x24
   12874:	ldr	r1, [r5, #52]	; 0x34
   12878:	ldr	r0, [r5, #40]	; 0x28
   1287c:	lsl	r1, r1, #2
   12880:	bl	11eb4 <realloc@plt>
   12884:	str	r0, [r5, #40]	; 0x28
   12888:	ldr	r1, [r5, #52]	; 0x34
   1288c:	ldr	r0, [r5, #44]	; 0x2c
   12890:	lsl	r1, r1, #2
   12894:	bl	11eb4 <realloc@plt>
   12898:	str	r0, [r5, #44]	; 0x2c
   1289c:	ldr	r0, [r5, #32]
   128a0:	ldr	r1, [r5, #36]	; 0x24
   128a4:	str	r7, [r1, r0, lsl #2]
   128a8:	ldr	r1, [r5, #40]	; 0x28
   128ac:	str	r6, [r1, r0, lsl #2]
   128b0:	ldr	r1, [r5, #44]	; 0x2c
   128b4:	str	r4, [r1, r0, lsl #2]
   128b8:	ldr	r0, [r5, #32]
   128bc:	add	r0, r0, #1
   128c0:	str	r0, [r5, #32]
   128c4:	pop	{r4, r5, r6, r7, fp, pc}
   128c8:	cmp	r1, #0
   128cc:	ldrne	r0, [r5, #44]	; 0x2c
   128d0:	ldrne	r2, [r0, r1, lsl #2]
   128d4:	orrne	r2, r2, r4
   128d8:	strne	r2, [r0, r1, lsl #2]
   128dc:	popne	{r4, r5, r6, r7, fp, pc}
   128e0:	b	12844 <table_register_callback@@Base+0x54>

000128e4 <table_unregister_callback@@Base>:
   128e4:	push	{r4, r5, r6, sl, fp, lr}
   128e8:	add	fp, sp, #16
   128ec:	ldr	r4, [r0, #32]
   128f0:	cmp	r4, #1
   128f4:	blt	1292c <table_unregister_callback@@Base+0x48>
   128f8:	ldr	r3, [r0, #36]	; 0x24
   128fc:	mov	r6, r0
   12900:	mov	r0, #0
   12904:	ldr	r5, [r3, r0, lsl #2]
   12908:	cmp	r5, r1
   1290c:	bne	12920 <table_unregister_callback@@Base+0x3c>
   12910:	ldr	r5, [r6, #40]	; 0x28
   12914:	ldr	r5, [r5, r0, lsl #2]
   12918:	cmp	r5, r2
   1291c:	beq	12930 <table_unregister_callback@@Base+0x4c>
   12920:	add	r0, r0, #1
   12924:	cmp	r0, r4
   12928:	blt	12904 <table_unregister_callback@@Base+0x20>
   1292c:	pop	{r4, r5, r6, sl, fp, pc}
   12930:	sub	r1, r4, #1
   12934:	cmp	r0, r1
   12938:	bge	129c8 <table_unregister_callback@@Base+0xe4>
   1293c:	add	r1, r3, r0, lsl #2
   12940:	ldr	r1, [r1, #4]
   12944:	str	r1, [r3, r0, lsl #2]
   12948:	ldr	r1, [r6, #40]	; 0x28
   1294c:	add	r2, r1, r0, lsl #2
   12950:	ldr	r2, [r2, #4]
   12954:	str	r2, [r1, r0, lsl #2]
   12958:	ldr	r1, [r6, #44]	; 0x2c
   1295c:	add	r2, r1, r0, lsl #2
   12960:	ldr	r2, [r2, #4]
   12964:	str	r2, [r1, r0, lsl #2]
   12968:	add	r2, r0, #1
   1296c:	ldr	r1, [r6, #32]
   12970:	sub	r1, r1, #1
   12974:	cmp	r2, r1
   12978:	bge	129c8 <table_unregister_callback@@Base+0xe4>
   1297c:	ldr	r1, [r6, #36]	; 0x24
   12980:	add	r1, r1, r0, lsl #2
   12984:	ldr	r2, [r1, #8]
   12988:	str	r2, [r1, #4]
   1298c:	ldr	r1, [r6, #40]	; 0x28
   12990:	add	r1, r1, r0, lsl #2
   12994:	ldr	r2, [r1, #8]
   12998:	str	r2, [r1, #4]
   1299c:	ldr	r1, [r6, #44]	; 0x2c
   129a0:	add	r1, r1, r0, lsl #2
   129a4:	ldr	r2, [r1, #8]
   129a8:	str	r2, [r1, #4]
   129ac:	add	r2, r0, #1
   129b0:	add	r0, r0, #2
   129b4:	ldr	r1, [r6, #32]
   129b8:	sub	r1, r1, #1
   129bc:	cmp	r0, r1
   129c0:	mov	r0, r2
   129c4:	blt	1297c <table_unregister_callback@@Base+0x98>
   129c8:	str	r1, [r6, #32]
   129cc:	ldr	r2, [r6, #48]	; 0x30
   129d0:	udiv	r0, r1, r2
   129d4:	mls	r0, r0, r2, r1
   129d8:	cmp	r0, #0
   129dc:	popne	{r4, r5, r6, sl, fp, pc}
   129e0:	ldr	r1, [r6, #52]	; 0x34
   129e4:	ldr	r0, [r6, #36]	; 0x24
   129e8:	subs	r1, r1, r2
   129ec:	str	r1, [r6, #52]	; 0x34
   129f0:	beq	12a2c <table_unregister_callback@@Base+0x148>
   129f4:	lsl	r1, r1, #2
   129f8:	bl	11eb4 <realloc@plt>
   129fc:	str	r0, [r6, #36]	; 0x24
   12a00:	ldr	r1, [r6, #52]	; 0x34
   12a04:	ldr	r0, [r6, #40]	; 0x28
   12a08:	lsl	r1, r1, #2
   12a0c:	bl	11eb4 <realloc@plt>
   12a10:	str	r0, [r6, #40]	; 0x28
   12a14:	ldr	r1, [r6, #52]	; 0x34
   12a18:	ldr	r0, [r6, #44]	; 0x2c
   12a1c:	lsl	r1, r1, #2
   12a20:	bl	11eb4 <realloc@plt>
   12a24:	str	r0, [r6, #44]	; 0x2c
   12a28:	pop	{r4, r5, r6, sl, fp, pc}
   12a2c:	bl	11ea8 <free@plt>
   12a30:	ldr	r0, [r6, #40]	; 0x28
   12a34:	bl	11ea8 <free@plt>
   12a38:	ldr	r0, [r6, #44]	; 0x2c
   12a3c:	bl	11ea8 <free@plt>
   12a40:	mov	r0, #0
   12a44:	str	r0, [r6, #36]	; 0x24
   12a48:	str	r0, [r6, #40]	; 0x28
   12a4c:	str	r0, [r6, #44]	; 0x2c
   12a50:	pop	{r4, r5, r6, sl, fp, pc}

00012a54 <table_notify@@Base>:
   12a54:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a58:	add	fp, sp, #24
   12a5c:	sub	sp, sp, #8
   12a60:	mov	r7, r0
   12a64:	ldr	r0, [r0, #32]
   12a68:	cmp	r0, #1
   12a6c:	blt	12ac8 <table_notify@@Base+0x74>
   12a70:	mov	r4, r3
   12a74:	mov	r8, r2
   12a78:	mov	r9, r1
   12a7c:	mov	r5, #0
   12a80:	ldr	r1, [r7, #44]	; 0x2c
   12a84:	ldr	r1, [r1, r5, lsl #2]
   12a88:	tst	r1, r4
   12a8c:	beq	12abc <table_notify@@Base+0x68>
   12a90:	ldr	r0, [r7, #36]	; 0x24
   12a94:	ldr	r1, [r7, #40]	; 0x28
   12a98:	mov	r2, r8
   12a9c:	mov	r3, r4
   12aa0:	ldr	r6, [r0, r5, lsl #2]
   12aa4:	ldr	r0, [r1, r5, lsl #2]
   12aa8:	mov	r1, r9
   12aac:	str	r0, [sp]
   12ab0:	mov	r0, r7
   12ab4:	blx	r6
   12ab8:	ldr	r0, [r7, #32]
   12abc:	add	r5, r5, #1
   12ac0:	cmp	r5, r0
   12ac4:	blt	12a80 <table_notify@@Base+0x2c>
   12ac8:	sub	sp, fp, #24
   12acc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012ad0 <table_column_init@@Base>:
   12ad0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ad4:	add	fp, sp, #24
   12ad8:	ldr	r7, [r0]
   12adc:	mov	r0, r2
   12ae0:	mov	r4, r3
   12ae4:	mov	r5, r2
   12ae8:	mov	r6, r1
   12aec:	bl	11ef0 <strlen@plt>
   12af0:	add	r0, r0, #1
   12af4:	bl	11ecc <malloc@plt>
   12af8:	ldr	r8, [fp, #8]
   12afc:	add	r6, r6, r6, lsl #1
   12b00:	cmp	r0, #0
   12b04:	str	r0, [r7, r6, lsl #2]
   12b08:	beq	12b14 <table_column_init@@Base+0x44>
   12b0c:	mov	r1, r5
   12b10:	bl	11ec0 <strcpy@plt>
   12b14:	add	r0, r7, r6, lsl #2
   12b18:	stmib	r0, {r4, r8}
   12b1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012b20 <table_get_col_ptr@@Base>:
   12b20:	ldr	r0, [r0]
   12b24:	add	r1, r1, r1, lsl #1
   12b28:	add	r0, r0, r1, lsl #2
   12b2c:	bx	lr

00012b30 <table_column_destroy@@Base>:
   12b30:	ldr	r0, [r0]
   12b34:	add	r1, r1, r1, lsl #1
   12b38:	ldr	r0, [r0, r1, lsl #2]
   12b3c:	cmp	r0, #0
   12b40:	bxeq	lr
   12b44:	b	11ea8 <free@plt>

00012b48 <table_get_column_length@@Base>:
   12b48:	ldr	r0, [r0, #4]
   12b4c:	bx	lr

00012b50 <table_get_column@@Base>:
   12b50:	push	{r4, r5, r6, r7, fp, lr}
   12b54:	add	fp, sp, #16
   12b58:	ldr	r6, [r0, #4]
   12b5c:	cmp	r6, #1
   12b60:	blt	12b98 <table_get_column@@Base+0x48>
   12b64:	ldr	r7, [r0]
   12b68:	mov	r5, r1
   12b6c:	mov	r4, #0
   12b70:	ldr	r0, [r7]
   12b74:	mov	r1, r5
   12b78:	bl	11e90 <strcmp@plt>
   12b7c:	cmp	r0, #0
   12b80:	beq	12b9c <table_get_column@@Base+0x4c>
   12b84:	add	r4, r4, #1
   12b88:	add	r7, r7, #12
   12b8c:	cmp	r4, r6
   12b90:	blt	12b70 <table_get_column@@Base+0x20>
   12b94:	b	12b9c <table_get_column@@Base+0x4c>
   12b98:	mov	r4, #0
   12b9c:	cmp	r4, r6
   12ba0:	mvneq	r4, #0
   12ba4:	mov	r0, r4
   12ba8:	pop	{r4, r5, r6, r7, fp, pc}

00012bac <table_get_column_name@@Base>:
   12bac:	ldr	r0, [r0]
   12bb0:	add	r1, r1, r1, lsl #1
   12bb4:	ldr	r0, [r0, r1, lsl #2]
   12bb8:	bx	lr

00012bbc <table_get_column_data_type@@Base>:
   12bbc:	ldr	r0, [r0]
   12bc0:	add	r1, r1, r1, lsl #1
   12bc4:	add	r0, r0, r1, lsl #2
   12bc8:	ldr	r0, [r0, #4]
   12bcc:	bx	lr

00012bd0 <table_add_column@@Base>:
   12bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bd4:	add	fp, sp, #28
   12bd8:	sub	sp, sp, #4
   12bdc:	mov	r4, r0
   12be0:	mov	r8, r1
   12be4:	ldr	r0, [r0, #4]
   12be8:	mov	r9, r2
   12bec:	ldr	r1, [r4, #8]
   12bf0:	udiv	r2, r0, r1
   12bf4:	mls	r0, r2, r1, r0
   12bf8:	cmp	r0, #0
   12bfc:	bne	12c68 <table_add_column@@Base+0x98>
   12c00:	ldr	r2, [r4, #12]
   12c04:	ldr	r0, [r4]
   12c08:	add	r1, r2, r1
   12c0c:	str	r1, [r4, #12]
   12c10:	add	r1, r1, r1, lsl #1
   12c14:	lsl	r1, r1, #2
   12c18:	bl	11eb4 <realloc@plt>
   12c1c:	str	r0, [r4]
   12c20:	mov	r0, r4
   12c24:	bl	1386c <table_get_row_length@@Base>
   12c28:	cmp	r0, #1
   12c2c:	blt	12c68 <table_add_column@@Base+0x98>
   12c30:	mov	r6, r0
   12c34:	mov	r5, #0
   12c38:	mov	r0, r4
   12c3c:	mov	r1, r5
   12c40:	bl	13808 <table_get_row_ptr@@Base>
   12c44:	ldr	r1, [r4, #12]
   12c48:	mov	r7, r0
   12c4c:	ldr	r0, [r0]
   12c50:	lsl	r1, r1, #2
   12c54:	bl	11eb4 <realloc@plt>
   12c58:	add	r5, r5, #1
   12c5c:	str	r0, [r7]
   12c60:	cmp	r6, r5
   12c64:	bne	12c38 <table_add_column@@Base+0x68>
   12c68:	mov	r0, r4
   12c6c:	bl	1386c <table_get_row_length@@Base>
   12c70:	ldr	r6, [r4, #4]
   12c74:	mov	r7, r0
   12c78:	mov	r0, r9
   12c7c:	bl	1357c <table_get_default_compare_function_for_data_type@@Base>
   12c80:	ldr	r5, [r4]
   12c84:	mov	sl, r0
   12c88:	mov	r0, r8
   12c8c:	bl	11ef0 <strlen@plt>
   12c90:	add	r0, r0, #1
   12c94:	bl	11ecc <malloc@plt>
   12c98:	mov	r1, r8
   12c9c:	add	r8, r6, r6, lsl #1
   12ca0:	cmp	r0, #0
   12ca4:	str	r0, [r5, r8, lsl #2]
   12ca8:	beq	12cb0 <table_add_column@@Base+0xe0>
   12cac:	bl	11ec0 <strcpy@plt>
   12cb0:	add	r0, r5, r8, lsl #2
   12cb4:	cmp	r7, #1
   12cb8:	stmib	r0, {r9, sl}
   12cbc:	blt	12ce0 <table_add_column@@Base+0x110>
   12cc0:	mov	r5, #0
   12cc4:	mov	r0, r4
   12cc8:	mov	r1, r5
   12ccc:	mov	r2, r6
   12cd0:	bl	14908 <table_cell_init@@Base>
   12cd4:	add	r5, r5, #1
   12cd8:	cmp	r7, r5
   12cdc:	bne	12cc4 <table_add_column@@Base+0xf4>
   12ce0:	ldr	r2, [r4, #4]
   12ce4:	mov	r0, r4
   12ce8:	mvn	r1, #0
   12cec:	mov	r3, #8
   12cf0:	bl	12a54 <table_notify@@Base>
   12cf4:	ldr	r0, [r4, #4]
   12cf8:	add	r1, r0, #1
   12cfc:	str	r1, [r4, #4]
   12d00:	sub	sp, fp, #28
   12d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012d08 <table_remove_column@@Base>:
   12d08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d0c:	add	fp, sp, #24
   12d10:	mov	r5, r0
   12d14:	ldr	r0, [r0]
   12d18:	add	r6, r1, r1, lsl #1
   12d1c:	mov	r9, r1
   12d20:	ldr	r0, [r0, r6, lsl #2]
   12d24:	cmp	r0, #0
   12d28:	beq	12d30 <table_remove_column@@Base+0x28>
   12d2c:	bl	11ea8 <free@plt>
   12d30:	ldr	r0, [r5, #4]
   12d34:	sub	r4, r0, #1
   12d38:	cmp	r4, r9
   12d3c:	ble	12d6c <table_remove_column@@Base+0x64>
   12d40:	sub	r0, r4, r9
   12d44:	lsl	r1, r6, #2
   12d48:	ldr	r2, [r5]
   12d4c:	subs	r0, r0, #1
   12d50:	add	r2, r2, r1
   12d54:	add	r1, r1, #12
   12d58:	vldr	d16, [r2, #12]
   12d5c:	ldr	r3, [r2, #20]
   12d60:	str	r3, [r2, #8]
   12d64:	vstr	d16, [r2]
   12d68:	bne	12d48 <table_remove_column@@Base+0x40>
   12d6c:	mov	r0, r5
   12d70:	bl	1386c <table_get_row_length@@Base>
   12d74:	cmp	r0, #1
   12d78:	blt	12dd4 <table_remove_column@@Base+0xcc>
   12d7c:	mov	r6, r0
   12d80:	mov	r7, #0
   12d84:	mov	r0, r5
   12d88:	mov	r1, r7
   12d8c:	mov	r2, r9
   12d90:	bl	14944 <table_cell_destroy@@Base>
   12d94:	mov	r0, r5
   12d98:	mov	r1, r7
   12d9c:	bl	13808 <table_get_row_ptr@@Base>
   12da0:	cmp	r4, r9
   12da4:	ble	12dc8 <table_remove_column@@Base+0xc0>
   12da8:	mov	r1, r9
   12dac:	ldr	r2, [r0]
   12db0:	add	r3, r2, r1, lsl #2
   12db4:	ldr	r3, [r3, #4]
   12db8:	str	r3, [r2, r1, lsl #2]
   12dbc:	add	r1, r1, #1
   12dc0:	cmp	r4, r1
   12dc4:	bne	12dac <table_remove_column@@Base+0xa4>
   12dc8:	add	r7, r7, #1
   12dcc:	cmp	r7, r6
   12dd0:	bne	12d84 <table_remove_column@@Base+0x7c>
   12dd4:	ldmib	r5, {r0, r1}
   12dd8:	sub	r0, r0, #1
   12ddc:	udiv	r2, r0, r1
   12de0:	str	r0, [r5, #4]
   12de4:	mls	r0, r2, r1, r0
   12de8:	cmp	r0, #0
   12dec:	bne	12e58 <table_remove_column@@Base+0x150>
   12df0:	ldr	r2, [r5, #12]
   12df4:	ldr	r0, [r5]
   12df8:	sub	r1, r2, r1
   12dfc:	str	r1, [r5, #12]
   12e00:	add	r1, r1, r1, lsl #1
   12e04:	lsl	r1, r1, #2
   12e08:	bl	11eb4 <realloc@plt>
   12e0c:	str	r0, [r5]
   12e10:	mov	r0, r5
   12e14:	bl	1386c <table_get_row_length@@Base>
   12e18:	cmp	r0, #1
   12e1c:	blt	12e58 <table_remove_column@@Base+0x150>
   12e20:	mov	r8, r0
   12e24:	mov	r7, #0
   12e28:	mov	r0, r5
   12e2c:	mov	r1, r7
   12e30:	bl	13808 <table_get_row_ptr@@Base>
   12e34:	ldr	r1, [r5, #12]
   12e38:	mov	r6, r0
   12e3c:	ldr	r0, [r0]
   12e40:	lsl	r1, r1, #2
   12e44:	bl	11eb4 <realloc@plt>
   12e48:	add	r7, r7, #1
   12e4c:	str	r0, [r6]
   12e50:	cmp	r8, r7
   12e54:	bne	12e28 <table_remove_column@@Base+0x120>
   12e58:	mov	r0, r5
   12e5c:	mvn	r1, #0
   12e60:	mov	r2, r9
   12e64:	mov	r3, #16
   12e68:	bl	12a54 <table_notify@@Base>
   12e6c:	mov	r0, #0
   12e70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012e74 <table_get_column_compare_function@@Base>:
   12e74:	ldr	r0, [r0]
   12e78:	add	r1, r1, r1, lsl #1
   12e7c:	add	r0, r0, r1, lsl #2
   12e80:	ldr	r0, [r0, #8]
   12e84:	bx	lr

00012e88 <table_set_column_compare_function@@Base>:
   12e88:	ldr	r0, [r0]
   12e8c:	add	r1, r1, r1, lsl #1
   12e90:	add	r0, r0, r1, lsl #2
   12e94:	str	r2, [r0, #8]
   12e98:	bx	lr

00012e9c <table_compare_bool@@Base>:
   12e9c:	cmp	r0, #0
   12ea0:	beq	12ed4 <table_compare_bool@@Base+0x38>
   12ea4:	cmp	r1, #0
   12ea8:	moveq	r1, #1
   12eac:	moveq	r0, r1
   12eb0:	bxeq	lr
   12eb4:	ldrb	r2, [r1]
   12eb8:	ldrb	r0, [r0]
   12ebc:	mov	r1, #0
   12ec0:	cmp	r0, r2
   12ec4:	mvncc	r1, #0
   12ec8:	movwhi	r1, #1
   12ecc:	mov	r0, r1
   12ed0:	bx	lr
   12ed4:	cmp	r1, #0
   12ed8:	mvnne	r1, #0
   12edc:	mov	r0, r1
   12ee0:	bx	lr

00012ee4 <table_compare_int@@Base>:
   12ee4:	cmp	r0, #0
   12ee8:	beq	12f1c <table_compare_int@@Base+0x38>
   12eec:	cmp	r1, #0
   12ef0:	moveq	r1, #1
   12ef4:	moveq	r0, r1
   12ef8:	bxeq	lr
   12efc:	ldr	r2, [r1]
   12f00:	ldr	r0, [r0]
   12f04:	mov	r1, #0
   12f08:	cmp	r0, r2
   12f0c:	mvnlt	r1, #0
   12f10:	movwgt	r1, #1
   12f14:	mov	r0, r1
   12f18:	bx	lr
   12f1c:	cmp	r1, #0
   12f20:	mvnne	r1, #0
   12f24:	mov	r0, r1
   12f28:	bx	lr

00012f2c <table_compare_uint@@Base>:
   12f2c:	cmp	r0, #0
   12f30:	beq	12f64 <table_compare_uint@@Base+0x38>
   12f34:	cmp	r1, #0
   12f38:	moveq	r1, #1
   12f3c:	moveq	r0, r1
   12f40:	bxeq	lr
   12f44:	ldr	r2, [r1]
   12f48:	ldr	r0, [r0]
   12f4c:	mov	r1, #0
   12f50:	cmp	r0, r2
   12f54:	mvncc	r1, #0
   12f58:	movwhi	r1, #1
   12f5c:	mov	r0, r1
   12f60:	bx	lr
   12f64:	cmp	r1, #0
   12f68:	mvnne	r1, #0
   12f6c:	mov	r0, r1
   12f70:	bx	lr

00012f74 <table_compare_int8@@Base>:
   12f74:	cmp	r0, #0
   12f78:	beq	12fac <table_compare_int8@@Base+0x38>
   12f7c:	cmp	r1, #0
   12f80:	moveq	r1, #1
   12f84:	moveq	r0, r1
   12f88:	bxeq	lr
   12f8c:	ldrsb	r2, [r1]
   12f90:	ldrsb	r0, [r0]
   12f94:	mov	r1, #0
   12f98:	cmp	r0, r2
   12f9c:	mvnlt	r1, #0
   12fa0:	movwgt	r1, #1
   12fa4:	mov	r0, r1
   12fa8:	bx	lr
   12fac:	cmp	r1, #0
   12fb0:	mvnne	r1, #0
   12fb4:	mov	r0, r1
   12fb8:	bx	lr

00012fbc <table_compare_uint8@@Base>:
   12fbc:	cmp	r0, #0
   12fc0:	beq	12ff4 <table_compare_uint8@@Base+0x38>
   12fc4:	cmp	r1, #0
   12fc8:	moveq	r1, #1
   12fcc:	moveq	r0, r1
   12fd0:	bxeq	lr
   12fd4:	ldrb	r2, [r1]
   12fd8:	ldrb	r0, [r0]
   12fdc:	mov	r1, #0
   12fe0:	cmp	r0, r2
   12fe4:	mvncc	r1, #0
   12fe8:	movwhi	r1, #1
   12fec:	mov	r0, r1
   12ff0:	bx	lr
   12ff4:	cmp	r1, #0
   12ff8:	mvnne	r1, #0
   12ffc:	mov	r0, r1
   13000:	bx	lr

00013004 <table_compare_int16@@Base>:
   13004:	cmp	r0, #0
   13008:	beq	1303c <table_compare_int16@@Base+0x38>
   1300c:	cmp	r1, #0
   13010:	moveq	r1, #1
   13014:	moveq	r0, r1
   13018:	bxeq	lr
   1301c:	ldrsh	r2, [r1]
   13020:	ldrsh	r0, [r0]
   13024:	mov	r1, #0
   13028:	cmp	r0, r2
   1302c:	mvnlt	r1, #0
   13030:	movwgt	r1, #1
   13034:	mov	r0, r1
   13038:	bx	lr
   1303c:	cmp	r1, #0
   13040:	mvnne	r1, #0
   13044:	mov	r0, r1
   13048:	bx	lr

0001304c <table_compare_uint16@@Base>:
   1304c:	cmp	r0, #0
   13050:	beq	13084 <table_compare_uint16@@Base+0x38>
   13054:	cmp	r1, #0
   13058:	moveq	r1, #1
   1305c:	moveq	r0, r1
   13060:	bxeq	lr
   13064:	ldrh	r2, [r1]
   13068:	ldrh	r0, [r0]
   1306c:	mov	r1, #0
   13070:	cmp	r0, r2
   13074:	mvncc	r1, #0
   13078:	movwhi	r1, #1
   1307c:	mov	r0, r1
   13080:	bx	lr
   13084:	cmp	r1, #0
   13088:	mvnne	r1, #0
   1308c:	mov	r0, r1
   13090:	bx	lr

00013094 <table_compare_int32@@Base>:
   13094:	cmp	r0, #0
   13098:	beq	130cc <table_compare_int32@@Base+0x38>
   1309c:	cmp	r1, #0
   130a0:	moveq	r1, #1
   130a4:	moveq	r0, r1
   130a8:	bxeq	lr
   130ac:	ldr	r2, [r1]
   130b0:	ldr	r0, [r0]
   130b4:	mov	r1, #0
   130b8:	cmp	r0, r2
   130bc:	mvnlt	r1, #0
   130c0:	movwgt	r1, #1
   130c4:	mov	r0, r1
   130c8:	bx	lr
   130cc:	cmp	r1, #0
   130d0:	mvnne	r1, #0
   130d4:	mov	r0, r1
   130d8:	bx	lr

000130dc <table_compare_uint32@@Base>:
   130dc:	cmp	r0, #0
   130e0:	beq	13114 <table_compare_uint32@@Base+0x38>
   130e4:	cmp	r1, #0
   130e8:	moveq	r1, #1
   130ec:	moveq	r0, r1
   130f0:	bxeq	lr
   130f4:	ldr	r2, [r1]
   130f8:	ldr	r0, [r0]
   130fc:	mov	r1, #0
   13100:	cmp	r0, r2
   13104:	mvncc	r1, #0
   13108:	movwhi	r1, #1
   1310c:	mov	r0, r1
   13110:	bx	lr
   13114:	cmp	r1, #0
   13118:	mvnne	r1, #0
   1311c:	mov	r0, r1
   13120:	bx	lr

00013124 <table_compare_int64@@Base>:
   13124:	cmp	r0, #0
   13128:	beq	1317c <table_compare_int64@@Base+0x58>
   1312c:	cmp	r1, #0
   13130:	moveq	r1, #1
   13134:	moveq	r0, r1
   13138:	bxeq	lr
   1313c:	push	{r5, r7, fp, lr}
   13140:	add	fp, sp, #8
   13144:	ldm	r1, {r2, r7}
   13148:	ldm	r0, {r0, r5}
   1314c:	mov	r1, #0
   13150:	subs	r3, r0, r2
   13154:	sbcs	r3, r5, r7
   13158:	movwlt	r1, #1
   1315c:	cmp	r1, #0
   13160:	mvnne	r1, #0
   13164:	subs	r0, r2, r0
   13168:	sbcs	r0, r7, r5
   1316c:	movwlt	r1, #1
   13170:	pop	{r5, r7, fp, lr}
   13174:	mov	r0, r1
   13178:	bx	lr
   1317c:	cmp	r1, #0
   13180:	mvnne	r1, #0
   13184:	mov	r0, r1
   13188:	bx	lr

0001318c <table_compare_uint64@@Base>:
   1318c:	cmp	r0, #0
   13190:	beq	131e4 <table_compare_uint64@@Base+0x58>
   13194:	cmp	r1, #0
   13198:	moveq	r1, #1
   1319c:	moveq	r0, r1
   131a0:	bxeq	lr
   131a4:	push	{r5, r7, fp, lr}
   131a8:	add	fp, sp, #8
   131ac:	ldm	r1, {r2, r7}
   131b0:	ldm	r0, {r0, r5}
   131b4:	mov	r1, #0
   131b8:	subs	r3, r0, r2
   131bc:	sbcs	r3, r5, r7
   131c0:	movwcc	r1, #1
   131c4:	cmp	r1, #0
   131c8:	mvnne	r1, #0
   131cc:	subs	r0, r2, r0
   131d0:	sbcs	r0, r7, r5
   131d4:	movwcc	r1, #1
   131d8:	pop	{r5, r7, fp, lr}
   131dc:	mov	r0, r1
   131e0:	bx	lr
   131e4:	cmp	r1, #0
   131e8:	mvnne	r1, #0
   131ec:	mov	r0, r1
   131f0:	bx	lr

000131f4 <table_compare_short@@Base>:
   131f4:	cmp	r0, #0
   131f8:	beq	1322c <table_compare_short@@Base+0x38>
   131fc:	cmp	r1, #0
   13200:	moveq	r1, #1
   13204:	moveq	r0, r1
   13208:	bxeq	lr
   1320c:	ldrsh	r2, [r1]
   13210:	ldrsh	r0, [r0]
   13214:	mov	r1, #0
   13218:	cmp	r0, r2
   1321c:	mvnlt	r1, #0
   13220:	movwgt	r1, #1
   13224:	mov	r0, r1
   13228:	bx	lr
   1322c:	cmp	r1, #0
   13230:	mvnne	r1, #0
   13234:	mov	r0, r1
   13238:	bx	lr

0001323c <table_compare_ushort@@Base>:
   1323c:	cmp	r0, #0
   13240:	beq	13274 <table_compare_ushort@@Base+0x38>
   13244:	cmp	r1, #0
   13248:	moveq	r1, #1
   1324c:	moveq	r0, r1
   13250:	bxeq	lr
   13254:	ldrh	r2, [r1]
   13258:	ldrh	r0, [r0]
   1325c:	mov	r1, #0
   13260:	cmp	r0, r2
   13264:	mvncc	r1, #0
   13268:	movwhi	r1, #1
   1326c:	mov	r0, r1
   13270:	bx	lr
   13274:	cmp	r1, #0
   13278:	mvnne	r1, #0
   1327c:	mov	r0, r1
   13280:	bx	lr

00013284 <table_compare_long@@Base>:
   13284:	cmp	r0, #0
   13288:	beq	132bc <table_compare_long@@Base+0x38>
   1328c:	cmp	r1, #0
   13290:	moveq	r1, #1
   13294:	moveq	r0, r1
   13298:	bxeq	lr
   1329c:	ldr	r2, [r1]
   132a0:	ldr	r0, [r0]
   132a4:	mov	r1, #0
   132a8:	cmp	r0, r2
   132ac:	mvnlt	r1, #0
   132b0:	movwgt	r1, #1
   132b4:	mov	r0, r1
   132b8:	bx	lr
   132bc:	cmp	r1, #0
   132c0:	mvnne	r1, #0
   132c4:	mov	r0, r1
   132c8:	bx	lr

000132cc <table_compare_ulong@@Base>:
   132cc:	cmp	r0, #0
   132d0:	beq	13304 <table_compare_ulong@@Base+0x38>
   132d4:	cmp	r1, #0
   132d8:	moveq	r1, #1
   132dc:	moveq	r0, r1
   132e0:	bxeq	lr
   132e4:	ldr	r2, [r1]
   132e8:	ldr	r0, [r0]
   132ec:	mov	r1, #0
   132f0:	cmp	r0, r2
   132f4:	mvncc	r1, #0
   132f8:	movwhi	r1, #1
   132fc:	mov	r0, r1
   13300:	bx	lr
   13304:	cmp	r1, #0
   13308:	mvnne	r1, #0
   1330c:	mov	r0, r1
   13310:	bx	lr

00013314 <table_compare_llong@@Base>:
   13314:	cmp	r0, #0
   13318:	beq	1336c <table_compare_llong@@Base+0x58>
   1331c:	cmp	r1, #0
   13320:	moveq	r1, #1
   13324:	moveq	r0, r1
   13328:	bxeq	lr
   1332c:	push	{r5, r7, fp, lr}
   13330:	add	fp, sp, #8
   13334:	ldm	r1, {r2, r7}
   13338:	ldm	r0, {r0, r5}
   1333c:	mov	r1, #0
   13340:	subs	r3, r0, r2
   13344:	sbcs	r3, r5, r7
   13348:	movwlt	r1, #1
   1334c:	cmp	r1, #0
   13350:	mvnne	r1, #0
   13354:	subs	r0, r2, r0
   13358:	sbcs	r0, r7, r5
   1335c:	movwlt	r1, #1
   13360:	pop	{r5, r7, fp, lr}
   13364:	mov	r0, r1
   13368:	bx	lr
   1336c:	cmp	r1, #0
   13370:	mvnne	r1, #0
   13374:	mov	r0, r1
   13378:	bx	lr

0001337c <table_compare_ullong@@Base>:
   1337c:	cmp	r0, #0
   13380:	beq	133b4 <table_compare_ullong@@Base+0x38>
   13384:	cmp	r1, #0
   13388:	moveq	r1, #1
   1338c:	moveq	r0, r1
   13390:	bxeq	lr
   13394:	ldr	r2, [r1]
   13398:	ldr	r0, [r0]
   1339c:	mov	r1, #0
   133a0:	cmp	r0, r2
   133a4:	mvncc	r1, #0
   133a8:	movwhi	r1, #1
   133ac:	mov	r0, r1
   133b0:	bx	lr
   133b4:	cmp	r1, #0
   133b8:	mvnne	r1, #0
   133bc:	mov	r0, r1
   133c0:	bx	lr

000133c4 <table_compare_float@@Base>:
   133c4:	cmp	r0, #0
   133c8:	beq	13400 <table_compare_float@@Base+0x3c>
   133cc:	cmp	r1, #0
   133d0:	moveq	r1, #1
   133d4:	moveq	r0, r1
   133d8:	bxeq	lr
   133dc:	vldr	s0, [r1]
   133e0:	vldr	s2, [r0]
   133e4:	mov	r1, #0
   133e8:	vcmpe.f32	s2, s0
   133ec:	vmrs	APSR_nzcv, fpscr
   133f0:	mvnmi	r1, #0
   133f4:	movwgt	r1, #1
   133f8:	mov	r0, r1
   133fc:	bx	lr
   13400:	cmp	r1, #0
   13404:	mvnne	r1, #0
   13408:	mov	r0, r1
   1340c:	bx	lr

00013410 <table_compare_double@@Base>:
   13410:	cmp	r0, #0
   13414:	beq	1344c <table_compare_double@@Base+0x3c>
   13418:	cmp	r1, #0
   1341c:	moveq	r1, #1
   13420:	moveq	r0, r1
   13424:	bxeq	lr
   13428:	vldr	d16, [r1]
   1342c:	vldr	d17, [r0]
   13430:	mov	r1, #0
   13434:	vcmpe.f64	d17, d16
   13438:	vmrs	APSR_nzcv, fpscr
   1343c:	mvnmi	r1, #0
   13440:	movwgt	r1, #1
   13444:	mov	r0, r1
   13448:	bx	lr
   1344c:	cmp	r1, #0
   13450:	mvnne	r1, #0
   13454:	mov	r0, r1
   13458:	bx	lr

0001345c <table_compare_ldouble@@Base>:
   1345c:	cmp	r0, #0
   13460:	beq	13498 <table_compare_ldouble@@Base+0x3c>
   13464:	cmp	r1, #0
   13468:	moveq	r1, #1
   1346c:	moveq	r0, r1
   13470:	bxeq	lr
   13474:	vldr	d16, [r1]
   13478:	vldr	d17, [r0]
   1347c:	mov	r1, #0
   13480:	vcmpe.f64	d17, d16
   13484:	vmrs	APSR_nzcv, fpscr
   13488:	mvnmi	r1, #0
   1348c:	movwgt	r1, #1
   13490:	mov	r0, r1
   13494:	bx	lr
   13498:	cmp	r1, #0
   1349c:	mvnne	r1, #0
   134a0:	mov	r0, r1
   134a4:	bx	lr

000134a8 <table_compare_char@@Base>:
   134a8:	cmp	r0, #0
   134ac:	beq	134e0 <table_compare_char@@Base+0x38>
   134b0:	cmp	r1, #0
   134b4:	moveq	r1, #1
   134b8:	moveq	r0, r1
   134bc:	bxeq	lr
   134c0:	ldrb	r2, [r1]
   134c4:	ldrb	r0, [r0]
   134c8:	mov	r1, #0
   134cc:	cmp	r0, r2
   134d0:	mvncc	r1, #0
   134d4:	movwhi	r1, #1
   134d8:	mov	r0, r1
   134dc:	bx	lr
   134e0:	cmp	r1, #0
   134e4:	mvnne	r1, #0
   134e8:	mov	r0, r1
   134ec:	bx	lr

000134f0 <table_compare_uchar@@Base>:
   134f0:	cmp	r0, #0
   134f4:	beq	13528 <table_compare_uchar@@Base+0x38>
   134f8:	cmp	r1, #0
   134fc:	moveq	r1, #1
   13500:	moveq	r0, r1
   13504:	bxeq	lr
   13508:	ldrb	r2, [r1]
   1350c:	ldrb	r0, [r0]
   13510:	mov	r1, #0
   13514:	cmp	r0, r2
   13518:	mvncc	r1, #0
   1351c:	movwhi	r1, #1
   13520:	mov	r0, r1
   13524:	bx	lr
   13528:	cmp	r1, #0
   1352c:	mvnne	r1, #0
   13530:	mov	r0, r1
   13534:	bx	lr

00013538 <table_compare_string@@Base>:
   13538:	cmp	r0, #0
   1353c:	beq	13554 <table_compare_string@@Base+0x1c>
   13540:	cmp	r1, #0
   13544:	moveq	r1, #1
   13548:	moveq	r0, r1
   1354c:	bxeq	lr
   13550:	b	11e90 <strcmp@plt>
   13554:	cmp	r1, #0
   13558:	mvnne	r1, #0
   1355c:	mov	r0, r1
   13560:	bx	lr

00013564 <table_compare_ptr@@Base>:
   13564:	mov	r2, #0
   13568:	cmp	r0, r1
   1356c:	mvncc	r2, #0
   13570:	movwhi	r2, #1
   13574:	mov	r0, r2
   13578:	bx	lr

0001357c <table_get_default_compare_function_for_data_type@@Base>:
   1357c:	cmp	r0, #23
   13580:	ldrls	r1, [pc, #12]	; 13594 <table_get_default_compare_function_for_data_type@@Base+0x18>
   13584:	movhi	r0, #0
   13588:	addls	r1, pc, r1
   1358c:	ldrls	r0, [r1, r0, lsl #2]
   13590:	bx	lr
   13594:	andeq	r2, r1, r0, lsr #18

00013598 <table_get@@Base>:
   13598:	push	{fp, lr}
   1359c:	mov	fp, sp
   135a0:	bl	14928 <table_get_cell_ptr@@Base>
   135a4:	ldr	r0, [r0]
   135a8:	pop	{fp, pc}

000135ac <table_get_bool@@Base>:
   135ac:	push	{fp, lr}
   135b0:	mov	fp, sp
   135b4:	bl	14928 <table_get_cell_ptr@@Base>
   135b8:	ldr	r0, [r0]
   135bc:	ldrb	r0, [r0]
   135c0:	pop	{fp, pc}

000135c4 <table_get_int@@Base>:
   135c4:	push	{fp, lr}
   135c8:	mov	fp, sp
   135cc:	bl	14928 <table_get_cell_ptr@@Base>
   135d0:	ldr	r0, [r0]
   135d4:	ldr	r0, [r0]
   135d8:	pop	{fp, pc}

000135dc <table_get_uint@@Base>:
   135dc:	push	{fp, lr}
   135e0:	mov	fp, sp
   135e4:	bl	14928 <table_get_cell_ptr@@Base>
   135e8:	ldr	r0, [r0]
   135ec:	ldr	r0, [r0]
   135f0:	pop	{fp, pc}

000135f4 <table_get_int8@@Base>:
   135f4:	push	{fp, lr}
   135f8:	mov	fp, sp
   135fc:	bl	14928 <table_get_cell_ptr@@Base>
   13600:	ldr	r0, [r0]
   13604:	ldrsb	r0, [r0]
   13608:	pop	{fp, pc}

0001360c <table_get_uint8@@Base>:
   1360c:	push	{fp, lr}
   13610:	mov	fp, sp
   13614:	bl	14928 <table_get_cell_ptr@@Base>
   13618:	ldr	r0, [r0]
   1361c:	ldrb	r0, [r0]
   13620:	pop	{fp, pc}

00013624 <table_get_int16@@Base>:
   13624:	push	{fp, lr}
   13628:	mov	fp, sp
   1362c:	bl	14928 <table_get_cell_ptr@@Base>
   13630:	ldr	r0, [r0]
   13634:	ldrsh	r0, [r0]
   13638:	pop	{fp, pc}

0001363c <table_get_uint16@@Base>:
   1363c:	push	{fp, lr}
   13640:	mov	fp, sp
   13644:	bl	14928 <table_get_cell_ptr@@Base>
   13648:	ldr	r0, [r0]
   1364c:	ldrh	r0, [r0]
   13650:	pop	{fp, pc}

00013654 <table_get_int32@@Base>:
   13654:	push	{fp, lr}
   13658:	mov	fp, sp
   1365c:	bl	14928 <table_get_cell_ptr@@Base>
   13660:	ldr	r0, [r0]
   13664:	ldr	r0, [r0]
   13668:	pop	{fp, pc}

0001366c <table_get_uint32@@Base>:
   1366c:	push	{fp, lr}
   13670:	mov	fp, sp
   13674:	bl	14928 <table_get_cell_ptr@@Base>
   13678:	ldr	r0, [r0]
   1367c:	ldr	r0, [r0]
   13680:	pop	{fp, pc}

00013684 <table_get_int64@@Base>:
   13684:	push	{fp, lr}
   13688:	mov	fp, sp
   1368c:	bl	14928 <table_get_cell_ptr@@Base>
   13690:	ldr	r0, [r0]
   13694:	ldrd	r0, [r0]
   13698:	pop	{fp, pc}

0001369c <table_get_uint64@@Base>:
   1369c:	push	{fp, lr}
   136a0:	mov	fp, sp
   136a4:	bl	14928 <table_get_cell_ptr@@Base>
   136a8:	ldr	r0, [r0]
   136ac:	ldrd	r0, [r0]
   136b0:	pop	{fp, pc}

000136b4 <table_get_short@@Base>:
   136b4:	push	{fp, lr}
   136b8:	mov	fp, sp
   136bc:	bl	14928 <table_get_cell_ptr@@Base>
   136c0:	ldr	r0, [r0]
   136c4:	ldrsh	r0, [r0]
   136c8:	pop	{fp, pc}

000136cc <table_get_ushort@@Base>:
   136cc:	push	{fp, lr}
   136d0:	mov	fp, sp
   136d4:	bl	14928 <table_get_cell_ptr@@Base>
   136d8:	ldr	r0, [r0]
   136dc:	ldrh	r0, [r0]
   136e0:	pop	{fp, pc}

000136e4 <table_get_long@@Base>:
   136e4:	push	{fp, lr}
   136e8:	mov	fp, sp
   136ec:	bl	14928 <table_get_cell_ptr@@Base>
   136f0:	ldr	r0, [r0]
   136f4:	ldr	r0, [r0]
   136f8:	pop	{fp, pc}

000136fc <table_get_ulong@@Base>:
   136fc:	push	{fp, lr}
   13700:	mov	fp, sp
   13704:	bl	14928 <table_get_cell_ptr@@Base>
   13708:	ldr	r0, [r0]
   1370c:	ldr	r0, [r0]
   13710:	pop	{fp, pc}

00013714 <table_get_llong@@Base>:
   13714:	push	{fp, lr}
   13718:	mov	fp, sp
   1371c:	bl	14928 <table_get_cell_ptr@@Base>
   13720:	ldr	r0, [r0]
   13724:	ldrd	r0, [r0]
   13728:	pop	{fp, pc}

0001372c <table_get_ullong@@Base>:
   1372c:	push	{fp, lr}
   13730:	mov	fp, sp
   13734:	bl	14928 <table_get_cell_ptr@@Base>
   13738:	ldr	r0, [r0]
   1373c:	ldrd	r0, [r0]
   13740:	pop	{fp, pc}

00013744 <table_get_float@@Base>:
   13744:	push	{fp, lr}
   13748:	mov	fp, sp
   1374c:	bl	14928 <table_get_cell_ptr@@Base>
   13750:	ldr	r0, [r0]
   13754:	vldr	s0, [r0]
   13758:	pop	{fp, pc}

0001375c <table_get_double@@Base>:
   1375c:	push	{fp, lr}
   13760:	mov	fp, sp
   13764:	bl	14928 <table_get_cell_ptr@@Base>
   13768:	ldr	r0, [r0]
   1376c:	vldr	d0, [r0]
   13770:	pop	{fp, pc}

00013774 <table_get_ldouble@@Base>:
   13774:	push	{fp, lr}
   13778:	mov	fp, sp
   1377c:	bl	14928 <table_get_cell_ptr@@Base>
   13780:	ldr	r0, [r0]
   13784:	vldr	d0, [r0]
   13788:	pop	{fp, pc}

0001378c <table_get_char@@Base>:
   1378c:	push	{fp, lr}
   13790:	mov	fp, sp
   13794:	bl	14928 <table_get_cell_ptr@@Base>
   13798:	ldr	r0, [r0]
   1379c:	ldrb	r0, [r0]
   137a0:	pop	{fp, pc}

000137a4 <table_get_uchar@@Base>:
   137a4:	push	{fp, lr}
   137a8:	mov	fp, sp
   137ac:	bl	14928 <table_get_cell_ptr@@Base>
   137b0:	ldr	r0, [r0]
   137b4:	ldrb	r0, [r0]
   137b8:	pop	{fp, pc}

000137bc <table_get_string@@Base>:
   137bc:	push	{fp, lr}
   137c0:	mov	fp, sp
   137c4:	bl	14928 <table_get_cell_ptr@@Base>
   137c8:	ldr	r0, [r0]
   137cc:	pop	{fp, pc}

000137d0 <table_get_ptr@@Base>:
   137d0:	push	{fp, lr}
   137d4:	mov	fp, sp
   137d8:	bl	14928 <table_get_cell_ptr@@Base>
   137dc:	ldr	r0, [r0]
   137e0:	pop	{fp, pc}

000137e4 <table_row_init@@Base>:
   137e4:	push	{r4, r5, fp, lr}
   137e8:	add	fp, sp, #8
   137ec:	mov	r4, r1
   137f0:	ldr	r1, [r0, #12]
   137f4:	ldr	r5, [r0, #16]
   137f8:	lsl	r0, r1, #2
   137fc:	bl	11ecc <malloc@plt>
   13800:	str	r0, [r5, r4, lsl #2]
   13804:	pop	{r4, r5, fp, pc}

00013808 <table_get_row_ptr@@Base>:
   13808:	ldr	r0, [r0, #16]
   1380c:	add	r0, r0, r1, lsl #2
   13810:	bx	lr

00013814 <table_row_destroy@@Base>:
   13814:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13818:	add	fp, sp, #24
   1381c:	mov	r4, r1
   13820:	mov	r5, r0
   13824:	bl	12b48 <table_get_column_length@@Base>
   13828:	ldr	r8, [r5, #16]
   1382c:	cmp	r0, #1
   13830:	blt	13858 <table_row_destroy@@Base+0x44>
   13834:	mov	r6, r0
   13838:	mov	r7, #0
   1383c:	mov	r0, r5
   13840:	mov	r1, r4
   13844:	mov	r2, r7
   13848:	bl	14944 <table_cell_destroy@@Base>
   1384c:	add	r7, r7, #1
   13850:	cmp	r6, r7
   13854:	bne	1383c <table_row_destroy@@Base+0x28>
   13858:	ldr	r0, [r8, r4, lsl #2]
   1385c:	cmp	r0, #0
   13860:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13864:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13868:	b	11ea8 <free@plt>

0001386c <table_get_row_length@@Base>:
   1386c:	ldr	r0, [r0, #20]
   13870:	bx	lr

00013874 <table_add_row@@Base>:
   13874:	push	{r4, r5, r6, r7, fp, lr}
   13878:	add	fp, sp, #16
   1387c:	ldr	r5, [r0, #20]
   13880:	ldr	r1, [r0, #24]
   13884:	mov	r4, r0
   13888:	udiv	r0, r5, r1
   1388c:	mls	r0, r0, r1, r5
   13890:	cmp	r0, #0
   13894:	bne	138b8 <table_add_row@@Base+0x44>
   13898:	ldr	r2, [r4, #28]
   1389c:	ldr	r0, [r4, #16]
   138a0:	add	r1, r2, r1
   138a4:	str	r1, [r4, #28]
   138a8:	lsl	r1, r1, #2
   138ac:	bl	11eb4 <realloc@plt>
   138b0:	str	r0, [r4, #16]
   138b4:	ldr	r5, [r4, #20]
   138b8:	mov	r0, r4
   138bc:	bl	12b48 <table_get_column_length@@Base>
   138c0:	mov	r6, r0
   138c4:	ldr	r0, [r4, #12]
   138c8:	ldr	r7, [r4, #16]
   138cc:	lsl	r0, r0, #2
   138d0:	bl	11ecc <malloc@plt>
   138d4:	cmp	r6, #1
   138d8:	str	r0, [r7, r5, lsl #2]
   138dc:	blt	13900 <table_add_row@@Base+0x8c>
   138e0:	mov	r7, #0
   138e4:	mov	r0, r4
   138e8:	mov	r1, r5
   138ec:	mov	r2, r7
   138f0:	bl	14908 <table_cell_init@@Base>
   138f4:	add	r7, r7, #1
   138f8:	cmp	r6, r7
   138fc:	bne	138e4 <table_add_row@@Base+0x70>
   13900:	ldr	r1, [r4, #20]
   13904:	mov	r0, r4
   13908:	mvn	r2, #0
   1390c:	mov	r3, #2
   13910:	bl	12a54 <table_notify@@Base>
   13914:	ldr	r0, [r4, #20]
   13918:	add	r1, r0, #1
   1391c:	str	r1, [r4, #20]
   13920:	pop	{r4, r5, r6, r7, fp, pc}

00013924 <table_remove_row@@Base>:
   13924:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13928:	add	fp, sp, #24
   1392c:	ldr	r8, [r0, #20]
   13930:	mov	r4, r1
   13934:	mov	r5, r0
   13938:	bl	12b48 <table_get_column_length@@Base>
   1393c:	cmp	r0, #1
   13940:	blt	1398c <table_remove_row@@Base+0x68>
   13944:	mov	r6, r0
   13948:	mov	r7, #0
   1394c:	mov	r0, r5
   13950:	mov	r1, r7
   13954:	bl	12bbc <table_get_column_data_type@@Base>
   13958:	cmp	r0, #23
   1395c:	beq	13980 <table_remove_row@@Base+0x5c>
   13960:	mov	r0, r5
   13964:	mov	r1, r4
   13968:	mov	r2, r7
   1396c:	bl	14928 <table_get_cell_ptr@@Base>
   13970:	ldr	r0, [r0]
   13974:	cmp	r0, #0
   13978:	beq	13980 <table_remove_row@@Base+0x5c>
   1397c:	bl	11ea8 <free@plt>
   13980:	add	r7, r7, #1
   13984:	cmp	r6, r7
   13988:	bne	1394c <table_remove_row@@Base+0x28>
   1398c:	ldr	r0, [r5, #16]
   13990:	ldr	r0, [r0, r4, lsl #2]
   13994:	cmp	r0, #0
   13998:	beq	139a0 <table_remove_row@@Base+0x7c>
   1399c:	bl	11ea8 <free@plt>
   139a0:	sub	r0, r8, #1
   139a4:	cmp	r0, r4
   139a8:	ble	139cc <table_remove_row@@Base+0xa8>
   139ac:	mov	r1, r4
   139b0:	ldr	r2, [r5, #16]
   139b4:	add	r3, r2, r1, lsl #2
   139b8:	ldr	r3, [r3, #4]
   139bc:	str	r3, [r2, r1, lsl #2]
   139c0:	add	r1, r1, #1
   139c4:	cmp	r0, r1
   139c8:	bne	139b0 <table_remove_row@@Base+0x8c>
   139cc:	ldr	r0, [r5, #20]
   139d0:	ldr	r1, [r5, #24]
   139d4:	sub	r0, r0, #1
   139d8:	udiv	r2, r0, r1
   139dc:	str	r0, [r5, #20]
   139e0:	mls	r0, r2, r1, r0
   139e4:	cmp	r0, #0
   139e8:	bne	13a08 <table_remove_row@@Base+0xe4>
   139ec:	ldr	r2, [r5, #28]
   139f0:	ldr	r0, [r5, #16]
   139f4:	sub	r1, r2, r1
   139f8:	str	r1, [r5, #28]
   139fc:	lsl	r1, r1, #2
   13a00:	bl	11eb4 <realloc@plt>
   13a04:	str	r0, [r5, #16]
   13a08:	mov	r0, r5
   13a0c:	mov	r1, r4
   13a10:	mvn	r2, #0
   13a14:	mov	r3, #4
   13a18:	bl	12a54 <table_notify@@Base>
   13a1c:	mov	r0, #0
   13a20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013a24 <table_set_row_ptr@@Base>:
   13a24:	ldr	r2, [r2]
   13a28:	ldr	r0, [r0, #16]
   13a2c:	str	r2, [r0, r1, lsl #2]
   13a30:	bx	lr

00013a34 <table_set@@Base>:
   13a34:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a38:	add	fp, sp, #24
   13a3c:	mov	r8, r3
   13a40:	mov	r4, r2
   13a44:	mov	r9, r1
   13a48:	mov	r6, r0
   13a4c:	bl	14928 <table_get_cell_ptr@@Base>
   13a50:	mov	r5, r0
   13a54:	mov	r0, r6
   13a58:	mov	r1, r4
   13a5c:	bl	12b20 <table_get_col_ptr@@Base>
   13a60:	ldr	r1, [fp, #8]
   13a64:	mvn	r7, #0
   13a68:	cmp	r1, #23
   13a6c:	bhi	13d34 <table_set@@Base+0x300>
   13a70:	add	r2, pc, #4
   13a74:	ldr	r1, [r2, r1, lsl #2]
   13a78:	add	pc, r2, r1
   13a7c:	andeq	r0, r0, r0, rrx
   13a80:	andeq	r0, r0, r0, ror r0
   13a84:	andeq	r0, r0, r0, lsl #1
   13a88:	muleq	r0, r0, r0
   13a8c:	andeq	r0, r0, r0, lsr #1
   13a90:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   13a94:	andeq	r0, r0, r0, asr #1
   13a98:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13a9c:	andeq	r0, r0, r0, ror #1
   13aa0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13aa4:	andeq	r0, r0, r0, lsl #2
   13aa8:	andeq	r0, r0, r0, lsl r1
   13aac:	andeq	r0, r0, r8, asr #2
   13ab0:	andeq	r0, r0, r8, asr r1
   13ab4:	andeq	r0, r0, r8, ror #2
   13ab8:	andeq	r0, r0, r8, ror r1
   13abc:	andeq	r0, r0, r8, lsl #3
   13ac0:	andeq	r0, r0, r0, asr #3
   13ac4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13ac8:	andeq	r0, r0, r0, lsl r2
   13acc:	andeq	r0, r0, r0, lsr #4
   13ad0:	andeq	r0, r0, r0, lsr r2
   13ad4:	andeq	r0, r0, ip, ror #4
   13ad8:	andeq	r0, r0, r0, asr #5
   13adc:	ldr	r0, [r0, #4]
   13ae0:	cmp	r0, #0
   13ae4:	bne	13d34 <table_set@@Base+0x300>
   13ae8:	b	13c10 <table_set@@Base+0x1dc>
   13aec:	ldr	r0, [r0, #4]
   13af0:	cmp	r0, #1
   13af4:	beq	13c10 <table_set@@Base+0x1dc>
   13af8:	b	13d34 <table_set@@Base+0x300>
   13afc:	ldr	r0, [r0, #4]
   13b00:	cmp	r0, #2
   13b04:	beq	13cf4 <table_set@@Base+0x2c0>
   13b08:	b	13d34 <table_set@@Base+0x300>
   13b0c:	ldr	r0, [r0, #4]
   13b10:	cmp	r0, #3
   13b14:	beq	13cf4 <table_set@@Base+0x2c0>
   13b18:	b	13d34 <table_set@@Base+0x300>
   13b1c:	ldr	r0, [r0, #4]
   13b20:	cmp	r0, #4
   13b24:	beq	13b98 <table_set@@Base+0x164>
   13b28:	b	13d34 <table_set@@Base+0x300>
   13b2c:	ldr	r0, [r0, #4]
   13b30:	cmp	r0, #5
   13b34:	beq	13b98 <table_set@@Base+0x164>
   13b38:	b	13d34 <table_set@@Base+0x300>
   13b3c:	ldr	r0, [r0, #4]
   13b40:	cmp	r0, #6
   13b44:	beq	13c10 <table_set@@Base+0x1dc>
   13b48:	b	13d34 <table_set@@Base+0x300>
   13b4c:	ldr	r0, [r0, #4]
   13b50:	cmp	r0, #7
   13b54:	beq	13c10 <table_set@@Base+0x1dc>
   13b58:	b	13d34 <table_set@@Base+0x300>
   13b5c:	ldr	r0, [r0, #4]
   13b60:	cmp	r0, #8
   13b64:	beq	13c58 <table_set@@Base+0x224>
   13b68:	b	13d34 <table_set@@Base+0x300>
   13b6c:	ldr	r0, [r0, #4]
   13b70:	cmp	r0, #9
   13b74:	beq	13c58 <table_set@@Base+0x224>
   13b78:	b	13d34 <table_set@@Base+0x300>
   13b7c:	ldr	r0, [r0, #4]
   13b80:	cmp	r0, #10
   13b84:	beq	13b98 <table_set@@Base+0x164>
   13b88:	b	13d34 <table_set@@Base+0x300>
   13b8c:	ldr	r0, [r0, #4]
   13b90:	cmp	r0, #11
   13b94:	bne	13d34 <table_set@@Base+0x300>
   13b98:	ldr	r0, [r5]
   13b9c:	cmp	r0, #0
   13ba0:	bne	13bb8 <table_set@@Base+0x184>
   13ba4:	mov	r0, #2
   13ba8:	bl	11ecc <malloc@plt>
   13bac:	cmp	r0, #0
   13bb0:	str	r0, [r5]
   13bb4:	beq	13d34 <table_set@@Base+0x300>
   13bb8:	ldrh	r1, [r8]
   13bbc:	strh	r1, [r0]
   13bc0:	b	13d1c <table_set@@Base+0x2e8>
   13bc4:	ldr	r0, [r0, #4]
   13bc8:	cmp	r0, #12
   13bcc:	beq	13c10 <table_set@@Base+0x1dc>
   13bd0:	b	13d34 <table_set@@Base+0x300>
   13bd4:	ldr	r0, [r0, #4]
   13bd8:	cmp	r0, #13
   13bdc:	beq	13c10 <table_set@@Base+0x1dc>
   13be0:	b	13d34 <table_set@@Base+0x300>
   13be4:	ldr	r0, [r0, #4]
   13be8:	cmp	r0, #14
   13bec:	beq	13c58 <table_set@@Base+0x224>
   13bf0:	b	13d34 <table_set@@Base+0x300>
   13bf4:	ldr	r0, [r0, #4]
   13bf8:	cmp	r0, #15
   13bfc:	beq	13c58 <table_set@@Base+0x224>
   13c00:	b	13d34 <table_set@@Base+0x300>
   13c04:	ldr	r0, [r0, #4]
   13c08:	cmp	r0, #16
   13c0c:	bne	13d34 <table_set@@Base+0x300>
   13c10:	ldr	r0, [r5]
   13c14:	cmp	r0, #0
   13c18:	bne	13c30 <table_set@@Base+0x1fc>
   13c1c:	mov	r0, #4
   13c20:	bl	11ecc <malloc@plt>
   13c24:	cmp	r0, #0
   13c28:	str	r0, [r5]
   13c2c:	beq	13d34 <table_set@@Base+0x300>
   13c30:	ldr	r1, [r8]
   13c34:	str	r1, [r0]
   13c38:	b	13d1c <table_set@@Base+0x2e8>
   13c3c:	ldr	r0, [r0, #4]
   13c40:	cmp	r0, #17
   13c44:	beq	13c58 <table_set@@Base+0x224>
   13c48:	b	13d34 <table_set@@Base+0x300>
   13c4c:	ldr	r0, [r0, #4]
   13c50:	cmp	r0, #18
   13c54:	bne	13d34 <table_set@@Base+0x300>
   13c58:	ldr	r0, [r5]
   13c5c:	cmp	r0, #0
   13c60:	bne	13c78 <table_set@@Base+0x244>
   13c64:	mov	r0, #8
   13c68:	bl	11ecc <malloc@plt>
   13c6c:	cmp	r0, #0
   13c70:	str	r0, [r5]
   13c74:	beq	13d34 <table_set@@Base+0x300>
   13c78:	ldr	r1, [r8]
   13c7c:	ldr	r2, [r8, #4]
   13c80:	str	r2, [r0, #4]
   13c84:	str	r1, [r0]
   13c88:	b	13d1c <table_set@@Base+0x2e8>
   13c8c:	ldr	r0, [r0, #4]
   13c90:	cmp	r0, #19
   13c94:	beq	13cf4 <table_set@@Base+0x2c0>
   13c98:	b	13d34 <table_set@@Base+0x300>
   13c9c:	ldr	r0, [r0, #4]
   13ca0:	cmp	r0, #20
   13ca4:	beq	13cf4 <table_set@@Base+0x2c0>
   13ca8:	b	13d34 <table_set@@Base+0x300>
   13cac:	ldr	r0, [r0, #4]
   13cb0:	cmp	r0, #21
   13cb4:	bne	13d34 <table_set@@Base+0x300>
   13cb8:	mov	r0, r8
   13cbc:	bl	11ef0 <strlen@plt>
   13cc0:	ldr	r2, [r5]
   13cc4:	add	r1, r0, #1
   13cc8:	mov	r0, r2
   13ccc:	bl	11eb4 <realloc@plt>
   13cd0:	cmp	r0, #0
   13cd4:	str	r0, [r5]
   13cd8:	beq	13d34 <table_set@@Base+0x300>
   13cdc:	mov	r1, r8
   13ce0:	bl	11ec0 <strcpy@plt>
   13ce4:	b	13d1c <table_set@@Base+0x2e8>
   13ce8:	ldr	r0, [r0, #4]
   13cec:	cmp	r0, #22
   13cf0:	bne	13d34 <table_set@@Base+0x300>
   13cf4:	ldr	r0, [r5]
   13cf8:	cmp	r0, #0
   13cfc:	bne	13d14 <table_set@@Base+0x2e0>
   13d00:	mov	r0, #1
   13d04:	bl	11ecc <malloc@plt>
   13d08:	cmp	r0, #0
   13d0c:	str	r0, [r5]
   13d10:	beq	13d34 <table_set@@Base+0x300>
   13d14:	ldrb	r1, [r8]
   13d18:	strb	r1, [r0]
   13d1c:	mov	r0, r6
   13d20:	mov	r1, r9
   13d24:	mov	r2, r4
   13d28:	mov	r3, #1
   13d2c:	bl	12a54 <table_notify@@Base>
   13d30:	mov	r7, #0
   13d34:	mov	r0, r7
   13d38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d3c:	ldr	r0, [r0, #4]
   13d40:	cmp	r0, #23
   13d44:	bne	13d34 <table_set@@Base+0x300>
   13d48:	str	r8, [r5]
   13d4c:	b	13d1c <table_set@@Base+0x2e8>

00013d50 <table_set_bool@@Base>:
   13d50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13d54:	add	fp, sp, #24
   13d58:	mov	r8, r3
   13d5c:	mov	r4, r2
   13d60:	mov	r9, r1
   13d64:	mov	r6, r0
   13d68:	bl	14928 <table_get_cell_ptr@@Base>
   13d6c:	mov	r5, r0
   13d70:	mov	r0, r6
   13d74:	mov	r1, r4
   13d78:	bl	12b20 <table_get_col_ptr@@Base>
   13d7c:	ldr	r0, [r0, #4]
   13d80:	mvn	r7, #0
   13d84:	cmp	r0, #22
   13d88:	bne	13dc8 <table_set_bool@@Base+0x78>
   13d8c:	ldr	r0, [r5]
   13d90:	cmp	r0, #0
   13d94:	bne	13dac <table_set_bool@@Base+0x5c>
   13d98:	mov	r0, #1
   13d9c:	bl	11ecc <malloc@plt>
   13da0:	cmp	r0, #0
   13da4:	str	r0, [r5]
   13da8:	beq	13dc8 <table_set_bool@@Base+0x78>
   13dac:	strb	r8, [r0]
   13db0:	mov	r0, r6
   13db4:	mov	r1, r9
   13db8:	mov	r2, r4
   13dbc:	mov	r3, #1
   13dc0:	bl	12a54 <table_notify@@Base>
   13dc4:	mov	r7, #0
   13dc8:	mov	r0, r7
   13dcc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013dd0 <table_set_int@@Base>:
   13dd0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13dd4:	add	fp, sp, #24
   13dd8:	mov	r8, r3
   13ddc:	mov	r4, r2
   13de0:	mov	r5, r1
   13de4:	mov	r6, r0
   13de8:	bl	14928 <table_get_cell_ptr@@Base>
   13dec:	mov	r9, r0
   13df0:	mov	r0, r6
   13df4:	mov	r1, r4
   13df8:	bl	12b20 <table_get_col_ptr@@Base>
   13dfc:	ldr	r0, [r0, #4]
   13e00:	mvn	r7, #0
   13e04:	cmp	r0, #0
   13e08:	bne	13e48 <table_set_int@@Base+0x78>
   13e0c:	ldr	r0, [r9]
   13e10:	cmp	r0, #0
   13e14:	bne	13e2c <table_set_int@@Base+0x5c>
   13e18:	mov	r0, #4
   13e1c:	bl	11ecc <malloc@plt>
   13e20:	cmp	r0, #0
   13e24:	str	r0, [r9]
   13e28:	beq	13e48 <table_set_int@@Base+0x78>
   13e2c:	str	r8, [r0]
   13e30:	mov	r0, r6
   13e34:	mov	r1, r5
   13e38:	mov	r2, r4
   13e3c:	mov	r3, #1
   13e40:	bl	12a54 <table_notify@@Base>
   13e44:	mov	r7, #0
   13e48:	mov	r0, r7
   13e4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013e50 <table_set_uint@@Base>:
   13e50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e54:	add	fp, sp, #24
   13e58:	mov	r8, r3
   13e5c:	mov	r4, r2
   13e60:	mov	r5, r1
   13e64:	mov	r6, r0
   13e68:	bl	14928 <table_get_cell_ptr@@Base>
   13e6c:	mov	r9, r0
   13e70:	mov	r0, r6
   13e74:	mov	r1, r4
   13e78:	bl	12b20 <table_get_col_ptr@@Base>
   13e7c:	ldr	r0, [r0, #4]
   13e80:	mvn	r7, #0
   13e84:	cmp	r0, #1
   13e88:	bne	13ec8 <table_set_uint@@Base+0x78>
   13e8c:	ldr	r0, [r9]
   13e90:	cmp	r0, #0
   13e94:	bne	13eac <table_set_uint@@Base+0x5c>
   13e98:	mov	r0, #4
   13e9c:	bl	11ecc <malloc@plt>
   13ea0:	cmp	r0, #0
   13ea4:	str	r0, [r9]
   13ea8:	beq	13ec8 <table_set_uint@@Base+0x78>
   13eac:	str	r8, [r0]
   13eb0:	mov	r0, r6
   13eb4:	mov	r1, r5
   13eb8:	mov	r2, r4
   13ebc:	mov	r3, #1
   13ec0:	bl	12a54 <table_notify@@Base>
   13ec4:	mov	r7, #0
   13ec8:	mov	r0, r7
   13ecc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ed0 <table_set_int8@@Base>:
   13ed0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ed4:	add	fp, sp, #24
   13ed8:	mov	r8, r3
   13edc:	mov	r4, r2
   13ee0:	mov	r9, r1
   13ee4:	mov	r6, r0
   13ee8:	bl	14928 <table_get_cell_ptr@@Base>
   13eec:	mov	r5, r0
   13ef0:	mov	r0, r6
   13ef4:	mov	r1, r4
   13ef8:	bl	12b20 <table_get_col_ptr@@Base>
   13efc:	ldr	r0, [r0, #4]
   13f00:	mvn	r7, #0
   13f04:	cmp	r0, #2
   13f08:	bne	13f48 <table_set_int8@@Base+0x78>
   13f0c:	ldr	r0, [r5]
   13f10:	cmp	r0, #0
   13f14:	bne	13f2c <table_set_int8@@Base+0x5c>
   13f18:	mov	r0, #1
   13f1c:	bl	11ecc <malloc@plt>
   13f20:	cmp	r0, #0
   13f24:	str	r0, [r5]
   13f28:	beq	13f48 <table_set_int8@@Base+0x78>
   13f2c:	strb	r8, [r0]
   13f30:	mov	r0, r6
   13f34:	mov	r1, r9
   13f38:	mov	r2, r4
   13f3c:	mov	r3, #1
   13f40:	bl	12a54 <table_notify@@Base>
   13f44:	mov	r7, #0
   13f48:	mov	r0, r7
   13f4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f50 <table_set_uint8@@Base>:
   13f50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f54:	add	fp, sp, #24
   13f58:	mov	r8, r3
   13f5c:	mov	r4, r2
   13f60:	mov	r9, r1
   13f64:	mov	r6, r0
   13f68:	bl	14928 <table_get_cell_ptr@@Base>
   13f6c:	mov	r5, r0
   13f70:	mov	r0, r6
   13f74:	mov	r1, r4
   13f78:	bl	12b20 <table_get_col_ptr@@Base>
   13f7c:	ldr	r0, [r0, #4]
   13f80:	mvn	r7, #0
   13f84:	cmp	r0, #3
   13f88:	bne	13fc8 <table_set_uint8@@Base+0x78>
   13f8c:	ldr	r0, [r5]
   13f90:	cmp	r0, #0
   13f94:	bne	13fac <table_set_uint8@@Base+0x5c>
   13f98:	mov	r0, #1
   13f9c:	bl	11ecc <malloc@plt>
   13fa0:	cmp	r0, #0
   13fa4:	str	r0, [r5]
   13fa8:	beq	13fc8 <table_set_uint8@@Base+0x78>
   13fac:	strb	r8, [r0]
   13fb0:	mov	r0, r6
   13fb4:	mov	r1, r9
   13fb8:	mov	r2, r4
   13fbc:	mov	r3, #1
   13fc0:	bl	12a54 <table_notify@@Base>
   13fc4:	mov	r7, #0
   13fc8:	mov	r0, r7
   13fcc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013fd0 <table_set_int16@@Base>:
   13fd0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13fd4:	add	fp, sp, #24
   13fd8:	mov	r8, r3
   13fdc:	mov	r4, r2
   13fe0:	mov	r9, r1
   13fe4:	mov	r6, r0
   13fe8:	bl	14928 <table_get_cell_ptr@@Base>
   13fec:	mov	r5, r0
   13ff0:	mov	r0, r6
   13ff4:	mov	r1, r4
   13ff8:	bl	12b20 <table_get_col_ptr@@Base>
   13ffc:	ldr	r0, [r0, #4]
   14000:	mvn	r7, #0
   14004:	cmp	r0, #4
   14008:	bne	14048 <table_set_int16@@Base+0x78>
   1400c:	ldr	r0, [r5]
   14010:	cmp	r0, #0
   14014:	bne	1402c <table_set_int16@@Base+0x5c>
   14018:	mov	r0, #2
   1401c:	bl	11ecc <malloc@plt>
   14020:	cmp	r0, #0
   14024:	str	r0, [r5]
   14028:	beq	14048 <table_set_int16@@Base+0x78>
   1402c:	strh	r8, [r0]
   14030:	mov	r0, r6
   14034:	mov	r1, r9
   14038:	mov	r2, r4
   1403c:	mov	r3, #1
   14040:	bl	12a54 <table_notify@@Base>
   14044:	mov	r7, #0
   14048:	mov	r0, r7
   1404c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014050 <table_set_uint16@@Base>:
   14050:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14054:	add	fp, sp, #24
   14058:	mov	r8, r3
   1405c:	mov	r4, r2
   14060:	mov	r9, r1
   14064:	mov	r6, r0
   14068:	bl	14928 <table_get_cell_ptr@@Base>
   1406c:	mov	r5, r0
   14070:	mov	r0, r6
   14074:	mov	r1, r4
   14078:	bl	12b20 <table_get_col_ptr@@Base>
   1407c:	ldr	r0, [r0, #4]
   14080:	mvn	r7, #0
   14084:	cmp	r0, #5
   14088:	bne	140c8 <table_set_uint16@@Base+0x78>
   1408c:	ldr	r0, [r5]
   14090:	cmp	r0, #0
   14094:	bne	140ac <table_set_uint16@@Base+0x5c>
   14098:	mov	r0, #2
   1409c:	bl	11ecc <malloc@plt>
   140a0:	cmp	r0, #0
   140a4:	str	r0, [r5]
   140a8:	beq	140c8 <table_set_uint16@@Base+0x78>
   140ac:	strh	r8, [r0]
   140b0:	mov	r0, r6
   140b4:	mov	r1, r9
   140b8:	mov	r2, r4
   140bc:	mov	r3, #1
   140c0:	bl	12a54 <table_notify@@Base>
   140c4:	mov	r7, #0
   140c8:	mov	r0, r7
   140cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140d0 <table_set_int32@@Base>:
   140d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140d4:	add	fp, sp, #24
   140d8:	mov	r8, r3
   140dc:	mov	r4, r2
   140e0:	mov	r5, r1
   140e4:	mov	r6, r0
   140e8:	bl	14928 <table_get_cell_ptr@@Base>
   140ec:	mov	r9, r0
   140f0:	mov	r0, r6
   140f4:	mov	r1, r4
   140f8:	bl	12b20 <table_get_col_ptr@@Base>
   140fc:	ldr	r0, [r0, #4]
   14100:	mvn	r7, #0
   14104:	cmp	r0, #6
   14108:	bne	14148 <table_set_int32@@Base+0x78>
   1410c:	ldr	r0, [r9]
   14110:	cmp	r0, #0
   14114:	bne	1412c <table_set_int32@@Base+0x5c>
   14118:	mov	r0, #4
   1411c:	bl	11ecc <malloc@plt>
   14120:	cmp	r0, #0
   14124:	str	r0, [r9]
   14128:	beq	14148 <table_set_int32@@Base+0x78>
   1412c:	str	r8, [r0]
   14130:	mov	r0, r6
   14134:	mov	r1, r5
   14138:	mov	r2, r4
   1413c:	mov	r3, #1
   14140:	bl	12a54 <table_notify@@Base>
   14144:	mov	r7, #0
   14148:	mov	r0, r7
   1414c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014150 <table_set_uint32@@Base>:
   14150:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14154:	add	fp, sp, #24
   14158:	mov	r8, r3
   1415c:	mov	r4, r2
   14160:	mov	r5, r1
   14164:	mov	r6, r0
   14168:	bl	14928 <table_get_cell_ptr@@Base>
   1416c:	mov	r9, r0
   14170:	mov	r0, r6
   14174:	mov	r1, r4
   14178:	bl	12b20 <table_get_col_ptr@@Base>
   1417c:	ldr	r0, [r0, #4]
   14180:	mvn	r7, #0
   14184:	cmp	r0, #7
   14188:	bne	141c8 <table_set_uint32@@Base+0x78>
   1418c:	ldr	r0, [r9]
   14190:	cmp	r0, #0
   14194:	bne	141ac <table_set_uint32@@Base+0x5c>
   14198:	mov	r0, #4
   1419c:	bl	11ecc <malloc@plt>
   141a0:	cmp	r0, #0
   141a4:	str	r0, [r9]
   141a8:	beq	141c8 <table_set_uint32@@Base+0x78>
   141ac:	str	r8, [r0]
   141b0:	mov	r0, r6
   141b4:	mov	r1, r5
   141b8:	mov	r2, r4
   141bc:	mov	r3, #1
   141c0:	bl	12a54 <table_notify@@Base>
   141c4:	mov	r7, #0
   141c8:	mov	r0, r7
   141cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141d0 <table_set_int64@@Base>:
   141d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141d4:	add	fp, sp, #24
   141d8:	mov	r4, r2
   141dc:	mov	r8, r1
   141e0:	mov	r6, r0
   141e4:	bl	14928 <table_get_cell_ptr@@Base>
   141e8:	mov	r5, r0
   141ec:	mov	r0, r6
   141f0:	mov	r1, r4
   141f4:	bl	12b20 <table_get_col_ptr@@Base>
   141f8:	ldr	r0, [r0, #4]
   141fc:	mvn	r7, #0
   14200:	cmp	r0, #8
   14204:	bne	14250 <table_set_int64@@Base+0x80>
   14208:	ldr	r0, [r5]
   1420c:	cmp	r0, #0
   14210:	bne	14228 <table_set_int64@@Base+0x58>
   14214:	mov	r0, #8
   14218:	bl	11ecc <malloc@plt>
   1421c:	cmp	r0, #0
   14220:	str	r0, [r5]
   14224:	beq	14250 <table_set_int64@@Base+0x80>
   14228:	ldr	r1, [fp, #12]
   1422c:	ldr	r2, [fp, #8]
   14230:	mov	r3, #1
   14234:	str	r2, [r0]
   14238:	str	r1, [r0, #4]
   1423c:	mov	r0, r6
   14240:	mov	r1, r8
   14244:	mov	r2, r4
   14248:	bl	12a54 <table_notify@@Base>
   1424c:	mov	r7, #0
   14250:	mov	r0, r7
   14254:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014258 <table_set_uint64@@Base>:
   14258:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1425c:	add	fp, sp, #24
   14260:	mov	r4, r2
   14264:	mov	r8, r1
   14268:	mov	r6, r0
   1426c:	bl	14928 <table_get_cell_ptr@@Base>
   14270:	mov	r5, r0
   14274:	mov	r0, r6
   14278:	mov	r1, r4
   1427c:	bl	12b20 <table_get_col_ptr@@Base>
   14280:	ldr	r0, [r0, #4]
   14284:	mvn	r7, #0
   14288:	cmp	r0, #9
   1428c:	bne	142d8 <table_set_uint64@@Base+0x80>
   14290:	ldr	r0, [r5]
   14294:	cmp	r0, #0
   14298:	bne	142b0 <table_set_uint64@@Base+0x58>
   1429c:	mov	r0, #8
   142a0:	bl	11ecc <malloc@plt>
   142a4:	cmp	r0, #0
   142a8:	str	r0, [r5]
   142ac:	beq	142d8 <table_set_uint64@@Base+0x80>
   142b0:	ldr	r1, [fp, #12]
   142b4:	ldr	r2, [fp, #8]
   142b8:	mov	r3, #1
   142bc:	str	r2, [r0]
   142c0:	str	r1, [r0, #4]
   142c4:	mov	r0, r6
   142c8:	mov	r1, r8
   142cc:	mov	r2, r4
   142d0:	bl	12a54 <table_notify@@Base>
   142d4:	mov	r7, #0
   142d8:	mov	r0, r7
   142dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000142e0 <table_set_short@@Base>:
   142e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142e4:	add	fp, sp, #24
   142e8:	mov	r8, r3
   142ec:	mov	r4, r2
   142f0:	mov	r9, r1
   142f4:	mov	r6, r0
   142f8:	bl	14928 <table_get_cell_ptr@@Base>
   142fc:	mov	r5, r0
   14300:	mov	r0, r6
   14304:	mov	r1, r4
   14308:	bl	12b20 <table_get_col_ptr@@Base>
   1430c:	ldr	r0, [r0, #4]
   14310:	mvn	r7, #0
   14314:	cmp	r0, #10
   14318:	bne	14358 <table_set_short@@Base+0x78>
   1431c:	ldr	r0, [r5]
   14320:	cmp	r0, #0
   14324:	bne	1433c <table_set_short@@Base+0x5c>
   14328:	mov	r0, #2
   1432c:	bl	11ecc <malloc@plt>
   14330:	cmp	r0, #0
   14334:	str	r0, [r5]
   14338:	beq	14358 <table_set_short@@Base+0x78>
   1433c:	strh	r8, [r0]
   14340:	mov	r0, r6
   14344:	mov	r1, r9
   14348:	mov	r2, r4
   1434c:	mov	r3, #1
   14350:	bl	12a54 <table_notify@@Base>
   14354:	mov	r7, #0
   14358:	mov	r0, r7
   1435c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014360 <table_set_ushort@@Base>:
   14360:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14364:	add	fp, sp, #24
   14368:	mov	r8, r3
   1436c:	mov	r4, r2
   14370:	mov	r9, r1
   14374:	mov	r6, r0
   14378:	bl	14928 <table_get_cell_ptr@@Base>
   1437c:	mov	r5, r0
   14380:	mov	r0, r6
   14384:	mov	r1, r4
   14388:	bl	12b20 <table_get_col_ptr@@Base>
   1438c:	ldr	r0, [r0, #4]
   14390:	mvn	r7, #0
   14394:	cmp	r0, #11
   14398:	bne	143d8 <table_set_ushort@@Base+0x78>
   1439c:	ldr	r0, [r5]
   143a0:	cmp	r0, #0
   143a4:	bne	143bc <table_set_ushort@@Base+0x5c>
   143a8:	mov	r0, #2
   143ac:	bl	11ecc <malloc@plt>
   143b0:	cmp	r0, #0
   143b4:	str	r0, [r5]
   143b8:	beq	143d8 <table_set_ushort@@Base+0x78>
   143bc:	strh	r8, [r0]
   143c0:	mov	r0, r6
   143c4:	mov	r1, r9
   143c8:	mov	r2, r4
   143cc:	mov	r3, #1
   143d0:	bl	12a54 <table_notify@@Base>
   143d4:	mov	r7, #0
   143d8:	mov	r0, r7
   143dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143e0 <table_set_long@@Base>:
   143e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143e4:	add	fp, sp, #24
   143e8:	mov	r8, r3
   143ec:	mov	r4, r2
   143f0:	mov	r5, r1
   143f4:	mov	r6, r0
   143f8:	bl	14928 <table_get_cell_ptr@@Base>
   143fc:	mov	r9, r0
   14400:	mov	r0, r6
   14404:	mov	r1, r4
   14408:	bl	12b20 <table_get_col_ptr@@Base>
   1440c:	ldr	r0, [r0, #4]
   14410:	mvn	r7, #0
   14414:	cmp	r0, #12
   14418:	bne	14458 <table_set_long@@Base+0x78>
   1441c:	ldr	r0, [r9]
   14420:	cmp	r0, #0
   14424:	bne	1443c <table_set_long@@Base+0x5c>
   14428:	mov	r0, #4
   1442c:	bl	11ecc <malloc@plt>
   14430:	cmp	r0, #0
   14434:	str	r0, [r9]
   14438:	beq	14458 <table_set_long@@Base+0x78>
   1443c:	str	r8, [r0]
   14440:	mov	r0, r6
   14444:	mov	r1, r5
   14448:	mov	r2, r4
   1444c:	mov	r3, #1
   14450:	bl	12a54 <table_notify@@Base>
   14454:	mov	r7, #0
   14458:	mov	r0, r7
   1445c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014460 <table_set_ulong@@Base>:
   14460:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14464:	add	fp, sp, #24
   14468:	mov	r8, r3
   1446c:	mov	r4, r2
   14470:	mov	r5, r1
   14474:	mov	r6, r0
   14478:	bl	14928 <table_get_cell_ptr@@Base>
   1447c:	mov	r9, r0
   14480:	mov	r0, r6
   14484:	mov	r1, r4
   14488:	bl	12b20 <table_get_col_ptr@@Base>
   1448c:	ldr	r0, [r0, #4]
   14490:	mvn	r7, #0
   14494:	cmp	r0, #13
   14498:	bne	144d8 <table_set_ulong@@Base+0x78>
   1449c:	ldr	r0, [r9]
   144a0:	cmp	r0, #0
   144a4:	bne	144bc <table_set_ulong@@Base+0x5c>
   144a8:	mov	r0, #4
   144ac:	bl	11ecc <malloc@plt>
   144b0:	cmp	r0, #0
   144b4:	str	r0, [r9]
   144b8:	beq	144d8 <table_set_ulong@@Base+0x78>
   144bc:	str	r8, [r0]
   144c0:	mov	r0, r6
   144c4:	mov	r1, r5
   144c8:	mov	r2, r4
   144cc:	mov	r3, #1
   144d0:	bl	12a54 <table_notify@@Base>
   144d4:	mov	r7, #0
   144d8:	mov	r0, r7
   144dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000144e0 <table_set_llong@@Base>:
   144e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144e4:	add	fp, sp, #24
   144e8:	mov	r4, r2
   144ec:	mov	r8, r1
   144f0:	mov	r6, r0
   144f4:	bl	14928 <table_get_cell_ptr@@Base>
   144f8:	mov	r5, r0
   144fc:	mov	r0, r6
   14500:	mov	r1, r4
   14504:	bl	12b20 <table_get_col_ptr@@Base>
   14508:	ldr	r0, [r0, #4]
   1450c:	mvn	r7, #0
   14510:	cmp	r0, #14
   14514:	bne	14560 <table_set_llong@@Base+0x80>
   14518:	ldr	r0, [r5]
   1451c:	cmp	r0, #0
   14520:	bne	14538 <table_set_llong@@Base+0x58>
   14524:	mov	r0, #8
   14528:	bl	11ecc <malloc@plt>
   1452c:	cmp	r0, #0
   14530:	str	r0, [r5]
   14534:	beq	14560 <table_set_llong@@Base+0x80>
   14538:	ldr	r1, [fp, #12]
   1453c:	ldr	r2, [fp, #8]
   14540:	mov	r3, #1
   14544:	str	r2, [r0]
   14548:	str	r1, [r0, #4]
   1454c:	mov	r0, r6
   14550:	mov	r1, r8
   14554:	mov	r2, r4
   14558:	bl	12a54 <table_notify@@Base>
   1455c:	mov	r7, #0
   14560:	mov	r0, r7
   14564:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014568 <table_set_ullong@@Base>:
   14568:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1456c:	add	fp, sp, #24
   14570:	mov	r4, r2
   14574:	mov	r8, r1
   14578:	mov	r6, r0
   1457c:	bl	14928 <table_get_cell_ptr@@Base>
   14580:	mov	r5, r0
   14584:	mov	r0, r6
   14588:	mov	r1, r4
   1458c:	bl	12b20 <table_get_col_ptr@@Base>
   14590:	ldr	r0, [r0, #4]
   14594:	mvn	r7, #0
   14598:	cmp	r0, #15
   1459c:	bne	145e8 <table_set_ullong@@Base+0x80>
   145a0:	ldr	r0, [r5]
   145a4:	cmp	r0, #0
   145a8:	bne	145c0 <table_set_ullong@@Base+0x58>
   145ac:	mov	r0, #8
   145b0:	bl	11ecc <malloc@plt>
   145b4:	cmp	r0, #0
   145b8:	str	r0, [r5]
   145bc:	beq	145e8 <table_set_ullong@@Base+0x80>
   145c0:	ldr	r1, [fp, #12]
   145c4:	ldr	r2, [fp, #8]
   145c8:	mov	r3, #1
   145cc:	str	r2, [r0]
   145d0:	str	r1, [r0, #4]
   145d4:	mov	r0, r6
   145d8:	mov	r1, r8
   145dc:	mov	r2, r4
   145e0:	bl	12a54 <table_notify@@Base>
   145e4:	mov	r7, #0
   145e8:	mov	r0, r7
   145ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000145f0 <table_set_float@@Base>:
   145f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   145f4:	add	fp, sp, #24
   145f8:	vpush	{d8}
   145fc:	vmov.f32	s16, s0
   14600:	mov	r4, r2
   14604:	mov	r8, r1
   14608:	mov	r6, r0
   1460c:	bl	14928 <table_get_cell_ptr@@Base>
   14610:	mov	r5, r0
   14614:	mov	r0, r6
   14618:	mov	r1, r4
   1461c:	bl	12b20 <table_get_col_ptr@@Base>
   14620:	ldr	r0, [r0, #4]
   14624:	mvn	r7, #0
   14628:	cmp	r0, #16
   1462c:	bne	14670 <table_set_float@@Base+0x80>
   14630:	ldr	r0, [r5]
   14634:	cmp	r0, #0
   14638:	bne	14650 <table_set_float@@Base+0x60>
   1463c:	mov	r0, #4
   14640:	bl	11ecc <malloc@plt>
   14644:	cmp	r0, #0
   14648:	str	r0, [r5]
   1464c:	beq	14670 <table_set_float@@Base+0x80>
   14650:	vmov	r1, s16
   14654:	mov	r2, r4
   14658:	mov	r3, #1
   1465c:	str	r1, [r0]
   14660:	mov	r0, r6
   14664:	mov	r1, r8
   14668:	bl	12a54 <table_notify@@Base>
   1466c:	mov	r7, #0
   14670:	mov	r0, r7
   14674:	vpop	{d8}
   14678:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001467c <table_set_double@@Base>:
   1467c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14680:	add	fp, sp, #24
   14684:	vpush	{d8}
   14688:	vorr	d8, d0, d0
   1468c:	mov	r4, r2
   14690:	mov	r5, r1
   14694:	mov	r6, r0
   14698:	bl	14928 <table_get_cell_ptr@@Base>
   1469c:	mov	r8, r0
   146a0:	mov	r0, r6
   146a4:	mov	r1, r4
   146a8:	bl	12b20 <table_get_col_ptr@@Base>
   146ac:	ldr	r0, [r0, #4]
   146b0:	mvn	r7, #0
   146b4:	cmp	r0, #17
   146b8:	bne	146f8 <table_set_double@@Base+0x7c>
   146bc:	ldr	r0, [r8]
   146c0:	cmp	r0, #0
   146c4:	bne	146dc <table_set_double@@Base+0x60>
   146c8:	mov	r0, #8
   146cc:	bl	11ecc <malloc@plt>
   146d0:	cmp	r0, #0
   146d4:	str	r0, [r8]
   146d8:	beq	146f8 <table_set_double@@Base+0x7c>
   146dc:	vst1.8	{d8}, [r0]
   146e0:	mov	r0, r6
   146e4:	mov	r1, r5
   146e8:	mov	r2, r4
   146ec:	mov	r3, #1
   146f0:	bl	12a54 <table_notify@@Base>
   146f4:	mov	r7, #0
   146f8:	mov	r0, r7
   146fc:	vpop	{d8}
   14700:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014704 <table_set_ldouble@@Base>:
   14704:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14708:	add	fp, sp, #24
   1470c:	vpush	{d8}
   14710:	vorr	d8, d0, d0
   14714:	mov	r4, r2
   14718:	mov	r5, r1
   1471c:	mov	r6, r0
   14720:	bl	14928 <table_get_cell_ptr@@Base>
   14724:	mov	r8, r0
   14728:	mov	r0, r6
   1472c:	mov	r1, r4
   14730:	bl	12b20 <table_get_col_ptr@@Base>
   14734:	ldr	r0, [r0, #4]
   14738:	mvn	r7, #0
   1473c:	cmp	r0, #18
   14740:	bne	14780 <table_set_ldouble@@Base+0x7c>
   14744:	ldr	r0, [r8]
   14748:	cmp	r0, #0
   1474c:	bne	14764 <table_set_ldouble@@Base+0x60>
   14750:	mov	r0, #8
   14754:	bl	11ecc <malloc@plt>
   14758:	cmp	r0, #0
   1475c:	str	r0, [r8]
   14760:	beq	14780 <table_set_ldouble@@Base+0x7c>
   14764:	vst1.8	{d8}, [r0]
   14768:	mov	r0, r6
   1476c:	mov	r1, r5
   14770:	mov	r2, r4
   14774:	mov	r3, #1
   14778:	bl	12a54 <table_notify@@Base>
   1477c:	mov	r7, #0
   14780:	mov	r0, r7
   14784:	vpop	{d8}
   14788:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001478c <table_set_string@@Base>:
   1478c:	push	{fp, lr}
   14790:	mov	fp, sp
   14794:	sub	sp, sp, #8
   14798:	mov	ip, #21
   1479c:	str	ip, [sp]
   147a0:	bl	13a34 <table_set@@Base>
   147a4:	mov	sp, fp
   147a8:	pop	{fp, pc}

000147ac <table_set_char@@Base>:
   147ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   147b0:	add	fp, sp, #24
   147b4:	mov	r8, r3
   147b8:	mov	r4, r2
   147bc:	mov	r9, r1
   147c0:	mov	r6, r0
   147c4:	bl	14928 <table_get_cell_ptr@@Base>
   147c8:	mov	r5, r0
   147cc:	mov	r0, r6
   147d0:	mov	r1, r4
   147d4:	bl	12b20 <table_get_col_ptr@@Base>
   147d8:	ldr	r0, [r0, #4]
   147dc:	mvn	r7, #0
   147e0:	cmp	r0, #19
   147e4:	bne	14824 <table_set_char@@Base+0x78>
   147e8:	ldr	r0, [r5]
   147ec:	cmp	r0, #0
   147f0:	bne	14808 <table_set_char@@Base+0x5c>
   147f4:	mov	r0, #1
   147f8:	bl	11ecc <malloc@plt>
   147fc:	cmp	r0, #0
   14800:	str	r0, [r5]
   14804:	beq	14824 <table_set_char@@Base+0x78>
   14808:	strb	r8, [r0]
   1480c:	mov	r0, r6
   14810:	mov	r1, r9
   14814:	mov	r2, r4
   14818:	mov	r3, #1
   1481c:	bl	12a54 <table_notify@@Base>
   14820:	mov	r7, #0
   14824:	mov	r0, r7
   14828:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001482c <table_set_uchar@@Base>:
   1482c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14830:	add	fp, sp, #24
   14834:	mov	r8, r3
   14838:	mov	r4, r2
   1483c:	mov	r9, r1
   14840:	mov	r6, r0
   14844:	bl	14928 <table_get_cell_ptr@@Base>
   14848:	mov	r5, r0
   1484c:	mov	r0, r6
   14850:	mov	r1, r4
   14854:	bl	12b20 <table_get_col_ptr@@Base>
   14858:	ldr	r0, [r0, #4]
   1485c:	mvn	r7, #0
   14860:	cmp	r0, #20
   14864:	bne	148a4 <table_set_uchar@@Base+0x78>
   14868:	ldr	r0, [r5]
   1486c:	cmp	r0, #0
   14870:	bne	14888 <table_set_uchar@@Base+0x5c>
   14874:	mov	r0, #1
   14878:	bl	11ecc <malloc@plt>
   1487c:	cmp	r0, #0
   14880:	str	r0, [r5]
   14884:	beq	148a4 <table_set_uchar@@Base+0x78>
   14888:	strb	r8, [r0]
   1488c:	mov	r0, r6
   14890:	mov	r1, r9
   14894:	mov	r2, r4
   14898:	mov	r3, #1
   1489c:	bl	12a54 <table_notify@@Base>
   148a0:	mov	r7, #0
   148a4:	mov	r0, r7
   148a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000148ac <table_set_ptr@@Base>:
   148ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148b0:	add	fp, sp, #24
   148b4:	mov	r8, r3
   148b8:	mov	r4, r2
   148bc:	mov	r5, r1
   148c0:	mov	r6, r0
   148c4:	bl	14928 <table_get_cell_ptr@@Base>
   148c8:	mov	r7, r0
   148cc:	mov	r0, r6
   148d0:	mov	r1, r4
   148d4:	bl	12b20 <table_get_col_ptr@@Base>
   148d8:	ldr	r1, [r0, #4]
   148dc:	mvn	r0, #0
   148e0:	cmp	r1, #23
   148e4:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   148e8:	mov	r0, r6
   148ec:	mov	r1, r5
   148f0:	mov	r2, r4
   148f4:	mov	r3, #1
   148f8:	str	r8, [r7]
   148fc:	bl	12a54 <table_notify@@Base>
   14900:	mov	r0, #0
   14904:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014908 <table_cell_init@@Base>:
   14908:	push	{r4, sl, fp, lr}
   1490c:	add	fp, sp, #8
   14910:	mov	r4, r2
   14914:	bl	13808 <table_get_row_ptr@@Base>
   14918:	ldr	r0, [r0]
   1491c:	mov	r1, #0
   14920:	str	r1, [r0, r4, lsl #2]
   14924:	pop	{r4, sl, fp, pc}

00014928 <table_get_cell_ptr@@Base>:
   14928:	push	{r4, sl, fp, lr}
   1492c:	add	fp, sp, #8
   14930:	mov	r4, r2
   14934:	bl	13808 <table_get_row_ptr@@Base>
   14938:	ldr	r0, [r0]
   1493c:	add	r0, r0, r4, lsl #2
   14940:	pop	{r4, sl, fp, pc}

00014944 <table_cell_destroy@@Base>:
   14944:	push	{r4, r5, r6, sl, fp, lr}
   14948:	add	fp, sp, #16
   1494c:	mov	r5, r1
   14950:	mov	r1, r2
   14954:	mov	r4, r2
   14958:	mov	r6, r0
   1495c:	bl	12bbc <table_get_column_data_type@@Base>
   14960:	cmp	r0, #23
   14964:	popeq	{r4, r5, r6, sl, fp, pc}
   14968:	mov	r0, r6
   1496c:	mov	r1, r5
   14970:	bl	13808 <table_get_row_ptr@@Base>
   14974:	ldr	r0, [r0]
   14978:	ldr	r0, [r0, r4, lsl #2]
   1497c:	cmp	r0, #0
   14980:	beq	1498c <table_cell_destroy@@Base+0x48>
   14984:	pop	{r4, r5, r6, sl, fp, lr}
   14988:	b	11ea8 <free@plt>
   1498c:	pop	{r4, r5, r6, sl, fp, pc}

00014990 <table_cell_to_buffer@@Base>:
   14990:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14994:	add	fp, sp, #24
   14998:	sub	sp, sp, #8
   1499c:	mov	r7, r1
   149a0:	mov	r1, r2
   149a4:	mov	r5, r3
   149a8:	mov	r6, r2
   149ac:	mov	r4, r0
   149b0:	bl	12bbc <table_get_column_data_type@@Base>
   149b4:	cmp	r0, #23
   149b8:	bhi	14cac <table_cell_to_buffer@@Base+0x31c>
   149bc:	add	r1, pc, #8
   149c0:	ldr	r8, [fp, #8]
   149c4:	ldr	r0, [r1, r0, lsl #2]
   149c8:	add	pc, r1, r0
   149cc:	andeq	r0, r0, r0, rrx
   149d0:	andeq	r0, r0, r4, ror r0
   149d4:	andeq	r0, r0, r8, lsl #1
   149d8:	muleq	r0, ip, r0
   149dc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   149e0:	andeq	r0, r0, r4, asr #1
   149e4:	ldrdeq	r0, [r0], -r8
   149e8:	andeq	r0, r0, ip, ror #1
   149ec:	andeq	r0, r0, ip, lsl #2
   149f0:	andeq	r0, r0, r0, lsr #2
   149f4:	andeq	r0, r0, r4, lsr r1
   149f8:	andeq	r0, r0, r4, asr r1
   149fc:	andeq	r0, r0, r4, ror r1
   14a00:	muleq	r0, r4, r1
   14a04:			; <UNDEFINED> instruction: 0x000001b4
   14a08:	ldrdeq	r0, [r0], -r4
   14a0c:	strdeq	r0, [r0], -r4
   14a10:	andeq	r0, r0, r8, lsl r2
   14a14:	andeq	r0, r0, r8, lsr r2
   14a18:	andeq	r0, r0, r4, ror #4
   14a1c:	andeq	r0, r0, r8, ror r2
   14a20:	muleq	r0, r8, r2
   14a24:			; <UNDEFINED> instruction: 0x000002b8
   14a28:	andeq	r0, r0, ip, ror #5
   14a2c:	mov	r0, r4
   14a30:	mov	r1, r7
   14a34:	mov	r2, r6
   14a38:	bl	135c4 <table_get_int@@Base>
   14a3c:	b	14c94 <table_cell_to_buffer@@Base+0x304>
   14a40:	mov	r0, r4
   14a44:	mov	r1, r7
   14a48:	mov	r2, r6
   14a4c:	bl	135dc <table_get_uint@@Base>
   14a50:	b	14ac8 <table_cell_to_buffer@@Base+0x138>
   14a54:	mov	r0, r4
   14a58:	mov	r1, r7
   14a5c:	mov	r2, r6
   14a60:	bl	135f4 <table_get_int8@@Base>
   14a64:	b	14c94 <table_cell_to_buffer@@Base+0x304>
   14a68:	mov	r0, r4
   14a6c:	mov	r1, r7
   14a70:	mov	r2, r6
   14a74:	bl	1360c <table_get_uint8@@Base>
   14a78:	b	14ac8 <table_cell_to_buffer@@Base+0x138>
   14a7c:	mov	r0, r4
   14a80:	mov	r1, r7
   14a84:	mov	r2, r6
   14a88:	bl	13624 <table_get_int16@@Base>
   14a8c:	b	14c94 <table_cell_to_buffer@@Base+0x304>
   14a90:	mov	r0, r4
   14a94:	mov	r1, r7
   14a98:	mov	r2, r6
   14a9c:	bl	1363c <table_get_uint16@@Base>
   14aa0:	b	14ac8 <table_cell_to_buffer@@Base+0x138>
   14aa4:	mov	r0, r4
   14aa8:	mov	r1, r7
   14aac:	mov	r2, r6
   14ab0:	bl	13654 <table_get_int32@@Base>
   14ab4:	b	14c94 <table_cell_to_buffer@@Base+0x304>
   14ab8:	mov	r0, r4
   14abc:	mov	r1, r7
   14ac0:	mov	r2, r6
   14ac4:	bl	1366c <table_get_uint32@@Base>
   14ac8:	ldr	r2, [pc, #524]	; 14cdc <table_cell_to_buffer@@Base+0x34c>
   14acc:	mov	r3, r0
   14ad0:	add	r2, pc, r2
   14ad4:	b	14ca0 <table_cell_to_buffer@@Base+0x310>
   14ad8:	mov	r0, r4
   14adc:	mov	r1, r7
   14ae0:	mov	r2, r6
   14ae4:	bl	13684 <table_get_int64@@Base>
   14ae8:	b	14b90 <table_cell_to_buffer@@Base+0x200>
   14aec:	mov	r0, r4
   14af0:	mov	r1, r7
   14af4:	mov	r2, r6
   14af8:	bl	1369c <table_get_uint64@@Base>
   14afc:	b	14bb0 <table_cell_to_buffer@@Base+0x220>
   14b00:	mov	r0, r4
   14b04:	mov	r1, r7
   14b08:	mov	r2, r6
   14b0c:	bl	136b4 <table_get_short@@Base>
   14b10:	ldr	r2, [pc, #464]	; 14ce8 <table_cell_to_buffer@@Base+0x358>
   14b14:	mov	r3, r0
   14b18:	add	r2, pc, r2
   14b1c:	b	14ca0 <table_cell_to_buffer@@Base+0x310>
   14b20:	mov	r0, r4
   14b24:	mov	r1, r7
   14b28:	mov	r2, r6
   14b2c:	bl	136cc <table_get_ushort@@Base>
   14b30:	ldr	r2, [pc, #436]	; 14cec <table_cell_to_buffer@@Base+0x35c>
   14b34:	mov	r3, r0
   14b38:	add	r2, pc, r2
   14b3c:	b	14ca0 <table_cell_to_buffer@@Base+0x310>
   14b40:	mov	r0, r4
   14b44:	mov	r1, r7
   14b48:	mov	r2, r6
   14b4c:	bl	136e4 <table_get_long@@Base>
   14b50:	ldr	r2, [pc, #408]	; 14cf0 <table_cell_to_buffer@@Base+0x360>
   14b54:	mov	r3, r0
   14b58:	add	r2, pc, r2
   14b5c:	b	14ca0 <table_cell_to_buffer@@Base+0x310>
   14b60:	mov	r0, r4
   14b64:	mov	r1, r7
   14b68:	mov	r2, r6
   14b6c:	bl	136fc <table_get_ulong@@Base>
   14b70:	ldr	r2, [pc, #380]	; 14cf4 <table_cell_to_buffer@@Base+0x364>
   14b74:	mov	r3, r0
   14b78:	add	r2, pc, r2
   14b7c:	b	14ca0 <table_cell_to_buffer@@Base+0x310>
   14b80:	mov	r0, r4
   14b84:	mov	r1, r7
   14b88:	mov	r2, r6
   14b8c:	bl	13714 <table_get_llong@@Base>
   14b90:	stm	sp, {r0, r1}
   14b94:	ldr	r2, [pc, #324]	; 14ce0 <table_cell_to_buffer@@Base+0x350>
   14b98:	add	r2, pc, r2
   14b9c:	b	14c20 <table_cell_to_buffer@@Base+0x290>
   14ba0:	mov	r0, r4
   14ba4:	mov	r1, r7
   14ba8:	mov	r2, r6
   14bac:	bl	1372c <table_get_ullong@@Base>
   14bb0:	stm	sp, {r0, r1}
   14bb4:	ldr	r2, [pc, #296]	; 14ce4 <table_cell_to_buffer@@Base+0x354>
   14bb8:	add	r2, pc, r2
   14bbc:	b	14c20 <table_cell_to_buffer@@Base+0x290>
   14bc0:	mov	r0, r4
   14bc4:	mov	r1, r7
   14bc8:	mov	r2, r6
   14bcc:	bl	13744 <table_get_float@@Base>
   14bd0:	vcvt.f64.f32	d16, s0
   14bd4:	vstr	d16, [sp]
   14bd8:	ldr	r2, [pc, #284]	; 14cfc <table_cell_to_buffer@@Base+0x36c>
   14bdc:	add	r2, pc, r2
   14be0:	b	14c20 <table_cell_to_buffer@@Base+0x290>
   14be4:	mov	r0, r4
   14be8:	mov	r1, r7
   14bec:	mov	r2, r6
   14bf0:	bl	1375c <table_get_double@@Base>
   14bf4:	vstr	d0, [sp]
   14bf8:	ldr	r2, [pc, #256]	; 14d00 <table_cell_to_buffer@@Base+0x370>
   14bfc:	add	r2, pc, r2
   14c00:	b	14c20 <table_cell_to_buffer@@Base+0x290>
   14c04:	mov	r0, r4
   14c08:	mov	r1, r7
   14c0c:	mov	r2, r6
   14c10:	bl	13774 <table_get_ldouble@@Base>
   14c14:	vstr	d0, [sp]
   14c18:	ldr	r2, [pc, #228]	; 14d04 <table_cell_to_buffer@@Base+0x374>
   14c1c:	add	r2, pc, r2
   14c20:	mov	r0, r5
   14c24:	mov	r1, r8
   14c28:	bl	11efc <snprintf@plt>
   14c2c:	b	14cac <table_cell_to_buffer@@Base+0x31c>
   14c30:	mov	r0, r4
   14c34:	mov	r1, r7
   14c38:	mov	r2, r6
   14c3c:	bl	1378c <table_get_char@@Base>
   14c40:	b	14c54 <table_cell_to_buffer@@Base+0x2c4>
   14c44:	mov	r0, r4
   14c48:	mov	r1, r7
   14c4c:	mov	r2, r6
   14c50:	bl	137a4 <table_get_uchar@@Base>
   14c54:	ldr	r2, [pc, #172]	; 14d08 <table_cell_to_buffer@@Base+0x378>
   14c58:	mov	r3, r0
   14c5c:	add	r2, pc, r2
   14c60:	b	14ca0 <table_cell_to_buffer@@Base+0x310>
   14c64:	mov	r0, r4
   14c68:	mov	r1, r7
   14c6c:	mov	r2, r6
   14c70:	bl	137bc <table_get_string@@Base>
   14c74:	ldr	r2, [pc, #124]	; 14cf8 <table_cell_to_buffer@@Base+0x368>
   14c78:	mov	r3, r0
   14c7c:	add	r2, pc, r2
   14c80:	b	14ca0 <table_cell_to_buffer@@Base+0x310>
   14c84:	mov	r0, r4
   14c88:	mov	r1, r7
   14c8c:	mov	r2, r6
   14c90:	bl	135ac <table_get_bool@@Base>
   14c94:	ldr	r2, [pc, #60]	; 14cd8 <table_cell_to_buffer@@Base+0x348>
   14c98:	mov	r3, r0
   14c9c:	add	r2, pc, r2
   14ca0:	mov	r0, r5
   14ca4:	mov	r1, r8
   14ca8:	bl	11efc <snprintf@plt>
   14cac:	mov	r0, #0
   14cb0:	sub	sp, fp, #24
   14cb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14cb8:	mov	r0, r4
   14cbc:	mov	r1, r7
   14cc0:	mov	r2, r6
   14cc4:	bl	137d0 <table_get_ptr@@Base>
   14cc8:	ldr	r2, [pc, #60]	; 14d0c <table_cell_to_buffer@@Base+0x37c>
   14ccc:	mov	r3, r0
   14cd0:	add	r2, pc, r2
   14cd4:	b	14ca0 <table_cell_to_buffer@@Base+0x310>
   14cd8:	andeq	r0, r0, r3, ror #15
   14cdc:			; <UNDEFINED> instruction: 0x000009b2
   14ce0:	andeq	r0, r0, sp, ror #17
   14ce4:	ldrdeq	r0, [r0], -r2
   14ce8:	andeq	r0, r0, r7, ror r9
   14cec:	andeq	r0, r0, fp, asr r9
   14cf0:	andeq	r0, r0, pc, lsr r9
   14cf4:	andeq	r0, r0, r3, lsr #18
   14cf8:	andeq	r0, r0, r3, lsr #16
   14cfc:	andeq	r0, r0, r6, asr #17
   14d00:	andeq	r0, r0, r9, lsr #17
   14d04:	andeq	r0, r0, sp, lsl #17
   14d08:	andeq	r0, r0, r1, asr r8
   14d0c:	andeq	r0, r0, r0, ror #15

00014d10 <table_cell_from_buffer@@Base>:
   14d10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d14:	add	fp, sp, #24
   14d18:	sub	sp, sp, #264	; 0x108
   14d1c:	mov	r5, r1
   14d20:	mov	r1, r2
   14d24:	mov	r7, r3
   14d28:	mov	r4, r2
   14d2c:	mov	r6, r0
   14d30:	bl	12bbc <table_get_column_data_type@@Base>
   14d34:	cmp	r0, #23
   14d38:	bhi	15310 <table_cell_from_buffer@@Base+0x600>
   14d3c:	add	r1, pc, #4
   14d40:	ldr	r0, [r1, r0, lsl #2]
   14d44:	add	pc, r1, r0
   14d48:	andeq	r0, r0, r0, rrx
   14d4c:	muleq	r0, r8, r0
   14d50:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14d54:	andeq	r0, r0, r8, lsl #2
   14d58:	andeq	r0, r0, r0, asr #2
   14d5c:	andeq	r0, r0, r8, ror r1
   14d60:			; <UNDEFINED> instruction: 0x000001b0
   14d64:	andeq	r0, r0, r8, ror #3
   14d68:	andeq	r0, r0, r0, lsr #4
   14d6c:	andeq	r0, r0, r0, ror #4
   14d70:	andeq	r0, r0, r0, lsr #5
   14d74:	ldrdeq	r0, [r0], -r8
   14d78:	andeq	r0, r0, r0, lsl r3
   14d7c:	andeq	r0, r0, r8, asr #6
   14d80:	andeq	r0, r0, r0, lsl #7
   14d84:	andeq	r0, r0, r0, asr #7
   14d88:	andeq	r0, r0, r0, lsl #8
   14d8c:	andeq	r0, r0, r8, lsr r4
   14d90:	andeq	r0, r0, r0, ror r4
   14d94:	andeq	r0, r0, r8, lsr #9
   14d98:	andeq	r0, r0, r0, ror #9
   14d9c:	andeq	r0, r0, r8, lsl r5
   14da0:	andeq	r0, r0, r0, asr r5
   14da4:	muleq	r0, r4, r5
   14da8:	ldr	r1, [pc, #1420]	; 1533c <table_cell_from_buffer@@Base+0x62c>
   14dac:	add	r2, sp, #8
   14db0:	mov	r0, r7
   14db4:	add	r1, pc, r1
   14db8:	bl	11f08 <__isoc99_sscanf@plt>
   14dbc:	mvn	r7, #0
   14dc0:	cmp	r0, #1
   14dc4:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   14dc8:	ldr	r3, [sp, #8]
   14dcc:	mov	r0, r6
   14dd0:	mov	r1, r5
   14dd4:	mov	r2, r4
   14dd8:	bl	13dd0 <table_set_int@@Base>
   14ddc:	b	15310 <table_cell_from_buffer@@Base+0x600>
   14de0:	ldr	r1, [pc, #1368]	; 15340 <table_cell_from_buffer@@Base+0x630>
   14de4:	add	r2, sp, #8
   14de8:	mov	r0, r7
   14dec:	add	r1, pc, r1
   14df0:	bl	11f08 <__isoc99_sscanf@plt>
   14df4:	mvn	r7, #0
   14df8:	cmp	r0, #1
   14dfc:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   14e00:	ldr	r3, [sp, #8]
   14e04:	mov	r0, r6
   14e08:	mov	r1, r5
   14e0c:	mov	r2, r4
   14e10:	bl	13e50 <table_set_uint@@Base>
   14e14:	b	15310 <table_cell_from_buffer@@Base+0x600>
   14e18:	ldr	r1, [pc, #1316]	; 15344 <table_cell_from_buffer@@Base+0x634>
   14e1c:	add	r2, sp, #8
   14e20:	mov	r0, r7
   14e24:	add	r1, pc, r1
   14e28:	bl	11f08 <__isoc99_sscanf@plt>
   14e2c:	mvn	r7, #0
   14e30:	cmp	r0, #1
   14e34:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   14e38:	ldrsb	r3, [sp, #8]
   14e3c:	mov	r0, r6
   14e40:	mov	r1, r5
   14e44:	mov	r2, r4
   14e48:	bl	13ed0 <table_set_int8@@Base>
   14e4c:	b	15310 <table_cell_from_buffer@@Base+0x600>
   14e50:	ldr	r1, [pc, #1264]	; 15348 <table_cell_from_buffer@@Base+0x638>
   14e54:	add	r2, sp, #8
   14e58:	mov	r0, r7
   14e5c:	add	r1, pc, r1
   14e60:	bl	11f08 <__isoc99_sscanf@plt>
   14e64:	mvn	r7, #0
   14e68:	cmp	r0, #1
   14e6c:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   14e70:	ldrb	r3, [sp, #8]
   14e74:	mov	r0, r6
   14e78:	mov	r1, r5
   14e7c:	mov	r2, r4
   14e80:	bl	13f50 <table_set_uint8@@Base>
   14e84:	b	15310 <table_cell_from_buffer@@Base+0x600>
   14e88:	ldr	r1, [pc, #1212]	; 1534c <table_cell_from_buffer@@Base+0x63c>
   14e8c:	add	r2, sp, #8
   14e90:	mov	r0, r7
   14e94:	add	r1, pc, r1
   14e98:	bl	11f08 <__isoc99_sscanf@plt>
   14e9c:	mvn	r7, #0
   14ea0:	cmp	r0, #1
   14ea4:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   14ea8:	ldrsh	r3, [sp, #8]
   14eac:	mov	r0, r6
   14eb0:	mov	r1, r5
   14eb4:	mov	r2, r4
   14eb8:	bl	13fd0 <table_set_int16@@Base>
   14ebc:	b	15310 <table_cell_from_buffer@@Base+0x600>
   14ec0:	ldr	r1, [pc, #1160]	; 15350 <table_cell_from_buffer@@Base+0x640>
   14ec4:	add	r2, sp, #8
   14ec8:	mov	r0, r7
   14ecc:	add	r1, pc, r1
   14ed0:	bl	11f08 <__isoc99_sscanf@plt>
   14ed4:	mvn	r7, #0
   14ed8:	cmp	r0, #1
   14edc:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   14ee0:	ldrh	r3, [sp, #8]
   14ee4:	mov	r0, r6
   14ee8:	mov	r1, r5
   14eec:	mov	r2, r4
   14ef0:	bl	14050 <table_set_uint16@@Base>
   14ef4:	b	15310 <table_cell_from_buffer@@Base+0x600>
   14ef8:	ldr	r1, [pc, #1108]	; 15354 <table_cell_from_buffer@@Base+0x644>
   14efc:	add	r2, sp, #8
   14f00:	mov	r0, r7
   14f04:	add	r1, pc, r1
   14f08:	bl	11f08 <__isoc99_sscanf@plt>
   14f0c:	mvn	r7, #0
   14f10:	cmp	r0, #1
   14f14:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   14f18:	ldr	r3, [sp, #8]
   14f1c:	mov	r0, r6
   14f20:	mov	r1, r5
   14f24:	mov	r2, r4
   14f28:	bl	140d0 <table_set_int32@@Base>
   14f2c:	b	15310 <table_cell_from_buffer@@Base+0x600>
   14f30:	ldr	r1, [pc, #1056]	; 15358 <table_cell_from_buffer@@Base+0x648>
   14f34:	add	r2, sp, #8
   14f38:	mov	r0, r7
   14f3c:	add	r1, pc, r1
   14f40:	bl	11f08 <__isoc99_sscanf@plt>
   14f44:	mvn	r7, #0
   14f48:	cmp	r0, #1
   14f4c:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   14f50:	ldr	r3, [sp, #8]
   14f54:	mov	r0, r6
   14f58:	mov	r1, r5
   14f5c:	mov	r2, r4
   14f60:	bl	14150 <table_set_uint32@@Base>
   14f64:	b	15310 <table_cell_from_buffer@@Base+0x600>
   14f68:	ldr	r1, [pc, #1004]	; 1535c <table_cell_from_buffer@@Base+0x64c>
   14f6c:	add	r2, sp, #8
   14f70:	mov	r0, r7
   14f74:	add	r1, pc, r1
   14f78:	bl	11f08 <__isoc99_sscanf@plt>
   14f7c:	mvn	r7, #0
   14f80:	cmp	r0, #1
   14f84:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   14f88:	ldr	r0, [sp, #8]
   14f8c:	ldr	r1, [sp, #12]
   14f90:	mov	r2, r4
   14f94:	stm	sp, {r0, r1}
   14f98:	mov	r0, r6
   14f9c:	mov	r1, r5
   14fa0:	bl	141d0 <table_set_int64@@Base>
   14fa4:	b	15310 <table_cell_from_buffer@@Base+0x600>
   14fa8:	ldr	r1, [pc, #944]	; 15360 <table_cell_from_buffer@@Base+0x650>
   14fac:	add	r2, sp, #8
   14fb0:	mov	r0, r7
   14fb4:	add	r1, pc, r1
   14fb8:	bl	11f08 <__isoc99_sscanf@plt>
   14fbc:	mvn	r7, #0
   14fc0:	cmp	r0, #1
   14fc4:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   14fc8:	ldr	r0, [sp, #8]
   14fcc:	ldr	r1, [sp, #12]
   14fd0:	mov	r2, r4
   14fd4:	stm	sp, {r0, r1}
   14fd8:	mov	r0, r6
   14fdc:	mov	r1, r5
   14fe0:	bl	14258 <table_set_uint64@@Base>
   14fe4:	b	15310 <table_cell_from_buffer@@Base+0x600>
   14fe8:	ldr	r1, [pc, #884]	; 15364 <table_cell_from_buffer@@Base+0x654>
   14fec:	add	r2, sp, #8
   14ff0:	mov	r0, r7
   14ff4:	add	r1, pc, r1
   14ff8:	bl	11f08 <__isoc99_sscanf@plt>
   14ffc:	mvn	r7, #0
   15000:	cmp	r0, #1
   15004:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   15008:	ldrsh	r3, [sp, #8]
   1500c:	mov	r0, r6
   15010:	mov	r1, r5
   15014:	mov	r2, r4
   15018:	bl	142e0 <table_set_short@@Base>
   1501c:	b	15310 <table_cell_from_buffer@@Base+0x600>
   15020:	ldr	r1, [pc, #832]	; 15368 <table_cell_from_buffer@@Base+0x658>
   15024:	add	r2, sp, #8
   15028:	mov	r0, r7
   1502c:	add	r1, pc, r1
   15030:	bl	11f08 <__isoc99_sscanf@plt>
   15034:	mvn	r7, #0
   15038:	cmp	r0, #1
   1503c:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   15040:	ldrh	r3, [sp, #8]
   15044:	mov	r0, r6
   15048:	mov	r1, r5
   1504c:	mov	r2, r4
   15050:	bl	14360 <table_set_ushort@@Base>
   15054:	b	15310 <table_cell_from_buffer@@Base+0x600>
   15058:	ldr	r1, [pc, #780]	; 1536c <table_cell_from_buffer@@Base+0x65c>
   1505c:	add	r2, sp, #8
   15060:	mov	r0, r7
   15064:	add	r1, pc, r1
   15068:	bl	11f08 <__isoc99_sscanf@plt>
   1506c:	mvn	r7, #0
   15070:	cmp	r0, #1
   15074:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   15078:	ldr	r3, [sp, #8]
   1507c:	mov	r0, r6
   15080:	mov	r1, r5
   15084:	mov	r2, r4
   15088:	bl	143e0 <table_set_long@@Base>
   1508c:	b	15310 <table_cell_from_buffer@@Base+0x600>
   15090:	ldr	r1, [pc, #728]	; 15370 <table_cell_from_buffer@@Base+0x660>
   15094:	add	r2, sp, #8
   15098:	mov	r0, r7
   1509c:	add	r1, pc, r1
   150a0:	bl	11f08 <__isoc99_sscanf@plt>
   150a4:	mvn	r7, #0
   150a8:	cmp	r0, #1
   150ac:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   150b0:	ldr	r3, [sp, #8]
   150b4:	mov	r0, r6
   150b8:	mov	r1, r5
   150bc:	mov	r2, r4
   150c0:	bl	14460 <table_set_ulong@@Base>
   150c4:	b	15310 <table_cell_from_buffer@@Base+0x600>
   150c8:	ldr	r1, [pc, #676]	; 15374 <table_cell_from_buffer@@Base+0x664>
   150cc:	add	r2, sp, #8
   150d0:	mov	r0, r7
   150d4:	add	r1, pc, r1
   150d8:	bl	11f08 <__isoc99_sscanf@plt>
   150dc:	mvn	r7, #0
   150e0:	cmp	r0, #1
   150e4:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   150e8:	ldr	r0, [sp, #8]
   150ec:	ldr	r1, [sp, #12]
   150f0:	mov	r2, r4
   150f4:	stm	sp, {r0, r1}
   150f8:	mov	r0, r6
   150fc:	mov	r1, r5
   15100:	bl	144e0 <table_set_llong@@Base>
   15104:	b	15310 <table_cell_from_buffer@@Base+0x600>
   15108:	ldr	r1, [pc, #616]	; 15378 <table_cell_from_buffer@@Base+0x668>
   1510c:	add	r2, sp, #8
   15110:	mov	r0, r7
   15114:	add	r1, pc, r1
   15118:	bl	11f08 <__isoc99_sscanf@plt>
   1511c:	mvn	r7, #0
   15120:	cmp	r0, #1
   15124:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   15128:	ldr	r0, [sp, #8]
   1512c:	ldr	r1, [sp, #12]
   15130:	mov	r2, r4
   15134:	stm	sp, {r0, r1}
   15138:	mov	r0, r6
   1513c:	mov	r1, r5
   15140:	bl	14568 <table_set_ullong@@Base>
   15144:	b	15310 <table_cell_from_buffer@@Base+0x600>
   15148:	ldr	r1, [pc, #560]	; 15380 <table_cell_from_buffer@@Base+0x670>
   1514c:	add	r2, sp, #8
   15150:	mov	r0, r7
   15154:	add	r1, pc, r1
   15158:	bl	11f08 <__isoc99_sscanf@plt>
   1515c:	mvn	r7, #0
   15160:	cmp	r0, #1
   15164:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   15168:	vldr	s0, [sp, #8]
   1516c:	mov	r0, r6
   15170:	mov	r1, r5
   15174:	mov	r2, r4
   15178:	bl	145f0 <table_set_float@@Base>
   1517c:	b	15310 <table_cell_from_buffer@@Base+0x600>
   15180:	ldr	r1, [pc, #508]	; 15384 <table_cell_from_buffer@@Base+0x674>
   15184:	add	r2, sp, #8
   15188:	mov	r0, r7
   1518c:	add	r1, pc, r1
   15190:	bl	11f08 <__isoc99_sscanf@plt>
   15194:	mvn	r7, #0
   15198:	cmp	r0, #1
   1519c:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   151a0:	vldr	d0, [sp, #8]
   151a4:	mov	r0, r6
   151a8:	mov	r1, r5
   151ac:	mov	r2, r4
   151b0:	bl	1467c <table_set_double@@Base>
   151b4:	b	15310 <table_cell_from_buffer@@Base+0x600>
   151b8:	ldr	r1, [pc, #456]	; 15388 <table_cell_from_buffer@@Base+0x678>
   151bc:	add	r2, sp, #8
   151c0:	mov	r0, r7
   151c4:	add	r1, pc, r1
   151c8:	bl	11f08 <__isoc99_sscanf@plt>
   151cc:	mvn	r7, #0
   151d0:	cmp	r0, #1
   151d4:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   151d8:	vldr	d0, [sp, #8]
   151dc:	mov	r0, r6
   151e0:	mov	r1, r5
   151e4:	mov	r2, r4
   151e8:	bl	14704 <table_set_ldouble@@Base>
   151ec:	b	15310 <table_cell_from_buffer@@Base+0x600>
   151f0:	ldr	r1, [pc, #408]	; 15390 <table_cell_from_buffer@@Base+0x680>
   151f4:	add	r2, sp, #8
   151f8:	mov	r0, r7
   151fc:	add	r1, pc, r1
   15200:	bl	11f08 <__isoc99_sscanf@plt>
   15204:	mvn	r7, #0
   15208:	cmp	r0, #1
   1520c:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   15210:	ldrb	r3, [sp, #8]
   15214:	mov	r0, r6
   15218:	mov	r1, r5
   1521c:	mov	r2, r4
   15220:	bl	147ac <table_set_char@@Base>
   15224:	b	15310 <table_cell_from_buffer@@Base+0x600>
   15228:	ldr	r1, [pc, #356]	; 15394 <table_cell_from_buffer@@Base+0x684>
   1522c:	add	r2, sp, #8
   15230:	mov	r0, r7
   15234:	add	r1, pc, r1
   15238:	bl	11f08 <__isoc99_sscanf@plt>
   1523c:	mvn	r7, #0
   15240:	cmp	r0, #1
   15244:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   15248:	ldrb	r3, [sp, #8]
   1524c:	mov	r0, r6
   15250:	mov	r1, r5
   15254:	mov	r2, r4
   15258:	bl	1482c <table_set_uchar@@Base>
   1525c:	b	15310 <table_cell_from_buffer@@Base+0x600>
   15260:	ldr	r1, [pc, #276]	; 1537c <table_cell_from_buffer@@Base+0x66c>
   15264:	add	r2, sp, #8
   15268:	mov	r0, r7
   1526c:	add	r1, pc, r1
   15270:	bl	11f08 <__isoc99_sscanf@plt>
   15274:	mvn	r7, #0
   15278:	cmp	r0, #1
   1527c:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   15280:	add	r3, sp, #8
   15284:	mov	r0, r6
   15288:	mov	r1, r5
   1528c:	mov	r2, r4
   15290:	bl	1478c <table_set_string@@Base>
   15294:	b	15310 <table_cell_from_buffer@@Base+0x600>
   15298:	ldr	r1, [pc, #236]	; 1538c <table_cell_from_buffer@@Base+0x67c>
   1529c:	add	r2, sp, #8
   152a0:	mov	r0, r7
   152a4:	add	r1, pc, r1
   152a8:	bl	11f08 <__isoc99_sscanf@plt>
   152ac:	mvn	r7, #0
   152b0:	cmp	r0, #1
   152b4:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   152b8:	ldr	r0, [sp, #8]
   152bc:	cmp	r0, #0
   152c0:	beq	15320 <table_cell_from_buffer@@Base+0x610>
   152c4:	mov	r0, r6
   152c8:	mov	r1, r5
   152cc:	mov	r2, r4
   152d0:	mov	r3, #1
   152d4:	bl	13d50 <table_set_bool@@Base>
   152d8:	b	15310 <table_cell_from_buffer@@Base+0x600>
   152dc:	ldr	r1, [pc, #180]	; 15398 <table_cell_from_buffer@@Base+0x688>
   152e0:	add	r2, sp, #8
   152e4:	mov	r0, r7
   152e8:	add	r1, pc, r1
   152ec:	bl	11f08 <__isoc99_sscanf@plt>
   152f0:	mvn	r7, #0
   152f4:	cmp	r0, #1
   152f8:	bne	15314 <table_cell_from_buffer@@Base+0x604>
   152fc:	ldr	r3, [sp, #8]
   15300:	mov	r0, r6
   15304:	mov	r1, r5
   15308:	mov	r2, r4
   1530c:	bl	148ac <table_set_ptr@@Base>
   15310:	mov	r7, #0
   15314:	mov	r0, r7
   15318:	sub	sp, fp, #24
   1531c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15320:	mov	r0, r6
   15324:	mov	r1, r5
   15328:	mov	r2, r4
   1532c:	mov	r3, #0
   15330:	mov	r7, #0
   15334:	bl	13d50 <table_set_bool@@Base>
   15338:	b	15314 <table_cell_from_buffer@@Base+0x604>
   1533c:	andeq	r0, r0, fp, asr #13
   15340:	muleq	r0, r6, r6
   15344:	andeq	r0, r0, pc, lsl #13
   15348:	andeq	r0, r0, ip, asr r6
   1534c:	strdeq	r0, [r0], -fp
   15350:	andeq	r0, r0, r7, asr #11
   15354:	andeq	r0, r0, fp, ror r5
   15358:	andeq	r0, r0, r6, asr #10
   1535c:	andeq	r0, r0, r1, lsl r5
   15360:	ldrdeq	r0, [r0], -r6
   15364:	muleq	r0, fp, r4
   15368:	andeq	r0, r0, r7, ror #8
   1536c:	andeq	r0, r0, r3, lsr r4
   15370:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   15374:			; <UNDEFINED> instruction: 0x000003b1
   15378:	andeq	r0, r0, r6, ror r3
   1537c:	andeq	r0, r0, r3, lsr r2
   15380:	andeq	r0, r0, lr, asr #6
   15384:	andeq	r0, r0, r9, lsl r3
   15388:	andeq	r0, r0, r5, ror #5
   1538c:	ldrdeq	r0, [r0], -fp
   15390:			; <UNDEFINED> instruction: 0x000002b1
   15394:	andeq	r0, r0, r9, ror r2
   15398:	andeq	r0, r0, r8, asr #3

0001539c <table_cell_nullify@@Base>:
   1539c:	push	{r4, r5, fp, lr}
   153a0:	add	fp, sp, #8
   153a4:	mov	r4, r2
   153a8:	bl	13808 <table_get_row_ptr@@Base>
   153ac:	ldr	r5, [r0]
   153b0:	ldr	r0, [r5, r4, lsl #2]
   153b4:	cmp	r0, #0
   153b8:	beq	153c8 <table_cell_nullify@@Base+0x2c>
   153bc:	bl	11ea8 <free@plt>
   153c0:	mov	r0, #0
   153c4:	str	r0, [r5, r4, lsl #2]
   153c8:	mov	r0, #0
   153cc:	pop	{r4, r5, fp, pc}

000153d0 <__libc_csu_init@@Base>:
   153d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   153d4:	mov	r7, r0
   153d8:	ldr	r6, [pc, #72]	; 15428 <__libc_csu_init@@Base+0x58>
   153dc:	ldr	r5, [pc, #72]	; 1542c <__libc_csu_init@@Base+0x5c>
   153e0:	add	r6, pc, r6
   153e4:	add	r5, pc, r5
   153e8:	sub	r6, r6, r5
   153ec:	mov	r8, r1
   153f0:	mov	r9, r2
   153f4:	bl	11e70 <strcmp@plt-0x20>
   153f8:	asrs	r6, r6, #2
   153fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15400:	mov	r4, #0
   15404:	add	r4, r4, #1
   15408:	ldr	r3, [r5], #4
   1540c:	mov	r2, r9
   15410:	mov	r1, r8
   15414:	mov	r0, r7
   15418:	blx	r3
   1541c:	cmp	r6, r4
   15420:	bne	15404 <__libc_csu_init@@Base+0x34>
   15424:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15428:	andeq	r0, r1, r4, asr #21
   1542c:			; <UNDEFINED> instruction: 0x00010abc

00015430 <__libc_csu_fini@@Base>:
   15430:	bx	lr

Disassembly of section .fini:

00015434 <.fini>:
   15434:	push	{r3, lr}
   15438:	pop	{r3, pc}
