
../repos/inetutils/src/rshd:     file format elf32-littlearm


Disassembly of section .init:

00011530 <.init>:
   11530:	push	{r3, lr}
   11534:	bl	119d0 <__assert_fail@plt+0x48>
   11538:	pop	{r3, pc}

Disassembly of section .plt:

0001153c <calloc@plt-0x14>:
   1153c:	push	{lr}		; (str lr, [sp, #-4]!)
   11540:	ldr	lr, [pc, #4]	; 1154c <calloc@plt-0x4>
   11544:	add	lr, pc, lr
   11548:	ldr	pc, [lr, #8]!
   1154c:			; <UNDEFINED> instruction: 0x00019ab4

00011550 <calloc@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #102400	; 0x19000
   11558:	ldr	pc, [ip, #2740]!	; 0xab4

0001155c <fputs_unlocked@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #102400	; 0x19000
   11564:	ldr	pc, [ip, #2732]!	; 0xaac

00011568 <raise@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #102400	; 0x19000
   11570:	ldr	pc, [ip, #2724]!	; 0xaa4

00011574 <strcmp@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #102400	; 0x19000
   1157c:	ldr	pc, [ip, #2716]!	; 0xa9c

00011580 <strtol@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #102400	; 0x19000
   11588:	ldr	pc, [ip, #2708]!	; 0xa94

0001158c <setsockopt@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #102400	; 0x19000
   11594:	ldr	pc, [ip, #2700]!	; 0xa8c

00011598 <printf@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #102400	; 0x19000
   115a0:	ldr	pc, [ip, #2692]!	; 0xa84

000115a4 <read@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #102400	; 0x19000
   115ac:	ldr	pc, [ip, #2684]!	; 0xa7c

000115b0 <getprotobyname@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #102400	; 0x19000
   115b8:	ldr	pc, [ip, #2676]!	; 0xa74

000115bc <getspnam@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #102400	; 0x19000
   115c4:	ldr	pc, [ip, #2668]!	; 0xa6c

000115c8 <memmove@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #102400	; 0x19000
   115d0:	ldr	pc, [ip, #2660]!	; 0xa64

000115d4 <strchrnul@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #102400	; 0x19000
   115dc:	ldr	pc, [ip, #2652]!	; 0xa5c

000115e0 <free@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #102400	; 0x19000
   115e8:	ldr	pc, [ip, #2644]!	; 0xa54

000115ec <gai_strerror@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #102400	; 0x19000
   115f4:	ldr	pc, [ip, #2636]!	; 0xa4c

000115f8 <strndup@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #102400	; 0x19000
   11600:	ldr	pc, [ip, #2628]!	; 0xa44

00011604 <_exit@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #102400	; 0x19000
   1160c:	ldr	pc, [ip, #2620]!	; 0xa3c

00011610 <memcpy@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #102400	; 0x19000
   11618:	ldr	pc, [ip, #2612]!	; 0xa34

0001161c <signal@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #102400	; 0x19000
   11624:	ldr	pc, [ip, #2604]!	; 0xa2c

00011628 <time@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #102400	; 0x19000
   11630:	ldr	pc, [ip, #2596]!	; 0xa24

00011634 <fwrite_unlocked@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #102400	; 0x19000
   1163c:	ldr	pc, [ip, #2588]!	; 0xa1c

00011640 <select@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #102400	; 0x19000
   11648:	ldr	pc, [ip, #2580]!	; 0xa14

0001164c <sleep@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #102400	; 0x19000
   11654:	ldr	pc, [ip, #2572]!	; 0xa0c

00011658 <strdup@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #102400	; 0x19000
   11660:	ldr	pc, [ip, #2564]!	; 0xa04

00011664 <alarm@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #102400	; 0x19000
   1166c:	ldr	pc, [ip, #2556]!	; 0x9fc

00011670 <sysconf@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #102400	; 0x19000
   11678:	ldr	pc, [ip, #2548]!	; 0x9f4

0001167c <dup2@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #102400	; 0x19000
   11684:	ldr	pc, [ip, #2540]!	; 0x9ec

00011688 <realloc@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #102400	; 0x19000
   11690:	ldr	pc, [ip, #2532]!	; 0x9e4

00011694 <killpg@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #102400	; 0x19000
   1169c:	ldr	pc, [ip, #2524]!	; 0x9dc

000116a0 <initgroups@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #102400	; 0x19000
   116a8:	ldr	pc, [ip, #2516]!	; 0x9d4

000116ac <chdir@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #102400	; 0x19000
   116b4:	ldr	pc, [ip, #2508]!	; 0x9cc

000116b8 <strcasecmp@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #102400	; 0x19000
   116c0:	ldr	pc, [ip, #2500]!	; 0x9c4

000116c4 <funlockfile@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #102400	; 0x19000
   116cc:	ldr	pc, [ip, #2492]!	; 0x9bc

000116d0 <perror@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #102400	; 0x19000
   116d8:	ldr	pc, [ip, #2484]!	; 0x9b4

000116dc <fwrite@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #102400	; 0x19000
   116e4:	ldr	pc, [ip, #2476]!	; 0x9ac

000116e8 <getsockopt@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #102400	; 0x19000
   116f0:	ldr	pc, [ip, #2468]!	; 0x9a4

000116f4 <ioctl@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #102400	; 0x19000
   116fc:	ldr	pc, [ip, #2460]!	; 0x99c

00011700 <error@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #102400	; 0x19000
   11708:	ldr	pc, [ip, #2452]!	; 0x994

0001170c <gethostname@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #102400	; 0x19000
   11714:	ldr	pc, [ip, #2444]!	; 0x98c

00011718 <getenv@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #102400	; 0x19000
   11720:	ldr	pc, [ip, #2436]!	; 0x984

00011724 <iruserok_af@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #102400	; 0x19000
   1172c:	ldr	pc, [ip, #2428]!	; 0x97c

00011730 <setgid@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #102400	; 0x19000
   11738:	ldr	pc, [ip, #2420]!	; 0x974

0001173c <malloc@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #102400	; 0x19000
   11744:	ldr	pc, [ip, #2412]!	; 0x96c

00011748 <__libc_start_main@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #102400	; 0x19000
   11750:	ldr	pc, [ip, #2404]!	; 0x964

00011754 <strerror@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #102400	; 0x19000
   1175c:	ldr	pc, [ip, #2396]!	; 0x95c

00011760 <__ctype_tolower_loc@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #102400	; 0x19000
   11768:	ldr	pc, [ip, #2388]!	; 0x954

0001176c <__gmon_start__@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #102400	; 0x19000
   11774:	ldr	pc, [ip, #2380]!	; 0x94c

00011778 <mempcpy@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #102400	; 0x19000
   11780:	ldr	pc, [ip, #2372]!	; 0x944

00011784 <__ctype_b_loc@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #102400	; 0x19000
   1178c:	ldr	pc, [ip, #2364]!	; 0x93c

00011790 <getpid@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #102400	; 0x19000
   11798:	ldr	pc, [ip, #2356]!	; 0x934

0001179c <exit@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #102400	; 0x19000
   117a4:	ldr	pc, [ip, #2348]!	; 0x92c

000117a8 <rresvport_af@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #102400	; 0x19000
   117b0:	ldr	pc, [ip, #2340]!	; 0x924

000117b4 <strlen@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #102400	; 0x19000
   117bc:	ldr	pc, [ip, #2332]!	; 0x91c

000117c0 <strchr@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #102400	; 0x19000
   117c8:	ldr	pc, [ip, #2324]!	; 0x914

000117cc <getpwnam_r@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #102400	; 0x19000
   117d4:	ldr	pc, [ip, #2316]!	; 0x90c

000117d8 <fprintf@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #102400	; 0x19000
   117e0:	ldr	pc, [ip, #2308]!	; 0x904

000117e4 <setpwent@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #102400	; 0x19000
   117ec:	ldr	pc, [ip, #2300]!	; 0x8fc

000117f0 <__errno_location@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #102400	; 0x19000
   117f8:	ldr	pc, [ip, #2292]!	; 0x8f4

000117fc <strerror_r@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #102400	; 0x19000
   11804:	ldr	pc, [ip, #2284]!	; 0x8ec

00011808 <memset@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #102400	; 0x19000
   11810:	ldr	pc, [ip, #2276]!	; 0x8e4

00011814 <write@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #102400	; 0x19000
   1181c:	ldr	pc, [ip, #2268]!	; 0x8dc

00011820 <difftime@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #102400	; 0x19000
   11828:	ldr	pc, [ip, #2260]!	; 0x8d4

0001182c <memchr@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #102400	; 0x19000
   11834:	ldr	pc, [ip, #2252]!	; 0x8cc

00011838 <access@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #102400	; 0x19000
   11840:	ldr	pc, [ip, #2244]!	; 0x8c4

00011844 <setegid@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #102400	; 0x19000
   1184c:	ldr	pc, [ip, #2236]!	; 0x8bc

00011850 <pipe@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #102400	; 0x19000
   11858:	ldr	pc, [ip, #2228]!	; 0x8b4

0001185c <shutdown@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #102400	; 0x19000
   11864:	ldr	pc, [ip, #2220]!	; 0x8ac

00011868 <__overflow@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #102400	; 0x19000
   11870:	ldr	pc, [ip, #2212]!	; 0x8a4

00011874 <fork@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #102400	; 0x19000
   1187c:	ldr	pc, [ip, #2204]!	; 0x89c

00011880 <getnameinfo@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #102400	; 0x19000
   11888:	ldr	pc, [ip, #2196]!	; 0x894

0001188c <endpwent@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #102400	; 0x19000
   11894:	ldr	pc, [ip, #2188]!	; 0x88c

00011898 <execl@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #102400	; 0x19000
   118a0:	ldr	pc, [ip, #2180]!	; 0x884

000118a4 <strrchr@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #102400	; 0x19000
   118ac:	ldr	pc, [ip, #2172]!	; 0x87c

000118b0 <vfprintf@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #102400	; 0x19000
   118b8:	ldr	pc, [ip, #2164]!	; 0x874

000118bc <fputc@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #102400	; 0x19000
   118c4:	ldr	pc, [ip, #2156]!	; 0x86c

000118c8 <syslog@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #102400	; 0x19000
   118d0:	ldr	pc, [ip, #2148]!	; 0x864

000118d4 <setuid@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #102400	; 0x19000
   118dc:	ldr	pc, [ip, #2140]!	; 0x85c

000118e0 <setpgid@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #102400	; 0x19000
   118e8:	ldr	pc, [ip, #2132]!	; 0x854

000118ec <sprintf@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #102400	; 0x19000
   118f4:	ldr	pc, [ip, #2124]!	; 0x84c

000118f8 <openlog@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #102400	; 0x19000
   11900:	ldr	pc, [ip, #2116]!	; 0x844

00011904 <flockfile@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #102400	; 0x19000
   1190c:	ldr	pc, [ip, #2108]!	; 0x83c

00011910 <vsnprintf@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #102400	; 0x19000
   11918:	ldr	pc, [ip, #2100]!	; 0x834

0001191c <qsort@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #102400	; 0x19000
   11924:	ldr	pc, [ip, #2092]!	; 0x82c

00011928 <getpeername@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #102400	; 0x19000
   11930:	ldr	pc, [ip, #2084]!	; 0x824

00011934 <freeaddrinfo@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #102400	; 0x19000
   1193c:	ldr	pc, [ip, #2076]!	; 0x81c

00011940 <getaddrinfo@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #102400	; 0x19000
   11948:	ldr	pc, [ip, #2068]!	; 0x814

0001194c <strncat@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #102400	; 0x19000
   11954:	ldr	pc, [ip, #2060]!	; 0x80c

00011958 <strncmp@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #102400	; 0x19000
   11960:	ldr	pc, [ip, #2052]!	; 0x804

00011964 <abort@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #102400	; 0x19000
   1196c:	ldr	pc, [ip, #2044]!	; 0x7fc

00011970 <close@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #102400	; 0x19000
   11978:	ldr	pc, [ip, #2036]!	; 0x7f4

0001197c <connect@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #102400	; 0x19000
   11984:	ldr	pc, [ip, #2028]!	; 0x7ec

00011988 <__assert_fail@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #102400	; 0x19000
   11990:	ldr	pc, [ip, #2020]!	; 0x7e4

Disassembly of section .text:

00011994 <argp_parse@@Base-0x1cdc>:
   11994:	mov	fp, #0
   11998:	mov	lr, #0
   1199c:	pop	{r1}		; (ldr r1, [sp], #4)
   119a0:	mov	r2, sp
   119a4:	push	{r2}		; (str r2, [sp, #-4]!)
   119a8:	push	{r0}		; (str r0, [sp, #-4]!)
   119ac:	ldr	ip, [pc, #16]	; 119c4 <__assert_fail@plt+0x3c>
   119b0:	push	{ip}		; (str ip, [sp, #-4]!)
   119b4:	ldr	r0, [pc, #12]	; 119c8 <__assert_fail@plt+0x40>
   119b8:	ldr	r3, [pc, #12]	; 119cc <__assert_fail@plt+0x44>
   119bc:	bl	11748 <__libc_start_main@plt>
   119c0:	bl	11964 <abort@plt>
   119c4:	andeq	r9, r1, r4, asr #18
   119c8:	andeq	r2, r1, ip, lsr #27
   119cc:	andeq	r9, r1, r4, ror #17
   119d0:	ldr	r3, [pc, #20]	; 119ec <__assert_fail@plt+0x64>
   119d4:	ldr	r2, [pc, #20]	; 119f0 <__assert_fail@plt+0x68>
   119d8:	add	r3, pc, r3
   119dc:	ldr	r2, [r3, r2]
   119e0:	cmp	r2, #0
   119e4:	bxeq	lr
   119e8:	b	1176c <__gmon_start__@plt>
   119ec:	andeq	r9, r1, r0, lsr #12
   119f0:	andeq	r0, r0, r8, ror r1
   119f4:	ldr	r3, [pc, #28]	; 11a18 <__assert_fail@plt+0x90>
   119f8:	ldr	r0, [pc, #28]	; 11a1c <__assert_fail@plt+0x94>
   119fc:	sub	r3, r3, r0
   11a00:	cmp	r3, #6
   11a04:	bxls	lr
   11a08:	ldr	r3, [pc, #16]	; 11a20 <__assert_fail@plt+0x98>
   11a0c:	cmp	r3, #0
   11a10:	bxeq	lr
   11a14:	bx	r3
   11a18:	ldrdeq	fp, [r2], -r7
   11a1c:	ldrdeq	fp, [r2], -r4
   11a20:	andeq	r0, r0, r0
   11a24:	ldr	r1, [pc, #36]	; 11a50 <__assert_fail@plt+0xc8>
   11a28:	ldr	r0, [pc, #36]	; 11a54 <__assert_fail@plt+0xcc>
   11a2c:	sub	r1, r1, r0
   11a30:	asr	r1, r1, #2
   11a34:	add	r1, r1, r1, lsr #31
   11a38:	asrs	r1, r1, #1
   11a3c:	bxeq	lr
   11a40:	ldr	r3, [pc, #16]	; 11a58 <__assert_fail@plt+0xd0>
   11a44:	cmp	r3, #0
   11a48:	bxeq	lr
   11a4c:	bx	r3
   11a50:	ldrdeq	fp, [r2], -r4
   11a54:	ldrdeq	fp, [r2], -r4
   11a58:	andeq	r0, r0, r0
   11a5c:	push	{r4, lr}
   11a60:	ldr	r4, [pc, #24]	; 11a80 <__assert_fail@plt+0xf8>
   11a64:	ldrb	r3, [r4]
   11a68:	cmp	r3, #0
   11a6c:	popne	{r4, pc}
   11a70:	bl	119f4 <__assert_fail@plt+0x6c>
   11a74:	mov	r3, #1
   11a78:	strb	r3, [r4]
   11a7c:	pop	{r4, pc}
   11a80:	strdeq	fp, [r2], -r4
   11a84:	ldr	r0, [pc, #40]	; 11ab4 <__assert_fail@plt+0x12c>
   11a88:	ldr	r3, [r0]
   11a8c:	cmp	r3, #0
   11a90:	bne	11a98 <__assert_fail@plt+0x110>
   11a94:	b	11a24 <__assert_fail@plt+0x9c>
   11a98:	ldr	r3, [pc, #24]	; 11ab8 <__assert_fail@plt+0x130>
   11a9c:	cmp	r3, #0
   11aa0:	beq	11a94 <__assert_fail@plt+0x10c>
   11aa4:	push	{r4, lr}
   11aa8:	blx	r3
   11aac:	pop	{r4, lr}
   11ab0:	b	11a24 <__assert_fail@plt+0x9c>
   11ab4:	andeq	sl, r2, ip, lsl #30
   11ab8:	andeq	r0, r0, r0
   11abc:	sub	r0, r0, #76	; 0x4c
   11ac0:	cmp	r0, #38	; 0x26
   11ac4:	ldrls	pc, [pc, r0, lsl #2]
   11ac8:	b	11bc4 <__assert_fail@plt+0x23c>
   11acc:			; <UNDEFINED> instruction: 0x00011bb0
   11ad0:	andeq	r1, r1, r4, asr #23
   11ad4:	andeq	r1, r1, r4, asr #23
   11ad8:	andeq	r1, r1, r4, asr #23
   11adc:	andeq	r1, r1, r4, asr #23
   11ae0:	andeq	r1, r1, r4, asr #23
   11ae4:	andeq	r1, r1, r4, asr #23
   11ae8:	andeq	r1, r1, r4, asr #23
   11aec:	andeq	r1, r1, r4, asr #23
   11af0:	andeq	r1, r1, r4, asr #23
   11af4:	andeq	r1, r1, r4, asr #23
   11af8:	andeq	r1, r1, r4, asr #23
   11afc:	andeq	r1, r1, r4, asr #23
   11b00:	andeq	r1, r1, r4, asr #23
   11b04:	andeq	r1, r1, r4, asr #23
   11b08:	andeq	r1, r1, r4, asr #23
   11b0c:	andeq	r1, r1, r4, asr #23
   11b10:	andeq	r1, r1, r4, asr #23
   11b14:	andeq	r1, r1, r4, asr #23
   11b18:	andeq	r1, r1, r4, asr #23
   11b1c:	andeq	r1, r1, r4, asr #23
   11b20:	andeq	r1, r1, r8, ror #22
   11b24:	andeq	r1, r1, r4, asr #23
   11b28:	andeq	r1, r1, r4, asr #23
   11b2c:	andeq	r1, r1, r4, asr #23
   11b30:	andeq	r1, r1, r4, asr #23
   11b34:	andeq	r1, r1, r4, asr #23
   11b38:	andeq	r1, r1, r4, asr #23
   11b3c:	andeq	r1, r1, r4, asr #23
   11b40:	andeq	r1, r1, r4, asr #23
   11b44:	andeq	r1, r1, r4, asr #23
   11b48:	andeq	r1, r1, r4, asr #23
   11b4c:	andeq	r1, r1, ip, ror fp
   11b50:	andeq	r1, r1, r4, asr #23
   11b54:	andeq	r1, r1, ip, lsl #23
   11b58:	andeq	r1, r1, r4, asr #23
   11b5c:	andeq	r1, r1, r4, asr #23
   11b60:	andeq	r1, r1, r4, asr #23
   11b64:	muleq	r1, ip, fp
   11b68:	mov	r2, #1
   11b6c:	ldr	r3, [pc, #88]	; 11bcc <__assert_fail@plt+0x244>
   11b70:	str	r2, [r3]
   11b74:	mov	r0, #0
   11b78:	bx	lr
   11b7c:	mov	r0, #0
   11b80:	ldr	r3, [pc, #72]	; 11bd0 <__assert_fail@plt+0x248>
   11b84:	str	r0, [r3]
   11b88:	bx	lr
   11b8c:	mov	r0, #0
   11b90:	ldr	r3, [pc, #60]	; 11bd4 <__assert_fail@plt+0x24c>
   11b94:	str	r0, [r3]
   11b98:	bx	lr
   11b9c:	mov	r2, #1
   11ba0:	ldr	r3, [pc, #48]	; 11bd8 <__assert_fail@plt+0x250>
   11ba4:	str	r2, [r3]
   11ba8:	mov	r0, #0
   11bac:	bx	lr
   11bb0:	mov	r2, #1
   11bb4:	ldr	r3, [pc, #32]	; 11bdc <__assert_fail@plt+0x254>
   11bb8:	str	r2, [r3]
   11bbc:	mov	r0, #0
   11bc0:	bx	lr
   11bc4:	mov	r0, #7
   11bc8:	bx	lr
   11bcc:	andeq	fp, r2, r4, lsr r5
   11bd0:	andeq	fp, r2, r0, ror #9
   11bd4:	andeq	fp, r2, r4, lsl #3
   11bd8:	strdeq	fp, [r2], -r8
   11bdc:	andeq	fp, r2, r8, lsr r5
   11be0:	push	{r0, r1, r2, r3}
   11be4:	push	{r4, r5, lr}
   11be8:	sub	sp, sp, #8192	; 0x2000
   11bec:	sub	sp, sp, #12
   11bf0:	add	r3, sp, #8192	; 0x2000
   11bf4:	add	r3, r3, #28
   11bf8:	add	r2, sp, #8192	; 0x2000
   11bfc:	add	r2, r2, #4
   11c00:	str	r3, [r2]
   11c04:	ldr	r3, [pc, #104]	; 11c74 <__assert_fail@plt+0x2ec>
   11c08:	ldr	r3, [r3]
   11c0c:	cmp	r3, #0
   11c10:	moveq	r5, #1
   11c14:	strbeq	r5, [sp, #4]
   11c18:	addeq	r4, sp, #5
   11c1c:	addne	r4, sp, #4
   11c20:	movne	r5, #0
   11c24:	add	r3, sp, #8192	; 0x2000
   11c28:	add	r3, r3, #4
   11c2c:	ldr	r3, [r3]
   11c30:	add	r2, sp, #8192	; 0x2000
   11c34:	add	r2, r2, #24
   11c38:	ldr	r2, [r2]
   11c3c:	ldr	r1, [pc, #52]	; 11c78 <__assert_fail@plt+0x2f0>
   11c40:	mov	r0, r4
   11c44:	bl	11910 <vsnprintf@plt>
   11c48:	mov	r0, r4
   11c4c:	bl	117b4 <strlen@plt>
   11c50:	add	r2, r5, r0
   11c54:	add	r1, sp, #4
   11c58:	mov	r0, #2
   11c5c:	bl	11814 <write@plt>
   11c60:	add	sp, sp, #8192	; 0x2000
   11c64:	add	sp, sp, #12
   11c68:	pop	{r4, r5, lr}
   11c6c:	add	sp, sp, #16
   11c70:	bx	lr
   11c74:	andeq	fp, r2, ip, lsr r5
   11c78:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11c7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c80:	mov	r9, r0
   11c84:	mov	r0, #100	; 0x64
   11c88:	bl	14e9c <argp_parse@@Base+0x182c>
   11c8c:	subs	r6, r0, #0
   11c90:	movne	r4, r6
   11c94:	movne	r5, #100	; 0x64
   11c98:	movne	r8, #1
   11c9c:	movne	r7, #0
   11ca0:	bne	11cfc <__assert_fail@plt+0x374>
   11ca4:	mov	r1, r9
   11ca8:	ldr	r0, [pc, #164]	; 11d54 <__assert_fail@plt+0x3cc>
   11cac:	bl	11be0 <__assert_fail@plt+0x258>
   11cb0:	mov	r0, #1
   11cb4:	bl	1179c <exit@plt>
   11cb8:	bne	11cd0 <__assert_fail@plt+0x348>
   11cbc:	mov	r1, r9
   11cc0:	ldr	r0, [pc, #144]	; 11d58 <__assert_fail@plt+0x3d0>
   11cc4:	bl	11be0 <__assert_fail@plt+0x258>
   11cc8:	mov	r0, #1
   11ccc:	bl	1179c <exit@plt>
   11cd0:	mov	r0, r9
   11cd4:	bl	116d0 <perror@plt>
   11cd8:	b	11cc8 <__assert_fail@plt+0x340>
   11cdc:	mov	r1, r9
   11ce0:	ldr	r0, [pc, #108]	; 11d54 <__assert_fail@plt+0x3cc>
   11ce4:	bl	11be0 <__assert_fail@plt+0x258>
   11ce8:	mov	r0, #1
   11cec:	bl	1179c <exit@plt>
   11cf0:	ldrb	r3, [r4, #-1]
   11cf4:	cmp	r3, #0
   11cf8:	beq	11d4c <__assert_fail@plt+0x3c4>
   11cfc:	mov	r2, r8
   11d00:	mov	r1, r4
   11d04:	mov	r0, r7
   11d08:	bl	115a4 <read@plt>
   11d0c:	cmp	r0, #0
   11d10:	ble	11cb8 <__assert_fail@plt+0x330>
   11d14:	add	r4, r4, r0
   11d18:	add	r3, r6, r5
   11d1c:	sub	r3, r3, r4
   11d20:	cmp	r3, r5, lsr #3
   11d24:	bge	11cf0 <__assert_fail@plt+0x368>
   11d28:	sub	r4, r4, r6
   11d2c:	lsl	r5, r5, #1
   11d30:	mov	r1, r5
   11d34:	mov	r0, r6
   11d38:	bl	14ecc <argp_parse@@Base+0x185c>
   11d3c:	subs	r6, r0, #0
   11d40:	beq	11cdc <__assert_fail@plt+0x354>
   11d44:	add	r4, r6, r4
   11d48:	b	11cf0 <__assert_fail@plt+0x368>
   11d4c:	mov	r0, r6
   11d50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d54:	andeq	r9, r1, r0, ror r9
   11d58:	andeq	r9, r1, ip, lsl #19
   11d5c:	push	{r4, lr}
   11d60:	mov	r4, r0
   11d64:	bl	117b4 <strlen@plt>
   11d68:	adds	r3, r4, r0
   11d6c:	bcs	11db0 <__assert_fail@plt+0x428>
   11d70:	mov	ip, #0
   11d74:	mov	r0, ip
   11d78:	b	11d84 <__assert_fail@plt+0x3fc>
   11d7c:	cmp	r4, r3
   11d80:	bhi	11dac <__assert_fail@plt+0x424>
   11d84:	mov	r2, r3
   11d88:	sub	r3, r3, #1
   11d8c:	ldrb	r1, [r2]
   11d90:	cmp	r1, #46	; 0x2e
   11d94:	bne	11d7c <__assert_fail@plt+0x3f4>
   11d98:	add	ip, ip, #1
   11d9c:	cmp	ip, #2
   11da0:	beq	11db8 <__assert_fail@plt+0x430>
   11da4:	mov	r0, r2
   11da8:	b	11d7c <__assert_fail@plt+0x3f4>
   11dac:	pop	{r4, pc}
   11db0:	mov	r0, #0
   11db4:	pop	{r4, pc}
   11db8:	mov	r0, r2
   11dbc:	pop	{r4, pc}
   11dc0:	push	{r4, r5, r6, lr}
   11dc4:	mov	r6, r0
   11dc8:	bl	12f38 <__assert_fail@plt+0x15b0>
   11dcc:	subs	r5, r0, #0
   11dd0:	beq	11e24 <__assert_fail@plt+0x49c>
   11dd4:	mov	r0, r5
   11dd8:	bl	11d5c <__assert_fail@plt+0x3d4>
   11ddc:	mov	r4, r0
   11de0:	mov	r0, r6
   11de4:	bl	11d5c <__assert_fail@plt+0x3d4>
   11de8:	mov	r1, r0
   11dec:	cmp	r0, #0
   11df0:	cmpne	r4, #0
   11df4:	moveq	r0, #1
   11df8:	movne	r0, #0
   11dfc:	beq	11e10 <__assert_fail@plt+0x488>
   11e00:	mov	r0, r4
   11e04:	bl	116b8 <strcasecmp@plt>
   11e08:	clz	r0, r0
   11e0c:	lsr	r0, r0, #5
   11e10:	mov	r4, r0
   11e14:	mov	r0, r5
   11e18:	bl	14264 <argp_parse@@Base+0xbf4>
   11e1c:	mov	r0, r4
   11e20:	pop	{r4, r5, r6, pc}
   11e24:	mov	r4, #0
   11e28:	b	11e1c <__assert_fail@plt+0x494>
   11e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e30:	sub	sp, sp, #20480	; 0x5000
   11e34:	sub	sp, sp, #68	; 0x44
   11e38:	mov	r6, r0
   11e3c:	mov	r5, r1
   11e40:	mov	r9, r2
   11e44:	mov	r3, #1
   11e48:	add	r2, sp, #20224	; 0x4f00
   11e4c:	add	r2, r2, #20
   11e50:	str	r3, [r2]
   11e54:	mov	r0, #70	; 0x46
   11e58:	bl	11670 <sysconf@plt>
   11e5c:	cmp	r0, #0
   11e60:	movle	r0, #1024	; 0x400
   11e64:	str	r0, [sp, #20]
   11e68:	bl	1487c <argp_parse@@Base+0x120c>
   11e6c:	str	r0, [sp, #24]
   11e70:	mov	r1, #0
   11e74:	mov	r0, #2
   11e78:	bl	1161c <signal@plt>
   11e7c:	mov	r1, #0
   11e80:	mov	r0, #3
   11e84:	bl	1161c <signal@plt>
   11e88:	mov	r1, #0
   11e8c:	mov	r0, #15
   11e90:	bl	1161c <signal@plt>
   11e94:	mov	r3, #3
   11e98:	str	r3, [sp, #8]
   11e9c:	mov	r3, #8
   11ea0:	str	r3, [sp, #4]
   11ea4:	add	r3, sp, #20224	; 0x4f00
   11ea8:	add	r3, r3, #12
   11eac:	str	r3, [sp]
   11eb0:	mov	r3, #46	; 0x2e
   11eb4:	add	r2, sp, #19968	; 0x4e00
   11eb8:	add	r2, r2, #220	; 0xdc
   11ebc:	mov	r1, r9
   11ec0:	mov	r0, r5
   11ec4:	bl	11880 <getnameinfo@plt>
   11ec8:	subs	fp, r0, #0
   11ecc:	bne	12044 <__assert_fail@plt+0x6bc>
   11ed0:	mov	r2, #10
   11ed4:	mov	r1, #0
   11ed8:	add	r0, sp, #20224	; 0x4f00
   11edc:	add	r0, r0, #12
   11ee0:	bl	11580 <strtol@plt>
   11ee4:	uxth	r8, r0
   11ee8:	ldr	r3, [pc, #3544]	; 12cc8 <__assert_fail@plt+0x1340>
   11eec:	str	r3, [sp, #36]	; 0x24
   11ef0:	ldr	r0, [pc, #3540]	; 12ccc <__assert_fail@plt+0x1344>
   11ef4:	bl	115b0 <getprotobyname@plt>
   11ef8:	cmp	r0, #0
   11efc:	ldrne	fp, [r0, #8]
   11f00:	add	r3, sp, #36	; 0x24
   11f04:	str	r3, [sp]
   11f08:	add	r3, sp, #40	; 0x28
   11f0c:	mov	r2, #4
   11f10:	mov	r1, fp
   11f14:	mov	r0, r6
   11f18:	bl	116e8 <getsockopt@plt>
   11f1c:	cmp	r0, #0
   11f20:	bne	11fe0 <__assert_fail@plt+0x658>
   11f24:	ldr	r3, [sp, #36]	; 0x24
   11f28:	cmp	r3, #0
   11f2c:	beq	11fe0 <__assert_fail@plt+0x658>
   11f30:	add	r3, sp, #2880	; 0xb40
   11f34:	sub	r7, r3, #108	; 0x6c
   11f38:	add	r4, sp, #40	; 0x28
   11f3c:	ldr	sl, [pc, #3468]	; 12cd0 <__assert_fail@plt+0x1348>
   11f40:	ldrb	r2, [r4]
   11f44:	mov	r1, sl
   11f48:	mov	r0, r7
   11f4c:	bl	118ec <sprintf@plt>
   11f50:	add	r7, r7, #3
   11f54:	ldrb	r3, [r4]
   11f58:	cmp	r3, #131	; 0x83
   11f5c:	cmpne	r3, #137	; 0x89
   11f60:	beq	12064 <__assert_fail@plt+0x6dc>
   11f64:	cmp	r3, #0
   11f68:	beq	11fa0 <__assert_fail@plt+0x618>
   11f6c:	cmp	r3, #1
   11f70:	addeq	r4, r4, #1
   11f74:	ldreq	r3, [sp, #36]	; 0x24
   11f78:	subeq	r3, r3, #1
   11f7c:	streq	r3, [sp, #36]	; 0x24
   11f80:	ldrbne	r2, [r4, #1]
   11f84:	ldrne	r3, [sp, #36]	; 0x24
   11f88:	subne	r3, r3, r2
   11f8c:	strne	r3, [sp, #36]	; 0x24
   11f90:	addne	r4, r4, r2
   11f94:	ldr	r3, [sp, #36]	; 0x24
   11f98:	cmp	r3, #0
   11f9c:	bne	11f40 <__assert_fail@plt+0x5b8>
   11fa0:	add	r3, sp, #2880	; 0xb40
   11fa4:	sub	r3, r3, #108	; 0x6c
   11fa8:	add	r2, sp, #19968	; 0x4e00
   11fac:	add	r2, r2, #220	; 0xdc
   11fb0:	ldr	r1, [pc, #3356]	; 12cd4 <__assert_fail@plt+0x134c>
   11fb4:	mov	r0, #5
   11fb8:	bl	118c8 <syslog@plt>
   11fbc:	ldr	r3, [sp, #36]	; 0x24
   11fc0:	str	r3, [sp]
   11fc4:	mov	r3, #0
   11fc8:	mov	r2, #4
   11fcc:	mov	r1, fp
   11fd0:	mov	r0, r6
   11fd4:	bl	1158c <setsockopt@plt>
   11fd8:	cmp	r0, #0
   11fdc:	bne	12080 <__assert_fail@plt+0x6f8>
   11fe0:	sub	r8, r8, #512	; 0x200
   11fe4:	uxth	r8, r8
   11fe8:	cmp	r8, #512	; 0x200
   11fec:	bcs	12094 <__assert_fail@plt+0x70c>
   11ff0:	mov	r0, #60	; 0x3c
   11ff4:	bl	11664 <alarm@plt>
   11ff8:	mov	r4, #0
   11ffc:	add	r3, sp, #2880	; 0xb40
   12000:	sub	r3, r3, #108	; 0x6c
   12004:	str	r3, [sp, #16]
   12008:	mov	r7, #1
   1200c:	mov	r2, r7
   12010:	ldr	r1, [sp, #16]
   12014:	mov	r0, r6
   12018:	bl	115a4 <read@plt>
   1201c:	cmp	r0, #1
   12020:	bne	120b8 <__assert_fail@plt+0x730>
   12024:	ldrb	r3, [sp, #2772]	; 0xad4
   12028:	cmp	r3, #0
   1202c:	beq	120e4 <__assert_fail@plt+0x75c>
   12030:	add	r4, r4, r4, lsl #2
   12034:	sub	r3, r3, #48	; 0x30
   12038:	add	r3, r3, r4, lsl #1
   1203c:	uxth	r4, r3
   12040:	b	1200c <__assert_fail@plt+0x684>
   12044:	mov	r0, fp
   12048:	bl	115ec <gai_strerror@plt>
   1204c:	mov	r2, r0
   12050:	ldr	r1, [pc, #3200]	; 12cd8 <__assert_fail@plt+0x1350>
   12054:	mov	r0, #4
   12058:	bl	118c8 <syslog@plt>
   1205c:	mov	r0, #1
   12060:	bl	1179c <exit@plt>
   12064:	add	r2, sp, #19968	; 0x4e00
   12068:	add	r2, r2, #220	; 0xdc
   1206c:	ldr	r1, [pc, #3176]	; 12cdc <__assert_fail@plt+0x1354>
   12070:	mov	r0, #5
   12074:	bl	118c8 <syslog@plt>
   12078:	mov	r0, #1
   1207c:	bl	1179c <exit@plt>
   12080:	ldr	r1, [pc, #3160]	; 12ce0 <__assert_fail@plt+0x1358>
   12084:	mov	r0, #3
   12088:	bl	118c8 <syslog@plt>
   1208c:	mov	r0, #1
   12090:	bl	1179c <exit@plt>
   12094:	add	r3, sp, #20224	; 0x4f00
   12098:	add	r3, r3, #12
   1209c:	add	r2, sp, #19968	; 0x4e00
   120a0:	add	r2, r2, #220	; 0xdc
   120a4:	ldr	r1, [pc, #3128]	; 12ce4 <__assert_fail@plt+0x135c>
   120a8:	mov	r0, #37	; 0x25
   120ac:	bl	118c8 <syslog@plt>
   120b0:	mov	r0, #1
   120b4:	bl	1179c <exit@plt>
   120b8:	cmp	r0, #0
   120bc:	blt	120d4 <__assert_fail@plt+0x74c>
   120c0:	mov	r1, #2
   120c4:	mov	r0, r6
   120c8:	bl	1185c <shutdown@plt>
   120cc:	mov	r0, #1
   120d0:	bl	1179c <exit@plt>
   120d4:	ldr	r1, [pc, #3084]	; 12ce8 <__assert_fail@plt+0x1360>
   120d8:	mov	r0, #5
   120dc:	bl	118c8 <syslog@plt>
   120e0:	b	120c0 <__assert_fail@plt+0x738>
   120e4:	mov	r0, #0
   120e8:	bl	11664 <alarm@plt>
   120ec:	cmp	r4, #0
   120f0:	streq	r6, [sp, #28]
   120f4:	bne	121d4 <__assert_fail@plt+0x84c>
   120f8:	cmp	r6, #0
   120fc:	bne	12268 <__assert_fail@plt+0x8e0>
   12100:	mov	r3, #8
   12104:	str	r3, [sp, #8]
   12108:	mov	r3, #0
   1210c:	str	r3, [sp, #4]
   12110:	str	r3, [sp]
   12114:	ldr	r3, [pc, #3024]	; 12cec <__assert_fail@plt+0x1364>
   12118:	add	r2, sp, #18944	; 0x4a00
   1211c:	add	r2, r2, #224	; 0xe0
   12120:	sub	r2, r2, #8
   12124:	mov	r1, r9
   12128:	mov	r0, r5
   1212c:	bl	11880 <getnameinfo@plt>
   12130:	cmp	r0, #0
   12134:	bne	1239c <__assert_fail@plt+0xa14>
   12138:	ldr	r3, [pc, #2992]	; 12cf0 <__assert_fail@plt+0x1368>
   1213c:	ldr	r3, [r3]
   12140:	cmp	r3, #0
   12144:	bne	12160 <__assert_fail@plt+0x7d8>
   12148:	add	r3, sp, #18944	; 0x4a00
   1214c:	add	r3, r3, #224	; 0xe0
   12150:	sub	r0, r3, #8
   12154:	bl	11dc0 <__assert_fail@plt+0x438>
   12158:	cmp	r0, #0
   1215c:	beq	12cb4 <__assert_fail@plt+0x132c>
   12160:	mov	r2, #32
   12164:	mov	r1, #0
   12168:	add	r0, sp, #40	; 0x28
   1216c:	bl	11808 <memset@plt>
   12170:	ldrh	r3, [r5]
   12174:	str	r3, [sp, #44]	; 0x2c
   12178:	mov	r3, #1
   1217c:	str	r3, [sp, #48]	; 0x30
   12180:	add	r3, sp, #36	; 0x24
   12184:	add	r2, sp, #40	; 0x28
   12188:	mov	r1, #0
   1218c:	add	r0, sp, #18944	; 0x4a00
   12190:	add	r0, r0, #224	; 0xe0
   12194:	sub	r0, r0, #8
   12198:	bl	11940 <getaddrinfo@plt>
   1219c:	cmp	r0, #0
   121a0:	bne	12290 <__assert_fail@plt+0x908>
   121a4:	ldr	r6, [sp, #36]	; 0x24
   121a8:	cmp	r6, #0
   121ac:	beq	12c58 <__assert_fail@plt+0x12d0>
   121b0:	mov	r7, #0
   121b4:	add	r8, sp, #2784	; 0xae0
   121b8:	sub	r8, r8, #8
   121bc:	mov	sl, #42	; 0x2a
   121c0:	add	r3, sp, #2880	; 0xb40
   121c4:	sub	r3, r3, #108	; 0x6c
   121c8:	str	r3, [sp, #16]
   121cc:	mov	r9, #1
   121d0:	b	12324 <__assert_fail@plt+0x99c>
   121d4:	ldr	r3, [pc, #2840]	; 12cf4 <__assert_fail@plt+0x136c>
   121d8:	str	r3, [sp, #2772]	; 0xad4
   121dc:	ldrh	r1, [r5]
   121e0:	add	r3, sp, #2880	; 0xb40
   121e4:	sub	r0, r3, #108	; 0x6c
   121e8:	bl	117a8 <rresvport_af@plt>
   121ec:	subs	r3, r0, #0
   121f0:	str	r3, [sp, #28]
   121f4:	blt	12240 <__assert_fail@plt+0x8b8>
   121f8:	sub	r3, r4, #512	; 0x200
   121fc:	uxth	r3, r3
   12200:	cmp	r3, #512	; 0x200
   12204:	bcs	12254 <__assert_fail@plt+0x8cc>
   12208:	rev16	r3, r4
   1220c:	strh	r3, [r5, #2]
   12210:	mov	r2, r9
   12214:	mov	r1, r5
   12218:	ldr	r0, [sp, #28]
   1221c:	bl	1197c <connect@plt>
   12220:	cmp	r0, #0
   12224:	bge	120f8 <__assert_fail@plt+0x770>
   12228:	mov	r2, r4
   1222c:	ldr	r1, [pc, #2756]	; 12cf8 <__assert_fail@plt+0x1370>
   12230:	mov	r0, #6
   12234:	bl	118c8 <syslog@plt>
   12238:	mov	r0, #1
   1223c:	bl	1179c <exit@plt>
   12240:	ldr	r1, [pc, #2740]	; 12cfc <__assert_fail@plt+0x1374>
   12244:	mov	r0, #3
   12248:	bl	118c8 <syslog@plt>
   1224c:	mov	r0, #1
   12250:	bl	1179c <exit@plt>
   12254:	ldr	r1, [pc, #2724]	; 12d00 <__assert_fail@plt+0x1378>
   12258:	mov	r0, #3
   1225c:	bl	118c8 <syslog@plt>
   12260:	mov	r0, #1
   12264:	bl	1179c <exit@plt>
   12268:	mov	r1, #0
   1226c:	mov	r0, r6
   12270:	bl	1167c <dup2@plt>
   12274:	mov	r1, #1
   12278:	mov	r0, r6
   1227c:	bl	1167c <dup2@plt>
   12280:	mov	r1, #2
   12284:	mov	r0, r6
   12288:	bl	1167c <dup2@plt>
   1228c:	b	12100 <__assert_fail@plt+0x778>
   12290:	add	r3, sp, #18944	; 0x4a00
   12294:	add	r3, r3, #224	; 0xe0
   12298:	sub	r2, r3, #8
   1229c:	ldr	r1, [pc, #2656]	; 12d04 <__assert_fail@plt+0x137c>
   122a0:	mov	r0, #6
   122a4:	bl	118c8 <syslog@plt>
   122a8:	ldr	fp, [pc, #2648]	; 12d08 <__assert_fail@plt+0x1380>
   122ac:	add	r7, sp, #19968	; 0x4e00
   122b0:	add	r7, r7, #220	; 0xdc
   122b4:	ldr	r0, [pc, #2640]	; 12d0c <__assert_fail@plt+0x1384>
   122b8:	bl	11c7c <__assert_fail@plt+0x2f4>
   122bc:	str	r0, [sp, #16]
   122c0:	ldr	r0, [pc, #2632]	; 12d10 <__assert_fail@plt+0x1388>
   122c4:	bl	11c7c <__assert_fail@plt+0x2f4>
   122c8:	mov	r6, r0
   122cc:	ldr	r0, [pc, #2624]	; 12d14 <__assert_fail@plt+0x138c>
   122d0:	bl	11c7c <__assert_fail@plt+0x2f4>
   122d4:	mov	r8, r0
   122d8:	bl	117e4 <setpwent@plt>
   122dc:	add	r3, sp, #20480	; 0x5000
   122e0:	add	r3, r3, #60	; 0x3c
   122e4:	str	r3, [sp]
   122e8:	ldr	r3, [sp, #20]
   122ec:	ldr	r2, [sp, #24]
   122f0:	add	r1, sp, #20480	; 0x5000
   122f4:	add	r1, r1, #32
   122f8:	mov	r0, r6
   122fc:	bl	117cc <getpwnam_r@plt>
   12300:	cmp	r0, #0
   12304:	bne	127b4 <__assert_fail@plt+0xe2c>
   12308:	add	r3, sp, #18944	; 0x4a00
   1230c:	add	r3, r3, #224	; 0xe0
   12310:	sub	sl, r3, #8
   12314:	b	12410 <__assert_fail@plt+0xa88>
   12318:	ldr	r6, [r6, #28]
   1231c:	cmp	r6, #0
   12320:	beq	12c58 <__assert_fail@plt+0x12d0>
   12324:	str	r7, [sp, #2772]	; 0xad4
   12328:	mov	r2, sl
   1232c:	mov	r1, r7
   12330:	mov	r0, r8
   12334:	bl	11808 <memset@plt>
   12338:	ldr	r1, [r6, #16]
   1233c:	ldr	r0, [r6, #20]
   12340:	str	r9, [sp, #8]
   12344:	str	r7, [sp, #4]
   12348:	str	r7, [sp]
   1234c:	mov	r3, #46	; 0x2e
   12350:	ldr	r2, [sp, #16]
   12354:	bl	11880 <getnameinfo@plt>
   12358:	cmp	r0, #0
   1235c:	bne	12318 <__assert_fail@plt+0x990>
   12360:	ldr	r1, [sp, #16]
   12364:	add	r0, sp, #19968	; 0x4e00
   12368:	add	r0, r0, #220	; 0xdc
   1236c:	bl	11574 <strcmp@plt>
   12370:	cmp	r0, #0
   12374:	bne	12318 <__assert_fail@plt+0x990>
   12378:	ldr	r0, [sp, #36]	; 0x24
   1237c:	bl	11934 <freeaddrinfo@plt>
   12380:	cmp	r6, #0
   12384:	beq	12c60 <__assert_fail@plt+0x12d8>
   12388:	mov	fp, #0
   1238c:	add	r3, sp, #18944	; 0x4a00
   12390:	add	r3, r3, #224	; 0xe0
   12394:	sub	r7, r3, #8
   12398:	b	122b4 <__assert_fail@plt+0x92c>
   1239c:	ldr	r3, [pc, #2420]	; 12d18 <__assert_fail@plt+0x1390>
   123a0:	ldr	r3, [r3]
   123a4:	cmp	r3, #0
   123a8:	addeq	sl, sp, #19968	; 0x4e00
   123ac:	addeq	sl, sl, #220	; 0xdc
   123b0:	moveq	r7, sl
   123b4:	bne	12790 <__assert_fail@plt+0xe08>
   123b8:	ldr	r0, [pc, #2380]	; 12d0c <__assert_fail@plt+0x1384>
   123bc:	bl	11c7c <__assert_fail@plt+0x2f4>
   123c0:	str	r0, [sp, #16]
   123c4:	ldr	r0, [pc, #2372]	; 12d10 <__assert_fail@plt+0x1388>
   123c8:	bl	11c7c <__assert_fail@plt+0x2f4>
   123cc:	mov	r6, r0
   123d0:	ldr	r0, [pc, #2364]	; 12d14 <__assert_fail@plt+0x138c>
   123d4:	bl	11c7c <__assert_fail@plt+0x2f4>
   123d8:	mov	r8, r0
   123dc:	bl	117e4 <setpwent@plt>
   123e0:	add	r3, sp, #20480	; 0x5000
   123e4:	add	r3, r3, #60	; 0x3c
   123e8:	str	r3, [sp]
   123ec:	ldr	r3, [sp, #20]
   123f0:	ldr	r2, [sp, #24]
   123f4:	add	r1, sp, #20480	; 0x5000
   123f8:	add	r1, r1, #32
   123fc:	mov	r0, r6
   12400:	bl	117cc <getpwnam_r@plt>
   12404:	cmp	r0, #0
   12408:	bne	12c90 <__assert_fail@plt+0x1308>
   1240c:	mov	fp, #0
   12410:	add	r3, sp, #20480	; 0x5000
   12414:	add	r3, r3, #60	; 0x3c
   12418:	ldr	r3, [r3]
   1241c:	cmp	r3, #0
   12420:	beq	127c0 <__assert_fail@plt+0xe38>
   12424:	ldr	r0, [r3]
   12428:	bl	115bc <getspnam@plt>
   1242c:	subs	r9, r0, #0
   12430:	beq	127ec <__assert_fail@plt+0xe64>
   12434:	ldr	r1, [r9, #4]
   12438:	ldrb	r3, [r1]
   1243c:	cmp	r3, #33	; 0x21
   12440:	beq	12824 <__assert_fail@plt+0xe9c>
   12444:	mov	r2, #4
   12448:	ldr	r0, [pc, #2252]	; 12d1c <__assert_fail@plt+0x1394>
   1244c:	bl	11958 <strncmp@plt>
   12450:	cmp	r0, #0
   12454:	beq	12824 <__assert_fail@plt+0xe9c>
   12458:	add	r3, sp, #2880	; 0xb40
   1245c:	sub	r0, r3, #108	; 0x6c
   12460:	bl	11628 <time@plt>
   12464:	ldr	r3, [r9, #28]
   12468:	cmp	r3, #0
   1246c:	ble	1248c <__assert_fail@plt+0xb04>
   12470:	ldr	r1, [pc, #2216]	; 12d20 <__assert_fail@plt+0x1398>
   12474:	mul	r1, r1, r3
   12478:	ldr	r0, [sp, #2772]	; 0xad4
   1247c:	bl	11820 <difftime@plt>
   12480:	vcmpe.f64	d0, #0.0
   12484:	vmrs	APSR_nzcv, fpscr
   12488:	bgt	12850 <__assert_fail@plt+0xec8>
   1248c:	ldrh	r2, [r5]
   12490:	cmp	r2, #10
   12494:	addeq	r0, r5, #8
   12498:	addne	r0, r5, #4
   1249c:	cmp	fp, #0
   124a0:	bne	128a0 <__assert_fail@plt+0xf18>
   124a4:	add	r3, sp, #20480	; 0x5000
   124a8:	add	r3, r3, #60	; 0x3c
   124ac:	ldr	r1, [r3]
   124b0:	ldr	r3, [r1, #4]
   124b4:	cmp	r3, #0
   124b8:	beq	124c8 <__assert_fail@plt+0xb40>
   124bc:	ldrb	r3, [r3]
   124c0:	cmp	r3, #0
   124c4:	bne	1287c <__assert_fail@plt+0xef4>
   124c8:	add	r3, sp, #20480	; 0x5000
   124cc:	add	r3, r3, #60	; 0x3c
   124d0:	ldr	r3, [r3]
   124d4:	ldr	r3, [r3, #8]
   124d8:	cmp	r3, #0
   124dc:	beq	124f4 <__assert_fail@plt+0xb6c>
   124e0:	mov	r1, #0
   124e4:	ldr	r0, [pc, #2104]	; 12d24 <__assert_fail@plt+0x139c>
   124e8:	bl	11838 <access@plt>
   124ec:	cmp	r0, #0
   124f0:	beq	128f4 <__assert_fail@plt+0xf6c>
   124f4:	mov	r2, #1
   124f8:	ldr	r1, [pc, #2088]	; 12d28 <__assert_fail@plt+0x13a0>
   124fc:	mov	r0, #2
   12500:	bl	11814 <write@plt>
   12504:	cmp	r0, #0
   12508:	blt	12904 <__assert_fail@plt+0xf7c>
   1250c:	mov	r2, #1
   12510:	ldr	r3, [pc, #2068]	; 12d2c <__assert_fail@plt+0x13a4>
   12514:	str	r2, [r3]
   12518:	cmp	r4, #0
   1251c:	beq	12588 <__assert_fail@plt+0xc00>
   12520:	add	r0, sp, #20224	; 0x4f00
   12524:	add	r0, r0, #24
   12528:	bl	11850 <pipe@plt>
   1252c:	cmp	r0, #0
   12530:	blt	12914 <__assert_fail@plt+0xf8c>
   12534:	bl	11874 <fork@plt>
   12538:	mov	r4, r0
   1253c:	cmn	r0, #1
   12540:	beq	12924 <__assert_fail@plt+0xf9c>
   12544:	cmp	r0, #0
   12548:	bne	12934 <__assert_fail@plt+0xfac>
   1254c:	ldr	r0, [sp, #28]
   12550:	bl	11970 <close@plt>
   12554:	add	r3, sp, #20224	; 0x4f00
   12558:	add	r3, r3, #24
   1255c:	ldr	r0, [r3]
   12560:	bl	11970 <close@plt>
   12564:	mov	r1, #2
   12568:	add	r3, sp, #20224	; 0x4f00
   1256c:	add	r3, r3, #28
   12570:	ldr	r0, [r3]
   12574:	bl	1167c <dup2@plt>
   12578:	add	r3, sp, #20224	; 0x4f00
   1257c:	add	r3, r3, #28
   12580:	ldr	r0, [r3]
   12584:	bl	11970 <close@plt>
   12588:	bl	11790 <getpid@plt>
   1258c:	mov	r1, r0
   12590:	mov	r0, #0
   12594:	bl	118e0 <setpgid@plt>
   12598:	add	r3, sp, #20480	; 0x5000
   1259c:	add	r3, r3, #60	; 0x3c
   125a0:	ldr	r3, [r3]
   125a4:	ldr	r2, [r3, #24]
   125a8:	ldrb	r2, [r2]
   125ac:	cmp	r2, #0
   125b0:	ldreq	r2, [pc, #1912]	; 12d30 <__assert_fail@plt+0x13a8>
   125b4:	streq	r2, [r3, #24]
   125b8:	ldr	r0, [r3, #12]
   125bc:	bl	11844 <setegid@plt>
   125c0:	add	r3, sp, #20480	; 0x5000
   125c4:	add	r3, r3, #60	; 0x3c
   125c8:	ldr	r3, [r3]
   125cc:	ldr	r0, [r3, #12]
   125d0:	bl	11730 <setgid@plt>
   125d4:	add	r3, sp, #20480	; 0x5000
   125d8:	add	r3, r3, #60	; 0x3c
   125dc:	ldr	r3, [r3]
   125e0:	ldr	r1, [r3, #12]
   125e4:	ldr	r0, [r3]
   125e8:	bl	116a0 <initgroups@plt>
   125ec:	add	r3, sp, #20480	; 0x5000
   125f0:	add	r3, r3, #60	; 0x3c
   125f4:	ldr	r3, [r3]
   125f8:	ldr	r0, [r3, #8]
   125fc:	bl	118d4 <setuid@plt>
   12600:	add	r3, sp, #20480	; 0x5000
   12604:	add	r3, r3, #60	; 0x3c
   12608:	ldr	r3, [r3]
   1260c:	ldr	r0, [r3, #20]
   12610:	bl	116ac <chdir@plt>
   12614:	cmp	r0, #0
   12618:	blt	12c04 <__assert_fail@plt+0x127c>
   1261c:	add	r3, sp, #20480	; 0x5000
   12620:	add	r3, r3, #60	; 0x3c
   12624:	ldr	r5, [r3]
   12628:	ldr	r4, [pc, #1796]	; 12d34 <__assert_fail@plt+0x13ac>
   1262c:	mov	r2, #255	; 0xff
   12630:	ldr	r1, [r5, #20]
   12634:	add	r0, r4, #4
   12638:	bl	1194c <strncat@plt>
   1263c:	add	r9, r4, #268	; 0x10c
   12640:	mov	r0, r9
   12644:	bl	117b4 <strlen@plt>
   12648:	mov	lr, r0
   1264c:	add	ip, r9, r0
   12650:	ldr	r3, [pc, #1760]	; 12d38 <__assert_fail@plt+0x13b0>
   12654:	ldm	r3!, {r0, r1, r2}
   12658:	str	r0, [r9, lr]
   1265c:	str	r1, [ip, #4]
   12660:	str	r2, [ip, #8]
   12664:	ldrh	r3, [r3]
   12668:	strh	r3, [ip, #12]
   1266c:	mov	r2, #63	; 0x3f
   12670:	ldr	r1, [r5, #24]
   12674:	add	r0, r4, #288	; 0x120
   12678:	bl	1194c <strncat@plt>
   1267c:	mov	r2, #31
   12680:	ldr	r1, [r5]
   12684:	add	r0, r4, #360	; 0x168
   12688:	bl	1194c <strncat@plt>
   1268c:	mov	r2, #31
   12690:	ldr	r1, [r5]
   12694:	add	r0, r4, #400	; 0x190
   12698:	bl	1194c <strncat@plt>
   1269c:	mov	r2, #127	; 0x7f
   126a0:	mov	r1, r7
   126a4:	add	r0, r4, #444	; 0x1bc
   126a8:	bl	1194c <strncat@plt>
   126ac:	add	r4, r4, #580	; 0x244
   126b0:	ldr	r3, [pc, #1668]	; 12d3c <__assert_fail@plt+0x13b4>
   126b4:	str	r4, [r3]
   126b8:	ldr	r4, [r5, #24]
   126bc:	mov	r1, #47	; 0x2f
   126c0:	mov	r0, r4
   126c4:	bl	118a4 <strrchr@plt>
   126c8:	cmp	r0, #0
   126cc:	addne	r4, r0, #1
   126d0:	bl	1188c <endpwent@plt>
   126d4:	ldr	r3, [pc, #1636]	; 12d40 <__assert_fail@plt+0x13b8>
   126d8:	ldr	r3, [r3]
   126dc:	cmp	r3, #0
   126e0:	bne	126fc <__assert_fail@plt+0xd74>
   126e4:	add	r3, sp, #20480	; 0x5000
   126e8:	add	r3, r3, #60	; 0x3c
   126ec:	ldr	r3, [r3]
   126f0:	ldr	r3, [r3, #8]
   126f4:	cmp	r3, #0
   126f8:	bne	1271c <__assert_fail@plt+0xd94>
   126fc:	str	r8, [sp, #8]
   12700:	str	r6, [sp, #4]
   12704:	str	r7, [sp]
   12708:	ldr	r3, [sp, #16]
   1270c:	ldr	r2, [pc, #1584]	; 12d44 <__assert_fail@plt+0x13bc>
   12710:	ldr	r1, [pc, #1584]	; 12d48 <__assert_fail@plt+0x13c0>
   12714:	mov	r0, #38	; 0x26
   12718:	bl	118c8 <syslog@plt>
   1271c:	add	r3, sp, #20480	; 0x5000
   12720:	add	r3, r3, #60	; 0x3c
   12724:	ldr	r3, [r3]
   12728:	ldr	r0, [r3, #24]
   1272c:	mov	r3, #0
   12730:	str	r3, [sp]
   12734:	mov	r3, r8
   12738:	ldr	r2, [pc, #1548]	; 12d4c <__assert_fail@plt+0x13c4>
   1273c:	mov	r1, r4
   12740:	bl	11898 <execl@plt>
   12744:	add	r3, sp, #20480	; 0x5000
   12748:	add	r3, r3, #60	; 0x3c
   1274c:	ldr	r3, [r3]
   12750:	ldr	r2, [r3]
   12754:	ldr	r1, [pc, #1524]	; 12d50 <__assert_fail@plt+0x13c8>
   12758:	mov	r0, #3
   1275c:	bl	118c8 <syslog@plt>
   12760:	bl	117f0 <__errno_location@plt>
   12764:	add	r3, sp, #20480	; 0x5000
   12768:	add	r3, r3, #60	; 0x3c
   1276c:	ldr	r3, [r3]
   12770:	ldr	r3, [r3, #24]
   12774:	ldr	r2, [pc, #1496]	; 12d54 <__assert_fail@plt+0x13cc>
   12778:	ldr	r1, [r0]
   1277c:	mov	r0, #1
   12780:	bl	11700 <error@plt>
   12784:	add	sp, sp, #20480	; 0x5000
   12788:	add	sp, sp, #68	; 0x44
   1278c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12790:	add	r2, sp, #19968	; 0x4e00
   12794:	add	r2, r2, #220	; 0xdc
   12798:	ldr	r1, [pc, #1464]	; 12d58 <__assert_fail@plt+0x13d0>
   1279c:	mov	r0, #5
   127a0:	bl	118c8 <syslog@plt>
   127a4:	ldr	r0, [pc, #1456]	; 12d5c <__assert_fail@plt+0x13d4>
   127a8:	bl	11be0 <__assert_fail@plt+0x258>
   127ac:	mov	r0, #1
   127b0:	bl	1179c <exit@plt>
   127b4:	add	r3, sp, #18944	; 0x4a00
   127b8:	add	r3, r3, #224	; 0xe0
   127bc:	sub	sl, r3, #8
   127c0:	str	r8, [sp, #4]
   127c4:	str	r6, [sp]
   127c8:	mov	r3, r7
   127cc:	ldr	r2, [sp, #16]
   127d0:	ldr	r1, [pc, #1416]	; 12d60 <__assert_fail@plt+0x13d8>
   127d4:	mov	r0, #38	; 0x26
   127d8:	bl	118c8 <syslog@plt>
   127dc:	ldr	r3, [pc, #1408]	; 12d64 <__assert_fail@plt+0x13dc>
   127e0:	cmp	fp, #0
   127e4:	moveq	fp, r3
   127e8:	b	12810 <__assert_fail@plt+0xe88>
   127ec:	ldr	r1, [pc, #1396]	; 12d68 <__assert_fail@plt+0x13e0>
   127f0:	mov	r0, #35	; 0x23
   127f4:	bl	118c8 <syslog@plt>
   127f8:	ldr	r3, [pc, #1380]	; 12d64 <__assert_fail@plt+0x13dc>
   127fc:	cmp	fp, #0
   12800:	moveq	fp, r3
   12804:	ldr	r3, [pc, #1360]	; 12d5c <__assert_fail@plt+0x13d4>
   12808:	cmp	fp, #0
   1280c:	moveq	fp, r3
   12810:	mov	r1, sl
   12814:	mov	r0, fp
   12818:	bl	11be0 <__assert_fail@plt+0x258>
   1281c:	mov	r0, #1
   12820:	bl	1179c <exit@plt>
   12824:	str	r8, [sp, #4]
   12828:	str	r6, [sp]
   1282c:	mov	r3, r7
   12830:	ldr	r2, [sp, #16]
   12834:	ldr	r1, [pc, #1328]	; 12d6c <__assert_fail@plt+0x13e4>
   12838:	mov	r0, #38	; 0x26
   1283c:	bl	118c8 <syslog@plt>
   12840:	ldr	r3, [pc, #1300]	; 12d5c <__assert_fail@plt+0x13d4>
   12844:	cmp	fp, #0
   12848:	moveq	fp, r3
   1284c:	b	12804 <__assert_fail@plt+0xe7c>
   12850:	str	r8, [sp, #4]
   12854:	str	r6, [sp]
   12858:	mov	r3, r7
   1285c:	ldr	r2, [sp, #16]
   12860:	ldr	r1, [pc, #1288]	; 12d70 <__assert_fail@plt+0x13e8>
   12864:	mov	r0, #38	; 0x26
   12868:	bl	118c8 <syslog@plt>
   1286c:	ldr	r3, [pc, #1256]	; 12d5c <__assert_fail@plt+0x13d4>
   12870:	cmp	fp, #0
   12874:	moveq	fp, r3
   12878:	b	12804 <__assert_fail@plt+0xe7c>
   1287c:	ldr	r1, [r1, #8]
   12880:	str	r2, [sp]
   12884:	mov	r3, r6
   12888:	ldr	r2, [sp, #16]
   1288c:	clz	r1, r1
   12890:	lsr	r1, r1, #5
   12894:	bl	11724 <iruserok_af@plt>
   12898:	cmp	r0, #0
   1289c:	bge	124c8 <__assert_fail@plt+0xb40>
   128a0:	ldr	r3, [pc, #1228]	; 12d74 <__assert_fail@plt+0x13ec>
   128a4:	ldr	r3, [r3]
   128a8:	cmp	r3, #0
   128ac:	beq	128d4 <__assert_fail@plt+0xf4c>
   128b0:	str	r8, [sp, #8]
   128b4:	str	r3, [sp, #4]
   128b8:	str	r6, [sp]
   128bc:	mov	r3, r7
   128c0:	ldr	r2, [sp, #16]
   128c4:	ldr	r1, [pc, #1196]	; 12d78 <__assert_fail@plt+0x13f0>
   128c8:	mov	r0, #38	; 0x26
   128cc:	bl	118c8 <syslog@plt>
   128d0:	b	12804 <__assert_fail@plt+0xe7c>
   128d4:	str	r8, [sp, #4]
   128d8:	str	r6, [sp]
   128dc:	mov	r3, r7
   128e0:	ldr	r2, [sp, #16]
   128e4:	ldr	r1, [pc, #1168]	; 12d7c <__assert_fail@plt+0x13f4>
   128e8:	mov	r0, #38	; 0x26
   128ec:	bl	118c8 <syslog@plt>
   128f0:	b	12804 <__assert_fail@plt+0xe7c>
   128f4:	ldr	r0, [pc, #1156]	; 12d80 <__assert_fail@plt+0x13f8>
   128f8:	bl	11be0 <__assert_fail@plt+0x258>
   128fc:	mov	r0, #1
   12900:	bl	1179c <exit@plt>
   12904:	ldr	r0, [pc, #1144]	; 12d84 <__assert_fail@plt+0x13fc>
   12908:	bl	11be0 <__assert_fail@plt+0x258>
   1290c:	mov	r0, #1
   12910:	bl	1179c <exit@plt>
   12914:	ldr	r0, [pc, #1132]	; 12d88 <__assert_fail@plt+0x1400>
   12918:	bl	11be0 <__assert_fail@plt+0x258>
   1291c:	mov	r0, #1
   12920:	bl	1179c <exit@plt>
   12924:	ldr	r0, [pc, #1120]	; 12d8c <__assert_fail@plt+0x1404>
   12928:	bl	11be0 <__assert_fail@plt+0x258>
   1292c:	mov	r0, #1
   12930:	bl	1179c <exit@plt>
   12934:	mov	r0, #0
   12938:	bl	11970 <close@plt>
   1293c:	mov	r0, #1
   12940:	bl	11970 <close@plt>
   12944:	mov	r0, #2
   12948:	bl	11970 <close@plt>
   1294c:	add	r5, sp, #20480	; 0x5000
   12950:	add	r5, r5, #64	; 0x40
   12954:	ldr	r0, [r5, #-292]!	; 0xfffffedc
   12958:	bl	11970 <close@plt>
   1295c:	add	r2, sp, #20224	; 0x4f00
   12960:	add	r2, r2, #156	; 0x9c
   12964:	mov	r3, #0
   12968:	str	r3, [r5, #4]!
   1296c:	cmp	r2, r5
   12970:	bne	12968 <__assert_fail@plt+0xfe0>
   12974:	ldr	lr, [sp, #28]
   12978:	add	r5, lr, #31
   1297c:	cmp	lr, #0
   12980:	movge	r5, lr
   12984:	asr	r5, r5, #5
   12988:	asr	r3, lr, #31
   1298c:	lsr	r3, r3, #27
   12990:	add	r6, lr, r3
   12994:	and	r6, r6, #31
   12998:	sub	r6, r6, r3
   1299c:	mov	r1, #1
   129a0:	lsl	r6, r1, r6
   129a4:	add	r3, sp, #20480	; 0x5000
   129a8:	add	r3, r3, #64	; 0x40
   129ac:	add	r2, r3, r5, lsl #2
   129b0:	ldr	r3, [r2, #-288]	; 0xfffffee0
   129b4:	orr	r3, r3, r6
   129b8:	str	r3, [r2, #-288]	; 0xfffffee0
   129bc:	add	r3, sp, #20224	; 0x4f00
   129c0:	add	r3, r3, #24
   129c4:	ldr	r0, [r3]
   129c8:	add	r3, r0, #31
   129cc:	cmp	r0, #0
   129d0:	movge	r3, r0
   129d4:	asr	r3, r3, #5
   129d8:	add	r2, sp, #20480	; 0x5000
   129dc:	add	r2, r2, #64	; 0x40
   129e0:	add	r3, r2, r3, lsl #2
   129e4:	asr	r2, r0, #31
   129e8:	lsr	ip, r2, #27
   129ec:	add	r2, r0, ip
   129f0:	and	r2, r2, #31
   129f4:	sub	r2, r2, ip
   129f8:	ldr	ip, [r3, #-288]	; 0xfffffee0
   129fc:	orr	r2, ip, r1, lsl r2
   12a00:	str	r2, [r3, #-288]	; 0xfffffee0
   12a04:	cmp	lr, r0
   12a08:	movge	r9, lr
   12a0c:	movlt	r9, r0
   12a10:	add	r2, sp, #20224	; 0x4f00
   12a14:	add	r2, r2, #20
   12a18:	ldr	r1, [pc, #880]	; 12d90 <__assert_fail@plt+0x1408>
   12a1c:	bl	14374 <argp_parse@@Base+0xd04>
   12a20:	add	r9, r9, #1
   12a24:	add	r3, sp, #20480	; 0x5000
   12a28:	add	r3, r3, #64	; 0x40
   12a2c:	add	r5, r3, r5, lsl #2
   12a30:	add	r3, sp, #18944	; 0x4a00
   12a34:	add	r3, r3, #224	; 0xe0
   12a38:	sub	r8, r3, #9
   12a3c:	add	r3, sp, #11008	; 0x2b00
   12a40:	sub	r7, r3, #44	; 0x2c
   12a44:	mov	r2, #128	; 0x80
   12a48:	add	r1, sp, #20224	; 0x4f00
   12a4c:	add	r1, r1, #32
   12a50:	add	r0, sp, #20224	; 0x4f00
   12a54:	add	r0, r0, #160	; 0xa0
   12a58:	bl	11610 <memcpy@plt>
   12a5c:	mov	r2, #0
   12a60:	str	r2, [sp]
   12a64:	mov	r3, r2
   12a68:	add	r1, sp, #20224	; 0x4f00
   12a6c:	add	r1, r1, #160	; 0xa0
   12a70:	mov	r0, r9
   12a74:	bl	11640 <select@plt>
   12a78:	cmp	r0, #0
   12a7c:	blt	12b30 <__assert_fail@plt+0x11a8>
   12a80:	ldr	r3, [r5, #-160]	; 0xffffff60
   12a84:	tst	r6, r3
   12a88:	bne	12b38 <__assert_fail@plt+0x11b0>
   12a8c:	add	r3, sp, #20224	; 0x4f00
   12a90:	add	r3, r3, #24
   12a94:	ldr	sl, [r3]
   12a98:	add	r3, sl, #31
   12a9c:	cmp	sl, #0
   12aa0:	movge	r3, sl
   12aa4:	asr	r3, r3, #5
   12aa8:	add	r2, sp, #20480	; 0x5000
   12aac:	add	r2, r2, #64	; 0x40
   12ab0:	add	r3, r2, r3, lsl #2
   12ab4:	asr	r2, sl, #31
   12ab8:	lsr	r1, r2, #27
   12abc:	add	r2, sl, r1
   12ac0:	and	r2, r2, #31
   12ac4:	sub	r2, r2, r1
   12ac8:	ldr	r3, [r3, #-160]	; 0xffffff60
   12acc:	mov	r1, #1
   12ad0:	ands	r3, r3, r1, lsl r2
   12ad4:	bne	12b74 <__assert_fail@plt+0x11ec>
   12ad8:	ldr	r3, [r5, #-288]	; 0xfffffee0
   12adc:	tst	r6, r3
   12ae0:	bne	12a44 <__assert_fail@plt+0x10bc>
   12ae4:	add	r3, sp, #20224	; 0x4f00
   12ae8:	add	r3, r3, #24
   12aec:	ldr	r3, [r3]
   12af0:	add	r2, r3, #31
   12af4:	cmp	r3, #0
   12af8:	movge	r2, r3
   12afc:	asr	r2, r2, #5
   12b00:	add	r1, sp, #20480	; 0x5000
   12b04:	add	r1, r1, #64	; 0x40
   12b08:	add	r2, r1, r2, lsl #2
   12b0c:	asr	r1, r3, #31
   12b10:	lsr	r1, r1, #27
   12b14:	add	r3, r3, r1
   12b18:	and	r3, r3, #31
   12b1c:	sub	r3, r3, r1
   12b20:	ldr	r2, [r2, #-288]	; 0xfffffee0
   12b24:	mov	r1, #1
   12b28:	ands	r3, r2, r1, lsl r3
   12b2c:	bne	12a44 <__assert_fail@plt+0x10bc>
   12b30:	mov	r0, #0
   12b34:	bl	1179c <exit@plt>
   12b38:	mov	r2, #1
   12b3c:	mov	r1, r8
   12b40:	ldr	r0, [sp, #28]
   12b44:	bl	115a4 <read@plt>
   12b48:	cmp	r0, #0
   12b4c:	ldrle	r3, [r5, #-288]	; 0xfffffee0
   12b50:	bicle	r3, r3, r6
   12b54:	strle	r3, [r5, #-288]	; 0xfffffee0
   12b58:	ble	12a8c <__assert_fail@plt+0x1104>
   12b5c:	add	r3, sp, #18944	; 0x4a00
   12b60:	add	r3, r3, #215	; 0xd7
   12b64:	ldrb	r1, [r3]
   12b68:	mov	r0, r4
   12b6c:	bl	11694 <killpg@plt>
   12b70:	b	12a8c <__assert_fail@plt+0x1104>
   12b74:	bl	117f0 <__errno_location@plt>
   12b78:	mov	r3, #0
   12b7c:	str	r3, [r0]
   12b80:	mov	r2, #8192	; 0x2000
   12b84:	mov	r1, r7
   12b88:	mov	r0, sl
   12b8c:	bl	115a4 <read@plt>
   12b90:	subs	r2, r0, #0
   12b94:	bgt	12bf4 <__assert_fail@plt+0x126c>
   12b98:	mov	r1, #2
   12b9c:	ldr	r0, [sp, #28]
   12ba0:	bl	1185c <shutdown@plt>
   12ba4:	add	r3, sp, #20224	; 0x4f00
   12ba8:	add	r3, r3, #24
   12bac:	ldr	r3, [r3]
   12bb0:	add	r2, r3, #31
   12bb4:	cmp	r3, #0
   12bb8:	movge	r2, r3
   12bbc:	asr	r2, r2, #5
   12bc0:	add	r1, sp, #20480	; 0x5000
   12bc4:	add	r1, r1, #64	; 0x40
   12bc8:	add	r2, r1, r2, lsl #2
   12bcc:	asr	r1, r3, #31
   12bd0:	lsr	r1, r1, #27
   12bd4:	add	r3, r3, r1
   12bd8:	and	r3, r3, #31
   12bdc:	sub	r3, r3, r1
   12be0:	ldr	r1, [r2, #-288]	; 0xfffffee0
   12be4:	mov	r0, #1
   12be8:	bic	r3, r1, r0, lsl r3
   12bec:	str	r3, [r2, #-288]	; 0xfffffee0
   12bf0:	b	12ad8 <__assert_fail@plt+0x1150>
   12bf4:	mov	r1, r7
   12bf8:	ldr	r0, [sp, #28]
   12bfc:	bl	11814 <write@plt>
   12c00:	b	12ad8 <__assert_fail@plt+0x1150>
   12c04:	str	r8, [sp, #4]
   12c08:	str	r6, [sp]
   12c0c:	mov	r3, r7
   12c10:	ldr	r2, [sp, #16]
   12c14:	ldr	r1, [pc, #376]	; 12d94 <__assert_fail@plt+0x140c>
   12c18:	mov	r0, #38	; 0x26
   12c1c:	bl	118c8 <syslog@plt>
   12c20:	ldr	r0, [pc, #368]	; 12d98 <__assert_fail@plt+0x1410>
   12c24:	bl	11be0 <__assert_fail@plt+0x258>
   12c28:	ldr	r0, [pc, #364]	; 12d9c <__assert_fail@plt+0x1414>
   12c2c:	bl	116ac <chdir@plt>
   12c30:	cmp	r0, #0
   12c34:	bge	1261c <__assert_fail@plt+0xc94>
   12c38:	str	r6, [sp]
   12c3c:	mov	r3, r7
   12c40:	ldr	r2, [sp, #16]
   12c44:	ldr	r1, [pc, #340]	; 12da0 <__assert_fail@plt+0x1418>
   12c48:	mov	r0, #35	; 0x23
   12c4c:	bl	118c8 <syslog@plt>
   12c50:	mov	r0, #1
   12c54:	bl	1179c <exit@plt>
   12c58:	ldr	r0, [sp, #36]	; 0x24
   12c5c:	bl	11934 <freeaddrinfo@plt>
   12c60:	add	r3, sp, #18944	; 0x4a00
   12c64:	add	r3, r3, #224	; 0xe0
   12c68:	sub	r3, r3, #8
   12c6c:	add	r2, sp, #19968	; 0x4e00
   12c70:	add	r2, r2, #220	; 0xdc
   12c74:	ldr	r1, [pc, #296]	; 12da4 <__assert_fail@plt+0x141c>
   12c78:	mov	r0, #5
   12c7c:	bl	118c8 <syslog@plt>
   12c80:	ldr	fp, [pc, #288]	; 12da8 <__assert_fail@plt+0x1420>
   12c84:	add	r7, sp, #19968	; 0x4e00
   12c88:	add	r7, r7, #220	; 0xdc
   12c8c:	b	122b4 <__assert_fail@plt+0x92c>
   12c90:	str	r8, [sp, #4]
   12c94:	str	r6, [sp]
   12c98:	mov	r3, r7
   12c9c:	ldr	r2, [sp, #16]
   12ca0:	ldr	r1, [pc, #184]	; 12d60 <__assert_fail@plt+0x13d8>
   12ca4:	mov	r0, #38	; 0x26
   12ca8:	bl	118c8 <syslog@plt>
   12cac:	ldr	fp, [pc, #176]	; 12d64 <__assert_fail@plt+0x13dc>
   12cb0:	b	12810 <__assert_fail@plt+0xe88>
   12cb4:	mov	sl, #0
   12cb8:	add	r3, sp, #18944	; 0x4a00
   12cbc:	add	r3, r3, #224	; 0xe0
   12cc0:	sub	r7, r3, #8
   12cc4:	b	123b8 <__assert_fail@plt+0xa30>
   12cc8:	andeq	r0, r0, sl, lsr #21
   12ccc:	andeq	r9, r1, r4, lsr #20
   12cd0:	andeq	r9, r1, r8, lsr #20
   12cd4:	andeq	r9, r1, r8, ror #20
   12cd8:	andeq	r9, r1, r4, lsl sl
   12cdc:	andeq	r9, r1, r0, lsr sl
   12ce0:	andeq	r9, r1, r4, lsr #21
   12ce4:	andeq	r9, r1, r4, asr #21
   12ce8:	andeq	r9, r1, ip, ror #21
   12cec:	andeq	r0, r0, r1, lsl #8
   12cf0:	andeq	fp, r2, r4, lsr r5
   12cf4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   12cf8:	andeq	r9, r1, r8, lsr fp
   12cfc:	strdeq	r9, [r1], -r8
   12d00:	andeq	r9, r1, r4, lsl fp
   12d04:	andeq	r9, r1, r4, asr fp
   12d08:	muleq	r1, ip, r9
   12d0c:	andeq	r9, r1, r0, lsr #23
   12d10:	andeq	r9, r1, r8, lsr #23
   12d14:			; <UNDEFINED> instruction: 0x00019bb0
   12d18:	strdeq	fp, [r2], -r8
   12d1c:	andeq	r9, r1, r4, lsr #24
   12d20:	andeq	r5, r1, r0, lsl #3
   12d24:	andeq	r9, r1, r8, ror #25
   12d28:	andeq	r9, r1, r4, asr r9
   12d2c:	andeq	fp, r2, ip, lsr r5
   12d30:	andeq	r9, r1, r4, asr sp
   12d34:	andeq	fp, r2, r4, lsl #3
   12d38:	andeq	r9, r1, r8, asr #27
   12d3c:	ldrdeq	fp, [r2], -ip
   12d40:	andeq	fp, r2, r8, lsr r5
   12d44:	andeq	sl, r1, r4, ror sl
   12d48:	ldrdeq	r9, [r1], -r8
   12d4c:	strdeq	r9, [r1], -ip
   12d50:	andeq	r9, r1, r0, lsl #28
   12d54:	andeq	r9, r1, ip, lsl lr
   12d58:			; <UNDEFINED> instruction: 0x00019bb8
   12d5c:	andeq	r9, r1, r0, lsl #20
   12d60:	ldrdeq	r9, [r1], -r8
   12d64:	andeq	r9, r1, ip, ror #19
   12d68:	andeq	r9, r1, r0, lsl #24
   12d6c:	andeq	r9, r1, ip, lsr #24
   12d70:	andeq	r9, r1, r8, asr ip
   12d74:	strdeq	fp, [r2], -r0
   12d78:	andeq	r9, r1, r8, lsl #25
   12d7c:			; <UNDEFINED> instruction: 0x00019cbc
   12d80:	strdeq	r9, [r1], -r8
   12d84:	andeq	r9, r1, r4, lsl sp
   12d88:	andeq	r9, r1, r8, lsr #26
   12d8c:	andeq	r9, r1, ip, lsr sp
   12d90:	andeq	r5, r0, r1, lsr #8
   12d94:	andeq	r9, r1, ip, asr sp
   12d98:	andeq	r9, r1, r8, lsl #27
   12d9c:	andeq	r9, r1, r0, lsr #27
   12da0:	andeq	r9, r1, r4, lsr #27
   12da4:	andeq	r9, r1, r8, ror fp
   12da8:	andeq	r9, r1, ip, asr #19
   12dac:	push	{r4, r5, r6, lr}
   12db0:	sub	sp, sp, #160	; 0xa0
   12db4:	mov	r4, r0
   12db8:	mov	r6, r1
   12dbc:	mov	r3, #1
   12dc0:	str	r3, [sp, #144]	; 0x90
   12dc4:	ldr	r0, [r1]
   12dc8:	bl	143a4 <argp_parse@@Base+0xd34>
   12dcc:	ldr	r2, [pc, #316]	; 12f10 <__assert_fail@plt+0x1588>
   12dd0:	ldr	r3, [pc, #316]	; 12f14 <__assert_fail@plt+0x158c>
   12dd4:	str	r2, [r3]
   12dd8:	ldr	r5, [pc, #312]	; 12f18 <__assert_fail@plt+0x1590>
   12ddc:	ldr	r1, [pc, #312]	; 12f1c <__assert_fail@plt+0x1594>
   12de0:	mov	r0, r5
   12de4:	bl	1417c <argp_parse@@Base+0xb0c>
   12de8:	mov	r3, #0
   12dec:	str	r3, [sp, #4]
   12df0:	add	r2, sp, #156	; 0x9c
   12df4:	str	r2, [sp]
   12df8:	mov	r2, r6
   12dfc:	mov	r1, r4
   12e00:	ldr	r0, [pc, #280]	; 12f20 <__assert_fail@plt+0x1598>
   12e04:	bl	13670 <argp_parse@@Base>
   12e08:	mov	r2, #24
   12e0c:	mov	r1, #5
   12e10:	mov	r0, r5
   12e14:	bl	118f8 <openlog@plt>
   12e18:	ldr	r2, [sp, #156]	; 0x9c
   12e1c:	sub	r2, r4, r2
   12e20:	cmp	r2, #0
   12e24:	bgt	12ea4 <__assert_fail@plt+0x151c>
   12e28:	mov	r3, #128	; 0x80
   12e2c:	str	r3, [sp, #140]	; 0x8c
   12e30:	add	r2, sp, #140	; 0x8c
   12e34:	add	r1, sp, #12
   12e38:	mov	r0, #0
   12e3c:	bl	11928 <getpeername@plt>
   12e40:	cmp	r0, #0
   12e44:	blt	12eb8 <__assert_fail@plt+0x1530>
   12e48:	ldr	r3, [pc, #212]	; 12f24 <__assert_fail@plt+0x159c>
   12e4c:	ldr	r3, [r3]
   12e50:	cmp	r3, #0
   12e54:	bne	12ecc <__assert_fail@plt+0x1544>
   12e58:	mov	r1, #1
   12e5c:	str	r1, [sp, #148]	; 0x94
   12e60:	mov	r3, #60	; 0x3c
   12e64:	str	r3, [sp, #152]	; 0x98
   12e68:	mov	r3, #8
   12e6c:	str	r3, [sp]
   12e70:	add	r3, sp, #148	; 0x94
   12e74:	mov	r2, #13
   12e78:	mov	r0, #0
   12e7c:	bl	1158c <setsockopt@plt>
   12e80:	cmp	r0, #0
   12e84:	blt	12f00 <__assert_fail@plt+0x1578>
   12e88:	ldr	r2, [sp, #140]	; 0x8c
   12e8c:	add	r1, sp, #12
   12e90:	mov	r0, #0
   12e94:	bl	11e2c <__assert_fail@plt+0x4a4>
   12e98:	mov	r0, #0
   12e9c:	add	sp, sp, #160	; 0xa0
   12ea0:	pop	{r4, r5, r6, pc}
   12ea4:	ldr	r1, [pc, #124]	; 12f28 <__assert_fail@plt+0x15a0>
   12ea8:	mov	r0, #3
   12eac:	bl	118c8 <syslog@plt>
   12eb0:	mov	r0, #1
   12eb4:	bl	1179c <exit@plt>
   12eb8:	ldr	r1, [pc, #108]	; 12f2c <__assert_fail@plt+0x15a4>
   12ebc:	mov	r0, #3
   12ec0:	bl	118c8 <syslog@plt>
   12ec4:	mov	r0, #1
   12ec8:	bl	11604 <_exit@plt>
   12ecc:	mov	r3, #4
   12ed0:	str	r3, [sp]
   12ed4:	add	r3, sp, #144	; 0x90
   12ed8:	mov	r2, #9
   12edc:	mov	r1, #1
   12ee0:	mov	r0, #0
   12ee4:	bl	1158c <setsockopt@plt>
   12ee8:	cmp	r0, #0
   12eec:	bge	12e58 <__assert_fail@plt+0x14d0>
   12ef0:	ldr	r1, [pc, #56]	; 12f30 <__assert_fail@plt+0x15a8>
   12ef4:	mov	r0, #4
   12ef8:	bl	118c8 <syslog@plt>
   12efc:	b	12e58 <__assert_fail@plt+0x14d0>
   12f00:	ldr	r1, [pc, #44]	; 12f34 <__assert_fail@plt+0x15ac>
   12f04:	mov	r0, #4
   12f08:	bl	118c8 <syslog@plt>
   12f0c:	b	12e88 <__assert_fail@plt+0x1500>
   12f10:	andeq	r9, r1, r0, lsr lr
   12f14:	andeq	fp, r2, r0, asr #10
   12f18:	andeq	r9, r1, r8, asr #28
   12f1c:	muleq	r2, r0, r4
   12f20:	andeq	fp, r2, r4, ror #7
   12f24:	andeq	fp, r2, r4, lsl #3
   12f28:	andeq	r9, r1, r0, asr lr
   12f2c:	andeq	r9, r1, r4, ror #28
   12f30:	andeq	r9, r1, r4, ror lr
   12f34:	muleq	r1, r4, lr
   12f38:	push	{r4, r5, r6, r7, r8, r9, lr}
   12f3c:	sub	sp, sp, #1072	; 0x430
   12f40:	sub	sp, sp, #12
   12f44:	bl	117f0 <__errno_location@plt>
   12f48:	mov	r7, r0
   12f4c:	mov	r4, #0
   12f50:	mov	r6, r4
   12f54:	mov	r8, r4
   12f58:	b	12f8c <__assert_fail@plt+0x1604>
   12f5c:	mov	r3, #12
   12f60:	str	r3, [r7]
   12f64:	mov	r0, r6
   12f68:	bl	14264 <argp_parse@@Base+0xbf4>
   12f6c:	mov	r0, r5
   12f70:	add	sp, sp, #1072	; 0x430
   12f74:	add	sp, sp, #12
   12f78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12f7c:	ldr	r3, [r7]
   12f80:	mov	r6, r5
   12f84:	cmp	r3, #36	; 0x24
   12f88:	bne	12fdc <__assert_fail@plt+0x1654>
   12f8c:	str	r8, [r7]
   12f90:	add	r4, r4, #256	; 0x100
   12f94:	mov	r1, r4
   12f98:	mov	r0, r6
   12f9c:	bl	14ecc <argp_parse@@Base+0x185c>
   12fa0:	subs	r5, r0, #0
   12fa4:	beq	12f5c <__assert_fail@plt+0x15d4>
   12fa8:	mov	r1, r4
   12fac:	mov	r0, r5
   12fb0:	bl	1170c <gethostname@plt>
   12fb4:	subs	r9, r0, #0
   12fb8:	bne	12f7c <__assert_fail@plt+0x15f4>
   12fbc:	mov	r2, r4
   12fc0:	mov	r1, r8
   12fc4:	mov	r0, r5
   12fc8:	bl	1182c <memchr@plt>
   12fcc:	cmp	r0, #0
   12fd0:	bne	12f7c <__assert_fail@plt+0x15f4>
   12fd4:	mov	r6, r5
   12fd8:	b	12f8c <__assert_fail@plt+0x1604>
   12fdc:	cmp	r9, #0
   12fe0:	cmpne	r3, #0
   12fe4:	bne	1305c <__assert_fail@plt+0x16d4>
   12fe8:	mov	r2, #32
   12fec:	mov	r1, #0
   12ff0:	add	r0, sp, #20
   12ff4:	bl	11808 <memset@plt>
   12ff8:	mov	r3, #2
   12ffc:	str	r3, [sp, #24]
   13000:	add	r3, sp, #16
   13004:	add	r2, sp, #20
   13008:	mov	r1, #0
   1300c:	mov	r0, r5
   13010:	bl	11940 <getaddrinfo@plt>
   13014:	cmp	r0, #0
   13018:	bne	12f6c <__assert_fail@plt+0x15e4>
   1301c:	ldr	r3, [sp, #16]
   13020:	ldr	r1, [r3, #16]
   13024:	ldr	r0, [r3, #20]
   13028:	mov	r3, #8
   1302c:	str	r3, [sp, #8]
   13030:	mov	r3, #0
   13034:	str	r3, [sp, #4]
   13038:	str	r3, [sp]
   1303c:	ldr	r3, [pc, #64]	; 13084 <__assert_fail@plt+0x16fc>
   13040:	add	r2, sp, #52	; 0x34
   13044:	bl	11880 <getnameinfo@plt>
   13048:	cmp	r0, #0
   1304c:	beq	1306c <__assert_fail@plt+0x16e4>
   13050:	ldr	r0, [sp, #16]
   13054:	bl	11934 <freeaddrinfo@plt>
   13058:	b	12f6c <__assert_fail@plt+0x15e4>
   1305c:	mov	r0, r5
   13060:	bl	14264 <argp_parse@@Base+0xbf4>
   13064:	mov	r5, #0
   13068:	b	12f6c <__assert_fail@plt+0x15e4>
   1306c:	mov	r0, r5
   13070:	bl	14264 <argp_parse@@Base+0xbf4>
   13074:	add	r0, sp, #52	; 0x34
   13078:	bl	11658 <strdup@plt>
   1307c:	mov	r5, r0
   13080:	b	13050 <__assert_fail@plt+0x16c8>
   13084:	andeq	r0, r0, r1, lsl #8
   13088:	ldr	ip, [r0]
   1308c:	cmp	ip, #0
   13090:	beq	130e4 <__assert_fail@plt+0x175c>
   13094:	push	{r4, r5, r6, lr}
   13098:	mov	ip, r2
   1309c:	mov	r5, r1
   130a0:	mov	r4, r0
   130a4:	ldr	r2, [r0, #32]
   130a8:	str	r2, [r1, #36]	; 0x24
   130ac:	ldr	r2, [r0, #24]
   130b0:	str	r2, [r1, #28]
   130b4:	ldr	r2, [r0, #28]
   130b8:	str	r2, [r1, #32]
   130bc:	ldr	r2, [r0, #12]
   130c0:	str	r2, [r1, #20]
   130c4:	ldr	r6, [r0]
   130c8:	mov	r2, r1
   130cc:	mov	r1, r3
   130d0:	mov	r0, ip
   130d4:	blx	r6
   130d8:	ldr	r3, [r5, #36]	; 0x24
   130dc:	str	r3, [r4, #32]
   130e0:	pop	{r4, r5, r6, pc}
   130e4:	mov	r0, #7
   130e8:	bx	lr
   130ec:	push	{r4, r5, r6, lr}
   130f0:	ldr	r5, [r0, #16]
   130f4:	ldr	r3, [r0]
   130f8:	cmp	r3, #0
   130fc:	beq	13114 <__assert_fail@plt+0x178c>
   13100:	ldr	r2, [r1, #8]
   13104:	add	r2, r2, #1
   13108:	str	r2, [r1, #8]
   1310c:	mov	r2, #0
   13110:	b	13168 <__assert_fail@plt+0x17e0>
   13114:	ldr	r3, [r0, #4]
   13118:	cmp	r3, #0
   1311c:	ldrne	r3, [r1, #8]
   13120:	addne	r3, r3, #1
   13124:	strne	r3, [r1, #8]
   13128:	cmp	r5, #0
   1312c:	popeq	{r4, r5, r6, pc}
   13130:	ldr	r0, [r5]
   13134:	cmp	r0, #0
   13138:	popeq	{r4, r5, r6, pc}
   1313c:	mov	r4, r1
   13140:	mov	r1, r4
   13144:	bl	130ec <__assert_fail@plt+0x1764>
   13148:	ldr	r3, [r4, #12]
   1314c:	add	r3, r3, #1
   13150:	str	r3, [r4, #12]
   13154:	ldr	r0, [r5, #16]!
   13158:	cmp	r0, #0
   1315c:	bne	13140 <__assert_fail@plt+0x17b8>
   13160:	pop	{r4, r5, r6, pc}
   13164:	add	r2, r2, #1
   13168:	add	r3, r3, #24
   1316c:	ldr	r0, [r3, #-20]	; 0xffffffec
   13170:	cmp	r0, #0
   13174:	bne	13164 <__assert_fail@plt+0x17dc>
   13178:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1317c:	cmp	r0, #0
   13180:	bne	13164 <__assert_fail@plt+0x17dc>
   13184:	ldr	r0, [r3, #-8]
   13188:	cmp	r0, #0
   1318c:	bne	13164 <__assert_fail@plt+0x17dc>
   13190:	ldr	r0, [r3, #-4]
   13194:	cmp	r0, #0
   13198:	bne	13164 <__assert_fail@plt+0x17dc>
   1319c:	add	r0, r2, r2, lsl #1
   131a0:	ldr	r3, [r1]
   131a4:	add	r3, r3, r0
   131a8:	str	r3, [r1]
   131ac:	ldr	r3, [r1, #4]
   131b0:	add	r2, r3, r2
   131b4:	str	r2, [r1, #4]
   131b8:	b	13128 <__assert_fail@plt+0x17a0>
   131bc:	cmp	r0, #86	; 0x56
   131c0:	beq	131cc <__assert_fail@plt+0x1844>
   131c4:	mov	r0, #7
   131c8:	bx	lr
   131cc:	push	{r4, lr}
   131d0:	mov	r4, r2
   131d4:	ldr	r3, [pc, #100]	; 13240 <__assert_fail@plt+0x18b8>
   131d8:	ldr	r3, [r3]
   131dc:	cmp	r3, #0
   131e0:	beq	13204 <__assert_fail@plt+0x187c>
   131e4:	mov	r1, r2
   131e8:	ldr	r0, [r2, #48]	; 0x30
   131ec:	blx	r3
   131f0:	ldr	r3, [r4, #16]
   131f4:	tst	r3, #32
   131f8:	beq	13238 <__assert_fail@plt+0x18b0>
   131fc:	mov	r0, #0
   13200:	pop	{r4, pc}
   13204:	ldr	r3, [pc, #56]	; 13244 <__assert_fail@plt+0x18bc>
   13208:	ldr	r2, [r3]
   1320c:	cmp	r2, #0
   13210:	beq	13224 <__assert_fail@plt+0x189c>
   13214:	ldr	r1, [pc, #44]	; 13248 <__assert_fail@plt+0x18c0>
   13218:	ldr	r0, [r4, #48]	; 0x30
   1321c:	bl	117d8 <fprintf@plt>
   13220:	b	131f0 <__assert_fail@plt+0x1868>
   13224:	ldr	r2, [pc, #32]	; 1324c <__assert_fail@plt+0x18c4>
   13228:	ldr	r1, [pc, #32]	; 13250 <__assert_fail@plt+0x18c8>
   1322c:	mov	r0, r4
   13230:	bl	17f9c <argp_error@@Base>
   13234:	b	131f0 <__assert_fail@plt+0x1868>
   13238:	mov	r0, #0
   1323c:	bl	1179c <exit@plt>
   13240:	andeq	fp, r2, r0, lsl #10
   13244:	andeq	fp, r2, r4, asr #10
   13248:	andeq	sl, r1, r8, asr r2
   1324c:	strheq	sl, [r1], -r8
   13250:	ldrdeq	sl, [r1], -ip
   13254:	push	{r4, r5, r6, lr}
   13258:	mov	r4, r2
   1325c:	cmn	r0, #3
   13260:	beq	132fc <__assert_fail@plt+0x1974>
   13264:	mov	r5, r1
   13268:	ble	13294 <__assert_fail@plt+0x190c>
   1326c:	cmn	r0, #2
   13270:	beq	13314 <__assert_fail@plt+0x198c>
   13274:	cmp	r0, #63	; 0x3f
   13278:	bne	13358 <__assert_fail@plt+0x19d0>
   1327c:	ldr	r2, [pc, #228]	; 13368 <__assert_fail@plt+0x19e0>
   13280:	ldr	r1, [r4, #48]	; 0x30
   13284:	mov	r0, r4
   13288:	bl	17ee0 <argp_state_help@@Base>
   1328c:	mov	r0, #0
   13290:	pop	{r4, r5, r6, pc}
   13294:	cmn	r0, #4
   13298:	bne	13358 <__assert_fail@plt+0x19d0>
   1329c:	mov	r2, #10
   132a0:	mov	r1, #0
   132a4:	ldr	r0, [pc, #192]	; 1336c <__assert_fail@plt+0x19e4>
   132a8:	cmp	r5, r1
   132ac:	movne	r0, r5
   132b0:	bl	11580 <strtol@plt>
   132b4:	ldr	r3, [pc, #180]	; 13370 <__assert_fail@plt+0x19e8>
   132b8:	str	r0, [r3]
   132bc:	ldr	r2, [r3]
   132c0:	sub	r1, r2, #1
   132c4:	str	r1, [r3]
   132c8:	cmp	r2, #0
   132cc:	ble	13360 <__assert_fail@plt+0x19d8>
   132d0:	mov	r5, #1
   132d4:	mov	r4, r3
   132d8:	mov	r0, r5
   132dc:	bl	1164c <sleep@plt>
   132e0:	ldr	r3, [r4]
   132e4:	sub	r2, r3, #1
   132e8:	str	r2, [r4]
   132ec:	cmp	r3, #0
   132f0:	bgt	132d8 <__assert_fail@plt+0x1950>
   132f4:	mov	r0, #0
   132f8:	pop	{r4, r5, r6, pc}
   132fc:	ldr	r2, [pc, #112]	; 13374 <__assert_fail@plt+0x19ec>
   13300:	ldr	r1, [r4, #48]	; 0x30
   13304:	mov	r0, r4
   13308:	bl	17ee0 <argp_state_help@@Base>
   1330c:	mov	r0, #0
   13310:	pop	{r4, r5, r6, pc}
   13314:	ldr	r3, [pc, #92]	; 13378 <__assert_fail@plt+0x19f0>
   13318:	str	r1, [r3]
   1331c:	mov	r0, r1
   13320:	bl	141a4 <argp_parse@@Base+0xb34>
   13324:	str	r0, [r4, #40]	; 0x28
   13328:	ldr	r3, [pc, #76]	; 1337c <__assert_fail@plt+0x19f4>
   1332c:	str	r0, [r3]
   13330:	ldr	r3, [r4, #16]
   13334:	and	r3, r3, #3
   13338:	cmp	r3, #1
   1333c:	beq	13348 <__assert_fail@plt+0x19c0>
   13340:	mov	r0, #0
   13344:	pop	{r4, r5, r6, pc}
   13348:	ldr	r3, [r4, #8]
   1334c:	str	r5, [r3]
   13350:	mov	r0, #0
   13354:	pop	{r4, r5, r6, pc}
   13358:	mov	r0, #7
   1335c:	pop	{r4, r5, r6, pc}
   13360:	mov	r0, #0
   13364:	pop	{r4, r5, r6, pc}
   13368:	andeq	r0, r0, sl, ror r2
   1336c:	andeq	sl, r1, r0, ror #1
   13370:	strdeq	fp, [r2], -ip
   13374:	andeq	r0, r0, r1, lsl #4
   13378:	andeq	fp, r2, r4, ror #9
   1337c:	ldrdeq	fp, [r2], -r8
   13380:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13384:	sub	sp, sp, #36	; 0x24
   13388:	str	r0, [sp, #12]
   1338c:	str	r1, [sp, #16]
   13390:	str	r2, [sp, #20]
   13394:	mov	r8, r3
   13398:	ldr	sl, [sp, #72]	; 0x48
   1339c:	ldr	r9, [r0]
   133a0:	ldr	r5, [r0, #16]
   133a4:	cmp	r9, #0
   133a8:	addne	r6, r9, #24
   133ac:	strne	r5, [sp, #28]
   133b0:	strne	r8, [sp, #24]
   133b4:	bne	134c0 <__assert_fail@plt+0x1b38>
   133b8:	ldr	r3, [sp, #12]
   133bc:	ldr	r3, [r3, #4]
   133c0:	cmp	r3, #0
   133c4:	moveq	r0, r8
   133c8:	moveq	r8, #0
   133cc:	beq	1344c <__assert_fail@plt+0x1ac4>
   133d0:	ldr	r2, [sp, #12]
   133d4:	ldr	r3, [r2, #4]
   133d8:	str	r3, [r8]
   133dc:	str	r2, [r8, #4]
   133e0:	ldr	r3, [sl, #4]
   133e4:	str	r3, [r8, #8]
   133e8:	mov	r3, #0
   133ec:	str	r3, [r8, #12]
   133f0:	ldr	r2, [sp, #16]
   133f4:	str	r2, [r8, #16]
   133f8:	ldr	r2, [sp, #20]
   133fc:	str	r2, [r8, #20]
   13400:	str	r3, [r8, #24]
   13404:	str	r3, [r8, #32]
   13408:	str	r3, [r8, #28]
   1340c:	cmp	r5, r3
   13410:	beq	13448 <__assert_fail@plt+0x1ac0>
   13414:	ldr	r3, [r5]
   13418:	cmp	r3, #0
   1341c:	beq	13668 <__assert_fail@plt+0x1ce0>
   13420:	mov	r3, #0
   13424:	add	r3, r3, #1
   13428:	ldr	r2, [r5, r3, lsl #4]
   1342c:	cmp	r2, #0
   13430:	bne	13424 <__assert_fail@plt+0x1a9c>
   13434:	ldr	r2, [sl, #12]
   13438:	str	r2, [r8, #28]
   1343c:	ldr	r2, [sl, #12]
   13440:	add	r3, r2, r3, lsl #2
   13444:	str	r3, [sl, #12]
   13448:	add	r0, r8, #36	; 0x24
   1344c:	cmp	r5, #0
   13450:	beq	1348c <__assert_fail@plt+0x1b04>
   13454:	ldr	ip, [r5]
   13458:	cmp	ip, #0
   1345c:	beq	1348c <__assert_fail@plt+0x1b04>
   13460:	mov	r2, #0
   13464:	add	r4, r2, #1
   13468:	str	sl, [sp]
   1346c:	mov	r3, r0
   13470:	mov	r1, r8
   13474:	mov	r0, ip
   13478:	bl	13380 <__assert_fail@plt+0x19f8>
   1347c:	ldr	ip, [r5, r4, lsl #4]
   13480:	mov	r2, r4
   13484:	cmp	ip, #0
   13488:	bne	13464 <__assert_fail@plt+0x1adc>
   1348c:	add	sp, sp, #36	; 0x24
   13490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13494:	ldr	r0, [r4, #16]!
   13498:	cmp	r0, #0
   1349c:	beq	135a8 <__assert_fail@plt+0x1c20>
   134a0:	mov	r1, r7
   134a4:	bl	11574 <strcmp@plt>
   134a8:	cmp	r0, #0
   134ac:	bne	13494 <__assert_fail@plt+0x1b0c>
   134b0:	sub	r4, r4, fp
   134b4:	cmn	r4, #15
   134b8:	blt	135a8 <__assert_fail@plt+0x1c20>
   134bc:	add	r6, r6, #24
   134c0:	sub	r2, r6, #24
   134c4:	mov	r8, r6
   134c8:	ldr	r4, [r6, #-20]	; 0xffffffec
   134cc:	cmp	r4, #0
   134d0:	bne	134e0 <__assert_fail@plt+0x1b58>
   134d4:	ldr	r3, [r6, #-24]	; 0xffffffe8
   134d8:	cmp	r3, #0
   134dc:	beq	13644 <__assert_fail@plt+0x1cbc>
   134e0:	ldr	r3, [r8, #-12]
   134e4:	and	r1, r3, #4
   134e8:	cmp	r1, #0
   134ec:	moveq	r9, r2
   134f0:	ldr	r5, [r9, #12]
   134f4:	ands	r5, r5, #8
   134f8:	bne	134bc <__assert_fail@plt+0x1b34>
   134fc:	tst	r3, #8
   13500:	bne	13584 <__assert_fail@plt+0x1bfc>
   13504:	sub	r3, r4, #1
   13508:	cmp	r3, #254	; 0xfe
   1350c:	bhi	13584 <__assert_fail@plt+0x1bfc>
   13510:	bl	11784 <__ctype_b_loc@plt>
   13514:	ldr	r3, [r0]
   13518:	lsl	r4, r4, #1
   1351c:	ldrh	r3, [r3, r4]
   13520:	tst	r3, #16384	; 0x4000
   13524:	beq	13584 <__assert_fail@plt+0x1bfc>
   13528:	ldr	r3, [sl, #4]
   1352c:	add	r2, r3, #1
   13530:	str	r2, [sl, #4]
   13534:	ldr	r2, [r8, #-20]	; 0xffffffec
   13538:	strb	r2, [r3]
   1353c:	ldr	r3, [r9, #8]
   13540:	cmp	r3, #0
   13544:	beq	13578 <__assert_fail@plt+0x1bf0>
   13548:	ldr	r3, [sl, #4]
   1354c:	add	r2, r3, #1
   13550:	str	r2, [sl, #4]
   13554:	mov	r2, #58	; 0x3a
   13558:	strb	r2, [r3]
   1355c:	ldr	r3, [r9, #12]
   13560:	tst	r3, #1
   13564:	ldrne	r3, [sl, #4]
   13568:	addne	r2, r3, #1
   1356c:	strne	r2, [sl, #4]
   13570:	movne	r2, #58	; 0x3a
   13574:	strbne	r2, [r3]
   13578:	ldr	r3, [sl, #4]
   1357c:	mov	r2, #0
   13580:	strb	r2, [r3]
   13584:	ldr	r7, [r8, #-24]	; 0xffffffe8
   13588:	cmp	r7, #0
   1358c:	beq	134bc <__assert_fail@plt+0x1b34>
   13590:	ldr	r3, [sl]
   13594:	ldr	fp, [r3, #8]
   13598:	ldr	r0, [fp]
   1359c:	cmp	r0, #0
   135a0:	movne	r4, fp
   135a4:	bne	134a0 <__assert_fail@plt+0x1b18>
   135a8:	ldr	r3, [sl, #8]
   135ac:	str	r7, [r3]
   135b0:	ldr	r3, [sl, #8]
   135b4:	ldr	r2, [r9, #8]
   135b8:	cmp	r2, #0
   135bc:	beq	135d4 <__assert_fail@plt+0x1c4c>
   135c0:	ldr	r5, [r9, #12]
   135c4:	and	r5, r5, #1
   135c8:	cmp	r5, #0
   135cc:	movne	r5, #2
   135d0:	moveq	r5, #1
   135d4:	str	r5, [r3, #4]
   135d8:	ldr	r3, [sl, #8]
   135dc:	mov	r2, #0
   135e0:	str	r2, [r3, #8]
   135e4:	ldr	r1, [sl, #8]
   135e8:	ldr	r0, [r8, #-20]	; 0xffffffec
   135ec:	cmp	r0, r2
   135f0:	ldreq	r0, [r9, #4]
   135f4:	bic	r0, r0, #-16777216	; 0xff000000
   135f8:	ldr	r3, [sl]
   135fc:	ldr	r3, [r3, #48]	; 0x30
   13600:	ldr	r2, [sp, #24]
   13604:	sub	r3, r2, r3
   13608:	asr	r3, r3, #2
   1360c:	rsb	r2, r3, r3, lsl #3
   13610:	add	r2, r2, r2, lsl #6
   13614:	add	r2, r3, r2, lsl #3
   13618:	rsb	r2, r2, r2, lsl #15
   1361c:	add	r3, r3, r2, lsl #3
   13620:	add	r3, r3, #1
   13624:	add	r3, r0, r3, lsl #24
   13628:	str	r3, [r1, #12]
   1362c:	ldr	r3, [sl, #8]
   13630:	add	r2, r3, #16
   13634:	str	r2, [sl, #8]
   13638:	mov	r2, #0
   1363c:	str	r2, [r3, #16]
   13640:	b	134bc <__assert_fail@plt+0x1b34>
   13644:	ldr	r3, [r6, #-8]
   13648:	cmp	r3, #0
   1364c:	bne	134e0 <__assert_fail@plt+0x1b58>
   13650:	ldr	r3, [r6, #-4]
   13654:	cmp	r3, #0
   13658:	bne	134e0 <__assert_fail@plt+0x1b58>
   1365c:	ldr	r5, [sp, #28]
   13660:	ldr	r8, [sp, #24]
   13664:	b	133d0 <__assert_fail@plt+0x1a48>
   13668:	mov	r3, #0
   1366c:	b	13434 <__assert_fail@plt+0x1aac>

00013670 <argp_parse@@Base>:
   13670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13674:	add	fp, sp, #32
   13678:	sub	sp, sp, #220	; 0xdc
   1367c:	mov	r8, r0
   13680:	str	r1, [fp, #-236]	; 0xffffff14
   13684:	str	r2, [fp, #-232]	; 0xffffff18
   13688:	mov	r6, r3
   1368c:	tst	r3, #1
   13690:	bne	136c0 <argp_parse@@Base+0x50>
   13694:	ldr	r3, [pc, #2548]	; 14090 <argp_parse@@Base+0xa20>
   13698:	ldr	r3, [r3]
   1369c:	cmp	r3, #0
   136a0:	moveq	r3, r2
   136a4:	ldreq	r2, [r3]
   136a8:	ldreq	r3, [pc, #2528]	; 14090 <argp_parse@@Base+0xa20>
   136ac:	streq	r2, [r3]
   136b0:	ldr	r3, [pc, #2524]	; 14094 <argp_parse@@Base+0xa24>
   136b4:	ldr	r3, [r3]
   136b8:	cmp	r3, #0
   136bc:	beq	138b0 <argp_parse@@Base+0x240>
   136c0:	tst	r6, #16
   136c4:	beq	138c8 <argp_parse@@Base+0x258>
   136c8:	mov	r2, #36	; 0x24
   136cc:	mov	r1, #0
   136d0:	sub	r0, fp, #196	; 0xc4
   136d4:	bl	11808 <memset@plt>
   136d8:	ands	r3, r6, #4
   136dc:	str	r3, [fp, #-240]	; 0xffffff10
   136e0:	moveq	r3, #1
   136e4:	movne	r3, #0
   136e8:	str	r3, [fp, #-228]	; 0xffffff1c
   136ec:	mov	r3, #0
   136f0:	str	r3, [fp, #-224]	; 0xffffff20
   136f4:	str	r3, [fp, #-220]	; 0xffffff24
   136f8:	str	r3, [fp, #-216]	; 0xffffff28
   136fc:	cmp	r8, r3
   13700:	beq	13710 <argp_parse@@Base+0xa0>
   13704:	sub	r1, fp, #228	; 0xe4
   13708:	mov	r0, r8
   1370c:	bl	130ec <__assert_fail@plt+0x1764>
   13710:	ldr	r4, [fp, #-220]	; 0xffffff24
   13714:	add	r4, r4, #1
   13718:	add	r4, r4, r4, lsl #3
   1371c:	lsl	r4, r4, #2
   13720:	ldr	r9, [fp, #-216]	; 0xffffff28
   13724:	lsl	r9, r9, #2
   13728:	add	sl, r9, r4
   1372c:	ldr	r5, [fp, #-224]	; 0xffffff20
   13730:	add	r5, r5, #1
   13734:	add	r5, sl, r5, lsl #4
   13738:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1373c:	add	r0, r0, #1
   13740:	add	r0, r0, r5
   13744:	bl	14e9c <argp_parse@@Base+0x182c>
   13748:	mov	r7, r0
   1374c:	str	r0, [fp, #-40]	; 0xffffffd8
   13750:	cmp	r0, #0
   13754:	moveq	r4, #12
   13758:	beq	13ee0 <argp_parse@@Base+0x870>
   1375c:	str	r0, [fp, #-112]	; 0xffffff90
   13760:	add	r4, r0, r4
   13764:	str	r4, [fp, #-104]	; 0xffffff98
   13768:	add	r3, r0, sl
   1376c:	str	r3, [fp, #-244]	; 0xffffff0c
   13770:	str	r3, [fp, #-152]	; 0xffffff68
   13774:	add	sl, r0, r5
   13778:	str	sl, [fp, #-156]	; 0xffffff64
   1377c:	mov	r3, #1
   13780:	str	r3, [fp, #-196]	; 0xffffff3c
   13784:	str	r3, [fp, #-192]	; 0xffffff40
   13788:	sub	ip, fp, #148	; 0x94
   1378c:	sub	lr, fp, #196	; 0xc4
   13790:	ldm	lr!, {r0, r1, r2, r3}
   13794:	stmia	ip!, {r0, r1, r2, r3}
   13798:	ldm	lr!, {r0, r1, r2, r3}
   1379c:	stmia	ip!, {r0, r1, r2, r3}
   137a0:	ldr	r3, [lr]
   137a4:	str	r3, [ip]
   137a8:	mov	r2, r9
   137ac:	mov	r1, #0
   137b0:	mov	r0, r4
   137b4:	bl	11808 <memset@plt>
   137b8:	sub	r3, fp, #160	; 0xa0
   137bc:	str	r3, [fp, #-212]	; 0xffffff2c
   137c0:	str	sl, [fp, #-208]	; 0xffffff30
   137c4:	ldr	r3, [fp, #-244]	; 0xffffff0c
   137c8:	str	r3, [fp, #-204]	; 0xffffff34
   137cc:	str	r4, [fp, #-200]	; 0xffffff38
   137d0:	tst	r6, #8
   137d4:	beq	13960 <argp_parse@@Base+0x2f0>
   137d8:	add	sl, sl, #1
   137dc:	str	sl, [fp, #-208]	; 0xffffff30
   137e0:	mov	r3, #45	; 0x2d
   137e4:	strb	r3, [r7, r5]
   137e8:	mov	r3, #0
   137ec:	ldr	r2, [fp, #-208]	; 0xffffff30
   137f0:	strb	r3, [r2]
   137f4:	ldr	r2, [fp, #-204]	; 0xffffff34
   137f8:	str	r3, [r2]
   137fc:	str	r8, [fp, #-160]	; 0xffffff60
   13800:	cmp	r8, r3
   13804:	beq	1397c <argp_parse@@Base+0x30c>
   13808:	sub	r3, fp, #212	; 0xd4
   1380c:	str	r3, [sp]
   13810:	ldr	r3, [fp, #-112]	; 0xffffff90
   13814:	mov	r2, #0
   13818:	mov	r1, r2
   1381c:	mov	r0, r8
   13820:	bl	13380 <__assert_fail@plt+0x19f8>
   13824:	str	r0, [fp, #-108]	; 0xffffff94
   13828:	mov	r2, #56	; 0x38
   1382c:	mov	r1, #0
   13830:	sub	r0, fp, #96	; 0x60
   13834:	bl	11808 <memset@plt>
   13838:	ldr	r3, [fp, #-160]	; 0xffffff60
   1383c:	str	r3, [fp, #-96]	; 0xffffffa0
   13840:	ldr	r3, [fp, #-236]	; 0xffffff14
   13844:	str	r3, [fp, #-92]	; 0xffffffa4
   13848:	ldr	r3, [fp, #-232]	; 0xffffff18
   1384c:	str	r3, [fp, #-88]	; 0xffffffa8
   13850:	str	r6, [fp, #-80]	; 0xffffffb0
   13854:	ldr	r3, [pc, #2108]	; 14098 <argp_parse@@Base+0xa28>
   13858:	ldr	r3, [r3]
   1385c:	str	r3, [fp, #-52]	; 0xffffffcc
   13860:	ldr	r3, [pc, #2100]	; 1409c <argp_parse@@Base+0xa2c>
   13864:	ldr	r3, [r3]
   13868:	str	r3, [fp, #-48]	; 0xffffffd0
   1386c:	sub	r3, fp, #160	; 0xa0
   13870:	str	r3, [fp, #-44]	; 0xffffffd4
   13874:	mov	r3, #1
   13878:	str	r3, [fp, #-100]	; 0xffffff9c
   1387c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13880:	ldr	r2, [fp, #-108]	; 0xffffff94
   13884:	cmp	r3, r2
   13888:	bcs	13a14 <argp_parse@@Base+0x3a4>
   1388c:	ldr	r2, [fp, #8]
   13890:	str	r2, [r3, #24]
   13894:	ldr	r5, [fp, #-112]	; 0xffffff90
   13898:	ldr	r3, [fp, #-108]	; 0xffffff94
   1389c:	cmp	r5, r3
   138a0:	bcs	13a20 <argp_parse@@Base+0x3b0>
   138a4:	ldr	r7, [pc, #2036]	; 140a0 <argp_parse@@Base+0xa30>
   138a8:	mov	r6, #0
   138ac:	b	139b8 <argp_parse@@Base+0x348>
   138b0:	ldr	r3, [fp, #-232]	; 0xffffff18
   138b4:	ldr	r0, [r3]
   138b8:	bl	141a4 <argp_parse@@Base+0xb34>
   138bc:	ldr	r3, [pc, #2000]	; 14094 <argp_parse@@Base+0xa24>
   138c0:	str	r0, [r3]
   138c4:	b	136c0 <argp_parse@@Base+0x50>
   138c8:	sub	sp, sp, #72	; 0x48
   138cc:	add	r5, sp, #8
   138d0:	sub	sp, sp, #40	; 0x28
   138d4:	add	r4, sp, #8
   138d8:	mov	r1, #0
   138dc:	str	r1, [r4]
   138e0:	str	r1, [r4, #4]
   138e4:	str	r1, [r4, #8]
   138e8:	str	r1, [r4, #12]
   138ec:	str	r1, [r4, #20]
   138f0:	str	r1, [r4, #24]
   138f4:	str	r5, [r4, #16]
   138f8:	mov	r2, #64	; 0x40
   138fc:	mov	r0, r5
   13900:	bl	11808 <memset@plt>
   13904:	cmp	r8, #0
   13908:	addne	r3, r5, #16
   1390c:	strne	r8, [r5]
   13910:	moveq	r3, r5
   13914:	ldr	r2, [pc, #1928]	; 140a4 <argp_parse@@Base+0xa34>
   13918:	str	r2, [r3]
   1391c:	ldr	r2, [pc, #1924]	; 140a8 <argp_parse@@Base+0xa38>
   13920:	ldr	r2, [r2]
   13924:	cmp	r2, #0
   13928:	beq	13948 <argp_parse@@Base+0x2d8>
   1392c:	add	r2, r3, #32
   13930:	ldr	r1, [pc, #1908]	; 140ac <argp_parse@@Base+0xa3c>
   13934:	str	r1, [r3, #16]
   13938:	mov	r3, #0
   1393c:	str	r3, [r2]
   13940:	mov	r8, r4
   13944:	b	136c8 <argp_parse@@Base+0x58>
   13948:	ldr	r2, [pc, #1888]	; 140b0 <argp_parse@@Base+0xa40>
   1394c:	ldr	r2, [r2]
   13950:	cmp	r2, #0
   13954:	addeq	r2, r3, #16
   13958:	bne	1392c <argp_parse@@Base+0x2bc>
   1395c:	b	13938 <argp_parse@@Base+0x2c8>
   13960:	ldr	r3, [fp, #-240]	; 0xffffff10
   13964:	cmp	r3, #0
   13968:	addne	sl, sl, #1
   1396c:	strne	sl, [fp, #-208]	; 0xffffff30
   13970:	movne	r3, #43	; 0x2b
   13974:	strbne	r3, [r7, r5]
   13978:	b	137e8 <argp_parse@@Base+0x178>
   1397c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13980:	str	r3, [fp, #-108]	; 0xffffff94
   13984:	b	13828 <argp_parse@@Base+0x1b8>
   13988:	mov	r3, r6
   1398c:	mov	r2, r7
   13990:	sub	r1, fp, #96	; 0x60
   13994:	mov	r0, r5
   13998:	bl	13088 <__assert_fail@plt+0x1700>
   1399c:	add	r5, r5, #36	; 0x24
   139a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   139a4:	cmp	r5, r3
   139a8:	bcs	13a04 <argp_parse@@Base+0x394>
   139ac:	cmp	r0, #7
   139b0:	cmpne	r0, #0
   139b4:	bne	13a04 <argp_parse@@Base+0x394>
   139b8:	ldr	r3, [r5, #16]
   139bc:	cmp	r3, #0
   139c0:	ldrne	r2, [r5, #20]
   139c4:	ldrne	r3, [r3, #28]
   139c8:	ldrne	r3, [r3, r2, lsl #2]
   139cc:	strne	r3, [r5, #24]
   139d0:	ldr	r3, [r5]
   139d4:	cmp	r3, #0
   139d8:	bne	13988 <argp_parse@@Base+0x318>
   139dc:	ldr	r3, [r5, #4]
   139e0:	ldr	r3, [r3, #16]
   139e4:	cmp	r3, #0
   139e8:	beq	13988 <argp_parse@@Base+0x318>
   139ec:	ldr	r3, [r3]
   139f0:	cmp	r3, #0
   139f4:	ldrne	r3, [r5, #28]
   139f8:	ldrne	r2, [r5, #24]
   139fc:	strne	r2, [r3]
   13a00:	b	13988 <argp_parse@@Base+0x318>
   13a04:	mov	r4, r0
   13a08:	cmp	r0, #7
   13a0c:	beq	13a20 <argp_parse@@Base+0x3b0>
   13a10:	b	13a18 <argp_parse@@Base+0x3a8>
   13a14:	mov	r4, #0
   13a18:	cmp	r4, #0
   13a1c:	bne	13ee0 <argp_parse@@Base+0x870>
   13a20:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13a24:	tst	r3, #2
   13a28:	moveq	r3, #1
   13a2c:	streq	r3, [fp, #-144]	; 0xffffff70
   13a30:	beq	13a5c <argp_parse@@Base+0x3ec>
   13a34:	mov	r2, #0
   13a38:	str	r2, [fp, #-144]	; 0xffffff70
   13a3c:	tst	r3, #1
   13a40:	beq	13a5c <argp_parse@@Base+0x3ec>
   13a44:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13a48:	sub	r3, r3, #4
   13a4c:	str	r3, [fp, #-88]	; 0xffffffa8
   13a50:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13a54:	add	r3, r3, #1
   13a58:	str	r3, [fp, #-92]	; 0xffffffa4
   13a5c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13a60:	ldr	r2, [fp, #-232]	; 0xffffff18
   13a64:	cmp	r2, r3
   13a68:	beq	13a88 <argp_parse@@Base+0x418>
   13a6c:	ldr	r3, [pc, #1568]	; 14094 <argp_parse@@Base+0xa24>
   13a70:	ldr	r3, [r3]
   13a74:	str	r3, [fp, #-56]	; 0xffffffc8
   13a78:	mov	r6, #0
   13a7c:	mov	sl, #1
   13a80:	mvn	r9, #0
   13a84:	b	13cf8 <argp_parse@@Base+0x688>
   13a88:	ldr	r0, [r2]
   13a8c:	cmp	r0, #0
   13a90:	beq	13a6c <argp_parse@@Base+0x3fc>
   13a94:	bl	141a4 <argp_parse@@Base+0xb34>
   13a98:	str	r0, [fp, #-56]	; 0xffffffc8
   13a9c:	b	13a78 <argp_parse@@Base+0x408>
   13aa0:	ldr	r3, [fp, #-84]	; 0xffffffac
   13aa4:	str	r3, [fp, #-148]	; 0xffffff6c
   13aa8:	str	r9, [fp, #-140]	; 0xffffff74
   13aac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13ab0:	tst	r3, #64	; 0x40
   13ab4:	beq	13b80 <argp_parse@@Base+0x510>
   13ab8:	sub	r3, fp, #148	; 0x94
   13abc:	str	r3, [sp, #4]
   13ac0:	str	r6, [sp]
   13ac4:	ldr	r3, [fp, #-152]	; 0xffffff68
   13ac8:	ldr	r2, [fp, #-156]	; 0xffffff64
   13acc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13ad0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13ad4:	bl	14340 <argp_parse@@Base+0xcd0>
   13ad8:	mov	r5, r0
   13adc:	ldr	r4, [fp, #-148]	; 0xffffff6c
   13ae0:	str	r4, [fp, #-84]	; 0xffffffac
   13ae4:	cmn	r5, #1
   13ae8:	beq	13ba8 <argp_parse@@Base+0x538>
   13aec:	cmp	r5, #63	; 0x3f
   13af0:	beq	13bd4 <argp_parse@@Base+0x564>
   13af4:	cmp	r5, #1
   13af8:	beq	13c0c <argp_parse@@Base+0x59c>
   13afc:	ldr	r4, [fp, #-136]	; 0xffffff78
   13b00:	asrs	r3, r5, #24
   13b04:	bne	13cb8 <argp_parse@@Base+0x648>
   13b08:	mov	r1, r5
   13b0c:	ldr	r0, [fp, #-156]	; 0xffffff64
   13b10:	bl	117c0 <strchr@plt>
   13b14:	subs	r1, r0, #0
   13b18:	beq	13b68 <argp_parse@@Base+0x4f8>
   13b1c:	ldr	r0, [fp, #-112]	; 0xffffff90
   13b20:	ldr	r2, [fp, #-108]	; 0xffffff94
   13b24:	cmp	r2, r0
   13b28:	bls	13b68 <argp_parse@@Base+0x4f8>
   13b2c:	ldr	r3, [r0, #8]
   13b30:	cmp	r1, r3
   13b34:	bcc	13b50 <argp_parse@@Base+0x4e0>
   13b38:	add	r0, r0, #36	; 0x24
   13b3c:	cmp	r2, r0
   13b40:	bls	13b68 <argp_parse@@Base+0x4f8>
   13b44:	ldr	r3, [r0, #8]
   13b48:	cmp	r1, r3
   13b4c:	bcs	13b38 <argp_parse@@Base+0x4c8>
   13b50:	mov	r3, r4
   13b54:	mov	r2, r5
   13b58:	sub	r1, fp, #96	; 0x60
   13b5c:	bl	13088 <__assert_fail@plt+0x1700>
   13b60:	cmp	r0, #7
   13b64:	bne	13cf0 <argp_parse@@Base+0x680>
   13b68:	ldr	r3, [pc, #1348]	; 140b4 <argp_parse@@Base+0xa44>
   13b6c:	mov	r2, r5
   13b70:	ldr	r1, [pc, #1344]	; 140b8 <argp_parse@@Base+0xa48>
   13b74:	sub	r0, fp, #96	; 0x60
   13b78:	bl	17f9c <argp_error@@Base>
   13b7c:	b	13d98 <argp_parse@@Base+0x728>
   13b80:	sub	r3, fp, #148	; 0x94
   13b84:	str	r3, [sp, #4]
   13b88:	str	r6, [sp]
   13b8c:	ldr	r3, [fp, #-152]	; 0xffffff68
   13b90:	ldr	r2, [fp, #-156]	; 0xffffff64
   13b94:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13b98:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13b9c:	bl	142e4 <argp_parse@@Base+0xc74>
   13ba0:	mov	r5, r0
   13ba4:	b	13adc <argp_parse@@Base+0x46c>
   13ba8:	str	r6, [fp, #-100]	; 0xffffff9c
   13bac:	cmp	r4, #1
   13bb0:	ble	13d20 <argp_parse@@Base+0x6b0>
   13bb4:	sub	r3, r4, #-1073741823	; 0xc0000001
   13bb8:	ldr	r1, [pc, #1276]	; 140bc <argp_parse@@Base+0xa4c>
   13bbc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13bc0:	ldr	r0, [r2, r3, lsl #2]
   13bc4:	bl	11574 <strcmp@plt>
   13bc8:	cmp	r0, #0
   13bcc:	streq	r4, [fp, #-72]	; 0xffffffb8
   13bd0:	b	13d20 <argp_parse@@Base+0x6b0>
   13bd4:	ldr	r3, [fp, #-140]	; 0xffffff74
   13bd8:	cmn	r3, #1
   13bdc:	beq	13afc <argp_parse@@Base+0x48c>
   13be0:	mov	r3, #0
   13be4:	b	13da8 <argp_parse@@Base+0x738>
   13be8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13bec:	tst	r2, #4
   13bf0:	movne	r3, #1
   13bf4:	bne	13da8 <argp_parse@@Base+0x738>
   13bf8:	add	r2, r3, #1
   13bfc:	str	r2, [fp, #-84]	; 0xffffffac
   13c00:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13c04:	ldr	r3, [r2, r3, lsl #2]
   13c08:	str	r3, [fp, #-136]	; 0xffffff78
   13c0c:	ldr	r7, [fp, #-136]	; 0xffffff78
   13c10:	ldr	r8, [fp, #-84]	; 0xffffffac
   13c14:	sub	r8, r8, #1
   13c18:	str	r8, [fp, #-84]	; 0xffffffac
   13c1c:	ldr	r5, [fp, #-112]	; 0xffffff90
   13c20:	ldr	r3, [fp, #-108]	; 0xffffff94
   13c24:	cmp	r3, r5
   13c28:	bhi	13c74 <argp_parse@@Base+0x604>
   13c2c:	b	13cb0 <argp_parse@@Base+0x640>
   13c30:	ldr	r3, [fp, #-84]	; 0xffffffac
   13c34:	sub	r3, r3, #1
   13c38:	str	r3, [fp, #-84]	; 0xffffffac
   13c3c:	mov	r3, r6
   13c40:	ldr	r2, [pc, #1144]	; 140c0 <argp_parse@@Base+0xa50>
   13c44:	sub	r1, fp, #96	; 0x60
   13c48:	mov	r0, r5
   13c4c:	bl	13088 <__assert_fail@plt+0x1700>
   13c50:	add	r5, r5, #36	; 0x24
   13c54:	ldr	r3, [fp, #-108]	; 0xffffff94
   13c58:	cmp	r5, r3
   13c5c:	movcs	r3, #0
   13c60:	movcc	r3, #1
   13c64:	cmp	r0, #7
   13c68:	movne	r3, #0
   13c6c:	cmp	r3, #0
   13c70:	beq	14054 <argp_parse@@Base+0x9e4>
   13c74:	ldr	r3, [fp, #-84]	; 0xffffffac
   13c78:	add	r3, r3, #1
   13c7c:	str	r3, [fp, #-84]	; 0xffffffac
   13c80:	mov	r3, r7
   13c84:	mov	r2, r6
   13c88:	sub	r1, fp, #96	; 0x60
   13c8c:	mov	r0, r5
   13c90:	bl	13088 <__assert_fail@plt+0x1700>
   13c94:	cmp	r0, #7
   13c98:	beq	13c30 <argp_parse@@Base+0x5c0>
   13c9c:	add	r5, r5, #36	; 0x24
   13ca0:	cmp	r0, #0
   13ca4:	beq	14064 <argp_parse@@Base+0x9f4>
   13ca8:	cmp	r0, #7
   13cac:	bne	13cf0 <argp_parse@@Base+0x680>
   13cb0:	mov	r5, #1
   13cb4:	b	13d98 <argp_parse@@Base+0x728>
   13cb8:	ands	r1, r5, #8388608	; 0x800000
   13cbc:	movne	r1, #-16777216	; 0xff000000
   13cc0:	bic	r2, r5, #-16777216	; 0xff000000
   13cc4:	add	r0, r3, r3, lsl #3
   13cc8:	lsl	r0, r0, #2
   13ccc:	sub	r0, r0, #36	; 0x24
   13cd0:	mov	r3, r4
   13cd4:	orr	r2, r2, r1
   13cd8:	sub	r1, fp, #96	; 0x60
   13cdc:	ldr	ip, [fp, #-112]	; 0xffffff90
   13ce0:	add	r0, ip, r0
   13ce4:	bl	13088 <__assert_fail@plt+0x1700>
   13ce8:	cmp	r0, #7
   13cec:	beq	13d38 <argp_parse@@Base+0x6c8>
   13cf0:	cmp	r0, #0
   13cf4:	bne	13e48 <argp_parse@@Base+0x7d8>
   13cf8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13cfc:	cmp	r3, #0
   13d00:	beq	13d14 <argp_parse@@Base+0x6a4>
   13d04:	ldr	r2, [fp, #-84]	; 0xffffffac
   13d08:	cmp	r3, r2
   13d0c:	strgt	r6, [fp, #-72]	; 0xffffffb8
   13d10:	ble	13d20 <argp_parse@@Base+0x6b0>
   13d14:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13d18:	cmp	r3, #0
   13d1c:	bne	13aa0 <argp_parse@@Base+0x430>
   13d20:	ldr	r3, [fp, #-84]	; 0xffffffac
   13d24:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13d28:	cmp	r3, r2
   13d2c:	blt	13be8 <argp_parse@@Base+0x578>
   13d30:	mov	r3, #1
   13d34:	b	13da8 <argp_parse@@Base+0x738>
   13d38:	ldr	r3, [fp, #-152]	; 0xffffff68
   13d3c:	ldr	r2, [r3, #12]
   13d40:	cmp	r2, r5
   13d44:	beq	13d78 <argp_parse@@Base+0x708>
   13d48:	ldr	r2, [r3]
   13d4c:	cmp	r2, #0
   13d50:	beq	13e40 <argp_parse@@Base+0x7d0>
   13d54:	add	r3, r3, #16
   13d58:	ldr	r2, [r3, #12]
   13d5c:	cmp	r2, r5
   13d60:	beq	13d78 <argp_parse@@Base+0x708>
   13d64:	ldr	r2, [r3]
   13d68:	cmp	r2, #0
   13d6c:	bne	13d54 <argp_parse@@Base+0x6e4>
   13d70:	ldr	r2, [pc, #844]	; 140c4 <argp_parse@@Base+0xa54>
   13d74:	b	13d88 <argp_parse@@Base+0x718>
   13d78:	ldr	r2, [r3]
   13d7c:	ldr	r3, [pc, #832]	; 140c4 <argp_parse@@Base+0xa54>
   13d80:	cmp	r2, #0
   13d84:	moveq	r2, r3
   13d88:	ldr	r3, [pc, #804]	; 140b4 <argp_parse@@Base+0xa44>
   13d8c:	ldr	r1, [pc, #820]	; 140c8 <argp_parse@@Base+0xa58>
   13d90:	sub	r0, fp, #96	; 0x60
   13d94:	bl	17f9c <argp_error@@Base>
   13d98:	add	r5, r5, #1
   13d9c:	bics	r3, r5, #2
   13da0:	moveq	r3, #1
   13da4:	movne	r3, #0
   13da8:	cmp	r3, #0
   13dac:	moveq	r4, #7
   13db0:	beq	13e4c <argp_parse@@Base+0x7dc>
   13db4:	ldr	r3, [fp, #-84]	; 0xffffffac
   13db8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13dbc:	cmp	r3, r2
   13dc0:	beq	13eec <argp_parse@@Base+0x87c>
   13dc4:	ldr	r2, [fp, #4]
   13dc8:	cmp	r2, #0
   13dcc:	strne	r3, [r2]
   13dd0:	beq	13fe8 <argp_parse@@Base+0x978>
   13dd4:	ldr	r5, [fp, #-108]	; 0xffffff94
   13dd8:	sub	r5, r5, #36	; 0x24
   13ddc:	ldr	r3, [fp, #-112]	; 0xffffff90
   13de0:	cmp	r5, r3
   13de4:	bcc	14024 <argp_parse@@Base+0x9b4>
   13de8:	ldr	r7, [pc, #732]	; 140cc <argp_parse@@Base+0xa5c>
   13dec:	mov	r6, #0
   13df0:	mov	r3, r6
   13df4:	mov	r2, r7
   13df8:	sub	r1, fp, #96	; 0x60
   13dfc:	mov	r0, r5
   13e00:	bl	13088 <__assert_fail@plt+0x1700>
   13e04:	sub	r5, r5, #36	; 0x24
   13e08:	ldr	r3, [fp, #-112]	; 0xffffff90
   13e0c:	cmp	r5, r3
   13e10:	bcc	13e20 <argp_parse@@Base+0x7b0>
   13e14:	cmp	r0, #7
   13e18:	cmpne	r0, #0
   13e1c:	beq	13df0 <argp_parse@@Base+0x780>
   13e20:	mov	r4, r0
   13e24:	cmp	r0, #7
   13e28:	moveq	r4, #0
   13e2c:	ldr	r5, [fp, #-108]	; 0xffffff94
   13e30:	sub	r5, r5, #36	; 0x24
   13e34:	cmp	r3, r5
   13e38:	bls	13ea4 <argp_parse@@Base+0x834>
   13e3c:	b	13ed8 <argp_parse@@Base+0x868>
   13e40:	ldr	r2, [pc, #636]	; 140c4 <argp_parse@@Base+0xa54>
   13e44:	b	13d88 <argp_parse@@Base+0x718>
   13e48:	mov	r4, r0
   13e4c:	cmp	r4, #7
   13e50:	beq	1400c <argp_parse@@Base+0x99c>
   13e54:	ldr	r5, [fp, #-112]	; 0xffffff90
   13e58:	ldr	r3, [fp, #-108]	; 0xffffff94
   13e5c:	cmp	r3, r5
   13e60:	bls	13e90 <argp_parse@@Base+0x820>
   13e64:	ldr	r7, [pc, #612]	; 140d0 <argp_parse@@Base+0xa60>
   13e68:	mov	r6, #0
   13e6c:	mov	r3, r6
   13e70:	mov	r2, r7
   13e74:	sub	r1, fp, #96	; 0x60
   13e78:	mov	r0, r5
   13e7c:	bl	13088 <__assert_fail@plt+0x1700>
   13e80:	add	r5, r5, #36	; 0x24
   13e84:	ldr	r3, [fp, #-108]	; 0xffffff94
   13e88:	cmp	r5, r3
   13e8c:	bcc	13e6c <argp_parse@@Base+0x7fc>
   13e90:	ldr	r5, [fp, #-108]	; 0xffffff94
   13e94:	sub	r5, r5, #36	; 0x24
   13e98:	ldr	r3, [fp, #-112]	; 0xffffff90
   13e9c:	cmp	r3, r5
   13ea0:	bhi	13ed0 <argp_parse@@Base+0x860>
   13ea4:	ldr	r7, [pc, #552]	; 140d4 <argp_parse@@Base+0xa64>
   13ea8:	mov	r6, #0
   13eac:	mov	r3, r6
   13eb0:	mov	r2, r7
   13eb4:	sub	r1, fp, #96	; 0x60
   13eb8:	mov	r0, r5
   13ebc:	bl	13088 <__assert_fail@plt+0x1700>
   13ec0:	sub	r5, r5, #36	; 0x24
   13ec4:	ldr	r3, [fp, #-112]	; 0xffffff90
   13ec8:	cmp	r5, r3
   13ecc:	bcs	13eac <argp_parse@@Base+0x83c>
   13ed0:	cmp	r4, #7
   13ed4:	moveq	r4, #22
   13ed8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13edc:	bl	14264 <argp_parse@@Base+0xbf4>
   13ee0:	mov	r0, r4
   13ee4:	sub	sp, fp, #32
   13ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13eec:	ldr	r6, [fp, #-112]	; 0xffffff90
   13ef0:	ldr	r5, [fp, #-108]	; 0xffffff94
   13ef4:	cmp	r6, r5
   13ef8:	bcs	1402c <argp_parse@@Base+0x9bc>
   13efc:	mov	r4, #0
   13f00:	ldr	r8, [pc, #464]	; 140d8 <argp_parse@@Base+0xa68>
   13f04:	mov	r7, r4
   13f08:	mov	r0, r4
   13f0c:	b	13f2c <argp_parse@@Base+0x8bc>
   13f10:	add	r6, r6, #36	; 0x24
   13f14:	ldr	r5, [fp, #-108]	; 0xffffff94
   13f18:	cmp	r6, r5
   13f1c:	bcs	13f58 <argp_parse@@Base+0x8e8>
   13f20:	cmp	r0, #7
   13f24:	cmpne	r0, #0
   13f28:	bne	13f50 <argp_parse@@Base+0x8e0>
   13f2c:	ldr	r3, [r6, #12]
   13f30:	cmp	r3, #0
   13f34:	bne	13f10 <argp_parse@@Base+0x8a0>
   13f38:	mov	r3, r7
   13f3c:	mov	r2, r8
   13f40:	sub	r1, fp, #96	; 0x60
   13f44:	mov	r0, r6
   13f48:	bl	13088 <__assert_fail@plt+0x1700>
   13f4c:	b	13f10 <argp_parse@@Base+0x8a0>
   13f50:	mov	r4, r0
   13f54:	b	13fbc <argp_parse@@Base+0x94c>
   13f58:	mov	r4, r0
   13f5c:	sub	r5, r5, #36	; 0x24
   13f60:	ldr	r3, [fp, #-112]	; 0xffffff90
   13f64:	cmp	r3, r5
   13f68:	bhi	13fbc <argp_parse@@Base+0x94c>
   13f6c:	cmp	r0, #0
   13f70:	cmpne	r0, #7
   13f74:	bne	13fbc <argp_parse@@Base+0x94c>
   13f78:	ldr	r7, [pc, #348]	; 140dc <argp_parse@@Base+0xa6c>
   13f7c:	mov	r6, #0
   13f80:	mov	r3, r6
   13f84:	mov	r2, r7
   13f88:	sub	r1, fp, #96	; 0x60
   13f8c:	mov	r0, r5
   13f90:	bl	13088 <__assert_fail@plt+0x1700>
   13f94:	sub	r5, r5, #36	; 0x24
   13f98:	ldr	r3, [fp, #-112]	; 0xffffff90
   13f9c:	cmp	r5, r3
   13fa0:	bcc	13fb8 <argp_parse@@Base+0x948>
   13fa4:	cmp	r0, #7
   13fa8:	cmpne	r0, #0
   13fac:	beq	13f80 <argp_parse@@Base+0x910>
   13fb0:	mov	r4, r0
   13fb4:	b	13fbc <argp_parse@@Base+0x94c>
   13fb8:	mov	r4, r0
   13fbc:	cmp	r4, #7
   13fc0:	beq	14040 <argp_parse@@Base+0x9d0>
   13fc4:	ldr	r3, [fp, #4]
   13fc8:	cmp	r3, #0
   13fcc:	beq	14084 <argp_parse@@Base+0xa14>
   13fd0:	ldr	r3, [fp, #-84]	; 0xffffffac
   13fd4:	ldr	r2, [fp, #4]
   13fd8:	str	r3, [r2]
   13fdc:	cmp	r4, #0
   13fe0:	beq	13dd4 <argp_parse@@Base+0x764>
   13fe4:	b	13e4c <argp_parse@@Base+0x7dc>
   13fe8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13fec:	tst	r3, #2
   13ff0:	bne	1400c <argp_parse@@Base+0x99c>
   13ff4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13ff8:	cmp	r0, #0
   13ffc:	beq	1400c <argp_parse@@Base+0x99c>
   14000:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14004:	ldr	r1, [pc, #212]	; 140e0 <argp_parse@@Base+0xa70>
   14008:	bl	117d8 <fprintf@plt>
   1400c:	mov	r2, #260	; 0x104
   14010:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14014:	sub	r0, fp, #96	; 0x60
   14018:	bl	17ee0 <argp_state_help@@Base>
   1401c:	mov	r4, #7
   14020:	b	13e54 <argp_parse@@Base+0x7e4>
   14024:	mov	r4, #0
   14028:	b	13ed0 <argp_parse@@Base+0x860>
   1402c:	sub	r5, r5, #36	; 0x24
   14030:	cmp	r6, r5
   14034:	movhi	r4, #0
   14038:	bls	13f78 <argp_parse@@Base+0x908>
   1403c:	b	13fc4 <argp_parse@@Base+0x954>
   14040:	ldr	r3, [fp, #4]
   14044:	cmp	r3, #0
   14048:	movne	r4, #0
   1404c:	bne	13fd0 <argp_parse@@Base+0x960>
   14050:	b	13dd4 <argp_parse@@Base+0x764>
   14054:	cmp	r0, #0
   14058:	bne	13ca8 <argp_parse@@Base+0x638>
   1405c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14060:	str	r3, [fp, #-84]	; 0xffffffac
   14064:	ldr	r3, [fp, #-84]	; 0xffffffac
   14068:	cmp	r8, r3
   1406c:	sublt	r8, r3, r8
   14070:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   14074:	addlt	r8, r3, r8
   14078:	strlt	r8, [r5, #-24]	; 0xffffffe8
   1407c:	strge	sl, [fp, #-100]	; 0xffffff9c
   14080:	b	13cf8 <argp_parse@@Base+0x688>
   14084:	cmp	r4, #0
   14088:	beq	13dd4 <argp_parse@@Base+0x764>
   1408c:	b	13e54 <argp_parse@@Base+0x7e4>
   14090:	andeq	fp, r2, r4, ror #9
   14094:	ldrdeq	fp, [r2], -r8
   14098:	andeq	fp, r2, r8, ror #9
   1409c:	andeq	fp, r2, ip, ror #9
   140a0:	tsteq	r0, r3
   140a4:	andeq	r9, r1, r0, lsr #31
   140a8:	andeq	fp, r2, r4, asr #10
   140ac:			; <UNDEFINED> instruction: 0x00019fbc
   140b0:	andeq	fp, r2, r0, lsl #10
   140b4:	ldrdeq	r9, [r1], -r8
   140b8:	strdeq	sl, [r1], -r0
   140bc:	andeq	sl, r1, ip, ror #1
   140c0:	tsteq	r0, r6
   140c4:	andeq	sl, r1, r8, ror #1
   140c8:	strdeq	sl, [r1], -r8
   140cc:	tsteq	r0, r4
   140d0:	tsteq	r0, r5
   140d4:	tsteq	r0, r7
   140d8:	tsteq	r0, r2
   140dc:	tsteq	r0, r1
   140e0:	andeq	sl, r1, r4, lsl #2
   140e4:	cmp	r1, #0
   140e8:	beq	14134 <argp_parse@@Base+0xac4>
   140ec:	ldr	r2, [r1, #52]	; 0x34
   140f0:	ldr	r3, [r2, #48]	; 0x30
   140f4:	ldr	r1, [r2, #52]	; 0x34
   140f8:	cmp	r3, r1
   140fc:	bcs	1413c <argp_parse@@Base+0xacc>
   14100:	ldr	r2, [r3, #4]
   14104:	cmp	r0, r2
   14108:	beq	14124 <argp_parse@@Base+0xab4>
   1410c:	add	r3, r3, #36	; 0x24
   14110:	cmp	r3, r1
   14114:	bcs	1412c <argp_parse@@Base+0xabc>
   14118:	ldr	r2, [r3, #4]
   1411c:	cmp	r2, r0
   14120:	bne	1410c <argp_parse@@Base+0xa9c>
   14124:	ldr	r0, [r3, #24]
   14128:	bx	lr
   1412c:	mov	r0, #0
   14130:	bx	lr
   14134:	mov	r0, #0
   14138:	bx	lr
   1413c:	mov	r0, #0
   14140:	bx	lr
   14144:	push	{lr}		; (str lr, [sp, #-4]!)
   14148:	sub	sp, sp, #12
   1414c:	ldr	r3, [pc, #28]	; 14170 <argp_parse@@Base+0xb00>
   14150:	ldr	r1, [r3]
   14154:	ldr	r3, [r3, #4]
   14158:	str	r3, [sp]
   1415c:	ldr	r3, [pc, #16]	; 14174 <argp_parse@@Base+0xb04>
   14160:	ldr	r2, [pc, #16]	; 14178 <argp_parse@@Base+0xb08>
   14164:	bl	14754 <argp_parse@@Base+0x10e4>
   14168:	add	sp, sp, #12
   1416c:	pop	{pc}		; (ldr pc, [sp], #4)
   14170:	andeq	fp, r2, r4, lsl #10
   14174:	andeq	sl, r1, ip, ror #3
   14178:	strdeq	sl, [r1], -ip
   1417c:	ldr	r2, [pc, #20]	; 14198 <argp_parse@@Base+0xb28>
   14180:	ldr	r3, [pc, #20]	; 1419c <argp_parse@@Base+0xb2c>
   14184:	str	r2, [r3]
   14188:	ldr	r3, [pc, #16]	; 141a0 <argp_parse@@Base+0xb30>
   1418c:	str	r0, [r3]
   14190:	str	r1, [r3, #4]
   14194:	bx	lr
   14198:	andeq	r4, r1, r4, asr #2
   1419c:	andeq	fp, r2, r0, lsl #10
   141a0:	andeq	fp, r2, r4, lsl #10
   141a4:	ldrb	r3, [r0]
   141a8:	cmp	r3, #47	; 0x2f
   141ac:	bne	141bc <argp_parse@@Base+0xb4c>
   141b0:	ldrb	r3, [r0, #1]!
   141b4:	cmp	r3, #47	; 0x2f
   141b8:	beq	141b0 <argp_parse@@Base+0xb40>
   141bc:	ldrb	r2, [r0]
   141c0:	cmp	r2, #0
   141c4:	bxeq	lr
   141c8:	push	{lr}		; (str lr, [sp, #-4]!)
   141cc:	mov	r1, r0
   141d0:	mov	r3, #0
   141d4:	mov	lr, #1
   141d8:	mov	ip, r3
   141dc:	b	141ec <argp_parse@@Base+0xb7c>
   141e0:	ldrb	r2, [r1, #1]!
   141e4:	cmp	r2, #0
   141e8:	beq	14208 <argp_parse@@Base+0xb98>
   141ec:	cmp	r2, #47	; 0x2f
   141f0:	moveq	r3, lr
   141f4:	beq	141e0 <argp_parse@@Base+0xb70>
   141f8:	cmp	r3, #0
   141fc:	movne	r0, r1
   14200:	movne	r3, ip
   14204:	b	141e0 <argp_parse@@Base+0xb70>
   14208:	pop	{pc}		; (ldr pc, [sp], #4)
   1420c:	push	{r4, lr}
   14210:	mov	r4, r0
   14214:	bl	117b4 <strlen@plt>
   14218:	cmp	r0, #1
   1421c:	popls	{r4, pc}
   14220:	sub	r3, r0, #1
   14224:	add	r2, r4, r3
   14228:	ldrb	r1, [r4, r3]
   1422c:	cmp	r1, #47	; 0x2f
   14230:	popne	{r4, pc}
   14234:	cmp	r3, #1
   14238:	beq	1425c <argp_parse@@Base+0xbec>
   1423c:	sub	r0, r3, #1
   14240:	ldrb	r1, [r2, #-1]!
   14244:	cmp	r1, #47	; 0x2f
   14248:	beq	14254 <argp_parse@@Base+0xbe4>
   1424c:	mov	r0, r3
   14250:	pop	{r4, pc}
   14254:	mov	r3, r0
   14258:	b	14234 <argp_parse@@Base+0xbc4>
   1425c:	mov	r0, #1
   14260:	pop	{r4, pc}
   14264:	push	{r4, r5, lr}
   14268:	sub	sp, sp, #12
   1426c:	mov	r5, r0
   14270:	bl	117f0 <__errno_location@plt>
   14274:	mov	r4, r0
   14278:	ldr	r3, [r0]
   1427c:	str	r3, [sp]
   14280:	str	r3, [sp, #4]
   14284:	mov	r3, #0
   14288:	str	r3, [r0]
   1428c:	mov	r0, r5
   14290:	bl	115e0 <free@plt>
   14294:	ldr	r3, [r4]
   14298:	cmp	r3, #0
   1429c:	moveq	r3, #4
   142a0:	movne	r3, #0
   142a4:	add	r2, sp, #8
   142a8:	add	r3, r2, r3
   142ac:	ldr	r3, [r3, #-8]
   142b0:	str	r3, [r4]
   142b4:	add	sp, sp, #12
   142b8:	pop	{r4, r5, pc}
   142bc:	push	{lr}		; (str lr, [sp, #-4]!)
   142c0:	sub	sp, sp, #20
   142c4:	mov	ip, #0
   142c8:	str	ip, [sp, #8]
   142cc:	str	ip, [sp, #4]
   142d0:	ldr	ip, [sp, #24]
   142d4:	str	ip, [sp]
   142d8:	bl	18c18 <argp_error@@Base+0xc7c>
   142dc:	add	sp, sp, #20
   142e0:	pop	{pc}		; (ldr pc, [sp], #4)
   142e4:	push	{lr}		; (str lr, [sp, #-4]!)
   142e8:	sub	sp, sp, #20
   142ec:	mov	ip, #0
   142f0:	str	ip, [sp, #12]
   142f4:	ldr	lr, [sp, #28]
   142f8:	str	lr, [sp, #8]
   142fc:	str	ip, [sp, #4]
   14300:	ldr	ip, [sp, #24]
   14304:	str	ip, [sp]
   14308:	bl	1869c <argp_error@@Base+0x700>
   1430c:	add	sp, sp, #20
   14310:	pop	{pc}		; (ldr pc, [sp], #4)
   14314:	push	{lr}		; (str lr, [sp, #-4]!)
   14318:	sub	sp, sp, #20
   1431c:	mov	ip, #0
   14320:	str	ip, [sp, #8]
   14324:	mov	ip, #1
   14328:	str	ip, [sp, #4]
   1432c:	ldr	ip, [sp, #24]
   14330:	str	ip, [sp]
   14334:	bl	18c18 <argp_error@@Base+0xc7c>
   14338:	add	sp, sp, #20
   1433c:	pop	{pc}		; (ldr pc, [sp], #4)
   14340:	push	{lr}		; (str lr, [sp, #-4]!)
   14344:	sub	sp, sp, #20
   14348:	mov	ip, #0
   1434c:	str	ip, [sp, #12]
   14350:	ldr	ip, [sp, #28]
   14354:	str	ip, [sp, #8]
   14358:	mov	ip, #1
   1435c:	str	ip, [sp, #4]
   14360:	ldr	ip, [sp, #24]
   14364:	str	ip, [sp]
   14368:	bl	1869c <argp_error@@Base+0x700>
   1436c:	add	sp, sp, #20
   14370:	pop	{pc}		; (ldr pc, [sp], #4)
   14374:	push	{r1, r2, r3}
   14378:	push	{lr}		; (str lr, [sp, #-4]!)
   1437c:	sub	sp, sp, #8
   14380:	add	r3, sp, #20
   14384:	str	r3, [sp, #4]
   14388:	ldr	r2, [sp, #16]
   1438c:	ldr	r1, [sp, #12]
   14390:	bl	116f4 <ioctl@plt>
   14394:	add	sp, sp, #8
   14398:	pop	{lr}		; (ldr lr, [sp], #4)
   1439c:	add	sp, sp, #12
   143a0:	bx	lr
   143a4:	push	{r4, r5, r6, lr}
   143a8:	subs	r4, r0, #0
   143ac:	beq	14424 <argp_parse@@Base+0xdb4>
   143b0:	mov	r1, #47	; 0x2f
   143b4:	mov	r0, r4
   143b8:	bl	118a4 <strrchr@plt>
   143bc:	cmp	r0, #0
   143c0:	addne	r5, r0, #1
   143c4:	moveq	r5, r4
   143c8:	sub	r3, r5, r4
   143cc:	cmp	r3, #6
   143d0:	ble	14410 <argp_parse@@Base+0xda0>
   143d4:	mov	r2, #7
   143d8:	ldr	r1, [pc, #96]	; 14440 <argp_parse@@Base+0xdd0>
   143dc:	sub	r0, r5, #7
   143e0:	bl	11958 <strncmp@plt>
   143e4:	cmp	r0, #0
   143e8:	bne	14410 <argp_parse@@Base+0xda0>
   143ec:	mov	r2, #3
   143f0:	ldr	r1, [pc, #76]	; 14444 <argp_parse@@Base+0xdd4>
   143f4:	mov	r0, r5
   143f8:	bl	11958 <strncmp@plt>
   143fc:	cmp	r0, #0
   14400:	addeq	r4, r5, #3
   14404:	ldreq	r3, [pc, #60]	; 14448 <argp_parse@@Base+0xdd8>
   14408:	streq	r4, [r3]
   1440c:	movne	r4, r5
   14410:	ldr	r3, [pc, #52]	; 1444c <argp_parse@@Base+0xddc>
   14414:	str	r4, [r3]
   14418:	ldr	r3, [pc, #48]	; 14450 <argp_parse@@Base+0xde0>
   1441c:	str	r4, [r3]
   14420:	pop	{r4, r5, r6, pc}
   14424:	ldr	r3, [pc, #40]	; 14454 <argp_parse@@Base+0xde4>
   14428:	ldr	r3, [r3]
   1442c:	mov	r2, #55	; 0x37
   14430:	mov	r1, #1
   14434:	ldr	r0, [pc, #28]	; 14458 <argp_parse@@Base+0xde8>
   14438:	bl	116dc <fwrite@plt>
   1443c:	bl	11964 <abort@plt>
   14440:	andeq	sl, r1, r4, asr #4
   14444:	andeq	sl, r1, ip, asr #4
   14448:	ldrdeq	fp, [r2], -r8
   1444c:	andeq	fp, r2, ip, lsl #10
   14450:	andeq	fp, r2, r4, ror #9
   14454:	andeq	fp, r2, r8, ror #9
   14458:	andeq	sl, r1, ip, lsl #4
   1445c:	push	{r4, r5, r6, lr}
   14460:	sub	sp, sp, #32
   14464:	mov	r4, r0
   14468:	ldr	r5, [sp, #48]	; 0x30
   1446c:	ldr	r6, [sp, #52]	; 0x34
   14470:	cmp	r1, #0
   14474:	beq	144fc <argp_parse@@Base+0xe8c>
   14478:	str	r3, [sp]
   1447c:	mov	r3, r2
   14480:	mov	r2, r1
   14484:	ldr	r1, [pc, #644]	; 14710 <argp_parse@@Base+0x10a0>
   14488:	bl	117d8 <fprintf@plt>
   1448c:	ldr	r3, [pc, #640]	; 14714 <argp_parse@@Base+0x10a4>
   14490:	ldr	r2, [pc, #640]	; 14718 <argp_parse@@Base+0x10a8>
   14494:	ldr	r1, [pc, #640]	; 1471c <argp_parse@@Base+0x10ac>
   14498:	mov	r0, r4
   1449c:	bl	117d8 <fprintf@plt>
   144a0:	mov	r1, r4
   144a4:	mov	r0, #10
   144a8:	bl	118bc <fputc@plt>
   144ac:	ldr	r2, [pc, #620]	; 14720 <argp_parse@@Base+0x10b0>
   144b0:	ldr	r1, [pc, #620]	; 14724 <argp_parse@@Base+0x10b4>
   144b4:	mov	r0, r4
   144b8:	bl	117d8 <fprintf@plt>
   144bc:	mov	r1, r4
   144c0:	mov	r0, #10
   144c4:	bl	118bc <fputc@plt>
   144c8:	cmp	r6, #9
   144cc:	ldrls	pc, [pc, r6, lsl #2]
   144d0:	b	146c0 <argp_parse@@Base+0x1050>
   144d4:	andeq	r4, r1, r8, lsl r5
   144d8:	andeq	r4, r1, r8, lsl #10
   144dc:	andeq	r4, r1, r0, lsr #10
   144e0:	andeq	r4, r1, r8, lsr r5
   144e4:	andeq	r4, r1, r8, asr r5
   144e8:	andeq	r4, r1, r0, lsl #11
   144ec:			; <UNDEFINED> instruction: 0x000145b0
   144f0:	andeq	r4, r1, r8, ror #11
   144f4:	andeq	r4, r1, r8, lsr #12
   144f8:	andeq	r4, r1, r0, ror r6
   144fc:	ldr	r1, [pc, #548]	; 14728 <argp_parse@@Base+0x10b8>
   14500:	bl	117d8 <fprintf@plt>
   14504:	b	1448c <argp_parse@@Base+0xe1c>
   14508:	ldr	r2, [r5]
   1450c:	ldr	r1, [pc, #536]	; 1472c <argp_parse@@Base+0x10bc>
   14510:	mov	r0, r4
   14514:	bl	117d8 <fprintf@plt>
   14518:	add	sp, sp, #32
   1451c:	pop	{r4, r5, r6, pc}
   14520:	ldr	r3, [r5, #4]
   14524:	ldr	r2, [r5]
   14528:	ldr	r1, [pc, #512]	; 14730 <argp_parse@@Base+0x10c0>
   1452c:	mov	r0, r4
   14530:	bl	117d8 <fprintf@plt>
   14534:	b	14518 <argp_parse@@Base+0xea8>
   14538:	ldr	r3, [r5, #4]
   1453c:	ldr	r2, [r5]
   14540:	ldr	r1, [r5, #8]
   14544:	str	r1, [sp]
   14548:	ldr	r1, [pc, #484]	; 14734 <argp_parse@@Base+0x10c4>
   1454c:	mov	r0, r4
   14550:	bl	117d8 <fprintf@plt>
   14554:	b	14518 <argp_parse@@Base+0xea8>
   14558:	ldr	r3, [r5, #4]
   1455c:	ldr	r2, [r5]
   14560:	ldr	r1, [r5, #12]
   14564:	str	r1, [sp, #4]
   14568:	ldr	r1, [r5, #8]
   1456c:	str	r1, [sp]
   14570:	ldr	r1, [pc, #448]	; 14738 <argp_parse@@Base+0x10c8>
   14574:	mov	r0, r4
   14578:	bl	117d8 <fprintf@plt>
   1457c:	b	14518 <argp_parse@@Base+0xea8>
   14580:	ldr	r3, [r5, #4]
   14584:	ldr	r2, [r5]
   14588:	ldr	r1, [r5, #16]
   1458c:	str	r1, [sp, #8]
   14590:	ldr	r1, [r5, #12]
   14594:	str	r1, [sp, #4]
   14598:	ldr	r1, [r5, #8]
   1459c:	str	r1, [sp]
   145a0:	ldr	r1, [pc, #404]	; 1473c <argp_parse@@Base+0x10cc>
   145a4:	mov	r0, r4
   145a8:	bl	117d8 <fprintf@plt>
   145ac:	b	14518 <argp_parse@@Base+0xea8>
   145b0:	ldr	r3, [r5, #4]
   145b4:	ldr	r2, [r5]
   145b8:	ldr	r1, [r5, #20]
   145bc:	str	r1, [sp, #12]
   145c0:	ldr	r1, [r5, #16]
   145c4:	str	r1, [sp, #8]
   145c8:	ldr	r1, [r5, #12]
   145cc:	str	r1, [sp, #4]
   145d0:	ldr	r1, [r5, #8]
   145d4:	str	r1, [sp]
   145d8:	ldr	r1, [pc, #352]	; 14740 <argp_parse@@Base+0x10d0>
   145dc:	mov	r0, r4
   145e0:	bl	117d8 <fprintf@plt>
   145e4:	b	14518 <argp_parse@@Base+0xea8>
   145e8:	ldr	r3, [r5, #4]
   145ec:	ldr	r2, [r5]
   145f0:	ldr	r1, [r5, #24]
   145f4:	str	r1, [sp, #16]
   145f8:	ldr	r1, [r5, #20]
   145fc:	str	r1, [sp, #12]
   14600:	ldr	r1, [r5, #16]
   14604:	str	r1, [sp, #8]
   14608:	ldr	r1, [r5, #12]
   1460c:	str	r1, [sp, #4]
   14610:	ldr	r1, [r5, #8]
   14614:	str	r1, [sp]
   14618:	ldr	r1, [pc, #292]	; 14744 <argp_parse@@Base+0x10d4>
   1461c:	mov	r0, r4
   14620:	bl	117d8 <fprintf@plt>
   14624:	b	14518 <argp_parse@@Base+0xea8>
   14628:	ldr	r3, [r5, #4]
   1462c:	ldr	r2, [r5]
   14630:	ldr	r1, [r5, #28]
   14634:	str	r1, [sp, #20]
   14638:	ldr	r1, [r5, #24]
   1463c:	str	r1, [sp, #16]
   14640:	ldr	r1, [r5, #20]
   14644:	str	r1, [sp, #12]
   14648:	ldr	r1, [r5, #16]
   1464c:	str	r1, [sp, #8]
   14650:	ldr	r1, [r5, #12]
   14654:	str	r1, [sp, #4]
   14658:	ldr	r1, [r5, #8]
   1465c:	str	r1, [sp]
   14660:	ldr	r1, [pc, #224]	; 14748 <argp_parse@@Base+0x10d8>
   14664:	mov	r0, r4
   14668:	bl	117d8 <fprintf@plt>
   1466c:	b	14518 <argp_parse@@Base+0xea8>
   14670:	ldr	r3, [r5, #4]
   14674:	ldr	r2, [r5]
   14678:	ldr	r1, [r5, #32]
   1467c:	str	r1, [sp, #24]
   14680:	ldr	r1, [r5, #28]
   14684:	str	r1, [sp, #20]
   14688:	ldr	r1, [r5, #24]
   1468c:	str	r1, [sp, #16]
   14690:	ldr	r1, [r5, #20]
   14694:	str	r1, [sp, #12]
   14698:	ldr	r1, [r5, #16]
   1469c:	str	r1, [sp, #8]
   146a0:	ldr	r1, [r5, #12]
   146a4:	str	r1, [sp, #4]
   146a8:	ldr	r1, [r5, #8]
   146ac:	str	r1, [sp]
   146b0:	ldr	r1, [pc, #148]	; 1474c <argp_parse@@Base+0x10dc>
   146b4:	mov	r0, r4
   146b8:	bl	117d8 <fprintf@plt>
   146bc:	b	14518 <argp_parse@@Base+0xea8>
   146c0:	ldr	r3, [r5, #4]
   146c4:	ldr	r2, [r5]
   146c8:	ldr	r1, [r5, #32]
   146cc:	str	r1, [sp, #24]
   146d0:	ldr	r1, [r5, #28]
   146d4:	str	r1, [sp, #20]
   146d8:	ldr	r1, [r5, #24]
   146dc:	str	r1, [sp, #16]
   146e0:	ldr	r1, [r5, #20]
   146e4:	str	r1, [sp, #12]
   146e8:	ldr	r1, [r5, #16]
   146ec:	str	r1, [sp, #8]
   146f0:	ldr	r1, [r5, #12]
   146f4:	str	r1, [sp, #4]
   146f8:	ldr	r1, [r5, #8]
   146fc:	str	r1, [sp]
   14700:	ldr	r1, [pc, #72]	; 14750 <argp_parse@@Base+0x10e0>
   14704:	mov	r0, r4
   14708:	bl	117d8 <fprintf@plt>
   1470c:	b	14518 <argp_parse@@Base+0xea8>
   14710:	andeq	sl, r1, r0, asr r2
   14714:	andeq	r0, r0, r6, ror #15
   14718:	andeq	sl, r1, r4, ror #4
   1471c:	andeq	sl, r1, r4, ror #10
   14720:	andeq	sl, r1, r8, ror #4
   14724:	andeq	sl, r1, ip, lsl #5
   14728:	andeq	sl, r1, ip, asr r2
   1472c:	andeq	sl, r1, r8, lsr r3
   14730:	andeq	sl, r1, r8, asr #6
   14734:	andeq	sl, r1, r0, ror #6
   14738:	andeq	sl, r1, ip, ror r3
   1473c:	muleq	r1, ip, r3
   14740:	andeq	sl, r1, r0, asr #7
   14744:	andeq	sl, r1, r8, ror #7
   14748:	andeq	sl, r1, r4, lsl r4
   1474c:	andeq	sl, r1, r4, asr #8
   14750:	andeq	sl, r1, r8, ror r4
   14754:	push	{r4, r5, lr}
   14758:	sub	sp, sp, #12
   1475c:	ldr	r5, [sp, #24]
   14760:	ldr	ip, [r5]
   14764:	cmp	ip, #0
   14768:	beq	14798 <argp_parse@@Base+0x1128>
   1476c:	mov	lr, r5
   14770:	mov	ip, #0
   14774:	add	ip, ip, #1
   14778:	ldr	r4, [lr, #4]!
   1477c:	cmp	r4, #0
   14780:	bne	14774 <argp_parse@@Base+0x1104>
   14784:	str	ip, [sp, #4]
   14788:	str	r5, [sp]
   1478c:	bl	1445c <argp_parse@@Base+0xdec>
   14790:	add	sp, sp, #12
   14794:	pop	{r4, r5, pc}
   14798:	mov	ip, #0
   1479c:	b	14784 <argp_parse@@Base+0x1114>
   147a0:	push	{r4, r5, lr}
   147a4:	sub	sp, sp, #52	; 0x34
   147a8:	ldr	r4, [sp, #64]	; 0x40
   147ac:	sub	r4, r4, #4
   147b0:	add	r5, sp, #4
   147b4:	mov	ip, #0
   147b8:	ldr	lr, [r4, #4]!
   147bc:	str	lr, [r5, #4]!
   147c0:	cmp	lr, #0
   147c4:	beq	147d4 <argp_parse@@Base+0x1164>
   147c8:	add	ip, ip, #1
   147cc:	cmp	ip, #10
   147d0:	bne	147b8 <argp_parse@@Base+0x1148>
   147d4:	str	ip, [sp, #4]
   147d8:	add	ip, sp, #8
   147dc:	str	ip, [sp]
   147e0:	bl	1445c <argp_parse@@Base+0xdec>
   147e4:	add	sp, sp, #52	; 0x34
   147e8:	pop	{r4, r5, pc}
   147ec:	push	{r3}		; (str r3, [sp, #-4]!)
   147f0:	push	{lr}		; (str lr, [sp, #-4]!)
   147f4:	sub	sp, sp, #16
   147f8:	add	r3, sp, #24
   147fc:	str	r3, [sp, #12]
   14800:	str	r3, [sp]
   14804:	ldr	r3, [sp, #20]
   14808:	bl	147a0 <argp_parse@@Base+0x1130>
   1480c:	add	sp, sp, #16
   14810:	pop	{lr}		; (ldr lr, [sp], #4)
   14814:	add	sp, sp, #4
   14818:	bx	lr
   1481c:	push	{r4, lr}
   14820:	ldr	r3, [pc, #52]	; 1485c <argp_parse@@Base+0x11ec>
   14824:	ldr	r1, [r3]
   14828:	mov	r0, #10
   1482c:	bl	118bc <fputc@plt>
   14830:	ldr	r1, [pc, #40]	; 14860 <argp_parse@@Base+0x11f0>
   14834:	ldr	r0, [pc, #40]	; 14864 <argp_parse@@Base+0x11f4>
   14838:	bl	11598 <printf@plt>
   1483c:	ldr	r2, [pc, #36]	; 14868 <argp_parse@@Base+0x11f8>
   14840:	ldr	r1, [pc, #36]	; 1486c <argp_parse@@Base+0x11fc>
   14844:	ldr	r0, [pc, #36]	; 14870 <argp_parse@@Base+0x1200>
   14848:	bl	11598 <printf@plt>
   1484c:	ldr	r1, [pc, #32]	; 14874 <argp_parse@@Base+0x1204>
   14850:	ldr	r0, [pc, #32]	; 14878 <argp_parse@@Base+0x1208>
   14854:	bl	11598 <printf@plt>
   14858:	pop	{r4, pc}
   1485c:	andeq	fp, r2, ip, ror #9
   14860:			; <UNDEFINED> instruction: 0x0001a4b4
   14864:	andeq	sl, r1, ip, asr #9
   14868:	andeq	sl, r1, r0, ror #9
   1486c:	strdeq	sl, [r1], -ip
   14870:	andeq	sl, r1, r8, lsl #10
   14874:	andeq	sl, r1, ip, lsl r5
   14878:	andeq	sl, r1, ip, lsr r5
   1487c:	push	{r4, lr}
   14880:	bl	14e9c <argp_parse@@Base+0x182c>
   14884:	cmp	r0, #0
   14888:	popne	{r4, pc}
   1488c:	bl	14e20 <argp_parse@@Base+0x17b0>
   14890:	push	{r4, lr}
   14894:	bl	14e9c <argp_parse@@Base+0x182c>
   14898:	cmp	r0, #0
   1489c:	popne	{r4, pc}
   148a0:	bl	14e20 <argp_parse@@Base+0x17b0>
   148a4:	push	{r4, lr}
   148a8:	bl	1487c <argp_parse@@Base+0x120c>
   148ac:	pop	{r4, pc}
   148b0:	push	{r4, r5, r6, lr}
   148b4:	mov	r5, r0
   148b8:	mov	r4, r1
   148bc:	bl	14ecc <argp_parse@@Base+0x185c>
   148c0:	cmp	r0, #0
   148c4:	popne	{r4, r5, r6, pc}
   148c8:	adds	r4, r4, #0
   148cc:	movne	r4, #1
   148d0:	cmp	r5, #0
   148d4:	orreq	r4, r4, #1
   148d8:	cmp	r4, #0
   148dc:	popeq	{r4, r5, r6, pc}
   148e0:	bl	14e20 <argp_parse@@Base+0x17b0>
   148e4:	push	{r4, lr}
   148e8:	cmp	r1, #0
   148ec:	orreq	r1, r1, #1
   148f0:	bl	14ecc <argp_parse@@Base+0x185c>
   148f4:	cmp	r0, #0
   148f8:	popne	{r4, pc}
   148fc:	bl	14e20 <argp_parse@@Base+0x17b0>
   14900:	push	{r4, r5, r6, lr}
   14904:	mov	r6, r0
   14908:	mov	r5, r1
   1490c:	mov	r4, r2
   14910:	bl	18cb0 <argp_error@@Base+0xd14>
   14914:	cmp	r0, #0
   14918:	popne	{r4, r5, r6, pc}
   1491c:	cmp	r6, #0
   14920:	beq	14930 <argp_parse@@Base+0x12c0>
   14924:	cmp	r5, #0
   14928:	cmpne	r4, #0
   1492c:	popeq	{r4, r5, r6, pc}
   14930:	bl	14e20 <argp_parse@@Base+0x17b0>
   14934:	push	{r4, lr}
   14938:	bl	14900 <argp_parse@@Base+0x1290>
   1493c:	pop	{r4, pc}
   14940:	push	{r4, lr}
   14944:	mov	ip, r1
   14948:	mov	r3, r2
   1494c:	cmp	r2, #0
   14950:	cmpne	r1, #0
   14954:	moveq	r3, #1
   14958:	moveq	ip, r3
   1495c:	mov	r2, r3
   14960:	mov	r1, ip
   14964:	bl	18cb0 <argp_error@@Base+0xd14>
   14968:	cmp	r0, #0
   1496c:	popne	{r4, pc}
   14970:	bl	14e20 <argp_parse@@Base+0x17b0>
   14974:	push	{r4, lr}
   14978:	mov	r2, r1
   1497c:	mov	r1, r0
   14980:	mov	r0, #0
   14984:	bl	14900 <argp_parse@@Base+0x1290>
   14988:	pop	{r4, pc}
   1498c:	push	{r4, lr}
   14990:	mov	r2, r1
   14994:	mov	r1, r0
   14998:	mov	r0, #0
   1499c:	bl	14940 <argp_parse@@Base+0x12d0>
   149a0:	pop	{r4, pc}
   149a4:	push	{r4, r5, r6, r7, r8, lr}
   149a8:	mov	r5, r1
   149ac:	mov	r6, r2
   149b0:	ldr	r4, [r1]
   149b4:	subs	r7, r0, #0
   149b8:	beq	149d4 <argp_parse@@Base+0x1364>
   149bc:	lsr	r2, r4, #1
   149c0:	add	r3, r2, #1
   149c4:	mvn	r3, r3
   149c8:	cmp	r4, r3
   149cc:	bls	149f8 <argp_parse@@Base+0x1388>
   149d0:	bl	14e20 <argp_parse@@Base+0x17b0>
   149d4:	cmp	r4, #0
   149d8:	bne	14a00 <argp_parse@@Base+0x1390>
   149dc:	mov	r1, r2
   149e0:	mov	r0, #64	; 0x40
   149e4:	bl	19488 <argp_error@@Base+0x14ec>
   149e8:	cmp	r0, #0
   149ec:	movne	r4, r0
   149f0:	addeq	r4, r0, #1
   149f4:	b	14a00 <argp_parse@@Base+0x1390>
   149f8:	add	r4, r4, #1
   149fc:	add	r4, r4, r2
   14a00:	mov	r2, r6
   14a04:	mov	r1, r4
   14a08:	mov	r0, r7
   14a0c:	bl	14900 <argp_parse@@Base+0x1290>
   14a10:	str	r4, [r5]
   14a14:	pop	{r4, r5, r6, r7, r8, pc}
   14a18:	push	{r4, lr}
   14a1c:	mov	r2, #1
   14a20:	bl	149a4 <argp_parse@@Base+0x1334>
   14a24:	pop	{r4, pc}
   14a28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a2c:	sub	sp, sp, #12
   14a30:	mov	fp, r0
   14a34:	mov	sl, r1
   14a38:	mov	r9, r2
   14a3c:	mov	r7, r3
   14a40:	ldr	r6, [sp, #48]	; 0x30
   14a44:	ldr	r5, [r1]
   14a48:	asrs	r4, r5, #1
   14a4c:	bmi	14ba8 <argp_parse@@Base+0x1538>
   14a50:	cmp	r5, #0
   14a54:	blt	14bbc <argp_parse@@Base+0x154c>
   14a58:	mvn	r3, #-2147483648	; 0x80000000
   14a5c:	sub	r3, r3, r4
   14a60:	cmp	r5, r3
   14a64:	movle	r3, #0
   14a68:	movgt	r3, #1
   14a6c:	cmp	r3, #0
   14a70:	addeq	r4, r4, r5
   14a74:	mvnne	r4, #-2147483648	; 0x80000000
   14a78:	mvn	r8, r7
   14a7c:	lsr	r8, r8, #31
   14a80:	cmp	r7, r4
   14a84:	movge	r3, #0
   14a88:	andlt	r3, r8, #1
   14a8c:	cmp	r3, #0
   14a90:	movne	r4, r7
   14a94:	cmp	r6, #0
   14a98:	blt	14bd0 <argp_parse@@Base+0x1560>
   14a9c:	cmp	r6, #0
   14aa0:	beq	14c7c <argp_parse@@Base+0x160c>
   14aa4:	cmp	r4, #0
   14aa8:	blt	14c2c <argp_parse@@Base+0x15bc>
   14aac:	mov	r1, r6
   14ab0:	mvn	r0, #-2147483648	; 0x80000000
   14ab4:	bl	19694 <argp_error@@Base+0x16f8>
   14ab8:	cmp	r0, r4
   14abc:	movge	r0, #0
   14ac0:	movlt	r0, #1
   14ac4:	cmp	r0, #0
   14ac8:	mvnne	r3, #-2147483648	; 0x80000000
   14acc:	strne	r3, [sp, #4]
   14ad0:	beq	14c64 <argp_parse@@Base+0x15f4>
   14ad4:	mov	r1, r6
   14ad8:	ldr	r0, [sp, #4]
   14adc:	bl	19694 <argp_error@@Base+0x16f8>
   14ae0:	mov	r4, r0
   14ae4:	mov	r1, r6
   14ae8:	ldr	r0, [sp, #4]
   14aec:	bl	198b4 <argp_error@@Base+0x1918>
   14af0:	ldr	r3, [sp, #4]
   14af4:	sub	r1, r3, r1
   14af8:	cmp	fp, #0
   14afc:	moveq	r3, #0
   14b00:	streq	r3, [sl]
   14b04:	sub	r3, r4, r5
   14b08:	cmp	r3, r9
   14b0c:	bge	14b94 <argp_parse@@Base+0x1524>
   14b10:	cmp	r9, #0
   14b14:	blt	14c88 <argp_parse@@Base+0x1618>
   14b18:	cmp	r5, #0
   14b1c:	blt	14c9c <argp_parse@@Base+0x162c>
   14b20:	mvn	r3, #-2147483648	; 0x80000000
   14b24:	sub	r3, r3, r9
   14b28:	cmp	r5, r3
   14b2c:	movle	r3, #0
   14b30:	movgt	r3, #1
   14b34:	cmp	r3, #0
   14b38:	bne	14d44 <argp_parse@@Base+0x16d4>
   14b3c:	add	r5, r5, r9
   14b40:	mov	r4, r5
   14b44:	cmp	r7, r5
   14b48:	movge	r7, #0
   14b4c:	andlt	r7, r8, #1
   14b50:	cmp	r7, #0
   14b54:	bne	14d44 <argp_parse@@Base+0x16d4>
   14b58:	cmp	r6, #0
   14b5c:	blt	14cb0 <argp_parse@@Base+0x1640>
   14b60:	cmp	r6, #0
   14b64:	beq	14b90 <argp_parse@@Base+0x1520>
   14b68:	cmp	r5, #0
   14b6c:	blt	14d0c <argp_parse@@Base+0x169c>
   14b70:	mov	r1, r6
   14b74:	mvn	r0, #-2147483648	; 0x80000000
   14b78:	bl	19694 <argp_error@@Base+0x16f8>
   14b7c:	cmp	r5, r0
   14b80:	movle	r0, #0
   14b84:	movgt	r0, #1
   14b88:	cmp	r0, #0
   14b8c:	bne	14d44 <argp_parse@@Base+0x16d4>
   14b90:	mul	r1, r5, r6
   14b94:	mov	r0, fp
   14b98:	bl	148b0 <argp_parse@@Base+0x1240>
   14b9c:	str	r4, [sl]
   14ba0:	add	sp, sp, #12
   14ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ba8:	rsb	r3, r4, #-2147483648	; 0x80000000
   14bac:	cmp	r5, r3
   14bb0:	movge	r3, #0
   14bb4:	movlt	r3, #1
   14bb8:	b	14a6c <argp_parse@@Base+0x13fc>
   14bbc:	rsb	r3, r5, #-2147483648	; 0x80000000
   14bc0:	cmp	r4, r3
   14bc4:	movge	r3, #0
   14bc8:	movlt	r3, #1
   14bcc:	b	14a6c <argp_parse@@Base+0x13fc>
   14bd0:	cmp	r4, #0
   14bd4:	blt	14bfc <argp_parse@@Base+0x158c>
   14bd8:	cmn	r6, #1
   14bdc:	beq	14c18 <argp_parse@@Base+0x15a8>
   14be0:	mov	r1, r6
   14be4:	mov	r0, #-2147483648	; 0x80000000
   14be8:	bl	19694 <argp_error@@Base+0x16f8>
   14bec:	cmp	r0, r4
   14bf0:	movge	r0, #0
   14bf4:	movlt	r0, #1
   14bf8:	b	14ac4 <argp_parse@@Base+0x1454>
   14bfc:	mov	r1, r6
   14c00:	mvn	r0, #-2147483648	; 0x80000000
   14c04:	bl	19694 <argp_error@@Base+0x16f8>
   14c08:	cmp	r0, r4
   14c0c:	movle	r0, #0
   14c10:	movgt	r0, #1
   14c14:	b	14ac4 <argp_parse@@Base+0x1454>
   14c18:	add	r0, r4, #-2147483648	; 0x80000000
   14c1c:	cmp	r0, #0
   14c20:	movle	r0, #0
   14c24:	movgt	r0, #1
   14c28:	b	14ac4 <argp_parse@@Base+0x1454>
   14c2c:	cmn	r4, #1
   14c30:	beq	14c50 <argp_parse@@Base+0x15e0>
   14c34:	mov	r1, r4
   14c38:	mov	r0, #-2147483648	; 0x80000000
   14c3c:	bl	19694 <argp_error@@Base+0x16f8>
   14c40:	cmp	r6, r0
   14c44:	movle	r0, #0
   14c48:	movgt	r0, #1
   14c4c:	b	14ac4 <argp_parse@@Base+0x1454>
   14c50:	add	r0, r6, #-2147483648	; 0x80000000
   14c54:	cmp	r0, #0
   14c58:	movle	r0, #0
   14c5c:	movgt	r0, #1
   14c60:	b	14ac4 <argp_parse@@Base+0x1454>
   14c64:	mul	r1, r6, r4
   14c68:	cmp	r1, #63	; 0x3f
   14c6c:	movle	r3, #64	; 0x40
   14c70:	strle	r3, [sp, #4]
   14c74:	bgt	14af8 <argp_parse@@Base+0x1488>
   14c78:	b	14ad4 <argp_parse@@Base+0x1464>
   14c7c:	mov	r3, #64	; 0x40
   14c80:	str	r3, [sp, #4]
   14c84:	b	14ad4 <argp_parse@@Base+0x1464>
   14c88:	rsb	r3, r9, #-2147483648	; 0x80000000
   14c8c:	cmp	r5, r3
   14c90:	movge	r3, #0
   14c94:	movlt	r3, #1
   14c98:	b	14b34 <argp_parse@@Base+0x14c4>
   14c9c:	rsb	r3, r5, #-2147483648	; 0x80000000
   14ca0:	cmp	r9, r3
   14ca4:	movge	r3, #0
   14ca8:	movlt	r3, #1
   14cac:	b	14b34 <argp_parse@@Base+0x14c4>
   14cb0:	cmp	r5, #0
   14cb4:	blt	14cdc <argp_parse@@Base+0x166c>
   14cb8:	cmn	r6, #1
   14cbc:	beq	14cf8 <argp_parse@@Base+0x1688>
   14cc0:	mov	r1, r6
   14cc4:	mov	r0, #-2147483648	; 0x80000000
   14cc8:	bl	19694 <argp_error@@Base+0x16f8>
   14ccc:	cmp	r5, r0
   14cd0:	movle	r0, #0
   14cd4:	movgt	r0, #1
   14cd8:	b	14b88 <argp_parse@@Base+0x1518>
   14cdc:	mov	r1, r6
   14ce0:	mvn	r0, #-2147483648	; 0x80000000
   14ce4:	bl	19694 <argp_error@@Base+0x16f8>
   14ce8:	cmp	r5, r0
   14cec:	movge	r0, #0
   14cf0:	movlt	r0, #1
   14cf4:	b	14b88 <argp_parse@@Base+0x1518>
   14cf8:	add	r0, r5, #-2147483648	; 0x80000000
   14cfc:	cmp	r0, #0
   14d00:	movle	r0, #0
   14d04:	movgt	r0, #1
   14d08:	b	14b88 <argp_parse@@Base+0x1518>
   14d0c:	cmn	r5, #1
   14d10:	beq	14d30 <argp_parse@@Base+0x16c0>
   14d14:	mov	r1, r5
   14d18:	mov	r0, #-2147483648	; 0x80000000
   14d1c:	bl	19694 <argp_error@@Base+0x16f8>
   14d20:	cmp	r6, r0
   14d24:	movle	r0, #0
   14d28:	movgt	r0, #1
   14d2c:	b	14b88 <argp_parse@@Base+0x1518>
   14d30:	add	r0, r6, #-2147483648	; 0x80000000
   14d34:	cmp	r0, #0
   14d38:	movle	r0, #0
   14d3c:	movgt	r0, #1
   14d40:	b	14b88 <argp_parse@@Base+0x1518>
   14d44:	bl	14e20 <argp_parse@@Base+0x17b0>
   14d48:	push	{r4, lr}
   14d4c:	bl	14e4c <argp_parse@@Base+0x17dc>
   14d50:	cmp	r0, #0
   14d54:	popne	{r4, pc}
   14d58:	bl	14e20 <argp_parse@@Base+0x17b0>
   14d5c:	push	{r4, lr}
   14d60:	mov	r1, #1
   14d64:	bl	14d48 <argp_parse@@Base+0x16d8>
   14d68:	pop	{r4, pc}
   14d6c:	push	{r4, lr}
   14d70:	bl	14e4c <argp_parse@@Base+0x17dc>
   14d74:	cmp	r0, #0
   14d78:	popne	{r4, pc}
   14d7c:	bl	14e20 <argp_parse@@Base+0x17b0>
   14d80:	push	{r4, lr}
   14d84:	mov	r1, #1
   14d88:	bl	14d6c <argp_parse@@Base+0x16fc>
   14d8c:	pop	{r4, pc}
   14d90:	push	{r4, r5, r6, lr}
   14d94:	mov	r5, r0
   14d98:	mov	r4, r1
   14d9c:	mov	r0, r1
   14da0:	bl	1487c <argp_parse@@Base+0x120c>
   14da4:	mov	r2, r4
   14da8:	mov	r1, r5
   14dac:	bl	11610 <memcpy@plt>
   14db0:	pop	{r4, r5, r6, pc}
   14db4:	push	{r4, r5, r6, lr}
   14db8:	mov	r5, r0
   14dbc:	mov	r4, r1
   14dc0:	mov	r0, r1
   14dc4:	bl	14890 <argp_parse@@Base+0x1220>
   14dc8:	mov	r2, r4
   14dcc:	mov	r1, r5
   14dd0:	bl	11610 <memcpy@plt>
   14dd4:	pop	{r4, r5, r6, pc}
   14dd8:	push	{r4, r5, r6, lr}
   14ddc:	mov	r5, r0
   14de0:	mov	r4, r1
   14de4:	add	r0, r1, #1
   14de8:	bl	14890 <argp_parse@@Base+0x1220>
   14dec:	mov	r2, #0
   14df0:	strb	r2, [r0, r4]
   14df4:	mov	r2, r4
   14df8:	mov	r1, r5
   14dfc:	bl	11610 <memcpy@plt>
   14e00:	pop	{r4, r5, r6, pc}
   14e04:	push	{r4, lr}
   14e08:	mov	r4, r0
   14e0c:	bl	117b4 <strlen@plt>
   14e10:	add	r1, r0, #1
   14e14:	mov	r0, r4
   14e18:	bl	14d90 <argp_parse@@Base+0x1720>
   14e1c:	pop	{r4, pc}
   14e20:	push	{r4, lr}
   14e24:	ldr	r3, [pc, #20]	; 14e40 <argp_parse@@Base+0x17d0>
   14e28:	ldr	r0, [r3]
   14e2c:	ldr	r3, [pc, #16]	; 14e44 <argp_parse@@Base+0x17d4>
   14e30:	ldr	r2, [pc, #16]	; 14e48 <argp_parse@@Base+0x17d8>
   14e34:	mov	r1, #0
   14e38:	bl	11700 <error@plt>
   14e3c:	bl	11964 <abort@plt>
   14e40:	andeq	fp, r2, r0, asr #9
   14e44:	muleq	r1, r4, r5
   14e48:	ldrdeq	sl, [r1], -ip
   14e4c:	push	{r4, lr}
   14e50:	mov	r2, r0
   14e54:	mov	r3, r1
   14e58:	cmp	r1, #0
   14e5c:	cmpne	r0, #0
   14e60:	moveq	r3, #1
   14e64:	moveq	r2, r3
   14e68:	umull	r0, r1, r2, r3
   14e6c:	cmp	r0, #0
   14e70:	cmpge	r1, #0
   14e74:	bne	14e88 <argp_parse@@Base+0x1818>
   14e78:	mov	r1, r3
   14e7c:	mov	r0, r2
   14e80:	bl	11550 <calloc@plt>
   14e84:	pop	{r4, pc}
   14e88:	bl	117f0 <__errno_location@plt>
   14e8c:	mov	r3, #12
   14e90:	str	r3, [r0]
   14e94:	mov	r0, #0
   14e98:	pop	{r4, pc}
   14e9c:	push	{r4, lr}
   14ea0:	cmp	r0, #0
   14ea4:	moveq	r0, #1
   14ea8:	cmp	r0, #0
   14eac:	blt	14eb8 <argp_parse@@Base+0x1848>
   14eb0:	bl	1173c <malloc@plt>
   14eb4:	pop	{r4, pc}
   14eb8:	bl	117f0 <__errno_location@plt>
   14ebc:	mov	r3, #12
   14ec0:	str	r3, [r0]
   14ec4:	mov	r0, #0
   14ec8:	pop	{r4, pc}
   14ecc:	push	{r4, lr}
   14ed0:	cmp	r0, #0
   14ed4:	beq	14ef0 <argp_parse@@Base+0x1880>
   14ed8:	cmp	r1, #0
   14edc:	beq	14efc <argp_parse@@Base+0x188c>
   14ee0:	cmp	r1, #0
   14ee4:	blt	14f08 <argp_parse@@Base+0x1898>
   14ee8:	bl	11688 <realloc@plt>
   14eec:	pop	{r4, pc}
   14ef0:	mov	r0, r1
   14ef4:	bl	14e9c <argp_parse@@Base+0x182c>
   14ef8:	pop	{r4, pc}
   14efc:	bl	14264 <argp_parse@@Base+0xbf4>
   14f00:	mov	r0, #0
   14f04:	pop	{r4, pc}
   14f08:	bl	117f0 <__errno_location@plt>
   14f0c:	mov	r3, #12
   14f10:	str	r3, [r0]
   14f14:	mov	r0, #0
   14f18:	pop	{r4, pc}
   14f1c:	ldr	r3, [r0]
   14f20:	ldr	r2, [r0, #4]
   14f24:	cmp	r2, #0
   14f28:	beq	14f64 <argp_parse@@Base+0x18f4>
   14f2c:	add	r3, r3, #24
   14f30:	b	14f40 <argp_parse@@Base+0x18d0>
   14f34:	add	r3, r3, #24
   14f38:	subs	r2, r2, #1
   14f3c:	beq	14f5c <argp_parse@@Base+0x18ec>
   14f40:	ldr	r0, [r3, #-24]	; 0xffffffe8
   14f44:	cmp	r0, #0
   14f48:	beq	14f34 <argp_parse@@Base+0x18c4>
   14f4c:	ldr	r1, [r3, #-12]
   14f50:	tst	r1, #2
   14f54:	bne	14f34 <argp_parse@@Base+0x18c4>
   14f58:	bx	lr
   14f5c:	mov	r0, #0
   14f60:	bx	lr
   14f64:	mov	r0, #0
   14f68:	bx	lr
   14f6c:	ldr	r2, [r0, #8]
   14f70:	cmp	r2, #0
   14f74:	beq	14f80 <argp_parse@@Base+0x1910>
   14f78:	mov	r0, #0
   14f7c:	bx	lr
   14f80:	ldr	r2, [r1, #8]
   14f84:	cmp	r2, #0
   14f88:	bne	14f78 <argp_parse@@Base+0x1908>
   14f8c:	ldr	r2, [r0, #12]
   14f90:	ldr	r1, [r1, #12]
   14f94:	orr	r2, r2, r1
   14f98:	tst	r2, #16
   14f9c:	ldreq	r2, [r3]
   14fa0:	addeq	r1, r2, #1
   14fa4:	streq	r1, [r3]
   14fa8:	ldreq	r3, [r0, #4]
   14fac:	strbeq	r3, [r2]
   14fb0:	b	14f78 <argp_parse@@Base+0x1908>
   14fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fb8:	sub	sp, sp, #12
   14fbc:	ldr	r4, [r0]
   14fc0:	ldr	r9, [r0, #8]
   14fc4:	ldr	r5, [r0, #4]
   14fc8:	cmp	r5, #0
   14fcc:	beq	15020 <argp_parse@@Base+0x19b0>
   14fd0:	str	r3, [sp, #4]
   14fd4:	str	r2, [sp]
   14fd8:	mov	fp, r1
   14fdc:	mov	sl, r4
   14fe0:	mov	r8, #0
   14fe4:	b	15060 <argp_parse@@Base+0x19f0>
   14fe8:	and	r3, r6, #4
   14fec:	cmp	r3, #0
   14ff0:	moveq	sl, r4
   14ff4:	tst	r6, #2
   14ff8:	beq	15004 <argp_parse@@Base+0x1994>
   14ffc:	add	r9, r9, #1
   15000:	b	1503c <argp_parse@@Base+0x19cc>
   15004:	ldr	r3, [sp, #4]
   15008:	ldr	r2, [sp]
   1500c:	mov	r1, sl
   15010:	mov	r0, r4
   15014:	blx	fp
   15018:	mov	r8, r0
   1501c:	b	14ffc <argp_parse@@Base+0x198c>
   15020:	mov	r8, #0
   15024:	mov	r0, r8
   15028:	add	sp, sp, #12
   1502c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15030:	ldrb	r3, [r9]
   15034:	cmp	r3, r7
   15038:	beq	14fe8 <argp_parse@@Base+0x1978>
   1503c:	add	r4, r4, #24
   15040:	subs	r5, r5, #1
   15044:	movne	r3, #1
   15048:	moveq	r3, #0
   1504c:	cmp	r8, #0
   15050:	movne	r3, #0
   15054:	andeq	r3, r3, #1
   15058:	cmp	r3, #0
   1505c:	beq	15024 <argp_parse@@Base+0x19b4>
   15060:	ldr	r6, [r4, #12]
   15064:	tst	r6, #8
   15068:	bne	1503c <argp_parse@@Base+0x19cc>
   1506c:	ldr	r7, [r4, #4]
   15070:	sub	r3, r7, #1
   15074:	cmp	r3, #254	; 0xfe
   15078:	bhi	1503c <argp_parse@@Base+0x19cc>
   1507c:	bl	11784 <__ctype_b_loc@plt>
   15080:	ldr	r2, [r0]
   15084:	lsl	r3, r7, #1
   15088:	ldrh	r3, [r2, r3]
   1508c:	tst	r3, #16384	; 0x4000
   15090:	bne	15030 <argp_parse@@Base+0x19c0>
   15094:	b	1503c <argp_parse@@Base+0x19cc>
   15098:	push	{r4, r5, r6, lr}
   1509c:	ldr	r4, [r0, #12]
   150a0:	ands	r4, r4, #8
   150a4:	movne	r4, #0
   150a8:	bne	150d8 <argp_parse@@Base+0x1a68>
   150ac:	ldr	r5, [r0, #4]
   150b0:	sub	r3, r5, #1
   150b4:	cmp	r3, #254	; 0xfe
   150b8:	bhi	150d8 <argp_parse@@Base+0x1a68>
   150bc:	bl	11784 <__ctype_b_loc@plt>
   150c0:	ldr	r2, [r0]
   150c4:	lsl	r3, r5, #1
   150c8:	ldrh	r3, [r2, r3]
   150cc:	and	r3, r3, #16384	; 0x4000
   150d0:	cmp	r3, #0
   150d4:	movne	r4, r5
   150d8:	mov	r0, r4
   150dc:	pop	{r4, r5, r6, pc}
   150e0:	push	{r4, lr}
   150e4:	mov	r4, r0
   150e8:	bl	11784 <__ctype_b_loc@plt>
   150ec:	b	150f8 <argp_parse@@Base+0x1a88>
   150f0:	add	r3, r3, #1
   150f4:	str	r3, [r4]
   150f8:	ldr	r3, [r4]
   150fc:	ldrb	r2, [r3]
   15100:	ldr	ip, [r0]
   15104:	lsl	r1, r2, #1
   15108:	ldrh	r1, [ip, r1]
   1510c:	tst	r1, #8192	; 0x2000
   15110:	bne	150f0 <argp_parse@@Base+0x1a80>
   15114:	subs	ip, r2, #45	; 0x2d
   15118:	movne	ip, #1
   1511c:	cmp	r2, #0
   15120:	beq	15154 <argp_parse@@Base+0x1ae4>
   15124:	tst	r1, #8
   15128:	bne	15154 <argp_parse@@Base+0x1ae4>
   1512c:	add	r3, r3, #1
   15130:	str	r3, [r4]
   15134:	ldrb	r2, [r3]
   15138:	cmp	r2, #0
   1513c:	beq	15154 <argp_parse@@Base+0x1ae4>
   15140:	ldr	r1, [r0]
   15144:	lsl	r2, r2, #1
   15148:	ldrh	r2, [r1, r2]
   1514c:	tst	r2, #8
   15150:	beq	1512c <argp_parse@@Base+0x1abc>
   15154:	mov	r0, ip
   15158:	pop	{r4, pc}
   1515c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15160:	add	fp, sp, #32
   15164:	sub	sp, sp, #12
   15168:	ldr	r5, [r0, #4]
   1516c:	cmp	r5, #0
   15170:	bne	1517c <argp_parse@@Base+0x1b0c>
   15174:	sub	sp, fp, #32
   15178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1517c:	mov	r9, r1
   15180:	mov	r6, r0
   15184:	ldr	r0, [r0, #8]
   15188:	bl	117b4 <strlen@plt>
   1518c:	add	r3, r0, #15
   15190:	bic	r3, r3, #7
   15194:	sub	sp, sp, r3
   15198:	mov	sl, sp
   1519c:	sub	r7, fp, #36	; 0x24
   151a0:	str	sp, [r7, #-4]!
   151a4:	ldr	r4, [r6]
   151a8:	ldr	r8, [pc, #336]	; 15300 <argp_parse@@Base+0x1c90>
   151ac:	ldr	r2, [r4, #20]
   151b0:	mov	r3, r7
   151b4:	ldr	r2, [r2, #24]
   151b8:	mov	r1, r8
   151bc:	mov	r0, r4
   151c0:	bl	14fb4 <argp_parse@@Base+0x1944>
   151c4:	add	r4, r4, #28
   151c8:	subs	r5, r5, #1
   151cc:	bne	151ac <argp_parse@@Base+0x1b3c>
   151d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   151d4:	cmp	sl, r3
   151d8:	bcc	15230 <argp_parse@@Base+0x1bc0>
   151dc:	ldr	r4, [r6]
   151e0:	ldr	r5, [r6, #4]
   151e4:	cmp	r5, #0
   151e8:	beq	15174 <argp_parse@@Base+0x1b04>
   151ec:	ldr	r7, [pc, #272]	; 15304 <argp_parse@@Base+0x1c94>
   151f0:	ldr	r2, [r4, #20]
   151f4:	mov	r3, r9
   151f8:	ldr	r2, [r2, #24]
   151fc:	mov	r1, r7
   15200:	mov	r0, r4
   15204:	bl	14fb4 <argp_parse@@Base+0x1944>
   15208:	add	r4, r4, #28
   1520c:	subs	r5, r5, #1
   15210:	bne	151f0 <argp_parse@@Base+0x1b80>
   15214:	ldr	r7, [r6]
   15218:	ldr	r8, [r6, #4]
   1521c:	cmp	r8, #0
   15220:	beq	15174 <argp_parse@@Base+0x1b04>
   15224:	add	r7, r7, #28
   15228:	ldr	sl, [pc, #216]	; 15308 <argp_parse@@Base+0x1c98>
   1522c:	b	152e8 <argp_parse@@Base+0x1c78>
   15230:	add	r2, r3, #1
   15234:	str	r2, [fp, #-40]	; 0xffffffd8
   15238:	mov	r2, #0
   1523c:	strb	r2, [r3]
   15240:	mov	r2, sl
   15244:	ldr	r1, [pc, #192]	; 1530c <argp_parse@@Base+0x1c9c>
   15248:	mov	r0, r9
   1524c:	bl	19408 <argp_error@@Base+0x146c>
   15250:	b	151dc <argp_parse@@Base+0x1b6c>
   15254:	tst	r1, #16
   15258:	bne	1527c <argp_parse@@Base+0x1c0c>
   1525c:	ldr	r3, [r6, #8]
   15260:	cmp	r3, #0
   15264:	beq	152cc <argp_parse@@Base+0x1c5c>
   15268:	tst	r1, #1
   1526c:	ldrne	r1, [pc, #156]	; 15310 <argp_parse@@Base+0x1ca0>
   15270:	moveq	r1, sl
   15274:	mov	r0, r9
   15278:	bl	19408 <argp_error@@Base+0x146c>
   1527c:	add	r4, r4, #24
   15280:	subs	r5, r5, #1
   15284:	beq	152dc <argp_parse@@Base+0x1c6c>
   15288:	ldr	r2, [r4]
   1528c:	cmp	r2, #0
   15290:	beq	1527c <argp_parse@@Base+0x1c0c>
   15294:	ldr	r1, [r4, #12]
   15298:	and	r3, r1, #4
   1529c:	cmp	r3, #0
   152a0:	moveq	r6, r4
   152a4:	tst	r1, #2
   152a8:	bne	1527c <argp_parse@@Base+0x1c0c>
   152ac:	ldr	r3, [r4, #8]
   152b0:	ldr	r0, [r6, #12]
   152b4:	orr	r1, r1, r0
   152b8:	cmp	r3, #0
   152bc:	beq	15254 <argp_parse@@Base+0x1be4>
   152c0:	tst	r1, #16
   152c4:	beq	15268 <argp_parse@@Base+0x1bf8>
   152c8:	b	1527c <argp_parse@@Base+0x1c0c>
   152cc:	ldr	r1, [pc, #64]	; 15314 <argp_parse@@Base+0x1ca4>
   152d0:	mov	r0, r9
   152d4:	bl	19408 <argp_error@@Base+0x146c>
   152d8:	b	1527c <argp_parse@@Base+0x1c0c>
   152dc:	add	r7, r7, #28
   152e0:	subs	r8, r8, #1
   152e4:	beq	15174 <argp_parse@@Base+0x1b04>
   152e8:	ldr	r4, [r7, #-28]	; 0xffffffe4
   152ec:	ldr	r5, [r7, #-24]	; 0xffffffe8
   152f0:	cmp	r5, #0
   152f4:	beq	152dc <argp_parse@@Base+0x1c6c>
   152f8:	mov	r6, r4
   152fc:	b	15288 <argp_parse@@Base+0x1c18>
   15300:	andeq	r4, r1, ip, ror #30
   15304:	andeq	r5, r1, ip, lsr #11
   15308:	andeq	sl, r1, r8, ror #12
   1530c:	andeq	sl, r1, r0, asr r6
   15310:	andeq	sl, r1, r8, asr r6
   15314:	andeq	sl, r1, r4, ror r6
   15318:	push	{r4, r5, r6, lr}
   1531c:	mov	r5, r0
   15320:	ldr	r0, [r0, #12]
   15324:	cmp	r0, #0
   15328:	beq	15340 <argp_parse@@Base+0x1cd0>
   1532c:	ldr	r4, [r0, #24]
   15330:	bl	14264 <argp_parse@@Base+0xbf4>
   15334:	mov	r0, r4
   15338:	cmp	r4, #0
   1533c:	bne	1532c <argp_parse@@Base+0x1cbc>
   15340:	ldr	r3, [r5, #4]
   15344:	cmp	r3, #0
   15348:	bne	15358 <argp_parse@@Base+0x1ce8>
   1534c:	mov	r0, r5
   15350:	bl	14264 <argp_parse@@Base+0xbf4>
   15354:	pop	{r4, r5, r6, pc}
   15358:	ldr	r0, [r5]
   1535c:	bl	14264 <argp_parse@@Base+0xbf4>
   15360:	ldr	r0, [r5, #8]
   15364:	bl	14264 <argp_parse@@Base+0xbf4>
   15368:	b	1534c <argp_parse@@Base+0x1cdc>
   1536c:	push	{r4, r5, r6, r7, r8, lr}
   15370:	mov	r6, r1
   15374:	ldr	r7, [r0]
   15378:	ldr	r3, [r0, #4]
   1537c:	sub	r8, r3, #1
   15380:	cmp	r3, #0
   15384:	bne	153e0 <argp_parse@@Base+0x1d70>
   15388:	mov	r7, #0
   1538c:	b	153c8 <argp_parse@@Base+0x1d58>
   15390:	sub	r5, r5, #1
   15394:	add	r4, r4, #24
   15398:	cmn	r5, #1
   1539c:	beq	153d0 <argp_parse@@Base+0x1d60>
   153a0:	ldr	r0, [r4, #-24]	; 0xffffffe8
   153a4:	cmp	r0, #0
   153a8:	beq	15390 <argp_parse@@Base+0x1d20>
   153ac:	ldr	r3, [r4, #-12]
   153b0:	tst	r3, #2
   153b4:	bne	15390 <argp_parse@@Base+0x1d20>
   153b8:	mov	r1, r6
   153bc:	bl	11574 <strcmp@plt>
   153c0:	cmp	r0, #0
   153c4:	bne	15390 <argp_parse@@Base+0x1d20>
   153c8:	mov	r0, r7
   153cc:	pop	{r4, r5, r6, r7, r8, pc}
   153d0:	add	r7, r7, #28
   153d4:	sub	r8, r8, #1
   153d8:	cmn	r8, #1
   153dc:	beq	153fc <argp_parse@@Base+0x1d8c>
   153e0:	ldr	r4, [r7]
   153e4:	ldr	r3, [r7, #4]
   153e8:	sub	r5, r3, #1
   153ec:	cmp	r3, #0
   153f0:	beq	153d0 <argp_parse@@Base+0x1d60>
   153f4:	add	r4, r4, #24
   153f8:	b	153a0 <argp_parse@@Base+0x1d30>
   153fc:	mov	r7, #0
   15400:	b	153c8 <argp_parse@@Base+0x1d58>
   15404:	push	{r4, r5, r6, lr}
   15408:	ldr	r4, [r0, #16]
   1540c:	ldr	r0, [r0, #8]
   15410:	cmp	r0, #0
   15414:	moveq	r5, #0
   15418:	beq	1542c <argp_parse@@Base+0x1dbc>
   1541c:	mov	r1, #10
   15420:	bl	117c0 <strchr@plt>
   15424:	adds	r5, r0, #0
   15428:	movne	r5, #1
   1542c:	cmp	r4, #0
   15430:	beq	15454 <argp_parse@@Base+0x1de4>
   15434:	ldr	r0, [r4]
   15438:	cmp	r0, #0
   1543c:	beq	15454 <argp_parse@@Base+0x1de4>
   15440:	bl	15404 <argp_parse@@Base+0x1d94>
   15444:	add	r5, r5, r0
   15448:	ldr	r0, [r4, #16]!
   1544c:	cmp	r0, #0
   15450:	bne	15440 <argp_parse@@Base+0x1dd0>
   15454:	mov	r0, r5
   15458:	pop	{r4, r5, r6, pc}
   1545c:	push	{r4, r5, r6, r7, r8, lr}
   15460:	mov	r4, r0
   15464:	mov	r5, r1
   15468:	ldr	r3, [r0, #28]
   1546c:	ldr	r2, [r0, #24]
   15470:	sub	r3, r3, r2
   15474:	ldr	r2, [r0, #16]
   15478:	cmp	r3, r2
   1547c:	bhi	15498 <argp_parse@@Base+0x1e28>
   15480:	ldr	r3, [r4, #20]
   15484:	cmp	r3, #0
   15488:	subge	r5, r5, r3
   1548c:	mov	r6, #32
   15490:	mov	r7, #1
   15494:	b	154b4 <argp_parse@@Base+0x1e44>
   15498:	bl	18d74 <argp_error@@Base+0xdd8>
   1549c:	b	15480 <argp_parse@@Base+0x1e10>
   154a0:	ldr	r3, [r4, #28]
   154a4:	add	r2, r3, #1
   154a8:	str	r2, [r4, #28]
   154ac:	strb	r6, [r3]
   154b0:	sub	r5, r5, #1
   154b4:	cmp	r5, #0
   154b8:	ble	154e4 <argp_parse@@Base+0x1e74>
   154bc:	ldr	r2, [r4, #28]
   154c0:	ldr	r3, [r4, #32]
   154c4:	cmp	r2, r3
   154c8:	bcc	154a0 <argp_parse@@Base+0x1e30>
   154cc:	mov	r1, r7
   154d0:	mov	r0, r4
   154d4:	bl	19318 <argp_error@@Base+0x137c>
   154d8:	cmp	r0, #0
   154dc:	beq	154b0 <argp_parse@@Base+0x1e40>
   154e0:	b	154a0 <argp_parse@@Base+0x1e30>
   154e4:	pop	{r4, r5, r6, r7, r8, pc}
   154e8:	push	{r4, r5, r6, lr}
   154ec:	mov	r4, r0
   154f0:	mov	r5, r1
   154f4:	ldr	r3, [r0, #28]
   154f8:	ldr	r2, [r0, #24]
   154fc:	sub	r3, r3, r2
   15500:	ldr	r2, [r0, #16]
   15504:	cmp	r3, r2
   15508:	bhi	1554c <argp_parse@@Base+0x1edc>
   1550c:	ldr	r3, [r4, #20]
   15510:	cmp	r3, #0
   15514:	addge	r5, r5, r3
   15518:	ldr	r3, [r4, #8]
   1551c:	cmp	r5, r3
   15520:	bcc	1556c <argp_parse@@Base+0x1efc>
   15524:	ldr	r2, [r4, #28]
   15528:	ldr	r3, [r4, #32]
   1552c:	cmp	r2, r3
   15530:	bcs	15554 <argp_parse@@Base+0x1ee4>
   15534:	ldr	r3, [r4, #28]
   15538:	add	r2, r3, #1
   1553c:	str	r2, [r4, #28]
   15540:	mov	r2, #10
   15544:	strb	r2, [r3]
   15548:	pop	{r4, r5, r6, pc}
   1554c:	bl	18d74 <argp_error@@Base+0xdd8>
   15550:	b	1550c <argp_parse@@Base+0x1e9c>
   15554:	mov	r1, #1
   15558:	mov	r0, r4
   1555c:	bl	19318 <argp_error@@Base+0x137c>
   15560:	cmp	r0, #0
   15564:	popeq	{r4, r5, r6, pc}
   15568:	b	15534 <argp_parse@@Base+0x1ec4>
   1556c:	ldr	r2, [r4, #28]
   15570:	ldr	r3, [r4, #32]
   15574:	cmp	r2, r3
   15578:	bcs	15594 <argp_parse@@Base+0x1f24>
   1557c:	ldr	r3, [r4, #28]
   15580:	add	r2, r3, #1
   15584:	str	r2, [r4, #28]
   15588:	mov	r2, #32
   1558c:	strb	r2, [r3]
   15590:	pop	{r4, r5, r6, pc}
   15594:	mov	r1, #1
   15598:	mov	r0, r4
   1559c:	bl	19318 <argp_error@@Base+0x137c>
   155a0:	cmp	r0, #0
   155a4:	bne	1557c <argp_parse@@Base+0x1f0c>
   155a8:	pop	{r4, r5, r6, pc}
   155ac:	push	{r4, r5, r6, lr}
   155b0:	ldr	r5, [r0, #8]
   155b4:	ldr	r2, [r0, #12]
   155b8:	ldr	ip, [r1, #12]
   155bc:	orr	r2, r2, ip
   155c0:	cmp	r5, #0
   155c4:	beq	15610 <argp_parse@@Base+0x1fa0>
   155c8:	tst	r2, #16
   155cc:	bne	15608 <argp_parse@@Base+0x1f98>
   155d0:	mov	r6, r3
   155d4:	mov	r4, r0
   155d8:	tst	r2, #1
   155dc:	bne	15620 <argp_parse@@Base+0x1fb0>
   155e0:	mov	r0, r5
   155e4:	bl	117b4 <strlen@plt>
   155e8:	add	r1, r0, #6
   155ec:	mov	r0, r6
   155f0:	bl	154e8 <argp_parse@@Base+0x1e78>
   155f4:	mov	r3, r5
   155f8:	ldr	r2, [r4, #4]
   155fc:	ldr	r1, [pc, #52]	; 15638 <argp_parse@@Base+0x1fc8>
   15600:	mov	r0, r6
   15604:	bl	19408 <argp_error@@Base+0x146c>
   15608:	mov	r0, #0
   1560c:	pop	{r4, r5, r6, pc}
   15610:	ldr	r5, [r1, #8]
   15614:	cmp	r5, #0
   15618:	beq	15608 <argp_parse@@Base+0x1f98>
   1561c:	b	155c8 <argp_parse@@Base+0x1f58>
   15620:	mov	r3, r5
   15624:	ldr	r2, [r0, #4]
   15628:	ldr	r1, [pc, #12]	; 1563c <argp_parse@@Base+0x1fcc>
   1562c:	mov	r0, r6
   15630:	bl	19408 <argp_error@@Base+0x146c>
   15634:	b	15608 <argp_parse@@Base+0x1f98>
   15638:	andeq	sl, r1, r8, lsl #13
   1563c:	andeq	sl, r1, ip, ror r6
   15640:	push	{r4, r5, r6, lr}
   15644:	subs	r5, r2, #0
   15648:	popeq	{r4, r5, r6, pc}
   1564c:	ldr	ip, [r5, #20]
   15650:	cmp	ip, #0
   15654:	popeq	{r4, r5, r6, pc}
   15658:	mov	r6, r1
   1565c:	mov	r4, r0
   15660:	mov	r1, r3
   15664:	mov	r0, r5
   15668:	bl	140e4 <argp_parse@@Base+0xa74>
   1566c:	ldr	r3, [r5, #20]
   15670:	mov	r2, r0
   15674:	mov	r1, r4
   15678:	mov	r0, r6
   1567c:	blx	r3
   15680:	pop	{r4, r5, r6, pc}
   15684:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15688:	sub	sp, sp, #28
   1568c:	str	r1, [sp, #16]
   15690:	mov	r8, r2
   15694:	mov	r4, r3
   15698:	ldr	r5, [sp, #64]	; 0x40
   1569c:	ldr	r3, [r2]
   156a0:	mov	r6, r3
   156a4:	str	r3, [sp, #20]
   156a8:	ldr	sl, [r0, #16]
   156ac:	ldr	r2, [r0, #8]
   156b0:	mov	ip, r2
   156b4:	str	r2, [sp, #12]
   156b8:	mov	r3, r1
   156bc:	mov	r2, r0
   156c0:	ldr	r1, [pc, #424]	; 15870 <argp_parse@@Base+0x2200>
   156c4:	mov	r0, ip
   156c8:	bl	15640 <argp_parse@@Base+0x1fd0>
   156cc:	subs	r3, r0, #0
   156d0:	str	r3, [sp, #8]
   156d4:	beq	1585c <argp_parse@@Base+0x21ec>
   156d8:	mov	r1, #10
   156dc:	mov	r0, r3
   156e0:	bl	115d4 <strchrnul@plt>
   156e4:	mov	r7, r0
   156e8:	ldrb	r3, [r0]
   156ec:	cmp	r3, #0
   156f0:	beq	1582c <argp_parse@@Base+0x21bc>
   156f4:	ldrb	fp, [r6]
   156f8:	cmp	fp, #0
   156fc:	ble	15824 <argp_parse@@Base+0x21b4>
   15700:	mov	r6, #0
   15704:	add	r9, r0, #1
   15708:	mov	r1, #10
   1570c:	mov	r0, r9
   15710:	bl	115d4 <strchrnul@plt>
   15714:	add	r6, r6, #1
   15718:	cmp	r6, fp
   1571c:	bne	15704 <argp_parse@@Base+0x2094>
   15720:	mov	r7, r0
   15724:	ldr	r3, [r8]
   15728:	add	r3, r3, #1
   1572c:	str	r3, [r8]
   15730:	mov	fp, #1
   15734:	add	r1, r7, #1
   15738:	sub	r1, r1, r9
   1573c:	mov	r0, r5
   15740:	bl	154e8 <argp_parse@@Base+0x1e78>
   15744:	sub	r6, r7, r9
   15748:	ldr	r3, [r5, #28]
   1574c:	add	r3, r3, r6
   15750:	ldr	r2, [r5, #32]
   15754:	cmp	r2, r3
   15758:	bcs	15770 <argp_parse@@Base+0x2100>
   1575c:	mov	r1, r6
   15760:	mov	r0, r5
   15764:	bl	19318 <argp_error@@Base+0x137c>
   15768:	cmp	r0, #0
   1576c:	beq	1578c <argp_parse@@Base+0x211c>
   15770:	mov	r2, r6
   15774:	mov	r1, r9
   15778:	ldr	r0, [r5, #28]
   1577c:	bl	11610 <memcpy@plt>
   15780:	ldr	r3, [r5, #28]
   15784:	add	r6, r3, r6
   15788:	str	r6, [r5, #28]
   1578c:	ldr	r3, [sp, #12]
   15790:	ldr	r2, [sp, #8]
   15794:	cmp	r3, r2
   15798:	bne	15838 <argp_parse@@Base+0x21c8>
   1579c:	cmp	sl, #0
   157a0:	beq	157e0 <argp_parse@@Base+0x2170>
   157a4:	ldr	r0, [sl]
   157a8:	cmp	r0, #0
   157ac:	beq	157e0 <argp_parse@@Base+0x2170>
   157b0:	mov	r3, r4
   157b4:	ldr	r4, [sp, #16]
   157b8:	str	r5, [sp]
   157bc:	mov	r2, r8
   157c0:	mov	r1, r4
   157c4:	bl	15684 <argp_parse@@Base+0x2014>
   157c8:	clz	r3, r0
   157cc:	lsr	r3, r3, #5
   157d0:	ldr	r0, [sl, #16]!
   157d4:	cmp	r0, #0
   157d8:	bne	157b8 <argp_parse@@Base+0x2148>
   157dc:	mov	r4, r3
   157e0:	cmp	r4, #0
   157e4:	moveq	fp, #0
   157e8:	andne	fp, fp, #1
   157ec:	cmp	fp, #0
   157f0:	beq	15814 <argp_parse@@Base+0x21a4>
   157f4:	ldrb	r3, [r7]
   157f8:	cmp	r3, #0
   157fc:	bne	15844 <argp_parse@@Base+0x21d4>
   15800:	ldr	r2, [sp, #20]
   15804:	ldrb	r3, [r2]
   15808:	cmp	r3, #0
   1580c:	movne	r3, #0
   15810:	strbne	r3, [r2]
   15814:	clz	r0, r4
   15818:	lsr	r0, r0, #5
   1581c:	add	sp, sp, #28
   15820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15824:	ldr	r9, [sp, #8]
   15828:	b	15724 <argp_parse@@Base+0x20b4>
   1582c:	ldr	r9, [sp, #8]
   15830:	mov	fp, #0
   15834:	b	15734 <argp_parse@@Base+0x20c4>
   15838:	mov	r0, r2
   1583c:	bl	14264 <argp_parse@@Base+0xbf4>
   15840:	b	1579c <argp_parse@@Base+0x212c>
   15844:	ldr	r2, [sp, #20]
   15848:	ldrb	r3, [r2]
   1584c:	add	r3, r3, #1
   15850:	strb	r3, [r2]
   15854:	mov	r4, #0
   15858:	b	15814 <argp_parse@@Base+0x21a4>
   1585c:	cmp	sl, #0
   15860:	beq	15814 <argp_parse@@Base+0x21a4>
   15864:	ldr	r7, [sp, #8]
   15868:	mov	fp, #0
   1586c:	b	157a4 <argp_parse@@Base+0x2134>
   15870:	andeq	r0, r0, #6
   15874:	push	{r4, r5, r6, r7, r8, lr}
   15878:	mov	r7, r0
   1587c:	mov	r4, r2
   15880:	ldr	r3, [r2, #16]
   15884:	mov	r2, r1
   15888:	ldr	r1, [pc, #448]	; 15a50 <argp_parse@@Base+0x23e0>
   1588c:	bl	15640 <argp_parse@@Base+0x1fd0>
   15890:	subs	r5, r0, #0
   15894:	beq	159e8 <argp_parse@@Base+0x2378>
   15898:	ldrb	r3, [r5]
   1589c:	cmp	r3, #0
   158a0:	beq	159dc <argp_parse@@Base+0x236c>
   158a4:	ldr	r3, [r4, #8]
   158a8:	ldr	r3, [r3]
   158ac:	cmp	r3, #0
   158b0:	beq	158dc <argp_parse@@Base+0x226c>
   158b4:	ldr	r6, [r4, #4]
   158b8:	ldr	r2, [r6, #28]
   158bc:	ldr	r3, [r6, #32]
   158c0:	cmp	r2, r3
   158c4:	bcs	159fc <argp_parse@@Base+0x238c>
   158c8:	ldr	r3, [r6, #28]
   158cc:	add	r2, r3, #1
   158d0:	str	r2, [r6, #28]
   158d4:	mov	r2, #10
   158d8:	strb	r2, [r3]
   158dc:	ldr	r8, [pc, #368]	; 15a54 <argp_parse@@Base+0x23e4>
   158e0:	ldr	r1, [r8, #24]
   158e4:	ldr	r0, [r4, #4]
   158e8:	bl	1545c <argp_parse@@Base+0x1dec>
   158ec:	ldr	r6, [r4, #4]
   158f0:	ldr	r8, [r8, #24]
   158f4:	ldr	r3, [r6, #28]
   158f8:	ldr	r2, [r6, #24]
   158fc:	sub	r3, r3, r2
   15900:	ldr	r2, [r6, #16]
   15904:	cmp	r3, r2
   15908:	bhi	15a14 <argp_parse@@Base+0x23a4>
   1590c:	str	r8, [r6, #4]
   15910:	ldr	r6, [r4, #4]
   15914:	ldr	r3, [pc, #312]	; 15a54 <argp_parse@@Base+0x23e4>
   15918:	ldr	r8, [r3, #24]
   1591c:	ldr	r3, [r6, #28]
   15920:	ldr	r2, [r6, #24]
   15924:	sub	r3, r3, r2
   15928:	ldr	r2, [r6, #16]
   1592c:	cmp	r3, r2
   15930:	bhi	15a20 <argp_parse@@Base+0x23b0>
   15934:	str	r8, [r6, #12]
   15938:	mov	r0, r5
   1593c:	bl	117b4 <strlen@plt>
   15940:	subs	r8, r0, #0
   15944:	beq	15990 <argp_parse@@Base+0x2320>
   15948:	ldr	r6, [r4, #4]
   1594c:	ldr	r3, [r6, #28]
   15950:	add	r3, r3, r8
   15954:	ldr	r2, [r6, #32]
   15958:	cmp	r2, r3
   1595c:	bcs	15974 <argp_parse@@Base+0x2304>
   15960:	mov	r1, r8
   15964:	mov	r0, r6
   15968:	bl	19318 <argp_error@@Base+0x137c>
   1596c:	cmp	r0, #0
   15970:	beq	15990 <argp_parse@@Base+0x2320>
   15974:	mov	r2, r8
   15978:	mov	r1, r5
   1597c:	ldr	r0, [r6, #28]
   15980:	bl	11610 <memcpy@plt>
   15984:	ldr	r3, [r6, #28]
   15988:	add	r8, r3, r8
   1598c:	str	r8, [r6, #28]
   15990:	ldr	r6, [r4, #4]
   15994:	ldr	r3, [r6, #28]
   15998:	ldr	r2, [r6, #24]
   1599c:	sub	r3, r3, r2
   159a0:	ldr	r2, [r6, #16]
   159a4:	cmp	r3, r2
   159a8:	bhi	15a2c <argp_parse@@Base+0x23bc>
   159ac:	mov	r3, #0
   159b0:	str	r3, [r6, #4]
   159b4:	ldr	r6, [r4, #4]
   159b8:	ldr	r2, [r6, #28]
   159bc:	ldr	r3, [r6, #32]
   159c0:	cmp	r2, r3
   159c4:	bcs	15a38 <argp_parse@@Base+0x23c8>
   159c8:	ldr	r3, [r6, #28]
   159cc:	add	r2, r3, #1
   159d0:	str	r2, [r6, #28]
   159d4:	mov	r2, #10
   159d8:	strb	r2, [r3]
   159dc:	ldr	r3, [r4, #8]
   159e0:	mov	r2, #1
   159e4:	str	r2, [r3, #4]
   159e8:	cmp	r7, r5
   159ec:	popeq	{r4, r5, r6, r7, r8, pc}
   159f0:	mov	r0, r5
   159f4:	bl	14264 <argp_parse@@Base+0xbf4>
   159f8:	pop	{r4, r5, r6, r7, r8, pc}
   159fc:	mov	r1, #1
   15a00:	mov	r0, r6
   15a04:	bl	19318 <argp_error@@Base+0x137c>
   15a08:	cmp	r0, #0
   15a0c:	beq	158dc <argp_parse@@Base+0x226c>
   15a10:	b	158c8 <argp_parse@@Base+0x2258>
   15a14:	mov	r0, r6
   15a18:	bl	18d74 <argp_error@@Base+0xdd8>
   15a1c:	b	1590c <argp_parse@@Base+0x229c>
   15a20:	mov	r0, r6
   15a24:	bl	18d74 <argp_error@@Base+0xdd8>
   15a28:	b	15934 <argp_parse@@Base+0x22c4>
   15a2c:	mov	r0, r6
   15a30:	bl	18d74 <argp_error@@Base+0xdd8>
   15a34:	b	159ac <argp_parse@@Base+0x233c>
   15a38:	mov	r1, #1
   15a3c:	mov	r0, r6
   15a40:	bl	19318 <argp_error@@Base+0x137c>
   15a44:	cmp	r0, #0
   15a48:	beq	159dc <argp_parse@@Base+0x236c>
   15a4c:	b	159c8 <argp_parse@@Base+0x2358>
   15a50:	andeq	r0, r0, #3
   15a54:	muleq	r2, r8, r4
   15a58:	push	{r4, r5, r6, r7, r8, lr}
   15a5c:	mov	r6, r0
   15a60:	mov	r4, r1
   15a64:	ldr	r3, [r1, #12]
   15a68:	cmp	r3, #0
   15a6c:	beq	15b8c <argp_parse@@Base+0x251c>
   15a70:	ldr	r3, [r1, #8]
   15a74:	ldr	r7, [r3]
   15a78:	ldr	r2, [r1]
   15a7c:	ldr	r5, [r2, #16]
   15a80:	ldr	r3, [r3, #4]
   15a84:	cmp	r3, #0
   15a88:	cmpne	r7, #0
   15a8c:	beq	15ac8 <argp_parse@@Base+0x2458>
   15a90:	ldr	r2, [r2, #12]
   15a94:	ldr	r3, [r7, #12]
   15a98:	cmp	r2, r3
   15a9c:	beq	15ac8 <argp_parse@@Base+0x2458>
   15aa0:	ldr	r8, [r1, #4]
   15aa4:	ldr	r2, [r8, #28]
   15aa8:	ldr	r3, [r8, #32]
   15aac:	cmp	r2, r3
   15ab0:	bcs	15b68 <argp_parse@@Base+0x24f8>
   15ab4:	ldr	r3, [r8, #28]
   15ab8:	add	r2, r3, #1
   15abc:	str	r2, [r8, #28]
   15ac0:	mov	r2, #10
   15ac4:	strb	r2, [r3]
   15ac8:	cmp	r5, #0
   15acc:	beq	15b50 <argp_parse@@Base+0x24e0>
   15ad0:	ldr	r0, [r5]
   15ad4:	cmp	r0, #0
   15ad8:	beq	15b50 <argp_parse@@Base+0x24e0>
   15adc:	ldrb	r3, [r0]
   15ae0:	cmp	r3, #0
   15ae4:	beq	15b50 <argp_parse@@Base+0x24e0>
   15ae8:	cmp	r7, #0
   15aec:	beq	15b1c <argp_parse@@Base+0x24ac>
   15af0:	ldr	r3, [r7, #16]
   15af4:	cmp	r5, r3
   15af8:	beq	15b50 <argp_parse@@Base+0x24e0>
   15afc:	cmp	r3, #0
   15b00:	beq	15b1c <argp_parse@@Base+0x24ac>
   15b04:	ldr	r3, [r3, #12]
   15b08:	cmp	r3, #0
   15b0c:	cmpne	r5, r3
   15b10:	bne	15b04 <argp_parse@@Base+0x2494>
   15b14:	cmp	r5, r3
   15b18:	beq	15b50 <argp_parse@@Base+0x24e0>
   15b1c:	ldr	r3, [r4, #4]
   15b20:	ldr	r7, [r3, #12]
   15b24:	mov	r2, r4
   15b28:	ldr	r1, [r5, #16]
   15b2c:	bl	15874 <argp_parse@@Base+0x2204>
   15b30:	ldr	r5, [r4, #4]
   15b34:	ldr	r3, [r5, #28]
   15b38:	ldr	r2, [r5, #24]
   15b3c:	sub	r3, r3, r2
   15b40:	ldr	r2, [r5, #16]
   15b44:	cmp	r3, r2
   15b48:	bhi	15b80 <argp_parse@@Base+0x2510>
   15b4c:	str	r7, [r5, #12]
   15b50:	mov	r3, #0
   15b54:	str	r3, [r4, #12]
   15b58:	mov	r1, r6
   15b5c:	ldr	r0, [r4, #4]
   15b60:	bl	1545c <argp_parse@@Base+0x1dec>
   15b64:	pop	{r4, r5, r6, r7, r8, pc}
   15b68:	mov	r1, #1
   15b6c:	mov	r0, r8
   15b70:	bl	19318 <argp_error@@Base+0x137c>
   15b74:	cmp	r0, #0
   15b78:	beq	15ac8 <argp_parse@@Base+0x2458>
   15b7c:	b	15ab4 <argp_parse@@Base+0x2444>
   15b80:	mov	r0, r5
   15b84:	bl	18d74 <argp_error@@Base+0xdd8>
   15b88:	b	15b4c <argp_parse@@Base+0x24dc>
   15b8c:	ldr	r5, [r1, #4]
   15b90:	ldr	r3, [r5, #28]
   15b94:	add	r3, r3, #2
   15b98:	ldr	r2, [r5, #32]
   15b9c:	cmp	r2, r3
   15ba0:	bcs	15bb8 <argp_parse@@Base+0x2548>
   15ba4:	mov	r1, #2
   15ba8:	mov	r0, r5
   15bac:	bl	19318 <argp_error@@Base+0x137c>
   15bb0:	cmp	r0, #0
   15bb4:	beq	15b58 <argp_parse@@Base+0x24e8>
   15bb8:	ldr	r3, [r5, #28]
   15bbc:	ldr	r2, [pc, #20]	; 15bd8 <argp_parse@@Base+0x2568>
   15bc0:	ldrh	r2, [r2]
   15bc4:	strh	r2, [r3]
   15bc8:	ldr	r3, [r5, #28]
   15bcc:	add	r3, r3, #2
   15bd0:	str	r3, [r5, #28]
   15bd4:	b	15b58 <argp_parse@@Base+0x24e8>
   15bd8:	muleq	r1, r4, r6
   15bdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15be0:	sub	sp, sp, #28
   15be4:	mov	fp, r0
   15be8:	str	r1, [sp, #8]
   15bec:	mov	r6, r2
   15bf0:	mov	r8, r3
   15bf4:	ldr	r7, [sp, #64]	; 0x40
   15bf8:	ldr	r5, [sp, #68]	; 0x44
   15bfc:	ldr	r9, [r0, #12]
   15c00:	ldr	r3, [r0, #16]
   15c04:	str	r3, [sp, #16]
   15c08:	cmp	r9, #0
   15c0c:	beq	16068 <argp_parse@@Base+0x29f8>
   15c10:	mov	r1, #11
   15c14:	mov	r0, r9
   15c18:	bl	117c0 <strchr@plt>
   15c1c:	cmp	r6, #0
   15c20:	beq	15f18 <argp_parse@@Base+0x28a8>
   15c24:	cmp	r0, #0
   15c28:	addne	r9, r0, #1
   15c2c:	beq	16050 <argp_parse@@Base+0x29e0>
   15c30:	ldr	r3, [fp, #20]
   15c34:	cmp	r3, #0
   15c38:	movne	sl, #0
   15c3c:	beq	16058 <argp_parse@@Base+0x29e8>
   15c40:	ldr	r1, [sp, #8]
   15c44:	mov	r0, fp
   15c48:	bl	140e4 <argp_parse@@Base+0xa74>
   15c4c:	str	r0, [sp, #12]
   15c50:	ldr	r3, [fp, #20]
   15c54:	ldr	r2, [pc, #1140]	; 160d0 <argp_parse@@Base+0x2a60>
   15c58:	ldr	r0, [pc, #1140]	; 160d4 <argp_parse@@Base+0x2a64>
   15c5c:	cmp	r6, #0
   15c60:	moveq	r0, r2
   15c64:	ldr	r2, [sp, #12]
   15c68:	mov	r1, r9
   15c6c:	blx	r3
   15c70:	mov	r4, r0
   15c74:	cmp	r4, #0
   15c78:	beq	16008 <argp_parse@@Base+0x2998>
   15c7c:	cmp	r8, #0
   15c80:	beq	15ca8 <argp_parse@@Base+0x2638>
   15c84:	ldr	r2, [r5, #28]
   15c88:	ldr	r3, [r5, #32]
   15c8c:	cmp	r2, r3
   15c90:	bcs	15f5c <argp_parse@@Base+0x28ec>
   15c94:	ldr	r3, [r5, #28]
   15c98:	add	r2, r3, #1
   15c9c:	str	r2, [r5, #28]
   15ca0:	mov	r2, #10
   15ca4:	strb	r2, [r3]
   15ca8:	cmp	r4, r9
   15cac:	movne	r3, #0
   15cb0:	moveq	r3, #1
   15cb4:	cmp	sl, #0
   15cb8:	moveq	r3, #0
   15cbc:	cmp	r3, #0
   15cc0:	beq	15f74 <argp_parse@@Base+0x2904>
   15cc4:	ldr	r3, [r5, #28]
   15cc8:	add	r3, r3, sl
   15ccc:	ldr	r2, [r5, #32]
   15cd0:	cmp	r2, r3
   15cd4:	bcs	15cec <argp_parse@@Base+0x267c>
   15cd8:	mov	r1, sl
   15cdc:	mov	r0, r5
   15ce0:	bl	19318 <argp_error@@Base+0x137c>
   15ce4:	cmp	r0, #0
   15ce8:	beq	15d08 <argp_parse@@Base+0x2698>
   15cec:	mov	r2, sl
   15cf0:	mov	r1, r9
   15cf4:	ldr	r0, [r5, #28]
   15cf8:	bl	11610 <memcpy@plt>
   15cfc:	ldr	r3, [r5, #28]
   15d00:	add	r3, r3, sl
   15d04:	str	r3, [r5, #28]
   15d08:	ldr	r3, [r5, #28]
   15d0c:	ldr	r2, [r5, #24]
   15d10:	sub	r3, r3, r2
   15d14:	ldr	r2, [r5, #16]
   15d18:	cmp	r3, r2
   15d1c:	bhi	15fd4 <argp_parse@@Base+0x2964>
   15d20:	ldr	r3, [r5, #20]
   15d24:	bic	r3, r3, r3, asr #31
   15d28:	ldr	r2, [r5, #4]
   15d2c:	cmp	r2, r3
   15d30:	bcs	15d58 <argp_parse@@Base+0x26e8>
   15d34:	ldr	r2, [r5, #28]
   15d38:	ldr	r3, [r5, #32]
   15d3c:	cmp	r2, r3
   15d40:	bcs	15fe0 <argp_parse@@Base+0x2970>
   15d44:	ldr	r3, [r5, #28]
   15d48:	add	r2, r3, #1
   15d4c:	str	r2, [r5, #28]
   15d50:	mov	r2, #10
   15d54:	strb	r2, [r3]
   15d58:	cmp	r4, r9
   15d5c:	moveq	r4, #1
   15d60:	bne	15ff8 <argp_parse@@Base+0x2988>
   15d64:	cmp	r9, #0
   15d68:	cmpne	sl, #0
   15d6c:	beq	15d84 <argp_parse@@Base+0x2714>
   15d70:	ldr	r3, [fp, #20]
   15d74:	cmp	r3, #0
   15d78:	beq	15e90 <argp_parse@@Base+0x2820>
   15d7c:	mov	r0, r9
   15d80:	bl	14264 <argp_parse@@Base+0xbf4>
   15d84:	cmp	r6, #0
   15d88:	beq	15e90 <argp_parse@@Base+0x2820>
   15d8c:	ldr	r3, [fp, #20]
   15d90:	cmp	r3, #0
   15d94:	beq	15e90 <argp_parse@@Base+0x2820>
   15d98:	ldr	r2, [sp, #12]
   15d9c:	mov	r1, #0
   15da0:	ldr	r0, [pc, #816]	; 160d8 <argp_parse@@Base+0x2a68>
   15da4:	blx	r3
   15da8:	subs	r9, r0, #0
   15dac:	beq	15e90 <argp_parse@@Base+0x2820>
   15db0:	orrs	r3, r8, r4
   15db4:	beq	15ddc <argp_parse@@Base+0x276c>
   15db8:	ldr	r2, [r5, #28]
   15dbc:	ldr	r3, [r5, #32]
   15dc0:	cmp	r2, r3
   15dc4:	bcs	16010 <argp_parse@@Base+0x29a0>
   15dc8:	ldr	r3, [r5, #28]
   15dcc:	add	r2, r3, #1
   15dd0:	str	r2, [r5, #28]
   15dd4:	mov	r2, #10
   15dd8:	strb	r2, [r3]
   15ddc:	mov	r0, r9
   15de0:	bl	117b4 <strlen@plt>
   15de4:	subs	r4, r0, #0
   15de8:	beq	15e30 <argp_parse@@Base+0x27c0>
   15dec:	ldr	r3, [r5, #28]
   15df0:	add	r3, r3, r4
   15df4:	ldr	r2, [r5, #32]
   15df8:	cmp	r2, r3
   15dfc:	bcs	15e14 <argp_parse@@Base+0x27a4>
   15e00:	mov	r1, r4
   15e04:	mov	r0, r5
   15e08:	bl	19318 <argp_error@@Base+0x137c>
   15e0c:	cmp	r0, #0
   15e10:	beq	15e30 <argp_parse@@Base+0x27c0>
   15e14:	mov	r2, r4
   15e18:	mov	r1, r9
   15e1c:	ldr	r0, [r5, #28]
   15e20:	bl	11610 <memcpy@plt>
   15e24:	ldr	r3, [r5, #28]
   15e28:	add	r4, r3, r4
   15e2c:	str	r4, [r5, #28]
   15e30:	mov	r0, r9
   15e34:	bl	14264 <argp_parse@@Base+0xbf4>
   15e38:	ldr	r3, [r5, #28]
   15e3c:	ldr	r2, [r5, #24]
   15e40:	sub	r3, r3, r2
   15e44:	ldr	r2, [r5, #16]
   15e48:	cmp	r3, r2
   15e4c:	bhi	16028 <argp_parse@@Base+0x29b8>
   15e50:	ldr	r3, [r5, #20]
   15e54:	bic	r3, r3, r3, asr #31
   15e58:	ldr	r2, [r5, #4]
   15e5c:	cmp	r2, r3
   15e60:	movcs	r4, #1
   15e64:	bcs	15e90 <argp_parse@@Base+0x2820>
   15e68:	ldr	r2, [r5, #28]
   15e6c:	ldr	r3, [r5, #32]
   15e70:	cmp	r2, r3
   15e74:	bcs	16034 <argp_parse@@Base+0x29c4>
   15e78:	ldr	r3, [r5, #28]
   15e7c:	add	r2, r3, #1
   15e80:	str	r2, [r5, #28]
   15e84:	mov	r2, #10
   15e88:	strb	r2, [r3]
   15e8c:	mov	r4, #1
   15e90:	ldr	r3, [sp, #16]
   15e94:	cmp	r3, #0
   15e98:	beq	15f0c <argp_parse@@Base+0x289c>
   15e9c:	ldr	r0, [r3]
   15ea0:	cmp	r0, #0
   15ea4:	beq	15f0c <argp_parse@@Base+0x289c>
   15ea8:	clz	r9, r7
   15eac:	lsr	r9, r9, #5
   15eb0:	cmp	r7, #0
   15eb4:	cmpne	r4, #0
   15eb8:	bne	15f0c <argp_parse@@Base+0x289c>
   15ebc:	mov	sl, r3
   15ec0:	ldr	fp, [sp, #8]
   15ec4:	orrs	r3, r8, r4
   15ec8:	str	r5, [sp, #4]
   15ecc:	str	r7, [sp]
   15ed0:	movne	r3, #1
   15ed4:	moveq	r3, #0
   15ed8:	mov	r2, r6
   15edc:	mov	r1, fp
   15ee0:	bl	15bdc <argp_parse@@Base+0x256c>
   15ee4:	orr	r4, r4, r0
   15ee8:	ldr	r0, [sl, #16]
   15eec:	cmp	r0, #0
   15ef0:	beq	15f0c <argp_parse@@Base+0x289c>
   15ef4:	add	sl, sl, #16
   15ef8:	cmp	r4, #0
   15efc:	movne	r3, r9
   15f00:	orreq	r3, r9, #1
   15f04:	cmp	r3, #0
   15f08:	bne	15ec4 <argp_parse@@Base+0x2854>
   15f0c:	mov	r0, r4
   15f10:	add	sp, sp, #28
   15f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f18:	cmp	r0, #0
   15f1c:	beq	160a0 <argp_parse@@Base+0x2a30>
   15f20:	sub	sl, r0, r9
   15f24:	ldr	r3, [fp, #20]
   15f28:	cmp	r3, #0
   15f2c:	beq	15f4c <argp_parse@@Base+0x28dc>
   15f30:	cmp	sl, #0
   15f34:	beq	15c40 <argp_parse@@Base+0x25d0>
   15f38:	mov	r1, sl
   15f3c:	mov	r0, r9
   15f40:	bl	115f8 <strndup@plt>
   15f44:	mov	r9, r0
   15f48:	b	15c40 <argp_parse@@Base+0x25d0>
   15f4c:	mov	r4, r9
   15f50:	mov	r3, #0
   15f54:	str	r3, [sp, #12]
   15f58:	b	15c7c <argp_parse@@Base+0x260c>
   15f5c:	mov	r1, #1
   15f60:	mov	r0, r5
   15f64:	bl	19318 <argp_error@@Base+0x137c>
   15f68:	cmp	r0, #0
   15f6c:	beq	15ca8 <argp_parse@@Base+0x2638>
   15f70:	b	15c94 <argp_parse@@Base+0x2624>
   15f74:	mov	r0, r4
   15f78:	bl	117b4 <strlen@plt>
   15f7c:	subs	r3, r0, #0
   15f80:	mov	r1, r3
   15f84:	str	r3, [sp, #20]
   15f88:	beq	15d08 <argp_parse@@Base+0x2698>
   15f8c:	ldr	r3, [r5, #28]
   15f90:	add	r3, r3, r1
   15f94:	ldr	r2, [r5, #32]
   15f98:	cmp	r2, r3
   15f9c:	bcs	15fb0 <argp_parse@@Base+0x2940>
   15fa0:	mov	r0, r5
   15fa4:	bl	19318 <argp_error@@Base+0x137c>
   15fa8:	cmp	r0, #0
   15fac:	beq	15d08 <argp_parse@@Base+0x2698>
   15fb0:	ldr	r2, [sp, #20]
   15fb4:	mov	r1, r4
   15fb8:	ldr	r0, [r5, #28]
   15fbc:	bl	11610 <memcpy@plt>
   15fc0:	ldr	r3, [r5, #28]
   15fc4:	ldr	r2, [sp, #20]
   15fc8:	add	r3, r3, r2
   15fcc:	str	r3, [r5, #28]
   15fd0:	b	15d08 <argp_parse@@Base+0x2698>
   15fd4:	mov	r0, r5
   15fd8:	bl	18d74 <argp_error@@Base+0xdd8>
   15fdc:	b	15d20 <argp_parse@@Base+0x26b0>
   15fe0:	mov	r1, #1
   15fe4:	mov	r0, r5
   15fe8:	bl	19318 <argp_error@@Base+0x137c>
   15fec:	cmp	r0, #0
   15ff0:	beq	15d58 <argp_parse@@Base+0x26e8>
   15ff4:	b	15d44 <argp_parse@@Base+0x26d4>
   15ff8:	mov	r0, r4
   15ffc:	bl	14264 <argp_parse@@Base+0xbf4>
   16000:	mov	r4, #1
   16004:	b	15d64 <argp_parse@@Base+0x26f4>
   16008:	mov	r4, #0
   1600c:	b	15d64 <argp_parse@@Base+0x26f4>
   16010:	mov	r1, #1
   16014:	mov	r0, r5
   16018:	bl	19318 <argp_error@@Base+0x137c>
   1601c:	cmp	r0, #0
   16020:	beq	15ddc <argp_parse@@Base+0x276c>
   16024:	b	15dc8 <argp_parse@@Base+0x2758>
   16028:	mov	r0, r5
   1602c:	bl	18d74 <argp_error@@Base+0xdd8>
   16030:	b	15e50 <argp_parse@@Base+0x27e0>
   16034:	mov	r1, #1
   16038:	mov	r0, r5
   1603c:	bl	19318 <argp_error@@Base+0x137c>
   16040:	cmp	r0, #0
   16044:	moveq	r4, #1
   16048:	beq	15e90 <argp_parse@@Base+0x2820>
   1604c:	b	15e78 <argp_parse@@Base+0x2808>
   16050:	mov	r9, #0
   16054:	b	15c30 <argp_parse@@Base+0x25c0>
   16058:	mov	r4, r9
   1605c:	mov	sl, #0
   16060:	str	sl, [sp, #12]
   16064:	b	15c74 <argp_parse@@Base+0x2604>
   16068:	ldr	r3, [r0, #20]
   1606c:	cmp	r3, #0
   16070:	movne	sl, #0
   16074:	bne	15c40 <argp_parse@@Base+0x25d0>
   16078:	mov	r3, r9
   1607c:	cmp	r9, #0
   16080:	moveq	r4, #0
   16084:	streq	r4, [sp, #12]
   16088:	beq	15d84 <argp_parse@@Base+0x2714>
   1608c:	mov	r4, r9
   16090:	mov	r9, r3
   16094:	mov	sl, #0
   16098:	str	sl, [sp, #12]
   1609c:	b	15c7c <argp_parse@@Base+0x260c>
   160a0:	ldr	r3, [fp, #20]
   160a4:	cmp	r3, #0
   160a8:	moveq	r3, r9
   160ac:	beq	1607c <argp_parse@@Base+0x2a0c>
   160b0:	ldr	r1, [sp, #8]
   160b4:	mov	r0, fp
   160b8:	bl	140e4 <argp_parse@@Base+0xa74>
   160bc:	str	r0, [sp, #12]
   160c0:	ldr	r3, [fp, #20]
   160c4:	mov	sl, #0
   160c8:	ldr	r0, [pc]	; 160d0 <argp_parse@@Base+0x2a60>
   160cc:	b	15c64 <argp_parse@@Base+0x25f4>
   160d0:	andeq	r0, r0, #1
   160d4:	andeq	r0, r0, #2
   160d8:	andeq	r0, r0, #4
   160dc:	ldr	r3, [r0, #12]
   160e0:	ldr	r2, [r1, #12]
   160e4:	cmp	r3, r2
   160e8:	beq	16140 <argp_parse@@Base+0x2ad0>
   160ec:	push	{r4, r5, r6, lr}
   160f0:	mov	r5, r1
   160f4:	mov	r4, r0
   160f8:	mov	r1, r2
   160fc:	mov	r0, r3
   16100:	bl	160dc <argp_parse@@Base+0x2a6c>
   16104:	subs	r3, r0, #0
   16108:	bne	16138 <argp_parse@@Base+0x2ac8>
   1610c:	ldr	r0, [r4, #8]
   16110:	ldr	r3, [r5, #8]
   16114:	mvn	r2, r3
   16118:	lsr	r2, r2, #31
   1611c:	cmp	r2, r0, lsr #31
   16120:	subne	r3, r0, r3
   16124:	subeq	r3, r3, r0
   16128:	cmp	r3, #0
   1612c:	ldreq	r3, [r5, #4]
   16130:	ldreq	r0, [r4, #4]
   16134:	subeq	r3, r3, r0
   16138:	mov	r0, r3
   1613c:	pop	{r4, r5, r6, pc}
   16140:	ldr	r2, [r0, #8]
   16144:	ldr	r3, [r1, #8]
   16148:	mvn	ip, r3
   1614c:	lsr	ip, ip, #31
   16150:	cmp	ip, r2, lsr #31
   16154:	subne	r3, r2, r3
   16158:	subeq	r3, r3, r2
   1615c:	cmp	r3, #0
   16160:	ldreq	r3, [r1, #4]
   16164:	ldreq	r0, [r0, #4]
   16168:	subeq	r3, r3, r0
   1616c:	mov	r0, r3
   16170:	bx	lr
   16174:	push	{r4, r5, r6, r7, r8, lr}
   16178:	sub	sp, sp, #8
   1617c:	ldr	lr, [r0, #16]
   16180:	cmp	lr, #0
   16184:	movne	r2, lr
   16188:	bne	16198 <argp_parse@@Base+0x2b28>
   1618c:	ldr	ip, [r0, #12]
   16190:	b	161a8 <argp_parse@@Base+0x2b38>
   16194:	mov	r2, r3
   16198:	ldr	r3, [r2, #12]
   1619c:	cmp	r3, #0
   161a0:	bne	16194 <argp_parse@@Base+0x2b24>
   161a4:	ldr	ip, [r2, #8]
   161a8:	ldr	r5, [r1, #16]
   161ac:	cmp	r5, #0
   161b0:	movne	r2, r5
   161b4:	bne	161c4 <argp_parse@@Base+0x2b54>
   161b8:	ldr	r4, [r1, #12]
   161bc:	b	161d4 <argp_parse@@Base+0x2b64>
   161c0:	mov	r2, r3
   161c4:	ldr	r3, [r2, #12]
   161c8:	cmp	r3, #0
   161cc:	bne	161c0 <argp_parse@@Base+0x2b50>
   161d0:	ldr	r4, [r2, #8]
   161d4:	mvn	r3, r4
   161d8:	lsr	r3, r3, #31
   161dc:	cmp	r3, ip, lsr #31
   161e0:	subne	r4, ip, r4
   161e4:	subeq	r4, r4, ip
   161e8:	cmp	r4, #0
   161ec:	bne	16254 <argp_parse@@Base+0x2be4>
   161f0:	adds	r4, r5, #0
   161f4:	movne	r4, #1
   161f8:	cmp	lr, #0
   161fc:	rsbeq	r4, r4, #0
   16200:	rsbne	r4, r4, #1
   16204:	cmp	r4, #0
   16208:	bne	16254 <argp_parse@@Base+0x2be4>
   1620c:	mov	r6, r1
   16210:	mov	r7, r0
   16214:	cmp	lr, #0
   16218:	beq	162a4 <argp_parse@@Base+0x2c34>
   1621c:	ldr	ip, [lr, #20]
   16220:	ldr	r2, [r5, #20]
   16224:	cmp	ip, r2
   16228:	ble	16260 <argp_parse@@Base+0x2bf0>
   1622c:	mov	r0, lr
   16230:	ldr	r0, [r0, #12]
   16234:	ldr	r3, [r0, #20]
   16238:	cmp	r2, r3
   1623c:	blt	16230 <argp_parse@@Base+0x2bc0>
   16240:	mov	r1, r5
   16244:	bl	160dc <argp_parse@@Base+0x2a6c>
   16248:	subs	r4, r0, #0
   1624c:	cmp	r0, #0
   16250:	moveq	r4, #1
   16254:	mov	r0, r4
   16258:	add	sp, sp, #8
   1625c:	pop	{r4, r5, r6, r7, r8, pc}
   16260:	cmp	ip, r2
   16264:	bge	16290 <argp_parse@@Base+0x2c20>
   16268:	mov	r1, r5
   1626c:	ldr	r1, [r1, #12]
   16270:	ldr	r3, [r1, #20]
   16274:	cmp	ip, r3
   16278:	blt	1626c <argp_parse@@Base+0x2bfc>
   1627c:	mov	r0, lr
   16280:	bl	160dc <argp_parse@@Base+0x2a6c>
   16284:	subs	r4, r0, #0
   16288:	mvneq	r4, #0
   1628c:	b	16254 <argp_parse@@Base+0x2be4>
   16290:	mov	r1, r5
   16294:	mov	r0, lr
   16298:	bl	160dc <argp_parse@@Base+0x2a6c>
   1629c:	subs	r4, r0, #0
   162a0:	bne	16254 <argp_parse@@Base+0x2be4>
   162a4:	ldr	r3, [r7, #12]
   162a8:	ldr	r4, [r6, #12]
   162ac:	mvn	r2, r4
   162b0:	lsr	r2, r2, #31
   162b4:	cmp	r2, r3, lsr #31
   162b8:	subne	r4, r3, r4
   162bc:	subeq	r4, r4, r3
   162c0:	cmp	r4, #0
   162c4:	bne	16254 <argp_parse@@Base+0x2be4>
   162c8:	mov	r0, r7
   162cc:	bl	14f1c <argp_parse@@Base+0x18ac>
   162d0:	mov	r5, r0
   162d4:	str	r0, [sp]
   162d8:	mov	r0, r6
   162dc:	bl	14f1c <argp_parse@@Base+0x18ac>
   162e0:	str	r0, [sp, #4]
   162e4:	ldr	r3, [r7]
   162e8:	ldr	r3, [r3, #12]
   162ec:	adds	r5, r5, #0
   162f0:	movne	r5, #1
   162f4:	ands	r3, r5, r3, lsr #3
   162f8:	beq	1643c <argp_parse@@Base+0x2dcc>
   162fc:	mov	r0, sp
   16300:	bl	150e0 <argp_parse@@Base+0x1a70>
   16304:	adds	r5, r0, #0
   16308:	movne	r5, #1
   1630c:	ldr	r3, [r6]
   16310:	ldr	r0, [r3, #12]
   16314:	ands	r0, r0, #8
   16318:	beq	16338 <argp_parse@@Base+0x2cc8>
   1631c:	ldr	r3, [sp, #4]
   16320:	cmp	r3, #0
   16324:	beq	16434 <argp_parse@@Base+0x2dc4>
   16328:	add	r0, sp, #4
   1632c:	bl	150e0 <argp_parse@@Base+0x1a70>
   16330:	adds	r0, r0, #0
   16334:	movne	r0, #1
   16338:	subs	r4, r5, r0
   1633c:	bne	16254 <argp_parse@@Base+0x2be4>
   16340:	ldr	r2, [r7, #20]
   16344:	ldr	r4, [pc, #276]	; 16460 <argp_parse@@Base+0x2df0>
   16348:	mov	r3, #0
   1634c:	ldr	r2, [r2, #24]
   16350:	mov	r1, r4
   16354:	mov	r0, r7
   16358:	bl	14fb4 <argp_parse@@Base+0x1944>
   1635c:	mov	r5, r0
   16360:	uxtb	r8, r0
   16364:	ldr	r2, [r6, #20]
   16368:	mov	r3, #0
   1636c:	ldr	r2, [r2, #24]
   16370:	mov	r1, r4
   16374:	mov	r0, r6
   16378:	bl	14fb4 <argp_parse@@Base+0x1944>
   1637c:	uxtb	r7, r0
   16380:	cmp	r8, #0
   16384:	movne	r5, r8
   16388:	bne	1639c <argp_parse@@Base+0x2d2c>
   1638c:	ldr	r3, [sp]
   16390:	cmp	r3, #0
   16394:	ldrbne	r5, [r3]
   16398:	moveq	r5, #0
   1639c:	cmp	r7, #0
   163a0:	uxtbne	r6, r0
   163a4:	bne	163b8 <argp_parse@@Base+0x2d48>
   163a8:	ldr	r3, [sp, #4]
   163ac:	cmp	r3, #0
   163b0:	ldrbne	r6, [r3]
   163b4:	moveq	r6, #0
   163b8:	bl	11760 <__ctype_tolower_loc@plt>
   163bc:	ldr	r3, [r0]
   163c0:	ldr	r4, [r3, r5, lsl #2]
   163c4:	ldr	r3, [r3, r6, lsl #2]
   163c8:	subs	r4, r4, r3
   163cc:	bne	16254 <argp_parse@@Base+0x2be4>
   163d0:	subs	r4, r6, r5
   163d4:	bne	16254 <argp_parse@@Base+0x2be4>
   163d8:	adds	r4, r7, #0
   163dc:	movne	r4, #1
   163e0:	cmp	r8, #0
   163e4:	rsbeq	r4, r4, #0
   163e8:	rsbne	r4, r4, #1
   163ec:	cmp	r4, #0
   163f0:	bne	16254 <argp_parse@@Base+0x2be4>
   163f4:	cmp	r8, #0
   163f8:	bne	16254 <argp_parse@@Base+0x2be4>
   163fc:	ldr	r0, [sp]
   16400:	ldr	r1, [sp, #4]
   16404:	adds	r4, r1, #0
   16408:	movne	r4, #1
   1640c:	cmp	r0, #0
   16410:	rsbeq	r4, r4, #0
   16414:	rsbne	r4, r4, #1
   16418:	cmp	r4, #0
   1641c:	bne	16254 <argp_parse@@Base+0x2be4>
   16420:	cmp	r0, #0
   16424:	beq	16254 <argp_parse@@Base+0x2be4>
   16428:	bl	116b8 <strcasecmp@plt>
   1642c:	mov	r4, r0
   16430:	b	16254 <argp_parse@@Base+0x2be4>
   16434:	mov	r0, r4
   16438:	b	16338 <argp_parse@@Base+0x2cc8>
   1643c:	ldr	r3, [r6]
   16440:	ldr	r3, [r3, #12]
   16444:	tst	r3, #8
   16448:	beq	16340 <argp_parse@@Base+0x2cd0>
   1644c:	ldr	r3, [sp, #4]
   16450:	cmp	r3, #0
   16454:	movne	r5, r4
   16458:	bne	16328 <argp_parse@@Base+0x2cb8>
   1645c:	b	16340 <argp_parse@@Base+0x2cd0>
   16460:	muleq	r1, r8, r0
   16464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16468:	sub	sp, sp, #52	; 0x34
   1646c:	str	r0, [sp, #24]
   16470:	str	r1, [sp, #28]
   16474:	ldr	r2, [r0, #16]
   16478:	str	r2, [sp, #8]
   1647c:	ldr	r5, [r0]
   16480:	mov	r0, #16
   16484:	bl	14e9c <argp_parse@@Base+0x182c>
   16488:	subs	fp, r0, #0
   1648c:	beq	164bc <argp_parse@@Base+0x2e4c>
   16490:	mov	r3, #0
   16494:	str	r3, [fp, #4]
   16498:	str	r3, [fp, #12]
   1649c:	cmp	r5, r3
   164a0:	beq	16694 <argp_parse@@Base+0x3024>
   164a4:	ldr	r4, [r5, #12]
   164a8:	ands	r4, r4, #4
   164ac:	bne	164d0 <argp_parse@@Base+0x2e60>
   164b0:	add	r6, r5, #24
   164b4:	mov	r8, r3
   164b8:	b	164f8 <argp_parse@@Base+0x2e88>
   164bc:	ldr	r3, [pc, #1576]	; 16aec <argp_parse@@Base+0x347c>
   164c0:	ldr	r2, [pc, #1576]	; 16af0 <argp_parse@@Base+0x3480>
   164c4:	ldr	r1, [pc, #1576]	; 16af4 <argp_parse@@Base+0x3484>
   164c8:	ldr	r0, [pc, #1576]	; 16af8 <argp_parse@@Base+0x3488>
   164cc:	bl	11988 <__assert_fail@plt>
   164d0:	ldr	r3, [pc, #1556]	; 16aec <argp_parse@@Base+0x347c>
   164d4:	mov	r2, #460	; 0x1cc
   164d8:	ldr	r1, [pc, #1556]	; 16af4 <argp_parse@@Base+0x3484>
   164dc:	ldr	r0, [pc, #1560]	; 16afc <argp_parse@@Base+0x348c>
   164e0:	bl	11988 <__assert_fail@plt>
   164e4:	ldr	r2, [fp, #4]
   164e8:	add	r2, r2, #1
   164ec:	str	r2, [fp, #4]
   164f0:	b	16520 <argp_parse@@Base+0x2eb0>
   164f4:	add	r6, r6, #24
   164f8:	mov	r3, r6
   164fc:	ldr	r2, [r6, #-20]	; 0xffffffec
   16500:	cmp	r2, #0
   16504:	bne	16514 <argp_parse@@Base+0x2ea4>
   16508:	ldr	r2, [r6, #-24]	; 0xffffffe8
   1650c:	cmp	r2, #0
   16510:	beq	16558 <argp_parse@@Base+0x2ee8>
   16514:	ldr	r2, [r3, #-12]
   16518:	tst	r2, #4
   1651c:	beq	164e4 <argp_parse@@Base+0x2e74>
   16520:	ldr	r2, [r3, #-12]
   16524:	tst	r2, #8
   16528:	bne	164f4 <argp_parse@@Base+0x2e84>
   1652c:	ldr	r7, [r3, #-20]	; 0xffffffec
   16530:	sub	r3, r7, #1
   16534:	cmp	r3, #254	; 0xfe
   16538:	bhi	164f4 <argp_parse@@Base+0x2e84>
   1653c:	bl	11784 <__ctype_b_loc@plt>
   16540:	ldr	r3, [r0]
   16544:	lsl	r7, r7, #1
   16548:	ldrh	r3, [r3, r7]
   1654c:	tst	r3, #16384	; 0x4000
   16550:	addne	r8, r8, #1
   16554:	b	164f4 <argp_parse@@Base+0x2e84>
   16558:	ldr	r2, [r6, #-8]
   1655c:	cmp	r2, #0
   16560:	bne	16514 <argp_parse@@Base+0x2ea4>
   16564:	ldr	r2, [r6, #-4]
   16568:	cmp	r2, #0
   1656c:	bne	16514 <argp_parse@@Base+0x2ea4>
   16570:	ldr	r0, [fp, #4]
   16574:	rsb	r0, r0, r0, lsl #3
   16578:	lsl	r0, r0, #2
   1657c:	bl	14e9c <argp_parse@@Base+0x182c>
   16580:	str	r0, [fp]
   16584:	add	r0, r8, #1
   16588:	bl	14e9c <argp_parse@@Base+0x182c>
   1658c:	str	r0, [fp, #8]
   16590:	ldr	r8, [fp]
   16594:	cmp	r0, #0
   16598:	cmpne	r8, #0
   1659c:	bne	165b4 <argp_parse@@Base+0x2f44>
   165a0:	ldr	r3, [pc, #1348]	; 16aec <argp_parse@@Base+0x347c>
   165a4:	ldr	r2, [pc, #1364]	; 16b00 <argp_parse@@Base+0x3490>
   165a8:	ldr	r1, [pc, #1348]	; 16af4 <argp_parse@@Base+0x3484>
   165ac:	ldr	r0, [pc, #1360]	; 16b04 <argp_parse@@Base+0x3494>
   165b0:	bl	11988 <__assert_fail@plt>
   165b4:	ldr	r2, [fp, #4]
   165b8:	ldr	r3, [pc, #1352]	; 16b08 <argp_parse@@Base+0x3498>
   165bc:	cmp	r2, r3
   165c0:	addls	r8, r8, #28
   165c4:	movls	r7, r0
   165c8:	movls	sl, #0
   165cc:	bls	16618 <argp_parse@@Base+0x2fa8>
   165d0:	ldr	r3, [pc, #1300]	; 16aec <argp_parse@@Base+0x347c>
   165d4:	mov	r2, #476	; 0x1dc
   165d8:	ldr	r1, [pc, #1300]	; 16af4 <argp_parse@@Base+0x3484>
   165dc:	ldr	r0, [pc, #1320]	; 16b0c <argp_parse@@Base+0x349c>
   165e0:	bl	11988 <__assert_fail@plt>
   165e4:	ldr	r3, [r5, #4]
   165e8:	cmp	r3, #0
   165ec:	addeq	r9, r4, #1
   165f0:	movne	r9, r4
   165f4:	b	1665c <argp_parse@@Base+0x2fec>
   165f8:	ldr	r3, [r5, #16]
   165fc:	cmp	r3, #0
   16600:	bne	16a08 <argp_parse@@Base+0x3398>
   16604:	ldr	r3, [r5, #20]
   16608:	cmp	r3, #0
   1660c:	bne	16a08 <argp_parse@@Base+0x3398>
   16610:	add	r8, r8, #28
   16614:	mov	r4, r9
   16618:	ldr	r3, [r5, #4]
   1661c:	cmp	r3, #0
   16620:	bne	16630 <argp_parse@@Base+0x2fc0>
   16624:	ldr	r3, [r5]
   16628:	cmp	r3, #0
   1662c:	beq	16674 <argp_parse@@Base+0x3004>
   16630:	mov	r6, r8
   16634:	str	r5, [r8, #-28]	; 0xffffffe4
   16638:	str	sl, [r8, #-24]	; 0xffffffe8
   1663c:	str	r7, [r8, #-20]	; 0xffffffec
   16640:	ldr	r9, [r5, #20]
   16644:	cmp	r9, #0
   16648:	bne	1665c <argp_parse@@Base+0x2fec>
   1664c:	ldr	r3, [r5]
   16650:	cmp	r3, #0
   16654:	movne	r9, r4
   16658:	beq	165e4 <argp_parse@@Base+0x2f74>
   1665c:	str	r9, [r6, #-16]
   16660:	ldr	r3, [sp, #28]
   16664:	str	r3, [r6, #-12]
   16668:	ldr	r3, [sp, #24]
   1666c:	str	r3, [r6, #-8]
   16670:	b	16a14 <argp_parse@@Base+0x33a4>
   16674:	ldr	r3, [r5, #16]
   16678:	cmp	r3, #0
   1667c:	bne	16630 <argp_parse@@Base+0x2fc0>
   16680:	ldr	r3, [r5, #20]
   16684:	cmp	r3, #0
   16688:	bne	16630 <argp_parse@@Base+0x2fc0>
   1668c:	mov	r3, #0
   16690:	strb	r3, [r7]
   16694:	ldr	r3, [sp, #8]
   16698:	cmp	r3, #0
   1669c:	beq	169d8 <argp_parse@@Base+0x3368>
   166a0:	ldr	r3, [r3]
   166a4:	cmp	r3, #0
   166a8:	beq	169d8 <argp_parse@@Base+0x3368>
   166ac:	add	r3, fp, #12
   166b0:	str	r3, [sp, #44]	; 0x2c
   166b4:	str	fp, [sp, #20]
   166b8:	b	16748 <argp_parse@@Base+0x30d8>
   166bc:	ldr	r1, [sp, #28]
   166c0:	b	167c8 <argp_parse@@Base+0x3158>
   166c4:	mov	r2, r3
   166c8:	ldr	r3, [r2, #24]
   166cc:	cmp	r3, #0
   166d0:	bne	166c4 <argp_parse@@Base+0x3054>
   166d4:	add	r2, r2, #24
   166d8:	ldr	r1, [sp, #16]
   166dc:	ldr	r3, [r1, #12]
   166e0:	str	r3, [r2]
   166e4:	mov	r2, #0
   166e8:	str	r2, [r1, #12]
   166ec:	ldr	r3, [r1, #4]
   166f0:	cmp	r3, r2
   166f4:	beq	1672c <argp_parse@@Base+0x30bc>
   166f8:	ldr	r0, [sp, #20]
   166fc:	ldr	r2, [r0, #4]
   16700:	cmp	r2, #0
   16704:	bne	167f0 <argp_parse@@Base+0x3180>
   16708:	str	r3, [r0, #4]
   1670c:	mov	r2, r1
   16710:	ldr	r3, [r1]
   16714:	str	r3, [r0]
   16718:	ldr	r3, [r2, #8]
   1671c:	str	r3, [r0, #8]
   16720:	mov	r3, r2
   16724:	mov	r2, #0
   16728:	str	r2, [r3, #4]
   1672c:	ldr	r0, [sp, #16]
   16730:	bl	15318 <argp_parse@@Base+0x1ca8>
   16734:	ldr	r2, [sp, #8]
   16738:	ldr	r3, [r2, #16]!
   1673c:	str	r2, [sp, #8]
   16740:	cmp	r3, #0
   16744:	beq	169d4 <argp_parse@@Base+0x3364>
   16748:	ldr	r3, [sp, #8]
   1674c:	ldr	r4, [r3, #12]
   16750:	cmp	r4, #0
   16754:	bne	16764 <argp_parse@@Base+0x30f4>
   16758:	ldr	r3, [r3, #8]
   1675c:	cmp	r3, #0
   16760:	beq	166bc <argp_parse@@Base+0x304c>
   16764:	ldr	r2, [sp, #8]
   16768:	ldr	r5, [r2, #8]
   1676c:	ldr	r7, [sp, #24]
   16770:	ldr	r3, [r7, #16]
   16774:	sub	r3, r2, r3
   16778:	asr	r6, r3, #4
   1677c:	mov	r0, #28
   16780:	bl	14e9c <argp_parse@@Base+0x182c>
   16784:	subs	r1, r0, #0
   16788:	beq	167c8 <argp_parse@@Base+0x3158>
   1678c:	str	r4, [r1, #8]
   16790:	str	r5, [r1]
   16794:	str	r6, [r1, #4]
   16798:	ldr	r3, [sp, #28]
   1679c:	str	r3, [r1, #12]
   167a0:	str	r7, [r1, #16]
   167a4:	cmp	r3, #0
   167a8:	ldrne	r3, [r3, #20]
   167ac:	addne	r3, r3, #1
   167b0:	moveq	r3, #0
   167b4:	str	r3, [r1, #20]
   167b8:	ldr	r2, [sp, #20]
   167bc:	ldr	r3, [r2, #12]
   167c0:	str	r3, [r1, #24]
   167c4:	str	r1, [r2, #12]
   167c8:	ldr	r3, [sp, #8]
   167cc:	ldr	r0, [r3]
   167d0:	bl	16464 <argp_parse@@Base+0x2df4>
   167d4:	str	r0, [sp, #16]
   167d8:	ldr	r3, [sp, #20]
   167dc:	ldr	r2, [r3, #12]
   167e0:	cmp	r2, #0
   167e4:	ldreq	r2, [sp, #44]	; 0x2c
   167e8:	bne	166c8 <argp_parse@@Base+0x3058>
   167ec:	b	166d8 <argp_parse@@Base+0x3068>
   167f0:	add	r3, r3, r2
   167f4:	str	r3, [sp, #36]	; 0x24
   167f8:	rsb	r0, r3, r3, lsl #3
   167fc:	lsl	r0, r0, #2
   16800:	bl	14e9c <argp_parse@@Base+0x182c>
   16804:	mov	r4, r0
   16808:	str	r0, [sp, #32]
   1680c:	ldr	r3, [sp, #20]
   16810:	ldr	r0, [r3, #8]
   16814:	bl	117b4 <strlen@plt>
   16818:	mov	r6, r0
   1681c:	ldr	r3, [sp, #16]
   16820:	ldr	r0, [r3, #8]
   16824:	bl	117b4 <strlen@plt>
   16828:	add	r0, r6, r0
   1682c:	add	r0, r0, #1
   16830:	bl	14e9c <argp_parse@@Base+0x182c>
   16834:	mov	sl, r0
   16838:	cmp	r4, #0
   1683c:	cmpne	r0, #0
   16840:	beq	1690c <argp_parse@@Base+0x329c>
   16844:	ldr	r3, [sp, #36]	; 0x24
   16848:	ldr	r2, [pc, #696]	; 16b08 <argp_parse@@Base+0x3498>
   1684c:	cmp	r3, r2
   16850:	bhi	16920 <argp_parse@@Base+0x32b0>
   16854:	ldr	r5, [sp, #20]
   16858:	ldr	r2, [r5]
   1685c:	mov	r1, r2
   16860:	str	r2, [sp, #40]	; 0x28
   16864:	ldr	r4, [r5, #4]
   16868:	rsb	r7, r4, r4, lsl #3
   1686c:	lsl	r7, r7, #2
   16870:	mov	r2, r7
   16874:	ldr	r8, [sp, #32]
   16878:	mov	r0, r8
   1687c:	bl	11778 <mempcpy@plt>
   16880:	ldr	r3, [sp, #16]
   16884:	ldr	r1, [r3, #4]
   16888:	str	r1, [sp, #4]
   1688c:	rsb	r2, r1, r1, lsl #3
   16890:	lsl	r2, r2, #2
   16894:	ldr	r1, [r3]
   16898:	bl	11610 <memcpy@plt>
   1689c:	ldr	r5, [r5, #8]
   168a0:	mov	r2, r6
   168a4:	mov	r1, r5
   168a8:	mov	r0, sl
   168ac:	bl	11610 <memcpy@plt>
   168b0:	cmp	r4, #0
   168b4:	beq	16934 <argp_parse@@Base+0x32c4>
   168b8:	mov	r2, r8
   168bc:	ldr	r3, [r2, #8]
   168c0:	sub	r3, r3, r5
   168c4:	add	r3, sl, r3
   168c8:	str	r3, [r2, #8]
   168cc:	add	r2, r2, #28
   168d0:	subs	r4, r4, #1
   168d4:	bne	168bc <argp_parse@@Base+0x324c>
   168d8:	ldr	r3, [sp, #32]
   168dc:	add	r7, r3, r7
   168e0:	add	r3, sl, r6
   168e4:	str	r3, [sp, #12]
   168e8:	ldr	r2, [sp, #16]
   168ec:	ldr	r8, [r2, #8]
   168f0:	ldr	r2, [sp, #4]
   168f4:	cmp	r2, #0
   168f8:	beq	1699c <argp_parse@@Base+0x332c>
   168fc:	add	r9, r7, #28
   16900:	mov	fp, r3
   16904:	sub	r7, r3, #1
   16908:	b	16984 <argp_parse@@Base+0x3314>
   1690c:	ldr	r3, [pc, #508]	; 16b10 <argp_parse@@Base+0x34a0>
   16910:	ldr	r2, [pc, #508]	; 16b14 <argp_parse@@Base+0x34a4>
   16914:	ldr	r1, [pc, #472]	; 16af4 <argp_parse@@Base+0x3484>
   16918:	ldr	r0, [pc, #504]	; 16b18 <argp_parse@@Base+0x34a8>
   1691c:	bl	11988 <__assert_fail@plt>
   16920:	ldr	r3, [pc, #488]	; 16b10 <argp_parse@@Base+0x34a0>
   16924:	mov	r2, #972	; 0x3cc
   16928:	ldr	r1, [pc, #452]	; 16af4 <argp_parse@@Base+0x3484>
   1692c:	ldr	r0, [pc, #488]	; 16b1c <argp_parse@@Base+0x34ac>
   16930:	bl	11988 <__assert_fail@plt>
   16934:	ldr	r7, [sp, #32]
   16938:	b	168e0 <argp_parse@@Base+0x3270>
   1693c:	ldr	r3, [sp, #12]
   16940:	cmp	sl, r3
   16944:	bcs	16adc <argp_parse@@Base+0x346c>
   16948:	ldrb	r3, [sl]
   1694c:	cmp	r3, r1
   16950:	beq	16ae4 <argp_parse@@Base+0x3474>
   16954:	mov	r3, sl
   16958:	cmp	r7, r3
   1695c:	beq	16adc <argp_parse@@Base+0x346c>
   16960:	ldrb	r2, [r3, #1]!
   16964:	cmp	r2, r1
   16968:	bne	16958 <argp_parse@@Base+0x32e8>
   1696c:	b	16ae4 <argp_parse@@Base+0x3474>
   16970:	add	r9, r9, #28
   16974:	ldr	r3, [sp, #4]
   16978:	subs	r3, r3, #1
   1697c:	str	r3, [sp, #4]
   16980:	beq	169a0 <argp_parse@@Base+0x3330>
   16984:	str	fp, [r9, #-20]	; 0xffffffec
   16988:	ldr	r5, [r9, #-24]	; 0xffffffe8
   1698c:	ldr	r4, [r9, #-28]	; 0xffffffe4
   16990:	cmp	r5, #0
   16994:	bne	16aa4 <argp_parse@@Base+0x3434>
   16998:	b	16970 <argp_parse@@Base+0x3300>
   1699c:	ldr	fp, [sp, #12]
   169a0:	mov	r3, #0
   169a4:	strb	r3, [fp]
   169a8:	ldr	r0, [sp, #40]	; 0x28
   169ac:	bl	14264 <argp_parse@@Base+0xbf4>
   169b0:	ldr	r4, [sp, #20]
   169b4:	ldr	r0, [r4, #8]
   169b8:	bl	14264 <argp_parse@@Base+0xbf4>
   169bc:	ldr	r2, [sp, #32]
   169c0:	str	r2, [r4]
   169c4:	ldr	r2, [sp, #36]	; 0x24
   169c8:	str	r2, [r4, #4]
   169cc:	str	sl, [r4, #8]
   169d0:	b	1672c <argp_parse@@Base+0x30bc>
   169d4:	ldr	fp, [sp, #20]
   169d8:	mov	r0, fp
   169dc:	add	sp, sp, #52	; 0x34
   169e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169e4:	strb	r4, [r7]
   169e8:	add	r7, r7, #1
   169ec:	add	r5, r5, #24
   169f0:	ldr	r3, [r5, #4]
   169f4:	cmp	r3, #0
   169f8:	bne	16a08 <argp_parse@@Base+0x3398>
   169fc:	ldr	r3, [r5]
   16a00:	cmp	r3, #0
   16a04:	beq	165f8 <argp_parse@@Base+0x2f88>
   16a08:	ldr	r3, [r5, #12]
   16a0c:	tst	r3, #4
   16a10:	beq	16610 <argp_parse@@Base+0x2fa0>
   16a14:	ldr	r3, [r6, #-24]	; 0xffffffe8
   16a18:	add	r3, r3, #1
   16a1c:	str	r3, [r6, #-24]	; 0xffffffe8
   16a20:	ldr	r3, [r5, #12]
   16a24:	tst	r3, #8
   16a28:	bne	169ec <argp_parse@@Base+0x337c>
   16a2c:	ldr	r4, [r5, #4]
   16a30:	sub	r3, r4, #1
   16a34:	cmp	r3, #254	; 0xfe
   16a38:	bhi	169ec <argp_parse@@Base+0x337c>
   16a3c:	bl	11784 <__ctype_b_loc@plt>
   16a40:	ldr	r2, [r0]
   16a44:	lsl	r3, r4, #1
   16a48:	ldrh	r3, [r2, r3]
   16a4c:	tst	r3, #16384	; 0x4000
   16a50:	beq	169ec <argp_parse@@Base+0x337c>
   16a54:	uxtb	r4, r4
   16a58:	ldr	r3, [fp, #8]
   16a5c:	cmp	r3, r7
   16a60:	bcs	169e4 <argp_parse@@Base+0x3374>
   16a64:	ldrb	r2, [r3]
   16a68:	cmp	r2, r4
   16a6c:	beq	169ec <argp_parse@@Base+0x337c>
   16a70:	sub	r1, r7, #1
   16a74:	cmp	r3, r1
   16a78:	beq	169e4 <argp_parse@@Base+0x3374>
   16a7c:	ldrb	r2, [r3, #1]!
   16a80:	cmp	r2, r4
   16a84:	bne	16a74 <argp_parse@@Base+0x3404>
   16a88:	b	169ec <argp_parse@@Base+0x337c>
   16a8c:	ldrb	r1, [r8]
   16a90:	cmp	r1, r6
   16a94:	beq	1693c <argp_parse@@Base+0x32cc>
   16a98:	add	r4, r4, #24
   16a9c:	subs	r5, r5, #1
   16aa0:	beq	16970 <argp_parse@@Base+0x3300>
   16aa4:	ldr	r3, [r4, #12]
   16aa8:	tst	r3, #8
   16aac:	bne	16a98 <argp_parse@@Base+0x3428>
   16ab0:	ldr	r6, [r4, #4]
   16ab4:	sub	r3, r6, #1
   16ab8:	cmp	r3, #254	; 0xfe
   16abc:	bhi	16a98 <argp_parse@@Base+0x3428>
   16ac0:	bl	11784 <__ctype_b_loc@plt>
   16ac4:	ldr	r2, [r0]
   16ac8:	lsl	r3, r6, #1
   16acc:	ldrh	r3, [r2, r3]
   16ad0:	tst	r3, #16384	; 0x4000
   16ad4:	bne	16a8c <argp_parse@@Base+0x341c>
   16ad8:	b	16a98 <argp_parse@@Base+0x3428>
   16adc:	strb	r1, [fp]
   16ae0:	add	fp, fp, #1
   16ae4:	add	r8, r8, #1
   16ae8:	b	16a98 <argp_parse@@Base+0x3428>
   16aec:	andeq	sl, r1, r8, lsr #11
   16af0:	andeq	r0, r0, r2, asr #3
   16af4:	muleq	r1, r8, r6
   16af8:	andeq	sl, r1, r4, lsr #13
   16afc:	andeq	sl, r1, r8, lsr #13
   16b00:	ldrdeq	r0, [r0], -sl
   16b04:			; <UNDEFINED> instruction: 0x0001a6b8
   16b08:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   16b0c:	ldrdeq	sl, [r1], -ip
   16b10:			; <UNDEFINED> instruction: 0x0001a5b4
   16b14:	andeq	r0, r0, sl, asr #7
   16b18:	andeq	sl, r1, r8, lsl r7
   16b1c:	andeq	sl, r1, r4, lsr r7

00016b20 <argp_failure@@Base>:
   16b20:	push	{r3}		; (str r3, [sp, #-4]!)
   16b24:	push	{r4, r5, r6, r7, lr}
   16b28:	sub	sp, sp, #200	; 0xc8
   16b2c:	mov	r7, r1
   16b30:	mov	r6, r2
   16b34:	subs	r5, r0, #0
   16b38:	beq	16c88 <argp_failure@@Base+0x168>
   16b3c:	ldr	r3, [r5, #16]
   16b40:	tst	r3, #2
   16b44:	bne	16c78 <argp_failure@@Base+0x158>
   16b48:	ldr	r4, [r5, #44]	; 0x2c
   16b4c:	cmp	r4, #0
   16b50:	beq	16c78 <argp_failure@@Base+0x158>
   16b54:	mov	r0, r4
   16b58:	bl	11904 <flockfile@plt>
   16b5c:	ldr	r0, [r5, #40]	; 0x28
   16b60:	mov	r1, r4
   16b64:	bl	1155c <fputs_unlocked@plt>
   16b68:	ldr	r3, [sp, #220]	; 0xdc
   16b6c:	cmp	r3, #0
   16b70:	beq	16bcc <argp_failure@@Base+0xac>
   16b74:	add	r3, sp, #224	; 0xe0
   16b78:	str	r3, [sp]
   16b7c:	ldr	r3, [r4, #20]
   16b80:	ldr	r2, [r4, #24]
   16b84:	cmp	r3, r2
   16b88:	addcc	r2, r3, #1
   16b8c:	strcc	r2, [r4, #20]
   16b90:	movcc	r2, #58	; 0x3a
   16b94:	strbcc	r2, [r3]
   16b98:	bcs	16cac <argp_failure@@Base+0x18c>
   16b9c:	ldr	r3, [r4, #20]
   16ba0:	ldr	r2, [r4, #24]
   16ba4:	cmp	r3, r2
   16ba8:	addcc	r2, r3, #1
   16bac:	strcc	r2, [r4, #20]
   16bb0:	movcc	r2, #32
   16bb4:	strbcc	r2, [r3]
   16bb8:	bcs	16cbc <argp_failure@@Base+0x19c>
   16bbc:	ldr	r2, [sp]
   16bc0:	ldr	r1, [sp, #220]	; 0xdc
   16bc4:	mov	r0, r4
   16bc8:	bl	118b0 <vfprintf@plt>
   16bcc:	cmp	r6, #0
   16bd0:	beq	16c34 <argp_failure@@Base+0x114>
   16bd4:	ldr	r3, [r4, #20]
   16bd8:	ldr	r2, [r4, #24]
   16bdc:	cmp	r3, r2
   16be0:	addcc	r2, r3, #1
   16be4:	strcc	r2, [r4, #20]
   16be8:	movcc	r2, #58	; 0x3a
   16bec:	strbcc	r2, [r3]
   16bf0:	bcs	16ccc <argp_failure@@Base+0x1ac>
   16bf4:	ldr	r3, [r4, #20]
   16bf8:	ldr	r2, [r4, #24]
   16bfc:	cmp	r3, r2
   16c00:	addcc	r2, r3, #1
   16c04:	strcc	r2, [r4, #20]
   16c08:	movcc	r2, #32
   16c0c:	strbcc	r2, [r3]
   16c10:	bcs	16cdc <argp_failure@@Base+0x1bc>
   16c14:	mov	r2, #200	; 0xc8
   16c18:	mov	r1, sp
   16c1c:	mov	r0, r6
   16c20:	bl	117fc <strerror_r@plt>
   16c24:	cmp	r0, #0
   16c28:	beq	16cec <argp_failure@@Base+0x1cc>
   16c2c:	mov	r1, r4
   16c30:	bl	1155c <fputs_unlocked@plt>
   16c34:	ldr	r3, [r4, #20]
   16c38:	ldr	r2, [r4, #24]
   16c3c:	cmp	r3, r2
   16c40:	addcc	r2, r3, #1
   16c44:	strcc	r2, [r4, #20]
   16c48:	movcc	r2, #10
   16c4c:	strbcc	r2, [r3]
   16c50:	bcs	16d04 <argp_failure@@Base+0x1e4>
   16c54:	mov	r0, r4
   16c58:	bl	116c4 <funlockfile@plt>
   16c5c:	cmp	r7, #0
   16c60:	beq	16c78 <argp_failure@@Base+0x158>
   16c64:	cmp	r5, #0
   16c68:	beq	16d14 <argp_failure@@Base+0x1f4>
   16c6c:	ldr	r3, [r5, #16]
   16c70:	tst	r3, #32
   16c74:	beq	16d14 <argp_failure@@Base+0x1f4>
   16c78:	add	sp, sp, #200	; 0xc8
   16c7c:	pop	{r4, r5, r6, r7, lr}
   16c80:	add	sp, sp, #4
   16c84:	bx	lr
   16c88:	ldr	r3, [pc, #140]	; 16d1c <argp_failure@@Base+0x1fc>
   16c8c:	ldr	r4, [r3]
   16c90:	cmp	r4, #0
   16c94:	beq	16c78 <argp_failure@@Base+0x158>
   16c98:	mov	r0, r4
   16c9c:	bl	11904 <flockfile@plt>
   16ca0:	ldr	r3, [pc, #120]	; 16d20 <argp_failure@@Base+0x200>
   16ca4:	ldr	r0, [r3]
   16ca8:	b	16b60 <argp_failure@@Base+0x40>
   16cac:	mov	r1, #58	; 0x3a
   16cb0:	mov	r0, r4
   16cb4:	bl	11868 <__overflow@plt>
   16cb8:	b	16b9c <argp_failure@@Base+0x7c>
   16cbc:	mov	r1, #32
   16cc0:	mov	r0, r4
   16cc4:	bl	11868 <__overflow@plt>
   16cc8:	b	16bbc <argp_failure@@Base+0x9c>
   16ccc:	mov	r1, #58	; 0x3a
   16cd0:	mov	r0, r4
   16cd4:	bl	11868 <__overflow@plt>
   16cd8:	b	16bf4 <argp_failure@@Base+0xd4>
   16cdc:	mov	r1, #32
   16ce0:	mov	r0, r4
   16ce4:	bl	11868 <__overflow@plt>
   16ce8:	b	16c14 <argp_failure@@Base+0xf4>
   16cec:	mov	r0, r6
   16cf0:	bl	11754 <strerror@plt>
   16cf4:	ldr	r3, [pc, #40]	; 16d24 <argp_failure@@Base+0x204>
   16cf8:	cmp	r0, #0
   16cfc:	moveq	r0, r3
   16d00:	b	16c2c <argp_failure@@Base+0x10c>
   16d04:	mov	r1, #10
   16d08:	mov	r0, r4
   16d0c:	bl	11868 <__overflow@plt>
   16d10:	b	16c54 <argp_failure@@Base+0x134>
   16d14:	mov	r0, r7
   16d18:	bl	1179c <exit@plt>
   16d1c:	andeq	fp, r2, r8, ror #9
   16d20:	ldrdeq	fp, [r2], -r8
   16d24:	andeq	sl, r1, r8, ror #14
   16d28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d2c:	add	fp, sp, #32
   16d30:	sub	sp, sp, #108	; 0x6c
   16d34:	str	r0, [fp, #-112]	; 0xffffff90
   16d38:	str	r1, [fp, #-100]	; 0xffffff9c
   16d3c:	str	r3, [fp, #-104]	; 0xffffff98
   16d40:	subs	r3, r2, #0
   16d44:	str	r3, [fp, #-132]	; 0xffffff7c
   16d48:	beq	17db4 <argp_failure@@Base+0x1294>
   16d4c:	mov	r0, r3
   16d50:	bl	11904 <flockfile@plt>
   16d54:	ldr	r3, [pc, #3772]	; 17c18 <argp_failure@@Base+0x10f8>
   16d58:	ldr	r3, [r3, #36]	; 0x24
   16d5c:	str	r3, [fp, #-108]	; 0xffffff94
   16d60:	cmp	r3, #0
   16d64:	beq	16e3c <argp_failure@@Base+0x31c>
   16d68:	mov	r3, #0
   16d6c:	ldr	r2, [pc, #3748]	; 17c18 <argp_failure@@Base+0x10f8>
   16d70:	ldr	r2, [r2, #32]
   16d74:	mov	r1, r3
   16d78:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16d7c:	bl	18cfc <argp_error@@Base+0xd60>
   16d80:	subs	sl, r0, #0
   16d84:	beq	171e8 <argp_failure@@Base+0x6c8>
   16d88:	ldr	r3, [fp, #-104]	; 0xffffff98
   16d8c:	tst	r3, #11
   16d90:	moveq	r3, #0
   16d94:	streq	r3, [fp, #-108]	; 0xffffff94
   16d98:	bne	171f4 <argp_failure@@Base+0x6d4>
   16d9c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16da0:	tst	r3, #3
   16da4:	moveq	r4, #0
   16da8:	bne	17278 <argp_failure@@Base+0x758>
   16dac:	ldr	r3, [fp, #-104]	; 0xffffff98
   16db0:	tst	r3, #16
   16db4:	bne	17474 <argp_failure@@Base+0x954>
   16db8:	ldr	r3, [fp, #-104]	; 0xffffff98
   16dbc:	tst	r3, #4
   16dc0:	bne	1749c <argp_failure@@Base+0x97c>
   16dc4:	ldr	r3, [fp, #-104]	; 0xffffff98
   16dc8:	tst	r3, #8
   16dcc:	beq	17d28 <argp_failure@@Base+0x1208>
   16dd0:	ldr	r3, [fp, #-108]	; 0xffffff94
   16dd4:	ldr	r3, [r3, #4]
   16dd8:	cmp	r3, #0
   16ddc:	beq	17d28 <argp_failure@@Base+0x1208>
   16de0:	cmp	r4, #0
   16de4:	beq	16e0c <argp_failure@@Base+0x2ec>
   16de8:	ldr	r2, [sl, #28]
   16dec:	ldr	r3, [sl, #32]
   16df0:	cmp	r2, r3
   16df4:	bcs	174b8 <argp_failure@@Base+0x998>
   16df8:	ldr	r3, [sl, #28]
   16dfc:	add	r2, r3, #1
   16e00:	str	r2, [sl, #28]
   16e04:	mov	r2, #10
   16e08:	strb	r2, [r3]
   16e0c:	mov	r3, #0
   16e10:	str	r3, [fp, #-88]	; 0xffffffa8
   16e14:	str	r3, [fp, #-84]	; 0xffffffac
   16e18:	str	r3, [fp, #-80]	; 0xffffffb0
   16e1c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16e20:	ldr	r2, [r3]
   16e24:	str	r2, [fp, #-96]	; 0xffffffa0
   16e28:	ldr	r3, [r3, #4]
   16e2c:	str	r3, [fp, #-120]	; 0xffffff88
   16e30:	cmp	r3, #0
   16e34:	bne	178a0 <argp_failure@@Base+0xd80>
   16e38:	b	17d24 <argp_failure@@Base+0x1204>
   16e3c:	ldr	r0, [pc, #3452]	; 17bc0 <argp_failure@@Base+0x10a0>
   16e40:	bl	11718 <getenv@plt>
   16e44:	mov	r9, r0
   16e48:	sub	ip, fp, #76	; 0x4c
   16e4c:	ldr	lr, [pc, #3524]	; 17c18 <argp_failure@@Base+0x10f8>
   16e50:	ldm	lr!, {r0, r1, r2, r3}
   16e54:	stmia	ip!, {r0, r1, r2, r3}
   16e58:	ldm	lr!, {r0, r1, r2, r3}
   16e5c:	stmia	ip!, {r0, r1, r2, r3}
   16e60:	ldm	lr, {r0, r1}
   16e64:	stm	ip, {r0, r1}
   16e68:	cmp	r9, #0
   16e6c:	ldrne	sl, [pc, #3408]	; 17bc4 <argp_failure@@Base+0x10a4>
   16e70:	addne	r8, sl, #168	; 0xa8
   16e74:	bne	17118 <argp_failure@@Base+0x5f8>
   16e78:	b	16d68 <argp_failure@@Base+0x248>
   16e7c:	mov	r5, r3
   16e80:	mov	r9, r5
   16e84:	mov	r3, r5
   16e88:	ldrb	r0, [r3], #1
   16e8c:	lsl	r2, r0, #1
   16e90:	ldrh	r2, [r1, r2]
   16e94:	tst	r2, #8192	; 0x2000
   16e98:	bne	16e7c <argp_failure@@Base+0x35c>
   16e9c:	tst	r2, #1024	; 0x400
   16ea0:	beq	17110 <argp_failure@@Base+0x5f0>
   16ea4:	cmp	r0, #95	; 0x5f
   16ea8:	cmpne	r0, #45	; 0x2d
   16eac:	moveq	r3, #1
   16eb0:	movne	r3, #0
   16eb4:	lsl	r2, r2, #28
   16eb8:	orrs	r3, r3, r2, lsr #31
   16ebc:	beq	17e38 <argp_failure@@Base+0x1318>
   16ec0:	mov	r4, r5
   16ec4:	ldrb	r3, [r4, #1]!
   16ec8:	lsl	r2, r3, #1
   16ecc:	ldrh	r2, [r1, r2]
   16ed0:	lsl	r2, r2, #28
   16ed4:	cmp	r3, #95	; 0x5f
   16ed8:	cmpne	r3, #45	; 0x2d
   16edc:	moveq	r3, #1
   16ee0:	movne	r3, #0
   16ee4:	orrs	r3, r3, r2, lsr #31
   16ee8:	bne	16ec4 <argp_failure@@Base+0x3a4>
   16eec:	sub	r5, r4, r5
   16ef0:	ldrb	r3, [r4]
   16ef4:	lsl	r2, r3, #1
   16ef8:	ldrh	r2, [r1, r2]
   16efc:	tst	r2, #8192	; 0x2000
   16f00:	beq	16f18 <argp_failure@@Base+0x3f8>
   16f04:	ldrb	r3, [r4, #1]!
   16f08:	lsl	r2, r3, #1
   16f0c:	ldrh	r2, [r1, r2]
   16f10:	tst	r2, #8192	; 0x2000
   16f14:	bne	16f04 <argp_failure@@Base+0x3e4>
   16f18:	cmp	r3, #44	; 0x2c
   16f1c:	cmpne	r3, #0
   16f20:	beq	17e50 <argp_failure@@Base+0x1330>
   16f24:	cmp	r3, #61	; 0x3d
   16f28:	beq	16f50 <argp_failure@@Base+0x430>
   16f2c:	ldrb	r3, [r4]
   16f30:	lsl	r3, r3, #1
   16f34:	ldrh	r3, [r1, r3]
   16f38:	tst	r3, #2048	; 0x800
   16f3c:	bne	16fd0 <argp_failure@@Base+0x4b0>
   16f40:	ldr	r3, [fp, #-108]	; 0xffffff94
   16f44:	str	r3, [fp, #-96]	; 0xffffffa0
   16f48:	str	r3, [fp, #-116]	; 0xffffff8c
   16f4c:	b	17e64 <argp_failure@@Base+0x1344>
   16f50:	add	r2, r4, #1
   16f54:	ldrb	r3, [r4, #1]
   16f58:	lsl	r3, r3, #1
   16f5c:	ldrh	r3, [r1, r3]
   16f60:	tst	r3, #8192	; 0x2000
   16f64:	beq	17e48 <argp_failure@@Base+0x1328>
   16f68:	ldrb	r3, [r2, #1]!
   16f6c:	lsl	r3, r3, #1
   16f70:	ldrh	r3, [r1, r3]
   16f74:	tst	r3, #8192	; 0x2000
   16f78:	bne	16f68 <argp_failure@@Base+0x448>
   16f7c:	mov	r4, r2
   16f80:	b	16f2c <argp_failure@@Base+0x40c>
   16f84:	ldrb	r3, [r9, #1]
   16f88:	cmp	r3, #111	; 0x6f
   16f8c:	movne	r3, #1
   16f90:	strne	r3, [fp, #-96]	; 0xffffffa0
   16f94:	strne	r3, [fp, #-116]	; 0xffffff8c
   16f98:	bne	17e64 <argp_failure@@Base+0x1344>
   16f9c:	ldrb	r3, [r9, #2]
   16fa0:	cmp	r3, #45	; 0x2d
   16fa4:	movne	r3, #1
   16fa8:	strne	r3, [fp, #-96]	; 0xffffffa0
   16fac:	strne	r3, [fp, #-116]	; 0xffffff8c
   16fb0:	bne	17e64 <argp_failure@@Base+0x1344>
   16fb4:	add	r9, r9, #3
   16fb8:	sub	r5, r5, #3
   16fbc:	ldr	r3, [fp, #-108]	; 0xffffff94
   16fc0:	str	r3, [fp, #-116]	; 0xffffff8c
   16fc4:	mov	r3, #1
   16fc8:	str	r3, [fp, #-96]	; 0xffffffa0
   16fcc:	b	17e64 <argp_failure@@Base+0x1344>
   16fd0:	mov	r2, #10
   16fd4:	mov	r1, #0
   16fd8:	mov	r0, r4
   16fdc:	bl	11580 <strtol@plt>
   16fe0:	str	r0, [fp, #-116]	; 0xffffff8c
   16fe4:	ldr	r2, [r6]
   16fe8:	ldrb	r3, [r4]
   16fec:	lsl	r3, r3, #1
   16ff0:	ldrh	r3, [r2, r3]
   16ff4:	tst	r3, #2048	; 0x800
   16ff8:	beq	17010 <argp_failure@@Base+0x4f0>
   16ffc:	ldrb	r3, [r4, #1]!
   17000:	lsl	r3, r3, #1
   17004:	ldrh	r3, [r2, r3]
   17008:	tst	r3, #2048	; 0x800
   1700c:	bne	16ffc <argp_failure@@Base+0x4dc>
   17010:	ldrb	r3, [r4]
   17014:	lsl	r3, r3, #1
   17018:	ldrh	r3, [r2, r3]
   1701c:	tst	r3, #8192	; 0x2000
   17020:	beq	17044 <argp_failure@@Base+0x524>
   17024:	ldrb	r3, [r4, #1]!
   17028:	lsl	r3, r3, #1
   1702c:	ldrh	r3, [r2, r3]
   17030:	tst	r3, #8192	; 0x2000
   17034:	bne	17024 <argp_failure@@Base+0x504>
   17038:	ldr	r3, [fp, #-108]	; 0xffffff94
   1703c:	str	r3, [fp, #-96]	; 0xffffffa0
   17040:	b	17e64 <argp_failure@@Base+0x1344>
   17044:	ldr	r3, [fp, #-108]	; 0xffffff94
   17048:	str	r3, [fp, #-96]	; 0xffffffa0
   1704c:	b	17e64 <argp_failure@@Base+0x1344>
   17050:	str	r9, [sp, #4]
   17054:	str	r7, [sp]
   17058:	ldr	r3, [pc, #2920]	; 17bc8 <argp_failure@@Base+0x10a8>
   1705c:	mov	r2, #0
   17060:	mov	r1, r2
   17064:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17068:	bl	16b20 <argp_failure@@Base>
   1706c:	b	170d4 <argp_failure@@Base+0x5b4>
   17070:	add	r6, r6, #16
   17074:	cmp	r6, r8
   17078:	beq	170f0 <argp_failure@@Base+0x5d0>
   1707c:	mov	r0, r6
   17080:	bl	117b4 <strlen@plt>
   17084:	mov	r7, r0
   17088:	cmp	r0, r5
   1708c:	bne	17070 <argp_failure@@Base+0x550>
   17090:	mov	r2, r5
   17094:	mov	r1, r6
   17098:	mov	r0, r9
   1709c:	bl	11958 <strncmp@plt>
   170a0:	cmp	r0, #0
   170a4:	bne	17070 <argp_failure@@Base+0x550>
   170a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   170ac:	cmp	r3, #0
   170b0:	beq	170c0 <argp_failure@@Base+0x5a0>
   170b4:	ldrb	r3, [r6, #14]
   170b8:	cmp	r3, #0
   170bc:	beq	17050 <argp_failure@@Base+0x530>
   170c0:	ldrb	r3, [r6, #15]
   170c4:	sub	r2, fp, #36	; 0x24
   170c8:	add	r3, r2, r3
   170cc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   170d0:	str	r2, [r3, #-40]	; 0xffffffd8
   170d4:	cmp	r6, r8
   170d8:	beq	170f0 <argp_failure@@Base+0x5d0>
   170dc:	ldrb	r3, [r4]
   170e0:	cmp	r3, #44	; 0x2c
   170e4:	addeq	r9, r4, #1
   170e8:	movne	r9, r4
   170ec:	b	17118 <argp_failure@@Base+0x5f8>
   170f0:	str	r9, [sp, #4]
   170f4:	str	r5, [sp]
   170f8:	ldr	r3, [pc, #2764]	; 17bcc <argp_failure@@Base+0x10ac>
   170fc:	mov	r2, #0
   17100:	mov	r1, r2
   17104:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17108:	bl	16b20 <argp_failure@@Base>
   1710c:	b	170dc <argp_failure@@Base+0x5bc>
   17110:	cmp	r0, #0
   17114:	bne	17138 <argp_failure@@Base+0x618>
   17118:	ldrb	r3, [r9]
   1711c:	cmp	r3, #0
   17120:	beq	17150 <argp_failure@@Base+0x630>
   17124:	bl	11784 <__ctype_b_loc@plt>
   17128:	mov	r6, r0
   1712c:	ldr	r1, [r0]
   17130:	mov	r5, r9
   17134:	b	16e80 <argp_failure@@Base+0x360>
   17138:	str	r5, [sp]
   1713c:	ldr	r3, [pc, #2700]	; 17bd0 <argp_failure@@Base+0x10b0>
   17140:	mov	r2, #0
   17144:	mov	r1, r2
   17148:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1714c:	bl	16b20 <argp_failure@@Base>
   17150:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17154:	ldr	r3, [pc, #2680]	; 17bd4 <argp_failure@@Base+0x10b4>
   17158:	add	r1, r3, #144	; 0x90
   1715c:	add	r3, r3, #16
   17160:	cmp	r3, r1
   17164:	beq	171b8 <argp_failure@@Base+0x698>
   17168:	ldrb	r2, [r3, #14]
   1716c:	cmp	r2, #0
   17170:	bne	1715c <argp_failure@@Base+0x63c>
   17174:	ldrb	r2, [r3, #15]
   17178:	cmp	r2, #32
   1717c:	beq	1715c <argp_failure@@Base+0x63c>
   17180:	sub	ip, fp, #36	; 0x24
   17184:	add	r2, ip, r2
   17188:	ldr	r2, [r2, #-40]	; 0xffffffd8
   1718c:	cmp	r2, r0
   17190:	blt	1715c <argp_failure@@Base+0x63c>
   17194:	str	r3, [sp, #4]
   17198:	ldr	r3, [pc, #2616]	; 17bd8 <argp_failure@@Base+0x10b8>
   1719c:	str	r3, [sp]
   171a0:	ldr	r3, [pc, #2612]	; 17bdc <argp_failure@@Base+0x10bc>
   171a4:	mov	r2, #0
   171a8:	mov	r1, r2
   171ac:	ldr	r0, [fp, #-100]	; 0xffffff9c
   171b0:	bl	16b20 <argp_failure@@Base>
   171b4:	b	16d68 <argp_failure@@Base+0x248>
   171b8:	ldr	r4, [pc, #2648]	; 17c18 <argp_failure@@Base+0x10f8>
   171bc:	mov	ip, r4
   171c0:	sub	lr, fp, #76	; 0x4c
   171c4:	ldm	lr!, {r0, r1, r2, r3}
   171c8:	stmia	ip!, {r0, r1, r2, r3}
   171cc:	ldm	lr!, {r0, r1, r2, r3}
   171d0:	stmia	ip!, {r0, r1, r2, r3}
   171d4:	ldm	lr, {r0, r1}
   171d8:	stm	ip, {r0, r1}
   171dc:	mov	r3, #1
   171e0:	str	r3, [r4, #36]	; 0x24
   171e4:	b	16d68 <argp_failure@@Base+0x248>
   171e8:	ldr	r0, [fp, #-132]	; 0xffffff7c
   171ec:	bl	116c4 <funlockfile@plt>
   171f0:	b	17db4 <argp_failure@@Base+0x1294>
   171f4:	mov	r1, #0
   171f8:	ldr	r0, [fp, #-112]	; 0xffffff90
   171fc:	bl	16464 <argp_parse@@Base+0x2df4>
   17200:	str	r0, [fp, #-108]	; 0xffffff94
   17204:	ldr	r1, [pc, #2516]	; 17be0 <argp_failure@@Base+0x10c0>
   17208:	bl	1536c <argp_parse@@Base+0x1cfc>
   1720c:	cmp	r0, #0
   17210:	mvnne	r3, #0
   17214:	strne	r3, [r0, #12]
   17218:	ldr	r1, [pc, #2500]	; 17be4 <argp_failure@@Base+0x10c4>
   1721c:	ldr	r0, [fp, #-108]	; 0xffffff94
   17220:	bl	1536c <argp_parse@@Base+0x1cfc>
   17224:	cmp	r0, #0
   17228:	mvnne	r3, #0
   1722c:	strne	r3, [r0, #12]
   17230:	ldr	r0, [fp, #-108]	; 0xffffff94
   17234:	ldr	r3, [r0, #4]
   17238:	cmp	r3, #0
   1723c:	beq	16d9c <argp_failure@@Base+0x27c>
   17240:	ldr	r2, [r0]
   17244:	mov	r3, #0
   17248:	str	r3, [r2, #24]
   1724c:	add	r3, r3, #1
   17250:	add	r2, r2, #28
   17254:	ldr	r1, [r0, #4]
   17258:	cmp	r3, r1
   1725c:	bcc	17248 <argp_failure@@Base+0x728>
   17260:	ldr	r3, [pc, #2432]	; 17be8 <argp_failure@@Base+0x10c8>
   17264:	mov	r2, #28
   17268:	ldr	r0, [fp, #-108]	; 0xffffff94
   1726c:	ldr	r0, [r0]
   17270:	bl	1191c <qsort@plt>
   17274:	b	16d9c <argp_failure@@Base+0x27c>
   17278:	ldr	r0, [fp, #-112]	; 0xffffff90
   1727c:	bl	15404 <argp_parse@@Base+0x1d94>
   17280:	mov	r2, r0
   17284:	add	r3, r0, #14
   17288:	bic	r3, r3, #7
   1728c:	sub	sp, sp, r3
   17290:	add	r8, sp, #8
   17294:	mov	r1, #0
   17298:	mov	r0, r8
   1729c:	bl	11808 <memset@plt>
   172a0:	mov	r5, #1
   172a4:	ldr	r4, [pc, #2412]	; 17c18 <argp_failure@@Base+0x10f8>
   172a8:	ldr	r9, [pc, #2364]	; 17bec <argp_failure@@Base+0x10cc>
   172ac:	str	r8, [fp, #-96]	; 0xffffffa0
   172b0:	ldr	r8, [fp, #-104]	; 0xffffff98
   172b4:	b	17364 <argp_failure@@Base+0x844>
   172b8:	mov	r0, sl
   172bc:	bl	18d74 <argp_error@@Base+0xdd8>
   172c0:	b	17380 <argp_failure@@Base+0x860>
   172c4:	mov	r0, sl
   172c8:	bl	18d74 <argp_error@@Base+0xdd8>
   172cc:	b	173c8 <argp_failure@@Base+0x8a8>
   172d0:	mov	r1, sl
   172d4:	ldr	r0, [fp, #-108]	; 0xffffff94
   172d8:	bl	1515c <argp_parse@@Base+0x1aec>
   172dc:	orr	r8, r8, #2
   172e0:	str	sl, [sp]
   172e4:	mov	r3, #1
   172e8:	sub	r2, fp, #76	; 0x4c
   172ec:	ldr	r1, [fp, #-100]	; 0xffffff9c
   172f0:	ldr	r0, [fp, #-112]	; 0xffffff90
   172f4:	bl	15684 <argp_parse@@Base+0x2014>
   172f8:	mov	r6, r0
   172fc:	ldr	r3, [sl, #28]
   17300:	ldr	r2, [sl, #24]
   17304:	sub	r3, r3, r2
   17308:	ldr	r2, [sl, #16]
   1730c:	cmp	r3, r2
   17310:	bhi	17438 <argp_failure@@Base+0x918>
   17314:	str	r7, [sl, #12]
   17318:	ldr	r3, [sl, #28]
   1731c:	ldr	r2, [sl, #24]
   17320:	sub	r3, r3, r2
   17324:	ldr	r2, [sl, #16]
   17328:	cmp	r3, r2
   1732c:	bhi	17444 <argp_failure@@Base+0x924>
   17330:	str	r5, [sl, #4]
   17334:	ldr	r2, [sl, #28]
   17338:	ldr	r3, [sl, #32]
   1733c:	cmp	r2, r3
   17340:	bcs	17450 <argp_failure@@Base+0x930>
   17344:	ldr	r3, [sl, #28]
   17348:	add	r2, r3, #1
   1734c:	str	r2, [sl, #28]
   17350:	mov	r2, #10
   17354:	strb	r2, [r3]
   17358:	mov	r5, #0
   1735c:	cmp	r6, r5
   17360:	beq	17468 <argp_failure@@Base+0x948>
   17364:	ldr	r6, [r4, #28]
   17368:	ldr	r3, [sl, #28]
   1736c:	ldr	r2, [sl, #24]
   17370:	sub	r3, r3, r2
   17374:	ldr	r2, [sl, #16]
   17378:	cmp	r3, r2
   1737c:	bhi	172b8 <argp_failure@@Base+0x798>
   17380:	ldr	r7, [sl, #12]
   17384:	str	r6, [sl, #12]
   17388:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1738c:	str	r3, [fp, #-76]	; 0xffffffb4
   17390:	cmp	r5, #0
   17394:	ldr	r3, [fp, #4]
   17398:	ldrne	r2, [pc, #2128]	; 17bf0 <argp_failure@@Base+0x10d0>
   1739c:	ldreq	r2, [pc, #2128]	; 17bf4 <argp_failure@@Base+0x10d4>
   173a0:	mov	r1, r9
   173a4:	mov	r0, sl
   173a8:	bl	19408 <argp_error@@Base+0x146c>
   173ac:	ldr	r6, [r4, #28]
   173b0:	ldr	r3, [sl, #28]
   173b4:	ldr	r2, [sl, #24]
   173b8:	sub	r3, r3, r2
   173bc:	ldr	r2, [sl, #16]
   173c0:	cmp	r3, r2
   173c4:	bhi	172c4 <argp_failure@@Base+0x7a4>
   173c8:	ldr	r5, [sl, #4]
   173cc:	str	r6, [sl, #4]
   173d0:	tst	r8, #2
   173d4:	beq	172d0 <argp_failure@@Base+0x7b0>
   173d8:	ldr	r3, [fp, #-108]	; 0xffffff94
   173dc:	ldr	r3, [r3, #4]
   173e0:	cmp	r3, #0
   173e4:	beq	172e0 <argp_failure@@Base+0x7c0>
   173e8:	ldr	r3, [sl, #28]
   173ec:	add	r3, r3, #12
   173f0:	ldr	r2, [sl, #32]
   173f4:	cmp	r2, r3
   173f8:	bcs	17410 <argp_failure@@Base+0x8f0>
   173fc:	mov	r1, #12
   17400:	mov	r0, sl
   17404:	bl	19318 <argp_error@@Base+0x137c>
   17408:	cmp	r0, #0
   1740c:	beq	172e0 <argp_failure@@Base+0x7c0>
   17410:	ldr	ip, [sl, #28]
   17414:	ldr	r3, [pc, #2012]	; 17bf8 <argp_failure@@Base+0x10d8>
   17418:	ldm	r3!, {r0, r1, r2}
   1741c:	str	r0, [ip]
   17420:	str	r1, [ip, #4]
   17424:	str	r2, [ip, #8]
   17428:	ldr	r3, [sl, #28]
   1742c:	add	r3, r3, #12
   17430:	str	r3, [sl, #28]
   17434:	b	172e0 <argp_failure@@Base+0x7c0>
   17438:	mov	r0, sl
   1743c:	bl	18d74 <argp_error@@Base+0xdd8>
   17440:	b	17314 <argp_failure@@Base+0x7f4>
   17444:	mov	r0, sl
   17448:	bl	18d74 <argp_error@@Base+0xdd8>
   1744c:	b	17330 <argp_failure@@Base+0x810>
   17450:	mov	r1, #1
   17454:	mov	r0, sl
   17458:	bl	19318 <argp_error@@Base+0x137c>
   1745c:	cmp	r0, #0
   17460:	beq	17358 <argp_failure@@Base+0x838>
   17464:	b	17344 <argp_failure@@Base+0x824>
   17468:	str	r8, [fp, #-104]	; 0xffffff98
   1746c:	mov	r4, #1
   17470:	b	16dac <argp_failure@@Base+0x28c>
   17474:	str	sl, [sp, #4]
   17478:	mov	r3, #1
   1747c:	str	r3, [sp]
   17480:	mov	r3, #0
   17484:	mov	r2, r3
   17488:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1748c:	ldr	r0, [fp, #-112]	; 0xffffff90
   17490:	bl	15bdc <argp_parse@@Base+0x256c>
   17494:	orr	r4, r4, r0
   17498:	b	16db8 <argp_failure@@Base+0x298>
   1749c:	ldr	r3, [fp, #4]
   174a0:	mov	r2, r3
   174a4:	ldr	r1, [pc, #1872]	; 17bfc <argp_failure@@Base+0x10dc>
   174a8:	mov	r0, sl
   174ac:	bl	19408 <argp_error@@Base+0x146c>
   174b0:	mov	r4, #1
   174b4:	b	16dc4 <argp_failure@@Base+0x2a4>
   174b8:	mov	r1, #1
   174bc:	mov	r0, sl
   174c0:	bl	19318 <argp_error@@Base+0x137c>
   174c4:	cmp	r0, #0
   174c8:	beq	16e0c <argp_failure@@Base+0x2ec>
   174cc:	b	16df8 <argp_failure@@Base+0x2d8>
   174d0:	mov	r0, sl
   174d4:	bl	18d74 <argp_error@@Base+0xdd8>
   174d8:	b	178c4 <argp_failure@@Base+0xda4>
   174dc:	add	r3, r3, #24
   174e0:	subs	r2, r2, #1
   174e4:	beq	17508 <argp_failure@@Base+0x9e8>
   174e8:	ldr	r1, [r3, #-24]	; 0xffffffe8
   174ec:	cmp	r1, #0
   174f0:	beq	174dc <argp_failure@@Base+0x9bc>
   174f4:	ldr	r1, [r3, #-12]
   174f8:	tst	r1, #2
   174fc:	bne	174dc <argp_failure@@Base+0x9bc>
   17500:	mov	r3, #1
   17504:	str	r3, [fp, #-116]	; 0xffffff8c
   17508:	ldr	r3, [pc, #1800]	; 17c18 <argp_failure@@Base+0x10f8>
   1750c:	ldr	r4, [r3, #8]
   17510:	ldr	r3, [sl, #28]
   17514:	ldr	r2, [sl, #24]
   17518:	sub	r3, r3, r2
   1751c:	ldr	r2, [sl, #16]
   17520:	cmp	r3, r2
   17524:	bhi	17544 <argp_failure@@Base+0xa24>
   17528:	str	r4, [sl, #12]
   1752c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17530:	ldr	r5, [r3, #4]
   17534:	cmp	r5, #0
   17538:	beq	17640 <argp_failure@@Base+0xb20>
   1753c:	mov	r4, r8
   17540:	b	17e84 <argp_failure@@Base+0x1364>
   17544:	mov	r0, sl
   17548:	bl	18d74 <argp_error@@Base+0xdd8>
   1754c:	b	17528 <argp_failure@@Base+0xa08>
   17550:	tst	r6, #2
   17554:	beq	17560 <argp_failure@@Base+0xa40>
   17558:	add	r9, r9, #1
   1755c:	b	17e78 <argp_failure@@Base+0x1358>
   17560:	sub	r1, fp, #76	; 0x4c
   17564:	ldr	r3, [pc, #1708]	; 17c18 <argp_failure@@Base+0x10f8>
   17568:	ldr	r0, [r3, #8]
   1756c:	bl	15a58 <argp_parse@@Base+0x23e8>
   17570:	ldr	r2, [sl, #28]
   17574:	ldr	r3, [sl, #32]
   17578:	cmp	r2, r3
   1757c:	bcs	175fc <argp_failure@@Base+0xadc>
   17580:	ldr	r3, [sl, #28]
   17584:	add	r2, r3, #1
   17588:	str	r2, [sl, #28]
   1758c:	mov	r2, #45	; 0x2d
   17590:	strb	r2, [r3]
   17594:	ldrb	r6, [r9]
   17598:	ldr	r2, [sl, #28]
   1759c:	ldr	r3, [sl, #32]
   175a0:	cmp	r2, r3
   175a4:	bcs	17614 <argp_failure@@Base+0xaf4>
   175a8:	ldr	r3, [sl, #28]
   175ac:	add	r2, r3, #1
   175b0:	str	r2, [sl, #28]
   175b4:	strb	r6, [r3]
   175b8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   175bc:	cmp	r3, #0
   175c0:	beq	175d4 <argp_failure@@Base+0xab4>
   175c4:	ldr	r3, [pc, #1612]	; 17c18 <argp_failure@@Base+0x10f8>
   175c8:	ldr	r3, [r3]
   175cc:	cmp	r3, #0
   175d0:	beq	1762c <argp_failure@@Base+0xb0c>
   175d4:	ldr	r2, [r8, #8]
   175d8:	cmp	r2, #0
   175dc:	beq	17558 <argp_failure@@Base+0xa38>
   175e0:	ldr	r3, [r8, #12]
   175e4:	tst	r3, #1
   175e8:	ldrne	r1, [pc, #1552]	; 17c00 <argp_failure@@Base+0x10e0>
   175ec:	ldreq	r1, [pc, #1552]	; 17c04 <argp_failure@@Base+0x10e4>
   175f0:	mov	r0, sl
   175f4:	bl	19408 <argp_error@@Base+0x146c>
   175f8:	b	17558 <argp_failure@@Base+0xa38>
   175fc:	mov	r1, #1
   17600:	mov	r0, sl
   17604:	bl	19318 <argp_error@@Base+0x137c>
   17608:	cmp	r0, #0
   1760c:	beq	17594 <argp_failure@@Base+0xa74>
   17610:	b	17580 <argp_failure@@Base+0xa60>
   17614:	mov	r1, #1
   17618:	mov	r0, sl
   1761c:	bl	19318 <argp_error@@Base+0x137c>
   17620:	cmp	r0, #0
   17624:	beq	175b8 <argp_failure@@Base+0xa98>
   17628:	b	175a8 <argp_failure@@Base+0xa88>
   1762c:	ldr	r3, [r8, #8]
   17630:	cmp	r3, #0
   17634:	movne	r3, #1
   17638:	strne	r3, [fp, #-80]	; 0xffffffb0
   1763c:	b	17558 <argp_failure@@Base+0xa38>
   17640:	ldr	r3, [r8, #12]
   17644:	tst	r3, #8
   17648:	beq	17724 <argp_failure@@Base+0xc04>
   1764c:	ldr	r3, [pc, #1476]	; 17c18 <argp_failure@@Base+0x10f8>
   17650:	ldr	r4, [r3, #16]
   17654:	ldr	r3, [sl, #28]
   17658:	ldr	r2, [sl, #24]
   1765c:	sub	r3, r3, r2
   17660:	ldr	r2, [sl, #16]
   17664:	cmp	r3, r2
   17668:	bhi	17688 <argp_failure@@Base+0xb68>
   1766c:	str	r4, [sl, #12]
   17670:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17674:	ldr	r5, [r3, #4]
   17678:	cmp	r5, #0
   1767c:	beq	177d8 <argp_failure@@Base+0xcb8>
   17680:	add	r4, r8, #24
   17684:	b	176bc <argp_failure@@Base+0xb9c>
   17688:	mov	r0, sl
   1768c:	bl	18d74 <argp_error@@Base+0xdd8>
   17690:	b	1766c <argp_failure@@Base+0xb4c>
   17694:	mov	r2, r6
   17698:	mov	r1, r7
   1769c:	ldr	r0, [sl, #28]
   176a0:	bl	11610 <memcpy@plt>
   176a4:	ldr	r3, [sl, #28]
   176a8:	add	r6, r3, r6
   176ac:	str	r6, [sl, #28]
   176b0:	add	r4, r4, #24
   176b4:	subs	r5, r5, #1
   176b8:	beq	177d8 <argp_failure@@Base+0xcb8>
   176bc:	ldr	r3, [r4, #-24]	; 0xffffffe8
   176c0:	cmp	r3, #0
   176c4:	beq	176b0 <argp_failure@@Base+0xb90>
   176c8:	ldr	r3, [r4, #-12]
   176cc:	tst	r3, #2
   176d0:	bne	176b0 <argp_failure@@Base+0xb90>
   176d4:	sub	r1, fp, #76	; 0x4c
   176d8:	ldr	r3, [pc, #1336]	; 17c18 <argp_failure@@Base+0x10f8>
   176dc:	ldr	r0, [r3, #16]
   176e0:	bl	15a58 <argp_parse@@Base+0x23e8>
   176e4:	ldr	r7, [r4, #-24]	; 0xffffffe8
   176e8:	mov	r0, r7
   176ec:	bl	117b4 <strlen@plt>
   176f0:	subs	r6, r0, #0
   176f4:	beq	176b0 <argp_failure@@Base+0xb90>
   176f8:	ldr	r3, [sl, #28]
   176fc:	add	r3, r3, r6
   17700:	ldr	r2, [sl, #32]
   17704:	cmp	r2, r3
   17708:	bcs	17694 <argp_failure@@Base+0xb74>
   1770c:	mov	r1, r6
   17710:	mov	r0, sl
   17714:	bl	19318 <argp_error@@Base+0x137c>
   17718:	cmp	r0, #0
   1771c:	beq	176b0 <argp_failure@@Base+0xb90>
   17720:	b	17694 <argp_failure@@Base+0xb74>
   17724:	ldr	r3, [pc, #1260]	; 17c18 <argp_failure@@Base+0x10f8>
   17728:	ldr	r4, [r3, #12]
   1772c:	ldr	r3, [sl, #28]
   17730:	ldr	r2, [sl, #24]
   17734:	sub	r3, r3, r2
   17738:	ldr	r2, [sl, #16]
   1773c:	cmp	r3, r2
   17740:	bhi	17760 <argp_failure@@Base+0xc40>
   17744:	str	r4, [sl, #12]
   17748:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1774c:	ldr	r5, [r3, #4]
   17750:	cmp	r5, #0
   17754:	beq	177d8 <argp_failure@@Base+0xcb8>
   17758:	add	r4, r8, #24
   1775c:	b	17778 <argp_failure@@Base+0xc58>
   17760:	mov	r0, sl
   17764:	bl	18d74 <argp_error@@Base+0xdd8>
   17768:	b	17744 <argp_failure@@Base+0xc24>
   1776c:	add	r4, r4, #24
   17770:	subs	r5, r5, #1
   17774:	beq	177d8 <argp_failure@@Base+0xcb8>
   17778:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1777c:	cmp	r3, #0
   17780:	beq	1776c <argp_failure@@Base+0xc4c>
   17784:	ldr	r3, [r4, #-12]
   17788:	tst	r3, #2
   1778c:	bne	1776c <argp_failure@@Base+0xc4c>
   17790:	sub	r1, fp, #76	; 0x4c
   17794:	ldr	r3, [pc, #1148]	; 17c18 <argp_failure@@Base+0x10f8>
   17798:	ldr	r0, [r3, #12]
   1779c:	bl	15a58 <argp_parse@@Base+0x23e8>
   177a0:	ldr	r2, [r4, #-24]	; 0xffffffe8
   177a4:	ldr	r1, [pc, #1116]	; 17c08 <argp_failure@@Base+0x10e8>
   177a8:	mov	r0, sl
   177ac:	bl	19408 <argp_error@@Base+0x146c>
   177b0:	ldr	r2, [r8, #8]
   177b4:	cmp	r2, #0
   177b8:	beq	1776c <argp_failure@@Base+0xc4c>
   177bc:	ldr	r3, [r8, #12]
   177c0:	tst	r3, #1
   177c4:	ldrne	r1, [pc, #1088]	; 17c0c <argp_failure@@Base+0x10ec>
   177c8:	ldreq	r1, [pc, #1088]	; 17c10 <argp_failure@@Base+0x10f0>
   177cc:	mov	r0, sl
   177d0:	bl	19408 <argp_error@@Base+0x146c>
   177d4:	b	1776c <argp_failure@@Base+0xc4c>
   177d8:	ldr	r3, [sl, #28]
   177dc:	ldr	r2, [sl, #24]
   177e0:	sub	r3, r3, r2
   177e4:	ldr	r2, [sl, #16]
   177e8:	cmp	r3, r2
   177ec:	bhi	1792c <argp_failure@@Base+0xe0c>
   177f0:	mov	r3, #0
   177f4:	str	r3, [sl, #4]
   177f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   177fc:	cmp	r3, #0
   17800:	beq	17950 <argp_failure@@Base+0xe30>
   17804:	ldr	r3, [r8, #12]
   17808:	tst	r3, #8
   1780c:	bne	17838 <argp_failure@@Base+0xd18>
   17810:	ldr	r4, [r8, #4]
   17814:	sub	r3, r4, #1
   17818:	cmp	r3, #254	; 0xfe
   1781c:	bhi	17838 <argp_failure@@Base+0xd18>
   17820:	bl	11784 <__ctype_b_loc@plt>
   17824:	ldr	r3, [r0]
   17828:	lsl	r4, r4, #1
   1782c:	ldrh	r3, [r3, r4]
   17830:	tst	r3, #16384	; 0x4000
   17834:	bne	17844 <argp_failure@@Base+0xd24>
   17838:	ldr	r3, [r8]
   1783c:	cmp	r3, #0
   17840:	beq	17938 <argp_failure@@Base+0xe18>
   17844:	ldr	r3, [sl, #28]
   17848:	ldr	r2, [sl, #24]
   1784c:	sub	r3, r3, r2
   17850:	ldr	r2, [sl, #16]
   17854:	cmp	r3, r2
   17858:	bhi	17ba8 <argp_failure@@Base+0x1088>
   1785c:	ldr	r3, [fp, #-124]	; 0xffffff84
   17860:	str	r3, [sl, #4]
   17864:	ldr	r3, [sl, #28]
   17868:	ldr	r2, [sl, #24]
   1786c:	sub	r3, r3, r2
   17870:	ldr	r2, [sl, #16]
   17874:	cmp	r3, r2
   17878:	bhi	17bb4 <argp_failure@@Base+0x1094>
   1787c:	ldr	r3, [fp, #-128]	; 0xffffff80
   17880:	str	r3, [sl, #12]
   17884:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17888:	add	r3, r3, #28
   1788c:	str	r3, [fp, #-96]	; 0xffffffa0
   17890:	ldr	r3, [fp, #-120]	; 0xffffff88
   17894:	subs	r3, r3, #1
   17898:	str	r3, [fp, #-120]	; 0xffffff88
   1789c:	beq	17c2c <argp_failure@@Base+0x110c>
   178a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   178a4:	ldr	r8, [r3]
   178a8:	ldr	r9, [r3, #8]
   178ac:	ldr	r3, [sl, #28]
   178b0:	ldr	r2, [sl, #24]
   178b4:	sub	r3, r3, r2
   178b8:	ldr	r2, [sl, #16]
   178bc:	cmp	r3, r2
   178c0:	bhi	174d0 <argp_failure@@Base+0x9b0>
   178c4:	ldr	r3, [sl, #4]
   178c8:	str	r3, [fp, #-124]	; 0xffffff84
   178cc:	mov	r3, #0
   178d0:	str	r3, [sl, #4]
   178d4:	ldr	r3, [sl, #12]
   178d8:	str	r3, [fp, #-128]	; 0xffffff80
   178dc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   178e0:	str	r2, [fp, #-76]	; 0xffffffb4
   178e4:	str	sl, [fp, #-72]	; 0xffffffb8
   178e8:	sub	r3, fp, #88	; 0x58
   178ec:	str	r3, [fp, #-68]	; 0xffffffbc
   178f0:	mov	r3, #1
   178f4:	str	r3, [fp, #-64]	; 0xffffffc0
   178f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   178fc:	str	r3, [fp, #-60]	; 0xffffffc4
   17900:	ldr	r3, [r8, #12]
   17904:	ands	r3, r3, #8
   17908:	str	r3, [fp, #-116]	; 0xffffff8c
   1790c:	movne	r3, #0
   17910:	strne	r3, [fp, #-116]	; 0xffffff8c
   17914:	bne	17508 <argp_failure@@Base+0x9e8>
   17918:	ldr	r2, [r2, #4]
   1791c:	cmp	r2, #0
   17920:	beq	17508 <argp_failure@@Base+0x9e8>
   17924:	add	r3, r8, #24
   17928:	b	174e8 <argp_failure@@Base+0x9c8>
   1792c:	mov	r0, sl
   17930:	bl	18d74 <argp_error@@Base+0xdd8>
   17934:	b	177f0 <argp_failure@@Base+0xcd0>
   17938:	sub	r2, fp, #76	; 0x4c
   1793c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17940:	ldr	r1, [r3, #20]
   17944:	ldr	r0, [r8, #16]
   17948:	bl	15874 <argp_parse@@Base+0x2204>
   1794c:	b	17aa8 <argp_failure@@Base+0xf88>
   17950:	ldr	r7, [r8, #16]
   17954:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17958:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1795c:	ldr	r2, [r2, #20]
   17960:	ldr	r1, [r8, #4]
   17964:	mov	r0, r7
   17968:	bl	15640 <argp_parse@@Base+0x1fd0>
   1796c:	subs	r4, r0, #0
   17970:	beq	17a64 <argp_failure@@Base+0xf44>
   17974:	ldrb	r3, [r4]
   17978:	cmp	r3, #0
   1797c:	beq	17a5c <argp_failure@@Base+0xf3c>
   17980:	ldr	r3, [sl, #28]
   17984:	ldr	r2, [sl, #24]
   17988:	sub	r3, r3, r2
   1798c:	ldr	r2, [sl, #16]
   17990:	cmp	r3, r2
   17994:	bhi	17ab4 <argp_failure@@Base+0xf94>
   17998:	ldr	r5, [sl, #20]
   1799c:	bic	r5, r5, r5, asr #31
   179a0:	ldr	r3, [pc, #624]	; 17c18 <argp_failure@@Base+0x10f8>
   179a4:	ldr	r6, [r3, #20]
   179a8:	str	r6, [sl, #4]
   179ac:	ldr	r3, [pc, #612]	; 17c18 <argp_failure@@Base+0x10f8>
   179b0:	ldr	r6, [r3, #20]
   179b4:	ldr	r3, [sl, #28]
   179b8:	ldr	r2, [sl, #24]
   179bc:	sub	r3, r3, r2
   179c0:	ldr	r2, [sl, #16]
   179c4:	cmp	r3, r2
   179c8:	bhi	17af0 <argp_failure@@Base+0xfd0>
   179cc:	str	r6, [sl, #12]
   179d0:	ldr	r3, [pc, #576]	; 17c18 <argp_failure@@Base+0x10f8>
   179d4:	ldr	r1, [r3, #20]
   179d8:	add	r3, r1, #3
   179dc:	cmp	r3, r5
   179e0:	bcs	17b14 <argp_failure@@Base+0xff4>
   179e4:	ldr	r2, [sl, #28]
   179e8:	ldr	r3, [sl, #32]
   179ec:	cmp	r2, r3
   179f0:	bcs	17afc <argp_failure@@Base+0xfdc>
   179f4:	ldr	r3, [sl, #28]
   179f8:	add	r2, r3, #1
   179fc:	str	r2, [sl, #28]
   17a00:	mov	r2, #10
   17a04:	strb	r2, [r3]
   17a08:	mov	r0, r4
   17a0c:	bl	117b4 <strlen@plt>
   17a10:	subs	r5, r0, #0
   17a14:	beq	17a5c <argp_failure@@Base+0xf3c>
   17a18:	ldr	r3, [sl, #28]
   17a1c:	add	r3, r3, r5
   17a20:	ldr	r2, [sl, #32]
   17a24:	cmp	r2, r3
   17a28:	bcs	17a40 <argp_failure@@Base+0xf20>
   17a2c:	mov	r1, r5
   17a30:	mov	r0, sl
   17a34:	bl	19318 <argp_error@@Base+0x137c>
   17a38:	cmp	r0, #0
   17a3c:	beq	17a5c <argp_failure@@Base+0xf3c>
   17a40:	mov	r2, r5
   17a44:	mov	r1, r4
   17a48:	ldr	r0, [sl, #28]
   17a4c:	bl	11610 <memcpy@plt>
   17a50:	ldr	r3, [sl, #28]
   17a54:	add	r5, r3, r5
   17a58:	str	r5, [sl, #28]
   17a5c:	cmp	r7, r4
   17a60:	bne	17b78 <argp_failure@@Base+0x1058>
   17a64:	ldr	r3, [sl, #28]
   17a68:	ldr	r2, [sl, #24]
   17a6c:	sub	r3, r3, r2
   17a70:	ldr	r2, [sl, #16]
   17a74:	cmp	r3, r2
   17a78:	bhi	17b84 <argp_failure@@Base+0x1064>
   17a7c:	mov	r3, #0
   17a80:	str	r3, [sl, #4]
   17a84:	ldr	r2, [sl, #28]
   17a88:	ldr	r3, [sl, #32]
   17a8c:	cmp	r2, r3
   17a90:	bcs	17b90 <argp_failure@@Base+0x1070>
   17a94:	ldr	r3, [sl, #28]
   17a98:	add	r2, r3, #1
   17a9c:	str	r2, [sl, #28]
   17aa0:	mov	r2, #10
   17aa4:	strb	r2, [r3]
   17aa8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17aac:	str	r3, [fp, #-88]	; 0xffffffa8
   17ab0:	b	17844 <argp_failure@@Base+0xd24>
   17ab4:	mov	r0, sl
   17ab8:	bl	18d74 <argp_error@@Base+0xdd8>
   17abc:	ldr	r5, [sl, #20]
   17ac0:	bic	r5, r5, r5, asr #31
   17ac4:	ldr	r3, [pc, #332]	; 17c18 <argp_failure@@Base+0x10f8>
   17ac8:	ldr	r6, [r3, #20]
   17acc:	ldr	r3, [sl, #28]
   17ad0:	ldr	r2, [sl, #24]
   17ad4:	sub	r3, r3, r2
   17ad8:	ldr	r2, [sl, #16]
   17adc:	cmp	r3, r2
   17ae0:	bls	179a8 <argp_failure@@Base+0xe88>
   17ae4:	mov	r0, sl
   17ae8:	bl	18d74 <argp_error@@Base+0xdd8>
   17aec:	b	179a8 <argp_failure@@Base+0xe88>
   17af0:	mov	r0, sl
   17af4:	bl	18d74 <argp_error@@Base+0xdd8>
   17af8:	b	179cc <argp_failure@@Base+0xeac>
   17afc:	mov	r1, #1
   17b00:	mov	r0, sl
   17b04:	bl	19318 <argp_error@@Base+0x137c>
   17b08:	cmp	r0, #0
   17b0c:	beq	17a08 <argp_failure@@Base+0xee8>
   17b10:	b	179f4 <argp_failure@@Base+0xed4>
   17b14:	cmp	r1, r5
   17b18:	bhi	17b6c <argp_failure@@Base+0x104c>
   17b1c:	ldr	r3, [sl, #28]
   17b20:	add	r3, r3, #3
   17b24:	ldr	r2, [sl, #32]
   17b28:	cmp	r2, r3
   17b2c:	bcs	17b44 <argp_failure@@Base+0x1024>
   17b30:	mov	r1, #3
   17b34:	mov	r0, sl
   17b38:	bl	19318 <argp_error@@Base+0x137c>
   17b3c:	cmp	r0, #0
   17b40:	beq	17a08 <argp_failure@@Base+0xee8>
   17b44:	ldr	r3, [sl, #28]
   17b48:	ldr	r2, [pc, #196]	; 17c14 <argp_failure@@Base+0x10f4>
   17b4c:	ldrh	r1, [r2]
   17b50:	ldrb	r2, [r2, #2]
   17b54:	strh	r1, [r3]
   17b58:	strb	r2, [r3, #2]
   17b5c:	ldr	r3, [sl, #28]
   17b60:	add	r3, r3, #3
   17b64:	str	r3, [sl, #28]
   17b68:	b	17a08 <argp_failure@@Base+0xee8>
   17b6c:	mov	r0, sl
   17b70:	bl	1545c <argp_parse@@Base+0x1dec>
   17b74:	b	17a08 <argp_failure@@Base+0xee8>
   17b78:	mov	r0, r4
   17b7c:	bl	14264 <argp_parse@@Base+0xbf4>
   17b80:	b	17a64 <argp_failure@@Base+0xf44>
   17b84:	mov	r0, sl
   17b88:	bl	18d74 <argp_error@@Base+0xdd8>
   17b8c:	b	17a7c <argp_failure@@Base+0xf5c>
   17b90:	mov	r1, #1
   17b94:	mov	r0, sl
   17b98:	bl	19318 <argp_error@@Base+0x137c>
   17b9c:	cmp	r0, #0
   17ba0:	beq	17aa8 <argp_failure@@Base+0xf88>
   17ba4:	b	17a94 <argp_failure@@Base+0xf74>
   17ba8:	mov	r0, sl
   17bac:	bl	18d74 <argp_error@@Base+0xdd8>
   17bb0:	b	1785c <argp_failure@@Base+0xd3c>
   17bb4:	mov	r0, sl
   17bb8:	bl	18d74 <argp_error@@Base+0xdd8>
   17bbc:	b	1787c <argp_failure@@Base+0xd5c>
   17bc0:	andeq	sl, r1, r0, lsl #15
   17bc4:	andeq	sl, r1, r8, lsr #11
   17bc8:	muleq	r1, r0, r7
   17bcc:	andeq	sl, r1, r0, asr #15
   17bd0:	andeq	sl, r1, r8, ror #15
   17bd4:	andeq	sl, r1, r0, asr #11
   17bd8:	andeq	sl, r1, ip, lsr r8
   17bdc:	andeq	sl, r1, r8, lsl #16
   17be0:	andeq	sl, r1, r4, asr #2
   17be4:	andeq	sl, r1, r4, lsr #2
   17be8:	andeq	r6, r1, r4, ror r1
   17bec:	andeq	sl, r1, ip, asr #16
   17bf0:	andeq	sl, r1, r4, asr #16
   17bf4:	andeq	sl, r1, r4, asr r8
   17bf8:	andeq	sl, r1, ip, asr r8
   17bfc:	andeq	sl, r1, ip, ror #16
   17c00:	andeq	sl, r1, r4, lsr #17
   17c04:	strdeq	sl, [r1], -r4
   17c08:	andeq	sl, r1, ip, lsr #17
   17c0c:			; <UNDEFINED> instruction: 0x0001a8b4
   17c10:			; <UNDEFINED> instruction: 0x0001a8bc
   17c14:	andeq	sl, r1, r0, asr #17
   17c18:	muleq	r2, r8, r4
   17c1c:	andeq	r0, r0, #5
   17c20:	andeq	sl, r1, r4, asr #17
   17c24:	andeq	fp, r2, r0, asr #10
   17c28:	andeq	sl, r1, r8, lsr r9
   17c2c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17c30:	cmp	r3, #0
   17c34:	beq	17d24 <argp_failure@@Base+0x1204>
   17c38:	ldr	r3, [pc, #-40]	; 17c18 <argp_failure@@Base+0x10f8>
   17c3c:	ldr	r3, [r3, #4]
   17c40:	cmp	r3, #0
   17c44:	beq	17d24 <argp_failure@@Base+0x1204>
   17c48:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17c4c:	cmp	r3, #0
   17c50:	ldrne	r2, [r3]
   17c54:	moveq	r2, #0
   17c58:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17c5c:	ldr	r1, [pc, #-72]	; 17c1c <argp_failure@@Base+0x10fc>
   17c60:	ldr	r0, [pc, #-72]	; 17c20 <argp_failure@@Base+0x1100>
   17c64:	bl	15640 <argp_parse@@Base+0x1fd0>
   17c68:	subs	r4, r0, #0
   17c6c:	beq	17d24 <argp_failure@@Base+0x1204>
   17c70:	ldrb	r3, [r4]
   17c74:	cmp	r3, #0
   17c78:	beq	17d18 <argp_failure@@Base+0x11f8>
   17c7c:	ldr	r2, [sl, #28]
   17c80:	ldr	r3, [sl, #32]
   17c84:	cmp	r2, r3
   17c88:	bcs	17dbc <argp_failure@@Base+0x129c>
   17c8c:	ldr	r3, [sl, #28]
   17c90:	add	r2, r3, #1
   17c94:	str	r2, [sl, #28]
   17c98:	mov	r2, #10
   17c9c:	strb	r2, [r3]
   17ca0:	mov	r0, r4
   17ca4:	bl	117b4 <strlen@plt>
   17ca8:	subs	r5, r0, #0
   17cac:	beq	17cf4 <argp_failure@@Base+0x11d4>
   17cb0:	ldr	r3, [sl, #28]
   17cb4:	add	r3, r3, r5
   17cb8:	ldr	r2, [sl, #32]
   17cbc:	cmp	r2, r3
   17cc0:	bcs	17cd8 <argp_failure@@Base+0x11b8>
   17cc4:	mov	r1, r5
   17cc8:	mov	r0, sl
   17ccc:	bl	19318 <argp_error@@Base+0x137c>
   17cd0:	cmp	r0, #0
   17cd4:	beq	17cf4 <argp_failure@@Base+0x11d4>
   17cd8:	mov	r2, r5
   17cdc:	mov	r1, r4
   17ce0:	ldr	r0, [sl, #28]
   17ce4:	bl	11610 <memcpy@plt>
   17ce8:	ldr	r3, [sl, #28]
   17cec:	add	r5, r3, r5
   17cf0:	str	r5, [sl, #28]
   17cf4:	ldr	r2, [sl, #28]
   17cf8:	ldr	r3, [sl, #32]
   17cfc:	cmp	r2, r3
   17d00:	bcs	17dd4 <argp_failure@@Base+0x12b4>
   17d04:	ldr	r3, [sl, #28]
   17d08:	add	r2, r3, #1
   17d0c:	str	r2, [sl, #28]
   17d10:	mov	r2, #10
   17d14:	strb	r2, [r3]
   17d18:	ldr	r3, [pc, #-256]	; 17c20 <argp_failure@@Base+0x1100>
   17d1c:	cmp	r4, r3
   17d20:	bne	17dec <argp_failure@@Base+0x12cc>
   17d24:	mov	r4, #1
   17d28:	ldr	r3, [fp, #-104]	; 0xffffff98
   17d2c:	tst	r3, #32
   17d30:	bne	17df8 <argp_failure@@Base+0x12d8>
   17d34:	ldr	r3, [fp, #-104]	; 0xffffff98
   17d38:	tst	r3, #64	; 0x40
   17d3c:	beq	17d90 <argp_failure@@Base+0x1270>
   17d40:	ldr	r3, [pc, #-292]	; 17c24 <argp_failure@@Base+0x1104>
   17d44:	ldr	r3, [r3]
   17d48:	cmp	r3, #0
   17d4c:	beq	17d90 <argp_failure@@Base+0x1270>
   17d50:	cmp	r4, #0
   17d54:	beq	17d7c <argp_failure@@Base+0x125c>
   17d58:	ldr	r2, [sl, #28]
   17d5c:	ldr	r3, [sl, #32]
   17d60:	cmp	r2, r3
   17d64:	bcs	17e20 <argp_failure@@Base+0x1300>
   17d68:	ldr	r3, [sl, #28]
   17d6c:	add	r2, r3, #1
   17d70:	str	r2, [sl, #28]
   17d74:	mov	r2, #10
   17d78:	strb	r2, [r3]
   17d7c:	ldr	r3, [pc, #-352]	; 17c24 <argp_failure@@Base+0x1104>
   17d80:	ldr	r2, [r3]
   17d84:	ldr	r1, [pc, #-356]	; 17c28 <argp_failure@@Base+0x1108>
   17d88:	mov	r0, sl
   17d8c:	bl	19408 <argp_error@@Base+0x146c>
   17d90:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17d94:	bl	116c4 <funlockfile@plt>
   17d98:	ldr	r3, [fp, #-108]	; 0xffffff94
   17d9c:	cmp	r3, #0
   17da0:	beq	17dac <argp_failure@@Base+0x128c>
   17da4:	mov	r0, r3
   17da8:	bl	15318 <argp_parse@@Base+0x1ca8>
   17dac:	mov	r0, sl
   17db0:	bl	192d8 <argp_error@@Base+0x133c>
   17db4:	sub	sp, fp, #32
   17db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17dbc:	mov	r1, #1
   17dc0:	mov	r0, sl
   17dc4:	bl	19318 <argp_error@@Base+0x137c>
   17dc8:	cmp	r0, #0
   17dcc:	beq	17ca0 <argp_failure@@Base+0x1180>
   17dd0:	b	17c8c <argp_failure@@Base+0x116c>
   17dd4:	mov	r1, #1
   17dd8:	mov	r0, sl
   17ddc:	bl	19318 <argp_error@@Base+0x137c>
   17de0:	cmp	r0, #0
   17de4:	beq	17d18 <argp_failure@@Base+0x11f8>
   17de8:	b	17d04 <argp_failure@@Base+0x11e4>
   17dec:	mov	r0, r4
   17df0:	bl	14264 <argp_parse@@Base+0xbf4>
   17df4:	b	17d24 <argp_failure@@Base+0x1204>
   17df8:	str	sl, [sp, #4]
   17dfc:	mov	r3, #0
   17e00:	str	r3, [sp]
   17e04:	mov	r3, r4
   17e08:	mov	r2, #1
   17e0c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17e10:	ldr	r0, [fp, #-112]	; 0xffffff90
   17e14:	bl	15bdc <argp_parse@@Base+0x256c>
   17e18:	orr	r4, r4, r0
   17e1c:	b	17d34 <argp_failure@@Base+0x1214>
   17e20:	mov	r1, #1
   17e24:	mov	r0, sl
   17e28:	bl	19318 <argp_error@@Base+0x137c>
   17e2c:	cmp	r0, #0
   17e30:	beq	17d7c <argp_failure@@Base+0x125c>
   17e34:	b	17d68 <argp_failure@@Base+0x1248>
   17e38:	ldrb	r3, [r5]
   17e3c:	mov	r4, r5
   17e40:	mov	r5, #0
   17e44:	b	16f18 <argp_failure@@Base+0x3f8>
   17e48:	mov	r4, r2
   17e4c:	b	16f2c <argp_failure@@Base+0x40c>
   17e50:	cmp	r0, #110	; 0x6e
   17e54:	beq	16f84 <argp_failure@@Base+0x464>
   17e58:	mov	r3, #1
   17e5c:	str	r3, [fp, #-96]	; 0xffffffa0
   17e60:	str	r3, [fp, #-116]	; 0xffffff8c
   17e64:	add	r6, sl, #24
   17e68:	b	1707c <argp_failure@@Base+0x55c>
   17e6c:	ldrb	r3, [r9]
   17e70:	cmp	r7, r3
   17e74:	beq	17550 <argp_failure@@Base+0xa30>
   17e78:	add	r4, r4, #24
   17e7c:	subs	r5, r5, #1
   17e80:	beq	17640 <argp_failure@@Base+0xb20>
   17e84:	ldr	r6, [r4, #12]
   17e88:	tst	r6, #8
   17e8c:	bne	17e78 <argp_failure@@Base+0x1358>
   17e90:	ldr	r7, [r4, #4]
   17e94:	sub	r3, r7, #1
   17e98:	cmp	r3, #254	; 0xfe
   17e9c:	bhi	17e78 <argp_failure@@Base+0x1358>
   17ea0:	bl	11784 <__ctype_b_loc@plt>
   17ea4:	ldr	r2, [r0]
   17ea8:	lsl	r3, r7, #1
   17eac:	ldrh	r3, [r2, r3]
   17eb0:	tst	r3, #16384	; 0x4000
   17eb4:	bne	17e6c <argp_failure@@Base+0x134c>
   17eb8:	b	17e78 <argp_failure@@Base+0x1358>

00017ebc <argp_help@@Base>:
   17ebc:	push	{lr}		; (str lr, [sp, #-4]!)
   17ec0:	sub	sp, sp, #12
   17ec4:	str	r3, [sp]
   17ec8:	mov	r3, r2
   17ecc:	mov	r2, r1
   17ed0:	mov	r1, #0
   17ed4:	bl	16d28 <argp_failure@@Base+0x208>
   17ed8:	add	sp, sp, #12
   17edc:	pop	{pc}		; (ldr pc, [sp], #4)

00017ee0 <argp_state_help@@Base>:
   17ee0:	push	{r4, r5, lr}
   17ee4:	sub	sp, sp, #12
   17ee8:	mov	r5, r2
   17eec:	subs	r4, r0, #0
   17ef0:	beq	17f54 <argp_state_help@@Base+0x74>
   17ef4:	ldr	r3, [r4, #16]
   17ef8:	tst	r3, #2
   17efc:	bne	17f4c <argp_state_help@@Base+0x6c>
   17f00:	cmp	r1, #0
   17f04:	beq	17f4c <argp_state_help@@Base+0x6c>
   17f08:	ldr	r3, [r4, #16]
   17f0c:	tst	r3, #64	; 0x40
   17f10:	orrne	r5, r5, #128	; 0x80
   17f14:	ldr	r0, [r4]
   17f18:	ldr	r3, [r4, #40]	; 0x28
   17f1c:	str	r3, [sp]
   17f20:	mov	r3, r5
   17f24:	mov	r2, r1
   17f28:	mov	r1, r4
   17f2c:	bl	16d28 <argp_failure@@Base+0x208>
   17f30:	ldr	r3, [r4, #16]
   17f34:	tst	r3, #32
   17f38:	bne	17f4c <argp_state_help@@Base+0x6c>
   17f3c:	tst	r5, #256	; 0x100
   17f40:	bne	17f80 <argp_state_help@@Base+0xa0>
   17f44:	tst	r5, #512	; 0x200
   17f48:	bne	17f8c <argp_state_help@@Base+0xac>
   17f4c:	add	sp, sp, #12
   17f50:	pop	{r4, r5, pc}
   17f54:	cmp	r1, #0
   17f58:	beq	17f4c <argp_state_help@@Base+0x6c>
   17f5c:	ldr	r3, [pc, #48]	; 17f94 <argp_state_help@@Base+0xb4>
   17f60:	ldr	r3, [r3]
   17f64:	str	r3, [sp]
   17f68:	mov	r3, r2
   17f6c:	mov	r2, r1
   17f70:	mov	r1, #0
   17f74:	mov	r0, r1
   17f78:	bl	16d28 <argp_failure@@Base+0x208>
   17f7c:	b	17f3c <argp_state_help@@Base+0x5c>
   17f80:	ldr	r3, [pc, #16]	; 17f98 <argp_state_help@@Base+0xb8>
   17f84:	ldr	r0, [r3]
   17f88:	bl	1179c <exit@plt>
   17f8c:	mov	r0, #0
   17f90:	bl	1179c <exit@plt>
   17f94:	ldrdeq	fp, [r2], -r8
   17f98:	ldrdeq	fp, [r2], -r0

00017f9c <argp_error@@Base>:
   17f9c:	push	{r1, r2, r3}
   17fa0:	push	{r4, r5, lr}
   17fa4:	sub	sp, sp, #8
   17fa8:	subs	r5, r0, #0
   17fac:	beq	1807c <argp_error@@Base+0xe0>
   17fb0:	ldr	r3, [r5, #16]
   17fb4:	tst	r3, #2
   17fb8:	bne	1806c <argp_error@@Base+0xd0>
   17fbc:	ldr	r4, [r5, #44]	; 0x2c
   17fc0:	cmp	r4, #0
   17fc4:	beq	1806c <argp_error@@Base+0xd0>
   17fc8:	mov	r0, r4
   17fcc:	bl	11904 <flockfile@plt>
   17fd0:	add	r3, sp, #24
   17fd4:	str	r3, [sp, #4]
   17fd8:	ldr	r0, [r5, #40]	; 0x28
   17fdc:	mov	r1, r4
   17fe0:	bl	1155c <fputs_unlocked@plt>
   17fe4:	ldr	r3, [r4, #20]
   17fe8:	ldr	r2, [r4, #24]
   17fec:	cmp	r3, r2
   17ff0:	addcc	r2, r3, #1
   17ff4:	strcc	r2, [r4, #20]
   17ff8:	movcc	r2, #58	; 0x3a
   17ffc:	strbcc	r2, [r3]
   18000:	bcs	180a8 <argp_error@@Base+0x10c>
   18004:	ldr	r3, [r4, #20]
   18008:	ldr	r2, [r4, #24]
   1800c:	cmp	r3, r2
   18010:	addcc	r2, r3, #1
   18014:	strcc	r2, [r4, #20]
   18018:	movcc	r2, #32
   1801c:	strbcc	r2, [r3]
   18020:	bcs	180b8 <argp_error@@Base+0x11c>
   18024:	ldr	r2, [sp, #4]
   18028:	ldr	r1, [sp, #20]
   1802c:	mov	r0, r4
   18030:	bl	118b0 <vfprintf@plt>
   18034:	ldr	r3, [r4, #20]
   18038:	ldr	r2, [r4, #24]
   1803c:	cmp	r3, r2
   18040:	addcc	r2, r3, #1
   18044:	strcc	r2, [r4, #20]
   18048:	movcc	r2, #10
   1804c:	strbcc	r2, [r3]
   18050:	bcs	180c8 <argp_error@@Base+0x12c>
   18054:	mov	r2, #260	; 0x104
   18058:	mov	r1, r4
   1805c:	mov	r0, r5
   18060:	bl	17ee0 <argp_state_help@@Base>
   18064:	mov	r0, r4
   18068:	bl	116c4 <funlockfile@plt>
   1806c:	add	sp, sp, #8
   18070:	pop	{r4, r5, lr}
   18074:	add	sp, sp, #12
   18078:	bx	lr
   1807c:	ldr	r3, [pc, #84]	; 180d8 <argp_error@@Base+0x13c>
   18080:	ldr	r4, [r3]
   18084:	cmp	r4, #0
   18088:	beq	1806c <argp_error@@Base+0xd0>
   1808c:	mov	r0, r4
   18090:	bl	11904 <flockfile@plt>
   18094:	add	r3, sp, #24
   18098:	str	r3, [sp, #4]
   1809c:	ldr	r3, [pc, #56]	; 180dc <argp_error@@Base+0x140>
   180a0:	ldr	r0, [r3]
   180a4:	b	17fdc <argp_error@@Base+0x40>
   180a8:	mov	r1, #58	; 0x3a
   180ac:	mov	r0, r4
   180b0:	bl	11868 <__overflow@plt>
   180b4:	b	18004 <argp_error@@Base+0x68>
   180b8:	mov	r1, #32
   180bc:	mov	r0, r4
   180c0:	bl	11868 <__overflow@plt>
   180c4:	b	18024 <argp_error@@Base+0x88>
   180c8:	mov	r1, #10
   180cc:	mov	r0, r4
   180d0:	bl	11868 <__overflow@plt>
   180d4:	b	18054 <argp_error@@Base+0xb8>
   180d8:	andeq	fp, r2, r8, ror #9
   180dc:	ldrdeq	fp, [r2], -r8
   180e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   180e4:	ldr	r4, [r1, #28]
   180e8:	ldr	r5, [r1, #32]
   180ec:	ldr	r6, [r1]
   180f0:	add	r7, r0, r5, lsl #2
   180f4:	b	1812c <argp_error@@Base+0x190>
   180f8:	cmp	sl, #0
   180fc:	ble	18128 <argp_error@@Base+0x18c>
   18100:	add	r2, r0, r4, lsl #2
   18104:	sub	r3, r6, sl
   18108:	add	r3, r0, r3, lsl #2
   1810c:	add	r8, r0, r6, lsl #2
   18110:	ldr	ip, [r2]
   18114:	ldr	lr, [r3]
   18118:	str	lr, [r2], #4
   1811c:	str	ip, [r3], #4
   18120:	cmp	r3, r8
   18124:	bne	18110 <argp_error@@Base+0x174>
   18128:	sub	r6, r6, sl
   1812c:	cmp	r6, r5
   18130:	movle	r3, #0
   18134:	movgt	r3, #1
   18138:	cmp	r4, r5
   1813c:	movge	r3, #0
   18140:	cmp	r3, #0
   18144:	beq	18190 <argp_error@@Base+0x1f4>
   18148:	sub	r9, r6, r5
   1814c:	sub	sl, r5, r4
   18150:	cmp	r9, sl
   18154:	bgt	180f8 <argp_error@@Base+0x15c>
   18158:	cmp	r9, #0
   1815c:	addgt	r3, r0, r4, lsl #2
   18160:	addgt	r8, r9, r4
   18164:	addgt	r8, r0, r8, lsl #2
   18168:	movgt	r2, r7
   1816c:	ble	18188 <argp_error@@Base+0x1ec>
   18170:	ldr	ip, [r3]
   18174:	ldr	lr, [r2]
   18178:	str	lr, [r3], #4
   1817c:	str	ip, [r2], #4
   18180:	cmp	r3, r8
   18184:	bne	18170 <argp_error@@Base+0x1d4>
   18188:	add	r4, r4, r9
   1818c:	b	1812c <argp_error@@Base+0x190>
   18190:	ldr	r0, [r1]
   18194:	ldr	r3, [r1, #32]
   18198:	sub	r2, r0, r3
   1819c:	ldr	r3, [r1, #28]
   181a0:	add	r3, r3, r2
   181a4:	str	r3, [r1, #28]
   181a8:	str	r0, [r1, #32]
   181ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   181b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181b4:	sub	sp, sp, #44	; 0x2c
   181b8:	str	r0, [sp, #20]
   181bc:	str	r1, [sp, #12]
   181c0:	str	r2, [sp, #24]
   181c4:	str	r3, [sp, #8]
   181c8:	ldr	fp, [sp, #88]	; 0x58
   181cc:	ldr	sl, [fp, #20]
   181d0:	ldrb	r3, [sl]
   181d4:	cmp	r3, #0
   181d8:	cmpne	r3, #61	; 0x3d
   181dc:	beq	18218 <argp_error@@Base+0x27c>
   181e0:	mov	r8, sl
   181e4:	ldrb	r3, [r8, #1]!
   181e8:	cmp	r3, #0
   181ec:	cmpne	r3, #61	; 0x3d
   181f0:	bne	181e4 <argp_error@@Base+0x248>
   181f4:	sub	r7, r8, sl
   181f8:	ldr	r5, [sp, #8]
   181fc:	ldr	r3, [r5]
   18200:	str	r3, [sp, #16]
   18204:	cmp	r3, #0
   18208:	beq	1850c <argp_error@@Base+0x570>
   1820c:	mov	r4, r3
   18210:	mov	r6, #0
   18214:	b	18230 <argp_error@@Base+0x294>
   18218:	mov	r8, sl
   1821c:	b	181f4 <argp_error@@Base+0x258>
   18220:	add	r6, r6, #1
   18224:	ldr	r4, [r5, #16]!
   18228:	cmp	r4, #0
   1822c:	beq	18268 <argp_error@@Base+0x2cc>
   18230:	mov	r9, r5
   18234:	mov	r2, r7
   18238:	mov	r1, sl
   1823c:	mov	r0, r4
   18240:	bl	11958 <strncmp@plt>
   18244:	cmp	r0, #0
   18248:	bne	18220 <argp_error@@Base+0x284>
   1824c:	mov	r0, r4
   18250:	bl	117b4 <strlen@plt>
   18254:	cmp	r7, r0
   18258:	bne	18220 <argp_error@@Base+0x284>
   1825c:	cmp	r5, #0
   18260:	strne	r6, [sp, #28]
   18264:	bne	184bc <argp_error@@Base+0x520>
   18268:	ldr	r4, [sp, #8]
   1826c:	mvn	r3, #0
   18270:	str	r3, [sp, #28]
   18274:	mov	sl, #0
   18278:	str	sl, [sp, #36]	; 0x24
   1827c:	mov	r5, sl
   18280:	mov	r9, sl
   18284:	str	r8, [sp, #32]
   18288:	mov	r8, sl
   1828c:	ldr	r0, [sp, #16]
   18290:	b	182e0 <argp_error@@Base+0x344>
   18294:	ldr	r2, [r9, #8]
   18298:	ldr	r3, [r4, #8]
   1829c:	cmp	r2, r3
   182a0:	bne	18318 <argp_error@@Base+0x37c>
   182a4:	ldr	r2, [r9, #12]
   182a8:	ldr	r3, [r4, #12]
   182ac:	cmp	r2, r3
   182b0:	bne	18318 <argp_error@@Base+0x37c>
   182b4:	b	182d0 <argp_error@@Base+0x334>
   182b8:	cmp	r8, #0
   182bc:	moveq	sl, #1
   182c0:	beq	182d0 <argp_error@@Base+0x334>
   182c4:	mov	sl, #1
   182c8:	mov	r3, #1
   182cc:	strb	r3, [r8, r5]
   182d0:	add	r5, r5, #1
   182d4:	ldr	r0, [r4, #16]!
   182d8:	cmp	r0, #0
   182dc:	beq	18380 <argp_error@@Base+0x3e4>
   182e0:	mov	r2, r7
   182e4:	ldr	r1, [fp, #20]
   182e8:	bl	11958 <strncmp@plt>
   182ec:	cmp	r0, #0
   182f0:	bne	182d0 <argp_error@@Base+0x334>
   182f4:	cmp	r9, #0
   182f8:	beq	1836c <argp_error@@Base+0x3d0>
   182fc:	ldr	r3, [sp, #84]	; 0x54
   18300:	cmp	r3, #0
   18304:	bne	18318 <argp_error@@Base+0x37c>
   18308:	ldr	r2, [r9, #4]
   1830c:	ldr	r3, [r4, #4]
   18310:	cmp	r2, r3
   18314:	beq	18294 <argp_error@@Base+0x2f8>
   18318:	cmp	sl, #0
   1831c:	bne	182d0 <argp_error@@Base+0x334>
   18320:	ldr	r3, [sp, #92]	; 0x5c
   18324:	cmp	r3, #0
   18328:	beq	182b8 <argp_error@@Base+0x31c>
   1832c:	cmp	r8, #0
   18330:	bne	182c8 <argp_error@@Base+0x32c>
   18334:	mov	r0, r6
   18338:	bl	14e9c <argp_parse@@Base+0x182c>
   1833c:	subs	r8, r0, #0
   18340:	beq	18378 <argp_error@@Base+0x3dc>
   18344:	mov	r2, r6
   18348:	mov	r1, #0
   1834c:	mov	r0, r8
   18350:	bl	11808 <memset@plt>
   18354:	ldr	r3, [sp, #28]
   18358:	mov	r2, #1
   1835c:	strb	r2, [r8, r3]
   18360:	mov	r3, #1
   18364:	str	r3, [sp, #36]	; 0x24
   18368:	b	182c8 <argp_error@@Base+0x32c>
   1836c:	str	r5, [sp, #28]
   18370:	mov	r9, r4
   18374:	b	182d0 <argp_error@@Base+0x334>
   18378:	mov	sl, #1
   1837c:	b	182d0 <argp_error@@Base+0x334>
   18380:	mov	r3, r8
   18384:	str	r8, [sp, #16]
   18388:	ldr	r8, [sp, #32]
   1838c:	cmp	sl, #0
   18390:	cmpeq	r3, #0
   18394:	beq	184b4 <argp_error@@Base+0x518>
   18398:	ldr	r3, [sp, #92]	; 0x5c
   1839c:	cmp	r3, #0
   183a0:	beq	183d0 <argp_error@@Base+0x434>
   183a4:	cmp	sl, #0
   183a8:	beq	1840c <argp_error@@Base+0x470>
   183ac:	ldr	r3, [sp, #12]
   183b0:	ldr	r2, [r3]
   183b4:	ldr	r3, [pc, #708]	; 18680 <argp_error@@Base+0x6e4>
   183b8:	ldr	r0, [r3]
   183bc:	ldr	r3, [fp, #20]
   183c0:	str	r3, [sp]
   183c4:	ldr	r3, [sp, #96]	; 0x60
   183c8:	ldr	r1, [pc, #692]	; 18684 <argp_error@@Base+0x6e8>
   183cc:	bl	117d8 <fprintf@plt>
   183d0:	ldr	r3, [sp, #36]	; 0x24
   183d4:	cmp	r3, #0
   183d8:	bne	184a8 <argp_error@@Base+0x50c>
   183dc:	ldr	r4, [fp, #20]
   183e0:	mov	r0, r4
   183e4:	bl	117b4 <strlen@plt>
   183e8:	add	r0, r4, r0
   183ec:	str	r0, [fp, #20]
   183f0:	ldr	r3, [fp]
   183f4:	add	r3, r3, #1
   183f8:	str	r3, [fp]
   183fc:	mov	r3, #0
   18400:	str	r3, [fp, #8]
   18404:	mov	r0, #63	; 0x3f
   18408:	b	18600 <argp_error@@Base+0x664>
   1840c:	ldr	r4, [pc, #620]	; 18680 <argp_error@@Base+0x6e4>
   18410:	ldr	r0, [r4]
   18414:	bl	11904 <flockfile@plt>
   18418:	ldr	r3, [sp, #12]
   1841c:	ldr	r2, [r3]
   18420:	ldr	r0, [r4]
   18424:	ldr	r3, [fp, #20]
   18428:	str	r3, [sp]
   1842c:	ldr	r3, [sp, #96]	; 0x60
   18430:	ldr	r1, [pc, #592]	; 18688 <argp_error@@Base+0x6ec>
   18434:	bl	117d8 <fprintf@plt>
   18438:	cmp	r6, #0
   1843c:	ble	1848c <argp_error@@Base+0x4f0>
   18440:	ldr	r3, [sp, #16]
   18444:	mov	r4, r3
   18448:	add	r6, r3, r6
   1844c:	ldr	r7, [pc, #568]	; 1868c <argp_error@@Base+0x6f0>
   18450:	ldr	r5, [pc, #552]	; 18680 <argp_error@@Base+0x6e4>
   18454:	ldr	r8, [sp, #8]
   18458:	b	18468 <argp_error@@Base+0x4cc>
   1845c:	add	sl, sl, #1
   18460:	cmp	r4, r6
   18464:	beq	1848c <argp_error@@Base+0x4f0>
   18468:	ldrb	r3, [r4], #1
   1846c:	cmp	r3, #0
   18470:	beq	1845c <argp_error@@Base+0x4c0>
   18474:	ldr	r3, [r8, sl, lsl #4]
   18478:	ldr	r2, [sp, #96]	; 0x60
   1847c:	mov	r1, r7
   18480:	ldr	r0, [r5]
   18484:	bl	117d8 <fprintf@plt>
   18488:	b	1845c <argp_error@@Base+0x4c0>
   1848c:	ldr	r4, [pc, #492]	; 18680 <argp_error@@Base+0x6e4>
   18490:	ldr	r1, [r4]
   18494:	mov	r0, #10
   18498:	bl	118bc <fputc@plt>
   1849c:	ldr	r0, [r4]
   184a0:	bl	116c4 <funlockfile@plt>
   184a4:	b	183d0 <argp_error@@Base+0x434>
   184a8:	ldr	r0, [sp, #16]
   184ac:	bl	14264 <argp_parse@@Base+0xbf4>
   184b0:	b	183dc <argp_error@@Base+0x440>
   184b4:	cmp	r9, #0
   184b8:	beq	1850c <argp_error@@Base+0x570>
   184bc:	ldr	r2, [fp]
   184c0:	add	r3, r2, #1
   184c4:	str	r3, [fp]
   184c8:	mov	r1, #0
   184cc:	str	r1, [fp, #20]
   184d0:	ldrb	r1, [r8]
   184d4:	cmp	r1, #0
   184d8:	beq	185cc <argp_error@@Base+0x630>
   184dc:	ldr	r3, [r9, #4]
   184e0:	cmp	r3, #0
   184e4:	addne	r8, r8, #1
   184e8:	strne	r8, [fp, #12]
   184ec:	bne	185d8 <argp_error@@Base+0x63c>
   184f0:	ldr	r3, [sp, #92]	; 0x5c
   184f4:	cmp	r3, #0
   184f8:	bne	185a4 <argp_error@@Base+0x608>
   184fc:	ldr	r3, [r9, #12]
   18500:	str	r3, [fp, #8]
   18504:	mov	r0, #63	; 0x3f
   18508:	b	18600 <argp_error@@Base+0x664>
   1850c:	ldr	r3, [sp, #84]	; 0x54
   18510:	cmp	r3, #0
   18514:	bne	18544 <argp_error@@Base+0x5a8>
   18518:	ldr	r3, [sp, #92]	; 0x5c
   1851c:	cmp	r3, #0
   18520:	bne	1857c <argp_error@@Base+0x5e0>
   18524:	mov	r2, #0
   18528:	str	r2, [fp, #20]
   1852c:	ldr	r3, [fp]
   18530:	add	r3, r3, #1
   18534:	str	r3, [fp]
   18538:	str	r2, [fp, #8]
   1853c:	mov	r0, #63	; 0x3f
   18540:	b	18600 <argp_error@@Base+0x664>
   18544:	ldr	r3, [fp]
   18548:	ldr	r2, [sp, #12]
   1854c:	ldr	r3, [r2, r3, lsl #2]
   18550:	ldrb	r3, [r3, #1]
   18554:	cmp	r3, #45	; 0x2d
   18558:	beq	18518 <argp_error@@Base+0x57c>
   1855c:	ldr	r3, [fp, #20]
   18560:	ldrb	r1, [r3]
   18564:	ldr	r0, [sp, #24]
   18568:	bl	117c0 <strchr@plt>
   1856c:	cmp	r0, #0
   18570:	beq	18518 <argp_error@@Base+0x57c>
   18574:	mvn	r0, #0
   18578:	b	18600 <argp_error@@Base+0x664>
   1857c:	ldr	r3, [sp, #12]
   18580:	ldr	r2, [r3]
   18584:	ldr	r3, [pc, #244]	; 18680 <argp_error@@Base+0x6e4>
   18588:	ldr	r0, [r3]
   1858c:	ldr	r3, [fp, #20]
   18590:	str	r3, [sp]
   18594:	ldr	r3, [sp, #96]	; 0x60
   18598:	ldr	r1, [pc, #240]	; 18690 <argp_error@@Base+0x6f4>
   1859c:	bl	117d8 <fprintf@plt>
   185a0:	b	18524 <argp_error@@Base+0x588>
   185a4:	ldr	r3, [sp, #12]
   185a8:	ldr	r2, [r3]
   185ac:	ldr	r3, [pc, #204]	; 18680 <argp_error@@Base+0x6e4>
   185b0:	ldr	r0, [r3]
   185b4:	ldr	r3, [r9]
   185b8:	str	r3, [sp]
   185bc:	ldr	r3, [sp, #96]	; 0x60
   185c0:	ldr	r1, [pc, #204]	; 18694 <argp_error@@Base+0x6f8>
   185c4:	bl	117d8 <fprintf@plt>
   185c8:	b	184fc <argp_error@@Base+0x560>
   185cc:	ldr	r1, [r9, #4]
   185d0:	cmp	r1, #1
   185d4:	beq	18608 <argp_error@@Base+0x66c>
   185d8:	ldr	r3, [sp, #80]	; 0x50
   185dc:	cmp	r3, #0
   185e0:	ldrne	r2, [sp, #28]
   185e4:	strne	r2, [r3]
   185e8:	ldr	r3, [r9, #8]
   185ec:	cmp	r3, #0
   185f0:	ldrne	r2, [r9, #12]
   185f4:	strne	r2, [r3]
   185f8:	movne	r0, #0
   185fc:	ldreq	r0, [r9, #12]
   18600:	add	sp, sp, #44	; 0x2c
   18604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18608:	ldr	r1, [sp, #20]
   1860c:	cmp	r3, r1
   18610:	bge	1862c <argp_error@@Base+0x690>
   18614:	add	r2, r2, #2
   18618:	str	r2, [fp]
   1861c:	ldr	r2, [sp, #12]
   18620:	ldr	r3, [r2, r3, lsl #2]
   18624:	str	r3, [fp, #12]
   18628:	b	185d8 <argp_error@@Base+0x63c>
   1862c:	ldr	r3, [sp, #92]	; 0x5c
   18630:	cmp	r3, #0
   18634:	bne	18658 <argp_error@@Base+0x6bc>
   18638:	ldr	r3, [r9, #12]
   1863c:	str	r3, [fp, #8]
   18640:	ldr	r3, [sp, #24]
   18644:	ldrb	r0, [r3]
   18648:	cmp	r0, #58	; 0x3a
   1864c:	moveq	r0, #58	; 0x3a
   18650:	movne	r0, #63	; 0x3f
   18654:	b	18600 <argp_error@@Base+0x664>
   18658:	ldr	r3, [sp, #12]
   1865c:	ldr	r2, [r3]
   18660:	ldr	r3, [pc, #24]	; 18680 <argp_error@@Base+0x6e4>
   18664:	ldr	r0, [r3]
   18668:	ldr	r3, [r9]
   1866c:	str	r3, [sp]
   18670:	ldr	r3, [sp, #96]	; 0x60
   18674:	ldr	r1, [pc, #28]	; 18698 <argp_error@@Base+0x6fc>
   18678:	bl	117d8 <fprintf@plt>
   1867c:	b	18638 <argp_error@@Base+0x69c>
   18680:	andeq	fp, r2, r8, ror #9
   18684:	andeq	sl, r1, ip, asr #18
   18688:	andeq	sl, r1, ip, ror #18
   1868c:	muleq	r1, ip, r9
   18690:	andeq	sl, r1, r4, lsr #19
   18694:	andeq	sl, r1, r4, asr #19
   18698:	strdeq	sl, [r1], -r4
   1869c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   186a0:	sub	sp, sp, #36	; 0x24
   186a4:	str	r3, [sp, #24]
   186a8:	ldr	r4, [sp, #80]	; 0x50
   186ac:	ldr	r8, [r4, #4]
   186b0:	subs	r5, r0, #0
   186b4:	ble	18bbc <argp_error@@Base+0xc20>
   186b8:	mov	r9, r1
   186bc:	mov	r6, r2
   186c0:	mov	r3, #0
   186c4:	str	r3, [r4, #12]
   186c8:	ldr	r3, [r4]
   186cc:	cmp	r3, #0
   186d0:	beq	186f4 <argp_error@@Base+0x758>
   186d4:	ldr	r3, [r4, #16]
   186d8:	cmp	r3, #0
   186dc:	beq	186fc <argp_error@@Base+0x760>
   186e0:	ldrb	r3, [r2]
   186e4:	sub	r3, r3, #43	; 0x2b
   186e8:	tst	r3, #253	; 0xfd
   186ec:	addeq	r6, r2, #1
   186f0:	b	18758 <argp_error@@Base+0x7bc>
   186f4:	mov	r3, #1
   186f8:	str	r3, [r4]
   186fc:	ldr	r3, [r4]
   18700:	str	r3, [r4, #32]
   18704:	str	r3, [r4, #28]
   18708:	mov	r3, #0
   1870c:	str	r3, [r4, #20]
   18710:	ldrb	r3, [r6]
   18714:	cmp	r3, #45	; 0x2d
   18718:	moveq	r3, #2
   1871c:	streq	r3, [r4, #24]
   18720:	addeq	r6, r6, #1
   18724:	beq	18750 <argp_error@@Base+0x7b4>
   18728:	cmp	r3, #43	; 0x2b
   1872c:	moveq	r3, #0
   18730:	streq	r3, [r4, #24]
   18734:	addeq	r6, r6, #1
   18738:	beq	18750 <argp_error@@Base+0x7b4>
   1873c:	ldr	r3, [sp, #84]	; 0x54
   18740:	cmp	r3, #0
   18744:	beq	187f4 <argp_error@@Base+0x858>
   18748:	mov	r3, #0
   1874c:	str	r3, [r4, #24]
   18750:	mov	r3, #1
   18754:	str	r3, [r4, #16]
   18758:	ldrb	r3, [r6]
   1875c:	cmp	r3, #58	; 0x3a
   18760:	moveq	r8, #0
   18764:	ldr	r3, [r4, #20]
   18768:	cmp	r3, #0
   1876c:	beq	1877c <argp_error@@Base+0x7e0>
   18770:	ldrb	r3, [r3]
   18774:	cmp	r3, #0
   18778:	bne	18908 <argp_error@@Base+0x96c>
   1877c:	ldr	r3, [r4]
   18780:	ldr	r2, [r4, #32]
   18784:	cmp	r2, r3
   18788:	strgt	r3, [r4, #32]
   1878c:	ldr	r2, [r4, #28]
   18790:	cmp	r3, r2
   18794:	strlt	r3, [r4, #28]
   18798:	ldr	r2, [r4, #24]
   1879c:	cmp	r2, #1
   187a0:	beq	18810 <argp_error@@Base+0x874>
   187a4:	ldr	r7, [r4]
   187a8:	cmp	r5, r7
   187ac:	beq	18894 <argp_error@@Base+0x8f8>
   187b0:	ldr	sl, [r9, r7, lsl #2]
   187b4:	ldr	r1, [pc, #1088]	; 18bfc <argp_error@@Base+0xc60>
   187b8:	mov	r0, sl
   187bc:	bl	11574 <strcmp@plt>
   187c0:	cmp	r0, #0
   187c4:	bne	18bcc <argp_error@@Base+0xc30>
   187c8:	add	r7, r7, #1
   187cc:	str	r7, [r4]
   187d0:	ldr	r2, [r4, #28]
   187d4:	ldr	r3, [r4, #32]
   187d8:	cmp	r7, r3
   187dc:	cmpne	r2, r3
   187e0:	beq	18884 <argp_error@@Base+0x8e8>
   187e4:	mov	r1, r4
   187e8:	mov	r0, r9
   187ec:	bl	180e0 <argp_error@@Base+0x144>
   187f0:	b	1888c <argp_error@@Base+0x8f0>
   187f4:	ldr	r0, [pc, #1028]	; 18c00 <argp_error@@Base+0xc64>
   187f8:	bl	11718 <getenv@plt>
   187fc:	cmp	r0, #0
   18800:	bne	18748 <argp_error@@Base+0x7ac>
   18804:	mov	r3, #1
   18808:	str	r3, [r4, #24]
   1880c:	b	18750 <argp_error@@Base+0x7b4>
   18810:	ldr	r2, [r4, #32]
   18814:	ldr	r1, [r4, #28]
   18818:	cmp	r1, r2
   1881c:	cmpne	r3, r2
   18820:	beq	18834 <argp_error@@Base+0x898>
   18824:	mov	r1, r4
   18828:	mov	r0, r9
   1882c:	bl	180e0 <argp_error@@Base+0x144>
   18830:	b	1883c <argp_error@@Base+0x8a0>
   18834:	cmp	r3, r2
   18838:	strne	r3, [r4, #28]
   1883c:	ldr	r3, [r4]
   18840:	cmp	r5, r3
   18844:	ble	1887c <argp_error@@Base+0x8e0>
   18848:	add	r1, r9, r3, lsl #2
   1884c:	b	18860 <argp_error@@Base+0x8c4>
   18850:	add	r3, r3, #1
   18854:	str	r3, [r4]
   18858:	cmp	r5, r3
   1885c:	beq	1887c <argp_error@@Base+0x8e0>
   18860:	ldr	r2, [r1], #4
   18864:	ldrb	r0, [r2]
   18868:	cmp	r0, #45	; 0x2d
   1886c:	bne	18850 <argp_error@@Base+0x8b4>
   18870:	ldrb	r2, [r2, #1]
   18874:	cmp	r2, #0
   18878:	beq	18850 <argp_error@@Base+0x8b4>
   1887c:	str	r3, [r4, #32]
   18880:	b	187a4 <argp_error@@Base+0x808>
   18884:	cmp	r2, r3
   18888:	streq	r7, [r4, #28]
   1888c:	str	r5, [r4, #32]
   18890:	str	r5, [r4]
   18894:	ldr	r3, [r4, #28]
   18898:	ldr	r2, [r4, #32]
   1889c:	cmp	r3, r2
   188a0:	mvneq	r0, #0
   188a4:	strne	r3, [r4]
   188a8:	mvnne	r0, #0
   188ac:	b	18a0c <argp_error@@Base+0xa70>
   188b0:	ldrb	r1, [sl, #1]
   188b4:	cmp	r1, #0
   188b8:	beq	18bd8 <argp_error@@Base+0xc3c>
   188bc:	ldr	r3, [sp, #24]
   188c0:	cmp	r3, #0
   188c4:	beq	188f8 <argp_error@@Base+0x95c>
   188c8:	cmp	r1, #45	; 0x2d
   188cc:	beq	18970 <argp_error@@Base+0x9d4>
   188d0:	ldr	r3, [sp, #76]	; 0x4c
   188d4:	cmp	r3, #0
   188d8:	beq	188f8 <argp_error@@Base+0x95c>
   188dc:	ldrb	r3, [sl, #2]
   188e0:	cmp	r3, #0
   188e4:	bne	189b0 <argp_error@@Base+0xa14>
   188e8:	mov	r0, r6
   188ec:	bl	117c0 <strchr@plt>
   188f0:	cmp	r0, #0
   188f4:	beq	189b0 <argp_error@@Base+0xa14>
   188f8:	ldr	r3, [r4]
   188fc:	ldr	r3, [r9, r3, lsl #2]
   18900:	add	r3, r3, #1
   18904:	str	r3, [r4, #20]
   18908:	ldr	sl, [r4, #20]
   1890c:	add	fp, sl, #1
   18910:	str	fp, [r4, #20]
   18914:	ldrb	r7, [sl]
   18918:	str	r7, [sp, #28]
   1891c:	mov	r1, r7
   18920:	mov	r0, r6
   18924:	bl	117c0 <strchr@plt>
   18928:	ldrb	r3, [sl, #1]
   1892c:	cmp	r3, #0
   18930:	ldreq	r3, [r4]
   18934:	addeq	r3, r3, #1
   18938:	streq	r3, [r4]
   1893c:	sub	r3, r7, #58	; 0x3a
   18940:	uxtb	r3, r3
   18944:	cmp	r0, #0
   18948:	cmpne	r3, #1
   1894c:	bls	189f8 <argp_error@@Base+0xa5c>
   18950:	ldrb	r3, [r0]
   18954:	cmp	r3, #87	; 0x57
   18958:	beq	18a30 <argp_error@@Base+0xa94>
   1895c:	ldrb	r3, [r0, #1]
   18960:	cmp	r3, #58	; 0x3a
   18964:	beq	18afc <argp_error@@Base+0xb60>
   18968:	mov	r0, r7
   1896c:	b	18a0c <argp_error@@Base+0xa70>
   18970:	add	sl, sl, #2
   18974:	str	sl, [r4, #20]
   18978:	ldr	r3, [pc, #636]	; 18bfc <argp_error@@Base+0xc60>
   1897c:	str	r3, [sp, #16]
   18980:	str	r8, [sp, #12]
   18984:	str	r4, [sp, #8]
   18988:	ldr	r3, [sp, #76]	; 0x4c
   1898c:	str	r3, [sp, #4]
   18990:	ldr	r3, [sp, #72]	; 0x48
   18994:	str	r3, [sp]
   18998:	ldr	r3, [sp, #24]
   1899c:	mov	r2, r6
   189a0:	mov	r1, r9
   189a4:	mov	r0, r5
   189a8:	bl	181b0 <argp_error@@Base+0x214>
   189ac:	b	18a0c <argp_error@@Base+0xa70>
   189b0:	add	sl, sl, #1
   189b4:	str	sl, [r4, #20]
   189b8:	ldr	r3, [pc, #580]	; 18c04 <argp_error@@Base+0xc68>
   189bc:	str	r3, [sp, #16]
   189c0:	str	r8, [sp, #12]
   189c4:	str	r4, [sp, #8]
   189c8:	ldr	r3, [sp, #76]	; 0x4c
   189cc:	str	r3, [sp, #4]
   189d0:	ldr	r3, [sp, #72]	; 0x48
   189d4:	str	r3, [sp]
   189d8:	ldr	r3, [sp, #24]
   189dc:	mov	r2, r6
   189e0:	mov	r1, r9
   189e4:	mov	r0, r5
   189e8:	bl	181b0 <argp_error@@Base+0x214>
   189ec:	cmn	r0, #1
   189f0:	bne	18a0c <argp_error@@Base+0xa70>
   189f4:	b	188f8 <argp_error@@Base+0x95c>
   189f8:	cmp	r8, #0
   189fc:	bne	18a14 <argp_error@@Base+0xa78>
   18a00:	ldr	r3, [sp, #28]
   18a04:	str	r3, [r4, #8]
   18a08:	mov	r0, #63	; 0x3f
   18a0c:	add	sp, sp, #36	; 0x24
   18a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a14:	ldr	r3, [sp, #28]
   18a18:	ldr	r2, [r9]
   18a1c:	ldr	r1, [pc, #484]	; 18c08 <argp_error@@Base+0xc6c>
   18a20:	ldr	r0, [pc, #484]	; 18c0c <argp_error@@Base+0xc70>
   18a24:	ldr	r0, [r0]
   18a28:	bl	117d8 <fprintf@plt>
   18a2c:	b	18a00 <argp_error@@Base+0xa64>
   18a30:	ldrb	r3, [r0, #1]
   18a34:	ldr	r2, [sp, #24]
   18a38:	cmp	r3, #59	; 0x3b
   18a3c:	movne	r3, #0
   18a40:	moveq	r3, #1
   18a44:	cmp	r2, #0
   18a48:	moveq	r3, #0
   18a4c:	cmp	r3, #0
   18a50:	beq	1895c <argp_error@@Base+0x9c0>
   18a54:	ldrb	r3, [sl, #1]
   18a58:	cmp	r3, #0
   18a5c:	strne	fp, [r4, #12]
   18a60:	bne	18a78 <argp_error@@Base+0xadc>
   18a64:	ldr	r3, [r4]
   18a68:	cmp	r5, r3
   18a6c:	beq	18abc <argp_error@@Base+0xb20>
   18a70:	ldr	r3, [r9, r3, lsl #2]
   18a74:	str	r3, [r4, #12]
   18a78:	ldr	r3, [r4, #12]
   18a7c:	str	r3, [r4, #20]
   18a80:	mov	r3, #0
   18a84:	str	r3, [r4, #12]
   18a88:	ldr	r2, [pc, #384]	; 18c10 <argp_error@@Base+0xc74>
   18a8c:	str	r2, [sp, #16]
   18a90:	str	r8, [sp, #12]
   18a94:	str	r4, [sp, #8]
   18a98:	str	r3, [sp, #4]
   18a9c:	ldr	r3, [sp, #72]	; 0x48
   18aa0:	str	r3, [sp]
   18aa4:	ldr	r3, [sp, #24]
   18aa8:	mov	r2, r6
   18aac:	mov	r1, r9
   18ab0:	mov	r0, r5
   18ab4:	bl	181b0 <argp_error@@Base+0x214>
   18ab8:	b	18a0c <argp_error@@Base+0xa70>
   18abc:	cmp	r8, #0
   18ac0:	bne	18ae0 <argp_error@@Base+0xb44>
   18ac4:	ldr	r3, [sp, #28]
   18ac8:	str	r3, [r4, #8]
   18acc:	ldrb	r0, [r6]
   18ad0:	cmp	r0, #58	; 0x3a
   18ad4:	moveq	r0, #58	; 0x3a
   18ad8:	movne	r0, #63	; 0x3f
   18adc:	b	18a0c <argp_error@@Base+0xa70>
   18ae0:	ldr	r3, [sp, #28]
   18ae4:	ldr	r2, [r9]
   18ae8:	ldr	r1, [pc, #292]	; 18c14 <argp_error@@Base+0xc78>
   18aec:	ldr	r0, [pc, #280]	; 18c0c <argp_error@@Base+0xc70>
   18af0:	ldr	r0, [r0]
   18af4:	bl	117d8 <fprintf@plt>
   18af8:	b	18ac4 <argp_error@@Base+0xb28>
   18afc:	ldrb	r3, [r0, #2]
   18b00:	cmp	r3, #58	; 0x3a
   18b04:	beq	18b30 <argp_error@@Base+0xb94>
   18b08:	ldrb	r3, [sl, #1]
   18b0c:	cmp	r3, #0
   18b10:	beq	18b5c <argp_error@@Base+0xbc0>
   18b14:	str	fp, [r4, #12]
   18b18:	ldr	r3, [r4]
   18b1c:	add	r3, r3, #1
   18b20:	str	r3, [r4]
   18b24:	mov	r3, #0
   18b28:	str	r3, [r4, #20]
   18b2c:	b	18968 <argp_error@@Base+0x9cc>
   18b30:	ldrb	r3, [sl, #1]
   18b34:	cmp	r3, #0
   18b38:	strne	fp, [r4, #12]
   18b3c:	ldrne	r3, [r4]
   18b40:	addne	r3, r3, #1
   18b44:	strne	r3, [r4]
   18b48:	moveq	r3, #0
   18b4c:	streq	r3, [r4, #12]
   18b50:	mov	r3, #0
   18b54:	str	r3, [r4, #20]
   18b58:	b	18968 <argp_error@@Base+0x9cc>
   18b5c:	ldr	r3, [r4]
   18b60:	cmp	r5, r3
   18b64:	beq	18b7c <argp_error@@Base+0xbe0>
   18b68:	add	r2, r3, #1
   18b6c:	str	r2, [r4]
   18b70:	ldr	r3, [r9, r3, lsl #2]
   18b74:	str	r3, [r4, #12]
   18b78:	b	18b24 <argp_error@@Base+0xb88>
   18b7c:	cmp	r8, #0
   18b80:	bne	18ba0 <argp_error@@Base+0xc04>
   18b84:	ldr	r3, [sp, #28]
   18b88:	str	r3, [r4, #8]
   18b8c:	ldrb	r7, [r6]
   18b90:	cmp	r7, #58	; 0x3a
   18b94:	moveq	r7, #58	; 0x3a
   18b98:	movne	r7, #63	; 0x3f
   18b9c:	b	18b24 <argp_error@@Base+0xb88>
   18ba0:	ldr	r3, [sp, #28]
   18ba4:	ldr	r2, [r9]
   18ba8:	ldr	r1, [pc, #100]	; 18c14 <argp_error@@Base+0xc78>
   18bac:	ldr	r0, [pc, #88]	; 18c0c <argp_error@@Base+0xc70>
   18bb0:	ldr	r0, [r0]
   18bb4:	bl	117d8 <fprintf@plt>
   18bb8:	b	18b84 <argp_error@@Base+0xbe8>
   18bbc:	mvn	r0, #0
   18bc0:	b	18a0c <argp_error@@Base+0xa70>
   18bc4:	mvn	r0, #0
   18bc8:	b	18a0c <argp_error@@Base+0xa70>
   18bcc:	ldrb	r3, [sl]
   18bd0:	cmp	r3, #45	; 0x2d
   18bd4:	beq	188b0 <argp_error@@Base+0x914>
   18bd8:	ldr	r3, [r4, #24]
   18bdc:	cmp	r3, #0
   18be0:	beq	18bc4 <argp_error@@Base+0xc28>
   18be4:	add	r3, r7, #1
   18be8:	str	r3, [r4]
   18bec:	ldr	r3, [r9, r7, lsl #2]
   18bf0:	str	r3, [r4, #12]
   18bf4:	mov	r0, #1
   18bf8:	b	18a0c <argp_error@@Base+0xa70>
   18bfc:	andeq	sl, r1, ip, ror #1
   18c00:	andeq	sl, r1, ip, lsl sl
   18c04:	andeq	sl, r1, ip, lsr #20
   18c08:	andeq	sl, r1, r0, lsr sl
   18c0c:	andeq	fp, r2, r8, ror #9
   18c10:	andeq	sl, r1, r8, ror sl
   18c14:	andeq	sl, r1, ip, asr #20
   18c18:	push	{r4, r5, lr}
   18c1c:	sub	sp, sp, #20
   18c20:	ldr	r4, [pc, #84]	; 18c7c <argp_error@@Base+0xce0>
   18c24:	ldr	r5, [pc, #84]	; 18c80 <argp_error@@Base+0xce4>
   18c28:	ldr	ip, [r5]
   18c2c:	str	ip, [r4]
   18c30:	ldr	ip, [r5, #4]
   18c34:	str	ip, [r4, #4]
   18c38:	ldr	ip, [sp, #40]	; 0x28
   18c3c:	str	ip, [sp, #12]
   18c40:	str	r4, [sp, #8]
   18c44:	ldr	ip, [sp, #36]	; 0x24
   18c48:	str	ip, [sp, #4]
   18c4c:	ldr	ip, [sp, #32]
   18c50:	str	ip, [sp]
   18c54:	bl	1869c <argp_error@@Base+0x700>
   18c58:	ldr	r3, [r4]
   18c5c:	str	r3, [r5]
   18c60:	ldr	r2, [r4, #12]
   18c64:	ldr	r3, [pc, #24]	; 18c84 <argp_error@@Base+0xce8>
   18c68:	str	r2, [r3]
   18c6c:	ldr	r3, [r4, #8]
   18c70:	str	r3, [r5, #8]
   18c74:	add	sp, sp, #20
   18c78:	pop	{r4, r5, pc}
   18c7c:	andeq	fp, r2, r0, lsl r5
   18c80:	andeq	fp, r2, r4, asr #9
   18c84:	andeq	fp, r2, r8, asr #10
   18c88:	push	{lr}		; (str lr, [sp, #-4]!)
   18c8c:	sub	sp, sp, #20
   18c90:	mov	r3, #1
   18c94:	str	r3, [sp, #8]
   18c98:	mov	r3, #0
   18c9c:	str	r3, [sp, #4]
   18ca0:	str	r3, [sp]
   18ca4:	bl	18c18 <argp_error@@Base+0xc7c>
   18ca8:	add	sp, sp, #20
   18cac:	pop	{pc}		; (ldr pc, [sp], #4)
   18cb0:	push	{r4, r5, r6, lr}
   18cb4:	mov	r6, r0
   18cb8:	mov	r5, r1
   18cbc:	subs	r4, r2, #0
   18cc0:	beq	18cec <argp_error@@Base+0xd50>
   18cc4:	mov	r1, r4
   18cc8:	mvn	r0, #0
   18ccc:	bl	19488 <argp_error@@Base+0x14ec>
   18cd0:	cmp	r0, r5
   18cd4:	bcs	18cec <argp_error@@Base+0xd50>
   18cd8:	bl	117f0 <__errno_location@plt>
   18cdc:	mov	r3, #12
   18ce0:	str	r3, [r0]
   18ce4:	mov	r0, #0
   18ce8:	pop	{r4, r5, r6, pc}
   18cec:	mul	r1, r5, r4
   18cf0:	mov	r0, r6
   18cf4:	bl	14ecc <argp_parse@@Base+0x185c>
   18cf8:	pop	{r4, r5, r6, pc}
   18cfc:	push	{r4, r5, r6, r7, r8, lr}
   18d00:	mov	r8, r0
   18d04:	mov	r7, r1
   18d08:	mov	r6, r2
   18d0c:	mov	r5, r3
   18d10:	mov	r0, #36	; 0x24
   18d14:	bl	14e9c <argp_parse@@Base+0x182c>
   18d18:	subs	r4, r0, #0
   18d1c:	beq	18d5c <argp_error@@Base+0xdc0>
   18d20:	str	r8, [r4]
   18d24:	str	r7, [r4, #4]
   18d28:	str	r6, [r4, #8]
   18d2c:	str	r5, [r4, #12]
   18d30:	mov	r3, #0
   18d34:	str	r3, [r4, #20]
   18d38:	str	r3, [r4, #16]
   18d3c:	mov	r0, #200	; 0xc8
   18d40:	bl	14e9c <argp_parse@@Base+0x182c>
   18d44:	str	r0, [r4, #24]
   18d48:	cmp	r0, #0
   18d4c:	strne	r0, [r4, #28]
   18d50:	addne	r0, r0, #200	; 0xc8
   18d54:	strne	r0, [r4, #32]
   18d58:	beq	18d64 <argp_error@@Base+0xdc8>
   18d5c:	mov	r0, r4
   18d60:	pop	{r4, r5, r6, r7, r8, pc}
   18d64:	mov	r0, r4
   18d68:	bl	14264 <argp_parse@@Base+0xbf4>
   18d6c:	mov	r4, #0
   18d70:	b	18d5c <argp_error@@Base+0xdc0>
   18d74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d78:	sub	sp, sp, #20
   18d7c:	mov	r4, r0
   18d80:	ldr	r2, [r0, #24]
   18d84:	ldr	r3, [r0, #16]
   18d88:	add	r9, r2, r3
   18d8c:	mov	sl, #32
   18d90:	b	18e3c <argp_error@@Base+0xea0>
   18d94:	add	r5, r5, #1
   18d98:	cmp	r6, r5
   18d9c:	beq	18dcc <argp_error@@Base+0xe30>
   18da0:	ldr	r0, [r4]
   18da4:	ldr	r3, [r0, #20]
   18da8:	ldr	r2, [r0, #24]
   18dac:	cmp	r3, r2
   18db0:	addcc	r2, r3, #1
   18db4:	strcc	r2, [r0, #20]
   18db8:	strbcc	sl, [r3]
   18dbc:	bcc	18d94 <argp_error@@Base+0xdf8>
   18dc0:	mov	r1, sl
   18dc4:	bl	11868 <__overflow@plt>
   18dc8:	b	18d94 <argp_error@@Base+0xdf8>
   18dcc:	str	r6, [r4, #20]
   18dd0:	ldr	fp, [r4, #28]
   18dd4:	str	fp, [sp, #8]
   18dd8:	str	r9, [sp, #4]
   18ddc:	sub	r3, fp, r9
   18de0:	str	r3, [sp]
   18de4:	mov	r2, r3
   18de8:	mov	r1, #10
   18dec:	mov	r0, r9
   18df0:	bl	1182c <memchr@plt>
   18df4:	mov	r7, r0
   18df8:	ldr	r3, [r4, #20]
   18dfc:	cmp	r3, #0
   18e00:	movlt	r3, #0
   18e04:	strlt	r3, [r4, #20]
   18e08:	cmp	r7, #0
   18e0c:	beq	18eac <argp_error@@Base+0xf10>
   18e10:	ldr	r0, [r4, #20]
   18e14:	mov	r5, r7
   18e18:	ldr	r8, [r4, #8]
   18e1c:	ldr	r3, [sp, #4]
   18e20:	sub	r3, r7, r3
   18e24:	add	r3, r3, r0
   18e28:	cmp	r3, r8
   18e2c:	bge	18efc <argp_error@@Base+0xf60>
   18e30:	mov	r3, #0
   18e34:	str	r3, [r4, #20]
   18e38:	add	r9, r7, #1
   18e3c:	ldr	fp, [r4, #28]
   18e40:	cmp	r9, fp
   18e44:	bcs	18ee4 <argp_error@@Base+0xf48>
   18e48:	ldr	r3, [r4, #20]
   18e4c:	cmp	r3, #0
   18e50:	bne	18dd0 <argp_error@@Base+0xe34>
   18e54:	ldr	r6, [r4, #4]
   18e58:	cmp	r6, #0
   18e5c:	beq	192a8 <argp_error@@Base+0x130c>
   18e60:	add	r3, fp, r6
   18e64:	ldr	r2, [r4, #32]
   18e68:	cmp	r2, r3
   18e6c:	movls	r5, #0
   18e70:	bls	18da0 <argp_error@@Base+0xe04>
   18e74:	add	r5, r9, r6
   18e78:	sub	r2, fp, r9
   18e7c:	mov	r1, r9
   18e80:	mov	r0, r5
   18e84:	bl	115c8 <memmove@plt>
   18e88:	ldr	r3, [r4, #28]
   18e8c:	add	r3, r3, r6
   18e90:	str	r3, [r4, #28]
   18e94:	mov	r2, r6
   18e98:	mov	r1, sl
   18e9c:	mov	r0, r9
   18ea0:	bl	11808 <memset@plt>
   18ea4:	mov	r9, r5
   18ea8:	b	18dcc <argp_error@@Base+0xe30>
   18eac:	ldr	r3, [r4, #20]
   18eb0:	ldr	r2, [sp]
   18eb4:	add	r3, r2, r3
   18eb8:	ldr	r6, [r4, #8]
   18ebc:	cmp	r3, r6
   18ec0:	bcc	18ee0 <argp_error@@Base+0xf44>
   18ec4:	sub	r6, r6, #1
   18ec8:	ldr	r3, [r4, #12]
   18ecc:	str	r3, [sp, #12]
   18ed0:	cmp	r3, #0
   18ed4:	blt	18ff0 <argp_error@@Base+0x1054>
   18ed8:	mov	r7, fp
   18edc:	b	18f10 <argp_error@@Base+0xf74>
   18ee0:	str	r3, [r4, #20]
   18ee4:	ldr	r3, [r4, #28]
   18ee8:	ldr	r2, [r4, #24]
   18eec:	sub	r3, r3, r2
   18ef0:	str	r3, [r4, #16]
   18ef4:	add	sp, sp, #20
   18ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18efc:	sub	r6, r8, #1
   18f00:	ldr	r3, [r4, #12]
   18f04:	str	r3, [sp, #12]
   18f08:	cmp	r3, #0
   18f0c:	blt	18fa4 <argp_error@@Base+0x1008>
   18f10:	ldr	r5, [r4, #20]
   18f14:	rsb	r5, r5, #1
   18f18:	add	r5, r5, r6
   18f1c:	adds	r5, r9, r5
   18f20:	bcs	192d0 <argp_error@@Base+0x1334>
   18f24:	bl	11784 <__ctype_b_loc@plt>
   18f28:	ldr	r0, [r0]
   18f2c:	mov	r3, r5
   18f30:	mov	r1, r3
   18f34:	sub	r3, r3, #1
   18f38:	ldrb	r2, [r1]
   18f3c:	lsl	r2, r2, #1
   18f40:	ldrh	r2, [r0, r2]
   18f44:	tst	r2, #1
   18f48:	bne	19010 <argp_error@@Base+0x1074>
   18f4c:	mov	r1, r3
   18f50:	cmp	r3, r9
   18f54:	bcs	18f30 <argp_error@@Base+0xf94>
   18f58:	add	r6, r1, #1
   18f5c:	cmp	r6, r9
   18f60:	bhi	1904c <argp_error@@Base+0x10b0>
   18f64:	cmp	r5, r7
   18f68:	bcs	190fc <argp_error@@Base+0x1160>
   18f6c:	add	r6, r5, #1
   18f70:	mov	r8, r7
   18f74:	mov	r5, r6
   18f78:	cmp	r8, r6
   18f7c:	beq	190fc <argp_error@@Base+0x1160>
   18f80:	bl	11784 <__ctype_b_loc@plt>
   18f84:	add	r6, r6, #1
   18f88:	ldrb	r3, [r5]
   18f8c:	ldr	r2, [r0]
   18f90:	lsl	r3, r3, #1
   18f94:	ldrh	r3, [r2, r3]
   18f98:	tst	r3, #1
   18f9c:	beq	18f74 <argp_error@@Base+0xfd8>
   18fa0:	b	19110 <argp_error@@Base+0x1174>
   18fa4:	cmp	fp, r7
   18fa8:	bls	18ff0 <argp_error@@Base+0x1054>
   18fac:	sub	r0, r6, r0
   18fb0:	ldr	r3, [sp, #8]
   18fb4:	sub	r2, r3, r7
   18fb8:	mov	r1, r7
   18fbc:	add	r0, r9, r0
   18fc0:	bl	115c8 <memmove@plt>
   18fc4:	ldr	r3, [r4, #20]
   18fc8:	sub	r6, r6, r3
   18fcc:	add	r6, r9, r6
   18fd0:	sub	r5, r6, r7
   18fd4:	ldr	r3, [r4, #28]
   18fd8:	sub	r5, r3, r5
   18fdc:	str	r5, [r4, #28]
   18fe0:	mov	r3, #0
   18fe4:	str	r3, [r4, #20]
   18fe8:	add	r9, r9, r8
   18fec:	b	18e3c <argp_error@@Base+0xea0>
   18ff0:	ldr	r3, [r4, #20]
   18ff4:	ldr	r2, [sp]
   18ff8:	add	r3, r2, r3
   18ffc:	str	r3, [r4, #20]
   19000:	sub	r3, r6, r3
   19004:	add	r3, fp, r3
   19008:	str	r3, [r4, #28]
   1900c:	b	18ee4 <argp_error@@Base+0xf48>
   19010:	add	r6, r1, #1
   19014:	cmp	r6, r9
   19018:	bls	18f64 <argp_error@@Base+0xfc8>
   1901c:	cmp	r1, r9
   19020:	bcc	1904c <argp_error@@Base+0x10b0>
   19024:	sub	ip, r9, #1
   19028:	mov	r1, r3
   1902c:	cmp	ip, r3
   19030:	beq	1904c <argp_error@@Base+0x10b0>
   19034:	sub	r3, r3, #1
   19038:	ldrb	r2, [r1]
   1903c:	lsl	r2, r2, #1
   19040:	ldrh	r2, [r0, r2]
   19044:	tst	r2, #1
   19048:	bne	19028 <argp_error@@Base+0x108c>
   1904c:	add	r5, r1, #1
   19050:	ldr	r3, [sp]
   19054:	add	r3, r3, #1
   19058:	add	r3, r9, r3
   1905c:	cmp	r6, r3
   19060:	beq	19134 <argp_error@@Base+0x1198>
   19064:	add	r3, r5, #1
   19068:	sub	r3, r6, r3
   1906c:	ldr	r2, [sp, #12]
   19070:	cmp	r3, r2
   19074:	bge	1914c <argp_error@@Base+0x11b0>
   19078:	cmp	r6, fp
   1907c:	bcs	1914c <argp_error@@Base+0x11b0>
   19080:	ldr	r3, [r4, #32]
   19084:	ldr	r2, [sp, #8]
   19088:	sub	r3, r3, r2
   1908c:	ldr	r2, [sp, #12]
   19090:	add	r2, r2, #1
   19094:	cmp	r3, r2
   19098:	bgt	19194 <argp_error@@Base+0x11f8>
   1909c:	ldr	r0, [r4, #24]
   190a0:	cmp	r5, r0
   190a4:	bls	190b8 <argp_error@@Base+0x111c>
   190a8:	ldr	r3, [r4]
   190ac:	sub	r2, r5, r0
   190b0:	mov	r1, #1
   190b4:	bl	11634 <fwrite_unlocked@plt>
   190b8:	ldr	r0, [r4]
   190bc:	ldr	r3, [r0, #20]
   190c0:	ldr	r2, [r0, #24]
   190c4:	cmp	r3, r2
   190c8:	addcc	r2, r3, #1
   190cc:	strcc	r2, [r0, #20]
   190d0:	movcc	r2, #10
   190d4:	strbcc	r2, [r3]
   190d8:	bcs	191e0 <argp_error@@Base+0x1244>
   190dc:	ldr	r7, [r4, #24]
   190e0:	ldr	r3, [sp, #4]
   190e4:	sub	r3, r3, r7
   190e8:	ldr	r2, [sp]
   190ec:	add	r3, r2, r3
   190f0:	str	r3, [sp]
   190f4:	mov	r9, r7
   190f8:	b	1915c <argp_error@@Base+0x11c0>
   190fc:	cmp	r5, r7
   19100:	moveq	r3, #0
   19104:	streq	r3, [r4, #20]
   19108:	addeq	r9, r7, #1
   1910c:	beq	18e3c <argp_error@@Base+0xea0>
   19110:	bl	11784 <__ctype_b_loc@plt>
   19114:	ldr	r2, [r0]
   19118:	mov	r6, r5
   1911c:	ldrb	r3, [r6, #1]!
   19120:	lsl	r3, r3, #1
   19124:	ldrh	r3, [r2, r3]
   19128:	tst	r3, #1
   1912c:	bne	1911c <argp_error@@Base+0x1180>
   19130:	b	19050 <argp_error@@Base+0x10b4>
   19134:	ldr	r3, [r4, #32]
   19138:	sub	r3, r3, r5
   1913c:	ldr	r2, [sp, #12]
   19140:	add	r2, r2, #1
   19144:	cmp	r3, r2
   19148:	blt	19078 <argp_error@@Base+0x10dc>
   1914c:	mov	r3, #10
   19150:	strb	r3, [r5]
   19154:	mov	r7, r9
   19158:	add	r9, r5, #1
   1915c:	mov	r8, r6
   19160:	ldr	r3, [r4, #12]
   19164:	sub	r2, r6, r9
   19168:	cmp	r2, r3
   1916c:	bge	191fc <argp_error@@Base+0x1260>
   19170:	ldr	r2, [sp]
   19174:	add	r2, r2, #1
   19178:	add	r2, r7, r2
   1917c:	cmp	r6, r2
   19180:	beq	191ec <argp_error@@Base+0x1250>
   19184:	cmp	r3, #0
   19188:	movgt	r5, #0
   1918c:	bgt	19260 <argp_error@@Base+0x12c4>
   19190:	b	19220 <argp_error@@Base+0x1284>
   19194:	ldr	r3, [sp, #8]
   19198:	sub	r7, r3, r6
   1919c:	mov	r0, r2
   191a0:	mov	r2, r7
   191a4:	mov	r1, r6
   191a8:	add	r0, r5, r0
   191ac:	bl	115c8 <memmove@plt>
   191b0:	ldr	r6, [r4, #12]
   191b4:	add	r6, r6, #1
   191b8:	add	r6, r5, r6
   191bc:	add	r7, r6, r7
   191c0:	ldr	r3, [sp, #4]
   191c4:	sub	r3, r7, r3
   191c8:	str	r3, [sp]
   191cc:	mov	r3, #10
   191d0:	strb	r3, [r5]
   191d4:	mov	r7, r9
   191d8:	add	r9, r5, #1
   191dc:	b	1915c <argp_error@@Base+0x11c0>
   191e0:	mov	r1, #10
   191e4:	bl	11868 <__overflow@plt>
   191e8:	b	190dc <argp_error@@Base+0x1140>
   191ec:	ldr	r2, [r4, #32]
   191f0:	sub	r2, r2, r6
   191f4:	cmp	r3, r2
   191f8:	bgt	19184 <argp_error@@Base+0x11e8>
   191fc:	cmp	r3, #0
   19200:	ble	19220 <argp_error@@Base+0x1284>
   19204:	mov	r3, r9
   19208:	strb	sl, [r3], #1
   1920c:	sub	r1, r3, r9
   19210:	ldr	r2, [r4, #12]
   19214:	cmp	r1, r2
   19218:	blt	19208 <argp_error@@Base+0x126c>
   1921c:	mov	r9, r3
   19220:	cmp	r9, r6
   19224:	bcc	1928c <argp_error@@Base+0x12f0>
   19228:	sub	r7, r8, r7
   1922c:	ldr	r3, [sp]
   19230:	sub	r7, r3, r7
   19234:	add	r7, r9, r7
   19238:	str	r7, [r4, #28]
   1923c:	ldr	r3, [r4, #12]
   19240:	cmp	r3, #0
   19244:	mvneq	r3, #0
   19248:	str	r3, [r4, #20]
   1924c:	b	18e3c <argp_error@@Base+0xea0>
   19250:	add	r5, r5, #1
   19254:	ldr	r3, [r4, #12]
   19258:	cmp	r3, r5
   1925c:	ble	19220 <argp_error@@Base+0x1284>
   19260:	ldr	r0, [r4]
   19264:	ldr	r3, [r0, #20]
   19268:	ldr	r2, [r0, #24]
   1926c:	cmp	r3, r2
   19270:	addcc	r2, r3, #1
   19274:	strcc	r2, [r0, #20]
   19278:	strbcc	sl, [r3]
   1927c:	bcc	19250 <argp_error@@Base+0x12b4>
   19280:	mov	r1, sl
   19284:	bl	11868 <__overflow@plt>
   19288:	b	19250 <argp_error@@Base+0x12b4>
   1928c:	ldr	r3, [sp]
   19290:	add	r2, r7, r3
   19294:	sub	r2, r2, r8
   19298:	mov	r1, r6
   1929c:	mov	r0, r9
   192a0:	bl	115c8 <memmove@plt>
   192a4:	b	19228 <argp_error@@Base+0x128c>
   192a8:	str	fp, [sp, #8]
   192ac:	str	r9, [sp, #4]
   192b0:	sub	r3, fp, r9
   192b4:	str	r3, [sp]
   192b8:	mov	r2, r3
   192bc:	mov	r1, #10
   192c0:	mov	r0, r9
   192c4:	bl	1182c <memchr@plt>
   192c8:	mov	r7, r0
   192cc:	b	18e08 <argp_error@@Base+0xe6c>
   192d0:	mov	r1, r5
   192d4:	b	18f58 <argp_error@@Base+0xfbc>
   192d8:	push	{r4, lr}
   192dc:	mov	r4, r0
   192e0:	bl	18d74 <argp_error@@Base+0xdd8>
   192e4:	ldr	r2, [r4, #28]
   192e8:	ldr	r0, [r4, #24]
   192ec:	cmp	r2, r0
   192f0:	bls	19304 <argp_error@@Base+0x1368>
   192f4:	ldr	r3, [r4]
   192f8:	sub	r2, r2, r0
   192fc:	mov	r1, #1
   19300:	bl	11634 <fwrite_unlocked@plt>
   19304:	ldr	r0, [r4, #24]
   19308:	bl	14264 <argp_parse@@Base+0xbf4>
   1930c:	mov	r0, r4
   19310:	bl	14264 <argp_parse@@Base+0xbf4>
   19314:	pop	{r4, pc}
   19318:	ldr	r3, [r0, #32]
   1931c:	ldr	r2, [r0, #28]
   19320:	sub	r3, r3, r2
   19324:	cmp	r3, r1
   19328:	bcc	19334 <argp_error@@Base+0x1398>
   1932c:	mov	r0, #1
   19330:	bx	lr
   19334:	push	{r4, r5, r6, lr}
   19338:	mov	r5, r1
   1933c:	mov	r4, r0
   19340:	bl	18d74 <argp_error@@Base+0xdd8>
   19344:	ldr	r0, [r4, #24]
   19348:	ldr	r2, [r4, #28]
   1934c:	ldr	r3, [r4]
   19350:	sub	r2, r2, r0
   19354:	mov	r1, #1
   19358:	bl	11634 <fwrite_unlocked@plt>
   1935c:	ldr	r2, [r4, #28]
   19360:	ldr	r3, [r4, #24]
   19364:	sub	r1, r2, r3
   19368:	cmp	r0, r1
   1936c:	bne	193b0 <argp_error@@Base+0x1414>
   19370:	str	r3, [r4, #28]
   19374:	mov	r2, #0
   19378:	str	r2, [r4, #16]
   1937c:	ldr	r1, [r4, #32]
   19380:	sub	r1, r1, r3
   19384:	cmp	r5, r1
   19388:	bls	193a8 <argp_error@@Base+0x140c>
   1938c:	adds	r5, r5, r1
   19390:	bcc	193dc <argp_error@@Base+0x1440>
   19394:	bl	117f0 <__errno_location@plt>
   19398:	mov	r3, #12
   1939c:	str	r3, [r0]
   193a0:	mov	r0, #0
   193a4:	pop	{r4, r5, r6, pc}
   193a8:	mov	r0, #1
   193ac:	pop	{r4, r5, r6, pc}
   193b0:	sub	r2, r2, r0
   193b4:	str	r2, [r4, #28]
   193b8:	ldr	r1, [r4, #16]
   193bc:	sub	r1, r1, r0
   193c0:	str	r1, [r4, #16]
   193c4:	sub	r2, r2, r3
   193c8:	add	r1, r3, r0
   193cc:	mov	r0, r3
   193d0:	bl	115c8 <memmove@plt>
   193d4:	mov	r0, #0
   193d8:	pop	{r4, r5, r6, pc}
   193dc:	mov	r1, r5
   193e0:	mov	r0, r3
   193e4:	bl	14ecc <argp_parse@@Base+0x185c>
   193e8:	cmp	r0, #0
   193ec:	beq	19394 <argp_error@@Base+0x13f8>
   193f0:	str	r0, [r4, #24]
   193f4:	add	r5, r0, r5
   193f8:	str	r5, [r4, #32]
   193fc:	str	r0, [r4, #28]
   19400:	mov	r0, #1
   19404:	pop	{r4, r5, r6, pc}
   19408:	push	{r1, r2, r3}
   1940c:	push	{r4, r5, r6, r7, lr}
   19410:	sub	sp, sp, #8
   19414:	mov	r5, r0
   19418:	ldr	r7, [sp, #28]
   1941c:	mov	r1, #150	; 0x96
   19420:	add	r6, sp, #32
   19424:	mov	r0, r5
   19428:	bl	19318 <argp_error@@Base+0x137c>
   1942c:	cmp	r0, #0
   19430:	beq	19464 <argp_error@@Base+0x14c8>
   19434:	str	r6, [sp, #4]
   19438:	ldr	r0, [r5, #28]
   1943c:	ldr	r4, [r5, #32]
   19440:	sub	r4, r4, r0
   19444:	mov	r3, r6
   19448:	mov	r2, r7
   1944c:	mov	r1, r4
   19450:	bl	11910 <vsnprintf@plt>
   19454:	cmp	r4, r0
   19458:	bhi	1946c <argp_error@@Base+0x14d0>
   1945c:	add	r1, r0, #1
   19460:	b	19424 <argp_error@@Base+0x1488>
   19464:	mvn	r0, #0
   19468:	b	19478 <argp_error@@Base+0x14dc>
   1946c:	ldr	r3, [r5, #28]
   19470:	add	r3, r3, r0
   19474:	str	r3, [r5, #28]
   19478:	add	sp, sp, #8
   1947c:	pop	{r4, r5, r6, r7, lr}
   19480:	add	sp, sp, #12
   19484:	bx	lr
   19488:	subs	r2, r1, #1
   1948c:	bxeq	lr
   19490:	bcc	19668 <argp_error@@Base+0x16cc>
   19494:	cmp	r0, r1
   19498:	bls	1964c <argp_error@@Base+0x16b0>
   1949c:	tst	r1, r2
   194a0:	beq	19658 <argp_error@@Base+0x16bc>
   194a4:	clz	r3, r0
   194a8:	clz	r2, r1
   194ac:	sub	r3, r2, r3
   194b0:	rsbs	r3, r3, #31
   194b4:	addne	r3, r3, r3, lsl #1
   194b8:	mov	r2, #0
   194bc:	addne	pc, pc, r3, lsl #2
   194c0:	nop			; (mov r0, r0)
   194c4:	cmp	r0, r1, lsl #31
   194c8:	adc	r2, r2, r2
   194cc:	subcs	r0, r0, r1, lsl #31
   194d0:	cmp	r0, r1, lsl #30
   194d4:	adc	r2, r2, r2
   194d8:	subcs	r0, r0, r1, lsl #30
   194dc:	cmp	r0, r1, lsl #29
   194e0:	adc	r2, r2, r2
   194e4:	subcs	r0, r0, r1, lsl #29
   194e8:	cmp	r0, r1, lsl #28
   194ec:	adc	r2, r2, r2
   194f0:	subcs	r0, r0, r1, lsl #28
   194f4:	cmp	r0, r1, lsl #27
   194f8:	adc	r2, r2, r2
   194fc:	subcs	r0, r0, r1, lsl #27
   19500:	cmp	r0, r1, lsl #26
   19504:	adc	r2, r2, r2
   19508:	subcs	r0, r0, r1, lsl #26
   1950c:	cmp	r0, r1, lsl #25
   19510:	adc	r2, r2, r2
   19514:	subcs	r0, r0, r1, lsl #25
   19518:	cmp	r0, r1, lsl #24
   1951c:	adc	r2, r2, r2
   19520:	subcs	r0, r0, r1, lsl #24
   19524:	cmp	r0, r1, lsl #23
   19528:	adc	r2, r2, r2
   1952c:	subcs	r0, r0, r1, lsl #23
   19530:	cmp	r0, r1, lsl #22
   19534:	adc	r2, r2, r2
   19538:	subcs	r0, r0, r1, lsl #22
   1953c:	cmp	r0, r1, lsl #21
   19540:	adc	r2, r2, r2
   19544:	subcs	r0, r0, r1, lsl #21
   19548:	cmp	r0, r1, lsl #20
   1954c:	adc	r2, r2, r2
   19550:	subcs	r0, r0, r1, lsl #20
   19554:	cmp	r0, r1, lsl #19
   19558:	adc	r2, r2, r2
   1955c:	subcs	r0, r0, r1, lsl #19
   19560:	cmp	r0, r1, lsl #18
   19564:	adc	r2, r2, r2
   19568:	subcs	r0, r0, r1, lsl #18
   1956c:	cmp	r0, r1, lsl #17
   19570:	adc	r2, r2, r2
   19574:	subcs	r0, r0, r1, lsl #17
   19578:	cmp	r0, r1, lsl #16
   1957c:	adc	r2, r2, r2
   19580:	subcs	r0, r0, r1, lsl #16
   19584:	cmp	r0, r1, lsl #15
   19588:	adc	r2, r2, r2
   1958c:	subcs	r0, r0, r1, lsl #15
   19590:	cmp	r0, r1, lsl #14
   19594:	adc	r2, r2, r2
   19598:	subcs	r0, r0, r1, lsl #14
   1959c:	cmp	r0, r1, lsl #13
   195a0:	adc	r2, r2, r2
   195a4:	subcs	r0, r0, r1, lsl #13
   195a8:	cmp	r0, r1, lsl #12
   195ac:	adc	r2, r2, r2
   195b0:	subcs	r0, r0, r1, lsl #12
   195b4:	cmp	r0, r1, lsl #11
   195b8:	adc	r2, r2, r2
   195bc:	subcs	r0, r0, r1, lsl #11
   195c0:	cmp	r0, r1, lsl #10
   195c4:	adc	r2, r2, r2
   195c8:	subcs	r0, r0, r1, lsl #10
   195cc:	cmp	r0, r1, lsl #9
   195d0:	adc	r2, r2, r2
   195d4:	subcs	r0, r0, r1, lsl #9
   195d8:	cmp	r0, r1, lsl #8
   195dc:	adc	r2, r2, r2
   195e0:	subcs	r0, r0, r1, lsl #8
   195e4:	cmp	r0, r1, lsl #7
   195e8:	adc	r2, r2, r2
   195ec:	subcs	r0, r0, r1, lsl #7
   195f0:	cmp	r0, r1, lsl #6
   195f4:	adc	r2, r2, r2
   195f8:	subcs	r0, r0, r1, lsl #6
   195fc:	cmp	r0, r1, lsl #5
   19600:	adc	r2, r2, r2
   19604:	subcs	r0, r0, r1, lsl #5
   19608:	cmp	r0, r1, lsl #4
   1960c:	adc	r2, r2, r2
   19610:	subcs	r0, r0, r1, lsl #4
   19614:	cmp	r0, r1, lsl #3
   19618:	adc	r2, r2, r2
   1961c:	subcs	r0, r0, r1, lsl #3
   19620:	cmp	r0, r1, lsl #2
   19624:	adc	r2, r2, r2
   19628:	subcs	r0, r0, r1, lsl #2
   1962c:	cmp	r0, r1, lsl #1
   19630:	adc	r2, r2, r2
   19634:	subcs	r0, r0, r1, lsl #1
   19638:	cmp	r0, r1
   1963c:	adc	r2, r2, r2
   19640:	subcs	r0, r0, r1
   19644:	mov	r0, r2
   19648:	bx	lr
   1964c:	moveq	r0, #1
   19650:	movne	r0, #0
   19654:	bx	lr
   19658:	clz	r2, r1
   1965c:	rsb	r2, r2, #31
   19660:	lsr	r0, r0, r2
   19664:	bx	lr
   19668:	cmp	r0, #0
   1966c:	mvnne	r0, #0
   19670:	b	198d4 <argp_error@@Base+0x1938>
   19674:	cmp	r1, #0
   19678:	beq	19668 <argp_error@@Base+0x16cc>
   1967c:	push	{r0, r1, lr}
   19680:	bl	19488 <argp_error@@Base+0x14ec>
   19684:	pop	{r1, r2, lr}
   19688:	mul	r3, r2, r0
   1968c:	sub	r1, r1, r3
   19690:	bx	lr
   19694:	cmp	r1, #0
   19698:	beq	198a4 <argp_error@@Base+0x1908>
   1969c:	eor	ip, r0, r1
   196a0:	rsbmi	r1, r1, #0
   196a4:	subs	r2, r1, #1
   196a8:	beq	19870 <argp_error@@Base+0x18d4>
   196ac:	movs	r3, r0
   196b0:	rsbmi	r3, r0, #0
   196b4:	cmp	r3, r1
   196b8:	bls	1987c <argp_error@@Base+0x18e0>
   196bc:	tst	r1, r2
   196c0:	beq	1988c <argp_error@@Base+0x18f0>
   196c4:	clz	r2, r3
   196c8:	clz	r0, r1
   196cc:	sub	r2, r0, r2
   196d0:	rsbs	r2, r2, #31
   196d4:	addne	r2, r2, r2, lsl #1
   196d8:	mov	r0, #0
   196dc:	addne	pc, pc, r2, lsl #2
   196e0:	nop			; (mov r0, r0)
   196e4:	cmp	r3, r1, lsl #31
   196e8:	adc	r0, r0, r0
   196ec:	subcs	r3, r3, r1, lsl #31
   196f0:	cmp	r3, r1, lsl #30
   196f4:	adc	r0, r0, r0
   196f8:	subcs	r3, r3, r1, lsl #30
   196fc:	cmp	r3, r1, lsl #29
   19700:	adc	r0, r0, r0
   19704:	subcs	r3, r3, r1, lsl #29
   19708:	cmp	r3, r1, lsl #28
   1970c:	adc	r0, r0, r0
   19710:	subcs	r3, r3, r1, lsl #28
   19714:	cmp	r3, r1, lsl #27
   19718:	adc	r0, r0, r0
   1971c:	subcs	r3, r3, r1, lsl #27
   19720:	cmp	r3, r1, lsl #26
   19724:	adc	r0, r0, r0
   19728:	subcs	r3, r3, r1, lsl #26
   1972c:	cmp	r3, r1, lsl #25
   19730:	adc	r0, r0, r0
   19734:	subcs	r3, r3, r1, lsl #25
   19738:	cmp	r3, r1, lsl #24
   1973c:	adc	r0, r0, r0
   19740:	subcs	r3, r3, r1, lsl #24
   19744:	cmp	r3, r1, lsl #23
   19748:	adc	r0, r0, r0
   1974c:	subcs	r3, r3, r1, lsl #23
   19750:	cmp	r3, r1, lsl #22
   19754:	adc	r0, r0, r0
   19758:	subcs	r3, r3, r1, lsl #22
   1975c:	cmp	r3, r1, lsl #21
   19760:	adc	r0, r0, r0
   19764:	subcs	r3, r3, r1, lsl #21
   19768:	cmp	r3, r1, lsl #20
   1976c:	adc	r0, r0, r0
   19770:	subcs	r3, r3, r1, lsl #20
   19774:	cmp	r3, r1, lsl #19
   19778:	adc	r0, r0, r0
   1977c:	subcs	r3, r3, r1, lsl #19
   19780:	cmp	r3, r1, lsl #18
   19784:	adc	r0, r0, r0
   19788:	subcs	r3, r3, r1, lsl #18
   1978c:	cmp	r3, r1, lsl #17
   19790:	adc	r0, r0, r0
   19794:	subcs	r3, r3, r1, lsl #17
   19798:	cmp	r3, r1, lsl #16
   1979c:	adc	r0, r0, r0
   197a0:	subcs	r3, r3, r1, lsl #16
   197a4:	cmp	r3, r1, lsl #15
   197a8:	adc	r0, r0, r0
   197ac:	subcs	r3, r3, r1, lsl #15
   197b0:	cmp	r3, r1, lsl #14
   197b4:	adc	r0, r0, r0
   197b8:	subcs	r3, r3, r1, lsl #14
   197bc:	cmp	r3, r1, lsl #13
   197c0:	adc	r0, r0, r0
   197c4:	subcs	r3, r3, r1, lsl #13
   197c8:	cmp	r3, r1, lsl #12
   197cc:	adc	r0, r0, r0
   197d0:	subcs	r3, r3, r1, lsl #12
   197d4:	cmp	r3, r1, lsl #11
   197d8:	adc	r0, r0, r0
   197dc:	subcs	r3, r3, r1, lsl #11
   197e0:	cmp	r3, r1, lsl #10
   197e4:	adc	r0, r0, r0
   197e8:	subcs	r3, r3, r1, lsl #10
   197ec:	cmp	r3, r1, lsl #9
   197f0:	adc	r0, r0, r0
   197f4:	subcs	r3, r3, r1, lsl #9
   197f8:	cmp	r3, r1, lsl #8
   197fc:	adc	r0, r0, r0
   19800:	subcs	r3, r3, r1, lsl #8
   19804:	cmp	r3, r1, lsl #7
   19808:	adc	r0, r0, r0
   1980c:	subcs	r3, r3, r1, lsl #7
   19810:	cmp	r3, r1, lsl #6
   19814:	adc	r0, r0, r0
   19818:	subcs	r3, r3, r1, lsl #6
   1981c:	cmp	r3, r1, lsl #5
   19820:	adc	r0, r0, r0
   19824:	subcs	r3, r3, r1, lsl #5
   19828:	cmp	r3, r1, lsl #4
   1982c:	adc	r0, r0, r0
   19830:	subcs	r3, r3, r1, lsl #4
   19834:	cmp	r3, r1, lsl #3
   19838:	adc	r0, r0, r0
   1983c:	subcs	r3, r3, r1, lsl #3
   19840:	cmp	r3, r1, lsl #2
   19844:	adc	r0, r0, r0
   19848:	subcs	r3, r3, r1, lsl #2
   1984c:	cmp	r3, r1, lsl #1
   19850:	adc	r0, r0, r0
   19854:	subcs	r3, r3, r1, lsl #1
   19858:	cmp	r3, r1
   1985c:	adc	r0, r0, r0
   19860:	subcs	r3, r3, r1
   19864:	cmp	ip, #0
   19868:	rsbmi	r0, r0, #0
   1986c:	bx	lr
   19870:	teq	ip, r0
   19874:	rsbmi	r0, r0, #0
   19878:	bx	lr
   1987c:	movcc	r0, #0
   19880:	asreq	r0, ip, #31
   19884:	orreq	r0, r0, #1
   19888:	bx	lr
   1988c:	clz	r2, r1
   19890:	rsb	r2, r2, #31
   19894:	cmp	ip, #0
   19898:	lsr	r0, r3, r2
   1989c:	rsbmi	r0, r0, #0
   198a0:	bx	lr
   198a4:	cmp	r0, #0
   198a8:	mvngt	r0, #-2147483648	; 0x80000000
   198ac:	movlt	r0, #-2147483648	; 0x80000000
   198b0:	b	198d4 <argp_error@@Base+0x1938>
   198b4:	cmp	r1, #0
   198b8:	beq	198a4 <argp_error@@Base+0x1908>
   198bc:	push	{r0, r1, lr}
   198c0:	bl	1969c <argp_error@@Base+0x1700>
   198c4:	pop	{r1, r2, lr}
   198c8:	mul	r3, r2, r0
   198cc:	sub	r1, r1, r3
   198d0:	bx	lr
   198d4:	push	{r1, lr}
   198d8:	mov	r0, #8
   198dc:	bl	11568 <raise@plt>
   198e0:	pop	{r1, pc}
   198e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   198e8:	mov	r7, r0
   198ec:	ldr	r6, [pc, #72]	; 1993c <argp_error@@Base+0x19a0>
   198f0:	ldr	r5, [pc, #72]	; 19940 <argp_error@@Base+0x19a4>
   198f4:	add	r6, pc, r6
   198f8:	add	r5, pc, r5
   198fc:	sub	r6, r6, r5
   19900:	mov	r8, r1
   19904:	mov	r9, r2
   19908:	bl	11530 <calloc@plt-0x20>
   1990c:	asrs	r6, r6, #2
   19910:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19914:	mov	r4, #0
   19918:	add	r4, r4, #1
   1991c:	ldr	r3, [r5], #4
   19920:	mov	r2, r9
   19924:	mov	r1, r8
   19928:	mov	r0, r7
   1992c:	blx	r3
   19930:	cmp	r6, r4
   19934:	bne	19918 <argp_error@@Base+0x197c>
   19938:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1993c:	andeq	r1, r1, ip, lsl #12
   19940:	andeq	r1, r1, r4, lsl #12
   19944:	bx	lr

Disassembly of section .fini:

00019948 <.fini>:
   19948:	push	{r3, lr}
   1994c:	pop	{r3, pc}
