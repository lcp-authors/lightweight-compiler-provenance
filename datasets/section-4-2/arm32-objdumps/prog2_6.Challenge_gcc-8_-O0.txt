
../repos/prog2/6.Challenge:     file format elf32-littlearm


Disassembly of section .init:

0001059c <.init>:
   1059c:	push	{r3, lr}
   105a0:	bl	1064c <_start@@Base+0x3c>
   105a4:	pop	{r3, pc}

Disassembly of section .plt:

000105a8 <printf@plt-0x14>:
   105a8:	push	{lr}		; (str lr, [sp, #-4]!)
   105ac:	ldr	lr, [pc, #4]	; 105b8 <printf@plt-0x4>
   105b0:	add	lr, pc, lr
   105b4:	ldr	pc, [lr, #8]!
   105b8:	andeq	r0, r1, r8, asr #20

000105bc <printf@plt>:
   105bc:	add	ip, pc, #0, 12
   105c0:	add	ip, ip, #16, 20	; 0x10000
   105c4:	ldr	pc, [ip, #2632]!	; 0xa48

000105c8 <malloc@plt>:
   105c8:	add	ip, pc, #0, 12
   105cc:	add	ip, ip, #16, 20	; 0x10000
   105d0:	ldr	pc, [ip, #2624]!	; 0xa40

000105d4 <__libc_start_main@plt>:
   105d4:	add	ip, pc, #0, 12
   105d8:	add	ip, ip, #16, 20	; 0x10000
   105dc:	ldr	pc, [ip, #2616]!	; 0xa38

000105e0 <__gmon_start__@plt>:
   105e0:	add	ip, pc, #0, 12
   105e4:	add	ip, ip, #16, 20	; 0x10000
   105e8:	ldr	pc, [ip, #2608]!	; 0xa30

000105ec <exit@plt>:
   105ec:	add	ip, pc, #0, 12
   105f0:	add	ip, ip, #16, 20	; 0x10000
   105f4:	ldr	pc, [ip, #2600]!	; 0xa28

000105f8 <__isoc99_scanf@plt>:
   105f8:	add	ip, pc, #0, 12
   105fc:	add	ip, ip, #16, 20	; 0x10000
   10600:	ldr	pc, [ip, #2592]!	; 0xa20

00010604 <abort@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #16, 20	; 0x10000
   1060c:	ldr	pc, [ip, #2584]!	; 0xa18

Disassembly of section .text:

00010610 <_start@@Base>:
   10610:	mov	fp, #0
   10614:	mov	lr, #0
   10618:	pop	{r1}		; (ldr r1, [sp], #4)
   1061c:	mov	r2, sp
   10620:	push	{r2}		; (str r2, [sp, #-4]!)
   10624:	push	{r0}		; (str r0, [sp, #-4]!)
   10628:	ldr	ip, [pc, #16]	; 10640 <_start@@Base+0x30>
   1062c:	push	{ip}		; (str ip, [sp, #-4]!)
   10630:	ldr	r0, [pc, #12]	; 10644 <_start@@Base+0x34>
   10634:	ldr	r3, [pc, #12]	; 10648 <_start@@Base+0x38>
   10638:	bl	105d4 <__libc_start_main@plt>
   1063c:	bl	10604 <abort@plt>
   10640:	andeq	r0, r1, r8, lsr r9
   10644:	andeq	r0, r1, r0, lsl #14
   10648:	ldrdeq	r0, [r1], -r8
   1064c:	ldr	r3, [pc, #20]	; 10668 <_start@@Base+0x58>
   10650:	ldr	r2, [pc, #20]	; 1066c <_start@@Base+0x5c>
   10654:	add	r3, pc, r3
   10658:	ldr	r2, [r3, r2]
   1065c:	cmp	r2, #0
   10660:	bxeq	lr
   10664:	b	105e0 <__gmon_start__@plt>
   10668:	andeq	r0, r1, r4, lsr #19
   1066c:	andeq	r0, r0, r8, lsr #32
   10670:	ldr	r0, [pc, #24]	; 10690 <_start@@Base+0x80>
   10674:	ldr	r3, [pc, #24]	; 10694 <_start@@Base+0x84>
   10678:	cmp	r3, r0
   1067c:	bxeq	lr
   10680:	ldr	r3, [pc, #16]	; 10698 <_start@@Base+0x88>
   10684:	cmp	r3, #0
   10688:	bxeq	lr
   1068c:	bx	r3
   10690:	andeq	r1, r2, r4, lsr r0
   10694:	andeq	r1, r2, r4, lsr r0
   10698:	andeq	r0, r0, r0
   1069c:	ldr	r0, [pc, #36]	; 106c8 <_start@@Base+0xb8>
   106a0:	ldr	r1, [pc, #36]	; 106cc <_start@@Base+0xbc>
   106a4:	sub	r1, r1, r0
   106a8:	asr	r1, r1, #2
   106ac:	add	r1, r1, r1, lsr #31
   106b0:	asrs	r1, r1, #1
   106b4:	bxeq	lr
   106b8:	ldr	r3, [pc, #16]	; 106d0 <_start@@Base+0xc0>
   106bc:	cmp	r3, #0
   106c0:	bxeq	lr
   106c4:	bx	r3
   106c8:	andeq	r1, r2, r4, lsr r0
   106cc:	andeq	r1, r2, r4, lsr r0
   106d0:	andeq	r0, r0, r0
   106d4:	push	{r4, lr}
   106d8:	ldr	r4, [pc, #24]	; 106f8 <_start@@Base+0xe8>
   106dc:	ldrb	r3, [r4]
   106e0:	cmp	r3, #0
   106e4:	popne	{r4, pc}
   106e8:	bl	10670 <_start@@Base+0x60>
   106ec:	mov	r3, #1
   106f0:	strb	r3, [r4]
   106f4:	pop	{r4, pc}
   106f8:	andeq	r1, r2, r4, lsr r0
   106fc:	b	1069c <_start@@Base+0x8c>

00010700 <main@@Base>:
   10700:	str	fp, [sp, #-8]!
   10704:	str	lr, [sp, #4]
   10708:	add	fp, sp, #4
   1070c:	sub	sp, sp, #24
   10710:	sub	r3, fp, #28
   10714:	mov	r1, r3
   10718:	ldr	r3, [pc, #416]	; 108c0 <main@@Base+0x1c0>
   1071c:	add	r3, pc, r3
   10720:	mov	r0, r3
   10724:	bl	105f8 <__isoc99_scanf@plt>
   10728:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1072c:	cmp	r3, #0
   10730:	bne	1073c <main@@Base+0x3c>
   10734:	mov	r0, #0
   10738:	bl	105ec <exit@plt>
   1073c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10740:	lsl	r3, r3, #3
   10744:	mov	r0, r3
   10748:	bl	105c8 <malloc@plt>
   1074c:	mov	r3, r0
   10750:	str	r3, [fp, #-24]	; 0xffffffe8
   10754:	mov	r3, #0
   10758:	str	r3, [fp, #-12]
   1075c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10760:	sub	r3, r3, #1
   10764:	str	r3, [fp, #-16]
   10768:	mov	r3, #0
   1076c:	str	r3, [fp, #-8]
   10770:	b	1079c <main@@Base+0x9c>
   10774:	ldr	r3, [fp, #-8]
   10778:	lsl	r3, r3, #2
   1077c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10780:	add	r3, r2, r3
   10784:	ldr	r2, [fp, #-8]
   10788:	add	r2, r2, #1
   1078c:	str	r2, [r3]
   10790:	ldr	r3, [fp, #-8]
   10794:	add	r3, r3, #1
   10798:	str	r3, [fp, #-8]
   1079c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   107a0:	ldr	r2, [fp, #-8]
   107a4:	cmp	r2, r3
   107a8:	blt	10774 <main@@Base+0x74>
   107ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   107b0:	str	r3, [fp, #-20]	; 0xffffffec
   107b4:	ldr	r3, [pc, #264]	; 108c4 <main@@Base+0x1c4>
   107b8:	add	r3, pc, r3
   107bc:	mov	r0, r3
   107c0:	bl	105bc <printf@plt>
   107c4:	b	10848 <main@@Base+0x148>
   107c8:	ldr	r3, [fp, #-12]
   107cc:	lsl	r3, r3, #2
   107d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   107d4:	add	r3, r2, r3
   107d8:	ldr	r3, [r3]
   107dc:	mov	r1, r3
   107e0:	ldr	r3, [pc, #224]	; 108c8 <main@@Base+0x1c8>
   107e4:	add	r3, pc, r3
   107e8:	mov	r0, r3
   107ec:	bl	105bc <printf@plt>
   107f0:	ldr	r3, [fp, #-12]
   107f4:	add	r3, r3, #1
   107f8:	str	r3, [fp, #-12]
   107fc:	ldr	r3, [fp, #-16]
   10800:	add	r3, r3, #1
   10804:	str	r3, [fp, #-16]
   10808:	ldr	r3, [fp, #-12]
   1080c:	lsl	r3, r3, #2
   10810:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10814:	add	r2, r2, r3
   10818:	ldr	r3, [fp, #-16]
   1081c:	lsl	r3, r3, #2
   10820:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10824:	add	r3, r1, r3
   10828:	ldr	r2, [r2]
   1082c:	str	r2, [r3]
   10830:	ldr	r3, [fp, #-12]
   10834:	add	r3, r3, #1
   10838:	str	r3, [fp, #-12]
   1083c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10840:	sub	r3, r3, #1
   10844:	str	r3, [fp, #-20]	; 0xffffffec
   10848:	ldr	r3, [fp, #-20]	; 0xffffffec
   1084c:	cmp	r3, #2
   10850:	bgt	107c8 <main@@Base+0xc8>
   10854:	ldr	r3, [fp, #-12]
   10858:	add	r2, r3, #1
   1085c:	str	r2, [fp, #-12]
   10860:	lsl	r3, r3, #2
   10864:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10868:	add	r3, r2, r3
   1086c:	ldr	r3, [r3]
   10870:	mov	r1, r3
   10874:	ldr	r3, [pc, #80]	; 108cc <main@@Base+0x1cc>
   10878:	add	r3, pc, r3
   1087c:	mov	r0, r3
   10880:	bl	105bc <printf@plt>
   10884:	ldr	r3, [pc, #68]	; 108d0 <main@@Base+0x1d0>
   10888:	add	r3, pc, r3
   1088c:	mov	r0, r3
   10890:	bl	105bc <printf@plt>
   10894:	ldr	r3, [fp, #-12]
   10898:	lsl	r3, r3, #2
   1089c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   108a0:	add	r3, r2, r3
   108a4:	ldr	r3, [r3]
   108a8:	mov	r1, r3
   108ac:	ldr	r3, [pc, #32]	; 108d4 <main@@Base+0x1d4>
   108b0:	add	r3, pc, r3
   108b4:	mov	r0, r3
   108b8:	bl	105bc <printf@plt>
   108bc:	b	10710 <main@@Base+0x10>
   108c0:	andeq	r0, r0, r4, lsr #4
   108c4:	andeq	r0, r0, ip, lsl #3
   108c8:	andeq	r0, r0, r4, ror r1
   108cc:	andeq	r0, r0, r8, asr #1
   108d0:	ldrdeq	r0, [r0], -r8
   108d4:	andeq	r0, r0, r4, asr #1

000108d8 <__libc_csu_init@@Base>:
   108d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   108dc:	mov	r7, r0
   108e0:	ldr	r6, [pc, #72]	; 10930 <__libc_csu_init@@Base+0x58>
   108e4:	ldr	r5, [pc, #72]	; 10934 <__libc_csu_init@@Base+0x5c>
   108e8:	add	r6, pc, r6
   108ec:	add	r5, pc, r5
   108f0:	sub	r6, r6, r5
   108f4:	mov	r8, r1
   108f8:	mov	r9, r2
   108fc:	bl	1059c <printf@plt-0x20>
   10900:	asrs	r6, r6, #2
   10904:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10908:	mov	r4, #0
   1090c:	add	r4, r4, #1
   10910:	ldr	r3, [r5], #4
   10914:	mov	r2, r9
   10918:	mov	r1, r8
   1091c:	mov	r0, r7
   10920:	blx	r3
   10924:	cmp	r6, r4
   10928:	bne	1090c <__libc_csu_init@@Base+0x34>
   1092c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10930:	andeq	r0, r1, r4, lsr #12
   10934:	andeq	r0, r1, ip, lsl r6

00010938 <__libc_csu_fini@@Base>:
   10938:	bx	lr

Disassembly of section .fini:

0001093c <.fini>:
   1093c:	push	{r3, lr}
   10940:	pop	{r3, pc}
