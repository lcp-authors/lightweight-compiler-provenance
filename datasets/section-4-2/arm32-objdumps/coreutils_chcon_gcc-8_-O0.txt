
../repos/coreutils/src/chcon:     file format elf32-littlearm


Disassembly of section .init:

00011220 <.init>:
   11220:	push	{r3, lr}
   11224:	bl	1166c <__assert_fail@plt+0x48>
   11228:	pop	{r3, pc}

Disassembly of section .plt:

0001122c <fstatfs64@plt-0x14>:
   1122c:	push	{lr}		; (str lr, [sp, #-4]!)
   11230:	ldr	lr, [pc, #4]	; 1123c <fstatfs64@plt-0x4>
   11234:	add	lr, pc, lr
   11238:	ldr	pc, [lr, #8]!
   1123c:	andeq	pc, r1, r4, asr #27

00011240 <fstatfs64@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #126976	; 0x1f000
   11248:	ldr	pc, [ip, #3524]!	; 0xdc4

0001124c <calloc@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #126976	; 0x1f000
   11254:	ldr	pc, [ip, #3516]!	; 0xdbc

00011258 <fputs_unlocked@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #126976	; 0x1f000
   11260:	ldr	pc, [ip, #3508]!	; 0xdb4

00011264 <raise@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #126976	; 0x1f000
   1126c:	ldr	pc, [ip, #3500]!	; 0xdac

00011270 <is_selinux_enabled@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #126976	; 0x1f000
   11278:	ldr	pc, [ip, #3492]!	; 0xda4

0001127c <strcmp@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #126976	; 0x1f000
   11284:	ldr	pc, [ip, #3484]!	; 0xd9c

00011288 <printf@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #126976	; 0x1f000
   11290:	ldr	pc, [ip, #3476]!	; 0xd94

00011294 <fflush@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #126976	; 0x1f000
   1129c:	ldr	pc, [ip, #3468]!	; 0xd8c

000112a0 <lsetfilecon@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #126976	; 0x1f000
   112a8:	ldr	pc, [ip, #3460]!	; 0xd84

000112ac <memmove@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #126976	; 0x1f000
   112b4:	ldr	pc, [ip, #3452]!	; 0xd7c

000112b8 <free@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #126976	; 0x1f000
   112c0:	ldr	pc, [ip, #3444]!	; 0xd74

000112c4 <_exit@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #126976	; 0x1f000
   112cc:	ldr	pc, [ip, #3436]!	; 0xd6c

000112d0 <memcpy@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #126976	; 0x1f000
   112d8:	ldr	pc, [ip, #3428]!	; 0xd64

000112dc <mbsinit@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #126976	; 0x1f000
   112e4:	ldr	pc, [ip, #3420]!	; 0xd5c

000112e8 <context_new@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #126976	; 0x1f000
   112f0:	ldr	pc, [ip, #3412]!	; 0xd54

000112f4 <memcmp@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #126976	; 0x1f000
   112fc:	ldr	pc, [ip, #3404]!	; 0xd4c

00011300 <fputc_unlocked@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #126976	; 0x1f000
   11308:	ldr	pc, [ip, #3396]!	; 0xd44

0001130c <context_role_set@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #126976	; 0x1f000
   11314:	ldr	pc, [ip, #3388]!	; 0xd3c

00011318 <context_type_set@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #126976	; 0x1f000
   11320:	ldr	pc, [ip, #3380]!	; 0xd34

00011324 <realloc@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #126976	; 0x1f000
   1132c:	ldr	pc, [ip, #3372]!	; 0xd2c

00011330 <fgetfilecon@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #126976	; 0x1f000
   11338:	ldr	pc, [ip, #3364]!	; 0xd24

0001133c <textdomain@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #126976	; 0x1f000
   11344:	ldr	pc, [ip, #3356]!	; 0xd1c

00011348 <chdir@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #126976	; 0x1f000
   11350:	ldr	pc, [ip, #3348]!	; 0xd14

00011354 <__fxstatat64@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #126976	; 0x1f000
   1135c:	ldr	pc, [ip, #3340]!	; 0xd0c

00011360 <iswprint@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #126976	; 0x1f000
   11368:	ldr	pc, [ip, #3332]!	; 0xd04

0001136c <__fxstat64@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #126976	; 0x1f000
   11374:	ldr	pc, [ip, #3324]!	; 0xcfc

00011378 <fwrite@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #126976	; 0x1f000
   11380:	ldr	pc, [ip, #3316]!	; 0xcf4

00011384 <lseek64@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #126976	; 0x1f000
   1138c:	ldr	pc, [ip, #3308]!	; 0xcec

00011390 <__ctype_get_mb_cur_max@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #126976	; 0x1f000
   11398:	ldr	pc, [ip, #3300]!	; 0xce4

0001139c <strcpy@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #126976	; 0x1f000
   113a4:	ldr	pc, [ip, #3292]!	; 0xcdc

000113a8 <__fpending@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #126976	; 0x1f000
   113b0:	ldr	pc, [ip, #3284]!	; 0xcd4

000113b4 <ferror_unlocked@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #126976	; 0x1f000
   113bc:	ldr	pc, [ip, #3276]!	; 0xccc

000113c0 <mbrtowc@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #126976	; 0x1f000
   113c8:	ldr	pc, [ip, #3268]!	; 0xcc4

000113cc <error@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #126976	; 0x1f000
   113d4:	ldr	pc, [ip, #3260]!	; 0xcbc

000113d8 <security_check_context@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #126976	; 0x1f000
   113e0:	ldr	pc, [ip, #3252]!	; 0xcb4

000113e4 <open64@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #126976	; 0x1f000
   113ec:	ldr	pc, [ip, #3244]!	; 0xcac

000113f0 <lgetfilecon@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #126976	; 0x1f000
   113f8:	ldr	pc, [ip, #3236]!	; 0xca4

000113fc <malloc@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #126976	; 0x1f000
   11404:	ldr	pc, [ip, #3228]!	; 0xc9c

00011408 <__libc_start_main@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #126976	; 0x1f000
   11410:	ldr	pc, [ip, #3220]!	; 0xc94

00011414 <__freading@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #126976	; 0x1f000
   1141c:	ldr	pc, [ip, #3212]!	; 0xc8c

00011420 <__gmon_start__@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #126976	; 0x1f000
   11428:	ldr	pc, [ip, #3204]!	; 0xc84

0001142c <context_free@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #126976	; 0x1f000
   11434:	ldr	pc, [ip, #3196]!	; 0xc7c

00011438 <getopt_long@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #126976	; 0x1f000
   11440:	ldr	pc, [ip, #3188]!	; 0xc74

00011444 <__ctype_b_loc@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #126976	; 0x1f000
   1144c:	ldr	pc, [ip, #3180]!	; 0xc6c

00011450 <getcwd@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #126976	; 0x1f000
   11458:	ldr	pc, [ip, #3172]!	; 0xc64

0001145c <exit@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #126976	; 0x1f000
   11464:	ldr	pc, [ip, #3164]!	; 0xc5c

00011468 <context_user_set@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #126976	; 0x1f000
   11470:	ldr	pc, [ip, #3156]!	; 0xc54

00011474 <gettext@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #126976	; 0x1f000
   1147c:	ldr	pc, [ip, #3148]!	; 0xc4c

00011480 <getfilecon@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #126976	; 0x1f000
   11488:	ldr	pc, [ip, #3140]!	; 0xc44

0001148c <strlen@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #126976	; 0x1f000
   11494:	ldr	pc, [ip, #3132]!	; 0xc3c

00011498 <openat64@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #126976	; 0x1f000
   114a0:	ldr	pc, [ip, #3124]!	; 0xc34

000114a4 <memrchr@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #126976	; 0x1f000
   114ac:	ldr	pc, [ip, #3116]!	; 0xc2c

000114b0 <fprintf@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #126976	; 0x1f000
   114b8:	ldr	pc, [ip, #3108]!	; 0xc24

000114bc <__errno_location@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #126976	; 0x1f000
   114c4:	ldr	pc, [ip, #3100]!	; 0xc1c

000114c8 <__cxa_atexit@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #126976	; 0x1f000
   114d0:	ldr	pc, [ip, #3092]!	; 0xc14

000114d4 <memset@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #126976	; 0x1f000
   114dc:	ldr	pc, [ip, #3084]!	; 0xc0c

000114e0 <fileno@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #126976	; 0x1f000
   114e8:	ldr	pc, [ip, #3076]!	; 0xc04

000114ec <memchr@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #126976	; 0x1f000
   114f4:	ldr	pc, [ip, #3068]!	; 0xbfc

000114f8 <setfilecon@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #126976	; 0x1f000
   11500:	ldr	pc, [ip, #3060]!	; 0xbf4

00011504 <access@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #126976	; 0x1f000
   1150c:	ldr	pc, [ip, #3052]!	; 0xbec

00011510 <fclose@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #126976	; 0x1f000
   11518:	ldr	pc, [ip, #3044]!	; 0xbe4

0001151c <fseeko64@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #126976	; 0x1f000
   11524:	ldr	pc, [ip, #3036]!	; 0xbdc

00011528 <fcntl64@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #126976	; 0x1f000
   11530:	ldr	pc, [ip, #3028]!	; 0xbd4

00011534 <setlocale@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #126976	; 0x1f000
   1153c:	ldr	pc, [ip, #3020]!	; 0xbcc

00011540 <strrchr@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #126976	; 0x1f000
   11548:	ldr	pc, [ip, #3012]!	; 0xbc4

0001154c <nl_langinfo@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #126976	; 0x1f000
   11554:	ldr	pc, [ip, #3004]!	; 0xbbc

00011558 <sprintf@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #126976	; 0x1f000
   11560:	ldr	pc, [ip, #2996]!	; 0xbb4

00011564 <readdir64@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #126976	; 0x1f000
   1156c:	ldr	pc, [ip, #2988]!	; 0xbac

00011570 <fdopendir@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #126976	; 0x1f000
   11578:	ldr	pc, [ip, #2980]!	; 0xba4

0001157c <dirfd@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #126976	; 0x1f000
   11584:	ldr	pc, [ip, #2972]!	; 0xb9c

00011588 <fchdir@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #126976	; 0x1f000
   11590:	ldr	pc, [ip, #2964]!	; 0xb94

00011594 <qsort@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #126976	; 0x1f000
   1159c:	ldr	pc, [ip, #2956]!	; 0xb8c

000115a0 <freecon@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #126976	; 0x1f000
   115a8:	ldr	pc, [ip, #2948]!	; 0xb84

000115ac <bindtextdomain@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #126976	; 0x1f000
   115b4:	ldr	pc, [ip, #2940]!	; 0xb7c

000115b8 <context_range_set@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #126976	; 0x1f000
   115c0:	ldr	pc, [ip, #2932]!	; 0xb74

000115c4 <context_str@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #126976	; 0x1f000
   115cc:	ldr	pc, [ip, #2924]!	; 0xb6c

000115d0 <__xstat64@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #126976	; 0x1f000
   115d8:	ldr	pc, [ip, #2916]!	; 0xb64

000115dc <strncmp@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #126976	; 0x1f000
   115e4:	ldr	pc, [ip, #2908]!	; 0xb5c

000115e8 <abort@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #126976	; 0x1f000
   115f0:	ldr	pc, [ip, #2900]!	; 0xb54

000115f4 <close@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #126976	; 0x1f000
   115fc:	ldr	pc, [ip, #2892]!	; 0xb4c

00011600 <__lxstat64@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #126976	; 0x1f000
   11608:	ldr	pc, [ip, #2884]!	; 0xb44

0001160c <closedir@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #126976	; 0x1f000
   11614:	ldr	pc, [ip, #2876]!	; 0xb3c

00011618 <strspn@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #126976	; 0x1f000
   11620:	ldr	pc, [ip, #2868]!	; 0xb34

00011624 <__assert_fail@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #126976	; 0x1f000
   1162c:	ldr	pc, [ip, #2860]!	; 0xb2c

Disassembly of section .text:

00011630 <.text>:
   11630:	mov	fp, #0
   11634:	mov	lr, #0
   11638:	pop	{r1}		; (ldr r1, [sp], #4)
   1163c:	mov	r2, sp
   11640:	push	{r2}		; (str r2, [sp, #-4]!)
   11644:	push	{r0}		; (str r0, [sp, #-4]!)
   11648:	ldr	ip, [pc, #16]	; 11660 <__assert_fail@plt+0x3c>
   1164c:	push	{ip}		; (str ip, [sp, #-4]!)
   11650:	ldr	r0, [pc, #12]	; 11664 <__assert_fail@plt+0x40>
   11654:	ldr	r3, [pc, #12]	; 11668 <__assert_fail@plt+0x44>
   11658:	bl	11408 <__libc_start_main@plt>
   1165c:	bl	115e8 <abort@plt>
   11660:	andeq	pc, r1, r8, asr r3	; <UNPREDICTABLE>
   11664:	strdeq	r2, [r1], -r8
   11668:	strdeq	pc, [r1], -r8
   1166c:	ldr	r3, [pc, #20]	; 11688 <__assert_fail@plt+0x64>
   11670:	ldr	r2, [pc, #20]	; 1168c <__assert_fail@plt+0x68>
   11674:	add	r3, pc, r3
   11678:	ldr	r2, [r3, r2]
   1167c:	cmp	r2, #0
   11680:	bxeq	lr
   11684:	b	11420 <__gmon_start__@plt>
   11688:	andeq	pc, r1, r4, lsl #19
   1168c:	andeq	r0, r0, ip, asr r1
   11690:	ldr	r0, [pc, #24]	; 116b0 <__assert_fail@plt+0x8c>
   11694:	ldr	r3, [pc, #24]	; 116b4 <__assert_fail@plt+0x90>
   11698:	cmp	r3, r0
   1169c:	bxeq	lr
   116a0:	ldr	r3, [pc, #16]	; 116b8 <__assert_fail@plt+0x94>
   116a4:	cmp	r3, #0
   116a8:	bxeq	lr
   116ac:	bx	r3
   116b0:			; <UNDEFINED> instruction: 0x000311b0
   116b4:			; <UNDEFINED> instruction: 0x000311b0
   116b8:	andeq	r0, r0, r0
   116bc:	ldr	r0, [pc, #36]	; 116e8 <__assert_fail@plt+0xc4>
   116c0:	ldr	r1, [pc, #36]	; 116ec <__assert_fail@plt+0xc8>
   116c4:	sub	r1, r1, r0
   116c8:	asr	r1, r1, #2
   116cc:	add	r1, r1, r1, lsr #31
   116d0:	asrs	r1, r1, #1
   116d4:	bxeq	lr
   116d8:	ldr	r3, [pc, #16]	; 116f0 <__assert_fail@plt+0xcc>
   116dc:	cmp	r3, #0
   116e0:	bxeq	lr
   116e4:	bx	r3
   116e8:			; <UNDEFINED> instruction: 0x000311b0
   116ec:			; <UNDEFINED> instruction: 0x000311b0
   116f0:	andeq	r0, r0, r0
   116f4:	push	{r4, lr}
   116f8:	ldr	r4, [pc, #24]	; 11718 <__assert_fail@plt+0xf4>
   116fc:	ldrb	r3, [r4]
   11700:	cmp	r3, #0
   11704:	popne	{r4, pc}
   11708:	bl	11690 <__assert_fail@plt+0x6c>
   1170c:	mov	r3, #1
   11710:	strb	r3, [r4]
   11714:	pop	{r4, pc}
   11718:	andeq	r1, r3, ip, asr #3
   1171c:	b	116bc <__assert_fail@plt+0x98>
   11720:	str	fp, [sp, #-8]!
   11724:	str	lr, [sp, #4]
   11728:	add	fp, sp, #4
   1172c:	movw	r0, #62424	; 0xf3d8
   11730:	movt	r0, #1
   11734:	bl	11474 <gettext@plt>
   11738:	mov	r2, r0
   1173c:	movw	r3, #4548	; 0x11c4
   11740:	movt	r3, #3
   11744:	ldr	r3, [r3]
   11748:	mov	r1, r3
   1174c:	mov	r0, r2
   11750:	bl	11258 <fputs_unlocked@plt>
   11754:	nop	{0}
   11758:	sub	sp, fp, #4
   1175c:	ldr	fp, [sp]
   11760:	add	sp, sp, #4
   11764:	pop	{pc}		; (ldr pc, [sp], #4)
   11768:	str	fp, [sp, #-8]!
   1176c:	str	lr, [sp, #4]
   11770:	add	fp, sp, #4
   11774:	sub	sp, sp, #80	; 0x50
   11778:	str	r0, [fp, #-80]	; 0xffffffb0
   1177c:	movw	r2, #62872	; 0xf598
   11780:	movt	r2, #1
   11784:	sub	r3, fp, #72	; 0x48
   11788:	ldrd	r0, [r2]
   1178c:	strd	r0, [r3]
   11790:	ldrd	r0, [r2, #8]
   11794:	strd	r0, [r3, #8]
   11798:	ldrd	r0, [r2, #16]
   1179c:	strd	r0, [r3, #16]
   117a0:	ldrd	r0, [r2, #24]
   117a4:	strd	r0, [r3, #24]
   117a8:	ldrd	r0, [r2, #32]
   117ac:	strd	r0, [r3, #32]
   117b0:	ldrd	r0, [r2, #40]	; 0x28
   117b4:	strd	r0, [r3, #40]	; 0x28
   117b8:	ldrd	r0, [r2, #48]	; 0x30
   117bc:	strd	r0, [r3, #48]	; 0x30
   117c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   117c4:	str	r3, [fp, #-8]
   117c8:	sub	r3, fp, #72	; 0x48
   117cc:	str	r3, [fp, #-12]
   117d0:	b	117e0 <__assert_fail@plt+0x1bc>
   117d4:	ldr	r3, [fp, #-12]
   117d8:	add	r3, r3, #8
   117dc:	str	r3, [fp, #-12]
   117e0:	ldr	r3, [fp, #-12]
   117e4:	ldr	r3, [r3]
   117e8:	cmp	r3, #0
   117ec:	beq	11810 <__assert_fail@plt+0x1ec>
   117f0:	ldr	r3, [fp, #-12]
   117f4:	ldr	r3, [r3]
   117f8:	mov	r1, r3
   117fc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11800:	bl	1127c <strcmp@plt>
   11804:	mov	r3, r0
   11808:	cmp	r3, #0
   1180c:	bne	117d4 <__assert_fail@plt+0x1b0>
   11810:	ldr	r3, [fp, #-12]
   11814:	ldr	r3, [r3, #4]
   11818:	cmp	r3, #0
   1181c:	beq	1182c <__assert_fail@plt+0x208>
   11820:	ldr	r3, [fp, #-12]
   11824:	ldr	r3, [r3, #4]
   11828:	str	r3, [fp, #-8]
   1182c:	movw	r0, #62500	; 0xf424
   11830:	movt	r0, #1
   11834:	bl	11474 <gettext@plt>
   11838:	mov	r3, r0
   1183c:	movw	r2, #62524	; 0xf43c
   11840:	movt	r2, #1
   11844:	movw	r1, #62564	; 0xf464
   11848:	movt	r1, #1
   1184c:	mov	r0, r3
   11850:	bl	11288 <printf@plt>
   11854:	mov	r1, #0
   11858:	mov	r0, #5
   1185c:	bl	11534 <setlocale@plt>
   11860:	str	r0, [fp, #-16]
   11864:	ldr	r3, [fp, #-16]
   11868:	cmp	r3, #0
   1186c:	beq	118b8 <__assert_fail@plt+0x294>
   11870:	mov	r2, #3
   11874:	movw	r1, #62580	; 0xf474
   11878:	movt	r1, #1
   1187c:	ldr	r0, [fp, #-16]
   11880:	bl	115dc <strncmp@plt>
   11884:	mov	r3, r0
   11888:	cmp	r3, #0
   1188c:	beq	118b8 <__assert_fail@plt+0x294>
   11890:	movw	r0, #62584	; 0xf478
   11894:	movt	r0, #1
   11898:	bl	11474 <gettext@plt>
   1189c:	mov	r2, r0
   118a0:	movw	r3, #4548	; 0x11c4
   118a4:	movt	r3, #3
   118a8:	ldr	r3, [r3]
   118ac:	mov	r1, r3
   118b0:	mov	r0, r2
   118b4:	bl	11258 <fputs_unlocked@plt>
   118b8:	movw	r0, #62656	; 0xf4c0
   118bc:	movt	r0, #1
   118c0:	bl	11474 <gettext@plt>
   118c4:	mov	r3, r0
   118c8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   118cc:	movw	r1, #62524	; 0xf43c
   118d0:	movt	r1, #1
   118d4:	mov	r0, r3
   118d8:	bl	11288 <printf@plt>
   118dc:	movw	r0, #62684	; 0xf4dc
   118e0:	movt	r0, #1
   118e4:	bl	11474 <gettext@plt>
   118e8:	ldr	r2, [fp, #-8]
   118ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   118f0:	cmp	r2, r3
   118f4:	bne	11904 <__assert_fail@plt+0x2e0>
   118f8:	movw	r3, #62736	; 0xf510
   118fc:	movt	r3, #1
   11900:	b	1190c <__assert_fail@plt+0x2e8>
   11904:	movw	r3, #62748	; 0xf51c
   11908:	movt	r3, #1
   1190c:	mov	r2, r3
   11910:	ldr	r1, [fp, #-8]
   11914:	bl	11288 <printf@plt>
   11918:	nop	{0}
   1191c:	sub	sp, fp, #4
   11920:	ldr	fp, [sp]
   11924:	add	sp, sp, #4
   11928:	pop	{pc}		; (ldr pc, [sp], #4)
   1192c:	strd	r4, [sp, #-16]!
   11930:	str	fp, [sp, #8]
   11934:	str	lr, [sp, #12]
   11938:	add	fp, sp, #12
   1193c:	sub	sp, sp, #32
   11940:	str	r0, [fp, #-32]	; 0xffffffe0
   11944:	str	r1, [fp, #-36]	; 0xffffffdc
   11948:	mov	r3, #1
   1194c:	strb	r3, [fp, #-13]
   11950:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11954:	bl	112e8 <context_new@plt>
   11958:	str	r0, [fp, #-20]	; 0xffffffec
   1195c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11960:	cmp	r3, #0
   11964:	bne	119a8 <__assert_fail@plt+0x384>
   11968:	bl	114bc <__errno_location@plt>
   1196c:	mov	r3, r0
   11970:	ldr	r4, [r3]
   11974:	movw	r0, #63296	; 0xf740
   11978:	movt	r0, #1
   1197c:	bl	11474 <gettext@plt>
   11980:	mov	r5, r0
   11984:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11988:	bl	1ae4c <__assert_fail@plt+0x9828>
   1198c:	mov	r3, r0
   11990:	mov	r2, r5
   11994:	mov	r1, r4
   11998:	mov	r0, #0
   1199c:	bl	113cc <error@plt>
   119a0:	mov	r3, #1
   119a4:	b	11c3c <__assert_fail@plt+0x618>
   119a8:	movw	r3, #4572	; 0x11dc
   119ac:	movt	r3, #3
   119b0:	ldr	r3, [r3]
   119b4:	cmp	r3, #0
   119b8:	beq	11a38 <__assert_fail@plt+0x414>
   119bc:	movw	r3, #4572	; 0x11dc
   119c0:	movt	r3, #3
   119c4:	ldr	r3, [r3]
   119c8:	mov	r1, r3
   119cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   119d0:	bl	11468 <context_user_set@plt>
   119d4:	mov	r3, r0
   119d8:	cmp	r3, #0
   119dc:	beq	11a38 <__assert_fail@plt+0x414>
   119e0:	bl	114bc <__errno_location@plt>
   119e4:	mov	r3, r0
   119e8:	ldr	r4, [r3]
   119ec:	movw	r0, #63336	; 0xf768
   119f0:	movt	r0, #1
   119f4:	bl	11474 <gettext@plt>
   119f8:	mov	r5, r0
   119fc:	movw	r3, #4572	; 0x11dc
   11a00:	movt	r3, #3
   11a04:	ldr	r3, [r3]
   11a08:	mov	r0, r3
   11a0c:	bl	1ae4c <__assert_fail@plt+0x9828>
   11a10:	mov	r3, r0
   11a14:	str	r3, [sp]
   11a18:	movw	r3, #63016	; 0xf628
   11a1c:	movt	r3, #1
   11a20:	mov	r2, r5
   11a24:	mov	r1, r4
   11a28:	mov	r0, #0
   11a2c:	bl	113cc <error@plt>
   11a30:	mov	r3, #0
   11a34:	strb	r3, [fp, #-13]
   11a38:	movw	r3, #4580	; 0x11e4
   11a3c:	movt	r3, #3
   11a40:	ldr	r3, [r3]
   11a44:	cmp	r3, #0
   11a48:	beq	11ac8 <__assert_fail@plt+0x4a4>
   11a4c:	movw	r3, #4580	; 0x11e4
   11a50:	movt	r3, #3
   11a54:	ldr	r3, [r3]
   11a58:	mov	r1, r3
   11a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a60:	bl	115b8 <context_range_set@plt>
   11a64:	mov	r3, r0
   11a68:	cmp	r3, #0
   11a6c:	beq	11ac8 <__assert_fail@plt+0x4a4>
   11a70:	bl	114bc <__errno_location@plt>
   11a74:	mov	r3, r0
   11a78:	ldr	r4, [r3]
   11a7c:	movw	r0, #63336	; 0xf768
   11a80:	movt	r0, #1
   11a84:	bl	11474 <gettext@plt>
   11a88:	mov	r5, r0
   11a8c:	movw	r3, #4580	; 0x11e4
   11a90:	movt	r3, #3
   11a94:	ldr	r3, [r3]
   11a98:	mov	r0, r3
   11a9c:	bl	1ae4c <__assert_fail@plt+0x9828>
   11aa0:	mov	r3, r0
   11aa4:	str	r3, [sp]
   11aa8:	movw	r3, #63040	; 0xf640
   11aac:	movt	r3, #1
   11ab0:	mov	r2, r5
   11ab4:	mov	r1, r4
   11ab8:	mov	r0, #0
   11abc:	bl	113cc <error@plt>
   11ac0:	mov	r3, #0
   11ac4:	strb	r3, [fp, #-13]
   11ac8:	movw	r3, #4576	; 0x11e0
   11acc:	movt	r3, #3
   11ad0:	ldr	r3, [r3]
   11ad4:	cmp	r3, #0
   11ad8:	beq	11b58 <__assert_fail@plt+0x534>
   11adc:	movw	r3, #4576	; 0x11e0
   11ae0:	movt	r3, #3
   11ae4:	ldr	r3, [r3]
   11ae8:	mov	r1, r3
   11aec:	ldr	r0, [fp, #-20]	; 0xffffffec
   11af0:	bl	1130c <context_role_set@plt>
   11af4:	mov	r3, r0
   11af8:	cmp	r3, #0
   11afc:	beq	11b58 <__assert_fail@plt+0x534>
   11b00:	bl	114bc <__errno_location@plt>
   11b04:	mov	r3, r0
   11b08:	ldr	r4, [r3]
   11b0c:	movw	r0, #63336	; 0xf768
   11b10:	movt	r0, #1
   11b14:	bl	11474 <gettext@plt>
   11b18:	mov	r5, r0
   11b1c:	movw	r3, #4576	; 0x11e0
   11b20:	movt	r3, #3
   11b24:	ldr	r3, [r3]
   11b28:	mov	r0, r3
   11b2c:	bl	1ae4c <__assert_fail@plt+0x9828>
   11b30:	mov	r3, r0
   11b34:	str	r3, [sp]
   11b38:	movw	r3, #63024	; 0xf630
   11b3c:	movt	r3, #1
   11b40:	mov	r2, r5
   11b44:	mov	r1, r4
   11b48:	mov	r0, #0
   11b4c:	bl	113cc <error@plt>
   11b50:	mov	r3, #0
   11b54:	strb	r3, [fp, #-13]
   11b58:	movw	r3, #4584	; 0x11e8
   11b5c:	movt	r3, #3
   11b60:	ldr	r3, [r3]
   11b64:	cmp	r3, #0
   11b68:	beq	11be8 <__assert_fail@plt+0x5c4>
   11b6c:	movw	r3, #4584	; 0x11e8
   11b70:	movt	r3, #3
   11b74:	ldr	r3, [r3]
   11b78:	mov	r1, r3
   11b7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b80:	bl	11318 <context_type_set@plt>
   11b84:	mov	r3, r0
   11b88:	cmp	r3, #0
   11b8c:	beq	11be8 <__assert_fail@plt+0x5c4>
   11b90:	bl	114bc <__errno_location@plt>
   11b94:	mov	r3, r0
   11b98:	ldr	r4, [r3]
   11b9c:	movw	r0, #63336	; 0xf768
   11ba0:	movt	r0, #1
   11ba4:	bl	11474 <gettext@plt>
   11ba8:	mov	r5, r0
   11bac:	movw	r3, #4584	; 0x11e8
   11bb0:	movt	r3, #3
   11bb4:	ldr	r3, [r3]
   11bb8:	mov	r0, r3
   11bbc:	bl	1ae4c <__assert_fail@plt+0x9828>
   11bc0:	mov	r3, r0
   11bc4:	str	r3, [sp]
   11bc8:	movw	r3, #63032	; 0xf638
   11bcc:	movt	r3, #1
   11bd0:	mov	r2, r5
   11bd4:	mov	r1, r4
   11bd8:	mov	r0, #0
   11bdc:	bl	113cc <error@plt>
   11be0:	mov	r3, #0
   11be4:	strb	r3, [fp, #-13]
   11be8:	ldrb	r3, [fp, #-13]
   11bec:	eor	r3, r3, #1
   11bf0:	uxtb	r3, r3
   11bf4:	cmp	r3, #0
   11bf8:	beq	11c2c <__assert_fail@plt+0x608>
   11bfc:	bl	114bc <__errno_location@plt>
   11c00:	mov	r3, r0
   11c04:	ldr	r3, [r3]
   11c08:	str	r3, [fp, #-24]	; 0xffffffe8
   11c0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11c10:	bl	1142c <context_free@plt>
   11c14:	bl	114bc <__errno_location@plt>
   11c18:	mov	r2, r0
   11c1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c20:	str	r3, [r2]
   11c24:	mov	r3, #1
   11c28:	b	11c3c <__assert_fail@plt+0x618>
   11c2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11c30:	ldr	r2, [fp, #-20]	; 0xffffffec
   11c34:	str	r2, [r3]
   11c38:	mov	r3, #0
   11c3c:	mov	r0, r3
   11c40:	sub	sp, fp, #12
   11c44:	ldrd	r4, [sp]
   11c48:	ldr	fp, [sp, #8]
   11c4c:	add	sp, sp, #12
   11c50:	pop	{pc}		; (ldr pc, [sp], #4)
   11c54:	strd	r4, [sp, #-20]!	; 0xffffffec
   11c58:	str	r6, [sp, #8]
   11c5c:	str	fp, [sp, #12]
   11c60:	str	lr, [sp, #16]
   11c64:	add	fp, sp, #16
   11c68:	sub	sp, sp, #44	; 0x2c
   11c6c:	str	r0, [fp, #-48]	; 0xffffffd0
   11c70:	str	r1, [fp, #-52]	; 0xffffffcc
   11c74:	mov	r3, #0
   11c78:	str	r3, [fp, #-40]	; 0xffffffd8
   11c7c:	mov	r3, #0
   11c80:	str	r3, [fp, #-44]	; 0xffffffd4
   11c84:	mov	r3, #0
   11c88:	str	r3, [fp, #-28]	; 0xffffffe4
   11c8c:	movw	r3, #4568	; 0x11d8
   11c90:	movt	r3, #3
   11c94:	ldr	r3, [r3]
   11c98:	cmp	r3, #0
   11c9c:	bne	11dd0 <__assert_fail@plt+0x7ac>
   11ca0:	movw	r3, #4560	; 0x11d0
   11ca4:	movt	r3, #3
   11ca8:	ldrb	r3, [r3]
   11cac:	cmp	r3, #0
   11cb0:	beq	11cd0 <__assert_fail@plt+0x6ac>
   11cb4:	sub	r3, fp, #40	; 0x28
   11cb8:	mov	r2, r3
   11cbc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11cc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11cc4:	bl	1aef0 <__assert_fail@plt+0x98cc>
   11cc8:	mov	r3, r0
   11ccc:	b	11ce8 <__assert_fail@plt+0x6c4>
   11cd0:	sub	r3, fp, #40	; 0x28
   11cd4:	mov	r2, r3
   11cd8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11cdc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11ce0:	bl	1b170 <__assert_fail@plt+0x9b4c>
   11ce4:	mov	r3, r0
   11ce8:	str	r3, [fp, #-32]	; 0xffffffe0
   11cec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cf0:	cmp	r3, #0
   11cf4:	bge	11d50 <__assert_fail@plt+0x72c>
   11cf8:	bl	114bc <__errno_location@plt>
   11cfc:	mov	r3, r0
   11d00:	ldr	r3, [r3]
   11d04:	cmp	r3, #61	; 0x3d
   11d08:	beq	11d50 <__assert_fail@plt+0x72c>
   11d0c:	bl	114bc <__errno_location@plt>
   11d10:	mov	r3, r0
   11d14:	ldr	r4, [r3]
   11d18:	movw	r0, #63388	; 0xf79c
   11d1c:	movt	r0, #1
   11d20:	bl	11474 <gettext@plt>
   11d24:	mov	r5, r0
   11d28:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11d2c:	mov	r0, #4
   11d30:	bl	1a96c <__assert_fail@plt+0x9348>
   11d34:	mov	r3, r0
   11d38:	mov	r2, r5
   11d3c:	mov	r1, r4
   11d40:	mov	r0, #0
   11d44:	bl	113cc <error@plt>
   11d48:	mov	r3, #1
   11d4c:	b	11ee8 <__assert_fail@plt+0x8c4>
   11d50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11d54:	cmp	r3, #0
   11d58:	bne	11d94 <__assert_fail@plt+0x770>
   11d5c:	movw	r0, #63428	; 0xf7c4
   11d60:	movt	r0, #1
   11d64:	bl	11474 <gettext@plt>
   11d68:	mov	r4, r0
   11d6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11d70:	mov	r0, #4
   11d74:	bl	1a96c <__assert_fail@plt+0x9348>
   11d78:	mov	r3, r0
   11d7c:	mov	r2, r4
   11d80:	mov	r1, #0
   11d84:	mov	r0, #0
   11d88:	bl	113cc <error@plt>
   11d8c:	mov	r3, #1
   11d90:	b	11ee8 <__assert_fail@plt+0x8c4>
   11d94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11d98:	sub	r2, fp, #44	; 0x2c
   11d9c:	mov	r1, r2
   11da0:	mov	r0, r3
   11da4:	bl	1192c <__assert_fail@plt+0x308>
   11da8:	mov	r3, r0
   11dac:	cmp	r3, #0
   11db0:	beq	11dbc <__assert_fail@plt+0x798>
   11db4:	mov	r3, #1
   11db8:	b	11ee8 <__assert_fail@plt+0x8c4>
   11dbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11dc0:	mov	r0, r3
   11dc4:	bl	115c4 <context_str@plt>
   11dc8:	str	r0, [fp, #-24]	; 0xffffffe8
   11dcc:	b	11de0 <__assert_fail@plt+0x7bc>
   11dd0:	movw	r3, #4568	; 0x11d8
   11dd4:	movt	r3, #3
   11dd8:	ldr	r3, [r3]
   11ddc:	str	r3, [fp, #-24]	; 0xffffffe8
   11de0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11de4:	cmp	r3, #0
   11de8:	beq	11e08 <__assert_fail@plt+0x7e4>
   11dec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11df0:	mov	r1, r3
   11df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11df8:	bl	1127c <strcmp@plt>
   11dfc:	mov	r3, r0
   11e00:	cmp	r3, #0
   11e04:	beq	11eb8 <__assert_fail@plt+0x894>
   11e08:	movw	r3, #4560	; 0x11d0
   11e0c:	movt	r3, #3
   11e10:	ldrb	r3, [r3]
   11e14:	cmp	r3, #0
   11e18:	beq	11e34 <__assert_fail@plt+0x810>
   11e1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11e20:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11e24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11e28:	bl	1b3f0 <__assert_fail@plt+0x9dcc>
   11e2c:	mov	r3, r0
   11e30:	b	11e48 <__assert_fail@plt+0x824>
   11e34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11e38:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11e3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11e40:	bl	1b670 <__assert_fail@plt+0xa04c>
   11e44:	mov	r3, r0
   11e48:	str	r3, [fp, #-36]	; 0xffffffdc
   11e4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11e50:	cmp	r3, #0
   11e54:	beq	11eb8 <__assert_fail@plt+0x894>
   11e58:	mov	r3, #1
   11e5c:	str	r3, [fp, #-28]	; 0xffffffe4
   11e60:	bl	114bc <__errno_location@plt>
   11e64:	mov	r3, r0
   11e68:	ldr	r4, [r3]
   11e6c:	movw	r0, #63480	; 0xf7f8
   11e70:	movt	r0, #1
   11e74:	bl	11474 <gettext@plt>
   11e78:	mov	r5, r0
   11e7c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11e80:	mov	r1, #4
   11e84:	mov	r0, #0
   11e88:	bl	1a8b8 <__assert_fail@plt+0x9294>
   11e8c:	mov	r6, r0
   11e90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11e94:	mov	r0, #1
   11e98:	bl	1ae0c <__assert_fail@plt+0x97e8>
   11e9c:	mov	r3, r0
   11ea0:	str	r3, [sp]
   11ea4:	mov	r3, r6
   11ea8:	mov	r2, r5
   11eac:	mov	r1, r4
   11eb0:	mov	r0, #0
   11eb4:	bl	113cc <error@plt>
   11eb8:	movw	r3, #4568	; 0x11d8
   11ebc:	movt	r3, #3
   11ec0:	ldr	r3, [r3]
   11ec4:	cmp	r3, #0
   11ec8:	bne	11ee4 <__assert_fail@plt+0x8c0>
   11ecc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11ed0:	mov	r0, r3
   11ed4:	bl	1142c <context_free@plt>
   11ed8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11edc:	mov	r0, r3
   11ee0:	bl	115a0 <freecon@plt>
   11ee4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11ee8:	mov	r0, r3
   11eec:	sub	sp, fp, #16
   11ef0:	ldrd	r4, [sp]
   11ef4:	ldr	r6, [sp, #8]
   11ef8:	ldr	fp, [sp, #12]
   11efc:	add	sp, sp, #16
   11f00:	pop	{pc}		; (ldr pc, [sp], #4)
   11f04:	strd	r4, [sp, #-16]!
   11f08:	str	fp, [sp, #8]
   11f0c:	str	lr, [sp, #12]
   11f10:	add	fp, sp, #12
   11f14:	sub	sp, sp, #40	; 0x28
   11f18:	str	r0, [fp, #-40]	; 0xffffffd8
   11f1c:	str	r1, [fp, #-44]	; 0xffffffd4
   11f20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11f24:	ldr	r3, [r3, #28]
   11f28:	str	r3, [fp, #-20]	; 0xffffffec
   11f2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11f30:	ldr	r3, [r3, #24]
   11f34:	str	r3, [fp, #-24]	; 0xffffffe8
   11f38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11f3c:	add	r3, r3, #64	; 0x40
   11f40:	str	r3, [fp, #-28]	; 0xffffffe4
   11f44:	mov	r3, #1
   11f48:	strb	r3, [fp, #-13]
   11f4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11f50:	ldrh	r3, [r3, #56]	; 0x38
   11f54:	sub	r3, r3, #1
   11f58:	cmp	r3, #9
   11f5c:	ldrls	pc, [pc, r3, lsl #2]
   11f60:	b	1226c <__assert_fail@plt+0xc48>
   11f64:	andeq	r1, r1, ip, lsl #31
   11f68:	andeq	r2, r1, r8, lsl r2
   11f6c:	andeq	r2, r1, ip, ror #4
   11f70:	ldrdeq	r2, [r1], -r4
   11f74:	andeq	r2, r1, ip, ror #4
   11f78:	andeq	r2, r1, ip, ror #1
   11f7c:	muleq	r1, r8, r1
   11f80:	andeq	r2, r1, ip, ror #4
   11f84:	andeq	r2, r1, ip, ror #4
   11f88:	andeq	r2, r1, r0, lsl r1
   11f8c:	movw	r3, #4561	; 0x11d1
   11f90:	movt	r3, #3
   11f94:	ldrb	r3, [r3]
   11f98:	cmp	r3, #0
   11f9c:	beq	12274 <__assert_fail@plt+0xc50>
   11fa0:	movw	r3, #4564	; 0x11d4
   11fa4:	movt	r3, #3
   11fa8:	ldr	r3, [r3]
   11fac:	cmp	r3, #0
   11fb0:	beq	120e4 <__assert_fail@plt+0xac0>
   11fb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11fb8:	ldrd	r0, [r3, #160]	; 0xa0
   11fbc:	movw	r3, #4564	; 0x11d4
   11fc0:	movt	r3, #3
   11fc4:	ldr	r3, [r3]
   11fc8:	ldrd	r2, [r3]
   11fcc:	cmp	r1, r3
   11fd0:	cmpeq	r0, r2
   11fd4:	bne	120e4 <__assert_fail@plt+0xac0>
   11fd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11fdc:	ldrd	r0, [r3, #64]	; 0x40
   11fe0:	movw	r3, #4564	; 0x11d4
   11fe4:	movt	r3, #3
   11fe8:	ldr	r3, [r3]
   11fec:	ldrd	r2, [r3, #8]
   11ff0:	cmp	r1, r3
   11ff4:	cmpeq	r0, r2
   11ff8:	bne	120e4 <__assert_fail@plt+0xac0>
   11ffc:	movw	r1, #63520	; 0xf820
   12000:	movt	r1, #1
   12004:	ldr	r0, [fp, #-20]	; 0xffffffec
   12008:	bl	1127c <strcmp@plt>
   1200c:	mov	r3, r0
   12010:	cmp	r3, #0
   12014:	bne	1204c <__assert_fail@plt+0xa28>
   12018:	movw	r0, #63524	; 0xf824
   1201c:	movt	r0, #1
   12020:	bl	11474 <gettext@plt>
   12024:	mov	r4, r0
   12028:	ldr	r1, [fp, #-20]	; 0xffffffec
   1202c:	mov	r0, #4
   12030:	bl	1a96c <__assert_fail@plt+0x9348>
   12034:	mov	r3, r0
   12038:	mov	r2, r4
   1203c:	mov	r1, #0
   12040:	mov	r0, #0
   12044:	bl	113cc <error@plt>
   12048:	b	120a0 <__assert_fail@plt+0xa7c>
   1204c:	movw	r0, #63572	; 0xf854
   12050:	movt	r0, #1
   12054:	bl	11474 <gettext@plt>
   12058:	mov	r4, r0
   1205c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12060:	mov	r1, #4
   12064:	mov	r0, #0
   12068:	bl	1a8b8 <__assert_fail@plt+0x9294>
   1206c:	mov	r5, r0
   12070:	movw	r2, #63520	; 0xf820
   12074:	movt	r2, #1
   12078:	mov	r1, #4
   1207c:	mov	r0, #1
   12080:	bl	1a8b8 <__assert_fail@plt+0x9294>
   12084:	mov	r3, r0
   12088:	str	r3, [sp]
   1208c:	mov	r3, r5
   12090:	mov	r2, r4
   12094:	mov	r1, #0
   12098:	mov	r0, #0
   1209c:	bl	113cc <error@plt>
   120a0:	movw	r0, #63632	; 0xf890
   120a4:	movt	r0, #1
   120a8:	bl	11474 <gettext@plt>
   120ac:	mov	r3, r0
   120b0:	mov	r2, r3
   120b4:	mov	r1, #0
   120b8:	mov	r0, #0
   120bc:	bl	113cc <error@plt>
   120c0:	mov	r2, #4
   120c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   120c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   120cc:	bl	14b94 <__assert_fail@plt+0x3570>
   120d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   120d4:	bl	143e8 <__assert_fail@plt+0x2dc4>
   120d8:	str	r0, [fp, #-32]	; 0xffffffe0
   120dc:	mov	r3, #0
   120e0:	b	12470 <__assert_fail@plt+0xe4c>
   120e4:	mov	r3, #1
   120e8:	b	12470 <__assert_fail@plt+0xe4c>
   120ec:	movw	r3, #4561	; 0x11d1
   120f0:	movt	r3, #3
   120f4:	ldrb	r3, [r3]
   120f8:	eor	r3, r3, #1
   120fc:	uxtb	r3, r3
   12100:	cmp	r3, #0
   12104:	beq	1227c <__assert_fail@plt+0xc58>
   12108:	mov	r3, #1
   1210c:	b	12470 <__assert_fail@plt+0xe4c>
   12110:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12114:	ldr	r3, [r3, #48]	; 0x30
   12118:	cmp	r3, #0
   1211c:	bne	12154 <__assert_fail@plt+0xb30>
   12120:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12124:	ldr	r3, [r3, #16]
   12128:	cmp	r3, #0
   1212c:	bne	12154 <__assert_fail@plt+0xb30>
   12130:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12134:	mov	r2, #1
   12138:	str	r2, [r3, #16]
   1213c:	mov	r2, #1
   12140:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12144:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12148:	bl	14b94 <__assert_fail@plt+0x3570>
   1214c:	mov	r3, #1
   12150:	b	12470 <__assert_fail@plt+0xe4c>
   12154:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12158:	ldr	r4, [r3, #32]
   1215c:	movw	r0, #63684	; 0xf8c4
   12160:	movt	r0, #1
   12164:	bl	11474 <gettext@plt>
   12168:	mov	r5, r0
   1216c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12170:	mov	r0, #4
   12174:	bl	1a96c <__assert_fail@plt+0x9348>
   12178:	mov	r3, r0
   1217c:	mov	r2, r5
   12180:	mov	r1, r4
   12184:	mov	r0, #0
   12188:	bl	113cc <error@plt>
   1218c:	mov	r3, #0
   12190:	strb	r3, [fp, #-13]
   12194:	b	12288 <__assert_fail@plt+0xc64>
   12198:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1219c:	ldr	r4, [r3, #32]
   121a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   121a4:	mov	r1, #3
   121a8:	mov	r0, #0
   121ac:	bl	1ab50 <__assert_fail@plt+0x952c>
   121b0:	mov	r3, r0
   121b4:	movw	r2, #63704	; 0xf8d8
   121b8:	movt	r2, #1
   121bc:	mov	r1, r4
   121c0:	mov	r0, #0
   121c4:	bl	113cc <error@plt>
   121c8:	mov	r3, #0
   121cc:	strb	r3, [fp, #-13]
   121d0:	b	12288 <__assert_fail@plt+0xc64>
   121d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   121d8:	ldr	r4, [r3, #32]
   121dc:	movw	r0, #63708	; 0xf8dc
   121e0:	movt	r0, #1
   121e4:	bl	11474 <gettext@plt>
   121e8:	mov	r5, r0
   121ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   121f0:	mov	r0, #4
   121f4:	bl	1a96c <__assert_fail@plt+0x9348>
   121f8:	mov	r3, r0
   121fc:	mov	r2, r5
   12200:	mov	r1, r4
   12204:	mov	r0, #0
   12208:	bl	113cc <error@plt>
   1220c:	mov	r3, #0
   12210:	strb	r3, [fp, #-13]
   12214:	b	12288 <__assert_fail@plt+0xc64>
   12218:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1221c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12220:	bl	1cca8 <__assert_fail@plt+0xb684>
   12224:	mov	r3, r0
   12228:	cmp	r3, #0
   1222c:	beq	12284 <__assert_fail@plt+0xc60>
   12230:	movw	r0, #63736	; 0xf8f8
   12234:	movt	r0, #1
   12238:	bl	11474 <gettext@plt>
   1223c:	mov	r4, r0
   12240:	ldr	r2, [fp, #-20]	; 0xffffffec
   12244:	mov	r1, #3
   12248:	mov	r0, #0
   1224c:	bl	1ab50 <__assert_fail@plt+0x952c>
   12250:	mov	r3, r0
   12254:	mov	r2, r4
   12258:	mov	r1, #0
   1225c:	mov	r0, #0
   12260:	bl	113cc <error@plt>
   12264:	mov	r3, #0
   12268:	b	12470 <__assert_fail@plt+0xe4c>
   1226c:	nop	{0}
   12270:	b	12288 <__assert_fail@plt+0xc64>
   12274:	nop	{0}
   12278:	b	12288 <__assert_fail@plt+0xc64>
   1227c:	nop	{0}
   12280:	b	12288 <__assert_fail@plt+0xc64>
   12284:	nop	{0}
   12288:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1228c:	ldrh	r3, [r3, #56]	; 0x38
   12290:	cmp	r3, #6
   12294:	bne	123cc <__assert_fail@plt+0xda8>
   12298:	ldrb	r3, [fp, #-13]
   1229c:	cmp	r3, #0
   122a0:	beq	123cc <__assert_fail@plt+0xda8>
   122a4:	movw	r3, #4564	; 0x11d4
   122a8:	movt	r3, #3
   122ac:	ldr	r3, [r3]
   122b0:	cmp	r3, #0
   122b4:	beq	123cc <__assert_fail@plt+0xda8>
   122b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   122bc:	ldrd	r0, [r3, #96]	; 0x60
   122c0:	movw	r3, #4564	; 0x11d4
   122c4:	movt	r3, #3
   122c8:	ldr	r3, [r3]
   122cc:	ldrd	r2, [r3]
   122d0:	cmp	r1, r3
   122d4:	cmpeq	r0, r2
   122d8:	bne	123cc <__assert_fail@plt+0xda8>
   122dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   122e0:	ldrd	r0, [r3]
   122e4:	movw	r3, #4564	; 0x11d4
   122e8:	movt	r3, #3
   122ec:	ldr	r3, [r3]
   122f0:	ldrd	r2, [r3, #8]
   122f4:	cmp	r1, r3
   122f8:	cmpeq	r0, r2
   122fc:	bne	123cc <__assert_fail@plt+0xda8>
   12300:	movw	r1, #63520	; 0xf820
   12304:	movt	r1, #1
   12308:	ldr	r0, [fp, #-20]	; 0xffffffec
   1230c:	bl	1127c <strcmp@plt>
   12310:	mov	r3, r0
   12314:	cmp	r3, #0
   12318:	bne	12350 <__assert_fail@plt+0xd2c>
   1231c:	movw	r0, #63524	; 0xf824
   12320:	movt	r0, #1
   12324:	bl	11474 <gettext@plt>
   12328:	mov	r4, r0
   1232c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12330:	mov	r0, #4
   12334:	bl	1a96c <__assert_fail@plt+0x9348>
   12338:	mov	r3, r0
   1233c:	mov	r2, r4
   12340:	mov	r1, #0
   12344:	mov	r0, #0
   12348:	bl	113cc <error@plt>
   1234c:	b	123a4 <__assert_fail@plt+0xd80>
   12350:	movw	r0, #63572	; 0xf854
   12354:	movt	r0, #1
   12358:	bl	11474 <gettext@plt>
   1235c:	mov	r4, r0
   12360:	ldr	r2, [fp, #-20]	; 0xffffffec
   12364:	mov	r1, #4
   12368:	mov	r0, #0
   1236c:	bl	1a8b8 <__assert_fail@plt+0x9294>
   12370:	mov	r5, r0
   12374:	movw	r2, #63520	; 0xf820
   12378:	movt	r2, #1
   1237c:	mov	r1, #4
   12380:	mov	r0, #1
   12384:	bl	1a8b8 <__assert_fail@plt+0x9294>
   12388:	mov	r3, r0
   1238c:	str	r3, [sp]
   12390:	mov	r3, r5
   12394:	mov	r2, r4
   12398:	mov	r1, #0
   1239c:	mov	r0, #0
   123a0:	bl	113cc <error@plt>
   123a4:	movw	r0, #63632	; 0xf890
   123a8:	movt	r0, #1
   123ac:	bl	11474 <gettext@plt>
   123b0:	mov	r3, r0
   123b4:	mov	r2, r3
   123b8:	mov	r1, #0
   123bc:	mov	r0, #0
   123c0:	bl	113cc <error@plt>
   123c4:	mov	r3, #0
   123c8:	strb	r3, [fp, #-13]
   123cc:	ldrb	r3, [fp, #-13]
   123d0:	cmp	r3, #0
   123d4:	beq	12440 <__assert_fail@plt+0xe1c>
   123d8:	movw	r3, #4562	; 0x11d2
   123dc:	movt	r3, #3
   123e0:	ldrb	r3, [r3]
   123e4:	cmp	r3, #0
   123e8:	beq	12418 <__assert_fail@plt+0xdf4>
   123ec:	movw	r0, #63924	; 0xf9b4
   123f0:	movt	r0, #1
   123f4:	bl	11474 <gettext@plt>
   123f8:	mov	r4, r0
   123fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   12400:	mov	r0, #4
   12404:	bl	1a96c <__assert_fail@plt+0x9348>
   12408:	mov	r3, r0
   1240c:	mov	r1, r3
   12410:	mov	r0, r4
   12414:	bl	11288 <printf@plt>
   12418:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1241c:	ldr	r3, [r3, #32]
   12420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12424:	mov	r0, r3
   12428:	bl	11c54 <__assert_fail@plt+0x630>
   1242c:	mov	r3, r0
   12430:	cmp	r3, #0
   12434:	beq	12440 <__assert_fail@plt+0xe1c>
   12438:	mov	r3, #0
   1243c:	strb	r3, [fp, #-13]
   12440:	movw	r3, #4561	; 0x11d1
   12444:	movt	r3, #3
   12448:	ldrb	r3, [r3]
   1244c:	eor	r3, r3, #1
   12450:	uxtb	r3, r3
   12454:	cmp	r3, #0
   12458:	beq	1246c <__assert_fail@plt+0xe48>
   1245c:	mov	r2, #4
   12460:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12464:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12468:	bl	14b94 <__assert_fail@plt+0x3570>
   1246c:	ldrb	r3, [fp, #-13]
   12470:	mov	r0, r3
   12474:	sub	sp, fp, #12
   12478:	ldrd	r4, [sp]
   1247c:	ldr	fp, [sp, #8]
   12480:	add	sp, sp, #12
   12484:	pop	{pc}		; (ldr pc, [sp], #4)
   12488:	str	r4, [sp, #-12]!
   1248c:	str	fp, [sp, #4]
   12490:	str	lr, [sp, #8]
   12494:	add	fp, sp, #8
   12498:	sub	sp, sp, #28
   1249c:	str	r0, [fp, #-32]	; 0xffffffe0
   124a0:	str	r1, [fp, #-36]	; 0xffffffdc
   124a4:	mov	r3, #1
   124a8:	strb	r3, [fp, #-13]
   124ac:	mov	r2, #0
   124b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   124b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   124b8:	bl	1cc14 <__assert_fail@plt+0xb5f0>
   124bc:	mov	r3, r0
   124c0:	str	r3, [fp, #-20]	; 0xffffffec
   124c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   124c8:	bl	143e8 <__assert_fail@plt+0x2dc4>
   124cc:	str	r0, [fp, #-24]	; 0xffffffe8
   124d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124d4:	cmp	r3, #0
   124d8:	bne	12528 <__assert_fail@plt+0xf04>
   124dc:	bl	114bc <__errno_location@plt>
   124e0:	mov	r3, r0
   124e4:	ldr	r3, [r3]
   124e8:	cmp	r3, #0
   124ec:	beq	12558 <__assert_fail@plt+0xf34>
   124f0:	bl	114bc <__errno_location@plt>
   124f4:	mov	r3, r0
   124f8:	ldr	r4, [r3]
   124fc:	movw	r0, #63960	; 0xf9d8
   12500:	movt	r0, #1
   12504:	bl	11474 <gettext@plt>
   12508:	mov	r3, r0
   1250c:	mov	r2, r3
   12510:	mov	r1, r4
   12514:	mov	r0, #0
   12518:	bl	113cc <error@plt>
   1251c:	mov	r3, #0
   12520:	strb	r3, [fp, #-13]
   12524:	b	12558 <__assert_fail@plt+0xf34>
   12528:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1252c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12530:	bl	11f04 <__assert_fail@plt+0x8e0>
   12534:	mov	r3, r0
   12538:	mov	r2, r3
   1253c:	ldrb	r3, [fp, #-13]
   12540:	and	r3, r3, r2
   12544:	cmp	r3, #0
   12548:	movne	r3, #1
   1254c:	moveq	r3, #0
   12550:	strb	r3, [fp, #-13]
   12554:	b	124c4 <__assert_fail@plt+0xea0>
   12558:	nop	{0}
   1255c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12560:	bl	13e84 <__assert_fail@plt+0x2860>
   12564:	mov	r3, r0
   12568:	cmp	r3, #0
   1256c:	beq	125a4 <__assert_fail@plt+0xf80>
   12570:	bl	114bc <__errno_location@plt>
   12574:	mov	r3, r0
   12578:	ldr	r4, [r3]
   1257c:	movw	r0, #63976	; 0xf9e8
   12580:	movt	r0, #1
   12584:	bl	11474 <gettext@plt>
   12588:	mov	r3, r0
   1258c:	mov	r2, r3
   12590:	mov	r1, r4
   12594:	mov	r0, #0
   12598:	bl	113cc <error@plt>
   1259c:	mov	r3, #0
   125a0:	strb	r3, [fp, #-13]
   125a4:	ldrb	r3, [fp, #-13]
   125a8:	mov	r0, r3
   125ac:	sub	sp, fp, #8
   125b0:	ldr	r4, [sp]
   125b4:	ldr	fp, [sp, #4]
   125b8:	add	sp, sp, #8
   125bc:	pop	{pc}		; (ldr pc, [sp], #4)
   125c0:	str	r4, [sp, #-12]!
   125c4:	str	fp, [sp, #4]
   125c8:	str	lr, [sp, #8]
   125cc:	add	fp, sp, #8
   125d0:	sub	sp, sp, #12
   125d4:	str	r0, [fp, #-16]
   125d8:	ldr	r3, [fp, #-16]
   125dc:	cmp	r3, #0
   125e0:	beq	1261c <__assert_fail@plt+0xff8>
   125e4:	movw	r3, #4544	; 0x11c0
   125e8:	movt	r3, #3
   125ec:	ldr	r4, [r3]
   125f0:	movw	r0, #63996	; 0xf9fc
   125f4:	movt	r0, #1
   125f8:	bl	11474 <gettext@plt>
   125fc:	mov	r1, r0
   12600:	movw	r3, #4616	; 0x1208
   12604:	movt	r3, #3
   12608:	ldr	r3, [r3]
   1260c:	mov	r2, r3
   12610:	mov	r0, r4
   12614:	bl	114b0 <fprintf@plt>
   12618:	b	127f0 <__assert_fail@plt+0x11cc>
   1261c:	movw	r0, #64036	; 0xfa24
   12620:	movt	r0, #1
   12624:	bl	11474 <gettext@plt>
   12628:	movw	r3, #4616	; 0x1208
   1262c:	movt	r3, #3
   12630:	ldr	r1, [r3]
   12634:	movw	r3, #4616	; 0x1208
   12638:	movt	r3, #3
   1263c:	ldr	r2, [r3]
   12640:	movw	r3, #4616	; 0x1208
   12644:	movt	r3, #3
   12648:	ldr	r3, [r3]
   1264c:	bl	11288 <printf@plt>
   12650:	movw	r0, #64196	; 0xfac4
   12654:	movt	r0, #1
   12658:	bl	11474 <gettext@plt>
   1265c:	mov	r2, r0
   12660:	movw	r3, #4548	; 0x11c4
   12664:	movt	r3, #3
   12668:	ldr	r3, [r3]
   1266c:	mov	r1, r3
   12670:	mov	r0, r2
   12674:	bl	11258 <fputs_unlocked@plt>
   12678:	bl	11720 <__assert_fail@plt+0xfc>
   1267c:	movw	r0, #64336	; 0xfb50
   12680:	movt	r0, #1
   12684:	bl	11474 <gettext@plt>
   12688:	mov	r2, r0
   1268c:	movw	r3, #4548	; 0x11c4
   12690:	movt	r3, #3
   12694:	ldr	r3, [r3]
   12698:	mov	r1, r3
   1269c:	mov	r0, r2
   126a0:	bl	11258 <fputs_unlocked@plt>
   126a4:	movw	r0, #64568	; 0xfc38
   126a8:	movt	r0, #1
   126ac:	bl	11474 <gettext@plt>
   126b0:	mov	r2, r0
   126b4:	movw	r3, #4548	; 0x11c4
   126b8:	movt	r3, #3
   126bc:	ldr	r3, [r3]
   126c0:	mov	r1, r3
   126c4:	mov	r0, r2
   126c8:	bl	11258 <fputs_unlocked@plt>
   126cc:	movw	r0, #64852	; 0xfd54
   126d0:	movt	r0, #1
   126d4:	bl	11474 <gettext@plt>
   126d8:	mov	r2, r0
   126dc:	movw	r3, #4548	; 0x11c4
   126e0:	movt	r3, #3
   126e4:	ldr	r3, [r3]
   126e8:	mov	r1, r3
   126ec:	mov	r0, r2
   126f0:	bl	11258 <fputs_unlocked@plt>
   126f4:	movw	r0, #64980	; 0xfdd4
   126f8:	movt	r0, #1
   126fc:	bl	11474 <gettext@plt>
   12700:	mov	r2, r0
   12704:	movw	r3, #4548	; 0x11c4
   12708:	movt	r3, #3
   1270c:	ldr	r3, [r3]
   12710:	mov	r1, r3
   12714:	mov	r0, r2
   12718:	bl	11258 <fputs_unlocked@plt>
   1271c:	movw	r0, #65100	; 0xfe4c
   12720:	movt	r0, #1
   12724:	bl	11474 <gettext@plt>
   12728:	mov	r2, r0
   1272c:	movw	r3, #4548	; 0x11c4
   12730:	movt	r3, #3
   12734:	ldr	r3, [r3]
   12738:	mov	r1, r3
   1273c:	mov	r0, r2
   12740:	bl	11258 <fputs_unlocked@plt>
   12744:	movw	r0, #65172	; 0xfe94
   12748:	movt	r0, #1
   1274c:	bl	11474 <gettext@plt>
   12750:	mov	r2, r0
   12754:	movw	r3, #4548	; 0x11c4
   12758:	movt	r3, #3
   1275c:	ldr	r3, [r3]
   12760:	mov	r1, r3
   12764:	mov	r0, r2
   12768:	bl	11258 <fputs_unlocked@plt>
   1276c:	movw	r0, #65244	; 0xfedc
   12770:	movt	r0, #1
   12774:	bl	11474 <gettext@plt>
   12778:	mov	r2, r0
   1277c:	movw	r3, #4548	; 0x11c4
   12780:	movt	r3, #3
   12784:	ldr	r3, [r3]
   12788:	mov	r1, r3
   1278c:	mov	r0, r2
   12790:	bl	11258 <fputs_unlocked@plt>
   12794:	movw	r0, #176	; 0xb0
   12798:	movt	r0, #2
   1279c:	bl	11474 <gettext@plt>
   127a0:	mov	r2, r0
   127a4:	movw	r3, #4548	; 0x11c4
   127a8:	movt	r3, #3
   127ac:	ldr	r3, [r3]
   127b0:	mov	r1, r3
   127b4:	mov	r0, r2
   127b8:	bl	11258 <fputs_unlocked@plt>
   127bc:	movw	r0, #224	; 0xe0
   127c0:	movt	r0, #2
   127c4:	bl	11474 <gettext@plt>
   127c8:	mov	r2, r0
   127cc:	movw	r3, #4548	; 0x11c4
   127d0:	movt	r3, #3
   127d4:	ldr	r3, [r3]
   127d8:	mov	r1, r3
   127dc:	mov	r0, r2
   127e0:	bl	11258 <fputs_unlocked@plt>
   127e4:	movw	r0, #280	; 0x118
   127e8:	movt	r0, #2
   127ec:	bl	11768 <__assert_fail@plt+0x144>
   127f0:	ldr	r0, [fp, #-16]
   127f4:	bl	1145c <exit@plt>
   127f8:	strd	r4, [sp, #-16]!
   127fc:	str	fp, [sp, #8]
   12800:	str	lr, [sp, #12]
   12804:	add	fp, sp, #12
   12808:	sub	sp, sp, #56	; 0x38
   1280c:	str	r0, [fp, #-48]	; 0xffffffd0
   12810:	str	r1, [fp, #-52]	; 0xffffffcc
   12814:	mov	r3, #16
   12818:	str	r3, [fp, #-16]
   1281c:	mvn	r3, #0
   12820:	str	r3, [fp, #-20]	; 0xffffffec
   12824:	mov	r3, #0
   12828:	strb	r3, [fp, #-21]	; 0xffffffeb
   1282c:	mov	r3, #0
   12830:	strb	r3, [fp, #-22]	; 0xffffffea
   12834:	mov	r3, #0
   12838:	str	r3, [fp, #-28]	; 0xffffffe4
   1283c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12840:	ldr	r3, [r3]
   12844:	mov	r0, r3
   12848:	bl	184ec <__assert_fail@plt+0x6ec8>
   1284c:	movw	r1, #62748	; 0xf51c
   12850:	movt	r1, #1
   12854:	mov	r0, #6
   12858:	bl	11534 <setlocale@plt>
   1285c:	movw	r1, #288	; 0x120
   12860:	movt	r1, #2
   12864:	movw	r0, #62772	; 0xf534
   12868:	movt	r0, #1
   1286c:	bl	115ac <bindtextdomain@plt>
   12870:	movw	r0, #62772	; 0xf534
   12874:	movt	r0, #1
   12878:	bl	1133c <textdomain@plt>
   1287c:	movw	r0, #12284	; 0x2ffc
   12880:	movt	r0, #1
   12884:	bl	1f35c <__assert_fail@plt+0xdd38>
   12888:	b	12b44 <__assert_fail@plt+0x1520>
   1288c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12890:	cmp	r3, #108	; 0x6c
   12894:	beq	12ab8 <__assert_fail@plt+0x1494>
   12898:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1289c:	cmp	r3, #108	; 0x6c
   128a0:	bgt	12928 <__assert_fail@plt+0x1304>
   128a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   128a8:	cmp	r3, #76	; 0x4c
   128ac:	beq	129c8 <__assert_fail@plt+0x13a4>
   128b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   128b4:	cmp	r3, #76	; 0x4c
   128b8:	bgt	128e4 <__assert_fail@plt+0x12c0>
   128bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   128c0:	cmn	r3, #2
   128c4:	beq	12adc <__assert_fail@plt+0x14b8>
   128c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   128cc:	cmp	r3, #72	; 0x48
   128d0:	beq	129bc <__assert_fail@plt+0x1398>
   128d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   128d8:	cmn	r3, #3
   128dc:	beq	12ae4 <__assert_fail@plt+0x14c0>
   128e0:	b	12b3c <__assert_fail@plt+0x1518>
   128e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   128e8:	cmp	r3, #82	; 0x52
   128ec:	beq	12a24 <__assert_fail@plt+0x1400>
   128f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   128f4:	cmp	r3, #82	; 0x52
   128f8:	bgt	1290c <__assert_fail@plt+0x12e8>
   128fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12900:	cmp	r3, #80	; 0x50
   12904:	beq	129d4 <__assert_fail@plt+0x13b0>
   12908:	b	12b3c <__assert_fail@plt+0x1518>
   1290c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12910:	cmp	r3, #102	; 0x66
   12914:	beq	12b44 <__assert_fail@plt+0x1520>
   12918:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1291c:	cmp	r3, #104	; 0x68
   12920:	beq	129e0 <__assert_fail@plt+0x13bc>
   12924:	b	12b3c <__assert_fail@plt+0x1518>
   12928:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1292c:	cmp	r3, #118	; 0x76
   12930:	beq	12a38 <__assert_fail@plt+0x1414>
   12934:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12938:	cmp	r3, #118	; 0x76
   1293c:	bgt	12968 <__assert_fail@plt+0x1344>
   12940:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12944:	cmp	r3, #116	; 0x74
   12948:	beq	12a94 <__assert_fail@plt+0x1470>
   1294c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12950:	cmp	r3, #116	; 0x74
   12954:	bgt	12a4c <__assert_fail@plt+0x1428>
   12958:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1295c:	cmp	r3, #114	; 0x72
   12960:	beq	12a70 <__assert_fail@plt+0x144c>
   12964:	b	12b3c <__assert_fail@plt+0x1518>
   12968:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1296c:	movw	r2, #257	; 0x101
   12970:	cmp	r3, r2
   12974:	beq	129f8 <__assert_fail@plt+0x13d4>
   12978:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1297c:	movw	r2, #257	; 0x101
   12980:	cmp	r3, r2
   12984:	bgt	12998 <__assert_fail@plt+0x1374>
   12988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1298c:	cmp	r3, #256	; 0x100
   12990:	beq	129ec <__assert_fail@plt+0x13c8>
   12994:	b	12b3c <__assert_fail@plt+0x1518>
   12998:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1299c:	movw	r2, #258	; 0x102
   129a0:	cmp	r3, r2
   129a4:	beq	12a04 <__assert_fail@plt+0x13e0>
   129a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   129ac:	movw	r2, #259	; 0x103
   129b0:	cmp	r3, r2
   129b4:	beq	12a10 <__assert_fail@plt+0x13ec>
   129b8:	b	12b3c <__assert_fail@plt+0x1518>
   129bc:	mov	r3, #17
   129c0:	str	r3, [fp, #-16]
   129c4:	b	12b44 <__assert_fail@plt+0x1520>
   129c8:	mov	r3, #2
   129cc:	str	r3, [fp, #-16]
   129d0:	b	12b44 <__assert_fail@plt+0x1520>
   129d4:	mov	r3, #16
   129d8:	str	r3, [fp, #-16]
   129dc:	b	12b44 <__assert_fail@plt+0x1520>
   129e0:	mov	r3, #0
   129e4:	str	r3, [fp, #-20]	; 0xffffffec
   129e8:	b	12b44 <__assert_fail@plt+0x1520>
   129ec:	mov	r3, #1
   129f0:	str	r3, [fp, #-20]	; 0xffffffec
   129f4:	b	12b44 <__assert_fail@plt+0x1520>
   129f8:	mov	r3, #0
   129fc:	strb	r3, [fp, #-21]	; 0xffffffeb
   12a00:	b	12b44 <__assert_fail@plt+0x1520>
   12a04:	mov	r3, #1
   12a08:	strb	r3, [fp, #-21]	; 0xffffffeb
   12a0c:	b	12b44 <__assert_fail@plt+0x1520>
   12a10:	movw	r3, #4552	; 0x11c8
   12a14:	movt	r3, #3
   12a18:	ldr	r3, [r3]
   12a1c:	str	r3, [fp, #-28]	; 0xffffffe4
   12a20:	b	12b44 <__assert_fail@plt+0x1520>
   12a24:	movw	r3, #4561	; 0x11d1
   12a28:	movt	r3, #3
   12a2c:	mov	r2, #1
   12a30:	strb	r2, [r3]
   12a34:	b	12b44 <__assert_fail@plt+0x1520>
   12a38:	movw	r3, #4562	; 0x11d2
   12a3c:	movt	r3, #3
   12a40:	mov	r2, #1
   12a44:	strb	r2, [r3]
   12a48:	b	12b44 <__assert_fail@plt+0x1520>
   12a4c:	movw	r3, #4552	; 0x11c8
   12a50:	movt	r3, #3
   12a54:	ldr	r2, [r3]
   12a58:	movw	r3, #4572	; 0x11dc
   12a5c:	movt	r3, #3
   12a60:	str	r2, [r3]
   12a64:	mov	r3, #1
   12a68:	strb	r3, [fp, #-22]	; 0xffffffea
   12a6c:	b	12b44 <__assert_fail@plt+0x1520>
   12a70:	movw	r3, #4552	; 0x11c8
   12a74:	movt	r3, #3
   12a78:	ldr	r2, [r3]
   12a7c:	movw	r3, #4576	; 0x11e0
   12a80:	movt	r3, #3
   12a84:	str	r2, [r3]
   12a88:	mov	r3, #1
   12a8c:	strb	r3, [fp, #-22]	; 0xffffffea
   12a90:	b	12b44 <__assert_fail@plt+0x1520>
   12a94:	movw	r3, #4552	; 0x11c8
   12a98:	movt	r3, #3
   12a9c:	ldr	r2, [r3]
   12aa0:	movw	r3, #4584	; 0x11e8
   12aa4:	movt	r3, #3
   12aa8:	str	r2, [r3]
   12aac:	mov	r3, #1
   12ab0:	strb	r3, [fp, #-22]	; 0xffffffea
   12ab4:	b	12b44 <__assert_fail@plt+0x1520>
   12ab8:	movw	r3, #4552	; 0x11c8
   12abc:	movt	r3, #3
   12ac0:	ldr	r2, [r3]
   12ac4:	movw	r3, #4580	; 0x11e4
   12ac8:	movt	r3, #3
   12acc:	str	r2, [r3]
   12ad0:	mov	r3, #1
   12ad4:	strb	r3, [fp, #-22]	; 0xffffffea
   12ad8:	b	12b44 <__assert_fail@plt+0x1520>
   12adc:	mov	r0, #0
   12ae0:	bl	125c0 <__assert_fail@plt+0xf9c>
   12ae4:	movw	r3, #4548	; 0x11c4
   12ae8:	movt	r3, #3
   12aec:	ldr	r0, [r3]
   12af0:	movw	r3, #4456	; 0x1168
   12af4:	movt	r3, #3
   12af8:	ldr	r2, [r3]
   12afc:	mov	r3, #0
   12b00:	str	r3, [sp, #8]
   12b04:	movw	r3, #312	; 0x138
   12b08:	movt	r3, #2
   12b0c:	str	r3, [sp, #4]
   12b10:	movw	r3, #328	; 0x148
   12b14:	movt	r3, #2
   12b18:	str	r3, [sp]
   12b1c:	mov	r3, r2
   12b20:	movw	r2, #62564	; 0xf464
   12b24:	movt	r2, #1
   12b28:	movw	r1, #280	; 0x118
   12b2c:	movt	r1, #2
   12b30:	bl	1c1dc <__assert_fail@plt+0xabb8>
   12b34:	mov	r0, #0
   12b38:	bl	1145c <exit@plt>
   12b3c:	mov	r0, #1
   12b40:	bl	125c0 <__assert_fail@plt+0xf9c>
   12b44:	mov	r3, #0
   12b48:	str	r3, [sp]
   12b4c:	movw	r3, #63072	; 0xf660
   12b50:	movt	r3, #1
   12b54:	movw	r2, #344	; 0x158
   12b58:	movt	r2, #2
   12b5c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12b60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12b64:	bl	11438 <getopt_long@plt>
   12b68:	str	r0, [fp, #-32]	; 0xffffffe0
   12b6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12b70:	cmn	r3, #1
   12b74:	bne	1288c <__assert_fail@plt+0x1268>
   12b78:	movw	r3, #4561	; 0x11d1
   12b7c:	movt	r3, #3
   12b80:	ldrb	r3, [r3]
   12b84:	cmp	r3, #0
   12b88:	beq	12c18 <__assert_fail@plt+0x15f4>
   12b8c:	ldr	r3, [fp, #-16]
   12b90:	cmp	r3, #16
   12b94:	bne	12bd8 <__assert_fail@plt+0x15b4>
   12b98:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b9c:	cmp	r3, #1
   12ba0:	bne	12bc4 <__assert_fail@plt+0x15a0>
   12ba4:	movw	r0, #360	; 0x168
   12ba8:	movt	r0, #2
   12bac:	bl	11474 <gettext@plt>
   12bb0:	mov	r3, r0
   12bb4:	mov	r2, r3
   12bb8:	mov	r1, #0
   12bbc:	mov	r0, #1
   12bc0:	bl	113cc <error@plt>
   12bc4:	movw	r3, #4560	; 0x11d0
   12bc8:	movt	r3, #3
   12bcc:	mov	r2, #0
   12bd0:	strb	r2, [r3]
   12bd4:	b	12c40 <__assert_fail@plt+0x161c>
   12bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   12bdc:	cmp	r3, #0
   12be0:	bne	12c04 <__assert_fail@plt+0x15e0>
   12be4:	movw	r0, #404	; 0x194
   12be8:	movt	r0, #2
   12bec:	bl	11474 <gettext@plt>
   12bf0:	mov	r3, r0
   12bf4:	mov	r2, r3
   12bf8:	mov	r1, #0
   12bfc:	mov	r0, #1
   12c00:	bl	113cc <error@plt>
   12c04:	movw	r3, #4560	; 0x11d0
   12c08:	movt	r3, #3
   12c0c:	mov	r2, #1
   12c10:	strb	r2, [r3]
   12c14:	b	12c40 <__assert_fail@plt+0x161c>
   12c18:	mov	r3, #16
   12c1c:	str	r3, [fp, #-16]
   12c20:	ldr	r3, [fp, #-20]	; 0xffffffec
   12c24:	cmp	r3, #0
   12c28:	movne	r3, #1
   12c2c:	moveq	r3, #0
   12c30:	uxtb	r2, r3
   12c34:	movw	r3, #4560	; 0x11d0
   12c38:	movt	r3, #3
   12c3c:	strb	r2, [r3]
   12c40:	movw	r3, #4536	; 0x11b8
   12c44:	movt	r3, #3
   12c48:	ldr	r3, [r3]
   12c4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12c50:	sub	r3, r2, r3
   12c54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12c58:	cmp	r2, #0
   12c5c:	bne	12c6c <__assert_fail@plt+0x1648>
   12c60:	ldrb	r2, [fp, #-22]	; 0xffffffea
   12c64:	cmp	r2, #0
   12c68:	beq	12c74 <__assert_fail@plt+0x1650>
   12c6c:	mov	r2, #1
   12c70:	b	12c78 <__assert_fail@plt+0x1654>
   12c74:	mov	r2, #2
   12c78:	cmp	r2, r3
   12c7c:	ble	12d08 <__assert_fail@plt+0x16e4>
   12c80:	movw	r3, #4536	; 0x11b8
   12c84:	movt	r3, #3
   12c88:	ldr	r3, [r3]
   12c8c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12c90:	cmp	r2, r3
   12c94:	bgt	12cbc <__assert_fail@plt+0x1698>
   12c98:	movw	r0, #424	; 0x1a8
   12c9c:	movt	r0, #2
   12ca0:	bl	11474 <gettext@plt>
   12ca4:	mov	r3, r0
   12ca8:	mov	r2, r3
   12cac:	mov	r1, #0
   12cb0:	mov	r0, #0
   12cb4:	bl	113cc <error@plt>
   12cb8:	b	12d00 <__assert_fail@plt+0x16dc>
   12cbc:	movw	r0, #440	; 0x1b8
   12cc0:	movt	r0, #2
   12cc4:	bl	11474 <gettext@plt>
   12cc8:	mov	r4, r0
   12ccc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12cd0:	sub	r3, r3, #-1073741823	; 0xc0000001
   12cd4:	lsl	r3, r3, #2
   12cd8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12cdc:	add	r3, r2, r3
   12ce0:	ldr	r3, [r3]
   12ce4:	mov	r0, r3
   12ce8:	bl	1ae4c <__assert_fail@plt+0x9828>
   12cec:	mov	r3, r0
   12cf0:	mov	r2, r4
   12cf4:	mov	r1, #0
   12cf8:	mov	r0, #0
   12cfc:	bl	113cc <error@plt>
   12d00:	mov	r0, #1
   12d04:	bl	125c0 <__assert_fail@plt+0xf9c>
   12d08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12d0c:	cmp	r3, #0
   12d10:	beq	12d88 <__assert_fail@plt+0x1764>
   12d14:	mov	r3, #0
   12d18:	str	r3, [fp, #-40]	; 0xffffffd8
   12d1c:	sub	r3, fp, #40	; 0x28
   12d20:	mov	r1, r3
   12d24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12d28:	bl	1b9a8 <__assert_fail@plt+0xa384>
   12d2c:	mov	r3, r0
   12d30:	cmp	r3, #0
   12d34:	bge	12d74 <__assert_fail@plt+0x1750>
   12d38:	bl	114bc <__errno_location@plt>
   12d3c:	mov	r3, r0
   12d40:	ldr	r4, [r3]
   12d44:	movw	r0, #63388	; 0xf79c
   12d48:	movt	r0, #1
   12d4c:	bl	11474 <gettext@plt>
   12d50:	mov	r5, r0
   12d54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d58:	mov	r0, #4
   12d5c:	bl	1a96c <__assert_fail@plt+0x9348>
   12d60:	mov	r3, r0
   12d64:	mov	r2, r5
   12d68:	mov	r1, r4
   12d6c:	mov	r0, #1
   12d70:	bl	113cc <error@plt>
   12d74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12d78:	movw	r3, #4568	; 0x11d8
   12d7c:	movt	r3, #3
   12d80:	str	r2, [r3]
   12d84:	b	12e58 <__assert_fail@plt+0x1834>
   12d88:	ldrb	r3, [fp, #-22]	; 0xffffffea
   12d8c:	cmp	r3, #0
   12d90:	beq	12da8 <__assert_fail@plt+0x1784>
   12d94:	movw	r3, #4568	; 0x11d8
   12d98:	movt	r3, #3
   12d9c:	mov	r2, #0
   12da0:	str	r2, [r3]
   12da4:	b	12e58 <__assert_fail@plt+0x1834>
   12da8:	movw	r3, #4536	; 0x11b8
   12dac:	movt	r3, #3
   12db0:	ldr	r2, [r3]
   12db4:	add	r1, r2, #1
   12db8:	movw	r3, #4536	; 0x11b8
   12dbc:	movt	r3, #3
   12dc0:	str	r1, [r3]
   12dc4:	mov	r3, r2
   12dc8:	lsl	r3, r3, #2
   12dcc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12dd0:	add	r3, r2, r3
   12dd4:	ldr	r2, [r3]
   12dd8:	movw	r3, #4568	; 0x11d8
   12ddc:	movt	r3, #3
   12de0:	str	r2, [r3]
   12de4:	bl	11270 <is_selinux_enabled@plt>
   12de8:	mov	r3, r0
   12dec:	cmp	r3, #0
   12df0:	ble	12e58 <__assert_fail@plt+0x1834>
   12df4:	movw	r3, #4568	; 0x11d8
   12df8:	movt	r3, #3
   12dfc:	ldr	r3, [r3]
   12e00:	mov	r0, r3
   12e04:	bl	113d8 <security_check_context@plt>
   12e08:	mov	r3, r0
   12e0c:	cmp	r3, #0
   12e10:	bge	12e58 <__assert_fail@plt+0x1834>
   12e14:	bl	114bc <__errno_location@plt>
   12e18:	mov	r3, r0
   12e1c:	ldr	r4, [r3]
   12e20:	movw	r0, #468	; 0x1d4
   12e24:	movt	r0, #2
   12e28:	bl	11474 <gettext@plt>
   12e2c:	mov	r5, r0
   12e30:	movw	r3, #4568	; 0x11d8
   12e34:	movt	r3, #3
   12e38:	ldr	r3, [r3]
   12e3c:	mov	r0, r3
   12e40:	bl	1ae4c <__assert_fail@plt+0x9828>
   12e44:	mov	r3, r0
   12e48:	mov	r2, r5
   12e4c:	mov	r1, r4
   12e50:	mov	r0, #1
   12e54:	bl	113cc <error@plt>
   12e58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12e5c:	cmp	r3, #0
   12e60:	beq	12e98 <__assert_fail@plt+0x1874>
   12e64:	ldrb	r3, [fp, #-22]	; 0xffffffea
   12e68:	cmp	r3, #0
   12e6c:	beq	12e98 <__assert_fail@plt+0x1874>
   12e70:	movw	r0, #488	; 0x1e8
   12e74:	movt	r0, #2
   12e78:	bl	11474 <gettext@plt>
   12e7c:	mov	r3, r0
   12e80:	mov	r2, r3
   12e84:	mov	r1, #0
   12e88:	mov	r0, #0
   12e8c:	bl	113cc <error@plt>
   12e90:	mov	r0, #1
   12e94:	bl	125c0 <__assert_fail@plt+0xf9c>
   12e98:	movw	r3, #4561	; 0x11d1
   12e9c:	movt	r3, #3
   12ea0:	ldrb	r3, [r3]
   12ea4:	cmp	r3, #0
   12ea8:	beq	12f28 <__assert_fail@plt+0x1904>
   12eac:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12eb0:	cmp	r3, #0
   12eb4:	beq	12f28 <__assert_fail@plt+0x1904>
   12eb8:	movw	r0, #4592	; 0x11f0
   12ebc:	movt	r0, #3
   12ec0:	bl	1ae84 <__assert_fail@plt+0x9860>
   12ec4:	mov	r2, r0
   12ec8:	movw	r3, #4564	; 0x11d4
   12ecc:	movt	r3, #3
   12ed0:	str	r2, [r3]
   12ed4:	movw	r3, #4564	; 0x11d4
   12ed8:	movt	r3, #3
   12edc:	ldr	r3, [r3]
   12ee0:	cmp	r3, #0
   12ee4:	bne	12f3c <__assert_fail@plt+0x1918>
   12ee8:	bl	114bc <__errno_location@plt>
   12eec:	mov	r3, r0
   12ef0:	ldr	r4, [r3]
   12ef4:	movw	r0, #536	; 0x218
   12ef8:	movt	r0, #2
   12efc:	bl	11474 <gettext@plt>
   12f00:	mov	r5, r0
   12f04:	movw	r1, #63520	; 0xf820
   12f08:	movt	r1, #1
   12f0c:	mov	r0, #4
   12f10:	bl	1a96c <__assert_fail@plt+0x9348>
   12f14:	mov	r3, r0
   12f18:	mov	r2, r5
   12f1c:	mov	r1, r4
   12f20:	mov	r0, #1
   12f24:	bl	113cc <error@plt>
   12f28:	movw	r3, #4564	; 0x11d4
   12f2c:	movt	r3, #3
   12f30:	mov	r2, #0
   12f34:	str	r2, [r3]
   12f38:	b	12f40 <__assert_fail@plt+0x191c>
   12f3c:	nop	{0}
   12f40:	movw	r3, #4536	; 0x11b8
   12f44:	movt	r3, #3
   12f48:	ldr	r3, [r3]
   12f4c:	lsl	r3, r3, #2
   12f50:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12f54:	add	r2, r2, r3
   12f58:	ldr	r3, [fp, #-16]
   12f5c:	orr	r3, r3, #8
   12f60:	mov	r1, r3
   12f64:	mov	r0, r2
   12f68:	bl	12488 <__assert_fail@plt+0xe64>
   12f6c:	mov	r3, r0
   12f70:	strb	r3, [fp, #-33]	; 0xffffffdf
   12f74:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12f78:	eor	r3, r3, #1
   12f7c:	uxtb	r3, r3
   12f80:	mov	r0, r3
   12f84:	sub	sp, fp, #12
   12f88:	ldrd	r4, [sp]
   12f8c:	ldr	fp, [sp, #8]
   12f90:	add	sp, sp, #12
   12f94:	pop	{pc}		; (ldr pc, [sp], #4)
   12f98:	push	{fp}		; (str fp, [sp, #-4]!)
   12f9c:	add	fp, sp, #0
   12fa0:	sub	sp, sp, #12
   12fa4:	str	r0, [fp, #-8]
   12fa8:	movw	r3, #4608	; 0x1200
   12fac:	movt	r3, #3
   12fb0:	ldr	r2, [fp, #-8]
   12fb4:	str	r2, [r3]
   12fb8:	nop	{0}
   12fbc:	add	sp, fp, #0
   12fc0:	pop	{fp}		; (ldr fp, [sp], #4)
   12fc4:	bx	lr
   12fc8:	push	{fp}		; (str fp, [sp, #-4]!)
   12fcc:	add	fp, sp, #0
   12fd0:	sub	sp, sp, #12
   12fd4:	mov	r3, r0
   12fd8:	strb	r3, [fp, #-5]
   12fdc:	movw	r3, #4612	; 0x1204
   12fe0:	movt	r3, #3
   12fe4:	ldrb	r2, [fp, #-5]
   12fe8:	strb	r2, [r3]
   12fec:	nop	{0}
   12ff0:	add	sp, fp, #0
   12ff4:	pop	{fp}		; (ldr fp, [sp], #4)
   12ff8:	bx	lr
   12ffc:	str	r4, [sp, #-12]!
   13000:	str	fp, [sp, #4]
   13004:	str	lr, [sp, #8]
   13008:	add	fp, sp, #8
   1300c:	sub	sp, sp, #20
   13010:	movw	r3, #4548	; 0x11c4
   13014:	movt	r3, #3
   13018:	ldr	r3, [r3]
   1301c:	mov	r0, r3
   13020:	bl	1d4ec <__assert_fail@plt+0xbec8>
   13024:	mov	r3, r0
   13028:	cmp	r3, #0
   1302c:	beq	13100 <__assert_fail@plt+0x1adc>
   13030:	movw	r3, #4612	; 0x1204
   13034:	movt	r3, #3
   13038:	ldrb	r3, [r3]
   1303c:	eor	r3, r3, #1
   13040:	uxtb	r3, r3
   13044:	cmp	r3, #0
   13048:	bne	13060 <__assert_fail@plt+0x1a3c>
   1304c:	bl	114bc <__errno_location@plt>
   13050:	mov	r3, r0
   13054:	ldr	r3, [r3]
   13058:	cmp	r3, #32
   1305c:	beq	13100 <__assert_fail@plt+0x1adc>
   13060:	movw	r0, #584	; 0x248
   13064:	movt	r0, #2
   13068:	bl	11474 <gettext@plt>
   1306c:	str	r0, [fp, #-16]
   13070:	movw	r3, #4608	; 0x1200
   13074:	movt	r3, #3
   13078:	ldr	r3, [r3]
   1307c:	cmp	r3, #0
   13080:	beq	130cc <__assert_fail@plt+0x1aa8>
   13084:	bl	114bc <__errno_location@plt>
   13088:	mov	r3, r0
   1308c:	ldr	r4, [r3]
   13090:	movw	r3, #4608	; 0x1200
   13094:	movt	r3, #3
   13098:	ldr	r3, [r3]
   1309c:	mov	r0, r3
   130a0:	bl	1aad8 <__assert_fail@plt+0x94b4>
   130a4:	mov	r2, r0
   130a8:	ldr	r3, [fp, #-16]
   130ac:	str	r3, [sp]
   130b0:	mov	r3, r2
   130b4:	movw	r2, #596	; 0x254
   130b8:	movt	r2, #2
   130bc:	mov	r1, r4
   130c0:	mov	r0, #0
   130c4:	bl	113cc <error@plt>
   130c8:	b	130ec <__assert_fail@plt+0x1ac8>
   130cc:	bl	114bc <__errno_location@plt>
   130d0:	mov	r3, r0
   130d4:	ldr	r1, [r3]
   130d8:	ldr	r3, [fp, #-16]
   130dc:	movw	r2, #604	; 0x25c
   130e0:	movt	r2, #2
   130e4:	mov	r0, #0
   130e8:	bl	113cc <error@plt>
   130ec:	movw	r3, #4460	; 0x116c
   130f0:	movt	r3, #3
   130f4:	ldr	r3, [r3]
   130f8:	mov	r0, r3
   130fc:	bl	112c4 <_exit@plt>
   13100:	movw	r3, #4544	; 0x11c0
   13104:	movt	r3, #3
   13108:	ldr	r3, [r3]
   1310c:	mov	r0, r3
   13110:	bl	1d4ec <__assert_fail@plt+0xbec8>
   13114:	mov	r3, r0
   13118:	cmp	r3, #0
   1311c:	beq	13134 <__assert_fail@plt+0x1b10>
   13120:	movw	r3, #4460	; 0x116c
   13124:	movt	r3, #3
   13128:	ldr	r3, [r3]
   1312c:	mov	r0, r3
   13130:	bl	112c4 <_exit@plt>
   13134:	nop	{0}
   13138:	sub	sp, fp, #8
   1313c:	ldr	r4, [sp]
   13140:	ldr	fp, [sp, #4]
   13144:	add	sp, sp, #8
   13148:	pop	{pc}		; (ldr pc, [sp], #4)
   1314c:	push	{fp}		; (str fp, [sp, #-4]!)
   13150:	add	fp, sp, #0
   13154:	sub	sp, sp, #20
   13158:	str	r0, [fp, #-16]
   1315c:	str	r1, [fp, #-20]	; 0xffffffec
   13160:	ldr	r3, [fp, #-16]
   13164:	str	r3, [fp, #-8]
   13168:	ldr	r3, [fp, #-20]	; 0xffffffec
   1316c:	str	r3, [fp, #-12]
   13170:	ldr	r3, [fp, #-8]
   13174:	ldrd	r0, [r3, #8]
   13178:	ldr	r3, [fp, #-12]
   1317c:	ldrd	r2, [r3, #8]
   13180:	cmp	r1, r3
   13184:	cmpeq	r0, r2
   13188:	bne	131b0 <__assert_fail@plt+0x1b8c>
   1318c:	ldr	r3, [fp, #-8]
   13190:	ldrd	r0, [r3]
   13194:	ldr	r3, [fp, #-12]
   13198:	ldrd	r2, [r3]
   1319c:	cmp	r1, r3
   131a0:	cmpeq	r0, r2
   131a4:	bne	131b0 <__assert_fail@plt+0x1b8c>
   131a8:	mov	r3, #1
   131ac:	b	131b4 <__assert_fail@plt+0x1b90>
   131b0:	mov	r3, #0
   131b4:	and	r3, r3, #1
   131b8:	uxtb	r3, r3
   131bc:	mov	r0, r3
   131c0:	add	sp, fp, #0
   131c4:	pop	{fp}		; (ldr fp, [sp], #4)
   131c8:	bx	lr
   131cc:	str	fp, [sp, #-8]!
   131d0:	str	lr, [sp, #4]
   131d4:	add	fp, sp, #4
   131d8:	sub	sp, sp, #16
   131dc:	str	r0, [fp, #-16]
   131e0:	str	r1, [fp, #-20]	; 0xffffffec
   131e4:	ldr	r3, [fp, #-16]
   131e8:	str	r3, [fp, #-8]
   131ec:	ldr	r3, [fp, #-8]
   131f0:	ldrd	r0, [r3, #8]
   131f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   131f8:	mov	r2, r3
   131fc:	mov	r3, #0
   13200:	bl	1f184 <__assert_fail@plt+0xdb60>
   13204:	mov	r3, r2
   13208:	mov	r0, r3
   1320c:	sub	sp, fp, #4
   13210:	ldr	fp, [sp]
   13214:	add	sp, sp, #4
   13218:	pop	{pc}		; (ldr pc, [sp], #4)
   1321c:	str	fp, [sp, #-8]!
   13220:	str	lr, [sp, #4]
   13224:	add	fp, sp, #4
   13228:	sub	sp, sp, #16
   1322c:	str	r0, [fp, #-8]
   13230:	ldr	r3, [fp, #-8]
   13234:	ldr	r2, [r3, #48]	; 0x30
   13238:	movw	r3, #258	; 0x102
   1323c:	and	r3, r3, r2
   13240:	cmp	r3, #0
   13244:	beq	13298 <__assert_fail@plt+0x1c74>
   13248:	movw	r3, #56776	; 0xddc8
   1324c:	movt	r3, #1
   13250:	str	r3, [sp]
   13254:	movw	r3, #12620	; 0x314c
   13258:	movt	r3, #1
   1325c:	movw	r2, #12748	; 0x31cc
   13260:	movt	r2, #1
   13264:	mov	r1, #0
   13268:	mov	r0, #31
   1326c:	bl	1713c <__assert_fail@plt+0x5b18>
   13270:	mov	r3, r0
   13274:	mov	r2, r3
   13278:	ldr	r3, [fp, #-8]
   1327c:	str	r2, [r3, #56]	; 0x38
   13280:	ldr	r3, [fp, #-8]
   13284:	ldr	r3, [r3, #56]	; 0x38
   13288:	cmp	r3, #0
   1328c:	bne	132d8 <__assert_fail@plt+0x1cb4>
   13290:	mov	r3, #0
   13294:	b	132dc <__assert_fail@plt+0x1cb8>
   13298:	mov	r0, #32
   1329c:	bl	1ce10 <__assert_fail@plt+0xb7ec>
   132a0:	mov	r3, r0
   132a4:	mov	r2, r3
   132a8:	ldr	r3, [fp, #-8]
   132ac:	str	r2, [r3, #56]	; 0x38
   132b0:	ldr	r3, [fp, #-8]
   132b4:	ldr	r3, [r3, #56]	; 0x38
   132b8:	cmp	r3, #0
   132bc:	bne	132c8 <__assert_fail@plt+0x1ca4>
   132c0:	mov	r3, #0
   132c4:	b	132dc <__assert_fail@plt+0x1cb8>
   132c8:	ldr	r3, [fp, #-8]
   132cc:	ldr	r3, [r3, #56]	; 0x38
   132d0:	mov	r0, r3
   132d4:	bl	1d628 <__assert_fail@plt+0xc004>
   132d8:	mov	r3, #1
   132dc:	mov	r0, r3
   132e0:	sub	sp, fp, #4
   132e4:	ldr	fp, [sp]
   132e8:	add	sp, sp, #4
   132ec:	pop	{pc}		; (ldr pc, [sp], #4)
   132f0:	str	fp, [sp, #-8]!
   132f4:	str	lr, [sp, #4]
   132f8:	add	fp, sp, #4
   132fc:	sub	sp, sp, #24
   13300:	str	r0, [fp, #-24]	; 0xffffffe8
   13304:	str	r1, [fp, #-28]	; 0xffffffe4
   13308:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1330c:	ldr	r2, [r3, #48]	; 0x30
   13310:	movw	r3, #258	; 0x102
   13314:	and	r3, r3, r2
   13318:	cmp	r3, #0
   1331c:	beq	133e0 <__assert_fail@plt+0x1dbc>
   13320:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13324:	add	r3, r3, #64	; 0x40
   13328:	str	r3, [fp, #-8]
   1332c:	mov	r0, #24
   13330:	bl	1ce10 <__assert_fail@plt+0xb7ec>
   13334:	mov	r3, r0
   13338:	str	r3, [fp, #-12]
   1333c:	ldr	r3, [fp, #-12]
   13340:	cmp	r3, #0
   13344:	bne	13350 <__assert_fail@plt+0x1d2c>
   13348:	mov	r3, #0
   1334c:	b	13424 <__assert_fail@plt+0x1e00>
   13350:	ldr	r3, [fp, #-8]
   13354:	ldrd	r2, [r3]
   13358:	ldr	r1, [fp, #-12]
   1335c:	strd	r2, [r1]
   13360:	ldr	r3, [fp, #-8]
   13364:	ldrd	r2, [r3, #96]	; 0x60
   13368:	ldr	r1, [fp, #-12]
   1336c:	strd	r2, [r1, #8]
   13370:	ldr	r3, [fp, #-12]
   13374:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13378:	str	r2, [r3, #16]
   1337c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13380:	ldr	r3, [r3, #56]	; 0x38
   13384:	ldr	r1, [fp, #-12]
   13388:	mov	r0, r3
   1338c:	bl	17ee8 <__assert_fail@plt+0x68c4>
   13390:	str	r0, [fp, #-16]
   13394:	ldr	r2, [fp, #-16]
   13398:	ldr	r3, [fp, #-12]
   1339c:	cmp	r2, r3
   133a0:	beq	13420 <__assert_fail@plt+0x1dfc>
   133a4:	ldr	r0, [fp, #-12]
   133a8:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   133ac:	ldr	r3, [fp, #-16]
   133b0:	cmp	r3, #0
   133b4:	bne	133c0 <__assert_fail@plt+0x1d9c>
   133b8:	mov	r3, #0
   133bc:	b	13424 <__assert_fail@plt+0x1e00>
   133c0:	ldr	r3, [fp, #-16]
   133c4:	ldr	r2, [r3, #16]
   133c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   133cc:	str	r2, [r3]
   133d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   133d4:	mov	r2, #2
   133d8:	strh	r2, [r3, #56]	; 0x38
   133dc:	b	13420 <__assert_fail@plt+0x1dfc>
   133e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   133e4:	ldr	r2, [r3, #56]	; 0x38
   133e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   133ec:	add	r3, r3, #64	; 0x40
   133f0:	mov	r1, r3
   133f4:	mov	r0, r2
   133f8:	bl	1d668 <__assert_fail@plt+0xc044>
   133fc:	mov	r3, r0
   13400:	cmp	r3, #0
   13404:	beq	13420 <__assert_fail@plt+0x1dfc>
   13408:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1340c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13410:	str	r2, [r3]
   13414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13418:	mov	r2, #2
   1341c:	strh	r2, [r3, #56]	; 0x38
   13420:	mov	r3, #1
   13424:	mov	r0, r3
   13428:	sub	sp, fp, #4
   1342c:	ldr	fp, [sp]
   13430:	add	sp, sp, #4
   13434:	pop	{pc}		; (ldr pc, [sp], #4)
   13438:	str	fp, [sp, #-8]!
   1343c:	str	lr, [sp, #4]
   13440:	add	fp, sp, #4
   13444:	sub	sp, sp, #48	; 0x30
   13448:	str	r0, [fp, #-48]	; 0xffffffd0
   1344c:	str	r1, [fp, #-52]	; 0xffffffcc
   13450:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13454:	add	r3, r3, #64	; 0x40
   13458:	str	r3, [fp, #-8]
   1345c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13460:	ldr	r2, [r3, #48]	; 0x30
   13464:	movw	r3, #258	; 0x102
   13468:	and	r3, r3, r2
   1346c:	cmp	r3, #0
   13470:	beq	134c4 <__assert_fail@plt+0x1ea0>
   13474:	ldr	r3, [fp, #-8]
   13478:	ldrd	r2, [r3]
   1347c:	strd	r2, [fp, #-44]	; 0xffffffd4
   13480:	ldr	r3, [fp, #-8]
   13484:	ldrd	r2, [r3, #96]	; 0x60
   13488:	strd	r2, [fp, #-36]	; 0xffffffdc
   1348c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13490:	ldr	r3, [r3, #56]	; 0x38
   13494:	sub	r2, fp, #44	; 0x2c
   13498:	mov	r1, r2
   1349c:	mov	r0, r3
   134a0:	bl	17f58 <__assert_fail@plt+0x6934>
   134a4:	str	r0, [fp, #-12]
   134a8:	ldr	r3, [fp, #-12]
   134ac:	cmp	r3, #0
   134b0:	bne	134b8 <__assert_fail@plt+0x1e94>
   134b4:	bl	115e8 <abort@plt>
   134b8:	ldr	r0, [fp, #-12]
   134bc:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   134c0:	b	1356c <__assert_fail@plt+0x1f48>
   134c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   134c8:	ldr	r3, [r3, #4]
   134cc:	str	r3, [fp, #-16]
   134d0:	ldr	r3, [fp, #-16]
   134d4:	cmp	r3, #0
   134d8:	beq	1356c <__assert_fail@plt+0x1f48>
   134dc:	ldr	r3, [fp, #-16]
   134e0:	ldr	r3, [r3, #48]	; 0x30
   134e4:	cmp	r3, #0
   134e8:	blt	1356c <__assert_fail@plt+0x1f48>
   134ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   134f0:	ldr	r3, [r3, #56]	; 0x38
   134f4:	ldrd	r2, [r3, #16]
   134f8:	orrs	r3, r2, r3
   134fc:	bne	13504 <__assert_fail@plt+0x1ee0>
   13500:	bl	115e8 <abort@plt>
   13504:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13508:	ldr	r3, [r3, #56]	; 0x38
   1350c:	ldrd	r0, [r3]
   13510:	ldr	r3, [fp, #-8]
   13514:	ldrd	r2, [r3, #96]	; 0x60
   13518:	cmp	r1, r3
   1351c:	cmpeq	r0, r2
   13520:	bne	1356c <__assert_fail@plt+0x1f48>
   13524:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13528:	ldr	r3, [r3, #56]	; 0x38
   1352c:	ldrd	r0, [r3, #8]
   13530:	ldr	r3, [fp, #-8]
   13534:	ldrd	r2, [r3]
   13538:	cmp	r1, r3
   1353c:	cmpeq	r0, r2
   13540:	bne	1356c <__assert_fail@plt+0x1f48>
   13544:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13548:	ldr	r1, [r3, #56]	; 0x38
   1354c:	ldr	r3, [fp, #-16]
   13550:	ldrd	r2, [r3, #64]	; 0x40
   13554:	strd	r2, [r1, #8]
   13558:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1355c:	ldr	r1, [r3, #56]	; 0x38
   13560:	ldr	r3, [fp, #-16]
   13564:	ldrd	r2, [r3, #160]	; 0xa0
   13568:	strd	r2, [r1]
   1356c:	nop	{0}
   13570:	sub	sp, fp, #4
   13574:	ldr	fp, [sp]
   13578:	add	sp, sp, #4
   1357c:	pop	{pc}		; (ldr pc, [sp], #4)
   13580:	str	fp, [sp, #-8]!
   13584:	str	lr, [sp, #4]
   13588:	add	fp, sp, #4
   1358c:	sub	sp, sp, #8
   13590:	str	r0, [fp, #-8]
   13594:	ldr	r3, [fp, #-8]
   13598:	ldr	r2, [r3, #48]	; 0x30
   1359c:	movw	r3, #258	; 0x102
   135a0:	and	r3, r3, r2
   135a4:	cmp	r3, #0
   135a8:	beq	135d0 <__assert_fail@plt+0x1fac>
   135ac:	ldr	r3, [fp, #-8]
   135b0:	ldr	r3, [r3, #56]	; 0x38
   135b4:	cmp	r3, #0
   135b8:	beq	135e0 <__assert_fail@plt+0x1fbc>
   135bc:	ldr	r3, [fp, #-8]
   135c0:	ldr	r3, [r3, #56]	; 0x38
   135c4:	mov	r0, r3
   135c8:	bl	17430 <__assert_fail@plt+0x5e0c>
   135cc:	b	135e0 <__assert_fail@plt+0x1fbc>
   135d0:	ldr	r3, [fp, #-8]
   135d4:	ldr	r3, [r3, #56]	; 0x38
   135d8:	mov	r0, r3
   135dc:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   135e0:	nop	{0}
   135e4:	sub	sp, fp, #4
   135e8:	ldr	fp, [sp]
   135ec:	add	sp, sp, #4
   135f0:	pop	{pc}		; (ldr pc, [sp], #4)
   135f4:	str	fp, [sp, #-8]!
   135f8:	str	lr, [sp, #4]
   135fc:	add	fp, sp, #4
   13600:	sub	sp, sp, #16
   13604:	str	r0, [fp, #-16]
   13608:	b	1362c <__assert_fail@plt+0x2008>
   1360c:	ldr	r0, [fp, #-16]
   13610:	bl	182ec <__assert_fail@plt+0x6cc8>
   13614:	str	r0, [fp, #-8]
   13618:	ldr	r3, [fp, #-8]
   1361c:	cmp	r3, #0
   13620:	blt	1362c <__assert_fail@plt+0x2008>
   13624:	ldr	r0, [fp, #-8]
   13628:	bl	115f4 <close@plt>
   1362c:	ldr	r0, [fp, #-16]
   13630:	bl	18204 <__assert_fail@plt+0x6be0>
   13634:	mov	r3, r0
   13638:	eor	r3, r3, #1
   1363c:	uxtb	r3, r3
   13640:	cmp	r3, #0
   13644:	bne	1360c <__assert_fail@plt+0x1fe8>
   13648:	nop	{0}
   1364c:	sub	sp, fp, #4
   13650:	ldr	fp, [sp]
   13654:	add	sp, sp, #4
   13658:	pop	{pc}		; (ldr pc, [sp], #4)
   1365c:	str	fp, [sp, #-8]!
   13660:	str	lr, [sp, #4]
   13664:	add	fp, sp, #4
   13668:	sub	sp, sp, #8
   1366c:	str	r0, [fp, #-8]
   13670:	mov	r3, r1
   13674:	strb	r3, [fp, #-9]
   13678:	ldr	r3, [fp, #-8]
   1367c:	ldrh	r3, [r3, #56]	; 0x38
   13680:	cmp	r3, #11
   13684:	beq	1368c <__assert_fail@plt+0x2068>
   13688:	bl	115e8 <abort@plt>
   1368c:	ldrb	r3, [fp, #-9]
   13690:	cmp	r3, #0
   13694:	beq	136a4 <__assert_fail@plt+0x2080>
   13698:	mov	r2, #2
   1369c:	mov	r3, #0
   136a0:	b	136ac <__assert_fail@plt+0x2088>
   136a4:	mov	r2, #1
   136a8:	mov	r3, #0
   136ac:	ldr	r1, [fp, #-8]
   136b0:	strd	r2, [r1, #112]	; 0x70
   136b4:	nop	{0}
   136b8:	sub	sp, fp, #4
   136bc:	ldr	fp, [sp]
   136c0:	add	sp, sp, #4
   136c4:	pop	{pc}		; (ldr pc, [sp], #4)
   136c8:	str	fp, [sp, #-8]!
   136cc:	str	lr, [sp, #4]
   136d0:	add	fp, sp, #4
   136d4:	sub	sp, sp, #24
   136d8:	str	r0, [fp, #-16]
   136dc:	str	r1, [fp, #-20]	; 0xffffffec
   136e0:	mov	r3, r2
   136e4:	strb	r3, [fp, #-21]	; 0xffffffeb
   136e8:	ldr	r3, [fp, #-16]
   136ec:	ldr	r3, [r3, #32]
   136f0:	str	r3, [fp, #-8]
   136f4:	ldr	r2, [fp, #-8]
   136f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   136fc:	cmp	r2, r3
   13700:	bne	13714 <__assert_fail@plt+0x20f0>
   13704:	ldr	r3, [fp, #-8]
   13708:	cmn	r3, #100	; 0x64
   1370c:	beq	13714 <__assert_fail@plt+0x20f0>
   13710:	bl	115e8 <abort@plt>
   13714:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   13718:	cmp	r3, #0
   1371c:	beq	13750 <__assert_fail@plt+0x212c>
   13720:	ldr	r3, [fp, #-16]
   13724:	add	r3, r3, #60	; 0x3c
   13728:	ldr	r1, [fp, #-8]
   1372c:	mov	r0, r3
   13730:	bl	1822c <__assert_fail@plt+0x6c08>
   13734:	str	r0, [fp, #-12]
   13738:	ldr	r3, [fp, #-12]
   1373c:	cmp	r3, #0
   13740:	blt	13778 <__assert_fail@plt+0x2154>
   13744:	ldr	r0, [fp, #-12]
   13748:	bl	115f4 <close@plt>
   1374c:	b	13778 <__assert_fail@plt+0x2154>
   13750:	ldr	r3, [fp, #-16]
   13754:	ldr	r3, [r3, #48]	; 0x30
   13758:	and	r3, r3, #4
   1375c:	cmp	r3, #0
   13760:	bne	13778 <__assert_fail@plt+0x2154>
   13764:	ldr	r3, [fp, #-8]
   13768:	cmp	r3, #0
   1376c:	blt	13778 <__assert_fail@plt+0x2154>
   13770:	ldr	r0, [fp, #-8]
   13774:	bl	115f4 <close@plt>
   13778:	ldr	r3, [fp, #-16]
   1377c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13780:	str	r2, [r3, #32]
   13784:	nop	{0}
   13788:	sub	sp, fp, #4
   1378c:	ldr	fp, [sp]
   13790:	add	sp, sp, #4
   13794:	pop	{pc}		; (ldr pc, [sp], #4)
   13798:	str	fp, [sp, #-8]!
   1379c:	str	lr, [sp, #4]
   137a0:	add	fp, sp, #4
   137a4:	sub	sp, sp, #16
   137a8:	str	r0, [fp, #-16]
   137ac:	ldr	r3, [fp, #-16]
   137b0:	ldr	r3, [r3, #48]	; 0x30
   137b4:	and	r3, r3, #4
   137b8:	cmp	r3, #0
   137bc:	bne	1384c <__assert_fail@plt+0x2228>
   137c0:	ldr	r3, [fp, #-16]
   137c4:	ldr	r3, [r3, #48]	; 0x30
   137c8:	and	r3, r3, #512	; 0x200
   137cc:	cmp	r3, #0
   137d0:	beq	1380c <__assert_fail@plt+0x21e8>
   137d4:	ldr	r3, [fp, #-16]
   137d8:	ldr	r3, [r3, #48]	; 0x30
   137dc:	and	r3, r3, #512	; 0x200
   137e0:	cmp	r3, #0
   137e4:	bne	137f4 <__assert_fail@plt+0x21d0>
   137e8:	ldr	r3, [fp, #-16]
   137ec:	ldr	r3, [r3, #28]
   137f0:	b	137f8 <__assert_fail@plt+0x21d4>
   137f4:	mvn	r3, #99	; 0x63
   137f8:	mov	r2, #1
   137fc:	mov	r1, r3
   13800:	ldr	r0, [fp, #-16]
   13804:	bl	136c8 <__assert_fail@plt+0x20a4>
   13808:	b	1384c <__assert_fail@plt+0x2228>
   1380c:	ldr	r3, [fp, #-16]
   13810:	ldr	r3, [r3, #48]	; 0x30
   13814:	and	r3, r3, #512	; 0x200
   13818:	cmp	r3, #0
   1381c:	bne	1382c <__assert_fail@plt+0x2208>
   13820:	ldr	r3, [fp, #-16]
   13824:	ldr	r3, [r3, #28]
   13828:	b	13830 <__assert_fail@plt+0x220c>
   1382c:	mvn	r3, #99	; 0x63
   13830:	mov	r0, r3
   13834:	bl	11588 <fchdir@plt>
   13838:	mov	r3, r0
   1383c:	cmp	r3, #0
   13840:	beq	1384c <__assert_fail@plt+0x2228>
   13844:	mov	r3, #1
   13848:	b	13850 <__assert_fail@plt+0x222c>
   1384c:	mov	r3, #0
   13850:	str	r3, [fp, #-8]
   13854:	ldr	r3, [fp, #-16]
   13858:	add	r3, r3, #60	; 0x3c
   1385c:	mov	r0, r3
   13860:	bl	135f4 <__assert_fail@plt+0x1fd0>
   13864:	ldr	r3, [fp, #-8]
   13868:	mov	r0, r3
   1386c:	sub	sp, fp, #4
   13870:	ldr	fp, [sp]
   13874:	add	sp, sp, #4
   13878:	pop	{pc}		; (ldr pc, [sp], #4)
   1387c:	str	fp, [sp, #-8]!
   13880:	str	lr, [sp, #4]
   13884:	add	fp, sp, #4
   13888:	sub	sp, sp, #16
   1388c:	str	r0, [fp, #-16]
   13890:	str	r1, [fp, #-20]	; 0xffffffec
   13894:	ldr	r3, [fp, #-16]
   13898:	ldr	r3, [r3, #48]	; 0x30
   1389c:	lsl	r3, r3, #11
   138a0:	and	r3, r3, #32768	; 0x8000
   138a4:	orr	r3, r3, #540672	; 0x84000
   138a8:	orr	r3, r3, #2304	; 0x900
   138ac:	str	r3, [fp, #-8]
   138b0:	ldr	r3, [fp, #-16]
   138b4:	ldr	r3, [r3, #48]	; 0x30
   138b8:	and	r3, r3, #512	; 0x200
   138bc:	cmp	r3, #0
   138c0:	beq	138e4 <__assert_fail@plt+0x22c0>
   138c4:	ldr	r3, [fp, #-16]
   138c8:	ldr	r3, [r3, #32]
   138cc:	ldr	r2, [fp, #-8]
   138d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   138d4:	mov	r0, r3
   138d8:	bl	1839c <__assert_fail@plt+0x6d78>
   138dc:	mov	r3, r0
   138e0:	b	138f4 <__assert_fail@plt+0x22d0>
   138e4:	ldr	r1, [fp, #-8]
   138e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   138ec:	bl	1dc80 <__assert_fail@plt+0xc65c>
   138f0:	mov	r3, r0
   138f4:	str	r3, [fp, #-12]
   138f8:	ldr	r3, [fp, #-12]
   138fc:	mov	r0, r3
   13900:	sub	sp, fp, #4
   13904:	ldr	fp, [sp]
   13908:	add	sp, sp, #4
   1390c:	pop	{pc}		; (ldr pc, [sp], #4)
   13910:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13914:	strd	r6, [sp, #8]
   13918:	str	r8, [sp, #16]
   1391c:	str	fp, [sp, #20]
   13920:	str	lr, [sp, #24]
   13924:	add	fp, sp, #24
   13928:	sub	sp, sp, #36	; 0x24
   1392c:	str	r0, [fp, #-56]	; 0xffffffc8
   13930:	mov	r7, r1
   13934:	str	r2, [fp, #-60]	; 0xffffffc4
   13938:	mov	r3, #0
   1393c:	str	r3, [fp, #-32]	; 0xffffffe0
   13940:	mov	r3, #0
   13944:	str	r3, [fp, #-36]	; 0xffffffdc
   13948:	bic	r3, r7, #4080	; 0xff0
   1394c:	bic	r3, r3, #15
   13950:	cmp	r3, #0
   13954:	beq	13970 <__assert_fail@plt+0x234c>
   13958:	bl	114bc <__errno_location@plt>
   1395c:	mov	r2, r0
   13960:	mov	r3, #22
   13964:	str	r3, [r2]
   13968:	mov	r3, #0
   1396c:	b	13d90 <__assert_fail@plt+0x276c>
   13970:	and	r3, r7, #4
   13974:	cmp	r3, #0
   13978:	beq	139a0 <__assert_fail@plt+0x237c>
   1397c:	and	r3, r7, #512	; 0x200
   13980:	cmp	r3, #0
   13984:	beq	139a0 <__assert_fail@plt+0x237c>
   13988:	bl	114bc <__errno_location@plt>
   1398c:	mov	r2, r0
   13990:	mov	r3, #22
   13994:	str	r3, [r2]
   13998:	mov	r3, #0
   1399c:	b	13d90 <__assert_fail@plt+0x276c>
   139a0:	and	r3, r7, #18
   139a4:	cmp	r3, #0
   139a8:	bne	139c4 <__assert_fail@plt+0x23a0>
   139ac:	bl	114bc <__errno_location@plt>
   139b0:	mov	r2, r0
   139b4:	mov	r3, #22
   139b8:	str	r3, [r2]
   139bc:	mov	r3, #0
   139c0:	b	13d90 <__assert_fail@plt+0x276c>
   139c4:	mov	r1, #96	; 0x60
   139c8:	mov	r0, #1
   139cc:	bl	1cd40 <__assert_fail@plt+0xb71c>
   139d0:	mov	r3, r0
   139d4:	mov	r4, r3
   139d8:	cmp	r4, #0
   139dc:	bne	139e8 <__assert_fail@plt+0x23c4>
   139e0:	mov	r3, #0
   139e4:	b	13d90 <__assert_fail@plt+0x276c>
   139e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   139ec:	str	r3, [r4, #44]	; 0x2c
   139f0:	str	r7, [r4, #48]	; 0x30
   139f4:	ldr	r3, [r4, #48]	; 0x30
   139f8:	and	r3, r3, #2
   139fc:	cmp	r3, #0
   13a00:	beq	13a1c <__assert_fail@plt+0x23f8>
   13a04:	ldr	r3, [r4, #48]	; 0x30
   13a08:	orr	r3, r3, #4
   13a0c:	str	r3, [r4, #48]	; 0x30
   13a10:	ldr	r3, [r4, #48]	; 0x30
   13a14:	bic	r3, r3, #512	; 0x200
   13a18:	str	r3, [r4, #48]	; 0x30
   13a1c:	mvn	r3, #99	; 0x63
   13a20:	str	r3, [r4, #32]
   13a24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13a28:	bl	161e0 <__assert_fail@plt+0x4bbc>
   13a2c:	str	r0, [fp, #-44]	; 0xffffffd4
   13a30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13a34:	cmp	r3, #4096	; 0x1000
   13a38:	movcs	r3, r3
   13a3c:	movcc	r3, #4096	; 0x1000
   13a40:	mov	r1, r3
   13a44:	mov	r0, r4
   13a48:	bl	15fb4 <__assert_fail@plt+0x4990>
   13a4c:	mov	r3, r0
   13a50:	eor	r3, r3, #1
   13a54:	uxtb	r3, r3
   13a58:	cmp	r3, #0
   13a5c:	bne	13d80 <__assert_fail@plt+0x275c>
   13a60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13a64:	ldr	r3, [r3]
   13a68:	cmp	r3, #0
   13a6c:	beq	13aa0 <__assert_fail@plt+0x247c>
   13a70:	mov	r2, #0
   13a74:	movw	r1, #608	; 0x260
   13a78:	movt	r1, #2
   13a7c:	mov	r0, r4
   13a80:	bl	15e84 <__assert_fail@plt+0x4860>
   13a84:	str	r0, [fp, #-32]	; 0xffffffe0
   13a88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13a8c:	cmp	r3, #0
   13a90:	beq	13d6c <__assert_fail@plt+0x2748>
   13a94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13a98:	mvn	r2, #0
   13a9c:	str	r2, [r3, #48]	; 0x30
   13aa0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13aa4:	cmp	r3, #0
   13aa8:	beq	13abc <__assert_fail@plt+0x2498>
   13aac:	ldr	r3, [r4, #48]	; 0x30
   13ab0:	and	r3, r3, #1024	; 0x400
   13ab4:	cmp	r3, #0
   13ab8:	beq	13ac4 <__assert_fail@plt+0x24a0>
   13abc:	mov	r3, #1
   13ac0:	b	13ac8 <__assert_fail@plt+0x24a4>
   13ac4:	mov	r3, #0
   13ac8:	strb	r3, [fp, #-45]	; 0xffffffd3
   13acc:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   13ad0:	and	r3, r3, #1
   13ad4:	strb	r3, [fp, #-45]	; 0xffffffd3
   13ad8:	mov	r6, #0
   13adc:	mov	r8, #0
   13ae0:	b	13c40 <__assert_fail@plt+0x261c>
   13ae4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13ae8:	ldr	r3, [r3]
   13aec:	mov	r0, r3
   13af0:	bl	1148c <strlen@plt>
   13af4:	str	r0, [fp, #-40]	; 0xffffffd8
   13af8:	and	r3, r7, #2048	; 0x800
   13afc:	cmp	r3, #0
   13b00:	bne	13b70 <__assert_fail@plt+0x254c>
   13b04:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13b08:	ldr	r3, [r3]
   13b0c:	str	r3, [fp, #-52]	; 0xffffffcc
   13b10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13b14:	cmp	r3, #2
   13b18:	bls	13b70 <__assert_fail@plt+0x254c>
   13b1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13b20:	sub	r3, r3, #1
   13b24:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13b28:	add	r3, r2, r3
   13b2c:	ldrb	r3, [r3]
   13b30:	cmp	r3, #47	; 0x2f
   13b34:	bne	13b70 <__assert_fail@plt+0x254c>
   13b38:	b	13b48 <__assert_fail@plt+0x2524>
   13b3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13b40:	sub	r3, r3, #1
   13b44:	str	r3, [fp, #-40]	; 0xffffffd8
   13b48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13b4c:	cmp	r3, #1
   13b50:	bls	13b70 <__assert_fail@plt+0x254c>
   13b54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13b58:	sub	r3, r3, #2
   13b5c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13b60:	add	r3, r2, r3
   13b64:	ldrb	r3, [r3]
   13b68:	cmp	r3, #47	; 0x2f
   13b6c:	beq	13b3c <__assert_fail@plt+0x2518>
   13b70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13b74:	ldr	r3, [r3]
   13b78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13b7c:	mov	r1, r3
   13b80:	mov	r0, r4
   13b84:	bl	15e84 <__assert_fail@plt+0x4860>
   13b88:	mov	r5, r0
   13b8c:	cmp	r5, #0
   13b90:	beq	13d44 <__assert_fail@plt+0x2720>
   13b94:	mov	r3, #0
   13b98:	str	r3, [r5, #48]	; 0x30
   13b9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ba0:	str	r3, [r5, #4]
   13ba4:	add	r3, r5, #168	; 0xa8
   13ba8:	str	r3, [r5, #24]
   13bac:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   13bb0:	cmp	r3, #0
   13bb4:	beq	13bd8 <__assert_fail@plt+0x25b4>
   13bb8:	cmp	r6, #0
   13bbc:	beq	13bd8 <__assert_fail@plt+0x25b4>
   13bc0:	mov	r3, #11
   13bc4:	strh	r3, [r5, #56]	; 0x38
   13bc8:	mov	r1, #1
   13bcc:	mov	r0, r5
   13bd0:	bl	1365c <__assert_fail@plt+0x2038>
   13bd4:	b	13bf0 <__assert_fail@plt+0x25cc>
   13bd8:	mov	r2, #0
   13bdc:	mov	r1, r5
   13be0:	mov	r0, r4
   13be4:	bl	15ad0 <__assert_fail@plt+0x44ac>
   13be8:	mov	r3, r0
   13bec:	strh	r3, [r5, #56]	; 0x38
   13bf0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13bf4:	cmp	r3, #0
   13bf8:	beq	13c08 <__assert_fail@plt+0x25e4>
   13bfc:	str	r6, [r5, #8]
   13c00:	mov	r6, r5
   13c04:	b	13c30 <__assert_fail@plt+0x260c>
   13c08:	mov	r3, #0
   13c0c:	str	r3, [r5, #8]
   13c10:	cmp	r6, #0
   13c14:	bne	13c24 <__assert_fail@plt+0x2600>
   13c18:	mov	r6, r5
   13c1c:	str	r6, [fp, #-36]	; 0xffffffdc
   13c20:	b	13c30 <__assert_fail@plt+0x260c>
   13c24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13c28:	str	r5, [r3, #8]
   13c2c:	str	r5, [fp, #-36]	; 0xffffffdc
   13c30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13c34:	add	r3, r3, #4
   13c38:	str	r3, [fp, #-56]	; 0xffffffc8
   13c3c:	add	r8, r8, #1
   13c40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13c44:	ldr	r3, [r3]
   13c48:	cmp	r3, #0
   13c4c:	bne	13ae4 <__assert_fail@plt+0x24c0>
   13c50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13c54:	cmp	r3, #0
   13c58:	beq	13c78 <__assert_fail@plt+0x2654>
   13c5c:	cmp	r8, #1
   13c60:	bls	13c78 <__assert_fail@plt+0x2654>
   13c64:	mov	r2, r8
   13c68:	mov	r1, r6
   13c6c:	mov	r0, r4
   13c70:	bl	15d20 <__assert_fail@plt+0x46fc>
   13c74:	mov	r6, r0
   13c78:	mov	r2, #0
   13c7c:	movw	r1, #608	; 0x260
   13c80:	movt	r1, #2
   13c84:	mov	r0, r4
   13c88:	bl	15e84 <__assert_fail@plt+0x4860>
   13c8c:	mov	r3, r0
   13c90:	str	r3, [r4]
   13c94:	ldr	r3, [r4]
   13c98:	cmp	r3, #0
   13c9c:	beq	13d4c <__assert_fail@plt+0x2728>
   13ca0:	ldr	r3, [r4]
   13ca4:	str	r6, [r3, #8]
   13ca8:	ldr	r3, [r4]
   13cac:	mov	r2, #9
   13cb0:	strh	r2, [r3, #56]	; 0x38
   13cb4:	ldr	r3, [r4]
   13cb8:	mov	r2, #1
   13cbc:	str	r2, [r3, #48]	; 0x30
   13cc0:	mov	r0, r4
   13cc4:	bl	1321c <__assert_fail@plt+0x1bf8>
   13cc8:	mov	r3, r0
   13ccc:	eor	r3, r3, #1
   13cd0:	uxtb	r3, r3
   13cd4:	cmp	r3, #0
   13cd8:	bne	13d54 <__assert_fail@plt+0x2730>
   13cdc:	ldr	r3, [r4, #48]	; 0x30
   13ce0:	and	r3, r3, #4
   13ce4:	cmp	r3, #0
   13ce8:	bne	13d2c <__assert_fail@plt+0x2708>
   13cec:	ldr	r3, [r4, #48]	; 0x30
   13cf0:	and	r3, r3, #512	; 0x200
   13cf4:	cmp	r3, #0
   13cf8:	bne	13d2c <__assert_fail@plt+0x2708>
   13cfc:	movw	r1, #612	; 0x264
   13d00:	movt	r1, #2
   13d04:	mov	r0, r4
   13d08:	bl	1387c <__assert_fail@plt+0x2258>
   13d0c:	mov	r3, r0
   13d10:	str	r3, [r4, #28]
   13d14:	ldr	r3, [r4, #28]
   13d18:	cmp	r3, #0
   13d1c:	bge	13d2c <__assert_fail@plt+0x2708>
   13d20:	ldr	r3, [r4, #48]	; 0x30
   13d24:	orr	r3, r3, #4
   13d28:	str	r3, [r4, #48]	; 0x30
   13d2c:	add	r3, r4, #60	; 0x3c
   13d30:	mvn	r1, #0
   13d34:	mov	r0, r3
   13d38:	bl	1817c <__assert_fail@plt+0x6b58>
   13d3c:	mov	r3, r4
   13d40:	b	13d90 <__assert_fail@plt+0x276c>
   13d44:	nop	{0}
   13d48:	b	13d58 <__assert_fail@plt+0x2734>
   13d4c:	nop	{0}
   13d50:	b	13d58 <__assert_fail@plt+0x2734>
   13d54:	nop	{0}
   13d58:	mov	r0, r6
   13d5c:	bl	15f54 <__assert_fail@plt+0x4930>
   13d60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d64:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   13d68:	b	13d70 <__assert_fail@plt+0x274c>
   13d6c:	nop	{0}
   13d70:	ldr	r3, [r4, #24]
   13d74:	mov	r0, r3
   13d78:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   13d7c:	b	13d84 <__assert_fail@plt+0x2760>
   13d80:	nop	{0}
   13d84:	mov	r0, r4
   13d88:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   13d8c:	mov	r3, #0
   13d90:	mov	r0, r3
   13d94:	sub	sp, fp, #24
   13d98:	ldrd	r4, [sp]
   13d9c:	ldrd	r6, [sp, #8]
   13da0:	ldr	r8, [sp, #16]
   13da4:	ldr	fp, [sp, #20]
   13da8:	add	sp, sp, #24
   13dac:	pop	{pc}		; (ldr pc, [sp], #4)
   13db0:	strd	r4, [sp, #-20]!	; 0xffffffec
   13db4:	str	r6, [sp, #8]
   13db8:	str	fp, [sp, #12]
   13dbc:	str	lr, [sp, #16]
   13dc0:	add	fp, sp, #16
   13dc4:	sub	sp, sp, #12
   13dc8:	str	r0, [fp, #-24]	; 0xffffffe8
   13dcc:	mov	r4, r1
   13dd0:	ldr	r3, [r4, #52]	; 0x34
   13dd4:	str	r3, [r4, #40]	; 0x28
   13dd8:	ldr	r6, [r4, #40]	; 0x28
   13ddc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13de0:	ldr	r3, [r3, #24]
   13de4:	add	r1, r4, #168	; 0xa8
   13de8:	add	r2, r6, #1
   13dec:	mov	r0, r3
   13df0:	bl	112ac <memmove@plt>
   13df4:	add	r3, r4, #168	; 0xa8
   13df8:	mov	r1, #47	; 0x2f
   13dfc:	mov	r0, r3
   13e00:	bl	11540 <strrchr@plt>
   13e04:	mov	r5, r0
   13e08:	cmp	r5, #0
   13e0c:	beq	13e54 <__assert_fail@plt+0x2830>
   13e10:	add	r3, r4, #168	; 0xa8
   13e14:	cmp	r5, r3
   13e18:	bne	13e2c <__assert_fail@plt+0x2808>
   13e1c:	add	r3, r5, #1
   13e20:	ldrb	r3, [r3]
   13e24:	cmp	r3, #0
   13e28:	beq	13e54 <__assert_fail@plt+0x2830>
   13e2c:	add	r5, r5, #1
   13e30:	mov	r0, r5
   13e34:	bl	1148c <strlen@plt>
   13e38:	mov	r6, r0
   13e3c:	add	r3, r4, #168	; 0xa8
   13e40:	add	r2, r6, #1
   13e44:	mov	r1, r5
   13e48:	mov	r0, r3
   13e4c:	bl	112ac <memmove@plt>
   13e50:	str	r6, [r4, #52]	; 0x34
   13e54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e58:	ldr	r3, [r3, #24]
   13e5c:	str	r3, [r4, #28]
   13e60:	ldr	r3, [r4, #28]
   13e64:	str	r3, [r4, #24]
   13e68:	nop	{0}
   13e6c:	sub	sp, fp, #16
   13e70:	ldrd	r4, [sp]
   13e74:	ldr	r6, [sp, #8]
   13e78:	ldr	fp, [sp, #12]
   13e7c:	add	sp, sp, #16
   13e80:	pop	{pc}		; (ldr pc, [sp], #4)
   13e84:	strd	r4, [sp, #-16]!
   13e88:	str	fp, [sp, #8]
   13e8c:	str	lr, [sp, #12]
   13e90:	add	fp, sp, #12
   13e94:	sub	sp, sp, #16
   13e98:	str	r0, [fp, #-24]	; 0xffffffe8
   13e9c:	mov	r3, #0
   13ea0:	str	r3, [fp, #-16]
   13ea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ea8:	ldr	r3, [r3]
   13eac:	cmp	r3, #0
   13eb0:	beq	13efc <__assert_fail@plt+0x28d8>
   13eb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13eb8:	ldr	r4, [r3]
   13ebc:	b	13ee8 <__assert_fail@plt+0x28c4>
   13ec0:	mov	r5, r4
   13ec4:	ldr	r3, [r4, #8]
   13ec8:	cmp	r3, #0
   13ecc:	beq	13ed8 <__assert_fail@plt+0x28b4>
   13ed0:	ldr	r3, [r4, #8]
   13ed4:	b	13edc <__assert_fail@plt+0x28b8>
   13ed8:	ldr	r3, [r4, #4]
   13edc:	mov	r4, r3
   13ee0:	mov	r0, r5
   13ee4:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   13ee8:	ldr	r3, [r4, #48]	; 0x30
   13eec:	cmp	r3, #0
   13ef0:	bge	13ec0 <__assert_fail@plt+0x289c>
   13ef4:	mov	r0, r4
   13ef8:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   13efc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f00:	ldr	r3, [r3, #4]
   13f04:	cmp	r3, #0
   13f08:	beq	13f1c <__assert_fail@plt+0x28f8>
   13f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f10:	ldr	r3, [r3, #4]
   13f14:	mov	r0, r3
   13f18:	bl	15f54 <__assert_fail@plt+0x4930>
   13f1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f20:	ldr	r3, [r3, #8]
   13f24:	mov	r0, r3
   13f28:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   13f2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f30:	ldr	r3, [r3, #24]
   13f34:	mov	r0, r3
   13f38:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   13f3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f40:	ldr	r3, [r3, #48]	; 0x30
   13f44:	and	r3, r3, #512	; 0x200
   13f48:	cmp	r3, #0
   13f4c:	beq	13f90 <__assert_fail@plt+0x296c>
   13f50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f54:	ldr	r3, [r3, #32]
   13f58:	cmp	r3, #0
   13f5c:	blt	14008 <__assert_fail@plt+0x29e4>
   13f60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f64:	ldr	r3, [r3, #32]
   13f68:	mov	r0, r3
   13f6c:	bl	115f4 <close@plt>
   13f70:	mov	r3, r0
   13f74:	cmp	r3, #0
   13f78:	beq	14008 <__assert_fail@plt+0x29e4>
   13f7c:	bl	114bc <__errno_location@plt>
   13f80:	mov	r3, r0
   13f84:	ldr	r3, [r3]
   13f88:	str	r3, [fp, #-16]
   13f8c:	b	14008 <__assert_fail@plt+0x29e4>
   13f90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f94:	ldr	r3, [r3, #48]	; 0x30
   13f98:	and	r3, r3, #4
   13f9c:	cmp	r3, #0
   13fa0:	bne	14008 <__assert_fail@plt+0x29e4>
   13fa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13fa8:	ldr	r3, [r3, #28]
   13fac:	mov	r0, r3
   13fb0:	bl	11588 <fchdir@plt>
   13fb4:	mov	r3, r0
   13fb8:	cmp	r3, #0
   13fbc:	beq	13fd0 <__assert_fail@plt+0x29ac>
   13fc0:	bl	114bc <__errno_location@plt>
   13fc4:	mov	r3, r0
   13fc8:	ldr	r3, [r3]
   13fcc:	str	r3, [fp, #-16]
   13fd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13fd4:	ldr	r3, [r3, #28]
   13fd8:	mov	r0, r3
   13fdc:	bl	115f4 <close@plt>
   13fe0:	mov	r3, r0
   13fe4:	cmp	r3, #0
   13fe8:	beq	14008 <__assert_fail@plt+0x29e4>
   13fec:	ldr	r3, [fp, #-16]
   13ff0:	cmp	r3, #0
   13ff4:	bne	14008 <__assert_fail@plt+0x29e4>
   13ff8:	bl	114bc <__errno_location@plt>
   13ffc:	mov	r3, r0
   14000:	ldr	r3, [r3]
   14004:	str	r3, [fp, #-16]
   14008:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1400c:	add	r3, r3, #60	; 0x3c
   14010:	mov	r0, r3
   14014:	bl	135f4 <__assert_fail@plt+0x1fd0>
   14018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1401c:	ldr	r3, [r3, #52]	; 0x34
   14020:	cmp	r3, #0
   14024:	beq	14038 <__assert_fail@plt+0x2a14>
   14028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1402c:	ldr	r3, [r3, #52]	; 0x34
   14030:	mov	r0, r3
   14034:	bl	17430 <__assert_fail@plt+0x5e0c>
   14038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1403c:	bl	13580 <__assert_fail@plt+0x1f5c>
   14040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14044:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   14048:	ldr	r3, [fp, #-16]
   1404c:	cmp	r3, #0
   14050:	beq	1406c <__assert_fail@plt+0x2a48>
   14054:	bl	114bc <__errno_location@plt>
   14058:	mov	r2, r0
   1405c:	ldr	r3, [fp, #-16]
   14060:	str	r3, [r2]
   14064:	mvn	r3, #0
   14068:	b	14070 <__assert_fail@plt+0x2a4c>
   1406c:	mov	r3, #0
   14070:	mov	r0, r3
   14074:	sub	sp, fp, #12
   14078:	ldrd	r4, [sp]
   1407c:	ldr	fp, [sp, #8]
   14080:	add	sp, sp, #12
   14084:	pop	{pc}		; (ldr pc, [sp], #4)
   14088:	str	fp, [sp, #-8]!
   1408c:	str	lr, [sp, #4]
   14090:	add	fp, sp, #4
   14094:	sub	sp, sp, #24
   14098:	str	r0, [fp, #-24]	; 0xffffffe8
   1409c:	str	r1, [fp, #-28]	; 0xffffffe4
   140a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   140a4:	str	r3, [fp, #-8]
   140a8:	ldr	r3, [fp, #-8]
   140ac:	ldrd	r2, [r3]
   140b0:	strd	r2, [fp, #-20]	; 0xffffffec
   140b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   140b8:	mov	r2, r3
   140bc:	mov	r3, #0
   140c0:	ldrd	r0, [fp, #-20]	; 0xffffffec
   140c4:	bl	1f184 <__assert_fail@plt+0xdb60>
   140c8:	mov	r3, r2
   140cc:	mov	r0, r3
   140d0:	sub	sp, fp, #4
   140d4:	ldr	fp, [sp]
   140d8:	add	sp, sp, #4
   140dc:	pop	{pc}		; (ldr pc, [sp], #4)
   140e0:	push	{fp}		; (str fp, [sp, #-4]!)
   140e4:	add	fp, sp, #0
   140e8:	sub	sp, sp, #20
   140ec:	str	r0, [fp, #-16]
   140f0:	str	r1, [fp, #-20]	; 0xffffffec
   140f4:	ldr	r3, [fp, #-16]
   140f8:	str	r3, [fp, #-8]
   140fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14100:	str	r3, [fp, #-12]
   14104:	ldr	r3, [fp, #-8]
   14108:	ldrd	r0, [r3]
   1410c:	ldr	r3, [fp, #-12]
   14110:	ldrd	r2, [r3]
   14114:	cmp	r1, r3
   14118:	cmpeq	r0, r2
   1411c:	moveq	r3, #1
   14120:	movne	r3, #0
   14124:	uxtb	r3, r3
   14128:	mov	r0, r3
   1412c:	add	sp, fp, #0
   14130:	pop	{fp}		; (ldr fp, [sp], #4)
   14134:	bx	lr
   14138:	str	fp, [sp, #-8]!
   1413c:	str	lr, [sp, #4]
   14140:	add	fp, sp, #4
   14144:	sub	sp, sp, #136	; 0x88
   14148:	str	r0, [fp, #-128]	; 0xffffff80
   1414c:	str	r1, [fp, #-132]	; 0xffffff7c
   14150:	ldr	r3, [fp, #-128]	; 0xffffff80
   14154:	ldr	r3, [r3, #44]	; 0x2c
   14158:	str	r3, [fp, #-12]
   1415c:	ldr	r3, [fp, #-12]
   14160:	ldr	r3, [r3, #52]	; 0x34
   14164:	str	r3, [fp, #-8]
   14168:	ldr	r3, [fp, #-12]
   1416c:	ldr	r3, [r3, #48]	; 0x30
   14170:	and	r3, r3, #512	; 0x200
   14174:	cmp	r3, #0
   14178:	bne	14184 <__assert_fail@plt+0x2b60>
   1417c:	mov	r3, #0
   14180:	b	142c8 <__assert_fail@plt+0x2ca4>
   14184:	ldr	r3, [fp, #-8]
   14188:	cmp	r3, #0
   1418c:	bne	141d4 <__assert_fail@plt+0x2bb0>
   14190:	movw	r3, #56776	; 0xddc8
   14194:	movt	r3, #1
   14198:	str	r3, [sp]
   1419c:	movw	r3, #16608	; 0x40e0
   141a0:	movt	r3, #1
   141a4:	movw	r2, #16520	; 0x4088
   141a8:	movt	r2, #1
   141ac:	mov	r1, #0
   141b0:	mov	r0, #13
   141b4:	bl	1713c <__assert_fail@plt+0x5b18>
   141b8:	mov	r3, r0
   141bc:	mov	r2, r3
   141c0:	ldr	r3, [fp, #-12]
   141c4:	str	r2, [r3, #52]	; 0x34
   141c8:	ldr	r3, [fp, #-12]
   141cc:	ldr	r3, [r3, #52]	; 0x34
   141d0:	str	r3, [fp, #-8]
   141d4:	ldr	r3, [fp, #-8]
   141d8:	cmp	r3, #0
   141dc:	beq	14218 <__assert_fail@plt+0x2bf4>
   141e0:	ldr	r3, [fp, #-128]	; 0xffffff80
   141e4:	ldrd	r2, [r3, #64]	; 0x40
   141e8:	strd	r2, [fp, #-124]	; 0xffffff84
   141ec:	sub	r3, fp, #124	; 0x7c
   141f0:	mov	r1, r3
   141f4:	ldr	r0, [fp, #-8]
   141f8:	bl	16898 <__assert_fail@plt+0x5274>
   141fc:	str	r0, [fp, #-16]
   14200:	ldr	r3, [fp, #-16]
   14204:	cmp	r3, #0
   14208:	beq	14218 <__assert_fail@plt+0x2bf4>
   1420c:	ldr	r3, [fp, #-16]
   14210:	ldr	r3, [r3, #8]
   14214:	b	142c8 <__assert_fail@plt+0x2ca4>
   14218:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1421c:	cmp	r3, #0
   14220:	blt	14240 <__assert_fail@plt+0x2c1c>
   14224:	sub	r3, fp, #108	; 0x6c
   14228:	mov	r1, r3
   1422c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   14230:	bl	11240 <fstatfs64@plt>
   14234:	mov	r3, r0
   14238:	cmp	r3, #0
   1423c:	beq	14248 <__assert_fail@plt+0x2c24>
   14240:	mov	r3, #0
   14244:	b	142c8 <__assert_fail@plt+0x2ca4>
   14248:	ldr	r3, [fp, #-8]
   1424c:	cmp	r3, #0
   14250:	beq	142c4 <__assert_fail@plt+0x2ca0>
   14254:	mov	r0, #16
   14258:	bl	1ce10 <__assert_fail@plt+0xb7ec>
   1425c:	mov	r3, r0
   14260:	str	r3, [fp, #-20]	; 0xffffffec
   14264:	ldr	r3, [fp, #-20]	; 0xffffffec
   14268:	cmp	r3, #0
   1426c:	beq	142c4 <__assert_fail@plt+0x2ca0>
   14270:	ldr	r3, [fp, #-128]	; 0xffffff80
   14274:	ldrd	r2, [r3, #64]	; 0x40
   14278:	ldr	r1, [fp, #-20]	; 0xffffffec
   1427c:	strd	r2, [r1]
   14280:	ldr	r2, [fp, #-108]	; 0xffffff94
   14284:	ldr	r3, [fp, #-20]	; 0xffffffec
   14288:	str	r2, [r3, #8]
   1428c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14290:	ldr	r0, [fp, #-8]
   14294:	bl	17ee8 <__assert_fail@plt+0x68c4>
   14298:	str	r0, [fp, #-16]
   1429c:	ldr	r3, [fp, #-16]
   142a0:	cmp	r3, #0
   142a4:	beq	142bc <__assert_fail@plt+0x2c98>
   142a8:	ldr	r2, [fp, #-16]
   142ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   142b0:	cmp	r2, r3
   142b4:	beq	142c4 <__assert_fail@plt+0x2ca0>
   142b8:	bl	115e8 <abort@plt>
   142bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   142c0:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   142c4:	ldr	r3, [fp, #-108]	; 0xffffff94
   142c8:	mov	r0, r3
   142cc:	sub	sp, fp, #4
   142d0:	ldr	fp, [sp]
   142d4:	add	sp, sp, #4
   142d8:	pop	{pc}		; (ldr pc, [sp], #4)
   142dc:	str	fp, [sp, #-8]!
   142e0:	str	lr, [sp, #4]
   142e4:	add	fp, sp, #4
   142e8:	sub	sp, sp, #8
   142ec:	str	r0, [fp, #-8]
   142f0:	str	r1, [fp, #-12]
   142f4:	ldr	r1, [fp, #-12]
   142f8:	ldr	r0, [fp, #-8]
   142fc:	bl	14138 <__assert_fail@plt+0x2b14>
   14300:	mov	r2, r0
   14304:	movw	r3, #26985	; 0x6969
   14308:	cmp	r2, r3
   1430c:	beq	14330 <__assert_fail@plt+0x2d0c>
   14310:	movw	r3, #6548	; 0x1994
   14314:	movt	r3, #258	; 0x102
   14318:	cmp	r2, r3
   1431c:	beq	14330 <__assert_fail@plt+0x2d0c>
   14320:	movw	r3, #19778	; 0x4d42
   14324:	movt	r3, #65363	; 0xff53
   14328:	cmp	r2, r3
   1432c:	bne	14338 <__assert_fail@plt+0x2d14>
   14330:	mov	r3, #0
   14334:	b	1433c <__assert_fail@plt+0x2d18>
   14338:	mov	r3, #1
   1433c:	mov	r0, r3
   14340:	sub	sp, fp, #4
   14344:	ldr	fp, [sp]
   14348:	add	sp, sp, #4
   1434c:	pop	{pc}		; (ldr pc, [sp], #4)
   14350:	str	fp, [sp, #-8]!
   14354:	str	lr, [sp, #4]
   14358:	add	fp, sp, #4
   1435c:	sub	sp, sp, #8
   14360:	str	r0, [fp, #-8]
   14364:	str	r1, [fp, #-12]
   14368:	ldr	r1, [fp, #-12]
   1436c:	ldr	r0, [fp, #-8]
   14370:	bl	14138 <__assert_fail@plt+0x2b14>
   14374:	mov	r3, r0
   14378:	movw	r2, #26985	; 0x6969
   1437c:	cmp	r3, r2
   14380:	beq	143c8 <__assert_fail@plt+0x2da4>
   14384:	movw	r2, #26985	; 0x6969
   14388:	cmp	r3, r2
   1438c:	bgt	143ac <__assert_fail@plt+0x2d88>
   14390:	movw	r2, #19778	; 0x4d42
   14394:	movt	r2, #65363	; 0xff53
   14398:	cmp	r3, r2
   1439c:	beq	143c8 <__assert_fail@plt+0x2da4>
   143a0:	cmp	r3, #0
   143a4:	beq	143c8 <__assert_fail@plt+0x2da4>
   143a8:	b	143d0 <__assert_fail@plt+0x2dac>
   143ac:	movw	r2, #40864	; 0x9fa0
   143b0:	cmp	r3, r2
   143b4:	beq	143c8 <__assert_fail@plt+0x2da4>
   143b8:	movw	r2, #16719	; 0x414f
   143bc:	movt	r2, #21318	; 0x5346
   143c0:	cmp	r3, r2
   143c4:	bne	143d0 <__assert_fail@plt+0x2dac>
   143c8:	mov	r3, #0
   143cc:	b	143d4 <__assert_fail@plt+0x2db0>
   143d0:	mov	r3, #1
   143d4:	mov	r0, r3
   143d8:	sub	sp, fp, #4
   143dc:	ldr	fp, [sp]
   143e0:	add	sp, sp, #4
   143e4:	pop	{pc}		; (ldr pc, [sp], #4)
   143e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   143ec:	strd	r6, [sp, #8]
   143f0:	str	fp, [sp, #16]
   143f4:	str	lr, [sp, #20]
   143f8:	add	fp, sp, #20
   143fc:	mov	r5, r0
   14400:	ldr	r3, [r5]
   14404:	cmp	r3, #0
   14408:	beq	1441c <__assert_fail@plt+0x2df8>
   1440c:	ldr	r3, [r5, #48]	; 0x30
   14410:	and	r3, r3, #8192	; 0x2000
   14414:	cmp	r3, #0
   14418:	beq	14424 <__assert_fail@plt+0x2e00>
   1441c:	mov	r3, #0
   14420:	b	14b78 <__assert_fail@plt+0x3554>
   14424:	ldr	r4, [r5]
   14428:	ldrh	r6, [r4, #60]	; 0x3c
   1442c:	mov	r3, #3
   14430:	strh	r3, [r4, #60]	; 0x3c
   14434:	cmp	r6, #1
   14438:	bne	1445c <__assert_fail@plt+0x2e38>
   1443c:	mov	r2, #0
   14440:	mov	r1, r4
   14444:	mov	r0, r5
   14448:	bl	15ad0 <__assert_fail@plt+0x44ac>
   1444c:	mov	r3, r0
   14450:	strh	r3, [r4, #56]	; 0x38
   14454:	mov	r3, r4
   14458:	b	14b78 <__assert_fail@plt+0x3554>
   1445c:	cmp	r6, #2
   14460:	bne	14504 <__assert_fail@plt+0x2ee0>
   14464:	ldrh	r3, [r4, #56]	; 0x38
   14468:	cmp	r3, #12
   1446c:	beq	1447c <__assert_fail@plt+0x2e58>
   14470:	ldrh	r3, [r4, #56]	; 0x38
   14474:	cmp	r3, #13
   14478:	bne	14504 <__assert_fail@plt+0x2ee0>
   1447c:	mov	r2, #1
   14480:	mov	r1, r4
   14484:	mov	r0, r5
   14488:	bl	15ad0 <__assert_fail@plt+0x44ac>
   1448c:	mov	r3, r0
   14490:	strh	r3, [r4, #56]	; 0x38
   14494:	ldrh	r3, [r4, #56]	; 0x38
   14498:	cmp	r3, #1
   1449c:	bne	148c4 <__assert_fail@plt+0x32a0>
   144a0:	ldr	r3, [r5, #48]	; 0x30
   144a4:	and	r3, r3, #4
   144a8:	cmp	r3, #0
   144ac:	bne	148c4 <__assert_fail@plt+0x32a0>
   144b0:	movw	r1, #612	; 0x264
   144b4:	movt	r1, #2
   144b8:	mov	r0, r5
   144bc:	bl	1387c <__assert_fail@plt+0x2258>
   144c0:	mov	r3, r0
   144c4:	str	r3, [r4, #36]	; 0x24
   144c8:	ldr	r3, [r4, #36]	; 0x24
   144cc:	cmp	r3, #0
   144d0:	bge	144f0 <__assert_fail@plt+0x2ecc>
   144d4:	bl	114bc <__errno_location@plt>
   144d8:	mov	r3, r0
   144dc:	ldr	r3, [r3]
   144e0:	str	r3, [r4, #32]
   144e4:	mov	r3, #7
   144e8:	strh	r3, [r4, #56]	; 0x38
   144ec:	b	148c4 <__assert_fail@plt+0x32a0>
   144f0:	ldrh	r3, [r4, #58]	; 0x3a
   144f4:	orr	r3, r3, #2
   144f8:	uxth	r3, r3
   144fc:	strh	r3, [r4, #58]	; 0x3a
   14500:	b	148c4 <__assert_fail@plt+0x32a0>
   14504:	ldrh	r3, [r4, #56]	; 0x38
   14508:	cmp	r3, #1
   1450c:	bne	146bc <__assert_fail@plt+0x3098>
   14510:	cmp	r6, #4
   14514:	beq	1453c <__assert_fail@plt+0x2f18>
   14518:	ldr	r3, [r5, #48]	; 0x30
   1451c:	and	r3, r3, #64	; 0x40
   14520:	cmp	r3, #0
   14524:	beq	14594 <__assert_fail@plt+0x2f70>
   14528:	ldrd	r0, [r4, #64]	; 0x40
   1452c:	ldrd	r2, [r5, #16]
   14530:	cmp	r1, r3
   14534:	cmpeq	r0, r2
   14538:	beq	14594 <__assert_fail@plt+0x2f70>
   1453c:	ldrh	r3, [r4, #58]	; 0x3a
   14540:	and	r3, r3, #2
   14544:	cmp	r3, #0
   14548:	beq	14558 <__assert_fail@plt+0x2f34>
   1454c:	ldr	r3, [r4, #36]	; 0x24
   14550:	mov	r0, r3
   14554:	bl	115f4 <close@plt>
   14558:	ldr	r3, [r5, #4]
   1455c:	cmp	r3, #0
   14560:	beq	14578 <__assert_fail@plt+0x2f54>
   14564:	ldr	r3, [r5, #4]
   14568:	mov	r0, r3
   1456c:	bl	15f54 <__assert_fail@plt+0x4930>
   14570:	mov	r3, #0
   14574:	str	r3, [r5, #4]
   14578:	mov	r3, #6
   1457c:	strh	r3, [r4, #56]	; 0x38
   14580:	mov	r1, r4
   14584:	mov	r0, r5
   14588:	bl	13438 <__assert_fail@plt+0x1e14>
   1458c:	mov	r3, r4
   14590:	b	14b78 <__assert_fail@plt+0x3554>
   14594:	ldr	r3, [r5, #4]
   14598:	cmp	r3, #0
   1459c:	beq	145d0 <__assert_fail@plt+0x2fac>
   145a0:	ldr	r3, [r5, #48]	; 0x30
   145a4:	and	r3, r3, #4096	; 0x1000
   145a8:	cmp	r3, #0
   145ac:	beq	145d0 <__assert_fail@plt+0x2fac>
   145b0:	ldr	r3, [r5, #48]	; 0x30
   145b4:	bic	r3, r3, #4096	; 0x1000
   145b8:	str	r3, [r5, #48]	; 0x30
   145bc:	ldr	r3, [r5, #4]
   145c0:	mov	r0, r3
   145c4:	bl	15f54 <__assert_fail@plt+0x4930>
   145c8:	mov	r3, #0
   145cc:	str	r3, [r5, #4]
   145d0:	ldr	r3, [r5, #4]
   145d4:	cmp	r3, #0
   145d8:	beq	14640 <__assert_fail@plt+0x301c>
   145dc:	ldr	r3, [r4, #24]
   145e0:	mvn	r2, #0
   145e4:	mov	r1, r4
   145e8:	mov	r0, r5
   145ec:	bl	16264 <__assert_fail@plt+0x4c40>
   145f0:	mov	r3, r0
   145f4:	cmp	r3, #0
   145f8:	beq	146ac <__assert_fail@plt+0x3088>
   145fc:	bl	114bc <__errno_location@plt>
   14600:	mov	r3, r0
   14604:	ldr	r3, [r3]
   14608:	str	r3, [r4, #32]
   1460c:	ldrh	r3, [r4, #58]	; 0x3a
   14610:	orr	r3, r3, #1
   14614:	uxth	r3, r3
   14618:	strh	r3, [r4, #58]	; 0x3a
   1461c:	ldr	r4, [r5, #4]
   14620:	b	14634 <__assert_fail@plt+0x3010>
   14624:	ldr	r3, [r4, #4]
   14628:	ldr	r3, [r3, #24]
   1462c:	str	r3, [r4, #24]
   14630:	ldr	r4, [r4, #8]
   14634:	cmp	r4, #0
   14638:	bne	14624 <__assert_fail@plt+0x3000>
   1463c:	b	146ac <__assert_fail@plt+0x3088>
   14640:	mov	r1, #3
   14644:	mov	r0, r5
   14648:	bl	14f7c <__assert_fail@plt+0x3958>
   1464c:	mov	r3, r0
   14650:	str	r3, [r5, #4]
   14654:	ldr	r3, [r5, #4]
   14658:	cmp	r3, #0
   1465c:	bne	146ac <__assert_fail@plt+0x3088>
   14660:	ldr	r3, [r5, #48]	; 0x30
   14664:	and	r3, r3, #8192	; 0x2000
   14668:	cmp	r3, #0
   1466c:	beq	14678 <__assert_fail@plt+0x3054>
   14670:	mov	r3, #0
   14674:	b	14b78 <__assert_fail@plt+0x3554>
   14678:	ldr	r3, [r4, #32]
   1467c:	cmp	r3, #0
   14680:	beq	14698 <__assert_fail@plt+0x3074>
   14684:	ldrh	r3, [r4, #56]	; 0x38
   14688:	cmp	r3, #4
   1468c:	beq	14698 <__assert_fail@plt+0x3074>
   14690:	mov	r3, #7
   14694:	strh	r3, [r4, #56]	; 0x38
   14698:	mov	r1, r4
   1469c:	mov	r0, r5
   146a0:	bl	13438 <__assert_fail@plt+0x1e14>
   146a4:	mov	r3, r4
   146a8:	b	14b78 <__assert_fail@plt+0x3554>
   146ac:	ldr	r4, [r5, #4]
   146b0:	mov	r3, #0
   146b4:	str	r3, [r5, #4]
   146b8:	b	14854 <__assert_fail@plt+0x3230>
   146bc:	nop	{0}
   146c0:	mov	r6, r4
   146c4:	ldr	r3, [r4, #8]
   146c8:	cmp	r3, #0
   146cc:	bne	14738 <__assert_fail@plt+0x3114>
   146d0:	ldr	r3, [r4, #4]
   146d4:	ldr	r3, [r3, #12]
   146d8:	cmp	r3, #0
   146dc:	beq	14738 <__assert_fail@plt+0x3114>
   146e0:	ldr	r4, [r6, #4]
   146e4:	str	r4, [r5]
   146e8:	ldr	r2, [r5, #24]
   146ec:	ldr	r3, [r4, #40]	; 0x28
   146f0:	add	r3, r2, r3
   146f4:	mov	r2, #0
   146f8:	strb	r2, [r3]
   146fc:	mov	r1, #3
   14700:	mov	r0, r5
   14704:	bl	14f7c <__assert_fail@plt+0x3958>
   14708:	mov	r4, r0
   1470c:	cmp	r4, #0
   14710:	bne	1472c <__assert_fail@plt+0x3108>
   14714:	ldr	r3, [r5, #48]	; 0x30
   14718:	and	r3, r3, #8192	; 0x2000
   1471c:	cmp	r3, #0
   14720:	beq	14978 <__assert_fail@plt+0x3354>
   14724:	mov	r3, #0
   14728:	b	14b78 <__assert_fail@plt+0x3554>
   1472c:	mov	r0, r6
   14730:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   14734:	b	14854 <__assert_fail@plt+0x3230>
   14738:	ldr	r4, [r4, #8]
   1473c:	cmp	r4, #0
   14740:	beq	14980 <__assert_fail@plt+0x335c>
   14744:	str	r4, [r5]
   14748:	mov	r0, r6
   1474c:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   14750:	ldr	r3, [r4, #48]	; 0x30
   14754:	cmp	r3, #0
   14758:	bne	147a4 <__assert_fail@plt+0x3180>
   1475c:	mov	r0, r5
   14760:	bl	13798 <__assert_fail@plt+0x2174>
   14764:	mov	r3, r0
   14768:	cmp	r3, #0
   1476c:	beq	14784 <__assert_fail@plt+0x3160>
   14770:	ldr	r3, [r5, #48]	; 0x30
   14774:	orr	r3, r3, #8192	; 0x2000
   14778:	str	r3, [r5, #48]	; 0x30
   1477c:	mov	r3, #0
   14780:	b	14b78 <__assert_fail@plt+0x3554>
   14784:	mov	r0, r5
   14788:	bl	13580 <__assert_fail@plt+0x1f5c>
   1478c:	mov	r1, r4
   14790:	mov	r0, r5
   14794:	bl	13db0 <__assert_fail@plt+0x278c>
   14798:	mov	r0, r5
   1479c:	bl	1321c <__assert_fail@plt+0x1bf8>
   147a0:	b	148c8 <__assert_fail@plt+0x32a4>
   147a4:	ldrh	r3, [r4, #60]	; 0x3c
   147a8:	cmp	r3, #4
   147ac:	bne	147b4 <__assert_fail@plt+0x3190>
   147b0:	b	146c0 <__assert_fail@plt+0x309c>
   147b4:	ldrh	r3, [r4, #60]	; 0x3c
   147b8:	cmp	r3, #2
   147bc:	bne	14850 <__assert_fail@plt+0x322c>
   147c0:	mov	r2, #1
   147c4:	mov	r1, r4
   147c8:	mov	r0, r5
   147cc:	bl	15ad0 <__assert_fail@plt+0x44ac>
   147d0:	mov	r3, r0
   147d4:	strh	r3, [r4, #56]	; 0x38
   147d8:	ldrh	r3, [r4, #56]	; 0x38
   147dc:	cmp	r3, #1
   147e0:	bne	14844 <__assert_fail@plt+0x3220>
   147e4:	ldr	r3, [r5, #48]	; 0x30
   147e8:	and	r3, r3, #4
   147ec:	cmp	r3, #0
   147f0:	bne	14844 <__assert_fail@plt+0x3220>
   147f4:	movw	r1, #612	; 0x264
   147f8:	movt	r1, #2
   147fc:	mov	r0, r5
   14800:	bl	1387c <__assert_fail@plt+0x2258>
   14804:	mov	r3, r0
   14808:	str	r3, [r4, #36]	; 0x24
   1480c:	ldr	r3, [r4, #36]	; 0x24
   14810:	cmp	r3, #0
   14814:	bge	14834 <__assert_fail@plt+0x3210>
   14818:	bl	114bc <__errno_location@plt>
   1481c:	mov	r3, r0
   14820:	ldr	r3, [r3]
   14824:	str	r3, [r4, #32]
   14828:	mov	r3, #7
   1482c:	strh	r3, [r4, #56]	; 0x38
   14830:	b	14844 <__assert_fail@plt+0x3220>
   14834:	ldrh	r3, [r4, #58]	; 0x3a
   14838:	orr	r3, r3, #2
   1483c:	uxth	r3, r3
   14840:	strh	r3, [r4, #58]	; 0x3a
   14844:	mov	r3, #3
   14848:	strh	r3, [r4, #60]	; 0x3c
   1484c:	b	14854 <__assert_fail@plt+0x3230>
   14850:	nop	{0}
   14854:	ldr	r2, [r5, #24]
   14858:	ldr	r3, [r4, #4]
   1485c:	ldr	r1, [r3, #28]
   14860:	ldr	r3, [r4, #4]
   14864:	ldr	r3, [r3, #40]	; 0x28
   14868:	sub	r3, r3, #1
   1486c:	add	r3, r1, r3
   14870:	ldrb	r3, [r3]
   14874:	cmp	r3, #47	; 0x2f
   14878:	bne	1488c <__assert_fail@plt+0x3268>
   1487c:	ldr	r3, [r4, #4]
   14880:	ldr	r3, [r3, #40]	; 0x28
   14884:	sub	r3, r3, #1
   14888:	b	14894 <__assert_fail@plt+0x3270>
   1488c:	ldr	r3, [r4, #4]
   14890:	ldr	r3, [r3, #40]	; 0x28
   14894:	add	r6, r2, r3
   14898:	mov	r3, r6
   1489c:	add	r6, r3, #1
   148a0:	mov	r2, #47	; 0x2f
   148a4:	strb	r2, [r3]
   148a8:	add	r1, r4, #168	; 0xa8
   148ac:	ldr	r3, [r4, #52]	; 0x34
   148b0:	add	r3, r3, #1
   148b4:	mov	r2, r3
   148b8:	mov	r0, r6
   148bc:	bl	112ac <memmove@plt>
   148c0:	b	148c8 <__assert_fail@plt+0x32a4>
   148c4:	nop	{0}
   148c8:	str	r4, [r5]
   148cc:	ldrh	r3, [r4, #56]	; 0x38
   148d0:	cmp	r3, #11
   148d4:	bne	14918 <__assert_fail@plt+0x32f4>
   148d8:	ldrd	r2, [r4, #112]	; 0x70
   148dc:	cmp	r3, #0
   148e0:	cmpeq	r2, #2
   148e4:	bne	14904 <__assert_fail@plt+0x32e0>
   148e8:	mov	r2, #0
   148ec:	mov	r1, r4
   148f0:	mov	r0, r5
   148f4:	bl	15ad0 <__assert_fail@plt+0x44ac>
   148f8:	mov	r3, r0
   148fc:	strh	r3, [r4, #56]	; 0x38
   14900:	b	14918 <__assert_fail@plt+0x32f4>
   14904:	ldrd	r2, [r4, #112]	; 0x70
   14908:	cmp	r3, #0
   1490c:	cmpeq	r2, #1
   14910:	beq	14918 <__assert_fail@plt+0x32f4>
   14914:	bl	115e8 <abort@plt>
   14918:	ldrh	r3, [r4, #56]	; 0x38
   1491c:	cmp	r3, #1
   14920:	bne	14970 <__assert_fail@plt+0x334c>
   14924:	ldr	r3, [r4, #48]	; 0x30
   14928:	cmp	r3, #0
   1492c:	bne	14938 <__assert_fail@plt+0x3314>
   14930:	ldrd	r2, [r4, #64]	; 0x40
   14934:	strd	r2, [r5, #16]
   14938:	mov	r1, r4
   1493c:	mov	r0, r5
   14940:	bl	132f0 <__assert_fail@plt+0x1ccc>
   14944:	mov	r3, r0
   14948:	eor	r3, r3, #1
   1494c:	uxtb	r3, r3
   14950:	cmp	r3, #0
   14954:	beq	14970 <__assert_fail@plt+0x334c>
   14958:	bl	114bc <__errno_location@plt>
   1495c:	mov	r2, r0
   14960:	mov	r3, #12
   14964:	str	r3, [r2]
   14968:	mov	r3, #0
   1496c:	b	14b78 <__assert_fail@plt+0x3554>
   14970:	mov	r3, r4
   14974:	b	14b78 <__assert_fail@plt+0x3554>
   14978:	nop	{0}
   1497c:	b	14984 <__assert_fail@plt+0x3360>
   14980:	nop	{0}
   14984:	ldr	r4, [r6, #4]
   14988:	str	r4, [r5]
   1498c:	mov	r0, r6
   14990:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   14994:	ldr	r3, [r4, #48]	; 0x30
   14998:	cmn	r3, #1
   1499c:	bne	149c8 <__assert_fail@plt+0x33a4>
   149a0:	mov	r0, r4
   149a4:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   149a8:	bl	114bc <__errno_location@plt>
   149ac:	mov	r2, r0
   149b0:	mov	r3, #0
   149b4:	str	r3, [r2]
   149b8:	mov	r3, #0
   149bc:	str	r3, [r5]
   149c0:	mov	r3, #0
   149c4:	b	14b78 <__assert_fail@plt+0x3554>
   149c8:	ldrh	r3, [r4, #56]	; 0x38
   149cc:	cmp	r3, #11
   149d0:	bne	149d8 <__assert_fail@plt+0x33b4>
   149d4:	bl	115e8 <abort@plt>
   149d8:	ldr	r2, [r5, #24]
   149dc:	ldr	r3, [r4, #40]	; 0x28
   149e0:	add	r3, r2, r3
   149e4:	mov	r2, #0
   149e8:	strb	r2, [r3]
   149ec:	ldr	r3, [r4, #48]	; 0x30
   149f0:	cmp	r3, #0
   149f4:	bne	14a2c <__assert_fail@plt+0x3408>
   149f8:	mov	r0, r5
   149fc:	bl	13798 <__assert_fail@plt+0x2174>
   14a00:	mov	r3, r0
   14a04:	cmp	r3, #0
   14a08:	beq	14b1c <__assert_fail@plt+0x34f8>
   14a0c:	bl	114bc <__errno_location@plt>
   14a10:	mov	r3, r0
   14a14:	ldr	r3, [r3]
   14a18:	str	r3, [r4, #32]
   14a1c:	ldr	r3, [r5, #48]	; 0x30
   14a20:	orr	r3, r3, #8192	; 0x2000
   14a24:	str	r3, [r5, #48]	; 0x30
   14a28:	b	14b1c <__assert_fail@plt+0x34f8>
   14a2c:	ldrh	r3, [r4, #58]	; 0x3a
   14a30:	and	r3, r3, #2
   14a34:	cmp	r3, #0
   14a38:	beq	14acc <__assert_fail@plt+0x34a8>
   14a3c:	ldr	r3, [r5, #48]	; 0x30
   14a40:	and	r3, r3, #4
   14a44:	cmp	r3, #0
   14a48:	bne	14abc <__assert_fail@plt+0x3498>
   14a4c:	ldr	r3, [r5, #48]	; 0x30
   14a50:	and	r3, r3, #512	; 0x200
   14a54:	cmp	r3, #0
   14a58:	beq	14a78 <__assert_fail@plt+0x3454>
   14a5c:	ldr	r3, [r4, #36]	; 0x24
   14a60:	mov	r2, #1
   14a64:	mov	r1, r3
   14a68:	mov	r0, r5
   14a6c:	bl	136c8 <__assert_fail@plt+0x20a4>
   14a70:	mov	r3, #0
   14a74:	b	14a98 <__assert_fail@plt+0x3474>
   14a78:	ldr	r3, [r4, #36]	; 0x24
   14a7c:	mov	r0, r3
   14a80:	bl	11588 <fchdir@plt>
   14a84:	mov	r3, r0
   14a88:	cmp	r3, #0
   14a8c:	movne	r3, #1
   14a90:	moveq	r3, #0
   14a94:	uxtb	r3, r3
   14a98:	cmp	r3, #0
   14a9c:	beq	14abc <__assert_fail@plt+0x3498>
   14aa0:	bl	114bc <__errno_location@plt>
   14aa4:	mov	r3, r0
   14aa8:	ldr	r3, [r3]
   14aac:	str	r3, [r4, #32]
   14ab0:	ldr	r3, [r5, #48]	; 0x30
   14ab4:	orr	r3, r3, #8192	; 0x2000
   14ab8:	str	r3, [r5, #48]	; 0x30
   14abc:	ldr	r3, [r4, #36]	; 0x24
   14ac0:	mov	r0, r3
   14ac4:	bl	115f4 <close@plt>
   14ac8:	b	14b1c <__assert_fail@plt+0x34f8>
   14acc:	ldrh	r3, [r4, #58]	; 0x3a
   14ad0:	and	r3, r3, #1
   14ad4:	cmp	r3, #0
   14ad8:	bne	14b1c <__assert_fail@plt+0x34f8>
   14adc:	ldr	r1, [r4, #4]
   14ae0:	movw	r3, #616	; 0x268
   14ae4:	movt	r3, #2
   14ae8:	mvn	r2, #0
   14aec:	mov	r0, r5
   14af0:	bl	16264 <__assert_fail@plt+0x4c40>
   14af4:	mov	r3, r0
   14af8:	cmp	r3, #0
   14afc:	beq	14b1c <__assert_fail@plt+0x34f8>
   14b00:	bl	114bc <__errno_location@plt>
   14b04:	mov	r3, r0
   14b08:	ldr	r3, [r3]
   14b0c:	str	r3, [r4, #32]
   14b10:	ldr	r3, [r5, #48]	; 0x30
   14b14:	orr	r3, r3, #8192	; 0x2000
   14b18:	str	r3, [r5, #48]	; 0x30
   14b1c:	ldrh	r3, [r4, #56]	; 0x38
   14b20:	cmp	r3, #2
   14b24:	beq	14b5c <__assert_fail@plt+0x3538>
   14b28:	ldr	r3, [r4, #32]
   14b2c:	cmp	r3, #0
   14b30:	beq	14b3c <__assert_fail@plt+0x3518>
   14b34:	mov	r3, #7
   14b38:	b	14b40 <__assert_fail@plt+0x351c>
   14b3c:	mov	r3, #6
   14b40:	strh	r3, [r4, #56]	; 0x38
   14b44:	ldr	r3, [r4, #32]
   14b48:	cmp	r3, #0
   14b4c:	bne	14b5c <__assert_fail@plt+0x3538>
   14b50:	mov	r1, r4
   14b54:	mov	r0, r5
   14b58:	bl	13438 <__assert_fail@plt+0x1e14>
   14b5c:	ldr	r3, [r5, #48]	; 0x30
   14b60:	and	r3, r3, #8192	; 0x2000
   14b64:	cmp	r3, #0
   14b68:	bne	14b74 <__assert_fail@plt+0x3550>
   14b6c:	mov	r3, r4
   14b70:	b	14b78 <__assert_fail@plt+0x3554>
   14b74:	mov	r3, #0
   14b78:	mov	r0, r3
   14b7c:	sub	sp, fp, #20
   14b80:	ldrd	r4, [sp]
   14b84:	ldrd	r6, [sp, #8]
   14b88:	ldr	fp, [sp, #16]
   14b8c:	add	sp, sp, #20
   14b90:	pop	{pc}		; (ldr pc, [sp], #4)
   14b94:	str	fp, [sp, #-8]!
   14b98:	str	lr, [sp, #4]
   14b9c:	add	fp, sp, #4
   14ba0:	sub	sp, sp, #16
   14ba4:	str	r0, [fp, #-8]
   14ba8:	str	r1, [fp, #-12]
   14bac:	str	r2, [fp, #-16]
   14bb0:	ldr	r3, [fp, #-16]
   14bb4:	cmp	r3, #0
   14bb8:	beq	14c04 <__assert_fail@plt+0x35e0>
   14bbc:	ldr	r3, [fp, #-16]
   14bc0:	cmp	r3, #1
   14bc4:	beq	14c04 <__assert_fail@plt+0x35e0>
   14bc8:	ldr	r3, [fp, #-16]
   14bcc:	cmp	r3, #2
   14bd0:	beq	14c04 <__assert_fail@plt+0x35e0>
   14bd4:	ldr	r3, [fp, #-16]
   14bd8:	cmp	r3, #3
   14bdc:	beq	14c04 <__assert_fail@plt+0x35e0>
   14be0:	ldr	r3, [fp, #-16]
   14be4:	cmp	r3, #4
   14be8:	beq	14c04 <__assert_fail@plt+0x35e0>
   14bec:	bl	114bc <__errno_location@plt>
   14bf0:	mov	r2, r0
   14bf4:	mov	r3, #22
   14bf8:	str	r3, [r2]
   14bfc:	mov	r3, #1
   14c00:	b	14c18 <__assert_fail@plt+0x35f4>
   14c04:	ldr	r3, [fp, #-16]
   14c08:	uxth	r2, r3
   14c0c:	ldr	r3, [fp, #-12]
   14c10:	strh	r2, [r3, #60]	; 0x3c
   14c14:	mov	r3, #0
   14c18:	mov	r0, r3
   14c1c:	sub	sp, fp, #4
   14c20:	ldr	fp, [sp]
   14c24:	add	sp, sp, #4
   14c28:	pop	{pc}		; (ldr pc, [sp], #4)
   14c2c:	strd	r4, [sp, #-16]!
   14c30:	str	fp, [sp, #8]
   14c34:	str	lr, [sp, #12]
   14c38:	add	fp, sp, #12
   14c3c:	sub	sp, sp, #16
   14c40:	mov	r4, r0
   14c44:	str	r1, [fp, #-24]	; 0xffffffe8
   14c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14c4c:	cmp	r3, #0
   14c50:	beq	14c78 <__assert_fail@plt+0x3654>
   14c54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14c58:	cmp	r3, #4096	; 0x1000
   14c5c:	beq	14c78 <__assert_fail@plt+0x3654>
   14c60:	bl	114bc <__errno_location@plt>
   14c64:	mov	r2, r0
   14c68:	mov	r3, #22
   14c6c:	str	r3, [r2]
   14c70:	mov	r3, #0
   14c74:	b	14e10 <__assert_fail@plt+0x37ec>
   14c78:	ldr	r5, [r4]
   14c7c:	bl	114bc <__errno_location@plt>
   14c80:	mov	r2, r0
   14c84:	mov	r3, #0
   14c88:	str	r3, [r2]
   14c8c:	ldr	r3, [r4, #48]	; 0x30
   14c90:	and	r3, r3, #8192	; 0x2000
   14c94:	cmp	r3, #0
   14c98:	beq	14ca4 <__assert_fail@plt+0x3680>
   14c9c:	mov	r3, #0
   14ca0:	b	14e10 <__assert_fail@plt+0x37ec>
   14ca4:	ldrh	r3, [r5, #56]	; 0x38
   14ca8:	cmp	r3, #9
   14cac:	bne	14cb8 <__assert_fail@plt+0x3694>
   14cb0:	ldr	r3, [r5, #8]
   14cb4:	b	14e10 <__assert_fail@plt+0x37ec>
   14cb8:	ldrh	r3, [r5, #56]	; 0x38
   14cbc:	cmp	r3, #1
   14cc0:	beq	14ccc <__assert_fail@plt+0x36a8>
   14cc4:	mov	r3, #0
   14cc8:	b	14e10 <__assert_fail@plt+0x37ec>
   14ccc:	ldr	r3, [r4, #4]
   14cd0:	cmp	r3, #0
   14cd4:	beq	14ce4 <__assert_fail@plt+0x36c0>
   14cd8:	ldr	r3, [r4, #4]
   14cdc:	mov	r0, r3
   14ce0:	bl	15f54 <__assert_fail@plt+0x4930>
   14ce4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ce8:	cmp	r3, #4096	; 0x1000
   14cec:	bne	14d08 <__assert_fail@plt+0x36e4>
   14cf0:	ldr	r3, [r4, #48]	; 0x30
   14cf4:	orr	r3, r3, #4096	; 0x1000
   14cf8:	str	r3, [r4, #48]	; 0x30
   14cfc:	mov	r3, #2
   14d00:	str	r3, [fp, #-24]	; 0xffffffe8
   14d04:	b	14d10 <__assert_fail@plt+0x36ec>
   14d08:	mov	r3, #1
   14d0c:	str	r3, [fp, #-24]	; 0xffffffe8
   14d10:	ldr	r3, [r5, #48]	; 0x30
   14d14:	cmp	r3, #0
   14d18:	bne	14d3c <__assert_fail@plt+0x3718>
   14d1c:	ldr	r3, [r5, #24]
   14d20:	ldrb	r3, [r3]
   14d24:	cmp	r3, #47	; 0x2f
   14d28:	beq	14d3c <__assert_fail@plt+0x3718>
   14d2c:	ldr	r3, [r4, #48]	; 0x30
   14d30:	and	r3, r3, #4
   14d34:	cmp	r3, #0
   14d38:	beq	14d58 <__assert_fail@plt+0x3734>
   14d3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14d40:	mov	r0, r4
   14d44:	bl	14f7c <__assert_fail@plt+0x3958>
   14d48:	mov	r3, r0
   14d4c:	str	r3, [r4, #4]
   14d50:	ldr	r3, [r4, #4]
   14d54:	b	14e10 <__assert_fail@plt+0x37ec>
   14d58:	movw	r1, #612	; 0x264
   14d5c:	movt	r1, #2
   14d60:	mov	r0, r4
   14d64:	bl	1387c <__assert_fail@plt+0x2258>
   14d68:	str	r0, [fp, #-16]
   14d6c:	ldr	r3, [fp, #-16]
   14d70:	cmp	r3, #0
   14d74:	bge	14d88 <__assert_fail@plt+0x3764>
   14d78:	mov	r3, #0
   14d7c:	str	r3, [r4, #4]
   14d80:	mov	r3, #0
   14d84:	b	14e10 <__assert_fail@plt+0x37ec>
   14d88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14d8c:	mov	r0, r4
   14d90:	bl	14f7c <__assert_fail@plt+0x3958>
   14d94:	mov	r3, r0
   14d98:	str	r3, [r4, #4]
   14d9c:	ldr	r3, [r4, #48]	; 0x30
   14da0:	and	r3, r3, #512	; 0x200
   14da4:	cmp	r3, #0
   14da8:	beq	14dc0 <__assert_fail@plt+0x379c>
   14dac:	mov	r2, #1
   14db0:	ldr	r1, [fp, #-16]
   14db4:	mov	r0, r4
   14db8:	bl	136c8 <__assert_fail@plt+0x20a4>
   14dbc:	b	14e0c <__assert_fail@plt+0x37e8>
   14dc0:	ldr	r0, [fp, #-16]
   14dc4:	bl	11588 <fchdir@plt>
   14dc8:	mov	r3, r0
   14dcc:	cmp	r3, #0
   14dd0:	beq	14e04 <__assert_fail@plt+0x37e0>
   14dd4:	bl	114bc <__errno_location@plt>
   14dd8:	mov	r3, r0
   14ddc:	ldr	r3, [r3]
   14de0:	str	r3, [fp, #-20]	; 0xffffffec
   14de4:	ldr	r0, [fp, #-16]
   14de8:	bl	115f4 <close@plt>
   14dec:	bl	114bc <__errno_location@plt>
   14df0:	mov	r2, r0
   14df4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14df8:	str	r3, [r2]
   14dfc:	mov	r3, #0
   14e00:	b	14e10 <__assert_fail@plt+0x37ec>
   14e04:	ldr	r0, [fp, #-16]
   14e08:	bl	115f4 <close@plt>
   14e0c:	ldr	r3, [r4, #4]
   14e10:	mov	r0, r3
   14e14:	sub	sp, fp, #12
   14e18:	ldrd	r4, [sp]
   14e1c:	ldr	fp, [sp, #8]
   14e20:	add	sp, sp, #12
   14e24:	pop	{pc}		; (ldr pc, [sp], #4)
   14e28:	push	{fp}		; (str fp, [sp, #-4]!)
   14e2c:	add	fp, sp, #0
   14e30:	sub	sp, sp, #12
   14e34:	str	r0, [fp, #-8]
   14e38:	str	r1, [fp, #-12]
   14e3c:	ldr	r3, [fp, #-8]
   14e40:	ldr	r3, [r3]
   14e44:	ldrd	r0, [r3, #160]	; 0xa0
   14e48:	ldr	r3, [fp, #-12]
   14e4c:	ldr	r3, [r3]
   14e50:	ldrd	r2, [r3, #160]	; 0xa0
   14e54:	cmp	r1, r3
   14e58:	cmpeq	r0, r2
   14e5c:	movhi	r3, #1
   14e60:	movls	r3, #0
   14e64:	uxtb	r3, r3
   14e68:	mov	ip, r3
   14e6c:	ldr	r3, [fp, #-8]
   14e70:	ldr	r3, [r3]
   14e74:	ldrd	r0, [r3, #160]	; 0xa0
   14e78:	ldr	r3, [fp, #-12]
   14e7c:	ldr	r3, [r3]
   14e80:	ldrd	r2, [r3, #160]	; 0xa0
   14e84:	cmp	r1, r3
   14e88:	cmpeq	r0, r2
   14e8c:	movcc	r3, #1
   14e90:	movcs	r3, #0
   14e94:	uxtb	r3, r3
   14e98:	sub	r3, ip, r3
   14e9c:	mov	r0, r3
   14ea0:	add	sp, fp, #0
   14ea4:	pop	{fp}		; (ldr fp, [sp], #4)
   14ea8:	bx	lr
   14eac:	push	{fp}		; (str fp, [sp, #-4]!)
   14eb0:	add	fp, sp, #0
   14eb4:	sub	sp, sp, #20
   14eb8:	str	r0, [fp, #-16]
   14ebc:	str	r1, [fp, #-20]	; 0xffffffec
   14ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ec4:	sub	r3, r3, #1
   14ec8:	cmp	r3, #11
   14ecc:	ldrls	pc, [pc, r3, lsl #2]
   14ed0:	b	14f58 <__assert_fail@plt+0x3934>
   14ed4:	andeq	r4, r1, r8, lsr #30
   14ed8:	andeq	r4, r1, r0, lsl pc
   14edc:	andeq	r4, r1, r8, asr pc
   14ee0:	andeq	r4, r1, ip, lsl pc
   14ee4:	andeq	r4, r1, r8, asr pc
   14ee8:	andeq	r4, r1, r4, lsl #30
   14eec:	andeq	r4, r1, r8, asr pc
   14ef0:	andeq	r4, r1, r0, asr #30
   14ef4:	andeq	r4, r1, r8, asr pc
   14ef8:	andeq	r4, r1, r4, lsr pc
   14efc:	andeq	r4, r1, r8, asr pc
   14f00:	andeq	r4, r1, ip, asr #30
   14f04:	mov	r3, #24576	; 0x6000
   14f08:	str	r3, [fp, #-8]
   14f0c:	b	14f60 <__assert_fail@plt+0x393c>
   14f10:	mov	r3, #8192	; 0x2000
   14f14:	str	r3, [fp, #-8]
   14f18:	b	14f60 <__assert_fail@plt+0x393c>
   14f1c:	mov	r3, #16384	; 0x4000
   14f20:	str	r3, [fp, #-8]
   14f24:	b	14f60 <__assert_fail@plt+0x393c>
   14f28:	mov	r3, #4096	; 0x1000
   14f2c:	str	r3, [fp, #-8]
   14f30:	b	14f60 <__assert_fail@plt+0x393c>
   14f34:	mov	r3, #40960	; 0xa000
   14f38:	str	r3, [fp, #-8]
   14f3c:	b	14f60 <__assert_fail@plt+0x393c>
   14f40:	mov	r3, #32768	; 0x8000
   14f44:	str	r3, [fp, #-8]
   14f48:	b	14f60 <__assert_fail@plt+0x393c>
   14f4c:	mov	r3, #49152	; 0xc000
   14f50:	str	r3, [fp, #-8]
   14f54:	b	14f60 <__assert_fail@plt+0x393c>
   14f58:	mov	r3, #0
   14f5c:	str	r3, [fp, #-8]
   14f60:	ldr	r3, [fp, #-16]
   14f64:	ldr	r2, [fp, #-8]
   14f68:	str	r2, [r3, #16]
   14f6c:	nop	{0}
   14f70:	add	sp, fp, #0
   14f74:	pop	{fp}		; (ldr fp, [sp], #4)
   14f78:	bx	lr
   14f7c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14f80:	strd	r6, [sp, #8]
   14f84:	str	fp, [sp, #16]
   14f88:	str	lr, [sp, #20]
   14f8c:	add	fp, sp, #20
   14f90:	sub	sp, sp, #80	; 0x50
   14f94:	mov	r4, r0
   14f98:	str	r1, [fp, #-96]	; 0xffffffa0
   14f9c:	ldr	r3, [r4]
   14fa0:	str	r3, [fp, #-44]	; 0xffffffd4
   14fa4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14fa8:	ldr	r3, [r3, #12]
   14fac:	cmp	r3, #0
   14fb0:	movne	r3, #1
   14fb4:	moveq	r3, #0
   14fb8:	strb	r3, [fp, #-45]	; 0xffffffd3
   14fbc:	mov	r3, #0
   14fc0:	strb	r3, [fp, #-37]	; 0xffffffdb
   14fc4:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   14fc8:	cmp	r3, #0
   14fcc:	beq	15048 <__assert_fail@plt+0x3a24>
   14fd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14fd4:	ldr	r3, [r3, #12]
   14fd8:	str	r3, [fp, #-52]	; 0xffffffcc
   14fdc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14fe0:	bl	1157c <dirfd@plt>
   14fe4:	mov	r3, r0
   14fe8:	str	r3, [fp, #-92]	; 0xffffffa4
   14fec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14ff0:	cmp	r3, #0
   14ff4:	bge	151ac <__assert_fail@plt+0x3b88>
   14ff8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14ffc:	ldr	r3, [r3, #12]
   15000:	mov	r0, r3
   15004:	bl	1160c <closedir@plt>
   15008:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1500c:	mov	r2, #0
   15010:	str	r2, [r3, #12]
   15014:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15018:	cmp	r3, #3
   1501c:	bne	15040 <__assert_fail@plt+0x3a1c>
   15020:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15024:	mov	r2, #4
   15028:	strh	r2, [r3, #56]	; 0x38
   1502c:	bl	114bc <__errno_location@plt>
   15030:	mov	r3, r0
   15034:	ldr	r2, [r3]
   15038:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1503c:	str	r2, [r3, #32]
   15040:	mov	r3, #0
   15044:	b	15ab4 <__assert_fail@plt+0x4490>
   15048:	ldr	r3, [r4, #48]	; 0x30
   1504c:	and	r3, r3, #4
   15050:	cmp	r3, #0
   15054:	bne	15070 <__assert_fail@plt+0x3a4c>
   15058:	ldr	r3, [r4, #48]	; 0x30
   1505c:	and	r3, r3, #512	; 0x200
   15060:	cmp	r3, #0
   15064:	beq	15070 <__assert_fail@plt+0x3a4c>
   15068:	ldr	r0, [r4, #32]
   1506c:	b	15074 <__assert_fail@plt+0x3a50>
   15070:	mvn	r0, #99	; 0x63
   15074:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15078:	ldr	r1, [r3, #24]
   1507c:	ldr	r3, [r4, #48]	; 0x30
   15080:	and	r3, r3, #16
   15084:	cmp	r3, #0
   15088:	beq	150b4 <__assert_fail@plt+0x3a90>
   1508c:	ldr	r3, [r4, #48]	; 0x30
   15090:	and	r3, r3, #1
   15094:	cmp	r3, #0
   15098:	beq	150ac <__assert_fail@plt+0x3a88>
   1509c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   150a0:	ldr	r3, [r3, #48]	; 0x30
   150a4:	cmp	r3, #0
   150a8:	beq	150b4 <__assert_fail@plt+0x3a90>
   150ac:	mov	r2, #32768	; 0x8000
   150b0:	b	150b8 <__assert_fail@plt+0x3a94>
   150b4:	mov	r2, #0
   150b8:	sub	r3, fp, #92	; 0x5c
   150bc:	bl	1842c <__assert_fail@plt+0x6e08>
   150c0:	mov	r3, r0
   150c4:	mov	r2, r3
   150c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   150cc:	str	r2, [r3, #12]
   150d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   150d4:	ldr	r3, [r3, #12]
   150d8:	cmp	r3, #0
   150dc:	bne	15114 <__assert_fail@plt+0x3af0>
   150e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   150e4:	cmp	r3, #3
   150e8:	bne	1510c <__assert_fail@plt+0x3ae8>
   150ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   150f0:	mov	r2, #4
   150f4:	strh	r2, [r3, #56]	; 0x38
   150f8:	bl	114bc <__errno_location@plt>
   150fc:	mov	r3, r0
   15100:	ldr	r2, [r3]
   15104:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15108:	str	r2, [r3, #32]
   1510c:	mov	r3, #0
   15110:	b	15ab4 <__assert_fail@plt+0x4490>
   15114:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15118:	ldrh	r3, [r3, #56]	; 0x38
   1511c:	cmp	r3, #11
   15120:	bne	15148 <__assert_fail@plt+0x3b24>
   15124:	mov	r2, #0
   15128:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1512c:	mov	r0, r4
   15130:	bl	15ad0 <__assert_fail@plt+0x44ac>
   15134:	mov	r3, r0
   15138:	mov	r2, r3
   1513c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15140:	strh	r2, [r3, #56]	; 0x38
   15144:	b	151ac <__assert_fail@plt+0x3b88>
   15148:	ldr	r3, [r4, #48]	; 0x30
   1514c:	and	r3, r3, #256	; 0x100
   15150:	cmp	r3, #0
   15154:	beq	151ac <__assert_fail@plt+0x3b88>
   15158:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1515c:	mov	r0, r4
   15160:	bl	13438 <__assert_fail@plt+0x1e14>
   15164:	mov	r2, #0
   15168:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1516c:	mov	r0, r4
   15170:	bl	15ad0 <__assert_fail@plt+0x44ac>
   15174:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15178:	mov	r0, r4
   1517c:	bl	132f0 <__assert_fail@plt+0x1ccc>
   15180:	mov	r3, r0
   15184:	eor	r3, r3, #1
   15188:	uxtb	r3, r3
   1518c:	cmp	r3, #0
   15190:	beq	151ac <__assert_fail@plt+0x3b88>
   15194:	bl	114bc <__errno_location@plt>
   15198:	mov	r2, r0
   1519c:	mov	r3, #12
   151a0:	str	r3, [r2]
   151a4:	mov	r3, #0
   151a8:	b	15ab4 <__assert_fail@plt+0x4490>
   151ac:	ldr	r3, [r4, #44]	; 0x2c
   151b0:	cmp	r3, #0
   151b4:	beq	151c0 <__assert_fail@plt+0x3b9c>
   151b8:	mvn	r3, #0
   151bc:	b	151c8 <__assert_fail@plt+0x3ba4>
   151c0:	movw	r3, #34464	; 0x86a0
   151c4:	movt	r3, #1
   151c8:	str	r3, [fp, #-56]	; 0xffffffc8
   151cc:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   151d0:	cmp	r3, #0
   151d4:	beq	151e4 <__assert_fail@plt+0x3bc0>
   151d8:	mov	r3, #1
   151dc:	strb	r3, [fp, #-25]	; 0xffffffe7
   151e0:	b	15380 <__assert_fail@plt+0x3d5c>
   151e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   151e8:	cmp	r3, #2
   151ec:	beq	15254 <__assert_fail@plt+0x3c30>
   151f0:	ldr	r3, [r4, #48]	; 0x30
   151f4:	and	r3, r3, #8
   151f8:	cmp	r3, #0
   151fc:	beq	1524c <__assert_fail@plt+0x3c28>
   15200:	ldr	r3, [r4, #48]	; 0x30
   15204:	and	r3, r3, #16
   15208:	cmp	r3, #0
   1520c:	beq	1524c <__assert_fail@plt+0x3c28>
   15210:	ldr	r3, [r4, #48]	; 0x30
   15214:	and	r3, r3, #32
   15218:	cmp	r3, #0
   1521c:	bne	1524c <__assert_fail@plt+0x3c28>
   15220:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15224:	ldr	r3, [r3, #84]	; 0x54
   15228:	cmp	r3, #2
   1522c:	bne	1524c <__assert_fail@plt+0x3c28>
   15230:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15234:	mov	r1, r3
   15238:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1523c:	bl	14350 <__assert_fail@plt+0x2d2c>
   15240:	mov	r3, r0
   15244:	cmp	r3, #0
   15248:	bne	15254 <__assert_fail@plt+0x3c30>
   1524c:	mov	r3, #1
   15250:	b	15258 <__assert_fail@plt+0x3c34>
   15254:	mov	r3, #0
   15258:	strb	r3, [fp, #-25]	; 0xffffffe7
   1525c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   15260:	and	r3, r3, #1
   15264:	strb	r3, [fp, #-25]	; 0xffffffe7
   15268:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1526c:	cmp	r3, #0
   15270:	bne	15280 <__assert_fail@plt+0x3c5c>
   15274:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15278:	cmp	r3, #3
   1527c:	bne	15380 <__assert_fail@plt+0x3d5c>
   15280:	ldr	r3, [r4, #48]	; 0x30
   15284:	and	r3, r3, #512	; 0x200
   15288:	cmp	r3, #0
   1528c:	beq	152ac <__assert_fail@plt+0x3c88>
   15290:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15294:	mov	r2, #3
   15298:	movw	r1, #1030	; 0x406
   1529c:	mov	r0, r3
   152a0:	bl	1d89c <__assert_fail@plt+0xc278>
   152a4:	mov	r3, r0
   152a8:	str	r3, [fp, #-92]	; 0xffffffa4
   152ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   152b0:	cmp	r3, #0
   152b4:	blt	152d8 <__assert_fail@plt+0x3cb4>
   152b8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   152bc:	mov	r3, #0
   152c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   152c4:	mov	r0, r4
   152c8:	bl	16264 <__assert_fail@plt+0x4c40>
   152cc:	mov	r3, r0
   152d0:	cmp	r3, #0
   152d4:	beq	15378 <__assert_fail@plt+0x3d54>
   152d8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   152dc:	cmp	r3, #0
   152e0:	beq	15304 <__assert_fail@plt+0x3ce0>
   152e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   152e8:	cmp	r3, #3
   152ec:	bne	15304 <__assert_fail@plt+0x3ce0>
   152f0:	bl	114bc <__errno_location@plt>
   152f4:	mov	r3, r0
   152f8:	ldr	r2, [r3]
   152fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15300:	str	r2, [r3, #32]
   15304:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15308:	ldrh	r3, [r3, #58]	; 0x3a
   1530c:	orr	r3, r3, #1
   15310:	uxth	r2, r3
   15314:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15318:	strh	r2, [r3, #58]	; 0x3a
   1531c:	mov	r3, #0
   15320:	strb	r3, [fp, #-25]	; 0xffffffe7
   15324:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15328:	ldr	r3, [r3, #12]
   1532c:	mov	r0, r3
   15330:	bl	1160c <closedir@plt>
   15334:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15338:	mov	r2, #0
   1533c:	str	r2, [r3, #12]
   15340:	ldr	r3, [r4, #48]	; 0x30
   15344:	and	r3, r3, #512	; 0x200
   15348:	cmp	r3, #0
   1534c:	beq	15368 <__assert_fail@plt+0x3d44>
   15350:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15354:	cmp	r3, #0
   15358:	blt	15368 <__assert_fail@plt+0x3d44>
   1535c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15360:	mov	r0, r3
   15364:	bl	115f4 <close@plt>
   15368:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1536c:	mov	r2, #0
   15370:	str	r2, [r3, #12]
   15374:	b	15380 <__assert_fail@plt+0x3d5c>
   15378:	mov	r3, #1
   1537c:	strb	r3, [fp, #-25]	; 0xffffffe7
   15380:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15384:	ldr	r2, [r3, #28]
   15388:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1538c:	ldr	r3, [r3, #40]	; 0x28
   15390:	sub	r3, r3, #1
   15394:	add	r3, r2, r3
   15398:	ldrb	r3, [r3]
   1539c:	cmp	r3, #47	; 0x2f
   153a0:	bne	153b4 <__assert_fail@plt+0x3d90>
   153a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   153a8:	ldr	r3, [r3, #40]	; 0x28
   153ac:	sub	r3, r3, #1
   153b0:	b	153bc <__assert_fail@plt+0x3d98>
   153b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   153b8:	ldr	r3, [r3, #40]	; 0x28
   153bc:	str	r3, [fp, #-60]	; 0xffffffc4
   153c0:	ldr	r3, [r4, #48]	; 0x30
   153c4:	and	r3, r3, #4
   153c8:	cmp	r3, #0
   153cc:	beq	153f8 <__assert_fail@plt+0x3dd4>
   153d0:	ldr	r2, [r4, #24]
   153d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   153d8:	add	r3, r2, r3
   153dc:	str	r3, [fp, #-36]	; 0xffffffdc
   153e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   153e4:	add	r2, r3, #1
   153e8:	str	r2, [fp, #-36]	; 0xffffffdc
   153ec:	mov	r2, #47	; 0x2f
   153f0:	strb	r2, [r3]
   153f4:	b	15400 <__assert_fail@plt+0x3ddc>
   153f8:	mov	r3, #0
   153fc:	str	r3, [fp, #-36]	; 0xffffffdc
   15400:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15404:	add	r3, r3, #1
   15408:	str	r3, [fp, #-60]	; 0xffffffc4
   1540c:	ldr	r2, [r4, #36]	; 0x24
   15410:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15414:	sub	r3, r2, r3
   15418:	str	r3, [fp, #-32]	; 0xffffffe0
   1541c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15420:	ldr	r3, [r3, #48]	; 0x30
   15424:	add	r3, r3, #1
   15428:	str	r3, [fp, #-64]	; 0xffffffc0
   1542c:	mov	r3, #0
   15430:	strb	r3, [fp, #-26]	; 0xffffffe6
   15434:	mov	r7, #0
   15438:	mov	r3, #0
   1543c:	str	r3, [fp, #-24]	; 0xffffffe8
   15440:	mov	r6, #0
   15444:	b	15894 <__assert_fail@plt+0x4270>
   15448:	bl	114bc <__errno_location@plt>
   1544c:	mov	r2, r0
   15450:	mov	r3, #0
   15454:	str	r3, [r2]
   15458:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1545c:	ldr	r3, [r3, #12]
   15460:	mov	r0, r3
   15464:	bl	11564 <readdir64@plt>
   15468:	str	r0, [fp, #-68]	; 0xffffffbc
   1546c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15470:	cmp	r3, #0
   15474:	bne	154cc <__assert_fail@plt+0x3ea8>
   15478:	bl	114bc <__errno_location@plt>
   1547c:	mov	r3, r0
   15480:	ldr	r3, [r3]
   15484:	cmp	r3, #0
   15488:	beq	158a8 <__assert_fail@plt+0x4284>
   1548c:	bl	114bc <__errno_location@plt>
   15490:	mov	r3, r0
   15494:	ldr	r2, [r3]
   15498:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1549c:	str	r2, [r3, #32]
   154a0:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   154a4:	cmp	r3, #0
   154a8:	bne	154b4 <__assert_fail@plt+0x3e90>
   154ac:	cmp	r6, #0
   154b0:	beq	154bc <__assert_fail@plt+0x3e98>
   154b4:	mov	r2, #7
   154b8:	b	154c0 <__assert_fail@plt+0x3e9c>
   154bc:	mov	r2, #4
   154c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   154c4:	strh	r2, [r3, #56]	; 0x38
   154c8:	b	158a8 <__assert_fail@plt+0x4284>
   154cc:	ldr	r3, [r4, #48]	; 0x30
   154d0:	and	r3, r3, #32
   154d4:	cmp	r3, #0
   154d8:	bne	15520 <__assert_fail@plt+0x3efc>
   154dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   154e0:	ldrb	r3, [r3, #19]
   154e4:	cmp	r3, #46	; 0x2e
   154e8:	bne	15520 <__assert_fail@plt+0x3efc>
   154ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   154f0:	ldrb	r3, [r3, #20]
   154f4:	cmp	r3, #0
   154f8:	beq	15894 <__assert_fail@plt+0x4270>
   154fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15500:	ldrb	r3, [r3, #20]
   15504:	cmp	r3, #46	; 0x2e
   15508:	bne	15520 <__assert_fail@plt+0x3efc>
   1550c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15510:	ldrb	r3, [r3, #21]
   15514:	cmp	r3, #0
   15518:	bne	15520 <__assert_fail@plt+0x3efc>
   1551c:	b	15894 <__assert_fail@plt+0x4270>
   15520:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15524:	add	r3, r3, #19
   15528:	mov	r0, r3
   1552c:	bl	1148c <strlen@plt>
   15530:	str	r0, [fp, #-72]	; 0xffffffb8
   15534:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15538:	add	r3, r3, #19
   1553c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15540:	mov	r1, r3
   15544:	mov	r0, r4
   15548:	bl	15e84 <__assert_fail@plt+0x4860>
   1554c:	mov	r5, r0
   15550:	cmp	r5, #0
   15554:	beq	155a4 <__assert_fail@plt+0x3f80>
   15558:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1555c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15560:	cmp	r2, r3
   15564:	bcc	1565c <__assert_fail@plt+0x4038>
   15568:	ldr	r3, [r4, #24]
   1556c:	str	r3, [fp, #-76]	; 0xffffffb4
   15570:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15574:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15578:	add	r3, r2, r3
   1557c:	add	r3, r3, #1
   15580:	mov	r1, r3
   15584:	mov	r0, r4
   15588:	bl	15fb4 <__assert_fail@plt+0x4990>
   1558c:	mov	r3, r0
   15590:	eor	r3, r3, #1
   15594:	uxtb	r3, r3
   15598:	cmp	r3, #0
   1559c:	beq	15614 <__assert_fail@plt+0x3ff0>
   155a0:	b	155a8 <__assert_fail@plt+0x3f84>
   155a4:	nop	{0}
   155a8:	bl	114bc <__errno_location@plt>
   155ac:	mov	r3, r0
   155b0:	ldr	r3, [r3]
   155b4:	str	r3, [fp, #-88]	; 0xffffffa8
   155b8:	mov	r0, r5
   155bc:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   155c0:	mov	r0, r7
   155c4:	bl	15f54 <__assert_fail@plt+0x4930>
   155c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   155cc:	ldr	r3, [r3, #12]
   155d0:	mov	r0, r3
   155d4:	bl	1160c <closedir@plt>
   155d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   155dc:	mov	r2, #0
   155e0:	str	r2, [r3, #12]
   155e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   155e8:	mov	r2, #7
   155ec:	strh	r2, [r3, #56]	; 0x38
   155f0:	ldr	r3, [r4, #48]	; 0x30
   155f4:	orr	r3, r3, #8192	; 0x2000
   155f8:	str	r3, [r4, #48]	; 0x30
   155fc:	bl	114bc <__errno_location@plt>
   15600:	mov	r2, r0
   15604:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15608:	str	r3, [r2]
   1560c:	mov	r3, #0
   15610:	b	15ab4 <__assert_fail@plt+0x4490>
   15614:	ldr	r3, [r4, #24]
   15618:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1561c:	cmp	r2, r3
   15620:	beq	1564c <__assert_fail@plt+0x4028>
   15624:	mov	r3, #1
   15628:	strb	r3, [fp, #-26]	; 0xffffffe6
   1562c:	ldr	r3, [r4, #48]	; 0x30
   15630:	and	r3, r3, #4
   15634:	cmp	r3, #0
   15638:	beq	1564c <__assert_fail@plt+0x4028>
   1563c:	ldr	r2, [r4, #24]
   15640:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15644:	add	r3, r2, r3
   15648:	str	r3, [fp, #-36]	; 0xffffffdc
   1564c:	ldr	r2, [r4, #36]	; 0x24
   15650:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15654:	sub	r3, r2, r3
   15658:	str	r3, [fp, #-32]	; 0xffffffe0
   1565c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15660:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15664:	add	r3, r2, r3
   15668:	str	r3, [fp, #-80]	; 0xffffffb0
   1566c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15670:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15674:	cmp	r2, r3
   15678:	bcs	156d8 <__assert_fail@plt+0x40b4>
   1567c:	mov	r0, r5
   15680:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   15684:	mov	r0, r7
   15688:	bl	15f54 <__assert_fail@plt+0x4930>
   1568c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15690:	ldr	r3, [r3, #12]
   15694:	mov	r0, r3
   15698:	bl	1160c <closedir@plt>
   1569c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   156a0:	mov	r2, #0
   156a4:	str	r2, [r3, #12]
   156a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   156ac:	mov	r2, #7
   156b0:	strh	r2, [r3, #56]	; 0x38
   156b4:	ldr	r3, [r4, #48]	; 0x30
   156b8:	orr	r3, r3, #8192	; 0x2000
   156bc:	str	r3, [r4, #48]	; 0x30
   156c0:	bl	114bc <__errno_location@plt>
   156c4:	mov	r2, r0
   156c8:	mov	r3, #36	; 0x24
   156cc:	str	r3, [r2]
   156d0:	mov	r3, #0
   156d4:	b	15ab4 <__assert_fail@plt+0x4490>
   156d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   156dc:	str	r3, [r5, #48]	; 0x30
   156e0:	ldr	r3, [r4]
   156e4:	str	r3, [r5, #4]
   156e8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   156ec:	str	r3, [r5, #40]	; 0x28
   156f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   156f4:	ldrd	r2, [r3]
   156f8:	strd	r2, [r5, #160]	; 0xa0
   156fc:	ldr	r3, [r4, #48]	; 0x30
   15700:	and	r3, r3, #4
   15704:	cmp	r3, #0
   15708:	beq	15730 <__assert_fail@plt+0x410c>
   1570c:	ldr	r3, [r5, #28]
   15710:	str	r3, [r5, #24]
   15714:	add	r1, r5, #168	; 0xa8
   15718:	ldr	r3, [r5, #52]	; 0x34
   1571c:	add	r3, r3, #1
   15720:	mov	r2, r3
   15724:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15728:	bl	112ac <memmove@plt>
   1572c:	b	15738 <__assert_fail@plt+0x4114>
   15730:	add	r3, r5, #168	; 0xa8
   15734:	str	r3, [r5, #24]
   15738:	ldr	r3, [r4, #44]	; 0x2c
   1573c:	cmp	r3, #0
   15740:	beq	15754 <__assert_fail@plt+0x4130>
   15744:	ldr	r3, [r4, #48]	; 0x30
   15748:	and	r3, r3, #1024	; 0x400
   1574c:	cmp	r3, #0
   15750:	beq	15814 <__assert_fail@plt+0x41f0>
   15754:	ldr	r3, [r4, #48]	; 0x30
   15758:	and	r3, r3, #8
   1575c:	cmp	r3, #0
   15760:	beq	157ac <__assert_fail@plt+0x4188>
   15764:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15768:	ldrb	r3, [r3, #18]
   1576c:	cmp	r3, #0
   15770:	beq	157ac <__assert_fail@plt+0x4188>
   15774:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15778:	ldrb	r3, [r3, #18]
   1577c:	cmp	r3, #4
   15780:	beq	157ac <__assert_fail@plt+0x4188>
   15784:	ldr	r3, [r4, #48]	; 0x30
   15788:	and	r3, r3, #16
   1578c:	cmp	r3, #0
   15790:	bne	157a4 <__assert_fail@plt+0x4180>
   15794:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15798:	ldrb	r3, [r3, #18]
   1579c:	cmp	r3, #10
   157a0:	beq	157ac <__assert_fail@plt+0x4188>
   157a4:	mov	r3, #1
   157a8:	b	157b0 <__assert_fail@plt+0x418c>
   157ac:	mov	r3, #0
   157b0:	strb	r3, [fp, #-81]	; 0xffffffaf
   157b4:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   157b8:	and	r3, r3, #1
   157bc:	strb	r3, [fp, #-81]	; 0xffffffaf
   157c0:	mov	r3, #11
   157c4:	strh	r3, [r5, #56]	; 0x38
   157c8:	add	r2, r5, #64	; 0x40
   157cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   157d0:	ldrb	r3, [r3, #18]
   157d4:	mov	r1, r3
   157d8:	mov	r0, r2
   157dc:	bl	14eac <__assert_fail@plt+0x3888>
   157e0:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   157e4:	cmp	r3, #0
   157e8:	movne	r3, #1
   157ec:	moveq	r3, #0
   157f0:	uxtb	r3, r3
   157f4:	eor	r3, r3, #1
   157f8:	uxtb	r3, r3
   157fc:	and	r3, r3, #1
   15800:	uxtb	r3, r3
   15804:	mov	r1, r3
   15808:	mov	r0, r5
   1580c:	bl	1365c <__assert_fail@plt+0x2038>
   15810:	b	1582c <__assert_fail@plt+0x4208>
   15814:	mov	r2, #0
   15818:	mov	r1, r5
   1581c:	mov	r0, r4
   15820:	bl	15ad0 <__assert_fail@plt+0x44ac>
   15824:	mov	r3, r0
   15828:	strh	r3, [r5, #56]	; 0x38
   1582c:	mov	r3, #0
   15830:	str	r3, [r5, #8]
   15834:	cmp	r7, #0
   15838:	bne	15848 <__assert_fail@plt+0x4224>
   1583c:	str	r5, [fp, #-24]	; 0xffffffe8
   15840:	ldr	r7, [fp, #-24]	; 0xffffffe8
   15844:	b	15854 <__assert_fail@plt+0x4230>
   15848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1584c:	str	r5, [r3, #8]
   15850:	str	r5, [fp, #-24]	; 0xffffffe8
   15854:	movw	r3, #10000	; 0x2710
   15858:	cmp	r6, r3
   1585c:	bne	15884 <__assert_fail@plt+0x4260>
   15860:	ldr	r3, [r4, #44]	; 0x2c
   15864:	cmp	r3, #0
   15868:	bne	15884 <__assert_fail@plt+0x4260>
   1586c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15870:	mov	r1, r3
   15874:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15878:	bl	142dc <__assert_fail@plt+0x2cb8>
   1587c:	mov	r3, r0
   15880:	strb	r3, [fp, #-37]	; 0xffffffdb
   15884:	add	r6, r6, #1
   15888:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1588c:	cmp	r3, r6
   15890:	bls	158dc <__assert_fail@plt+0x42b8>
   15894:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15898:	ldr	r3, [r3, #12]
   1589c:	cmp	r3, #0
   158a0:	bne	15448 <__assert_fail@plt+0x3e24>
   158a4:	b	158ac <__assert_fail@plt+0x4288>
   158a8:	nop	{0}
   158ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   158b0:	ldr	r3, [r3, #12]
   158b4:	cmp	r3, #0
   158b8:	beq	158e4 <__assert_fail@plt+0x42c0>
   158bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   158c0:	ldr	r3, [r3, #12]
   158c4:	mov	r0, r3
   158c8:	bl	1160c <closedir@plt>
   158cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   158d0:	mov	r2, #0
   158d4:	str	r2, [r3, #12]
   158d8:	b	158e8 <__assert_fail@plt+0x42c4>
   158dc:	nop	{0}
   158e0:	b	158e8 <__assert_fail@plt+0x42c4>
   158e4:	nop	{0}
   158e8:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   158ec:	cmp	r3, #0
   158f0:	beq	15900 <__assert_fail@plt+0x42dc>
   158f4:	mov	r1, r7
   158f8:	mov	r0, r4
   158fc:	bl	160ac <__assert_fail@plt+0x4a88>
   15900:	ldr	r3, [r4, #48]	; 0x30
   15904:	and	r3, r3, #4
   15908:	cmp	r3, #0
   1590c:	beq	15940 <__assert_fail@plt+0x431c>
   15910:	ldr	r3, [r4, #36]	; 0x24
   15914:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15918:	cmp	r2, r3
   1591c:	beq	15928 <__assert_fail@plt+0x4304>
   15920:	cmp	r6, #0
   15924:	bne	15934 <__assert_fail@plt+0x4310>
   15928:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1592c:	sub	r3, r3, #1
   15930:	str	r3, [fp, #-36]	; 0xffffffdc
   15934:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15938:	mov	r2, #0
   1593c:	strb	r2, [r3]
   15940:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   15944:	eor	r3, r3, #1
   15948:	uxtb	r3, r3
   1594c:	cmp	r3, #0
   15950:	beq	15a04 <__assert_fail@plt+0x43e0>
   15954:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   15958:	cmp	r3, #0
   1595c:	beq	15a04 <__assert_fail@plt+0x43e0>
   15960:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15964:	cmp	r3, #1
   15968:	beq	15974 <__assert_fail@plt+0x4350>
   1596c:	cmp	r6, #0
   15970:	bne	15a04 <__assert_fail@plt+0x43e0>
   15974:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15978:	ldr	r3, [r3, #48]	; 0x30
   1597c:	cmp	r3, #0
   15980:	bne	159a4 <__assert_fail@plt+0x4380>
   15984:	mov	r0, r4
   15988:	bl	13798 <__assert_fail@plt+0x2174>
   1598c:	mov	r3, r0
   15990:	cmp	r3, #0
   15994:	movne	r3, #1
   15998:	moveq	r3, #0
   1599c:	uxtb	r3, r3
   159a0:	b	159d4 <__assert_fail@plt+0x43b0>
   159a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   159a8:	ldr	r1, [r3, #4]
   159ac:	movw	r3, #616	; 0x268
   159b0:	movt	r3, #2
   159b4:	mvn	r2, #0
   159b8:	mov	r0, r4
   159bc:	bl	16264 <__assert_fail@plt+0x4c40>
   159c0:	mov	r3, r0
   159c4:	cmp	r3, #0
   159c8:	movne	r3, #1
   159cc:	moveq	r3, #0
   159d0:	uxtb	r3, r3
   159d4:	cmp	r3, #0
   159d8:	beq	15a04 <__assert_fail@plt+0x43e0>
   159dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   159e0:	mov	r2, #7
   159e4:	strh	r2, [r3, #56]	; 0x38
   159e8:	ldr	r3, [r4, #48]	; 0x30
   159ec:	orr	r3, r3, #8192	; 0x2000
   159f0:	str	r3, [r4, #48]	; 0x30
   159f4:	mov	r0, r7
   159f8:	bl	15f54 <__assert_fail@plt+0x4930>
   159fc:	mov	r3, #0
   15a00:	b	15ab4 <__assert_fail@plt+0x4490>
   15a04:	cmp	r6, #0
   15a08:	bne	15a54 <__assert_fail@plt+0x4430>
   15a0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15a10:	cmp	r3, #3
   15a14:	bne	15a44 <__assert_fail@plt+0x4420>
   15a18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a1c:	ldrh	r3, [r3, #56]	; 0x38
   15a20:	cmp	r3, #4
   15a24:	beq	15a44 <__assert_fail@plt+0x4420>
   15a28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a2c:	ldrh	r3, [r3, #56]	; 0x38
   15a30:	cmp	r3, #7
   15a34:	beq	15a44 <__assert_fail@plt+0x4420>
   15a38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a3c:	mov	r2, #6
   15a40:	strh	r2, [r3, #56]	; 0x38
   15a44:	mov	r0, r7
   15a48:	bl	15f54 <__assert_fail@plt+0x4930>
   15a4c:	mov	r3, #0
   15a50:	b	15ab4 <__assert_fail@plt+0x4490>
   15a54:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   15a58:	cmp	r3, #0
   15a5c:	beq	15a88 <__assert_fail@plt+0x4464>
   15a60:	movw	r3, #20008	; 0x4e28
   15a64:	movt	r3, #1
   15a68:	str	r3, [r4, #44]	; 0x2c
   15a6c:	mov	r2, r6
   15a70:	mov	r1, r7
   15a74:	mov	r0, r4
   15a78:	bl	15d20 <__assert_fail@plt+0x46fc>
   15a7c:	mov	r7, r0
   15a80:	mov	r3, #0
   15a84:	str	r3, [r4, #44]	; 0x2c
   15a88:	ldr	r3, [r4, #44]	; 0x2c
   15a8c:	cmp	r3, #0
   15a90:	beq	15ab0 <__assert_fail@plt+0x448c>
   15a94:	cmp	r6, #1
   15a98:	bls	15ab0 <__assert_fail@plt+0x448c>
   15a9c:	mov	r2, r6
   15aa0:	mov	r1, r7
   15aa4:	mov	r0, r4
   15aa8:	bl	15d20 <__assert_fail@plt+0x46fc>
   15aac:	mov	r7, r0
   15ab0:	mov	r3, r7
   15ab4:	mov	r0, r3
   15ab8:	sub	sp, fp, #20
   15abc:	ldrd	r4, [sp]
   15ac0:	ldrd	r6, [sp, #8]
   15ac4:	ldr	fp, [sp, #16]
   15ac8:	add	sp, sp, #20
   15acc:	pop	{pc}		; (ldr pc, [sp], #4)
   15ad0:	str	r4, [sp, #-12]!
   15ad4:	str	fp, [sp, #4]
   15ad8:	str	lr, [sp, #8]
   15adc:	add	fp, sp, #8
   15ae0:	sub	sp, sp, #20
   15ae4:	str	r0, [fp, #-24]	; 0xffffffe8
   15ae8:	mov	r4, r1
   15aec:	mov	r3, r2
   15af0:	strb	r3, [fp, #-25]	; 0xffffffe7
   15af4:	add	r3, r4, #64	; 0x40
   15af8:	str	r3, [fp, #-16]
   15afc:	ldr	r3, [r4, #48]	; 0x30
   15b00:	cmp	r3, #0
   15b04:	bne	15b24 <__assert_fail@plt+0x4500>
   15b08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b0c:	ldr	r3, [r3, #48]	; 0x30
   15b10:	and	r3, r3, #1
   15b14:	cmp	r3, #0
   15b18:	beq	15b24 <__assert_fail@plt+0x4500>
   15b1c:	mov	r3, #1
   15b20:	strb	r3, [fp, #-25]	; 0xffffffe7
   15b24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b28:	ldr	r3, [r3, #48]	; 0x30
   15b2c:	and	r3, r3, #2
   15b30:	cmp	r3, #0
   15b34:	bne	15b44 <__assert_fail@plt+0x4520>
   15b38:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   15b3c:	cmp	r3, #0
   15b40:	beq	15bbc <__assert_fail@plt+0x4598>
   15b44:	ldr	r3, [r4, #24]
   15b48:	ldr	r1, [fp, #-16]
   15b4c:	mov	r0, r3
   15b50:	bl	1f374 <__assert_fail@plt+0xdd50>
   15b54:	mov	r3, r0
   15b58:	cmp	r3, #0
   15b5c:	beq	15c08 <__assert_fail@plt+0x45e4>
   15b60:	bl	114bc <__errno_location@plt>
   15b64:	mov	r3, r0
   15b68:	ldr	r3, [r3]
   15b6c:	cmp	r3, #2
   15b70:	bne	15ba8 <__assert_fail@plt+0x4584>
   15b74:	ldr	r3, [r4, #24]
   15b78:	ldr	r1, [fp, #-16]
   15b7c:	mov	r0, r3
   15b80:	bl	1f394 <__assert_fail@plt+0xdd70>
   15b84:	mov	r3, r0
   15b88:	cmp	r3, #0
   15b8c:	bne	15ba8 <__assert_fail@plt+0x4584>
   15b90:	bl	114bc <__errno_location@plt>
   15b94:	mov	r2, r0
   15b98:	mov	r3, #0
   15b9c:	str	r3, [r2]
   15ba0:	mov	r3, #13
   15ba4:	b	15cac <__assert_fail@plt+0x4688>
   15ba8:	bl	114bc <__errno_location@plt>
   15bac:	mov	r3, r0
   15bb0:	ldr	r3, [r3]
   15bb4:	str	r3, [r4, #32]
   15bb8:	b	15bf0 <__assert_fail@plt+0x45cc>
   15bbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15bc0:	ldr	r0, [r3, #32]
   15bc4:	ldr	r1, [r4, #24]
   15bc8:	mov	r3, #256	; 0x100
   15bcc:	ldr	r2, [fp, #-16]
   15bd0:	bl	1f3a4 <__assert_fail@plt+0xdd80>
   15bd4:	mov	r3, r0
   15bd8:	cmp	r3, #0
   15bdc:	beq	15c08 <__assert_fail@plt+0x45e4>
   15be0:	bl	114bc <__errno_location@plt>
   15be4:	mov	r3, r0
   15be8:	ldr	r3, [r3]
   15bec:	str	r3, [r4, #32]
   15bf0:	mov	r2, #104	; 0x68
   15bf4:	mov	r1, #0
   15bf8:	ldr	r0, [fp, #-16]
   15bfc:	bl	114d4 <memset@plt>
   15c00:	mov	r3, #10
   15c04:	b	15cac <__assert_fail@plt+0x4688>
   15c08:	ldr	r3, [fp, #-16]
   15c0c:	ldr	r3, [r3, #16]
   15c10:	and	r3, r3, #61440	; 0xf000
   15c14:	cmp	r3, #16384	; 0x4000
   15c18:	bne	15c70 <__assert_fail@plt+0x464c>
   15c1c:	ldrb	r3, [r4, #168]	; 0xa8
   15c20:	cmp	r3, #46	; 0x2e
   15c24:	bne	15c68 <__assert_fail@plt+0x4644>
   15c28:	ldrb	r3, [r4, #169]	; 0xa9
   15c2c:	cmp	r3, #0
   15c30:	beq	15c4c <__assert_fail@plt+0x4628>
   15c34:	ldrb	r3, [r4, #169]	; 0xa9
   15c38:	cmp	r3, #46	; 0x2e
   15c3c:	bne	15c68 <__assert_fail@plt+0x4644>
   15c40:	ldrb	r3, [r4, #170]	; 0xaa
   15c44:	cmp	r3, #0
   15c48:	bne	15c68 <__assert_fail@plt+0x4644>
   15c4c:	ldr	r3, [r4, #48]	; 0x30
   15c50:	cmp	r3, #0
   15c54:	bne	15c60 <__assert_fail@plt+0x463c>
   15c58:	mov	r3, #1
   15c5c:	b	15cac <__assert_fail@plt+0x4688>
   15c60:	mov	r3, #5
   15c64:	b	15cac <__assert_fail@plt+0x4688>
   15c68:	mov	r3, #1
   15c6c:	b	15cac <__assert_fail@plt+0x4688>
   15c70:	ldr	r3, [fp, #-16]
   15c74:	ldr	r3, [r3, #16]
   15c78:	and	r3, r3, #61440	; 0xf000
   15c7c:	cmp	r3, #40960	; 0xa000
   15c80:	bne	15c8c <__assert_fail@plt+0x4668>
   15c84:	mov	r3, #12
   15c88:	b	15cac <__assert_fail@plt+0x4688>
   15c8c:	ldr	r3, [fp, #-16]
   15c90:	ldr	r3, [r3, #16]
   15c94:	and	r3, r3, #61440	; 0xf000
   15c98:	cmp	r3, #32768	; 0x8000
   15c9c:	bne	15ca8 <__assert_fail@plt+0x4684>
   15ca0:	mov	r3, #8
   15ca4:	b	15cac <__assert_fail@plt+0x4688>
   15ca8:	mov	r3, #3
   15cac:	mov	r0, r3
   15cb0:	sub	sp, fp, #8
   15cb4:	ldr	r4, [sp]
   15cb8:	ldr	fp, [sp, #4]
   15cbc:	add	sp, sp, #8
   15cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   15cc4:	str	fp, [sp, #-8]!
   15cc8:	str	lr, [sp, #4]
   15ccc:	add	fp, sp, #4
   15cd0:	sub	sp, sp, #16
   15cd4:	str	r0, [fp, #-16]
   15cd8:	str	r1, [fp, #-20]	; 0xffffffec
   15cdc:	ldr	r3, [fp, #-16]
   15ce0:	str	r3, [fp, #-8]
   15ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ce8:	str	r3, [fp, #-12]
   15cec:	ldr	r3, [fp, #-8]
   15cf0:	ldr	r3, [r3]
   15cf4:	ldr	r3, [r3, #44]	; 0x2c
   15cf8:	ldr	r3, [r3, #44]	; 0x2c
   15cfc:	ldr	r1, [fp, #-12]
   15d00:	ldr	r0, [fp, #-8]
   15d04:	blx	r3
   15d08:	mov	r3, r0
   15d0c:	mov	r0, r3
   15d10:	sub	sp, fp, #4
   15d14:	ldr	fp, [sp]
   15d18:	add	sp, sp, #4
   15d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   15d20:	strd	r4, [sp, #-20]!	; 0xffffffec
   15d24:	str	r6, [sp, #8]
   15d28:	str	fp, [sp, #12]
   15d2c:	str	lr, [sp, #16]
   15d30:	add	fp, sp, #16
   15d34:	sub	sp, sp, #28
   15d38:	str	r0, [fp, #-40]	; 0xffffffd8
   15d3c:	str	r1, [fp, #-44]	; 0xffffffd4
   15d40:	mov	r5, r2
   15d44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15d48:	ldr	r3, [r3, #44]	; 0x2c
   15d4c:	str	r3, [fp, #-24]	; 0xffffffe8
   15d50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15d54:	ldr	r3, [r3, #40]	; 0x28
   15d58:	cmp	r5, r3
   15d5c:	bls	15de8 <__assert_fail@plt+0x47c4>
   15d60:	add	r2, r5, #40	; 0x28
   15d64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15d68:	str	r2, [r3, #40]	; 0x28
   15d6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15d70:	ldr	r3, [r3, #40]	; 0x28
   15d74:	cmn	r3, #-1073741823	; 0xc0000001
   15d78:	bhi	15dac <__assert_fail@plt+0x4788>
   15d7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15d80:	ldr	r2, [r3, #8]
   15d84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15d88:	ldr	r3, [r3, #40]	; 0x28
   15d8c:	lsl	r3, r3, #2
   15d90:	mov	r1, r3
   15d94:	mov	r0, r2
   15d98:	bl	1cea0 <__assert_fail@plt+0xb87c>
   15d9c:	str	r0, [fp, #-28]	; 0xffffffe4
   15da0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15da4:	cmp	r3, #0
   15da8:	bne	15ddc <__assert_fail@plt+0x47b8>
   15dac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15db0:	ldr	r3, [r3, #8]
   15db4:	mov	r0, r3
   15db8:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   15dbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15dc0:	mov	r2, #0
   15dc4:	str	r2, [r3, #8]
   15dc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15dcc:	mov	r2, #0
   15dd0:	str	r2, [r3, #40]	; 0x28
   15dd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15dd8:	b	15e68 <__assert_fail@plt+0x4844>
   15ddc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15de0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15de4:	str	r2, [r3, #8]
   15de8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15dec:	ldr	r4, [r3, #8]
   15df0:	ldr	r6, [fp, #-44]	; 0xffffffd4
   15df4:	b	15e08 <__assert_fail@plt+0x47e4>
   15df8:	mov	r3, r4
   15dfc:	add	r4, r3, #4
   15e00:	str	r6, [r3]
   15e04:	ldr	r6, [r6, #8]
   15e08:	cmp	r6, #0
   15e0c:	bne	15df8 <__assert_fail@plt+0x47d4>
   15e10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15e14:	ldr	r0, [r3, #8]
   15e18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e1c:	mov	r2, #4
   15e20:	mov	r1, r5
   15e24:	bl	11594 <qsort@plt>
   15e28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15e2c:	ldr	r4, [r3, #8]
   15e30:	ldr	r3, [r4]
   15e34:	str	r3, [fp, #-44]	; 0xffffffd4
   15e38:	b	15e4c <__assert_fail@plt+0x4828>
   15e3c:	ldr	r3, [r4]
   15e40:	ldr	r2, [r4, #4]
   15e44:	str	r2, [r3, #8]
   15e48:	add	r4, r4, #4
   15e4c:	sub	r5, r5, #1
   15e50:	cmp	r5, #0
   15e54:	bne	15e3c <__assert_fail@plt+0x4818>
   15e58:	ldr	r3, [r4]
   15e5c:	mov	r2, #0
   15e60:	str	r2, [r3, #8]
   15e64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15e68:	mov	r0, r3
   15e6c:	sub	sp, fp, #16
   15e70:	ldrd	r4, [sp]
   15e74:	ldr	r6, [sp, #8]
   15e78:	ldr	fp, [sp, #12]
   15e7c:	add	sp, sp, #16
   15e80:	pop	{pc}		; (ldr pc, [sp], #4)
   15e84:	strd	r4, [sp, #-16]!
   15e88:	str	fp, [sp, #8]
   15e8c:	str	lr, [sp, #12]
   15e90:	add	fp, sp, #12
   15e94:	sub	sp, sp, #16
   15e98:	str	r0, [fp, #-24]	; 0xffffffe8
   15e9c:	str	r1, [fp, #-28]	; 0xffffffe4
   15ea0:	mov	r5, r2
   15ea4:	add	r3, r5, #176	; 0xb0
   15ea8:	bic	r3, r3, #7
   15eac:	str	r3, [fp, #-16]
   15eb0:	ldr	r0, [fp, #-16]
   15eb4:	bl	1ce10 <__assert_fail@plt+0xb7ec>
   15eb8:	mov	r3, r0
   15ebc:	mov	r4, r3
   15ec0:	cmp	r4, #0
   15ec4:	bne	15ed0 <__assert_fail@plt+0x48ac>
   15ec8:	mov	r3, #0
   15ecc:	b	15f3c <__assert_fail@plt+0x4918>
   15ed0:	add	r3, r4, #168	; 0xa8
   15ed4:	mov	r2, r5
   15ed8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15edc:	mov	r0, r3
   15ee0:	bl	112d0 <memcpy@plt>
   15ee4:	add	r3, r4, r5
   15ee8:	mov	r2, #0
   15eec:	strb	r2, [r3, #168]	; 0xa8
   15ef0:	str	r5, [r4, #52]	; 0x34
   15ef4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15ef8:	str	r3, [r4, #44]	; 0x2c
   15efc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15f00:	ldr	r3, [r3, #24]
   15f04:	str	r3, [r4, #28]
   15f08:	mov	r3, #0
   15f0c:	str	r3, [r4, #32]
   15f10:	mov	r3, #0
   15f14:	str	r3, [r4, #12]
   15f18:	mov	r3, #0
   15f1c:	strh	r3, [r4, #58]	; 0x3a
   15f20:	mov	r3, #3
   15f24:	strh	r3, [r4, #60]	; 0x3c
   15f28:	mov	r3, #0
   15f2c:	str	r3, [r4, #16]
   15f30:	mov	r3, #0
   15f34:	str	r3, [r4, #20]
   15f38:	mov	r3, r4
   15f3c:	mov	r0, r3
   15f40:	sub	sp, fp, #12
   15f44:	ldrd	r4, [sp]
   15f48:	ldr	fp, [sp, #8]
   15f4c:	add	sp, sp, #12
   15f50:	pop	{pc}		; (ldr pc, [sp], #4)
   15f54:	strd	r4, [sp, #-16]!
   15f58:	str	fp, [sp, #8]
   15f5c:	str	lr, [sp, #12]
   15f60:	add	fp, sp, #12
   15f64:	mov	r5, r0
   15f68:	b	15f90 <__assert_fail@plt+0x496c>
   15f6c:	ldr	r5, [r5, #8]
   15f70:	ldr	r3, [r4, #12]
   15f74:	cmp	r3, #0
   15f78:	beq	15f88 <__assert_fail@plt+0x4964>
   15f7c:	ldr	r3, [r4, #12]
   15f80:	mov	r0, r3
   15f84:	bl	1160c <closedir@plt>
   15f88:	mov	r0, r4
   15f8c:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   15f90:	mov	r4, r5
   15f94:	cmp	r4, #0
   15f98:	bne	15f6c <__assert_fail@plt+0x4948>
   15f9c:	nop	{0}
   15fa0:	sub	sp, fp, #12
   15fa4:	ldrd	r4, [sp]
   15fa8:	ldr	fp, [sp, #8]
   15fac:	add	sp, sp, #12
   15fb0:	pop	{pc}		; (ldr pc, [sp], #4)
   15fb4:	str	fp, [sp, #-8]!
   15fb8:	str	lr, [sp, #4]
   15fbc:	add	fp, sp, #4
   15fc0:	sub	sp, sp, #16
   15fc4:	str	r0, [fp, #-16]
   15fc8:	str	r1, [fp, #-20]	; 0xffffffec
   15fcc:	ldr	r3, [fp, #-16]
   15fd0:	ldr	r2, [r3, #36]	; 0x24
   15fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15fd8:	add	r3, r2, r3
   15fdc:	add	r3, r3, #256	; 0x100
   15fe0:	str	r3, [fp, #-8]
   15fe4:	ldr	r3, [fp, #-16]
   15fe8:	ldr	r3, [r3, #36]	; 0x24
   15fec:	ldr	r2, [fp, #-8]
   15ff0:	cmp	r2, r3
   15ff4:	bcs	1602c <__assert_fail@plt+0x4a08>
   15ff8:	ldr	r3, [fp, #-16]
   15ffc:	ldr	r3, [r3, #24]
   16000:	mov	r0, r3
   16004:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   16008:	ldr	r3, [fp, #-16]
   1600c:	mov	r2, #0
   16010:	str	r2, [r3, #24]
   16014:	bl	114bc <__errno_location@plt>
   16018:	mov	r2, r0
   1601c:	mov	r3, #36	; 0x24
   16020:	str	r3, [r2]
   16024:	mov	r3, #0
   16028:	b	16098 <__assert_fail@plt+0x4a74>
   1602c:	ldr	r3, [fp, #-16]
   16030:	ldr	r2, [fp, #-8]
   16034:	str	r2, [r3, #36]	; 0x24
   16038:	ldr	r3, [fp, #-16]
   1603c:	ldr	r2, [r3, #24]
   16040:	ldr	r3, [fp, #-16]
   16044:	ldr	r3, [r3, #36]	; 0x24
   16048:	mov	r1, r3
   1604c:	mov	r0, r2
   16050:	bl	1cea0 <__assert_fail@plt+0xb87c>
   16054:	str	r0, [fp, #-12]
   16058:	ldr	r3, [fp, #-12]
   1605c:	cmp	r3, #0
   16060:	bne	16088 <__assert_fail@plt+0x4a64>
   16064:	ldr	r3, [fp, #-16]
   16068:	ldr	r3, [r3, #24]
   1606c:	mov	r0, r3
   16070:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   16074:	ldr	r3, [fp, #-16]
   16078:	mov	r2, #0
   1607c:	str	r2, [r3, #24]
   16080:	mov	r3, #0
   16084:	b	16098 <__assert_fail@plt+0x4a74>
   16088:	ldr	r3, [fp, #-16]
   1608c:	ldr	r2, [fp, #-12]
   16090:	str	r2, [r3, #24]
   16094:	mov	r3, #1
   16098:	mov	r0, r3
   1609c:	sub	sp, fp, #4
   160a0:	ldr	fp, [sp]
   160a4:	add	sp, sp, #4
   160a8:	pop	{pc}		; (ldr pc, [sp], #4)
   160ac:	push	{fp}		; (str fp, [sp, #-4]!)
   160b0:	add	fp, sp, #0
   160b4:	sub	sp, sp, #20
   160b8:	str	r0, [fp, #-16]
   160bc:	str	r1, [fp, #-20]	; 0xffffffec
   160c0:	ldr	r3, [fp, #-16]
   160c4:	ldr	r3, [r3, #24]
   160c8:	str	r3, [fp, #-12]
   160cc:	ldr	r3, [fp, #-16]
   160d0:	ldr	r3, [r3, #4]
   160d4:	str	r3, [fp, #-8]
   160d8:	b	16134 <__assert_fail@plt+0x4b10>
   160dc:	ldr	r3, [fp, #-8]
   160e0:	ldr	r2, [r3, #24]
   160e4:	ldr	r3, [fp, #-8]
   160e8:	add	r3, r3, #168	; 0xa8
   160ec:	cmp	r2, r3
   160f0:	beq	1611c <__assert_fail@plt+0x4af8>
   160f4:	ldr	r3, [fp, #-8]
   160f8:	ldr	r2, [r3, #24]
   160fc:	ldr	r3, [fp, #-8]
   16100:	ldr	r3, [r3, #28]
   16104:	sub	r3, r2, r3
   16108:	mov	r2, r3
   1610c:	ldr	r3, [fp, #-12]
   16110:	add	r2, r3, r2
   16114:	ldr	r3, [fp, #-8]
   16118:	str	r2, [r3, #24]
   1611c:	ldr	r3, [fp, #-8]
   16120:	ldr	r2, [fp, #-12]
   16124:	str	r2, [r3, #28]
   16128:	ldr	r3, [fp, #-8]
   1612c:	ldr	r3, [r3, #8]
   16130:	str	r3, [fp, #-8]
   16134:	ldr	r3, [fp, #-8]
   16138:	cmp	r3, #0
   1613c:	bne	160dc <__assert_fail@plt+0x4ab8>
   16140:	ldr	r3, [fp, #-20]	; 0xffffffec
   16144:	str	r3, [fp, #-8]
   16148:	b	161c0 <__assert_fail@plt+0x4b9c>
   1614c:	ldr	r3, [fp, #-8]
   16150:	ldr	r2, [r3, #24]
   16154:	ldr	r3, [fp, #-8]
   16158:	add	r3, r3, #168	; 0xa8
   1615c:	cmp	r2, r3
   16160:	beq	1618c <__assert_fail@plt+0x4b68>
   16164:	ldr	r3, [fp, #-8]
   16168:	ldr	r2, [r3, #24]
   1616c:	ldr	r3, [fp, #-8]
   16170:	ldr	r3, [r3, #28]
   16174:	sub	r3, r2, r3
   16178:	mov	r2, r3
   1617c:	ldr	r3, [fp, #-12]
   16180:	add	r2, r3, r2
   16184:	ldr	r3, [fp, #-8]
   16188:	str	r2, [r3, #24]
   1618c:	ldr	r3, [fp, #-8]
   16190:	ldr	r2, [fp, #-12]
   16194:	str	r2, [r3, #28]
   16198:	ldr	r3, [fp, #-8]
   1619c:	ldr	r3, [r3, #8]
   161a0:	cmp	r3, #0
   161a4:	beq	161b4 <__assert_fail@plt+0x4b90>
   161a8:	ldr	r3, [fp, #-8]
   161ac:	ldr	r3, [r3, #8]
   161b0:	b	161bc <__assert_fail@plt+0x4b98>
   161b4:	ldr	r3, [fp, #-8]
   161b8:	ldr	r3, [r3, #4]
   161bc:	str	r3, [fp, #-8]
   161c0:	ldr	r3, [fp, #-8]
   161c4:	ldr	r3, [r3, #48]	; 0x30
   161c8:	cmp	r3, #0
   161cc:	bge	1614c <__assert_fail@plt+0x4b28>
   161d0:	nop	{0}
   161d4:	add	sp, fp, #0
   161d8:	pop	{fp}		; (ldr fp, [sp], #4)
   161dc:	bx	lr
   161e0:	str	fp, [sp, #-8]!
   161e4:	str	lr, [sp, #4]
   161e8:	add	fp, sp, #4
   161ec:	sub	sp, sp, #16
   161f0:	str	r0, [fp, #-16]
   161f4:	mov	r3, #0
   161f8:	str	r3, [fp, #-8]
   161fc:	b	16238 <__assert_fail@plt+0x4c14>
   16200:	ldr	r3, [fp, #-16]
   16204:	ldr	r3, [r3]
   16208:	mov	r0, r3
   1620c:	bl	1148c <strlen@plt>
   16210:	str	r0, [fp, #-12]
   16214:	ldr	r2, [fp, #-12]
   16218:	ldr	r3, [fp, #-8]
   1621c:	cmp	r2, r3
   16220:	bls	1622c <__assert_fail@plt+0x4c08>
   16224:	ldr	r3, [fp, #-12]
   16228:	str	r3, [fp, #-8]
   1622c:	ldr	r3, [fp, #-16]
   16230:	add	r3, r3, #4
   16234:	str	r3, [fp, #-16]
   16238:	ldr	r3, [fp, #-16]
   1623c:	ldr	r3, [r3]
   16240:	cmp	r3, #0
   16244:	bne	16200 <__assert_fail@plt+0x4bdc>
   16248:	ldr	r3, [fp, #-8]
   1624c:	add	r3, r3, #1
   16250:	mov	r0, r3
   16254:	sub	sp, fp, #4
   16258:	ldr	fp, [sp]
   1625c:	add	sp, sp, #4
   16260:	pop	{pc}		; (ldr pc, [sp], #4)
   16264:	str	fp, [sp, #-8]!
   16268:	str	lr, [sp, #4]
   1626c:	add	fp, sp, #4
   16270:	sub	sp, sp, #144	; 0x90
   16274:	str	r0, [fp, #-136]	; 0xffffff78
   16278:	str	r1, [fp, #-140]	; 0xffffff74
   1627c:	str	r2, [fp, #-144]	; 0xffffff70
   16280:	str	r3, [fp, #-148]	; 0xffffff6c
   16284:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16288:	cmp	r3, #0
   1628c:	beq	162b4 <__assert_fail@plt+0x4c90>
   16290:	movw	r1, #616	; 0x268
   16294:	movt	r1, #2
   16298:	ldr	r0, [fp, #-148]	; 0xffffff6c
   1629c:	bl	1127c <strcmp@plt>
   162a0:	mov	r3, r0
   162a4:	cmp	r3, #0
   162a8:	bne	162b4 <__assert_fail@plt+0x4c90>
   162ac:	mov	r3, #1
   162b0:	b	162b8 <__assert_fail@plt+0x4c94>
   162b4:	mov	r3, #0
   162b8:	strb	r3, [fp, #-13]
   162bc:	ldrb	r3, [fp, #-13]
   162c0:	and	r3, r3, #1
   162c4:	strb	r3, [fp, #-13]
   162c8:	ldr	r3, [fp, #-136]	; 0xffffff78
   162cc:	ldr	r3, [r3, #48]	; 0x30
   162d0:	and	r3, r3, #4
   162d4:	cmp	r3, #0
   162d8:	beq	1630c <__assert_fail@plt+0x4ce8>
   162dc:	ldr	r3, [fp, #-136]	; 0xffffff78
   162e0:	ldr	r3, [r3, #48]	; 0x30
   162e4:	and	r3, r3, #512	; 0x200
   162e8:	cmp	r3, #0
   162ec:	beq	16304 <__assert_fail@plt+0x4ce0>
   162f0:	ldr	r3, [fp, #-144]	; 0xffffff70
   162f4:	cmp	r3, #0
   162f8:	blt	16304 <__assert_fail@plt+0x4ce0>
   162fc:	ldr	r0, [fp, #-144]	; 0xffffff70
   16300:	bl	115f4 <close@plt>
   16304:	mov	r3, #0
   16308:	b	1650c <__assert_fail@plt+0x4ee8>
   1630c:	ldr	r3, [fp, #-144]	; 0xffffff70
   16310:	cmp	r3, #0
   16314:	bge	1638c <__assert_fail@plt+0x4d68>
   16318:	ldrb	r3, [fp, #-13]
   1631c:	cmp	r3, #0
   16320:	beq	1638c <__assert_fail@plt+0x4d68>
   16324:	ldr	r3, [fp, #-136]	; 0xffffff78
   16328:	ldr	r3, [r3, #48]	; 0x30
   1632c:	and	r3, r3, #512	; 0x200
   16330:	cmp	r3, #0
   16334:	beq	1638c <__assert_fail@plt+0x4d68>
   16338:	ldr	r3, [fp, #-136]	; 0xffffff78
   1633c:	add	r3, r3, #60	; 0x3c
   16340:	mov	r0, r3
   16344:	bl	18204 <__assert_fail@plt+0x6be0>
   16348:	mov	r3, r0
   1634c:	eor	r3, r3, #1
   16350:	uxtb	r3, r3
   16354:	cmp	r3, #0
   16358:	beq	1638c <__assert_fail@plt+0x4d68>
   1635c:	ldr	r3, [fp, #-136]	; 0xffffff78
   16360:	add	r3, r3, #60	; 0x3c
   16364:	mov	r0, r3
   16368:	bl	182ec <__assert_fail@plt+0x6cc8>
   1636c:	str	r0, [fp, #-20]	; 0xffffffec
   16370:	ldr	r3, [fp, #-20]	; 0xffffffec
   16374:	cmp	r3, #0
   16378:	blt	1638c <__assert_fail@plt+0x4d68>
   1637c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16380:	str	r3, [fp, #-144]	; 0xffffff70
   16384:	mov	r3, #0
   16388:	str	r3, [fp, #-148]	; 0xffffff6c
   1638c:	ldr	r3, [fp, #-144]	; 0xffffff70
   16390:	str	r3, [fp, #-12]
   16394:	ldr	r3, [fp, #-144]	; 0xffffff70
   16398:	cmp	r3, #0
   1639c:	bge	163c4 <__assert_fail@plt+0x4da0>
   163a0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   163a4:	ldr	r0, [fp, #-136]	; 0xffffff78
   163a8:	bl	1387c <__assert_fail@plt+0x2258>
   163ac:	str	r0, [fp, #-12]
   163b0:	ldr	r3, [fp, #-12]
   163b4:	cmp	r3, #0
   163b8:	bge	163c4 <__assert_fail@plt+0x4da0>
   163bc:	mvn	r3, #0
   163c0:	b	1650c <__assert_fail@plt+0x4ee8>
   163c4:	ldr	r3, [fp, #-136]	; 0xffffff78
   163c8:	ldr	r3, [r3, #48]	; 0x30
   163cc:	and	r3, r3, #2
   163d0:	cmp	r3, #0
   163d4:	bne	16400 <__assert_fail@plt+0x4ddc>
   163d8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   163dc:	cmp	r3, #0
   163e0:	beq	16478 <__assert_fail@plt+0x4e54>
   163e4:	movw	r1, #616	; 0x268
   163e8:	movt	r1, #2
   163ec:	ldr	r0, [fp, #-148]	; 0xffffff6c
   163f0:	bl	1127c <strcmp@plt>
   163f4:	mov	r3, r0
   163f8:	cmp	r3, #0
   163fc:	bne	16478 <__assert_fail@plt+0x4e54>
   16400:	sub	r3, fp, #132	; 0x84
   16404:	mov	r1, r3
   16408:	ldr	r0, [fp, #-12]
   1640c:	bl	1f384 <__assert_fail@plt+0xdd60>
   16410:	mov	r3, r0
   16414:	cmp	r3, #0
   16418:	beq	16428 <__assert_fail@plt+0x4e04>
   1641c:	mvn	r3, #0
   16420:	str	r3, [fp, #-8]
   16424:	b	164d4 <__assert_fail@plt+0x4eb0>
   16428:	ldr	r3, [fp, #-140]	; 0xffffff74
   1642c:	ldrd	r0, [r3, #64]	; 0x40
   16430:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   16434:	cmp	r1, r3
   16438:	cmpeq	r0, r2
   1643c:	bne	16458 <__assert_fail@plt+0x4e34>
   16440:	ldr	r3, [fp, #-140]	; 0xffffff74
   16444:	ldrd	r0, [r3, #160]	; 0xa0
   16448:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1644c:	cmp	r1, r3
   16450:	cmpeq	r0, r2
   16454:	beq	16478 <__assert_fail@plt+0x4e54>
   16458:	bl	114bc <__errno_location@plt>
   1645c:	mov	r2, r0
   16460:	mov	r3, #2
   16464:	str	r3, [r2]
   16468:	mvn	r3, #0
   1646c:	str	r3, [fp, #-8]
   16470:	nop	{0}
   16474:	b	164d4 <__assert_fail@plt+0x4eb0>
   16478:	ldr	r3, [fp, #-136]	; 0xffffff78
   1647c:	ldr	r3, [r3, #48]	; 0x30
   16480:	and	r3, r3, #512	; 0x200
   16484:	cmp	r3, #0
   16488:	beq	164c8 <__assert_fail@plt+0x4ea4>
   1648c:	ldrb	r3, [fp, #-13]
   16490:	cmp	r3, #0
   16494:	movne	r3, #1
   16498:	moveq	r3, #0
   1649c:	uxtb	r3, r3
   164a0:	eor	r3, r3, #1
   164a4:	uxtb	r3, r3
   164a8:	and	r3, r3, #1
   164ac:	uxtb	r3, r3
   164b0:	mov	r2, r3
   164b4:	ldr	r1, [fp, #-12]
   164b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   164bc:	bl	136c8 <__assert_fail@plt+0x20a4>
   164c0:	mov	r3, #0
   164c4:	b	1650c <__assert_fail@plt+0x4ee8>
   164c8:	ldr	r0, [fp, #-12]
   164cc:	bl	11588 <fchdir@plt>
   164d0:	str	r0, [fp, #-8]
   164d4:	ldr	r3, [fp, #-144]	; 0xffffff70
   164d8:	cmp	r3, #0
   164dc:	bge	16508 <__assert_fail@plt+0x4ee4>
   164e0:	bl	114bc <__errno_location@plt>
   164e4:	mov	r3, r0
   164e8:	ldr	r3, [r3]
   164ec:	str	r3, [fp, #-24]	; 0xffffffe8
   164f0:	ldr	r0, [fp, #-12]
   164f4:	bl	115f4 <close@plt>
   164f8:	bl	114bc <__errno_location@plt>
   164fc:	mov	r2, r0
   16500:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16504:	str	r3, [r2]
   16508:	ldr	r3, [fp, #-8]
   1650c:	mov	r0, r3
   16510:	sub	sp, fp, #4
   16514:	ldr	fp, [sp]
   16518:	add	sp, sp, #4
   1651c:	pop	{pc}		; (ldr pc, [sp], #4)
   16520:	push	{fp}		; (str fp, [sp, #-4]!)
   16524:	add	fp, sp, #0
   16528:	sub	sp, sp, #12
   1652c:	str	r0, [fp, #-8]
   16530:	ldr	r3, [fp, #-8]
   16534:	ldr	r3, [r3, #8]
   16538:	mov	r0, r3
   1653c:	add	sp, fp, #0
   16540:	pop	{fp}		; (ldr fp, [sp], #4)
   16544:	bx	lr
   16548:	push	{fp}		; (str fp, [sp, #-4]!)
   1654c:	add	fp, sp, #0
   16550:	sub	sp, sp, #12
   16554:	str	r0, [fp, #-8]
   16558:	ldr	r3, [fp, #-8]
   1655c:	ldr	r3, [r3, #12]
   16560:	mov	r0, r3
   16564:	add	sp, fp, #0
   16568:	pop	{fp}		; (ldr fp, [sp], #4)
   1656c:	bx	lr
   16570:	push	{fp}		; (str fp, [sp, #-4]!)
   16574:	add	fp, sp, #0
   16578:	sub	sp, sp, #12
   1657c:	str	r0, [fp, #-8]
   16580:	ldr	r3, [fp, #-8]
   16584:	ldr	r3, [r3, #16]
   16588:	mov	r0, r3
   1658c:	add	sp, fp, #0
   16590:	pop	{fp}		; (ldr fp, [sp], #4)
   16594:	bx	lr
   16598:	push	{fp}		; (str fp, [sp, #-4]!)
   1659c:	add	fp, sp, #0
   165a0:	sub	sp, sp, #28
   165a4:	str	r0, [fp, #-24]	; 0xffffffe8
   165a8:	mov	r3, #0
   165ac:	str	r3, [fp, #-12]
   165b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   165b4:	ldr	r3, [r3]
   165b8:	str	r3, [fp, #-8]
   165bc:	b	1662c <__assert_fail@plt+0x5008>
   165c0:	ldr	r3, [fp, #-8]
   165c4:	ldr	r3, [r3]
   165c8:	cmp	r3, #0
   165cc:	beq	16620 <__assert_fail@plt+0x4ffc>
   165d0:	ldr	r3, [fp, #-8]
   165d4:	str	r3, [fp, #-16]
   165d8:	mov	r3, #1
   165dc:	str	r3, [fp, #-20]	; 0xffffffec
   165e0:	b	165f0 <__assert_fail@plt+0x4fcc>
   165e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   165e8:	add	r3, r3, #1
   165ec:	str	r3, [fp, #-20]	; 0xffffffec
   165f0:	ldr	r3, [fp, #-16]
   165f4:	ldr	r3, [r3, #4]
   165f8:	str	r3, [fp, #-16]
   165fc:	ldr	r3, [fp, #-16]
   16600:	cmp	r3, #0
   16604:	bne	165e4 <__assert_fail@plt+0x4fc0>
   16608:	ldr	r2, [fp, #-20]	; 0xffffffec
   1660c:	ldr	r3, [fp, #-12]
   16610:	cmp	r2, r3
   16614:	bls	16620 <__assert_fail@plt+0x4ffc>
   16618:	ldr	r3, [fp, #-20]	; 0xffffffec
   1661c:	str	r3, [fp, #-12]
   16620:	ldr	r3, [fp, #-8]
   16624:	add	r3, r3, #8
   16628:	str	r3, [fp, #-8]
   1662c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16630:	ldr	r3, [r3, #4]
   16634:	ldr	r2, [fp, #-8]
   16638:	cmp	r2, r3
   1663c:	bcc	165c0 <__assert_fail@plt+0x4f9c>
   16640:	ldr	r3, [fp, #-12]
   16644:	mov	r0, r3
   16648:	add	sp, fp, #0
   1664c:	pop	{fp}		; (ldr fp, [sp], #4)
   16650:	bx	lr
   16654:	push	{fp}		; (str fp, [sp, #-4]!)
   16658:	add	fp, sp, #0
   1665c:	sub	sp, sp, #28
   16660:	str	r0, [fp, #-24]	; 0xffffffe8
   16664:	mov	r3, #0
   16668:	str	r3, [fp, #-12]
   1666c:	mov	r3, #0
   16670:	str	r3, [fp, #-16]
   16674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16678:	ldr	r3, [r3]
   1667c:	str	r3, [fp, #-8]
   16680:	b	166e8 <__assert_fail@plt+0x50c4>
   16684:	ldr	r3, [fp, #-8]
   16688:	ldr	r3, [r3]
   1668c:	cmp	r3, #0
   16690:	beq	166dc <__assert_fail@plt+0x50b8>
   16694:	ldr	r3, [fp, #-8]
   16698:	str	r3, [fp, #-20]	; 0xffffffec
   1669c:	ldr	r3, [fp, #-12]
   166a0:	add	r3, r3, #1
   166a4:	str	r3, [fp, #-12]
   166a8:	ldr	r3, [fp, #-16]
   166ac:	add	r3, r3, #1
   166b0:	str	r3, [fp, #-16]
   166b4:	b	166c4 <__assert_fail@plt+0x50a0>
   166b8:	ldr	r3, [fp, #-16]
   166bc:	add	r3, r3, #1
   166c0:	str	r3, [fp, #-16]
   166c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   166c8:	ldr	r3, [r3, #4]
   166cc:	str	r3, [fp, #-20]	; 0xffffffec
   166d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   166d4:	cmp	r3, #0
   166d8:	bne	166b8 <__assert_fail@plt+0x5094>
   166dc:	ldr	r3, [fp, #-8]
   166e0:	add	r3, r3, #8
   166e4:	str	r3, [fp, #-8]
   166e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   166ec:	ldr	r3, [r3, #4]
   166f0:	ldr	r2, [fp, #-8]
   166f4:	cmp	r2, r3
   166f8:	bcc	16684 <__assert_fail@plt+0x5060>
   166fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16700:	ldr	r3, [r3, #12]
   16704:	ldr	r2, [fp, #-12]
   16708:	cmp	r2, r3
   1670c:	bne	1672c <__assert_fail@plt+0x5108>
   16710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16714:	ldr	r3, [r3, #16]
   16718:	ldr	r2, [fp, #-16]
   1671c:	cmp	r2, r3
   16720:	bne	1672c <__assert_fail@plt+0x5108>
   16724:	mov	r3, #1
   16728:	b	16730 <__assert_fail@plt+0x510c>
   1672c:	mov	r3, #0
   16730:	mov	r0, r3
   16734:	add	sp, fp, #0
   16738:	pop	{fp}		; (ldr fp, [sp], #4)
   1673c:	bx	lr
   16740:	str	fp, [sp, #-8]!
   16744:	str	lr, [sp, #4]
   16748:	add	fp, sp, #4
   1674c:	sub	sp, sp, #32
   16750:	str	r0, [fp, #-24]	; 0xffffffe8
   16754:	str	r1, [fp, #-28]	; 0xffffffe4
   16758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1675c:	bl	16570 <__assert_fail@plt+0x4f4c>
   16760:	str	r0, [fp, #-8]
   16764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16768:	bl	16520 <__assert_fail@plt+0x4efc>
   1676c:	str	r0, [fp, #-12]
   16770:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16774:	bl	16548 <__assert_fail@plt+0x4f24>
   16778:	str	r0, [fp, #-16]
   1677c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16780:	bl	16598 <__assert_fail@plt+0x4f74>
   16784:	str	r0, [fp, #-20]	; 0xffffffec
   16788:	ldr	r2, [fp, #-8]
   1678c:	movw	r1, #640	; 0x280
   16790:	movt	r1, #2
   16794:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16798:	bl	114b0 <fprintf@plt>
   1679c:	ldr	r2, [fp, #-12]
   167a0:	movw	r1, #664	; 0x298
   167a4:	movt	r1, #2
   167a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   167ac:	bl	114b0 <fprintf@plt>
   167b0:	ldr	r3, [fp, #-16]
   167b4:	vmov	s15, r3
   167b8:	vcvt.f64.u32	d7, s15
   167bc:	vldr	d6, [pc, #84]	; 16818 <__assert_fail@plt+0x51f4>
   167c0:	vmul.f64	d5, d7, d6
   167c4:	ldr	r3, [fp, #-12]
   167c8:	vmov	s15, r3
   167cc:	vcvt.f64.u32	d6, s15
   167d0:	vdiv.f64	d7, d5, d6
   167d4:	vstr	d7, [sp]
   167d8:	ldr	r2, [fp, #-16]
   167dc:	movw	r1, #688	; 0x2b0
   167e0:	movt	r1, #2
   167e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   167e8:	bl	114b0 <fprintf@plt>
   167ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   167f0:	movw	r1, #724	; 0x2d4
   167f4:	movt	r1, #2
   167f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   167fc:	bl	114b0 <fprintf@plt>
   16800:	nop	{0}
   16804:	sub	sp, fp, #4
   16808:	ldr	fp, [sp]
   1680c:	add	sp, sp, #4
   16810:	pop	{pc}		; (ldr pc, [sp], #4)
   16814:	nop	{0}
   16818:	andeq	r0, r0, r0
   1681c:	subsmi	r0, r9, r0
   16820:	str	fp, [sp, #-8]!
   16824:	str	lr, [sp, #4]
   16828:	add	fp, sp, #4
   1682c:	sub	sp, sp, #16
   16830:	str	r0, [fp, #-16]
   16834:	str	r1, [fp, #-20]	; 0xffffffec
   16838:	ldr	r3, [fp, #-16]
   1683c:	ldr	r3, [r3, #24]
   16840:	ldr	r2, [fp, #-16]
   16844:	ldr	r2, [r2, #8]
   16848:	mov	r1, r2
   1684c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16850:	blx	r3
   16854:	str	r0, [fp, #-8]
   16858:	ldr	r3, [fp, #-16]
   1685c:	ldr	r3, [r3, #8]
   16860:	ldr	r2, [fp, #-8]
   16864:	cmp	r2, r3
   16868:	bcc	16870 <__assert_fail@plt+0x524c>
   1686c:	bl	115e8 <abort@plt>
   16870:	ldr	r3, [fp, #-16]
   16874:	ldr	r2, [r3]
   16878:	ldr	r3, [fp, #-8]
   1687c:	lsl	r3, r3, #3
   16880:	add	r3, r2, r3
   16884:	mov	r0, r3
   16888:	sub	sp, fp, #4
   1688c:	ldr	fp, [sp]
   16890:	add	sp, sp, #4
   16894:	pop	{pc}		; (ldr pc, [sp], #4)
   16898:	str	fp, [sp, #-8]!
   1689c:	str	lr, [sp, #4]
   168a0:	add	fp, sp, #4
   168a4:	sub	sp, sp, #16
   168a8:	str	r0, [fp, #-16]
   168ac:	str	r1, [fp, #-20]	; 0xffffffec
   168b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   168b4:	ldr	r0, [fp, #-16]
   168b8:	bl	16820 <__assert_fail@plt+0x51fc>
   168bc:	str	r0, [fp, #-12]
   168c0:	ldr	r3, [fp, #-12]
   168c4:	ldr	r3, [r3]
   168c8:	cmp	r3, #0
   168cc:	bne	168d8 <__assert_fail@plt+0x52b4>
   168d0:	mov	r3, #0
   168d4:	b	16948 <__assert_fail@plt+0x5324>
   168d8:	ldr	r3, [fp, #-12]
   168dc:	str	r3, [fp, #-8]
   168e0:	b	16938 <__assert_fail@plt+0x5314>
   168e4:	ldr	r3, [fp, #-8]
   168e8:	ldr	r3, [r3]
   168ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   168f0:	cmp	r2, r3
   168f4:	beq	16920 <__assert_fail@plt+0x52fc>
   168f8:	ldr	r3, [fp, #-16]
   168fc:	ldr	r3, [r3, #28]
   16900:	ldr	r2, [fp, #-8]
   16904:	ldr	r2, [r2]
   16908:	mov	r1, r2
   1690c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16910:	blx	r3
   16914:	mov	r3, r0
   16918:	cmp	r3, #0
   1691c:	beq	1692c <__assert_fail@plt+0x5308>
   16920:	ldr	r3, [fp, #-8]
   16924:	ldr	r3, [r3]
   16928:	b	16948 <__assert_fail@plt+0x5324>
   1692c:	ldr	r3, [fp, #-8]
   16930:	ldr	r3, [r3, #4]
   16934:	str	r3, [fp, #-8]
   16938:	ldr	r3, [fp, #-8]
   1693c:	cmp	r3, #0
   16940:	bne	168e4 <__assert_fail@plt+0x52c0>
   16944:	mov	r3, #0
   16948:	mov	r0, r3
   1694c:	sub	sp, fp, #4
   16950:	ldr	fp, [sp]
   16954:	add	sp, sp, #4
   16958:	pop	{pc}		; (ldr pc, [sp], #4)
   1695c:	str	fp, [sp, #-8]!
   16960:	str	lr, [sp, #4]
   16964:	add	fp, sp, #4
   16968:	sub	sp, sp, #16
   1696c:	str	r0, [fp, #-16]
   16970:	ldr	r3, [fp, #-16]
   16974:	ldr	r3, [r3, #16]
   16978:	cmp	r3, #0
   1697c:	bne	16988 <__assert_fail@plt+0x5364>
   16980:	mov	r3, #0
   16984:	b	169d8 <__assert_fail@plt+0x53b4>
   16988:	ldr	r3, [fp, #-16]
   1698c:	ldr	r3, [r3]
   16990:	str	r3, [fp, #-8]
   16994:	ldr	r3, [fp, #-16]
   16998:	ldr	r3, [r3, #4]
   1699c:	ldr	r2, [fp, #-8]
   169a0:	cmp	r2, r3
   169a4:	bcc	169ac <__assert_fail@plt+0x5388>
   169a8:	bl	115e8 <abort@plt>
   169ac:	ldr	r3, [fp, #-8]
   169b0:	ldr	r3, [r3]
   169b4:	cmp	r3, #0
   169b8:	beq	169c8 <__assert_fail@plt+0x53a4>
   169bc:	ldr	r3, [fp, #-8]
   169c0:	ldr	r3, [r3]
   169c4:	b	169d8 <__assert_fail@plt+0x53b4>
   169c8:	ldr	r3, [fp, #-8]
   169cc:	add	r3, r3, #8
   169d0:	str	r3, [fp, #-8]
   169d4:	b	16994 <__assert_fail@plt+0x5370>
   169d8:	mov	r0, r3
   169dc:	sub	sp, fp, #4
   169e0:	ldr	fp, [sp]
   169e4:	add	sp, sp, #4
   169e8:	pop	{pc}		; (ldr pc, [sp], #4)
   169ec:	str	fp, [sp, #-8]!
   169f0:	str	lr, [sp, #4]
   169f4:	add	fp, sp, #4
   169f8:	sub	sp, sp, #16
   169fc:	str	r0, [fp, #-16]
   16a00:	str	r1, [fp, #-20]	; 0xffffffec
   16a04:	ldr	r1, [fp, #-20]	; 0xffffffec
   16a08:	ldr	r0, [fp, #-16]
   16a0c:	bl	16820 <__assert_fail@plt+0x51fc>
   16a10:	str	r0, [fp, #-8]
   16a14:	ldr	r3, [fp, #-8]
   16a18:	str	r3, [fp, #-12]
   16a1c:	ldr	r3, [fp, #-12]
   16a20:	ldr	r3, [r3]
   16a24:	ldr	r2, [fp, #-20]	; 0xffffffec
   16a28:	cmp	r2, r3
   16a2c:	bne	16a50 <__assert_fail@plt+0x542c>
   16a30:	ldr	r3, [fp, #-12]
   16a34:	ldr	r3, [r3, #4]
   16a38:	cmp	r3, #0
   16a3c:	beq	16a50 <__assert_fail@plt+0x542c>
   16a40:	ldr	r3, [fp, #-12]
   16a44:	ldr	r3, [r3, #4]
   16a48:	ldr	r3, [r3]
   16a4c:	b	16aac <__assert_fail@plt+0x5488>
   16a50:	ldr	r3, [fp, #-12]
   16a54:	ldr	r3, [r3, #4]
   16a58:	str	r3, [fp, #-12]
   16a5c:	ldr	r3, [fp, #-12]
   16a60:	cmp	r3, #0
   16a64:	bne	16a1c <__assert_fail@plt+0x53f8>
   16a68:	b	16a88 <__assert_fail@plt+0x5464>
   16a6c:	ldr	r3, [fp, #-8]
   16a70:	ldr	r3, [r3]
   16a74:	cmp	r3, #0
   16a78:	beq	16a88 <__assert_fail@plt+0x5464>
   16a7c:	ldr	r3, [fp, #-8]
   16a80:	ldr	r3, [r3]
   16a84:	b	16aac <__assert_fail@plt+0x5488>
   16a88:	ldr	r3, [fp, #-8]
   16a8c:	add	r3, r3, #8
   16a90:	str	r3, [fp, #-8]
   16a94:	ldr	r3, [fp, #-16]
   16a98:	ldr	r3, [r3, #4]
   16a9c:	ldr	r2, [fp, #-8]
   16aa0:	cmp	r2, r3
   16aa4:	bcc	16a6c <__assert_fail@plt+0x5448>
   16aa8:	mov	r3, #0
   16aac:	mov	r0, r3
   16ab0:	sub	sp, fp, #4
   16ab4:	ldr	fp, [sp]
   16ab8:	add	sp, sp, #4
   16abc:	pop	{pc}		; (ldr pc, [sp], #4)
   16ac0:	push	{fp}		; (str fp, [sp, #-4]!)
   16ac4:	add	fp, sp, #0
   16ac8:	sub	sp, sp, #36	; 0x24
   16acc:	str	r0, [fp, #-24]	; 0xffffffe8
   16ad0:	str	r1, [fp, #-28]	; 0xffffffe4
   16ad4:	str	r2, [fp, #-32]	; 0xffffffe0
   16ad8:	mov	r3, #0
   16adc:	str	r3, [fp, #-8]
   16ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ae4:	ldr	r3, [r3]
   16ae8:	str	r3, [fp, #-12]
   16aec:	b	16b6c <__assert_fail@plt+0x5548>
   16af0:	ldr	r3, [fp, #-12]
   16af4:	ldr	r3, [r3]
   16af8:	cmp	r3, #0
   16afc:	beq	16b60 <__assert_fail@plt+0x553c>
   16b00:	ldr	r3, [fp, #-12]
   16b04:	str	r3, [fp, #-16]
   16b08:	b	16b54 <__assert_fail@plt+0x5530>
   16b0c:	ldr	r2, [fp, #-8]
   16b10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16b14:	cmp	r2, r3
   16b18:	bcc	16b24 <__assert_fail@plt+0x5500>
   16b1c:	ldr	r3, [fp, #-8]
   16b20:	b	16b84 <__assert_fail@plt+0x5560>
   16b24:	ldr	r3, [fp, #-8]
   16b28:	add	r2, r3, #1
   16b2c:	str	r2, [fp, #-8]
   16b30:	lsl	r3, r3, #2
   16b34:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16b38:	add	r3, r2, r3
   16b3c:	ldr	r2, [fp, #-16]
   16b40:	ldr	r2, [r2]
   16b44:	str	r2, [r3]
   16b48:	ldr	r3, [fp, #-16]
   16b4c:	ldr	r3, [r3, #4]
   16b50:	str	r3, [fp, #-16]
   16b54:	ldr	r3, [fp, #-16]
   16b58:	cmp	r3, #0
   16b5c:	bne	16b0c <__assert_fail@plt+0x54e8>
   16b60:	ldr	r3, [fp, #-12]
   16b64:	add	r3, r3, #8
   16b68:	str	r3, [fp, #-12]
   16b6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16b70:	ldr	r3, [r3, #4]
   16b74:	ldr	r2, [fp, #-12]
   16b78:	cmp	r2, r3
   16b7c:	bcc	16af0 <__assert_fail@plt+0x54cc>
   16b80:	ldr	r3, [fp, #-8]
   16b84:	mov	r0, r3
   16b88:	add	sp, fp, #0
   16b8c:	pop	{fp}		; (ldr fp, [sp], #4)
   16b90:	bx	lr
   16b94:	str	fp, [sp, #-8]!
   16b98:	str	lr, [sp, #4]
   16b9c:	add	fp, sp, #4
   16ba0:	sub	sp, sp, #32
   16ba4:	str	r0, [fp, #-24]	; 0xffffffe8
   16ba8:	str	r1, [fp, #-28]	; 0xffffffe4
   16bac:	str	r2, [fp, #-32]	; 0xffffffe0
   16bb0:	mov	r3, #0
   16bb4:	str	r3, [fp, #-8]
   16bb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16bbc:	ldr	r3, [r3]
   16bc0:	str	r3, [fp, #-12]
   16bc4:	b	16c48 <__assert_fail@plt+0x5624>
   16bc8:	ldr	r3, [fp, #-12]
   16bcc:	ldr	r3, [r3]
   16bd0:	cmp	r3, #0
   16bd4:	beq	16c3c <__assert_fail@plt+0x5618>
   16bd8:	ldr	r3, [fp, #-12]
   16bdc:	str	r3, [fp, #-16]
   16be0:	b	16c30 <__assert_fail@plt+0x560c>
   16be4:	ldr	r3, [fp, #-16]
   16be8:	ldr	r2, [r3]
   16bec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16bf0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16bf4:	mov	r0, r2
   16bf8:	blx	r3
   16bfc:	mov	r3, r0
   16c00:	eor	r3, r3, #1
   16c04:	uxtb	r3, r3
   16c08:	cmp	r3, #0
   16c0c:	beq	16c18 <__assert_fail@plt+0x55f4>
   16c10:	ldr	r3, [fp, #-8]
   16c14:	b	16c60 <__assert_fail@plt+0x563c>
   16c18:	ldr	r3, [fp, #-8]
   16c1c:	add	r3, r3, #1
   16c20:	str	r3, [fp, #-8]
   16c24:	ldr	r3, [fp, #-16]
   16c28:	ldr	r3, [r3, #4]
   16c2c:	str	r3, [fp, #-16]
   16c30:	ldr	r3, [fp, #-16]
   16c34:	cmp	r3, #0
   16c38:	bne	16be4 <__assert_fail@plt+0x55c0>
   16c3c:	ldr	r3, [fp, #-12]
   16c40:	add	r3, r3, #8
   16c44:	str	r3, [fp, #-12]
   16c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c4c:	ldr	r3, [r3, #4]
   16c50:	ldr	r2, [fp, #-12]
   16c54:	cmp	r2, r3
   16c58:	bcc	16bc8 <__assert_fail@plt+0x55a4>
   16c5c:	ldr	r3, [fp, #-8]
   16c60:	mov	r0, r3
   16c64:	sub	sp, fp, #4
   16c68:	ldr	fp, [sp]
   16c6c:	add	sp, sp, #4
   16c70:	pop	{pc}		; (ldr pc, [sp], #4)
   16c74:	push	{fp}		; (str fp, [sp, #-4]!)
   16c78:	add	fp, sp, #0
   16c7c:	sub	sp, sp, #20
   16c80:	str	r0, [fp, #-16]
   16c84:	str	r1, [fp, #-20]	; 0xffffffec
   16c88:	mov	r3, #0
   16c8c:	str	r3, [fp, #-8]
   16c90:	b	16cd0 <__assert_fail@plt+0x56ac>
   16c94:	ldr	r2, [fp, #-8]
   16c98:	mov	r3, r2
   16c9c:	lsl	r3, r3, #5
   16ca0:	sub	r2, r3, r2
   16ca4:	ldrb	r3, [fp, #-9]
   16ca8:	add	r3, r2, r3
   16cac:	ldr	r2, [fp, #-20]	; 0xffffffec
   16cb0:	udiv	r2, r3, r2
   16cb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16cb8:	mul	r2, r1, r2
   16cbc:	sub	r3, r3, r2
   16cc0:	str	r3, [fp, #-8]
   16cc4:	ldr	r3, [fp, #-16]
   16cc8:	add	r3, r3, #1
   16ccc:	str	r3, [fp, #-16]
   16cd0:	ldr	r3, [fp, #-16]
   16cd4:	ldrb	r3, [r3]
   16cd8:	strb	r3, [fp, #-9]
   16cdc:	ldrb	r3, [fp, #-9]
   16ce0:	cmp	r3, #0
   16ce4:	bne	16c94 <__assert_fail@plt+0x5670>
   16ce8:	ldr	r3, [fp, #-8]
   16cec:	mov	r0, r3
   16cf0:	add	sp, fp, #0
   16cf4:	pop	{fp}		; (ldr fp, [sp], #4)
   16cf8:	bx	lr
   16cfc:	push	{fp}		; (str fp, [sp, #-4]!)
   16d00:	add	fp, sp, #0
   16d04:	sub	sp, sp, #20
   16d08:	str	r0, [fp, #-16]
   16d0c:	mov	r3, #3
   16d10:	str	r3, [fp, #-8]
   16d14:	ldr	r3, [fp, #-8]
   16d18:	ldr	r2, [fp, #-8]
   16d1c:	mul	r3, r2, r3
   16d20:	str	r3, [fp, #-12]
   16d24:	b	16d54 <__assert_fail@plt+0x5730>
   16d28:	ldr	r3, [fp, #-8]
   16d2c:	add	r3, r3, #1
   16d30:	str	r3, [fp, #-8]
   16d34:	ldr	r3, [fp, #-8]
   16d38:	lsl	r3, r3, #2
   16d3c:	ldr	r2, [fp, #-12]
   16d40:	add	r3, r2, r3
   16d44:	str	r3, [fp, #-12]
   16d48:	ldr	r3, [fp, #-8]
   16d4c:	add	r3, r3, #1
   16d50:	str	r3, [fp, #-8]
   16d54:	ldr	r2, [fp, #-12]
   16d58:	ldr	r3, [fp, #-16]
   16d5c:	cmp	r2, r3
   16d60:	bcs	16d84 <__assert_fail@plt+0x5760>
   16d64:	ldr	r3, [fp, #-16]
   16d68:	ldr	r2, [fp, #-8]
   16d6c:	udiv	r2, r3, r2
   16d70:	ldr	r1, [fp, #-8]
   16d74:	mul	r2, r1, r2
   16d78:	sub	r3, r3, r2
   16d7c:	cmp	r3, #0
   16d80:	bne	16d28 <__assert_fail@plt+0x5704>
   16d84:	ldr	r3, [fp, #-16]
   16d88:	ldr	r2, [fp, #-8]
   16d8c:	udiv	r2, r3, r2
   16d90:	ldr	r1, [fp, #-8]
   16d94:	mul	r2, r1, r2
   16d98:	sub	r3, r3, r2
   16d9c:	cmp	r3, #0
   16da0:	movne	r3, #1
   16da4:	moveq	r3, #0
   16da8:	uxtb	r3, r3
   16dac:	mov	r0, r3
   16db0:	add	sp, fp, #0
   16db4:	pop	{fp}		; (ldr fp, [sp], #4)
   16db8:	bx	lr
   16dbc:	str	fp, [sp, #-8]!
   16dc0:	str	lr, [sp, #4]
   16dc4:	add	fp, sp, #4
   16dc8:	sub	sp, sp, #8
   16dcc:	str	r0, [fp, #-8]
   16dd0:	ldr	r3, [fp, #-8]
   16dd4:	cmp	r3, #9
   16dd8:	bhi	16de4 <__assert_fail@plt+0x57c0>
   16ddc:	mov	r3, #10
   16de0:	str	r3, [fp, #-8]
   16de4:	ldr	r3, [fp, #-8]
   16de8:	orr	r3, r3, #1
   16dec:	str	r3, [fp, #-8]
   16df0:	b	16e00 <__assert_fail@plt+0x57dc>
   16df4:	ldr	r3, [fp, #-8]
   16df8:	add	r3, r3, #2
   16dfc:	str	r3, [fp, #-8]
   16e00:	ldr	r3, [fp, #-8]
   16e04:	cmn	r3, #1
   16e08:	beq	16e28 <__assert_fail@plt+0x5804>
   16e0c:	ldr	r0, [fp, #-8]
   16e10:	bl	16cfc <__assert_fail@plt+0x56d8>
   16e14:	mov	r3, r0
   16e18:	eor	r3, r3, #1
   16e1c:	uxtb	r3, r3
   16e20:	cmp	r3, #0
   16e24:	bne	16df4 <__assert_fail@plt+0x57d0>
   16e28:	ldr	r3, [fp, #-8]
   16e2c:	mov	r0, r3
   16e30:	sub	sp, fp, #4
   16e34:	ldr	fp, [sp]
   16e38:	add	sp, sp, #4
   16e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   16e40:	push	{fp}		; (str fp, [sp, #-4]!)
   16e44:	add	fp, sp, #0
   16e48:	sub	sp, sp, #12
   16e4c:	str	r0, [fp, #-8]
   16e50:	ldr	r3, [fp, #-8]
   16e54:	movw	r2, #620	; 0x26c
   16e58:	movt	r2, #2
   16e5c:	ldrd	r0, [r2]
   16e60:	strd	r0, [r3]
   16e64:	ldrd	r0, [r2, #8]
   16e68:	strd	r0, [r3, #8]
   16e6c:	ldr	r2, [r2, #16]
   16e70:	str	r2, [r3, #16]
   16e74:	nop	{0}
   16e78:	add	sp, fp, #0
   16e7c:	pop	{fp}		; (ldr fp, [sp], #4)
   16e80:	bx	lr
   16e84:	str	fp, [sp, #-8]!
   16e88:	str	lr, [sp, #4]
   16e8c:	add	fp, sp, #4
   16e90:	sub	sp, sp, #16
   16e94:	str	r0, [fp, #-16]
   16e98:	str	r1, [fp, #-20]	; 0xffffffec
   16e9c:	ldr	r3, [fp, #-16]
   16ea0:	mov	r1, #3
   16ea4:	mov	r0, r3
   16ea8:	bl	1d2c0 <__assert_fail@plt+0xbc9c>
   16eac:	str	r0, [fp, #-8]
   16eb0:	ldr	r3, [fp, #-8]
   16eb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   16eb8:	udiv	r2, r3, r2
   16ebc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ec0:	mul	r2, r1, r2
   16ec4:	sub	r3, r3, r2
   16ec8:	mov	r0, r3
   16ecc:	sub	sp, fp, #4
   16ed0:	ldr	fp, [sp]
   16ed4:	add	sp, sp, #4
   16ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   16edc:	push	{fp}		; (str fp, [sp, #-4]!)
   16ee0:	add	fp, sp, #0
   16ee4:	sub	sp, sp, #12
   16ee8:	str	r0, [fp, #-8]
   16eec:	str	r1, [fp, #-12]
   16ef0:	ldr	r2, [fp, #-8]
   16ef4:	ldr	r3, [fp, #-12]
   16ef8:	cmp	r2, r3
   16efc:	moveq	r3, #1
   16f00:	movne	r3, #0
   16f04:	uxtb	r3, r3
   16f08:	mov	r0, r3
   16f0c:	add	sp, fp, #0
   16f10:	pop	{fp}		; (ldr fp, [sp], #4)
   16f14:	bx	lr
   16f18:	push	{fp}		; (str fp, [sp, #-4]!)
   16f1c:	add	fp, sp, #0
   16f20:	sub	sp, sp, #20
   16f24:	str	r0, [fp, #-16]
   16f28:	ldr	r3, [fp, #-16]
   16f2c:	ldr	r3, [r3, #20]
   16f30:	str	r3, [fp, #-8]
   16f34:	ldr	r2, [fp, #-8]
   16f38:	movw	r3, #620	; 0x26c
   16f3c:	movt	r3, #2
   16f40:	cmp	r2, r3
   16f44:	bne	16f50 <__assert_fail@plt+0x592c>
   16f48:	mov	r3, #1
   16f4c:	b	17044 <__assert_fail@plt+0x5a20>
   16f50:	movw	r3, #52429	; 0xcccd
   16f54:	movt	r3, #15820	; 0x3dcc
   16f58:	str	r3, [fp, #-12]
   16f5c:	ldr	r3, [fp, #-8]
   16f60:	vldr	s15, [r3, #8]
   16f64:	vldr	s14, [fp, #-12]
   16f68:	vcmpe.f32	s14, s15
   16f6c:	vmrs	APSR_nzcv, fpscr
   16f70:	bpl	17030 <__assert_fail@plt+0x5a0c>
   16f74:	ldr	r3, [fp, #-8]
   16f78:	vldr	s14, [r3, #8]
   16f7c:	vldr	s13, [pc, #208]	; 17054 <__assert_fail@plt+0x5a30>
   16f80:	vldr	s15, [fp, #-12]
   16f84:	vsub.f32	s15, s13, s15
   16f88:	vcmpe.f32	s14, s15
   16f8c:	vmrs	APSR_nzcv, fpscr
   16f90:	bpl	17030 <__assert_fail@plt+0x5a0c>
   16f94:	vldr	s15, [fp, #-12]
   16f98:	vldr	s14, [pc, #180]	; 17054 <__assert_fail@plt+0x5a30>
   16f9c:	vadd.f32	s14, s15, s14
   16fa0:	ldr	r3, [fp, #-8]
   16fa4:	vldr	s15, [r3, #12]
   16fa8:	vcmpe.f32	s14, s15
   16fac:	vmrs	APSR_nzcv, fpscr
   16fb0:	bpl	17030 <__assert_fail@plt+0x5a0c>
   16fb4:	ldr	r3, [fp, #-8]
   16fb8:	vldr	s15, [r3]
   16fbc:	vcmpe.f32	s15, #0.0
   16fc0:	vmrs	APSR_nzcv, fpscr
   16fc4:	blt	17030 <__assert_fail@plt+0x5a0c>
   16fc8:	ldr	r3, [fp, #-8]
   16fcc:	vldr	s14, [r3]
   16fd0:	vldr	s15, [fp, #-12]
   16fd4:	vadd.f32	s14, s14, s15
   16fd8:	ldr	r3, [fp, #-8]
   16fdc:	vldr	s15, [r3, #4]
   16fe0:	vcmpe.f32	s14, s15
   16fe4:	vmrs	APSR_nzcv, fpscr
   16fe8:	bpl	17030 <__assert_fail@plt+0x5a0c>
   16fec:	ldr	r3, [fp, #-8]
   16ff0:	vldr	s15, [r3, #4]
   16ff4:	vldr	s14, [pc, #88]	; 17054 <__assert_fail@plt+0x5a30>
   16ff8:	vcmpe.f32	s15, s14
   16ffc:	vmrs	APSR_nzcv, fpscr
   17000:	bhi	17030 <__assert_fail@plt+0x5a0c>
   17004:	ldr	r3, [fp, #-8]
   17008:	vldr	s14, [r3]
   1700c:	vldr	s15, [fp, #-12]
   17010:	vadd.f32	s14, s14, s15
   17014:	ldr	r3, [fp, #-8]
   17018:	vldr	s15, [r3, #8]
   1701c:	vcmpe.f32	s14, s15
   17020:	vmrs	APSR_nzcv, fpscr
   17024:	bpl	17030 <__assert_fail@plt+0x5a0c>
   17028:	mov	r3, #1
   1702c:	b	17044 <__assert_fail@plt+0x5a20>
   17030:	ldr	r2, [fp, #-16]
   17034:	movw	r3, #620	; 0x26c
   17038:	movt	r3, #2
   1703c:	str	r3, [r2, #20]
   17040:	mov	r3, #0
   17044:	mov	r0, r3
   17048:	add	sp, fp, #0
   1704c:	pop	{fp}		; (ldr fp, [sp], #4)
   17050:	bx	lr
   17054:	svccc	0x00800000
   17058:	str	fp, [sp, #-8]!
   1705c:	str	lr, [sp, #4]
   17060:	add	fp, sp, #4
   17064:	sub	sp, sp, #16
   17068:	str	r0, [fp, #-16]
   1706c:	str	r1, [fp, #-20]	; 0xffffffec
   17070:	ldr	r3, [fp, #-20]	; 0xffffffec
   17074:	ldrb	r3, [r3, #16]
   17078:	eor	r3, r3, #1
   1707c:	uxtb	r3, r3
   17080:	cmp	r3, #0
   17084:	beq	170d0 <__assert_fail@plt+0x5aac>
   17088:	ldr	r3, [fp, #-16]
   1708c:	vmov	s15, r3
   17090:	vcvt.f32.u32	s13, s15
   17094:	ldr	r3, [fp, #-20]	; 0xffffffec
   17098:	vldr	s14, [r3, #8]
   1709c:	vdiv.f32	s15, s13, s14
   170a0:	vstr	s15, [fp, #-8]
   170a4:	vldr	s15, [fp, #-8]
   170a8:	vldr	s14, [pc, #136]	; 17138 <__assert_fail@plt+0x5b14>
   170ac:	vcmpe.f32	s15, s14
   170b0:	vmrs	APSR_nzcv, fpscr
   170b4:	blt	170c0 <__assert_fail@plt+0x5a9c>
   170b8:	mov	r3, #0
   170bc:	b	17124 <__assert_fail@plt+0x5b00>
   170c0:	vldr	s15, [fp, #-8]
   170c4:	vcvt.u32.f32	s15, s15
   170c8:	vmov	r3, s15
   170cc:	str	r3, [fp, #-16]
   170d0:	ldr	r0, [fp, #-16]
   170d4:	bl	16dbc <__assert_fail@plt+0x5798>
   170d8:	str	r0, [fp, #-16]
   170dc:	mov	r3, #0
   170e0:	ldr	r2, [fp, #-16]
   170e4:	lsl	r2, r2, #2
   170e8:	ldr	r1, [fp, #-16]
   170ec:	lsr	r1, r1, #30
   170f0:	cmp	r1, #0
   170f4:	beq	170fc <__assert_fail@plt+0x5ad8>
   170f8:	mov	r3, #1
   170fc:	cmp	r2, #0
   17100:	bge	17108 <__assert_fail@plt+0x5ae4>
   17104:	mov	r3, #1
   17108:	and	r3, r3, #1
   1710c:	uxtb	r3, r3
   17110:	cmp	r3, #0
   17114:	beq	17120 <__assert_fail@plt+0x5afc>
   17118:	mov	r3, #0
   1711c:	b	17124 <__assert_fail@plt+0x5b00>
   17120:	ldr	r3, [fp, #-16]
   17124:	mov	r0, r3
   17128:	sub	sp, fp, #4
   1712c:	ldr	fp, [sp]
   17130:	add	sp, sp, #4
   17134:	pop	{pc}		; (ldr pc, [sp], #4)
   17138:	svcmi	0x00800000
   1713c:	str	fp, [sp, #-8]!
   17140:	str	lr, [sp, #4]
   17144:	add	fp, sp, #4
   17148:	sub	sp, sp, #24
   1714c:	str	r0, [fp, #-16]
   17150:	str	r1, [fp, #-20]	; 0xffffffec
   17154:	str	r2, [fp, #-24]	; 0xffffffe8
   17158:	str	r3, [fp, #-28]	; 0xffffffe4
   1715c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17160:	cmp	r3, #0
   17164:	bne	17174 <__assert_fail@plt+0x5b50>
   17168:	movw	r3, #28292	; 0x6e84
   1716c:	movt	r3, #1
   17170:	str	r3, [fp, #-24]	; 0xffffffe8
   17174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17178:	cmp	r3, #0
   1717c:	bne	1718c <__assert_fail@plt+0x5b68>
   17180:	movw	r3, #28380	; 0x6edc
   17184:	movt	r3, #1
   17188:	str	r3, [fp, #-28]	; 0xffffffe4
   1718c:	mov	r0, #40	; 0x28
   17190:	bl	1ce10 <__assert_fail@plt+0xb7ec>
   17194:	mov	r3, r0
   17198:	str	r3, [fp, #-8]
   1719c:	ldr	r3, [fp, #-8]
   171a0:	cmp	r3, #0
   171a4:	bne	171b0 <__assert_fail@plt+0x5b8c>
   171a8:	mov	r3, #0
   171ac:	b	172dc <__assert_fail@plt+0x5cb8>
   171b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   171b4:	cmp	r3, #0
   171b8:	bne	171c8 <__assert_fail@plt+0x5ba4>
   171bc:	movw	r3, #620	; 0x26c
   171c0:	movt	r3, #2
   171c4:	str	r3, [fp, #-20]	; 0xffffffec
   171c8:	ldr	r3, [fp, #-8]
   171cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   171d0:	str	r2, [r3, #20]
   171d4:	ldr	r0, [fp, #-8]
   171d8:	bl	16f18 <__assert_fail@plt+0x58f4>
   171dc:	mov	r3, r0
   171e0:	eor	r3, r3, #1
   171e4:	uxtb	r3, r3
   171e8:	cmp	r3, #0
   171ec:	bne	172bc <__assert_fail@plt+0x5c98>
   171f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   171f4:	ldr	r0, [fp, #-16]
   171f8:	bl	17058 <__assert_fail@plt+0x5a34>
   171fc:	mov	r2, r0
   17200:	ldr	r3, [fp, #-8]
   17204:	str	r2, [r3, #8]
   17208:	ldr	r3, [fp, #-8]
   1720c:	ldr	r3, [r3, #8]
   17210:	cmp	r3, #0
   17214:	beq	172c4 <__assert_fail@plt+0x5ca0>
   17218:	ldr	r3, [fp, #-8]
   1721c:	ldr	r3, [r3, #8]
   17220:	mov	r1, #8
   17224:	mov	r0, r3
   17228:	bl	1cd40 <__assert_fail@plt+0xb71c>
   1722c:	mov	r3, r0
   17230:	mov	r2, r3
   17234:	ldr	r3, [fp, #-8]
   17238:	str	r2, [r3]
   1723c:	ldr	r3, [fp, #-8]
   17240:	ldr	r3, [r3]
   17244:	cmp	r3, #0
   17248:	beq	172cc <__assert_fail@plt+0x5ca8>
   1724c:	ldr	r3, [fp, #-8]
   17250:	ldr	r2, [r3]
   17254:	ldr	r3, [fp, #-8]
   17258:	ldr	r3, [r3, #8]
   1725c:	lsl	r3, r3, #3
   17260:	add	r2, r2, r3
   17264:	ldr	r3, [fp, #-8]
   17268:	str	r2, [r3, #4]
   1726c:	ldr	r3, [fp, #-8]
   17270:	mov	r2, #0
   17274:	str	r2, [r3, #12]
   17278:	ldr	r3, [fp, #-8]
   1727c:	mov	r2, #0
   17280:	str	r2, [r3, #16]
   17284:	ldr	r3, [fp, #-8]
   17288:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1728c:	str	r2, [r3, #24]
   17290:	ldr	r3, [fp, #-8]
   17294:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17298:	str	r2, [r3, #28]
   1729c:	ldr	r3, [fp, #-8]
   172a0:	ldr	r2, [fp, #4]
   172a4:	str	r2, [r3, #32]
   172a8:	ldr	r3, [fp, #-8]
   172ac:	mov	r2, #0
   172b0:	str	r2, [r3, #36]	; 0x24
   172b4:	ldr	r3, [fp, #-8]
   172b8:	b	172dc <__assert_fail@plt+0x5cb8>
   172bc:	nop	{0}
   172c0:	b	172d0 <__assert_fail@plt+0x5cac>
   172c4:	nop	{0}
   172c8:	b	172d0 <__assert_fail@plt+0x5cac>
   172cc:	nop	{0}
   172d0:	ldr	r0, [fp, #-8]
   172d4:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   172d8:	mov	r3, #0
   172dc:	mov	r0, r3
   172e0:	sub	sp, fp, #4
   172e4:	ldr	fp, [sp]
   172e8:	add	sp, sp, #4
   172ec:	pop	{pc}		; (ldr pc, [sp], #4)
   172f0:	str	fp, [sp, #-8]!
   172f4:	str	lr, [sp, #4]
   172f8:	add	fp, sp, #4
   172fc:	sub	sp, sp, #24
   17300:	str	r0, [fp, #-24]	; 0xffffffe8
   17304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17308:	ldr	r3, [r3]
   1730c:	str	r3, [fp, #-8]
   17310:	b	173f0 <__assert_fail@plt+0x5dcc>
   17314:	ldr	r3, [fp, #-8]
   17318:	ldr	r3, [r3]
   1731c:	cmp	r3, #0
   17320:	beq	173e4 <__assert_fail@plt+0x5dc0>
   17324:	ldr	r3, [fp, #-8]
   17328:	ldr	r3, [r3, #4]
   1732c:	str	r3, [fp, #-12]
   17330:	b	17398 <__assert_fail@plt+0x5d74>
   17334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17338:	ldr	r3, [r3, #32]
   1733c:	cmp	r3, #0
   17340:	beq	1735c <__assert_fail@plt+0x5d38>
   17344:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17348:	ldr	r3, [r3, #32]
   1734c:	ldr	r2, [fp, #-12]
   17350:	ldr	r2, [r2]
   17354:	mov	r0, r2
   17358:	blx	r3
   1735c:	ldr	r3, [fp, #-12]
   17360:	mov	r2, #0
   17364:	str	r2, [r3]
   17368:	ldr	r3, [fp, #-12]
   1736c:	ldr	r3, [r3, #4]
   17370:	str	r3, [fp, #-16]
   17374:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17378:	ldr	r2, [r3, #36]	; 0x24
   1737c:	ldr	r3, [fp, #-12]
   17380:	str	r2, [r3, #4]
   17384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17388:	ldr	r2, [fp, #-12]
   1738c:	str	r2, [r3, #36]	; 0x24
   17390:	ldr	r3, [fp, #-16]
   17394:	str	r3, [fp, #-12]
   17398:	ldr	r3, [fp, #-12]
   1739c:	cmp	r3, #0
   173a0:	bne	17334 <__assert_fail@plt+0x5d10>
   173a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   173a8:	ldr	r3, [r3, #32]
   173ac:	cmp	r3, #0
   173b0:	beq	173cc <__assert_fail@plt+0x5da8>
   173b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   173b8:	ldr	r3, [r3, #32]
   173bc:	ldr	r2, [fp, #-8]
   173c0:	ldr	r2, [r2]
   173c4:	mov	r0, r2
   173c8:	blx	r3
   173cc:	ldr	r3, [fp, #-8]
   173d0:	mov	r2, #0
   173d4:	str	r2, [r3]
   173d8:	ldr	r3, [fp, #-8]
   173dc:	mov	r2, #0
   173e0:	str	r2, [r3, #4]
   173e4:	ldr	r3, [fp, #-8]
   173e8:	add	r3, r3, #8
   173ec:	str	r3, [fp, #-8]
   173f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   173f4:	ldr	r3, [r3, #4]
   173f8:	ldr	r2, [fp, #-8]
   173fc:	cmp	r2, r3
   17400:	bcc	17314 <__assert_fail@plt+0x5cf0>
   17404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17408:	mov	r2, #0
   1740c:	str	r2, [r3, #12]
   17410:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17414:	mov	r2, #0
   17418:	str	r2, [r3, #16]
   1741c:	nop	{0}
   17420:	sub	sp, fp, #4
   17424:	ldr	fp, [sp]
   17428:	add	sp, sp, #4
   1742c:	pop	{pc}		; (ldr pc, [sp], #4)
   17430:	str	fp, [sp, #-8]!
   17434:	str	lr, [sp, #4]
   17438:	add	fp, sp, #4
   1743c:	sub	sp, sp, #24
   17440:	str	r0, [fp, #-24]	; 0xffffffe8
   17444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17448:	ldr	r3, [r3, #32]
   1744c:	cmp	r3, #0
   17450:	beq	174e0 <__assert_fail@plt+0x5ebc>
   17454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17458:	ldr	r3, [r3, #16]
   1745c:	cmp	r3, #0
   17460:	beq	174e0 <__assert_fail@plt+0x5ebc>
   17464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17468:	ldr	r3, [r3]
   1746c:	str	r3, [fp, #-8]
   17470:	b	174cc <__assert_fail@plt+0x5ea8>
   17474:	ldr	r3, [fp, #-8]
   17478:	ldr	r3, [r3]
   1747c:	cmp	r3, #0
   17480:	beq	174c0 <__assert_fail@plt+0x5e9c>
   17484:	ldr	r3, [fp, #-8]
   17488:	str	r3, [fp, #-12]
   1748c:	b	174b4 <__assert_fail@plt+0x5e90>
   17490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17494:	ldr	r3, [r3, #32]
   17498:	ldr	r2, [fp, #-12]
   1749c:	ldr	r2, [r2]
   174a0:	mov	r0, r2
   174a4:	blx	r3
   174a8:	ldr	r3, [fp, #-12]
   174ac:	ldr	r3, [r3, #4]
   174b0:	str	r3, [fp, #-12]
   174b4:	ldr	r3, [fp, #-12]
   174b8:	cmp	r3, #0
   174bc:	bne	17490 <__assert_fail@plt+0x5e6c>
   174c0:	ldr	r3, [fp, #-8]
   174c4:	add	r3, r3, #8
   174c8:	str	r3, [fp, #-8]
   174cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   174d0:	ldr	r3, [r3, #4]
   174d4:	ldr	r2, [fp, #-8]
   174d8:	cmp	r2, r3
   174dc:	bcc	17474 <__assert_fail@plt+0x5e50>
   174e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   174e4:	ldr	r3, [r3]
   174e8:	str	r3, [fp, #-8]
   174ec:	b	17534 <__assert_fail@plt+0x5f10>
   174f0:	ldr	r3, [fp, #-8]
   174f4:	ldr	r3, [r3, #4]
   174f8:	str	r3, [fp, #-12]
   174fc:	b	1751c <__assert_fail@plt+0x5ef8>
   17500:	ldr	r3, [fp, #-12]
   17504:	ldr	r3, [r3, #4]
   17508:	str	r3, [fp, #-16]
   1750c:	ldr	r0, [fp, #-12]
   17510:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   17514:	ldr	r3, [fp, #-16]
   17518:	str	r3, [fp, #-12]
   1751c:	ldr	r3, [fp, #-12]
   17520:	cmp	r3, #0
   17524:	bne	17500 <__assert_fail@plt+0x5edc>
   17528:	ldr	r3, [fp, #-8]
   1752c:	add	r3, r3, #8
   17530:	str	r3, [fp, #-8]
   17534:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17538:	ldr	r3, [r3, #4]
   1753c:	ldr	r2, [fp, #-8]
   17540:	cmp	r2, r3
   17544:	bcc	174f0 <__assert_fail@plt+0x5ecc>
   17548:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1754c:	ldr	r3, [r3, #36]	; 0x24
   17550:	str	r3, [fp, #-12]
   17554:	b	17574 <__assert_fail@plt+0x5f50>
   17558:	ldr	r3, [fp, #-12]
   1755c:	ldr	r3, [r3, #4]
   17560:	str	r3, [fp, #-16]
   17564:	ldr	r0, [fp, #-12]
   17568:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   1756c:	ldr	r3, [fp, #-16]
   17570:	str	r3, [fp, #-12]
   17574:	ldr	r3, [fp, #-12]
   17578:	cmp	r3, #0
   1757c:	bne	17558 <__assert_fail@plt+0x5f34>
   17580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17584:	ldr	r3, [r3]
   17588:	mov	r0, r3
   1758c:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   17590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17594:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   17598:	nop	{0}
   1759c:	sub	sp, fp, #4
   175a0:	ldr	fp, [sp]
   175a4:	add	sp, sp, #4
   175a8:	pop	{pc}		; (ldr pc, [sp], #4)
   175ac:	str	fp, [sp, #-8]!
   175b0:	str	lr, [sp, #4]
   175b4:	add	fp, sp, #4
   175b8:	sub	sp, sp, #16
   175bc:	str	r0, [fp, #-16]
   175c0:	ldr	r3, [fp, #-16]
   175c4:	ldr	r3, [r3, #36]	; 0x24
   175c8:	cmp	r3, #0
   175cc:	beq	175f0 <__assert_fail@plt+0x5fcc>
   175d0:	ldr	r3, [fp, #-16]
   175d4:	ldr	r3, [r3, #36]	; 0x24
   175d8:	str	r3, [fp, #-8]
   175dc:	ldr	r3, [fp, #-8]
   175e0:	ldr	r2, [r3, #4]
   175e4:	ldr	r3, [fp, #-16]
   175e8:	str	r2, [r3, #36]	; 0x24
   175ec:	b	17600 <__assert_fail@plt+0x5fdc>
   175f0:	mov	r0, #8
   175f4:	bl	1ce10 <__assert_fail@plt+0xb7ec>
   175f8:	mov	r3, r0
   175fc:	str	r3, [fp, #-8]
   17600:	ldr	r3, [fp, #-8]
   17604:	mov	r0, r3
   17608:	sub	sp, fp, #4
   1760c:	ldr	fp, [sp]
   17610:	add	sp, sp, #4
   17614:	pop	{pc}		; (ldr pc, [sp], #4)
   17618:	push	{fp}		; (str fp, [sp, #-4]!)
   1761c:	add	fp, sp, #0
   17620:	sub	sp, sp, #12
   17624:	str	r0, [fp, #-8]
   17628:	str	r1, [fp, #-12]
   1762c:	ldr	r3, [fp, #-12]
   17630:	mov	r2, #0
   17634:	str	r2, [r3]
   17638:	ldr	r3, [fp, #-8]
   1763c:	ldr	r2, [r3, #36]	; 0x24
   17640:	ldr	r3, [fp, #-12]
   17644:	str	r2, [r3, #4]
   17648:	ldr	r3, [fp, #-8]
   1764c:	ldr	r2, [fp, #-12]
   17650:	str	r2, [r3, #36]	; 0x24
   17654:	nop	{0}
   17658:	add	sp, fp, #0
   1765c:	pop	{fp}		; (ldr fp, [sp], #4)
   17660:	bx	lr
   17664:	str	fp, [sp, #-8]!
   17668:	str	lr, [sp, #4]
   1766c:	add	fp, sp, #4
   17670:	sub	sp, sp, #40	; 0x28
   17674:	str	r0, [fp, #-32]	; 0xffffffe0
   17678:	str	r1, [fp, #-36]	; 0xffffffdc
   1767c:	str	r2, [fp, #-40]	; 0xffffffd8
   17680:	strb	r3, [fp, #-41]	; 0xffffffd7
   17684:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17688:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1768c:	bl	16820 <__assert_fail@plt+0x51fc>
   17690:	str	r0, [fp, #-12]
   17694:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17698:	ldr	r2, [fp, #-12]
   1769c:	str	r2, [r3]
   176a0:	ldr	r3, [fp, #-12]
   176a4:	ldr	r3, [r3]
   176a8:	cmp	r3, #0
   176ac:	bne	176b8 <__assert_fail@plt+0x6094>
   176b0:	mov	r3, #0
   176b4:	b	1781c <__assert_fail@plt+0x61f8>
   176b8:	ldr	r3, [fp, #-12]
   176bc:	ldr	r3, [r3]
   176c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   176c4:	cmp	r2, r3
   176c8:	beq	176f4 <__assert_fail@plt+0x60d0>
   176cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   176d0:	ldr	r3, [r3, #28]
   176d4:	ldr	r2, [fp, #-12]
   176d8:	ldr	r2, [r2]
   176dc:	mov	r1, r2
   176e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   176e4:	blx	r3
   176e8:	mov	r3, r0
   176ec:	cmp	r3, #0
   176f0:	beq	17760 <__assert_fail@plt+0x613c>
   176f4:	ldr	r3, [fp, #-12]
   176f8:	ldr	r3, [r3]
   176fc:	str	r3, [fp, #-24]	; 0xffffffe8
   17700:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   17704:	cmp	r3, #0
   17708:	beq	17758 <__assert_fail@plt+0x6134>
   1770c:	ldr	r3, [fp, #-12]
   17710:	ldr	r3, [r3, #4]
   17714:	cmp	r3, #0
   17718:	beq	1774c <__assert_fail@plt+0x6128>
   1771c:	ldr	r3, [fp, #-12]
   17720:	ldr	r3, [r3, #4]
   17724:	str	r3, [fp, #-28]	; 0xffffffe4
   17728:	ldr	r2, [fp, #-12]
   1772c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17730:	mov	r1, r2
   17734:	ldrd	r2, [r3]
   17738:	strd	r2, [r1]
   1773c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17740:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17744:	bl	17618 <__assert_fail@plt+0x5ff4>
   17748:	b	17758 <__assert_fail@plt+0x6134>
   1774c:	ldr	r3, [fp, #-12]
   17750:	mov	r2, #0
   17754:	str	r2, [r3]
   17758:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1775c:	b	1781c <__assert_fail@plt+0x61f8>
   17760:	ldr	r3, [fp, #-12]
   17764:	str	r3, [fp, #-8]
   17768:	b	17808 <__assert_fail@plt+0x61e4>
   1776c:	ldr	r3, [fp, #-8]
   17770:	ldr	r3, [r3, #4]
   17774:	ldr	r3, [r3]
   17778:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1777c:	cmp	r2, r3
   17780:	beq	177b0 <__assert_fail@plt+0x618c>
   17784:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17788:	ldr	r3, [r3, #28]
   1778c:	ldr	r2, [fp, #-8]
   17790:	ldr	r2, [r2, #4]
   17794:	ldr	r2, [r2]
   17798:	mov	r1, r2
   1779c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   177a0:	blx	r3
   177a4:	mov	r3, r0
   177a8:	cmp	r3, #0
   177ac:	beq	177fc <__assert_fail@plt+0x61d8>
   177b0:	ldr	r3, [fp, #-8]
   177b4:	ldr	r3, [r3, #4]
   177b8:	ldr	r3, [r3]
   177bc:	str	r3, [fp, #-16]
   177c0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   177c4:	cmp	r3, #0
   177c8:	beq	177f4 <__assert_fail@plt+0x61d0>
   177cc:	ldr	r3, [fp, #-8]
   177d0:	ldr	r3, [r3, #4]
   177d4:	str	r3, [fp, #-20]	; 0xffffffec
   177d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   177dc:	ldr	r2, [r3, #4]
   177e0:	ldr	r3, [fp, #-8]
   177e4:	str	r2, [r3, #4]
   177e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   177ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   177f0:	bl	17618 <__assert_fail@plt+0x5ff4>
   177f4:	ldr	r3, [fp, #-16]
   177f8:	b	1781c <__assert_fail@plt+0x61f8>
   177fc:	ldr	r3, [fp, #-8]
   17800:	ldr	r3, [r3, #4]
   17804:	str	r3, [fp, #-8]
   17808:	ldr	r3, [fp, #-8]
   1780c:	ldr	r3, [r3, #4]
   17810:	cmp	r3, #0
   17814:	bne	1776c <__assert_fail@plt+0x6148>
   17818:	mov	r3, #0
   1781c:	mov	r0, r3
   17820:	sub	sp, fp, #4
   17824:	ldr	fp, [sp]
   17828:	add	sp, sp, #4
   1782c:	pop	{pc}		; (ldr pc, [sp], #4)
   17830:	str	fp, [sp, #-8]!
   17834:	str	lr, [sp, #4]
   17838:	add	fp, sp, #4
   1783c:	sub	sp, sp, #40	; 0x28
   17840:	str	r0, [fp, #-32]	; 0xffffffe0
   17844:	str	r1, [fp, #-36]	; 0xffffffdc
   17848:	mov	r3, r2
   1784c:	strb	r3, [fp, #-37]	; 0xffffffdb
   17850:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17854:	ldr	r3, [r3]
   17858:	str	r3, [fp, #-8]
   1785c:	b	179fc <__assert_fail@plt+0x63d8>
   17860:	ldr	r3, [fp, #-8]
   17864:	ldr	r3, [r3]
   17868:	cmp	r3, #0
   1786c:	beq	179f0 <__assert_fail@plt+0x63cc>
   17870:	ldr	r3, [fp, #-8]
   17874:	ldr	r3, [r3, #4]
   17878:	str	r3, [fp, #-12]
   1787c:	b	1790c <__assert_fail@plt+0x62e8>
   17880:	ldr	r3, [fp, #-12]
   17884:	ldr	r3, [r3]
   17888:	str	r3, [fp, #-16]
   1788c:	ldr	r1, [fp, #-16]
   17890:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17894:	bl	16820 <__assert_fail@plt+0x51fc>
   17898:	str	r0, [fp, #-20]	; 0xffffffec
   1789c:	ldr	r3, [fp, #-12]
   178a0:	ldr	r3, [r3, #4]
   178a4:	str	r3, [fp, #-24]	; 0xffffffe8
   178a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   178ac:	ldr	r3, [r3]
   178b0:	cmp	r3, #0
   178b4:	beq	178d8 <__assert_fail@plt+0x62b4>
   178b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   178bc:	ldr	r2, [r3, #4]
   178c0:	ldr	r3, [fp, #-12]
   178c4:	str	r2, [r3, #4]
   178c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   178cc:	ldr	r2, [fp, #-12]
   178d0:	str	r2, [r3, #4]
   178d4:	b	17904 <__assert_fail@plt+0x62e0>
   178d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   178dc:	ldr	r2, [fp, #-16]
   178e0:	str	r2, [r3]
   178e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   178e8:	ldr	r3, [r3, #12]
   178ec:	add	r2, r3, #1
   178f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   178f4:	str	r2, [r3, #12]
   178f8:	ldr	r1, [fp, #-12]
   178fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17900:	bl	17618 <__assert_fail@plt+0x5ff4>
   17904:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17908:	str	r3, [fp, #-12]
   1790c:	ldr	r3, [fp, #-12]
   17910:	cmp	r3, #0
   17914:	bne	17880 <__assert_fail@plt+0x625c>
   17918:	ldr	r3, [fp, #-8]
   1791c:	ldr	r3, [r3]
   17920:	str	r3, [fp, #-16]
   17924:	ldr	r3, [fp, #-8]
   17928:	mov	r2, #0
   1792c:	str	r2, [r3, #4]
   17930:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   17934:	cmp	r3, #0
   17938:	bne	179ec <__assert_fail@plt+0x63c8>
   1793c:	ldr	r1, [fp, #-16]
   17940:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17944:	bl	16820 <__assert_fail@plt+0x51fc>
   17948:	str	r0, [fp, #-20]	; 0xffffffec
   1794c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17950:	ldr	r3, [r3]
   17954:	cmp	r3, #0
   17958:	beq	179a8 <__assert_fail@plt+0x6384>
   1795c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17960:	bl	175ac <__assert_fail@plt+0x5f88>
   17964:	str	r0, [fp, #-28]	; 0xffffffe4
   17968:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1796c:	cmp	r3, #0
   17970:	bne	1797c <__assert_fail@plt+0x6358>
   17974:	mov	r3, #0
   17978:	b	17a14 <__assert_fail@plt+0x63f0>
   1797c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17980:	ldr	r2, [fp, #-16]
   17984:	str	r2, [r3]
   17988:	ldr	r3, [fp, #-20]	; 0xffffffec
   1798c:	ldr	r2, [r3, #4]
   17990:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17994:	str	r2, [r3, #4]
   17998:	ldr	r3, [fp, #-20]	; 0xffffffec
   1799c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   179a0:	str	r2, [r3, #4]
   179a4:	b	179c8 <__assert_fail@plt+0x63a4>
   179a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   179ac:	ldr	r2, [fp, #-16]
   179b0:	str	r2, [r3]
   179b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   179b8:	ldr	r3, [r3, #12]
   179bc:	add	r2, r3, #1
   179c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   179c4:	str	r2, [r3, #12]
   179c8:	ldr	r3, [fp, #-8]
   179cc:	mov	r2, #0
   179d0:	str	r2, [r3]
   179d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   179d8:	ldr	r3, [r3, #12]
   179dc:	sub	r2, r3, #1
   179e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   179e4:	str	r2, [r3, #12]
   179e8:	b	179f0 <__assert_fail@plt+0x63cc>
   179ec:	nop	{0}
   179f0:	ldr	r3, [fp, #-8]
   179f4:	add	r3, r3, #8
   179f8:	str	r3, [fp, #-8]
   179fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17a00:	ldr	r3, [r3, #4]
   17a04:	ldr	r2, [fp, #-8]
   17a08:	cmp	r2, r3
   17a0c:	bcc	17860 <__assert_fail@plt+0x623c>
   17a10:	mov	r3, #1
   17a14:	mov	r0, r3
   17a18:	sub	sp, fp, #4
   17a1c:	ldr	fp, [sp]
   17a20:	add	sp, sp, #4
   17a24:	pop	{pc}		; (ldr pc, [sp], #4)
   17a28:	str	fp, [sp, #-8]!
   17a2c:	str	lr, [sp, #4]
   17a30:	add	fp, sp, #4
   17a34:	sub	sp, sp, #56	; 0x38
   17a38:	str	r0, [fp, #-56]	; 0xffffffc8
   17a3c:	str	r1, [fp, #-60]	; 0xffffffc4
   17a40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17a44:	ldr	r3, [r3, #20]
   17a48:	mov	r1, r3
   17a4c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17a50:	bl	17058 <__assert_fail@plt+0x5a34>
   17a54:	str	r0, [fp, #-8]
   17a58:	ldr	r3, [fp, #-8]
   17a5c:	cmp	r3, #0
   17a60:	bne	17a6c <__assert_fail@plt+0x6448>
   17a64:	mov	r3, #0
   17a68:	b	17c48 <__assert_fail@plt+0x6624>
   17a6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17a70:	ldr	r3, [r3, #8]
   17a74:	ldr	r2, [fp, #-8]
   17a78:	cmp	r2, r3
   17a7c:	bne	17a88 <__assert_fail@plt+0x6464>
   17a80:	mov	r3, #1
   17a84:	b	17c48 <__assert_fail@plt+0x6624>
   17a88:	sub	r3, fp, #52	; 0x34
   17a8c:	str	r3, [fp, #-12]
   17a90:	mov	r1, #8
   17a94:	ldr	r0, [fp, #-8]
   17a98:	bl	1cd40 <__assert_fail@plt+0xb71c>
   17a9c:	mov	r3, r0
   17aa0:	mov	r2, r3
   17aa4:	ldr	r3, [fp, #-12]
   17aa8:	str	r2, [r3]
   17aac:	ldr	r3, [fp, #-12]
   17ab0:	ldr	r3, [r3]
   17ab4:	cmp	r3, #0
   17ab8:	bne	17ac4 <__assert_fail@plt+0x64a0>
   17abc:	mov	r3, #0
   17ac0:	b	17c48 <__assert_fail@plt+0x6624>
   17ac4:	ldr	r3, [fp, #-12]
   17ac8:	ldr	r2, [fp, #-8]
   17acc:	str	r2, [r3, #8]
   17ad0:	ldr	r3, [fp, #-12]
   17ad4:	ldr	r2, [r3]
   17ad8:	ldr	r3, [fp, #-8]
   17adc:	lsl	r3, r3, #3
   17ae0:	add	r2, r2, r3
   17ae4:	ldr	r3, [fp, #-12]
   17ae8:	str	r2, [r3, #4]
   17aec:	ldr	r3, [fp, #-12]
   17af0:	mov	r2, #0
   17af4:	str	r2, [r3, #12]
   17af8:	ldr	r3, [fp, #-12]
   17afc:	mov	r2, #0
   17b00:	str	r2, [r3, #16]
   17b04:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17b08:	ldr	r2, [r3, #20]
   17b0c:	ldr	r3, [fp, #-12]
   17b10:	str	r2, [r3, #20]
   17b14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17b18:	ldr	r2, [r3, #24]
   17b1c:	ldr	r3, [fp, #-12]
   17b20:	str	r2, [r3, #24]
   17b24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17b28:	ldr	r2, [r3, #28]
   17b2c:	ldr	r3, [fp, #-12]
   17b30:	str	r2, [r3, #28]
   17b34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17b38:	ldr	r2, [r3, #32]
   17b3c:	ldr	r3, [fp, #-12]
   17b40:	str	r2, [r3, #32]
   17b44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17b48:	ldr	r2, [r3, #36]	; 0x24
   17b4c:	ldr	r3, [fp, #-12]
   17b50:	str	r2, [r3, #36]	; 0x24
   17b54:	mov	r2, #0
   17b58:	ldr	r1, [fp, #-56]	; 0xffffffc8
   17b5c:	ldr	r0, [fp, #-12]
   17b60:	bl	17830 <__assert_fail@plt+0x620c>
   17b64:	mov	r3, r0
   17b68:	cmp	r3, #0
   17b6c:	beq	17bd8 <__assert_fail@plt+0x65b4>
   17b70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17b74:	ldr	r3, [r3]
   17b78:	mov	r0, r3
   17b7c:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   17b80:	ldr	r3, [fp, #-12]
   17b84:	ldr	r2, [r3]
   17b88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17b8c:	str	r2, [r3]
   17b90:	ldr	r3, [fp, #-12]
   17b94:	ldr	r2, [r3, #4]
   17b98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17b9c:	str	r2, [r3, #4]
   17ba0:	ldr	r3, [fp, #-12]
   17ba4:	ldr	r2, [r3, #8]
   17ba8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17bac:	str	r2, [r3, #8]
   17bb0:	ldr	r3, [fp, #-12]
   17bb4:	ldr	r2, [r3, #12]
   17bb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17bbc:	str	r2, [r3, #12]
   17bc0:	ldr	r3, [fp, #-12]
   17bc4:	ldr	r2, [r3, #36]	; 0x24
   17bc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17bcc:	str	r2, [r3, #36]	; 0x24
   17bd0:	mov	r3, #1
   17bd4:	b	17c48 <__assert_fail@plt+0x6624>
   17bd8:	ldr	r3, [fp, #-12]
   17bdc:	ldr	r2, [r3, #36]	; 0x24
   17be0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17be4:	str	r2, [r3, #36]	; 0x24
   17be8:	mov	r2, #1
   17bec:	ldr	r1, [fp, #-12]
   17bf0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17bf4:	bl	17830 <__assert_fail@plt+0x620c>
   17bf8:	mov	r3, r0
   17bfc:	eor	r3, r3, #1
   17c00:	uxtb	r3, r3
   17c04:	cmp	r3, #0
   17c08:	bne	17c30 <__assert_fail@plt+0x660c>
   17c0c:	mov	r2, #0
   17c10:	ldr	r1, [fp, #-12]
   17c14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17c18:	bl	17830 <__assert_fail@plt+0x620c>
   17c1c:	mov	r3, r0
   17c20:	eor	r3, r3, #1
   17c24:	uxtb	r3, r3
   17c28:	cmp	r3, #0
   17c2c:	beq	17c34 <__assert_fail@plt+0x6610>
   17c30:	bl	115e8 <abort@plt>
   17c34:	ldr	r3, [fp, #-12]
   17c38:	ldr	r3, [r3]
   17c3c:	mov	r0, r3
   17c40:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   17c44:	mov	r3, #0
   17c48:	mov	r0, r3
   17c4c:	sub	sp, fp, #4
   17c50:	ldr	fp, [sp]
   17c54:	add	sp, sp, #4
   17c58:	pop	{pc}		; (ldr pc, [sp], #4)
   17c5c:	str	fp, [sp, #-8]!
   17c60:	str	lr, [sp, #4]
   17c64:	add	fp, sp, #4
   17c68:	sub	sp, sp, #40	; 0x28
   17c6c:	str	r0, [fp, #-32]	; 0xffffffe0
   17c70:	str	r1, [fp, #-36]	; 0xffffffdc
   17c74:	str	r2, [fp, #-40]	; 0xffffffd8
   17c78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c7c:	cmp	r3, #0
   17c80:	bne	17c88 <__assert_fail@plt+0x6664>
   17c84:	bl	115e8 <abort@plt>
   17c88:	sub	r2, fp, #24
   17c8c:	mov	r3, #0
   17c90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17c94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17c98:	bl	17664 <__assert_fail@plt+0x6040>
   17c9c:	str	r0, [fp, #-8]
   17ca0:	ldr	r3, [fp, #-8]
   17ca4:	cmp	r3, #0
   17ca8:	beq	17ccc <__assert_fail@plt+0x66a8>
   17cac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17cb0:	cmp	r3, #0
   17cb4:	beq	17cc4 <__assert_fail@plt+0x66a0>
   17cb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17cbc:	ldr	r2, [fp, #-8]
   17cc0:	str	r2, [r3]
   17cc4:	mov	r3, #0
   17cc8:	b	17ed0 <__assert_fail@plt+0x68ac>
   17ccc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17cd0:	ldr	r3, [r3, #12]
   17cd4:	vmov	s15, r3
   17cd8:	vcvt.f32.u32	s14, s15
   17cdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ce0:	ldr	r3, [r3, #20]
   17ce4:	vldr	s13, [r3, #8]
   17ce8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17cec:	ldr	r3, [r3, #8]
   17cf0:	vmov	s15, r3
   17cf4:	vcvt.f32.u32	s15, s15
   17cf8:	vmul.f32	s15, s13, s15
   17cfc:	vcmpe.f32	s14, s15
   17d00:	vmrs	APSR_nzcv, fpscr
   17d04:	ble	17e24 <__assert_fail@plt+0x6800>
   17d08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17d0c:	bl	16f18 <__assert_fail@plt+0x58f4>
   17d10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d14:	ldr	r3, [r3, #12]
   17d18:	vmov	s15, r3
   17d1c:	vcvt.f32.u32	s14, s15
   17d20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d24:	ldr	r3, [r3, #20]
   17d28:	vldr	s13, [r3, #8]
   17d2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d30:	ldr	r3, [r3, #8]
   17d34:	vmov	s15, r3
   17d38:	vcvt.f32.u32	s15, s15
   17d3c:	vmul.f32	s15, s13, s15
   17d40:	vcmpe.f32	s14, s15
   17d44:	vmrs	APSR_nzcv, fpscr
   17d48:	ble	17e24 <__assert_fail@plt+0x6800>
   17d4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d50:	ldr	r3, [r3, #20]
   17d54:	str	r3, [fp, #-12]
   17d58:	ldr	r3, [fp, #-12]
   17d5c:	ldrb	r3, [r3, #16]
   17d60:	cmp	r3, #0
   17d64:	beq	17d88 <__assert_fail@plt+0x6764>
   17d68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d6c:	ldr	r3, [r3, #8]
   17d70:	vmov	s15, r3
   17d74:	vcvt.f32.u32	s14, s15
   17d78:	ldr	r3, [fp, #-12]
   17d7c:	vldr	s15, [r3, #12]
   17d80:	vmul.f32	s15, s14, s15
   17d84:	b	17db0 <__assert_fail@plt+0x678c>
   17d88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17d8c:	ldr	r3, [r3, #8]
   17d90:	vmov	s15, r3
   17d94:	vcvt.f32.u32	s14, s15
   17d98:	ldr	r3, [fp, #-12]
   17d9c:	vldr	s15, [r3, #12]
   17da0:	vmul.f32	s14, s14, s15
   17da4:	ldr	r3, [fp, #-12]
   17da8:	vldr	s15, [r3, #8]
   17dac:	vmul.f32	s15, s14, s15
   17db0:	vstr	s15, [fp, #-16]
   17db4:	vldr	s15, [fp, #-16]
   17db8:	vldr	s14, [pc, #292]	; 17ee4 <__assert_fail@plt+0x68c0>
   17dbc:	vcmpe.f32	s15, s14
   17dc0:	vmrs	APSR_nzcv, fpscr
   17dc4:	blt	17dd0 <__assert_fail@plt+0x67ac>
   17dc8:	mvn	r3, #0
   17dcc:	b	17ed0 <__assert_fail@plt+0x68ac>
   17dd0:	vldr	s15, [fp, #-16]
   17dd4:	vcvt.u32.f32	s15, s15
   17dd8:	vmov	r1, s15
   17ddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17de0:	bl	17a28 <__assert_fail@plt+0x6404>
   17de4:	mov	r3, r0
   17de8:	eor	r3, r3, #1
   17dec:	uxtb	r3, r3
   17df0:	cmp	r3, #0
   17df4:	beq	17e00 <__assert_fail@plt+0x67dc>
   17df8:	mvn	r3, #0
   17dfc:	b	17ed0 <__assert_fail@plt+0x68ac>
   17e00:	sub	r2, fp, #24
   17e04:	mov	r3, #0
   17e08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17e0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e10:	bl	17664 <__assert_fail@plt+0x6040>
   17e14:	mov	r3, r0
   17e18:	cmp	r3, #0
   17e1c:	beq	17e24 <__assert_fail@plt+0x6800>
   17e20:	bl	115e8 <abort@plt>
   17e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e28:	ldr	r3, [r3]
   17e2c:	cmp	r3, #0
   17e30:	beq	17e98 <__assert_fail@plt+0x6874>
   17e34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e38:	bl	175ac <__assert_fail@plt+0x5f88>
   17e3c:	str	r0, [fp, #-20]	; 0xffffffec
   17e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e44:	cmp	r3, #0
   17e48:	bne	17e54 <__assert_fail@plt+0x6830>
   17e4c:	mvn	r3, #0
   17e50:	b	17ed0 <__assert_fail@plt+0x68ac>
   17e54:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e58:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17e5c:	str	r2, [r3]
   17e60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e64:	ldr	r2, [r3, #4]
   17e68:	ldr	r3, [fp, #-20]	; 0xffffffec
   17e6c:	str	r2, [r3, #4]
   17e70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e74:	ldr	r2, [fp, #-20]	; 0xffffffec
   17e78:	str	r2, [r3, #4]
   17e7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17e80:	ldr	r3, [r3, #16]
   17e84:	add	r2, r3, #1
   17e88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17e8c:	str	r2, [r3, #16]
   17e90:	mov	r3, #1
   17e94:	b	17ed0 <__assert_fail@plt+0x68ac>
   17e98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17ea0:	str	r2, [r3]
   17ea4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ea8:	ldr	r3, [r3, #16]
   17eac:	add	r2, r3, #1
   17eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17eb4:	str	r2, [r3, #16]
   17eb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ebc:	ldr	r3, [r3, #12]
   17ec0:	add	r2, r3, #1
   17ec4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ec8:	str	r2, [r3, #12]
   17ecc:	mov	r3, #1
   17ed0:	mov	r0, r3
   17ed4:	sub	sp, fp, #4
   17ed8:	ldr	fp, [sp]
   17edc:	add	sp, sp, #4
   17ee0:	pop	{pc}		; (ldr pc, [sp], #4)
   17ee4:	svcmi	0x00800000
   17ee8:	str	fp, [sp, #-8]!
   17eec:	str	lr, [sp, #4]
   17ef0:	add	fp, sp, #4
   17ef4:	sub	sp, sp, #16
   17ef8:	str	r0, [fp, #-16]
   17efc:	str	r1, [fp, #-20]	; 0xffffffec
   17f00:	sub	r3, fp, #12
   17f04:	mov	r2, r3
   17f08:	ldr	r1, [fp, #-20]	; 0xffffffec
   17f0c:	ldr	r0, [fp, #-16]
   17f10:	bl	17c5c <__assert_fail@plt+0x6638>
   17f14:	str	r0, [fp, #-8]
   17f18:	ldr	r3, [fp, #-8]
   17f1c:	cmn	r3, #1
   17f20:	beq	17f40 <__assert_fail@plt+0x691c>
   17f24:	ldr	r3, [fp, #-8]
   17f28:	cmp	r3, #0
   17f2c:	bne	17f38 <__assert_fail@plt+0x6914>
   17f30:	ldr	r3, [fp, #-12]
   17f34:	b	17f44 <__assert_fail@plt+0x6920>
   17f38:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f3c:	b	17f44 <__assert_fail@plt+0x6920>
   17f40:	mov	r3, #0
   17f44:	mov	r0, r3
   17f48:	sub	sp, fp, #4
   17f4c:	ldr	fp, [sp]
   17f50:	add	sp, sp, #4
   17f54:	pop	{pc}		; (ldr pc, [sp], #4)
   17f58:	str	fp, [sp, #-8]!
   17f5c:	str	lr, [sp, #4]
   17f60:	add	fp, sp, #4
   17f64:	sub	sp, sp, #32
   17f68:	str	r0, [fp, #-32]	; 0xffffffe0
   17f6c:	str	r1, [fp, #-36]	; 0xffffffdc
   17f70:	sub	r2, fp, #28
   17f74:	mov	r3, #1
   17f78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17f7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f80:	bl	17664 <__assert_fail@plt+0x6040>
   17f84:	str	r0, [fp, #-12]
   17f88:	ldr	r3, [fp, #-12]
   17f8c:	cmp	r3, #0
   17f90:	bne	17f9c <__assert_fail@plt+0x6978>
   17f94:	mov	r3, #0
   17f98:	b	1812c <__assert_fail@plt+0x6b08>
   17f9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fa0:	ldr	r3, [r3, #16]
   17fa4:	sub	r2, r3, #1
   17fa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fac:	str	r2, [r3, #16]
   17fb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17fb4:	ldr	r3, [r3]
   17fb8:	cmp	r3, #0
   17fbc:	bne	18128 <__assert_fail@plt+0x6b04>
   17fc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fc4:	ldr	r3, [r3, #12]
   17fc8:	sub	r2, r3, #1
   17fcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fd0:	str	r2, [r3, #12]
   17fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fd8:	ldr	r3, [r3, #12]
   17fdc:	vmov	s15, r3
   17fe0:	vcvt.f32.u32	s14, s15
   17fe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fe8:	ldr	r3, [r3, #20]
   17fec:	vldr	s13, [r3]
   17ff0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ff4:	ldr	r3, [r3, #8]
   17ff8:	vmov	s15, r3
   17ffc:	vcvt.f32.u32	s15, s15
   18000:	vmul.f32	s15, s13, s15
   18004:	vcmpe.f32	s14, s15
   18008:	vmrs	APSR_nzcv, fpscr
   1800c:	bpl	18128 <__assert_fail@plt+0x6b04>
   18010:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18014:	bl	16f18 <__assert_fail@plt+0x58f4>
   18018:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1801c:	ldr	r3, [r3, #12]
   18020:	vmov	s15, r3
   18024:	vcvt.f32.u32	s14, s15
   18028:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1802c:	ldr	r3, [r3, #20]
   18030:	vldr	s13, [r3]
   18034:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18038:	ldr	r3, [r3, #8]
   1803c:	vmov	s15, r3
   18040:	vcvt.f32.u32	s15, s15
   18044:	vmul.f32	s15, s13, s15
   18048:	vcmpe.f32	s14, s15
   1804c:	vmrs	APSR_nzcv, fpscr
   18050:	bpl	18128 <__assert_fail@plt+0x6b04>
   18054:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18058:	ldr	r3, [r3, #20]
   1805c:	str	r3, [fp, #-16]
   18060:	ldr	r3, [fp, #-16]
   18064:	ldrb	r3, [r3, #16]
   18068:	cmp	r3, #0
   1806c:	beq	18094 <__assert_fail@plt+0x6a70>
   18070:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18074:	ldr	r3, [r3, #8]
   18078:	vmov	s15, r3
   1807c:	vcvt.f32.u32	s14, s15
   18080:	ldr	r3, [fp, #-16]
   18084:	vldr	s15, [r3, #4]
   18088:	vmul.f32	s15, s14, s15
   1808c:	vcvt.u32.f32	s15, s15
   18090:	b	180c0 <__assert_fail@plt+0x6a9c>
   18094:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18098:	ldr	r3, [r3, #8]
   1809c:	vmov	s15, r3
   180a0:	vcvt.f32.u32	s14, s15
   180a4:	ldr	r3, [fp, #-16]
   180a8:	vldr	s15, [r3, #4]
   180ac:	vmul.f32	s14, s14, s15
   180b0:	ldr	r3, [fp, #-16]
   180b4:	vldr	s15, [r3, #8]
   180b8:	vmul.f32	s15, s14, s15
   180bc:	vcvt.u32.f32	s15, s15
   180c0:	vstr	s15, [fp, #-20]	; 0xffffffec
   180c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   180c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   180cc:	bl	17a28 <__assert_fail@plt+0x6404>
   180d0:	mov	r3, r0
   180d4:	eor	r3, r3, #1
   180d8:	uxtb	r3, r3
   180dc:	cmp	r3, #0
   180e0:	beq	18128 <__assert_fail@plt+0x6b04>
   180e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   180e8:	ldr	r3, [r3, #36]	; 0x24
   180ec:	str	r3, [fp, #-8]
   180f0:	b	18110 <__assert_fail@plt+0x6aec>
   180f4:	ldr	r3, [fp, #-8]
   180f8:	ldr	r3, [r3, #4]
   180fc:	str	r3, [fp, #-24]	; 0xffffffe8
   18100:	ldr	r0, [fp, #-8]
   18104:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   18108:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1810c:	str	r3, [fp, #-8]
   18110:	ldr	r3, [fp, #-8]
   18114:	cmp	r3, #0
   18118:	bne	180f4 <__assert_fail@plt+0x6ad0>
   1811c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18120:	mov	r2, #0
   18124:	str	r2, [r3, #36]	; 0x24
   18128:	ldr	r3, [fp, #-12]
   1812c:	mov	r0, r3
   18130:	sub	sp, fp, #4
   18134:	ldr	fp, [sp]
   18138:	add	sp, sp, #4
   1813c:	pop	{pc}		; (ldr pc, [sp], #4)
   18140:	str	fp, [sp, #-8]!
   18144:	str	lr, [sp, #4]
   18148:	add	fp, sp, #4
   1814c:	sub	sp, sp, #8
   18150:	str	r0, [fp, #-8]
   18154:	str	r1, [fp, #-12]
   18158:	ldr	r1, [fp, #-12]
   1815c:	ldr	r0, [fp, #-8]
   18160:	bl	17f58 <__assert_fail@plt+0x6934>
   18164:	mov	r3, r0
   18168:	mov	r0, r3
   1816c:	sub	sp, fp, #4
   18170:	ldr	fp, [sp]
   18174:	add	sp, sp, #4
   18178:	pop	{pc}		; (ldr pc, [sp], #4)
   1817c:	push	{fp}		; (str fp, [sp, #-4]!)
   18180:	add	fp, sp, #0
   18184:	sub	sp, sp, #20
   18188:	str	r0, [fp, #-16]
   1818c:	str	r1, [fp, #-20]	; 0xffffffec
   18190:	ldr	r3, [fp, #-16]
   18194:	mov	r2, #1
   18198:	strb	r2, [r3, #28]
   1819c:	ldr	r3, [fp, #-16]
   181a0:	mov	r2, #0
   181a4:	str	r2, [r3, #20]
   181a8:	ldr	r3, [fp, #-16]
   181ac:	mov	r2, #0
   181b0:	str	r2, [r3, #24]
   181b4:	mov	r3, #0
   181b8:	str	r3, [fp, #-8]
   181bc:	b	181dc <__assert_fail@plt+0x6bb8>
   181c0:	ldr	r3, [fp, #-16]
   181c4:	ldr	r2, [fp, #-8]
   181c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   181cc:	str	r1, [r3, r2, lsl #2]
   181d0:	ldr	r3, [fp, #-8]
   181d4:	add	r3, r3, #1
   181d8:	str	r3, [fp, #-8]
   181dc:	ldr	r3, [fp, #-8]
   181e0:	cmp	r3, #3
   181e4:	ble	181c0 <__assert_fail@plt+0x6b9c>
   181e8:	ldr	r3, [fp, #-16]
   181ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   181f0:	str	r2, [r3, #16]
   181f4:	nop	{0}
   181f8:	add	sp, fp, #0
   181fc:	pop	{fp}		; (ldr fp, [sp], #4)
   18200:	bx	lr
   18204:	push	{fp}		; (str fp, [sp, #-4]!)
   18208:	add	fp, sp, #0
   1820c:	sub	sp, sp, #12
   18210:	str	r0, [fp, #-8]
   18214:	ldr	r3, [fp, #-8]
   18218:	ldrb	r3, [r3, #28]
   1821c:	mov	r0, r3
   18220:	add	sp, fp, #0
   18224:	pop	{fp}		; (ldr fp, [sp], #4)
   18228:	bx	lr
   1822c:	push	{fp}		; (str fp, [sp, #-4]!)
   18230:	add	fp, sp, #0
   18234:	sub	sp, sp, #20
   18238:	str	r0, [fp, #-16]
   1823c:	str	r1, [fp, #-20]	; 0xffffffec
   18240:	ldr	r3, [fp, #-16]
   18244:	ldr	r3, [r3, #20]
   18248:	ldr	r2, [fp, #-16]
   1824c:	ldrb	r2, [r2, #28]
   18250:	eor	r2, r2, #1
   18254:	uxtb	r2, r2
   18258:	add	r3, r3, r2
   1825c:	and	r3, r3, #3
   18260:	str	r3, [fp, #-8]
   18264:	ldr	r3, [fp, #-16]
   18268:	ldr	r2, [fp, #-8]
   1826c:	ldr	r3, [r3, r2, lsl #2]
   18270:	str	r3, [fp, #-12]
   18274:	ldr	r3, [fp, #-16]
   18278:	ldr	r2, [fp, #-8]
   1827c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18280:	str	r1, [r3, r2, lsl #2]
   18284:	ldr	r3, [fp, #-16]
   18288:	ldr	r2, [fp, #-8]
   1828c:	str	r2, [r3, #20]
   18290:	ldr	r3, [fp, #-16]
   18294:	ldr	r3, [r3, #24]
   18298:	ldr	r2, [fp, #-8]
   1829c:	cmp	r2, r3
   182a0:	bne	182cc <__assert_fail@plt+0x6ca8>
   182a4:	ldr	r3, [fp, #-16]
   182a8:	ldr	r3, [r3, #24]
   182ac:	ldr	r2, [fp, #-16]
   182b0:	ldrb	r2, [r2, #28]
   182b4:	eor	r2, r2, #1
   182b8:	uxtb	r2, r2
   182bc:	add	r3, r3, r2
   182c0:	and	r2, r3, #3
   182c4:	ldr	r3, [fp, #-16]
   182c8:	str	r2, [r3, #24]
   182cc:	ldr	r3, [fp, #-16]
   182d0:	mov	r2, #0
   182d4:	strb	r2, [r3, #28]
   182d8:	ldr	r3, [fp, #-12]
   182dc:	mov	r0, r3
   182e0:	add	sp, fp, #0
   182e4:	pop	{fp}		; (ldr fp, [sp], #4)
   182e8:	bx	lr
   182ec:	str	fp, [sp, #-8]!
   182f0:	str	lr, [sp, #4]
   182f4:	add	fp, sp, #4
   182f8:	sub	sp, sp, #16
   182fc:	str	r0, [fp, #-16]
   18300:	ldr	r0, [fp, #-16]
   18304:	bl	18204 <__assert_fail@plt+0x6be0>
   18308:	mov	r3, r0
   1830c:	cmp	r3, #0
   18310:	beq	18318 <__assert_fail@plt+0x6cf4>
   18314:	bl	115e8 <abort@plt>
   18318:	ldr	r3, [fp, #-16]
   1831c:	ldr	r2, [r3, #20]
   18320:	ldr	r3, [fp, #-16]
   18324:	ldr	r3, [r3, r2, lsl #2]
   18328:	str	r3, [fp, #-8]
   1832c:	ldr	r3, [fp, #-16]
   18330:	ldr	r2, [r3, #20]
   18334:	ldr	r3, [fp, #-16]
   18338:	ldr	r1, [r3, #16]
   1833c:	ldr	r3, [fp, #-16]
   18340:	str	r1, [r3, r2, lsl #2]
   18344:	ldr	r3, [fp, #-16]
   18348:	ldr	r2, [r3, #20]
   1834c:	ldr	r3, [fp, #-16]
   18350:	ldr	r3, [r3, #24]
   18354:	cmp	r2, r3
   18358:	bne	1836c <__assert_fail@plt+0x6d48>
   1835c:	ldr	r3, [fp, #-16]
   18360:	mov	r2, #1
   18364:	strb	r2, [r3, #28]
   18368:	b	18384 <__assert_fail@plt+0x6d60>
   1836c:	ldr	r3, [fp, #-16]
   18370:	ldr	r3, [r3, #20]
   18374:	add	r3, r3, #3
   18378:	and	r2, r3, #3
   1837c:	ldr	r3, [fp, #-16]
   18380:	str	r2, [r3, #20]
   18384:	ldr	r3, [fp, #-8]
   18388:	mov	r0, r3
   1838c:	sub	sp, fp, #4
   18390:	ldr	fp, [sp]
   18394:	add	sp, sp, #4
   18398:	pop	{pc}		; (ldr pc, [sp], #4)
   1839c:	push	{r2, r3}
   183a0:	str	fp, [sp, #-8]!
   183a4:	str	lr, [sp, #4]
   183a8:	add	fp, sp, #4
   183ac:	sub	sp, sp, #16
   183b0:	str	r0, [fp, #-16]
   183b4:	str	r1, [fp, #-20]	; 0xffffffec
   183b8:	mov	r3, #0
   183bc:	str	r3, [fp, #-8]
   183c0:	ldr	r3, [fp, #4]
   183c4:	and	r3, r3, #64	; 0x40
   183c8:	cmp	r3, #0
   183cc:	beq	183ec <__assert_fail@plt+0x6dc8>
   183d0:	add	r3, fp, #8
   183d4:	str	r3, [fp, #-12]
   183d8:	ldr	r3, [fp, #-12]
   183dc:	add	r2, r3, #4
   183e0:	str	r2, [fp, #-12]
   183e4:	ldr	r3, [r3]
   183e8:	str	r3, [fp, #-8]
   183ec:	ldr	r3, [fp, #-8]
   183f0:	ldr	r2, [fp, #4]
   183f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   183f8:	ldr	r0, [fp, #-16]
   183fc:	bl	11498 <openat64@plt>
   18400:	mov	r3, r0
   18404:	mov	r0, r3
   18408:	bl	1ba8c <__assert_fail@plt+0xa468>
   1840c:	mov	r3, r0
   18410:	mov	r0, r3
   18414:	sub	sp, fp, #4
   18418:	ldr	fp, [sp]
   1841c:	ldr	lr, [sp, #4]
   18420:	add	sp, sp, #8
   18424:	add	sp, sp, #8
   18428:	bx	lr
   1842c:	str	fp, [sp, #-8]!
   18430:	str	lr, [sp, #4]
   18434:	add	fp, sp, #4
   18438:	sub	sp, sp, #32
   1843c:	str	r0, [fp, #-24]	; 0xffffffe8
   18440:	str	r1, [fp, #-28]	; 0xffffffe4
   18444:	str	r2, [fp, #-32]	; 0xffffffe0
   18448:	str	r3, [fp, #-36]	; 0xffffffdc
   1844c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18450:	orr	r3, r3, #540672	; 0x84000
   18454:	orr	r3, r3, #2304	; 0x900
   18458:	str	r3, [fp, #-8]
   1845c:	ldr	r2, [fp, #-8]
   18460:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18468:	bl	1839c <__assert_fail@plt+0x6d78>
   1846c:	str	r0, [fp, #-12]
   18470:	ldr	r3, [fp, #-12]
   18474:	cmp	r3, #0
   18478:	bge	18484 <__assert_fail@plt+0x6e60>
   1847c:	mov	r3, #0
   18480:	b	184d8 <__assert_fail@plt+0x6eb4>
   18484:	ldr	r0, [fp, #-12]
   18488:	bl	11570 <fdopendir@plt>
   1848c:	str	r0, [fp, #-16]
   18490:	ldr	r3, [fp, #-16]
   18494:	cmp	r3, #0
   18498:	beq	184ac <__assert_fail@plt+0x6e88>
   1849c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   184a0:	ldr	r2, [fp, #-12]
   184a4:	str	r2, [r3]
   184a8:	b	184d4 <__assert_fail@plt+0x6eb0>
   184ac:	bl	114bc <__errno_location@plt>
   184b0:	mov	r3, r0
   184b4:	ldr	r3, [r3]
   184b8:	str	r3, [fp, #-20]	; 0xffffffec
   184bc:	ldr	r0, [fp, #-12]
   184c0:	bl	115f4 <close@plt>
   184c4:	bl	114bc <__errno_location@plt>
   184c8:	mov	r2, r0
   184cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   184d0:	str	r3, [r2]
   184d4:	ldr	r3, [fp, #-16]
   184d8:	mov	r0, r3
   184dc:	sub	sp, fp, #4
   184e0:	ldr	fp, [sp]
   184e4:	add	sp, sp, #4
   184e8:	pop	{pc}		; (ldr pc, [sp], #4)
   184ec:	str	fp, [sp, #-8]!
   184f0:	str	lr, [sp, #4]
   184f4:	add	fp, sp, #4
   184f8:	sub	sp, sp, #16
   184fc:	str	r0, [fp, #-16]
   18500:	ldr	r3, [fp, #-16]
   18504:	cmp	r3, #0
   18508:	bne	18530 <__assert_fail@plt+0x6f0c>
   1850c:	movw	r3, #4544	; 0x11c0
   18510:	movt	r3, #3
   18514:	ldr	r3, [r3]
   18518:	mov	r2, #55	; 0x37
   1851c:	mov	r1, #1
   18520:	movw	r0, #748	; 0x2ec
   18524:	movt	r0, #2
   18528:	bl	11378 <fwrite@plt>
   1852c:	bl	115e8 <abort@plt>
   18530:	mov	r1, #47	; 0x2f
   18534:	ldr	r0, [fp, #-16]
   18538:	bl	11540 <strrchr@plt>
   1853c:	str	r0, [fp, #-8]
   18540:	ldr	r3, [fp, #-8]
   18544:	cmp	r3, #0
   18548:	beq	18558 <__assert_fail@plt+0x6f34>
   1854c:	ldr	r3, [fp, #-8]
   18550:	add	r3, r3, #1
   18554:	b	1855c <__assert_fail@plt+0x6f38>
   18558:	ldr	r3, [fp, #-16]
   1855c:	str	r3, [fp, #-12]
   18560:	ldr	r2, [fp, #-12]
   18564:	ldr	r3, [fp, #-16]
   18568:	sub	r3, r2, r3
   1856c:	cmp	r3, #6
   18570:	ble	185e0 <__assert_fail@plt+0x6fbc>
   18574:	ldr	r3, [fp, #-12]
   18578:	sub	r3, r3, #7
   1857c:	mov	r2, #7
   18580:	movw	r1, #804	; 0x324
   18584:	movt	r1, #2
   18588:	mov	r0, r3
   1858c:	bl	115dc <strncmp@plt>
   18590:	mov	r3, r0
   18594:	cmp	r3, #0
   18598:	bne	185e0 <__assert_fail@plt+0x6fbc>
   1859c:	ldr	r3, [fp, #-12]
   185a0:	str	r3, [fp, #-16]
   185a4:	mov	r2, #3
   185a8:	movw	r1, #812	; 0x32c
   185ac:	movt	r1, #2
   185b0:	ldr	r0, [fp, #-12]
   185b4:	bl	115dc <strncmp@plt>
   185b8:	mov	r3, r0
   185bc:	cmp	r3, #0
   185c0:	bne	185e0 <__assert_fail@plt+0x6fbc>
   185c4:	ldr	r3, [fp, #-12]
   185c8:	add	r3, r3, #3
   185cc:	str	r3, [fp, #-16]
   185d0:	movw	r3, #4528	; 0x11b0
   185d4:	movt	r3, #3
   185d8:	ldr	r2, [fp, #-16]
   185dc:	str	r2, [r3]
   185e0:	movw	r3, #4616	; 0x1208
   185e4:	movt	r3, #3
   185e8:	ldr	r2, [fp, #-16]
   185ec:	str	r2, [r3]
   185f0:	movw	r3, #4532	; 0x11b4
   185f4:	movt	r3, #3
   185f8:	ldr	r2, [fp, #-16]
   185fc:	str	r2, [r3]
   18600:	nop	{0}
   18604:	sub	sp, fp, #4
   18608:	ldr	fp, [sp]
   1860c:	add	sp, sp, #4
   18610:	pop	{pc}		; (ldr pc, [sp], #4)
   18614:	str	fp, [sp, #-8]!
   18618:	str	lr, [sp, #4]
   1861c:	add	fp, sp, #4
   18620:	sub	sp, sp, #16
   18624:	str	r0, [fp, #-16]
   18628:	bl	114bc <__errno_location@plt>
   1862c:	mov	r3, r0
   18630:	ldr	r3, [r3]
   18634:	str	r3, [fp, #-8]
   18638:	ldr	r3, [fp, #-16]
   1863c:	cmp	r3, #0
   18640:	beq	1864c <__assert_fail@plt+0x7028>
   18644:	ldr	r3, [fp, #-16]
   18648:	b	18654 <__assert_fail@plt+0x7030>
   1864c:	movw	r3, #4620	; 0x120c
   18650:	movt	r3, #3
   18654:	mov	r1, #48	; 0x30
   18658:	mov	r0, r3
   1865c:	bl	1ca7c <__assert_fail@plt+0xb458>
   18660:	mov	r3, r0
   18664:	str	r3, [fp, #-12]
   18668:	bl	114bc <__errno_location@plt>
   1866c:	mov	r2, r0
   18670:	ldr	r3, [fp, #-8]
   18674:	str	r3, [r2]
   18678:	ldr	r3, [fp, #-12]
   1867c:	mov	r0, r3
   18680:	sub	sp, fp, #4
   18684:	ldr	fp, [sp]
   18688:	add	sp, sp, #4
   1868c:	pop	{pc}		; (ldr pc, [sp], #4)
   18690:	push	{fp}		; (str fp, [sp, #-4]!)
   18694:	add	fp, sp, #0
   18698:	sub	sp, sp, #12
   1869c:	str	r0, [fp, #-8]
   186a0:	ldr	r3, [fp, #-8]
   186a4:	cmp	r3, #0
   186a8:	beq	186b4 <__assert_fail@plt+0x7090>
   186ac:	ldr	r3, [fp, #-8]
   186b0:	b	186bc <__assert_fail@plt+0x7098>
   186b4:	movw	r3, #4620	; 0x120c
   186b8:	movt	r3, #3
   186bc:	ldr	r3, [r3]
   186c0:	mov	r0, r3
   186c4:	add	sp, fp, #0
   186c8:	pop	{fp}		; (ldr fp, [sp], #4)
   186cc:	bx	lr
   186d0:	push	{fp}		; (str fp, [sp, #-4]!)
   186d4:	add	fp, sp, #0
   186d8:	sub	sp, sp, #12
   186dc:	str	r0, [fp, #-8]
   186e0:	str	r1, [fp, #-12]
   186e4:	ldr	r3, [fp, #-8]
   186e8:	cmp	r3, #0
   186ec:	beq	186f8 <__assert_fail@plt+0x70d4>
   186f0:	ldr	r3, [fp, #-8]
   186f4:	b	18700 <__assert_fail@plt+0x70dc>
   186f8:	movw	r3, #4620	; 0x120c
   186fc:	movt	r3, #3
   18700:	ldr	r2, [fp, #-12]
   18704:	str	r2, [r3]
   18708:	nop	{0}
   1870c:	add	sp, fp, #0
   18710:	pop	{fp}		; (ldr fp, [sp], #4)
   18714:	bx	lr
   18718:	push	{fp}		; (str fp, [sp, #-4]!)
   1871c:	add	fp, sp, #0
   18720:	sub	sp, sp, #36	; 0x24
   18724:	str	r0, [fp, #-24]	; 0xffffffe8
   18728:	mov	r3, r1
   1872c:	str	r2, [fp, #-32]	; 0xffffffe0
   18730:	strb	r3, [fp, #-25]	; 0xffffffe7
   18734:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   18738:	strb	r3, [fp, #-5]
   1873c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18740:	cmp	r3, #0
   18744:	beq	18750 <__assert_fail@plt+0x712c>
   18748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1874c:	b	18758 <__assert_fail@plt+0x7134>
   18750:	movw	r3, #4620	; 0x120c
   18754:	movt	r3, #3
   18758:	add	r2, r3, #8
   1875c:	ldrb	r3, [fp, #-5]
   18760:	lsr	r3, r3, #5
   18764:	uxtb	r3, r3
   18768:	lsl	r3, r3, #2
   1876c:	add	r3, r2, r3
   18770:	str	r3, [fp, #-12]
   18774:	ldrb	r3, [fp, #-5]
   18778:	and	r3, r3, #31
   1877c:	str	r3, [fp, #-16]
   18780:	ldr	r3, [fp, #-12]
   18784:	ldr	r2, [r3]
   18788:	ldr	r3, [fp, #-16]
   1878c:	lsr	r3, r2, r3
   18790:	and	r3, r3, #1
   18794:	str	r3, [fp, #-20]	; 0xffffffec
   18798:	ldr	r3, [fp, #-12]
   1879c:	ldr	r3, [r3]
   187a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   187a4:	and	r1, r2, #1
   187a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   187ac:	eor	r1, r1, r2
   187b0:	ldr	r2, [fp, #-16]
   187b4:	lsl	r2, r1, r2
   187b8:	eor	r2, r2, r3
   187bc:	ldr	r3, [fp, #-12]
   187c0:	str	r2, [r3]
   187c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   187c8:	mov	r0, r3
   187cc:	add	sp, fp, #0
   187d0:	pop	{fp}		; (ldr fp, [sp], #4)
   187d4:	bx	lr
   187d8:	push	{fp}		; (str fp, [sp, #-4]!)
   187dc:	add	fp, sp, #0
   187e0:	sub	sp, sp, #20
   187e4:	str	r0, [fp, #-16]
   187e8:	str	r1, [fp, #-20]	; 0xffffffec
   187ec:	ldr	r3, [fp, #-16]
   187f0:	cmp	r3, #0
   187f4:	bne	18804 <__assert_fail@plt+0x71e0>
   187f8:	movw	r3, #4620	; 0x120c
   187fc:	movt	r3, #3
   18800:	str	r3, [fp, #-16]
   18804:	ldr	r3, [fp, #-16]
   18808:	ldr	r3, [r3, #4]
   1880c:	str	r3, [fp, #-8]
   18810:	ldr	r3, [fp, #-16]
   18814:	ldr	r2, [fp, #-20]	; 0xffffffec
   18818:	str	r2, [r3, #4]
   1881c:	ldr	r3, [fp, #-8]
   18820:	mov	r0, r3
   18824:	add	sp, fp, #0
   18828:	pop	{fp}		; (ldr fp, [sp], #4)
   1882c:	bx	lr
   18830:	str	fp, [sp, #-8]!
   18834:	str	lr, [sp, #4]
   18838:	add	fp, sp, #4
   1883c:	sub	sp, sp, #16
   18840:	str	r0, [fp, #-8]
   18844:	str	r1, [fp, #-12]
   18848:	str	r2, [fp, #-16]
   1884c:	ldr	r3, [fp, #-8]
   18850:	cmp	r3, #0
   18854:	bne	18864 <__assert_fail@plt+0x7240>
   18858:	movw	r3, #4620	; 0x120c
   1885c:	movt	r3, #3
   18860:	str	r3, [fp, #-8]
   18864:	ldr	r3, [fp, #-8]
   18868:	mov	r2, #10
   1886c:	str	r2, [r3]
   18870:	ldr	r3, [fp, #-12]
   18874:	cmp	r3, #0
   18878:	beq	18888 <__assert_fail@plt+0x7264>
   1887c:	ldr	r3, [fp, #-16]
   18880:	cmp	r3, #0
   18884:	bne	1888c <__assert_fail@plt+0x7268>
   18888:	bl	115e8 <abort@plt>
   1888c:	ldr	r3, [fp, #-8]
   18890:	ldr	r2, [fp, #-12]
   18894:	str	r2, [r3, #40]	; 0x28
   18898:	ldr	r3, [fp, #-8]
   1889c:	ldr	r2, [fp, #-16]
   188a0:	str	r2, [r3, #44]	; 0x2c
   188a4:	nop	{0}
   188a8:	sub	sp, fp, #4
   188ac:	ldr	fp, [sp]
   188b0:	add	sp, sp, #4
   188b4:	pop	{pc}		; (ldr pc, [sp], #4)
   188b8:	str	fp, [sp, #-8]!
   188bc:	str	lr, [sp, #4]
   188c0:	add	fp, sp, #4
   188c4:	sub	sp, sp, #56	; 0x38
   188c8:	str	r0, [fp, #-56]	; 0xffffffc8
   188cc:	str	r1, [fp, #-60]	; 0xffffffc4
   188d0:	sub	r1, fp, #52	; 0x34
   188d4:	mov	r2, #0
   188d8:	mov	r3, #0
   188dc:	strd	r2, [r1]
   188e0:	strd	r2, [r1, #8]
   188e4:	strd	r2, [r1, #16]
   188e8:	strd	r2, [r1, #24]
   188ec:	strd	r2, [r1, #32]
   188f0:	strd	r2, [r1, #40]	; 0x28
   188f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   188f8:	cmp	r3, #10
   188fc:	bne	18904 <__assert_fail@plt+0x72e0>
   18900:	bl	115e8 <abort@plt>
   18904:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18908:	str	r3, [fp, #-52]	; 0xffffffcc
   1890c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18910:	mov	r2, r3
   18914:	sub	r3, fp, #52	; 0x34
   18918:	ldrd	r0, [r3]
   1891c:	strd	r0, [r2]
   18920:	ldrd	r0, [r3, #8]
   18924:	strd	r0, [r2, #8]
   18928:	ldrd	r0, [r3, #16]
   1892c:	strd	r0, [r2, #16]
   18930:	ldrd	r0, [r3, #24]
   18934:	strd	r0, [r2, #24]
   18938:	ldrd	r0, [r3, #32]
   1893c:	strd	r0, [r2, #32]
   18940:	ldrd	r0, [r3, #40]	; 0x28
   18944:	strd	r0, [r2, #40]	; 0x28
   18948:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1894c:	sub	sp, fp, #4
   18950:	ldr	fp, [sp]
   18954:	add	sp, sp, #4
   18958:	pop	{pc}		; (ldr pc, [sp], #4)
   1895c:	str	fp, [sp, #-8]!
   18960:	str	lr, [sp, #4]
   18964:	add	fp, sp, #4
   18968:	sub	sp, sp, #16
   1896c:	str	r0, [fp, #-16]
   18970:	str	r1, [fp, #-20]	; 0xffffffec
   18974:	ldr	r0, [fp, #-16]
   18978:	bl	11474 <gettext@plt>
   1897c:	str	r0, [fp, #-8]
   18980:	ldr	r2, [fp, #-8]
   18984:	ldr	r3, [fp, #-16]
   18988:	cmp	r2, r3
   1898c:	beq	18998 <__assert_fail@plt+0x7374>
   18990:	ldr	r3, [fp, #-8]
   18994:	b	18a48 <__assert_fail@plt+0x7424>
   18998:	bl	1e0d8 <__assert_fail@plt+0xcab4>
   1899c:	str	r0, [fp, #-12]
   189a0:	movw	r1, #1004	; 0x3ec
   189a4:	movt	r1, #2
   189a8:	ldr	r0, [fp, #-12]
   189ac:	bl	1d440 <__assert_fail@plt+0xbe1c>
   189b0:	mov	r3, r0
   189b4:	cmp	r3, #0
   189b8:	bne	189e4 <__assert_fail@plt+0x73c0>
   189bc:	ldr	r3, [fp, #-16]
   189c0:	ldrb	r3, [r3]
   189c4:	cmp	r3, #96	; 0x60
   189c8:	bne	189d8 <__assert_fail@plt+0x73b4>
   189cc:	movw	r3, #1012	; 0x3f4
   189d0:	movt	r3, #2
   189d4:	b	18a48 <__assert_fail@plt+0x7424>
   189d8:	movw	r3, #1016	; 0x3f8
   189dc:	movt	r3, #2
   189e0:	b	18a48 <__assert_fail@plt+0x7424>
   189e4:	movw	r1, #1020	; 0x3fc
   189e8:	movt	r1, #2
   189ec:	ldr	r0, [fp, #-12]
   189f0:	bl	1d440 <__assert_fail@plt+0xbe1c>
   189f4:	mov	r3, r0
   189f8:	cmp	r3, #0
   189fc:	bne	18a28 <__assert_fail@plt+0x7404>
   18a00:	ldr	r3, [fp, #-16]
   18a04:	ldrb	r3, [r3]
   18a08:	cmp	r3, #96	; 0x60
   18a0c:	bne	18a1c <__assert_fail@plt+0x73f8>
   18a10:	movw	r3, #1028	; 0x404
   18a14:	movt	r3, #2
   18a18:	b	18a48 <__assert_fail@plt+0x7424>
   18a1c:	movw	r3, #1032	; 0x408
   18a20:	movt	r3, #2
   18a24:	b	18a48 <__assert_fail@plt+0x7424>
   18a28:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a2c:	cmp	r3, #9
   18a30:	bne	18a40 <__assert_fail@plt+0x741c>
   18a34:	movw	r3, #1036	; 0x40c
   18a38:	movt	r3, #2
   18a3c:	b	18a48 <__assert_fail@plt+0x7424>
   18a40:	movw	r3, #1040	; 0x410
   18a44:	movt	r3, #2
   18a48:	mov	r0, r3
   18a4c:	sub	sp, fp, #4
   18a50:	ldr	fp, [sp]
   18a54:	add	sp, sp, #4
   18a58:	pop	{pc}		; (ldr pc, [sp], #4)
   18a5c:	str	r4, [sp, #-12]!
   18a60:	str	fp, [sp, #4]
   18a64:	str	lr, [sp, #8]
   18a68:	add	fp, sp, #8
   18a6c:	sub	sp, sp, #116	; 0x74
   18a70:	str	r0, [fp, #-88]	; 0xffffffa8
   18a74:	str	r1, [fp, #-92]	; 0xffffffa4
   18a78:	str	r2, [fp, #-96]	; 0xffffffa0
   18a7c:	str	r3, [fp, #-100]	; 0xffffff9c
   18a80:	mov	r3, #0
   18a84:	str	r3, [fp, #-20]	; 0xffffffec
   18a88:	mov	r3, #0
   18a8c:	str	r3, [fp, #-24]	; 0xffffffe8
   18a90:	mov	r3, #0
   18a94:	str	r3, [fp, #-28]	; 0xffffffe4
   18a98:	mov	r3, #0
   18a9c:	str	r3, [fp, #-32]	; 0xffffffe0
   18aa0:	mov	r3, #0
   18aa4:	strb	r3, [fp, #-33]	; 0xffffffdf
   18aa8:	bl	11390 <__ctype_get_mb_cur_max@plt>
   18aac:	mov	r3, r0
   18ab0:	cmp	r3, #1
   18ab4:	moveq	r3, #1
   18ab8:	movne	r3, #0
   18abc:	strb	r3, [fp, #-57]	; 0xffffffc7
   18ac0:	ldr	r3, [fp, #8]
   18ac4:	and	r3, r3, #2
   18ac8:	cmp	r3, #0
   18acc:	movne	r3, #1
   18ad0:	moveq	r3, #0
   18ad4:	strb	r3, [fp, #-34]	; 0xffffffde
   18ad8:	mov	r3, #0
   18adc:	strb	r3, [fp, #-35]	; 0xffffffdd
   18ae0:	mov	r3, #0
   18ae4:	strb	r3, [fp, #-36]	; 0xffffffdc
   18ae8:	mov	r3, #1
   18aec:	strb	r3, [fp, #-37]	; 0xffffffdb
   18af0:	ldr	r3, [fp, #4]
   18af4:	cmp	r3, #10
   18af8:	ldrls	pc, [pc, r3, lsl #2]
   18afc:	b	18d14 <__assert_fail@plt+0x76f0>
   18b00:	andeq	r8, r1, r8, lsl #26
   18b04:	andeq	r8, r1, r0, lsl #25
   18b08:	andeq	r8, r1, r4, lsr #25
   18b0c:	andeq	r8, r1, r8, ror ip
   18b10:	andeq	r8, r1, r8, lsl #25
   18b14:	andeq	r8, r1, ip, lsr fp
   18b18:	andeq	r8, r1, ip, lsr #22
   18b1c:	andeq	r8, r1, r0, lsr #23
   18b20:			; <UNDEFINED> instruction: 0x00018bb4
   18b24:			; <UNDEFINED> instruction: 0x00018bb4
   18b28:			; <UNDEFINED> instruction: 0x00018bb4
   18b2c:	mov	r3, #5
   18b30:	str	r3, [fp, #4]
   18b34:	mov	r3, #1
   18b38:	strb	r3, [fp, #-34]	; 0xffffffde
   18b3c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18b40:	eor	r3, r3, #1
   18b44:	uxtb	r3, r3
   18b48:	cmp	r3, #0
   18b4c:	beq	18b80 <__assert_fail@plt+0x755c>
   18b50:	ldr	r2, [fp, #-20]	; 0xffffffec
   18b54:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18b58:	cmp	r2, r3
   18b5c:	bcs	18b74 <__assert_fail@plt+0x7550>
   18b60:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18b64:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b68:	add	r3, r2, r3
   18b6c:	mov	r2, #34	; 0x22
   18b70:	strb	r2, [r3]
   18b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b78:	add	r3, r3, #1
   18b7c:	str	r3, [fp, #-20]	; 0xffffffec
   18b80:	mov	r3, #1
   18b84:	strb	r3, [fp, #-33]	; 0xffffffdf
   18b88:	movw	r3, #1036	; 0x40c
   18b8c:	movt	r3, #2
   18b90:	str	r3, [fp, #-28]	; 0xffffffe4
   18b94:	mov	r3, #1
   18b98:	str	r3, [fp, #-32]	; 0xffffffe0
   18b9c:	b	18d18 <__assert_fail@plt+0x76f4>
   18ba0:	mov	r3, #1
   18ba4:	strb	r3, [fp, #-33]	; 0xffffffdf
   18ba8:	mov	r3, #0
   18bac:	strb	r3, [fp, #-34]	; 0xffffffde
   18bb0:	b	18d18 <__assert_fail@plt+0x76f4>
   18bb4:	ldr	r3, [fp, #4]
   18bb8:	cmp	r3, #10
   18bbc:	beq	18be8 <__assert_fail@plt+0x75c4>
   18bc0:	ldr	r1, [fp, #4]
   18bc4:	movw	r0, #1044	; 0x414
   18bc8:	movt	r0, #2
   18bcc:	bl	1895c <__assert_fail@plt+0x7338>
   18bd0:	str	r0, [fp, #16]
   18bd4:	ldr	r1, [fp, #4]
   18bd8:	movw	r0, #1040	; 0x410
   18bdc:	movt	r0, #2
   18be0:	bl	1895c <__assert_fail@plt+0x7338>
   18be4:	str	r0, [fp, #20]
   18be8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18bec:	eor	r3, r3, #1
   18bf0:	uxtb	r3, r3
   18bf4:	cmp	r3, #0
   18bf8:	beq	18c58 <__assert_fail@plt+0x7634>
   18bfc:	ldr	r3, [fp, #16]
   18c00:	str	r3, [fp, #-28]	; 0xffffffe4
   18c04:	b	18c48 <__assert_fail@plt+0x7624>
   18c08:	ldr	r2, [fp, #-20]	; 0xffffffec
   18c0c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18c10:	cmp	r2, r3
   18c14:	bcs	18c30 <__assert_fail@plt+0x760c>
   18c18:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18c1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c20:	add	r3, r2, r3
   18c24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18c28:	ldrb	r2, [r2]
   18c2c:	strb	r2, [r3]
   18c30:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c34:	add	r3, r3, #1
   18c38:	str	r3, [fp, #-20]	; 0xffffffec
   18c3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18c40:	add	r3, r3, #1
   18c44:	str	r3, [fp, #-28]	; 0xffffffe4
   18c48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18c4c:	ldrb	r3, [r3]
   18c50:	cmp	r3, #0
   18c54:	bne	18c08 <__assert_fail@plt+0x75e4>
   18c58:	mov	r3, #1
   18c5c:	strb	r3, [fp, #-33]	; 0xffffffdf
   18c60:	ldr	r3, [fp, #20]
   18c64:	str	r3, [fp, #-28]	; 0xffffffe4
   18c68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18c6c:	bl	1148c <strlen@plt>
   18c70:	str	r0, [fp, #-32]	; 0xffffffe0
   18c74:	b	18d18 <__assert_fail@plt+0x76f4>
   18c78:	mov	r3, #1
   18c7c:	strb	r3, [fp, #-33]	; 0xffffffdf
   18c80:	mov	r3, #1
   18c84:	strb	r3, [fp, #-34]	; 0xffffffde
   18c88:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18c8c:	eor	r3, r3, #1
   18c90:	uxtb	r3, r3
   18c94:	cmp	r3, #0
   18c98:	beq	18ca4 <__assert_fail@plt+0x7680>
   18c9c:	mov	r3, #1
   18ca0:	strb	r3, [fp, #-33]	; 0xffffffdf
   18ca4:	mov	r3, #2
   18ca8:	str	r3, [fp, #4]
   18cac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18cb0:	eor	r3, r3, #1
   18cb4:	uxtb	r3, r3
   18cb8:	cmp	r3, #0
   18cbc:	beq	18cf0 <__assert_fail@plt+0x76cc>
   18cc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   18cc4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18cc8:	cmp	r2, r3
   18ccc:	bcs	18ce4 <__assert_fail@plt+0x76c0>
   18cd0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18cd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18cd8:	add	r3, r2, r3
   18cdc:	mov	r2, #39	; 0x27
   18ce0:	strb	r2, [r3]
   18ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ce8:	add	r3, r3, #1
   18cec:	str	r3, [fp, #-20]	; 0xffffffec
   18cf0:	movw	r3, #1040	; 0x410
   18cf4:	movt	r3, #2
   18cf8:	str	r3, [fp, #-28]	; 0xffffffe4
   18cfc:	mov	r3, #1
   18d00:	str	r3, [fp, #-32]	; 0xffffffe0
   18d04:	b	18d18 <__assert_fail@plt+0x76f4>
   18d08:	mov	r3, #0
   18d0c:	strb	r3, [fp, #-34]	; 0xffffffde
   18d10:	b	18d18 <__assert_fail@plt+0x76f4>
   18d14:	bl	115e8 <abort@plt>
   18d18:	mov	r3, #0
   18d1c:	str	r3, [fp, #-16]
   18d20:	b	19ebc <__assert_fail@plt+0x8898>
   18d24:	mov	r3, #0
   18d28:	strb	r3, [fp, #-40]	; 0xffffffd8
   18d2c:	mov	r3, #0
   18d30:	strb	r3, [fp, #-41]	; 0xffffffd7
   18d34:	mov	r3, #0
   18d38:	strb	r3, [fp, #-42]	; 0xffffffd6
   18d3c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   18d40:	cmp	r3, #0
   18d44:	beq	18de0 <__assert_fail@plt+0x77bc>
   18d48:	ldr	r3, [fp, #4]
   18d4c:	cmp	r3, #2
   18d50:	beq	18de0 <__assert_fail@plt+0x77bc>
   18d54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18d58:	cmp	r3, #0
   18d5c:	beq	18de0 <__assert_fail@plt+0x77bc>
   18d60:	ldr	r2, [fp, #-16]
   18d64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18d68:	add	r4, r2, r3
   18d6c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18d70:	cmn	r3, #1
   18d74:	bne	18d98 <__assert_fail@plt+0x7774>
   18d78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18d7c:	cmp	r3, #1
   18d80:	bls	18d98 <__assert_fail@plt+0x7774>
   18d84:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18d88:	bl	1148c <strlen@plt>
   18d8c:	str	r0, [fp, #-100]	; 0xffffff9c
   18d90:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18d94:	b	18d9c <__assert_fail@plt+0x7778>
   18d98:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18d9c:	cmp	r3, r4
   18da0:	bcc	18de0 <__assert_fail@plt+0x77bc>
   18da4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18da8:	ldr	r3, [fp, #-16]
   18dac:	add	r3, r2, r3
   18db0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18db4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18db8:	mov	r0, r3
   18dbc:	bl	112f4 <memcmp@plt>
   18dc0:	mov	r3, r0
   18dc4:	cmp	r3, #0
   18dc8:	bne	18de0 <__assert_fail@plt+0x77bc>
   18dcc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   18dd0:	cmp	r3, #0
   18dd4:	bne	1a078 <__assert_fail@plt+0x8a54>
   18dd8:	mov	r3, #1
   18ddc:	strb	r3, [fp, #-40]	; 0xffffffd8
   18de0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18de4:	ldr	r3, [fp, #-16]
   18de8:	add	r3, r2, r3
   18dec:	ldrb	r3, [r3]
   18df0:	strb	r3, [fp, #-38]	; 0xffffffda
   18df4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   18df8:	cmp	r3, #126	; 0x7e
   18dfc:	ldrls	pc, [pc, r3, lsl #2]
   18e00:	b	19638 <__assert_fail@plt+0x8014>
   18e04:	andeq	r9, r1, r0
   18e08:	andeq	r9, r1, r8, lsr r6
   18e0c:	andeq	r9, r1, r8, lsr r6
   18e10:	andeq	r9, r1, r8, lsr r6
   18e14:	andeq	r9, r1, r8, lsr r6
   18e18:	andeq	r9, r1, r8, lsr r6
   18e1c:	andeq	r9, r1, r8, lsr r6
   18e20:	strdeq	r9, [r1], -r4
   18e24:	andeq	r9, r1, r0, lsl #8
   18e28:	andeq	r9, r1, r0, lsr r4
   18e2c:	andeq	r9, r1, r8, lsl r4
   18e30:	andeq	r9, r1, ip, lsr r4
   18e34:	andeq	r9, r1, ip, lsl #8
   18e38:	andeq	r9, r1, r4, lsr #8
   18e3c:	andeq	r9, r1, r8, lsr r6
   18e40:	andeq	r9, r1, r8, lsr r6
   18e44:	andeq	r9, r1, r8, lsr r6
   18e48:	andeq	r9, r1, r8, lsr r6
   18e4c:	andeq	r9, r1, r8, lsr r6
   18e50:	andeq	r9, r1, r8, lsr r6
   18e54:	andeq	r9, r1, r8, lsr r6
   18e58:	andeq	r9, r1, r8, lsr r6
   18e5c:	andeq	r9, r1, r8, lsr r6
   18e60:	andeq	r9, r1, r8, lsr r6
   18e64:	andeq	r9, r1, r8, lsr r6
   18e68:	andeq	r9, r1, r8, lsr r6
   18e6c:	andeq	r9, r1, r8, lsr r6
   18e70:	andeq	r9, r1, r8, lsr r6
   18e74:	andeq	r9, r1, r8, lsr r6
   18e78:	andeq	r9, r1, r8, lsr r6
   18e7c:	andeq	r9, r1, r8, lsr r6
   18e80:	andeq	r9, r1, r8, lsr r6
   18e84:	andeq	r9, r1, ip, lsl r5
   18e88:	andeq	r9, r1, r4, lsr #10
   18e8c:	andeq	r9, r1, r4, lsr #10
   18e90:	andeq	r9, r1, r0, lsl r5
   18e94:	andeq	r9, r1, r4, lsr #10
   18e98:	andeq	r9, r1, ip, lsr #12
   18e9c:	andeq	r9, r1, r4, lsr #10
   18ea0:	andeq	r9, r1, r0, asr #10
   18ea4:	andeq	r9, r1, r4, lsr #10
   18ea8:	andeq	r9, r1, r4, lsr #10
   18eac:	andeq	r9, r1, r4, lsr #10
   18eb0:	andeq	r9, r1, ip, lsr #12
   18eb4:	andeq	r9, r1, ip, lsr #12
   18eb8:	andeq	r9, r1, ip, lsr #12
   18ebc:	andeq	r9, r1, ip, lsr #12
   18ec0:	andeq	r9, r1, ip, lsr #12
   18ec4:	andeq	r9, r1, ip, lsr #12
   18ec8:	andeq	r9, r1, ip, lsr #12
   18ecc:	andeq	r9, r1, ip, lsr #12
   18ed0:	andeq	r9, r1, ip, lsr #12
   18ed4:	andeq	r9, r1, ip, lsr #12
   18ed8:	andeq	r9, r1, ip, lsr #12
   18edc:	andeq	r9, r1, ip, lsr #12
   18ee0:	andeq	r9, r1, ip, lsr #12
   18ee4:	andeq	r9, r1, ip, lsr #12
   18ee8:	andeq	r9, r1, ip, lsr #12
   18eec:	andeq	r9, r1, ip, lsr #12
   18ef0:	andeq	r9, r1, r4, lsr #10
   18ef4:	andeq	r9, r1, r4, lsr #10
   18ef8:	andeq	r9, r1, r4, lsr #10
   18efc:	andeq	r9, r1, r4, lsr #10
   18f00:	andeq	r9, r1, r0, ror #3
   18f04:	andeq	r9, r1, r8, lsr r6
   18f08:	andeq	r9, r1, ip, lsr #12
   18f0c:	andeq	r9, r1, ip, lsr #12
   18f10:	andeq	r9, r1, ip, lsr #12
   18f14:	andeq	r9, r1, ip, lsr #12
   18f18:	andeq	r9, r1, ip, lsr #12
   18f1c:	andeq	r9, r1, ip, lsr #12
   18f20:	andeq	r9, r1, ip, lsr #12
   18f24:	andeq	r9, r1, ip, lsr #12
   18f28:	andeq	r9, r1, ip, lsr #12
   18f2c:	andeq	r9, r1, ip, lsr #12
   18f30:	andeq	r9, r1, ip, lsr #12
   18f34:	andeq	r9, r1, ip, lsr #12
   18f38:	andeq	r9, r1, ip, lsr #12
   18f3c:	andeq	r9, r1, ip, lsr #12
   18f40:	andeq	r9, r1, ip, lsr #12
   18f44:	andeq	r9, r1, ip, lsr #12
   18f48:	andeq	r9, r1, ip, lsr #12
   18f4c:	andeq	r9, r1, ip, lsr #12
   18f50:	andeq	r9, r1, ip, lsr #12
   18f54:	andeq	r9, r1, ip, lsr #12
   18f58:	andeq	r9, r1, ip, lsr #12
   18f5c:	andeq	r9, r1, ip, lsr #12
   18f60:	andeq	r9, r1, ip, lsr #12
   18f64:	andeq	r9, r1, ip, lsr #12
   18f68:	andeq	r9, r1, ip, lsr #12
   18f6c:	andeq	r9, r1, ip, lsr #12
   18f70:	andeq	r9, r1, r4, lsr #10
   18f74:	andeq	r9, r1, r8, asr #8
   18f78:	andeq	r9, r1, ip, lsr #12
   18f7c:	andeq	r9, r1, r4, lsr #10
   18f80:	andeq	r9, r1, ip, lsr #12
   18f84:	andeq	r9, r1, r4, lsr #10
   18f88:	andeq	r9, r1, ip, lsr #12
   18f8c:	andeq	r9, r1, ip, lsr #12
   18f90:	andeq	r9, r1, ip, lsr #12
   18f94:	andeq	r9, r1, ip, lsr #12
   18f98:	andeq	r9, r1, ip, lsr #12
   18f9c:	andeq	r9, r1, ip, lsr #12
   18fa0:	andeq	r9, r1, ip, lsr #12
   18fa4:	andeq	r9, r1, ip, lsr #12
   18fa8:	andeq	r9, r1, ip, lsr #12
   18fac:	andeq	r9, r1, ip, lsr #12
   18fb0:	andeq	r9, r1, ip, lsr #12
   18fb4:	andeq	r9, r1, ip, lsr #12
   18fb8:	andeq	r9, r1, ip, lsr #12
   18fbc:	andeq	r9, r1, ip, lsr #12
   18fc0:	andeq	r9, r1, ip, lsr #12
   18fc4:	andeq	r9, r1, ip, lsr #12
   18fc8:	andeq	r9, r1, ip, lsr #12
   18fcc:	andeq	r9, r1, ip, lsr #12
   18fd0:	andeq	r9, r1, ip, lsr #12
   18fd4:	andeq	r9, r1, ip, lsr #12
   18fd8:	andeq	r9, r1, ip, lsr #12
   18fdc:	andeq	r9, r1, ip, lsr #12
   18fe0:	andeq	r9, r1, ip, lsr #12
   18fe4:	andeq	r9, r1, ip, lsr #12
   18fe8:	andeq	r9, r1, ip, lsr #12
   18fec:	andeq	r9, r1, ip, lsr #12
   18ff0:	andeq	r9, r1, r8, asr #9
   18ff4:	andeq	r9, r1, r4, lsr #10
   18ff8:	andeq	r9, r1, r8, asr #9
   18ffc:	andeq	r9, r1, r0, lsl r5
   19000:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19004:	cmp	r3, #0
   19008:	beq	191cc <__assert_fail@plt+0x7ba8>
   1900c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19010:	cmp	r3, #0
   19014:	bne	1a080 <__assert_fail@plt+0x8a5c>
   19018:	mov	r3, #1
   1901c:	strb	r3, [fp, #-41]	; 0xffffffd7
   19020:	ldr	r3, [fp, #4]
   19024:	cmp	r3, #2
   19028:	bne	190d8 <__assert_fail@plt+0x7ab4>
   1902c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   19030:	eor	r3, r3, #1
   19034:	uxtb	r3, r3
   19038:	cmp	r3, #0
   1903c:	beq	190d8 <__assert_fail@plt+0x7ab4>
   19040:	ldr	r2, [fp, #-20]	; 0xffffffec
   19044:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19048:	cmp	r2, r3
   1904c:	bcs	19064 <__assert_fail@plt+0x7a40>
   19050:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19054:	ldr	r3, [fp, #-20]	; 0xffffffec
   19058:	add	r3, r2, r3
   1905c:	mov	r2, #39	; 0x27
   19060:	strb	r2, [r3]
   19064:	ldr	r3, [fp, #-20]	; 0xffffffec
   19068:	add	r3, r3, #1
   1906c:	str	r3, [fp, #-20]	; 0xffffffec
   19070:	ldr	r2, [fp, #-20]	; 0xffffffec
   19074:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19078:	cmp	r2, r3
   1907c:	bcs	19094 <__assert_fail@plt+0x7a70>
   19080:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19084:	ldr	r3, [fp, #-20]	; 0xffffffec
   19088:	add	r3, r2, r3
   1908c:	mov	r2, #36	; 0x24
   19090:	strb	r2, [r3]
   19094:	ldr	r3, [fp, #-20]	; 0xffffffec
   19098:	add	r3, r3, #1
   1909c:	str	r3, [fp, #-20]	; 0xffffffec
   190a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   190a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   190a8:	cmp	r2, r3
   190ac:	bcs	190c4 <__assert_fail@plt+0x7aa0>
   190b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   190b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   190b8:	add	r3, r2, r3
   190bc:	mov	r2, #39	; 0x27
   190c0:	strb	r2, [r3]
   190c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   190c8:	add	r3, r3, #1
   190cc:	str	r3, [fp, #-20]	; 0xffffffec
   190d0:	mov	r3, #1
   190d4:	strb	r3, [fp, #-35]	; 0xffffffdd
   190d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   190dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   190e0:	cmp	r2, r3
   190e4:	bcs	190fc <__assert_fail@plt+0x7ad8>
   190e8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   190ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   190f0:	add	r3, r2, r3
   190f4:	mov	r2, #92	; 0x5c
   190f8:	strb	r2, [r3]
   190fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19100:	add	r3, r3, #1
   19104:	str	r3, [fp, #-20]	; 0xffffffec
   19108:	ldr	r3, [fp, #4]
   1910c:	cmp	r3, #2
   19110:	beq	191c0 <__assert_fail@plt+0x7b9c>
   19114:	ldr	r3, [fp, #-16]
   19118:	add	r3, r3, #1
   1911c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19120:	cmp	r2, r3
   19124:	bls	191c0 <__assert_fail@plt+0x7b9c>
   19128:	ldr	r3, [fp, #-16]
   1912c:	add	r3, r3, #1
   19130:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19134:	add	r3, r2, r3
   19138:	ldrb	r3, [r3]
   1913c:	cmp	r3, #47	; 0x2f
   19140:	bls	191c0 <__assert_fail@plt+0x7b9c>
   19144:	ldr	r3, [fp, #-16]
   19148:	add	r3, r3, #1
   1914c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19150:	add	r3, r2, r3
   19154:	ldrb	r3, [r3]
   19158:	cmp	r3, #57	; 0x39
   1915c:	bhi	191c0 <__assert_fail@plt+0x7b9c>
   19160:	ldr	r2, [fp, #-20]	; 0xffffffec
   19164:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19168:	cmp	r2, r3
   1916c:	bcs	19184 <__assert_fail@plt+0x7b60>
   19170:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19174:	ldr	r3, [fp, #-20]	; 0xffffffec
   19178:	add	r3, r2, r3
   1917c:	mov	r2, #48	; 0x30
   19180:	strb	r2, [r3]
   19184:	ldr	r3, [fp, #-20]	; 0xffffffec
   19188:	add	r3, r3, #1
   1918c:	str	r3, [fp, #-20]	; 0xffffffec
   19190:	ldr	r2, [fp, #-20]	; 0xffffffec
   19194:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19198:	cmp	r2, r3
   1919c:	bcs	191b4 <__assert_fail@plt+0x7b90>
   191a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   191a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   191a8:	add	r3, r2, r3
   191ac:	mov	r2, #48	; 0x30
   191b0:	strb	r2, [r3]
   191b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   191b8:	add	r3, r3, #1
   191bc:	str	r3, [fp, #-20]	; 0xffffffec
   191c0:	mov	r3, #48	; 0x30
   191c4:	strb	r3, [fp, #-38]	; 0xffffffda
   191c8:	b	19c08 <__assert_fail@plt+0x85e4>
   191cc:	ldr	r3, [fp, #8]
   191d0:	and	r3, r3, #1
   191d4:	cmp	r3, #0
   191d8:	beq	19c08 <__assert_fail@plt+0x85e4>
   191dc:	b	19eb0 <__assert_fail@plt+0x888c>
   191e0:	ldr	r3, [fp, #4]
   191e4:	cmp	r3, #2
   191e8:	beq	191fc <__assert_fail@plt+0x7bd8>
   191ec:	ldr	r3, [fp, #4]
   191f0:	cmp	r3, #5
   191f4:	beq	1920c <__assert_fail@plt+0x7be8>
   191f8:	b	193f0 <__assert_fail@plt+0x7dcc>
   191fc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19200:	cmp	r3, #0
   19204:	beq	193e4 <__assert_fail@plt+0x7dc0>
   19208:	b	1a0b4 <__assert_fail@plt+0x8a90>
   1920c:	ldr	r3, [fp, #8]
   19210:	and	r3, r3, #4
   19214:	cmp	r3, #0
   19218:	beq	193ec <__assert_fail@plt+0x7dc8>
   1921c:	ldr	r3, [fp, #-16]
   19220:	add	r3, r3, #2
   19224:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19228:	cmp	r2, r3
   1922c:	bls	193ec <__assert_fail@plt+0x7dc8>
   19230:	ldr	r3, [fp, #-16]
   19234:	add	r3, r3, #1
   19238:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1923c:	add	r3, r2, r3
   19240:	ldrb	r3, [r3]
   19244:	cmp	r3, #63	; 0x3f
   19248:	bne	193ec <__assert_fail@plt+0x7dc8>
   1924c:	ldr	r3, [fp, #-16]
   19250:	add	r3, r3, #2
   19254:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19258:	add	r3, r2, r3
   1925c:	ldrb	r3, [r3]
   19260:	sub	r3, r3, #33	; 0x21
   19264:	cmp	r3, #29
   19268:	ldrls	pc, [pc, r3, lsl #2]
   1926c:	b	193dc <__assert_fail@plt+0x7db8>
   19270:	andeq	r9, r1, r8, ror #5
   19274:	ldrdeq	r9, [r1], -ip
   19278:	ldrdeq	r9, [r1], -ip
   1927c:	ldrdeq	r9, [r1], -ip
   19280:	ldrdeq	r9, [r1], -ip
   19284:	ldrdeq	r9, [r1], -ip
   19288:	andeq	r9, r1, r8, ror #5
   1928c:	andeq	r9, r1, r8, ror #5
   19290:	andeq	r9, r1, r8, ror #5
   19294:	ldrdeq	r9, [r1], -ip
   19298:	ldrdeq	r9, [r1], -ip
   1929c:	ldrdeq	r9, [r1], -ip
   192a0:	andeq	r9, r1, r8, ror #5
   192a4:	ldrdeq	r9, [r1], -ip
   192a8:	andeq	r9, r1, r8, ror #5
   192ac:	ldrdeq	r9, [r1], -ip
   192b0:	ldrdeq	r9, [r1], -ip
   192b4:	ldrdeq	r9, [r1], -ip
   192b8:	ldrdeq	r9, [r1], -ip
   192bc:	ldrdeq	r9, [r1], -ip
   192c0:	ldrdeq	r9, [r1], -ip
   192c4:	ldrdeq	r9, [r1], -ip
   192c8:	ldrdeq	r9, [r1], -ip
   192cc:	ldrdeq	r9, [r1], -ip
   192d0:	ldrdeq	r9, [r1], -ip
   192d4:	ldrdeq	r9, [r1], -ip
   192d8:	ldrdeq	r9, [r1], -ip
   192dc:	andeq	r9, r1, r8, ror #5
   192e0:	andeq	r9, r1, r8, ror #5
   192e4:	andeq	r9, r1, r8, ror #5
   192e8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   192ec:	cmp	r3, #0
   192f0:	bne	1a088 <__assert_fail@plt+0x8a64>
   192f4:	ldr	r3, [fp, #-16]
   192f8:	add	r3, r3, #2
   192fc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19300:	add	r3, r2, r3
   19304:	ldrb	r3, [r3]
   19308:	strb	r3, [fp, #-38]	; 0xffffffda
   1930c:	ldr	r3, [fp, #-16]
   19310:	add	r3, r3, #2
   19314:	str	r3, [fp, #-16]
   19318:	ldr	r2, [fp, #-20]	; 0xffffffec
   1931c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19320:	cmp	r2, r3
   19324:	bcs	1933c <__assert_fail@plt+0x7d18>
   19328:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1932c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19330:	add	r3, r2, r3
   19334:	mov	r2, #63	; 0x3f
   19338:	strb	r2, [r3]
   1933c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19340:	add	r3, r3, #1
   19344:	str	r3, [fp, #-20]	; 0xffffffec
   19348:	ldr	r2, [fp, #-20]	; 0xffffffec
   1934c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19350:	cmp	r2, r3
   19354:	bcs	1936c <__assert_fail@plt+0x7d48>
   19358:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1935c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19360:	add	r3, r2, r3
   19364:	mov	r2, #34	; 0x22
   19368:	strb	r2, [r3]
   1936c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19370:	add	r3, r3, #1
   19374:	str	r3, [fp, #-20]	; 0xffffffec
   19378:	ldr	r2, [fp, #-20]	; 0xffffffec
   1937c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19380:	cmp	r2, r3
   19384:	bcs	1939c <__assert_fail@plt+0x7d78>
   19388:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1938c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19390:	add	r3, r2, r3
   19394:	mov	r2, #34	; 0x22
   19398:	strb	r2, [r3]
   1939c:	ldr	r3, [fp, #-20]	; 0xffffffec
   193a0:	add	r3, r3, #1
   193a4:	str	r3, [fp, #-20]	; 0xffffffec
   193a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   193ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   193b0:	cmp	r2, r3
   193b4:	bcs	193cc <__assert_fail@plt+0x7da8>
   193b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   193bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   193c0:	add	r3, r2, r3
   193c4:	mov	r2, #63	; 0x3f
   193c8:	strb	r2, [r3]
   193cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   193d0:	add	r3, r3, #1
   193d4:	str	r3, [fp, #-20]	; 0xffffffec
   193d8:	b	193e0 <__assert_fail@plt+0x7dbc>
   193dc:	nop	{0}
   193e0:	b	193ec <__assert_fail@plt+0x7dc8>
   193e4:	nop	{0}
   193e8:	b	19c3c <__assert_fail@plt+0x8618>
   193ec:	nop	{0}
   193f0:	b	19c3c <__assert_fail@plt+0x8618>
   193f4:	mov	r3, #97	; 0x61
   193f8:	strb	r3, [fp, #-39]	; 0xffffffd9
   193fc:	b	194b0 <__assert_fail@plt+0x7e8c>
   19400:	mov	r3, #98	; 0x62
   19404:	strb	r3, [fp, #-39]	; 0xffffffd9
   19408:	b	194b0 <__assert_fail@plt+0x7e8c>
   1940c:	mov	r3, #102	; 0x66
   19410:	strb	r3, [fp, #-39]	; 0xffffffd9
   19414:	b	194b0 <__assert_fail@plt+0x7e8c>
   19418:	mov	r3, #110	; 0x6e
   1941c:	strb	r3, [fp, #-39]	; 0xffffffd9
   19420:	b	19494 <__assert_fail@plt+0x7e70>
   19424:	mov	r3, #114	; 0x72
   19428:	strb	r3, [fp, #-39]	; 0xffffffd9
   1942c:	b	19494 <__assert_fail@plt+0x7e70>
   19430:	mov	r3, #116	; 0x74
   19434:	strb	r3, [fp, #-39]	; 0xffffffd9
   19438:	b	19494 <__assert_fail@plt+0x7e70>
   1943c:	mov	r3, #118	; 0x76
   19440:	strb	r3, [fp, #-39]	; 0xffffffd9
   19444:	b	194b0 <__assert_fail@plt+0x7e8c>
   19448:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1944c:	strb	r3, [fp, #-39]	; 0xffffffd9
   19450:	ldr	r3, [fp, #4]
   19454:	cmp	r3, #2
   19458:	bne	1946c <__assert_fail@plt+0x7e48>
   1945c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19460:	cmp	r3, #0
   19464:	beq	19dc8 <__assert_fail@plt+0x87a4>
   19468:	b	1a0b4 <__assert_fail@plt+0x8a90>
   1946c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19470:	cmp	r3, #0
   19474:	beq	19490 <__assert_fail@plt+0x7e6c>
   19478:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1947c:	cmp	r3, #0
   19480:	beq	19490 <__assert_fail@plt+0x7e6c>
   19484:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19488:	cmp	r3, #0
   1948c:	bne	19dd0 <__assert_fail@plt+0x87ac>
   19490:	nop	{0}
   19494:	ldr	r3, [fp, #4]
   19498:	cmp	r3, #2
   1949c:	bne	194ac <__assert_fail@plt+0x7e88>
   194a0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   194a4:	cmp	r3, #0
   194a8:	bne	1a090 <__assert_fail@plt+0x8a6c>
   194ac:	nop	{0}
   194b0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   194b4:	cmp	r3, #0
   194b8:	beq	19c10 <__assert_fail@plt+0x85ec>
   194bc:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   194c0:	strb	r3, [fp, #-38]	; 0xffffffda
   194c4:	b	19cc8 <__assert_fail@plt+0x86a4>
   194c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   194cc:	cmn	r3, #1
   194d0:	bne	194f4 <__assert_fail@plt+0x7ed0>
   194d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   194d8:	add	r3, r3, #1
   194dc:	ldrb	r3, [r3]
   194e0:	cmp	r3, #0
   194e4:	movne	r3, #1
   194e8:	moveq	r3, #0
   194ec:	uxtb	r3, r3
   194f0:	b	19508 <__assert_fail@plt+0x7ee4>
   194f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   194f8:	cmp	r3, #1
   194fc:	movne	r3, #1
   19500:	moveq	r3, #0
   19504:	uxtb	r3, r3
   19508:	cmp	r3, #0
   1950c:	bne	19c18 <__assert_fail@plt+0x85f4>
   19510:	ldr	r3, [fp, #-16]
   19514:	cmp	r3, #0
   19518:	bne	19c20 <__assert_fail@plt+0x85fc>
   1951c:	mov	r3, #1
   19520:	strb	r3, [fp, #-42]	; 0xffffffd6
   19524:	ldr	r3, [fp, #4]
   19528:	cmp	r3, #2
   1952c:	bne	19c28 <__assert_fail@plt+0x8604>
   19530:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19534:	cmp	r3, #0
   19538:	beq	19c28 <__assert_fail@plt+0x8604>
   1953c:	b	1a0b4 <__assert_fail@plt+0x8a90>
   19540:	mov	r3, #1
   19544:	strb	r3, [fp, #-36]	; 0xffffffdc
   19548:	mov	r3, #1
   1954c:	strb	r3, [fp, #-42]	; 0xffffffd6
   19550:	ldr	r3, [fp, #4]
   19554:	cmp	r3, #2
   19558:	bne	19c30 <__assert_fail@plt+0x860c>
   1955c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19560:	cmp	r3, #0
   19564:	bne	1a098 <__assert_fail@plt+0x8a74>
   19568:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1956c:	cmp	r3, #0
   19570:	beq	19590 <__assert_fail@plt+0x7f6c>
   19574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19578:	cmp	r3, #0
   1957c:	bne	19590 <__assert_fail@plt+0x7f6c>
   19580:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19584:	str	r3, [fp, #-24]	; 0xffffffe8
   19588:	mov	r3, #0
   1958c:	str	r3, [fp, #-92]	; 0xffffffa4
   19590:	ldr	r2, [fp, #-20]	; 0xffffffec
   19594:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19598:	cmp	r2, r3
   1959c:	bcs	195b4 <__assert_fail@plt+0x7f90>
   195a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   195a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   195a8:	add	r3, r2, r3
   195ac:	mov	r2, #39	; 0x27
   195b0:	strb	r2, [r3]
   195b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   195b8:	add	r3, r3, #1
   195bc:	str	r3, [fp, #-20]	; 0xffffffec
   195c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   195c4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   195c8:	cmp	r2, r3
   195cc:	bcs	195e4 <__assert_fail@plt+0x7fc0>
   195d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   195d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   195d8:	add	r3, r2, r3
   195dc:	mov	r2, #92	; 0x5c
   195e0:	strb	r2, [r3]
   195e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   195e8:	add	r3, r3, #1
   195ec:	str	r3, [fp, #-20]	; 0xffffffec
   195f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   195f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   195f8:	cmp	r2, r3
   195fc:	bcs	19614 <__assert_fail@plt+0x7ff0>
   19600:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19604:	ldr	r3, [fp, #-20]	; 0xffffffec
   19608:	add	r3, r2, r3
   1960c:	mov	r2, #39	; 0x27
   19610:	strb	r2, [r3]
   19614:	ldr	r3, [fp, #-20]	; 0xffffffec
   19618:	add	r3, r3, #1
   1961c:	str	r3, [fp, #-20]	; 0xffffffec
   19620:	mov	r3, #0
   19624:	strb	r3, [fp, #-35]	; 0xffffffdd
   19628:	b	19c30 <__assert_fail@plt+0x860c>
   1962c:	mov	r3, #1
   19630:	strb	r3, [fp, #-42]	; 0xffffffd6
   19634:	b	19c3c <__assert_fail@plt+0x8618>
   19638:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   1963c:	cmp	r3, #0
   19640:	beq	19680 <__assert_fail@plt+0x805c>
   19644:	mov	r3, #1
   19648:	str	r3, [fp, #-48]	; 0xffffffd0
   1964c:	bl	11444 <__ctype_b_loc@plt>
   19650:	mov	r3, r0
   19654:	ldr	r2, [r3]
   19658:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1965c:	lsl	r3, r3, #1
   19660:	add	r3, r2, r3
   19664:	ldrh	r3, [r3]
   19668:	and	r3, r3, #16384	; 0x4000
   1966c:	cmp	r3, #0
   19670:	movne	r3, #1
   19674:	moveq	r3, #0
   19678:	strb	r3, [fp, #-49]	; 0xffffffcf
   1967c:	b	198cc <__assert_fail@plt+0x82a8>
   19680:	sub	r3, fp, #76	; 0x4c
   19684:	mov	r2, #8
   19688:	mov	r1, #0
   1968c:	mov	r0, r3
   19690:	bl	114d4 <memset@plt>
   19694:	mov	r3, #0
   19698:	str	r3, [fp, #-48]	; 0xffffffd0
   1969c:	mov	r3, #1
   196a0:	strb	r3, [fp, #-49]	; 0xffffffcf
   196a4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   196a8:	cmn	r3, #1
   196ac:	bne	196bc <__assert_fail@plt+0x8098>
   196b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   196b4:	bl	1148c <strlen@plt>
   196b8:	str	r0, [fp, #-100]	; 0xffffff9c
   196bc:	ldr	r2, [fp, #-16]
   196c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   196c4:	add	r3, r2, r3
   196c8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   196cc:	add	r1, r2, r3
   196d0:	ldr	r2, [fp, #-16]
   196d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   196d8:	add	r3, r2, r3
   196dc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   196e0:	sub	r2, r2, r3
   196e4:	sub	r3, fp, #76	; 0x4c
   196e8:	sub	r0, fp, #80	; 0x50
   196ec:	bl	1e140 <__assert_fail@plt+0xcb1c>
   196f0:	str	r0, [fp, #-64]	; 0xffffffc0
   196f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   196f8:	cmp	r3, #0
   196fc:	beq	198c0 <__assert_fail@plt+0x829c>
   19700:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19704:	cmn	r3, #1
   19708:	bne	19718 <__assert_fail@plt+0x80f4>
   1970c:	mov	r3, #0
   19710:	strb	r3, [fp, #-49]	; 0xffffffcf
   19714:	b	198cc <__assert_fail@plt+0x82a8>
   19718:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1971c:	cmn	r3, #2
   19720:	bne	19778 <__assert_fail@plt+0x8154>
   19724:	mov	r3, #0
   19728:	strb	r3, [fp, #-49]	; 0xffffffcf
   1972c:	b	1973c <__assert_fail@plt+0x8118>
   19730:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19734:	add	r3, r3, #1
   19738:	str	r3, [fp, #-48]	; 0xffffffd0
   1973c:	ldr	r2, [fp, #-16]
   19740:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19744:	add	r3, r2, r3
   19748:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1974c:	cmp	r2, r3
   19750:	bls	198c8 <__assert_fail@plt+0x82a4>
   19754:	ldr	r2, [fp, #-16]
   19758:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1975c:	add	r3, r2, r3
   19760:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19764:	add	r3, r2, r3
   19768:	ldrb	r3, [r3]
   1976c:	cmp	r3, #0
   19770:	bne	19730 <__assert_fail@plt+0x810c>
   19774:	b	198c8 <__assert_fail@plt+0x82a4>
   19778:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1977c:	cmp	r3, #0
   19780:	beq	19874 <__assert_fail@plt+0x8250>
   19784:	ldr	r3, [fp, #4]
   19788:	cmp	r3, #2
   1978c:	bne	19874 <__assert_fail@plt+0x8250>
   19790:	mov	r3, #1
   19794:	str	r3, [fp, #-56]	; 0xffffffc8
   19798:	b	19864 <__assert_fail@plt+0x8240>
   1979c:	ldr	r2, [fp, #-16]
   197a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   197a4:	add	r2, r2, r3
   197a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   197ac:	add	r3, r2, r3
   197b0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   197b4:	add	r3, r2, r3
   197b8:	ldrb	r3, [r3]
   197bc:	sub	r3, r3, #91	; 0x5b
   197c0:	cmp	r3, #33	; 0x21
   197c4:	ldrls	pc, [pc, r3, lsl #2]
   197c8:	b	19854 <__assert_fail@plt+0x8230>
   197cc:	strheq	sl, [r1], -r4
   197d0:	strheq	sl, [r1], -r4
   197d4:	andeq	r9, r1, r4, asr r8
   197d8:	strheq	sl, [r1], -r4
   197dc:	andeq	r9, r1, r4, asr r8
   197e0:	strheq	sl, [r1], -r4
   197e4:	andeq	r9, r1, r4, asr r8
   197e8:	andeq	r9, r1, r4, asr r8
   197ec:	andeq	r9, r1, r4, asr r8
   197f0:	andeq	r9, r1, r4, asr r8
   197f4:	andeq	r9, r1, r4, asr r8
   197f8:	andeq	r9, r1, r4, asr r8
   197fc:	andeq	r9, r1, r4, asr r8
   19800:	andeq	r9, r1, r4, asr r8
   19804:	andeq	r9, r1, r4, asr r8
   19808:	andeq	r9, r1, r4, asr r8
   1980c:	andeq	r9, r1, r4, asr r8
   19810:	andeq	r9, r1, r4, asr r8
   19814:	andeq	r9, r1, r4, asr r8
   19818:	andeq	r9, r1, r4, asr r8
   1981c:	andeq	r9, r1, r4, asr r8
   19820:	andeq	r9, r1, r4, asr r8
   19824:	andeq	r9, r1, r4, asr r8
   19828:	andeq	r9, r1, r4, asr r8
   1982c:	andeq	r9, r1, r4, asr r8
   19830:	andeq	r9, r1, r4, asr r8
   19834:	andeq	r9, r1, r4, asr r8
   19838:	andeq	r9, r1, r4, asr r8
   1983c:	andeq	r9, r1, r4, asr r8
   19840:	andeq	r9, r1, r4, asr r8
   19844:	andeq	r9, r1, r4, asr r8
   19848:	andeq	r9, r1, r4, asr r8
   1984c:	andeq	r9, r1, r4, asr r8
   19850:	strheq	sl, [r1], -r4
   19854:	nop	{0}
   19858:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1985c:	add	r3, r3, #1
   19860:	str	r3, [fp, #-56]	; 0xffffffc8
   19864:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19868:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1986c:	cmp	r2, r3
   19870:	bcc	1979c <__assert_fail@plt+0x8178>
   19874:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19878:	mov	r0, r3
   1987c:	bl	11360 <iswprint@plt>
   19880:	mov	r3, r0
   19884:	cmp	r3, #0
   19888:	bne	19894 <__assert_fail@plt+0x8270>
   1988c:	mov	r3, #0
   19890:	strb	r3, [fp, #-49]	; 0xffffffcf
   19894:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19898:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1989c:	add	r3, r2, r3
   198a0:	str	r3, [fp, #-48]	; 0xffffffd0
   198a4:	sub	r3, fp, #76	; 0x4c
   198a8:	mov	r0, r3
   198ac:	bl	112dc <mbsinit@plt>
   198b0:	mov	r3, r0
   198b4:	cmp	r3, #0
   198b8:	beq	196bc <__assert_fail@plt+0x8098>
   198bc:	b	198cc <__assert_fail@plt+0x82a8>
   198c0:	nop	{0}
   198c4:	b	198cc <__assert_fail@plt+0x82a8>
   198c8:	nop	{0}
   198cc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   198d0:	strb	r3, [fp, #-42]	; 0xffffffd6
   198d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   198d8:	cmp	r3, #1
   198dc:	bhi	19900 <__assert_fail@plt+0x82dc>
   198e0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   198e4:	cmp	r3, #0
   198e8:	beq	19c38 <__assert_fail@plt+0x8614>
   198ec:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   198f0:	eor	r3, r3, #1
   198f4:	uxtb	r3, r3
   198f8:	cmp	r3, #0
   198fc:	beq	19c38 <__assert_fail@plt+0x8614>
   19900:	ldr	r2, [fp, #-16]
   19904:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19908:	add	r3, r2, r3
   1990c:	str	r3, [fp, #-68]	; 0xffffffbc
   19910:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19914:	cmp	r3, #0
   19918:	beq	19acc <__assert_fail@plt+0x84a8>
   1991c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   19920:	eor	r3, r3, #1
   19924:	uxtb	r3, r3
   19928:	cmp	r3, #0
   1992c:	beq	19acc <__assert_fail@plt+0x84a8>
   19930:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19934:	cmp	r3, #0
   19938:	bne	1a0a0 <__assert_fail@plt+0x8a7c>
   1993c:	mov	r3, #1
   19940:	strb	r3, [fp, #-41]	; 0xffffffd7
   19944:	ldr	r3, [fp, #4]
   19948:	cmp	r3, #2
   1994c:	bne	199fc <__assert_fail@plt+0x83d8>
   19950:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   19954:	eor	r3, r3, #1
   19958:	uxtb	r3, r3
   1995c:	cmp	r3, #0
   19960:	beq	199fc <__assert_fail@plt+0x83d8>
   19964:	ldr	r2, [fp, #-20]	; 0xffffffec
   19968:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1996c:	cmp	r2, r3
   19970:	bcs	19988 <__assert_fail@plt+0x8364>
   19974:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1997c:	add	r3, r2, r3
   19980:	mov	r2, #39	; 0x27
   19984:	strb	r2, [r3]
   19988:	ldr	r3, [fp, #-20]	; 0xffffffec
   1998c:	add	r3, r3, #1
   19990:	str	r3, [fp, #-20]	; 0xffffffec
   19994:	ldr	r2, [fp, #-20]	; 0xffffffec
   19998:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1999c:	cmp	r2, r3
   199a0:	bcs	199b8 <__assert_fail@plt+0x8394>
   199a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   199a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   199ac:	add	r3, r2, r3
   199b0:	mov	r2, #36	; 0x24
   199b4:	strb	r2, [r3]
   199b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   199bc:	add	r3, r3, #1
   199c0:	str	r3, [fp, #-20]	; 0xffffffec
   199c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   199c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   199cc:	cmp	r2, r3
   199d0:	bcs	199e8 <__assert_fail@plt+0x83c4>
   199d4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   199d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   199dc:	add	r3, r2, r3
   199e0:	mov	r2, #39	; 0x27
   199e4:	strb	r2, [r3]
   199e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   199ec:	add	r3, r3, #1
   199f0:	str	r3, [fp, #-20]	; 0xffffffec
   199f4:	mov	r3, #1
   199f8:	strb	r3, [fp, #-35]	; 0xffffffdd
   199fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   19a00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19a04:	cmp	r2, r3
   19a08:	bcs	19a20 <__assert_fail@plt+0x83fc>
   19a0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19a10:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a14:	add	r3, r2, r3
   19a18:	mov	r2, #92	; 0x5c
   19a1c:	strb	r2, [r3]
   19a20:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a24:	add	r3, r3, #1
   19a28:	str	r3, [fp, #-20]	; 0xffffffec
   19a2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19a30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19a34:	cmp	r2, r3
   19a38:	bcs	19a60 <__assert_fail@plt+0x843c>
   19a3c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   19a40:	lsr	r3, r3, #6
   19a44:	uxtb	r2, r3
   19a48:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19a4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a50:	add	r3, r1, r3
   19a54:	add	r2, r2, #48	; 0x30
   19a58:	uxtb	r2, r2
   19a5c:	strb	r2, [r3]
   19a60:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a64:	add	r3, r3, #1
   19a68:	str	r3, [fp, #-20]	; 0xffffffec
   19a6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19a70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19a74:	cmp	r2, r3
   19a78:	bcs	19aa8 <__assert_fail@plt+0x8484>
   19a7c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   19a80:	lsr	r3, r3, #3
   19a84:	uxtb	r3, r3
   19a88:	and	r3, r3, #7
   19a8c:	uxtb	r2, r3
   19a90:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19a94:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a98:	add	r3, r1, r3
   19a9c:	add	r2, r2, #48	; 0x30
   19aa0:	uxtb	r2, r2
   19aa4:	strb	r2, [r3]
   19aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19aac:	add	r3, r3, #1
   19ab0:	str	r3, [fp, #-20]	; 0xffffffec
   19ab4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   19ab8:	and	r3, r3, #7
   19abc:	uxtb	r3, r3
   19ac0:	add	r3, r3, #48	; 0x30
   19ac4:	strb	r3, [fp, #-38]	; 0xffffffda
   19ac8:	b	19b10 <__assert_fail@plt+0x84ec>
   19acc:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   19ad0:	cmp	r3, #0
   19ad4:	beq	19b10 <__assert_fail@plt+0x84ec>
   19ad8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19adc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19ae0:	cmp	r2, r3
   19ae4:	bcs	19afc <__assert_fail@plt+0x84d8>
   19ae8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19aec:	ldr	r3, [fp, #-20]	; 0xffffffec
   19af0:	add	r3, r2, r3
   19af4:	mov	r2, #92	; 0x5c
   19af8:	strb	r2, [r3]
   19afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19b00:	add	r3, r3, #1
   19b04:	str	r3, [fp, #-20]	; 0xffffffec
   19b08:	mov	r3, #0
   19b0c:	strb	r3, [fp, #-40]	; 0xffffffd8
   19b10:	ldr	r3, [fp, #-16]
   19b14:	add	r3, r3, #1
   19b18:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19b1c:	cmp	r2, r3
   19b20:	bls	19c00 <__assert_fail@plt+0x85dc>
   19b24:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   19b28:	cmp	r3, #0
   19b2c:	beq	19bac <__assert_fail@plt+0x8588>
   19b30:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   19b34:	eor	r3, r3, #1
   19b38:	uxtb	r3, r3
   19b3c:	cmp	r3, #0
   19b40:	beq	19bac <__assert_fail@plt+0x8588>
   19b44:	ldr	r2, [fp, #-20]	; 0xffffffec
   19b48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19b4c:	cmp	r2, r3
   19b50:	bcs	19b68 <__assert_fail@plt+0x8544>
   19b54:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19b58:	ldr	r3, [fp, #-20]	; 0xffffffec
   19b5c:	add	r3, r2, r3
   19b60:	mov	r2, #39	; 0x27
   19b64:	strb	r2, [r3]
   19b68:	ldr	r3, [fp, #-20]	; 0xffffffec
   19b6c:	add	r3, r3, #1
   19b70:	str	r3, [fp, #-20]	; 0xffffffec
   19b74:	ldr	r2, [fp, #-20]	; 0xffffffec
   19b78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19b7c:	cmp	r2, r3
   19b80:	bcs	19b98 <__assert_fail@plt+0x8574>
   19b84:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19b88:	ldr	r3, [fp, #-20]	; 0xffffffec
   19b8c:	add	r3, r2, r3
   19b90:	mov	r2, #39	; 0x27
   19b94:	strb	r2, [r3]
   19b98:	ldr	r3, [fp, #-20]	; 0xffffffec
   19b9c:	add	r3, r3, #1
   19ba0:	str	r3, [fp, #-20]	; 0xffffffec
   19ba4:	mov	r3, #0
   19ba8:	strb	r3, [fp, #-35]	; 0xffffffdd
   19bac:	ldr	r2, [fp, #-20]	; 0xffffffec
   19bb0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19bb4:	cmp	r2, r3
   19bb8:	bcs	19bd0 <__assert_fail@plt+0x85ac>
   19bbc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19bc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19bc4:	add	r3, r2, r3
   19bc8:	ldrb	r2, [fp, #-38]	; 0xffffffda
   19bcc:	strb	r2, [r3]
   19bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19bd4:	add	r3, r3, #1
   19bd8:	str	r3, [fp, #-20]	; 0xffffffec
   19bdc:	ldr	r3, [fp, #-16]
   19be0:	add	r3, r3, #1
   19be4:	str	r3, [fp, #-16]
   19be8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19bec:	ldr	r3, [fp, #-16]
   19bf0:	add	r3, r2, r3
   19bf4:	ldrb	r3, [r3]
   19bf8:	strb	r3, [fp, #-38]	; 0xffffffda
   19bfc:	b	19910 <__assert_fail@plt+0x82ec>
   19c00:	nop	{0}
   19c04:	b	19ddc <__assert_fail@plt+0x87b8>
   19c08:	nop	{0}
   19c0c:	b	19c3c <__assert_fail@plt+0x8618>
   19c10:	nop	{0}
   19c14:	b	19c3c <__assert_fail@plt+0x8618>
   19c18:	nop	{0}
   19c1c:	b	19c3c <__assert_fail@plt+0x8618>
   19c20:	nop	{0}
   19c24:	b	19c3c <__assert_fail@plt+0x8618>
   19c28:	nop	{0}
   19c2c:	b	19c3c <__assert_fail@plt+0x8618>
   19c30:	nop	{0}
   19c34:	b	19c3c <__assert_fail@plt+0x8618>
   19c38:	nop	{0}
   19c3c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19c40:	eor	r3, r3, #1
   19c44:	uxtb	r3, r3
   19c48:	cmp	r3, #0
   19c4c:	bne	19c5c <__assert_fail@plt+0x8638>
   19c50:	ldr	r3, [fp, #4]
   19c54:	cmp	r3, #2
   19c58:	bne	19c70 <__assert_fail@plt+0x864c>
   19c5c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19c60:	eor	r3, r3, #1
   19c64:	uxtb	r3, r3
   19c68:	cmp	r3, #0
   19c6c:	bne	19cb0 <__assert_fail@plt+0x868c>
   19c70:	ldr	r3, [fp, #12]
   19c74:	cmp	r3, #0
   19c78:	beq	19cb0 <__assert_fail@plt+0x868c>
   19c7c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   19c80:	lsr	r3, r3, #5
   19c84:	uxtb	r3, r3
   19c88:	lsl	r3, r3, #2
   19c8c:	ldr	r2, [fp, #12]
   19c90:	add	r3, r2, r3
   19c94:	ldr	r2, [r3]
   19c98:	ldrb	r3, [fp, #-38]	; 0xffffffda
   19c9c:	and	r3, r3, #31
   19ca0:	lsr	r3, r2, r3
   19ca4:	and	r3, r3, #1
   19ca8:	cmp	r3, #0
   19cac:	bne	19cc4 <__assert_fail@plt+0x86a0>
   19cb0:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   19cb4:	eor	r3, r3, #1
   19cb8:	uxtb	r3, r3
   19cbc:	cmp	r3, #0
   19cc0:	bne	19dd8 <__assert_fail@plt+0x87b4>
   19cc4:	nop	{0}
   19cc8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19ccc:	cmp	r3, #0
   19cd0:	bne	1a0a8 <__assert_fail@plt+0x8a84>
   19cd4:	mov	r3, #1
   19cd8:	strb	r3, [fp, #-41]	; 0xffffffd7
   19cdc:	ldr	r3, [fp, #4]
   19ce0:	cmp	r3, #2
   19ce4:	bne	19d94 <__assert_fail@plt+0x8770>
   19ce8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   19cec:	eor	r3, r3, #1
   19cf0:	uxtb	r3, r3
   19cf4:	cmp	r3, #0
   19cf8:	beq	19d94 <__assert_fail@plt+0x8770>
   19cfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   19d00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19d04:	cmp	r2, r3
   19d08:	bcs	19d20 <__assert_fail@plt+0x86fc>
   19d0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19d10:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d14:	add	r3, r2, r3
   19d18:	mov	r2, #39	; 0x27
   19d1c:	strb	r2, [r3]
   19d20:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d24:	add	r3, r3, #1
   19d28:	str	r3, [fp, #-20]	; 0xffffffec
   19d2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19d30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19d34:	cmp	r2, r3
   19d38:	bcs	19d50 <__assert_fail@plt+0x872c>
   19d3c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19d40:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d44:	add	r3, r2, r3
   19d48:	mov	r2, #36	; 0x24
   19d4c:	strb	r2, [r3]
   19d50:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d54:	add	r3, r3, #1
   19d58:	str	r3, [fp, #-20]	; 0xffffffec
   19d5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19d60:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19d64:	cmp	r2, r3
   19d68:	bcs	19d80 <__assert_fail@plt+0x875c>
   19d6c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19d70:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d74:	add	r3, r2, r3
   19d78:	mov	r2, #39	; 0x27
   19d7c:	strb	r2, [r3]
   19d80:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d84:	add	r3, r3, #1
   19d88:	str	r3, [fp, #-20]	; 0xffffffec
   19d8c:	mov	r3, #1
   19d90:	strb	r3, [fp, #-35]	; 0xffffffdd
   19d94:	ldr	r2, [fp, #-20]	; 0xffffffec
   19d98:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19d9c:	cmp	r2, r3
   19da0:	bcs	19db8 <__assert_fail@plt+0x8794>
   19da4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19da8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19dac:	add	r3, r2, r3
   19db0:	mov	r2, #92	; 0x5c
   19db4:	strb	r2, [r3]
   19db8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19dbc:	add	r3, r3, #1
   19dc0:	str	r3, [fp, #-20]	; 0xffffffec
   19dc4:	b	19ddc <__assert_fail@plt+0x87b8>
   19dc8:	nop	{0}
   19dcc:	b	19ddc <__assert_fail@plt+0x87b8>
   19dd0:	nop	{0}
   19dd4:	b	19ddc <__assert_fail@plt+0x87b8>
   19dd8:	nop	{0}
   19ddc:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   19de0:	cmp	r3, #0
   19de4:	beq	19e64 <__assert_fail@plt+0x8840>
   19de8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   19dec:	eor	r3, r3, #1
   19df0:	uxtb	r3, r3
   19df4:	cmp	r3, #0
   19df8:	beq	19e64 <__assert_fail@plt+0x8840>
   19dfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   19e00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19e04:	cmp	r2, r3
   19e08:	bcs	19e20 <__assert_fail@plt+0x87fc>
   19e0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19e10:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e14:	add	r3, r2, r3
   19e18:	mov	r2, #39	; 0x27
   19e1c:	strb	r2, [r3]
   19e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e24:	add	r3, r3, #1
   19e28:	str	r3, [fp, #-20]	; 0xffffffec
   19e2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19e30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19e34:	cmp	r2, r3
   19e38:	bcs	19e50 <__assert_fail@plt+0x882c>
   19e3c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e44:	add	r3, r2, r3
   19e48:	mov	r2, #39	; 0x27
   19e4c:	strb	r2, [r3]
   19e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e54:	add	r3, r3, #1
   19e58:	str	r3, [fp, #-20]	; 0xffffffec
   19e5c:	mov	r3, #0
   19e60:	strb	r3, [fp, #-35]	; 0xffffffdd
   19e64:	ldr	r2, [fp, #-20]	; 0xffffffec
   19e68:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19e6c:	cmp	r2, r3
   19e70:	bcs	19e88 <__assert_fail@plt+0x8864>
   19e74:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19e78:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e7c:	add	r3, r2, r3
   19e80:	ldrb	r2, [fp, #-38]	; 0xffffffda
   19e84:	strb	r2, [r3]
   19e88:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e8c:	add	r3, r3, #1
   19e90:	str	r3, [fp, #-20]	; 0xffffffec
   19e94:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   19e98:	eor	r3, r3, #1
   19e9c:	uxtb	r3, r3
   19ea0:	cmp	r3, #0
   19ea4:	beq	19eb0 <__assert_fail@plt+0x888c>
   19ea8:	mov	r3, #0
   19eac:	strb	r3, [fp, #-37]	; 0xffffffdb
   19eb0:	ldr	r3, [fp, #-16]
   19eb4:	add	r3, r3, #1
   19eb8:	str	r3, [fp, #-16]
   19ebc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19ec0:	cmn	r3, #1
   19ec4:	bne	19eec <__assert_fail@plt+0x88c8>
   19ec8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19ecc:	ldr	r3, [fp, #-16]
   19ed0:	add	r3, r2, r3
   19ed4:	ldrb	r3, [r3]
   19ed8:	cmp	r3, #0
   19edc:	movne	r3, #1
   19ee0:	moveq	r3, #0
   19ee4:	uxtb	r3, r3
   19ee8:	b	19f04 <__assert_fail@plt+0x88e0>
   19eec:	ldr	r2, [fp, #-16]
   19ef0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19ef4:	cmp	r2, r3
   19ef8:	movne	r3, #1
   19efc:	moveq	r3, #0
   19f00:	uxtb	r3, r3
   19f04:	cmp	r3, #0
   19f08:	bne	18d24 <__assert_fail@plt+0x7700>
   19f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19f10:	cmp	r3, #0
   19f14:	bne	19f30 <__assert_fail@plt+0x890c>
   19f18:	ldr	r3, [fp, #4]
   19f1c:	cmp	r3, #2
   19f20:	bne	19f30 <__assert_fail@plt+0x890c>
   19f24:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19f28:	cmp	r3, #0
   19f2c:	bne	1a0b0 <__assert_fail@plt+0x8a8c>
   19f30:	ldr	r3, [fp, #4]
   19f34:	cmp	r3, #2
   19f38:	bne	19fd8 <__assert_fail@plt+0x89b4>
   19f3c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19f40:	eor	r3, r3, #1
   19f44:	uxtb	r3, r3
   19f48:	cmp	r3, #0
   19f4c:	beq	19fd8 <__assert_fail@plt+0x89b4>
   19f50:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   19f54:	cmp	r3, #0
   19f58:	beq	19fd8 <__assert_fail@plt+0x89b4>
   19f5c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   19f60:	cmp	r3, #0
   19f64:	beq	19fac <__assert_fail@plt+0x8988>
   19f68:	ldr	r3, [fp, #20]
   19f6c:	str	r3, [sp, #16]
   19f70:	ldr	r3, [fp, #16]
   19f74:	str	r3, [sp, #12]
   19f78:	ldr	r3, [fp, #12]
   19f7c:	str	r3, [sp, #8]
   19f80:	ldr	r3, [fp, #8]
   19f84:	str	r3, [sp, #4]
   19f88:	mov	r3, #5
   19f8c:	str	r3, [sp]
   19f90:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19f94:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19f98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f9c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   19fa0:	bl	18a5c <__assert_fail@plt+0x7438>
   19fa4:	mov	r3, r0
   19fa8:	b	1a118 <__assert_fail@plt+0x8af4>
   19fac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19fb0:	cmp	r3, #0
   19fb4:	bne	19fd8 <__assert_fail@plt+0x89b4>
   19fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19fbc:	cmp	r3, #0
   19fc0:	beq	19fd8 <__assert_fail@plt+0x89b4>
   19fc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19fc8:	str	r3, [fp, #-92]	; 0xffffffa4
   19fcc:	mov	r3, #0
   19fd0:	str	r3, [fp, #-20]	; 0xffffffec
   19fd4:	b	18af0 <__assert_fail@plt+0x74cc>
   19fd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19fdc:	cmp	r3, #0
   19fe0:	beq	1a04c <__assert_fail@plt+0x8a28>
   19fe4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19fe8:	eor	r3, r3, #1
   19fec:	uxtb	r3, r3
   19ff0:	cmp	r3, #0
   19ff4:	beq	1a04c <__assert_fail@plt+0x8a28>
   19ff8:	b	1a03c <__assert_fail@plt+0x8a18>
   19ffc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a000:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a004:	cmp	r2, r3
   1a008:	bcs	1a024 <__assert_fail@plt+0x8a00>
   1a00c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a010:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a014:	add	r3, r2, r3
   1a018:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a01c:	ldrb	r2, [r2]
   1a020:	strb	r2, [r3]
   1a024:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a028:	add	r3, r3, #1
   1a02c:	str	r3, [fp, #-20]	; 0xffffffec
   1a030:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a034:	add	r3, r3, #1
   1a038:	str	r3, [fp, #-28]	; 0xffffffe4
   1a03c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a040:	ldrb	r3, [r3]
   1a044:	cmp	r3, #0
   1a048:	bne	19ffc <__assert_fail@plt+0x89d8>
   1a04c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a050:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a054:	cmp	r2, r3
   1a058:	bcs	1a070 <__assert_fail@plt+0x8a4c>
   1a05c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a060:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a064:	add	r3, r2, r3
   1a068:	mov	r2, #0
   1a06c:	strb	r2, [r3]
   1a070:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a074:	b	1a118 <__assert_fail@plt+0x8af4>
   1a078:	nop	{0}
   1a07c:	b	1a0b4 <__assert_fail@plt+0x8a90>
   1a080:	nop	{0}
   1a084:	b	1a0b4 <__assert_fail@plt+0x8a90>
   1a088:	nop	{0}
   1a08c:	b	1a0b4 <__assert_fail@plt+0x8a90>
   1a090:	nop	{0}
   1a094:	b	1a0b4 <__assert_fail@plt+0x8a90>
   1a098:	nop	{0}
   1a09c:	b	1a0b4 <__assert_fail@plt+0x8a90>
   1a0a0:	nop	{0}
   1a0a4:	b	1a0b4 <__assert_fail@plt+0x8a90>
   1a0a8:	nop	{0}
   1a0ac:	b	1a0b4 <__assert_fail@plt+0x8a90>
   1a0b0:	nop	{0}
   1a0b4:	ldr	r3, [fp, #4]
   1a0b8:	cmp	r3, #2
   1a0bc:	bne	1a0d4 <__assert_fail@plt+0x8ab0>
   1a0c0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1a0c4:	cmp	r3, #0
   1a0c8:	beq	1a0d4 <__assert_fail@plt+0x8ab0>
   1a0cc:	mov	r3, #4
   1a0d0:	str	r3, [fp, #4]
   1a0d4:	ldr	r3, [fp, #8]
   1a0d8:	bic	r3, r3, #2
   1a0dc:	ldr	r2, [fp, #20]
   1a0e0:	str	r2, [sp, #16]
   1a0e4:	ldr	r2, [fp, #16]
   1a0e8:	str	r2, [sp, #12]
   1a0ec:	mov	r2, #0
   1a0f0:	str	r2, [sp, #8]
   1a0f4:	str	r3, [sp, #4]
   1a0f8:	ldr	r3, [fp, #4]
   1a0fc:	str	r3, [sp]
   1a100:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a104:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a108:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1a10c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1a110:	bl	18a5c <__assert_fail@plt+0x7438>
   1a114:	mov	r3, r0
   1a118:	mov	r0, r3
   1a11c:	sub	sp, fp, #8
   1a120:	ldr	r4, [sp]
   1a124:	ldr	fp, [sp, #4]
   1a128:	add	sp, sp, #8
   1a12c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a130:	str	fp, [sp, #-8]!
   1a134:	str	lr, [sp, #4]
   1a138:	add	fp, sp, #4
   1a13c:	sub	sp, sp, #56	; 0x38
   1a140:	str	r0, [fp, #-24]	; 0xffffffe8
   1a144:	str	r1, [fp, #-28]	; 0xffffffe4
   1a148:	str	r2, [fp, #-32]	; 0xffffffe0
   1a14c:	str	r3, [fp, #-36]	; 0xffffffdc
   1a150:	ldr	r3, [fp, #4]
   1a154:	cmp	r3, #0
   1a158:	beq	1a164 <__assert_fail@plt+0x8b40>
   1a15c:	ldr	r3, [fp, #4]
   1a160:	b	1a16c <__assert_fail@plt+0x8b48>
   1a164:	movw	r3, #4620	; 0x120c
   1a168:	movt	r3, #3
   1a16c:	str	r3, [fp, #-8]
   1a170:	bl	114bc <__errno_location@plt>
   1a174:	mov	r3, r0
   1a178:	ldr	r3, [r3]
   1a17c:	str	r3, [fp, #-12]
   1a180:	ldr	r3, [fp, #-8]
   1a184:	ldr	r3, [r3]
   1a188:	ldr	r2, [fp, #-8]
   1a18c:	ldr	r2, [r2, #4]
   1a190:	ldr	r1, [fp, #-8]
   1a194:	add	r1, r1, #8
   1a198:	ldr	r0, [fp, #-8]
   1a19c:	ldr	r0, [r0, #40]	; 0x28
   1a1a0:	ldr	ip, [fp, #-8]
   1a1a4:	ldr	ip, [ip, #44]	; 0x2c
   1a1a8:	str	ip, [sp, #16]
   1a1ac:	str	r0, [sp, #12]
   1a1b0:	str	r1, [sp, #8]
   1a1b4:	str	r2, [sp, #4]
   1a1b8:	str	r3, [sp]
   1a1bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a1c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a1c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1cc:	bl	18a5c <__assert_fail@plt+0x7438>
   1a1d0:	str	r0, [fp, #-16]
   1a1d4:	bl	114bc <__errno_location@plt>
   1a1d8:	mov	r2, r0
   1a1dc:	ldr	r3, [fp, #-12]
   1a1e0:	str	r3, [r2]
   1a1e4:	ldr	r3, [fp, #-16]
   1a1e8:	mov	r0, r3
   1a1ec:	sub	sp, fp, #4
   1a1f0:	ldr	fp, [sp]
   1a1f4:	add	sp, sp, #4
   1a1f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a1fc:	str	fp, [sp, #-8]!
   1a200:	str	lr, [sp, #4]
   1a204:	add	fp, sp, #4
   1a208:	sub	sp, sp, #16
   1a20c:	str	r0, [fp, #-8]
   1a210:	str	r1, [fp, #-12]
   1a214:	str	r2, [fp, #-16]
   1a218:	ldr	r3, [fp, #-16]
   1a21c:	mov	r2, #0
   1a220:	ldr	r1, [fp, #-12]
   1a224:	ldr	r0, [fp, #-8]
   1a228:	bl	1a244 <__assert_fail@plt+0x8c20>
   1a22c:	mov	r3, r0
   1a230:	mov	r0, r3
   1a234:	sub	sp, fp, #4
   1a238:	ldr	fp, [sp]
   1a23c:	add	sp, sp, #4
   1a240:	pop	{pc}		; (ldr pc, [sp], #4)
   1a244:	str	fp, [sp, #-8]!
   1a248:	str	lr, [sp, #4]
   1a24c:	add	fp, sp, #4
   1a250:	sub	sp, sp, #64	; 0x40
   1a254:	str	r0, [fp, #-32]	; 0xffffffe0
   1a258:	str	r1, [fp, #-36]	; 0xffffffdc
   1a25c:	str	r2, [fp, #-40]	; 0xffffffd8
   1a260:	str	r3, [fp, #-44]	; 0xffffffd4
   1a264:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a268:	cmp	r3, #0
   1a26c:	beq	1a278 <__assert_fail@plt+0x8c54>
   1a270:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a274:	b	1a280 <__assert_fail@plt+0x8c5c>
   1a278:	movw	r3, #4620	; 0x120c
   1a27c:	movt	r3, #3
   1a280:	str	r3, [fp, #-8]
   1a284:	bl	114bc <__errno_location@plt>
   1a288:	mov	r3, r0
   1a28c:	ldr	r3, [r3]
   1a290:	str	r3, [fp, #-12]
   1a294:	ldr	r3, [fp, #-8]
   1a298:	ldr	r3, [r3, #4]
   1a29c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a2a0:	cmp	r2, #0
   1a2a4:	moveq	r2, #1
   1a2a8:	movne	r2, #0
   1a2ac:	uxtb	r2, r2
   1a2b0:	orr	r3, r3, r2
   1a2b4:	str	r3, [fp, #-16]
   1a2b8:	ldr	r3, [fp, #-8]
   1a2bc:	ldr	r3, [r3]
   1a2c0:	ldr	r2, [fp, #-8]
   1a2c4:	add	r2, r2, #8
   1a2c8:	ldr	r1, [fp, #-8]
   1a2cc:	ldr	r1, [r1, #40]	; 0x28
   1a2d0:	ldr	r0, [fp, #-8]
   1a2d4:	ldr	r0, [r0, #44]	; 0x2c
   1a2d8:	str	r0, [sp, #16]
   1a2dc:	str	r1, [sp, #12]
   1a2e0:	str	r2, [sp, #8]
   1a2e4:	ldr	r2, [fp, #-16]
   1a2e8:	str	r2, [sp, #4]
   1a2ec:	str	r3, [sp]
   1a2f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a2f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a2f8:	mov	r1, #0
   1a2fc:	mov	r0, #0
   1a300:	bl	18a5c <__assert_fail@plt+0x7438>
   1a304:	mov	r3, r0
   1a308:	add	r3, r3, #1
   1a30c:	str	r3, [fp, #-20]	; 0xffffffec
   1a310:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a314:	bl	1c3dc <__assert_fail@plt+0xadb8>
   1a318:	mov	r3, r0
   1a31c:	str	r3, [fp, #-24]	; 0xffffffe8
   1a320:	ldr	r3, [fp, #-8]
   1a324:	ldr	r3, [r3]
   1a328:	ldr	r2, [fp, #-8]
   1a32c:	add	r2, r2, #8
   1a330:	ldr	r1, [fp, #-8]
   1a334:	ldr	r1, [r1, #40]	; 0x28
   1a338:	ldr	r0, [fp, #-8]
   1a33c:	ldr	r0, [r0, #44]	; 0x2c
   1a340:	str	r0, [sp, #16]
   1a344:	str	r1, [sp, #12]
   1a348:	str	r2, [sp, #8]
   1a34c:	ldr	r2, [fp, #-16]
   1a350:	str	r2, [sp, #4]
   1a354:	str	r3, [sp]
   1a358:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a35c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a360:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a368:	bl	18a5c <__assert_fail@plt+0x7438>
   1a36c:	bl	114bc <__errno_location@plt>
   1a370:	mov	r2, r0
   1a374:	ldr	r3, [fp, #-12]
   1a378:	str	r3, [r2]
   1a37c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a380:	cmp	r3, #0
   1a384:	beq	1a398 <__assert_fail@plt+0x8d74>
   1a388:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a38c:	sub	r2, r3, #1
   1a390:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a394:	str	r2, [r3]
   1a398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a39c:	mov	r0, r3
   1a3a0:	sub	sp, fp, #4
   1a3a4:	ldr	fp, [sp]
   1a3a8:	add	sp, sp, #4
   1a3ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1a3b0:	str	fp, [sp, #-8]!
   1a3b4:	str	lr, [sp, #4]
   1a3b8:	add	fp, sp, #4
   1a3bc:	sub	sp, sp, #8
   1a3c0:	movw	r3, #4476	; 0x117c
   1a3c4:	movt	r3, #3
   1a3c8:	ldr	r3, [r3]
   1a3cc:	str	r3, [fp, #-12]
   1a3d0:	mov	r3, #1
   1a3d4:	str	r3, [fp, #-8]
   1a3d8:	b	1a404 <__assert_fail@plt+0x8de0>
   1a3dc:	ldr	r3, [fp, #-8]
   1a3e0:	lsl	r3, r3, #3
   1a3e4:	ldr	r2, [fp, #-12]
   1a3e8:	add	r3, r2, r3
   1a3ec:	ldr	r3, [r3, #4]
   1a3f0:	mov	r0, r3
   1a3f4:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   1a3f8:	ldr	r3, [fp, #-8]
   1a3fc:	add	r3, r3, #1
   1a400:	str	r3, [fp, #-8]
   1a404:	movw	r3, #4464	; 0x1170
   1a408:	movt	r3, #3
   1a40c:	ldr	r3, [r3]
   1a410:	ldr	r2, [fp, #-8]
   1a414:	cmp	r2, r3
   1a418:	blt	1a3dc <__assert_fail@plt+0x8db8>
   1a41c:	ldr	r3, [fp, #-12]
   1a420:	ldr	r2, [r3, #4]
   1a424:	movw	r3, #4668	; 0x123c
   1a428:	movt	r3, #3
   1a42c:	cmp	r2, r3
   1a430:	beq	1a468 <__assert_fail@plt+0x8e44>
   1a434:	ldr	r3, [fp, #-12]
   1a438:	ldr	r3, [r3, #4]
   1a43c:	mov	r0, r3
   1a440:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   1a444:	movw	r3, #4468	; 0x1174
   1a448:	movt	r3, #3
   1a44c:	mov	r2, #256	; 0x100
   1a450:	str	r2, [r3]
   1a454:	movw	r3, #4468	; 0x1174
   1a458:	movt	r3, #3
   1a45c:	movw	r2, #4668	; 0x123c
   1a460:	movt	r2, #3
   1a464:	str	r2, [r3, #4]
   1a468:	ldr	r2, [fp, #-12]
   1a46c:	movw	r3, #4468	; 0x1174
   1a470:	movt	r3, #3
   1a474:	cmp	r2, r3
   1a478:	beq	1a498 <__assert_fail@plt+0x8e74>
   1a47c:	ldr	r0, [fp, #-12]
   1a480:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   1a484:	movw	r3, #4476	; 0x117c
   1a488:	movt	r3, #3
   1a48c:	movw	r2, #4468	; 0x1174
   1a490:	movt	r2, #3
   1a494:	str	r2, [r3]
   1a498:	movw	r3, #4464	; 0x1170
   1a49c:	movt	r3, #3
   1a4a0:	mov	r2, #1
   1a4a4:	str	r2, [r3]
   1a4a8:	nop	{0}
   1a4ac:	sub	sp, fp, #4
   1a4b0:	ldr	fp, [sp]
   1a4b4:	add	sp, sp, #4
   1a4b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a4bc:	str	fp, [sp, #-8]!
   1a4c0:	str	lr, [sp, #4]
   1a4c4:	add	fp, sp, #4
   1a4c8:	sub	sp, sp, #80	; 0x50
   1a4cc:	str	r0, [fp, #-48]	; 0xffffffd0
   1a4d0:	str	r1, [fp, #-52]	; 0xffffffcc
   1a4d4:	str	r2, [fp, #-56]	; 0xffffffc8
   1a4d8:	str	r3, [fp, #-60]	; 0xffffffc4
   1a4dc:	bl	114bc <__errno_location@plt>
   1a4e0:	mov	r3, r0
   1a4e4:	ldr	r3, [r3]
   1a4e8:	str	r3, [fp, #-16]
   1a4ec:	movw	r3, #4476	; 0x117c
   1a4f0:	movt	r3, #3
   1a4f4:	ldr	r3, [r3]
   1a4f8:	str	r3, [fp, #-8]
   1a4fc:	mvn	r3, #-2147483648	; 0x80000000
   1a500:	str	r3, [fp, #-20]	; 0xffffffec
   1a504:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a508:	cmp	r3, #0
   1a50c:	blt	1a520 <__assert_fail@plt+0x8efc>
   1a510:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a514:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a518:	cmp	r2, r3
   1a51c:	blt	1a524 <__assert_fail@plt+0x8f00>
   1a520:	bl	115e8 <abort@plt>
   1a524:	movw	r3, #4464	; 0x1170
   1a528:	movt	r3, #3
   1a52c:	ldr	r3, [r3]
   1a530:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a534:	cmp	r2, r3
   1a538:	blt	1a630 <__assert_fail@plt+0x900c>
   1a53c:	ldr	r2, [fp, #-8]
   1a540:	movw	r3, #4468	; 0x1174
   1a544:	movt	r3, #3
   1a548:	cmp	r2, r3
   1a54c:	moveq	r3, #1
   1a550:	movne	r3, #0
   1a554:	strb	r3, [fp, #-21]	; 0xffffffeb
   1a558:	movw	r3, #4464	; 0x1170
   1a55c:	movt	r3, #3
   1a560:	ldr	r3, [r3]
   1a564:	str	r3, [fp, #-40]	; 0xffffffd8
   1a568:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1a56c:	cmp	r3, #0
   1a570:	beq	1a57c <__assert_fail@plt+0x8f58>
   1a574:	mov	r0, #0
   1a578:	b	1a580 <__assert_fail@plt+0x8f5c>
   1a57c:	ldr	r0, [fp, #-8]
   1a580:	movw	r3, #4464	; 0x1170
   1a584:	movt	r3, #3
   1a588:	ldr	r3, [r3]
   1a58c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a590:	sub	r3, r2, r3
   1a594:	add	r2, r3, #1
   1a598:	sub	r1, fp, #40	; 0x28
   1a59c:	mov	r3, #8
   1a5a0:	str	r3, [sp]
   1a5a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a5a8:	bl	1c73c <__assert_fail@plt+0xb118>
   1a5ac:	str	r0, [fp, #-8]
   1a5b0:	movw	r3, #4476	; 0x117c
   1a5b4:	movt	r3, #3
   1a5b8:	ldr	r2, [fp, #-8]
   1a5bc:	str	r2, [r3]
   1a5c0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1a5c4:	cmp	r3, #0
   1a5c8:	beq	1a5e4 <__assert_fail@plt+0x8fc0>
   1a5cc:	ldr	r2, [fp, #-8]
   1a5d0:	movw	r3, #4468	; 0x1174
   1a5d4:	movt	r3, #3
   1a5d8:	mov	r1, r2
   1a5dc:	ldrd	r2, [r3]
   1a5e0:	strd	r2, [r1]
   1a5e4:	movw	r3, #4464	; 0x1170
   1a5e8:	movt	r3, #3
   1a5ec:	ldr	r3, [r3]
   1a5f0:	lsl	r3, r3, #3
   1a5f4:	ldr	r2, [fp, #-8]
   1a5f8:	add	r0, r2, r3
   1a5fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a600:	movw	r3, #4464	; 0x1170
   1a604:	movt	r3, #3
   1a608:	ldr	r3, [r3]
   1a60c:	sub	r3, r2, r3
   1a610:	lsl	r3, r3, #3
   1a614:	mov	r2, r3
   1a618:	mov	r1, #0
   1a61c:	bl	114d4 <memset@plt>
   1a620:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a624:	movw	r3, #4464	; 0x1170
   1a628:	movt	r3, #3
   1a62c:	str	r2, [r3]
   1a630:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a634:	lsl	r3, r3, #3
   1a638:	ldr	r2, [fp, #-8]
   1a63c:	add	r3, r2, r3
   1a640:	ldr	r3, [r3]
   1a644:	str	r3, [fp, #-28]	; 0xffffffe4
   1a648:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a64c:	lsl	r3, r3, #3
   1a650:	ldr	r2, [fp, #-8]
   1a654:	add	r3, r2, r3
   1a658:	ldr	r3, [r3, #4]
   1a65c:	str	r3, [fp, #-12]
   1a660:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a664:	ldr	r3, [r3, #4]
   1a668:	orr	r3, r3, #1
   1a66c:	str	r3, [fp, #-32]	; 0xffffffe0
   1a670:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a674:	ldr	r3, [r3]
   1a678:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a67c:	add	r2, r2, #8
   1a680:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a684:	ldr	r1, [r1, #40]	; 0x28
   1a688:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1a68c:	ldr	r0, [r0, #44]	; 0x2c
   1a690:	str	r0, [sp, #16]
   1a694:	str	r1, [sp, #12]
   1a698:	str	r2, [sp, #8]
   1a69c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a6a0:	str	r2, [sp, #4]
   1a6a4:	str	r3, [sp]
   1a6a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a6ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a6b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a6b4:	ldr	r0, [fp, #-12]
   1a6b8:	bl	18a5c <__assert_fail@plt+0x7438>
   1a6bc:	str	r0, [fp, #-36]	; 0xffffffdc
   1a6c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a6c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a6c8:	cmp	r2, r3
   1a6cc:	bhi	1a784 <__assert_fail@plt+0x9160>
   1a6d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a6d4:	add	r3, r3, #1
   1a6d8:	str	r3, [fp, #-28]	; 0xffffffe4
   1a6dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a6e0:	lsl	r3, r3, #3
   1a6e4:	ldr	r2, [fp, #-8]
   1a6e8:	add	r3, r2, r3
   1a6ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a6f0:	str	r2, [r3]
   1a6f4:	ldr	r2, [fp, #-12]
   1a6f8:	movw	r3, #4668	; 0x123c
   1a6fc:	movt	r3, #3
   1a700:	cmp	r2, r3
   1a704:	beq	1a710 <__assert_fail@plt+0x90ec>
   1a708:	ldr	r0, [fp, #-12]
   1a70c:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   1a710:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a714:	bl	1c3dc <__assert_fail@plt+0xadb8>
   1a718:	mov	r3, r0
   1a71c:	str	r3, [fp, #-12]
   1a720:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a724:	lsl	r3, r3, #3
   1a728:	ldr	r2, [fp, #-8]
   1a72c:	add	r3, r2, r3
   1a730:	ldr	r2, [fp, #-12]
   1a734:	str	r2, [r3, #4]
   1a738:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a73c:	ldr	r3, [r3]
   1a740:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a744:	add	r2, r2, #8
   1a748:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a74c:	ldr	r1, [r1, #40]	; 0x28
   1a750:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1a754:	ldr	r0, [r0, #44]	; 0x2c
   1a758:	str	r0, [sp, #16]
   1a75c:	str	r1, [sp, #12]
   1a760:	str	r2, [sp, #8]
   1a764:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a768:	str	r2, [sp, #4]
   1a76c:	str	r3, [sp]
   1a770:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a774:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a778:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a77c:	ldr	r0, [fp, #-12]
   1a780:	bl	18a5c <__assert_fail@plt+0x7438>
   1a784:	bl	114bc <__errno_location@plt>
   1a788:	mov	r2, r0
   1a78c:	ldr	r3, [fp, #-16]
   1a790:	str	r3, [r2]
   1a794:	ldr	r3, [fp, #-12]
   1a798:	mov	r0, r3
   1a79c:	sub	sp, fp, #4
   1a7a0:	ldr	fp, [sp]
   1a7a4:	add	sp, sp, #4
   1a7a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a7ac:	str	fp, [sp, #-8]!
   1a7b0:	str	lr, [sp, #4]
   1a7b4:	add	fp, sp, #4
   1a7b8:	sub	sp, sp, #8
   1a7bc:	str	r0, [fp, #-8]
   1a7c0:	str	r1, [fp, #-12]
   1a7c4:	movw	r3, #4620	; 0x120c
   1a7c8:	movt	r3, #3
   1a7cc:	mvn	r2, #0
   1a7d0:	ldr	r1, [fp, #-12]
   1a7d4:	ldr	r0, [fp, #-8]
   1a7d8:	bl	1a4bc <__assert_fail@plt+0x8e98>
   1a7dc:	mov	r3, r0
   1a7e0:	mov	r0, r3
   1a7e4:	sub	sp, fp, #4
   1a7e8:	ldr	fp, [sp]
   1a7ec:	add	sp, sp, #4
   1a7f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a7f4:	str	fp, [sp, #-8]!
   1a7f8:	str	lr, [sp, #4]
   1a7fc:	add	fp, sp, #4
   1a800:	sub	sp, sp, #16
   1a804:	str	r0, [fp, #-8]
   1a808:	str	r1, [fp, #-12]
   1a80c:	str	r2, [fp, #-16]
   1a810:	movw	r3, #4620	; 0x120c
   1a814:	movt	r3, #3
   1a818:	ldr	r2, [fp, #-16]
   1a81c:	ldr	r1, [fp, #-12]
   1a820:	ldr	r0, [fp, #-8]
   1a824:	bl	1a4bc <__assert_fail@plt+0x8e98>
   1a828:	mov	r3, r0
   1a82c:	mov	r0, r3
   1a830:	sub	sp, fp, #4
   1a834:	ldr	fp, [sp]
   1a838:	add	sp, sp, #4
   1a83c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a840:	str	fp, [sp, #-8]!
   1a844:	str	lr, [sp, #4]
   1a848:	add	fp, sp, #4
   1a84c:	sub	sp, sp, #8
   1a850:	str	r0, [fp, #-8]
   1a854:	ldr	r1, [fp, #-8]
   1a858:	mov	r0, #0
   1a85c:	bl	1a7ac <__assert_fail@plt+0x9188>
   1a860:	mov	r3, r0
   1a864:	mov	r0, r3
   1a868:	sub	sp, fp, #4
   1a86c:	ldr	fp, [sp]
   1a870:	add	sp, sp, #4
   1a874:	pop	{pc}		; (ldr pc, [sp], #4)
   1a878:	str	fp, [sp, #-8]!
   1a87c:	str	lr, [sp, #4]
   1a880:	add	fp, sp, #4
   1a884:	sub	sp, sp, #8
   1a888:	str	r0, [fp, #-8]
   1a88c:	str	r1, [fp, #-12]
   1a890:	ldr	r2, [fp, #-12]
   1a894:	ldr	r1, [fp, #-8]
   1a898:	mov	r0, #0
   1a89c:	bl	1a7f4 <__assert_fail@plt+0x91d0>
   1a8a0:	mov	r3, r0
   1a8a4:	mov	r0, r3
   1a8a8:	sub	sp, fp, #4
   1a8ac:	ldr	fp, [sp]
   1a8b0:	add	sp, sp, #4
   1a8b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a8b8:	str	fp, [sp, #-8]!
   1a8bc:	str	lr, [sp, #4]
   1a8c0:	add	fp, sp, #4
   1a8c4:	sub	sp, sp, #64	; 0x40
   1a8c8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a8cc:	str	r1, [fp, #-60]	; 0xffffffc4
   1a8d0:	str	r2, [fp, #-64]	; 0xffffffc0
   1a8d4:	sub	r3, fp, #52	; 0x34
   1a8d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a8dc:	mov	r0, r3
   1a8e0:	bl	188b8 <__assert_fail@plt+0x7294>
   1a8e4:	sub	r3, fp, #52	; 0x34
   1a8e8:	mvn	r2, #0
   1a8ec:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1a8f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a8f4:	bl	1a4bc <__assert_fail@plt+0x8e98>
   1a8f8:	mov	r3, r0
   1a8fc:	mov	r0, r3
   1a900:	sub	sp, fp, #4
   1a904:	ldr	fp, [sp]
   1a908:	add	sp, sp, #4
   1a90c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a910:	str	fp, [sp, #-8]!
   1a914:	str	lr, [sp, #4]
   1a918:	add	fp, sp, #4
   1a91c:	sub	sp, sp, #64	; 0x40
   1a920:	str	r0, [fp, #-56]	; 0xffffffc8
   1a924:	str	r1, [fp, #-60]	; 0xffffffc4
   1a928:	str	r2, [fp, #-64]	; 0xffffffc0
   1a92c:	str	r3, [fp, #-68]	; 0xffffffbc
   1a930:	sub	r3, fp, #52	; 0x34
   1a934:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a938:	mov	r0, r3
   1a93c:	bl	188b8 <__assert_fail@plt+0x7294>
   1a940:	sub	r3, fp, #52	; 0x34
   1a944:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1a948:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1a94c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a950:	bl	1a4bc <__assert_fail@plt+0x8e98>
   1a954:	mov	r3, r0
   1a958:	mov	r0, r3
   1a95c:	sub	sp, fp, #4
   1a960:	ldr	fp, [sp]
   1a964:	add	sp, sp, #4
   1a968:	pop	{pc}		; (ldr pc, [sp], #4)
   1a96c:	str	fp, [sp, #-8]!
   1a970:	str	lr, [sp, #4]
   1a974:	add	fp, sp, #4
   1a978:	sub	sp, sp, #8
   1a97c:	str	r0, [fp, #-8]
   1a980:	str	r1, [fp, #-12]
   1a984:	ldr	r2, [fp, #-12]
   1a988:	ldr	r1, [fp, #-8]
   1a98c:	mov	r0, #0
   1a990:	bl	1a8b8 <__assert_fail@plt+0x9294>
   1a994:	mov	r3, r0
   1a998:	mov	r0, r3
   1a99c:	sub	sp, fp, #4
   1a9a0:	ldr	fp, [sp]
   1a9a4:	add	sp, sp, #4
   1a9a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9ac:	str	fp, [sp, #-8]!
   1a9b0:	str	lr, [sp, #4]
   1a9b4:	add	fp, sp, #4
   1a9b8:	sub	sp, sp, #16
   1a9bc:	str	r0, [fp, #-8]
   1a9c0:	str	r1, [fp, #-12]
   1a9c4:	str	r2, [fp, #-16]
   1a9c8:	ldr	r3, [fp, #-16]
   1a9cc:	ldr	r2, [fp, #-12]
   1a9d0:	ldr	r1, [fp, #-8]
   1a9d4:	mov	r0, #0
   1a9d8:	bl	1a910 <__assert_fail@plt+0x92ec>
   1a9dc:	mov	r3, r0
   1a9e0:	mov	r0, r3
   1a9e4:	sub	sp, fp, #4
   1a9e8:	ldr	fp, [sp]
   1a9ec:	add	sp, sp, #4
   1a9f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9f4:	str	fp, [sp, #-8]!
   1a9f8:	str	lr, [sp, #4]
   1a9fc:	add	fp, sp, #4
   1aa00:	sub	sp, sp, #64	; 0x40
   1aa04:	str	r0, [fp, #-56]	; 0xffffffc8
   1aa08:	str	r1, [fp, #-60]	; 0xffffffc4
   1aa0c:	mov	r3, r2
   1aa10:	strb	r3, [fp, #-61]	; 0xffffffc3
   1aa14:	movw	r2, #4620	; 0x120c
   1aa18:	movt	r2, #3
   1aa1c:	sub	r3, fp, #52	; 0x34
   1aa20:	ldrd	r0, [r2]
   1aa24:	strd	r0, [r3]
   1aa28:	ldrd	r0, [r2, #8]
   1aa2c:	strd	r0, [r3, #8]
   1aa30:	ldrd	r0, [r2, #16]
   1aa34:	strd	r0, [r3, #16]
   1aa38:	ldrd	r0, [r2, #24]
   1aa3c:	strd	r0, [r3, #24]
   1aa40:	ldrd	r0, [r2, #32]
   1aa44:	strd	r0, [r3, #32]
   1aa48:	ldrd	r0, [r2, #40]	; 0x28
   1aa4c:	strd	r0, [r3, #40]	; 0x28
   1aa50:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   1aa54:	sub	r3, fp, #52	; 0x34
   1aa58:	mov	r2, #1
   1aa5c:	mov	r0, r3
   1aa60:	bl	18718 <__assert_fail@plt+0x70f4>
   1aa64:	sub	r3, fp, #52	; 0x34
   1aa68:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1aa6c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1aa70:	mov	r0, #0
   1aa74:	bl	1a4bc <__assert_fail@plt+0x8e98>
   1aa78:	mov	r3, r0
   1aa7c:	mov	r0, r3
   1aa80:	sub	sp, fp, #4
   1aa84:	ldr	fp, [sp]
   1aa88:	add	sp, sp, #4
   1aa8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa90:	str	fp, [sp, #-8]!
   1aa94:	str	lr, [sp, #4]
   1aa98:	add	fp, sp, #4
   1aa9c:	sub	sp, sp, #8
   1aaa0:	str	r0, [fp, #-8]
   1aaa4:	mov	r3, r1
   1aaa8:	strb	r3, [fp, #-9]
   1aaac:	ldrb	r3, [fp, #-9]
   1aab0:	mov	r2, r3
   1aab4:	mvn	r1, #0
   1aab8:	ldr	r0, [fp, #-8]
   1aabc:	bl	1a9f4 <__assert_fail@plt+0x93d0>
   1aac0:	mov	r3, r0
   1aac4:	mov	r0, r3
   1aac8:	sub	sp, fp, #4
   1aacc:	ldr	fp, [sp]
   1aad0:	add	sp, sp, #4
   1aad4:	pop	{pc}		; (ldr pc, [sp], #4)
   1aad8:	str	fp, [sp, #-8]!
   1aadc:	str	lr, [sp, #4]
   1aae0:	add	fp, sp, #4
   1aae4:	sub	sp, sp, #8
   1aae8:	str	r0, [fp, #-8]
   1aaec:	mov	r1, #58	; 0x3a
   1aaf0:	ldr	r0, [fp, #-8]
   1aaf4:	bl	1aa90 <__assert_fail@plt+0x946c>
   1aaf8:	mov	r3, r0
   1aafc:	mov	r0, r3
   1ab00:	sub	sp, fp, #4
   1ab04:	ldr	fp, [sp]
   1ab08:	add	sp, sp, #4
   1ab0c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab10:	str	fp, [sp, #-8]!
   1ab14:	str	lr, [sp, #4]
   1ab18:	add	fp, sp, #4
   1ab1c:	sub	sp, sp, #8
   1ab20:	str	r0, [fp, #-8]
   1ab24:	str	r1, [fp, #-12]
   1ab28:	mov	r2, #58	; 0x3a
   1ab2c:	ldr	r1, [fp, #-12]
   1ab30:	ldr	r0, [fp, #-8]
   1ab34:	bl	1a9f4 <__assert_fail@plt+0x93d0>
   1ab38:	mov	r3, r0
   1ab3c:	mov	r0, r3
   1ab40:	sub	sp, fp, #4
   1ab44:	ldr	fp, [sp]
   1ab48:	add	sp, sp, #4
   1ab4c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab50:	str	fp, [sp, #-8]!
   1ab54:	str	lr, [sp, #4]
   1ab58:	add	fp, sp, #4
   1ab5c:	sub	sp, sp, #112	; 0x70
   1ab60:	str	r0, [fp, #-56]	; 0xffffffc8
   1ab64:	str	r1, [fp, #-60]	; 0xffffffc4
   1ab68:	str	r2, [fp, #-64]	; 0xffffffc0
   1ab6c:	sub	r3, fp, #116	; 0x74
   1ab70:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1ab74:	mov	r0, r3
   1ab78:	bl	188b8 <__assert_fail@plt+0x7294>
   1ab7c:	sub	r3, fp, #52	; 0x34
   1ab80:	sub	r2, fp, #116	; 0x74
   1ab84:	ldrd	r0, [r2]
   1ab88:	strd	r0, [r3]
   1ab8c:	ldrd	r0, [r2, #8]
   1ab90:	strd	r0, [r3, #8]
   1ab94:	ldrd	r0, [r2, #16]
   1ab98:	strd	r0, [r3, #16]
   1ab9c:	ldrd	r0, [r2, #24]
   1aba0:	strd	r0, [r3, #24]
   1aba4:	ldrd	r0, [r2, #32]
   1aba8:	strd	r0, [r3, #32]
   1abac:	ldrd	r0, [r2, #40]	; 0x28
   1abb0:	strd	r0, [r3, #40]	; 0x28
   1abb4:	sub	r3, fp, #52	; 0x34
   1abb8:	mov	r2, #1
   1abbc:	mov	r1, #58	; 0x3a
   1abc0:	mov	r0, r3
   1abc4:	bl	18718 <__assert_fail@plt+0x70f4>
   1abc8:	sub	r3, fp, #52	; 0x34
   1abcc:	mvn	r2, #0
   1abd0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1abd4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1abd8:	bl	1a4bc <__assert_fail@plt+0x8e98>
   1abdc:	mov	r3, r0
   1abe0:	mov	r0, r3
   1abe4:	sub	sp, fp, #4
   1abe8:	ldr	fp, [sp]
   1abec:	add	sp, sp, #4
   1abf0:	pop	{pc}		; (ldr pc, [sp], #4)
   1abf4:	str	fp, [sp, #-8]!
   1abf8:	str	lr, [sp, #4]
   1abfc:	add	fp, sp, #4
   1ac00:	sub	sp, sp, #24
   1ac04:	str	r0, [fp, #-8]
   1ac08:	str	r1, [fp, #-12]
   1ac0c:	str	r2, [fp, #-16]
   1ac10:	str	r3, [fp, #-20]	; 0xffffffec
   1ac14:	mvn	r3, #0
   1ac18:	str	r3, [sp]
   1ac1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ac20:	ldr	r2, [fp, #-16]
   1ac24:	ldr	r1, [fp, #-12]
   1ac28:	ldr	r0, [fp, #-8]
   1ac2c:	bl	1ac48 <__assert_fail@plt+0x9624>
   1ac30:	mov	r3, r0
   1ac34:	mov	r0, r3
   1ac38:	sub	sp, fp, #4
   1ac3c:	ldr	fp, [sp]
   1ac40:	add	sp, sp, #4
   1ac44:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac48:	str	fp, [sp, #-8]!
   1ac4c:	str	lr, [sp, #4]
   1ac50:	add	fp, sp, #4
   1ac54:	sub	sp, sp, #64	; 0x40
   1ac58:	str	r0, [fp, #-56]	; 0xffffffc8
   1ac5c:	str	r1, [fp, #-60]	; 0xffffffc4
   1ac60:	str	r2, [fp, #-64]	; 0xffffffc0
   1ac64:	str	r3, [fp, #-68]	; 0xffffffbc
   1ac68:	movw	r2, #4620	; 0x120c
   1ac6c:	movt	r2, #3
   1ac70:	sub	r3, fp, #52	; 0x34
   1ac74:	ldrd	r0, [r2]
   1ac78:	strd	r0, [r3]
   1ac7c:	ldrd	r0, [r2, #8]
   1ac80:	strd	r0, [r3, #8]
   1ac84:	ldrd	r0, [r2, #16]
   1ac88:	strd	r0, [r3, #16]
   1ac8c:	ldrd	r0, [r2, #24]
   1ac90:	strd	r0, [r3, #24]
   1ac94:	ldrd	r0, [r2, #32]
   1ac98:	strd	r0, [r3, #32]
   1ac9c:	ldrd	r0, [r2, #40]	; 0x28
   1aca0:	strd	r0, [r3, #40]	; 0x28
   1aca4:	sub	r3, fp, #52	; 0x34
   1aca8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1acac:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1acb0:	mov	r0, r3
   1acb4:	bl	18830 <__assert_fail@plt+0x720c>
   1acb8:	sub	r3, fp, #52	; 0x34
   1acbc:	ldr	r2, [fp, #4]
   1acc0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1acc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1acc8:	bl	1a4bc <__assert_fail@plt+0x8e98>
   1accc:	mov	r3, r0
   1acd0:	mov	r0, r3
   1acd4:	sub	sp, fp, #4
   1acd8:	ldr	fp, [sp]
   1acdc:	add	sp, sp, #4
   1ace0:	pop	{pc}		; (ldr pc, [sp], #4)
   1ace4:	str	fp, [sp, #-8]!
   1ace8:	str	lr, [sp, #4]
   1acec:	add	fp, sp, #4
   1acf0:	sub	sp, sp, #16
   1acf4:	str	r0, [fp, #-8]
   1acf8:	str	r1, [fp, #-12]
   1acfc:	str	r2, [fp, #-16]
   1ad00:	ldr	r3, [fp, #-16]
   1ad04:	ldr	r2, [fp, #-12]
   1ad08:	ldr	r1, [fp, #-8]
   1ad0c:	mov	r0, #0
   1ad10:	bl	1abf4 <__assert_fail@plt+0x95d0>
   1ad14:	mov	r3, r0
   1ad18:	mov	r0, r3
   1ad1c:	sub	sp, fp, #4
   1ad20:	ldr	fp, [sp]
   1ad24:	add	sp, sp, #4
   1ad28:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad2c:	str	fp, [sp, #-8]!
   1ad30:	str	lr, [sp, #4]
   1ad34:	add	fp, sp, #4
   1ad38:	sub	sp, sp, #24
   1ad3c:	str	r0, [fp, #-8]
   1ad40:	str	r1, [fp, #-12]
   1ad44:	str	r2, [fp, #-16]
   1ad48:	str	r3, [fp, #-20]	; 0xffffffec
   1ad4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ad50:	str	r3, [sp]
   1ad54:	ldr	r3, [fp, #-16]
   1ad58:	ldr	r2, [fp, #-12]
   1ad5c:	ldr	r1, [fp, #-8]
   1ad60:	mov	r0, #0
   1ad64:	bl	1ac48 <__assert_fail@plt+0x9624>
   1ad68:	mov	r3, r0
   1ad6c:	mov	r0, r3
   1ad70:	sub	sp, fp, #4
   1ad74:	ldr	fp, [sp]
   1ad78:	add	sp, sp, #4
   1ad7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad80:	str	fp, [sp, #-8]!
   1ad84:	str	lr, [sp, #4]
   1ad88:	add	fp, sp, #4
   1ad8c:	sub	sp, sp, #16
   1ad90:	str	r0, [fp, #-8]
   1ad94:	str	r1, [fp, #-12]
   1ad98:	str	r2, [fp, #-16]
   1ad9c:	movw	r3, #4480	; 0x1180
   1ada0:	movt	r3, #3
   1ada4:	ldr	r2, [fp, #-16]
   1ada8:	ldr	r1, [fp, #-12]
   1adac:	ldr	r0, [fp, #-8]
   1adb0:	bl	1a4bc <__assert_fail@plt+0x8e98>
   1adb4:	mov	r3, r0
   1adb8:	mov	r0, r3
   1adbc:	sub	sp, fp, #4
   1adc0:	ldr	fp, [sp]
   1adc4:	add	sp, sp, #4
   1adc8:	pop	{pc}		; (ldr pc, [sp], #4)
   1adcc:	str	fp, [sp, #-8]!
   1add0:	str	lr, [sp, #4]
   1add4:	add	fp, sp, #4
   1add8:	sub	sp, sp, #8
   1addc:	str	r0, [fp, #-8]
   1ade0:	str	r1, [fp, #-12]
   1ade4:	ldr	r2, [fp, #-12]
   1ade8:	ldr	r1, [fp, #-8]
   1adec:	mov	r0, #0
   1adf0:	bl	1ad80 <__assert_fail@plt+0x975c>
   1adf4:	mov	r3, r0
   1adf8:	mov	r0, r3
   1adfc:	sub	sp, fp, #4
   1ae00:	ldr	fp, [sp]
   1ae04:	add	sp, sp, #4
   1ae08:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae0c:	str	fp, [sp, #-8]!
   1ae10:	str	lr, [sp, #4]
   1ae14:	add	fp, sp, #4
   1ae18:	sub	sp, sp, #8
   1ae1c:	str	r0, [fp, #-8]
   1ae20:	str	r1, [fp, #-12]
   1ae24:	mvn	r2, #0
   1ae28:	ldr	r1, [fp, #-12]
   1ae2c:	ldr	r0, [fp, #-8]
   1ae30:	bl	1ad80 <__assert_fail@plt+0x975c>
   1ae34:	mov	r3, r0
   1ae38:	mov	r0, r3
   1ae3c:	sub	sp, fp, #4
   1ae40:	ldr	fp, [sp]
   1ae44:	add	sp, sp, #4
   1ae48:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae4c:	str	fp, [sp, #-8]!
   1ae50:	str	lr, [sp, #4]
   1ae54:	add	fp, sp, #4
   1ae58:	sub	sp, sp, #8
   1ae5c:	str	r0, [fp, #-8]
   1ae60:	ldr	r1, [fp, #-8]
   1ae64:	mov	r0, #0
   1ae68:	bl	1ae0c <__assert_fail@plt+0x97e8>
   1ae6c:	mov	r3, r0
   1ae70:	mov	r0, r3
   1ae74:	sub	sp, fp, #4
   1ae78:	ldr	fp, [sp]
   1ae7c:	add	sp, sp, #4
   1ae80:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae84:	str	fp, [sp, #-8]!
   1ae88:	str	lr, [sp, #4]
   1ae8c:	add	fp, sp, #4
   1ae90:	sub	sp, sp, #112	; 0x70
   1ae94:	str	r0, [fp, #-112]	; 0xffffff90
   1ae98:	sub	r3, fp, #108	; 0x6c
   1ae9c:	mov	r1, r3
   1aea0:	movw	r0, #1048	; 0x418
   1aea4:	movt	r0, #2
   1aea8:	bl	1f394 <__assert_fail@plt+0xdd70>
   1aeac:	mov	r3, r0
   1aeb0:	cmp	r3, #0
   1aeb4:	beq	1aec0 <__assert_fail@plt+0x989c>
   1aeb8:	mov	r3, #0
   1aebc:	b	1aedc <__assert_fail@plt+0x98b8>
   1aec0:	ldrd	r2, [fp, #-12]
   1aec4:	ldr	r1, [fp, #-112]	; 0xffffff90
   1aec8:	strd	r2, [r1]
   1aecc:	ldrd	r2, [fp, #-108]	; 0xffffff94
   1aed0:	ldr	r1, [fp, #-112]	; 0xffffff90
   1aed4:	strd	r2, [r1, #8]
   1aed8:	ldr	r3, [fp, #-112]	; 0xffffff90
   1aedc:	mov	r0, r3
   1aee0:	sub	sp, fp, #4
   1aee4:	ldr	fp, [sp]
   1aee8:	add	sp, sp, #4
   1aeec:	pop	{pc}		; (ldr pc, [sp], #4)
   1aef0:	str	fp, [sp, #-8]!
   1aef4:	str	lr, [sp, #4]
   1aef8:	add	fp, sp, #4
   1aefc:	sub	sp, sp, #4080	; 0xff0
   1af00:	str	r0, [fp, #-4072]	; 0xfffff018
   1af04:	str	r1, [fp, #-4076]	; 0xfffff014
   1af08:	str	r2, [fp, #-4080]	; 0xfffff010
   1af0c:	ldr	r3, [fp, #-4072]	; 0xfffff018
   1af10:	cmn	r3, #100	; 0x64
   1af14:	beq	1af28 <__assert_fail@plt+0x9904>
   1af18:	ldr	r3, [fp, #-4076]	; 0xfffff014
   1af1c:	ldrb	r3, [r3]
   1af20:	cmp	r3, #47	; 0x2f
   1af24:	bne	1af3c <__assert_fail@plt+0x9918>
   1af28:	ldr	r1, [fp, #-4080]	; 0xfffff010
   1af2c:	ldr	r0, [fp, #-4076]	; 0xfffff014
   1af30:	bl	1b9a8 <__assert_fail@plt+0xa384>
   1af34:	mov	r3, r0
   1af38:	b	1b15c <__assert_fail@plt+0x9b38>
   1af3c:	sub	r3, fp, #4048	; 0xfd0
   1af40:	sub	r3, r3, #4
   1af44:	sub	r3, r3, #12
   1af48:	ldr	r2, [fp, #-4076]	; 0xfffff014
   1af4c:	ldr	r1, [fp, #-4072]	; 0xfffff018
   1af50:	mov	r0, r3
   1af54:	bl	1cf58 <__assert_fail@plt+0xb934>
   1af58:	str	r0, [fp, #-8]
   1af5c:	ldr	r3, [fp, #-8]
   1af60:	cmp	r3, #0
   1af64:	beq	1b01c <__assert_fail@plt+0x99f8>
   1af68:	ldr	r1, [fp, #-4080]	; 0xfffff010
   1af6c:	ldr	r0, [fp, #-8]
   1af70:	bl	1b9a8 <__assert_fail@plt+0xa384>
   1af74:	str	r0, [fp, #-12]
   1af78:	bl	114bc <__errno_location@plt>
   1af7c:	mov	r3, r0
   1af80:	ldr	r3, [r3]
   1af84:	str	r3, [fp, #-16]
   1af88:	sub	r3, fp, #4048	; 0xfd0
   1af8c:	sub	r3, r3, #4
   1af90:	sub	r3, r3, #12
   1af94:	ldr	r2, [fp, #-8]
   1af98:	cmp	r2, r3
   1af9c:	beq	1afa8 <__assert_fail@plt+0x9984>
   1afa0:	ldr	r0, [fp, #-8]
   1afa4:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   1afa8:	ldr	r3, [fp, #-12]
   1afac:	cmn	r3, #1
   1afb0:	beq	1afbc <__assert_fail@plt+0x9998>
   1afb4:	ldr	r3, [fp, #-12]
   1afb8:	b	1b15c <__assert_fail@plt+0x9b38>
   1afbc:	ldr	r3, [fp, #-16]
   1afc0:	cmp	r3, #20
   1afc4:	beq	1b01c <__assert_fail@plt+0x99f8>
   1afc8:	ldr	r3, [fp, #-16]
   1afcc:	cmp	r3, #2
   1afd0:	beq	1b01c <__assert_fail@plt+0x99f8>
   1afd4:	ldr	r3, [fp, #-16]
   1afd8:	cmp	r3, #1
   1afdc:	beq	1b01c <__assert_fail@plt+0x99f8>
   1afe0:	ldr	r3, [fp, #-16]
   1afe4:	cmp	r3, #13
   1afe8:	beq	1b01c <__assert_fail@plt+0x99f8>
   1afec:	ldr	r3, [fp, #-16]
   1aff0:	cmp	r3, #38	; 0x26
   1aff4:	beq	1b01c <__assert_fail@plt+0x99f8>
   1aff8:	ldr	r3, [fp, #-16]
   1affc:	cmp	r3, #95	; 0x5f
   1b000:	beq	1b01c <__assert_fail@plt+0x99f8>
   1b004:	bl	114bc <__errno_location@plt>
   1b008:	mov	r2, r0
   1b00c:	ldr	r3, [fp, #-16]
   1b010:	str	r3, [r2]
   1b014:	ldr	r3, [fp, #-12]
   1b018:	b	1b15c <__assert_fail@plt+0x9b38>
   1b01c:	sub	r3, fp, #32
   1b020:	mov	r0, r3
   1b024:	bl	1e32c <__assert_fail@plt+0xcd08>
   1b028:	mov	r3, r0
   1b02c:	cmp	r3, #0
   1b030:	beq	1b048 <__assert_fail@plt+0x9a24>
   1b034:	bl	114bc <__errno_location@plt>
   1b038:	mov	r3, r0
   1b03c:	ldr	r3, [r3]
   1b040:	mov	r0, r3
   1b044:	bl	1e1f8 <__assert_fail@plt+0xcbd4>
   1b048:	ldr	r3, [fp, #-4072]	; 0xfffff018
   1b04c:	cmp	r3, #0
   1b050:	blt	1b088 <__assert_fail@plt+0x9a64>
   1b054:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b058:	ldr	r2, [fp, #-4072]	; 0xfffff018
   1b05c:	cmp	r2, r3
   1b060:	bne	1b088 <__assert_fail@plt+0x9a64>
   1b064:	sub	r3, fp, #32
   1b068:	mov	r0, r3
   1b06c:	bl	1e42c <__assert_fail@plt+0xce08>
   1b070:	bl	114bc <__errno_location@plt>
   1b074:	mov	r2, r0
   1b078:	mov	r3, #9
   1b07c:	str	r3, [r2]
   1b080:	mvn	r3, #0
   1b084:	b	1b15c <__assert_fail@plt+0x9b38>
   1b088:	ldr	r0, [fp, #-4072]	; 0xfffff018
   1b08c:	bl	11588 <fchdir@plt>
   1b090:	mov	r3, r0
   1b094:	cmp	r3, #0
   1b098:	beq	1b0d0 <__assert_fail@plt+0x9aac>
   1b09c:	bl	114bc <__errno_location@plt>
   1b0a0:	mov	r3, r0
   1b0a4:	ldr	r3, [r3]
   1b0a8:	str	r3, [fp, #-20]	; 0xffffffec
   1b0ac:	sub	r3, fp, #32
   1b0b0:	mov	r0, r3
   1b0b4:	bl	1e42c <__assert_fail@plt+0xce08>
   1b0b8:	bl	114bc <__errno_location@plt>
   1b0bc:	mov	r2, r0
   1b0c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b0c4:	str	r3, [r2]
   1b0c8:	mvn	r3, #0
   1b0cc:	b	1b15c <__assert_fail@plt+0x9b38>
   1b0d0:	ldr	r1, [fp, #-4080]	; 0xfffff010
   1b0d4:	ldr	r0, [fp, #-4076]	; 0xfffff014
   1b0d8:	bl	1b9a8 <__assert_fail@plt+0xa384>
   1b0dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b0e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0e4:	cmn	r3, #1
   1b0e8:	bne	1b0fc <__assert_fail@plt+0x9ad8>
   1b0ec:	bl	114bc <__errno_location@plt>
   1b0f0:	mov	r3, r0
   1b0f4:	ldr	r3, [r3]
   1b0f8:	b	1b100 <__assert_fail@plt+0x9adc>
   1b0fc:	mov	r3, #0
   1b100:	str	r3, [fp, #-20]	; 0xffffffec
   1b104:	sub	r3, fp, #32
   1b108:	mov	r0, r3
   1b10c:	bl	1e3c8 <__assert_fail@plt+0xcda4>
   1b110:	mov	r3, r0
   1b114:	cmp	r3, #0
   1b118:	beq	1b130 <__assert_fail@plt+0x9b0c>
   1b11c:	bl	114bc <__errno_location@plt>
   1b120:	mov	r3, r0
   1b124:	ldr	r3, [r3]
   1b128:	mov	r0, r3
   1b12c:	bl	1e240 <__assert_fail@plt+0xcc1c>
   1b130:	sub	r3, fp, #32
   1b134:	mov	r0, r3
   1b138:	bl	1e42c <__assert_fail@plt+0xce08>
   1b13c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b140:	cmp	r3, #0
   1b144:	beq	1b158 <__assert_fail@plt+0x9b34>
   1b148:	bl	114bc <__errno_location@plt>
   1b14c:	mov	r2, r0
   1b150:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b154:	str	r3, [r2]
   1b158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b15c:	mov	r0, r3
   1b160:	sub	sp, fp, #4
   1b164:	ldr	fp, [sp]
   1b168:	add	sp, sp, #4
   1b16c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b170:	str	fp, [sp, #-8]!
   1b174:	str	lr, [sp, #4]
   1b178:	add	fp, sp, #4
   1b17c:	sub	sp, sp, #4080	; 0xff0
   1b180:	str	r0, [fp, #-4072]	; 0xfffff018
   1b184:	str	r1, [fp, #-4076]	; 0xfffff014
   1b188:	str	r2, [fp, #-4080]	; 0xfffff010
   1b18c:	ldr	r3, [fp, #-4072]	; 0xfffff018
   1b190:	cmn	r3, #100	; 0x64
   1b194:	beq	1b1a8 <__assert_fail@plt+0x9b84>
   1b198:	ldr	r3, [fp, #-4076]	; 0xfffff014
   1b19c:	ldrb	r3, [r3]
   1b1a0:	cmp	r3, #47	; 0x2f
   1b1a4:	bne	1b1bc <__assert_fail@plt+0x9b98>
   1b1a8:	ldr	r1, [fp, #-4080]	; 0xfffff010
   1b1ac:	ldr	r0, [fp, #-4076]	; 0xfffff014
   1b1b0:	bl	1b9f4 <__assert_fail@plt+0xa3d0>
   1b1b4:	mov	r3, r0
   1b1b8:	b	1b3dc <__assert_fail@plt+0x9db8>
   1b1bc:	sub	r3, fp, #4048	; 0xfd0
   1b1c0:	sub	r3, r3, #4
   1b1c4:	sub	r3, r3, #12
   1b1c8:	ldr	r2, [fp, #-4076]	; 0xfffff014
   1b1cc:	ldr	r1, [fp, #-4072]	; 0xfffff018
   1b1d0:	mov	r0, r3
   1b1d4:	bl	1cf58 <__assert_fail@plt+0xb934>
   1b1d8:	str	r0, [fp, #-8]
   1b1dc:	ldr	r3, [fp, #-8]
   1b1e0:	cmp	r3, #0
   1b1e4:	beq	1b29c <__assert_fail@plt+0x9c78>
   1b1e8:	ldr	r1, [fp, #-4080]	; 0xfffff010
   1b1ec:	ldr	r0, [fp, #-8]
   1b1f0:	bl	1b9f4 <__assert_fail@plt+0xa3d0>
   1b1f4:	str	r0, [fp, #-12]
   1b1f8:	bl	114bc <__errno_location@plt>
   1b1fc:	mov	r3, r0
   1b200:	ldr	r3, [r3]
   1b204:	str	r3, [fp, #-16]
   1b208:	sub	r3, fp, #4048	; 0xfd0
   1b20c:	sub	r3, r3, #4
   1b210:	sub	r3, r3, #12
   1b214:	ldr	r2, [fp, #-8]
   1b218:	cmp	r2, r3
   1b21c:	beq	1b228 <__assert_fail@plt+0x9c04>
   1b220:	ldr	r0, [fp, #-8]
   1b224:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   1b228:	ldr	r3, [fp, #-12]
   1b22c:	cmn	r3, #1
   1b230:	beq	1b23c <__assert_fail@plt+0x9c18>
   1b234:	ldr	r3, [fp, #-12]
   1b238:	b	1b3dc <__assert_fail@plt+0x9db8>
   1b23c:	ldr	r3, [fp, #-16]
   1b240:	cmp	r3, #20
   1b244:	beq	1b29c <__assert_fail@plt+0x9c78>
   1b248:	ldr	r3, [fp, #-16]
   1b24c:	cmp	r3, #2
   1b250:	beq	1b29c <__assert_fail@plt+0x9c78>
   1b254:	ldr	r3, [fp, #-16]
   1b258:	cmp	r3, #1
   1b25c:	beq	1b29c <__assert_fail@plt+0x9c78>
   1b260:	ldr	r3, [fp, #-16]
   1b264:	cmp	r3, #13
   1b268:	beq	1b29c <__assert_fail@plt+0x9c78>
   1b26c:	ldr	r3, [fp, #-16]
   1b270:	cmp	r3, #38	; 0x26
   1b274:	beq	1b29c <__assert_fail@plt+0x9c78>
   1b278:	ldr	r3, [fp, #-16]
   1b27c:	cmp	r3, #95	; 0x5f
   1b280:	beq	1b29c <__assert_fail@plt+0x9c78>
   1b284:	bl	114bc <__errno_location@plt>
   1b288:	mov	r2, r0
   1b28c:	ldr	r3, [fp, #-16]
   1b290:	str	r3, [r2]
   1b294:	ldr	r3, [fp, #-12]
   1b298:	b	1b3dc <__assert_fail@plt+0x9db8>
   1b29c:	sub	r3, fp, #32
   1b2a0:	mov	r0, r3
   1b2a4:	bl	1e32c <__assert_fail@plt+0xcd08>
   1b2a8:	mov	r3, r0
   1b2ac:	cmp	r3, #0
   1b2b0:	beq	1b2c8 <__assert_fail@plt+0x9ca4>
   1b2b4:	bl	114bc <__errno_location@plt>
   1b2b8:	mov	r3, r0
   1b2bc:	ldr	r3, [r3]
   1b2c0:	mov	r0, r3
   1b2c4:	bl	1e1f8 <__assert_fail@plt+0xcbd4>
   1b2c8:	ldr	r3, [fp, #-4072]	; 0xfffff018
   1b2cc:	cmp	r3, #0
   1b2d0:	blt	1b308 <__assert_fail@plt+0x9ce4>
   1b2d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b2d8:	ldr	r2, [fp, #-4072]	; 0xfffff018
   1b2dc:	cmp	r2, r3
   1b2e0:	bne	1b308 <__assert_fail@plt+0x9ce4>
   1b2e4:	sub	r3, fp, #32
   1b2e8:	mov	r0, r3
   1b2ec:	bl	1e42c <__assert_fail@plt+0xce08>
   1b2f0:	bl	114bc <__errno_location@plt>
   1b2f4:	mov	r2, r0
   1b2f8:	mov	r3, #9
   1b2fc:	str	r3, [r2]
   1b300:	mvn	r3, #0
   1b304:	b	1b3dc <__assert_fail@plt+0x9db8>
   1b308:	ldr	r0, [fp, #-4072]	; 0xfffff018
   1b30c:	bl	11588 <fchdir@plt>
   1b310:	mov	r3, r0
   1b314:	cmp	r3, #0
   1b318:	beq	1b350 <__assert_fail@plt+0x9d2c>
   1b31c:	bl	114bc <__errno_location@plt>
   1b320:	mov	r3, r0
   1b324:	ldr	r3, [r3]
   1b328:	str	r3, [fp, #-20]	; 0xffffffec
   1b32c:	sub	r3, fp, #32
   1b330:	mov	r0, r3
   1b334:	bl	1e42c <__assert_fail@plt+0xce08>
   1b338:	bl	114bc <__errno_location@plt>
   1b33c:	mov	r2, r0
   1b340:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b344:	str	r3, [r2]
   1b348:	mvn	r3, #0
   1b34c:	b	1b3dc <__assert_fail@plt+0x9db8>
   1b350:	ldr	r1, [fp, #-4080]	; 0xfffff010
   1b354:	ldr	r0, [fp, #-4076]	; 0xfffff014
   1b358:	bl	1b9f4 <__assert_fail@plt+0xa3d0>
   1b35c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b360:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b364:	cmn	r3, #1
   1b368:	bne	1b37c <__assert_fail@plt+0x9d58>
   1b36c:	bl	114bc <__errno_location@plt>
   1b370:	mov	r3, r0
   1b374:	ldr	r3, [r3]
   1b378:	b	1b380 <__assert_fail@plt+0x9d5c>
   1b37c:	mov	r3, #0
   1b380:	str	r3, [fp, #-20]	; 0xffffffec
   1b384:	sub	r3, fp, #32
   1b388:	mov	r0, r3
   1b38c:	bl	1e3c8 <__assert_fail@plt+0xcda4>
   1b390:	mov	r3, r0
   1b394:	cmp	r3, #0
   1b398:	beq	1b3b0 <__assert_fail@plt+0x9d8c>
   1b39c:	bl	114bc <__errno_location@plt>
   1b3a0:	mov	r3, r0
   1b3a4:	ldr	r3, [r3]
   1b3a8:	mov	r0, r3
   1b3ac:	bl	1e240 <__assert_fail@plt+0xcc1c>
   1b3b0:	sub	r3, fp, #32
   1b3b4:	mov	r0, r3
   1b3b8:	bl	1e42c <__assert_fail@plt+0xce08>
   1b3bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b3c0:	cmp	r3, #0
   1b3c4:	beq	1b3d8 <__assert_fail@plt+0x9db4>
   1b3c8:	bl	114bc <__errno_location@plt>
   1b3cc:	mov	r2, r0
   1b3d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b3d4:	str	r3, [r2]
   1b3d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b3dc:	mov	r0, r3
   1b3e0:	sub	sp, fp, #4
   1b3e4:	ldr	fp, [sp]
   1b3e8:	add	sp, sp, #4
   1b3ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3f0:	str	fp, [sp, #-8]!
   1b3f4:	str	lr, [sp, #4]
   1b3f8:	add	fp, sp, #4
   1b3fc:	sub	sp, sp, #4080	; 0xff0
   1b400:	str	r0, [fp, #-4072]	; 0xfffff018
   1b404:	str	r1, [fp, #-4076]	; 0xfffff014
   1b408:	str	r2, [fp, #-4080]	; 0xfffff010
   1b40c:	ldr	r3, [fp, #-4072]	; 0xfffff018
   1b410:	cmn	r3, #100	; 0x64
   1b414:	beq	1b428 <__assert_fail@plt+0x9e04>
   1b418:	ldr	r3, [fp, #-4076]	; 0xfffff014
   1b41c:	ldrb	r3, [r3]
   1b420:	cmp	r3, #47	; 0x2f
   1b424:	bne	1b43c <__assert_fail@plt+0x9e18>
   1b428:	ldr	r1, [fp, #-4080]	; 0xfffff010
   1b42c:	ldr	r0, [fp, #-4076]	; 0xfffff014
   1b430:	bl	114f8 <setfilecon@plt>
   1b434:	mov	r3, r0
   1b438:	b	1b65c <__assert_fail@plt+0xa038>
   1b43c:	sub	r3, fp, #4048	; 0xfd0
   1b440:	sub	r3, r3, #4
   1b444:	sub	r3, r3, #12
   1b448:	ldr	r2, [fp, #-4076]	; 0xfffff014
   1b44c:	ldr	r1, [fp, #-4072]	; 0xfffff018
   1b450:	mov	r0, r3
   1b454:	bl	1cf58 <__assert_fail@plt+0xb934>
   1b458:	str	r0, [fp, #-8]
   1b45c:	ldr	r3, [fp, #-8]
   1b460:	cmp	r3, #0
   1b464:	beq	1b51c <__assert_fail@plt+0x9ef8>
   1b468:	ldr	r1, [fp, #-4080]	; 0xfffff010
   1b46c:	ldr	r0, [fp, #-8]
   1b470:	bl	114f8 <setfilecon@plt>
   1b474:	str	r0, [fp, #-12]
   1b478:	bl	114bc <__errno_location@plt>
   1b47c:	mov	r3, r0
   1b480:	ldr	r3, [r3]
   1b484:	str	r3, [fp, #-16]
   1b488:	sub	r3, fp, #4048	; 0xfd0
   1b48c:	sub	r3, r3, #4
   1b490:	sub	r3, r3, #12
   1b494:	ldr	r2, [fp, #-8]
   1b498:	cmp	r2, r3
   1b49c:	beq	1b4a8 <__assert_fail@plt+0x9e84>
   1b4a0:	ldr	r0, [fp, #-8]
   1b4a4:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   1b4a8:	ldr	r3, [fp, #-12]
   1b4ac:	cmn	r3, #1
   1b4b0:	beq	1b4bc <__assert_fail@plt+0x9e98>
   1b4b4:	ldr	r3, [fp, #-12]
   1b4b8:	b	1b65c <__assert_fail@plt+0xa038>
   1b4bc:	ldr	r3, [fp, #-16]
   1b4c0:	cmp	r3, #20
   1b4c4:	beq	1b51c <__assert_fail@plt+0x9ef8>
   1b4c8:	ldr	r3, [fp, #-16]
   1b4cc:	cmp	r3, #2
   1b4d0:	beq	1b51c <__assert_fail@plt+0x9ef8>
   1b4d4:	ldr	r3, [fp, #-16]
   1b4d8:	cmp	r3, #1
   1b4dc:	beq	1b51c <__assert_fail@plt+0x9ef8>
   1b4e0:	ldr	r3, [fp, #-16]
   1b4e4:	cmp	r3, #13
   1b4e8:	beq	1b51c <__assert_fail@plt+0x9ef8>
   1b4ec:	ldr	r3, [fp, #-16]
   1b4f0:	cmp	r3, #38	; 0x26
   1b4f4:	beq	1b51c <__assert_fail@plt+0x9ef8>
   1b4f8:	ldr	r3, [fp, #-16]
   1b4fc:	cmp	r3, #95	; 0x5f
   1b500:	beq	1b51c <__assert_fail@plt+0x9ef8>
   1b504:	bl	114bc <__errno_location@plt>
   1b508:	mov	r2, r0
   1b50c:	ldr	r3, [fp, #-16]
   1b510:	str	r3, [r2]
   1b514:	ldr	r3, [fp, #-12]
   1b518:	b	1b65c <__assert_fail@plt+0xa038>
   1b51c:	sub	r3, fp, #32
   1b520:	mov	r0, r3
   1b524:	bl	1e32c <__assert_fail@plt+0xcd08>
   1b528:	mov	r3, r0
   1b52c:	cmp	r3, #0
   1b530:	beq	1b548 <__assert_fail@plt+0x9f24>
   1b534:	bl	114bc <__errno_location@plt>
   1b538:	mov	r3, r0
   1b53c:	ldr	r3, [r3]
   1b540:	mov	r0, r3
   1b544:	bl	1e1f8 <__assert_fail@plt+0xcbd4>
   1b548:	ldr	r3, [fp, #-4072]	; 0xfffff018
   1b54c:	cmp	r3, #0
   1b550:	blt	1b588 <__assert_fail@plt+0x9f64>
   1b554:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b558:	ldr	r2, [fp, #-4072]	; 0xfffff018
   1b55c:	cmp	r2, r3
   1b560:	bne	1b588 <__assert_fail@plt+0x9f64>
   1b564:	sub	r3, fp, #32
   1b568:	mov	r0, r3
   1b56c:	bl	1e42c <__assert_fail@plt+0xce08>
   1b570:	bl	114bc <__errno_location@plt>
   1b574:	mov	r2, r0
   1b578:	mov	r3, #9
   1b57c:	str	r3, [r2]
   1b580:	mvn	r3, #0
   1b584:	b	1b65c <__assert_fail@plt+0xa038>
   1b588:	ldr	r0, [fp, #-4072]	; 0xfffff018
   1b58c:	bl	11588 <fchdir@plt>
   1b590:	mov	r3, r0
   1b594:	cmp	r3, #0
   1b598:	beq	1b5d0 <__assert_fail@plt+0x9fac>
   1b59c:	bl	114bc <__errno_location@plt>
   1b5a0:	mov	r3, r0
   1b5a4:	ldr	r3, [r3]
   1b5a8:	str	r3, [fp, #-20]	; 0xffffffec
   1b5ac:	sub	r3, fp, #32
   1b5b0:	mov	r0, r3
   1b5b4:	bl	1e42c <__assert_fail@plt+0xce08>
   1b5b8:	bl	114bc <__errno_location@plt>
   1b5bc:	mov	r2, r0
   1b5c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5c4:	str	r3, [r2]
   1b5c8:	mvn	r3, #0
   1b5cc:	b	1b65c <__assert_fail@plt+0xa038>
   1b5d0:	ldr	r1, [fp, #-4080]	; 0xfffff010
   1b5d4:	ldr	r0, [fp, #-4076]	; 0xfffff014
   1b5d8:	bl	114f8 <setfilecon@plt>
   1b5dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b5e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b5e4:	cmn	r3, #1
   1b5e8:	bne	1b5fc <__assert_fail@plt+0x9fd8>
   1b5ec:	bl	114bc <__errno_location@plt>
   1b5f0:	mov	r3, r0
   1b5f4:	ldr	r3, [r3]
   1b5f8:	b	1b600 <__assert_fail@plt+0x9fdc>
   1b5fc:	mov	r3, #0
   1b600:	str	r3, [fp, #-20]	; 0xffffffec
   1b604:	sub	r3, fp, #32
   1b608:	mov	r0, r3
   1b60c:	bl	1e3c8 <__assert_fail@plt+0xcda4>
   1b610:	mov	r3, r0
   1b614:	cmp	r3, #0
   1b618:	beq	1b630 <__assert_fail@plt+0xa00c>
   1b61c:	bl	114bc <__errno_location@plt>
   1b620:	mov	r3, r0
   1b624:	ldr	r3, [r3]
   1b628:	mov	r0, r3
   1b62c:	bl	1e240 <__assert_fail@plt+0xcc1c>
   1b630:	sub	r3, fp, #32
   1b634:	mov	r0, r3
   1b638:	bl	1e42c <__assert_fail@plt+0xce08>
   1b63c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b640:	cmp	r3, #0
   1b644:	beq	1b658 <__assert_fail@plt+0xa034>
   1b648:	bl	114bc <__errno_location@plt>
   1b64c:	mov	r2, r0
   1b650:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b654:	str	r3, [r2]
   1b658:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b65c:	mov	r0, r3
   1b660:	sub	sp, fp, #4
   1b664:	ldr	fp, [sp]
   1b668:	add	sp, sp, #4
   1b66c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b670:	str	fp, [sp, #-8]!
   1b674:	str	lr, [sp, #4]
   1b678:	add	fp, sp, #4
   1b67c:	sub	sp, sp, #4080	; 0xff0
   1b680:	str	r0, [fp, #-4072]	; 0xfffff018
   1b684:	str	r1, [fp, #-4076]	; 0xfffff014
   1b688:	str	r2, [fp, #-4080]	; 0xfffff010
   1b68c:	ldr	r3, [fp, #-4072]	; 0xfffff018
   1b690:	cmn	r3, #100	; 0x64
   1b694:	beq	1b6a8 <__assert_fail@plt+0xa084>
   1b698:	ldr	r3, [fp, #-4076]	; 0xfffff014
   1b69c:	ldrb	r3, [r3]
   1b6a0:	cmp	r3, #47	; 0x2f
   1b6a4:	bne	1b6bc <__assert_fail@plt+0xa098>
   1b6a8:	ldr	r1, [fp, #-4080]	; 0xfffff010
   1b6ac:	ldr	r0, [fp, #-4076]	; 0xfffff014
   1b6b0:	bl	112a0 <lsetfilecon@plt>
   1b6b4:	mov	r3, r0
   1b6b8:	b	1b8dc <__assert_fail@plt+0xa2b8>
   1b6bc:	sub	r3, fp, #4048	; 0xfd0
   1b6c0:	sub	r3, r3, #4
   1b6c4:	sub	r3, r3, #12
   1b6c8:	ldr	r2, [fp, #-4076]	; 0xfffff014
   1b6cc:	ldr	r1, [fp, #-4072]	; 0xfffff018
   1b6d0:	mov	r0, r3
   1b6d4:	bl	1cf58 <__assert_fail@plt+0xb934>
   1b6d8:	str	r0, [fp, #-8]
   1b6dc:	ldr	r3, [fp, #-8]
   1b6e0:	cmp	r3, #0
   1b6e4:	beq	1b79c <__assert_fail@plt+0xa178>
   1b6e8:	ldr	r1, [fp, #-4080]	; 0xfffff010
   1b6ec:	ldr	r0, [fp, #-8]
   1b6f0:	bl	112a0 <lsetfilecon@plt>
   1b6f4:	str	r0, [fp, #-12]
   1b6f8:	bl	114bc <__errno_location@plt>
   1b6fc:	mov	r3, r0
   1b700:	ldr	r3, [r3]
   1b704:	str	r3, [fp, #-16]
   1b708:	sub	r3, fp, #4048	; 0xfd0
   1b70c:	sub	r3, r3, #4
   1b710:	sub	r3, r3, #12
   1b714:	ldr	r2, [fp, #-8]
   1b718:	cmp	r2, r3
   1b71c:	beq	1b728 <__assert_fail@plt+0xa104>
   1b720:	ldr	r0, [fp, #-8]
   1b724:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   1b728:	ldr	r3, [fp, #-12]
   1b72c:	cmn	r3, #1
   1b730:	beq	1b73c <__assert_fail@plt+0xa118>
   1b734:	ldr	r3, [fp, #-12]
   1b738:	b	1b8dc <__assert_fail@plt+0xa2b8>
   1b73c:	ldr	r3, [fp, #-16]
   1b740:	cmp	r3, #20
   1b744:	beq	1b79c <__assert_fail@plt+0xa178>
   1b748:	ldr	r3, [fp, #-16]
   1b74c:	cmp	r3, #2
   1b750:	beq	1b79c <__assert_fail@plt+0xa178>
   1b754:	ldr	r3, [fp, #-16]
   1b758:	cmp	r3, #1
   1b75c:	beq	1b79c <__assert_fail@plt+0xa178>
   1b760:	ldr	r3, [fp, #-16]
   1b764:	cmp	r3, #13
   1b768:	beq	1b79c <__assert_fail@plt+0xa178>
   1b76c:	ldr	r3, [fp, #-16]
   1b770:	cmp	r3, #38	; 0x26
   1b774:	beq	1b79c <__assert_fail@plt+0xa178>
   1b778:	ldr	r3, [fp, #-16]
   1b77c:	cmp	r3, #95	; 0x5f
   1b780:	beq	1b79c <__assert_fail@plt+0xa178>
   1b784:	bl	114bc <__errno_location@plt>
   1b788:	mov	r2, r0
   1b78c:	ldr	r3, [fp, #-16]
   1b790:	str	r3, [r2]
   1b794:	ldr	r3, [fp, #-12]
   1b798:	b	1b8dc <__assert_fail@plt+0xa2b8>
   1b79c:	sub	r3, fp, #32
   1b7a0:	mov	r0, r3
   1b7a4:	bl	1e32c <__assert_fail@plt+0xcd08>
   1b7a8:	mov	r3, r0
   1b7ac:	cmp	r3, #0
   1b7b0:	beq	1b7c8 <__assert_fail@plt+0xa1a4>
   1b7b4:	bl	114bc <__errno_location@plt>
   1b7b8:	mov	r3, r0
   1b7bc:	ldr	r3, [r3]
   1b7c0:	mov	r0, r3
   1b7c4:	bl	1e1f8 <__assert_fail@plt+0xcbd4>
   1b7c8:	ldr	r3, [fp, #-4072]	; 0xfffff018
   1b7cc:	cmp	r3, #0
   1b7d0:	blt	1b808 <__assert_fail@plt+0xa1e4>
   1b7d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b7d8:	ldr	r2, [fp, #-4072]	; 0xfffff018
   1b7dc:	cmp	r2, r3
   1b7e0:	bne	1b808 <__assert_fail@plt+0xa1e4>
   1b7e4:	sub	r3, fp, #32
   1b7e8:	mov	r0, r3
   1b7ec:	bl	1e42c <__assert_fail@plt+0xce08>
   1b7f0:	bl	114bc <__errno_location@plt>
   1b7f4:	mov	r2, r0
   1b7f8:	mov	r3, #9
   1b7fc:	str	r3, [r2]
   1b800:	mvn	r3, #0
   1b804:	b	1b8dc <__assert_fail@plt+0xa2b8>
   1b808:	ldr	r0, [fp, #-4072]	; 0xfffff018
   1b80c:	bl	11588 <fchdir@plt>
   1b810:	mov	r3, r0
   1b814:	cmp	r3, #0
   1b818:	beq	1b850 <__assert_fail@plt+0xa22c>
   1b81c:	bl	114bc <__errno_location@plt>
   1b820:	mov	r3, r0
   1b824:	ldr	r3, [r3]
   1b828:	str	r3, [fp, #-20]	; 0xffffffec
   1b82c:	sub	r3, fp, #32
   1b830:	mov	r0, r3
   1b834:	bl	1e42c <__assert_fail@plt+0xce08>
   1b838:	bl	114bc <__errno_location@plt>
   1b83c:	mov	r2, r0
   1b840:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b844:	str	r3, [r2]
   1b848:	mvn	r3, #0
   1b84c:	b	1b8dc <__assert_fail@plt+0xa2b8>
   1b850:	ldr	r1, [fp, #-4080]	; 0xfffff010
   1b854:	ldr	r0, [fp, #-4076]	; 0xfffff014
   1b858:	bl	112a0 <lsetfilecon@plt>
   1b85c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b864:	cmn	r3, #1
   1b868:	bne	1b87c <__assert_fail@plt+0xa258>
   1b86c:	bl	114bc <__errno_location@plt>
   1b870:	mov	r3, r0
   1b874:	ldr	r3, [r3]
   1b878:	b	1b880 <__assert_fail@plt+0xa25c>
   1b87c:	mov	r3, #0
   1b880:	str	r3, [fp, #-20]	; 0xffffffec
   1b884:	sub	r3, fp, #32
   1b888:	mov	r0, r3
   1b88c:	bl	1e3c8 <__assert_fail@plt+0xcda4>
   1b890:	mov	r3, r0
   1b894:	cmp	r3, #0
   1b898:	beq	1b8b0 <__assert_fail@plt+0xa28c>
   1b89c:	bl	114bc <__errno_location@plt>
   1b8a0:	mov	r3, r0
   1b8a4:	ldr	r3, [r3]
   1b8a8:	mov	r0, r3
   1b8ac:	bl	1e240 <__assert_fail@plt+0xcc1c>
   1b8b0:	sub	r3, fp, #32
   1b8b4:	mov	r0, r3
   1b8b8:	bl	1e42c <__assert_fail@plt+0xce08>
   1b8bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b8c0:	cmp	r3, #0
   1b8c4:	beq	1b8d8 <__assert_fail@plt+0xa2b4>
   1b8c8:	bl	114bc <__errno_location@plt>
   1b8cc:	mov	r2, r0
   1b8d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b8d4:	str	r3, [r2]
   1b8d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b8dc:	mov	r0, r3
   1b8e0:	sub	sp, fp, #4
   1b8e4:	ldr	fp, [sp]
   1b8e8:	add	sp, sp, #4
   1b8ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8f0:	str	fp, [sp, #-8]!
   1b8f4:	str	lr, [sp, #4]
   1b8f8:	add	fp, sp, #4
   1b8fc:	sub	sp, sp, #8
   1b900:	str	r0, [fp, #-8]
   1b904:	str	r1, [fp, #-12]
   1b908:	ldr	r3, [fp, #-8]
   1b90c:	cmp	r3, #0
   1b910:	bne	1b92c <__assert_fail@plt+0xa308>
   1b914:	bl	114bc <__errno_location@plt>
   1b918:	mov	r2, r0
   1b91c:	mov	r3, #95	; 0x5f
   1b920:	str	r3, [r2]
   1b924:	mvn	r3, #0
   1b928:	b	1b994 <__assert_fail@plt+0xa370>
   1b92c:	ldr	r3, [fp, #-8]
   1b930:	cmp	r3, #10
   1b934:	bne	1b990 <__assert_fail@plt+0xa36c>
   1b938:	ldr	r3, [fp, #-12]
   1b93c:	ldr	r3, [r3]
   1b940:	movw	r1, #1052	; 0x41c
   1b944:	movt	r1, #2
   1b948:	mov	r0, r3
   1b94c:	bl	1127c <strcmp@plt>
   1b950:	mov	r3, r0
   1b954:	cmp	r3, #0
   1b958:	bne	1b990 <__assert_fail@plt+0xa36c>
   1b95c:	ldr	r3, [fp, #-12]
   1b960:	ldr	r3, [r3]
   1b964:	mov	r0, r3
   1b968:	bl	115a0 <freecon@plt>
   1b96c:	ldr	r3, [fp, #-12]
   1b970:	mov	r2, #0
   1b974:	str	r2, [r3]
   1b978:	bl	114bc <__errno_location@plt>
   1b97c:	mov	r2, r0
   1b980:	mov	r3, #61	; 0x3d
   1b984:	str	r3, [r2]
   1b988:	mvn	r3, #0
   1b98c:	b	1b994 <__assert_fail@plt+0xa370>
   1b990:	ldr	r3, [fp, #-8]
   1b994:	mov	r0, r3
   1b998:	sub	sp, fp, #4
   1b99c:	ldr	fp, [sp]
   1b9a0:	add	sp, sp, #4
   1b9a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9a8:	str	fp, [sp, #-8]!
   1b9ac:	str	lr, [sp, #4]
   1b9b0:	add	fp, sp, #4
   1b9b4:	sub	sp, sp, #16
   1b9b8:	str	r0, [fp, #-16]
   1b9bc:	str	r1, [fp, #-20]	; 0xffffffec
   1b9c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b9c4:	ldr	r0, [fp, #-16]
   1b9c8:	bl	11480 <getfilecon@plt>
   1b9cc:	str	r0, [fp, #-8]
   1b9d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b9d4:	ldr	r0, [fp, #-8]
   1b9d8:	bl	1b8f0 <__assert_fail@plt+0xa2cc>
   1b9dc:	mov	r3, r0
   1b9e0:	mov	r0, r3
   1b9e4:	sub	sp, fp, #4
   1b9e8:	ldr	fp, [sp]
   1b9ec:	add	sp, sp, #4
   1b9f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9f4:	str	fp, [sp, #-8]!
   1b9f8:	str	lr, [sp, #4]
   1b9fc:	add	fp, sp, #4
   1ba00:	sub	sp, sp, #16
   1ba04:	str	r0, [fp, #-16]
   1ba08:	str	r1, [fp, #-20]	; 0xffffffec
   1ba0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ba10:	ldr	r0, [fp, #-16]
   1ba14:	bl	113f0 <lgetfilecon@plt>
   1ba18:	str	r0, [fp, #-8]
   1ba1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ba20:	ldr	r0, [fp, #-8]
   1ba24:	bl	1b8f0 <__assert_fail@plt+0xa2cc>
   1ba28:	mov	r3, r0
   1ba2c:	mov	r0, r3
   1ba30:	sub	sp, fp, #4
   1ba34:	ldr	fp, [sp]
   1ba38:	add	sp, sp, #4
   1ba3c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba40:	str	fp, [sp, #-8]!
   1ba44:	str	lr, [sp, #4]
   1ba48:	add	fp, sp, #4
   1ba4c:	sub	sp, sp, #16
   1ba50:	str	r0, [fp, #-16]
   1ba54:	str	r1, [fp, #-20]	; 0xffffffec
   1ba58:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ba5c:	ldr	r0, [fp, #-16]
   1ba60:	bl	11330 <fgetfilecon@plt>
   1ba64:	str	r0, [fp, #-8]
   1ba68:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ba6c:	ldr	r0, [fp, #-8]
   1ba70:	bl	1b8f0 <__assert_fail@plt+0xa2cc>
   1ba74:	mov	r3, r0
   1ba78:	mov	r0, r3
   1ba7c:	sub	sp, fp, #4
   1ba80:	ldr	fp, [sp]
   1ba84:	add	sp, sp, #4
   1ba88:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba8c:	str	fp, [sp, #-8]!
   1ba90:	str	lr, [sp, #4]
   1ba94:	add	fp, sp, #4
   1ba98:	sub	sp, sp, #16
   1ba9c:	str	r0, [fp, #-16]
   1baa0:	ldr	r3, [fp, #-16]
   1baa4:	cmp	r3, #0
   1baa8:	blt	1baf4 <__assert_fail@plt+0xa4d0>
   1baac:	ldr	r3, [fp, #-16]
   1bab0:	cmp	r3, #2
   1bab4:	bgt	1baf4 <__assert_fail@plt+0xa4d0>
   1bab8:	ldr	r0, [fp, #-16]
   1babc:	bl	1e484 <__assert_fail@plt+0xce60>
   1bac0:	str	r0, [fp, #-8]
   1bac4:	bl	114bc <__errno_location@plt>
   1bac8:	mov	r3, r0
   1bacc:	ldr	r3, [r3]
   1bad0:	str	r3, [fp, #-12]
   1bad4:	ldr	r0, [fp, #-16]
   1bad8:	bl	115f4 <close@plt>
   1badc:	bl	114bc <__errno_location@plt>
   1bae0:	mov	r2, r0
   1bae4:	ldr	r3, [fp, #-12]
   1bae8:	str	r3, [r2]
   1baec:	ldr	r3, [fp, #-8]
   1baf0:	str	r3, [fp, #-16]
   1baf4:	ldr	r3, [fp, #-16]
   1baf8:	mov	r0, r3
   1bafc:	sub	sp, fp, #4
   1bb00:	ldr	fp, [sp]
   1bb04:	add	sp, sp, #4
   1bb08:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb0c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1bb10:	strd	r6, [sp, #8]
   1bb14:	str	fp, [sp, #16]
   1bb18:	str	lr, [sp, #20]
   1bb1c:	add	fp, sp, #20
   1bb20:	sub	sp, sp, #48	; 0x30
   1bb24:	str	r0, [fp, #-24]	; 0xffffffe8
   1bb28:	str	r1, [fp, #-28]	; 0xffffffe4
   1bb2c:	str	r2, [fp, #-32]	; 0xffffffe0
   1bb30:	str	r3, [fp, #-36]	; 0xffffffdc
   1bb34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb38:	cmp	r3, #0
   1bb3c:	beq	1bb64 <__assert_fail@plt+0xa540>
   1bb40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bb44:	str	r3, [sp]
   1bb48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bb4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bb50:	movw	r1, #1064	; 0x428
   1bb54:	movt	r1, #2
   1bb58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb5c:	bl	114b0 <fprintf@plt>
   1bb60:	b	1bb7c <__assert_fail@plt+0xa558>
   1bb64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bb68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bb6c:	movw	r1, #1076	; 0x434
   1bb70:	movt	r1, #2
   1bb74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb78:	bl	114b0 <fprintf@plt>
   1bb7c:	movw	r0, #1084	; 0x43c
   1bb80:	movt	r0, #2
   1bb84:	bl	11474 <gettext@plt>
   1bb88:	mov	r2, r0
   1bb8c:	movw	r3, #2022	; 0x7e6
   1bb90:	movw	r1, #1868	; 0x74c
   1bb94:	movt	r1, #2
   1bb98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb9c:	bl	114b0 <fprintf@plt>
   1bba0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bba4:	mov	r0, #10
   1bba8:	bl	11300 <fputc_unlocked@plt>
   1bbac:	movw	r0, #1088	; 0x440
   1bbb0:	movt	r0, #2
   1bbb4:	bl	11474 <gettext@plt>
   1bbb8:	mov	r3, r0
   1bbbc:	movw	r2, #1260	; 0x4ec
   1bbc0:	movt	r2, #2
   1bbc4:	mov	r1, r3
   1bbc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bbcc:	bl	114b0 <fprintf@plt>
   1bbd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bbd4:	mov	r0, #10
   1bbd8:	bl	11300 <fputc_unlocked@plt>
   1bbdc:	ldr	r3, [fp, #8]
   1bbe0:	cmp	r3, #9
   1bbe4:	ldrls	pc, [pc, r3, lsl #2]
   1bbe8:	b	1bfc8 <__assert_fail@plt+0xa9a4>
   1bbec:	andeq	ip, r1, r4, ror r0
   1bbf0:	andeq	fp, r1, r4, lsl ip
   1bbf4:	andeq	fp, r1, ip, lsr ip
   1bbf8:	andeq	fp, r1, ip, ror #24
   1bbfc:			; <UNDEFINED> instruction: 0x0001bcb0
   1bc00:	andeq	fp, r1, ip, lsl #26
   1bc04:	andeq	fp, r1, r8, ror sp
   1bc08:	strdeq	fp, [r1], -r4
   1bc0c:	andeq	fp, r1, r0, lsl #29
   1bc10:	andeq	fp, r1, ip, lsl pc
   1bc14:	movw	r0, #1296	; 0x510
   1bc18:	movt	r0, #2
   1bc1c:	bl	11474 <gettext@plt>
   1bc20:	mov	r1, r0
   1bc24:	ldr	r3, [fp, #4]
   1bc28:	ldr	r3, [r3]
   1bc2c:	mov	r2, r3
   1bc30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc34:	bl	114b0 <fprintf@plt>
   1bc38:	b	1c078 <__assert_fail@plt+0xaa54>
   1bc3c:	movw	r0, #1312	; 0x520
   1bc40:	movt	r0, #2
   1bc44:	bl	11474 <gettext@plt>
   1bc48:	mov	r1, r0
   1bc4c:	ldr	r3, [fp, #4]
   1bc50:	ldr	r2, [r3]
   1bc54:	ldr	r3, [fp, #4]
   1bc58:	add	r3, r3, #4
   1bc5c:	ldr	r3, [r3]
   1bc60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc64:	bl	114b0 <fprintf@plt>
   1bc68:	b	1c078 <__assert_fail@plt+0xaa54>
   1bc6c:	movw	r0, #1336	; 0x538
   1bc70:	movt	r0, #2
   1bc74:	bl	11474 <gettext@plt>
   1bc78:	ldr	r3, [fp, #4]
   1bc7c:	ldr	r2, [r3]
   1bc80:	ldr	r3, [fp, #4]
   1bc84:	add	r3, r3, #4
   1bc88:	ldr	r1, [r3]
   1bc8c:	ldr	r3, [fp, #4]
   1bc90:	add	r3, r3, #8
   1bc94:	ldr	r3, [r3]
   1bc98:	str	r3, [sp]
   1bc9c:	mov	r3, r1
   1bca0:	mov	r1, r0
   1bca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bca8:	bl	114b0 <fprintf@plt>
   1bcac:	b	1c078 <__assert_fail@plt+0xaa54>
   1bcb0:	movw	r0, #1364	; 0x554
   1bcb4:	movt	r0, #2
   1bcb8:	bl	11474 <gettext@plt>
   1bcbc:	mov	ip, r0
   1bcc0:	ldr	r3, [fp, #4]
   1bcc4:	ldr	r1, [r3]
   1bcc8:	ldr	r3, [fp, #4]
   1bccc:	add	r3, r3, #4
   1bcd0:	ldr	r0, [r3]
   1bcd4:	ldr	r3, [fp, #4]
   1bcd8:	add	r3, r3, #8
   1bcdc:	ldr	r3, [r3]
   1bce0:	ldr	r2, [fp, #4]
   1bce4:	add	r2, r2, #12
   1bce8:	ldr	r2, [r2]
   1bcec:	str	r2, [sp, #4]
   1bcf0:	str	r3, [sp]
   1bcf4:	mov	r3, r0
   1bcf8:	mov	r2, r1
   1bcfc:	mov	r1, ip
   1bd00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd04:	bl	114b0 <fprintf@plt>
   1bd08:	b	1c078 <__assert_fail@plt+0xaa54>
   1bd0c:	movw	r0, #1396	; 0x574
   1bd10:	movt	r0, #2
   1bd14:	bl	11474 <gettext@plt>
   1bd18:	mov	lr, r0
   1bd1c:	ldr	r3, [fp, #4]
   1bd20:	ldr	r0, [r3]
   1bd24:	ldr	r3, [fp, #4]
   1bd28:	add	r3, r3, #4
   1bd2c:	ldr	ip, [r3]
   1bd30:	ldr	r3, [fp, #4]
   1bd34:	add	r3, r3, #8
   1bd38:	ldr	r3, [r3]
   1bd3c:	ldr	r2, [fp, #4]
   1bd40:	add	r2, r2, #12
   1bd44:	ldr	r2, [r2]
   1bd48:	ldr	r1, [fp, #4]
   1bd4c:	add	r1, r1, #16
   1bd50:	ldr	r1, [r1]
   1bd54:	str	r1, [sp, #8]
   1bd58:	str	r2, [sp, #4]
   1bd5c:	str	r3, [sp]
   1bd60:	mov	r3, ip
   1bd64:	mov	r2, r0
   1bd68:	mov	r1, lr
   1bd6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd70:	bl	114b0 <fprintf@plt>
   1bd74:	b	1c078 <__assert_fail@plt+0xaa54>
   1bd78:	movw	r0, #1432	; 0x598
   1bd7c:	movt	r0, #2
   1bd80:	bl	11474 <gettext@plt>
   1bd84:	mov	r4, r0
   1bd88:	ldr	r3, [fp, #4]
   1bd8c:	ldr	ip, [r3]
   1bd90:	ldr	r3, [fp, #4]
   1bd94:	add	r3, r3, #4
   1bd98:	ldr	lr, [r3]
   1bd9c:	ldr	r3, [fp, #4]
   1bda0:	add	r3, r3, #8
   1bda4:	ldr	r3, [r3]
   1bda8:	ldr	r2, [fp, #4]
   1bdac:	add	r2, r2, #12
   1bdb0:	ldr	r2, [r2]
   1bdb4:	ldr	r1, [fp, #4]
   1bdb8:	add	r1, r1, #16
   1bdbc:	ldr	r1, [r1]
   1bdc0:	ldr	r0, [fp, #4]
   1bdc4:	add	r0, r0, #20
   1bdc8:	ldr	r0, [r0]
   1bdcc:	str	r0, [sp, #12]
   1bdd0:	str	r1, [sp, #8]
   1bdd4:	str	r2, [sp, #4]
   1bdd8:	str	r3, [sp]
   1bddc:	mov	r3, lr
   1bde0:	mov	r2, ip
   1bde4:	mov	r1, r4
   1bde8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bdec:	bl	114b0 <fprintf@plt>
   1bdf0:	b	1c078 <__assert_fail@plt+0xaa54>
   1bdf4:	movw	r0, #1472	; 0x5c0
   1bdf8:	movt	r0, #2
   1bdfc:	bl	11474 <gettext@plt>
   1be00:	mov	r5, r0
   1be04:	ldr	r3, [fp, #4]
   1be08:	ldr	lr, [r3]
   1be0c:	ldr	r3, [fp, #4]
   1be10:	add	r3, r3, #4
   1be14:	ldr	r4, [r3]
   1be18:	ldr	r3, [fp, #4]
   1be1c:	add	r3, r3, #8
   1be20:	ldr	r3, [r3]
   1be24:	ldr	r2, [fp, #4]
   1be28:	add	r2, r2, #12
   1be2c:	ldr	r2, [r2]
   1be30:	ldr	r1, [fp, #4]
   1be34:	add	r1, r1, #16
   1be38:	ldr	r1, [r1]
   1be3c:	ldr	r0, [fp, #4]
   1be40:	add	r0, r0, #20
   1be44:	ldr	r0, [r0]
   1be48:	ldr	ip, [fp, #4]
   1be4c:	add	ip, ip, #24
   1be50:	ldr	ip, [ip]
   1be54:	str	ip, [sp, #16]
   1be58:	str	r0, [sp, #12]
   1be5c:	str	r1, [sp, #8]
   1be60:	str	r2, [sp, #4]
   1be64:	str	r3, [sp]
   1be68:	mov	r3, r4
   1be6c:	mov	r2, lr
   1be70:	mov	r1, r5
   1be74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be78:	bl	114b0 <fprintf@plt>
   1be7c:	b	1c078 <__assert_fail@plt+0xaa54>
   1be80:	movw	r0, #1516	; 0x5ec
   1be84:	movt	r0, #2
   1be88:	bl	11474 <gettext@plt>
   1be8c:	mov	r6, r0
   1be90:	ldr	r3, [fp, #4]
   1be94:	ldr	r4, [r3]
   1be98:	ldr	r3, [fp, #4]
   1be9c:	add	r3, r3, #4
   1bea0:	ldr	r5, [r3]
   1bea4:	ldr	r3, [fp, #4]
   1bea8:	add	r3, r3, #8
   1beac:	ldr	r3, [r3]
   1beb0:	ldr	r2, [fp, #4]
   1beb4:	add	r2, r2, #12
   1beb8:	ldr	r2, [r2]
   1bebc:	ldr	r1, [fp, #4]
   1bec0:	add	r1, r1, #16
   1bec4:	ldr	r1, [r1]
   1bec8:	ldr	r0, [fp, #4]
   1becc:	add	r0, r0, #20
   1bed0:	ldr	r0, [r0]
   1bed4:	ldr	ip, [fp, #4]
   1bed8:	add	ip, ip, #24
   1bedc:	ldr	ip, [ip]
   1bee0:	ldr	lr, [fp, #4]
   1bee4:	add	lr, lr, #28
   1bee8:	ldr	lr, [lr]
   1beec:	str	lr, [sp, #20]
   1bef0:	str	ip, [sp, #16]
   1bef4:	str	r0, [sp, #12]
   1bef8:	str	r1, [sp, #8]
   1befc:	str	r2, [sp, #4]
   1bf00:	str	r3, [sp]
   1bf04:	mov	r3, r5
   1bf08:	mov	r2, r4
   1bf0c:	mov	r1, r6
   1bf10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf14:	bl	114b0 <fprintf@plt>
   1bf18:	b	1c078 <__assert_fail@plt+0xaa54>
   1bf1c:	movw	r0, #1564	; 0x61c
   1bf20:	movt	r0, #2
   1bf24:	bl	11474 <gettext@plt>
   1bf28:	mov	r7, r0
   1bf2c:	ldr	r3, [fp, #4]
   1bf30:	ldr	r5, [r3]
   1bf34:	ldr	r3, [fp, #4]
   1bf38:	add	r3, r3, #4
   1bf3c:	ldr	r6, [r3]
   1bf40:	ldr	r3, [fp, #4]
   1bf44:	add	r3, r3, #8
   1bf48:	ldr	r3, [r3]
   1bf4c:	ldr	r2, [fp, #4]
   1bf50:	add	r2, r2, #12
   1bf54:	ldr	r2, [r2]
   1bf58:	ldr	r1, [fp, #4]
   1bf5c:	add	r1, r1, #16
   1bf60:	ldr	r1, [r1]
   1bf64:	ldr	r0, [fp, #4]
   1bf68:	add	r0, r0, #20
   1bf6c:	ldr	r0, [r0]
   1bf70:	ldr	ip, [fp, #4]
   1bf74:	add	ip, ip, #24
   1bf78:	ldr	ip, [ip]
   1bf7c:	ldr	lr, [fp, #4]
   1bf80:	add	lr, lr, #28
   1bf84:	ldr	lr, [lr]
   1bf88:	ldr	r4, [fp, #4]
   1bf8c:	add	r4, r4, #32
   1bf90:	ldr	r4, [r4]
   1bf94:	str	r4, [sp, #24]
   1bf98:	str	lr, [sp, #20]
   1bf9c:	str	ip, [sp, #16]
   1bfa0:	str	r0, [sp, #12]
   1bfa4:	str	r1, [sp, #8]
   1bfa8:	str	r2, [sp, #4]
   1bfac:	str	r3, [sp]
   1bfb0:	mov	r3, r6
   1bfb4:	mov	r2, r5
   1bfb8:	mov	r1, r7
   1bfbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfc0:	bl	114b0 <fprintf@plt>
   1bfc4:	b	1c078 <__assert_fail@plt+0xaa54>
   1bfc8:	movw	r0, #1616	; 0x650
   1bfcc:	movt	r0, #2
   1bfd0:	bl	11474 <gettext@plt>
   1bfd4:	mov	r7, r0
   1bfd8:	ldr	r3, [fp, #4]
   1bfdc:	ldr	r5, [r3]
   1bfe0:	ldr	r3, [fp, #4]
   1bfe4:	add	r3, r3, #4
   1bfe8:	ldr	r6, [r3]
   1bfec:	ldr	r3, [fp, #4]
   1bff0:	add	r3, r3, #8
   1bff4:	ldr	r3, [r3]
   1bff8:	ldr	r2, [fp, #4]
   1bffc:	add	r2, r2, #12
   1c000:	ldr	r2, [r2]
   1c004:	ldr	r1, [fp, #4]
   1c008:	add	r1, r1, #16
   1c00c:	ldr	r1, [r1]
   1c010:	ldr	r0, [fp, #4]
   1c014:	add	r0, r0, #20
   1c018:	ldr	r0, [r0]
   1c01c:	ldr	ip, [fp, #4]
   1c020:	add	ip, ip, #24
   1c024:	ldr	ip, [ip]
   1c028:	ldr	lr, [fp, #4]
   1c02c:	add	lr, lr, #28
   1c030:	ldr	lr, [lr]
   1c034:	ldr	r4, [fp, #4]
   1c038:	add	r4, r4, #32
   1c03c:	ldr	r4, [r4]
   1c040:	str	r4, [sp, #24]
   1c044:	str	lr, [sp, #20]
   1c048:	str	ip, [sp, #16]
   1c04c:	str	r0, [sp, #12]
   1c050:	str	r1, [sp, #8]
   1c054:	str	r2, [sp, #4]
   1c058:	str	r3, [sp]
   1c05c:	mov	r3, r6
   1c060:	mov	r2, r5
   1c064:	mov	r1, r7
   1c068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c06c:	bl	114b0 <fprintf@plt>
   1c070:	b	1c078 <__assert_fail@plt+0xaa54>
   1c074:	nop	{0}
   1c078:	nop	{0}
   1c07c:	sub	sp, fp, #20
   1c080:	ldrd	r4, [sp]
   1c084:	ldrd	r6, [sp, #8]
   1c088:	ldr	fp, [sp, #16]
   1c08c:	add	sp, sp, #20
   1c090:	pop	{pc}		; (ldr pc, [sp], #4)
   1c094:	str	fp, [sp, #-8]!
   1c098:	str	lr, [sp, #4]
   1c09c:	add	fp, sp, #4
   1c0a0:	sub	sp, sp, #32
   1c0a4:	str	r0, [fp, #-16]
   1c0a8:	str	r1, [fp, #-20]	; 0xffffffec
   1c0ac:	str	r2, [fp, #-24]	; 0xffffffe8
   1c0b0:	str	r3, [fp, #-28]	; 0xffffffe4
   1c0b4:	mov	r3, #0
   1c0b8:	str	r3, [fp, #-8]
   1c0bc:	b	1c0cc <__assert_fail@plt+0xaaa8>
   1c0c0:	ldr	r3, [fp, #-8]
   1c0c4:	add	r3, r3, #1
   1c0c8:	str	r3, [fp, #-8]
   1c0cc:	ldr	r3, [fp, #-8]
   1c0d0:	lsl	r3, r3, #2
   1c0d4:	ldr	r2, [fp, #4]
   1c0d8:	add	r3, r2, r3
   1c0dc:	ldr	r3, [r3]
   1c0e0:	cmp	r3, #0
   1c0e4:	bne	1c0c0 <__assert_fail@plt+0xaa9c>
   1c0e8:	ldr	r3, [fp, #-8]
   1c0ec:	str	r3, [sp, #4]
   1c0f0:	ldr	r3, [fp, #4]
   1c0f4:	str	r3, [sp]
   1c0f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c0fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c100:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c104:	ldr	r0, [fp, #-16]
   1c108:	bl	1bb0c <__assert_fail@plt+0xa4e8>
   1c10c:	nop	{0}
   1c110:	sub	sp, fp, #4
   1c114:	ldr	fp, [sp]
   1c118:	add	sp, sp, #4
   1c11c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c120:	str	fp, [sp, #-8]!
   1c124:	str	lr, [sp, #4]
   1c128:	add	fp, sp, #4
   1c12c:	sub	sp, sp, #72	; 0x48
   1c130:	str	r0, [fp, #-56]	; 0xffffffc8
   1c134:	str	r1, [fp, #-60]	; 0xffffffc4
   1c138:	str	r2, [fp, #-64]	; 0xffffffc0
   1c13c:	str	r3, [fp, #-68]	; 0xffffffbc
   1c140:	mov	r3, #0
   1c144:	str	r3, [fp, #-8]
   1c148:	b	1c158 <__assert_fail@plt+0xab34>
   1c14c:	ldr	r3, [fp, #-8]
   1c150:	add	r3, r3, #1
   1c154:	str	r3, [fp, #-8]
   1c158:	ldr	r3, [fp, #-8]
   1c15c:	cmp	r3, #9
   1c160:	bhi	1c1a4 <__assert_fail@plt+0xab80>
   1c164:	ldr	r3, [fp, #4]
   1c168:	add	r2, r3, #4
   1c16c:	str	r2, [fp, #4]
   1c170:	ldr	r2, [r3]
   1c174:	ldr	r3, [fp, #-8]
   1c178:	lsl	r3, r3, #2
   1c17c:	sub	r1, fp, #4
   1c180:	add	r3, r1, r3
   1c184:	str	r2, [r3, #-44]	; 0xffffffd4
   1c188:	ldr	r3, [fp, #-8]
   1c18c:	lsl	r3, r3, #2
   1c190:	sub	r2, fp, #4
   1c194:	add	r3, r2, r3
   1c198:	ldr	r3, [r3, #-44]	; 0xffffffd4
   1c19c:	cmp	r3, #0
   1c1a0:	bne	1c14c <__assert_fail@plt+0xab28>
   1c1a4:	ldr	r3, [fp, #-8]
   1c1a8:	str	r3, [sp, #4]
   1c1ac:	sub	r3, fp, #48	; 0x30
   1c1b0:	str	r3, [sp]
   1c1b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1c1b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1c1bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1c1c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c1c4:	bl	1bb0c <__assert_fail@plt+0xa4e8>
   1c1c8:	nop	{0}
   1c1cc:	sub	sp, fp, #4
   1c1d0:	ldr	fp, [sp]
   1c1d4:	add	sp, sp, #4
   1c1d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c1dc:	push	{r3}		; (str r3, [sp, #-4]!)
   1c1e0:	str	fp, [sp, #-8]!
   1c1e4:	str	lr, [sp, #4]
   1c1e8:	add	fp, sp, #4
   1c1ec:	sub	sp, sp, #36	; 0x24
   1c1f0:	str	r0, [fp, #-20]	; 0xffffffec
   1c1f4:	str	r1, [fp, #-24]	; 0xffffffe8
   1c1f8:	str	r2, [fp, #-28]	; 0xffffffe4
   1c1fc:	add	r3, fp, #8
   1c200:	str	r3, [fp, #-12]
   1c204:	ldr	r3, [fp, #-12]
   1c208:	str	r3, [sp]
   1c20c:	ldr	r3, [fp, #4]
   1c210:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c218:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c21c:	bl	1c120 <__assert_fail@plt+0xaafc>
   1c220:	nop	{0}
   1c224:	sub	sp, fp, #4
   1c228:	ldr	fp, [sp]
   1c22c:	ldr	lr, [sp, #4]
   1c230:	add	sp, sp, #8
   1c234:	add	sp, sp, #4
   1c238:	bx	lr
   1c23c:	str	fp, [sp, #-8]!
   1c240:	str	lr, [sp, #4]
   1c244:	add	fp, sp, #4
   1c248:	movw	r3, #4548	; 0x11c4
   1c24c:	movt	r3, #3
   1c250:	ldr	r3, [r3]
   1c254:	mov	r1, r3
   1c258:	mov	r0, #10
   1c25c:	bl	11300 <fputc_unlocked@plt>
   1c260:	movw	r0, #1676	; 0x68c
   1c264:	movt	r0, #2
   1c268:	bl	11474 <gettext@plt>
   1c26c:	mov	r3, r0
   1c270:	movw	r1, #1696	; 0x6a0
   1c274:	movt	r1, #2
   1c278:	mov	r0, r3
   1c27c:	bl	11288 <printf@plt>
   1c280:	movw	r0, #1720	; 0x6b8
   1c284:	movt	r0, #2
   1c288:	bl	11474 <gettext@plt>
   1c28c:	mov	r3, r0
   1c290:	movw	r2, #1740	; 0x6cc
   1c294:	movt	r2, #2
   1c298:	movw	r1, #1780	; 0x6f4
   1c29c:	movt	r1, #2
   1c2a0:	mov	r0, r3
   1c2a4:	bl	11288 <printf@plt>
   1c2a8:	movw	r0, #1796	; 0x704
   1c2ac:	movt	r0, #2
   1c2b0:	bl	11474 <gettext@plt>
   1c2b4:	mov	r3, r0
   1c2b8:	movw	r1, #1836	; 0x72c
   1c2bc:	movt	r1, #2
   1c2c0:	mov	r0, r3
   1c2c4:	bl	11288 <printf@plt>
   1c2c8:	nop	{0}
   1c2cc:	sub	sp, fp, #4
   1c2d0:	ldr	fp, [sp]
   1c2d4:	add	sp, sp, #4
   1c2d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c2dc:	str	fp, [sp, #-8]!
   1c2e0:	str	lr, [sp, #4]
   1c2e4:	add	fp, sp, #4
   1c2e8:	sub	sp, sp, #16
   1c2ec:	str	r0, [fp, #-8]
   1c2f0:	str	r1, [fp, #-12]
   1c2f4:	str	r2, [fp, #-16]
   1c2f8:	ldr	r2, [fp, #-16]
   1c2fc:	ldr	r1, [fp, #-12]
   1c300:	ldr	r0, [fp, #-8]
   1c304:	bl	1c4c0 <__assert_fail@plt+0xae9c>
   1c308:	mov	r3, r0
   1c30c:	mov	r0, r3
   1c310:	sub	sp, fp, #4
   1c314:	ldr	fp, [sp]
   1c318:	add	sp, sp, #4
   1c31c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c320:	str	fp, [sp, #-8]!
   1c324:	str	lr, [sp, #4]
   1c328:	add	fp, sp, #4
   1c32c:	sub	sp, sp, #8
   1c330:	str	r0, [fp, #-8]
   1c334:	ldr	r3, [fp, #-8]
   1c338:	cmp	r3, #0
   1c33c:	bne	1c344 <__assert_fail@plt+0xad20>
   1c340:	bl	1cbd0 <__assert_fail@plt+0xb5ac>
   1c344:	ldr	r3, [fp, #-8]
   1c348:	mov	r0, r3
   1c34c:	sub	sp, fp, #4
   1c350:	ldr	fp, [sp]
   1c354:	add	sp, sp, #4
   1c358:	pop	{pc}		; (ldr pc, [sp], #4)
   1c35c:	str	fp, [sp, #-8]!
   1c360:	str	lr, [sp, #4]
   1c364:	add	fp, sp, #4
   1c368:	sub	sp, sp, #8
   1c36c:	str	r0, [fp, #-8]
   1c370:	ldr	r0, [fp, #-8]
   1c374:	bl	1ce10 <__assert_fail@plt+0xb7ec>
   1c378:	mov	r3, r0
   1c37c:	mov	r0, r3
   1c380:	bl	1c320 <__assert_fail@plt+0xacfc>
   1c384:	mov	r3, r0
   1c388:	mov	r0, r3
   1c38c:	sub	sp, fp, #4
   1c390:	ldr	fp, [sp]
   1c394:	add	sp, sp, #4
   1c398:	pop	{pc}		; (ldr pc, [sp], #4)
   1c39c:	str	fp, [sp, #-8]!
   1c3a0:	str	lr, [sp, #4]
   1c3a4:	add	fp, sp, #4
   1c3a8:	sub	sp, sp, #8
   1c3ac:	str	r0, [fp, #-8]
   1c3b0:	ldr	r0, [fp, #-8]
   1c3b4:	bl	1df90 <__assert_fail@plt+0xc96c>
   1c3b8:	mov	r3, r0
   1c3bc:	mov	r0, r3
   1c3c0:	bl	1c320 <__assert_fail@plt+0xacfc>
   1c3c4:	mov	r3, r0
   1c3c8:	mov	r0, r3
   1c3cc:	sub	sp, fp, #4
   1c3d0:	ldr	fp, [sp]
   1c3d4:	add	sp, sp, #4
   1c3d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3dc:	str	fp, [sp, #-8]!
   1c3e0:	str	lr, [sp, #4]
   1c3e4:	add	fp, sp, #4
   1c3e8:	sub	sp, sp, #8
   1c3ec:	str	r0, [fp, #-8]
   1c3f0:	ldr	r0, [fp, #-8]
   1c3f4:	bl	1c35c <__assert_fail@plt+0xad38>
   1c3f8:	mov	r3, r0
   1c3fc:	mov	r0, r3
   1c400:	sub	sp, fp, #4
   1c404:	ldr	fp, [sp]
   1c408:	add	sp, sp, #4
   1c40c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c410:	str	fp, [sp, #-8]!
   1c414:	str	lr, [sp, #4]
   1c418:	add	fp, sp, #4
   1c41c:	sub	sp, sp, #16
   1c420:	str	r0, [fp, #-16]
   1c424:	str	r1, [fp, #-20]	; 0xffffffec
   1c428:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c42c:	ldr	r0, [fp, #-16]
   1c430:	bl	1cea0 <__assert_fail@plt+0xb87c>
   1c434:	str	r0, [fp, #-8]
   1c438:	ldr	r3, [fp, #-8]
   1c43c:	cmp	r3, #0
   1c440:	bne	1c460 <__assert_fail@plt+0xae3c>
   1c444:	ldr	r3, [fp, #-16]
   1c448:	cmp	r3, #0
   1c44c:	beq	1c45c <__assert_fail@plt+0xae38>
   1c450:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c454:	cmp	r3, #0
   1c458:	beq	1c460 <__assert_fail@plt+0xae3c>
   1c45c:	bl	1cbd0 <__assert_fail@plt+0xb5ac>
   1c460:	ldr	r3, [fp, #-8]
   1c464:	mov	r0, r3
   1c468:	sub	sp, fp, #4
   1c46c:	ldr	fp, [sp]
   1c470:	add	sp, sp, #4
   1c474:	pop	{pc}		; (ldr pc, [sp], #4)
   1c478:	str	fp, [sp, #-8]!
   1c47c:	str	lr, [sp, #4]
   1c480:	add	fp, sp, #4
   1c484:	sub	sp, sp, #8
   1c488:	str	r0, [fp, #-8]
   1c48c:	str	r1, [fp, #-12]
   1c490:	ldr	r1, [fp, #-12]
   1c494:	ldr	r0, [fp, #-8]
   1c498:	bl	1dfc8 <__assert_fail@plt+0xc9a4>
   1c49c:	mov	r3, r0
   1c4a0:	mov	r0, r3
   1c4a4:	bl	1c320 <__assert_fail@plt+0xacfc>
   1c4a8:	mov	r3, r0
   1c4ac:	mov	r0, r3
   1c4b0:	sub	sp, fp, #4
   1c4b4:	ldr	fp, [sp]
   1c4b8:	add	sp, sp, #4
   1c4bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c4c0:	str	fp, [sp, #-8]!
   1c4c4:	str	lr, [sp, #4]
   1c4c8:	add	fp, sp, #4
   1c4cc:	sub	sp, sp, #24
   1c4d0:	str	r0, [fp, #-16]
   1c4d4:	str	r1, [fp, #-20]	; 0xffffffec
   1c4d8:	str	r2, [fp, #-24]	; 0xffffffe8
   1c4dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c4e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c4e4:	ldr	r0, [fp, #-16]
   1c4e8:	bl	1e288 <__assert_fail@plt+0xcc64>
   1c4ec:	str	r0, [fp, #-8]
   1c4f0:	ldr	r3, [fp, #-8]
   1c4f4:	cmp	r3, #0
   1c4f8:	bne	1c524 <__assert_fail@plt+0xaf00>
   1c4fc:	ldr	r3, [fp, #-16]
   1c500:	cmp	r3, #0
   1c504:	beq	1c520 <__assert_fail@plt+0xaefc>
   1c508:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c50c:	cmp	r3, #0
   1c510:	beq	1c524 <__assert_fail@plt+0xaf00>
   1c514:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c518:	cmp	r3, #0
   1c51c:	beq	1c524 <__assert_fail@plt+0xaf00>
   1c520:	bl	1cbd0 <__assert_fail@plt+0xb5ac>
   1c524:	ldr	r3, [fp, #-8]
   1c528:	mov	r0, r3
   1c52c:	sub	sp, fp, #4
   1c530:	ldr	fp, [sp]
   1c534:	add	sp, sp, #4
   1c538:	pop	{pc}		; (ldr pc, [sp], #4)
   1c53c:	str	fp, [sp, #-8]!
   1c540:	str	lr, [sp, #4]
   1c544:	add	fp, sp, #4
   1c548:	sub	sp, sp, #16
   1c54c:	str	r0, [fp, #-8]
   1c550:	str	r1, [fp, #-12]
   1c554:	str	r2, [fp, #-16]
   1c558:	ldr	r2, [fp, #-16]
   1c55c:	ldr	r1, [fp, #-12]
   1c560:	ldr	r0, [fp, #-8]
   1c564:	bl	1e068 <__assert_fail@plt+0xca44>
   1c568:	mov	r3, r0
   1c56c:	mov	r0, r3
   1c570:	bl	1c320 <__assert_fail@plt+0xacfc>
   1c574:	mov	r3, r0
   1c578:	mov	r0, r3
   1c57c:	sub	sp, fp, #4
   1c580:	ldr	fp, [sp]
   1c584:	add	sp, sp, #4
   1c588:	pop	{pc}		; (ldr pc, [sp], #4)
   1c58c:	str	fp, [sp, #-8]!
   1c590:	str	lr, [sp, #4]
   1c594:	add	fp, sp, #4
   1c598:	sub	sp, sp, #8
   1c59c:	str	r0, [fp, #-8]
   1c5a0:	str	r1, [fp, #-12]
   1c5a4:	ldr	r2, [fp, #-12]
   1c5a8:	ldr	r1, [fp, #-8]
   1c5ac:	mov	r0, #0
   1c5b0:	bl	1c4c0 <__assert_fail@plt+0xae9c>
   1c5b4:	mov	r3, r0
   1c5b8:	mov	r0, r3
   1c5bc:	sub	sp, fp, #4
   1c5c0:	ldr	fp, [sp]
   1c5c4:	add	sp, sp, #4
   1c5c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c5cc:	str	fp, [sp, #-8]!
   1c5d0:	str	lr, [sp, #4]
   1c5d4:	add	fp, sp, #4
   1c5d8:	sub	sp, sp, #8
   1c5dc:	str	r0, [fp, #-8]
   1c5e0:	str	r1, [fp, #-12]
   1c5e4:	ldr	r2, [fp, #-12]
   1c5e8:	ldr	r1, [fp, #-8]
   1c5ec:	mov	r0, #0
   1c5f0:	bl	1c53c <__assert_fail@plt+0xaf18>
   1c5f4:	mov	r3, r0
   1c5f8:	mov	r0, r3
   1c5fc:	sub	sp, fp, #4
   1c600:	ldr	fp, [sp]
   1c604:	add	sp, sp, #4
   1c608:	pop	{pc}		; (ldr pc, [sp], #4)
   1c60c:	str	fp, [sp, #-8]!
   1c610:	str	lr, [sp, #4]
   1c614:	add	fp, sp, #4
   1c618:	sub	sp, sp, #8
   1c61c:	str	r0, [fp, #-8]
   1c620:	str	r1, [fp, #-12]
   1c624:	mov	r2, #1
   1c628:	ldr	r1, [fp, #-12]
   1c62c:	ldr	r0, [fp, #-8]
   1c630:	bl	1c64c <__assert_fail@plt+0xb028>
   1c634:	mov	r3, r0
   1c638:	mov	r0, r3
   1c63c:	sub	sp, fp, #4
   1c640:	ldr	fp, [sp]
   1c644:	add	sp, sp, #4
   1c648:	pop	{pc}		; (ldr pc, [sp], #4)
   1c64c:	str	fp, [sp, #-8]!
   1c650:	str	lr, [sp, #4]
   1c654:	add	fp, sp, #4
   1c658:	sub	sp, sp, #24
   1c65c:	str	r0, [fp, #-16]
   1c660:	str	r1, [fp, #-20]	; 0xffffffec
   1c664:	str	r2, [fp, #-24]	; 0xffffffe8
   1c668:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c66c:	ldr	r3, [r3]
   1c670:	str	r3, [fp, #-8]
   1c674:	ldr	r3, [fp, #-16]
   1c678:	cmp	r3, #0
   1c67c:	bne	1c6c4 <__assert_fail@plt+0xb0a0>
   1c680:	ldr	r3, [fp, #-8]
   1c684:	cmp	r3, #0
   1c688:	bne	1c700 <__assert_fail@plt+0xb0dc>
   1c68c:	mov	r2, #64	; 0x40
   1c690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c694:	udiv	r3, r2, r3
   1c698:	str	r3, [fp, #-8]
   1c69c:	ldr	r3, [fp, #-8]
   1c6a0:	cmp	r3, #0
   1c6a4:	moveq	r3, #1
   1c6a8:	movne	r3, #0
   1c6ac:	uxtb	r3, r3
   1c6b0:	mov	r2, r3
   1c6b4:	ldr	r3, [fp, #-8]
   1c6b8:	add	r3, r2, r3
   1c6bc:	str	r3, [fp, #-8]
   1c6c0:	b	1c700 <__assert_fail@plt+0xb0dc>
   1c6c4:	ldr	r2, [fp, #-8]
   1c6c8:	ldr	r3, [fp, #-8]
   1c6cc:	lsr	r3, r3, #1
   1c6d0:	add	r3, r3, #1
   1c6d4:	mov	r1, #0
   1c6d8:	adds	r3, r2, r3
   1c6dc:	bcc	1c6e4 <__assert_fail@plt+0xb0c0>
   1c6e0:	mov	r1, #1
   1c6e4:	str	r3, [fp, #-8]
   1c6e8:	mov	r3, r1
   1c6ec:	and	r3, r3, #1
   1c6f0:	uxtb	r3, r3
   1c6f4:	cmp	r3, #0
   1c6f8:	beq	1c700 <__assert_fail@plt+0xb0dc>
   1c6fc:	bl	1cbd0 <__assert_fail@plt+0xb5ac>
   1c700:	ldr	r3, [fp, #-8]
   1c704:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c708:	mov	r1, r3
   1c70c:	ldr	r0, [fp, #-16]
   1c710:	bl	1c4c0 <__assert_fail@plt+0xae9c>
   1c714:	str	r0, [fp, #-16]
   1c718:	ldr	r2, [fp, #-8]
   1c71c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c720:	str	r2, [r3]
   1c724:	ldr	r3, [fp, #-16]
   1c728:	mov	r0, r3
   1c72c:	sub	sp, fp, #4
   1c730:	ldr	fp, [sp]
   1c734:	add	sp, sp, #4
   1c738:	pop	{pc}		; (ldr pc, [sp], #4)
   1c73c:	str	fp, [sp, #-8]!
   1c740:	str	lr, [sp, #4]
   1c744:	add	fp, sp, #4
   1c748:	sub	sp, sp, #32
   1c74c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c750:	str	r1, [fp, #-28]	; 0xffffffe4
   1c754:	str	r2, [fp, #-32]	; 0xffffffe0
   1c758:	str	r3, [fp, #-36]	; 0xffffffdc
   1c75c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c760:	ldr	r3, [r3]
   1c764:	str	r3, [fp, #-8]
   1c768:	ldr	r3, [fp, #-8]
   1c76c:	asr	r3, r3, #1
   1c770:	mov	r1, #0
   1c774:	ldr	r2, [fp, #-8]
   1c778:	adds	r3, r2, r3
   1c77c:	bvc	1c784 <__assert_fail@plt+0xb160>
   1c780:	mov	r1, #1
   1c784:	str	r3, [fp, #-16]
   1c788:	mov	r3, r1
   1c78c:	and	r3, r3, #1
   1c790:	uxtb	r3, r3
   1c794:	cmp	r3, #0
   1c798:	beq	1c7a4 <__assert_fail@plt+0xb180>
   1c79c:	mvn	r3, #-2147483648	; 0x80000000
   1c7a0:	str	r3, [fp, #-16]
   1c7a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c7a8:	cmp	r3, #0
   1c7ac:	blt	1c7c8 <__assert_fail@plt+0xb1a4>
   1c7b0:	ldr	r3, [fp, #-16]
   1c7b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c7b8:	cmp	r2, r3
   1c7bc:	bge	1c7c8 <__assert_fail@plt+0xb1a4>
   1c7c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c7c4:	str	r3, [fp, #-16]
   1c7c8:	ldr	r2, [fp, #-16]
   1c7cc:	mov	lr, #0
   1c7d0:	ldr	r3, [fp, #4]
   1c7d4:	smull	r2, r3, r2, r3
   1c7d8:	mov	r0, #0
   1c7dc:	mov	r1, #0
   1c7e0:	mov	r0, r3
   1c7e4:	asr	r1, r3, #31
   1c7e8:	asr	ip, r2, #31
   1c7ec:	cmp	ip, r0
   1c7f0:	beq	1c7f8 <__assert_fail@plt+0xb1d4>
   1c7f4:	mov	lr, #1
   1c7f8:	mov	r3, r2
   1c7fc:	str	r3, [fp, #-20]	; 0xffffffec
   1c800:	mov	r3, lr
   1c804:	and	r3, r3, #1
   1c808:	uxtb	r3, r3
   1c80c:	cmp	r3, #0
   1c810:	beq	1c81c <__assert_fail@plt+0xb1f8>
   1c814:	mvn	r3, #-2147483648	; 0x80000000
   1c818:	b	1c834 <__assert_fail@plt+0xb210>
   1c81c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c820:	cmp	r3, #63	; 0x3f
   1c824:	bgt	1c830 <__assert_fail@plt+0xb20c>
   1c828:	mov	r3, #64	; 0x40
   1c82c:	b	1c834 <__assert_fail@plt+0xb210>
   1c830:	mov	r3, #0
   1c834:	str	r3, [fp, #-12]
   1c838:	ldr	r3, [fp, #-12]
   1c83c:	cmp	r3, #0
   1c840:	beq	1c878 <__assert_fail@plt+0xb254>
   1c844:	ldr	r2, [fp, #-12]
   1c848:	ldr	r3, [fp, #4]
   1c84c:	sdiv	r3, r2, r3
   1c850:	str	r3, [fp, #-16]
   1c854:	ldr	r3, [fp, #-12]
   1c858:	ldr	r2, [fp, #4]
   1c85c:	sdiv	r2, r3, r2
   1c860:	ldr	r1, [fp, #4]
   1c864:	mul	r2, r1, r2
   1c868:	sub	r3, r3, r2
   1c86c:	ldr	r2, [fp, #-12]
   1c870:	sub	r3, r2, r3
   1c874:	str	r3, [fp, #-20]	; 0xffffffec
   1c878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c87c:	cmp	r3, #0
   1c880:	bne	1c890 <__assert_fail@plt+0xb26c>
   1c884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c888:	mov	r2, #0
   1c88c:	str	r2, [r3]
   1c890:	ldr	r2, [fp, #-16]
   1c894:	ldr	r3, [fp, #-8]
   1c898:	sub	r3, r2, r3
   1c89c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c8a0:	cmp	r2, r3
   1c8a4:	ble	1c944 <__assert_fail@plt+0xb320>
   1c8a8:	mov	r1, #0
   1c8ac:	ldr	r2, [fp, #-8]
   1c8b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c8b4:	adds	r3, r2, r3
   1c8b8:	bvc	1c8c0 <__assert_fail@plt+0xb29c>
   1c8bc:	mov	r1, #1
   1c8c0:	str	r3, [fp, #-16]
   1c8c4:	mov	r3, r1
   1c8c8:	and	r3, r3, #1
   1c8cc:	uxtb	r3, r3
   1c8d0:	cmp	r3, #0
   1c8d4:	bne	1c940 <__assert_fail@plt+0xb31c>
   1c8d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c8dc:	cmp	r3, #0
   1c8e0:	blt	1c8f4 <__assert_fail@plt+0xb2d0>
   1c8e4:	ldr	r3, [fp, #-16]
   1c8e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c8ec:	cmp	r2, r3
   1c8f0:	blt	1c940 <__assert_fail@plt+0xb31c>
   1c8f4:	ldr	r2, [fp, #-16]
   1c8f8:	mov	lr, #0
   1c8fc:	ldr	r3, [fp, #4]
   1c900:	smull	r2, r3, r2, r3
   1c904:	mov	r0, #0
   1c908:	mov	r1, #0
   1c90c:	mov	r0, r3
   1c910:	asr	r1, r3, #31
   1c914:	asr	ip, r2, #31
   1c918:	cmp	ip, r0
   1c91c:	beq	1c924 <__assert_fail@plt+0xb300>
   1c920:	mov	lr, #1
   1c924:	mov	r3, r2
   1c928:	str	r3, [fp, #-20]	; 0xffffffec
   1c92c:	mov	r3, lr
   1c930:	and	r3, r3, #1
   1c934:	uxtb	r3, r3
   1c938:	cmp	r3, #0
   1c93c:	beq	1c944 <__assert_fail@plt+0xb320>
   1c940:	bl	1cbd0 <__assert_fail@plt+0xb5ac>
   1c944:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c948:	mov	r1, r3
   1c94c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c950:	bl	1c410 <__assert_fail@plt+0xadec>
   1c954:	str	r0, [fp, #-24]	; 0xffffffe8
   1c958:	ldr	r2, [fp, #-16]
   1c95c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c960:	str	r2, [r3]
   1c964:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c968:	mov	r0, r3
   1c96c:	sub	sp, fp, #4
   1c970:	ldr	fp, [sp]
   1c974:	add	sp, sp, #4
   1c978:	pop	{pc}		; (ldr pc, [sp], #4)
   1c97c:	str	fp, [sp, #-8]!
   1c980:	str	lr, [sp, #4]
   1c984:	add	fp, sp, #4
   1c988:	sub	sp, sp, #8
   1c98c:	str	r0, [fp, #-8]
   1c990:	mov	r1, #1
   1c994:	ldr	r0, [fp, #-8]
   1c998:	bl	1c9ec <__assert_fail@plt+0xb3c8>
   1c99c:	mov	r3, r0
   1c9a0:	mov	r0, r3
   1c9a4:	sub	sp, fp, #4
   1c9a8:	ldr	fp, [sp]
   1c9ac:	add	sp, sp, #4
   1c9b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9b4:	str	fp, [sp, #-8]!
   1c9b8:	str	lr, [sp, #4]
   1c9bc:	add	fp, sp, #4
   1c9c0:	sub	sp, sp, #8
   1c9c4:	str	r0, [fp, #-8]
   1c9c8:	mov	r1, #1
   1c9cc:	ldr	r0, [fp, #-8]
   1c9d0:	bl	1ca34 <__assert_fail@plt+0xb410>
   1c9d4:	mov	r3, r0
   1c9d8:	mov	r0, r3
   1c9dc:	sub	sp, fp, #4
   1c9e0:	ldr	fp, [sp]
   1c9e4:	add	sp, sp, #4
   1c9e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9ec:	str	fp, [sp, #-8]!
   1c9f0:	str	lr, [sp, #4]
   1c9f4:	add	fp, sp, #4
   1c9f8:	sub	sp, sp, #8
   1c9fc:	str	r0, [fp, #-8]
   1ca00:	str	r1, [fp, #-12]
   1ca04:	ldr	r1, [fp, #-12]
   1ca08:	ldr	r0, [fp, #-8]
   1ca0c:	bl	1cd40 <__assert_fail@plt+0xb71c>
   1ca10:	mov	r3, r0
   1ca14:	mov	r0, r3
   1ca18:	bl	1c320 <__assert_fail@plt+0xacfc>
   1ca1c:	mov	r3, r0
   1ca20:	mov	r0, r3
   1ca24:	sub	sp, fp, #4
   1ca28:	ldr	fp, [sp]
   1ca2c:	add	sp, sp, #4
   1ca30:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca34:	str	fp, [sp, #-8]!
   1ca38:	str	lr, [sp, #4]
   1ca3c:	add	fp, sp, #4
   1ca40:	sub	sp, sp, #8
   1ca44:	str	r0, [fp, #-8]
   1ca48:	str	r1, [fp, #-12]
   1ca4c:	ldr	r1, [fp, #-12]
   1ca50:	ldr	r0, [fp, #-8]
   1ca54:	bl	1e024 <__assert_fail@plt+0xca00>
   1ca58:	mov	r3, r0
   1ca5c:	mov	r0, r3
   1ca60:	bl	1c320 <__assert_fail@plt+0xacfc>
   1ca64:	mov	r3, r0
   1ca68:	mov	r0, r3
   1ca6c:	sub	sp, fp, #4
   1ca70:	ldr	fp, [sp]
   1ca74:	add	sp, sp, #4
   1ca78:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca7c:	str	fp, [sp, #-8]!
   1ca80:	str	lr, [sp, #4]
   1ca84:	add	fp, sp, #4
   1ca88:	sub	sp, sp, #8
   1ca8c:	str	r0, [fp, #-8]
   1ca90:	str	r1, [fp, #-12]
   1ca94:	ldr	r0, [fp, #-12]
   1ca98:	bl	1c35c <__assert_fail@plt+0xad38>
   1ca9c:	mov	r3, r0
   1caa0:	ldr	r2, [fp, #-12]
   1caa4:	ldr	r1, [fp, #-8]
   1caa8:	mov	r0, r3
   1caac:	bl	112d0 <memcpy@plt>
   1cab0:	mov	r3, r0
   1cab4:	mov	r0, r3
   1cab8:	sub	sp, fp, #4
   1cabc:	ldr	fp, [sp]
   1cac0:	add	sp, sp, #4
   1cac4:	pop	{pc}		; (ldr pc, [sp], #4)
   1cac8:	str	fp, [sp, #-8]!
   1cacc:	str	lr, [sp, #4]
   1cad0:	add	fp, sp, #4
   1cad4:	sub	sp, sp, #8
   1cad8:	str	r0, [fp, #-8]
   1cadc:	str	r1, [fp, #-12]
   1cae0:	ldr	r0, [fp, #-12]
   1cae4:	bl	1c39c <__assert_fail@plt+0xad78>
   1cae8:	mov	r3, r0
   1caec:	mov	r0, r3
   1caf0:	ldr	r3, [fp, #-12]
   1caf4:	mov	r2, r3
   1caf8:	ldr	r1, [fp, #-8]
   1cafc:	bl	112d0 <memcpy@plt>
   1cb00:	mov	r3, r0
   1cb04:	mov	r0, r3
   1cb08:	sub	sp, fp, #4
   1cb0c:	ldr	fp, [sp]
   1cb10:	add	sp, sp, #4
   1cb14:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb18:	str	fp, [sp, #-8]!
   1cb1c:	str	lr, [sp, #4]
   1cb20:	add	fp, sp, #4
   1cb24:	sub	sp, sp, #16
   1cb28:	str	r0, [fp, #-16]
   1cb2c:	str	r1, [fp, #-20]	; 0xffffffec
   1cb30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cb34:	add	r3, r3, #1
   1cb38:	mov	r0, r3
   1cb3c:	bl	1c39c <__assert_fail@plt+0xad78>
   1cb40:	mov	r3, r0
   1cb44:	str	r3, [fp, #-8]
   1cb48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cb4c:	ldr	r2, [fp, #-8]
   1cb50:	add	r3, r2, r3
   1cb54:	mov	r2, #0
   1cb58:	strb	r2, [r3]
   1cb5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cb60:	mov	r2, r3
   1cb64:	ldr	r1, [fp, #-16]
   1cb68:	ldr	r0, [fp, #-8]
   1cb6c:	bl	112d0 <memcpy@plt>
   1cb70:	mov	r3, r0
   1cb74:	mov	r0, r3
   1cb78:	sub	sp, fp, #4
   1cb7c:	ldr	fp, [sp]
   1cb80:	add	sp, sp, #4
   1cb84:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb88:	str	fp, [sp, #-8]!
   1cb8c:	str	lr, [sp, #4]
   1cb90:	add	fp, sp, #4
   1cb94:	sub	sp, sp, #8
   1cb98:	str	r0, [fp, #-8]
   1cb9c:	ldr	r0, [fp, #-8]
   1cba0:	bl	1148c <strlen@plt>
   1cba4:	mov	r3, r0
   1cba8:	add	r3, r3, #1
   1cbac:	mov	r1, r3
   1cbb0:	ldr	r0, [fp, #-8]
   1cbb4:	bl	1ca7c <__assert_fail@plt+0xb458>
   1cbb8:	mov	r3, r0
   1cbbc:	mov	r0, r3
   1cbc0:	sub	sp, fp, #4
   1cbc4:	ldr	fp, [sp]
   1cbc8:	add	sp, sp, #4
   1cbcc:	pop	{pc}		; (ldr pc, [sp], #4)
   1cbd0:	strd	r4, [sp, #-16]!
   1cbd4:	str	fp, [sp, #8]
   1cbd8:	str	lr, [sp, #12]
   1cbdc:	add	fp, sp, #12
   1cbe0:	movw	r3, #4460	; 0x116c
   1cbe4:	movt	r3, #3
   1cbe8:	ldr	r4, [r3]
   1cbec:	movw	r0, #1916	; 0x77c
   1cbf0:	movt	r0, #2
   1cbf4:	bl	11474 <gettext@plt>
   1cbf8:	mov	r3, r0
   1cbfc:	movw	r2, #1936	; 0x790
   1cc00:	movt	r2, #2
   1cc04:	mov	r1, #0
   1cc08:	mov	r0, r4
   1cc0c:	bl	113cc <error@plt>
   1cc10:	bl	115e8 <abort@plt>
   1cc14:	str	fp, [sp, #-8]!
   1cc18:	str	lr, [sp, #4]
   1cc1c:	add	fp, sp, #4
   1cc20:	sub	sp, sp, #24
   1cc24:	str	r0, [fp, #-16]
   1cc28:	str	r1, [fp, #-20]	; 0xffffffec
   1cc2c:	str	r2, [fp, #-24]	; 0xffffffe8
   1cc30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc34:	orr	r3, r3, #512	; 0x200
   1cc38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cc3c:	mov	r1, r3
   1cc40:	ldr	r0, [fp, #-16]
   1cc44:	bl	13910 <__assert_fail@plt+0x22ec>
   1cc48:	str	r0, [fp, #-8]
   1cc4c:	ldr	r3, [fp, #-8]
   1cc50:	cmp	r3, #0
   1cc54:	bne	1cc90 <__assert_fail@plt+0xb66c>
   1cc58:	bl	114bc <__errno_location@plt>
   1cc5c:	mov	r3, r0
   1cc60:	ldr	r3, [r3]
   1cc64:	cmp	r3, #22
   1cc68:	bne	1cc8c <__assert_fail@plt+0xb668>
   1cc6c:	movw	r3, #1968	; 0x7b0
   1cc70:	movt	r3, #2
   1cc74:	mov	r2, #41	; 0x29
   1cc78:	movw	r1, #1940	; 0x794
   1cc7c:	movt	r1, #2
   1cc80:	movw	r0, #1952	; 0x7a0
   1cc84:	movt	r0, #2
   1cc88:	bl	11624 <__assert_fail@plt>
   1cc8c:	bl	1cbd0 <__assert_fail@plt+0xb5ac>
   1cc90:	ldr	r3, [fp, #-8]
   1cc94:	mov	r0, r3
   1cc98:	sub	sp, fp, #4
   1cc9c:	ldr	fp, [sp]
   1cca0:	add	sp, sp, #4
   1cca4:	pop	{pc}		; (ldr pc, [sp], #4)
   1cca8:	push	{fp}		; (str fp, [sp, #-4]!)
   1ccac:	add	fp, sp, #0
   1ccb0:	sub	sp, sp, #12
   1ccb4:	str	r0, [fp, #-8]
   1ccb8:	str	r1, [fp, #-12]
   1ccbc:	ldr	r3, [fp, #-8]
   1ccc0:	ldr	r3, [r3, #48]	; 0x30
   1ccc4:	and	r3, r3, #16
   1ccc8:	cmp	r3, #0
   1cccc:	beq	1cce4 <__assert_fail@plt+0xb6c0>
   1ccd0:	ldr	r3, [fp, #-8]
   1ccd4:	ldr	r3, [r3, #48]	; 0x30
   1ccd8:	and	r3, r3, #1
   1ccdc:	cmp	r3, #0
   1cce0:	beq	1cd1c <__assert_fail@plt+0xb6f8>
   1cce4:	ldr	r3, [fp, #-8]
   1cce8:	ldr	r3, [r3, #48]	; 0x30
   1ccec:	and	r3, r3, #16
   1ccf0:	cmp	r3, #0
   1ccf4:	beq	1cd24 <__assert_fail@plt+0xb700>
   1ccf8:	ldr	r3, [fp, #-8]
   1ccfc:	ldr	r3, [r3, #48]	; 0x30
   1cd00:	and	r3, r3, #1
   1cd04:	cmp	r3, #0
   1cd08:	beq	1cd24 <__assert_fail@plt+0xb700>
   1cd0c:	ldr	r3, [fp, #-12]
   1cd10:	ldr	r3, [r3, #48]	; 0x30
   1cd14:	cmp	r3, #0
   1cd18:	beq	1cd24 <__assert_fail@plt+0xb700>
   1cd1c:	mov	r3, #1
   1cd20:	b	1cd28 <__assert_fail@plt+0xb704>
   1cd24:	mov	r3, #0
   1cd28:	and	r3, r3, #1
   1cd2c:	uxtb	r3, r3
   1cd30:	mov	r0, r3
   1cd34:	add	sp, fp, #0
   1cd38:	pop	{fp}		; (ldr fp, [sp], #4)
   1cd3c:	bx	lr
   1cd40:	str	fp, [sp, #-8]!
   1cd44:	str	lr, [sp, #4]
   1cd48:	add	fp, sp, #4
   1cd4c:	sub	sp, sp, #16
   1cd50:	str	r0, [fp, #-16]
   1cd54:	str	r1, [fp, #-20]	; 0xffffffec
   1cd58:	ldr	r3, [fp, #-16]
   1cd5c:	cmp	r3, #0
   1cd60:	beq	1cd70 <__assert_fail@plt+0xb74c>
   1cd64:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd68:	cmp	r3, #0
   1cd6c:	bne	1cd80 <__assert_fail@plt+0xb75c>
   1cd70:	mov	r3, #1
   1cd74:	str	r3, [fp, #-20]	; 0xffffffec
   1cd78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd7c:	str	r3, [fp, #-16]
   1cd80:	mov	ip, #0
   1cd84:	ldr	r2, [fp, #-16]
   1cd88:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd8c:	umull	r0, r1, r2, r3
   1cd90:	mov	r2, #0
   1cd94:	mov	r3, #0
   1cd98:	mov	r2, r1
   1cd9c:	mov	r3, #0
   1cda0:	cmp	r2, #0
   1cda4:	beq	1cdac <__assert_fail@plt+0xb788>
   1cda8:	mov	ip, #1
   1cdac:	cmp	r0, #0
   1cdb0:	bge	1cdb8 <__assert_fail@plt+0xb794>
   1cdb4:	mov	ip, #1
   1cdb8:	mov	r3, ip
   1cdbc:	and	r3, r3, #1
   1cdc0:	uxtb	r3, r3
   1cdc4:	cmp	r3, #0
   1cdc8:	beq	1cde4 <__assert_fail@plt+0xb7c0>
   1cdcc:	bl	114bc <__errno_location@plt>
   1cdd0:	mov	r2, r0
   1cdd4:	mov	r3, #12
   1cdd8:	str	r3, [r2]
   1cddc:	mov	r3, #0
   1cde0:	b	1cdfc <__assert_fail@plt+0xb7d8>
   1cde4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cde8:	ldr	r0, [fp, #-16]
   1cdec:	bl	1124c <calloc@plt>
   1cdf0:	mov	r3, r0
   1cdf4:	str	r3, [fp, #-8]
   1cdf8:	ldr	r3, [fp, #-8]
   1cdfc:	mov	r0, r3
   1ce00:	sub	sp, fp, #4
   1ce04:	ldr	fp, [sp]
   1ce08:	add	sp, sp, #4
   1ce0c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce10:	str	fp, [sp, #-8]!
   1ce14:	str	lr, [sp, #4]
   1ce18:	add	fp, sp, #4
   1ce1c:	sub	sp, sp, #16
   1ce20:	str	r0, [fp, #-16]
   1ce24:	ldr	r3, [fp, #-16]
   1ce28:	cmp	r3, #0
   1ce2c:	bne	1ce38 <__assert_fail@plt+0xb814>
   1ce30:	mov	r3, #1
   1ce34:	str	r3, [fp, #-16]
   1ce38:	mov	r2, #0
   1ce3c:	ldr	r3, [fp, #-16]
   1ce40:	cmp	r3, #0
   1ce44:	bge	1ce4c <__assert_fail@plt+0xb828>
   1ce48:	mov	r2, #1
   1ce4c:	mov	r3, r2
   1ce50:	and	r3, r3, #1
   1ce54:	uxtb	r3, r3
   1ce58:	cmp	r3, #0
   1ce5c:	beq	1ce78 <__assert_fail@plt+0xb854>
   1ce60:	bl	114bc <__errno_location@plt>
   1ce64:	mov	r2, r0
   1ce68:	mov	r3, #12
   1ce6c:	str	r3, [r2]
   1ce70:	mov	r3, #0
   1ce74:	b	1ce8c <__assert_fail@plt+0xb868>
   1ce78:	ldr	r0, [fp, #-16]
   1ce7c:	bl	113fc <malloc@plt>
   1ce80:	mov	r3, r0
   1ce84:	str	r3, [fp, #-8]
   1ce88:	ldr	r3, [fp, #-8]
   1ce8c:	mov	r0, r3
   1ce90:	sub	sp, fp, #4
   1ce94:	ldr	fp, [sp]
   1ce98:	add	sp, sp, #4
   1ce9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cea0:	str	fp, [sp, #-8]!
   1cea4:	str	lr, [sp, #4]
   1cea8:	add	fp, sp, #4
   1ceac:	sub	sp, sp, #16
   1ceb0:	str	r0, [fp, #-16]
   1ceb4:	str	r1, [fp, #-20]	; 0xffffffec
   1ceb8:	ldr	r3, [fp, #-16]
   1cebc:	cmp	r3, #0
   1cec0:	bne	1ced4 <__assert_fail@plt+0xb8b0>
   1cec4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cec8:	bl	1ce10 <__assert_fail@plt+0xb7ec>
   1cecc:	mov	r3, r0
   1ced0:	b	1cf44 <__assert_fail@plt+0xb920>
   1ced4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ced8:	cmp	r3, #0
   1cedc:	bne	1cef0 <__assert_fail@plt+0xb8cc>
   1cee0:	ldr	r0, [fp, #-16]
   1cee4:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   1cee8:	mov	r3, #0
   1ceec:	b	1cf44 <__assert_fail@plt+0xb920>
   1cef0:	mov	r2, #0
   1cef4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cef8:	cmp	r3, #0
   1cefc:	bge	1cf04 <__assert_fail@plt+0xb8e0>
   1cf00:	mov	r2, #1
   1cf04:	mov	r3, r2
   1cf08:	and	r3, r3, #1
   1cf0c:	uxtb	r3, r3
   1cf10:	cmp	r3, #0
   1cf14:	beq	1cf30 <__assert_fail@plt+0xb90c>
   1cf18:	bl	114bc <__errno_location@plt>
   1cf1c:	mov	r2, r0
   1cf20:	mov	r3, #12
   1cf24:	str	r3, [r2]
   1cf28:	mov	r3, #0
   1cf2c:	b	1cf44 <__assert_fail@plt+0xb920>
   1cf30:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cf34:	ldr	r0, [fp, #-16]
   1cf38:	bl	11324 <realloc@plt>
   1cf3c:	str	r0, [fp, #-8]
   1cf40:	ldr	r3, [fp, #-8]
   1cf44:	mov	r0, r3
   1cf48:	sub	sp, fp, #4
   1cf4c:	ldr	fp, [sp]
   1cf50:	add	sp, sp, #4
   1cf54:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf58:	str	fp, [sp, #-8]!
   1cf5c:	str	lr, [sp, #4]
   1cf60:	add	fp, sp, #4
   1cf64:	sub	sp, sp, #64	; 0x40
   1cf68:	str	r0, [fp, #-56]	; 0xffffffc8
   1cf6c:	str	r1, [fp, #-60]	; 0xffffffc4
   1cf70:	str	r2, [fp, #-64]	; 0xffffffc0
   1cf74:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cf78:	str	r3, [fp, #-8]
   1cf7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1cf80:	ldrb	r3, [r3]
   1cf84:	cmp	r3, #0
   1cf88:	bne	1cfa0 <__assert_fail@plt+0xb97c>
   1cf8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cf90:	mov	r2, #0
   1cf94:	strb	r2, [r3]
   1cf98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cf9c:	b	1d0d4 <__assert_fail@plt+0xbab0>
   1cfa0:	movw	r3, #4924	; 0x133c
   1cfa4:	movt	r3, #3
   1cfa8:	ldr	r3, [r3]
   1cfac:	cmp	r3, #0
   1cfb0:	bne	1d040 <__assert_fail@plt+0xba1c>
   1cfb4:	mov	r1, #18688	; 0x4900
   1cfb8:	movt	r1, #8
   1cfbc:	movw	r0, #1980	; 0x7bc
   1cfc0:	movt	r0, #2
   1cfc4:	bl	113e4 <open64@plt>
   1cfc8:	str	r0, [fp, #-12]
   1cfcc:	ldr	r3, [fp, #-12]
   1cfd0:	cmp	r3, #0
   1cfd4:	bge	1cfec <__assert_fail@plt+0xb9c8>
   1cfd8:	movw	r3, #4924	; 0x133c
   1cfdc:	movt	r3, #3
   1cfe0:	mvn	r2, #0
   1cfe4:	str	r2, [r3]
   1cfe8:	b	1d040 <__assert_fail@plt+0xba1c>
   1cfec:	sub	r3, fp, #52	; 0x34
   1cff0:	ldr	r2, [fp, #-12]
   1cff4:	movw	r1, #1996	; 0x7cc
   1cff8:	movt	r1, #2
   1cffc:	mov	r0, r3
   1d000:	bl	11558 <sprintf@plt>
   1d004:	sub	r3, fp, #52	; 0x34
   1d008:	mov	r1, #0
   1d00c:	mov	r0, r3
   1d010:	bl	11504 <access@plt>
   1d014:	mov	r3, r0
   1d018:	cmp	r3, #0
   1d01c:	beq	1d028 <__assert_fail@plt+0xba04>
   1d020:	mvn	r2, #0
   1d024:	b	1d02c <__assert_fail@plt+0xba08>
   1d028:	mov	r2, #1
   1d02c:	movw	r3, #4924	; 0x133c
   1d030:	movt	r3, #3
   1d034:	str	r2, [r3]
   1d038:	ldr	r0, [fp, #-12]
   1d03c:	bl	115f4 <close@plt>
   1d040:	movw	r3, #4924	; 0x133c
   1d044:	movt	r3, #3
   1d048:	ldr	r3, [r3]
   1d04c:	cmp	r3, #0
   1d050:	bge	1d05c <__assert_fail@plt+0xba38>
   1d054:	mov	r3, #0
   1d058:	b	1d0d4 <__assert_fail@plt+0xbab0>
   1d05c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1d060:	bl	1148c <strlen@plt>
   1d064:	mov	r3, r0
   1d068:	add	r3, r3, #27
   1d06c:	str	r3, [fp, #-16]
   1d070:	ldr	r3, [fp, #-16]
   1d074:	cmp	r3, #4032	; 0xfc0
   1d078:	bls	1d0a0 <__assert_fail@plt+0xba7c>
   1d07c:	ldr	r0, [fp, #-16]
   1d080:	bl	1ce10 <__assert_fail@plt+0xb7ec>
   1d084:	mov	r3, r0
   1d088:	str	r3, [fp, #-8]
   1d08c:	ldr	r3, [fp, #-8]
   1d090:	cmp	r3, #0
   1d094:	bne	1d0a0 <__assert_fail@plt+0xba7c>
   1d098:	mov	r3, #0
   1d09c:	b	1d0d4 <__assert_fail@plt+0xbab0>
   1d0a0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1d0a4:	movw	r1, #2020	; 0x7e4
   1d0a8:	movt	r1, #2
   1d0ac:	ldr	r0, [fp, #-8]
   1d0b0:	bl	11558 <sprintf@plt>
   1d0b4:	str	r0, [fp, #-20]	; 0xffffffec
   1d0b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d0bc:	ldr	r2, [fp, #-8]
   1d0c0:	add	r3, r2, r3
   1d0c4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1d0c8:	mov	r0, r3
   1d0cc:	bl	1139c <strcpy@plt>
   1d0d0:	ldr	r3, [fp, #-8]
   1d0d4:	mov	r0, r3
   1d0d8:	sub	sp, fp, #4
   1d0dc:	ldr	fp, [sp]
   1d0e0:	add	sp, sp, #4
   1d0e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d0e8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1d0ec:	strd	r6, [sp, #8]
   1d0f0:	strd	r8, [sp, #16]
   1d0f4:	str	fp, [sp, #24]
   1d0f8:	add	fp, sp, #24
   1d0fc:	sub	sp, sp, #20
   1d100:	strd	r0, [fp, #-36]	; 0xffffffdc
   1d104:	str	r2, [fp, #-40]	; 0xffffffd8
   1d108:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1d10c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d110:	sub	ip, r1, #32
   1d114:	rsb	r0, r1, #32
   1d118:	lsl	r7, r3, r1
   1d11c:	orr	r7, r7, r2, lsl ip
   1d120:	orr	r7, r7, r2, lsr r0
   1d124:	lsl	r6, r2, r1
   1d128:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d12c:	rsb	r1, r1, #0
   1d130:	and	r1, r1, #63	; 0x3f
   1d134:	rsb	ip, r1, #32
   1d138:	sub	r0, r1, #32
   1d13c:	lsr	r4, r2, r1
   1d140:	orr	r4, r4, r3, lsl ip
   1d144:	orr	r4, r4, r3, lsr r0
   1d148:	lsr	r5, r3, r1
   1d14c:	orr	r8, r6, r4
   1d150:	orr	r9, r7, r5
   1d154:	mov	r4, r8
   1d158:	mov	r5, r9
   1d15c:	mov	r2, r4
   1d160:	mov	r3, r5
   1d164:	mov	r0, r2
   1d168:	mov	r1, r3
   1d16c:	sub	sp, fp, #24
   1d170:	ldrd	r4, [sp]
   1d174:	ldrd	r6, [sp, #8]
   1d178:	ldrd	r8, [sp, #16]
   1d17c:	ldr	fp, [sp, #24]
   1d180:	add	sp, sp, #28
   1d184:	bx	lr
   1d188:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1d18c:	strd	r6, [sp, #8]
   1d190:	strd	r8, [sp, #16]
   1d194:	str	fp, [sp, #24]
   1d198:	add	fp, sp, #24
   1d19c:	sub	sp, sp, #20
   1d1a0:	strd	r0, [fp, #-36]	; 0xffffffdc
   1d1a4:	str	r2, [fp, #-40]	; 0xffffffd8
   1d1a8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1d1ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d1b0:	rsb	ip, r1, #32
   1d1b4:	sub	r0, r1, #32
   1d1b8:	lsr	r6, r2, r1
   1d1bc:	orr	r6, r6, r3, lsl ip
   1d1c0:	orr	r6, r6, r3, lsr r0
   1d1c4:	lsr	r7, r3, r1
   1d1c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1d1cc:	rsb	r1, r1, #0
   1d1d0:	and	r1, r1, #63	; 0x3f
   1d1d4:	sub	ip, r1, #32
   1d1d8:	rsb	r0, r1, #32
   1d1dc:	lsl	r5, r3, r1
   1d1e0:	orr	r5, r5, r2, lsl ip
   1d1e4:	orr	r5, r5, r2, lsr r0
   1d1e8:	lsl	r4, r2, r1
   1d1ec:	orr	r8, r6, r4
   1d1f0:	orr	r9, r7, r5
   1d1f4:	mov	r4, r8
   1d1f8:	mov	r5, r9
   1d1fc:	mov	r2, r4
   1d200:	mov	r3, r5
   1d204:	mov	r0, r2
   1d208:	mov	r1, r3
   1d20c:	sub	sp, fp, #24
   1d210:	ldrd	r4, [sp]
   1d214:	ldrd	r6, [sp, #8]
   1d218:	ldrd	r8, [sp, #16]
   1d21c:	ldr	fp, [sp, #24]
   1d220:	add	sp, sp, #28
   1d224:	bx	lr
   1d228:	push	{fp}		; (str fp, [sp, #-4]!)
   1d22c:	add	fp, sp, #0
   1d230:	sub	sp, sp, #12
   1d234:	str	r0, [fp, #-8]
   1d238:	str	r1, [fp, #-12]
   1d23c:	ldr	r2, [fp, #-8]
   1d240:	ldr	r3, [fp, #-12]
   1d244:	rsb	r3, r3, #32
   1d248:	ror	r3, r2, r3
   1d24c:	mov	r0, r3
   1d250:	add	sp, fp, #0
   1d254:	pop	{fp}		; (ldr fp, [sp], #4)
   1d258:	bx	lr
   1d25c:	push	{fp}		; (str fp, [sp, #-4]!)
   1d260:	add	fp, sp, #0
   1d264:	sub	sp, sp, #12
   1d268:	str	r0, [fp, #-8]
   1d26c:	str	r1, [fp, #-12]
   1d270:	ldr	r2, [fp, #-8]
   1d274:	ldr	r3, [fp, #-12]
   1d278:	ror	r3, r2, r3
   1d27c:	mov	r0, r3
   1d280:	add	sp, fp, #0
   1d284:	pop	{fp}		; (ldr fp, [sp], #4)
   1d288:	bx	lr
   1d28c:	push	{fp}		; (str fp, [sp, #-4]!)
   1d290:	add	fp, sp, #0
   1d294:	sub	sp, sp, #12
   1d298:	str	r0, [fp, #-8]
   1d29c:	str	r1, [fp, #-12]
   1d2a0:	ldr	r2, [fp, #-8]
   1d2a4:	ldr	r3, [fp, #-12]
   1d2a8:	rsb	r3, r3, #32
   1d2ac:	ror	r3, r2, r3
   1d2b0:	mov	r0, r3
   1d2b4:	add	sp, fp, #0
   1d2b8:	pop	{fp}		; (ldr fp, [sp], #4)
   1d2bc:	bx	lr
   1d2c0:	push	{fp}		; (str fp, [sp, #-4]!)
   1d2c4:	add	fp, sp, #0
   1d2c8:	sub	sp, sp, #12
   1d2cc:	str	r0, [fp, #-8]
   1d2d0:	str	r1, [fp, #-12]
   1d2d4:	ldr	r2, [fp, #-8]
   1d2d8:	ldr	r3, [fp, #-12]
   1d2dc:	ror	r3, r2, r3
   1d2e0:	mov	r0, r3
   1d2e4:	add	sp, fp, #0
   1d2e8:	pop	{fp}		; (ldr fp, [sp], #4)
   1d2ec:	bx	lr
   1d2f0:	push	{fp}		; (str fp, [sp, #-4]!)
   1d2f4:	add	fp, sp, #0
   1d2f8:	sub	sp, sp, #12
   1d2fc:	mov	r3, r0
   1d300:	str	r1, [fp, #-12]
   1d304:	strh	r3, [fp, #-6]
   1d308:	ldrh	r2, [fp, #-6]
   1d30c:	ldr	r3, [fp, #-12]
   1d310:	lsl	r3, r2, r3
   1d314:	uxth	r2, r3
   1d318:	ldrh	r1, [fp, #-6]
   1d31c:	ldr	r3, [fp, #-12]
   1d320:	rsb	r3, r3, #16
   1d324:	lsr	r3, r1, r3
   1d328:	uxth	r3, r3
   1d32c:	orr	r3, r2, r3
   1d330:	uxth	r3, r3
   1d334:	mov	r0, r3
   1d338:	add	sp, fp, #0
   1d33c:	pop	{fp}		; (ldr fp, [sp], #4)
   1d340:	bx	lr
   1d344:	push	{fp}		; (str fp, [sp, #-4]!)
   1d348:	add	fp, sp, #0
   1d34c:	sub	sp, sp, #12
   1d350:	mov	r3, r0
   1d354:	str	r1, [fp, #-12]
   1d358:	strh	r3, [fp, #-6]
   1d35c:	ldrh	r2, [fp, #-6]
   1d360:	ldr	r3, [fp, #-12]
   1d364:	lsr	r3, r2, r3
   1d368:	uxth	r2, r3
   1d36c:	ldrh	r1, [fp, #-6]
   1d370:	ldr	r3, [fp, #-12]
   1d374:	rsb	r3, r3, #16
   1d378:	lsl	r3, r1, r3
   1d37c:	uxth	r3, r3
   1d380:	orr	r3, r2, r3
   1d384:	uxth	r3, r3
   1d388:	mov	r0, r3
   1d38c:	add	sp, fp, #0
   1d390:	pop	{fp}		; (ldr fp, [sp], #4)
   1d394:	bx	lr
   1d398:	push	{fp}		; (str fp, [sp, #-4]!)
   1d39c:	add	fp, sp, #0
   1d3a0:	sub	sp, sp, #12
   1d3a4:	mov	r3, r0
   1d3a8:	str	r1, [fp, #-12]
   1d3ac:	strb	r3, [fp, #-5]
   1d3b0:	ldrb	r2, [fp, #-5]
   1d3b4:	ldr	r3, [fp, #-12]
   1d3b8:	lsl	r3, r2, r3
   1d3bc:	uxtb	r2, r3
   1d3c0:	ldrb	r1, [fp, #-5]
   1d3c4:	ldr	r3, [fp, #-12]
   1d3c8:	rsb	r3, r3, #8
   1d3cc:	lsr	r3, r1, r3
   1d3d0:	uxtb	r3, r3
   1d3d4:	orr	r3, r2, r3
   1d3d8:	uxtb	r3, r3
   1d3dc:	mov	r0, r3
   1d3e0:	add	sp, fp, #0
   1d3e4:	pop	{fp}		; (ldr fp, [sp], #4)
   1d3e8:	bx	lr
   1d3ec:	push	{fp}		; (str fp, [sp, #-4]!)
   1d3f0:	add	fp, sp, #0
   1d3f4:	sub	sp, sp, #12
   1d3f8:	mov	r3, r0
   1d3fc:	str	r1, [fp, #-12]
   1d400:	strb	r3, [fp, #-5]
   1d404:	ldrb	r2, [fp, #-5]
   1d408:	ldr	r3, [fp, #-12]
   1d40c:	lsr	r3, r2, r3
   1d410:	uxtb	r2, r3
   1d414:	ldrb	r1, [fp, #-5]
   1d418:	ldr	r3, [fp, #-12]
   1d41c:	rsb	r3, r3, #8
   1d420:	lsl	r3, r1, r3
   1d424:	uxtb	r3, r3
   1d428:	orr	r3, r2, r3
   1d42c:	uxtb	r3, r3
   1d430:	mov	r0, r3
   1d434:	add	sp, fp, #0
   1d438:	pop	{fp}		; (ldr fp, [sp], #4)
   1d43c:	bx	lr
   1d440:	strd	r4, [sp, #-16]!
   1d444:	str	fp, [sp, #8]
   1d448:	str	lr, [sp, #12]
   1d44c:	add	fp, sp, #12
   1d450:	sub	sp, sp, #16
   1d454:	str	r0, [fp, #-24]	; 0xffffffe8
   1d458:	str	r1, [fp, #-28]	; 0xffffffe4
   1d45c:	ldr	r5, [fp, #-24]	; 0xffffffe8
   1d460:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1d464:	cmp	r5, r4
   1d468:	bne	1d474 <__assert_fail@plt+0xbe50>
   1d46c:	mov	r3, #0
   1d470:	b	1d4d4 <__assert_fail@plt+0xbeb0>
   1d474:	ldrb	r3, [r5]
   1d478:	mov	r0, r3
   1d47c:	bl	1e968 <__assert_fail@plt+0xd344>
   1d480:	mov	r3, r0
   1d484:	strb	r3, [fp, #-13]
   1d488:	ldrb	r3, [r4]
   1d48c:	mov	r0, r3
   1d490:	bl	1e968 <__assert_fail@plt+0xd344>
   1d494:	mov	r3, r0
   1d498:	strb	r3, [fp, #-14]
   1d49c:	ldrb	r3, [fp, #-13]
   1d4a0:	cmp	r3, #0
   1d4a4:	beq	1d4c4 <__assert_fail@plt+0xbea0>
   1d4a8:	add	r5, r5, #1
   1d4ac:	add	r4, r4, #1
   1d4b0:	ldrb	r2, [fp, #-13]
   1d4b4:	ldrb	r3, [fp, #-14]
   1d4b8:	cmp	r2, r3
   1d4bc:	beq	1d474 <__assert_fail@plt+0xbe50>
   1d4c0:	b	1d4c8 <__assert_fail@plt+0xbea4>
   1d4c4:	nop	{0}
   1d4c8:	ldrb	r2, [fp, #-13]
   1d4cc:	ldrb	r3, [fp, #-14]
   1d4d0:	sub	r3, r2, r3
   1d4d4:	mov	r0, r3
   1d4d8:	sub	sp, fp, #12
   1d4dc:	ldrd	r4, [sp]
   1d4e0:	ldr	fp, [sp, #8]
   1d4e4:	add	sp, sp, #12
   1d4e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d4ec:	str	fp, [sp, #-8]!
   1d4f0:	str	lr, [sp, #4]
   1d4f4:	add	fp, sp, #4
   1d4f8:	sub	sp, sp, #16
   1d4fc:	str	r0, [fp, #-16]
   1d500:	ldr	r0, [fp, #-16]
   1d504:	bl	113a8 <__fpending@plt>
   1d508:	mov	r3, r0
   1d50c:	cmp	r3, #0
   1d510:	movne	r3, #1
   1d514:	moveq	r3, #0
   1d518:	strb	r3, [fp, #-5]
   1d51c:	ldr	r0, [fp, #-16]
   1d520:	bl	113b4 <ferror_unlocked@plt>
   1d524:	mov	r3, r0
   1d528:	cmp	r3, #0
   1d52c:	movne	r3, #1
   1d530:	moveq	r3, #0
   1d534:	strb	r3, [fp, #-6]
   1d538:	ldr	r0, [fp, #-16]
   1d53c:	bl	1d798 <__assert_fail@plt+0xc174>
   1d540:	mov	r3, r0
   1d544:	cmp	r3, #0
   1d548:	movne	r3, #1
   1d54c:	moveq	r3, #0
   1d550:	strb	r3, [fp, #-7]
   1d554:	ldrb	r3, [fp, #-6]
   1d558:	cmp	r3, #0
   1d55c:	bne	1d58c <__assert_fail@plt+0xbf68>
   1d560:	ldrb	r3, [fp, #-7]
   1d564:	cmp	r3, #0
   1d568:	beq	1d5b8 <__assert_fail@plt+0xbf94>
   1d56c:	ldrb	r3, [fp, #-5]
   1d570:	cmp	r3, #0
   1d574:	bne	1d58c <__assert_fail@plt+0xbf68>
   1d578:	bl	114bc <__errno_location@plt>
   1d57c:	mov	r3, r0
   1d580:	ldr	r3, [r3]
   1d584:	cmp	r3, #9
   1d588:	beq	1d5b8 <__assert_fail@plt+0xbf94>
   1d58c:	ldrb	r3, [fp, #-7]
   1d590:	eor	r3, r3, #1
   1d594:	uxtb	r3, r3
   1d598:	cmp	r3, #0
   1d59c:	beq	1d5b0 <__assert_fail@plt+0xbf8c>
   1d5a0:	bl	114bc <__errno_location@plt>
   1d5a4:	mov	r2, r0
   1d5a8:	mov	r3, #0
   1d5ac:	str	r3, [r2]
   1d5b0:	mvn	r3, #0
   1d5b4:	b	1d5bc <__assert_fail@plt+0xbf98>
   1d5b8:	mov	r3, #0
   1d5bc:	mov	r0, r3
   1d5c0:	sub	sp, fp, #4
   1d5c4:	ldr	fp, [sp]
   1d5c8:	add	sp, sp, #4
   1d5cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1d5d0:	strd	r4, [sp, #-12]!
   1d5d4:	str	fp, [sp, #8]
   1d5d8:	add	fp, sp, #8
   1d5dc:	sub	sp, sp, #12
   1d5e0:	strd	r0, [fp, #-20]	; 0xffffffec
   1d5e4:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1d5e8:	subs	r4, r0, #1
   1d5ec:	sbc	r5, r1, #0
   1d5f0:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1d5f4:	and	r2, r4, r0
   1d5f8:	and	r3, r5, r1
   1d5fc:	orr	r3, r2, r3
   1d600:	cmp	r3, #0
   1d604:	moveq	r3, #1
   1d608:	movne	r3, #0
   1d60c:	uxtb	r3, r3
   1d610:	mov	r0, r3
   1d614:	sub	sp, fp, #8
   1d618:	ldrd	r4, [sp]
   1d61c:	ldr	fp, [sp, #8]
   1d620:	add	sp, sp, #12
   1d624:	bx	lr
   1d628:	push	{fp}		; (str fp, [sp, #-4]!)
   1d62c:	add	fp, sp, #0
   1d630:	sub	sp, sp, #12
   1d634:	str	r0, [fp, #-8]
   1d638:	ldr	r1, [fp, #-8]
   1d63c:	mov	r2, #0
   1d640:	mov	r3, #0
   1d644:	strd	r2, [r1, #16]
   1d648:	ldr	r2, [fp, #-8]
   1d64c:	movw	r3, #62998	; 0xf616
   1d650:	movt	r3, #149	; 0x95
   1d654:	str	r3, [r2, #24]
   1d658:	nop	{0}
   1d65c:	add	sp, fp, #0
   1d660:	pop	{fp}		; (ldr fp, [sp], #4)
   1d664:	bx	lr
   1d668:	strd	r4, [sp, #-16]!
   1d66c:	str	fp, [sp, #8]
   1d670:	str	lr, [sp, #12]
   1d674:	add	fp, sp, #12
   1d678:	sub	sp, sp, #8
   1d67c:	str	r0, [fp, #-16]
   1d680:	str	r1, [fp, #-20]	; 0xffffffec
   1d684:	ldr	r3, [fp, #-16]
   1d688:	ldr	r2, [r3, #24]
   1d68c:	movw	r3, #62998	; 0xf616
   1d690:	movt	r3, #149	; 0x95
   1d694:	cmp	r2, r3
   1d698:	beq	1d6bc <__assert_fail@plt+0xc098>
   1d69c:	movw	r3, #2084	; 0x824
   1d6a0:	movt	r3, #2
   1d6a4:	mov	r2, #60	; 0x3c
   1d6a8:	movw	r1, #2040	; 0x7f8
   1d6ac:	movt	r1, #2
   1d6b0:	movw	r0, #2060	; 0x80c
   1d6b4:	movt	r0, #2
   1d6b8:	bl	11624 <__assert_fail@plt>
   1d6bc:	ldr	r3, [fp, #-16]
   1d6c0:	ldrd	r2, [r3, #16]
   1d6c4:	orrs	r3, r2, r3
   1d6c8:	beq	1d70c <__assert_fail@plt+0xc0e8>
   1d6cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d6d0:	ldrd	r0, [r3, #96]	; 0x60
   1d6d4:	ldr	r3, [fp, #-16]
   1d6d8:	ldrd	r2, [r3]
   1d6dc:	cmp	r1, r3
   1d6e0:	cmpeq	r0, r2
   1d6e4:	bne	1d70c <__assert_fail@plt+0xc0e8>
   1d6e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d6ec:	ldrd	r0, [r3]
   1d6f0:	ldr	r3, [fp, #-16]
   1d6f4:	ldrd	r2, [r3, #8]
   1d6f8:	cmp	r1, r3
   1d6fc:	cmpeq	r0, r2
   1d700:	bne	1d70c <__assert_fail@plt+0xc0e8>
   1d704:	mov	r3, #1
   1d708:	b	1d780 <__assert_fail@plt+0xc15c>
   1d70c:	ldr	r3, [fp, #-16]
   1d710:	ldrd	r2, [r3, #16]
   1d714:	adds	r4, r2, #1
   1d718:	adc	r5, r3, #0
   1d71c:	ldr	r3, [fp, #-16]
   1d720:	strd	r4, [r3, #16]
   1d724:	ldr	r3, [fp, #-16]
   1d728:	ldrd	r2, [r3, #16]
   1d72c:	mov	r0, r2
   1d730:	mov	r1, r3
   1d734:	bl	1d5d0 <__assert_fail@plt+0xbfac>
   1d738:	mov	r3, r0
   1d73c:	cmp	r3, #0
   1d740:	beq	1d77c <__assert_fail@plt+0xc158>
   1d744:	ldr	r3, [fp, #-16]
   1d748:	ldrd	r2, [r3, #16]
   1d74c:	orrs	r3, r2, r3
   1d750:	bne	1d75c <__assert_fail@plt+0xc138>
   1d754:	mov	r3, #1
   1d758:	b	1d780 <__assert_fail@plt+0xc15c>
   1d75c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d760:	ldrd	r2, [r3]
   1d764:	ldr	r1, [fp, #-16]
   1d768:	strd	r2, [r1, #8]
   1d76c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d770:	ldrd	r2, [r3, #96]	; 0x60
   1d774:	ldr	r1, [fp, #-16]
   1d778:	strd	r2, [r1]
   1d77c:	mov	r3, #0
   1d780:	mov	r0, r3
   1d784:	sub	sp, fp, #12
   1d788:	ldrd	r4, [sp]
   1d78c:	ldr	fp, [sp, #8]
   1d790:	add	sp, sp, #12
   1d794:	pop	{pc}		; (ldr pc, [sp], #4)
   1d798:	str	fp, [sp, #-8]!
   1d79c:	str	lr, [sp, #4]
   1d7a0:	add	fp, sp, #4
   1d7a4:	sub	sp, sp, #32
   1d7a8:	str	r0, [fp, #-24]	; 0xffffffe8
   1d7ac:	mov	r3, #0
   1d7b0:	str	r3, [fp, #-8]
   1d7b4:	mov	r3, #0
   1d7b8:	str	r3, [fp, #-12]
   1d7bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7c0:	bl	114e0 <fileno@plt>
   1d7c4:	str	r0, [fp, #-16]
   1d7c8:	ldr	r3, [fp, #-16]
   1d7cc:	cmp	r3, #0
   1d7d0:	bge	1d7e4 <__assert_fail@plt+0xc1c0>
   1d7d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7d8:	bl	11510 <fclose@plt>
   1d7dc:	mov	r3, r0
   1d7e0:	b	1d888 <__assert_fail@plt+0xc264>
   1d7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7e8:	bl	11414 <__freading@plt>
   1d7ec:	mov	r3, r0
   1d7f0:	cmp	r3, #0
   1d7f4:	beq	1d830 <__assert_fail@plt+0xc20c>
   1d7f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7fc:	bl	114e0 <fileno@plt>
   1d800:	mov	r1, r0
   1d804:	mov	r3, #1
   1d808:	str	r3, [sp]
   1d80c:	mov	r2, #0
   1d810:	mov	r3, #0
   1d814:	mov	r0, r1
   1d818:	bl	11384 <lseek64@plt>
   1d81c:	mvn	r2, #0
   1d820:	mvn	r3, #0
   1d824:	cmp	r1, r3
   1d828:	cmpeq	r0, r2
   1d82c:	beq	1d854 <__assert_fail@plt+0xc230>
   1d830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d834:	bl	1dd5c <__assert_fail@plt+0xc738>
   1d838:	mov	r3, r0
   1d83c:	cmp	r3, #0
   1d840:	beq	1d854 <__assert_fail@plt+0xc230>
   1d844:	bl	114bc <__errno_location@plt>
   1d848:	mov	r3, r0
   1d84c:	ldr	r3, [r3]
   1d850:	str	r3, [fp, #-8]
   1d854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d858:	bl	11510 <fclose@plt>
   1d85c:	str	r0, [fp, #-12]
   1d860:	ldr	r3, [fp, #-8]
   1d864:	cmp	r3, #0
   1d868:	beq	1d884 <__assert_fail@plt+0xc260>
   1d86c:	bl	114bc <__errno_location@plt>
   1d870:	mov	r2, r0
   1d874:	ldr	r3, [fp, #-8]
   1d878:	str	r3, [r2]
   1d87c:	mvn	r3, #0
   1d880:	str	r3, [fp, #-12]
   1d884:	ldr	r3, [fp, #-12]
   1d888:	mov	r0, r3
   1d88c:	sub	sp, fp, #4
   1d890:	ldr	fp, [sp]
   1d894:	add	sp, sp, #4
   1d898:	pop	{pc}		; (ldr pc, [sp], #4)
   1d89c:	push	{r1, r2, r3}
   1d8a0:	str	fp, [sp, #-8]!
   1d8a4:	str	lr, [sp, #4]
   1d8a8:	add	fp, sp, #4
   1d8ac:	sub	sp, sp, #36	; 0x24
   1d8b0:	str	r0, [fp, #-36]	; 0xffffffdc
   1d8b4:	mvn	r3, #0
   1d8b8:	str	r3, [fp, #-12]
   1d8bc:	add	r3, fp, #8
   1d8c0:	str	r3, [fp, #-32]	; 0xffffffe0
   1d8c4:	ldr	r3, [fp, #4]
   1d8c8:	cmp	r3, #0
   1d8cc:	beq	1d8e4 <__assert_fail@plt+0xc2c0>
   1d8d0:	ldr	r3, [fp, #4]
   1d8d4:	movw	r2, #1030	; 0x406
   1d8d8:	cmp	r3, r2
   1d8dc:	beq	1d90c <__assert_fail@plt+0xc2e8>
   1d8e0:	b	1d934 <__assert_fail@plt+0xc310>
   1d8e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d8e8:	add	r2, r3, #4
   1d8ec:	str	r2, [fp, #-32]	; 0xffffffe0
   1d8f0:	ldr	r3, [r3]
   1d8f4:	str	r3, [fp, #-16]
   1d8f8:	ldr	r1, [fp, #-16]
   1d8fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d900:	bl	1dae0 <__assert_fail@plt+0xc4bc>
   1d904:	str	r0, [fp, #-12]
   1d908:	b	1dac0 <__assert_fail@plt+0xc49c>
   1d90c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d910:	add	r2, r3, #4
   1d914:	str	r2, [fp, #-32]	; 0xffffffe0
   1d918:	ldr	r3, [r3]
   1d91c:	str	r3, [fp, #-20]	; 0xffffffec
   1d920:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d924:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d928:	bl	1db24 <__assert_fail@plt+0xc500>
   1d92c:	str	r0, [fp, #-12]
   1d930:	b	1dac0 <__assert_fail@plt+0xc49c>
   1d934:	ldr	r3, [fp, #4]
   1d938:	cmp	r3, #11
   1d93c:	beq	1da50 <__assert_fail@plt+0xc42c>
   1d940:	ldr	r3, [fp, #4]
   1d944:	cmp	r3, #11
   1d948:	bgt	1d9d0 <__assert_fail@plt+0xc3ac>
   1d94c:	ldr	r3, [fp, #4]
   1d950:	cmp	r3, #3
   1d954:	beq	1da50 <__assert_fail@plt+0xc42c>
   1d958:	ldr	r3, [fp, #4]
   1d95c:	cmp	r3, #3
   1d960:	bgt	1d98c <__assert_fail@plt+0xc368>
   1d964:	ldr	r3, [fp, #4]
   1d968:	cmp	r3, #1
   1d96c:	beq	1da50 <__assert_fail@plt+0xc42c>
   1d970:	ldr	r3, [fp, #4]
   1d974:	cmp	r3, #1
   1d978:	bgt	1da64 <__assert_fail@plt+0xc440>
   1d97c:	ldr	r3, [fp, #4]
   1d980:	cmp	r3, #0
   1d984:	beq	1da64 <__assert_fail@plt+0xc440>
   1d988:	b	1da90 <__assert_fail@plt+0xc46c>
   1d98c:	ldr	r3, [fp, #4]
   1d990:	cmp	r3, #8
   1d994:	beq	1da64 <__assert_fail@plt+0xc440>
   1d998:	ldr	r3, [fp, #4]
   1d99c:	cmp	r3, #8
   1d9a0:	bgt	1d9b4 <__assert_fail@plt+0xc390>
   1d9a4:	ldr	r3, [fp, #4]
   1d9a8:	cmp	r3, #4
   1d9ac:	beq	1da64 <__assert_fail@plt+0xc440>
   1d9b0:	b	1da90 <__assert_fail@plt+0xc46c>
   1d9b4:	ldr	r3, [fp, #4]
   1d9b8:	cmp	r3, #9
   1d9bc:	beq	1da50 <__assert_fail@plt+0xc42c>
   1d9c0:	ldr	r3, [fp, #4]
   1d9c4:	cmp	r3, #10
   1d9c8:	beq	1da64 <__assert_fail@plt+0xc440>
   1d9cc:	b	1da90 <__assert_fail@plt+0xc46c>
   1d9d0:	ldr	r3, [fp, #4]
   1d9d4:	movw	r2, #1031	; 0x407
   1d9d8:	cmp	r3, r2
   1d9dc:	bgt	1da20 <__assert_fail@plt+0xc3fc>
   1d9e0:	ldr	r3, [fp, #4]
   1d9e4:	movw	r2, #1030	; 0x406
   1d9e8:	cmp	r3, r2
   1d9ec:	bge	1da64 <__assert_fail@plt+0xc440>
   1d9f0:	ldr	r3, [fp, #4]
   1d9f4:	movw	r2, #1025	; 0x401
   1d9f8:	cmp	r3, r2
   1d9fc:	beq	1da50 <__assert_fail@plt+0xc42c>
   1da00:	ldr	r3, [fp, #4]
   1da04:	movw	r2, #1026	; 0x402
   1da08:	cmp	r3, r2
   1da0c:	beq	1da64 <__assert_fail@plt+0xc440>
   1da10:	ldr	r3, [fp, #4]
   1da14:	cmp	r3, #1024	; 0x400
   1da18:	beq	1da64 <__assert_fail@plt+0xc440>
   1da1c:	b	1da90 <__assert_fail@plt+0xc46c>
   1da20:	ldr	r3, [fp, #4]
   1da24:	movw	r2, #1033	; 0x409
   1da28:	cmp	r3, r2
   1da2c:	beq	1da64 <__assert_fail@plt+0xc440>
   1da30:	ldr	r3, [fp, #4]
   1da34:	movw	r2, #1033	; 0x409
   1da38:	cmp	r3, r2
   1da3c:	blt	1da50 <__assert_fail@plt+0xc42c>
   1da40:	ldr	r3, [fp, #4]
   1da44:	movw	r2, #1034	; 0x40a
   1da48:	cmp	r3, r2
   1da4c:	bne	1da90 <__assert_fail@plt+0xc46c>
   1da50:	ldr	r1, [fp, #4]
   1da54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1da58:	bl	11528 <fcntl64@plt>
   1da5c:	str	r0, [fp, #-12]
   1da60:	b	1dabc <__assert_fail@plt+0xc498>
   1da64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1da68:	add	r2, r3, #4
   1da6c:	str	r2, [fp, #-32]	; 0xffffffe0
   1da70:	ldr	r3, [r3]
   1da74:	str	r3, [fp, #-24]	; 0xffffffe8
   1da78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da7c:	ldr	r1, [fp, #4]
   1da80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1da84:	bl	11528 <fcntl64@plt>
   1da88:	str	r0, [fp, #-12]
   1da8c:	b	1dabc <__assert_fail@plt+0xc498>
   1da90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1da94:	add	r2, r3, #4
   1da98:	str	r2, [fp, #-32]	; 0xffffffe0
   1da9c:	ldr	r3, [r3]
   1daa0:	str	r3, [fp, #-28]	; 0xffffffe4
   1daa4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1daa8:	ldr	r1, [fp, #4]
   1daac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dab0:	bl	11528 <fcntl64@plt>
   1dab4:	str	r0, [fp, #-12]
   1dab8:	nop	{0}
   1dabc:	nop	{0}
   1dac0:	ldr	r3, [fp, #-12]
   1dac4:	mov	r0, r3
   1dac8:	sub	sp, fp, #4
   1dacc:	ldr	fp, [sp]
   1dad0:	ldr	lr, [sp, #4]
   1dad4:	add	sp, sp, #8
   1dad8:	add	sp, sp, #12
   1dadc:	bx	lr
   1dae0:	str	fp, [sp, #-8]!
   1dae4:	str	lr, [sp, #4]
   1dae8:	add	fp, sp, #4
   1daec:	sub	sp, sp, #16
   1daf0:	str	r0, [fp, #-16]
   1daf4:	str	r1, [fp, #-20]	; 0xffffffec
   1daf8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dafc:	mov	r1, #0
   1db00:	ldr	r0, [fp, #-16]
   1db04:	bl	11528 <fcntl64@plt>
   1db08:	str	r0, [fp, #-8]
   1db0c:	ldr	r3, [fp, #-8]
   1db10:	mov	r0, r3
   1db14:	sub	sp, fp, #4
   1db18:	ldr	fp, [sp]
   1db1c:	add	sp, sp, #4
   1db20:	pop	{pc}		; (ldr pc, [sp], #4)
   1db24:	str	fp, [sp, #-8]!
   1db28:	str	lr, [sp, #4]
   1db2c:	add	fp, sp, #4
   1db30:	sub	sp, sp, #24
   1db34:	str	r0, [fp, #-24]	; 0xffffffe8
   1db38:	str	r1, [fp, #-28]	; 0xffffffe4
   1db3c:	movw	r3, #4928	; 0x1340
   1db40:	movt	r3, #3
   1db44:	ldr	r3, [r3]
   1db48:	cmp	r3, #0
   1db4c:	blt	1dbc8 <__assert_fail@plt+0xc5a4>
   1db50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1db54:	movw	r1, #1030	; 0x406
   1db58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db5c:	bl	11528 <fcntl64@plt>
   1db60:	str	r0, [fp, #-8]
   1db64:	ldr	r3, [fp, #-8]
   1db68:	cmp	r3, #0
   1db6c:	bge	1db84 <__assert_fail@plt+0xc560>
   1db70:	bl	114bc <__errno_location@plt>
   1db74:	mov	r3, r0
   1db78:	ldr	r3, [r3]
   1db7c:	cmp	r3, #22
   1db80:	beq	1db98 <__assert_fail@plt+0xc574>
   1db84:	movw	r3, #4928	; 0x1340
   1db88:	movt	r3, #3
   1db8c:	mov	r2, #1
   1db90:	str	r2, [r3]
   1db94:	b	1dbd8 <__assert_fail@plt+0xc5b4>
   1db98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1db9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dba0:	bl	1dae0 <__assert_fail@plt+0xc4bc>
   1dba4:	str	r0, [fp, #-8]
   1dba8:	ldr	r3, [fp, #-8]
   1dbac:	cmp	r3, #0
   1dbb0:	blt	1dbd8 <__assert_fail@plt+0xc5b4>
   1dbb4:	movw	r3, #4928	; 0x1340
   1dbb8:	movt	r3, #3
   1dbbc:	mvn	r2, #0
   1dbc0:	str	r2, [r3]
   1dbc4:	b	1dbd8 <__assert_fail@plt+0xc5b4>
   1dbc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dbcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbd0:	bl	1dae0 <__assert_fail@plt+0xc4bc>
   1dbd4:	str	r0, [fp, #-8]
   1dbd8:	ldr	r3, [fp, #-8]
   1dbdc:	cmp	r3, #0
   1dbe0:	blt	1dc68 <__assert_fail@plt+0xc644>
   1dbe4:	movw	r3, #4928	; 0x1340
   1dbe8:	movt	r3, #3
   1dbec:	ldr	r3, [r3]
   1dbf0:	cmn	r3, #1
   1dbf4:	bne	1dc68 <__assert_fail@plt+0xc644>
   1dbf8:	mov	r1, #1
   1dbfc:	ldr	r0, [fp, #-8]
   1dc00:	bl	11528 <fcntl64@plt>
   1dc04:	str	r0, [fp, #-12]
   1dc08:	ldr	r3, [fp, #-12]
   1dc0c:	cmp	r3, #0
   1dc10:	blt	1dc38 <__assert_fail@plt+0xc614>
   1dc14:	ldr	r3, [fp, #-12]
   1dc18:	orr	r3, r3, #1
   1dc1c:	mov	r2, r3
   1dc20:	mov	r1, #2
   1dc24:	ldr	r0, [fp, #-8]
   1dc28:	bl	11528 <fcntl64@plt>
   1dc2c:	mov	r3, r0
   1dc30:	cmn	r3, #1
   1dc34:	bne	1dc68 <__assert_fail@plt+0xc644>
   1dc38:	bl	114bc <__errno_location@plt>
   1dc3c:	mov	r3, r0
   1dc40:	ldr	r3, [r3]
   1dc44:	str	r3, [fp, #-16]
   1dc48:	ldr	r0, [fp, #-8]
   1dc4c:	bl	115f4 <close@plt>
   1dc50:	bl	114bc <__errno_location@plt>
   1dc54:	mov	r2, r0
   1dc58:	ldr	r3, [fp, #-16]
   1dc5c:	str	r3, [r2]
   1dc60:	mvn	r3, #0
   1dc64:	str	r3, [fp, #-8]
   1dc68:	ldr	r3, [fp, #-8]
   1dc6c:	mov	r0, r3
   1dc70:	sub	sp, fp, #4
   1dc74:	ldr	fp, [sp]
   1dc78:	add	sp, sp, #4
   1dc7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1dc80:	push	{r1, r2, r3}
   1dc84:	str	fp, [sp, #-8]!
   1dc88:	str	lr, [sp, #4]
   1dc8c:	add	fp, sp, #4
   1dc90:	sub	sp, sp, #20
   1dc94:	str	r0, [fp, #-20]	; 0xffffffec
   1dc98:	mov	r3, #0
   1dc9c:	str	r3, [fp, #-12]
   1dca0:	ldr	r3, [fp, #4]
   1dca4:	and	r3, r3, #64	; 0x40
   1dca8:	cmp	r3, #0
   1dcac:	beq	1dccc <__assert_fail@plt+0xc6a8>
   1dcb0:	add	r3, fp, #8
   1dcb4:	str	r3, [fp, #-16]
   1dcb8:	ldr	r3, [fp, #-16]
   1dcbc:	add	r2, r3, #4
   1dcc0:	str	r2, [fp, #-16]
   1dcc4:	ldr	r3, [r3]
   1dcc8:	str	r3, [fp, #-12]
   1dccc:	ldr	r2, [fp, #-12]
   1dcd0:	ldr	r1, [fp, #4]
   1dcd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dcd8:	bl	113e4 <open64@plt>
   1dcdc:	mov	r3, r0
   1dce0:	mov	r0, r3
   1dce4:	bl	1ba8c <__assert_fail@plt+0xa468>
   1dce8:	mov	r3, r0
   1dcec:	mov	r0, r3
   1dcf0:	sub	sp, fp, #4
   1dcf4:	ldr	fp, [sp]
   1dcf8:	ldr	lr, [sp, #4]
   1dcfc:	add	sp, sp, #8
   1dd00:	add	sp, sp, #12
   1dd04:	bx	lr
   1dd08:	str	fp, [sp, #-8]!
   1dd0c:	str	lr, [sp, #4]
   1dd10:	add	fp, sp, #4
   1dd14:	sub	sp, sp, #16
   1dd18:	str	r0, [fp, #-8]
   1dd1c:	ldr	r3, [fp, #-8]
   1dd20:	ldr	r3, [r3]
   1dd24:	and	r3, r3, #256	; 0x100
   1dd28:	cmp	r3, #0
   1dd2c:	beq	1dd48 <__assert_fail@plt+0xc724>
   1dd30:	mov	r3, #1
   1dd34:	str	r3, [sp]
   1dd38:	mov	r2, #0
   1dd3c:	mov	r3, #0
   1dd40:	ldr	r0, [fp, #-8]
   1dd44:	bl	1de6c <__assert_fail@plt+0xc848>
   1dd48:	nop	{0}
   1dd4c:	sub	sp, fp, #4
   1dd50:	ldr	fp, [sp]
   1dd54:	add	sp, sp, #4
   1dd58:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd5c:	str	fp, [sp, #-8]!
   1dd60:	str	lr, [sp, #4]
   1dd64:	add	fp, sp, #4
   1dd68:	sub	sp, sp, #8
   1dd6c:	str	r0, [fp, #-8]
   1dd70:	ldr	r3, [fp, #-8]
   1dd74:	cmp	r3, #0
   1dd78:	beq	1dd90 <__assert_fail@plt+0xc76c>
   1dd7c:	ldr	r0, [fp, #-8]
   1dd80:	bl	11414 <__freading@plt>
   1dd84:	mov	r3, r0
   1dd88:	cmp	r3, #0
   1dd8c:	bne	1dda0 <__assert_fail@plt+0xc77c>
   1dd90:	ldr	r0, [fp, #-8]
   1dd94:	bl	11294 <fflush@plt>
   1dd98:	mov	r3, r0
   1dd9c:	b	1ddb4 <__assert_fail@plt+0xc790>
   1dda0:	ldr	r0, [fp, #-8]
   1dda4:	bl	1dd08 <__assert_fail@plt+0xc6e4>
   1dda8:	ldr	r0, [fp, #-8]
   1ddac:	bl	11294 <fflush@plt>
   1ddb0:	mov	r3, r0
   1ddb4:	mov	r0, r3
   1ddb8:	sub	sp, fp, #4
   1ddbc:	ldr	fp, [sp]
   1ddc0:	add	sp, sp, #4
   1ddc4:	pop	{pc}		; (ldr pc, [sp], #4)
   1ddc8:	str	r4, [sp, #-12]!
   1ddcc:	str	fp, [sp, #4]
   1ddd0:	str	lr, [sp, #8]
   1ddd4:	add	fp, sp, #8
   1ddd8:	sub	sp, sp, #20
   1dddc:	str	r0, [fp, #-24]	; 0xffffffe8
   1dde0:	bl	114bc <__errno_location@plt>
   1dde4:	mov	r3, r0
   1dde8:	ldr	r3, [r3]
   1ddec:	str	r3, [fp, #-20]	; 0xffffffec
   1ddf0:	bl	114bc <__errno_location@plt>
   1ddf4:	mov	r3, r0
   1ddf8:	ldr	r3, [r3]
   1ddfc:	str	r3, [fp, #-16]
   1de00:	bl	114bc <__errno_location@plt>
   1de04:	mov	r2, r0
   1de08:	mov	r3, #0
   1de0c:	str	r3, [r2]
   1de10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de14:	bl	112b8 <free@plt>
   1de18:	bl	114bc <__errno_location@plt>
   1de1c:	mov	r3, r0
   1de20:	ldr	r3, [r3]
   1de24:	cmp	r3, #0
   1de28:	moveq	r3, #1
   1de2c:	movne	r3, #0
   1de30:	uxtb	r3, r3
   1de34:	mov	r4, r3
   1de38:	bl	114bc <__errno_location@plt>
   1de3c:	mov	r2, r0
   1de40:	lsl	r3, r4, #2
   1de44:	sub	r1, fp, #12
   1de48:	add	r3, r1, r3
   1de4c:	ldr	r3, [r3, #-8]
   1de50:	str	r3, [r2]
   1de54:	nop	{0}
   1de58:	sub	sp, fp, #8
   1de5c:	ldr	r4, [sp]
   1de60:	ldr	fp, [sp, #4]
   1de64:	add	sp, sp, #8
   1de68:	pop	{pc}		; (ldr pc, [sp], #4)
   1de6c:	str	fp, [sp, #-8]!
   1de70:	str	lr, [sp, #4]
   1de74:	add	fp, sp, #4
   1de78:	sub	sp, sp, #32
   1de7c:	str	r0, [fp, #-16]
   1de80:	strd	r2, [fp, #-28]	; 0xffffffe4
   1de84:	ldr	r3, [fp, #-16]
   1de88:	ldr	r2, [r3, #8]
   1de8c:	ldr	r3, [fp, #-16]
   1de90:	ldr	r3, [r3, #4]
   1de94:	cmp	r2, r3
   1de98:	bne	1df30 <__assert_fail@plt+0xc90c>
   1de9c:	ldr	r3, [fp, #-16]
   1dea0:	ldr	r2, [r3, #20]
   1dea4:	ldr	r3, [fp, #-16]
   1dea8:	ldr	r3, [r3, #16]
   1deac:	cmp	r2, r3
   1deb0:	bne	1df30 <__assert_fail@plt+0xc90c>
   1deb4:	ldr	r3, [fp, #-16]
   1deb8:	ldr	r3, [r3, #36]	; 0x24
   1debc:	cmp	r3, #0
   1dec0:	bne	1df30 <__assert_fail@plt+0xc90c>
   1dec4:	ldr	r0, [fp, #-16]
   1dec8:	bl	114e0 <fileno@plt>
   1decc:	mov	r1, r0
   1ded0:	ldr	r3, [fp, #4]
   1ded4:	str	r3, [sp]
   1ded8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1dedc:	mov	r0, r1
   1dee0:	bl	11384 <lseek64@plt>
   1dee4:	strd	r0, [fp, #-12]
   1dee8:	ldrd	r2, [fp, #-12]
   1deec:	mvn	r0, #0
   1def0:	mvn	r1, #0
   1def4:	cmp	r3, r1
   1def8:	cmpeq	r2, r0
   1defc:	bne	1df08 <__assert_fail@plt+0xc8e4>
   1df00:	mvn	r3, #0
   1df04:	b	1df48 <__assert_fail@plt+0xc924>
   1df08:	ldr	r3, [fp, #-16]
   1df0c:	ldr	r3, [r3]
   1df10:	bic	r2, r3, #16
   1df14:	ldr	r3, [fp, #-16]
   1df18:	str	r2, [r3]
   1df1c:	ldr	r1, [fp, #-16]
   1df20:	ldrd	r2, [fp, #-12]
   1df24:	strd	r2, [r1, #80]	; 0x50
   1df28:	mov	r3, #0
   1df2c:	b	1df48 <__assert_fail@plt+0xc924>
   1df30:	ldr	r3, [fp, #4]
   1df34:	str	r3, [sp]
   1df38:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1df3c:	ldr	r0, [fp, #-16]
   1df40:	bl	1151c <fseeko64@plt>
   1df44:	mov	r3, r0
   1df48:	mov	r0, r3
   1df4c:	sub	sp, fp, #4
   1df50:	ldr	fp, [sp]
   1df54:	add	sp, sp, #4
   1df58:	pop	{pc}		; (ldr pc, [sp], #4)
   1df5c:	str	fp, [sp, #-8]!
   1df60:	str	lr, [sp, #4]
   1df64:	add	fp, sp, #4
   1df68:	bl	114bc <__errno_location@plt>
   1df6c:	mov	r2, r0
   1df70:	mov	r3, #12
   1df74:	str	r3, [r2]
   1df78:	mov	r3, #0
   1df7c:	mov	r0, r3
   1df80:	sub	sp, fp, #4
   1df84:	ldr	fp, [sp]
   1df88:	add	sp, sp, #4
   1df8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1df90:	str	fp, [sp, #-8]!
   1df94:	str	lr, [sp, #4]
   1df98:	add	fp, sp, #4
   1df9c:	sub	sp, sp, #8
   1dfa0:	str	r0, [fp, #-8]
   1dfa4:	ldr	r3, [fp, #-8]
   1dfa8:	mov	r0, r3
   1dfac:	bl	1ce10 <__assert_fail@plt+0xb7ec>
   1dfb0:	mov	r3, r0
   1dfb4:	mov	r0, r3
   1dfb8:	sub	sp, fp, #4
   1dfbc:	ldr	fp, [sp]
   1dfc0:	add	sp, sp, #4
   1dfc4:	pop	{pc}		; (ldr pc, [sp], #4)
   1dfc8:	str	fp, [sp, #-8]!
   1dfcc:	str	lr, [sp, #4]
   1dfd0:	add	fp, sp, #4
   1dfd4:	sub	sp, sp, #8
   1dfd8:	str	r0, [fp, #-8]
   1dfdc:	str	r1, [fp, #-12]
   1dfe0:	ldr	r3, [fp, #-12]
   1dfe4:	cmp	r3, #0
   1dfe8:	moveq	r3, #1
   1dfec:	movne	r3, #0
   1dff0:	uxtb	r3, r3
   1dff4:	mov	r2, r3
   1dff8:	ldr	r3, [fp, #-12]
   1dffc:	orr	r3, r2, r3
   1e000:	mov	r1, r3
   1e004:	ldr	r0, [fp, #-8]
   1e008:	bl	1cea0 <__assert_fail@plt+0xb87c>
   1e00c:	mov	r3, r0
   1e010:	mov	r0, r3
   1e014:	sub	sp, fp, #4
   1e018:	ldr	fp, [sp]
   1e01c:	add	sp, sp, #4
   1e020:	pop	{pc}		; (ldr pc, [sp], #4)
   1e024:	str	fp, [sp, #-8]!
   1e028:	str	lr, [sp, #4]
   1e02c:	add	fp, sp, #4
   1e030:	sub	sp, sp, #8
   1e034:	str	r0, [fp, #-8]
   1e038:	str	r1, [fp, #-12]
   1e03c:	ldr	r3, [fp, #-8]
   1e040:	ldr	r2, [fp, #-12]
   1e044:	mov	r1, r2
   1e048:	mov	r0, r3
   1e04c:	bl	1cd40 <__assert_fail@plt+0xb71c>
   1e050:	mov	r3, r0
   1e054:	mov	r0, r3
   1e058:	sub	sp, fp, #4
   1e05c:	ldr	fp, [sp]
   1e060:	add	sp, sp, #4
   1e064:	pop	{pc}		; (ldr pc, [sp], #4)
   1e068:	str	fp, [sp, #-8]!
   1e06c:	str	lr, [sp, #4]
   1e070:	add	fp, sp, #4
   1e074:	sub	sp, sp, #16
   1e078:	str	r0, [fp, #-8]
   1e07c:	str	r1, [fp, #-12]
   1e080:	str	r2, [fp, #-16]
   1e084:	ldr	r3, [fp, #-12]
   1e088:	cmp	r3, #0
   1e08c:	beq	1e09c <__assert_fail@plt+0xca78>
   1e090:	ldr	r3, [fp, #-16]
   1e094:	cmp	r3, #0
   1e098:	bne	1e0ac <__assert_fail@plt+0xca88>
   1e09c:	mov	r3, #1
   1e0a0:	str	r3, [fp, #-16]
   1e0a4:	ldr	r3, [fp, #-16]
   1e0a8:	str	r3, [fp, #-12]
   1e0ac:	ldr	r3, [fp, #-12]
   1e0b0:	ldr	r2, [fp, #-16]
   1e0b4:	mov	r1, r3
   1e0b8:	ldr	r0, [fp, #-8]
   1e0bc:	bl	1e288 <__assert_fail@plt+0xcc64>
   1e0c0:	mov	r3, r0
   1e0c4:	mov	r0, r3
   1e0c8:	sub	sp, fp, #4
   1e0cc:	ldr	fp, [sp]
   1e0d0:	add	sp, sp, #4
   1e0d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e0d8:	str	fp, [sp, #-8]!
   1e0dc:	str	lr, [sp, #4]
   1e0e0:	add	fp, sp, #4
   1e0e4:	sub	sp, sp, #8
   1e0e8:	mov	r0, #14
   1e0ec:	bl	1154c <nl_langinfo@plt>
   1e0f0:	str	r0, [fp, #-8]
   1e0f4:	ldr	r3, [fp, #-8]
   1e0f8:	cmp	r3, #0
   1e0fc:	bne	1e10c <__assert_fail@plt+0xcae8>
   1e100:	movw	r3, #2096	; 0x830
   1e104:	movt	r3, #2
   1e108:	str	r3, [fp, #-8]
   1e10c:	ldr	r3, [fp, #-8]
   1e110:	ldrb	r3, [r3]
   1e114:	cmp	r3, #0
   1e118:	bne	1e128 <__assert_fail@plt+0xcb04>
   1e11c:	movw	r3, #2100	; 0x834
   1e120:	movt	r3, #2
   1e124:	str	r3, [fp, #-8]
   1e128:	ldr	r3, [fp, #-8]
   1e12c:	mov	r0, r3
   1e130:	sub	sp, fp, #4
   1e134:	ldr	fp, [sp]
   1e138:	add	sp, sp, #4
   1e13c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e140:	str	fp, [sp, #-8]!
   1e144:	str	lr, [sp, #4]
   1e148:	add	fp, sp, #4
   1e14c:	sub	sp, sp, #32
   1e150:	str	r0, [fp, #-24]	; 0xffffffe8
   1e154:	str	r1, [fp, #-28]	; 0xffffffe4
   1e158:	str	r2, [fp, #-32]	; 0xffffffe0
   1e15c:	str	r3, [fp, #-36]	; 0xffffffdc
   1e160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e164:	cmp	r3, #0
   1e168:	bne	1e174 <__assert_fail@plt+0xcb50>
   1e16c:	sub	r3, fp, #16
   1e170:	str	r3, [fp, #-24]	; 0xffffffe8
   1e174:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e178:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e17c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e184:	bl	113c0 <mbrtowc@plt>
   1e188:	str	r0, [fp, #-8]
   1e18c:	ldr	r3, [fp, #-8]
   1e190:	cmn	r3, #3
   1e194:	bls	1e1e0 <__assert_fail@plt+0xcbbc>
   1e198:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e19c:	cmp	r3, #0
   1e1a0:	beq	1e1e0 <__assert_fail@plt+0xcbbc>
   1e1a4:	mov	r0, #0
   1e1a8:	bl	1ef48 <__assert_fail@plt+0xd924>
   1e1ac:	mov	r3, r0
   1e1b0:	eor	r3, r3, #1
   1e1b4:	uxtb	r3, r3
   1e1b8:	cmp	r3, #0
   1e1bc:	beq	1e1e0 <__assert_fail@plt+0xcbbc>
   1e1c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e1c4:	ldrb	r3, [r3]
   1e1c8:	strb	r3, [fp, #-9]
   1e1cc:	ldrb	r2, [fp, #-9]
   1e1d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e1d4:	str	r2, [r3]
   1e1d8:	mov	r3, #1
   1e1dc:	b	1e1e4 <__assert_fail@plt+0xcbc0>
   1e1e0:	ldr	r3, [fp, #-8]
   1e1e4:	mov	r0, r3
   1e1e8:	sub	sp, fp, #4
   1e1ec:	ldr	fp, [sp]
   1e1f0:	add	sp, sp, #4
   1e1f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e1f8:	str	r4, [sp, #-12]!
   1e1fc:	str	fp, [sp, #4]
   1e200:	str	lr, [sp, #8]
   1e204:	add	fp, sp, #8
   1e208:	sub	sp, sp, #12
   1e20c:	str	r0, [fp, #-16]
   1e210:	movw	r3, #4460	; 0x116c
   1e214:	movt	r3, #3
   1e218:	ldr	r4, [r3]
   1e21c:	movw	r0, #2108	; 0x83c
   1e220:	movt	r0, #2
   1e224:	bl	11474 <gettext@plt>
   1e228:	mov	r3, r0
   1e22c:	mov	r2, r3
   1e230:	ldr	r1, [fp, #-16]
   1e234:	mov	r0, r4
   1e238:	bl	113cc <error@plt>
   1e23c:	bl	115e8 <abort@plt>
   1e240:	str	r4, [sp, #-12]!
   1e244:	str	fp, [sp, #4]
   1e248:	str	lr, [sp, #8]
   1e24c:	add	fp, sp, #8
   1e250:	sub	sp, sp, #12
   1e254:	str	r0, [fp, #-16]
   1e258:	movw	r3, #4460	; 0x116c
   1e25c:	movt	r3, #3
   1e260:	ldr	r4, [r3]
   1e264:	movw	r0, #2152	; 0x868
   1e268:	movt	r0, #2
   1e26c:	bl	11474 <gettext@plt>
   1e270:	mov	r3, r0
   1e274:	mov	r2, r3
   1e278:	ldr	r1, [fp, #-16]
   1e27c:	mov	r0, r4
   1e280:	bl	113cc <error@plt>
   1e284:	bl	115e8 <abort@plt>
   1e288:	str	fp, [sp, #-8]!
   1e28c:	str	lr, [sp, #4]
   1e290:	add	fp, sp, #4
   1e294:	sub	sp, sp, #24
   1e298:	str	r0, [fp, #-16]
   1e29c:	str	r1, [fp, #-20]	; 0xffffffec
   1e2a0:	str	r2, [fp, #-24]	; 0xffffffe8
   1e2a4:	mov	ip, #0
   1e2a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e2ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e2b0:	umull	r0, r1, r2, r3
   1e2b4:	mov	r2, #0
   1e2b8:	mov	r3, #0
   1e2bc:	mov	r2, r1
   1e2c0:	mov	r3, #0
   1e2c4:	cmp	r2, #0
   1e2c8:	beq	1e2d0 <__assert_fail@plt+0xccac>
   1e2cc:	mov	ip, #1
   1e2d0:	mov	r3, r0
   1e2d4:	str	r3, [fp, #-8]
   1e2d8:	mov	r3, ip
   1e2dc:	and	r3, r3, #1
   1e2e0:	uxtb	r3, r3
   1e2e4:	cmp	r3, #0
   1e2e8:	beq	1e304 <__assert_fail@plt+0xcce0>
   1e2ec:	bl	114bc <__errno_location@plt>
   1e2f0:	mov	r2, r0
   1e2f4:	mov	r3, #12
   1e2f8:	str	r3, [r2]
   1e2fc:	mov	r3, #0
   1e300:	b	1e318 <__assert_fail@plt+0xccf4>
   1e304:	ldr	r3, [fp, #-8]
   1e308:	mov	r1, r3
   1e30c:	ldr	r0, [fp, #-16]
   1e310:	bl	1cea0 <__assert_fail@plt+0xb87c>
   1e314:	mov	r3, r0
   1e318:	mov	r0, r3
   1e31c:	sub	sp, fp, #4
   1e320:	ldr	fp, [sp]
   1e324:	add	sp, sp, #4
   1e328:	pop	{pc}		; (ldr pc, [sp], #4)
   1e32c:	str	fp, [sp, #-8]!
   1e330:	str	lr, [sp, #4]
   1e334:	add	fp, sp, #4
   1e338:	sub	sp, sp, #8
   1e33c:	str	r0, [fp, #-8]
   1e340:	ldr	r3, [fp, #-8]
   1e344:	mov	r2, #0
   1e348:	str	r2, [r3, #4]
   1e34c:	mov	r1, #524288	; 0x80000
   1e350:	movw	r0, #2200	; 0x898
   1e354:	movt	r0, #2
   1e358:	bl	1dc80 <__assert_fail@plt+0xc65c>
   1e35c:	mov	r2, r0
   1e360:	ldr	r3, [fp, #-8]
   1e364:	str	r2, [r3]
   1e368:	ldr	r3, [fp, #-8]
   1e36c:	ldr	r3, [r3]
   1e370:	cmp	r3, #0
   1e374:	bge	1e3b0 <__assert_fail@plt+0xcd8c>
   1e378:	mov	r1, #0
   1e37c:	mov	r0, #0
   1e380:	bl	11450 <getcwd@plt>
   1e384:	mov	r2, r0
   1e388:	ldr	r3, [fp, #-8]
   1e38c:	str	r2, [r3, #4]
   1e390:	ldr	r3, [fp, #-8]
   1e394:	ldr	r3, [r3, #4]
   1e398:	cmp	r3, #0
   1e39c:	beq	1e3a8 <__assert_fail@plt+0xcd84>
   1e3a0:	mov	r3, #0
   1e3a4:	b	1e3b4 <__assert_fail@plt+0xcd90>
   1e3a8:	mvn	r3, #0
   1e3ac:	b	1e3b4 <__assert_fail@plt+0xcd90>
   1e3b0:	mov	r3, #0
   1e3b4:	mov	r0, r3
   1e3b8:	sub	sp, fp, #4
   1e3bc:	ldr	fp, [sp]
   1e3c0:	add	sp, sp, #4
   1e3c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e3c8:	str	fp, [sp, #-8]!
   1e3cc:	str	lr, [sp, #4]
   1e3d0:	add	fp, sp, #4
   1e3d4:	sub	sp, sp, #8
   1e3d8:	str	r0, [fp, #-8]
   1e3dc:	ldr	r3, [fp, #-8]
   1e3e0:	ldr	r3, [r3]
   1e3e4:	cmp	r3, #0
   1e3e8:	blt	1e404 <__assert_fail@plt+0xcde0>
   1e3ec:	ldr	r3, [fp, #-8]
   1e3f0:	ldr	r3, [r3]
   1e3f4:	mov	r0, r3
   1e3f8:	bl	11588 <fchdir@plt>
   1e3fc:	mov	r3, r0
   1e400:	b	1e418 <__assert_fail@plt+0xcdf4>
   1e404:	ldr	r3, [fp, #-8]
   1e408:	ldr	r3, [r3, #4]
   1e40c:	mov	r0, r3
   1e410:	bl	1eb9c <__assert_fail@plt+0xd578>
   1e414:	mov	r3, r0
   1e418:	mov	r0, r3
   1e41c:	sub	sp, fp, #4
   1e420:	ldr	fp, [sp]
   1e424:	add	sp, sp, #4
   1e428:	pop	{pc}		; (ldr pc, [sp], #4)
   1e42c:	str	fp, [sp, #-8]!
   1e430:	str	lr, [sp, #4]
   1e434:	add	fp, sp, #4
   1e438:	sub	sp, sp, #8
   1e43c:	str	r0, [fp, #-8]
   1e440:	ldr	r3, [fp, #-8]
   1e444:	ldr	r3, [r3]
   1e448:	cmp	r3, #0
   1e44c:	blt	1e460 <__assert_fail@plt+0xce3c>
   1e450:	ldr	r3, [fp, #-8]
   1e454:	ldr	r3, [r3]
   1e458:	mov	r0, r3
   1e45c:	bl	115f4 <close@plt>
   1e460:	ldr	r3, [fp, #-8]
   1e464:	ldr	r3, [r3, #4]
   1e468:	mov	r0, r3
   1e46c:	bl	1ddc8 <__assert_fail@plt+0xc7a4>
   1e470:	nop	{0}
   1e474:	sub	sp, fp, #4
   1e478:	ldr	fp, [sp]
   1e47c:	add	sp, sp, #4
   1e480:	pop	{pc}		; (ldr pc, [sp], #4)
   1e484:	str	fp, [sp, #-8]!
   1e488:	str	lr, [sp, #4]
   1e48c:	add	fp, sp, #4
   1e490:	sub	sp, sp, #8
   1e494:	str	r0, [fp, #-8]
   1e498:	mov	r2, #3
   1e49c:	mov	r1, #0
   1e4a0:	ldr	r0, [fp, #-8]
   1e4a4:	bl	1d89c <__assert_fail@plt+0xc278>
   1e4a8:	mov	r3, r0
   1e4ac:	mov	r0, r3
   1e4b0:	sub	sp, fp, #4
   1e4b4:	ldr	fp, [sp]
   1e4b8:	add	sp, sp, #4
   1e4bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1e4c0:	push	{fp}		; (str fp, [sp, #-4]!)
   1e4c4:	add	fp, sp, #0
   1e4c8:	sub	sp, sp, #12
   1e4cc:	str	r0, [fp, #-8]
   1e4d0:	ldr	r3, [fp, #-8]
   1e4d4:	cmp	r3, #90	; 0x5a
   1e4d8:	bgt	1e4fc <__assert_fail@plt+0xced8>
   1e4dc:	ldr	r3, [fp, #-8]
   1e4e0:	cmp	r3, #65	; 0x41
   1e4e4:	bge	1e50c <__assert_fail@plt+0xcee8>
   1e4e8:	ldr	r3, [fp, #-8]
   1e4ec:	sub	r3, r3, #48	; 0x30
   1e4f0:	cmp	r3, #9
   1e4f4:	bhi	1e514 <__assert_fail@plt+0xcef0>
   1e4f8:	b	1e50c <__assert_fail@plt+0xcee8>
   1e4fc:	ldr	r3, [fp, #-8]
   1e500:	sub	r3, r3, #97	; 0x61
   1e504:	cmp	r3, #25
   1e508:	bhi	1e514 <__assert_fail@plt+0xcef0>
   1e50c:	mov	r3, #1
   1e510:	b	1e518 <__assert_fail@plt+0xcef4>
   1e514:	mov	r3, #0
   1e518:	mov	r0, r3
   1e51c:	add	sp, fp, #0
   1e520:	pop	{fp}		; (ldr fp, [sp], #4)
   1e524:	bx	lr
   1e528:	push	{fp}		; (str fp, [sp, #-4]!)
   1e52c:	add	fp, sp, #0
   1e530:	sub	sp, sp, #12
   1e534:	str	r0, [fp, #-8]
   1e538:	ldr	r3, [fp, #-8]
   1e53c:	cmp	r3, #65	; 0x41
   1e540:	blt	1e568 <__assert_fail@plt+0xcf44>
   1e544:	ldr	r3, [fp, #-8]
   1e548:	cmp	r3, #90	; 0x5a
   1e54c:	ble	1e560 <__assert_fail@plt+0xcf3c>
   1e550:	ldr	r3, [fp, #-8]
   1e554:	sub	r3, r3, #97	; 0x61
   1e558:	cmp	r3, #25
   1e55c:	bhi	1e568 <__assert_fail@plt+0xcf44>
   1e560:	mov	r3, #1
   1e564:	b	1e56c <__assert_fail@plt+0xcf48>
   1e568:	mov	r3, #0
   1e56c:	mov	r0, r3
   1e570:	add	sp, fp, #0
   1e574:	pop	{fp}		; (ldr fp, [sp], #4)
   1e578:	bx	lr
   1e57c:	push	{fp}		; (str fp, [sp, #-4]!)
   1e580:	add	fp, sp, #0
   1e584:	sub	sp, sp, #12
   1e588:	str	r0, [fp, #-8]
   1e58c:	ldr	r3, [fp, #-8]
   1e590:	cmp	r3, #127	; 0x7f
   1e594:	bhi	1e5a0 <__assert_fail@plt+0xcf7c>
   1e598:	mov	r3, #1
   1e59c:	b	1e5a4 <__assert_fail@plt+0xcf80>
   1e5a0:	mov	r3, #0
   1e5a4:	mov	r0, r3
   1e5a8:	add	sp, fp, #0
   1e5ac:	pop	{fp}		; (ldr fp, [sp], #4)
   1e5b0:	bx	lr
   1e5b4:	push	{fp}		; (str fp, [sp, #-4]!)
   1e5b8:	add	fp, sp, #0
   1e5bc:	sub	sp, sp, #12
   1e5c0:	str	r0, [fp, #-8]
   1e5c4:	ldr	r3, [fp, #-8]
   1e5c8:	cmp	r3, #32
   1e5cc:	beq	1e5dc <__assert_fail@plt+0xcfb8>
   1e5d0:	ldr	r3, [fp, #-8]
   1e5d4:	cmp	r3, #9
   1e5d8:	bne	1e5e4 <__assert_fail@plt+0xcfc0>
   1e5dc:	mov	r3, #1
   1e5e0:	b	1e5e8 <__assert_fail@plt+0xcfc4>
   1e5e4:	mov	r3, #0
   1e5e8:	and	r3, r3, #1
   1e5ec:	uxtb	r3, r3
   1e5f0:	mov	r0, r3
   1e5f4:	add	sp, fp, #0
   1e5f8:	pop	{fp}		; (ldr fp, [sp], #4)
   1e5fc:	bx	lr
   1e600:	push	{fp}		; (str fp, [sp, #-4]!)
   1e604:	add	fp, sp, #0
   1e608:	sub	sp, sp, #12
   1e60c:	str	r0, [fp, #-8]
   1e610:	ldr	r3, [fp, #-8]
   1e614:	cmp	r3, #0
   1e618:	blt	1e63c <__assert_fail@plt+0xd018>
   1e61c:	ldr	r3, [fp, #-8]
   1e620:	cmp	r3, #31
   1e624:	ble	1e634 <__assert_fail@plt+0xd010>
   1e628:	ldr	r3, [fp, #-8]
   1e62c:	cmp	r3, #127	; 0x7f
   1e630:	bne	1e63c <__assert_fail@plt+0xd018>
   1e634:	mov	r3, #1
   1e638:	b	1e640 <__assert_fail@plt+0xd01c>
   1e63c:	mov	r3, #0
   1e640:	mov	r0, r3
   1e644:	add	sp, fp, #0
   1e648:	pop	{fp}		; (ldr fp, [sp], #4)
   1e64c:	bx	lr
   1e650:	push	{fp}		; (str fp, [sp, #-4]!)
   1e654:	add	fp, sp, #0
   1e658:	sub	sp, sp, #12
   1e65c:	str	r0, [fp, #-8]
   1e660:	ldr	r3, [fp, #-8]
   1e664:	sub	r3, r3, #48	; 0x30
   1e668:	cmp	r3, #9
   1e66c:	bhi	1e678 <__assert_fail@plt+0xd054>
   1e670:	mov	r3, #1
   1e674:	b	1e67c <__assert_fail@plt+0xd058>
   1e678:	mov	r3, #0
   1e67c:	mov	r0, r3
   1e680:	add	sp, fp, #0
   1e684:	pop	{fp}		; (ldr fp, [sp], #4)
   1e688:	bx	lr
   1e68c:	push	{fp}		; (str fp, [sp, #-4]!)
   1e690:	add	fp, sp, #0
   1e694:	sub	sp, sp, #12
   1e698:	str	r0, [fp, #-8]
   1e69c:	ldr	r3, [fp, #-8]
   1e6a0:	sub	r3, r3, #33	; 0x21
   1e6a4:	cmp	r3, #93	; 0x5d
   1e6a8:	bhi	1e6b4 <__assert_fail@plt+0xd090>
   1e6ac:	mov	r3, #1
   1e6b0:	b	1e6b8 <__assert_fail@plt+0xd094>
   1e6b4:	mov	r3, #0
   1e6b8:	mov	r0, r3
   1e6bc:	add	sp, fp, #0
   1e6c0:	pop	{fp}		; (ldr fp, [sp], #4)
   1e6c4:	bx	lr
   1e6c8:	push	{fp}		; (str fp, [sp, #-4]!)
   1e6cc:	add	fp, sp, #0
   1e6d0:	sub	sp, sp, #12
   1e6d4:	str	r0, [fp, #-8]
   1e6d8:	ldr	r3, [fp, #-8]
   1e6dc:	sub	r3, r3, #97	; 0x61
   1e6e0:	cmp	r3, #25
   1e6e4:	bhi	1e6f0 <__assert_fail@plt+0xd0cc>
   1e6e8:	mov	r3, #1
   1e6ec:	b	1e6f4 <__assert_fail@plt+0xd0d0>
   1e6f0:	mov	r3, #0
   1e6f4:	mov	r0, r3
   1e6f8:	add	sp, fp, #0
   1e6fc:	pop	{fp}		; (ldr fp, [sp], #4)
   1e700:	bx	lr
   1e704:	push	{fp}		; (str fp, [sp, #-4]!)
   1e708:	add	fp, sp, #0
   1e70c:	sub	sp, sp, #12
   1e710:	str	r0, [fp, #-8]
   1e714:	ldr	r3, [fp, #-8]
   1e718:	sub	r3, r3, #32
   1e71c:	cmp	r3, #94	; 0x5e
   1e720:	bhi	1e72c <__assert_fail@plt+0xd108>
   1e724:	mov	r3, #1
   1e728:	b	1e730 <__assert_fail@plt+0xd10c>
   1e72c:	mov	r3, #0
   1e730:	mov	r0, r3
   1e734:	add	sp, fp, #0
   1e738:	pop	{fp}		; (ldr fp, [sp], #4)
   1e73c:	bx	lr
   1e740:	push	{fp}		; (str fp, [sp, #-4]!)
   1e744:	add	fp, sp, #0
   1e748:	sub	sp, sp, #12
   1e74c:	str	r0, [fp, #-8]
   1e750:	ldr	r3, [fp, #-8]
   1e754:	cmp	r3, #64	; 0x40
   1e758:	bgt	1e77c <__assert_fail@plt+0xd158>
   1e75c:	ldr	r3, [fp, #-8]
   1e760:	cmp	r3, #58	; 0x3a
   1e764:	bge	1e7a4 <__assert_fail@plt+0xd180>
   1e768:	ldr	r3, [fp, #-8]
   1e76c:	sub	r3, r3, #33	; 0x21
   1e770:	cmp	r3, #14
   1e774:	bhi	1e7ac <__assert_fail@plt+0xd188>
   1e778:	b	1e7a4 <__assert_fail@plt+0xd180>
   1e77c:	ldr	r3, [fp, #-8]
   1e780:	cmp	r3, #91	; 0x5b
   1e784:	blt	1e7ac <__assert_fail@plt+0xd188>
   1e788:	ldr	r3, [fp, #-8]
   1e78c:	cmp	r3, #96	; 0x60
   1e790:	ble	1e7a4 <__assert_fail@plt+0xd180>
   1e794:	ldr	r3, [fp, #-8]
   1e798:	sub	r3, r3, #123	; 0x7b
   1e79c:	cmp	r3, #3
   1e7a0:	bhi	1e7ac <__assert_fail@plt+0xd188>
   1e7a4:	mov	r3, #1
   1e7a8:	b	1e7b0 <__assert_fail@plt+0xd18c>
   1e7ac:	mov	r3, #0
   1e7b0:	mov	r0, r3
   1e7b4:	add	sp, fp, #0
   1e7b8:	pop	{fp}		; (ldr fp, [sp], #4)
   1e7bc:	bx	lr
   1e7c0:	push	{fp}		; (str fp, [sp, #-4]!)
   1e7c4:	add	fp, sp, #0
   1e7c8:	sub	sp, sp, #12
   1e7cc:	str	r0, [fp, #-8]
   1e7d0:	ldr	r3, [fp, #-8]
   1e7d4:	cmp	r3, #9
   1e7d8:	blt	1e7fc <__assert_fail@plt+0xd1d8>
   1e7dc:	ldr	r3, [fp, #-8]
   1e7e0:	cmp	r3, #13
   1e7e4:	ble	1e7f4 <__assert_fail@plt+0xd1d0>
   1e7e8:	ldr	r3, [fp, #-8]
   1e7ec:	cmp	r3, #32
   1e7f0:	bne	1e7fc <__assert_fail@plt+0xd1d8>
   1e7f4:	mov	r3, #1
   1e7f8:	b	1e800 <__assert_fail@plt+0xd1dc>
   1e7fc:	mov	r3, #0
   1e800:	mov	r0, r3
   1e804:	add	sp, fp, #0
   1e808:	pop	{fp}		; (ldr fp, [sp], #4)
   1e80c:	bx	lr
   1e810:	push	{fp}		; (str fp, [sp, #-4]!)
   1e814:	add	fp, sp, #0
   1e818:	sub	sp, sp, #12
   1e81c:	str	r0, [fp, #-8]
   1e820:	ldr	r3, [fp, #-8]
   1e824:	sub	r3, r3, #65	; 0x41
   1e828:	cmp	r3, #25
   1e82c:	bhi	1e838 <__assert_fail@plt+0xd214>
   1e830:	mov	r3, #1
   1e834:	b	1e83c <__assert_fail@plt+0xd218>
   1e838:	mov	r3, #0
   1e83c:	mov	r0, r3
   1e840:	add	sp, fp, #0
   1e844:	pop	{fp}		; (ldr fp, [sp], #4)
   1e848:	bx	lr
   1e84c:	push	{fp}		; (str fp, [sp, #-4]!)
   1e850:	add	fp, sp, #0
   1e854:	sub	sp, sp, #12
   1e858:	str	r0, [fp, #-8]
   1e85c:	ldr	r3, [fp, #-8]
   1e860:	sub	r3, r3, #48	; 0x30
   1e864:	cmp	r3, #54	; 0x36
   1e868:	ldrls	pc, [pc, r3, lsl #2]
   1e86c:	b	1e954 <__assert_fail@plt+0xd330>
   1e870:	andeq	lr, r1, ip, asr #18
   1e874:	andeq	lr, r1, ip, asr #18
   1e878:	andeq	lr, r1, ip, asr #18
   1e87c:	andeq	lr, r1, ip, asr #18
   1e880:	andeq	lr, r1, ip, asr #18
   1e884:	andeq	lr, r1, ip, asr #18
   1e888:	andeq	lr, r1, ip, asr #18
   1e88c:	andeq	lr, r1, ip, asr #18
   1e890:	andeq	lr, r1, ip, asr #18
   1e894:	andeq	lr, r1, ip, asr #18
   1e898:	andeq	lr, r1, r4, asr r9
   1e89c:	andeq	lr, r1, r4, asr r9
   1e8a0:	andeq	lr, r1, r4, asr r9
   1e8a4:	andeq	lr, r1, r4, asr r9
   1e8a8:	andeq	lr, r1, r4, asr r9
   1e8ac:	andeq	lr, r1, r4, asr r9
   1e8b0:	andeq	lr, r1, r4, asr r9
   1e8b4:	andeq	lr, r1, ip, asr #18
   1e8b8:	andeq	lr, r1, ip, asr #18
   1e8bc:	andeq	lr, r1, ip, asr #18
   1e8c0:	andeq	lr, r1, ip, asr #18
   1e8c4:	andeq	lr, r1, ip, asr #18
   1e8c8:	andeq	lr, r1, ip, asr #18
   1e8cc:	andeq	lr, r1, r4, asr r9
   1e8d0:	andeq	lr, r1, r4, asr r9
   1e8d4:	andeq	lr, r1, r4, asr r9
   1e8d8:	andeq	lr, r1, r4, asr r9
   1e8dc:	andeq	lr, r1, r4, asr r9
   1e8e0:	andeq	lr, r1, r4, asr r9
   1e8e4:	andeq	lr, r1, r4, asr r9
   1e8e8:	andeq	lr, r1, r4, asr r9
   1e8ec:	andeq	lr, r1, r4, asr r9
   1e8f0:	andeq	lr, r1, r4, asr r9
   1e8f4:	andeq	lr, r1, r4, asr r9
   1e8f8:	andeq	lr, r1, r4, asr r9
   1e8fc:	andeq	lr, r1, r4, asr r9
   1e900:	andeq	lr, r1, r4, asr r9
   1e904:	andeq	lr, r1, r4, asr r9
   1e908:	andeq	lr, r1, r4, asr r9
   1e90c:	andeq	lr, r1, r4, asr r9
   1e910:	andeq	lr, r1, r4, asr r9
   1e914:	andeq	lr, r1, r4, asr r9
   1e918:	andeq	lr, r1, r4, asr r9
   1e91c:	andeq	lr, r1, r4, asr r9
   1e920:	andeq	lr, r1, r4, asr r9
   1e924:	andeq	lr, r1, r4, asr r9
   1e928:	andeq	lr, r1, r4, asr r9
   1e92c:	andeq	lr, r1, r4, asr r9
   1e930:	andeq	lr, r1, r4, asr r9
   1e934:	andeq	lr, r1, ip, asr #18
   1e938:	andeq	lr, r1, ip, asr #18
   1e93c:	andeq	lr, r1, ip, asr #18
   1e940:	andeq	lr, r1, ip, asr #18
   1e944:	andeq	lr, r1, ip, asr #18
   1e948:	andeq	lr, r1, ip, asr #18
   1e94c:	mov	r3, #1
   1e950:	b	1e958 <__assert_fail@plt+0xd334>
   1e954:	mov	r3, #0
   1e958:	mov	r0, r3
   1e95c:	add	sp, fp, #0
   1e960:	pop	{fp}		; (ldr fp, [sp], #4)
   1e964:	bx	lr
   1e968:	push	{fp}		; (str fp, [sp, #-4]!)
   1e96c:	add	fp, sp, #0
   1e970:	sub	sp, sp, #12
   1e974:	str	r0, [fp, #-8]
   1e978:	ldr	r3, [fp, #-8]
   1e97c:	sub	r3, r3, #65	; 0x41
   1e980:	cmp	r3, #25
   1e984:	bhi	1e994 <__assert_fail@plt+0xd370>
   1e988:	ldr	r3, [fp, #-8]
   1e98c:	add	r3, r3, #32
   1e990:	b	1e998 <__assert_fail@plt+0xd374>
   1e994:	ldr	r3, [fp, #-8]
   1e998:	mov	r0, r3
   1e99c:	add	sp, fp, #0
   1e9a0:	pop	{fp}		; (ldr fp, [sp], #4)
   1e9a4:	bx	lr
   1e9a8:	push	{fp}		; (str fp, [sp, #-4]!)
   1e9ac:	add	fp, sp, #0
   1e9b0:	sub	sp, sp, #12
   1e9b4:	str	r0, [fp, #-8]
   1e9b8:	ldr	r3, [fp, #-8]
   1e9bc:	sub	r3, r3, #97	; 0x61
   1e9c0:	cmp	r3, #25
   1e9c4:	bhi	1e9d4 <__assert_fail@plt+0xd3b0>
   1e9c8:	ldr	r3, [fp, #-8]
   1e9cc:	sub	r3, r3, #32
   1e9d0:	b	1e9d8 <__assert_fail@plt+0xd3b4>
   1e9d4:	ldr	r3, [fp, #-8]
   1e9d8:	mov	r0, r3
   1e9dc:	add	sp, fp, #0
   1e9e0:	pop	{fp}		; (ldr fp, [sp], #4)
   1e9e4:	bx	lr
   1e9e8:	push	{fp}		; (str fp, [sp, #-4]!)
   1e9ec:	add	fp, sp, #0
   1e9f0:	sub	sp, sp, #12
   1e9f4:	str	r0, [fp, #-8]
   1e9f8:	ldr	r3, [fp, #-8]
   1e9fc:	mvn	r2, #99	; 0x63
   1ea00:	str	r2, [r3]
   1ea04:	nop	{0}
   1ea08:	add	sp, fp, #0
   1ea0c:	pop	{fp}		; (ldr fp, [sp], #4)
   1ea10:	bx	lr
   1ea14:	str	fp, [sp, #-8]!
   1ea18:	str	lr, [sp, #4]
   1ea1c:	add	fp, sp, #4
   1ea20:	sub	sp, sp, #8
   1ea24:	str	r0, [fp, #-8]
   1ea28:	ldr	r3, [fp, #-8]
   1ea2c:	ldr	r3, [r3]
   1ea30:	mov	r0, r3
   1ea34:	bl	11588 <fchdir@plt>
   1ea38:	mov	r3, r0
   1ea3c:	mov	r0, r3
   1ea40:	sub	sp, fp, #4
   1ea44:	ldr	fp, [sp]
   1ea48:	add	sp, sp, #4
   1ea4c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ea50:	str	fp, [sp, #-8]!
   1ea54:	str	lr, [sp, #4]
   1ea58:	add	fp, sp, #4
   1ea5c:	sub	sp, sp, #16
   1ea60:	str	r0, [fp, #-16]
   1ea64:	ldr	r3, [fp, #-16]
   1ea68:	ldr	r3, [r3]
   1ea6c:	cmp	r3, #0
   1ea70:	blt	1eacc <__assert_fail@plt+0xd4a8>
   1ea74:	ldr	r3, [fp, #-16]
   1ea78:	ldr	r3, [r3]
   1ea7c:	mov	r0, r3
   1ea80:	bl	115f4 <close@plt>
   1ea84:	mov	r3, r0
   1ea88:	cmp	r3, #0
   1ea8c:	movne	r3, #1
   1ea90:	moveq	r3, #0
   1ea94:	strb	r3, [fp, #-5]
   1ea98:	ldrb	r3, [fp, #-5]
   1ea9c:	eor	r3, r3, #1
   1eaa0:	uxtb	r3, r3
   1eaa4:	cmp	r3, #0
   1eaa8:	bne	1eacc <__assert_fail@plt+0xd4a8>
   1eaac:	movw	r3, #2312	; 0x908
   1eab0:	movt	r3, #2
   1eab4:	mov	r2, #64	; 0x40
   1eab8:	movw	r1, #2204	; 0x89c
   1eabc:	movt	r1, #2
   1eac0:	movw	r0, #2224	; 0x8b0
   1eac4:	movt	r0, #2
   1eac8:	bl	11624 <__assert_fail@plt>
   1eacc:	nop	{0}
   1ead0:	sub	sp, fp, #4
   1ead4:	ldr	fp, [sp]
   1ead8:	add	sp, sp, #4
   1eadc:	pop	{pc}		; (ldr pc, [sp], #4)
   1eae0:	str	fp, [sp, #-8]!
   1eae4:	str	lr, [sp, #4]
   1eae8:	add	fp, sp, #4
   1eaec:	sub	sp, sp, #16
   1eaf0:	str	r0, [fp, #-16]
   1eaf4:	str	r1, [fp, #-20]	; 0xffffffec
   1eaf8:	ldr	r3, [fp, #-16]
   1eafc:	ldr	r3, [r3]
   1eb00:	mov	r2, #18688	; 0x4900
   1eb04:	ldr	r1, [fp, #-20]	; 0xffffffec
   1eb08:	mov	r0, r3
   1eb0c:	bl	11498 <openat64@plt>
   1eb10:	str	r0, [fp, #-8]
   1eb14:	ldr	r3, [fp, #-8]
   1eb18:	cmp	r3, #0
   1eb1c:	bge	1eb28 <__assert_fail@plt+0xd504>
   1eb20:	mvn	r3, #0
   1eb24:	b	1eb40 <__assert_fail@plt+0xd51c>
   1eb28:	ldr	r0, [fp, #-16]
   1eb2c:	bl	1ea50 <__assert_fail@plt+0xd42c>
   1eb30:	ldr	r3, [fp, #-16]
   1eb34:	ldr	r2, [fp, #-8]
   1eb38:	str	r2, [r3]
   1eb3c:	mov	r3, #0
   1eb40:	mov	r0, r3
   1eb44:	sub	sp, fp, #4
   1eb48:	ldr	fp, [sp]
   1eb4c:	add	sp, sp, #4
   1eb50:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb54:	str	fp, [sp, #-8]!
   1eb58:	str	lr, [sp, #4]
   1eb5c:	add	fp, sp, #4
   1eb60:	sub	sp, sp, #16
   1eb64:	str	r0, [fp, #-16]
   1eb68:	movw	r1, #2240	; 0x8c0
   1eb6c:	movt	r1, #2
   1eb70:	ldr	r0, [fp, #-16]
   1eb74:	bl	11618 <strspn@plt>
   1eb78:	str	r0, [fp, #-8]
   1eb7c:	ldr	r2, [fp, #-16]
   1eb80:	ldr	r3, [fp, #-8]
   1eb84:	add	r3, r2, r3
   1eb88:	mov	r0, r3
   1eb8c:	sub	sp, fp, #4
   1eb90:	ldr	fp, [sp]
   1eb94:	add	sp, sp, #4
   1eb98:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb9c:	str	fp, [sp, #-8]!
   1eba0:	str	lr, [sp, #4]
   1eba4:	add	fp, sp, #4
   1eba8:	sub	sp, sp, #48	; 0x30
   1ebac:	str	r0, [fp, #-48]	; 0xffffffd0
   1ebb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ebb4:	bl	11348 <chdir@plt>
   1ebb8:	str	r0, [fp, #-8]
   1ebbc:	ldr	r3, [fp, #-8]
   1ebc0:	cmp	r3, #0
   1ebc4:	beq	1ebdc <__assert_fail@plt+0xd5b8>
   1ebc8:	bl	114bc <__errno_location@plt>
   1ebcc:	mov	r3, r0
   1ebd0:	ldr	r3, [r3]
   1ebd4:	cmp	r3, #36	; 0x24
   1ebd8:	beq	1ebe4 <__assert_fail@plt+0xd5c0>
   1ebdc:	ldr	r3, [fp, #-8]
   1ebe0:	b	1ef34 <__assert_fail@plt+0xd910>
   1ebe4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ebe8:	bl	1148c <strlen@plt>
   1ebec:	str	r0, [fp, #-12]
   1ebf0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ebf4:	ldr	r3, [fp, #-12]
   1ebf8:	add	r3, r2, r3
   1ebfc:	str	r3, [fp, #-16]
   1ec00:	sub	r3, fp, #44	; 0x2c
   1ec04:	mov	r0, r3
   1ec08:	bl	1e9e8 <__assert_fail@plt+0xd3c4>
   1ec0c:	ldr	r3, [fp, #-12]
   1ec10:	cmp	r3, #0
   1ec14:	bne	1ec38 <__assert_fail@plt+0xd614>
   1ec18:	movw	r3, #2324	; 0x914
   1ec1c:	movt	r3, #2
   1ec20:	mov	r2, #126	; 0x7e
   1ec24:	movw	r1, #2204	; 0x89c
   1ec28:	movt	r1, #2
   1ec2c:	movw	r0, #2244	; 0x8c4
   1ec30:	movt	r0, #2
   1ec34:	bl	11624 <__assert_fail@plt>
   1ec38:	ldr	r3, [fp, #-12]
   1ec3c:	cmp	r3, #4096	; 0x1000
   1ec40:	bcs	1ec64 <__assert_fail@plt+0xd640>
   1ec44:	movw	r3, #2324	; 0x914
   1ec48:	movt	r3, #2
   1ec4c:	mov	r2, #127	; 0x7f
   1ec50:	movw	r1, #2204	; 0x89c
   1ec54:	movt	r1, #2
   1ec58:	movw	r0, #2252	; 0x8cc
   1ec5c:	movt	r0, #2
   1ec60:	bl	11624 <__assert_fail@plt>
   1ec64:	movw	r1, #2240	; 0x8c0
   1ec68:	movt	r1, #2
   1ec6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ec70:	bl	11618 <strspn@plt>
   1ec74:	str	r0, [fp, #-20]	; 0xffffffec
   1ec78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ec7c:	cmp	r3, #2
   1ec80:	bne	1ed20 <__assert_fail@plt+0xd6fc>
   1ec84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ec88:	add	r0, r3, #3
   1ec8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ec90:	add	r3, r3, #3
   1ec94:	ldr	r2, [fp, #-16]
   1ec98:	sub	r3, r2, r3
   1ec9c:	mov	r2, r3
   1eca0:	mov	r1, #47	; 0x2f
   1eca4:	bl	114ec <memchr@plt>
   1eca8:	str	r0, [fp, #-24]	; 0xffffffe8
   1ecac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ecb0:	cmp	r3, #0
   1ecb4:	bne	1ecd0 <__assert_fail@plt+0xd6ac>
   1ecb8:	bl	114bc <__errno_location@plt>
   1ecbc:	mov	r2, r0
   1ecc0:	mov	r3, #36	; 0x24
   1ecc4:	str	r3, [r2]
   1ecc8:	mvn	r3, #0
   1eccc:	b	1ef34 <__assert_fail@plt+0xd910>
   1ecd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ecd4:	mov	r2, #0
   1ecd8:	strb	r2, [r3]
   1ecdc:	sub	r3, fp, #44	; 0x2c
   1ece0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1ece4:	mov	r0, r3
   1ece8:	bl	1eae0 <__assert_fail@plt+0xd4bc>
   1ecec:	str	r0, [fp, #-28]	; 0xffffffe4
   1ecf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ecf4:	mov	r2, #47	; 0x2f
   1ecf8:	strb	r2, [r3]
   1ecfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ed00:	cmp	r3, #0
   1ed04:	bne	1eee0 <__assert_fail@plt+0xd8bc>
   1ed08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed0c:	add	r3, r3, #1
   1ed10:	mov	r0, r3
   1ed14:	bl	1eb54 <__assert_fail@plt+0xd530>
   1ed18:	str	r0, [fp, #-48]	; 0xffffffd0
   1ed1c:	b	1ed5c <__assert_fail@plt+0xd738>
   1ed20:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ed24:	cmp	r3, #0
   1ed28:	beq	1ed5c <__assert_fail@plt+0xd738>
   1ed2c:	sub	r3, fp, #44	; 0x2c
   1ed30:	movw	r1, #2240	; 0x8c0
   1ed34:	movt	r1, #2
   1ed38:	mov	r0, r3
   1ed3c:	bl	1eae0 <__assert_fail@plt+0xd4bc>
   1ed40:	mov	r3, r0
   1ed44:	cmp	r3, #0
   1ed48:	bne	1eee8 <__assert_fail@plt+0xd8c4>
   1ed4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ed50:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ed54:	add	r3, r2, r3
   1ed58:	str	r3, [fp, #-48]	; 0xffffffd0
   1ed5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ed60:	ldrb	r3, [r3]
   1ed64:	cmp	r3, #47	; 0x2f
   1ed68:	bne	1ed8c <__assert_fail@plt+0xd768>
   1ed6c:	movw	r3, #2324	; 0x914
   1ed70:	movt	r3, #2
   1ed74:	mov	r2, #162	; 0xa2
   1ed78:	movw	r1, #2204	; 0x89c
   1ed7c:	movt	r1, #2
   1ed80:	movw	r0, #2264	; 0x8d8
   1ed84:	movt	r0, #2
   1ed88:	bl	11624 <__assert_fail@plt>
   1ed8c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ed90:	ldr	r3, [fp, #-16]
   1ed94:	cmp	r2, r3
   1ed98:	bls	1ee74 <__assert_fail@plt+0xd850>
   1ed9c:	movw	r3, #2324	; 0x914
   1eda0:	movt	r3, #2
   1eda4:	mov	r2, #163	; 0xa3
   1eda8:	movw	r1, #2204	; 0x89c
   1edac:	movt	r1, #2
   1edb0:	movw	r0, #2276	; 0x8e4
   1edb4:	movt	r0, #2
   1edb8:	bl	11624 <__assert_fail@plt>
   1edbc:	mov	r2, #4096	; 0x1000
   1edc0:	mov	r1, #47	; 0x2f
   1edc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1edc8:	bl	114a4 <memrchr@plt>
   1edcc:	str	r0, [fp, #-32]	; 0xffffffe0
   1edd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1edd4:	cmp	r3, #0
   1edd8:	bne	1edf4 <__assert_fail@plt+0xd7d0>
   1eddc:	bl	114bc <__errno_location@plt>
   1ede0:	mov	r2, r0
   1ede4:	mov	r3, #36	; 0x24
   1ede8:	str	r3, [r2]
   1edec:	mvn	r3, #0
   1edf0:	b	1ef34 <__assert_fail@plt+0xd910>
   1edf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1edf8:	mov	r2, #0
   1edfc:	strb	r2, [r3]
   1ee00:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ee04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ee08:	sub	r3, r2, r3
   1ee0c:	cmp	r3, #4096	; 0x1000
   1ee10:	blt	1ee34 <__assert_fail@plt+0xd810>
   1ee14:	movw	r3, #2324	; 0x914
   1ee18:	movt	r3, #2
   1ee1c:	mov	r2, #179	; 0xb3
   1ee20:	movw	r1, #2204	; 0x89c
   1ee24:	movt	r1, #2
   1ee28:	movw	r0, #2292	; 0x8f4
   1ee2c:	movt	r0, #2
   1ee30:	bl	11624 <__assert_fail@plt>
   1ee34:	sub	r3, fp, #44	; 0x2c
   1ee38:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1ee3c:	mov	r0, r3
   1ee40:	bl	1eae0 <__assert_fail@plt+0xd4bc>
   1ee44:	str	r0, [fp, #-36]	; 0xffffffdc
   1ee48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ee4c:	mov	r2, #47	; 0x2f
   1ee50:	strb	r2, [r3]
   1ee54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ee58:	cmp	r3, #0
   1ee5c:	bne	1eef0 <__assert_fail@plt+0xd8cc>
   1ee60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ee64:	add	r3, r3, #1
   1ee68:	mov	r0, r3
   1ee6c:	bl	1eb54 <__assert_fail@plt+0xd530>
   1ee70:	str	r0, [fp, #-48]	; 0xffffffd0
   1ee74:	ldr	r2, [fp, #-16]
   1ee78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ee7c:	sub	r3, r2, r3
   1ee80:	cmp	r3, #4096	; 0x1000
   1ee84:	bge	1edbc <__assert_fail@plt+0xd798>
   1ee88:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ee8c:	ldr	r3, [fp, #-16]
   1ee90:	cmp	r2, r3
   1ee94:	bcs	1eeb4 <__assert_fail@plt+0xd890>
   1ee98:	sub	r3, fp, #44	; 0x2c
   1ee9c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1eea0:	mov	r0, r3
   1eea4:	bl	1eae0 <__assert_fail@plt+0xd4bc>
   1eea8:	mov	r3, r0
   1eeac:	cmp	r3, #0
   1eeb0:	bne	1eef8 <__assert_fail@plt+0xd8d4>
   1eeb4:	sub	r3, fp, #44	; 0x2c
   1eeb8:	mov	r0, r3
   1eebc:	bl	1ea14 <__assert_fail@plt+0xd3f0>
   1eec0:	mov	r3, r0
   1eec4:	cmp	r3, #0
   1eec8:	bne	1ef00 <__assert_fail@plt+0xd8dc>
   1eecc:	sub	r3, fp, #44	; 0x2c
   1eed0:	mov	r0, r3
   1eed4:	bl	1ea50 <__assert_fail@plt+0xd42c>
   1eed8:	mov	r3, #0
   1eedc:	b	1ef34 <__assert_fail@plt+0xd910>
   1eee0:	nop	{0}
   1eee4:	b	1ef04 <__assert_fail@plt+0xd8e0>
   1eee8:	nop	{0}
   1eeec:	b	1ef04 <__assert_fail@plt+0xd8e0>
   1eef0:	nop	{0}
   1eef4:	b	1ef04 <__assert_fail@plt+0xd8e0>
   1eef8:	nop	{0}
   1eefc:	b	1ef04 <__assert_fail@plt+0xd8e0>
   1ef00:	nop	{0}
   1ef04:	bl	114bc <__errno_location@plt>
   1ef08:	mov	r3, r0
   1ef0c:	ldr	r3, [r3]
   1ef10:	str	r3, [fp, #-40]	; 0xffffffd8
   1ef14:	sub	r3, fp, #44	; 0x2c
   1ef18:	mov	r0, r3
   1ef1c:	bl	1ea50 <__assert_fail@plt+0xd42c>
   1ef20:	bl	114bc <__errno_location@plt>
   1ef24:	mov	r2, r0
   1ef28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ef2c:	str	r3, [r2]
   1ef30:	mvn	r3, #0
   1ef34:	mov	r0, r3
   1ef38:	sub	sp, fp, #4
   1ef3c:	ldr	fp, [sp]
   1ef40:	add	sp, sp, #4
   1ef44:	pop	{pc}		; (ldr pc, [sp], #4)
   1ef48:	str	fp, [sp, #-8]!
   1ef4c:	str	lr, [sp, #4]
   1ef50:	add	fp, sp, #4
   1ef54:	sub	sp, sp, #272	; 0x110
   1ef58:	str	r0, [fp, #-272]	; 0xfffffef0
   1ef5c:	sub	r3, fp, #264	; 0x108
   1ef60:	movw	r2, #257	; 0x101
   1ef64:	mov	r1, r3
   1ef68:	ldr	r0, [fp, #-272]	; 0xfffffef0
   1ef6c:	bl	1f10c <__assert_fail@plt+0xdae8>
   1ef70:	mov	r3, r0
   1ef74:	cmp	r3, #0
   1ef78:	beq	1ef84 <__assert_fail@plt+0xd960>
   1ef7c:	mov	r3, #0
   1ef80:	b	1efd8 <__assert_fail@plt+0xd9b4>
   1ef84:	sub	r3, fp, #264	; 0x108
   1ef88:	movw	r1, #2336	; 0x920
   1ef8c:	movt	r1, #2
   1ef90:	mov	r0, r3
   1ef94:	bl	1127c <strcmp@plt>
   1ef98:	mov	r3, r0
   1ef9c:	cmp	r3, #0
   1efa0:	beq	1efcc <__assert_fail@plt+0xd9a8>
   1efa4:	sub	r3, fp, #264	; 0x108
   1efa8:	movw	r1, #2340	; 0x924
   1efac:	movt	r1, #2
   1efb0:	mov	r0, r3
   1efb4:	bl	1127c <strcmp@plt>
   1efb8:	mov	r3, r0
   1efbc:	cmp	r3, #0
   1efc0:	beq	1efcc <__assert_fail@plt+0xd9a8>
   1efc4:	mov	r3, #1
   1efc8:	b	1efd0 <__assert_fail@plt+0xd9ac>
   1efcc:	mov	r3, #0
   1efd0:	and	r3, r3, #1
   1efd4:	uxtb	r3, r3
   1efd8:	mov	r0, r3
   1efdc:	sub	sp, fp, #4
   1efe0:	ldr	fp, [sp]
   1efe4:	add	sp, sp, #4
   1efe8:	pop	{pc}		; (ldr pc, [sp], #4)
   1efec:	str	fp, [sp, #-8]!
   1eff0:	str	lr, [sp, #4]
   1eff4:	add	fp, sp, #4
   1eff8:	sub	sp, sp, #16
   1effc:	str	r0, [fp, #-16]
   1f000:	mov	r1, #0
   1f004:	ldr	r0, [fp, #-16]
   1f008:	bl	11534 <setlocale@plt>
   1f00c:	str	r0, [fp, #-8]
   1f010:	ldr	r3, [fp, #-8]
   1f014:	mov	r0, r3
   1f018:	sub	sp, fp, #4
   1f01c:	ldr	fp, [sp]
   1f020:	add	sp, sp, #4
   1f024:	pop	{pc}		; (ldr pc, [sp], #4)
   1f028:	str	fp, [sp, #-8]!
   1f02c:	str	lr, [sp, #4]
   1f030:	add	fp, sp, #4
   1f034:	sub	sp, sp, #24
   1f038:	str	r0, [fp, #-16]
   1f03c:	str	r1, [fp, #-20]	; 0xffffffec
   1f040:	str	r2, [fp, #-24]	; 0xffffffe8
   1f044:	ldr	r0, [fp, #-16]
   1f048:	bl	1efec <__assert_fail@plt+0xd9c8>
   1f04c:	str	r0, [fp, #-8]
   1f050:	ldr	r3, [fp, #-8]
   1f054:	cmp	r3, #0
   1f058:	bne	1f07c <__assert_fail@plt+0xda58>
   1f05c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f060:	cmp	r3, #0
   1f064:	beq	1f074 <__assert_fail@plt+0xda50>
   1f068:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f06c:	mov	r2, #0
   1f070:	strb	r2, [r3]
   1f074:	mov	r3, #22
   1f078:	b	1f0f8 <__assert_fail@plt+0xdad4>
   1f07c:	ldr	r0, [fp, #-8]
   1f080:	bl	1148c <strlen@plt>
   1f084:	str	r0, [fp, #-12]
   1f088:	ldr	r2, [fp, #-12]
   1f08c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f090:	cmp	r2, r3
   1f094:	bcs	1f0b8 <__assert_fail@plt+0xda94>
   1f098:	ldr	r3, [fp, #-12]
   1f09c:	add	r3, r3, #1
   1f0a0:	mov	r2, r3
   1f0a4:	ldr	r1, [fp, #-8]
   1f0a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f0ac:	bl	112d0 <memcpy@plt>
   1f0b0:	mov	r3, #0
   1f0b4:	b	1f0f8 <__assert_fail@plt+0xdad4>
   1f0b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f0bc:	cmp	r3, #0
   1f0c0:	beq	1f0f4 <__assert_fail@plt+0xdad0>
   1f0c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f0c8:	sub	r3, r3, #1
   1f0cc:	mov	r2, r3
   1f0d0:	ldr	r1, [fp, #-8]
   1f0d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f0d8:	bl	112d0 <memcpy@plt>
   1f0dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f0e0:	sub	r3, r3, #1
   1f0e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f0e8:	add	r3, r2, r3
   1f0ec:	mov	r2, #0
   1f0f0:	strb	r2, [r3]
   1f0f4:	mov	r3, #34	; 0x22
   1f0f8:	mov	r0, r3
   1f0fc:	sub	sp, fp, #4
   1f100:	ldr	fp, [sp]
   1f104:	add	sp, sp, #4
   1f108:	pop	{pc}		; (ldr pc, [sp], #4)
   1f10c:	str	fp, [sp, #-8]!
   1f110:	str	lr, [sp, #4]
   1f114:	add	fp, sp, #4
   1f118:	sub	sp, sp, #16
   1f11c:	str	r0, [fp, #-8]
   1f120:	str	r1, [fp, #-12]
   1f124:	str	r2, [fp, #-16]
   1f128:	ldr	r2, [fp, #-16]
   1f12c:	ldr	r1, [fp, #-12]
   1f130:	ldr	r0, [fp, #-8]
   1f134:	bl	1f028 <__assert_fail@plt+0xda04>
   1f138:	mov	r3, r0
   1f13c:	mov	r0, r3
   1f140:	sub	sp, fp, #4
   1f144:	ldr	fp, [sp]
   1f148:	add	sp, sp, #4
   1f14c:	pop	{pc}		; (ldr pc, [sp], #4)
   1f150:	str	fp, [sp, #-8]!
   1f154:	str	lr, [sp, #4]
   1f158:	add	fp, sp, #4
   1f15c:	sub	sp, sp, #8
   1f160:	str	r0, [fp, #-8]
   1f164:	ldr	r0, [fp, #-8]
   1f168:	bl	1efec <__assert_fail@plt+0xd9c8>
   1f16c:	mov	r3, r0
   1f170:	mov	r0, r3
   1f174:	sub	sp, fp, #4
   1f178:	ldr	fp, [sp]
   1f17c:	add	sp, sp, #4
   1f180:	pop	{pc}		; (ldr pc, [sp], #4)
   1f184:	cmp	r3, #0
   1f188:	cmpeq	r2, #0
   1f18c:	bne	1f1a4 <__assert_fail@plt+0xdb80>
   1f190:	cmp	r1, #0
   1f194:	cmpeq	r0, #0
   1f198:	mvnne	r1, #0
   1f19c:	mvnne	r0, #0
   1f1a0:	b	1f1c0 <__assert_fail@plt+0xdb9c>
   1f1a4:	sub	sp, sp, #8
   1f1a8:	push	{sp, lr}
   1f1ac:	bl	1f1d0 <__assert_fail@plt+0xdbac>
   1f1b0:	ldr	lr, [sp, #4]
   1f1b4:	add	sp, sp, #8
   1f1b8:	pop	{r2, r3}
   1f1bc:	bx	lr
   1f1c0:	push	{r1, lr}
   1f1c4:	mov	r0, #8
   1f1c8:	bl	11264 <raise@plt>
   1f1cc:	pop	{r1, pc}
   1f1d0:	cmp	r1, r3
   1f1d4:	cmpeq	r0, r2
   1f1d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f1dc:	mov	r4, r0
   1f1e0:	movcc	r0, #0
   1f1e4:	mov	r5, r1
   1f1e8:	ldr	lr, [sp, #36]	; 0x24
   1f1ec:	movcc	r1, r0
   1f1f0:	bcc	1f2ec <__assert_fail@plt+0xdcc8>
   1f1f4:	cmp	r3, #0
   1f1f8:	clzeq	ip, r2
   1f1fc:	clzne	ip, r3
   1f200:	addeq	ip, ip, #32
   1f204:	cmp	r5, #0
   1f208:	clzeq	r1, r4
   1f20c:	addeq	r1, r1, #32
   1f210:	clzne	r1, r5
   1f214:	sub	ip, ip, r1
   1f218:	sub	sl, ip, #32
   1f21c:	lsl	r9, r3, ip
   1f220:	rsb	fp, ip, #32
   1f224:	orr	r9, r9, r2, lsl sl
   1f228:	orr	r9, r9, r2, lsr fp
   1f22c:	lsl	r8, r2, ip
   1f230:	cmp	r5, r9
   1f234:	cmpeq	r4, r8
   1f238:	movcc	r0, #0
   1f23c:	movcc	r1, r0
   1f240:	bcc	1f25c <__assert_fail@plt+0xdc38>
   1f244:	mov	r0, #1
   1f248:	subs	r4, r4, r8
   1f24c:	lsl	r1, r0, sl
   1f250:	orr	r1, r1, r0, lsr fp
   1f254:	lsl	r0, r0, ip
   1f258:	sbc	r5, r5, r9
   1f25c:	cmp	ip, #0
   1f260:	beq	1f2ec <__assert_fail@plt+0xdcc8>
   1f264:	lsr	r6, r8, #1
   1f268:	orr	r6, r6, r9, lsl #31
   1f26c:	lsr	r7, r9, #1
   1f270:	mov	r2, ip
   1f274:	b	1f298 <__assert_fail@plt+0xdc74>
   1f278:	subs	r3, r4, r6
   1f27c:	sbc	r8, r5, r7
   1f280:	adds	r3, r3, r3
   1f284:	adc	r8, r8, r8
   1f288:	adds	r4, r3, #1
   1f28c:	adc	r5, r8, #0
   1f290:	subs	r2, r2, #1
   1f294:	beq	1f2b4 <__assert_fail@plt+0xdc90>
   1f298:	cmp	r5, r7
   1f29c:	cmpeq	r4, r6
   1f2a0:	bcs	1f278 <__assert_fail@plt+0xdc54>
   1f2a4:	adds	r4, r4, r4
   1f2a8:	adc	r5, r5, r5
   1f2ac:	subs	r2, r2, #1
   1f2b0:	bne	1f298 <__assert_fail@plt+0xdc74>
   1f2b4:	lsr	r3, r4, ip
   1f2b8:	orr	r3, r3, r5, lsl fp
   1f2bc:	lsr	r2, r5, ip
   1f2c0:	orr	r3, r3, r5, lsr sl
   1f2c4:	adds	r0, r0, r4
   1f2c8:	mov	r4, r3
   1f2cc:	lsl	r3, r2, ip
   1f2d0:	orr	r3, r3, r4, lsl sl
   1f2d4:	lsl	ip, r4, ip
   1f2d8:	orr	r3, r3, r4, lsr fp
   1f2dc:	adc	r1, r1, r5
   1f2e0:	subs	r0, r0, ip
   1f2e4:	mov	r5, r2
   1f2e8:	sbc	r1, r1, r3
   1f2ec:	cmp	lr, #0
   1f2f0:	strdne	r4, [lr]
   1f2f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f2f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f2fc:	mov	r7, r0
   1f300:	ldr	r6, [pc, #72]	; 1f350 <__assert_fail@plt+0xdd2c>
   1f304:	ldr	r5, [pc, #72]	; 1f354 <__assert_fail@plt+0xdd30>
   1f308:	add	r6, pc, r6
   1f30c:	add	r5, pc, r5
   1f310:	sub	r6, r6, r5
   1f314:	mov	r8, r1
   1f318:	mov	r9, r2
   1f31c:	bl	11220 <fstatfs64@plt-0x20>
   1f320:	asrs	r6, r6, #2
   1f324:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f328:	mov	r4, #0
   1f32c:	add	r4, r4, #1
   1f330:	ldr	r3, [r5], #4
   1f334:	mov	r2, r9
   1f338:	mov	r1, r8
   1f33c:	mov	r0, r7
   1f340:	blx	r3
   1f344:	cmp	r6, r4
   1f348:	bne	1f32c <__assert_fail@plt+0xdd08>
   1f34c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f350:	strdeq	r1, [r1], -ip
   1f354:	strdeq	r1, [r1], -r4
   1f358:	bx	lr
   1f35c:	ldr	r3, [pc, #12]	; 1f370 <__assert_fail@plt+0xdd4c>
   1f360:	mov	r1, #0
   1f364:	add	r3, pc, r3
   1f368:	ldr	r2, [r3]
   1f36c:	b	114c8 <__cxa_atexit@plt>
   1f370:	strdeq	r1, [r1], -r8
   1f374:	mov	r2, r1
   1f378:	mov	r1, r0
   1f37c:	mov	r0, #3
   1f380:	b	115d0 <__xstat64@plt>
   1f384:	mov	r2, r1
   1f388:	mov	r1, r0
   1f38c:	mov	r0, #3
   1f390:	b	1136c <__fxstat64@plt>
   1f394:	mov	r2, r1
   1f398:	mov	r1, r0
   1f39c:	mov	r0, #3
   1f3a0:	b	11600 <__lxstat64@plt>
   1f3a4:	push	{lr}		; (str lr, [sp, #-4]!)
   1f3a8:	sub	sp, sp, #12
   1f3ac:	str	r3, [sp]
   1f3b0:	mov	r3, r2
   1f3b4:	mov	r2, r1
   1f3b8:	mov	r1, r0
   1f3bc:	mov	r0, #3
   1f3c0:	bl	11354 <__fxstatat64@plt>
   1f3c4:	add	sp, sp, #12
   1f3c8:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

0001f3cc <.fini>:
   1f3cc:	push	{r3, lr}
   1f3d0:	pop	{r3, pc}
