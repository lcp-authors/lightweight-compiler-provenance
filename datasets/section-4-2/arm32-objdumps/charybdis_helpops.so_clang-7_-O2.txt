
../repos/charybdis/extensions/.libs/helpops.so:     file format elf32-littlearm


Disassembly of section .init:

000007a0 <_init>:
 7a0:	push	{r3, lr}
 7a4:	bl	874 <call_weak_fn>
 7a8:	pop	{r3, pc}

Disassembly of section .plt:

000007ac <.plt>:
 7ac:	push	{lr}		; (str lr, [sp, #-4]!)
 7b0:	ldr	lr, [pc, #4]	; 7bc <.plt+0x10>
 7b4:	add	lr, pc, lr
 7b8:	ldr	pc, [lr, #8]!
 7bc:	.word	0x00011844

000007c0 <__cxa_finalize@plt>:
 7c0:	add	ip, pc, #0, 12
 7c4:	add	ip, ip, #69632	; 0x11000
 7c8:	ldr	pc, [ip, #2116]!	; 0x844

000007cc <sendto_one@plt>:
 7cc:	add	ip, pc, #0, 12
 7d0:	add	ip, ip, #69632	; 0x11000
 7d4:	ldr	pc, [ip, #2108]!	; 0x83c

000007d8 <user_mode@plt>:
 7d8:	add	ip, pc, #0, 12
 7dc:	add	ip, ip, #69632	; 0x11000
 7e0:	ldr	pc, [ip, #2100]!	; 0x834

000007e4 <sendto_realops_snomask@plt>:
 7e4:	add	ip, pc, #0, 12
 7e8:	add	ip, ip, #69632	; 0x11000
 7ec:	ldr	pc, [ip, #2092]!	; 0x82c

000007f0 <find_umode_slot@plt>:
 7f0:	add	ip, pc, #0, 12
 7f4:	add	ip, ip, #69632	; 0x11000
 7f8:	ldr	pc, [ip, #2084]!	; 0x824

000007fc <rb_free_rb_dlink_node@plt>:
 7fc:	add	ip, pc, #0, 12
 800:	add	ip, ip, #69632	; 0x11000
 804:	ldr	pc, [ip, #2076]!	; 0x81c

00000808 <__gmon_start__@plt>:
 808:	add	ip, pc, #0, 12
 80c:	add	ip, ip, #69632	; 0x11000
 810:	ldr	pc, [ip, #2068]!	; 0x814

00000814 <rb_make_rb_dlink_node@plt>:
 814:	add	ip, pc, #0, 12
 818:	add	ip, ip, #69632	; 0x11000
 81c:	ldr	pc, [ip, #2060]!	; 0x80c

00000820 <sendto_one_numeric@plt>:
 820:	add	ip, pc, #0, 12
 824:	add	ip, ip, #69632	; 0x11000
 828:	ldr	pc, [ip, #2052]!	; 0x804

0000082c <find_person@plt>:
 82c:	add	ip, pc, #0, 12
 830:	add	ip, ip, #69632	; 0x11000
 834:	ldr	pc, [ip, #2044]!	; 0x7fc

00000838 <sendto_one_notice@plt>:
 838:	add	ip, pc, #0, 12
 83c:	add	ip, ip, #69632	; 0x11000
 840:	ldr	pc, [ip, #2036]!	; 0x7f4

00000844 <find_named_person@plt>:
 844:	add	ip, pc, #0, 12
 848:	add	ip, ip, #69632	; 0x11000
 84c:	ldr	pc, [ip, #2028]!	; 0x7ec

00000850 <privilegeset_in_set@plt>:
 850:	add	ip, pc, #0, 12
 854:	add	ip, ip, #69632	; 0x11000
 858:	ldr	pc, [ip, #2020]!	; 0x7e4

0000085c <__assert_fail@plt>:
 85c:	add	ip, pc, #0, 12
 860:	add	ip, ip, #69632	; 0x11000
 864:	ldr	pc, [ip, #2012]!	; 0x7dc

00000868 <construct_umodebuf@plt>:
 868:	add	ip, pc, #0, 12
 86c:	add	ip, ip, #69632	; 0x11000
 870:	ldr	pc, [ip, #2004]!	; 0x7d4

Disassembly of section .text:

00000874 <call_weak_fn>:
     874:	ldr	r3, [pc, #20]	; 890 <call_weak_fn+0x1c>
     878:	ldr	r2, [pc, #20]	; 894 <call_weak_fn+0x20>
     87c:	add	r3, pc, r3
     880:	ldr	r2, [r3, r2]
     884:	cmp	r2, #0
     888:	bxeq	lr
     88c:	b	808 <__gmon_start__@plt>
     890:	.word	0x0001177c
     894:	.word	0x00000054

00000898 <deregister_tm_clones>:
     898:	ldr	r0, [pc, #44]	; 8cc <deregister_tm_clones+0x34>
     89c:	ldr	r3, [pc, #44]	; 8d0 <deregister_tm_clones+0x38>
     8a0:	add	r0, pc, r0
     8a4:	add	r3, pc, r3
     8a8:	cmp	r3, r0
     8ac:	ldr	r3, [pc, #32]	; 8d4 <deregister_tm_clones+0x3c>
     8b0:	add	r3, pc, r3
     8b4:	bxeq	lr
     8b8:	ldr	r2, [pc, #24]	; 8d8 <deregister_tm_clones+0x40>
     8bc:	ldr	r3, [r3, r2]
     8c0:	cmp	r3, #0
     8c4:	bxeq	lr
     8c8:	bx	r3
     8cc:	.word	0x00011888
     8d0:	.word	0x00011884
     8d4:	.word	0x00011748
     8d8:	.word	0x0000004c

000008dc <register_tm_clones>:
     8dc:	ldr	r0, [pc, #56]	; 91c <register_tm_clones+0x40>
     8e0:	ldr	r3, [pc, #56]	; 920 <register_tm_clones+0x44>
     8e4:	add	r0, pc, r0
     8e8:	add	r3, pc, r3
     8ec:	sub	r1, r3, r0
     8f0:	ldr	r3, [pc, #44]	; 924 <register_tm_clones+0x48>
     8f4:	asr	r1, r1, #2
     8f8:	add	r3, pc, r3
     8fc:	add	r1, r1, r1, lsr #31
     900:	asrs	r1, r1, #1
     904:	bxeq	lr
     908:	ldr	r2, [pc, #24]	; 928 <register_tm_clones+0x4c>
     90c:	ldr	r3, [r3, r2]
     910:	cmp	r3, #0
     914:	bxeq	lr
     918:	bx	r3
     91c:	.word	0x00011844
     920:	.word	0x00011840
     924:	.word	0x00011700
     928:	.word	0x0000005c

0000092c <__do_global_dtors_aux>:
     92c:	ldr	r3, [pc, #76]	; 980 <__do_global_dtors_aux+0x54>
     930:	ldr	r2, [pc, #76]	; 984 <__do_global_dtors_aux+0x58>
     934:	add	r3, pc, r3
     938:	add	r2, pc, r2
     93c:	ldrb	r3, [r3]
     940:	cmp	r3, #0
     944:	bxne	lr
     948:	ldr	r3, [pc, #56]	; 988 <__do_global_dtors_aux+0x5c>
     94c:	push	{r4, lr}
     950:	ldr	r3, [r2, r3]
     954:	cmp	r3, #0
     958:	beq	968 <__do_global_dtors_aux+0x3c>
     95c:	ldr	r3, [pc, #40]	; 98c <__do_global_dtors_aux+0x60>
     960:	ldr	r0, [pc, r3]
     964:	bl	7c0 <__cxa_finalize@plt>
     968:	bl	898 <deregister_tm_clones>
     96c:	ldr	r3, [pc, #28]	; 990 <__do_global_dtors_aux+0x64>
     970:	mov	r2, #1
     974:	add	r3, pc, r3
     978:	strb	r2, [r3]
     97c:	pop	{r4, pc}
     980:	.word	0x000117f4
     984:	.word	0x000116c0
     988:	.word	0x00000048
     98c:	.word	0x000116fc
     990:	.word	0x000117b4

00000994 <frame_dummy>:
     994:	b	8dc <register_tm_clones>

00000998 <h_hdl_stats_request>:
     998:	push	{r4, r5, r6, r7, fp, lr}
     99c:	add	fp, sp, #16
     9a0:	sub	sp, sp, #8
     9a4:	mov	r4, r0
     9a8:	ldr	r0, [r0, #8]
     9ac:	cmp	r0, #112	; 0x70
     9b0:	bne	a38 <h_hdl_stats_request+0xa0>
     9b4:	ldr	r7, [pc, #132]	; a40 <h_hdl_stats_request+0xa8>
     9b8:	mov	r5, #0
     9bc:	ldr	r7, [pc, r7]
     9c0:	cmp	r7, #0
     9c4:	beq	a18 <h_hdl_stats_request+0x80>
     9c8:	ldr	r6, [pc, #116]	; a44 <h_hdl_stats_request+0xac>
     9cc:	add	r6, pc, r6
     9d0:	ldr	r1, [r7]
     9d4:	ldr	r0, [r1, #24]
     9d8:	ldr	r0, [r0, #24]
     9dc:	cmp	r0, #0
     9e0:	bne	a0c <h_hdl_stats_request+0x74>
     9e4:	ldr	r0, [r4]
     9e8:	add	r2, r1, #163	; 0xa3
     9ec:	add	r3, r1, #152	; 0x98
     9f0:	str	r3, [sp]
     9f4:	str	r2, [sp, #4]
     9f8:	add	r3, r1, #88	; 0x58
     9fc:	mov	r1, #249	; 0xf9
     a00:	mov	r2, r6
     a04:	bl	820 <sendto_one_numeric@plt>
     a08:	add	r5, r5, #1
     a0c:	ldr	r7, [r7, #8]
     a10:	cmp	r7, #0
     a14:	bne	9d0 <h_hdl_stats_request+0x38>
     a18:	ldr	r0, [r4]
     a1c:	ldr	r2, [pc, #36]	; a48 <h_hdl_stats_request+0xb0>
     a20:	mov	r1, #249	; 0xf9
     a24:	mov	r3, r5
     a28:	add	r2, pc, r2
     a2c:	bl	820 <sendto_one_numeric@plt>
     a30:	mov	r0, #1
     a34:	str	r0, [r4, #12]
     a38:	sub	sp, fp, #16
     a3c:	pop	{r4, r5, r6, r7, fp, pc}
     a40:	.word	0x00011770
     a44:	.word	0x000009bc
     a48:	.word	0x0000096e

00000a4c <h_hdl_new_remote_user>:
     a4c:	ldr	r1, [r0, #56]	; 0x38
     a50:	ldr	r2, [pc, #16]	; a68 <h_hdl_new_remote_user+0x1c>
     a54:	ldr	r2, [pc, r2]
     a58:	ldr	r2, [r2, #288]	; 0x120
     a5c:	tst	r2, r1
     a60:	bxeq	lr
     a64:	b	1058 <helper_add>
     a68:	.word	0x000115f4

00000a6c <h_hdl_client_exit>:
     a6c:	ldr	r0, [r0, #4]
     a70:	b	1164 <recurse_client_exit>

00000a74 <h_hdl_umode_changed>:
     a74:	push	{r4, r5, r6, sl, fp, lr}
     a78:	add	fp, sp, #16
     a7c:	sub	sp, sp, #8
     a80:	ldr	r4, [r0]
     a84:	ldr	r0, [r0, #4]
     a88:	ldr	r1, [r4, #56]	; 0x38
     a8c:	ldr	r6, [pc, #408]	; c2c <h_hdl_umode_changed+0x1b8>
     a90:	ldr	r6, [pc, r6]
     a94:	eor	r0, r1, r0
     a98:	ldr	r2, [r6, #288]	; 0x120
     a9c:	and	r5, r0, r2
     aa0:	tst	r2, r1
     aa4:	beq	b38 <h_hdl_umode_changed+0xc4>
     aa8:	ldrb	r0, [r4, #65]	; 0x41
     aac:	tst	r0, #32
     ab0:	beq	be0 <h_hdl_umode_changed+0x16c>
     ab4:	ldrh	r0, [r4, #80]	; 0x50
     ab8:	cmp	r0, #64	; 0x40
     abc:	bne	be0 <h_hdl_umode_changed+0x16c>
     ac0:	ldr	r0, [r4, #24]
     ac4:	cmp	r0, #0
     ac8:	ldrne	r0, [r0, #36]	; 0x24
     acc:	cmpne	r0, #0
     ad0:	bne	bcc <h_hdl_umode_changed+0x158>
     ad4:	bic	r0, r1, r2
     ad8:	add	r3, r4, #88	; 0x58
     adc:	str	r0, [r4, #56]	; 0x38
     ae0:	ldr	r0, [pc, #332]	; c34 <h_hdl_umode_changed+0x1c0>
     ae4:	add	r0, pc, r0
     ae8:	str	r0, [sp]
     aec:	ldr	r0, [pc, #324]	; c38 <h_hdl_umode_changed+0x1c4>
     af0:	ldr	r0, [pc, r0]
     af4:	ldr	r1, [pc, #320]	; c3c <h_hdl_umode_changed+0x1c8>
     af8:	add	r2, r0, #88	; 0x58
     afc:	add	r1, pc, r1
     b00:	mov	r0, r4
     b04:	bl	7cc <sendto_one@plt>
     b08:	cmp	r5, #0
     b0c:	bne	bf8 <h_hdl_umode_changed+0x184>
     b10:	ldr	r1, [pc, #296]	; c40 <h_hdl_umode_changed+0x1cc>
     b14:	ldr	r1, [pc, r1]
     b18:	cmp	r1, #0
     b1c:	beq	bf8 <h_hdl_umode_changed+0x184>
     b20:	ldr	r2, [r1]
     b24:	mov	r0, r1
     b28:	ldr	r1, [r1, #8]
     b2c:	cmp	r2, r4
     b30:	bne	b18 <h_hdl_umode_changed+0xa4>
     b34:	b	b6c <h_hdl_umode_changed+0xf8>
     b38:	cmp	r5, #0
     b3c:	beq	bf8 <h_hdl_umode_changed+0x184>
     b40:	cmp	r4, #0
     b44:	beq	c0c <h_hdl_umode_changed+0x198>
     b48:	ldr	r1, [pc, #252]	; c4c <h_hdl_umode_changed+0x1d8>
     b4c:	ldr	r1, [pc, r1]
     b50:	cmp	r1, #0
     b54:	beq	bf8 <h_hdl_umode_changed+0x184>
     b58:	ldr	r2, [r1]
     b5c:	mov	r0, r1
     b60:	ldr	r1, [r1, #8]
     b64:	cmp	r2, r4
     b68:	bne	b50 <h_hdl_umode_changed+0xdc>
     b6c:	ldr	r2, [r0, #4]
     b70:	cmp	r1, #0
     b74:	beq	b84 <h_hdl_umode_changed+0x110>
     b78:	str	r2, [r1, #4]
     b7c:	ldr	r2, [r0, #4]
     b80:	b	b90 <h_hdl_umode_changed+0x11c>
     b84:	ldr	r3, [pc, #184]	; c44 <h_hdl_umode_changed+0x1d0>
     b88:	add	r3, pc, r3
     b8c:	str	r2, [r3, #4]
     b90:	ldr	r6, [pc, #176]	; c48 <h_hdl_umode_changed+0x1d4>
     b94:	cmp	r2, #0
     b98:	add	r6, pc, r6
     b9c:	mov	r3, r6
     ba0:	addne	r3, r2, #8
     ba4:	str	r1, [r3]
     ba8:	mov	r1, #0
     bac:	str	r1, [r0, #4]
     bb0:	str	r1, [r0, #8]
     bb4:	ldr	r1, [r6, #8]
     bb8:	sub	r1, r1, #1
     bbc:	str	r1, [r6, #8]
     bc0:	sub	sp, fp, #16
     bc4:	pop	{r4, r5, r6, sl, fp, lr}
     bc8:	b	7fc <rb_free_rb_dlink_node@plt>
     bcc:	ldr	r1, [pc, #92]	; c30 <h_hdl_umode_changed+0x1bc>
     bd0:	add	r1, pc, r1
     bd4:	bl	850 <privilegeset_in_set@plt>
     bd8:	cmp	r0, #0
     bdc:	beq	c00 <h_hdl_umode_changed+0x18c>
     be0:	cmp	r5, #0
     be4:	beq	bf8 <h_hdl_umode_changed+0x184>
     be8:	mov	r0, r4
     bec:	sub	sp, fp, #16
     bf0:	pop	{r4, r5, r6, sl, fp, lr}
     bf4:	b	1058 <helper_add>
     bf8:	sub	sp, fp, #16
     bfc:	pop	{r4, r5, r6, sl, fp, pc}
     c00:	ldr	r1, [r4, #56]	; 0x38
     c04:	ldr	r2, [r6, #288]	; 0x120
     c08:	b	ad4 <h_hdl_umode_changed+0x60>
     c0c:	ldr	r0, [pc, #60]	; c50 <h_hdl_umode_changed+0x1dc>
     c10:	ldr	r1, [pc, #60]	; c54 <h_hdl_umode_changed+0x1e0>
     c14:	ldr	r3, [pc, #60]	; c58 <h_hdl_umode_changed+0x1e4>
     c18:	mov	r2, #288	; 0x120
     c1c:	add	r0, pc, r0
     c20:	add	r1, pc, r1
     c24:	add	r3, pc, r3
     c28:	bl	85c <__assert_fail@plt>
     c2c:	.word	0x000115b8
     c30:	.word	0x000008ae
     c34:	.word	0x0000099a
     c38:	.word	0x00011568
     c3c:	.word	0x000007f4
     c40:	.word	0x00011618
     c44:	.word	0x000115a4
     c48:	.word	0x00011594
     c4c:	.word	0x000115e0
     c50:	.word	0x000007df
     c54:	.word	0x0000078a
     c58:	.word	0x00000829

00000c5c <h_hdl_whois>:
     c5c:	ldr	r1, [pc, #72]	; cac <h_hdl_whois+0x50>
     c60:	ldr	r1, [pc, r1]
     c64:	ldr	r2, [r1, #288]	; 0x120
     c68:	ldr	r1, [r0, #4]
     c6c:	ldr	r3, [r1, #56]	; 0x38
     c70:	tst	r2, r3
     c74:	bxeq	lr
     c78:	ldr	r2, [r1, #24]
     c7c:	ldr	r0, [r0]
     c80:	ldr	r2, [r2, #24]
     c84:	cmp	r2, #0
     c88:	ldrbne	r2, [r2]
     c8c:	cmpne	r2, #0
     c90:	bne	ca8 <h_hdl_whois+0x4c>
     c94:	ldr	r2, [pc, #20]	; cb0 <h_hdl_whois+0x54>
     c98:	add	r3, r1, #88	; 0x58
     c9c:	movw	r1, #310	; 0x136
     ca0:	add	r2, pc, r2
     ca4:	b	820 <sendto_one_numeric@plt>
     ca8:	bx	lr
     cac:	.word	0x000113e8
     cb0:	.word	0x000007ef

00000cb4 <me_dehelper>:
     cb4:	push	{r4, r5, r6, sl, fp, lr}
     cb8:	add	fp, sp, #16
     cbc:	sub	sp, sp, #24
     cc0:	ldr	r6, [fp, #8]
     cc4:	mov	r5, r2
     cc8:	ldr	r0, [r6, #4]
     ccc:	bl	82c <find_person@plt>
     cd0:	cmp	r0, #0
     cd4:	beq	d7c <me_dehelper+0xc8>
     cd8:	mov	r4, r0
     cdc:	ldrb	r0, [r0, #65]	; 0x41
     ce0:	tst	r0, #32
     ce4:	beq	d74 <me_dehelper+0xc0>
     ce8:	ldrh	r0, [r4, #80]	; 0x50
     cec:	cmp	r0, #64	; 0x40
     cf0:	bne	d74 <me_dehelper+0xc0>
     cf4:	ldr	r0, [r4, #56]	; 0x38
     cf8:	ldr	r1, [pc, #156]	; d9c <me_dehelper+0xe8>
     cfc:	ldr	r1, [pc, r1]
     d00:	ldr	r1, [r1, #288]	; 0x120
     d04:	tst	r1, r0
     d08:	beq	d74 <me_dehelper+0xc0>
     d0c:	add	r6, r4, #88	; 0x58
     d10:	add	r5, r5, #88	; 0x58
     d14:	mov	r0, #256	; 0x100
     d18:	mov	r1, #256	; 0x100
     d1c:	str	r6, [sp]
     d20:	mov	r3, r5
     d24:	ldr	r2, [pc, #116]	; da0 <me_dehelper+0xec>
     d28:	add	r2, pc, r2
     d2c:	bl	7e4 <sendto_realops_snomask@plt>
     d30:	ldr	r1, [pc, #108]	; da4 <me_dehelper+0xf0>
     d34:	mov	r0, r4
     d38:	mov	r2, r5
     d3c:	add	r1, pc, r1
     d40:	bl	838 <sendto_one_notice@plt>
     d44:	str	r6, [sp, #8]
     d48:	str	r6, [sp, #12]
     d4c:	add	r3, sp, #8
     d50:	mov	r1, r4
     d54:	mov	r2, #3
     d58:	ldr	r0, [pc, #72]	; da8 <me_dehelper+0xf4>
     d5c:	add	r0, pc, r0
     d60:	str	r0, [sp, #16]
     d64:	mov	r0, #0
     d68:	str	r0, [sp, #20]
     d6c:	mov	r0, r4
     d70:	bl	7d8 <user_mode@plt>
     d74:	sub	sp, fp, #16
     d78:	pop	{r4, r5, r6, sl, fp, pc}
     d7c:	ldr	r3, [r6, #4]
     d80:	ldr	r2, [pc, #36]	; dac <me_dehelper+0xf8>
     d84:	mov	r0, r5
     d88:	movw	r1, #401	; 0x191
     d8c:	add	r2, pc, r2
     d90:	sub	sp, fp, #16
     d94:	pop	{r4, r5, r6, sl, fp, lr}
     d98:	b	820 <sendto_one_numeric@plt>
     d9c:	.word	0x0001134c
     da0:	.word	0x00000621
     da4:	.word	0x00000628
     da8:	.word	0x00000629
     dac:	.word	0x0000058b

00000db0 <mo_dehelper>:
     db0:	push	{r4, r5, r6, sl, fp, lr}
     db4:	add	fp, sp, #16
     db8:	sub	sp, sp, #24
     dbc:	ldr	r0, [r2, #24]
     dc0:	mov	r4, r2
     dc4:	cmp	r0, #0
     dc8:	ldrne	r0, [r0, #36]	; 0x24
     dcc:	cmpne	r0, #0
     dd0:	bne	e08 <mo_dehelper+0x58>
     dd4:	ldr	r0, [pc, #344]	; f34 <mo_dehelper+0x184>
     dd8:	add	r3, r4, #88	; 0x58
     ddc:	add	r0, pc, r0
     de0:	str	r0, [sp]
     de4:	ldr	r0, [pc, #332]	; f38 <mo_dehelper+0x188>
     de8:	ldr	r0, [pc, r0]
     dec:	ldr	r1, [pc, #328]	; f3c <mo_dehelper+0x18c>
     df0:	add	r2, r0, #88	; 0x58
     df4:	add	r1, pc, r1
     df8:	mov	r0, r4
     dfc:	bl	7cc <sendto_one@plt>
     e00:	sub	sp, fp, #16
     e04:	pop	{r4, r5, r6, sl, fp, pc}
     e08:	ldr	r6, [fp, #8]
     e0c:	ldr	r1, [pc, #284]	; f30 <mo_dehelper+0x180>
     e10:	add	r1, pc, r1
     e14:	bl	850 <privilegeset_in_set@plt>
     e18:	cmp	r0, #0
     e1c:	beq	dd4 <mo_dehelper+0x24>
     e20:	ldr	r0, [r6, #4]
     e24:	bl	844 <find_named_person@plt>
     e28:	cmp	r0, #0
     e2c:	beq	f10 <mo_dehelper+0x160>
     e30:	mov	r5, r0
     e34:	ldrb	r0, [r0, #65]	; 0x41
     e38:	tst	r0, #32
     e3c:	beq	ed4 <mo_dehelper+0x124>
     e40:	ldrh	r0, [r5, #80]	; 0x50
     e44:	cmp	r0, #64	; 0x40
     e48:	bne	ed4 <mo_dehelper+0x124>
     e4c:	ldr	r0, [r5, #56]	; 0x38
     e50:	ldr	r1, [pc, #232]	; f40 <mo_dehelper+0x190>
     e54:	ldr	r1, [pc, r1]
     e58:	ldr	r1, [r1, #288]	; 0x120
     e5c:	tst	r1, r0
     e60:	beq	ecc <mo_dehelper+0x11c>
     e64:	add	r6, r5, #88	; 0x58
     e68:	add	r4, r4, #88	; 0x58
     e6c:	mov	r0, #256	; 0x100
     e70:	mov	r1, #256	; 0x100
     e74:	str	r6, [sp]
     e78:	mov	r3, r4
     e7c:	ldr	r2, [pc, #192]	; f44 <mo_dehelper+0x194>
     e80:	add	r2, pc, r2
     e84:	bl	7e4 <sendto_realops_snomask@plt>
     e88:	ldr	r1, [pc, #184]	; f48 <mo_dehelper+0x198>
     e8c:	mov	r0, r5
     e90:	mov	r2, r4
     e94:	add	r1, pc, r1
     e98:	bl	838 <sendto_one_notice@plt>
     e9c:	str	r6, [sp, #8]
     ea0:	str	r6, [sp, #12]
     ea4:	add	r3, sp, #8
     ea8:	mov	r1, r5
     eac:	mov	r2, #3
     eb0:	ldr	r0, [pc, #148]	; f4c <mo_dehelper+0x19c>
     eb4:	add	r0, pc, r0
     eb8:	str	r0, [sp, #16]
     ebc:	mov	r0, #0
     ec0:	str	r0, [sp, #20]
     ec4:	mov	r0, r5
     ec8:	bl	7d8 <user_mode@plt>
     ecc:	sub	sp, fp, #16
     ed0:	pop	{r4, r5, r6, sl, fp, pc}
     ed4:	mov	r0, r5
     ed8:	ldrb	r2, [r4, #396]!	; 0x18c
     edc:	ldrb	r1, [r0, #396]!	; 0x18c
     ee0:	cmp	r1, #0
     ee4:	ldr	r1, [r5, #32]
     ee8:	addeq	r0, r5, #88	; 0x58
     eec:	cmp	r2, #0
     ef0:	str	r0, [sp]
     ef4:	subeq	r4, r4, #308	; 0x134
     ef8:	mov	r0, r5
     efc:	mov	r2, r4
     f00:	add	r3, r1, #88	; 0x58
     f04:	ldr	r1, [pc, #68]	; f50 <mo_dehelper+0x1a0>
     f08:	add	r1, pc, r1
     f0c:	b	dfc <mo_dehelper+0x4c>
     f10:	ldr	r3, [r6, #4]
     f14:	ldr	r2, [pc, #56]	; f54 <mo_dehelper+0x1a4>
     f18:	mov	r0, r4
     f1c:	movw	r1, #401	; 0x191
     f20:	add	r2, pc, r2
     f24:	sub	sp, fp, #16
     f28:	pop	{r4, r5, r6, sl, fp, lr}
     f2c:	b	820 <sendto_one_numeric@plt>
     f30:	.word	0x000004d2
     f34:	.word	0x0000050b
     f38:	.word	0x00011270
     f3c:	.word	0x000004fc
     f40:	.word	0x000111f4
     f44:	.word	0x000004c9
     f48:	.word	0x000004d0
     f4c:	.word	0x000004d1
     f50:	.word	0x00000428
     f54:	.word	0x000003f7

00000f58 <_modinit>:
     f58:	push	{r4, r5, fp, lr}
     f5c:	add	fp, sp, #8
     f60:	bl	7f0 <find_umode_slot@plt>
     f64:	ldr	r4, [pc, #88]	; fc4 <_modinit+0x6c>
     f68:	ldr	r4, [pc, r4]
     f6c:	str	r0, [r4, #288]	; 0x120
     f70:	bl	868 <construct_umodebuf@plt>
     f74:	ldr	r0, [pc, #76]	; fc8 <_modinit+0x70>
     f78:	ldr	r0, [pc, r0]
     f7c:	ldr	r5, [r0]
     f80:	b	f88 <_modinit+0x30>
     f84:	ldr	r5, [r5, #8]
     f88:	cmp	r5, #0
     f8c:	moveq	r0, #0
     f90:	popeq	{r4, r5, fp, pc}
     f94:	ldr	r0, [r5]
     f98:	ldrh	r1, [r0, #80]	; 0x50
     f9c:	cmp	r1, #64	; 0x40
     fa0:	bne	f84 <_modinit+0x2c>
     fa4:	ldr	r1, [r0, #24]
     fa8:	cmp	r1, #0
     fac:	beq	f84 <_modinit+0x2c>
     fb0:	ldr	r1, [r0, #56]	; 0x38
     fb4:	ldr	r2, [r4, #288]	; 0x120
     fb8:	tst	r2, r1
     fbc:	blne	1058 <helper_add>
     fc0:	b	f84 <_modinit+0x2c>
     fc4:	.word	0x000110e0
     fc8:	.word	0x000110d8

00000fcc <_moddeinit>:
     fcc:	push	{r4, r5, r6, sl, fp, lr}
     fd0:	add	fp, sp, #16
     fd4:	ldr	r0, [pc, #112]	; 104c <_moddeinit+0x80>
     fd8:	mov	r4, #0
     fdc:	ldr	r0, [pc, r0]
     fe0:	str	r4, [r0, #288]	; 0x120
     fe4:	bl	868 <construct_umodebuf@plt>
     fe8:	ldr	r0, [pc, #96]	; 1050 <_moddeinit+0x84>
     fec:	ldr	r0, [pc, r0]
     ff0:	cmp	r0, #0
     ff4:	popeq	{r4, r5, r6, sl, fp, pc}
     ff8:	ldr	r5, [pc, #84]	; 1054 <_moddeinit+0x88>
     ffc:	add	r5, pc, r5
    1000:	ldmib	r0, {r1, r6}
    1004:	mov	r2, r5
    1008:	cmp	r6, #0
    100c:	streq	r1, [r5, #4]
    1010:	strne	r1, [r6, #4]
    1014:	ldrne	r1, [r0, #4]
    1018:	cmp	r1, #0
    101c:	addne	r2, r1, #8
    1020:	str	r6, [r2]
    1024:	str	r4, [r0, #4]
    1028:	str	r4, [r0, #8]
    102c:	ldr	r1, [r5, #8]
    1030:	sub	r1, r1, #1
    1034:	str	r1, [r5, #8]
    1038:	bl	7fc <rb_free_rb_dlink_node@plt>
    103c:	cmp	r6, #0
    1040:	mov	r0, r6
    1044:	bne	1000 <_moddeinit+0x34>
    1048:	pop	{r4, r5, r6, sl, fp, pc}
    104c:	.word	0x0001106c
    1050:	.word	0x00011140
    1054:	.word	0x00011130

00001058 <helper_add>:
    1058:	push	{r4, sl, fp, lr}
    105c:	add	fp, sp, #8
    1060:	cmp	r0, #0
    1064:	beq	10fc <helper_add+0xa4>
    1068:	mov	r4, r0
    106c:	ldr	r0, [pc, #200]	; 113c <helper_add+0xe4>
    1070:	ldr	r0, [pc, r0]
    1074:	cmp	r0, #0
    1078:	beq	1094 <helper_add+0x3c>
    107c:	ldr	r1, [r0]
    1080:	cmp	r1, r4
    1084:	popeq	{r4, sl, fp, pc}
    1088:	ldr	r0, [r0, #8]
    108c:	cmp	r0, #0
    1090:	bne	107c <helper_add+0x24>
    1094:	bl	814 <rb_make_rb_dlink_node@plt>
    1098:	cmp	r0, #0
    109c:	beq	111c <helper_add+0xc4>
    10a0:	mov	r1, #0
    10a4:	str	r1, [r0, #4]
    10a8:	str	r4, [r0]
    10ac:	ldr	r1, [pc, #140]	; 1140 <helper_add+0xe8>
    10b0:	ldr	r1, [pc, r1]
    10b4:	cmp	r1, #0
    10b8:	str	r1, [r0, #8]
    10bc:	beq	10cc <helper_add+0x74>
    10c0:	add	r1, r1, #4
    10c4:	str	r0, [r1]
    10c8:	b	10e0 <helper_add+0x88>
    10cc:	ldr	r1, [pc, #112]	; 1144 <helper_add+0xec>
    10d0:	add	r1, pc, r1
    10d4:	ldr	r2, [r1, #4]!
    10d8:	cmp	r2, #0
    10dc:	streq	r0, [r1]
    10e0:	ldr	r1, [pc, #96]	; 1148 <helper_add+0xf0>
    10e4:	add	r1, pc, r1
    10e8:	str	r0, [r1]
    10ec:	ldr	r0, [r1, #8]
    10f0:	add	r0, r0, #1
    10f4:	str	r0, [r1, #8]
    10f8:	pop	{r4, sl, fp, pc}
    10fc:	ldr	r0, [pc, #72]	; 114c <helper_add+0xf4>
    1100:	ldr	r1, [pc, #72]	; 1150 <helper_add+0xf8>
    1104:	ldr	r3, [pc, #72]	; 1154 <helper_add+0xfc>
    1108:	movw	r2, #311	; 0x137
    110c:	add	r0, pc, r0
    1110:	add	r1, pc, r1
    1114:	add	r3, pc, r3
    1118:	bl	85c <__assert_fail@plt>
    111c:	ldr	r0, [pc, #52]	; 1158 <helper_add+0x100>
    1120:	ldr	r1, [pc, #52]	; 115c <helper_add+0x104>
    1124:	ldr	r3, [pc, #52]	; 1160 <helper_add+0x108>
    1128:	mov	r2, #144	; 0x90
    112c:	add	r0, pc, r0
    1130:	add	r1, pc, r1
    1134:	add	r3, pc, r3
    1138:	bl	85c <__assert_fail@plt>
    113c:	.word	0x000110bc
    1140:	.word	0x0001107c
    1144:	.word	0x0001105c
    1148:	.word	0x00011048
    114c:	.word	0x000002ef
    1150:	.word	0x0000029a
    1154:	.word	0x000002b2
    1158:	.word	0x00000317
    115c:	.word	0x0000027a
    1160:	.word	0x000002d4

00001164 <recurse_client_exit>:
    1164:	push	{r4, r5, fp, lr}
    1168:	add	fp, sp, #8
    116c:	mov	r4, r0
    1170:	ldrh	r0, [r0, #80]	; 0x50
    1174:	cmp	r0, #32
    1178:	beq	11e4 <recurse_client_exit+0x80>
    117c:	cmp	r0, #64	; 0x40
    1180:	bne	122c <recurse_client_exit+0xc8>
    1184:	ldr	r0, [r4, #24]
    1188:	cmp	r0, #0
    118c:	beq	122c <recurse_client_exit+0xc8>
    1190:	ldr	r0, [r4, #56]	; 0x38
    1194:	ldr	r1, [pc, #216]	; 1274 <recurse_client_exit+0x110>
    1198:	ldr	r1, [pc, r1]
    119c:	ldr	r1, [r1, #288]	; 0x120
    11a0:	tst	r1, r0
    11a4:	beq	122c <recurse_client_exit+0xc8>
    11a8:	ldr	r1, [pc, #200]	; 1278 <recurse_client_exit+0x114>
    11ac:	ldr	r1, [pc, r1]
    11b0:	cmp	r1, #0
    11b4:	popeq	{r4, r5, fp, pc}
    11b8:	ldr	r2, [r1]
    11bc:	mov	r0, r1
    11c0:	ldr	r1, [r1, #8]
    11c4:	cmp	r2, r4
    11c8:	bne	11b0 <recurse_client_exit+0x4c>
    11cc:	ldr	r2, [r0, #4]
    11d0:	cmp	r1, #0
    11d4:	beq	1230 <recurse_client_exit+0xcc>
    11d8:	str	r2, [r1, #4]
    11dc:	ldr	r2, [r0, #4]
    11e0:	b	123c <recurse_client_exit+0xd8>
    11e4:	ldr	r0, [r4, #28]
    11e8:	ldr	r5, [r0, #48]	; 0x30
    11ec:	cmp	r5, #0
    11f0:	beq	120c <recurse_client_exit+0xa8>
    11f4:	ldr	r0, [r5]
    11f8:	bl	1164 <recurse_client_exit>
    11fc:	ldr	r5, [r5, #8]
    1200:	cmp	r5, #0
    1204:	bne	11f4 <recurse_client_exit+0x90>
    1208:	ldr	r0, [r4, #28]
    120c:	ldr	r4, [r0, #36]	; 0x24
    1210:	cmp	r4, #0
    1214:	beq	122c <recurse_client_exit+0xc8>
    1218:	ldr	r0, [r4]
    121c:	bl	1164 <recurse_client_exit>
    1220:	ldr	r4, [r4, #8]
    1224:	cmp	r4, #0
    1228:	bne	1218 <recurse_client_exit+0xb4>
    122c:	pop	{r4, r5, fp, pc}
    1230:	ldr	r3, [pc, #68]	; 127c <recurse_client_exit+0x118>
    1234:	add	r3, pc, r3
    1238:	str	r2, [r3, #4]
    123c:	ldr	r5, [pc, #60]	; 1280 <recurse_client_exit+0x11c>
    1240:	cmp	r2, #0
    1244:	add	r5, pc, r5
    1248:	mov	r3, r5
    124c:	addne	r3, r2, #8
    1250:	str	r1, [r3]
    1254:	mov	r1, #0
    1258:	str	r1, [r0, #4]
    125c:	str	r1, [r0, #8]
    1260:	ldr	r1, [r5, #8]
    1264:	sub	r1, r1, #1
    1268:	str	r1, [r5, #8]
    126c:	pop	{r4, r5, fp, lr}
    1270:	b	7fc <rb_free_rb_dlink_node@plt>
    1274:	.word	0x00010eb0
    1278:	.word	0x00010f80
    127c:	.word	0x00010ef8
    1280:	.word	0x00010ee8

Disassembly of section .fini:

00001284 <_fini>:
    1284:	push	{r3, lr}
    1288:	pop	{r3, pc}
