
../repos/prog2/2.2:     file format elf32-littlearm


Disassembly of section .init:

00010770 <.init>:
   10770:	push	{r3, lr}
   10774:	bl	10868 <_start@@Base+0x3c>
   10778:	pop	{r3, pc}

Disassembly of section .plt:

0001077c <printf@plt-0x14>:
   1077c:	push	{lr}		; (str lr, [sp, #-4]!)
   10780:	ldr	lr, [pc, #4]	; 1078c <printf@plt-0x4>
   10784:	add	lr, pc, lr
   10788:	ldr	pc, [lr, #8]!
   1078c:	andeq	r0, r1, r4, ror r8

00010790 <printf@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #16, 20	; 0x10000
   10798:	ldr	pc, [ip, #2164]!	; 0x874

0001079c <free@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #16, 20	; 0x10000
   107a4:	ldr	pc, [ip, #2156]!	; 0x86c

000107a8 <fgets@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #16, 20	; 0x10000
   107b0:	ldr	pc, [ip, #2148]!	; 0x864

000107b4 <realloc@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #16, 20	; 0x10000
   107bc:	ldr	pc, [ip, #2140]!	; 0x85c

000107c0 <strcpy@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #16, 20	; 0x10000
   107c8:	ldr	pc, [ip, #2132]!	; 0x854

000107cc <puts@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #16, 20	; 0x10000
   107d4:	ldr	pc, [ip, #2124]!	; 0x84c

000107d8 <malloc@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #16, 20	; 0x10000
   107e0:	ldr	pc, [ip, #2116]!	; 0x844

000107e4 <__libc_start_main@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #16, 20	; 0x10000
   107ec:	ldr	pc, [ip, #2108]!	; 0x83c

000107f0 <__gmon_start__@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #16, 20	; 0x10000
   107f8:	ldr	pc, [ip, #2100]!	; 0x834

000107fc <strlen@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #16, 20	; 0x10000
   10804:	ldr	pc, [ip, #2092]!	; 0x82c

00010808 <__isoc99_scanf@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #16, 20	; 0x10000
   10810:	ldr	pc, [ip, #2084]!	; 0x824

00010814 <abort@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #16, 20	; 0x10000
   1081c:	ldr	pc, [ip, #2076]!	; 0x81c

00010820 <getc@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #16, 20	; 0x10000
   10828:	ldr	pc, [ip, #2068]!	; 0x814

Disassembly of section .text:

0001082c <_start@@Base>:
   1082c:	mov	fp, #0
   10830:	mov	lr, #0
   10834:	pop	{r1}		; (ldr r1, [sp], #4)
   10838:	mov	r2, sp
   1083c:	push	{r2}		; (str r2, [sp, #-4]!)
   10840:	push	{r0}		; (str r0, [sp, #-4]!)
   10844:	ldr	ip, [pc, #16]	; 1085c <_start@@Base+0x30>
   10848:	push	{ip}		; (str ip, [sp, #-4]!)
   1084c:	ldr	r0, [pc, #12]	; 10860 <_start@@Base+0x34>
   10850:	ldr	r3, [pc, #12]	; 10864 <_start@@Base+0x38>
   10854:	bl	107e4 <__libc_start_main@plt>
   10858:	bl	10814 <abort@plt>
   1085c:	andeq	r0, r1, r8, asr #22
   10860:	andeq	r0, r1, ip, lsl r9
   10864:	andeq	r0, r1, r8, ror #21
   10868:	ldr	r3, [pc, #20]	; 10884 <_start@@Base+0x58>
   1086c:	ldr	r2, [pc, #20]	; 10888 <_start@@Base+0x5c>
   10870:	add	r3, pc, r3
   10874:	ldr	r2, [r3, r2]
   10878:	cmp	r2, #0
   1087c:	bxeq	lr
   10880:	b	107f0 <__gmon_start__@plt>
   10884:	andeq	r0, r1, r8, lsl #15
   10888:	andeq	r0, r0, r0, asr #32
   1088c:	ldr	r0, [pc, #24]	; 108ac <_start@@Base+0x80>
   10890:	ldr	r3, [pc, #24]	; 108b0 <_start@@Base+0x84>
   10894:	cmp	r3, r0
   10898:	bxeq	lr
   1089c:	ldr	r3, [pc, #16]	; 108b4 <_start@@Base+0x88>
   108a0:	cmp	r3, #0
   108a4:	bxeq	lr
   108a8:	bx	r3
   108ac:	andeq	r1, r2, r0, asr r0
   108b0:	andeq	r1, r2, r0, asr r0
   108b4:	andeq	r0, r0, r0
   108b8:	ldr	r0, [pc, #36]	; 108e4 <_start@@Base+0xb8>
   108bc:	ldr	r1, [pc, #36]	; 108e8 <_start@@Base+0xbc>
   108c0:	sub	r1, r1, r0
   108c4:	asr	r1, r1, #2
   108c8:	add	r1, r1, r1, lsr #31
   108cc:	asrs	r1, r1, #1
   108d0:	bxeq	lr
   108d4:	ldr	r3, [pc, #16]	; 108ec <_start@@Base+0xc0>
   108d8:	cmp	r3, #0
   108dc:	bxeq	lr
   108e0:	bx	r3
   108e4:	andeq	r1, r2, r0, asr r0
   108e8:	andeq	r1, r2, r0, asr r0
   108ec:	andeq	r0, r0, r0
   108f0:	push	{r4, lr}
   108f4:	ldr	r4, [pc, #24]	; 10914 <_start@@Base+0xe8>
   108f8:	ldrb	r3, [r4]
   108fc:	cmp	r3, #0
   10900:	popne	{r4, pc}
   10904:	bl	1088c <_start@@Base+0x60>
   10908:	mov	r3, #1
   1090c:	strb	r3, [r4]
   10910:	pop	{r4, pc}
   10914:	andeq	r1, r2, r0, asr r0
   10918:	b	108b8 <_start@@Base+0x8c>

0001091c <main@@Base>:
   1091c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10920:	add	fp, sp, #28
   10924:	sub	sp, sp, #92	; 0x5c
   10928:	mov	r0, #12
   1092c:	bl	107d8 <malloc@plt>
   10930:	mov	r4, r0
   10934:	mov	r0, #0
   10938:	add	r5, sp, #8
   1093c:	str	r0, [r4]
   10940:	str	r0, [r4, #4]
   10944:	str	r0, [r4, #8]
   10948:	ldr	sl, [pc, #372]	; 10ac4 <main@@Base+0x1a8>
   1094c:	ldr	r7, [pc, #372]	; 10ac8 <main@@Base+0x1ac>
   10950:	ldr	r6, [pc, #372]	; 10acc <main@@Base+0x1b0>
   10954:	ldr	r8, [pc, #372]	; 10ad0 <main@@Base+0x1b4>
   10958:	ldr	r8, [pc, r8]
   1095c:	add	sl, pc, sl
   10960:	add	r7, pc, r7
   10964:	add	r6, pc, r6
   10968:	str	r4, [sp, #4]
   1096c:	mov	r0, sl
   10970:	mov	r1, #1
   10974:	bl	10790 <printf@plt>
   10978:	ldr	r0, [r4]
   1097c:	cmp	r0, #0
   10980:	str	r0, [sp]
   10984:	bne	10990 <main@@Base+0x74>
   10988:	ldr	r0, [pc, #324]	; 10ad4 <main@@Base+0x1b8>
   1098c:	add	r0, pc, r0
   10990:	bl	107cc <puts@plt>
   10994:	mov	r0, sl
   10998:	mov	r1, #2
   1099c:	bl	10790 <printf@plt>
   109a0:	ldr	r9, [r4, #4]
   109a4:	cmp	r9, #0
   109a8:	beq	109b4 <main@@Base+0x98>
   109ac:	mov	r0, r9
   109b0:	b	109bc <main@@Base+0xa0>
   109b4:	ldr	r0, [pc, #296]	; 10ae4 <main@@Base+0x1c8>
   109b8:	add	r0, pc, r0
   109bc:	bl	107cc <puts@plt>
   109c0:	mov	r0, sl
   109c4:	mov	r1, #3
   109c8:	bl	10790 <printf@plt>
   109cc:	ldr	sl, [r4, #8]
   109d0:	cmp	sl, #0
   109d4:	beq	109e0 <main@@Base+0xc4>
   109d8:	mov	r0, sl
   109dc:	b	109e8 <main@@Base+0xcc>
   109e0:	ldr	r0, [pc, #240]	; 10ad8 <main@@Base+0x1bc>
   109e4:	add	r0, pc, r0
   109e8:	bl	107cc <puts@plt>
   109ec:	mov	r0, r7
   109f0:	mov	r1, #3
   109f4:	bl	10790 <printf@plt>
   109f8:	mov	r0, r6
   109fc:	mov	r1, r5
   10a00:	bl	10808 <__isoc99_scanf@plt>
   10a04:	ldr	r0, [r8]
   10a08:	bl	10820 <getc@plt>
   10a0c:	ldr	r0, [sp, #8]
   10a10:	cmp	r0, #3
   10a14:	bhi	109ec <main@@Base+0xd0>
   10a18:	cmp	r0, #0
   10a1c:	beq	10a98 <main@@Base+0x17c>
   10a20:	ldr	r0, [pc, #180]	; 10adc <main@@Base+0x1c0>
   10a24:	add	r0, pc, r0
   10a28:	bl	10790 <printf@plt>
   10a2c:	ldr	r2, [r8]
   10a30:	add	sl, sp, #12
   10a34:	mov	r1, #80	; 0x50
   10a38:	mov	r0, sl
   10a3c:	bl	107a8 <fgets@plt>
   10a40:	mov	r0, sl
   10a44:	bl	107fc <strlen@plt>
   10a48:	add	r0, r0, sl
   10a4c:	mov	r1, #0
   10a50:	ldr	r4, [sp, #4]
   10a54:	strb	r1, [r0, #-1]
   10a58:	ldr	r0, [sp, #8]
   10a5c:	add	r0, r4, r0, lsl #2
   10a60:	ldr	r9, [r0, #-4]
   10a64:	mov	r0, sl
   10a68:	bl	107fc <strlen@plt>
   10a6c:	add	r1, r0, #1
   10a70:	mov	r0, r9
   10a74:	bl	107b4 <realloc@plt>
   10a78:	ldr	r1, [sp, #8]
   10a7c:	add	r1, r4, r1, lsl #2
   10a80:	str	r0, [r1, #-4]
   10a84:	mov	r1, sl
   10a88:	bl	107c0 <strcpy@plt>
   10a8c:	ldr	sl, [pc, #76]	; 10ae0 <main@@Base+0x1c4>
   10a90:	add	sl, pc, sl
   10a94:	b	1096c <main@@Base+0x50>
   10a98:	ldr	r0, [sp]
   10a9c:	bl	1079c <free@plt>
   10aa0:	mov	r0, r9
   10aa4:	bl	1079c <free@plt>
   10aa8:	mov	r0, sl
   10aac:	bl	1079c <free@plt>
   10ab0:	ldr	r0, [sp, #4]
   10ab4:	bl	1079c <free@plt>
   10ab8:	mov	r0, #0
   10abc:	sub	sp, fp, #28
   10ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ac4:	strdeq	r0, [r0], -r4
   10ac8:	strdeq	r0, [r0], -r6
   10acc:	andeq	r0, r0, r6, lsl r2
   10ad0:	andeq	r0, r1, r4, ror #13
   10ad4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   10ad8:	andeq	r0, r0, r7, lsr #3
   10adc:	andeq	r0, r0, r9, asr r1
   10ae0:	andeq	r0, r0, r0, asr #1
   10ae4:	ldrdeq	r0, [r0], -r3

00010ae8 <__libc_csu_init@@Base>:
   10ae8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10aec:	mov	r7, r0
   10af0:	ldr	r6, [pc, #72]	; 10b40 <__libc_csu_init@@Base+0x58>
   10af4:	ldr	r5, [pc, #72]	; 10b44 <__libc_csu_init@@Base+0x5c>
   10af8:	add	r6, pc, r6
   10afc:	add	r5, pc, r5
   10b00:	sub	r6, r6, r5
   10b04:	mov	r8, r1
   10b08:	mov	r9, r2
   10b0c:	bl	10770 <printf@plt-0x20>
   10b10:	asrs	r6, r6, #2
   10b14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b18:	mov	r4, #0
   10b1c:	add	r4, r4, #1
   10b20:	ldr	r3, [r5], #4
   10b24:	mov	r2, r9
   10b28:	mov	r1, r8
   10b2c:	mov	r0, r7
   10b30:	blx	r3
   10b34:	cmp	r6, r4
   10b38:	bne	10b1c <__libc_csu_init@@Base+0x34>
   10b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b40:	andeq	r0, r1, ip, lsl #8
   10b44:	andeq	r0, r1, r4, lsl #8

00010b48 <__libc_csu_fini@@Base>:
   10b48:	bx	lr

Disassembly of section .fini:

00010b4c <.fini>:
   10b4c:	push	{r3, lr}
   10b50:	pop	{r3, pc}
