
../repos/charybdis/extensions/.libs/chm_nonotice.so:     file format elf32-littlearm


Disassembly of section .init:

00000404 <_init>:
 404:	push	{r3, lr}
 408:	bl	460 <call_weak_fn>
 40c:	pop	{r3, pc}

Disassembly of section .plt:

00000410 <.plt>:
 410:	push	{lr}		; (str lr, [sp, #-4]!)
 414:	ldr	lr, [pc, #4]	; 420 <.plt+0x10>
 418:	add	lr, pc, lr
 41c:	ldr	pc, [lr, #8]!
 420:	.word	0x00010be0

00000424 <cflag_add@plt>:
 424:	add	ip, pc, #0, 12
 428:	add	ip, ip, #16, 20	; 0x10000
 42c:	ldr	pc, [ip, #3040]!	; 0xbe0

00000430 <__cxa_finalize@plt>:
 430:	add	ip, pc, #0, 12
 434:	add	ip, ip, #16, 20	; 0x10000
 438:	ldr	pc, [ip, #3032]!	; 0xbd8

0000043c <__gmon_start__@plt>:
 43c:	add	ip, pc, #0, 12
 440:	add	ip, ip, #16, 20	; 0x10000
 444:	ldr	pc, [ip, #3024]!	; 0xbd0

00000448 <sendto_one_numeric@plt>:
 448:	add	ip, pc, #0, 12
 44c:	add	ip, ip, #16, 20	; 0x10000
 450:	ldr	pc, [ip, #3016]!	; 0xbc8

00000454 <cflag_orphan@plt>:
 454:	add	ip, pc, #0, 12
 458:	add	ip, ip, #16, 20	; 0x10000
 45c:	ldr	pc, [ip, #3008]!	; 0xbc0

Disassembly of section .text:

00000460 <call_weak_fn>:
 460:	ldr	r3, [pc, #20]	; 47c <call_weak_fn+0x1c>
 464:	ldr	r2, [pc, #20]	; 480 <call_weak_fn+0x20>
 468:	add	r3, pc, r3
 46c:	ldr	r2, [r3, r2]
 470:	cmp	r2, #0
 474:	bxeq	lr
 478:	b	43c <__gmon_start__@plt>
 47c:	.word	0x00010b90
 480:	.word	0x0000002c

00000484 <deregister_tm_clones>:
 484:	ldr	r3, [pc, #52]	; 4c0 <deregister_tm_clones+0x3c>
 488:	ldr	r0, [pc, #52]	; 4c4 <deregister_tm_clones+0x40>
 48c:	add	r3, pc, r3
 490:	add	r0, pc, r0
 494:	add	r3, r3, #3
 498:	sub	r3, r3, r0
 49c:	cmp	r3, #6
 4a0:	ldr	r3, [pc, #32]	; 4c8 <deregister_tm_clones+0x44>
 4a4:	add	r3, pc, r3
 4a8:	bxls	lr
 4ac:	ldr	r2, [pc, #24]	; 4cc <deregister_tm_clones+0x48>
 4b0:	ldr	r3, [r3, r2]
 4b4:	cmp	r3, #0
 4b8:	bxeq	lr
 4bc:	bx	r3
 4c0:	.word	0x00010be8
 4c4:	.word	0x00010be4
 4c8:	.word	0x00010b54
 4cc:	.word	0x00000024

000004d0 <register_tm_clones>:
 4d0:	ldr	r1, [pc, #56]	; 510 <register_tm_clones+0x40>
 4d4:	ldr	r0, [pc, #56]	; 514 <register_tm_clones+0x44>
 4d8:	add	r1, pc, r1
 4dc:	add	r0, pc, r0
 4e0:	sub	r1, r1, r0
 4e4:	ldr	r3, [pc, #44]	; 518 <register_tm_clones+0x48>
 4e8:	asr	r1, r1, #2
 4ec:	add	r3, pc, r3
 4f0:	add	r1, r1, r1, lsr #31
 4f4:	asrs	r1, r1, #1
 4f8:	bxeq	lr
 4fc:	ldr	r2, [pc, #24]	; 51c <register_tm_clones+0x4c>
 500:	ldr	r3, [r3, r2]
 504:	cmp	r3, #0
 508:	bxeq	lr
 50c:	bx	r3
 510:	.word	0x00010b9c
 514:	.word	0x00010b98
 518:	.word	0x00010b0c
 51c:	.word	0x00000034

00000520 <__do_global_dtors_aux>:
 520:	ldr	r3, [pc, #76]	; 574 <__do_global_dtors_aux+0x54>
 524:	ldr	r2, [pc, #76]	; 578 <__do_global_dtors_aux+0x58>
 528:	add	r3, pc, r3
 52c:	add	r2, pc, r2
 530:	ldrb	r3, [r3]
 534:	cmp	r3, #0
 538:	bxne	lr
 53c:	ldr	r3, [pc, #56]	; 57c <__do_global_dtors_aux+0x5c>
 540:	push	{r4, lr}
 544:	ldr	r3, [r2, r3]
 548:	cmp	r3, #0
 54c:	beq	55c <__do_global_dtors_aux+0x3c>
 550:	ldr	r3, [pc, #40]	; 580 <__do_global_dtors_aux+0x60>
 554:	ldr	r0, [pc, r3]
 558:	bl	430 <__cxa_finalize@plt>
 55c:	bl	484 <deregister_tm_clones>
 560:	ldr	r3, [pc, #28]	; 584 <__do_global_dtors_aux+0x64>
 564:	mov	r2, #1
 568:	add	r3, pc, r3
 56c:	strb	r2, [r3]
 570:	pop	{r4, pc}
 574:	.word	0x00010b4c
 578:	.word	0x00010acc
 57c:	.word	0x00000020
 580:	.word	0x00010adc
 584:	.word	0x00010b0c

00000588 <frame_dummy>:
 588:	ldr	r0, [pc, #56]	; 5c8 <frame_dummy+0x40>
 58c:	ldr	r3, [pc, #56]	; 5cc <frame_dummy+0x44>
 590:	add	r0, pc, r0
 594:	ldr	r2, [r0]
 598:	add	r3, pc, r3
 59c:	cmp	r2, #0
 5a0:	bne	5a8 <frame_dummy+0x20>
 5a4:	b	4d0 <register_tm_clones>
 5a8:	ldr	r2, [pc, #32]	; 5d0 <frame_dummy+0x48>
 5ac:	ldr	r3, [r3, r2]
 5b0:	cmp	r3, #0
 5b4:	beq	5a4 <frame_dummy+0x1c>
 5b8:	push	{r4, lr}
 5bc:	blx	r3
 5c0:	pop	{r4, lr}
 5c4:	b	4d0 <register_tm_clones>
 5c8:	.word	0x00010964
 5cc:	.word	0x00010a60
 5d0:	.word	0x00000030

000005d4 <chm_nonotice_process>:
 5d4:	ldr	r3, [r0, #16]
 5d8:	cmp	r3, #0
 5dc:	bxne	lr
 5e0:	ldr	r3, [r0]
 5e4:	cmp	r3, #0
 5e8:	bxne	lr
 5ec:	ldr	r3, [r0, #8]
 5f0:	ldr	r1, [r3, #12]
 5f4:	ldr	r2, [pc, #72]	; 644 <chm_nonotice_process+0x70>
 5f8:	add	r2, pc, r2
 5fc:	ldr	r2, [r2]
 600:	tst	r1, r2
 604:	bxeq	lr
 608:	ldr	r2, [r0, #12]
 60c:	ldrb	r2, [r2]
 610:	cmp	r2, #1
 614:	bxeq	lr
 618:	push	{r4, lr}
 61c:	mov	r4, r0
 620:	ldr	r3, [r3, #236]	; 0xec
 624:	ldr	r2, [pc, #28]	; 648 <chm_nonotice_process+0x74>
 628:	add	r2, pc, r2
 62c:	mov	r1, #404	; 0x194
 630:	ldr	r0, [r0, #4]
 634:	bl	448 <sendto_one_numeric@plt>
 638:	mov	r3, #404	; 0x194
 63c:	str	r3, [r4, #16]
 640:	pop	{r4, pc}
 644:	.word	0x00010a80
 648:	.word	0x000000c4

0000064c <_moddeinit>:
 64c:	push	{r4, lr}
 650:	mov	r0, #84	; 0x54
 654:	bl	454 <cflag_orphan@plt>
 658:	pop	{r4, pc}

0000065c <_modinit>:
 65c:	push	{lr}		; (str lr, [sp, #-4]!)
 660:	sub	sp, sp, #12
 664:	ldr	r3, [pc, #56]	; 6a4 <_modinit+0x48>
 668:	add	r3, pc, r3
 66c:	ldr	r2, [pc, #52]	; 6a8 <_modinit+0x4c>
 670:	ldr	r3, [r3, r2]
 674:	str	r3, [sp, #4]
 678:	mov	r1, r3
 67c:	mov	r0, #84	; 0x54
 680:	bl	424 <cflag_add@plt>
 684:	ldr	r3, [pc, #32]	; 6ac <_modinit+0x50>
 688:	add	r3, pc, r3
 68c:	str	r0, [r3]
 690:	cmp	r0, #0
 694:	movne	r0, #0
 698:	mvneq	r0, #0
 69c:	add	sp, sp, #12
 6a0:	pop	{pc}		; (ldr pc, [sp], #4)
 6a4:	.word	0x00010990
 6a8:	.word	0x00000028
 6ac:	.word	0x000109f0

Disassembly of section .fini:

000006b0 <_fini>:
 6b0:	push	{r3, lr}
 6b4:	pop	{r3, pc}
