
../repos/sgerbino-table-2fdd8d0/bin/table_validator_test:     file format elf32-littlearm


Disassembly of section .init:

00011b80 <.init>:
   11b80:	push	{r3, lr}
   11b84:	bl	11e0c <_start@@Base+0x3c>
   11b88:	pop	{r3, pc}

Disassembly of section .plt:

00011b8c <raise@plt-0x14>:
   11b8c:	push	{lr}		; (str lr, [sp, #-4]!)
   11b90:	ldr	lr, [pc, #4]	; 11b9c <raise@plt-0x4>
   11b94:	add	lr, pc, lr
   11b98:	ldr	pc, [lr, #8]!
   11b9c:	andeq	r3, r1, r4, ror #8

00011ba0 <raise@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #77824	; 0x13000
   11ba8:	ldr	pc, [ip, #1124]!	; 0x464

00011bac <strcmp@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #77824	; 0x13000
   11bb4:	ldr	pc, [ip, #1116]!	; 0x45c

00011bb8 <printf@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #77824	; 0x13000
   11bc0:	ldr	pc, [ip, #1108]!	; 0x454

00011bc4 <free@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #77824	; 0x13000
   11bcc:	ldr	pc, [ip, #1100]!	; 0x44c

00011bd0 <time@plt>:
   11bd0:	add	ip, pc, #0, 12
   11bd4:	add	ip, ip, #77824	; 0x13000
   11bd8:	ldr	pc, [ip, #1092]!	; 0x444

00011bdc <realloc@plt>:
   11bdc:	add	ip, pc, #0, 12
   11be0:	add	ip, ip, #77824	; 0x13000
   11be4:	ldr	pc, [ip, #1084]!	; 0x43c

00011be8 <strcpy@plt>:
   11be8:	add	ip, pc, #0, 12
   11bec:	add	ip, ip, #77824	; 0x13000
   11bf0:	ldr	pc, [ip, #1076]!	; 0x434

00011bf4 <malloc@plt>:
   11bf4:	add	ip, pc, #0, 12
   11bf8:	add	ip, ip, #77824	; 0x13000
   11bfc:	ldr	pc, [ip, #1068]!	; 0x42c

00011c00 <__libc_start_main@plt>:
   11c00:	add	ip, pc, #0, 12
   11c04:	add	ip, ip, #77824	; 0x13000
   11c08:	ldr	pc, [ip, #1060]!	; 0x424

00011c0c <__gmon_start__@plt>:
   11c0c:	add	ip, pc, #0, 12
   11c10:	add	ip, ip, #77824	; 0x13000
   11c14:	ldr	pc, [ip, #1052]!	; 0x41c

00011c18 <strlen@plt>:
   11c18:	add	ip, pc, #0, 12
   11c1c:	add	ip, ip, #77824	; 0x13000
   11c20:	ldr	pc, [ip, #1044]!	; 0x414

00011c24 <srand@plt>:
   11c24:	add	ip, pc, #0, 12
   11c28:	add	ip, ip, #77824	; 0x13000
   11c2c:	ldr	pc, [ip, #1036]!	; 0x40c

00011c30 <snprintf@plt>:
   11c30:	add	ip, pc, #0, 12
   11c34:	add	ip, ip, #77824	; 0x13000
   11c38:	ldr	pc, [ip, #1028]!	; 0x404

00011c3c <__isoc99_sscanf@plt>:
   11c3c:	add	ip, pc, #0, 12
   11c40:	add	ip, ip, #77824	; 0x13000
   11c44:	ldr	pc, [ip, #1020]!	; 0x3fc

00011c48 <rand@plt>:
   11c48:	add	ip, pc, #0, 12
   11c4c:	add	ip, ip, #77824	; 0x13000
   11c50:	ldr	pc, [ip, #1012]!	; 0x3f4

00011c54 <abort@plt>:
   11c54:	add	ip, pc, #0, 12
   11c58:	add	ip, ip, #77824	; 0x13000
   11c5c:	ldr	pc, [ip, #1004]!	; 0x3ec

Disassembly of section .text:

00011c60 <main@@Base>:
   11c60:	push	{r4, r5, r6, lr}
   11c64:	sub	sp, sp, #64	; 0x40
   11c68:	add	r0, sp, #4
   11c6c:	bl	11bd0 <time@plt>
   11c70:	bl	11c24 <srand@plt>
   11c74:	bl	11c48 <rand@plt>
   11c78:	mov	r5, r0
   11c7c:	add	r0, sp, #4
   11c80:	bl	11bd0 <time@plt>
   11c84:	bl	11c24 <srand@plt>
   11c88:	bl	11c48 <rand@plt>
   11c8c:	mov	r6, r0
   11c90:	add	r0, sp, #8
   11c94:	bl	11ef8 <table_init@@Base>
   11c98:	mov	r1, r5
   11c9c:	add	r0, sp, #8
   11ca0:	bl	138d0 <table_row_is_valid@@Base>
   11ca4:	subs	r4, r0, #0
   11ca8:	beq	11cbc <main@@Base+0x5c>
   11cac:	mov	r1, r5
   11cb0:	ldr	r0, [pc, #252]	; 11db4 <main@@Base+0x154>
   11cb4:	bl	11bb8 <printf@plt>
   11cb8:	mvn	r4, #0
   11cbc:	mov	r1, r6
   11cc0:	add	r0, sp, #8
   11cc4:	bl	138a0 <table_column_is_valid@@Base>
   11cc8:	cmp	r0, #0
   11ccc:	beq	11ce0 <main@@Base+0x80>
   11cd0:	mov	r1, r6
   11cd4:	ldr	r0, [pc, #220]	; 11db8 <main@@Base+0x158>
   11cd8:	bl	11bb8 <printf@plt>
   11cdc:	mvn	r4, #0
   11ce0:	mov	r2, r6
   11ce4:	mov	r1, r5
   11ce8:	add	r0, sp, #8
   11cec:	bl	13900 <table_cell_is_valid@@Base>
   11cf0:	cmp	r0, #0
   11cf4:	beq	11d0c <main@@Base+0xac>
   11cf8:	mov	r2, r6
   11cfc:	mov	r1, r5
   11d00:	ldr	r0, [pc, #180]	; 11dbc <main@@Base+0x15c>
   11d04:	bl	11bb8 <printf@plt>
   11d08:	mvn	r4, #0
   11d0c:	add	r0, sp, #8
   11d10:	bl	130ec <table_add_row@@Base>
   11d14:	mov	r1, r0
   11d18:	mov	r5, r0
   11d1c:	add	r0, sp, #8
   11d20:	bl	138d0 <table_row_is_valid@@Base>
   11d24:	cmp	r0, #0
   11d28:	bne	11d3c <main@@Base+0xdc>
   11d2c:	mov	r1, r5
   11d30:	ldr	r0, [pc, #136]	; 11dc0 <main@@Base+0x160>
   11d34:	bl	11bb8 <printf@plt>
   11d38:	mvn	r4, #0
   11d3c:	mov	r2, #0
   11d40:	ldr	r1, [pc, #124]	; 11dc4 <main@@Base+0x164>
   11d44:	add	r0, sp, #8
   11d48:	bl	12878 <table_add_column@@Base>
   11d4c:	mov	r1, r0
   11d50:	mov	r6, r0
   11d54:	add	r0, sp, #8
   11d58:	bl	138a0 <table_column_is_valid@@Base>
   11d5c:	cmp	r0, #0
   11d60:	bne	11d74 <main@@Base+0x114>
   11d64:	mov	r1, r6
   11d68:	ldr	r0, [pc, #88]	; 11dc8 <main@@Base+0x168>
   11d6c:	bl	11bb8 <printf@plt>
   11d70:	mvn	r4, #0
   11d74:	mov	r2, r6
   11d78:	mov	r1, r5
   11d7c:	add	r0, sp, #8
   11d80:	bl	13900 <table_cell_is_valid@@Base>
   11d84:	cmp	r0, #0
   11d88:	bne	11da0 <main@@Base+0x140>
   11d8c:	mov	r2, r6
   11d90:	mov	r1, r5
   11d94:	ldr	r0, [pc, #48]	; 11dcc <main@@Base+0x16c>
   11d98:	bl	11bb8 <printf@plt>
   11d9c:	mvn	r4, #0
   11da0:	add	r0, sp, #8
   11da4:	bl	11f58 <table_destroy@@Base>
   11da8:	mov	r0, r4
   11dac:	add	sp, sp, #64	; 0x40
   11db0:	pop	{r4, r5, r6, pc}
   11db4:	strdeq	r4, [r1], -ip
   11db8:	andeq	r4, r1, r7, lsl r5
   11dbc:	andeq	r4, r1, r5, lsr r5
   11dc0:	andeq	r4, r1, r5, asr r5
   11dc4:	muleq	r1, pc, r5	; <UNPREDICTABLE>
   11dc8:	andeq	r4, r1, ip, ror #10
   11dcc:	andeq	r4, r1, r6, lsl #11

00011dd0 <_start@@Base>:
   11dd0:	mov	fp, #0
   11dd4:	mov	lr, #0
   11dd8:	pop	{r1}		; (ldr r1, [sp], #4)
   11ddc:	mov	r2, sp
   11de0:	push	{r2}		; (str r2, [sp, #-4]!)
   11de4:	push	{r0}		; (str r0, [sp, #-4]!)
   11de8:	ldr	ip, [pc, #16]	; 11e00 <_start@@Base+0x30>
   11dec:	push	{ip}		; (str ip, [sp, #-4]!)
   11df0:	ldr	r0, [pc, #12]	; 11e04 <_start@@Base+0x34>
   11df4:	ldr	r3, [pc, #12]	; 11e08 <_start@@Base+0x38>
   11df8:	bl	11c00 <__libc_start_main@plt>
   11dfc:	bl	11c54 <abort@plt>
   11e00:	andeq	r4, r1, ip, ror #9
   11e04:	andeq	r1, r1, r0, ror #24
   11e08:	andeq	r4, r1, ip, lsl #9
   11e0c:	ldr	r3, [pc, #20]	; 11e28 <_start@@Base+0x58>
   11e10:	ldr	r2, [pc, #20]	; 11e2c <_start@@Base+0x5c>
   11e14:	add	r3, pc, r3
   11e18:	ldr	r2, [r3, r2]
   11e1c:	cmp	r2, #0
   11e20:	bxeq	lr
   11e24:	b	11c0c <__gmon_start__@plt>
   11e28:	andeq	r3, r1, r4, ror #3
   11e2c:	andeq	r0, r0, ip, asr #32
   11e30:	ldr	r3, [pc, #28]	; 11e54 <_start@@Base+0x84>
   11e34:	ldr	r0, [pc, #28]	; 11e58 <_start@@Base+0x88>
   11e38:	sub	r3, r3, r0
   11e3c:	cmp	r3, #6
   11e40:	bxls	lr
   11e44:	ldr	r3, [pc, #16]	; 11e5c <_start@@Base+0x8c>
   11e48:	cmp	r3, #0
   11e4c:	bxeq	lr
   11e50:	bx	r3
   11e54:	andeq	r5, r2, fp, asr r0
   11e58:	andeq	r5, r2, r8, asr r0
   11e5c:	andeq	r0, r0, r0
   11e60:	ldr	r1, [pc, #36]	; 11e8c <_start@@Base+0xbc>
   11e64:	ldr	r0, [pc, #36]	; 11e90 <_start@@Base+0xc0>
   11e68:	sub	r1, r1, r0
   11e6c:	asr	r1, r1, #2
   11e70:	add	r1, r1, r1, lsr #31
   11e74:	asrs	r1, r1, #1
   11e78:	bxeq	lr
   11e7c:	ldr	r3, [pc, #16]	; 11e94 <_start@@Base+0xc4>
   11e80:	cmp	r3, #0
   11e84:	bxeq	lr
   11e88:	bx	r3
   11e8c:	andeq	r5, r2, r8, asr r0
   11e90:	andeq	r5, r2, r8, asr r0
   11e94:	andeq	r0, r0, r0
   11e98:	push	{r4, lr}
   11e9c:	ldr	r4, [pc, #24]	; 11ebc <_start@@Base+0xec>
   11ea0:	ldrb	r3, [r4]
   11ea4:	cmp	r3, #0
   11ea8:	popne	{r4, pc}
   11eac:	bl	11e30 <_start@@Base+0x60>
   11eb0:	mov	r3, #1
   11eb4:	strb	r3, [r4]
   11eb8:	pop	{r4, pc}
   11ebc:	andeq	r5, r2, r8, asr r0
   11ec0:	ldr	r0, [pc, #40]	; 11ef0 <_start@@Base+0x120>
   11ec4:	ldr	r3, [r0]
   11ec8:	cmp	r3, #0
   11ecc:	bne	11ed4 <_start@@Base+0x104>
   11ed0:	b	11e60 <_start@@Base+0x90>
   11ed4:	ldr	r3, [pc, #24]	; 11ef4 <_start@@Base+0x124>
   11ed8:	cmp	r3, #0
   11edc:	beq	11ed0 <_start@@Base+0x100>
   11ee0:	push	{r4, lr}
   11ee4:	blx	r3
   11ee8:	pop	{r4, lr}
   11eec:	b	11e60 <_start@@Base+0x90>
   11ef0:	andeq	r4, r2, r4, lsl pc
   11ef4:	andeq	r0, r0, r0

00011ef8 <table_init@@Base>:
   11ef8:	mov	r3, #0
   11efc:	mov	r2, #10
   11f00:	mov	r1, #20
   11f04:	str	r3, [r0]
   11f08:	str	r3, [r0, #4]
   11f0c:	str	r3, [r0, #12]
   11f10:	str	r2, [r0, #8]
   11f14:	str	r3, [r0, #16]
   11f18:	str	r3, [r0, #20]
   11f1c:	str	r3, [r0, #28]
   11f20:	str	r1, [r0, #24]
   11f24:	str	r3, [r0, #36]	; 0x24
   11f28:	str	r3, [r0, #40]	; 0x28
   11f2c:	str	r3, [r0, #44]	; 0x2c
   11f30:	str	r3, [r0, #32]
   11f34:	str	r3, [r0, #52]	; 0x34
   11f38:	str	r2, [r0, #48]	; 0x30
   11f3c:	bx	lr

00011f40 <table_new@@Base>:
   11f40:	push	{r4, lr}
   11f44:	mov	r0, #56	; 0x38
   11f48:	bl	11bf4 <malloc@plt>
   11f4c:	mov	r4, r0
   11f50:	bl	11ef8 <table_init@@Base>
   11f54:	pop	{r4, pc}

00011f58 <table_destroy@@Base>:
   11f58:	push	{r4, r5, r6, lr}
   11f5c:	subs	r4, r0, #0
   11f60:	popeq	{r4, r5, r6, pc}
   11f64:	mvn	r2, #0
   11f68:	mov	r3, #64	; 0x40
   11f6c:	mov	r1, r2
   11f70:	bl	12734 <table_notify@@Base>
   11f74:	mov	r0, r4
   11f78:	bl	130e4 <table_get_row_length@@Base>
   11f7c:	mov	r5, #0
   11f80:	mov	r6, r0
   11f84:	cmp	r6, r5
   11f88:	bgt	11ff8 <table_destroy@@Base+0xa0>
   11f8c:	ldr	r0, [r4, #16]
   11f90:	cmp	r0, #0
   11f94:	beq	11f9c <table_destroy@@Base+0x44>
   11f98:	bl	11bc4 <free@plt>
   11f9c:	mov	r0, r4
   11fa0:	bl	1280c <table_get_column_length@@Base>
   11fa4:	mov	r5, #0
   11fa8:	mov	r6, r0
   11fac:	cmp	r6, r5
   11fb0:	bgt	1200c <table_destroy@@Base+0xb4>
   11fb4:	ldr	r0, [r4]
   11fb8:	cmp	r0, #0
   11fbc:	beq	11fc4 <table_destroy@@Base+0x6c>
   11fc0:	bl	11bc4 <free@plt>
   11fc4:	ldr	r0, [r4, #36]	; 0x24
   11fc8:	cmp	r0, #0
   11fcc:	beq	11fd4 <table_destroy@@Base+0x7c>
   11fd0:	bl	11bc4 <free@plt>
   11fd4:	ldr	r0, [r4, #40]	; 0x28
   11fd8:	cmp	r0, #0
   11fdc:	beq	11fe4 <table_destroy@@Base+0x8c>
   11fe0:	bl	11bc4 <free@plt>
   11fe4:	ldr	r0, [r4, #44]	; 0x2c
   11fe8:	cmp	r0, #0
   11fec:	popeq	{r4, r5, r6, pc}
   11ff0:	pop	{r4, r5, r6, lr}
   11ff4:	b	11bc4 <free@plt>
   11ff8:	mov	r1, r5
   11ffc:	mov	r0, r4
   12000:	bl	13094 <table_row_destroy@@Base>
   12004:	add	r5, r5, #1
   12008:	b	11f84 <table_destroy@@Base+0x2c>
   1200c:	mov	r1, r5
   12010:	mov	r0, r4
   12014:	bl	127f0 <table_column_destroy@@Base>
   12018:	add	r5, r5, #1
   1201c:	b	11fac <table_destroy@@Base+0x54>

00012020 <table_delete@@Base>:
   12020:	push	{r4, lr}
   12024:	mov	r4, r0
   12028:	bl	11f58 <table_destroy@@Base>
   1202c:	mov	r0, r4
   12030:	pop	{r4, lr}
   12034:	b	11bc4 <free@plt>

00012038 <table_dupe@@Base>:
   12038:	push	{r4, r5, r6, r7, r8, r9, lr}
   1203c:	sub	sp, sp, #20
   12040:	mov	r6, r0
   12044:	bl	130e4 <table_get_row_length@@Base>
   12048:	mov	r4, #0
   1204c:	mov	r9, r0
   12050:	mov	r0, r6
   12054:	bl	1280c <table_get_column_length@@Base>
   12058:	mov	r8, r0
   1205c:	bl	11f40 <table_new@@Base>
   12060:	mov	r7, r0
   12064:	cmp	r4, r8
   12068:	blt	12084 <table_dupe@@Base+0x4c>
   1206c:	mov	r5, #0
   12070:	cmp	r5, r9
   12074:	mov	r0, r7
   12078:	blt	120b8 <table_dupe@@Base+0x80>
   1207c:	add	sp, sp, #20
   12080:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12084:	mov	r1, r4
   12088:	mov	r0, r6
   1208c:	bl	12ae0 <table_get_column_name@@Base>
   12090:	mov	r1, r4
   12094:	add	r4, r4, #1
   12098:	mov	r5, r0
   1209c:	mov	r0, r6
   120a0:	bl	12864 <table_get_column_data_type@@Base>
   120a4:	mov	r1, r5
   120a8:	mov	r2, r0
   120ac:	mov	r0, r7
   120b0:	bl	12878 <table_add_column@@Base>
   120b4:	b	12064 <table_dupe@@Base+0x2c>
   120b8:	bl	130ec <table_add_row@@Base>
   120bc:	mov	r4, #0
   120c0:	cmp	r4, r8
   120c4:	addge	r5, r5, #1
   120c8:	bge	12070 <table_dupe@@Base+0x38>
   120cc:	mov	r1, r4
   120d0:	mov	r0, r6
   120d4:	bl	12864 <table_get_column_data_type@@Base>
   120d8:	cmp	r0, #23
   120dc:	ldrls	pc, [pc, r0, lsl #2]
   120e0:	b	12168 <table_dupe@@Base+0x130>
   120e4:	andeq	r2, r1, r4, asr #2
   120e8:	andeq	r2, r1, r0, ror r1
   120ec:	muleq	r1, r8, r1
   120f0:	andeq	r2, r1, r0, asr #3
   120f4:	andeq	r2, r1, r8, ror #3
   120f8:	andeq	r2, r1, r0, lsl r2
   120fc:	andeq	r2, r1, r8, lsr r2
   12100:	andeq	r2, r1, r0, ror #4
   12104:	andeq	r2, r1, r8, lsl #5
   12108:			; <UNDEFINED> instruction: 0x000122b0
   1210c:	ldrdeq	r2, [r1], -r8
   12110:	andeq	r2, r1, r0, lsl #6
   12114:	andeq	r2, r1, r8, lsr #6
   12118:	andeq	r2, r1, r0, asr r3
   1211c:	andeq	r2, r1, r8, ror r3
   12120:	andeq	r2, r1, r0, lsr #7
   12124:	strdeq	r2, [r1], -r0
   12128:	andeq	r2, r1, r4, lsl r4
   1212c:	andeq	r2, r1, r8, lsr r4
   12130:	andeq	r2, r1, r4, lsl #9
   12134:	andeq	r2, r1, ip, lsr #9
   12138:	andeq	r2, r1, r8, asr #7
   1213c:	andeq	r2, r1, ip, asr r4
   12140:	ldrdeq	r2, [r1], -r4
   12144:	mov	r2, r4
   12148:	mov	r1, r5
   1214c:	mov	r0, r6
   12150:	bl	12f9c <table_get_int@@Base>
   12154:	mov	r2, r4
   12158:	mov	r1, r5
   1215c:	mov	r3, r0
   12160:	mov	r0, r7
   12164:	bl	135a8 <table_set_int@@Base>
   12168:	add	r4, r4, #1
   1216c:	b	120c0 <table_dupe@@Base+0x88>
   12170:	mov	r2, r4
   12174:	mov	r1, r5
   12178:	mov	r0, r6
   1217c:	bl	12fb0 <table_get_uint@@Base>
   12180:	mov	r2, r4
   12184:	mov	r1, r5
   12188:	mov	r3, r0
   1218c:	mov	r0, r7
   12190:	bl	135cc <table_set_uint@@Base>
   12194:	b	12168 <table_dupe@@Base+0x130>
   12198:	mov	r2, r4
   1219c:	mov	r1, r5
   121a0:	mov	r0, r6
   121a4:	bl	12f7c <table_get_int8@@Base>
   121a8:	mov	r2, r4
   121ac:	mov	r1, r5
   121b0:	mov	r3, r0
   121b4:	mov	r0, r7
   121b8:	bl	135f0 <table_set_int8@@Base>
   121bc:	b	12168 <table_dupe@@Base+0x130>
   121c0:	mov	r2, r4
   121c4:	mov	r1, r5
   121c8:	mov	r0, r6
   121cc:	bl	13068 <table_get_uint8@@Base>
   121d0:	mov	r2, r4
   121d4:	mov	r1, r5
   121d8:	mov	r3, r0
   121dc:	mov	r0, r7
   121e0:	bl	13614 <table_set_uint8@@Base>
   121e4:	b	12168 <table_dupe@@Base+0x130>
   121e8:	mov	r2, r4
   121ec:	mov	r1, r5
   121f0:	mov	r0, r6
   121f4:	bl	12fc4 <table_get_int16@@Base>
   121f8:	mov	r2, r4
   121fc:	mov	r1, r5
   12200:	mov	r3, r0
   12204:	mov	r0, r7
   12208:	bl	13638 <table_set_int16@@Base>
   1220c:	b	12168 <table_dupe@@Base+0x130>
   12210:	mov	r2, r4
   12214:	mov	r1, r5
   12218:	mov	r0, r6
   1221c:	bl	12fd8 <table_get_uint16@@Base>
   12220:	mov	r2, r4
   12224:	mov	r1, r5
   12228:	mov	r3, r0
   1222c:	mov	r0, r7
   12230:	bl	1365c <table_set_uint16@@Base>
   12234:	b	12168 <table_dupe@@Base+0x130>
   12238:	mov	r2, r4
   1223c:	mov	r1, r5
   12240:	mov	r0, r6
   12244:	bl	12f8c <table_get_int32@@Base>
   12248:	mov	r2, r4
   1224c:	mov	r1, r5
   12250:	mov	r3, r0
   12254:	mov	r0, r7
   12258:	bl	13680 <table_set_int32@@Base>
   1225c:	b	12168 <table_dupe@@Base+0x130>
   12260:	mov	r2, r4
   12264:	mov	r1, r5
   12268:	mov	r0, r6
   1226c:	bl	12fa0 <table_get_uint32@@Base>
   12270:	mov	r2, r4
   12274:	mov	r1, r5
   12278:	mov	r3, r0
   1227c:	mov	r0, r7
   12280:	bl	136a4 <table_set_uint32@@Base>
   12284:	b	12168 <table_dupe@@Base+0x130>
   12288:	mov	r2, r4
   1228c:	mov	r1, r5
   12290:	mov	r0, r6
   12294:	bl	1300c <table_get_int64@@Base>
   12298:	mov	r2, r4
   1229c:	strd	r0, [sp]
   122a0:	mov	r1, r5
   122a4:	mov	r0, r7
   122a8:	bl	136c8 <table_set_int64@@Base>
   122ac:	b	12168 <table_dupe@@Base+0x130>
   122b0:	mov	r2, r4
   122b4:	mov	r1, r5
   122b8:	mov	r0, r6
   122bc:	bl	13020 <table_get_uint64@@Base>
   122c0:	mov	r2, r4
   122c4:	strd	r0, [sp]
   122c8:	mov	r1, r5
   122cc:	mov	r0, r7
   122d0:	bl	136e4 <table_set_uint64@@Base>
   122d4:	b	12168 <table_dupe@@Base+0x130>
   122d8:	mov	r2, r4
   122dc:	mov	r1, r5
   122e0:	mov	r0, r6
   122e4:	bl	12fb4 <table_get_short@@Base>
   122e8:	mov	r2, r4
   122ec:	mov	r1, r5
   122f0:	mov	r3, r0
   122f4:	mov	r0, r7
   122f8:	bl	13700 <table_set_short@@Base>
   122fc:	b	12168 <table_dupe@@Base+0x130>
   12300:	mov	r2, r4
   12304:	mov	r1, r5
   12308:	mov	r0, r6
   1230c:	bl	12fc8 <table_get_ushort@@Base>
   12310:	mov	r2, r4
   12314:	mov	r1, r5
   12318:	mov	r3, r0
   1231c:	mov	r0, r7
   12320:	bl	13724 <table_set_ushort@@Base>
   12324:	b	12168 <table_dupe@@Base+0x130>
   12328:	mov	r2, r4
   1232c:	mov	r1, r5
   12330:	mov	r0, r6
   12334:	bl	12fdc <table_get_long@@Base>
   12338:	mov	r2, r4
   1233c:	mov	r1, r5
   12340:	mov	r3, r0
   12344:	mov	r0, r7
   12348:	bl	13748 <table_set_long@@Base>
   1234c:	b	12168 <table_dupe@@Base+0x130>
   12350:	mov	r2, r4
   12354:	mov	r1, r5
   12358:	mov	r0, r6
   1235c:	bl	12fec <table_get_ulong@@Base>
   12360:	mov	r2, r4
   12364:	mov	r1, r5
   12368:	mov	r3, r0
   1236c:	mov	r0, r7
   12370:	bl	1376c <table_set_ulong@@Base>
   12374:	b	12168 <table_dupe@@Base+0x130>
   12378:	mov	r2, r4
   1237c:	mov	r1, r5
   12380:	mov	r0, r6
   12384:	bl	12ffc <table_get_llong@@Base>
   12388:	mov	r2, r4
   1238c:	strd	r0, [sp]
   12390:	mov	r1, r5
   12394:	mov	r0, r7
   12398:	bl	13790 <table_set_llong@@Base>
   1239c:	b	12168 <table_dupe@@Base+0x130>
   123a0:	mov	r2, r4
   123a4:	mov	r1, r5
   123a8:	mov	r0, r6
   123ac:	bl	13010 <table_get_ullong@@Base>
   123b0:	mov	r2, r4
   123b4:	strd	r0, [sp]
   123b8:	mov	r1, r5
   123bc:	mov	r0, r7
   123c0:	bl	137ac <table_set_ullong@@Base>
   123c4:	b	12168 <table_dupe@@Base+0x130>
   123c8:	mov	r2, r4
   123cc:	mov	r1, r5
   123d0:	mov	r0, r6
   123d4:	bl	1306c <table_get_string@@Base>
   123d8:	mov	r2, r4
   123dc:	mov	r1, r5
   123e0:	mov	r3, r0
   123e4:	mov	r0, r7
   123e8:	bl	13828 <table_set_string@@Base>
   123ec:	b	12168 <table_dupe@@Base+0x130>
   123f0:	mov	r2, r4
   123f4:	mov	r1, r5
   123f8:	mov	r0, r6
   123fc:	bl	13024 <table_get_float@@Base>
   12400:	mov	r2, r4
   12404:	mov	r1, r5
   12408:	mov	r0, r7
   1240c:	bl	137c8 <table_set_float@@Base>
   12410:	b	12168 <table_dupe@@Base+0x130>
   12414:	mov	r2, r4
   12418:	mov	r1, r5
   1241c:	mov	r0, r6
   12420:	bl	13034 <table_get_double@@Base>
   12424:	mov	r2, r4
   12428:	mov	r1, r5
   1242c:	mov	r0, r7
   12430:	bl	137e8 <table_set_double@@Base>
   12434:	b	12168 <table_dupe@@Base+0x130>
   12438:	mov	r2, r4
   1243c:	mov	r1, r5
   12440:	mov	r0, r6
   12444:	bl	13044 <table_get_ldouble@@Base>
   12448:	mov	r2, r4
   1244c:	mov	r1, r5
   12450:	mov	r0, r7
   12454:	bl	13808 <table_set_ldouble@@Base>
   12458:	b	12168 <table_dupe@@Base+0x130>
   1245c:	mov	r2, r4
   12460:	mov	r1, r5
   12464:	mov	r0, r6
   12468:	bl	12f6c <table_get_bool@@Base>
   1246c:	mov	r2, r4
   12470:	mov	r1, r5
   12474:	mov	r3, r0
   12478:	mov	r0, r7
   1247c:	bl	13584 <table_set_bool@@Base>
   12480:	b	12168 <table_dupe@@Base+0x130>
   12484:	mov	r2, r4
   12488:	mov	r1, r5
   1248c:	mov	r0, r6
   12490:	bl	13064 <table_get_char@@Base>
   12494:	mov	r2, r4
   12498:	mov	r1, r5
   1249c:	mov	r3, r0
   124a0:	mov	r0, r7
   124a4:	bl	13840 <table_set_char@@Base>
   124a8:	b	12168 <table_dupe@@Base+0x130>
   124ac:	mov	r2, r4
   124b0:	mov	r1, r5
   124b4:	mov	r0, r6
   124b8:	bl	13054 <table_get_uchar@@Base>
   124bc:	mov	r2, r4
   124c0:	mov	r1, r5
   124c4:	mov	r3, r0
   124c8:	mov	r0, r7
   124cc:	bl	13864 <table_set_uchar@@Base>
   124d0:	b	12168 <table_dupe@@Base+0x130>
   124d4:	mov	r2, r4
   124d8:	mov	r1, r5
   124dc:	mov	r0, r6
   124e0:	bl	13070 <table_get_ptr@@Base>
   124e4:	add	r3, sp, #12
   124e8:	mov	r2, r4
   124ec:	mov	r1, r5
   124f0:	str	r0, [sp, #12]
   124f4:	mov	r0, r7
   124f8:	bl	13888 <table_set_ptr@@Base>
   124fc:	b	12168 <table_dupe@@Base+0x130>

00012500 <table_get_major_version@@Base>:
   12500:	mov	r0, #0
   12504:	bx	lr

00012508 <table_get_minor_version@@Base>:
   12508:	mov	r0, #0
   1250c:	bx	lr

00012510 <table_get_patch_version@@Base>:
   12510:	mov	r0, #0
   12514:	bx	lr

00012518 <table_get_version@@Base>:
   12518:	ldr	r0, [pc]	; 12520 <table_get_version@@Base+0x8>
   1251c:	bx	lr
   12520:	andeq	r4, r1, r4, lsr r6

00012524 <table_get_callback_length@@Base>:
   12524:	ldr	r0, [r0, #32]
   12528:	bx	lr

0001252c <table_register_callback@@Base>:
   1252c:	push	{r4, r5, r6, r7, r8, lr}
   12530:	mov	r4, r0
   12534:	ldr	r0, [r0, #32]
   12538:	mov	ip, #0
   1253c:	cmp	ip, r0
   12540:	blt	125d4 <table_register_callback@@Base+0xa8>
   12544:	ldr	r5, [r4, #48]	; 0x30
   12548:	mov	r8, r1
   1254c:	mov	r1, r5
   12550:	mov	r6, r3
   12554:	mov	r7, r2
   12558:	bl	1445c <table_cell_nullify@@Base+0x218>
   1255c:	cmp	r1, #0
   12560:	bne	125a8 <table_register_callback@@Base+0x7c>
   12564:	ldr	r1, [r4, #52]	; 0x34
   12568:	ldr	r0, [r4, #36]	; 0x24
   1256c:	add	r1, r5, r1
   12570:	str	r1, [r4, #52]	; 0x34
   12574:	lsl	r1, r1, #2
   12578:	bl	11bdc <realloc@plt>
   1257c:	ldr	r1, [r4, #52]	; 0x34
   12580:	lsl	r1, r1, #2
   12584:	str	r0, [r4, #36]	; 0x24
   12588:	ldr	r0, [r4, #40]	; 0x28
   1258c:	bl	11bdc <realloc@plt>
   12590:	ldr	r1, [r4, #52]	; 0x34
   12594:	lsl	r1, r1, #2
   12598:	str	r0, [r4, #40]	; 0x28
   1259c:	ldr	r0, [r4, #44]	; 0x2c
   125a0:	bl	11bdc <realloc@plt>
   125a4:	str	r0, [r4, #44]	; 0x2c
   125a8:	ldr	r3, [r4, #32]
   125ac:	ldr	r2, [r4, #36]	; 0x24
   125b0:	str	r8, [r2, r3, lsl #2]
   125b4:	ldr	r2, [r4, #40]	; 0x28
   125b8:	str	r7, [r2, r3, lsl #2]
   125bc:	ldr	r2, [r4, #44]	; 0x2c
   125c0:	str	r6, [r2, r3, lsl #2]
   125c4:	ldr	r3, [r4, #32]
   125c8:	add	r3, r3, #1
   125cc:	str	r3, [r4, #32]
   125d0:	pop	{r4, r5, r6, r7, r8, pc}
   125d4:	ldr	r5, [r4, #36]	; 0x24
   125d8:	lsl	lr, ip, #2
   125dc:	ldr	r5, [r5, ip, lsl #2]
   125e0:	cmp	r1, r5
   125e4:	bne	125f8 <table_register_callback@@Base+0xcc>
   125e8:	ldr	r5, [r4, #40]	; 0x28
   125ec:	ldr	r5, [r5, ip, lsl #2]
   125f0:	cmp	r2, r5
   125f4:	beq	12600 <table_register_callback@@Base+0xd4>
   125f8:	add	ip, ip, #1
   125fc:	b	1253c <table_register_callback@@Base+0x10>
   12600:	cmp	ip, #0
   12604:	ble	12544 <table_register_callback@@Base+0x18>
   12608:	ldr	r1, [r4, #44]	; 0x2c
   1260c:	ldr	r2, [r1, lr]
   12610:	orr	r3, r2, r3
   12614:	str	r3, [r1, lr]
   12618:	pop	{r4, r5, r6, r7, r8, pc}

0001261c <table_unregister_callback@@Base>:
   1261c:	push	{r4, r5, r6, lr}
   12620:	mov	r4, r0
   12624:	ldr	r0, [r0, #32]
   12628:	mov	r3, #0
   1262c:	cmp	r3, r0
   12630:	blt	12638 <table_unregister_callback@@Base+0x1c>
   12634:	pop	{r4, r5, r6, pc}
   12638:	ldr	lr, [r4, #36]	; 0x24
   1263c:	lsl	ip, r3, #2
   12640:	ldr	lr, [lr, r3, lsl #2]
   12644:	cmp	r1, lr
   12648:	bne	1265c <table_unregister_callback@@Base+0x40>
   1264c:	ldr	lr, [r4, #40]	; 0x28
   12650:	ldr	lr, [lr, r3, lsl #2]
   12654:	cmp	r2, lr
   12658:	beq	12690 <table_unregister_callback@@Base+0x74>
   1265c:	add	r3, r3, #1
   12660:	b	1262c <table_unregister_callback@@Base+0x10>
   12664:	ldr	r1, [r4, #36]	; 0x24
   12668:	add	r3, r3, #1
   1266c:	ldr	r0, [r1, r2]
   12670:	str	r0, [r1, ip]
   12674:	ldr	r1, [r4, #40]	; 0x28
   12678:	ldr	r0, [r1, r2]
   1267c:	str	r0, [r1, ip]
   12680:	ldr	r1, [r4, #44]	; 0x2c
   12684:	ldr	r0, [r1, r2]
   12688:	str	r0, [r1, ip]
   1268c:	mov	ip, r2
   12690:	ldr	r0, [r4, #32]
   12694:	add	r2, ip, #4
   12698:	sub	r0, r0, #1
   1269c:	cmp	r3, r0
   126a0:	blt	12664 <table_unregister_callback@@Base+0x48>
   126a4:	ldr	r6, [r4, #48]	; 0x30
   126a8:	str	r0, [r4, #32]
   126ac:	mov	r1, r6
   126b0:	bl	1445c <table_cell_nullify@@Base+0x218>
   126b4:	cmp	r1, #0
   126b8:	popne	{r4, r5, r6, pc}
   126bc:	ldr	r5, [r4, #52]	; 0x34
   126c0:	sub	r5, r5, r6
   126c4:	cmp	r5, #0
   126c8:	str	r5, [r4, #52]	; 0x34
   126cc:	beq	1270c <table_unregister_callback@@Base+0xf0>
   126d0:	lsl	r1, r5, #2
   126d4:	ldr	r0, [r4, #36]	; 0x24
   126d8:	bl	11bdc <realloc@plt>
   126dc:	ldr	r1, [r4, #52]	; 0x34
   126e0:	lsl	r1, r1, #2
   126e4:	str	r0, [r4, #36]	; 0x24
   126e8:	ldr	r0, [r4, #40]	; 0x28
   126ec:	bl	11bdc <realloc@plt>
   126f0:	ldr	r1, [r4, #52]	; 0x34
   126f4:	lsl	r1, r1, #2
   126f8:	str	r0, [r4, #40]	; 0x28
   126fc:	ldr	r0, [r4, #44]	; 0x2c
   12700:	bl	11bdc <realloc@plt>
   12704:	str	r0, [r4, #44]	; 0x2c
   12708:	pop	{r4, r5, r6, pc}
   1270c:	ldr	r0, [r4, #36]	; 0x24
   12710:	bl	11bc4 <free@plt>
   12714:	ldr	r0, [r4, #40]	; 0x28
   12718:	bl	11bc4 <free@plt>
   1271c:	ldr	r0, [r4, #44]	; 0x2c
   12720:	bl	11bc4 <free@plt>
   12724:	str	r5, [r4, #36]	; 0x24
   12728:	str	r5, [r4, #40]	; 0x28
   1272c:	str	r5, [r4, #44]	; 0x2c
   12730:	pop	{r4, r5, r6, pc}

00012734 <table_notify@@Base>:
   12734:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12738:	mov	r5, r0
   1273c:	mov	r7, r1
   12740:	mov	r8, r2
   12744:	mov	r6, r3
   12748:	mov	r4, #0
   1274c:	ldr	r3, [r5, #32]
   12750:	cmp	r4, r3
   12754:	blt	12760 <table_notify@@Base+0x2c>
   12758:	add	sp, sp, #12
   1275c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12760:	ldr	r3, [r5, #44]	; 0x2c
   12764:	ldr	r3, [r3, r4, lsl #2]
   12768:	tst	r6, r3
   1276c:	beq	12798 <table_notify@@Base+0x64>
   12770:	ldr	r2, [r5, #40]	; 0x28
   12774:	ldr	r3, [r5, #36]	; 0x24
   12778:	mov	r1, r7
   1277c:	ldr	r2, [r2, r4, lsl #2]
   12780:	mov	r0, r5
   12784:	str	r2, [sp]
   12788:	mov	r2, r8
   1278c:	ldr	r9, [r3, r4, lsl #2]
   12790:	mov	r3, r6
   12794:	blx	r9
   12798:	add	r4, r4, #1
   1279c:	b	1274c <table_notify@@Base+0x18>

000127a0 <table_column_init@@Base>:
   127a0:	push	{r4, r5, r6, r7, r8, lr}
   127a4:	mov	r4, #12
   127a8:	ldr	r7, [r0]
   127ac:	mov	r0, r2
   127b0:	mul	r4, r4, r1
   127b4:	mov	r6, r2
   127b8:	mov	r8, r3
   127bc:	bl	11c18 <strlen@plt>
   127c0:	add	r5, r7, r4
   127c4:	add	r0, r0, #1
   127c8:	bl	11bf4 <malloc@plt>
   127cc:	cmp	r0, #0
   127d0:	str	r0, [r7, r4]
   127d4:	beq	127e0 <table_column_init@@Base+0x40>
   127d8:	mov	r1, r6
   127dc:	bl	11be8 <strcpy@plt>
   127e0:	ldr	r3, [sp, #24]
   127e4:	str	r8, [r5, #4]
   127e8:	str	r3, [r5, #8]
   127ec:	pop	{r4, r5, r6, r7, r8, pc}

000127f0 <table_column_destroy@@Base>:
   127f0:	mov	r3, #12
   127f4:	ldr	r2, [r0]
   127f8:	mul	r1, r3, r1
   127fc:	ldr	r0, [r2, r1]
   12800:	cmp	r0, #0
   12804:	bxeq	lr
   12808:	b	11bc4 <free@plt>

0001280c <table_get_column_length@@Base>:
   1280c:	ldr	r0, [r0, #4]
   12810:	bx	lr

00012814 <table_get_column@@Base>:
   12814:	push	{r4, r5, r6, r7, r8, lr}
   12818:	mov	r5, r0
   1281c:	ldr	r6, [r0, #4]
   12820:	mov	r7, r1
   12824:	mov	r4, #0
   12828:	mov	r8, #12
   1282c:	cmp	r4, r6
   12830:	blt	12840 <table_get_column@@Base+0x2c>
   12834:	mvneq	r4, #0
   12838:	mov	r0, r4
   1283c:	pop	{r4, r5, r6, r7, r8, pc}
   12840:	mul	r3, r8, r4
   12844:	ldr	r2, [r5]
   12848:	mov	r1, r7
   1284c:	ldr	r0, [r2, r3]
   12850:	bl	11bac <strcmp@plt>
   12854:	cmp	r0, #0
   12858:	beq	12838 <table_get_column@@Base+0x24>
   1285c:	add	r4, r4, #1
   12860:	b	1282c <table_get_column@@Base+0x18>

00012864 <table_get_column_data_type@@Base>:
   12864:	ldr	r2, [r0]
   12868:	mov	r3, #12
   1286c:	mla	r1, r3, r1, r2
   12870:	ldr	r0, [r1, #4]
   12874:	bx	lr

00012878 <table_add_column@@Base>:
   12878:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1287c:	mov	r4, r0
   12880:	ldr	r6, [r0, #8]
   12884:	mov	r8, r1
   12888:	ldr	r0, [r0, #4]
   1288c:	mov	r1, r6
   12890:	mov	r7, r2
   12894:	bl	1445c <table_cell_nullify@@Base+0x218>
   12898:	subs	r5, r1, #0
   1289c:	beq	12904 <table_add_column@@Base+0x8c>
   128a0:	mov	r0, r4
   128a4:	bl	130e4 <table_get_row_length@@Base>
   128a8:	ldr	r6, [r4, #4]
   128ac:	mov	r5, #0
   128b0:	mov	r9, r0
   128b4:	mov	r0, r7
   128b8:	bl	12f44 <table_get_default_compare_function_for_data_type@@Base>
   128bc:	mov	r3, r7
   128c0:	mov	r2, r8
   128c4:	mov	r1, r6
   128c8:	str	r0, [sp]
   128cc:	mov	r0, r4
   128d0:	bl	127a0 <table_column_init@@Base>
   128d4:	cmp	r9, r5
   128d8:	bgt	12964 <table_add_column@@Base+0xec>
   128dc:	mov	r0, r4
   128e0:	mov	r3, #8
   128e4:	ldr	r2, [r4, #4]
   128e8:	mvn	r1, #0
   128ec:	bl	12734 <table_notify@@Base>
   128f0:	ldr	r0, [r4, #4]
   128f4:	add	r3, r0, #1
   128f8:	str	r3, [r4, #4]
   128fc:	add	sp, sp, #12
   12900:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12904:	ldr	r1, [r4, #12]
   12908:	ldr	r0, [r4]
   1290c:	add	r6, r6, r1
   12910:	mov	r1, #12
   12914:	str	r6, [r4, #12]
   12918:	mul	r1, r1, r6
   1291c:	bl	11bdc <realloc@plt>
   12920:	str	r0, [r4]
   12924:	mov	r0, r4
   12928:	bl	130e4 <table_get_row_length@@Base>
   1292c:	mov	r9, r0
   12930:	cmp	r9, r5
   12934:	ble	128a0 <table_add_column@@Base+0x28>
   12938:	mov	r1, r5
   1293c:	mov	r0, r4
   12940:	bl	13288 <table_get_row_ptr@@Base>
   12944:	ldr	r1, [r4, #12]
   12948:	add	r5, r5, #1
   1294c:	lsl	r1, r1, #2
   12950:	mov	r6, r0
   12954:	ldr	r0, [r0]
   12958:	bl	11bdc <realloc@plt>
   1295c:	str	r0, [r6]
   12960:	b	12930 <table_add_column@@Base+0xb8>
   12964:	mov	r1, r5
   12968:	mov	r2, r6
   1296c:	mov	r0, r4
   12970:	bl	141ec <table_cell_init@@Base>
   12974:	add	r5, r5, #1
   12978:	b	128d4 <table_add_column@@Base+0x5c>

0001297c <table_remove_column@@Base>:
   1297c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12980:	mov	r5, r1
   12984:	mov	r4, r0
   12988:	bl	127f0 <table_column_destroy@@Base>
   1298c:	mov	r3, #12
   12990:	ldr	r7, [r4, #4]
   12994:	mul	r3, r3, r5
   12998:	mov	r1, r5
   1299c:	sub	r7, r7, #1
   129a0:	cmp	r1, r7
   129a4:	add	lr, r3, #12
   129a8:	blt	12a38 <table_remove_column@@Base+0xbc>
   129ac:	mov	r0, r4
   129b0:	bl	130e4 <table_get_row_length@@Base>
   129b4:	lsl	r9, r5, #2
   129b8:	mov	r6, #0
   129bc:	mov	r8, r0
   129c0:	cmp	r8, r6
   129c4:	bgt	12a68 <table_remove_column@@Base+0xec>
   129c8:	ldr	r0, [r4, #4]
   129cc:	ldr	r7, [r4, #8]
   129d0:	sub	r0, r0, #1
   129d4:	str	r0, [r4, #4]
   129d8:	mov	r1, r7
   129dc:	bl	1445c <table_cell_nullify@@Base+0x218>
   129e0:	subs	r6, r1, #0
   129e4:	bne	12a1c <table_remove_column@@Base+0xa0>
   129e8:	ldr	r1, [r4, #12]
   129ec:	mov	r3, #12
   129f0:	sub	r1, r1, r7
   129f4:	str	r1, [r4, #12]
   129f8:	ldr	r0, [r4]
   129fc:	mul	r1, r3, r1
   12a00:	bl	11bdc <realloc@plt>
   12a04:	str	r0, [r4]
   12a08:	mov	r0, r4
   12a0c:	bl	130e4 <table_get_row_length@@Base>
   12a10:	mov	r8, r0
   12a14:	cmp	r8, r6
   12a18:	bgt	12ab4 <table_remove_column@@Base+0x138>
   12a1c:	mov	r0, r4
   12a20:	mov	r3, #16
   12a24:	mov	r2, r5
   12a28:	mvn	r1, #0
   12a2c:	bl	12734 <table_notify@@Base>
   12a30:	mov	r0, #0
   12a34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a38:	ldr	ip, [r4]
   12a3c:	add	r1, r1, #1
   12a40:	add	r0, ip, lr
   12a44:	add	r6, ip, r3
   12a48:	ldr	r2, [r0]
   12a4c:	str	r2, [ip, r3]
   12a50:	ldr	r2, [r0, #4]
   12a54:	mov	r3, lr
   12a58:	str	r2, [r6, #4]
   12a5c:	ldr	r2, [r0, #8]
   12a60:	str	r2, [r6, #8]
   12a64:	b	129a0 <table_remove_column@@Base+0x24>
   12a68:	mov	r2, r5
   12a6c:	mov	r1, r6
   12a70:	mov	r0, r4
   12a74:	bl	14200 <table_cell_destroy@@Base>
   12a78:	mov	r1, r6
   12a7c:	mov	r0, r4
   12a80:	bl	13288 <table_get_row_ptr@@Base>
   12a84:	mov	r2, r9
   12a88:	mov	r3, r5
   12a8c:	cmp	r7, r3
   12a90:	add	r1, r2, #4
   12a94:	addle	r6, r6, #1
   12a98:	ble	129c0 <table_remove_column@@Base+0x44>
   12a9c:	ldr	ip, [r0]
   12aa0:	add	r3, r3, #1
   12aa4:	ldr	lr, [ip, r1]
   12aa8:	str	lr, [ip, r2]
   12aac:	mov	r2, r1
   12ab0:	b	12a8c <table_remove_column@@Base+0x110>
   12ab4:	mov	r1, r6
   12ab8:	mov	r0, r4
   12abc:	bl	13288 <table_get_row_ptr@@Base>
   12ac0:	ldr	r1, [r4, #12]
   12ac4:	add	r6, r6, #1
   12ac8:	lsl	r1, r1, #2
   12acc:	mov	r7, r0
   12ad0:	ldr	r0, [r0]
   12ad4:	bl	11bdc <realloc@plt>
   12ad8:	str	r0, [r7]
   12adc:	b	12a14 <table_remove_column@@Base+0x98>

00012ae0 <table_get_column_name@@Base>:
   12ae0:	mov	r3, #12
   12ae4:	ldr	r2, [r0]
   12ae8:	mul	r1, r3, r1
   12aec:	ldr	r0, [r2, r1]
   12af0:	bx	lr

00012af4 <table_get_col_ptr@@Base>:
   12af4:	ldr	r3, [r0]
   12af8:	mov	r0, #12
   12afc:	mla	r0, r0, r1, r3
   12b00:	bx	lr

00012b04 <table_get_column_compare_function@@Base>:
   12b04:	ldr	r2, [r0]
   12b08:	mov	r3, #12
   12b0c:	mla	r1, r3, r1, r2
   12b10:	ldr	r0, [r1, #8]
   12b14:	bx	lr

00012b18 <table_set_column_compare_function@@Base>:
   12b18:	ldr	r0, [r0]
   12b1c:	mov	r3, #12
   12b20:	mla	r1, r3, r1, r0
   12b24:	str	r2, [r1, #8]
   12b28:	bx	lr

00012b2c <table_compare_bool@@Base>:
   12b2c:	cmp	r0, #0
   12b30:	bne	12b40 <table_compare_bool@@Base+0x14>
   12b34:	adds	r0, r1, #0
   12b38:	mvnne	r0, #0
   12b3c:	bx	lr
   12b40:	cmp	r1, #0
   12b44:	beq	12b64 <table_compare_bool@@Base+0x38>
   12b48:	ldrb	r2, [r0]
   12b4c:	ldrb	r3, [r1]
   12b50:	cmp	r2, r3
   12b54:	bgt	12b64 <table_compare_bool@@Base+0x38>
   12b58:	mvnlt	r0, #0
   12b5c:	movge	r0, #0
   12b60:	bx	lr
   12b64:	mov	r0, #1
   12b68:	bx	lr

00012b6c <table_compare_int8@@Base>:
   12b6c:	cmp	r0, #0
   12b70:	bne	12b80 <table_compare_int8@@Base+0x14>
   12b74:	adds	r0, r1, #0
   12b78:	mvnne	r0, #0
   12b7c:	bx	lr
   12b80:	cmp	r1, #0
   12b84:	beq	12ba4 <table_compare_int8@@Base+0x38>
   12b88:	ldrsb	r2, [r0]
   12b8c:	ldrsb	r3, [r1]
   12b90:	cmp	r2, r3
   12b94:	bgt	12ba4 <table_compare_int8@@Base+0x38>
   12b98:	mvnlt	r0, #0
   12b9c:	movge	r0, #0
   12ba0:	bx	lr
   12ba4:	mov	r0, #1
   12ba8:	bx	lr

00012bac <table_compare_int32@@Base>:
   12bac:	cmp	r0, #0
   12bb0:	bne	12bc0 <table_compare_int32@@Base+0x14>
   12bb4:	adds	r0, r1, #0
   12bb8:	mvnne	r0, #0
   12bbc:	bx	lr
   12bc0:	cmp	r1, #0
   12bc4:	beq	12be4 <table_compare_int32@@Base+0x38>
   12bc8:	ldr	r2, [r0]
   12bcc:	ldr	r3, [r1]
   12bd0:	cmp	r2, r3
   12bd4:	bgt	12be4 <table_compare_int32@@Base+0x38>
   12bd8:	mvnlt	r0, #0
   12bdc:	movge	r0, #0
   12be0:	bx	lr
   12be4:	mov	r0, #1
   12be8:	bx	lr

00012bec <table_compare_int@@Base>:
   12bec:	b	12bac <table_compare_int32@@Base>

00012bf0 <table_compare_uint32@@Base>:
   12bf0:	cmp	r0, #0
   12bf4:	bne	12c04 <table_compare_uint32@@Base+0x14>
   12bf8:	adds	r0, r1, #0
   12bfc:	mvnne	r0, #0
   12c00:	bx	lr
   12c04:	cmp	r1, #0
   12c08:	beq	12c28 <table_compare_uint32@@Base+0x38>
   12c0c:	ldr	r2, [r0]
   12c10:	ldr	r3, [r1]
   12c14:	cmp	r2, r3
   12c18:	bhi	12c28 <table_compare_uint32@@Base+0x38>
   12c1c:	mvncc	r0, #0
   12c20:	movcs	r0, #0
   12c24:	bx	lr
   12c28:	mov	r0, #1
   12c2c:	bx	lr

00012c30 <table_compare_uint@@Base>:
   12c30:	b	12bf0 <table_compare_uint32@@Base>

00012c34 <table_compare_uint64@@Base>:
   12c34:	cmp	r0, #0
   12c38:	bne	12c48 <table_compare_uint64@@Base+0x14>
   12c3c:	adds	r0, r1, #0
   12c40:	mvnne	r0, #0
   12c44:	bx	lr
   12c48:	cmp	r1, #0
   12c4c:	beq	12c74 <table_compare_uint64@@Base+0x40>
   12c50:	ldrd	r2, [r1]
   12c54:	push	{r4, r5, lr}
   12c58:	ldrd	r4, [r0]
   12c5c:	cmp	r5, r3
   12c60:	cmpeq	r4, r2
   12c64:	bhi	12c7c <table_compare_uint64@@Base+0x48>
   12c68:	mvncc	r0, #0
   12c6c:	movcs	r0, #0
   12c70:	pop	{r4, r5, pc}
   12c74:	mov	r0, #1
   12c78:	bx	lr
   12c7c:	mov	r0, #1
   12c80:	pop	{r4, r5, pc}

00012c84 <table_compare_short@@Base>:
   12c84:	cmp	r0, #0
   12c88:	bne	12c98 <table_compare_short@@Base+0x14>
   12c8c:	adds	r0, r1, #0
   12c90:	mvnne	r0, #0
   12c94:	bx	lr
   12c98:	cmp	r1, #0
   12c9c:	beq	12cbc <table_compare_short@@Base+0x38>
   12ca0:	ldrsh	r2, [r0]
   12ca4:	ldrsh	r3, [r1]
   12ca8:	cmp	r2, r3
   12cac:	bgt	12cbc <table_compare_short@@Base+0x38>
   12cb0:	mvnlt	r0, #0
   12cb4:	movge	r0, #0
   12cb8:	bx	lr
   12cbc:	mov	r0, #1
   12cc0:	bx	lr

00012cc4 <table_compare_int16@@Base>:
   12cc4:	b	12c84 <table_compare_short@@Base>

00012cc8 <table_compare_ushort@@Base>:
   12cc8:	cmp	r0, #0
   12ccc:	bne	12cdc <table_compare_ushort@@Base+0x14>
   12cd0:	adds	r0, r1, #0
   12cd4:	mvnne	r0, #0
   12cd8:	bx	lr
   12cdc:	cmp	r1, #0
   12ce0:	beq	12d00 <table_compare_ushort@@Base+0x38>
   12ce4:	ldrh	r2, [r0]
   12ce8:	ldrh	r3, [r1]
   12cec:	cmp	r2, r3
   12cf0:	bhi	12d00 <table_compare_ushort@@Base+0x38>
   12cf4:	mvncc	r0, #0
   12cf8:	movcs	r0, #0
   12cfc:	bx	lr
   12d00:	mov	r0, #1
   12d04:	bx	lr

00012d08 <table_compare_uint16@@Base>:
   12d08:	b	12cc8 <table_compare_ushort@@Base>

00012d0c <table_compare_long@@Base>:
   12d0c:	cmp	r0, #0
   12d10:	bne	12d20 <table_compare_long@@Base+0x14>
   12d14:	adds	r0, r1, #0
   12d18:	mvnne	r0, #0
   12d1c:	bx	lr
   12d20:	cmp	r1, #0
   12d24:	beq	12d44 <table_compare_long@@Base+0x38>
   12d28:	ldr	r2, [r0]
   12d2c:	ldr	r3, [r1]
   12d30:	cmp	r2, r3
   12d34:	bgt	12d44 <table_compare_long@@Base+0x38>
   12d38:	mvnlt	r0, #0
   12d3c:	movge	r0, #0
   12d40:	bx	lr
   12d44:	mov	r0, #1
   12d48:	bx	lr

00012d4c <table_compare_llong@@Base>:
   12d4c:	cmp	r0, #0
   12d50:	bne	12d60 <table_compare_llong@@Base+0x14>
   12d54:	adds	r0, r1, #0
   12d58:	mvnne	r0, #0
   12d5c:	bx	lr
   12d60:	cmp	r1, #0
   12d64:	beq	12d94 <table_compare_llong@@Base+0x48>
   12d68:	ldrd	r2, [r1]
   12d6c:	push	{r4, r5, lr}
   12d70:	ldrd	r4, [r0]
   12d74:	cmp	r2, r4
   12d78:	sbcs	r1, r3, r5
   12d7c:	blt	12d9c <table_compare_llong@@Base+0x50>
   12d80:	cmp	r4, r2
   12d84:	sbcs	r3, r5, r3
   12d88:	mvnlt	r0, #0
   12d8c:	movge	r0, #0
   12d90:	pop	{r4, r5, pc}
   12d94:	mov	r0, #1
   12d98:	bx	lr
   12d9c:	mov	r0, #1
   12da0:	pop	{r4, r5, pc}

00012da4 <table_compare_int64@@Base>:
   12da4:	b	12d4c <table_compare_llong@@Base>

00012da8 <table_compare_ullong@@Base>:
   12da8:	cmp	r0, #0
   12dac:	bne	12dbc <table_compare_ullong@@Base+0x14>
   12db0:	adds	r0, r1, #0
   12db4:	mvnne	r0, #0
   12db8:	bx	lr
   12dbc:	cmp	r1, #0
   12dc0:	beq	12de0 <table_compare_ullong@@Base+0x38>
   12dc4:	ldr	r2, [r0]
   12dc8:	ldr	r3, [r1]
   12dcc:	cmp	r2, r3
   12dd0:	bhi	12de0 <table_compare_ullong@@Base+0x38>
   12dd4:	mvncc	r0, #0
   12dd8:	movcs	r0, #0
   12ddc:	bx	lr
   12de0:	mov	r0, #1
   12de4:	bx	lr

00012de8 <table_compare_ulong@@Base>:
   12de8:	b	12da8 <table_compare_ullong@@Base>

00012dec <table_compare_float@@Base>:
   12dec:	cmp	r0, #0
   12df0:	bne	12e00 <table_compare_float@@Base+0x14>
   12df4:	adds	r0, r1, #0
   12df8:	mvnne	r0, #0
   12dfc:	bx	lr
   12e00:	cmp	r1, #0
   12e04:	beq	12e28 <table_compare_float@@Base+0x3c>
   12e08:	vldr	s14, [r0]
   12e0c:	vldr	s15, [r1]
   12e10:	vcmpe.f32	s14, s15
   12e14:	vmrs	APSR_nzcv, fpscr
   12e18:	bgt	12e28 <table_compare_float@@Base+0x3c>
   12e1c:	mvnmi	r0, #0
   12e20:	movpl	r0, #0
   12e24:	bx	lr
   12e28:	mov	r0, #1
   12e2c:	bx	lr

00012e30 <table_compare_double@@Base>:
   12e30:	cmp	r0, #0
   12e34:	bne	12e44 <table_compare_double@@Base+0x14>
   12e38:	adds	r0, r1, #0
   12e3c:	mvnne	r0, #0
   12e40:	bx	lr
   12e44:	cmp	r1, #0
   12e48:	beq	12e6c <table_compare_double@@Base+0x3c>
   12e4c:	vldr	d6, [r0]
   12e50:	vldr	d7, [r1]
   12e54:	vcmpe.f64	d6, d7
   12e58:	vmrs	APSR_nzcv, fpscr
   12e5c:	bgt	12e6c <table_compare_double@@Base+0x3c>
   12e60:	mvnmi	r0, #0
   12e64:	movpl	r0, #0
   12e68:	bx	lr
   12e6c:	mov	r0, #1
   12e70:	bx	lr

00012e74 <table_compare_ldouble@@Base>:
   12e74:	cmp	r0, #0
   12e78:	bne	12e88 <table_compare_ldouble@@Base+0x14>
   12e7c:	adds	r0, r1, #0
   12e80:	mvnne	r0, #0
   12e84:	bx	lr
   12e88:	cmp	r1, #0
   12e8c:	beq	12eb0 <table_compare_ldouble@@Base+0x3c>
   12e90:	vldr	d6, [r0]
   12e94:	vldr	d7, [r1]
   12e98:	vcmpe.f64	d6, d7
   12e9c:	vmrs	APSR_nzcv, fpscr
   12ea0:	bgt	12eb0 <table_compare_ldouble@@Base+0x3c>
   12ea4:	mvnmi	r0, #0
   12ea8:	movpl	r0, #0
   12eac:	bx	lr
   12eb0:	mov	r0, #1
   12eb4:	bx	lr

00012eb8 <table_compare_uchar@@Base>:
   12eb8:	cmp	r0, #0
   12ebc:	bne	12ecc <table_compare_uchar@@Base+0x14>
   12ec0:	adds	r0, r1, #0
   12ec4:	mvnne	r0, #0
   12ec8:	bx	lr
   12ecc:	cmp	r1, #0
   12ed0:	beq	12ef0 <table_compare_uchar@@Base+0x38>
   12ed4:	ldrb	r2, [r0]
   12ed8:	ldrb	r3, [r1]
   12edc:	cmp	r2, r3
   12ee0:	bhi	12ef0 <table_compare_uchar@@Base+0x38>
   12ee4:	mvncc	r0, #0
   12ee8:	movcs	r0, #0
   12eec:	bx	lr
   12ef0:	mov	r0, #1
   12ef4:	bx	lr

00012ef8 <table_compare_char@@Base>:
   12ef8:	b	12eb8 <table_compare_uchar@@Base>

00012efc <table_compare_uint8@@Base>:
   12efc:	b	12eb8 <table_compare_uchar@@Base>

00012f00 <table_compare_ptr@@Base>:
   12f00:	cmp	r0, r1
   12f04:	bhi	12f14 <table_compare_ptr@@Base+0x14>
   12f08:	mvncc	r0, #0
   12f0c:	movcs	r0, #0
   12f10:	bx	lr
   12f14:	mov	r0, #1
   12f18:	bx	lr

00012f1c <table_compare_string@@Base>:
   12f1c:	cmp	r0, #0
   12f20:	bne	12f30 <table_compare_string@@Base+0x14>
   12f24:	adds	r0, r1, #0
   12f28:	mvnne	r0, #0
   12f2c:	bx	lr
   12f30:	cmp	r1, #0
   12f34:	beq	12f3c <table_compare_string@@Base+0x20>
   12f38:	b	11bac <strcmp@plt>
   12f3c:	mov	r0, #1
   12f40:	bx	lr

00012f44 <table_get_default_compare_function_for_data_type@@Base>:
   12f44:	cmp	r0, #23
   12f48:	ldrls	r3, [pc, #8]	; 12f58 <table_get_default_compare_function_for_data_type@@Base+0x14>
   12f4c:	ldrls	r0, [r3, r0, lsl #2]
   12f50:	movhi	r0, #0
   12f54:	bx	lr
   12f58:	andeq	r4, r1, r4, lsr #11

00012f5c <table_get@@Base>:
   12f5c:	push	{r4, lr}
   12f60:	bl	141d4 <table_get_cell_ptr@@Base>
   12f64:	ldr	r0, [r0]
   12f68:	pop	{r4, pc}

00012f6c <table_get_bool@@Base>:
   12f6c:	push	{r4, lr}
   12f70:	bl	12f5c <table_get@@Base>
   12f74:	ldrb	r0, [r0]
   12f78:	pop	{r4, pc}

00012f7c <table_get_int8@@Base>:
   12f7c:	push	{r4, lr}
   12f80:	bl	12f5c <table_get@@Base>
   12f84:	ldrsb	r0, [r0]
   12f88:	pop	{r4, pc}

00012f8c <table_get_int32@@Base>:
   12f8c:	push	{r4, lr}
   12f90:	bl	12f5c <table_get@@Base>
   12f94:	ldr	r0, [r0]
   12f98:	pop	{r4, pc}

00012f9c <table_get_int@@Base>:
   12f9c:	b	12f8c <table_get_int32@@Base>

00012fa0 <table_get_uint32@@Base>:
   12fa0:	push	{r4, lr}
   12fa4:	bl	12f5c <table_get@@Base>
   12fa8:	ldr	r0, [r0]
   12fac:	pop	{r4, pc}

00012fb0 <table_get_uint@@Base>:
   12fb0:	b	12fa0 <table_get_uint32@@Base>

00012fb4 <table_get_short@@Base>:
   12fb4:	push	{r4, lr}
   12fb8:	bl	12f5c <table_get@@Base>
   12fbc:	ldrsh	r0, [r0]
   12fc0:	pop	{r4, pc}

00012fc4 <table_get_int16@@Base>:
   12fc4:	b	12fb4 <table_get_short@@Base>

00012fc8 <table_get_ushort@@Base>:
   12fc8:	push	{r4, lr}
   12fcc:	bl	12f5c <table_get@@Base>
   12fd0:	ldrh	r0, [r0]
   12fd4:	pop	{r4, pc}

00012fd8 <table_get_uint16@@Base>:
   12fd8:	b	12fc8 <table_get_ushort@@Base>

00012fdc <table_get_long@@Base>:
   12fdc:	push	{r4, lr}
   12fe0:	bl	12f5c <table_get@@Base>
   12fe4:	ldr	r0, [r0]
   12fe8:	pop	{r4, pc}

00012fec <table_get_ulong@@Base>:
   12fec:	push	{r4, lr}
   12ff0:	bl	12f5c <table_get@@Base>
   12ff4:	ldr	r0, [r0]
   12ff8:	pop	{r4, pc}

00012ffc <table_get_llong@@Base>:
   12ffc:	push	{r4, lr}
   13000:	bl	12f5c <table_get@@Base>
   13004:	ldrd	r0, [r0]
   13008:	pop	{r4, pc}

0001300c <table_get_int64@@Base>:
   1300c:	b	12ffc <table_get_llong@@Base>

00013010 <table_get_ullong@@Base>:
   13010:	push	{r4, lr}
   13014:	bl	12f5c <table_get@@Base>
   13018:	ldrd	r0, [r0]
   1301c:	pop	{r4, pc}

00013020 <table_get_uint64@@Base>:
   13020:	b	13010 <table_get_ullong@@Base>

00013024 <table_get_float@@Base>:
   13024:	push	{r4, lr}
   13028:	bl	12f5c <table_get@@Base>
   1302c:	vldr	s0, [r0]
   13030:	pop	{r4, pc}

00013034 <table_get_double@@Base>:
   13034:	push	{r4, lr}
   13038:	bl	12f5c <table_get@@Base>
   1303c:	vldr	d0, [r0]
   13040:	pop	{r4, pc}

00013044 <table_get_ldouble@@Base>:
   13044:	push	{r4, lr}
   13048:	bl	12f5c <table_get@@Base>
   1304c:	vldr	d0, [r0]
   13050:	pop	{r4, pc}

00013054 <table_get_uchar@@Base>:
   13054:	push	{r4, lr}
   13058:	bl	12f5c <table_get@@Base>
   1305c:	ldrb	r0, [r0]
   13060:	pop	{r4, pc}

00013064 <table_get_char@@Base>:
   13064:	b	13054 <table_get_uchar@@Base>

00013068 <table_get_uint8@@Base>:
   13068:	b	13054 <table_get_uchar@@Base>

0001306c <table_get_string@@Base>:
   1306c:	b	12f5c <table_get@@Base>

00013070 <table_get_ptr@@Base>:
   13070:	b	12f5c <table_get@@Base>

00013074 <table_row_init@@Base>:
   13074:	push	{r4, r5, r6, lr}
   13078:	mov	r5, r1
   1307c:	ldr	r4, [r0, #16]
   13080:	ldr	r0, [r0, #12]
   13084:	lsl	r0, r0, #2
   13088:	bl	11bf4 <malloc@plt>
   1308c:	str	r0, [r4, r5, lsl #2]
   13090:	pop	{r4, r5, r6, pc}

00013094 <table_row_destroy@@Base>:
   13094:	push	{r4, r5, r6, r7, r8, lr}
   13098:	mov	r6, r0
   1309c:	mov	r5, r1
   130a0:	bl	1280c <table_get_column_length@@Base>
   130a4:	ldr	r7, [r6, #16]
   130a8:	mov	r4, #0
   130ac:	mov	r8, r0
   130b0:	cmp	r4, r8
   130b4:	blt	130cc <table_row_destroy@@Base+0x38>
   130b8:	ldr	r0, [r7, r5, lsl #2]
   130bc:	cmp	r0, #0
   130c0:	popeq	{r4, r5, r6, r7, r8, pc}
   130c4:	pop	{r4, r5, r6, r7, r8, lr}
   130c8:	b	11bc4 <free@plt>
   130cc:	mov	r2, r4
   130d0:	mov	r1, r5
   130d4:	mov	r0, r6
   130d8:	bl	14200 <table_cell_destroy@@Base>
   130dc:	add	r4, r4, #1
   130e0:	b	130b0 <table_row_destroy@@Base+0x1c>

000130e4 <table_get_row_length@@Base>:
   130e4:	ldr	r0, [r0, #20]
   130e8:	bx	lr

000130ec <table_add_row@@Base>:
   130ec:	push	{r4, r5, r6, r7, r8, lr}
   130f0:	mov	r4, r0
   130f4:	ldr	r5, [r0, #24]
   130f8:	ldr	r0, [r0, #20]
   130fc:	mov	r1, r5
   13100:	bl	1445c <table_cell_nullify@@Base+0x218>
   13104:	cmp	r1, #0
   13108:	bne	13128 <table_add_row@@Base+0x3c>
   1310c:	ldr	r1, [r4, #28]
   13110:	ldr	r0, [r4, #16]
   13114:	add	r1, r5, r1
   13118:	str	r1, [r4, #28]
   1311c:	lsl	r1, r1, #2
   13120:	bl	11bdc <realloc@plt>
   13124:	str	r0, [r4, #16]
   13128:	mov	r0, r4
   1312c:	ldr	r6, [r4, #20]
   13130:	bl	1280c <table_get_column_length@@Base>
   13134:	mov	r1, r6
   13138:	mov	r5, #0
   1313c:	mov	r7, r0
   13140:	mov	r0, r4
   13144:	bl	13074 <table_row_init@@Base>
   13148:	cmp	r7, r5
   1314c:	bgt	13174 <table_add_row@@Base+0x88>
   13150:	mov	r0, r4
   13154:	mov	r3, #2
   13158:	mvn	r2, #0
   1315c:	ldr	r1, [r4, #20]
   13160:	bl	12734 <table_notify@@Base>
   13164:	ldr	r0, [r4, #20]
   13168:	add	r3, r0, #1
   1316c:	str	r3, [r4, #20]
   13170:	pop	{r4, r5, r6, r7, r8, pc}
   13174:	mov	r2, r5
   13178:	mov	r1, r6
   1317c:	mov	r0, r4
   13180:	bl	141ec <table_cell_init@@Base>
   13184:	add	r5, r5, #1
   13188:	b	13148 <table_add_row@@Base+0x5c>

0001318c <table_remove_row@@Base>:
   1318c:	push	{r4, r5, r6, r7, r8, lr}
   13190:	mov	r4, r0
   13194:	mov	r5, r1
   13198:	ldr	r7, [r0, #20]
   1319c:	bl	1280c <table_get_column_length@@Base>
   131a0:	mov	r6, #0
   131a4:	mov	r8, r0
   131a8:	cmp	r8, r6
   131ac:	bgt	13234 <table_remove_row@@Base+0xa8>
   131b0:	ldr	r3, [r4, #16]
   131b4:	lsl	r6, r5, #2
   131b8:	ldr	r0, [r3, r5, lsl #2]
   131bc:	cmp	r0, #0
   131c0:	beq	131c8 <table_remove_row@@Base+0x3c>
   131c4:	bl	11bc4 <free@plt>
   131c8:	mov	r3, r5
   131cc:	sub	r7, r7, #1
   131d0:	cmp	r3, r7
   131d4:	add	r2, r6, #4
   131d8:	blt	13270 <table_remove_row@@Base+0xe4>
   131dc:	ldr	r0, [r4, #20]
   131e0:	ldr	r6, [r4, #24]
   131e4:	sub	r0, r0, #1
   131e8:	str	r0, [r4, #20]
   131ec:	mov	r1, r6
   131f0:	bl	1445c <table_cell_nullify@@Base+0x218>
   131f4:	cmp	r1, #0
   131f8:	bne	13218 <table_remove_row@@Base+0x8c>
   131fc:	ldr	r1, [r4, #28]
   13200:	ldr	r0, [r4, #16]
   13204:	sub	r1, r1, r6
   13208:	str	r1, [r4, #28]
   1320c:	lsl	r1, r1, #2
   13210:	bl	11bdc <realloc@plt>
   13214:	str	r0, [r4, #16]
   13218:	mov	r0, r4
   1321c:	mov	r3, #4
   13220:	mvn	r2, #0
   13224:	mov	r1, r5
   13228:	bl	12734 <table_notify@@Base>
   1322c:	mov	r0, #0
   13230:	pop	{r4, r5, r6, r7, r8, pc}
   13234:	mov	r1, r6
   13238:	mov	r0, r4
   1323c:	bl	12864 <table_get_column_data_type@@Base>
   13240:	cmp	r0, #23
   13244:	beq	13268 <table_remove_row@@Base+0xdc>
   13248:	mov	r2, r6
   1324c:	mov	r1, r5
   13250:	mov	r0, r4
   13254:	bl	141d4 <table_get_cell_ptr@@Base>
   13258:	ldr	r0, [r0]
   1325c:	cmp	r0, #0
   13260:	beq	13268 <table_remove_row@@Base+0xdc>
   13264:	bl	11bc4 <free@plt>
   13268:	add	r6, r6, #1
   1326c:	b	131a8 <table_remove_row@@Base+0x1c>
   13270:	ldr	r1, [r4, #16]
   13274:	add	r3, r3, #1
   13278:	ldr	r0, [r1, r2]
   1327c:	str	r0, [r1, r6]
   13280:	mov	r6, r2
   13284:	b	131d0 <table_remove_row@@Base+0x44>

00013288 <table_get_row_ptr@@Base>:
   13288:	ldr	r0, [r0, #16]
   1328c:	add	r0, r0, r1, lsl #2
   13290:	bx	lr

00013294 <table_set_row_ptr@@Base>:
   13294:	ldr	r3, [r0, #16]
   13298:	ldr	r2, [r2]
   1329c:	str	r2, [r3, r1, lsl #2]
   132a0:	bx	lr

000132a4 <table_set@@Base>:
   132a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   132a8:	mov	r6, r0
   132ac:	mov	r8, r1
   132b0:	mov	r7, r2
   132b4:	ldr	r9, [sp, #32]
   132b8:	mov	r5, r3
   132bc:	bl	141d4 <table_get_cell_ptr@@Base>
   132c0:	mov	r1, r7
   132c4:	mov	r4, r0
   132c8:	mov	r0, r6
   132cc:	bl	12af4 <table_get_col_ptr@@Base>
   132d0:	cmp	r9, #23
   132d4:	ldrls	pc, [pc, r9, lsl #2]
   132d8:	b	133b0 <table_set@@Base+0x10c>
   132dc:	andeq	r3, r1, r8, ror r3
   132e0:			; <UNDEFINED> instruction: 0x000133b8
   132e4:	andeq	r3, r1, r4, asr #7
   132e8:	ldrdeq	r3, [r1], -r0
   132ec:	ldrdeq	r3, [r1], -ip
   132f0:	andeq	r3, r1, r0, lsr r4
   132f4:	andeq	r3, r1, ip, lsr r4
   132f8:	andeq	r3, r1, r8, asr #8
   132fc:	andeq	r3, r1, r4, asr r4
   13300:	muleq	r1, r4, r4
   13304:			; <UNDEFINED> instruction: 0x000134b4
   13308:	andeq	r3, r1, r0, asr #9
   1330c:	andeq	r3, r1, ip, asr #9
   13310:	ldrdeq	r3, [r1], -r8
   13314:	andeq	r3, r1, r4, ror #9
   13318:	strdeq	r3, [r1], -r0
   1331c:	strdeq	r3, [r1], -ip
   13320:	andeq	r3, r1, r8, lsl #10
   13324:	andeq	r3, r1, r4, lsl r5
   13328:	andeq	r3, r1, r8, asr r5
   1332c:	andeq	r3, r1, r4, ror #10
   13330:	andeq	r3, r1, r0, lsr #10
   13334:	andeq	r3, r1, ip, lsr r3
   13338:	andeq	r3, r1, r0, ror r5
   1333c:	ldr	r3, [r0, #4]
   13340:	cmp	r3, #22
   13344:	bne	133b0 <table_set@@Base+0x10c>
   13348:	ldr	r3, [r4]
   1334c:	cmp	r3, #0
   13350:	bne	13360 <table_set@@Base+0xbc>
   13354:	mov	r0, #1
   13358:	bl	11bf4 <malloc@plt>
   1335c:	str	r0, [r4]
   13360:	ldr	r3, [r4]
   13364:	cmp	r3, #0
   13368:	ldrbne	r2, [r5]
   1336c:	strbne	r2, [r3]
   13370:	bne	13414 <table_set@@Base+0x170>
   13374:	b	133b0 <table_set@@Base+0x10c>
   13378:	ldr	r3, [r0, #4]
   1337c:	cmp	r3, #0
   13380:	bne	133b0 <table_set@@Base+0x10c>
   13384:	ldr	r3, [r4]
   13388:	cmp	r3, #0
   1338c:	bne	1339c <table_set@@Base+0xf8>
   13390:	mov	r0, #4
   13394:	bl	11bf4 <malloc@plt>
   13398:	str	r0, [r4]
   1339c:	ldr	r3, [r4]
   133a0:	cmp	r3, #0
   133a4:	ldrne	r2, [r5]
   133a8:	strne	r2, [r3]
   133ac:	bne	13414 <table_set@@Base+0x170>
   133b0:	mvn	r0, #0
   133b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   133b8:	ldr	r3, [r0, #4]
   133bc:	cmp	r3, #1
   133c0:	b	13380 <table_set@@Base+0xdc>
   133c4:	ldr	r3, [r0, #4]
   133c8:	cmp	r3, #2
   133cc:	b	13344 <table_set@@Base+0xa0>
   133d0:	ldr	r3, [r0, #4]
   133d4:	cmp	r3, #3
   133d8:	b	13344 <table_set@@Base+0xa0>
   133dc:	ldr	r3, [r0, #4]
   133e0:	cmp	r3, #4
   133e4:	bne	133b0 <table_set@@Base+0x10c>
   133e8:	ldr	r3, [r4]
   133ec:	cmp	r3, #0
   133f0:	bne	13400 <table_set@@Base+0x15c>
   133f4:	mov	r0, #2
   133f8:	bl	11bf4 <malloc@plt>
   133fc:	str	r0, [r4]
   13400:	ldr	r3, [r4]
   13404:	cmp	r3, #0
   13408:	beq	133b0 <table_set@@Base+0x10c>
   1340c:	ldrh	r2, [r5]
   13410:	strh	r2, [r3]
   13414:	mov	r0, r6
   13418:	mov	r3, #1
   1341c:	mov	r2, r7
   13420:	mov	r1, r8
   13424:	bl	12734 <table_notify@@Base>
   13428:	mov	r0, #0
   1342c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13430:	ldr	r3, [r0, #4]
   13434:	cmp	r3, #5
   13438:	b	133e4 <table_set@@Base+0x140>
   1343c:	ldr	r3, [r0, #4]
   13440:	cmp	r3, #6
   13444:	b	13380 <table_set@@Base+0xdc>
   13448:	ldr	r3, [r0, #4]
   1344c:	cmp	r3, #7
   13450:	b	13380 <table_set@@Base+0xdc>
   13454:	ldr	r0, [r0, #4]
   13458:	cmp	r0, #8
   1345c:	bne	133b0 <table_set@@Base+0x10c>
   13460:	ldr	r3, [r4]
   13464:	cmp	r3, #0
   13468:	bne	13474 <table_set@@Base+0x1d0>
   1346c:	bl	11bf4 <malloc@plt>
   13470:	str	r0, [r4]
   13474:	ldr	r3, [r4]
   13478:	cmp	r3, #0
   1347c:	beq	133b0 <table_set@@Base+0x10c>
   13480:	ldr	r2, [r5]
   13484:	str	r2, [r3]
   13488:	ldr	r2, [r5, #4]
   1348c:	str	r2, [r3, #4]
   13490:	b	13414 <table_set@@Base+0x170>
   13494:	ldr	r3, [r0, #4]
   13498:	cmp	r3, #9
   1349c:	bne	133b0 <table_set@@Base+0x10c>
   134a0:	ldr	r3, [r4]
   134a4:	cmp	r3, #0
   134a8:	bne	13474 <table_set@@Base+0x1d0>
   134ac:	mov	r0, #8
   134b0:	b	1346c <table_set@@Base+0x1c8>
   134b4:	ldr	r3, [r0, #4]
   134b8:	cmp	r3, #10
   134bc:	b	133e4 <table_set@@Base+0x140>
   134c0:	ldr	r3, [r0, #4]
   134c4:	cmp	r3, #11
   134c8:	b	133e4 <table_set@@Base+0x140>
   134cc:	ldr	r3, [r0, #4]
   134d0:	cmp	r3, #12
   134d4:	b	13380 <table_set@@Base+0xdc>
   134d8:	ldr	r3, [r0, #4]
   134dc:	cmp	r3, #13
   134e0:	b	13380 <table_set@@Base+0xdc>
   134e4:	ldr	r3, [r0, #4]
   134e8:	cmp	r3, #14
   134ec:	b	1349c <table_set@@Base+0x1f8>
   134f0:	ldr	r3, [r0, #4]
   134f4:	cmp	r3, #15
   134f8:	b	1349c <table_set@@Base+0x1f8>
   134fc:	ldr	r3, [r0, #4]
   13500:	cmp	r3, #16
   13504:	b	13380 <table_set@@Base+0xdc>
   13508:	ldr	r3, [r0, #4]
   1350c:	cmp	r3, #17
   13510:	b	1349c <table_set@@Base+0x1f8>
   13514:	ldr	r3, [r0, #4]
   13518:	cmp	r3, #18
   1351c:	b	1349c <table_set@@Base+0x1f8>
   13520:	ldr	r3, [r0, #4]
   13524:	cmp	r3, #21
   13528:	bne	133b0 <table_set@@Base+0x10c>
   1352c:	mov	r0, r5
   13530:	bl	11c18 <strlen@plt>
   13534:	add	r1, r0, #1
   13538:	ldr	r0, [r4]
   1353c:	bl	11bdc <realloc@plt>
   13540:	cmp	r0, #0
   13544:	str	r0, [r4]
   13548:	beq	133b0 <table_set@@Base+0x10c>
   1354c:	mov	r1, r5
   13550:	bl	11be8 <strcpy@plt>
   13554:	b	13414 <table_set@@Base+0x170>
   13558:	ldr	r3, [r0, #4]
   1355c:	cmp	r3, #19
   13560:	b	13344 <table_set@@Base+0xa0>
   13564:	ldr	r3, [r0, #4]
   13568:	cmp	r3, #20
   1356c:	b	13344 <table_set@@Base+0xa0>
   13570:	ldr	r3, [r0, #4]
   13574:	cmp	r3, #23
   13578:	streq	r5, [r4]
   1357c:	beq	13414 <table_set@@Base+0x170>
   13580:	b	133b0 <table_set@@Base+0x10c>

00013584 <table_set_bool@@Base>:
   13584:	push	{r0, r1, r2, r3, r4, lr}
   13588:	add	ip, sp, #16
   1358c:	strb	r3, [ip, #-1]!
   13590:	mov	r3, #22
   13594:	str	r3, [sp]
   13598:	mov	r3, ip
   1359c:	bl	132a4 <table_set@@Base>
   135a0:	add	sp, sp, #20
   135a4:	pop	{pc}		; (ldr pc, [sp], #4)

000135a8 <table_set_int@@Base>:
   135a8:	push	{r0, r1, r2, r3, r4, lr}
   135ac:	add	ip, sp, #16
   135b0:	str	r3, [ip, #-4]!
   135b4:	mov	r3, #0
   135b8:	str	r3, [sp]
   135bc:	mov	r3, ip
   135c0:	bl	132a4 <table_set@@Base>
   135c4:	add	sp, sp, #20
   135c8:	pop	{pc}		; (ldr pc, [sp], #4)

000135cc <table_set_uint@@Base>:
   135cc:	push	{r0, r1, r2, r3, r4, lr}
   135d0:	add	ip, sp, #16
   135d4:	str	r3, [ip, #-4]!
   135d8:	mov	r3, #1
   135dc:	str	r3, [sp]
   135e0:	mov	r3, ip
   135e4:	bl	132a4 <table_set@@Base>
   135e8:	add	sp, sp, #20
   135ec:	pop	{pc}		; (ldr pc, [sp], #4)

000135f0 <table_set_int8@@Base>:
   135f0:	push	{r0, r1, r2, r3, r4, lr}
   135f4:	add	ip, sp, #16
   135f8:	strb	r3, [ip, #-1]!
   135fc:	mov	r3, #2
   13600:	str	r3, [sp]
   13604:	mov	r3, ip
   13608:	bl	132a4 <table_set@@Base>
   1360c:	add	sp, sp, #20
   13610:	pop	{pc}		; (ldr pc, [sp], #4)

00013614 <table_set_uint8@@Base>:
   13614:	push	{r0, r1, r2, r3, r4, lr}
   13618:	add	ip, sp, #16
   1361c:	strb	r3, [ip, #-1]!
   13620:	mov	r3, #3
   13624:	str	r3, [sp]
   13628:	mov	r3, ip
   1362c:	bl	132a4 <table_set@@Base>
   13630:	add	sp, sp, #20
   13634:	pop	{pc}		; (ldr pc, [sp], #4)

00013638 <table_set_int16@@Base>:
   13638:	push	{r0, r1, r2, r3, r4, lr}
   1363c:	add	ip, sp, #16
   13640:	strh	r3, [ip, #-2]!
   13644:	mov	r3, #4
   13648:	str	r3, [sp]
   1364c:	mov	r3, ip
   13650:	bl	132a4 <table_set@@Base>
   13654:	add	sp, sp, #20
   13658:	pop	{pc}		; (ldr pc, [sp], #4)

0001365c <table_set_uint16@@Base>:
   1365c:	push	{r0, r1, r2, r3, r4, lr}
   13660:	add	ip, sp, #16
   13664:	strh	r3, [ip, #-2]!
   13668:	mov	r3, #5
   1366c:	str	r3, [sp]
   13670:	mov	r3, ip
   13674:	bl	132a4 <table_set@@Base>
   13678:	add	sp, sp, #20
   1367c:	pop	{pc}		; (ldr pc, [sp], #4)

00013680 <table_set_int32@@Base>:
   13680:	push	{r0, r1, r2, r3, r4, lr}
   13684:	add	ip, sp, #16
   13688:	str	r3, [ip, #-4]!
   1368c:	mov	r3, #6
   13690:	str	r3, [sp]
   13694:	mov	r3, ip
   13698:	bl	132a4 <table_set@@Base>
   1369c:	add	sp, sp, #20
   136a0:	pop	{pc}		; (ldr pc, [sp], #4)

000136a4 <table_set_uint32@@Base>:
   136a4:	push	{r0, r1, r2, r3, r4, lr}
   136a8:	add	ip, sp, #16
   136ac:	str	r3, [ip, #-4]!
   136b0:	mov	r3, #7
   136b4:	str	r3, [sp]
   136b8:	mov	r3, ip
   136bc:	bl	132a4 <table_set@@Base>
   136c0:	add	sp, sp, #20
   136c4:	pop	{pc}		; (ldr pc, [sp], #4)

000136c8 <table_set_int64@@Base>:
   136c8:	mov	r3, #8
   136cc:	push	{r0, r1, r2, lr}
   136d0:	str	r3, [sp]
   136d4:	add	r3, sp, #16
   136d8:	bl	132a4 <table_set@@Base>
   136dc:	add	sp, sp, #12
   136e0:	pop	{pc}		; (ldr pc, [sp], #4)

000136e4 <table_set_uint64@@Base>:
   136e4:	mov	r3, #9
   136e8:	push	{r0, r1, r2, lr}
   136ec:	str	r3, [sp]
   136f0:	add	r3, sp, #16
   136f4:	bl	132a4 <table_set@@Base>
   136f8:	add	sp, sp, #12
   136fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013700 <table_set_short@@Base>:
   13700:	push	{r0, r1, r2, r3, r4, lr}
   13704:	add	ip, sp, #16
   13708:	strh	r3, [ip, #-2]!
   1370c:	mov	r3, #10
   13710:	str	r3, [sp]
   13714:	mov	r3, ip
   13718:	bl	132a4 <table_set@@Base>
   1371c:	add	sp, sp, #20
   13720:	pop	{pc}		; (ldr pc, [sp], #4)

00013724 <table_set_ushort@@Base>:
   13724:	push	{r0, r1, r2, r3, r4, lr}
   13728:	add	ip, sp, #16
   1372c:	strh	r3, [ip, #-2]!
   13730:	mov	r3, #11
   13734:	str	r3, [sp]
   13738:	mov	r3, ip
   1373c:	bl	132a4 <table_set@@Base>
   13740:	add	sp, sp, #20
   13744:	pop	{pc}		; (ldr pc, [sp], #4)

00013748 <table_set_long@@Base>:
   13748:	push	{r0, r1, r2, r3, r4, lr}
   1374c:	add	ip, sp, #16
   13750:	str	r3, [ip, #-4]!
   13754:	mov	r3, #12
   13758:	str	r3, [sp]
   1375c:	mov	r3, ip
   13760:	bl	132a4 <table_set@@Base>
   13764:	add	sp, sp, #20
   13768:	pop	{pc}		; (ldr pc, [sp], #4)

0001376c <table_set_ulong@@Base>:
   1376c:	push	{r0, r1, r2, r3, r4, lr}
   13770:	add	ip, sp, #16
   13774:	str	r3, [ip, #-4]!
   13778:	mov	r3, #13
   1377c:	str	r3, [sp]
   13780:	mov	r3, ip
   13784:	bl	132a4 <table_set@@Base>
   13788:	add	sp, sp, #20
   1378c:	pop	{pc}		; (ldr pc, [sp], #4)

00013790 <table_set_llong@@Base>:
   13790:	mov	r3, #14
   13794:	push	{r0, r1, r2, lr}
   13798:	str	r3, [sp]
   1379c:	add	r3, sp, #16
   137a0:	bl	132a4 <table_set@@Base>
   137a4:	add	sp, sp, #12
   137a8:	pop	{pc}		; (ldr pc, [sp], #4)

000137ac <table_set_ullong@@Base>:
   137ac:	mov	r3, #15
   137b0:	push	{r0, r1, r2, lr}
   137b4:	str	r3, [sp]
   137b8:	add	r3, sp, #16
   137bc:	bl	132a4 <table_set@@Base>
   137c0:	add	sp, sp, #12
   137c4:	pop	{pc}		; (ldr pc, [sp], #4)

000137c8 <table_set_float@@Base>:
   137c8:	push	{r0, r1, r2, r3, r4, lr}
   137cc:	add	r3, sp, #16
   137d0:	mov	ip, #16
   137d4:	vstmdb	r3!, {s0}
   137d8:	str	ip, [sp]
   137dc:	bl	132a4 <table_set@@Base>
   137e0:	add	sp, sp, #20
   137e4:	pop	{pc}		; (ldr pc, [sp], #4)

000137e8 <table_set_double@@Base>:
   137e8:	push	{r0, r1, r2, r3, r4, lr}
   137ec:	add	r3, sp, #16
   137f0:	mov	ip, #17
   137f4:	vstmdb	r3!, {d0}
   137f8:	str	ip, [sp]
   137fc:	bl	132a4 <table_set@@Base>
   13800:	add	sp, sp, #20
   13804:	pop	{pc}		; (ldr pc, [sp], #4)

00013808 <table_set_ldouble@@Base>:
   13808:	push	{r0, r1, r2, r3, r4, lr}
   1380c:	add	r3, sp, #16
   13810:	mov	ip, #18
   13814:	vstmdb	r3!, {d0}
   13818:	str	ip, [sp]
   1381c:	bl	132a4 <table_set@@Base>
   13820:	add	sp, sp, #20
   13824:	pop	{pc}		; (ldr pc, [sp], #4)

00013828 <table_set_string@@Base>:
   13828:	mov	ip, #21
   1382c:	push	{r0, r1, r2, lr}
   13830:	str	ip, [sp]
   13834:	bl	132a4 <table_set@@Base>
   13838:	add	sp, sp, #12
   1383c:	pop	{pc}		; (ldr pc, [sp], #4)

00013840 <table_set_char@@Base>:
   13840:	push	{r0, r1, r2, r3, r4, lr}
   13844:	add	ip, sp, #16
   13848:	strb	r3, [ip, #-1]!
   1384c:	mov	r3, #19
   13850:	str	r3, [sp]
   13854:	mov	r3, ip
   13858:	bl	132a4 <table_set@@Base>
   1385c:	add	sp, sp, #20
   13860:	pop	{pc}		; (ldr pc, [sp], #4)

00013864 <table_set_uchar@@Base>:
   13864:	push	{r0, r1, r2, r3, r4, lr}
   13868:	add	ip, sp, #16
   1386c:	strb	r3, [ip, #-1]!
   13870:	mov	r3, #20
   13874:	str	r3, [sp]
   13878:	mov	r3, ip
   1387c:	bl	132a4 <table_set@@Base>
   13880:	add	sp, sp, #20
   13884:	pop	{pc}		; (ldr pc, [sp], #4)

00013888 <table_set_ptr@@Base>:
   13888:	mov	ip, #23
   1388c:	push	{r0, r1, r2, lr}
   13890:	str	ip, [sp]
   13894:	bl	132a4 <table_set@@Base>
   13898:	add	sp, sp, #12
   1389c:	pop	{pc}		; (ldr pc, [sp], #4)

000138a0 <table_column_is_valid@@Base>:
   138a0:	subs	r3, r0, #0
   138a4:	beq	138c8 <table_column_is_valid@@Base+0x28>
   138a8:	push	{r4, lr}
   138ac:	mov	r4, r1
   138b0:	bl	1280c <table_get_column_length@@Base>
   138b4:	cmp	r4, #0
   138b8:	cmpge	r0, r4
   138bc:	movgt	r0, #1
   138c0:	movle	r0, #0
   138c4:	pop	{r4, pc}
   138c8:	mov	r0, r3
   138cc:	bx	lr

000138d0 <table_row_is_valid@@Base>:
   138d0:	subs	r3, r0, #0
   138d4:	beq	138f8 <table_row_is_valid@@Base+0x28>
   138d8:	push	{r4, lr}
   138dc:	mov	r4, r1
   138e0:	bl	130e4 <table_get_row_length@@Base>
   138e4:	cmp	r4, #0
   138e8:	cmpge	r0, r4
   138ec:	movgt	r0, #1
   138f0:	movle	r0, #0
   138f4:	pop	{r4, pc}
   138f8:	mov	r0, r3
   138fc:	bx	lr

00013900 <table_cell_is_valid@@Base>:
   13900:	push	{r4, r5, r6, lr}
   13904:	mov	r5, r1
   13908:	mov	r1, r2
   1390c:	mov	r4, r0
   13910:	bl	138a0 <table_column_is_valid@@Base>
   13914:	cmp	r0, #0
   13918:	popeq	{r4, r5, r6, pc}
   1391c:	mov	r1, r5
   13920:	mov	r0, r4
   13924:	bl	138d0 <table_row_is_valid@@Base>
   13928:	adds	r0, r0, #0
   1392c:	movne	r0, #1
   13930:	pop	{r4, r5, r6, pc}

00013934 <table_cell_has_value@@Base>:
   13934:	push	{r4, lr}
   13938:	bl	141d4 <table_get_cell_ptr@@Base>
   1393c:	cmp	r0, #0
   13940:	popeq	{r4, pc}
   13944:	ldr	r0, [r0]
   13948:	adds	r0, r0, #0
   1394c:	movne	r0, #1
   13950:	pop	{r4, pc}

00013954 <table_cell_to_buffer@@Base>:
   13954:	push	{r4, r5, r6, r7, lr}
   13958:	sub	sp, sp, #20
   1395c:	mov	r7, r1
   13960:	mov	r1, r2
   13964:	str	r2, [sp, #12]
   13968:	mov	r6, r0
   1396c:	mov	r4, r3
   13970:	ldr	r5, [sp, #40]	; 0x28
   13974:	bl	12864 <table_get_column_data_type@@Base>
   13978:	ldr	r2, [sp, #12]
   1397c:	cmp	r0, #23
   13980:	ldrls	pc, [pc, r0, lsl #2]
   13984:	b	13aa4 <table_cell_to_buffer@@Base+0x150>
   13988:	andeq	r3, r1, r8, ror #19
   1398c:	andeq	r3, r1, r0, lsl #20
   13990:	andeq	r3, r1, r4, lsr #20
   13994:	andeq	r3, r1, r4, lsr sl
   13998:	andeq	r3, r1, r4, asr #20
   1399c:	andeq	r3, r1, r4, asr sl
   139a0:	andeq	r3, r1, r4, ror #20
   139a4:	andeq	r3, r1, r4, ror sl
   139a8:	andeq	r3, r1, r4, lsl #21
   139ac:			; <UNDEFINED> instruction: 0x00013ab0
   139b0:	andeq	r3, r1, r8, asr #21
   139b4:	andeq	r3, r1, r0, ror #21
   139b8:	strdeq	r3, [r1], -r8
   139bc:	andeq	r3, r1, r0, lsl fp
   139c0:	andeq	r3, r1, r8, lsr #22
   139c4:	andeq	r3, r1, r8, lsr fp
   139c8:	andeq	r3, r1, r0, ror #22
   139cc:	andeq	r3, r1, r8, lsl #23
   139d0:	andeq	r3, r1, r0, lsr #23
   139d4:	andeq	r3, r1, r8, asr #23
   139d8:	andeq	r3, r1, r0, ror #23
   139dc:	andeq	r3, r1, r8, asr #22
   139e0:			; <UNDEFINED> instruction: 0x00013bb8
   139e4:	strdeq	r3, [r1], -r0
   139e8:	mov	r1, r7
   139ec:	mov	r0, r6
   139f0:	bl	12f9c <table_get_int@@Base>
   139f4:	mov	r3, r0
   139f8:	ldr	r2, [pc, #520]	; 13c08 <table_cell_to_buffer@@Base+0x2b4>
   139fc:	b	13a14 <table_cell_to_buffer@@Base+0xc0>
   13a00:	mov	r1, r7
   13a04:	mov	r0, r6
   13a08:	bl	12fb0 <table_get_uint@@Base>
   13a0c:	ldr	r2, [pc, #504]	; 13c0c <table_cell_to_buffer@@Base+0x2b8>
   13a10:	mov	r3, r0
   13a14:	mov	r1, r5
   13a18:	mov	r0, r4
   13a1c:	bl	11c30 <snprintf@plt>
   13a20:	b	13aa4 <table_cell_to_buffer@@Base+0x150>
   13a24:	mov	r1, r7
   13a28:	mov	r0, r6
   13a2c:	bl	12f7c <table_get_int8@@Base>
   13a30:	b	139f4 <table_cell_to_buffer@@Base+0xa0>
   13a34:	mov	r1, r7
   13a38:	mov	r0, r6
   13a3c:	bl	13068 <table_get_uint8@@Base>
   13a40:	b	13a0c <table_cell_to_buffer@@Base+0xb8>
   13a44:	mov	r1, r7
   13a48:	mov	r0, r6
   13a4c:	bl	12fc4 <table_get_int16@@Base>
   13a50:	b	139f4 <table_cell_to_buffer@@Base+0xa0>
   13a54:	mov	r1, r7
   13a58:	mov	r0, r6
   13a5c:	bl	12fd8 <table_get_uint16@@Base>
   13a60:	b	13a0c <table_cell_to_buffer@@Base+0xb8>
   13a64:	mov	r1, r7
   13a68:	mov	r0, r6
   13a6c:	bl	12f8c <table_get_int32@@Base>
   13a70:	b	139f4 <table_cell_to_buffer@@Base+0xa0>
   13a74:	mov	r1, r7
   13a78:	mov	r0, r6
   13a7c:	bl	12fa0 <table_get_uint32@@Base>
   13a80:	b	13a0c <table_cell_to_buffer@@Base+0xb8>
   13a84:	mov	r1, r7
   13a88:	mov	r0, r6
   13a8c:	bl	1300c <table_get_int64@@Base>
   13a90:	ldr	r2, [pc, #376]	; 13c10 <table_cell_to_buffer@@Base+0x2bc>
   13a94:	strd	r0, [sp]
   13a98:	mov	r1, r5
   13a9c:	mov	r0, r4
   13aa0:	bl	11c30 <snprintf@plt>
   13aa4:	mov	r0, #0
   13aa8:	add	sp, sp, #20
   13aac:	pop	{r4, r5, r6, r7, pc}
   13ab0:	mov	r1, r7
   13ab4:	mov	r0, r6
   13ab8:	bl	13020 <table_get_uint64@@Base>
   13abc:	strd	r0, [sp]
   13ac0:	ldr	r2, [pc, #332]	; 13c14 <table_cell_to_buffer@@Base+0x2c0>
   13ac4:	b	13a98 <table_cell_to_buffer@@Base+0x144>
   13ac8:	mov	r1, r7
   13acc:	mov	r0, r6
   13ad0:	bl	12fb4 <table_get_short@@Base>
   13ad4:	ldr	r2, [pc, #316]	; 13c18 <table_cell_to_buffer@@Base+0x2c4>
   13ad8:	mov	r3, r0
   13adc:	b	13a14 <table_cell_to_buffer@@Base+0xc0>
   13ae0:	mov	r1, r7
   13ae4:	mov	r0, r6
   13ae8:	bl	12fc8 <table_get_ushort@@Base>
   13aec:	ldr	r2, [pc, #296]	; 13c1c <table_cell_to_buffer@@Base+0x2c8>
   13af0:	mov	r3, r0
   13af4:	b	13a14 <table_cell_to_buffer@@Base+0xc0>
   13af8:	mov	r1, r7
   13afc:	mov	r0, r6
   13b00:	bl	12fdc <table_get_long@@Base>
   13b04:	ldr	r2, [pc, #276]	; 13c20 <table_cell_to_buffer@@Base+0x2cc>
   13b08:	mov	r3, r0
   13b0c:	b	13a14 <table_cell_to_buffer@@Base+0xc0>
   13b10:	mov	r1, r7
   13b14:	mov	r0, r6
   13b18:	bl	12fec <table_get_ulong@@Base>
   13b1c:	ldr	r2, [pc, #256]	; 13c24 <table_cell_to_buffer@@Base+0x2d0>
   13b20:	mov	r3, r0
   13b24:	b	13a14 <table_cell_to_buffer@@Base+0xc0>
   13b28:	mov	r1, r7
   13b2c:	mov	r0, r6
   13b30:	bl	12ffc <table_get_llong@@Base>
   13b34:	b	13a90 <table_cell_to_buffer@@Base+0x13c>
   13b38:	mov	r1, r7
   13b3c:	mov	r0, r6
   13b40:	bl	13010 <table_get_ullong@@Base>
   13b44:	b	13abc <table_cell_to_buffer@@Base+0x168>
   13b48:	mov	r1, r7
   13b4c:	mov	r0, r6
   13b50:	bl	1306c <table_get_string@@Base>
   13b54:	ldr	r2, [pc, #204]	; 13c28 <table_cell_to_buffer@@Base+0x2d4>
   13b58:	mov	r3, r0
   13b5c:	b	13a14 <table_cell_to_buffer@@Base+0xc0>
   13b60:	mov	r1, r7
   13b64:	mov	r0, r6
   13b68:	bl	13024 <table_get_float@@Base>
   13b6c:	ldr	r2, [pc, #184]	; 13c2c <table_cell_to_buffer@@Base+0x2d8>
   13b70:	vcvt.f64.f32	d0, s0
   13b74:	vstr	d0, [sp]
   13b78:	mov	r1, r5
   13b7c:	mov	r0, r4
   13b80:	bl	11c30 <snprintf@plt>
   13b84:	b	13aa4 <table_cell_to_buffer@@Base+0x150>
   13b88:	mov	r1, r7
   13b8c:	mov	r0, r6
   13b90:	bl	13034 <table_get_double@@Base>
   13b94:	ldr	r2, [pc, #148]	; 13c30 <table_cell_to_buffer@@Base+0x2dc>
   13b98:	vstr	d0, [sp]
   13b9c:	b	13b78 <table_cell_to_buffer@@Base+0x224>
   13ba0:	mov	r1, r7
   13ba4:	mov	r0, r6
   13ba8:	bl	13044 <table_get_ldouble@@Base>
   13bac:	ldr	r2, [pc, #128]	; 13c34 <table_cell_to_buffer@@Base+0x2e0>
   13bb0:	vstr	d0, [sp]
   13bb4:	b	13b78 <table_cell_to_buffer@@Base+0x224>
   13bb8:	mov	r1, r7
   13bbc:	mov	r0, r6
   13bc0:	bl	12f6c <table_get_bool@@Base>
   13bc4:	b	139f4 <table_cell_to_buffer@@Base+0xa0>
   13bc8:	mov	r1, r7
   13bcc:	mov	r0, r6
   13bd0:	bl	13064 <table_get_char@@Base>
   13bd4:	mov	r3, r0
   13bd8:	ldr	r2, [pc, #88]	; 13c38 <table_cell_to_buffer@@Base+0x2e4>
   13bdc:	b	13a14 <table_cell_to_buffer@@Base+0xc0>
   13be0:	mov	r1, r7
   13be4:	mov	r0, r6
   13be8:	bl	13054 <table_get_uchar@@Base>
   13bec:	b	13bd4 <table_cell_to_buffer@@Base+0x280>
   13bf0:	mov	r1, r7
   13bf4:	mov	r0, r6
   13bf8:	bl	13070 <table_get_ptr@@Base>
   13bfc:	ldr	r2, [pc, #56]	; 13c3c <table_cell_to_buffer@@Base+0x2e8>
   13c00:	mov	r3, r0
   13c04:	b	13a14 <table_cell_to_buffer@@Base+0xc0>
   13c08:	andeq	r4, r1, r4, lsl #12
   13c0c:	andeq	r4, r1, r7, lsl #12
   13c10:	andeq	r4, r1, sl, lsl #12
   13c14:	andeq	r4, r1, pc, lsl #12
   13c18:	andeq	r4, r1, r4, lsl r6
   13c1c:	andeq	r4, r1, r8, lsl r6
   13c20:	andeq	r4, r1, ip, lsl r6
   13c24:	andeq	r4, r1, r0, lsr #12
   13c28:	andeq	r4, r1, r4, lsr #12
   13c2c:	andeq	r4, r1, r7, lsr #12
   13c30:	andeq	r4, r1, sl, lsr #12
   13c34:	andeq	r4, r1, lr, lsr #12
   13c38:	andeq	r4, r1, r2, lsr r6
   13c3c:	andeq	r4, r1, r5, lsr r6

00013c40 <table_cell_from_buffer@@Base>:
   13c40:	push	{r4, r5, r6, r7, lr}
   13c44:	mov	r7, r1
   13c48:	sub	sp, sp, #268	; 0x10c
   13c4c:	mov	r1, r2
   13c50:	mov	r6, r0
   13c54:	mov	r5, r2
   13c58:	mov	r4, r3
   13c5c:	bl	12864 <table_get_column_data_type@@Base>
   13c60:	cmp	r0, #23
   13c64:	ldrls	pc, [pc, r0, lsl #2]
   13c68:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13c6c:	andeq	r3, r1, ip, asr #25
   13c70:	andeq	r3, r1, r0, lsl #26
   13c74:	andeq	r3, r1, r0, lsr sp
   13c78:	andeq	r3, r1, r0, ror #26
   13c7c:	muleq	r1, r0, sp
   13c80:	andeq	r3, r1, r0, asr #27
   13c84:	strdeq	r3, [r1], -r0
   13c88:	andeq	r3, r1, r0, lsr #28
   13c8c:	andeq	r3, r1, r0, asr lr
   13c90:	andeq	r3, r1, r4, lsl #29
   13c94:			; <UNDEFINED> instruction: 0x00013eb8
   13c98:	andeq	r3, r1, r8, ror #29
   13c9c:	andeq	r3, r1, r8, lsl pc
   13ca0:	andeq	r3, r1, r8, asr #30
   13ca4:	andeq	r3, r1, r8, ror pc
   13ca8:	andeq	r3, r1, ip, lsr #31
   13cac:	andeq	r4, r1, r0, lsl r0
   13cb0:	andeq	r4, r1, r0, asr #32
   13cb4:	andeq	r4, r1, r0, ror r0
   13cb8:	strdeq	r4, [r1], -ip
   13cbc:	andeq	r4, r1, ip, lsr #2
   13cc0:	andeq	r3, r1, r0, ror #31
   13cc4:	andeq	r4, r1, r0, lsr #1
   13cc8:	andeq	r4, r1, ip, asr r1
   13ccc:	add	r2, sp, #8
   13cd0:	ldr	r1, [pc, #1212]	; 14194 <table_cell_from_buffer@@Base+0x554>
   13cd4:	mov	r0, r4
   13cd8:	bl	11c3c <__isoc99_sscanf@plt>
   13cdc:	cmp	r0, #1
   13ce0:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13ce4:	ldr	r3, [sp, #8]
   13ce8:	mov	r2, r5
   13cec:	mov	r1, r7
   13cf0:	mov	r0, r6
   13cf4:	bl	135a8 <table_set_int@@Base>
   13cf8:	mov	r4, #0
   13cfc:	b	140f0 <table_cell_from_buffer@@Base+0x4b0>
   13d00:	add	r2, sp, #8
   13d04:	ldr	r1, [pc, #1164]	; 14198 <table_cell_from_buffer@@Base+0x558>
   13d08:	mov	r0, r4
   13d0c:	bl	11c3c <__isoc99_sscanf@plt>
   13d10:	cmp	r0, #1
   13d14:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13d18:	ldr	r3, [sp, #8]
   13d1c:	mov	r2, r5
   13d20:	mov	r1, r7
   13d24:	mov	r0, r6
   13d28:	bl	135cc <table_set_uint@@Base>
   13d2c:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13d30:	add	r2, sp, #8
   13d34:	ldr	r1, [pc, #1120]	; 1419c <table_cell_from_buffer@@Base+0x55c>
   13d38:	mov	r0, r4
   13d3c:	bl	11c3c <__isoc99_sscanf@plt>
   13d40:	cmp	r0, #1
   13d44:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13d48:	ldrsb	r3, [sp, #8]
   13d4c:	mov	r2, r5
   13d50:	mov	r1, r7
   13d54:	mov	r0, r6
   13d58:	bl	135f0 <table_set_int8@@Base>
   13d5c:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13d60:	add	r2, sp, #8
   13d64:	ldr	r1, [pc, #1076]	; 141a0 <table_cell_from_buffer@@Base+0x560>
   13d68:	mov	r0, r4
   13d6c:	bl	11c3c <__isoc99_sscanf@plt>
   13d70:	cmp	r0, #1
   13d74:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13d78:	ldrb	r3, [sp, #8]
   13d7c:	mov	r2, r5
   13d80:	mov	r1, r7
   13d84:	mov	r0, r6
   13d88:	bl	13614 <table_set_uint8@@Base>
   13d8c:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13d90:	add	r2, sp, #8
   13d94:	ldr	r1, [pc, #1032]	; 141a4 <table_cell_from_buffer@@Base+0x564>
   13d98:	mov	r0, r4
   13d9c:	bl	11c3c <__isoc99_sscanf@plt>
   13da0:	cmp	r0, #1
   13da4:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13da8:	ldrsh	r3, [sp, #8]
   13dac:	mov	r2, r5
   13db0:	mov	r1, r7
   13db4:	mov	r0, r6
   13db8:	bl	13638 <table_set_int16@@Base>
   13dbc:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13dc0:	add	r2, sp, #8
   13dc4:	ldr	r1, [pc, #988]	; 141a8 <table_cell_from_buffer@@Base+0x568>
   13dc8:	mov	r0, r4
   13dcc:	bl	11c3c <__isoc99_sscanf@plt>
   13dd0:	cmp	r0, #1
   13dd4:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13dd8:	ldrh	r3, [sp, #8]
   13ddc:	mov	r2, r5
   13de0:	mov	r1, r7
   13de4:	mov	r0, r6
   13de8:	bl	1365c <table_set_uint16@@Base>
   13dec:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13df0:	add	r2, sp, #8
   13df4:	ldr	r1, [pc, #920]	; 14194 <table_cell_from_buffer@@Base+0x554>
   13df8:	mov	r0, r4
   13dfc:	bl	11c3c <__isoc99_sscanf@plt>
   13e00:	cmp	r0, #1
   13e04:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13e08:	ldr	r3, [sp, #8]
   13e0c:	mov	r2, r5
   13e10:	mov	r1, r7
   13e14:	mov	r0, r6
   13e18:	bl	13680 <table_set_int32@@Base>
   13e1c:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13e20:	add	r2, sp, #8
   13e24:	ldr	r1, [pc, #876]	; 14198 <table_cell_from_buffer@@Base+0x558>
   13e28:	mov	r0, r4
   13e2c:	bl	11c3c <__isoc99_sscanf@plt>
   13e30:	cmp	r0, #1
   13e34:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13e38:	ldr	r3, [sp, #8]
   13e3c:	mov	r2, r5
   13e40:	mov	r1, r7
   13e44:	mov	r0, r6
   13e48:	bl	136a4 <table_set_uint32@@Base>
   13e4c:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13e50:	add	r2, sp, #8
   13e54:	ldr	r1, [pc, #848]	; 141ac <table_cell_from_buffer@@Base+0x56c>
   13e58:	mov	r0, r4
   13e5c:	bl	11c3c <__isoc99_sscanf@plt>
   13e60:	cmp	r0, #1
   13e64:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13e68:	ldrd	r2, [sp, #8]
   13e6c:	mov	r1, r7
   13e70:	mov	r0, r6
   13e74:	strd	r2, [sp]
   13e78:	mov	r2, r5
   13e7c:	bl	136c8 <table_set_int64@@Base>
   13e80:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13e84:	add	r2, sp, #8
   13e88:	ldr	r1, [pc, #800]	; 141b0 <table_cell_from_buffer@@Base+0x570>
   13e8c:	mov	r0, r4
   13e90:	bl	11c3c <__isoc99_sscanf@plt>
   13e94:	cmp	r0, #1
   13e98:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13e9c:	ldrd	r2, [sp, #8]
   13ea0:	mov	r1, r7
   13ea4:	mov	r0, r6
   13ea8:	strd	r2, [sp]
   13eac:	mov	r2, r5
   13eb0:	bl	136e4 <table_set_uint64@@Base>
   13eb4:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13eb8:	add	r2, sp, #8
   13ebc:	ldr	r1, [pc, #736]	; 141a4 <table_cell_from_buffer@@Base+0x564>
   13ec0:	mov	r0, r4
   13ec4:	bl	11c3c <__isoc99_sscanf@plt>
   13ec8:	cmp	r0, #1
   13ecc:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13ed0:	ldrsh	r3, [sp, #8]
   13ed4:	mov	r2, r5
   13ed8:	mov	r1, r7
   13edc:	mov	r0, r6
   13ee0:	bl	13700 <table_set_short@@Base>
   13ee4:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13ee8:	add	r2, sp, #8
   13eec:	ldr	r1, [pc, #692]	; 141a8 <table_cell_from_buffer@@Base+0x568>
   13ef0:	mov	r0, r4
   13ef4:	bl	11c3c <__isoc99_sscanf@plt>
   13ef8:	cmp	r0, #1
   13efc:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13f00:	ldrh	r3, [sp, #8]
   13f04:	mov	r2, r5
   13f08:	mov	r1, r7
   13f0c:	mov	r0, r6
   13f10:	bl	13724 <table_set_ushort@@Base>
   13f14:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13f18:	add	r2, sp, #8
   13f1c:	ldr	r1, [pc, #656]	; 141b4 <table_cell_from_buffer@@Base+0x574>
   13f20:	mov	r0, r4
   13f24:	bl	11c3c <__isoc99_sscanf@plt>
   13f28:	cmp	r0, #1
   13f2c:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13f30:	ldr	r3, [sp, #8]
   13f34:	mov	r2, r5
   13f38:	mov	r1, r7
   13f3c:	mov	r0, r6
   13f40:	bl	13748 <table_set_long@@Base>
   13f44:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13f48:	add	r2, sp, #8
   13f4c:	ldr	r1, [pc, #612]	; 141b8 <table_cell_from_buffer@@Base+0x578>
   13f50:	mov	r0, r4
   13f54:	bl	11c3c <__isoc99_sscanf@plt>
   13f58:	cmp	r0, #1
   13f5c:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13f60:	ldr	r3, [sp, #8]
   13f64:	mov	r2, r5
   13f68:	mov	r1, r7
   13f6c:	mov	r0, r6
   13f70:	bl	1376c <table_set_ulong@@Base>
   13f74:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13f78:	add	r2, sp, #8
   13f7c:	ldr	r1, [pc, #552]	; 141ac <table_cell_from_buffer@@Base+0x56c>
   13f80:	mov	r0, r4
   13f84:	bl	11c3c <__isoc99_sscanf@plt>
   13f88:	cmp	r0, #1
   13f8c:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13f90:	ldrd	r2, [sp, #8]
   13f94:	mov	r1, r7
   13f98:	mov	r0, r6
   13f9c:	strd	r2, [sp]
   13fa0:	mov	r2, r5
   13fa4:	bl	13790 <table_set_llong@@Base>
   13fa8:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13fac:	add	r2, sp, #8
   13fb0:	ldr	r1, [pc, #504]	; 141b0 <table_cell_from_buffer@@Base+0x570>
   13fb4:	mov	r0, r4
   13fb8:	bl	11c3c <__isoc99_sscanf@plt>
   13fbc:	cmp	r0, #1
   13fc0:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13fc4:	ldrd	r2, [sp, #8]
   13fc8:	mov	r1, r7
   13fcc:	mov	r0, r6
   13fd0:	strd	r2, [sp]
   13fd4:	mov	r2, r5
   13fd8:	bl	137ac <table_set_ullong@@Base>
   13fdc:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   13fe0:	add	r2, sp, #8
   13fe4:	ldr	r1, [pc, #464]	; 141bc <table_cell_from_buffer@@Base+0x57c>
   13fe8:	mov	r0, r4
   13fec:	bl	11c3c <__isoc99_sscanf@plt>
   13ff0:	cmp	r0, #1
   13ff4:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   13ff8:	add	r3, sp, #8
   13ffc:	mov	r2, r5
   14000:	mov	r1, r7
   14004:	mov	r0, r6
   14008:	bl	13828 <table_set_string@@Base>
   1400c:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   14010:	add	r2, sp, #8
   14014:	ldr	r1, [pc, #420]	; 141c0 <table_cell_from_buffer@@Base+0x580>
   14018:	mov	r0, r4
   1401c:	bl	11c3c <__isoc99_sscanf@plt>
   14020:	cmp	r0, #1
   14024:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   14028:	vldr	s0, [sp, #8]
   1402c:	mov	r2, r5
   14030:	mov	r1, r7
   14034:	mov	r0, r6
   14038:	bl	137c8 <table_set_float@@Base>
   1403c:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   14040:	add	r2, sp, #8
   14044:	ldr	r1, [pc, #376]	; 141c4 <table_cell_from_buffer@@Base+0x584>
   14048:	mov	r0, r4
   1404c:	bl	11c3c <__isoc99_sscanf@plt>
   14050:	cmp	r0, #1
   14054:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   14058:	vldr	d0, [sp, #8]
   1405c:	mov	r2, r5
   14060:	mov	r1, r7
   14064:	mov	r0, r6
   14068:	bl	137e8 <table_set_double@@Base>
   1406c:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   14070:	add	r2, sp, #8
   14074:	ldr	r1, [pc, #332]	; 141c8 <table_cell_from_buffer@@Base+0x588>
   14078:	mov	r0, r4
   1407c:	bl	11c3c <__isoc99_sscanf@plt>
   14080:	cmp	r0, #1
   14084:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   14088:	vldr	d0, [sp, #8]
   1408c:	mov	r2, r5
   14090:	mov	r1, r7
   14094:	mov	r0, r6
   14098:	bl	13808 <table_set_ldouble@@Base>
   1409c:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   140a0:	add	r2, sp, #8
   140a4:	ldr	r1, [pc, #232]	; 14194 <table_cell_from_buffer@@Base+0x554>
   140a8:	mov	r0, r4
   140ac:	bl	11c3c <__isoc99_sscanf@plt>
   140b0:	cmp	r0, #1
   140b4:	mov	r3, r0
   140b8:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   140bc:	ldr	r4, [sp, #8]
   140c0:	cmp	r4, #0
   140c4:	beq	140dc <table_cell_from_buffer@@Base+0x49c>
   140c8:	mov	r2, r5
   140cc:	mov	r1, r7
   140d0:	mov	r0, r6
   140d4:	bl	13584 <table_set_bool@@Base>
   140d8:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   140dc:	mov	r3, r4
   140e0:	mov	r2, r5
   140e4:	mov	r1, r7
   140e8:	mov	r0, r6
   140ec:	bl	13584 <table_set_bool@@Base>
   140f0:	mov	r0, r4
   140f4:	add	sp, sp, #268	; 0x10c
   140f8:	pop	{r4, r5, r6, r7, pc}
   140fc:	add	r2, sp, #8
   14100:	ldr	r1, [pc, #196]	; 141cc <table_cell_from_buffer@@Base+0x58c>
   14104:	mov	r0, r4
   14108:	bl	11c3c <__isoc99_sscanf@plt>
   1410c:	cmp	r0, #1
   14110:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   14114:	ldrb	r3, [sp, #8]
   14118:	mov	r2, r5
   1411c:	mov	r1, r7
   14120:	mov	r0, r6
   14124:	bl	13840 <table_set_char@@Base>
   14128:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   1412c:	add	r2, sp, #8
   14130:	ldr	r1, [pc, #148]	; 141cc <table_cell_from_buffer@@Base+0x58c>
   14134:	mov	r0, r4
   14138:	bl	11c3c <__isoc99_sscanf@plt>
   1413c:	cmp	r0, #1
   14140:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   14144:	ldrb	r3, [sp, #8]
   14148:	mov	r2, r5
   1414c:	mov	r1, r7
   14150:	mov	r0, r6
   14154:	bl	13864 <table_set_uchar@@Base>
   14158:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   1415c:	add	r2, sp, #8
   14160:	ldr	r1, [pc, #104]	; 141d0 <table_cell_from_buffer@@Base+0x590>
   14164:	mov	r0, r4
   14168:	bl	11c3c <__isoc99_sscanf@plt>
   1416c:	cmp	r0, #1
   14170:	bne	1418c <table_cell_from_buffer@@Base+0x54c>
   14174:	ldr	r3, [sp, #8]
   14178:	mov	r2, r5
   1417c:	mov	r1, r7
   14180:	mov	r0, r6
   14184:	bl	13888 <table_set_ptr@@Base>
   14188:	b	13cf8 <table_cell_from_buffer@@Base+0xb8>
   1418c:	mvn	r4, #0
   14190:	b	140f0 <table_cell_from_buffer@@Base+0x4b0>
   14194:	andeq	r4, r1, r4, lsl #12
   14198:	andeq	r4, r1, r7, lsl #12
   1419c:	andeq	r4, r1, r8, lsr r6
   141a0:	andeq	r4, r1, sp, lsr r6
   141a4:	andeq	r4, r1, r4, lsl r6
   141a8:	andeq	r4, r1, r8, lsl r6
   141ac:	andeq	r4, r1, sl, lsl #12
   141b0:	andeq	r4, r1, pc, lsl #12
   141b4:	andeq	r4, r1, ip, lsl r6
   141b8:	andeq	r4, r1, r0, lsr #12
   141bc:	andeq	r4, r1, r4, lsr #12
   141c0:	andeq	r4, r1, r7, lsr #12
   141c4:	andeq	r4, r1, sl, lsr #12
   141c8:	andeq	r4, r1, lr, lsr #12
   141cc:	andeq	r4, r1, r2, lsr r6
   141d0:	andeq	r4, r1, r5, lsr r6

000141d4 <table_get_cell_ptr@@Base>:
   141d4:	push	{r4, lr}
   141d8:	mov	r4, r2
   141dc:	bl	13288 <table_get_row_ptr@@Base>
   141e0:	ldr	r0, [r0]
   141e4:	add	r0, r0, r4, lsl #2
   141e8:	pop	{r4, pc}

000141ec <table_cell_init@@Base>:
   141ec:	push	{r4, lr}
   141f0:	bl	141d4 <table_get_cell_ptr@@Base>
   141f4:	mov	r3, #0
   141f8:	str	r3, [r0]
   141fc:	pop	{r4, pc}

00014200 <table_cell_destroy@@Base>:
   14200:	push	{r4, r5, r6, lr}
   14204:	mov	r6, r1
   14208:	mov	r1, r2
   1420c:	mov	r5, r0
   14210:	mov	r4, r2
   14214:	bl	12864 <table_get_column_data_type@@Base>
   14218:	cmp	r0, #23
   1421c:	popeq	{r4, r5, r6, pc}
   14220:	mov	r2, r4
   14224:	mov	r1, r6
   14228:	mov	r0, r5
   1422c:	bl	141d4 <table_get_cell_ptr@@Base>
   14230:	ldr	r0, [r0]
   14234:	cmp	r0, #0
   14238:	popeq	{r4, r5, r6, pc}
   1423c:	pop	{r4, r5, r6, lr}
   14240:	b	11bc4 <free@plt>

00014244 <table_cell_nullify@@Base>:
   14244:	push	{r4, lr}
   14248:	bl	141d4 <table_get_cell_ptr@@Base>
   1424c:	mov	r4, r0
   14250:	ldr	r0, [r0]
   14254:	cmp	r0, #0
   14258:	beq	14268 <table_cell_nullify@@Base+0x24>
   1425c:	bl	11bc4 <free@plt>
   14260:	mov	r3, #0
   14264:	str	r3, [r4]
   14268:	mov	r0, #0
   1426c:	pop	{r4, pc}
   14270:	subs	r2, r1, #1
   14274:	bxeq	lr
   14278:	bcc	14450 <table_cell_nullify@@Base+0x20c>
   1427c:	cmp	r0, r1
   14280:	bls	14434 <table_cell_nullify@@Base+0x1f0>
   14284:	tst	r1, r2
   14288:	beq	14440 <table_cell_nullify@@Base+0x1fc>
   1428c:	clz	r3, r0
   14290:	clz	r2, r1
   14294:	sub	r3, r2, r3
   14298:	rsbs	r3, r3, #31
   1429c:	addne	r3, r3, r3, lsl #1
   142a0:	mov	r2, #0
   142a4:	addne	pc, pc, r3, lsl #2
   142a8:	nop			; (mov r0, r0)
   142ac:	cmp	r0, r1, lsl #31
   142b0:	adc	r2, r2, r2
   142b4:	subcs	r0, r0, r1, lsl #31
   142b8:	cmp	r0, r1, lsl #30
   142bc:	adc	r2, r2, r2
   142c0:	subcs	r0, r0, r1, lsl #30
   142c4:	cmp	r0, r1, lsl #29
   142c8:	adc	r2, r2, r2
   142cc:	subcs	r0, r0, r1, lsl #29
   142d0:	cmp	r0, r1, lsl #28
   142d4:	adc	r2, r2, r2
   142d8:	subcs	r0, r0, r1, lsl #28
   142dc:	cmp	r0, r1, lsl #27
   142e0:	adc	r2, r2, r2
   142e4:	subcs	r0, r0, r1, lsl #27
   142e8:	cmp	r0, r1, lsl #26
   142ec:	adc	r2, r2, r2
   142f0:	subcs	r0, r0, r1, lsl #26
   142f4:	cmp	r0, r1, lsl #25
   142f8:	adc	r2, r2, r2
   142fc:	subcs	r0, r0, r1, lsl #25
   14300:	cmp	r0, r1, lsl #24
   14304:	adc	r2, r2, r2
   14308:	subcs	r0, r0, r1, lsl #24
   1430c:	cmp	r0, r1, lsl #23
   14310:	adc	r2, r2, r2
   14314:	subcs	r0, r0, r1, lsl #23
   14318:	cmp	r0, r1, lsl #22
   1431c:	adc	r2, r2, r2
   14320:	subcs	r0, r0, r1, lsl #22
   14324:	cmp	r0, r1, lsl #21
   14328:	adc	r2, r2, r2
   1432c:	subcs	r0, r0, r1, lsl #21
   14330:	cmp	r0, r1, lsl #20
   14334:	adc	r2, r2, r2
   14338:	subcs	r0, r0, r1, lsl #20
   1433c:	cmp	r0, r1, lsl #19
   14340:	adc	r2, r2, r2
   14344:	subcs	r0, r0, r1, lsl #19
   14348:	cmp	r0, r1, lsl #18
   1434c:	adc	r2, r2, r2
   14350:	subcs	r0, r0, r1, lsl #18
   14354:	cmp	r0, r1, lsl #17
   14358:	adc	r2, r2, r2
   1435c:	subcs	r0, r0, r1, lsl #17
   14360:	cmp	r0, r1, lsl #16
   14364:	adc	r2, r2, r2
   14368:	subcs	r0, r0, r1, lsl #16
   1436c:	cmp	r0, r1, lsl #15
   14370:	adc	r2, r2, r2
   14374:	subcs	r0, r0, r1, lsl #15
   14378:	cmp	r0, r1, lsl #14
   1437c:	adc	r2, r2, r2
   14380:	subcs	r0, r0, r1, lsl #14
   14384:	cmp	r0, r1, lsl #13
   14388:	adc	r2, r2, r2
   1438c:	subcs	r0, r0, r1, lsl #13
   14390:	cmp	r0, r1, lsl #12
   14394:	adc	r2, r2, r2
   14398:	subcs	r0, r0, r1, lsl #12
   1439c:	cmp	r0, r1, lsl #11
   143a0:	adc	r2, r2, r2
   143a4:	subcs	r0, r0, r1, lsl #11
   143a8:	cmp	r0, r1, lsl #10
   143ac:	adc	r2, r2, r2
   143b0:	subcs	r0, r0, r1, lsl #10
   143b4:	cmp	r0, r1, lsl #9
   143b8:	adc	r2, r2, r2
   143bc:	subcs	r0, r0, r1, lsl #9
   143c0:	cmp	r0, r1, lsl #8
   143c4:	adc	r2, r2, r2
   143c8:	subcs	r0, r0, r1, lsl #8
   143cc:	cmp	r0, r1, lsl #7
   143d0:	adc	r2, r2, r2
   143d4:	subcs	r0, r0, r1, lsl #7
   143d8:	cmp	r0, r1, lsl #6
   143dc:	adc	r2, r2, r2
   143e0:	subcs	r0, r0, r1, lsl #6
   143e4:	cmp	r0, r1, lsl #5
   143e8:	adc	r2, r2, r2
   143ec:	subcs	r0, r0, r1, lsl #5
   143f0:	cmp	r0, r1, lsl #4
   143f4:	adc	r2, r2, r2
   143f8:	subcs	r0, r0, r1, lsl #4
   143fc:	cmp	r0, r1, lsl #3
   14400:	adc	r2, r2, r2
   14404:	subcs	r0, r0, r1, lsl #3
   14408:	cmp	r0, r1, lsl #2
   1440c:	adc	r2, r2, r2
   14410:	subcs	r0, r0, r1, lsl #2
   14414:	cmp	r0, r1, lsl #1
   14418:	adc	r2, r2, r2
   1441c:	subcs	r0, r0, r1, lsl #1
   14420:	cmp	r0, r1
   14424:	adc	r2, r2, r2
   14428:	subcs	r0, r0, r1
   1442c:	mov	r0, r2
   14430:	bx	lr
   14434:	moveq	r0, #1
   14438:	movne	r0, #0
   1443c:	bx	lr
   14440:	clz	r2, r1
   14444:	rsb	r2, r2, #31
   14448:	lsr	r0, r0, r2
   1444c:	bx	lr
   14450:	cmp	r0, #0
   14454:	mvnne	r0, #0
   14458:	b	1447c <table_cell_nullify@@Base+0x238>
   1445c:	cmp	r1, #0
   14460:	beq	14450 <table_cell_nullify@@Base+0x20c>
   14464:	push	{r0, r1, lr}
   14468:	bl	14270 <table_cell_nullify@@Base+0x2c>
   1446c:	pop	{r1, r2, lr}
   14470:	mul	r3, r2, r0
   14474:	sub	r1, r1, r3
   14478:	bx	lr
   1447c:	push	{r1, lr}
   14480:	mov	r0, #8
   14484:	bl	11ba0 <raise@plt>
   14488:	pop	{r1, pc}

0001448c <__libc_csu_init@@Base>:
   1448c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14490:	mov	r7, r0
   14494:	ldr	r6, [pc, #72]	; 144e4 <__libc_csu_init@@Base+0x58>
   14498:	ldr	r5, [pc, #72]	; 144e8 <__libc_csu_init@@Base+0x5c>
   1449c:	add	r6, pc, r6
   144a0:	add	r5, pc, r5
   144a4:	sub	r6, r6, r5
   144a8:	mov	r8, r1
   144ac:	mov	r9, r2
   144b0:	bl	11b80 <raise@plt-0x20>
   144b4:	asrs	r6, r6, #2
   144b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   144bc:	mov	r4, #0
   144c0:	add	r4, r4, #1
   144c4:	ldr	r3, [r5], #4
   144c8:	mov	r2, r9
   144cc:	mov	r1, r8
   144d0:	mov	r0, r7
   144d4:	blx	r3
   144d8:	cmp	r6, r4
   144dc:	bne	144c0 <__libc_csu_init@@Base+0x34>
   144e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   144e4:	andeq	r0, r1, ip, ror #20
   144e8:	andeq	r0, r1, r4, ror #20

000144ec <__libc_csu_fini@@Base>:
   144ec:	bx	lr

Disassembly of section .fini:

000144f0 <.fini>:
   144f0:	push	{r3, lr}
   144f4:	pop	{r3, pc}
