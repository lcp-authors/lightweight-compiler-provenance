
../repos/coreutils/src/whoami:     file format elf32-littlearm


Disassembly of section .init:

00010b44 <.init>:
   10b44:	push	{r3, lr}
   10b48:	bl	10dc8 <abort@plt+0x48>
   10b4c:	pop	{r3, pc}

Disassembly of section .plt:

00010b50 <calloc@plt-0x14>:
   10b50:	push	{lr}		; (str lr, [sp, #-4]!)
   10b54:	ldr	lr, [pc, #4]	; 10b60 <calloc@plt-0x4>
   10b58:	add	lr, pc, lr
   10b5c:	ldr	pc, [lr, #8]!
   10b60:	andeq	r4, r1, r0, lsr #9

00010b64 <calloc@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #20, 20	; 0x14000
   10b6c:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b70 <fputs_unlocked@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #20, 20	; 0x14000
   10b78:	ldr	pc, [ip, #1176]!	; 0x498

00010b7c <raise@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #20, 20	; 0x14000
   10b84:	ldr	pc, [ip, #1168]!	; 0x490

00010b88 <strcmp@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #20, 20	; 0x14000
   10b90:	ldr	pc, [ip, #1160]!	; 0x488

00010b94 <getpwuid@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #20, 20	; 0x14000
   10b9c:	ldr	pc, [ip, #1152]!	; 0x480

00010ba0 <fflush@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #20, 20	; 0x14000
   10ba8:	ldr	pc, [ip, #1144]!	; 0x478

00010bac <free@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #20, 20	; 0x14000
   10bb4:	ldr	pc, [ip, #1136]!	; 0x470

00010bb8 <_exit@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #20, 20	; 0x14000
   10bc0:	ldr	pc, [ip, #1128]!	; 0x468

00010bc4 <memcpy@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #20, 20	; 0x14000
   10bcc:	ldr	pc, [ip, #1120]!	; 0x460

00010bd0 <mbsinit@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #20, 20	; 0x14000
   10bd8:	ldr	pc, [ip, #1112]!	; 0x458

00010bdc <memcmp@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #20, 20	; 0x14000
   10be4:	ldr	pc, [ip, #1104]!	; 0x450

00010be8 <fputc_unlocked@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #20, 20	; 0x14000
   10bf0:	ldr	pc, [ip, #1096]!	; 0x448

00010bf4 <dcgettext@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #20, 20	; 0x14000
   10bfc:	ldr	pc, [ip, #1088]!	; 0x440

00010c00 <realloc@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #20, 20	; 0x14000
   10c08:	ldr	pc, [ip, #1080]!	; 0x438

00010c0c <textdomain@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #20, 20	; 0x14000
   10c14:	ldr	pc, [ip, #1072]!	; 0x430

00010c18 <geteuid@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #20, 20	; 0x14000
   10c20:	ldr	pc, [ip, #1064]!	; 0x428

00010c24 <iswprint@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #20, 20	; 0x14000
   10c2c:	ldr	pc, [ip, #1056]!	; 0x420

00010c30 <fwrite@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #20, 20	; 0x14000
   10c38:	ldr	pc, [ip, #1048]!	; 0x418

00010c3c <lseek64@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #20, 20	; 0x14000
   10c44:	ldr	pc, [ip, #1040]!	; 0x410

00010c48 <__ctype_get_mb_cur_max@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #20, 20	; 0x14000
   10c50:	ldr	pc, [ip, #1032]!	; 0x408

00010c54 <__fpending@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #20, 20	; 0x14000
   10c5c:	ldr	pc, [ip, #1024]!	; 0x400

00010c60 <mbrtowc@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #20, 20	; 0x14000
   10c68:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c6c <error@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #20, 20	; 0x14000
   10c74:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c78 <puts@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #20, 20	; 0x14000
   10c80:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c84 <malloc@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #20, 20	; 0x14000
   10c8c:	ldr	pc, [ip, #992]!	; 0x3e0

00010c90 <__libc_start_main@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #20, 20	; 0x14000
   10c98:	ldr	pc, [ip, #984]!	; 0x3d8

00010c9c <__freading@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #20, 20	; 0x14000
   10ca4:	ldr	pc, [ip, #976]!	; 0x3d0

00010ca8 <__gmon_start__@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #20, 20	; 0x14000
   10cb0:	ldr	pc, [ip, #968]!	; 0x3c8

00010cb4 <getopt_long@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #20, 20	; 0x14000
   10cbc:	ldr	pc, [ip, #960]!	; 0x3c0

00010cc0 <__ctype_b_loc@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #20, 20	; 0x14000
   10cc8:	ldr	pc, [ip, #952]!	; 0x3b8

00010ccc <exit@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #20, 20	; 0x14000
   10cd4:	ldr	pc, [ip, #944]!	; 0x3b0

00010cd8 <strlen@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #20, 20	; 0x14000
   10ce0:	ldr	pc, [ip, #936]!	; 0x3a8

00010ce4 <__errno_location@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #20, 20	; 0x14000
   10cec:	ldr	pc, [ip, #928]!	; 0x3a0

00010cf0 <__cxa_atexit@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #20, 20	; 0x14000
   10cf8:	ldr	pc, [ip, #920]!	; 0x398

00010cfc <memset@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #20, 20	; 0x14000
   10d04:	ldr	pc, [ip, #912]!	; 0x390

00010d08 <__printf_chk@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #20, 20	; 0x14000
   10d10:	ldr	pc, [ip, #904]!	; 0x388

00010d14 <fileno@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #20, 20	; 0x14000
   10d1c:	ldr	pc, [ip, #896]!	; 0x380

00010d20 <__fprintf_chk@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #20, 20	; 0x14000
   10d28:	ldr	pc, [ip, #888]!	; 0x378

00010d2c <fclose@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #20, 20	; 0x14000
   10d34:	ldr	pc, [ip, #880]!	; 0x370

00010d38 <fseeko64@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #20, 20	; 0x14000
   10d40:	ldr	pc, [ip, #872]!	; 0x368

00010d44 <setlocale@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #20, 20	; 0x14000
   10d4c:	ldr	pc, [ip, #864]!	; 0x360

00010d50 <strrchr@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #20, 20	; 0x14000
   10d58:	ldr	pc, [ip, #856]!	; 0x358

00010d5c <nl_langinfo@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #20, 20	; 0x14000
   10d64:	ldr	pc, [ip, #848]!	; 0x350

00010d68 <bindtextdomain@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #20, 20	; 0x14000
   10d70:	ldr	pc, [ip, #840]!	; 0x348

00010d74 <strncmp@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #20, 20	; 0x14000
   10d7c:	ldr	pc, [ip, #832]!	; 0x340

00010d80 <abort@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #20, 20	; 0x14000
   10d88:	ldr	pc, [ip, #824]!	; 0x338

Disassembly of section .text:

00010d8c <.text>:
   10d8c:	mov	fp, #0
   10d90:	mov	lr, #0
   10d94:	pop	{r1}		; (ldr r1, [sp], #4)
   10d98:	mov	r2, sp
   10d9c:	push	{r2}		; (str r2, [sp, #-4]!)
   10da0:	push	{r0}		; (str r0, [sp, #-4]!)
   10da4:	ldr	ip, [pc, #16]	; 10dbc <abort@plt+0x3c>
   10da8:	push	{ip}		; (str ip, [sp, #-4]!)
   10dac:	ldr	r0, [pc, #12]	; 10dc0 <abort@plt+0x40>
   10db0:	ldr	r3, [pc, #12]	; 10dc4 <abort@plt+0x44>
   10db4:	bl	10c90 <__libc_start_main@plt>
   10db8:	bl	10d80 <abort@plt>
   10dbc:	muleq	r1, r8, r6
   10dc0:	andeq	r1, r1, r0, asr #3
   10dc4:	andeq	r4, r1, r8, lsr r6
   10dc8:	ldr	r3, [pc, #20]	; 10de4 <abort@plt+0x64>
   10dcc:	ldr	r2, [pc, #20]	; 10de8 <abort@plt+0x68>
   10dd0:	add	r3, pc, r3
   10dd4:	ldr	r2, [r3, r2]
   10dd8:	cmp	r2, #0
   10ddc:	bxeq	lr
   10de0:	b	10ca8 <__gmon_start__@plt>
   10de4:	andeq	r4, r1, r8, lsr #4
   10de8:	andeq	r0, r0, r4, asr #1
   10dec:	ldr	r3, [pc, #28]	; 10e10 <abort@plt+0x90>
   10df0:	ldr	r0, [pc, #28]	; 10e14 <abort@plt+0x94>
   10df4:	sub	r3, r3, r0
   10df8:	cmp	r3, #6
   10dfc:	bxls	lr
   10e00:	ldr	r3, [pc, #16]	; 10e18 <abort@plt+0x98>
   10e04:	cmp	r3, #0
   10e08:	bxeq	lr
   10e0c:	bx	r3
   10e10:	andeq	r5, r2, fp, lsl r1
   10e14:	andeq	r5, r2, r8, lsl r1
   10e18:	andeq	r0, r0, r0
   10e1c:	ldr	r1, [pc, #36]	; 10e48 <abort@plt+0xc8>
   10e20:	ldr	r0, [pc, #36]	; 10e4c <abort@plt+0xcc>
   10e24:	sub	r1, r1, r0
   10e28:	asr	r1, r1, #2
   10e2c:	add	r1, r1, r1, lsr #31
   10e30:	asrs	r1, r1, #1
   10e34:	bxeq	lr
   10e38:	ldr	r3, [pc, #16]	; 10e50 <abort@plt+0xd0>
   10e3c:	cmp	r3, #0
   10e40:	bxeq	lr
   10e44:	bx	r3
   10e48:	andeq	r5, r2, r8, lsl r1
   10e4c:	andeq	r5, r2, r8, lsl r1
   10e50:	andeq	r0, r0, r0
   10e54:	push	{r4, lr}
   10e58:	ldr	r4, [pc, #24]	; 10e78 <abort@plt+0xf8>
   10e5c:	ldrb	r3, [r4]
   10e60:	cmp	r3, #0
   10e64:	popne	{r4, pc}
   10e68:	bl	10dec <abort@plt+0x6c>
   10e6c:	mov	r3, #1
   10e70:	strb	r3, [r4]
   10e74:	pop	{r4, pc}
   10e78:	andeq	r5, r2, r4, lsr r1
   10e7c:	ldr	r0, [pc, #40]	; 10eac <abort@plt+0x12c>
   10e80:	ldr	r3, [r0]
   10e84:	cmp	r3, #0
   10e88:	bne	10e90 <abort@plt+0x110>
   10e8c:	b	10e1c <abort@plt+0x9c>
   10e90:	ldr	r3, [pc, #24]	; 10eb0 <abort@plt+0x130>
   10e94:	cmp	r3, #0
   10e98:	beq	10e8c <abort@plt+0x10c>
   10e9c:	push	{r4, lr}
   10ea0:	blx	r3
   10ea4:	pop	{r4, lr}
   10ea8:	b	10e1c <abort@plt+0x9c>
   10eac:	andeq	r4, r2, r4, lsl pc
   10eb0:	andeq	r0, r0, r0
   10eb4:	push	{lr}		; (str lr, [sp, #-4]!)
   10eb8:	sub	sp, sp, #60	; 0x3c
   10ebc:	subs	r6, r0, #0
   10ec0:	beq	10efc <abort@plt+0x17c>
   10ec4:	ldr	r3, [pc, #680]	; 11174 <abort@plt+0x3f4>
   10ec8:	ldr	r4, [r3]
   10ecc:	mov	r2, #5
   10ed0:	ldr	r1, [pc, #672]	; 11178 <abort@plt+0x3f8>
   10ed4:	mov	r0, #0
   10ed8:	bl	10bf4 <dcgettext@plt>
   10edc:	ldr	r3, [pc, #664]	; 1117c <abort@plt+0x3fc>
   10ee0:	ldr	r3, [r3]
   10ee4:	mov	r2, r0
   10ee8:	mov	r1, #1
   10eec:	mov	r0, r4
   10ef0:	bl	10d20 <__fprintf_chk@plt>
   10ef4:	mov	r0, r6
   10ef8:	bl	10ccc <exit@plt>
   10efc:	mov	r2, #5
   10f00:	ldr	r1, [pc, #632]	; 11180 <abort@plt+0x400>
   10f04:	mov	r0, #0
   10f08:	bl	10bf4 <dcgettext@plt>
   10f0c:	ldr	r3, [pc, #616]	; 1117c <abort@plt+0x3fc>
   10f10:	ldr	r2, [r3]
   10f14:	mov	r1, r0
   10f18:	mov	r0, #1
   10f1c:	bl	10d08 <__printf_chk@plt>
   10f20:	mov	r2, #5
   10f24:	ldr	r1, [pc, #600]	; 11184 <abort@plt+0x404>
   10f28:	mov	r0, #0
   10f2c:	bl	10bf4 <dcgettext@plt>
   10f30:	ldr	r4, [pc, #592]	; 11188 <abort@plt+0x408>
   10f34:	ldr	r1, [r4]
   10f38:	bl	10b70 <fputs_unlocked@plt>
   10f3c:	mov	r2, #5
   10f40:	ldr	r1, [pc, #580]	; 1118c <abort@plt+0x40c>
   10f44:	mov	r0, #0
   10f48:	bl	10bf4 <dcgettext@plt>
   10f4c:	ldr	r1, [r4]
   10f50:	bl	10b70 <fputs_unlocked@plt>
   10f54:	mov	r2, #5
   10f58:	ldr	r1, [pc, #560]	; 11190 <abort@plt+0x410>
   10f5c:	mov	r0, #0
   10f60:	bl	10bf4 <dcgettext@plt>
   10f64:	ldr	r1, [r4]
   10f68:	bl	10b70 <fputs_unlocked@plt>
   10f6c:	mov	ip, sp
   10f70:	ldr	lr, [pc, #540]	; 11194 <abort@plt+0x414>
   10f74:	ldm	lr!, {r0, r1, r2, r3}
   10f78:	stmia	ip!, {r0, r1, r2, r3}
   10f7c:	ldm	lr!, {r0, r1, r2, r3}
   10f80:	stmia	ip!, {r0, r1, r2, r3}
   10f84:	ldm	lr!, {r0, r1, r2, r3}
   10f88:	stmia	ip!, {r0, r1, r2, r3}
   10f8c:	ldm	lr, {r0, r1}
   10f90:	stm	ip, {r0, r1}
   10f94:	ldr	r1, [sp]
   10f98:	cmp	r1, #0
   10f9c:	moveq	r4, sp
   10fa0:	beq	10fc8 <abort@plt+0x248>
   10fa4:	mov	r4, sp
   10fa8:	ldr	r5, [pc, #488]	; 11198 <abort@plt+0x418>
   10fac:	mov	r0, r5
   10fb0:	bl	10b88 <strcmp@plt>
   10fb4:	cmp	r0, #0
   10fb8:	beq	10fc8 <abort@plt+0x248>
   10fbc:	ldr	r1, [r4, #8]!
   10fc0:	cmp	r1, #0
   10fc4:	bne	10fac <abort@plt+0x22c>
   10fc8:	ldr	r4, [r4, #4]
   10fcc:	cmp	r4, #0
   10fd0:	beq	110e4 <abort@plt+0x364>
   10fd4:	mov	r2, #5
   10fd8:	ldr	r1, [pc, #444]	; 1119c <abort@plt+0x41c>
   10fdc:	mov	r0, #0
   10fe0:	bl	10bf4 <dcgettext@plt>
   10fe4:	ldr	r3, [pc, #436]	; 111a0 <abort@plt+0x420>
   10fe8:	ldr	r2, [pc, #436]	; 111a4 <abort@plt+0x424>
   10fec:	mov	r1, r0
   10ff0:	mov	r0, #1
   10ff4:	bl	10d08 <__printf_chk@plt>
   10ff8:	mov	r1, #0
   10ffc:	mov	r0, #5
   11000:	bl	10d44 <setlocale@plt>
   11004:	cmp	r0, #0
   11008:	beq	11020 <abort@plt+0x2a0>
   1100c:	mov	r2, #3
   11010:	ldr	r1, [pc, #400]	; 111a8 <abort@plt+0x428>
   11014:	bl	10d74 <strncmp@plt>
   11018:	cmp	r0, #0
   1101c:	bne	11080 <abort@plt+0x300>
   11020:	mov	r2, #5
   11024:	ldr	r1, [pc, #384]	; 111ac <abort@plt+0x42c>
   11028:	mov	r0, #0
   1102c:	bl	10bf4 <dcgettext@plt>
   11030:	ldr	r5, [pc, #352]	; 11198 <abort@plt+0x418>
   11034:	mov	r3, r5
   11038:	ldr	r2, [pc, #352]	; 111a0 <abort@plt+0x420>
   1103c:	mov	r1, r0
   11040:	mov	r0, #1
   11044:	bl	10d08 <__printf_chk@plt>
   11048:	mov	r2, #5
   1104c:	ldr	r1, [pc, #348]	; 111b0 <abort@plt+0x430>
   11050:	mov	r0, #0
   11054:	bl	10bf4 <dcgettext@plt>
   11058:	mov	r1, r0
   1105c:	ldr	r2, [pc, #336]	; 111b4 <abort@plt+0x434>
   11060:	ldr	r3, [pc, #336]	; 111b8 <abort@plt+0x438>
   11064:	cmp	r4, r5
   11068:	movne	r3, r2
   1106c:	mov	r2, r4
   11070:	mov	r0, #1
   11074:	bl	10d08 <__printf_chk@plt>
   11078:	b	10ef4 <abort@plt+0x174>
   1107c:	ldr	r4, [pc, #276]	; 11198 <abort@plt+0x418>
   11080:	mov	r2, #5
   11084:	ldr	r1, [pc, #304]	; 111bc <abort@plt+0x43c>
   11088:	mov	r0, #0
   1108c:	bl	10bf4 <dcgettext@plt>
   11090:	ldr	r3, [pc, #240]	; 11188 <abort@plt+0x408>
   11094:	ldr	r1, [r3]
   11098:	bl	10b70 <fputs_unlocked@plt>
   1109c:	b	11020 <abort@plt+0x2a0>
   110a0:	mov	r2, #5
   110a4:	ldr	r1, [pc, #256]	; 111ac <abort@plt+0x42c>
   110a8:	mov	r0, #0
   110ac:	bl	10bf4 <dcgettext@plt>
   110b0:	ldr	r4, [pc, #224]	; 11198 <abort@plt+0x418>
   110b4:	mov	r3, r4
   110b8:	ldr	r2, [pc, #224]	; 111a0 <abort@plt+0x420>
   110bc:	mov	r1, r0
   110c0:	mov	r0, #1
   110c4:	bl	10d08 <__printf_chk@plt>
   110c8:	mov	r2, #5
   110cc:	ldr	r1, [pc, #220]	; 111b0 <abort@plt+0x430>
   110d0:	mov	r0, #0
   110d4:	bl	10bf4 <dcgettext@plt>
   110d8:	mov	r1, r0
   110dc:	ldr	r3, [pc, #212]	; 111b8 <abort@plt+0x438>
   110e0:	b	1106c <abort@plt+0x2ec>
   110e4:	mov	r2, #5
   110e8:	ldr	r1, [pc, #172]	; 1119c <abort@plt+0x41c>
   110ec:	mov	r0, #0
   110f0:	bl	10bf4 <dcgettext@plt>
   110f4:	ldr	r3, [pc, #164]	; 111a0 <abort@plt+0x420>
   110f8:	ldr	r2, [pc, #164]	; 111a4 <abort@plt+0x424>
   110fc:	mov	r1, r0
   11100:	mov	r0, #1
   11104:	bl	10d08 <__printf_chk@plt>
   11108:	mov	r1, #0
   1110c:	mov	r0, #5
   11110:	bl	10d44 <setlocale@plt>
   11114:	cmp	r0, #0
   11118:	beq	110a0 <abort@plt+0x320>
   1111c:	mov	r2, #3
   11120:	ldr	r1, [pc, #128]	; 111a8 <abort@plt+0x428>
   11124:	bl	10d74 <strncmp@plt>
   11128:	cmp	r0, #0
   1112c:	bne	1107c <abort@plt+0x2fc>
   11130:	mov	r2, #5
   11134:	ldr	r1, [pc, #112]	; 111ac <abort@plt+0x42c>
   11138:	mov	r0, #0
   1113c:	bl	10bf4 <dcgettext@plt>
   11140:	ldr	r4, [pc, #80]	; 11198 <abort@plt+0x418>
   11144:	mov	r3, r4
   11148:	ldr	r2, [pc, #80]	; 111a0 <abort@plt+0x420>
   1114c:	mov	r1, r0
   11150:	mov	r0, #1
   11154:	bl	10d08 <__printf_chk@plt>
   11158:	mov	r2, #5
   1115c:	ldr	r1, [pc, #76]	; 111b0 <abort@plt+0x430>
   11160:	mov	r0, #0
   11164:	bl	10bf4 <dcgettext@plt>
   11168:	mov	r1, r0
   1116c:	ldr	r3, [pc, #68]	; 111b8 <abort@plt+0x438>
   11170:	b	1106c <abort@plt+0x2ec>
   11174:	andeq	r5, r2, r8, lsr #2
   11178:	andeq	r4, r1, r0, lsl #14
   1117c:	andeq	r5, r2, r0, asr #2
   11180:	andeq	r4, r1, r8, lsr #14
   11184:	andeq	r4, r1, r0, asr #14
   11188:	andeq	r5, r2, ip, lsr #2
   1118c:	muleq	r1, r8, r7
   11190:	andeq	r4, r1, r8, asr #15
   11194:	andeq	r4, r1, r0, asr #13
   11198:	strdeq	r4, [r1], -r8
   1119c:	andeq	r4, r1, r0, lsl #16
   111a0:	andeq	r4, r1, r8, lsl r8
   111a4:	andeq	r4, r1, r0, asr #16
   111a8:	andeq	r4, r1, r0, asr r8
   111ac:	muleq	r1, ip, r8
   111b0:			; <UNDEFINED> instruction: 0x000148b8
   111b4:	muleq	r1, r4, r7
   111b8:	andeq	r4, r1, r8, asr r9
   111bc:	andeq	r4, r1, r4, asr r8
   111c0:	push	{r4, r5, r6, lr}
   111c4:	sub	sp, sp, #24
   111c8:	mov	r5, r0
   111cc:	mov	r4, r1
   111d0:	ldr	r0, [r1]
   111d4:	bl	115dc <abort@plt+0x85c>
   111d8:	ldr	r1, [pc, #300]	; 1130c <abort@plt+0x58c>
   111dc:	mov	r0, #6
   111e0:	bl	10d44 <setlocale@plt>
   111e4:	ldr	r6, [pc, #292]	; 11310 <abort@plt+0x590>
   111e8:	ldr	r1, [pc, #292]	; 11314 <abort@plt+0x594>
   111ec:	mov	r0, r6
   111f0:	bl	10d68 <bindtextdomain@plt>
   111f4:	mov	r0, r6
   111f8:	bl	10c0c <textdomain@plt>
   111fc:	ldr	r0, [pc, #276]	; 11318 <abort@plt+0x598>
   11200:	bl	1469c <abort@plt+0x391c>
   11204:	mov	r3, #0
   11208:	str	r3, [sp, #16]
   1120c:	ldr	r3, [pc, #264]	; 1131c <abort@plt+0x59c>
   11210:	str	r3, [sp, #12]
   11214:	ldr	r3, [pc, #260]	; 11320 <abort@plt+0x5a0>
   11218:	str	r3, [sp, #8]
   1121c:	mov	r3, #1
   11220:	str	r3, [sp, #4]
   11224:	ldr	r3, [pc, #248]	; 11324 <abort@plt+0x5a4>
   11228:	ldr	r3, [r3]
   1122c:	str	r3, [sp]
   11230:	ldr	r3, [pc, #240]	; 11328 <abort@plt+0x5a8>
   11234:	ldr	r2, [pc, #240]	; 1132c <abort@plt+0x5ac>
   11238:	mov	r1, r4
   1123c:	mov	r0, r5
   11240:	bl	1150c <abort@plt+0x78c>
   11244:	ldr	r3, [pc, #228]	; 11330 <abort@plt+0x5b0>
   11248:	ldr	r3, [r3]
   1124c:	cmp	r5, r3
   11250:	bne	11298 <abort@plt+0x518>
   11254:	bl	10ce4 <__errno_location@plt>
   11258:	mov	r5, r0
   1125c:	mov	r3, #0
   11260:	str	r3, [r0]
   11264:	bl	10c18 <geteuid@plt>
   11268:	mov	r4, r0
   1126c:	cmn	r0, #1
   11270:	beq	112d8 <abort@plt+0x558>
   11274:	mov	r0, r4
   11278:	bl	10b94 <getpwuid@plt>
   1127c:	cmp	r0, #0
   11280:	beq	112e4 <abort@plt+0x564>
   11284:	ldr	r0, [r0]
   11288:	bl	10c78 <puts@plt>
   1128c:	mov	r0, #0
   11290:	add	sp, sp, #24
   11294:	pop	{r4, r5, r6, pc}
   11298:	mov	r2, #5
   1129c:	ldr	r1, [pc, #144]	; 11334 <abort@plt+0x5b4>
   112a0:	mov	r0, #0
   112a4:	bl	10bf4 <dcgettext@plt>
   112a8:	mov	r5, r0
   112ac:	ldr	r3, [pc, #124]	; 11330 <abort@plt+0x5b0>
   112b0:	ldr	r3, [r3]
   112b4:	ldr	r0, [r4, r3, lsl #2]
   112b8:	bl	1312c <abort@plt+0x23ac>
   112bc:	mov	r3, r0
   112c0:	mov	r2, r5
   112c4:	mov	r1, #0
   112c8:	mov	r0, r1
   112cc:	bl	10c6c <error@plt>
   112d0:	mov	r0, #1
   112d4:	bl	10eb4 <abort@plt+0x134>
   112d8:	ldr	r3, [r5]
   112dc:	cmp	r3, #0
   112e0:	beq	11274 <abort@plt+0x4f4>
   112e4:	ldr	r5, [r5]
   112e8:	mov	r2, #5
   112ec:	ldr	r1, [pc, #68]	; 11338 <abort@plt+0x5b8>
   112f0:	mov	r0, #0
   112f4:	bl	10bf4 <dcgettext@plt>
   112f8:	mov	r3, r4
   112fc:	mov	r2, r0
   11300:	mov	r1, r5
   11304:	mov	r0, #1
   11308:	bl	10c6c <error@plt>
   1130c:	muleq	r1, r4, r7
   11310:	andeq	r4, r1, r4, asr #16
   11314:	andeq	r4, r1, ip, ror #17
   11318:	andeq	r1, r1, ip, asr r3
   1131c:	andeq	r4, r1, r4, lsl #18
   11320:			; <UNDEFINED> instruction: 0x00010eb4
   11324:	ldrdeq	r5, [r2], -r0
   11328:	andeq	r4, r1, r0, asr #16
   1132c:	strdeq	r4, [r1], -r8
   11330:	andeq	r5, r2, r0, lsr #2
   11334:	andeq	r4, r1, r8, lsl r9
   11338:	andeq	r4, r1, ip, lsr #18
   1133c:	ldr	r3, [pc, #4]	; 11348 <abort@plt+0x5c8>
   11340:	str	r0, [r3]
   11344:	bx	lr
   11348:	andeq	r5, r2, r8, lsr r1
   1134c:	ldr	r3, [pc, #4]	; 11358 <abort@plt+0x5d8>
   11350:	strb	r0, [r3, #4]
   11354:	bx	lr
   11358:	andeq	r5, r2, r8, lsr r1
   1135c:	push	{r4, r5, r6, lr}
   11360:	sub	sp, sp, #8
   11364:	ldr	r3, [pc, #200]	; 11434 <abort@plt+0x6b4>
   11368:	ldr	r0, [r3]
   1136c:	bl	13d78 <abort@plt+0x2ff8>
   11370:	cmp	r0, #0
   11374:	beq	11398 <abort@plt+0x618>
   11378:	ldr	r3, [pc, #184]	; 11438 <abort@plt+0x6b8>
   1137c:	ldrb	r3, [r3, #4]
   11380:	cmp	r3, #0
   11384:	beq	113b4 <abort@plt+0x634>
   11388:	bl	10ce4 <__errno_location@plt>
   1138c:	ldr	r3, [r0]
   11390:	cmp	r3, #32
   11394:	bne	113b4 <abort@plt+0x634>
   11398:	ldr	r3, [pc, #156]	; 1143c <abort@plt+0x6bc>
   1139c:	ldr	r0, [r3]
   113a0:	bl	13d78 <abort@plt+0x2ff8>
   113a4:	cmp	r0, #0
   113a8:	bne	11428 <abort@plt+0x6a8>
   113ac:	add	sp, sp, #8
   113b0:	pop	{r4, r5, r6, pc}
   113b4:	mov	r2, #5
   113b8:	ldr	r1, [pc, #128]	; 11440 <abort@plt+0x6c0>
   113bc:	mov	r0, #0
   113c0:	bl	10bf4 <dcgettext@plt>
   113c4:	mov	r4, r0
   113c8:	ldr	r3, [pc, #104]	; 11438 <abort@plt+0x6b8>
   113cc:	ldr	r5, [r3]
   113d0:	cmp	r5, #0
   113d4:	beq	1140c <abort@plt+0x68c>
   113d8:	bl	10ce4 <__errno_location@plt>
   113dc:	ldr	r6, [r0]
   113e0:	mov	r0, r5
   113e4:	bl	12fa4 <abort@plt+0x2224>
   113e8:	str	r4, [sp]
   113ec:	mov	r3, r0
   113f0:	ldr	r2, [pc, #76]	; 11444 <abort@plt+0x6c4>
   113f4:	mov	r1, r6
   113f8:	mov	r0, #0
   113fc:	bl	10c6c <error@plt>
   11400:	ldr	r3, [pc, #64]	; 11448 <abort@plt+0x6c8>
   11404:	ldr	r0, [r3]
   11408:	bl	10bb8 <_exit@plt>
   1140c:	bl	10ce4 <__errno_location@plt>
   11410:	mov	r3, r4
   11414:	ldr	r2, [pc, #48]	; 1144c <abort@plt+0x6cc>
   11418:	ldr	r1, [r0]
   1141c:	mov	r0, #0
   11420:	bl	10c6c <error@plt>
   11424:	b	11400 <abort@plt+0x680>
   11428:	ldr	r3, [pc, #24]	; 11448 <abort@plt+0x6c8>
   1142c:	ldr	r0, [r3]
   11430:	bl	10bb8 <_exit@plt>
   11434:	andeq	r5, r2, ip, lsr #2
   11438:	andeq	r5, r2, r8, lsr r1
   1143c:	andeq	r5, r2, r8, lsr #2
   11440:	andeq	r4, r1, ip, asr #19
   11444:	ldrdeq	r4, [r1], -r8
   11448:	ldrdeq	r5, [r2], -r4
   1144c:	ldrdeq	r4, [r1], -ip
   11450:	push	{r4, r5, r6, lr}
   11454:	sub	sp, sp, #16
   11458:	ldr	ip, [pc, #152]	; 114f8 <abort@plt+0x778>
   1145c:	ldr	r4, [ip]
   11460:	mov	lr, #0
   11464:	str	lr, [ip]
   11468:	cmp	r0, #2
   1146c:	beq	1148c <abort@plt+0x70c>
   11470:	ldr	r3, [pc, #128]	; 114f8 <abort@plt+0x778>
   11474:	str	r4, [r3]
   11478:	mov	r2, #0
   1147c:	ldr	r3, [pc, #120]	; 114fc <abort@plt+0x77c>
   11480:	str	r2, [r3]
   11484:	add	sp, sp, #16
   11488:	pop	{r4, r5, r6, pc}
   1148c:	mov	r6, r3
   11490:	mov	r5, r2
   11494:	str	lr, [sp]
   11498:	ldr	r3, [pc, #96]	; 11500 <abort@plt+0x780>
   1149c:	ldr	r2, [pc, #96]	; 11504 <abort@plt+0x784>
   114a0:	bl	10cb4 <getopt_long@plt>
   114a4:	cmn	r0, #1
   114a8:	beq	11470 <abort@plt+0x6f0>
   114ac:	cmp	r0, #104	; 0x68
   114b0:	beq	114e8 <abort@plt+0x768>
   114b4:	cmp	r0, #118	; 0x76
   114b8:	bne	11470 <abort@plt+0x6f0>
   114bc:	add	r3, sp, #40	; 0x28
   114c0:	str	r3, [sp, #12]
   114c4:	ldr	r2, [pc, #60]	; 11508 <abort@plt+0x788>
   114c8:	ldr	r0, [r2]
   114cc:	str	r3, [sp]
   114d0:	ldr	r3, [sp, #32]
   114d4:	mov	r2, r6
   114d8:	mov	r1, r5
   114dc:	bl	135ac <abort@plt+0x282c>
   114e0:	mov	r0, #0
   114e4:	bl	10ccc <exit@plt>
   114e8:	mov	r0, #0
   114ec:	ldr	r3, [sp, #36]	; 0x24
   114f0:	blx	r3
   114f4:	b	11470 <abort@plt+0x6f0>
   114f8:	andeq	r5, r2, r0, lsr r1
   114fc:	andeq	r5, r2, r0, lsr #2
   11500:	andeq	r4, r1, r0, ror #19
   11504:	andeq	r4, r1, r0, lsl sl
   11508:	andeq	r5, r2, ip, lsr #2
   1150c:	push	{r4, r5, r6, lr}
   11510:	sub	sp, sp, #16
   11514:	mov	r5, r2
   11518:	mov	r6, r3
   1151c:	ldr	r3, [pc, #160]	; 115c4 <abort@plt+0x844>
   11520:	ldr	r4, [r3]
   11524:	mov	r2, #1
   11528:	str	r2, [r3]
   1152c:	mov	r3, #0
   11530:	str	r3, [sp]
   11534:	ldr	r3, [pc, #140]	; 115c8 <abort@plt+0x848>
   11538:	ldr	ip, [pc, #140]	; 115cc <abort@plt+0x84c>
   1153c:	ldr	r2, [pc, #140]	; 115d0 <abort@plt+0x850>
   11540:	ldrb	lr, [sp, #36]	; 0x24
   11544:	cmp	lr, #0
   11548:	moveq	r2, ip
   1154c:	bl	10cb4 <getopt_long@plt>
   11550:	cmn	r0, #1
   11554:	beq	11588 <abort@plt+0x808>
   11558:	cmp	r0, #104	; 0x68
   1155c:	beq	1157c <abort@plt+0x7fc>
   11560:	cmp	r0, #118	; 0x76
   11564:	beq	11598 <abort@plt+0x818>
   11568:	ldr	r3, [pc, #100]	; 115d4 <abort@plt+0x854>
   1156c:	ldr	r0, [r3]
   11570:	ldr	r3, [sp, #40]	; 0x28
   11574:	blx	r3
   11578:	b	11588 <abort@plt+0x808>
   1157c:	mov	r0, #0
   11580:	ldr	r3, [sp, #40]	; 0x28
   11584:	blx	r3
   11588:	ldr	r3, [pc, #52]	; 115c4 <abort@plt+0x844>
   1158c:	str	r4, [r3]
   11590:	add	sp, sp, #16
   11594:	pop	{r4, r5, r6, pc}
   11598:	add	r3, sp, #44	; 0x2c
   1159c:	str	r3, [sp, #12]
   115a0:	ldr	r2, [pc, #48]	; 115d8 <abort@plt+0x858>
   115a4:	ldr	r0, [r2]
   115a8:	str	r3, [sp]
   115ac:	ldr	r3, [sp, #32]
   115b0:	mov	r2, r6
   115b4:	mov	r1, r5
   115b8:	bl	135ac <abort@plt+0x282c>
   115bc:	mov	r0, #0
   115c0:	bl	10ccc <exit@plt>
   115c4:	andeq	r5, r2, r0, lsr r1
   115c8:	andeq	r4, r1, r0, ror #19
   115cc:	andeq	r4, r1, r0, lsl sl
   115d0:	muleq	r1, r4, r7
   115d4:	ldrdeq	r5, [r2], -r4
   115d8:	andeq	r5, r2, ip, lsr #2
   115dc:	push	{r4, r5, r6, lr}
   115e0:	subs	r4, r0, #0
   115e4:	beq	1165c <abort@plt+0x8dc>
   115e8:	mov	r1, #47	; 0x2f
   115ec:	mov	r0, r4
   115f0:	bl	10d50 <strrchr@plt>
   115f4:	cmp	r0, #0
   115f8:	addne	r5, r0, #1
   115fc:	moveq	r5, r4
   11600:	sub	r3, r5, r4
   11604:	cmp	r3, #6
   11608:	ble	11648 <abort@plt+0x8c8>
   1160c:	mov	r2, #7
   11610:	ldr	r1, [pc, #96]	; 11678 <abort@plt+0x8f8>
   11614:	sub	r0, r5, #7
   11618:	bl	10d74 <strncmp@plt>
   1161c:	cmp	r0, #0
   11620:	bne	11648 <abort@plt+0x8c8>
   11624:	mov	r2, #3
   11628:	ldr	r1, [pc, #76]	; 1167c <abort@plt+0x8fc>
   1162c:	mov	r0, r5
   11630:	bl	10d74 <strncmp@plt>
   11634:	cmp	r0, #0
   11638:	addeq	r4, r5, #3
   1163c:	ldreq	r3, [pc, #60]	; 11680 <abort@plt+0x900>
   11640:	streq	r4, [r3]
   11644:	movne	r4, r5
   11648:	ldr	r3, [pc, #52]	; 11684 <abort@plt+0x904>
   1164c:	str	r4, [r3]
   11650:	ldr	r3, [pc, #48]	; 11688 <abort@plt+0x908>
   11654:	str	r4, [r3]
   11658:	pop	{r4, r5, r6, pc}
   1165c:	ldr	r3, [pc, #40]	; 1168c <abort@plt+0x90c>
   11660:	ldr	r3, [r3]
   11664:	mov	r2, #55	; 0x37
   11668:	mov	r1, #1
   1166c:	ldr	r0, [pc, #28]	; 11690 <abort@plt+0x910>
   11670:	bl	10c30 <fwrite@plt>
   11674:	bl	10d80 <abort@plt>
   11678:	andeq	r4, r1, ip, asr sl
   1167c:	andeq	r4, r1, r4, ror #20
   11680:	andeq	r5, r2, r8, lsl r1
   11684:	andeq	r5, r2, r0, asr #2
   11688:	andeq	r5, r2, ip, lsl r1
   1168c:	andeq	r5, r2, r8, lsr #2
   11690:	andeq	r4, r1, r4, lsr #20
   11694:	push	{r4, r5, r6, lr}
   11698:	mov	r5, r0
   1169c:	mov	r4, r1
   116a0:	mov	r2, #48	; 0x30
   116a4:	mov	r1, #0
   116a8:	bl	10cfc <memset@plt>
   116ac:	cmp	r4, #10
   116b0:	beq	116c0 <abort@plt+0x940>
   116b4:	str	r4, [r5]
   116b8:	mov	r0, r5
   116bc:	pop	{r4, r5, r6, pc}
   116c0:	bl	10d80 <abort@plt>
   116c4:	push	{r4, r5, r6, lr}
   116c8:	mov	r4, r0
   116cc:	mov	r5, r1
   116d0:	mov	r2, #5
   116d4:	mov	r1, r0
   116d8:	mov	r0, #0
   116dc:	bl	10bf4 <dcgettext@plt>
   116e0:	cmp	r4, r0
   116e4:	popne	{r4, r5, r6, pc}
   116e8:	bl	13ffc <abort@plt+0x327c>
   116ec:	ldrb	r3, [r0]
   116f0:	bic	r3, r3, #32
   116f4:	cmp	r3, #85	; 0x55
   116f8:	beq	11774 <abort@plt+0x9f4>
   116fc:	cmp	r3, #71	; 0x47
   11700:	bne	117d0 <abort@plt+0xa50>
   11704:	ldrb	r3, [r0, #1]
   11708:	bic	r3, r3, #32
   1170c:	cmp	r3, #66	; 0x42
   11710:	bne	117d0 <abort@plt+0xa50>
   11714:	ldrb	r3, [r0, #2]
   11718:	cmp	r3, #49	; 0x31
   1171c:	bne	117d0 <abort@plt+0xa50>
   11720:	ldrb	r3, [r0, #3]
   11724:	cmp	r3, #56	; 0x38
   11728:	bne	117d0 <abort@plt+0xa50>
   1172c:	ldrb	r3, [r0, #4]
   11730:	cmp	r3, #48	; 0x30
   11734:	bne	117d0 <abort@plt+0xa50>
   11738:	ldrb	r3, [r0, #5]
   1173c:	cmp	r3, #51	; 0x33
   11740:	bne	117d0 <abort@plt+0xa50>
   11744:	ldrb	r3, [r0, #6]
   11748:	cmp	r3, #48	; 0x30
   1174c:	bne	117d0 <abort@plt+0xa50>
   11750:	ldrb	r3, [r0, #7]
   11754:	cmp	r3, #0
   11758:	bne	117d0 <abort@plt+0xa50>
   1175c:	ldrb	r2, [r4]
   11760:	ldr	r3, [pc, #124]	; 117e4 <abort@plt+0xa64>
   11764:	ldr	r0, [pc, #124]	; 117e8 <abort@plt+0xa68>
   11768:	cmp	r2, #96	; 0x60
   1176c:	movne	r0, r3
   11770:	pop	{r4, r5, r6, pc}
   11774:	ldrb	r3, [r0, #1]
   11778:	bic	r3, r3, #32
   1177c:	cmp	r3, #84	; 0x54
   11780:	bne	117d0 <abort@plt+0xa50>
   11784:	ldrb	r3, [r0, #2]
   11788:	bic	r3, r3, #32
   1178c:	cmp	r3, #70	; 0x46
   11790:	bne	117d0 <abort@plt+0xa50>
   11794:	ldrb	r3, [r0, #3]
   11798:	cmp	r3, #45	; 0x2d
   1179c:	bne	117d0 <abort@plt+0xa50>
   117a0:	ldrb	r3, [r0, #4]
   117a4:	cmp	r3, #56	; 0x38
   117a8:	bne	117d0 <abort@plt+0xa50>
   117ac:	ldrb	r3, [r0, #5]
   117b0:	cmp	r3, #0
   117b4:	bne	117d0 <abort@plt+0xa50>
   117b8:	ldrb	r2, [r4]
   117bc:	ldr	r3, [pc, #40]	; 117ec <abort@plt+0xa6c>
   117c0:	ldr	r0, [pc, #40]	; 117f0 <abort@plt+0xa70>
   117c4:	cmp	r2, #96	; 0x60
   117c8:	movne	r0, r3
   117cc:	pop	{r4, r5, r6, pc}
   117d0:	ldr	r3, [pc, #28]	; 117f4 <abort@plt+0xa74>
   117d4:	ldr	r0, [pc, #28]	; 117f8 <abort@plt+0xa78>
   117d8:	cmp	r5, #9
   117dc:	movne	r0, r3
   117e0:	pop	{r4, r5, r6, pc}
   117e4:	andeq	r4, r1, r0, asr #21
   117e8:	andeq	r4, r1, ip, asr #21
   117ec:			; <UNDEFINED> instruction: 0x00014abc
   117f0:	ldrdeq	r4, [r1], -r0
   117f4:	andeq	r4, r1, r4, asr #21
   117f8:	andeq	r4, r1, r8, asr #21
   117fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11800:	sub	sp, sp, #116	; 0x74
   11804:	str	r0, [sp, #36]	; 0x24
   11808:	mov	sl, r1
   1180c:	str	r2, [sp, #52]	; 0x34
   11810:	str	r3, [sp, #28]
   11814:	ldr	r8, [sp, #152]	; 0x98
   11818:	bl	10c48 <__ctype_get_mb_cur_max@plt>
   1181c:	str	r0, [sp, #84]	; 0x54
   11820:	ldr	r3, [sp, #156]	; 0x9c
   11824:	lsr	r3, r3, #1
   11828:	and	r3, r3, #1
   1182c:	str	r3, [sp, #32]
   11830:	mov	r3, #1
   11834:	str	r3, [sp, #40]	; 0x28
   11838:	mov	r3, #0
   1183c:	str	r3, [sp, #80]	; 0x50
   11840:	str	r3, [sp, #44]	; 0x2c
   11844:	str	r3, [sp, #48]	; 0x30
   11848:	str	r3, [sp, #60]	; 0x3c
   1184c:	str	r3, [sp, #72]	; 0x48
   11850:	str	r3, [sp, #76]	; 0x4c
   11854:	mov	r7, sl
   11858:	mov	sl, r8
   1185c:	cmp	sl, #10
   11860:	ldrls	pc, [pc, sl, lsl #2]
   11864:	b	11a1c <abort@plt+0xc9c>
   11868:	andeq	r1, r1, ip, asr #17
   1186c:	muleq	r1, ip, r8
   11870:	strdeq	r1, [r1], -r8
   11874:	muleq	r1, r4, r8
   11878:	andeq	r1, r1, ip, lsr #19
   1187c:	ldrdeq	r1, [r1], -ip
   11880:	andeq	r2, r1, r8, asr #18
   11884:	andeq	r1, r1, r0, lsr #20
   11888:	andeq	r1, r1, r8, lsl r9
   1188c:	andeq	r1, r1, r8, lsl r9
   11890:	andeq	r1, r1, r8, lsl r9
   11894:	mov	r3, #1
   11898:	str	r3, [sp, #48]	; 0x30
   1189c:	mov	r3, #1
   118a0:	str	r3, [sp, #32]
   118a4:	str	r3, [sp, #60]	; 0x3c
   118a8:	ldr	r3, [pc, #4068]	; 12894 <abort@plt+0x1b14>
   118ac:	str	r3, [sp, #72]	; 0x48
   118b0:	mov	fp, #0
   118b4:	mov	sl, #2
   118b8:	mov	r6, #0
   118bc:	ldr	r3, [sp, #48]	; 0x30
   118c0:	eor	r3, r3, #1
   118c4:	str	r3, [sp, #68]	; 0x44
   118c8:	b	121b0 <abort@plt+0x1430>
   118cc:	mov	r3, #0
   118d0:	str	r3, [sp, #32]
   118d4:	mov	fp, r3
   118d8:	b	118b8 <abort@plt+0xb38>
   118dc:	ldr	r3, [sp, #32]
   118e0:	cmp	r3, #0
   118e4:	bne	11a38 <abort@plt+0xcb8>
   118e8:	cmp	r7, #0
   118ec:	beq	11a58 <abort@plt+0xcd8>
   118f0:	ldr	r3, [sp, #36]	; 0x24
   118f4:	mov	r2, #34	; 0x22
   118f8:	strb	r2, [r3]
   118fc:	mov	r3, #1
   11900:	str	r3, [sp, #48]	; 0x30
   11904:	str	r3, [sp, #60]	; 0x3c
   11908:	ldr	r3, [pc, #3980]	; 1289c <abort@plt+0x1b1c>
   1190c:	str	r3, [sp, #72]	; 0x48
   11910:	mov	fp, #1
   11914:	b	118b8 <abort@plt+0xb38>
   11918:	cmp	sl, #10
   1191c:	beq	11940 <abort@plt+0xbc0>
   11920:	mov	r1, sl
   11924:	ldr	r0, [pc, #3948]	; 12898 <abort@plt+0x1b18>
   11928:	bl	116c4 <abort@plt+0x944>
   1192c:	str	r0, [sp, #164]	; 0xa4
   11930:	mov	r1, sl
   11934:	ldr	r0, [pc, #3928]	; 12894 <abort@plt+0x1b14>
   11938:	bl	116c4 <abort@plt+0x944>
   1193c:	str	r0, [sp, #168]	; 0xa8
   11940:	ldr	r3, [sp, #32]
   11944:	cmp	r3, #0
   11948:	movne	fp, #0
   1194c:	bne	11984 <abort@plt+0xc04>
   11950:	ldr	r3, [sp, #164]	; 0xa4
   11954:	ldrb	r3, [r3]
   11958:	cmp	r3, #0
   1195c:	beq	119a4 <abort@plt+0xc24>
   11960:	ldr	r2, [sp, #164]	; 0xa4
   11964:	mov	fp, #0
   11968:	ldr	r1, [sp, #36]	; 0x24
   1196c:	cmp	r7, fp
   11970:	strbhi	r3, [r1, fp]
   11974:	add	fp, fp, #1
   11978:	ldrb	r3, [r2, #1]!
   1197c:	cmp	r3, #0
   11980:	bne	1196c <abort@plt+0xbec>
   11984:	ldr	r0, [sp, #168]	; 0xa8
   11988:	bl	10cd8 <strlen@plt>
   1198c:	str	r0, [sp, #60]	; 0x3c
   11990:	ldr	r3, [sp, #168]	; 0xa8
   11994:	str	r3, [sp, #72]	; 0x48
   11998:	mov	r3, #1
   1199c:	str	r3, [sp, #48]	; 0x30
   119a0:	b	118b8 <abort@plt+0xb38>
   119a4:	mov	fp, #0
   119a8:	b	11984 <abort@plt+0xc04>
   119ac:	ldr	r3, [sp, #32]
   119b0:	cmp	r3, #0
   119b4:	bne	11a74 <abort@plt+0xcf4>
   119b8:	mov	r3, #1
   119bc:	str	r3, [sp, #48]	; 0x30
   119c0:	cmp	r7, #0
   119c4:	beq	11a90 <abort@plt+0xd10>
   119c8:	ldr	r3, [sp, #36]	; 0x24
   119cc:	mov	r2, #39	; 0x27
   119d0:	strb	r2, [r3]
   119d4:	mov	r3, #0
   119d8:	str	r3, [sp, #32]
   119dc:	mov	r3, #1
   119e0:	str	r3, [sp, #60]	; 0x3c
   119e4:	ldr	r3, [pc, #3752]	; 12894 <abort@plt+0x1b14>
   119e8:	str	r3, [sp, #72]	; 0x48
   119ec:	mov	fp, #1
   119f0:	mov	sl, #2
   119f4:	b	118b8 <abort@plt+0xb38>
   119f8:	ldr	r3, [sp, #32]
   119fc:	cmp	r3, #0
   11a00:	beq	119c0 <abort@plt+0xc40>
   11a04:	mov	r3, #1
   11a08:	str	r3, [sp, #60]	; 0x3c
   11a0c:	ldr	r3, [pc, #3712]	; 12894 <abort@plt+0x1b14>
   11a10:	str	r3, [sp, #72]	; 0x48
   11a14:	mov	fp, #0
   11a18:	b	118b8 <abort@plt+0xb38>
   11a1c:	bl	10d80 <abort@plt>
   11a20:	mov	r3, #0
   11a24:	str	r3, [sp, #32]
   11a28:	mov	r3, #1
   11a2c:	str	r3, [sp, #48]	; 0x30
   11a30:	mov	fp, #0
   11a34:	b	118b8 <abort@plt+0xb38>
   11a38:	ldr	r3, [sp, #32]
   11a3c:	str	r3, [sp, #48]	; 0x30
   11a40:	mov	r3, #1
   11a44:	str	r3, [sp, #60]	; 0x3c
   11a48:	ldr	r3, [pc, #3660]	; 1289c <abort@plt+0x1b1c>
   11a4c:	str	r3, [sp, #72]	; 0x48
   11a50:	mov	fp, #0
   11a54:	b	118b8 <abort@plt+0xb38>
   11a58:	mov	r3, #1
   11a5c:	str	r3, [sp, #48]	; 0x30
   11a60:	str	r3, [sp, #60]	; 0x3c
   11a64:	ldr	r3, [pc, #3632]	; 1289c <abort@plt+0x1b1c>
   11a68:	str	r3, [sp, #72]	; 0x48
   11a6c:	mov	fp, #1
   11a70:	b	118b8 <abort@plt+0xb38>
   11a74:	mov	r3, #1
   11a78:	str	r3, [sp, #60]	; 0x3c
   11a7c:	ldr	r3, [pc, #3600]	; 12894 <abort@plt+0x1b14>
   11a80:	str	r3, [sp, #72]	; 0x48
   11a84:	mov	fp, #0
   11a88:	mov	sl, #2
   11a8c:	b	118b8 <abort@plt+0xb38>
   11a90:	mov	r3, #0
   11a94:	str	r3, [sp, #32]
   11a98:	mov	r3, #1
   11a9c:	str	r3, [sp, #60]	; 0x3c
   11aa0:	ldr	r3, [pc, #3564]	; 12894 <abort@plt+0x1b14>
   11aa4:	str	r3, [sp, #72]	; 0x48
   11aa8:	mov	fp, #1
   11aac:	mov	sl, #2
   11ab0:	b	118b8 <abort@plt+0xb38>
   11ab4:	mov	r3, #0
   11ab8:	str	r3, [sp, #56]	; 0x38
   11abc:	ldr	r3, [sp, #52]	; 0x34
   11ac0:	add	r2, r3, r6
   11ac4:	str	r2, [sp, #64]	; 0x40
   11ac8:	ldrb	r4, [r3, r6]
   11acc:	cmp	r4, #126	; 0x7e
   11ad0:	ldrls	pc, [pc, r4, lsl #2]
   11ad4:	b	12310 <abort@plt+0x1590>
   11ad8:	strdeq	r1, [r1], -r0
   11adc:	andeq	r2, r1, r0, lsl r3
   11ae0:	andeq	r2, r1, r0, lsl r3
   11ae4:	andeq	r2, r1, r0, lsl r3
   11ae8:	andeq	r2, r1, r0, lsl r3
   11aec:	andeq	r2, r1, r0, lsl r3
   11af0:	andeq	r2, r1, r0, lsl r3
   11af4:	andeq	r2, r1, ip, asr #32
   11af8:	andeq	r1, r1, r8, ror #25
   11afc:	andeq	r2, r1, r4
   11b00:	strdeq	r1, [r1], -ip
   11b04:	andeq	r1, r1, ip, ror #30
   11b08:	andeq	r1, r1, r4, ror #30
   11b0c:	andeq	r1, r1, r0, ror #25
   11b10:	andeq	r2, r1, r0, lsl r3
   11b14:	andeq	r2, r1, r0, lsl r3
   11b18:	andeq	r2, r1, r0, lsl r3
   11b1c:	andeq	r2, r1, r0, lsl r3
   11b20:	andeq	r2, r1, r0, lsl r3
   11b24:	andeq	r2, r1, r0, lsl r3
   11b28:	andeq	r2, r1, r0, lsl r3
   11b2c:	andeq	r2, r1, r0, lsl r3
   11b30:	andeq	r2, r1, r0, lsl r3
   11b34:	andeq	r2, r1, r0, lsl r3
   11b38:	andeq	r2, r1, r0, lsl r3
   11b3c:	andeq	r2, r1, r0, lsl r3
   11b40:	andeq	r2, r1, r0, lsl r3
   11b44:	andeq	r2, r1, r0, lsl r3
   11b48:	andeq	r2, r1, r0, lsl r3
   11b4c:	andeq	r2, r1, r0, lsl r3
   11b50:	andeq	r2, r1, r0, lsl r3
   11b54:	andeq	r2, r1, r0, lsl r3
   11b58:	andeq	r2, r1, r0, lsr #1
   11b5c:	muleq	r1, ip, r0
   11b60:	muleq	r1, ip, r0
   11b64:	andeq	r2, r1, r4, ror r0
   11b68:	muleq	r1, ip, r0
   11b6c:	andeq	r2, r1, r4, ror #13
   11b70:	muleq	r1, ip, r0
   11b74:	andeq	r2, r1, r4, ror r2
   11b78:	muleq	r1, ip, r0
   11b7c:	muleq	r1, ip, r0
   11b80:	muleq	r1, ip, r0
   11b84:	andeq	r2, r1, r4, ror #13
   11b88:	andeq	r2, r1, r4, ror #13
   11b8c:	andeq	r2, r1, r4, ror #13
   11b90:	andeq	r2, r1, r4, ror #13
   11b94:	andeq	r2, r1, r4, ror #13
   11b98:	andeq	r2, r1, r4, ror #13
   11b9c:	andeq	r2, r1, r4, ror #13
   11ba0:	andeq	r2, r1, r4, ror #13
   11ba4:	andeq	r2, r1, r4, ror #13
   11ba8:	andeq	r2, r1, r4, ror #13
   11bac:	andeq	r2, r1, r4, ror #13
   11bb0:	andeq	r2, r1, r4, ror #13
   11bb4:	andeq	r2, r1, r4, ror #13
   11bb8:	andeq	r2, r1, r4, ror #13
   11bbc:	andeq	r2, r1, r4, ror #13
   11bc0:	andeq	r2, r1, r4, ror #13
   11bc4:	muleq	r1, ip, r0
   11bc8:	muleq	r1, ip, r0
   11bcc:	muleq	r1, ip, r0
   11bd0:	muleq	r1, ip, r0
   11bd4:	strdeq	r1, [r1], -r8
   11bd8:	andeq	r2, r1, r0, lsl r3
   11bdc:	andeq	r2, r1, r4, ror #13
   11be0:	andeq	r2, r1, r4, ror #13
   11be4:	andeq	r2, r1, r4, ror #13
   11be8:	andeq	r2, r1, r4, ror #13
   11bec:	andeq	r2, r1, r4, ror #13
   11bf0:	andeq	r2, r1, r4, ror #13
   11bf4:	andeq	r2, r1, r4, ror #13
   11bf8:	andeq	r2, r1, r4, ror #13
   11bfc:	andeq	r2, r1, r4, ror #13
   11c00:	andeq	r2, r1, r4, ror #13
   11c04:	andeq	r2, r1, r4, ror #13
   11c08:	andeq	r2, r1, r4, ror #13
   11c0c:	andeq	r2, r1, r4, ror #13
   11c10:	andeq	r2, r1, r4, ror #13
   11c14:	andeq	r2, r1, r4, ror #13
   11c18:	andeq	r2, r1, r4, ror #13
   11c1c:	andeq	r2, r1, r4, ror #13
   11c20:	andeq	r2, r1, r4, ror #13
   11c24:	andeq	r2, r1, r4, ror #13
   11c28:	andeq	r2, r1, r4, ror #13
   11c2c:	andeq	r2, r1, r4, ror #13
   11c30:	andeq	r2, r1, r4, ror #13
   11c34:	andeq	r2, r1, r4, ror #13
   11c38:	andeq	r2, r1, r4, ror #13
   11c3c:	andeq	r2, r1, r4, ror #13
   11c40:	andeq	r2, r1, r4, ror #13
   11c44:	muleq	r1, ip, r0
   11c48:	andeq	r1, r1, r4, ror pc
   11c4c:	andeq	r2, r1, r4, ror #13
   11c50:	muleq	r1, ip, r0
   11c54:	andeq	r2, r1, r4, ror #13
   11c58:	muleq	r1, ip, r0
   11c5c:	andeq	r2, r1, r4, ror #13
   11c60:	andeq	r2, r1, r4, ror #13
   11c64:	andeq	r2, r1, r4, ror #13
   11c68:	andeq	r2, r1, r4, ror #13
   11c6c:	andeq	r2, r1, r4, ror #13
   11c70:	andeq	r2, r1, r4, ror #13
   11c74:	andeq	r2, r1, r4, ror #13
   11c78:	andeq	r2, r1, r4, ror #13
   11c7c:	andeq	r2, r1, r4, ror #13
   11c80:	andeq	r2, r1, r4, ror #13
   11c84:	andeq	r2, r1, r4, ror #13
   11c88:	andeq	r2, r1, r4, ror #13
   11c8c:	andeq	r2, r1, r4, ror #13
   11c90:	andeq	r2, r1, r4, ror #13
   11c94:	andeq	r2, r1, r4, ror #13
   11c98:	andeq	r2, r1, r4, ror #13
   11c9c:	andeq	r2, r1, r4, ror #13
   11ca0:	andeq	r2, r1, r4, ror #13
   11ca4:	andeq	r2, r1, r4, ror #13
   11ca8:	andeq	r2, r1, r4, ror #13
   11cac:	andeq	r2, r1, r4, ror #13
   11cb0:	andeq	r2, r1, r4, ror #13
   11cb4:	andeq	r2, r1, r4, ror #13
   11cb8:	andeq	r2, r1, r4, ror #13
   11cbc:	andeq	r2, r1, r4, ror #13
   11cc0:	andeq	r2, r1, r4, ror #13
   11cc4:	andeq	r2, r1, r4, asr r0
   11cc8:	muleq	r1, ip, r0
   11ccc:	andeq	r2, r1, r4, asr r0
   11cd0:	andeq	r2, r1, r4, ror r0
   11cd4:	mov	r3, #0
   11cd8:	str	r3, [sp, #56]	; 0x38
   11cdc:	b	11abc <abort@plt+0xd3c>
   11ce0:	mov	r3, #114	; 0x72
   11ce4:	b	12008 <abort@plt+0x1288>
   11ce8:	mov	r3, #98	; 0x62
   11cec:	b	12020 <abort@plt+0x12a0>
   11cf0:	ldr	r3, [sp, #48]	; 0x30
   11cf4:	cmp	r3, #0
   11cf8:	beq	11de0 <abort@plt+0x1060>
   11cfc:	ldr	r3, [sp, #32]
   11d00:	cmp	r3, #0
   11d04:	bne	12868 <abort@plt+0x1ae8>
   11d08:	ldr	r3, [sp, #44]	; 0x2c
   11d0c:	eor	r3, r3, #1
   11d10:	cmp	sl, #2
   11d14:	movne	r3, #0
   11d18:	andeq	r3, r3, #1
   11d1c:	cmp	r3, #0
   11d20:	moveq	r2, fp
   11d24:	beq	11d68 <abort@plt+0xfe8>
   11d28:	cmp	r7, fp
   11d2c:	ldrhi	r2, [sp, #36]	; 0x24
   11d30:	movhi	r1, #39	; 0x27
   11d34:	strbhi	r1, [r2, fp]
   11d38:	add	r2, fp, #1
   11d3c:	cmp	r7, r2
   11d40:	ldrhi	r1, [sp, #36]	; 0x24
   11d44:	movhi	r0, #36	; 0x24
   11d48:	strbhi	r0, [r1, r2]
   11d4c:	add	r2, fp, #2
   11d50:	cmp	r7, r2
   11d54:	ldrhi	r1, [sp, #36]	; 0x24
   11d58:	movhi	r0, #39	; 0x27
   11d5c:	strbhi	r0, [r1, r2]
   11d60:	add	r2, fp, #3
   11d64:	str	r3, [sp, #44]	; 0x2c
   11d68:	cmp	r7, r2
   11d6c:	ldrhi	r3, [sp, #36]	; 0x24
   11d70:	movhi	r1, #92	; 0x5c
   11d74:	strbhi	r1, [r3, r2]
   11d78:	add	fp, r2, #1
   11d7c:	cmp	r5, #0
   11d80:	beq	126ec <abort@plt+0x196c>
   11d84:	add	r3, r6, #1
   11d88:	ldr	r1, [sp, #28]
   11d8c:	cmp	r1, r3
   11d90:	bls	126fc <abort@plt+0x197c>
   11d94:	ldr	r1, [sp, #52]	; 0x34
   11d98:	ldrb	r3, [r1, r3]
   11d9c:	sub	r3, r3, #48	; 0x30
   11da0:	uxtb	r3, r3
   11da4:	cmp	r3, #9
   11da8:	bhi	12708 <abort@plt+0x1988>
   11dac:	cmp	r7, fp
   11db0:	movhi	r3, #48	; 0x30
   11db4:	ldrhi	r1, [sp, #36]	; 0x24
   11db8:	strbhi	r3, [r1, fp]
   11dbc:	add	r3, r2, #2
   11dc0:	cmp	r7, r3
   11dc4:	movhi	r1, #48	; 0x30
   11dc8:	ldrhi	r0, [sp, #36]	; 0x24
   11dcc:	strbhi	r1, [r0, r3]
   11dd0:	add	fp, r2, #3
   11dd4:	ldr	r8, [sp, #32]
   11dd8:	mov	r4, #48	; 0x30
   11ddc:	b	120b8 <abort@plt+0x1338>
   11de0:	ldr	r3, [sp, #156]	; 0x9c
   11de4:	tst	r3, #1
   11de8:	bne	121ac <abort@plt+0x142c>
   11dec:	ldr	r5, [sp, #48]	; 0x30
   11df0:	mov	r8, r5
   11df4:	b	120b8 <abort@plt+0x1338>
   11df8:	cmp	sl, #2
   11dfc:	beq	11e14 <abort@plt+0x1094>
   11e00:	cmp	sl, #5
   11e04:	beq	11e2c <abort@plt+0x10ac>
   11e08:	mov	r8, #0
   11e0c:	mov	r5, r8
   11e10:	b	120b8 <abort@plt+0x1338>
   11e14:	ldr	r3, [sp, #32]
   11e18:	cmp	r3, #0
   11e1c:	bne	1287c <abort@plt+0x1afc>
   11e20:	mov	r8, r3
   11e24:	mov	r5, r3
   11e28:	b	120b8 <abort@plt+0x1338>
   11e2c:	ldr	r3, [sp, #156]	; 0x9c
   11e30:	tst	r3, #4
   11e34:	beq	12714 <abort@plt+0x1994>
   11e38:	add	r3, r6, #2
   11e3c:	ldr	r2, [sp, #28]
   11e40:	cmp	r2, r3
   11e44:	bls	12720 <abort@plt+0x19a0>
   11e48:	ldr	r2, [sp, #52]	; 0x34
   11e4c:	add	r2, r2, r6
   11e50:	ldrb	r2, [r2, #1]
   11e54:	cmp	r2, #63	; 0x3f
   11e58:	movne	r8, #0
   11e5c:	movne	r5, r8
   11e60:	bne	120b8 <abort@plt+0x1338>
   11e64:	ldr	r2, [sp, #52]	; 0x34
   11e68:	ldrb	r2, [r2, r3]
   11e6c:	sub	r1, r2, #33	; 0x21
   11e70:	cmp	r1, #29
   11e74:	ldrls	pc, [pc, r1, lsl #2]
   11e78:	b	1272c <abort@plt+0x19ac>
   11e7c:	strdeq	r1, [r1], -r4
   11e80:	andeq	r2, r1, ip, lsr #14
   11e84:	andeq	r2, r1, ip, lsr #14
   11e88:	andeq	r2, r1, ip, lsr #14
   11e8c:	andeq	r2, r1, ip, lsr #14
   11e90:	andeq	r2, r1, ip, lsr #14
   11e94:	strdeq	r1, [r1], -r4
   11e98:	strdeq	r1, [r1], -r4
   11e9c:	strdeq	r1, [r1], -r4
   11ea0:	andeq	r2, r1, ip, lsr #14
   11ea4:	andeq	r2, r1, ip, lsr #14
   11ea8:	andeq	r2, r1, ip, lsr #14
   11eac:	strdeq	r1, [r1], -r4
   11eb0:	andeq	r2, r1, ip, lsr #14
   11eb4:	strdeq	r1, [r1], -r4
   11eb8:	andeq	r2, r1, ip, lsr #14
   11ebc:	andeq	r2, r1, ip, lsr #14
   11ec0:	andeq	r2, r1, ip, lsr #14
   11ec4:	andeq	r2, r1, ip, lsr #14
   11ec8:	andeq	r2, r1, ip, lsr #14
   11ecc:	andeq	r2, r1, ip, lsr #14
   11ed0:	andeq	r2, r1, ip, lsr #14
   11ed4:	andeq	r2, r1, ip, lsr #14
   11ed8:	andeq	r2, r1, ip, lsr #14
   11edc:	andeq	r2, r1, ip, lsr #14
   11ee0:	andeq	r2, r1, ip, lsr #14
   11ee4:	andeq	r2, r1, ip, lsr #14
   11ee8:	strdeq	r1, [r1], -r4
   11eec:	strdeq	r1, [r1], -r4
   11ef0:	strdeq	r1, [r1], -r4
   11ef4:	ldr	r1, [sp, #32]
   11ef8:	cmp	r1, #0
   11efc:	bne	1293c <abort@plt+0x1bbc>
   11f00:	cmp	r7, fp
   11f04:	movhi	r1, #63	; 0x3f
   11f08:	ldrhi	r0, [sp, #36]	; 0x24
   11f0c:	strbhi	r1, [r0, fp]
   11f10:	add	r1, fp, #1
   11f14:	cmp	r7, r1
   11f18:	ldrhi	r0, [sp, #36]	; 0x24
   11f1c:	movhi	ip, #34	; 0x22
   11f20:	strbhi	ip, [r0, r1]
   11f24:	add	r1, fp, #2
   11f28:	cmp	r7, r1
   11f2c:	ldrhi	r0, [sp, #36]	; 0x24
   11f30:	movhi	ip, #34	; 0x22
   11f34:	strbhi	ip, [r0, r1]
   11f38:	add	r1, fp, #3
   11f3c:	cmp	r7, r1
   11f40:	movhi	r0, #63	; 0x3f
   11f44:	ldrhi	ip, [sp, #36]	; 0x24
   11f48:	strbhi	r0, [ip, r1]
   11f4c:	add	fp, fp, #4
   11f50:	ldr	r5, [sp, #32]
   11f54:	mov	r8, r5
   11f58:	mov	r4, r2
   11f5c:	mov	r6, r3
   11f60:	b	120b8 <abort@plt+0x1338>
   11f64:	mov	r3, #102	; 0x66
   11f68:	b	12020 <abort@plt+0x12a0>
   11f6c:	mov	r3, #118	; 0x76
   11f70:	b	12020 <abort@plt+0x12a0>
   11f74:	cmp	sl, #2
   11f78:	beq	11fe4 <abort@plt+0x1264>
   11f7c:	ldr	r3, [sp, #48]	; 0x30
   11f80:	ldr	r2, [sp, #32]
   11f84:	and	r3, r3, r2
   11f88:	tst	r9, r3
   11f8c:	moveq	r3, r4
   11f90:	beq	12020 <abort@plt+0x12a0>
   11f94:	mov	r8, #0
   11f98:	mov	r5, r8
   11f9c:	eor	r5, r5, #1
   11fa0:	ldr	r3, [sp, #44]	; 0x2c
   11fa4:	and	r5, r5, r3
   11fa8:	tst	r5, #255	; 0xff
   11fac:	beq	1218c <abort@plt+0x140c>
   11fb0:	cmp	r7, fp
   11fb4:	ldrhi	r3, [sp, #36]	; 0x24
   11fb8:	movhi	r2, #39	; 0x27
   11fbc:	strbhi	r2, [r3, fp]
   11fc0:	add	r3, fp, #1
   11fc4:	cmp	r7, r3
   11fc8:	ldrhi	r2, [sp, #36]	; 0x24
   11fcc:	movhi	r1, #39	; 0x27
   11fd0:	strbhi	r1, [r2, r3]
   11fd4:	add	fp, fp, #2
   11fd8:	mov	r3, #0
   11fdc:	str	r3, [sp, #44]	; 0x2c
   11fe0:	b	1218c <abort@plt+0x140c>
   11fe4:	ldr	r3, [sp, #32]
   11fe8:	cmp	r3, #0
   11fec:	bne	12888 <abort@plt+0x1b08>
   11ff0:	mov	r8, r3
   11ff4:	mov	r5, r3
   11ff8:	b	11f9c <abort@plt+0x121c>
   11ffc:	mov	r3, #110	; 0x6e
   12000:	b	12008 <abort@plt+0x1288>
   12004:	mov	r3, #116	; 0x74
   12008:	ldr	r2, [sp, #32]
   1200c:	cmp	sl, #2
   12010:	movne	r2, #0
   12014:	andeq	r2, r2, #1
   12018:	cmp	r2, #0
   1201c:	bne	12040 <abort@plt+0x12c0>
   12020:	ldr	r2, [sp, #48]	; 0x30
   12024:	cmp	r2, #0
   12028:	moveq	r8, r2
   1202c:	moveq	r5, r2
   12030:	beq	120b8 <abort@plt+0x1338>
   12034:	mov	r4, r3
   12038:	mov	r8, #0
   1203c:	b	12110 <abort@plt+0x1390>
   12040:	mov	r8, sl
   12044:	mov	sl, r7
   12048:	b	128b4 <abort@plt+0x1b34>
   1204c:	mov	r3, #97	; 0x61
   12050:	b	12020 <abort@plt+0x12a0>
   12054:	ldr	r3, [sp, #28]
   12058:	cmn	r3, #1
   1205c:	beq	12088 <abort@plt+0x1308>
   12060:	ldr	r3, [sp, #28]
   12064:	subs	r3, r3, #1
   12068:	movne	r3, #1
   1206c:	cmp	r3, #0
   12070:	bne	12738 <abort@plt+0x19b8>
   12074:	cmp	r6, #0
   12078:	beq	120a0 <abort@plt+0x1320>
   1207c:	mov	r8, #0
   12080:	mov	r5, r8
   12084:	b	120b8 <abort@plt+0x1338>
   12088:	ldr	r3, [sp, #52]	; 0x34
   1208c:	ldrb	r3, [r3, #1]
   12090:	adds	r3, r3, #0
   12094:	movne	r3, #1
   12098:	b	1206c <abort@plt+0x12ec>
   1209c:	mov	r8, #0
   120a0:	ldr	r5, [sp, #32]
   120a4:	cmp	sl, #2
   120a8:	movne	r5, #0
   120ac:	andeq	r5, r5, #1
   120b0:	cmp	r5, #0
   120b4:	bne	12268 <abort@plt+0x14e8>
   120b8:	ldr	r3, [sp, #68]	; 0x44
   120bc:	cmp	sl, #2
   120c0:	orreq	r3, r3, #1
   120c4:	eor	r3, r3, #1
   120c8:	ldr	r2, [sp, #32]
   120cc:	orr	r3, r2, r3
   120d0:	tst	r3, #255	; 0xff
   120d4:	beq	12104 <abort@plt+0x1384>
   120d8:	ldr	r3, [sp, #160]	; 0xa0
   120dc:	cmp	r3, #0
   120e0:	beq	12104 <abort@plt+0x1384>
   120e4:	lsr	r2, r4, #5
   120e8:	uxtb	r2, r2
   120ec:	and	r3, r4, #31
   120f0:	ldr	r1, [sp, #160]	; 0xa0
   120f4:	ldr	r2, [r1, r2, lsl #2]
   120f8:	lsr	r3, r2, r3
   120fc:	tst	r3, #1
   12100:	bne	12110 <abort@plt+0x1390>
   12104:	ldr	r3, [sp, #56]	; 0x38
   12108:	cmp	r3, #0
   1210c:	beq	11f9c <abort@plt+0x121c>
   12110:	ldr	r3, [sp, #32]
   12114:	cmp	r3, #0
   12118:	bne	12924 <abort@plt+0x1ba4>
   1211c:	ldr	r3, [sp, #44]	; 0x2c
   12120:	eor	r3, r3, #1
   12124:	cmp	sl, #2
   12128:	movne	r3, #0
   1212c:	andeq	r3, r3, #1
   12130:	cmp	r3, #0
   12134:	beq	12178 <abort@plt+0x13f8>
   12138:	cmp	r7, fp
   1213c:	ldrhi	r2, [sp, #36]	; 0x24
   12140:	movhi	r1, #39	; 0x27
   12144:	strbhi	r1, [r2, fp]
   12148:	add	r2, fp, #1
   1214c:	cmp	r7, r2
   12150:	ldrhi	r1, [sp, #36]	; 0x24
   12154:	movhi	r0, #36	; 0x24
   12158:	strbhi	r0, [r1, r2]
   1215c:	add	r2, fp, #2
   12160:	cmp	r7, r2
   12164:	ldrhi	r1, [sp, #36]	; 0x24
   12168:	movhi	r0, #39	; 0x27
   1216c:	strbhi	r0, [r1, r2]
   12170:	add	fp, fp, #3
   12174:	str	r3, [sp, #44]	; 0x2c
   12178:	cmp	r7, fp
   1217c:	ldrhi	r3, [sp, #36]	; 0x24
   12180:	movhi	r2, #92	; 0x5c
   12184:	strbhi	r2, [r3, fp]
   12188:	add	fp, fp, #1
   1218c:	cmp	fp, r7
   12190:	ldrcc	r3, [sp, #36]	; 0x24
   12194:	strbcc	r4, [r3, fp]
   12198:	add	fp, fp, #1
   1219c:	ldr	r3, [sp, #40]	; 0x28
   121a0:	cmp	r8, #0
   121a4:	moveq	r3, #0
   121a8:	str	r3, [sp, #40]	; 0x28
   121ac:	add	r6, r6, #1
   121b0:	ldr	r3, [sp, #28]
   121b4:	cmn	r3, #1
   121b8:	beq	12744 <abort@plt+0x19c4>
   121bc:	ldr	r3, [sp, #28]
   121c0:	subs	r8, r3, r6
   121c4:	movne	r8, #1
   121c8:	cmp	r8, #0
   121cc:	beq	12758 <abort@plt+0x19d8>
   121d0:	ldr	r5, [sp, #48]	; 0x30
   121d4:	cmp	sl, #2
   121d8:	moveq	r5, #0
   121dc:	andne	r5, r5, #1
   121e0:	ldr	r3, [sp, #60]	; 0x3c
   121e4:	adds	r9, r3, #0
   121e8:	movne	r9, #1
   121ec:	ands	r2, r5, r9
   121f0:	str	r2, [sp, #56]	; 0x38
   121f4:	beq	11abc <abort@plt+0xd3c>
   121f8:	add	r4, r6, r3
   121fc:	ldr	r2, [sp, #28]
   12200:	cmp	r3, #1
   12204:	movls	r3, #0
   12208:	movhi	r3, #1
   1220c:	cmn	r2, #1
   12210:	movne	r3, #0
   12214:	cmp	r3, #0
   12218:	beq	12228 <abort@plt+0x14a8>
   1221c:	ldr	r0, [sp, #52]	; 0x34
   12220:	bl	10cd8 <strlen@plt>
   12224:	str	r0, [sp, #28]
   12228:	ldr	r3, [sp, #28]
   1222c:	cmp	r3, r4
   12230:	bcc	11ab4 <abort@plt+0xd34>
   12234:	ldr	r2, [sp, #60]	; 0x3c
   12238:	ldr	r1, [sp, #72]	; 0x48
   1223c:	ldr	r3, [sp, #52]	; 0x34
   12240:	add	r0, r3, r6
   12244:	bl	10bdc <memcmp@plt>
   12248:	cmp	r0, #0
   1224c:	bne	11cd4 <abort@plt+0xf54>
   12250:	ldr	r3, [sp, #32]
   12254:	cmp	r3, #0
   12258:	beq	11abc <abort@plt+0xd3c>
   1225c:	mov	r8, sl
   12260:	mov	sl, r7
   12264:	b	128b4 <abort@plt+0x1b34>
   12268:	mov	r8, sl
   1226c:	mov	sl, r7
   12270:	b	128b4 <abort@plt+0x1b34>
   12274:	cmp	sl, #2
   12278:	strne	r8, [sp, #80]	; 0x50
   1227c:	movne	r5, #0
   12280:	bne	120b8 <abort@plt+0x1338>
   12284:	ldr	r3, [sp, #32]
   12288:	cmp	r3, #0
   1228c:	bne	128a0 <abort@plt+0x1b20>
   12290:	ldr	r2, [sp, #76]	; 0x4c
   12294:	adds	r3, r7, #0
   12298:	movne	r3, #1
   1229c:	cmp	r2, #0
   122a0:	movne	r3, #0
   122a4:	cmp	r3, #0
   122a8:	movne	r3, #0
   122ac:	bne	122dc <abort@plt+0x155c>
   122b0:	cmp	r7, fp
   122b4:	ldrhi	r3, [sp, #36]	; 0x24
   122b8:	movhi	r2, #39	; 0x27
   122bc:	strbhi	r2, [r3, fp]
   122c0:	add	r3, fp, #1
   122c4:	cmp	r7, r3
   122c8:	ldrhi	r2, [sp, #36]	; 0x24
   122cc:	movhi	r1, #92	; 0x5c
   122d0:	strbhi	r1, [r2, r3]
   122d4:	mov	r3, r7
   122d8:	ldr	r7, [sp, #76]	; 0x4c
   122dc:	add	r2, fp, #2
   122e0:	cmp	r2, r3
   122e4:	ldrcc	r1, [sp, #36]	; 0x24
   122e8:	movcc	r0, #39	; 0x27
   122ec:	strbcc	r0, [r1, r2]
   122f0:	add	fp, fp, #3
   122f4:	ldr	r2, [sp, #32]
   122f8:	mov	r5, r2
   122fc:	str	r8, [sp, #80]	; 0x50
   12300:	str	r2, [sp, #44]	; 0x2c
   12304:	str	r7, [sp, #76]	; 0x4c
   12308:	mov	r7, r3
   1230c:	b	120b8 <abort@plt+0x1338>
   12310:	ldr	r5, [sp, #84]	; 0x54
   12314:	cmp	r5, #1
   12318:	beq	12348 <abort@plt+0x15c8>
   1231c:	mov	r3, #0
   12320:	str	r3, [sp, #104]	; 0x68
   12324:	str	r3, [sp, #108]	; 0x6c
   12328:	ldr	r3, [sp, #28]
   1232c:	cmn	r3, #1
   12330:	beq	1237c <abort@plt+0x15fc>
   12334:	mov	r3, #0
   12338:	str	r4, [sp, #88]	; 0x58
   1233c:	str	fp, [sp, #92]	; 0x5c
   12340:	mov	fp, r3
   12344:	b	124a4 <abort@plt+0x1724>
   12348:	bl	10cc0 <__ctype_b_loc@plt>
   1234c:	ldr	r2, [r0]
   12350:	lsl	r3, r4, #1
   12354:	ldrh	r8, [r2, r3]
   12358:	lsr	r8, r8, #14
   1235c:	and	r8, r8, #1
   12360:	mov	r2, r5
   12364:	eor	r5, r8, #1
   12368:	ldr	r3, [sp, #48]	; 0x30
   1236c:	and	r5, r5, r3
   12370:	ands	r5, r5, #255	; 0xff
   12374:	beq	120b8 <abort@plt+0x1338>
   12378:	b	1253c <abort@plt+0x17bc>
   1237c:	ldr	r0, [sp, #52]	; 0x34
   12380:	bl	10cd8 <strlen@plt>
   12384:	str	r0, [sp, #28]
   12388:	b	12334 <abort@plt+0x15b4>
   1238c:	mov	r2, fp
   12390:	mov	r1, r4
   12394:	ldr	r4, [sp, #88]	; 0x58
   12398:	ldr	fp, [sp, #92]	; 0x5c
   1239c:	ldr	r0, [sp, #28]
   123a0:	cmp	r0, r5
   123a4:	bls	12570 <abort@plt+0x17f0>
   123a8:	ldrb	r3, [r1]
   123ac:	cmp	r3, #0
   123b0:	beq	12578 <abort@plt+0x17f8>
   123b4:	mov	r3, r1
   123b8:	add	r2, r2, #1
   123bc:	add	r1, r6, r2
   123c0:	cmp	r0, r1
   123c4:	bls	12580 <abort@plt+0x1800>
   123c8:	ldrb	r1, [r3, #1]!
   123cc:	cmp	r1, #0
   123d0:	bne	123b8 <abort@plt+0x1638>
   123d4:	mov	r8, #0
   123d8:	b	12534 <abort@plt+0x17b4>
   123dc:	cmp	r4, r5
   123e0:	beq	12480 <abort@plt+0x1700>
   123e4:	ldrb	r3, [r4, #1]!
   123e8:	sub	r3, r3, #91	; 0x5b
   123ec:	cmp	r3, #33	; 0x21
   123f0:	ldrls	pc, [pc, r3, lsl #2]
   123f4:	b	123dc <abort@plt+0x165c>
   123f8:	andeq	r2, r1, ip, lsr #17
   123fc:	andeq	r2, r1, ip, lsr #17
   12400:	ldrdeq	r2, [r1], -ip
   12404:	andeq	r2, r1, ip, lsr #17
   12408:	ldrdeq	r2, [r1], -ip
   1240c:	andeq	r2, r1, ip, lsr #17
   12410:	ldrdeq	r2, [r1], -ip
   12414:	ldrdeq	r2, [r1], -ip
   12418:	ldrdeq	r2, [r1], -ip
   1241c:	ldrdeq	r2, [r1], -ip
   12420:	ldrdeq	r2, [r1], -ip
   12424:	ldrdeq	r2, [r1], -ip
   12428:	ldrdeq	r2, [r1], -ip
   1242c:	ldrdeq	r2, [r1], -ip
   12430:	ldrdeq	r2, [r1], -ip
   12434:	ldrdeq	r2, [r1], -ip
   12438:	ldrdeq	r2, [r1], -ip
   1243c:	ldrdeq	r2, [r1], -ip
   12440:	ldrdeq	r2, [r1], -ip
   12444:	ldrdeq	r2, [r1], -ip
   12448:	ldrdeq	r2, [r1], -ip
   1244c:	ldrdeq	r2, [r1], -ip
   12450:	ldrdeq	r2, [r1], -ip
   12454:	ldrdeq	r2, [r1], -ip
   12458:	ldrdeq	r2, [r1], -ip
   1245c:	ldrdeq	r2, [r1], -ip
   12460:	ldrdeq	r2, [r1], -ip
   12464:	ldrdeq	r2, [r1], -ip
   12468:	ldrdeq	r2, [r1], -ip
   1246c:	ldrdeq	r2, [r1], -ip
   12470:	ldrdeq	r2, [r1], -ip
   12474:	ldrdeq	r2, [r1], -ip
   12478:	ldrdeq	r2, [r1], -ip
   1247c:	andeq	r2, r1, ip, lsr #17
   12480:	ldr	r0, [sp, #100]	; 0x64
   12484:	bl	10c24 <iswprint@plt>
   12488:	cmp	r0, #0
   1248c:	moveq	r8, #0
   12490:	add	fp, fp, r9
   12494:	add	r0, sp, #104	; 0x68
   12498:	bl	10bd0 <mbsinit@plt>
   1249c:	cmp	r0, #0
   124a0:	bne	12514 <abort@plt+0x1794>
   124a4:	add	r5, r6, fp
   124a8:	ldr	r3, [sp, #52]	; 0x34
   124ac:	add	r4, r3, r5
   124b0:	add	r3, sp, #104	; 0x68
   124b4:	ldr	r2, [sp, #28]
   124b8:	sub	r2, r2, r5
   124bc:	mov	r1, r4
   124c0:	add	r0, sp, #100	; 0x64
   124c4:	bl	14030 <abort@plt+0x32b0>
   124c8:	subs	r9, r0, #0
   124cc:	beq	12588 <abort@plt+0x1808>
   124d0:	cmn	r9, #1
   124d4:	beq	12524 <abort@plt+0x17a4>
   124d8:	cmn	r9, #2
   124dc:	beq	1238c <abort@plt+0x160c>
   124e0:	ldr	r3, [sp, #32]
   124e4:	cmp	sl, #2
   124e8:	movne	r3, #0
   124ec:	andeq	r3, r3, #1
   124f0:	cmp	r3, #0
   124f4:	beq	12480 <abort@plt+0x1700>
   124f8:	cmp	r9, #1
   124fc:	bls	12480 <abort@plt+0x1700>
   12500:	sub	r3, r9, #1
   12504:	add	r5, r3, r5
   12508:	ldr	r3, [sp, #52]	; 0x34
   1250c:	add	r5, r3, r5
   12510:	b	123e4 <abort@plt+0x1664>
   12514:	ldr	r4, [sp, #88]	; 0x58
   12518:	mov	r2, fp
   1251c:	ldr	fp, [sp, #92]	; 0x5c
   12520:	b	12534 <abort@plt+0x17b4>
   12524:	ldr	r4, [sp, #88]	; 0x58
   12528:	mov	r2, fp
   1252c:	ldr	fp, [sp, #92]	; 0x5c
   12530:	mov	r8, #0
   12534:	cmp	r2, #1
   12538:	bls	12364 <abort@plt+0x15e4>
   1253c:	add	r1, r6, r2
   12540:	ldr	ip, [sp, #64]	; 0x40
   12544:	mov	r5, #0
   12548:	eor	r3, r8, #1
   1254c:	ldr	r2, [sp, #48]	; 0x30
   12550:	and	r3, r3, r2
   12554:	uxtb	r3, r3
   12558:	ldr	r9, [sp, #32]
   1255c:	ldr	lr, [sp, #44]	; 0x2c
   12560:	ldr	r2, [sp, #56]	; 0x38
   12564:	str	r8, [sp, #56]	; 0x38
   12568:	ldr	r0, [sp, #36]	; 0x24
   1256c:	b	12608 <abort@plt+0x1888>
   12570:	mov	r8, #0
   12574:	b	12534 <abort@plt+0x17b4>
   12578:	mov	r8, #0
   1257c:	b	12534 <abort@plt+0x17b4>
   12580:	mov	r8, #0
   12584:	b	12534 <abort@plt+0x17b4>
   12588:	ldr	r4, [sp, #88]	; 0x58
   1258c:	mov	r2, fp
   12590:	ldr	fp, [sp, #92]	; 0x5c
   12594:	b	12534 <abort@plt+0x17b4>
   12598:	cmp	r2, #0
   1259c:	beq	125b0 <abort@plt+0x1830>
   125a0:	cmp	r7, fp
   125a4:	movhi	r2, #92	; 0x5c
   125a8:	strbhi	r2, [r0, fp]
   125ac:	add	fp, fp, #1
   125b0:	add	r8, r6, #1
   125b4:	cmp	r1, r8
   125b8:	bls	126c0 <abort@plt+0x1940>
   125bc:	eor	r2, r5, #1
   125c0:	and	r2, r2, lr
   125c4:	ands	r2, r2, #255	; 0xff
   125c8:	beq	126dc <abort@plt+0x195c>
   125cc:	cmp	r7, fp
   125d0:	movhi	r2, #39	; 0x27
   125d4:	strbhi	r2, [r0, fp]
   125d8:	add	r2, fp, #1
   125dc:	cmp	r7, r2
   125e0:	movhi	lr, #39	; 0x27
   125e4:	strbhi	lr, [r0, r2]
   125e8:	add	fp, fp, #2
   125ec:	mov	r6, r8
   125f0:	mov	r2, r3
   125f4:	mov	lr, r3
   125f8:	cmp	r7, fp
   125fc:	strbhi	r4, [r0, fp]
   12600:	add	fp, fp, #1
   12604:	ldrb	r4, [ip, #1]!
   12608:	cmp	r3, #0
   1260c:	beq	12598 <abort@plt+0x1818>
   12610:	cmp	r9, #0
   12614:	bne	12918 <abort@plt+0x1b98>
   12618:	eor	r5, lr, #1
   1261c:	cmp	sl, #2
   12620:	movne	r5, #0
   12624:	andeq	r5, r5, #1
   12628:	cmp	r5, #0
   1262c:	beq	12664 <abort@plt+0x18e4>
   12630:	cmp	r7, fp
   12634:	movhi	lr, #39	; 0x27
   12638:	strbhi	lr, [r0, fp]
   1263c:	add	lr, fp, #1
   12640:	cmp	r7, lr
   12644:	movhi	r8, #36	; 0x24
   12648:	strbhi	r8, [r0, lr]
   1264c:	add	lr, fp, #2
   12650:	cmp	r7, lr
   12654:	movhi	r8, #39	; 0x27
   12658:	strbhi	r8, [r0, lr]
   1265c:	add	fp, fp, #3
   12660:	mov	lr, r5
   12664:	cmp	r7, fp
   12668:	movhi	r5, #92	; 0x5c
   1266c:	strbhi	r5, [r0, fp]
   12670:	add	r5, fp, #1
   12674:	cmp	r7, r5
   12678:	lsrhi	r8, r4, #6
   1267c:	addhi	r8, r8, #48	; 0x30
   12680:	strbhi	r8, [r0, r5]
   12684:	add	r8, fp, #2
   12688:	cmp	r7, r8
   1268c:	lsrhi	r5, r4, #3
   12690:	andhi	r5, r5, #7
   12694:	addhi	r5, r5, #48	; 0x30
   12698:	strbhi	r5, [r0, r8]
   1269c:	add	fp, fp, #3
   126a0:	and	r4, r4, #7
   126a4:	add	r4, r4, #48	; 0x30
   126a8:	add	r5, r6, #1
   126ac:	cmp	r1, r5
   126b0:	bls	126cc <abort@plt+0x194c>
   126b4:	mov	r6, r5
   126b8:	mov	r5, r3
   126bc:	b	125f8 <abort@plt+0x1878>
   126c0:	str	lr, [sp, #44]	; 0x2c
   126c4:	ldr	r8, [sp, #56]	; 0x38
   126c8:	b	11f9c <abort@plt+0x121c>
   126cc:	str	lr, [sp, #44]	; 0x2c
   126d0:	ldr	r8, [sp, #56]	; 0x38
   126d4:	mov	r5, r3
   126d8:	b	11f9c <abort@plt+0x121c>
   126dc:	mov	r6, r8
   126e0:	b	125f8 <abort@plt+0x1878>
   126e4:	mov	r5, #0
   126e8:	b	120b8 <abort@plt+0x1338>
   126ec:	mov	r8, r5
   126f0:	ldr	r5, [sp, #48]	; 0x30
   126f4:	mov	r4, #48	; 0x30
   126f8:	b	120b8 <abort@plt+0x1338>
   126fc:	ldr	r8, [sp, #32]
   12700:	mov	r4, #48	; 0x30
   12704:	b	120b8 <abort@plt+0x1338>
   12708:	ldr	r8, [sp, #32]
   1270c:	mov	r4, #48	; 0x30
   12710:	b	120b8 <abort@plt+0x1338>
   12714:	mov	r8, #0
   12718:	mov	r5, r8
   1271c:	b	120b8 <abort@plt+0x1338>
   12720:	mov	r8, #0
   12724:	mov	r5, r8
   12728:	b	120b8 <abort@plt+0x1338>
   1272c:	mov	r8, #0
   12730:	mov	r5, r8
   12734:	b	120b8 <abort@plt+0x1338>
   12738:	mov	r8, #0
   1273c:	mov	r5, r8
   12740:	b	120b8 <abort@plt+0x1338>
   12744:	ldr	r3, [sp, #52]	; 0x34
   12748:	ldrb	r8, [r3, r6]
   1274c:	adds	r8, r8, #0
   12750:	movne	r8, #1
   12754:	b	121c8 <abort@plt+0x1448>
   12758:	cmp	sl, #2
   1275c:	movne	r3, #0
   12760:	moveq	r3, #1
   12764:	ldr	r1, [sp, #32]
   12768:	mov	r2, r1
   1276c:	and	r2, r2, r3
   12770:	cmp	fp, #0
   12774:	movne	r2, #0
   12778:	andeq	r2, r2, #1
   1277c:	cmp	r2, #0
   12780:	bne	12930 <abort@plt+0x1bb0>
   12784:	eor	r2, r1, #1
   12788:	and	r3, r3, r2
   1278c:	ldr	r1, [sp, #80]	; 0x50
   12790:	tst	r1, r3
   12794:	beq	1280c <abort@plt+0x1a8c>
   12798:	ldr	r3, [sp, #40]	; 0x28
   1279c:	cmp	r3, #0
   127a0:	bne	127c8 <abort@plt+0x1a48>
   127a4:	ldr	r1, [sp, #76]	; 0x4c
   127a8:	clz	r3, r7
   127ac:	lsr	r3, r3, #5
   127b0:	cmp	r1, #0
   127b4:	moveq	r3, #0
   127b8:	cmp	r3, #0
   127bc:	beq	1280c <abort@plt+0x1a8c>
   127c0:	ldr	r7, [sp, #76]	; 0x4c
   127c4:	b	1185c <abort@plt+0xadc>
   127c8:	ldr	r3, [sp, #168]	; 0xa8
   127cc:	str	r3, [sp, #16]
   127d0:	ldr	r3, [sp, #164]	; 0xa4
   127d4:	str	r3, [sp, #12]
   127d8:	ldr	r3, [sp, #160]	; 0xa0
   127dc:	str	r3, [sp, #8]
   127e0:	ldr	r3, [sp, #156]	; 0x9c
   127e4:	str	r3, [sp, #4]
   127e8:	mov	r3, #5
   127ec:	str	r3, [sp]
   127f0:	ldr	r3, [sp, #28]
   127f4:	ldr	r2, [sp, #52]	; 0x34
   127f8:	ldr	r1, [sp, #76]	; 0x4c
   127fc:	ldr	r0, [sp, #36]	; 0x24
   12800:	bl	117fc <abort@plt+0xa7c>
   12804:	mov	fp, r0
   12808:	b	1290c <abort@plt+0x1b8c>
   1280c:	mov	sl, r7
   12810:	ldr	r3, [sp, #72]	; 0x48
   12814:	cmp	r3, #0
   12818:	moveq	r2, #0
   1281c:	andne	r2, r2, #1
   12820:	cmp	r2, #0
   12824:	beq	12854 <abort@plt+0x1ad4>
   12828:	mov	r2, r3
   1282c:	ldrb	r3, [r3]
   12830:	cmp	r3, #0
   12834:	beq	12854 <abort@plt+0x1ad4>
   12838:	ldr	r1, [sp, #36]	; 0x24
   1283c:	cmp	sl, fp
   12840:	strbhi	r3, [r1, fp]
   12844:	add	fp, fp, #1
   12848:	ldrb	r3, [r2, #1]!
   1284c:	cmp	r3, #0
   12850:	bne	1283c <abort@plt+0x1abc>
   12854:	cmp	sl, fp
   12858:	movhi	r3, #0
   1285c:	ldrhi	r2, [sp, #36]	; 0x24
   12860:	strbhi	r3, [r2, fp]
   12864:	b	1290c <abort@plt+0x1b8c>
   12868:	mov	r8, sl
   1286c:	mov	sl, r7
   12870:	ldr	r3, [sp, #32]
   12874:	str	r3, [sp, #48]	; 0x30
   12878:	b	128b4 <abort@plt+0x1b34>
   1287c:	mov	r8, sl
   12880:	mov	sl, r7
   12884:	b	128b4 <abort@plt+0x1b34>
   12888:	mov	r8, sl
   1288c:	mov	sl, r7
   12890:	b	128b4 <abort@plt+0x1b34>
   12894:	andeq	r4, r1, r4, asr #21
   12898:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1289c:	andeq	r4, r1, r8, asr #21
   128a0:	mov	r8, sl
   128a4:	mov	sl, r7
   128a8:	b	128b4 <abort@plt+0x1b34>
   128ac:	mov	r8, sl
   128b0:	mov	sl, r7
   128b4:	ldr	r3, [sp, #48]	; 0x30
   128b8:	cmp	r8, #2
   128bc:	movne	r3, #0
   128c0:	andeq	r3, r3, #1
   128c4:	cmp	r3, #0
   128c8:	movne	r8, #4
   128cc:	ldr	r3, [sp, #168]	; 0xa8
   128d0:	str	r3, [sp, #16]
   128d4:	ldr	r3, [sp, #164]	; 0xa4
   128d8:	str	r3, [sp, #12]
   128dc:	mov	r3, #0
   128e0:	str	r3, [sp, #8]
   128e4:	ldr	r3, [sp, #156]	; 0x9c
   128e8:	bic	r3, r3, #2
   128ec:	str	r3, [sp, #4]
   128f0:	str	r8, [sp]
   128f4:	ldr	r3, [sp, #28]
   128f8:	ldr	r2, [sp, #52]	; 0x34
   128fc:	mov	r1, sl
   12900:	ldr	r0, [sp, #36]	; 0x24
   12904:	bl	117fc <abort@plt+0xa7c>
   12908:	mov	fp, r0
   1290c:	mov	r0, fp
   12910:	add	sp, sp, #116	; 0x74
   12914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12918:	mov	r8, sl
   1291c:	mov	sl, r7
   12920:	b	128b4 <abort@plt+0x1b34>
   12924:	mov	r8, sl
   12928:	mov	sl, r7
   1292c:	b	128b4 <abort@plt+0x1b34>
   12930:	mov	r8, sl
   12934:	mov	sl, r7
   12938:	b	128b4 <abort@plt+0x1b34>
   1293c:	mov	r8, sl
   12940:	mov	sl, r7
   12944:	b	128cc <abort@plt+0x1b4c>
   12948:	mov	r3, #1
   1294c:	str	r3, [sp, #32]
   12950:	str	r3, [sp, #48]	; 0x30
   12954:	str	r3, [sp, #60]	; 0x3c
   12958:	ldr	r3, [pc, #-196]	; 1289c <abort@plt+0x1b1c>
   1295c:	str	r3, [sp, #72]	; 0x48
   12960:	mov	fp, #0
   12964:	mov	sl, #5
   12968:	b	118b8 <abort@plt+0xb38>
   1296c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12970:	sub	sp, sp, #52	; 0x34
   12974:	mov	r5, r0
   12978:	str	r1, [sp, #24]
   1297c:	str	r2, [sp, #28]
   12980:	mov	r4, r3
   12984:	bl	10ce4 <__errno_location@plt>
   12988:	str	r0, [sp, #32]
   1298c:	ldr	r3, [r0]
   12990:	str	r3, [sp, #36]	; 0x24
   12994:	ldr	r3, [pc, #396]	; 12b28 <abort@plt+0x1da8>
   12998:	ldr	r6, [r3]
   1299c:	cmn	r5, #-2147483647	; 0x80000001
   129a0:	movne	r3, #0
   129a4:	moveq	r3, #1
   129a8:	orrs	r3, r3, r5, lsr #31
   129ac:	bne	12aec <abort@plt+0x1d6c>
   129b0:	ldr	r3, [pc, #368]	; 12b28 <abort@plt+0x1da8>
   129b4:	ldr	r2, [r3, #4]
   129b8:	cmp	r5, r2
   129bc:	blt	12a24 <abort@plt+0x1ca4>
   129c0:	str	r2, [sp, #44]	; 0x2c
   129c4:	add	r3, r3, #8
   129c8:	cmp	r6, r3
   129cc:	beq	12af0 <abort@plt+0x1d70>
   129d0:	sub	r2, r5, r2
   129d4:	mov	r3, #8
   129d8:	str	r3, [sp]
   129dc:	mvn	r3, #-2147483648	; 0x80000000
   129e0:	add	r2, r2, #1
   129e4:	add	r1, sp, #44	; 0x2c
   129e8:	mov	r0, r6
   129ec:	bl	13870 <abort@plt+0x2af0>
   129f0:	mov	r6, r0
   129f4:	ldr	r3, [pc, #300]	; 12b28 <abort@plt+0x1da8>
   129f8:	str	r0, [r3]
   129fc:	ldr	r7, [pc, #292]	; 12b28 <abort@plt+0x1da8>
   12a00:	ldr	r0, [r7, #4]
   12a04:	ldr	r2, [sp, #44]	; 0x2c
   12a08:	sub	r2, r2, r0
   12a0c:	lsl	r2, r2, #3
   12a10:	mov	r1, #0
   12a14:	add	r0, r6, r0, lsl #3
   12a18:	bl	10cfc <memset@plt>
   12a1c:	ldr	r3, [sp, #44]	; 0x2c
   12a20:	str	r3, [r7, #4]
   12a24:	add	fp, r6, r5, lsl #3
   12a28:	ldr	r8, [r6, r5, lsl #3]
   12a2c:	ldr	r7, [fp, #4]
   12a30:	ldr	r9, [r4, #4]
   12a34:	orr	r9, r9, #1
   12a38:	add	sl, r4, #8
   12a3c:	ldr	r3, [r4, #44]	; 0x2c
   12a40:	str	r3, [sp, #16]
   12a44:	ldr	r3, [r4, #40]	; 0x28
   12a48:	str	r3, [sp, #12]
   12a4c:	str	sl, [sp, #8]
   12a50:	str	r9, [sp, #4]
   12a54:	ldr	r3, [r4]
   12a58:	str	r3, [sp]
   12a5c:	ldr	r3, [sp, #28]
   12a60:	ldr	r2, [sp, #24]
   12a64:	mov	r1, r8
   12a68:	mov	r0, r7
   12a6c:	bl	117fc <abort@plt+0xa7c>
   12a70:	cmp	r8, r0
   12a74:	bhi	12ad4 <abort@plt+0x1d54>
   12a78:	add	r8, r0, #1
   12a7c:	str	r8, [r6, r5, lsl #3]
   12a80:	ldr	r3, [pc, #164]	; 12b2c <abort@plt+0x1dac>
   12a84:	cmp	r7, r3
   12a88:	beq	12a94 <abort@plt+0x1d14>
   12a8c:	mov	r0, r7
   12a90:	bl	13efc <abort@plt+0x317c>
   12a94:	mov	r0, r8
   12a98:	bl	136ec <abort@plt+0x296c>
   12a9c:	mov	r7, r0
   12aa0:	str	r0, [fp, #4]
   12aa4:	ldr	r3, [r4, #44]	; 0x2c
   12aa8:	str	r3, [sp, #16]
   12aac:	ldr	r3, [r4, #40]	; 0x28
   12ab0:	str	r3, [sp, #12]
   12ab4:	str	sl, [sp, #8]
   12ab8:	str	r9, [sp, #4]
   12abc:	ldr	r3, [r4]
   12ac0:	str	r3, [sp]
   12ac4:	ldr	r3, [sp, #28]
   12ac8:	ldr	r2, [sp, #24]
   12acc:	mov	r1, r8
   12ad0:	bl	117fc <abort@plt+0xa7c>
   12ad4:	ldr	r3, [sp, #32]
   12ad8:	ldr	r2, [sp, #36]	; 0x24
   12adc:	str	r2, [r3]
   12ae0:	mov	r0, r7
   12ae4:	add	sp, sp, #52	; 0x34
   12ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12aec:	bl	10d80 <abort@plt>
   12af0:	sub	r2, r5, r2
   12af4:	mov	r3, #8
   12af8:	str	r3, [sp]
   12afc:	mvn	r3, #-2147483648	; 0x80000000
   12b00:	add	r2, r2, #1
   12b04:	add	r1, sp, #44	; 0x2c
   12b08:	mov	r0, #0
   12b0c:	bl	13870 <abort@plt+0x2af0>
   12b10:	mov	r6, r0
   12b14:	ldr	r3, [pc, #12]	; 12b28 <abort@plt+0x1da8>
   12b18:	str	r0, [r3], #8
   12b1c:	ldm	r3, {r0, r1}
   12b20:	stm	r6, {r0, r1}
   12b24:	b	129fc <abort@plt+0x1c7c>
   12b28:	ldrdeq	r5, [r2], -r8
   12b2c:	andeq	r5, r2, r4, asr #2
   12b30:	push	{r4, r5, r6, lr}
   12b34:	mov	r4, r0
   12b38:	bl	10ce4 <__errno_location@plt>
   12b3c:	mov	r5, r0
   12b40:	ldr	r6, [r0]
   12b44:	cmp	r4, #0
   12b48:	ldr	r3, [pc, #20]	; 12b64 <abort@plt+0x1de4>
   12b4c:	moveq	r4, r3
   12b50:	mov	r1, #48	; 0x30
   12b54:	mov	r0, r4
   12b58:	bl	13bd8 <abort@plt+0x2e58>
   12b5c:	str	r6, [r5]
   12b60:	pop	{r4, r5, r6, pc}
   12b64:	andeq	r5, r2, r4, asr #4
   12b68:	subs	r3, r0, #0
   12b6c:	ldr	r2, [pc, #8]	; 12b7c <abort@plt+0x1dfc>
   12b70:	moveq	r3, r2
   12b74:	ldr	r0, [r3]
   12b78:	bx	lr
   12b7c:	andeq	r5, r2, r4, asr #4
   12b80:	subs	r3, r0, #0
   12b84:	ldr	r2, [pc, #8]	; 12b94 <abort@plt+0x1e14>
   12b88:	moveq	r3, r2
   12b8c:	str	r1, [r3]
   12b90:	bx	lr
   12b94:	andeq	r5, r2, r4, asr #4
   12b98:	push	{lr}		; (str lr, [sp, #-4]!)
   12b9c:	subs	r3, r0, #0
   12ba0:	ldr	r0, [pc, #44]	; 12bd4 <abort@plt+0x1e54>
   12ba4:	moveq	r3, r0
   12ba8:	add	r3, r3, #8
   12bac:	lsr	lr, r1, #5
   12bb0:	and	r1, r1, #31
   12bb4:	ldr	ip, [r3, lr, lsl #2]
   12bb8:	lsr	r0, ip, r1
   12bbc:	eor	r2, r2, r0
   12bc0:	and	r2, r2, #1
   12bc4:	eor	r1, ip, r2, lsl r1
   12bc8:	str	r1, [r3, lr, lsl #2]
   12bcc:	and	r0, r0, #1
   12bd0:	pop	{pc}		; (ldr pc, [sp], #4)
   12bd4:	andeq	r5, r2, r4, asr #4
   12bd8:	subs	r3, r0, #0
   12bdc:	ldr	r2, [pc, #12]	; 12bf0 <abort@plt+0x1e70>
   12be0:	moveq	r3, r2
   12be4:	ldr	r0, [r3, #4]
   12be8:	str	r1, [r3, #4]
   12bec:	bx	lr
   12bf0:	andeq	r5, r2, r4, asr #4
   12bf4:	subs	r3, r0, #0
   12bf8:	ldr	r0, [pc, #40]	; 12c28 <abort@plt+0x1ea8>
   12bfc:	moveq	r3, r0
   12c00:	mov	r0, #10
   12c04:	str	r0, [r3]
   12c08:	cmp	r2, #0
   12c0c:	cmpne	r1, #0
   12c10:	beq	12c20 <abort@plt+0x1ea0>
   12c14:	str	r1, [r3, #40]	; 0x28
   12c18:	str	r2, [r3, #44]	; 0x2c
   12c1c:	bx	lr
   12c20:	push	{r4, lr}
   12c24:	bl	10d80 <abort@plt>
   12c28:	andeq	r5, r2, r4, asr #4
   12c2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c30:	sub	sp, sp, #24
   12c34:	mov	r7, r0
   12c38:	mov	r8, r1
   12c3c:	mov	r9, r2
   12c40:	mov	sl, r3
   12c44:	ldr	r4, [sp, #56]	; 0x38
   12c48:	cmp	r4, #0
   12c4c:	ldr	r3, [pc, #84]	; 12ca8 <abort@plt+0x1f28>
   12c50:	moveq	r4, r3
   12c54:	bl	10ce4 <__errno_location@plt>
   12c58:	mov	r5, r0
   12c5c:	ldr	r6, [r0]
   12c60:	ldr	r3, [r4, #44]	; 0x2c
   12c64:	str	r3, [sp, #16]
   12c68:	ldr	r3, [r4, #40]	; 0x28
   12c6c:	str	r3, [sp, #12]
   12c70:	add	r3, r4, #8
   12c74:	str	r3, [sp, #8]
   12c78:	ldr	r3, [r4, #4]
   12c7c:	str	r3, [sp, #4]
   12c80:	ldr	r3, [r4]
   12c84:	str	r3, [sp]
   12c88:	mov	r3, sl
   12c8c:	mov	r2, r9
   12c90:	mov	r1, r8
   12c94:	mov	r0, r7
   12c98:	bl	117fc <abort@plt+0xa7c>
   12c9c:	str	r6, [r5]
   12ca0:	add	sp, sp, #24
   12ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ca8:	andeq	r5, r2, r4, asr #4
   12cac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cb0:	sub	sp, sp, #44	; 0x2c
   12cb4:	str	r0, [sp, #28]
   12cb8:	str	r1, [sp, #32]
   12cbc:	mov	r6, r2
   12cc0:	subs	r4, r3, #0
   12cc4:	ldr	r3, [pc, #172]	; 12d78 <abort@plt+0x1ff8>
   12cc8:	moveq	r4, r3
   12ccc:	bl	10ce4 <__errno_location@plt>
   12cd0:	mov	r7, r0
   12cd4:	ldr	fp, [r0]
   12cd8:	ldr	r5, [r4, #4]
   12cdc:	cmp	r6, #0
   12ce0:	orreq	r5, r5, #1
   12ce4:	add	r9, r4, #8
   12ce8:	ldr	r3, [r4, #44]	; 0x2c
   12cec:	str	r3, [sp, #16]
   12cf0:	ldr	r3, [r4, #40]	; 0x28
   12cf4:	str	r3, [sp, #12]
   12cf8:	str	r9, [sp, #8]
   12cfc:	str	r5, [sp, #4]
   12d00:	ldr	r3, [r4]
   12d04:	str	r3, [sp]
   12d08:	ldr	r3, [sp, #32]
   12d0c:	ldr	r2, [sp, #28]
   12d10:	mov	r1, #0
   12d14:	mov	r0, r1
   12d18:	bl	117fc <abort@plt+0xa7c>
   12d1c:	mov	sl, r0
   12d20:	add	r8, r0, #1
   12d24:	mov	r0, r8
   12d28:	bl	136ec <abort@plt+0x296c>
   12d2c:	str	r0, [sp, #36]	; 0x24
   12d30:	ldr	r3, [r4, #44]	; 0x2c
   12d34:	str	r3, [sp, #16]
   12d38:	ldr	r3, [r4, #40]	; 0x28
   12d3c:	str	r3, [sp, #12]
   12d40:	str	r9, [sp, #8]
   12d44:	str	r5, [sp, #4]
   12d48:	ldr	r3, [r4]
   12d4c:	str	r3, [sp]
   12d50:	ldr	r3, [sp, #32]
   12d54:	ldr	r2, [sp, #28]
   12d58:	mov	r1, r8
   12d5c:	bl	117fc <abort@plt+0xa7c>
   12d60:	str	fp, [r7]
   12d64:	cmp	r6, #0
   12d68:	strne	sl, [r6]
   12d6c:	ldr	r0, [sp, #36]	; 0x24
   12d70:	add	sp, sp, #44	; 0x2c
   12d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d78:	andeq	r5, r2, r4, asr #4
   12d7c:	push	{r4, lr}
   12d80:	mov	r3, r2
   12d84:	mov	r2, #0
   12d88:	bl	12cac <abort@plt+0x1f2c>
   12d8c:	pop	{r4, pc}
   12d90:	push	{r4, r5, r6, r7, r8, lr}
   12d94:	ldr	r3, [pc, #140]	; 12e28 <abort@plt+0x20a8>
   12d98:	ldr	r7, [r3]
   12d9c:	ldr	r3, [r3, #4]
   12da0:	cmp	r3, #1
   12da4:	ble	12dd0 <abort@plt+0x2050>
   12da8:	mov	r5, r7
   12dac:	mov	r4, #1
   12db0:	ldr	r6, [pc, #112]	; 12e28 <abort@plt+0x20a8>
   12db4:	ldr	r0, [r5, #12]
   12db8:	bl	13efc <abort@plt+0x317c>
   12dbc:	add	r4, r4, #1
   12dc0:	add	r5, r5, #8
   12dc4:	ldr	r3, [r6, #4]
   12dc8:	cmp	r3, r4
   12dcc:	bgt	12db4 <abort@plt+0x2034>
   12dd0:	ldr	r0, [r7, #4]
   12dd4:	ldr	r3, [pc, #80]	; 12e2c <abort@plt+0x20ac>
   12dd8:	cmp	r0, r3
   12ddc:	beq	12df8 <abort@plt+0x2078>
   12de0:	bl	13efc <abort@plt+0x317c>
   12de4:	ldr	r3, [pc, #60]	; 12e28 <abort@plt+0x20a8>
   12de8:	mov	r2, #256	; 0x100
   12dec:	str	r2, [r3, #8]
   12df0:	ldr	r2, [pc, #52]	; 12e2c <abort@plt+0x20ac>
   12df4:	str	r2, [r3, #12]
   12df8:	ldr	r3, [pc, #48]	; 12e30 <abort@plt+0x20b0>
   12dfc:	cmp	r7, r3
   12e00:	beq	12e18 <abort@plt+0x2098>
   12e04:	mov	r0, r7
   12e08:	bl	13efc <abort@plt+0x317c>
   12e0c:	ldr	r3, [pc, #20]	; 12e28 <abort@plt+0x20a8>
   12e10:	add	r2, r3, #8
   12e14:	str	r2, [r3]
   12e18:	mov	r2, #1
   12e1c:	ldr	r3, [pc, #4]	; 12e28 <abort@plt+0x20a8>
   12e20:	str	r2, [r3, #4]
   12e24:	pop	{r4, r5, r6, r7, r8, pc}
   12e28:	ldrdeq	r5, [r2], -r8
   12e2c:	andeq	r5, r2, r4, asr #2
   12e30:	andeq	r5, r2, r0, ror #1
   12e34:	push	{r4, lr}
   12e38:	ldr	r3, [pc, #8]	; 12e48 <abort@plt+0x20c8>
   12e3c:	mvn	r2, #0
   12e40:	bl	1296c <abort@plt+0x1bec>
   12e44:	pop	{r4, pc}
   12e48:	andeq	r5, r2, r4, asr #4
   12e4c:	push	{r4, lr}
   12e50:	ldr	r3, [pc, #4]	; 12e5c <abort@plt+0x20dc>
   12e54:	bl	1296c <abort@plt+0x1bec>
   12e58:	pop	{r4, pc}
   12e5c:	andeq	r5, r2, r4, asr #4
   12e60:	push	{r4, lr}
   12e64:	mov	r1, r0
   12e68:	mov	r0, #0
   12e6c:	bl	12e34 <abort@plt+0x20b4>
   12e70:	pop	{r4, pc}
   12e74:	push	{r4, lr}
   12e78:	mov	r2, r1
   12e7c:	mov	r1, r0
   12e80:	mov	r0, #0
   12e84:	bl	12e4c <abort@plt+0x20cc>
   12e88:	pop	{r4, pc}
   12e8c:	push	{r4, r5, lr}
   12e90:	sub	sp, sp, #52	; 0x34
   12e94:	mov	r4, r0
   12e98:	mov	r5, r2
   12e9c:	mov	r0, sp
   12ea0:	bl	11694 <abort@plt+0x914>
   12ea4:	mov	r3, sp
   12ea8:	mvn	r2, #0
   12eac:	mov	r1, r5
   12eb0:	mov	r0, r4
   12eb4:	bl	1296c <abort@plt+0x1bec>
   12eb8:	add	sp, sp, #52	; 0x34
   12ebc:	pop	{r4, r5, pc}
   12ec0:	push	{r4, r5, r6, lr}
   12ec4:	sub	sp, sp, #48	; 0x30
   12ec8:	mov	r4, r0
   12ecc:	mov	r5, r2
   12ed0:	mov	r6, r3
   12ed4:	mov	r0, sp
   12ed8:	bl	11694 <abort@plt+0x914>
   12edc:	mov	r3, sp
   12ee0:	mov	r2, r6
   12ee4:	mov	r1, r5
   12ee8:	mov	r0, r4
   12eec:	bl	1296c <abort@plt+0x1bec>
   12ef0:	add	sp, sp, #48	; 0x30
   12ef4:	pop	{r4, r5, r6, pc}
   12ef8:	push	{r4, lr}
   12efc:	mov	r2, r1
   12f00:	mov	r1, r0
   12f04:	mov	r0, #0
   12f08:	bl	12e8c <abort@plt+0x210c>
   12f0c:	pop	{r4, pc}
   12f10:	push	{r4, lr}
   12f14:	mov	r3, r2
   12f18:	mov	r2, r1
   12f1c:	mov	r1, r0
   12f20:	mov	r0, #0
   12f24:	bl	12ec0 <abort@plt+0x2140>
   12f28:	pop	{r4, pc}
   12f2c:	push	{r4, r5, r6, lr}
   12f30:	sub	sp, sp, #48	; 0x30
   12f34:	mov	r4, r0
   12f38:	mov	r5, r1
   12f3c:	mov	r6, r2
   12f40:	mov	ip, sp
   12f44:	ldr	lr, [pc, #64]	; 12f8c <abort@plt+0x220c>
   12f48:	ldm	lr!, {r0, r1, r2, r3}
   12f4c:	stmia	ip!, {r0, r1, r2, r3}
   12f50:	ldm	lr!, {r0, r1, r2, r3}
   12f54:	stmia	ip!, {r0, r1, r2, r3}
   12f58:	ldm	lr, {r0, r1, r2, r3}
   12f5c:	stm	ip, {r0, r1, r2, r3}
   12f60:	mov	r2, #1
   12f64:	mov	r1, r6
   12f68:	mov	r0, sp
   12f6c:	bl	12b98 <abort@plt+0x1e18>
   12f70:	mov	r3, sp
   12f74:	mov	r2, r5
   12f78:	mov	r1, r4
   12f7c:	mov	r0, #0
   12f80:	bl	1296c <abort@plt+0x1bec>
   12f84:	add	sp, sp, #48	; 0x30
   12f88:	pop	{r4, r5, r6, pc}
   12f8c:	andeq	r5, r2, r4, asr #4
   12f90:	push	{r4, lr}
   12f94:	mov	r2, r1
   12f98:	mvn	r1, #0
   12f9c:	bl	12f2c <abort@plt+0x21ac>
   12fa0:	pop	{r4, pc}
   12fa4:	push	{r4, lr}
   12fa8:	mov	r1, #58	; 0x3a
   12fac:	bl	12f90 <abort@plt+0x2210>
   12fb0:	pop	{r4, pc}
   12fb4:	push	{r4, lr}
   12fb8:	mov	r2, #58	; 0x3a
   12fbc:	bl	12f2c <abort@plt+0x21ac>
   12fc0:	pop	{r4, pc}
   12fc4:	push	{r4, r5, lr}
   12fc8:	sub	sp, sp, #100	; 0x64
   12fcc:	mov	r4, r0
   12fd0:	mov	r5, r2
   12fd4:	mov	r0, sp
   12fd8:	bl	11694 <abort@plt+0x914>
   12fdc:	add	lr, sp, #48	; 0x30
   12fe0:	mov	ip, sp
   12fe4:	ldm	ip!, {r0, r1, r2, r3}
   12fe8:	stmia	lr!, {r0, r1, r2, r3}
   12fec:	ldm	ip!, {r0, r1, r2, r3}
   12ff0:	stmia	lr!, {r0, r1, r2, r3}
   12ff4:	ldm	ip, {r0, r1, r2, r3}
   12ff8:	stm	lr, {r0, r1, r2, r3}
   12ffc:	mov	r2, #1
   13000:	mov	r1, #58	; 0x3a
   13004:	add	r0, sp, #48	; 0x30
   13008:	bl	12b98 <abort@plt+0x1e18>
   1300c:	add	r3, sp, #48	; 0x30
   13010:	mvn	r2, #0
   13014:	mov	r1, r5
   13018:	mov	r0, r4
   1301c:	bl	1296c <abort@plt+0x1bec>
   13020:	add	sp, sp, #100	; 0x64
   13024:	pop	{r4, r5, pc}
   13028:	push	{r4, r5, r6, r7, lr}
   1302c:	sub	sp, sp, #52	; 0x34
   13030:	mov	r4, r0
   13034:	mov	r6, r1
   13038:	mov	r7, r2
   1303c:	mov	r5, r3
   13040:	mov	ip, sp
   13044:	ldr	lr, [pc, #64]	; 1308c <abort@plt+0x230c>
   13048:	ldm	lr!, {r0, r1, r2, r3}
   1304c:	stmia	ip!, {r0, r1, r2, r3}
   13050:	ldm	lr!, {r0, r1, r2, r3}
   13054:	stmia	ip!, {r0, r1, r2, r3}
   13058:	ldm	lr, {r0, r1, r2, r3}
   1305c:	stm	ip, {r0, r1, r2, r3}
   13060:	mov	r2, r7
   13064:	mov	r1, r6
   13068:	mov	r0, sp
   1306c:	bl	12bf4 <abort@plt+0x1e74>
   13070:	mov	r3, sp
   13074:	ldr	r2, [sp, #72]	; 0x48
   13078:	mov	r1, r5
   1307c:	mov	r0, r4
   13080:	bl	1296c <abort@plt+0x1bec>
   13084:	add	sp, sp, #52	; 0x34
   13088:	pop	{r4, r5, r6, r7, pc}
   1308c:	andeq	r5, r2, r4, asr #4
   13090:	push	{lr}		; (str lr, [sp, #-4]!)
   13094:	sub	sp, sp, #12
   13098:	mvn	ip, #0
   1309c:	str	ip, [sp]
   130a0:	bl	13028 <abort@plt+0x22a8>
   130a4:	add	sp, sp, #12
   130a8:	pop	{pc}		; (ldr pc, [sp], #4)
   130ac:	push	{r4, lr}
   130b0:	mov	r3, r2
   130b4:	mov	r2, r1
   130b8:	mov	r1, r0
   130bc:	mov	r0, #0
   130c0:	bl	13090 <abort@plt+0x2310>
   130c4:	pop	{r4, pc}
   130c8:	push	{lr}		; (str lr, [sp, #-4]!)
   130cc:	sub	sp, sp, #12
   130d0:	str	r3, [sp]
   130d4:	mov	r3, r2
   130d8:	mov	r2, r1
   130dc:	mov	r1, r0
   130e0:	mov	r0, #0
   130e4:	bl	13028 <abort@plt+0x22a8>
   130e8:	add	sp, sp, #12
   130ec:	pop	{pc}		; (ldr pc, [sp], #4)
   130f0:	push	{r4, lr}
   130f4:	ldr	r3, [pc, #4]	; 13100 <abort@plt+0x2380>
   130f8:	bl	1296c <abort@plt+0x1bec>
   130fc:	pop	{r4, pc}
   13100:	andeq	r5, r2, r8, ror #1
   13104:	push	{r4, lr}
   13108:	mov	r2, r1
   1310c:	mov	r1, r0
   13110:	mov	r0, #0
   13114:	bl	130f0 <abort@plt+0x2370>
   13118:	pop	{r4, pc}
   1311c:	push	{r4, lr}
   13120:	mvn	r2, #0
   13124:	bl	130f0 <abort@plt+0x2370>
   13128:	pop	{r4, pc}
   1312c:	push	{r4, lr}
   13130:	mov	r1, r0
   13134:	mov	r0, #0
   13138:	bl	1311c <abort@plt+0x239c>
   1313c:	pop	{r4, pc}
   13140:	push	{r4, r5, r6, lr}
   13144:	sub	sp, sp, #32
   13148:	mov	r4, r0
   1314c:	ldr	r5, [sp, #48]	; 0x30
   13150:	ldr	r6, [sp, #52]	; 0x34
   13154:	cmp	r1, #0
   13158:	beq	13210 <abort@plt+0x2490>
   1315c:	str	r3, [sp, #4]
   13160:	str	r2, [sp]
   13164:	mov	r3, r1
   13168:	ldr	r2, [pc, #940]	; 1351c <abort@plt+0x279c>
   1316c:	mov	r1, #1
   13170:	bl	10d20 <__fprintf_chk@plt>
   13174:	mov	r2, #5
   13178:	ldr	r1, [pc, #928]	; 13520 <abort@plt+0x27a0>
   1317c:	mov	r0, #0
   13180:	bl	10bf4 <dcgettext@plt>
   13184:	ldr	r3, [pc, #920]	; 13524 <abort@plt+0x27a4>
   13188:	str	r3, [sp]
   1318c:	mov	r3, r0
   13190:	ldr	r2, [pc, #912]	; 13528 <abort@plt+0x27a8>
   13194:	mov	r1, #1
   13198:	mov	r0, r4
   1319c:	bl	10d20 <__fprintf_chk@plt>
   131a0:	mov	r1, r4
   131a4:	mov	r0, #10
   131a8:	bl	10be8 <fputc_unlocked@plt>
   131ac:	mov	r2, #5
   131b0:	ldr	r1, [pc, #884]	; 1352c <abort@plt+0x27ac>
   131b4:	mov	r0, #0
   131b8:	bl	10bf4 <dcgettext@plt>
   131bc:	ldr	r3, [pc, #876]	; 13530 <abort@plt+0x27b0>
   131c0:	mov	r2, r0
   131c4:	mov	r1, #1
   131c8:	mov	r0, r4
   131cc:	bl	10d20 <__fprintf_chk@plt>
   131d0:	mov	r1, r4
   131d4:	mov	r0, #10
   131d8:	bl	10be8 <fputc_unlocked@plt>
   131dc:	cmp	r6, #9
   131e0:	ldrls	pc, [pc, r6, lsl #2]
   131e4:	b	134b4 <abort@plt+0x2734>
   131e8:	andeq	r3, r1, ip, asr #4
   131ec:	andeq	r3, r1, r8, lsr #4
   131f0:	andeq	r3, r1, r4, asr r2
   131f4:	andeq	r3, r1, r4, lsl #5
   131f8:			; <UNDEFINED> instruction: 0x000132bc
   131fc:	strdeq	r3, [r1], -ip
   13200:	andeq	r3, r1, r4, asr #6
   13204:	muleq	r1, r4, r3
   13208:	andeq	r3, r1, ip, ror #7
   1320c:	andeq	r3, r1, ip, asr #8
   13210:	str	r3, [sp]
   13214:	mov	r3, r2
   13218:	ldr	r2, [pc, #788]	; 13534 <abort@plt+0x27b4>
   1321c:	mov	r1, #1
   13220:	bl	10d20 <__fprintf_chk@plt>
   13224:	b	13174 <abort@plt+0x23f4>
   13228:	mov	r2, #5
   1322c:	ldr	r1, [pc, #772]	; 13538 <abort@plt+0x27b8>
   13230:	mov	r0, #0
   13234:	bl	10bf4 <dcgettext@plt>
   13238:	ldr	r3, [r5]
   1323c:	mov	r2, r0
   13240:	mov	r1, #1
   13244:	mov	r0, r4
   13248:	bl	10d20 <__fprintf_chk@plt>
   1324c:	add	sp, sp, #32
   13250:	pop	{r4, r5, r6, pc}
   13254:	mov	r2, #5
   13258:	ldr	r1, [pc, #732]	; 1353c <abort@plt+0x27bc>
   1325c:	mov	r0, #0
   13260:	bl	10bf4 <dcgettext@plt>
   13264:	ldr	r3, [r5]
   13268:	ldr	r2, [r5, #4]
   1326c:	str	r2, [sp]
   13270:	mov	r2, r0
   13274:	mov	r1, #1
   13278:	mov	r0, r4
   1327c:	bl	10d20 <__fprintf_chk@plt>
   13280:	b	1324c <abort@plt+0x24cc>
   13284:	mov	r2, #5
   13288:	ldr	r1, [pc, #688]	; 13540 <abort@plt+0x27c0>
   1328c:	mov	r0, #0
   13290:	bl	10bf4 <dcgettext@plt>
   13294:	ldr	r3, [r5]
   13298:	ldr	r2, [r5, #8]
   1329c:	str	r2, [sp, #4]
   132a0:	ldr	r2, [r5, #4]
   132a4:	str	r2, [sp]
   132a8:	mov	r2, r0
   132ac:	mov	r1, #1
   132b0:	mov	r0, r4
   132b4:	bl	10d20 <__fprintf_chk@plt>
   132b8:	b	1324c <abort@plt+0x24cc>
   132bc:	mov	r2, #5
   132c0:	ldr	r1, [pc, #636]	; 13544 <abort@plt+0x27c4>
   132c4:	mov	r0, #0
   132c8:	bl	10bf4 <dcgettext@plt>
   132cc:	ldr	r3, [r5]
   132d0:	ldr	r2, [r5, #12]
   132d4:	str	r2, [sp, #8]
   132d8:	ldr	r2, [r5, #8]
   132dc:	str	r2, [sp, #4]
   132e0:	ldr	r2, [r5, #4]
   132e4:	str	r2, [sp]
   132e8:	mov	r2, r0
   132ec:	mov	r1, #1
   132f0:	mov	r0, r4
   132f4:	bl	10d20 <__fprintf_chk@plt>
   132f8:	b	1324c <abort@plt+0x24cc>
   132fc:	mov	r2, #5
   13300:	ldr	r1, [pc, #576]	; 13548 <abort@plt+0x27c8>
   13304:	mov	r0, #0
   13308:	bl	10bf4 <dcgettext@plt>
   1330c:	ldr	r3, [r5]
   13310:	ldr	r2, [r5, #16]
   13314:	str	r2, [sp, #12]
   13318:	ldr	r2, [r5, #12]
   1331c:	str	r2, [sp, #8]
   13320:	ldr	r2, [r5, #8]
   13324:	str	r2, [sp, #4]
   13328:	ldr	r2, [r5, #4]
   1332c:	str	r2, [sp]
   13330:	mov	r2, r0
   13334:	mov	r1, #1
   13338:	mov	r0, r4
   1333c:	bl	10d20 <__fprintf_chk@plt>
   13340:	b	1324c <abort@plt+0x24cc>
   13344:	mov	r2, #5
   13348:	ldr	r1, [pc, #508]	; 1354c <abort@plt+0x27cc>
   1334c:	mov	r0, #0
   13350:	bl	10bf4 <dcgettext@plt>
   13354:	ldr	r3, [r5]
   13358:	ldr	r2, [r5, #20]
   1335c:	str	r2, [sp, #16]
   13360:	ldr	r2, [r5, #16]
   13364:	str	r2, [sp, #12]
   13368:	ldr	r2, [r5, #12]
   1336c:	str	r2, [sp, #8]
   13370:	ldr	r2, [r5, #8]
   13374:	str	r2, [sp, #4]
   13378:	ldr	r2, [r5, #4]
   1337c:	str	r2, [sp]
   13380:	mov	r2, r0
   13384:	mov	r1, #1
   13388:	mov	r0, r4
   1338c:	bl	10d20 <__fprintf_chk@plt>
   13390:	b	1324c <abort@plt+0x24cc>
   13394:	mov	r2, #5
   13398:	ldr	r1, [pc, #432]	; 13550 <abort@plt+0x27d0>
   1339c:	mov	r0, #0
   133a0:	bl	10bf4 <dcgettext@plt>
   133a4:	ldr	r3, [r5]
   133a8:	ldr	r2, [r5, #24]
   133ac:	str	r2, [sp, #20]
   133b0:	ldr	r2, [r5, #20]
   133b4:	str	r2, [sp, #16]
   133b8:	ldr	r2, [r5, #16]
   133bc:	str	r2, [sp, #12]
   133c0:	ldr	r2, [r5, #12]
   133c4:	str	r2, [sp, #8]
   133c8:	ldr	r2, [r5, #8]
   133cc:	str	r2, [sp, #4]
   133d0:	ldr	r2, [r5, #4]
   133d4:	str	r2, [sp]
   133d8:	mov	r2, r0
   133dc:	mov	r1, #1
   133e0:	mov	r0, r4
   133e4:	bl	10d20 <__fprintf_chk@plt>
   133e8:	b	1324c <abort@plt+0x24cc>
   133ec:	mov	r2, #5
   133f0:	ldr	r1, [pc, #348]	; 13554 <abort@plt+0x27d4>
   133f4:	mov	r0, #0
   133f8:	bl	10bf4 <dcgettext@plt>
   133fc:	ldr	r3, [r5]
   13400:	ldr	r2, [r5, #28]
   13404:	str	r2, [sp, #24]
   13408:	ldr	r2, [r5, #24]
   1340c:	str	r2, [sp, #20]
   13410:	ldr	r2, [r5, #20]
   13414:	str	r2, [sp, #16]
   13418:	ldr	r2, [r5, #16]
   1341c:	str	r2, [sp, #12]
   13420:	ldr	r2, [r5, #12]
   13424:	str	r2, [sp, #8]
   13428:	ldr	r2, [r5, #8]
   1342c:	str	r2, [sp, #4]
   13430:	ldr	r2, [r5, #4]
   13434:	str	r2, [sp]
   13438:	mov	r2, r0
   1343c:	mov	r1, #1
   13440:	mov	r0, r4
   13444:	bl	10d20 <__fprintf_chk@plt>
   13448:	b	1324c <abort@plt+0x24cc>
   1344c:	mov	r2, #5
   13450:	ldr	r1, [pc, #256]	; 13558 <abort@plt+0x27d8>
   13454:	mov	r0, #0
   13458:	bl	10bf4 <dcgettext@plt>
   1345c:	ldr	r3, [r5]
   13460:	ldr	r2, [r5, #32]
   13464:	str	r2, [sp, #28]
   13468:	ldr	r2, [r5, #28]
   1346c:	str	r2, [sp, #24]
   13470:	ldr	r2, [r5, #24]
   13474:	str	r2, [sp, #20]
   13478:	ldr	r2, [r5, #20]
   1347c:	str	r2, [sp, #16]
   13480:	ldr	r2, [r5, #16]
   13484:	str	r2, [sp, #12]
   13488:	ldr	r2, [r5, #12]
   1348c:	str	r2, [sp, #8]
   13490:	ldr	r2, [r5, #8]
   13494:	str	r2, [sp, #4]
   13498:	ldr	r2, [r5, #4]
   1349c:	str	r2, [sp]
   134a0:	mov	r2, r0
   134a4:	mov	r1, #1
   134a8:	mov	r0, r4
   134ac:	bl	10d20 <__fprintf_chk@plt>
   134b0:	b	1324c <abort@plt+0x24cc>
   134b4:	mov	r2, #5
   134b8:	ldr	r1, [pc, #156]	; 1355c <abort@plt+0x27dc>
   134bc:	mov	r0, #0
   134c0:	bl	10bf4 <dcgettext@plt>
   134c4:	ldr	r3, [r5]
   134c8:	ldr	r2, [r5, #32]
   134cc:	str	r2, [sp, #28]
   134d0:	ldr	r2, [r5, #28]
   134d4:	str	r2, [sp, #24]
   134d8:	ldr	r2, [r5, #24]
   134dc:	str	r2, [sp, #20]
   134e0:	ldr	r2, [r5, #20]
   134e4:	str	r2, [sp, #16]
   134e8:	ldr	r2, [r5, #16]
   134ec:	str	r2, [sp, #12]
   134f0:	ldr	r2, [r5, #12]
   134f4:	str	r2, [sp, #8]
   134f8:	ldr	r2, [r5, #8]
   134fc:	str	r2, [sp, #4]
   13500:	ldr	r2, [r5, #4]
   13504:	str	r2, [sp]
   13508:	mov	r2, r0
   1350c:	mov	r1, #1
   13510:	mov	r0, r4
   13514:	bl	10d20 <__fprintf_chk@plt>
   13518:	b	1324c <abort@plt+0x24cc>
   1351c:	andeq	r4, r1, r0, asr #22
   13520:	andeq	r4, r1, r4, asr fp
   13524:	andeq	r0, r0, r6, ror #15
   13528:	andeq	r4, r1, ip, lsr #28
   1352c:	andeq	r4, r1, r8, asr fp
   13530:	andeq	r4, r1, r4, lsl #24
   13534:	andeq	r4, r1, ip, asr #22
   13538:	andeq	r4, r1, r8, lsr #24
   1353c:	andeq	r4, r1, r8, lsr ip
   13540:	andeq	r4, r1, r0, asr ip
   13544:	andeq	r4, r1, ip, ror #24
   13548:	andeq	r4, r1, ip, lsl #25
   1354c:			; <UNDEFINED> instruction: 0x00014cb0
   13550:	ldrdeq	r4, [r1], -r8
   13554:	andeq	r4, r1, r4, lsl #26
   13558:	andeq	r4, r1, r4, lsr sp
   1355c:	andeq	r4, r1, r8, ror #26
   13560:	push	{r4, r5, lr}
   13564:	sub	sp, sp, #12
   13568:	ldr	r5, [sp, #24]
   1356c:	ldr	ip, [r5]
   13570:	cmp	ip, #0
   13574:	beq	135a4 <abort@plt+0x2824>
   13578:	mov	lr, r5
   1357c:	mov	ip, #0
   13580:	add	ip, ip, #1
   13584:	ldr	r4, [lr, #4]!
   13588:	cmp	r4, #0
   1358c:	bne	13580 <abort@plt+0x2800>
   13590:	str	ip, [sp, #4]
   13594:	str	r5, [sp]
   13598:	bl	13140 <abort@plt+0x23c0>
   1359c:	add	sp, sp, #12
   135a0:	pop	{r4, r5, pc}
   135a4:	mov	ip, #0
   135a8:	b	13590 <abort@plt+0x2810>
   135ac:	push	{r4, r5, lr}
   135b0:	sub	sp, sp, #52	; 0x34
   135b4:	ldr	r4, [sp, #64]	; 0x40
   135b8:	sub	r4, r4, #4
   135bc:	add	r5, sp, #4
   135c0:	mov	ip, #0
   135c4:	ldr	lr, [r4, #4]!
   135c8:	str	lr, [r5, #4]!
   135cc:	cmp	lr, #0
   135d0:	beq	135e0 <abort@plt+0x2860>
   135d4:	add	ip, ip, #1
   135d8:	cmp	ip, #10
   135dc:	bne	135c4 <abort@plt+0x2844>
   135e0:	str	ip, [sp, #4]
   135e4:	add	ip, sp, #8
   135e8:	str	ip, [sp]
   135ec:	bl	13140 <abort@plt+0x23c0>
   135f0:	add	sp, sp, #52	; 0x34
   135f4:	pop	{r4, r5, pc}
   135f8:	push	{r3}		; (str r3, [sp, #-4]!)
   135fc:	push	{lr}		; (str lr, [sp, #-4]!)
   13600:	sub	sp, sp, #16
   13604:	add	r3, sp, #24
   13608:	str	r3, [sp, #12]
   1360c:	str	r3, [sp]
   13610:	ldr	r3, [sp, #20]
   13614:	bl	135ac <abort@plt+0x282c>
   13618:	add	sp, sp, #16
   1361c:	pop	{lr}		; (ldr lr, [sp], #4)
   13620:	add	sp, sp, #4
   13624:	bx	lr
   13628:	push	{r4, lr}
   1362c:	ldr	r3, [pc, #112]	; 136a4 <abort@plt+0x2924>
   13630:	ldr	r1, [r3]
   13634:	mov	r0, #10
   13638:	bl	10be8 <fputc_unlocked@plt>
   1363c:	mov	r2, #5
   13640:	ldr	r1, [pc, #96]	; 136a8 <abort@plt+0x2928>
   13644:	mov	r0, #0
   13648:	bl	10bf4 <dcgettext@plt>
   1364c:	ldr	r2, [pc, #88]	; 136ac <abort@plt+0x292c>
   13650:	mov	r1, r0
   13654:	mov	r0, #1
   13658:	bl	10d08 <__printf_chk@plt>
   1365c:	mov	r2, #5
   13660:	ldr	r1, [pc, #72]	; 136b0 <abort@plt+0x2930>
   13664:	mov	r0, #0
   13668:	bl	10bf4 <dcgettext@plt>
   1366c:	ldr	r3, [pc, #64]	; 136b4 <abort@plt+0x2934>
   13670:	ldr	r2, [pc, #64]	; 136b8 <abort@plt+0x2938>
   13674:	mov	r1, r0
   13678:	mov	r0, #1
   1367c:	bl	10d08 <__printf_chk@plt>
   13680:	mov	r2, #5
   13684:	ldr	r1, [pc, #48]	; 136bc <abort@plt+0x293c>
   13688:	mov	r0, #0
   1368c:	bl	10bf4 <dcgettext@plt>
   13690:	ldr	r2, [pc, #40]	; 136c0 <abort@plt+0x2940>
   13694:	mov	r1, r0
   13698:	mov	r0, #1
   1369c:	bl	10d08 <__printf_chk@plt>
   136a0:	pop	{r4, pc}
   136a4:	andeq	r5, r2, ip, lsr #2
   136a8:	andeq	r4, r1, r4, lsr #27
   136ac:			; <UNDEFINED> instruction: 0x00014db8
   136b0:	ldrdeq	r4, [r1], -r0
   136b4:	andeq	r4, r1, r8, lsl r8
   136b8:	andeq	r4, r1, r0, asr #16
   136bc:	andeq	r4, r1, r4, ror #27
   136c0:	andeq	r4, r1, ip, lsl #28
   136c4:	push	{r4, lr}
   136c8:	bl	13cf8 <abort@plt+0x2f78>
   136cc:	cmp	r0, #0
   136d0:	popne	{r4, pc}
   136d4:	bl	13c68 <abort@plt+0x2ee8>
   136d8:	push	{r4, lr}
   136dc:	bl	13cf8 <abort@plt+0x2f78>
   136e0:	cmp	r0, #0
   136e4:	popne	{r4, pc}
   136e8:	bl	13c68 <abort@plt+0x2ee8>
   136ec:	push	{r4, lr}
   136f0:	bl	136c4 <abort@plt+0x2944>
   136f4:	pop	{r4, pc}
   136f8:	push	{r4, r5, r6, lr}
   136fc:	mov	r5, r0
   13700:	mov	r4, r1
   13704:	bl	13d28 <abort@plt+0x2fa8>
   13708:	cmp	r0, #0
   1370c:	popne	{r4, r5, r6, pc}
   13710:	adds	r4, r4, #0
   13714:	movne	r4, #1
   13718:	cmp	r5, #0
   1371c:	orreq	r4, r4, #1
   13720:	cmp	r4, #0
   13724:	popeq	{r4, r5, r6, pc}
   13728:	bl	13c68 <abort@plt+0x2ee8>
   1372c:	push	{r4, lr}
   13730:	cmp	r1, #0
   13734:	orreq	r1, r1, #1
   13738:	bl	13d28 <abort@plt+0x2fa8>
   1373c:	cmp	r0, #0
   13740:	popne	{r4, pc}
   13744:	bl	13c68 <abort@plt+0x2ee8>
   13748:	push	{r4, r5, r6, lr}
   1374c:	mov	r6, r0
   13750:	mov	r5, r1
   13754:	mov	r4, r2
   13758:	bl	14088 <abort@plt+0x3308>
   1375c:	cmp	r0, #0
   13760:	popne	{r4, r5, r6, pc}
   13764:	cmp	r6, #0
   13768:	beq	13778 <abort@plt+0x29f8>
   1376c:	cmp	r5, #0
   13770:	cmpne	r4, #0
   13774:	popeq	{r4, r5, r6, pc}
   13778:	bl	13c68 <abort@plt+0x2ee8>
   1377c:	push	{r4, lr}
   13780:	bl	13748 <abort@plt+0x29c8>
   13784:	pop	{r4, pc}
   13788:	push	{r4, lr}
   1378c:	mov	ip, r1
   13790:	mov	r3, r2
   13794:	cmp	r2, #0
   13798:	cmpne	r1, #0
   1379c:	moveq	r3, #1
   137a0:	moveq	ip, r3
   137a4:	mov	r2, r3
   137a8:	mov	r1, ip
   137ac:	bl	14088 <abort@plt+0x3308>
   137b0:	cmp	r0, #0
   137b4:	popne	{r4, pc}
   137b8:	bl	13c68 <abort@plt+0x2ee8>
   137bc:	push	{r4, lr}
   137c0:	mov	r2, r1
   137c4:	mov	r1, r0
   137c8:	mov	r0, #0
   137cc:	bl	13748 <abort@plt+0x29c8>
   137d0:	pop	{r4, pc}
   137d4:	push	{r4, lr}
   137d8:	mov	r2, r1
   137dc:	mov	r1, r0
   137e0:	mov	r0, #0
   137e4:	bl	13788 <abort@plt+0x2a08>
   137e8:	pop	{r4, pc}
   137ec:	push	{r4, r5, r6, r7, r8, lr}
   137f0:	mov	r5, r1
   137f4:	mov	r6, r2
   137f8:	ldr	r4, [r1]
   137fc:	subs	r7, r0, #0
   13800:	beq	1381c <abort@plt+0x2a9c>
   13804:	lsr	r2, r4, #1
   13808:	add	r3, r2, #1
   1380c:	mvn	r3, r3
   13810:	cmp	r4, r3
   13814:	bls	13840 <abort@plt+0x2ac0>
   13818:	bl	13c68 <abort@plt+0x2ee8>
   1381c:	cmp	r4, #0
   13820:	bne	13848 <abort@plt+0x2ac8>
   13824:	mov	r1, r2
   13828:	mov	r0, #64	; 0x40
   1382c:	bl	141dc <abort@plt+0x345c>
   13830:	cmp	r0, #0
   13834:	movne	r4, r0
   13838:	addeq	r4, r0, #1
   1383c:	b	13848 <abort@plt+0x2ac8>
   13840:	add	r4, r4, #1
   13844:	add	r4, r4, r2
   13848:	mov	r2, r6
   1384c:	mov	r1, r4
   13850:	mov	r0, r7
   13854:	bl	13748 <abort@plt+0x29c8>
   13858:	str	r4, [r5]
   1385c:	pop	{r4, r5, r6, r7, r8, pc}
   13860:	push	{r4, lr}
   13864:	mov	r2, #1
   13868:	bl	137ec <abort@plt+0x2a6c>
   1386c:	pop	{r4, pc}
   13870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13874:	sub	sp, sp, #12
   13878:	mov	fp, r0
   1387c:	mov	sl, r1
   13880:	mov	r9, r2
   13884:	mov	r7, r3
   13888:	ldr	r6, [sp, #48]	; 0x30
   1388c:	ldr	r5, [r1]
   13890:	asrs	r4, r5, #1
   13894:	bmi	139f0 <abort@plt+0x2c70>
   13898:	cmp	r5, #0
   1389c:	blt	13a04 <abort@plt+0x2c84>
   138a0:	mvn	r3, #-2147483648	; 0x80000000
   138a4:	sub	r3, r3, r4
   138a8:	cmp	r5, r3
   138ac:	movle	r3, #0
   138b0:	movgt	r3, #1
   138b4:	cmp	r3, #0
   138b8:	addeq	r4, r4, r5
   138bc:	mvnne	r4, #-2147483648	; 0x80000000
   138c0:	mvn	r8, r7
   138c4:	lsr	r8, r8, #31
   138c8:	cmp	r7, r4
   138cc:	movge	r3, #0
   138d0:	andlt	r3, r8, #1
   138d4:	cmp	r3, #0
   138d8:	movne	r4, r7
   138dc:	cmp	r6, #0
   138e0:	blt	13a18 <abort@plt+0x2c98>
   138e4:	cmp	r6, #0
   138e8:	beq	13ac4 <abort@plt+0x2d44>
   138ec:	cmp	r4, #0
   138f0:	blt	13a74 <abort@plt+0x2cf4>
   138f4:	mov	r1, r6
   138f8:	mvn	r0, #-2147483648	; 0x80000000
   138fc:	bl	143e8 <abort@plt+0x3668>
   13900:	cmp	r0, r4
   13904:	movge	r0, #0
   13908:	movlt	r0, #1
   1390c:	cmp	r0, #0
   13910:	mvnne	r3, #-2147483648	; 0x80000000
   13914:	strne	r3, [sp, #4]
   13918:	beq	13aac <abort@plt+0x2d2c>
   1391c:	mov	r1, r6
   13920:	ldr	r0, [sp, #4]
   13924:	bl	143e8 <abort@plt+0x3668>
   13928:	mov	r4, r0
   1392c:	mov	r1, r6
   13930:	ldr	r0, [sp, #4]
   13934:	bl	14608 <abort@plt+0x3888>
   13938:	ldr	r3, [sp, #4]
   1393c:	sub	r1, r3, r1
   13940:	cmp	fp, #0
   13944:	moveq	r3, #0
   13948:	streq	r3, [sl]
   1394c:	sub	r3, r4, r5
   13950:	cmp	r3, r9
   13954:	bge	139dc <abort@plt+0x2c5c>
   13958:	cmp	r9, #0
   1395c:	blt	13ad0 <abort@plt+0x2d50>
   13960:	cmp	r5, #0
   13964:	blt	13ae4 <abort@plt+0x2d64>
   13968:	mvn	r3, #-2147483648	; 0x80000000
   1396c:	sub	r3, r3, r9
   13970:	cmp	r5, r3
   13974:	movle	r3, #0
   13978:	movgt	r3, #1
   1397c:	cmp	r3, #0
   13980:	bne	13b8c <abort@plt+0x2e0c>
   13984:	add	r5, r5, r9
   13988:	mov	r4, r5
   1398c:	cmp	r7, r5
   13990:	movge	r7, #0
   13994:	andlt	r7, r8, #1
   13998:	cmp	r7, #0
   1399c:	bne	13b8c <abort@plt+0x2e0c>
   139a0:	cmp	r6, #0
   139a4:	blt	13af8 <abort@plt+0x2d78>
   139a8:	cmp	r6, #0
   139ac:	beq	139d8 <abort@plt+0x2c58>
   139b0:	cmp	r5, #0
   139b4:	blt	13b54 <abort@plt+0x2dd4>
   139b8:	mov	r1, r6
   139bc:	mvn	r0, #-2147483648	; 0x80000000
   139c0:	bl	143e8 <abort@plt+0x3668>
   139c4:	cmp	r5, r0
   139c8:	movle	r0, #0
   139cc:	movgt	r0, #1
   139d0:	cmp	r0, #0
   139d4:	bne	13b8c <abort@plt+0x2e0c>
   139d8:	mul	r1, r5, r6
   139dc:	mov	r0, fp
   139e0:	bl	136f8 <abort@plt+0x2978>
   139e4:	str	r4, [sl]
   139e8:	add	sp, sp, #12
   139ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139f0:	rsb	r3, r4, #-2147483648	; 0x80000000
   139f4:	cmp	r5, r3
   139f8:	movge	r3, #0
   139fc:	movlt	r3, #1
   13a00:	b	138b4 <abort@plt+0x2b34>
   13a04:	rsb	r3, r5, #-2147483648	; 0x80000000
   13a08:	cmp	r4, r3
   13a0c:	movge	r3, #0
   13a10:	movlt	r3, #1
   13a14:	b	138b4 <abort@plt+0x2b34>
   13a18:	cmp	r4, #0
   13a1c:	blt	13a44 <abort@plt+0x2cc4>
   13a20:	cmn	r6, #1
   13a24:	beq	13a60 <abort@plt+0x2ce0>
   13a28:	mov	r1, r6
   13a2c:	mov	r0, #-2147483648	; 0x80000000
   13a30:	bl	143e8 <abort@plt+0x3668>
   13a34:	cmp	r0, r4
   13a38:	movge	r0, #0
   13a3c:	movlt	r0, #1
   13a40:	b	1390c <abort@plt+0x2b8c>
   13a44:	mov	r1, r6
   13a48:	mvn	r0, #-2147483648	; 0x80000000
   13a4c:	bl	143e8 <abort@plt+0x3668>
   13a50:	cmp	r0, r4
   13a54:	movle	r0, #0
   13a58:	movgt	r0, #1
   13a5c:	b	1390c <abort@plt+0x2b8c>
   13a60:	add	r0, r4, #-2147483648	; 0x80000000
   13a64:	cmp	r0, #0
   13a68:	movle	r0, #0
   13a6c:	movgt	r0, #1
   13a70:	b	1390c <abort@plt+0x2b8c>
   13a74:	cmn	r4, #1
   13a78:	beq	13a98 <abort@plt+0x2d18>
   13a7c:	mov	r1, r4
   13a80:	mov	r0, #-2147483648	; 0x80000000
   13a84:	bl	143e8 <abort@plt+0x3668>
   13a88:	cmp	r6, r0
   13a8c:	movle	r0, #0
   13a90:	movgt	r0, #1
   13a94:	b	1390c <abort@plt+0x2b8c>
   13a98:	add	r0, r6, #-2147483648	; 0x80000000
   13a9c:	cmp	r0, #0
   13aa0:	movle	r0, #0
   13aa4:	movgt	r0, #1
   13aa8:	b	1390c <abort@plt+0x2b8c>
   13aac:	mul	r1, r6, r4
   13ab0:	cmp	r1, #63	; 0x3f
   13ab4:	movle	r3, #64	; 0x40
   13ab8:	strle	r3, [sp, #4]
   13abc:	bgt	13940 <abort@plt+0x2bc0>
   13ac0:	b	1391c <abort@plt+0x2b9c>
   13ac4:	mov	r3, #64	; 0x40
   13ac8:	str	r3, [sp, #4]
   13acc:	b	1391c <abort@plt+0x2b9c>
   13ad0:	rsb	r3, r9, #-2147483648	; 0x80000000
   13ad4:	cmp	r5, r3
   13ad8:	movge	r3, #0
   13adc:	movlt	r3, #1
   13ae0:	b	1397c <abort@plt+0x2bfc>
   13ae4:	rsb	r3, r5, #-2147483648	; 0x80000000
   13ae8:	cmp	r9, r3
   13aec:	movge	r3, #0
   13af0:	movlt	r3, #1
   13af4:	b	1397c <abort@plt+0x2bfc>
   13af8:	cmp	r5, #0
   13afc:	blt	13b24 <abort@plt+0x2da4>
   13b00:	cmn	r6, #1
   13b04:	beq	13b40 <abort@plt+0x2dc0>
   13b08:	mov	r1, r6
   13b0c:	mov	r0, #-2147483648	; 0x80000000
   13b10:	bl	143e8 <abort@plt+0x3668>
   13b14:	cmp	r5, r0
   13b18:	movle	r0, #0
   13b1c:	movgt	r0, #1
   13b20:	b	139d0 <abort@plt+0x2c50>
   13b24:	mov	r1, r6
   13b28:	mvn	r0, #-2147483648	; 0x80000000
   13b2c:	bl	143e8 <abort@plt+0x3668>
   13b30:	cmp	r5, r0
   13b34:	movge	r0, #0
   13b38:	movlt	r0, #1
   13b3c:	b	139d0 <abort@plt+0x2c50>
   13b40:	add	r0, r5, #-2147483648	; 0x80000000
   13b44:	cmp	r0, #0
   13b48:	movle	r0, #0
   13b4c:	movgt	r0, #1
   13b50:	b	139d0 <abort@plt+0x2c50>
   13b54:	cmn	r5, #1
   13b58:	beq	13b78 <abort@plt+0x2df8>
   13b5c:	mov	r1, r5
   13b60:	mov	r0, #-2147483648	; 0x80000000
   13b64:	bl	143e8 <abort@plt+0x3668>
   13b68:	cmp	r6, r0
   13b6c:	movle	r0, #0
   13b70:	movgt	r0, #1
   13b74:	b	139d0 <abort@plt+0x2c50>
   13b78:	add	r0, r6, #-2147483648	; 0x80000000
   13b7c:	cmp	r0, #0
   13b80:	movle	r0, #0
   13b84:	movgt	r0, #1
   13b88:	b	139d0 <abort@plt+0x2c50>
   13b8c:	bl	13c68 <abort@plt+0x2ee8>
   13b90:	push	{r4, lr}
   13b94:	bl	13ca8 <abort@plt+0x2f28>
   13b98:	cmp	r0, #0
   13b9c:	popne	{r4, pc}
   13ba0:	bl	13c68 <abort@plt+0x2ee8>
   13ba4:	push	{r4, lr}
   13ba8:	mov	r1, #1
   13bac:	bl	13b90 <abort@plt+0x2e10>
   13bb0:	pop	{r4, pc}
   13bb4:	push	{r4, lr}
   13bb8:	bl	13ca8 <abort@plt+0x2f28>
   13bbc:	cmp	r0, #0
   13bc0:	popne	{r4, pc}
   13bc4:	bl	13c68 <abort@plt+0x2ee8>
   13bc8:	push	{r4, lr}
   13bcc:	mov	r1, #1
   13bd0:	bl	13bb4 <abort@plt+0x2e34>
   13bd4:	pop	{r4, pc}
   13bd8:	push	{r4, r5, r6, lr}
   13bdc:	mov	r5, r0
   13be0:	mov	r4, r1
   13be4:	mov	r0, r1
   13be8:	bl	136c4 <abort@plt+0x2944>
   13bec:	mov	r2, r4
   13bf0:	mov	r1, r5
   13bf4:	bl	10bc4 <memcpy@plt>
   13bf8:	pop	{r4, r5, r6, pc}
   13bfc:	push	{r4, r5, r6, lr}
   13c00:	mov	r5, r0
   13c04:	mov	r4, r1
   13c08:	mov	r0, r1
   13c0c:	bl	136d8 <abort@plt+0x2958>
   13c10:	mov	r2, r4
   13c14:	mov	r1, r5
   13c18:	bl	10bc4 <memcpy@plt>
   13c1c:	pop	{r4, r5, r6, pc}
   13c20:	push	{r4, r5, r6, lr}
   13c24:	mov	r5, r0
   13c28:	mov	r4, r1
   13c2c:	add	r0, r1, #1
   13c30:	bl	136d8 <abort@plt+0x2958>
   13c34:	mov	r2, #0
   13c38:	strb	r2, [r0, r4]
   13c3c:	mov	r2, r4
   13c40:	mov	r1, r5
   13c44:	bl	10bc4 <memcpy@plt>
   13c48:	pop	{r4, r5, r6, pc}
   13c4c:	push	{r4, lr}
   13c50:	mov	r4, r0
   13c54:	bl	10cd8 <strlen@plt>
   13c58:	add	r1, r0, #1
   13c5c:	mov	r0, r4
   13c60:	bl	13bd8 <abort@plt+0x2e58>
   13c64:	pop	{r4, pc}
   13c68:	push	{r4, lr}
   13c6c:	ldr	r3, [pc, #40]	; 13c9c <abort@plt+0x2f1c>
   13c70:	ldr	r4, [r3]
   13c74:	mov	r2, #5
   13c78:	ldr	r1, [pc, #32]	; 13ca0 <abort@plt+0x2f20>
   13c7c:	mov	r0, #0
   13c80:	bl	10bf4 <dcgettext@plt>
   13c84:	mov	r3, r0
   13c88:	ldr	r2, [pc, #20]	; 13ca4 <abort@plt+0x2f24>
   13c8c:	mov	r1, #0
   13c90:	mov	r0, r4
   13c94:	bl	10c6c <error@plt>
   13c98:	bl	10d80 <abort@plt>
   13c9c:	ldrdeq	r5, [r2], -r4
   13ca0:	andeq	r4, r1, ip, asr lr
   13ca4:	ldrdeq	r4, [r1], -ip
   13ca8:	push	{r4, lr}
   13cac:	mov	r2, r0
   13cb0:	mov	r3, r1
   13cb4:	cmp	r1, #0
   13cb8:	cmpne	r0, #0
   13cbc:	moveq	r3, #1
   13cc0:	moveq	r2, r3
   13cc4:	umull	r0, r1, r2, r3
   13cc8:	cmp	r0, #0
   13ccc:	cmpge	r1, #0
   13cd0:	bne	13ce4 <abort@plt+0x2f64>
   13cd4:	mov	r1, r3
   13cd8:	mov	r0, r2
   13cdc:	bl	10b64 <calloc@plt>
   13ce0:	pop	{r4, pc}
   13ce4:	bl	10ce4 <__errno_location@plt>
   13ce8:	mov	r3, #12
   13cec:	str	r3, [r0]
   13cf0:	mov	r0, #0
   13cf4:	pop	{r4, pc}
   13cf8:	push	{r4, lr}
   13cfc:	cmp	r0, #0
   13d00:	moveq	r0, #1
   13d04:	cmp	r0, #0
   13d08:	blt	13d14 <abort@plt+0x2f94>
   13d0c:	bl	10c84 <malloc@plt>
   13d10:	pop	{r4, pc}
   13d14:	bl	10ce4 <__errno_location@plt>
   13d18:	mov	r3, #12
   13d1c:	str	r3, [r0]
   13d20:	mov	r0, #0
   13d24:	pop	{r4, pc}
   13d28:	push	{r4, lr}
   13d2c:	cmp	r0, #0
   13d30:	beq	13d4c <abort@plt+0x2fcc>
   13d34:	cmp	r1, #0
   13d38:	beq	13d58 <abort@plt+0x2fd8>
   13d3c:	cmp	r1, #0
   13d40:	blt	13d64 <abort@plt+0x2fe4>
   13d44:	bl	10c00 <realloc@plt>
   13d48:	pop	{r4, pc}
   13d4c:	mov	r0, r1
   13d50:	bl	13cf8 <abort@plt+0x2f78>
   13d54:	pop	{r4, pc}
   13d58:	bl	13efc <abort@plt+0x317c>
   13d5c:	mov	r0, #0
   13d60:	pop	{r4, pc}
   13d64:	bl	10ce4 <__errno_location@plt>
   13d68:	mov	r3, #12
   13d6c:	str	r3, [r0]
   13d70:	mov	r0, #0
   13d74:	pop	{r4, pc}
   13d78:	push	{r4, r5, r6, lr}
   13d7c:	mov	r5, r0
   13d80:	bl	10c54 <__fpending@plt>
   13d84:	mov	r6, r0
   13d88:	ldr	r4, [r5]
   13d8c:	and	r4, r4, #32
   13d90:	mov	r0, r5
   13d94:	bl	13df0 <abort@plt+0x3070>
   13d98:	cmp	r4, #0
   13d9c:	bne	13dc4 <abort@plt+0x3044>
   13da0:	cmp	r0, #0
   13da4:	popeq	{r4, r5, r6, pc}
   13da8:	cmp	r6, #0
   13dac:	bne	13de0 <abort@plt+0x3060>
   13db0:	bl	10ce4 <__errno_location@plt>
   13db4:	ldr	r0, [r0]
   13db8:	subs	r0, r0, #9
   13dbc:	mvnne	r0, #0
   13dc0:	pop	{r4, r5, r6, pc}
   13dc4:	cmp	r0, #0
   13dc8:	bne	13de8 <abort@plt+0x3068>
   13dcc:	bl	10ce4 <__errno_location@plt>
   13dd0:	mov	r3, #0
   13dd4:	str	r3, [r0]
   13dd8:	mvn	r0, #0
   13ddc:	pop	{r4, r5, r6, pc}
   13de0:	mvn	r0, #0
   13de4:	pop	{r4, r5, r6, pc}
   13de8:	mvn	r0, #0
   13dec:	pop	{r4, r5, r6, pc}
   13df0:	push	{r4, r5, r6, lr}
   13df4:	sub	sp, sp, #8
   13df8:	mov	r4, r0
   13dfc:	bl	10d14 <fileno@plt>
   13e00:	cmp	r0, #0
   13e04:	blt	13e7c <abort@plt+0x30fc>
   13e08:	mov	r0, r4
   13e0c:	bl	10c9c <__freading@plt>
   13e10:	cmp	r0, #0
   13e14:	beq	13e48 <abort@plt+0x30c8>
   13e18:	mov	r0, r4
   13e1c:	bl	10d14 <fileno@plt>
   13e20:	mov	r3, #1
   13e24:	str	r3, [sp]
   13e28:	mov	r2, #0
   13e2c:	mov	r3, #0
   13e30:	bl	10c3c <lseek64@plt>
   13e34:	mvn	r2, #0
   13e38:	mvn	r3, #0
   13e3c:	cmp	r1, r3
   13e40:	cmpeq	r0, r2
   13e44:	beq	13e88 <abort@plt+0x3108>
   13e48:	mov	r0, r4
   13e4c:	bl	13e98 <abort@plt+0x3118>
   13e50:	cmp	r0, #0
   13e54:	beq	13e88 <abort@plt+0x3108>
   13e58:	bl	10ce4 <__errno_location@plt>
   13e5c:	mov	r5, r0
   13e60:	ldr	r6, [r0]
   13e64:	mov	r0, r4
   13e68:	bl	10d2c <fclose@plt>
   13e6c:	cmp	r6, #0
   13e70:	strne	r6, [r5]
   13e74:	mvnne	r0, #0
   13e78:	b	13e90 <abort@plt+0x3110>
   13e7c:	mov	r0, r4
   13e80:	bl	10d2c <fclose@plt>
   13e84:	b	13e90 <abort@plt+0x3110>
   13e88:	mov	r0, r4
   13e8c:	bl	10d2c <fclose@plt>
   13e90:	add	sp, sp, #8
   13e94:	pop	{r4, r5, r6, pc}
   13e98:	push	{r4, lr}
   13e9c:	sub	sp, sp, #8
   13ea0:	subs	r4, r0, #0
   13ea4:	beq	13eb8 <abort@plt+0x3138>
   13ea8:	mov	r0, r4
   13eac:	bl	10c9c <__freading@plt>
   13eb0:	cmp	r0, #0
   13eb4:	bne	13ec8 <abort@plt+0x3148>
   13eb8:	mov	r0, r4
   13ebc:	bl	10ba0 <fflush@plt>
   13ec0:	add	sp, sp, #8
   13ec4:	pop	{r4, pc}
   13ec8:	ldr	r3, [r4]
   13ecc:	tst	r3, #256	; 0x100
   13ed0:	bne	13ee0 <abort@plt+0x3160>
   13ed4:	mov	r0, r4
   13ed8:	bl	10ba0 <fflush@plt>
   13edc:	b	13ec0 <abort@plt+0x3140>
   13ee0:	mov	r3, #1
   13ee4:	str	r3, [sp]
   13ee8:	mov	r2, #0
   13eec:	mov	r3, #0
   13ef0:	mov	r0, r4
   13ef4:	bl	13f54 <abort@plt+0x31d4>
   13ef8:	b	13ed4 <abort@plt+0x3154>
   13efc:	push	{r4, r5, lr}
   13f00:	sub	sp, sp, #12
   13f04:	mov	r5, r0
   13f08:	bl	10ce4 <__errno_location@plt>
   13f0c:	mov	r4, r0
   13f10:	ldr	r3, [r0]
   13f14:	str	r3, [sp]
   13f18:	str	r3, [sp, #4]
   13f1c:	mov	r3, #0
   13f20:	str	r3, [r0]
   13f24:	mov	r0, r5
   13f28:	bl	10bac <free@plt>
   13f2c:	ldr	r3, [r4]
   13f30:	cmp	r3, #0
   13f34:	moveq	r3, #4
   13f38:	movne	r3, #0
   13f3c:	add	r2, sp, #8
   13f40:	add	r3, r2, r3
   13f44:	ldr	r3, [r3, #-8]
   13f48:	str	r3, [r4]
   13f4c:	add	sp, sp, #12
   13f50:	pop	{r4, r5, pc}
   13f54:	push	{r4, r5, r6, r7, lr}
   13f58:	sub	sp, sp, #12
   13f5c:	mov	r4, r0
   13f60:	mov	r6, r2
   13f64:	mov	r7, r3
   13f68:	ldr	r5, [sp, #32]
   13f6c:	ldr	r2, [r0, #8]
   13f70:	ldr	r3, [r0, #4]
   13f74:	cmp	r2, r3
   13f78:	beq	13f98 <abort@plt+0x3218>
   13f7c:	str	r5, [sp]
   13f80:	mov	r2, r6
   13f84:	mov	r3, r7
   13f88:	mov	r0, r4
   13f8c:	bl	10d38 <fseeko64@plt>
   13f90:	add	sp, sp, #12
   13f94:	pop	{r4, r5, r6, r7, pc}
   13f98:	ldr	r2, [r0, #20]
   13f9c:	ldr	r3, [r0, #16]
   13fa0:	cmp	r2, r3
   13fa4:	bne	13f7c <abort@plt+0x31fc>
   13fa8:	ldr	r3, [r0, #36]	; 0x24
   13fac:	cmp	r3, #0
   13fb0:	bne	13f7c <abort@plt+0x31fc>
   13fb4:	bl	10d14 <fileno@plt>
   13fb8:	str	r5, [sp]
   13fbc:	mov	r2, r6
   13fc0:	mov	r3, r7
   13fc4:	bl	10c3c <lseek64@plt>
   13fc8:	mvn	r2, #0
   13fcc:	mvn	r3, #0
   13fd0:	cmp	r1, r3
   13fd4:	cmpeq	r0, r2
   13fd8:	beq	13ff4 <abort@plt+0x3274>
   13fdc:	ldr	r3, [r4]
   13fe0:	bic	r3, r3, #16
   13fe4:	str	r3, [r4]
   13fe8:	strd	r0, [r4, #80]	; 0x50
   13fec:	mov	r0, #0
   13ff0:	b	13f90 <abort@plt+0x3210>
   13ff4:	mvn	r0, #0
   13ff8:	b	13f90 <abort@plt+0x3210>
   13ffc:	push	{r4, lr}
   14000:	mov	r0, #14
   14004:	bl	10d5c <nl_langinfo@plt>
   14008:	cmp	r0, #0
   1400c:	beq	14024 <abort@plt+0x32a4>
   14010:	ldrb	r2, [r0]
   14014:	ldr	r3, [pc, #16]	; 1402c <abort@plt+0x32ac>
   14018:	cmp	r2, #0
   1401c:	moveq	r0, r3
   14020:	pop	{r4, pc}
   14024:	ldr	r0, [pc]	; 1402c <abort@plt+0x32ac>
   14028:	pop	{r4, pc}
   1402c:	andeq	r4, r1, r0, ror lr
   14030:	push	{r4, r5, r6, r7, lr}
   14034:	sub	sp, sp, #12
   14038:	mov	r7, r1
   1403c:	mov	r5, r2
   14040:	subs	r6, r0, #0
   14044:	addeq	r6, sp, #4
   14048:	mov	r0, r6
   1404c:	bl	10c60 <mbrtowc@plt>
   14050:	mov	r4, r0
   14054:	cmp	r5, #0
   14058:	cmnne	r0, #3
   1405c:	bhi	1406c <abort@plt+0x32ec>
   14060:	mov	r0, r4
   14064:	add	sp, sp, #12
   14068:	pop	{r4, r5, r6, r7, pc}
   1406c:	mov	r0, #0
   14070:	bl	140d4 <abort@plt+0x3354>
   14074:	cmp	r0, #0
   14078:	ldrbeq	r3, [r7]
   1407c:	streq	r3, [r6]
   14080:	moveq	r4, #1
   14084:	b	14060 <abort@plt+0x32e0>
   14088:	push	{r4, r5, r6, lr}
   1408c:	mov	r6, r0
   14090:	mov	r5, r1
   14094:	subs	r4, r2, #0
   14098:	beq	140c4 <abort@plt+0x3344>
   1409c:	mov	r1, r4
   140a0:	mvn	r0, #0
   140a4:	bl	141dc <abort@plt+0x345c>
   140a8:	cmp	r0, r5
   140ac:	bcs	140c4 <abort@plt+0x3344>
   140b0:	bl	10ce4 <__errno_location@plt>
   140b4:	mov	r3, #12
   140b8:	str	r3, [r0]
   140bc:	mov	r0, #0
   140c0:	pop	{r4, r5, r6, pc}
   140c4:	mul	r1, r5, r4
   140c8:	mov	r0, r6
   140cc:	bl	13d28 <abort@plt+0x2fa8>
   140d0:	pop	{r4, r5, r6, pc}
   140d4:	push	{lr}		; (str lr, [sp, #-4]!)
   140d8:	sub	sp, sp, #268	; 0x10c
   140dc:	ldr	r2, [pc, #68]	; 14128 <abort@plt+0x33a8>
   140e0:	add	r1, sp, #4
   140e4:	bl	14134 <abort@plt+0x33b4>
   140e8:	cmp	r0, #0
   140ec:	movne	r0, #0
   140f0:	bne	14120 <abort@plt+0x33a0>
   140f4:	ldr	r1, [pc, #48]	; 1412c <abort@plt+0x33ac>
   140f8:	add	r0, sp, #4
   140fc:	bl	10b88 <strcmp@plt>
   14100:	cmp	r0, #0
   14104:	moveq	r0, #0
   14108:	beq	14120 <abort@plt+0x33a0>
   1410c:	ldr	r1, [pc, #28]	; 14130 <abort@plt+0x33b0>
   14110:	add	r0, sp, #4
   14114:	bl	10b88 <strcmp@plt>
   14118:	adds	r0, r0, #0
   1411c:	movne	r0, #1
   14120:	add	sp, sp, #268	; 0x10c
   14124:	pop	{pc}		; (ldr pc, [sp], #4)
   14128:	andeq	r0, r0, r1, lsl #2
   1412c:	andeq	r4, r1, r8, ror lr
   14130:	andeq	r4, r1, ip, ror lr
   14134:	push	{r4, r5, r6, lr}
   14138:	mov	r6, r1
   1413c:	mov	r4, r2
   14140:	mov	r1, #0
   14144:	bl	10d44 <setlocale@plt>
   14148:	subs	r5, r0, #0
   1414c:	beq	14170 <abort@plt+0x33f0>
   14150:	mov	r0, r5
   14154:	bl	10cd8 <strlen@plt>
   14158:	cmp	r4, r0
   1415c:	bhi	14188 <abort@plt+0x3408>
   14160:	cmp	r4, #0
   14164:	bne	141a0 <abort@plt+0x3420>
   14168:	mov	r0, #34	; 0x22
   1416c:	pop	{r4, r5, r6, pc}
   14170:	cmp	r4, #0
   14174:	beq	141c4 <abort@plt+0x3444>
   14178:	mov	r3, #0
   1417c:	strb	r3, [r6]
   14180:	mov	r0, #22
   14184:	pop	{r4, r5, r6, pc}
   14188:	add	r2, r0, #1
   1418c:	mov	r1, r5
   14190:	mov	r0, r6
   14194:	bl	10bc4 <memcpy@plt>
   14198:	mov	r0, #0
   1419c:	pop	{r4, r5, r6, pc}
   141a0:	sub	r4, r4, #1
   141a4:	mov	r2, r4
   141a8:	mov	r1, r5
   141ac:	mov	r0, r6
   141b0:	bl	10bc4 <memcpy@plt>
   141b4:	mov	r3, #0
   141b8:	strb	r3, [r6, r4]
   141bc:	mov	r0, #34	; 0x22
   141c0:	pop	{r4, r5, r6, pc}
   141c4:	mov	r0, #22
   141c8:	pop	{r4, r5, r6, pc}
   141cc:	push	{r4, lr}
   141d0:	mov	r1, #0
   141d4:	bl	10d44 <setlocale@plt>
   141d8:	pop	{r4, pc}
   141dc:	subs	r2, r1, #1
   141e0:	bxeq	lr
   141e4:	bcc	143bc <abort@plt+0x363c>
   141e8:	cmp	r0, r1
   141ec:	bls	143a0 <abort@plt+0x3620>
   141f0:	tst	r1, r2
   141f4:	beq	143ac <abort@plt+0x362c>
   141f8:	clz	r3, r0
   141fc:	clz	r2, r1
   14200:	sub	r3, r2, r3
   14204:	rsbs	r3, r3, #31
   14208:	addne	r3, r3, r3, lsl #1
   1420c:	mov	r2, #0
   14210:	addne	pc, pc, r3, lsl #2
   14214:	nop			; (mov r0, r0)
   14218:	cmp	r0, r1, lsl #31
   1421c:	adc	r2, r2, r2
   14220:	subcs	r0, r0, r1, lsl #31
   14224:	cmp	r0, r1, lsl #30
   14228:	adc	r2, r2, r2
   1422c:	subcs	r0, r0, r1, lsl #30
   14230:	cmp	r0, r1, lsl #29
   14234:	adc	r2, r2, r2
   14238:	subcs	r0, r0, r1, lsl #29
   1423c:	cmp	r0, r1, lsl #28
   14240:	adc	r2, r2, r2
   14244:	subcs	r0, r0, r1, lsl #28
   14248:	cmp	r0, r1, lsl #27
   1424c:	adc	r2, r2, r2
   14250:	subcs	r0, r0, r1, lsl #27
   14254:	cmp	r0, r1, lsl #26
   14258:	adc	r2, r2, r2
   1425c:	subcs	r0, r0, r1, lsl #26
   14260:	cmp	r0, r1, lsl #25
   14264:	adc	r2, r2, r2
   14268:	subcs	r0, r0, r1, lsl #25
   1426c:	cmp	r0, r1, lsl #24
   14270:	adc	r2, r2, r2
   14274:	subcs	r0, r0, r1, lsl #24
   14278:	cmp	r0, r1, lsl #23
   1427c:	adc	r2, r2, r2
   14280:	subcs	r0, r0, r1, lsl #23
   14284:	cmp	r0, r1, lsl #22
   14288:	adc	r2, r2, r2
   1428c:	subcs	r0, r0, r1, lsl #22
   14290:	cmp	r0, r1, lsl #21
   14294:	adc	r2, r2, r2
   14298:	subcs	r0, r0, r1, lsl #21
   1429c:	cmp	r0, r1, lsl #20
   142a0:	adc	r2, r2, r2
   142a4:	subcs	r0, r0, r1, lsl #20
   142a8:	cmp	r0, r1, lsl #19
   142ac:	adc	r2, r2, r2
   142b0:	subcs	r0, r0, r1, lsl #19
   142b4:	cmp	r0, r1, lsl #18
   142b8:	adc	r2, r2, r2
   142bc:	subcs	r0, r0, r1, lsl #18
   142c0:	cmp	r0, r1, lsl #17
   142c4:	adc	r2, r2, r2
   142c8:	subcs	r0, r0, r1, lsl #17
   142cc:	cmp	r0, r1, lsl #16
   142d0:	adc	r2, r2, r2
   142d4:	subcs	r0, r0, r1, lsl #16
   142d8:	cmp	r0, r1, lsl #15
   142dc:	adc	r2, r2, r2
   142e0:	subcs	r0, r0, r1, lsl #15
   142e4:	cmp	r0, r1, lsl #14
   142e8:	adc	r2, r2, r2
   142ec:	subcs	r0, r0, r1, lsl #14
   142f0:	cmp	r0, r1, lsl #13
   142f4:	adc	r2, r2, r2
   142f8:	subcs	r0, r0, r1, lsl #13
   142fc:	cmp	r0, r1, lsl #12
   14300:	adc	r2, r2, r2
   14304:	subcs	r0, r0, r1, lsl #12
   14308:	cmp	r0, r1, lsl #11
   1430c:	adc	r2, r2, r2
   14310:	subcs	r0, r0, r1, lsl #11
   14314:	cmp	r0, r1, lsl #10
   14318:	adc	r2, r2, r2
   1431c:	subcs	r0, r0, r1, lsl #10
   14320:	cmp	r0, r1, lsl #9
   14324:	adc	r2, r2, r2
   14328:	subcs	r0, r0, r1, lsl #9
   1432c:	cmp	r0, r1, lsl #8
   14330:	adc	r2, r2, r2
   14334:	subcs	r0, r0, r1, lsl #8
   14338:	cmp	r0, r1, lsl #7
   1433c:	adc	r2, r2, r2
   14340:	subcs	r0, r0, r1, lsl #7
   14344:	cmp	r0, r1, lsl #6
   14348:	adc	r2, r2, r2
   1434c:	subcs	r0, r0, r1, lsl #6
   14350:	cmp	r0, r1, lsl #5
   14354:	adc	r2, r2, r2
   14358:	subcs	r0, r0, r1, lsl #5
   1435c:	cmp	r0, r1, lsl #4
   14360:	adc	r2, r2, r2
   14364:	subcs	r0, r0, r1, lsl #4
   14368:	cmp	r0, r1, lsl #3
   1436c:	adc	r2, r2, r2
   14370:	subcs	r0, r0, r1, lsl #3
   14374:	cmp	r0, r1, lsl #2
   14378:	adc	r2, r2, r2
   1437c:	subcs	r0, r0, r1, lsl #2
   14380:	cmp	r0, r1, lsl #1
   14384:	adc	r2, r2, r2
   14388:	subcs	r0, r0, r1, lsl #1
   1438c:	cmp	r0, r1
   14390:	adc	r2, r2, r2
   14394:	subcs	r0, r0, r1
   14398:	mov	r0, r2
   1439c:	bx	lr
   143a0:	moveq	r0, #1
   143a4:	movne	r0, #0
   143a8:	bx	lr
   143ac:	clz	r2, r1
   143b0:	rsb	r2, r2, #31
   143b4:	lsr	r0, r0, r2
   143b8:	bx	lr
   143bc:	cmp	r0, #0
   143c0:	mvnne	r0, #0
   143c4:	b	14628 <abort@plt+0x38a8>
   143c8:	cmp	r1, #0
   143cc:	beq	143bc <abort@plt+0x363c>
   143d0:	push	{r0, r1, lr}
   143d4:	bl	141dc <abort@plt+0x345c>
   143d8:	pop	{r1, r2, lr}
   143dc:	mul	r3, r2, r0
   143e0:	sub	r1, r1, r3
   143e4:	bx	lr
   143e8:	cmp	r1, #0
   143ec:	beq	145f8 <abort@plt+0x3878>
   143f0:	eor	ip, r0, r1
   143f4:	rsbmi	r1, r1, #0
   143f8:	subs	r2, r1, #1
   143fc:	beq	145c4 <abort@plt+0x3844>
   14400:	movs	r3, r0
   14404:	rsbmi	r3, r0, #0
   14408:	cmp	r3, r1
   1440c:	bls	145d0 <abort@plt+0x3850>
   14410:	tst	r1, r2
   14414:	beq	145e0 <abort@plt+0x3860>
   14418:	clz	r2, r3
   1441c:	clz	r0, r1
   14420:	sub	r2, r0, r2
   14424:	rsbs	r2, r2, #31
   14428:	addne	r2, r2, r2, lsl #1
   1442c:	mov	r0, #0
   14430:	addne	pc, pc, r2, lsl #2
   14434:	nop			; (mov r0, r0)
   14438:	cmp	r3, r1, lsl #31
   1443c:	adc	r0, r0, r0
   14440:	subcs	r3, r3, r1, lsl #31
   14444:	cmp	r3, r1, lsl #30
   14448:	adc	r0, r0, r0
   1444c:	subcs	r3, r3, r1, lsl #30
   14450:	cmp	r3, r1, lsl #29
   14454:	adc	r0, r0, r0
   14458:	subcs	r3, r3, r1, lsl #29
   1445c:	cmp	r3, r1, lsl #28
   14460:	adc	r0, r0, r0
   14464:	subcs	r3, r3, r1, lsl #28
   14468:	cmp	r3, r1, lsl #27
   1446c:	adc	r0, r0, r0
   14470:	subcs	r3, r3, r1, lsl #27
   14474:	cmp	r3, r1, lsl #26
   14478:	adc	r0, r0, r0
   1447c:	subcs	r3, r3, r1, lsl #26
   14480:	cmp	r3, r1, lsl #25
   14484:	adc	r0, r0, r0
   14488:	subcs	r3, r3, r1, lsl #25
   1448c:	cmp	r3, r1, lsl #24
   14490:	adc	r0, r0, r0
   14494:	subcs	r3, r3, r1, lsl #24
   14498:	cmp	r3, r1, lsl #23
   1449c:	adc	r0, r0, r0
   144a0:	subcs	r3, r3, r1, lsl #23
   144a4:	cmp	r3, r1, lsl #22
   144a8:	adc	r0, r0, r0
   144ac:	subcs	r3, r3, r1, lsl #22
   144b0:	cmp	r3, r1, lsl #21
   144b4:	adc	r0, r0, r0
   144b8:	subcs	r3, r3, r1, lsl #21
   144bc:	cmp	r3, r1, lsl #20
   144c0:	adc	r0, r0, r0
   144c4:	subcs	r3, r3, r1, lsl #20
   144c8:	cmp	r3, r1, lsl #19
   144cc:	adc	r0, r0, r0
   144d0:	subcs	r3, r3, r1, lsl #19
   144d4:	cmp	r3, r1, lsl #18
   144d8:	adc	r0, r0, r0
   144dc:	subcs	r3, r3, r1, lsl #18
   144e0:	cmp	r3, r1, lsl #17
   144e4:	adc	r0, r0, r0
   144e8:	subcs	r3, r3, r1, lsl #17
   144ec:	cmp	r3, r1, lsl #16
   144f0:	adc	r0, r0, r0
   144f4:	subcs	r3, r3, r1, lsl #16
   144f8:	cmp	r3, r1, lsl #15
   144fc:	adc	r0, r0, r0
   14500:	subcs	r3, r3, r1, lsl #15
   14504:	cmp	r3, r1, lsl #14
   14508:	adc	r0, r0, r0
   1450c:	subcs	r3, r3, r1, lsl #14
   14510:	cmp	r3, r1, lsl #13
   14514:	adc	r0, r0, r0
   14518:	subcs	r3, r3, r1, lsl #13
   1451c:	cmp	r3, r1, lsl #12
   14520:	adc	r0, r0, r0
   14524:	subcs	r3, r3, r1, lsl #12
   14528:	cmp	r3, r1, lsl #11
   1452c:	adc	r0, r0, r0
   14530:	subcs	r3, r3, r1, lsl #11
   14534:	cmp	r3, r1, lsl #10
   14538:	adc	r0, r0, r0
   1453c:	subcs	r3, r3, r1, lsl #10
   14540:	cmp	r3, r1, lsl #9
   14544:	adc	r0, r0, r0
   14548:	subcs	r3, r3, r1, lsl #9
   1454c:	cmp	r3, r1, lsl #8
   14550:	adc	r0, r0, r0
   14554:	subcs	r3, r3, r1, lsl #8
   14558:	cmp	r3, r1, lsl #7
   1455c:	adc	r0, r0, r0
   14560:	subcs	r3, r3, r1, lsl #7
   14564:	cmp	r3, r1, lsl #6
   14568:	adc	r0, r0, r0
   1456c:	subcs	r3, r3, r1, lsl #6
   14570:	cmp	r3, r1, lsl #5
   14574:	adc	r0, r0, r0
   14578:	subcs	r3, r3, r1, lsl #5
   1457c:	cmp	r3, r1, lsl #4
   14580:	adc	r0, r0, r0
   14584:	subcs	r3, r3, r1, lsl #4
   14588:	cmp	r3, r1, lsl #3
   1458c:	adc	r0, r0, r0
   14590:	subcs	r3, r3, r1, lsl #3
   14594:	cmp	r3, r1, lsl #2
   14598:	adc	r0, r0, r0
   1459c:	subcs	r3, r3, r1, lsl #2
   145a0:	cmp	r3, r1, lsl #1
   145a4:	adc	r0, r0, r0
   145a8:	subcs	r3, r3, r1, lsl #1
   145ac:	cmp	r3, r1
   145b0:	adc	r0, r0, r0
   145b4:	subcs	r3, r3, r1
   145b8:	cmp	ip, #0
   145bc:	rsbmi	r0, r0, #0
   145c0:	bx	lr
   145c4:	teq	ip, r0
   145c8:	rsbmi	r0, r0, #0
   145cc:	bx	lr
   145d0:	movcc	r0, #0
   145d4:	asreq	r0, ip, #31
   145d8:	orreq	r0, r0, #1
   145dc:	bx	lr
   145e0:	clz	r2, r1
   145e4:	rsb	r2, r2, #31
   145e8:	cmp	ip, #0
   145ec:	lsr	r0, r3, r2
   145f0:	rsbmi	r0, r0, #0
   145f4:	bx	lr
   145f8:	cmp	r0, #0
   145fc:	mvngt	r0, #-2147483648	; 0x80000000
   14600:	movlt	r0, #-2147483648	; 0x80000000
   14604:	b	14628 <abort@plt+0x38a8>
   14608:	cmp	r1, #0
   1460c:	beq	145f8 <abort@plt+0x3878>
   14610:	push	{r0, r1, lr}
   14614:	bl	143f0 <abort@plt+0x3670>
   14618:	pop	{r1, r2, lr}
   1461c:	mul	r3, r2, r0
   14620:	sub	r1, r1, r3
   14624:	bx	lr
   14628:	push	{r1, lr}
   1462c:	mov	r0, #8
   14630:	bl	10b7c <raise@plt>
   14634:	pop	{r1, pc}
   14638:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1463c:	mov	r7, r0
   14640:	ldr	r6, [pc, #72]	; 14690 <abort@plt+0x3910>
   14644:	ldr	r5, [pc, #72]	; 14694 <abort@plt+0x3914>
   14648:	add	r6, pc, r6
   1464c:	add	r5, pc, r5
   14650:	sub	r6, r6, r5
   14654:	mov	r8, r1
   14658:	mov	r9, r2
   1465c:	bl	10b44 <calloc@plt-0x20>
   14660:	asrs	r6, r6, #2
   14664:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14668:	mov	r4, #0
   1466c:	add	r4, r4, #1
   14670:	ldr	r3, [r5], #4
   14674:	mov	r2, r9
   14678:	mov	r1, r8
   1467c:	mov	r0, r7
   14680:	blx	r3
   14684:	cmp	r6, r4
   14688:	bne	1466c <abort@plt+0x38ec>
   1468c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14690:	andeq	r0, r1, r0, asr #17
   14694:			; <UNDEFINED> instruction: 0x000108b8
   14698:	bx	lr
   1469c:	ldr	r3, [pc, #12]	; 146b0 <abort@plt+0x3930>
   146a0:	mov	r1, #0
   146a4:	add	r3, pc, r3
   146a8:	ldr	r2, [r3]
   146ac:	b	10cf0 <__cxa_atexit@plt>
   146b0:	andeq	r0, r1, r0, lsr #20

Disassembly of section .fini:

000146b4 <.fini>:
   146b4:	push	{r3, lr}
   146b8:	pop	{r3, pc}
