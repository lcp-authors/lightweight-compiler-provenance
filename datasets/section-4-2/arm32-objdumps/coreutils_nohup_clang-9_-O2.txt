
../repos/coreutils/src/nohup:     file format elf32-littlearm


Disassembly of section .init:

00010d98 <.init>:
   10d98:	push	{r3, lr}
   10d9c:	bl	11058 <__mempcpy_chk@plt+0x48>
   10da0:	pop	{r3, pc}

Disassembly of section .plt:

00010da4 <calloc@plt-0x14>:
   10da4:	push	{lr}		; (str lr, [sp, #-4]!)
   10da8:	ldr	lr, [pc, #4]	; 10db4 <calloc@plt-0x4>
   10dac:	add	lr, pc, lr
   10db0:	ldr	pc, [lr, #8]!
   10db4:	andeq	r5, r1, ip, asr #4

00010db8 <calloc@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #588]!	; 0x24c

00010dc4 <fputs_unlocked@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #580]!	; 0x244

00010dd0 <strcmp@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #572]!	; 0x23c

00010ddc <fflush@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #564]!	; 0x234

00010de8 <free@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #556]!	; 0x22c

00010df4 <_exit@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #548]!	; 0x224

00010e00 <memcpy@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #540]!	; 0x21c

00010e0c <execvp@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #532]!	; 0x214

00010e18 <mbsinit@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #524]!	; 0x20c

00010e24 <signal@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #516]!	; 0x204

00010e30 <dcgettext@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #508]!	; 0x1fc

00010e3c <dup2@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #500]!	; 0x1f4

00010e48 <realloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #492]!	; 0x1ec

00010e54 <textdomain@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #484]!	; 0x1e4

00010e60 <iswprint@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #476]!	; 0x1dc

00010e6c <fwrite@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #468]!	; 0x1d4

00010e78 <lseek64@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #460]!	; 0x1cc

00010e84 <__ctype_get_mb_cur_max@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #452]!	; 0x1c4

00010e90 <__fpending@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #444]!	; 0x1bc

00010e9c <mbrtowc@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea8 <error@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #428]!	; 0x1ac

00010eb4 <open64@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #420]!	; 0x1a4

00010ec0 <getenv@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #412]!	; 0x19c

00010ecc <malloc@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #404]!	; 0x194

00010ed8 <__libc_start_main@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #396]!	; 0x18c

00010ee4 <__freading@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #388]!	; 0x184

00010ef0 <__gmon_start__@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #380]!	; 0x17c

00010efc <getopt_long@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #372]!	; 0x174

00010f08 <__ctype_b_loc@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #364]!	; 0x16c

00010f14 <exit@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #356]!	; 0x164

00010f20 <bcmp@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #348]!	; 0x15c

00010f2c <strlen@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #340]!	; 0x154

00010f38 <__errno_location@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #332]!	; 0x14c

00010f44 <__cxa_atexit@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #324]!	; 0x144

00010f50 <memset@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #316]!	; 0x13c

00010f5c <__printf_chk@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #308]!	; 0x134

00010f68 <fileno@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #300]!	; 0x12c

00010f74 <__fprintf_chk@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #292]!	; 0x124

00010f80 <fclose@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #284]!	; 0x11c

00010f8c <fseeko64@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #276]!	; 0x114

00010f98 <fcntl64@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #268]!	; 0x10c

00010fa4 <setlocale@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #260]!	; 0x104

00010fb0 <strrchr@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #252]!	; 0xfc

00010fbc <nl_langinfo@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #244]!	; 0xf4

00010fc8 <bindtextdomain@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #236]!	; 0xec

00010fd4 <umask@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #228]!	; 0xe4

00010fe0 <isatty@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #220]!	; 0xdc

00010fec <strncmp@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #212]!	; 0xd4

00010ff8 <abort@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #204]!	; 0xcc

00011004 <close@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #196]!	; 0xc4

00011010 <__mempcpy_chk@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

0001101c <.text>:
   1101c:	mov	fp, #0
   11020:	mov	lr, #0
   11024:	pop	{r1}		; (ldr r1, [sp], #4)
   11028:	mov	r2, sp
   1102c:	push	{r2}		; (str r2, [sp, #-4]!)
   11030:	push	{r0}		; (str r0, [sp, #-4]!)
   11034:	ldr	ip, [pc, #16]	; 1104c <__mempcpy_chk@plt+0x3c>
   11038:	push	{ip}		; (str ip, [sp, #-4]!)
   1103c:	ldr	r0, [pc, #12]	; 11050 <__mempcpy_chk@plt+0x40>
   11040:	ldr	r3, [pc, #12]	; 11054 <__mempcpy_chk@plt+0x44>
   11044:	bl	10ed8 <__libc_start_main@plt>
   11048:	bl	10ff8 <abort@plt>
   1104c:	andeq	r4, r1, r0, asr lr
   11050:	muleq	r1, ip, r3
   11054:	strdeq	r4, [r1], -r0
   11058:	ldr	r3, [pc, #20]	; 11074 <__mempcpy_chk@plt+0x64>
   1105c:	ldr	r2, [pc, #20]	; 11078 <__mempcpy_chk@plt+0x68>
   11060:	add	r3, pc, r3
   11064:	ldr	r2, [r3, r2]
   11068:	cmp	r2, #0
   1106c:	bxeq	lr
   11070:	b	10ef0 <__gmon_start__@plt>
   11074:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11078:	ldrdeq	r0, [r0], -r8
   1107c:	ldr	r0, [pc, #24]	; 1109c <__mempcpy_chk@plt+0x8c>
   11080:	ldr	r3, [pc, #24]	; 110a0 <__mempcpy_chk@plt+0x90>
   11084:	cmp	r3, r0
   11088:	bxeq	lr
   1108c:	ldr	r3, [pc, #16]	; 110a4 <__mempcpy_chk@plt+0x94>
   11090:	cmp	r3, #0
   11094:	bxeq	lr
   11098:	bx	r3
   1109c:	andeq	r6, r2, r0, lsr r1
   110a0:	andeq	r6, r2, r0, lsr r1
   110a4:	andeq	r0, r0, r0
   110a8:	ldr	r0, [pc, #36]	; 110d4 <__mempcpy_chk@plt+0xc4>
   110ac:	ldr	r1, [pc, #36]	; 110d8 <__mempcpy_chk@plt+0xc8>
   110b0:	sub	r1, r1, r0
   110b4:	asr	r1, r1, #2
   110b8:	add	r1, r1, r1, lsr #31
   110bc:	asrs	r1, r1, #1
   110c0:	bxeq	lr
   110c4:	ldr	r3, [pc, #16]	; 110dc <__mempcpy_chk@plt+0xcc>
   110c8:	cmp	r3, #0
   110cc:	bxeq	lr
   110d0:	bx	r3
   110d4:	andeq	r6, r2, r0, lsr r1
   110d8:	andeq	r6, r2, r0, lsr r1
   110dc:	andeq	r0, r0, r0
   110e0:	push	{r4, lr}
   110e4:	ldr	r4, [pc, #24]	; 11104 <__mempcpy_chk@plt+0xf4>
   110e8:	ldrb	r3, [r4]
   110ec:	cmp	r3, #0
   110f0:	popne	{r4, pc}
   110f4:	bl	1107c <__mempcpy_chk@plt+0x6c>
   110f8:	mov	r3, #1
   110fc:	strb	r3, [r4]
   11100:	pop	{r4, pc}
   11104:	andeq	r6, r2, ip, asr #2
   11108:	b	110a8 <__mempcpy_chk@plt+0x98>
   1110c:	push	{fp, lr}
   11110:	mov	fp, sp
   11114:	sub	sp, sp, #56	; 0x38
   11118:	mov	r4, r0
   1111c:	cmp	r0, #0
   11120:	bne	11358 <__mempcpy_chk@plt+0x348>
   11124:	movw	r1, #20131	; 0x4ea3
   11128:	mov	r0, #0
   1112c:	mov	r2, #5
   11130:	movt	r1, #1
   11134:	bl	10e30 <dcgettext@plt>
   11138:	movw	r5, #24924	; 0x615c
   1113c:	mov	r1, r0
   11140:	mov	r0, #1
   11144:	movt	r5, #2
   11148:	ldr	r2, [r5]
   1114c:	mov	r3, r2
   11150:	bl	10f5c <__printf_chk@plt>
   11154:	movw	r1, #20176	; 0x4ed0
   11158:	mov	r0, #0
   1115c:	mov	r2, #5
   11160:	movt	r1, #1
   11164:	bl	10e30 <dcgettext@plt>
   11168:	movw	r7, #24900	; 0x6144
   1116c:	movt	r7, #2
   11170:	ldr	r1, [r7]
   11174:	bl	10dc4 <fputs_unlocked@plt>
   11178:	movw	r1, #20216	; 0x4ef8
   1117c:	mov	r0, #0
   11180:	mov	r2, #5
   11184:	movt	r1, #1
   11188:	bl	10e30 <dcgettext@plt>
   1118c:	ldr	r1, [r7]
   11190:	bl	10dc4 <fputs_unlocked@plt>
   11194:	movw	r1, #20261	; 0x4f25
   11198:	mov	r0, #0
   1119c:	mov	r2, #5
   111a0:	movt	r1, #1
   111a4:	bl	10e30 <dcgettext@plt>
   111a8:	ldr	r1, [r7]
   111ac:	bl	10dc4 <fputs_unlocked@plt>
   111b0:	movw	r1, #20315	; 0x4f5b
   111b4:	mov	r0, #0
   111b8:	mov	r2, #5
   111bc:	movt	r1, #1
   111c0:	bl	10e30 <dcgettext@plt>
   111c4:	ldr	r2, [r5]
   111c8:	mov	r1, r0
   111cc:	mov	r0, #1
   111d0:	bl	10f5c <__printf_chk@plt>
   111d4:	movw	r1, #20606	; 0x507e
   111d8:	mov	r0, #0
   111dc:	mov	r2, #5
   111e0:	movt	r1, #1
   111e4:	bl	10e30 <dcgettext@plt>
   111e8:	movw	r5, #20797	; 0x513d
   111ec:	mov	r1, r0
   111f0:	mov	r0, #1
   111f4:	movt	r5, #1
   111f8:	mov	r2, r5
   111fc:	bl	10f5c <__printf_chk@plt>
   11200:	movw	r0, #21448	; 0x53c8
   11204:	mov	r2, #48	; 0x30
   11208:	mov	r6, sp
   1120c:	movt	r0, #1
   11210:	add	r1, r0, #32
   11214:	add	r3, r0, #16
   11218:	vld1.64	{d18-d19}, [r0], r2
   1121c:	vld1.64	{d16-d17}, [r1]
   11220:	vld1.64	{d20-d21}, [r3]
   11224:	vldr	d22, [r0]
   11228:	add	r1, r6, #32
   1122c:	add	r0, r6, #16
   11230:	vst1.64	{d16-d17}, [r1]
   11234:	movw	r1, #21134	; 0x528e
   11238:	vst1.64	{d20-d21}, [r0]
   1123c:	mov	r0, r6
   11240:	movt	r1, #1
   11244:	vst1.64	{d18-d19}, [r0], r2
   11248:	vstr	d22, [r0]
   1124c:	mov	r0, r5
   11250:	bl	10dd0 <strcmp@plt>
   11254:	cmp	r0, #0
   11258:	ldrne	r1, [r6, #8]!
   1125c:	cmpne	r1, #0
   11260:	bne	1124c <__mempcpy_chk@plt+0x23c>
   11264:	movw	r1, #21229	; 0x52ed
   11268:	ldr	r6, [r6, #4]
   1126c:	mov	r0, #0
   11270:	mov	r2, #5
   11274:	movt	r1, #1
   11278:	bl	10e30 <dcgettext@plt>
   1127c:	movw	r2, #20843	; 0x516b
   11280:	movw	r3, #21252	; 0x5304
   11284:	mov	r1, r0
   11288:	mov	r0, #1
   1128c:	movt	r2, #1
   11290:	movt	r3, #1
   11294:	bl	10f5c <__printf_chk@plt>
   11298:	cmp	r6, #0
   1129c:	mov	r0, #5
   112a0:	mov	r1, #0
   112a4:	moveq	r6, r5
   112a8:	bl	10fa4 <setlocale@plt>
   112ac:	cmp	r0, #0
   112b0:	beq	112e8 <__mempcpy_chk@plt+0x2d8>
   112b4:	movw	r1, #21292	; 0x532c
   112b8:	mov	r2, #3
   112bc:	movt	r1, #1
   112c0:	bl	10fec <strncmp@plt>
   112c4:	cmp	r0, #0
   112c8:	beq	112e8 <__mempcpy_chk@plt+0x2d8>
   112cc:	movw	r1, #21296	; 0x5330
   112d0:	mov	r0, #0
   112d4:	mov	r2, #5
   112d8:	movt	r1, #1
   112dc:	bl	10e30 <dcgettext@plt>
   112e0:	ldr	r1, [r7]
   112e4:	bl	10dc4 <fputs_unlocked@plt>
   112e8:	movw	r1, #21367	; 0x5377
   112ec:	mov	r0, #0
   112f0:	mov	r2, #5
   112f4:	movt	r1, #1
   112f8:	bl	10e30 <dcgettext@plt>
   112fc:	movw	r2, #21252	; 0x5304
   11300:	mov	r1, r0
   11304:	mov	r0, #1
   11308:	mov	r3, r5
   1130c:	movt	r2, #1
   11310:	bl	10f5c <__printf_chk@plt>
   11314:	movw	r1, #21394	; 0x5392
   11318:	mov	r0, #0
   1131c:	mov	r2, #5
   11320:	movt	r1, #1
   11324:	bl	10e30 <dcgettext@plt>
   11328:	mov	r1, r0
   1132c:	movw	r0, #21162	; 0x52aa
   11330:	movw	r3, #20215	; 0x4ef7
   11334:	cmp	r6, r5
   11338:	mov	r2, r6
   1133c:	movt	r0, #1
   11340:	movt	r3, #1
   11344:	moveq	r3, r0
   11348:	mov	r0, #1
   1134c:	bl	10f5c <__printf_chk@plt>
   11350:	mov	r0, r4
   11354:	bl	10f14 <exit@plt>
   11358:	movw	r0, #24896	; 0x6140
   1135c:	movw	r1, #20092	; 0x4e7c
   11360:	mov	r2, #5
   11364:	movt	r0, #2
   11368:	movt	r1, #1
   1136c:	ldr	r5, [r0]
   11370:	mov	r0, #0
   11374:	bl	10e30 <dcgettext@plt>
   11378:	mov	r2, r0
   1137c:	movw	r0, #24924	; 0x615c
   11380:	mov	r1, #1
   11384:	movt	r0, #2
   11388:	ldr	r3, [r0]
   1138c:	mov	r0, r5
   11390:	bl	10f74 <__fprintf_chk@plt>
   11394:	mov	r0, r4
   11398:	bl	10f14 <exit@plt>
   1139c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113a0:	add	fp, sp, #28
   113a4:	sub	sp, sp, #36	; 0x24
   113a8:	mov	r4, r0
   113ac:	ldr	r0, [r1]
   113b0:	mov	r9, r1
   113b4:	bl	11eb4 <__mempcpy_chk@plt+0xea4>
   113b8:	movw	r1, #20215	; 0x4ef7
   113bc:	mov	r0, #6
   113c0:	movt	r1, #1
   113c4:	bl	10fa4 <setlocale@plt>
   113c8:	movw	r5, #20847	; 0x516f
   113cc:	movw	r1, #20803	; 0x5143
   113d0:	movt	r5, #1
   113d4:	movt	r1, #1
   113d8:	mov	r0, r5
   113dc:	bl	10fc8 <bindtextdomain@plt>
   113e0:	mov	r0, r5
   113e4:	bl	10e54 <textdomain@plt>
   113e8:	movw	r0, #20827	; 0x515b
   113ec:	movt	r0, #1
   113f0:	bl	10ec0 <getenv@plt>
   113f4:	cmp	r0, #0
   113f8:	movw	r0, #24812	; 0x60ec
   113fc:	mov	sl, #127	; 0x7f
   11400:	movt	r0, #2
   11404:	movweq	sl, #125	; 0x7d
   11408:	str	sl, [r0]
   1140c:	movw	r0, #6384	; 0x18f0
   11410:	movt	r0, #1
   11414:	bl	14e54 <__mempcpy_chk@plt+0x3e44>
   11418:	movw	r0, #24808	; 0x60e8
   1141c:	movw	r2, #4364	; 0x110c
   11420:	movw	r1, #20857	; 0x5179
   11424:	movw	r3, #20843	; 0x516b
   11428:	mov	r5, #0
   1142c:	movt	r0, #2
   11430:	movt	r2, #1
   11434:	movt	r1, #1
   11438:	movt	r3, #1
   1143c:	ldr	r0, [r0]
   11440:	stm	sp, {r0, r5}
   11444:	str	r2, [sp, #8]
   11448:	movw	r2, #20797	; 0x513d
   1144c:	str	r1, [sp, #12]
   11450:	mov	r0, r4
   11454:	mov	r1, r9
   11458:	str	r5, [sp, #16]
   1145c:	movt	r2, #1
   11460:	bl	11df0 <__mempcpy_chk@plt+0xde0>
   11464:	movw	r0, #24888	; 0x6138
   11468:	movt	r0, #2
   1146c:	ldr	r0, [r0]
   11470:	cmp	r0, r4
   11474:	bge	118a4 <__mempcpy_chk@plt+0x894>
   11478:	mov	r0, #0
   1147c:	bl	10fe0 <isatty@plt>
   11480:	mov	r6, r0
   11484:	mov	r0, #1
   11488:	bl	10fe0 <isatty@plt>
   1148c:	mov	r7, r0
   11490:	cmp	r0, #0
   11494:	bne	114ac <__mempcpy_chk@plt+0x49c>
   11498:	bl	10f38 <__errno_location@plt>
   1149c:	ldr	r0, [r0]
   114a0:	sub	r0, r0, #9
   114a4:	clz	r0, r0
   114a8:	lsr	r5, r0, #5
   114ac:	mov	r0, #2
   114b0:	bl	10fe0 <isatty@plt>
   114b4:	mov	r8, r0
   114b8:	cmp	r6, #0
   114bc:	beq	114e8 <__mempcpy_chk@plt+0x4d8>
   114c0:	movw	r1, #20886	; 0x5196
   114c4:	mov	r0, #0
   114c8:	mov	r2, #1
   114cc:	mov	r3, #0
   114d0:	movt	r1, #1
   114d4:	bl	11bb8 <__mempcpy_chk@plt+0xba8>
   114d8:	cmn	r0, #1
   114dc:	ble	116bc <__mempcpy_chk@plt+0x6ac>
   114e0:	orrs	r0, r8, r7
   114e4:	beq	116f0 <__mempcpy_chk@plt+0x6e0>
   114e8:	cmp	r7, #0
   114ec:	str	r6, [sp, #32]
   114f0:	beq	11520 <__mempcpy_chk@plt+0x510>
   114f4:	mvn	r0, #384	; 0x180
   114f8:	str	r5, [sp, #28]
   114fc:	bl	10fd4 <umask@plt>
   11500:	movw	r1, #20952	; 0x51d8
   11504:	mov	r5, r0
   11508:	mov	r0, #1
   1150c:	movw	r2, #1089	; 0x441
   11510:	mov	r3, #384	; 0x180
   11514:	movt	r1, #1
   11518:	bl	11bb8 <__mempcpy_chk@plt+0xba8>
   1151c:	b	1155c <__mempcpy_chk@plt+0x54c>
   11520:	cmp	r8, #0
   11524:	mov	r0, r8
   11528:	mov	r6, #1
   1152c:	movwne	r0, #1
   11530:	tst	r5, r0
   11534:	beq	115dc <__mempcpy_chk@plt+0x5cc>
   11538:	mvn	r0, #384	; 0x180
   1153c:	str	r5, [sp, #28]
   11540:	bl	10fd4 <umask@plt>
   11544:	mov	r5, r0
   11548:	movw	r0, #20952	; 0x51d8
   1154c:	movw	r1, #1089	; 0x441
   11550:	mov	r2, #384	; 0x180
   11554:	movt	r0, #1
   11558:	bl	10eb4 <open64@plt>
   1155c:	mov	r6, r0
   11560:	cmn	r0, #1
   11564:	ble	11660 <__mempcpy_chk@plt+0x650>
   11568:	str	r9, [sp, #24]
   1156c:	movw	r9, #20952	; 0x51d8
   11570:	mov	r4, #0
   11574:	movt	r9, #1
   11578:	mov	r0, r5
   1157c:	bl	10fd4 <umask@plt>
   11580:	ldr	r2, [sp, #32]
   11584:	movw	r0, #20985	; 0x51f9
   11588:	movw	r1, #21004	; 0x520c
   1158c:	movt	r0, #1
   11590:	movt	r1, #1
   11594:	cmp	r2, #0
   11598:	mov	r2, #5
   1159c:	movne	r1, r0
   115a0:	mov	r0, #0
   115a4:	bl	10e30 <dcgettext@plt>
   115a8:	mov	r5, r0
   115ac:	mov	r0, #4
   115b0:	mov	r1, r9
   115b4:	bl	135e0 <__mempcpy_chk@plt+0x25d0>
   115b8:	mov	r3, r0
   115bc:	mov	r0, #0
   115c0:	mov	r1, #0
   115c4:	mov	r2, r5
   115c8:	bl	10ea8 <error@plt>
   115cc:	mov	r0, r4
   115d0:	bl	11d18 <__mempcpy_chk@plt+0xd08>
   115d4:	ldr	r9, [sp, #24]
   115d8:	ldr	r5, [sp, #28]
   115dc:	cmp	r8, #0
   115e0:	beq	11658 <__mempcpy_chk@plt+0x648>
   115e4:	mov	r0, #2
   115e8:	movw	r1, #1030	; 0x406
   115ec:	mov	r2, #3
   115f0:	bl	119d8 <__mempcpy_chk@plt+0x9c8>
   115f4:	mov	r4, r0
   115f8:	cmp	r7, #0
   115fc:	bne	11638 <__mempcpy_chk@plt+0x628>
   11600:	ldr	r2, [sp, #32]
   11604:	movw	r0, #21027	; 0x5223
   11608:	movw	r1, #21046	; 0x5236
   1160c:	movt	r0, #1
   11610:	movt	r1, #1
   11614:	cmp	r2, #0
   11618:	mov	r2, #5
   1161c:	movne	r1, r0
   11620:	mov	r0, #0
   11624:	bl	10e30 <dcgettext@plt>
   11628:	mov	r2, r0
   1162c:	mov	r0, #0
   11630:	mov	r1, #0
   11634:	bl	10ea8 <error@plt>
   11638:	mov	r0, r6
   1163c:	mov	r1, #2
   11640:	bl	10e3c <dup2@plt>
   11644:	cmn	r0, #1
   11648:	ble	11718 <__mempcpy_chk@plt+0x708>
   1164c:	cmp	r5, #0
   11650:	bne	11754 <__mempcpy_chk@plt+0x744>
   11654:	b	1175c <__mempcpy_chk@plt+0x74c>
   11658:	mov	r4, #2
   1165c:	b	1175c <__mempcpy_chk@plt+0x74c>
   11660:	bl	10f38 <__errno_location@plt>
   11664:	mov	r4, r0
   11668:	ldr	r6, [r0]
   1166c:	movw	r0, #20962	; 0x51e2
   11670:	movt	r0, #1
   11674:	bl	10ec0 <getenv@plt>
   11678:	cmp	r0, #0
   1167c:	beq	117e4 <__mempcpy_chk@plt+0x7d4>
   11680:	movw	r1, #20952	; 0x51d8
   11684:	mov	r2, #0
   11688:	str	r6, [sp, #20]
   1168c:	str	r9, [sp, #24]
   11690:	movt	r1, #1
   11694:	bl	11c20 <__mempcpy_chk@plt+0xc10>
   11698:	mov	r9, r0
   1169c:	cmp	r7, #0
   116a0:	beq	117f0 <__mempcpy_chk@plt+0x7e0>
   116a4:	mov	r0, #1
   116a8:	mov	r1, r9
   116ac:	movw	r2, #1089	; 0x441
   116b0:	mov	r3, #384	; 0x180
   116b4:	bl	11bb8 <__mempcpy_chk@plt+0xba8>
   116b8:	b	11800 <__mempcpy_chk@plt+0x7f0>
   116bc:	bl	10f38 <__errno_location@plt>
   116c0:	movw	r1, #20896	; 0x51a0
   116c4:	ldr	r4, [r0]
   116c8:	mov	r0, #0
   116cc:	mov	r2, #5
   116d0:	movt	r1, #1
   116d4:	bl	10e30 <dcgettext@plt>
   116d8:	mov	r2, r0
   116dc:	mov	r0, sl
   116e0:	mov	r1, r4
   116e4:	bl	10ea8 <error@plt>
   116e8:	orrs	r0, r8, r7
   116ec:	bne	114e8 <__mempcpy_chk@plt+0x4d8>
   116f0:	movw	r1, #20937	; 0x51c9
   116f4:	mov	r0, #0
   116f8:	mov	r2, #5
   116fc:	movt	r1, #1
   11700:	bl	10e30 <dcgettext@plt>
   11704:	mov	r2, r0
   11708:	mov	r0, #0
   1170c:	mov	r1, #0
   11710:	bl	10ea8 <error@plt>
   11714:	b	114e8 <__mempcpy_chk@plt+0x4d8>
   11718:	bl	10f38 <__errno_location@plt>
   1171c:	movw	r1, #21075	; 0x5253
   11720:	mov	r7, r5
   11724:	ldr	r5, [r0]
   11728:	mov	r0, #0
   1172c:	mov	r2, #5
   11730:	movt	r1, #1
   11734:	bl	10e30 <dcgettext@plt>
   11738:	mov	r2, r0
   1173c:	mov	r1, r5
   11740:	mov	r0, sl
   11744:	mov	r5, r7
   11748:	bl	10ea8 <error@plt>
   1174c:	cmp	r5, #0
   11750:	beq	1175c <__mempcpy_chk@plt+0x74c>
   11754:	mov	r0, r6
   11758:	bl	11004 <close@plt>
   1175c:	movw	r0, #24896	; 0x6140
   11760:	movt	r0, #2
   11764:	ldr	r0, [r0]
   11768:	ldrb	r0, [r0]
   1176c:	tst	r0, #32
   11770:	bne	11898 <__mempcpy_chk@plt+0x888>
   11774:	mov	r0, #1
   11778:	mov	r1, #1
   1177c:	bl	10e24 <signal@plt>
   11780:	movw	r0, #24888	; 0x6138
   11784:	movt	r0, #2
   11788:	ldr	r0, [r0]
   1178c:	ldr	r0, [r9, r0, lsl #2]!
   11790:	mov	r1, r9
   11794:	bl	10e0c <execvp@plt>
   11798:	bl	10f38 <__errno_location@plt>
   1179c:	ldr	r5, [r0]
   117a0:	mov	r0, r4
   117a4:	mov	r1, #2
   117a8:	mov	sl, #126	; 0x7e
   117ac:	cmp	r5, #2
   117b0:	movweq	sl, #127	; 0x7f
   117b4:	bl	10e3c <dup2@plt>
   117b8:	cmp	r0, #2
   117bc:	bne	11898 <__mempcpy_chk@plt+0x888>
   117c0:	movw	r1, #21109	; 0x5275
   117c4:	mov	r0, #0
   117c8:	mov	r2, #5
   117cc:	movt	r1, #1
   117d0:	bl	10e30 <dcgettext@plt>
   117d4:	ldr	r1, [r9]
   117d8:	mov	r4, r0
   117dc:	mov	r0, #4
   117e0:	b	11880 <__mempcpy_chk@plt+0x870>
   117e4:	mov	r9, #0
   117e8:	mov	r5, r6
   117ec:	b	1181c <__mempcpy_chk@plt+0x80c>
   117f0:	mov	r0, r9
   117f4:	movw	r1, #1089	; 0x441
   117f8:	mov	r2, #384	; 0x180
   117fc:	bl	10eb4 <open64@plt>
   11800:	mov	r6, r0
   11804:	cmn	r0, #1
   11808:	ble	11814 <__mempcpy_chk@plt+0x804>
   1180c:	mov	r4, r9
   11810:	b	11578 <__mempcpy_chk@plt+0x568>
   11814:	ldr	r5, [r4]
   11818:	ldr	r6, [sp, #20]
   1181c:	movw	r1, #20967	; 0x51e7
   11820:	mov	r0, #0
   11824:	mov	r2, #5
   11828:	movt	r1, #1
   1182c:	bl	10e30 <dcgettext@plt>
   11830:	movw	r1, #20952	; 0x51d8
   11834:	mov	r4, r0
   11838:	mov	r0, #4
   1183c:	movt	r1, #1
   11840:	bl	135e0 <__mempcpy_chk@plt+0x25d0>
   11844:	mov	r3, r0
   11848:	mov	r0, #0
   1184c:	mov	r1, r6
   11850:	mov	r2, r4
   11854:	bl	10ea8 <error@plt>
   11858:	cmp	r9, #0
   1185c:	beq	11898 <__mempcpy_chk@plt+0x888>
   11860:	movw	r1, #20967	; 0x51e7
   11864:	mov	r0, #0
   11868:	mov	r2, #5
   1186c:	movt	r1, #1
   11870:	bl	10e30 <dcgettext@plt>
   11874:	mov	r4, r0
   11878:	mov	r0, #4
   1187c:	mov	r1, r9
   11880:	bl	135e0 <__mempcpy_chk@plt+0x25d0>
   11884:	mov	r3, r0
   11888:	mov	r0, #0
   1188c:	mov	r1, r5
   11890:	mov	r2, r4
   11894:	bl	10ea8 <error@plt>
   11898:	mov	r0, sl
   1189c:	sub	sp, fp, #28
   118a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118a4:	movw	r1, #20870	; 0x5186
   118a8:	mov	r0, #0
   118ac:	mov	r2, #5
   118b0:	movt	r1, #1
   118b4:	bl	10e30 <dcgettext@plt>
   118b8:	mov	r2, r0
   118bc:	mov	r0, #0
   118c0:	mov	r1, #0
   118c4:	bl	10ea8 <error@plt>
   118c8:	mov	r0, sl
   118cc:	bl	1110c <__mempcpy_chk@plt+0xfc>
   118d0:	movw	r1, #24912	; 0x6150
   118d4:	movt	r1, #2
   118d8:	str	r0, [r1]
   118dc:	bx	lr
   118e0:	movw	r1, #24916	; 0x6154
   118e4:	movt	r1, #2
   118e8:	strb	r0, [r1]
   118ec:	bx	lr
   118f0:	push	{r4, r5, r6, sl, fp, lr}
   118f4:	add	fp, sp, #16
   118f8:	sub	sp, sp, #8
   118fc:	movw	r0, #24900	; 0x6144
   11900:	movt	r0, #2
   11904:	ldr	r0, [r0]
   11908:	bl	149e8 <__mempcpy_chk@plt+0x39d8>
   1190c:	cmp	r0, #0
   11910:	beq	11938 <__mempcpy_chk@plt+0x928>
   11914:	movw	r0, #24916	; 0x6154
   11918:	movt	r0, #2
   1191c:	ldrb	r0, [r0]
   11920:	cmp	r0, #0
   11924:	beq	11958 <__mempcpy_chk@plt+0x948>
   11928:	bl	10f38 <__errno_location@plt>
   1192c:	ldr	r0, [r0]
   11930:	cmp	r0, #32
   11934:	bne	11958 <__mempcpy_chk@plt+0x948>
   11938:	movw	r0, #24896	; 0x6140
   1193c:	movt	r0, #2
   11940:	ldr	r0, [r0]
   11944:	bl	149e8 <__mempcpy_chk@plt+0x39d8>
   11948:	cmp	r0, #0
   1194c:	subeq	sp, fp, #16
   11950:	popeq	{r4, r5, r6, sl, fp, pc}
   11954:	b	119c8 <__mempcpy_chk@plt+0x9b8>
   11958:	movw	r1, #21519	; 0x540f
   1195c:	mov	r0, #0
   11960:	mov	r2, #5
   11964:	movt	r1, #1
   11968:	bl	10e30 <dcgettext@plt>
   1196c:	mov	r4, r0
   11970:	movw	r0, #24912	; 0x6150
   11974:	movt	r0, #2
   11978:	ldr	r6, [r0]
   1197c:	bl	10f38 <__errno_location@plt>
   11980:	ldr	r5, [r0]
   11984:	cmp	r6, #0
   11988:	bne	119a4 <__mempcpy_chk@plt+0x994>
   1198c:	movw	r2, #21535	; 0x541f
   11990:	mov	r0, #0
   11994:	mov	r1, r5
   11998:	mov	r3, r4
   1199c:	movt	r2, #1
   119a0:	b	119c4 <__mempcpy_chk@plt+0x9b4>
   119a4:	mov	r0, r6
   119a8:	bl	13780 <__mempcpy_chk@plt+0x2770>
   119ac:	movw	r2, #21531	; 0x541b
   119b0:	mov	r3, r0
   119b4:	str	r4, [sp]
   119b8:	mov	r0, #0
   119bc:	mov	r1, r5
   119c0:	movt	r2, #1
   119c4:	bl	10ea8 <error@plt>
   119c8:	movw	r0, #24812	; 0x60ec
   119cc:	movt	r0, #2
   119d0:	ldr	r0, [r0]
   119d4:	bl	10df4 <_exit@plt>
   119d8:	sub	sp, sp, #8
   119dc:	push	{r4, r5, r6, r7, fp, lr}
   119e0:	add	fp, sp, #16
   119e4:	sub	sp, sp, #8
   119e8:	mov	r5, r0
   119ec:	add	r0, fp, #8
   119f0:	cmp	r1, #11
   119f4:	str	r2, [fp, #8]
   119f8:	str	r3, [fp, #12]
   119fc:	str	r0, [sp, #4]
   11a00:	bhi	11a3c <__mempcpy_chk@plt+0xa2c>
   11a04:	mov	r0, #1
   11a08:	movw	r2, #1300	; 0x514
   11a0c:	tst	r2, r0, lsl r1
   11a10:	bne	11afc <__mempcpy_chk@plt+0xaec>
   11a14:	movw	r2, #2570	; 0xa0a
   11a18:	tst	r2, r0, lsl r1
   11a1c:	bne	11a64 <__mempcpy_chk@plt+0xa54>
   11a20:	cmp	r1, #0
   11a24:	bne	11a3c <__mempcpy_chk@plt+0xa2c>
   11a28:	ldr	r0, [sp, #4]
   11a2c:	add	r1, r0, #4
   11a30:	str	r1, [sp, #4]
   11a34:	mov	r1, #0
   11a38:	b	11b08 <__mempcpy_chk@plt+0xaf8>
   11a3c:	sub	r0, r1, #1024	; 0x400
   11a40:	cmp	r0, #10
   11a44:	bhi	11afc <__mempcpy_chk@plt+0xaec>
   11a48:	mov	r2, #1
   11a4c:	movw	r3, #645	; 0x285
   11a50:	tst	r3, r2, lsl r0
   11a54:	bne	11afc <__mempcpy_chk@plt+0xaec>
   11a58:	movw	r3, #1282	; 0x502
   11a5c:	tst	r3, r2, lsl r0
   11a60:	beq	11a70 <__mempcpy_chk@plt+0xa60>
   11a64:	mov	r0, r5
   11a68:	bl	10f98 <fcntl64@plt>
   11a6c:	b	11b14 <__mempcpy_chk@plt+0xb04>
   11a70:	cmp	r0, #6
   11a74:	bne	11afc <__mempcpy_chk@plt+0xaec>
   11a78:	ldr	r0, [sp, #4]
   11a7c:	movw	r7, #24920	; 0x6158
   11a80:	movt	r7, #2
   11a84:	add	r1, r0, #4
   11a88:	str	r1, [sp, #4]
   11a8c:	ldr	r6, [r0]
   11a90:	ldr	r0, [r7]
   11a94:	cmp	r0, #0
   11a98:	bmi	11b38 <__mempcpy_chk@plt+0xb28>
   11a9c:	mov	r0, r5
   11aa0:	movw	r1, #1030	; 0x406
   11aa4:	mov	r2, r6
   11aa8:	bl	10f98 <fcntl64@plt>
   11aac:	mov	r4, r0
   11ab0:	cmn	r0, #1
   11ab4:	bgt	11b2c <__mempcpy_chk@plt+0xb1c>
   11ab8:	bl	10f38 <__errno_location@plt>
   11abc:	ldr	r0, [r0]
   11ac0:	cmp	r0, #22
   11ac4:	bne	11b2c <__mempcpy_chk@plt+0xb1c>
   11ac8:	mov	r0, r5
   11acc:	mov	r1, #0
   11ad0:	mov	r2, r6
   11ad4:	bl	10f98 <fcntl64@plt>
   11ad8:	mov	r4, r0
   11adc:	cmp	r0, #0
   11ae0:	bmi	11b18 <__mempcpy_chk@plt+0xb08>
   11ae4:	mvn	r0, #0
   11ae8:	str	r0, [r7]
   11aec:	mov	r0, #1
   11af0:	cmp	r0, #0
   11af4:	bne	11b64 <__mempcpy_chk@plt+0xb54>
   11af8:	b	11b18 <__mempcpy_chk@plt+0xb08>
   11afc:	ldr	r0, [sp, #4]
   11b00:	add	r2, r0, #4
   11b04:	str	r2, [sp, #4]
   11b08:	ldr	r2, [r0]
   11b0c:	mov	r0, r5
   11b10:	bl	10f98 <fcntl64@plt>
   11b14:	mov	r4, r0
   11b18:	mov	r0, r4
   11b1c:	sub	sp, fp, #16
   11b20:	pop	{r4, r5, r6, r7, fp, lr}
   11b24:	add	sp, sp, #8
   11b28:	bx	lr
   11b2c:	mov	r0, #1
   11b30:	str	r0, [r7]
   11b34:	b	11b18 <__mempcpy_chk@plt+0xb08>
   11b38:	mov	r0, r5
   11b3c:	mov	r1, #0
   11b40:	mov	r2, r6
   11b44:	bl	10f98 <fcntl64@plt>
   11b48:	mov	r4, r0
   11b4c:	ldr	r0, [r7]
   11b50:	add	r0, r0, #1
   11b54:	clz	r0, r0
   11b58:	lsr	r0, r0, #5
   11b5c:	cmp	r0, #0
   11b60:	beq	11b18 <__mempcpy_chk@plt+0xb08>
   11b64:	cmp	r4, #0
   11b68:	bmi	11b18 <__mempcpy_chk@plt+0xb08>
   11b6c:	mov	r0, r4
   11b70:	mov	r1, #1
   11b74:	bl	10f98 <fcntl64@plt>
   11b78:	cmp	r0, #0
   11b7c:	bmi	11b98 <__mempcpy_chk@plt+0xb88>
   11b80:	orr	r2, r0, #1
   11b84:	mov	r0, r4
   11b88:	mov	r1, #2
   11b8c:	bl	10f98 <fcntl64@plt>
   11b90:	cmn	r0, #1
   11b94:	bne	11b18 <__mempcpy_chk@plt+0xb08>
   11b98:	bl	10f38 <__errno_location@plt>
   11b9c:	ldr	r6, [r0]
   11ba0:	mov	r5, r0
   11ba4:	mov	r0, r4
   11ba8:	bl	11004 <close@plt>
   11bac:	str	r6, [r5]
   11bb0:	mvn	r4, #0
   11bb4:	b	11b18 <__mempcpy_chk@plt+0xb08>
   11bb8:	push	{r4, r5, r6, r7, fp, lr}
   11bbc:	add	fp, sp, #16
   11bc0:	mov	r5, r0
   11bc4:	mov	r0, r1
   11bc8:	mov	r1, r2
   11bcc:	mov	r2, r3
   11bd0:	bl	10eb4 <open64@plt>
   11bd4:	mov	r4, r0
   11bd8:	cmp	r0, r5
   11bdc:	beq	11c18 <__mempcpy_chk@plt+0xc08>
   11be0:	cmp	r4, #0
   11be4:	bmi	11c18 <__mempcpy_chk@plt+0xc08>
   11be8:	mov	r0, r4
   11bec:	mov	r1, r5
   11bf0:	bl	10e3c <dup2@plt>
   11bf4:	mov	r5, r0
   11bf8:	bl	10f38 <__errno_location@plt>
   11bfc:	ldr	r7, [r0]
   11c00:	mov	r6, r0
   11c04:	mov	r0, r4
   11c08:	bl	11004 <close@plt>
   11c0c:	mov	r0, r5
   11c10:	str	r7, [r6]
   11c14:	pop	{r4, r5, r6, r7, fp, pc}
   11c18:	mov	r0, r4
   11c1c:	pop	{r4, r5, r6, r7, fp, pc}
   11c20:	push	{fp, lr}
   11c24:	mov	fp, sp
   11c28:	bl	11c38 <__mempcpy_chk@plt+0xc28>
   11c2c:	cmp	r0, #0
   11c30:	popne	{fp, pc}
   11c34:	bl	14848 <__mempcpy_chk@plt+0x3838>
   11c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c3c:	add	fp, sp, #28
   11c40:	push	{r2}		; (str r2, [sp, #-4]!)
   11c44:	mov	sl, r1
   11c48:	mov	r7, r0
   11c4c:	bl	14964 <__mempcpy_chk@plt+0x3954>
   11c50:	sub	r4, r0, r7
   11c54:	bl	149b0 <__mempcpy_chk@plt+0x39a0>
   11c58:	mov	r6, r0
   11c5c:	add	r5, r4, r0
   11c60:	mov	r0, sl
   11c64:	bl	10f2c <strlen@plt>
   11c68:	mov	r9, r0
   11c6c:	cmp	r6, #0
   11c70:	beq	11c98 <__mempcpy_chk@plt+0xc88>
   11c74:	add	r0, r5, r7
   11c78:	mov	r4, #0
   11c7c:	ldrb	r0, [r0, #-1]
   11c80:	cmp	r0, #47	; 0x2f
   11c84:	beq	11ca8 <__mempcpy_chk@plt+0xc98>
   11c88:	ldrb	r0, [sl]
   11c8c:	subs	r4, r0, #47	; 0x2f
   11c90:	movwne	r4, #47	; 0x2f
   11c94:	b	11ca8 <__mempcpy_chk@plt+0xc98>
   11c98:	ldrb	r0, [sl]
   11c9c:	mov	r4, #0
   11ca0:	cmp	r0, #47	; 0x2f
   11ca4:	movweq	r4, #46	; 0x2e
   11ca8:	uxtb	r8, r4
   11cac:	add	r0, r9, r5
   11cb0:	cmp	r8, #0
   11cb4:	movwne	r8, #1
   11cb8:	add	r0, r0, r8
   11cbc:	add	r0, r0, #1
   11cc0:	bl	148e0 <__mempcpy_chk@plt+0x38d0>
   11cc4:	mov	r6, r0
   11cc8:	cmp	r0, #0
   11ccc:	beq	11d0c <__mempcpy_chk@plt+0xcfc>
   11cd0:	mov	r0, r6
   11cd4:	mov	r1, r7
   11cd8:	mov	r2, r5
   11cdc:	mvn	r3, #0
   11ce0:	bl	11010 <__mempcpy_chk@plt>
   11ce4:	ldr	r1, [sp]
   11ce8:	strb	r4, [r0], r8
   11cec:	mov	r2, r9
   11cf0:	mvn	r3, #0
   11cf4:	cmp	r1, #0
   11cf8:	strne	r0, [r1]
   11cfc:	mov	r1, sl
   11d00:	bl	11010 <__mempcpy_chk@plt>
   11d04:	mov	r1, #0
   11d08:	strb	r1, [r0]
   11d0c:	mov	r0, r6
   11d10:	sub	sp, fp, #28
   11d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d18:	push	{r4, r5, r6, sl, fp, lr}
   11d1c:	add	fp, sp, #16
   11d20:	mov	r4, r0
   11d24:	bl	10f38 <__errno_location@plt>
   11d28:	ldr	r6, [r0]
   11d2c:	mov	r5, r0
   11d30:	mov	r0, r4
   11d34:	bl	10de8 <free@plt>
   11d38:	str	r6, [r5]
   11d3c:	pop	{r4, r5, r6, sl, fp, pc}
   11d40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d44:	add	fp, sp, #24
   11d48:	sub	sp, sp, #8
   11d4c:	movw	r6, #24904	; 0x6148
   11d50:	mov	r4, #0
   11d54:	cmp	r0, #2
   11d58:	movt	r6, #2
   11d5c:	ldr	r7, [r6]
   11d60:	str	r4, [r6]
   11d64:	bne	11dd8 <__mempcpy_chk@plt+0xdc8>
   11d68:	mov	r8, r3
   11d6c:	movw	r3, #21556	; 0x5434
   11d70:	mov	r5, r2
   11d74:	movw	r2, #21538	; 0x5422
   11d78:	mov	r0, #2
   11d7c:	str	r4, [sp]
   11d80:	movt	r2, #1
   11d84:	movt	r3, #1
   11d88:	bl	10efc <getopt_long@plt>
   11d8c:	cmp	r0, #104	; 0x68
   11d90:	beq	11dcc <__mempcpy_chk@plt+0xdbc>
   11d94:	cmp	r0, #118	; 0x76
   11d98:	bne	11dd8 <__mempcpy_chk@plt+0xdc8>
   11d9c:	movw	r0, #24900	; 0x6144
   11da0:	ldr	r3, [fp, #8]
   11da4:	add	r1, fp, #16
   11da8:	mov	r2, r8
   11dac:	movt	r0, #2
   11db0:	str	r1, [sp, #4]
   11db4:	str	r1, [sp]
   11db8:	mov	r1, r5
   11dbc:	ldr	r0, [r0]
   11dc0:	bl	13fc4 <__mempcpy_chk@plt+0x2fb4>
   11dc4:	mov	r0, #0
   11dc8:	bl	10f14 <exit@plt>
   11dcc:	ldr	r1, [fp, #12]
   11dd0:	mov	r0, #0
   11dd4:	blx	r1
   11dd8:	movw	r0, #24888	; 0x6138
   11ddc:	str	r7, [r6]
   11de0:	movt	r0, #2
   11de4:	str	r4, [r0]
   11de8:	sub	sp, fp, #24
   11dec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11df0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11df4:	add	fp, sp, #24
   11df8:	sub	sp, sp, #8
   11dfc:	mov	r8, r3
   11e00:	ldr	r3, [fp, #12]
   11e04:	movw	r7, #24904	; 0x6148
   11e08:	movw	r5, #20215	; 0x4ef7
   11e0c:	mov	r9, r2
   11e10:	mov	r2, #1
   11e14:	mov	r6, #0
   11e18:	movt	r7, #2
   11e1c:	movt	r5, #1
   11e20:	str	r6, [sp]
   11e24:	ldr	r4, [r7]
   11e28:	str	r2, [r7]
   11e2c:	movw	r2, #21538	; 0x5422
   11e30:	cmp	r3, #0
   11e34:	movw	r3, #21556	; 0x5434
   11e38:	movt	r2, #1
   11e3c:	movt	r3, #1
   11e40:	movne	r2, r5
   11e44:	bl	10efc <getopt_long@plt>
   11e48:	cmn	r0, #1
   11e4c:	beq	11e78 <__mempcpy_chk@plt+0xe68>
   11e50:	cmp	r0, #104	; 0x68
   11e54:	beq	11e6c <__mempcpy_chk@plt+0xe5c>
   11e58:	cmp	r0, #118	; 0x76
   11e5c:	beq	11e84 <__mempcpy_chk@plt+0xe74>
   11e60:	movw	r0, #24812	; 0x60ec
   11e64:	movt	r0, #2
   11e68:	ldr	r6, [r0]
   11e6c:	ldr	r1, [fp, #16]
   11e70:	mov	r0, r6
   11e74:	blx	r1
   11e78:	str	r4, [r7]
   11e7c:	sub	sp, fp, #24
   11e80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e84:	movw	r0, #24900	; 0x6144
   11e88:	ldr	r3, [fp, #8]
   11e8c:	add	r1, fp, #20
   11e90:	mov	r2, r8
   11e94:	movt	r0, #2
   11e98:	str	r1, [sp, #4]
   11e9c:	str	r1, [sp]
   11ea0:	mov	r1, r9
   11ea4:	ldr	r0, [r0]
   11ea8:	bl	13fc4 <__mempcpy_chk@plt+0x2fb4>
   11eac:	mov	r0, #0
   11eb0:	bl	10f14 <exit@plt>
   11eb4:	push	{r4, r5, fp, lr}
   11eb8:	add	fp, sp, #8
   11ebc:	cmp	r0, #0
   11ec0:	beq	11f54 <__mempcpy_chk@plt+0xf44>
   11ec4:	mov	r1, #47	; 0x2f
   11ec8:	mov	r4, r0
   11ecc:	bl	10fb0 <strrchr@plt>
   11ed0:	cmp	r0, #0
   11ed4:	mov	r5, r4
   11ed8:	addne	r5, r0, #1
   11edc:	sub	r0, r5, r4
   11ee0:	cmp	r0, #7
   11ee4:	blt	11f38 <__mempcpy_chk@plt+0xf28>
   11ee8:	movw	r1, #21660	; 0x549c
   11eec:	sub	r0, r5, #7
   11ef0:	mov	r2, #7
   11ef4:	movt	r1, #1
   11ef8:	bl	10fec <strncmp@plt>
   11efc:	cmp	r0, #0
   11f00:	bne	11f38 <__mempcpy_chk@plt+0xf28>
   11f04:	movw	r1, #21668	; 0x54a4
   11f08:	mov	r0, r5
   11f0c:	mov	r2, #3
   11f10:	movt	r1, #1
   11f14:	bl	10fec <strncmp@plt>
   11f18:	cmp	r0, #0
   11f1c:	beq	11f28 <__mempcpy_chk@plt+0xf18>
   11f20:	mov	r4, r5
   11f24:	b	11f38 <__mempcpy_chk@plt+0xf28>
   11f28:	movw	r0, #24880	; 0x6130
   11f2c:	add	r4, r5, #3
   11f30:	movt	r0, #2
   11f34:	str	r4, [r0]
   11f38:	movw	r0, #24884	; 0x6134
   11f3c:	movt	r0, #2
   11f40:	str	r4, [r0]
   11f44:	movw	r0, #24924	; 0x615c
   11f48:	movt	r0, #2
   11f4c:	str	r4, [r0]
   11f50:	pop	{r4, r5, fp, pc}
   11f54:	movw	r0, #24896	; 0x6140
   11f58:	mov	r1, #55	; 0x37
   11f5c:	mov	r2, #1
   11f60:	movt	r0, #2
   11f64:	ldr	r3, [r0]
   11f68:	movw	r0, #21604	; 0x5464
   11f6c:	movt	r0, #1
   11f70:	bl	10e6c <fwrite@plt>
   11f74:	bl	10ff8 <abort@plt>
   11f78:	push	{r4, r5, r6, sl, fp, lr}
   11f7c:	add	fp, sp, #16
   11f80:	mov	r4, r0
   11f84:	movw	r0, #24928	; 0x6160
   11f88:	movt	r0, #2
   11f8c:	cmp	r4, #0
   11f90:	moveq	r4, r0
   11f94:	bl	10f38 <__errno_location@plt>
   11f98:	ldr	r6, [r0]
   11f9c:	mov	r5, r0
   11fa0:	mov	r0, r4
   11fa4:	mov	r1, #48	; 0x30
   11fa8:	bl	1476c <__mempcpy_chk@plt+0x375c>
   11fac:	str	r6, [r5]
   11fb0:	pop	{r4, r5, r6, sl, fp, pc}
   11fb4:	movw	r1, #24928	; 0x6160
   11fb8:	cmp	r0, #0
   11fbc:	movt	r1, #2
   11fc0:	movne	r1, r0
   11fc4:	ldr	r0, [r1]
   11fc8:	bx	lr
   11fcc:	movw	r2, #24928	; 0x6160
   11fd0:	cmp	r0, #0
   11fd4:	movt	r2, #2
   11fd8:	movne	r2, r0
   11fdc:	str	r1, [r2]
   11fe0:	bx	lr
   11fe4:	movw	r3, #24928	; 0x6160
   11fe8:	cmp	r0, #0
   11fec:	and	r2, r2, #1
   11ff0:	movt	r3, #2
   11ff4:	movne	r3, r0
   11ff8:	ubfx	r0, r1, #5, #3
   11ffc:	and	r1, r1, #31
   12000:	add	ip, r3, r0, lsl #2
   12004:	mov	r0, #1
   12008:	ldr	r3, [ip, #8]
   1200c:	and	r0, r0, r3, lsr r1
   12010:	eor	r2, r0, r2
   12014:	eor	r1, r3, r2, lsl r1
   12018:	str	r1, [ip, #8]
   1201c:	bx	lr
   12020:	movw	r2, #24928	; 0x6160
   12024:	cmp	r0, #0
   12028:	movt	r2, #2
   1202c:	movne	r2, r0
   12030:	ldr	r0, [r2, #4]
   12034:	str	r1, [r2, #4]
   12038:	bx	lr
   1203c:	push	{fp, lr}
   12040:	mov	fp, sp
   12044:	movw	r3, #24928	; 0x6160
   12048:	cmp	r0, #0
   1204c:	movt	r3, #2
   12050:	movne	r3, r0
   12054:	cmp	r1, #0
   12058:	mov	r0, #10
   1205c:	cmpne	r2, #0
   12060:	str	r0, [r3]
   12064:	bne	1206c <__mempcpy_chk@plt+0x105c>
   12068:	bl	10ff8 <abort@plt>
   1206c:	str	r1, [r3, #40]	; 0x28
   12070:	str	r2, [r3, #44]	; 0x2c
   12074:	pop	{fp, pc}
   12078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1207c:	add	fp, sp, #28
   12080:	sub	sp, sp, #20
   12084:	mov	r7, r0
   12088:	ldr	r0, [fp, #8]
   1208c:	movw	r5, #24928	; 0x6160
   12090:	mov	r8, r3
   12094:	mov	r9, r2
   12098:	mov	sl, r1
   1209c:	movt	r5, #2
   120a0:	cmp	r0, #0
   120a4:	movne	r5, r0
   120a8:	bl	10f38 <__errno_location@plt>
   120ac:	ldr	r2, [r5, #40]	; 0x28
   120b0:	ldr	r3, [r5, #44]	; 0x2c
   120b4:	mov	r4, r0
   120b8:	ldm	r5, {r0, r1}
   120bc:	add	r5, r5, #8
   120c0:	ldr	r6, [r4]
   120c4:	stm	sp, {r0, r1, r5}
   120c8:	mov	r0, r7
   120cc:	mov	r1, sl
   120d0:	str	r2, [sp, #12]
   120d4:	str	r3, [sp, #16]
   120d8:	mov	r2, r9
   120dc:	mov	r3, r8
   120e0:	bl	120f0 <__mempcpy_chk@plt+0x10e0>
   120e4:	str	r6, [r4]
   120e8:	sub	sp, fp, #28
   120ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120f4:	add	fp, sp, #28
   120f8:	sub	sp, sp, #156	; 0x9c
   120fc:	mov	r5, r0
   12100:	add	r0, r2, #1
   12104:	mov	r6, r1
   12108:	mov	sl, r3
   1210c:	str	r2, [fp, #-80]	; 0xffffffb0
   12110:	str	r0, [sp, #72]	; 0x48
   12114:	ldr	r0, [fp, #12]
   12118:	and	r1, r0, #1
   1211c:	str	r1, [sp, #36]	; 0x24
   12120:	and	r1, r0, #4
   12124:	str	r1, [sp, #32]
   12128:	ubfx	r9, r0, #1, #1
   1212c:	bl	10e84 <__ctype_get_mb_cur_max@plt>
   12130:	str	r0, [sp, #40]	; 0x28
   12134:	ldr	r0, [fp, #24]
   12138:	ldr	r7, [fp, #8]
   1213c:	mov	r1, #0
   12140:	str	r5, [fp, #-84]	; 0xffffffac
   12144:	str	r1, [fp, #-56]	; 0xffffffc8
   12148:	mov	r1, #0
   1214c:	str	r1, [sp, #60]	; 0x3c
   12150:	mov	r1, #1
   12154:	str	r1, [fp, #-48]	; 0xffffffd0
   12158:	str	r0, [sp, #80]	; 0x50
   1215c:	ldr	r0, [fp, #20]
   12160:	str	r0, [sp, #76]	; 0x4c
   12164:	mov	r0, #0
   12168:	str	r0, [sp, #56]	; 0x38
   1216c:	mov	r0, #0
   12170:	str	r0, [fp, #-88]	; 0xffffffa8
   12174:	mov	r0, #0
   12178:	str	r0, [fp, #-72]	; 0xffffffb8
   1217c:	mov	r0, #0
   12180:	cmp	r7, #10
   12184:	bhi	13118 <__mempcpy_chk@plt+0x2108>
   12188:	add	r1, pc, #24
   1218c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12190:	mov	r4, r6
   12194:	mov	r8, #0
   12198:	mov	r2, #1
   1219c:	mov	r3, #0
   121a0:	mov	lr, sl
   121a4:	ldr	pc, [r1, r7, lsl #2]
   121a8:	andeq	r2, r1, ip, ror #4
   121ac:	andeq	r2, r1, r0, asr #5
   121b0:	andeq	r2, r1, r0, lsl #5
   121b4:	andeq	r2, r1, r4, ror #4
   121b8:			; <UNDEFINED> instruction: 0x000122b4
   121bc:	andeq	r2, r1, r8, ror #5
   121c0:	muleq	r1, r0, r2
   121c4:	andeq	r2, r1, ip, ror #6
   121c8:	ldrdeq	r2, [r1], -r4
   121cc:	ldrdeq	r2, [r1], -r4
   121d0:	strdeq	r2, [r1], -ip
   121d4:	movw	r0, #21752	; 0x54f8
   121d8:	mov	r1, r7
   121dc:	movt	r0, #1
   121e0:	bl	13b20 <__mempcpy_chk@plt+0x2b10>
   121e4:	str	r0, [sp, #76]	; 0x4c
   121e8:	movw	r0, #21754	; 0x54fa
   121ec:	mov	r1, r7
   121f0:	movt	r0, #1
   121f4:	bl	13b20 <__mempcpy_chk@plt+0x2b10>
   121f8:	str	r0, [sp, #80]	; 0x50
   121fc:	mov	r8, #0
   12200:	tst	r9, #1
   12204:	bne	1223c <__mempcpy_chk@plt+0x122c>
   12208:	ldr	r0, [sp, #76]	; 0x4c
   1220c:	ldrb	r0, [r0]
   12210:	cmp	r0, #0
   12214:	beq	1223c <__mempcpy_chk@plt+0x122c>
   12218:	ldr	r1, [sp, #76]	; 0x4c
   1221c:	mov	r8, #0
   12220:	add	r1, r1, #1
   12224:	cmp	r8, r4
   12228:	strbcc	r0, [r5, r8]
   1222c:	ldrb	r0, [r1, r8]
   12230:	add	r8, r8, #1
   12234:	cmp	r0, #0
   12238:	bne	12224 <__mempcpy_chk@plt+0x1214>
   1223c:	ldr	r6, [sp, #80]	; 0x50
   12240:	mov	r0, r6
   12244:	bl	10f2c <strlen@plt>
   12248:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1224c:	str	r0, [fp, #-72]	; 0xffffffb8
   12250:	str	r6, [fp, #-88]	; 0xffffffa8
   12254:	mov	r2, #1
   12258:	mov	r3, r9
   1225c:	mov	lr, sl
   12260:	b	1236c <__mempcpy_chk@plt+0x135c>
   12264:	mov	r0, #1
   12268:	b	122c0 <__mempcpy_chk@plt+0x12b0>
   1226c:	mov	r7, #0
   12270:	mov	r8, #0
   12274:	mov	r2, r0
   12278:	mov	r3, #0
   1227c:	b	1236c <__mempcpy_chk@plt+0x135c>
   12280:	tst	r9, #1
   12284:	bne	122c0 <__mempcpy_chk@plt+0x12b0>
   12288:	mov	r2, r0
   1228c:	b	12318 <__mempcpy_chk@plt+0x1308>
   12290:	mov	r0, #1
   12294:	mov	r8, #0
   12298:	mov	r7, #5
   1229c:	mov	r2, #1
   122a0:	str	r0, [fp, #-72]	; 0xffffffb8
   122a4:	movw	r0, #21750	; 0x54f6
   122a8:	movt	r0, #1
   122ac:	str	r0, [fp, #-88]	; 0xffffffa8
   122b0:	b	122e0 <__mempcpy_chk@plt+0x12d0>
   122b4:	mov	r2, #1
   122b8:	tst	r9, #1
   122bc:	beq	12318 <__mempcpy_chk@plt+0x1308>
   122c0:	mov	r1, #1
   122c4:	mov	r8, #0
   122c8:	mov	r7, #2
   122cc:	mov	r2, r0
   122d0:	str	r1, [fp, #-72]	; 0xffffffb8
   122d4:	movw	r1, #21754	; 0x54fa
   122d8:	movt	r1, #1
   122dc:	str	r1, [fp, #-88]	; 0xffffffa8
   122e0:	mov	r3, #1
   122e4:	b	1236c <__mempcpy_chk@plt+0x135c>
   122e8:	tst	r9, #1
   122ec:	beq	1233c <__mempcpy_chk@plt+0x132c>
   122f0:	mov	r0, #1
   122f4:	mov	r8, #0
   122f8:	mov	r2, #1
   122fc:	mov	r3, #1
   12300:	mov	r7, #5
   12304:	str	r0, [fp, #-72]	; 0xffffffb8
   12308:	movw	r0, #21750	; 0x54f6
   1230c:	movt	r0, #1
   12310:	str	r0, [fp, #-88]	; 0xffffffa8
   12314:	b	1236c <__mempcpy_chk@plt+0x135c>
   12318:	cmp	r4, #0
   1231c:	mov	r8, #1
   12320:	mov	r3, #0
   12324:	mov	r7, #2
   12328:	movne	r0, #39	; 0x27
   1232c:	strbne	r0, [r5]
   12330:	movw	r0, #21754	; 0x54fa
   12334:	movt	r0, #1
   12338:	b	12360 <__mempcpy_chk@plt+0x1350>
   1233c:	cmp	r4, #0
   12340:	mov	r8, #1
   12344:	mov	r2, #1
   12348:	mov	r7, #5
   1234c:	mov	r3, #0
   12350:	movne	r0, #34	; 0x22
   12354:	strbne	r0, [r5]
   12358:	movw	r0, #21750	; 0x54f6
   1235c:	movt	r0, #1
   12360:	str	r0, [fp, #-88]	; 0xffffffa8
   12364:	mov	r0, #1
   12368:	str	r0, [fp, #-72]	; 0xffffffb8
   1236c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12370:	eor	r6, r3, #1
   12374:	str	r7, [fp, #-68]	; 0xffffffbc
   12378:	str	r3, [fp, #-76]	; 0xffffffb4
   1237c:	str	r2, [sp, #84]	; 0x54
   12380:	str	r6, [sp, #92]	; 0x5c
   12384:	cmp	r0, #0
   12388:	movwne	r0, #1
   1238c:	and	r1, r0, r3
   12390:	and	r1, r2, r1
   12394:	str	r1, [sp, #48]	; 0x30
   12398:	sub	r1, r7, #2
   1239c:	clz	r1, r1
   123a0:	lsr	r1, r1, #5
   123a4:	and	r1, r1, r3
   123a8:	str	r1, [sp, #64]	; 0x40
   123ac:	subs	r1, r7, #2
   123b0:	mov	r7, #0
   123b4:	movwne	r1, #1
   123b8:	orr	r6, r1, r6
   123bc:	and	r1, r1, r2
   123c0:	and	r0, r0, r1
   123c4:	str	r6, [sp, #68]	; 0x44
   123c8:	str	r0, [fp, #-60]	; 0xffffffc4
   123cc:	orr	r0, r1, r3
   123d0:	ldr	r1, [fp, #16]
   123d4:	eor	r0, r0, #1
   123d8:	clz	r1, r1
   123dc:	lsr	r1, r1, #5
   123e0:	orr	r0, r1, r0
   123e4:	str	r0, [fp, #-64]	; 0xffffffc0
   123e8:	eor	r0, r2, #1
   123ec:	str	r0, [sp, #52]	; 0x34
   123f0:	cmn	lr, #1
   123f4:	beq	12404 <__mempcpy_chk@plt+0x13f4>
   123f8:	cmp	r7, lr
   123fc:	bne	12410 <__mempcpy_chk@plt+0x1400>
   12400:	b	12f58 <__mempcpy_chk@plt+0x1f48>
   12404:	ldrb	r0, [ip, r7]
   12408:	cmp	r0, #0
   1240c:	beq	12f60 <__mempcpy_chk@plt+0x1f50>
   12410:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12414:	mov	sl, #0
   12418:	cmp	r0, #0
   1241c:	beq	12454 <__mempcpy_chk@plt+0x1444>
   12420:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12424:	add	r5, r7, r0
   12428:	cmp	r0, #2
   1242c:	bcc	12448 <__mempcpy_chk@plt+0x1438>
   12430:	cmn	lr, #1
   12434:	bne	12448 <__mempcpy_chk@plt+0x1438>
   12438:	mov	r0, ip
   1243c:	bl	10f2c <strlen@plt>
   12440:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12444:	mov	lr, r0
   12448:	cmp	r5, lr
   1244c:	bls	1245c <__mempcpy_chk@plt+0x144c>
   12450:	ldr	r5, [fp, #-84]	; 0xffffffac
   12454:	mov	r0, #0
   12458:	b	124a8 <__mempcpy_chk@plt+0x1498>
   1245c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12460:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12464:	add	r0, ip, r7
   12468:	mov	r6, r4
   1246c:	mov	r4, lr
   12470:	bl	10f20 <bcmp@plt>
   12474:	ldr	r2, [sp, #92]	; 0x5c
   12478:	cmp	r0, #0
   1247c:	ldr	r5, [fp, #-84]	; 0xffffffac
   12480:	mov	r1, r0
   12484:	movwne	r1, #1
   12488:	orr	r1, r1, r2
   1248c:	tst	r1, #1
   12490:	beq	12fe8 <__mempcpy_chk@plt+0x1fd8>
   12494:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12498:	clz	r0, r0
   1249c:	mov	lr, r4
   124a0:	mov	r4, r6
   124a4:	lsr	r0, r0, #5
   124a8:	str	r0, [fp, #-52]	; 0xffffffcc
   124ac:	ldrb	r6, [ip, r7]
   124b0:	cmp	r6, #126	; 0x7e
   124b4:	bhi	129e4 <__mempcpy_chk@plt+0x19d4>
   124b8:	add	r3, pc, #16
   124bc:	mov	r9, #1
   124c0:	mov	r2, #110	; 0x6e
   124c4:	mov	r0, #97	; 0x61
   124c8:	mov	r1, #0
   124cc:	ldr	pc, [r3, r6, lsl #2]
   124d0:	andeq	r2, r1, r4, asr #16
   124d4:	andeq	r2, r1, r4, ror #19
   124d8:	andeq	r2, r1, r4, ror #19
   124dc:	andeq	r2, r1, r4, ror #19
   124e0:	andeq	r2, r1, r4, ror #19
   124e4:	andeq	r2, r1, r4, ror #19
   124e8:	andeq	r2, r1, r4, ror #19
   124ec:	andeq	r2, r1, r0, asr #21
   124f0:	andeq	r2, r1, r4, lsr #16
   124f4:	andeq	r2, r1, ip, lsl r8
   124f8:	andeq	r2, r1, r0, lsr r8
   124fc:	andeq	r2, r1, ip, asr #18
   12500:	andeq	r2, r1, r4, lsl r8
   12504:	andeq	r2, r1, ip, lsr #16
   12508:	andeq	r2, r1, r4, ror #19
   1250c:	andeq	r2, r1, r4, ror #19
   12510:	andeq	r2, r1, r4, ror #19
   12514:	andeq	r2, r1, r4, ror #19
   12518:	andeq	r2, r1, r4, ror #19
   1251c:	andeq	r2, r1, r4, ror #19
   12520:	andeq	r2, r1, r4, ror #19
   12524:	andeq	r2, r1, r4, ror #19
   12528:	andeq	r2, r1, r4, ror #19
   1252c:	andeq	r2, r1, r4, ror #19
   12530:	andeq	r2, r1, r4, ror #19
   12534:	andeq	r2, r1, r4, ror #19
   12538:	andeq	r2, r1, r4, ror #19
   1253c:	andeq	r2, r1, r4, ror #19
   12540:	andeq	r2, r1, r4, ror #19
   12544:	andeq	r2, r1, r4, ror #19
   12548:	andeq	r2, r1, r4, ror #19
   1254c:	andeq	r2, r1, r4, ror #19
   12550:	andeq	r2, r1, r8, asr #15
   12554:	andeq	r2, r1, ip, asr #15
   12558:	andeq	r2, r1, ip, asr #15
   1255c:			; <UNDEFINED> instruction: 0x000127b4
   12560:	andeq	r2, r1, ip, asr #15
   12564:	andeq	r2, r1, ip, asr #13
   12568:	andeq	r2, r1, ip, asr #15
   1256c:	andeq	r2, r1, r4, asr r9
   12570:	andeq	r2, r1, ip, asr #15
   12574:	andeq	r2, r1, ip, asr #15
   12578:	andeq	r2, r1, ip, asr #15
   1257c:	andeq	r2, r1, ip, asr #13
   12580:	andeq	r2, r1, ip, asr #13
   12584:	andeq	r2, r1, ip, asr #13
   12588:	andeq	r2, r1, ip, asr #13
   1258c:	andeq	r2, r1, ip, asr #13
   12590:	andeq	r2, r1, ip, asr #13
   12594:	andeq	r2, r1, ip, asr #13
   12598:	andeq	r2, r1, ip, asr #13
   1259c:	andeq	r2, r1, ip, asr #13
   125a0:	andeq	r2, r1, ip, asr #13
   125a4:	andeq	r2, r1, ip, asr #13
   125a8:	andeq	r2, r1, ip, asr #13
   125ac:	andeq	r2, r1, ip, asr #13
   125b0:	andeq	r2, r1, ip, asr #13
   125b4:	andeq	r2, r1, ip, asr #13
   125b8:	andeq	r2, r1, ip, asr #13
   125bc:	andeq	r2, r1, ip, asr #15
   125c0:	andeq	r2, r1, ip, asr #15
   125c4:	andeq	r2, r1, ip, asr #15
   125c8:	andeq	r2, r1, ip, asr #15
   125cc:	andeq	r2, r1, ip, lsl r9
   125d0:	andeq	r2, r1, r4, ror #19
   125d4:	andeq	r2, r1, ip, asr #13
   125d8:	andeq	r2, r1, ip, asr #13
   125dc:	andeq	r2, r1, ip, asr #13
   125e0:	andeq	r2, r1, ip, asr #13
   125e4:	andeq	r2, r1, ip, asr #13
   125e8:	andeq	r2, r1, ip, asr #13
   125ec:	andeq	r2, r1, ip, asr #13
   125f0:	andeq	r2, r1, ip, asr #13
   125f4:	andeq	r2, r1, ip, asr #13
   125f8:	andeq	r2, r1, ip, asr #13
   125fc:	andeq	r2, r1, ip, asr #13
   12600:	andeq	r2, r1, ip, asr #13
   12604:	andeq	r2, r1, ip, asr #13
   12608:	andeq	r2, r1, ip, asr #13
   1260c:	andeq	r2, r1, ip, asr #13
   12610:	andeq	r2, r1, ip, asr #13
   12614:	andeq	r2, r1, ip, asr #13
   12618:	andeq	r2, r1, ip, asr #13
   1261c:	andeq	r2, r1, ip, asr #13
   12620:	andeq	r2, r1, ip, asr #13
   12624:	andeq	r2, r1, ip, asr #13
   12628:	andeq	r2, r1, ip, asr #13
   1262c:	andeq	r2, r1, ip, asr #13
   12630:	andeq	r2, r1, ip, asr #13
   12634:	andeq	r2, r1, ip, asr #13
   12638:	andeq	r2, r1, ip, asr #13
   1263c:	andeq	r2, r1, ip, asr #15
   12640:	strdeq	r2, [r1], -r4
   12644:	andeq	r2, r1, ip, asr #13
   12648:	andeq	r2, r1, ip, asr #15
   1264c:	andeq	r2, r1, ip, asr #13
   12650:	andeq	r2, r1, ip, asr #15
   12654:	andeq	r2, r1, ip, asr #13
   12658:	andeq	r2, r1, ip, asr #13
   1265c:	andeq	r2, r1, ip, asr #13
   12660:	andeq	r2, r1, ip, asr #13
   12664:	andeq	r2, r1, ip, asr #13
   12668:	andeq	r2, r1, ip, asr #13
   1266c:	andeq	r2, r1, ip, asr #13
   12670:	andeq	r2, r1, ip, asr #13
   12674:	andeq	r2, r1, ip, asr #13
   12678:	andeq	r2, r1, ip, asr #13
   1267c:	andeq	r2, r1, ip, asr #13
   12680:	andeq	r2, r1, ip, asr #13
   12684:	andeq	r2, r1, ip, asr #13
   12688:	andeq	r2, r1, ip, asr #13
   1268c:	andeq	r2, r1, ip, asr #13
   12690:	andeq	r2, r1, ip, asr #13
   12694:	andeq	r2, r1, ip, asr #13
   12698:	andeq	r2, r1, ip, asr #13
   1269c:	andeq	r2, r1, ip, asr #13
   126a0:	andeq	r2, r1, ip, asr #13
   126a4:	andeq	r2, r1, ip, asr #13
   126a8:	andeq	r2, r1, ip, asr #13
   126ac:	andeq	r2, r1, ip, asr #13
   126b0:	andeq	r2, r1, ip, asr #13
   126b4:	andeq	r2, r1, ip, asr #13
   126b8:	andeq	r2, r1, ip, asr #13
   126bc:	andeq	r2, r1, r8, lsl #15
   126c0:	andeq	r2, r1, ip, asr #15
   126c4:	andeq	r2, r1, r8, lsl #15
   126c8:			; <UNDEFINED> instruction: 0x000127b4
   126cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   126d0:	tst	r0, #1
   126d4:	bne	12700 <__mempcpy_chk@plt+0x16f0>
   126d8:	ldr	r1, [fp, #16]
   126dc:	ubfx	r0, r6, #5, #3
   126e0:	mov	r2, #1
   126e4:	ldr	r0, [r1, r0, lsl #2]
   126e8:	and	r1, r6, #31
   126ec:	tst	r0, r2, lsl r1
   126f0:	beq	12700 <__mempcpy_chk@plt+0x16f0>
   126f4:	mov	r0, r6
   126f8:	mov	r1, r9
   126fc:	b	12714 <__mempcpy_chk@plt+0x1704>
   12700:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12704:	mov	r1, r9
   12708:	cmp	r0, #0
   1270c:	mov	r0, r6
   12710:	beq	12a54 <__mempcpy_chk@plt+0x1a44>
   12714:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12718:	tst	r2, #1
   1271c:	bne	13024 <__mempcpy_chk@plt+0x2014>
   12720:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12724:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12728:	subs	r2, r2, #2
   1272c:	movwne	r2, #1
   12730:	orr	r2, r2, r3
   12734:	tst	r2, #1
   12738:	bne	12774 <__mempcpy_chk@plt+0x1764>
   1273c:	cmp	r8, r4
   12740:	movcc	r2, #39	; 0x27
   12744:	strbcc	r2, [r5, r8]
   12748:	add	r2, r8, #1
   1274c:	cmp	r2, r4
   12750:	movcc	r3, #36	; 0x24
   12754:	strbcc	r3, [r5, r2]
   12758:	add	r2, r8, #2
   1275c:	add	r8, r8, #3
   12760:	cmp	r2, r4
   12764:	movcc	r3, #39	; 0x27
   12768:	strbcc	r3, [r5, r2]
   1276c:	mov	r2, #1
   12770:	str	r2, [fp, #-56]	; 0xffffffc8
   12774:	cmp	r8, r4
   12778:	movcc	r2, #92	; 0x5c
   1277c:	strbcc	r2, [r5, r8]
   12780:	add	r8, r8, #1
   12784:	b	12a98 <__mempcpy_chk@plt+0x1a88>
   12788:	cmp	lr, #1
   1278c:	beq	127b4 <__mempcpy_chk@plt+0x17a4>
   12790:	mov	r9, #0
   12794:	cmn	lr, #1
   12798:	bne	127c0 <__mempcpy_chk@plt+0x17b0>
   1279c:	ldrb	r0, [ip, #1]
   127a0:	cmp	r0, #0
   127a4:	beq	127b4 <__mempcpy_chk@plt+0x17a4>
   127a8:	mvn	lr, #0
   127ac:	mov	sl, #0
   127b0:	b	126cc <__mempcpy_chk@plt+0x16bc>
   127b4:	mov	r9, #0
   127b8:	cmp	r7, #0
   127bc:	beq	127c8 <__mempcpy_chk@plt+0x17b8>
   127c0:	mov	sl, #0
   127c4:	b	126cc <__mempcpy_chk@plt+0x16bc>
   127c8:	mov	r1, #1
   127cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   127d0:	cmp	r0, #2
   127d4:	bne	127ec <__mempcpy_chk@plt+0x17dc>
   127d8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   127dc:	mov	r9, r1
   127e0:	tst	r0, #1
   127e4:	beq	126cc <__mempcpy_chk@plt+0x16bc>
   127e8:	b	13024 <__mempcpy_chk@plt+0x2014>
   127ec:	mov	r9, r1
   127f0:	b	126cc <__mempcpy_chk@plt+0x16bc>
   127f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   127f8:	cmp	r0, #2
   127fc:	bne	12a38 <__mempcpy_chk@plt+0x1a28>
   12800:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12804:	tst	r0, #1
   12808:	bne	13024 <__mempcpy_chk@plt+0x2014>
   1280c:	mov	sl, #0
   12810:	b	12a4c <__mempcpy_chk@plt+0x1a3c>
   12814:	mov	r0, #102	; 0x66
   12818:	b	12ac0 <__mempcpy_chk@plt+0x1ab0>
   1281c:	mov	r2, #116	; 0x74
   12820:	b	12830 <__mempcpy_chk@plt+0x1820>
   12824:	mov	r0, #98	; 0x62
   12828:	b	12ac0 <__mempcpy_chk@plt+0x1ab0>
   1282c:	mov	r2, #114	; 0x72
   12830:	ldr	r0, [sp, #68]	; 0x44
   12834:	tst	r0, #1
   12838:	mov	r0, r2
   1283c:	bne	12ac0 <__mempcpy_chk@plt+0x1ab0>
   12840:	b	13024 <__mempcpy_chk@plt+0x2014>
   12844:	ldr	r0, [sp, #84]	; 0x54
   12848:	tst	r0, #1
   1284c:	beq	12adc <__mempcpy_chk@plt+0x1acc>
   12850:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12854:	tst	r0, #1
   12858:	bne	13110 <__mempcpy_chk@plt+0x2100>
   1285c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12860:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12864:	subs	r0, r0, #2
   12868:	movwne	r0, #1
   1286c:	orr	r0, r0, r1
   12870:	tst	r0, #1
   12874:	bne	128b0 <__mempcpy_chk@plt+0x18a0>
   12878:	cmp	r8, r4
   1287c:	movcc	r0, #39	; 0x27
   12880:	strbcc	r0, [r5, r8]
   12884:	add	r0, r8, #1
   12888:	cmp	r0, r4
   1288c:	movcc	r1, #36	; 0x24
   12890:	strbcc	r1, [r5, r0]
   12894:	add	r0, r8, #2
   12898:	add	r8, r8, #3
   1289c:	cmp	r0, r4
   128a0:	movcc	r1, #39	; 0x27
   128a4:	strbcc	r1, [r5, r0]
   128a8:	mov	r0, #1
   128ac:	str	r0, [fp, #-56]	; 0xffffffc8
   128b0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   128b4:	cmp	r8, r4
   128b8:	mov	r9, #0
   128bc:	mov	sl, #1
   128c0:	mov	r6, #48	; 0x30
   128c4:	movcc	r0, #92	; 0x5c
   128c8:	strbcc	r0, [r5, r8]
   128cc:	add	r0, r8, #1
   128d0:	cmp	r1, #2
   128d4:	beq	12ca4 <__mempcpy_chk@plt+0x1c94>
   128d8:	add	r1, r7, #1
   128dc:	cmp	r1, lr
   128e0:	bcs	12ca4 <__mempcpy_chk@plt+0x1c94>
   128e4:	ldrb	r1, [ip, r1]
   128e8:	sub	r1, r1, #48	; 0x30
   128ec:	uxtb	r1, r1
   128f0:	cmp	r1, #9
   128f4:	bhi	12ca4 <__mempcpy_chk@plt+0x1c94>
   128f8:	cmp	r0, r4
   128fc:	movcc	r1, #48	; 0x30
   12900:	strbcc	r1, [r5, r0]
   12904:	add	r0, r8, #2
   12908:	add	r8, r8, #3
   1290c:	cmp	r0, r4
   12910:	movcc	r1, #48	; 0x30
   12914:	strbcc	r1, [r5, r0]
   12918:	b	126cc <__mempcpy_chk@plt+0x16bc>
   1291c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12920:	mov	sl, #0
   12924:	mov	r6, #63	; 0x3f
   12928:	cmp	r0, #5
   1292c:	beq	12cac <__mempcpy_chk@plt+0x1c9c>
   12930:	cmp	r0, #2
   12934:	bne	12d54 <__mempcpy_chk@plt+0x1d44>
   12938:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1293c:	mov	r9, #0
   12940:	tst	r0, #1
   12944:	beq	126cc <__mempcpy_chk@plt+0x16bc>
   12948:	b	13024 <__mempcpy_chk@plt+0x2014>
   1294c:	mov	r0, #118	; 0x76
   12950:	b	12ac0 <__mempcpy_chk@plt+0x1ab0>
   12954:	mov	r0, #1
   12958:	mov	r6, #39	; 0x27
   1295c:	str	r0, [sp, #60]	; 0x3c
   12960:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12964:	cmp	r0, #2
   12968:	bne	12af8 <__mempcpy_chk@plt+0x1ae8>
   1296c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12970:	tst	r0, #1
   12974:	bne	13024 <__mempcpy_chk@plt+0x2014>
   12978:	ldr	r2, [sp, #56]	; 0x38
   1297c:	clz	r1, r4
   12980:	mov	sl, #0
   12984:	mov	r9, #1
   12988:	lsr	r1, r1, #5
   1298c:	cmp	r2, #0
   12990:	mov	r0, r2
   12994:	movwne	r0, #1
   12998:	orrs	r0, r0, r1
   1299c:	moveq	r2, r4
   129a0:	moveq	r4, r0
   129a4:	cmp	r8, r4
   129a8:	str	r2, [sp, #56]	; 0x38
   129ac:	movcc	r0, #39	; 0x27
   129b0:	strbcc	r0, [r5, r8]
   129b4:	add	r0, r8, #1
   129b8:	cmp	r0, r4
   129bc:	movcc	r1, #92	; 0x5c
   129c0:	strbcc	r1, [r5, r0]
   129c4:	add	r0, r8, #2
   129c8:	add	r8, r8, #3
   129cc:	cmp	r0, r4
   129d0:	movcc	r1, #39	; 0x27
   129d4:	strbcc	r1, [r5, r0]
   129d8:	mov	r0, #0
   129dc:	str	r0, [fp, #-56]	; 0xffffffc8
   129e0:	b	126cc <__mempcpy_chk@plt+0x16bc>
   129e4:	ldr	r0, [sp, #40]	; 0x28
   129e8:	str	r4, [sp, #88]	; 0x58
   129ec:	cmp	r0, #1
   129f0:	bne	12b00 <__mempcpy_chk@plt+0x1af0>
   129f4:	str	lr, [sp, #28]
   129f8:	bl	10f08 <__ctype_b_loc@plt>
   129fc:	ldr	r0, [r0]
   12a00:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12a04:	mov	r2, #1
   12a08:	add	r0, r0, r6, lsl #1
   12a0c:	ldrb	r0, [r0, #1]
   12a10:	ubfx	r9, r0, #6, #1
   12a14:	ldr	r0, [sp, #52]	; 0x34
   12a18:	cmp	r2, #1
   12a1c:	orr	r0, r9, r0
   12a20:	bhi	12d5c <__mempcpy_chk@plt+0x1d4c>
   12a24:	tst	r0, #1
   12a28:	beq	12d5c <__mempcpy_chk@plt+0x1d4c>
   12a2c:	ldr	lr, [sp, #28]
   12a30:	ldr	r4, [sp, #88]	; 0x58
   12a34:	b	126cc <__mempcpy_chk@plt+0x16bc>
   12a38:	ldr	r1, [sp, #48]	; 0x30
   12a3c:	mov	sl, #0
   12a40:	mov	r0, #92	; 0x5c
   12a44:	cmp	r1, #0
   12a48:	beq	12ac0 <__mempcpy_chk@plt+0x1ab0>
   12a4c:	mov	r6, #92	; 0x5c
   12a50:	mov	r9, #0
   12a54:	cmp	sl, #0
   12a58:	bne	12a90 <__mempcpy_chk@plt+0x1a80>
   12a5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12a60:	tst	r0, #1
   12a64:	beq	12a90 <__mempcpy_chk@plt+0x1a80>
   12a68:	cmp	r8, r4
   12a6c:	movcc	r0, #39	; 0x27
   12a70:	strbcc	r0, [r5, r8]
   12a74:	add	r0, r8, #1
   12a78:	add	r8, r8, #2
   12a7c:	cmp	r0, r4
   12a80:	movcc	r1, #39	; 0x27
   12a84:	strbcc	r1, [r5, r0]
   12a88:	mov	r0, #0
   12a8c:	str	r0, [fp, #-56]	; 0xffffffc8
   12a90:	mov	r1, r9
   12a94:	mov	r0, r6
   12a98:	cmp	r8, r4
   12a9c:	strbcc	r0, [r5, r8]
   12aa0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12aa4:	add	r8, r8, #1
   12aa8:	and	r0, r0, r1
   12aac:	str	r0, [fp, #-48]	; 0xffffffd0
   12ab0:	add	r7, r7, #1
   12ab4:	cmn	lr, #1
   12ab8:	bne	123f8 <__mempcpy_chk@plt+0x13e8>
   12abc:	b	12404 <__mempcpy_chk@plt+0x13f4>
   12ac0:	ldr	r1, [sp, #84]	; 0x54
   12ac4:	mov	sl, #0
   12ac8:	mov	r9, #0
   12acc:	tst	r1, #1
   12ad0:	mov	r1, #0
   12ad4:	beq	126cc <__mempcpy_chk@plt+0x16bc>
   12ad8:	b	12714 <__mempcpy_chk@plt+0x1704>
   12adc:	ldr	r0, [sp, #36]	; 0x24
   12ae0:	mov	r6, #0
   12ae4:	mov	sl, #0
   12ae8:	mov	r9, #0
   12aec:	cmp	r0, #0
   12af0:	beq	126cc <__mempcpy_chk@plt+0x16bc>
   12af4:	b	12ab0 <__mempcpy_chk@plt+0x1aa0>
   12af8:	mov	r9, #1
   12afc:	b	126cc <__mempcpy_chk@plt+0x16bc>
   12b00:	mov	r0, #0
   12b04:	cmn	lr, #1
   12b08:	sub	r4, fp, #40	; 0x28
   12b0c:	str	r0, [fp, #-36]	; 0xffffffdc
   12b10:	str	r0, [fp, #-40]	; 0xffffffd8
   12b14:	bne	12b28 <__mempcpy_chk@plt+0x1b18>
   12b18:	mov	r0, ip
   12b1c:	bl	10f2c <strlen@plt>
   12b20:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12b24:	mov	lr, r0
   12b28:	ldr	r0, [sp, #72]	; 0x48
   12b2c:	mov	r9, #1
   12b30:	mov	r2, #0
   12b34:	str	lr, [sp, #28]
   12b38:	add	r0, r0, r7
   12b3c:	str	r0, [sp, #20]
   12b40:	b	12b84 <__mempcpy_chk@plt+0x1b74>
   12b44:	ldr	r5, [sp, #44]	; 0x2c
   12b48:	add	r5, r0, r5
   12b4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b50:	bl	10e60 <iswprint@plt>
   12b54:	cmp	r0, #0
   12b58:	sub	r4, fp, #40	; 0x28
   12b5c:	movwne	r0, #1
   12b60:	and	r9, r9, r0
   12b64:	mov	r0, r4
   12b68:	bl	10e18 <mbsinit@plt>
   12b6c:	mov	r2, r5
   12b70:	ldr	lr, [sp, #28]
   12b74:	ldr	r5, [fp, #-84]	; 0xffffffac
   12b78:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12b7c:	cmp	r0, #0
   12b80:	bne	12a14 <__mempcpy_chk@plt+0x1a04>
   12b84:	add	r0, r2, r7
   12b88:	str	r2, [sp, #44]	; 0x2c
   12b8c:	mov	r3, r4
   12b90:	add	r1, ip, r0
   12b94:	str	r0, [sp, #24]
   12b98:	sub	r2, lr, r0
   12b9c:	sub	r0, fp, #44	; 0x2c
   12ba0:	bl	14c44 <__mempcpy_chk@plt+0x3c34>
   12ba4:	cmp	r0, #0
   12ba8:	beq	12f4c <__mempcpy_chk@plt+0x1f3c>
   12bac:	cmn	r0, #1
   12bb0:	beq	12f08 <__mempcpy_chk@plt+0x1ef8>
   12bb4:	ldr	lr, [sp, #28]
   12bb8:	cmn	r0, #2
   12bbc:	beq	12f10 <__mempcpy_chk@plt+0x1f00>
   12bc0:	ldr	r2, [sp, #64]	; 0x40
   12bc4:	ldr	r4, [sp, #88]	; 0x58
   12bc8:	ldr	ip, [sp, #84]	; 0x54
   12bcc:	cmp	r0, #2
   12bd0:	mov	r1, #0
   12bd4:	movwcc	r1, #1
   12bd8:	eor	r2, r2, #1
   12bdc:	orrs	r1, r2, r1
   12be0:	bne	12b44 <__mempcpy_chk@plt+0x1b34>
   12be4:	ldr	r1, [sp, #44]	; 0x2c
   12be8:	ldr	r2, [sp, #20]
   12bec:	add	r1, r2, r1
   12bf0:	sub	r2, r0, #1
   12bf4:	b	12c04 <__mempcpy_chk@plt+0x1bf4>
   12bf8:	add	r1, r1, #1
   12bfc:	subs	r2, r2, #1
   12c00:	beq	12b44 <__mempcpy_chk@plt+0x1b34>
   12c04:	ldrb	r3, [r1]
   12c08:	sub	r3, r3, #91	; 0x5b
   12c0c:	cmp	r3, #33	; 0x21
   12c10:	bhi	12bf8 <__mempcpy_chk@plt+0x1be8>
   12c14:	add	r5, pc, #0
   12c18:	ldr	pc, [r5, r3, lsl #2]
   12c1c:	andeq	r3, r1, r0
   12c20:	andeq	r3, r1, r0
   12c24:	strdeq	r2, [r1], -r8
   12c28:	andeq	r3, r1, r0
   12c2c:	strdeq	r2, [r1], -r8
   12c30:	andeq	r3, r1, r0
   12c34:	strdeq	r2, [r1], -r8
   12c38:	strdeq	r2, [r1], -r8
   12c3c:	strdeq	r2, [r1], -r8
   12c40:	strdeq	r2, [r1], -r8
   12c44:	strdeq	r2, [r1], -r8
   12c48:	strdeq	r2, [r1], -r8
   12c4c:	strdeq	r2, [r1], -r8
   12c50:	strdeq	r2, [r1], -r8
   12c54:	strdeq	r2, [r1], -r8
   12c58:	strdeq	r2, [r1], -r8
   12c5c:	strdeq	r2, [r1], -r8
   12c60:	strdeq	r2, [r1], -r8
   12c64:	strdeq	r2, [r1], -r8
   12c68:	strdeq	r2, [r1], -r8
   12c6c:	strdeq	r2, [r1], -r8
   12c70:	strdeq	r2, [r1], -r8
   12c74:	strdeq	r2, [r1], -r8
   12c78:	strdeq	r2, [r1], -r8
   12c7c:	strdeq	r2, [r1], -r8
   12c80:	strdeq	r2, [r1], -r8
   12c84:	strdeq	r2, [r1], -r8
   12c88:	strdeq	r2, [r1], -r8
   12c8c:	strdeq	r2, [r1], -r8
   12c90:	strdeq	r2, [r1], -r8
   12c94:	strdeq	r2, [r1], -r8
   12c98:	strdeq	r2, [r1], -r8
   12c9c:	strdeq	r2, [r1], -r8
   12ca0:	andeq	r3, r1, r0
   12ca4:	mov	r8, r0
   12ca8:	b	126cc <__mempcpy_chk@plt+0x16bc>
   12cac:	ldr	r0, [sp, #32]
   12cb0:	cmp	r0, #0
   12cb4:	beq	12d54 <__mempcpy_chk@plt+0x1d44>
   12cb8:	add	r0, r7, #2
   12cbc:	cmp	r0, lr
   12cc0:	bcs	12d54 <__mempcpy_chk@plt+0x1d44>
   12cc4:	add	r1, r7, ip
   12cc8:	ldrb	r1, [r1, #1]
   12ccc:	cmp	r1, #63	; 0x3f
   12cd0:	bne	12d54 <__mempcpy_chk@plt+0x1d44>
   12cd4:	ldrb	r9, [ip, r0]
   12cd8:	sub	r2, r9, #33	; 0x21
   12cdc:	cmp	r2, #29
   12ce0:	bhi	12d54 <__mempcpy_chk@plt+0x1d44>
   12ce4:	movw	r1, #20929	; 0x51c1
   12ce8:	mov	r3, #1
   12cec:	movt	r1, #14336	; 0x3800
   12cf0:	tst	r1, r3, lsl r2
   12cf4:	beq	12d54 <__mempcpy_chk@plt+0x1d44>
   12cf8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12cfc:	tst	r1, #1
   12d00:	bne	13024 <__mempcpy_chk@plt+0x2014>
   12d04:	cmp	r8, r4
   12d08:	add	r2, r8, #1
   12d0c:	mov	r6, r9
   12d10:	mov	r7, r0
   12d14:	mov	r9, #0
   12d18:	movcc	r1, #63	; 0x3f
   12d1c:	strbcc	r1, [r5, r8]
   12d20:	cmp	r2, r4
   12d24:	movcc	r1, #34	; 0x22
   12d28:	strbcc	r1, [r5, r2]
   12d2c:	add	r2, r8, #2
   12d30:	cmp	r2, r4
   12d34:	movcc	r1, #34	; 0x22
   12d38:	strbcc	r1, [r5, r2]
   12d3c:	add	r2, r8, #3
   12d40:	add	r8, r8, #4
   12d44:	cmp	r2, r4
   12d48:	movcc	r1, #63	; 0x3f
   12d4c:	strbcc	r1, [r5, r2]
   12d50:	b	126cc <__mempcpy_chk@plt+0x16bc>
   12d54:	mov	r9, #0
   12d58:	b	126cc <__mempcpy_chk@plt+0x16bc>
   12d5c:	ldr	lr, [sp, #28]
   12d60:	ldr	r4, [fp, #-56]	; 0xffffffc8
   12d64:	add	r1, r2, r7
   12d68:	mov	r2, #0
   12d6c:	str	r1, [sp, #44]	; 0x2c
   12d70:	tst	r0, #1
   12d74:	bne	12e90 <__mempcpy_chk@plt+0x1e80>
   12d78:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12d7c:	tst	r1, #1
   12d80:	bne	13020 <__mempcpy_chk@plt+0x2010>
   12d84:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12d88:	subs	r2, r1, #2
   12d8c:	movwne	r2, #1
   12d90:	orr	r2, r2, r4
   12d94:	tst	r2, #1
   12d98:	bne	12ddc <__mempcpy_chk@plt+0x1dcc>
   12d9c:	ldr	r1, [sp, #88]	; 0x58
   12da0:	add	r2, r8, #1
   12da4:	mov	r4, #1
   12da8:	cmp	r8, r1
   12dac:	movcc	r1, #39	; 0x27
   12db0:	strbcc	r1, [r5, r8]
   12db4:	ldr	r1, [sp, #88]	; 0x58
   12db8:	cmp	r2, r1
   12dbc:	movcc	r1, #36	; 0x24
   12dc0:	strbcc	r1, [r5, r2]
   12dc4:	ldr	r1, [sp, #88]	; 0x58
   12dc8:	add	r2, r8, #2
   12dcc:	add	r8, r8, #3
   12dd0:	cmp	r2, r1
   12dd4:	movcc	r1, #39	; 0x27
   12dd8:	strbcc	r1, [r5, r2]
   12ddc:	ldr	r1, [sp, #88]	; 0x58
   12de0:	add	r2, r8, #1
   12de4:	cmp	r8, r1
   12de8:	movcc	r1, #92	; 0x5c
   12dec:	strbcc	r1, [r5, r8]
   12df0:	ldr	r1, [sp, #88]	; 0x58
   12df4:	cmp	r2, r1
   12df8:	bcs	12e0c <__mempcpy_chk@plt+0x1dfc>
   12dfc:	uxtb	r3, r6
   12e00:	mov	r1, #48	; 0x30
   12e04:	orr	r3, r1, r3, lsr #6
   12e08:	strb	r3, [r5, r2]
   12e0c:	ldr	r1, [sp, #88]	; 0x58
   12e10:	add	r2, r8, #2
   12e14:	add	r8, r8, #3
   12e18:	cmp	r2, r1
   12e1c:	lsrcc	r3, r6, #3
   12e20:	movcc	r1, #6
   12e24:	bficc	r3, r1, #3, #29
   12e28:	mov	r1, #6
   12e2c:	bfi	r6, r1, #3, #29
   12e30:	strbcc	r3, [r5, r2]
   12e34:	mov	r2, #1
   12e38:	b	12eb8 <__mempcpy_chk@plt+0x1ea8>
   12e3c:	ldr	r1, [sp, #88]	; 0x58
   12e40:	ldr	r5, [fp, #-84]	; 0xffffffac
   12e44:	ldr	r4, [sp, #88]	; 0x58
   12e48:	cmp	r8, r1
   12e4c:	movcc	r1, #39	; 0x27
   12e50:	strbcc	r1, [r5, r8]
   12e54:	add	r1, r8, #1
   12e58:	add	r8, r8, #2
   12e5c:	cmp	r1, r4
   12e60:	movcc	r4, #39	; 0x27
   12e64:	strbcc	r4, [r5, r1]
   12e68:	mov	r4, #0
   12e6c:	ldr	r1, [sp, #88]	; 0x58
   12e70:	cmp	r8, r1
   12e74:	ldr	r1, [sp, #72]	; 0x48
   12e78:	strbcc	r6, [r5, r8]
   12e7c:	add	r8, r8, #1
   12e80:	ldrb	r6, [r1, r7]
   12e84:	mov	r7, r3
   12e88:	tst	r0, #1
   12e8c:	beq	12d78 <__mempcpy_chk@plt+0x1d68>
   12e90:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12e94:	tst	r1, #1
   12e98:	beq	12eb0 <__mempcpy_chk@plt+0x1ea0>
   12e9c:	ldr	r1, [sp, #88]	; 0x58
   12ea0:	cmp	r8, r1
   12ea4:	movcc	r1, #92	; 0x5c
   12ea8:	strbcc	r1, [r5, r8]
   12eac:	add	r8, r8, #1
   12eb0:	mov	r1, #0
   12eb4:	str	r1, [fp, #-52]	; 0xffffffcc
   12eb8:	ldr	r1, [sp, #44]	; 0x2c
   12ebc:	add	r3, r7, #1
   12ec0:	and	sl, r2, #1
   12ec4:	cmp	r1, r3
   12ec8:	bls	12eec <__mempcpy_chk@plt+0x1edc>
   12ecc:	cmp	sl, #0
   12ed0:	mvn	r5, r4
   12ed4:	movwne	sl, #1
   12ed8:	orr	r5, r5, sl
   12edc:	tst	r5, #1
   12ee0:	beq	12e3c <__mempcpy_chk@plt+0x1e2c>
   12ee4:	ldr	r5, [fp, #-84]	; 0xffffffac
   12ee8:	b	12e6c <__mempcpy_chk@plt+0x1e5c>
   12eec:	str	r4, [fp, #-56]	; 0xffffffc8
   12ef0:	ldr	r4, [sp, #88]	; 0x58
   12ef4:	cmp	sl, #0
   12ef8:	movwne	sl, #1
   12efc:	cmp	sl, #0
   12f00:	beq	12a5c <__mempcpy_chk@plt+0x1a4c>
   12f04:	b	12a90 <__mempcpy_chk@plt+0x1a80>
   12f08:	mov	r9, #0
   12f0c:	b	12f4c <__mempcpy_chk@plt+0x1f3c>
   12f10:	ldr	r0, [sp, #24]
   12f14:	mov	r9, #0
   12f18:	cmp	lr, r0
   12f1c:	bls	12f4c <__mempcpy_chk@plt+0x1f3c>
   12f20:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12f24:	ldr	r2, [sp, #44]	; 0x2c
   12f28:	add	r0, ip, r7
   12f2c:	ldrb	r1, [r0, r2]
   12f30:	cmp	r1, #0
   12f34:	beq	12a14 <__mempcpy_chk@plt+0x1a04>
   12f38:	add	r2, r2, #1
   12f3c:	add	r1, r7, r2
   12f40:	cmp	r1, lr
   12f44:	bcc	12f2c <__mempcpy_chk@plt+0x1f1c>
   12f48:	b	12a14 <__mempcpy_chk@plt+0x1a04>
   12f4c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12f50:	ldr	r2, [sp, #44]	; 0x2c
   12f54:	b	12a14 <__mempcpy_chk@plt+0x1a04>
   12f58:	mov	lr, r7
   12f5c:	b	12f64 <__mempcpy_chk@plt+0x1f54>
   12f60:	mvn	lr, #0
   12f64:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12f68:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12f6c:	eor	r0, r1, #2
   12f70:	orr	r0, r0, r8
   12f74:	clz	r0, r0
   12f78:	lsr	r0, r0, #5
   12f7c:	tst	r2, r0
   12f80:	bne	13024 <__mempcpy_chk@plt+0x2014>
   12f84:	subs	r0, r1, #2
   12f88:	movwne	r0, #1
   12f8c:	orr	r0, r2, r0
   12f90:	tst	r0, #1
   12f94:	ldreq	r0, [sp, #60]	; 0x3c
   12f98:	eoreq	r0, r0, #1
   12f9c:	tsteq	r0, #1
   12fa0:	bne	130b8 <__mempcpy_chk@plt+0x20a8>
   12fa4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12fa8:	mov	sl, lr
   12fac:	tst	r0, #1
   12fb0:	bne	13084 <__mempcpy_chk@plt+0x2074>
   12fb4:	ldr	r6, [sp, #56]	; 0x38
   12fb8:	mov	r9, #0
   12fbc:	cmp	r6, #0
   12fc0:	beq	130b0 <__mempcpy_chk@plt+0x20a0>
   12fc4:	ldr	r0, [sp, #84]	; 0x54
   12fc8:	mov	r1, #0
   12fcc:	mov	r7, #2
   12fd0:	cmp	r4, #0
   12fd4:	str	r1, [fp, #-48]	; 0xffffffd0
   12fd8:	mov	r1, #0
   12fdc:	str	r1, [fp, #-76]	; 0xffffffb4
   12fe0:	beq	12180 <__mempcpy_chk@plt+0x1170>
   12fe4:	b	130b8 <__mempcpy_chk@plt+0x20a8>
   12fe8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12fec:	ldr	r1, [fp, #12]
   12ff0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12ff4:	mov	lr, r4
   12ff8:	mov	r4, r6
   12ffc:	b	13044 <__mempcpy_chk@plt+0x2034>
   13000:	tst	ip, #1
   13004:	ldr	r5, [fp, #-84]	; 0xffffffac
   13008:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1300c:	ldr	r1, [fp, #12]
   13010:	mov	r0, #2
   13014:	movwne	r0, #4
   13018:	mov	r2, r0
   1301c:	b	13044 <__mempcpy_chk@plt+0x2034>
   13020:	ldr	r4, [sp, #88]	; 0x58
   13024:	ldr	r1, [sp, #84]	; 0x54
   13028:	mov	r0, #2
   1302c:	tst	r1, #1
   13030:	movwne	r0, #4
   13034:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13038:	ldr	r1, [fp, #12]
   1303c:	cmp	r2, #2
   13040:	moveq	r2, r0
   13044:	mov	r0, #0
   13048:	bic	r1, r1, #2
   1304c:	str	r2, [sp]
   13050:	mov	r2, ip
   13054:	mov	r3, lr
   13058:	str	r0, [sp, #8]
   1305c:	ldr	r0, [sp, #76]	; 0x4c
   13060:	str	r1, [sp, #4]
   13064:	mov	r1, r4
   13068:	str	r0, [sp, #12]
   1306c:	ldr	r0, [sp, #80]	; 0x50
   13070:	str	r0, [sp, #16]
   13074:	mov	r0, r5
   13078:	bl	120f0 <__mempcpy_chk@plt+0x10e0>
   1307c:	mov	r8, r0
   13080:	b	13104 <__mempcpy_chk@plt+0x20f4>
   13084:	mov	r0, #5
   13088:	ldr	r1, [sp, #56]	; 0x38
   1308c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13090:	mov	r3, sl
   13094:	str	r0, [sp]
   13098:	ldr	r0, [fp, #12]
   1309c:	str	r0, [sp, #4]
   130a0:	ldr	r0, [fp, #16]
   130a4:	str	r0, [sp, #8]
   130a8:	ldr	r0, [sp, #76]	; 0x4c
   130ac:	b	13068 <__mempcpy_chk@plt+0x2058>
   130b0:	mov	r0, #0
   130b4:	str	r0, [fp, #-76]	; 0xffffffb4
   130b8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   130bc:	cmp	r1, #0
   130c0:	beq	130f8 <__mempcpy_chk@plt+0x20e8>
   130c4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   130c8:	tst	r0, #1
   130cc:	bne	130f8 <__mempcpy_chk@plt+0x20e8>
   130d0:	ldrb	r0, [r1]
   130d4:	cmp	r0, #0
   130d8:	beq	130f8 <__mempcpy_chk@plt+0x20e8>
   130dc:	add	r1, r1, #1
   130e0:	cmp	r8, r4
   130e4:	strbcc	r0, [r5, r8]
   130e8:	add	r8, r8, #1
   130ec:	ldrb	r0, [r1], #1
   130f0:	cmp	r0, #0
   130f4:	bne	130e0 <__mempcpy_chk@plt+0x20d0>
   130f8:	cmp	r8, r4
   130fc:	movcc	r0, #0
   13100:	strbcc	r0, [r5, r8]
   13104:	mov	r0, r8
   13108:	sub	sp, fp, #28
   1310c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13110:	mov	r0, #4
   13114:	b	13034 <__mempcpy_chk@plt+0x2024>
   13118:	bl	10ff8 <abort@plt>
   1311c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13120:	add	fp, sp, #28
   13124:	sub	sp, sp, #28
   13128:	movw	r5, #24928	; 0x6160
   1312c:	cmp	r2, #0
   13130:	mov	r4, r1
   13134:	mov	r7, r0
   13138:	str	r0, [sp, #20]
   1313c:	movt	r5, #2
   13140:	movne	r5, r2
   13144:	bl	10f38 <__errno_location@plt>
   13148:	mov	sl, r0
   1314c:	ldr	r2, [r5, #40]	; 0x28
   13150:	ldr	r3, [r5, #44]	; 0x2c
   13154:	ldm	r5, {r0, r1}
   13158:	orr	r8, r1, #1
   1315c:	add	r9, r5, #8
   13160:	mov	r1, #0
   13164:	ldr	r6, [sl]
   13168:	stm	sp, {r0, r8, r9}
   1316c:	mov	r0, #0
   13170:	str	r2, [sp, #12]
   13174:	str	r3, [sp, #16]
   13178:	mov	r2, r7
   1317c:	mov	r3, r4
   13180:	str	r6, [sp, #24]
   13184:	mov	r6, r4
   13188:	bl	120f0 <__mempcpy_chk@plt+0x10e0>
   1318c:	add	r7, r0, #1
   13190:	mov	r0, r7
   13194:	bl	1433c <__mempcpy_chk@plt+0x332c>
   13198:	mov	r4, r0
   1319c:	ldr	r0, [r5]
   131a0:	ldr	r2, [r5, #44]	; 0x2c
   131a4:	ldr	r1, [r5, #40]	; 0x28
   131a8:	mov	r3, r6
   131ac:	stm	sp, {r0, r8, r9}
   131b0:	str	r2, [sp, #16]
   131b4:	ldr	r2, [sp, #20]
   131b8:	str	r1, [sp, #12]
   131bc:	mov	r0, r4
   131c0:	mov	r1, r7
   131c4:	bl	120f0 <__mempcpy_chk@plt+0x10e0>
   131c8:	ldr	r0, [sp, #24]
   131cc:	str	r0, [sl]
   131d0:	mov	r0, r4
   131d4:	sub	sp, fp, #28
   131d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131e0:	add	fp, sp, #28
   131e4:	sub	sp, sp, #36	; 0x24
   131e8:	movw	r8, #24928	; 0x6160
   131ec:	cmp	r3, #0
   131f0:	mov	r4, r2
   131f4:	str	r2, [sp, #24]
   131f8:	mov	r5, r1
   131fc:	mov	r6, r0
   13200:	str	r0, [sp, #20]
   13204:	movt	r8, #2
   13208:	movne	r8, r3
   1320c:	bl	10f38 <__errno_location@plt>
   13210:	str	r0, [sp, #28]
   13214:	ldr	r1, [r8, #40]	; 0x28
   13218:	ldr	r2, [r8, #44]	; 0x2c
   1321c:	ldr	r7, [r0]
   13220:	cmp	r4, #0
   13224:	add	sl, r8, #8
   13228:	mov	r0, #0
   1322c:	ldm	r8, {r3, r9}
   13230:	orreq	r9, r9, #1
   13234:	stm	sp, {r3, r9, sl}
   13238:	str	r1, [sp, #12]
   1323c:	str	r2, [sp, #16]
   13240:	mov	r1, #0
   13244:	mov	r2, r6
   13248:	mov	r3, r5
   1324c:	str	r7, [sp, #32]
   13250:	mov	r7, r5
   13254:	bl	120f0 <__mempcpy_chk@plt+0x10e0>
   13258:	add	r4, r0, #1
   1325c:	mov	r5, r0
   13260:	mov	r0, r4
   13264:	bl	1433c <__mempcpy_chk@plt+0x332c>
   13268:	mov	r6, r0
   1326c:	ldr	r0, [r8]
   13270:	ldr	r2, [r8, #44]	; 0x2c
   13274:	ldr	r1, [r8, #40]	; 0x28
   13278:	mov	r3, r7
   1327c:	stm	sp, {r0, r9, sl}
   13280:	str	r2, [sp, #16]
   13284:	ldr	r2, [sp, #20]
   13288:	str	r1, [sp, #12]
   1328c:	mov	r0, r6
   13290:	mov	r1, r4
   13294:	bl	120f0 <__mempcpy_chk@plt+0x10e0>
   13298:	ldr	r0, [sp, #24]
   1329c:	ldr	r1, [sp, #32]
   132a0:	ldr	r2, [sp, #28]
   132a4:	cmp	r0, #0
   132a8:	str	r1, [r2]
   132ac:	strne	r5, [r0]
   132b0:	mov	r0, r6
   132b4:	sub	sp, fp, #28
   132b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   132c0:	add	fp, sp, #24
   132c4:	movw	r5, #24820	; 0x60f4
   132c8:	movw	r8, #24816	; 0x60f0
   132cc:	movt	r5, #2
   132d0:	movt	r8, #2
   132d4:	ldr	r0, [r5]
   132d8:	ldr	r4, [r8]
   132dc:	cmp	r0, #2
   132e0:	blt	1330c <__mempcpy_chk@plt+0x22fc>
   132e4:	add	r7, r4, #12
   132e8:	mov	r6, #0
   132ec:	ldr	r0, [r7, r6, lsl #3]
   132f0:	bl	11d18 <__mempcpy_chk@plt+0xd08>
   132f4:	ldr	r1, [r5]
   132f8:	add	r2, r6, #2
   132fc:	add	r0, r6, #1
   13300:	mov	r6, r0
   13304:	cmp	r2, r1
   13308:	blt	132ec <__mempcpy_chk@plt+0x22dc>
   1330c:	ldr	r0, [r4, #4]
   13310:	movw	r9, #24976	; 0x6190
   13314:	movw	r7, #24824	; 0x60f8
   13318:	movt	r9, #2
   1331c:	movt	r7, #2
   13320:	cmp	r0, r9
   13324:	beq	13334 <__mempcpy_chk@plt+0x2324>
   13328:	bl	11d18 <__mempcpy_chk@plt+0xd08>
   1332c:	mov	r0, #256	; 0x100
   13330:	stm	r7, {r0, r9}
   13334:	cmp	r4, r7
   13338:	beq	13348 <__mempcpy_chk@plt+0x2338>
   1333c:	mov	r0, r4
   13340:	bl	11d18 <__mempcpy_chk@plt+0xd08>
   13344:	str	r7, [r8]
   13348:	mov	r0, #1
   1334c:	str	r0, [r5]
   13350:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13354:	movw	r3, #24928	; 0x6160
   13358:	mvn	r2, #0
   1335c:	movt	r3, #2
   13360:	b	13364 <__mempcpy_chk@plt+0x2354>
   13364:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13368:	add	fp, sp, #28
   1336c:	sub	sp, sp, #44	; 0x2c
   13370:	mov	r7, r3
   13374:	str	r2, [sp, #36]	; 0x24
   13378:	str	r1, [sp, #32]
   1337c:	mov	r5, r0
   13380:	bl	10f38 <__errno_location@plt>
   13384:	cmp	r5, #0
   13388:	bmi	134f8 <__mempcpy_chk@plt+0x24e8>
   1338c:	cmn	r5, #-2147483647	; 0x80000001
   13390:	beq	134f8 <__mempcpy_chk@plt+0x24e8>
   13394:	movw	r8, #24820	; 0x60f4
   13398:	movw	r4, #24816	; 0x60f0
   1339c:	str	r0, [sp, #28]
   133a0:	ldr	r0, [r0]
   133a4:	movt	r8, #2
   133a8:	movt	r4, #2
   133ac:	ldr	r1, [r8]
   133b0:	ldr	r6, [r4]
   133b4:	str	r0, [sp, #24]
   133b8:	cmp	r1, r5
   133bc:	ble	133c8 <__mempcpy_chk@plt+0x23b8>
   133c0:	mov	sl, r6
   133c4:	b	13434 <__mempcpy_chk@plt+0x2424>
   133c8:	movw	r9, #24824	; 0x60f8
   133cc:	mov	r0, #8
   133d0:	str	r1, [fp, #-32]	; 0xffffffe0
   133d4:	sub	r1, r5, r1
   133d8:	mvn	r3, #-2147483648	; 0x80000000
   133dc:	movt	r9, #2
   133e0:	str	r0, [sp]
   133e4:	add	r2, r1, #1
   133e8:	sub	r1, fp, #32
   133ec:	subs	r0, r6, r9
   133f0:	movne	r0, r6
   133f4:	bl	1453c <__mempcpy_chk@plt+0x352c>
   133f8:	mov	sl, r0
   133fc:	cmp	r6, r9
   13400:	str	r0, [r4]
   13404:	bne	13410 <__mempcpy_chk@plt+0x2400>
   13408:	ldrd	r0, [r9]
   1340c:	stm	sl, {r0, r1}
   13410:	ldr	r1, [r8]
   13414:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13418:	add	r0, sl, r1, lsl #3
   1341c:	sub	r1, r2, r1
   13420:	lsl	r2, r1, #3
   13424:	mov	r1, #0
   13428:	bl	10f50 <memset@plt>
   1342c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13430:	str	r0, [r8]
   13434:	mov	r9, sl
   13438:	ldm	r7, {r0, r1}
   1343c:	orr	r8, r1, #1
   13440:	add	r1, r7, #8
   13444:	ldr	r2, [r7, #40]	; 0x28
   13448:	ldr	r3, [r7, #44]	; 0x2c
   1344c:	ldr	r6, [r9, r5, lsl #3]!
   13450:	str	r1, [sp, #20]
   13454:	ldr	r4, [r9, #4]!
   13458:	stm	sp, {r0, r8}
   1345c:	add	r0, sp, #8
   13460:	stm	r0, {r1, r2, r3}
   13464:	ldr	r2, [sp, #32]
   13468:	ldr	r3, [sp, #36]	; 0x24
   1346c:	mov	r1, r6
   13470:	mov	r0, r4
   13474:	bl	120f0 <__mempcpy_chk@plt+0x10e0>
   13478:	cmp	r6, r0
   1347c:	bhi	134e0 <__mempcpy_chk@plt+0x24d0>
   13480:	add	r6, r0, #1
   13484:	movw	r0, #24976	; 0x6190
   13488:	movt	r0, #2
   1348c:	str	r6, [sl, r5, lsl #3]
   13490:	cmp	r4, r0
   13494:	beq	134a0 <__mempcpy_chk@plt+0x2490>
   13498:	mov	r0, r4
   1349c:	bl	11d18 <__mempcpy_chk@plt+0xd08>
   134a0:	mov	r0, r6
   134a4:	bl	1433c <__mempcpy_chk@plt+0x332c>
   134a8:	str	r0, [r9]
   134ac:	mov	r4, r0
   134b0:	add	r3, sp, #8
   134b4:	ldr	r0, [r7]
   134b8:	ldr	r1, [r7, #40]	; 0x28
   134bc:	ldr	r2, [r7, #44]	; 0x2c
   134c0:	stm	sp, {r0, r8}
   134c4:	ldr	r0, [sp, #20]
   134c8:	stm	r3, {r0, r1, r2}
   134cc:	ldr	r2, [sp, #32]
   134d0:	ldr	r3, [sp, #36]	; 0x24
   134d4:	mov	r0, r4
   134d8:	mov	r1, r6
   134dc:	bl	120f0 <__mempcpy_chk@plt+0x10e0>
   134e0:	ldr	r0, [sp, #28]
   134e4:	ldr	r1, [sp, #24]
   134e8:	str	r1, [r0]
   134ec:	mov	r0, r4
   134f0:	sub	sp, fp, #28
   134f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134f8:	bl	10ff8 <abort@plt>
   134fc:	movw	r3, #24928	; 0x6160
   13500:	movt	r3, #2
   13504:	b	13364 <__mempcpy_chk@plt+0x2354>
   13508:	movw	r3, #24928	; 0x6160
   1350c:	mov	r1, r0
   13510:	mov	r0, #0
   13514:	mvn	r2, #0
   13518:	movt	r3, #2
   1351c:	b	13364 <__mempcpy_chk@plt+0x2354>
   13520:	movw	r3, #24928	; 0x6160
   13524:	mov	r2, r1
   13528:	mov	r1, r0
   1352c:	mov	r0, #0
   13530:	movt	r3, #2
   13534:	b	13364 <__mempcpy_chk@plt+0x2354>
   13538:	push	{fp, lr}
   1353c:	mov	fp, sp
   13540:	sub	sp, sp, #48	; 0x30
   13544:	vmov.i32	q8, #0	; 0x00000000
   13548:	mov	ip, #32
   1354c:	mov	r3, sp
   13550:	mov	lr, r2
   13554:	cmp	r1, #10
   13558:	add	r2, r3, #16
   1355c:	vst1.64	{d16-d17}, [r3], ip
   13560:	vst1.64	{d16-d17}, [r2]
   13564:	vst1.64	{d16-d17}, [r3]
   13568:	beq	13588 <__mempcpy_chk@plt+0x2578>
   1356c:	str	r1, [sp]
   13570:	mov	r3, sp
   13574:	mov	r1, lr
   13578:	mvn	r2, #0
   1357c:	bl	13364 <__mempcpy_chk@plt+0x2354>
   13580:	mov	sp, fp
   13584:	pop	{fp, pc}
   13588:	bl	10ff8 <abort@plt>
   1358c:	push	{r4, sl, fp, lr}
   13590:	add	fp, sp, #8
   13594:	sub	sp, sp, #48	; 0x30
   13598:	vmov.i32	q8, #0	; 0x00000000
   1359c:	mov	ip, r3
   135a0:	mov	r3, sp
   135a4:	mov	lr, #32
   135a8:	cmp	r1, #10
   135ac:	add	r4, r3, #16
   135b0:	vst1.64	{d16-d17}, [r3], lr
   135b4:	vst1.64	{d16-d17}, [r4]
   135b8:	vst1.64	{d16-d17}, [r3]
   135bc:	beq	135dc <__mempcpy_chk@plt+0x25cc>
   135c0:	str	r1, [sp]
   135c4:	mov	r1, r2
   135c8:	mov	r3, sp
   135cc:	mov	r2, ip
   135d0:	bl	13364 <__mempcpy_chk@plt+0x2354>
   135d4:	sub	sp, fp, #8
   135d8:	pop	{r4, sl, fp, pc}
   135dc:	bl	10ff8 <abort@plt>
   135e0:	push	{fp, lr}
   135e4:	mov	fp, sp
   135e8:	sub	sp, sp, #48	; 0x30
   135ec:	vmov.i32	q8, #0	; 0x00000000
   135f0:	mov	r3, sp
   135f4:	mov	ip, #32
   135f8:	cmp	r0, #10
   135fc:	add	r2, r3, #16
   13600:	vst1.64	{d16-d17}, [r3], ip
   13604:	vst1.64	{d16-d17}, [r2]
   13608:	vst1.64	{d16-d17}, [r3]
   1360c:	beq	1362c <__mempcpy_chk@plt+0x261c>
   13610:	str	r0, [sp]
   13614:	mov	r3, sp
   13618:	mov	r0, #0
   1361c:	mvn	r2, #0
   13620:	bl	13364 <__mempcpy_chk@plt+0x2354>
   13624:	mov	sp, fp
   13628:	pop	{fp, pc}
   1362c:	bl	10ff8 <abort@plt>
   13630:	push	{fp, lr}
   13634:	mov	fp, sp
   13638:	sub	sp, sp, #48	; 0x30
   1363c:	vmov.i32	q8, #0	; 0x00000000
   13640:	mov	r3, sp
   13644:	mov	ip, #32
   13648:	cmp	r0, #10
   1364c:	add	lr, r3, #16
   13650:	vst1.64	{d16-d17}, [r3], ip
   13654:	vst1.64	{d16-d17}, [lr]
   13658:	vst1.64	{d16-d17}, [r3]
   1365c:	beq	13678 <__mempcpy_chk@plt+0x2668>
   13660:	str	r0, [sp]
   13664:	mov	r3, sp
   13668:	mov	r0, #0
   1366c:	bl	13364 <__mempcpy_chk@plt+0x2354>
   13670:	mov	sp, fp
   13674:	pop	{fp, pc}
   13678:	bl	10ff8 <abort@plt>
   1367c:	push	{r4, sl, fp, lr}
   13680:	add	fp, sp, #8
   13684:	sub	sp, sp, #48	; 0x30
   13688:	mov	lr, r0
   1368c:	movw	r0, #24928	; 0x6160
   13690:	mov	ip, r1
   13694:	mov	r1, #32
   13698:	mov	r4, #1
   1369c:	movt	r0, #2
   136a0:	add	r3, r0, #16
   136a4:	vld1.64	{d16-d17}, [r0], r1
   136a8:	vld1.64	{d20-d21}, [r0]
   136ac:	vld1.64	{d18-d19}, [r3]
   136b0:	mov	r3, sp
   136b4:	add	r0, r3, #32
   136b8:	add	r1, r3, #16
   136bc:	vst1.64	{d20-d21}, [r0]
   136c0:	mov	r0, #28
   136c4:	vst1.64	{d18-d19}, [r1]
   136c8:	mov	r1, r3
   136cc:	and	r0, r0, r2, lsr #3
   136d0:	and	r2, r2, #31
   136d4:	vst1.64	{d16-d17}, [r1], r0
   136d8:	ldr	r0, [r1, #8]
   136dc:	bic	r4, r4, r0, lsr r2
   136e0:	eor	r0, r0, r4, lsl r2
   136e4:	mov	r2, ip
   136e8:	str	r0, [r1, #8]
   136ec:	mov	r0, #0
   136f0:	mov	r1, lr
   136f4:	bl	13364 <__mempcpy_chk@plt+0x2354>
   136f8:	sub	sp, fp, #8
   136fc:	pop	{r4, sl, fp, pc}
   13700:	push	{fp, lr}
   13704:	mov	fp, sp
   13708:	sub	sp, sp, #48	; 0x30
   1370c:	mov	ip, r0
   13710:	movw	r0, #24928	; 0x6160
   13714:	mov	r2, #32
   13718:	movt	r0, #2
   1371c:	add	r3, r0, #16
   13720:	vld1.64	{d16-d17}, [r0], r2
   13724:	vld1.64	{d20-d21}, [r0]
   13728:	vld1.64	{d18-d19}, [r3]
   1372c:	mov	r3, sp
   13730:	add	r0, r3, #32
   13734:	add	r2, r3, #16
   13738:	vst1.64	{d20-d21}, [r0]
   1373c:	mov	r0, #28
   13740:	vst1.64	{d18-d19}, [r2]
   13744:	mov	r2, r3
   13748:	and	r0, r0, r1, lsr #3
   1374c:	and	r1, r1, #31
   13750:	vst1.64	{d16-d17}, [r2], r0
   13754:	mov	r0, #1
   13758:	ldr	lr, [r2, #8]
   1375c:	bic	r0, r0, lr, lsr r1
   13760:	eor	r0, lr, r0, lsl r1
   13764:	mov	r1, ip
   13768:	str	r0, [r2, #8]
   1376c:	mov	r0, #0
   13770:	mvn	r2, #0
   13774:	bl	13364 <__mempcpy_chk@plt+0x2354>
   13778:	mov	sp, fp
   1377c:	pop	{fp, pc}
   13780:	push	{fp, lr}
   13784:	mov	fp, sp
   13788:	sub	sp, sp, #48	; 0x30
   1378c:	mov	r1, r0
   13790:	movw	r0, #24928	; 0x6160
   13794:	mov	r3, #32
   13798:	movt	r0, #2
   1379c:	add	r2, r0, #16
   137a0:	vld1.64	{d16-d17}, [r0], r3
   137a4:	mov	r3, sp
   137a8:	vld1.64	{d18-d19}, [r2]
   137ac:	vld1.64	{d20-d21}, [r0]
   137b0:	add	r2, r3, #16
   137b4:	add	r0, r3, #32
   137b8:	vst1.64	{d18-d19}, [r2]
   137bc:	vst1.64	{d20-d21}, [r0]
   137c0:	mov	r0, #12
   137c4:	mov	r2, r3
   137c8:	vst1.64	{d16-d17}, [r2], r0
   137cc:	ldr	r0, [r2]
   137d0:	orr	r0, r0, #67108864	; 0x4000000
   137d4:	str	r0, [r2]
   137d8:	mov	r0, #0
   137dc:	mvn	r2, #0
   137e0:	bl	13364 <__mempcpy_chk@plt+0x2354>
   137e4:	mov	sp, fp
   137e8:	pop	{fp, pc}
   137ec:	push	{fp, lr}
   137f0:	mov	fp, sp
   137f4:	sub	sp, sp, #48	; 0x30
   137f8:	mov	ip, r1
   137fc:	mov	r1, r0
   13800:	movw	r0, #24928	; 0x6160
   13804:	mov	r2, #32
   13808:	movt	r0, #2
   1380c:	add	r3, r0, #16
   13810:	vld1.64	{d16-d17}, [r0], r2
   13814:	vld1.64	{d18-d19}, [r3]
   13818:	vld1.64	{d20-d21}, [r0]
   1381c:	mov	r3, sp
   13820:	add	r2, r3, #16
   13824:	add	r0, r3, #32
   13828:	vst1.64	{d18-d19}, [r2]
   1382c:	vst1.64	{d20-d21}, [r0]
   13830:	mov	r0, #12
   13834:	mov	r2, r3
   13838:	vst1.64	{d16-d17}, [r2], r0
   1383c:	ldr	r0, [r2]
   13840:	orr	r0, r0, #67108864	; 0x4000000
   13844:	str	r0, [r2]
   13848:	mov	r0, #0
   1384c:	mov	r2, ip
   13850:	bl	13364 <__mempcpy_chk@plt+0x2354>
   13854:	mov	sp, fp
   13858:	pop	{fp, pc}
   1385c:	push	{r4, sl, fp, lr}
   13860:	add	fp, sp, #8
   13864:	sub	sp, sp, #96	; 0x60
   13868:	vmov.i32	q8, #0	; 0x00000000
   1386c:	mov	ip, r2
   13870:	mov	r2, sp
   13874:	mov	r4, #28
   13878:	cmp	r1, #10
   1387c:	mov	r3, r2
   13880:	add	lr, r2, #16
   13884:	vst1.64	{d16-d17}, [r3], r4
   13888:	vst1.64	{d16-d17}, [lr]
   1388c:	vst1.32	{d16-d17}, [r3]
   13890:	beq	138e0 <__mempcpy_chk@plt+0x28d0>
   13894:	vld1.64	{d16-d17}, [r2], r4
   13898:	vld1.64	{d18-d19}, [lr]
   1389c:	add	r3, sp, #48	; 0x30
   138a0:	vld1.32	{d20-d21}, [r2]
   138a4:	add	r2, r3, #20
   138a8:	add	r4, r3, #4
   138ac:	vst1.32	{d18-d19}, [r2]
   138b0:	add	r2, r3, #32
   138b4:	vst1.32	{d16-d17}, [r4]
   138b8:	vst1.32	{d20-d21}, [r2]
   138bc:	str	r1, [sp, #48]	; 0x30
   138c0:	mvn	r2, #0
   138c4:	ldr	r1, [sp, #60]	; 0x3c
   138c8:	orr	r1, r1, #67108864	; 0x4000000
   138cc:	str	r1, [sp, #60]	; 0x3c
   138d0:	mov	r1, ip
   138d4:	bl	13364 <__mempcpy_chk@plt+0x2354>
   138d8:	sub	sp, fp, #8
   138dc:	pop	{r4, sl, fp, pc}
   138e0:	bl	10ff8 <abort@plt>
   138e4:	push	{r4, r5, r6, sl, fp, lr}
   138e8:	add	fp, sp, #16
   138ec:	sub	sp, sp, #48	; 0x30
   138f0:	mov	ip, r3
   138f4:	movw	r3, #24928	; 0x6160
   138f8:	mov	r6, #32
   138fc:	cmp	r1, #0
   13900:	mov	r4, sp
   13904:	movt	r3, #2
   13908:	cmpne	r2, #0
   1390c:	add	r5, r4, #16
   13910:	add	lr, r3, #16
   13914:	vld1.64	{d16-d17}, [r3], r6
   13918:	vld1.64	{d18-d19}, [lr]
   1391c:	vld1.64	{d20-d21}, [r3]
   13920:	mov	r3, #10
   13924:	vst1.64	{d16-d17}, [r4], r6
   13928:	vst1.64	{d18-d19}, [r5]
   1392c:	vst1.64	{d20-d21}, [r4]
   13930:	str	r3, [sp]
   13934:	bne	1393c <__mempcpy_chk@plt+0x292c>
   13938:	bl	10ff8 <abort@plt>
   1393c:	str	r2, [sp, #44]	; 0x2c
   13940:	str	r1, [sp, #40]	; 0x28
   13944:	mov	r3, sp
   13948:	mov	r1, ip
   1394c:	mvn	r2, #0
   13950:	bl	13364 <__mempcpy_chk@plt+0x2354>
   13954:	sub	sp, fp, #16
   13958:	pop	{r4, r5, r6, sl, fp, pc}
   1395c:	push	{r4, r5, r6, sl, fp, lr}
   13960:	add	fp, sp, #16
   13964:	sub	sp, sp, #48	; 0x30
   13968:	mov	lr, r3
   1396c:	movw	r3, #24928	; 0x6160
   13970:	mov	r6, #32
   13974:	cmp	r1, #0
   13978:	mov	r4, sp
   1397c:	movt	r3, #2
   13980:	cmpne	r2, #0
   13984:	add	r5, r4, #16
   13988:	add	ip, r3, #16
   1398c:	vld1.64	{d16-d17}, [r3], r6
   13990:	vld1.64	{d18-d19}, [ip]
   13994:	vld1.64	{d20-d21}, [r3]
   13998:	mov	r3, #10
   1399c:	vst1.64	{d16-d17}, [r4], r6
   139a0:	vst1.64	{d18-d19}, [r5]
   139a4:	vst1.64	{d20-d21}, [r4]
   139a8:	str	r3, [sp]
   139ac:	bne	139b4 <__mempcpy_chk@plt+0x29a4>
   139b0:	bl	10ff8 <abort@plt>
   139b4:	ldr	ip, [fp, #8]
   139b8:	str	r2, [sp, #44]	; 0x2c
   139bc:	str	r1, [sp, #40]	; 0x28
   139c0:	mov	r3, sp
   139c4:	mov	r1, lr
   139c8:	mov	r2, ip
   139cc:	bl	13364 <__mempcpy_chk@plt+0x2354>
   139d0:	sub	sp, fp, #16
   139d4:	pop	{r4, r5, r6, sl, fp, pc}
   139d8:	push	{r4, sl, fp, lr}
   139dc:	add	fp, sp, #8
   139e0:	sub	sp, sp, #48	; 0x30
   139e4:	movw	r3, #24928	; 0x6160
   139e8:	mov	lr, #32
   139ec:	mov	ip, r2
   139f0:	cmp	r0, #0
   139f4:	movt	r3, #2
   139f8:	cmpne	r1, #0
   139fc:	add	r2, r3, #16
   13a00:	vld1.64	{d16-d17}, [r3], lr
   13a04:	vld1.64	{d20-d21}, [r3]
   13a08:	vld1.64	{d18-d19}, [r2]
   13a0c:	mov	r2, sp
   13a10:	add	r4, r2, #16
   13a14:	vst1.64	{d16-d17}, [r2], lr
   13a18:	vst1.64	{d20-d21}, [r2]
   13a1c:	mov	r2, #10
   13a20:	vst1.64	{d18-d19}, [r4]
   13a24:	str	r2, [sp]
   13a28:	bne	13a30 <__mempcpy_chk@plt+0x2a20>
   13a2c:	bl	10ff8 <abort@plt>
   13a30:	str	r1, [sp, #44]	; 0x2c
   13a34:	str	r0, [sp, #40]	; 0x28
   13a38:	mov	r3, sp
   13a3c:	mov	r0, #0
   13a40:	mov	r1, ip
   13a44:	mvn	r2, #0
   13a48:	bl	13364 <__mempcpy_chk@plt+0x2354>
   13a4c:	sub	sp, fp, #8
   13a50:	pop	{r4, sl, fp, pc}
   13a54:	push	{r4, r5, fp, lr}
   13a58:	add	fp, sp, #8
   13a5c:	sub	sp, sp, #48	; 0x30
   13a60:	mov	ip, r3
   13a64:	movw	r3, #24928	; 0x6160
   13a68:	mov	r4, #32
   13a6c:	mov	lr, r2
   13a70:	cmp	r0, #0
   13a74:	movt	r3, #2
   13a78:	cmpne	r1, #0
   13a7c:	add	r2, r3, #16
   13a80:	vld1.64	{d16-d17}, [r3], r4
   13a84:	vld1.64	{d20-d21}, [r3]
   13a88:	vld1.64	{d18-d19}, [r2]
   13a8c:	mov	r2, sp
   13a90:	add	r5, r2, #16
   13a94:	vst1.64	{d16-d17}, [r2], r4
   13a98:	vst1.64	{d20-d21}, [r2]
   13a9c:	mov	r2, #10
   13aa0:	vst1.64	{d18-d19}, [r5]
   13aa4:	str	r2, [sp]
   13aa8:	bne	13ab0 <__mempcpy_chk@plt+0x2aa0>
   13aac:	bl	10ff8 <abort@plt>
   13ab0:	str	r1, [sp, #44]	; 0x2c
   13ab4:	str	r0, [sp, #40]	; 0x28
   13ab8:	mov	r3, sp
   13abc:	mov	r0, #0
   13ac0:	mov	r1, lr
   13ac4:	mov	r2, ip
   13ac8:	bl	13364 <__mempcpy_chk@plt+0x2354>
   13acc:	sub	sp, fp, #8
   13ad0:	pop	{r4, r5, fp, pc}
   13ad4:	movw	r3, #24832	; 0x6100
   13ad8:	movt	r3, #2
   13adc:	b	13364 <__mempcpy_chk@plt+0x2354>
   13ae0:	movw	r3, #24832	; 0x6100
   13ae4:	mov	r2, r1
   13ae8:	mov	r1, r0
   13aec:	mov	r0, #0
   13af0:	movt	r3, #2
   13af4:	b	13364 <__mempcpy_chk@plt+0x2354>
   13af8:	movw	r3, #24832	; 0x6100
   13afc:	mvn	r2, #0
   13b00:	movt	r3, #2
   13b04:	b	13364 <__mempcpy_chk@plt+0x2354>
   13b08:	movw	r3, #24832	; 0x6100
   13b0c:	mov	r1, r0
   13b10:	mov	r0, #0
   13b14:	mvn	r2, #0
   13b18:	movt	r3, #2
   13b1c:	b	13364 <__mempcpy_chk@plt+0x2354>
   13b20:	push	{r4, r5, fp, lr}
   13b24:	add	fp, sp, #8
   13b28:	mov	r5, r0
   13b2c:	mov	r4, r1
   13b30:	mov	r0, #0
   13b34:	mov	r2, #5
   13b38:	mov	r1, r5
   13b3c:	bl	10e30 <dcgettext@plt>
   13b40:	cmp	r0, r5
   13b44:	popne	{r4, r5, fp, pc}
   13b48:	bl	14c0c <__mempcpy_chk@plt+0x3bfc>
   13b4c:	ldrb	r1, [r0]
   13b50:	and	r1, r1, #223	; 0xdf
   13b54:	cmp	r1, #71	; 0x47
   13b58:	beq	13bc0 <__mempcpy_chk@plt+0x2bb0>
   13b5c:	cmp	r1, #85	; 0x55
   13b60:	bne	13c18 <__mempcpy_chk@plt+0x2c08>
   13b64:	ldrb	r1, [r0, #1]
   13b68:	and	r1, r1, #223	; 0xdf
   13b6c:	cmp	r1, #84	; 0x54
   13b70:	bne	13c18 <__mempcpy_chk@plt+0x2c08>
   13b74:	ldrb	r1, [r0, #2]
   13b78:	and	r1, r1, #223	; 0xdf
   13b7c:	cmp	r1, #70	; 0x46
   13b80:	bne	13c18 <__mempcpy_chk@plt+0x2c08>
   13b84:	ldrb	r1, [r0, #3]
   13b88:	cmp	r1, #45	; 0x2d
   13b8c:	bne	13c18 <__mempcpy_chk@plt+0x2c08>
   13b90:	ldrb	r1, [r0, #4]
   13b94:	cmp	r1, #56	; 0x38
   13b98:	bne	13c18 <__mempcpy_chk@plt+0x2c08>
   13b9c:	ldrb	r0, [r0, #5]
   13ba0:	cmp	r0, #0
   13ba4:	bne	13c18 <__mempcpy_chk@plt+0x2c08>
   13ba8:	ldrb	r1, [r5]
   13bac:	movw	r2, #21756	; 0x54fc
   13bb0:	movw	r0, #21760	; 0x5500
   13bb4:	movt	r2, #1
   13bb8:	movt	r0, #1
   13bbc:	b	13c48 <__mempcpy_chk@plt+0x2c38>
   13bc0:	ldrb	r1, [r0, #1]
   13bc4:	and	r1, r1, #223	; 0xdf
   13bc8:	cmp	r1, #66	; 0x42
   13bcc:	bne	13c18 <__mempcpy_chk@plt+0x2c08>
   13bd0:	ldrb	r1, [r0, #2]
   13bd4:	cmp	r1, #49	; 0x31
   13bd8:	bne	13c18 <__mempcpy_chk@plt+0x2c08>
   13bdc:	ldrb	r1, [r0, #3]
   13be0:	cmp	r1, #56	; 0x38
   13be4:	bne	13c18 <__mempcpy_chk@plt+0x2c08>
   13be8:	ldrb	r1, [r0, #4]
   13bec:	cmp	r1, #48	; 0x30
   13bf0:	bne	13c18 <__mempcpy_chk@plt+0x2c08>
   13bf4:	ldrb	r1, [r0, #5]
   13bf8:	cmp	r1, #51	; 0x33
   13bfc:	bne	13c18 <__mempcpy_chk@plt+0x2c08>
   13c00:	ldrb	r1, [r0, #6]
   13c04:	cmp	r1, #48	; 0x30
   13c08:	bne	13c18 <__mempcpy_chk@plt+0x2c08>
   13c0c:	ldrb	r0, [r0, #7]
   13c10:	cmp	r0, #0
   13c14:	beq	13c34 <__mempcpy_chk@plt+0x2c24>
   13c18:	movw	r1, #21750	; 0x54f6
   13c1c:	movw	r0, #21754	; 0x54fa
   13c20:	cmp	r4, #9
   13c24:	movt	r1, #1
   13c28:	movt	r0, #1
   13c2c:	moveq	r0, r1
   13c30:	pop	{r4, r5, fp, pc}
   13c34:	ldrb	r1, [r5]
   13c38:	movw	r2, #21764	; 0x5504
   13c3c:	movw	r0, #21768	; 0x5508
   13c40:	movt	r2, #1
   13c44:	movt	r0, #1
   13c48:	cmp	r1, #96	; 0x60
   13c4c:	moveq	r0, r2
   13c50:	pop	{r4, r5, fp, pc}
   13c54:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13c58:	add	fp, sp, #24
   13c5c:	sub	sp, sp, #32
   13c60:	ldr	r6, [fp, #12]
   13c64:	ldr	r7, [fp, #8]
   13c68:	mov	r4, r2
   13c6c:	mov	r8, r0
   13c70:	cmp	r1, #0
   13c74:	beq	13c9c <__mempcpy_chk@plt+0x2c8c>
   13c78:	movw	r2, #21856	; 0x5560
   13c7c:	mov	r5, r1
   13c80:	str	r3, [sp, #4]
   13c84:	str	r4, [sp]
   13c88:	mov	r0, r8
   13c8c:	mov	r1, #1
   13c90:	movt	r2, #1
   13c94:	mov	r3, r5
   13c98:	b	13cb4 <__mempcpy_chk@plt+0x2ca4>
   13c9c:	movw	r2, #21868	; 0x556c
   13ca0:	str	r3, [sp]
   13ca4:	mov	r0, r8
   13ca8:	mov	r1, #1
   13cac:	mov	r3, r4
   13cb0:	movt	r2, #1
   13cb4:	bl	10f74 <__fprintf_chk@plt>
   13cb8:	movw	r1, #21875	; 0x5573
   13cbc:	mov	r0, #0
   13cc0:	mov	r2, #5
   13cc4:	movt	r1, #1
   13cc8:	bl	10e30 <dcgettext@plt>
   13ccc:	movw	r2, #22593	; 0x5841
   13cd0:	mov	r3, r0
   13cd4:	movw	r0, #2022	; 0x7e6
   13cd8:	mov	r1, #1
   13cdc:	movt	r2, #1
   13ce0:	str	r0, [sp]
   13ce4:	mov	r0, r8
   13ce8:	bl	10f74 <__fprintf_chk@plt>
   13cec:	movw	r4, #20214	; 0x4ef6
   13cf0:	mov	r1, r8
   13cf4:	movt	r4, #1
   13cf8:	mov	r0, r4
   13cfc:	bl	10dc4 <fputs_unlocked@plt>
   13d00:	movw	r1, #21879	; 0x5577
   13d04:	mov	r0, #0
   13d08:	mov	r2, #5
   13d0c:	movt	r1, #1
   13d10:	bl	10e30 <dcgettext@plt>
   13d14:	movw	r3, #22050	; 0x5622
   13d18:	mov	r2, r0
   13d1c:	mov	r0, r8
   13d20:	mov	r1, #1
   13d24:	movt	r3, #1
   13d28:	bl	10f74 <__fprintf_chk@plt>
   13d2c:	mov	r0, r4
   13d30:	mov	r1, r8
   13d34:	bl	10dc4 <fputs_unlocked@plt>
   13d38:	cmp	r6, #9
   13d3c:	bhi	13d78 <__mempcpy_chk@plt+0x2d68>
   13d40:	add	r0, pc, #0
   13d44:	ldr	pc, [r0, r6, lsl #2]
   13d48:	andeq	r3, r1, r0, ror sp
   13d4c:	andeq	r3, r1, r4, lsl #27
   13d50:			; <UNDEFINED> instruction: 0x00013db4
   13d54:	ldrdeq	r3, [r1], -ip
   13d58:	andeq	r3, r1, r4, lsl #28
   13d5c:	andeq	r3, r1, ip, lsr #28
   13d60:	andeq	r3, r1, r4, asr lr
   13d64:	andeq	r3, r1, ip, lsl #29
   13d68:	andeq	r3, r1, ip, lsr #30
   13d6c:	ldrdeq	r3, [r1], -r4
   13d70:	sub	sp, fp, #24
   13d74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13d78:	movw	r1, #22403	; 0x5783
   13d7c:	movt	r1, #1
   13d80:	b	13edc <__mempcpy_chk@plt+0x2ecc>
   13d84:	movw	r1, #22084	; 0x5644
   13d88:	mov	r0, #0
   13d8c:	mov	r2, #5
   13d90:	movt	r1, #1
   13d94:	bl	10e30 <dcgettext@plt>
   13d98:	ldr	r3, [r7]
   13d9c:	mov	r2, r0
   13da0:	mov	r0, r8
   13da4:	mov	r1, #1
   13da8:	sub	sp, fp, #24
   13dac:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13db0:	b	10f74 <__fprintf_chk@plt>
   13db4:	movw	r1, #22100	; 0x5654
   13db8:	mov	r0, #0
   13dbc:	mov	r2, #5
   13dc0:	movt	r1, #1
   13dc4:	bl	10e30 <dcgettext@plt>
   13dc8:	mov	r2, r0
   13dcc:	ldr	r3, [r7]
   13dd0:	ldr	r0, [r7, #4]
   13dd4:	str	r0, [sp]
   13dd8:	b	13ec8 <__mempcpy_chk@plt+0x2eb8>
   13ddc:	movw	r1, #22123	; 0x566b
   13de0:	mov	r0, #0
   13de4:	mov	r2, #5
   13de8:	movt	r1, #1
   13dec:	bl	10e30 <dcgettext@plt>
   13df0:	mov	r2, r0
   13df4:	ldr	r3, [r7]
   13df8:	ldmib	r7, {r0, r1}
   13dfc:	stm	sp, {r0, r1}
   13e00:	b	13ec8 <__mempcpy_chk@plt+0x2eb8>
   13e04:	movw	r1, #22151	; 0x5687
   13e08:	mov	r0, #0
   13e0c:	mov	r2, #5
   13e10:	movt	r1, #1
   13e14:	bl	10e30 <dcgettext@plt>
   13e18:	ldr	r3, [r7]
   13e1c:	mov	r2, r0
   13e20:	ldmib	r7, {r0, r1, r7}
   13e24:	stm	sp, {r0, r1, r7}
   13e28:	b	13ec8 <__mempcpy_chk@plt+0x2eb8>
   13e2c:	movw	r1, #22183	; 0x56a7
   13e30:	mov	r0, #0
   13e34:	mov	r2, #5
   13e38:	movt	r1, #1
   13e3c:	bl	10e30 <dcgettext@plt>
   13e40:	ldr	r3, [r7]
   13e44:	mov	r2, r0
   13e48:	ldmib	r7, {r0, r1, r6, r7}
   13e4c:	stm	sp, {r0, r1, r6, r7}
   13e50:	b	13ec8 <__mempcpy_chk@plt+0x2eb8>
   13e54:	movw	r1, #22219	; 0x56cb
   13e58:	mov	r0, #0
   13e5c:	mov	r2, #5
   13e60:	movt	r1, #1
   13e64:	bl	10e30 <dcgettext@plt>
   13e68:	mov	r2, r0
   13e6c:	ldr	r3, [r7]
   13e70:	ldmib	r7, {r0, r1, r6}
   13e74:	ldr	r5, [r7, #16]
   13e78:	ldr	r7, [r7, #20]
   13e7c:	stm	sp, {r0, r1, r6}
   13e80:	str	r5, [sp, #12]
   13e84:	str	r7, [sp, #16]
   13e88:	b	13ec8 <__mempcpy_chk@plt+0x2eb8>
   13e8c:	movw	r1, #22259	; 0x56f3
   13e90:	mov	r0, #0
   13e94:	mov	r2, #5
   13e98:	movt	r1, #1
   13e9c:	bl	10e30 <dcgettext@plt>
   13ea0:	mov	r2, r0
   13ea4:	ldr	r3, [r7]
   13ea8:	ldmib	r7, {r0, r1, r6}
   13eac:	ldr	r5, [r7, #16]
   13eb0:	ldr	r4, [r7, #20]
   13eb4:	ldr	r7, [r7, #24]
   13eb8:	stm	sp, {r0, r1, r6}
   13ebc:	str	r5, [sp, #12]
   13ec0:	str	r4, [sp, #16]
   13ec4:	str	r7, [sp, #20]
   13ec8:	mov	r0, r8
   13ecc:	mov	r1, #1
   13ed0:	b	13f7c <__mempcpy_chk@plt+0x2f6c>
   13ed4:	movw	r1, #22351	; 0x574f
   13ed8:	movt	r1, #1
   13edc:	mov	r0, #0
   13ee0:	mov	r2, #5
   13ee4:	bl	10e30 <dcgettext@plt>
   13ee8:	mov	ip, r0
   13eec:	ldr	r3, [r7]
   13ef0:	ldr	r0, [r7, #4]
   13ef4:	ldr	r1, [r7, #8]
   13ef8:	ldr	r6, [r7, #12]
   13efc:	ldr	r5, [r7, #16]
   13f00:	ldr	r4, [r7, #20]
   13f04:	ldr	r2, [r7, #24]
   13f08:	ldr	lr, [r7, #28]
   13f0c:	ldr	r7, [r7, #32]
   13f10:	stm	sp, {r0, r1, r6}
   13f14:	str	r5, [sp, #12]
   13f18:	str	r4, [sp, #16]
   13f1c:	str	r2, [sp, #20]
   13f20:	str	lr, [sp, #24]
   13f24:	str	r7, [sp, #28]
   13f28:	b	13f70 <__mempcpy_chk@plt+0x2f60>
   13f2c:	movw	r1, #22303	; 0x571f
   13f30:	mov	r0, #0
   13f34:	mov	r2, #5
   13f38:	movt	r1, #1
   13f3c:	bl	10e30 <dcgettext@plt>
   13f40:	mov	ip, r0
   13f44:	ldr	r3, [r7]
   13f48:	ldmib	r7, {r0, r1, r6}
   13f4c:	ldr	r5, [r7, #16]
   13f50:	ldr	r4, [r7, #20]
   13f54:	ldr	r2, [r7, #24]
   13f58:	ldr	r7, [r7, #28]
   13f5c:	stm	sp, {r0, r1, r6}
   13f60:	str	r5, [sp, #12]
   13f64:	str	r4, [sp, #16]
   13f68:	str	r2, [sp, #20]
   13f6c:	str	r7, [sp, #24]
   13f70:	mov	r0, r8
   13f74:	mov	r1, #1
   13f78:	mov	r2, ip
   13f7c:	bl	10f74 <__fprintf_chk@plt>
   13f80:	sub	sp, fp, #24
   13f84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13f88:	push	{r4, sl, fp, lr}
   13f8c:	add	fp, sp, #8
   13f90:	sub	sp, sp, #8
   13f94:	ldr	ip, [fp, #8]
   13f98:	mov	lr, #0
   13f9c:	ldr	r4, [ip, lr, lsl #2]
   13fa0:	add	lr, lr, #1
   13fa4:	cmp	r4, #0
   13fa8:	bne	13f9c <__mempcpy_chk@plt+0x2f8c>
   13fac:	sub	r4, lr, #1
   13fb0:	str	ip, [sp]
   13fb4:	str	r4, [sp, #4]
   13fb8:	bl	13c54 <__mempcpy_chk@plt+0x2c44>
   13fbc:	sub	sp, fp, #8
   13fc0:	pop	{r4, sl, fp, pc}
   13fc4:	push	{fp, lr}
   13fc8:	mov	fp, sp
   13fcc:	sub	sp, sp, #48	; 0x30
   13fd0:	ldr	ip, [fp, #8]
   13fd4:	ldr	lr, [ip]
   13fd8:	cmp	lr, #0
   13fdc:	str	lr, [sp, #8]
   13fe0:	beq	1407c <__mempcpy_chk@plt+0x306c>
   13fe4:	ldr	lr, [ip, #4]
   13fe8:	cmp	lr, #0
   13fec:	str	lr, [sp, #12]
   13ff0:	beq	14084 <__mempcpy_chk@plt+0x3074>
   13ff4:	ldr	lr, [ip, #8]
   13ff8:	cmp	lr, #0
   13ffc:	str	lr, [sp, #16]
   14000:	beq	1408c <__mempcpy_chk@plt+0x307c>
   14004:	ldr	lr, [ip, #12]
   14008:	cmp	lr, #0
   1400c:	str	lr, [sp, #20]
   14010:	beq	14094 <__mempcpy_chk@plt+0x3084>
   14014:	ldr	lr, [ip, #16]
   14018:	cmp	lr, #0
   1401c:	str	lr, [sp, #24]
   14020:	beq	1409c <__mempcpy_chk@plt+0x308c>
   14024:	ldr	lr, [ip, #20]
   14028:	cmp	lr, #0
   1402c:	str	lr, [sp, #28]
   14030:	beq	140a4 <__mempcpy_chk@plt+0x3094>
   14034:	ldr	lr, [ip, #24]
   14038:	cmp	lr, #0
   1403c:	str	lr, [sp, #32]
   14040:	beq	140ac <__mempcpy_chk@plt+0x309c>
   14044:	ldr	lr, [ip, #28]
   14048:	cmp	lr, #0
   1404c:	str	lr, [sp, #36]	; 0x24
   14050:	beq	140b4 <__mempcpy_chk@plt+0x30a4>
   14054:	ldr	lr, [ip, #32]
   14058:	cmp	lr, #0
   1405c:	str	lr, [sp, #40]	; 0x28
   14060:	beq	140bc <__mempcpy_chk@plt+0x30ac>
   14064:	ldr	lr, [ip, #36]	; 0x24
   14068:	mov	ip, #10
   1406c:	cmp	lr, #0
   14070:	str	lr, [sp, #44]	; 0x2c
   14074:	movweq	ip, #9
   14078:	b	140c0 <__mempcpy_chk@plt+0x30b0>
   1407c:	mov	ip, #0
   14080:	b	140c0 <__mempcpy_chk@plt+0x30b0>
   14084:	mov	ip, #1
   14088:	b	140c0 <__mempcpy_chk@plt+0x30b0>
   1408c:	mov	ip, #2
   14090:	b	140c0 <__mempcpy_chk@plt+0x30b0>
   14094:	mov	ip, #3
   14098:	b	140c0 <__mempcpy_chk@plt+0x30b0>
   1409c:	mov	ip, #4
   140a0:	b	140c0 <__mempcpy_chk@plt+0x30b0>
   140a4:	mov	ip, #5
   140a8:	b	140c0 <__mempcpy_chk@plt+0x30b0>
   140ac:	mov	ip, #6
   140b0:	b	140c0 <__mempcpy_chk@plt+0x30b0>
   140b4:	mov	ip, #7
   140b8:	b	140c0 <__mempcpy_chk@plt+0x30b0>
   140bc:	mov	ip, #8
   140c0:	add	lr, sp, #8
   140c4:	str	ip, [sp, #4]
   140c8:	str	lr, [sp]
   140cc:	bl	13c54 <__mempcpy_chk@plt+0x2c44>
   140d0:	mov	sp, fp
   140d4:	pop	{fp, pc}
   140d8:	push	{fp, lr}
   140dc:	mov	fp, sp
   140e0:	sub	sp, sp, #56	; 0x38
   140e4:	add	ip, fp, #8
   140e8:	str	ip, [sp, #12]
   140ec:	ldr	lr, [fp, #8]
   140f0:	cmp	lr, #0
   140f4:	str	lr, [sp, #16]
   140f8:	beq	14194 <__mempcpy_chk@plt+0x3184>
   140fc:	ldr	lr, [ip, #4]
   14100:	cmp	lr, #0
   14104:	str	lr, [sp, #20]
   14108:	beq	1419c <__mempcpy_chk@plt+0x318c>
   1410c:	ldr	lr, [ip, #8]
   14110:	cmp	lr, #0
   14114:	str	lr, [sp, #24]
   14118:	beq	141a4 <__mempcpy_chk@plt+0x3194>
   1411c:	ldr	lr, [ip, #12]
   14120:	cmp	lr, #0
   14124:	str	lr, [sp, #28]
   14128:	beq	141ac <__mempcpy_chk@plt+0x319c>
   1412c:	ldr	lr, [ip, #16]
   14130:	cmp	lr, #0
   14134:	str	lr, [sp, #32]
   14138:	beq	141b4 <__mempcpy_chk@plt+0x31a4>
   1413c:	ldr	lr, [ip, #20]
   14140:	cmp	lr, #0
   14144:	str	lr, [sp, #36]	; 0x24
   14148:	beq	141bc <__mempcpy_chk@plt+0x31ac>
   1414c:	ldr	lr, [ip, #24]
   14150:	cmp	lr, #0
   14154:	str	lr, [sp, #40]	; 0x28
   14158:	beq	141c4 <__mempcpy_chk@plt+0x31b4>
   1415c:	ldr	lr, [ip, #28]
   14160:	cmp	lr, #0
   14164:	str	lr, [sp, #44]	; 0x2c
   14168:	beq	141cc <__mempcpy_chk@plt+0x31bc>
   1416c:	ldr	lr, [ip, #32]
   14170:	cmp	lr, #0
   14174:	str	lr, [sp, #48]	; 0x30
   14178:	beq	141d4 <__mempcpy_chk@plt+0x31c4>
   1417c:	ldr	lr, [ip, #36]	; 0x24
   14180:	mov	ip, #10
   14184:	cmp	lr, #0
   14188:	str	lr, [sp, #52]	; 0x34
   1418c:	movweq	ip, #9
   14190:	b	141d8 <__mempcpy_chk@plt+0x31c8>
   14194:	mov	ip, #0
   14198:	b	141d8 <__mempcpy_chk@plt+0x31c8>
   1419c:	mov	ip, #1
   141a0:	b	141d8 <__mempcpy_chk@plt+0x31c8>
   141a4:	mov	ip, #2
   141a8:	b	141d8 <__mempcpy_chk@plt+0x31c8>
   141ac:	mov	ip, #3
   141b0:	b	141d8 <__mempcpy_chk@plt+0x31c8>
   141b4:	mov	ip, #4
   141b8:	b	141d8 <__mempcpy_chk@plt+0x31c8>
   141bc:	mov	ip, #5
   141c0:	b	141d8 <__mempcpy_chk@plt+0x31c8>
   141c4:	mov	ip, #6
   141c8:	b	141d8 <__mempcpy_chk@plt+0x31c8>
   141cc:	mov	ip, #7
   141d0:	b	141d8 <__mempcpy_chk@plt+0x31c8>
   141d4:	mov	ip, #8
   141d8:	add	lr, sp, #16
   141dc:	str	ip, [sp, #4]
   141e0:	str	lr, [sp]
   141e4:	bl	13c54 <__mempcpy_chk@plt+0x2c44>
   141e8:	mov	sp, fp
   141ec:	pop	{fp, pc}
   141f0:	push	{fp, lr}
   141f4:	mov	fp, sp
   141f8:	movw	r0, #24900	; 0x6144
   141fc:	movt	r0, #2
   14200:	ldr	r1, [r0]
   14204:	movw	r0, #20214	; 0x4ef6
   14208:	movt	r0, #1
   1420c:	bl	10dc4 <fputs_unlocked@plt>
   14210:	movw	r1, #22463	; 0x57bf
   14214:	mov	r0, #0
   14218:	mov	r2, #5
   1421c:	movt	r1, #1
   14220:	bl	10e30 <dcgettext@plt>
   14224:	movw	r2, #22483	; 0x57d3
   14228:	mov	r1, r0
   1422c:	mov	r0, #1
   14230:	movt	r2, #1
   14234:	bl	10f5c <__printf_chk@plt>
   14238:	movw	r1, #22505	; 0x57e9
   1423c:	mov	r0, #0
   14240:	mov	r2, #5
   14244:	movt	r1, #1
   14248:	bl	10e30 <dcgettext@plt>
   1424c:	movw	r2, #20843	; 0x516b
   14250:	movw	r3, #21252	; 0x5304
   14254:	mov	r1, r0
   14258:	mov	r0, #1
   1425c:	movt	r2, #1
   14260:	movt	r3, #1
   14264:	bl	10f5c <__printf_chk@plt>
   14268:	movw	r1, #22525	; 0x57fd
   1426c:	mov	r0, #0
   14270:	mov	r2, #5
   14274:	movt	r1, #1
   14278:	bl	10e30 <dcgettext@plt>
   1427c:	movw	r2, #22564	; 0x5824
   14280:	mov	r1, r0
   14284:	mov	r0, #1
   14288:	movt	r2, #1
   1428c:	pop	{fp, lr}
   14290:	b	10f5c <__printf_chk@plt>
   14294:	push	{r4, r5, r6, sl, fp, lr}
   14298:	add	fp, sp, #16
   1429c:	mov	r4, r2
   142a0:	mov	r5, r1
   142a4:	mov	r6, r0
   142a8:	bl	14ca8 <__mempcpy_chk@plt+0x3c98>
   142ac:	cmp	r0, #0
   142b0:	popne	{r4, r5, r6, sl, fp, pc}
   142b4:	cmp	r6, #0
   142b8:	beq	142cc <__mempcpy_chk@plt+0x32bc>
   142bc:	cmp	r5, #0
   142c0:	cmpne	r4, #0
   142c4:	bne	142cc <__mempcpy_chk@plt+0x32bc>
   142c8:	pop	{r4, r5, r6, sl, fp, pc}
   142cc:	bl	14848 <__mempcpy_chk@plt+0x3838>
   142d0:	push	{r4, r5, r6, sl, fp, lr}
   142d4:	add	fp, sp, #16
   142d8:	mov	r4, r2
   142dc:	mov	r5, r1
   142e0:	mov	r6, r0
   142e4:	bl	14ca8 <__mempcpy_chk@plt+0x3c98>
   142e8:	cmp	r0, #0
   142ec:	popne	{r4, r5, r6, sl, fp, pc}
   142f0:	cmp	r6, #0
   142f4:	beq	14308 <__mempcpy_chk@plt+0x32f8>
   142f8:	cmp	r5, #0
   142fc:	cmpne	r4, #0
   14300:	bne	14308 <__mempcpy_chk@plt+0x32f8>
   14304:	pop	{r4, r5, r6, sl, fp, pc}
   14308:	bl	14848 <__mempcpy_chk@plt+0x3838>
   1430c:	push	{fp, lr}
   14310:	mov	fp, sp
   14314:	bl	148e0 <__mempcpy_chk@plt+0x38d0>
   14318:	cmp	r0, #0
   1431c:	popne	{fp, pc}
   14320:	bl	14848 <__mempcpy_chk@plt+0x3838>
   14324:	push	{fp, lr}
   14328:	mov	fp, sp
   1432c:	bl	148e0 <__mempcpy_chk@plt+0x38d0>
   14330:	cmp	r0, #0
   14334:	popne	{fp, pc}
   14338:	bl	14848 <__mempcpy_chk@plt+0x3838>
   1433c:	push	{fp, lr}
   14340:	mov	fp, sp
   14344:	bl	148e0 <__mempcpy_chk@plt+0x38d0>
   14348:	cmp	r0, #0
   1434c:	popne	{fp, pc}
   14350:	bl	14848 <__mempcpy_chk@plt+0x3838>
   14354:	push	{r4, r5, fp, lr}
   14358:	add	fp, sp, #8
   1435c:	mov	r4, r1
   14360:	mov	r5, r0
   14364:	bl	14910 <__mempcpy_chk@plt+0x3900>
   14368:	cmp	r0, #0
   1436c:	popne	{r4, r5, fp, pc}
   14370:	cmp	r5, #0
   14374:	beq	14384 <__mempcpy_chk@plt+0x3374>
   14378:	cmp	r4, #0
   1437c:	bne	14384 <__mempcpy_chk@plt+0x3374>
   14380:	pop	{r4, r5, fp, pc}
   14384:	bl	14848 <__mempcpy_chk@plt+0x3838>
   14388:	push	{fp, lr}
   1438c:	mov	fp, sp
   14390:	cmp	r1, #0
   14394:	orreq	r1, r1, #1
   14398:	bl	14910 <__mempcpy_chk@plt+0x3900>
   1439c:	cmp	r0, #0
   143a0:	popne	{fp, pc}
   143a4:	bl	14848 <__mempcpy_chk@plt+0x3838>
   143a8:	push	{fp, lr}
   143ac:	mov	fp, sp
   143b0:	clz	r3, r2
   143b4:	lsr	ip, r3, #5
   143b8:	clz	r3, r1
   143bc:	lsr	r3, r3, #5
   143c0:	orrs	r3, r3, ip
   143c4:	movwne	r1, #1
   143c8:	movwne	r2, #1
   143cc:	bl	14ca8 <__mempcpy_chk@plt+0x3c98>
   143d0:	cmp	r0, #0
   143d4:	popne	{fp, pc}
   143d8:	bl	14848 <__mempcpy_chk@plt+0x3838>
   143dc:	push	{fp, lr}
   143e0:	mov	fp, sp
   143e4:	mov	r2, r1
   143e8:	mov	r1, r0
   143ec:	mov	r0, #0
   143f0:	bl	14ca8 <__mempcpy_chk@plt+0x3c98>
   143f4:	cmp	r0, #0
   143f8:	popne	{fp, pc}
   143fc:	bl	14848 <__mempcpy_chk@plt+0x3838>
   14400:	push	{fp, lr}
   14404:	mov	fp, sp
   14408:	mov	r2, r1
   1440c:	mov	r1, r0
   14410:	clz	r0, r2
   14414:	clz	r3, r1
   14418:	lsr	r0, r0, #5
   1441c:	lsr	r3, r3, #5
   14420:	orrs	r0, r3, r0
   14424:	mov	r0, #0
   14428:	movwne	r1, #1
   1442c:	movwne	r2, #1
   14430:	bl	14ca8 <__mempcpy_chk@plt+0x3c98>
   14434:	cmp	r0, #0
   14438:	popne	{fp, pc}
   1443c:	bl	14848 <__mempcpy_chk@plt+0x3838>
   14440:	push	{r4, r5, r6, sl, fp, lr}
   14444:	add	fp, sp, #16
   14448:	ldr	r5, [r1]
   1444c:	mov	r4, r1
   14450:	mov	r6, r0
   14454:	cmp	r0, #0
   14458:	beq	14470 <__mempcpy_chk@plt+0x3460>
   1445c:	mov	r0, #1
   14460:	add	r0, r0, r5, lsr #1
   14464:	adds	r5, r5, r0
   14468:	bcc	14478 <__mempcpy_chk@plt+0x3468>
   1446c:	b	144b4 <__mempcpy_chk@plt+0x34a4>
   14470:	cmp	r5, #0
   14474:	movweq	r5, #64	; 0x40
   14478:	mov	r0, r6
   1447c:	mov	r1, r5
   14480:	mov	r2, #1
   14484:	bl	14ca8 <__mempcpy_chk@plt+0x3c98>
   14488:	cmp	r5, #0
   1448c:	mov	r1, r5
   14490:	movwne	r1, #1
   14494:	cmp	r0, #0
   14498:	bne	144ac <__mempcpy_chk@plt+0x349c>
   1449c:	clz	r2, r6
   144a0:	lsr	r2, r2, #5
   144a4:	orrs	r1, r2, r1
   144a8:	bne	144b4 <__mempcpy_chk@plt+0x34a4>
   144ac:	str	r5, [r4]
   144b0:	pop	{r4, r5, r6, sl, fp, pc}
   144b4:	bl	14848 <__mempcpy_chk@plt+0x3838>
   144b8:	push	{r4, r5, r6, r7, fp, lr}
   144bc:	add	fp, sp, #16
   144c0:	ldr	r5, [r1]
   144c4:	mov	r6, r2
   144c8:	mov	r4, r1
   144cc:	mov	r7, r0
   144d0:	cmp	r0, #0
   144d4:	beq	144ec <__mempcpy_chk@plt+0x34dc>
   144d8:	mov	r0, #1
   144dc:	add	r0, r0, r5, lsr #1
   144e0:	adds	r5, r5, r0
   144e4:	bcc	14504 <__mempcpy_chk@plt+0x34f4>
   144e8:	b	14538 <__mempcpy_chk@plt+0x3528>
   144ec:	cmp	r5, #0
   144f0:	bne	14504 <__mempcpy_chk@plt+0x34f4>
   144f4:	mov	r0, #64	; 0x40
   144f8:	cmp	r6, #64	; 0x40
   144fc:	udiv	r5, r0, r6
   14500:	addhi	r5, r5, #1
   14504:	mov	r0, r7
   14508:	mov	r1, r5
   1450c:	mov	r2, r6
   14510:	bl	14ca8 <__mempcpy_chk@plt+0x3c98>
   14514:	cmp	r0, #0
   14518:	bne	14530 <__mempcpy_chk@plt+0x3520>
   1451c:	cmp	r7, #0
   14520:	beq	14538 <__mempcpy_chk@plt+0x3528>
   14524:	cmp	r6, #0
   14528:	cmpne	r5, #0
   1452c:	bne	14538 <__mempcpy_chk@plt+0x3528>
   14530:	str	r5, [r4]
   14534:	pop	{r4, r5, r6, r7, fp, pc}
   14538:	bl	14848 <__mempcpy_chk@plt+0x3838>
   1453c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14540:	add	fp, sp, #24
   14544:	mov	r8, r1
   14548:	ldr	r1, [r1]
   1454c:	mov	r5, r0
   14550:	add	r0, r1, r1, asr #1
   14554:	cmp	r0, r1
   14558:	mvnvs	r0, #-2147483648	; 0x80000000
   1455c:	cmp	r0, r3
   14560:	mov	r7, r0
   14564:	movgt	r7, r3
   14568:	cmn	r3, #1
   1456c:	movle	r7, r0
   14570:	ldr	r0, [fp, #8]
   14574:	cmn	r0, #1
   14578:	ble	145a0 <__mempcpy_chk@plt+0x3590>
   1457c:	cmp	r0, #0
   14580:	beq	145f4 <__mempcpy_chk@plt+0x35e4>
   14584:	cmn	r7, #1
   14588:	ble	145c8 <__mempcpy_chk@plt+0x35b8>
   1458c:	mvn	r4, #-2147483648	; 0x80000000
   14590:	udiv	r6, r4, r0
   14594:	cmp	r6, r7
   14598:	bge	145f4 <__mempcpy_chk@plt+0x35e4>
   1459c:	b	14604 <__mempcpy_chk@plt+0x35f4>
   145a0:	cmn	r7, #1
   145a4:	ble	145e4 <__mempcpy_chk@plt+0x35d4>
   145a8:	cmn	r0, #1
   145ac:	beq	145f4 <__mempcpy_chk@plt+0x35e4>
   145b0:	mov	r6, #-2147483648	; 0x80000000
   145b4:	mvn	r4, #-2147483648	; 0x80000000
   145b8:	sdiv	r6, r6, r0
   145bc:	cmp	r6, r7
   145c0:	bge	145f4 <__mempcpy_chk@plt+0x35e4>
   145c4:	b	14604 <__mempcpy_chk@plt+0x35f4>
   145c8:	beq	145f4 <__mempcpy_chk@plt+0x35e4>
   145cc:	mov	r6, #-2147483648	; 0x80000000
   145d0:	mvn	r4, #-2147483648	; 0x80000000
   145d4:	sdiv	r6, r6, r7
   145d8:	cmp	r6, r0
   145dc:	bge	145f4 <__mempcpy_chk@plt+0x35e4>
   145e0:	b	14604 <__mempcpy_chk@plt+0x35f4>
   145e4:	mvn	r4, #-2147483648	; 0x80000000
   145e8:	sdiv	r6, r4, r0
   145ec:	cmp	r7, r6
   145f0:	blt	14604 <__mempcpy_chk@plt+0x35f4>
   145f4:	mul	r6, r7, r0
   145f8:	mov	r4, #64	; 0x40
   145fc:	cmp	r6, #63	; 0x3f
   14600:	bgt	1460c <__mempcpy_chk@plt+0x35fc>
   14604:	sdiv	r7, r4, r0
   14608:	mul	r6, r7, r0
   1460c:	cmp	r5, #0
   14610:	moveq	r4, #0
   14614:	streq	r4, [r8]
   14618:	sub	r4, r7, r1
   1461c:	cmp	r4, r2
   14620:	bge	146cc <__mempcpy_chk@plt+0x36bc>
   14624:	add	r7, r1, r2
   14628:	mov	r6, #0
   1462c:	mov	r2, #0
   14630:	cmp	r7, r3
   14634:	movwgt	r6, #1
   14638:	cmn	r3, #1
   1463c:	movwgt	r2, #1
   14640:	cmp	r7, r1
   14644:	bvs	14700 <__mempcpy_chk@plt+0x36f0>
   14648:	ands	r1, r2, r6
   1464c:	bne	14700 <__mempcpy_chk@plt+0x36f0>
   14650:	cmn	r0, #1
   14654:	ble	1467c <__mempcpy_chk@plt+0x366c>
   14658:	cmp	r0, #0
   1465c:	beq	146c8 <__mempcpy_chk@plt+0x36b8>
   14660:	cmn	r7, #1
   14664:	ble	146a0 <__mempcpy_chk@plt+0x3690>
   14668:	mvn	r1, #-2147483648	; 0x80000000
   1466c:	udiv	r1, r1, r0
   14670:	cmp	r1, r7
   14674:	bge	146c8 <__mempcpy_chk@plt+0x36b8>
   14678:	b	14700 <__mempcpy_chk@plt+0x36f0>
   1467c:	cmn	r7, #1
   14680:	ble	146b8 <__mempcpy_chk@plt+0x36a8>
   14684:	cmn	r0, #1
   14688:	beq	146c8 <__mempcpy_chk@plt+0x36b8>
   1468c:	mov	r1, #-2147483648	; 0x80000000
   14690:	sdiv	r1, r1, r0
   14694:	cmp	r1, r7
   14698:	bge	146c8 <__mempcpy_chk@plt+0x36b8>
   1469c:	b	14700 <__mempcpy_chk@plt+0x36f0>
   146a0:	beq	146c8 <__mempcpy_chk@plt+0x36b8>
   146a4:	mov	r1, #-2147483648	; 0x80000000
   146a8:	sdiv	r1, r1, r7
   146ac:	cmp	r1, r0
   146b0:	bge	146c8 <__mempcpy_chk@plt+0x36b8>
   146b4:	b	14700 <__mempcpy_chk@plt+0x36f0>
   146b8:	mvn	r1, #-2147483648	; 0x80000000
   146bc:	sdiv	r1, r1, r0
   146c0:	cmp	r7, r1
   146c4:	blt	14700 <__mempcpy_chk@plt+0x36f0>
   146c8:	mul	r6, r7, r0
   146cc:	mov	r0, r5
   146d0:	mov	r1, r6
   146d4:	bl	14910 <__mempcpy_chk@plt+0x3900>
   146d8:	cmp	r6, #0
   146dc:	movwne	r6, #1
   146e0:	cmp	r0, #0
   146e4:	bne	146f8 <__mempcpy_chk@plt+0x36e8>
   146e8:	clz	r1, r5
   146ec:	lsr	r1, r1, #5
   146f0:	orrs	r1, r1, r6
   146f4:	bne	14700 <__mempcpy_chk@plt+0x36f0>
   146f8:	str	r7, [r8]
   146fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14700:	bl	14848 <__mempcpy_chk@plt+0x3838>
   14704:	push	{fp, lr}
   14708:	mov	fp, sp
   1470c:	mov	r1, #1
   14710:	bl	1488c <__mempcpy_chk@plt+0x387c>
   14714:	cmp	r0, #0
   14718:	popne	{fp, pc}
   1471c:	bl	14848 <__mempcpy_chk@plt+0x3838>
   14720:	push	{fp, lr}
   14724:	mov	fp, sp
   14728:	bl	1488c <__mempcpy_chk@plt+0x387c>
   1472c:	cmp	r0, #0
   14730:	popne	{fp, pc}
   14734:	bl	14848 <__mempcpy_chk@plt+0x3838>
   14738:	push	{fp, lr}
   1473c:	mov	fp, sp
   14740:	mov	r1, #1
   14744:	bl	1488c <__mempcpy_chk@plt+0x387c>
   14748:	cmp	r0, #0
   1474c:	popne	{fp, pc}
   14750:	bl	14848 <__mempcpy_chk@plt+0x3838>
   14754:	push	{fp, lr}
   14758:	mov	fp, sp
   1475c:	bl	1488c <__mempcpy_chk@plt+0x387c>
   14760:	cmp	r0, #0
   14764:	popne	{fp, pc}
   14768:	bl	14848 <__mempcpy_chk@plt+0x3838>
   1476c:	push	{r4, r5, fp, lr}
   14770:	add	fp, sp, #8
   14774:	mov	r5, r0
   14778:	mov	r0, r1
   1477c:	mov	r4, r1
   14780:	bl	148e0 <__mempcpy_chk@plt+0x38d0>
   14784:	cmp	r0, #0
   14788:	beq	1479c <__mempcpy_chk@plt+0x378c>
   1478c:	mov	r1, r5
   14790:	mov	r2, r4
   14794:	pop	{r4, r5, fp, lr}
   14798:	b	10e00 <memcpy@plt>
   1479c:	bl	14848 <__mempcpy_chk@plt+0x3838>
   147a0:	push	{r4, r5, fp, lr}
   147a4:	add	fp, sp, #8
   147a8:	mov	r5, r0
   147ac:	mov	r0, r1
   147b0:	mov	r4, r1
   147b4:	bl	148e0 <__mempcpy_chk@plt+0x38d0>
   147b8:	cmp	r0, #0
   147bc:	beq	147d0 <__mempcpy_chk@plt+0x37c0>
   147c0:	mov	r1, r5
   147c4:	mov	r2, r4
   147c8:	pop	{r4, r5, fp, lr}
   147cc:	b	10e00 <memcpy@plt>
   147d0:	bl	14848 <__mempcpy_chk@plt+0x3838>
   147d4:	push	{r4, r5, fp, lr}
   147d8:	add	fp, sp, #8
   147dc:	mov	r5, r0
   147e0:	add	r0, r1, #1
   147e4:	mov	r4, r1
   147e8:	bl	148e0 <__mempcpy_chk@plt+0x38d0>
   147ec:	cmp	r0, #0
   147f0:	beq	1480c <__mempcpy_chk@plt+0x37fc>
   147f4:	mov	r1, #0
   147f8:	mov	r2, r4
   147fc:	strb	r1, [r0, r4]
   14800:	mov	r1, r5
   14804:	pop	{r4, r5, fp, lr}
   14808:	b	10e00 <memcpy@plt>
   1480c:	bl	14848 <__mempcpy_chk@plt+0x3838>
   14810:	push	{r4, r5, fp, lr}
   14814:	add	fp, sp, #8
   14818:	mov	r4, r0
   1481c:	bl	10f2c <strlen@plt>
   14820:	add	r5, r0, #1
   14824:	mov	r0, r5
   14828:	bl	148e0 <__mempcpy_chk@plt+0x38d0>
   1482c:	cmp	r0, #0
   14830:	beq	14844 <__mempcpy_chk@plt+0x3834>
   14834:	mov	r1, r4
   14838:	mov	r2, r5
   1483c:	pop	{r4, r5, fp, lr}
   14840:	b	10e00 <memcpy@plt>
   14844:	bl	14848 <__mempcpy_chk@plt+0x3838>
   14848:	push	{fp, lr}
   1484c:	mov	fp, sp
   14850:	movw	r0, #24812	; 0x60ec
   14854:	movw	r1, #22640	; 0x5870
   14858:	mov	r2, #5
   1485c:	movt	r0, #2
   14860:	movt	r1, #1
   14864:	ldr	r4, [r0]
   14868:	mov	r0, #0
   1486c:	bl	10e30 <dcgettext@plt>
   14870:	movw	r2, #21535	; 0x541f
   14874:	mov	r3, r0
   14878:	mov	r0, r4
   1487c:	mov	r1, #0
   14880:	movt	r2, #1
   14884:	bl	10ea8 <error@plt>
   14888:	bl	10ff8 <abort@plt>
   1488c:	clz	r2, r1
   14890:	clz	r3, r0
   14894:	lsr	r2, r2, #5
   14898:	lsr	r3, r3, #5
   1489c:	orrs	r2, r3, r2
   148a0:	movwne	r1, #1
   148a4:	movwne	r0, #1
   148a8:	cmp	r1, #0
   148ac:	beq	148dc <__mempcpy_chk@plt+0x38cc>
   148b0:	mvn	r2, #-2147483648	; 0x80000000
   148b4:	udiv	r2, r2, r1
   148b8:	cmp	r2, r0
   148bc:	bcs	148dc <__mempcpy_chk@plt+0x38cc>
   148c0:	push	{fp, lr}
   148c4:	mov	fp, sp
   148c8:	bl	10f38 <__errno_location@plt>
   148cc:	mov	r1, #12
   148d0:	str	r1, [r0]
   148d4:	mov	r0, #0
   148d8:	pop	{fp, pc}
   148dc:	b	10db8 <calloc@plt>
   148e0:	cmp	r0, #0
   148e4:	movweq	r0, #1
   148e8:	cmn	r0, #1
   148ec:	ble	148f4 <__mempcpy_chk@plt+0x38e4>
   148f0:	b	10ecc <malloc@plt>
   148f4:	push	{fp, lr}
   148f8:	mov	fp, sp
   148fc:	bl	10f38 <__errno_location@plt>
   14900:	mov	r1, #12
   14904:	str	r1, [r0]
   14908:	mov	r0, #0
   1490c:	pop	{fp, pc}
   14910:	push	{fp, lr}
   14914:	mov	fp, sp
   14918:	cmp	r0, #0
   1491c:	beq	14938 <__mempcpy_chk@plt+0x3928>
   14920:	cmp	r1, #0
   14924:	beq	14944 <__mempcpy_chk@plt+0x3934>
   14928:	cmn	r1, #1
   1492c:	ble	14950 <__mempcpy_chk@plt+0x3940>
   14930:	pop	{fp, lr}
   14934:	b	10e48 <realloc@plt>
   14938:	mov	r0, r1
   1493c:	pop	{fp, lr}
   14940:	b	148e0 <__mempcpy_chk@plt+0x38d0>
   14944:	bl	11d18 <__mempcpy_chk@plt+0xd08>
   14948:	mov	r0, #0
   1494c:	pop	{fp, pc}
   14950:	bl	10f38 <__errno_location@plt>
   14954:	mov	r1, #12
   14958:	str	r1, [r0]
   1495c:	mov	r0, #0
   14960:	pop	{fp, pc}
   14964:	sub	r0, r0, #1
   14968:	ldrb	r3, [r0, #1]!
   1496c:	cmp	r3, #47	; 0x2f
   14970:	beq	14968 <__mempcpy_chk@plt+0x3958>
   14974:	mov	r2, #0
   14978:	mov	r1, r0
   1497c:	b	14988 <__mempcpy_chk@plt+0x3978>
   14980:	ldrb	r3, [r1, #1]!
   14984:	mov	r2, #1
   14988:	uxtb	r3, r3
   1498c:	cmp	r3, #47	; 0x2f
   14990:	beq	14980 <__mempcpy_chk@plt+0x3970>
   14994:	cmp	r3, #0
   14998:	bxeq	lr
   1499c:	tst	r2, #1
   149a0:	mov	r2, #0
   149a4:	movne	r0, r1
   149a8:	ldrb	r3, [r1, #1]!
   149ac:	b	14988 <__mempcpy_chk@plt+0x3978>
   149b0:	push	{r4, sl, fp, lr}
   149b4:	add	fp, sp, #8
   149b8:	mov	r4, r0
   149bc:	bl	10f2c <strlen@plt>
   149c0:	mov	r1, r0
   149c4:	sub	r2, r4, #1
   149c8:	mov	r0, r1
   149cc:	cmp	r1, #2
   149d0:	bcc	149e4 <__mempcpy_chk@plt+0x39d4>
   149d4:	ldrb	r3, [r2, r0]
   149d8:	sub	r1, r0, #1
   149dc:	cmp	r3, #47	; 0x2f
   149e0:	beq	149c8 <__mempcpy_chk@plt+0x39b8>
   149e4:	pop	{r4, sl, fp, pc}
   149e8:	push	{r4, r5, r6, sl, fp, lr}
   149ec:	add	fp, sp, #16
   149f0:	mov	r4, r0
   149f4:	bl	10e90 <__fpending@plt>
   149f8:	ldr	r6, [r4]
   149fc:	mov	r5, r0
   14a00:	mov	r0, r4
   14a04:	bl	14a6c <__mempcpy_chk@plt+0x3a5c>
   14a08:	tst	r6, #32
   14a0c:	bne	14a44 <__mempcpy_chk@plt+0x3a34>
   14a10:	cmp	r0, #0
   14a14:	mov	r4, r0
   14a18:	mvnne	r4, #0
   14a1c:	cmp	r5, #0
   14a20:	bne	14a50 <__mempcpy_chk@plt+0x3a40>
   14a24:	cmp	r0, #0
   14a28:	beq	14a50 <__mempcpy_chk@plt+0x3a40>
   14a2c:	bl	10f38 <__errno_location@plt>
   14a30:	ldr	r0, [r0]
   14a34:	subs	r4, r0, #9
   14a38:	mvnne	r4, #0
   14a3c:	mov	r0, r4
   14a40:	pop	{r4, r5, r6, sl, fp, pc}
   14a44:	mvn	r4, #0
   14a48:	cmp	r0, #0
   14a4c:	beq	14a58 <__mempcpy_chk@plt+0x3a48>
   14a50:	mov	r0, r4
   14a54:	pop	{r4, r5, r6, sl, fp, pc}
   14a58:	bl	10f38 <__errno_location@plt>
   14a5c:	mov	r1, #0
   14a60:	str	r1, [r0]
   14a64:	mov	r0, r4
   14a68:	pop	{r4, r5, r6, sl, fp, pc}
   14a6c:	push	{r4, r5, r6, sl, fp, lr}
   14a70:	add	fp, sp, #16
   14a74:	sub	sp, sp, #8
   14a78:	mov	r4, r0
   14a7c:	bl	10f68 <fileno@plt>
   14a80:	cmn	r0, #1
   14a84:	ble	14af8 <__mempcpy_chk@plt+0x3ae8>
   14a88:	mov	r0, r4
   14a8c:	bl	10ee4 <__freading@plt>
   14a90:	cmp	r0, #0
   14a94:	beq	14ac0 <__mempcpy_chk@plt+0x3ab0>
   14a98:	mov	r0, r4
   14a9c:	bl	10f68 <fileno@plt>
   14aa0:	mov	r1, #1
   14aa4:	mov	r2, #0
   14aa8:	mov	r3, #0
   14aac:	str	r1, [sp]
   14ab0:	bl	10e78 <lseek64@plt>
   14ab4:	and	r0, r0, r1
   14ab8:	cmn	r0, #1
   14abc:	beq	14af8 <__mempcpy_chk@plt+0x3ae8>
   14ac0:	mov	r0, r4
   14ac4:	bl	14b08 <__mempcpy_chk@plt+0x3af8>
   14ac8:	cmp	r0, #0
   14acc:	beq	14af8 <__mempcpy_chk@plt+0x3ae8>
   14ad0:	bl	10f38 <__errno_location@plt>
   14ad4:	ldr	r6, [r0]
   14ad8:	mov	r5, r0
   14adc:	mov	r0, r4
   14ae0:	bl	10f80 <fclose@plt>
   14ae4:	cmp	r6, #0
   14ae8:	strne	r6, [r5]
   14aec:	mvnne	r0, #0
   14af0:	sub	sp, fp, #16
   14af4:	pop	{r4, r5, r6, sl, fp, pc}
   14af8:	mov	r0, r4
   14afc:	sub	sp, fp, #16
   14b00:	pop	{r4, r5, r6, sl, fp, lr}
   14b04:	b	10f80 <fclose@plt>
   14b08:	push	{r4, sl, fp, lr}
   14b0c:	add	fp, sp, #8
   14b10:	sub	sp, sp, #8
   14b14:	mov	r4, r0
   14b18:	cmp	r0, #0
   14b1c:	beq	14b54 <__mempcpy_chk@plt+0x3b44>
   14b20:	mov	r0, r4
   14b24:	bl	10ee4 <__freading@plt>
   14b28:	cmp	r0, #0
   14b2c:	beq	14b54 <__mempcpy_chk@plt+0x3b44>
   14b30:	ldrb	r0, [r4, #1]
   14b34:	tst	r0, #1
   14b38:	beq	14b54 <__mempcpy_chk@plt+0x3b44>
   14b3c:	mov	r0, #1
   14b40:	mov	r2, #0
   14b44:	mov	r3, #0
   14b48:	str	r0, [sp]
   14b4c:	mov	r0, r4
   14b50:	bl	14b64 <__mempcpy_chk@plt+0x3b54>
   14b54:	mov	r0, r4
   14b58:	sub	sp, fp, #8
   14b5c:	pop	{r4, sl, fp, lr}
   14b60:	b	10ddc <fflush@plt>
   14b64:	push	{r4, r5, r6, r7, fp, lr}
   14b68:	add	fp, sp, #16
   14b6c:	sub	sp, sp, #8
   14b70:	mov	r4, r0
   14b74:	ldr	r0, [r0, #4]
   14b78:	mov	r5, r3
   14b7c:	mov	r6, r2
   14b80:	ldr	r1, [r4, #8]
   14b84:	cmp	r1, r0
   14b88:	bne	14ba4 <__mempcpy_chk@plt+0x3b94>
   14b8c:	ldrd	r0, [r4, #16]
   14b90:	cmp	r1, r0
   14b94:	bne	14ba4 <__mempcpy_chk@plt+0x3b94>
   14b98:	ldr	r0, [r4, #36]	; 0x24
   14b9c:	cmp	r0, #0
   14ba0:	beq	14bbc <__mempcpy_chk@plt+0x3bac>
   14ba4:	mov	r0, r4
   14ba8:	mov	r2, r6
   14bac:	mov	r3, r5
   14bb0:	sub	sp, fp, #16
   14bb4:	pop	{r4, r5, r6, r7, fp, lr}
   14bb8:	b	10f8c <fseeko64@plt>
   14bbc:	ldr	r7, [fp, #8]
   14bc0:	mov	r0, r4
   14bc4:	bl	10f68 <fileno@plt>
   14bc8:	mov	r2, r6
   14bcc:	mov	r3, r5
   14bd0:	str	r7, [sp]
   14bd4:	bl	10e78 <lseek64@plt>
   14bd8:	and	r2, r0, r1
   14bdc:	cmn	r2, #1
   14be0:	beq	14c00 <__mempcpy_chk@plt+0x3bf0>
   14be4:	strd	r0, [r4, #80]	; 0x50
   14be8:	ldr	r0, [r4]
   14bec:	bic	r0, r0, #16
   14bf0:	str	r0, [r4]
   14bf4:	mov	r0, #0
   14bf8:	sub	sp, fp, #16
   14bfc:	pop	{r4, r5, r6, r7, fp, pc}
   14c00:	mvn	r0, #0
   14c04:	sub	sp, fp, #16
   14c08:	pop	{r4, r5, r6, r7, fp, pc}
   14c0c:	push	{fp, lr}
   14c10:	mov	fp, sp
   14c14:	mov	r0, #14
   14c18:	bl	10fbc <nl_langinfo@plt>
   14c1c:	movw	r1, #20215	; 0x4ef7
   14c20:	cmp	r0, #0
   14c24:	movt	r1, #1
   14c28:	movne	r1, r0
   14c2c:	movw	r0, #22657	; 0x5881
   14c30:	ldrb	r2, [r1]
   14c34:	movt	r0, #1
   14c38:	cmp	r2, #0
   14c3c:	movne	r0, r1
   14c40:	pop	{fp, pc}
   14c44:	push	{r4, r5, r6, r7, fp, lr}
   14c48:	add	fp, sp, #16
   14c4c:	sub	sp, sp, #8
   14c50:	cmp	r0, #0
   14c54:	add	r5, sp, #4
   14c58:	mov	r7, r2
   14c5c:	mov	r4, r1
   14c60:	movne	r5, r0
   14c64:	mov	r0, r5
   14c68:	bl	10e9c <mbrtowc@plt>
   14c6c:	mov	r6, r0
   14c70:	cmp	r7, #0
   14c74:	beq	14c9c <__mempcpy_chk@plt+0x3c8c>
   14c78:	cmn	r6, #2
   14c7c:	bcc	14c9c <__mempcpy_chk@plt+0x3c8c>
   14c80:	mov	r0, #0
   14c84:	bl	14ce4 <__mempcpy_chk@plt+0x3cd4>
   14c88:	cmp	r0, #0
   14c8c:	bne	14c9c <__mempcpy_chk@plt+0x3c8c>
   14c90:	ldrb	r0, [r4]
   14c94:	mov	r6, #1
   14c98:	str	r0, [r5]
   14c9c:	mov	r0, r6
   14ca0:	sub	sp, fp, #16
   14ca4:	pop	{r4, r5, r6, r7, fp, pc}
   14ca8:	cmp	r2, #0
   14cac:	beq	14cdc <__mempcpy_chk@plt+0x3ccc>
   14cb0:	mvn	r3, #0
   14cb4:	udiv	r3, r3, r2
   14cb8:	cmp	r3, r1
   14cbc:	bcs	14cdc <__mempcpy_chk@plt+0x3ccc>
   14cc0:	push	{fp, lr}
   14cc4:	mov	fp, sp
   14cc8:	bl	10f38 <__errno_location@plt>
   14ccc:	mov	r1, #12
   14cd0:	str	r1, [r0]
   14cd4:	mov	r0, #0
   14cd8:	pop	{fp, pc}
   14cdc:	mul	r1, r2, r1
   14ce0:	b	14910 <__mempcpy_chk@plt+0x3900>
   14ce4:	push	{r4, sl, fp, lr}
   14ce8:	add	fp, sp, #8
   14cec:	sub	sp, sp, #264	; 0x108
   14cf0:	add	r1, sp, #7
   14cf4:	movw	r2, #257	; 0x101
   14cf8:	bl	14d50 <__mempcpy_chk@plt+0x3d40>
   14cfc:	mov	r4, #0
   14d00:	cmp	r0, #0
   14d04:	bne	14d44 <__mempcpy_chk@plt+0x3d34>
   14d08:	movw	r1, #22663	; 0x5887
   14d0c:	add	r0, sp, #7
   14d10:	mov	r2, #2
   14d14:	movt	r1, #1
   14d18:	bl	10f20 <bcmp@plt>
   14d1c:	cmp	r0, #0
   14d20:	beq	14d44 <__mempcpy_chk@plt+0x3d34>
   14d24:	movw	r1, #22665	; 0x5889
   14d28:	add	r0, sp, #7
   14d2c:	mov	r2, #6
   14d30:	movt	r1, #1
   14d34:	bl	10f20 <bcmp@plt>
   14d38:	cmp	r0, #0
   14d3c:	mov	r4, r0
   14d40:	movwne	r4, #1
   14d44:	mov	r0, r4
   14d48:	sub	sp, fp, #8
   14d4c:	pop	{r4, sl, fp, pc}
   14d50:	push	{r4, r5, r6, r7, fp, lr}
   14d54:	add	fp, sp, #16
   14d58:	mov	r4, r1
   14d5c:	mov	r1, #0
   14d60:	mov	r6, r2
   14d64:	bl	10fa4 <setlocale@plt>
   14d68:	cmp	r0, #0
   14d6c:	beq	14d9c <__mempcpy_chk@plt+0x3d8c>
   14d70:	mov	r7, r0
   14d74:	bl	10f2c <strlen@plt>
   14d78:	cmp	r0, r6
   14d7c:	bcs	14db8 <__mempcpy_chk@plt+0x3da8>
   14d80:	add	r2, r0, #1
   14d84:	mov	r0, r4
   14d88:	mov	r1, r7
   14d8c:	bl	10e00 <memcpy@plt>
   14d90:	mov	r5, #0
   14d94:	mov	r0, r5
   14d98:	pop	{r4, r5, r6, r7, fp, pc}
   14d9c:	mov	r5, #22
   14da0:	cmp	r6, #0
   14da4:	beq	14de0 <__mempcpy_chk@plt+0x3dd0>
   14da8:	mov	r0, #0
   14dac:	strb	r0, [r4]
   14db0:	mov	r0, r5
   14db4:	pop	{r4, r5, r6, r7, fp, pc}
   14db8:	mov	r5, #34	; 0x22
   14dbc:	cmp	r6, #0
   14dc0:	beq	14de0 <__mempcpy_chk@plt+0x3dd0>
   14dc4:	sub	r6, r6, #1
   14dc8:	mov	r0, r4
   14dcc:	mov	r1, r7
   14dd0:	mov	r2, r6
   14dd4:	bl	10e00 <memcpy@plt>
   14dd8:	mov	r0, #0
   14ddc:	strb	r0, [r4, r6]
   14de0:	mov	r0, r5
   14de4:	pop	{r4, r5, r6, r7, fp, pc}
   14de8:	mov	r1, #0
   14dec:	b	10fa4 <setlocale@plt>
   14df0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14df4:	mov	r7, r0
   14df8:	ldr	r6, [pc, #72]	; 14e48 <__mempcpy_chk@plt+0x3e38>
   14dfc:	ldr	r5, [pc, #72]	; 14e4c <__mempcpy_chk@plt+0x3e3c>
   14e00:	add	r6, pc, r6
   14e04:	add	r5, pc, r5
   14e08:	sub	r6, r6, r5
   14e0c:	mov	r8, r1
   14e10:	mov	r9, r2
   14e14:	bl	10d98 <calloc@plt-0x20>
   14e18:	asrs	r6, r6, #2
   14e1c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e20:	mov	r4, #0
   14e24:	add	r4, r4, #1
   14e28:	ldr	r3, [r5], #4
   14e2c:	mov	r2, r9
   14e30:	mov	r1, r8
   14e34:	mov	r0, r7
   14e38:	blx	r3
   14e3c:	cmp	r6, r4
   14e40:	bne	14e24 <__mempcpy_chk@plt+0x3e14>
   14e44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e48:	andeq	r1, r1, r4, lsl #2
   14e4c:	strdeq	r1, [r1], -ip
   14e50:	bx	lr
   14e54:	ldr	r3, [pc, #12]	; 14e68 <__mempcpy_chk@plt+0x3e58>
   14e58:	mov	r1, #0
   14e5c:	add	r3, pc, r3
   14e60:	ldr	r2, [r3]
   14e64:	b	10f44 <__cxa_atexit@plt>
   14e68:	andeq	r1, r1, r0, lsl #5

Disassembly of section .fini:

00014e6c <.fini>:
   14e6c:	push	{r3, lr}
   14e70:	pop	{r3, pc}
