
../repos/coreutils/src/printf:     file format elf32-littlearm


Disassembly of section .init:

00010dac <.init>:
   10dac:	push	{r3, lr}
   10db0:	bl	11084 <__mempcpy_chk@plt+0x48>
   10db4:	pop	{r3, pc}

Disassembly of section .plt:

00010db8 <calloc@plt-0x14>:
   10db8:	push	{lr}		; (str lr, [sp, #-4]!)
   10dbc:	ldr	lr, [pc, #4]	; 10dc8 <calloc@plt-0x4>
   10dc0:	add	lr, pc, lr
   10dc4:	ldr	pc, [lr, #8]!
   10dc8:	andeq	r6, r1, r8, lsr r2

00010dcc <calloc@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #90112	; 0x16000
   10dd4:	ldr	pc, [ip, #568]!	; 0x238

00010dd8 <fputs_unlocked@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #90112	; 0x16000
   10de0:	ldr	pc, [ip, #560]!	; 0x230

00010de4 <uselocale@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #90112	; 0x16000
   10dec:	ldr	pc, [ip, #552]!	; 0x228

00010df0 <iconv@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #90112	; 0x16000
   10df8:	ldr	pc, [ip, #544]!	; 0x220

00010dfc <strcmp@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #90112	; 0x16000
   10e04:	ldr	pc, [ip, #536]!	; 0x218

00010e08 <fflush@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #90112	; 0x16000
   10e10:	ldr	pc, [ip, #528]!	; 0x210

00010e14 <free@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #90112	; 0x16000
   10e1c:	ldr	pc, [ip, #520]!	; 0x208

00010e20 <ferror@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #90112	; 0x16000
   10e28:	ldr	pc, [ip, #512]!	; 0x200

00010e2c <_exit@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #90112	; 0x16000
   10e34:	ldr	pc, [ip, #504]!	; 0x1f8

00010e38 <memcpy@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #90112	; 0x16000
   10e40:	ldr	pc, [ip, #496]!	; 0x1f0

00010e44 <__strtoull_internal@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #90112	; 0x16000
   10e4c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e50 <mbsinit@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #90112	; 0x16000
   10e58:	ldr	pc, [ip, #480]!	; 0x1e0

00010e5c <strtold@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #90112	; 0x16000
   10e64:	ldr	pc, [ip, #472]!	; 0x1d8

00010e68 <dcgettext@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #90112	; 0x16000
   10e70:	ldr	pc, [ip, #464]!	; 0x1d0

00010e74 <realloc@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #90112	; 0x16000
   10e7c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e80 <textdomain@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #90112	; 0x16000
   10e88:	ldr	pc, [ip, #448]!	; 0x1c0

00010e8c <iswprint@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #90112	; 0x16000
   10e94:	ldr	pc, [ip, #440]!	; 0x1b8

00010e98 <fwrite@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #90112	; 0x16000
   10ea0:	ldr	pc, [ip, #432]!	; 0x1b0

00010ea4 <lseek64@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #90112	; 0x16000
   10eac:	ldr	pc, [ip, #424]!	; 0x1a8

00010eb0 <__ctype_get_mb_cur_max@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #90112	; 0x16000
   10eb8:	ldr	pc, [ip, #416]!	; 0x1a0

00010ebc <__fpending@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #90112	; 0x16000
   10ec4:	ldr	pc, [ip, #408]!	; 0x198

00010ec8 <mbrtowc@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #90112	; 0x16000
   10ed0:	ldr	pc, [ip, #400]!	; 0x190

00010ed4 <error@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #90112	; 0x16000
   10edc:	ldr	pc, [ip, #392]!	; 0x188

00010ee0 <getenv@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #90112	; 0x16000
   10ee8:	ldr	pc, [ip, #384]!	; 0x180

00010eec <malloc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #90112	; 0x16000
   10ef4:	ldr	pc, [ip, #376]!	; 0x178

00010ef8 <iconv_open@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #90112	; 0x16000
   10f00:	ldr	pc, [ip, #368]!	; 0x170

00010f04 <__libc_start_main@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #90112	; 0x16000
   10f0c:	ldr	pc, [ip, #360]!	; 0x168

00010f10 <__vfprintf_chk@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #90112	; 0x16000
   10f18:	ldr	pc, [ip, #352]!	; 0x160

00010f1c <__freading@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #90112	; 0x16000
   10f24:	ldr	pc, [ip, #344]!	; 0x158

00010f28 <__gmon_start__@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #90112	; 0x16000
   10f30:	ldr	pc, [ip, #336]!	; 0x150

00010f34 <__ctype_b_loc@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #90112	; 0x16000
   10f3c:	ldr	pc, [ip, #328]!	; 0x148

00010f40 <exit@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #90112	; 0x16000
   10f48:	ldr	pc, [ip, #320]!	; 0x140

00010f4c <bcmp@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #90112	; 0x16000
   10f54:	ldr	pc, [ip, #312]!	; 0x138

00010f58 <strlen@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #90112	; 0x16000
   10f60:	ldr	pc, [ip, #304]!	; 0x130

00010f64 <__errno_location@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #90112	; 0x16000
   10f6c:	ldr	pc, [ip, #296]!	; 0x128

00010f70 <__cxa_atexit@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #90112	; 0x16000
   10f78:	ldr	pc, [ip, #288]!	; 0x120

00010f7c <memset@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #90112	; 0x16000
   10f84:	ldr	pc, [ip, #280]!	; 0x118

00010f88 <__printf_chk@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #90112	; 0x16000
   10f90:	ldr	pc, [ip, #272]!	; 0x110

00010f94 <fileno@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #90112	; 0x16000
   10f9c:	ldr	pc, [ip, #264]!	; 0x108

00010fa0 <__fprintf_chk@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #90112	; 0x16000
   10fa8:	ldr	pc, [ip, #256]!	; 0x100

00010fac <memchr@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #90112	; 0x16000
   10fb4:	ldr	pc, [ip, #248]!	; 0xf8

00010fb8 <fclose@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #90112	; 0x16000
   10fc0:	ldr	pc, [ip, #240]!	; 0xf0

00010fc4 <fseeko64@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #90112	; 0x16000
   10fcc:	ldr	pc, [ip, #232]!	; 0xe8

00010fd0 <__overflow@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #90112	; 0x16000
   10fd8:	ldr	pc, [ip, #224]!	; 0xe0

00010fdc <setlocale@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #90112	; 0x16000
   10fe4:	ldr	pc, [ip, #216]!	; 0xd8

00010fe8 <strrchr@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #90112	; 0x16000
   10ff0:	ldr	pc, [ip, #208]!	; 0xd0

00010ff4 <nl_langinfo@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #90112	; 0x16000
   10ffc:	ldr	pc, [ip, #200]!	; 0xc8

00011000 <newlocale@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #90112	; 0x16000
   11008:	ldr	pc, [ip, #192]!	; 0xc0

0001100c <__strtoll_internal@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #90112	; 0x16000
   11014:	ldr	pc, [ip, #184]!	; 0xb8

00011018 <bindtextdomain@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #90112	; 0x16000
   11020:	ldr	pc, [ip, #176]!	; 0xb0

00011024 <strncmp@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #90112	; 0x16000
   1102c:	ldr	pc, [ip, #168]!	; 0xa8

00011030 <abort@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #90112	; 0x16000
   11038:	ldr	pc, [ip, #160]!	; 0xa0

0001103c <__mempcpy_chk@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #90112	; 0x16000
   11044:	ldr	pc, [ip, #152]!	; 0x98

Disassembly of section .text:

00011048 <.text>:
   11048:	mov	fp, #0
   1104c:	mov	lr, #0
   11050:	pop	{r1}		; (ldr r1, [sp], #4)
   11054:	mov	r2, sp
   11058:	push	{r2}		; (str r2, [sp, #-4]!)
   1105c:	push	{r0}		; (str r0, [sp, #-4]!)
   11060:	ldr	ip, [pc, #16]	; 11078 <__mempcpy_chk@plt+0x3c>
   11064:	push	{ip}		; (str ip, [sp, #-4]!)
   11068:	ldr	r0, [pc, #12]	; 1107c <__mempcpy_chk@plt+0x40>
   1106c:	ldr	r3, [pc, #12]	; 11080 <__mempcpy_chk@plt+0x44>
   11070:	bl	10f04 <__libc_start_main@plt>
   11074:	bl	11030 <abort@plt>
   11078:	andeq	r6, r1, ip, asr r0
   1107c:	andeq	r1, r1, r4, lsl r4
   11080:	strdeq	r5, [r1], -ip
   11084:	ldr	r3, [pc, #20]	; 110a0 <__mempcpy_chk@plt+0x64>
   11088:	ldr	r2, [pc, #20]	; 110a4 <__mempcpy_chk@plt+0x68>
   1108c:	add	r3, pc, r3
   11090:	ldr	r2, [r3, r2]
   11094:	cmp	r2, #0
   11098:	bxeq	lr
   1109c:	b	10f28 <__gmon_start__@plt>
   110a0:	andeq	r5, r1, ip, ror #30
   110a4:	andeq	r0, r0, r0, ror #1
   110a8:	ldr	r0, [pc, #24]	; 110c8 <__mempcpy_chk@plt+0x8c>
   110ac:	ldr	r3, [pc, #24]	; 110cc <__mempcpy_chk@plt+0x90>
   110b0:	cmp	r3, r0
   110b4:	bxeq	lr
   110b8:	ldr	r3, [pc, #16]	; 110d0 <__mempcpy_chk@plt+0x94>
   110bc:	cmp	r3, #0
   110c0:	bxeq	lr
   110c4:	bx	r3
   110c8:	andeq	r7, r2, r8, lsr r1
   110cc:	andeq	r7, r2, r8, lsr r1
   110d0:	andeq	r0, r0, r0
   110d4:	ldr	r0, [pc, #36]	; 11100 <__mempcpy_chk@plt+0xc4>
   110d8:	ldr	r1, [pc, #36]	; 11104 <__mempcpy_chk@plt+0xc8>
   110dc:	sub	r1, r1, r0
   110e0:	asr	r1, r1, #2
   110e4:	add	r1, r1, r1, lsr #31
   110e8:	asrs	r1, r1, #1
   110ec:	bxeq	lr
   110f0:	ldr	r3, [pc, #16]	; 11108 <__mempcpy_chk@plt+0xcc>
   110f4:	cmp	r3, #0
   110f8:	bxeq	lr
   110fc:	bx	r3
   11100:	andeq	r7, r2, r8, lsr r1
   11104:	andeq	r7, r2, r8, lsr r1
   11108:	andeq	r0, r0, r0
   1110c:	push	{r4, lr}
   11110:	ldr	r4, [pc, #24]	; 11130 <__mempcpy_chk@plt+0xf4>
   11114:	ldrb	r3, [r4]
   11118:	cmp	r3, #0
   1111c:	popne	{r4, pc}
   11120:	bl	110a8 <__mempcpy_chk@plt+0x6c>
   11124:	mov	r3, #1
   11128:	strb	r3, [r4]
   1112c:	pop	{r4, pc}
   11130:	andeq	r7, r2, r8, asr #2
   11134:	b	110d4 <__mempcpy_chk@plt+0x98>
   11138:	push	{fp, lr}
   1113c:	mov	fp, sp
   11140:	sub	sp, sp, #56	; 0x38
   11144:	mov	r4, r0
   11148:	cmp	r0, #0
   1114c:	bne	113d0 <__mempcpy_chk@plt+0x394>
   11150:	movw	r1, #24747	; 0x60ab
   11154:	mov	r0, #0
   11158:	mov	r2, #5
   1115c:	movt	r1, #1
   11160:	bl	10e68 <dcgettext@plt>
   11164:	mov	r1, r0
   11168:	movw	r0, #29016	; 0x7158
   1116c:	movt	r0, #2
   11170:	ldr	r2, [r0]
   11174:	mov	r0, #1
   11178:	mov	r3, r2
   1117c:	bl	10f88 <__printf_chk@plt>
   11180:	movw	r1, #24796	; 0x60dc
   11184:	mov	r0, #0
   11188:	mov	r2, #5
   1118c:	movt	r1, #1
   11190:	bl	10e68 <dcgettext@plt>
   11194:	movw	r7, #28996	; 0x7144
   11198:	movt	r7, #2
   1119c:	ldr	r1, [r7]
   111a0:	bl	10dd8 <fputs_unlocked@plt>
   111a4:	movw	r1, #24869	; 0x6125
   111a8:	mov	r0, #0
   111ac:	mov	r2, #5
   111b0:	movt	r1, #1
   111b4:	bl	10e68 <dcgettext@plt>
   111b8:	ldr	r1, [r7]
   111bc:	bl	10dd8 <fputs_unlocked@plt>
   111c0:	movw	r1, #24914	; 0x6152
   111c4:	mov	r0, #0
   111c8:	mov	r2, #5
   111cc:	movt	r1, #1
   111d0:	bl	10e68 <dcgettext@plt>
   111d4:	ldr	r1, [r7]
   111d8:	bl	10dd8 <fputs_unlocked@plt>
   111dc:	movw	r1, #24968	; 0x6188
   111e0:	mov	r0, #0
   111e4:	mov	r2, #5
   111e8:	movt	r1, #1
   111ec:	bl	10e68 <dcgettext@plt>
   111f0:	ldr	r1, [r7]
   111f4:	bl	10dd8 <fputs_unlocked@plt>
   111f8:	movw	r1, #25065	; 0x61e9
   111fc:	mov	r0, #0
   11200:	mov	r2, #5
   11204:	movt	r1, #1
   11208:	bl	10e68 <dcgettext@plt>
   1120c:	ldr	r1, [r7]
   11210:	bl	10dd8 <fputs_unlocked@plt>
   11214:	movw	r1, #25294	; 0x62ce
   11218:	mov	r0, #0
   1121c:	mov	r2, #5
   11220:	movt	r1, #1
   11224:	bl	10e68 <dcgettext@plt>
   11228:	ldr	r1, [r7]
   1122c:	bl	10dd8 <fputs_unlocked@plt>
   11230:	movw	r1, #25546	; 0x63ca
   11234:	mov	r0, #0
   11238:	mov	r2, #5
   1123c:	movt	r1, #1
   11240:	bl	10e68 <dcgettext@plt>
   11244:	ldr	r1, [r7]
   11248:	bl	10dd8 <fputs_unlocked@plt>
   1124c:	movw	r1, #25994	; 0x658a
   11250:	mov	r0, #0
   11254:	mov	r2, #5
   11258:	movt	r1, #1
   1125c:	bl	10e68 <dcgettext@plt>
   11260:	movw	r5, #26185	; 0x6649
   11264:	mov	r1, r0
   11268:	mov	r0, #1
   1126c:	movt	r5, #1
   11270:	mov	r2, r5
   11274:	bl	10f88 <__printf_chk@plt>
   11278:	movw	r0, #26984	; 0x6968
   1127c:	mov	r2, #48	; 0x30
   11280:	mov	r6, sp
   11284:	movt	r0, #1
   11288:	add	r1, r0, #32
   1128c:	add	r3, r0, #16
   11290:	vld1.64	{d18-d19}, [r0], r2
   11294:	vld1.64	{d16-d17}, [r1]
   11298:	vld1.64	{d20-d21}, [r3]
   1129c:	vldr	d22, [r0]
   112a0:	add	r1, r6, #32
   112a4:	add	r0, r6, #16
   112a8:	vst1.64	{d16-d17}, [r1]
   112ac:	movw	r1, #26351	; 0x66ef
   112b0:	vst1.64	{d20-d21}, [r0]
   112b4:	mov	r0, r6
   112b8:	movt	r1, #1
   112bc:	vst1.64	{d18-d19}, [r0], r2
   112c0:	vstr	d22, [r0]
   112c4:	mov	r0, r5
   112c8:	bl	10dfc <strcmp@plt>
   112cc:	cmp	r0, #0
   112d0:	ldrne	r1, [r6, #8]!
   112d4:	cmpne	r1, #0
   112d8:	bne	112c4 <__mempcpy_chk@plt+0x288>
   112dc:	movw	r1, #26446	; 0x674e
   112e0:	ldr	r6, [r6, #4]
   112e4:	mov	r0, #0
   112e8:	mov	r2, #5
   112ec:	movt	r1, #1
   112f0:	bl	10e68 <dcgettext@plt>
   112f4:	movw	r2, #26249	; 0x6689
   112f8:	movw	r3, #26469	; 0x6765
   112fc:	mov	r1, r0
   11300:	mov	r0, #1
   11304:	movt	r2, #1
   11308:	movt	r3, #1
   1130c:	bl	10f88 <__printf_chk@plt>
   11310:	cmp	r6, #0
   11314:	mov	r0, #5
   11318:	mov	r1, #0
   1131c:	moveq	r6, r5
   11320:	bl	10fdc <setlocale@plt>
   11324:	cmp	r0, #0
   11328:	beq	11360 <__mempcpy_chk@plt+0x324>
   1132c:	movw	r1, #26509	; 0x678d
   11330:	mov	r2, #3
   11334:	movt	r1, #1
   11338:	bl	11024 <strncmp@plt>
   1133c:	cmp	r0, #0
   11340:	beq	11360 <__mempcpy_chk@plt+0x324>
   11344:	movw	r1, #26513	; 0x6791
   11348:	mov	r0, #0
   1134c:	mov	r2, #5
   11350:	movt	r1, #1
   11354:	bl	10e68 <dcgettext@plt>
   11358:	ldr	r1, [r7]
   1135c:	bl	10dd8 <fputs_unlocked@plt>
   11360:	movw	r1, #26584	; 0x67d8
   11364:	mov	r0, #0
   11368:	mov	r2, #5
   1136c:	movt	r1, #1
   11370:	bl	10e68 <dcgettext@plt>
   11374:	movw	r2, #26469	; 0x6765
   11378:	mov	r1, r0
   1137c:	mov	r0, #1
   11380:	mov	r3, r5
   11384:	movt	r2, #1
   11388:	bl	10f88 <__printf_chk@plt>
   1138c:	movw	r1, #26611	; 0x67f3
   11390:	mov	r0, #0
   11394:	mov	r2, #5
   11398:	movt	r1, #1
   1139c:	bl	10e68 <dcgettext@plt>
   113a0:	mov	r1, r0
   113a4:	movw	r0, #26379	; 0x670b
   113a8:	movw	r3, #24868	; 0x6124
   113ac:	cmp	r6, r5
   113b0:	mov	r2, r6
   113b4:	movt	r0, #1
   113b8:	movt	r3, #1
   113bc:	moveq	r3, r0
   113c0:	mov	r0, #1
   113c4:	bl	10f88 <__printf_chk@plt>
   113c8:	mov	r0, r4
   113cc:	bl	10f40 <exit@plt>
   113d0:	movw	r0, #28992	; 0x7140
   113d4:	movw	r1, #24708	; 0x6084
   113d8:	mov	r2, #5
   113dc:	movt	r0, #2
   113e0:	movt	r1, #1
   113e4:	ldr	r5, [r0]
   113e8:	mov	r0, #0
   113ec:	bl	10e68 <dcgettext@plt>
   113f0:	mov	r2, r0
   113f4:	movw	r0, #29016	; 0x7158
   113f8:	mov	r1, #1
   113fc:	movt	r0, #2
   11400:	ldr	r3, [r0]
   11404:	mov	r0, r5
   11408:	bl	10fa0 <__fprintf_chk@plt>
   1140c:	mov	r0, r4
   11410:	bl	10f40 <exit@plt>
   11414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11418:	add	fp, sp, #28
   1141c:	sub	sp, sp, #4
   11420:	vpush	{d8}
   11424:	sub	sp, sp, #320	; 0x140
   11428:	mov	r7, r0
   1142c:	ldr	r0, [r1]
   11430:	mov	r5, r1
   11434:	bl	12a40 <__mempcpy_chk@plt+0x1a04>
   11438:	movw	r1, #24868	; 0x6124
   1143c:	mov	r0, #6
   11440:	movt	r1, #1
   11444:	bl	10fdc <setlocale@plt>
   11448:	movw	r6, #26253	; 0x668d
   1144c:	movw	r1, #26192	; 0x6650
   11450:	movt	r6, #1
   11454:	movt	r1, #1
   11458:	mov	r0, r6
   1145c:	bl	11018 <bindtextdomain@plt>
   11460:	mov	r0, r6
   11464:	bl	10e80 <textdomain@plt>
   11468:	movw	r0, #10544	; 0x2930
   1146c:	movt	r0, #1
   11470:	bl	16060 <__mempcpy_chk@plt+0x5024>
   11474:	movw	r1, #29004	; 0x714c
   11478:	mov	r0, #0
   1147c:	movt	r1, #2
   11480:	strb	r0, [r1]
   11484:	movw	r0, #26216	; 0x6668
   11488:	movt	r0, #1
   1148c:	bl	10ee0 <getenv@plt>
   11490:	movw	r1, #29005	; 0x714d
   11494:	cmp	r0, #0
   11498:	movt	r1, #2
   1149c:	movwne	r0, #1
   114a0:	cmp	r7, #2
   114a4:	strb	r0, [r1]
   114a8:	bne	11520 <__mempcpy_chk@plt+0x4e4>
   114ac:	ldr	r4, [r5, #4]
   114b0:	movw	r1, #26232	; 0x6678
   114b4:	movt	r1, #1
   114b8:	mov	r0, r4
   114bc:	bl	10dfc <strcmp@plt>
   114c0:	cmp	r0, #0
   114c4:	beq	12164 <__mempcpy_chk@plt+0x1128>
   114c8:	movw	r1, #26239	; 0x667f
   114cc:	mov	r0, r4
   114d0:	movt	r1, #1
   114d4:	bl	10dfc <strcmp@plt>
   114d8:	cmp	r0, #0
   114dc:	bne	11528 <__mempcpy_chk@plt+0x4ec>
   114e0:	movw	r0, #28912	; 0x70f0
   114e4:	movw	r1, #26263	; 0x6697
   114e8:	movw	r2, #26249	; 0x6689
   114ec:	mov	r4, #0
   114f0:	movt	r0, #2
   114f4:	movt	r1, #1
   114f8:	movt	r2, #1
   114fc:	ldr	r3, [r0]
   11500:	movw	r0, #28996	; 0x7144
   11504:	stm	sp, {r1, r4}
   11508:	movw	r1, #26185	; 0x6649
   1150c:	movt	r0, #2
   11510:	movt	r1, #1
   11514:	ldr	r0, [r0]
   11518:	bl	15074 <__mempcpy_chk@plt+0x4038>
   1151c:	b	120b4 <__mempcpy_chk@plt+0x1078>
   11520:	blt	12138 <__mempcpy_chk@plt+0x10fc>
   11524:	ldr	r4, [r5, #4]
   11528:	movw	r1, #26279	; 0x66a7
   1152c:	mov	r0, r4
   11530:	movt	r1, #1
   11534:	bl	10dfc <strcmp@plt>
   11538:	cmp	r0, #0
   1153c:	beq	1154c <__mempcpy_chk@plt+0x510>
   11540:	str	r4, [sp, #8]
   11544:	mov	r0, r5
   11548:	b	11564 <__mempcpy_chk@plt+0x528>
   1154c:	cmp	r7, #3
   11550:	blt	12138 <__mempcpy_chk@plt+0x10fc>
   11554:	ldr	r1, [r5, #8]
   11558:	add	r0, r5, #4
   1155c:	sub	r7, r7, #1
   11560:	str	r1, [sp, #8]
   11564:	add	r1, sp, #56	; 0x38
   11568:	movw	r6, #28996	; 0x7144
   1156c:	mov	r4, #0
   11570:	add	r1, r1, #99	; 0x63
   11574:	movt	r6, #2
   11578:	str	r1, [sp, #20]
   1157c:	add	r1, r0, #8
   11580:	sub	r0, r7, #2
   11584:	mov	r8, r0
   11588:	ldr	r5, [sp, #8]
   1158c:	str	r0, [sp, #12]
   11590:	mov	r0, #0
   11594:	mov	r7, r1
   11598:	str	r1, [sp, #16]
   1159c:	str	r0, [sp, #28]
   115a0:	mov	r0, #0
   115a4:	str	r0, [sp, #24]
   115a8:	b	115c0 <__mempcpy_chk@plt+0x584>
   115ac:	mov	r0, r5
   115b0:	mov	r1, #0
   115b4:	bl	12230 <__mempcpy_chk@plt+0x11f4>
   115b8:	add	r9, r5, r0
   115bc:	add	r5, r9, #1
   115c0:	ldrb	r1, [r5]
   115c4:	cmp	r1, #37	; 0x25
   115c8:	beq	11608 <__mempcpy_chk@plt+0x5cc>
   115cc:	cmp	r1, #92	; 0x5c
   115d0:	beq	115ac <__mempcpy_chk@plt+0x570>
   115d4:	cmp	r1, #0
   115d8:	beq	12044 <__mempcpy_chk@plt+0x1008>
   115dc:	ldr	r0, [r6]
   115e0:	ldr	r2, [r0, #20]
   115e4:	ldr	r3, [r0, #24]
   115e8:	cmp	r2, r3
   115ec:	bcs	1202c <__mempcpy_chk@plt+0xff0>
   115f0:	add	r3, r2, #1
   115f4:	str	r3, [r0, #20]
   115f8:	strb	r1, [r2]
   115fc:	mov	r9, r5
   11600:	add	r5, r9, #1
   11604:	b	115c0 <__mempcpy_chk@plt+0x584>
   11608:	mov	r9, r5
   1160c:	ldrb	r0, [r9, #1]!
   11610:	cmp	r0, #113	; 0x71
   11614:	beq	116c0 <__mempcpy_chk@plt+0x684>
   11618:	cmp	r0, #98	; 0x62
   1161c:	beq	11654 <__mempcpy_chk@plt+0x618>
   11620:	cmp	r0, #37	; 0x25
   11624:	bne	116e8 <__mempcpy_chk@plt+0x6ac>
   11628:	ldr	r0, [r6]
   1162c:	ldr	r1, [r0, #20]
   11630:	ldr	r2, [r0, #24]
   11634:	cmp	r1, r2
   11638:	bcs	12034 <__mempcpy_chk@plt+0xff8>
   1163c:	add	r2, r1, #1
   11640:	add	r5, r9, #1
   11644:	str	r2, [r0, #20]
   11648:	mov	r0, #37	; 0x25
   1164c:	strb	r0, [r1]
   11650:	b	115c0 <__mempcpy_chk@plt+0x584>
   11654:	cmp	r8, #1
   11658:	blt	11600 <__mempcpy_chk@plt+0x5c4>
   1165c:	ldr	r5, [r7]
   11660:	b	11678 <__mempcpy_chk@plt+0x63c>
   11664:	mov	r0, r5
   11668:	mov	r1, #1
   1166c:	bl	12230 <__mempcpy_chk@plt+0x11f4>
   11670:	add	r0, r5, r0
   11674:	add	r5, r0, #1
   11678:	ldrb	r1, [r5]
   1167c:	cmp	r1, #92	; 0x5c
   11680:	beq	11664 <__mempcpy_chk@plt+0x628>
   11684:	cmp	r1, #0
   11688:	beq	11850 <__mempcpy_chk@plt+0x814>
   1168c:	ldr	r0, [r6]
   11690:	ldr	r2, [r0, #20]
   11694:	ldr	r3, [r0, #24]
   11698:	cmp	r2, r3
   1169c:	bcs	116b4 <__mempcpy_chk@plt+0x678>
   116a0:	add	r3, r2, #1
   116a4:	add	r5, r5, #1
   116a8:	str	r3, [r0, #20]
   116ac:	strb	r1, [r2]
   116b0:	b	11678 <__mempcpy_chk@plt+0x63c>
   116b4:	bl	10fd0 <__overflow@plt>
   116b8:	add	r5, r5, #1
   116bc:	b	11678 <__mempcpy_chk@plt+0x63c>
   116c0:	cmp	r8, #1
   116c4:	blt	11600 <__mempcpy_chk@plt+0x5c4>
   116c8:	ldr	r1, [r7], #4
   116cc:	mov	r0, #3
   116d0:	bl	1416c <__mempcpy_chk@plt+0x3130>
   116d4:	ldr	r1, [r6]
   116d8:	bl	10dd8 <fputs_unlocked@plt>
   116dc:	sub	r8, r8, #1
   116e0:	add	r5, r9, #1
   116e4:	b	115c0 <__mempcpy_chk@plt+0x584>
   116e8:	add	r0, sp, #56	; 0x38
   116ec:	mov	r1, #0
   116f0:	mov	r2, #256	; 0x100
   116f4:	mov	r6, #0
   116f8:	bl	10f7c <memset@plt>
   116fc:	mov	sl, #1
   11700:	movw	r0, #257	; 0x101
   11704:	movw	r1, #257	; 0x101
   11708:	strb	sl, [sp, #176]	; 0xb0
   1170c:	strb	sl, [sp, #144]	; 0x90
   11710:	strb	sl, [sp, #173]	; 0xad
   11714:	strb	sl, [sp, #171]	; 0xab
   11718:	strb	sl, [sp, #167]	; 0xa7
   1171c:	strb	sl, [sp, #161]	; 0xa1
   11720:	strb	sl, [sp, #127]	; 0x7f
   11724:	strh	r0, [sp, #125]	; 0x7d
   11728:	ldr	r0, [sp, #20]
   1172c:	movt	r1, #257	; 0x101
   11730:	strb	sl, [sp, #153]	; 0x99
   11734:	strb	sl, [sp, #121]	; 0x79
   11738:	str	r1, [r0]
   1173c:	strb	sl, [r0, #4]
   11740:	b	1175c <__mempcpy_chk@plt+0x720>
   11744:	strb	r4, [sp, #171]	; 0xab
   11748:	strb	r4, [sp, #173]	; 0xad
   1174c:	strb	r4, [sp, #161]	; 0xa1
   11750:	strh	r4, [sp, #155]	; 0x9b
   11754:	add	r6, r6, #1
   11758:	add	sl, sl, #1
   1175c:	ldrb	r0, [r5, sl]
   11760:	sub	r1, r0, #32
   11764:	cmp	r1, #41	; 0x29
   11768:	bhi	11860 <__mempcpy_chk@plt+0x824>
   1176c:	add	r2, pc, #0
   11770:	ldr	pc, [r2, r1, lsl #2]
   11774:	andeq	r1, r1, r4, asr r7
   11778:	andeq	r1, r1, r0, ror #16
   1177c:	andeq	r1, r1, r0, ror #16
   11780:	andeq	r1, r1, r4, asr #14
   11784:	andeq	r1, r1, r0, ror #16
   11788:	andeq	r1, r1, r0, ror #16
   1178c:	andeq	r1, r1, r0, ror #16
   11790:	andeq	r1, r1, ip, lsl r8
   11794:	andeq	r1, r1, r0, ror #16
   11798:	andeq	r1, r1, r0, ror #16
   1179c:	muleq	r1, ip, r8
   117a0:	andeq	r1, r1, r4, asr r7
   117a4:	andeq	r1, r1, r0, ror #16
   117a8:	andeq	r1, r1, r4, asr r7
   117ac:	andeq	r1, r1, r0, ror #16
   117b0:	andeq	r1, r1, r0, ror #16
   117b4:	andeq	r1, r1, r4, asr #16
   117b8:	andeq	r1, r1, r0, ror #16
   117bc:	andeq	r1, r1, r0, ror #16
   117c0:	andeq	r1, r1, r0, ror #16
   117c4:	andeq	r1, r1, r0, ror #16
   117c8:	andeq	r1, r1, r0, ror #16
   117cc:	andeq	r1, r1, r0, ror #16
   117d0:	andeq	r1, r1, r0, ror #16
   117d4:	andeq	r1, r1, r0, ror #16
   117d8:	andeq	r1, r1, r0, ror #16
   117dc:	andeq	r1, r1, r0, ror #16
   117e0:	andeq	r1, r1, r0, ror #16
   117e4:	andeq	r1, r1, r0, ror #16
   117e8:	andeq	r1, r1, r0, ror #16
   117ec:	andeq	r1, r1, r0, ror #16
   117f0:	andeq	r1, r1, r0, ror #16
   117f4:	andeq	r1, r1, r0, ror #16
   117f8:	andeq	r1, r1, r0, ror #16
   117fc:	andeq	r1, r1, r0, ror #16
   11800:	andeq	r1, r1, r0, ror #16
   11804:	andeq	r1, r1, r0, ror #16
   11808:	andeq	r1, r1, r0, ror #16
   1180c:	andeq	r1, r1, r0, ror #16
   11810:	andeq	r1, r1, r0, ror #16
   11814:	andeq	r1, r1, r0, ror #16
   11818:	andeq	r1, r1, ip, lsl r8
   1181c:	strb	r4, [sp, #176]	; 0xb0
   11820:	strb	r4, [sp, #144]	; 0x90
   11824:	strb	r4, [sp, #171]	; 0xab
   11828:	strb	r4, [sp, #167]	; 0xa7
   1182c:	strb	r4, [sp, #157]	; 0x9d
   11830:	strb	r4, [sp, #125]	; 0x7d
   11834:	strb	r4, [sp, #155]	; 0x9b
   11838:	strb	r4, [sp, #153]	; 0x99
   1183c:	strb	r4, [sp, #121]	; 0x79
   11840:	b	11754 <__mempcpy_chk@plt+0x718>
   11844:	strb	r4, [sp, #155]	; 0x9b
   11848:	strb	r4, [sp, #171]	; 0xab
   1184c:	b	11754 <__mempcpy_chk@plt+0x718>
   11850:	sub	r8, r8, #1
   11854:	add	r7, r7, #4
   11858:	add	r5, r9, #1
   1185c:	b	115c0 <__mempcpy_chk@plt+0x584>
   11860:	sub	r1, r0, #48	; 0x30
   11864:	mov	r2, #0
   11868:	cmp	r1, #9
   1186c:	str	r2, [sp, #36]	; 0x24
   11870:	bhi	118c8 <__mempcpy_chk@plt+0x88c>
   11874:	add	r0, r5, r6
   11878:	add	r6, r6, #1
   1187c:	ldrb	r0, [r0, #2]
   11880:	sub	r1, r0, #48	; 0x30
   11884:	cmp	r1, #10
   11888:	bcc	11874 <__mempcpy_chk@plt+0x838>
   1188c:	add	r1, r5, r6
   11890:	add	sl, r6, #1
   11894:	add	r9, r1, #1
   11898:	b	118f0 <__mempcpy_chk@plt+0x8b4>
   1189c:	cmp	r8, #1
   118a0:	blt	118d0 <__mempcpy_chk@plt+0x894>
   118a4:	ldr	r0, [r7]
   118a8:	bl	1216c <__mempcpy_chk@plt+0x1130>
   118ac:	str	r0, [sp, #28]
   118b0:	adds	r0, r0, #-2147483648	; 0x80000000
   118b4:	adcs	r0, r1, #0
   118b8:	bne	120c8 <__mempcpy_chk@plt+0x108c>
   118bc:	sub	r8, r8, #1
   118c0:	add	r7, r7, #4
   118c4:	b	118d8 <__mempcpy_chk@plt+0x89c>
   118c8:	add	r9, r5, sl
   118cc:	b	118f0 <__mempcpy_chk@plt+0x8b4>
   118d0:	mov	r0, #0
   118d4:	str	r0, [sp, #28]
   118d8:	add	r0, r5, sl
   118dc:	mov	r1, #1
   118e0:	add	sl, sl, #1
   118e4:	add	r9, r0, #1
   118e8:	ldrb	r0, [r0, #1]
   118ec:	str	r1, [sp, #36]	; 0x24
   118f0:	mov	r6, #0
   118f4:	cmp	r0, #46	; 0x2e
   118f8:	bne	11948 <__mempcpy_chk@plt+0x90c>
   118fc:	strb	r4, [sp, #155]	; 0x9b
   11900:	mov	r0, r9
   11904:	ldrb	r1, [r0, #1]!
   11908:	cmp	r1, #42	; 0x2a
   1190c:	bne	11950 <__mempcpy_chk@plt+0x914>
   11910:	add	sl, sl, #2
   11914:	add	r9, r9, #2
   11918:	mov	r6, #1
   1191c:	cmp	r8, #1
   11920:	blt	1198c <__mempcpy_chk@plt+0x950>
   11924:	ldr	r0, [r7]
   11928:	bl	1216c <__mempcpy_chk@plt+0x1130>
   1192c:	cmp	r1, #0
   11930:	bmi	1199c <__mempcpy_chk@plt+0x960>
   11934:	str	r0, [sp, #24]
   11938:	subs	r0, r0, #-2147483648	; 0x80000000
   1193c:	sbcs	r0, r1, #0
   11940:	blt	119a4 <__mempcpy_chk@plt+0x968>
   11944:	b	120d4 <__mempcpy_chk@plt+0x1098>
   11948:	str	r8, [sp, #52]	; 0x34
   1194c:	b	119b0 <__mempcpy_chk@plt+0x974>
   11950:	sub	r1, r1, #48	; 0x30
   11954:	add	sl, sl, #1
   11958:	str	r8, [sp, #52]	; 0x34
   1195c:	cmp	r1, #9
   11960:	bhi	11984 <__mempcpy_chk@plt+0x948>
   11964:	add	r0, r9, #2
   11968:	ldrb	r1, [r0], #1
   1196c:	add	sl, sl, #1
   11970:	sub	r1, r1, #48	; 0x30
   11974:	cmp	r1, #10
   11978:	bcc	11968 <__mempcpy_chk@plt+0x92c>
   1197c:	sub	r9, r0, #1
   11980:	b	119b0 <__mempcpy_chk@plt+0x974>
   11984:	mov	r9, r0
   11988:	b	119b0 <__mempcpy_chk@plt+0x974>
   1198c:	mov	r0, #0
   11990:	str	r8, [sp, #52]	; 0x34
   11994:	str	r0, [sp, #24]
   11998:	b	119b0 <__mempcpy_chk@plt+0x974>
   1199c:	mvn	r0, #0
   119a0:	str	r0, [sp, #24]
   119a4:	sub	r8, r8, #1
   119a8:	add	r7, r7, #4
   119ac:	str	r8, [sp, #52]	; 0x34
   119b0:	ldrb	r8, [r9]
   119b4:	sub	r0, r8, #76	; 0x4c
   119b8:	cmp	r0, #46	; 0x2e
   119bc:	bhi	11a8c <__mempcpy_chk@plt+0xa50>
   119c0:	add	r1, pc, #0
   119c4:	ldr	pc, [r1, r0, lsl #2]
   119c8:	andeq	r1, r1, r4, lsl #21
   119cc:	andeq	r1, r1, ip, lsl #21
   119d0:	andeq	r1, r1, ip, lsl #21
   119d4:	andeq	r1, r1, ip, lsl #21
   119d8:	andeq	r1, r1, ip, lsl #21
   119dc:	andeq	r1, r1, ip, lsl #21
   119e0:	andeq	r1, r1, ip, lsl #21
   119e4:	andeq	r1, r1, ip, lsl #21
   119e8:	andeq	r1, r1, ip, lsl #21
   119ec:	andeq	r1, r1, ip, lsl #21
   119f0:	andeq	r1, r1, ip, lsl #21
   119f4:	andeq	r1, r1, ip, lsl #21
   119f8:	andeq	r1, r1, ip, lsl #21
   119fc:	andeq	r1, r1, ip, lsl #21
   11a00:	andeq	r1, r1, ip, lsl #21
   11a04:	andeq	r1, r1, ip, lsl #21
   11a08:	andeq	r1, r1, ip, lsl #21
   11a0c:	andeq	r1, r1, ip, lsl #21
   11a10:	andeq	r1, r1, ip, lsl #21
   11a14:	andeq	r1, r1, ip, lsl #21
   11a18:	andeq	r1, r1, ip, lsl #21
   11a1c:	andeq	r1, r1, ip, lsl #21
   11a20:	andeq	r1, r1, ip, lsl #21
   11a24:	andeq	r1, r1, ip, lsl #21
   11a28:	andeq	r1, r1, ip, lsl #21
   11a2c:	andeq	r1, r1, ip, lsl #21
   11a30:	andeq	r1, r1, ip, lsl #21
   11a34:	andeq	r1, r1, ip, lsl #21
   11a38:	andeq	r1, r1, r4, lsl #21
   11a3c:	andeq	r1, r1, ip, lsl #21
   11a40:	andeq	r1, r1, r4, lsl #21
   11a44:	andeq	r1, r1, ip, lsl #21
   11a48:	andeq	r1, r1, r4, lsl #21
   11a4c:	andeq	r1, r1, ip, lsl #21
   11a50:	andeq	r1, r1, ip, lsl #21
   11a54:	andeq	r1, r1, ip, lsl #21
   11a58:	andeq	r1, r1, ip, lsl #21
   11a5c:	andeq	r1, r1, ip, lsl #21
   11a60:	andeq	r1, r1, ip, lsl #21
   11a64:	andeq	r1, r1, ip, lsl #21
   11a68:	andeq	r1, r1, r4, lsl #21
   11a6c:	andeq	r1, r1, ip, lsl #21
   11a70:	andeq	r1, r1, ip, lsl #21
   11a74:	andeq	r1, r1, ip, lsl #21
   11a78:	andeq	r1, r1, ip, lsl #21
   11a7c:	andeq	r1, r1, ip, lsl #21
   11a80:	andeq	r1, r1, r4, lsl #21
   11a84:	add	r9, r9, #1
   11a88:	b	119b0 <__mempcpy_chk@plt+0x974>
   11a8c:	add	r0, sp, #56	; 0x38
   11a90:	ldrb	r0, [r0, r8]
   11a94:	cmp	r0, #0
   11a98:	beq	12108 <__mempcpy_chk@plt+0x10cc>
   11a9c:	ldr	r0, [sp, #52]	; 0x34
   11aa0:	str	r6, [sp, #32]
   11aa4:	cmp	r0, #1
   11aa8:	blt	11ac0 <__mempcpy_chk@plt+0xa84>
   11aac:	sub	r0, r0, #1
   11ab0:	str	r0, [sp, #52]	; 0x34
   11ab4:	ldr	r0, [r7], #4
   11ab8:	str	r7, [sp, #44]	; 0x2c
   11abc:	b	11acc <__mempcpy_chk@plt+0xa90>
   11ac0:	movw	r0, #24868	; 0x6124
   11ac4:	str	r7, [sp, #44]	; 0x2c
   11ac8:	movt	r0, #1
   11acc:	str	r0, [sp, #48]	; 0x30
   11ad0:	sub	r7, r8, #65	; 0x41
   11ad4:	cmp	r7, #55	; 0x37
   11ad8:	bhi	11f30 <__mempcpy_chk@plt+0xef4>
   11adc:	movw	r1, #26884	; 0x6904
   11ae0:	add	r0, pc, #8
   11ae4:	mov	r6, #2
   11ae8:	movt	r1, #1
   11aec:	ldr	pc, [r0, r7, lsl #2]
   11af0:	ldrdeq	r1, [r1], -r0
   11af4:	andeq	r1, r1, r0, lsr pc
   11af8:	andeq	r1, r1, r0, lsr pc
   11afc:	andeq	r1, r1, r0, lsr pc
   11b00:	ldrdeq	r1, [r1], -r0
   11b04:	ldrdeq	r1, [r1], -r0
   11b08:	ldrdeq	r1, [r1], -r0
   11b0c:	andeq	r1, r1, r0, lsr pc
   11b10:	andeq	r1, r1, r0, lsr pc
   11b14:	andeq	r1, r1, r0, lsr pc
   11b18:	andeq	r1, r1, r0, lsr pc
   11b1c:	andeq	r1, r1, r0, lsr pc
   11b20:	andeq	r1, r1, r0, lsr pc
   11b24:	andeq	r1, r1, r0, lsr pc
   11b28:	andeq	r1, r1, r0, lsr pc
   11b2c:	andeq	r1, r1, r0, lsr pc
   11b30:	andeq	r1, r1, r0, lsr pc
   11b34:	andeq	r1, r1, r0, lsr pc
   11b38:	andeq	r1, r1, r0, lsr pc
   11b3c:	andeq	r1, r1, r0, lsr pc
   11b40:	andeq	r1, r1, r0, lsr pc
   11b44:	andeq	r1, r1, r0, lsr pc
   11b48:	andeq	r1, r1, r0, lsr pc
   11b4c:	andeq	r1, r1, r0, ror #23
   11b50:	andeq	r1, r1, r0, lsr pc
   11b54:	andeq	r1, r1, r0, lsr pc
   11b58:	andeq	r1, r1, r0, lsr pc
   11b5c:	andeq	r1, r1, r0, lsr pc
   11b60:	andeq	r1, r1, r0, lsr pc
   11b64:	andeq	r1, r1, r0, lsr pc
   11b68:	andeq	r1, r1, r0, lsr pc
   11b6c:	andeq	r1, r1, r0, lsr pc
   11b70:	ldrdeq	r1, [r1], -r0
   11b74:	andeq	r1, r1, r0, lsr pc
   11b78:	andeq	r1, r1, r0, lsr pc
   11b7c:	andeq	r1, r1, r0, ror #23
   11b80:	ldrdeq	r1, [r1], -r0
   11b84:	ldrdeq	r1, [r1], -r0
   11b88:	ldrdeq	r1, [r1], -r0
   11b8c:	andeq	r1, r1, r0, lsr pc
   11b90:	andeq	r1, r1, r0, ror #23
   11b94:	andeq	r1, r1, r0, lsr pc
   11b98:	andeq	r1, r1, r0, lsr pc
   11b9c:	andeq	r1, r1, r0, lsr pc
   11ba0:	andeq	r1, r1, r0, lsr pc
   11ba4:	andeq	r1, r1, r0, lsr pc
   11ba8:	andeq	r1, r1, r0, ror #23
   11bac:	andeq	r1, r1, r0, lsr pc
   11bb0:	andeq	r1, r1, r0, lsr pc
   11bb4:	andeq	r1, r1, r0, lsr pc
   11bb8:	andeq	r1, r1, r0, lsr pc
   11bbc:	andeq	r1, r1, r0, lsr pc
   11bc0:	andeq	r1, r1, r0, ror #23
   11bc4:	andeq	r1, r1, r0, lsr pc
   11bc8:	andeq	r1, r1, r0, lsr pc
   11bcc:	andeq	r1, r1, r0, ror #23
   11bd0:	movw	r0, #26888	; 0x6908
   11bd4:	mov	r6, #1
   11bd8:	movt	r0, #1
   11bdc:	mov	r1, r0
   11be0:	add	r0, sl, r6
   11be4:	str	r1, [sp, #40]	; 0x28
   11be8:	add	r0, r0, #2
   11bec:	bl	152a8 <__mempcpy_chk@plt+0x426c>
   11bf0:	mov	r2, sl
   11bf4:	mov	r1, r5
   11bf8:	mvn	r3, #0
   11bfc:	mov	sl, r0
   11c00:	bl	1103c <__mempcpy_chk@plt>
   11c04:	ldr	r1, [sp, #40]	; 0x28
   11c08:	mov	r2, r6
   11c0c:	mvn	r3, #0
   11c10:	bl	1103c <__mempcpy_chk@plt>
   11c14:	strb	r4, [r0, #1]
   11c18:	strb	r8, [r0]
   11c1c:	ldr	r8, [sp, #52]	; 0x34
   11c20:	cmp	r7, #55	; 0x37
   11c24:	bhi	12010 <__mempcpy_chk@plt+0xfd4>
   11c28:	add	r0, pc, #0
   11c2c:	ldr	pc, [r0, r7, lsl #2]
   11c30:	andeq	r1, r1, r0, lsl sp
   11c34:	andeq	r2, r1, r0, lsl r0
   11c38:	andeq	r2, r1, r0, lsl r0
   11c3c:	andeq	r2, r1, r0, lsl r0
   11c40:	andeq	r1, r1, r0, lsl sp
   11c44:	andeq	r1, r1, r0, lsl sp
   11c48:	andeq	r1, r1, r0, lsl sp
   11c4c:	andeq	r2, r1, r0, lsl r0
   11c50:	andeq	r2, r1, r0, lsl r0
   11c54:	andeq	r2, r1, r0, lsl r0
   11c58:	andeq	r2, r1, r0, lsl r0
   11c5c:	andeq	r2, r1, r0, lsl r0
   11c60:	andeq	r2, r1, r0, lsl r0
   11c64:	andeq	r2, r1, r0, lsl r0
   11c68:	andeq	r2, r1, r0, lsl r0
   11c6c:	andeq	r2, r1, r0, lsl r0
   11c70:	andeq	r2, r1, r0, lsl r0
   11c74:	andeq	r2, r1, r0, lsl r0
   11c78:	andeq	r2, r1, r0, lsl r0
   11c7c:	andeq	r2, r1, r0, lsl r0
   11c80:	andeq	r2, r1, r0, lsl r0
   11c84:	andeq	r2, r1, r0, lsl r0
   11c88:	andeq	r2, r1, r0, lsl r0
   11c8c:	andeq	r1, r1, r4, lsl #28
   11c90:	andeq	r2, r1, r0, lsl r0
   11c94:	andeq	r2, r1, r0, lsl r0
   11c98:	andeq	r2, r1, r0, lsl r0
   11c9c:	andeq	r2, r1, r0, lsl r0
   11ca0:	andeq	r2, r1, r0, lsl r0
   11ca4:	andeq	r2, r1, r0, lsl r0
   11ca8:	andeq	r2, r1, r0, lsl r0
   11cac:	andeq	r2, r1, r0, lsl r0
   11cb0:	andeq	r1, r1, r0, lsl sp
   11cb4:	andeq	r2, r1, r0, lsl r0
   11cb8:	andeq	r1, r1, ip, lsr pc
   11cbc:	strdeq	r1, [r1], -r8
   11cc0:	andeq	r1, r1, r0, lsl sp
   11cc4:	andeq	r1, r1, r0, lsl sp
   11cc8:	andeq	r1, r1, r0, lsl sp
   11ccc:	andeq	r2, r1, r0, lsl r0
   11cd0:	strdeq	r1, [r1], -r8
   11cd4:	andeq	r2, r1, r0, lsl r0
   11cd8:	andeq	r2, r1, r0, lsl r0
   11cdc:	andeq	r2, r1, r0, lsl r0
   11ce0:	andeq	r2, r1, r0, lsl r0
   11ce4:	andeq	r2, r1, r0, lsl r0
   11ce8:	andeq	r1, r1, r4, lsl #28
   11cec:	andeq	r2, r1, r0, lsl r0
   11cf0:	andeq	r2, r1, r0, lsl r0
   11cf4:	andeq	r2, r1, r0, lsl r0
   11cf8:	andeq	r1, r1, r8, asr pc
   11cfc:	andeq	r2, r1, r0, lsl r0
   11d00:	andeq	r1, r1, r4, lsl #28
   11d04:	andeq	r2, r1, r0, lsl r0
   11d08:	andeq	r2, r1, r0, lsl r0
   11d0c:	andeq	r1, r1, r4, lsl #28
   11d10:	ldr	r7, [sp, #48]	; 0x30
   11d14:	ldrb	r0, [r7]
   11d18:	cmp	r0, #39	; 0x27
   11d1c:	cmpne	r0, #34	; 0x22
   11d20:	bne	11dac <__mempcpy_chk@plt+0xd70>
   11d24:	ldrb	r0, [r7, #1]
   11d28:	cmp	r0, #0
   11d2c:	beq	11dac <__mempcpy_chk@plt+0xd70>
   11d30:	vmov	s0, r0
   11d34:	vcvt.f64.u32	d8, s0
   11d38:	ldrb	r0, [r7, #2]!
   11d3c:	cmp	r0, #0
   11d40:	beq	11dd0 <__mempcpy_chk@plt+0xd94>
   11d44:	movw	r0, #29005	; 0x714d
   11d48:	ldr	r5, [sp, #36]	; 0x24
   11d4c:	ldr	r6, [sp, #32]
   11d50:	movt	r0, #2
   11d54:	ldrb	r0, [r0]
   11d58:	cmp	r0, #0
   11d5c:	bne	11d88 <__mempcpy_chk@plt+0xd4c>
   11d60:	movw	r1, #26747	; 0x687b
   11d64:	mov	r0, #0
   11d68:	mov	r2, #5
   11d6c:	movt	r1, #1
   11d70:	bl	10e68 <dcgettext@plt>
   11d74:	mov	r2, r0
   11d78:	mov	r0, #0
   11d7c:	mov	r1, #0
   11d80:	mov	r3, r7
   11d84:	bl	10ed4 <error@plt>
   11d88:	ldr	r7, [sp, #24]
   11d8c:	cmp	r5, #0
   11d90:	bne	11de4 <__mempcpy_chk@plt+0xda8>
   11d94:	vmov	r2, r3, d8
   11d98:	cmp	r6, #0
   11d9c:	beq	11f9c <__mempcpy_chk@plt+0xf60>
   11da0:	mov	r0, sl
   11da4:	mov	r1, r7
   11da8:	b	11fb8 <__mempcpy_chk@plt+0xf7c>
   11dac:	bl	10f64 <__errno_location@plt>
   11db0:	str	r4, [r0]
   11db4:	mov	r0, r7
   11db8:	sub	r1, fp, #48	; 0x30
   11dbc:	bl	1288c <__mempcpy_chk@plt+0x1850>
   11dc0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11dc4:	mov	r0, r7
   11dc8:	vmov.f64	d8, d0
   11dcc:	bl	127e8 <__mempcpy_chk@plt+0x17ac>
   11dd0:	ldr	r7, [sp, #24]
   11dd4:	ldr	r5, [sp, #36]	; 0x24
   11dd8:	ldr	r6, [sp, #32]
   11ddc:	cmp	r5, #0
   11de0:	beq	11d94 <__mempcpy_chk@plt+0xd58>
   11de4:	cmp	r6, #0
   11de8:	beq	11ee8 <__mempcpy_chk@plt+0xeac>
   11dec:	ldr	r1, [sp, #28]
   11df0:	mov	r0, sl
   11df4:	mov	r2, r7
   11df8:	vstr	d8, [sp]
   11dfc:	bl	15828 <__mempcpy_chk@plt+0x47ec>
   11e00:	b	12010 <__mempcpy_chk@plt+0xfd4>
   11e04:	ldr	r7, [sp, #48]	; 0x30
   11e08:	ldrb	r0, [r7]
   11e0c:	cmp	r0, #39	; 0x27
   11e10:	cmpne	r0, #34	; 0x22
   11e14:	bne	11e98 <__mempcpy_chk@plt+0xe5c>
   11e18:	ldrb	r5, [r7, #1]
   11e1c:	cmp	r5, #0
   11e20:	beq	11e98 <__mempcpy_chk@plt+0xe5c>
   11e24:	ldrb	r0, [r7, #2]!
   11e28:	mov	r6, #0
   11e2c:	cmp	r0, #0
   11e30:	beq	11ec8 <__mempcpy_chk@plt+0xe8c>
   11e34:	movw	r0, #29005	; 0x714d
   11e38:	str	r7, [sp, #48]	; 0x30
   11e3c:	ldr	r7, [sp, #36]	; 0x24
   11e40:	movt	r0, #2
   11e44:	ldrb	r0, [r0]
   11e48:	cmp	r0, #0
   11e4c:	bne	11e7c <__mempcpy_chk@plt+0xe40>
   11e50:	movw	r1, #26747	; 0x687b
   11e54:	mov	r0, #0
   11e58:	mov	r2, #5
   11e5c:	mov	r6, #0
   11e60:	movt	r1, #1
   11e64:	bl	10e68 <dcgettext@plt>
   11e68:	ldr	r3, [sp, #48]	; 0x30
   11e6c:	mov	r2, r0
   11e70:	mov	r0, #0
   11e74:	mov	r1, #0
   11e78:	bl	10ed4 <error@plt>
   11e7c:	cmp	r7, #0
   11e80:	beq	11ed4 <__mempcpy_chk@plt+0xe98>
   11e84:	ldr	r0, [sp, #32]
   11e88:	cmp	r0, #0
   11e8c:	beq	11fa8 <__mempcpy_chk@plt+0xf6c>
   11e90:	stm	sp, {r5, r6}
   11e94:	b	11f24 <__mempcpy_chk@plt+0xee8>
   11e98:	bl	10f64 <__errno_location@plt>
   11e9c:	str	r4, [r0]
   11ea0:	mov	r0, r7
   11ea4:	sub	r1, fp, #48	; 0x30
   11ea8:	mov	r2, #0
   11eac:	mov	r3, #0
   11eb0:	bl	10e44 <__strtoull_internal@plt>
   11eb4:	mov	r6, r1
   11eb8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11ebc:	mov	r5, r0
   11ec0:	mov	r0, r7
   11ec4:	bl	127e8 <__mempcpy_chk@plt+0x17ac>
   11ec8:	ldr	r7, [sp, #36]	; 0x24
   11ecc:	cmp	r7, #0
   11ed0:	bne	11e84 <__mempcpy_chk@plt+0xe48>
   11ed4:	ldr	r0, [sp, #32]
   11ed8:	cmp	r0, #0
   11edc:	beq	11fc0 <__mempcpy_chk@plt+0xf84>
   11ee0:	ldr	r1, [sp, #24]
   11ee4:	b	11fac <__mempcpy_chk@plt+0xf70>
   11ee8:	vmov	r2, r3, d8
   11eec:	ldr	r1, [sp, #28]
   11ef0:	mov	r0, sl
   11ef4:	b	11fb8 <__mempcpy_chk@plt+0xf7c>
   11ef8:	ldr	r0, [sp, #48]	; 0x30
   11efc:	bl	1216c <__mempcpy_chk@plt+0x1130>
   11f00:	mov	r2, r0
   11f04:	ldr	r0, [sp, #36]	; 0x24
   11f08:	mov	r3, r1
   11f0c:	cmp	r0, #0
   11f10:	beq	11f84 <__mempcpy_chk@plt+0xf48>
   11f14:	ldr	r0, [sp, #32]
   11f18:	cmp	r0, #0
   11f1c:	beq	11eec <__mempcpy_chk@plt+0xeb0>
   11f20:	stm	sp, {r2, r3}
   11f24:	ldr	r1, [sp, #28]
   11f28:	ldr	r2, [sp, #24]
   11f2c:	b	11fe8 <__mempcpy_chk@plt+0xfac>
   11f30:	mov	r6, #0
   11f34:	mov	r1, r5
   11f38:	b	11be0 <__mempcpy_chk@plt+0xba4>
   11f3c:	ldr	r0, [sp, #48]	; 0x30
   11f40:	ldrb	r2, [r0]
   11f44:	ldr	r0, [sp, #36]	; 0x24
   11f48:	cmp	r0, #0
   11f4c:	beq	11ff4 <__mempcpy_chk@plt+0xfb8>
   11f50:	ldr	r1, [sp, #28]
   11f54:	b	11fe8 <__mempcpy_chk@plt+0xfac>
   11f58:	ldr	r0, [sp, #36]	; 0x24
   11f5c:	cmp	r0, #0
   11f60:	beq	11fd4 <__mempcpy_chk@plt+0xf98>
   11f64:	ldr	r0, [sp, #32]
   11f68:	ldr	r3, [sp, #48]	; 0x30
   11f6c:	cmp	r0, #0
   11f70:	mov	r0, sl
   11f74:	beq	12004 <__mempcpy_chk@plt+0xfc8>
   11f78:	ldr	r1, [sp, #28]
   11f7c:	ldr	r2, [sp, #24]
   11f80:	b	11fb8 <__mempcpy_chk@plt+0xf7c>
   11f84:	ldr	r0, [sp, #32]
   11f88:	cmp	r0, #0
   11f8c:	beq	11f9c <__mempcpy_chk@plt+0xf60>
   11f90:	ldr	r1, [sp, #24]
   11f94:	mov	r0, sl
   11f98:	b	11fb8 <__mempcpy_chk@plt+0xf7c>
   11f9c:	mov	r0, sl
   11fa0:	bl	15828 <__mempcpy_chk@plt+0x47ec>
   11fa4:	b	12010 <__mempcpy_chk@plt+0xfd4>
   11fa8:	ldr	r1, [sp, #28]
   11fac:	mov	r0, sl
   11fb0:	mov	r2, r5
   11fb4:	mov	r3, r6
   11fb8:	bl	15828 <__mempcpy_chk@plt+0x47ec>
   11fbc:	b	12010 <__mempcpy_chk@plt+0xfd4>
   11fc0:	mov	r0, sl
   11fc4:	mov	r2, r5
   11fc8:	mov	r3, r6
   11fcc:	bl	15828 <__mempcpy_chk@plt+0x47ec>
   11fd0:	b	12010 <__mempcpy_chk@plt+0xfd4>
   11fd4:	ldr	r0, [sp, #32]
   11fd8:	ldr	r2, [sp, #48]	; 0x30
   11fdc:	cmp	r0, #0
   11fe0:	beq	11ff4 <__mempcpy_chk@plt+0xfb8>
   11fe4:	ldr	r1, [sp, #24]
   11fe8:	mov	r0, sl
   11fec:	bl	15828 <__mempcpy_chk@plt+0x47ec>
   11ff0:	b	12010 <__mempcpy_chk@plt+0xfd4>
   11ff4:	mov	r0, sl
   11ff8:	mov	r1, r2
   11ffc:	bl	15828 <__mempcpy_chk@plt+0x47ec>
   12000:	b	12010 <__mempcpy_chk@plt+0xfd4>
   12004:	ldr	r1, [sp, #28]
   12008:	mov	r2, r3
   1200c:	bl	15828 <__mempcpy_chk@plt+0x47ec>
   12010:	mov	r0, sl
   12014:	bl	12a18 <__mempcpy_chk@plt+0x19dc>
   12018:	ldr	r7, [sp, #44]	; 0x2c
   1201c:	movw	r6, #28996	; 0x7144
   12020:	add	r5, r9, #1
   12024:	movt	r6, #2
   12028:	b	115c0 <__mempcpy_chk@plt+0x584>
   1202c:	bl	10fd0 <__overflow@plt>
   12030:	b	115fc <__mempcpy_chk@plt+0x5c0>
   12034:	mov	r1, #37	; 0x25
   12038:	bl	10fd0 <__overflow@plt>
   1203c:	add	r5, r9, #1
   12040:	b	115c0 <__mempcpy_chk@plt+0x584>
   12044:	ldr	r0, [sp, #12]
   12048:	ldr	r1, [sp, #16]
   1204c:	cmp	r8, #1
   12050:	sub	r0, r0, r8
   12054:	add	r1, r1, r0, lsl #2
   12058:	blt	12068 <__mempcpy_chk@plt+0x102c>
   1205c:	cmp	r0, #0
   12060:	mov	r0, r8
   12064:	bgt	11588 <__mempcpy_chk@plt+0x54c>
   12068:	cmp	r8, #1
   1206c:	blt	120a8 <__mempcpy_chk@plt+0x106c>
   12070:	mov	r4, r1
   12074:	movw	r1, #26298	; 0x66ba
   12078:	mov	r0, #0
   1207c:	mov	r2, #5
   12080:	movt	r1, #1
   12084:	bl	10e68 <dcgettext@plt>
   12088:	mov	r5, r0
   1208c:	ldr	r0, [r4]
   12090:	bl	14694 <__mempcpy_chk@plt+0x3658>
   12094:	mov	r3, r0
   12098:	mov	r0, #0
   1209c:	mov	r1, #0
   120a0:	mov	r2, r5
   120a4:	bl	10ed4 <error@plt>
   120a8:	movw	r0, #29004	; 0x714c
   120ac:	movt	r0, #2
   120b0:	ldrb	r4, [r0]
   120b4:	mov	r0, r4
   120b8:	sub	sp, fp, #40	; 0x28
   120bc:	vpop	{d8}
   120c0:	add	sp, sp, #4
   120c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120c8:	movw	r1, #26662	; 0x6826
   120cc:	movt	r1, #1
   120d0:	b	120dc <__mempcpy_chk@plt+0x10a0>
   120d4:	movw	r1, #26686	; 0x683e
   120d8:	movt	r1, #1
   120dc:	mov	r0, #0
   120e0:	mov	r2, #5
   120e4:	bl	10e68 <dcgettext@plt>
   120e8:	mov	r4, r0
   120ec:	ldr	r0, [r7]
   120f0:	bl	14694 <__mempcpy_chk@plt+0x3658>
   120f4:	mov	r3, r0
   120f8:	mov	r0, #1
   120fc:	mov	r1, #0
   12100:	mov	r2, r4
   12104:	bl	10ed4 <error@plt>
   12108:	movw	r1, #26708	; 0x6854
   1210c:	mov	r0, #0
   12110:	mov	r2, #5
   12114:	movt	r1, #1
   12118:	bl	10e68 <dcgettext@plt>
   1211c:	mov	r2, r0
   12120:	sub	r0, r9, r5
   12124:	mov	r1, #0
   12128:	str	r5, [sp]
   1212c:	add	r3, r0, #1
   12130:	mov	r0, #1
   12134:	bl	10ed4 <error@plt>
   12138:	movw	r1, #26282	; 0x66aa
   1213c:	mov	r0, #0
   12140:	mov	r2, #5
   12144:	movt	r1, #1
   12148:	bl	10e68 <dcgettext@plt>
   1214c:	mov	r2, r0
   12150:	mov	r0, #0
   12154:	mov	r1, #0
   12158:	bl	10ed4 <error@plt>
   1215c:	mov	r0, #1
   12160:	bl	11138 <__mempcpy_chk@plt+0xfc>
   12164:	mov	r0, #0
   12168:	bl	11138 <__mempcpy_chk@plt+0xfc>
   1216c:	push	{r4, r5, r6, sl, fp, lr}
   12170:	add	fp, sp, #16
   12174:	sub	sp, sp, #8
   12178:	mov	r4, r0
   1217c:	ldrb	r0, [r0]
   12180:	cmp	r0, #39	; 0x27
   12184:	cmpne	r0, #34	; 0x22
   12188:	bne	121ec <__mempcpy_chk@plt+0x11b0>
   1218c:	ldrb	r5, [r4, #1]
   12190:	cmp	r5, #0
   12194:	beq	121ec <__mempcpy_chk@plt+0x11b0>
   12198:	ldrb	r0, [r4, #2]!
   1219c:	mov	r6, #0
   121a0:	cmp	r0, #0
   121a4:	beq	12220 <__mempcpy_chk@plt+0x11e4>
   121a8:	movw	r0, #29005	; 0x714d
   121ac:	movt	r0, #2
   121b0:	ldrb	r0, [r0]
   121b4:	cmp	r0, #0
   121b8:	bne	12220 <__mempcpy_chk@plt+0x11e4>
   121bc:	movw	r1, #26747	; 0x687b
   121c0:	mov	r0, #0
   121c4:	mov	r2, #5
   121c8:	mov	r6, #0
   121cc:	movt	r1, #1
   121d0:	bl	10e68 <dcgettext@plt>
   121d4:	mov	r2, r0
   121d8:	mov	r0, #0
   121dc:	mov	r1, #0
   121e0:	mov	r3, r4
   121e4:	bl	10ed4 <error@plt>
   121e8:	b	12220 <__mempcpy_chk@plt+0x11e4>
   121ec:	bl	10f64 <__errno_location@plt>
   121f0:	mov	r1, #0
   121f4:	mov	r2, #0
   121f8:	mov	r3, #0
   121fc:	str	r1, [r0]
   12200:	add	r1, sp, #4
   12204:	mov	r0, r4
   12208:	bl	1100c <__strtoll_internal@plt>
   1220c:	mov	r6, r1
   12210:	ldr	r1, [sp, #4]
   12214:	mov	r5, r0
   12218:	mov	r0, r4
   1221c:	bl	127e8 <__mempcpy_chk@plt+0x17ac>
   12220:	mov	r0, r5
   12224:	mov	r1, r6
   12228:	sub	sp, fp, #16
   1222c:	pop	{r4, r5, r6, sl, fp, pc}
   12230:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12234:	add	fp, sp, #24
   12238:	sub	sp, sp, #8
   1223c:	mov	r7, r0
   12240:	mov	r8, r0
   12244:	ldrb	r5, [r7, #1]!
   12248:	cmp	r5, #120	; 0x78
   1224c:	bne	122ec <__mempcpy_chk@plt+0x12b0>
   12250:	bl	10f34 <__ctype_b_loc@plt>
   12254:	ldrb	r1, [r8, #2]
   12258:	ldr	r0, [r0]
   1225c:	add	r2, r0, r1, lsl #1
   12260:	ldrb	r2, [r2, #1]
   12264:	tst	r2, #16
   12268:	beq	127bc <__mempcpy_chk@plt+0x1780>
   1226c:	sub	r2, r1, #97	; 0x61
   12270:	uxtb	r3, r2
   12274:	mvn	r2, #86	; 0x56
   12278:	cmp	r3, #6
   1227c:	bcc	12294 <__mempcpy_chk@plt+0x1258>
   12280:	sub	r2, r1, #65	; 0x41
   12284:	uxtb	r3, r2
   12288:	mvn	r2, #47	; 0x2f
   1228c:	cmp	r3, #6
   12290:	mvncc	r2, #54	; 0x36
   12294:	mov	r7, r8
   12298:	add	r1, r2, r1
   1229c:	ldrb	r2, [r7, #3]!
   122a0:	add	r0, r0, r2, lsl #1
   122a4:	ldrb	r0, [r0, #1]
   122a8:	tst	r0, #16
   122ac:	beq	12350 <__mempcpy_chk@plt+0x1314>
   122b0:	lsl	r0, r1, #4
   122b4:	sub	r1, r2, #97	; 0x61
   122b8:	uxtb	r3, r1
   122bc:	mvn	r1, #86	; 0x56
   122c0:	cmp	r3, #6
   122c4:	bcc	122dc <__mempcpy_chk@plt+0x12a0>
   122c8:	sub	r1, r2, #65	; 0x41
   122cc:	uxtb	r3, r1
   122d0:	mvn	r1, #47	; 0x2f
   122d4:	cmp	r3, #6
   122d8:	mvncc	r1, #54	; 0x36
   122dc:	add	r1, r1, r2
   122e0:	add	r7, r8, #4
   122e4:	add	r1, r1, r0
   122e8:	b	12350 <__mempcpy_chk@plt+0x1314>
   122ec:	and	r0, r5, #248	; 0xf8
   122f0:	cmp	r0, #48	; 0x30
   122f4:	bne	12388 <__mempcpy_chk@plt+0x134c>
   122f8:	sub	r0, r5, #48	; 0x30
   122fc:	clz	r0, r0
   12300:	lsr	r0, r0, #5
   12304:	and	r0, r0, r1
   12308:	mov	r1, #0
   1230c:	ldrb	r0, [r7, r0]!
   12310:	and	r2, r0, #248	; 0xf8
   12314:	cmp	r2, #48	; 0x30
   12318:	bne	12350 <__mempcpy_chk@plt+0x1314>
   1231c:	sub	r1, r0, #48	; 0x30
   12320:	ldrb	r0, [r7, #1]!
   12324:	and	r2, r0, #248	; 0xf8
   12328:	cmp	r2, #48	; 0x30
   1232c:	bne	12350 <__mempcpy_chk@plt+0x1314>
   12330:	add	r0, r0, r1, lsl #3
   12334:	sub	r1, r0, #48	; 0x30
   12338:	ldrb	r0, [r7, #1]!
   1233c:	and	r2, r0, #248	; 0xf8
   12340:	cmp	r2, #48	; 0x30
   12344:	addeq	r0, r0, r1, lsl #3
   12348:	addeq	r7, r7, #1
   1234c:	subeq	r1, r0, #48	; 0x30
   12350:	movw	r0, #28996	; 0x7144
   12354:	movt	r0, #2
   12358:	ldr	r0, [r0]
   1235c:	ldr	r2, [r0, #20]
   12360:	ldr	r3, [r0, #24]
   12364:	cmp	r2, r3
   12368:	bcs	12730 <__mempcpy_chk@plt+0x16f4>
   1236c:	add	r3, r2, #1
   12370:	str	r3, [r0, #20]
   12374:	strb	r1, [r2]
   12378:	mvn	r0, r8
   1237c:	add	r0, r7, r0
   12380:	sub	sp, fp, #24
   12384:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12388:	cmp	r5, #0
   1238c:	beq	124d8 <__mempcpy_chk@plt+0x149c>
   12390:	movw	r0, #26927	; 0x692f
   12394:	mov	r1, r5
   12398:	mov	r2, #12
   1239c:	movt	r0, #1
   123a0:	bl	10fac <memchr@plt>
   123a4:	cmp	r0, #0
   123a8:	beq	1244c <__mempcpy_chk@plt+0x1410>
   123ac:	sub	r0, r5, #97	; 0x61
   123b0:	add	r7, r8, #2
   123b4:	cmp	r0, #21
   123b8:	bhi	126cc <__mempcpy_chk@plt+0x1690>
   123bc:	add	r1, pc, #0
   123c0:	ldr	pc, [r1, r0, lsl #2]
   123c4:	andeq	r2, r1, ip, lsl r4
   123c8:	andeq	r2, r1, ip, lsr #11
   123cc:	andeq	r2, r1, r0, ror #15
   123d0:	andeq	r2, r1, ip, asr #13
   123d4:	andeq	r2, r1, ip, lsr r6
   123d8:	andeq	r2, r1, ip, ror #12
   123dc:	andeq	r2, r1, ip, asr #13
   123e0:	andeq	r2, r1, ip, asr #13
   123e4:	andeq	r2, r1, ip, asr #13
   123e8:	andeq	r2, r1, ip, asr #13
   123ec:	andeq	r2, r1, ip, asr #13
   123f0:	andeq	r2, r1, ip, asr #13
   123f4:	andeq	r2, r1, ip, asr #13
   123f8:	muleq	r1, ip, r6
   123fc:	andeq	r2, r1, ip, asr #13
   12400:	andeq	r2, r1, ip, asr #13
   12404:	andeq	r2, r1, ip, asr #13
   12408:	andeq	r2, r1, ip, ror r5
   1240c:	andeq	r2, r1, ip, asr #13
   12410:	ldrdeq	r2, [r1], -ip
   12414:	andeq	r2, r1, ip, asr #13
   12418:	andeq	r2, r1, ip, lsl #12
   1241c:	movw	r0, #28996	; 0x7144
   12420:	movt	r0, #2
   12424:	ldr	r0, [r0]
   12428:	ldr	r1, [r0, #20]
   1242c:	ldr	r2, [r0, #24]
   12430:	cmp	r1, r2
   12434:	bcs	12750 <__mempcpy_chk@plt+0x1714>
   12438:	add	r2, r1, #1
   1243c:	str	r2, [r0, #20]
   12440:	mov	r0, #7
   12444:	strb	r0, [r1]
   12448:	b	12378 <__mempcpy_chk@plt+0x133c>
   1244c:	orr	r0, r5, #32
   12450:	cmp	r0, #117	; 0x75
   12454:	bne	124d8 <__mempcpy_chk@plt+0x149c>
   12458:	cmp	r5, #117	; 0x75
   1245c:	mov	r9, #8
   12460:	add	r4, r8, #2
   12464:	movweq	r9, #4
   12468:	bl	10f34 <__ctype_b_loc@plt>
   1246c:	ldr	r1, [r0]
   12470:	mov	r0, #0
   12474:	mov	r6, #0
   12478:	b	12494 <__mempcpy_chk@plt+0x1458>
   1247c:	add	r2, r6, r2
   12480:	sub	r0, r0, #1
   12484:	add	r6, r2, r3
   12488:	add	r2, r9, r0
   1248c:	cmp	r2, #0
   12490:	ble	12538 <__mempcpy_chk@plt+0x14fc>
   12494:	ldrb	r2, [r4, -r0]
   12498:	add	r3, r1, r2, lsl #1
   1249c:	ldrb	r3, [r3, #1]
   124a0:	tst	r3, #16
   124a4:	beq	127bc <__mempcpy_chk@plt+0x1780>
   124a8:	lsl	r3, r6, #4
   124ac:	sub	r6, r2, #97	; 0x61
   124b0:	uxtb	r7, r6
   124b4:	mvn	r6, #86	; 0x56
   124b8:	cmp	r7, #6
   124bc:	bcc	1247c <__mempcpy_chk@plt+0x1440>
   124c0:	sub	r7, r2, #65	; 0x41
   124c4:	mvn	r6, #47	; 0x2f
   124c8:	uxtb	r7, r7
   124cc:	cmp	r7, #6
   124d0:	mvncc	r6, #54	; 0x36
   124d4:	b	1247c <__mempcpy_chk@plt+0x1440>
   124d8:	movw	r4, #28996	; 0x7144
   124dc:	movt	r4, #2
   124e0:	ldr	r0, [r4]
   124e4:	ldr	r1, [r0, #20]
   124e8:	ldr	r2, [r0, #24]
   124ec:	cmp	r1, r2
   124f0:	bcs	1273c <__mempcpy_chk@plt+0x1700>
   124f4:	add	r2, r1, #1
   124f8:	str	r2, [r0, #20]
   124fc:	mov	r0, #92	; 0x5c
   12500:	strb	r0, [r1]
   12504:	ldrb	r1, [r7]
   12508:	cmp	r1, #0
   1250c:	beq	12378 <__mempcpy_chk@plt+0x133c>
   12510:	ldr	r0, [r4]
   12514:	ldr	r2, [r0, #20]
   12518:	ldr	r3, [r0, #24]
   1251c:	cmp	r2, r3
   12520:	bcs	12748 <__mempcpy_chk@plt+0x170c>
   12524:	add	r3, r2, #1
   12528:	str	r3, [r0, #20]
   1252c:	strb	r1, [r2]
   12530:	add	r7, r8, #2
   12534:	b	12378 <__mempcpy_chk@plt+0x133c>
   12538:	cmp	r6, #159	; 0x9f
   1253c:	bhi	1254c <__mempcpy_chk@plt+0x1510>
   12540:	cmp	r6, #36	; 0x24
   12544:	cmpne	r6, #96	; 0x60
   12548:	bne	126f8 <__mempcpy_chk@plt+0x16bc>
   1254c:	mov	r1, r6
   12550:	bfc	r1, #0, #11
   12554:	cmp	r1, #55296	; 0xd800
   12558:	beq	12700 <__mempcpy_chk@plt+0x16c4>
   1255c:	sub	r7, r4, r0
   12560:	movw	r0, #28996	; 0x7144
   12564:	mov	r1, r6
   12568:	mov	r2, #0
   1256c:	movt	r0, #2
   12570:	ldr	r0, [r0]
   12574:	bl	14a08 <__mempcpy_chk@plt+0x39cc>
   12578:	b	12378 <__mempcpy_chk@plt+0x133c>
   1257c:	movw	r0, #28996	; 0x7144
   12580:	movt	r0, #2
   12584:	ldr	r0, [r0]
   12588:	ldr	r1, [r0, #20]
   1258c:	ldr	r2, [r0, #24]
   12590:	cmp	r1, r2
   12594:	bcs	1275c <__mempcpy_chk@plt+0x1720>
   12598:	add	r2, r1, #1
   1259c:	str	r2, [r0, #20]
   125a0:	mov	r0, #13
   125a4:	strb	r0, [r1]
   125a8:	b	12378 <__mempcpy_chk@plt+0x133c>
   125ac:	movw	r0, #28996	; 0x7144
   125b0:	movt	r0, #2
   125b4:	ldr	r0, [r0]
   125b8:	ldr	r1, [r0, #20]
   125bc:	ldr	r2, [r0, #24]
   125c0:	cmp	r1, r2
   125c4:	bcs	12768 <__mempcpy_chk@plt+0x172c>
   125c8:	add	r2, r1, #1
   125cc:	str	r2, [r0, #20]
   125d0:	mov	r0, #8
   125d4:	strb	r0, [r1]
   125d8:	b	12378 <__mempcpy_chk@plt+0x133c>
   125dc:	movw	r0, #28996	; 0x7144
   125e0:	movt	r0, #2
   125e4:	ldr	r0, [r0]
   125e8:	ldr	r1, [r0, #20]
   125ec:	ldr	r2, [r0, #24]
   125f0:	cmp	r1, r2
   125f4:	bcs	12774 <__mempcpy_chk@plt+0x1738>
   125f8:	add	r2, r1, #1
   125fc:	str	r2, [r0, #20]
   12600:	mov	r0, #9
   12604:	strb	r0, [r1]
   12608:	b	12378 <__mempcpy_chk@plt+0x133c>
   1260c:	movw	r0, #28996	; 0x7144
   12610:	movt	r0, #2
   12614:	ldr	r0, [r0]
   12618:	ldr	r1, [r0, #20]
   1261c:	ldr	r2, [r0, #24]
   12620:	cmp	r1, r2
   12624:	bcs	12780 <__mempcpy_chk@plt+0x1744>
   12628:	add	r2, r1, #1
   1262c:	str	r2, [r0, #20]
   12630:	mov	r0, #11
   12634:	strb	r0, [r1]
   12638:	b	12378 <__mempcpy_chk@plt+0x133c>
   1263c:	movw	r0, #28996	; 0x7144
   12640:	movt	r0, #2
   12644:	ldr	r0, [r0]
   12648:	ldr	r1, [r0, #20]
   1264c:	ldr	r2, [r0, #24]
   12650:	cmp	r1, r2
   12654:	bcs	1278c <__mempcpy_chk@plt+0x1750>
   12658:	add	r2, r1, #1
   1265c:	str	r2, [r0, #20]
   12660:	mov	r0, #27
   12664:	strb	r0, [r1]
   12668:	b	12378 <__mempcpy_chk@plt+0x133c>
   1266c:	movw	r0, #28996	; 0x7144
   12670:	movt	r0, #2
   12674:	ldr	r0, [r0]
   12678:	ldr	r1, [r0, #20]
   1267c:	ldr	r2, [r0, #24]
   12680:	cmp	r1, r2
   12684:	bcs	12798 <__mempcpy_chk@plt+0x175c>
   12688:	add	r2, r1, #1
   1268c:	str	r2, [r0, #20]
   12690:	mov	r0, #12
   12694:	strb	r0, [r1]
   12698:	b	12378 <__mempcpy_chk@plt+0x133c>
   1269c:	movw	r0, #28996	; 0x7144
   126a0:	movt	r0, #2
   126a4:	ldr	r0, [r0]
   126a8:	ldr	r1, [r0, #20]
   126ac:	ldr	r2, [r0, #24]
   126b0:	cmp	r1, r2
   126b4:	bcs	127a4 <__mempcpy_chk@plt+0x1768>
   126b8:	add	r2, r1, #1
   126bc:	str	r2, [r0, #20]
   126c0:	mov	r0, #10
   126c4:	strb	r0, [r1]
   126c8:	b	12378 <__mempcpy_chk@plt+0x133c>
   126cc:	movw	r0, #28996	; 0x7144
   126d0:	movt	r0, #2
   126d4:	ldr	r0, [r0]
   126d8:	ldr	r1, [r0, #20]
   126dc:	ldr	r2, [r0, #24]
   126e0:	cmp	r1, r2
   126e4:	bcs	127b0 <__mempcpy_chk@plt+0x1774>
   126e8:	add	r2, r1, #1
   126ec:	str	r2, [r0, #20]
   126f0:	strb	r5, [r1]
   126f4:	b	12378 <__mempcpy_chk@plt+0x133c>
   126f8:	cmp	r6, #64	; 0x40
   126fc:	beq	1254c <__mempcpy_chk@plt+0x1510>
   12700:	movw	r1, #26939	; 0x693b
   12704:	mov	r0, #0
   12708:	mov	r2, #5
   1270c:	movt	r1, #1
   12710:	bl	10e68 <dcgettext@plt>
   12714:	mov	r2, r0
   12718:	mov	r0, #1
   1271c:	mov	r1, #0
   12720:	mov	r3, r5
   12724:	str	r9, [sp]
   12728:	str	r6, [sp, #4]
   1272c:	bl	10ed4 <error@plt>
   12730:	uxtb	r1, r1
   12734:	bl	10fd0 <__overflow@plt>
   12738:	b	12378 <__mempcpy_chk@plt+0x133c>
   1273c:	mov	r1, #92	; 0x5c
   12740:	bl	10fd0 <__overflow@plt>
   12744:	b	12504 <__mempcpy_chk@plt+0x14c8>
   12748:	bl	10fd0 <__overflow@plt>
   1274c:	b	12530 <__mempcpy_chk@plt+0x14f4>
   12750:	mov	r1, #7
   12754:	bl	10fd0 <__overflow@plt>
   12758:	b	12378 <__mempcpy_chk@plt+0x133c>
   1275c:	mov	r1, #13
   12760:	bl	10fd0 <__overflow@plt>
   12764:	b	12378 <__mempcpy_chk@plt+0x133c>
   12768:	mov	r1, #8
   1276c:	bl	10fd0 <__overflow@plt>
   12770:	b	12378 <__mempcpy_chk@plt+0x133c>
   12774:	mov	r1, #9
   12778:	bl	10fd0 <__overflow@plt>
   1277c:	b	12378 <__mempcpy_chk@plt+0x133c>
   12780:	mov	r1, #11
   12784:	bl	10fd0 <__overflow@plt>
   12788:	b	12378 <__mempcpy_chk@plt+0x133c>
   1278c:	mov	r1, #27
   12790:	bl	10fd0 <__overflow@plt>
   12794:	b	12378 <__mempcpy_chk@plt+0x133c>
   12798:	mov	r1, #12
   1279c:	bl	10fd0 <__overflow@plt>
   127a0:	b	12378 <__mempcpy_chk@plt+0x133c>
   127a4:	mov	r1, #10
   127a8:	bl	10fd0 <__overflow@plt>
   127ac:	b	12378 <__mempcpy_chk@plt+0x133c>
   127b0:	mov	r1, r5
   127b4:	bl	10fd0 <__overflow@plt>
   127b8:	b	12378 <__mempcpy_chk@plt+0x133c>
   127bc:	movw	r1, #26890	; 0x690a
   127c0:	mov	r0, #0
   127c4:	mov	r2, #5
   127c8:	movt	r1, #1
   127cc:	bl	10e68 <dcgettext@plt>
   127d0:	mov	r2, r0
   127d4:	mov	r0, #1
   127d8:	mov	r1, #0
   127dc:	bl	10ed4 <error@plt>
   127e0:	mov	r0, #0
   127e4:	bl	10f40 <exit@plt>
   127e8:	push	{r4, r5, r6, sl, fp, lr}
   127ec:	add	fp, sp, #16
   127f0:	mov	r5, r1
   127f4:	mov	r4, r0
   127f8:	bl	10f64 <__errno_location@plt>
   127fc:	ldr	r6, [r0]
   12800:	cmp	r6, #0
   12804:	beq	12828 <__mempcpy_chk@plt+0x17ec>
   12808:	mov	r0, r4
   1280c:	bl	14694 <__mempcpy_chk@plt+0x3658>
   12810:	movw	r2, #26683	; 0x683b
   12814:	mov	r3, r0
   12818:	mov	r0, #0
   1281c:	mov	r1, r6
   12820:	movt	r2, #1
   12824:	b	12874 <__mempcpy_chk@plt+0x1838>
   12828:	ldrb	r0, [r5]
   1282c:	cmp	r0, #0
   12830:	beq	12888 <__mempcpy_chk@plt+0x184c>
   12834:	movw	r0, #26820	; 0x68c4
   12838:	movw	r1, #26849	; 0x68e1
   1283c:	cmp	r4, r5
   12840:	mov	r2, #5
   12844:	movt	r0, #1
   12848:	movt	r1, #1
   1284c:	moveq	r1, r0
   12850:	mov	r0, #0
   12854:	bl	10e68 <dcgettext@plt>
   12858:	mov	r5, r0
   1285c:	mov	r0, r4
   12860:	bl	14694 <__mempcpy_chk@plt+0x3658>
   12864:	mov	r3, r0
   12868:	mov	r0, #0
   1286c:	mov	r1, #0
   12870:	mov	r2, r5
   12874:	bl	10ed4 <error@plt>
   12878:	movw	r0, #29004	; 0x714c
   1287c:	mov	r1, #1
   12880:	movt	r0, #2
   12884:	strb	r1, [r0]
   12888:	pop	{r4, r5, r6, sl, fp, pc}
   1288c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12890:	add	fp, sp, #24
   12894:	vpush	{d8}
   12898:	sub	sp, sp, #8
   1289c:	mov	r4, r1
   128a0:	add	r1, sp, #4
   128a4:	mov	r5, r0
   128a8:	bl	10e5c <strtold@plt>
   128ac:	ldr	r7, [sp, #4]
   128b0:	vmov.f64	d8, d0
   128b4:	ldrb	r0, [r7]
   128b8:	cmp	r0, #0
   128bc:	beq	128f8 <__mempcpy_chk@plt+0x18bc>
   128c0:	bl	10f64 <__errno_location@plt>
   128c4:	ldr	r8, [r0]
   128c8:	mov	r6, r0
   128cc:	mov	r1, sp
   128d0:	mov	r0, r5
   128d4:	bl	15b48 <__mempcpy_chk@plt+0x4b0c>
   128d8:	ldr	r0, [sp]
   128dc:	cmp	r7, r0
   128e0:	bcs	128f4 <__mempcpy_chk@plt+0x18b8>
   128e4:	str	r0, [sp, #4]
   128e8:	mov	r7, r0
   128ec:	vmov.f64	d8, d0
   128f0:	b	128f8 <__mempcpy_chk@plt+0x18bc>
   128f4:	str	r8, [r6]
   128f8:	cmp	r4, #0
   128fc:	vmov.f64	d0, d8
   12900:	strne	r7, [r4]
   12904:	sub	sp, fp, #32
   12908:	vpop	{d8}
   1290c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12910:	movw	r1, #29008	; 0x7150
   12914:	movt	r1, #2
   12918:	str	r0, [r1]
   1291c:	bx	lr
   12920:	movw	r1, #29012	; 0x7154
   12924:	movt	r1, #2
   12928:	strb	r0, [r1]
   1292c:	bx	lr
   12930:	push	{r4, r5, r6, sl, fp, lr}
   12934:	add	fp, sp, #16
   12938:	sub	sp, sp, #8
   1293c:	movw	r0, #28996	; 0x7144
   12940:	movt	r0, #2
   12944:	ldr	r0, [r0]
   12948:	bl	15bf4 <__mempcpy_chk@plt+0x4bb8>
   1294c:	cmp	r0, #0
   12950:	beq	12978 <__mempcpy_chk@plt+0x193c>
   12954:	movw	r0, #29012	; 0x7154
   12958:	movt	r0, #2
   1295c:	ldrb	r0, [r0]
   12960:	cmp	r0, #0
   12964:	beq	12998 <__mempcpy_chk@plt+0x195c>
   12968:	bl	10f64 <__errno_location@plt>
   1296c:	ldr	r0, [r0]
   12970:	cmp	r0, #32
   12974:	bne	12998 <__mempcpy_chk@plt+0x195c>
   12978:	movw	r0, #28992	; 0x7140
   1297c:	movt	r0, #2
   12980:	ldr	r0, [r0]
   12984:	bl	15bf4 <__mempcpy_chk@plt+0x4bb8>
   12988:	cmp	r0, #0
   1298c:	subeq	sp, fp, #16
   12990:	popeq	{r4, r5, r6, sl, fp, pc}
   12994:	b	12a08 <__mempcpy_chk@plt+0x19cc>
   12998:	movw	r1, #27055	; 0x69af
   1299c:	mov	r0, #0
   129a0:	mov	r2, #5
   129a4:	movt	r1, #1
   129a8:	bl	10e68 <dcgettext@plt>
   129ac:	mov	r4, r0
   129b0:	movw	r0, #29008	; 0x7150
   129b4:	movt	r0, #2
   129b8:	ldr	r6, [r0]
   129bc:	bl	10f64 <__errno_location@plt>
   129c0:	ldr	r5, [r0]
   129c4:	cmp	r6, #0
   129c8:	bne	129e4 <__mempcpy_chk@plt+0x19a8>
   129cc:	movw	r2, #26683	; 0x683b
   129d0:	mov	r0, #0
   129d4:	mov	r1, r5
   129d8:	mov	r3, r4
   129dc:	movt	r2, #1
   129e0:	b	12a04 <__mempcpy_chk@plt+0x19c8>
   129e4:	mov	r0, r6
   129e8:	bl	1430c <__mempcpy_chk@plt+0x32d0>
   129ec:	movw	r2, #27067	; 0x69bb
   129f0:	mov	r3, r0
   129f4:	str	r4, [sp]
   129f8:	mov	r0, #0
   129fc:	mov	r1, r5
   12a00:	movt	r2, #1
   12a04:	bl	10ed4 <error@plt>
   12a08:	movw	r0, #28916	; 0x70f4
   12a0c:	movt	r0, #2
   12a10:	ldr	r0, [r0]
   12a14:	bl	10e2c <_exit@plt>
   12a18:	push	{r4, r5, r6, sl, fp, lr}
   12a1c:	add	fp, sp, #16
   12a20:	mov	r4, r0
   12a24:	bl	10f64 <__errno_location@plt>
   12a28:	ldr	r6, [r0]
   12a2c:	mov	r5, r0
   12a30:	mov	r0, r4
   12a34:	bl	10e14 <free@plt>
   12a38:	str	r6, [r5]
   12a3c:	pop	{r4, r5, r6, sl, fp, pc}
   12a40:	push	{r4, r5, fp, lr}
   12a44:	add	fp, sp, #8
   12a48:	cmp	r0, #0
   12a4c:	beq	12ae0 <__mempcpy_chk@plt+0x1aa4>
   12a50:	mov	r1, #47	; 0x2f
   12a54:	mov	r4, r0
   12a58:	bl	10fe8 <strrchr@plt>
   12a5c:	cmp	r0, #0
   12a60:	mov	r5, r4
   12a64:	addne	r5, r0, #1
   12a68:	sub	r0, r5, r4
   12a6c:	cmp	r0, #7
   12a70:	blt	12ac4 <__mempcpy_chk@plt+0x1a88>
   12a74:	movw	r1, #27130	; 0x69fa
   12a78:	sub	r0, r5, #7
   12a7c:	mov	r2, #7
   12a80:	movt	r1, #1
   12a84:	bl	11024 <strncmp@plt>
   12a88:	cmp	r0, #0
   12a8c:	bne	12ac4 <__mempcpy_chk@plt+0x1a88>
   12a90:	movw	r1, #27138	; 0x6a02
   12a94:	mov	r0, r5
   12a98:	mov	r2, #3
   12a9c:	movt	r1, #1
   12aa0:	bl	11024 <strncmp@plt>
   12aa4:	cmp	r0, #0
   12aa8:	beq	12ab4 <__mempcpy_chk@plt+0x1a78>
   12aac:	mov	r4, r5
   12ab0:	b	12ac4 <__mempcpy_chk@plt+0x1a88>
   12ab4:	movw	r0, #28984	; 0x7138
   12ab8:	add	r4, r5, #3
   12abc:	movt	r0, #2
   12ac0:	str	r4, [r0]
   12ac4:	movw	r0, #28988	; 0x713c
   12ac8:	movt	r0, #2
   12acc:	str	r4, [r0]
   12ad0:	movw	r0, #29016	; 0x7158
   12ad4:	movt	r0, #2
   12ad8:	str	r4, [r0]
   12adc:	pop	{r4, r5, fp, pc}
   12ae0:	movw	r0, #28992	; 0x7140
   12ae4:	mov	r1, #55	; 0x37
   12ae8:	mov	r2, #1
   12aec:	movt	r0, #2
   12af0:	ldr	r3, [r0]
   12af4:	movw	r0, #27074	; 0x69c2
   12af8:	movt	r0, #1
   12afc:	bl	10e98 <fwrite@plt>
   12b00:	bl	11030 <abort@plt>
   12b04:	push	{r4, r5, r6, sl, fp, lr}
   12b08:	add	fp, sp, #16
   12b0c:	mov	r4, r0
   12b10:	movw	r0, #29024	; 0x7160
   12b14:	movt	r0, #2
   12b18:	cmp	r4, #0
   12b1c:	moveq	r4, r0
   12b20:	bl	10f64 <__errno_location@plt>
   12b24:	ldr	r6, [r0]
   12b28:	mov	r5, r0
   12b2c:	mov	r0, r4
   12b30:	mov	r1, #48	; 0x30
   12b34:	bl	15708 <__mempcpy_chk@plt+0x46cc>
   12b38:	str	r6, [r5]
   12b3c:	pop	{r4, r5, r6, sl, fp, pc}
   12b40:	movw	r1, #29024	; 0x7160
   12b44:	cmp	r0, #0
   12b48:	movt	r1, #2
   12b4c:	movne	r1, r0
   12b50:	ldr	r0, [r1]
   12b54:	bx	lr
   12b58:	movw	r2, #29024	; 0x7160
   12b5c:	cmp	r0, #0
   12b60:	movt	r2, #2
   12b64:	movne	r2, r0
   12b68:	str	r1, [r2]
   12b6c:	bx	lr
   12b70:	movw	r3, #29024	; 0x7160
   12b74:	cmp	r0, #0
   12b78:	and	r2, r2, #1
   12b7c:	movt	r3, #2
   12b80:	movne	r3, r0
   12b84:	ubfx	r0, r1, #5, #3
   12b88:	and	r1, r1, #31
   12b8c:	add	ip, r3, r0, lsl #2
   12b90:	mov	r0, #1
   12b94:	ldr	r3, [ip, #8]
   12b98:	and	r0, r0, r3, lsr r1
   12b9c:	eor	r2, r0, r2
   12ba0:	eor	r1, r3, r2, lsl r1
   12ba4:	str	r1, [ip, #8]
   12ba8:	bx	lr
   12bac:	movw	r2, #29024	; 0x7160
   12bb0:	cmp	r0, #0
   12bb4:	movt	r2, #2
   12bb8:	movne	r2, r0
   12bbc:	ldr	r0, [r2, #4]
   12bc0:	str	r1, [r2, #4]
   12bc4:	bx	lr
   12bc8:	push	{fp, lr}
   12bcc:	mov	fp, sp
   12bd0:	movw	r3, #29024	; 0x7160
   12bd4:	cmp	r0, #0
   12bd8:	movt	r3, #2
   12bdc:	movne	r3, r0
   12be0:	cmp	r1, #0
   12be4:	mov	r0, #10
   12be8:	cmpne	r2, #0
   12bec:	str	r0, [r3]
   12bf0:	bne	12bf8 <__mempcpy_chk@plt+0x1bbc>
   12bf4:	bl	11030 <abort@plt>
   12bf8:	str	r1, [r3, #40]	; 0x28
   12bfc:	str	r2, [r3, #44]	; 0x2c
   12c00:	pop	{fp, pc}
   12c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c08:	add	fp, sp, #28
   12c0c:	sub	sp, sp, #20
   12c10:	mov	r7, r0
   12c14:	ldr	r0, [fp, #8]
   12c18:	movw	r5, #29024	; 0x7160
   12c1c:	mov	r8, r3
   12c20:	mov	r9, r2
   12c24:	mov	sl, r1
   12c28:	movt	r5, #2
   12c2c:	cmp	r0, #0
   12c30:	movne	r5, r0
   12c34:	bl	10f64 <__errno_location@plt>
   12c38:	ldr	r2, [r5, #40]	; 0x28
   12c3c:	ldr	r3, [r5, #44]	; 0x2c
   12c40:	mov	r4, r0
   12c44:	ldm	r5, {r0, r1}
   12c48:	add	r5, r5, #8
   12c4c:	ldr	r6, [r4]
   12c50:	stm	sp, {r0, r1, r5}
   12c54:	mov	r0, r7
   12c58:	mov	r1, sl
   12c5c:	str	r2, [sp, #12]
   12c60:	str	r3, [sp, #16]
   12c64:	mov	r2, r9
   12c68:	mov	r3, r8
   12c6c:	bl	12c7c <__mempcpy_chk@plt+0x1c40>
   12c70:	str	r6, [r4]
   12c74:	sub	sp, fp, #28
   12c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c80:	add	fp, sp, #28
   12c84:	sub	sp, sp, #156	; 0x9c
   12c88:	mov	r5, r0
   12c8c:	add	r0, r2, #1
   12c90:	mov	r6, r1
   12c94:	mov	sl, r3
   12c98:	str	r2, [fp, #-80]	; 0xffffffb0
   12c9c:	str	r0, [sp, #72]	; 0x48
   12ca0:	ldr	r0, [fp, #12]
   12ca4:	and	r1, r0, #1
   12ca8:	str	r1, [sp, #36]	; 0x24
   12cac:	and	r1, r0, #4
   12cb0:	str	r1, [sp, #32]
   12cb4:	ubfx	r9, r0, #1, #1
   12cb8:	bl	10eb0 <__ctype_get_mb_cur_max@plt>
   12cbc:	str	r0, [sp, #40]	; 0x28
   12cc0:	ldr	r0, [fp, #24]
   12cc4:	ldr	r7, [fp, #8]
   12cc8:	mov	r1, #0
   12ccc:	str	r5, [fp, #-84]	; 0xffffffac
   12cd0:	str	r1, [fp, #-56]	; 0xffffffc8
   12cd4:	mov	r1, #0
   12cd8:	str	r1, [sp, #60]	; 0x3c
   12cdc:	mov	r1, #1
   12ce0:	str	r1, [fp, #-48]	; 0xffffffd0
   12ce4:	str	r0, [sp, #80]	; 0x50
   12ce8:	ldr	r0, [fp, #20]
   12cec:	str	r0, [sp, #76]	; 0x4c
   12cf0:	mov	r0, #0
   12cf4:	str	r0, [sp, #56]	; 0x38
   12cf8:	mov	r0, #0
   12cfc:	str	r0, [fp, #-88]	; 0xffffffa8
   12d00:	mov	r0, #0
   12d04:	str	r0, [fp, #-72]	; 0xffffffb8
   12d08:	mov	r0, #0
   12d0c:	cmp	r7, #10
   12d10:	bhi	13ca4 <__mempcpy_chk@plt+0x2c68>
   12d14:	add	r1, pc, #24
   12d18:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12d1c:	mov	r4, r6
   12d20:	mov	r8, #0
   12d24:	mov	r2, #1
   12d28:	mov	r3, #0
   12d2c:	mov	lr, sl
   12d30:	ldr	pc, [r1, r7, lsl #2]
   12d34:	strdeq	r2, [r1], -r8
   12d38:	andeq	r2, r1, ip, asr #28
   12d3c:	andeq	r2, r1, ip, lsl #28
   12d40:	strdeq	r2, [r1], -r0
   12d44:	andeq	r2, r1, r0, asr #28
   12d48:	andeq	r2, r1, r4, ror lr
   12d4c:	andeq	r2, r1, ip, lsl lr
   12d50:	strdeq	r2, [r1], -r8
   12d54:	andeq	r2, r1, r0, ror #26
   12d58:	andeq	r2, r1, r0, ror #26
   12d5c:	andeq	r2, r1, r8, lsl #27
   12d60:	movw	r0, #27222	; 0x6a56
   12d64:	mov	r1, r7
   12d68:	movt	r0, #1
   12d6c:	bl	146ac <__mempcpy_chk@plt+0x3670>
   12d70:	str	r0, [sp, #76]	; 0x4c
   12d74:	movw	r0, #27224	; 0x6a58
   12d78:	mov	r1, r7
   12d7c:	movt	r0, #1
   12d80:	bl	146ac <__mempcpy_chk@plt+0x3670>
   12d84:	str	r0, [sp, #80]	; 0x50
   12d88:	mov	r8, #0
   12d8c:	tst	r9, #1
   12d90:	bne	12dc8 <__mempcpy_chk@plt+0x1d8c>
   12d94:	ldr	r0, [sp, #76]	; 0x4c
   12d98:	ldrb	r0, [r0]
   12d9c:	cmp	r0, #0
   12da0:	beq	12dc8 <__mempcpy_chk@plt+0x1d8c>
   12da4:	ldr	r1, [sp, #76]	; 0x4c
   12da8:	mov	r8, #0
   12dac:	add	r1, r1, #1
   12db0:	cmp	r8, r4
   12db4:	strbcc	r0, [r5, r8]
   12db8:	ldrb	r0, [r1, r8]
   12dbc:	add	r8, r8, #1
   12dc0:	cmp	r0, #0
   12dc4:	bne	12db0 <__mempcpy_chk@plt+0x1d74>
   12dc8:	ldr	r6, [sp, #80]	; 0x50
   12dcc:	mov	r0, r6
   12dd0:	bl	10f58 <strlen@plt>
   12dd4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12dd8:	str	r0, [fp, #-72]	; 0xffffffb8
   12ddc:	str	r6, [fp, #-88]	; 0xffffffa8
   12de0:	mov	r2, #1
   12de4:	mov	r3, r9
   12de8:	mov	lr, sl
   12dec:	b	12ef8 <__mempcpy_chk@plt+0x1ebc>
   12df0:	mov	r0, #1
   12df4:	b	12e4c <__mempcpy_chk@plt+0x1e10>
   12df8:	mov	r7, #0
   12dfc:	mov	r8, #0
   12e00:	mov	r2, r0
   12e04:	mov	r3, #0
   12e08:	b	12ef8 <__mempcpy_chk@plt+0x1ebc>
   12e0c:	tst	r9, #1
   12e10:	bne	12e4c <__mempcpy_chk@plt+0x1e10>
   12e14:	mov	r2, r0
   12e18:	b	12ea4 <__mempcpy_chk@plt+0x1e68>
   12e1c:	mov	r0, #1
   12e20:	mov	r8, #0
   12e24:	mov	r7, #5
   12e28:	mov	r2, #1
   12e2c:	str	r0, [fp, #-72]	; 0xffffffb8
   12e30:	movw	r0, #27220	; 0x6a54
   12e34:	movt	r0, #1
   12e38:	str	r0, [fp, #-88]	; 0xffffffa8
   12e3c:	b	12e6c <__mempcpy_chk@plt+0x1e30>
   12e40:	mov	r2, #1
   12e44:	tst	r9, #1
   12e48:	beq	12ea4 <__mempcpy_chk@plt+0x1e68>
   12e4c:	mov	r1, #1
   12e50:	mov	r8, #0
   12e54:	mov	r7, #2
   12e58:	mov	r2, r0
   12e5c:	str	r1, [fp, #-72]	; 0xffffffb8
   12e60:	movw	r1, #27224	; 0x6a58
   12e64:	movt	r1, #1
   12e68:	str	r1, [fp, #-88]	; 0xffffffa8
   12e6c:	mov	r3, #1
   12e70:	b	12ef8 <__mempcpy_chk@plt+0x1ebc>
   12e74:	tst	r9, #1
   12e78:	beq	12ec8 <__mempcpy_chk@plt+0x1e8c>
   12e7c:	mov	r0, #1
   12e80:	mov	r8, #0
   12e84:	mov	r2, #1
   12e88:	mov	r3, #1
   12e8c:	mov	r7, #5
   12e90:	str	r0, [fp, #-72]	; 0xffffffb8
   12e94:	movw	r0, #27220	; 0x6a54
   12e98:	movt	r0, #1
   12e9c:	str	r0, [fp, #-88]	; 0xffffffa8
   12ea0:	b	12ef8 <__mempcpy_chk@plt+0x1ebc>
   12ea4:	cmp	r4, #0
   12ea8:	mov	r8, #1
   12eac:	mov	r3, #0
   12eb0:	mov	r7, #2
   12eb4:	movne	r0, #39	; 0x27
   12eb8:	strbne	r0, [r5]
   12ebc:	movw	r0, #27224	; 0x6a58
   12ec0:	movt	r0, #1
   12ec4:	b	12eec <__mempcpy_chk@plt+0x1eb0>
   12ec8:	cmp	r4, #0
   12ecc:	mov	r8, #1
   12ed0:	mov	r2, #1
   12ed4:	mov	r7, #5
   12ed8:	mov	r3, #0
   12edc:	movne	r0, #34	; 0x22
   12ee0:	strbne	r0, [r5]
   12ee4:	movw	r0, #27220	; 0x6a54
   12ee8:	movt	r0, #1
   12eec:	str	r0, [fp, #-88]	; 0xffffffa8
   12ef0:	mov	r0, #1
   12ef4:	str	r0, [fp, #-72]	; 0xffffffb8
   12ef8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12efc:	eor	r6, r3, #1
   12f00:	str	r7, [fp, #-68]	; 0xffffffbc
   12f04:	str	r3, [fp, #-76]	; 0xffffffb4
   12f08:	str	r2, [sp, #84]	; 0x54
   12f0c:	str	r6, [sp, #92]	; 0x5c
   12f10:	cmp	r0, #0
   12f14:	movwne	r0, #1
   12f18:	and	r1, r0, r3
   12f1c:	and	r1, r2, r1
   12f20:	str	r1, [sp, #48]	; 0x30
   12f24:	sub	r1, r7, #2
   12f28:	clz	r1, r1
   12f2c:	lsr	r1, r1, #5
   12f30:	and	r1, r1, r3
   12f34:	str	r1, [sp, #64]	; 0x40
   12f38:	subs	r1, r7, #2
   12f3c:	mov	r7, #0
   12f40:	movwne	r1, #1
   12f44:	orr	r6, r1, r6
   12f48:	and	r1, r1, r2
   12f4c:	and	r0, r0, r1
   12f50:	str	r6, [sp, #68]	; 0x44
   12f54:	str	r0, [fp, #-60]	; 0xffffffc4
   12f58:	orr	r0, r1, r3
   12f5c:	ldr	r1, [fp, #16]
   12f60:	eor	r0, r0, #1
   12f64:	clz	r1, r1
   12f68:	lsr	r1, r1, #5
   12f6c:	orr	r0, r1, r0
   12f70:	str	r0, [fp, #-64]	; 0xffffffc0
   12f74:	eor	r0, r2, #1
   12f78:	str	r0, [sp, #52]	; 0x34
   12f7c:	cmn	lr, #1
   12f80:	beq	12f90 <__mempcpy_chk@plt+0x1f54>
   12f84:	cmp	r7, lr
   12f88:	bne	12f9c <__mempcpy_chk@plt+0x1f60>
   12f8c:	b	13ae4 <__mempcpy_chk@plt+0x2aa8>
   12f90:	ldrb	r0, [ip, r7]
   12f94:	cmp	r0, #0
   12f98:	beq	13aec <__mempcpy_chk@plt+0x2ab0>
   12f9c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12fa0:	mov	sl, #0
   12fa4:	cmp	r0, #0
   12fa8:	beq	12fe0 <__mempcpy_chk@plt+0x1fa4>
   12fac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12fb0:	add	r5, r7, r0
   12fb4:	cmp	r0, #2
   12fb8:	bcc	12fd4 <__mempcpy_chk@plt+0x1f98>
   12fbc:	cmn	lr, #1
   12fc0:	bne	12fd4 <__mempcpy_chk@plt+0x1f98>
   12fc4:	mov	r0, ip
   12fc8:	bl	10f58 <strlen@plt>
   12fcc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12fd0:	mov	lr, r0
   12fd4:	cmp	r5, lr
   12fd8:	bls	12fe8 <__mempcpy_chk@plt+0x1fac>
   12fdc:	ldr	r5, [fp, #-84]	; 0xffffffac
   12fe0:	mov	r0, #0
   12fe4:	b	13034 <__mempcpy_chk@plt+0x1ff8>
   12fe8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12fec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12ff0:	add	r0, ip, r7
   12ff4:	mov	r6, r4
   12ff8:	mov	r4, lr
   12ffc:	bl	10f4c <bcmp@plt>
   13000:	ldr	r2, [sp, #92]	; 0x5c
   13004:	cmp	r0, #0
   13008:	ldr	r5, [fp, #-84]	; 0xffffffac
   1300c:	mov	r1, r0
   13010:	movwne	r1, #1
   13014:	orr	r1, r1, r2
   13018:	tst	r1, #1
   1301c:	beq	13b74 <__mempcpy_chk@plt+0x2b38>
   13020:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13024:	clz	r0, r0
   13028:	mov	lr, r4
   1302c:	mov	r4, r6
   13030:	lsr	r0, r0, #5
   13034:	str	r0, [fp, #-52]	; 0xffffffcc
   13038:	ldrb	r6, [ip, r7]
   1303c:	cmp	r6, #126	; 0x7e
   13040:	bhi	13570 <__mempcpy_chk@plt+0x2534>
   13044:	add	r3, pc, #16
   13048:	mov	r9, #1
   1304c:	mov	r2, #110	; 0x6e
   13050:	mov	r0, #97	; 0x61
   13054:	mov	r1, #0
   13058:	ldr	pc, [r3, r6, lsl #2]
   1305c:	ldrdeq	r3, [r1], -r0
   13060:	andeq	r3, r1, r0, ror r5
   13064:	andeq	r3, r1, r0, ror r5
   13068:	andeq	r3, r1, r0, ror r5
   1306c:	andeq	r3, r1, r0, ror r5
   13070:	andeq	r3, r1, r0, ror r5
   13074:	andeq	r3, r1, r0, ror r5
   13078:	andeq	r3, r1, ip, asr #12
   1307c:			; <UNDEFINED> instruction: 0x000133b0
   13080:	andeq	r3, r1, r8, lsr #7
   13084:			; <UNDEFINED> instruction: 0x000133bc
   13088:	ldrdeq	r3, [r1], -r8
   1308c:	andeq	r3, r1, r0, lsr #7
   13090:			; <UNDEFINED> instruction: 0x000133b8
   13094:	andeq	r3, r1, r0, ror r5
   13098:	andeq	r3, r1, r0, ror r5
   1309c:	andeq	r3, r1, r0, ror r5
   130a0:	andeq	r3, r1, r0, ror r5
   130a4:	andeq	r3, r1, r0, ror r5
   130a8:	andeq	r3, r1, r0, ror r5
   130ac:	andeq	r3, r1, r0, ror r5
   130b0:	andeq	r3, r1, r0, ror r5
   130b4:	andeq	r3, r1, r0, ror r5
   130b8:	andeq	r3, r1, r0, ror r5
   130bc:	andeq	r3, r1, r0, ror r5
   130c0:	andeq	r3, r1, r0, ror r5
   130c4:	andeq	r3, r1, r0, ror r5
   130c8:	andeq	r3, r1, r0, ror r5
   130cc:	andeq	r3, r1, r0, ror r5
   130d0:	andeq	r3, r1, r0, ror r5
   130d4:	andeq	r3, r1, r0, ror r5
   130d8:	andeq	r3, r1, r0, ror r5
   130dc:	andeq	r3, r1, r4, asr r3
   130e0:	andeq	r3, r1, r8, asr r3
   130e4:	andeq	r3, r1, r8, asr r3
   130e8:	andeq	r3, r1, r0, asr #6
   130ec:	andeq	r3, r1, r8, asr r3
   130f0:	andeq	r3, r1, r8, asr r2
   130f4:	andeq	r3, r1, r8, asr r3
   130f8:	andeq	r3, r1, r0, ror #9
   130fc:	andeq	r3, r1, r8, asr r3
   13100:	andeq	r3, r1, r8, asr r3
   13104:	andeq	r3, r1, r8, asr r3
   13108:	andeq	r3, r1, r8, asr r2
   1310c:	andeq	r3, r1, r8, asr r2
   13110:	andeq	r3, r1, r8, asr r2
   13114:	andeq	r3, r1, r8, asr r2
   13118:	andeq	r3, r1, r8, asr r2
   1311c:	andeq	r3, r1, r8, asr r2
   13120:	andeq	r3, r1, r8, asr r2
   13124:	andeq	r3, r1, r8, asr r2
   13128:	andeq	r3, r1, r8, asr r2
   1312c:	andeq	r3, r1, r8, asr r2
   13130:	andeq	r3, r1, r8, asr r2
   13134:	andeq	r3, r1, r8, asr r2
   13138:	andeq	r3, r1, r8, asr r2
   1313c:	andeq	r3, r1, r8, asr r2
   13140:	andeq	r3, r1, r8, asr r2
   13144:	andeq	r3, r1, r8, asr r2
   13148:	andeq	r3, r1, r8, asr r3
   1314c:	andeq	r3, r1, r8, asr r3
   13150:	andeq	r3, r1, r8, asr r3
   13154:	andeq	r3, r1, r8, asr r3
   13158:	andeq	r3, r1, r8, lsr #9
   1315c:	andeq	r3, r1, r0, ror r5
   13160:	andeq	r3, r1, r8, asr r2
   13164:	andeq	r3, r1, r8, asr r2
   13168:	andeq	r3, r1, r8, asr r2
   1316c:	andeq	r3, r1, r8, asr r2
   13170:	andeq	r3, r1, r8, asr r2
   13174:	andeq	r3, r1, r8, asr r2
   13178:	andeq	r3, r1, r8, asr r2
   1317c:	andeq	r3, r1, r8, asr r2
   13180:	andeq	r3, r1, r8, asr r2
   13184:	andeq	r3, r1, r8, asr r2
   13188:	andeq	r3, r1, r8, asr r2
   1318c:	andeq	r3, r1, r8, asr r2
   13190:	andeq	r3, r1, r8, asr r2
   13194:	andeq	r3, r1, r8, asr r2
   13198:	andeq	r3, r1, r8, asr r2
   1319c:	andeq	r3, r1, r8, asr r2
   131a0:	andeq	r3, r1, r8, asr r2
   131a4:	andeq	r3, r1, r8, asr r2
   131a8:	andeq	r3, r1, r8, asr r2
   131ac:	andeq	r3, r1, r8, asr r2
   131b0:	andeq	r3, r1, r8, asr r2
   131b4:	andeq	r3, r1, r8, asr r2
   131b8:	andeq	r3, r1, r8, asr r2
   131bc:	andeq	r3, r1, r8, asr r2
   131c0:	andeq	r3, r1, r8, asr r2
   131c4:	andeq	r3, r1, r8, asr r2
   131c8:	andeq	r3, r1, r8, asr r3
   131cc:	andeq	r3, r1, r0, lsl #7
   131d0:	andeq	r3, r1, r8, asr r2
   131d4:	andeq	r3, r1, r8, asr r3
   131d8:	andeq	r3, r1, r8, asr r2
   131dc:	andeq	r3, r1, r8, asr r3
   131e0:	andeq	r3, r1, r8, asr r2
   131e4:	andeq	r3, r1, r8, asr r2
   131e8:	andeq	r3, r1, r8, asr r2
   131ec:	andeq	r3, r1, r8, asr r2
   131f0:	andeq	r3, r1, r8, asr r2
   131f4:	andeq	r3, r1, r8, asr r2
   131f8:	andeq	r3, r1, r8, asr r2
   131fc:	andeq	r3, r1, r8, asr r2
   13200:	andeq	r3, r1, r8, asr r2
   13204:	andeq	r3, r1, r8, asr r2
   13208:	andeq	r3, r1, r8, asr r2
   1320c:	andeq	r3, r1, r8, asr r2
   13210:	andeq	r3, r1, r8, asr r2
   13214:	andeq	r3, r1, r8, asr r2
   13218:	andeq	r3, r1, r8, asr r2
   1321c:	andeq	r3, r1, r8, asr r2
   13220:	andeq	r3, r1, r8, asr r2
   13224:	andeq	r3, r1, r8, asr r2
   13228:	andeq	r3, r1, r8, asr r2
   1322c:	andeq	r3, r1, r8, asr r2
   13230:	andeq	r3, r1, r8, asr r2
   13234:	andeq	r3, r1, r8, asr r2
   13238:	andeq	r3, r1, r8, asr r2
   1323c:	andeq	r3, r1, r8, asr r2
   13240:	andeq	r3, r1, r8, asr r2
   13244:	andeq	r3, r1, r8, asr r2
   13248:	andeq	r3, r1, r4, lsl r3
   1324c:	andeq	r3, r1, r8, asr r3
   13250:	andeq	r3, r1, r4, lsl r3
   13254:	andeq	r3, r1, r0, asr #6
   13258:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1325c:	tst	r0, #1
   13260:	bne	1328c <__mempcpy_chk@plt+0x2250>
   13264:	ldr	r1, [fp, #16]
   13268:	ubfx	r0, r6, #5, #3
   1326c:	mov	r2, #1
   13270:	ldr	r0, [r1, r0, lsl #2]
   13274:	and	r1, r6, #31
   13278:	tst	r0, r2, lsl r1
   1327c:	beq	1328c <__mempcpy_chk@plt+0x2250>
   13280:	mov	r0, r6
   13284:	mov	r1, r9
   13288:	b	132a0 <__mempcpy_chk@plt+0x2264>
   1328c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13290:	mov	r1, r9
   13294:	cmp	r0, #0
   13298:	mov	r0, r6
   1329c:	beq	135e0 <__mempcpy_chk@plt+0x25a4>
   132a0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   132a4:	tst	r2, #1
   132a8:	bne	13bb0 <__mempcpy_chk@plt+0x2b74>
   132ac:	ldr	r2, [fp, #-68]	; 0xffffffbc
   132b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   132b4:	subs	r2, r2, #2
   132b8:	movwne	r2, #1
   132bc:	orr	r2, r2, r3
   132c0:	tst	r2, #1
   132c4:	bne	13300 <__mempcpy_chk@plt+0x22c4>
   132c8:	cmp	r8, r4
   132cc:	movcc	r2, #39	; 0x27
   132d0:	strbcc	r2, [r5, r8]
   132d4:	add	r2, r8, #1
   132d8:	cmp	r2, r4
   132dc:	movcc	r3, #36	; 0x24
   132e0:	strbcc	r3, [r5, r2]
   132e4:	add	r2, r8, #2
   132e8:	add	r8, r8, #3
   132ec:	cmp	r2, r4
   132f0:	movcc	r3, #39	; 0x27
   132f4:	strbcc	r3, [r5, r2]
   132f8:	mov	r2, #1
   132fc:	str	r2, [fp, #-56]	; 0xffffffc8
   13300:	cmp	r8, r4
   13304:	movcc	r2, #92	; 0x5c
   13308:	strbcc	r2, [r5, r8]
   1330c:	add	r8, r8, #1
   13310:	b	13624 <__mempcpy_chk@plt+0x25e8>
   13314:	cmp	lr, #1
   13318:	beq	13340 <__mempcpy_chk@plt+0x2304>
   1331c:	mov	r9, #0
   13320:	cmn	lr, #1
   13324:	bne	1334c <__mempcpy_chk@plt+0x2310>
   13328:	ldrb	r0, [ip, #1]
   1332c:	cmp	r0, #0
   13330:	beq	13340 <__mempcpy_chk@plt+0x2304>
   13334:	mvn	lr, #0
   13338:	mov	sl, #0
   1333c:	b	13258 <__mempcpy_chk@plt+0x221c>
   13340:	mov	r9, #0
   13344:	cmp	r7, #0
   13348:	beq	13354 <__mempcpy_chk@plt+0x2318>
   1334c:	mov	sl, #0
   13350:	b	13258 <__mempcpy_chk@plt+0x221c>
   13354:	mov	r1, #1
   13358:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1335c:	cmp	r0, #2
   13360:	bne	13378 <__mempcpy_chk@plt+0x233c>
   13364:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13368:	mov	r9, r1
   1336c:	tst	r0, #1
   13370:	beq	13258 <__mempcpy_chk@plt+0x221c>
   13374:	b	13bb0 <__mempcpy_chk@plt+0x2b74>
   13378:	mov	r9, r1
   1337c:	b	13258 <__mempcpy_chk@plt+0x221c>
   13380:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13384:	cmp	r0, #2
   13388:	bne	135c4 <__mempcpy_chk@plt+0x2588>
   1338c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13390:	tst	r0, #1
   13394:	bne	13bb0 <__mempcpy_chk@plt+0x2b74>
   13398:	mov	sl, #0
   1339c:	b	135d8 <__mempcpy_chk@plt+0x259c>
   133a0:	mov	r0, #102	; 0x66
   133a4:	b	1364c <__mempcpy_chk@plt+0x2610>
   133a8:	mov	r2, #116	; 0x74
   133ac:	b	133bc <__mempcpy_chk@plt+0x2380>
   133b0:	mov	r0, #98	; 0x62
   133b4:	b	1364c <__mempcpy_chk@plt+0x2610>
   133b8:	mov	r2, #114	; 0x72
   133bc:	ldr	r0, [sp, #68]	; 0x44
   133c0:	tst	r0, #1
   133c4:	mov	r0, r2
   133c8:	bne	1364c <__mempcpy_chk@plt+0x2610>
   133cc:	b	13bb0 <__mempcpy_chk@plt+0x2b74>
   133d0:	ldr	r0, [sp, #84]	; 0x54
   133d4:	tst	r0, #1
   133d8:	beq	13668 <__mempcpy_chk@plt+0x262c>
   133dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   133e0:	tst	r0, #1
   133e4:	bne	13c9c <__mempcpy_chk@plt+0x2c60>
   133e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   133ec:	ldr	r1, [fp, #-56]	; 0xffffffc8
   133f0:	subs	r0, r0, #2
   133f4:	movwne	r0, #1
   133f8:	orr	r0, r0, r1
   133fc:	tst	r0, #1
   13400:	bne	1343c <__mempcpy_chk@plt+0x2400>
   13404:	cmp	r8, r4
   13408:	movcc	r0, #39	; 0x27
   1340c:	strbcc	r0, [r5, r8]
   13410:	add	r0, r8, #1
   13414:	cmp	r0, r4
   13418:	movcc	r1, #36	; 0x24
   1341c:	strbcc	r1, [r5, r0]
   13420:	add	r0, r8, #2
   13424:	add	r8, r8, #3
   13428:	cmp	r0, r4
   1342c:	movcc	r1, #39	; 0x27
   13430:	strbcc	r1, [r5, r0]
   13434:	mov	r0, #1
   13438:	str	r0, [fp, #-56]	; 0xffffffc8
   1343c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13440:	cmp	r8, r4
   13444:	mov	r9, #0
   13448:	mov	sl, #1
   1344c:	mov	r6, #48	; 0x30
   13450:	movcc	r0, #92	; 0x5c
   13454:	strbcc	r0, [r5, r8]
   13458:	add	r0, r8, #1
   1345c:	cmp	r1, #2
   13460:	beq	13830 <__mempcpy_chk@plt+0x27f4>
   13464:	add	r1, r7, #1
   13468:	cmp	r1, lr
   1346c:	bcs	13830 <__mempcpy_chk@plt+0x27f4>
   13470:	ldrb	r1, [ip, r1]
   13474:	sub	r1, r1, #48	; 0x30
   13478:	uxtb	r1, r1
   1347c:	cmp	r1, #9
   13480:	bhi	13830 <__mempcpy_chk@plt+0x27f4>
   13484:	cmp	r0, r4
   13488:	movcc	r1, #48	; 0x30
   1348c:	strbcc	r1, [r5, r0]
   13490:	add	r0, r8, #2
   13494:	add	r8, r8, #3
   13498:	cmp	r0, r4
   1349c:	movcc	r1, #48	; 0x30
   134a0:	strbcc	r1, [r5, r0]
   134a4:	b	13258 <__mempcpy_chk@plt+0x221c>
   134a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   134ac:	mov	sl, #0
   134b0:	mov	r6, #63	; 0x3f
   134b4:	cmp	r0, #5
   134b8:	beq	13838 <__mempcpy_chk@plt+0x27fc>
   134bc:	cmp	r0, #2
   134c0:	bne	138e0 <__mempcpy_chk@plt+0x28a4>
   134c4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   134c8:	mov	r9, #0
   134cc:	tst	r0, #1
   134d0:	beq	13258 <__mempcpy_chk@plt+0x221c>
   134d4:	b	13bb0 <__mempcpy_chk@plt+0x2b74>
   134d8:	mov	r0, #118	; 0x76
   134dc:	b	1364c <__mempcpy_chk@plt+0x2610>
   134e0:	mov	r0, #1
   134e4:	mov	r6, #39	; 0x27
   134e8:	str	r0, [sp, #60]	; 0x3c
   134ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   134f0:	cmp	r0, #2
   134f4:	bne	13684 <__mempcpy_chk@plt+0x2648>
   134f8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   134fc:	tst	r0, #1
   13500:	bne	13bb0 <__mempcpy_chk@plt+0x2b74>
   13504:	ldr	r2, [sp, #56]	; 0x38
   13508:	clz	r1, r4
   1350c:	mov	sl, #0
   13510:	mov	r9, #1
   13514:	lsr	r1, r1, #5
   13518:	cmp	r2, #0
   1351c:	mov	r0, r2
   13520:	movwne	r0, #1
   13524:	orrs	r0, r0, r1
   13528:	moveq	r2, r4
   1352c:	moveq	r4, r0
   13530:	cmp	r8, r4
   13534:	str	r2, [sp, #56]	; 0x38
   13538:	movcc	r0, #39	; 0x27
   1353c:	strbcc	r0, [r5, r8]
   13540:	add	r0, r8, #1
   13544:	cmp	r0, r4
   13548:	movcc	r1, #92	; 0x5c
   1354c:	strbcc	r1, [r5, r0]
   13550:	add	r0, r8, #2
   13554:	add	r8, r8, #3
   13558:	cmp	r0, r4
   1355c:	movcc	r1, #39	; 0x27
   13560:	strbcc	r1, [r5, r0]
   13564:	mov	r0, #0
   13568:	str	r0, [fp, #-56]	; 0xffffffc8
   1356c:	b	13258 <__mempcpy_chk@plt+0x221c>
   13570:	ldr	r0, [sp, #40]	; 0x28
   13574:	str	r4, [sp, #88]	; 0x58
   13578:	cmp	r0, #1
   1357c:	bne	1368c <__mempcpy_chk@plt+0x2650>
   13580:	str	lr, [sp, #28]
   13584:	bl	10f34 <__ctype_b_loc@plt>
   13588:	ldr	r0, [r0]
   1358c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13590:	mov	r2, #1
   13594:	add	r0, r0, r6, lsl #1
   13598:	ldrb	r0, [r0, #1]
   1359c:	ubfx	r9, r0, #6, #1
   135a0:	ldr	r0, [sp, #52]	; 0x34
   135a4:	cmp	r2, #1
   135a8:	orr	r0, r9, r0
   135ac:	bhi	138e8 <__mempcpy_chk@plt+0x28ac>
   135b0:	tst	r0, #1
   135b4:	beq	138e8 <__mempcpy_chk@plt+0x28ac>
   135b8:	ldr	lr, [sp, #28]
   135bc:	ldr	r4, [sp, #88]	; 0x58
   135c0:	b	13258 <__mempcpy_chk@plt+0x221c>
   135c4:	ldr	r1, [sp, #48]	; 0x30
   135c8:	mov	sl, #0
   135cc:	mov	r0, #92	; 0x5c
   135d0:	cmp	r1, #0
   135d4:	beq	1364c <__mempcpy_chk@plt+0x2610>
   135d8:	mov	r6, #92	; 0x5c
   135dc:	mov	r9, #0
   135e0:	cmp	sl, #0
   135e4:	bne	1361c <__mempcpy_chk@plt+0x25e0>
   135e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   135ec:	tst	r0, #1
   135f0:	beq	1361c <__mempcpy_chk@plt+0x25e0>
   135f4:	cmp	r8, r4
   135f8:	movcc	r0, #39	; 0x27
   135fc:	strbcc	r0, [r5, r8]
   13600:	add	r0, r8, #1
   13604:	add	r8, r8, #2
   13608:	cmp	r0, r4
   1360c:	movcc	r1, #39	; 0x27
   13610:	strbcc	r1, [r5, r0]
   13614:	mov	r0, #0
   13618:	str	r0, [fp, #-56]	; 0xffffffc8
   1361c:	mov	r1, r9
   13620:	mov	r0, r6
   13624:	cmp	r8, r4
   13628:	strbcc	r0, [r5, r8]
   1362c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13630:	add	r8, r8, #1
   13634:	and	r0, r0, r1
   13638:	str	r0, [fp, #-48]	; 0xffffffd0
   1363c:	add	r7, r7, #1
   13640:	cmn	lr, #1
   13644:	bne	12f84 <__mempcpy_chk@plt+0x1f48>
   13648:	b	12f90 <__mempcpy_chk@plt+0x1f54>
   1364c:	ldr	r1, [sp, #84]	; 0x54
   13650:	mov	sl, #0
   13654:	mov	r9, #0
   13658:	tst	r1, #1
   1365c:	mov	r1, #0
   13660:	beq	13258 <__mempcpy_chk@plt+0x221c>
   13664:	b	132a0 <__mempcpy_chk@plt+0x2264>
   13668:	ldr	r0, [sp, #36]	; 0x24
   1366c:	mov	r6, #0
   13670:	mov	sl, #0
   13674:	mov	r9, #0
   13678:	cmp	r0, #0
   1367c:	beq	13258 <__mempcpy_chk@plt+0x221c>
   13680:	b	1363c <__mempcpy_chk@plt+0x2600>
   13684:	mov	r9, #1
   13688:	b	13258 <__mempcpy_chk@plt+0x221c>
   1368c:	mov	r0, #0
   13690:	cmn	lr, #1
   13694:	sub	r4, fp, #40	; 0x28
   13698:	str	r0, [fp, #-36]	; 0xffffffdc
   1369c:	str	r0, [fp, #-40]	; 0xffffffd8
   136a0:	bne	136b4 <__mempcpy_chk@plt+0x2678>
   136a4:	mov	r0, ip
   136a8:	bl	10f58 <strlen@plt>
   136ac:	ldr	ip, [fp, #-80]	; 0xffffffb0
   136b0:	mov	lr, r0
   136b4:	ldr	r0, [sp, #72]	; 0x48
   136b8:	mov	r9, #1
   136bc:	mov	r2, #0
   136c0:	str	lr, [sp, #28]
   136c4:	add	r0, r0, r7
   136c8:	str	r0, [sp, #20]
   136cc:	b	13710 <__mempcpy_chk@plt+0x26d4>
   136d0:	ldr	r5, [sp, #44]	; 0x2c
   136d4:	add	r5, r0, r5
   136d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136dc:	bl	10e8c <iswprint@plt>
   136e0:	cmp	r0, #0
   136e4:	sub	r4, fp, #40	; 0x28
   136e8:	movwne	r0, #1
   136ec:	and	r9, r9, r0
   136f0:	mov	r0, r4
   136f4:	bl	10e50 <mbsinit@plt>
   136f8:	mov	r2, r5
   136fc:	ldr	lr, [sp, #28]
   13700:	ldr	r5, [fp, #-84]	; 0xffffffac
   13704:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13708:	cmp	r0, #0
   1370c:	bne	135a0 <__mempcpy_chk@plt+0x2564>
   13710:	add	r0, r2, r7
   13714:	str	r2, [sp, #44]	; 0x2c
   13718:	mov	r3, r4
   1371c:	add	r1, ip, r0
   13720:	str	r0, [sp, #24]
   13724:	sub	r2, lr, r0
   13728:	sub	r0, fp, #44	; 0x2c
   1372c:	bl	15e50 <__mempcpy_chk@plt+0x4e14>
   13730:	cmp	r0, #0
   13734:	beq	13ad8 <__mempcpy_chk@plt+0x2a9c>
   13738:	cmn	r0, #1
   1373c:	beq	13a94 <__mempcpy_chk@plt+0x2a58>
   13740:	ldr	lr, [sp, #28]
   13744:	cmn	r0, #2
   13748:	beq	13a9c <__mempcpy_chk@plt+0x2a60>
   1374c:	ldr	r2, [sp, #64]	; 0x40
   13750:	ldr	r4, [sp, #88]	; 0x58
   13754:	ldr	ip, [sp, #84]	; 0x54
   13758:	cmp	r0, #2
   1375c:	mov	r1, #0
   13760:	movwcc	r1, #1
   13764:	eor	r2, r2, #1
   13768:	orrs	r1, r2, r1
   1376c:	bne	136d0 <__mempcpy_chk@plt+0x2694>
   13770:	ldr	r1, [sp, #44]	; 0x2c
   13774:	ldr	r2, [sp, #20]
   13778:	add	r1, r2, r1
   1377c:	sub	r2, r0, #1
   13780:	b	13790 <__mempcpy_chk@plt+0x2754>
   13784:	add	r1, r1, #1
   13788:	subs	r2, r2, #1
   1378c:	beq	136d0 <__mempcpy_chk@plt+0x2694>
   13790:	ldrb	r3, [r1]
   13794:	sub	r3, r3, #91	; 0x5b
   13798:	cmp	r3, #33	; 0x21
   1379c:	bhi	13784 <__mempcpy_chk@plt+0x2748>
   137a0:	add	r5, pc, #0
   137a4:	ldr	pc, [r5, r3, lsl #2]
   137a8:	andeq	r3, r1, ip, lsl #23
   137ac:	andeq	r3, r1, ip, lsl #23
   137b0:	andeq	r3, r1, r4, lsl #15
   137b4:	andeq	r3, r1, ip, lsl #23
   137b8:	andeq	r3, r1, r4, lsl #15
   137bc:	andeq	r3, r1, ip, lsl #23
   137c0:	andeq	r3, r1, r4, lsl #15
   137c4:	andeq	r3, r1, r4, lsl #15
   137c8:	andeq	r3, r1, r4, lsl #15
   137cc:	andeq	r3, r1, r4, lsl #15
   137d0:	andeq	r3, r1, r4, lsl #15
   137d4:	andeq	r3, r1, r4, lsl #15
   137d8:	andeq	r3, r1, r4, lsl #15
   137dc:	andeq	r3, r1, r4, lsl #15
   137e0:	andeq	r3, r1, r4, lsl #15
   137e4:	andeq	r3, r1, r4, lsl #15
   137e8:	andeq	r3, r1, r4, lsl #15
   137ec:	andeq	r3, r1, r4, lsl #15
   137f0:	andeq	r3, r1, r4, lsl #15
   137f4:	andeq	r3, r1, r4, lsl #15
   137f8:	andeq	r3, r1, r4, lsl #15
   137fc:	andeq	r3, r1, r4, lsl #15
   13800:	andeq	r3, r1, r4, lsl #15
   13804:	andeq	r3, r1, r4, lsl #15
   13808:	andeq	r3, r1, r4, lsl #15
   1380c:	andeq	r3, r1, r4, lsl #15
   13810:	andeq	r3, r1, r4, lsl #15
   13814:	andeq	r3, r1, r4, lsl #15
   13818:	andeq	r3, r1, r4, lsl #15
   1381c:	andeq	r3, r1, r4, lsl #15
   13820:	andeq	r3, r1, r4, lsl #15
   13824:	andeq	r3, r1, r4, lsl #15
   13828:	andeq	r3, r1, r4, lsl #15
   1382c:	andeq	r3, r1, ip, lsl #23
   13830:	mov	r8, r0
   13834:	b	13258 <__mempcpy_chk@plt+0x221c>
   13838:	ldr	r0, [sp, #32]
   1383c:	cmp	r0, #0
   13840:	beq	138e0 <__mempcpy_chk@plt+0x28a4>
   13844:	add	r0, r7, #2
   13848:	cmp	r0, lr
   1384c:	bcs	138e0 <__mempcpy_chk@plt+0x28a4>
   13850:	add	r1, r7, ip
   13854:	ldrb	r1, [r1, #1]
   13858:	cmp	r1, #63	; 0x3f
   1385c:	bne	138e0 <__mempcpy_chk@plt+0x28a4>
   13860:	ldrb	r9, [ip, r0]
   13864:	sub	r2, r9, #33	; 0x21
   13868:	cmp	r2, #29
   1386c:	bhi	138e0 <__mempcpy_chk@plt+0x28a4>
   13870:	movw	r1, #20929	; 0x51c1
   13874:	mov	r3, #1
   13878:	movt	r1, #14336	; 0x3800
   1387c:	tst	r1, r3, lsl r2
   13880:	beq	138e0 <__mempcpy_chk@plt+0x28a4>
   13884:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13888:	tst	r1, #1
   1388c:	bne	13bb0 <__mempcpy_chk@plt+0x2b74>
   13890:	cmp	r8, r4
   13894:	add	r2, r8, #1
   13898:	mov	r6, r9
   1389c:	mov	r7, r0
   138a0:	mov	r9, #0
   138a4:	movcc	r1, #63	; 0x3f
   138a8:	strbcc	r1, [r5, r8]
   138ac:	cmp	r2, r4
   138b0:	movcc	r1, #34	; 0x22
   138b4:	strbcc	r1, [r5, r2]
   138b8:	add	r2, r8, #2
   138bc:	cmp	r2, r4
   138c0:	movcc	r1, #34	; 0x22
   138c4:	strbcc	r1, [r5, r2]
   138c8:	add	r2, r8, #3
   138cc:	add	r8, r8, #4
   138d0:	cmp	r2, r4
   138d4:	movcc	r1, #63	; 0x3f
   138d8:	strbcc	r1, [r5, r2]
   138dc:	b	13258 <__mempcpy_chk@plt+0x221c>
   138e0:	mov	r9, #0
   138e4:	b	13258 <__mempcpy_chk@plt+0x221c>
   138e8:	ldr	lr, [sp, #28]
   138ec:	ldr	r4, [fp, #-56]	; 0xffffffc8
   138f0:	add	r1, r2, r7
   138f4:	mov	r2, #0
   138f8:	str	r1, [sp, #44]	; 0x2c
   138fc:	tst	r0, #1
   13900:	bne	13a1c <__mempcpy_chk@plt+0x29e0>
   13904:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13908:	tst	r1, #1
   1390c:	bne	13bac <__mempcpy_chk@plt+0x2b70>
   13910:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13914:	subs	r2, r1, #2
   13918:	movwne	r2, #1
   1391c:	orr	r2, r2, r4
   13920:	tst	r2, #1
   13924:	bne	13968 <__mempcpy_chk@plt+0x292c>
   13928:	ldr	r1, [sp, #88]	; 0x58
   1392c:	add	r2, r8, #1
   13930:	mov	r4, #1
   13934:	cmp	r8, r1
   13938:	movcc	r1, #39	; 0x27
   1393c:	strbcc	r1, [r5, r8]
   13940:	ldr	r1, [sp, #88]	; 0x58
   13944:	cmp	r2, r1
   13948:	movcc	r1, #36	; 0x24
   1394c:	strbcc	r1, [r5, r2]
   13950:	ldr	r1, [sp, #88]	; 0x58
   13954:	add	r2, r8, #2
   13958:	add	r8, r8, #3
   1395c:	cmp	r2, r1
   13960:	movcc	r1, #39	; 0x27
   13964:	strbcc	r1, [r5, r2]
   13968:	ldr	r1, [sp, #88]	; 0x58
   1396c:	add	r2, r8, #1
   13970:	cmp	r8, r1
   13974:	movcc	r1, #92	; 0x5c
   13978:	strbcc	r1, [r5, r8]
   1397c:	ldr	r1, [sp, #88]	; 0x58
   13980:	cmp	r2, r1
   13984:	bcs	13998 <__mempcpy_chk@plt+0x295c>
   13988:	uxtb	r3, r6
   1398c:	mov	r1, #48	; 0x30
   13990:	orr	r3, r1, r3, lsr #6
   13994:	strb	r3, [r5, r2]
   13998:	ldr	r1, [sp, #88]	; 0x58
   1399c:	add	r2, r8, #2
   139a0:	add	r8, r8, #3
   139a4:	cmp	r2, r1
   139a8:	lsrcc	r3, r6, #3
   139ac:	movcc	r1, #6
   139b0:	bficc	r3, r1, #3, #29
   139b4:	mov	r1, #6
   139b8:	bfi	r6, r1, #3, #29
   139bc:	strbcc	r3, [r5, r2]
   139c0:	mov	r2, #1
   139c4:	b	13a44 <__mempcpy_chk@plt+0x2a08>
   139c8:	ldr	r1, [sp, #88]	; 0x58
   139cc:	ldr	r5, [fp, #-84]	; 0xffffffac
   139d0:	ldr	r4, [sp, #88]	; 0x58
   139d4:	cmp	r8, r1
   139d8:	movcc	r1, #39	; 0x27
   139dc:	strbcc	r1, [r5, r8]
   139e0:	add	r1, r8, #1
   139e4:	add	r8, r8, #2
   139e8:	cmp	r1, r4
   139ec:	movcc	r4, #39	; 0x27
   139f0:	strbcc	r4, [r5, r1]
   139f4:	mov	r4, #0
   139f8:	ldr	r1, [sp, #88]	; 0x58
   139fc:	cmp	r8, r1
   13a00:	ldr	r1, [sp, #72]	; 0x48
   13a04:	strbcc	r6, [r5, r8]
   13a08:	add	r8, r8, #1
   13a0c:	ldrb	r6, [r1, r7]
   13a10:	mov	r7, r3
   13a14:	tst	r0, #1
   13a18:	beq	13904 <__mempcpy_chk@plt+0x28c8>
   13a1c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13a20:	tst	r1, #1
   13a24:	beq	13a3c <__mempcpy_chk@plt+0x2a00>
   13a28:	ldr	r1, [sp, #88]	; 0x58
   13a2c:	cmp	r8, r1
   13a30:	movcc	r1, #92	; 0x5c
   13a34:	strbcc	r1, [r5, r8]
   13a38:	add	r8, r8, #1
   13a3c:	mov	r1, #0
   13a40:	str	r1, [fp, #-52]	; 0xffffffcc
   13a44:	ldr	r1, [sp, #44]	; 0x2c
   13a48:	add	r3, r7, #1
   13a4c:	and	sl, r2, #1
   13a50:	cmp	r1, r3
   13a54:	bls	13a78 <__mempcpy_chk@plt+0x2a3c>
   13a58:	cmp	sl, #0
   13a5c:	mvn	r5, r4
   13a60:	movwne	sl, #1
   13a64:	orr	r5, r5, sl
   13a68:	tst	r5, #1
   13a6c:	beq	139c8 <__mempcpy_chk@plt+0x298c>
   13a70:	ldr	r5, [fp, #-84]	; 0xffffffac
   13a74:	b	139f8 <__mempcpy_chk@plt+0x29bc>
   13a78:	str	r4, [fp, #-56]	; 0xffffffc8
   13a7c:	ldr	r4, [sp, #88]	; 0x58
   13a80:	cmp	sl, #0
   13a84:	movwne	sl, #1
   13a88:	cmp	sl, #0
   13a8c:	beq	135e8 <__mempcpy_chk@plt+0x25ac>
   13a90:	b	1361c <__mempcpy_chk@plt+0x25e0>
   13a94:	mov	r9, #0
   13a98:	b	13ad8 <__mempcpy_chk@plt+0x2a9c>
   13a9c:	ldr	r0, [sp, #24]
   13aa0:	mov	r9, #0
   13aa4:	cmp	lr, r0
   13aa8:	bls	13ad8 <__mempcpy_chk@plt+0x2a9c>
   13aac:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13ab0:	ldr	r2, [sp, #44]	; 0x2c
   13ab4:	add	r0, ip, r7
   13ab8:	ldrb	r1, [r0, r2]
   13abc:	cmp	r1, #0
   13ac0:	beq	135a0 <__mempcpy_chk@plt+0x2564>
   13ac4:	add	r2, r2, #1
   13ac8:	add	r1, r7, r2
   13acc:	cmp	r1, lr
   13ad0:	bcc	13ab8 <__mempcpy_chk@plt+0x2a7c>
   13ad4:	b	135a0 <__mempcpy_chk@plt+0x2564>
   13ad8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13adc:	ldr	r2, [sp, #44]	; 0x2c
   13ae0:	b	135a0 <__mempcpy_chk@plt+0x2564>
   13ae4:	mov	lr, r7
   13ae8:	b	13af0 <__mempcpy_chk@plt+0x2ab4>
   13aec:	mvn	lr, #0
   13af0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13af4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13af8:	eor	r0, r1, #2
   13afc:	orr	r0, r0, r8
   13b00:	clz	r0, r0
   13b04:	lsr	r0, r0, #5
   13b08:	tst	r2, r0
   13b0c:	bne	13bb0 <__mempcpy_chk@plt+0x2b74>
   13b10:	subs	r0, r1, #2
   13b14:	movwne	r0, #1
   13b18:	orr	r0, r2, r0
   13b1c:	tst	r0, #1
   13b20:	ldreq	r0, [sp, #60]	; 0x3c
   13b24:	eoreq	r0, r0, #1
   13b28:	tsteq	r0, #1
   13b2c:	bne	13c44 <__mempcpy_chk@plt+0x2c08>
   13b30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13b34:	mov	sl, lr
   13b38:	tst	r0, #1
   13b3c:	bne	13c10 <__mempcpy_chk@plt+0x2bd4>
   13b40:	ldr	r6, [sp, #56]	; 0x38
   13b44:	mov	r9, #0
   13b48:	cmp	r6, #0
   13b4c:	beq	13c3c <__mempcpy_chk@plt+0x2c00>
   13b50:	ldr	r0, [sp, #84]	; 0x54
   13b54:	mov	r1, #0
   13b58:	mov	r7, #2
   13b5c:	cmp	r4, #0
   13b60:	str	r1, [fp, #-48]	; 0xffffffd0
   13b64:	mov	r1, #0
   13b68:	str	r1, [fp, #-76]	; 0xffffffb4
   13b6c:	beq	12d0c <__mempcpy_chk@plt+0x1cd0>
   13b70:	b	13c44 <__mempcpy_chk@plt+0x2c08>
   13b74:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13b78:	ldr	r1, [fp, #12]
   13b7c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13b80:	mov	lr, r4
   13b84:	mov	r4, r6
   13b88:	b	13bd0 <__mempcpy_chk@plt+0x2b94>
   13b8c:	tst	ip, #1
   13b90:	ldr	r5, [fp, #-84]	; 0xffffffac
   13b94:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13b98:	ldr	r1, [fp, #12]
   13b9c:	mov	r0, #2
   13ba0:	movwne	r0, #4
   13ba4:	mov	r2, r0
   13ba8:	b	13bd0 <__mempcpy_chk@plt+0x2b94>
   13bac:	ldr	r4, [sp, #88]	; 0x58
   13bb0:	ldr	r1, [sp, #84]	; 0x54
   13bb4:	mov	r0, #2
   13bb8:	tst	r1, #1
   13bbc:	movwne	r0, #4
   13bc0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13bc4:	ldr	r1, [fp, #12]
   13bc8:	cmp	r2, #2
   13bcc:	moveq	r2, r0
   13bd0:	mov	r0, #0
   13bd4:	bic	r1, r1, #2
   13bd8:	str	r2, [sp]
   13bdc:	mov	r2, ip
   13be0:	mov	r3, lr
   13be4:	str	r0, [sp, #8]
   13be8:	ldr	r0, [sp, #76]	; 0x4c
   13bec:	str	r1, [sp, #4]
   13bf0:	mov	r1, r4
   13bf4:	str	r0, [sp, #12]
   13bf8:	ldr	r0, [sp, #80]	; 0x50
   13bfc:	str	r0, [sp, #16]
   13c00:	mov	r0, r5
   13c04:	bl	12c7c <__mempcpy_chk@plt+0x1c40>
   13c08:	mov	r8, r0
   13c0c:	b	13c90 <__mempcpy_chk@plt+0x2c54>
   13c10:	mov	r0, #5
   13c14:	ldr	r1, [sp, #56]	; 0x38
   13c18:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13c1c:	mov	r3, sl
   13c20:	str	r0, [sp]
   13c24:	ldr	r0, [fp, #12]
   13c28:	str	r0, [sp, #4]
   13c2c:	ldr	r0, [fp, #16]
   13c30:	str	r0, [sp, #8]
   13c34:	ldr	r0, [sp, #76]	; 0x4c
   13c38:	b	13bf4 <__mempcpy_chk@plt+0x2bb8>
   13c3c:	mov	r0, #0
   13c40:	str	r0, [fp, #-76]	; 0xffffffb4
   13c44:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13c48:	cmp	r1, #0
   13c4c:	beq	13c84 <__mempcpy_chk@plt+0x2c48>
   13c50:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13c54:	tst	r0, #1
   13c58:	bne	13c84 <__mempcpy_chk@plt+0x2c48>
   13c5c:	ldrb	r0, [r1]
   13c60:	cmp	r0, #0
   13c64:	beq	13c84 <__mempcpy_chk@plt+0x2c48>
   13c68:	add	r1, r1, #1
   13c6c:	cmp	r8, r4
   13c70:	strbcc	r0, [r5, r8]
   13c74:	add	r8, r8, #1
   13c78:	ldrb	r0, [r1], #1
   13c7c:	cmp	r0, #0
   13c80:	bne	13c6c <__mempcpy_chk@plt+0x2c30>
   13c84:	cmp	r8, r4
   13c88:	movcc	r0, #0
   13c8c:	strbcc	r0, [r5, r8]
   13c90:	mov	r0, r8
   13c94:	sub	sp, fp, #28
   13c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c9c:	mov	r0, #4
   13ca0:	b	13bc0 <__mempcpy_chk@plt+0x2b84>
   13ca4:	bl	11030 <abort@plt>
   13ca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13cac:	add	fp, sp, #28
   13cb0:	sub	sp, sp, #28
   13cb4:	movw	r5, #29024	; 0x7160
   13cb8:	cmp	r2, #0
   13cbc:	mov	r4, r1
   13cc0:	mov	r7, r0
   13cc4:	str	r0, [sp, #20]
   13cc8:	movt	r5, #2
   13ccc:	movne	r5, r2
   13cd0:	bl	10f64 <__errno_location@plt>
   13cd4:	mov	sl, r0
   13cd8:	ldr	r2, [r5, #40]	; 0x28
   13cdc:	ldr	r3, [r5, #44]	; 0x2c
   13ce0:	ldm	r5, {r0, r1}
   13ce4:	orr	r8, r1, #1
   13ce8:	add	r9, r5, #8
   13cec:	mov	r1, #0
   13cf0:	ldr	r6, [sl]
   13cf4:	stm	sp, {r0, r8, r9}
   13cf8:	mov	r0, #0
   13cfc:	str	r2, [sp, #12]
   13d00:	str	r3, [sp, #16]
   13d04:	mov	r2, r7
   13d08:	mov	r3, r4
   13d0c:	str	r6, [sp, #24]
   13d10:	mov	r6, r4
   13d14:	bl	12c7c <__mempcpy_chk@plt+0x1c40>
   13d18:	add	r7, r0, #1
   13d1c:	mov	r0, r7
   13d20:	bl	152d8 <__mempcpy_chk@plt+0x429c>
   13d24:	mov	r4, r0
   13d28:	ldr	r0, [r5]
   13d2c:	ldr	r2, [r5, #44]	; 0x2c
   13d30:	ldr	r1, [r5, #40]	; 0x28
   13d34:	mov	r3, r6
   13d38:	stm	sp, {r0, r8, r9}
   13d3c:	str	r2, [sp, #16]
   13d40:	ldr	r2, [sp, #20]
   13d44:	str	r1, [sp, #12]
   13d48:	mov	r0, r4
   13d4c:	mov	r1, r7
   13d50:	bl	12c7c <__mempcpy_chk@plt+0x1c40>
   13d54:	ldr	r0, [sp, #24]
   13d58:	str	r0, [sl]
   13d5c:	mov	r0, r4
   13d60:	sub	sp, fp, #28
   13d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d6c:	add	fp, sp, #28
   13d70:	sub	sp, sp, #36	; 0x24
   13d74:	movw	r8, #29024	; 0x7160
   13d78:	cmp	r3, #0
   13d7c:	mov	r4, r2
   13d80:	str	r2, [sp, #24]
   13d84:	mov	r5, r1
   13d88:	mov	r6, r0
   13d8c:	str	r0, [sp, #20]
   13d90:	movt	r8, #2
   13d94:	movne	r8, r3
   13d98:	bl	10f64 <__errno_location@plt>
   13d9c:	str	r0, [sp, #28]
   13da0:	ldr	r1, [r8, #40]	; 0x28
   13da4:	ldr	r2, [r8, #44]	; 0x2c
   13da8:	ldr	r7, [r0]
   13dac:	cmp	r4, #0
   13db0:	add	sl, r8, #8
   13db4:	mov	r0, #0
   13db8:	ldm	r8, {r3, r9}
   13dbc:	orreq	r9, r9, #1
   13dc0:	stm	sp, {r3, r9, sl}
   13dc4:	str	r1, [sp, #12]
   13dc8:	str	r2, [sp, #16]
   13dcc:	mov	r1, #0
   13dd0:	mov	r2, r6
   13dd4:	mov	r3, r5
   13dd8:	str	r7, [sp, #32]
   13ddc:	mov	r7, r5
   13de0:	bl	12c7c <__mempcpy_chk@plt+0x1c40>
   13de4:	add	r4, r0, #1
   13de8:	mov	r5, r0
   13dec:	mov	r0, r4
   13df0:	bl	152d8 <__mempcpy_chk@plt+0x429c>
   13df4:	mov	r6, r0
   13df8:	ldr	r0, [r8]
   13dfc:	ldr	r2, [r8, #44]	; 0x2c
   13e00:	ldr	r1, [r8, #40]	; 0x28
   13e04:	mov	r3, r7
   13e08:	stm	sp, {r0, r9, sl}
   13e0c:	str	r2, [sp, #16]
   13e10:	ldr	r2, [sp, #20]
   13e14:	str	r1, [sp, #12]
   13e18:	mov	r0, r6
   13e1c:	mov	r1, r4
   13e20:	bl	12c7c <__mempcpy_chk@plt+0x1c40>
   13e24:	ldr	r0, [sp, #24]
   13e28:	ldr	r1, [sp, #32]
   13e2c:	ldr	r2, [sp, #28]
   13e30:	cmp	r0, #0
   13e34:	str	r1, [r2]
   13e38:	strne	r5, [r0]
   13e3c:	mov	r0, r6
   13e40:	sub	sp, fp, #28
   13e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e4c:	add	fp, sp, #24
   13e50:	movw	r5, #28924	; 0x70fc
   13e54:	movw	r8, #28920	; 0x70f8
   13e58:	movt	r5, #2
   13e5c:	movt	r8, #2
   13e60:	ldr	r0, [r5]
   13e64:	ldr	r4, [r8]
   13e68:	cmp	r0, #2
   13e6c:	blt	13e98 <__mempcpy_chk@plt+0x2e5c>
   13e70:	add	r7, r4, #12
   13e74:	mov	r6, #0
   13e78:	ldr	r0, [r7, r6, lsl #3]
   13e7c:	bl	12a18 <__mempcpy_chk@plt+0x19dc>
   13e80:	ldr	r1, [r5]
   13e84:	add	r2, r6, #2
   13e88:	add	r0, r6, #1
   13e8c:	mov	r6, r0
   13e90:	cmp	r2, r1
   13e94:	blt	13e78 <__mempcpy_chk@plt+0x2e3c>
   13e98:	ldr	r0, [r4, #4]
   13e9c:	movw	r9, #29072	; 0x7190
   13ea0:	movw	r7, #28928	; 0x7100
   13ea4:	movt	r9, #2
   13ea8:	movt	r7, #2
   13eac:	cmp	r0, r9
   13eb0:	beq	13ec0 <__mempcpy_chk@plt+0x2e84>
   13eb4:	bl	12a18 <__mempcpy_chk@plt+0x19dc>
   13eb8:	mov	r0, #256	; 0x100
   13ebc:	stm	r7, {r0, r9}
   13ec0:	cmp	r4, r7
   13ec4:	beq	13ed4 <__mempcpy_chk@plt+0x2e98>
   13ec8:	mov	r0, r4
   13ecc:	bl	12a18 <__mempcpy_chk@plt+0x19dc>
   13ed0:	str	r7, [r8]
   13ed4:	mov	r0, #1
   13ed8:	str	r0, [r5]
   13edc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13ee0:	movw	r3, #29024	; 0x7160
   13ee4:	mvn	r2, #0
   13ee8:	movt	r3, #2
   13eec:	b	13ef0 <__mempcpy_chk@plt+0x2eb4>
   13ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ef4:	add	fp, sp, #28
   13ef8:	sub	sp, sp, #44	; 0x2c
   13efc:	mov	r7, r3
   13f00:	str	r2, [sp, #36]	; 0x24
   13f04:	str	r1, [sp, #32]
   13f08:	mov	r5, r0
   13f0c:	bl	10f64 <__errno_location@plt>
   13f10:	cmp	r5, #0
   13f14:	bmi	14084 <__mempcpy_chk@plt+0x3048>
   13f18:	cmn	r5, #-2147483647	; 0x80000001
   13f1c:	beq	14084 <__mempcpy_chk@plt+0x3048>
   13f20:	movw	r8, #28924	; 0x70fc
   13f24:	movw	r4, #28920	; 0x70f8
   13f28:	str	r0, [sp, #28]
   13f2c:	ldr	r0, [r0]
   13f30:	movt	r8, #2
   13f34:	movt	r4, #2
   13f38:	ldr	r1, [r8]
   13f3c:	ldr	r6, [r4]
   13f40:	str	r0, [sp, #24]
   13f44:	cmp	r1, r5
   13f48:	ble	13f54 <__mempcpy_chk@plt+0x2f18>
   13f4c:	mov	sl, r6
   13f50:	b	13fc0 <__mempcpy_chk@plt+0x2f84>
   13f54:	movw	r9, #28928	; 0x7100
   13f58:	mov	r0, #8
   13f5c:	str	r1, [fp, #-32]	; 0xffffffe0
   13f60:	sub	r1, r5, r1
   13f64:	mvn	r3, #-2147483648	; 0x80000000
   13f68:	movt	r9, #2
   13f6c:	str	r0, [sp]
   13f70:	add	r2, r1, #1
   13f74:	sub	r1, fp, #32
   13f78:	subs	r0, r6, r9
   13f7c:	movne	r0, r6
   13f80:	bl	154d8 <__mempcpy_chk@plt+0x449c>
   13f84:	mov	sl, r0
   13f88:	cmp	r6, r9
   13f8c:	str	r0, [r4]
   13f90:	bne	13f9c <__mempcpy_chk@plt+0x2f60>
   13f94:	ldrd	r0, [r9]
   13f98:	stm	sl, {r0, r1}
   13f9c:	ldr	r1, [r8]
   13fa0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13fa4:	add	r0, sl, r1, lsl #3
   13fa8:	sub	r1, r2, r1
   13fac:	lsl	r2, r1, #3
   13fb0:	mov	r1, #0
   13fb4:	bl	10f7c <memset@plt>
   13fb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13fbc:	str	r0, [r8]
   13fc0:	mov	r9, sl
   13fc4:	ldm	r7, {r0, r1}
   13fc8:	orr	r8, r1, #1
   13fcc:	add	r1, r7, #8
   13fd0:	ldr	r2, [r7, #40]	; 0x28
   13fd4:	ldr	r3, [r7, #44]	; 0x2c
   13fd8:	ldr	r6, [r9, r5, lsl #3]!
   13fdc:	str	r1, [sp, #20]
   13fe0:	ldr	r4, [r9, #4]!
   13fe4:	stm	sp, {r0, r8}
   13fe8:	add	r0, sp, #8
   13fec:	stm	r0, {r1, r2, r3}
   13ff0:	ldr	r2, [sp, #32]
   13ff4:	ldr	r3, [sp, #36]	; 0x24
   13ff8:	mov	r1, r6
   13ffc:	mov	r0, r4
   14000:	bl	12c7c <__mempcpy_chk@plt+0x1c40>
   14004:	cmp	r6, r0
   14008:	bhi	1406c <__mempcpy_chk@plt+0x3030>
   1400c:	add	r6, r0, #1
   14010:	movw	r0, #29072	; 0x7190
   14014:	movt	r0, #2
   14018:	str	r6, [sl, r5, lsl #3]
   1401c:	cmp	r4, r0
   14020:	beq	1402c <__mempcpy_chk@plt+0x2ff0>
   14024:	mov	r0, r4
   14028:	bl	12a18 <__mempcpy_chk@plt+0x19dc>
   1402c:	mov	r0, r6
   14030:	bl	152d8 <__mempcpy_chk@plt+0x429c>
   14034:	str	r0, [r9]
   14038:	mov	r4, r0
   1403c:	add	r3, sp, #8
   14040:	ldr	r0, [r7]
   14044:	ldr	r1, [r7, #40]	; 0x28
   14048:	ldr	r2, [r7, #44]	; 0x2c
   1404c:	stm	sp, {r0, r8}
   14050:	ldr	r0, [sp, #20]
   14054:	stm	r3, {r0, r1, r2}
   14058:	ldr	r2, [sp, #32]
   1405c:	ldr	r3, [sp, #36]	; 0x24
   14060:	mov	r0, r4
   14064:	mov	r1, r6
   14068:	bl	12c7c <__mempcpy_chk@plt+0x1c40>
   1406c:	ldr	r0, [sp, #28]
   14070:	ldr	r1, [sp, #24]
   14074:	str	r1, [r0]
   14078:	mov	r0, r4
   1407c:	sub	sp, fp, #28
   14080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14084:	bl	11030 <abort@plt>
   14088:	movw	r3, #29024	; 0x7160
   1408c:	movt	r3, #2
   14090:	b	13ef0 <__mempcpy_chk@plt+0x2eb4>
   14094:	movw	r3, #29024	; 0x7160
   14098:	mov	r1, r0
   1409c:	mov	r0, #0
   140a0:	mvn	r2, #0
   140a4:	movt	r3, #2
   140a8:	b	13ef0 <__mempcpy_chk@plt+0x2eb4>
   140ac:	movw	r3, #29024	; 0x7160
   140b0:	mov	r2, r1
   140b4:	mov	r1, r0
   140b8:	mov	r0, #0
   140bc:	movt	r3, #2
   140c0:	b	13ef0 <__mempcpy_chk@plt+0x2eb4>
   140c4:	push	{fp, lr}
   140c8:	mov	fp, sp
   140cc:	sub	sp, sp, #48	; 0x30
   140d0:	vmov.i32	q8, #0	; 0x00000000
   140d4:	mov	ip, #32
   140d8:	mov	r3, sp
   140dc:	mov	lr, r2
   140e0:	cmp	r1, #10
   140e4:	add	r2, r3, #16
   140e8:	vst1.64	{d16-d17}, [r3], ip
   140ec:	vst1.64	{d16-d17}, [r2]
   140f0:	vst1.64	{d16-d17}, [r3]
   140f4:	beq	14114 <__mempcpy_chk@plt+0x30d8>
   140f8:	str	r1, [sp]
   140fc:	mov	r3, sp
   14100:	mov	r1, lr
   14104:	mvn	r2, #0
   14108:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   1410c:	mov	sp, fp
   14110:	pop	{fp, pc}
   14114:	bl	11030 <abort@plt>
   14118:	push	{r4, sl, fp, lr}
   1411c:	add	fp, sp, #8
   14120:	sub	sp, sp, #48	; 0x30
   14124:	vmov.i32	q8, #0	; 0x00000000
   14128:	mov	ip, r3
   1412c:	mov	r3, sp
   14130:	mov	lr, #32
   14134:	cmp	r1, #10
   14138:	add	r4, r3, #16
   1413c:	vst1.64	{d16-d17}, [r3], lr
   14140:	vst1.64	{d16-d17}, [r4]
   14144:	vst1.64	{d16-d17}, [r3]
   14148:	beq	14168 <__mempcpy_chk@plt+0x312c>
   1414c:	str	r1, [sp]
   14150:	mov	r1, r2
   14154:	mov	r3, sp
   14158:	mov	r2, ip
   1415c:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   14160:	sub	sp, fp, #8
   14164:	pop	{r4, sl, fp, pc}
   14168:	bl	11030 <abort@plt>
   1416c:	push	{fp, lr}
   14170:	mov	fp, sp
   14174:	sub	sp, sp, #48	; 0x30
   14178:	vmov.i32	q8, #0	; 0x00000000
   1417c:	mov	r3, sp
   14180:	mov	ip, #32
   14184:	cmp	r0, #10
   14188:	add	r2, r3, #16
   1418c:	vst1.64	{d16-d17}, [r3], ip
   14190:	vst1.64	{d16-d17}, [r2]
   14194:	vst1.64	{d16-d17}, [r3]
   14198:	beq	141b8 <__mempcpy_chk@plt+0x317c>
   1419c:	str	r0, [sp]
   141a0:	mov	r3, sp
   141a4:	mov	r0, #0
   141a8:	mvn	r2, #0
   141ac:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   141b0:	mov	sp, fp
   141b4:	pop	{fp, pc}
   141b8:	bl	11030 <abort@plt>
   141bc:	push	{fp, lr}
   141c0:	mov	fp, sp
   141c4:	sub	sp, sp, #48	; 0x30
   141c8:	vmov.i32	q8, #0	; 0x00000000
   141cc:	mov	r3, sp
   141d0:	mov	ip, #32
   141d4:	cmp	r0, #10
   141d8:	add	lr, r3, #16
   141dc:	vst1.64	{d16-d17}, [r3], ip
   141e0:	vst1.64	{d16-d17}, [lr]
   141e4:	vst1.64	{d16-d17}, [r3]
   141e8:	beq	14204 <__mempcpy_chk@plt+0x31c8>
   141ec:	str	r0, [sp]
   141f0:	mov	r3, sp
   141f4:	mov	r0, #0
   141f8:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   141fc:	mov	sp, fp
   14200:	pop	{fp, pc}
   14204:	bl	11030 <abort@plt>
   14208:	push	{r4, sl, fp, lr}
   1420c:	add	fp, sp, #8
   14210:	sub	sp, sp, #48	; 0x30
   14214:	mov	lr, r0
   14218:	movw	r0, #29024	; 0x7160
   1421c:	mov	ip, r1
   14220:	mov	r1, #32
   14224:	mov	r4, #1
   14228:	movt	r0, #2
   1422c:	add	r3, r0, #16
   14230:	vld1.64	{d16-d17}, [r0], r1
   14234:	vld1.64	{d20-d21}, [r0]
   14238:	vld1.64	{d18-d19}, [r3]
   1423c:	mov	r3, sp
   14240:	add	r0, r3, #32
   14244:	add	r1, r3, #16
   14248:	vst1.64	{d20-d21}, [r0]
   1424c:	mov	r0, #28
   14250:	vst1.64	{d18-d19}, [r1]
   14254:	mov	r1, r3
   14258:	and	r0, r0, r2, lsr #3
   1425c:	and	r2, r2, #31
   14260:	vst1.64	{d16-d17}, [r1], r0
   14264:	ldr	r0, [r1, #8]
   14268:	bic	r4, r4, r0, lsr r2
   1426c:	eor	r0, r0, r4, lsl r2
   14270:	mov	r2, ip
   14274:	str	r0, [r1, #8]
   14278:	mov	r0, #0
   1427c:	mov	r1, lr
   14280:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   14284:	sub	sp, fp, #8
   14288:	pop	{r4, sl, fp, pc}
   1428c:	push	{fp, lr}
   14290:	mov	fp, sp
   14294:	sub	sp, sp, #48	; 0x30
   14298:	mov	ip, r0
   1429c:	movw	r0, #29024	; 0x7160
   142a0:	mov	r2, #32
   142a4:	movt	r0, #2
   142a8:	add	r3, r0, #16
   142ac:	vld1.64	{d16-d17}, [r0], r2
   142b0:	vld1.64	{d20-d21}, [r0]
   142b4:	vld1.64	{d18-d19}, [r3]
   142b8:	mov	r3, sp
   142bc:	add	r0, r3, #32
   142c0:	add	r2, r3, #16
   142c4:	vst1.64	{d20-d21}, [r0]
   142c8:	mov	r0, #28
   142cc:	vst1.64	{d18-d19}, [r2]
   142d0:	mov	r2, r3
   142d4:	and	r0, r0, r1, lsr #3
   142d8:	and	r1, r1, #31
   142dc:	vst1.64	{d16-d17}, [r2], r0
   142e0:	mov	r0, #1
   142e4:	ldr	lr, [r2, #8]
   142e8:	bic	r0, r0, lr, lsr r1
   142ec:	eor	r0, lr, r0, lsl r1
   142f0:	mov	r1, ip
   142f4:	str	r0, [r2, #8]
   142f8:	mov	r0, #0
   142fc:	mvn	r2, #0
   14300:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   14304:	mov	sp, fp
   14308:	pop	{fp, pc}
   1430c:	push	{fp, lr}
   14310:	mov	fp, sp
   14314:	sub	sp, sp, #48	; 0x30
   14318:	mov	r1, r0
   1431c:	movw	r0, #29024	; 0x7160
   14320:	mov	r3, #32
   14324:	movt	r0, #2
   14328:	add	r2, r0, #16
   1432c:	vld1.64	{d16-d17}, [r0], r3
   14330:	mov	r3, sp
   14334:	vld1.64	{d18-d19}, [r2]
   14338:	vld1.64	{d20-d21}, [r0]
   1433c:	add	r2, r3, #16
   14340:	add	r0, r3, #32
   14344:	vst1.64	{d18-d19}, [r2]
   14348:	vst1.64	{d20-d21}, [r0]
   1434c:	mov	r0, #12
   14350:	mov	r2, r3
   14354:	vst1.64	{d16-d17}, [r2], r0
   14358:	ldr	r0, [r2]
   1435c:	orr	r0, r0, #67108864	; 0x4000000
   14360:	str	r0, [r2]
   14364:	mov	r0, #0
   14368:	mvn	r2, #0
   1436c:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   14370:	mov	sp, fp
   14374:	pop	{fp, pc}
   14378:	push	{fp, lr}
   1437c:	mov	fp, sp
   14380:	sub	sp, sp, #48	; 0x30
   14384:	mov	ip, r1
   14388:	mov	r1, r0
   1438c:	movw	r0, #29024	; 0x7160
   14390:	mov	r2, #32
   14394:	movt	r0, #2
   14398:	add	r3, r0, #16
   1439c:	vld1.64	{d16-d17}, [r0], r2
   143a0:	vld1.64	{d18-d19}, [r3]
   143a4:	vld1.64	{d20-d21}, [r0]
   143a8:	mov	r3, sp
   143ac:	add	r2, r3, #16
   143b0:	add	r0, r3, #32
   143b4:	vst1.64	{d18-d19}, [r2]
   143b8:	vst1.64	{d20-d21}, [r0]
   143bc:	mov	r0, #12
   143c0:	mov	r2, r3
   143c4:	vst1.64	{d16-d17}, [r2], r0
   143c8:	ldr	r0, [r2]
   143cc:	orr	r0, r0, #67108864	; 0x4000000
   143d0:	str	r0, [r2]
   143d4:	mov	r0, #0
   143d8:	mov	r2, ip
   143dc:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   143e0:	mov	sp, fp
   143e4:	pop	{fp, pc}
   143e8:	push	{r4, sl, fp, lr}
   143ec:	add	fp, sp, #8
   143f0:	sub	sp, sp, #96	; 0x60
   143f4:	vmov.i32	q8, #0	; 0x00000000
   143f8:	mov	ip, r2
   143fc:	mov	r2, sp
   14400:	mov	r4, #28
   14404:	cmp	r1, #10
   14408:	mov	r3, r2
   1440c:	add	lr, r2, #16
   14410:	vst1.64	{d16-d17}, [r3], r4
   14414:	vst1.64	{d16-d17}, [lr]
   14418:	vst1.32	{d16-d17}, [r3]
   1441c:	beq	1446c <__mempcpy_chk@plt+0x3430>
   14420:	vld1.64	{d16-d17}, [r2], r4
   14424:	vld1.64	{d18-d19}, [lr]
   14428:	add	r3, sp, #48	; 0x30
   1442c:	vld1.32	{d20-d21}, [r2]
   14430:	add	r2, r3, #20
   14434:	add	r4, r3, #4
   14438:	vst1.32	{d18-d19}, [r2]
   1443c:	add	r2, r3, #32
   14440:	vst1.32	{d16-d17}, [r4]
   14444:	vst1.32	{d20-d21}, [r2]
   14448:	str	r1, [sp, #48]	; 0x30
   1444c:	mvn	r2, #0
   14450:	ldr	r1, [sp, #60]	; 0x3c
   14454:	orr	r1, r1, #67108864	; 0x4000000
   14458:	str	r1, [sp, #60]	; 0x3c
   1445c:	mov	r1, ip
   14460:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   14464:	sub	sp, fp, #8
   14468:	pop	{r4, sl, fp, pc}
   1446c:	bl	11030 <abort@plt>
   14470:	push	{r4, r5, r6, sl, fp, lr}
   14474:	add	fp, sp, #16
   14478:	sub	sp, sp, #48	; 0x30
   1447c:	mov	ip, r3
   14480:	movw	r3, #29024	; 0x7160
   14484:	mov	r6, #32
   14488:	cmp	r1, #0
   1448c:	mov	r4, sp
   14490:	movt	r3, #2
   14494:	cmpne	r2, #0
   14498:	add	r5, r4, #16
   1449c:	add	lr, r3, #16
   144a0:	vld1.64	{d16-d17}, [r3], r6
   144a4:	vld1.64	{d18-d19}, [lr]
   144a8:	vld1.64	{d20-d21}, [r3]
   144ac:	mov	r3, #10
   144b0:	vst1.64	{d16-d17}, [r4], r6
   144b4:	vst1.64	{d18-d19}, [r5]
   144b8:	vst1.64	{d20-d21}, [r4]
   144bc:	str	r3, [sp]
   144c0:	bne	144c8 <__mempcpy_chk@plt+0x348c>
   144c4:	bl	11030 <abort@plt>
   144c8:	str	r2, [sp, #44]	; 0x2c
   144cc:	str	r1, [sp, #40]	; 0x28
   144d0:	mov	r3, sp
   144d4:	mov	r1, ip
   144d8:	mvn	r2, #0
   144dc:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   144e0:	sub	sp, fp, #16
   144e4:	pop	{r4, r5, r6, sl, fp, pc}
   144e8:	push	{r4, r5, r6, sl, fp, lr}
   144ec:	add	fp, sp, #16
   144f0:	sub	sp, sp, #48	; 0x30
   144f4:	mov	lr, r3
   144f8:	movw	r3, #29024	; 0x7160
   144fc:	mov	r6, #32
   14500:	cmp	r1, #0
   14504:	mov	r4, sp
   14508:	movt	r3, #2
   1450c:	cmpne	r2, #0
   14510:	add	r5, r4, #16
   14514:	add	ip, r3, #16
   14518:	vld1.64	{d16-d17}, [r3], r6
   1451c:	vld1.64	{d18-d19}, [ip]
   14520:	vld1.64	{d20-d21}, [r3]
   14524:	mov	r3, #10
   14528:	vst1.64	{d16-d17}, [r4], r6
   1452c:	vst1.64	{d18-d19}, [r5]
   14530:	vst1.64	{d20-d21}, [r4]
   14534:	str	r3, [sp]
   14538:	bne	14540 <__mempcpy_chk@plt+0x3504>
   1453c:	bl	11030 <abort@plt>
   14540:	ldr	ip, [fp, #8]
   14544:	str	r2, [sp, #44]	; 0x2c
   14548:	str	r1, [sp, #40]	; 0x28
   1454c:	mov	r3, sp
   14550:	mov	r1, lr
   14554:	mov	r2, ip
   14558:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   1455c:	sub	sp, fp, #16
   14560:	pop	{r4, r5, r6, sl, fp, pc}
   14564:	push	{r4, sl, fp, lr}
   14568:	add	fp, sp, #8
   1456c:	sub	sp, sp, #48	; 0x30
   14570:	movw	r3, #29024	; 0x7160
   14574:	mov	lr, #32
   14578:	mov	ip, r2
   1457c:	cmp	r0, #0
   14580:	movt	r3, #2
   14584:	cmpne	r1, #0
   14588:	add	r2, r3, #16
   1458c:	vld1.64	{d16-d17}, [r3], lr
   14590:	vld1.64	{d20-d21}, [r3]
   14594:	vld1.64	{d18-d19}, [r2]
   14598:	mov	r2, sp
   1459c:	add	r4, r2, #16
   145a0:	vst1.64	{d16-d17}, [r2], lr
   145a4:	vst1.64	{d20-d21}, [r2]
   145a8:	mov	r2, #10
   145ac:	vst1.64	{d18-d19}, [r4]
   145b0:	str	r2, [sp]
   145b4:	bne	145bc <__mempcpy_chk@plt+0x3580>
   145b8:	bl	11030 <abort@plt>
   145bc:	str	r1, [sp, #44]	; 0x2c
   145c0:	str	r0, [sp, #40]	; 0x28
   145c4:	mov	r3, sp
   145c8:	mov	r0, #0
   145cc:	mov	r1, ip
   145d0:	mvn	r2, #0
   145d4:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   145d8:	sub	sp, fp, #8
   145dc:	pop	{r4, sl, fp, pc}
   145e0:	push	{r4, r5, fp, lr}
   145e4:	add	fp, sp, #8
   145e8:	sub	sp, sp, #48	; 0x30
   145ec:	mov	ip, r3
   145f0:	movw	r3, #29024	; 0x7160
   145f4:	mov	r4, #32
   145f8:	mov	lr, r2
   145fc:	cmp	r0, #0
   14600:	movt	r3, #2
   14604:	cmpne	r1, #0
   14608:	add	r2, r3, #16
   1460c:	vld1.64	{d16-d17}, [r3], r4
   14610:	vld1.64	{d20-d21}, [r3]
   14614:	vld1.64	{d18-d19}, [r2]
   14618:	mov	r2, sp
   1461c:	add	r5, r2, #16
   14620:	vst1.64	{d16-d17}, [r2], r4
   14624:	vst1.64	{d20-d21}, [r2]
   14628:	mov	r2, #10
   1462c:	vst1.64	{d18-d19}, [r5]
   14630:	str	r2, [sp]
   14634:	bne	1463c <__mempcpy_chk@plt+0x3600>
   14638:	bl	11030 <abort@plt>
   1463c:	str	r1, [sp, #44]	; 0x2c
   14640:	str	r0, [sp, #40]	; 0x28
   14644:	mov	r3, sp
   14648:	mov	r0, #0
   1464c:	mov	r1, lr
   14650:	mov	r2, ip
   14654:	bl	13ef0 <__mempcpy_chk@plt+0x2eb4>
   14658:	sub	sp, fp, #8
   1465c:	pop	{r4, r5, fp, pc}
   14660:	movw	r3, #28936	; 0x7108
   14664:	movt	r3, #2
   14668:	b	13ef0 <__mempcpy_chk@plt+0x2eb4>
   1466c:	movw	r3, #28936	; 0x7108
   14670:	mov	r2, r1
   14674:	mov	r1, r0
   14678:	mov	r0, #0
   1467c:	movt	r3, #2
   14680:	b	13ef0 <__mempcpy_chk@plt+0x2eb4>
   14684:	movw	r3, #28936	; 0x7108
   14688:	mvn	r2, #0
   1468c:	movt	r3, #2
   14690:	b	13ef0 <__mempcpy_chk@plt+0x2eb4>
   14694:	movw	r3, #28936	; 0x7108
   14698:	mov	r1, r0
   1469c:	mov	r0, #0
   146a0:	mvn	r2, #0
   146a4:	movt	r3, #2
   146a8:	b	13ef0 <__mempcpy_chk@plt+0x2eb4>
   146ac:	push	{r4, r5, fp, lr}
   146b0:	add	fp, sp, #8
   146b4:	mov	r5, r0
   146b8:	mov	r4, r1
   146bc:	mov	r0, #0
   146c0:	mov	r2, #5
   146c4:	mov	r1, r5
   146c8:	bl	10e68 <dcgettext@plt>
   146cc:	cmp	r0, r5
   146d0:	popne	{r4, r5, fp, pc}
   146d4:	bl	15e18 <__mempcpy_chk@plt+0x4ddc>
   146d8:	ldrb	r1, [r0]
   146dc:	and	r1, r1, #223	; 0xdf
   146e0:	cmp	r1, #71	; 0x47
   146e4:	beq	1474c <__mempcpy_chk@plt+0x3710>
   146e8:	cmp	r1, #85	; 0x55
   146ec:	bne	147a4 <__mempcpy_chk@plt+0x3768>
   146f0:	ldrb	r1, [r0, #1]
   146f4:	and	r1, r1, #223	; 0xdf
   146f8:	cmp	r1, #84	; 0x54
   146fc:	bne	147a4 <__mempcpy_chk@plt+0x3768>
   14700:	ldrb	r1, [r0, #2]
   14704:	and	r1, r1, #223	; 0xdf
   14708:	cmp	r1, #70	; 0x46
   1470c:	bne	147a4 <__mempcpy_chk@plt+0x3768>
   14710:	ldrb	r1, [r0, #3]
   14714:	cmp	r1, #45	; 0x2d
   14718:	bne	147a4 <__mempcpy_chk@plt+0x3768>
   1471c:	ldrb	r1, [r0, #4]
   14720:	cmp	r1, #56	; 0x38
   14724:	bne	147a4 <__mempcpy_chk@plt+0x3768>
   14728:	ldrb	r0, [r0, #5]
   1472c:	cmp	r0, #0
   14730:	bne	147a4 <__mempcpy_chk@plt+0x3768>
   14734:	ldrb	r1, [r5]
   14738:	movw	r2, #27226	; 0x6a5a
   1473c:	movw	r0, #27230	; 0x6a5e
   14740:	movt	r2, #1
   14744:	movt	r0, #1
   14748:	b	147d4 <__mempcpy_chk@plt+0x3798>
   1474c:	ldrb	r1, [r0, #1]
   14750:	and	r1, r1, #223	; 0xdf
   14754:	cmp	r1, #66	; 0x42
   14758:	bne	147a4 <__mempcpy_chk@plt+0x3768>
   1475c:	ldrb	r1, [r0, #2]
   14760:	cmp	r1, #49	; 0x31
   14764:	bne	147a4 <__mempcpy_chk@plt+0x3768>
   14768:	ldrb	r1, [r0, #3]
   1476c:	cmp	r1, #56	; 0x38
   14770:	bne	147a4 <__mempcpy_chk@plt+0x3768>
   14774:	ldrb	r1, [r0, #4]
   14778:	cmp	r1, #48	; 0x30
   1477c:	bne	147a4 <__mempcpy_chk@plt+0x3768>
   14780:	ldrb	r1, [r0, #5]
   14784:	cmp	r1, #51	; 0x33
   14788:	bne	147a4 <__mempcpy_chk@plt+0x3768>
   1478c:	ldrb	r1, [r0, #6]
   14790:	cmp	r1, #48	; 0x30
   14794:	bne	147a4 <__mempcpy_chk@plt+0x3768>
   14798:	ldrb	r0, [r0, #7]
   1479c:	cmp	r0, #0
   147a0:	beq	147c0 <__mempcpy_chk@plt+0x3784>
   147a4:	movw	r1, #27220	; 0x6a54
   147a8:	movw	r0, #27224	; 0x6a58
   147ac:	cmp	r4, #9
   147b0:	movt	r1, #1
   147b4:	movt	r0, #1
   147b8:	moveq	r0, r1
   147bc:	pop	{r4, r5, fp, pc}
   147c0:	ldrb	r1, [r5]
   147c4:	movw	r2, #27234	; 0x6a62
   147c8:	movw	r0, #27238	; 0x6a66
   147cc:	movt	r2, #1
   147d0:	movt	r0, #1
   147d4:	cmp	r1, #96	; 0x60
   147d8:	moveq	r0, r2
   147dc:	pop	{r4, r5, fp, pc}
   147e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147e4:	add	fp, sp, #28
   147e8:	sub	sp, sp, #60	; 0x3c
   147ec:	movw	r9, #29328	; 0x7290
   147f0:	mov	r5, r0
   147f4:	movw	r4, #29336	; 0x7298
   147f8:	movw	r6, #29332	; 0x7294
   147fc:	mov	r7, r3
   14800:	mov	r8, r2
   14804:	mov	sl, r1
   14808:	movt	r9, #2
   1480c:	movt	r4, #2
   14810:	movt	r6, #2
   14814:	ldrb	r0, [r9]
   14818:	cmp	r0, #0
   1481c:	bne	148a0 <__mempcpy_chk@plt+0x3864>
   14820:	str	r5, [sp, #8]
   14824:	mov	r5, r8
   14828:	mov	r8, r6
   1482c:	bl	15e18 <__mempcpy_chk@plt+0x4ddc>
   14830:	movw	r1, #27328	; 0x6ac0
   14834:	mov	r6, r0
   14838:	movt	r1, #1
   1483c:	bl	10dfc <strcmp@plt>
   14840:	clz	r1, r0
   14844:	cmp	r0, #0
   14848:	lsr	r1, r1, #5
   1484c:	str	r1, [r8]
   14850:	beq	14888 <__mempcpy_chk@plt+0x384c>
   14854:	movw	r1, #27328	; 0x6ac0
   14858:	mov	r0, r6
   1485c:	movt	r1, #1
   14860:	bl	10ef8 <iconv_open@plt>
   14864:	cmn	r0, #1
   14868:	str	r0, [r4]
   1486c:	bne	14888 <__mempcpy_chk@plt+0x384c>
   14870:	movw	r0, #27334	; 0x6ac6
   14874:	movw	r1, #27328	; 0x6ac0
   14878:	movt	r0, #1
   1487c:	movt	r1, #1
   14880:	bl	10ef8 <iconv_open@plt>
   14884:	str	r0, [r4]
   14888:	mov	r8, r5
   1488c:	ldr	r5, [sp, #8]
   14890:	movw	r6, #29332	; 0x7294
   14894:	mov	r0, #1
   14898:	movt	r6, #2
   1489c:	strb	r0, [r9]
   148a0:	ldr	r0, [r6]
   148a4:	cmp	r0, #0
   148a8:	ldreq	r1, [r4]
   148ac:	cmneq	r1, #1
   148b0:	beq	148e0 <__mempcpy_chk@plt+0x38a4>
   148b4:	cmp	r5, #127	; 0x7f
   148b8:	bhi	148ec <__mempcpy_chk@plt+0x38b0>
   148bc:	strb	r5, [fp, #-34]	; 0xffffffde
   148c0:	mov	r1, #1
   148c4:	cmp	r0, #0
   148c8:	beq	14914 <__mempcpy_chk@plt+0x38d8>
   148cc:	sub	r0, fp, #34	; 0x22
   148d0:	mov	r2, r7
   148d4:	blx	sl
   148d8:	sub	sp, fp, #28
   148dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148e0:	movw	r1, #27340	; 0x6acc
   148e4:	movt	r1, #1
   148e8:	b	149d4 <__mempcpy_chk@plt+0x3998>
   148ec:	sub	r0, fp, #34	; 0x22
   148f0:	mov	r1, r5
   148f4:	mov	r2, #6
   148f8:	bl	14b14 <__mempcpy_chk@plt+0x3ad8>
   148fc:	cmp	r0, #0
   14900:	bmi	149cc <__mempcpy_chk@plt+0x3990>
   14904:	mov	r1, r0
   14908:	ldr	r0, [r6]
   1490c:	cmp	r0, #0
   14910:	bne	148cc <__mempcpy_chk@plt+0x3890>
   14914:	sub	r0, fp, #34	; 0x22
   14918:	mov	r9, sl
   1491c:	str	r1, [sp, #20]
   14920:	add	sl, sp, #29
   14924:	add	r6, sp, #12
   14928:	add	r1, sp, #24
   1492c:	add	r2, sp, #20
   14930:	add	r3, sp, #16
   14934:	str	r0, [sp, #24]
   14938:	mov	r0, #25
   1493c:	str	sl, [sp, #16]
   14940:	str	r6, [sp]
   14944:	str	r0, [sp, #12]
   14948:	ldr	r0, [r4]
   1494c:	bl	10df0 <iconv@plt>
   14950:	cmn	r0, #1
   14954:	beq	149c0 <__mempcpy_chk@plt+0x3984>
   14958:	ldr	r1, [sp, #20]
   1495c:	cmp	r1, #0
   14960:	bne	149c0 <__mempcpy_chk@plt+0x3984>
   14964:	cmp	r0, #0
   14968:	beq	14984 <__mempcpy_chk@plt+0x3948>
   1496c:	ldr	r0, [sp, #16]
   14970:	sub	r0, r0, sl
   14974:	cmp	r0, #1
   14978:	ldrbeq	r0, [sp, #29]
   1497c:	cmpeq	r0, #63	; 0x3f
   14980:	beq	149c0 <__mempcpy_chk@plt+0x3984>
   14984:	ldr	r0, [r4]
   14988:	add	r3, sp, #16
   1498c:	mov	r1, #0
   14990:	mov	r2, #0
   14994:	str	r6, [sp]
   14998:	bl	10df0 <iconv@plt>
   1499c:	cmn	r0, #1
   149a0:	beq	149c0 <__mempcpy_chk@plt+0x3984>
   149a4:	ldr	r0, [sp, #16]
   149a8:	mov	r2, r7
   149ac:	sub	r1, r0, sl
   149b0:	mov	r0, sl
   149b4:	blx	r9
   149b8:	sub	sp, fp, #28
   149bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149c0:	mov	r0, r5
   149c4:	mov	r1, #0
   149c8:	b	149d8 <__mempcpy_chk@plt+0x399c>
   149cc:	movw	r1, #27366	; 0x6ae6
   149d0:	movt	r1, #1
   149d4:	mov	r0, r5
   149d8:	mov	r2, r7
   149dc:	blx	r8
   149e0:	sub	sp, fp, #28
   149e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149e8:	push	{fp, lr}
   149ec:	mov	fp, sp
   149f0:	mov	r3, r2
   149f4:	mov	r2, r1
   149f8:	mov	r1, #1
   149fc:	bl	10e98 <fwrite@plt>
   14a00:	mov	r0, #0
   14a04:	pop	{fp, pc}
   14a08:	push	{fp, lr}
   14a0c:	mov	fp, sp
   14a10:	mov	ip, r0
   14a14:	movw	r0, #19160	; 0x4ad8
   14a18:	movw	r3, #19020	; 0x4a4c
   14a1c:	cmp	r2, #0
   14a20:	mov	lr, r1
   14a24:	movw	r1, #18920	; 0x49e8
   14a28:	movt	r0, #1
   14a2c:	movt	r3, #1
   14a30:	movt	r1, #1
   14a34:	moveq	r3, r0
   14a38:	mov	r0, lr
   14a3c:	mov	r2, r3
   14a40:	mov	r3, ip
   14a44:	pop	{fp, lr}
   14a48:	b	147e0 <__mempcpy_chk@plt+0x37a4>
   14a4c:	push	{r4, r5, r6, sl, fp, lr}
   14a50:	add	fp, sp, #16
   14a54:	sub	sp, sp, #8
   14a58:	mov	r4, r0
   14a5c:	cmp	r1, #0
   14a60:	beq	14aa4 <__mempcpy_chk@plt+0x3a68>
   14a64:	mov	r5, r1
   14a68:	movw	r1, #27434	; 0x6b2a
   14a6c:	mov	r0, #0
   14a70:	mov	r2, #5
   14a74:	movt	r1, #1
   14a78:	bl	10e68 <dcgettext@plt>
   14a7c:	mov	r6, r0
   14a80:	mov	r0, #0
   14a84:	mov	r1, r5
   14a88:	mov	r2, #5
   14a8c:	bl	10e68 <dcgettext@plt>
   14a90:	str	r0, [sp]
   14a94:	mov	r0, #1
   14a98:	mov	r1, #0
   14a9c:	mov	r2, r6
   14aa0:	b	14ac4 <__mempcpy_chk@plt+0x3a88>
   14aa4:	movw	r1, #27389	; 0x6afd
   14aa8:	mov	r0, #0
   14aac:	mov	r2, #5
   14ab0:	movt	r1, #1
   14ab4:	bl	10e68 <dcgettext@plt>
   14ab8:	mov	r2, r0
   14abc:	mov	r0, #1
   14ac0:	mov	r1, #0
   14ac4:	mov	r3, r4
   14ac8:	bl	10ed4 <error@plt>
   14acc:	mvn	r0, #0
   14ad0:	sub	sp, fp, #16
   14ad4:	pop	{r4, r5, r6, sl, fp, pc}
   14ad8:	push	{fp, lr}
   14adc:	mov	fp, sp
   14ae0:	mov	r3, r0
   14ae4:	movw	r0, #27483	; 0x6b5b
   14ae8:	mov	r1, r2
   14aec:	movw	r2, #27490	; 0x6b62
   14af0:	movt	r0, #1
   14af4:	cmp	r3, #65536	; 0x10000
   14af8:	movt	r2, #1
   14afc:	movcc	r2, r0
   14b00:	mov	r0, r1
   14b04:	mov	r1, #1
   14b08:	bl	10fa0 <__fprintf_chk@plt>
   14b0c:	mvn	r0, #0
   14b10:	pop	{fp, pc}
   14b14:	push	{fp, lr}
   14b18:	mov	fp, sp
   14b1c:	mvn	r3, #1
   14b20:	cmp	r1, #128	; 0x80
   14b24:	bcc	14bd0 <__mempcpy_chk@plt+0x3b94>
   14b28:	mov	ip, #2
   14b2c:	cmp	r1, #2048	; 0x800
   14b30:	bcs	14bac <__mempcpy_chk@plt+0x3b70>
   14b34:	cmp	ip, r2
   14b38:	mvn	r3, #1
   14b3c:	bgt	14bd0 <__mempcpy_chk@plt+0x3b94>
   14b40:	cmp	ip, #2
   14b44:	beq	14b88 <__mempcpy_chk@plt+0x3b4c>
   14b48:	cmp	ip, #3
   14b4c:	beq	14b70 <__mempcpy_chk@plt+0x3b34>
   14b50:	cmp	ip, #4
   14b54:	bne	14ba0 <__mempcpy_chk@plt+0x3b64>
   14b58:	mov	r2, #2
   14b5c:	mov	r3, r1
   14b60:	bfi	r3, r2, #6, #26
   14b64:	mov	r2, #65536	; 0x10000
   14b68:	orr	r1, r2, r1, lsr #6
   14b6c:	strb	r3, [r0, #3]
   14b70:	mov	r2, #2
   14b74:	mov	r3, r1
   14b78:	bfi	r3, r2, #6, #26
   14b7c:	mov	r2, #2048	; 0x800
   14b80:	orr	r1, r2, r1, lsr #6
   14b84:	strb	r3, [r0, #2]
   14b88:	mov	r2, #192	; 0xc0
   14b8c:	orr	r2, r2, r1, lsr #6
   14b90:	strb	r2, [r0]
   14b94:	mov	r2, #2
   14b98:	bfi	r1, r2, #6, #26
   14b9c:	strb	r1, [r0, #1]
   14ba0:	mov	r3, ip
   14ba4:	mov	r0, r3
   14ba8:	pop	{fp, pc}
   14bac:	mov	r3, #0
   14bb0:	cmp	r3, r1, lsr #16
   14bb4:	bne	14bd8 <__mempcpy_chk@plt+0x3b9c>
   14bb8:	mov	lr, r1
   14bbc:	mov	ip, #3
   14bc0:	mvn	r3, #0
   14bc4:	bfc	lr, #0, #11
   14bc8:	cmp	lr, #55296	; 0xd800
   14bcc:	bne	14b34 <__mempcpy_chk@plt+0x3af8>
   14bd0:	mov	r0, r3
   14bd4:	pop	{fp, pc}
   14bd8:	lsr	lr, r1, #16
   14bdc:	mvn	r3, #0
   14be0:	mov	ip, #4
   14be4:	cmp	lr, #16
   14be8:	bls	14b34 <__mempcpy_chk@plt+0x3af8>
   14bec:	b	14bd0 <__mempcpy_chk@plt+0x3b94>
   14bf0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14bf4:	add	fp, sp, #24
   14bf8:	sub	sp, sp, #32
   14bfc:	ldr	r6, [fp, #12]
   14c00:	ldr	r7, [fp, #8]
   14c04:	mov	r4, r2
   14c08:	mov	r8, r0
   14c0c:	cmp	r1, #0
   14c10:	beq	14c38 <__mempcpy_chk@plt+0x3bfc>
   14c14:	movw	r2, #27497	; 0x6b69
   14c18:	mov	r5, r1
   14c1c:	str	r3, [sp, #4]
   14c20:	str	r4, [sp]
   14c24:	mov	r0, r8
   14c28:	mov	r1, #1
   14c2c:	movt	r2, #1
   14c30:	mov	r3, r5
   14c34:	b	14c50 <__mempcpy_chk@plt+0x3c14>
   14c38:	movw	r2, #27509	; 0x6b75
   14c3c:	str	r3, [sp]
   14c40:	mov	r0, r8
   14c44:	mov	r1, #1
   14c48:	mov	r3, r4
   14c4c:	movt	r2, #1
   14c50:	bl	10fa0 <__fprintf_chk@plt>
   14c54:	movw	r1, #27516	; 0x6b7c
   14c58:	mov	r0, #0
   14c5c:	mov	r2, #5
   14c60:	movt	r1, #1
   14c64:	bl	10e68 <dcgettext@plt>
   14c68:	movw	r2, #28234	; 0x6e4a
   14c6c:	mov	r3, r0
   14c70:	movw	r0, #2022	; 0x7e6
   14c74:	mov	r1, #1
   14c78:	movt	r2, #1
   14c7c:	str	r0, [sp]
   14c80:	mov	r0, r8
   14c84:	bl	10fa0 <__fprintf_chk@plt>
   14c88:	movw	r4, #24867	; 0x6123
   14c8c:	mov	r1, r8
   14c90:	movt	r4, #1
   14c94:	mov	r0, r4
   14c98:	bl	10dd8 <fputs_unlocked@plt>
   14c9c:	movw	r1, #27520	; 0x6b80
   14ca0:	mov	r0, #0
   14ca4:	mov	r2, #5
   14ca8:	movt	r1, #1
   14cac:	bl	10e68 <dcgettext@plt>
   14cb0:	movw	r3, #27691	; 0x6c2b
   14cb4:	mov	r2, r0
   14cb8:	mov	r0, r8
   14cbc:	mov	r1, #1
   14cc0:	movt	r3, #1
   14cc4:	bl	10fa0 <__fprintf_chk@plt>
   14cc8:	mov	r0, r4
   14ccc:	mov	r1, r8
   14cd0:	bl	10dd8 <fputs_unlocked@plt>
   14cd4:	cmp	r6, #9
   14cd8:	bhi	14d14 <__mempcpy_chk@plt+0x3cd8>
   14cdc:	add	r0, pc, #0
   14ce0:	ldr	pc, [r0, r6, lsl #2]
   14ce4:	andeq	r4, r1, ip, lsl #26
   14ce8:	andeq	r4, r1, r0, lsr #26
   14cec:	andeq	r4, r1, r0, asr sp
   14cf0:	andeq	r4, r1, r8, ror sp
   14cf4:	andeq	r4, r1, r0, lsr #27
   14cf8:	andeq	r4, r1, r8, asr #27
   14cfc:	strdeq	r4, [r1], -r0
   14d00:	andeq	r4, r1, r8, lsr #28
   14d04:	andeq	r4, r1, r8, asr #29
   14d08:	andeq	r4, r1, r0, ror lr
   14d0c:	sub	sp, fp, #24
   14d10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d14:	movw	r1, #28044	; 0x6d8c
   14d18:	movt	r1, #1
   14d1c:	b	14e78 <__mempcpy_chk@plt+0x3e3c>
   14d20:	movw	r1, #27725	; 0x6c4d
   14d24:	mov	r0, #0
   14d28:	mov	r2, #5
   14d2c:	movt	r1, #1
   14d30:	bl	10e68 <dcgettext@plt>
   14d34:	ldr	r3, [r7]
   14d38:	mov	r2, r0
   14d3c:	mov	r0, r8
   14d40:	mov	r1, #1
   14d44:	sub	sp, fp, #24
   14d48:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d4c:	b	10fa0 <__fprintf_chk@plt>
   14d50:	movw	r1, #27741	; 0x6c5d
   14d54:	mov	r0, #0
   14d58:	mov	r2, #5
   14d5c:	movt	r1, #1
   14d60:	bl	10e68 <dcgettext@plt>
   14d64:	mov	r2, r0
   14d68:	ldr	r3, [r7]
   14d6c:	ldr	r0, [r7, #4]
   14d70:	str	r0, [sp]
   14d74:	b	14e64 <__mempcpy_chk@plt+0x3e28>
   14d78:	movw	r1, #27764	; 0x6c74
   14d7c:	mov	r0, #0
   14d80:	mov	r2, #5
   14d84:	movt	r1, #1
   14d88:	bl	10e68 <dcgettext@plt>
   14d8c:	mov	r2, r0
   14d90:	ldr	r3, [r7]
   14d94:	ldmib	r7, {r0, r1}
   14d98:	stm	sp, {r0, r1}
   14d9c:	b	14e64 <__mempcpy_chk@plt+0x3e28>
   14da0:	movw	r1, #27792	; 0x6c90
   14da4:	mov	r0, #0
   14da8:	mov	r2, #5
   14dac:	movt	r1, #1
   14db0:	bl	10e68 <dcgettext@plt>
   14db4:	ldr	r3, [r7]
   14db8:	mov	r2, r0
   14dbc:	ldmib	r7, {r0, r1, r7}
   14dc0:	stm	sp, {r0, r1, r7}
   14dc4:	b	14e64 <__mempcpy_chk@plt+0x3e28>
   14dc8:	movw	r1, #27824	; 0x6cb0
   14dcc:	mov	r0, #0
   14dd0:	mov	r2, #5
   14dd4:	movt	r1, #1
   14dd8:	bl	10e68 <dcgettext@plt>
   14ddc:	ldr	r3, [r7]
   14de0:	mov	r2, r0
   14de4:	ldmib	r7, {r0, r1, r6, r7}
   14de8:	stm	sp, {r0, r1, r6, r7}
   14dec:	b	14e64 <__mempcpy_chk@plt+0x3e28>
   14df0:	movw	r1, #27860	; 0x6cd4
   14df4:	mov	r0, #0
   14df8:	mov	r2, #5
   14dfc:	movt	r1, #1
   14e00:	bl	10e68 <dcgettext@plt>
   14e04:	mov	r2, r0
   14e08:	ldr	r3, [r7]
   14e0c:	ldmib	r7, {r0, r1, r6}
   14e10:	ldr	r5, [r7, #16]
   14e14:	ldr	r7, [r7, #20]
   14e18:	stm	sp, {r0, r1, r6}
   14e1c:	str	r5, [sp, #12]
   14e20:	str	r7, [sp, #16]
   14e24:	b	14e64 <__mempcpy_chk@plt+0x3e28>
   14e28:	movw	r1, #27900	; 0x6cfc
   14e2c:	mov	r0, #0
   14e30:	mov	r2, #5
   14e34:	movt	r1, #1
   14e38:	bl	10e68 <dcgettext@plt>
   14e3c:	mov	r2, r0
   14e40:	ldr	r3, [r7]
   14e44:	ldmib	r7, {r0, r1, r6}
   14e48:	ldr	r5, [r7, #16]
   14e4c:	ldr	r4, [r7, #20]
   14e50:	ldr	r7, [r7, #24]
   14e54:	stm	sp, {r0, r1, r6}
   14e58:	str	r5, [sp, #12]
   14e5c:	str	r4, [sp, #16]
   14e60:	str	r7, [sp, #20]
   14e64:	mov	r0, r8
   14e68:	mov	r1, #1
   14e6c:	b	14f18 <__mempcpy_chk@plt+0x3edc>
   14e70:	movw	r1, #27992	; 0x6d58
   14e74:	movt	r1, #1
   14e78:	mov	r0, #0
   14e7c:	mov	r2, #5
   14e80:	bl	10e68 <dcgettext@plt>
   14e84:	mov	ip, r0
   14e88:	ldr	r3, [r7]
   14e8c:	ldr	r0, [r7, #4]
   14e90:	ldr	r1, [r7, #8]
   14e94:	ldr	r6, [r7, #12]
   14e98:	ldr	r5, [r7, #16]
   14e9c:	ldr	r4, [r7, #20]
   14ea0:	ldr	r2, [r7, #24]
   14ea4:	ldr	lr, [r7, #28]
   14ea8:	ldr	r7, [r7, #32]
   14eac:	stm	sp, {r0, r1, r6}
   14eb0:	str	r5, [sp, #12]
   14eb4:	str	r4, [sp, #16]
   14eb8:	str	r2, [sp, #20]
   14ebc:	str	lr, [sp, #24]
   14ec0:	str	r7, [sp, #28]
   14ec4:	b	14f0c <__mempcpy_chk@plt+0x3ed0>
   14ec8:	movw	r1, #27944	; 0x6d28
   14ecc:	mov	r0, #0
   14ed0:	mov	r2, #5
   14ed4:	movt	r1, #1
   14ed8:	bl	10e68 <dcgettext@plt>
   14edc:	mov	ip, r0
   14ee0:	ldr	r3, [r7]
   14ee4:	ldmib	r7, {r0, r1, r6}
   14ee8:	ldr	r5, [r7, #16]
   14eec:	ldr	r4, [r7, #20]
   14ef0:	ldr	r2, [r7, #24]
   14ef4:	ldr	r7, [r7, #28]
   14ef8:	stm	sp, {r0, r1, r6}
   14efc:	str	r5, [sp, #12]
   14f00:	str	r4, [sp, #16]
   14f04:	str	r2, [sp, #20]
   14f08:	str	r7, [sp, #24]
   14f0c:	mov	r0, r8
   14f10:	mov	r1, #1
   14f14:	mov	r2, ip
   14f18:	bl	10fa0 <__fprintf_chk@plt>
   14f1c:	sub	sp, fp, #24
   14f20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f24:	push	{r4, sl, fp, lr}
   14f28:	add	fp, sp, #8
   14f2c:	sub	sp, sp, #8
   14f30:	ldr	ip, [fp, #8]
   14f34:	mov	lr, #0
   14f38:	ldr	r4, [ip, lr, lsl #2]
   14f3c:	add	lr, lr, #1
   14f40:	cmp	r4, #0
   14f44:	bne	14f38 <__mempcpy_chk@plt+0x3efc>
   14f48:	sub	r4, lr, #1
   14f4c:	str	ip, [sp]
   14f50:	str	r4, [sp, #4]
   14f54:	bl	14bf0 <__mempcpy_chk@plt+0x3bb4>
   14f58:	sub	sp, fp, #8
   14f5c:	pop	{r4, sl, fp, pc}
   14f60:	push	{fp, lr}
   14f64:	mov	fp, sp
   14f68:	sub	sp, sp, #48	; 0x30
   14f6c:	ldr	ip, [fp, #8]
   14f70:	ldr	lr, [ip]
   14f74:	cmp	lr, #0
   14f78:	str	lr, [sp, #8]
   14f7c:	beq	15018 <__mempcpy_chk@plt+0x3fdc>
   14f80:	ldr	lr, [ip, #4]
   14f84:	cmp	lr, #0
   14f88:	str	lr, [sp, #12]
   14f8c:	beq	15020 <__mempcpy_chk@plt+0x3fe4>
   14f90:	ldr	lr, [ip, #8]
   14f94:	cmp	lr, #0
   14f98:	str	lr, [sp, #16]
   14f9c:	beq	15028 <__mempcpy_chk@plt+0x3fec>
   14fa0:	ldr	lr, [ip, #12]
   14fa4:	cmp	lr, #0
   14fa8:	str	lr, [sp, #20]
   14fac:	beq	15030 <__mempcpy_chk@plt+0x3ff4>
   14fb0:	ldr	lr, [ip, #16]
   14fb4:	cmp	lr, #0
   14fb8:	str	lr, [sp, #24]
   14fbc:	beq	15038 <__mempcpy_chk@plt+0x3ffc>
   14fc0:	ldr	lr, [ip, #20]
   14fc4:	cmp	lr, #0
   14fc8:	str	lr, [sp, #28]
   14fcc:	beq	15040 <__mempcpy_chk@plt+0x4004>
   14fd0:	ldr	lr, [ip, #24]
   14fd4:	cmp	lr, #0
   14fd8:	str	lr, [sp, #32]
   14fdc:	beq	15048 <__mempcpy_chk@plt+0x400c>
   14fe0:	ldr	lr, [ip, #28]
   14fe4:	cmp	lr, #0
   14fe8:	str	lr, [sp, #36]	; 0x24
   14fec:	beq	15050 <__mempcpy_chk@plt+0x4014>
   14ff0:	ldr	lr, [ip, #32]
   14ff4:	cmp	lr, #0
   14ff8:	str	lr, [sp, #40]	; 0x28
   14ffc:	beq	15058 <__mempcpy_chk@plt+0x401c>
   15000:	ldr	lr, [ip, #36]	; 0x24
   15004:	mov	ip, #10
   15008:	cmp	lr, #0
   1500c:	str	lr, [sp, #44]	; 0x2c
   15010:	movweq	ip, #9
   15014:	b	1505c <__mempcpy_chk@plt+0x4020>
   15018:	mov	ip, #0
   1501c:	b	1505c <__mempcpy_chk@plt+0x4020>
   15020:	mov	ip, #1
   15024:	b	1505c <__mempcpy_chk@plt+0x4020>
   15028:	mov	ip, #2
   1502c:	b	1505c <__mempcpy_chk@plt+0x4020>
   15030:	mov	ip, #3
   15034:	b	1505c <__mempcpy_chk@plt+0x4020>
   15038:	mov	ip, #4
   1503c:	b	1505c <__mempcpy_chk@plt+0x4020>
   15040:	mov	ip, #5
   15044:	b	1505c <__mempcpy_chk@plt+0x4020>
   15048:	mov	ip, #6
   1504c:	b	1505c <__mempcpy_chk@plt+0x4020>
   15050:	mov	ip, #7
   15054:	b	1505c <__mempcpy_chk@plt+0x4020>
   15058:	mov	ip, #8
   1505c:	add	lr, sp, #8
   15060:	str	ip, [sp, #4]
   15064:	str	lr, [sp]
   15068:	bl	14bf0 <__mempcpy_chk@plt+0x3bb4>
   1506c:	mov	sp, fp
   15070:	pop	{fp, pc}
   15074:	push	{fp, lr}
   15078:	mov	fp, sp
   1507c:	sub	sp, sp, #56	; 0x38
   15080:	add	ip, fp, #8
   15084:	str	ip, [sp, #12]
   15088:	ldr	lr, [fp, #8]
   1508c:	cmp	lr, #0
   15090:	str	lr, [sp, #16]
   15094:	beq	15130 <__mempcpy_chk@plt+0x40f4>
   15098:	ldr	lr, [ip, #4]
   1509c:	cmp	lr, #0
   150a0:	str	lr, [sp, #20]
   150a4:	beq	15138 <__mempcpy_chk@plt+0x40fc>
   150a8:	ldr	lr, [ip, #8]
   150ac:	cmp	lr, #0
   150b0:	str	lr, [sp, #24]
   150b4:	beq	15140 <__mempcpy_chk@plt+0x4104>
   150b8:	ldr	lr, [ip, #12]
   150bc:	cmp	lr, #0
   150c0:	str	lr, [sp, #28]
   150c4:	beq	15148 <__mempcpy_chk@plt+0x410c>
   150c8:	ldr	lr, [ip, #16]
   150cc:	cmp	lr, #0
   150d0:	str	lr, [sp, #32]
   150d4:	beq	15150 <__mempcpy_chk@plt+0x4114>
   150d8:	ldr	lr, [ip, #20]
   150dc:	cmp	lr, #0
   150e0:	str	lr, [sp, #36]	; 0x24
   150e4:	beq	15158 <__mempcpy_chk@plt+0x411c>
   150e8:	ldr	lr, [ip, #24]
   150ec:	cmp	lr, #0
   150f0:	str	lr, [sp, #40]	; 0x28
   150f4:	beq	15160 <__mempcpy_chk@plt+0x4124>
   150f8:	ldr	lr, [ip, #28]
   150fc:	cmp	lr, #0
   15100:	str	lr, [sp, #44]	; 0x2c
   15104:	beq	15168 <__mempcpy_chk@plt+0x412c>
   15108:	ldr	lr, [ip, #32]
   1510c:	cmp	lr, #0
   15110:	str	lr, [sp, #48]	; 0x30
   15114:	beq	15170 <__mempcpy_chk@plt+0x4134>
   15118:	ldr	lr, [ip, #36]	; 0x24
   1511c:	mov	ip, #10
   15120:	cmp	lr, #0
   15124:	str	lr, [sp, #52]	; 0x34
   15128:	movweq	ip, #9
   1512c:	b	15174 <__mempcpy_chk@plt+0x4138>
   15130:	mov	ip, #0
   15134:	b	15174 <__mempcpy_chk@plt+0x4138>
   15138:	mov	ip, #1
   1513c:	b	15174 <__mempcpy_chk@plt+0x4138>
   15140:	mov	ip, #2
   15144:	b	15174 <__mempcpy_chk@plt+0x4138>
   15148:	mov	ip, #3
   1514c:	b	15174 <__mempcpy_chk@plt+0x4138>
   15150:	mov	ip, #4
   15154:	b	15174 <__mempcpy_chk@plt+0x4138>
   15158:	mov	ip, #5
   1515c:	b	15174 <__mempcpy_chk@plt+0x4138>
   15160:	mov	ip, #6
   15164:	b	15174 <__mempcpy_chk@plt+0x4138>
   15168:	mov	ip, #7
   1516c:	b	15174 <__mempcpy_chk@plt+0x4138>
   15170:	mov	ip, #8
   15174:	add	lr, sp, #16
   15178:	str	ip, [sp, #4]
   1517c:	str	lr, [sp]
   15180:	bl	14bf0 <__mempcpy_chk@plt+0x3bb4>
   15184:	mov	sp, fp
   15188:	pop	{fp, pc}
   1518c:	push	{fp, lr}
   15190:	mov	fp, sp
   15194:	movw	r0, #28996	; 0x7144
   15198:	movt	r0, #2
   1519c:	ldr	r1, [r0]
   151a0:	movw	r0, #24867	; 0x6123
   151a4:	movt	r0, #1
   151a8:	bl	10dd8 <fputs_unlocked@plt>
   151ac:	movw	r1, #28104	; 0x6dc8
   151b0:	mov	r0, #0
   151b4:	mov	r2, #5
   151b8:	movt	r1, #1
   151bc:	bl	10e68 <dcgettext@plt>
   151c0:	movw	r2, #28124	; 0x6ddc
   151c4:	mov	r1, r0
   151c8:	mov	r0, #1
   151cc:	movt	r2, #1
   151d0:	bl	10f88 <__printf_chk@plt>
   151d4:	movw	r1, #28146	; 0x6df2
   151d8:	mov	r0, #0
   151dc:	mov	r2, #5
   151e0:	movt	r1, #1
   151e4:	bl	10e68 <dcgettext@plt>
   151e8:	movw	r2, #26249	; 0x6689
   151ec:	movw	r3, #26469	; 0x6765
   151f0:	mov	r1, r0
   151f4:	mov	r0, #1
   151f8:	movt	r2, #1
   151fc:	movt	r3, #1
   15200:	bl	10f88 <__printf_chk@plt>
   15204:	movw	r1, #28166	; 0x6e06
   15208:	mov	r0, #0
   1520c:	mov	r2, #5
   15210:	movt	r1, #1
   15214:	bl	10e68 <dcgettext@plt>
   15218:	movw	r2, #28205	; 0x6e2d
   1521c:	mov	r1, r0
   15220:	mov	r0, #1
   15224:	movt	r2, #1
   15228:	pop	{fp, lr}
   1522c:	b	10f88 <__printf_chk@plt>
   15230:	push	{r4, r5, r6, sl, fp, lr}
   15234:	add	fp, sp, #16
   15238:	mov	r4, r2
   1523c:	mov	r5, r1
   15240:	mov	r6, r0
   15244:	bl	15eb4 <__mempcpy_chk@plt+0x4e78>
   15248:	cmp	r0, #0
   1524c:	popne	{r4, r5, r6, sl, fp, pc}
   15250:	cmp	r6, #0
   15254:	beq	15268 <__mempcpy_chk@plt+0x422c>
   15258:	cmp	r5, #0
   1525c:	cmpne	r4, #0
   15260:	bne	15268 <__mempcpy_chk@plt+0x422c>
   15264:	pop	{r4, r5, r6, sl, fp, pc}
   15268:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   1526c:	push	{r4, r5, r6, sl, fp, lr}
   15270:	add	fp, sp, #16
   15274:	mov	r4, r2
   15278:	mov	r5, r1
   1527c:	mov	r6, r0
   15280:	bl	15eb4 <__mempcpy_chk@plt+0x4e78>
   15284:	cmp	r0, #0
   15288:	popne	{r4, r5, r6, sl, fp, pc}
   1528c:	cmp	r6, #0
   15290:	beq	152a4 <__mempcpy_chk@plt+0x4268>
   15294:	cmp	r5, #0
   15298:	cmpne	r4, #0
   1529c:	bne	152a4 <__mempcpy_chk@plt+0x4268>
   152a0:	pop	{r4, r5, r6, sl, fp, pc}
   152a4:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   152a8:	push	{fp, lr}
   152ac:	mov	fp, sp
   152b0:	bl	15ac4 <__mempcpy_chk@plt+0x4a88>
   152b4:	cmp	r0, #0
   152b8:	popne	{fp, pc}
   152bc:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   152c0:	push	{fp, lr}
   152c4:	mov	fp, sp
   152c8:	bl	15ac4 <__mempcpy_chk@plt+0x4a88>
   152cc:	cmp	r0, #0
   152d0:	popne	{fp, pc}
   152d4:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   152d8:	push	{fp, lr}
   152dc:	mov	fp, sp
   152e0:	bl	15ac4 <__mempcpy_chk@plt+0x4a88>
   152e4:	cmp	r0, #0
   152e8:	popne	{fp, pc}
   152ec:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   152f0:	push	{r4, r5, fp, lr}
   152f4:	add	fp, sp, #8
   152f8:	mov	r4, r1
   152fc:	mov	r5, r0
   15300:	bl	15af4 <__mempcpy_chk@plt+0x4ab8>
   15304:	cmp	r0, #0
   15308:	popne	{r4, r5, fp, pc}
   1530c:	cmp	r5, #0
   15310:	beq	15320 <__mempcpy_chk@plt+0x42e4>
   15314:	cmp	r4, #0
   15318:	bne	15320 <__mempcpy_chk@plt+0x42e4>
   1531c:	pop	{r4, r5, fp, pc}
   15320:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   15324:	push	{fp, lr}
   15328:	mov	fp, sp
   1532c:	cmp	r1, #0
   15330:	orreq	r1, r1, #1
   15334:	bl	15af4 <__mempcpy_chk@plt+0x4ab8>
   15338:	cmp	r0, #0
   1533c:	popne	{fp, pc}
   15340:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   15344:	push	{fp, lr}
   15348:	mov	fp, sp
   1534c:	clz	r3, r2
   15350:	lsr	ip, r3, #5
   15354:	clz	r3, r1
   15358:	lsr	r3, r3, #5
   1535c:	orrs	r3, r3, ip
   15360:	movwne	r1, #1
   15364:	movwne	r2, #1
   15368:	bl	15eb4 <__mempcpy_chk@plt+0x4e78>
   1536c:	cmp	r0, #0
   15370:	popne	{fp, pc}
   15374:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   15378:	push	{fp, lr}
   1537c:	mov	fp, sp
   15380:	mov	r2, r1
   15384:	mov	r1, r0
   15388:	mov	r0, #0
   1538c:	bl	15eb4 <__mempcpy_chk@plt+0x4e78>
   15390:	cmp	r0, #0
   15394:	popne	{fp, pc}
   15398:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   1539c:	push	{fp, lr}
   153a0:	mov	fp, sp
   153a4:	mov	r2, r1
   153a8:	mov	r1, r0
   153ac:	clz	r0, r2
   153b0:	clz	r3, r1
   153b4:	lsr	r0, r0, #5
   153b8:	lsr	r3, r3, #5
   153bc:	orrs	r0, r3, r0
   153c0:	mov	r0, #0
   153c4:	movwne	r1, #1
   153c8:	movwne	r2, #1
   153cc:	bl	15eb4 <__mempcpy_chk@plt+0x4e78>
   153d0:	cmp	r0, #0
   153d4:	popne	{fp, pc}
   153d8:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   153dc:	push	{r4, r5, r6, sl, fp, lr}
   153e0:	add	fp, sp, #16
   153e4:	ldr	r5, [r1]
   153e8:	mov	r4, r1
   153ec:	mov	r6, r0
   153f0:	cmp	r0, #0
   153f4:	beq	1540c <__mempcpy_chk@plt+0x43d0>
   153f8:	mov	r0, #1
   153fc:	add	r0, r0, r5, lsr #1
   15400:	adds	r5, r5, r0
   15404:	bcc	15414 <__mempcpy_chk@plt+0x43d8>
   15408:	b	15450 <__mempcpy_chk@plt+0x4414>
   1540c:	cmp	r5, #0
   15410:	movweq	r5, #64	; 0x40
   15414:	mov	r0, r6
   15418:	mov	r1, r5
   1541c:	mov	r2, #1
   15420:	bl	15eb4 <__mempcpy_chk@plt+0x4e78>
   15424:	cmp	r5, #0
   15428:	mov	r1, r5
   1542c:	movwne	r1, #1
   15430:	cmp	r0, #0
   15434:	bne	15448 <__mempcpy_chk@plt+0x440c>
   15438:	clz	r2, r6
   1543c:	lsr	r2, r2, #5
   15440:	orrs	r1, r2, r1
   15444:	bne	15450 <__mempcpy_chk@plt+0x4414>
   15448:	str	r5, [r4]
   1544c:	pop	{r4, r5, r6, sl, fp, pc}
   15450:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   15454:	push	{r4, r5, r6, r7, fp, lr}
   15458:	add	fp, sp, #16
   1545c:	ldr	r5, [r1]
   15460:	mov	r6, r2
   15464:	mov	r4, r1
   15468:	mov	r7, r0
   1546c:	cmp	r0, #0
   15470:	beq	15488 <__mempcpy_chk@plt+0x444c>
   15474:	mov	r0, #1
   15478:	add	r0, r0, r5, lsr #1
   1547c:	adds	r5, r5, r0
   15480:	bcc	154a0 <__mempcpy_chk@plt+0x4464>
   15484:	b	154d4 <__mempcpy_chk@plt+0x4498>
   15488:	cmp	r5, #0
   1548c:	bne	154a0 <__mempcpy_chk@plt+0x4464>
   15490:	mov	r0, #64	; 0x40
   15494:	cmp	r6, #64	; 0x40
   15498:	udiv	r5, r0, r6
   1549c:	addhi	r5, r5, #1
   154a0:	mov	r0, r7
   154a4:	mov	r1, r5
   154a8:	mov	r2, r6
   154ac:	bl	15eb4 <__mempcpy_chk@plt+0x4e78>
   154b0:	cmp	r0, #0
   154b4:	bne	154cc <__mempcpy_chk@plt+0x4490>
   154b8:	cmp	r7, #0
   154bc:	beq	154d4 <__mempcpy_chk@plt+0x4498>
   154c0:	cmp	r6, #0
   154c4:	cmpne	r5, #0
   154c8:	bne	154d4 <__mempcpy_chk@plt+0x4498>
   154cc:	str	r5, [r4]
   154d0:	pop	{r4, r5, r6, r7, fp, pc}
   154d4:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   154d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   154dc:	add	fp, sp, #24
   154e0:	mov	r8, r1
   154e4:	ldr	r1, [r1]
   154e8:	mov	r5, r0
   154ec:	add	r0, r1, r1, asr #1
   154f0:	cmp	r0, r1
   154f4:	mvnvs	r0, #-2147483648	; 0x80000000
   154f8:	cmp	r0, r3
   154fc:	mov	r7, r0
   15500:	movgt	r7, r3
   15504:	cmn	r3, #1
   15508:	movle	r7, r0
   1550c:	ldr	r0, [fp, #8]
   15510:	cmn	r0, #1
   15514:	ble	1553c <__mempcpy_chk@plt+0x4500>
   15518:	cmp	r0, #0
   1551c:	beq	15590 <__mempcpy_chk@plt+0x4554>
   15520:	cmn	r7, #1
   15524:	ble	15564 <__mempcpy_chk@plt+0x4528>
   15528:	mvn	r4, #-2147483648	; 0x80000000
   1552c:	udiv	r6, r4, r0
   15530:	cmp	r6, r7
   15534:	bge	15590 <__mempcpy_chk@plt+0x4554>
   15538:	b	155a0 <__mempcpy_chk@plt+0x4564>
   1553c:	cmn	r7, #1
   15540:	ble	15580 <__mempcpy_chk@plt+0x4544>
   15544:	cmn	r0, #1
   15548:	beq	15590 <__mempcpy_chk@plt+0x4554>
   1554c:	mov	r6, #-2147483648	; 0x80000000
   15550:	mvn	r4, #-2147483648	; 0x80000000
   15554:	sdiv	r6, r6, r0
   15558:	cmp	r6, r7
   1555c:	bge	15590 <__mempcpy_chk@plt+0x4554>
   15560:	b	155a0 <__mempcpy_chk@plt+0x4564>
   15564:	beq	15590 <__mempcpy_chk@plt+0x4554>
   15568:	mov	r6, #-2147483648	; 0x80000000
   1556c:	mvn	r4, #-2147483648	; 0x80000000
   15570:	sdiv	r6, r6, r7
   15574:	cmp	r6, r0
   15578:	bge	15590 <__mempcpy_chk@plt+0x4554>
   1557c:	b	155a0 <__mempcpy_chk@plt+0x4564>
   15580:	mvn	r4, #-2147483648	; 0x80000000
   15584:	sdiv	r6, r4, r0
   15588:	cmp	r7, r6
   1558c:	blt	155a0 <__mempcpy_chk@plt+0x4564>
   15590:	mul	r6, r7, r0
   15594:	mov	r4, #64	; 0x40
   15598:	cmp	r6, #63	; 0x3f
   1559c:	bgt	155a8 <__mempcpy_chk@plt+0x456c>
   155a0:	sdiv	r7, r4, r0
   155a4:	mul	r6, r7, r0
   155a8:	cmp	r5, #0
   155ac:	moveq	r4, #0
   155b0:	streq	r4, [r8]
   155b4:	sub	r4, r7, r1
   155b8:	cmp	r4, r2
   155bc:	bge	15668 <__mempcpy_chk@plt+0x462c>
   155c0:	add	r7, r1, r2
   155c4:	mov	r6, #0
   155c8:	mov	r2, #0
   155cc:	cmp	r7, r3
   155d0:	movwgt	r6, #1
   155d4:	cmn	r3, #1
   155d8:	movwgt	r2, #1
   155dc:	cmp	r7, r1
   155e0:	bvs	1569c <__mempcpy_chk@plt+0x4660>
   155e4:	ands	r1, r2, r6
   155e8:	bne	1569c <__mempcpy_chk@plt+0x4660>
   155ec:	cmn	r0, #1
   155f0:	ble	15618 <__mempcpy_chk@plt+0x45dc>
   155f4:	cmp	r0, #0
   155f8:	beq	15664 <__mempcpy_chk@plt+0x4628>
   155fc:	cmn	r7, #1
   15600:	ble	1563c <__mempcpy_chk@plt+0x4600>
   15604:	mvn	r1, #-2147483648	; 0x80000000
   15608:	udiv	r1, r1, r0
   1560c:	cmp	r1, r7
   15610:	bge	15664 <__mempcpy_chk@plt+0x4628>
   15614:	b	1569c <__mempcpy_chk@plt+0x4660>
   15618:	cmn	r7, #1
   1561c:	ble	15654 <__mempcpy_chk@plt+0x4618>
   15620:	cmn	r0, #1
   15624:	beq	15664 <__mempcpy_chk@plt+0x4628>
   15628:	mov	r1, #-2147483648	; 0x80000000
   1562c:	sdiv	r1, r1, r0
   15630:	cmp	r1, r7
   15634:	bge	15664 <__mempcpy_chk@plt+0x4628>
   15638:	b	1569c <__mempcpy_chk@plt+0x4660>
   1563c:	beq	15664 <__mempcpy_chk@plt+0x4628>
   15640:	mov	r1, #-2147483648	; 0x80000000
   15644:	sdiv	r1, r1, r7
   15648:	cmp	r1, r0
   1564c:	bge	15664 <__mempcpy_chk@plt+0x4628>
   15650:	b	1569c <__mempcpy_chk@plt+0x4660>
   15654:	mvn	r1, #-2147483648	; 0x80000000
   15658:	sdiv	r1, r1, r0
   1565c:	cmp	r7, r1
   15660:	blt	1569c <__mempcpy_chk@plt+0x4660>
   15664:	mul	r6, r7, r0
   15668:	mov	r0, r5
   1566c:	mov	r1, r6
   15670:	bl	15af4 <__mempcpy_chk@plt+0x4ab8>
   15674:	cmp	r6, #0
   15678:	movwne	r6, #1
   1567c:	cmp	r0, #0
   15680:	bne	15694 <__mempcpy_chk@plt+0x4658>
   15684:	clz	r1, r5
   15688:	lsr	r1, r1, #5
   1568c:	orrs	r1, r1, r6
   15690:	bne	1569c <__mempcpy_chk@plt+0x4660>
   15694:	str	r7, [r8]
   15698:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1569c:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   156a0:	push	{fp, lr}
   156a4:	mov	fp, sp
   156a8:	mov	r1, #1
   156ac:	bl	15a70 <__mempcpy_chk@plt+0x4a34>
   156b0:	cmp	r0, #0
   156b4:	popne	{fp, pc}
   156b8:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   156bc:	push	{fp, lr}
   156c0:	mov	fp, sp
   156c4:	bl	15a70 <__mempcpy_chk@plt+0x4a34>
   156c8:	cmp	r0, #0
   156cc:	popne	{fp, pc}
   156d0:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   156d4:	push	{fp, lr}
   156d8:	mov	fp, sp
   156dc:	mov	r1, #1
   156e0:	bl	15a70 <__mempcpy_chk@plt+0x4a34>
   156e4:	cmp	r0, #0
   156e8:	popne	{fp, pc}
   156ec:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   156f0:	push	{fp, lr}
   156f4:	mov	fp, sp
   156f8:	bl	15a70 <__mempcpy_chk@plt+0x4a34>
   156fc:	cmp	r0, #0
   15700:	popne	{fp, pc}
   15704:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   15708:	push	{r4, r5, fp, lr}
   1570c:	add	fp, sp, #8
   15710:	mov	r5, r0
   15714:	mov	r0, r1
   15718:	mov	r4, r1
   1571c:	bl	15ac4 <__mempcpy_chk@plt+0x4a88>
   15720:	cmp	r0, #0
   15724:	beq	15738 <__mempcpy_chk@plt+0x46fc>
   15728:	mov	r1, r5
   1572c:	mov	r2, r4
   15730:	pop	{r4, r5, fp, lr}
   15734:	b	10e38 <memcpy@plt>
   15738:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   1573c:	push	{r4, r5, fp, lr}
   15740:	add	fp, sp, #8
   15744:	mov	r5, r0
   15748:	mov	r0, r1
   1574c:	mov	r4, r1
   15750:	bl	15ac4 <__mempcpy_chk@plt+0x4a88>
   15754:	cmp	r0, #0
   15758:	beq	1576c <__mempcpy_chk@plt+0x4730>
   1575c:	mov	r1, r5
   15760:	mov	r2, r4
   15764:	pop	{r4, r5, fp, lr}
   15768:	b	10e38 <memcpy@plt>
   1576c:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   15770:	push	{r4, r5, fp, lr}
   15774:	add	fp, sp, #8
   15778:	mov	r5, r0
   1577c:	add	r0, r1, #1
   15780:	mov	r4, r1
   15784:	bl	15ac4 <__mempcpy_chk@plt+0x4a88>
   15788:	cmp	r0, #0
   1578c:	beq	157a8 <__mempcpy_chk@plt+0x476c>
   15790:	mov	r1, #0
   15794:	mov	r2, r4
   15798:	strb	r1, [r0, r4]
   1579c:	mov	r1, r5
   157a0:	pop	{r4, r5, fp, lr}
   157a4:	b	10e38 <memcpy@plt>
   157a8:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   157ac:	push	{r4, r5, fp, lr}
   157b0:	add	fp, sp, #8
   157b4:	mov	r4, r0
   157b8:	bl	10f58 <strlen@plt>
   157bc:	add	r5, r0, #1
   157c0:	mov	r0, r5
   157c4:	bl	15ac4 <__mempcpy_chk@plt+0x4a88>
   157c8:	cmp	r0, #0
   157cc:	beq	157e0 <__mempcpy_chk@plt+0x47a4>
   157d0:	mov	r1, r4
   157d4:	mov	r2, r5
   157d8:	pop	{r4, r5, fp, lr}
   157dc:	b	10e38 <memcpy@plt>
   157e0:	bl	157e4 <__mempcpy_chk@plt+0x47a8>
   157e4:	push	{fp, lr}
   157e8:	mov	fp, sp
   157ec:	movw	r0, #28916	; 0x70f4
   157f0:	movw	r1, #28281	; 0x6e79
   157f4:	mov	r2, #5
   157f8:	movt	r0, #2
   157fc:	movt	r1, #1
   15800:	ldr	r4, [r0]
   15804:	mov	r0, #0
   15808:	bl	10e68 <dcgettext@plt>
   1580c:	movw	r2, #26683	; 0x683b
   15810:	mov	r3, r0
   15814:	mov	r0, r4
   15818:	mov	r1, #0
   1581c:	movt	r2, #1
   15820:	bl	10ed4 <error@plt>
   15824:	bl	11030 <abort@plt>
   15828:	sub	sp, sp, #12
   1582c:	push	{r4, r5, r6, sl, fp, lr}
   15830:	add	fp, sp, #16
   15834:	sub	sp, sp, #4
   15838:	movw	r5, #28996	; 0x7144
   1583c:	mov	r4, r0
   15840:	add	r0, fp, #8
   15844:	movt	r5, #2
   15848:	stm	r0, {r1, r2, r3}
   1584c:	add	r3, fp, #8
   15850:	mov	r1, #1
   15854:	mov	r2, r4
   15858:	str	r3, [sp]
   1585c:	ldr	r0, [r5]
   15860:	bl	10f10 <__vfprintf_chk@plt>
   15864:	mov	r4, r0
   15868:	cmn	r0, #1
   1586c:	bgt	158b8 <__mempcpy_chk@plt+0x487c>
   15870:	ldr	r0, [r5]
   15874:	bl	10e20 <ferror@plt>
   15878:	cmp	r0, #0
   1587c:	bne	158b8 <__mempcpy_chk@plt+0x487c>
   15880:	movw	r0, #28916	; 0x70f4
   15884:	movt	r0, #2
   15888:	ldr	r5, [r0]
   1588c:	bl	10f64 <__errno_location@plt>
   15890:	movw	r1, #28298	; 0x6e8a
   15894:	ldr	r6, [r0]
   15898:	mov	r0, #0
   1589c:	mov	r2, #5
   158a0:	movt	r1, #1
   158a4:	bl	10e68 <dcgettext@plt>
   158a8:	mov	r2, r0
   158ac:	mov	r0, r5
   158b0:	mov	r1, r6
   158b4:	bl	10ed4 <error@plt>
   158b8:	mov	r0, r4
   158bc:	sub	sp, fp, #16
   158c0:	pop	{r4, r5, r6, sl, fp, lr}
   158c4:	add	sp, sp, #12
   158c8:	bx	lr
   158cc:	push	{r4, r5, r6, sl, fp, lr}
   158d0:	add	fp, sp, #16
   158d4:	movw	r5, #28996	; 0x7144
   158d8:	mov	r2, r0
   158dc:	mov	r3, r1
   158e0:	mov	r1, #1
   158e4:	movt	r5, #2
   158e8:	ldr	r0, [r5]
   158ec:	bl	10f10 <__vfprintf_chk@plt>
   158f0:	mov	r4, r0
   158f4:	cmn	r0, #1
   158f8:	bgt	1590c <__mempcpy_chk@plt+0x48d0>
   158fc:	ldr	r0, [r5]
   15900:	bl	10e20 <ferror@plt>
   15904:	cmp	r0, #0
   15908:	beq	15914 <__mempcpy_chk@plt+0x48d8>
   1590c:	mov	r0, r4
   15910:	pop	{r4, r5, r6, sl, fp, pc}
   15914:	movw	r0, #28916	; 0x70f4
   15918:	movt	r0, #2
   1591c:	ldr	r5, [r0]
   15920:	bl	10f64 <__errno_location@plt>
   15924:	movw	r1, #28298	; 0x6e8a
   15928:	ldr	r6, [r0]
   1592c:	mov	r0, #0
   15930:	mov	r2, #5
   15934:	movt	r1, #1
   15938:	bl	10e68 <dcgettext@plt>
   1593c:	mov	r2, r0
   15940:	mov	r0, r5
   15944:	mov	r1, r6
   15948:	bl	10ed4 <error@plt>
   1594c:	mov	r0, r4
   15950:	pop	{r4, r5, r6, sl, fp, pc}
   15954:	sub	sp, sp, #8
   15958:	push	{r4, r5, r6, sl, fp, lr}
   1595c:	add	fp, sp, #16
   15960:	sub	sp, sp, #8
   15964:	mov	r4, r1
   15968:	str	r2, [fp, #8]
   1596c:	str	r3, [fp, #12]
   15970:	add	r3, fp, #8
   15974:	mov	r1, #1
   15978:	mov	r5, r0
   1597c:	mov	r2, r4
   15980:	str	r3, [sp, #4]
   15984:	bl	10f10 <__vfprintf_chk@plt>
   15988:	mov	r4, r0
   1598c:	cmn	r0, #1
   15990:	bgt	159dc <__mempcpy_chk@plt+0x49a0>
   15994:	mov	r0, r5
   15998:	bl	10e20 <ferror@plt>
   1599c:	cmp	r0, #0
   159a0:	bne	159dc <__mempcpy_chk@plt+0x49a0>
   159a4:	movw	r0, #28916	; 0x70f4
   159a8:	movt	r0, #2
   159ac:	ldr	r5, [r0]
   159b0:	bl	10f64 <__errno_location@plt>
   159b4:	movw	r1, #28298	; 0x6e8a
   159b8:	ldr	r6, [r0]
   159bc:	mov	r0, #0
   159c0:	mov	r2, #5
   159c4:	movt	r1, #1
   159c8:	bl	10e68 <dcgettext@plt>
   159cc:	mov	r2, r0
   159d0:	mov	r0, r5
   159d4:	mov	r1, r6
   159d8:	bl	10ed4 <error@plt>
   159dc:	mov	r0, r4
   159e0:	sub	sp, fp, #16
   159e4:	pop	{r4, r5, r6, sl, fp, lr}
   159e8:	add	sp, sp, #8
   159ec:	bx	lr
   159f0:	push	{r4, r5, r6, sl, fp, lr}
   159f4:	add	fp, sp, #16
   159f8:	mov	r3, r2
   159fc:	mov	r2, r1
   15a00:	mov	r1, #1
   15a04:	mov	r5, r0
   15a08:	bl	10f10 <__vfprintf_chk@plt>
   15a0c:	mov	r4, r0
   15a10:	cmn	r0, #1
   15a14:	bgt	15a28 <__mempcpy_chk@plt+0x49ec>
   15a18:	mov	r0, r5
   15a1c:	bl	10e20 <ferror@plt>
   15a20:	cmp	r0, #0
   15a24:	beq	15a30 <__mempcpy_chk@plt+0x49f4>
   15a28:	mov	r0, r4
   15a2c:	pop	{r4, r5, r6, sl, fp, pc}
   15a30:	movw	r0, #28916	; 0x70f4
   15a34:	movt	r0, #2
   15a38:	ldr	r5, [r0]
   15a3c:	bl	10f64 <__errno_location@plt>
   15a40:	movw	r1, #28298	; 0x6e8a
   15a44:	ldr	r6, [r0]
   15a48:	mov	r0, #0
   15a4c:	mov	r2, #5
   15a50:	movt	r1, #1
   15a54:	bl	10e68 <dcgettext@plt>
   15a58:	mov	r2, r0
   15a5c:	mov	r0, r5
   15a60:	mov	r1, r6
   15a64:	bl	10ed4 <error@plt>
   15a68:	mov	r0, r4
   15a6c:	pop	{r4, r5, r6, sl, fp, pc}
   15a70:	clz	r2, r1
   15a74:	clz	r3, r0
   15a78:	lsr	r2, r2, #5
   15a7c:	lsr	r3, r3, #5
   15a80:	orrs	r2, r3, r2
   15a84:	movwne	r1, #1
   15a88:	movwne	r0, #1
   15a8c:	cmp	r1, #0
   15a90:	beq	15ac0 <__mempcpy_chk@plt+0x4a84>
   15a94:	mvn	r2, #-2147483648	; 0x80000000
   15a98:	udiv	r2, r2, r1
   15a9c:	cmp	r2, r0
   15aa0:	bcs	15ac0 <__mempcpy_chk@plt+0x4a84>
   15aa4:	push	{fp, lr}
   15aa8:	mov	fp, sp
   15aac:	bl	10f64 <__errno_location@plt>
   15ab0:	mov	r1, #12
   15ab4:	str	r1, [r0]
   15ab8:	mov	r0, #0
   15abc:	pop	{fp, pc}
   15ac0:	b	10dcc <calloc@plt>
   15ac4:	cmp	r0, #0
   15ac8:	movweq	r0, #1
   15acc:	cmn	r0, #1
   15ad0:	ble	15ad8 <__mempcpy_chk@plt+0x4a9c>
   15ad4:	b	10eec <malloc@plt>
   15ad8:	push	{fp, lr}
   15adc:	mov	fp, sp
   15ae0:	bl	10f64 <__errno_location@plt>
   15ae4:	mov	r1, #12
   15ae8:	str	r1, [r0]
   15aec:	mov	r0, #0
   15af0:	pop	{fp, pc}
   15af4:	push	{fp, lr}
   15af8:	mov	fp, sp
   15afc:	cmp	r0, #0
   15b00:	beq	15b1c <__mempcpy_chk@plt+0x4ae0>
   15b04:	cmp	r1, #0
   15b08:	beq	15b28 <__mempcpy_chk@plt+0x4aec>
   15b0c:	cmn	r1, #1
   15b10:	ble	15b34 <__mempcpy_chk@plt+0x4af8>
   15b14:	pop	{fp, lr}
   15b18:	b	10e74 <realloc@plt>
   15b1c:	mov	r0, r1
   15b20:	pop	{fp, lr}
   15b24:	b	15ac4 <__mempcpy_chk@plt+0x4a88>
   15b28:	bl	12a18 <__mempcpy_chk@plt+0x19dc>
   15b2c:	mov	r0, #0
   15b30:	pop	{fp, pc}
   15b34:	bl	10f64 <__errno_location@plt>
   15b38:	mov	r1, #12
   15b3c:	str	r1, [r0]
   15b40:	mov	r0, #0
   15b44:	pop	{fp, pc}
   15b48:	push	{r4, r5, r6, sl, fp, lr}
   15b4c:	add	fp, sp, #16
   15b50:	vpush	{d8}
   15b54:	movw	r6, #29340	; 0x729c
   15b58:	mov	r5, r0
   15b5c:	mov	r4, r1
   15b60:	movt	r6, #2
   15b64:	ldr	r0, [r6]
   15b68:	cmp	r0, #0
   15b6c:	bne	15b88 <__mempcpy_chk@plt+0x4b4c>
   15b70:	movw	r1, #28330	; 0x6eaa
   15b74:	movw	r0, #8127	; 0x1fbf
   15b78:	mov	r2, #0
   15b7c:	movt	r1, #1
   15b80:	bl	11000 <newlocale@plt>
   15b84:	str	r0, [r6]
   15b88:	ldr	r0, [r6]
   15b8c:	cmp	r0, #0
   15b90:	beq	15bd8 <__mempcpy_chk@plt+0x4b9c>
   15b94:	bl	10de4 <uselocale@plt>
   15b98:	cmp	r0, #0
   15b9c:	beq	15bd8 <__mempcpy_chk@plt+0x4b9c>
   15ba0:	mov	r6, r0
   15ba4:	mov	r0, r5
   15ba8:	mov	r1, r4
   15bac:	bl	10e5c <strtold@plt>
   15bb0:	vorr	d8, d0, d0
   15bb4:	bl	10f64 <__errno_location@plt>
   15bb8:	ldr	r5, [r0]
   15bbc:	mov	r4, r0
   15bc0:	mov	r0, r6
   15bc4:	bl	10de4 <uselocale@plt>
   15bc8:	cmp	r0, #0
   15bcc:	beq	15bf0 <__mempcpy_chk@plt+0x4bb4>
   15bd0:	str	r5, [r4]
   15bd4:	b	15be4 <__mempcpy_chk@plt+0x4ba8>
   15bd8:	cmp	r4, #0
   15bdc:	vmov.i32	d8, #0	; 0x00000000
   15be0:	strne	r5, [r4]
   15be4:	vorr	d0, d8, d8
   15be8:	vpop	{d8}
   15bec:	pop	{r4, r5, r6, sl, fp, pc}
   15bf0:	bl	11030 <abort@plt>
   15bf4:	push	{r4, r5, r6, sl, fp, lr}
   15bf8:	add	fp, sp, #16
   15bfc:	mov	r4, r0
   15c00:	bl	10ebc <__fpending@plt>
   15c04:	ldr	r6, [r4]
   15c08:	mov	r5, r0
   15c0c:	mov	r0, r4
   15c10:	bl	15c78 <__mempcpy_chk@plt+0x4c3c>
   15c14:	tst	r6, #32
   15c18:	bne	15c50 <__mempcpy_chk@plt+0x4c14>
   15c1c:	cmp	r0, #0
   15c20:	mov	r4, r0
   15c24:	mvnne	r4, #0
   15c28:	cmp	r5, #0
   15c2c:	bne	15c5c <__mempcpy_chk@plt+0x4c20>
   15c30:	cmp	r0, #0
   15c34:	beq	15c5c <__mempcpy_chk@plt+0x4c20>
   15c38:	bl	10f64 <__errno_location@plt>
   15c3c:	ldr	r0, [r0]
   15c40:	subs	r4, r0, #9
   15c44:	mvnne	r4, #0
   15c48:	mov	r0, r4
   15c4c:	pop	{r4, r5, r6, sl, fp, pc}
   15c50:	mvn	r4, #0
   15c54:	cmp	r0, #0
   15c58:	beq	15c64 <__mempcpy_chk@plt+0x4c28>
   15c5c:	mov	r0, r4
   15c60:	pop	{r4, r5, r6, sl, fp, pc}
   15c64:	bl	10f64 <__errno_location@plt>
   15c68:	mov	r1, #0
   15c6c:	str	r1, [r0]
   15c70:	mov	r0, r4
   15c74:	pop	{r4, r5, r6, sl, fp, pc}
   15c78:	push	{r4, r5, r6, sl, fp, lr}
   15c7c:	add	fp, sp, #16
   15c80:	sub	sp, sp, #8
   15c84:	mov	r4, r0
   15c88:	bl	10f94 <fileno@plt>
   15c8c:	cmn	r0, #1
   15c90:	ble	15d04 <__mempcpy_chk@plt+0x4cc8>
   15c94:	mov	r0, r4
   15c98:	bl	10f1c <__freading@plt>
   15c9c:	cmp	r0, #0
   15ca0:	beq	15ccc <__mempcpy_chk@plt+0x4c90>
   15ca4:	mov	r0, r4
   15ca8:	bl	10f94 <fileno@plt>
   15cac:	mov	r1, #1
   15cb0:	mov	r2, #0
   15cb4:	mov	r3, #0
   15cb8:	str	r1, [sp]
   15cbc:	bl	10ea4 <lseek64@plt>
   15cc0:	and	r0, r0, r1
   15cc4:	cmn	r0, #1
   15cc8:	beq	15d04 <__mempcpy_chk@plt+0x4cc8>
   15ccc:	mov	r0, r4
   15cd0:	bl	15d14 <__mempcpy_chk@plt+0x4cd8>
   15cd4:	cmp	r0, #0
   15cd8:	beq	15d04 <__mempcpy_chk@plt+0x4cc8>
   15cdc:	bl	10f64 <__errno_location@plt>
   15ce0:	ldr	r6, [r0]
   15ce4:	mov	r5, r0
   15ce8:	mov	r0, r4
   15cec:	bl	10fb8 <fclose@plt>
   15cf0:	cmp	r6, #0
   15cf4:	strne	r6, [r5]
   15cf8:	mvnne	r0, #0
   15cfc:	sub	sp, fp, #16
   15d00:	pop	{r4, r5, r6, sl, fp, pc}
   15d04:	mov	r0, r4
   15d08:	sub	sp, fp, #16
   15d0c:	pop	{r4, r5, r6, sl, fp, lr}
   15d10:	b	10fb8 <fclose@plt>
   15d14:	push	{r4, sl, fp, lr}
   15d18:	add	fp, sp, #8
   15d1c:	sub	sp, sp, #8
   15d20:	mov	r4, r0
   15d24:	cmp	r0, #0
   15d28:	beq	15d60 <__mempcpy_chk@plt+0x4d24>
   15d2c:	mov	r0, r4
   15d30:	bl	10f1c <__freading@plt>
   15d34:	cmp	r0, #0
   15d38:	beq	15d60 <__mempcpy_chk@plt+0x4d24>
   15d3c:	ldrb	r0, [r4, #1]
   15d40:	tst	r0, #1
   15d44:	beq	15d60 <__mempcpy_chk@plt+0x4d24>
   15d48:	mov	r0, #1
   15d4c:	mov	r2, #0
   15d50:	mov	r3, #0
   15d54:	str	r0, [sp]
   15d58:	mov	r0, r4
   15d5c:	bl	15d70 <__mempcpy_chk@plt+0x4d34>
   15d60:	mov	r0, r4
   15d64:	sub	sp, fp, #8
   15d68:	pop	{r4, sl, fp, lr}
   15d6c:	b	10e08 <fflush@plt>
   15d70:	push	{r4, r5, r6, r7, fp, lr}
   15d74:	add	fp, sp, #16
   15d78:	sub	sp, sp, #8
   15d7c:	mov	r4, r0
   15d80:	ldr	r0, [r0, #4]
   15d84:	mov	r5, r3
   15d88:	mov	r6, r2
   15d8c:	ldr	r1, [r4, #8]
   15d90:	cmp	r1, r0
   15d94:	bne	15db0 <__mempcpy_chk@plt+0x4d74>
   15d98:	ldrd	r0, [r4, #16]
   15d9c:	cmp	r1, r0
   15da0:	bne	15db0 <__mempcpy_chk@plt+0x4d74>
   15da4:	ldr	r0, [r4, #36]	; 0x24
   15da8:	cmp	r0, #0
   15dac:	beq	15dc8 <__mempcpy_chk@plt+0x4d8c>
   15db0:	mov	r0, r4
   15db4:	mov	r2, r6
   15db8:	mov	r3, r5
   15dbc:	sub	sp, fp, #16
   15dc0:	pop	{r4, r5, r6, r7, fp, lr}
   15dc4:	b	10fc4 <fseeko64@plt>
   15dc8:	ldr	r7, [fp, #8]
   15dcc:	mov	r0, r4
   15dd0:	bl	10f94 <fileno@plt>
   15dd4:	mov	r2, r6
   15dd8:	mov	r3, r5
   15ddc:	str	r7, [sp]
   15de0:	bl	10ea4 <lseek64@plt>
   15de4:	and	r2, r0, r1
   15de8:	cmn	r2, #1
   15dec:	beq	15e0c <__mempcpy_chk@plt+0x4dd0>
   15df0:	strd	r0, [r4, #80]	; 0x50
   15df4:	ldr	r0, [r4]
   15df8:	bic	r0, r0, #16
   15dfc:	str	r0, [r4]
   15e00:	mov	r0, #0
   15e04:	sub	sp, fp, #16
   15e08:	pop	{r4, r5, r6, r7, fp, pc}
   15e0c:	mvn	r0, #0
   15e10:	sub	sp, fp, #16
   15e14:	pop	{r4, r5, r6, r7, fp, pc}
   15e18:	push	{fp, lr}
   15e1c:	mov	fp, sp
   15e20:	mov	r0, #14
   15e24:	bl	10ff4 <nl_langinfo@plt>
   15e28:	movw	r1, #24868	; 0x6124
   15e2c:	cmp	r0, #0
   15e30:	movt	r1, #1
   15e34:	movne	r1, r0
   15e38:	movw	r0, #27334	; 0x6ac6
   15e3c:	ldrb	r2, [r1]
   15e40:	movt	r0, #1
   15e44:	cmp	r2, #0
   15e48:	movne	r0, r1
   15e4c:	pop	{fp, pc}
   15e50:	push	{r4, r5, r6, r7, fp, lr}
   15e54:	add	fp, sp, #16
   15e58:	sub	sp, sp, #8
   15e5c:	cmp	r0, #0
   15e60:	add	r5, sp, #4
   15e64:	mov	r7, r2
   15e68:	mov	r4, r1
   15e6c:	movne	r5, r0
   15e70:	mov	r0, r5
   15e74:	bl	10ec8 <mbrtowc@plt>
   15e78:	mov	r6, r0
   15e7c:	cmp	r7, #0
   15e80:	beq	15ea8 <__mempcpy_chk@plt+0x4e6c>
   15e84:	cmn	r6, #2
   15e88:	bcc	15ea8 <__mempcpy_chk@plt+0x4e6c>
   15e8c:	mov	r0, #0
   15e90:	bl	15ef0 <__mempcpy_chk@plt+0x4eb4>
   15e94:	cmp	r0, #0
   15e98:	bne	15ea8 <__mempcpy_chk@plt+0x4e6c>
   15e9c:	ldrb	r0, [r4]
   15ea0:	mov	r6, #1
   15ea4:	str	r0, [r5]
   15ea8:	mov	r0, r6
   15eac:	sub	sp, fp, #16
   15eb0:	pop	{r4, r5, r6, r7, fp, pc}
   15eb4:	cmp	r2, #0
   15eb8:	beq	15ee8 <__mempcpy_chk@plt+0x4eac>
   15ebc:	mvn	r3, #0
   15ec0:	udiv	r3, r3, r2
   15ec4:	cmp	r3, r1
   15ec8:	bcs	15ee8 <__mempcpy_chk@plt+0x4eac>
   15ecc:	push	{fp, lr}
   15ed0:	mov	fp, sp
   15ed4:	bl	10f64 <__errno_location@plt>
   15ed8:	mov	r1, #12
   15edc:	str	r1, [r0]
   15ee0:	mov	r0, #0
   15ee4:	pop	{fp, pc}
   15ee8:	mul	r1, r2, r1
   15eec:	b	15af4 <__mempcpy_chk@plt+0x4ab8>
   15ef0:	push	{r4, sl, fp, lr}
   15ef4:	add	fp, sp, #8
   15ef8:	sub	sp, sp, #264	; 0x108
   15efc:	add	r1, sp, #7
   15f00:	movw	r2, #257	; 0x101
   15f04:	bl	15f5c <__mempcpy_chk@plt+0x4f20>
   15f08:	mov	r4, #0
   15f0c:	cmp	r0, #0
   15f10:	bne	15f50 <__mempcpy_chk@plt+0x4f14>
   15f14:	movw	r1, #28330	; 0x6eaa
   15f18:	add	r0, sp, #7
   15f1c:	mov	r2, #2
   15f20:	movt	r1, #1
   15f24:	bl	10f4c <bcmp@plt>
   15f28:	cmp	r0, #0
   15f2c:	beq	15f50 <__mempcpy_chk@plt+0x4f14>
   15f30:	movw	r1, #28332	; 0x6eac
   15f34:	add	r0, sp, #7
   15f38:	mov	r2, #6
   15f3c:	movt	r1, #1
   15f40:	bl	10f4c <bcmp@plt>
   15f44:	cmp	r0, #0
   15f48:	mov	r4, r0
   15f4c:	movwne	r4, #1
   15f50:	mov	r0, r4
   15f54:	sub	sp, fp, #8
   15f58:	pop	{r4, sl, fp, pc}
   15f5c:	push	{r4, r5, r6, r7, fp, lr}
   15f60:	add	fp, sp, #16
   15f64:	mov	r4, r1
   15f68:	mov	r1, #0
   15f6c:	mov	r6, r2
   15f70:	bl	10fdc <setlocale@plt>
   15f74:	cmp	r0, #0
   15f78:	beq	15fa8 <__mempcpy_chk@plt+0x4f6c>
   15f7c:	mov	r7, r0
   15f80:	bl	10f58 <strlen@plt>
   15f84:	cmp	r0, r6
   15f88:	bcs	15fc4 <__mempcpy_chk@plt+0x4f88>
   15f8c:	add	r2, r0, #1
   15f90:	mov	r0, r4
   15f94:	mov	r1, r7
   15f98:	bl	10e38 <memcpy@plt>
   15f9c:	mov	r5, #0
   15fa0:	mov	r0, r5
   15fa4:	pop	{r4, r5, r6, r7, fp, pc}
   15fa8:	mov	r5, #22
   15fac:	cmp	r6, #0
   15fb0:	beq	15fec <__mempcpy_chk@plt+0x4fb0>
   15fb4:	mov	r0, #0
   15fb8:	strb	r0, [r4]
   15fbc:	mov	r0, r5
   15fc0:	pop	{r4, r5, r6, r7, fp, pc}
   15fc4:	mov	r5, #34	; 0x22
   15fc8:	cmp	r6, #0
   15fcc:	beq	15fec <__mempcpy_chk@plt+0x4fb0>
   15fd0:	sub	r6, r6, #1
   15fd4:	mov	r0, r4
   15fd8:	mov	r1, r7
   15fdc:	mov	r2, r6
   15fe0:	bl	10e38 <memcpy@plt>
   15fe4:	mov	r0, #0
   15fe8:	strb	r0, [r4, r6]
   15fec:	mov	r0, r5
   15ff0:	pop	{r4, r5, r6, r7, fp, pc}
   15ff4:	mov	r1, #0
   15ff8:	b	10fdc <setlocale@plt>
   15ffc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16000:	mov	r7, r0
   16004:	ldr	r6, [pc, #72]	; 16054 <__mempcpy_chk@plt+0x5018>
   16008:	ldr	r5, [pc, #72]	; 16058 <__mempcpy_chk@plt+0x501c>
   1600c:	add	r6, pc, r6
   16010:	add	r5, pc, r5
   16014:	sub	r6, r6, r5
   16018:	mov	r8, r1
   1601c:	mov	r9, r2
   16020:	bl	10dac <calloc@plt-0x20>
   16024:	asrs	r6, r6, #2
   16028:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1602c:	mov	r4, #0
   16030:	add	r4, r4, #1
   16034:	ldr	r3, [r5], #4
   16038:	mov	r2, r9
   1603c:	mov	r1, r8
   16040:	mov	r0, r7
   16044:	blx	r3
   16048:	cmp	r6, r4
   1604c:	bne	16030 <__mempcpy_chk@plt+0x4ff4>
   16050:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16054:	strdeq	r0, [r1], -r8
   16058:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1605c:	bx	lr
   16060:	ldr	r3, [pc, #12]	; 16074 <__mempcpy_chk@plt+0x5038>
   16064:	mov	r1, #0
   16068:	add	r3, pc, r3
   1606c:	ldr	r2, [r3]
   16070:	b	10f70 <__cxa_atexit@plt>
   16074:	andeq	r1, r1, ip, ror r0

Disassembly of section .fini:

00016078 <.fini>:
   16078:	push	{r3, lr}
   1607c:	pop	{r3, pc}
