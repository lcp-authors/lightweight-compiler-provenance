
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

00012f58 <.init>:
   12f58:	push	{r3, lr}
   12f5c:	bl	13044 <_start@@Base+0x3c>
   12f60:	pop	{r3, pc}

Disassembly of section .plt:

00012f64 <strcmp@plt-0x14>:
   12f64:	push	{lr}		; (str lr, [sp, #-4]!)
   12f68:	ldr	lr, [pc, #4]	; 12f74 <strcmp@plt-0x4>
   12f6c:	add	lr, pc, lr
   12f70:	ldr	pc, [lr, #8]!
   12f74:	andeq	r4, r1, ip, lsl #1

00012f78 <strcmp@plt>:
   12f78:	add	ip, pc, #0, 12
   12f7c:	add	ip, ip, #20, 20	; 0x14000
   12f80:	ldr	pc, [ip, #140]!	; 0x8c

00012f84 <printf@plt>:
   12f84:	add	ip, pc, #0, 12
   12f88:	add	ip, ip, #20, 20	; 0x14000
   12f8c:	ldr	pc, [ip, #132]!	; 0x84

00012f90 <free@plt>:
   12f90:	add	ip, pc, #0, 12
   12f94:	add	ip, ip, #20, 20	; 0x14000
   12f98:	ldr	pc, [ip, #124]!	; 0x7c

00012f9c <realloc@plt>:
   12f9c:	add	ip, pc, #0, 12
   12fa0:	add	ip, ip, #20, 20	; 0x14000
   12fa4:	ldr	pc, [ip, #116]!	; 0x74

00012fa8 <strcpy@plt>:
   12fa8:	add	ip, pc, #0, 12
   12fac:	add	ip, ip, #20, 20	; 0x14000
   12fb0:	ldr	pc, [ip, #108]!	; 0x6c

00012fb4 <malloc@plt>:
   12fb4:	add	ip, pc, #0, 12
   12fb8:	add	ip, ip, #20, 20	; 0x14000
   12fbc:	ldr	pc, [ip, #100]!	; 0x64

00012fc0 <__libc_start_main@plt>:
   12fc0:	add	ip, pc, #0, 12
   12fc4:	add	ip, ip, #20, 20	; 0x14000
   12fc8:	ldr	pc, [ip, #92]!	; 0x5c

00012fcc <__gmon_start__@plt>:
   12fcc:	add	ip, pc, #0, 12
   12fd0:	add	ip, ip, #20, 20	; 0x14000
   12fd4:	ldr	pc, [ip, #84]!	; 0x54

00012fd8 <strlen@plt>:
   12fd8:	add	ip, pc, #0, 12
   12fdc:	add	ip, ip, #20, 20	; 0x14000
   12fe0:	ldr	pc, [ip, #76]!	; 0x4c

00012fe4 <snprintf@plt>:
   12fe4:	add	ip, pc, #0, 12
   12fe8:	add	ip, ip, #20, 20	; 0x14000
   12fec:	ldr	pc, [ip, #68]!	; 0x44

00012ff0 <__isoc99_sscanf@plt>:
   12ff0:	add	ip, pc, #0, 12
   12ff4:	add	ip, ip, #20, 20	; 0x14000
   12ff8:	ldr	pc, [ip, #60]!	; 0x3c

00012ffc <abort@plt>:
   12ffc:	add	ip, pc, #0, 12
   13000:	add	ip, ip, #20, 20	; 0x14000
   13004:	ldr	pc, [ip, #52]!	; 0x34

Disassembly of section .text:

00013008 <_start@@Base>:
   13008:	mov	fp, #0
   1300c:	mov	lr, #0
   13010:	pop	{r1}		; (ldr r1, [sp], #4)
   13014:	mov	r2, sp
   13018:	push	{r2}		; (str r2, [sp, #-4]!)
   1301c:	push	{r0}		; (str r0, [sp, #-4]!)
   13020:	ldr	ip, [pc, #16]	; 13038 <_start@@Base+0x30>
   13024:	push	{ip}		; (str ip, [sp, #-4]!)
   13028:	ldr	r0, [pc, #12]	; 1303c <_start@@Base+0x34>
   1302c:	ldr	r3, [pc, #12]	; 13040 <_start@@Base+0x38>
   13030:	bl	12fc0 <__libc_start_main@plt>
   13034:	bl	12ffc <abort@plt>
   13038:	andeq	r6, r1, ip, lsl r9
   1303c:	strdeq	r3, [r1], -r8
   13040:			; <UNDEFINED> instruction: 0x000168bc
   13044:	ldr	r3, [pc, #20]	; 13060 <_start@@Base+0x58>
   13048:	ldr	r2, [pc, #20]	; 13064 <_start@@Base+0x5c>
   1304c:	add	r3, pc, r3
   13050:	ldr	r2, [r3, r2]
   13054:	cmp	r2, #0
   13058:	bxeq	lr
   1305c:	b	12fcc <__gmon_start__@plt>
   13060:	andeq	r3, r1, ip, lsr #31
   13064:	andeq	r0, r0, ip, lsr r0
   13068:	ldr	r0, [pc, #24]	; 13088 <_start@@Base+0x80>
   1306c:	ldr	r3, [pc, #24]	; 1308c <_start@@Base+0x84>
   13070:	cmp	r3, r0
   13074:	bxeq	lr
   13078:	ldr	r3, [pc, #16]	; 13090 <_start@@Base+0x88>
   1307c:	cmp	r3, #0
   13080:	bxeq	lr
   13084:	bx	r3
   13088:	andeq	r7, r2, r8, asr #32
   1308c:	andeq	r7, r2, r8, asr #32
   13090:	andeq	r0, r0, r0
   13094:	ldr	r0, [pc, #36]	; 130c0 <_start@@Base+0xb8>
   13098:	ldr	r1, [pc, #36]	; 130c4 <_start@@Base+0xbc>
   1309c:	sub	r1, r1, r0
   130a0:	asr	r1, r1, #2
   130a4:	add	r1, r1, r1, lsr #31
   130a8:	asrs	r1, r1, #1
   130ac:	bxeq	lr
   130b0:	ldr	r3, [pc, #16]	; 130c8 <_start@@Base+0xc0>
   130b4:	cmp	r3, #0
   130b8:	bxeq	lr
   130bc:	bx	r3
   130c0:	andeq	r7, r2, r8, asr #32
   130c4:	andeq	r7, r2, r8, asr #32
   130c8:	andeq	r0, r0, r0
   130cc:	push	{r4, lr}
   130d0:	ldr	r4, [pc, #24]	; 130f0 <_start@@Base+0xe8>
   130d4:	ldrb	r3, [r4]
   130d8:	cmp	r3, #0
   130dc:	popne	{r4, pc}
   130e0:	bl	13068 <_start@@Base+0x60>
   130e4:	mov	r3, #1
   130e8:	strb	r3, [r4]
   130ec:	pop	{r4, pc}
   130f0:	andeq	r7, r2, r8, asr #32
   130f4:	b	13094 <_start@@Base+0x8c>

000130f8 <main@@Base>:
   130f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130fc:	add	fp, sp, #28
   13100:	sub	sp, sp, #4
   13104:	vpush	{d8-d10}
   13108:	sub	sp, sp, #64	; 0x40
   1310c:	add	r5, sp, #8
   13110:	mov	r0, r5
   13114:	bl	1331c <table_init@@Base>
   13118:	movw	r1, #26932	; 0x6934
   1311c:	movt	r1, #1
   13120:	mov	r7, #0
   13124:	mov	r0, r5
   13128:	mov	r2, #0
   1312c:	bl	13dd8 <table_add_column@@Base>
   13130:	mov	sl, r0
   13134:	movw	r1, #26934	; 0x6936
   13138:	movt	r1, #1
   1313c:	mov	r0, r5
   13140:	mov	r2, #16
   13144:	bl	13dd8 <table_add_column@@Base>
   13148:	mov	r8, r0
   1314c:	vldr	s18, [pc, #420]	; 132f8 <main@@Base+0x200>
   13150:	movw	r9, #52429	; 0xcccd
   13154:	movt	r9, #52428	; 0xcccc
   13158:	vmov.f32	s20, #80	; 0x3e800000  0.250
   1315c:	vmov.f32	s16, s18
   13160:	mov	r4, #0
   13164:	mov	r0, r5
   13168:	bl	15688 <table_add_row@@Base>
   1316c:	uxtb	r0, r4
   13170:	umull	r1, r2, r0, r9
   13174:	lsr	r1, r2, #3
   13178:	add	r1, r1, r1, lsl #2
   1317c:	sub	r0, r0, r1, lsl #1
   13180:	clz	r0, r0
   13184:	lsr	r0, r0, #5
   13188:	cmp	r4, #0
   1318c:	mov	r1, r4
   13190:	movwne	r1, #1
   13194:	and	r6, r1, r0
   13198:	add	r7, r7, r6
   1319c:	mov	r0, r5
   131a0:	mov	r1, r4
   131a4:	mov	r2, sl
   131a8:	mov	r3, r7
   131ac:	bl	15ae8 <table_set_int@@Base>
   131b0:	cmp	r6, #0
   131b4:	vseleq.f32	s0, s16, s18
   131b8:	vadd.f32	s2, s0, s20
   131bc:	tst	r4, #1
   131c0:	vseleq.f32	s2, s2, s0
   131c4:	cmp	r4, #0
   131c8:	vseleq.f32	s16, s0, s2
   131cc:	mov	r0, r5
   131d0:	mov	r1, r4
   131d4:	mov	r2, r8
   131d8:	vmov.f32	s0, s16
   131dc:	bl	15d98 <table_set_float@@Base>
   131e0:	add	r4, r4, #1
   131e4:	cmp	r4, #100	; 0x64
   131e8:	bne	13164 <main@@Base+0x6c>
   131ec:	add	r4, sp, #8
   131f0:	mov	r9, #0
   131f4:	mov	r0, r4
   131f8:	mov	r1, sl
   131fc:	mov	r2, #4
   13200:	mov	r3, #0
   13204:	bl	14d3c <table_sorted_find_int@@Base>
   13208:	mov	r7, r0
   1320c:	mov	r0, r4
   13210:	mov	r1, sl
   13214:	mov	r2, #4
   13218:	mov	r3, #1
   1321c:	bl	14d3c <table_sorted_find_int@@Base>
   13220:	mov	r6, r0
   13224:	cmp	r7, #40	; 0x28
   13228:	beq	13240 <main@@Base+0x148>
   1322c:	movw	r0, #26936	; 0x6938
   13230:	movt	r0, #1
   13234:	mov	r1, r7
   13238:	bl	12f84 <printf@plt>
   1323c:	mvn	r9, #0
   13240:	cmp	r6, #49	; 0x31
   13244:	beq	1325c <main@@Base+0x164>
   13248:	movw	r0, #26992	; 0x6970
   1324c:	movt	r0, #1
   13250:	mov	r1, r6
   13254:	bl	12f84 <printf@plt>
   13258:	mvn	r9, #0
   1325c:	str	r6, [sp]
   13260:	add	r4, sp, #8
   13264:	vmov.f32	s16, #96	; 0x3f000000  0.5
   13268:	mov	r0, r4
   1326c:	mov	r1, r8
   13270:	vmov.f32	s0, s16
   13274:	mov	r2, #0
   13278:	mov	r3, r7
   1327c:	bl	15310 <table_sorted_subset_find_float@@Base>
   13280:	mov	r5, r0
   13284:	str	r6, [sp]
   13288:	mov	r0, r4
   1328c:	mov	r1, r8
   13290:	vmov.f32	s0, s16
   13294:	mov	r2, #1
   13298:	mov	r3, r7
   1329c:	bl	15310 <table_sorted_subset_find_float@@Base>
   132a0:	mov	r4, r0
   132a4:	cmp	r5, #42	; 0x2a
   132a8:	beq	132c0 <main@@Base+0x1c8>
   132ac:	movw	r0, #27047	; 0x69a7
   132b0:	movt	r0, #1
   132b4:	mov	r1, r5
   132b8:	bl	12f84 <printf@plt>
   132bc:	mvn	r9, #0
   132c0:	cmp	r4, #43	; 0x2b
   132c4:	beq	132dc <main@@Base+0x1e4>
   132c8:	movw	r0, #27109	; 0x69e5
   132cc:	movt	r0, #1
   132d0:	mov	r1, r4
   132d4:	bl	12f84 <printf@plt>
   132d8:	mvn	r9, #0
   132dc:	add	r0, sp, #8
   132e0:	bl	1335c <table_destroy@@Base>
   132e4:	mov	r0, r9
   132e8:	sub	sp, fp, #56	; 0x38
   132ec:	vpop	{d8-d10}
   132f0:	add	sp, sp, #4
   132f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132f8:	andeq	r0, r0, r0

000132fc <table_new@@Base>:
   132fc:	push	{r4, sl, fp, lr}
   13300:	add	fp, sp, #8
   13304:	mov	r0, #56	; 0x38
   13308:	bl	12fb4 <malloc@plt>
   1330c:	mov	r4, r0
   13310:	bl	1331c <table_init@@Base>
   13314:	mov	r0, r4
   13318:	pop	{r4, sl, fp, pc}

0001331c <table_init@@Base>:
   1331c:	push	{r4, sl, fp, lr}
   13320:	add	fp, sp, #8
   13324:	mov	r4, r0
   13328:	bl	1339c <table_destroy@@Base+0x40>
   1332c:	mov	r0, r4
   13330:	bl	133b4 <table_destroy@@Base+0x58>
   13334:	mov	r0, r4
   13338:	pop	{r4, sl, fp, lr}
   1333c:	b	133d0 <table_destroy@@Base+0x74>

00013340 <table_delete@@Base>:
   13340:	push	{r4, sl, fp, lr}
   13344:	add	fp, sp, #8
   13348:	mov	r4, r0
   1334c:	bl	1335c <table_destroy@@Base>
   13350:	mov	r0, r4
   13354:	pop	{r4, sl, fp, lr}
   13358:	b	12f90 <free@plt>

0001335c <table_destroy@@Base>:
   1335c:	cmp	r0, #0
   13360:	bxeq	lr
   13364:	push	{r4, sl, fp, lr}
   13368:	add	fp, sp, #8
   1336c:	mov	r4, r0
   13370:	mvn	r1, #0
   13374:	mvn	r2, #0
   13378:	mov	r3, #64	; 0x40
   1337c:	bl	13c58 <table_notify@@Base>
   13380:	mov	r0, r4
   13384:	bl	133f0 <table_destroy@@Base+0x94>
   13388:	mov	r0, r4
   1338c:	bl	1343c <table_destroy@@Base+0xe0>
   13390:	mov	r0, r4
   13394:	pop	{r4, sl, fp, lr}
   13398:	b	13488 <table_destroy@@Base+0x12c>
   1339c:	mov	r1, #0
   133a0:	mov	r2, #10
   133a4:	str	r1, [r0]
   133a8:	stmib	r0, {r1, r2}
   133ac:	str	r1, [r0, #12]
   133b0:	bx	lr
   133b4:	mov	r1, #0
   133b8:	mov	r2, #20
   133bc:	str	r1, [r0, #16]
   133c0:	str	r1, [r0, #20]
   133c4:	str	r2, [r0, #24]
   133c8:	str	r1, [r0, #28]
   133cc:	bx	lr
   133d0:	mov	r1, #0
   133d4:	vmov.i32	q8, #0	; 0x00000000
   133d8:	mov	r2, #10
   133dc:	str	r2, [r0, #48]	; 0x30
   133e0:	str	r1, [r0, #52]	; 0x34
   133e4:	add	r0, r0, #32
   133e8:	vst1.32	{d16-d17}, [r0]
   133ec:	bx	lr
   133f0:	push	{r4, r5, r6, sl, fp, lr}
   133f4:	add	fp, sp, #16
   133f8:	mov	r4, r0
   133fc:	bl	15680 <table_get_row_length@@Base>
   13400:	cmp	r0, #1
   13404:	blt	13428 <table_destroy@@Base+0xcc>
   13408:	mov	r5, r0
   1340c:	mov	r6, #0
   13410:	mov	r0, r4
   13414:	mov	r1, r6
   13418:	bl	1561c <table_row_destroy@@Base>
   1341c:	add	r6, r6, #1
   13420:	cmp	r5, r6
   13424:	bne	13410 <table_destroy@@Base+0xb4>
   13428:	ldr	r0, [r4, #16]
   1342c:	cmp	r0, #0
   13430:	popeq	{r4, r5, r6, sl, fp, pc}
   13434:	pop	{r4, r5, r6, sl, fp, lr}
   13438:	b	12f90 <free@plt>
   1343c:	push	{r4, r5, r6, sl, fp, lr}
   13440:	add	fp, sp, #16
   13444:	mov	r4, r0
   13448:	bl	13d4c <table_get_column_length@@Base>
   1344c:	cmp	r0, #1
   13450:	blt	13474 <table_destroy@@Base+0x118>
   13454:	mov	r5, r0
   13458:	mov	r6, #0
   1345c:	mov	r0, r4
   13460:	mov	r1, r6
   13464:	bl	13d2c <table_column_destroy@@Base>
   13468:	add	r6, r6, #1
   1346c:	cmp	r5, r6
   13470:	bne	1345c <table_destroy@@Base+0x100>
   13474:	ldr	r0, [r4]
   13478:	cmp	r0, #0
   1347c:	popeq	{r4, r5, r6, sl, fp, pc}
   13480:	pop	{r4, r5, r6, sl, fp, lr}
   13484:	b	12f90 <free@plt>
   13488:	push	{r4, sl, fp, lr}
   1348c:	add	fp, sp, #8
   13490:	mov	r4, r0
   13494:	ldr	r0, [r0, #36]	; 0x24
   13498:	cmp	r0, #0
   1349c:	beq	134a4 <table_destroy@@Base+0x148>
   134a0:	bl	12f90 <free@plt>
   134a4:	ldr	r0, [r4, #40]	; 0x28
   134a8:	cmp	r0, #0
   134ac:	beq	134b4 <table_destroy@@Base+0x158>
   134b0:	bl	12f90 <free@plt>
   134b4:	ldr	r0, [r4, #44]	; 0x2c
   134b8:	cmp	r0, #0
   134bc:	popeq	{r4, sl, fp, pc}
   134c0:	pop	{r4, sl, fp, lr}
   134c4:	b	12f90 <free@plt>

000134c8 <table_dupe@@Base>:
   134c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134cc:	add	fp, sp, #28
   134d0:	sub	sp, sp, #12
   134d4:	mov	r4, r0
   134d8:	bl	15680 <table_get_row_length@@Base>
   134dc:	mov	r8, r0
   134e0:	mov	r0, r4
   134e4:	bl	13d4c <table_get_column_length@@Base>
   134e8:	mov	r6, r0
   134ec:	bl	132fc <table_new@@Base>
   134f0:	mov	sl, r0
   134f4:	cmp	r6, #1
   134f8:	blt	13538 <table_dupe@@Base+0x70>
   134fc:	mov	r5, #0
   13500:	mov	r0, r4
   13504:	mov	r1, r5
   13508:	bl	13db0 <table_get_column_name@@Base>
   1350c:	mov	r7, r0
   13510:	mov	r0, r4
   13514:	mov	r1, r5
   13518:	bl	13dc4 <table_get_column_data_type@@Base>
   1351c:	mov	r2, r0
   13520:	mov	r0, sl
   13524:	mov	r1, r7
   13528:	bl	13dd8 <table_add_column@@Base>
   1352c:	add	r5, r5, #1
   13530:	cmp	r6, r5
   13534:	bne	13500 <table_dupe@@Base+0x38>
   13538:	cmp	r8, #1
   1353c:	blt	139a4 <table_dupe@@Base+0x4dc>
   13540:	mov	r5, #0
   13544:	add	r9, sp, #8
   13548:	mov	r0, sl
   1354c:	bl	15688 <table_add_row@@Base>
   13550:	cmp	r6, #1
   13554:	blt	13998 <table_dupe@@Base+0x4d0>
   13558:	mov	r7, #0
   1355c:	mov	r0, r4
   13560:	mov	r1, r7
   13564:	bl	13dc4 <table_get_column_data_type@@Base>
   13568:	cmp	r0, #23
   1356c:	bhi	1398c <table_dupe@@Base+0x4c4>
   13570:	add	r1, pc, #0
   13574:	ldr	pc, [r1, r0, lsl #2]
   13578:	ldrdeq	r3, [r1], -r8
   1357c:	andeq	r3, r1, r0, lsl #12
   13580:	andeq	r3, r1, r8, lsr #12
   13584:	andeq	r3, r1, r0, asr r6
   13588:	andeq	r3, r1, r8, ror r6
   1358c:	andeq	r3, r1, r0, lsr #13
   13590:	andeq	r3, r1, r8, asr #13
   13594:	strdeq	r3, [r1], -r0
   13598:	andeq	r3, r1, r8, lsl r7
   1359c:	andeq	r3, r1, r0, asr #14
   135a0:	andeq	r3, r1, r8, ror #14
   135a4:	muleq	r1, r0, r7
   135a8:			; <UNDEFINED> instruction: 0x000137b8
   135ac:	andeq	r3, r1, r0, ror #15
   135b0:	andeq	r3, r1, r8, lsl #16
   135b4:	andeq	r3, r1, r0, lsr r8
   135b8:	andeq	r3, r1, r8, asr r8
   135bc:	andeq	r3, r1, ip, ror r8
   135c0:	andeq	r3, r1, r0, lsr #17
   135c4:	andeq	r3, r1, r4, asr #17
   135c8:	andeq	r3, r1, ip, ror #17
   135cc:	andeq	r3, r1, r4, lsl r9
   135d0:	andeq	r3, r1, ip, lsr r9
   135d4:	andeq	r3, r1, r4, ror #18
   135d8:	mov	r0, r4
   135dc:	mov	r1, r5
   135e0:	mov	r2, r7
   135e4:	bl	1543c <table_get_int@@Base>
   135e8:	mov	r3, r0
   135ec:	mov	r0, sl
   135f0:	mov	r1, r5
   135f4:	mov	r2, r7
   135f8:	bl	15ae8 <table_set_int@@Base>
   135fc:	b	1398c <table_dupe@@Base+0x4c4>
   13600:	mov	r0, r4
   13604:	mov	r1, r5
   13608:	mov	r2, r7
   1360c:	bl	15450 <table_get_uint@@Base>
   13610:	mov	r3, r0
   13614:	mov	r0, sl
   13618:	mov	r1, r5
   1361c:	mov	r2, r7
   13620:	bl	15b10 <table_set_uint@@Base>
   13624:	b	1398c <table_dupe@@Base+0x4c4>
   13628:	mov	r0, r4
   1362c:	mov	r1, r5
   13630:	mov	r2, r7
   13634:	bl	15464 <table_get_int8@@Base>
   13638:	mov	r3, r0
   1363c:	mov	r0, sl
   13640:	mov	r1, r5
   13644:	mov	r2, r7
   13648:	bl	15b38 <table_set_int8@@Base>
   1364c:	b	1398c <table_dupe@@Base+0x4c4>
   13650:	mov	r0, r4
   13654:	mov	r1, r5
   13658:	mov	r2, r7
   1365c:	bl	15478 <table_get_uint8@@Base>
   13660:	mov	r3, r0
   13664:	mov	r0, sl
   13668:	mov	r1, r5
   1366c:	mov	r2, r7
   13670:	bl	15b60 <table_set_uint8@@Base>
   13674:	b	1398c <table_dupe@@Base+0x4c4>
   13678:	mov	r0, r4
   1367c:	mov	r1, r5
   13680:	mov	r2, r7
   13684:	bl	1548c <table_get_int16@@Base>
   13688:	mov	r3, r0
   1368c:	mov	r0, sl
   13690:	mov	r1, r5
   13694:	mov	r2, r7
   13698:	bl	15b88 <table_set_int16@@Base>
   1369c:	b	1398c <table_dupe@@Base+0x4c4>
   136a0:	mov	r0, r4
   136a4:	mov	r1, r5
   136a8:	mov	r2, r7
   136ac:	bl	154a0 <table_get_uint16@@Base>
   136b0:	mov	r3, r0
   136b4:	mov	r0, sl
   136b8:	mov	r1, r5
   136bc:	mov	r2, r7
   136c0:	bl	15bb0 <table_set_uint16@@Base>
   136c4:	b	1398c <table_dupe@@Base+0x4c4>
   136c8:	mov	r0, r4
   136cc:	mov	r1, r5
   136d0:	mov	r2, r7
   136d4:	bl	154b4 <table_get_int32@@Base>
   136d8:	mov	r3, r0
   136dc:	mov	r0, sl
   136e0:	mov	r1, r5
   136e4:	mov	r2, r7
   136e8:	bl	15bd8 <table_set_int32@@Base>
   136ec:	b	1398c <table_dupe@@Base+0x4c4>
   136f0:	mov	r0, r4
   136f4:	mov	r1, r5
   136f8:	mov	r2, r7
   136fc:	bl	154c8 <table_get_uint32@@Base>
   13700:	mov	r3, r0
   13704:	mov	r0, sl
   13708:	mov	r1, r5
   1370c:	mov	r2, r7
   13710:	bl	15c00 <table_set_uint32@@Base>
   13714:	b	1398c <table_dupe@@Base+0x4c4>
   13718:	mov	r0, r4
   1371c:	mov	r1, r5
   13720:	mov	r2, r7
   13724:	bl	154dc <table_get_int64@@Base>
   13728:	stm	sp, {r0, r1}
   1372c:	mov	r0, sl
   13730:	mov	r1, r5
   13734:	mov	r2, r7
   13738:	bl	15c28 <table_set_int64@@Base>
   1373c:	b	1398c <table_dupe@@Base+0x4c4>
   13740:	mov	r0, r4
   13744:	mov	r1, r5
   13748:	mov	r2, r7
   1374c:	bl	154f0 <table_get_uint64@@Base>
   13750:	stm	sp, {r0, r1}
   13754:	mov	r0, sl
   13758:	mov	r1, r5
   1375c:	mov	r2, r7
   13760:	bl	15c5c <table_set_uint64@@Base>
   13764:	b	1398c <table_dupe@@Base+0x4c4>
   13768:	mov	r0, r4
   1376c:	mov	r1, r5
   13770:	mov	r2, r7
   13774:	bl	15504 <table_get_short@@Base>
   13778:	mov	r3, r0
   1377c:	mov	r0, sl
   13780:	mov	r1, r5
   13784:	mov	r2, r7
   13788:	bl	15c90 <table_set_short@@Base>
   1378c:	b	1398c <table_dupe@@Base+0x4c4>
   13790:	mov	r0, r4
   13794:	mov	r1, r5
   13798:	mov	r2, r7
   1379c:	bl	15518 <table_get_ushort@@Base>
   137a0:	mov	r3, r0
   137a4:	mov	r0, sl
   137a8:	mov	r1, r5
   137ac:	mov	r2, r7
   137b0:	bl	15cb8 <table_set_ushort@@Base>
   137b4:	b	1398c <table_dupe@@Base+0x4c4>
   137b8:	mov	r0, r4
   137bc:	mov	r1, r5
   137c0:	mov	r2, r7
   137c4:	bl	1552c <table_get_long@@Base>
   137c8:	mov	r3, r0
   137cc:	mov	r0, sl
   137d0:	mov	r1, r5
   137d4:	mov	r2, r7
   137d8:	bl	15ce0 <table_set_long@@Base>
   137dc:	b	1398c <table_dupe@@Base+0x4c4>
   137e0:	mov	r0, r4
   137e4:	mov	r1, r5
   137e8:	mov	r2, r7
   137ec:	bl	15540 <table_get_ulong@@Base>
   137f0:	mov	r3, r0
   137f4:	mov	r0, sl
   137f8:	mov	r1, r5
   137fc:	mov	r2, r7
   13800:	bl	15d08 <table_set_ulong@@Base>
   13804:	b	1398c <table_dupe@@Base+0x4c4>
   13808:	mov	r0, r4
   1380c:	mov	r1, r5
   13810:	mov	r2, r7
   13814:	bl	15554 <table_get_llong@@Base>
   13818:	stm	sp, {r0, r1}
   1381c:	mov	r0, sl
   13820:	mov	r1, r5
   13824:	mov	r2, r7
   13828:	bl	15d30 <table_set_llong@@Base>
   1382c:	b	1398c <table_dupe@@Base+0x4c4>
   13830:	mov	r0, r4
   13834:	mov	r1, r5
   13838:	mov	r2, r7
   1383c:	bl	15568 <table_get_ullong@@Base>
   13840:	stm	sp, {r0, r1}
   13844:	mov	r0, sl
   13848:	mov	r1, r5
   1384c:	mov	r2, r7
   13850:	bl	15d64 <table_set_ullong@@Base>
   13854:	b	1398c <table_dupe@@Base+0x4c4>
   13858:	mov	r0, r4
   1385c:	mov	r1, r5
   13860:	mov	r2, r7
   13864:	bl	1557c <table_get_float@@Base>
   13868:	mov	r0, sl
   1386c:	mov	r1, r5
   13870:	mov	r2, r7
   13874:	bl	15d98 <table_set_float@@Base>
   13878:	b	1398c <table_dupe@@Base+0x4c4>
   1387c:	mov	r0, r4
   13880:	mov	r1, r5
   13884:	mov	r2, r7
   13888:	bl	15590 <table_get_double@@Base>
   1388c:	mov	r0, sl
   13890:	mov	r1, r5
   13894:	mov	r2, r7
   13898:	bl	15dc0 <table_set_double@@Base>
   1389c:	b	1398c <table_dupe@@Base+0x4c4>
   138a0:	mov	r0, r4
   138a4:	mov	r1, r5
   138a8:	mov	r2, r7
   138ac:	bl	155a4 <table_get_ldouble@@Base>
   138b0:	mov	r0, sl
   138b4:	mov	r1, r5
   138b8:	mov	r2, r7
   138bc:	bl	15de8 <table_set_ldouble@@Base>
   138c0:	b	1398c <table_dupe@@Base+0x4c4>
   138c4:	mov	r0, r4
   138c8:	mov	r1, r5
   138cc:	mov	r2, r7
   138d0:	bl	155b8 <table_get_char@@Base>
   138d4:	mov	r3, r0
   138d8:	mov	r0, sl
   138dc:	mov	r1, r5
   138e0:	mov	r2, r7
   138e4:	bl	15e30 <table_set_char@@Base>
   138e8:	b	1398c <table_dupe@@Base+0x4c4>
   138ec:	mov	r0, r4
   138f0:	mov	r1, r5
   138f4:	mov	r2, r7
   138f8:	bl	155cc <table_get_uchar@@Base>
   138fc:	mov	r3, r0
   13900:	mov	r0, sl
   13904:	mov	r1, r5
   13908:	mov	r2, r7
   1390c:	bl	15e58 <table_set_uchar@@Base>
   13910:	b	1398c <table_dupe@@Base+0x4c4>
   13914:	mov	r0, r4
   13918:	mov	r1, r5
   1391c:	mov	r2, r7
   13920:	bl	155e0 <table_get_string@@Base>
   13924:	mov	r3, r0
   13928:	mov	r0, sl
   1392c:	mov	r1, r5
   13930:	mov	r2, r7
   13934:	bl	15e10 <table_set_string@@Base>
   13938:	b	1398c <table_dupe@@Base+0x4c4>
   1393c:	mov	r0, r4
   13940:	mov	r1, r5
   13944:	mov	r2, r7
   13948:	bl	15428 <table_get_bool@@Base>
   1394c:	mov	r3, r0
   13950:	mov	r0, sl
   13954:	mov	r1, r5
   13958:	mov	r2, r7
   1395c:	bl	15ac0 <table_set_bool@@Base>
   13960:	b	1398c <table_dupe@@Base+0x4c4>
   13964:	mov	r0, r4
   13968:	mov	r1, r5
   1396c:	mov	r2, r7
   13970:	bl	155e4 <table_get_ptr@@Base>
   13974:	str	r0, [sp, #8]
   13978:	mov	r0, sl
   1397c:	mov	r1, r5
   13980:	mov	r2, r7
   13984:	mov	r3, r9
   13988:	bl	15e80 <table_set_ptr@@Base>
   1398c:	add	r7, r7, #1
   13990:	cmp	r6, r7
   13994:	bne	1355c <table_dupe@@Base+0x94>
   13998:	add	r5, r5, #1
   1399c:	cmp	r5, r8
   139a0:	bne	13548 <table_dupe@@Base+0x80>
   139a4:	mov	r0, sl
   139a8:	sub	sp, fp, #28
   139ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000139b0 <table_get_major_version@@Base>:
   139b0:	mov	r0, #0
   139b4:	bx	lr

000139b8 <table_get_minor_version@@Base>:
   139b8:	mov	r0, #0
   139bc:	bx	lr

000139c0 <table_get_patch_version@@Base>:
   139c0:	mov	r0, #0
   139c4:	bx	lr

000139c8 <table_get_version@@Base>:
   139c8:	movw	r0, #26933	; 0x6935
   139cc:	movt	r0, #1
   139d0:	bx	lr

000139d4 <table_get_callback_length@@Base>:
   139d4:	ldr	r0, [r0, #32]
   139d8:	bx	lr

000139dc <table_register_callback@@Base>:
   139dc:	push	{r4, r5, r6, r7, fp, lr}
   139e0:	add	fp, sp, #16
   139e4:	sub	sp, sp, #8
   139e8:	mov	r5, r3
   139ec:	mov	r6, r2
   139f0:	mov	r7, r1
   139f4:	mov	r4, r0
   139f8:	bl	13a70 <table_register_callback@@Base+0x94>
   139fc:	cmp	r0, #1
   13a00:	blt	13a1c <table_register_callback@@Base+0x40>
   13a04:	ldr	r1, [r4, #44]	; 0x2c
   13a08:	ldr	r2, [r1, r0, lsl #2]
   13a0c:	orr	r2, r2, r5
   13a10:	str	r2, [r1, r0, lsl #2]
   13a14:	sub	sp, fp, #16
   13a18:	pop	{r4, r5, r6, r7, fp, pc}
   13a1c:	ldr	r0, [r4, #32]
   13a20:	ldr	r1, [r4, #48]	; 0x30
   13a24:	udiv	r2, r0, r1
   13a28:	mls	r0, r2, r1, r0
   13a2c:	cmp	r0, #0
   13a30:	bne	13a3c <table_register_callback@@Base+0x60>
   13a34:	mov	r0, r4
   13a38:	bl	13ac8 <table_register_callback@@Base+0xec>
   13a3c:	mov	r0, r4
   13a40:	bl	139d4 <table_get_callback_length@@Base>
   13a44:	mov	r1, r0
   13a48:	str	r5, [sp]
   13a4c:	mov	r0, r4
   13a50:	mov	r2, r7
   13a54:	mov	r3, r6
   13a58:	bl	13b20 <table_register_callback@@Base+0x144>
   13a5c:	ldr	r0, [r4, #32]
   13a60:	add	r0, r0, #1
   13a64:	str	r0, [r4, #32]
   13a68:	sub	sp, fp, #16
   13a6c:	pop	{r4, r5, r6, r7, fp, pc}
   13a70:	push	{r4, sl, fp, lr}
   13a74:	add	fp, sp, #8
   13a78:	mov	ip, r0
   13a7c:	ldr	r3, [r0, #32]
   13a80:	mvn	r0, #0
   13a84:	cmp	r3, #1
   13a88:	poplt	{r4, sl, fp, pc}
   13a8c:	ldr	lr, [ip, #36]	; 0x24
   13a90:	mov	r3, #0
   13a94:	ldr	r4, [lr, r3, lsl #2]
   13a98:	cmp	r4, r1
   13a9c:	bne	13ab4 <table_register_callback@@Base+0xd8>
   13aa0:	ldr	r4, [ip, #40]	; 0x28
   13aa4:	ldr	r4, [r4, r3, lsl #2]
   13aa8:	cmp	r4, r2
   13aac:	moveq	r0, r3
   13ab0:	popeq	{r4, sl, fp, pc}
   13ab4:	add	r3, r3, #1
   13ab8:	ldr	r4, [ip, #32]
   13abc:	cmp	r3, r4
   13ac0:	blt	13a94 <table_register_callback@@Base+0xb8>
   13ac4:	pop	{r4, sl, fp, pc}
   13ac8:	push	{r4, sl, fp, lr}
   13acc:	add	fp, sp, #8
   13ad0:	mov	r4, r0
   13ad4:	ldr	r0, [r0, #36]	; 0x24
   13ad8:	ldr	r1, [r4, #48]	; 0x30
   13adc:	ldr	r2, [r4, #52]	; 0x34
   13ae0:	add	r1, r2, r1
   13ae4:	str	r1, [r4, #52]	; 0x34
   13ae8:	lsl	r1, r1, #2
   13aec:	bl	12f9c <realloc@plt>
   13af0:	str	r0, [r4, #36]	; 0x24
   13af4:	ldr	r0, [r4, #40]	; 0x28
   13af8:	ldr	r1, [r4, #52]	; 0x34
   13afc:	lsl	r1, r1, #2
   13b00:	bl	12f9c <realloc@plt>
   13b04:	str	r0, [r4, #40]	; 0x28
   13b08:	ldr	r0, [r4, #44]	; 0x2c
   13b0c:	ldr	r1, [r4, #52]	; 0x34
   13b10:	lsl	r1, r1, #2
   13b14:	bl	12f9c <realloc@plt>
   13b18:	str	r0, [r4, #44]	; 0x2c
   13b1c:	pop	{r4, sl, fp, pc}
   13b20:	ldr	ip, [r0, #36]	; 0x24
   13b24:	str	r2, [ip, r1, lsl #2]
   13b28:	ldr	r2, [r0, #40]	; 0x28
   13b2c:	str	r3, [r2, r1, lsl #2]
   13b30:	ldr	r0, [r0, #44]	; 0x2c
   13b34:	ldr	r2, [sp]
   13b38:	str	r2, [r0, r1, lsl #2]
   13b3c:	bx	lr

00013b40 <table_unregister_callback@@Base>:
   13b40:	push	{r4, sl, fp, lr}
   13b44:	add	fp, sp, #8
   13b48:	mov	r4, r0
   13b4c:	bl	13a70 <table_register_callback@@Base+0x94>
   13b50:	cmn	r0, #1
   13b54:	popeq	{r4, sl, fp, pc}
   13b58:	ldr	r1, [r4, #32]
   13b5c:	sub	r2, r1, #1
   13b60:	cmp	r0, r2
   13b64:	bge	13bac <table_unregister_callback@@Base+0x6c>
   13b68:	mov	r1, #4
   13b6c:	add	r1, r1, r0, lsl #2
   13b70:	ldr	r2, [r4, #36]	; 0x24
   13b74:	ldr	r3, [r2, r1]!
   13b78:	str	r3, [r2, #-4]
   13b7c:	ldr	r2, [r4, #40]	; 0x28
   13b80:	ldr	r3, [r2, r1]!
   13b84:	str	r3, [r2, #-4]
   13b88:	ldr	r2, [r4, #44]	; 0x2c
   13b8c:	ldr	r3, [r2, r1]!
   13b90:	str	r3, [r2, #-4]
   13b94:	add	r1, r1, #4
   13b98:	add	r0, r0, #1
   13b9c:	ldr	r2, [r4, #32]
   13ba0:	sub	r2, r2, #1
   13ba4:	cmp	r0, r2
   13ba8:	blt	13b70 <table_unregister_callback@@Base+0x30>
   13bac:	str	r2, [r4, #32]
   13bb0:	ldr	r0, [r4, #48]	; 0x30
   13bb4:	udiv	r1, r2, r0
   13bb8:	mls	r0, r1, r0, r2
   13bbc:	cmp	r0, #0
   13bc0:	beq	13bc8 <table_unregister_callback@@Base+0x88>
   13bc4:	pop	{r4, sl, fp, pc}
   13bc8:	mov	r0, r4
   13bcc:	pop	{r4, sl, fp, lr}
   13bd0:	b	13bd4 <table_unregister_callback@@Base+0x94>
   13bd4:	push	{r4, sl, fp, lr}
   13bd8:	add	fp, sp, #8
   13bdc:	mov	r4, r0
   13be0:	ldr	r0, [r0, #36]	; 0x24
   13be4:	ldr	r1, [r4, #48]	; 0x30
   13be8:	ldr	r2, [r4, #52]	; 0x34
   13bec:	subs	r1, r2, r1
   13bf0:	str	r1, [r4, #52]	; 0x34
   13bf4:	beq	13c30 <table_unregister_callback@@Base+0xf0>
   13bf8:	lsl	r1, r1, #2
   13bfc:	bl	12f9c <realloc@plt>
   13c00:	str	r0, [r4, #36]	; 0x24
   13c04:	ldr	r0, [r4, #40]	; 0x28
   13c08:	ldr	r1, [r4, #52]	; 0x34
   13c0c:	lsl	r1, r1, #2
   13c10:	bl	12f9c <realloc@plt>
   13c14:	str	r0, [r4, #40]	; 0x28
   13c18:	ldr	r0, [r4, #44]	; 0x2c
   13c1c:	ldr	r1, [r4, #52]	; 0x34
   13c20:	lsl	r1, r1, #2
   13c24:	bl	12f9c <realloc@plt>
   13c28:	str	r0, [r4, #44]	; 0x2c
   13c2c:	pop	{r4, sl, fp, pc}
   13c30:	bl	12f90 <free@plt>
   13c34:	ldr	r0, [r4, #40]	; 0x28
   13c38:	bl	12f90 <free@plt>
   13c3c:	ldr	r0, [r4, #44]	; 0x2c
   13c40:	bl	12f90 <free@plt>
   13c44:	mov	r0, #0
   13c48:	str	r0, [r4, #36]	; 0x24
   13c4c:	str	r0, [r4, #40]	; 0x28
   13c50:	str	r0, [r4, #44]	; 0x2c
   13c54:	pop	{r4, sl, fp, pc}

00013c58 <table_notify@@Base>:
   13c58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c5c:	add	fp, sp, #24
   13c60:	sub	sp, sp, #8
   13c64:	mov	r7, r0
   13c68:	ldr	r0, [r0, #32]
   13c6c:	cmp	r0, #1
   13c70:	blt	13ccc <table_notify@@Base+0x74>
   13c74:	mov	r4, r3
   13c78:	mov	r8, r2
   13c7c:	mov	r9, r1
   13c80:	mov	r5, #0
   13c84:	ldr	r0, [r7, #44]	; 0x2c
   13c88:	ldr	r0, [r0, r5, lsl #2]
   13c8c:	tst	r0, r4
   13c90:	beq	13cbc <table_notify@@Base+0x64>
   13c94:	ldr	r0, [r7, #36]	; 0x24
   13c98:	ldr	r1, [r7, #40]	; 0x28
   13c9c:	ldr	r6, [r0, r5, lsl #2]
   13ca0:	ldr	r0, [r1, r5, lsl #2]
   13ca4:	str	r0, [sp]
   13ca8:	mov	r0, r7
   13cac:	mov	r1, r9
   13cb0:	mov	r2, r8
   13cb4:	mov	r3, r4
   13cb8:	blx	r6
   13cbc:	ldr	r0, [r7, #32]
   13cc0:	add	r5, r5, #1
   13cc4:	cmp	r5, r0
   13cc8:	blt	13c84 <table_notify@@Base+0x2c>
   13ccc:	sub	sp, fp, #24
   13cd0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013cd4 <table_column_init@@Base>:
   13cd4:	push	{r4, r5, r6, r7, fp, lr}
   13cd8:	add	fp, sp, #16
   13cdc:	mov	r4, r3
   13ce0:	mov	r5, r2
   13ce4:	bl	13d1c <table_get_col_ptr@@Base>
   13ce8:	mov	r6, r0
   13cec:	mov	r0, r5
   13cf0:	bl	12fd8 <strlen@plt>
   13cf4:	add	r0, r0, #1
   13cf8:	bl	12fb4 <malloc@plt>
   13cfc:	str	r0, [r6]
   13d00:	ldr	r7, [fp, #8]
   13d04:	cmp	r0, #0
   13d08:	beq	13d14 <table_column_init@@Base+0x40>
   13d0c:	mov	r1, r5
   13d10:	bl	12fa8 <strcpy@plt>
   13d14:	stmib	r6, {r4, r7}
   13d18:	pop	{r4, r5, r6, r7, fp, pc}

00013d1c <table_get_col_ptr@@Base>:
   13d1c:	ldr	r0, [r0]
   13d20:	add	r1, r1, r1, lsl #1
   13d24:	add	r0, r0, r1, lsl #2
   13d28:	bx	lr

00013d2c <table_column_destroy@@Base>:
   13d2c:	push	{fp, lr}
   13d30:	mov	fp, sp
   13d34:	bl	13d1c <table_get_col_ptr@@Base>
   13d38:	ldr	r0, [r0]
   13d3c:	cmp	r0, #0
   13d40:	popeq	{fp, pc}
   13d44:	pop	{fp, lr}
   13d48:	b	12f90 <free@plt>

00013d4c <table_get_column_length@@Base>:
   13d4c:	ldr	r0, [r0, #4]
   13d50:	bx	lr

00013d54 <table_get_column@@Base>:
   13d54:	push	{r4, r5, r6, r7, fp, lr}
   13d58:	add	fp, sp, #16
   13d5c:	mov	r6, r1
   13d60:	mov	r7, r0
   13d64:	bl	13d4c <table_get_column_length@@Base>
   13d68:	mov	r4, r0
   13d6c:	mov	r5, #0
   13d70:	cmp	r0, #1
   13d74:	blt	13da0 <table_get_column@@Base+0x4c>
   13d78:	mov	r0, r7
   13d7c:	mov	r1, r5
   13d80:	bl	13db0 <table_get_column_name@@Base>
   13d84:	mov	r1, r6
   13d88:	bl	12f78 <strcmp@plt>
   13d8c:	cmp	r0, #0
   13d90:	beq	13da0 <table_get_column@@Base+0x4c>
   13d94:	add	r5, r5, #1
   13d98:	cmp	r5, r4
   13d9c:	blt	13d78 <table_get_column@@Base+0x24>
   13da0:	cmp	r5, r4
   13da4:	mvneq	r5, #0
   13da8:	mov	r0, r5
   13dac:	pop	{r4, r5, r6, r7, fp, pc}

00013db0 <table_get_column_name@@Base>:
   13db0:	push	{fp, lr}
   13db4:	mov	fp, sp
   13db8:	bl	13d1c <table_get_col_ptr@@Base>
   13dbc:	ldr	r0, [r0]
   13dc0:	pop	{fp, pc}

00013dc4 <table_get_column_data_type@@Base>:
   13dc4:	push	{fp, lr}
   13dc8:	mov	fp, sp
   13dcc:	bl	13d1c <table_get_col_ptr@@Base>
   13dd0:	ldr	r0, [r0, #4]
   13dd4:	pop	{fp, pc}

00013dd8 <table_add_column@@Base>:
   13dd8:	push	{r4, r5, r6, sl, fp, lr}
   13ddc:	add	fp, sp, #16
   13de0:	mov	r5, r2
   13de4:	mov	r6, r1
   13de8:	mov	r4, r0
   13dec:	bl	13d4c <table_get_column_length@@Base>
   13df0:	ldr	r1, [r4, #8]
   13df4:	udiv	r2, r0, r1
   13df8:	mls	r0, r2, r1, r0
   13dfc:	cmp	r0, #0
   13e00:	bne	13e0c <table_add_column@@Base+0x34>
   13e04:	mov	r0, r4
   13e08:	bl	13e48 <table_add_column@@Base+0x70>
   13e0c:	mov	r0, r4
   13e10:	mov	r1, r6
   13e14:	mov	r2, r5
   13e18:	bl	13ec4 <table_add_column@@Base+0xec>
   13e1c:	mov	r0, r4
   13e20:	bl	13d4c <table_get_column_length@@Base>
   13e24:	mov	r2, r0
   13e28:	mov	r0, r4
   13e2c:	mvn	r1, #0
   13e30:	mov	r3, #8
   13e34:	bl	13c58 <table_notify@@Base>
   13e38:	ldr	r0, [r4, #4]
   13e3c:	add	r1, r0, #1
   13e40:	str	r1, [r4, #4]
   13e44:	pop	{r4, r5, r6, sl, fp, pc}
   13e48:	push	{r4, r5, r6, r7, fp, lr}
   13e4c:	add	fp, sp, #16
   13e50:	mov	r4, r0
   13e54:	ldr	r0, [r0]
   13e58:	ldr	r1, [r4, #8]
   13e5c:	ldr	r2, [r4, #12]
   13e60:	add	r1, r2, r1
   13e64:	str	r1, [r4, #12]
   13e68:	add	r1, r1, r1, lsl #1
   13e6c:	lsl	r1, r1, #2
   13e70:	bl	12f9c <realloc@plt>
   13e74:	str	r0, [r4]
   13e78:	mov	r0, r4
   13e7c:	bl	15680 <table_get_row_length@@Base>
   13e80:	cmp	r0, #1
   13e84:	poplt	{r4, r5, r6, r7, fp, pc}
   13e88:	mov	r5, r0
   13e8c:	mov	r6, #0
   13e90:	mov	r0, r4
   13e94:	mov	r1, r6
   13e98:	bl	15610 <table_get_row_ptr@@Base>
   13e9c:	mov	r7, r0
   13ea0:	ldr	r0, [r0]
   13ea4:	ldr	r1, [r4, #12]
   13ea8:	lsl	r1, r1, #2
   13eac:	bl	12f9c <realloc@plt>
   13eb0:	str	r0, [r7]
   13eb4:	add	r6, r6, #1
   13eb8:	cmp	r5, r6
   13ebc:	bne	13e90 <table_add_column@@Base+0xb8>
   13ec0:	pop	{r4, r5, r6, r7, fp, pc}
   13ec4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ec8:	add	fp, sp, #24
   13ecc:	sub	sp, sp, #8
   13ed0:	mov	r7, r2
   13ed4:	mov	r8, r1
   13ed8:	mov	r4, r0
   13edc:	bl	15680 <table_get_row_length@@Base>
   13ee0:	mov	r5, r0
   13ee4:	mov	r0, r4
   13ee8:	bl	13d4c <table_get_column_length@@Base>
   13eec:	mov	r6, r0
   13ef0:	mov	r0, r7
   13ef4:	bl	147ec <table_get_default_compare_function_for_data_type@@Base>
   13ef8:	str	r0, [sp]
   13efc:	mov	r0, r4
   13f00:	mov	r1, r6
   13f04:	mov	r2, r8
   13f08:	mov	r3, r7
   13f0c:	bl	13cd4 <table_column_init@@Base>
   13f10:	cmp	r5, #1
   13f14:	blt	13f38 <table_add_column@@Base+0x160>
   13f18:	mov	r7, #0
   13f1c:	mov	r0, r4
   13f20:	mov	r1, r7
   13f24:	mov	r2, r6
   13f28:	bl	15ea0 <table_cell_init@@Base>
   13f2c:	add	r7, r7, #1
   13f30:	cmp	r5, r7
   13f34:	bne	13f1c <table_add_column@@Base+0x144>
   13f38:	sub	sp, fp, #24
   13f3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013f40 <table_remove_column@@Base>:
   13f40:	push	{r4, r5, fp, lr}
   13f44:	add	fp, sp, #8
   13f48:	mov	r4, r1
   13f4c:	mov	r5, r0
   13f50:	bl	13fa0 <table_remove_column@@Base+0x60>
   13f54:	ldr	r0, [r5, #4]
   13f58:	sub	r0, r0, #1
   13f5c:	str	r0, [r5, #4]
   13f60:	mov	r0, r5
   13f64:	bl	13d4c <table_get_column_length@@Base>
   13f68:	ldr	r1, [r5, #8]
   13f6c:	udiv	r2, r0, r1
   13f70:	mls	r0, r2, r1, r0
   13f74:	cmp	r0, #0
   13f78:	bne	13f84 <table_remove_column@@Base+0x44>
   13f7c:	mov	r0, r5
   13f80:	bl	14064 <table_remove_column@@Base+0x124>
   13f84:	mov	r0, r5
   13f88:	mvn	r1, #0
   13f8c:	mov	r2, r4
   13f90:	mov	r3, #16
   13f94:	bl	13c58 <table_notify@@Base>
   13f98:	mov	r0, #0
   13f9c:	pop	{r4, r5, fp, pc}
   13fa0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13fa4:	add	fp, sp, #24
   13fa8:	mov	r4, r1
   13fac:	mov	r5, r0
   13fb0:	bl	13d2c <table_column_destroy@@Base>
   13fb4:	mov	r0, r5
   13fb8:	bl	13d4c <table_get_column_length@@Base>
   13fbc:	sub	r6, r0, #1
   13fc0:	cmp	r6, r4
   13fc4:	ble	13ff8 <table_remove_column@@Base+0xb8>
   13fc8:	sub	r0, r6, r4
   13fcc:	add	r1, r4, r4, lsl #1
   13fd0:	lsl	r1, r1, #2
   13fd4:	ldr	r2, [r5]
   13fd8:	add	r2, r2, r1
   13fdc:	vldr	d16, [r2, #12]
   13fe0:	ldr	r3, [r2, #20]
   13fe4:	str	r3, [r2, #8]
   13fe8:	vstr	d16, [r2]
   13fec:	subs	r0, r0, #1
   13ff0:	add	r1, r1, #12
   13ff4:	bne	13fd4 <table_remove_column@@Base+0x94>
   13ff8:	mov	r0, r5
   13ffc:	bl	15680 <table_get_row_length@@Base>
   14000:	cmp	r0, #1
   14004:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   14008:	mov	r8, r0
   1400c:	mov	r7, #0
   14010:	mov	r0, r5
   14014:	mov	r1, r7
   14018:	mov	r2, r4
   1401c:	bl	15ed4 <table_cell_destroy@@Base>
   14020:	mov	r0, r5
   14024:	mov	r1, r7
   14028:	bl	15610 <table_get_row_ptr@@Base>
   1402c:	cmp	r6, r4
   14030:	ble	14054 <table_remove_column@@Base+0x114>
   14034:	mov	r1, r4
   14038:	ldr	r2, [r0]
   1403c:	add	r3, r2, r1, lsl #2
   14040:	ldr	r3, [r3, #4]
   14044:	str	r3, [r2, r1, lsl #2]
   14048:	add	r1, r1, #1
   1404c:	cmp	r6, r1
   14050:	bne	14038 <table_remove_column@@Base+0xf8>
   14054:	add	r7, r7, #1
   14058:	cmp	r7, r8
   1405c:	bne	14010 <table_remove_column@@Base+0xd0>
   14060:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14064:	push	{r4, r5, r6, r7, fp, lr}
   14068:	add	fp, sp, #16
   1406c:	mov	r4, r0
   14070:	ldr	r0, [r0]
   14074:	ldr	r1, [r4, #8]
   14078:	ldr	r2, [r4, #12]
   1407c:	sub	r1, r2, r1
   14080:	str	r1, [r4, #12]
   14084:	add	r1, r1, r1, lsl #1
   14088:	lsl	r1, r1, #2
   1408c:	bl	12f9c <realloc@plt>
   14090:	str	r0, [r4]
   14094:	mov	r0, r4
   14098:	bl	15680 <table_get_row_length@@Base>
   1409c:	cmp	r0, #1
   140a0:	poplt	{r4, r5, r6, r7, fp, pc}
   140a4:	mov	r5, r0
   140a8:	mov	r6, #0
   140ac:	mov	r0, r4
   140b0:	mov	r1, r6
   140b4:	bl	15610 <table_get_row_ptr@@Base>
   140b8:	mov	r7, r0
   140bc:	ldr	r0, [r0]
   140c0:	ldr	r1, [r4, #12]
   140c4:	lsl	r1, r1, #2
   140c8:	bl	12f9c <realloc@plt>
   140cc:	str	r0, [r7]
   140d0:	add	r6, r6, #1
   140d4:	cmp	r5, r6
   140d8:	bne	140ac <table_remove_column@@Base+0x16c>
   140dc:	pop	{r4, r5, r6, r7, fp, pc}

000140e0 <table_get_column_compare_function@@Base>:
   140e0:	push	{fp, lr}
   140e4:	mov	fp, sp
   140e8:	bl	13d1c <table_get_col_ptr@@Base>
   140ec:	ldr	r0, [r0, #8]
   140f0:	pop	{fp, pc}

000140f4 <table_set_column_compare_function@@Base>:
   140f4:	push	{r4, sl, fp, lr}
   140f8:	add	fp, sp, #8
   140fc:	mov	r4, r2
   14100:	bl	13d1c <table_get_col_ptr@@Base>
   14104:	str	r4, [r0, #8]
   14108:	pop	{r4, sl, fp, pc}

0001410c <table_compare_bool@@Base>:
   1410c:	cmp	r0, #0
   14110:	beq	14144 <table_compare_bool@@Base+0x38>
   14114:	cmp	r1, #0
   14118:	moveq	r1, #1
   1411c:	moveq	r0, r1
   14120:	bxeq	lr
   14124:	ldrb	r2, [r1]
   14128:	ldrb	r0, [r0]
   1412c:	mov	r1, #0
   14130:	cmp	r0, r2
   14134:	mvncc	r1, #0
   14138:	movwhi	r1, #1
   1413c:	mov	r0, r1
   14140:	bx	lr
   14144:	cmp	r1, #0
   14148:	mvnne	r1, #0
   1414c:	mov	r0, r1
   14150:	bx	lr

00014154 <table_compare_int@@Base>:
   14154:	cmp	r0, #0
   14158:	beq	1418c <table_compare_int@@Base+0x38>
   1415c:	cmp	r1, #0
   14160:	moveq	r1, #1
   14164:	moveq	r0, r1
   14168:	bxeq	lr
   1416c:	ldr	r2, [r1]
   14170:	ldr	r0, [r0]
   14174:	mov	r1, #0
   14178:	cmp	r0, r2
   1417c:	mvnlt	r1, #0
   14180:	movwgt	r1, #1
   14184:	mov	r0, r1
   14188:	bx	lr
   1418c:	cmp	r1, #0
   14190:	mvnne	r1, #0
   14194:	mov	r0, r1
   14198:	bx	lr

0001419c <table_compare_uint@@Base>:
   1419c:	cmp	r0, #0
   141a0:	beq	141d4 <table_compare_uint@@Base+0x38>
   141a4:	cmp	r1, #0
   141a8:	moveq	r1, #1
   141ac:	moveq	r0, r1
   141b0:	bxeq	lr
   141b4:	ldr	r2, [r1]
   141b8:	ldr	r0, [r0]
   141bc:	mov	r1, #0
   141c0:	cmp	r0, r2
   141c4:	mvncc	r1, #0
   141c8:	movwhi	r1, #1
   141cc:	mov	r0, r1
   141d0:	bx	lr
   141d4:	cmp	r1, #0
   141d8:	mvnne	r1, #0
   141dc:	mov	r0, r1
   141e0:	bx	lr

000141e4 <table_compare_int8@@Base>:
   141e4:	cmp	r0, #0
   141e8:	beq	1421c <table_compare_int8@@Base+0x38>
   141ec:	cmp	r1, #0
   141f0:	moveq	r1, #1
   141f4:	moveq	r0, r1
   141f8:	bxeq	lr
   141fc:	ldrsb	r2, [r1]
   14200:	ldrsb	r0, [r0]
   14204:	mov	r1, #0
   14208:	cmp	r0, r2
   1420c:	mvnlt	r1, #0
   14210:	movwgt	r1, #1
   14214:	mov	r0, r1
   14218:	bx	lr
   1421c:	cmp	r1, #0
   14220:	mvnne	r1, #0
   14224:	mov	r0, r1
   14228:	bx	lr

0001422c <table_compare_uint8@@Base>:
   1422c:	cmp	r0, #0
   14230:	beq	14264 <table_compare_uint8@@Base+0x38>
   14234:	cmp	r1, #0
   14238:	moveq	r1, #1
   1423c:	moveq	r0, r1
   14240:	bxeq	lr
   14244:	ldrb	r2, [r1]
   14248:	ldrb	r0, [r0]
   1424c:	mov	r1, #0
   14250:	cmp	r0, r2
   14254:	mvncc	r1, #0
   14258:	movwhi	r1, #1
   1425c:	mov	r0, r1
   14260:	bx	lr
   14264:	cmp	r1, #0
   14268:	mvnne	r1, #0
   1426c:	mov	r0, r1
   14270:	bx	lr

00014274 <table_compare_int16@@Base>:
   14274:	cmp	r0, #0
   14278:	beq	142ac <table_compare_int16@@Base+0x38>
   1427c:	cmp	r1, #0
   14280:	moveq	r1, #1
   14284:	moveq	r0, r1
   14288:	bxeq	lr
   1428c:	ldrsh	r2, [r1]
   14290:	ldrsh	r0, [r0]
   14294:	mov	r1, #0
   14298:	cmp	r0, r2
   1429c:	mvnlt	r1, #0
   142a0:	movwgt	r1, #1
   142a4:	mov	r0, r1
   142a8:	bx	lr
   142ac:	cmp	r1, #0
   142b0:	mvnne	r1, #0
   142b4:	mov	r0, r1
   142b8:	bx	lr

000142bc <table_compare_uint16@@Base>:
   142bc:	cmp	r0, #0
   142c0:	beq	142f4 <table_compare_uint16@@Base+0x38>
   142c4:	cmp	r1, #0
   142c8:	moveq	r1, #1
   142cc:	moveq	r0, r1
   142d0:	bxeq	lr
   142d4:	ldrh	r2, [r1]
   142d8:	ldrh	r0, [r0]
   142dc:	mov	r1, #0
   142e0:	cmp	r0, r2
   142e4:	mvncc	r1, #0
   142e8:	movwhi	r1, #1
   142ec:	mov	r0, r1
   142f0:	bx	lr
   142f4:	cmp	r1, #0
   142f8:	mvnne	r1, #0
   142fc:	mov	r0, r1
   14300:	bx	lr

00014304 <table_compare_int32@@Base>:
   14304:	cmp	r0, #0
   14308:	beq	1433c <table_compare_int32@@Base+0x38>
   1430c:	cmp	r1, #0
   14310:	moveq	r1, #1
   14314:	moveq	r0, r1
   14318:	bxeq	lr
   1431c:	ldr	r2, [r1]
   14320:	ldr	r0, [r0]
   14324:	mov	r1, #0
   14328:	cmp	r0, r2
   1432c:	mvnlt	r1, #0
   14330:	movwgt	r1, #1
   14334:	mov	r0, r1
   14338:	bx	lr
   1433c:	cmp	r1, #0
   14340:	mvnne	r1, #0
   14344:	mov	r0, r1
   14348:	bx	lr

0001434c <table_compare_uint32@@Base>:
   1434c:	cmp	r0, #0
   14350:	beq	14384 <table_compare_uint32@@Base+0x38>
   14354:	cmp	r1, #0
   14358:	moveq	r1, #1
   1435c:	moveq	r0, r1
   14360:	bxeq	lr
   14364:	ldr	r2, [r1]
   14368:	ldr	r0, [r0]
   1436c:	mov	r1, #0
   14370:	cmp	r0, r2
   14374:	mvncc	r1, #0
   14378:	movwhi	r1, #1
   1437c:	mov	r0, r1
   14380:	bx	lr
   14384:	cmp	r1, #0
   14388:	mvnne	r1, #0
   1438c:	mov	r0, r1
   14390:	bx	lr

00014394 <table_compare_int64@@Base>:
   14394:	cmp	r0, #0
   14398:	beq	143ec <table_compare_int64@@Base+0x58>
   1439c:	cmp	r1, #0
   143a0:	moveq	r1, #1
   143a4:	moveq	r0, r1
   143a8:	bxeq	lr
   143ac:	push	{r5, r7, fp, lr}
   143b0:	add	fp, sp, #8
   143b4:	ldm	r1, {r2, r7}
   143b8:	ldm	r0, {r0, r5}
   143bc:	mov	r1, #0
   143c0:	subs	r3, r0, r2
   143c4:	sbcs	r3, r5, r7
   143c8:	movwlt	r1, #1
   143cc:	cmp	r1, #0
   143d0:	mvnne	r1, #0
   143d4:	subs	r0, r2, r0
   143d8:	sbcs	r0, r7, r5
   143dc:	movwlt	r1, #1
   143e0:	pop	{r5, r7, fp, lr}
   143e4:	mov	r0, r1
   143e8:	bx	lr
   143ec:	cmp	r1, #0
   143f0:	mvnne	r1, #0
   143f4:	mov	r0, r1
   143f8:	bx	lr

000143fc <table_compare_uint64@@Base>:
   143fc:	cmp	r0, #0
   14400:	beq	14454 <table_compare_uint64@@Base+0x58>
   14404:	cmp	r1, #0
   14408:	moveq	r1, #1
   1440c:	moveq	r0, r1
   14410:	bxeq	lr
   14414:	push	{r5, r7, fp, lr}
   14418:	add	fp, sp, #8
   1441c:	ldm	r1, {r2, r7}
   14420:	ldm	r0, {r0, r5}
   14424:	mov	r1, #0
   14428:	subs	r3, r0, r2
   1442c:	sbcs	r3, r5, r7
   14430:	movwcc	r1, #1
   14434:	cmp	r1, #0
   14438:	mvnne	r1, #0
   1443c:	subs	r0, r2, r0
   14440:	sbcs	r0, r7, r5
   14444:	movwcc	r1, #1
   14448:	pop	{r5, r7, fp, lr}
   1444c:	mov	r0, r1
   14450:	bx	lr
   14454:	cmp	r1, #0
   14458:	mvnne	r1, #0
   1445c:	mov	r0, r1
   14460:	bx	lr

00014464 <table_compare_short@@Base>:
   14464:	cmp	r0, #0
   14468:	beq	1449c <table_compare_short@@Base+0x38>
   1446c:	cmp	r1, #0
   14470:	moveq	r1, #1
   14474:	moveq	r0, r1
   14478:	bxeq	lr
   1447c:	ldrsh	r2, [r1]
   14480:	ldrsh	r0, [r0]
   14484:	mov	r1, #0
   14488:	cmp	r0, r2
   1448c:	mvnlt	r1, #0
   14490:	movwgt	r1, #1
   14494:	mov	r0, r1
   14498:	bx	lr
   1449c:	cmp	r1, #0
   144a0:	mvnne	r1, #0
   144a4:	mov	r0, r1
   144a8:	bx	lr

000144ac <table_compare_ushort@@Base>:
   144ac:	cmp	r0, #0
   144b0:	beq	144e4 <table_compare_ushort@@Base+0x38>
   144b4:	cmp	r1, #0
   144b8:	moveq	r1, #1
   144bc:	moveq	r0, r1
   144c0:	bxeq	lr
   144c4:	ldrh	r2, [r1]
   144c8:	ldrh	r0, [r0]
   144cc:	mov	r1, #0
   144d0:	cmp	r0, r2
   144d4:	mvncc	r1, #0
   144d8:	movwhi	r1, #1
   144dc:	mov	r0, r1
   144e0:	bx	lr
   144e4:	cmp	r1, #0
   144e8:	mvnne	r1, #0
   144ec:	mov	r0, r1
   144f0:	bx	lr

000144f4 <table_compare_long@@Base>:
   144f4:	cmp	r0, #0
   144f8:	beq	1452c <table_compare_long@@Base+0x38>
   144fc:	cmp	r1, #0
   14500:	moveq	r1, #1
   14504:	moveq	r0, r1
   14508:	bxeq	lr
   1450c:	ldr	r2, [r1]
   14510:	ldr	r0, [r0]
   14514:	mov	r1, #0
   14518:	cmp	r0, r2
   1451c:	mvnlt	r1, #0
   14520:	movwgt	r1, #1
   14524:	mov	r0, r1
   14528:	bx	lr
   1452c:	cmp	r1, #0
   14530:	mvnne	r1, #0
   14534:	mov	r0, r1
   14538:	bx	lr

0001453c <table_compare_ulong@@Base>:
   1453c:	cmp	r0, #0
   14540:	beq	14574 <table_compare_ulong@@Base+0x38>
   14544:	cmp	r1, #0
   14548:	moveq	r1, #1
   1454c:	moveq	r0, r1
   14550:	bxeq	lr
   14554:	ldr	r2, [r1]
   14558:	ldr	r0, [r0]
   1455c:	mov	r1, #0
   14560:	cmp	r0, r2
   14564:	mvncc	r1, #0
   14568:	movwhi	r1, #1
   1456c:	mov	r0, r1
   14570:	bx	lr
   14574:	cmp	r1, #0
   14578:	mvnne	r1, #0
   1457c:	mov	r0, r1
   14580:	bx	lr

00014584 <table_compare_llong@@Base>:
   14584:	cmp	r0, #0
   14588:	beq	145dc <table_compare_llong@@Base+0x58>
   1458c:	cmp	r1, #0
   14590:	moveq	r1, #1
   14594:	moveq	r0, r1
   14598:	bxeq	lr
   1459c:	push	{r5, r7, fp, lr}
   145a0:	add	fp, sp, #8
   145a4:	ldm	r1, {r2, r7}
   145a8:	ldm	r0, {r0, r5}
   145ac:	mov	r1, #0
   145b0:	subs	r3, r0, r2
   145b4:	sbcs	r3, r5, r7
   145b8:	movwlt	r1, #1
   145bc:	cmp	r1, #0
   145c0:	mvnne	r1, #0
   145c4:	subs	r0, r2, r0
   145c8:	sbcs	r0, r7, r5
   145cc:	movwlt	r1, #1
   145d0:	pop	{r5, r7, fp, lr}
   145d4:	mov	r0, r1
   145d8:	bx	lr
   145dc:	cmp	r1, #0
   145e0:	mvnne	r1, #0
   145e4:	mov	r0, r1
   145e8:	bx	lr

000145ec <table_compare_ullong@@Base>:
   145ec:	cmp	r0, #0
   145f0:	beq	14624 <table_compare_ullong@@Base+0x38>
   145f4:	cmp	r1, #0
   145f8:	moveq	r1, #1
   145fc:	moveq	r0, r1
   14600:	bxeq	lr
   14604:	ldr	r2, [r1]
   14608:	ldr	r0, [r0]
   1460c:	mov	r1, #0
   14610:	cmp	r0, r2
   14614:	mvncc	r1, #0
   14618:	movwhi	r1, #1
   1461c:	mov	r0, r1
   14620:	bx	lr
   14624:	cmp	r1, #0
   14628:	mvnne	r1, #0
   1462c:	mov	r0, r1
   14630:	bx	lr

00014634 <table_compare_float@@Base>:
   14634:	cmp	r0, #0
   14638:	beq	14670 <table_compare_float@@Base+0x3c>
   1463c:	cmp	r1, #0
   14640:	moveq	r1, #1
   14644:	moveq	r0, r1
   14648:	bxeq	lr
   1464c:	vldr	s0, [r1]
   14650:	vldr	s2, [r0]
   14654:	mov	r1, #0
   14658:	vcmpe.f32	s2, s0
   1465c:	vmrs	APSR_nzcv, fpscr
   14660:	mvnmi	r1, #0
   14664:	movwgt	r1, #1
   14668:	mov	r0, r1
   1466c:	bx	lr
   14670:	cmp	r1, #0
   14674:	mvnne	r1, #0
   14678:	mov	r0, r1
   1467c:	bx	lr

00014680 <table_compare_double@@Base>:
   14680:	cmp	r0, #0
   14684:	beq	146bc <table_compare_double@@Base+0x3c>
   14688:	cmp	r1, #0
   1468c:	moveq	r1, #1
   14690:	moveq	r0, r1
   14694:	bxeq	lr
   14698:	vldr	d16, [r1]
   1469c:	vldr	d17, [r0]
   146a0:	mov	r1, #0
   146a4:	vcmpe.f64	d17, d16
   146a8:	vmrs	APSR_nzcv, fpscr
   146ac:	mvnmi	r1, #0
   146b0:	movwgt	r1, #1
   146b4:	mov	r0, r1
   146b8:	bx	lr
   146bc:	cmp	r1, #0
   146c0:	mvnne	r1, #0
   146c4:	mov	r0, r1
   146c8:	bx	lr

000146cc <table_compare_ldouble@@Base>:
   146cc:	cmp	r0, #0
   146d0:	beq	14708 <table_compare_ldouble@@Base+0x3c>
   146d4:	cmp	r1, #0
   146d8:	moveq	r1, #1
   146dc:	moveq	r0, r1
   146e0:	bxeq	lr
   146e4:	vldr	d16, [r1]
   146e8:	vldr	d17, [r0]
   146ec:	mov	r1, #0
   146f0:	vcmpe.f64	d17, d16
   146f4:	vmrs	APSR_nzcv, fpscr
   146f8:	mvnmi	r1, #0
   146fc:	movwgt	r1, #1
   14700:	mov	r0, r1
   14704:	bx	lr
   14708:	cmp	r1, #0
   1470c:	mvnne	r1, #0
   14710:	mov	r0, r1
   14714:	bx	lr

00014718 <table_compare_char@@Base>:
   14718:	cmp	r0, #0
   1471c:	beq	14750 <table_compare_char@@Base+0x38>
   14720:	cmp	r1, #0
   14724:	moveq	r1, #1
   14728:	moveq	r0, r1
   1472c:	bxeq	lr
   14730:	ldrb	r2, [r1]
   14734:	ldrb	r0, [r0]
   14738:	mov	r1, #0
   1473c:	cmp	r0, r2
   14740:	mvncc	r1, #0
   14744:	movwhi	r1, #1
   14748:	mov	r0, r1
   1474c:	bx	lr
   14750:	cmp	r1, #0
   14754:	mvnne	r1, #0
   14758:	mov	r0, r1
   1475c:	bx	lr

00014760 <table_compare_uchar@@Base>:
   14760:	cmp	r0, #0
   14764:	beq	14798 <table_compare_uchar@@Base+0x38>
   14768:	cmp	r1, #0
   1476c:	moveq	r1, #1
   14770:	moveq	r0, r1
   14774:	bxeq	lr
   14778:	ldrb	r2, [r1]
   1477c:	ldrb	r0, [r0]
   14780:	mov	r1, #0
   14784:	cmp	r0, r2
   14788:	mvncc	r1, #0
   1478c:	movwhi	r1, #1
   14790:	mov	r0, r1
   14794:	bx	lr
   14798:	cmp	r1, #0
   1479c:	mvnne	r1, #0
   147a0:	mov	r0, r1
   147a4:	bx	lr

000147a8 <table_compare_string@@Base>:
   147a8:	cmp	r0, #0
   147ac:	beq	147c4 <table_compare_string@@Base+0x1c>
   147b0:	cmp	r1, #0
   147b4:	moveq	r1, #1
   147b8:	moveq	r0, r1
   147bc:	bxeq	lr
   147c0:	b	12f78 <strcmp@plt>
   147c4:	cmp	r1, #0
   147c8:	mvnne	r1, #0
   147cc:	mov	r0, r1
   147d0:	bx	lr

000147d4 <table_compare_ptr@@Base>:
   147d4:	mov	r2, #0
   147d8:	cmp	r0, r1
   147dc:	mvncc	r2, #0
   147e0:	movwhi	r2, #1
   147e4:	mov	r0, r2
   147e8:	bx	lr

000147ec <table_get_default_compare_function_for_data_type@@Base>:
   147ec:	cmp	r0, #23
   147f0:	movhi	r0, #0
   147f4:	movwls	r1, #27184	; 0x6a30
   147f8:	movtls	r1, #1
   147fc:	ldrls	r0, [r1, r0, lsl #2]
   14800:	bx	lr

00014804 <table_subset_find@@Base>:
   14804:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14808:	add	fp, sp, #28
   1480c:	sub	sp, sp, #4
   14810:	mov	r8, r3
   14814:	mov	r9, r2
   14818:	mov	r6, r1
   1481c:	mov	r7, r0
   14820:	bl	140e0 <table_get_column_compare_function@@Base>
   14824:	mov	sl, r0
   14828:	ldr	r4, [fp, #12]
   1482c:	ldr	r5, [fp, #8]
   14830:	cmp	r8, #0
   14834:	beq	1487c <table_subset_find@@Base+0x78>
   14838:	mvn	r8, #0
   1483c:	cmp	r4, r5
   14840:	blt	148cc <table_subset_find@@Base+0xc8>
   14844:	mov	r0, r7
   14848:	mov	r1, r4
   1484c:	mov	r2, r6
   14850:	bl	15414 <table_get@@Base>
   14854:	mov	r1, r0
   14858:	mov	r0, r9
   1485c:	blx	sl
   14860:	cmp	r0, #0
   14864:	beq	148c0 <table_subset_find@@Base+0xbc>
   14868:	sub	r0, r4, #1
   1486c:	cmp	r4, r5
   14870:	mov	r4, r0
   14874:	bgt	14844 <table_subset_find@@Base+0x40>
   14878:	b	148cc <table_subset_find@@Base+0xc8>
   1487c:	mvn	r8, #0
   14880:	cmp	r5, r4
   14884:	bgt	148cc <table_subset_find@@Base+0xc8>
   14888:	mov	r0, r7
   1488c:	mov	r1, r5
   14890:	mov	r2, r6
   14894:	bl	15414 <table_get@@Base>
   14898:	mov	r1, r0
   1489c:	mov	r0, r9
   148a0:	blx	sl
   148a4:	cmp	r0, #0
   148a8:	beq	148c8 <table_subset_find@@Base+0xc4>
   148ac:	add	r0, r5, #1
   148b0:	cmp	r5, r4
   148b4:	mov	r5, r0
   148b8:	blt	14888 <table_subset_find@@Base+0x84>
   148bc:	b	148cc <table_subset_find@@Base+0xc8>
   148c0:	mov	r8, r4
   148c4:	b	148cc <table_subset_find@@Base+0xc8>
   148c8:	mov	r8, r5
   148cc:	mov	r0, r8
   148d0:	sub	sp, fp, #28
   148d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000148d8 <table_find@@Base>:
   148d8:	push	{r4, r5, r6, r7, fp, lr}
   148dc:	add	fp, sp, #16
   148e0:	sub	sp, sp, #8
   148e4:	mov	r4, r3
   148e8:	mov	r5, r2
   148ec:	mov	r6, r1
   148f0:	mov	r7, r0
   148f4:	bl	15680 <table_get_row_length@@Base>
   148f8:	sub	r0, r0, #1
   148fc:	mov	r1, #0
   14900:	str	r1, [sp]
   14904:	str	r0, [sp, #4]
   14908:	mov	r0, r7
   1490c:	mov	r1, r6
   14910:	mov	r2, r5
   14914:	mov	r3, r4
   14918:	bl	14804 <table_subset_find@@Base>
   1491c:	sub	sp, fp, #16
   14920:	pop	{r4, r5, r6, r7, fp, pc}

00014924 <table_find_bool@@Base>:
   14924:	push	{fp, lr}
   14928:	mov	fp, sp
   1492c:	sub	sp, sp, #8
   14930:	strb	r2, [fp, #-1]
   14934:	sub	r2, fp, #1
   14938:	bl	148d8 <table_find@@Base>
   1493c:	mov	sp, fp
   14940:	pop	{fp, pc}

00014944 <table_find_int@@Base>:
   14944:	push	{fp, lr}
   14948:	mov	fp, sp
   1494c:	sub	sp, sp, #8
   14950:	str	r2, [sp, #4]
   14954:	add	r2, sp, #4
   14958:	bl	148d8 <table_find@@Base>
   1495c:	mov	sp, fp
   14960:	pop	{fp, pc}

00014964 <table_find_uint@@Base>:
   14964:	push	{fp, lr}
   14968:	mov	fp, sp
   1496c:	sub	sp, sp, #8
   14970:	str	r2, [sp, #4]
   14974:	add	r2, sp, #4
   14978:	bl	148d8 <table_find@@Base>
   1497c:	mov	sp, fp
   14980:	pop	{fp, pc}

00014984 <table_find_int8@@Base>:
   14984:	push	{fp, lr}
   14988:	mov	fp, sp
   1498c:	sub	sp, sp, #8
   14990:	strb	r2, [fp, #-1]
   14994:	sub	r2, fp, #1
   14998:	bl	148d8 <table_find@@Base>
   1499c:	mov	sp, fp
   149a0:	pop	{fp, pc}

000149a4 <table_find_uint8@@Base>:
   149a4:	push	{fp, lr}
   149a8:	mov	fp, sp
   149ac:	sub	sp, sp, #8
   149b0:	strb	r2, [fp, #-1]
   149b4:	sub	r2, fp, #1
   149b8:	bl	148d8 <table_find@@Base>
   149bc:	mov	sp, fp
   149c0:	pop	{fp, pc}

000149c4 <table_find_int16@@Base>:
   149c4:	push	{fp, lr}
   149c8:	mov	fp, sp
   149cc:	sub	sp, sp, #8
   149d0:	strh	r2, [fp, #-2]
   149d4:	sub	r2, fp, #2
   149d8:	bl	148d8 <table_find@@Base>
   149dc:	mov	sp, fp
   149e0:	pop	{fp, pc}

000149e4 <table_find_uint16@@Base>:
   149e4:	push	{fp, lr}
   149e8:	mov	fp, sp
   149ec:	sub	sp, sp, #8
   149f0:	strh	r2, [fp, #-2]
   149f4:	sub	r2, fp, #2
   149f8:	bl	148d8 <table_find@@Base>
   149fc:	mov	sp, fp
   14a00:	pop	{fp, pc}

00014a04 <table_find_int32@@Base>:
   14a04:	push	{fp, lr}
   14a08:	mov	fp, sp
   14a0c:	sub	sp, sp, #8
   14a10:	str	r2, [sp, #4]
   14a14:	add	r2, sp, #4
   14a18:	bl	148d8 <table_find@@Base>
   14a1c:	mov	sp, fp
   14a20:	pop	{fp, pc}

00014a24 <table_find_uint32@@Base>:
   14a24:	push	{fp, lr}
   14a28:	mov	fp, sp
   14a2c:	sub	sp, sp, #8
   14a30:	str	r2, [sp, #4]
   14a34:	add	r2, sp, #4
   14a38:	bl	148d8 <table_find@@Base>
   14a3c:	mov	sp, fp
   14a40:	pop	{fp, pc}

00014a44 <table_find_int64@@Base>:
   14a44:	push	{fp, lr}
   14a48:	mov	fp, sp
   14a4c:	push	{r2, r3}
   14a50:	ldr	r3, [fp, #8]
   14a54:	mov	r2, sp
   14a58:	bl	148d8 <table_find@@Base>
   14a5c:	mov	sp, fp
   14a60:	pop	{fp, pc}

00014a64 <table_find_uint64@@Base>:
   14a64:	push	{fp, lr}
   14a68:	mov	fp, sp
   14a6c:	push	{r2, r3}
   14a70:	ldr	r3, [fp, #8]
   14a74:	mov	r2, sp
   14a78:	bl	148d8 <table_find@@Base>
   14a7c:	mov	sp, fp
   14a80:	pop	{fp, pc}

00014a84 <table_find_short@@Base>:
   14a84:	push	{fp, lr}
   14a88:	mov	fp, sp
   14a8c:	sub	sp, sp, #8
   14a90:	strh	r2, [fp, #-2]
   14a94:	sub	r2, fp, #2
   14a98:	bl	148d8 <table_find@@Base>
   14a9c:	mov	sp, fp
   14aa0:	pop	{fp, pc}

00014aa4 <table_find_ushort@@Base>:
   14aa4:	push	{fp, lr}
   14aa8:	mov	fp, sp
   14aac:	sub	sp, sp, #8
   14ab0:	strh	r2, [fp, #-2]
   14ab4:	sub	r2, fp, #2
   14ab8:	bl	148d8 <table_find@@Base>
   14abc:	mov	sp, fp
   14ac0:	pop	{fp, pc}

00014ac4 <table_find_long@@Base>:
   14ac4:	push	{fp, lr}
   14ac8:	mov	fp, sp
   14acc:	sub	sp, sp, #8
   14ad0:	str	r2, [sp, #4]
   14ad4:	add	r2, sp, #4
   14ad8:	bl	148d8 <table_find@@Base>
   14adc:	mov	sp, fp
   14ae0:	pop	{fp, pc}

00014ae4 <table_find_ulong@@Base>:
   14ae4:	push	{fp, lr}
   14ae8:	mov	fp, sp
   14aec:	sub	sp, sp, #8
   14af0:	str	r2, [sp, #4]
   14af4:	add	r2, sp, #4
   14af8:	bl	148d8 <table_find@@Base>
   14afc:	mov	sp, fp
   14b00:	pop	{fp, pc}

00014b04 <table_find_llong@@Base>:
   14b04:	push	{fp, lr}
   14b08:	mov	fp, sp
   14b0c:	push	{r2, r3}
   14b10:	ldr	r3, [fp, #8]
   14b14:	mov	r2, sp
   14b18:	bl	148d8 <table_find@@Base>
   14b1c:	mov	sp, fp
   14b20:	pop	{fp, pc}

00014b24 <table_find_ullong@@Base>:
   14b24:	push	{fp, lr}
   14b28:	mov	fp, sp
   14b2c:	push	{r2, r3}
   14b30:	ldr	r3, [fp, #8]
   14b34:	mov	r2, sp
   14b38:	bl	148d8 <table_find@@Base>
   14b3c:	mov	sp, fp
   14b40:	pop	{fp, pc}

00014b44 <table_find_float@@Base>:
   14b44:	push	{fp, lr}
   14b48:	mov	fp, sp
   14b4c:	sub	sp, sp, #8
   14b50:	mov	r3, r2
   14b54:	vstr	s0, [sp, #4]
   14b58:	add	r2, sp, #4
   14b5c:	bl	148d8 <table_find@@Base>
   14b60:	mov	sp, fp
   14b64:	pop	{fp, pc}

00014b68 <table_find_double@@Base>:
   14b68:	push	{fp, lr}
   14b6c:	mov	fp, sp
   14b70:	sub	sp, sp, #8
   14b74:	mov	r3, r2
   14b78:	vstr	d0, [sp]
   14b7c:	mov	r2, sp
   14b80:	bl	148d8 <table_find@@Base>
   14b84:	mov	sp, fp
   14b88:	pop	{fp, pc}

00014b8c <table_find_ldouble@@Base>:
   14b8c:	push	{fp, lr}
   14b90:	mov	fp, sp
   14b94:	sub	sp, sp, #8
   14b98:	mov	r3, r2
   14b9c:	vstr	d0, [sp]
   14ba0:	mov	r2, sp
   14ba4:	bl	148d8 <table_find@@Base>
   14ba8:	mov	sp, fp
   14bac:	pop	{fp, pc}

00014bb0 <table_find_char@@Base>:
   14bb0:	push	{fp, lr}
   14bb4:	mov	fp, sp
   14bb8:	sub	sp, sp, #8
   14bbc:	strb	r2, [fp, #-1]
   14bc0:	sub	r2, fp, #1
   14bc4:	bl	148d8 <table_find@@Base>
   14bc8:	mov	sp, fp
   14bcc:	pop	{fp, pc}

00014bd0 <table_find_uchar@@Base>:
   14bd0:	push	{fp, lr}
   14bd4:	mov	fp, sp
   14bd8:	sub	sp, sp, #8
   14bdc:	strb	r2, [fp, #-1]
   14be0:	sub	r2, fp, #1
   14be4:	bl	148d8 <table_find@@Base>
   14be8:	mov	sp, fp
   14bec:	pop	{fp, pc}

00014bf0 <table_find_string@@Base>:
   14bf0:	push	{fp, lr}
   14bf4:	mov	fp, sp
   14bf8:	sub	sp, sp, #8
   14bfc:	str	r2, [sp, #4]
   14c00:	add	r2, sp, #4
   14c04:	bl	148d8 <table_find@@Base>
   14c08:	mov	sp, fp
   14c0c:	pop	{fp, pc}

00014c10 <table_find_ptr@@Base>:
   14c10:	b	148d8 <table_find@@Base>

00014c14 <table_sorted_find@@Base>:
   14c14:	push	{r4, r5, r6, r7, fp, lr}
   14c18:	add	fp, sp, #16
   14c1c:	sub	sp, sp, #8
   14c20:	mov	r4, r3
   14c24:	mov	r5, r2
   14c28:	mov	r6, r1
   14c2c:	mov	r7, r0
   14c30:	bl	15680 <table_get_row_length@@Base>
   14c34:	sub	r0, r0, #1
   14c38:	mov	r1, #0
   14c3c:	str	r1, [sp]
   14c40:	str	r0, [sp, #4]
   14c44:	mov	r0, r7
   14c48:	mov	r1, r6
   14c4c:	mov	r2, r5
   14c50:	mov	r3, r4
   14c54:	bl	14c60 <table_sorted_subset_find@@Base>
   14c58:	sub	sp, fp, #16
   14c5c:	pop	{r4, r5, r6, r7, fp, pc}

00014c60 <table_sorted_subset_find@@Base>:
   14c60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c64:	add	fp, sp, #28
   14c68:	push	{r3}		; (str r3, [sp, #-4]!)
   14c6c:	mov	r9, r2
   14c70:	mov	sl, r1
   14c74:	mov	r7, r0
   14c78:	ldr	r6, [fp, #12]
   14c7c:	ldr	r8, [fp, #8]
   14c80:	b	14c88 <table_sorted_subset_find@@Base+0x28>
   14c84:	sub	r6, r5, #1
   14c88:	mov	r0, r7
   14c8c:	mov	r1, sl
   14c90:	bl	140e0 <table_get_column_compare_function@@Base>
   14c94:	mov	r4, r0
   14c98:	sub	r0, r6, r8
   14c9c:	add	r0, r0, r0, lsr #31
   14ca0:	add	r5, r8, r0, asr #1
   14ca4:	mov	r0, r7
   14ca8:	mov	r1, r5
   14cac:	mov	r2, sl
   14cb0:	bl	15414 <table_get@@Base>
   14cb4:	mov	r1, r0
   14cb8:	mov	r0, r9
   14cbc:	blx	r4
   14cc0:	cmp	r6, r8
   14cc4:	blt	14d30 <table_sorted_subset_find@@Base+0xd0>
   14cc8:	cmn	r0, #1
   14ccc:	beq	14c84 <table_sorted_subset_find@@Base+0x24>
   14cd0:	cmp	r0, #1
   14cd4:	bne	14ce0 <table_sorted_subset_find@@Base+0x80>
   14cd8:	mov	r8, r5
   14cdc:	b	14c88 <table_sorted_subset_find@@Base+0x28>
   14ce0:	cmp	r0, #0
   14ce4:	bne	14d30 <table_sorted_subset_find@@Base+0xd0>
   14ce8:	ldr	r8, [sp]
   14cec:	add	r6, r5, #1
   14cf0:	cmp	r8, #0
   14cf4:	subeq	r6, r5, #1
   14cf8:	mov	r0, r7
   14cfc:	mov	r1, r6
   14d00:	mov	r2, sl
   14d04:	bl	15414 <table_get@@Base>
   14d08:	mov	r1, r9
   14d0c:	blx	r4
   14d10:	cmp	r0, #0
   14d14:	mov	r5, r6
   14d18:	beq	14cec <table_sorted_subset_find@@Base+0x8c>
   14d1c:	cmp	r8, #0
   14d20:	addeq	r0, r6, #1
   14d24:	subne	r0, r6, #1
   14d28:	sub	sp, fp, #28
   14d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d30:	rsb	r0, r5, #0
   14d34:	sub	sp, fp, #28
   14d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014d3c <table_sorted_find_int@@Base>:
   14d3c:	push	{fp, lr}
   14d40:	mov	fp, sp
   14d44:	sub	sp, sp, #8
   14d48:	str	r2, [sp, #4]
   14d4c:	add	r2, sp, #4
   14d50:	bl	14c14 <table_sorted_find@@Base>
   14d54:	mov	sp, fp
   14d58:	pop	{fp, pc}

00014d5c <table_sorted_find_uint@@Base>:
   14d5c:	push	{fp, lr}
   14d60:	mov	fp, sp
   14d64:	sub	sp, sp, #8
   14d68:	str	r2, [sp, #4]
   14d6c:	add	r2, sp, #4
   14d70:	bl	14c14 <table_sorted_find@@Base>
   14d74:	mov	sp, fp
   14d78:	pop	{fp, pc}

00014d7c <table_sorted_find_int8@@Base>:
   14d7c:	push	{fp, lr}
   14d80:	mov	fp, sp
   14d84:	sub	sp, sp, #8
   14d88:	strb	r2, [fp, #-1]
   14d8c:	sub	r2, fp, #1
   14d90:	bl	14c14 <table_sorted_find@@Base>
   14d94:	mov	sp, fp
   14d98:	pop	{fp, pc}

00014d9c <table_sorted_find_uint8@@Base>:
   14d9c:	push	{fp, lr}
   14da0:	mov	fp, sp
   14da4:	sub	sp, sp, #8
   14da8:	strb	r2, [fp, #-1]
   14dac:	sub	r2, fp, #1
   14db0:	bl	14c14 <table_sorted_find@@Base>
   14db4:	mov	sp, fp
   14db8:	pop	{fp, pc}

00014dbc <table_sorted_find_int16@@Base>:
   14dbc:	push	{fp, lr}
   14dc0:	mov	fp, sp
   14dc4:	sub	sp, sp, #8
   14dc8:	strh	r2, [fp, #-2]
   14dcc:	sub	r2, fp, #2
   14dd0:	bl	14c14 <table_sorted_find@@Base>
   14dd4:	mov	sp, fp
   14dd8:	pop	{fp, pc}

00014ddc <table_sorted_find_uint16@@Base>:
   14ddc:	push	{fp, lr}
   14de0:	mov	fp, sp
   14de4:	sub	sp, sp, #8
   14de8:	strh	r2, [fp, #-2]
   14dec:	sub	r2, fp, #2
   14df0:	bl	14c14 <table_sorted_find@@Base>
   14df4:	mov	sp, fp
   14df8:	pop	{fp, pc}

00014dfc <table_sorted_find_int32@@Base>:
   14dfc:	push	{fp, lr}
   14e00:	mov	fp, sp
   14e04:	sub	sp, sp, #8
   14e08:	str	r2, [sp, #4]
   14e0c:	add	r2, sp, #4
   14e10:	bl	14c14 <table_sorted_find@@Base>
   14e14:	mov	sp, fp
   14e18:	pop	{fp, pc}

00014e1c <table_sorted_find_uint32@@Base>:
   14e1c:	push	{fp, lr}
   14e20:	mov	fp, sp
   14e24:	sub	sp, sp, #8
   14e28:	str	r2, [sp, #4]
   14e2c:	add	r2, sp, #4
   14e30:	bl	14c14 <table_sorted_find@@Base>
   14e34:	mov	sp, fp
   14e38:	pop	{fp, pc}

00014e3c <table_sorted_find_int64@@Base>:
   14e3c:	push	{fp, lr}
   14e40:	mov	fp, sp
   14e44:	push	{r2, r3}
   14e48:	ldr	r3, [fp, #8]
   14e4c:	mov	r2, sp
   14e50:	bl	14c14 <table_sorted_find@@Base>
   14e54:	mov	sp, fp
   14e58:	pop	{fp, pc}

00014e5c <table_sorted_find_uint64@@Base>:
   14e5c:	push	{fp, lr}
   14e60:	mov	fp, sp
   14e64:	push	{r2, r3}
   14e68:	ldr	r3, [fp, #8]
   14e6c:	mov	r2, sp
   14e70:	bl	14c14 <table_sorted_find@@Base>
   14e74:	mov	sp, fp
   14e78:	pop	{fp, pc}

00014e7c <table_sorted_find_short@@Base>:
   14e7c:	push	{fp, lr}
   14e80:	mov	fp, sp
   14e84:	sub	sp, sp, #8
   14e88:	strh	r2, [fp, #-2]
   14e8c:	sub	r2, fp, #2
   14e90:	bl	14c14 <table_sorted_find@@Base>
   14e94:	mov	sp, fp
   14e98:	pop	{fp, pc}

00014e9c <table_sorted_find_ushort@@Base>:
   14e9c:	push	{fp, lr}
   14ea0:	mov	fp, sp
   14ea4:	sub	sp, sp, #8
   14ea8:	strh	r2, [fp, #-2]
   14eac:	sub	r2, fp, #2
   14eb0:	bl	14c14 <table_sorted_find@@Base>
   14eb4:	mov	sp, fp
   14eb8:	pop	{fp, pc}

00014ebc <table_sorted_find_long@@Base>:
   14ebc:	push	{fp, lr}
   14ec0:	mov	fp, sp
   14ec4:	sub	sp, sp, #8
   14ec8:	str	r2, [sp, #4]
   14ecc:	add	r2, sp, #4
   14ed0:	bl	14c14 <table_sorted_find@@Base>
   14ed4:	mov	sp, fp
   14ed8:	pop	{fp, pc}

00014edc <table_sorted_find_ulong@@Base>:
   14edc:	push	{fp, lr}
   14ee0:	mov	fp, sp
   14ee4:	sub	sp, sp, #8
   14ee8:	str	r2, [sp, #4]
   14eec:	add	r2, sp, #4
   14ef0:	bl	14c14 <table_sorted_find@@Base>
   14ef4:	mov	sp, fp
   14ef8:	pop	{fp, pc}

00014efc <table_sorted_find_llong@@Base>:
   14efc:	push	{fp, lr}
   14f00:	mov	fp, sp
   14f04:	push	{r2, r3}
   14f08:	ldr	r3, [fp, #8]
   14f0c:	mov	r2, sp
   14f10:	bl	14c14 <table_sorted_find@@Base>
   14f14:	mov	sp, fp
   14f18:	pop	{fp, pc}

00014f1c <table_sorted_find_ullong@@Base>:
   14f1c:	push	{fp, lr}
   14f20:	mov	fp, sp
   14f24:	push	{r2, r3}
   14f28:	ldr	r3, [fp, #8]
   14f2c:	mov	r2, sp
   14f30:	bl	14c14 <table_sorted_find@@Base>
   14f34:	mov	sp, fp
   14f38:	pop	{fp, pc}

00014f3c <table_sorted_find_float@@Base>:
   14f3c:	push	{fp, lr}
   14f40:	mov	fp, sp
   14f44:	sub	sp, sp, #8
   14f48:	mov	r3, r2
   14f4c:	vstr	s0, [sp, #4]
   14f50:	add	r2, sp, #4
   14f54:	bl	14c14 <table_sorted_find@@Base>
   14f58:	mov	sp, fp
   14f5c:	pop	{fp, pc}

00014f60 <table_sorted_find_double@@Base>:
   14f60:	push	{fp, lr}
   14f64:	mov	fp, sp
   14f68:	sub	sp, sp, #8
   14f6c:	mov	r3, r2
   14f70:	vstr	d0, [sp]
   14f74:	mov	r2, sp
   14f78:	bl	14c14 <table_sorted_find@@Base>
   14f7c:	mov	sp, fp
   14f80:	pop	{fp, pc}

00014f84 <table_sorted_find_ldouble@@Base>:
   14f84:	push	{fp, lr}
   14f88:	mov	fp, sp
   14f8c:	sub	sp, sp, #8
   14f90:	mov	r3, r2
   14f94:	vstr	d0, [sp]
   14f98:	mov	r2, sp
   14f9c:	bl	14c14 <table_sorted_find@@Base>
   14fa0:	mov	sp, fp
   14fa4:	pop	{fp, pc}

00014fa8 <table_sorted_find_char@@Base>:
   14fa8:	push	{fp, lr}
   14fac:	mov	fp, sp
   14fb0:	sub	sp, sp, #8
   14fb4:	strb	r2, [fp, #-1]
   14fb8:	sub	r2, fp, #1
   14fbc:	bl	14c14 <table_sorted_find@@Base>
   14fc0:	mov	sp, fp
   14fc4:	pop	{fp, pc}

00014fc8 <table_sorted_find_uchar@@Base>:
   14fc8:	push	{fp, lr}
   14fcc:	mov	fp, sp
   14fd0:	sub	sp, sp, #8
   14fd4:	strb	r2, [fp, #-1]
   14fd8:	sub	r2, fp, #1
   14fdc:	bl	14c14 <table_sorted_find@@Base>
   14fe0:	mov	sp, fp
   14fe4:	pop	{fp, pc}

00014fe8 <table_sorted_find_string@@Base>:
   14fe8:	b	14c14 <table_sorted_find@@Base>

00014fec <table_sorted_find_ptr@@Base>:
   14fec:	b	14c14 <table_sorted_find@@Base>

00014ff0 <table_sorted_subset_find_int@@Base>:
   14ff0:	push	{fp, lr}
   14ff4:	mov	fp, sp
   14ff8:	sub	sp, sp, #16
   14ffc:	str	r2, [fp, #-4]
   15000:	ldr	r2, [fp, #12]
   15004:	str	r2, [sp, #4]
   15008:	ldr	r2, [fp, #8]
   1500c:	str	r2, [sp]
   15010:	sub	r2, fp, #4
   15014:	bl	14c60 <table_sorted_subset_find@@Base>
   15018:	mov	sp, fp
   1501c:	pop	{fp, pc}

00015020 <table_sorted_subset_find_uint@@Base>:
   15020:	push	{fp, lr}
   15024:	mov	fp, sp
   15028:	sub	sp, sp, #16
   1502c:	str	r2, [fp, #-4]
   15030:	ldr	r2, [fp, #12]
   15034:	str	r2, [sp, #4]
   15038:	ldr	r2, [fp, #8]
   1503c:	str	r2, [sp]
   15040:	sub	r2, fp, #4
   15044:	bl	14c60 <table_sorted_subset_find@@Base>
   15048:	mov	sp, fp
   1504c:	pop	{fp, pc}

00015050 <table_sorted_subset_find_int8@@Base>:
   15050:	push	{fp, lr}
   15054:	mov	fp, sp
   15058:	sub	sp, sp, #16
   1505c:	strb	r2, [fp, #-1]
   15060:	ldr	r2, [fp, #12]
   15064:	str	r2, [sp, #4]
   15068:	ldr	r2, [fp, #8]
   1506c:	str	r2, [sp]
   15070:	sub	r2, fp, #1
   15074:	bl	14c60 <table_sorted_subset_find@@Base>
   15078:	mov	sp, fp
   1507c:	pop	{fp, pc}

00015080 <table_sorted_subset_find_uint8@@Base>:
   15080:	push	{fp, lr}
   15084:	mov	fp, sp
   15088:	sub	sp, sp, #16
   1508c:	strb	r2, [fp, #-1]
   15090:	ldr	r2, [fp, #12]
   15094:	str	r2, [sp, #4]
   15098:	ldr	r2, [fp, #8]
   1509c:	str	r2, [sp]
   150a0:	sub	r2, fp, #1
   150a4:	bl	14c60 <table_sorted_subset_find@@Base>
   150a8:	mov	sp, fp
   150ac:	pop	{fp, pc}

000150b0 <table_sorted_subset_find_int16@@Base>:
   150b0:	push	{fp, lr}
   150b4:	mov	fp, sp
   150b8:	sub	sp, sp, #16
   150bc:	strh	r2, [fp, #-2]
   150c0:	ldr	r2, [fp, #12]
   150c4:	str	r2, [sp, #4]
   150c8:	ldr	r2, [fp, #8]
   150cc:	str	r2, [sp]
   150d0:	sub	r2, fp, #2
   150d4:	bl	14c60 <table_sorted_subset_find@@Base>
   150d8:	mov	sp, fp
   150dc:	pop	{fp, pc}

000150e0 <table_sorted_subset_find_uint16@@Base>:
   150e0:	push	{fp, lr}
   150e4:	mov	fp, sp
   150e8:	sub	sp, sp, #16
   150ec:	strh	r2, [fp, #-2]
   150f0:	ldr	r2, [fp, #12]
   150f4:	str	r2, [sp, #4]
   150f8:	ldr	r2, [fp, #8]
   150fc:	str	r2, [sp]
   15100:	sub	r2, fp, #2
   15104:	bl	14c60 <table_sorted_subset_find@@Base>
   15108:	mov	sp, fp
   1510c:	pop	{fp, pc}

00015110 <table_sorted_subset_find_int32@@Base>:
   15110:	push	{fp, lr}
   15114:	mov	fp, sp
   15118:	sub	sp, sp, #16
   1511c:	str	r2, [fp, #-4]
   15120:	ldr	r2, [fp, #12]
   15124:	str	r2, [sp, #4]
   15128:	ldr	r2, [fp, #8]
   1512c:	str	r2, [sp]
   15130:	sub	r2, fp, #4
   15134:	bl	14c60 <table_sorted_subset_find@@Base>
   15138:	mov	sp, fp
   1513c:	pop	{fp, pc}

00015140 <table_sorted_subset_find_uint32@@Base>:
   15140:	push	{fp, lr}
   15144:	mov	fp, sp
   15148:	sub	sp, sp, #16
   1514c:	str	r2, [fp, #-4]
   15150:	ldr	r2, [fp, #12]
   15154:	str	r2, [sp, #4]
   15158:	ldr	r2, [fp, #8]
   1515c:	str	r2, [sp]
   15160:	sub	r2, fp, #4
   15164:	bl	14c60 <table_sorted_subset_find@@Base>
   15168:	mov	sp, fp
   1516c:	pop	{fp, pc}

00015170 <table_sorted_subset_find_int64@@Base>:
   15170:	push	{fp, lr}
   15174:	mov	fp, sp
   15178:	sub	sp, sp, #16
   1517c:	str	r3, [sp, #12]
   15180:	str	r2, [sp, #8]
   15184:	ldr	r2, [fp, #16]
   15188:	str	r2, [sp, #4]
   1518c:	ldr	r2, [fp, #12]
   15190:	str	r2, [sp]
   15194:	ldr	r3, [fp, #8]
   15198:	add	r2, sp, #8
   1519c:	bl	14c60 <table_sorted_subset_find@@Base>
   151a0:	mov	sp, fp
   151a4:	pop	{fp, pc}

000151a8 <table_sorted_subset_find_uint64@@Base>:
   151a8:	push	{fp, lr}
   151ac:	mov	fp, sp
   151b0:	sub	sp, sp, #16
   151b4:	str	r3, [sp, #12]
   151b8:	str	r2, [sp, #8]
   151bc:	ldr	r2, [fp, #16]
   151c0:	str	r2, [sp, #4]
   151c4:	ldr	r2, [fp, #12]
   151c8:	str	r2, [sp]
   151cc:	ldr	r3, [fp, #8]
   151d0:	add	r2, sp, #8
   151d4:	bl	14c60 <table_sorted_subset_find@@Base>
   151d8:	mov	sp, fp
   151dc:	pop	{fp, pc}

000151e0 <table_sorted_subset_find_short@@Base>:
   151e0:	push	{fp, lr}
   151e4:	mov	fp, sp
   151e8:	sub	sp, sp, #16
   151ec:	strh	r2, [fp, #-2]
   151f0:	ldr	r2, [fp, #12]
   151f4:	str	r2, [sp, #4]
   151f8:	ldr	r2, [fp, #8]
   151fc:	str	r2, [sp]
   15200:	sub	r2, fp, #2
   15204:	bl	14c60 <table_sorted_subset_find@@Base>
   15208:	mov	sp, fp
   1520c:	pop	{fp, pc}

00015210 <table_sorted_subset_find_ushort@@Base>:
   15210:	push	{fp, lr}
   15214:	mov	fp, sp
   15218:	sub	sp, sp, #16
   1521c:	strh	r2, [fp, #-2]
   15220:	ldr	r2, [fp, #12]
   15224:	str	r2, [sp, #4]
   15228:	ldr	r2, [fp, #8]
   1522c:	str	r2, [sp]
   15230:	sub	r2, fp, #2
   15234:	bl	14c60 <table_sorted_subset_find@@Base>
   15238:	mov	sp, fp
   1523c:	pop	{fp, pc}

00015240 <table_sorted_subset_find_long@@Base>:
   15240:	push	{fp, lr}
   15244:	mov	fp, sp
   15248:	sub	sp, sp, #16
   1524c:	str	r2, [fp, #-4]
   15250:	ldr	r2, [fp, #12]
   15254:	str	r2, [sp, #4]
   15258:	ldr	r2, [fp, #8]
   1525c:	str	r2, [sp]
   15260:	sub	r2, fp, #4
   15264:	bl	14c60 <table_sorted_subset_find@@Base>
   15268:	mov	sp, fp
   1526c:	pop	{fp, pc}

00015270 <table_sorted_subset_find_ulong@@Base>:
   15270:	push	{fp, lr}
   15274:	mov	fp, sp
   15278:	sub	sp, sp, #16
   1527c:	str	r2, [fp, #-4]
   15280:	ldr	r2, [fp, #12]
   15284:	str	r2, [sp, #4]
   15288:	ldr	r2, [fp, #8]
   1528c:	str	r2, [sp]
   15290:	sub	r2, fp, #4
   15294:	bl	14c60 <table_sorted_subset_find@@Base>
   15298:	mov	sp, fp
   1529c:	pop	{fp, pc}

000152a0 <table_sorted_subset_find_llong@@Base>:
   152a0:	push	{fp, lr}
   152a4:	mov	fp, sp
   152a8:	sub	sp, sp, #16
   152ac:	str	r3, [sp, #12]
   152b0:	str	r2, [sp, #8]
   152b4:	ldr	r2, [fp, #16]
   152b8:	str	r2, [sp, #4]
   152bc:	ldr	r2, [fp, #12]
   152c0:	str	r2, [sp]
   152c4:	ldr	r3, [fp, #8]
   152c8:	add	r2, sp, #8
   152cc:	bl	14c60 <table_sorted_subset_find@@Base>
   152d0:	mov	sp, fp
   152d4:	pop	{fp, pc}

000152d8 <table_sorted_subset_find_ullong@@Base>:
   152d8:	push	{fp, lr}
   152dc:	mov	fp, sp
   152e0:	sub	sp, sp, #16
   152e4:	str	r3, [sp, #12]
   152e8:	str	r2, [sp, #8]
   152ec:	ldr	r2, [fp, #16]
   152f0:	str	r2, [sp, #4]
   152f4:	ldr	r2, [fp, #12]
   152f8:	str	r2, [sp]
   152fc:	ldr	r3, [fp, #8]
   15300:	add	r2, sp, #8
   15304:	bl	14c60 <table_sorted_subset_find@@Base>
   15308:	mov	sp, fp
   1530c:	pop	{fp, pc}

00015310 <table_sorted_subset_find_float@@Base>:
   15310:	push	{fp, lr}
   15314:	mov	fp, sp
   15318:	sub	sp, sp, #16
   1531c:	mov	ip, r2
   15320:	vstr	s0, [fp, #-4]
   15324:	ldr	r2, [fp, #8]
   15328:	str	r3, [sp]
   1532c:	str	r2, [sp, #4]
   15330:	sub	r2, fp, #4
   15334:	mov	r3, ip
   15338:	bl	14c60 <table_sorted_subset_find@@Base>
   1533c:	mov	sp, fp
   15340:	pop	{fp, pc}

00015344 <table_sorted_subset_find_double@@Base>:
   15344:	push	{fp, lr}
   15348:	mov	fp, sp
   1534c:	sub	sp, sp, #16
   15350:	mov	ip, r2
   15354:	vstr	d0, [sp, #8]
   15358:	ldr	r2, [fp, #8]
   1535c:	str	r3, [sp]
   15360:	str	r2, [sp, #4]
   15364:	add	r2, sp, #8
   15368:	mov	r3, ip
   1536c:	bl	14c60 <table_sorted_subset_find@@Base>
   15370:	mov	sp, fp
   15374:	pop	{fp, pc}

00015378 <table_sorted_subset_find_ldouble@@Base>:
   15378:	push	{fp, lr}
   1537c:	mov	fp, sp
   15380:	sub	sp, sp, #16
   15384:	mov	ip, r2
   15388:	vstr	d0, [sp, #8]
   1538c:	ldr	r2, [fp, #8]
   15390:	str	r3, [sp]
   15394:	str	r2, [sp, #4]
   15398:	add	r2, sp, #8
   1539c:	mov	r3, ip
   153a0:	bl	14c60 <table_sorted_subset_find@@Base>
   153a4:	mov	sp, fp
   153a8:	pop	{fp, pc}

000153ac <table_sorted_subset_find_char@@Base>:
   153ac:	push	{fp, lr}
   153b0:	mov	fp, sp
   153b4:	sub	sp, sp, #16
   153b8:	strb	r2, [fp, #-1]
   153bc:	ldr	r2, [fp, #12]
   153c0:	str	r2, [sp, #4]
   153c4:	ldr	r2, [fp, #8]
   153c8:	str	r2, [sp]
   153cc:	sub	r2, fp, #1
   153d0:	bl	14c60 <table_sorted_subset_find@@Base>
   153d4:	mov	sp, fp
   153d8:	pop	{fp, pc}

000153dc <table_sorted_subset_find_uchar@@Base>:
   153dc:	push	{fp, lr}
   153e0:	mov	fp, sp
   153e4:	sub	sp, sp, #16
   153e8:	strb	r2, [fp, #-1]
   153ec:	ldr	r2, [fp, #12]
   153f0:	str	r2, [sp, #4]
   153f4:	ldr	r2, [fp, #8]
   153f8:	str	r2, [sp]
   153fc:	sub	r2, fp, #1
   15400:	bl	14c60 <table_sorted_subset_find@@Base>
   15404:	mov	sp, fp
   15408:	pop	{fp, pc}

0001540c <table_sorted_subset_find_string@@Base>:
   1540c:	b	14c60 <table_sorted_subset_find@@Base>

00015410 <table_sorted_subset_find_ptr@@Base>:
   15410:	b	14c60 <table_sorted_subset_find@@Base>

00015414 <table_get@@Base>:
   15414:	push	{fp, lr}
   15418:	mov	fp, sp
   1541c:	bl	15eb8 <table_get_cell_ptr@@Base>
   15420:	ldr	r0, [r0]
   15424:	pop	{fp, pc}

00015428 <table_get_bool@@Base>:
   15428:	push	{fp, lr}
   1542c:	mov	fp, sp
   15430:	bl	15414 <table_get@@Base>
   15434:	ldrb	r0, [r0]
   15438:	pop	{fp, pc}

0001543c <table_get_int@@Base>:
   1543c:	push	{fp, lr}
   15440:	mov	fp, sp
   15444:	bl	15414 <table_get@@Base>
   15448:	ldr	r0, [r0]
   1544c:	pop	{fp, pc}

00015450 <table_get_uint@@Base>:
   15450:	push	{fp, lr}
   15454:	mov	fp, sp
   15458:	bl	15414 <table_get@@Base>
   1545c:	ldr	r0, [r0]
   15460:	pop	{fp, pc}

00015464 <table_get_int8@@Base>:
   15464:	push	{fp, lr}
   15468:	mov	fp, sp
   1546c:	bl	15414 <table_get@@Base>
   15470:	ldrsb	r0, [r0]
   15474:	pop	{fp, pc}

00015478 <table_get_uint8@@Base>:
   15478:	push	{fp, lr}
   1547c:	mov	fp, sp
   15480:	bl	15414 <table_get@@Base>
   15484:	ldrb	r0, [r0]
   15488:	pop	{fp, pc}

0001548c <table_get_int16@@Base>:
   1548c:	push	{fp, lr}
   15490:	mov	fp, sp
   15494:	bl	15414 <table_get@@Base>
   15498:	ldrsh	r0, [r0]
   1549c:	pop	{fp, pc}

000154a0 <table_get_uint16@@Base>:
   154a0:	push	{fp, lr}
   154a4:	mov	fp, sp
   154a8:	bl	15414 <table_get@@Base>
   154ac:	ldrh	r0, [r0]
   154b0:	pop	{fp, pc}

000154b4 <table_get_int32@@Base>:
   154b4:	push	{fp, lr}
   154b8:	mov	fp, sp
   154bc:	bl	15414 <table_get@@Base>
   154c0:	ldr	r0, [r0]
   154c4:	pop	{fp, pc}

000154c8 <table_get_uint32@@Base>:
   154c8:	push	{fp, lr}
   154cc:	mov	fp, sp
   154d0:	bl	15414 <table_get@@Base>
   154d4:	ldr	r0, [r0]
   154d8:	pop	{fp, pc}

000154dc <table_get_int64@@Base>:
   154dc:	push	{fp, lr}
   154e0:	mov	fp, sp
   154e4:	bl	15414 <table_get@@Base>
   154e8:	ldrd	r0, [r0]
   154ec:	pop	{fp, pc}

000154f0 <table_get_uint64@@Base>:
   154f0:	push	{fp, lr}
   154f4:	mov	fp, sp
   154f8:	bl	15414 <table_get@@Base>
   154fc:	ldrd	r0, [r0]
   15500:	pop	{fp, pc}

00015504 <table_get_short@@Base>:
   15504:	push	{fp, lr}
   15508:	mov	fp, sp
   1550c:	bl	15414 <table_get@@Base>
   15510:	ldrsh	r0, [r0]
   15514:	pop	{fp, pc}

00015518 <table_get_ushort@@Base>:
   15518:	push	{fp, lr}
   1551c:	mov	fp, sp
   15520:	bl	15414 <table_get@@Base>
   15524:	ldrh	r0, [r0]
   15528:	pop	{fp, pc}

0001552c <table_get_long@@Base>:
   1552c:	push	{fp, lr}
   15530:	mov	fp, sp
   15534:	bl	15414 <table_get@@Base>
   15538:	ldr	r0, [r0]
   1553c:	pop	{fp, pc}

00015540 <table_get_ulong@@Base>:
   15540:	push	{fp, lr}
   15544:	mov	fp, sp
   15548:	bl	15414 <table_get@@Base>
   1554c:	ldr	r0, [r0]
   15550:	pop	{fp, pc}

00015554 <table_get_llong@@Base>:
   15554:	push	{fp, lr}
   15558:	mov	fp, sp
   1555c:	bl	15414 <table_get@@Base>
   15560:	ldrd	r0, [r0]
   15564:	pop	{fp, pc}

00015568 <table_get_ullong@@Base>:
   15568:	push	{fp, lr}
   1556c:	mov	fp, sp
   15570:	bl	15414 <table_get@@Base>
   15574:	ldrd	r0, [r0]
   15578:	pop	{fp, pc}

0001557c <table_get_float@@Base>:
   1557c:	push	{fp, lr}
   15580:	mov	fp, sp
   15584:	bl	15414 <table_get@@Base>
   15588:	vldr	s0, [r0]
   1558c:	pop	{fp, pc}

00015590 <table_get_double@@Base>:
   15590:	push	{fp, lr}
   15594:	mov	fp, sp
   15598:	bl	15414 <table_get@@Base>
   1559c:	vldr	d0, [r0]
   155a0:	pop	{fp, pc}

000155a4 <table_get_ldouble@@Base>:
   155a4:	push	{fp, lr}
   155a8:	mov	fp, sp
   155ac:	bl	15414 <table_get@@Base>
   155b0:	vldr	d0, [r0]
   155b4:	pop	{fp, pc}

000155b8 <table_get_char@@Base>:
   155b8:	push	{fp, lr}
   155bc:	mov	fp, sp
   155c0:	bl	15414 <table_get@@Base>
   155c4:	ldrb	r0, [r0]
   155c8:	pop	{fp, pc}

000155cc <table_get_uchar@@Base>:
   155cc:	push	{fp, lr}
   155d0:	mov	fp, sp
   155d4:	bl	15414 <table_get@@Base>
   155d8:	ldrb	r0, [r0]
   155dc:	pop	{fp, pc}

000155e0 <table_get_string@@Base>:
   155e0:	b	15414 <table_get@@Base>

000155e4 <table_get_ptr@@Base>:
   155e4:	b	15414 <table_get@@Base>

000155e8 <table_row_init@@Base>:
   155e8:	push	{r4, r5, fp, lr}
   155ec:	add	fp, sp, #8
   155f0:	mov	r4, r0
   155f4:	bl	15610 <table_get_row_ptr@@Base>
   155f8:	mov	r5, r0
   155fc:	ldr	r0, [r4, #12]
   15600:	lsl	r0, r0, #2
   15604:	bl	12fb4 <malloc@plt>
   15608:	str	r0, [r5]
   1560c:	pop	{r4, r5, fp, pc}

00015610 <table_get_row_ptr@@Base>:
   15610:	ldr	r0, [r0, #16]
   15614:	add	r0, r0, r1, lsl #2
   15618:	bx	lr

0001561c <table_row_destroy@@Base>:
   1561c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15620:	add	fp, sp, #24
   15624:	mov	r4, r1
   15628:	mov	r5, r0
   1562c:	bl	13d4c <table_get_column_length@@Base>
   15630:	mov	r6, r0
   15634:	mov	r0, r5
   15638:	mov	r1, r4
   1563c:	bl	15610 <table_get_row_ptr@@Base>
   15640:	mov	r8, r0
   15644:	cmp	r6, #1
   15648:	blt	1566c <table_row_destroy@@Base+0x50>
   1564c:	mov	r7, #0
   15650:	mov	r0, r5
   15654:	mov	r1, r4
   15658:	mov	r2, r7
   1565c:	bl	15ed4 <table_cell_destroy@@Base>
   15660:	add	r7, r7, #1
   15664:	cmp	r6, r7
   15668:	bne	15650 <table_row_destroy@@Base+0x34>
   1566c:	ldr	r0, [r8]
   15670:	cmp	r0, #0
   15674:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   15678:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1567c:	b	12f90 <free@plt>

00015680 <table_get_row_length@@Base>:
   15680:	ldr	r0, [r0, #20]
   15684:	bx	lr

00015688 <table_add_row@@Base>:
   15688:	push	{r4, sl, fp, lr}
   1568c:	add	fp, sp, #8
   15690:	mov	r4, r0
   15694:	bl	15680 <table_get_row_length@@Base>
   15698:	ldr	r1, [r4, #24]
   1569c:	udiv	r2, r0, r1
   156a0:	mls	r0, r2, r1, r0
   156a4:	cmp	r0, #0
   156a8:	bne	156b4 <table_add_row@@Base+0x2c>
   156ac:	mov	r0, r4
   156b0:	bl	156e8 <table_add_row@@Base+0x60>
   156b4:	mov	r0, r4
   156b8:	bl	15718 <table_add_row@@Base+0x90>
   156bc:	mov	r0, r4
   156c0:	bl	15680 <table_get_row_length@@Base>
   156c4:	mov	r1, r0
   156c8:	mov	r0, r4
   156cc:	mvn	r2, #0
   156d0:	mov	r3, #2
   156d4:	bl	13c58 <table_notify@@Base>
   156d8:	ldr	r0, [r4, #20]
   156dc:	add	r1, r0, #1
   156e0:	str	r1, [r4, #20]
   156e4:	pop	{r4, sl, fp, pc}
   156e8:	push	{r4, sl, fp, lr}
   156ec:	add	fp, sp, #8
   156f0:	mov	r4, r0
   156f4:	ldr	r0, [r0, #16]
   156f8:	ldr	r1, [r4, #24]
   156fc:	ldr	r2, [r4, #28]
   15700:	add	r1, r2, r1
   15704:	str	r1, [r4, #28]
   15708:	lsl	r1, r1, #2
   1570c:	bl	12f9c <realloc@plt>
   15710:	str	r0, [r4, #16]
   15714:	pop	{r4, sl, fp, pc}
   15718:	push	{r4, r5, r6, r7, fp, lr}
   1571c:	add	fp, sp, #16
   15720:	mov	r4, r0
   15724:	bl	15680 <table_get_row_length@@Base>
   15728:	mov	r5, r0
   1572c:	mov	r0, r4
   15730:	bl	13d4c <table_get_column_length@@Base>
   15734:	mov	r6, r0
   15738:	mov	r0, r4
   1573c:	mov	r1, r5
   15740:	bl	155e8 <table_row_init@@Base>
   15744:	cmp	r6, #1
   15748:	poplt	{r4, r5, r6, r7, fp, pc}
   1574c:	mov	r7, #0
   15750:	mov	r0, r4
   15754:	mov	r1, r5
   15758:	mov	r2, r7
   1575c:	bl	15ea0 <table_cell_init@@Base>
   15760:	add	r7, r7, #1
   15764:	cmp	r6, r7
   15768:	bne	15750 <table_add_row@@Base+0xc8>
   1576c:	pop	{r4, r5, r6, r7, fp, pc}

00015770 <table_remove_row@@Base>:
   15770:	push	{r4, r5, fp, lr}
   15774:	add	fp, sp, #8
   15778:	mov	r4, r1
   1577c:	mov	r5, r0
   15780:	bl	157d0 <table_remove_row@@Base+0x60>
   15784:	ldr	r0, [r5, #20]
   15788:	sub	r0, r0, #1
   1578c:	str	r0, [r5, #20]
   15790:	mov	r0, r5
   15794:	bl	15680 <table_get_row_length@@Base>
   15798:	ldr	r1, [r5, #24]
   1579c:	udiv	r2, r0, r1
   157a0:	mls	r0, r2, r1, r0
   157a4:	cmp	r0, #0
   157a8:	bne	157b4 <table_remove_row@@Base+0x44>
   157ac:	mov	r0, r5
   157b0:	bl	15888 <table_remove_row@@Base+0x118>
   157b4:	mov	r0, r5
   157b8:	mov	r1, r4
   157bc:	mvn	r2, #0
   157c0:	mov	r3, #4
   157c4:	bl	13c58 <table_notify@@Base>
   157c8:	mov	r0, #0
   157cc:	pop	{r4, r5, fp, pc}
   157d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   157d4:	add	fp, sp, #24
   157d8:	mov	r4, r1
   157dc:	mov	r5, r0
   157e0:	bl	15680 <table_get_row_length@@Base>
   157e4:	mov	r8, r0
   157e8:	mov	r0, r5
   157ec:	bl	13d4c <table_get_column_length@@Base>
   157f0:	cmp	r0, #1
   157f4:	blt	15840 <table_remove_row@@Base+0xd0>
   157f8:	mov	r7, r0
   157fc:	mov	r6, #0
   15800:	mov	r0, r5
   15804:	mov	r1, r6
   15808:	bl	13dc4 <table_get_column_data_type@@Base>
   1580c:	cmp	r0, #23
   15810:	beq	15834 <table_remove_row@@Base+0xc4>
   15814:	mov	r0, r5
   15818:	mov	r1, r4
   1581c:	mov	r2, r6
   15820:	bl	15eb8 <table_get_cell_ptr@@Base>
   15824:	ldr	r0, [r0]
   15828:	cmp	r0, #0
   1582c:	beq	15834 <table_remove_row@@Base+0xc4>
   15830:	bl	12f90 <free@plt>
   15834:	add	r6, r6, #1
   15838:	cmp	r7, r6
   1583c:	bne	15800 <table_remove_row@@Base+0x90>
   15840:	mov	r0, r5
   15844:	mov	r1, r4
   15848:	bl	15610 <table_get_row_ptr@@Base>
   1584c:	ldr	r0, [r0]
   15850:	cmp	r0, #0
   15854:	beq	1585c <table_remove_row@@Base+0xec>
   15858:	bl	12f90 <free@plt>
   1585c:	sub	r0, r8, #1
   15860:	cmp	r0, r4
   15864:	pople	{r4, r5, r6, r7, r8, sl, fp, pc}
   15868:	ldr	r1, [r5, #16]
   1586c:	add	r2, r1, r4, lsl #2
   15870:	ldr	r2, [r2, #4]
   15874:	str	r2, [r1, r4, lsl #2]
   15878:	add	r4, r4, #1
   1587c:	cmp	r0, r4
   15880:	bne	15868 <table_remove_row@@Base+0xf8>
   15884:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15888:	push	{r4, sl, fp, lr}
   1588c:	add	fp, sp, #8
   15890:	mov	r4, r0
   15894:	ldr	r0, [r0, #16]
   15898:	ldr	r1, [r4, #24]
   1589c:	ldr	r2, [r4, #28]
   158a0:	sub	r1, r2, r1
   158a4:	str	r1, [r4, #28]
   158a8:	lsl	r1, r1, #2
   158ac:	bl	12f9c <realloc@plt>
   158b0:	str	r0, [r4, #16]
   158b4:	pop	{r4, sl, fp, pc}

000158b8 <table_set_row_ptr@@Base>:
   158b8:	ldr	r2, [r2]
   158bc:	ldr	r0, [r0, #16]
   158c0:	str	r2, [r0, r1, lsl #2]
   158c4:	bx	lr

000158c8 <table_set@@Base>:
   158c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   158cc:	add	fp, sp, #24
   158d0:	mov	r8, r3
   158d4:	mov	r4, r2
   158d8:	mov	r9, r1
   158dc:	mov	r6, r0
   158e0:	bl	15eb8 <table_get_cell_ptr@@Base>
   158e4:	mov	r5, r0
   158e8:	mov	r0, r6
   158ec:	mov	r1, r4
   158f0:	bl	13d1c <table_get_col_ptr@@Base>
   158f4:	mvn	r7, #0
   158f8:	ldr	r1, [fp, #8]
   158fc:	cmp	r1, #23
   15900:	bhi	15ab8 <table_set@@Base+0x1f0>
   15904:	add	r2, pc, #0
   15908:	ldr	pc, [r2, r1, lsl #2]
   1590c:	andeq	r5, r1, ip, ror #18
   15910:	andeq	r5, r1, ip, ror #18
   15914:	andeq	r5, r1, r4, ror #19
   15918:	andeq	r5, r1, r4, ror #19
   1591c:	andeq	r5, r1, ip, lsl sl
   15920:	andeq	r5, r1, ip, lsl sl
   15924:	andeq	r5, r1, ip, ror #18
   15928:	andeq	r5, r1, ip, ror #18
   1592c:	andeq	r5, r1, r4, lsr #19
   15930:	andeq	r5, r1, r4, lsr #19
   15934:	andeq	r5, r1, ip, lsl sl
   15938:	andeq	r5, r1, ip, lsl sl
   1593c:	andeq	r5, r1, ip, ror #18
   15940:	andeq	r5, r1, ip, ror #18
   15944:	andeq	r5, r1, r4, lsr #19
   15948:	andeq	r5, r1, r4, lsr #19
   1594c:	andeq	r5, r1, ip, ror #18
   15950:	andeq	r5, r1, r4, lsr #19
   15954:	andeq	r5, r1, r4, lsr #19
   15958:	andeq	r5, r1, r4, ror #19
   1595c:	andeq	r5, r1, r4, ror #19
   15960:	andeq	r5, r1, r4, asr sl
   15964:	andeq	r5, r1, r4, ror #19
   15968:	muleq	r1, r0, sl
   1596c:	ldr	r0, [r0, #4]
   15970:	cmp	r0, r1
   15974:	bne	15ab8 <table_set@@Base+0x1f0>
   15978:	ldr	r0, [r5]
   1597c:	cmp	r0, #0
   15980:	bne	15998 <table_set@@Base+0xd0>
   15984:	mov	r0, #4
   15988:	bl	12fb4 <malloc@plt>
   1598c:	str	r0, [r5]
   15990:	cmp	r0, #0
   15994:	beq	15ab8 <table_set@@Base+0x1f0>
   15998:	ldr	r1, [r8]
   1599c:	str	r1, [r0]
   159a0:	b	15aa0 <table_set@@Base+0x1d8>
   159a4:	ldr	r0, [r0, #4]
   159a8:	cmp	r0, r1
   159ac:	bne	15ab8 <table_set@@Base+0x1f0>
   159b0:	ldr	r0, [r5]
   159b4:	cmp	r0, #0
   159b8:	bne	159d0 <table_set@@Base+0x108>
   159bc:	mov	r0, #8
   159c0:	bl	12fb4 <malloc@plt>
   159c4:	str	r0, [r5]
   159c8:	cmp	r0, #0
   159cc:	beq	15ab8 <table_set@@Base+0x1f0>
   159d0:	ldr	r1, [r8]
   159d4:	ldr	r2, [r8, #4]
   159d8:	str	r2, [r0, #4]
   159dc:	str	r1, [r0]
   159e0:	b	15aa0 <table_set@@Base+0x1d8>
   159e4:	ldr	r0, [r0, #4]
   159e8:	cmp	r0, r1
   159ec:	bne	15ab8 <table_set@@Base+0x1f0>
   159f0:	ldr	r0, [r5]
   159f4:	cmp	r0, #0
   159f8:	bne	15a10 <table_set@@Base+0x148>
   159fc:	mov	r0, #1
   15a00:	bl	12fb4 <malloc@plt>
   15a04:	str	r0, [r5]
   15a08:	cmp	r0, #0
   15a0c:	beq	15ab8 <table_set@@Base+0x1f0>
   15a10:	ldrb	r1, [r8]
   15a14:	strb	r1, [r0]
   15a18:	b	15aa0 <table_set@@Base+0x1d8>
   15a1c:	ldr	r0, [r0, #4]
   15a20:	cmp	r0, r1
   15a24:	bne	15ab8 <table_set@@Base+0x1f0>
   15a28:	ldr	r0, [r5]
   15a2c:	cmp	r0, #0
   15a30:	bne	15a48 <table_set@@Base+0x180>
   15a34:	mov	r0, #2
   15a38:	bl	12fb4 <malloc@plt>
   15a3c:	str	r0, [r5]
   15a40:	cmp	r0, #0
   15a44:	beq	15ab8 <table_set@@Base+0x1f0>
   15a48:	ldrh	r1, [r8]
   15a4c:	strh	r1, [r0]
   15a50:	b	15aa0 <table_set@@Base+0x1d8>
   15a54:	ldr	r0, [r0, #4]
   15a58:	cmp	r0, r1
   15a5c:	bne	15ab8 <table_set@@Base+0x1f0>
   15a60:	mov	r0, r8
   15a64:	bl	12fd8 <strlen@plt>
   15a68:	ldr	r2, [r5]
   15a6c:	add	r1, r0, #1
   15a70:	mov	r0, r2
   15a74:	bl	12f9c <realloc@plt>
   15a78:	str	r0, [r5]
   15a7c:	cmp	r0, #0
   15a80:	beq	15ab8 <table_set@@Base+0x1f0>
   15a84:	mov	r1, r8
   15a88:	bl	12fa8 <strcpy@plt>
   15a8c:	b	15aa0 <table_set@@Base+0x1d8>
   15a90:	ldr	r0, [r0, #4]
   15a94:	cmp	r0, r1
   15a98:	bne	15ab8 <table_set@@Base+0x1f0>
   15a9c:	str	r8, [r5]
   15aa0:	mov	r0, r6
   15aa4:	mov	r1, r9
   15aa8:	mov	r2, r4
   15aac:	mov	r3, #1
   15ab0:	bl	13c58 <table_notify@@Base>
   15ab4:	mov	r7, #0
   15ab8:	mov	r0, r7
   15abc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015ac0 <table_set_bool@@Base>:
   15ac0:	push	{fp, lr}
   15ac4:	mov	fp, sp
   15ac8:	sub	sp, sp, #8
   15acc:	strb	r3, [fp, #-1]
   15ad0:	mov	r3, #22
   15ad4:	str	r3, [sp]
   15ad8:	sub	r3, fp, #1
   15adc:	bl	158c8 <table_set@@Base>
   15ae0:	mov	sp, fp
   15ae4:	pop	{fp, pc}

00015ae8 <table_set_int@@Base>:
   15ae8:	push	{fp, lr}
   15aec:	mov	fp, sp
   15af0:	sub	sp, sp, #8
   15af4:	str	r3, [sp, #4]
   15af8:	mov	r3, #0
   15afc:	str	r3, [sp]
   15b00:	add	r3, sp, #4
   15b04:	bl	158c8 <table_set@@Base>
   15b08:	mov	sp, fp
   15b0c:	pop	{fp, pc}

00015b10 <table_set_uint@@Base>:
   15b10:	push	{fp, lr}
   15b14:	mov	fp, sp
   15b18:	sub	sp, sp, #8
   15b1c:	str	r3, [sp, #4]
   15b20:	mov	r3, #1
   15b24:	str	r3, [sp]
   15b28:	add	r3, sp, #4
   15b2c:	bl	158c8 <table_set@@Base>
   15b30:	mov	sp, fp
   15b34:	pop	{fp, pc}

00015b38 <table_set_int8@@Base>:
   15b38:	push	{fp, lr}
   15b3c:	mov	fp, sp
   15b40:	sub	sp, sp, #8
   15b44:	strb	r3, [fp, #-1]
   15b48:	mov	r3, #2
   15b4c:	str	r3, [sp]
   15b50:	sub	r3, fp, #1
   15b54:	bl	158c8 <table_set@@Base>
   15b58:	mov	sp, fp
   15b5c:	pop	{fp, pc}

00015b60 <table_set_uint8@@Base>:
   15b60:	push	{fp, lr}
   15b64:	mov	fp, sp
   15b68:	sub	sp, sp, #8
   15b6c:	strb	r3, [fp, #-1]
   15b70:	mov	r3, #3
   15b74:	str	r3, [sp]
   15b78:	sub	r3, fp, #1
   15b7c:	bl	158c8 <table_set@@Base>
   15b80:	mov	sp, fp
   15b84:	pop	{fp, pc}

00015b88 <table_set_int16@@Base>:
   15b88:	push	{fp, lr}
   15b8c:	mov	fp, sp
   15b90:	sub	sp, sp, #8
   15b94:	strh	r3, [fp, #-2]
   15b98:	mov	r3, #4
   15b9c:	str	r3, [sp]
   15ba0:	sub	r3, fp, #2
   15ba4:	bl	158c8 <table_set@@Base>
   15ba8:	mov	sp, fp
   15bac:	pop	{fp, pc}

00015bb0 <table_set_uint16@@Base>:
   15bb0:	push	{fp, lr}
   15bb4:	mov	fp, sp
   15bb8:	sub	sp, sp, #8
   15bbc:	strh	r3, [fp, #-2]
   15bc0:	mov	r3, #5
   15bc4:	str	r3, [sp]
   15bc8:	sub	r3, fp, #2
   15bcc:	bl	158c8 <table_set@@Base>
   15bd0:	mov	sp, fp
   15bd4:	pop	{fp, pc}

00015bd8 <table_set_int32@@Base>:
   15bd8:	push	{fp, lr}
   15bdc:	mov	fp, sp
   15be0:	sub	sp, sp, #8
   15be4:	str	r3, [sp, #4]
   15be8:	mov	r3, #6
   15bec:	str	r3, [sp]
   15bf0:	add	r3, sp, #4
   15bf4:	bl	158c8 <table_set@@Base>
   15bf8:	mov	sp, fp
   15bfc:	pop	{fp, pc}

00015c00 <table_set_uint32@@Base>:
   15c00:	push	{fp, lr}
   15c04:	mov	fp, sp
   15c08:	sub	sp, sp, #8
   15c0c:	str	r3, [sp, #4]
   15c10:	mov	r3, #7
   15c14:	str	r3, [sp]
   15c18:	add	r3, sp, #4
   15c1c:	bl	158c8 <table_set@@Base>
   15c20:	mov	sp, fp
   15c24:	pop	{fp, pc}

00015c28 <table_set_int64@@Base>:
   15c28:	push	{fp, lr}
   15c2c:	mov	fp, sp
   15c30:	sub	sp, sp, #16
   15c34:	ldr	r3, [fp, #12]
   15c38:	str	r3, [sp, #12]
   15c3c:	ldr	r3, [fp, #8]
   15c40:	str	r3, [sp, #8]
   15c44:	mov	r3, #8
   15c48:	str	r3, [sp]
   15c4c:	add	r3, sp, #8
   15c50:	bl	158c8 <table_set@@Base>
   15c54:	mov	sp, fp
   15c58:	pop	{fp, pc}

00015c5c <table_set_uint64@@Base>:
   15c5c:	push	{fp, lr}
   15c60:	mov	fp, sp
   15c64:	sub	sp, sp, #16
   15c68:	ldr	r3, [fp, #12]
   15c6c:	str	r3, [sp, #12]
   15c70:	ldr	r3, [fp, #8]
   15c74:	str	r3, [sp, #8]
   15c78:	mov	r3, #9
   15c7c:	str	r3, [sp]
   15c80:	add	r3, sp, #8
   15c84:	bl	158c8 <table_set@@Base>
   15c88:	mov	sp, fp
   15c8c:	pop	{fp, pc}

00015c90 <table_set_short@@Base>:
   15c90:	push	{fp, lr}
   15c94:	mov	fp, sp
   15c98:	sub	sp, sp, #8
   15c9c:	strh	r3, [fp, #-2]
   15ca0:	mov	r3, #10
   15ca4:	str	r3, [sp]
   15ca8:	sub	r3, fp, #2
   15cac:	bl	158c8 <table_set@@Base>
   15cb0:	mov	sp, fp
   15cb4:	pop	{fp, pc}

00015cb8 <table_set_ushort@@Base>:
   15cb8:	push	{fp, lr}
   15cbc:	mov	fp, sp
   15cc0:	sub	sp, sp, #8
   15cc4:	strh	r3, [fp, #-2]
   15cc8:	mov	r3, #11
   15ccc:	str	r3, [sp]
   15cd0:	sub	r3, fp, #2
   15cd4:	bl	158c8 <table_set@@Base>
   15cd8:	mov	sp, fp
   15cdc:	pop	{fp, pc}

00015ce0 <table_set_long@@Base>:
   15ce0:	push	{fp, lr}
   15ce4:	mov	fp, sp
   15ce8:	sub	sp, sp, #8
   15cec:	str	r3, [sp, #4]
   15cf0:	mov	r3, #12
   15cf4:	str	r3, [sp]
   15cf8:	add	r3, sp, #4
   15cfc:	bl	158c8 <table_set@@Base>
   15d00:	mov	sp, fp
   15d04:	pop	{fp, pc}

00015d08 <table_set_ulong@@Base>:
   15d08:	push	{fp, lr}
   15d0c:	mov	fp, sp
   15d10:	sub	sp, sp, #8
   15d14:	str	r3, [sp, #4]
   15d18:	mov	r3, #13
   15d1c:	str	r3, [sp]
   15d20:	add	r3, sp, #4
   15d24:	bl	158c8 <table_set@@Base>
   15d28:	mov	sp, fp
   15d2c:	pop	{fp, pc}

00015d30 <table_set_llong@@Base>:
   15d30:	push	{fp, lr}
   15d34:	mov	fp, sp
   15d38:	sub	sp, sp, #16
   15d3c:	ldr	r3, [fp, #12]
   15d40:	str	r3, [sp, #12]
   15d44:	ldr	r3, [fp, #8]
   15d48:	str	r3, [sp, #8]
   15d4c:	mov	r3, #14
   15d50:	str	r3, [sp]
   15d54:	add	r3, sp, #8
   15d58:	bl	158c8 <table_set@@Base>
   15d5c:	mov	sp, fp
   15d60:	pop	{fp, pc}

00015d64 <table_set_ullong@@Base>:
   15d64:	push	{fp, lr}
   15d68:	mov	fp, sp
   15d6c:	sub	sp, sp, #16
   15d70:	ldr	r3, [fp, #12]
   15d74:	str	r3, [sp, #12]
   15d78:	ldr	r3, [fp, #8]
   15d7c:	str	r3, [sp, #8]
   15d80:	mov	r3, #15
   15d84:	str	r3, [sp]
   15d88:	add	r3, sp, #8
   15d8c:	bl	158c8 <table_set@@Base>
   15d90:	mov	sp, fp
   15d94:	pop	{fp, pc}

00015d98 <table_set_float@@Base>:
   15d98:	push	{fp, lr}
   15d9c:	mov	fp, sp
   15da0:	sub	sp, sp, #8
   15da4:	vstr	s0, [sp, #4]
   15da8:	mov	r3, #16
   15dac:	str	r3, [sp]
   15db0:	add	r3, sp, #4
   15db4:	bl	158c8 <table_set@@Base>
   15db8:	mov	sp, fp
   15dbc:	pop	{fp, pc}

00015dc0 <table_set_double@@Base>:
   15dc0:	push	{fp, lr}
   15dc4:	mov	fp, sp
   15dc8:	sub	sp, sp, #16
   15dcc:	vstr	d0, [sp, #8]
   15dd0:	mov	r3, #17
   15dd4:	str	r3, [sp]
   15dd8:	add	r3, sp, #8
   15ddc:	bl	158c8 <table_set@@Base>
   15de0:	mov	sp, fp
   15de4:	pop	{fp, pc}

00015de8 <table_set_ldouble@@Base>:
   15de8:	push	{fp, lr}
   15dec:	mov	fp, sp
   15df0:	sub	sp, sp, #16
   15df4:	vstr	d0, [sp, #8]
   15df8:	mov	r3, #18
   15dfc:	str	r3, [sp]
   15e00:	add	r3, sp, #8
   15e04:	bl	158c8 <table_set@@Base>
   15e08:	mov	sp, fp
   15e0c:	pop	{fp, pc}

00015e10 <table_set_string@@Base>:
   15e10:	push	{fp, lr}
   15e14:	mov	fp, sp
   15e18:	sub	sp, sp, #8
   15e1c:	mov	ip, #21
   15e20:	str	ip, [sp]
   15e24:	bl	158c8 <table_set@@Base>
   15e28:	mov	sp, fp
   15e2c:	pop	{fp, pc}

00015e30 <table_set_char@@Base>:
   15e30:	push	{fp, lr}
   15e34:	mov	fp, sp
   15e38:	sub	sp, sp, #8
   15e3c:	strb	r3, [fp, #-1]
   15e40:	mov	r3, #19
   15e44:	str	r3, [sp]
   15e48:	sub	r3, fp, #1
   15e4c:	bl	158c8 <table_set@@Base>
   15e50:	mov	sp, fp
   15e54:	pop	{fp, pc}

00015e58 <table_set_uchar@@Base>:
   15e58:	push	{fp, lr}
   15e5c:	mov	fp, sp
   15e60:	sub	sp, sp, #8
   15e64:	strb	r3, [fp, #-1]
   15e68:	mov	r3, #20
   15e6c:	str	r3, [sp]
   15e70:	sub	r3, fp, #1
   15e74:	bl	158c8 <table_set@@Base>
   15e78:	mov	sp, fp
   15e7c:	pop	{fp, pc}

00015e80 <table_set_ptr@@Base>:
   15e80:	push	{fp, lr}
   15e84:	mov	fp, sp
   15e88:	sub	sp, sp, #8
   15e8c:	mov	ip, #23
   15e90:	str	ip, [sp]
   15e94:	bl	158c8 <table_set@@Base>
   15e98:	mov	sp, fp
   15e9c:	pop	{fp, pc}

00015ea0 <table_cell_init@@Base>:
   15ea0:	push	{fp, lr}
   15ea4:	mov	fp, sp
   15ea8:	bl	15eb8 <table_get_cell_ptr@@Base>
   15eac:	mov	r1, #0
   15eb0:	str	r1, [r0]
   15eb4:	pop	{fp, pc}

00015eb8 <table_get_cell_ptr@@Base>:
   15eb8:	push	{r4, sl, fp, lr}
   15ebc:	add	fp, sp, #8
   15ec0:	mov	r4, r2
   15ec4:	bl	15610 <table_get_row_ptr@@Base>
   15ec8:	ldr	r0, [r0]
   15ecc:	add	r0, r0, r4, lsl #2
   15ed0:	pop	{r4, sl, fp, pc}

00015ed4 <table_cell_destroy@@Base>:
   15ed4:	push	{r4, r5, r6, sl, fp, lr}
   15ed8:	add	fp, sp, #16
   15edc:	mov	r4, r2
   15ee0:	mov	r5, r1
   15ee4:	mov	r6, r0
   15ee8:	mov	r1, r2
   15eec:	bl	13dc4 <table_get_column_data_type@@Base>
   15ef0:	cmp	r0, #23
   15ef4:	popeq	{r4, r5, r6, sl, fp, pc}
   15ef8:	mov	r0, r6
   15efc:	mov	r1, r5
   15f00:	mov	r2, r4
   15f04:	bl	15eb8 <table_get_cell_ptr@@Base>
   15f08:	ldr	r0, [r0]
   15f0c:	cmp	r0, #0
   15f10:	beq	15f1c <table_cell_destroy@@Base+0x48>
   15f14:	pop	{r4, r5, r6, sl, fp, lr}
   15f18:	b	12f90 <free@plt>
   15f1c:	pop	{r4, r5, r6, sl, fp, pc}

00015f20 <table_cell_to_buffer@@Base>:
   15f20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15f24:	add	fp, sp, #24
   15f28:	sub	sp, sp, #8
   15f2c:	mov	r5, r3
   15f30:	mov	r6, r2
   15f34:	mov	r7, r1
   15f38:	mov	r4, r0
   15f3c:	mov	r1, r2
   15f40:	bl	13dc4 <table_get_column_data_type@@Base>
   15f44:	cmp	r0, #23
   15f48:	bhi	16238 <table_cell_to_buffer@@Base+0x318>
   15f4c:	ldr	r8, [fp, #8]
   15f50:	add	r1, pc, #0
   15f54:	ldr	pc, [r1, r0, lsl #2]
   15f58:			; <UNDEFINED> instruction: 0x00015fb8
   15f5c:	andeq	r5, r1, ip, asr #31
   15f60:	andeq	r5, r1, r0, ror #31
   15f64:	strdeq	r5, [r1], -r4
   15f68:	andeq	r6, r1, r8
   15f6c:	andeq	r6, r1, ip, lsl r0
   15f70:	andeq	r6, r1, r0, lsr r0
   15f74:	andeq	r6, r1, r4, asr #32
   15f78:	andeq	r6, r1, r4, rrx
   15f7c:	andeq	r6, r1, r8, ror r0
   15f80:	andeq	r6, r1, ip, lsl #1
   15f84:	andeq	r6, r1, ip, lsr #1
   15f88:	andeq	r6, r1, ip, asr #1
   15f8c:	andeq	r6, r1, ip, ror #1
   15f90:	andeq	r6, r1, ip, lsl #2
   15f94:	andeq	r6, r1, ip, lsr #2
   15f98:	andeq	r6, r1, ip, asr #2
   15f9c:	andeq	r6, r1, r0, ror r1
   15fa0:	muleq	r1, r0, r1
   15fa4:			; <UNDEFINED> instruction: 0x000161bc
   15fa8:	ldrdeq	r6, [r1], -r0
   15fac:	strdeq	r6, [r1], -r0
   15fb0:	andeq	r6, r1, r0, lsl r2
   15fb4:	andeq	r6, r1, r4, asr #4
   15fb8:	mov	r0, r4
   15fbc:	mov	r1, r7
   15fc0:	mov	r2, r6
   15fc4:	bl	1543c <table_get_int@@Base>
   15fc8:	b	16220 <table_cell_to_buffer@@Base+0x300>
   15fcc:	mov	r0, r4
   15fd0:	mov	r1, r7
   15fd4:	mov	r2, r6
   15fd8:	bl	15450 <table_get_uint@@Base>
   15fdc:	b	16054 <table_cell_to_buffer@@Base+0x134>
   15fe0:	mov	r0, r4
   15fe4:	mov	r1, r7
   15fe8:	mov	r2, r6
   15fec:	bl	15464 <table_get_int8@@Base>
   15ff0:	b	16220 <table_cell_to_buffer@@Base+0x300>
   15ff4:	mov	r0, r4
   15ff8:	mov	r1, r7
   15ffc:	mov	r2, r6
   16000:	bl	15478 <table_get_uint8@@Base>
   16004:	b	16054 <table_cell_to_buffer@@Base+0x134>
   16008:	mov	r0, r4
   1600c:	mov	r1, r7
   16010:	mov	r2, r6
   16014:	bl	1548c <table_get_int16@@Base>
   16018:	b	16220 <table_cell_to_buffer@@Base+0x300>
   1601c:	mov	r0, r4
   16020:	mov	r1, r7
   16024:	mov	r2, r6
   16028:	bl	154a0 <table_get_uint16@@Base>
   1602c:	b	16054 <table_cell_to_buffer@@Base+0x134>
   16030:	mov	r0, r4
   16034:	mov	r1, r7
   16038:	mov	r2, r6
   1603c:	bl	154b4 <table_get_int32@@Base>
   16040:	b	16220 <table_cell_to_buffer@@Base+0x300>
   16044:	mov	r0, r4
   16048:	mov	r1, r7
   1604c:	mov	r2, r6
   16050:	bl	154c8 <table_get_uint32@@Base>
   16054:	mov	r3, r0
   16058:	movw	r2, #27280	; 0x6a90
   1605c:	movt	r2, #1
   16060:	b	1622c <table_cell_to_buffer@@Base+0x30c>
   16064:	mov	r0, r4
   16068:	mov	r1, r7
   1606c:	mov	r2, r6
   16070:	bl	154dc <table_get_int64@@Base>
   16074:	b	1611c <table_cell_to_buffer@@Base+0x1fc>
   16078:	mov	r0, r4
   1607c:	mov	r1, r7
   16080:	mov	r2, r6
   16084:	bl	154f0 <table_get_uint64@@Base>
   16088:	b	1613c <table_cell_to_buffer@@Base+0x21c>
   1608c:	mov	r0, r4
   16090:	mov	r1, r7
   16094:	mov	r2, r6
   16098:	bl	15504 <table_get_short@@Base>
   1609c:	mov	r3, r0
   160a0:	movw	r2, #27293	; 0x6a9d
   160a4:	movt	r2, #1
   160a8:	b	1622c <table_cell_to_buffer@@Base+0x30c>
   160ac:	mov	r0, r4
   160b0:	mov	r1, r7
   160b4:	mov	r2, r6
   160b8:	bl	15518 <table_get_ushort@@Base>
   160bc:	mov	r3, r0
   160c0:	movw	r2, #27297	; 0x6aa1
   160c4:	movt	r2, #1
   160c8:	b	1622c <table_cell_to_buffer@@Base+0x30c>
   160cc:	mov	r0, r4
   160d0:	mov	r1, r7
   160d4:	mov	r2, r6
   160d8:	bl	1552c <table_get_long@@Base>
   160dc:	mov	r3, r0
   160e0:	movw	r2, #27301	; 0x6aa5
   160e4:	movt	r2, #1
   160e8:	b	1622c <table_cell_to_buffer@@Base+0x30c>
   160ec:	mov	r0, r4
   160f0:	mov	r1, r7
   160f4:	mov	r2, r6
   160f8:	bl	15540 <table_get_ulong@@Base>
   160fc:	mov	r3, r0
   16100:	movw	r2, #27305	; 0x6aa9
   16104:	movt	r2, #1
   16108:	b	1622c <table_cell_to_buffer@@Base+0x30c>
   1610c:	mov	r0, r4
   16110:	mov	r1, r7
   16114:	mov	r2, r6
   16118:	bl	15554 <table_get_llong@@Base>
   1611c:	stm	sp, {r0, r1}
   16120:	movw	r2, #27283	; 0x6a93
   16124:	movt	r2, #1
   16128:	b	161ac <table_cell_to_buffer@@Base+0x28c>
   1612c:	mov	r0, r4
   16130:	mov	r1, r7
   16134:	mov	r2, r6
   16138:	bl	15568 <table_get_ullong@@Base>
   1613c:	stm	sp, {r0, r1}
   16140:	movw	r2, #27288	; 0x6a98
   16144:	movt	r2, #1
   16148:	b	161ac <table_cell_to_buffer@@Base+0x28c>
   1614c:	mov	r0, r4
   16150:	mov	r1, r7
   16154:	mov	r2, r6
   16158:	bl	1557c <table_get_float@@Base>
   1615c:	vcvt.f64.f32	d16, s0
   16160:	vstr	d16, [sp]
   16164:	movw	r2, #27312	; 0x6ab0
   16168:	movt	r2, #1
   1616c:	b	161ac <table_cell_to_buffer@@Base+0x28c>
   16170:	mov	r0, r4
   16174:	mov	r1, r7
   16178:	mov	r2, r6
   1617c:	bl	15590 <table_get_double@@Base>
   16180:	vstr	d0, [sp]
   16184:	movw	r2, #27315	; 0x6ab3
   16188:	movt	r2, #1
   1618c:	b	161ac <table_cell_to_buffer@@Base+0x28c>
   16190:	mov	r0, r4
   16194:	mov	r1, r7
   16198:	mov	r2, r6
   1619c:	bl	155a4 <table_get_ldouble@@Base>
   161a0:	vstr	d0, [sp]
   161a4:	movw	r2, #27319	; 0x6ab7
   161a8:	movt	r2, #1
   161ac:	mov	r0, r5
   161b0:	mov	r1, r8
   161b4:	bl	12fe4 <snprintf@plt>
   161b8:	b	16238 <table_cell_to_buffer@@Base+0x318>
   161bc:	mov	r0, r4
   161c0:	mov	r1, r7
   161c4:	mov	r2, r6
   161c8:	bl	155b8 <table_get_char@@Base>
   161cc:	b	161e0 <table_cell_to_buffer@@Base+0x2c0>
   161d0:	mov	r0, r4
   161d4:	mov	r1, r7
   161d8:	mov	r2, r6
   161dc:	bl	155cc <table_get_uchar@@Base>
   161e0:	mov	r3, r0
   161e4:	movw	r2, #27323	; 0x6abb
   161e8:	movt	r2, #1
   161ec:	b	1622c <table_cell_to_buffer@@Base+0x30c>
   161f0:	mov	r0, r4
   161f4:	mov	r1, r7
   161f8:	mov	r2, r6
   161fc:	bl	155e0 <table_get_string@@Base>
   16200:	mov	r3, r0
   16204:	movw	r2, #27309	; 0x6aad
   16208:	movt	r2, #1
   1620c:	b	1622c <table_cell_to_buffer@@Base+0x30c>
   16210:	mov	r0, r4
   16214:	mov	r1, r7
   16218:	mov	r2, r6
   1621c:	bl	15428 <table_get_bool@@Base>
   16220:	mov	r3, r0
   16224:	movw	r2, #26989	; 0x696d
   16228:	movt	r2, #1
   1622c:	mov	r0, r5
   16230:	mov	r1, r8
   16234:	bl	12fe4 <snprintf@plt>
   16238:	mov	r0, #0
   1623c:	sub	sp, fp, #24
   16240:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16244:	mov	r0, r4
   16248:	mov	r1, r7
   1624c:	mov	r2, r6
   16250:	bl	155e4 <table_get_ptr@@Base>
   16254:	mov	r3, r0
   16258:	movw	r2, #27326	; 0x6abe
   1625c:	movt	r2, #1
   16260:	b	1622c <table_cell_to_buffer@@Base+0x30c>

00016264 <table_cell_from_buffer@@Base>:
   16264:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16268:	add	fp, sp, #24
   1626c:	sub	sp, sp, #264	; 0x108
   16270:	mov	r7, r3
   16274:	mov	r4, r2
   16278:	mov	r5, r1
   1627c:	mov	r6, r0
   16280:	mov	r1, r2
   16284:	bl	13dc4 <table_get_column_data_type@@Base>
   16288:	cmp	r0, #23
   1628c:	bhi	16860 <table_cell_from_buffer@@Base+0x5fc>
   16290:	add	r1, pc, #0
   16294:	ldr	pc, [r1, r0, lsl #2]
   16298:	strdeq	r6, [r1], -r8
   1629c:	andeq	r6, r1, r0, lsr r3
   162a0:	andeq	r6, r1, r8, ror #6
   162a4:	andeq	r6, r1, r0, lsr #7
   162a8:	ldrdeq	r6, [r1], -r8
   162ac:	andeq	r6, r1, r0, lsl r4
   162b0:	andeq	r6, r1, r8, asr #8
   162b4:	andeq	r6, r1, r0, lsl #9
   162b8:			; <UNDEFINED> instruction: 0x000164b8
   162bc:	strdeq	r6, [r1], -r8
   162c0:	andeq	r6, r1, r8, lsr r5
   162c4:	andeq	r6, r1, r0, ror r5
   162c8:	andeq	r6, r1, r8, lsr #11
   162cc:	andeq	r6, r1, r0, ror #11
   162d0:	andeq	r6, r1, r8, lsl r6
   162d4:	andeq	r6, r1, r8, asr r6
   162d8:	muleq	r1, r8, r6
   162dc:	ldrdeq	r6, [r1], -r0
   162e0:	andeq	r6, r1, r8, lsl #14
   162e4:	andeq	r6, r1, r0, asr #14
   162e8:	andeq	r6, r1, r8, ror r7
   162ec:			; <UNDEFINED> instruction: 0x000167b0
   162f0:	andeq	r6, r1, r8, ror #15
   162f4:	andeq	r6, r1, ip, lsr #16
   162f8:	movw	r1, #26989	; 0x696d
   162fc:	movt	r1, #1
   16300:	add	r2, sp, #8
   16304:	mov	r0, r7
   16308:	bl	12ff0 <__isoc99_sscanf@plt>
   1630c:	mvn	r7, #0
   16310:	cmp	r0, #1
   16314:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16318:	ldr	r3, [sp, #8]
   1631c:	mov	r0, r6
   16320:	mov	r1, r5
   16324:	mov	r2, r4
   16328:	bl	15ae8 <table_set_int@@Base>
   1632c:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16330:	movw	r1, #27280	; 0x6a90
   16334:	movt	r1, #1
   16338:	add	r2, sp, #8
   1633c:	mov	r0, r7
   16340:	bl	12ff0 <__isoc99_sscanf@plt>
   16344:	mvn	r7, #0
   16348:	cmp	r0, #1
   1634c:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16350:	ldr	r3, [sp, #8]
   16354:	mov	r0, r6
   16358:	mov	r1, r5
   1635c:	mov	r2, r4
   16360:	bl	15b10 <table_set_uint@@Base>
   16364:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16368:	movw	r1, #27329	; 0x6ac1
   1636c:	movt	r1, #1
   16370:	add	r2, sp, #8
   16374:	mov	r0, r7
   16378:	bl	12ff0 <__isoc99_sscanf@plt>
   1637c:	mvn	r7, #0
   16380:	cmp	r0, #1
   16384:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16388:	ldrsb	r3, [sp, #8]
   1638c:	mov	r0, r6
   16390:	mov	r1, r5
   16394:	mov	r2, r4
   16398:	bl	15b38 <table_set_int8@@Base>
   1639c:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   163a0:	movw	r1, #27334	; 0x6ac6
   163a4:	movt	r1, #1
   163a8:	add	r2, sp, #8
   163ac:	mov	r0, r7
   163b0:	bl	12ff0 <__isoc99_sscanf@plt>
   163b4:	mvn	r7, #0
   163b8:	cmp	r0, #1
   163bc:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   163c0:	ldrb	r3, [sp, #8]
   163c4:	mov	r0, r6
   163c8:	mov	r1, r5
   163cc:	mov	r2, r4
   163d0:	bl	15b60 <table_set_uint8@@Base>
   163d4:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   163d8:	movw	r1, #27293	; 0x6a9d
   163dc:	movt	r1, #1
   163e0:	add	r2, sp, #8
   163e4:	mov	r0, r7
   163e8:	bl	12ff0 <__isoc99_sscanf@plt>
   163ec:	mvn	r7, #0
   163f0:	cmp	r0, #1
   163f4:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   163f8:	ldrsh	r3, [sp, #8]
   163fc:	mov	r0, r6
   16400:	mov	r1, r5
   16404:	mov	r2, r4
   16408:	bl	15b88 <table_set_int16@@Base>
   1640c:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16410:	movw	r1, #27297	; 0x6aa1
   16414:	movt	r1, #1
   16418:	add	r2, sp, #8
   1641c:	mov	r0, r7
   16420:	bl	12ff0 <__isoc99_sscanf@plt>
   16424:	mvn	r7, #0
   16428:	cmp	r0, #1
   1642c:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16430:	ldrh	r3, [sp, #8]
   16434:	mov	r0, r6
   16438:	mov	r1, r5
   1643c:	mov	r2, r4
   16440:	bl	15bb0 <table_set_uint16@@Base>
   16444:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16448:	movw	r1, #26989	; 0x696d
   1644c:	movt	r1, #1
   16450:	add	r2, sp, #8
   16454:	mov	r0, r7
   16458:	bl	12ff0 <__isoc99_sscanf@plt>
   1645c:	mvn	r7, #0
   16460:	cmp	r0, #1
   16464:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16468:	ldr	r3, [sp, #8]
   1646c:	mov	r0, r6
   16470:	mov	r1, r5
   16474:	mov	r2, r4
   16478:	bl	15bd8 <table_set_int32@@Base>
   1647c:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16480:	movw	r1, #27280	; 0x6a90
   16484:	movt	r1, #1
   16488:	add	r2, sp, #8
   1648c:	mov	r0, r7
   16490:	bl	12ff0 <__isoc99_sscanf@plt>
   16494:	mvn	r7, #0
   16498:	cmp	r0, #1
   1649c:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   164a0:	ldr	r3, [sp, #8]
   164a4:	mov	r0, r6
   164a8:	mov	r1, r5
   164ac:	mov	r2, r4
   164b0:	bl	15c00 <table_set_uint32@@Base>
   164b4:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   164b8:	movw	r1, #27283	; 0x6a93
   164bc:	movt	r1, #1
   164c0:	add	r2, sp, #8
   164c4:	mov	r0, r7
   164c8:	bl	12ff0 <__isoc99_sscanf@plt>
   164cc:	mvn	r7, #0
   164d0:	cmp	r0, #1
   164d4:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   164d8:	ldr	r0, [sp, #8]
   164dc:	ldr	r1, [sp, #12]
   164e0:	stm	sp, {r0, r1}
   164e4:	mov	r0, r6
   164e8:	mov	r1, r5
   164ec:	mov	r2, r4
   164f0:	bl	15c28 <table_set_int64@@Base>
   164f4:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   164f8:	movw	r1, #27288	; 0x6a98
   164fc:	movt	r1, #1
   16500:	add	r2, sp, #8
   16504:	mov	r0, r7
   16508:	bl	12ff0 <__isoc99_sscanf@plt>
   1650c:	mvn	r7, #0
   16510:	cmp	r0, #1
   16514:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16518:	ldr	r0, [sp, #8]
   1651c:	ldr	r1, [sp, #12]
   16520:	stm	sp, {r0, r1}
   16524:	mov	r0, r6
   16528:	mov	r1, r5
   1652c:	mov	r2, r4
   16530:	bl	15c5c <table_set_uint64@@Base>
   16534:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16538:	movw	r1, #27293	; 0x6a9d
   1653c:	movt	r1, #1
   16540:	add	r2, sp, #8
   16544:	mov	r0, r7
   16548:	bl	12ff0 <__isoc99_sscanf@plt>
   1654c:	mvn	r7, #0
   16550:	cmp	r0, #1
   16554:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16558:	ldrsh	r3, [sp, #8]
   1655c:	mov	r0, r6
   16560:	mov	r1, r5
   16564:	mov	r2, r4
   16568:	bl	15c90 <table_set_short@@Base>
   1656c:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16570:	movw	r1, #27297	; 0x6aa1
   16574:	movt	r1, #1
   16578:	add	r2, sp, #8
   1657c:	mov	r0, r7
   16580:	bl	12ff0 <__isoc99_sscanf@plt>
   16584:	mvn	r7, #0
   16588:	cmp	r0, #1
   1658c:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16590:	ldrh	r3, [sp, #8]
   16594:	mov	r0, r6
   16598:	mov	r1, r5
   1659c:	mov	r2, r4
   165a0:	bl	15cb8 <table_set_ushort@@Base>
   165a4:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   165a8:	movw	r1, #27301	; 0x6aa5
   165ac:	movt	r1, #1
   165b0:	add	r2, sp, #8
   165b4:	mov	r0, r7
   165b8:	bl	12ff0 <__isoc99_sscanf@plt>
   165bc:	mvn	r7, #0
   165c0:	cmp	r0, #1
   165c4:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   165c8:	ldr	r3, [sp, #8]
   165cc:	mov	r0, r6
   165d0:	mov	r1, r5
   165d4:	mov	r2, r4
   165d8:	bl	15ce0 <table_set_long@@Base>
   165dc:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   165e0:	movw	r1, #27305	; 0x6aa9
   165e4:	movt	r1, #1
   165e8:	add	r2, sp, #8
   165ec:	mov	r0, r7
   165f0:	bl	12ff0 <__isoc99_sscanf@plt>
   165f4:	mvn	r7, #0
   165f8:	cmp	r0, #1
   165fc:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16600:	ldr	r3, [sp, #8]
   16604:	mov	r0, r6
   16608:	mov	r1, r5
   1660c:	mov	r2, r4
   16610:	bl	15d08 <table_set_ulong@@Base>
   16614:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16618:	movw	r1, #27283	; 0x6a93
   1661c:	movt	r1, #1
   16620:	add	r2, sp, #8
   16624:	mov	r0, r7
   16628:	bl	12ff0 <__isoc99_sscanf@plt>
   1662c:	mvn	r7, #0
   16630:	cmp	r0, #1
   16634:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16638:	ldr	r0, [sp, #8]
   1663c:	ldr	r1, [sp, #12]
   16640:	stm	sp, {r0, r1}
   16644:	mov	r0, r6
   16648:	mov	r1, r5
   1664c:	mov	r2, r4
   16650:	bl	15d30 <table_set_llong@@Base>
   16654:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16658:	movw	r1, #27288	; 0x6a98
   1665c:	movt	r1, #1
   16660:	add	r2, sp, #8
   16664:	mov	r0, r7
   16668:	bl	12ff0 <__isoc99_sscanf@plt>
   1666c:	mvn	r7, #0
   16670:	cmp	r0, #1
   16674:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16678:	ldr	r0, [sp, #8]
   1667c:	ldr	r1, [sp, #12]
   16680:	stm	sp, {r0, r1}
   16684:	mov	r0, r6
   16688:	mov	r1, r5
   1668c:	mov	r2, r4
   16690:	bl	15d64 <table_set_ullong@@Base>
   16694:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16698:	movw	r1, #27312	; 0x6ab0
   1669c:	movt	r1, #1
   166a0:	add	r2, sp, #8
   166a4:	mov	r0, r7
   166a8:	bl	12ff0 <__isoc99_sscanf@plt>
   166ac:	mvn	r7, #0
   166b0:	cmp	r0, #1
   166b4:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   166b8:	vldr	s0, [sp, #8]
   166bc:	mov	r0, r6
   166c0:	mov	r1, r5
   166c4:	mov	r2, r4
   166c8:	bl	15d98 <table_set_float@@Base>
   166cc:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   166d0:	movw	r1, #27315	; 0x6ab3
   166d4:	movt	r1, #1
   166d8:	add	r2, sp, #8
   166dc:	mov	r0, r7
   166e0:	bl	12ff0 <__isoc99_sscanf@plt>
   166e4:	mvn	r7, #0
   166e8:	cmp	r0, #1
   166ec:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   166f0:	vldr	d0, [sp, #8]
   166f4:	mov	r0, r6
   166f8:	mov	r1, r5
   166fc:	mov	r2, r4
   16700:	bl	15dc0 <table_set_double@@Base>
   16704:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16708:	movw	r1, #27319	; 0x6ab7
   1670c:	movt	r1, #1
   16710:	add	r2, sp, #8
   16714:	mov	r0, r7
   16718:	bl	12ff0 <__isoc99_sscanf@plt>
   1671c:	mvn	r7, #0
   16720:	cmp	r0, #1
   16724:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16728:	vldr	d0, [sp, #8]
   1672c:	mov	r0, r6
   16730:	mov	r1, r5
   16734:	mov	r2, r4
   16738:	bl	15de8 <table_set_ldouble@@Base>
   1673c:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16740:	movw	r1, #27323	; 0x6abb
   16744:	movt	r1, #1
   16748:	add	r2, sp, #8
   1674c:	mov	r0, r7
   16750:	bl	12ff0 <__isoc99_sscanf@plt>
   16754:	mvn	r7, #0
   16758:	cmp	r0, #1
   1675c:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16760:	ldrb	r3, [sp, #8]
   16764:	mov	r0, r6
   16768:	mov	r1, r5
   1676c:	mov	r2, r4
   16770:	bl	15e30 <table_set_char@@Base>
   16774:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   16778:	movw	r1, #27323	; 0x6abb
   1677c:	movt	r1, #1
   16780:	add	r2, sp, #8
   16784:	mov	r0, r7
   16788:	bl	12ff0 <__isoc99_sscanf@plt>
   1678c:	mvn	r7, #0
   16790:	cmp	r0, #1
   16794:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16798:	ldrb	r3, [sp, #8]
   1679c:	mov	r0, r6
   167a0:	mov	r1, r5
   167a4:	mov	r2, r4
   167a8:	bl	15e58 <table_set_uchar@@Base>
   167ac:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   167b0:	movw	r1, #27309	; 0x6aad
   167b4:	movt	r1, #1
   167b8:	add	r2, sp, #8
   167bc:	mov	r0, r7
   167c0:	bl	12ff0 <__isoc99_sscanf@plt>
   167c4:	mvn	r7, #0
   167c8:	cmp	r0, #1
   167cc:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   167d0:	add	r3, sp, #8
   167d4:	mov	r0, r6
   167d8:	mov	r1, r5
   167dc:	mov	r2, r4
   167e0:	bl	15e10 <table_set_string@@Base>
   167e4:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   167e8:	movw	r1, #26989	; 0x696d
   167ec:	movt	r1, #1
   167f0:	add	r2, sp, #8
   167f4:	mov	r0, r7
   167f8:	bl	12ff0 <__isoc99_sscanf@plt>
   167fc:	mvn	r7, #0
   16800:	cmp	r0, #1
   16804:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   16808:	ldr	r0, [sp, #8]
   1680c:	cmp	r0, #0
   16810:	beq	16870 <table_cell_from_buffer@@Base+0x60c>
   16814:	mov	r0, r6
   16818:	mov	r1, r5
   1681c:	mov	r2, r4
   16820:	mov	r3, #1
   16824:	bl	15ac0 <table_set_bool@@Base>
   16828:	b	16860 <table_cell_from_buffer@@Base+0x5fc>
   1682c:	movw	r1, #27326	; 0x6abe
   16830:	movt	r1, #1
   16834:	add	r2, sp, #8
   16838:	mov	r0, r7
   1683c:	bl	12ff0 <__isoc99_sscanf@plt>
   16840:	mvn	r7, #0
   16844:	cmp	r0, #1
   16848:	bne	16864 <table_cell_from_buffer@@Base+0x600>
   1684c:	ldr	r3, [sp, #8]
   16850:	mov	r0, r6
   16854:	mov	r1, r5
   16858:	mov	r2, r4
   1685c:	bl	15e80 <table_set_ptr@@Base>
   16860:	mov	r7, #0
   16864:	mov	r0, r7
   16868:	sub	sp, fp, #24
   1686c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16870:	mov	r7, #0
   16874:	mov	r0, r6
   16878:	mov	r1, r5
   1687c:	mov	r2, r4
   16880:	mov	r3, #0
   16884:	bl	15ac0 <table_set_bool@@Base>
   16888:	b	16864 <table_cell_from_buffer@@Base+0x600>

0001688c <table_cell_nullify@@Base>:
   1688c:	push	{r4, sl, fp, lr}
   16890:	add	fp, sp, #8
   16894:	bl	15eb8 <table_get_cell_ptr@@Base>
   16898:	mov	r4, r0
   1689c:	ldr	r0, [r0]
   168a0:	cmp	r0, #0
   168a4:	beq	168b4 <table_cell_nullify@@Base+0x28>
   168a8:	bl	12f90 <free@plt>
   168ac:	mov	r0, #0
   168b0:	str	r0, [r4]
   168b4:	mov	r0, #0
   168b8:	pop	{r4, sl, fp, pc}

000168bc <__libc_csu_init@@Base>:
   168bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   168c0:	mov	r7, r0
   168c4:	ldr	r6, [pc, #72]	; 16914 <__libc_csu_init@@Base+0x58>
   168c8:	ldr	r5, [pc, #72]	; 16918 <__libc_csu_init@@Base+0x5c>
   168cc:	add	r6, pc, r6
   168d0:	add	r5, pc, r5
   168d4:	sub	r6, r6, r5
   168d8:	mov	r8, r1
   168dc:	mov	r9, r2
   168e0:	bl	12f58 <strcmp@plt-0x20>
   168e4:	asrs	r6, r6, #2
   168e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   168ec:	mov	r4, #0
   168f0:	add	r4, r4, #1
   168f4:	ldr	r3, [r5], #4
   168f8:	mov	r2, r9
   168fc:	mov	r1, r8
   16900:	mov	r0, r7
   16904:	blx	r3
   16908:	cmp	r6, r4
   1690c:	bne	168f0 <__libc_csu_init@@Base+0x34>
   16910:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16914:	andeq	r0, r1, r8, lsr r6
   16918:	andeq	r0, r1, r0, lsr r6

0001691c <__libc_csu_fini@@Base>:
   1691c:	bx	lr

Disassembly of section .fini:

00016920 <.fini>:
   16920:	push	{r3, lr}
   16924:	pop	{r3, pc}
