
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf32-littlearm


Disassembly of section .init:

00013e80 <.init>:
   13e80:	push	{r3, lr}
   13e84:	bl	14084 <_start@@Base+0x3c>
   13e88:	pop	{r3, pc}

Disassembly of section .plt:

00013e8c <calloc@plt-0x14>:
   13e8c:	push	{lr}		; (str lr, [sp, #-4]!)
   13e90:	ldr	lr, [pc, #4]	; 13e9c <calloc@plt-0x4>
   13e94:	add	lr, pc, lr
   13e98:	ldr	pc, [lr, #8]!
   13e9c:	andeq	r2, r5, r4, ror #2

00013ea0 <calloc@plt>:
   13ea0:	add	ip, pc, #0, 12
   13ea4:	add	ip, ip, #335872	; 0x52000
   13ea8:	ldr	pc, [ip, #356]!	; 0x164

00013eac <raise@plt>:
   13eac:	add	ip, pc, #0, 12
   13eb0:	add	ip, ip, #335872	; 0x52000
   13eb4:	ldr	pc, [ip, #348]!	; 0x15c

00013eb8 <strcmp@plt>:
   13eb8:	add	ip, pc, #0, 12
   13ebc:	add	ip, ip, #335872	; 0x52000
   13ec0:	ldr	pc, [ip, #340]!	; 0x154

00013ec4 <fopen@plt>:
   13ec4:	add	ip, pc, #0, 12
   13ec8:	add	ip, ip, #335872	; 0x52000
   13ecc:	ldr	pc, [ip, #332]!	; 0x14c

00013ed0 <free@plt>:
   13ed0:	add	ip, pc, #0, 12
   13ed4:	add	ip, ip, #335872	; 0x52000
   13ed8:	ldr	pc, [ip, #324]!	; 0x144

00013edc <memcpy@plt>:
   13edc:	add	ip, pc, #0, 12
   13ee0:	add	ip, ip, #335872	; 0x52000
   13ee4:	ldr	pc, [ip, #316]!	; 0x13c

00013ee8 <ftell@plt>:
   13ee8:	add	ip, pc, #0, 12
   13eec:	add	ip, ip, #335872	; 0x52000
   13ef0:	ldr	pc, [ip, #308]!	; 0x134

00013ef4 <memcmp@plt>:
   13ef4:	add	ip, pc, #0, 12
   13ef8:	add	ip, ip, #335872	; 0x52000
   13efc:	ldr	pc, [ip, #300]!	; 0x12c

00013f00 <rewind@plt>:
   13f00:	add	ip, pc, #0, 12
   13f04:	add	ip, ip, #335872	; 0x52000
   13f08:	ldr	pc, [ip, #292]!	; 0x124

00013f0c <realloc@plt>:
   13f0c:	add	ip, pc, #0, 12
   13f10:	add	ip, ip, #335872	; 0x52000
   13f14:	ldr	pc, [ip, #284]!	; 0x11c

00013f18 <fwrite@plt>:
   13f18:	add	ip, pc, #0, 12
   13f1c:	add	ip, ip, #335872	; 0x52000
   13f20:	ldr	pc, [ip, #276]!	; 0x114

00013f24 <fread@plt>:
   13f24:	add	ip, pc, #0, 12
   13f28:	add	ip, ip, #335872	; 0x52000
   13f2c:	ldr	pc, [ip, #268]!	; 0x10c

00013f30 <puts@plt>:
   13f30:	add	ip, pc, #0, 12
   13f34:	add	ip, ip, #335872	; 0x52000
   13f38:	ldr	pc, [ip, #260]!	; 0x104

00013f3c <malloc@plt>:
   13f3c:	add	ip, pc, #0, 12
   13f40:	add	ip, ip, #335872	; 0x52000
   13f44:	ldr	pc, [ip, #252]!	; 0xfc

00013f48 <__libc_start_main@plt>:
   13f48:	add	ip, pc, #0, 12
   13f4c:	add	ip, ip, #335872	; 0x52000
   13f50:	ldr	pc, [ip, #244]!	; 0xf4

00013f54 <__ctype_toupper_loc@plt>:
   13f54:	add	ip, pc, #0, 12
   13f58:	add	ip, ip, #335872	; 0x52000
   13f5c:	ldr	pc, [ip, #236]!	; 0xec

00013f60 <__gmon_start__@plt>:
   13f60:	add	ip, pc, #0, 12
   13f64:	add	ip, ip, #335872	; 0x52000
   13f68:	ldr	pc, [ip, #228]!	; 0xe4

00013f6c <exit@plt>:
   13f6c:	add	ip, pc, #0, 12
   13f70:	add	ip, ip, #335872	; 0x52000
   13f74:	ldr	pc, [ip, #220]!	; 0xdc

00013f78 <strlen@plt>:
   13f78:	add	ip, pc, #0, 12
   13f7c:	add	ip, ip, #335872	; 0x52000
   13f80:	ldr	pc, [ip, #212]!	; 0xd4

00013f84 <fprintf@plt>:
   13f84:	add	ip, pc, #0, 12
   13f88:	add	ip, ip, #335872	; 0x52000
   13f8c:	ldr	pc, [ip, #204]!	; 0xcc

00013f90 <posix_memalign@plt>:
   13f90:	add	ip, pc, #0, 12
   13f94:	add	ip, ip, #335872	; 0x52000
   13f98:	ldr	pc, [ip, #196]!	; 0xc4

00013f9c <memset@plt>:
   13f9c:	add	ip, pc, #0, 12
   13fa0:	add	ip, ip, #335872	; 0x52000
   13fa4:	ldr	pc, [ip, #188]!	; 0xbc

00013fa8 <strncpy@plt>:
   13fa8:	add	ip, pc, #0, 12
   13fac:	add	ip, ip, #335872	; 0x52000
   13fb0:	ldr	pc, [ip, #180]!	; 0xb4

00013fb4 <strtod@plt>:
   13fb4:	add	ip, pc, #0, 12
   13fb8:	add	ip, ip, #335872	; 0x52000
   13fbc:	ldr	pc, [ip, #172]!	; 0xac

00013fc0 <memchr@plt>:
   13fc0:	add	ip, pc, #0, 12
   13fc4:	add	ip, ip, #335872	; 0x52000
   13fc8:	ldr	pc, [ip, #164]!	; 0xa4

00013fcc <fclose@plt>:
   13fcc:	add	ip, pc, #0, 12
   13fd0:	add	ip, ip, #335872	; 0x52000
   13fd4:	ldr	pc, [ip, #156]!	; 0x9c

00013fd8 <vfprintf@plt>:
   13fd8:	add	ip, pc, #0, 12
   13fdc:	add	ip, ip, #335872	; 0x52000
   13fe0:	ldr	pc, [ip, #148]!	; 0x94

00013fe4 <fputc@plt>:
   13fe4:	add	ip, pc, #0, 12
   13fe8:	add	ip, ip, #335872	; 0x52000
   13fec:	ldr	pc, [ip, #140]!	; 0x8c

00013ff0 <sprintf@plt>:
   13ff0:	add	ip, pc, #0, 12
   13ff4:	add	ip, ip, #335872	; 0x52000
   13ff8:	ldr	pc, [ip, #132]!	; 0x84

00013ffc <vsnprintf@plt>:
   13ffc:	add	ip, pc, #0, 12
   14000:	add	ip, ip, #335872	; 0x52000
   14004:	ldr	pc, [ip, #124]!	; 0x7c

00014008 <qsort@plt>:
   14008:	add	ip, pc, #0, 12
   1400c:	add	ip, ip, #335872	; 0x52000
   14010:	ldr	pc, [ip, #116]!	; 0x74

00014014 <fseek@plt>:
   14014:	add	ip, pc, #0, 12
   14018:	add	ip, ip, #335872	; 0x52000
   1401c:	ldr	pc, [ip, #108]!	; 0x6c

00014020 <strncmp@plt>:
   14020:	add	ip, pc, #0, 12
   14024:	add	ip, ip, #335872	; 0x52000
   14028:	ldr	pc, [ip, #100]!	; 0x64

0001402c <abort@plt>:
   1402c:	add	ip, pc, #0, 12
   14030:	add	ip, ip, #335872	; 0x52000
   14034:	ldr	pc, [ip, #92]!	; 0x5c

00014038 <__assert_fail@plt>:
   14038:	add	ip, pc, #0, 12
   1403c:	add	ip, ip, #335872	; 0x52000
   14040:	ldr	pc, [ip, #84]!	; 0x54

Disassembly of section .text:

00014048 <_start@@Base>:
   14048:	mov	fp, #0
   1404c:	mov	lr, #0
   14050:	pop	{r1}		; (ldr r1, [sp], #4)
   14054:	mov	r2, sp
   14058:	push	{r2}		; (str r2, [sp, #-4]!)
   1405c:	push	{r0}		; (str r0, [sp, #-4]!)
   14060:	ldr	ip, [pc, #16]	; 14078 <_start@@Base+0x30>
   14064:	push	{ip}		; (str ip, [sp, #-4]!)
   14068:	ldr	r0, [pc, #12]	; 1407c <_start@@Base+0x34>
   1406c:	ldr	r3, [pc, #12]	; 14080 <_start@@Base+0x38>
   14070:	bl	13f48 <__libc_start_main@plt>
   14074:	bl	1402c <abort@plt>
   14078:	ldrdeq	sl, [r3], -r0
   1407c:	andeq	r4, r1, r0, ror r1
   14080:	andeq	sl, r3, r0, ror r3
   14084:	ldr	r3, [pc, #20]	; 140a0 <_start@@Base+0x58>
   14088:	ldr	r2, [pc, #20]	; 140a4 <_start@@Base+0x5c>
   1408c:	add	r3, pc, r3
   14090:	ldr	r2, [r3, r2]
   14094:	cmp	r2, #0
   14098:	bxeq	lr
   1409c:	b	13f60 <__gmon_start__@plt>
   140a0:	andeq	r1, r5, ip, ror #30
   140a4:	muleq	r0, r8, r0
   140a8:	ldr	r3, [pc, #28]	; 140cc <_start@@Base+0x84>
   140ac:	ldr	r0, [pc, #28]	; 140d0 <_start@@Base+0x88>
   140b0:	sub	r3, r3, r0
   140b4:	cmp	r3, #6
   140b8:	bxls	lr
   140bc:	ldr	r3, [pc, #16]	; 140d4 <_start@@Base+0x8c>
   140c0:	cmp	r3, #0
   140c4:	bxeq	lr
   140c8:	bx	r3
   140cc:	andeq	r6, r6, r7, lsr #1
   140d0:	andeq	r6, r6, r4, lsr #1
   140d4:	andeq	r0, r0, r0
   140d8:	ldr	r1, [pc, #36]	; 14104 <_start@@Base+0xbc>
   140dc:	ldr	r0, [pc, #36]	; 14108 <_start@@Base+0xc0>
   140e0:	sub	r1, r1, r0
   140e4:	asr	r1, r1, #2
   140e8:	add	r1, r1, r1, lsr #31
   140ec:	asrs	r1, r1, #1
   140f0:	bxeq	lr
   140f4:	ldr	r3, [pc, #16]	; 1410c <_start@@Base+0xc4>
   140f8:	cmp	r3, #0
   140fc:	bxeq	lr
   14100:	bx	r3
   14104:	andeq	r6, r6, r4, lsr #1
   14108:	andeq	r6, r6, r4, lsr #1
   1410c:	andeq	r0, r0, r0
   14110:	push	{r4, lr}
   14114:	ldr	r4, [pc, #24]	; 14134 <_start@@Base+0xec>
   14118:	ldrb	r3, [r4]
   1411c:	cmp	r3, #0
   14120:	popne	{r4, pc}
   14124:	bl	140a8 <_start@@Base+0x60>
   14128:	mov	r3, #1
   1412c:	strb	r3, [r4]
   14130:	pop	{r4, pc}
   14134:	strheq	r6, [r6], -r0
   14138:	ldr	r0, [pc, #40]	; 14168 <_start@@Base+0x120>
   1413c:	ldr	r3, [r0]
   14140:	cmp	r3, #0
   14144:	bne	1414c <_start@@Base+0x104>
   14148:	b	140d8 <_start@@Base+0x90>
   1414c:	ldr	r3, [pc, #24]	; 1416c <_start@@Base+0x124>
   14150:	cmp	r3, #0
   14154:	beq	14148 <_start@@Base+0x100>
   14158:	push	{r4, lr}
   1415c:	blx	r3
   14160:	pop	{r4, lr}
   14164:	b	140d8 <_start@@Base+0x90>
   14168:	andeq	r5, r6, r4, lsl pc
   1416c:	andeq	r0, r0, r0

00014170 <main@@Base>:
   14170:	push	{r4, r5, r6, lr}
   14174:	sub	sp, sp, #3968	; 0xf80
   14178:	ldr	r2, [pc, #292]	; 142a4 <main@@Base+0x134>
   1417c:	ldr	r1, [pc, #292]	; 142a8 <main@@Base+0x138>
   14180:	add	r0, sp, #232	; 0xe8
   14184:	bl	13edc <memcpy@plt>
   14188:	add	r3, sp, #8
   1418c:	str	r3, [sp, #4]
   14190:	mov	r0, r3
   14194:	bl	1431c <flatcc_init_options@@Base>
   14198:	mov	r3, #1
   1419c:	str	r3, [sp, #152]	; 0x98
   141a0:	str	r3, [sp, #160]	; 0xa0
   141a4:	str	r3, [sp, #156]	; 0x9c
   141a8:	str	r3, [sp, #164]	; 0xa4
   141ac:	str	r3, [sp, #116]	; 0x74
   141b0:	mov	r3, #0
   141b4:	mov	r2, r3
   141b8:	ldr	r1, [pc, #236]	; 142ac <main@@Base+0x13c>
   141bc:	ldr	r0, [sp, #4]
   141c0:	bl	143d4 <flatcc_create_context@@Base>
   141c4:	subs	r4, r0, #0
   141c8:	beq	14210 <main@@Base+0xa0>
   141cc:	ldr	r2, [pc, #208]	; 142a4 <main@@Base+0x134>
   141d0:	add	r1, sp, #232	; 0xe8
   141d4:	mov	r0, r4
   141d8:	bl	14448 <flatcc_parse_buffer@@Base>
   141dc:	subs	r5, r0, #0
   141e0:	beq	14230 <main@@Base+0xc0>
   141e4:	ldr	r3, [pc, #196]	; 142b0 <main@@Base+0x140>
   141e8:	ldr	r3, [r3]
   141ec:	mov	r2, #20
   141f0:	mov	r1, #1
   141f4:	ldr	r0, [pc, #184]	; 142b4 <main@@Base+0x144>
   141f8:	bl	13f18 <fwrite@plt>
   141fc:	mov	r0, r4
   14200:	bl	14664 <flatcc_destroy_context@@Base>
   14204:	mov	r0, r5
   14208:	add	sp, sp, #3968	; 0xf80
   1420c:	pop	{r4, r5, r6, pc}
   14210:	ldr	r3, [pc, #152]	; 142b0 <main@@Base+0x140>
   14214:	ldr	r3, [r3]
   14218:	mov	r2, #41	; 0x29
   1421c:	mov	r1, #1
   14220:	ldr	r0, [pc, #144]	; 142b8 <main@@Base+0x148>
   14224:	bl	13f18 <fwrite@plt>
   14228:	mvn	r5, #0
   1422c:	b	14204 <main@@Base+0x94>
   14230:	ldr	r6, [pc, #120]	; 142b0 <main@@Base+0x140>
   14234:	ldr	r3, [r6]
   14238:	mov	r2, #17
   1423c:	mov	r1, #1
   14240:	ldr	r0, [pc, #116]	; 142bc <main@@Base+0x14c>
   14244:	bl	13f18 <fwrite@plt>
   14248:	ldr	r3, [r6]
   1424c:	mov	r2, #31
   14250:	mov	r1, #1
   14254:	ldr	r0, [pc, #100]	; 142c0 <main@@Base+0x150>
   14258:	bl	13f18 <fwrite@plt>
   1425c:	mov	r0, r4
   14260:	bl	14518 <flatcc_generate_files@@Base>
   14264:	subs	r6, r0, #0
   14268:	beq	14288 <main@@Base+0x118>
   1426c:	ldr	r3, [pc, #60]	; 142b0 <main@@Base+0x140>
   14270:	ldr	r3, [r3]
   14274:	mov	r2, #32
   14278:	mov	r1, #1
   1427c:	ldr	r0, [pc, #64]	; 142c4 <main@@Base+0x154>
   14280:	bl	13f18 <fwrite@plt>
   14284:	b	141fc <main@@Base+0x8c>
   14288:	add	r2, sp, #232	; 0xe8
   1428c:	ldr	r1, [pc, #52]	; 142c8 <main@@Base+0x158>
   14290:	ldr	r3, [pc, #52]	; 142cc <main@@Base+0x15c>
   14294:	ldr	r0, [r3]
   14298:	bl	13f84 <fprintf@plt>
   1429c:	mov	r5, r6
   142a0:	b	141fc <main@@Base+0x8c>
   142a4:	muleq	r0, r7, lr
   142a8:	andeq	sl, r3, r0, ror #9
   142ac:	andeq	sl, r3, r0, ror #7
   142b0:	andeq	r6, r6, r8, lsr #1
   142b4:	andeq	sl, r3, ip, lsl r4
   142b8:	strdeq	sl, [r3], -r0
   142bc:	andeq	sl, r3, r4, lsr r4
   142c0:	andeq	sl, r3, r8, asr #8
   142c4:	andeq	sl, r3, r8, ror #8
   142c8:	andeq	sl, r3, ip, lsl #9
   142cc:	andeq	r6, r6, ip, lsr #1
   142d0:	push	{r4, lr}
   142d4:	mov	r2, #1
   142d8:	add	r0, r0, #172	; 0xac
   142dc:	bl	27204 <ptr_set_insert_item@@Base>
   142e0:	pop	{r4, pc}
   142e4:	cmp	r0, #0
   142e8:	beq	142f0 <main@@Base+0x180>
   142ec:	bx	lr
   142f0:	push	{r4, lr}
   142f4:	ldr	r3, [pc, #24]	; 14314 <main@@Base+0x1a4>
   142f8:	ldr	r3, [r3]
   142fc:	mov	r2, #34	; 0x22
   14300:	mov	r1, #1
   14304:	ldr	r0, [pc, #12]	; 14318 <main@@Base+0x1a8>
   14308:	bl	13f18 <fwrite@plt>
   1430c:	mov	r0, #1
   14310:	bl	13f6c <exit@plt>
   14314:	andeq	r6, r6, r8, lsr #1
   14318:	muleq	r3, r4, r3

0001431c <flatcc_init_options@@Base>:
   1431c:	push	{r4, lr}
   14320:	mov	r4, r0
   14324:	mov	r2, #224	; 0xe0
   14328:	mov	r1, #0
   1432c:	bl	13f9c <memset@plt>
   14330:	mov	r3, #65536	; 0x10000
   14334:	str	r3, [r4]
   14338:	mov	r3, #100	; 0x64
   1433c:	str	r3, [r4, #4]
   14340:	str	r3, [r4, #8]
   14344:	mov	r3, #1
   14348:	str	r3, [r4, #16]
   1434c:	str	r3, [r4, #20]
   14350:	str	r3, [r4, #24]
   14354:	str	r3, [r4, #28]
   14358:	str	r3, [r4, #32]
   1435c:	str	r3, [r4, #36]	; 0x24
   14360:	str	r3, [r4, #40]	; 0x28
   14364:	str	r3, [r4, #44]	; 0x2c
   14368:	str	r3, [r4, #48]	; 0x30
   1436c:	str	r3, [r4, #52]	; 0x34
   14370:	mov	r2, #4
   14374:	str	r2, [r4, #64]	; 0x40
   14378:	mov	r1, #2
   1437c:	str	r1, [r4, #68]	; 0x44
   14380:	str	r3, [r4, #72]	; 0x48
   14384:	str	r3, [r4, #76]	; 0x4c
   14388:	str	r3, [r4, #84]	; 0x54
   1438c:	ldr	r0, [pc, #48]	; 143c4 <flatcc_init_options@@Base+0xa8>
   14390:	mov	r1, #0
   14394:	strd	r0, [r4, #88]	; 0x58
   14398:	ldr	r1, [pc, #40]	; 143c8 <flatcc_init_options@@Base+0xac>
   1439c:	str	r1, [r4, #96]	; 0x60
   143a0:	ldr	r1, [pc, #36]	; 143cc <flatcc_init_options@@Base+0xb0>
   143a4:	str	r1, [r4, #100]	; 0x64
   143a8:	ldr	r1, [pc, #32]	; 143d0 <flatcc_init_options@@Base+0xb4>
   143ac:	str	r1, [r4, #104]	; 0x68
   143b0:	str	r3, [r4, #136]	; 0x88
   143b4:	str	r3, [r4, #140]	; 0x8c
   143b8:	str	r2, [r4, #176]	; 0xb0
   143bc:	str	r3, [r4, #184]	; 0xb8
   143c0:	pop	{r4, pc}
   143c4:	strdeq	pc, [r0], -lr
   143c8:	andeq	sl, r3, r8, ror #7
   143cc:			; <UNDEFINED> instruction: 0x0003b3b8
   143d0:	andeq	fp, r3, r0, asr #7

000143d4 <flatcc_create_context@@Base>:
   143d4:	push	{r4, r5, r6, r7, r8, lr}
   143d8:	sub	sp, sp, #8
   143dc:	mov	r5, r0
   143e0:	mov	r6, r1
   143e4:	mov	r7, r2
   143e8:	mov	r8, r3
   143ec:	mov	r0, #560	; 0x230
   143f0:	bl	13f3c <malloc@plt>
   143f4:	subs	r4, r0, #0
   143f8:	beq	14440 <flatcc_create_context@@Base+0x6c>
   143fc:	mov	r3, #0
   14400:	str	r3, [sp, #4]
   14404:	str	r8, [sp]
   14408:	mov	r3, r7
   1440c:	mov	r2, r6
   14410:	mov	r1, r5
   14414:	mov	r0, r4
   14418:	bl	2ae9c <__flatcc_fb_init_parser@@Base>
   1441c:	cmp	r0, #0
   14420:	moveq	r0, r4
   14424:	bne	14430 <flatcc_create_context@@Base+0x5c>
   14428:	add	sp, sp, #8
   1442c:	pop	{r4, r5, r6, r7, r8, pc}
   14430:	mov	r0, r4
   14434:	bl	13ed0 <free@plt>
   14438:	mov	r0, #0
   1443c:	b	14428 <flatcc_create_context@@Base+0x54>
   14440:	mov	r0, #0
   14444:	b	14428 <flatcc_create_context@@Base+0x54>

00014448 <flatcc_parse_buffer@@Base>:
   14448:	push	{r4, r5, r6, lr}
   1444c:	mov	r4, r0
   14450:	mov	r3, #1
   14454:	str	r3, [r0, #140]	; 0x8c
   14458:	ldr	r3, [r0, #128]	; 0x80
   1445c:	cmp	r3, #0
   14460:	cmpne	r3, r2
   14464:	bcc	144b0 <flatcc_parse_buffer@@Base+0x68>
   14468:	mov	r6, r1
   1446c:	mov	r5, r2
   14470:	mov	r2, #1
   14474:	add	r1, r0, #352	; 0x160
   14478:	add	r0, r0, #524	; 0x20c
   1447c:	bl	27204 <ptr_set_insert_item@@Base>
   14480:	mov	r3, #0
   14484:	mov	r2, r5
   14488:	mov	r1, r6
   1448c:	mov	r0, r4
   14490:	bl	2b1cc <__flatcc_fb_parse@@Base>
   14494:	cmp	r0, #0
   14498:	bne	144c0 <flatcc_parse_buffer@@Base+0x78>
   1449c:	mov	r0, r4
   144a0:	bl	2fbb4 <__flatcc_fb_build_schema@@Base>
   144a4:	adds	r0, r0, #0
   144a8:	mvnne	r0, #0
   144ac:	pop	{r4, r5, r6, pc}
   144b0:	ldr	r1, [pc, #16]	; 144c8 <flatcc_parse_buffer@@Base+0x80>
   144b4:	bl	29704 <__flatcc_fb_print_error@@Base>
   144b8:	mvn	r0, #0
   144bc:	pop	{r4, r5, r6, pc}
   144c0:	mvn	r0, #0
   144c4:	pop	{r4, r5, r6, pc}
   144c8:	andeq	fp, r3, r8, asr #7

000144cc <flatcc_generate_binary_schema_to_buffer@@Base>:
   144cc:	push	{lr}		; (str lr, [sp, #-4]!)
   144d0:	sub	sp, sp, #12
   144d4:	add	r3, sp, #8
   144d8:	str	r2, [r3, #-4]!
   144dc:	mov	r2, r1
   144e0:	add	r1, r0, #352	; 0x160
   144e4:	add	r0, r0, #128	; 0x80
   144e8:	bl	263dc <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   144ec:	cmp	r0, #0
   144f0:	ldrne	r0, [sp, #4]
   144f4:	mvneq	r0, #0
   144f8:	add	sp, sp, #12
   144fc:	pop	{pc}		; (ldr pc, [sp], #4)

00014500 <flatcc_generate_binary_schema@@Base>:
   14500:	push	{r4, lr}
   14504:	mov	r2, r1
   14508:	add	r1, r0, #352	; 0x160
   1450c:	add	r0, r0, #128	; 0x80
   14510:	bl	2644c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   14514:	pop	{r4, pc}

00014518 <flatcc_generate_files@@Base>:
   14518:	push	{r4, r5, r6, r7, lr}
   1451c:	sub	sp, sp, #236	; 0xec
   14520:	subs	r5, r0, #0
   14524:	beq	14644 <flatcc_generate_files@@Base+0x12c>
   14528:	ldr	r3, [r5, #108]	; 0x6c
   1452c:	cmp	r3, #0
   14530:	bne	1464c <flatcc_generate_files@@Base+0x134>
   14534:	mov	r4, r5
   14538:	mov	r2, #0
   1453c:	b	14544 <flatcc_generate_files@@Base+0x2c>
   14540:	mov	r4, r3
   14544:	str	r2, [r4, #4]
   14548:	ldr	r3, [r4]
   1454c:	mov	r2, r4
   14550:	cmp	r3, #0
   14554:	bne	14540 <flatcc_generate_files@@Base+0x28>
   14558:	ldr	r3, [r5, #308]	; 0x134
   1455c:	cmp	r3, #0
   14560:	beq	14578 <flatcc_generate_files@@Base+0x60>
   14564:	add	r1, r5, #352	; 0x160
   14568:	add	r0, r5, #128	; 0x80
   1456c:	bl	264b4 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   14570:	cmp	r0, #0
   14574:	bne	14654 <flatcc_generate_files@@Base+0x13c>
   14578:	add	r1, r5, #128	; 0x80
   1457c:	mov	r0, sp
   14580:	bl	14e5c <__flatcc_fb_init_output_c@@Base>
   14584:	subs	r7, r0, #0
   14588:	bne	1465c <flatcc_generate_files@@Base+0x144>
   1458c:	ldr	r3, [r5, #256]	; 0x100
   14590:	cmp	r3, #0
   14594:	beq	145c0 <flatcc_generate_files@@Base+0xa8>
   14598:	ldr	r6, [r5, #120]	; 0x78
   1459c:	cmp	r6, #0
   145a0:	beq	14624 <flatcc_generate_files@@Base+0x10c>
   145a4:	ldr	r3, [r5, #300]	; 0x12c
   145a8:	cmp	r3, #0
   145ac:	beq	145d4 <flatcc_generate_files@@Base+0xbc>
   145b0:	cmp	r4, #0
   145b4:	moveq	r6, r7
   145b8:	bne	14614 <flatcc_generate_files@@Base+0xfc>
   145bc:	b	14624 <flatcc_generate_files@@Base+0x10c>
   145c0:	mov	r0, sp
   145c4:	bl	15354 <__flatcc_fb_codegen_common_c@@Base>
   145c8:	subs	r6, r0, #0
   145cc:	bne	14624 <flatcc_generate_files@@Base+0x10c>
   145d0:	b	14598 <flatcc_generate_files@@Base+0x80>
   145d4:	add	r1, r5, #352	; 0x160
   145d8:	mov	r0, sp
   145dc:	bl	15410 <__flatcc_fb_codegen_c@@Base>
   145e0:	mov	r6, r0
   145e4:	b	14624 <flatcc_generate_files@@Base+0x10c>
   145e8:	add	r1, r4, #352	; 0x160
   145ec:	mov	r0, sp
   145f0:	bl	15410 <__flatcc_fb_codegen_c@@Base>
   145f4:	ldr	r4, [r4, #4]
   145f8:	mov	r6, r0
   145fc:	clz	r0, r0
   14600:	lsr	r0, r0, #5
   14604:	cmp	r4, #0
   14608:	moveq	r0, #0
   1460c:	cmp	r0, #0
   14610:	beq	14638 <flatcc_generate_files@@Base+0x120>
   14614:	ldr	r3, [r4, #108]	; 0x6c
   14618:	cmp	r3, #0
   1461c:	beq	145e8 <flatcc_generate_files@@Base+0xd0>
   14620:	mov	r6, #1
   14624:	mov	r0, sp
   14628:	bl	14e28 <__flatcc_fb_end_output_c@@Base>
   1462c:	mov	r0, r6
   14630:	add	sp, sp, #236	; 0xec
   14634:	pop	{r4, r5, r6, r7, pc}
   14638:	adds	r6, r6, #0
   1463c:	movne	r6, #1
   14640:	b	14624 <flatcc_generate_files@@Base+0x10c>
   14644:	mvn	r6, #0
   14648:	b	1462c <flatcc_generate_files@@Base+0x114>
   1464c:	mvn	r6, #0
   14650:	b	1462c <flatcc_generate_files@@Base+0x114>
   14654:	mvn	r6, #0
   14658:	b	1462c <flatcc_generate_files@@Base+0x114>
   1465c:	mvn	r6, #0
   14660:	b	1462c <flatcc_generate_files@@Base+0x114>

00014664 <flatcc_destroy_context@@Base>:
   14664:	push	{r4, r5, r6, lr}
   14668:	subs	r4, r0, #0
   1466c:	popeq	{r4, r5, r6, pc}
   14670:	ldr	r5, [r4]
   14674:	mov	r0, r4
   14678:	bl	2e060 <__flatcc_fb_clear_parser@@Base>
   1467c:	mov	r0, r4
   14680:	bl	13ed0 <free@plt>
   14684:	mov	r4, r5
   14688:	cmp	r5, #0
   1468c:	bne	14670 <flatcc_destroy_context@@Base+0xc>
   14690:	pop	{r4, r5, r6, pc}

00014694 <flatcc_parse_file@@Base>:
   14694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14698:	sub	sp, sp, #28
   1469c:	mov	r4, r0
   146a0:	mov	r7, r1
   146a4:	mov	r0, r1
   146a8:	bl	13f78 <strlen@plt>
   146ac:	mov	r8, r0
   146b0:	add	r3, r4, #352	; 0x160
   146b4:	str	r3, [sp, #8]
   146b8:	ldr	r0, [r4, #412]	; 0x19c
   146bc:	mov	r2, #1
   146c0:	mov	r1, r3
   146c4:	add	r0, r0, #32
   146c8:	bl	28de8 <fb_schema_table_insert_item@@Base>
   146cc:	cmp	r0, #0
   146d0:	movne	r9, #0
   146d4:	beq	146e4 <flatcc_parse_file@@Base+0x50>
   146d8:	mov	r0, r9
   146dc:	add	sp, sp, #28
   146e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146e4:	ldr	r3, [r4, #552]	; 0x228
   146e8:	str	r3, [sp, #12]
   146ec:	cmp	r3, #0
   146f0:	beq	14710 <flatcc_parse_file@@Base+0x7c>
   146f4:	ldr	r3, [r4, #336]	; 0x150
   146f8:	cmp	r3, #0
   146fc:	ble	14bf8 <flatcc_parse_file@@Base+0x564>
   14700:	mov	r5, #0
   14704:	mov	fp, #1
   14708:	ldr	sl, [pc, #1420]	; 14c9c <flatcc_parse_file@@Base+0x608>
   1470c:	b	147d8 <flatcc_parse_file@@Base+0x144>
   14710:	add	r2, sp, #20
   14714:	ldr	r1, [r4, #128]	; 0x80
   14718:	mov	r0, r7
   1471c:	bl	29350 <__flatcc_fb_read_file@@Base>
   14720:	subs	r9, r0, #0
   14724:	beq	14758 <flatcc_parse_file@@Base+0xc4>
   14728:	mov	r0, r7
   1472c:	bl	28eac <__flatcc_fb_copy_path@@Base>
   14730:	subs	r6, r0, #0
   14734:	bne	14828 <flatcc_parse_file@@Base+0x194>
   14738:	ldr	r3, [pc, #1376]	; 14ca0 <flatcc_parse_file@@Base+0x60c>
   1473c:	ldr	r3, [r3]
   14740:	mov	r2, #34	; 0x22
   14744:	mov	r1, #1
   14748:	ldr	r0, [pc, #1364]	; 14ca4 <flatcc_parse_file@@Base+0x610>
   1474c:	bl	13f18 <fwrite@plt>
   14750:	mov	r0, #1
   14754:	bl	13f6c <exit@plt>
   14758:	ldr	r2, [r4, #128]	; 0x80
   1475c:	ldr	r3, [r4, #412]	; 0x19c
   14760:	ldr	r3, [r3, #56]	; 0x38
   14764:	ldr	r1, [sp, #20]
   14768:	add	r3, r3, r1
   1476c:	cmp	r2, #0
   14770:	cmpne	r3, r2
   14774:	bls	146f4 <flatcc_parse_file@@Base+0x60>
   14778:	ldr	r1, [pc, #1320]	; 14ca8 <flatcc_parse_file@@Base+0x614>
   1477c:	mov	r0, r4
   14780:	bl	29704 <__flatcc_fb_print_error@@Base>
   14784:	mvn	r9, #0
   14788:	b	146d8 <flatcc_parse_file@@Base+0x44>
   1478c:	ldr	r3, [pc, #1292]	; 14ca0 <flatcc_parse_file@@Base+0x60c>
   14790:	ldr	r3, [r3]
   14794:	mov	r2, #34	; 0x22
   14798:	mov	r1, #1
   1479c:	ldr	r0, [pc, #1280]	; 14ca4 <flatcc_parse_file@@Base+0x610>
   147a0:	bl	13f18 <fwrite@plt>
   147a4:	mov	r0, #1
   147a8:	bl	13f6c <exit@plt>
   147ac:	mov	r0, r6
   147b0:	bl	13ed0 <free@plt>
   147b4:	ldr	r3, [r4, #128]	; 0x80
   147b8:	ldr	r2, [sp, #20]
   147bc:	cmp	r3, #0
   147c0:	cmpne	r3, r2
   147c4:	bcc	14870 <flatcc_parse_file@@Base+0x1dc>
   147c8:	add	r5, r5, #1
   147cc:	ldr	r3, [r4, #336]	; 0x150
   147d0:	cmp	r5, r3
   147d4:	bge	14bf8 <flatcc_parse_file@@Base+0x564>
   147d8:	ldr	r3, [r4, #328]	; 0x148
   147dc:	ldr	r6, [r3, r5, lsl #2]
   147e0:	mov	r0, r6
   147e4:	bl	13f78 <strlen@plt>
   147e8:	str	fp, [sp, #4]
   147ec:	str	sl, [sp]
   147f0:	mov	r3, r8
   147f4:	mov	r2, r7
   147f8:	mov	r1, r0
   147fc:	mov	r0, r6
   14800:	bl	28f38 <__flatcc_fb_create_join_path_n@@Base>
   14804:	subs	r6, r0, #0
   14808:	beq	1478c <flatcc_parse_file@@Base+0xf8>
   1480c:	add	r2, sp, #20
   14810:	ldr	r1, [r4, #128]	; 0x80
   14814:	mov	r0, r6
   14818:	bl	29350 <__flatcc_fb_read_file@@Base>
   1481c:	cmp	r0, #0
   14820:	beq	147ac <flatcc_parse_file@@Base+0x118>
   14824:	mov	r9, r0
   14828:	ldr	r1, [r4, #412]	; 0x19c
   1482c:	ldr	r2, [sp, #20]
   14830:	ldr	r3, [r1, #56]	; 0x38
   14834:	add	r3, r3, r2
   14838:	str	r3, [r1, #56]	; 0x38
   1483c:	str	r6, [r4, #548]	; 0x224
   14840:	mov	r3, #1
   14844:	mov	r1, r9
   14848:	mov	r0, r4
   1484c:	bl	2b1cc <__flatcc_fb_parse@@Base>
   14850:	subs	r9, r0, #0
   14854:	bne	14c94 <flatcc_parse_file@@Base+0x600>
   14858:	ldr	r6, [r4, #352]	; 0x160
   1485c:	cmp	r6, #0
   14860:	beq	14a18 <flatcc_parse_file@@Base+0x384>
   14864:	add	sl, r4, #128	; 0x80
   14868:	mov	fp, #560	; 0x230
   1486c:	b	14938 <flatcc_parse_file@@Base+0x2a4>
   14870:	ldr	r1, [pc, #1072]	; 14ca8 <flatcc_parse_file@@Base+0x614>
   14874:	mov	r0, r4
   14878:	bl	29704 <__flatcc_fb_print_error@@Base>
   1487c:	mvn	r9, #0
   14880:	b	146d8 <flatcc_parse_file@@Base+0x44>
   14884:	ldr	r3, [pc, #1044]	; 14ca0 <flatcc_parse_file@@Base+0x60c>
   14888:	ldr	r3, [r3]
   1488c:	mov	r2, #34	; 0x22
   14890:	mov	r1, #1
   14894:	ldr	r0, [pc, #1032]	; 14ca4 <flatcc_parse_file@@Base+0x610>
   14898:	bl	13f18 <fwrite@plt>
   1489c:	mov	r0, #1
   148a0:	bl	13f6c <exit@plt>
   148a4:	ldr	r1, [pc, #1020]	; 14ca8 <flatcc_parse_file@@Base+0x614>
   148a8:	mov	r0, r4
   148ac:	bl	29704 <__flatcc_fb_print_error@@Base>
   148b0:	mvn	r9, #0
   148b4:	b	146d8 <flatcc_parse_file@@Base+0x44>
   148b8:	ldr	r3, [pc, #992]	; 14ca0 <flatcc_parse_file@@Base+0x60c>
   148bc:	ldr	r3, [r3]
   148c0:	mov	r2, #34	; 0x22
   148c4:	mov	r1, #1
   148c8:	ldr	r0, [pc, #980]	; 14ca4 <flatcc_parse_file@@Base+0x610>
   148cc:	bl	13f18 <fwrite@plt>
   148d0:	mov	r0, #1
   148d4:	bl	13f6c <exit@plt>
   148d8:	ldr	r1, [pc, #972]	; 14cac <flatcc_parse_file@@Base+0x618>
   148dc:	mov	r0, r4
   148e0:	bl	29704 <__flatcc_fb_print_error@@Base>
   148e4:	b	14900 <flatcc_parse_file@@Base+0x26c>
   148e8:	ldr	r1, [pc, #960]	; 14cb0 <flatcc_parse_file@@Base+0x61c>
   148ec:	mov	r0, r4
   148f0:	bl	29704 <__flatcc_fb_print_error@@Base>
   148f4:	b	14900 <flatcc_parse_file@@Base+0x26c>
   148f8:	mov	r0, r7
   148fc:	bl	13ed0 <free@plt>
   14900:	mov	r0, r8
   14904:	bl	13ed0 <free@plt>
   14908:	b	146d8 <flatcc_parse_file@@Base+0x44>
   1490c:	ldr	r2, [sp, #8]
   14910:	ldr	r1, [pc, #924]	; 14cb4 <flatcc_parse_file@@Base+0x620>
   14914:	add	r0, r0, #172	; 0xac
   14918:	bl	2725c <ptr_set_visit@@Base>
   1491c:	mov	r0, r7
   14920:	bl	14664 <flatcc_destroy_context@@Base>
   14924:	mov	r0, r8
   14928:	bl	13ed0 <free@plt>
   1492c:	ldr	r6, [r6]
   14930:	cmp	r6, #0
   14934:	beq	14a18 <flatcc_parse_file@@Base+0x384>
   14938:	ldr	r1, [r6, #12]
   1493c:	ldr	r0, [r6, #8]
   14940:	bl	28e5c <__flatcc_fb_copy_path_n@@Base>
   14944:	subs	r8, r0, #0
   14948:	beq	148b8 <flatcc_parse_file@@Base+0x224>
   1494c:	ldr	r5, [r4, #412]	; 0x19c
   14950:	ldr	r3, [r4, #132]	; 0x84
   14954:	ldr	r2, [r5, #52]	; 0x34
   14958:	cmp	r2, r3
   1495c:	cmpge	r3, #0
   14960:	bgt	148d8 <flatcc_parse_file@@Base+0x244>
   14964:	ldr	r3, [r4, #136]	; 0x88
   14968:	ldr	r2, [r5, #48]	; 0x30
   1496c:	cmp	r2, r3
   14970:	cmpge	r3, #0
   14974:	bgt	148e8 <flatcc_parse_file@@Base+0x254>
   14978:	mov	r0, fp
   1497c:	bl	13f3c <malloc@plt>
   14980:	subs	r7, r0, #0
   14984:	beq	14900 <flatcc_parse_file@@Base+0x26c>
   14988:	str	r5, [sp, #4]
   1498c:	ldr	r3, [r4, #12]
   14990:	str	r3, [sp]
   14994:	ldr	r3, [r4, #8]
   14998:	mov	r2, r8
   1499c:	mov	r1, sl
   149a0:	mov	r0, r7
   149a4:	bl	2ae9c <__flatcc_fb_init_parser@@Base>
   149a8:	cmp	r0, #0
   149ac:	bne	148f8 <flatcc_parse_file@@Base+0x264>
   149b0:	add	r1, r7, #352	; 0x160
   149b4:	add	r0, r5, #32
   149b8:	bl	28e1c <fb_schema_table_find_item@@Base>
   149bc:	cmp	r0, #0
   149c0:	bne	1490c <flatcc_parse_file@@Base+0x278>
   149c4:	ldr	r3, [r4]
   149c8:	str	r3, [r7]
   149cc:	str	r7, [r4]
   149d0:	ldr	r3, [r4, #548]	; 0x224
   149d4:	str	r3, [r7, #552]	; 0x228
   149d8:	ldr	r3, [r5, #52]	; 0x34
   149dc:	add	r3, r3, #1
   149e0:	str	r3, [r5, #52]	; 0x34
   149e4:	ldr	r3, [r5, #48]	; 0x30
   149e8:	add	r3, r3, #1
   149ec:	str	r3, [r5, #48]	; 0x30
   149f0:	mov	r1, r8
   149f4:	mov	r0, r7
   149f8:	bl	14694 <flatcc_parse_file@@Base>
   149fc:	cmp	r0, #0
   14a00:	bne	14900 <flatcc_parse_file@@Base+0x26c>
   14a04:	ldr	r2, [sp, #8]
   14a08:	ldr	r1, [pc, #676]	; 14cb4 <flatcc_parse_file@@Base+0x620>
   14a0c:	add	r0, r7, #524	; 0x20c
   14a10:	bl	2725c <ptr_set_visit@@Base>
   14a14:	b	14924 <flatcc_parse_file@@Base+0x290>
   14a18:	mov	r2, #1
   14a1c:	ldr	r1, [sp, #8]
   14a20:	add	r0, r4, #524	; 0x20c
   14a24:	bl	27204 <ptr_set_insert_item@@Base>
   14a28:	mov	r0, r4
   14a2c:	bl	2fbb4 <__flatcc_fb_build_schema@@Base>
   14a30:	subs	r5, r0, #0
   14a34:	bne	146d8 <flatcc_parse_file@@Base+0x44>
   14a38:	ldr	r1, [r4, #240]	; 0xf0
   14a3c:	ldr	r2, [sp, #12]
   14a40:	adds	r3, r1, #0
   14a44:	movne	r3, #1
   14a48:	cmp	r2, #0
   14a4c:	movne	r3, #0
   14a50:	cmp	r3, #0
   14a54:	moveq	r9, r5
   14a58:	beq	146d8 <flatcc_parse_file@@Base+0x44>
   14a5c:	ldr	r3, [r4, #552]	; 0x228
   14a60:	cmp	r3, #0
   14a64:	bne	14b30 <flatcc_parse_file@@Base+0x49c>
   14a68:	ldr	r6, [r4, #344]	; 0x158
   14a6c:	ldr	r3, [pc, #552]	; 14c9c <flatcc_parse_file@@Base+0x608>
   14a70:	cmp	r6, #0
   14a74:	moveq	r6, r3
   14a78:	ldr	r3, [r4, #512]	; 0x200
   14a7c:	ldr	r9, [r4, #248]	; 0xf8
   14a80:	ldr	r1, [r4, #244]	; 0xf4
   14a84:	cmp	r1, #0
   14a88:	ldrne	r2, [pc, #524]	; 14c9c <flatcc_parse_file@@Base+0x608>
   14a8c:	movne	r0, r2
   14a90:	moveq	r0, r6
   14a94:	moveq	r1, r3
   14a98:	ldreq	r2, [pc, #536]	; 14cb8 <flatcc_parse_file@@Base+0x624>
   14a9c:	cmp	r9, #0
   14aa0:	beq	14b44 <flatcc_parse_file@@Base+0x4b0>
   14aa4:	ldr	r6, [pc, #496]	; 14c9c <flatcc_parse_file@@Base+0x608>
   14aa8:	mov	r7, r6
   14aac:	mov	r3, #1
   14ab0:	bl	29078 <__flatcc_fb_create_join_path@@Base>
   14ab4:	mov	r8, r0
   14ab8:	bl	142e4 <main@@Base+0x174>
   14abc:	mov	r3, #1
   14ac0:	mov	r2, r7
   14ac4:	mov	r1, r9
   14ac8:	mov	r0, r6
   14acc:	bl	29078 <__flatcc_fb_create_join_path@@Base>
   14ad0:	mov	r6, r0
   14ad4:	bl	142e4 <main@@Base+0x174>
   14ad8:	mov	r0, r6
   14adc:	bl	29280 <__flatcc_fb_create_make_path@@Base>
   14ae0:	mov	r9, r0
   14ae4:	bl	142e4 <main@@Base+0x174>
   14ae8:	cmp	r6, #0
   14aec:	beq	14af8 <flatcc_parse_file@@Base+0x464>
   14af0:	mov	r0, r6
   14af4:	bl	13ed0 <free@plt>
   14af8:	ldr	r1, [pc, #444]	; 14cbc <flatcc_parse_file@@Base+0x628>
   14afc:	mov	r0, r8
   14b00:	bl	13ec4 <fopen@plt>
   14b04:	subs	r6, r0, #0
   14b08:	beq	14b60 <flatcc_parse_file@@Base+0x4cc>
   14b0c:	mov	r2, r9
   14b10:	ldr	r1, [pc, #424]	; 14cc0 <flatcc_parse_file@@Base+0x62c>
   14b14:	mov	r0, r6
   14b18:	bl	13f84 <fprintf@plt>
   14b1c:	ldr	r4, [r4]
   14b20:	cmp	r4, #0
   14b24:	beq	14bb4 <flatcc_parse_file@@Base+0x520>
   14b28:	ldr	sl, [pc, #404]	; 14cc4 <flatcc_parse_file@@Base+0x630>
   14b2c:	b	14b7c <flatcc_parse_file@@Base+0x4e8>
   14b30:	ldr	r3, [pc, #400]	; 14cc8 <flatcc_parse_file@@Base+0x634>
   14b34:	mov	r2, #220	; 0xdc
   14b38:	ldr	r1, [pc, #396]	; 14ccc <flatcc_parse_file@@Base+0x638>
   14b3c:	ldr	r0, [pc, #396]	; 14cd0 <flatcc_parse_file@@Base+0x63c>
   14b40:	bl	14038 <__assert_fail@plt>
   14b44:	ldr	ip, [r4, #308]	; 0x134
   14b48:	mov	r9, r3
   14b4c:	ldr	r3, [pc, #384]	; 14cd4 <flatcc_parse_file@@Base+0x640>
   14b50:	ldr	r7, [pc, #384]	; 14cd8 <flatcc_parse_file@@Base+0x644>
   14b54:	cmp	ip, #0
   14b58:	moveq	r7, r3
   14b5c:	b	14aac <flatcc_parse_file@@Base+0x418>
   14b60:	mov	r2, r8
   14b64:	ldr	r1, [pc, #368]	; 14cdc <flatcc_parse_file@@Base+0x648>
   14b68:	mov	r0, r4
   14b6c:	bl	29704 <__flatcc_fb_print_error@@Base>
   14b70:	b	14bc0 <flatcc_parse_file@@Base+0x52c>
   14b74:	cmp	r4, #0
   14b78:	beq	14bb4 <flatcc_parse_file@@Base+0x520>
   14b7c:	ldr	r0, [r4, #548]	; 0x224
   14b80:	bl	29280 <__flatcc_fb_create_make_path@@Base>
   14b84:	mov	r7, r0
   14b88:	bl	142e4 <main@@Base+0x174>
   14b8c:	mov	r2, r7
   14b90:	mov	r1, sl
   14b94:	mov	r0, r6
   14b98:	bl	13f84 <fprintf@plt>
   14b9c:	ldr	r4, [r4]
   14ba0:	cmp	r7, #0
   14ba4:	beq	14b74 <flatcc_parse_file@@Base+0x4e0>
   14ba8:	mov	r0, r7
   14bac:	bl	13ed0 <free@plt>
   14bb0:	b	14b74 <flatcc_parse_file@@Base+0x4e0>
   14bb4:	mov	r1, r6
   14bb8:	mov	r0, #10
   14bbc:	bl	13fe4 <fputc@plt>
   14bc0:	cmp	r8, #0
   14bc4:	beq	14bd0 <flatcc_parse_file@@Base+0x53c>
   14bc8:	mov	r0, r8
   14bcc:	bl	13ed0 <free@plt>
   14bd0:	cmp	r9, #0
   14bd4:	beq	14be0 <flatcc_parse_file@@Base+0x54c>
   14bd8:	mov	r0, r9
   14bdc:	bl	13ed0 <free@plt>
   14be0:	cmp	r6, #0
   14be4:	beq	14bf0 <flatcc_parse_file@@Base+0x55c>
   14be8:	mov	r0, r6
   14bec:	bl	13fcc <fclose@plt>
   14bf0:	mov	r9, r5
   14bf4:	b	146d8 <flatcc_parse_file@@Base+0x44>
   14bf8:	ldr	r3, [sp, #12]
   14bfc:	cmp	r3, #0
   14c00:	beq	14c7c <flatcc_parse_file@@Base+0x5e8>
   14c04:	ldr	r5, [r4, #552]	; 0x228
   14c08:	mov	r0, r5
   14c0c:	bl	13f78 <strlen@plt>
   14c10:	mov	r1, r0
   14c14:	mov	r0, r5
   14c18:	bl	2929c <__flatcc_fb_find_basename@@Base>
   14c1c:	mov	r3, #1
   14c20:	str	r3, [sp, #4]
   14c24:	ldr	r3, [pc, #112]	; 14c9c <flatcc_parse_file@@Base+0x608>
   14c28:	str	r3, [sp]
   14c2c:	mov	r3, r8
   14c30:	mov	r2, r7
   14c34:	mov	r1, r0
   14c38:	mov	r0, r5
   14c3c:	bl	28f38 <__flatcc_fb_create_join_path_n@@Base>
   14c40:	subs	r6, r0, #0
   14c44:	beq	14884 <flatcc_parse_file@@Base+0x1f0>
   14c48:	add	r2, sp, #20
   14c4c:	ldr	r1, [r4, #128]	; 0x80
   14c50:	mov	r0, r6
   14c54:	bl	29350 <__flatcc_fb_read_file@@Base>
   14c58:	subs	r9, r0, #0
   14c5c:	bne	14828 <flatcc_parse_file@@Base+0x194>
   14c60:	mov	r0, r6
   14c64:	bl	13ed0 <free@plt>
   14c68:	ldr	r3, [r4, #128]	; 0x80
   14c6c:	ldr	r2, [sp, #20]
   14c70:	cmp	r3, #0
   14c74:	cmpne	r3, r2
   14c78:	bcc	148a4 <flatcc_parse_file@@Base+0x210>
   14c7c:	mov	r2, r7
   14c80:	ldr	r1, [pc, #88]	; 14ce0 <flatcc_parse_file@@Base+0x64c>
   14c84:	mov	r0, r4
   14c88:	bl	29704 <__flatcc_fb_print_error@@Base>
   14c8c:	mvn	r9, #0
   14c90:	b	146d8 <flatcc_parse_file@@Base+0x44>
   14c94:	mov	r9, #0
   14c98:	b	146d8 <flatcc_parse_file@@Base+0x44>
   14c9c:	andeq	r5, r4, r0, lsr #2
   14ca0:	andeq	r6, r6, r8, lsr #1
   14ca4:	muleq	r3, r4, r3
   14ca8:	andeq	fp, r3, r8, asr #7
   14cac:	strdeq	fp, [r3], -r4
   14cb0:	andeq	fp, r3, r4, lsl r4
   14cb4:	ldrdeq	r4, [r1], -r0
   14cb8:	andeq	fp, r3, ip, ror #7
   14cbc:	muleq	r3, r4, r4
   14cc0:	andeq	fp, r3, r8, asr #9
   14cc4:	andeq	fp, r3, ip, asr #9
   14cc8:	andeq	fp, r3, r8, ror r3
   14ccc:	andeq	fp, r3, r4, lsr r4
   14cd0:	andeq	fp, r3, ip, ror r4
   14cd4:	andeq	r1, r5, r8, ror #27
   14cd8:			; <UNDEFINED> instruction: 0x0003b3b8
   14cdc:	muleq	r3, r8, r4
   14ce0:	ldrdeq	fp, [r3], -r0
   14ce4:	push	{r4, lr}
   14ce8:	mov	r0, r1
   14cec:	bl	13ed0 <free@plt>
   14cf0:	pop	{r4, pc}

00014cf4 <__flatcc_fb_open_output_file@@Base>:
   14cf4:	push	{r4, r5, r6, r7, r8, lr}
   14cf8:	sub	sp, sp, #8
   14cfc:	mov	r5, r0
   14d00:	mov	r6, r1
   14d04:	mov	r7, r2
   14d08:	mov	r8, r3
   14d0c:	ldr	r3, [r0, #212]	; 0xd4
   14d10:	ldr	r4, [r3, #216]	; 0xd8
   14d14:	ldr	r3, [pc, #180]	; 14dd0 <__flatcc_fb_open_output_file@@Base+0xdc>
   14d18:	cmp	r4, #0
   14d1c:	moveq	r4, r3
   14d20:	mov	r0, r4
   14d24:	bl	13f78 <strlen@plt>
   14d28:	ldr	r3, [r5, #204]	; 0xcc
   14d2c:	cmp	r3, #0
   14d30:	movne	r4, #0
   14d34:	beq	14d44 <__flatcc_fb_open_output_file@@Base+0x50>
   14d38:	mov	r0, r4
   14d3c:	add	sp, sp, #8
   14d40:	pop	{r4, r5, r6, r7, r8, pc}
   14d44:	mov	r3, #1
   14d48:	str	r3, [sp, #4]
   14d4c:	str	r8, [sp]
   14d50:	mov	r3, r7
   14d54:	mov	r2, r6
   14d58:	mov	r1, r0
   14d5c:	mov	r0, r4
   14d60:	bl	28f38 <__flatcc_fb_create_join_path_n@@Base>
   14d64:	subs	r6, r0, #0
   14d68:	beq	14d94 <__flatcc_fb_open_output_file@@Base+0xa0>
   14d6c:	ldr	r1, [pc, #96]	; 14dd4 <__flatcc_fb_open_output_file@@Base+0xe0>
   14d70:	mov	r0, r6
   14d74:	bl	13ec4 <fopen@plt>
   14d78:	str	r0, [r5, #204]	; 0xcc
   14d7c:	cmp	r0, #0
   14d80:	movne	r4, #0
   14d84:	beq	14db4 <__flatcc_fb_open_output_file@@Base+0xc0>
   14d88:	mov	r0, r6
   14d8c:	bl	13ed0 <free@plt>
   14d90:	b	14d38 <__flatcc_fb_open_output_file@@Base+0x44>
   14d94:	ldr	r3, [pc, #60]	; 14dd8 <__flatcc_fb_open_output_file@@Base+0xe4>
   14d98:	ldr	r3, [r3]
   14d9c:	mov	r2, #34	; 0x22
   14da0:	mov	r1, #1
   14da4:	ldr	r0, [pc, #48]	; 14ddc <__flatcc_fb_open_output_file@@Base+0xe8>
   14da8:	bl	13f18 <fwrite@plt>
   14dac:	mov	r0, #1
   14db0:	bl	13f6c <exit@plt>
   14db4:	mov	r2, r6
   14db8:	ldr	r1, [pc, #32]	; 14de0 <__flatcc_fb_open_output_file@@Base+0xec>
   14dbc:	ldr	r3, [pc, #20]	; 14dd8 <__flatcc_fb_open_output_file@@Base+0xe4>
   14dc0:	ldr	r0, [r3]
   14dc4:	bl	13f84 <fprintf@plt>
   14dc8:	mvn	r4, #0
   14dcc:	b	14d88 <__flatcc_fb_open_output_file@@Base+0x94>
   14dd0:	andeq	r5, r4, r0, lsr #2
   14dd4:	muleq	r3, r4, r4
   14dd8:	andeq	r6, r6, r8, lsr #1
   14ddc:	muleq	r3, r4, r3
   14de0:	strdeq	fp, [r3], -r8

00014de4 <__flatcc_fb_close_output_file@@Base>:
   14de4:	ldr	r3, [r0, #212]	; 0xd4
   14de8:	ldr	r2, [r3, #124]	; 0x7c
   14dec:	cmp	r2, #0
   14df0:	bxne	lr
   14df4:	ldr	r3, [r3, #108]	; 0x6c
   14df8:	cmp	r3, #0
   14dfc:	bxne	lr
   14e00:	ldr	r3, [r0, #204]	; 0xcc
   14e04:	cmp	r3, #0
   14e08:	bxeq	lr
   14e0c:	push	{r4, lr}
   14e10:	mov	r4, r0
   14e14:	mov	r0, r3
   14e18:	bl	13fcc <fclose@plt>
   14e1c:	mov	r3, #0
   14e20:	str	r3, [r4, #204]	; 0xcc
   14e24:	pop	{r4, pc}

00014e28 <__flatcc_fb_end_output_c@@Base>:
   14e28:	push	{r4, lr}
   14e2c:	mov	r4, r0
   14e30:	ldr	r0, [r0, #204]	; 0xcc
   14e34:	ldr	r3, [pc, #28]	; 14e58 <__flatcc_fb_end_output_c@@Base+0x30>
   14e38:	ldr	r3, [r3]
   14e3c:	cmp	r3, r0
   14e40:	cmpne	r0, #0
   14e44:	beq	14e4c <__flatcc_fb_end_output_c@@Base+0x24>
   14e48:	bl	13fcc <fclose@plt>
   14e4c:	mov	r3, #0
   14e50:	str	r3, [r4, #204]	; 0xcc
   14e54:	pop	{r4, pc}
   14e58:	andeq	r6, r6, ip, lsr #1

00014e5c <__flatcc_fb_init_output_c@@Base>:
   14e5c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e60:	mov	r6, r0
   14e64:	mov	r7, r1
   14e68:	ldr	r2, [r1, #128]	; 0x80
   14e6c:	ldr	r3, [pc, #448]	; 15034 <__flatcc_fb_init_output_c@@Base+0x1d8>
   14e70:	ldr	sl, [pc, #448]	; 15038 <__flatcc_fb_init_output_c@@Base+0x1dc>
   14e74:	cmp	r2, #0
   14e78:	moveq	sl, r3
   14e7c:	ldr	r9, [r1, #216]	; 0xd8
   14e80:	ldr	r3, [pc, #436]	; 1503c <__flatcc_fb_init_output_c@@Base+0x1e0>
   14e84:	cmp	r9, #0
   14e88:	moveq	r9, r3
   14e8c:	mov	r2, #232	; 0xe8
   14e90:	mov	r1, #0
   14e94:	bl	13f9c <memset@plt>
   14e98:	str	r7, [r6, #212]	; 0xd4
   14e9c:	ldr	r4, [r7, #196]	; 0xc4
   14ea0:	cmp	r4, #0
   14ea4:	beq	14ffc <__flatcc_fb_init_output_c@@Base+0x1a0>
   14ea8:	mov	r0, r4
   14eac:	bl	13f78 <strlen@plt>
   14eb0:	mov	r8, r0
   14eb4:	cmp	r0, #100	; 0x64
   14eb8:	bhi	14f88 <__flatcc_fb_init_output_c@@Base+0x12c>
   14ebc:	mov	fp, r6
   14ec0:	mov	r2, #100	; 0x64
   14ec4:	mov	r1, r4
   14ec8:	mov	r0, r6
   14ecc:	bl	13fa8 <strncpy@plt>
   14ed0:	mov	r3, #0
   14ed4:	strb	r3, [r6, #100]	; 0x64
   14ed8:	cmp	r8, r3
   14edc:	bne	1501c <__flatcc_fb_init_output_c@@Base+0x1c0>
   14ee0:	add	r5, r6, #102	; 0x66
   14ee4:	ldrb	r4, [fp]
   14ee8:	cmp	r4, #0
   14eec:	beq	14fa4 <__flatcc_fb_init_output_c@@Base+0x148>
   14ef0:	bl	13f54 <__ctype_toupper_loc@plt>
   14ef4:	mov	r2, fp
   14ef8:	mov	r3, r5
   14efc:	ldr	r1, [r0]
   14f00:	ldr	r1, [r1, r4, lsl #2]
   14f04:	strb	r1, [r3], #1
   14f08:	ldrb	r4, [r2, #1]!
   14f0c:	cmp	r4, #0
   14f10:	bne	14efc <__flatcc_fb_init_output_c@@Base+0xa0>
   14f14:	mov	r2, #0
   14f18:	strb	r2, [r3]
   14f1c:	add	r8, r6, r8
   14f20:	strb	r2, [r8, #102]	; 0x66
   14f24:	ldr	r3, [r7, #176]	; 0xb0
   14f28:	str	r3, [r6, #224]	; 0xe0
   14f2c:	ldr	r4, [r7, #108]	; 0x6c
   14f30:	cmp	r4, r2
   14f34:	bne	14fac <__flatcc_fb_init_output_c@@Base+0x150>
   14f38:	ldr	r3, [r6, #212]	; 0xd4
   14f3c:	ldr	r1, [r3, #124]	; 0x7c
   14f40:	cmp	r1, #0
   14f44:	beq	14f80 <__flatcc_fb_init_output_c@@Base+0x124>
   14f48:	mov	r3, #1
   14f4c:	ldr	r2, [pc, #232]	; 1503c <__flatcc_fb_init_output_c@@Base+0x1e0>
   14f50:	mov	r0, r9
   14f54:	bl	29078 <__flatcc_fb_create_join_path@@Base>
   14f58:	subs	r5, r0, #0
   14f5c:	beq	14fc0 <__flatcc_fb_init_output_c@@Base+0x164>
   14f60:	mov	r1, sl
   14f64:	mov	r0, r5
   14f68:	bl	13ec4 <fopen@plt>
   14f6c:	str	r0, [r6, #204]	; 0xcc
   14f70:	cmp	r0, #0
   14f74:	beq	14fe0 <__flatcc_fb_init_output_c@@Base+0x184>
   14f78:	mov	r0, r5
   14f7c:	bl	13ed0 <free@plt>
   14f80:	mov	r0, r4
   14f84:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f88:	mov	r2, #100	; 0x64
   14f8c:	ldr	r1, [pc, #172]	; 15040 <__flatcc_fb_init_output_c@@Base+0x1e4>
   14f90:	ldr	r3, [pc, #172]	; 15044 <__flatcc_fb_init_output_c@@Base+0x1e8>
   14f94:	ldr	r0, [r3]
   14f98:	bl	13f84 <fprintf@plt>
   14f9c:	mvn	r4, #0
   14fa0:	b	14f80 <__flatcc_fb_init_output_c@@Base+0x124>
   14fa4:	mov	r3, r5
   14fa8:	b	14f14 <__flatcc_fb_init_output_c@@Base+0xb8>
   14fac:	ldr	r3, [pc, #148]	; 15048 <__flatcc_fb_init_output_c@@Base+0x1ec>
   14fb0:	ldr	r3, [r3]
   14fb4:	str	r3, [r6, #204]	; 0xcc
   14fb8:	mov	r4, r2
   14fbc:	b	14f80 <__flatcc_fb_init_output_c@@Base+0x124>
   14fc0:	ldr	r3, [pc, #124]	; 15044 <__flatcc_fb_init_output_c@@Base+0x1e8>
   14fc4:	ldr	r3, [r3]
   14fc8:	mov	r2, #34	; 0x22
   14fcc:	mov	r1, #1
   14fd0:	ldr	r0, [pc, #116]	; 1504c <__flatcc_fb_init_output_c@@Base+0x1f0>
   14fd4:	bl	13f18 <fwrite@plt>
   14fd8:	mov	r0, #1
   14fdc:	bl	13f6c <exit@plt>
   14fe0:	mov	r2, r5
   14fe4:	ldr	r1, [pc, #100]	; 15050 <__flatcc_fb_init_output_c@@Base+0x1f4>
   14fe8:	ldr	r3, [pc, #84]	; 15044 <__flatcc_fb_init_output_c@@Base+0x1e8>
   14fec:	ldr	r0, [r3]
   14ff0:	bl	13f84 <fprintf@plt>
   14ff4:	mvn	r4, #0
   14ff8:	b	14f78 <__flatcc_fb_init_output_c@@Base+0x11c>
   14ffc:	mov	fp, r6
   15000:	mov	r2, #100	; 0x64
   15004:	ldr	r1, [pc, #72]	; 15054 <__flatcc_fb_init_output_c@@Base+0x1f8>
   15008:	mov	r0, r6
   1500c:	bl	13fa8 <strncpy@plt>
   15010:	mov	r3, #0
   15014:	strb	r3, [r6, #100]	; 0x64
   15018:	mov	r8, #11
   1501c:	mov	r3, r6
   15020:	mov	r2, #95	; 0x5f
   15024:	strb	r2, [r3, r8]!
   15028:	mov	r2, #0
   1502c:	strb	r2, [r3, #1]
   15030:	b	14ee0 <__flatcc_fb_init_output_c@@Base+0x84>
   15034:	muleq	r3, r4, r4
   15038:	andeq	fp, r3, ip, lsl r5
   1503c:	andeq	r5, r4, r0, lsr #2
   15040:	andeq	fp, r3, r0, lsr #10
   15044:	andeq	r6, r6, r8, lsr #1
   15048:	andeq	r6, r6, ip, lsr #1
   1504c:	muleq	r3, r4, r3
   15050:	strdeq	fp, [r3], -r8
   15054:	andeq	fp, r3, r8, asr r5

00015058 <__flatcc_fb_gen_c_includes@@Base>:
   15058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1505c:	sub	sp, sp, #36	; 0x24
   15060:	mov	r8, r0
   15064:	mov	sl, r1
   15068:	str	r2, [sp, #12]
   1506c:	ldr	r2, [r0, #208]	; 0xd0
   15070:	ldr	r5, [r2]
   15074:	mov	r3, #0
   15078:	str	r3, [sp, #16]
   1507c:	str	r3, [sp, #20]
   15080:	str	r3, [sp, #24]
   15084:	str	r3, [sp, #28]
   15088:	ldr	r0, [r2, #164]	; 0xa4
   1508c:	bl	28eac <__flatcc_fb_copy_path@@Base>
   15090:	mov	r2, #1
   15094:	mov	r1, r0
   15098:	add	r0, sp, #16
   1509c:	bl	26bf0 <str_set_insert_item@@Base>
   150a0:	cmp	r5, #0
   150a4:	beq	151a8 <__flatcc_fb_gen_c_includes@@Base+0x150>
   150a8:	mov	r9, #1
   150ac:	ldr	fp, [pc, #268]	; 151c0 <__flatcc_fb_gen_c_includes@@Base+0x168>
   150b0:	b	15120 <__flatcc_fb_gen_c_includes@@Base+0xc8>
   150b4:	ldr	r3, [pc, #264]	; 151c4 <__flatcc_fb_gen_c_includes@@Base+0x16c>
   150b8:	ldr	r3, [r3]
   150bc:	mov	r2, #34	; 0x22
   150c0:	mov	r1, #1
   150c4:	ldr	r0, [pc, #252]	; 151c8 <__flatcc_fb_gen_c_includes@@Base+0x170>
   150c8:	bl	13f18 <fwrite@plt>
   150cc:	mov	r0, #1
   150d0:	bl	13f6c <exit@plt>
   150d4:	ldr	r3, [pc, #232]	; 151c4 <__flatcc_fb_gen_c_includes@@Base+0x16c>
   150d8:	ldr	r3, [r3]
   150dc:	mov	r2, #34	; 0x22
   150e0:	mov	r1, #1
   150e4:	ldr	r0, [pc, #220]	; 151c8 <__flatcc_fb_gen_c_includes@@Base+0x170>
   150e8:	bl	13f18 <fwrite@plt>
   150ec:	mov	r0, #1
   150f0:	bl	13f6c <exit@plt>
   150f4:	str	sl, [sp, #4]
   150f8:	str	r7, [sp]
   150fc:	ldr	r3, [sp, #12]
   15100:	mov	r2, r6
   15104:	mov	r1, fp
   15108:	ldr	r0, [r8, #204]	; 0xcc
   1510c:	bl	13f84 <fprintf@plt>
   15110:	mov	r0, r7
   15114:	bl	13ed0 <free@plt>
   15118:	cmp	r5, #0
   1511c:	beq	151a8 <__flatcc_fb_gen_c_includes@@Base+0x150>
   15120:	ldr	r3, [r8, #212]	; 0xd4
   15124:	ldr	r2, [r3, #96]	; 0x60
   15128:	ldr	r1, [r5, #12]
   1512c:	ldr	r0, [r5, #8]
   15130:	bl	292f4 <__flatcc_fb_create_basename@@Base>
   15134:	subs	r7, r0, #0
   15138:	beq	150b4 <__flatcc_fb_gen_c_includes@@Base+0x5c>
   1513c:	ldr	r5, [r5]
   15140:	mov	r0, r7
   15144:	bl	28eac <__flatcc_fb_copy_path@@Base>
   15148:	subs	r6, r0, #0
   1514c:	beq	150d4 <__flatcc_fb_gen_c_includes@@Base+0x7c>
   15150:	ldrb	r4, [r6]
   15154:	cmp	r4, #0
   15158:	beq	1517c <__flatcc_fb_gen_c_includes@@Base+0x124>
   1515c:	bl	13f54 <__ctype_toupper_loc@plt>
   15160:	mov	r3, r6
   15164:	ldr	r2, [r0]
   15168:	ldr	r2, [r2, r4, lsl #2]
   1516c:	strb	r2, [r3]
   15170:	ldrb	r4, [r3, #1]!
   15174:	cmp	r4, #0
   15178:	bne	15164 <__flatcc_fb_gen_c_includes@@Base+0x10c>
   1517c:	mov	r2, r9
   15180:	mov	r1, r6
   15184:	add	r0, sp, #16
   15188:	bl	26bf0 <str_set_insert_item@@Base>
   1518c:	cmp	r0, #0
   15190:	beq	150f4 <__flatcc_fb_gen_c_includes@@Base+0x9c>
   15194:	mov	r0, r6
   15198:	bl	13ed0 <free@plt>
   1519c:	mov	r0, r7
   151a0:	bl	13ed0 <free@plt>
   151a4:	b	15118 <__flatcc_fb_gen_c_includes@@Base+0xc0>
   151a8:	mov	r2, #0
   151ac:	ldr	r1, [pc, #24]	; 151cc <__flatcc_fb_gen_c_includes@@Base+0x174>
   151b0:	add	r0, sp, #16
   151b4:	bl	26b4c <str_set_destroy@@Base>
   151b8:	add	sp, sp, #36	; 0x24
   151bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151c0:	andeq	fp, r3, r4, ror #10
   151c4:	andeq	r6, r6, r8, lsr #1
   151c8:	muleq	r3, r4, r3
   151cc:	andeq	r4, r1, r4, ror #25

000151d0 <__flatcc_fb_copy_scope@@Base>:
   151d0:	push	{r4, r5, r6, r7, r8, lr}
   151d4:	ldr	r6, [r0, #24]
   151d8:	ldr	r3, [r0]
   151dc:	cmp	r3, #0
   151e0:	beq	15274 <__flatcc_fb_copy_scope@@Base+0xa4>
   151e4:	mov	ip, r6
   151e8:	ldr	r2, [r3, #4]
   151ec:	ldr	r2, [r2, #4]
   151f0:	add	r2, r2, #1
   151f4:	add	ip, ip, r2
   151f8:	ldr	r3, [r3]
   151fc:	cmp	r3, #0
   15200:	bne	151e8 <__flatcc_fb_copy_scope@@Base+0x18>
   15204:	cmp	ip, #101	; 0x65
   15208:	bhi	1527c <__flatcc_fb_copy_scope@@Base+0xac>
   1520c:	mov	r7, r1
   15210:	mov	r4, r0
   15214:	mov	r2, r6
   15218:	ldr	r1, [r0, #20]
   1521c:	mov	r0, r7
   15220:	bl	13edc <memcpy@plt>
   15224:	ldr	r5, [r4]
   15228:	cmp	r5, #0
   1522c:	beq	15264 <__flatcc_fb_copy_scope@@Base+0x94>
   15230:	mov	r8, #95	; 0x5f
   15234:	ldr	r3, [r5, #4]
   15238:	ldr	r4, [r3, #4]
   1523c:	mov	r2, r4
   15240:	ldr	r1, [r3]
   15244:	add	r0, r7, r6
   15248:	bl	13edc <memcpy@plt>
   1524c:	add	r4, r4, r6
   15250:	add	r6, r4, #1
   15254:	strb	r8, [r7, r4]
   15258:	ldr	r5, [r5]
   1525c:	cmp	r5, #0
   15260:	bne	15234 <__flatcc_fb_copy_scope@@Base+0x64>
   15264:	mov	r3, #0
   15268:	strb	r3, [r7, r6]
   1526c:	mov	r0, r6
   15270:	pop	{r4, r5, r6, r7, r8, pc}
   15274:	mov	ip, r6
   15278:	b	15204 <__flatcc_fb_copy_scope@@Base+0x34>
   1527c:	mov	r3, #0
   15280:	strb	r3, [r1]
   15284:	mvn	r0, #0
   15288:	pop	{r4, r5, r6, r7, r8, pc}

0001528c <__flatcc_fb_scoped_symbol_name@@Base>:
   1528c:	push	{r4, r5, r6, lr}
   15290:	mov	r4, r2
   15294:	ldr	r5, [r1, #4]
   15298:	ldr	r3, [r2, #204]	; 0xcc
   1529c:	cmp	r3, r0
   152a0:	beq	152b8 <__flatcc_fb_scoped_symbol_name@@Base+0x2c>
   152a4:	mov	r1, r2
   152a8:	bl	151d0 <__flatcc_fb_copy_scope@@Base>
   152ac:	str	r0, [r4, #208]	; 0xd0
   152b0:	cmp	r0, #0
   152b4:	blt	152f8 <__flatcc_fb_scoped_symbol_name@@Base+0x6c>
   152b8:	ldr	r2, [r5, #4]
   152bc:	str	r2, [r4, #212]	; 0xd4
   152c0:	ldr	r3, [r4, #208]	; 0xd0
   152c4:	add	r3, r2, r3
   152c8:	str	r3, [r4, #216]	; 0xd8
   152cc:	cmp	r3, #203	; 0xcb
   152d0:	bgt	1531c <__flatcc_fb_scoped_symbol_name@@Base+0x90>
   152d4:	ldr	r0, [r4, #208]	; 0xd0
   152d8:	ldr	r2, [r4, #212]	; 0xd4
   152dc:	ldr	r1, [r5]
   152e0:	add	r0, r4, r0
   152e4:	bl	13edc <memcpy@plt>
   152e8:	ldr	r3, [r4, #216]	; 0xd8
   152ec:	mov	r2, #0
   152f0:	strb	r2, [r4, r3]
   152f4:	pop	{r4, r5, r6, pc}
   152f8:	mov	r3, #0
   152fc:	str	r3, [r4, #208]	; 0xd0
   15300:	ldr	r3, [pc, #64]	; 15348 <__flatcc_fb_scoped_symbol_name@@Base+0xbc>
   15304:	ldr	r3, [r3]
   15308:	mov	r2, #28
   1530c:	mov	r1, #1
   15310:	ldr	r0, [pc, #52]	; 1534c <__flatcc_fb_scoped_symbol_name@@Base+0xc0>
   15314:	bl	13f18 <fwrite@plt>
   15318:	b	152b8 <__flatcc_fb_scoped_symbol_name@@Base+0x2c>
   1531c:	ldr	r3, [r5]
   15320:	ldr	r1, [pc, #40]	; 15350 <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
   15324:	ldr	r0, [pc, #28]	; 15348 <__flatcc_fb_scoped_symbol_name@@Base+0xbc>
   15328:	ldr	r0, [r0]
   1532c:	bl	13f84 <fprintf@plt>
   15330:	ldr	r3, [r4, #208]	; 0xd0
   15334:	rsb	r3, r3, #203	; 0xcb
   15338:	str	r3, [r4, #212]	; 0xd4
   1533c:	mov	r3, #203	; 0xcb
   15340:	str	r3, [r4, #216]	; 0xd8
   15344:	b	152d4 <__flatcc_fb_scoped_symbol_name@@Base+0x48>
   15348:	andeq	r6, r6, r8, lsr #1
   1534c:	andeq	fp, r3, ip, lsl #11
   15350:	andeq	fp, r3, ip, lsr #11

00015354 <__flatcc_fb_codegen_common_c@@Base>:
   15354:	push	{r4, r5, r6, lr}
   15358:	mov	r4, r0
   1535c:	bl	13f78 <strlen@plt>
   15360:	sub	r6, r0, #1
   15364:	ldr	r3, [r4, #212]	; 0xd4
   15368:	ldr	r3, [r3, #144]	; 0x90
   1536c:	cmp	r3, #0
   15370:	bne	1538c <__flatcc_fb_codegen_common_c@@Base+0x38>
   15374:	ldr	r3, [r4, #212]	; 0xd4
   15378:	ldr	r5, [r3, #148]	; 0x94
   1537c:	cmp	r5, #0
   15380:	bne	153c8 <__flatcc_fb_codegen_common_c@@Base+0x74>
   15384:	mov	r0, r5
   15388:	pop	{r4, r5, r6, pc}
   1538c:	ldr	r3, [pc, #116]	; 15408 <__flatcc_fb_codegen_common_c@@Base+0xb4>
   15390:	mov	r2, r6
   15394:	mov	r1, r4
   15398:	mov	r0, r4
   1539c:	bl	14cf4 <__flatcc_fb_open_output_file@@Base>
   153a0:	cmp	r0, #0
   153a4:	bne	153f8 <__flatcc_fb_codegen_common_c@@Base+0xa4>
   153a8:	mov	r0, r4
   153ac:	bl	18544 <__flatcc_fb_gen_common_c_header@@Base>
   153b0:	mov	r5, r0
   153b4:	mov	r0, r4
   153b8:	bl	14de4 <__flatcc_fb_close_output_file@@Base>
   153bc:	cmp	r5, #0
   153c0:	bne	15384 <__flatcc_fb_codegen_common_c@@Base+0x30>
   153c4:	b	15374 <__flatcc_fb_codegen_common_c@@Base+0x20>
   153c8:	ldr	r3, [pc, #60]	; 1540c <__flatcc_fb_codegen_common_c@@Base+0xb8>
   153cc:	mov	r2, r6
   153d0:	mov	r1, r4
   153d4:	mov	r0, r4
   153d8:	bl	14cf4 <__flatcc_fb_open_output_file@@Base>
   153dc:	subs	r5, r0, #0
   153e0:	bne	15400 <__flatcc_fb_codegen_common_c@@Base+0xac>
   153e4:	mov	r0, r4
   153e8:	bl	1b6e4 <__flatcc_fb_gen_common_c_builder_header@@Base>
   153ec:	mov	r0, r4
   153f0:	bl	14de4 <__flatcc_fb_close_output_file@@Base>
   153f4:	b	15384 <__flatcc_fb_codegen_common_c@@Base+0x30>
   153f8:	mvn	r5, #0
   153fc:	b	15384 <__flatcc_fb_codegen_common_c@@Base+0x30>
   15400:	mvn	r5, #0
   15404:	b	15384 <__flatcc_fb_codegen_common_c@@Base+0x30>
   15408:	ldrdeq	fp, [r3], -r4
   1540c:	andeq	fp, r3, r8, ror #11

00015410 <__flatcc_fb_codegen_c@@Base>:
   15410:	push	{r4, r5, r6, lr}
   15414:	mov	r4, r0
   15418:	mov	r3, r1
   1541c:	str	r1, [r0, #208]	; 0xd0
   15420:	mov	r2, #0
   15424:	mov	r1, r2
   15428:	ldr	r0, [r3, #60]	; 0x3c
   1542c:	bl	287c8 <fb_scope_table_find@@Base>
   15430:	str	r0, [r4, #216]	; 0xd8
   15434:	ldr	r3, [r4, #208]	; 0xd0
   15438:	ldr	r5, [r3, #160]	; 0xa0
   1543c:	mov	r0, r5
   15440:	bl	13f78 <strlen@plt>
   15444:	mov	r6, r0
   15448:	ldr	r3, [r4, #212]	; 0xd4
   1544c:	ldr	r3, [r3, #152]	; 0x98
   15450:	cmp	r3, #0
   15454:	bne	154a0 <__flatcc_fb_codegen_c@@Base+0x90>
   15458:	ldr	r3, [r4, #212]	; 0xd4
   1545c:	ldr	r3, [r3, #156]	; 0x9c
   15460:	cmp	r3, #0
   15464:	bne	154d8 <__flatcc_fb_codegen_c@@Base+0xc8>
   15468:	ldr	r3, [r4, #212]	; 0xd4
   1546c:	ldr	r3, [r3, #160]	; 0xa0
   15470:	cmp	r3, #0
   15474:	bne	15514 <__flatcc_fb_codegen_c@@Base+0x104>
   15478:	ldr	r3, [r4, #212]	; 0xd4
   1547c:	ldr	r3, [r3, #164]	; 0xa4
   15480:	cmp	r3, #0
   15484:	bne	15550 <__flatcc_fb_codegen_c@@Base+0x140>
   15488:	ldr	r3, [r4, #212]	; 0xd4
   1548c:	ldr	r5, [r3, #168]	; 0xa8
   15490:	cmp	r5, #0
   15494:	bne	1558c <__flatcc_fb_codegen_c@@Base+0x17c>
   15498:	mov	r0, r5
   1549c:	pop	{r4, r5, r6, pc}
   154a0:	ldr	r3, [pc, #328]	; 155f0 <__flatcc_fb_codegen_c@@Base+0x1e0>
   154a4:	mov	r2, r0
   154a8:	mov	r1, r5
   154ac:	mov	r0, r4
   154b0:	bl	14cf4 <__flatcc_fb_open_output_file@@Base>
   154b4:	cmp	r0, #0
   154b8:	bne	155c8 <__flatcc_fb_codegen_c@@Base+0x1b8>
   154bc:	mov	r0, r4
   154c0:	bl	191a0 <__flatcc_fb_gen_c_reader@@Base>
   154c4:	subs	r5, r0, #0
   154c8:	bne	15498 <__flatcc_fb_codegen_c@@Base+0x88>
   154cc:	mov	r0, r4
   154d0:	bl	14de4 <__flatcc_fb_close_output_file@@Base>
   154d4:	b	15458 <__flatcc_fb_codegen_c@@Base+0x48>
   154d8:	ldr	r1, [r4, #208]	; 0xd0
   154dc:	ldr	r3, [pc, #272]	; 155f4 <__flatcc_fb_codegen_c@@Base+0x1e4>
   154e0:	mov	r2, r6
   154e4:	ldr	r1, [r1, #160]	; 0xa0
   154e8:	mov	r0, r4
   154ec:	bl	14cf4 <__flatcc_fb_open_output_file@@Base>
   154f0:	cmp	r0, #0
   154f4:	bne	155d0 <__flatcc_fb_codegen_c@@Base+0x1c0>
   154f8:	mov	r0, r4
   154fc:	bl	1bfa0 <__flatcc_fb_gen_c_builder@@Base>
   15500:	subs	r5, r0, #0
   15504:	bne	15498 <__flatcc_fb_codegen_c@@Base+0x88>
   15508:	mov	r0, r4
   1550c:	bl	14de4 <__flatcc_fb_close_output_file@@Base>
   15510:	b	15468 <__flatcc_fb_codegen_c@@Base+0x58>
   15514:	ldr	r1, [r4, #208]	; 0xd0
   15518:	ldr	r3, [pc, #216]	; 155f8 <__flatcc_fb_codegen_c@@Base+0x1e8>
   1551c:	mov	r2, r6
   15520:	ldr	r1, [r1, #160]	; 0xa0
   15524:	mov	r0, r4
   15528:	bl	14cf4 <__flatcc_fb_open_output_file@@Base>
   1552c:	cmp	r0, #0
   15530:	bne	155d8 <__flatcc_fb_codegen_c@@Base+0x1c8>
   15534:	mov	r0, r4
   15538:	bl	1dbe4 <__flatcc_fb_gen_c_verifier@@Base>
   1553c:	subs	r5, r0, #0
   15540:	bne	15498 <__flatcc_fb_codegen_c@@Base+0x88>
   15544:	mov	r0, r4
   15548:	bl	14de4 <__flatcc_fb_close_output_file@@Base>
   1554c:	b	15478 <__flatcc_fb_codegen_c@@Base+0x68>
   15550:	ldr	r1, [r4, #208]	; 0xd0
   15554:	ldr	r3, [pc, #160]	; 155fc <__flatcc_fb_codegen_c@@Base+0x1ec>
   15558:	mov	r2, r6
   1555c:	ldr	r1, [r1, #160]	; 0xa0
   15560:	mov	r0, r4
   15564:	bl	14cf4 <__flatcc_fb_open_output_file@@Base>
   15568:	cmp	r0, #0
   1556c:	bne	155e0 <__flatcc_fb_codegen_c@@Base+0x1d0>
   15570:	mov	r0, r4
   15574:	bl	211ec <__flatcc_fb_gen_c_json_parser@@Base>
   15578:	subs	r5, r0, #0
   1557c:	bne	15498 <__flatcc_fb_codegen_c@@Base+0x88>
   15580:	mov	r0, r4
   15584:	bl	14de4 <__flatcc_fb_close_output_file@@Base>
   15588:	b	15488 <__flatcc_fb_codegen_c@@Base+0x78>
   1558c:	ldr	r1, [r4, #208]	; 0xd0
   15590:	ldr	r3, [pc, #104]	; 15600 <__flatcc_fb_codegen_c@@Base+0x1f0>
   15594:	mov	r2, r6
   15598:	ldr	r1, [r1, #160]	; 0xa0
   1559c:	mov	r0, r4
   155a0:	bl	14cf4 <__flatcc_fb_open_output_file@@Base>
   155a4:	cmp	r0, #0
   155a8:	bne	155e8 <__flatcc_fb_codegen_c@@Base+0x1d8>
   155ac:	mov	r0, r4
   155b0:	bl	241e8 <__flatcc_fb_gen_c_json_printer@@Base>
   155b4:	subs	r5, r0, #0
   155b8:	bne	15498 <__flatcc_fb_codegen_c@@Base+0x88>
   155bc:	mov	r0, r4
   155c0:	bl	14de4 <__flatcc_fb_close_output_file@@Base>
   155c4:	b	15498 <__flatcc_fb_codegen_c@@Base+0x88>
   155c8:	mvn	r5, #0
   155cc:	b	15498 <__flatcc_fb_codegen_c@@Base+0x88>
   155d0:	mvn	r5, #0
   155d4:	b	15498 <__flatcc_fb_codegen_c@@Base+0x88>
   155d8:	mvn	r5, #0
   155dc:	b	15498 <__flatcc_fb_codegen_c@@Base+0x88>
   155e0:	mvn	r5, #0
   155e4:	b	15498 <__flatcc_fb_codegen_c@@Base+0x88>
   155e8:	mvn	r5, #0
   155ec:	b	15498 <__flatcc_fb_codegen_c@@Base+0x88>
   155f0:	andeq	r1, r5, r8, ror #27
   155f4:	andeq	r1, r5, ip, asr #29
   155f8:	strdeq	fp, [r3], -ip
   155fc:	andeq	fp, r3, r8, lsl #12
   15600:	andeq	fp, r3, r8, lsl r6
   15604:	push	{r4, r5, lr}
   15608:	sub	sp, sp, #228	; 0xe4
   1560c:	mov	r4, r0
   15610:	mov	r5, r1
   15614:	mov	r2, #220	; 0xdc
   15618:	mov	r1, #0
   1561c:	add	r0, sp, #4
   15620:	bl	13f9c <memset@plt>
   15624:	ldrh	r3, [r5, #8]
   15628:	cmp	r3, #1
   1562c:	bhi	15690 <__flatcc_fb_codegen_c@@Base+0x280>
   15630:	add	r2, sp, #4
   15634:	mov	r1, r5
   15638:	ldr	r0, [r5, #12]
   1563c:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   15640:	ldrh	r3, [r5, #8]
   15644:	cmp	r3, #1
   15648:	beq	156a4 <__flatcc_fb_codegen_c@@Base+0x294>
   1564c:	add	r3, sp, #4
   15650:	mov	r2, r3
   15654:	ldr	r1, [pc, #208]	; 1572c <__flatcc_fb_codegen_c@@Base+0x31c>
   15658:	ldr	r0, [r4, #204]	; 0xcc
   1565c:	bl	13f84 <fprintf@plt>
   15660:	add	r3, sp, #4
   15664:	mov	r2, r4
   15668:	ldr	r1, [pc, #192]	; 15730 <__flatcc_fb_codegen_c@@Base+0x320>
   1566c:	ldr	r0, [r4, #204]	; 0xcc
   15670:	bl	13f84 <fprintf@plt>
   15674:	add	r3, sp, #4
   15678:	mov	r2, r4
   1567c:	ldr	r1, [pc, #176]	; 15734 <__flatcc_fb_codegen_c@@Base+0x324>
   15680:	ldr	r0, [r4, #204]	; 0xcc
   15684:	bl	13f84 <fprintf@plt>
   15688:	add	sp, sp, #228	; 0xe4
   1568c:	pop	{r4, r5, pc}
   15690:	ldr	r3, [pc, #160]	; 15738 <__flatcc_fb_codegen_c@@Base+0x328>
   15694:	ldr	r2, [pc, #160]	; 1573c <__flatcc_fb_codegen_c@@Base+0x32c>
   15698:	ldr	r1, [pc, #160]	; 15740 <__flatcc_fb_codegen_c@@Base+0x330>
   1569c:	ldr	r0, [pc, #160]	; 15744 <__flatcc_fb_codegen_c@@Base+0x334>
   156a0:	bl	14038 <__assert_fail@plt>
   156a4:	ldrd	r2, [r5, #112]	; 0x70
   156a8:	orrs	r3, r2, r3
   156ac:	bne	15714 <__flatcc_fb_codegen_c@@Base+0x304>
   156b0:	add	r2, sp, #4
   156b4:	ldr	r1, [pc, #140]	; 15748 <__flatcc_fb_codegen_c@@Base+0x338>
   156b8:	ldr	r0, [r4, #204]	; 0xcc
   156bc:	bl	13f84 <fprintf@plt>
   156c0:	add	r3, sp, #4
   156c4:	mov	r2, r3
   156c8:	ldr	r1, [pc, #124]	; 1574c <__flatcc_fb_codegen_c@@Base+0x33c>
   156cc:	ldr	r0, [r4, #204]	; 0xcc
   156d0:	bl	13f84 <fprintf@plt>
   156d4:	add	r3, sp, #4
   156d8:	mov	r2, r3
   156dc:	ldr	r1, [pc, #108]	; 15750 <__flatcc_fb_codegen_c@@Base+0x340>
   156e0:	ldr	r0, [r4, #204]	; 0xcc
   156e4:	bl	13f84 <fprintf@plt>
   156e8:	add	r3, sp, #4
   156ec:	mov	r2, r3
   156f0:	ldr	r1, [pc, #92]	; 15754 <__flatcc_fb_codegen_c@@Base+0x344>
   156f4:	ldr	r0, [r4, #204]	; 0xcc
   156f8:	bl	13f84 <fprintf@plt>
   156fc:	add	r3, sp, #4
   15700:	mov	r2, r3
   15704:	ldr	r1, [pc, #76]	; 15758 <__flatcc_fb_codegen_c@@Base+0x348>
   15708:	ldr	r0, [r4, #204]	; 0xcc
   1570c:	bl	13f84 <fprintf@plt>
   15710:	b	15688 <__flatcc_fb_codegen_c@@Base+0x278>
   15714:	add	r3, sp, #4
   15718:	mov	r2, r3
   1571c:	ldr	r1, [pc, #56]	; 1575c <__flatcc_fb_codegen_c@@Base+0x34c>
   15720:	ldr	r0, [r4, #204]	; 0xcc
   15724:	bl	13f84 <fprintf@plt>
   15728:	b	156c0 <__flatcc_fb_codegen_c@@Base+0x2b0>
   1572c:	andeq	fp, r3, ip, asr #16
   15730:	andeq	fp, r3, r8, ror r8
   15734:	andeq	fp, r3, r0, lsr #17
   15738:	andeq	fp, r3, r8, lsr #12
   1573c:	andeq	r0, r0, pc, asr r3
   15740:	andeq	fp, r3, r8, ror #13
   15744:	andeq	fp, r3, r8, lsr r7
   15748:	andeq	fp, r3, ip, ror r7
   1574c:	andeq	fp, r3, r0, asr #15
   15750:	andeq	fp, r3, r4, ror #15
   15754:	andeq	fp, r3, r8, lsl #16
   15758:	andeq	fp, r3, r8, lsr #16
   1575c:	andeq	fp, r3, r4, lsr #15
   15760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15764:	sub	sp, sp, #348	; 0x15c
   15768:	mov	r4, r0
   1576c:	mov	r6, r1
   15770:	mov	r2, #220	; 0xdc
   15774:	mov	r1, #0
   15778:	add	r0, sp, #24
   1577c:	bl	13f9c <memset@plt>
   15780:	ldrh	sl, [r6, #8]
   15784:	sub	r3, sl, #3
   15788:	uxth	r3, r3
   1578c:	cmp	r3, #1
   15790:	bhi	157e8 <__flatcc_fb_codegen_c@@Base+0x3d8>
   15794:	ldrh	r3, [r6, #48]	; 0x30
   15798:	cmp	r3, #8
   1579c:	bne	157fc <__flatcc_fb_codegen_c@@Base+0x3ec>
   157a0:	ldr	r3, [r6, #40]	; 0x28
   157a4:	cmp	r3, #5
   157a8:	beq	15878 <__flatcc_fb_codegen_c@@Base+0x468>
   157ac:	sub	r3, r3, #1
   157b0:	cmp	r3, #10
   157b4:	ldrls	pc, [pc, r3, lsl #2]
   157b8:	b	1590c <__flatcc_fb_codegen_c@@Base+0x4fc>
   157bc:	andeq	r5, r1, r4, asr #18
   157c0:	andeq	r5, r1, r0, lsl r8
   157c4:	andeq	r5, r1, r8, asr r9
   157c8:	andeq	r5, r1, r4, lsr #16
   157cc:	andeq	r5, r1, r8, lsl #17
   157d0:	muleq	r1, r4, r8
   157d4:	andeq	r5, r1, r8, lsr #17
   157d8:			; <UNDEFINED> instruction: 0x000158bc
   157dc:	ldrdeq	r5, [r1], -r0
   157e0:	strdeq	r5, [r1], -r8
   157e4:	andeq	r5, r1, r4, ror #17
   157e8:	ldr	r3, [pc, #2268]	; 160cc <__flatcc_fb_codegen_c@@Base+0xcbc>
   157ec:	ldr	r2, [pc, #2268]	; 160d0 <__flatcc_fb_codegen_c@@Base+0xcc0>
   157f0:	ldr	r1, [pc, #2268]	; 160d4 <__flatcc_fb_codegen_c@@Base+0xcc4>
   157f4:	ldr	r0, [pc, #2268]	; 160d8 <__flatcc_fb_codegen_c@@Base+0xcc8>
   157f8:	bl	14038 <__assert_fail@plt>
   157fc:	ldr	r3, [pc, #2248]	; 160cc <__flatcc_fb_codegen_c@@Base+0xcbc>
   15800:	ldr	r2, [pc, #2260]	; 160dc <__flatcc_fb_codegen_c@@Base+0xccc>
   15804:	ldr	r1, [pc, #2248]	; 160d4 <__flatcc_fb_codegen_c@@Base+0xcc4>
   15808:	ldr	r0, [pc, #2256]	; 160e0 <__flatcc_fb_codegen_c@@Base+0xcd0>
   1580c:	bl	14038 <__assert_fail@plt>
   15810:	ldr	r3, [pc, #2252]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   15814:	str	r3, [sp, #16]
   15818:	ldr	r3, [pc, #2248]	; 160e8 <__flatcc_fb_codegen_c@@Base+0xcd8>
   1581c:	str	r3, [sp, #20]
   15820:	b	15834 <__flatcc_fb_codegen_c@@Base+0x424>
   15824:	ldr	r3, [pc, #2232]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   15828:	str	r3, [sp, #16]
   1582c:	ldr	r3, [pc, #2232]	; 160ec <__flatcc_fb_codegen_c@@Base+0xcdc>
   15830:	str	r3, [sp, #20]
   15834:	ldr	fp, [r6, #112]	; 0x70
   15838:	lsl	fp, fp, #3
   1583c:	cmp	sl, #3
   15840:	beq	1596c <__flatcc_fb_codegen_c@@Base+0x55c>
   15844:	add	r2, sp, #24
   15848:	mov	r1, r6
   1584c:	ldr	r0, [r6, #12]
   15850:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   15854:	ldr	r5, [r6, #32]
   15858:	cmp	r5, #0
   1585c:	beq	15fdc <__flatcc_fb_codegen_c@@Base+0xbcc>
   15860:	ldr	r9, [pc, #2184]	; 160f0 <__flatcc_fb_codegen_c@@Base+0xce0>
   15864:	mov	r1, #1
   15868:	mov	r3, #0
   1586c:	ldr	r8, [pc, #2176]	; 160f4 <__flatcc_fb_codegen_c@@Base+0xce4>
   15870:	mov	r7, r3
   15874:	b	159c0 <__flatcc_fb_codegen_c@@Base+0x5b0>
   15878:	str	r4, [sp, #16]
   1587c:	ldr	r3, [pc, #2164]	; 160f8 <__flatcc_fb_codegen_c@@Base+0xce8>
   15880:	str	r3, [sp, #20]
   15884:	b	15834 <__flatcc_fb_codegen_c@@Base+0x424>
   15888:	ldr	r3, [pc, #2132]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   1588c:	str	r3, [sp, #16]
   15890:	b	1587c <__flatcc_fb_codegen_c@@Base+0x46c>
   15894:	ldr	r3, [pc, #2120]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   15898:	str	r3, [sp, #16]
   1589c:	ldr	r3, [pc, #2136]	; 160fc <__flatcc_fb_codegen_c@@Base+0xcec>
   158a0:	str	r3, [sp, #20]
   158a4:	b	15834 <__flatcc_fb_codegen_c@@Base+0x424>
   158a8:	ldr	r3, [pc, #2100]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   158ac:	str	r3, [sp, #16]
   158b0:	ldr	r3, [pc, #2120]	; 16100 <__flatcc_fb_codegen_c@@Base+0xcf0>
   158b4:	str	r3, [sp, #20]
   158b8:	b	15834 <__flatcc_fb_codegen_c@@Base+0x424>
   158bc:	ldr	r3, [pc, #2080]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   158c0:	str	r3, [sp, #16]
   158c4:	ldr	r3, [pc, #2104]	; 16104 <__flatcc_fb_codegen_c@@Base+0xcf4>
   158c8:	str	r3, [sp, #20]
   158cc:	b	15834 <__flatcc_fb_codegen_c@@Base+0x424>
   158d0:	ldr	r3, [pc, #2060]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   158d4:	str	r3, [sp, #16]
   158d8:	ldr	r3, [pc, #2088]	; 16108 <__flatcc_fb_codegen_c@@Base+0xcf8>
   158dc:	str	r3, [sp, #20]
   158e0:	b	15834 <__flatcc_fb_codegen_c@@Base+0x424>
   158e4:	ldr	r3, [pc, #2040]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   158e8:	str	r3, [sp, #16]
   158ec:	ldr	r3, [pc, #2072]	; 1610c <__flatcc_fb_codegen_c@@Base+0xcfc>
   158f0:	str	r3, [sp, #20]
   158f4:	b	15834 <__flatcc_fb_codegen_c@@Base+0x424>
   158f8:	ldr	r3, [pc, #2020]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   158fc:	str	r3, [sp, #16]
   15900:	ldr	r3, [pc, #2056]	; 16110 <__flatcc_fb_codegen_c@@Base+0xd00>
   15904:	str	r3, [sp, #20]
   15908:	b	15834 <__flatcc_fb_codegen_c@@Base+0x424>
   1590c:	ldr	r4, [pc, #2048]	; 16114 <__flatcc_fb_codegen_c@@Base+0xd04>
   15910:	ldr	r3, [pc, #2048]	; 16118 <__flatcc_fb_codegen_c@@Base+0xd08>
   15914:	ldr	r0, [r3]
   15918:	ldr	r3, [pc, #2044]	; 1611c <__flatcc_fb_codegen_c@@Base+0xd0c>
   1591c:	str	r3, [sp]
   15920:	mov	r3, #141	; 0x8d
   15924:	mov	r2, r4
   15928:	ldr	r1, [pc, #2032]	; 16120 <__flatcc_fb_codegen_c@@Base+0xd10>
   1592c:	bl	13f84 <fprintf@plt>
   15930:	ldr	r3, [pc, #2028]	; 16124 <__flatcc_fb_codegen_c@@Base+0xd14>
   15934:	mov	r2, #141	; 0x8d
   15938:	mov	r1, r4
   1593c:	ldr	r0, [pc, #2020]	; 16128 <__flatcc_fb_codegen_c@@Base+0xd18>
   15940:	bl	14038 <__assert_fail@plt>
   15944:	ldr	r3, [pc, #1944]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   15948:	str	r3, [sp, #16]
   1594c:	ldr	r3, [pc, #2008]	; 1612c <__flatcc_fb_codegen_c@@Base+0xd1c>
   15950:	str	r3, [sp, #20]
   15954:	b	15834 <__flatcc_fb_codegen_c@@Base+0x424>
   15958:	ldr	r3, [pc, #1924]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   1595c:	str	r3, [sp, #16]
   15960:	ldr	r3, [pc, #1992]	; 16130 <__flatcc_fb_codegen_c@@Base+0xd20>
   15964:	str	r3, [sp, #20]
   15968:	b	15834 <__flatcc_fb_codegen_c@@Base+0x424>
   1596c:	add	r2, sp, #24
   15970:	mov	r1, r6
   15974:	ldr	r0, [r6, #12]
   15978:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1597c:	ldr	r5, [r6, #32]
   15980:	cmp	r5, #0
   15984:	beq	16084 <__flatcc_fb_codegen_c@@Base+0xc74>
   15988:	ldr	r9, [pc, #1956]	; 16134 <__flatcc_fb_codegen_c@@Base+0xd24>
   1598c:	b	15864 <__flatcc_fb_codegen_c@@Base+0x454>
   15990:	ldr	r2, [r5, #4]
   15994:	ldr	r3, [r2]
   15998:	ldr	r2, [r2, #4]
   1599c:	mov	r1, r8
   159a0:	ldr	r0, [r4, #204]	; 0xcc
   159a4:	bl	13f84 <fprintf@plt>
   159a8:	ldr	r3, [r5, #4]
   159ac:	ldr	r3, [r3, #8]
   159b0:	ldr	r5, [r5]
   159b4:	mov	r1, r7
   159b8:	cmp	r5, #0
   159bc:	beq	159ec <__flatcc_fb_codegen_c@@Base+0x5dc>
   159c0:	ldr	r2, [r5, #4]
   159c4:	ldr	r2, [r2, #8]
   159c8:	cmp	r2, r3
   159cc:	beq	15990 <__flatcc_fb_codegen_c@@Base+0x580>
   159d0:	cmp	r1, #0
   159d4:	ldr	r2, [pc, #1800]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   159d8:	ldrne	r1, [pc, #1880]	; 16138 <__flatcc_fb_codegen_c@@Base+0xd28>
   159dc:	ldreq	r1, [pc, #1880]	; 1613c <__flatcc_fb_codegen_c@@Base+0xd2c>
   159e0:	ldr	r0, [r4, #204]	; 0xcc
   159e4:	bl	13f84 <fprintf@plt>
   159e8:	b	15990 <__flatcc_fb_codegen_c@@Base+0x580>
   159ec:	ldr	r3, [r4, #204]	; 0xcc
   159f0:	mov	r2, #4
   159f4:	mov	r1, #1
   159f8:	ldr	r0, [pc, #1856]	; 16140 <__flatcc_fb_codegen_c@@Base+0xd30>
   159fc:	bl	13f18 <fwrite@plt>
   15a00:	str	r9, [sp, #4]
   15a04:	add	r5, sp, #24
   15a08:	str	r5, [sp]
   15a0c:	ldr	r3, [sp, #20]
   15a10:	ldr	r2, [sp, #16]
   15a14:	ldr	r1, [pc, #1832]	; 16144 <__flatcc_fb_codegen_c@@Base+0xd34>
   15a18:	ldr	r0, [r4, #204]	; 0xcc
   15a1c:	bl	13f84 <fprintf@plt>
   15a20:	str	fp, [sp, #8]
   15a24:	str	r9, [sp, #4]
   15a28:	str	r5, [sp]
   15a2c:	mov	r3, r5
   15a30:	mov	r2, r4
   15a34:	ldr	r1, [pc, #1804]	; 16148 <__flatcc_fb_codegen_c@@Base+0xd38>
   15a38:	ldr	r0, [r4, #204]	; 0xcc
   15a3c:	bl	13f84 <fprintf@plt>
   15a40:	cmp	sl, #3
   15a44:	bne	16020 <__flatcc_fb_codegen_c@@Base+0xc10>
   15a48:	ldr	fp, [r6, #20]
   15a4c:	cmp	fp, #0
   15a50:	bne	16048 <__flatcc_fb_codegen_c@@Base+0xc38>
   15a54:	ldr	r1, [r4, #204]	; 0xcc
   15a58:	mov	r0, #10
   15a5c:	bl	13fe4 <fputc@plt>
   15a60:	add	r3, sp, #24
   15a64:	mov	r2, r3
   15a68:	ldr	r1, [pc, #1756]	; 1614c <__flatcc_fb_codegen_c@@Base+0xd3c>
   15a6c:	ldr	r0, [r4, #204]	; 0xcc
   15a70:	bl	13f84 <fprintf@plt>
   15a74:	ldr	r3, [r4, #204]	; 0xcc
   15a78:	mov	r2, #21
   15a7c:	mov	r1, #1
   15a80:	ldr	r0, [pc, #1736]	; 16150 <__flatcc_fb_codegen_c@@Base+0xd40>
   15a84:	bl	13f18 <fwrite@plt>
   15a88:	ldr	r5, [r6, #20]
   15a8c:	cmp	r5, #0
   15a90:	bne	15ed0 <__flatcc_fb_codegen_c@@Base+0xac0>
   15a94:	ldr	r3, [r4, #204]	; 0xcc
   15a98:	mov	r2, #32
   15a9c:	mov	r1, #1
   15aa0:	ldr	r0, [pc, #1708]	; 16154 <__flatcc_fb_codegen_c@@Base+0xd44>
   15aa4:	bl	13f18 <fwrite@plt>
   15aa8:	ldr	r1, [r4, #204]	; 0xcc
   15aac:	mov	r0, #10
   15ab0:	bl	13fe4 <fputc@plt>
   15ab4:	add	r3, sp, #24
   15ab8:	mov	r2, r3
   15abc:	ldr	r1, [pc, #1684]	; 16158 <__flatcc_fb_codegen_c@@Base+0xd48>
   15ac0:	ldr	r0, [r4, #204]	; 0xcc
   15ac4:	bl	13f84 <fprintf@plt>
   15ac8:	ldr	r3, [r4, #204]	; 0xcc
   15acc:	mov	r2, #21
   15ad0:	mov	r1, #1
   15ad4:	ldr	r0, [pc, #1652]	; 16150 <__flatcc_fb_codegen_c@@Base+0xd40>
   15ad8:	bl	13f18 <fwrite@plt>
   15adc:	b	15f68 <__flatcc_fb_codegen_c@@Base+0xb58>
   15ae0:	ldr	r2, [r5, #4]
   15ae4:	ldr	r3, [r2]
   15ae8:	ldr	r2, [r2, #4]
   15aec:	mov	r1, r8
   15af0:	ldr	r0, [r4, #204]	; 0xcc
   15af4:	bl	13f84 <fprintf@plt>
   15af8:	ldr	r3, [r5, #4]
   15afc:	ldr	r3, [r3, #8]
   15b00:	ldr	r5, [r5]
   15b04:	mov	r1, r7
   15b08:	cmp	r5, #0
   15b0c:	beq	15b3c <__flatcc_fb_codegen_c@@Base+0x72c>
   15b10:	ldr	r2, [r5, #4]
   15b14:	ldr	r2, [r2, #8]
   15b18:	cmp	r2, r3
   15b1c:	beq	15ae0 <__flatcc_fb_codegen_c@@Base+0x6d0>
   15b20:	cmp	r1, #0
   15b24:	ldr	r2, [pc, #1464]	; 160e4 <__flatcc_fb_codegen_c@@Base+0xcd4>
   15b28:	ldrne	r1, [pc, #1544]	; 16138 <__flatcc_fb_codegen_c@@Base+0xd28>
   15b2c:	ldreq	r1, [pc, #1544]	; 1613c <__flatcc_fb_codegen_c@@Base+0xd2c>
   15b30:	ldr	r0, [r4, #204]	; 0xcc
   15b34:	bl	13f84 <fprintf@plt>
   15b38:	b	15ae0 <__flatcc_fb_codegen_c@@Base+0x6d0>
   15b3c:	ldr	r3, [r4, #204]	; 0xcc
   15b40:	mov	r2, #4
   15b44:	mov	r1, #1
   15b48:	ldr	r0, [pc, #1520]	; 16140 <__flatcc_fb_codegen_c@@Base+0xd30>
   15b4c:	bl	13f18 <fwrite@plt>
   15b50:	ldr	r3, [fp, #4]
   15b54:	ldr	r5, [r3, #4]
   15b58:	ldr	r7, [r3]
   15b5c:	ldr	r2, [r6, #40]	; 0x28
   15b60:	ldrh	r3, [fp, #56]	; 0x38
   15b64:	sub	r3, r3, #3
   15b68:	cmp	r3, #3
   15b6c:	ldrls	pc, [pc, r3, lsl #2]
   15b70:	b	15e50 <__flatcc_fb_codegen_c@@Base+0xa40>
   15b74:	ldrdeq	r5, [r1], -r8
   15b78:	andeq	r5, r1, ip, asr #24
   15b7c:	andeq	r5, r1, r4, lsl #23
   15b80:	andeq	r5, r1, r4, lsl sp
   15b84:	sub	r2, r2, #1
   15b88:	cmp	r2, #8
   15b8c:	ldrls	pc, [pc, r2, lsl #2]
   15b90:	b	15bf0 <__flatcc_fb_codegen_c@@Base+0x7e0>
   15b94:	andeq	r5, r1, r8, lsr #24
   15b98:			; <UNDEFINED> instruction: 0x00015bb8
   15b9c:	andeq	r5, r1, r0, lsr ip
   15ba0:	andeq	r5, r1, r0, asr #23
   15ba4:	andeq	r5, r1, r8, asr #23
   15ba8:	ldrdeq	r5, [r1], -r0
   15bac:	ldrdeq	r5, [r1], -r8
   15bb0:	andeq	r5, r1, r0, ror #23
   15bb4:	andeq	r5, r1, r8, ror #23
   15bb8:	ldr	r2, [pc, #1436]	; 1615c <__flatcc_fb_codegen_c@@Base+0xd4c>
   15bbc:	b	15c34 <__flatcc_fb_codegen_c@@Base+0x824>
   15bc0:	ldr	r2, [pc, #1432]	; 16160 <__flatcc_fb_codegen_c@@Base+0xd50>
   15bc4:	b	15c34 <__flatcc_fb_codegen_c@@Base+0x824>
   15bc8:	ldr	r2, [pc, #1424]	; 16160 <__flatcc_fb_codegen_c@@Base+0xd50>
   15bcc:	b	15c34 <__flatcc_fb_codegen_c@@Base+0x824>
   15bd0:	ldr	r2, [pc, #1420]	; 16164 <__flatcc_fb_codegen_c@@Base+0xd54>
   15bd4:	b	15c34 <__flatcc_fb_codegen_c@@Base+0x824>
   15bd8:	ldr	r2, [pc, #1416]	; 16168 <__flatcc_fb_codegen_c@@Base+0xd58>
   15bdc:	b	15c34 <__flatcc_fb_codegen_c@@Base+0x824>
   15be0:	ldr	r2, [pc, #1412]	; 1616c <__flatcc_fb_codegen_c@@Base+0xd5c>
   15be4:	b	15c34 <__flatcc_fb_codegen_c@@Base+0x824>
   15be8:	ldr	r2, [pc, #1408]	; 16170 <__flatcc_fb_codegen_c@@Base+0xd60>
   15bec:	b	15c34 <__flatcc_fb_codegen_c@@Base+0x824>
   15bf0:	ldr	r4, [pc, #1308]	; 16114 <__flatcc_fb_codegen_c@@Base+0xd04>
   15bf4:	ldr	r3, [pc, #1308]	; 16118 <__flatcc_fb_codegen_c@@Base+0xd08>
   15bf8:	ldr	r0, [r3]
   15bfc:	ldr	r3, [pc, #1304]	; 1611c <__flatcc_fb_codegen_c@@Base+0xd0c>
   15c00:	str	r3, [sp]
   15c04:	mov	r3, #226	; 0xe2
   15c08:	mov	r2, r4
   15c0c:	ldr	r1, [pc, #1292]	; 16120 <__flatcc_fb_codegen_c@@Base+0xd10>
   15c10:	bl	13f84 <fprintf@plt>
   15c14:	ldr	r3, [pc, #1368]	; 16174 <__flatcc_fb_codegen_c@@Base+0xd64>
   15c18:	mov	r2, #226	; 0xe2
   15c1c:	mov	r1, r4
   15c20:	ldr	r0, [pc, #1280]	; 16128 <__flatcc_fb_codegen_c@@Base+0xd18>
   15c24:	bl	14038 <__assert_fail@plt>
   15c28:	ldr	r2, [pc, #1352]	; 16178 <__flatcc_fb_codegen_c@@Base+0xd68>
   15c2c:	b	15c34 <__flatcc_fb_codegen_c@@Base+0x824>
   15c30:	ldr	r2, [pc, #1348]	; 1617c <__flatcc_fb_codegen_c@@Base+0xd6c>
   15c34:	ldrd	r0, [fp, #48]	; 0x30
   15c38:	strd	r0, [sp]
   15c3c:	ldr	r1, [pc, #1340]	; 16180 <__flatcc_fb_codegen_c@@Base+0xd70>
   15c40:	add	r0, sp, #244	; 0xf4
   15c44:	bl	13ff0 <sprintf@plt>
   15c48:	b	15e00 <__flatcc_fb_codegen_c@@Base+0x9f0>
   15c4c:	sub	r2, r2, #1
   15c50:	cmp	r2, #8
   15c54:	ldrls	pc, [pc, r2, lsl #2]
   15c58:	b	15cb8 <__flatcc_fb_codegen_c@@Base+0x8a8>
   15c5c:	strdeq	r5, [r1], -r0
   15c60:	andeq	r5, r1, r0, lsl #25
   15c64:	strdeq	r5, [r1], -r8
   15c68:	andeq	r5, r1, r8, lsl #25
   15c6c:	muleq	r1, r0, ip
   15c70:	muleq	r1, r8, ip
   15c74:	andeq	r5, r1, r0, lsr #25
   15c78:	andeq	r5, r1, r8, lsr #25
   15c7c:			; <UNDEFINED> instruction: 0x00015cb0
   15c80:	ldr	r2, [pc, #1236]	; 1615c <__flatcc_fb_codegen_c@@Base+0xd4c>
   15c84:	b	15cfc <__flatcc_fb_codegen_c@@Base+0x8ec>
   15c88:	ldr	r2, [pc, #1232]	; 16160 <__flatcc_fb_codegen_c@@Base+0xd50>
   15c8c:	b	15cfc <__flatcc_fb_codegen_c@@Base+0x8ec>
   15c90:	ldr	r2, [pc, #1224]	; 16160 <__flatcc_fb_codegen_c@@Base+0xd50>
   15c94:	b	15cfc <__flatcc_fb_codegen_c@@Base+0x8ec>
   15c98:	ldr	r2, [pc, #1220]	; 16164 <__flatcc_fb_codegen_c@@Base+0xd54>
   15c9c:	b	15cfc <__flatcc_fb_codegen_c@@Base+0x8ec>
   15ca0:	ldr	r2, [pc, #1216]	; 16168 <__flatcc_fb_codegen_c@@Base+0xd58>
   15ca4:	b	15cfc <__flatcc_fb_codegen_c@@Base+0x8ec>
   15ca8:	ldr	r2, [pc, #1212]	; 1616c <__flatcc_fb_codegen_c@@Base+0xd5c>
   15cac:	b	15cfc <__flatcc_fb_codegen_c@@Base+0x8ec>
   15cb0:	ldr	r2, [pc, #1208]	; 16170 <__flatcc_fb_codegen_c@@Base+0xd60>
   15cb4:	b	15cfc <__flatcc_fb_codegen_c@@Base+0x8ec>
   15cb8:	ldr	r4, [pc, #1108]	; 16114 <__flatcc_fb_codegen_c@@Base+0xd04>
   15cbc:	ldr	r3, [pc, #1108]	; 16118 <__flatcc_fb_codegen_c@@Base+0xd08>
   15cc0:	ldr	r0, [r3]
   15cc4:	ldr	r3, [pc, #1104]	; 1611c <__flatcc_fb_codegen_c@@Base+0xd0c>
   15cc8:	str	r3, [sp]
   15ccc:	mov	r3, #226	; 0xe2
   15cd0:	mov	r2, r4
   15cd4:	ldr	r1, [pc, #1092]	; 16120 <__flatcc_fb_codegen_c@@Base+0xd10>
   15cd8:	bl	13f84 <fprintf@plt>
   15cdc:	ldr	r3, [pc, #1168]	; 16174 <__flatcc_fb_codegen_c@@Base+0xd64>
   15ce0:	mov	r2, #226	; 0xe2
   15ce4:	mov	r1, r4
   15ce8:	ldr	r0, [pc, #1080]	; 16128 <__flatcc_fb_codegen_c@@Base+0xd18>
   15cec:	bl	14038 <__assert_fail@plt>
   15cf0:	ldr	r2, [pc, #1152]	; 16178 <__flatcc_fb_codegen_c@@Base+0xd68>
   15cf4:	b	15cfc <__flatcc_fb_codegen_c@@Base+0x8ec>
   15cf8:	ldr	r2, [pc, #1148]	; 1617c <__flatcc_fb_codegen_c@@Base+0xd6c>
   15cfc:	ldrd	r0, [fp, #48]	; 0x30
   15d00:	strd	r0, [sp]
   15d04:	ldr	r1, [pc, #1144]	; 16184 <__flatcc_fb_codegen_c@@Base+0xd74>
   15d08:	add	r0, sp, #244	; 0xf4
   15d0c:	bl	13ff0 <sprintf@plt>
   15d10:	b	15e00 <__flatcc_fb_codegen_c@@Base+0x9f0>
   15d14:	sub	r2, r2, #1
   15d18:	cmp	r2, #8
   15d1c:	ldrls	pc, [pc, r2, lsl #2]
   15d20:	b	15d80 <__flatcc_fb_codegen_c@@Base+0x970>
   15d24:			; <UNDEFINED> instruction: 0x00015db8
   15d28:	andeq	r5, r1, r8, asr #26
   15d2c:	andeq	r5, r1, r0, asr #27
   15d30:	andeq	r5, r1, r0, asr sp
   15d34:	andeq	r5, r1, r8, asr sp
   15d38:	andeq	r5, r1, r0, ror #26
   15d3c:	andeq	r5, r1, r8, ror #26
   15d40:	andeq	r5, r1, r0, ror sp
   15d44:	andeq	r5, r1, r8, ror sp
   15d48:	ldr	r2, [pc, #1036]	; 1615c <__flatcc_fb_codegen_c@@Base+0xd4c>
   15d4c:	b	15dc4 <__flatcc_fb_codegen_c@@Base+0x9b4>
   15d50:	ldr	r2, [pc, #1032]	; 16160 <__flatcc_fb_codegen_c@@Base+0xd50>
   15d54:	b	15dc4 <__flatcc_fb_codegen_c@@Base+0x9b4>
   15d58:	ldr	r2, [pc, #1024]	; 16160 <__flatcc_fb_codegen_c@@Base+0xd50>
   15d5c:	b	15dc4 <__flatcc_fb_codegen_c@@Base+0x9b4>
   15d60:	ldr	r2, [pc, #1020]	; 16164 <__flatcc_fb_codegen_c@@Base+0xd54>
   15d64:	b	15dc4 <__flatcc_fb_codegen_c@@Base+0x9b4>
   15d68:	ldr	r2, [pc, #1016]	; 16168 <__flatcc_fb_codegen_c@@Base+0xd58>
   15d6c:	b	15dc4 <__flatcc_fb_codegen_c@@Base+0x9b4>
   15d70:	ldr	r2, [pc, #1012]	; 1616c <__flatcc_fb_codegen_c@@Base+0xd5c>
   15d74:	b	15dc4 <__flatcc_fb_codegen_c@@Base+0x9b4>
   15d78:	ldr	r2, [pc, #1008]	; 16170 <__flatcc_fb_codegen_c@@Base+0xd60>
   15d7c:	b	15dc4 <__flatcc_fb_codegen_c@@Base+0x9b4>
   15d80:	ldr	r4, [pc, #908]	; 16114 <__flatcc_fb_codegen_c@@Base+0xd04>
   15d84:	ldr	r3, [pc, #908]	; 16118 <__flatcc_fb_codegen_c@@Base+0xd08>
   15d88:	ldr	r0, [r3]
   15d8c:	ldr	r3, [pc, #904]	; 1611c <__flatcc_fb_codegen_c@@Base+0xd0c>
   15d90:	str	r3, [sp]
   15d94:	mov	r3, #226	; 0xe2
   15d98:	mov	r2, r4
   15d9c:	ldr	r1, [pc, #892]	; 16120 <__flatcc_fb_codegen_c@@Base+0xd10>
   15da0:	bl	13f84 <fprintf@plt>
   15da4:	ldr	r3, [pc, #968]	; 16174 <__flatcc_fb_codegen_c@@Base+0xd64>
   15da8:	mov	r2, #226	; 0xe2
   15dac:	mov	r1, r4
   15db0:	ldr	r0, [pc, #880]	; 16128 <__flatcc_fb_codegen_c@@Base+0xd18>
   15db4:	bl	14038 <__assert_fail@plt>
   15db8:	ldr	r2, [pc, #952]	; 16178 <__flatcc_fb_codegen_c@@Base+0xd68>
   15dbc:	b	15dc4 <__flatcc_fb_codegen_c@@Base+0x9b4>
   15dc0:	ldr	r2, [pc, #948]	; 1617c <__flatcc_fb_codegen_c@@Base+0xd6c>
   15dc4:	ldrb	r3, [fp, #48]	; 0x30
   15dc8:	ldr	r1, [pc, #952]	; 16188 <__flatcc_fb_codegen_c@@Base+0xd78>
   15dcc:	add	r0, sp, #244	; 0xf4
   15dd0:	bl	13ff0 <sprintf@plt>
   15dd4:	b	15e00 <__flatcc_fb_codegen_c@@Base+0x9f0>
   15dd8:	cmp	r2, #11
   15ddc:	vldreq	d7, [fp, #48]	; 0x30
   15de0:	vcvteq.f32.f64	s14, d7
   15de4:	vcvteq.f64.f32	d7, s14
   15de8:	vmoveq	r2, r3, d7
   15dec:	ldreq	r1, [pc, #920]	; 1618c <__flatcc_fb_codegen_c@@Base+0xd7c>
   15df0:	ldrdne	r2, [fp, #48]	; 0x30
   15df4:	ldrne	r1, [pc, #916]	; 16190 <__flatcc_fb_codegen_c@@Base+0xd80>
   15df8:	add	r0, sp, #244	; 0xf4
   15dfc:	bl	13ff0 <sprintf@plt>
   15e00:	add	r2, sp, #24
   15e04:	add	r3, sp, #244	; 0xf4
   15e08:	str	r3, [sp, #12]
   15e0c:	str	r9, [sp, #8]
   15e10:	str	r2, [sp, #4]
   15e14:	str	r7, [sp]
   15e18:	mov	r3, r5
   15e1c:	ldr	r1, [pc, #880]	; 16194 <__flatcc_fb_codegen_c@@Base+0xd84>
   15e20:	ldr	r0, [r4, #204]	; 0xcc
   15e24:	bl	13f84 <fprintf@plt>
   15e28:	ldr	fp, [fp]
   15e2c:	cmp	fp, #0
   15e30:	beq	15e88 <__flatcc_fb_codegen_c@@Base+0xa78>
   15e34:	ldr	r5, [fp, #68]	; 0x44
   15e38:	cmp	r5, #0
   15e3c:	beq	15b50 <__flatcc_fb_codegen_c@@Base+0x740>
   15e40:	mov	r1, #1
   15e44:	mov	r3, #0
   15e48:	mov	r7, r3
   15e4c:	b	15b10 <__flatcc_fb_codegen_c@@Base+0x700>
   15e50:	ldr	r4, [pc, #700]	; 16114 <__flatcc_fb_codegen_c@@Base+0xd04>
   15e54:	ldr	r3, [pc, #700]	; 16118 <__flatcc_fb_codegen_c@@Base+0xd08>
   15e58:	ldr	r0, [r3]
   15e5c:	ldr	r3, [pc, #696]	; 1611c <__flatcc_fb_codegen_c@@Base+0xd0c>
   15e60:	str	r3, [sp]
   15e64:	mov	r3, #260	; 0x104
   15e68:	mov	r2, r4
   15e6c:	ldr	r1, [pc, #684]	; 16120 <__flatcc_fb_codegen_c@@Base+0xd10>
   15e70:	bl	13f84 <fprintf@plt>
   15e74:	ldr	r3, [pc, #796]	; 16198 <__flatcc_fb_codegen_c@@Base+0xd88>
   15e78:	mov	r2, #260	; 0x104
   15e7c:	mov	r1, r4
   15e80:	ldr	r0, [pc, #672]	; 16128 <__flatcc_fb_codegen_c@@Base+0xd18>
   15e84:	bl	14038 <__assert_fail@plt>
   15e88:	ldr	r1, [r4, #204]	; 0xcc
   15e8c:	mov	r0, #10
   15e90:	bl	13fe4 <fputc@plt>
   15e94:	cmp	sl, #3
   15e98:	beq	15a60 <__flatcc_fb_codegen_c@@Base+0x650>
   15e9c:	add	r3, sp, #24
   15ea0:	mov	r2, r3
   15ea4:	ldr	r1, [pc, #752]	; 1619c <__flatcc_fb_codegen_c@@Base+0xd8c>
   15ea8:	ldr	r0, [r4, #204]	; 0xcc
   15eac:	bl	13f84 <fprintf@plt>
   15eb0:	ldr	r3, [r4, #204]	; 0xcc
   15eb4:	mov	r2, #20
   15eb8:	mov	r1, #1
   15ebc:	ldr	r0, [pc, #732]	; 161a0 <__flatcc_fb_codegen_c@@Base+0xd90>
   15ec0:	bl	13f18 <fwrite@plt>
   15ec4:	ldr	r5, [r6, #20]
   15ec8:	cmp	r5, #0
   15ecc:	beq	16060 <__flatcc_fb_codegen_c@@Base+0xc50>
   15ed0:	ldr	r8, [pc, #716]	; 161a4 <__flatcc_fb_codegen_c@@Base+0xd94>
   15ed4:	ldr	r7, [pc, #716]	; 161a8 <__flatcc_fb_codegen_c@@Base+0xd98>
   15ed8:	ldr	r2, [r5, #4]
   15edc:	ldr	r3, [r2, #4]
   15ee0:	ldr	r2, [r2]
   15ee4:	ldrh	r1, [r5, #10]
   15ee8:	tst	r1, #4
   15eec:	str	r2, [sp, #8]
   15ef0:	str	r3, [sp, #4]
   15ef4:	str	r2, [sp]
   15ef8:	add	r2, sp, #24
   15efc:	movne	r1, r7
   15f00:	moveq	r1, r8
   15f04:	ldr	r0, [r4, #204]	; 0xcc
   15f08:	bl	13f84 <fprintf@plt>
   15f0c:	ldr	r5, [r5]
   15f10:	cmp	r5, #0
   15f14:	bne	15ed8 <__flatcc_fb_codegen_c@@Base+0xac8>
   15f18:	ldr	r3, [r4, #204]	; 0xcc
   15f1c:	mov	r2, #32
   15f20:	mov	r1, #1
   15f24:	ldr	r0, [pc, #552]	; 16154 <__flatcc_fb_codegen_c@@Base+0xd44>
   15f28:	bl	13f18 <fwrite@plt>
   15f2c:	ldr	r1, [r4, #204]	; 0xcc
   15f30:	mov	r0, #10
   15f34:	bl	13fe4 <fputc@plt>
   15f38:	cmp	sl, #3
   15f3c:	beq	15ab4 <__flatcc_fb_codegen_c@@Base+0x6a4>
   15f40:	add	r3, sp, #24
   15f44:	mov	r2, r3
   15f48:	ldr	r1, [pc, #604]	; 161ac <__flatcc_fb_codegen_c@@Base+0xd9c>
   15f4c:	ldr	r0, [r4, #204]	; 0xcc
   15f50:	bl	13f84 <fprintf@plt>
   15f54:	ldr	r3, [r4, #204]	; 0xcc
   15f58:	mov	r2, #20
   15f5c:	mov	r1, #1
   15f60:	ldr	r0, [pc, #568]	; 161a0 <__flatcc_fb_codegen_c@@Base+0xd90>
   15f64:	bl	13f18 <fwrite@plt>
   15f68:	ldr	r5, [r6, #20]
   15f6c:	cmp	r5, #0
   15f70:	beq	15fb4 <__flatcc_fb_codegen_c@@Base+0xba4>
   15f74:	ldr	r7, [pc, #564]	; 161b0 <__flatcc_fb_codegen_c@@Base+0xda0>
   15f78:	ldr	r6, [pc, #564]	; 161b4 <__flatcc_fb_codegen_c@@Base+0xda4>
   15f7c:	ldr	r2, [r5, #4]
   15f80:	ldr	r3, [r2, #4]
   15f84:	ldr	r2, [r2]
   15f88:	ldrh	r1, [r5, #10]
   15f8c:	tst	r1, #4
   15f90:	str	r2, [sp]
   15f94:	add	r2, sp, #24
   15f98:	movne	r1, r7
   15f9c:	moveq	r1, r6
   15fa0:	ldr	r0, [r4, #204]	; 0xcc
   15fa4:	bl	13f84 <fprintf@plt>
   15fa8:	ldr	r5, [r5]
   15fac:	cmp	r5, #0
   15fb0:	bne	15f7c <__flatcc_fb_codegen_c@@Base+0xb6c>
   15fb4:	ldr	r3, [r4, #204]	; 0xcc
   15fb8:	mov	r2, #31
   15fbc:	mov	r1, #1
   15fc0:	ldr	r0, [pc, #496]	; 161b8 <__flatcc_fb_codegen_c@@Base+0xda8>
   15fc4:	bl	13f18 <fwrite@plt>
   15fc8:	ldr	r1, [r4, #204]	; 0xcc
   15fcc:	mov	r0, #10
   15fd0:	bl	13fe4 <fputc@plt>
   15fd4:	add	sp, sp, #348	; 0x15c
   15fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fdc:	ldr	r9, [pc, #268]	; 160f0 <__flatcc_fb_codegen_c@@Base+0xce0>
   15fe0:	str	r9, [sp, #4]
   15fe4:	add	r5, sp, #24
   15fe8:	str	r5, [sp]
   15fec:	ldr	r3, [sp, #20]
   15ff0:	ldr	r2, [sp, #16]
   15ff4:	ldr	r1, [pc, #328]	; 16144 <__flatcc_fb_codegen_c@@Base+0xd34>
   15ff8:	ldr	r0, [r4, #204]	; 0xcc
   15ffc:	bl	13f84 <fprintf@plt>
   16000:	str	fp, [sp, #8]
   16004:	str	r9, [sp, #4]
   16008:	str	r5, [sp]
   1600c:	mov	r3, r5
   16010:	mov	r2, r4
   16014:	ldr	r1, [pc, #300]	; 16148 <__flatcc_fb_codegen_c@@Base+0xd38>
   16018:	ldr	r0, [r4, #204]	; 0xcc
   1601c:	bl	13f84 <fprintf@plt>
   16020:	add	r3, sp, #24
   16024:	str	r3, [sp]
   16028:	mov	r3, r4
   1602c:	mov	r2, r4
   16030:	ldr	r1, [pc, #388]	; 161bc <__flatcc_fb_codegen_c@@Base+0xdac>
   16034:	ldr	r0, [r4, #204]	; 0xcc
   16038:	bl	13f84 <fprintf@plt>
   1603c:	ldr	fp, [r6, #20]
   16040:	cmp	fp, #0
   16044:	beq	16050 <__flatcc_fb_codegen_c@@Base+0xc40>
   16048:	ldr	r8, [pc, #164]	; 160f4 <__flatcc_fb_codegen_c@@Base+0xce4>
   1604c:	b	15e34 <__flatcc_fb_codegen_c@@Base+0xa24>
   16050:	ldr	r1, [r4, #204]	; 0xcc
   16054:	mov	r0, #10
   16058:	bl	13fe4 <fputc@plt>
   1605c:	b	15e9c <__flatcc_fb_codegen_c@@Base+0xa8c>
   16060:	ldr	r3, [r4, #204]	; 0xcc
   16064:	mov	r2, #32
   16068:	mov	r1, #1
   1606c:	ldr	r0, [pc, #224]	; 16154 <__flatcc_fb_codegen_c@@Base+0xd44>
   16070:	bl	13f18 <fwrite@plt>
   16074:	ldr	r1, [r4, #204]	; 0xcc
   16078:	mov	r0, #10
   1607c:	bl	13fe4 <fputc@plt>
   16080:	b	15f40 <__flatcc_fb_codegen_c@@Base+0xb30>
   16084:	ldr	r9, [pc, #168]	; 16134 <__flatcc_fb_codegen_c@@Base+0xd24>
   16088:	str	r9, [sp, #4]
   1608c:	add	r5, sp, #24
   16090:	str	r5, [sp]
   16094:	ldr	r3, [sp, #20]
   16098:	ldr	r2, [sp, #16]
   1609c:	ldr	r1, [pc, #160]	; 16144 <__flatcc_fb_codegen_c@@Base+0xd34>
   160a0:	ldr	r0, [r4, #204]	; 0xcc
   160a4:	bl	13f84 <fprintf@plt>
   160a8:	str	fp, [sp, #8]
   160ac:	str	r9, [sp, #4]
   160b0:	str	r5, [sp]
   160b4:	mov	r3, r5
   160b8:	mov	r2, r4
   160bc:	ldr	r1, [pc, #132]	; 16148 <__flatcc_fb_codegen_c@@Base+0xd38>
   160c0:	ldr	r0, [r4, #204]	; 0xcc
   160c4:	bl	13f84 <fprintf@plt>
   160c8:	b	15a48 <__flatcc_fb_codegen_c@@Base+0x638>
   160cc:	andeq	fp, r3, ip, lsr r6
   160d0:			; <UNDEFINED> instruction: 0x000004b4
   160d4:	andeq	fp, r3, r8, ror #13
   160d8:	andeq	fp, r3, ip, lsl #19
   160dc:			; <UNDEFINED> instruction: 0x000004b5
   160e0:	andeq	fp, r3, ip, asr #19
   160e4:	andeq	r5, r4, r0, lsr #2
   160e8:	ldrdeq	fp, [r3], -r4
   160ec:	andeq	fp, r3, ip, ror #17
   160f0:	andeq	fp, r3, r4, lsr r9
   160f4:	andeq	r3, r4, r4, asr lr
   160f8:	strdeq	fp, [r3], -r4
   160fc:	strdeq	fp, [r3], -ip
   16100:	andeq	fp, r3, r4, lsl #18
   16104:	andeq	fp, r3, ip, lsl #18
   16108:	andeq	fp, r3, r4, lsl r9
   1610c:	andeq	fp, r3, ip, lsl r9
   16110:	andeq	fp, r3, r4, lsr #18
   16114:	andeq	fp, r3, ip, ror #19
   16118:	andeq	r6, r6, r8, lsr #1
   1611c:	andeq	fp, r3, r4, asr #20
   16120:	andeq	fp, r3, r8, lsr sl
   16124:	andeq	fp, r3, r8, asr #12
   16128:	andeq	r3, r4, r0, ror lr
   1612c:	andeq	fp, r3, r8, asr #17
   16130:	andeq	fp, r3, r0, ror #17
   16134:	andeq	fp, r3, ip, lsr #18
   16138:	andeq	fp, r3, ip, ror sl
   1613c:	andeq	fp, r3, r4, lsl #21
   16140:	andeq	ip, r3, ip, ror #9
   16144:	andeq	fp, r3, ip, lsl #21
   16148:	andeq	fp, r3, r4, lsr #21
   1614c:	andeq	fp, r3, ip, lsl #23
   16150:	andeq	fp, r3, r4, asr #23
   16154:	andeq	fp, r3, r4, lsr ip
   16158:	muleq	r3, r4, ip
   1615c:	andeq	fp, r3, ip, asr #18
   16160:	andeq	fp, r3, r4, ror #18
   16164:	andeq	fp, r3, ip, ror #18
   16168:	andeq	fp, r3, r4, ror r9
   1616c:	andeq	fp, r3, ip, ror r9
   16170:	andeq	fp, r3, r4, lsl #19
   16174:	andeq	fp, r3, ip, asr r6
   16178:	andeq	fp, r3, r0, asr #18
   1617c:	andeq	fp, r3, r8, asr r9
   16180:	andeq	fp, r3, ip, ror #21
   16184:	strdeq	fp, [r3], -r8
   16188:	andeq	fp, r3, r4, lsl #22
   1618c:	andeq	fp, r3, ip, lsl #22
   16190:	andeq	fp, r3, r0, lsl fp
   16194:	andeq	fp, r3, r4, lsl fp
   16198:	andeq	fp, r3, r8, ror #12
   1619c:	andeq	fp, r3, r4, lsr fp
   161a0:	andeq	fp, r3, r4, ror fp
   161a4:	andeq	fp, r3, r0, lsl ip
   161a8:	ldrdeq	fp, [r3], -ip
   161ac:	andeq	fp, r3, r8, asr ip
   161b0:	andeq	fp, r3, ip, asr #25
   161b4:	strdeq	fp, [r3], -ip
   161b8:	andeq	fp, r3, ip, lsl sp
   161bc:	ldrdeq	fp, [r3], -r0
   161c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161c4:	sub	sp, sp, #484	; 0x1e4
   161c8:	mov	r4, r0
   161cc:	mov	r6, r1
   161d0:	ldr	r3, [r0, #212]	; 0xd4
   161d4:	ldr	fp, [r3, #132]	; 0x84
   161d8:	str	r0, [sp, #32]
   161dc:	mov	r5, #220	; 0xdc
   161e0:	mov	r2, r5
   161e4:	mov	r1, #0
   161e8:	add	r0, sp, #260	; 0x104
   161ec:	bl	13f9c <memset@plt>
   161f0:	mov	r2, r5
   161f4:	mov	r1, #0
   161f8:	add	r0, sp, #40	; 0x28
   161fc:	bl	13f9c <memset@plt>
   16200:	ldrh	r3, [r6, #8]
   16204:	cmp	r3, #1
   16208:	bne	1625c <__flatcc_fb_codegen_c@@Base+0xe4c>
   1620c:	ldrh	r3, [r6, #104]	; 0x68
   16210:	cmp	r3, #0
   16214:	bne	16284 <__flatcc_fb_codegen_c@@Base+0xe74>
   16218:	ldrd	r2, [r6, #96]	; 0x60
   1621c:	orrs	r3, r2, r3
   16220:	bne	16270 <__flatcc_fb_codegen_c@@Base+0xe60>
   16224:	add	r2, sp, #260	; 0x104
   16228:	mov	r1, r6
   1622c:	ldr	r0, [r6, #12]
   16230:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   16234:	ldr	r5, [r6, #32]
   16238:	cmp	r5, #0
   1623c:	beq	16320 <__flatcc_fb_codegen_c@@Base+0xf10>
   16240:	mov	r1, #1
   16244:	mov	r3, #0
   16248:	ldr	r9, [pc, #2796]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   1624c:	ldr	sl, [pc, #2796]	; 16d40 <__flatcc_fb_codegen_c@@Base+0x1930>
   16250:	ldr	r8, [pc, #2796]	; 16d44 <__flatcc_fb_codegen_c@@Base+0x1934>
   16254:	mov	r7, r3
   16258:	b	162e0 <__flatcc_fb_codegen_c@@Base+0xed0>
   1625c:	ldr	r3, [pc, #2788]	; 16d48 <__flatcc_fb_codegen_c@@Base+0x1938>
   16260:	mov	r2, #936	; 0x3a8
   16264:	ldr	r1, [pc, #2784]	; 16d4c <__flatcc_fb_codegen_c@@Base+0x193c>
   16268:	ldr	r0, [pc, #2784]	; 16d50 <__flatcc_fb_codegen_c@@Base+0x1940>
   1626c:	bl	14038 <__assert_fail@plt>
   16270:	ldr	r3, [pc, #2768]	; 16d48 <__flatcc_fb_codegen_c@@Base+0x1938>
   16274:	ldr	r2, [pc, #2776]	; 16d54 <__flatcc_fb_codegen_c@@Base+0x1944>
   16278:	ldr	r1, [pc, #2764]	; 16d4c <__flatcc_fb_codegen_c@@Base+0x193c>
   1627c:	ldr	r0, [pc, #2772]	; 16d58 <__flatcc_fb_codegen_c@@Base+0x1948>
   16280:	bl	14038 <__assert_fail@plt>
   16284:	ldrd	r2, [r6, #112]	; 0x70
   16288:	orrs	r3, r2, r3
   1628c:	bne	16224 <__flatcc_fb_codegen_c@@Base+0xe14>
   16290:	ldrd	r2, [r6, #96]	; 0x60
   16294:	orrs	r3, r2, r3
   16298:	beq	16224 <__flatcc_fb_codegen_c@@Base+0xe14>
   1629c:	ldr	r3, [pc, #2724]	; 16d48 <__flatcc_fb_codegen_c@@Base+0x1938>
   162a0:	ldr	r2, [pc, #2740]	; 16d5c <__flatcc_fb_codegen_c@@Base+0x194c>
   162a4:	ldr	r1, [pc, #2720]	; 16d4c <__flatcc_fb_codegen_c@@Base+0x193c>
   162a8:	ldr	r0, [pc, #2736]	; 16d60 <__flatcc_fb_codegen_c@@Base+0x1950>
   162ac:	bl	14038 <__assert_fail@plt>
   162b0:	ldr	r2, [r5, #4]
   162b4:	ldr	r3, [r2]
   162b8:	ldr	r2, [r2, #4]
   162bc:	mov	r1, r8
   162c0:	ldr	r0, [r4, #204]	; 0xcc
   162c4:	bl	13f84 <fprintf@plt>
   162c8:	ldr	r3, [r5, #4]
   162cc:	ldr	r3, [r3, #8]
   162d0:	ldr	r5, [r5]
   162d4:	mov	r1, r7
   162d8:	cmp	r5, #0
   162dc:	beq	1630c <__flatcc_fb_codegen_c@@Base+0xefc>
   162e0:	ldr	r2, [r5, #4]
   162e4:	ldr	r2, [r2, #8]
   162e8:	cmp	r2, r3
   162ec:	beq	162b0 <__flatcc_fb_codegen_c@@Base+0xea0>
   162f0:	cmp	r1, #0
   162f4:	mov	r2, r9
   162f8:	movne	r1, sl
   162fc:	ldreq	r1, [pc, #2656]	; 16d64 <__flatcc_fb_codegen_c@@Base+0x1954>
   16300:	ldr	r0, [r4, #204]	; 0xcc
   16304:	bl	13f84 <fprintf@plt>
   16308:	b	162b0 <__flatcc_fb_codegen_c@@Base+0xea0>
   1630c:	ldr	r3, [r4, #204]	; 0xcc
   16310:	mov	r2, #4
   16314:	mov	r1, #1
   16318:	ldr	r0, [pc, #2632]	; 16d68 <__flatcc_fb_codegen_c@@Base+0x1958>
   1631c:	bl	13f18 <fwrite@plt>
   16320:	ldrd	r2, [r6, #112]	; 0x70
   16324:	orrs	r3, r2, r3
   16328:	beq	16364 <__flatcc_fb_codegen_c@@Base+0xf54>
   1632c:	cmp	fp, #0
   16330:	bne	16430 <__flatcc_fb_codegen_c@@Base+0x1020>
   16334:	add	r2, sp, #260	; 0x104
   16338:	ldr	r1, [pc, #2604]	; 16d6c <__flatcc_fb_codegen_c@@Base+0x195c>
   1633c:	ldr	r0, [r4, #204]	; 0xcc
   16340:	bl	13f84 <fprintf@plt>
   16344:	ldr	r5, [r6, #20]
   16348:	cmp	r5, #0
   1634c:	beq	167b4 <__flatcc_fb_codegen_c@@Base+0x13a4>
   16350:	mov	r3, #0
   16354:	str	r3, [sp, #28]
   16358:	str	r3, [sp, #36]	; 0x24
   1635c:	mov	r7, r3
   16360:	b	16a48 <__flatcc_fb_codegen_c@@Base+0x1638>
   16364:	add	r5, sp, #260	; 0x104
   16368:	mov	r2, r5
   1636c:	ldr	r1, [pc, #2556]	; 16d70 <__flatcc_fb_codegen_c@@Base+0x1960>
   16370:	ldr	r0, [r4, #204]	; 0xcc
   16374:	bl	13f84 <fprintf@plt>
   16378:	str	r5, [sp]
   1637c:	mov	r3, r5
   16380:	mov	r2, r5
   16384:	ldr	r1, [pc, #2536]	; 16d74 <__flatcc_fb_codegen_c@@Base+0x1964>
   16388:	ldr	r0, [r4, #204]	; 0xcc
   1638c:	bl	13f84 <fprintf@plt>
   16390:	str	r5, [sp]
   16394:	mov	r3, r5
   16398:	mov	r2, r5
   1639c:	ldr	r1, [pc, #2516]	; 16d78 <__flatcc_fb_codegen_c@@Base+0x1968>
   163a0:	ldr	r0, [r4, #204]	; 0xcc
   163a4:	bl	13f84 <fprintf@plt>
   163a8:	str	r5, [sp]
   163ac:	mov	r3, r5
   163b0:	mov	r2, r5
   163b4:	ldr	r1, [pc, #2496]	; 16d7c <__flatcc_fb_codegen_c@@Base+0x196c>
   163b8:	ldr	r0, [r4, #204]	; 0xcc
   163bc:	bl	13f84 <fprintf@plt>
   163c0:	ldrd	r2, [r6, #112]	; 0x70
   163c4:	strd	r2, [sp]
   163c8:	add	r2, sp, #260	; 0x104
   163cc:	ldr	r1, [pc, #2476]	; 16d80 <__flatcc_fb_codegen_c@@Base+0x1970>
   163d0:	ldr	r0, [r4, #204]	; 0xcc
   163d4:	bl	13f84 <fprintf@plt>
   163d8:	str	r4, [sp]
   163dc:	add	r3, sp, #260	; 0x104
   163e0:	mov	r2, r3
   163e4:	ldr	r1, [pc, #2456]	; 16d84 <__flatcc_fb_codegen_c@@Base+0x1974>
   163e8:	ldr	r0, [r4, #204]	; 0xcc
   163ec:	bl	13f84 <fprintf@plt>
   163f0:	add	r3, sp, #260	; 0x104
   163f4:	mov	r2, r4
   163f8:	ldr	r1, [pc, #2440]	; 16d88 <__flatcc_fb_codegen_c@@Base+0x1978>
   163fc:	ldr	r0, [r4, #204]	; 0xcc
   16400:	bl	13f84 <fprintf@plt>
   16404:	ldr	r1, [r4, #204]	; 0xcc
   16408:	mov	r0, #10
   1640c:	bl	13fe4 <fputc@plt>
   16410:	ldr	r5, [r6, #20]
   16414:	cmp	r5, #0
   16418:	beq	169b8 <__flatcc_fb_codegen_c@@Base+0x15a8>
   1641c:	mov	r9, #0
   16420:	mov	r8, r9
   16424:	ldr	fp, [pc, #2400]	; 16d8c <__flatcc_fb_codegen_c@@Base+0x197c>
   16428:	ldr	sl, [pc, #2316]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   1642c:	b	16acc <__flatcc_fb_codegen_c@@Base+0x16bc>
   16430:	ldr	r3, [r4, #204]	; 0xcc
   16434:	mov	r2, #16
   16438:	mov	r1, #1
   1643c:	ldr	r0, [pc, #2380]	; 16d90 <__flatcc_fb_codegen_c@@Base+0x1980>
   16440:	bl	13f18 <fwrite@plt>
   16444:	add	r2, sp, #260	; 0x104
   16448:	ldr	r1, [pc, #2332]	; 16d6c <__flatcc_fb_codegen_c@@Base+0x195c>
   1644c:	ldr	r0, [r4, #204]	; 0xcc
   16450:	bl	13f84 <fprintf@plt>
   16454:	ldr	r5, [r6, #20]
   16458:	cmp	r5, #0
   1645c:	bne	16350 <__flatcc_fb_codegen_c@@Base+0xf40>
   16460:	mov	r3, #0
   16464:	str	r3, [sp, #36]	; 0x24
   16468:	mov	r7, r3
   1646c:	ldr	r3, [r6, #112]	; 0x70
   16470:	subs	r3, r3, r7
   16474:	bne	16834 <__flatcc_fb_codegen_c@@Base+0x1424>
   16478:	ldr	r3, [r4, #204]	; 0xcc
   1647c:	mov	r2, #3
   16480:	mov	r1, #1
   16484:	ldr	r0, [pc, #2312]	; 16d94 <__flatcc_fb_codegen_c@@Base+0x1984>
   16488:	bl	13f18 <fwrite@plt>
   1648c:	ldr	r3, [r4, #204]	; 0xcc
   16490:	mov	r2, #15
   16494:	mov	r1, #1
   16498:	ldr	r0, [pc, #2296]	; 16d98 <__flatcc_fb_codegen_c@@Base+0x1988>
   1649c:	bl	13f18 <fwrite@plt>
   164a0:	b	167c8 <__flatcc_fb_codegen_c@@Base+0x13b8>
   164a4:	ldr	r2, [r8, #4]
   164a8:	ldr	r3, [r2]
   164ac:	ldr	r2, [r2, #4]
   164b0:	ldr	r1, [pc, #2188]	; 16d44 <__flatcc_fb_codegen_c@@Base+0x1934>
   164b4:	ldr	r0, [r4, #204]	; 0xcc
   164b8:	bl	13f84 <fprintf@plt>
   164bc:	ldr	r3, [r8, #4]
   164c0:	ldr	r3, [r3, #8]
   164c4:	ldr	r8, [r8]
   164c8:	mov	r1, r9
   164cc:	cmp	r8, #0
   164d0:	beq	16500 <__flatcc_fb_codegen_c@@Base+0x10f0>
   164d4:	ldr	r2, [r8, #4]
   164d8:	ldr	r2, [r2, #8]
   164dc:	cmp	r2, r3
   164e0:	beq	164a4 <__flatcc_fb_codegen_c@@Base+0x1094>
   164e4:	cmp	r1, #0
   164e8:	ldr	r2, [pc, #2220]	; 16d9c <__flatcc_fb_codegen_c@@Base+0x198c>
   164ec:	ldrne	r1, [pc, #2124]	; 16d40 <__flatcc_fb_codegen_c@@Base+0x1930>
   164f0:	ldreq	r1, [pc, #2156]	; 16d64 <__flatcc_fb_codegen_c@@Base+0x1954>
   164f4:	ldr	r0, [r4, #204]	; 0xcc
   164f8:	bl	13f84 <fprintf@plt>
   164fc:	b	164a4 <__flatcc_fb_codegen_c@@Base+0x1094>
   16500:	ldr	r3, [r4, #204]	; 0xcc
   16504:	mov	r2, #4
   16508:	mov	r1, #1
   1650c:	ldr	r0, [pc, #2132]	; 16d68 <__flatcc_fb_codegen_c@@Base+0x1958>
   16510:	bl	13f18 <fwrite@plt>
   16514:	ldr	r3, [r5, #4]
   16518:	ldr	r8, [r3, #4]
   1651c:	ldr	r9, [r3]
   16520:	cmp	r7, #0
   16524:	ldrheq	sl, [r6, #104]	; 0x68
   16528:	ldrhne	sl, [r5, #74]	; 0x4a
   1652c:	cmp	fp, #0
   16530:	beq	169f4 <__flatcc_fb_codegen_c@@Base+0x15e4>
   16534:	ldr	r3, [r5, #80]	; 0x50
   16538:	subs	r3, r3, r7
   1653c:	bne	165ac <__flatcc_fb_codegen_c@@Base+0x119c>
   16540:	ldrh	r3, [r5, #72]	; 0x48
   16544:	tst	r3, #4
   16548:	bne	169cc <__flatcc_fb_codegen_c@@Base+0x15bc>
   1654c:	ldrh	r3, [r5, #24]
   16550:	cmp	r3, #8
   16554:	beq	165c8 <__flatcc_fb_codegen_c@@Base+0x11b8>
   16558:	cmp	r3, #14
   1655c:	beq	16704 <__flatcc_fb_codegen_c@@Base+0x12f4>
   16560:	ldr	r2, [pc, #2104]	; 16da0 <__flatcc_fb_codegen_c@@Base+0x1990>
   16564:	ldr	r1, [pc, #2104]	; 16da4 <__flatcc_fb_codegen_c@@Base+0x1994>
   16568:	ldr	r0, [r4, #204]	; 0xcc
   1656c:	bl	13f84 <fprintf@plt>
   16570:	ldr	r5, [pc, #2096]	; 16da8 <__flatcc_fb_codegen_c@@Base+0x1998>
   16574:	ldr	r4, [pc, #2000]	; 16d4c <__flatcc_fb_codegen_c@@Base+0x193c>
   16578:	ldr	r3, [pc, #2092]	; 16dac <__flatcc_fb_codegen_c@@Base+0x199c>
   1657c:	ldr	r0, [r3]
   16580:	ldr	r3, [pc, #2088]	; 16db0 <__flatcc_fb_codegen_c@@Base+0x19a0>
   16584:	str	r3, [sp]
   16588:	mov	r3, r5
   1658c:	mov	r2, r4
   16590:	ldr	r1, [pc, #2076]	; 16db4 <__flatcc_fb_codegen_c@@Base+0x19a4>
   16594:	bl	13f84 <fprintf@plt>
   16598:	ldr	r3, [pc, #1960]	; 16d48 <__flatcc_fb_codegen_c@@Base+0x1938>
   1659c:	mov	r2, r5
   165a0:	mov	r1, r4
   165a4:	ldr	r0, [pc, #2060]	; 16db8 <__flatcc_fb_codegen_c@@Base+0x19a8>
   165a8:	bl	14038 <__assert_fail@plt>
   165ac:	ldr	r2, [sp, #36]	; 0x24
   165b0:	add	r7, r2, #1
   165b4:	ldr	r1, [pc, #2048]	; 16dbc <__flatcc_fb_codegen_c@@Base+0x19ac>
   165b8:	ldr	r0, [r4, #204]	; 0xcc
   165bc:	bl	13f84 <fprintf@plt>
   165c0:	str	r7, [sp, #36]	; 0x24
   165c4:	b	16540 <__flatcc_fb_codegen_c@@Base+0x1130>
   165c8:	ldr	r3, [r5, #16]
   165cc:	cmp	r3, #5
   165d0:	beq	1663c <__flatcc_fb_codegen_c@@Base+0x122c>
   165d4:	sub	r3, r3, #1
   165d8:	cmp	r3, #10
   165dc:	ldrls	pc, [pc, r3, lsl #2]
   165e0:	b	16698 <__flatcc_fb_codegen_c@@Base+0x1288>
   165e4:	ldrdeq	r6, [r1], -r0
   165e8:	andeq	r6, r1, r0, lsl r6
   165ec:	ldrdeq	r6, [r1], -ip
   165f0:	andeq	r6, r1, ip, lsl r6
   165f4:	andeq	r6, r1, r8, asr #12
   165f8:	andeq	r6, r1, r0, asr r6
   165fc:	andeq	r6, r1, ip, asr r6
   16600:	andeq	r6, r1, r8, ror #12
   16604:	andeq	r6, r1, r4, ror r6
   16608:	andeq	r6, r1, ip, lsl #13
   1660c:	andeq	r6, r1, r0, lsl #13
   16610:	ldr	r2, [pc, #1828]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   16614:	ldr	r3, [pc, #1956]	; 16dc0 <__flatcc_fb_codegen_c@@Base+0x19b0>
   16618:	b	16624 <__flatcc_fb_codegen_c@@Base+0x1214>
   1661c:	ldr	r2, [pc, #1816]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   16620:	ldr	r3, [pc, #1948]	; 16dc4 <__flatcc_fb_codegen_c@@Base+0x19b4>
   16624:	cmp	fp, #0
   16628:	beq	166e8 <__flatcc_fb_codegen_c@@Base+0x12d8>
   1662c:	ldr	r1, [pc, #1940]	; 16dc8 <__flatcc_fb_codegen_c@@Base+0x19b8>
   16630:	ldr	r0, [r4, #204]	; 0xcc
   16634:	bl	13f84 <fprintf@plt>
   16638:	b	16758 <__flatcc_fb_codegen_c@@Base+0x1348>
   1663c:	ldr	r2, [sp, #32]
   16640:	ldr	r3, [pc, #1924]	; 16dcc <__flatcc_fb_codegen_c@@Base+0x19bc>
   16644:	b	16624 <__flatcc_fb_codegen_c@@Base+0x1214>
   16648:	ldr	r2, [pc, #1772]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   1664c:	b	16640 <__flatcc_fb_codegen_c@@Base+0x1230>
   16650:	ldr	r2, [pc, #1764]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   16654:	ldr	r3, [pc, #1908]	; 16dd0 <__flatcc_fb_codegen_c@@Base+0x19c0>
   16658:	b	16624 <__flatcc_fb_codegen_c@@Base+0x1214>
   1665c:	ldr	r2, [pc, #1752]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   16660:	ldr	r3, [pc, #1900]	; 16dd4 <__flatcc_fb_codegen_c@@Base+0x19c4>
   16664:	b	16624 <__flatcc_fb_codegen_c@@Base+0x1214>
   16668:	ldr	r2, [pc, #1740]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   1666c:	ldr	r3, [pc, #1892]	; 16dd8 <__flatcc_fb_codegen_c@@Base+0x19c8>
   16670:	b	16624 <__flatcc_fb_codegen_c@@Base+0x1214>
   16674:	ldr	r2, [pc, #1728]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   16678:	ldr	r3, [pc, #1884]	; 16ddc <__flatcc_fb_codegen_c@@Base+0x19cc>
   1667c:	b	16624 <__flatcc_fb_codegen_c@@Base+0x1214>
   16680:	ldr	r2, [pc, #1716]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   16684:	ldr	r3, [pc, #1876]	; 16de0 <__flatcc_fb_codegen_c@@Base+0x19d0>
   16688:	b	16624 <__flatcc_fb_codegen_c@@Base+0x1214>
   1668c:	ldr	r2, [pc, #1704]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   16690:	ldr	r3, [pc, #1868]	; 16de4 <__flatcc_fb_codegen_c@@Base+0x19d4>
   16694:	b	16624 <__flatcc_fb_codegen_c@@Base+0x1214>
   16698:	ldr	r4, [pc, #1864]	; 16de8 <__flatcc_fb_codegen_c@@Base+0x19d8>
   1669c:	ldr	r3, [pc, #1800]	; 16dac <__flatcc_fb_codegen_c@@Base+0x199c>
   166a0:	ldr	r0, [r3]
   166a4:	ldr	r3, [pc, #1796]	; 16db0 <__flatcc_fb_codegen_c@@Base+0x19a0>
   166a8:	str	r3, [sp]
   166ac:	mov	r3, #141	; 0x8d
   166b0:	mov	r2, r4
   166b4:	ldr	r1, [pc, #1784]	; 16db4 <__flatcc_fb_codegen_c@@Base+0x19a4>
   166b8:	bl	13f84 <fprintf@plt>
   166bc:	ldr	r3, [pc, #1832]	; 16dec <__flatcc_fb_codegen_c@@Base+0x19dc>
   166c0:	mov	r2, #141	; 0x8d
   166c4:	mov	r1, r4
   166c8:	ldr	r0, [pc, #1768]	; 16db8 <__flatcc_fb_codegen_c@@Base+0x19a8>
   166cc:	bl	14038 <__assert_fail@plt>
   166d0:	ldr	r2, [pc, #1636]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   166d4:	ldr	r3, [pc, #1812]	; 16df0 <__flatcc_fb_codegen_c@@Base+0x19e0>
   166d8:	b	16624 <__flatcc_fb_codegen_c@@Base+0x1214>
   166dc:	ldr	r2, [pc, #1624]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   166e0:	ldr	r3, [pc, #1804]	; 16df4 <__flatcc_fb_codegen_c@@Base+0x19e4>
   166e4:	b	16624 <__flatcc_fb_codegen_c@@Base+0x1214>
   166e8:	str	r3, [sp]
   166ec:	mov	r3, r2
   166f0:	mov	r2, sl
   166f4:	ldr	r1, [pc, #1788]	; 16df8 <__flatcc_fb_codegen_c@@Base+0x19e8>
   166f8:	ldr	r0, [r4, #204]	; 0xcc
   166fc:	bl	13f84 <fprintf@plt>
   16700:	b	16758 <__flatcc_fb_codegen_c@@Base+0x1348>
   16704:	ldr	r3, [r5, #16]
   16708:	ldrh	r1, [r3, #8]
   1670c:	bic	r2, r1, #2
   16710:	uxth	r2, r2
   16714:	cmp	r2, #1
   16718:	bne	1677c <__flatcc_fb_codegen_c@@Base+0x136c>
   1671c:	ldr	r2, [pc, #1752]	; 16dfc <__flatcc_fb_codegen_c@@Base+0x19ec>
   16720:	ldr	r7, [pc, #1556]	; 16d3c <__flatcc_fb_codegen_c@@Base+0x192c>
   16724:	cmp	r1, #1
   16728:	movne	r7, r2
   1672c:	add	r2, sp, #40	; 0x28
   16730:	mov	r1, r3
   16734:	ldr	r0, [r3, #12]
   16738:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1673c:	cmp	fp, #0
   16740:	beq	16790 <__flatcc_fb_codegen_c@@Base+0x1380>
   16744:	mov	r3, r7
   16748:	add	r2, sp, #40	; 0x28
   1674c:	ldr	r1, [pc, #1708]	; 16e00 <__flatcc_fb_codegen_c@@Base+0x19f0>
   16750:	ldr	r0, [r4, #204]	; 0xcc
   16754:	bl	13f84 <fprintf@plt>
   16758:	mov	r3, r9
   1675c:	mov	r2, r8
   16760:	ldr	r1, [pc, #1692]	; 16e04 <__flatcc_fb_codegen_c@@Base+0x19f4>
   16764:	ldr	r0, [r4, #204]	; 0xcc
   16768:	bl	13f84 <fprintf@plt>
   1676c:	ldr	r7, [r5, #80]	; 0x50
   16770:	ldr	r3, [r5, #88]	; 0x58
   16774:	add	r7, r7, r3
   16778:	b	16a3c <__flatcc_fb_codegen_c@@Base+0x162c>
   1677c:	ldr	r3, [pc, #1476]	; 16d48 <__flatcc_fb_codegen_c@@Base+0x1938>
   16780:	ldr	r2, [pc, #1664]	; 16e08 <__flatcc_fb_codegen_c@@Base+0x19f8>
   16784:	ldr	r1, [pc, #1472]	; 16d4c <__flatcc_fb_codegen_c@@Base+0x193c>
   16788:	ldr	r0, [pc, #1660]	; 16e0c <__flatcc_fb_codegen_c@@Base+0x19fc>
   1678c:	bl	14038 <__assert_fail@plt>
   16790:	str	r7, [sp]
   16794:	add	r3, sp, #40	; 0x28
   16798:	mov	r2, sl
   1679c:	ldr	r1, [pc, #1644]	; 16e10 <__flatcc_fb_codegen_c@@Base+0x1a00>
   167a0:	ldr	r0, [r4, #204]	; 0xcc
   167a4:	bl	13f84 <fprintf@plt>
   167a8:	b	16758 <__flatcc_fb_codegen_c@@Base+0x1348>
   167ac:	cmp	fp, #0
   167b0:	bne	1646c <__flatcc_fb_codegen_c@@Base+0x105c>
   167b4:	ldr	r3, [r4, #204]	; 0xcc
   167b8:	mov	r2, #3
   167bc:	mov	r1, #1
   167c0:	ldr	r0, [pc, #1484]	; 16d94 <__flatcc_fb_codegen_c@@Base+0x1984>
   167c4:	bl	13f18 <fwrite@plt>
   167c8:	add	r5, sp, #260	; 0x104
   167cc:	ldrd	r2, [r6, #112]	; 0x70
   167d0:	strd	r2, [sp]
   167d4:	mov	r2, r5
   167d8:	ldr	r1, [pc, #1588]	; 16e14 <__flatcc_fb_codegen_c@@Base+0x1a04>
   167dc:	ldr	r0, [r4, #204]	; 0xcc
   167e0:	bl	13f84 <fprintf@plt>
   167e4:	str	r5, [sp]
   167e8:	mov	r3, r5
   167ec:	mov	r2, r5
   167f0:	ldr	r1, [pc, #1568]	; 16e18 <__flatcc_fb_codegen_c@@Base+0x1a08>
   167f4:	ldr	r0, [r4, #204]	; 0xcc
   167f8:	bl	13f84 <fprintf@plt>
   167fc:	str	r5, [sp]
   16800:	mov	r3, r5
   16804:	mov	r2, r5
   16808:	ldr	r1, [pc, #1548]	; 16e1c <__flatcc_fb_codegen_c@@Base+0x1a0c>
   1680c:	ldr	r0, [r4, #204]	; 0xcc
   16810:	bl	13f84 <fprintf@plt>
   16814:	str	r4, [sp, #4]
   16818:	str	r5, [sp]
   1681c:	mov	r3, r5
   16820:	mov	r2, r5
   16824:	ldr	r1, [pc, #1524]	; 16e20 <__flatcc_fb_codegen_c@@Base+0x1a10>
   16828:	ldr	r0, [r4, #204]	; 0xcc
   1682c:	bl	13f84 <fprintf@plt>
   16830:	b	163c0 <__flatcc_fb_codegen_c@@Base+0xfb0>
   16834:	ldr	r2, [sp, #36]	; 0x24
   16838:	ldr	r1, [pc, #1404]	; 16dbc <__flatcc_fb_codegen_c@@Base+0x19ac>
   1683c:	ldr	r0, [r4, #204]	; 0xcc
   16840:	bl	13f84 <fprintf@plt>
   16844:	b	16478 <__flatcc_fb_codegen_c@@Base+0x1068>
   16848:	ldr	r3, [r5, #16]
   1684c:	cmp	r3, #5
   16850:	beq	16cc4 <__flatcc_fb_codegen_c@@Base+0x18b4>
   16854:	sub	r3, r3, #1
   16858:	cmp	r3, #10
   1685c:	ldrls	pc, [pc, r3, lsl #2]
   16860:	b	16890 <__flatcc_fb_codegen_c@@Base+0x1480>
   16864:	andeq	r6, r1, r8, asr #17
   16868:	andeq	r6, r1, r4, ror #20
   1686c:	andeq	r6, r1, r4, ror sl
   16870:			; <UNDEFINED> instruction: 0x00016cb4
   16874:	ldrdeq	r6, [r1], -r4
   16878:	ldrdeq	r6, [r1], -ip
   1687c:	andeq	r6, r1, ip, ror #25
   16880:	strdeq	r6, [r1], -ip
   16884:	andeq	r6, r1, ip, lsl #26
   16888:	andeq	r6, r1, ip, lsr #26
   1688c:	andeq	r6, r1, ip, lsl sp
   16890:	ldr	r4, [pc, #1360]	; 16de8 <__flatcc_fb_codegen_c@@Base+0x19d8>
   16894:	ldr	r3, [pc, #1296]	; 16dac <__flatcc_fb_codegen_c@@Base+0x199c>
   16898:	ldr	r0, [r3]
   1689c:	ldr	r3, [pc, #1292]	; 16db0 <__flatcc_fb_codegen_c@@Base+0x19a0>
   168a0:	str	r3, [sp]
   168a4:	mov	r3, #141	; 0x8d
   168a8:	mov	r2, r4
   168ac:	ldr	r1, [pc, #1280]	; 16db4 <__flatcc_fb_codegen_c@@Base+0x19a4>
   168b0:	bl	13f84 <fprintf@plt>
   168b4:	ldr	r3, [pc, #1328]	; 16dec <__flatcc_fb_codegen_c@@Base+0x19dc>
   168b8:	mov	r2, #141	; 0x8d
   168bc:	mov	r1, r4
   168c0:	ldr	r0, [pc, #1264]	; 16db8 <__flatcc_fb_codegen_c@@Base+0x19a8>
   168c4:	bl	14038 <__assert_fail@plt>
   168c8:	ldr	r1, [pc, #1312]	; 16df0 <__flatcc_fb_codegen_c@@Base+0x19e0>
   168cc:	mov	r3, sl
   168d0:	ldr	r2, [pc, #1356]	; 16e24 <__flatcc_fb_codegen_c@@Base+0x1a14>
   168d4:	b	16a80 <__flatcc_fb_codegen_c@@Base+0x1670>
   168d8:	ldr	r4, [pc, #1288]	; 16de8 <__flatcc_fb_codegen_c@@Base+0x19d8>
   168dc:	ldr	r3, [pc, #1224]	; 16dac <__flatcc_fb_codegen_c@@Base+0x199c>
   168e0:	ldr	r0, [r3]
   168e4:	ldr	r3, [pc, #1220]	; 16db0 <__flatcc_fb_codegen_c@@Base+0x19a0>
   168e8:	str	r3, [sp]
   168ec:	mov	r3, #96	; 0x60
   168f0:	mov	r2, r4
   168f4:	ldr	r1, [pc, #1208]	; 16db4 <__flatcc_fb_codegen_c@@Base+0x19a4>
   168f8:	bl	13f84 <fprintf@plt>
   168fc:	ldr	r3, [pc, #1316]	; 16e28 <__flatcc_fb_codegen_c@@Base+0x1a18>
   16900:	mov	r2, #96	; 0x60
   16904:	mov	r1, r4
   16908:	ldr	r0, [pc, #1192]	; 16db8 <__flatcc_fb_codegen_c@@Base+0x19a8>
   1690c:	bl	14038 <__assert_fail@plt>
   16910:	ldr	r3, [r4, #204]	; 0xcc
   16914:	mov	r2, #66	; 0x42
   16918:	mov	r1, #1
   1691c:	ldr	r0, [pc, #1288]	; 16e2c <__flatcc_fb_codegen_c@@Base+0x1a1c>
   16920:	bl	13f18 <fwrite@plt>
   16924:	ldr	r3, [r4, #204]	; 0xcc
   16928:	mov	r2, #61	; 0x3d
   1692c:	mov	r1, #1
   16930:	ldr	r0, [pc, #1272]	; 16e30 <__flatcc_fb_codegen_c@@Base+0x1a20>
   16934:	bl	13f18 <fwrite@plt>
   16938:	add	r3, sp, #40	; 0x28
   1693c:	str	r3, [sp, #8]
   16940:	str	r7, [sp, #4]
   16944:	str	r6, [sp]
   16948:	add	r3, sp, #260	; 0x104
   1694c:	ldr	r2, [sp, #32]
   16950:	ldr	r1, [pc, #1244]	; 16e34 <__flatcc_fb_codegen_c@@Base+0x1a24>
   16954:	ldr	r0, [r4, #204]	; 0xcc
   16958:	bl	13f84 <fprintf@plt>
   1695c:	ldr	r3, [r4, #212]	; 0xd4
   16960:	ldr	r3, [r3, #136]	; 0x88
   16964:	cmp	r3, #0
   16968:	moveq	r8, r9
   1696c:	beq	16ac0 <__flatcc_fb_codegen_c@@Base+0x16b0>
   16970:	b	16bf8 <__flatcc_fb_codegen_c@@Base+0x17e8>
   16974:	add	r3, sp, #40	; 0x28
   16978:	str	r3, [sp, #8]
   1697c:	str	r7, [sp, #4]
   16980:	str	r6, [sp]
   16984:	add	r3, sp, #260	; 0x104
   16988:	ldr	r2, [sp, #32]
   1698c:	ldr	r1, [pc, #1188]	; 16e38 <__flatcc_fb_codegen_c@@Base+0x1a28>
   16990:	ldr	r0, [r4, #204]	; 0xcc
   16994:	bl	13f84 <fprintf@plt>
   16998:	b	16aac <__flatcc_fb_codegen_c@@Base+0x169c>
   1699c:	ldr	r3, [r4, #204]	; 0xcc
   169a0:	mov	r2, #84	; 0x54
   169a4:	mov	r1, #1
   169a8:	mov	r0, fp
   169ac:	bl	13f18 <fwrite@plt>
   169b0:	mov	r9, #1
   169b4:	b	16ac0 <__flatcc_fb_codegen_c@@Base+0x16b0>
   169b8:	ldr	r1, [r4, #204]	; 0xcc
   169bc:	mov	r0, #10
   169c0:	bl	13fe4 <fputc@plt>
   169c4:	add	sp, sp, #484	; 0x1e4
   169c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169cc:	ldr	r2, [sp, #28]
   169d0:	add	r7, r2, #1
   169d4:	ldr	r3, [r5, #88]	; 0x58
   169d8:	str	r9, [sp, #4]
   169dc:	str	r8, [sp]
   169e0:	ldr	r1, [pc, #1108]	; 16e3c <__flatcc_fb_codegen_c@@Base+0x1a2c>
   169e4:	ldr	r0, [r4, #204]	; 0xcc
   169e8:	bl	13f84 <fprintf@plt>
   169ec:	str	r7, [sp, #28]
   169f0:	b	16a30 <__flatcc_fb_codegen_c@@Base+0x1620>
   169f4:	ldrh	r3, [r5, #72]	; 0x48
   169f8:	tst	r3, #4
   169fc:	beq	1654c <__flatcc_fb_codegen_c@@Base+0x113c>
   16a00:	ldr	r2, [sp, #28]
   16a04:	add	r7, r2, #1
   16a08:	str	r9, [sp, #8]
   16a0c:	str	r8, [sp, #4]
   16a10:	ldr	r3, [r5, #88]	; 0x58
   16a14:	str	r3, [sp]
   16a18:	mov	r3, r2
   16a1c:	mov	r2, sl
   16a20:	ldr	r1, [pc, #1048]	; 16e40 <__flatcc_fb_codegen_c@@Base+0x1a30>
   16a24:	ldr	r0, [r4, #204]	; 0xcc
   16a28:	bl	13f84 <fprintf@plt>
   16a2c:	str	r7, [sp, #28]
   16a30:	ldr	r7, [r5, #80]	; 0x50
   16a34:	ldr	r3, [r5, #88]	; 0x58
   16a38:	add	r7, r7, r3
   16a3c:	ldr	r5, [r5]
   16a40:	cmp	r5, #0
   16a44:	beq	167ac <__flatcc_fb_codegen_c@@Base+0x139c>
   16a48:	ldr	r8, [r5, #68]	; 0x44
   16a4c:	cmp	r8, #0
   16a50:	beq	16514 <__flatcc_fb_codegen_c@@Base+0x1104>
   16a54:	mov	r1, #1
   16a58:	mov	r3, #0
   16a5c:	mov	r9, r3
   16a60:	b	164d4 <__flatcc_fb_codegen_c@@Base+0x10c4>
   16a64:	ldr	r1, [pc, #852]	; 16dc0 <__flatcc_fb_codegen_c@@Base+0x19b0>
   16a68:	mov	r3, sl
   16a6c:	ldr	r2, [pc, #976]	; 16e44 <__flatcc_fb_codegen_c@@Base+0x1a34>
   16a70:	b	16a80 <__flatcc_fb_codegen_c@@Base+0x1670>
   16a74:	ldr	r1, [pc, #888]	; 16df4 <__flatcc_fb_codegen_c@@Base+0x19e4>
   16a78:	mov	r3, sl
   16a7c:	ldr	r2, [pc, #964]	; 16e48 <__flatcc_fb_codegen_c@@Base+0x1a38>
   16a80:	str	r1, [sp, #20]
   16a84:	str	r3, [sp, #16]
   16a88:	str	r2, [sp, #12]
   16a8c:	ldr	r2, [sp, #32]
   16a90:	str	r2, [sp, #8]
   16a94:	str	r7, [sp, #4]
   16a98:	str	r6, [sp]
   16a9c:	add	r3, sp, #260	; 0x104
   16aa0:	ldr	r1, [pc, #932]	; 16e4c <__flatcc_fb_codegen_c@@Base+0x1a3c>
   16aa4:	ldr	r0, [r4, #204]	; 0xcc
   16aa8:	bl	13f84 <fprintf@plt>
   16aac:	ldrh	r2, [r5, #72]	; 0x48
   16ab0:	clz	r3, r8
   16ab4:	lsr	r3, r3, #5
   16ab8:	ands	r3, r3, r2, lsr #7
   16abc:	bne	1699c <__flatcc_fb_codegen_c@@Base+0x158c>
   16ac0:	ldr	r5, [r5]
   16ac4:	cmp	r5, #0
   16ac8:	beq	169b8 <__flatcc_fb_codegen_c@@Base+0x15a8>
   16acc:	ldrh	r3, [r5, #72]	; 0x48
   16ad0:	tst	r3, #4
   16ad4:	bne	16ac0 <__flatcc_fb_codegen_c@@Base+0x16b0>
   16ad8:	ldr	r3, [r5, #4]
   16adc:	ldr	r6, [r3, #4]
   16ae0:	ldr	r7, [r3]
   16ae4:	ldrh	r3, [r5, #24]
   16ae8:	cmp	r3, #8
   16aec:	beq	16848 <__flatcc_fb_codegen_c@@Base+0x1438>
   16af0:	cmp	r3, #14
   16af4:	bne	16aac <__flatcc_fb_codegen_c@@Base+0x169c>
   16af8:	ldr	r3, [r5, #16]
   16afc:	add	r2, sp, #40	; 0x28
   16b00:	mov	r1, r3
   16b04:	ldr	r0, [r3, #12]
   16b08:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   16b0c:	ldr	r2, [r5, #16]
   16b10:	ldrh	r3, [r2, #8]
   16b14:	cmp	r3, #1
   16b18:	beq	16974 <__flatcc_fb_codegen_c@@Base+0x1564>
   16b1c:	cmp	r3, #3
   16b20:	bne	16aac <__flatcc_fb_codegen_c@@Base+0x169c>
   16b24:	ldr	r3, [r2, #40]	; 0x28
   16b28:	sub	r3, r3, #1
   16b2c:	cmp	r3, #10
   16b30:	bhi	168d8 <__flatcc_fb_codegen_c@@Base+0x14c8>
   16b34:	add	r3, sp, #40	; 0x28
   16b38:	str	r3, [sp, #12]
   16b3c:	str	r3, [sp, #8]
   16b40:	str	r7, [sp, #4]
   16b44:	str	r6, [sp]
   16b48:	add	r3, sp, #260	; 0x104
   16b4c:	ldr	r2, [sp, #32]
   16b50:	ldr	r1, [pc, #760]	; 16e50 <__flatcc_fb_codegen_c@@Base+0x1a40>
   16b54:	ldr	r0, [r4, #204]	; 0xcc
   16b58:	bl	13f84 <fprintf@plt>
   16b5c:	ldr	r3, [r4, #212]	; 0xd4
   16b60:	ldr	r3, [r3, #32]
   16b64:	cmp	r3, #0
   16b68:	bne	16b9c <__flatcc_fb_codegen_c@@Base+0x178c>
   16b6c:	ldrh	r3, [r5, #72]	; 0x48
   16b70:	tst	r3, #128	; 0x80
   16b74:	beq	16ac0 <__flatcc_fb_codegen_c@@Base+0x16b0>
   16b78:	add	r3, sp, #40	; 0x28
   16b7c:	str	r3, [sp, #8]
   16b80:	str	r7, [sp, #4]
   16b84:	str	r6, [sp]
   16b88:	add	r3, sp, #260	; 0x104
   16b8c:	ldr	r2, [sp, #32]
   16b90:	ldr	r1, [pc, #700]	; 16e54 <__flatcc_fb_codegen_c@@Base+0x1a44>
   16b94:	ldr	r0, [r4, #204]	; 0xcc
   16b98:	bl	13f84 <fprintf@plt>
   16b9c:	ldrh	r3, [r5, #72]	; 0x48
   16ba0:	tst	r3, #128	; 0x80
   16ba4:	beq	16ac0 <__flatcc_fb_codegen_c@@Base+0x16b0>
   16ba8:	cmp	r9, #0
   16bac:	bne	16910 <__flatcc_fb_codegen_c@@Base+0x1500>
   16bb0:	ldr	r3, [r4, #204]	; 0xcc
   16bb4:	mov	r2, #61	; 0x3d
   16bb8:	mov	r1, #1
   16bbc:	ldr	r0, [pc, #620]	; 16e30 <__flatcc_fb_codegen_c@@Base+0x1a20>
   16bc0:	bl	13f18 <fwrite@plt>
   16bc4:	add	r3, sp, #40	; 0x28
   16bc8:	str	r3, [sp, #8]
   16bcc:	str	r7, [sp, #4]
   16bd0:	str	r6, [sp]
   16bd4:	add	r3, sp, #260	; 0x104
   16bd8:	ldr	r2, [sp, #32]
   16bdc:	ldr	r1, [pc, #592]	; 16e34 <__flatcc_fb_codegen_c@@Base+0x1a24>
   16be0:	ldr	r0, [r4, #204]	; 0xcc
   16be4:	bl	13f84 <fprintf@plt>
   16be8:	ldr	r3, [r4, #212]	; 0xd4
   16bec:	ldr	r3, [r3, #136]	; 0x88
   16bf0:	cmp	r3, #0
   16bf4:	beq	16c2c <__flatcc_fb_codegen_c@@Base+0x181c>
   16bf8:	add	r3, sp, #260	; 0x104
   16bfc:	str	r3, [sp, #12]
   16c00:	add	r2, sp, #40	; 0x28
   16c04:	str	r2, [sp, #8]
   16c08:	str	r7, [sp, #4]
   16c0c:	str	r6, [sp]
   16c10:	ldr	r2, [sp, #32]
   16c14:	ldr	r1, [pc, #572]	; 16e58 <__flatcc_fb_codegen_c@@Base+0x1a48>
   16c18:	ldr	r0, [r4, #204]	; 0xcc
   16c1c:	bl	13f84 <fprintf@plt>
   16c20:	cmp	r9, #0
   16c24:	movne	r8, r9
   16c28:	bne	16ac0 <__flatcc_fb_codegen_c@@Base+0x16b0>
   16c2c:	add	r8, sp, #40	; 0x28
   16c30:	str	r8, [sp, #8]
   16c34:	str	r7, [sp, #4]
   16c38:	str	r6, [sp]
   16c3c:	add	r3, sp, #260	; 0x104
   16c40:	ldr	r9, [sp, #32]
   16c44:	mov	r2, r9
   16c48:	ldr	r1, [pc, #524]	; 16e5c <__flatcc_fb_codegen_c@@Base+0x1a4c>
   16c4c:	ldr	r0, [r4, #204]	; 0xcc
   16c50:	bl	13f84 <fprintf@plt>
   16c54:	str	r8, [sp, #8]
   16c58:	str	r7, [sp, #4]
   16c5c:	str	r6, [sp]
   16c60:	add	r3, sp, #260	; 0x104
   16c64:	mov	r2, r9
   16c68:	ldr	r1, [pc, #496]	; 16e60 <__flatcc_fb_codegen_c@@Base+0x1a50>
   16c6c:	ldr	r0, [r4, #204]	; 0xcc
   16c70:	bl	13f84 <fprintf@plt>
   16c74:	ldr	r3, [r4, #212]	; 0xd4
   16c78:	ldr	r3, [r3, #136]	; 0x88
   16c7c:	cmp	r3, #0
   16c80:	moveq	r9, #1
   16c84:	moveq	r8, r9
   16c88:	beq	16ac0 <__flatcc_fb_codegen_c@@Base+0x16b0>
   16c8c:	str	r7, [sp, #4]
   16c90:	str	r6, [sp]
   16c94:	add	r3, sp, #260	; 0x104
   16c98:	mov	r2, r3
   16c9c:	ldr	r1, [pc, #448]	; 16e64 <__flatcc_fb_codegen_c@@Base+0x1a54>
   16ca0:	ldr	r0, [r4, #204]	; 0xcc
   16ca4:	bl	13f84 <fprintf@plt>
   16ca8:	mov	r9, #1
   16cac:	mov	r8, r9
   16cb0:	b	16ac0 <__flatcc_fb_codegen_c@@Base+0x16b0>
   16cb4:	ldr	r1, [pc, #264]	; 16dc4 <__flatcc_fb_codegen_c@@Base+0x19b4>
   16cb8:	mov	r3, sl
   16cbc:	ldr	r2, [pc, #420]	; 16e68 <__flatcc_fb_codegen_c@@Base+0x1a58>
   16cc0:	b	16a80 <__flatcc_fb_codegen_c@@Base+0x1670>
   16cc4:	ldr	r3, [sp, #32]
   16cc8:	ldr	r1, [pc, #252]	; 16dcc <__flatcc_fb_codegen_c@@Base+0x19bc>
   16ccc:	ldr	r2, [pc, #408]	; 16e6c <__flatcc_fb_codegen_c@@Base+0x1a5c>
   16cd0:	b	16a80 <__flatcc_fb_codegen_c@@Base+0x1670>
   16cd4:	mov	r3, sl
   16cd8:	b	16cc8 <__flatcc_fb_codegen_c@@Base+0x18b8>
   16cdc:	ldr	r1, [pc, #236]	; 16dd0 <__flatcc_fb_codegen_c@@Base+0x19c0>
   16ce0:	mov	r3, sl
   16ce4:	ldr	r2, [pc, #388]	; 16e70 <__flatcc_fb_codegen_c@@Base+0x1a60>
   16ce8:	b	16a80 <__flatcc_fb_codegen_c@@Base+0x1670>
   16cec:	ldr	r1, [pc, #224]	; 16dd4 <__flatcc_fb_codegen_c@@Base+0x19c4>
   16cf0:	mov	r3, sl
   16cf4:	ldr	r2, [pc, #376]	; 16e74 <__flatcc_fb_codegen_c@@Base+0x1a64>
   16cf8:	b	16a80 <__flatcc_fb_codegen_c@@Base+0x1670>
   16cfc:	ldr	r1, [pc, #212]	; 16dd8 <__flatcc_fb_codegen_c@@Base+0x19c8>
   16d00:	mov	r3, sl
   16d04:	ldr	r2, [pc, #364]	; 16e78 <__flatcc_fb_codegen_c@@Base+0x1a68>
   16d08:	b	16a80 <__flatcc_fb_codegen_c@@Base+0x1670>
   16d0c:	ldr	r1, [pc, #200]	; 16ddc <__flatcc_fb_codegen_c@@Base+0x19cc>
   16d10:	mov	r3, sl
   16d14:	ldr	r2, [pc, #352]	; 16e7c <__flatcc_fb_codegen_c@@Base+0x1a6c>
   16d18:	b	16a80 <__flatcc_fb_codegen_c@@Base+0x1670>
   16d1c:	ldr	r1, [pc, #188]	; 16de0 <__flatcc_fb_codegen_c@@Base+0x19d0>
   16d20:	mov	r3, sl
   16d24:	mov	r2, r1
   16d28:	b	16a80 <__flatcc_fb_codegen_c@@Base+0x1670>
   16d2c:	ldr	r1, [pc, #176]	; 16de4 <__flatcc_fb_codegen_c@@Base+0x19d4>
   16d30:	mov	r3, sl
   16d34:	mov	r2, r1
   16d38:	b	16a80 <__flatcc_fb_codegen_c@@Base+0x1670>
   16d3c:	andeq	r5, r4, r0, lsr #2
   16d40:	andeq	fp, r3, ip, ror sl
   16d44:	andeq	r3, r4, r4, asr lr
   16d48:	andeq	fp, r3, r8, ror r6
   16d4c:	andeq	fp, r3, r8, ror #13
   16d50:	andeq	fp, r3, r4, lsl #27
   16d54:	andeq	r0, r0, r9, lsr #7
   16d58:	andeq	fp, r3, r4, lsr #27
   16d5c:	andeq	r0, r0, sl, lsr #7
   16d60:	andeq	fp, r3, r4, asr #27
   16d64:	andeq	fp, r3, r4, lsl #21
   16d68:	andeq	ip, r3, ip, ror #9
   16d6c:	andeq	fp, r3, r4, asr #30
   16d70:	andeq	fp, r3, r4, ror #27
   16d74:	andeq	fp, r3, r8, asr #28
   16d78:	muleq	r3, ip, lr
   16d7c:	andeq	fp, r3, r0, ror #29
   16d80:	andeq	ip, r3, r8, lsl #3
   16d84:			; <UNDEFINED> instruction: 0x0003c1bc
   16d88:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   16d8c:	muleq	r3, ip, r4
   16d90:	andeq	fp, r3, r0, lsr pc
   16d94:	andeq	ip, r4, ip, asr #29
   16d98:	andeq	ip, r3, r8, ror #10
   16d9c:	andeq	fp, r3, r4, asr pc
   16da0:	andeq	ip, r3, r0, lsr #32
   16da4:	andeq	ip, r3, r0, asr #32
   16da8:	andeq	r0, r0, r5, lsl #8
   16dac:	andeq	r6, r6, r8, lsr #1
   16db0:	andeq	fp, r3, r4, asr #20
   16db4:	andeq	fp, r3, r8, lsr sl
   16db8:	andeq	r3, r4, r0, ror lr
   16dbc:	andeq	fp, r3, ip, asr pc
   16dc0:	ldrdeq	fp, [r3], -r4
   16dc4:	andeq	fp, r3, ip, ror #17
   16dc8:	andeq	fp, r3, ip, ror pc
   16dcc:	strdeq	fp, [r3], -r4
   16dd0:	strdeq	fp, [r3], -ip
   16dd4:	andeq	fp, r3, r4, lsl #18
   16dd8:	andeq	fp, r3, ip, lsl #18
   16ddc:	andeq	fp, r3, r4, lsl r9
   16de0:	andeq	fp, r3, ip, lsl r9
   16de4:	andeq	fp, r3, r4, lsr #18
   16de8:	andeq	fp, r3, ip, ror #19
   16dec:	andeq	fp, r3, r8, asr #12
   16df0:	andeq	fp, r3, r8, asr #17
   16df4:	andeq	fp, r3, r0, ror #17
   16df8:	andeq	fp, r3, r8, lsl #31
   16dfc:	andeq	fp, r3, ip, lsr sp
   16e00:	strdeq	fp, [r3], -ip
   16e04:	andeq	ip, r3, r8, asr #32
   16e08:	strdeq	r0, [r0], -sl
   16e0c:	andeq	fp, r3, r0, lsr #31
   16e10:	andeq	ip, r3, r8
   16e14:	andeq	ip, r3, r0, asr r0
   16e18:	muleq	r3, r0, r0
   16e1c:	andeq	ip, r3, r8, ror #1
   16e20:	andeq	ip, r3, r0, lsr r1
   16e24:	andeq	fp, r3, r4, asr #26
   16e28:	andeq	fp, r3, r4, lsl #13
   16e2c:	andeq	ip, r3, r0, asr #5
   16e30:	andeq	ip, r3, r4, lsl #6
   16e34:	andeq	ip, r3, r4, asr #6
   16e38:	andeq	ip, r3, r4, ror #8
   16e3c:	strdeq	ip, [r3], -r4
   16e40:	andeq	ip, r3, r8, lsr #10
   16e44:	andeq	fp, r3, ip, asr #26
   16e48:	andeq	fp, r3, r4, asr sp
   16e4c:	andeq	ip, r3, r4, lsl r2
   16e50:	andeq	ip, r3, ip, asr #4
   16e54:	andeq	ip, r3, r8, lsl #5
   16e58:	andeq	ip, r3, ip, ror r3
   16e5c:			; <UNDEFINED> instruction: 0x0003c3b8
   16e60:	strdeq	ip, [r3], -r8
   16e64:	andeq	ip, r3, r8, lsr r4
   16e68:	andeq	fp, r3, ip, asr sp
   16e6c:	andeq	r3, r5, r0, ror #17
   16e70:	andeq	fp, r3, r4, ror #26
   16e74:	andeq	fp, r3, ip, ror #26
   16e78:	andeq	fp, r3, r4, ror sp
   16e7c:	andeq	fp, r3, ip, ror sp
   16e80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e84:	sub	sp, sp, #1040	; 0x410
   16e88:	sub	sp, sp, #12
   16e8c:	str	r0, [sp, #44]	; 0x2c
   16e90:	ldrh	r3, [r1, #8]
   16e94:	cmp	r3, #0
   16e98:	bne	16f14 <__flatcc_fb_codegen_c@@Base+0x1b04>
   16e9c:	mov	r4, r0
   16ea0:	mov	r8, r1
   16ea4:	mov	r5, #220	; 0xdc
   16ea8:	mov	r2, r5
   16eac:	mov	r1, #0
   16eb0:	add	r0, sp, #828	; 0x33c
   16eb4:	bl	13f9c <memset@plt>
   16eb8:	mov	r2, r5
   16ebc:	mov	r1, #0
   16ec0:	add	r0, sp, #608	; 0x260
   16ec4:	bl	13f9c <memset@plt>
   16ec8:	ldr	r1, [r4, #204]	; 0xcc
   16ecc:	mov	r0, #10
   16ed0:	bl	13fe4 <fputc@plt>
   16ed4:	str	r8, [sp, #56]	; 0x38
   16ed8:	add	r2, sp, #828	; 0x33c
   16edc:	mov	r1, r8
   16ee0:	ldr	r0, [r8, #12]
   16ee4:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   16ee8:	ldr	r5, [r8, #32]
   16eec:	cmp	r5, #0
   16ef0:	beq	16f98 <__flatcc_fb_codegen_c@@Base+0x1b88>
   16ef4:	mov	r1, #1
   16ef8:	mov	r3, #0
   16efc:	ldr	r9, [pc, #3964]	; 17e80 <__flatcc_fb_codegen_c@@Base+0x2a70>
   16f00:	ldr	fp, [pc, #3964]	; 17e84 <__flatcc_fb_codegen_c@@Base+0x2a74>
   16f04:	ldr	sl, [pc, #3964]	; 17e88 <__flatcc_fb_codegen_c@@Base+0x2a78>
   16f08:	ldr	r7, [pc, #3964]	; 17e8c <__flatcc_fb_codegen_c@@Base+0x2a7c>
   16f0c:	mov	r6, r3
   16f10:	b	16f58 <__flatcc_fb_codegen_c@@Base+0x1b48>
   16f14:	ldr	r3, [pc, #3956]	; 17e90 <__flatcc_fb_codegen_c@@Base+0x2a80>
   16f18:	ldr	r2, [pc, #3956]	; 17e94 <__flatcc_fb_codegen_c@@Base+0x2a84>
   16f1c:	ldr	r1, [pc, #3956]	; 17e98 <__flatcc_fb_codegen_c@@Base+0x2a88>
   16f20:	ldr	r0, [pc, #3956]	; 17e9c <__flatcc_fb_codegen_c@@Base+0x2a8c>
   16f24:	bl	14038 <__assert_fail@plt>
   16f28:	ldr	r2, [r5, #4]
   16f2c:	ldr	r3, [r2]
   16f30:	ldr	r2, [r2, #4]
   16f34:	mov	r1, r7
   16f38:	ldr	r0, [r4, #204]	; 0xcc
   16f3c:	bl	13f84 <fprintf@plt>
   16f40:	ldr	r3, [r5, #4]
   16f44:	ldr	r3, [r3, #8]
   16f48:	ldr	r5, [r5]
   16f4c:	mov	r1, r6
   16f50:	cmp	r5, #0
   16f54:	beq	16f84 <__flatcc_fb_codegen_c@@Base+0x1b74>
   16f58:	ldr	r2, [r5, #4]
   16f5c:	ldr	r2, [r2, #8]
   16f60:	cmp	r2, r3
   16f64:	beq	16f28 <__flatcc_fb_codegen_c@@Base+0x1b18>
   16f68:	cmp	r1, #0
   16f6c:	mov	r2, r9
   16f70:	movne	r1, sl
   16f74:	moveq	r1, fp
   16f78:	ldr	r0, [r4, #204]	; 0xcc
   16f7c:	bl	13f84 <fprintf@plt>
   16f80:	b	16f28 <__flatcc_fb_codegen_c@@Base+0x1b18>
   16f84:	ldr	r3, [r4, #204]	; 0xcc
   16f88:	mov	r2, #4
   16f8c:	mov	r1, #1
   16f90:	ldr	r0, [pc, #3848]	; 17ea0 <__flatcc_fb_codegen_c@@Base+0x2a90>
   16f94:	bl	13f18 <fwrite@plt>
   16f98:	add	r5, sp, #828	; 0x33c
   16f9c:	mov	r2, r5
   16fa0:	ldr	r1, [pc, #3836]	; 17ea4 <__flatcc_fb_codegen_c@@Base+0x2a94>
   16fa4:	ldr	r0, [r4, #204]	; 0xcc
   16fa8:	bl	13f84 <fprintf@plt>
   16fac:	str	r4, [sp]
   16fb0:	mov	r3, r5
   16fb4:	mov	r2, r5
   16fb8:	ldr	r1, [pc, #3816]	; 17ea8 <__flatcc_fb_codegen_c@@Base+0x2a98>
   16fbc:	ldr	r0, [r4, #204]	; 0xcc
   16fc0:	bl	13f84 <fprintf@plt>
   16fc4:	str	r5, [sp, #8]
   16fc8:	str	r4, [sp, #4]
   16fcc:	str	r5, [sp]
   16fd0:	mov	r3, r5
   16fd4:	mov	r2, r5
   16fd8:	ldr	r1, [pc, #3788]	; 17eac <__flatcc_fb_codegen_c@@Base+0x2a9c>
   16fdc:	ldr	r0, [r4, #204]	; 0xcc
   16fe0:	bl	13f84 <fprintf@plt>
   16fe4:	mov	r3, r5
   16fe8:	mov	r2, r4
   16fec:	ldr	r1, [pc, #3772]	; 17eb0 <__flatcc_fb_codegen_c@@Base+0x2aa0>
   16ff0:	ldr	r0, [r4, #204]	; 0xcc
   16ff4:	bl	13f84 <fprintf@plt>
   16ff8:	ldr	r1, [r4, #204]	; 0xcc
   16ffc:	mov	r0, #10
   17000:	bl	13fe4 <fputc@plt>
   17004:	ldr	r5, [r8, #20]
   17008:	cmp	r5, #0
   1700c:	beq	18538 <__flatcc_fb_codegen_c@@Base+0x3128>
   17010:	mov	r3, #0
   17014:	str	r3, [sp, #48]	; 0x30
   17018:	ldr	fp, [pc, #3680]	; 17e80 <__flatcc_fb_codegen_c@@Base+0x2a70>
   1701c:	ldr	sl, [pc, #3688]	; 17e8c <__flatcc_fb_codegen_c@@Base+0x2a7c>
   17020:	b	17110 <__flatcc_fb_codegen_c@@Base+0x1d00>
   17024:	ldr	r2, [r6, #4]
   17028:	ldr	r3, [r2]
   1702c:	ldr	r2, [r2, #4]
   17030:	mov	r1, sl
   17034:	ldr	r0, [r4, #204]	; 0xcc
   17038:	bl	13f84 <fprintf@plt>
   1703c:	ldr	r3, [r6, #4]
   17040:	ldr	r3, [r3, #8]
   17044:	ldr	r6, [r6]
   17048:	mov	r1, r7
   1704c:	cmp	r6, #0
   17050:	beq	17080 <__flatcc_fb_codegen_c@@Base+0x1c70>
   17054:	ldr	r2, [r6, #4]
   17058:	ldr	r2, [r2, #8]
   1705c:	cmp	r2, r3
   17060:	beq	17024 <__flatcc_fb_codegen_c@@Base+0x1c14>
   17064:	cmp	r1, #0
   17068:	mov	r2, fp
   1706c:	ldrne	r1, [pc, #3604]	; 17e88 <__flatcc_fb_codegen_c@@Base+0x2a78>
   17070:	ldreq	r1, [pc, #3596]	; 17e84 <__flatcc_fb_codegen_c@@Base+0x2a74>
   17074:	ldr	r0, [r4, #204]	; 0xcc
   17078:	bl	13f84 <fprintf@plt>
   1707c:	b	17024 <__flatcc_fb_codegen_c@@Base+0x1c14>
   17080:	ldr	r3, [r4, #204]	; 0xcc
   17084:	mov	r2, #4
   17088:	mov	r1, #1
   1708c:	ldr	r0, [pc, #3596]	; 17ea0 <__flatcc_fb_codegen_c@@Base+0x2a90>
   17090:	bl	13f18 <fwrite@plt>
   17094:	ldr	r3, [r5, #4]
   17098:	ldr	r6, [r3, #4]
   1709c:	ldr	r7, [r3]
   170a0:	ldrh	r9, [r5, #72]	; 0x48
   170a4:	tst	r9, #4
   170a8:	bne	170ec <__flatcc_fb_codegen_c@@Base+0x1cdc>
   170ac:	lsr	r9, r9, #8
   170b0:	and	r9, r9, #1
   170b4:	ldrh	r3, [r5, #24]
   170b8:	sub	r3, r3, #7
   170bc:	cmp	r3, #8
   170c0:	ldrls	pc, [pc, r3, lsl #2]
   170c4:	b	183e8 <__flatcc_fb_codegen_c@@Base+0x2fd8>
   170c8:	andeq	r7, r1, r4, asr r7
   170cc:	andeq	r7, r1, ip, lsr #2
   170d0:	strdeq	r7, [r1], -r4
   170d4:	andeq	r7, r1, r4, ror #18
   170d8:	andeq	r8, r1, r8, ror #7
   170dc:	andeq	r8, r1, r8, ror #7
   170e0:	andeq	r8, r1, r8, ror #7
   170e4:	andeq	r7, r1, r4, asr fp
   170e8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   170ec:	str	r7, [sp]
   170f0:	mov	r3, r6
   170f4:	add	r2, sp, #828	; 0x33c
   170f8:	ldr	r1, [pc, #3508]	; 17eb4 <__flatcc_fb_codegen_c@@Base+0x2aa4>
   170fc:	ldr	r0, [r4, #204]	; 0xcc
   17100:	bl	13f84 <fprintf@plt>
   17104:	ldr	r5, [r5]
   17108:	cmp	r5, #0
   1710c:	beq	18538 <__flatcc_fb_codegen_c@@Base+0x3128>
   17110:	ldr	r6, [r5, #68]	; 0x44
   17114:	cmp	r6, #0
   17118:	beq	17094 <__flatcc_fb_codegen_c@@Base+0x1c84>
   1711c:	mov	r1, #1
   17120:	mov	r3, #0
   17124:	mov	r7, r3
   17128:	b	17054 <__flatcc_fb_codegen_c@@Base+0x1c44>
   1712c:	ldr	r3, [r5, #16]
   17130:	cmp	r3, #5
   17134:	beq	18438 <__flatcc_fb_codegen_c@@Base+0x3028>
   17138:	sub	r2, r3, #1
   1713c:	cmp	r2, #10
   17140:	ldrls	pc, [pc, r2, lsl #2]
   17144:	b	17174 <__flatcc_fb_codegen_c@@Base+0x1d64>
   17148:	andeq	r7, r1, ip, lsr #3
   1714c:	andeq	r8, r1, r8, asr #9
   17150:	andeq	r8, r1, r4, lsr #8
   17154:	ldrdeq	r8, [r1], -ip
   17158:	andeq	r8, r1, r0, ror r4
   1715c:	andeq	r8, r1, r8, ror r4
   17160:	andeq	r8, r1, ip, lsl #9
   17164:	andeq	r8, r1, r0, lsr #9
   17168:			; <UNDEFINED> instruction: 0x000184b4
   1716c:	strdeq	r8, [r1], -r0
   17170:	andeq	r8, r1, r4, lsl r5
   17174:	ldr	r4, [pc, #3632]	; 17fac <__flatcc_fb_codegen_c@@Base+0x2b9c>
   17178:	ldr	r3, [pc, #3680]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   1717c:	ldr	r0, [r3]
   17180:	ldr	r3, [pc, #3624]	; 17fb0 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   17184:	str	r3, [sp]
   17188:	mov	r3, #141	; 0x8d
   1718c:	mov	r2, r4
   17190:	ldr	r1, [pc, #3664]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   17194:	bl	13f84 <fprintf@plt>
   17198:	ldr	r3, [pc, #3352]	; 17eb8 <__flatcc_fb_codegen_c@@Base+0x2aa8>
   1719c:	mov	r2, #141	; 0x8d
   171a0:	mov	r1, r4
   171a4:	ldr	r0, [pc, #3652]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   171a8:	bl	14038 <__assert_fail@plt>
   171ac:	ldrh	r2, [r5, #56]	; 0x38
   171b0:	sub	r2, r2, #3
   171b4:	cmp	r2, #3
   171b8:	ldrls	pc, [pc, r2, lsl #2]
   171bc:	b	176b8 <__flatcc_fb_codegen_c@@Base+0x22a8>
   171c0:	andeq	r7, r1, r0, asr r6
   171c4:	andeq	r7, r1, r4, lsl #9
   171c8:	ldrdeq	r7, [r1], -r0
   171cc:	andeq	r7, r1, ip, ror r5
   171d0:	ldr	r9, [pc, #3300]	; 17ebc <__flatcc_fb_codegen_c@@Base+0x2aac>
   171d4:	ldr	r2, [pc, #3300]	; 17ec0 <__flatcc_fb_codegen_c@@Base+0x2ab0>
   171d8:	str	r2, [sp, #60]	; 0x3c
   171dc:	str	fp, [sp, #52]	; 0x34
   171e0:	b	171f0 <__flatcc_fb_codegen_c@@Base+0x1de0>
   171e4:	ldr	r9, [pc, #3288]	; 17ec4 <__flatcc_fb_codegen_c@@Base+0x2ab4>
   171e8:	str	r9, [sp, #60]	; 0x3c
   171ec:	str	fp, [sp, #52]	; 0x34
   171f0:	sub	r3, r3, #1
   171f4:	cmp	r3, #8
   171f8:	ldrls	pc, [pc, r3, lsl #2]
   171fc:	b	1743c <__flatcc_fb_codegen_c@@Base+0x202c>
   17200:	andeq	r7, r1, r4, ror r4
   17204:	andeq	r7, r1, r4, lsr r2
   17208:	andeq	r7, r1, ip, ror r4
   1720c:	andeq	r7, r1, ip, lsl #8
   17210:	andeq	r7, r1, r4, lsl r4
   17214:	andeq	r7, r1, ip, lsl r4
   17218:	andeq	r7, r1, r4, lsr #8
   1721c:	andeq	r7, r1, ip, lsr #8
   17220:	andeq	r7, r1, r4, lsr r4
   17224:	ldr	r9, [pc, #3228]	; 17ec8 <__flatcc_fb_codegen_c@@Base+0x2ab8>
   17228:	str	r9, [sp, #60]	; 0x3c
   1722c:	str	fp, [sp, #52]	; 0x34
   17230:	b	171f0 <__flatcc_fb_codegen_c@@Base+0x1de0>
   17234:	ldr	r2, [pc, #3392]	; 17f7c <__flatcc_fb_codegen_c@@Base+0x2b6c>
   17238:	ldrd	r0, [r5, #48]	; 0x30
   1723c:	strd	r0, [sp]
   17240:	ldr	r1, [pc, #3204]	; 17ecc <__flatcc_fb_codegen_c@@Base+0x2abc>
   17244:	add	r0, sp, #508	; 0x1fc
   17248:	bl	13ff0 <sprintf@plt>
   1724c:	add	r3, sp, #508	; 0x1fc
   17250:	str	r3, [sp, #36]	; 0x24
   17254:	str	r9, [sp, #32]
   17258:	ldr	r3, [sp, #52]	; 0x34
   1725c:	str	r3, [sp, #28]
   17260:	ldr	r3, [sp, #60]	; 0x3c
   17264:	str	r3, [sp, #24]
   17268:	ldr	r1, [sp, #44]	; 0x2c
   1726c:	str	r1, [sp, #20]
   17270:	str	r7, [sp, #16]
   17274:	str	r6, [sp, #12]
   17278:	add	r3, sp, #828	; 0x33c
   1727c:	str	r3, [sp, #8]
   17280:	ldrd	r2, [r5, #96]	; 0x60
   17284:	strd	r2, [sp]
   17288:	mov	r2, r1
   1728c:	ldr	r1, [pc, #3132]	; 17ed0 <__flatcc_fb_codegen_c@@Base+0x2ac0>
   17290:	ldr	r0, [r4, #204]	; 0xcc
   17294:	bl	13f84 <fprintf@plt>
   17298:	ldr	r3, [r4, #212]	; 0xd4
   1729c:	ldr	r3, [r3, #32]
   172a0:	cmp	r3, #0
   172a4:	bne	172dc <__flatcc_fb_codegen_c@@Base+0x1ecc>
   172a8:	ldrh	r3, [r5, #72]	; 0x48
   172ac:	tst	r3, #128	; 0x80
   172b0:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   172b4:	str	r9, [sp, #12]
   172b8:	ldr	r3, [sp, #52]	; 0x34
   172bc:	str	r3, [sp, #8]
   172c0:	str	r7, [sp, #4]
   172c4:	str	r6, [sp]
   172c8:	add	r3, sp, #828	; 0x33c
   172cc:	ldr	r2, [sp, #44]	; 0x2c
   172d0:	ldr	r1, [pc, #3068]	; 17ed4 <__flatcc_fb_codegen_c@@Base+0x2ac4>
   172d4:	ldr	r0, [r4, #204]	; 0xcc
   172d8:	bl	13f84 <fprintf@plt>
   172dc:	ldrh	r3, [r5, #72]	; 0x48
   172e0:	tst	r3, #128	; 0x80
   172e4:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   172e8:	ldr	r3, [sp, #48]	; 0x30
   172ec:	cmp	r3, #0
   172f0:	bne	176f0 <__flatcc_fb_codegen_c@@Base+0x22e0>
   172f4:	ldr	r3, [r4, #204]	; 0xcc
   172f8:	mov	r2, #61	; 0x3d
   172fc:	mov	r1, #1
   17300:	ldr	r0, [pc, #3252]	; 17fbc <__flatcc_fb_codegen_c@@Base+0x2bac>
   17304:	bl	13f18 <fwrite@plt>
   17308:	str	r9, [sp, #12]
   1730c:	ldr	r3, [sp, #52]	; 0x34
   17310:	str	r3, [sp, #8]
   17314:	str	r7, [sp, #4]
   17318:	str	r6, [sp]
   1731c:	add	r3, sp, #828	; 0x33c
   17320:	ldr	r2, [sp, #44]	; 0x2c
   17324:	ldr	r1, [pc, #2988]	; 17ed8 <__flatcc_fb_codegen_c@@Base+0x2ac8>
   17328:	ldr	r0, [r4, #204]	; 0xcc
   1732c:	bl	13f84 <fprintf@plt>
   17330:	ldr	r3, [r4, #212]	; 0xd4
   17334:	ldr	r3, [r3, #136]	; 0x88
   17338:	cmp	r3, #0
   1733c:	beq	17378 <__flatcc_fb_codegen_c@@Base+0x1f68>
   17340:	ldr	r2, [sp, #44]	; 0x2c
   17344:	str	r2, [sp, #16]
   17348:	str	r9, [sp, #12]
   1734c:	ldr	r3, [sp, #52]	; 0x34
   17350:	str	r3, [sp, #8]
   17354:	str	r7, [sp, #4]
   17358:	str	r6, [sp]
   1735c:	add	r3, sp, #828	; 0x33c
   17360:	ldr	r1, [pc, #2932]	; 17edc <__flatcc_fb_codegen_c@@Base+0x2acc>
   17364:	ldr	r0, [r4, #204]	; 0xcc
   17368:	bl	13f84 <fprintf@plt>
   1736c:	ldr	r3, [sp, #48]	; 0x30
   17370:	cmp	r3, #0
   17374:	bne	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17378:	str	r9, [sp, #12]
   1737c:	ldr	r3, [sp, #52]	; 0x34
   17380:	str	r3, [sp, #8]
   17384:	str	r7, [sp, #4]
   17388:	str	r6, [sp]
   1738c:	add	r2, sp, #828	; 0x33c
   17390:	mov	r3, r2
   17394:	ldr	r2, [sp, #44]	; 0x2c
   17398:	ldr	r1, [pc, #2880]	; 17ee0 <__flatcc_fb_codegen_c@@Base+0x2ad0>
   1739c:	ldr	r0, [r4, #204]	; 0xcc
   173a0:	bl	13f84 <fprintf@plt>
   173a4:	str	r9, [sp, #12]
   173a8:	ldr	r3, [sp, #52]	; 0x34
   173ac:	str	r3, [sp, #8]
   173b0:	str	r7, [sp, #4]
   173b4:	str	r6, [sp]
   173b8:	add	r3, sp, #828	; 0x33c
   173bc:	ldr	r2, [sp, #44]	; 0x2c
   173c0:	ldr	r1, [pc, #2844]	; 17ee4 <__flatcc_fb_codegen_c@@Base+0x2ad4>
   173c4:	ldr	r0, [r4, #204]	; 0xcc
   173c8:	bl	13f84 <fprintf@plt>
   173cc:	ldr	r3, [r4, #212]	; 0xd4
   173d0:	ldr	r3, [r3, #136]	; 0x88
   173d4:	cmp	r3, #0
   173d8:	moveq	r3, #1
   173dc:	streq	r3, [sp, #48]	; 0x30
   173e0:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   173e4:	str	r7, [sp, #4]
   173e8:	str	r6, [sp]
   173ec:	add	r3, sp, #828	; 0x33c
   173f0:	mov	r2, r3
   173f4:	ldr	r1, [pc, #2796]	; 17ee8 <__flatcc_fb_codegen_c@@Base+0x2ad8>
   173f8:	ldr	r0, [r4, #204]	; 0xcc
   173fc:	bl	13f84 <fprintf@plt>
   17400:	mov	r3, #1
   17404:	str	r3, [sp, #48]	; 0x30
   17408:	b	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   1740c:	ldr	r2, [pc, #2928]	; 17f84 <__flatcc_fb_codegen_c@@Base+0x2b74>
   17410:	b	17238 <__flatcc_fb_codegen_c@@Base+0x1e28>
   17414:	ldr	r2, [pc, #2920]	; 17f84 <__flatcc_fb_codegen_c@@Base+0x2b74>
   17418:	b	17238 <__flatcc_fb_codegen_c@@Base+0x1e28>
   1741c:	ldr	r2, [pc, #2916]	; 17f88 <__flatcc_fb_codegen_c@@Base+0x2b78>
   17420:	b	17238 <__flatcc_fb_codegen_c@@Base+0x1e28>
   17424:	ldr	r2, [pc, #2912]	; 17f8c <__flatcc_fb_codegen_c@@Base+0x2b7c>
   17428:	b	17238 <__flatcc_fb_codegen_c@@Base+0x1e28>
   1742c:	ldr	r2, [pc, #2908]	; 17f90 <__flatcc_fb_codegen_c@@Base+0x2b80>
   17430:	b	17238 <__flatcc_fb_codegen_c@@Base+0x1e28>
   17434:	ldr	r2, [pc, #2904]	; 17f94 <__flatcc_fb_codegen_c@@Base+0x2b84>
   17438:	b	17238 <__flatcc_fb_codegen_c@@Base+0x1e28>
   1743c:	ldr	r4, [pc, #2920]	; 17fac <__flatcc_fb_codegen_c@@Base+0x2b9c>
   17440:	ldr	r3, [pc, #2968]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   17444:	ldr	r0, [r3]
   17448:	ldr	r3, [pc, #2912]	; 17fb0 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   1744c:	str	r3, [sp]
   17450:	mov	r3, #226	; 0xe2
   17454:	mov	r2, r4
   17458:	ldr	r1, [pc, #2952]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   1745c:	bl	13f84 <fprintf@plt>
   17460:	ldr	r3, [pc, #2864]	; 17f98 <__flatcc_fb_codegen_c@@Base+0x2b88>
   17464:	mov	r2, #226	; 0xe2
   17468:	mov	r1, r4
   1746c:	ldr	r0, [pc, #2940]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   17470:	bl	14038 <__assert_fail@plt>
   17474:	ldr	r2, [pc, #2848]	; 17f9c <__flatcc_fb_codegen_c@@Base+0x2b8c>
   17478:	b	17238 <__flatcc_fb_codegen_c@@Base+0x1e28>
   1747c:	ldr	r2, [pc, #2844]	; 17fa0 <__flatcc_fb_codegen_c@@Base+0x2b90>
   17480:	b	17238 <__flatcc_fb_codegen_c@@Base+0x1e28>
   17484:	ldr	r9, [pc, #2608]	; 17ebc <__flatcc_fb_codegen_c@@Base+0x2aac>
   17488:	ldr	r2, [pc, #2608]	; 17ec0 <__flatcc_fb_codegen_c@@Base+0x2ab0>
   1748c:	str	r2, [sp, #60]	; 0x3c
   17490:	str	fp, [sp, #52]	; 0x34
   17494:	b	174a4 <__flatcc_fb_codegen_c@@Base+0x2094>
   17498:	ldr	r9, [pc, #2596]	; 17ec4 <__flatcc_fb_codegen_c@@Base+0x2ab4>
   1749c:	str	r9, [sp, #60]	; 0x3c
   174a0:	str	fp, [sp, #52]	; 0x34
   174a4:	sub	r3, r3, #1
   174a8:	cmp	r3, #8
   174ac:	ldrls	pc, [pc, r3, lsl #2]
   174b0:	b	17534 <__flatcc_fb_codegen_c@@Base+0x2124>
   174b4:	andeq	r7, r1, ip, ror #10
   174b8:	andeq	r7, r1, r8, ror #9
   174bc:	andeq	r7, r1, r4, ror r5
   174c0:	andeq	r7, r1, r4, lsl #10
   174c4:	andeq	r7, r1, ip, lsl #10
   174c8:	andeq	r7, r1, r4, lsl r5
   174cc:	andeq	r7, r1, ip, lsl r5
   174d0:	andeq	r7, r1, r4, lsr #10
   174d4:	andeq	r7, r1, ip, lsr #10
   174d8:	ldr	r9, [pc, #2536]	; 17ec8 <__flatcc_fb_codegen_c@@Base+0x2ab8>
   174dc:	str	r9, [sp, #60]	; 0x3c
   174e0:	str	fp, [sp, #52]	; 0x34
   174e4:	b	174a4 <__flatcc_fb_codegen_c@@Base+0x2094>
   174e8:	ldr	r2, [pc, #2700]	; 17f7c <__flatcc_fb_codegen_c@@Base+0x2b6c>
   174ec:	ldrd	r0, [r5, #48]	; 0x30
   174f0:	strd	r0, [sp]
   174f4:	ldr	r1, [pc, #2684]	; 17f78 <__flatcc_fb_codegen_c@@Base+0x2b68>
   174f8:	add	r0, sp, #508	; 0x1fc
   174fc:	bl	13ff0 <sprintf@plt>
   17500:	b	1724c <__flatcc_fb_codegen_c@@Base+0x1e3c>
   17504:	ldr	r2, [pc, #2680]	; 17f84 <__flatcc_fb_codegen_c@@Base+0x2b74>
   17508:	b	174ec <__flatcc_fb_codegen_c@@Base+0x20dc>
   1750c:	ldr	r2, [pc, #2672]	; 17f84 <__flatcc_fb_codegen_c@@Base+0x2b74>
   17510:	b	174ec <__flatcc_fb_codegen_c@@Base+0x20dc>
   17514:	ldr	r2, [pc, #2668]	; 17f88 <__flatcc_fb_codegen_c@@Base+0x2b78>
   17518:	b	174ec <__flatcc_fb_codegen_c@@Base+0x20dc>
   1751c:	ldr	r2, [pc, #2664]	; 17f8c <__flatcc_fb_codegen_c@@Base+0x2b7c>
   17520:	b	174ec <__flatcc_fb_codegen_c@@Base+0x20dc>
   17524:	ldr	r2, [pc, #2660]	; 17f90 <__flatcc_fb_codegen_c@@Base+0x2b80>
   17528:	b	174ec <__flatcc_fb_codegen_c@@Base+0x20dc>
   1752c:	ldr	r2, [pc, #2656]	; 17f94 <__flatcc_fb_codegen_c@@Base+0x2b84>
   17530:	b	174ec <__flatcc_fb_codegen_c@@Base+0x20dc>
   17534:	ldr	r4, [pc, #2672]	; 17fac <__flatcc_fb_codegen_c@@Base+0x2b9c>
   17538:	ldr	r3, [pc, #2720]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   1753c:	ldr	r0, [r3]
   17540:	ldr	r3, [pc, #2664]	; 17fb0 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   17544:	str	r3, [sp]
   17548:	mov	r3, #226	; 0xe2
   1754c:	mov	r2, r4
   17550:	ldr	r1, [pc, #2704]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   17554:	bl	13f84 <fprintf@plt>
   17558:	ldr	r3, [pc, #2616]	; 17f98 <__flatcc_fb_codegen_c@@Base+0x2b88>
   1755c:	mov	r2, #226	; 0xe2
   17560:	mov	r1, r4
   17564:	ldr	r0, [pc, #2692]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   17568:	bl	14038 <__assert_fail@plt>
   1756c:	ldr	r2, [pc, #2600]	; 17f9c <__flatcc_fb_codegen_c@@Base+0x2b8c>
   17570:	b	174ec <__flatcc_fb_codegen_c@@Base+0x20dc>
   17574:	ldr	r2, [pc, #2596]	; 17fa0 <__flatcc_fb_codegen_c@@Base+0x2b90>
   17578:	b	174ec <__flatcc_fb_codegen_c@@Base+0x20dc>
   1757c:	ldr	r9, [pc, #2360]	; 17ebc <__flatcc_fb_codegen_c@@Base+0x2aac>
   17580:	ldr	r2, [pc, #2360]	; 17ec0 <__flatcc_fb_codegen_c@@Base+0x2ab0>
   17584:	str	r2, [sp, #60]	; 0x3c
   17588:	str	fp, [sp, #52]	; 0x34
   1758c:	sub	r3, r3, #1
   17590:	cmp	r3, #8
   17594:	ldrls	pc, [pc, r3, lsl #2]
   17598:	b	17608 <__flatcc_fb_codegen_c@@Base+0x21f8>
   1759c:	andeq	r7, r1, r0, asr #12
   175a0:	andeq	r7, r1, r0, asr #11
   175a4:	andeq	r7, r1, r8, asr #12
   175a8:	ldrdeq	r7, [r1], -r8
   175ac:	andeq	r7, r1, r0, ror #11
   175b0:	andeq	r7, r1, r8, ror #11
   175b4:	strdeq	r7, [r1], -r0
   175b8:	strdeq	r7, [r1], -r8
   175bc:	andeq	r7, r1, r0, lsl #12
   175c0:	ldr	r2, [pc, #2484]	; 17f7c <__flatcc_fb_codegen_c@@Base+0x2b6c>
   175c4:	ldrb	r3, [r5, #48]	; 0x30
   175c8:	ldr	r1, [pc, #2480]	; 17f80 <__flatcc_fb_codegen_c@@Base+0x2b70>
   175cc:	add	r0, sp, #508	; 0x1fc
   175d0:	bl	13ff0 <sprintf@plt>
   175d4:	b	1724c <__flatcc_fb_codegen_c@@Base+0x1e3c>
   175d8:	ldr	r2, [pc, #2468]	; 17f84 <__flatcc_fb_codegen_c@@Base+0x2b74>
   175dc:	b	175c4 <__flatcc_fb_codegen_c@@Base+0x21b4>
   175e0:	ldr	r2, [pc, #2460]	; 17f84 <__flatcc_fb_codegen_c@@Base+0x2b74>
   175e4:	b	175c4 <__flatcc_fb_codegen_c@@Base+0x21b4>
   175e8:	ldr	r2, [pc, #2456]	; 17f88 <__flatcc_fb_codegen_c@@Base+0x2b78>
   175ec:	b	175c4 <__flatcc_fb_codegen_c@@Base+0x21b4>
   175f0:	ldr	r2, [pc, #2452]	; 17f8c <__flatcc_fb_codegen_c@@Base+0x2b7c>
   175f4:	b	175c4 <__flatcc_fb_codegen_c@@Base+0x21b4>
   175f8:	ldr	r2, [pc, #2448]	; 17f90 <__flatcc_fb_codegen_c@@Base+0x2b80>
   175fc:	b	175c4 <__flatcc_fb_codegen_c@@Base+0x21b4>
   17600:	ldr	r2, [pc, #2444]	; 17f94 <__flatcc_fb_codegen_c@@Base+0x2b84>
   17604:	b	175c4 <__flatcc_fb_codegen_c@@Base+0x21b4>
   17608:	ldr	r4, [pc, #2460]	; 17fac <__flatcc_fb_codegen_c@@Base+0x2b9c>
   1760c:	ldr	r3, [pc, #2508]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   17610:	ldr	r0, [r3]
   17614:	ldr	r3, [pc, #2452]	; 17fb0 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   17618:	str	r3, [sp]
   1761c:	mov	r3, #226	; 0xe2
   17620:	mov	r2, r4
   17624:	ldr	r1, [pc, #2492]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   17628:	bl	13f84 <fprintf@plt>
   1762c:	ldr	r3, [pc, #2404]	; 17f98 <__flatcc_fb_codegen_c@@Base+0x2b88>
   17630:	mov	r2, #226	; 0xe2
   17634:	mov	r1, r4
   17638:	ldr	r0, [pc, #2480]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   1763c:	bl	14038 <__assert_fail@plt>
   17640:	ldr	r2, [pc, #2388]	; 17f9c <__flatcc_fb_codegen_c@@Base+0x2b8c>
   17644:	b	175c4 <__flatcc_fb_codegen_c@@Base+0x21b4>
   17648:	ldr	r2, [pc, #2384]	; 17fa0 <__flatcc_fb_codegen_c@@Base+0x2b90>
   1764c:	b	175c4 <__flatcc_fb_codegen_c@@Base+0x21b4>
   17650:	ldr	r9, [pc, #2148]	; 17ebc <__flatcc_fb_codegen_c@@Base+0x2aac>
   17654:	ldr	r2, [pc, #2148]	; 17ec0 <__flatcc_fb_codegen_c@@Base+0x2ab0>
   17658:	str	r2, [sp, #60]	; 0x3c
   1765c:	b	17668 <__flatcc_fb_codegen_c@@Base+0x2258>
   17660:	ldr	r9, [pc, #2140]	; 17ec4 <__flatcc_fb_codegen_c@@Base+0x2ab4>
   17664:	str	r9, [sp, #60]	; 0x3c
   17668:	cmp	r3, #11
   1766c:	bne	176a0 <__flatcc_fb_codegen_c@@Base+0x2290>
   17670:	vldr	d7, [r5, #48]	; 0x30
   17674:	vcvt.f32.f64	s14, d7
   17678:	vcvt.f64.f32	d7, s14
   1767c:	vmov	r2, r3, d7
   17680:	ldr	r1, [pc, #2332]	; 17fa4 <__flatcc_fb_codegen_c@@Base+0x2b94>
   17684:	add	r0, sp, #508	; 0x1fc
   17688:	bl	13ff0 <sprintf@plt>
   1768c:	str	fp, [sp, #52]	; 0x34
   17690:	b	1724c <__flatcc_fb_codegen_c@@Base+0x1e3c>
   17694:	ldr	r9, [pc, #2092]	; 17ec8 <__flatcc_fb_codegen_c@@Base+0x2ab8>
   17698:	str	r9, [sp, #60]	; 0x3c
   1769c:	b	17670 <__flatcc_fb_codegen_c@@Base+0x2260>
   176a0:	str	fp, [sp, #52]	; 0x34
   176a4:	ldrd	r2, [r5, #48]	; 0x30
   176a8:	ldr	r1, [pc, #2296]	; 17fa8 <__flatcc_fb_codegen_c@@Base+0x2b98>
   176ac:	add	r0, sp, #508	; 0x1fc
   176b0:	bl	13ff0 <sprintf@plt>
   176b4:	b	1724c <__flatcc_fb_codegen_c@@Base+0x1e3c>
   176b8:	ldr	r4, [pc, #2284]	; 17fac <__flatcc_fb_codegen_c@@Base+0x2b9c>
   176bc:	ldr	r3, [pc, #2332]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   176c0:	ldr	r0, [r3]
   176c4:	ldr	r3, [pc, #2276]	; 17fb0 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   176c8:	str	r3, [sp]
   176cc:	mov	r3, #260	; 0x104
   176d0:	mov	r2, r4
   176d4:	ldr	r1, [pc, #2316]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   176d8:	bl	13f84 <fprintf@plt>
   176dc:	ldr	r3, [pc, #2256]	; 17fb4 <__flatcc_fb_codegen_c@@Base+0x2ba4>
   176e0:	mov	r2, #260	; 0x104
   176e4:	mov	r1, r4
   176e8:	ldr	r0, [pc, #2304]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   176ec:	bl	14038 <__assert_fail@plt>
   176f0:	ldr	r3, [r4, #204]	; 0xcc
   176f4:	mov	r2, #66	; 0x42
   176f8:	mov	r1, #1
   176fc:	ldr	r0, [pc, #2228]	; 17fb8 <__flatcc_fb_codegen_c@@Base+0x2ba8>
   17700:	bl	13f18 <fwrite@plt>
   17704:	ldr	r3, [r4, #204]	; 0xcc
   17708:	mov	r2, #61	; 0x3d
   1770c:	mov	r1, #1
   17710:	ldr	r0, [pc, #2212]	; 17fbc <__flatcc_fb_codegen_c@@Base+0x2bac>
   17714:	bl	13f18 <fwrite@plt>
   17718:	str	r9, [sp, #12]
   1771c:	ldr	r3, [sp, #52]	; 0x34
   17720:	str	r3, [sp, #8]
   17724:	str	r7, [sp, #4]
   17728:	str	r6, [sp]
   1772c:	add	r3, sp, #828	; 0x33c
   17730:	ldr	r2, [sp, #44]	; 0x2c
   17734:	ldr	r1, [pc, #1948]	; 17ed8 <__flatcc_fb_codegen_c@@Base+0x2ac8>
   17738:	ldr	r0, [r4, #204]	; 0xcc
   1773c:	bl	13f84 <fprintf@plt>
   17740:	ldr	r3, [r4, #212]	; 0xd4
   17744:	ldr	r3, [r3, #136]	; 0x88
   17748:	cmp	r3, #0
   1774c:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17750:	b	17340 <__flatcc_fb_codegen_c@@Base+0x1f30>
   17754:	ldr	r3, [r5, #16]
   17758:	sub	r3, r3, #1
   1775c:	cmp	r3, #10
   17760:	ldrls	pc, [pc, r3, lsl #2]
   17764:	b	177dc <__flatcc_fb_codegen_c@@Base+0x23cc>
   17768:	andeq	r7, r1, r4, lsl r8
   1776c:	muleq	r1, r4, r7
   17770:	andeq	r7, r1, ip, lsl r8
   17774:	muleq	r1, ip, r7
   17778:	andeq	r7, r1, r4, lsr #15
   1777c:	andeq	r7, r1, ip, lsr #15
   17780:			; <UNDEFINED> instruction: 0x000177b4
   17784:			; <UNDEFINED> instruction: 0x000177bc
   17788:	andeq	r7, r1, r4, asr #15
   1778c:	ldrdeq	r7, [r1], -r4
   17790:	andeq	r7, r1, ip, asr #15
   17794:	ldr	r3, [pc, #1872]	; 17eec <__flatcc_fb_codegen_c@@Base+0x2adc>
   17798:	b	17820 <__flatcc_fb_codegen_c@@Base+0x2410>
   1779c:	ldr	r3, [pc, #1868]	; 17ef0 <__flatcc_fb_codegen_c@@Base+0x2ae0>
   177a0:	b	17820 <__flatcc_fb_codegen_c@@Base+0x2410>
   177a4:	ldr	r3, [pc, #1860]	; 17ef0 <__flatcc_fb_codegen_c@@Base+0x2ae0>
   177a8:	b	17820 <__flatcc_fb_codegen_c@@Base+0x2410>
   177ac:	ldr	r3, [pc, #1856]	; 17ef4 <__flatcc_fb_codegen_c@@Base+0x2ae4>
   177b0:	b	17820 <__flatcc_fb_codegen_c@@Base+0x2410>
   177b4:	ldr	r3, [pc, #1852]	; 17ef8 <__flatcc_fb_codegen_c@@Base+0x2ae8>
   177b8:	b	17820 <__flatcc_fb_codegen_c@@Base+0x2410>
   177bc:	ldr	r3, [pc, #1848]	; 17efc <__flatcc_fb_codegen_c@@Base+0x2aec>
   177c0:	b	17820 <__flatcc_fb_codegen_c@@Base+0x2410>
   177c4:	ldr	r3, [pc, #1844]	; 17f00 <__flatcc_fb_codegen_c@@Base+0x2af0>
   177c8:	b	17820 <__flatcc_fb_codegen_c@@Base+0x2410>
   177cc:	ldr	r3, [pc, #1840]	; 17f04 <__flatcc_fb_codegen_c@@Base+0x2af4>
   177d0:	b	17820 <__flatcc_fb_codegen_c@@Base+0x2410>
   177d4:	ldr	r3, [pc, #1836]	; 17f08 <__flatcc_fb_codegen_c@@Base+0x2af8>
   177d8:	b	17820 <__flatcc_fb_codegen_c@@Base+0x2410>
   177dc:	ldr	r4, [pc, #1992]	; 17fac <__flatcc_fb_codegen_c@@Base+0x2b9c>
   177e0:	ldr	r3, [pc, #2040]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   177e4:	ldr	r0, [r3]
   177e8:	ldr	r3, [pc, #1984]	; 17fb0 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   177ec:	str	r3, [sp]
   177f0:	mov	r3, #186	; 0xba
   177f4:	mov	r2, r4
   177f8:	ldr	r1, [pc, #2024]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   177fc:	bl	13f84 <fprintf@plt>
   17800:	ldr	r3, [pc, #1796]	; 17f0c <__flatcc_fb_codegen_c@@Base+0x2afc>
   17804:	mov	r2, #186	; 0xba
   17808:	mov	r1, r4
   1780c:	ldr	r0, [pc, #2012]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   17810:	bl	14038 <__assert_fail@plt>
   17814:	ldr	r3, [pc, #1780]	; 17f10 <__flatcc_fb_codegen_c@@Base+0x2b00>
   17818:	b	17820 <__flatcc_fb_codegen_c@@Base+0x2410>
   1781c:	ldr	r3, [pc, #1776]	; 17f14 <__flatcc_fb_codegen_c@@Base+0x2b04>
   17820:	str	r9, [sp, #28]
   17824:	str	r3, [sp, #24]
   17828:	ldr	r1, [sp, #44]	; 0x2c
   1782c:	str	r1, [sp, #20]
   17830:	str	r7, [sp, #16]
   17834:	str	r6, [sp, #12]
   17838:	add	r3, sp, #828	; 0x33c
   1783c:	str	r3, [sp, #8]
   17840:	ldrd	r2, [r5, #96]	; 0x60
   17844:	strd	r2, [sp]
   17848:	mov	r2, r1
   1784c:	ldr	r1, [pc, #1732]	; 17f18 <__flatcc_fb_codegen_c@@Base+0x2b08>
   17850:	ldr	r0, [r4, #204]	; 0xcc
   17854:	bl	13f84 <fprintf@plt>
   17858:	ldr	r6, [r5, #104]	; 0x68
   1785c:	cmp	r6, #0
   17860:	beq	17b28 <__flatcc_fb_codegen_c@@Base+0x2718>
   17864:	mov	r7, #220	; 0xdc
   17868:	mov	r2, r7
   1786c:	mov	r1, #0
   17870:	add	r0, sp, #68	; 0x44
   17874:	bl	13f9c <memset@plt>
   17878:	mov	r2, r7
   1787c:	mov	r1, #0
   17880:	add	r0, sp, #288	; 0x120
   17884:	bl	13f9c <memset@plt>
   17888:	cmp	r6, #0
   1788c:	beq	17b28 <__flatcc_fb_codegen_c@@Base+0x2718>
   17890:	ldrh	r3, [r6, #8]
   17894:	cmp	r3, #0
   17898:	beq	17948 <__flatcc_fb_codegen_c@@Base+0x2538>
   1789c:	cmp	r3, #1
   178a0:	bne	1790c <__flatcc_fb_codegen_c@@Base+0x24fc>
   178a4:	ldr	r7, [pc, #1648]	; 17f1c <__flatcc_fb_codegen_c@@Base+0x2b0c>
   178a8:	add	r2, sp, #68	; 0x44
   178ac:	mov	r1, r6
   178b0:	ldr	r0, [r6, #12]
   178b4:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   178b8:	ldrh	r3, [r8, #8]
   178bc:	cmp	r3, #0
   178c0:	bne	17950 <__flatcc_fb_codegen_c@@Base+0x2540>
   178c4:	add	r2, sp, #288	; 0x120
   178c8:	ldr	r1, [sp, #56]	; 0x38
   178cc:	ldr	r0, [r8, #12]
   178d0:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   178d4:	ldr	r3, [r5, #4]
   178d8:	str	r7, [sp, #12]
   178dc:	add	r2, sp, #68	; 0x44
   178e0:	str	r2, [sp, #8]
   178e4:	ldr	r2, [r3]
   178e8:	str	r2, [sp, #4]
   178ec:	ldr	r3, [r3, #4]
   178f0:	str	r3, [sp]
   178f4:	add	r3, sp, #288	; 0x120
   178f8:	ldr	r2, [sp, #44]	; 0x2c
   178fc:	ldr	r1, [pc, #1564]	; 17f20 <__flatcc_fb_codegen_c@@Base+0x2b10>
   17900:	ldr	r0, [r4, #204]	; 0xcc
   17904:	bl	13f84 <fprintf@plt>
   17908:	b	17b28 <__flatcc_fb_codegen_c@@Base+0x2718>
   1790c:	ldr	r5, [pc, #1552]	; 17f24 <__flatcc_fb_codegen_c@@Base+0x2b14>
   17910:	ldr	r4, [pc, #1408]	; 17e98 <__flatcc_fb_codegen_c@@Base+0x2a88>
   17914:	ldr	r3, [pc, #1732]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   17918:	ldr	r0, [r3]
   1791c:	ldr	r3, [pc, #1540]	; 17f28 <__flatcc_fb_codegen_c@@Base+0x2b18>
   17920:	str	r3, [sp]
   17924:	mov	r3, r5
   17928:	mov	r2, r4
   1792c:	ldr	r1, [pc, #1716]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   17930:	bl	13f84 <fprintf@plt>
   17934:	ldr	r3, [pc, #1520]	; 17f2c <__flatcc_fb_codegen_c@@Base+0x2b1c>
   17938:	mov	r2, r5
   1793c:	mov	r1, r4
   17940:	ldr	r0, [pc, #1704]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   17944:	bl	14038 <__assert_fail@plt>
   17948:	ldr	r7, [pc, #1504]	; 17f30 <__flatcc_fb_codegen_c@@Base+0x2b20>
   1794c:	b	178a8 <__flatcc_fb_codegen_c@@Base+0x2498>
   17950:	ldr	r3, [pc, #1492]	; 17f2c <__flatcc_fb_codegen_c@@Base+0x2b1c>
   17954:	ldr	r2, [pc, #1496]	; 17f34 <__flatcc_fb_codegen_c@@Base+0x2b24>
   17958:	ldr	r1, [pc, #1336]	; 17e98 <__flatcc_fb_codegen_c@@Base+0x2a88>
   1795c:	ldr	r0, [pc, #1492]	; 17f38 <__flatcc_fb_codegen_c@@Base+0x2b28>
   17960:	bl	14038 <__assert_fail@plt>
   17964:	str	r9, [sp, #20]
   17968:	str	r7, [sp, #16]
   1796c:	str	r6, [sp, #12]
   17970:	add	r3, sp, #828	; 0x33c
   17974:	str	r3, [sp, #8]
   17978:	ldrd	r2, [r5, #96]	; 0x60
   1797c:	strd	r2, [sp]
   17980:	ldr	r2, [sp, #44]	; 0x2c
   17984:	ldr	r1, [pc, #1456]	; 17f3c <__flatcc_fb_codegen_c@@Base+0x2b2c>
   17988:	ldr	r0, [r4, #204]	; 0xcc
   1798c:	bl	13f84 <fprintf@plt>
   17990:	ldr	r3, [r4, #212]	; 0xd4
   17994:	ldr	r3, [r3, #32]
   17998:	cmp	r3, #0
   1799c:	bne	179c8 <__flatcc_fb_codegen_c@@Base+0x25b8>
   179a0:	ldrh	r3, [r5, #72]	; 0x48
   179a4:	tst	r3, #128	; 0x80
   179a8:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   179ac:	str	r7, [sp, #4]
   179b0:	str	r6, [sp]
   179b4:	add	r3, sp, #828	; 0x33c
   179b8:	ldr	r2, [sp, #44]	; 0x2c
   179bc:	ldr	r1, [pc, #1404]	; 17f40 <__flatcc_fb_codegen_c@@Base+0x2b30>
   179c0:	ldr	r0, [r4, #204]	; 0xcc
   179c4:	bl	13f84 <fprintf@plt>
   179c8:	ldrh	r3, [r5, #72]	; 0x48
   179cc:	tst	r3, #128	; 0x80
   179d0:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   179d4:	ldr	r3, [sp, #48]	; 0x30
   179d8:	cmp	r3, #0
   179dc:	bne	17ab0 <__flatcc_fb_codegen_c@@Base+0x26a0>
   179e0:	str	r7, [sp, #4]
   179e4:	str	r6, [sp]
   179e8:	add	r3, sp, #828	; 0x33c
   179ec:	ldr	r2, [sp, #44]	; 0x2c
   179f0:	ldr	r1, [pc, #1356]	; 17f44 <__flatcc_fb_codegen_c@@Base+0x2b34>
   179f4:	ldr	r0, [r4, #204]	; 0xcc
   179f8:	bl	13f84 <fprintf@plt>
   179fc:	ldr	r3, [r4, #212]	; 0xd4
   17a00:	ldr	r3, [r3, #136]	; 0x88
   17a04:	cmp	r3, #0
   17a08:	beq	17a34 <__flatcc_fb_codegen_c@@Base+0x2624>
   17a0c:	str	r7, [sp, #4]
   17a10:	str	r6, [sp]
   17a14:	add	r3, sp, #828	; 0x33c
   17a18:	ldr	r2, [sp, #44]	; 0x2c
   17a1c:	ldr	r1, [pc, #1316]	; 17f48 <__flatcc_fb_codegen_c@@Base+0x2b38>
   17a20:	ldr	r0, [r4, #204]	; 0xcc
   17a24:	bl	13f84 <fprintf@plt>
   17a28:	ldr	r3, [sp, #48]	; 0x30
   17a2c:	cmp	r3, #0
   17a30:	bne	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17a34:	str	r7, [sp, #4]
   17a38:	str	r6, [sp]
   17a3c:	add	r3, sp, #828	; 0x33c
   17a40:	ldr	r9, [sp, #44]	; 0x2c
   17a44:	mov	r2, r9
   17a48:	ldr	r1, [pc, #1276]	; 17f4c <__flatcc_fb_codegen_c@@Base+0x2b3c>
   17a4c:	ldr	r0, [r4, #204]	; 0xcc
   17a50:	bl	13f84 <fprintf@plt>
   17a54:	str	r7, [sp, #4]
   17a58:	str	r6, [sp]
   17a5c:	add	r3, sp, #828	; 0x33c
   17a60:	mov	r2, r9
   17a64:	ldr	r1, [pc, #1252]	; 17f50 <__flatcc_fb_codegen_c@@Base+0x2b40>
   17a68:	ldr	r0, [r4, #204]	; 0xcc
   17a6c:	bl	13f84 <fprintf@plt>
   17a70:	ldr	r3, [r4, #212]	; 0xd4
   17a74:	ldr	r3, [r3, #136]	; 0x88
   17a78:	cmp	r3, #0
   17a7c:	moveq	r3, #1
   17a80:	streq	r3, [sp, #48]	; 0x30
   17a84:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17a88:	str	r7, [sp, #4]
   17a8c:	str	r6, [sp]
   17a90:	add	r3, sp, #828	; 0x33c
   17a94:	mov	r2, r3
   17a98:	ldr	r1, [pc, #1096]	; 17ee8 <__flatcc_fb_codegen_c@@Base+0x2ad8>
   17a9c:	ldr	r0, [r4, #204]	; 0xcc
   17aa0:	bl	13f84 <fprintf@plt>
   17aa4:	mov	r3, #1
   17aa8:	str	r3, [sp, #48]	; 0x30
   17aac:	b	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17ab0:	ldr	r3, [r4, #204]	; 0xcc
   17ab4:	mov	r2, #66	; 0x42
   17ab8:	mov	r1, #1
   17abc:	ldr	r0, [pc, #1268]	; 17fb8 <__flatcc_fb_codegen_c@@Base+0x2ba8>
   17ac0:	bl	13f18 <fwrite@plt>
   17ac4:	str	r7, [sp, #4]
   17ac8:	str	r6, [sp]
   17acc:	add	r3, sp, #828	; 0x33c
   17ad0:	ldr	r2, [sp, #44]	; 0x2c
   17ad4:	ldr	r1, [pc, #1128]	; 17f44 <__flatcc_fb_codegen_c@@Base+0x2b34>
   17ad8:	ldr	r0, [r4, #204]	; 0xcc
   17adc:	bl	13f84 <fprintf@plt>
   17ae0:	ldr	r3, [r4, #212]	; 0xd4
   17ae4:	ldr	r3, [r3, #136]	; 0x88
   17ae8:	cmp	r3, #0
   17aec:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17af0:	b	17a0c <__flatcc_fb_codegen_c@@Base+0x25fc>
   17af4:	str	r9, [sp, #24]
   17af8:	ldr	r1, [sp, #44]	; 0x2c
   17afc:	str	r1, [sp, #20]
   17b00:	str	r7, [sp, #16]
   17b04:	str	r6, [sp, #12]
   17b08:	add	r3, sp, #828	; 0x33c
   17b0c:	str	r3, [sp, #8]
   17b10:	ldrd	r2, [r5, #96]	; 0x60
   17b14:	strd	r2, [sp]
   17b18:	mov	r2, r1
   17b1c:	ldr	r1, [pc, #1072]	; 17f54 <__flatcc_fb_codegen_c@@Base+0x2b44>
   17b20:	ldr	r0, [r4, #204]	; 0xcc
   17b24:	bl	13f84 <fprintf@plt>
   17b28:	ldrh	r3, [r5, #72]	; 0x48
   17b2c:	tst	r3, #128	; 0x80
   17b30:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17b34:	ldr	r3, [r4, #204]	; 0xcc
   17b38:	mov	r2, #84	; 0x54
   17b3c:	mov	r1, #1
   17b40:	ldr	r0, [pc, #1040]	; 17f58 <__flatcc_fb_codegen_c@@Base+0x2b48>
   17b44:	bl	13f18 <fwrite@plt>
   17b48:	mov	r3, #1
   17b4c:	str	r3, [sp, #48]	; 0x30
   17b50:	b	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17b54:	ldr	r3, [r5, #16]
   17b58:	add	r2, sp, #608	; 0x260
   17b5c:	mov	r1, r3
   17b60:	ldr	r0, [r3, #12]
   17b64:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   17b68:	ldr	r2, [r5, #16]
   17b6c:	ldrh	r3, [r2, #8]
   17b70:	cmp	r3, #4
   17b74:	ldrls	pc, [pc, r3, lsl #2]
   17b78:	b	182c0 <__flatcc_fb_codegen_c@@Base+0x2eb0>
   17b7c:	andeq	r7, r1, r8, asr #23
   17b80:	muleq	r1, r0, fp
   17b84:	andeq	r8, r1, r0, asr #5
   17b88:	andeq	r7, r1, r0, lsl #24
   17b8c:	andeq	r8, r1, r4, lsl #5
   17b90:	str	r9, [sp, #24]
   17b94:	add	r3, sp, #608	; 0x260
   17b98:	str	r3, [sp, #20]
   17b9c:	str	r7, [sp, #16]
   17ba0:	str	r6, [sp, #12]
   17ba4:	add	r3, sp, #828	; 0x33c
   17ba8:	str	r3, [sp, #8]
   17bac:	ldrd	r2, [r5, #96]	; 0x60
   17bb0:	strd	r2, [sp]
   17bb4:	ldr	r2, [sp, #44]	; 0x2c
   17bb8:	ldr	r1, [pc, #924]	; 17f5c <__flatcc_fb_codegen_c@@Base+0x2b4c>
   17bbc:	ldr	r0, [r4, #204]	; 0xcc
   17bc0:	bl	13f84 <fprintf@plt>
   17bc4:	b	17b28 <__flatcc_fb_codegen_c@@Base+0x2718>
   17bc8:	str	r9, [sp, #24]
   17bcc:	add	r3, sp, #608	; 0x260
   17bd0:	str	r3, [sp, #20]
   17bd4:	str	r7, [sp, #16]
   17bd8:	str	r6, [sp, #12]
   17bdc:	add	r3, sp, #828	; 0x33c
   17be0:	str	r3, [sp, #8]
   17be4:	ldrd	r2, [r5, #96]	; 0x60
   17be8:	strd	r2, [sp]
   17bec:	ldr	r2, [sp, #44]	; 0x2c
   17bf0:	ldr	r1, [pc, #872]	; 17f60 <__flatcc_fb_codegen_c@@Base+0x2b50>
   17bf4:	ldr	r0, [r4, #204]	; 0xcc
   17bf8:	bl	13f84 <fprintf@plt>
   17bfc:	b	17b28 <__flatcc_fb_codegen_c@@Base+0x2718>
   17c00:	ldr	r3, [r2, #40]	; 0x28
   17c04:	ldrh	r2, [r5, #56]	; 0x38
   17c08:	sub	r2, r2, #3
   17c0c:	cmp	r2, #3
   17c10:	ldrls	pc, [pc, r2, lsl #2]
   17c14:	b	181ec <__flatcc_fb_codegen_c@@Base+0x2ddc>
   17c18:	andeq	r8, r1, r0, asr #3
   17c1c:	andeq	r8, r1, r4, lsr r0
   17c20:	andeq	r7, r1, r8, lsr #24
   17c24:	strdeq	r8, [r1], -ip
   17c28:	sub	r3, r3, #1
   17c2c:	cmp	r3, #8
   17c30:	ldrls	pc, [pc, r3, lsl #2]
   17c34:	b	17e38 <__flatcc_fb_codegen_c@@Base+0x2a28>
   17c38:	andeq	r7, r1, r0, ror lr
   17c3c:	andeq	r7, r1, ip, asr ip
   17c40:	andeq	r7, r1, r8, ror lr
   17c44:	andeq	r7, r1, r8, lsl #28
   17c48:	andeq	r7, r1, r0, lsl lr
   17c4c:	andeq	r7, r1, r8, lsl lr
   17c50:	andeq	r7, r1, r0, lsr #28
   17c54:	andeq	r7, r1, r8, lsr #28
   17c58:	andeq	r7, r1, r0, lsr lr
   17c5c:	ldr	r2, [pc, #792]	; 17f7c <__flatcc_fb_codegen_c@@Base+0x2b6c>
   17c60:	ldrd	r0, [r5, #48]	; 0x30
   17c64:	strd	r0, [sp]
   17c68:	ldr	r1, [pc, #604]	; 17ecc <__flatcc_fb_codegen_c@@Base+0x2abc>
   17c6c:	add	r0, sp, #508	; 0x1fc
   17c70:	bl	13ff0 <sprintf@plt>
   17c74:	add	r3, sp, #508	; 0x1fc
   17c78:	str	r3, [sp, #28]
   17c7c:	add	r3, sp, #608	; 0x260
   17c80:	str	r3, [sp, #24]
   17c84:	str	r3, [sp, #20]
   17c88:	str	r7, [sp, #16]
   17c8c:	str	r6, [sp, #12]
   17c90:	add	r3, sp, #828	; 0x33c
   17c94:	str	r3, [sp, #8]
   17c98:	ldrd	r2, [r5, #96]	; 0x60
   17c9c:	strd	r2, [sp]
   17ca0:	ldr	r2, [sp, #44]	; 0x2c
   17ca4:	ldr	r1, [pc, #696]	; 17f64 <__flatcc_fb_codegen_c@@Base+0x2b54>
   17ca8:	ldr	r0, [r4, #204]	; 0xcc
   17cac:	bl	13f84 <fprintf@plt>
   17cb0:	ldr	r3, [r4, #212]	; 0xd4
   17cb4:	ldr	r3, [r3, #32]
   17cb8:	cmp	r3, #0
   17cbc:	bne	17cf0 <__flatcc_fb_codegen_c@@Base+0x28e0>
   17cc0:	ldrh	r3, [r5, #72]	; 0x48
   17cc4:	tst	r3, #128	; 0x80
   17cc8:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17ccc:	add	r3, sp, #608	; 0x260
   17cd0:	str	r3, [sp, #8]
   17cd4:	str	r7, [sp, #4]
   17cd8:	str	r6, [sp]
   17cdc:	add	r3, sp, #828	; 0x33c
   17ce0:	ldr	r2, [sp, #44]	; 0x2c
   17ce4:	ldr	r1, [pc, #636]	; 17f68 <__flatcc_fb_codegen_c@@Base+0x2b58>
   17ce8:	ldr	r0, [r4, #204]	; 0xcc
   17cec:	bl	13f84 <fprintf@plt>
   17cf0:	ldrh	r3, [r5, #72]	; 0x48
   17cf4:	tst	r3, #128	; 0x80
   17cf8:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17cfc:	ldr	r3, [sp, #48]	; 0x30
   17d00:	cmp	r3, #0
   17d04:	bne	18224 <__flatcc_fb_codegen_c@@Base+0x2e14>
   17d08:	ldr	r3, [r4, #204]	; 0xcc
   17d0c:	mov	r2, #61	; 0x3d
   17d10:	mov	r1, #1
   17d14:	ldr	r0, [pc, #672]	; 17fbc <__flatcc_fb_codegen_c@@Base+0x2bac>
   17d18:	bl	13f18 <fwrite@plt>
   17d1c:	add	r3, sp, #608	; 0x260
   17d20:	str	r3, [sp, #8]
   17d24:	str	r7, [sp, #4]
   17d28:	str	r6, [sp]
   17d2c:	add	r3, sp, #828	; 0x33c
   17d30:	ldr	r2, [sp, #44]	; 0x2c
   17d34:	ldr	r1, [pc, #644]	; 17fc0 <__flatcc_fb_codegen_c@@Base+0x2bb0>
   17d38:	ldr	r0, [r4, #204]	; 0xcc
   17d3c:	bl	13f84 <fprintf@plt>
   17d40:	ldr	r3, [r4, #212]	; 0xd4
   17d44:	ldr	r3, [r3, #136]	; 0x88
   17d48:	cmp	r3, #0
   17d4c:	beq	17d84 <__flatcc_fb_codegen_c@@Base+0x2974>
   17d50:	ldr	r2, [sp, #44]	; 0x2c
   17d54:	str	r2, [sp, #12]
   17d58:	add	r3, sp, #608	; 0x260
   17d5c:	str	r3, [sp, #8]
   17d60:	str	r7, [sp, #4]
   17d64:	str	r6, [sp]
   17d68:	add	r3, sp, #828	; 0x33c
   17d6c:	ldr	r1, [pc, #504]	; 17f6c <__flatcc_fb_codegen_c@@Base+0x2b5c>
   17d70:	ldr	r0, [r4, #204]	; 0xcc
   17d74:	bl	13f84 <fprintf@plt>
   17d78:	ldr	r3, [sp, #48]	; 0x30
   17d7c:	cmp	r3, #0
   17d80:	bne	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17d84:	add	r9, sp, #608	; 0x260
   17d88:	str	r9, [sp, #8]
   17d8c:	str	r7, [sp, #4]
   17d90:	str	r6, [sp]
   17d94:	add	r3, sp, #828	; 0x33c
   17d98:	ldr	r2, [sp, #44]	; 0x2c
   17d9c:	ldr	r1, [pc, #460]	; 17f70 <__flatcc_fb_codegen_c@@Base+0x2b60>
   17da0:	ldr	r0, [r4, #204]	; 0xcc
   17da4:	bl	13f84 <fprintf@plt>
   17da8:	str	r9, [sp, #8]
   17dac:	str	r7, [sp, #4]
   17db0:	str	r6, [sp]
   17db4:	add	r3, sp, #828	; 0x33c
   17db8:	ldr	r2, [sp, #44]	; 0x2c
   17dbc:	ldr	r1, [pc, #432]	; 17f74 <__flatcc_fb_codegen_c@@Base+0x2b64>
   17dc0:	ldr	r0, [r4, #204]	; 0xcc
   17dc4:	bl	13f84 <fprintf@plt>
   17dc8:	ldr	r3, [r4, #212]	; 0xd4
   17dcc:	ldr	r3, [r3, #136]	; 0x88
   17dd0:	cmp	r3, #0
   17dd4:	moveq	r3, #1
   17dd8:	streq	r3, [sp, #48]	; 0x30
   17ddc:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17de0:	str	r7, [sp, #4]
   17de4:	str	r6, [sp]
   17de8:	add	r3, sp, #828	; 0x33c
   17dec:	mov	r2, r3
   17df0:	ldr	r1, [pc, #240]	; 17ee8 <__flatcc_fb_codegen_c@@Base+0x2ad8>
   17df4:	ldr	r0, [r4, #204]	; 0xcc
   17df8:	bl	13f84 <fprintf@plt>
   17dfc:	mov	r3, #1
   17e00:	str	r3, [sp, #48]	; 0x30
   17e04:	b	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17e08:	ldr	r2, [pc, #372]	; 17f84 <__flatcc_fb_codegen_c@@Base+0x2b74>
   17e0c:	b	17c60 <__flatcc_fb_codegen_c@@Base+0x2850>
   17e10:	ldr	r2, [pc, #364]	; 17f84 <__flatcc_fb_codegen_c@@Base+0x2b74>
   17e14:	b	17c60 <__flatcc_fb_codegen_c@@Base+0x2850>
   17e18:	ldr	r2, [pc, #360]	; 17f88 <__flatcc_fb_codegen_c@@Base+0x2b78>
   17e1c:	b	17c60 <__flatcc_fb_codegen_c@@Base+0x2850>
   17e20:	ldr	r2, [pc, #356]	; 17f8c <__flatcc_fb_codegen_c@@Base+0x2b7c>
   17e24:	b	17c60 <__flatcc_fb_codegen_c@@Base+0x2850>
   17e28:	ldr	r2, [pc, #352]	; 17f90 <__flatcc_fb_codegen_c@@Base+0x2b80>
   17e2c:	b	17c60 <__flatcc_fb_codegen_c@@Base+0x2850>
   17e30:	ldr	r2, [pc, #348]	; 17f94 <__flatcc_fb_codegen_c@@Base+0x2b84>
   17e34:	b	17c60 <__flatcc_fb_codegen_c@@Base+0x2850>
   17e38:	ldr	r4, [pc, #364]	; 17fac <__flatcc_fb_codegen_c@@Base+0x2b9c>
   17e3c:	ldr	r3, [pc, #412]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   17e40:	ldr	r0, [r3]
   17e44:	ldr	r3, [pc, #356]	; 17fb0 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   17e48:	str	r3, [sp]
   17e4c:	mov	r3, #226	; 0xe2
   17e50:	mov	r2, r4
   17e54:	ldr	r1, [pc, #396]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   17e58:	bl	13f84 <fprintf@plt>
   17e5c:	ldr	r3, [pc, #308]	; 17f98 <__flatcc_fb_codegen_c@@Base+0x2b88>
   17e60:	mov	r2, #226	; 0xe2
   17e64:	mov	r1, r4
   17e68:	ldr	r0, [pc, #384]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   17e6c:	bl	14038 <__assert_fail@plt>
   17e70:	ldr	r2, [pc, #292]	; 17f9c <__flatcc_fb_codegen_c@@Base+0x2b8c>
   17e74:	b	17c60 <__flatcc_fb_codegen_c@@Base+0x2850>
   17e78:	ldr	r2, [pc, #288]	; 17fa0 <__flatcc_fb_codegen_c@@Base+0x2b90>
   17e7c:	b	17c60 <__flatcc_fb_codegen_c@@Base+0x2850>
   17e80:	andeq	r5, r4, r0, lsr #2
   17e84:	andeq	fp, r3, r4, lsl #21
   17e88:	andeq	fp, r3, ip, ror sl
   17e8c:	andeq	r3, r4, r4, asr lr
   17e90:	muleq	r3, r8, r6
   17e94:	andeq	r0, r0, r2, asr r5
   17e98:	andeq	fp, r3, r8, ror #13
   17e9c:	andeq	ip, r3, r0, lsl r6
   17ea0:	andeq	ip, r3, ip, ror #9
   17ea4:	andeq	ip, r3, r0, lsr r6
   17ea8:			; <UNDEFINED> instruction: 0x0003c1bc
   17eac:	andeq	ip, r3, ip, asr r6
   17eb0:	andeq	ip, r3, r4, asr #13
   17eb4:	ldrdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   17eb8:	andeq	fp, r3, r8, asr #12
   17ebc:	andeq	fp, r3, r8, asr #17
   17ec0:	andeq	fp, r3, r4, asr #26
   17ec4:	andeq	fp, r3, r4, lsr #18
   17ec8:	andeq	fp, r3, ip, lsl r9
   17ecc:	andeq	fp, r3, ip, ror #21
   17ed0:	andeq	ip, r3, ip, lsl #14
   17ed4:	andeq	ip, r3, r8, asr #14
   17ed8:	andeq	ip, r3, ip, ror r7
   17edc:			; <UNDEFINED> instruction: 0x0003c7b0
   17ee0:	strdeq	ip, [r3], -r0
   17ee4:	andeq	ip, r3, ip, lsr #16
   17ee8:	andeq	ip, r3, r8, lsr r4
   17eec:	andeq	ip, r3, r8, lsl #11
   17ef0:	andeq	ip, r3, r8, lsr #11
   17ef4:			; <UNDEFINED> instruction: 0x0003c5b4
   17ef8:	andeq	ip, r3, r0, asr #11
   17efc:	andeq	ip, r3, ip, asr #11
   17f00:	ldrdeq	ip, [r3], -r8
   17f04:	andeq	ip, r3, r4, ror #11
   17f08:	strdeq	ip, [r3], -r0
   17f0c:	andeq	fp, r3, r4, lsr #13
   17f10:	andeq	ip, r3, r8, ror r5
   17f14:	muleq	r3, r8, r5
   17f18:	andeq	ip, r3, r8, ror #16
   17f1c:	andeq	ip, r3, r8, lsl #12
   17f20:	strdeq	ip, [r3], -r0
   17f24:	andeq	r0, r0, fp, lsr r5
   17f28:	muleq	r3, ip, r8
   17f2c:			; <UNDEFINED> instruction: 0x0003b6bc
   17f30:	andeq	ip, r3, r0, lsl #12
   17f34:	andeq	r0, r0, pc, lsr r5
   17f38:	ldrdeq	ip, [r3], -r0
   17f3c:	andeq	ip, r3, r0, lsr #18
   17f40:	andeq	ip, r3, r0, asr r9
   17f44:	andeq	ip, r3, ip, ror r9
   17f48:	andeq	ip, r3, r8, lsr #19
   17f4c:	ldrdeq	ip, [r3], -r4
   17f50:	andeq	ip, r3, r8, lsl #20
   17f54:	andeq	ip, r3, ip, lsr sl
   17f58:	muleq	r3, ip, r4
   17f5c:	andeq	ip, r3, ip, ror sl
   17f60:			; <UNDEFINED> instruction: 0x0003cab8
   17f64:	strdeq	ip, [r3], -r0
   17f68:	andeq	ip, r3, r8, lsl #5
   17f6c:	andeq	ip, r3, ip, lsr #22
   17f70:			; <UNDEFINED> instruction: 0x0003c3b8
   17f74:	strdeq	ip, [r3], -r8
   17f78:	strdeq	fp, [r3], -r8
   17f7c:	andeq	fp, r3, ip, asr #18
   17f80:	andeq	fp, r3, r4, lsl #22
   17f84:	andeq	fp, r3, r4, ror #18
   17f88:	andeq	fp, r3, ip, ror #18
   17f8c:	andeq	fp, r3, r4, ror r9
   17f90:	andeq	fp, r3, ip, ror r9
   17f94:	andeq	fp, r3, r4, lsl #19
   17f98:	andeq	fp, r3, ip, asr r6
   17f9c:	andeq	fp, r3, r0, asr #18
   17fa0:	andeq	fp, r3, r8, asr r9
   17fa4:	andeq	fp, r3, ip, lsl #22
   17fa8:	andeq	fp, r3, r0, lsl fp
   17fac:	andeq	fp, r3, ip, ror #19
   17fb0:	andeq	fp, r3, r4, asr #20
   17fb4:	andeq	fp, r3, r8, ror #12
   17fb8:	andeq	ip, r3, r0, asr #5
   17fbc:	andeq	ip, r3, r4, lsl #6
   17fc0:	andeq	ip, r3, r4, asr #6
   17fc4:	andeq	ip, r3, r0, ror fp
   17fc8:	andeq	ip, r3, r4, lsr #23
   17fcc:	strdeq	ip, [r3], -r0
   17fd0:	andeq	ip, r3, ip, ror ip
   17fd4:	andeq	ip, r3, r0, asr #24
   17fd8:	andeq	r0, r0, pc, lsr r6
   17fdc:	andeq	fp, r3, r8, ror #13
   17fe0:	andeq	r6, r6, r8, lsr #1
   17fe4:			; <UNDEFINED> instruction: 0x0003ccb4
   17fe8:	andeq	fp, r3, r8, lsr sl
   17fec:	muleq	r3, r8, r6
   17ff0:	andeq	r3, r4, r0, ror lr
   17ff4:	andeq	fp, r3, r0, ror #17
   17ff8:	andeq	fp, r3, r4, asr sp
   17ffc:	strdeq	fp, [r3], -r4
   18000:	andeq	r3, r5, r0, ror #17
   18004:	strdeq	fp, [r3], -ip
   18008:	andeq	fp, r3, r4, ror #26
   1800c:	andeq	fp, r3, r4, lsl #18
   18010:	andeq	fp, r3, ip, ror #26
   18014:	andeq	fp, r3, ip, lsl #18
   18018:	andeq	fp, r3, r4, ror sp
   1801c:	andeq	fp, r3, r4, lsl r9
   18020:	andeq	fp, r3, ip, ror sp
   18024:	ldrdeq	fp, [r3], -r4
   18028:	andeq	fp, r3, ip, asr #26
   1802c:	andeq	fp, r3, ip, ror #17
   18030:	andeq	fp, r3, ip, asr sp
   18034:	sub	r3, r3, #1
   18038:	cmp	r3, #8
   1803c:	ldrls	pc, [pc, r3, lsl #2]
   18040:	b	180b4 <__flatcc_fb_codegen_c@@Base+0x2ca4>
   18044:	andeq	r8, r1, ip, ror #1
   18048:	andeq	r8, r1, r8, rrx
   1804c:	strdeq	r8, [r1], -r4
   18050:	andeq	r8, r1, r4, lsl #1
   18054:	andeq	r8, r1, ip, lsl #1
   18058:	muleq	r1, r4, r0
   1805c:	muleq	r1, ip, r0
   18060:	andeq	r8, r1, r4, lsr #1
   18064:	andeq	r8, r1, ip, lsr #1
   18068:	ldr	r2, [pc, #-244]	; 17f7c <__flatcc_fb_codegen_c@@Base+0x2b6c>
   1806c:	ldrd	r0, [r5, #48]	; 0x30
   18070:	strd	r0, [sp]
   18074:	ldr	r1, [pc, #-260]	; 17f78 <__flatcc_fb_codegen_c@@Base+0x2b68>
   18078:	add	r0, sp, #508	; 0x1fc
   1807c:	bl	13ff0 <sprintf@plt>
   18080:	b	17c74 <__flatcc_fb_codegen_c@@Base+0x2864>
   18084:	ldr	r2, [pc, #-264]	; 17f84 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18088:	b	1806c <__flatcc_fb_codegen_c@@Base+0x2c5c>
   1808c:	ldr	r2, [pc, #-272]	; 17f84 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18090:	b	1806c <__flatcc_fb_codegen_c@@Base+0x2c5c>
   18094:	ldr	r2, [pc, #-276]	; 17f88 <__flatcc_fb_codegen_c@@Base+0x2b78>
   18098:	b	1806c <__flatcc_fb_codegen_c@@Base+0x2c5c>
   1809c:	ldr	r2, [pc, #-280]	; 17f8c <__flatcc_fb_codegen_c@@Base+0x2b7c>
   180a0:	b	1806c <__flatcc_fb_codegen_c@@Base+0x2c5c>
   180a4:	ldr	r2, [pc, #-284]	; 17f90 <__flatcc_fb_codegen_c@@Base+0x2b80>
   180a8:	b	1806c <__flatcc_fb_codegen_c@@Base+0x2c5c>
   180ac:	ldr	r2, [pc, #-288]	; 17f94 <__flatcc_fb_codegen_c@@Base+0x2b84>
   180b0:	b	1806c <__flatcc_fb_codegen_c@@Base+0x2c5c>
   180b4:	ldr	r4, [pc, #-272]	; 17fac <__flatcc_fb_codegen_c@@Base+0x2b9c>
   180b8:	ldr	r3, [pc, #-224]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   180bc:	ldr	r0, [r3]
   180c0:	ldr	r3, [pc, #-280]	; 17fb0 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   180c4:	str	r3, [sp]
   180c8:	mov	r3, #226	; 0xe2
   180cc:	mov	r2, r4
   180d0:	ldr	r1, [pc, #-240]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   180d4:	bl	13f84 <fprintf@plt>
   180d8:	ldr	r3, [pc, #-328]	; 17f98 <__flatcc_fb_codegen_c@@Base+0x2b88>
   180dc:	mov	r2, #226	; 0xe2
   180e0:	mov	r1, r4
   180e4:	ldr	r0, [pc, #-252]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   180e8:	bl	14038 <__assert_fail@plt>
   180ec:	ldr	r2, [pc, #-344]	; 17f9c <__flatcc_fb_codegen_c@@Base+0x2b8c>
   180f0:	b	1806c <__flatcc_fb_codegen_c@@Base+0x2c5c>
   180f4:	ldr	r2, [pc, #-348]	; 17fa0 <__flatcc_fb_codegen_c@@Base+0x2b90>
   180f8:	b	1806c <__flatcc_fb_codegen_c@@Base+0x2c5c>
   180fc:	sub	r3, r3, #1
   18100:	cmp	r3, #8
   18104:	ldrls	pc, [pc, r3, lsl #2]
   18108:	b	18178 <__flatcc_fb_codegen_c@@Base+0x2d68>
   1810c:			; <UNDEFINED> instruction: 0x000181b0
   18110:	andeq	r8, r1, r0, lsr r1
   18114:			; <UNDEFINED> instruction: 0x000181b8
   18118:	andeq	r8, r1, r8, asr #2
   1811c:	andeq	r8, r1, r0, asr r1
   18120:	andeq	r8, r1, r8, asr r1
   18124:	andeq	r8, r1, r0, ror #2
   18128:	andeq	r8, r1, r8, ror #2
   1812c:	andeq	r8, r1, r0, ror r1
   18130:	ldr	r2, [pc, #-444]	; 17f7c <__flatcc_fb_codegen_c@@Base+0x2b6c>
   18134:	ldrb	r3, [r5, #48]	; 0x30
   18138:	ldr	r1, [pc, #-448]	; 17f80 <__flatcc_fb_codegen_c@@Base+0x2b70>
   1813c:	add	r0, sp, #508	; 0x1fc
   18140:	bl	13ff0 <sprintf@plt>
   18144:	b	17c74 <__flatcc_fb_codegen_c@@Base+0x2864>
   18148:	ldr	r2, [pc, #-460]	; 17f84 <__flatcc_fb_codegen_c@@Base+0x2b74>
   1814c:	b	18134 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18150:	ldr	r2, [pc, #-468]	; 17f84 <__flatcc_fb_codegen_c@@Base+0x2b74>
   18154:	b	18134 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18158:	ldr	r2, [pc, #-472]	; 17f88 <__flatcc_fb_codegen_c@@Base+0x2b78>
   1815c:	b	18134 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18160:	ldr	r2, [pc, #-476]	; 17f8c <__flatcc_fb_codegen_c@@Base+0x2b7c>
   18164:	b	18134 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18168:	ldr	r2, [pc, #-480]	; 17f90 <__flatcc_fb_codegen_c@@Base+0x2b80>
   1816c:	b	18134 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18170:	ldr	r2, [pc, #-484]	; 17f94 <__flatcc_fb_codegen_c@@Base+0x2b84>
   18174:	b	18134 <__flatcc_fb_codegen_c@@Base+0x2d24>
   18178:	ldr	r4, [pc, #-468]	; 17fac <__flatcc_fb_codegen_c@@Base+0x2b9c>
   1817c:	ldr	r3, [pc, #-420]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   18180:	ldr	r0, [r3]
   18184:	ldr	r3, [pc, #-476]	; 17fb0 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   18188:	str	r3, [sp]
   1818c:	mov	r3, #226	; 0xe2
   18190:	mov	r2, r4
   18194:	ldr	r1, [pc, #-436]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   18198:	bl	13f84 <fprintf@plt>
   1819c:	ldr	r3, [pc, #-524]	; 17f98 <__flatcc_fb_codegen_c@@Base+0x2b88>
   181a0:	mov	r2, #226	; 0xe2
   181a4:	mov	r1, r4
   181a8:	ldr	r0, [pc, #-448]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   181ac:	bl	14038 <__assert_fail@plt>
   181b0:	ldr	r2, [pc, #-540]	; 17f9c <__flatcc_fb_codegen_c@@Base+0x2b8c>
   181b4:	b	18134 <__flatcc_fb_codegen_c@@Base+0x2d24>
   181b8:	ldr	r2, [pc, #-544]	; 17fa0 <__flatcc_fb_codegen_c@@Base+0x2b90>
   181bc:	b	18134 <__flatcc_fb_codegen_c@@Base+0x2d24>
   181c0:	cmp	r3, #11
   181c4:	vldreq	d7, [r5, #48]	; 0x30
   181c8:	vcvteq.f32.f64	s14, d7
   181cc:	vcvteq.f64.f32	d7, s14
   181d0:	vmoveq	r2, r3, d7
   181d4:	ldreq	r1, [pc, #-568]	; 17fa4 <__flatcc_fb_codegen_c@@Base+0x2b94>
   181d8:	ldrdne	r2, [r5, #48]	; 0x30
   181dc:	ldrne	r1, [pc, #-572]	; 17fa8 <__flatcc_fb_codegen_c@@Base+0x2b98>
   181e0:	add	r0, sp, #508	; 0x1fc
   181e4:	bl	13ff0 <sprintf@plt>
   181e8:	b	17c74 <__flatcc_fb_codegen_c@@Base+0x2864>
   181ec:	ldr	r4, [pc, #-584]	; 17fac <__flatcc_fb_codegen_c@@Base+0x2b9c>
   181f0:	ldr	r3, [pc, #-536]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   181f4:	ldr	r0, [r3]
   181f8:	ldr	r3, [pc, #-592]	; 17fb0 <__flatcc_fb_codegen_c@@Base+0x2ba0>
   181fc:	str	r3, [sp]
   18200:	mov	r3, #260	; 0x104
   18204:	mov	r2, r4
   18208:	ldr	r1, [pc, #-552]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   1820c:	bl	13f84 <fprintf@plt>
   18210:	ldr	r3, [pc, #-612]	; 17fb4 <__flatcc_fb_codegen_c@@Base+0x2ba4>
   18214:	mov	r2, #260	; 0x104
   18218:	mov	r1, r4
   1821c:	ldr	r0, [pc, #-564]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   18220:	bl	14038 <__assert_fail@plt>
   18224:	ldr	r3, [r4, #204]	; 0xcc
   18228:	mov	r2, #66	; 0x42
   1822c:	mov	r1, #1
   18230:	ldr	r0, [pc, #-640]	; 17fb8 <__flatcc_fb_codegen_c@@Base+0x2ba8>
   18234:	bl	13f18 <fwrite@plt>
   18238:	ldr	r3, [r4, #204]	; 0xcc
   1823c:	mov	r2, #61	; 0x3d
   18240:	mov	r1, #1
   18244:	ldr	r0, [pc, #-656]	; 17fbc <__flatcc_fb_codegen_c@@Base+0x2bac>
   18248:	bl	13f18 <fwrite@plt>
   1824c:	add	r3, sp, #608	; 0x260
   18250:	str	r3, [sp, #8]
   18254:	str	r7, [sp, #4]
   18258:	str	r6, [sp]
   1825c:	add	r3, sp, #828	; 0x33c
   18260:	ldr	r2, [sp, #44]	; 0x2c
   18264:	ldr	r1, [pc, #-684]	; 17fc0 <__flatcc_fb_codegen_c@@Base+0x2bb0>
   18268:	ldr	r0, [r4, #204]	; 0xcc
   1826c:	bl	13f84 <fprintf@plt>
   18270:	ldr	r3, [r4, #212]	; 0xd4
   18274:	ldr	r3, [r3, #136]	; 0x88
   18278:	cmp	r3, #0
   1827c:	beq	17104 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   18280:	b	17d50 <__flatcc_fb_codegen_c@@Base+0x2940>
   18284:	str	r9, [sp, #24]
   18288:	add	r3, sp, #608	; 0x260
   1828c:	str	r3, [sp, #20]
   18290:	str	r7, [sp, #16]
   18294:	str	r6, [sp, #12]
   18298:	add	r3, sp, #828	; 0x33c
   1829c:	str	r3, [sp, #8]
   182a0:	ldrd	r2, [r5, #96]	; 0x60
   182a4:	strd	r2, [sp]
   182a8:	ldr	r2, [sp, #44]	; 0x2c
   182ac:	mov	r3, r2
   182b0:	ldr	r1, [pc, #-756]	; 17fc4 <__flatcc_fb_codegen_c@@Base+0x2bb4>
   182b4:	ldr	r0, [r4, #204]	; 0xcc
   182b8:	bl	13f84 <fprintf@plt>
   182bc:	b	17b28 <__flatcc_fb_codegen_c@@Base+0x2718>
   182c0:	ldr	r4, [pc, #-748]	; 17fdc <__flatcc_fb_codegen_c@@Base+0x2bcc>
   182c4:	ldr	r3, [pc, #-748]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   182c8:	ldr	r0, [r3]
   182cc:	ldr	r3, [pc, #-780]	; 17fc8 <__flatcc_fb_codegen_c@@Base+0x2bb8>
   182d0:	str	r3, [sp]
   182d4:	mov	r3, #1568	; 0x620
   182d8:	mov	r2, r4
   182dc:	ldr	r1, [pc, #-764]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   182e0:	bl	13f84 <fprintf@plt>
   182e4:	ldr	r3, [pc, #-768]	; 17fec <__flatcc_fb_codegen_c@@Base+0x2bdc>
   182e8:	mov	r2, #1568	; 0x620
   182ec:	mov	r1, r4
   182f0:	ldr	r0, [pc, #-776]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   182f4:	bl	14038 <__assert_fail@plt>
   182f8:	ldr	r3, [r5, #16]
   182fc:	add	r2, sp, #608	; 0x260
   18300:	mov	r1, r3
   18304:	ldr	r0, [r3, #12]
   18308:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1830c:	ldr	r3, [r5, #16]
   18310:	ldrh	r3, [r3, #8]
   18314:	cmp	r3, #4
   18318:	ldrls	pc, [pc, r3, lsl #2]
   1831c:	b	18334 <__flatcc_fb_codegen_c@@Base+0x2f24>
   18320:	andeq	r8, r1, ip, ror #6
   18324:	andeq	r8, r1, ip, ror #6
   18328:	andeq	r8, r1, r4, lsr r3
   1832c:	andeq	r8, r1, ip, ror #6
   18330:	andeq	r8, r1, ip, ror #6
   18334:	ldr	r4, [pc, #-864]	; 17fdc <__flatcc_fb_codegen_c@@Base+0x2bcc>
   18338:	ldr	r3, [pc, #-864]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   1833c:	ldr	r0, [r3]
   18340:	ldr	r3, [pc, #-892]	; 17fcc <__flatcc_fb_codegen_c@@Base+0x2bbc>
   18344:	str	r3, [sp]
   18348:	mov	r3, #1584	; 0x630
   1834c:	mov	r2, r4
   18350:	ldr	r1, [pc, #-880]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   18354:	bl	13f84 <fprintf@plt>
   18358:	ldr	r3, [pc, #-884]	; 17fec <__flatcc_fb_codegen_c@@Base+0x2bdc>
   1835c:	mov	r2, #1584	; 0x630
   18360:	mov	r1, r4
   18364:	ldr	r0, [pc, #-892]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   18368:	bl	14038 <__assert_fail@plt>
   1836c:	cmp	r3, #4
   18370:	beq	183ac <__flatcc_fb_codegen_c@@Base+0x2f9c>
   18374:	str	r9, [sp, #24]
   18378:	add	r3, sp, #608	; 0x260
   1837c:	str	r3, [sp, #20]
   18380:	str	r7, [sp, #16]
   18384:	str	r6, [sp, #12]
   18388:	add	r3, sp, #828	; 0x33c
   1838c:	str	r3, [sp, #8]
   18390:	ldrd	r2, [r5, #96]	; 0x60
   18394:	strd	r2, [sp]
   18398:	ldr	r2, [sp, #44]	; 0x2c
   1839c:	ldr	r1, [pc, #-980]	; 17fd0 <__flatcc_fb_codegen_c@@Base+0x2bc0>
   183a0:	ldr	r0, [r4, #204]	; 0xcc
   183a4:	bl	13f84 <fprintf@plt>
   183a8:	b	17b28 <__flatcc_fb_codegen_c@@Base+0x2718>
   183ac:	str	r9, [sp, #24]
   183b0:	add	r3, sp, #608	; 0x260
   183b4:	str	r3, [sp, #20]
   183b8:	str	r7, [sp, #16]
   183bc:	str	r6, [sp, #12]
   183c0:	add	r3, sp, #828	; 0x33c
   183c4:	str	r3, [sp, #8]
   183c8:	ldrd	r2, [r5, #96]	; 0x60
   183cc:	strd	r2, [sp]
   183d0:	ldr	r2, [sp, #44]	; 0x2c
   183d4:	mov	r3, r2
   183d8:	ldr	r1, [pc, #-1036]	; 17fd4 <__flatcc_fb_codegen_c@@Base+0x2bc4>
   183dc:	ldr	r0, [r4, #204]	; 0xcc
   183e0:	bl	13f84 <fprintf@plt>
   183e4:	b	17b28 <__flatcc_fb_codegen_c@@Base+0x2718>
   183e8:	ldr	r5, [pc, #-1048]	; 17fd8 <__flatcc_fb_codegen_c@@Base+0x2bc8>
   183ec:	ldr	r4, [pc, #-1048]	; 17fdc <__flatcc_fb_codegen_c@@Base+0x2bcc>
   183f0:	ldr	r3, [pc, #-1048]	; 17fe0 <__flatcc_fb_codegen_c@@Base+0x2bd0>
   183f4:	ldr	r0, [r3]
   183f8:	ldr	r3, [pc, #-1052]	; 17fe4 <__flatcc_fb_codegen_c@@Base+0x2bd4>
   183fc:	str	r3, [sp]
   18400:	mov	r3, r5
   18404:	mov	r2, r4
   18408:	ldr	r1, [pc, #-1064]	; 17fe8 <__flatcc_fb_codegen_c@@Base+0x2bd8>
   1840c:	bl	13f84 <fprintf@plt>
   18410:	ldr	r3, [pc, #-1068]	; 17fec <__flatcc_fb_codegen_c@@Base+0x2bdc>
   18414:	mov	r2, r5
   18418:	mov	r1, r4
   1841c:	ldr	r0, [pc, #-1076]	; 17ff0 <__flatcc_fb_codegen_c@@Base+0x2be0>
   18420:	bl	14038 <__assert_fail@plt>
   18424:	ldr	r9, [pc, #-1080]	; 17ff4 <__flatcc_fb_codegen_c@@Base+0x2be4>
   18428:	str	fp, [sp, #52]	; 0x34
   1842c:	ldr	r2, [pc, #-1084]	; 17ff8 <__flatcc_fb_codegen_c@@Base+0x2be8>
   18430:	str	r2, [sp, #60]	; 0x3c
   18434:	b	1844c <__flatcc_fb_codegen_c@@Base+0x303c>
   18438:	ldr	r2, [sp, #44]	; 0x2c
   1843c:	str	r2, [sp, #52]	; 0x34
   18440:	ldr	r9, [pc, #-1100]	; 17ffc <__flatcc_fb_codegen_c@@Base+0x2bec>
   18444:	ldr	r2, [pc, #-1100]	; 18000 <__flatcc_fb_codegen_c@@Base+0x2bf0>
   18448:	str	r2, [sp, #60]	; 0x3c
   1844c:	ldrh	r2, [r5, #56]	; 0x38
   18450:	sub	r2, r2, #3
   18454:	cmp	r2, #3
   18458:	ldrls	pc, [pc, r2, lsl #2]
   1845c:	b	176b8 <__flatcc_fb_codegen_c@@Base+0x22a8>
   18460:	andeq	r7, r1, r4, lsr #13
   18464:	andeq	r7, r1, r4, lsr #9
   18468:	strdeq	r7, [r1], -r0
   1846c:	andeq	r7, r1, ip, lsl #11
   18470:	str	fp, [sp, #52]	; 0x34
   18474:	b	18440 <__flatcc_fb_codegen_c@@Base+0x3030>
   18478:	ldr	r9, [pc, #-1148]	; 18004 <__flatcc_fb_codegen_c@@Base+0x2bf4>
   1847c:	str	fp, [sp, #52]	; 0x34
   18480:	ldr	r2, [pc, #-1152]	; 18008 <__flatcc_fb_codegen_c@@Base+0x2bf8>
   18484:	str	r2, [sp, #60]	; 0x3c
   18488:	b	1844c <__flatcc_fb_codegen_c@@Base+0x303c>
   1848c:	ldr	r9, [pc, #-1160]	; 1800c <__flatcc_fb_codegen_c@@Base+0x2bfc>
   18490:	str	fp, [sp, #52]	; 0x34
   18494:	ldr	r2, [pc, #-1164]	; 18010 <__flatcc_fb_codegen_c@@Base+0x2c00>
   18498:	str	r2, [sp, #60]	; 0x3c
   1849c:	b	1844c <__flatcc_fb_codegen_c@@Base+0x303c>
   184a0:	ldr	r9, [pc, #-1172]	; 18014 <__flatcc_fb_codegen_c@@Base+0x2c04>
   184a4:	str	fp, [sp, #52]	; 0x34
   184a8:	ldr	r2, [pc, #-1176]	; 18018 <__flatcc_fb_codegen_c@@Base+0x2c08>
   184ac:	str	r2, [sp, #60]	; 0x3c
   184b0:	b	1844c <__flatcc_fb_codegen_c@@Base+0x303c>
   184b4:	ldr	r9, [pc, #-1184]	; 1801c <__flatcc_fb_codegen_c@@Base+0x2c0c>
   184b8:	str	fp, [sp, #52]	; 0x34
   184bc:	ldr	r2, [pc, #-1188]	; 18020 <__flatcc_fb_codegen_c@@Base+0x2c10>
   184c0:	str	r2, [sp, #60]	; 0x3c
   184c4:	b	1844c <__flatcc_fb_codegen_c@@Base+0x303c>
   184c8:	ldr	r9, [pc, #-1196]	; 18024 <__flatcc_fb_codegen_c@@Base+0x2c14>
   184cc:	str	fp, [sp, #52]	; 0x34
   184d0:	ldr	r2, [pc, #-1200]	; 18028 <__flatcc_fb_codegen_c@@Base+0x2c18>
   184d4:	str	r2, [sp, #60]	; 0x3c
   184d8:	b	1844c <__flatcc_fb_codegen_c@@Base+0x303c>
   184dc:	ldr	r9, [pc, #-1208]	; 1802c <__flatcc_fb_codegen_c@@Base+0x2c1c>
   184e0:	str	fp, [sp, #52]	; 0x34
   184e4:	ldr	r2, [pc, #-1212]	; 18030 <__flatcc_fb_codegen_c@@Base+0x2c20>
   184e8:	str	r2, [sp, #60]	; 0x3c
   184ec:	b	1844c <__flatcc_fb_codegen_c@@Base+0x303c>
   184f0:	ldrh	r2, [r5, #56]	; 0x38
   184f4:	sub	r2, r2, #3
   184f8:	cmp	r2, #3
   184fc:	ldrls	pc, [pc, r2, lsl #2]
   18500:	b	176b8 <__flatcc_fb_codegen_c@@Base+0x22a8>
   18504:	andeq	r7, r1, r0, ror #12
   18508:	muleq	r1, r8, r4
   1850c:	andeq	r7, r1, r4, ror #3
   18510:	andeq	r7, r1, r8, lsl #12
   18514:	ldrh	r2, [r5, #56]	; 0x38
   18518:	sub	r2, r2, #3
   1851c:	cmp	r2, #3
   18520:	ldrls	pc, [pc, r2, lsl #2]
   18524:	b	176b8 <__flatcc_fb_codegen_c@@Base+0x22a8>
   18528:	muleq	r1, r4, r6
   1852c:	ldrdeq	r7, [r1], -r8
   18530:	andeq	r7, r1, r4, lsr #4
   18534:	andeq	r7, r1, r8, lsl #12
   18538:	add	sp, sp, #1040	; 0x410
   1853c:	add	sp, sp, #12
   18540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018544 <__flatcc_fb_gen_common_c_header@@Base>:
   18544:	push	{r4, r5, lr}
   18548:	sub	sp, sp, #236	; 0xec
   1854c:	mov	r4, r0
   18550:	add	r5, r0, #102	; 0x66
   18554:	mov	r3, r5
   18558:	mov	r2, r5
   1855c:	ldr	r1, [pc, #2812]	; 19060 <__flatcc_fb_gen_common_c_header@@Base+0xb1c>
   18560:	ldr	r0, [r0, #204]	; 0xcc
   18564:	bl	13f84 <fprintf@plt>
   18568:	ldr	r3, [r4, #204]	; 0xcc
   1856c:	mov	r2, #81	; 0x51
   18570:	mov	r1, #1
   18574:	ldr	r0, [pc, #2792]	; 19064 <__flatcc_fb_gen_common_c_header@@Base+0xb20>
   18578:	bl	13f18 <fwrite@plt>
   1857c:	ldr	r3, [r4, #204]	; 0xcc
   18580:	mov	r2, #52	; 0x34
   18584:	mov	r1, #1
   18588:	ldr	r0, [pc, #2776]	; 19068 <__flatcc_fb_gen_common_c_header@@Base+0xb24>
   1858c:	bl	13f18 <fwrite@plt>
   18590:	ldr	r3, [r4, #212]	; 0xd4
   18594:	ldr	r3, [r3, #136]	; 0x88
   18598:	cmp	r3, #0
   1859c:	beq	18f34 <__flatcc_fb_gen_common_c_header@@Base+0x9f0>
   185a0:	ldr	r3, [r4, #212]	; 0xd4
   185a4:	ldr	r3, [r3, #140]	; 0x8c
   185a8:	cmp	r3, #0
   185ac:	bne	18f4c <__flatcc_fb_gen_common_c_header@@Base+0xa08>
   185b0:	ldr	r3, [r4, #204]	; 0xcc
   185b4:	mov	r2, #41	; 0x29
   185b8:	mov	r1, #1
   185bc:	ldr	r0, [pc, #2728]	; 1906c <__flatcc_fb_gen_common_c_header@@Base+0xb28>
   185c0:	bl	13f18 <fwrite@plt>
   185c4:	ldr	r1, [pc, #2724]	; 19070 <__flatcc_fb_gen_common_c_header@@Base+0xb2c>
   185c8:	mov	r0, r4
   185cc:	bl	13eb8 <strcmp@plt>
   185d0:	cmp	r0, #0
   185d4:	bne	18f64 <__flatcc_fb_gen_common_c_header@@Base+0xa20>
   185d8:	mov	r3, r4
   185dc:	mov	r2, r4
   185e0:	ldr	r1, [pc, #2700]	; 19074 <__flatcc_fb_gen_common_c_header@@Base+0xb30>
   185e4:	ldr	r0, [r4, #204]	; 0xcc
   185e8:	bl	13f84 <fprintf@plt>
   185ec:	str	r4, [sp, #16]
   185f0:	str	r4, [sp, #12]
   185f4:	str	r4, [sp, #8]
   185f8:	str	r4, [sp, #4]
   185fc:	str	r4, [sp]
   18600:	mov	r3, r4
   18604:	mov	r2, r4
   18608:	ldr	r1, [pc, #2664]	; 19078 <__flatcc_fb_gen_common_c_header@@Base+0xb34>
   1860c:	ldr	r0, [r4, #204]	; 0xcc
   18610:	bl	13f84 <fprintf@plt>
   18614:	mov	r3, r4
   18618:	mov	r2, r4
   1861c:	ldr	r1, [pc, #2648]	; 1907c <__flatcc_fb_gen_common_c_header@@Base+0xb38>
   18620:	ldr	r0, [r4, #204]	; 0xcc
   18624:	bl	13f84 <fprintf@plt>
   18628:	str	r4, [sp, #4]
   1862c:	str	r4, [sp]
   18630:	mov	r3, r4
   18634:	mov	r2, r4
   18638:	ldr	r1, [pc, #2624]	; 19080 <__flatcc_fb_gen_common_c_header@@Base+0xb3c>
   1863c:	ldr	r0, [r4, #204]	; 0xcc
   18640:	bl	13f84 <fprintf@plt>
   18644:	ldr	r3, [r4, #212]	; 0xd4
   18648:	ldr	r3, [r3, #32]
   1864c:	cmp	r3, #0
   18650:	beq	18fd8 <__flatcc_fb_gen_common_c_header@@Base+0xa94>
   18654:	mov	r2, r4
   18658:	ldr	r1, [pc, #2596]	; 19084 <__flatcc_fb_gen_common_c_header@@Base+0xb40>
   1865c:	ldr	r0, [r4, #204]	; 0xcc
   18660:	bl	13f84 <fprintf@plt>
   18664:	mov	r3, r4
   18668:	mov	r2, r4
   1866c:	ldr	r1, [pc, #2580]	; 19088 <__flatcc_fb_gen_common_c_header@@Base+0xb44>
   18670:	ldr	r0, [r4, #204]	; 0xcc
   18674:	bl	13f84 <fprintf@plt>
   18678:	str	r4, [sp, #8]
   1867c:	str	r4, [sp, #4]
   18680:	str	r4, [sp]
   18684:	mov	r3, r4
   18688:	mov	r2, r4
   1868c:	ldr	r1, [pc, #2552]	; 1908c <__flatcc_fb_gen_common_c_header@@Base+0xb48>
   18690:	ldr	r0, [r4, #204]	; 0xcc
   18694:	bl	13f84 <fprintf@plt>
   18698:	str	r4, [sp, #8]
   1869c:	str	r4, [sp, #4]
   186a0:	str	r4, [sp]
   186a4:	mov	r3, r4
   186a8:	mov	r2, r4
   186ac:	ldr	r1, [pc, #2524]	; 19090 <__flatcc_fb_gen_common_c_header@@Base+0xb4c>
   186b0:	ldr	r0, [r4, #204]	; 0xcc
   186b4:	bl	13f84 <fprintf@plt>
   186b8:	str	r4, [sp]
   186bc:	mov	r3, r4
   186c0:	mov	r2, r4
   186c4:	ldr	r1, [pc, #2504]	; 19094 <__flatcc_fb_gen_common_c_header@@Base+0xb50>
   186c8:	ldr	r0, [r4, #204]	; 0xcc
   186cc:	bl	13f84 <fprintf@plt>
   186d0:	str	r4, [sp]
   186d4:	mov	r3, r4
   186d8:	mov	r2, r4
   186dc:	ldr	r1, [pc, #2484]	; 19098 <__flatcc_fb_gen_common_c_header@@Base+0xb54>
   186e0:	ldr	r0, [r4, #204]	; 0xcc
   186e4:	bl	13f84 <fprintf@plt>
   186e8:	str	r4, [sp]
   186ec:	mov	r3, r4
   186f0:	mov	r2, r4
   186f4:	ldr	r1, [pc, #2464]	; 1909c <__flatcc_fb_gen_common_c_header@@Base+0xb58>
   186f8:	ldr	r0, [r4, #204]	; 0xcc
   186fc:	bl	13f84 <fprintf@plt>
   18700:	str	r4, [sp, #8]
   18704:	str	r4, [sp, #4]
   18708:	str	r4, [sp]
   1870c:	mov	r3, r4
   18710:	mov	r2, r4
   18714:	ldr	r1, [pc, #2436]	; 190a0 <__flatcc_fb_gen_common_c_header@@Base+0xb5c>
   18718:	ldr	r0, [r4, #204]	; 0xcc
   1871c:	bl	13f84 <fprintf@plt>
   18720:	ldr	r3, [r4, #212]	; 0xd4
   18724:	ldr	r3, [r3, #32]
   18728:	cmp	r3, #0
   1872c:	beq	18fe8 <__flatcc_fb_gen_common_c_header@@Base+0xaa4>
   18730:	mov	r2, r4
   18734:	ldr	r1, [pc, #2408]	; 190a4 <__flatcc_fb_gen_common_c_header@@Base+0xb60>
   18738:	ldr	r0, [r4, #204]	; 0xcc
   1873c:	bl	13f84 <fprintf@plt>
   18740:	str	r4, [sp, #4]
   18744:	str	r4, [sp]
   18748:	mov	r3, r4
   1874c:	mov	r2, r4
   18750:	ldr	r1, [pc, #2384]	; 190a8 <__flatcc_fb_gen_common_c_header@@Base+0xb64>
   18754:	ldr	r0, [r4, #204]	; 0xcc
   18758:	bl	13f84 <fprintf@plt>
   1875c:	mov	r3, r4
   18760:	mov	r2, r4
   18764:	ldr	r1, [pc, #2368]	; 190ac <__flatcc_fb_gen_common_c_header@@Base+0xb68>
   18768:	ldr	r0, [r4, #204]	; 0xcc
   1876c:	bl	13f84 <fprintf@plt>
   18770:	str	r4, [sp]
   18774:	mov	r3, r4
   18778:	mov	r2, r4
   1877c:	ldr	r1, [pc, #2348]	; 190b0 <__flatcc_fb_gen_common_c_header@@Base+0xb6c>
   18780:	ldr	r0, [r4, #204]	; 0xcc
   18784:	bl	13f84 <fprintf@plt>
   18788:	mov	r3, r4
   1878c:	mov	r2, r4
   18790:	ldr	r1, [pc, #2332]	; 190b4 <__flatcc_fb_gen_common_c_header@@Base+0xb70>
   18794:	ldr	r0, [r4, #204]	; 0xcc
   18798:	bl	13f84 <fprintf@plt>
   1879c:	str	r4, [sp, #4]
   187a0:	str	r4, [sp]
   187a4:	mov	r3, r4
   187a8:	mov	r2, r4
   187ac:	ldr	r1, [pc, #2308]	; 190b8 <__flatcc_fb_gen_common_c_header@@Base+0xb74>
   187b0:	ldr	r0, [r4, #204]	; 0xcc
   187b4:	bl	13f84 <fprintf@plt>
   187b8:	mov	r3, r4
   187bc:	mov	r2, r4
   187c0:	ldr	r1, [pc, #2292]	; 190bc <__flatcc_fb_gen_common_c_header@@Base+0xb78>
   187c4:	ldr	r0, [r4, #204]	; 0xcc
   187c8:	bl	13f84 <fprintf@plt>
   187cc:	mov	r3, r4
   187d0:	mov	r2, r4
   187d4:	ldr	r1, [pc, #2276]	; 190c0 <__flatcc_fb_gen_common_c_header@@Base+0xb7c>
   187d8:	ldr	r0, [r4, #204]	; 0xcc
   187dc:	bl	13f84 <fprintf@plt>
   187e0:	str	r4, [sp, #4]
   187e4:	str	r4, [sp]
   187e8:	mov	r3, r4
   187ec:	mov	r2, r4
   187f0:	ldr	r1, [pc, #2252]	; 190c4 <__flatcc_fb_gen_common_c_header@@Base+0xb80>
   187f4:	ldr	r0, [r4, #204]	; 0xcc
   187f8:	bl	13f84 <fprintf@plt>
   187fc:	str	r4, [sp, #36]	; 0x24
   18800:	str	r4, [sp, #32]
   18804:	str	r4, [sp, #28]
   18808:	str	r4, [sp, #24]
   1880c:	str	r4, [sp, #20]
   18810:	str	r4, [sp, #16]
   18814:	str	r4, [sp, #12]
   18818:	str	r4, [sp, #8]
   1881c:	str	r4, [sp, #4]
   18820:	str	r4, [sp]
   18824:	mov	r3, r4
   18828:	mov	r2, r4
   1882c:	ldr	r1, [pc, #2196]	; 190c8 <__flatcc_fb_gen_common_c_header@@Base+0xb84>
   18830:	ldr	r0, [r4, #204]	; 0xcc
   18834:	bl	13f84 <fprintf@plt>
   18838:	mov	r2, r4
   1883c:	ldr	r1, [pc, #2184]	; 190cc <__flatcc_fb_gen_common_c_header@@Base+0xb88>
   18840:	ldr	r0, [r4, #204]	; 0xcc
   18844:	bl	13f84 <fprintf@plt>
   18848:	str	r4, [sp, #4]
   1884c:	str	r4, [sp]
   18850:	mov	r3, r4
   18854:	mov	r2, r4
   18858:	ldr	r1, [pc, #2160]	; 190d0 <__flatcc_fb_gen_common_c_header@@Base+0xb8c>
   1885c:	ldr	r0, [r4, #204]	; 0xcc
   18860:	bl	13f84 <fprintf@plt>
   18864:	str	r4, [sp, #56]	; 0x38
   18868:	str	r4, [sp, #52]	; 0x34
   1886c:	str	r4, [sp, #48]	; 0x30
   18870:	str	r4, [sp, #44]	; 0x2c
   18874:	str	r4, [sp, #40]	; 0x28
   18878:	str	r4, [sp, #36]	; 0x24
   1887c:	str	r4, [sp, #32]
   18880:	str	r4, [sp, #28]
   18884:	str	r4, [sp, #24]
   18888:	str	r4, [sp, #20]
   1888c:	str	r4, [sp, #16]
   18890:	str	r4, [sp, #12]
   18894:	str	r4, [sp, #8]
   18898:	str	r4, [sp, #4]
   1889c:	str	r4, [sp]
   188a0:	mov	r3, r4
   188a4:	mov	r2, r4
   188a8:	ldr	r1, [pc, #2084]	; 190d4 <__flatcc_fb_gen_common_c_header@@Base+0xb90>
   188ac:	ldr	r0, [r4, #204]	; 0xcc
   188b0:	bl	13f84 <fprintf@plt>
   188b4:	str	r4, [sp, #20]
   188b8:	str	r4, [sp, #16]
   188bc:	str	r4, [sp, #12]
   188c0:	str	r4, [sp, #8]
   188c4:	str	r4, [sp, #4]
   188c8:	str	r4, [sp]
   188cc:	mov	r3, r4
   188d0:	mov	r2, r4
   188d4:	ldr	r1, [pc, #2044]	; 190d8 <__flatcc_fb_gen_common_c_header@@Base+0xb94>
   188d8:	ldr	r0, [r4, #204]	; 0xcc
   188dc:	bl	13f84 <fprintf@plt>
   188e0:	str	r4, [sp, #4]
   188e4:	str	r4, [sp]
   188e8:	mov	r3, r4
   188ec:	mov	r2, r4
   188f0:	ldr	r1, [pc, #2020]	; 190dc <__flatcc_fb_gen_common_c_header@@Base+0xb98>
   188f4:	ldr	r0, [r4, #204]	; 0xcc
   188f8:	bl	13f84 <fprintf@plt>
   188fc:	str	r4, [sp, #4]
   18900:	str	r4, [sp]
   18904:	mov	r3, r4
   18908:	mov	r2, r4
   1890c:	ldr	r1, [pc, #1996]	; 190e0 <__flatcc_fb_gen_common_c_header@@Base+0xb9c>
   18910:	ldr	r0, [r4, #204]	; 0xcc
   18914:	bl	13f84 <fprintf@plt>
   18918:	mov	r2, r4
   1891c:	ldr	r1, [pc, #1984]	; 190e4 <__flatcc_fb_gen_common_c_header@@Base+0xba0>
   18920:	ldr	r0, [r4, #204]	; 0xcc
   18924:	bl	13f84 <fprintf@plt>
   18928:	mov	r2, r4
   1892c:	ldr	r1, [pc, #1972]	; 190e8 <__flatcc_fb_gen_common_c_header@@Base+0xba4>
   18930:	ldr	r0, [r4, #204]	; 0xcc
   18934:	bl	13f84 <fprintf@plt>
   18938:	mov	r2, r4
   1893c:	ldr	r1, [pc, #1960]	; 190ec <__flatcc_fb_gen_common_c_header@@Base+0xba8>
   18940:	ldr	r0, [r4, #204]	; 0xcc
   18944:	bl	13f84 <fprintf@plt>
   18948:	mov	r2, r4
   1894c:	ldr	r1, [pc, #1948]	; 190f0 <__flatcc_fb_gen_common_c_header@@Base+0xbac>
   18950:	ldr	r0, [r4, #204]	; 0xcc
   18954:	bl	13f84 <fprintf@plt>
   18958:	mov	r2, r4
   1895c:	ldr	r1, [pc, #1936]	; 190f4 <__flatcc_fb_gen_common_c_header@@Base+0xbb0>
   18960:	ldr	r0, [r4, #204]	; 0xcc
   18964:	bl	13f84 <fprintf@plt>
   18968:	str	r4, [sp, #4]
   1896c:	str	r4, [sp]
   18970:	mov	r3, r4
   18974:	mov	r2, r4
   18978:	ldr	r1, [pc, #1912]	; 190f8 <__flatcc_fb_gen_common_c_header@@Base+0xbb4>
   1897c:	ldr	r0, [r4, #204]	; 0xcc
   18980:	bl	13f84 <fprintf@plt>
   18984:	str	r4, [sp, #12]
   18988:	str	r4, [sp, #8]
   1898c:	str	r4, [sp, #4]
   18990:	str	r4, [sp]
   18994:	mov	r3, r4
   18998:	mov	r2, r4
   1899c:	ldr	r1, [pc, #1880]	; 190fc <__flatcc_fb_gen_common_c_header@@Base+0xbb8>
   189a0:	ldr	r0, [r4, #204]	; 0xcc
   189a4:	bl	13f84 <fprintf@plt>
   189a8:	str	r4, [sp]
   189ac:	mov	r3, r4
   189b0:	mov	r2, r4
   189b4:	ldr	r1, [pc, #1860]	; 19100 <__flatcc_fb_gen_common_c_header@@Base+0xbbc>
   189b8:	ldr	r0, [r4, #204]	; 0xcc
   189bc:	bl	13f84 <fprintf@plt>
   189c0:	str	r4, [sp, #32]
   189c4:	str	r4, [sp, #28]
   189c8:	str	r4, [sp, #24]
   189cc:	str	r4, [sp, #20]
   189d0:	str	r4, [sp, #16]
   189d4:	str	r4, [sp, #12]
   189d8:	str	r4, [sp, #8]
   189dc:	str	r4, [sp, #4]
   189e0:	str	r4, [sp]
   189e4:	mov	r3, r4
   189e8:	mov	r2, r4
   189ec:	ldr	r1, [pc, #1808]	; 19104 <__flatcc_fb_gen_common_c_header@@Base+0xbc0>
   189f0:	ldr	r0, [r4, #204]	; 0xcc
   189f4:	bl	13f84 <fprintf@plt>
   189f8:	mov	r3, r4
   189fc:	mov	r2, r4
   18a00:	ldr	r1, [pc, #1792]	; 19108 <__flatcc_fb_gen_common_c_header@@Base+0xbc4>
   18a04:	ldr	r0, [r4, #204]	; 0xcc
   18a08:	bl	13f84 <fprintf@plt>
   18a0c:	str	r4, [sp]
   18a10:	mov	r3, r4
   18a14:	mov	r2, r4
   18a18:	ldr	r1, [pc, #1772]	; 1910c <__flatcc_fb_gen_common_c_header@@Base+0xbc8>
   18a1c:	ldr	r0, [r4, #204]	; 0xcc
   18a20:	bl	13f84 <fprintf@plt>
   18a24:	str	r4, [sp]
   18a28:	mov	r3, r4
   18a2c:	mov	r2, r4
   18a30:	ldr	r1, [pc, #1752]	; 19110 <__flatcc_fb_gen_common_c_header@@Base+0xbcc>
   18a34:	ldr	r0, [r4, #204]	; 0xcc
   18a38:	bl	13f84 <fprintf@plt>
   18a3c:	mov	r2, r4
   18a40:	ldr	r1, [pc, #1740]	; 19114 <__flatcc_fb_gen_common_c_header@@Base+0xbd0>
   18a44:	ldr	r0, [r4, #204]	; 0xcc
   18a48:	bl	13f84 <fprintf@plt>
   18a4c:	mov	r2, r4
   18a50:	ldr	r1, [pc, #1728]	; 19118 <__flatcc_fb_gen_common_c_header@@Base+0xbd4>
   18a54:	ldr	r0, [r4, #204]	; 0xcc
   18a58:	bl	13f84 <fprintf@plt>
   18a5c:	mov	r3, r4
   18a60:	mov	r2, r4
   18a64:	ldr	r1, [pc, #1712]	; 1911c <__flatcc_fb_gen_common_c_header@@Base+0xbd8>
   18a68:	ldr	r0, [r4, #204]	; 0xcc
   18a6c:	bl	13f84 <fprintf@plt>
   18a70:	mov	r3, r4
   18a74:	mov	r2, r4
   18a78:	ldr	r1, [pc, #1696]	; 19120 <__flatcc_fb_gen_common_c_header@@Base+0xbdc>
   18a7c:	ldr	r0, [r4, #204]	; 0xcc
   18a80:	bl	13f84 <fprintf@plt>
   18a84:	str	r4, [sp, #32]
   18a88:	str	r4, [sp, #28]
   18a8c:	str	r4, [sp, #24]
   18a90:	str	r4, [sp, #20]
   18a94:	str	r4, [sp, #16]
   18a98:	str	r4, [sp, #12]
   18a9c:	str	r4, [sp, #8]
   18aa0:	str	r4, [sp, #4]
   18aa4:	str	r4, [sp]
   18aa8:	mov	r3, r4
   18aac:	mov	r2, r4
   18ab0:	ldr	r1, [pc, #1644]	; 19124 <__flatcc_fb_gen_common_c_header@@Base+0xbe0>
   18ab4:	ldr	r0, [r4, #204]	; 0xcc
   18ab8:	bl	13f84 <fprintf@plt>
   18abc:	str	r4, [sp, #32]
   18ac0:	str	r4, [sp, #28]
   18ac4:	str	r4, [sp, #24]
   18ac8:	str	r4, [sp, #20]
   18acc:	str	r4, [sp, #16]
   18ad0:	str	r4, [sp, #12]
   18ad4:	str	r4, [sp, #8]
   18ad8:	str	r4, [sp, #4]
   18adc:	str	r4, [sp]
   18ae0:	mov	r3, r4
   18ae4:	mov	r2, r4
   18ae8:	ldr	r1, [pc, #1592]	; 19128 <__flatcc_fb_gen_common_c_header@@Base+0xbe4>
   18aec:	ldr	r0, [r4, #204]	; 0xcc
   18af0:	bl	13f84 <fprintf@plt>
   18af4:	str	r4, [sp, #16]
   18af8:	str	r4, [sp, #12]
   18afc:	str	r4, [sp, #8]
   18b00:	str	r4, [sp, #4]
   18b04:	str	r4, [sp]
   18b08:	mov	r3, r4
   18b0c:	mov	r2, r4
   18b10:	ldr	r1, [pc, #1556]	; 1912c <__flatcc_fb_gen_common_c_header@@Base+0xbe8>
   18b14:	ldr	r0, [r4, #204]	; 0xcc
   18b18:	bl	13f84 <fprintf@plt>
   18b1c:	str	r4, [sp, #32]
   18b20:	str	r4, [sp, #28]
   18b24:	str	r4, [sp, #24]
   18b28:	str	r4, [sp, #20]
   18b2c:	str	r4, [sp, #16]
   18b30:	str	r4, [sp, #12]
   18b34:	str	r4, [sp, #8]
   18b38:	str	r4, [sp, #4]
   18b3c:	str	r4, [sp]
   18b40:	mov	r3, r4
   18b44:	mov	r2, r4
   18b48:	ldr	r1, [pc, #1504]	; 19130 <__flatcc_fb_gen_common_c_header@@Base+0xbec>
   18b4c:	ldr	r0, [r4, #204]	; 0xcc
   18b50:	bl	13f84 <fprintf@plt>
   18b54:	str	r4, [sp, #40]	; 0x28
   18b58:	str	r4, [sp, #36]	; 0x24
   18b5c:	str	r4, [sp, #32]
   18b60:	str	r4, [sp, #28]
   18b64:	str	r4, [sp, #24]
   18b68:	str	r4, [sp, #20]
   18b6c:	str	r4, [sp, #16]
   18b70:	str	r4, [sp, #12]
   18b74:	str	r4, [sp, #8]
   18b78:	str	r4, [sp, #4]
   18b7c:	str	r4, [sp]
   18b80:	mov	r3, r4
   18b84:	mov	r2, r4
   18b88:	ldr	r1, [pc, #1444]	; 19134 <__flatcc_fb_gen_common_c_header@@Base+0xbf0>
   18b8c:	ldr	r0, [r4, #204]	; 0xcc
   18b90:	bl	13f84 <fprintf@plt>
   18b94:	mov	r2, r4
   18b98:	ldr	r1, [pc, #1432]	; 19138 <__flatcc_fb_gen_common_c_header@@Base+0xbf4>
   18b9c:	ldr	r0, [r4, #204]	; 0xcc
   18ba0:	bl	13f84 <fprintf@plt>
   18ba4:	mov	r2, r4
   18ba8:	ldr	r1, [pc, #1420]	; 1913c <__flatcc_fb_gen_common_c_header@@Base+0xbf8>
   18bac:	ldr	r0, [r4, #204]	; 0xcc
   18bb0:	bl	13f84 <fprintf@plt>
   18bb4:	ldr	r3, [r4, #212]	; 0xd4
   18bb8:	ldr	r3, [r3, #136]	; 0x88
   18bbc:	cmp	r3, #0
   18bc0:	beq	18ff8 <__flatcc_fb_gen_common_c_header@@Base+0xab4>
   18bc4:	mov	r0, r4
   18bc8:	bl	196a0 <__flatcc_gen_sort@@Base>
   18bcc:	str	r4, [sp, #8]
   18bd0:	str	r4, [sp, #4]
   18bd4:	str	r4, [sp]
   18bd8:	mov	r3, r4
   18bdc:	mov	r2, r4
   18be0:	ldr	r1, [pc, #1368]	; 19140 <__flatcc_fb_gen_common_c_header@@Base+0xbfc>
   18be4:	ldr	r0, [r4, #204]	; 0xcc
   18be8:	bl	13f84 <fprintf@plt>
   18bec:	ldr	r3, [r4, #212]	; 0xd4
   18bf0:	ldr	r3, [r3, #136]	; 0x88
   18bf4:	cmp	r3, #0
   18bf8:	beq	19010 <__flatcc_fb_gen_common_c_header@@Base+0xacc>
   18bfc:	mov	r2, r4
   18c00:	ldr	r1, [pc, #1340]	; 19144 <__flatcc_fb_gen_common_c_header@@Base+0xc00>
   18c04:	ldr	r0, [r4, #204]	; 0xcc
   18c08:	bl	13f84 <fprintf@plt>
   18c0c:	ldr	r1, [r4, #204]	; 0xcc
   18c10:	mov	r0, #10
   18c14:	bl	13fe4 <fputc@plt>
   18c18:	str	r4, [sp]
   18c1c:	mov	r3, r4
   18c20:	mov	r2, r4
   18c24:	ldr	r1, [pc, #1308]	; 19148 <__flatcc_fb_gen_common_c_header@@Base+0xc04>
   18c28:	ldr	r0, [r4, #204]	; 0xcc
   18c2c:	bl	13f84 <fprintf@plt>
   18c30:	str	r4, [sp, #92]	; 0x5c
   18c34:	str	r4, [sp, #88]	; 0x58
   18c38:	str	r4, [sp, #84]	; 0x54
   18c3c:	str	r4, [sp, #80]	; 0x50
   18c40:	str	r4, [sp, #76]	; 0x4c
   18c44:	str	r4, [sp, #72]	; 0x48
   18c48:	str	r4, [sp, #68]	; 0x44
   18c4c:	str	r4, [sp, #64]	; 0x40
   18c50:	str	r4, [sp, #60]	; 0x3c
   18c54:	str	r4, [sp, #56]	; 0x38
   18c58:	str	r4, [sp, #52]	; 0x34
   18c5c:	str	r4, [sp, #48]	; 0x30
   18c60:	str	r4, [sp, #44]	; 0x2c
   18c64:	str	r4, [sp, #40]	; 0x28
   18c68:	str	r4, [sp, #36]	; 0x24
   18c6c:	str	r4, [sp, #32]
   18c70:	str	r4, [sp, #28]
   18c74:	str	r4, [sp, #24]
   18c78:	str	r4, [sp, #20]
   18c7c:	str	r4, [sp, #16]
   18c80:	str	r4, [sp, #12]
   18c84:	str	r4, [sp, #8]
   18c88:	str	r4, [sp, #4]
   18c8c:	str	r4, [sp]
   18c90:	mov	r3, r4
   18c94:	mov	r2, r4
   18c98:	ldr	r1, [pc, #1196]	; 1914c <__flatcc_fb_gen_common_c_header@@Base+0xc08>
   18c9c:	ldr	r0, [r4, #204]	; 0xcc
   18ca0:	bl	13f84 <fprintf@plt>
   18ca4:	str	r4, [sp, #36]	; 0x24
   18ca8:	str	r4, [sp, #32]
   18cac:	str	r4, [sp, #28]
   18cb0:	str	r4, [sp, #24]
   18cb4:	str	r4, [sp, #20]
   18cb8:	str	r4, [sp, #16]
   18cbc:	str	r4, [sp, #12]
   18cc0:	str	r4, [sp, #8]
   18cc4:	str	r4, [sp, #4]
   18cc8:	str	r4, [sp]
   18ccc:	mov	r3, r4
   18cd0:	mov	r2, r4
   18cd4:	ldr	r1, [pc, #1140]	; 19150 <__flatcc_fb_gen_common_c_header@@Base+0xc0c>
   18cd8:	ldr	r0, [r4, #204]	; 0xcc
   18cdc:	bl	13f84 <fprintf@plt>
   18ce0:	str	r4, [sp, #228]	; 0xe4
   18ce4:	str	r4, [sp, #224]	; 0xe0
   18ce8:	str	r4, [sp, #220]	; 0xdc
   18cec:	str	r4, [sp, #216]	; 0xd8
   18cf0:	str	r4, [sp, #212]	; 0xd4
   18cf4:	str	r4, [sp, #208]	; 0xd0
   18cf8:	str	r4, [sp, #204]	; 0xcc
   18cfc:	str	r4, [sp, #200]	; 0xc8
   18d00:	str	r4, [sp, #196]	; 0xc4
   18d04:	str	r4, [sp, #192]	; 0xc0
   18d08:	str	r4, [sp, #188]	; 0xbc
   18d0c:	str	r4, [sp, #184]	; 0xb8
   18d10:	str	r4, [sp, #180]	; 0xb4
   18d14:	str	r4, [sp, #176]	; 0xb0
   18d18:	str	r4, [sp, #172]	; 0xac
   18d1c:	str	r4, [sp, #168]	; 0xa8
   18d20:	str	r4, [sp, #164]	; 0xa4
   18d24:	str	r4, [sp, #160]	; 0xa0
   18d28:	str	r4, [sp, #156]	; 0x9c
   18d2c:	str	r4, [sp, #152]	; 0x98
   18d30:	str	r4, [sp, #148]	; 0x94
   18d34:	str	r4, [sp, #144]	; 0x90
   18d38:	str	r4, [sp, #140]	; 0x8c
   18d3c:	str	r4, [sp, #136]	; 0x88
   18d40:	str	r4, [sp, #132]	; 0x84
   18d44:	str	r4, [sp, #128]	; 0x80
   18d48:	str	r4, [sp, #124]	; 0x7c
   18d4c:	str	r4, [sp, #120]	; 0x78
   18d50:	str	r4, [sp, #116]	; 0x74
   18d54:	str	r4, [sp, #112]	; 0x70
   18d58:	str	r4, [sp, #108]	; 0x6c
   18d5c:	str	r4, [sp, #104]	; 0x68
   18d60:	str	r4, [sp, #100]	; 0x64
   18d64:	str	r4, [sp, #96]	; 0x60
   18d68:	str	r4, [sp, #92]	; 0x5c
   18d6c:	str	r4, [sp, #88]	; 0x58
   18d70:	str	r4, [sp, #84]	; 0x54
   18d74:	str	r4, [sp, #80]	; 0x50
   18d78:	str	r4, [sp, #76]	; 0x4c
   18d7c:	str	r4, [sp, #72]	; 0x48
   18d80:	str	r4, [sp, #68]	; 0x44
   18d84:	str	r4, [sp, #64]	; 0x40
   18d88:	str	r4, [sp, #60]	; 0x3c
   18d8c:	str	r4, [sp, #56]	; 0x38
   18d90:	str	r4, [sp, #52]	; 0x34
   18d94:	str	r4, [sp, #48]	; 0x30
   18d98:	str	r4, [sp, #44]	; 0x2c
   18d9c:	str	r4, [sp, #40]	; 0x28
   18da0:	str	r4, [sp, #36]	; 0x24
   18da4:	str	r4, [sp, #32]
   18da8:	str	r4, [sp, #28]
   18dac:	str	r4, [sp, #24]
   18db0:	str	r4, [sp, #20]
   18db4:	str	r4, [sp, #16]
   18db8:	str	r4, [sp, #12]
   18dbc:	str	r4, [sp, #8]
   18dc0:	str	r4, [sp, #4]
   18dc4:	str	r4, [sp]
   18dc8:	mov	r3, r4
   18dcc:	mov	r2, r4
   18dd0:	ldr	r1, [pc, #892]	; 19154 <__flatcc_fb_gen_common_c_header@@Base+0xc10>
   18dd4:	ldr	r0, [r4, #204]	; 0xcc
   18dd8:	bl	13f84 <fprintf@plt>
   18ddc:	ldr	r3, [r4, #212]	; 0xd4
   18de0:	ldr	r3, [r3, #136]	; 0x88
   18de4:	cmp	r3, #0
   18de8:	bne	19020 <__flatcc_fb_gen_common_c_header@@Base+0xadc>
   18dec:	mov	r3, r4
   18df0:	mov	r2, r4
   18df4:	ldr	r1, [pc, #860]	; 19158 <__flatcc_fb_gen_common_c_header@@Base+0xc14>
   18df8:	ldr	r0, [r4, #204]	; 0xcc
   18dfc:	bl	13f84 <fprintf@plt>
   18e00:	ldr	r3, [r4, #212]	; 0xd4
   18e04:	ldr	r3, [r3, #32]
   18e08:	cmp	r3, #0
   18e0c:	bne	19034 <__flatcc_fb_gen_common_c_header@@Base+0xaf0>
   18e10:	ldr	r1, [r4, #204]	; 0xcc
   18e14:	mov	r0, #10
   18e18:	bl	13fe4 <fputc@plt>
   18e1c:	mov	r2, r4
   18e20:	ldr	r1, [pc, #820]	; 1915c <__flatcc_fb_gen_common_c_header@@Base+0xc18>
   18e24:	ldr	r0, [r4, #204]	; 0xcc
   18e28:	bl	13f84 <fprintf@plt>
   18e2c:	str	r4, [sp, #44]	; 0x2c
   18e30:	str	r4, [sp, #40]	; 0x28
   18e34:	str	r4, [sp, #36]	; 0x24
   18e38:	str	r4, [sp, #32]
   18e3c:	str	r4, [sp, #28]
   18e40:	str	r4, [sp, #24]
   18e44:	str	r4, [sp, #20]
   18e48:	str	r4, [sp, #16]
   18e4c:	str	r4, [sp, #12]
   18e50:	str	r4, [sp, #8]
   18e54:	str	r4, [sp, #4]
   18e58:	str	r4, [sp]
   18e5c:	mov	r3, r4
   18e60:	mov	r2, r4
   18e64:	ldr	r1, [pc, #756]	; 19160 <__flatcc_fb_gen_common_c_header@@Base+0xc1c>
   18e68:	ldr	r0, [r4, #204]	; 0xcc
   18e6c:	bl	13f84 <fprintf@plt>
   18e70:	str	r4, [sp]
   18e74:	mov	r3, r4
   18e78:	mov	r2, r4
   18e7c:	ldr	r1, [pc, #736]	; 19164 <__flatcc_fb_gen_common_c_header@@Base+0xc20>
   18e80:	ldr	r0, [r4, #204]	; 0xcc
   18e84:	bl	13f84 <fprintf@plt>
   18e88:	str	r4, [sp, #12]
   18e8c:	str	r4, [sp, #8]
   18e90:	str	r4, [sp, #4]
   18e94:	str	r4, [sp]
   18e98:	mov	r3, r4
   18e9c:	mov	r2, r4
   18ea0:	ldr	r1, [pc, #704]	; 19168 <__flatcc_fb_gen_common_c_header@@Base+0xc24>
   18ea4:	ldr	r0, [r4, #204]	; 0xcc
   18ea8:	bl	13f84 <fprintf@plt>
   18eac:	str	r4, [sp, #4]
   18eb0:	str	r4, [sp]
   18eb4:	mov	r3, r4
   18eb8:	mov	r2, r4
   18ebc:	ldr	r1, [pc, #680]	; 1916c <__flatcc_fb_gen_common_c_header@@Base+0xc28>
   18ec0:	ldr	r0, [r4, #204]	; 0xcc
   18ec4:	bl	13f84 <fprintf@plt>
   18ec8:	str	r4, [sp, #28]
   18ecc:	str	r4, [sp, #24]
   18ed0:	str	r4, [sp, #20]
   18ed4:	str	r4, [sp, #16]
   18ed8:	str	r4, [sp, #12]
   18edc:	str	r4, [sp, #8]
   18ee0:	str	r4, [sp, #4]
   18ee4:	str	r4, [sp]
   18ee8:	mov	r3, r4
   18eec:	mov	r2, r4
   18ef0:	ldr	r1, [pc, #632]	; 19170 <__flatcc_fb_gen_common_c_header@@Base+0xc2c>
   18ef4:	ldr	r0, [r4, #204]	; 0xcc
   18ef8:	bl	13f84 <fprintf@plt>
   18efc:	ldr	r1, [r4, #204]	; 0xcc
   18f00:	mov	r0, #10
   18f04:	bl	13fe4 <fputc@plt>
   18f08:	ldr	r3, [r4, #212]	; 0xd4
   18f0c:	ldr	r3, [r3, #140]	; 0x8c
   18f10:	cmp	r3, #0
   18f14:	bne	19048 <__flatcc_fb_gen_common_c_header@@Base+0xb04>
   18f18:	mov	r2, r5
   18f1c:	ldr	r1, [pc, #592]	; 19174 <__flatcc_fb_gen_common_c_header@@Base+0xc30>
   18f20:	ldr	r0, [r4, #204]	; 0xcc
   18f24:	bl	13f84 <fprintf@plt>
   18f28:	mov	r0, #0
   18f2c:	add	sp, sp, #236	; 0xec
   18f30:	pop	{r4, r5, pc}
   18f34:	ldr	r3, [r4, #204]	; 0xcc
   18f38:	mov	r2, #135	; 0x87
   18f3c:	mov	r1, #1
   18f40:	ldr	r0, [pc, #560]	; 19178 <__flatcc_fb_gen_common_c_header@@Base+0xc34>
   18f44:	bl	13f18 <fwrite@plt>
   18f48:	b	185a0 <__flatcc_fb_gen_common_c_header@@Base+0x5c>
   18f4c:	ldr	r3, [r4, #204]	; 0xcc
   18f50:	mov	r2, #36	; 0x24
   18f54:	mov	r1, #1
   18f58:	ldr	r0, [pc, #540]	; 1917c <__flatcc_fb_gen_common_c_header@@Base+0xc38>
   18f5c:	bl	13f18 <fwrite@plt>
   18f60:	b	185b0 <__flatcc_fb_gen_common_c_header@@Base+0x6c>
   18f64:	str	r4, [sp, #8]
   18f68:	str	r4, [sp, #4]
   18f6c:	str	r4, [sp]
   18f70:	mov	r3, r4
   18f74:	mov	r2, r4
   18f78:	ldr	r1, [pc, #512]	; 19180 <__flatcc_fb_gen_common_c_header@@Base+0xc3c>
   18f7c:	ldr	r0, [r4, #204]	; 0xcc
   18f80:	bl	13f84 <fprintf@plt>
   18f84:	str	r4, [sp, #4]
   18f88:	str	r4, [sp]
   18f8c:	mov	r3, r4
   18f90:	ldr	r2, [pc, #492]	; 19184 <__flatcc_fb_gen_common_c_header@@Base+0xc40>
   18f94:	ldr	r1, [pc, #492]	; 19188 <__flatcc_fb_gen_common_c_header@@Base+0xc44>
   18f98:	ldr	r0, [r4, #204]	; 0xcc
   18f9c:	bl	13f84 <fprintf@plt>
   18fa0:	str	r4, [sp, #8]
   18fa4:	str	r4, [sp, #4]
   18fa8:	str	r4, [sp]
   18fac:	mov	r3, r4
   18fb0:	mov	r2, r4
   18fb4:	ldr	r1, [pc, #464]	; 1918c <__flatcc_fb_gen_common_c_header@@Base+0xc48>
   18fb8:	ldr	r0, [r4, #204]	; 0xcc
   18fbc:	bl	13f84 <fprintf@plt>
   18fc0:	mov	r3, r5
   18fc4:	mov	r2, r5
   18fc8:	ldr	r1, [pc, #448]	; 19190 <__flatcc_fb_gen_common_c_header@@Base+0xc4c>
   18fcc:	ldr	r0, [r4, #204]	; 0xcc
   18fd0:	bl	13f84 <fprintf@plt>
   18fd4:	b	185d8 <__flatcc_fb_gen_common_c_header@@Base+0x94>
   18fd8:	ldr	r1, [r4, #204]	; 0xcc
   18fdc:	mov	r0, #10
   18fe0:	bl	13fe4 <fputc@plt>
   18fe4:	b	18664 <__flatcc_fb_gen_common_c_header@@Base+0x120>
   18fe8:	ldr	r1, [r4, #204]	; 0xcc
   18fec:	mov	r0, #10
   18ff0:	bl	13fe4 <fputc@plt>
   18ff4:	b	18740 <__flatcc_fb_gen_common_c_header@@Base+0x1fc>
   18ff8:	ldr	r3, [r4, #204]	; 0xcc
   18ffc:	mov	r2, #20
   19000:	mov	r1, #1
   19004:	ldr	r0, [pc, #392]	; 19194 <__flatcc_fb_gen_common_c_header@@Base+0xc50>
   19008:	bl	13f18 <fwrite@plt>
   1900c:	b	18bcc <__flatcc_fb_gen_common_c_header@@Base+0x688>
   19010:	ldr	r1, [r4, #204]	; 0xcc
   19014:	mov	r0, #10
   19018:	bl	13fe4 <fputc@plt>
   1901c:	b	18c0c <__flatcc_fb_gen_common_c_header@@Base+0x6c8>
   19020:	mov	r2, r4
   19024:	ldr	r1, [pc, #364]	; 19198 <__flatcc_fb_gen_common_c_header@@Base+0xc54>
   19028:	ldr	r0, [r4, #204]	; 0xcc
   1902c:	bl	13f84 <fprintf@plt>
   19030:	b	18dec <__flatcc_fb_gen_common_c_header@@Base+0x8a8>
   19034:	mov	r2, r4
   19038:	ldr	r1, [pc, #68]	; 19084 <__flatcc_fb_gen_common_c_header@@Base+0xb40>
   1903c:	ldr	r0, [r4, #204]	; 0xcc
   19040:	bl	13f84 <fprintf@plt>
   19044:	b	18e1c <__flatcc_fb_gen_common_c_header@@Base+0x8d8>
   19048:	ldr	r3, [r4, #204]	; 0xcc
   1904c:	mov	r2, #36	; 0x24
   19050:	mov	r1, #1
   19054:	ldr	r0, [pc, #320]	; 1919c <__flatcc_fb_gen_common_c_header@@Base+0xc58>
   19058:	bl	13f18 <fwrite@plt>
   1905c:	b	18f18 <__flatcc_fb_gen_common_c_header@@Base+0x9d4>
   19060:	strdeq	ip, [r3], -r8
   19064:	andeq	ip, r3, r0, lsr sp
   19068:	andeq	ip, r3, r4, lsl #27
   1906c:	andeq	ip, r3, ip, ror #28
   19070:	muleq	r3, r8, lr
   19074:	andeq	sp, r3, r8, lsl #7
   19078:	andeq	sp, r3, r8, lsl r4
   1907c:	andeq	sp, r3, ip, lsl #11
   19080:	andeq	sp, r3, r4, ror #11
   19084:	andeq	sp, r3, ip, lsl #14
   19088:	andeq	sp, r3, ip, lsr r7
   1908c:	andeq	sp, r3, r0, lsl r8
   19090:			; <UNDEFINED> instruction: 0x0003d9bc
   19094:	andeq	sp, r3, ip, asr sl
   19098:	andeq	sp, r3, r8, lsr fp
   1909c:	andeq	sp, r3, r4, lsl ip
   190a0:	andeq	sp, r3, ip, ror #25
   190a4:	ldrdeq	sp, [r3], -r4
   190a8:	andeq	sp, r3, r0, lsl #28
   190ac:	andeq	sp, r3, r0, lsr #29
   190b0:	andeq	sp, r3, r4, ror #29
   190b4:	andeq	sp, r3, r0, ror pc
   190b8:	andeq	sp, r3, r4, ror #31
   190bc:	andeq	lr, r3, r4, lsl #2
   190c0:	andeq	lr, r3, ip, ror r1
   190c4:	strdeq	lr, [r3], -ip
   190c8:	andeq	lr, r3, r0, ror #4
   190cc:	andeq	lr, r3, r4, lsl #7
   190d0:	andeq	lr, r3, r8, lsr #7
   190d4:	andeq	lr, r3, r0, lsr r4
   190d8:	andeq	lr, r3, r0, ror #11
   190dc:	andeq	lr, r3, r4, lsr #13
   190e0:	andeq	lr, r3, r0, asr #14
   190e4:			; <UNDEFINED> instruction: 0x0003e7b8
   190e8:	andeq	lr, r3, ip, lsl #21
   190ec:	andeq	lr, r3, r0, lsr #26
   190f0:	andeq	lr, r3, r4, lsr #27
   190f4:	andeq	lr, r3, r4, lsl lr
   190f8:	strdeq	lr, [r3], -r8
   190fc:	andeq	pc, r3, r4, lsr #1
   19100:	andeq	pc, r3, r0, lsl #5
   19104:	muleq	r3, ip, r4
   19108:	strdeq	pc, [r3], -r4
   1910c:	andeq	pc, r3, r4, asr #13
   19110:	andeq	pc, r3, ip, ror r7	; <UNPREDICTABLE>
   19114:	andeq	pc, r3, r4, lsr r9	; <UNPREDICTABLE>
   19118:	andeq	pc, r3, r0, ror #19
   1911c:	andeq	pc, r3, r0, lsl fp	; <UNPREDICTABLE>
   19120:	andeq	pc, r3, r0, ror #24
   19124:	andeq	pc, r3, r4, lsr sp	; <UNPREDICTABLE>
   19128:			; <UNDEFINED> instruction: 0x0003feb0
   1912c:	andeq	r0, r4, r4, lsr r0
   19130:	andeq	r0, r4, ip, lsl #7
   19134:	andeq	r0, r4, ip, lsr #13
   19138:	andeq	r0, r4, r8, ror sp
   1913c:	andeq	r0, r4, r8, asr #31
   19140:	andeq	r1, r4, r4, lsr #9
   19144:	andeq	r1, r4, r8, lsl #11
   19148:	andeq	r1, r4, r8, lsr #11
   1914c:	andeq	r1, r4, r8, lsr #12
   19150:	andeq	r1, r4, ip, lsr r8
   19154:	andeq	r1, r4, r8, lsl #19
   19158:	andeq	r2, r4, r0, rrx
   1915c:	strdeq	r2, [r4], -ip
   19160:	andeq	r2, r4, ip, ror r1
   19164:	andeq	r2, r4, r8, asr #9
   19168:	andeq	r2, r4, r0, lsl #11
   1916c:	andeq	r2, r4, r8, asr #14
   19170:	andeq	r2, r4, r4, asr #19
   19174:	ldrdeq	r2, [r4], -r0
   19178:			; <UNDEFINED> instruction: 0x0003cdbc
   1917c:	andeq	ip, r3, r4, asr #28
   19180:	andeq	ip, r3, r8, lsr #29
   19184:	muleq	r3, r4, lr
   19188:	andeq	ip, r3, r8, ror pc
   1918c:	ldrdeq	sp, [r3], -r0
   19190:	andeq	sp, r3, r8, lsr r3
   19194:	andeq	r1, r4, ip, lsl #9
   19198:	andeq	r2, r4, r4, asr #32
   1919c:	andeq	r2, r4, r8, lsr #25

000191a0 <__flatcc_fb_gen_c_reader@@Base>:
   191a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   191a4:	sub	sp, sp, #252	; 0xfc
   191a8:	mov	r4, r0
   191ac:	mov	r8, r0
   191b0:	add	r6, r0, #102	; 0x66
   191b4:	ldr	r3, [r0, #212]	; 0xd4
   191b8:	ldr	r5, [r3, #132]	; 0x84
   191bc:	ldr	r3, [r0, #208]	; 0xd0
   191c0:	ldr	r2, [r3, #164]	; 0xa4
   191c4:	mov	r3, r2
   191c8:	ldr	r1, [pc, #1128]	; 19638 <__flatcc_fb_gen_c_reader@@Base+0x498>
   191cc:	ldr	r0, [r0, #204]	; 0xcc
   191d0:	bl	13f84 <fprintf@plt>
   191d4:	ldr	r3, [r4, #204]	; 0xcc
   191d8:	mov	r2, #81	; 0x51
   191dc:	mov	r1, #1
   191e0:	ldr	r0, [pc, #1108]	; 1963c <__flatcc_fb_gen_c_reader@@Base+0x49c>
   191e4:	bl	13f18 <fwrite@plt>
   191e8:	cmp	r5, #0
   191ec:	bne	1938c <__flatcc_fb_gen_c_reader@@Base+0x1ec>
   191f0:	mov	r3, r4
   191f4:	mov	r2, r6
   191f8:	ldr	r1, [pc, #1088]	; 19640 <__flatcc_fb_gen_c_reader@@Base+0x4a0>
   191fc:	ldr	r0, [r4, #204]	; 0xcc
   19200:	bl	13f84 <fprintf@plt>
   19204:	ldr	r2, [pc, #1080]	; 19644 <__flatcc_fb_gen_c_reader@@Base+0x4a4>
   19208:	ldr	r1, [pc, #1080]	; 19648 <__flatcc_fb_gen_c_reader@@Base+0x4a8>
   1920c:	mov	r0, r4
   19210:	bl	15058 <__flatcc_fb_gen_c_includes@@Base>
   19214:	ldr	r3, [r4, #204]	; 0xcc
   19218:	mov	r2, #39	; 0x27
   1921c:	mov	r1, #1
   19220:	ldr	r0, [pc, #1060]	; 1964c <__flatcc_fb_gen_c_reader@@Base+0x4ac>
   19224:	bl	13f18 <fwrite@plt>
   19228:	ldr	r3, [r4, #204]	; 0xcc
   1922c:	mov	r2, #58	; 0x3a
   19230:	mov	r1, #1
   19234:	ldr	r0, [pc, #1044]	; 19650 <__flatcc_fb_gen_c_reader@@Base+0x4b0>
   19238:	bl	13f18 <fwrite@plt>
   1923c:	ldr	r3, [r4, #212]	; 0xd4
   19240:	ldr	r3, [r3, #140]	; 0x8c
   19244:	cmp	r3, #0
   19248:	bne	193dc <__flatcc_fb_gen_c_reader@@Base+0x23c>
   1924c:	ldr	r3, [r4, #208]	; 0xd0
   19250:	ldrh	r2, [r3, #16]
   19254:	cmp	r2, #2
   19258:	beq	193f4 <__flatcc_fb_gen_c_reader@@Base+0x254>
   1925c:	mov	r3, r4
   19260:	mov	r2, r4
   19264:	ldr	r1, [pc, #1000]	; 19654 <__flatcc_fb_gen_c_reader@@Base+0x4b4>
   19268:	ldr	r0, [r4, #204]	; 0xcc
   1926c:	bl	13f84 <fprintf@plt>
   19270:	ldr	r3, [r4, #208]	; 0xd0
   19274:	ldrh	r2, [r3, #32]
   19278:	cmp	r2, #2
   1927c:	beq	1941c <__flatcc_fb_gen_c_reader@@Base+0x27c>
   19280:	ldr	r3, [r4, #212]	; 0xd4
   19284:	ldr	r3, [r3, #104]	; 0x68
   19288:	str	r3, [sp]
   1928c:	mov	r3, r4
   19290:	mov	r2, r4
   19294:	ldr	r1, [pc, #956]	; 19658 <__flatcc_fb_gen_c_reader@@Base+0x4b8>
   19298:	ldr	r0, [r4, #204]	; 0xcc
   1929c:	bl	13f84 <fprintf@plt>
   192a0:	ldr	r1, [r4, #204]	; 0xcc
   192a4:	mov	r0, #10
   192a8:	bl	13fe4 <fputc@plt>
   192ac:	ldr	r3, [r4, #208]	; 0xd0
   192b0:	ldr	r5, [r3, #44]	; 0x2c
   192b4:	cmp	r5, #0
   192b8:	beq	192d4 <__flatcc_fb_gen_c_reader@@Base+0x134>
   192bc:	mov	r1, r5
   192c0:	mov	r0, r4
   192c4:	bl	15604 <__flatcc_fb_codegen_c@@Base+0x1f4>
   192c8:	ldr	r5, [r5, #120]	; 0x78
   192cc:	cmp	r5, #0
   192d0:	bne	192bc <__flatcc_fb_gen_c_reader@@Base+0x11c>
   192d4:	ldr	r1, [r4, #204]	; 0xcc
   192d8:	mov	r0, #10
   192dc:	bl	13fe4 <fputc@plt>
   192e0:	ldr	r3, [r4, #208]	; 0xd0
   192e4:	ldr	r5, [r3, #40]	; 0x28
   192e8:	cmp	r5, #0
   192ec:	bne	19450 <__flatcc_fb_gen_c_reader@@Base+0x2b0>
   192f0:	ldr	r1, [r4, #204]	; 0xcc
   192f4:	mov	r0, #10
   192f8:	bl	13fe4 <fputc@plt>
   192fc:	ldr	r3, [r4, #208]	; 0xd0
   19300:	ldr	r5, [r3, #40]	; 0x28
   19304:	cmp	r5, #0
   19308:	bne	1957c <__flatcc_fb_gen_c_reader@@Base+0x3dc>
   1930c:	ldr	r1, [r4, #204]	; 0xcc
   19310:	mov	r0, #10
   19314:	bl	13fe4 <fputc@plt>
   19318:	ldr	r3, [r4, #208]	; 0xd0
   1931c:	ldr	r5, [r3, #44]	; 0x2c
   19320:	cmp	r5, #0
   19324:	beq	19340 <__flatcc_fb_gen_c_reader@@Base+0x1a0>
   19328:	mov	r1, r5
   1932c:	mov	r0, r4
   19330:	bl	161c0 <__flatcc_fb_codegen_c@@Base+0xdb0>
   19334:	ldr	r5, [r5, #120]	; 0x78
   19338:	cmp	r5, #0
   1933c:	bne	19328 <__flatcc_fb_gen_c_reader@@Base+0x188>
   19340:	ldr	r3, [r4, #208]	; 0xd0
   19344:	ldr	r5, [r3, #40]	; 0x28
   19348:	cmp	r5, #0
   1934c:	bne	195b0 <__flatcc_fb_gen_c_reader@@Base+0x410>
   19350:	ldr	r1, [r4, #204]	; 0xcc
   19354:	mov	r0, #10
   19358:	bl	13fe4 <fputc@plt>
   1935c:	ldr	r3, [r4, #212]	; 0xd4
   19360:	ldr	r3, [r3, #140]	; 0x8c
   19364:	cmp	r3, #0
   19368:	bne	19620 <__flatcc_fb_gen_c_reader@@Base+0x480>
   1936c:	ldr	r3, [r4, #208]	; 0xd0
   19370:	ldr	r2, [r3, #164]	; 0xa4
   19374:	ldr	r1, [pc, #736]	; 1965c <__flatcc_fb_gen_c_reader@@Base+0x4bc>
   19378:	ldr	r0, [r4, #204]	; 0xcc
   1937c:	bl	13f84 <fprintf@plt>
   19380:	mov	r0, #0
   19384:	add	sp, sp, #252	; 0xfc
   19388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1938c:	ldr	r3, [r4, #204]	; 0xcc
   19390:	ldr	r2, [pc, #712]	; 19660 <__flatcc_fb_gen_c_reader@@Base+0x4c0>
   19394:	mov	r1, #1
   19398:	ldr	r0, [pc, #708]	; 19664 <__flatcc_fb_gen_c_reader@@Base+0x4c4>
   1939c:	bl	13f18 <fwrite@plt>
   193a0:	mov	r3, r4
   193a4:	mov	r2, r6
   193a8:	ldr	r1, [pc, #656]	; 19640 <__flatcc_fb_gen_c_reader@@Base+0x4a0>
   193ac:	ldr	r0, [r4, #204]	; 0xcc
   193b0:	bl	13f84 <fprintf@plt>
   193b4:	ldr	r2, [pc, #648]	; 19644 <__flatcc_fb_gen_c_reader@@Base+0x4a4>
   193b8:	ldr	r1, [pc, #648]	; 19648 <__flatcc_fb_gen_c_reader@@Base+0x4a8>
   193bc:	mov	r0, r4
   193c0:	bl	15058 <__flatcc_fb_gen_c_includes@@Base>
   193c4:	ldr	r3, [r4, #204]	; 0xcc
   193c8:	mov	r2, #39	; 0x27
   193cc:	mov	r1, #1
   193d0:	ldr	r0, [pc, #628]	; 1964c <__flatcc_fb_gen_c_reader@@Base+0x4ac>
   193d4:	bl	13f18 <fwrite@plt>
   193d8:	b	1923c <__flatcc_fb_gen_c_reader@@Base+0x9c>
   193dc:	ldr	r3, [r4, #204]	; 0xcc
   193e0:	mov	r2, #36	; 0x24
   193e4:	mov	r1, #1
   193e8:	ldr	r0, [pc, #632]	; 19668 <__flatcc_fb_gen_c_reader@@Base+0x4c8>
   193ec:	bl	13f18 <fwrite@plt>
   193f0:	b	1924c <__flatcc_fb_gen_c_reader@@Base+0xac>
   193f4:	ldr	r2, [r3, #8]
   193f8:	str	r2, [sp, #4]
   193fc:	ldr	r3, [r3, #12]
   19400:	str	r3, [sp]
   19404:	mov	r3, r4
   19408:	mov	r2, r4
   1940c:	ldr	r1, [pc, #600]	; 1966c <__flatcc_fb_gen_c_reader@@Base+0x4cc>
   19410:	ldr	r0, [r4, #204]	; 0xcc
   19414:	bl	13f84 <fprintf@plt>
   19418:	b	19270 <__flatcc_fb_gen_c_reader@@Base+0xd0>
   1941c:	ldr	r2, [r3, #24]
   19420:	str	r2, [sp, #4]
   19424:	ldr	r3, [r3, #28]
   19428:	str	r3, [sp]
   1942c:	mov	r3, r4
   19430:	mov	r2, r4
   19434:	ldr	r1, [pc, #564]	; 19670 <__flatcc_fb_gen_c_reader@@Base+0x4d0>
   19438:	ldr	r0, [r4, #204]	; 0xcc
   1943c:	bl	13f84 <fprintf@plt>
   19440:	b	192a0 <__flatcc_fb_gen_c_reader@@Base+0x100>
   19444:	ldr	r5, [r5]
   19448:	cmp	r5, #0
   1944c:	beq	1946c <__flatcc_fb_gen_c_reader@@Base+0x2cc>
   19450:	ldrh	r3, [r5, #8]
   19454:	cmp	r3, #0
   19458:	bne	19444 <__flatcc_fb_gen_c_reader@@Base+0x2a4>
   1945c:	mov	r1, r5
   19460:	mov	r0, r4
   19464:	bl	15604 <__flatcc_fb_codegen_c@@Base+0x1f4>
   19468:	b	19444 <__flatcc_fb_gen_c_reader@@Base+0x2a4>
   1946c:	ldr	r3, [r4, #208]	; 0xd0
   19470:	ldr	r6, [r3, #40]	; 0x28
   19474:	cmp	r6, #0
   19478:	beq	192f0 <__flatcc_fb_gen_c_reader@@Base+0x150>
   1947c:	add	r7, sp, #28
   19480:	mov	fp, #220	; 0xdc
   19484:	mov	r9, #0
   19488:	ldr	sl, [pc, #484]	; 19674 <__flatcc_fb_gen_c_reader@@Base+0x4d4>
   1948c:	b	194b4 <__flatcc_fb_gen_c_reader@@Base+0x314>
   19490:	strb	r9, [sp, #24]
   19494:	add	r3, sp, #8
   19498:	mov	r2, r7
   1949c:	ldr	r1, [pc, #468]	; 19678 <__flatcc_fb_gen_c_reader@@Base+0x4d8>
   194a0:	ldr	r0, [r4, #204]	; 0xcc
   194a4:	bl	13f84 <fprintf@plt>
   194a8:	ldr	r6, [r6]
   194ac:	cmp	r6, #0
   194b0:	beq	192f0 <__flatcc_fb_gen_c_reader@@Base+0x150>
   194b4:	ldrh	r3, [r6, #8]
   194b8:	cmp	r3, #1
   194bc:	bhi	194a8 <__flatcc_fb_gen_c_reader@@Base+0x308>
   194c0:	mov	r2, fp
   194c4:	mov	r1, r9
   194c8:	mov	r0, r7
   194cc:	bl	13f9c <memset@plt>
   194d0:	mov	r2, r7
   194d4:	mov	r1, r6
   194d8:	ldr	r0, [r6, #12]
   194dc:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   194e0:	ldr	r5, [r6, #88]	; 0x58
   194e4:	str	r8, [sp]
   194e8:	mov	r3, r7
   194ec:	mov	r2, r7
   194f0:	mov	r1, sl
   194f4:	ldr	r0, [r4, #204]	; 0xcc
   194f8:	bl	13f84 <fprintf@plt>
   194fc:	str	r5, [sp]
   19500:	mov	r3, r8
   19504:	mov	r2, r7
   19508:	ldr	r1, [pc, #364]	; 1967c <__flatcc_fb_gen_c_reader@@Base+0x4dc>
   1950c:	ldr	r0, [r4, #204]	; 0xcc
   19510:	bl	13f84 <fprintf@plt>
   19514:	add	r1, sp, #12
   19518:	mov	ip, #92	; 0x5c
   1951c:	mov	r0, #120	; 0x78
   19520:	strb	ip, [r1, #-4]
   19524:	strb	r0, [r1, #-3]
   19528:	and	r3, r5, #15
   1952c:	cmp	r3, #9
   19530:	movhi	r2, #87	; 0x57
   19534:	movls	r2, #48	; 0x30
   19538:	add	r3, r3, r2
   1953c:	strb	r3, [r1, #-1]
   19540:	lsr	r3, r5, #4
   19544:	and	r3, r3, #15
   19548:	cmp	r3, #9
   1954c:	movhi	r2, #87	; 0x57
   19550:	movls	r2, #48	; 0x30
   19554:	lsr	r5, r5, #8
   19558:	add	r3, r3, r2
   1955c:	strb	r3, [r1, #-2]
   19560:	add	r1, r1, #4
   19564:	cmp	r7, r1
   19568:	bne	19520 <__flatcc_fb_gen_c_reader@@Base+0x380>
   1956c:	b	19490 <__flatcc_fb_gen_c_reader@@Base+0x2f0>
   19570:	ldr	r5, [r5]
   19574:	cmp	r5, #0
   19578:	beq	1930c <__flatcc_fb_gen_c_reader@@Base+0x16c>
   1957c:	ldrh	r3, [r5, #8]
   19580:	cmp	r3, #3
   19584:	bne	19570 <__flatcc_fb_gen_c_reader@@Base+0x3d0>
   19588:	mov	r1, r5
   1958c:	mov	r0, r4
   19590:	bl	15760 <__flatcc_fb_codegen_c@@Base+0x350>
   19594:	b	19570 <__flatcc_fb_gen_c_reader@@Base+0x3d0>
   19598:	mov	r1, r5
   1959c:	mov	r0, r4
   195a0:	bl	15760 <__flatcc_fb_codegen_c@@Base+0x350>
   195a4:	ldr	r5, [r5]
   195a8:	cmp	r5, #0
   195ac:	beq	19350 <__flatcc_fb_gen_c_reader@@Base+0x1b0>
   195b0:	ldrh	r3, [r5, #8]
   195b4:	cmp	r3, #4
   195b8:	ldrls	pc, [pc, r3, lsl #2]
   195bc:	b	195e4 <__flatcc_fb_gen_c_reader@@Base+0x444>
   195c0:	ldrdeq	r9, [r1], -r4
   195c4:	andeq	r9, r1, r4, lsr #11
   195c8:	andeq	r9, r1, r4, lsr #11
   195cc:	andeq	r9, r1, r4, lsr #11
   195d0:	muleq	r1, r8, r5
   195d4:	mov	r1, r5
   195d8:	mov	r0, r4
   195dc:	bl	16e80 <__flatcc_fb_codegen_c@@Base+0x1a70>
   195e0:	b	195a4 <__flatcc_fb_gen_c_reader@@Base+0x404>
   195e4:	ldr	r5, [pc, #148]	; 19680 <__flatcc_fb_gen_c_reader@@Base+0x4e0>
   195e8:	ldr	r4, [pc, #148]	; 19684 <__flatcc_fb_gen_c_reader@@Base+0x4e4>
   195ec:	ldr	r3, [pc, #148]	; 19688 <__flatcc_fb_gen_c_reader@@Base+0x4e8>
   195f0:	ldr	r0, [r3]
   195f4:	ldr	r3, [pc, #144]	; 1968c <__flatcc_fb_gen_c_reader@@Base+0x4ec>
   195f8:	str	r3, [sp]
   195fc:	mov	r3, r5
   19600:	mov	r2, r4
   19604:	ldr	r1, [pc, #132]	; 19690 <__flatcc_fb_gen_c_reader@@Base+0x4f0>
   19608:	bl	13f84 <fprintf@plt>
   1960c:	ldr	r3, [pc, #128]	; 19694 <__flatcc_fb_gen_c_reader@@Base+0x4f4>
   19610:	mov	r2, r5
   19614:	mov	r1, r4
   19618:	ldr	r0, [pc, #120]	; 19698 <__flatcc_fb_gen_c_reader@@Base+0x4f8>
   1961c:	bl	14038 <__assert_fail@plt>
   19620:	ldr	r3, [r4, #204]	; 0xcc
   19624:	mov	r2, #36	; 0x24
   19628:	mov	r1, #1
   1962c:	ldr	r0, [pc, #104]	; 1969c <__flatcc_fb_gen_c_reader@@Base+0x4fc>
   19630:	bl	13f18 <fwrite@plt>
   19634:	b	1936c <__flatcc_fb_gen_c_reader@@Base+0x1cc>
   19638:	andeq	r2, r4, ip, ror #25
   1963c:	andeq	ip, r3, r0, lsr sp
   19640:	ldrdeq	r2, [r4], -r4
   19644:	andeq	r2, r4, r4, lsl pc
   19648:	andeq	r1, r5, r8, ror #27
   1964c:	andeq	r2, r4, r0, lsr #30
   19650:	strdeq	r3, [r4], -r4
   19654:	andeq	r2, r4, ip, ror pc
   19658:	andeq	r2, r4, r0, ror #31
   1965c:	ldrdeq	r3, [r4], -r8
   19660:			; <UNDEFINED> instruction: 0x000001bb
   19664:	andeq	r2, r4, r8, lsl sp
   19668:	andeq	ip, r3, r4, asr #28
   1966c:	andeq	r2, r4, r8, asr #30
   19670:			; <UNDEFINED> instruction: 0x00042fb0
   19674:	andeq	r3, r4, r8, lsl r0
   19678:	andeq	r3, r4, r8, lsl #1
   1967c:	andeq	r3, r4, ip, asr r0
   19680:	andeq	r0, r0, r8, lsl #13
   19684:	andeq	fp, r3, r8, ror #13
   19688:	andeq	r6, r6, r8, lsr #1
   1968c:	andeq	r3, r4, ip, lsr #1
   19690:	andeq	fp, r3, r8, lsr sl
   19694:	andeq	fp, r3, ip, asr #13
   19698:	andeq	r3, r4, r0, ror lr
   1969c:	andeq	r2, r4, r8, lsr #25

000196a0 <__flatcc_gen_sort@@Base>:
   196a0:	push	{r4, lr}
   196a4:	sub	sp, sp, #24
   196a8:	mov	r4, r0
   196ac:	mov	r2, r0
   196b0:	ldr	r1, [pc, #240]	; 197a8 <__flatcc_gen_sort@@Base+0x108>
   196b4:	ldr	r0, [r0, #204]	; 0xcc
   196b8:	bl	13f84 <fprintf@plt>
   196bc:	mov	r3, r4
   196c0:	mov	r2, r4
   196c4:	ldr	r1, [pc, #224]	; 197ac <__flatcc_gen_sort@@Base+0x10c>
   196c8:	ldr	r0, [r4, #204]	; 0xcc
   196cc:	bl	13f84 <fprintf@plt>
   196d0:	str	r4, [sp]
   196d4:	mov	r3, r4
   196d8:	mov	r2, r4
   196dc:	ldr	r1, [pc, #204]	; 197b0 <__flatcc_gen_sort@@Base+0x110>
   196e0:	ldr	r0, [r4, #204]	; 0xcc
   196e4:	bl	13f84 <fprintf@plt>
   196e8:	str	r4, [sp, #4]
   196ec:	str	r4, [sp]
   196f0:	mov	r3, r4
   196f4:	mov	r2, r4
   196f8:	ldr	r1, [pc, #180]	; 197b4 <__flatcc_gen_sort@@Base+0x114>
   196fc:	ldr	r0, [r4, #204]	; 0xcc
   19700:	bl	13f84 <fprintf@plt>
   19704:	mov	r3, r4
   19708:	mov	r2, r4
   1970c:	ldr	r1, [pc, #164]	; 197b8 <__flatcc_gen_sort@@Base+0x118>
   19710:	ldr	r0, [r4, #204]	; 0xcc
   19714:	bl	13f84 <fprintf@plt>
   19718:	str	r4, [sp, #4]
   1971c:	str	r4, [sp]
   19720:	mov	r3, r4
   19724:	mov	r2, r4
   19728:	ldr	r1, [pc, #140]	; 197bc <__flatcc_gen_sort@@Base+0x11c>
   1972c:	ldr	r0, [r4, #204]	; 0xcc
   19730:	bl	13f84 <fprintf@plt>
   19734:	str	r4, [sp, #12]
   19738:	str	r4, [sp, #8]
   1973c:	str	r4, [sp, #4]
   19740:	str	r4, [sp]
   19744:	mov	r3, r4
   19748:	mov	r2, r4
   1974c:	ldr	r1, [pc, #108]	; 197c0 <__flatcc_gen_sort@@Base+0x120>
   19750:	ldr	r0, [r4, #204]	; 0xcc
   19754:	bl	13f84 <fprintf@plt>
   19758:	str	r4, [sp, #4]
   1975c:	str	r4, [sp]
   19760:	mov	r3, r4
   19764:	mov	r2, r4
   19768:	ldr	r1, [pc, #84]	; 197c4 <__flatcc_gen_sort@@Base+0x124>
   1976c:	ldr	r0, [r4, #204]	; 0xcc
   19770:	bl	13f84 <fprintf@plt>
   19774:	ldr	r0, [r4, #204]	; 0xcc
   19778:	str	r4, [sp, #16]
   1977c:	str	r4, [sp, #12]
   19780:	str	r4, [sp, #8]
   19784:	str	r4, [sp, #4]
   19788:	str	r4, [sp]
   1978c:	mov	r3, r4
   19790:	mov	r2, r4
   19794:	ldr	r1, [pc, #44]	; 197c8 <__flatcc_gen_sort@@Base+0x128>
   19798:	bl	13f84 <fprintf@plt>
   1979c:	mov	r0, #0
   197a0:	add	sp, sp, #24
   197a4:	pop	{r4, pc}
   197a8:	andeq	r3, r4, r0, lsr r1
   197ac:	andeq	r3, r4, r0, lsl #10
   197b0:	andeq	r3, r4, r0, lsl r6
   197b4:	andeq	r3, r4, r4, ror #13
   197b8:	andeq	r3, r4, r8, ror r7
   197bc:	andeq	r3, r4, r0, lsl r9
   197c0:	muleq	r4, r8, r9
   197c4:	andeq	r3, r4, r8, lsr #20
   197c8:	andeq	r3, r4, ip, lsl #21
   197cc:	push	{r4, r5, r6, lr}
   197d0:	ldr	r4, [r0, #20]
   197d4:	cmp	r4, #0
   197d8:	beq	19828 <__flatcc_gen_sort@@Base+0x188>
   197dc:	mov	r5, #0
   197e0:	b	197f4 <__flatcc_gen_sort@@Base+0x154>
   197e4:	add	r5, r5, #1
   197e8:	ldr	r4, [r4]
   197ec:	cmp	r4, #0
   197f0:	beq	1982c <__flatcc_gen_sort@@Base+0x18c>
   197f4:	ldrh	r3, [r4, #72]	; 0x48
   197f8:	tst	r3, #4
   197fc:	bne	197e8 <__flatcc_gen_sort@@Base+0x148>
   19800:	ldrh	r3, [r4, #24]
   19804:	cmp	r3, #14
   19808:	bne	197e4 <__flatcc_gen_sort@@Base+0x144>
   1980c:	ldr	r0, [r4, #16]
   19810:	ldrh	r3, [r0, #8]
   19814:	cmp	r3, #1
   19818:	bne	197e4 <__flatcc_gen_sort@@Base+0x144>
   1981c:	bl	197cc <__flatcc_gen_sort@@Base+0x12c>
   19820:	add	r5, r5, r0
   19824:	b	197e8 <__flatcc_gen_sort@@Base+0x148>
   19828:	mov	r5, #0
   1982c:	mov	r0, r5
   19830:	pop	{r4, r5, r6, pc}
   19834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19838:	sub	sp, sp, #484	; 0x1e4
   1983c:	mov	r8, r0
   19840:	mov	r9, r1
   19844:	mov	sl, r2
   19848:	mov	fp, r3
   1984c:	ldr	r4, [sp, #520]	; 0x208
   19850:	mov	r7, r0
   19854:	ldr	r3, [pc, #488]	; 19a44 <__flatcc_gen_sort@@Base+0x3a4>
   19858:	ldr	r2, [pc, #488]	; 19a48 <__flatcc_gen_sort@@Base+0x3a8>
   1985c:	ldr	r1, [sp, #524]	; 0x20c
   19860:	cmp	r1, #0
   19864:	moveq	r2, r3
   19868:	str	r2, [sp, #36]	; 0x24
   1986c:	mov	r5, #220	; 0xdc
   19870:	mov	r2, r5
   19874:	mov	r1, #0
   19878:	add	r0, sp, #260	; 0x104
   1987c:	bl	13f9c <memset@plt>
   19880:	mov	r2, r5
   19884:	mov	r1, #0
   19888:	add	r0, sp, #40	; 0x28
   1988c:	bl	13f9c <memset@plt>
   19890:	add	r2, sp, #260	; 0x104
   19894:	mov	r1, r4
   19898:	ldr	r0, [r4, #12]
   1989c:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   198a0:	ldr	r4, [r4, #20]
   198a4:	cmp	r4, #0
   198a8:	bne	199e0 <__flatcc_gen_sort@@Base+0x340>
   198ac:	mov	r0, #0
   198b0:	add	sp, sp, #484	; 0x1e4
   198b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198b8:	ldr	r3, [r4, #16]
   198bc:	add	r2, sp, #40	; 0x28
   198c0:	mov	r1, r3
   198c4:	ldr	r0, [r3, #12]
   198c8:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   198cc:	ldr	r3, [r4, #16]
   198d0:	ldrh	r3, [r3, #8]
   198d4:	cmp	r3, #0
   198d8:	beq	19920 <__flatcc_gen_sort@@Base+0x280>
   198dc:	cmp	r3, #1
   198e0:	beq	19960 <__flatcc_gen_sort@@Base+0x2c0>
   198e4:	ldr	r5, [pc, #352]	; 19a4c <__flatcc_gen_sort@@Base+0x3ac>
   198e8:	ldr	r4, [pc, #352]	; 19a50 <__flatcc_gen_sort@@Base+0x3b0>
   198ec:	ldr	r3, [pc, #352]	; 19a54 <__flatcc_gen_sort@@Base+0x3b4>
   198f0:	ldr	r0, [r3]
   198f4:	ldr	r3, [pc, #348]	; 19a58 <__flatcc_gen_sort@@Base+0x3b8>
   198f8:	str	r3, [sp]
   198fc:	mov	r3, r5
   19900:	mov	r2, r4
   19904:	ldr	r1, [pc, #336]	; 19a5c <__flatcc_gen_sort@@Base+0x3bc>
   19908:	bl	13f84 <fprintf@plt>
   1990c:	ldr	r3, [pc, #332]	; 19a60 <__flatcc_gen_sort@@Base+0x3c0>
   19910:	mov	r2, r5
   19914:	mov	r1, r4
   19918:	ldr	r0, [pc, #324]	; 19a64 <__flatcc_gen_sort@@Base+0x3c4>
   1991c:	bl	14038 <__assert_fail@plt>
   19920:	add	r3, sp, #40	; 0x28
   19924:	str	r3, [sp, #28]
   19928:	str	r6, [sp, #24]
   1992c:	str	r5, [sp, #20]
   19930:	add	r3, sp, #260	; 0x104
   19934:	str	r3, [sp, #16]
   19938:	str	fp, [sp, #12]
   1993c:	str	sl, [sp, #8]
   19940:	str	r9, [sp, #4]
   19944:	str	r7, [sp]
   19948:	ldr	r3, [sp, #36]	; 0x24
   1994c:	mov	r2, r7
   19950:	ldr	r1, [pc, #272]	; 19a68 <__flatcc_gen_sort@@Base+0x3c8>
   19954:	ldr	r0, [r8, #204]	; 0xcc
   19958:	bl	13f84 <fprintf@plt>
   1995c:	b	199d4 <__flatcc_gen_sort@@Base+0x334>
   19960:	add	r3, sp, #40	; 0x28
   19964:	str	r3, [sp, #28]
   19968:	str	r6, [sp, #24]
   1996c:	str	r5, [sp, #20]
   19970:	add	r3, sp, #260	; 0x104
   19974:	str	r3, [sp, #16]
   19978:	str	fp, [sp, #12]
   1997c:	str	sl, [sp, #8]
   19980:	str	r9, [sp, #4]
   19984:	str	r7, [sp]
   19988:	ldr	r3, [sp, #36]	; 0x24
   1998c:	mov	r2, r7
   19990:	ldr	r1, [pc, #212]	; 19a6c <__flatcc_gen_sort@@Base+0x3cc>
   19994:	ldr	r0, [r8, #204]	; 0xcc
   19998:	bl	13f84 <fprintf@plt>
   1999c:	b	199d4 <__flatcc_gen_sort@@Base+0x334>
   199a0:	str	r6, [sp, #24]
   199a4:	str	r5, [sp, #20]
   199a8:	add	r3, sp, #260	; 0x104
   199ac:	str	r3, [sp, #16]
   199b0:	str	fp, [sp, #12]
   199b4:	str	sl, [sp, #8]
   199b8:	str	r9, [sp, #4]
   199bc:	str	r7, [sp]
   199c0:	ldr	r3, [sp, #36]	; 0x24
   199c4:	mov	r2, r7
   199c8:	ldr	r1, [pc, #160]	; 19a70 <__flatcc_gen_sort@@Base+0x3d0>
   199cc:	ldr	r0, [r8, #204]	; 0xcc
   199d0:	bl	13f84 <fprintf@plt>
   199d4:	ldr	r4, [r4]
   199d8:	cmp	r4, #0
   199dc:	beq	198ac <__flatcc_gen_sort@@Base+0x20c>
   199e0:	ldr	r3, [r4, #4]
   199e4:	ldr	r5, [r3, #4]
   199e8:	ldr	r6, [r3]
   199ec:	ldrh	r3, [r4, #24]
   199f0:	cmp	r3, #10
   199f4:	beq	199a0 <__flatcc_gen_sort@@Base+0x300>
   199f8:	cmp	r3, #14
   199fc:	beq	198b8 <__flatcc_gen_sort@@Base+0x218>
   19a00:	cmp	r3, #0
   19a04:	beq	199d4 <__flatcc_gen_sort@@Base+0x334>
   19a08:	ldr	r5, [pc, #100]	; 19a74 <__flatcc_gen_sort@@Base+0x3d4>
   19a0c:	ldr	r4, [pc, #60]	; 19a50 <__flatcc_gen_sort@@Base+0x3b0>
   19a10:	ldr	r3, [pc, #60]	; 19a54 <__flatcc_gen_sort@@Base+0x3b4>
   19a14:	ldr	r0, [r3]
   19a18:	ldr	r3, [pc, #88]	; 19a78 <__flatcc_gen_sort@@Base+0x3d8>
   19a1c:	str	r3, [sp]
   19a20:	mov	r3, r5
   19a24:	mov	r2, r4
   19a28:	ldr	r1, [pc, #44]	; 19a5c <__flatcc_gen_sort@@Base+0x3bc>
   19a2c:	bl	13f84 <fprintf@plt>
   19a30:	ldr	r3, [pc, #40]	; 19a60 <__flatcc_gen_sort@@Base+0x3c0>
   19a34:	mov	r2, r5
   19a38:	mov	r1, r4
   19a3c:	ldr	r0, [pc, #32]	; 19a64 <__flatcc_gen_sort@@Base+0x3c4>
   19a40:	bl	14038 <__assert_fail@plt>
   19a44:	strdeq	r3, [r4], -r8
   19a48:	andeq	r3, r4, r8, ror #23
   19a4c:	andeq	r0, r0, lr, asr #10
   19a50:	andeq	r3, r4, r8, ror ip
   19a54:	andeq	r6, r6, r8, lsr #1
   19a58:	andeq	r3, r4, ip, asr #25
   19a5c:	andeq	fp, r3, r8, lsr sl
   19a60:	andeq	r3, r4, r4, lsl #22
   19a64:	andeq	r3, r4, r0, ror lr
   19a68:	andeq	r3, r4, r0, lsl #24
   19a6c:	andeq	r3, r4, ip, lsr ip
   19a70:	andeq	r3, r4, r4, lsl #26
   19a74:	andeq	r0, r0, r8, asr r5
   19a78:	andeq	r3, r4, ip, lsr sp
   19a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a80:	sub	sp, sp, #12
   19a84:	mov	r7, r0
   19a88:	mov	r5, r2
   19a8c:	mov	r8, r3
   19a90:	mov	r0, r1
   19a94:	bl	197cc <__flatcc_gen_sort@@Base+0x12c>
   19a98:	subs	r9, r0, #0
   19a9c:	ble	19b74 <__flatcc_gen_sort@@Base+0x4d4>
   19aa0:	ldr	r3, [pc, #212]	; 19b7c <__flatcc_gen_sort@@Base+0x4dc>
   19aa4:	ldr	r2, [pc, #212]	; 19b80 <__flatcc_gen_sort@@Base+0x4e0>
   19aa8:	ldr	r1, [sp, #48]	; 0x30
   19aac:	cmp	r1, #0
   19ab0:	moveq	r2, r3
   19ab4:	str	r2, [sp, #4]
   19ab8:	mov	r4, #0
   19abc:	ldr	fp, [pc, #192]	; 19b84 <__flatcc_gen_sort@@Base+0x4e4>
   19ac0:	b	19b20 <__flatcc_gen_sort@@Base+0x480>
   19ac4:	ldr	r3, [r7, #204]	; 0xcc
   19ac8:	mov	r2, #2
   19acc:	mov	r1, #1
   19ad0:	ldr	r0, [pc, #176]	; 19b88 <__flatcc_gen_sort@@Base+0x4e8>
   19ad4:	bl	13f18 <fwrite@plt>
   19ad8:	b	19b04 <__flatcc_gen_sort@@Base+0x464>
   19adc:	tst	r4, #3
   19ae0:	bne	19af0 <__flatcc_gen_sort@@Base+0x450>
   19ae4:	sub	r3, r8, r4
   19ae8:	cmp	r3, #2
   19aec:	bgt	19b54 <__flatcc_gen_sort@@Base+0x4b4>
   19af0:	ldr	r3, [r7, #204]	; 0xcc
   19af4:	mov	r2, #2
   19af8:	mov	r1, #1
   19afc:	ldr	r0, [pc, #132]	; 19b88 <__flatcc_gen_sort@@Base+0x4e8>
   19b00:	bl	13f18 <fwrite@plt>
   19b04:	mov	r2, r6
   19b08:	mov	r1, fp
   19b0c:	ldr	r0, [r7, #204]	; 0xcc
   19b10:	bl	13f84 <fprintf@plt>
   19b14:	add	r4, r4, #1
   19b18:	cmp	r9, r4
   19b1c:	beq	19b68 <__flatcc_gen_sort@@Base+0x4c8>
   19b20:	mov	sl, r5
   19b24:	add	r6, r4, r5
   19b28:	cmp	r8, #0
   19b2c:	beq	19b04 <__flatcc_gen_sort@@Base+0x464>
   19b30:	cmp	r4, #0
   19b34:	bne	19adc <__flatcc_gen_sort@@Base+0x43c>
   19b38:	cmp	r8, #4
   19b3c:	ble	19ac4 <__flatcc_gen_sort@@Base+0x424>
   19b40:	ldr	r2, [sp, #4]
   19b44:	ldr	r1, [pc, #64]	; 19b8c <__flatcc_gen_sort@@Base+0x4ec>
   19b48:	ldr	r0, [r7, #204]	; 0xcc
   19b4c:	bl	13f84 <fprintf@plt>
   19b50:	b	19b04 <__flatcc_gen_sort@@Base+0x464>
   19b54:	ldr	r2, [sp, #4]
   19b58:	ldr	r1, [pc, #44]	; 19b8c <__flatcc_gen_sort@@Base+0x4ec>
   19b5c:	ldr	r0, [r7, #204]	; 0xcc
   19b60:	bl	13f84 <fprintf@plt>
   19b64:	b	19b04 <__flatcc_gen_sort@@Base+0x464>
   19b68:	add	r0, r4, sl
   19b6c:	add	sp, sp, #12
   19b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b74:	mov	r0, r5
   19b78:	b	19b6c <__flatcc_gen_sort@@Base+0x4cc>
   19b7c:	muleq	r3, r4, lr
   19b80:	ldrdeq	lr, [r3], -ip
   19b84:	andeq	r3, r4, r8, ror sp
   19b88:	andeq	r3, r4, r4, ror sp
   19b8c:	andeq	r3, r4, ip, ror #26
   19b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b94:	sub	sp, sp, #244	; 0xf4
   19b98:	mov	r6, r0
   19b9c:	mov	r4, r1
   19ba0:	mov	r5, r2
   19ba4:	mov	r8, r3
   19ba8:	str	r0, [sp, #12]
   19bac:	mov	r2, #220	; 0xdc
   19bb0:	mov	r1, #0
   19bb4:	add	r0, sp, #20
   19bb8:	bl	13f9c <memset@plt>
   19bbc:	ldr	r4, [r4, #20]
   19bc0:	cmp	r4, #0
   19bc4:	beq	19ed4 <__flatcc_gen_sort@@Base+0x834>
   19bc8:	ldr	r3, [pc, #784]	; 19ee0 <__flatcc_gen_sort@@Base+0x840>
   19bcc:	ldr	r7, [pc, #784]	; 19ee4 <__flatcc_gen_sort@@Base+0x844>
   19bd0:	ldr	r2, [sp, #280]	; 0x118
   19bd4:	cmp	r2, #0
   19bd8:	moveq	r7, r3
   19bdc:	ldr	r9, [pc, #772]	; 19ee8 <__flatcc_gen_sort@@Base+0x848>
   19be0:	ldr	sl, [pc, #772]	; 19eec <__flatcc_gen_sort@@Base+0x84c>
   19be4:	b	19d90 <__flatcc_gen_sort@@Base+0x6f0>
   19be8:	ldr	r3, [sp, #280]	; 0x118
   19bec:	str	r3, [sp]
   19bf0:	mov	r3, r8
   19bf4:	mov	r2, r5
   19bf8:	mov	r0, r6
   19bfc:	bl	19b90 <__flatcc_gen_sort@@Base+0x4f0>
   19c00:	mov	r5, r0
   19c04:	b	19d84 <__flatcc_gen_sort@@Base+0x6e4>
   19c08:	ldr	r3, [r6, #204]	; 0xcc
   19c0c:	mov	r2, #2
   19c10:	mov	r1, #1
   19c14:	ldr	r0, [pc, #724]	; 19ef0 <__flatcc_gen_sort@@Base+0x850>
   19c18:	bl	13f18 <fwrite@plt>
   19c1c:	b	19c48 <__flatcc_gen_sort@@Base+0x5a8>
   19c20:	tst	r5, #3
   19c24:	bne	19c34 <__flatcc_gen_sort@@Base+0x594>
   19c28:	sub	r3, r8, r5
   19c2c:	cmp	r3, #2
   19c30:	bgt	19c7c <__flatcc_gen_sort@@Base+0x5dc>
   19c34:	ldr	r3, [r6, #204]	; 0xcc
   19c38:	mov	r2, #2
   19c3c:	mov	r1, #1
   19c40:	ldr	r0, [pc, #680]	; 19ef0 <__flatcc_gen_sort@@Base+0x850>
   19c44:	bl	13f18 <fwrite@plt>
   19c48:	ldr	r3, [r4, #16]
   19c4c:	add	r2, sp, #20
   19c50:	mov	r1, r3
   19c54:	ldr	r0, [r3, #12]
   19c58:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   19c5c:	add	fp, r5, #1
   19c60:	mov	r3, r5
   19c64:	add	r2, sp, #20
   19c68:	ldr	r1, [pc, #644]	; 19ef4 <__flatcc_gen_sort@@Base+0x854>
   19c6c:	ldr	r0, [r6, #204]	; 0xcc
   19c70:	bl	13f84 <fprintf@plt>
   19c74:	mov	r5, fp
   19c78:	b	19d84 <__flatcc_gen_sort@@Base+0x6e4>
   19c7c:	mov	r2, r7
   19c80:	ldr	r1, [pc, #624]	; 19ef8 <__flatcc_gen_sort@@Base+0x858>
   19c84:	ldr	r0, [r6, #204]	; 0xcc
   19c88:	bl	13f84 <fprintf@plt>
   19c8c:	b	19c48 <__flatcc_gen_sort@@Base+0x5a8>
   19c90:	cmp	r8, #0
   19c94:	beq	19cfc <__flatcc_gen_sort@@Base+0x65c>
   19c98:	cmp	r5, #0
   19c9c:	bne	19cd4 <__flatcc_gen_sort@@Base+0x634>
   19ca0:	cmp	r8, #4
   19ca4:	ble	19cbc <__flatcc_gen_sort@@Base+0x61c>
   19ca8:	mov	r2, r7
   19cac:	ldr	r1, [pc, #580]	; 19ef8 <__flatcc_gen_sort@@Base+0x858>
   19cb0:	ldr	r0, [r6, #204]	; 0xcc
   19cb4:	bl	13f84 <fprintf@plt>
   19cb8:	b	19cfc <__flatcc_gen_sort@@Base+0x65c>
   19cbc:	ldr	r3, [r6, #204]	; 0xcc
   19cc0:	mov	r2, #2
   19cc4:	mov	r1, #1
   19cc8:	ldr	r0, [pc, #544]	; 19ef0 <__flatcc_gen_sort@@Base+0x850>
   19ccc:	bl	13f18 <fwrite@plt>
   19cd0:	b	19cfc <__flatcc_gen_sort@@Base+0x65c>
   19cd4:	tst	r5, #3
   19cd8:	bne	19ce8 <__flatcc_gen_sort@@Base+0x648>
   19cdc:	sub	r3, r8, r5
   19ce0:	cmp	r3, #2
   19ce4:	bgt	19d44 <__flatcc_gen_sort@@Base+0x6a4>
   19ce8:	ldr	r3, [r6, #204]	; 0xcc
   19cec:	mov	r2, #2
   19cf0:	mov	r1, #1
   19cf4:	ldr	r0, [pc, #500]	; 19ef0 <__flatcc_gen_sort@@Base+0x850>
   19cf8:	bl	13f18 <fwrite@plt>
   19cfc:	ldr	r3, [r4, #16]
   19d00:	cmp	r3, #5
   19d04:	beq	19dec <__flatcc_gen_sort@@Base+0x74c>
   19d08:	sub	r3, r3, #1
   19d0c:	cmp	r3, #10
   19d10:	ldrls	pc, [pc, r3, lsl #2]
   19d14:	b	19e48 <__flatcc_gen_sort@@Base+0x7a8>
   19d18:	andeq	r9, r1, r0, lsl #29
   19d1c:	andeq	r9, r1, r8, asr sp
   19d20:	andeq	r9, r1, ip, lsl #29
   19d24:	andeq	r9, r1, r4, ror #26
   19d28:	strdeq	r9, [r1], -r8
   19d2c:	andeq	r9, r1, r0, lsl #28
   19d30:	andeq	r9, r1, ip, lsl #28
   19d34:	andeq	r9, r1, r8, lsl lr
   19d38:	andeq	r9, r1, r4, lsr #28
   19d3c:	andeq	r9, r1, ip, lsr lr
   19d40:	andeq	r9, r1, r0, lsr lr
   19d44:	mov	r2, r7
   19d48:	ldr	r1, [pc, #424]	; 19ef8 <__flatcc_gen_sort@@Base+0x858>
   19d4c:	ldr	r0, [r6, #204]	; 0xcc
   19d50:	bl	13f84 <fprintf@plt>
   19d54:	b	19cfc <__flatcc_gen_sort@@Base+0x65c>
   19d58:	mov	r2, sl
   19d5c:	ldr	r3, [pc, #408]	; 19efc <__flatcc_gen_sort@@Base+0x85c>
   19d60:	b	19d6c <__flatcc_gen_sort@@Base+0x6cc>
   19d64:	mov	r2, sl
   19d68:	ldr	r3, [pc, #400]	; 19f00 <__flatcc_gen_sort@@Base+0x860>
   19d6c:	add	fp, r5, #1
   19d70:	str	r5, [sp]
   19d74:	mov	r1, r9
   19d78:	ldr	r0, [r6, #204]	; 0xcc
   19d7c:	bl	13f84 <fprintf@plt>
   19d80:	mov	r5, fp
   19d84:	ldr	r4, [r4]
   19d88:	cmp	r4, #0
   19d8c:	beq	19ed4 <__flatcc_gen_sort@@Base+0x834>
   19d90:	ldrh	r3, [r4, #72]	; 0x48
   19d94:	tst	r3, #4
   19d98:	bne	19d84 <__flatcc_gen_sort@@Base+0x6e4>
   19d9c:	ldrh	r3, [r4, #24]
   19da0:	cmp	r3, #8
   19da4:	beq	19c90 <__flatcc_gen_sort@@Base+0x5f0>
   19da8:	cmp	r3, #14
   19dac:	bne	19e98 <__flatcc_gen_sort@@Base+0x7f8>
   19db0:	ldr	r1, [r4, #16]
   19db4:	ldrh	r3, [r1, #8]
   19db8:	cmp	r3, #1
   19dbc:	beq	19be8 <__flatcc_gen_sort@@Base+0x548>
   19dc0:	cmp	r8, #0
   19dc4:	beq	19c48 <__flatcc_gen_sort@@Base+0x5a8>
   19dc8:	cmp	r5, #0
   19dcc:	bne	19c20 <__flatcc_gen_sort@@Base+0x580>
   19dd0:	cmp	r8, #4
   19dd4:	ble	19c08 <__flatcc_gen_sort@@Base+0x568>
   19dd8:	mov	r2, r7
   19ddc:	ldr	r1, [pc, #276]	; 19ef8 <__flatcc_gen_sort@@Base+0x858>
   19de0:	ldr	r0, [r6, #204]	; 0xcc
   19de4:	bl	13f84 <fprintf@plt>
   19de8:	b	19c48 <__flatcc_gen_sort@@Base+0x5a8>
   19dec:	ldr	r2, [sp, #12]
   19df0:	ldr	r3, [pc, #268]	; 19f04 <__flatcc_gen_sort@@Base+0x864>
   19df4:	b	19d6c <__flatcc_gen_sort@@Base+0x6cc>
   19df8:	mov	r2, sl
   19dfc:	b	19df0 <__flatcc_gen_sort@@Base+0x750>
   19e00:	mov	r2, sl
   19e04:	ldr	r3, [pc, #252]	; 19f08 <__flatcc_gen_sort@@Base+0x868>
   19e08:	b	19d6c <__flatcc_gen_sort@@Base+0x6cc>
   19e0c:	mov	r2, sl
   19e10:	ldr	r3, [pc, #244]	; 19f0c <__flatcc_gen_sort@@Base+0x86c>
   19e14:	b	19d6c <__flatcc_gen_sort@@Base+0x6cc>
   19e18:	mov	r2, sl
   19e1c:	ldr	r3, [pc, #236]	; 19f10 <__flatcc_gen_sort@@Base+0x870>
   19e20:	b	19d6c <__flatcc_gen_sort@@Base+0x6cc>
   19e24:	mov	r2, sl
   19e28:	ldr	r3, [pc, #228]	; 19f14 <__flatcc_gen_sort@@Base+0x874>
   19e2c:	b	19d6c <__flatcc_gen_sort@@Base+0x6cc>
   19e30:	mov	r2, sl
   19e34:	ldr	r3, [pc, #220]	; 19f18 <__flatcc_gen_sort@@Base+0x878>
   19e38:	b	19d6c <__flatcc_gen_sort@@Base+0x6cc>
   19e3c:	mov	r2, sl
   19e40:	ldr	r3, [pc, #212]	; 19f1c <__flatcc_gen_sort@@Base+0x87c>
   19e44:	b	19d6c <__flatcc_gen_sort@@Base+0x6cc>
   19e48:	ldr	r4, [pc, #208]	; 19f20 <__flatcc_gen_sort@@Base+0x880>
   19e4c:	ldr	r3, [pc, #208]	; 19f24 <__flatcc_gen_sort@@Base+0x884>
   19e50:	ldr	r0, [r3]
   19e54:	ldr	r3, [pc, #204]	; 19f28 <__flatcc_gen_sort@@Base+0x888>
   19e58:	str	r3, [sp]
   19e5c:	mov	r3, #141	; 0x8d
   19e60:	mov	r2, r4
   19e64:	ldr	r1, [pc, #192]	; 19f2c <__flatcc_gen_sort@@Base+0x88c>
   19e68:	bl	13f84 <fprintf@plt>
   19e6c:	ldr	r3, [pc, #188]	; 19f30 <__flatcc_gen_sort@@Base+0x890>
   19e70:	mov	r2, #141	; 0x8d
   19e74:	mov	r1, r4
   19e78:	ldr	r0, [pc, #180]	; 19f34 <__flatcc_gen_sort@@Base+0x894>
   19e7c:	bl	14038 <__assert_fail@plt>
   19e80:	mov	r2, sl
   19e84:	ldr	r3, [pc, #172]	; 19f38 <__flatcc_gen_sort@@Base+0x898>
   19e88:	b	19d6c <__flatcc_gen_sort@@Base+0x6cc>
   19e8c:	mov	r2, sl
   19e90:	ldr	r3, [pc, #164]	; 19f3c <__flatcc_gen_sort@@Base+0x89c>
   19e94:	b	19d6c <__flatcc_gen_sort@@Base+0x6cc>
   19e98:	ldr	r5, [pc, #160]	; 19f40 <__flatcc_gen_sort@@Base+0x8a0>
   19e9c:	ldr	r4, [pc, #160]	; 19f44 <__flatcc_gen_sort@@Base+0x8a4>
   19ea0:	ldr	r3, [pc, #124]	; 19f24 <__flatcc_gen_sort@@Base+0x884>
   19ea4:	ldr	r0, [r3]
   19ea8:	ldr	r3, [pc, #152]	; 19f48 <__flatcc_gen_sort@@Base+0x8a8>
   19eac:	str	r3, [sp]
   19eb0:	mov	r3, r5
   19eb4:	mov	r2, r4
   19eb8:	ldr	r1, [pc, #108]	; 19f2c <__flatcc_gen_sort@@Base+0x88c>
   19ebc:	bl	13f84 <fprintf@plt>
   19ec0:	ldr	r3, [pc, #132]	; 19f4c <__flatcc_gen_sort@@Base+0x8ac>
   19ec4:	mov	r2, r5
   19ec8:	mov	r1, r4
   19ecc:	ldr	r0, [pc, #96]	; 19f34 <__flatcc_gen_sort@@Base+0x894>
   19ed0:	bl	14038 <__assert_fail@plt>
   19ed4:	mov	r0, r5
   19ed8:	add	sp, sp, #244	; 0xf4
   19edc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ee0:	muleq	r3, r4, lr
   19ee4:	ldrdeq	lr, [r3], -ip
   19ee8:	andeq	r3, r4, ip, lsl #27
   19eec:	andeq	r5, r4, r0, lsr #2
   19ef0:	andeq	r3, r4, r4, ror sp
   19ef4:	andeq	r3, r4, ip, ror sp
   19ef8:	andeq	r3, r4, ip, ror #26
   19efc:	ldrdeq	fp, [r3], -r4
   19f00:	andeq	fp, r3, ip, ror #17
   19f04:	strdeq	fp, [r3], -r4
   19f08:	strdeq	fp, [r3], -ip
   19f0c:	andeq	fp, r3, r4, lsl #18
   19f10:	andeq	fp, r3, ip, lsl #18
   19f14:	andeq	fp, r3, r4, lsl r9
   19f18:	andeq	fp, r3, ip, lsl r9
   19f1c:	andeq	fp, r3, r4, lsr #18
   19f20:	andeq	fp, r3, ip, ror #19
   19f24:	andeq	r6, r6, r8, lsr #1
   19f28:	andeq	fp, r3, r4, asr #20
   19f2c:	andeq	fp, r3, r8, lsr sl
   19f30:	andeq	r3, r4, r8, lsl fp
   19f34:	andeq	r3, r4, r0, ror lr
   19f38:	andeq	fp, r3, r8, asr #17
   19f3c:	andeq	fp, r3, r0, ror #17
   19f40:	andeq	r0, r0, r2, asr r3
   19f44:	andeq	r3, r4, r8, ror ip
   19f48:	muleq	r4, r8, sp
   19f4c:	andeq	r3, r4, ip, lsr #22
   19f50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f54:	sub	sp, sp, #252	; 0xfc
   19f58:	mov	r6, r0
   19f5c:	mov	r4, r1
   19f60:	mov	r5, r2
   19f64:	str	r3, [sp, #20]
   19f68:	ldr	r9, [sp, #288]	; 0x120
   19f6c:	str	r0, [sp, #16]
   19f70:	mov	r2, #220	; 0xdc
   19f74:	mov	r1, #0
   19f78:	add	r0, sp, #28
   19f7c:	bl	13f9c <memset@plt>
   19f80:	cmp	r9, #1
   19f84:	beq	19fac <__flatcc_gen_sort@@Base+0x90c>
   19f88:	ldr	r3, [pc, #1272]	; 1a488 <__flatcc_gen_sort@@Base+0xde8>
   19f8c:	ldr	sl, [pc, #1272]	; 1a48c <__flatcc_gen_sort@@Base+0xdec>
   19f90:	cmp	r9, #2
   19f94:	movne	sl, r3
   19f98:	ldr	r4, [r4, #20]
   19f9c:	cmp	r4, #0
   19fa0:	beq	1a45c <__flatcc_gen_sort@@Base+0xdbc>
   19fa4:	mov	fp, #0
   19fa8:	b	1a2cc <__flatcc_gen_sort@@Base+0xc2c>
   19fac:	ldr	sl, [pc, #1244]	; 1a490 <__flatcc_gen_sort@@Base+0xdf0>
   19fb0:	b	19f98 <__flatcc_gen_sort@@Base+0x8f8>
   19fb4:	ldrh	r3, [r4, #72]	; 0x48
   19fb8:	tst	r3, #4
   19fbc:	bne	19ff8 <__flatcc_gen_sort@@Base+0x958>
   19fc0:	ldr	r3, [sp, #292]	; 0x124
   19fc4:	cmp	r3, #0
   19fc8:	beq	1a020 <__flatcc_gen_sort@@Base+0x980>
   19fcc:	str	r8, [sp, #12]
   19fd0:	str	r7, [sp, #8]
   19fd4:	str	r8, [sp, #4]
   19fd8:	str	r7, [sp]
   19fdc:	mov	r3, sl
   19fe0:	add	r2, sp, #28
   19fe4:	ldr	r1, [pc, #1192]	; 1a494 <__flatcc_gen_sort@@Base+0xdf4>
   19fe8:	ldr	r0, [r6, #204]	; 0xcc
   19fec:	bl	13f84 <fprintf@plt>
   19ff0:	add	r5, r5, #1
   19ff4:	b	1a2c0 <__flatcc_gen_sort@@Base+0xc20>
   19ff8:	mov	r3, fp
   19ffc:	mov	r2, fp
   1a000:	ldr	r1, [pc, #1168]	; 1a498 <__flatcc_gen_sort@@Base+0xdf8>
   1a004:	ldr	r0, [r6, #204]	; 0xcc
   1a008:	bl	13f84 <fprintf@plt>
   1a00c:	add	fp, fp, #1
   1a010:	ldr	r0, [r4, #16]
   1a014:	bl	197cc <__flatcc_gen_sort@@Base+0x12c>
   1a018:	add	r5, r5, r0
   1a01c:	b	1a2c0 <__flatcc_gen_sort@@Base+0xc20>
   1a020:	str	r8, [sp, #4]
   1a024:	str	r7, [sp]
   1a028:	mov	r3, sl
   1a02c:	add	r2, sp, #28
   1a030:	ldr	r1, [pc, #1124]	; 1a49c <__flatcc_gen_sort@@Base+0xdfc>
   1a034:	ldr	r0, [r6, #204]	; 0xcc
   1a038:	bl	13f84 <fprintf@plt>
   1a03c:	ldr	r1, [r4, #16]
   1a040:	mov	r3, #0
   1a044:	str	r3, [sp]
   1a048:	ldr	r3, [sp, #20]
   1a04c:	mov	r2, r5
   1a050:	mov	r0, r6
   1a054:	bl	19a7c <__flatcc_gen_sort@@Base+0x3dc>
   1a058:	mov	r5, r0
   1a05c:	ldr	r1, [r6, #204]	; 0xcc
   1a060:	mov	r0, #41	; 0x29
   1a064:	bl	13fe4 <fputc@plt>
   1a068:	b	1a2c0 <__flatcc_gen_sort@@Base+0xc20>
   1a06c:	add	r7, fp, #1
   1a070:	mov	r2, fp
   1a074:	ldr	r1, [pc, #1060]	; 1a4a0 <__flatcc_gen_sort@@Base+0xe00>
   1a078:	ldr	r0, [r6, #204]	; 0xcc
   1a07c:	bl	13f84 <fprintf@plt>
   1a080:	add	r5, r5, #1
   1a084:	mov	fp, r7
   1a088:	b	1a2c0 <__flatcc_gen_sort@@Base+0xc20>
   1a08c:	ldr	r3, [sp, #292]	; 0x124
   1a090:	cmp	r3, #0
   1a094:	beq	1a0c0 <__flatcc_gen_sort@@Base+0xa20>
   1a098:	str	r8, [sp, #8]
   1a09c:	str	r7, [sp, #4]
   1a0a0:	str	r8, [sp]
   1a0a4:	mov	r3, r7
   1a0a8:	add	r2, sp, #28
   1a0ac:	ldr	r1, [pc, #1008]	; 1a4a4 <__flatcc_gen_sort@@Base+0xe04>
   1a0b0:	ldr	r0, [r6, #204]	; 0xcc
   1a0b4:	bl	13f84 <fprintf@plt>
   1a0b8:	add	r5, r5, #1
   1a0bc:	b	1a2c0 <__flatcc_gen_sort@@Base+0xc20>
   1a0c0:	str	r5, [sp, #4]
   1a0c4:	str	r8, [sp]
   1a0c8:	mov	r3, r7
   1a0cc:	add	r2, sp, #28
   1a0d0:	ldr	r1, [pc, #976]	; 1a4a8 <__flatcc_gen_sort@@Base+0xe08>
   1a0d4:	ldr	r0, [r6, #204]	; 0xcc
   1a0d8:	bl	13f84 <fprintf@plt>
   1a0dc:	b	1a0b8 <__flatcc_gen_sort@@Base+0xa18>
   1a0e0:	str	r5, [sp, #4]
   1a0e4:	str	r8, [sp]
   1a0e8:	mov	r3, r7
   1a0ec:	add	r2, sp, #28
   1a0f0:	ldr	r1, [pc, #948]	; 1a4ac <__flatcc_gen_sort@@Base+0xe0c>
   1a0f4:	ldr	r0, [r6, #204]	; 0xcc
   1a0f8:	bl	13f84 <fprintf@plt>
   1a0fc:	b	1a0b8 <__flatcc_gen_sort@@Base+0xa18>
   1a100:	ldr	r3, [sp, #292]	; 0x124
   1a104:	cmp	r3, #0
   1a108:	beq	1a12c <__flatcc_gen_sort@@Base+0xa8c>
   1a10c:	str	r8, [sp, #4]
   1a110:	str	r7, [sp]
   1a114:	mov	r3, r8
   1a118:	mov	r2, r7
   1a11c:	ldr	r1, [pc, #908]	; 1a4b0 <__flatcc_gen_sort@@Base+0xe10>
   1a120:	ldr	r0, [r6, #204]	; 0xcc
   1a124:	bl	13f84 <fprintf@plt>
   1a128:	b	1a0b8 <__flatcc_gen_sort@@Base+0xa18>
   1a12c:	str	r5, [sp]
   1a130:	mov	r3, r8
   1a134:	mov	r2, r7
   1a138:	ldr	r1, [pc, #884]	; 1a4b4 <__flatcc_gen_sort@@Base+0xe14>
   1a13c:	ldr	r0, [r6, #204]	; 0xcc
   1a140:	bl	13f84 <fprintf@plt>
   1a144:	b	1a0b8 <__flatcc_gen_sort@@Base+0xa18>
   1a148:	ldr	r3, [r4, #16]
   1a14c:	sub	r3, r3, #1
   1a150:	cmp	r3, #10
   1a154:	ldrls	pc, [pc, r3, lsl #2]
   1a158:	b	1a1d0 <__flatcc_gen_sort@@Base+0xb30>
   1a15c:	andeq	sl, r1, r8, lsl #4
   1a160:	andeq	sl, r1, r8, lsl #3
   1a164:	andeq	sl, r1, r0, lsl r2
   1a168:	muleq	r1, r0, r1
   1a16c:	muleq	r1, r8, r1
   1a170:	andeq	sl, r1, r0, lsr #3
   1a174:	andeq	sl, r1, r8, lsr #3
   1a178:			; <UNDEFINED> instruction: 0x0001a1b0
   1a17c:			; <UNDEFINED> instruction: 0x0001a1b8
   1a180:	andeq	sl, r1, r8, asr #3
   1a184:	andeq	sl, r1, r0, asr #3
   1a188:	ldr	r3, [pc, #808]	; 1a4b8 <__flatcc_gen_sort@@Base+0xe18>
   1a18c:	b	1a214 <__flatcc_gen_sort@@Base+0xb74>
   1a190:	ldr	r3, [pc, #804]	; 1a4bc <__flatcc_gen_sort@@Base+0xe1c>
   1a194:	b	1a214 <__flatcc_gen_sort@@Base+0xb74>
   1a198:	ldr	r3, [pc, #800]	; 1a4c0 <__flatcc_gen_sort@@Base+0xe20>
   1a19c:	b	1a214 <__flatcc_gen_sort@@Base+0xb74>
   1a1a0:	ldr	r3, [pc, #796]	; 1a4c4 <__flatcc_gen_sort@@Base+0xe24>
   1a1a4:	b	1a214 <__flatcc_gen_sort@@Base+0xb74>
   1a1a8:	ldr	r3, [pc, #792]	; 1a4c8 <__flatcc_gen_sort@@Base+0xe28>
   1a1ac:	b	1a214 <__flatcc_gen_sort@@Base+0xb74>
   1a1b0:	ldr	r3, [pc, #788]	; 1a4cc <__flatcc_gen_sort@@Base+0xe2c>
   1a1b4:	b	1a214 <__flatcc_gen_sort@@Base+0xb74>
   1a1b8:	ldr	r3, [pc, #784]	; 1a4d0 <__flatcc_gen_sort@@Base+0xe30>
   1a1bc:	b	1a214 <__flatcc_gen_sort@@Base+0xb74>
   1a1c0:	ldr	r3, [pc, #780]	; 1a4d4 <__flatcc_gen_sort@@Base+0xe34>
   1a1c4:	b	1a214 <__flatcc_gen_sort@@Base+0xb74>
   1a1c8:	ldr	r3, [pc, #776]	; 1a4d8 <__flatcc_gen_sort@@Base+0xe38>
   1a1cc:	b	1a214 <__flatcc_gen_sort@@Base+0xb74>
   1a1d0:	ldr	r4, [pc, #772]	; 1a4dc <__flatcc_gen_sort@@Base+0xe3c>
   1a1d4:	ldr	r3, [pc, #772]	; 1a4e0 <__flatcc_gen_sort@@Base+0xe40>
   1a1d8:	ldr	r0, [r3]
   1a1dc:	ldr	r3, [pc, #768]	; 1a4e4 <__flatcc_gen_sort@@Base+0xe44>
   1a1e0:	str	r3, [sp]
   1a1e4:	mov	r3, #96	; 0x60
   1a1e8:	mov	r2, r4
   1a1ec:	ldr	r1, [pc, #756]	; 1a4e8 <__flatcc_gen_sort@@Base+0xe48>
   1a1f0:	bl	13f84 <fprintf@plt>
   1a1f4:	ldr	r3, [pc, #752]	; 1a4ec <__flatcc_gen_sort@@Base+0xe4c>
   1a1f8:	mov	r2, #96	; 0x60
   1a1fc:	mov	r1, r4
   1a200:	ldr	r0, [pc, #744]	; 1a4f0 <__flatcc_gen_sort@@Base+0xe50>
   1a204:	bl	14038 <__assert_fail@plt>
   1a208:	ldr	r3, [pc, #740]	; 1a4f4 <__flatcc_gen_sort@@Base+0xe54>
   1a20c:	b	1a214 <__flatcc_gen_sort@@Base+0xb74>
   1a210:	ldr	r3, [pc, #736]	; 1a4f8 <__flatcc_gen_sort@@Base+0xe58>
   1a214:	ldrh	r2, [r4, #72]	; 0x48
   1a218:	tst	r2, #4
   1a21c:	bne	1a270 <__flatcc_gen_sort@@Base+0xbd0>
   1a220:	ldrd	r0, [r4, #88]	; 0x58
   1a224:	cmp	r1, #0
   1a228:	cmpeq	r0, #1
   1a22c:	beq	1a3d8 <__flatcc_gen_sort@@Base+0xd38>
   1a230:	cmp	r9, #1
   1a234:	beq	1a290 <__flatcc_gen_sort@@Base+0xbf0>
   1a238:	cmp	r9, #2
   1a23c:	bne	1a3d8 <__flatcc_gen_sort@@Base+0xd38>
   1a240:	ldr	r2, [sp, #292]	; 0x124
   1a244:	cmp	r2, #0
   1a248:	beq	1a3b8 <__flatcc_gen_sort@@Base+0xd18>
   1a24c:	str	r8, [sp, #12]
   1a250:	str	r7, [sp, #8]
   1a254:	str	r8, [sp, #4]
   1a258:	str	r7, [sp]
   1a25c:	ldr	r2, [sp, #16]
   1a260:	ldr	r1, [pc, #660]	; 1a4fc <__flatcc_gen_sort@@Base+0xe5c>
   1a264:	ldr	r0, [r6, #204]	; 0xcc
   1a268:	bl	13f84 <fprintf@plt>
   1a26c:	b	1a2bc <__flatcc_gen_sort@@Base+0xc1c>
   1a270:	add	r7, fp, #1
   1a274:	mov	r2, fp
   1a278:	ldr	r1, [pc, #544]	; 1a4a0 <__flatcc_gen_sort@@Base+0xe00>
   1a27c:	ldr	r0, [r6, #204]	; 0xcc
   1a280:	bl	13f84 <fprintf@plt>
   1a284:	add	r5, r5, #1
   1a288:	mov	fp, r7
   1a28c:	b	1a2c0 <__flatcc_gen_sort@@Base+0xc20>
   1a290:	ldr	r2, [sp, #292]	; 0x124
   1a294:	cmp	r2, #0
   1a298:	beq	1a398 <__flatcc_gen_sort@@Base+0xcf8>
   1a29c:	str	r8, [sp, #12]
   1a2a0:	str	r7, [sp, #8]
   1a2a4:	str	r8, [sp, #4]
   1a2a8:	str	r7, [sp]
   1a2ac:	ldr	r2, [sp, #16]
   1a2b0:	ldr	r1, [pc, #584]	; 1a500 <__flatcc_gen_sort@@Base+0xe60>
   1a2b4:	ldr	r0, [r6, #204]	; 0xcc
   1a2b8:	bl	13f84 <fprintf@plt>
   1a2bc:	add	r5, r5, #1
   1a2c0:	ldr	r4, [r4]
   1a2c4:	cmp	r4, #0
   1a2c8:	beq	1a45c <__flatcc_gen_sort@@Base+0xdbc>
   1a2cc:	ldr	r3, [r4, #4]
   1a2d0:	ldr	r7, [r3, #4]
   1a2d4:	ldr	r8, [r3]
   1a2d8:	cmp	r5, #0
   1a2dc:	ble	1a304 <__flatcc_gen_sort@@Base+0xc64>
   1a2e0:	tst	r5, #3
   1a2e4:	ldr	r3, [r6, #204]	; 0xcc
   1a2e8:	moveq	r2, #4
   1a2ec:	moveq	r1, #1
   1a2f0:	ldreq	r0, [pc, #524]	; 1a504 <__flatcc_gen_sort@@Base+0xe64>
   1a2f4:	movne	r2, #2
   1a2f8:	movne	r1, #1
   1a2fc:	ldrne	r0, [pc, #516]	; 1a508 <__flatcc_gen_sort@@Base+0xe68>
   1a300:	bl	13f18 <fwrite@plt>
   1a304:	ldrh	r3, [r4, #24]
   1a308:	cmp	r3, #8
   1a30c:	beq	1a148 <__flatcc_gen_sort@@Base+0xaa8>
   1a310:	cmp	r3, #14
   1a314:	bne	1a420 <__flatcc_gen_sort@@Base+0xd80>
   1a318:	ldr	r3, [r4, #16]
   1a31c:	add	r2, sp, #28
   1a320:	mov	r1, r3
   1a324:	ldr	r0, [r3, #12]
   1a328:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1a32c:	ldr	r3, [r4, #16]
   1a330:	ldrh	r3, [r3, #8]
   1a334:	cmp	r3, #1
   1a338:	beq	19fb4 <__flatcc_gen_sort@@Base+0x914>
   1a33c:	ldrh	r3, [r4, #72]	; 0x48
   1a340:	tst	r3, #4
   1a344:	bne	1a06c <__flatcc_gen_sort@@Base+0x9cc>
   1a348:	ldrd	r2, [r4, #88]	; 0x58
   1a34c:	cmp	r3, #0
   1a350:	cmpeq	r2, #1
   1a354:	beq	1a100 <__flatcc_gen_sort@@Base+0xa60>
   1a358:	cmp	r9, #1
   1a35c:	beq	1a08c <__flatcc_gen_sort@@Base+0x9ec>
   1a360:	cmp	r9, #2
   1a364:	bne	1a100 <__flatcc_gen_sort@@Base+0xa60>
   1a368:	ldr	r3, [sp, #292]	; 0x124
   1a36c:	cmp	r3, #0
   1a370:	beq	1a0e0 <__flatcc_gen_sort@@Base+0xa40>
   1a374:	str	r8, [sp, #8]
   1a378:	str	r7, [sp, #4]
   1a37c:	str	r8, [sp]
   1a380:	mov	r3, r7
   1a384:	add	r2, sp, #28
   1a388:	ldr	r1, [pc, #380]	; 1a50c <__flatcc_gen_sort@@Base+0xe6c>
   1a38c:	ldr	r0, [r6, #204]	; 0xcc
   1a390:	bl	13f84 <fprintf@plt>
   1a394:	b	1a0b8 <__flatcc_gen_sort@@Base+0xa18>
   1a398:	str	r5, [sp, #8]
   1a39c:	str	r8, [sp, #4]
   1a3a0:	str	r7, [sp]
   1a3a4:	ldr	r2, [sp, #16]
   1a3a8:	ldr	r1, [pc, #352]	; 1a510 <__flatcc_gen_sort@@Base+0xe70>
   1a3ac:	ldr	r0, [r6, #204]	; 0xcc
   1a3b0:	bl	13f84 <fprintf@plt>
   1a3b4:	b	1a2bc <__flatcc_gen_sort@@Base+0xc1c>
   1a3b8:	str	r5, [sp, #8]
   1a3bc:	str	r8, [sp, #4]
   1a3c0:	str	r7, [sp]
   1a3c4:	ldr	r2, [sp, #16]
   1a3c8:	ldr	r1, [pc, #324]	; 1a514 <__flatcc_gen_sort@@Base+0xe74>
   1a3cc:	ldr	r0, [r6, #204]	; 0xcc
   1a3d0:	bl	13f84 <fprintf@plt>
   1a3d4:	b	1a2bc <__flatcc_gen_sort@@Base+0xc1c>
   1a3d8:	ldr	r3, [sp, #292]	; 0x124
   1a3dc:	cmp	r3, #0
   1a3e0:	beq	1a404 <__flatcc_gen_sort@@Base+0xd64>
   1a3e4:	str	r8, [sp, #4]
   1a3e8:	str	r7, [sp]
   1a3ec:	mov	r3, r8
   1a3f0:	mov	r2, r7
   1a3f4:	ldr	r1, [pc, #180]	; 1a4b0 <__flatcc_gen_sort@@Base+0xe10>
   1a3f8:	ldr	r0, [r6, #204]	; 0xcc
   1a3fc:	bl	13f84 <fprintf@plt>
   1a400:	b	1a2bc <__flatcc_gen_sort@@Base+0xc1c>
   1a404:	str	r5, [sp]
   1a408:	mov	r3, r8
   1a40c:	mov	r2, r7
   1a410:	ldr	r1, [pc, #156]	; 1a4b4 <__flatcc_gen_sort@@Base+0xe14>
   1a414:	ldr	r0, [r6, #204]	; 0xcc
   1a418:	bl	13f84 <fprintf@plt>
   1a41c:	b	1a2bc <__flatcc_gen_sort@@Base+0xc1c>
   1a420:	ldr	r5, [pc, #240]	; 1a518 <__flatcc_gen_sort@@Base+0xe78>
   1a424:	ldr	r4, [pc, #240]	; 1a51c <__flatcc_gen_sort@@Base+0xe7c>
   1a428:	ldr	r3, [pc, #176]	; 1a4e0 <__flatcc_gen_sort@@Base+0xe40>
   1a42c:	ldr	r0, [r3]
   1a430:	ldr	r3, [pc, #232]	; 1a520 <__flatcc_gen_sort@@Base+0xe80>
   1a434:	str	r3, [sp]
   1a438:	mov	r3, r5
   1a43c:	mov	r2, r4
   1a440:	ldr	r1, [pc, #160]	; 1a4e8 <__flatcc_gen_sort@@Base+0xe48>
   1a444:	bl	13f84 <fprintf@plt>
   1a448:	ldr	r3, [pc, #212]	; 1a524 <__flatcc_gen_sort@@Base+0xe84>
   1a44c:	mov	r2, r5
   1a450:	mov	r1, r4
   1a454:	ldr	r0, [pc, #148]	; 1a4f0 <__flatcc_gen_sort@@Base+0xe50>
   1a458:	bl	14038 <__assert_fail@plt>
   1a45c:	ldr	r3, [sp, #20]
   1a460:	cmp	r3, #0
   1a464:	ble	1a47c <__flatcc_gen_sort@@Base+0xddc>
   1a468:	ldr	r3, [r6, #204]	; 0xcc
   1a46c:	mov	r2, #4
   1a470:	mov	r1, #1
   1a474:	ldr	r0, [pc, #136]	; 1a504 <__flatcc_gen_sort@@Base+0xe64>
   1a478:	bl	13f18 <fwrite@plt>
   1a47c:	mov	r0, r5
   1a480:	add	sp, sp, #252	; 0xfc
   1a484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a488:	andeq	r5, r4, r0, lsr #2
   1a48c:	andeq	r3, r4, r8, asr #27
   1a490:	ldrdeq	r3, [r4], -r0
   1a494:	andeq	r3, r4, r4, lsr #28
   1a498:	andeq	r3, r4, r8, ror #27
   1a49c:	andeq	r3, r4, r4, asr #28
   1a4a0:	andeq	r3, r4, ip, asr lr
   1a4a4:	andeq	r3, r4, r4, ror lr
   1a4a8:	muleq	r4, ip, lr
   1a4ac:	andeq	r3, r4, r4, ror #29
   1a4b0:	andeq	r3, r4, r4, lsl #30
   1a4b4:	andeq	r3, r4, r8, lsl pc
   1a4b8:	andeq	fp, r3, ip, asr #26
   1a4bc:	andeq	fp, r3, ip, asr sp
   1a4c0:	andeq	r3, r5, r0, ror #17
   1a4c4:	andeq	fp, r3, r4, ror #26
   1a4c8:	andeq	fp, r3, ip, ror #26
   1a4cc:	andeq	fp, r3, r4, ror sp
   1a4d0:	andeq	fp, r3, ip, ror sp
   1a4d4:	andeq	fp, r3, ip, lsl r9
   1a4d8:	andeq	fp, r3, r4, lsr #18
   1a4dc:	andeq	fp, r3, ip, ror #19
   1a4e0:	andeq	r6, r6, r8, lsr #1
   1a4e4:	andeq	fp, r3, r4, asr #20
   1a4e8:	andeq	fp, r3, r8, lsr sl
   1a4ec:	andeq	r3, r4, r4, asr #22
   1a4f0:	andeq	r3, r4, r0, ror lr
   1a4f4:	andeq	fp, r3, r4, asr #26
   1a4f8:	andeq	fp, r3, r4, asr sp
   1a4fc:	andeq	r3, r4, r4, ror pc
   1a500:	andeq	r3, r4, r8, lsr #30
   1a504:	ldrdeq	r3, [r4], -ip
   1a508:	andeq	r3, r4, r4, ror #27
   1a50c:	andeq	r3, r4, r0, asr #29
   1a510:	andeq	r3, r4, r0, asr pc
   1a514:	muleq	r4, ip, pc	; <UNPREDICTABLE>
   1a518:	andeq	r0, r0, r1, ror #7
   1a51c:	andeq	r3, r4, r8, ror ip
   1a520:	andeq	r3, r4, r0, asr #31
   1a524:	andeq	r3, r4, r8, asr fp
   1a528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a52c:	sub	sp, sp, #612	; 0x264
   1a530:	mov	r8, r0
   1a534:	mov	r4, r1
   1a538:	mov	r7, r0
   1a53c:	mov	r5, #220	; 0xdc
   1a540:	mov	r2, r5
   1a544:	mov	r1, #0
   1a548:	add	r0, sp, #388	; 0x184
   1a54c:	bl	13f9c <memset@plt>
   1a550:	mov	r2, r5
   1a554:	mov	r1, #0
   1a558:	add	r0, sp, #168	; 0xa8
   1a55c:	bl	13f9c <memset@plt>
   1a560:	add	r2, sp, #388	; 0x184
   1a564:	mov	r1, r4
   1a568:	ldr	r0, [r4, #12]
   1a56c:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1a570:	ldr	r4, [r4, #20]
   1a574:	cmp	r4, #0
   1a578:	beq	1b6cc <__flatcc_gen_sort@@Base+0x202c>
   1a57c:	ldr	sl, [pc, #3820]	; 1b470 <__flatcc_gen_sort@@Base+0x1dd0>
   1a580:	ldr	fp, [pc, #3820]	; 1b474 <__flatcc_gen_sort@@Base+0x1dd4>
   1a584:	b	1a5ac <__flatcc_gen_sort@@Base+0xf0c>
   1a588:	str	r6, [sp]
   1a58c:	mov	r3, r5
   1a590:	add	r2, sp, #388	; 0x184
   1a594:	mov	r1, sl
   1a598:	ldr	r0, [r8, #204]	; 0xcc
   1a59c:	bl	13f84 <fprintf@plt>
   1a5a0:	ldr	r4, [r4]
   1a5a4:	cmp	r4, #0
   1a5a8:	beq	1b6cc <__flatcc_gen_sort@@Base+0x202c>
   1a5ac:	ldr	r3, [r4, #4]
   1a5b0:	ldr	r5, [r3, #4]
   1a5b4:	ldr	r6, [r3]
   1a5b8:	ldrh	r3, [r4, #72]	; 0x48
   1a5bc:	tst	r3, #4
   1a5c0:	bne	1a588 <__flatcc_gen_sort@@Base+0xee8>
   1a5c4:	ldrh	r3, [r4, #24]
   1a5c8:	sub	r3, r3, #7
   1a5cc:	cmp	r3, #8
   1a5d0:	ldrls	pc, [pc, r3, lsl #2]
   1a5d4:	b	1b300 <__flatcc_gen_sort@@Base+0x1c60>
   1a5d8:	andeq	sl, r1, r8, lsr #22
   1a5dc:	strdeq	sl, [r1], -ip
   1a5e0:	andeq	sl, r1, r4, lsl #25
   1a5e4:	andeq	sl, r1, r4, asr ip
   1a5e8:	andeq	fp, r1, r0, lsl #6
   1a5ec:	andeq	fp, r1, r0, lsl #6
   1a5f0:	andeq	fp, r1, r0, lsl #6
   1a5f4:			; <UNDEFINED> instruction: 0x0001acb4
   1a5f8:	andeq	fp, r1, r4, lsr r1
   1a5fc:	ldr	r3, [r4, #16]
   1a600:	cmp	r3, #5
   1a604:	beq	1b38c <__flatcc_gen_sort@@Base+0x1cec>
   1a608:	sub	r2, r3, #1
   1a60c:	cmp	r2, #10
   1a610:	ldrls	pc, [pc, r2, lsl #2]
   1a614:	b	1a644 <__flatcc_gen_sort@@Base+0xfa4>
   1a618:	andeq	sl, r1, ip, ror r6
   1a61c:	andeq	fp, r1, ip, lsr r3
   1a620:	andeq	fp, r1, r4, lsr #8
   1a624:	andeq	fp, r1, r4, asr r3
   1a628:	andeq	fp, r1, r0, lsr #7
   1a62c:	andeq	fp, r1, ip, lsr #7
   1a630:	andeq	fp, r1, ip, lsl #8
   1a634:	andeq	fp, r1, ip, lsr r4
   1a638:	andeq	fp, r1, r4, asr #7
   1a63c:	andeq	fp, r1, r8, ror #7
   1a640:	andeq	fp, r1, r8, lsr #13
   1a644:	ldr	r4, [pc, #3628]	; 1b478 <__flatcc_gen_sort@@Base+0x1dd8>
   1a648:	ldr	r3, [pc, #3804]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1a64c:	ldr	r0, [r3]
   1a650:	ldr	r3, [pc, #3620]	; 1b47c <__flatcc_gen_sort@@Base+0x1ddc>
   1a654:	str	r3, [sp]
   1a658:	mov	r3, #141	; 0x8d
   1a65c:	mov	r2, r4
   1a660:	ldr	r1, [pc, #3788]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1a664:	bl	13f84 <fprintf@plt>
   1a668:	ldr	r3, [pc, #3600]	; 1b480 <__flatcc_gen_sort@@Base+0x1de0>
   1a66c:	mov	r2, #141	; 0x8d
   1a670:	mov	r1, r4
   1a674:	ldr	r0, [pc, #3776]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1a678:	bl	14038 <__assert_fail@plt>
   1a67c:	ldrh	r2, [r4, #56]	; 0x38
   1a680:	sub	r2, r2, #3
   1a684:	cmp	r2, #3
   1a688:	ldrls	pc, [pc, r2, lsl #2]
   1a68c:	b	1aaf0 <__flatcc_gen_sort@@Base+0x1450>
   1a690:	andeq	sl, r1, r4, ror #20
   1a694:	andeq	sl, r1, r0, lsr r8
   1a698:	andeq	sl, r1, r0, lsr #13
   1a69c:	andeq	sl, r1, r4, ror #18
   1a6a0:	ldr	r9, [pc, #3548]	; 1b484 <__flatcc_gen_sort@@Base+0x1de4>
   1a6a4:	ldr	r2, [pc, #3548]	; 1b488 <__flatcc_gen_sort@@Base+0x1de8>
   1a6a8:	str	r2, [sp, #60]	; 0x3c
   1a6ac:	ldr	r2, [pc, #3764]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1a6b0:	str	r2, [sp, #56]	; 0x38
   1a6b4:	b	1a6e0 <__flatcc_gen_sort@@Base+0x1040>
   1a6b8:	ldr	r9, [pc, #3712]	; 1b540 <__flatcc_gen_sort@@Base+0x1ea0>
   1a6bc:	ldr	r2, [pc, #3712]	; 1b544 <__flatcc_gen_sort@@Base+0x1ea4>
   1a6c0:	str	r2, [sp, #60]	; 0x3c
   1a6c4:	ldr	r2, [pc, #3740]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1a6c8:	str	r2, [sp, #56]	; 0x38
   1a6cc:	b	1a6e0 <__flatcc_gen_sort@@Base+0x1040>
   1a6d0:	ldr	r9, [pc, #3700]	; 1b54c <__flatcc_gen_sort@@Base+0x1eac>
   1a6d4:	str	r9, [sp, #60]	; 0x3c
   1a6d8:	ldr	r2, [pc, #3720]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1a6dc:	str	r2, [sp, #56]	; 0x38
   1a6e0:	sub	r3, r3, #1
   1a6e4:	cmp	r3, #8
   1a6e8:	ldrls	pc, [pc, r3, lsl #2]
   1a6ec:	b	1a778 <__flatcc_gen_sort@@Base+0x10d8>
   1a6f0:			; <UNDEFINED> instruction: 0x0001a7b0
   1a6f4:	andeq	sl, r1, r0, asr #14
   1a6f8:			; <UNDEFINED> instruction: 0x0001a7b8
   1a6fc:	andeq	sl, r1, r8, asr #14
   1a700:	andeq	sl, r1, r0, asr r7
   1a704:	andeq	sl, r1, r8, asr r7
   1a708:	andeq	sl, r1, r0, ror #14
   1a70c:	andeq	sl, r1, r8, ror #14
   1a710:	andeq	sl, r1, r0, ror r7
   1a714:	ldr	r9, [pc, #3580]	; 1b518 <__flatcc_gen_sort@@Base+0x1e78>
   1a718:	ldr	r2, [pc, #3580]	; 1b51c <__flatcc_gen_sort@@Base+0x1e7c>
   1a71c:	str	r2, [sp, #60]	; 0x3c
   1a720:	ldr	r2, [pc, #3648]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1a724:	str	r2, [sp, #56]	; 0x38
   1a728:	b	1a6e0 <__flatcc_gen_sort@@Base+0x1040>
   1a72c:	ldr	r9, [pc, #3604]	; 1b548 <__flatcc_gen_sort@@Base+0x1ea8>
   1a730:	str	r9, [sp, #60]	; 0x3c
   1a734:	ldr	r2, [pc, #3628]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1a738:	str	r2, [sp, #56]	; 0x38
   1a73c:	b	1a6e0 <__flatcc_gen_sort@@Base+0x1040>
   1a740:	ldr	r2, [pc, #3396]	; 1b48c <__flatcc_gen_sort@@Base+0x1dec>
   1a744:	b	1a7bc <__flatcc_gen_sort@@Base+0x111c>
   1a748:	ldr	r2, [pc, #3392]	; 1b490 <__flatcc_gen_sort@@Base+0x1df0>
   1a74c:	b	1a7bc <__flatcc_gen_sort@@Base+0x111c>
   1a750:	ldr	r2, [pc, #3384]	; 1b490 <__flatcc_gen_sort@@Base+0x1df0>
   1a754:	b	1a7bc <__flatcc_gen_sort@@Base+0x111c>
   1a758:	ldr	r2, [pc, #3380]	; 1b494 <__flatcc_gen_sort@@Base+0x1df4>
   1a75c:	b	1a7bc <__flatcc_gen_sort@@Base+0x111c>
   1a760:	ldr	r2, [pc, #3376]	; 1b498 <__flatcc_gen_sort@@Base+0x1df8>
   1a764:	b	1a7bc <__flatcc_gen_sort@@Base+0x111c>
   1a768:	ldr	r2, [pc, #3372]	; 1b49c <__flatcc_gen_sort@@Base+0x1dfc>
   1a76c:	b	1a7bc <__flatcc_gen_sort@@Base+0x111c>
   1a770:	ldr	r2, [pc, #3368]	; 1b4a0 <__flatcc_gen_sort@@Base+0x1e00>
   1a774:	b	1a7bc <__flatcc_gen_sort@@Base+0x111c>
   1a778:	ldr	r4, [pc, #3320]	; 1b478 <__flatcc_gen_sort@@Base+0x1dd8>
   1a77c:	ldr	r3, [pc, #3496]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1a780:	ldr	r0, [r3]
   1a784:	ldr	r3, [pc, #3312]	; 1b47c <__flatcc_gen_sort@@Base+0x1ddc>
   1a788:	str	r3, [sp]
   1a78c:	mov	r3, #226	; 0xe2
   1a790:	mov	r2, r4
   1a794:	ldr	r1, [pc, #3480]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1a798:	bl	13f84 <fprintf@plt>
   1a79c:	ldr	r3, [pc, #3328]	; 1b4a4 <__flatcc_gen_sort@@Base+0x1e04>
   1a7a0:	mov	r2, #226	; 0xe2
   1a7a4:	mov	r1, r4
   1a7a8:	ldr	r0, [pc, #3468]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1a7ac:	bl	14038 <__assert_fail@plt>
   1a7b0:	ldr	r2, [pc, #3312]	; 1b4a8 <__flatcc_gen_sort@@Base+0x1e08>
   1a7b4:	b	1a7bc <__flatcc_gen_sort@@Base+0x111c>
   1a7b8:	ldr	r2, [pc, #3308]	; 1b4ac <__flatcc_gen_sort@@Base+0x1e0c>
   1a7bc:	ldrd	r0, [r4, #48]	; 0x30
   1a7c0:	strd	r0, [sp]
   1a7c4:	ldr	r1, [pc, #3300]	; 1b4b0 <__flatcc_gen_sort@@Base+0x1e10>
   1a7c8:	add	r0, sp, #68	; 0x44
   1a7cc:	bl	13ff0 <sprintf@plt>
   1a7d0:	add	r3, sp, #68	; 0x44
   1a7d4:	str	r3, [sp, #52]	; 0x34
   1a7d8:	ldrh	r3, [r4, #74]	; 0x4a
   1a7dc:	str	r3, [sp, #48]	; 0x30
   1a7e0:	ldrd	r2, [r4, #88]	; 0x58
   1a7e4:	strd	r2, [sp, #40]	; 0x28
   1a7e8:	str	r9, [sp, #36]	; 0x24
   1a7ec:	ldr	r3, [sp, #56]	; 0x38
   1a7f0:	str	r3, [sp, #32]
   1a7f4:	ldr	r3, [sp, #60]	; 0x3c
   1a7f8:	str	r3, [sp, #28]
   1a7fc:	str	r7, [sp, #24]
   1a800:	str	r6, [sp, #20]
   1a804:	str	r5, [sp, #16]
   1a808:	add	r3, sp, #388	; 0x184
   1a80c:	str	r3, [sp, #12]
   1a810:	str	r7, [sp, #8]
   1a814:	ldrd	r2, [r4, #96]	; 0x60
   1a818:	strd	r2, [sp]
   1a81c:	mov	r2, r7
   1a820:	ldr	r1, [pc, #3212]	; 1b4b4 <__flatcc_gen_sort@@Base+0x1e14>
   1a824:	ldr	r0, [r8, #204]	; 0xcc
   1a828:	bl	13f84 <fprintf@plt>
   1a82c:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1a830:	ldr	r9, [pc, #3148]	; 1b484 <__flatcc_gen_sort@@Base+0x1de4>
   1a834:	ldr	r2, [pc, #3148]	; 1b488 <__flatcc_gen_sort@@Base+0x1de8>
   1a838:	str	r2, [sp, #60]	; 0x3c
   1a83c:	ldr	r2, [pc, #3364]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1a840:	str	r2, [sp, #56]	; 0x38
   1a844:	b	1a870 <__flatcc_gen_sort@@Base+0x11d0>
   1a848:	ldr	r9, [pc, #3312]	; 1b540 <__flatcc_gen_sort@@Base+0x1ea0>
   1a84c:	ldr	r2, [pc, #3312]	; 1b544 <__flatcc_gen_sort@@Base+0x1ea4>
   1a850:	str	r2, [sp, #60]	; 0x3c
   1a854:	ldr	r2, [pc, #3340]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1a858:	str	r2, [sp, #56]	; 0x38
   1a85c:	b	1a870 <__flatcc_gen_sort@@Base+0x11d0>
   1a860:	ldr	r9, [pc, #3300]	; 1b54c <__flatcc_gen_sort@@Base+0x1eac>
   1a864:	str	r9, [sp, #60]	; 0x3c
   1a868:	ldr	r2, [pc, #3320]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1a86c:	str	r2, [sp, #56]	; 0x38
   1a870:	sub	r3, r3, #1
   1a874:	cmp	r3, #8
   1a878:	ldrls	pc, [pc, r3, lsl #2]
   1a87c:	b	1a908 <__flatcc_gen_sort@@Base+0x1268>
   1a880:	andeq	sl, r1, r0, asr #18
   1a884:	ldrdeq	sl, [r1], -r0
   1a888:	andeq	sl, r1, r8, asr #18
   1a88c:	ldrdeq	sl, [r1], -r8
   1a890:	andeq	sl, r1, r0, ror #17
   1a894:	andeq	sl, r1, r8, ror #17
   1a898:	strdeq	sl, [r1], -r0
   1a89c:	strdeq	sl, [r1], -r8
   1a8a0:	andeq	sl, r1, r0, lsl #18
   1a8a4:	ldr	r9, [pc, #3180]	; 1b518 <__flatcc_gen_sort@@Base+0x1e78>
   1a8a8:	ldr	r2, [pc, #3180]	; 1b51c <__flatcc_gen_sort@@Base+0x1e7c>
   1a8ac:	str	r2, [sp, #60]	; 0x3c
   1a8b0:	ldr	r2, [pc, #3248]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1a8b4:	str	r2, [sp, #56]	; 0x38
   1a8b8:	b	1a870 <__flatcc_gen_sort@@Base+0x11d0>
   1a8bc:	ldr	r9, [pc, #3204]	; 1b548 <__flatcc_gen_sort@@Base+0x1ea8>
   1a8c0:	str	r9, [sp, #60]	; 0x3c
   1a8c4:	ldr	r2, [pc, #3228]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1a8c8:	str	r2, [sp, #56]	; 0x38
   1a8cc:	b	1a870 <__flatcc_gen_sort@@Base+0x11d0>
   1a8d0:	ldr	r2, [pc, #2996]	; 1b48c <__flatcc_gen_sort@@Base+0x1dec>
   1a8d4:	b	1a94c <__flatcc_gen_sort@@Base+0x12ac>
   1a8d8:	ldr	r2, [pc, #2992]	; 1b490 <__flatcc_gen_sort@@Base+0x1df0>
   1a8dc:	b	1a94c <__flatcc_gen_sort@@Base+0x12ac>
   1a8e0:	ldr	r2, [pc, #2984]	; 1b490 <__flatcc_gen_sort@@Base+0x1df0>
   1a8e4:	b	1a94c <__flatcc_gen_sort@@Base+0x12ac>
   1a8e8:	ldr	r2, [pc, #2980]	; 1b494 <__flatcc_gen_sort@@Base+0x1df4>
   1a8ec:	b	1a94c <__flatcc_gen_sort@@Base+0x12ac>
   1a8f0:	ldr	r2, [pc, #2976]	; 1b498 <__flatcc_gen_sort@@Base+0x1df8>
   1a8f4:	b	1a94c <__flatcc_gen_sort@@Base+0x12ac>
   1a8f8:	ldr	r2, [pc, #2972]	; 1b49c <__flatcc_gen_sort@@Base+0x1dfc>
   1a8fc:	b	1a94c <__flatcc_gen_sort@@Base+0x12ac>
   1a900:	ldr	r2, [pc, #2968]	; 1b4a0 <__flatcc_gen_sort@@Base+0x1e00>
   1a904:	b	1a94c <__flatcc_gen_sort@@Base+0x12ac>
   1a908:	ldr	r4, [pc, #2920]	; 1b478 <__flatcc_gen_sort@@Base+0x1dd8>
   1a90c:	ldr	r3, [pc, #3096]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1a910:	ldr	r0, [r3]
   1a914:	ldr	r3, [pc, #2912]	; 1b47c <__flatcc_gen_sort@@Base+0x1ddc>
   1a918:	str	r3, [sp]
   1a91c:	mov	r3, #226	; 0xe2
   1a920:	mov	r2, r4
   1a924:	ldr	r1, [pc, #3080]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1a928:	bl	13f84 <fprintf@plt>
   1a92c:	ldr	r3, [pc, #2928]	; 1b4a4 <__flatcc_gen_sort@@Base+0x1e04>
   1a930:	mov	r2, #226	; 0xe2
   1a934:	mov	r1, r4
   1a938:	ldr	r0, [pc, #3068]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1a93c:	bl	14038 <__assert_fail@plt>
   1a940:	ldr	r2, [pc, #2912]	; 1b4a8 <__flatcc_gen_sort@@Base+0x1e08>
   1a944:	b	1a94c <__flatcc_gen_sort@@Base+0x12ac>
   1a948:	ldr	r2, [pc, #2908]	; 1b4ac <__flatcc_gen_sort@@Base+0x1e0c>
   1a94c:	ldrd	r0, [r4, #48]	; 0x30
   1a950:	strd	r0, [sp]
   1a954:	ldr	r1, [pc, #2908]	; 1b4b8 <__flatcc_gen_sort@@Base+0x1e18>
   1a958:	add	r0, sp, #68	; 0x44
   1a95c:	bl	13ff0 <sprintf@plt>
   1a960:	b	1a7d0 <__flatcc_gen_sort@@Base+0x1130>
   1a964:	ldr	r9, [pc, #2840]	; 1b484 <__flatcc_gen_sort@@Base+0x1de4>
   1a968:	ldr	r2, [pc, #2840]	; 1b488 <__flatcc_gen_sort@@Base+0x1de8>
   1a96c:	str	r2, [sp, #60]	; 0x3c
   1a970:	ldr	r2, [pc, #3056]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1a974:	str	r2, [sp, #56]	; 0x38
   1a978:	sub	r3, r3, #1
   1a97c:	cmp	r3, #8
   1a980:	ldrls	pc, [pc, r3, lsl #2]
   1a984:	b	1aa1c <__flatcc_gen_sort@@Base+0x137c>
   1a988:	andeq	sl, r1, r4, asr sl
   1a98c:	andeq	sl, r1, ip, lsr #19
   1a990:	andeq	sl, r1, ip, asr sl
   1a994:	andeq	sl, r1, r4, asr #19
   1a998:	andeq	sl, r1, ip, asr #19
   1a99c:	ldrdeq	sl, [r1], -r4
   1a9a0:	ldrdeq	sl, [r1], -ip
   1a9a4:	strdeq	sl, [r1], -r8
   1a9a8:	andeq	sl, r1, r4, lsl sl
   1a9ac:	ldr	r2, [pc, #2776]	; 1b48c <__flatcc_gen_sort@@Base+0x1dec>
   1a9b0:	ldrb	r3, [r4, #48]	; 0x30
   1a9b4:	ldr	r1, [pc, #2816]	; 1b4bc <__flatcc_gen_sort@@Base+0x1e1c>
   1a9b8:	add	r0, sp, #68	; 0x44
   1a9bc:	bl	13ff0 <sprintf@plt>
   1a9c0:	b	1a7d0 <__flatcc_gen_sort@@Base+0x1130>
   1a9c4:	ldr	r2, [pc, #2756]	; 1b490 <__flatcc_gen_sort@@Base+0x1df0>
   1a9c8:	b	1a9b0 <__flatcc_gen_sort@@Base+0x1310>
   1a9cc:	ldr	r2, [pc, #2748]	; 1b490 <__flatcc_gen_sort@@Base+0x1df0>
   1a9d0:	b	1a9b0 <__flatcc_gen_sort@@Base+0x1310>
   1a9d4:	ldr	r2, [pc, #2744]	; 1b494 <__flatcc_gen_sort@@Base+0x1df4>
   1a9d8:	b	1a9b0 <__flatcc_gen_sort@@Base+0x1310>
   1a9dc:	ldr	r2, [pc, #2740]	; 1b498 <__flatcc_gen_sort@@Base+0x1df8>
   1a9e0:	b	1a9b0 <__flatcc_gen_sort@@Base+0x1310>
   1a9e4:	ldr	r9, [pc, #2860]	; 1b518 <__flatcc_gen_sort@@Base+0x1e78>
   1a9e8:	ldr	r3, [pc, #2860]	; 1b51c <__flatcc_gen_sort@@Base+0x1e7c>
   1a9ec:	str	r3, [sp, #60]	; 0x3c
   1a9f0:	ldr	r3, [pc, #2928]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1a9f4:	str	r3, [sp, #56]	; 0x38
   1a9f8:	ldr	r2, [pc, #2716]	; 1b49c <__flatcc_gen_sort@@Base+0x1dfc>
   1a9fc:	b	1a9b0 <__flatcc_gen_sort@@Base+0x1310>
   1aa00:	ldr	r9, [pc, #2872]	; 1b540 <__flatcc_gen_sort@@Base+0x1ea0>
   1aa04:	ldr	r3, [pc, #2872]	; 1b544 <__flatcc_gen_sort@@Base+0x1ea4>
   1aa08:	str	r3, [sp, #60]	; 0x3c
   1aa0c:	ldr	r3, [pc, #2900]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1aa10:	str	r3, [sp, #56]	; 0x38
   1aa14:	ldr	r2, [pc, #2692]	; 1b4a0 <__flatcc_gen_sort@@Base+0x1e00>
   1aa18:	b	1a9b0 <__flatcc_gen_sort@@Base+0x1310>
   1aa1c:	ldr	r4, [pc, #2644]	; 1b478 <__flatcc_gen_sort@@Base+0x1dd8>
   1aa20:	ldr	r3, [pc, #2820]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1aa24:	ldr	r0, [r3]
   1aa28:	ldr	r3, [pc, #2636]	; 1b47c <__flatcc_gen_sort@@Base+0x1ddc>
   1aa2c:	str	r3, [sp]
   1aa30:	mov	r3, #226	; 0xe2
   1aa34:	mov	r2, r4
   1aa38:	ldr	r1, [pc, #2804]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1aa3c:	bl	13f84 <fprintf@plt>
   1aa40:	ldr	r3, [pc, #2652]	; 1b4a4 <__flatcc_gen_sort@@Base+0x1e04>
   1aa44:	mov	r2, #226	; 0xe2
   1aa48:	mov	r1, r4
   1aa4c:	ldr	r0, [pc, #2792]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1aa50:	bl	14038 <__assert_fail@plt>
   1aa54:	ldr	r2, [pc, #2636]	; 1b4a8 <__flatcc_gen_sort@@Base+0x1e08>
   1aa58:	b	1a9b0 <__flatcc_gen_sort@@Base+0x1310>
   1aa5c:	ldr	r2, [pc, #2632]	; 1b4ac <__flatcc_gen_sort@@Base+0x1e0c>
   1aa60:	b	1a9b0 <__flatcc_gen_sort@@Base+0x1310>
   1aa64:	ldr	r9, [pc, #2584]	; 1b484 <__flatcc_gen_sort@@Base+0x1de4>
   1aa68:	ldr	r2, [pc, #2584]	; 1b488 <__flatcc_gen_sort@@Base+0x1de8>
   1aa6c:	str	r2, [sp, #60]	; 0x3c
   1aa70:	b	1aa8c <__flatcc_gen_sort@@Base+0x13ec>
   1aa74:	ldr	r9, [pc, #2756]	; 1b540 <__flatcc_gen_sort@@Base+0x1ea0>
   1aa78:	ldr	r2, [pc, #2756]	; 1b544 <__flatcc_gen_sort@@Base+0x1ea4>
   1aa7c:	str	r2, [sp, #60]	; 0x3c
   1aa80:	b	1aa8c <__flatcc_gen_sort@@Base+0x13ec>
   1aa84:	ldr	r9, [pc, #2752]	; 1b54c <__flatcc_gen_sort@@Base+0x1eac>
   1aa88:	str	r9, [sp, #60]	; 0x3c
   1aa8c:	cmp	r3, #11
   1aa90:	beq	1aac8 <__flatcc_gen_sort@@Base+0x1428>
   1aa94:	ldr	r3, [pc, #2764]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1aa98:	str	r3, [sp, #56]	; 0x38
   1aa9c:	ldrd	r2, [r4, #48]	; 0x30
   1aaa0:	ldr	r1, [pc, #2584]	; 1b4c0 <__flatcc_gen_sort@@Base+0x1e20>
   1aaa4:	add	r0, sp, #68	; 0x44
   1aaa8:	bl	13ff0 <sprintf@plt>
   1aaac:	b	1a7d0 <__flatcc_gen_sort@@Base+0x1130>
   1aab0:	ldr	r9, [pc, #2656]	; 1b518 <__flatcc_gen_sort@@Base+0x1e78>
   1aab4:	ldr	r2, [pc, #2656]	; 1b51c <__flatcc_gen_sort@@Base+0x1e7c>
   1aab8:	str	r2, [sp, #60]	; 0x3c
   1aabc:	b	1aa8c <__flatcc_gen_sort@@Base+0x13ec>
   1aac0:	ldr	r9, [pc, #2688]	; 1b548 <__flatcc_gen_sort@@Base+0x1ea8>
   1aac4:	str	r9, [sp, #60]	; 0x3c
   1aac8:	vldr	d7, [r4, #48]	; 0x30
   1aacc:	vcvt.f32.f64	s14, d7
   1aad0:	vcvt.f64.f32	d7, s14
   1aad4:	vmov	r2, r3, d7
   1aad8:	ldr	r1, [pc, #2532]	; 1b4c4 <__flatcc_gen_sort@@Base+0x1e24>
   1aadc:	add	r0, sp, #68	; 0x44
   1aae0:	bl	13ff0 <sprintf@plt>
   1aae4:	ldr	r3, [pc, #2684]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1aae8:	str	r3, [sp, #56]	; 0x38
   1aaec:	b	1a7d0 <__flatcc_gen_sort@@Base+0x1130>
   1aaf0:	ldr	r4, [pc, #2432]	; 1b478 <__flatcc_gen_sort@@Base+0x1dd8>
   1aaf4:	ldr	r3, [pc, #2608]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1aaf8:	ldr	r0, [r3]
   1aafc:	ldr	r3, [pc, #2424]	; 1b47c <__flatcc_gen_sort@@Base+0x1ddc>
   1ab00:	str	r3, [sp]
   1ab04:	mov	r3, #260	; 0x104
   1ab08:	mov	r2, r4
   1ab0c:	ldr	r1, [pc, #2592]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1ab10:	bl	13f84 <fprintf@plt>
   1ab14:	ldr	r3, [pc, #2476]	; 1b4c8 <__flatcc_gen_sort@@Base+0x1e28>
   1ab18:	mov	r2, #260	; 0x104
   1ab1c:	mov	r1, r4
   1ab20:	ldr	r0, [pc, #2580]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1ab24:	bl	14038 <__assert_fail@plt>
   1ab28:	ldr	r3, [r4, #16]
   1ab2c:	cmp	r3, #5
   1ab30:	beq	1b680 <__flatcc_gen_sort@@Base+0x1fe0>
   1ab34:	sub	r3, r3, #1
   1ab38:	cmp	r3, #10
   1ab3c:	ldrls	pc, [pc, r3, lsl #2]
   1ab40:	b	1ab70 <__flatcc_gen_sort@@Base+0x14d0>
   1ab44:	andeq	sl, r1, r8, lsr #23
   1ab48:	andeq	fp, r1, r0, asr r6
   1ab4c:	andeq	fp, r1, r0, ror #12
   1ab50:	andeq	fp, r1, r0, ror r6
   1ab54:	muleq	r1, r0, r6
   1ab58:	muleq	r1, r8, r6
   1ab5c:	andeq	fp, r1, r0, ror #8
   1ab60:	andeq	fp, r1, ip, ror r5
   1ab64:	andeq	fp, r1, r0, lsr #12
   1ab68:	andeq	fp, r1, r0, asr #12
   1ab6c:	andeq	fp, r1, r0, lsr r6
   1ab70:	ldr	r4, [pc, #2304]	; 1b478 <__flatcc_gen_sort@@Base+0x1dd8>
   1ab74:	ldr	r3, [pc, #2480]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1ab78:	ldr	r0, [r3]
   1ab7c:	ldr	r3, [pc, #2296]	; 1b47c <__flatcc_gen_sort@@Base+0x1ddc>
   1ab80:	str	r3, [sp]
   1ab84:	mov	r3, #141	; 0x8d
   1ab88:	mov	r2, r4
   1ab8c:	ldr	r1, [pc, #2464]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1ab90:	bl	13f84 <fprintf@plt>
   1ab94:	ldr	r3, [pc, #2276]	; 1b480 <__flatcc_gen_sort@@Base+0x1de0>
   1ab98:	mov	r2, #141	; 0x8d
   1ab9c:	mov	r1, r4
   1aba0:	ldr	r0, [pc, #2452]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1aba4:	bl	14038 <__assert_fail@plt>
   1aba8:	ldr	r2, [pc, #2260]	; 1b484 <__flatcc_gen_sort@@Base+0x1de4>
   1abac:	ldr	r3, [pc, #2484]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1abb0:	ldr	r1, [pc, #2256]	; 1b488 <__flatcc_gen_sort@@Base+0x1de8>
   1abb4:	b	1b588 <__flatcc_gen_sort@@Base+0x1ee8>
   1abb8:	add	r9, sp, #168	; 0xa8
   1abbc:	mov	r2, r9
   1abc0:	mov	r1, r3
   1abc4:	ldr	r0, [r3, #12]
   1abc8:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1abcc:	str	r9, [sp, #20]
   1abd0:	str	r9, [sp, #16]
   1abd4:	str	r9, [sp, #12]
   1abd8:	str	r6, [sp, #8]
   1abdc:	str	r5, [sp, #4]
   1abe0:	add	r3, sp, #388	; 0x184
   1abe4:	str	r3, [sp]
   1abe8:	mov	r3, r7
   1abec:	mov	r2, r7
   1abf0:	ldr	r1, [pc, #2260]	; 1b4cc <__flatcc_gen_sort@@Base+0x1e2c>
   1abf4:	ldr	r0, [r8, #204]	; 0xcc
   1abf8:	bl	13f84 <fprintf@plt>
   1abfc:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1ac00:	add	r9, sp, #168	; 0xa8
   1ac04:	mov	r2, r9
   1ac08:	mov	r1, r3
   1ac0c:	ldr	r0, [r3, #12]
   1ac10:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1ac14:	str	r9, [sp, #24]
   1ac18:	str	r9, [sp, #20]
   1ac1c:	ldr	r3, [r4, #104]	; 0x68
   1ac20:	ldrh	r3, [r3, #104]	; 0x68
   1ac24:	str	r3, [sp, #16]
   1ac28:	str	r9, [sp, #12]
   1ac2c:	str	r6, [sp, #8]
   1ac30:	str	r5, [sp, #4]
   1ac34:	add	r3, sp, #388	; 0x184
   1ac38:	str	r3, [sp]
   1ac3c:	mov	r3, r7
   1ac40:	mov	r2, r7
   1ac44:	ldr	r1, [pc, #2180]	; 1b4d0 <__flatcc_gen_sort@@Base+0x1e30>
   1ac48:	ldr	r0, [r8, #204]	; 0xcc
   1ac4c:	bl	13f84 <fprintf@plt>
   1ac50:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1ac54:	str	r6, [sp, #20]
   1ac58:	str	r5, [sp, #16]
   1ac5c:	add	r3, sp, #388	; 0x184
   1ac60:	str	r3, [sp, #12]
   1ac64:	str	r7, [sp, #8]
   1ac68:	ldrd	r2, [r4, #96]	; 0x60
   1ac6c:	strd	r2, [sp]
   1ac70:	mov	r2, r7
   1ac74:	ldr	r1, [pc, #2136]	; 1b4d4 <__flatcc_gen_sort@@Base+0x1e34>
   1ac78:	ldr	r0, [r8, #204]	; 0xcc
   1ac7c:	bl	13f84 <fprintf@plt>
   1ac80:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1ac84:	str	r6, [sp, #20]
   1ac88:	str	r5, [sp, #16]
   1ac8c:	add	r3, sp, #388	; 0x184
   1ac90:	str	r3, [sp, #12]
   1ac94:	str	r7, [sp, #8]
   1ac98:	ldrd	r2, [r4, #96]	; 0x60
   1ac9c:	strd	r2, [sp]
   1aca0:	mov	r2, r7
   1aca4:	ldr	r1, [pc, #2092]	; 1b4d8 <__flatcc_gen_sort@@Base+0x1e38>
   1aca8:	ldr	r0, [r8, #204]	; 0xcc
   1acac:	bl	13f84 <fprintf@plt>
   1acb0:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1acb4:	ldr	r3, [r4, #16]
   1acb8:	add	r2, sp, #168	; 0xa8
   1acbc:	mov	r1, r3
   1acc0:	ldr	r0, [r3, #12]
   1acc4:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1acc8:	ldr	r2, [r4, #16]
   1accc:	ldrh	r3, [r2, #8]
   1acd0:	cmp	r3, #4
   1acd4:	ldrls	pc, [pc, r3, lsl #2]
   1acd8:	b	1b0fc <__flatcc_gen_sort@@Base+0x1a5c>
   1acdc:	andeq	sl, r1, r8, lsr sp
   1ace0:	strdeq	sl, [r1], -r0
   1ace4:	strdeq	fp, [r1], -ip
   1ace8:	andeq	sl, r1, r0, ror sp
   1acec:	andeq	fp, r1, r0, lsr #1
   1acf0:	ldrh	r3, [r4, #74]	; 0x4a
   1acf4:	str	r3, [sp, #40]	; 0x28
   1acf8:	ldrd	r2, [r4, #88]	; 0x58
   1acfc:	strd	r2, [sp, #32]
   1ad00:	add	r3, sp, #168	; 0xa8
   1ad04:	str	r3, [sp, #24]
   1ad08:	str	r6, [sp, #20]
   1ad0c:	str	r5, [sp, #16]
   1ad10:	add	r3, sp, #388	; 0x184
   1ad14:	str	r3, [sp, #12]
   1ad18:	str	r7, [sp, #8]
   1ad1c:	ldrd	r2, [r4, #96]	; 0x60
   1ad20:	strd	r2, [sp]
   1ad24:	mov	r2, r7
   1ad28:	ldr	r1, [pc, #1964]	; 1b4dc <__flatcc_gen_sort@@Base+0x1e3c>
   1ad2c:	ldr	r0, [r8, #204]	; 0xcc
   1ad30:	bl	13f84 <fprintf@plt>
   1ad34:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1ad38:	add	r3, sp, #168	; 0xa8
   1ad3c:	str	r3, [sp, #24]
   1ad40:	str	r6, [sp, #20]
   1ad44:	str	r5, [sp, #16]
   1ad48:	add	r3, sp, #388	; 0x184
   1ad4c:	str	r3, [sp, #12]
   1ad50:	str	r7, [sp, #8]
   1ad54:	ldrd	r2, [r4, #96]	; 0x60
   1ad58:	strd	r2, [sp]
   1ad5c:	mov	r2, r7
   1ad60:	ldr	r1, [pc, #1912]	; 1b4e0 <__flatcc_gen_sort@@Base+0x1e40>
   1ad64:	ldr	r0, [r8, #204]	; 0xcc
   1ad68:	bl	13f84 <fprintf@plt>
   1ad6c:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1ad70:	ldr	r2, [r2, #40]	; 0x28
   1ad74:	ldrh	r3, [r4, #56]	; 0x38
   1ad78:	sub	r3, r3, #3
   1ad7c:	cmp	r3, #3
   1ad80:	ldrls	pc, [pc, r3, lsl #2]
   1ad84:	b	1b068 <__flatcc_gen_sort@@Base+0x19c8>
   1ad88:	andeq	sl, r1, ip, ror #31
   1ad8c:	andeq	sl, r1, r0, ror #28
   1ad90:	muleq	r1, r8, sp
   1ad94:	andeq	sl, r1, r8, lsr #30
   1ad98:	sub	r2, r2, #1
   1ad9c:	cmp	r2, #8
   1ada0:	ldrls	pc, [pc, r2, lsl #2]
   1ada4:	b	1ae18 <__flatcc_gen_sort@@Base+0x1778>
   1ada8:	andeq	sl, r1, r0, asr lr
   1adac:	andeq	sl, r1, ip, asr #27
   1adb0:	andeq	sl, r1, r8, asr lr
   1adb4:	andeq	sl, r1, r8, ror #27
   1adb8:	strdeq	sl, [r1], -r0
   1adbc:	strdeq	sl, [r1], -r8
   1adc0:	andeq	sl, r1, r0, lsl #28
   1adc4:	andeq	sl, r1, r8, lsl #28
   1adc8:	andeq	sl, r1, r0, lsl lr
   1adcc:	ldr	r2, [pc, #1720]	; 1b48c <__flatcc_gen_sort@@Base+0x1dec>
   1add0:	ldrd	r0, [r4, #48]	; 0x30
   1add4:	strd	r0, [sp]
   1add8:	ldr	r1, [pc, #1744]	; 1b4b0 <__flatcc_gen_sort@@Base+0x1e10>
   1addc:	add	r0, sp, #68	; 0x44
   1ade0:	bl	13ff0 <sprintf@plt>
   1ade4:	b	1b014 <__flatcc_gen_sort@@Base+0x1974>
   1ade8:	ldr	r2, [pc, #1696]	; 1b490 <__flatcc_gen_sort@@Base+0x1df0>
   1adec:	b	1add0 <__flatcc_gen_sort@@Base+0x1730>
   1adf0:	ldr	r2, [pc, #1688]	; 1b490 <__flatcc_gen_sort@@Base+0x1df0>
   1adf4:	b	1add0 <__flatcc_gen_sort@@Base+0x1730>
   1adf8:	ldr	r2, [pc, #1684]	; 1b494 <__flatcc_gen_sort@@Base+0x1df4>
   1adfc:	b	1add0 <__flatcc_gen_sort@@Base+0x1730>
   1ae00:	ldr	r2, [pc, #1680]	; 1b498 <__flatcc_gen_sort@@Base+0x1df8>
   1ae04:	b	1add0 <__flatcc_gen_sort@@Base+0x1730>
   1ae08:	ldr	r2, [pc, #1676]	; 1b49c <__flatcc_gen_sort@@Base+0x1dfc>
   1ae0c:	b	1add0 <__flatcc_gen_sort@@Base+0x1730>
   1ae10:	ldr	r2, [pc, #1672]	; 1b4a0 <__flatcc_gen_sort@@Base+0x1e00>
   1ae14:	b	1add0 <__flatcc_gen_sort@@Base+0x1730>
   1ae18:	ldr	r4, [pc, #1624]	; 1b478 <__flatcc_gen_sort@@Base+0x1dd8>
   1ae1c:	ldr	r3, [pc, #1800]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1ae20:	ldr	r0, [r3]
   1ae24:	ldr	r3, [pc, #1616]	; 1b47c <__flatcc_gen_sort@@Base+0x1ddc>
   1ae28:	str	r3, [sp]
   1ae2c:	mov	r3, #226	; 0xe2
   1ae30:	mov	r2, r4
   1ae34:	ldr	r1, [pc, #1784]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1ae38:	bl	13f84 <fprintf@plt>
   1ae3c:	ldr	r3, [pc, #1632]	; 1b4a4 <__flatcc_gen_sort@@Base+0x1e04>
   1ae40:	mov	r2, #226	; 0xe2
   1ae44:	mov	r1, r4
   1ae48:	ldr	r0, [pc, #1772]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1ae4c:	bl	14038 <__assert_fail@plt>
   1ae50:	ldr	r2, [pc, #1616]	; 1b4a8 <__flatcc_gen_sort@@Base+0x1e08>
   1ae54:	b	1add0 <__flatcc_gen_sort@@Base+0x1730>
   1ae58:	ldr	r2, [pc, #1612]	; 1b4ac <__flatcc_gen_sort@@Base+0x1e0c>
   1ae5c:	b	1add0 <__flatcc_gen_sort@@Base+0x1730>
   1ae60:	sub	r2, r2, #1
   1ae64:	cmp	r2, #8
   1ae68:	ldrls	pc, [pc, r2, lsl #2]
   1ae6c:	b	1aee0 <__flatcc_gen_sort@@Base+0x1840>
   1ae70:	andeq	sl, r1, r8, lsl pc
   1ae74:	muleq	r1, r4, lr
   1ae78:	andeq	sl, r1, r0, lsr #30
   1ae7c:			; <UNDEFINED> instruction: 0x0001aeb0
   1ae80:			; <UNDEFINED> instruction: 0x0001aeb8
   1ae84:	andeq	sl, r1, r0, asr #29
   1ae88:	andeq	sl, r1, r8, asr #29
   1ae8c:	ldrdeq	sl, [r1], -r0
   1ae90:	ldrdeq	sl, [r1], -r8
   1ae94:	ldr	r2, [pc, #1520]	; 1b48c <__flatcc_gen_sort@@Base+0x1dec>
   1ae98:	ldrd	r0, [r4, #48]	; 0x30
   1ae9c:	strd	r0, [sp]
   1aea0:	ldr	r1, [pc, #1552]	; 1b4b8 <__flatcc_gen_sort@@Base+0x1e18>
   1aea4:	add	r0, sp, #68	; 0x44
   1aea8:	bl	13ff0 <sprintf@plt>
   1aeac:	b	1b014 <__flatcc_gen_sort@@Base+0x1974>
   1aeb0:	ldr	r2, [pc, #1496]	; 1b490 <__flatcc_gen_sort@@Base+0x1df0>
   1aeb4:	b	1ae98 <__flatcc_gen_sort@@Base+0x17f8>
   1aeb8:	ldr	r2, [pc, #1488]	; 1b490 <__flatcc_gen_sort@@Base+0x1df0>
   1aebc:	b	1ae98 <__flatcc_gen_sort@@Base+0x17f8>
   1aec0:	ldr	r2, [pc, #1484]	; 1b494 <__flatcc_gen_sort@@Base+0x1df4>
   1aec4:	b	1ae98 <__flatcc_gen_sort@@Base+0x17f8>
   1aec8:	ldr	r2, [pc, #1480]	; 1b498 <__flatcc_gen_sort@@Base+0x1df8>
   1aecc:	b	1ae98 <__flatcc_gen_sort@@Base+0x17f8>
   1aed0:	ldr	r2, [pc, #1476]	; 1b49c <__flatcc_gen_sort@@Base+0x1dfc>
   1aed4:	b	1ae98 <__flatcc_gen_sort@@Base+0x17f8>
   1aed8:	ldr	r2, [pc, #1472]	; 1b4a0 <__flatcc_gen_sort@@Base+0x1e00>
   1aedc:	b	1ae98 <__flatcc_gen_sort@@Base+0x17f8>
   1aee0:	ldr	r4, [pc, #1424]	; 1b478 <__flatcc_gen_sort@@Base+0x1dd8>
   1aee4:	ldr	r3, [pc, #1600]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1aee8:	ldr	r0, [r3]
   1aeec:	ldr	r3, [pc, #1416]	; 1b47c <__flatcc_gen_sort@@Base+0x1ddc>
   1aef0:	str	r3, [sp]
   1aef4:	mov	r3, #226	; 0xe2
   1aef8:	mov	r2, r4
   1aefc:	ldr	r1, [pc, #1584]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1af00:	bl	13f84 <fprintf@plt>
   1af04:	ldr	r3, [pc, #1432]	; 1b4a4 <__flatcc_gen_sort@@Base+0x1e04>
   1af08:	mov	r2, #226	; 0xe2
   1af0c:	mov	r1, r4
   1af10:	ldr	r0, [pc, #1572]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1af14:	bl	14038 <__assert_fail@plt>
   1af18:	ldr	r2, [pc, #1416]	; 1b4a8 <__flatcc_gen_sort@@Base+0x1e08>
   1af1c:	b	1ae98 <__flatcc_gen_sort@@Base+0x17f8>
   1af20:	ldr	r2, [pc, #1412]	; 1b4ac <__flatcc_gen_sort@@Base+0x1e0c>
   1af24:	b	1ae98 <__flatcc_gen_sort@@Base+0x17f8>
   1af28:	sub	r2, r2, #1
   1af2c:	cmp	r2, #8
   1af30:	ldrls	pc, [pc, r2, lsl #2]
   1af34:	b	1afa4 <__flatcc_gen_sort@@Base+0x1904>
   1af38:	ldrdeq	sl, [r1], -ip
   1af3c:	andeq	sl, r1, ip, asr pc
   1af40:	andeq	sl, r1, r4, ror #31
   1af44:	andeq	sl, r1, r4, ror pc
   1af48:	andeq	sl, r1, ip, ror pc
   1af4c:	andeq	sl, r1, r4, lsl #31
   1af50:	andeq	sl, r1, ip, lsl #31
   1af54:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1af58:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1af5c:	ldr	r2, [pc, #1320]	; 1b48c <__flatcc_gen_sort@@Base+0x1dec>
   1af60:	ldrb	r3, [r4, #48]	; 0x30
   1af64:	ldr	r1, [pc, #1360]	; 1b4bc <__flatcc_gen_sort@@Base+0x1e1c>
   1af68:	add	r0, sp, #68	; 0x44
   1af6c:	bl	13ff0 <sprintf@plt>
   1af70:	b	1b014 <__flatcc_gen_sort@@Base+0x1974>
   1af74:	ldr	r2, [pc, #1300]	; 1b490 <__flatcc_gen_sort@@Base+0x1df0>
   1af78:	b	1af60 <__flatcc_gen_sort@@Base+0x18c0>
   1af7c:	ldr	r2, [pc, #1292]	; 1b490 <__flatcc_gen_sort@@Base+0x1df0>
   1af80:	b	1af60 <__flatcc_gen_sort@@Base+0x18c0>
   1af84:	ldr	r2, [pc, #1288]	; 1b494 <__flatcc_gen_sort@@Base+0x1df4>
   1af88:	b	1af60 <__flatcc_gen_sort@@Base+0x18c0>
   1af8c:	ldr	r2, [pc, #1284]	; 1b498 <__flatcc_gen_sort@@Base+0x1df8>
   1af90:	b	1af60 <__flatcc_gen_sort@@Base+0x18c0>
   1af94:	ldr	r2, [pc, #1280]	; 1b49c <__flatcc_gen_sort@@Base+0x1dfc>
   1af98:	b	1af60 <__flatcc_gen_sort@@Base+0x18c0>
   1af9c:	ldr	r2, [pc, #1276]	; 1b4a0 <__flatcc_gen_sort@@Base+0x1e00>
   1afa0:	b	1af60 <__flatcc_gen_sort@@Base+0x18c0>
   1afa4:	ldr	r4, [pc, #1228]	; 1b478 <__flatcc_gen_sort@@Base+0x1dd8>
   1afa8:	ldr	r3, [pc, #1404]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1afac:	ldr	r0, [r3]
   1afb0:	ldr	r3, [pc, #1220]	; 1b47c <__flatcc_gen_sort@@Base+0x1ddc>
   1afb4:	str	r3, [sp]
   1afb8:	mov	r3, #226	; 0xe2
   1afbc:	mov	r2, r4
   1afc0:	ldr	r1, [pc, #1388]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1afc4:	bl	13f84 <fprintf@plt>
   1afc8:	ldr	r3, [pc, #1236]	; 1b4a4 <__flatcc_gen_sort@@Base+0x1e04>
   1afcc:	mov	r2, #226	; 0xe2
   1afd0:	mov	r1, r4
   1afd4:	ldr	r0, [pc, #1376]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1afd8:	bl	14038 <__assert_fail@plt>
   1afdc:	ldr	r2, [pc, #1220]	; 1b4a8 <__flatcc_gen_sort@@Base+0x1e08>
   1afe0:	b	1af60 <__flatcc_gen_sort@@Base+0x18c0>
   1afe4:	ldr	r2, [pc, #1216]	; 1b4ac <__flatcc_gen_sort@@Base+0x1e0c>
   1afe8:	b	1af60 <__flatcc_gen_sort@@Base+0x18c0>
   1afec:	cmp	r2, #11
   1aff0:	vldreq	d7, [r4, #48]	; 0x30
   1aff4:	vcvteq.f32.f64	s14, d7
   1aff8:	vcvteq.f64.f32	d7, s14
   1affc:	vmoveq	r2, r3, d7
   1b000:	ldreq	r1, [pc, #1212]	; 1b4c4 <__flatcc_gen_sort@@Base+0x1e24>
   1b004:	ldrdne	r2, [r4, #48]	; 0x30
   1b008:	ldrne	r1, [pc, #1200]	; 1b4c0 <__flatcc_gen_sort@@Base+0x1e20>
   1b00c:	add	r0, sp, #68	; 0x44
   1b010:	bl	13ff0 <sprintf@plt>
   1b014:	add	r3, sp, #68	; 0x44
   1b018:	str	r3, [sp, #44]	; 0x2c
   1b01c:	ldrh	r3, [r4, #74]	; 0x4a
   1b020:	str	r3, [sp, #40]	; 0x28
   1b024:	ldrd	r2, [r4, #88]	; 0x58
   1b028:	strd	r2, [sp, #32]
   1b02c:	add	r3, sp, #168	; 0xa8
   1b030:	str	r3, [sp, #28]
   1b034:	str	r3, [sp, #24]
   1b038:	str	r6, [sp, #20]
   1b03c:	str	r5, [sp, #16]
   1b040:	add	r3, sp, #388	; 0x184
   1b044:	str	r3, [sp, #12]
   1b048:	str	r7, [sp, #8]
   1b04c:	ldrd	r2, [r4, #96]	; 0x60
   1b050:	strd	r2, [sp]
   1b054:	mov	r2, r7
   1b058:	ldr	r1, [pc, #1156]	; 1b4e4 <__flatcc_gen_sort@@Base+0x1e44>
   1b05c:	ldr	r0, [r8, #204]	; 0xcc
   1b060:	bl	13f84 <fprintf@plt>
   1b064:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1b068:	ldr	r4, [pc, #1032]	; 1b478 <__flatcc_gen_sort@@Base+0x1dd8>
   1b06c:	ldr	r3, [pc, #1208]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1b070:	ldr	r0, [r3]
   1b074:	ldr	r3, [pc, #1024]	; 1b47c <__flatcc_gen_sort@@Base+0x1ddc>
   1b078:	str	r3, [sp]
   1b07c:	mov	r3, #260	; 0x104
   1b080:	mov	r2, r4
   1b084:	ldr	r1, [pc, #1192]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1b088:	bl	13f84 <fprintf@plt>
   1b08c:	ldr	r3, [pc, #1076]	; 1b4c8 <__flatcc_gen_sort@@Base+0x1e28>
   1b090:	mov	r2, #260	; 0x104
   1b094:	mov	r1, r4
   1b098:	ldr	r0, [pc, #1180]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1b09c:	bl	14038 <__assert_fail@plt>
   1b0a0:	add	r3, sp, #168	; 0xa8
   1b0a4:	str	r3, [sp, #24]
   1b0a8:	str	r6, [sp, #20]
   1b0ac:	str	r5, [sp, #16]
   1b0b0:	add	r9, sp, #388	; 0x184
   1b0b4:	str	r9, [sp, #12]
   1b0b8:	str	r7, [sp, #8]
   1b0bc:	ldrd	r2, [r4, #96]	; 0x60
   1b0c0:	strd	r2, [sp]
   1b0c4:	mov	r2, r7
   1b0c8:	ldr	r1, [pc, #1048]	; 1b4e8 <__flatcc_gen_sort@@Base+0x1e48>
   1b0cc:	ldr	r0, [r8, #204]	; 0xcc
   1b0d0:	bl	13f84 <fprintf@plt>
   1b0d4:	mov	r3, #0
   1b0d8:	str	r3, [sp, #4]
   1b0dc:	ldr	r3, [r4, #16]
   1b0e0:	str	r3, [sp]
   1b0e4:	mov	r3, r6
   1b0e8:	mov	r2, r5
   1b0ec:	mov	r1, r9
   1b0f0:	mov	r0, r8
   1b0f4:	bl	19834 <__flatcc_gen_sort@@Base+0x194>
   1b0f8:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1b0fc:	ldr	r4, [pc, #1060]	; 1b528 <__flatcc_gen_sort@@Base+0x1e88>
   1b100:	ldr	r3, [pc, #1060]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1b104:	ldr	r0, [r3]
   1b108:	ldr	r3, [pc, #988]	; 1b4ec <__flatcc_gen_sort@@Base+0x1e4c>
   1b10c:	str	r3, [sp]
   1b110:	mov	r3, #1472	; 0x5c0
   1b114:	mov	r2, r4
   1b118:	ldr	r1, [pc, #1044]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1b11c:	bl	13f84 <fprintf@plt>
   1b120:	ldr	r3, [pc, #1040]	; 1b538 <__flatcc_gen_sort@@Base+0x1e98>
   1b124:	mov	r2, #1472	; 0x5c0
   1b128:	mov	r1, r4
   1b12c:	ldr	r0, [pc, #1032]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1b130:	bl	14038 <__assert_fail@plt>
   1b134:	ldr	r3, [r4, #16]
   1b138:	add	r2, sp, #168	; 0xa8
   1b13c:	mov	r1, r3
   1b140:	ldr	r0, [r3, #12]
   1b144:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1b148:	ldr	r2, [r4, #16]
   1b14c:	ldrh	r3, [r2, #8]
   1b150:	cmp	r3, #4
   1b154:	ldrls	pc, [pc, r3, lsl #2]
   1b158:	b	1b2c4 <__flatcc_gen_sort@@Base+0x1c24>
   1b15c:	ldrdeq	fp, [r1], -r0
   1b160:	andeq	fp, r1, r0, ror r1
   1b164:	andeq	fp, r1, r4, asr #5
   1b168:	andeq	fp, r1, ip, lsr #4
   1b16c:	andeq	fp, r1, r8, ror #4
   1b170:	ldrh	r3, [r2, #10]
   1b174:	tst	r3, #8
   1b178:	bne	1b1b8 <__flatcc_gen_sort@@Base+0x1b18>
   1b17c:	add	r3, sp, #168	; 0xa8
   1b180:	str	r3, [sp, #28]
   1b184:	str	r3, [sp, #24]
   1b188:	str	r6, [sp, #20]
   1b18c:	str	r5, [sp, #16]
   1b190:	add	r3, sp, #388	; 0x184
   1b194:	str	r3, [sp, #12]
   1b198:	str	r7, [sp, #8]
   1b19c:	ldrd	r2, [r4, #96]	; 0x60
   1b1a0:	strd	r2, [sp]
   1b1a4:	mov	r2, r7
   1b1a8:	mov	r1, fp
   1b1ac:	ldr	r0, [r8, #204]	; 0xcc
   1b1b0:	bl	13f84 <fprintf@plt>
   1b1b4:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1b1b8:	ldr	r3, [r8, #204]	; 0xcc
   1b1bc:	mov	r2, #32
   1b1c0:	mov	r1, #1
   1b1c4:	ldr	r0, [pc, #804]	; 1b4f0 <__flatcc_gen_sort@@Base+0x1e50>
   1b1c8:	bl	13f18 <fwrite@plt>
   1b1cc:	b	1b17c <__flatcc_gen_sort@@Base+0x1adc>
   1b1d0:	ldrh	r3, [r2, #10]
   1b1d4:	tst	r3, #8
   1b1d8:	bne	1b214 <__flatcc_gen_sort@@Base+0x1b74>
   1b1dc:	add	r3, sp, #168	; 0xa8
   1b1e0:	str	r3, [sp, #24]
   1b1e4:	str	r6, [sp, #20]
   1b1e8:	str	r5, [sp, #16]
   1b1ec:	add	r3, sp, #388	; 0x184
   1b1f0:	str	r3, [sp, #12]
   1b1f4:	str	r7, [sp, #8]
   1b1f8:	ldrd	r2, [r4, #96]	; 0x60
   1b1fc:	strd	r2, [sp]
   1b200:	mov	r2, r7
   1b204:	ldr	r1, [pc, #744]	; 1b4f4 <__flatcc_gen_sort@@Base+0x1e54>
   1b208:	ldr	r0, [r8, #204]	; 0xcc
   1b20c:	bl	13f84 <fprintf@plt>
   1b210:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1b214:	ldr	r3, [r8, #204]	; 0xcc
   1b218:	mov	r2, #32
   1b21c:	mov	r1, #1
   1b220:	ldr	r0, [pc, #712]	; 1b4f0 <__flatcc_gen_sort@@Base+0x1e50>
   1b224:	bl	13f18 <fwrite@plt>
   1b228:	b	1b1dc <__flatcc_gen_sort@@Base+0x1b3c>
   1b22c:	add	r3, sp, #168	; 0xa8
   1b230:	str	r3, [sp, #28]
   1b234:	str	r3, [sp, #24]
   1b238:	str	r6, [sp, #20]
   1b23c:	str	r5, [sp, #16]
   1b240:	add	r3, sp, #388	; 0x184
   1b244:	str	r3, [sp, #12]
   1b248:	str	r7, [sp, #8]
   1b24c:	ldrd	r2, [r4, #96]	; 0x60
   1b250:	strd	r2, [sp]
   1b254:	mov	r2, r7
   1b258:	ldr	r1, [pc, #664]	; 1b4f8 <__flatcc_gen_sort@@Base+0x1e58>
   1b25c:	ldr	r0, [r8, #204]	; 0xcc
   1b260:	bl	13f84 <fprintf@plt>
   1b264:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1b268:	add	r3, sp, #168	; 0xa8
   1b26c:	str	r3, [sp, #24]
   1b270:	str	r6, [sp, #20]
   1b274:	str	r5, [sp, #16]
   1b278:	add	r9, sp, #388	; 0x184
   1b27c:	str	r9, [sp, #12]
   1b280:	str	r7, [sp, #8]
   1b284:	ldrd	r2, [r4, #96]	; 0x60
   1b288:	strd	r2, [sp]
   1b28c:	mov	r2, r7
   1b290:	ldr	r1, [pc, #612]	; 1b4fc <__flatcc_gen_sort@@Base+0x1e5c>
   1b294:	ldr	r0, [r8, #204]	; 0xcc
   1b298:	bl	13f84 <fprintf@plt>
   1b29c:	mov	r3, #1
   1b2a0:	str	r3, [sp, #4]
   1b2a4:	ldr	r3, [r4, #16]
   1b2a8:	str	r3, [sp]
   1b2ac:	mov	r3, r6
   1b2b0:	mov	r2, r5
   1b2b4:	mov	r1, r9
   1b2b8:	mov	r0, r8
   1b2bc:	bl	19834 <__flatcc_gen_sort@@Base+0x194>
   1b2c0:	b	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1b2c4:	ldr	r5, [pc, #564]	; 1b500 <__flatcc_gen_sort@@Base+0x1e60>
   1b2c8:	ldr	r4, [pc, #600]	; 1b528 <__flatcc_gen_sort@@Base+0x1e88>
   1b2cc:	ldr	r3, [pc, #600]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1b2d0:	ldr	r0, [r3]
   1b2d4:	ldr	r3, [pc, #552]	; 1b504 <__flatcc_gen_sort@@Base+0x1e64>
   1b2d8:	str	r3, [sp]
   1b2dc:	mov	r3, r5
   1b2e0:	mov	r2, r4
   1b2e4:	ldr	r1, [pc, #584]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1b2e8:	bl	13f84 <fprintf@plt>
   1b2ec:	ldr	r3, [pc, #580]	; 1b538 <__flatcc_gen_sort@@Base+0x1e98>
   1b2f0:	mov	r2, r5
   1b2f4:	mov	r1, r4
   1b2f8:	ldr	r0, [pc, #572]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1b2fc:	bl	14038 <__assert_fail@plt>
   1b300:	ldr	r5, [pc, #512]	; 1b508 <__flatcc_gen_sort@@Base+0x1e68>
   1b304:	ldr	r4, [pc, #540]	; 1b528 <__flatcc_gen_sort@@Base+0x1e88>
   1b308:	ldr	r3, [pc, #540]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1b30c:	ldr	r0, [r3]
   1b310:	ldr	r3, [pc, #500]	; 1b50c <__flatcc_gen_sort@@Base+0x1e6c>
   1b314:	str	r3, [sp]
   1b318:	mov	r3, r5
   1b31c:	mov	r2, r4
   1b320:	ldr	r1, [pc, #524]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1b324:	bl	13f84 <fprintf@plt>
   1b328:	ldr	r3, [pc, #520]	; 1b538 <__flatcc_gen_sort@@Base+0x1e98>
   1b32c:	mov	r2, r5
   1b330:	mov	r1, r4
   1b334:	ldr	r0, [pc, #512]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1b338:	bl	14038 <__assert_fail@plt>
   1b33c:	ldr	r9, [pc, #524]	; 1b550 <__flatcc_gen_sort@@Base+0x1eb0>
   1b340:	ldr	r2, [pc, #544]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b344:	str	r2, [sp, #56]	; 0x38
   1b348:	ldr	r2, [pc, #516]	; 1b554 <__flatcc_gen_sort@@Base+0x1eb4>
   1b34c:	str	r2, [sp, #60]	; 0x3c
   1b350:	b	1b368 <__flatcc_gen_sort@@Base+0x1cc8>
   1b354:	ldr	r9, [pc, #516]	; 1b560 <__flatcc_gen_sort@@Base+0x1ec0>
   1b358:	ldr	r2, [pc, #520]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b35c:	str	r2, [sp, #56]	; 0x38
   1b360:	ldr	r2, [pc, #500]	; 1b55c <__flatcc_gen_sort@@Base+0x1ebc>
   1b364:	str	r2, [sp, #60]	; 0x3c
   1b368:	ldrh	r2, [r4, #56]	; 0x38
   1b36c:	sub	r2, r2, #3
   1b370:	cmp	r2, #3
   1b374:	ldrls	pc, [pc, r2, lsl #2]
   1b378:	b	1aaf0 <__flatcc_gen_sort@@Base+0x1450>
   1b37c:	muleq	r1, ip, sl
   1b380:	andeq	sl, r1, r0, ror r8
   1b384:	andeq	sl, r1, r0, ror #13
   1b388:	andeq	sl, r1, r8, ror r9
   1b38c:	str	r7, [sp, #56]	; 0x38
   1b390:	ldr	r9, [pc, #476]	; 1b574 <__flatcc_gen_sort@@Base+0x1ed4>
   1b394:	ldr	r2, [pc, #456]	; 1b564 <__flatcc_gen_sort@@Base+0x1ec4>
   1b398:	str	r2, [sp, #60]	; 0x3c
   1b39c:	b	1b368 <__flatcc_gen_sort@@Base+0x1cc8>
   1b3a0:	ldr	r2, [pc, #448]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b3a4:	str	r2, [sp, #56]	; 0x38
   1b3a8:	b	1b390 <__flatcc_gen_sort@@Base+0x1cf0>
   1b3ac:	ldr	r9, [pc, #444]	; 1b570 <__flatcc_gen_sort@@Base+0x1ed0>
   1b3b0:	ldr	r2, [pc, #432]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b3b4:	str	r2, [sp, #56]	; 0x38
   1b3b8:	ldr	r2, [pc, #428]	; 1b56c <__flatcc_gen_sort@@Base+0x1ecc>
   1b3bc:	str	r2, [sp, #60]	; 0x3c
   1b3c0:	b	1b368 <__flatcc_gen_sort@@Base+0x1cc8>
   1b3c4:	ldrh	r2, [r4, #56]	; 0x38
   1b3c8:	sub	r2, r2, #3
   1b3cc:	cmp	r2, #3
   1b3d0:	ldrls	pc, [pc, r2, lsl #2]
   1b3d4:	b	1aaf0 <__flatcc_gen_sort@@Base+0x1450>
   1b3d8:	andeq	sl, r1, r4, ror sl
   1b3dc:	andeq	sl, r1, r8, asr #16
   1b3e0:			; <UNDEFINED> instruction: 0x0001a6b8
   1b3e4:	andeq	sl, r1, r0, lsl #20
   1b3e8:	ldrh	r2, [r4, #56]	; 0x38
   1b3ec:	sub	r2, r2, #3
   1b3f0:	cmp	r2, #3
   1b3f4:	ldrls	pc, [pc, r2, lsl #2]
   1b3f8:	b	1aaf0 <__flatcc_gen_sort@@Base+0x1450>
   1b3fc:	andeq	sl, r1, r4, lsl #21
   1b400:	andeq	sl, r1, r0, ror #16
   1b404:	ldrdeq	sl, [r1], -r0
   1b408:	andeq	sl, r1, ip, lsl sl
   1b40c:	ldr	r9, [pc, #252]	; 1b510 <__flatcc_gen_sort@@Base+0x1e70>
   1b410:	ldr	r2, [pc, #336]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b414:	str	r2, [sp, #56]	; 0x38
   1b418:	ldr	r2, [pc, #244]	; 1b514 <__flatcc_gen_sort@@Base+0x1e74>
   1b41c:	str	r2, [sp, #60]	; 0x3c
   1b420:	b	1b368 <__flatcc_gen_sort@@Base+0x1cc8>
   1b424:	ldr	r9, [pc, #332]	; 1b578 <__flatcc_gen_sort@@Base+0x1ed8>
   1b428:	ldr	r2, [pc, #312]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b42c:	str	r2, [sp, #56]	; 0x38
   1b430:	ldr	r2, [pc, #288]	; 1b558 <__flatcc_gen_sort@@Base+0x1eb8>
   1b434:	str	r2, [sp, #60]	; 0x3c
   1b438:	b	1b368 <__flatcc_gen_sort@@Base+0x1cc8>
   1b43c:	ldrh	r2, [r4, #56]	; 0x38
   1b440:	sub	r2, r2, #3
   1b444:	cmp	r2, #3
   1b448:	ldrls	pc, [pc, r2, lsl #2]
   1b44c:	b	1aaf0 <__flatcc_gen_sort@@Base+0x1450>
   1b450:			; <UNDEFINED> instruction: 0x0001aab0
   1b454:	andeq	sl, r1, r4, lsr #17
   1b458:	andeq	sl, r1, r4, lsl r7
   1b45c:	andeq	sl, r1, r4, ror #19
   1b460:	ldr	r2, [pc, #168]	; 1b510 <__flatcc_gen_sort@@Base+0x1e70>
   1b464:	ldr	r3, [pc, #252]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b468:	ldr	r1, [pc, #164]	; 1b514 <__flatcc_gen_sort@@Base+0x1e74>
   1b46c:	b	1b588 <__flatcc_gen_sort@@Base+0x1ee8>
   1b470:	ldrdeq	r3, [r4], -ip
   1b474:	ldrdeq	r4, [r4], -r0
   1b478:	andeq	fp, r3, ip, ror #19
   1b47c:	andeq	fp, r3, r4, asr #20
   1b480:	andeq	r3, r4, r8, lsl fp
   1b484:	andeq	fp, r3, r8, asr #17
   1b488:	andeq	fp, r3, r4, asr #26
   1b48c:	andeq	fp, r3, ip, asr #18
   1b490:	andeq	fp, r3, r4, ror #18
   1b494:	andeq	fp, r3, ip, ror #18
   1b498:	andeq	fp, r3, r4, ror r9
   1b49c:	andeq	fp, r3, ip, ror r9
   1b4a0:	andeq	fp, r3, r4, lsl #19
   1b4a4:	andeq	r3, r4, r8, ror fp
   1b4a8:	andeq	fp, r3, r0, asr #18
   1b4ac:	andeq	fp, r3, r8, asr r9
   1b4b0:	andeq	fp, r3, ip, ror #21
   1b4b4:	andeq	r4, r4, r4, lsl r0
   1b4b8:	strdeq	fp, [r3], -r8
   1b4bc:	andeq	fp, r3, r4, lsl #22
   1b4c0:	andeq	fp, r3, r0, lsl fp
   1b4c4:	andeq	fp, r3, ip, lsl #22
   1b4c8:	andeq	r3, r4, r4, lsl #23
   1b4cc:	muleq	r4, r4, r0
   1b4d0:	andeq	r4, r4, r8, ror #1
   1b4d4:	andeq	r4, r4, r8, ror #2
   1b4d8:	muleq	r4, r4, r1
   1b4dc:	andeq	r4, r4, r8, asr #3
   1b4e0:	andeq	r4, r4, r4, lsl #4
   1b4e4:	andeq	r4, r4, r4, lsr r2
   1b4e8:	andeq	r4, r4, ip, ror r2
   1b4ec:	andeq	ip, r3, r4, lsr #23
   1b4f0:	andeq	r4, r4, ip, lsr #5
   1b4f4:	andeq	r4, r4, r8, lsl #6
   1b4f8:	andeq	r4, r4, r0, asr #6
   1b4fc:	andeq	r4, r4, ip, ror r3
   1b500:	andeq	r0, r0, r3, ror #11
   1b504:	strdeq	ip, [r3], -r0
   1b508:	andeq	r0, r0, r8, ror #11
   1b50c:			; <UNDEFINED> instruction: 0x0003ccb4
   1b510:	andeq	fp, r3, r4, lsl #18
   1b514:	andeq	fp, r3, ip, ror #26
   1b518:	andeq	fp, r3, ip, lsl #18
   1b51c:	andeq	fp, r3, r4, ror sp
   1b520:	andeq	r4, r4, ip, asr r0
   1b524:	muleq	r0, r6, r5
   1b528:	andeq	r3, r4, r8, ror ip
   1b52c:	andeq	r6, r6, r8, lsr #1
   1b530:	andeq	r4, r4, r0, asr #2
   1b534:	andeq	fp, r3, r8, lsr sl
   1b538:	muleq	r4, r4, fp
   1b53c:	andeq	r3, r4, r0, ror lr
   1b540:	andeq	fp, r3, r4, lsl r9
   1b544:	andeq	fp, r3, ip, ror sp
   1b548:	andeq	fp, r3, ip, lsl r9
   1b54c:	andeq	fp, r3, r4, lsr #18
   1b550:	ldrdeq	fp, [r3], -r4
   1b554:	andeq	fp, r3, ip, asr #26
   1b558:	andeq	fp, r3, r4, asr sp
   1b55c:	andeq	fp, r3, ip, asr sp
   1b560:	andeq	fp, r3, ip, ror #17
   1b564:	andeq	r3, r5, r0, ror #17
   1b568:	andeq	r5, r4, r0, lsr #2
   1b56c:	andeq	fp, r3, r4, ror #26
   1b570:	strdeq	fp, [r3], -ip
   1b574:	strdeq	fp, [r3], -r4
   1b578:	andeq	fp, r3, r0, ror #17
   1b57c:	ldr	r2, [pc, #-108]	; 1b518 <__flatcc_gen_sort@@Base+0x1e78>
   1b580:	ldr	r3, [pc, #-32]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b584:	ldr	r1, [pc, #-112]	; 1b51c <__flatcc_gen_sort@@Base+0x1e7c>
   1b588:	str	r2, [sp, #36]	; 0x24
   1b58c:	str	r3, [sp, #32]
   1b590:	str	r1, [sp, #28]
   1b594:	str	r7, [sp, #24]
   1b598:	str	r6, [sp, #20]
   1b59c:	str	r5, [sp, #16]
   1b5a0:	add	r3, sp, #388	; 0x184
   1b5a4:	str	r3, [sp, #12]
   1b5a8:	str	r7, [sp, #8]
   1b5ac:	ldrd	r2, [r4, #96]	; 0x60
   1b5b0:	strd	r2, [sp]
   1b5b4:	mov	r2, r7
   1b5b8:	ldr	r1, [pc, #-160]	; 1b520 <__flatcc_gen_sort@@Base+0x1e80>
   1b5bc:	ldr	r0, [r8, #204]	; 0xcc
   1b5c0:	bl	13f84 <fprintf@plt>
   1b5c4:	ldr	r3, [r4, #104]	; 0x68
   1b5c8:	cmp	r3, #0
   1b5cc:	beq	1a5a0 <__flatcc_gen_sort@@Base+0xf00>
   1b5d0:	ldrh	r2, [r3, #8]
   1b5d4:	cmp	r2, #0
   1b5d8:	beq	1abb8 <__flatcc_gen_sort@@Base+0x1518>
   1b5dc:	cmp	r2, #1
   1b5e0:	beq	1ac00 <__flatcc_gen_sort@@Base+0x1560>
   1b5e4:	ldr	r5, [pc, #-200]	; 1b524 <__flatcc_gen_sort@@Base+0x1e84>
   1b5e8:	ldr	r4, [pc, #-200]	; 1b528 <__flatcc_gen_sort@@Base+0x1e88>
   1b5ec:	ldr	r3, [pc, #-200]	; 1b52c <__flatcc_gen_sort@@Base+0x1e8c>
   1b5f0:	ldr	r0, [r3]
   1b5f4:	ldr	r3, [pc, #-204]	; 1b530 <__flatcc_gen_sort@@Base+0x1e90>
   1b5f8:	str	r3, [sp]
   1b5fc:	mov	r3, r5
   1b600:	mov	r2, r4
   1b604:	ldr	r1, [pc, #-216]	; 1b534 <__flatcc_gen_sort@@Base+0x1e94>
   1b608:	bl	13f84 <fprintf@plt>
   1b60c:	ldr	r3, [pc, #-220]	; 1b538 <__flatcc_gen_sort@@Base+0x1e98>
   1b610:	mov	r2, r5
   1b614:	mov	r1, r4
   1b618:	ldr	r0, [pc, #-228]	; 1b53c <__flatcc_gen_sort@@Base+0x1e9c>
   1b61c:	bl	14038 <__assert_fail@plt>
   1b620:	ldr	r2, [pc, #-232]	; 1b540 <__flatcc_gen_sort@@Base+0x1ea0>
   1b624:	ldr	r3, [pc, #-196]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b628:	ldr	r1, [pc, #-236]	; 1b544 <__flatcc_gen_sort@@Base+0x1ea4>
   1b62c:	b	1b588 <__flatcc_gen_sort@@Base+0x1ee8>
   1b630:	ldr	r2, [pc, #-240]	; 1b548 <__flatcc_gen_sort@@Base+0x1ea8>
   1b634:	ldr	r3, [pc, #-212]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b638:	mov	r1, r2
   1b63c:	b	1b588 <__flatcc_gen_sort@@Base+0x1ee8>
   1b640:	ldr	r2, [pc, #-252]	; 1b54c <__flatcc_gen_sort@@Base+0x1eac>
   1b644:	ldr	r3, [pc, #-228]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b648:	mov	r1, r2
   1b64c:	b	1b588 <__flatcc_gen_sort@@Base+0x1ee8>
   1b650:	ldr	r2, [pc, #-264]	; 1b550 <__flatcc_gen_sort@@Base+0x1eb0>
   1b654:	ldr	r3, [pc, #-244]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b658:	ldr	r1, [pc, #-268]	; 1b554 <__flatcc_gen_sort@@Base+0x1eb4>
   1b65c:	b	1b588 <__flatcc_gen_sort@@Base+0x1ee8>
   1b660:	ldr	r2, [pc, #-240]	; 1b578 <__flatcc_gen_sort@@Base+0x1ed8>
   1b664:	ldr	r3, [pc, #-260]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b668:	ldr	r1, [pc, #-280]	; 1b558 <__flatcc_gen_sort@@Base+0x1eb8>
   1b66c:	b	1b588 <__flatcc_gen_sort@@Base+0x1ee8>
   1b670:	ldr	r2, [pc, #-280]	; 1b560 <__flatcc_gen_sort@@Base+0x1ec0>
   1b674:	ldr	r3, [pc, #-276]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b678:	ldr	r1, [pc, #-292]	; 1b55c <__flatcc_gen_sort@@Base+0x1ebc>
   1b67c:	b	1b588 <__flatcc_gen_sort@@Base+0x1ee8>
   1b680:	mov	r3, r7
   1b684:	ldr	r2, [pc, #-280]	; 1b574 <__flatcc_gen_sort@@Base+0x1ed4>
   1b688:	ldr	r1, [pc, #-300]	; 1b564 <__flatcc_gen_sort@@Base+0x1ec4>
   1b68c:	b	1b588 <__flatcc_gen_sort@@Base+0x1ee8>
   1b690:	ldr	r3, [pc, #-304]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b694:	b	1b684 <__flatcc_gen_sort@@Base+0x1fe4>
   1b698:	ldr	r2, [pc, #-304]	; 1b570 <__flatcc_gen_sort@@Base+0x1ed0>
   1b69c:	ldr	r3, [pc, #-316]	; 1b568 <__flatcc_gen_sort@@Base+0x1ec8>
   1b6a0:	ldr	r1, [pc, #-316]	; 1b56c <__flatcc_gen_sort@@Base+0x1ecc>
   1b6a4:	b	1b588 <__flatcc_gen_sort@@Base+0x1ee8>
   1b6a8:	ldrh	r2, [r4, #56]	; 0x38
   1b6ac:	sub	r2, r2, #3
   1b6b0:	cmp	r2, #3
   1b6b4:	ldrls	pc, [pc, r2, lsl #2]
   1b6b8:	b	1aaf0 <__flatcc_gen_sort@@Base+0x1450>
   1b6bc:	andeq	sl, r1, r0, asr #21
   1b6c0:			; <UNDEFINED> instruction: 0x0001a8bc
   1b6c4:	andeq	sl, r1, ip, lsr #14
   1b6c8:	andeq	sl, r1, ip, lsl sl
   1b6cc:	ldr	r1, [r8, #204]	; 0xcc
   1b6d0:	mov	r0, #10
   1b6d4:	bl	13fe4 <fputc@plt>
   1b6d8:	mov	r0, #0
   1b6dc:	add	sp, sp, #612	; 0x264
   1b6e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b6e4 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1b6e4:	push	{r4, r5, lr}
   1b6e8:	sub	sp, sp, #12
   1b6ec:	mov	r4, r0
   1b6f0:	add	r5, r0, #102	; 0x66
   1b6f4:	mov	r2, r5
   1b6f8:	ldr	r1, [pc, #1836]	; 1be2c <__flatcc_fb_gen_common_c_builder_header@@Base+0x748>
   1b6fc:	ldr	r0, [r0, #204]	; 0xcc
   1b700:	bl	13f84 <fprintf@plt>
   1b704:	mov	r2, r5
   1b708:	ldr	r1, [pc, #1824]	; 1be30 <__flatcc_fb_gen_common_c_builder_header@@Base+0x74c>
   1b70c:	ldr	r0, [r4, #204]	; 0xcc
   1b710:	bl	13f84 <fprintf@plt>
   1b714:	ldr	r3, [r4, #204]	; 0xcc
   1b718:	mov	r2, #81	; 0x51
   1b71c:	mov	r1, #1
   1b720:	ldr	r0, [pc, #1804]	; 1be34 <__flatcc_fb_gen_common_c_builder_header@@Base+0x750>
   1b724:	bl	13f18 <fwrite@plt>
   1b728:	ldr	r3, [r4, #204]	; 0xcc
   1b72c:	mov	r2, #53	; 0x35
   1b730:	mov	r1, #1
   1b734:	ldr	r0, [pc, #1788]	; 1be38 <__flatcc_fb_gen_common_c_builder_header@@Base+0x754>
   1b738:	bl	13f18 <fwrite@plt>
   1b73c:	ldr	r3, [r4, #212]	; 0xd4
   1b740:	ldr	r3, [r3, #140]	; 0x8c
   1b744:	cmp	r3, #0
   1b748:	bne	1bd74 <__flatcc_fb_gen_common_c_builder_header@@Base+0x690>
   1b74c:	ldr	r3, [r4, #204]	; 0xcc
   1b750:	mov	r2, #22
   1b754:	mov	r1, #1
   1b758:	ldr	r0, [pc, #1756]	; 1be3c <__flatcc_fb_gen_common_c_builder_header@@Base+0x758>
   1b75c:	bl	13f18 <fwrite@plt>
   1b760:	ldr	r3, [r4, #204]	; 0xcc
   1b764:	mov	r2, #35	; 0x23
   1b768:	mov	r1, #1
   1b76c:	ldr	r0, [pc, #1740]	; 1be40 <__flatcc_fb_gen_common_c_builder_header@@Base+0x75c>
   1b770:	bl	13f18 <fwrite@plt>
   1b774:	ldr	r3, [r4, #204]	; 0xcc
   1b778:	mov	r2, #7
   1b77c:	mov	r1, #1
   1b780:	ldr	r0, [pc, #1724]	; 1be44 <__flatcc_fb_gen_common_c_builder_header@@Base+0x760>
   1b784:	bl	13f18 <fwrite@plt>
   1b788:	ldr	r1, [pc, #1720]	; 1be48 <__flatcc_fb_gen_common_c_builder_header@@Base+0x764>
   1b78c:	mov	r0, r4
   1b790:	bl	13eb8 <strcmp@plt>
   1b794:	cmp	r0, #0
   1b798:	bne	1bd8c <__flatcc_fb_gen_common_c_builder_header@@Base+0x6a8>
   1b79c:	mov	r3, r4
   1b7a0:	mov	r2, r4
   1b7a4:	ldr	r1, [pc, #1696]	; 1be4c <__flatcc_fb_gen_common_c_builder_header@@Base+0x768>
   1b7a8:	ldr	r0, [r4, #204]	; 0xcc
   1b7ac:	bl	13f84 <fprintf@plt>
   1b7b0:	mov	r3, r4
   1b7b4:	mov	r2, r4
   1b7b8:	ldr	r1, [pc, #1680]	; 1be50 <__flatcc_fb_gen_common_c_builder_header@@Base+0x76c>
   1b7bc:	ldr	r0, [r4, #204]	; 0xcc
   1b7c0:	bl	13f84 <fprintf@plt>
   1b7c4:	ldr	r1, [pc, #1672]	; 1be54 <__flatcc_fb_gen_common_c_builder_header@@Base+0x770>
   1b7c8:	mov	r0, r4
   1b7cc:	bl	13eb8 <strcmp@plt>
   1b7d0:	cmp	r0, #0
   1b7d4:	bne	1bdf0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x70c>
   1b7d8:	ldr	r1, [r4, #204]	; 0xcc
   1b7dc:	mov	r0, #10
   1b7e0:	bl	13fe4 <fputc@plt>
   1b7e4:	mov	r2, r4
   1b7e8:	ldr	r1, [pc, #1640]	; 1be58 <__flatcc_fb_gen_common_c_builder_header@@Base+0x774>
   1b7ec:	ldr	r0, [r4, #204]	; 0xcc
   1b7f0:	bl	13f84 <fprintf@plt>
   1b7f4:	mov	r2, r4
   1b7f8:	ldr	r1, [pc, #1628]	; 1be5c <__flatcc_fb_gen_common_c_builder_header@@Base+0x778>
   1b7fc:	ldr	r0, [r4, #204]	; 0xcc
   1b800:	bl	13f84 <fprintf@plt>
   1b804:	str	r4, [sp]
   1b808:	mov	r3, r4
   1b80c:	mov	r2, r4
   1b810:	ldr	r1, [pc, #1608]	; 1be60 <__flatcc_fb_gen_common_c_builder_header@@Base+0x77c>
   1b814:	ldr	r0, [r4, #204]	; 0xcc
   1b818:	bl	13f84 <fprintf@plt>
   1b81c:	mov	r2, r4
   1b820:	ldr	r1, [pc, #1596]	; 1be64 <__flatcc_fb_gen_common_c_builder_header@@Base+0x780>
   1b824:	ldr	r0, [r4, #204]	; 0xcc
   1b828:	bl	13f84 <fprintf@plt>
   1b82c:	mov	r2, r4
   1b830:	ldr	r1, [pc, #1584]	; 1be68 <__flatcc_fb_gen_common_c_builder_header@@Base+0x784>
   1b834:	ldr	r0, [r4, #204]	; 0xcc
   1b838:	bl	13f84 <fprintf@plt>
   1b83c:	mov	r2, r4
   1b840:	ldr	r1, [pc, #1572]	; 1be6c <__flatcc_fb_gen_common_c_builder_header@@Base+0x788>
   1b844:	ldr	r0, [r4, #204]	; 0xcc
   1b848:	bl	13f84 <fprintf@plt>
   1b84c:	mov	r2, r4
   1b850:	ldr	r1, [pc, #1560]	; 1be70 <__flatcc_fb_gen_common_c_builder_header@@Base+0x78c>
   1b854:	ldr	r0, [r4, #204]	; 0xcc
   1b858:	bl	13f84 <fprintf@plt>
   1b85c:	mov	r3, r4
   1b860:	mov	r2, r4
   1b864:	ldr	r1, [pc, #1544]	; 1be74 <__flatcc_fb_gen_common_c_builder_header@@Base+0x790>
   1b868:	ldr	r0, [r4, #204]	; 0xcc
   1b86c:	bl	13f84 <fprintf@plt>
   1b870:	str	r4, [sp]
   1b874:	mov	r3, r4
   1b878:	mov	r2, r4
   1b87c:	ldr	r1, [pc, #1524]	; 1be78 <__flatcc_fb_gen_common_c_builder_header@@Base+0x794>
   1b880:	ldr	r0, [r4, #204]	; 0xcc
   1b884:	bl	13f84 <fprintf@plt>
   1b888:	mov	r2, r4
   1b88c:	ldr	r1, [pc, #1512]	; 1be7c <__flatcc_fb_gen_common_c_builder_header@@Base+0x798>
   1b890:	ldr	r0, [r4, #204]	; 0xcc
   1b894:	bl	13f84 <fprintf@plt>
   1b898:	mov	r2, r4
   1b89c:	ldr	r1, [pc, #1500]	; 1be80 <__flatcc_fb_gen_common_c_builder_header@@Base+0x79c>
   1b8a0:	ldr	r0, [r4, #204]	; 0xcc
   1b8a4:	bl	13f84 <fprintf@plt>
   1b8a8:	mov	r2, r4
   1b8ac:	ldr	r1, [pc, #1488]	; 1be84 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a0>
   1b8b0:	ldr	r0, [r4, #204]	; 0xcc
   1b8b4:	bl	13f84 <fprintf@plt>
   1b8b8:	mov	r3, r4
   1b8bc:	mov	r2, r4
   1b8c0:	ldr	r1, [pc, #1472]	; 1be88 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a4>
   1b8c4:	ldr	r0, [r4, #204]	; 0xcc
   1b8c8:	bl	13f84 <fprintf@plt>
   1b8cc:	mov	r2, r4
   1b8d0:	ldr	r1, [pc, #1460]	; 1be8c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a8>
   1b8d4:	ldr	r0, [r4, #204]	; 0xcc
   1b8d8:	bl	13f84 <fprintf@plt>
   1b8dc:	str	r4, [sp]
   1b8e0:	mov	r3, r4
   1b8e4:	mov	r2, r4
   1b8e8:	ldr	r1, [pc, #1440]	; 1be90 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ac>
   1b8ec:	ldr	r0, [r4, #204]	; 0xcc
   1b8f0:	bl	13f84 <fprintf@plt>
   1b8f4:	str	r4, [sp, #4]
   1b8f8:	str	r4, [sp]
   1b8fc:	mov	r3, r4
   1b900:	mov	r2, r4
   1b904:	ldr	r1, [pc, #1416]	; 1be94 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b0>
   1b908:	ldr	r0, [r4, #204]	; 0xcc
   1b90c:	bl	13f84 <fprintf@plt>
   1b910:	mov	r3, r4
   1b914:	mov	r2, r4
   1b918:	ldr	r1, [pc, #1400]	; 1be98 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b4>
   1b91c:	ldr	r0, [r4, #204]	; 0xcc
   1b920:	bl	13f84 <fprintf@plt>
   1b924:	str	r4, [sp, #4]
   1b928:	str	r4, [sp]
   1b92c:	mov	r3, r4
   1b930:	mov	r2, r4
   1b934:	ldr	r1, [pc, #1376]	; 1be9c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b8>
   1b938:	ldr	r0, [r4, #204]	; 0xcc
   1b93c:	bl	13f84 <fprintf@plt>
   1b940:	mov	r3, r4
   1b944:	mov	r2, r4
   1b948:	ldr	r1, [pc, #1360]	; 1bea0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7bc>
   1b94c:	ldr	r0, [r4, #204]	; 0xcc
   1b950:	bl	13f84 <fprintf@plt>
   1b954:	mov	r2, r4
   1b958:	ldr	r1, [pc, #1348]	; 1bea4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c0>
   1b95c:	ldr	r0, [r4, #204]	; 0xcc
   1b960:	bl	13f84 <fprintf@plt>
   1b964:	mov	r2, r4
   1b968:	ldr	r1, [pc, #1336]	; 1bea8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c4>
   1b96c:	ldr	r0, [r4, #204]	; 0xcc
   1b970:	bl	13f84 <fprintf@plt>
   1b974:	mov	r2, r4
   1b978:	ldr	r1, [pc, #1324]	; 1beac <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c8>
   1b97c:	ldr	r0, [r4, #204]	; 0xcc
   1b980:	bl	13f84 <fprintf@plt>
   1b984:	mov	r2, r4
   1b988:	ldr	r1, [pc, #1312]	; 1beb0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7cc>
   1b98c:	ldr	r0, [r4, #204]	; 0xcc
   1b990:	bl	13f84 <fprintf@plt>
   1b994:	mov	r3, r4
   1b998:	mov	r2, r4
   1b99c:	ldr	r1, [pc, #1296]	; 1beb4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d0>
   1b9a0:	ldr	r0, [r4, #204]	; 0xcc
   1b9a4:	bl	13f84 <fprintf@plt>
   1b9a8:	mov	r2, r4
   1b9ac:	ldr	r1, [pc, #1284]	; 1beb8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d4>
   1b9b0:	ldr	r0, [r4, #204]	; 0xcc
   1b9b4:	bl	13f84 <fprintf@plt>
   1b9b8:	mov	r2, r4
   1b9bc:	ldr	r1, [pc, #1272]	; 1bebc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d8>
   1b9c0:	ldr	r0, [r4, #204]	; 0xcc
   1b9c4:	bl	13f84 <fprintf@plt>
   1b9c8:	mov	r3, r4
   1b9cc:	mov	r2, r4
   1b9d0:	ldr	r1, [pc, #1256]	; 1bec0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7dc>
   1b9d4:	ldr	r0, [r4, #204]	; 0xcc
   1b9d8:	bl	13f84 <fprintf@plt>
   1b9dc:	mov	r3, r4
   1b9e0:	mov	r2, r4
   1b9e4:	ldr	r1, [pc, #1240]	; 1bec4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e0>
   1b9e8:	ldr	r0, [r4, #204]	; 0xcc
   1b9ec:	bl	13f84 <fprintf@plt>
   1b9f0:	mov	r3, r4
   1b9f4:	mov	r2, r4
   1b9f8:	ldr	r1, [pc, #1224]	; 1bec8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e4>
   1b9fc:	ldr	r0, [r4, #204]	; 0xcc
   1ba00:	bl	13f84 <fprintf@plt>
   1ba04:	mov	r3, r4
   1ba08:	mov	r2, r4
   1ba0c:	ldr	r1, [pc, #1208]	; 1becc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e8>
   1ba10:	ldr	r0, [r4, #204]	; 0xcc
   1ba14:	bl	13f84 <fprintf@plt>
   1ba18:	str	r4, [sp]
   1ba1c:	mov	r3, r4
   1ba20:	mov	r2, r4
   1ba24:	ldr	r1, [pc, #1188]	; 1bed0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ec>
   1ba28:	ldr	r0, [r4, #204]	; 0xcc
   1ba2c:	bl	13f84 <fprintf@plt>
   1ba30:	mov	r3, r4
   1ba34:	mov	r2, r4
   1ba38:	ldr	r1, [pc, #1172]	; 1bed4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f0>
   1ba3c:	ldr	r0, [r4, #204]	; 0xcc
   1ba40:	bl	13f84 <fprintf@plt>
   1ba44:	mov	r2, r4
   1ba48:	ldr	r1, [pc, #1160]	; 1bed8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f4>
   1ba4c:	ldr	r0, [r4, #204]	; 0xcc
   1ba50:	bl	13f84 <fprintf@plt>
   1ba54:	mov	r2, r4
   1ba58:	ldr	r1, [pc, #1148]	; 1bedc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f8>
   1ba5c:	ldr	r0, [r4, #204]	; 0xcc
   1ba60:	bl	13f84 <fprintf@plt>
   1ba64:	mov	r2, r4
   1ba68:	ldr	r1, [pc, #1136]	; 1bee0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7fc>
   1ba6c:	ldr	r0, [r4, #204]	; 0xcc
   1ba70:	bl	13f84 <fprintf@plt>
   1ba74:	str	r4, [sp]
   1ba78:	mov	r3, r4
   1ba7c:	mov	r2, r4
   1ba80:	ldr	r1, [pc, #1116]	; 1bee4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x800>
   1ba84:	ldr	r0, [r4, #204]	; 0xcc
   1ba88:	bl	13f84 <fprintf@plt>
   1ba8c:	mov	r2, r4
   1ba90:	ldr	r1, [pc, #1104]	; 1bee8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x804>
   1ba94:	ldr	r0, [r4, #204]	; 0xcc
   1ba98:	bl	13f84 <fprintf@plt>
   1ba9c:	mov	r2, r4
   1baa0:	ldr	r1, [pc, #1092]	; 1beec <__flatcc_fb_gen_common_c_builder_header@@Base+0x808>
   1baa4:	ldr	r0, [r4, #204]	; 0xcc
   1baa8:	bl	13f84 <fprintf@plt>
   1baac:	mov	r2, r4
   1bab0:	ldr	r1, [pc, #1080]	; 1bef0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x80c>
   1bab4:	ldr	r0, [r4, #204]	; 0xcc
   1bab8:	bl	13f84 <fprintf@plt>
   1babc:	mov	r2, r4
   1bac0:	ldr	r1, [pc, #1068]	; 1bef4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x810>
   1bac4:	ldr	r0, [r4, #204]	; 0xcc
   1bac8:	bl	13f84 <fprintf@plt>
   1bacc:	mov	r3, r4
   1bad0:	mov	r2, r4
   1bad4:	ldr	r1, [pc, #1052]	; 1bef8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x814>
   1bad8:	ldr	r0, [r4, #204]	; 0xcc
   1badc:	bl	13f84 <fprintf@plt>
   1bae0:	mov	r2, r4
   1bae4:	ldr	r1, [pc, #1040]	; 1befc <__flatcc_fb_gen_common_c_builder_header@@Base+0x818>
   1bae8:	ldr	r0, [r4, #204]	; 0xcc
   1baec:	bl	13f84 <fprintf@plt>
   1baf0:	mov	r2, r4
   1baf4:	ldr	r1, [pc, #1028]	; 1bf00 <__flatcc_fb_gen_common_c_builder_header@@Base+0x81c>
   1baf8:	ldr	r0, [r4, #204]	; 0xcc
   1bafc:	bl	13f84 <fprintf@plt>
   1bb00:	mov	r2, r4
   1bb04:	ldr	r1, [pc, #1016]	; 1bf04 <__flatcc_fb_gen_common_c_builder_header@@Base+0x820>
   1bb08:	ldr	r0, [r4, #204]	; 0xcc
   1bb0c:	bl	13f84 <fprintf@plt>
   1bb10:	mov	r2, r4
   1bb14:	ldr	r1, [pc, #1004]	; 1bf08 <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1bb18:	ldr	r0, [r4, #204]	; 0xcc
   1bb1c:	bl	13f84 <fprintf@plt>
   1bb20:	mov	r2, r4
   1bb24:	ldr	r1, [pc, #992]	; 1bf0c <__flatcc_fb_gen_common_c_builder_header@@Base+0x828>
   1bb28:	ldr	r0, [r4, #204]	; 0xcc
   1bb2c:	bl	13f84 <fprintf@plt>
   1bb30:	mov	r2, r4
   1bb34:	ldr	r1, [pc, #980]	; 1bf10 <__flatcc_fb_gen_common_c_builder_header@@Base+0x82c>
   1bb38:	ldr	r0, [r4, #204]	; 0xcc
   1bb3c:	bl	13f84 <fprintf@plt>
   1bb40:	mov	r2, r4
   1bb44:	ldr	r1, [pc, #968]	; 1bf14 <__flatcc_fb_gen_common_c_builder_header@@Base+0x830>
   1bb48:	ldr	r0, [r4, #204]	; 0xcc
   1bb4c:	bl	13f84 <fprintf@plt>
   1bb50:	mov	r2, r4
   1bb54:	ldr	r1, [pc, #956]	; 1bf18 <__flatcc_fb_gen_common_c_builder_header@@Base+0x834>
   1bb58:	ldr	r0, [r4, #204]	; 0xcc
   1bb5c:	bl	13f84 <fprintf@plt>
   1bb60:	mov	r2, r4
   1bb64:	ldr	r1, [pc, #944]	; 1bf1c <__flatcc_fb_gen_common_c_builder_header@@Base+0x838>
   1bb68:	ldr	r0, [r4, #204]	; 0xcc
   1bb6c:	bl	13f84 <fprintf@plt>
   1bb70:	mov	r2, r4
   1bb74:	ldr	r1, [pc, #932]	; 1bf20 <__flatcc_fb_gen_common_c_builder_header@@Base+0x83c>
   1bb78:	ldr	r0, [r4, #204]	; 0xcc
   1bb7c:	bl	13f84 <fprintf@plt>
   1bb80:	mov	r2, r4
   1bb84:	ldr	r1, [pc, #920]	; 1bf24 <__flatcc_fb_gen_common_c_builder_header@@Base+0x840>
   1bb88:	ldr	r0, [r4, #204]	; 0xcc
   1bb8c:	bl	13f84 <fprintf@plt>
   1bb90:	mov	r2, r4
   1bb94:	ldr	r1, [pc, #908]	; 1bf28 <__flatcc_fb_gen_common_c_builder_header@@Base+0x844>
   1bb98:	ldr	r0, [r4, #204]	; 0xcc
   1bb9c:	bl	13f84 <fprintf@plt>
   1bba0:	mov	r2, r4
   1bba4:	ldr	r1, [pc, #896]	; 1bf2c <__flatcc_fb_gen_common_c_builder_header@@Base+0x848>
   1bba8:	ldr	r0, [r4, #204]	; 0xcc
   1bbac:	bl	13f84 <fprintf@plt>
   1bbb0:	mov	r2, r4
   1bbb4:	ldr	r1, [pc, #884]	; 1bf30 <__flatcc_fb_gen_common_c_builder_header@@Base+0x84c>
   1bbb8:	ldr	r0, [r4, #204]	; 0xcc
   1bbbc:	bl	13f84 <fprintf@plt>
   1bbc0:	mov	r2, r4
   1bbc4:	ldr	r1, [pc, #872]	; 1bf34 <__flatcc_fb_gen_common_c_builder_header@@Base+0x850>
   1bbc8:	ldr	r0, [r4, #204]	; 0xcc
   1bbcc:	bl	13f84 <fprintf@plt>
   1bbd0:	mov	r2, r4
   1bbd4:	ldr	r1, [pc, #860]	; 1bf38 <__flatcc_fb_gen_common_c_builder_header@@Base+0x854>
   1bbd8:	ldr	r0, [r4, #204]	; 0xcc
   1bbdc:	bl	13f84 <fprintf@plt>
   1bbe0:	mov	r2, r4
   1bbe4:	ldr	r1, [pc, #848]	; 1bf3c <__flatcc_fb_gen_common_c_builder_header@@Base+0x858>
   1bbe8:	ldr	r0, [r4, #204]	; 0xcc
   1bbec:	bl	13f84 <fprintf@plt>
   1bbf0:	ldr	r1, [r4, #204]	; 0xcc
   1bbf4:	mov	r0, #10
   1bbf8:	bl	13fe4 <fputc@plt>
   1bbfc:	str	r4, [sp]
   1bc00:	mov	r3, r4
   1bc04:	mov	r2, r4
   1bc08:	ldr	r1, [pc, #816]	; 1bf40 <__flatcc_fb_gen_common_c_builder_header@@Base+0x85c>
   1bc0c:	ldr	r0, [r4, #204]	; 0xcc
   1bc10:	bl	13f84 <fprintf@plt>
   1bc14:	str	r4, [sp]
   1bc18:	mov	r3, r4
   1bc1c:	mov	r2, r4
   1bc20:	ldr	r1, [pc, #796]	; 1bf44 <__flatcc_fb_gen_common_c_builder_header@@Base+0x860>
   1bc24:	ldr	r0, [r4, #204]	; 0xcc
   1bc28:	bl	13f84 <fprintf@plt>
   1bc2c:	str	r4, [sp, #4]
   1bc30:	str	r4, [sp]
   1bc34:	mov	r3, r4
   1bc38:	mov	r2, r4
   1bc3c:	ldr	r1, [pc, #772]	; 1bf48 <__flatcc_fb_gen_common_c_builder_header@@Base+0x864>
   1bc40:	ldr	r0, [r4, #204]	; 0xcc
   1bc44:	bl	13f84 <fprintf@plt>
   1bc48:	str	r4, [sp]
   1bc4c:	mov	r3, r4
   1bc50:	mov	r2, r4
   1bc54:	ldr	r1, [pc, #752]	; 1bf4c <__flatcc_fb_gen_common_c_builder_header@@Base+0x868>
   1bc58:	ldr	r0, [r4, #204]	; 0xcc
   1bc5c:	bl	13f84 <fprintf@plt>
   1bc60:	str	r4, [sp]
   1bc64:	mov	r3, r4
   1bc68:	mov	r2, r4
   1bc6c:	ldr	r1, [pc, #732]	; 1bf50 <__flatcc_fb_gen_common_c_builder_header@@Base+0x86c>
   1bc70:	ldr	r0, [r4, #204]	; 0xcc
   1bc74:	bl	13f84 <fprintf@plt>
   1bc78:	str	r4, [sp]
   1bc7c:	mov	r3, r4
   1bc80:	mov	r2, r4
   1bc84:	ldr	r1, [pc, #712]	; 1bf54 <__flatcc_fb_gen_common_c_builder_header@@Base+0x870>
   1bc88:	ldr	r0, [r4, #204]	; 0xcc
   1bc8c:	bl	13f84 <fprintf@plt>
   1bc90:	str	r4, [sp]
   1bc94:	mov	r3, r4
   1bc98:	mov	r2, r4
   1bc9c:	ldr	r1, [pc, #692]	; 1bf58 <__flatcc_fb_gen_common_c_builder_header@@Base+0x874>
   1bca0:	ldr	r0, [r4, #204]	; 0xcc
   1bca4:	bl	13f84 <fprintf@plt>
   1bca8:	str	r4, [sp]
   1bcac:	mov	r3, r4
   1bcb0:	mov	r2, r4
   1bcb4:	ldr	r1, [pc, #672]	; 1bf5c <__flatcc_fb_gen_common_c_builder_header@@Base+0x878>
   1bcb8:	ldr	r0, [r4, #204]	; 0xcc
   1bcbc:	bl	13f84 <fprintf@plt>
   1bcc0:	str	r4, [sp]
   1bcc4:	mov	r3, r4
   1bcc8:	mov	r2, r4
   1bccc:	ldr	r1, [pc, #652]	; 1bf60 <__flatcc_fb_gen_common_c_builder_header@@Base+0x87c>
   1bcd0:	ldr	r0, [r4, #204]	; 0xcc
   1bcd4:	bl	13f84 <fprintf@plt>
   1bcd8:	str	r4, [sp]
   1bcdc:	mov	r3, r4
   1bce0:	mov	r2, r4
   1bce4:	ldr	r1, [pc, #632]	; 1bf64 <__flatcc_fb_gen_common_c_builder_header@@Base+0x880>
   1bce8:	ldr	r0, [r4, #204]	; 0xcc
   1bcec:	bl	13f84 <fprintf@plt>
   1bcf0:	str	r4, [sp]
   1bcf4:	mov	r3, r4
   1bcf8:	mov	r2, r4
   1bcfc:	ldr	r1, [pc, #612]	; 1bf68 <__flatcc_fb_gen_common_c_builder_header@@Base+0x884>
   1bd00:	ldr	r0, [r4, #204]	; 0xcc
   1bd04:	bl	13f84 <fprintf@plt>
   1bd08:	ldr	r1, [r4, #204]	; 0xcc
   1bd0c:	mov	r0, #10
   1bd10:	bl	13fe4 <fputc@plt>
   1bd14:	mov	r3, r4
   1bd18:	mov	r2, r4
   1bd1c:	ldr	r1, [pc, #584]	; 1bf6c <__flatcc_fb_gen_common_c_builder_header@@Base+0x888>
   1bd20:	ldr	r0, [r4, #204]	; 0xcc
   1bd24:	bl	13f84 <fprintf@plt>
   1bd28:	ldr	r1, [r4, #204]	; 0xcc
   1bd2c:	mov	r0, #10
   1bd30:	bl	13fe4 <fputc@plt>
   1bd34:	mov	r3, r4
   1bd38:	mov	r2, r4
   1bd3c:	ldr	r1, [pc, #556]	; 1bf70 <__flatcc_fb_gen_common_c_builder_header@@Base+0x88c>
   1bd40:	ldr	r0, [r4, #204]	; 0xcc
   1bd44:	bl	13f84 <fprintf@plt>
   1bd48:	ldr	r3, [r4, #212]	; 0xd4
   1bd4c:	ldr	r3, [r3, #140]	; 0x8c
   1bd50:	cmp	r3, #0
   1bd54:	bne	1be14 <__flatcc_fb_gen_common_c_builder_header@@Base+0x730>
   1bd58:	mov	r2, r5
   1bd5c:	ldr	r1, [pc, #528]	; 1bf74 <__flatcc_fb_gen_common_c_builder_header@@Base+0x890>
   1bd60:	ldr	r0, [r4, #204]	; 0xcc
   1bd64:	bl	13f84 <fprintf@plt>
   1bd68:	mov	r0, #0
   1bd6c:	add	sp, sp, #12
   1bd70:	pop	{r4, r5, pc}
   1bd74:	ldr	r3, [r4, #204]	; 0xcc
   1bd78:	mov	r2, #36	; 0x24
   1bd7c:	mov	r1, #1
   1bd80:	ldr	r0, [pc, #496]	; 1bf78 <__flatcc_fb_gen_common_c_builder_header@@Base+0x894>
   1bd84:	bl	13f18 <fwrite@plt>
   1bd88:	b	1b74c <__flatcc_fb_gen_common_c_builder_header@@Base+0x68>
   1bd8c:	mov	r2, r4
   1bd90:	ldr	r1, [pc, #484]	; 1bf7c <__flatcc_fb_gen_common_c_builder_header@@Base+0x898>
   1bd94:	ldr	r0, [r4, #204]	; 0xcc
   1bd98:	bl	13f84 <fprintf@plt>
   1bd9c:	mov	r2, r4
   1bda0:	ldr	r1, [pc, #472]	; 1bf80 <__flatcc_fb_gen_common_c_builder_header@@Base+0x89c>
   1bda4:	ldr	r0, [r4, #204]	; 0xcc
   1bda8:	bl	13f84 <fprintf@plt>
   1bdac:	mov	r2, r4
   1bdb0:	ldr	r1, [pc, #460]	; 1bf84 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a0>
   1bdb4:	ldr	r0, [r4, #204]	; 0xcc
   1bdb8:	bl	13f84 <fprintf@plt>
   1bdbc:	mov	r2, r4
   1bdc0:	ldr	r1, [pc, #448]	; 1bf88 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a4>
   1bdc4:	ldr	r0, [r4, #204]	; 0xcc
   1bdc8:	bl	13f84 <fprintf@plt>
   1bdcc:	mov	r2, r4
   1bdd0:	ldr	r1, [pc, #436]	; 1bf8c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a8>
   1bdd4:	ldr	r0, [r4, #204]	; 0xcc
   1bdd8:	bl	13f84 <fprintf@plt>
   1bddc:	mov	r2, r4
   1bde0:	ldr	r1, [pc, #424]	; 1bf90 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8ac>
   1bde4:	ldr	r0, [r4, #204]	; 0xcc
   1bde8:	bl	13f84 <fprintf@plt>
   1bdec:	b	1b79c <__flatcc_fb_gen_common_c_builder_header@@Base+0xb8>
   1bdf0:	mov	r2, r4
   1bdf4:	ldr	r1, [pc, #408]	; 1bf94 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b0>
   1bdf8:	ldr	r0, [r4, #204]	; 0xcc
   1bdfc:	bl	13f84 <fprintf@plt>
   1be00:	mov	r2, r4
   1be04:	ldr	r1, [pc, #396]	; 1bf98 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b4>
   1be08:	ldr	r0, [r4, #204]	; 0xcc
   1be0c:	bl	13f84 <fprintf@plt>
   1be10:	b	1b7d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0xf4>
   1be14:	ldr	r3, [r4, #204]	; 0xcc
   1be18:	mov	r2, #36	; 0x24
   1be1c:	mov	r1, #1
   1be20:	ldr	r0, [pc, #372]	; 1bf9c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b8>
   1be24:	bl	13f18 <fwrite@plt>
   1be28:	b	1bd58 <__flatcc_fb_gen_common_c_builder_header@@Base+0x674>
   1be2c:			; <UNDEFINED> instruction: 0x000443b4
   1be30:	ldrdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   1be34:	andeq	ip, r3, r0, lsr sp
   1be38:	strdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   1be3c:	andeq	r4, r4, ip, lsr #8
   1be40:	andeq	r4, r4, r4, asr #8
   1be44:	andeq	r2, r4, ip, lsl #30
   1be48:	andeq	r4, r4, r8, ror #8
   1be4c:			; <UNDEFINED> instruction: 0x000445bc
   1be50:	ldrdeq	r4, [r4], -r8
   1be54:	muleq	r3, r8, lr
   1be58:	andeq	r4, r4, r8, asr r6
   1be5c:	andeq	r4, r4, ip, asr #19
   1be60:	muleq	r4, r8, r0
   1be64:	andeq	r5, r4, r4, lsr #2
   1be68:	andeq	r5, r4, r0, ror #23
   1be6c:			; <UNDEFINED> instruction: 0x00045fbc
   1be70:	strdeq	r6, [r4], -r4
   1be74:	andeq	r6, r4, r0, ror sl
   1be78:	andeq	r7, r4, r4, ror #3
   1be7c:	andeq	r7, r4, ip, lsr #14
   1be80:	andeq	r7, r4, ip, lsr #23
   1be84:	andeq	r7, r4, ip, lsr sp
   1be88:	muleq	r4, r8, r0
   1be8c:	andeq	r8, r4, r0, lsr #5
   1be90:	andeq	r8, r4, ip, lsl #12
   1be94:	andeq	r8, r4, r8, lsl #22
   1be98:	andeq	r8, r4, r4, lsl ip
   1be9c:	andeq	r8, r4, ip, ror pc
   1bea0:	andeq	r9, r4, ip, ror r5
   1bea4:	andeq	r9, r4, r0, lsr r7
   1bea8:	andeq	r9, r4, r8, asr r9
   1beac:	andeq	r9, r4, r8, lsl sp
   1beb0:	ldrdeq	r9, [r4], -r8
   1beb4:	andeq	sl, r4, ip, ror #7
   1beb8:	ldrdeq	sl, [r4], -r8
   1bebc:	andeq	sl, r4, ip, lsr r7
   1bec0:			; <UNDEFINED> instruction: 0x0004aab4
   1bec4:	andeq	sl, r4, r4, lsl #30
   1bec8:	muleq	r4, ip, r1
   1becc:	muleq	r4, r8, r5
   1bed0:	andeq	fp, r4, r4, lsr #13
   1bed4:	andeq	fp, r4, r0, lsr r7
   1bed8:	andeq	fp, r4, ip, ror sl
   1bedc:	andeq	fp, r4, r4, lsl #26
   1bee0:	muleq	r4, r4, pc	; <UNPREDICTABLE>
   1bee4:	andeq	ip, r4, ip, asr #10
   1bee8:	ldrdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1beec:	andeq	ip, r4, r8, lsl #12
   1bef0:	andeq	ip, r4, ip, lsr #12
   1bef4:	andeq	ip, r4, r8, asr r6
   1bef8:	andeq	ip, r4, ip, ror r6
   1befc:	andeq	ip, r4, r8, lsr #13
   1bf00:	andeq	ip, r4, ip, asr #13
   1bf04:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1bf08:	andeq	ip, r4, r0, lsr #14
   1bf0c:	andeq	ip, r4, r0, asr r7
   1bf10:	andeq	ip, r4, r4, ror r7
   1bf14:	andeq	ip, r4, r4, lsr #15
   1bf18:	andeq	ip, r4, r8, asr #15
   1bf1c:	strdeq	ip, [r4], -r4
   1bf20:	andeq	ip, r4, r8, lsl r8
   1bf24:	andeq	ip, r4, r4, asr #16
   1bf28:	andeq	ip, r4, r8, ror #16
   1bf2c:	muleq	r4, r4, r8
   1bf30:			; <UNDEFINED> instruction: 0x0004c8b8
   1bf34:	andeq	ip, r4, r4, ror #17
   1bf38:	andeq	ip, r4, r8, lsl #18
   1bf3c:	andeq	ip, r4, r4, lsr r9
   1bf40:	andeq	ip, r4, r8, asr r9
   1bf44:	andeq	ip, r4, r0, lsl #19
   1bf48:	andeq	ip, r4, r8, lsr #19
   1bf4c:	ldrdeq	ip, [r4], -r0
   1bf50:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1bf54:	andeq	ip, r4, r8, lsr #20
   1bf58:	andeq	ip, r4, r4, asr sl
   1bf5c:	andeq	ip, r4, ip, ror sl
   1bf60:	andeq	ip, r4, r4, lsr #21
   1bf64:	andeq	ip, r4, ip, asr #21
   1bf68:	strdeq	ip, [r4], -r4
   1bf6c:	andeq	ip, r4, ip, lsl fp
   1bf70:	andeq	ip, r4, r4, lsr fp
   1bf74:	andeq	ip, r4, ip, asr #22
   1bf78:	andeq	ip, r3, r4, asr #28
   1bf7c:	andeq	r4, r4, r8, ror r4
   1bf80:	andeq	r4, r4, r0, lsr #9
   1bf84:	andeq	r4, r4, r8, asr #9
   1bf88:	strdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   1bf8c:	andeq	r4, r4, r8, lsr #10
   1bf90:	andeq	r4, r4, r4, ror #10
   1bf94:	andeq	r4, r4, r0, lsl #12
   1bf98:	andeq	r4, r4, r4, lsr r6
   1bf9c:	andeq	r2, r4, r8, lsr #25

0001bfa0 <__flatcc_fb_gen_c_builder@@Base>:
   1bfa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bfa4:	sub	sp, sp, #484	; 0x1e4
   1bfa8:	mov	fp, r0
   1bfac:	str	r0, [sp, #32]
   1bfb0:	ldr	r3, [r0, #208]	; 0xd0
   1bfb4:	ldr	r2, [r3, #164]	; 0xa4
   1bfb8:	mov	r3, r2
   1bfbc:	ldr	r1, [pc, #3956]	; 1cf38 <__flatcc_fb_gen_c_builder@@Base+0xf98>
   1bfc0:	ldr	r0, [r0, #204]	; 0xcc
   1bfc4:	bl	13f84 <fprintf@plt>
   1bfc8:	ldr	r3, [fp, #204]	; 0xcc
   1bfcc:	mov	r2, #81	; 0x51
   1bfd0:	mov	r1, #1
   1bfd4:	ldr	r0, [pc, #3936]	; 1cf3c <__flatcc_fb_gen_c_builder@@Base+0xf9c>
   1bfd8:	bl	13f18 <fwrite@plt>
   1bfdc:	ldr	r3, [fp, #208]	; 0xd0
   1bfe0:	ldr	r2, [r3, #164]	; 0xa4
   1bfe4:	ldr	r1, [pc, #3924]	; 1cf40 <__flatcc_fb_gen_c_builder@@Base+0xfa0>
   1bfe8:	ldr	r0, [fp, #204]	; 0xcc
   1bfec:	bl	13f84 <fprintf@plt>
   1bff0:	ldr	r3, [fp, #208]	; 0xd0
   1bff4:	ldr	r2, [r3, #160]	; 0xa0
   1bff8:	ldr	r1, [pc, #3908]	; 1cf44 <__flatcc_fb_gen_c_builder@@Base+0xfa4>
   1bffc:	ldr	r0, [fp, #204]	; 0xcc
   1c000:	bl	13f84 <fprintf@plt>
   1c004:	ldr	r4, [pc, #3900]	; 1cf48 <__flatcc_fb_gen_c_builder@@Base+0xfa8>
   1c008:	ldr	r3, [fp, #204]	; 0xcc
   1c00c:	mov	r2, #7
   1c010:	mov	r1, #1
   1c014:	mov	r0, r4
   1c018:	bl	13f18 <fwrite@plt>
   1c01c:	add	r2, fp, #102	; 0x66
   1c020:	ldr	r1, [pc, #3876]	; 1cf4c <__flatcc_fb_gen_c_builder@@Base+0xfac>
   1c024:	ldr	r0, [fp, #204]	; 0xcc
   1c028:	bl	13f84 <fprintf@plt>
   1c02c:	mov	r2, fp
   1c030:	ldr	r1, [pc, #3864]	; 1cf50 <__flatcc_fb_gen_c_builder@@Base+0xfb0>
   1c034:	ldr	r0, [fp, #204]	; 0xcc
   1c038:	bl	13f84 <fprintf@plt>
   1c03c:	ldr	r3, [fp, #204]	; 0xcc
   1c040:	mov	r2, #7
   1c044:	mov	r1, #1
   1c048:	mov	r0, r4
   1c04c:	bl	13f18 <fwrite@plt>
   1c050:	ldr	r2, [pc, #3836]	; 1cf54 <__flatcc_fb_gen_c_builder@@Base+0xfb4>
   1c054:	ldr	r1, [pc, #3836]	; 1cf58 <__flatcc_fb_gen_c_builder@@Base+0xfb8>
   1c058:	mov	r0, fp
   1c05c:	bl	15058 <__flatcc_fb_gen_c_includes@@Base>
   1c060:	ldr	r3, [fp, #212]	; 0xd4
   1c064:	ldr	r3, [r3, #140]	; 0x8c
   1c068:	cmp	r3, #0
   1c06c:	bne	1c108 <__flatcc_fb_gen_c_builder@@Base+0x168>
   1c070:	ldr	r3, [fp, #208]	; 0xd0
   1c074:	ldrh	r2, [r3, #16]
   1c078:	cmp	r2, #2
   1c07c:	beq	1c120 <__flatcc_fb_gen_c_builder@@Base+0x180>
   1c080:	mov	r3, fp
   1c084:	mov	r2, fp
   1c088:	ldr	r1, [pc, #3788]	; 1cf5c <__flatcc_fb_gen_c_builder@@Base+0xfbc>
   1c08c:	ldr	r0, [fp, #204]	; 0xcc
   1c090:	bl	13f84 <fprintf@plt>
   1c094:	ldr	r3, [fp, #208]	; 0xd0
   1c098:	ldrh	r2, [r3, #32]
   1c09c:	cmp	r2, #2
   1c0a0:	beq	1c148 <__flatcc_fb_gen_c_builder@@Base+0x1a8>
   1c0a4:	ldr	r3, [fp, #212]	; 0xd4
   1c0a8:	ldr	r3, [r3, #104]	; 0x68
   1c0ac:	str	r3, [sp]
   1c0b0:	mov	r3, fp
   1c0b4:	mov	r2, fp
   1c0b8:	ldr	r1, [pc, #3744]	; 1cf60 <__flatcc_fb_gen_c_builder@@Base+0xfc0>
   1c0bc:	ldr	r0, [fp, #204]	; 0xcc
   1c0c0:	bl	13f84 <fprintf@plt>
   1c0c4:	ldr	r1, [fp, #204]	; 0xcc
   1c0c8:	mov	r0, #10
   1c0cc:	bl	13fe4 <fputc@plt>
   1c0d0:	mov	r2, #220	; 0xdc
   1c0d4:	mov	r1, #0
   1c0d8:	add	r0, sp, #260	; 0x104
   1c0dc:	bl	13f9c <memset@plt>
   1c0e0:	ldr	r3, [fp, #208]	; 0xd0
   1c0e4:	ldr	r4, [r3, #40]	; 0x28
   1c0e8:	cmp	r4, #0
   1c0ec:	beq	1c1dc <__flatcc_fb_gen_c_builder@@Base+0x23c>
   1c0f0:	mov	r2, #0
   1c0f4:	add	r5, sp, #260	; 0x104
   1c0f8:	ldr	r8, [pc, #3684]	; 1cf64 <__flatcc_fb_gen_c_builder@@Base+0xfc4>
   1c0fc:	ldr	r7, [pc, #3684]	; 1cf68 <__flatcc_fb_gen_c_builder@@Base+0xfc8>
   1c100:	mov	r6, #1
   1c104:	b	1c17c <__flatcc_fb_gen_c_builder@@Base+0x1dc>
   1c108:	ldr	r3, [fp, #204]	; 0xcc
   1c10c:	mov	r2, #36	; 0x24
   1c110:	mov	r1, #1
   1c114:	ldr	r0, [pc, #3664]	; 1cf6c <__flatcc_fb_gen_c_builder@@Base+0xfcc>
   1c118:	bl	13f18 <fwrite@plt>
   1c11c:	b	1c070 <__flatcc_fb_gen_c_builder@@Base+0xd0>
   1c120:	ldr	r2, [r3, #8]
   1c124:	str	r2, [sp, #4]
   1c128:	ldr	r3, [r3, #12]
   1c12c:	str	r3, [sp]
   1c130:	mov	r3, fp
   1c134:	mov	r2, fp
   1c138:	ldr	r1, [pc, #3632]	; 1cf70 <__flatcc_fb_gen_c_builder@@Base+0xfd0>
   1c13c:	ldr	r0, [fp, #204]	; 0xcc
   1c140:	bl	13f84 <fprintf@plt>
   1c144:	b	1c094 <__flatcc_fb_gen_c_builder@@Base+0xf4>
   1c148:	ldr	r2, [r3, #24]
   1c14c:	str	r2, [sp, #4]
   1c150:	ldr	r3, [r3, #28]
   1c154:	str	r3, [sp]
   1c158:	mov	r3, fp
   1c15c:	mov	r2, fp
   1c160:	ldr	r1, [pc, #3596]	; 1cf74 <__flatcc_fb_gen_c_builder@@Base+0xfd4>
   1c164:	ldr	r0, [fp, #204]	; 0xcc
   1c168:	bl	13f84 <fprintf@plt>
   1c16c:	b	1c0c4 <__flatcc_fb_gen_c_builder@@Base+0x124>
   1c170:	ldr	r4, [r4]
   1c174:	cmp	r4, #0
   1c178:	beq	1c1d4 <__flatcc_fb_gen_c_builder@@Base+0x234>
   1c17c:	ldrh	r3, [r4, #8]
   1c180:	cmp	r3, #3
   1c184:	bne	1c170 <__flatcc_fb_gen_c_builder@@Base+0x1d0>
   1c188:	mov	r2, r5
   1c18c:	mov	r1, r4
   1c190:	ldr	r0, [r4, #12]
   1c194:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1c198:	str	r5, [sp]
   1c19c:	mov	r3, r5
   1c1a0:	mov	r2, r5
   1c1a4:	mov	r1, r8
   1c1a8:	ldr	r0, [fp, #204]	; 0xcc
   1c1ac:	bl	13f84 <fprintf@plt>
   1c1b0:	str	r5, [sp, #4]
   1c1b4:	str	r5, [sp]
   1c1b8:	ldr	r2, [sp, #32]
   1c1bc:	mov	r3, r2
   1c1c0:	mov	r1, r7
   1c1c4:	ldr	r0, [fp, #204]	; 0xcc
   1c1c8:	bl	13f84 <fprintf@plt>
   1c1cc:	mov	r2, r6
   1c1d0:	b	1c170 <__flatcc_fb_gen_c_builder@@Base+0x1d0>
   1c1d4:	cmp	r2, #0
   1c1d8:	bne	1c590 <__flatcc_fb_gen_c_builder@@Base+0x5f0>
   1c1dc:	ldr	r3, [fp, #208]	; 0xd0
   1c1e0:	ldr	r5, [r3, #44]	; 0x2c
   1c1e4:	cmp	r5, #0
   1c1e8:	beq	1c558 <__flatcc_fb_gen_c_builder@@Base+0x5b8>
   1c1ec:	mov	r2, #220	; 0xdc
   1c1f0:	mov	r1, #0
   1c1f4:	add	r0, sp, #260	; 0x104
   1c1f8:	bl	13f9c <memset@plt>
   1c1fc:	ldrh	r3, [r5, #8]
   1c200:	cmp	r3, #1
   1c204:	bne	1c5a0 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1c208:	add	r4, sp, #260	; 0x104
   1c20c:	mov	r2, r4
   1c210:	mov	r1, r5
   1c214:	ldr	r0, [r5, #12]
   1c218:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1c21c:	mov	r0, r5
   1c220:	bl	197cc <__flatcc_gen_sort@@Base+0x12c>
   1c224:	mov	r8, r0
   1c228:	mov	r2, r4
   1c22c:	ldr	r1, [pc, #3396]	; 1cf78 <__flatcc_fb_gen_c_builder@@Base+0xfd8>
   1c230:	ldr	r0, [fp, #204]	; 0xcc
   1c234:	bl	13f84 <fprintf@plt>
   1c238:	mov	r6, #1
   1c23c:	str	r6, [sp]
   1c240:	mov	r3, r8
   1c244:	mov	r2, #0
   1c248:	mov	r1, r5
   1c24c:	mov	r0, fp
   1c250:	bl	19b90 <__flatcc_gen_sort@@Base+0x4f0>
   1c254:	mov	r2, r4
   1c258:	ldr	r1, [pc, #3356]	; 1cf7c <__flatcc_fb_gen_c_builder@@Base+0xfdc>
   1c25c:	ldr	r0, [fp, #204]	; 0xcc
   1c260:	bl	13f84 <fprintf@plt>
   1c264:	str	r6, [sp]
   1c268:	mov	r3, r8
   1c26c:	mov	r2, #0
   1c270:	mov	r1, r5
   1c274:	mov	r0, fp
   1c278:	bl	19a7c <__flatcc_gen_sort@@Base+0x3dc>
   1c27c:	ldr	r1, [fp, #204]	; 0xcc
   1c280:	mov	r0, #10
   1c284:	bl	13fe4 <fputc@plt>
   1c288:	str	r4, [sp]
   1c28c:	mov	r3, r4
   1c290:	mov	r2, r4
   1c294:	ldr	r1, [pc, #3300]	; 1cf80 <__flatcc_fb_gen_c_builder@@Base+0xfe0>
   1c298:	ldr	r0, [fp, #204]	; 0xcc
   1c29c:	bl	13f84 <fprintf@plt>
   1c2a0:	mov	r7, #0
   1c2a4:	str	r7, [sp]
   1c2a8:	mov	r3, r8
   1c2ac:	mov	r2, r7
   1c2b0:	mov	r1, r5
   1c2b4:	mov	r0, fp
   1c2b8:	bl	19b90 <__flatcc_gen_sort@@Base+0x4f0>
   1c2bc:	ldr	r3, [fp, #204]	; 0xcc
   1c2c0:	mov	r2, #4
   1c2c4:	mov	r1, r6
   1c2c8:	ldr	r0, [pc, #3252]	; 1cf84 <__flatcc_fb_gen_c_builder@@Base+0xfe4>
   1c2cc:	bl	13f18 <fwrite@plt>
   1c2d0:	str	r7, [sp, #4]
   1c2d4:	str	r7, [sp]
   1c2d8:	mov	r3, r8
   1c2dc:	mov	r2, r7
   1c2e0:	mov	r1, r5
   1c2e4:	mov	r0, fp
   1c2e8:	bl	19f50 <__flatcc_gen_sort@@Base+0x8b0>
   1c2ec:	ldr	r3, [fp, #204]	; 0xcc
   1c2f0:	mov	r2, #12
   1c2f4:	mov	r1, r6
   1c2f8:	ldr	r0, [pc, #3208]	; 1cf88 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1c2fc:	bl	13f18 <fwrite@plt>
   1c300:	str	r4, [sp, #4]
   1c304:	str	r4, [sp]
   1c308:	mov	r3, r4
   1c30c:	mov	r2, r4
   1c310:	ldr	r1, [pc, #3188]	; 1cf8c <__flatcc_fb_gen_c_builder@@Base+0xfec>
   1c314:	ldr	r0, [fp, #204]	; 0xcc
   1c318:	bl	13f84 <fprintf@plt>
   1c31c:	ldr	sl, [pc, #3180]	; 1cf90 <__flatcc_fb_gen_c_builder@@Base+0xff0>
   1c320:	ldr	r3, [fp, #204]	; 0xcc
   1c324:	mov	r2, #2
   1c328:	mov	r1, r6
   1c32c:	mov	r0, sl
   1c330:	bl	13f18 <fwrite@plt>
   1c334:	str	r6, [sp, #4]
   1c338:	str	r7, [sp]
   1c33c:	mov	r3, r8
   1c340:	mov	r2, r7
   1c344:	mov	r1, r5
   1c348:	mov	r0, fp
   1c34c:	bl	19f50 <__flatcc_gen_sort@@Base+0x8b0>
   1c350:	ldr	r3, [fp, #204]	; 0xcc
   1c354:	mov	r2, #12
   1c358:	mov	r1, r6
   1c35c:	ldr	r0, [pc, #3108]	; 1cf88 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1c360:	bl	13f18 <fwrite@plt>
   1c364:	str	r4, [sp]
   1c368:	mov	r3, r4
   1c36c:	mov	r2, r4
   1c370:	ldr	r1, [pc, #3100]	; 1cf94 <__flatcc_fb_gen_c_builder@@Base+0xff4>
   1c374:	ldr	r0, [fp, #204]	; 0xcc
   1c378:	bl	13f84 <fprintf@plt>
   1c37c:	str	r7, [sp]
   1c380:	mov	r3, r8
   1c384:	mov	r2, r7
   1c388:	mov	r1, r5
   1c38c:	mov	r0, fp
   1c390:	bl	19b90 <__flatcc_gen_sort@@Base+0x4f0>
   1c394:	ldr	r3, [fp, #204]	; 0xcc
   1c398:	mov	r2, #4
   1c39c:	mov	r1, r6
   1c3a0:	ldr	r0, [pc, #3036]	; 1cf84 <__flatcc_fb_gen_c_builder@@Base+0xfe4>
   1c3a4:	bl	13f18 <fwrite@plt>
   1c3a8:	str	r7, [sp, #4]
   1c3ac:	mov	r9, #2
   1c3b0:	str	r9, [sp]
   1c3b4:	mov	r3, r8
   1c3b8:	mov	r2, r7
   1c3bc:	mov	r1, r5
   1c3c0:	mov	r0, fp
   1c3c4:	bl	19f50 <__flatcc_gen_sort@@Base+0x8b0>
   1c3c8:	ldr	r3, [fp, #204]	; 0xcc
   1c3cc:	mov	r2, #12
   1c3d0:	mov	r1, r6
   1c3d4:	ldr	r0, [pc, #2988]	; 1cf88 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1c3d8:	bl	13f18 <fwrite@plt>
   1c3dc:	str	r4, [sp, #4]
   1c3e0:	str	r4, [sp]
   1c3e4:	mov	r3, r4
   1c3e8:	mov	r2, r4
   1c3ec:	ldr	r1, [pc, #2980]	; 1cf98 <__flatcc_fb_gen_c_builder@@Base+0xff8>
   1c3f0:	ldr	r0, [fp, #204]	; 0xcc
   1c3f4:	bl	13f84 <fprintf@plt>
   1c3f8:	ldr	r3, [fp, #204]	; 0xcc
   1c3fc:	mov	r2, r9
   1c400:	mov	r1, r6
   1c404:	mov	r0, sl
   1c408:	bl	13f18 <fwrite@plt>
   1c40c:	str	r6, [sp, #4]
   1c410:	str	r9, [sp]
   1c414:	mov	r3, r8
   1c418:	mov	r2, r7
   1c41c:	mov	r1, r5
   1c420:	mov	r0, fp
   1c424:	bl	19f50 <__flatcc_gen_sort@@Base+0x8b0>
   1c428:	ldr	r3, [fp, #204]	; 0xcc
   1c42c:	mov	r2, #12
   1c430:	mov	r1, r6
   1c434:	ldr	r0, [pc, #2892]	; 1cf88 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1c438:	bl	13f18 <fwrite@plt>
   1c43c:	str	r4, [sp]
   1c440:	mov	r3, r4
   1c444:	mov	r2, r4
   1c448:	ldr	r1, [pc, #2892]	; 1cf9c <__flatcc_fb_gen_c_builder@@Base+0xffc>
   1c44c:	ldr	r0, [fp, #204]	; 0xcc
   1c450:	bl	13f84 <fprintf@plt>
   1c454:	str	r7, [sp]
   1c458:	mov	r3, r8
   1c45c:	mov	r2, r7
   1c460:	mov	r1, r5
   1c464:	mov	r0, fp
   1c468:	bl	19b90 <__flatcc_gen_sort@@Base+0x4f0>
   1c46c:	ldr	r3, [fp, #204]	; 0xcc
   1c470:	mov	r2, #4
   1c474:	mov	r1, r6
   1c478:	ldr	r0, [pc, #2820]	; 1cf84 <__flatcc_fb_gen_c_builder@@Base+0xfe4>
   1c47c:	bl	13f18 <fwrite@plt>
   1c480:	str	r7, [sp, #4]
   1c484:	str	r6, [sp]
   1c488:	mov	r3, r8
   1c48c:	mov	r2, r7
   1c490:	mov	r1, r5
   1c494:	mov	r0, fp
   1c498:	bl	19f50 <__flatcc_gen_sort@@Base+0x8b0>
   1c49c:	ldr	r3, [fp, #204]	; 0xcc
   1c4a0:	mov	r2, #12
   1c4a4:	mov	r1, r6
   1c4a8:	ldr	r0, [pc, #2776]	; 1cf88 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1c4ac:	bl	13f18 <fwrite@plt>
   1c4b0:	str	r4, [sp, #4]
   1c4b4:	str	r4, [sp]
   1c4b8:	mov	r3, r4
   1c4bc:	mov	r2, r4
   1c4c0:	ldr	r1, [pc, #2776]	; 1cfa0 <__flatcc_fb_gen_c_builder@@Base+0x1000>
   1c4c4:	ldr	r0, [fp, #204]	; 0xcc
   1c4c8:	bl	13f84 <fprintf@plt>
   1c4cc:	ldr	r3, [fp, #204]	; 0xcc
   1c4d0:	mov	r2, r9
   1c4d4:	mov	r1, r6
   1c4d8:	mov	r0, sl
   1c4dc:	bl	13f18 <fwrite@plt>
   1c4e0:	str	r6, [sp, #4]
   1c4e4:	str	r6, [sp]
   1c4e8:	mov	r3, r8
   1c4ec:	mov	r2, r7
   1c4f0:	mov	r1, r5
   1c4f4:	mov	r0, fp
   1c4f8:	bl	19f50 <__flatcc_gen_sort@@Base+0x8b0>
   1c4fc:	ldr	r3, [fp, #204]	; 0xcc
   1c500:	mov	r2, #12
   1c504:	mov	r1, r6
   1c508:	ldr	r0, [pc, #2680]	; 1cf88 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1c50c:	bl	13f18 <fwrite@plt>
   1c510:	str	r4, [sp, #24]
   1c514:	str	r4, [sp, #20]
   1c518:	ldrh	r3, [r5, #104]	; 0x68
   1c51c:	str	r3, [sp, #16]
   1c520:	ldrd	r2, [r5, #112]	; 0x70
   1c524:	strd	r2, [sp, #8]
   1c528:	str	r4, [sp]
   1c52c:	ldr	r2, [sp, #32]
   1c530:	mov	r3, r2
   1c534:	ldr	r1, [pc, #2664]	; 1cfa4 <__flatcc_fb_gen_c_builder@@Base+0x1004>
   1c538:	ldr	r0, [fp, #204]	; 0xcc
   1c53c:	bl	13f84 <fprintf@plt>
   1c540:	ldr	r1, [fp, #204]	; 0xcc
   1c544:	mov	r0, #10
   1c548:	bl	13fe4 <fputc@plt>
   1c54c:	ldr	r5, [r5, #120]	; 0x78
   1c550:	cmp	r5, r7
   1c554:	bne	1c1ec <__flatcc_fb_gen_c_builder@@Base+0x24c>
   1c558:	mov	r2, #220	; 0xdc
   1c55c:	mov	r1, #0
   1c560:	add	r0, sp, #260	; 0x104
   1c564:	bl	13f9c <memset@plt>
   1c568:	ldr	r3, [fp, #208]	; 0xd0
   1c56c:	ldr	r4, [r3, #40]	; 0x28
   1c570:	cmp	r4, #0
   1c574:	beq	1c608 <__flatcc_fb_gen_c_builder@@Base+0x668>
   1c578:	mov	r2, #0
   1c57c:	add	r5, sp, #260	; 0x104
   1c580:	ldr	r7, [pc, #2592]	; 1cfa8 <__flatcc_fb_gen_c_builder@@Base+0x1008>
   1c584:	mov	r6, #1
   1c588:	ldr	r8, [sp, #32]
   1c58c:	b	1c5c0 <__flatcc_fb_gen_c_builder@@Base+0x620>
   1c590:	ldr	r1, [fp, #204]	; 0xcc
   1c594:	mov	r0, #10
   1c598:	bl	13fe4 <fputc@plt>
   1c59c:	b	1c1dc <__flatcc_fb_gen_c_builder@@Base+0x23c>
   1c5a0:	ldr	r3, [pc, #2564]	; 1cfac <__flatcc_fb_gen_c_builder@@Base+0x100c>
   1c5a4:	ldr	r2, [pc, #2564]	; 1cfb0 <__flatcc_fb_gen_c_builder@@Base+0x1010>
   1c5a8:	ldr	r1, [pc, #2804]	; 1d0a4 <__flatcc_fb_gen_c_builder@@Base+0x1104>
   1c5ac:	ldr	r0, [pc, #2560]	; 1cfb4 <__flatcc_fb_gen_c_builder@@Base+0x1014>
   1c5b0:	bl	14038 <__assert_fail@plt>
   1c5b4:	ldr	r4, [r4]
   1c5b8:	cmp	r4, #0
   1c5bc:	beq	1c600 <__flatcc_fb_gen_c_builder@@Base+0x660>
   1c5c0:	ldrh	r3, [r4, #8]
   1c5c4:	cmp	r3, #4
   1c5c8:	bne	1c5b4 <__flatcc_fb_gen_c_builder@@Base+0x614>
   1c5cc:	mov	r2, r5
   1c5d0:	mov	r1, r4
   1c5d4:	ldr	r0, [r4, #12]
   1c5d8:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1c5dc:	str	r5, [sp, #4]
   1c5e0:	str	r8, [sp]
   1c5e4:	mov	r3, r5
   1c5e8:	mov	r2, r8
   1c5ec:	mov	r1, r7
   1c5f0:	ldr	r0, [fp, #204]	; 0xcc
   1c5f4:	bl	13f84 <fprintf@plt>
   1c5f8:	mov	r2, r6
   1c5fc:	b	1c5b4 <__flatcc_fb_gen_c_builder@@Base+0x614>
   1c600:	cmp	r2, #0
   1c604:	bne	1c620 <__flatcc_fb_gen_c_builder@@Base+0x680>
   1c608:	ldr	r3, [fp, #208]	; 0xd0
   1c60c:	ldr	r5, [r3, #40]	; 0x28
   1c610:	cmp	r5, #0
   1c614:	beq	1cf30 <__flatcc_fb_gen_c_builder@@Base+0xf90>
   1c618:	mov	sl, #0
   1c61c:	b	1c738 <__flatcc_fb_gen_c_builder@@Base+0x798>
   1c620:	ldr	r1, [fp, #204]	; 0xcc
   1c624:	mov	r0, #10
   1c628:	bl	13fe4 <fputc@plt>
   1c62c:	b	1c608 <__flatcc_fb_gen_c_builder@@Base+0x668>
   1c630:	mov	r6, #0
   1c634:	b	1c77c <__flatcc_fb_gen_c_builder@@Base+0x7dc>
   1c638:	ldr	r2, [pc, #2424]	; 1cfb8 <__flatcc_fb_gen_c_builder@@Base+0x1018>
   1c63c:	mov	r1, r8
   1c640:	ldr	r0, [fp, #204]	; 0xcc
   1c644:	bl	13f84 <fprintf@plt>
   1c648:	b	1c658 <__flatcc_fb_gen_c_builder@@Base+0x6b8>
   1c64c:	ldr	r1, [fp, #204]	; 0xcc
   1c650:	mov	r0, r9
   1c654:	bl	13fe4 <fputc@plt>
   1c658:	ldr	r2, [r4, #96]	; 0x60
   1c65c:	ldr	r1, [pc, #2392]	; 1cfbc <__flatcc_fb_gen_c_builder@@Base+0x101c>
   1c660:	ldr	r0, [fp, #204]	; 0xcc
   1c664:	bl	13f84 <fprintf@plt>
   1c668:	add	r7, r7, #1
   1c66c:	ldr	r4, [r4]
   1c670:	cmp	r4, #0
   1c674:	beq	1c6c8 <__flatcc_fb_gen_c_builder@@Base+0x728>
   1c678:	ldrh	r3, [r4, #72]	; 0x48
   1c67c:	tst	r3, #4
   1c680:	bne	1c66c <__flatcc_fb_gen_c_builder@@Base+0x6cc>
   1c684:	tst	r3, #256	; 0x100
   1c688:	beq	1c66c <__flatcc_fb_gen_c_builder@@Base+0x6cc>
   1c68c:	cmp	r7, #0
   1c690:	ble	1c64c <__flatcc_fb_gen_c_builder@@Base+0x6ac>
   1c694:	cmp	r6, #0
   1c698:	beq	1c658 <__flatcc_fb_gen_c_builder@@Base+0x6b8>
   1c69c:	tst	r7, #3
   1c6a0:	bne	1c6b0 <__flatcc_fb_gen_c_builder@@Base+0x710>
   1c6a4:	sub	r3, r6, r7
   1c6a8:	cmp	r3, #2
   1c6ac:	bgt	1c638 <__flatcc_fb_gen_c_builder@@Base+0x698>
   1c6b0:	ldr	r3, [fp, #204]	; 0xcc
   1c6b4:	mov	r2, sl
   1c6b8:	mov	r1, #1
   1c6bc:	ldr	r0, [pc, #2300]	; 1cfc0 <__flatcc_fb_gen_c_builder@@Base+0x1020>
   1c6c0:	bl	13f18 <fwrite@plt>
   1c6c4:	b	1c658 <__flatcc_fb_gen_c_builder@@Base+0x6b8>
   1c6c8:	cmp	r7, #0
   1c6cc:	ble	1c7c4 <__flatcc_fb_gen_c_builder@@Base+0x824>
   1c6d0:	ldr	r3, [fp, #204]	; 0xcc
   1c6d4:	mov	r2, #7
   1c6d8:	mov	r1, #1
   1c6dc:	ldr	r0, [pc, #2272]	; 1cfc4 <__flatcc_fb_gen_c_builder@@Base+0x1024>
   1c6e0:	bl	13f18 <fwrite@plt>
   1c6e4:	add	r4, sp, #260	; 0x104
   1c6e8:	mov	r2, #220	; 0xdc
   1c6ec:	mov	r1, #0
   1c6f0:	mov	r0, r4
   1c6f4:	bl	13f9c <memset@plt>
   1c6f8:	mov	r2, r4
   1c6fc:	ldr	r1, [sp, #36]	; 0x24
   1c700:	ldr	r0, [r5, #12]
   1c704:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1c708:	ldrd	r2, [r5, #96]	; 0x60
   1c70c:	strd	r2, [sp, #8]
   1c710:	str	r4, [sp]
   1c714:	ldr	r2, [sp, #32]
   1c718:	mov	r3, r2
   1c71c:	ldr	r1, [pc, #2212]	; 1cfc8 <__flatcc_fb_gen_c_builder@@Base+0x1028>
   1c720:	ldr	r0, [fp, #204]	; 0xcc
   1c724:	bl	13f84 <fprintf@plt>
   1c728:	mov	sl, #1
   1c72c:	ldr	r5, [r5]
   1c730:	cmp	r5, #0
   1c734:	beq	1c7dc <__flatcc_fb_gen_c_builder@@Base+0x83c>
   1c738:	ldrh	r3, [r5, #8]
   1c73c:	cmp	r3, #0
   1c740:	bne	1c72c <__flatcc_fb_gen_c_builder@@Base+0x78c>
   1c744:	mov	r2, #220	; 0xdc
   1c748:	mov	r1, #0
   1c74c:	add	r0, sp, #260	; 0x104
   1c750:	bl	13f9c <memset@plt>
   1c754:	ldr	r3, [r5, #20]
   1c758:	cmp	r3, #0
   1c75c:	beq	1c630 <__flatcc_fb_gen_c_builder@@Base+0x690>
   1c760:	mov	r6, #0
   1c764:	ldrh	r2, [r3, #72]	; 0x48
   1c768:	tst	r2, #4
   1c76c:	addeq	r6, r6, #1
   1c770:	ldr	r3, [r3]
   1c774:	cmp	r3, #0
   1c778:	bne	1c764 <__flatcc_fb_gen_c_builder@@Base+0x7c4>
   1c77c:	str	r5, [sp, #36]	; 0x24
   1c780:	add	r2, sp, #260	; 0x104
   1c784:	mov	r1, r5
   1c788:	ldr	r0, [r5, #12]
   1c78c:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1c790:	add	r3, sp, #260	; 0x104
   1c794:	ldr	r2, [sp, #32]
   1c798:	ldr	r1, [pc, #2092]	; 1cfcc <__flatcc_fb_gen_c_builder@@Base+0x102c>
   1c79c:	ldr	r0, [fp, #204]	; 0xcc
   1c7a0:	bl	13f84 <fprintf@plt>
   1c7a4:	ldr	r4, [r5, #20]
   1c7a8:	cmp	r4, #0
   1c7ac:	beq	1c7c4 <__flatcc_fb_gen_c_builder@@Base+0x824>
   1c7b0:	mov	r7, #0
   1c7b4:	mov	r9, #32
   1c7b8:	mov	sl, #2
   1c7bc:	ldr	r8, [pc, #2060]	; 1cfd0 <__flatcc_fb_gen_c_builder@@Base+0x1030>
   1c7c0:	b	1c678 <__flatcc_fb_gen_c_builder@@Base+0x6d8>
   1c7c4:	ldr	r3, [fp, #204]	; 0xcc
   1c7c8:	mov	r2, #6
   1c7cc:	mov	r1, #1
   1c7d0:	ldr	r0, [pc, #2044]	; 1cfd4 <__flatcc_fb_gen_c_builder@@Base+0x1034>
   1c7d4:	bl	13f18 <fwrite@plt>
   1c7d8:	b	1c6e4 <__flatcc_fb_gen_c_builder@@Base+0x744>
   1c7dc:	ldr	r3, [fp, #208]	; 0xd0
   1c7e0:	ldr	r9, [r3, #40]	; 0x28
   1c7e4:	cmp	r9, #0
   1c7e8:	bne	1ce90 <__flatcc_fb_gen_c_builder@@Base+0xef0>
   1c7ec:	cmp	sl, #0
   1c7f0:	bne	1cf20 <__flatcc_fb_gen_c_builder@@Base+0xf80>
   1c7f4:	ldr	r3, [fp, #208]	; 0xd0
   1c7f8:	ldr	r4, [r3, #40]	; 0x28
   1c7fc:	cmp	r4, #0
   1c800:	beq	1d46c <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   1c804:	mov	r2, #0
   1c808:	add	r6, sp, #40	; 0x28
   1c80c:	mov	r7, #220	; 0xdc
   1c810:	ldr	r9, [pc, #1984]	; 1cfd8 <__flatcc_fb_gen_c_builder@@Base+0x1038>
   1c814:	ldr	r8, [pc, #1984]	; 1cfdc <__flatcc_fb_gen_c_builder@@Base+0x103c>
   1c818:	ldrh	r3, [r4, #8]
   1c81c:	cmp	r3, #4
   1c820:	beq	1d0dc <__flatcc_fb_gen_c_builder@@Base+0x113c>
   1c824:	ldr	r4, [r4]
   1c828:	cmp	r4, #0
   1c82c:	bne	1c818 <__flatcc_fb_gen_c_builder@@Base+0x878>
   1c830:	cmp	r2, #0
   1c834:	beq	1c844 <__flatcc_fb_gen_c_builder@@Base+0x8a4>
   1c838:	ldr	r1, [fp, #204]	; 0xcc
   1c83c:	mov	r0, #10
   1c840:	bl	13fe4 <fputc@plt>
   1c844:	cmp	sl, #0
   1c848:	beq	1d46c <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   1c84c:	ldr	r3, [fp, #208]	; 0xd0
   1c850:	ldr	r5, [r3, #40]	; 0x28
   1c854:	cmp	r5, #0
   1c858:	beq	1d46c <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   1c85c:	ldr	r9, [pc, #1916]	; 1cfe0 <__flatcc_fb_gen_c_builder@@Base+0x1040>
   1c860:	str	sl, [sp, #36]	; 0x24
   1c864:	ldr	sl, [sp, #32]
   1c868:	b	1d3dc <__flatcc_fb_gen_c_builder@@Base+0x143c>
   1c86c:	mov	r5, #0
   1c870:	b	1cee4 <__flatcc_fb_gen_c_builder@@Base+0xf44>
   1c874:	ldr	r3, [fp, #204]	; 0xcc
   1c878:	mov	r2, #2
   1c87c:	mov	r1, #1
   1c880:	ldr	r0, [pc, #1848]	; 1cfc0 <__flatcc_fb_gen_c_builder@@Base+0x1020>
   1c884:	bl	13f18 <fwrite@plt>
   1c888:	b	1c8b4 <__flatcc_fb_gen_c_builder@@Base+0x914>
   1c88c:	tst	r2, #3
   1c890:	bne	1c8a0 <__flatcc_fb_gen_c_builder@@Base+0x900>
   1c894:	sub	r2, r5, r2
   1c898:	cmp	r2, #2
   1c89c:	bgt	1c8ec <__flatcc_fb_gen_c_builder@@Base+0x94c>
   1c8a0:	ldr	r3, [fp, #204]	; 0xcc
   1c8a4:	mov	r2, #2
   1c8a8:	mov	r1, #1
   1c8ac:	ldr	r0, [pc, #1804]	; 1cfc0 <__flatcc_fb_gen_c_builder@@Base+0x1020>
   1c8b0:	bl	13f18 <fwrite@plt>
   1c8b4:	ldrh	r3, [r4, #24]
   1c8b8:	sub	r3, r3, #7
   1c8bc:	cmp	r3, #8
   1c8c0:	ldrls	pc, [pc, r3, lsl #2]
   1c8c4:	b	1cd44 <__flatcc_fb_gen_c_builder@@Base+0xda4>
   1c8c8:	ldrdeq	ip, [r1], -r4
   1c8cc:			; <UNDEFINED> instruction: 0x0001cab0
   1c8d0:	andeq	ip, r1, r4, lsr #26
   1c8d4:	andeq	ip, r1, r0, asr #25
   1c8d8:	andeq	ip, r1, r4, asr #26
   1c8dc:	andeq	ip, r1, r4, asr #26
   1c8e0:	andeq	ip, r1, r4, asr #26
   1c8e4:	andeq	ip, r1, r0, lsl #18
   1c8e8:	strdeq	ip, [r1], -r8
   1c8ec:	ldr	r2, [pc, #1776]	; 1cfe4 <__flatcc_fb_gen_c_builder@@Base+0x1044>
   1c8f0:	ldr	r1, [pc, #1752]	; 1cfd0 <__flatcc_fb_gen_c_builder@@Base+0x1030>
   1c8f4:	ldr	r0, [fp, #204]	; 0xcc
   1c8f8:	bl	13f84 <fprintf@plt>
   1c8fc:	b	1c8b4 <__flatcc_fb_gen_c_builder@@Base+0x914>
   1c900:	ldr	r3, [r4, #16]
   1c904:	add	r2, sp, #260	; 0x104
   1c908:	mov	r1, r3
   1c90c:	ldr	r0, [r3, #12]
   1c910:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1c914:	ldr	r3, [r4, #16]
   1c918:	ldrh	r3, [r3, #8]
   1c91c:	cmp	r3, #4
   1c920:	ldrls	pc, [pc, r3, lsl #2]
   1c924:	b	1c9bc <__flatcc_fb_gen_c_builder@@Base+0xa1c>
   1c928:	andeq	ip, r1, ip, ror r9
   1c92c:	andeq	ip, r1, ip, lsr r9
   1c930:			; <UNDEFINED> instruction: 0x0001c9bc
   1c934:	andeq	ip, r1, ip, asr r9
   1c938:	muleq	r1, ip, r9
   1c93c:	ldrd	r2, [r4, #96]	; 0x60
   1c940:	strd	r2, [sp]
   1c944:	add	r2, sp, #260	; 0x104
   1c948:	ldr	r1, [pc, #1688]	; 1cfe8 <__flatcc_fb_gen_c_builder@@Base+0x1048>
   1c94c:	ldr	r0, [fp, #204]	; 0xcc
   1c950:	bl	13f84 <fprintf@plt>
   1c954:	mov	r2, r6
   1c958:	b	1ccdc <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1c95c:	ldrd	r2, [r4, #96]	; 0x60
   1c960:	strd	r2, [sp]
   1c964:	add	r2, sp, #260	; 0x104
   1c968:	ldr	r1, [pc, #1660]	; 1cfec <__flatcc_fb_gen_c_builder@@Base+0x104c>
   1c96c:	ldr	r0, [fp, #204]	; 0xcc
   1c970:	bl	13f84 <fprintf@plt>
   1c974:	mov	r2, r6
   1c978:	b	1ccdc <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1c97c:	ldrd	r2, [r4, #96]	; 0x60
   1c980:	strd	r2, [sp]
   1c984:	add	r2, sp, #260	; 0x104
   1c988:	ldr	r1, [pc, #1632]	; 1cff0 <__flatcc_fb_gen_c_builder@@Base+0x1050>
   1c98c:	ldr	r0, [fp, #204]	; 0xcc
   1c990:	bl	13f84 <fprintf@plt>
   1c994:	mov	r2, r6
   1c998:	b	1ccdc <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1c99c:	ldrd	r2, [r4, #96]	; 0x60
   1c9a0:	strd	r2, [sp]
   1c9a4:	add	r2, sp, #260	; 0x104
   1c9a8:	ldr	r1, [pc, #1604]	; 1cff4 <__flatcc_fb_gen_c_builder@@Base+0x1054>
   1c9ac:	ldr	r0, [fp, #204]	; 0xcc
   1c9b0:	bl	13f84 <fprintf@plt>
   1c9b4:	mov	r2, r6
   1c9b8:	b	1ccdc <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1c9bc:	ldr	r5, [pc, #1588]	; 1cff8 <__flatcc_fb_gen_c_builder@@Base+0x1058>
   1c9c0:	ldr	r4, [pc, #1756]	; 1d0a4 <__flatcc_fb_gen_c_builder@@Base+0x1104>
   1c9c4:	ldr	r3, [pc, #1756]	; 1d0a8 <__flatcc_fb_gen_c_builder@@Base+0x1108>
   1c9c8:	ldr	r0, [r3]
   1c9cc:	ldr	r3, [pc, #1576]	; 1cffc <__flatcc_fb_gen_c_builder@@Base+0x105c>
   1c9d0:	str	r3, [sp]
   1c9d4:	mov	r3, r5
   1c9d8:	mov	r2, r4
   1c9dc:	ldr	r1, [pc, #1740]	; 1d0b0 <__flatcc_fb_gen_c_builder@@Base+0x1110>
   1c9e0:	bl	13f84 <fprintf@plt>
   1c9e4:	ldr	r3, [pc, #1556]	; 1d000 <__flatcc_fb_gen_c_builder@@Base+0x1060>
   1c9e8:	mov	r2, r5
   1c9ec:	mov	r1, r4
   1c9f0:	ldr	r0, [pc, #1728]	; 1d0b8 <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1c9f4:	bl	14038 <__assert_fail@plt>
   1c9f8:	ldr	r3, [r4, #16]
   1c9fc:	add	r2, sp, #260	; 0x104
   1ca00:	mov	r1, r3
   1ca04:	ldr	r0, [r3, #12]
   1ca08:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1ca0c:	ldr	r3, [r4, #16]
   1ca10:	ldrh	r3, [r3, #8]
   1ca14:	cmp	r3, #4
   1ca18:	ldrls	pc, [pc, r3, lsl #2]
   1ca1c:	b	1ca74 <__flatcc_fb_gen_c_builder@@Base+0xad4>
   1ca20:	andeq	ip, r1, r4, lsr sl
   1ca24:	andeq	ip, r1, r4, lsr sl
   1ca28:	andeq	ip, r1, r4, ror sl
   1ca2c:	andeq	ip, r1, r4, lsr sl
   1ca30:	andeq	ip, r1, r4, asr sl
   1ca34:	ldrd	r2, [r4, #96]	; 0x60
   1ca38:	strd	r2, [sp]
   1ca3c:	add	r2, sp, #260	; 0x104
   1ca40:	ldr	r1, [pc, #1468]	; 1d004 <__flatcc_fb_gen_c_builder@@Base+0x1064>
   1ca44:	ldr	r0, [fp, #204]	; 0xcc
   1ca48:	bl	13f84 <fprintf@plt>
   1ca4c:	mov	r2, r6
   1ca50:	b	1ccdc <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1ca54:	ldrd	r2, [r4, #96]	; 0x60
   1ca58:	strd	r2, [sp]
   1ca5c:	add	r2, sp, #260	; 0x104
   1ca60:	ldr	r1, [pc, #1440]	; 1d008 <__flatcc_fb_gen_c_builder@@Base+0x1068>
   1ca64:	ldr	r0, [fp, #204]	; 0xcc
   1ca68:	bl	13f84 <fprintf@plt>
   1ca6c:	mov	r2, r6
   1ca70:	b	1ccdc <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1ca74:	ldr	r5, [pc, #1424]	; 1d00c <__flatcc_fb_gen_c_builder@@Base+0x106c>
   1ca78:	ldr	r4, [pc, #1572]	; 1d0a4 <__flatcc_fb_gen_c_builder@@Base+0x1104>
   1ca7c:	ldr	r3, [pc, #1572]	; 1d0a8 <__flatcc_fb_gen_c_builder@@Base+0x1108>
   1ca80:	ldr	r0, [r3]
   1ca84:	ldr	r3, [pc, #1412]	; 1d010 <__flatcc_fb_gen_c_builder@@Base+0x1070>
   1ca88:	str	r3, [sp]
   1ca8c:	mov	r3, r5
   1ca90:	mov	r2, r4
   1ca94:	ldr	r1, [pc, #1556]	; 1d0b0 <__flatcc_fb_gen_c_builder@@Base+0x1110>
   1ca98:	bl	13f84 <fprintf@plt>
   1ca9c:	ldr	r3, [pc, #1372]	; 1d000 <__flatcc_fb_gen_c_builder@@Base+0x1060>
   1caa0:	mov	r2, r5
   1caa4:	mov	r1, r4
   1caa8:	ldr	r0, [pc, #1544]	; 1d0b8 <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1caac:	bl	14038 <__assert_fail@plt>
   1cab0:	ldr	r3, [r4, #16]
   1cab4:	cmp	r3, #5
   1cab8:	beq	1cb28 <__flatcc_fb_gen_c_builder@@Base+0xb88>
   1cabc:	sub	r3, r3, #1
   1cac0:	cmp	r3, #10
   1cac4:	ldrls	pc, [pc, r3, lsl #2]
   1cac8:	b	1cb84 <__flatcc_fb_gen_c_builder@@Base+0xbe4>
   1cacc:			; <UNDEFINED> instruction: 0x0001cbbc
   1cad0:	strdeq	ip, [r1], -r8
   1cad4:	andeq	ip, r1, r8, asr #23
   1cad8:	andeq	ip, r1, r4, lsl #22
   1cadc:	andeq	ip, r1, r4, lsr fp
   1cae0:	andeq	ip, r1, ip, lsr fp
   1cae4:	andeq	ip, r1, r8, asr #22
   1cae8:	andeq	ip, r1, r4, asr fp
   1caec:	andeq	ip, r1, r0, ror #22
   1caf0:	andeq	ip, r1, r8, ror fp
   1caf4:	andeq	ip, r1, ip, ror #22
   1caf8:	ldr	r2, [pc, #1300]	; 1d014 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1cafc:	ldr	r3, [pc, #1300]	; 1d018 <__flatcc_fb_gen_c_builder@@Base+0x1078>
   1cb00:	b	1cb0c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1cb04:	ldr	r2, [pc, #1288]	; 1d014 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1cb08:	ldr	r3, [pc, #1292]	; 1d01c <__flatcc_fb_gen_c_builder@@Base+0x107c>
   1cb0c:	ldrd	r0, [r4, #96]	; 0x60
   1cb10:	strd	r0, [sp]
   1cb14:	ldr	r1, [pc, #1284]	; 1d020 <__flatcc_fb_gen_c_builder@@Base+0x1080>
   1cb18:	ldr	r0, [fp, #204]	; 0xcc
   1cb1c:	bl	13f84 <fprintf@plt>
   1cb20:	mov	r2, r6
   1cb24:	b	1ccdc <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1cb28:	ldr	r2, [sp, #32]
   1cb2c:	ldr	r3, [pc, #1264]	; 1d024 <__flatcc_fb_gen_c_builder@@Base+0x1084>
   1cb30:	b	1cb0c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1cb34:	ldr	r2, [pc, #1240]	; 1d014 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1cb38:	b	1cb2c <__flatcc_fb_gen_c_builder@@Base+0xb8c>
   1cb3c:	ldr	r2, [pc, #1232]	; 1d014 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1cb40:	ldr	r3, [pc, #1248]	; 1d028 <__flatcc_fb_gen_c_builder@@Base+0x1088>
   1cb44:	b	1cb0c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1cb48:	ldr	r2, [pc, #1220]	; 1d014 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1cb4c:	ldr	r3, [pc, #1240]	; 1d02c <__flatcc_fb_gen_c_builder@@Base+0x108c>
   1cb50:	b	1cb0c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1cb54:	ldr	r2, [pc, #1208]	; 1d014 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1cb58:	ldr	r3, [pc, #1232]	; 1d030 <__flatcc_fb_gen_c_builder@@Base+0x1090>
   1cb5c:	b	1cb0c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1cb60:	ldr	r2, [pc, #1196]	; 1d014 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1cb64:	ldr	r3, [pc, #1224]	; 1d034 <__flatcc_fb_gen_c_builder@@Base+0x1094>
   1cb68:	b	1cb0c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1cb6c:	ldr	r2, [pc, #1184]	; 1d014 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1cb70:	ldr	r3, [pc, #1216]	; 1d038 <__flatcc_fb_gen_c_builder@@Base+0x1098>
   1cb74:	b	1cb0c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1cb78:	ldr	r2, [pc, #1172]	; 1d014 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1cb7c:	ldr	r3, [pc, #1208]	; 1d03c <__flatcc_fb_gen_c_builder@@Base+0x109c>
   1cb80:	b	1cb0c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1cb84:	ldr	r4, [pc, #1204]	; 1d040 <__flatcc_fb_gen_c_builder@@Base+0x10a0>
   1cb88:	ldr	r3, [pc, #1304]	; 1d0a8 <__flatcc_fb_gen_c_builder@@Base+0x1108>
   1cb8c:	ldr	r0, [r3]
   1cb90:	ldr	r3, [pc, #1196]	; 1d044 <__flatcc_fb_gen_c_builder@@Base+0x10a4>
   1cb94:	str	r3, [sp]
   1cb98:	mov	r3, #141	; 0x8d
   1cb9c:	mov	r2, r4
   1cba0:	ldr	r1, [pc, #1288]	; 1d0b0 <__flatcc_fb_gen_c_builder@@Base+0x1110>
   1cba4:	bl	13f84 <fprintf@plt>
   1cba8:	ldr	r3, [pc, #1176]	; 1d048 <__flatcc_fb_gen_c_builder@@Base+0x10a8>
   1cbac:	mov	r2, #141	; 0x8d
   1cbb0:	mov	r1, r4
   1cbb4:	ldr	r0, [pc, #1276]	; 1d0b8 <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1cbb8:	bl	14038 <__assert_fail@plt>
   1cbbc:	ldr	r2, [pc, #1104]	; 1d014 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1cbc0:	ldr	r3, [pc, #1156]	; 1d04c <__flatcc_fb_gen_c_builder@@Base+0x10ac>
   1cbc4:	b	1cb0c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1cbc8:	ldr	r2, [pc, #1092]	; 1d014 <__flatcc_fb_gen_c_builder@@Base+0x1074>
   1cbcc:	ldr	r3, [pc, #1148]	; 1d050 <__flatcc_fb_gen_c_builder@@Base+0x10b0>
   1cbd0:	b	1cb0c <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1cbd4:	ldr	r3, [r4, #16]
   1cbd8:	sub	r3, r3, #1
   1cbdc:	cmp	r3, #10
   1cbe0:	ldrls	pc, [pc, r3, lsl #2]
   1cbe4:	b	1cc5c <__flatcc_fb_gen_c_builder@@Base+0xcbc>
   1cbe8:	muleq	r1, r4, ip
   1cbec:	andeq	ip, r1, r4, lsl ip
   1cbf0:	muleq	r1, ip, ip
   1cbf4:	andeq	ip, r1, ip, lsl ip
   1cbf8:	andeq	ip, r1, r4, lsr #24
   1cbfc:	andeq	ip, r1, ip, lsr #24
   1cc00:	andeq	ip, r1, r4, lsr ip
   1cc04:	andeq	ip, r1, ip, lsr ip
   1cc08:	andeq	ip, r1, r4, asr #24
   1cc0c:	andeq	ip, r1, r4, asr ip
   1cc10:	andeq	ip, r1, ip, asr #24
   1cc14:	ldr	r3, [pc, #1080]	; 1d054 <__flatcc_fb_gen_c_builder@@Base+0x10b4>
   1cc18:	b	1cca0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1cc1c:	ldr	r3, [pc, #1076]	; 1d058 <__flatcc_fb_gen_c_builder@@Base+0x10b8>
   1cc20:	b	1cca0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1cc24:	ldr	r3, [pc, #1072]	; 1d05c <__flatcc_fb_gen_c_builder@@Base+0x10bc>
   1cc28:	b	1cca0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1cc2c:	ldr	r3, [pc, #1068]	; 1d060 <__flatcc_fb_gen_c_builder@@Base+0x10c0>
   1cc30:	b	1cca0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1cc34:	ldr	r3, [pc, #1064]	; 1d064 <__flatcc_fb_gen_c_builder@@Base+0x10c4>
   1cc38:	b	1cca0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1cc3c:	ldr	r3, [pc, #1060]	; 1d068 <__flatcc_fb_gen_c_builder@@Base+0x10c8>
   1cc40:	b	1cca0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1cc44:	ldr	r3, [pc, #1056]	; 1d06c <__flatcc_fb_gen_c_builder@@Base+0x10cc>
   1cc48:	b	1cca0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1cc4c:	ldr	r3, [pc, #996]	; 1d038 <__flatcc_fb_gen_c_builder@@Base+0x1098>
   1cc50:	b	1cca0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1cc54:	ldr	r3, [pc, #992]	; 1d03c <__flatcc_fb_gen_c_builder@@Base+0x109c>
   1cc58:	b	1cca0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1cc5c:	ldr	r4, [pc, #988]	; 1d040 <__flatcc_fb_gen_c_builder@@Base+0x10a0>
   1cc60:	ldr	r3, [pc, #1088]	; 1d0a8 <__flatcc_fb_gen_c_builder@@Base+0x1108>
   1cc64:	ldr	r0, [r3]
   1cc68:	ldr	r3, [pc, #980]	; 1d044 <__flatcc_fb_gen_c_builder@@Base+0x10a4>
   1cc6c:	str	r3, [sp]
   1cc70:	mov	r3, #96	; 0x60
   1cc74:	mov	r2, r4
   1cc78:	ldr	r1, [pc, #1072]	; 1d0b0 <__flatcc_fb_gen_c_builder@@Base+0x1110>
   1cc7c:	bl	13f84 <fprintf@plt>
   1cc80:	ldr	r3, [pc, #1000]	; 1d070 <__flatcc_fb_gen_c_builder@@Base+0x10d0>
   1cc84:	mov	r2, #96	; 0x60
   1cc88:	mov	r1, r4
   1cc8c:	ldr	r0, [pc, #1060]	; 1d0b8 <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1cc90:	bl	14038 <__assert_fail@plt>
   1cc94:	ldr	r3, [pc, #984]	; 1d074 <__flatcc_fb_gen_c_builder@@Base+0x10d4>
   1cc98:	b	1cca0 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1cc9c:	ldr	r3, [pc, #980]	; 1d078 <__flatcc_fb_gen_c_builder@@Base+0x10d8>
   1cca0:	ldrd	r0, [r4, #96]	; 0x60
   1cca4:	strd	r0, [sp]
   1cca8:	ldr	r2, [sp, #32]
   1ccac:	ldr	r1, [pc, #968]	; 1d07c <__flatcc_fb_gen_c_builder@@Base+0x10dc>
   1ccb0:	ldr	r0, [fp, #204]	; 0xcc
   1ccb4:	bl	13f84 <fprintf@plt>
   1ccb8:	mov	r2, r6
   1ccbc:	b	1ccdc <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1ccc0:	ldrd	r2, [r4, #96]	; 0x60
   1ccc4:	strd	r2, [sp]
   1ccc8:	ldr	r2, [sp, #32]
   1cccc:	mov	r1, r7
   1ccd0:	ldr	r0, [fp, #204]	; 0xcc
   1ccd4:	bl	13f84 <fprintf@plt>
   1ccd8:	mov	r2, r6
   1ccdc:	ldr	r4, [r4]
   1cce0:	cmp	r4, #0
   1cce4:	beq	1cd80 <__flatcc_fb_gen_c_builder@@Base+0xde0>
   1cce8:	ldrh	r3, [r4, #72]	; 0x48
   1ccec:	tst	r3, #4
   1ccf0:	bne	1ccdc <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1ccf4:	add	r6, r2, #1
   1ccf8:	cmp	r5, #0
   1ccfc:	beq	1c8b4 <__flatcc_fb_gen_c_builder@@Base+0x914>
   1cd00:	cmp	r2, #0
   1cd04:	bne	1c88c <__flatcc_fb_gen_c_builder@@Base+0x8ec>
   1cd08:	cmp	r5, #4
   1cd0c:	ble	1c874 <__flatcc_fb_gen_c_builder@@Base+0x8d4>
   1cd10:	ldr	r2, [pc, #716]	; 1cfe4 <__flatcc_fb_gen_c_builder@@Base+0x1044>
   1cd14:	ldr	r1, [pc, #692]	; 1cfd0 <__flatcc_fb_gen_c_builder@@Base+0x1030>
   1cd18:	ldr	r0, [fp, #204]	; 0xcc
   1cd1c:	bl	13f84 <fprintf@plt>
   1cd20:	b	1c8b4 <__flatcc_fb_gen_c_builder@@Base+0x914>
   1cd24:	ldrd	r2, [r4, #96]	; 0x60
   1cd28:	strd	r2, [sp]
   1cd2c:	ldr	r2, [sp, #32]
   1cd30:	mov	r1, r8
   1cd34:	ldr	r0, [fp, #204]	; 0xcc
   1cd38:	bl	13f84 <fprintf@plt>
   1cd3c:	mov	r2, r6
   1cd40:	b	1ccdc <__flatcc_fb_gen_c_builder@@Base+0xd3c>
   1cd44:	ldr	r5, [pc, #820]	; 1d080 <__flatcc_fb_gen_c_builder@@Base+0x10e0>
   1cd48:	ldr	r4, [pc, #852]	; 1d0a4 <__flatcc_fb_gen_c_builder@@Base+0x1104>
   1cd4c:	ldr	r3, [pc, #852]	; 1d0a8 <__flatcc_fb_gen_c_builder@@Base+0x1108>
   1cd50:	ldr	r0, [r3]
   1cd54:	ldr	r3, [pc, #808]	; 1d084 <__flatcc_fb_gen_c_builder@@Base+0x10e4>
   1cd58:	str	r3, [sp]
   1cd5c:	mov	r3, r5
   1cd60:	mov	r2, r4
   1cd64:	ldr	r1, [pc, #836]	; 1d0b0 <__flatcc_fb_gen_c_builder@@Base+0x1110>
   1cd68:	bl	13f84 <fprintf@plt>
   1cd6c:	ldr	r3, [pc, #652]	; 1d000 <__flatcc_fb_gen_c_builder@@Base+0x1060>
   1cd70:	mov	r2, r5
   1cd74:	mov	r1, r4
   1cd78:	ldr	r0, [pc, #824]	; 1d0b8 <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1cd7c:	bl	14038 <__assert_fail@plt>
   1cd80:	add	r2, sp, #40	; 0x28
   1cd84:	ldr	r1, [pc, #496]	; 1cf7c <__flatcc_fb_gen_c_builder@@Base+0xfdc>
   1cd88:	ldr	r0, [fp, #204]	; 0xcc
   1cd8c:	bl	13f84 <fprintf@plt>
   1cd90:	ldr	r4, [r9, #20]
   1cd94:	cmp	r4, #0
   1cd98:	beq	1ce58 <__flatcc_fb_gen_c_builder@@Base+0xeb8>
   1cd9c:	mov	r6, #0
   1cda0:	mov	r8, #2
   1cda4:	mov	r7, #1
   1cda8:	b	1ce0c <__flatcc_fb_gen_c_builder@@Base+0xe6c>
   1cdac:	ldr	r3, [fp, #204]	; 0xcc
   1cdb0:	mov	r2, r8
   1cdb4:	mov	r1, r7
   1cdb8:	ldr	r0, [pc, #512]	; 1cfc0 <__flatcc_fb_gen_c_builder@@Base+0x1020>
   1cdbc:	bl	13f18 <fwrite@plt>
   1cdc0:	b	1cdec <__flatcc_fb_gen_c_builder@@Base+0xe4c>
   1cdc4:	tst	r6, #3
   1cdc8:	bne	1cdd8 <__flatcc_fb_gen_c_builder@@Base+0xe38>
   1cdcc:	sub	r3, r5, r6
   1cdd0:	cmp	r3, #2
   1cdd4:	bgt	1ce44 <__flatcc_fb_gen_c_builder@@Base+0xea4>
   1cdd8:	ldr	r3, [fp, #204]	; 0xcc
   1cddc:	mov	r2, r8
   1cde0:	mov	r1, r7
   1cde4:	ldr	r0, [pc, #468]	; 1cfc0 <__flatcc_fb_gen_c_builder@@Base+0x1020>
   1cde8:	bl	13f18 <fwrite@plt>
   1cdec:	ldrd	r2, [r4, #96]	; 0x60
   1cdf0:	ldr	r1, [pc, #656]	; 1d088 <__flatcc_fb_gen_c_builder@@Base+0x10e8>
   1cdf4:	ldr	r0, [fp, #204]	; 0xcc
   1cdf8:	bl	13f84 <fprintf@plt>
   1cdfc:	add	r6, r6, #1
   1ce00:	ldr	r4, [r4]
   1ce04:	cmp	r4, #0
   1ce08:	beq	1ce58 <__flatcc_fb_gen_c_builder@@Base+0xeb8>
   1ce0c:	ldrh	r3, [r4, #72]	; 0x48
   1ce10:	tst	r3, #4
   1ce14:	bne	1ce00 <__flatcc_fb_gen_c_builder@@Base+0xe60>
   1ce18:	cmp	r5, #0
   1ce1c:	beq	1cdec <__flatcc_fb_gen_c_builder@@Base+0xe4c>
   1ce20:	cmp	r6, #0
   1ce24:	bne	1cdc4 <__flatcc_fb_gen_c_builder@@Base+0xe24>
   1ce28:	cmp	r5, #4
   1ce2c:	ble	1cdac <__flatcc_fb_gen_c_builder@@Base+0xe0c>
   1ce30:	ldr	r2, [pc, #428]	; 1cfe4 <__flatcc_fb_gen_c_builder@@Base+0x1044>
   1ce34:	ldr	r1, [pc, #404]	; 1cfd0 <__flatcc_fb_gen_c_builder@@Base+0x1030>
   1ce38:	ldr	r0, [fp, #204]	; 0xcc
   1ce3c:	bl	13f84 <fprintf@plt>
   1ce40:	b	1cdec <__flatcc_fb_gen_c_builder@@Base+0xe4c>
   1ce44:	ldr	r2, [pc, #408]	; 1cfe4 <__flatcc_fb_gen_c_builder@@Base+0x1044>
   1ce48:	ldr	r1, [pc, #384]	; 1cfd0 <__flatcc_fb_gen_c_builder@@Base+0x1030>
   1ce4c:	ldr	r0, [fp, #204]	; 0xcc
   1ce50:	bl	13f84 <fprintf@plt>
   1ce54:	b	1cdec <__flatcc_fb_gen_c_builder@@Base+0xe4c>
   1ce58:	ldr	r1, [fp, #204]	; 0xcc
   1ce5c:	mov	r0, #10
   1ce60:	bl	13fe4 <fputc@plt>
   1ce64:	add	r2, sp, #40	; 0x28
   1ce68:	str	r2, [sp, #4]
   1ce6c:	ldr	r3, [sp, #32]
   1ce70:	str	r3, [sp]
   1ce74:	mov	r3, r2
   1ce78:	ldr	r1, [pc, #524]	; 1d08c <__flatcc_fb_gen_c_builder@@Base+0x10ec>
   1ce7c:	ldr	r0, [fp, #204]	; 0xcc
   1ce80:	bl	13f84 <fprintf@plt>
   1ce84:	ldr	r9, [r9]
   1ce88:	cmp	r9, #0
   1ce8c:	beq	1c7ec <__flatcc_fb_gen_c_builder@@Base+0x84c>
   1ce90:	ldrh	r3, [r9, #8]
   1ce94:	cmp	r3, #0
   1ce98:	bne	1ce84 <__flatcc_fb_gen_c_builder@@Base+0xee4>
   1ce9c:	mov	r2, #220	; 0xdc
   1cea0:	mov	r1, #0
   1cea4:	add	r0, sp, #40	; 0x28
   1cea8:	bl	13f9c <memset@plt>
   1ceac:	add	r2, sp, #40	; 0x28
   1ceb0:	mov	r1, r9
   1ceb4:	ldr	r0, [r9, #12]
   1ceb8:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1cebc:	ldr	r3, [r9, #20]
   1cec0:	cmp	r3, #0
   1cec4:	beq	1c86c <__flatcc_fb_gen_c_builder@@Base+0x8cc>
   1cec8:	mov	r5, #0
   1cecc:	ldrh	r2, [r3, #72]	; 0x48
   1ced0:	tst	r2, #4
   1ced4:	addeq	r5, r5, #1
   1ced8:	ldr	r3, [r3]
   1cedc:	cmp	r3, #0
   1cee0:	bne	1cecc <__flatcc_fb_gen_c_builder@@Base+0xf2c>
   1cee4:	add	r2, sp, #40	; 0x28
   1cee8:	ldr	r1, [pc, #136]	; 1cf78 <__flatcc_fb_gen_c_builder@@Base+0xfd8>
   1ceec:	ldr	r0, [fp, #204]	; 0xcc
   1cef0:	bl	13f84 <fprintf@plt>
   1cef4:	mov	r2, #220	; 0xdc
   1cef8:	mov	r1, #0
   1cefc:	add	r0, sp, #260	; 0x104
   1cf00:	bl	13f9c <memset@plt>
   1cf04:	ldr	r4, [r9, #20]
   1cf08:	cmp	r4, #0
   1cf0c:	beq	1cd80 <__flatcc_fb_gen_c_builder@@Base+0xde0>
   1cf10:	mov	r2, #0
   1cf14:	ldr	r8, [pc, #372]	; 1d090 <__flatcc_fb_gen_c_builder@@Base+0x10f0>
   1cf18:	ldr	r7, [pc, #372]	; 1d094 <__flatcc_fb_gen_c_builder@@Base+0x10f4>
   1cf1c:	b	1cce8 <__flatcc_fb_gen_c_builder@@Base+0xd48>
   1cf20:	ldr	r1, [fp, #204]	; 0xcc
   1cf24:	mov	r0, #10
   1cf28:	bl	13fe4 <fputc@plt>
   1cf2c:	b	1c7f4 <__flatcc_fb_gen_c_builder@@Base+0x854>
   1cf30:	mov	sl, #0
   1cf34:	b	1c7f4 <__flatcc_fb_gen_c_builder@@Base+0x854>
   1cf38:	andeq	ip, r4, r0, ror fp
   1cf3c:	andeq	ip, r3, r0, lsr sp
   1cf40:	muleq	r4, ip, fp
   1cf44:			; <UNDEFINED> instruction: 0x0004cbb4
   1cf48:	andeq	r2, r4, ip, lsl #30
   1cf4c:			; <UNDEFINED> instruction: 0x000443b4
   1cf50:	andeq	ip, r4, ip, asr #23
   1cf54:	andeq	ip, r4, ip, ror #23
   1cf58:	andeq	r1, r5, ip, asr #29
   1cf5c:	andeq	r2, r4, ip, ror pc
   1cf60:	andeq	r2, r4, r0, ror #31
   1cf64:	strdeq	ip, [r4], -r8
   1cf68:	andeq	ip, r4, r0, asr #24
   1cf6c:	andeq	ip, r3, r4, asr #28
   1cf70:	andeq	r2, r4, r8, asr #30
   1cf74:			; <UNDEFINED> instruction: 0x00042fb0
   1cf78:	andeq	ip, r4, r8, ror #24
   1cf7c:	andeq	ip, r4, r4, lsl #25
   1cf80:	andeq	ip, r4, r0, lsr #25
   1cf84:	andeq	ip, r4, r8, asr #25
   1cf88:	ldrdeq	ip, [r4], -r0
   1cf8c:	andeq	ip, r4, r0, ror #25
   1cf90:	andeq	ip, r4, r8, lsl sp
   1cf94:	andeq	ip, r4, ip, lsl sp
   1cf98:	andeq	ip, r4, r8, asr #26
   1cf9c:	andeq	ip, r4, r4, lsl #27
   1cfa0:			; <UNDEFINED> instruction: 0x0004cdb4
   1cfa4:	strdeq	ip, [r4], -r4
   1cfa8:	andeq	ip, r4, ip, lsr lr
   1cfac:			; <UNDEFINED> instruction: 0x00043bb0
   1cfb0:	strdeq	r0, [r0], -r2
   1cfb4:	andeq	fp, r3, r4, lsl #27
   1cfb8:	muleq	r3, r4, lr
   1cfbc:	andeq	ip, r4, r4, asr #29
   1cfc0:	andeq	r3, r4, r4, ror sp
   1cfc4:	andeq	ip, r4, r8, asr #29
   1cfc8:	ldrdeq	ip, [r4], -r8
   1cfcc:	muleq	r4, r4, lr
   1cfd0:	andeq	r3, r4, ip, ror #26
   1cfd4:	ldrdeq	ip, [r4], -r0
   1cfd8:	andeq	sp, r4, r8, ror r1
   1cfdc:	andeq	sp, r4, ip, ror #1
   1cfe0:	andeq	sp, r4, r8, asr #6
   1cfe4:	ldrdeq	lr, [r3], -ip
   1cfe8:	strdeq	ip, [r4], -r8
   1cfec:	andeq	ip, r4, r4, lsl #30
   1cff0:	andeq	ip, r4, r4, lsl pc
   1cff4:	andeq	ip, r4, r4, lsr #30
   1cff8:	muleq	r0, r5, r4
   1cffc:	andeq	ip, r4, ip, lsr pc
   1d000:	andeq	r3, r4, r4, asr #23
   1d004:	andeq	ip, r4, r8, ror #30
   1d008:	andeq	ip, r4, ip, ror pc
   1d00c:	andeq	r0, r0, r5, lsr #9
   1d010:	muleq	r4, r8, pc	; <UNPREDICTABLE>
   1d014:	andeq	r5, r4, r0, lsr #2
   1d018:	ldrdeq	fp, [r3], -r4
   1d01c:	andeq	fp, r3, ip, ror #17
   1d020:	andeq	ip, r4, r4, asr #31
   1d024:	strdeq	fp, [r3], -r4
   1d028:	strdeq	fp, [r3], -ip
   1d02c:	andeq	fp, r3, r4, lsl #18
   1d030:	andeq	fp, r3, ip, lsl #18
   1d034:	andeq	fp, r3, r4, lsl r9
   1d038:	andeq	fp, r3, ip, lsl r9
   1d03c:	andeq	fp, r3, r4, lsr #18
   1d040:	andeq	fp, r3, ip, ror #19
   1d044:	andeq	fp, r3, r4, asr #20
   1d048:	andeq	r3, r4, r8, lsl fp
   1d04c:	andeq	fp, r3, r8, asr #17
   1d050:	andeq	fp, r3, r0, ror #17
   1d054:	andeq	fp, r3, ip, asr #26
   1d058:	andeq	fp, r3, ip, asr sp
   1d05c:	andeq	r3, r5, r0, ror #17
   1d060:	andeq	fp, r3, r4, ror #26
   1d064:	andeq	fp, r3, ip, ror #26
   1d068:	andeq	fp, r3, r4, ror sp
   1d06c:	andeq	fp, r3, ip, ror sp
   1d070:	andeq	r3, r4, r4, asr #22
   1d074:	andeq	fp, r3, r4, asr #26
   1d078:	andeq	fp, r3, r4, asr sp
   1d07c:	ldrdeq	ip, [r4], -r0
   1d080:			; <UNDEFINED> instruction: 0x000004b9
   1d084:	muleq	r4, r8, sp
   1d088:	andeq	sp, r4, ip, lsl r0
   1d08c:	andeq	sp, r4, r4, lsr #32
   1d090:	andeq	sp, r4, r0
   1d094:	andeq	ip, r4, r8, ror #31
   1d098:	andeq	sp, r4, ip, lsl r2
   1d09c:	andeq	sp, r4, r8, rrx
   1d0a0:	andeq	r0, r0, r8, asr #12
   1d0a4:	andeq	r3, r4, r8, ror ip
   1d0a8:	andeq	r6, r6, r8, lsr #1
   1d0ac:	strdeq	sp, [r4], -r0
   1d0b0:	andeq	fp, r3, r8, lsr sl
   1d0b4:	ldrdeq	r3, [r4], -ip
   1d0b8:	andeq	r3, r4, r0, ror lr
   1d0bc:	andeq	sp, r4, r0, asr #5
   1d0c0:	muleq	r4, r8, r2
   1d0c4:	andeq	sp, r4, r4, ror #5
   1d0c8:	andeq	sp, r4, r0, lsl r3
   1d0cc:	andeq	sp, r4, ip, lsr r2
   1d0d0:	andeq	sp, r4, r0, lsl #5
   1d0d4:	andeq	sp, r4, ip, lsl #7
   1d0d8:	andeq	r2, r4, r8, lsr #25
   1d0dc:	mov	r2, r7
   1d0e0:	mov	r1, #0
   1d0e4:	mov	r0, r6
   1d0e8:	bl	13f9c <memset@plt>
   1d0ec:	mov	r2, r7
   1d0f0:	mov	r1, #0
   1d0f4:	add	r0, sp, #260	; 0x104
   1d0f8:	bl	13f9c <memset@plt>
   1d0fc:	mov	r2, r6
   1d100:	mov	r1, r4
   1d104:	ldr	r0, [r4, #12]
   1d108:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1d10c:	ldr	r5, [r4, #20]
   1d110:	cmp	r5, #0
   1d114:	bne	1d198 <__flatcc_fb_gen_c_builder@@Base+0x11f8>
   1d118:	str	r6, [sp]
   1d11c:	ldr	r2, [sp, #32]
   1d120:	mov	r3, r2
   1d124:	ldr	r1, [pc, #-148]	; 1d098 <__flatcc_fb_gen_c_builder@@Base+0x10f8>
   1d128:	ldr	r0, [fp, #204]	; 0xcc
   1d12c:	bl	13f84 <fprintf@plt>
   1d130:	mov	r2, #1
   1d134:	b	1c824 <__flatcc_fb_gen_c_builder@@Base+0x884>
   1d138:	ldr	r3, [r5, #16]
   1d13c:	add	r2, sp, #260	; 0x104
   1d140:	mov	r1, r3
   1d144:	ldr	r0, [r3, #12]
   1d148:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1d14c:	ldr	r2, [r5, #4]
   1d150:	ldr	r3, [r2, #4]
   1d154:	ldr	r2, [r2]
   1d158:	str	r2, [sp, #24]
   1d15c:	str	r3, [sp, #20]
   1d160:	str	r6, [sp, #16]
   1d164:	str	r6, [sp, #12]
   1d168:	add	r1, sp, #260	; 0x104
   1d16c:	str	r1, [sp, #8]
   1d170:	str	r2, [sp, #4]
   1d174:	str	r3, [sp]
   1d178:	mov	r3, r6
   1d17c:	mov	r2, r6
   1d180:	ldr	r1, [pc, #-236]	; 1d09c <__flatcc_fb_gen_c_builder@@Base+0x10fc>
   1d184:	ldr	r0, [fp, #204]	; 0xcc
   1d188:	bl	13f84 <fprintf@plt>
   1d18c:	ldr	r5, [r5]
   1d190:	cmp	r5, #0
   1d194:	beq	1d118 <__flatcc_fb_gen_c_builder@@Base+0x1178>
   1d198:	ldrh	r3, [r5, #24]
   1d19c:	cmp	r3, #10
   1d1a0:	beq	1d1f0 <__flatcc_fb_gen_c_builder@@Base+0x1250>
   1d1a4:	cmp	r3, #14
   1d1a8:	beq	1d138 <__flatcc_fb_gen_c_builder@@Base+0x1198>
   1d1ac:	cmp	r3, #0
   1d1b0:	beq	1d234 <__flatcc_fb_gen_c_builder@@Base+0x1294>
   1d1b4:	ldr	r5, [pc, #-284]	; 1d0a0 <__flatcc_fb_gen_c_builder@@Base+0x1100>
   1d1b8:	ldr	r4, [pc, #-284]	; 1d0a4 <__flatcc_fb_gen_c_builder@@Base+0x1104>
   1d1bc:	ldr	r3, [pc, #-284]	; 1d0a8 <__flatcc_fb_gen_c_builder@@Base+0x1108>
   1d1c0:	ldr	r0, [r3]
   1d1c4:	ldr	r3, [pc, #-288]	; 1d0ac <__flatcc_fb_gen_c_builder@@Base+0x110c>
   1d1c8:	str	r3, [sp]
   1d1cc:	mov	r3, r5
   1d1d0:	mov	r2, r4
   1d1d4:	ldr	r1, [pc, #-300]	; 1d0b0 <__flatcc_fb_gen_c_builder@@Base+0x1110>
   1d1d8:	bl	13f84 <fprintf@plt>
   1d1dc:	ldr	r3, [pc, #-304]	; 1d0b4 <__flatcc_fb_gen_c_builder@@Base+0x1114>
   1d1e0:	mov	r2, r5
   1d1e4:	mov	r1, r4
   1d1e8:	ldr	r0, [pc, #-312]	; 1d0b8 <__flatcc_fb_gen_c_builder@@Base+0x1118>
   1d1ec:	bl	14038 <__assert_fail@plt>
   1d1f0:	ldr	r2, [r5, #4]
   1d1f4:	ldr	r3, [r2, #4]
   1d1f8:	ldr	r2, [r2]
   1d1fc:	str	r2, [sp, #24]
   1d200:	str	r3, [sp, #20]
   1d204:	str	r6, [sp, #16]
   1d208:	str	r6, [sp, #12]
   1d20c:	ldr	r1, [sp, #32]
   1d210:	str	r1, [sp, #8]
   1d214:	str	r2, [sp, #4]
   1d218:	str	r3, [sp]
   1d21c:	mov	r3, r6
   1d220:	mov	r2, r6
   1d224:	mov	r1, r8
   1d228:	ldr	r0, [fp, #204]	; 0xcc
   1d22c:	bl	13f84 <fprintf@plt>
   1d230:	b	1d18c <__flatcc_fb_gen_c_builder@@Base+0x11ec>
   1d234:	str	r6, [sp, #4]
   1d238:	str	r6, [sp]
   1d23c:	mov	r3, r6
   1d240:	mov	r2, r6
   1d244:	mov	r1, r9
   1d248:	ldr	r0, [fp, #204]	; 0xcc
   1d24c:	bl	13f84 <fprintf@plt>
   1d250:	b	1d18c <__flatcc_fb_gen_c_builder@@Base+0x11ec>
   1d254:	ldrd	r2, [r4, #96]	; 0x60
   1d258:	strd	r2, [sp, #8]
   1d25c:	str	r0, [sp]
   1d260:	mov	r3, r1
   1d264:	add	r2, sp, #260	; 0x104
   1d268:	ldr	r1, [pc, #-436]	; 1d0bc <__flatcc_fb_gen_c_builder@@Base+0x111c>
   1d26c:	ldr	r0, [fp, #204]	; 0xcc
   1d270:	bl	13f84 <fprintf@plt>
   1d274:	ldr	r4, [r4, #108]	; 0x6c
   1d278:	cmp	r4, #0
   1d27c:	beq	1d2e8 <__flatcc_fb_gen_c_builder@@Base+0x1348>
   1d280:	ldrh	r3, [r4, #72]	; 0x48
   1d284:	tst	r3, #4
   1d288:	bne	1d274 <__flatcc_fb_gen_c_builder@@Base+0x12d4>
   1d28c:	ldr	r2, [r4, #4]
   1d290:	ldr	r1, [r2, #4]
   1d294:	ldr	r0, [r2]
   1d298:	ldrh	r3, [r4, #24]
   1d29c:	cmp	r3, #14
   1d2a0:	bne	1d254 <__flatcc_fb_gen_c_builder@@Base+0x12b4>
   1d2a4:	ldr	r3, [r4, #16]
   1d2a8:	ldrh	r3, [r3, #8]
   1d2ac:	cmp	r3, #4
   1d2b0:	bne	1d254 <__flatcc_fb_gen_c_builder@@Base+0x12b4>
   1d2b4:	cmp	r6, #0
   1d2b8:	ldrne	r8, [sp, #36]	; 0x24
   1d2bc:	bne	1d254 <__flatcc_fb_gen_c_builder@@Base+0x12b4>
   1d2c0:	ldrd	r2, [r4, #96]	; 0x60
   1d2c4:	strd	r2, [sp, #8]
   1d2c8:	str	r0, [sp]
   1d2cc:	mov	r3, r1
   1d2d0:	add	r2, sp, #260	; 0x104
   1d2d4:	ldr	r1, [pc, #-540]	; 1d0c0 <__flatcc_fb_gen_c_builder@@Base+0x1120>
   1d2d8:	ldr	r0, [fp, #204]	; 0xcc
   1d2dc:	bl	13f84 <fprintf@plt>
   1d2e0:	ldr	r8, [sp, #36]	; 0x24
   1d2e4:	b	1d274 <__flatcc_fb_gen_c_builder@@Base+0x12d4>
   1d2e8:	cmp	r8, #0
   1d2ec:	moveq	r7, #0
   1d2f0:	andne	r7, r7, #1
   1d2f4:	cmp	r7, #0
   1d2f8:	beq	1d370 <__flatcc_fb_gen_c_builder@@Base+0x13d0>
   1d2fc:	ldr	r4, [r5, #24]
   1d300:	cmp	r4, #0
   1d304:	beq	1d370 <__flatcc_fb_gen_c_builder@@Base+0x13d0>
   1d308:	ldr	r8, [pc, #-588]	; 1d0c4 <__flatcc_fb_gen_c_builder@@Base+0x1124>
   1d30c:	b	1d31c <__flatcc_fb_gen_c_builder@@Base+0x137c>
   1d310:	ldr	r4, [r4, #108]	; 0x6c
   1d314:	cmp	r4, #0
   1d318:	beq	1d370 <__flatcc_fb_gen_c_builder@@Base+0x13d0>
   1d31c:	ldrh	r3, [r4, #72]	; 0x48
   1d320:	tst	r3, #4
   1d324:	bne	1d310 <__flatcc_fb_gen_c_builder@@Base+0x1370>
   1d328:	ldrh	r3, [r4, #24]
   1d32c:	cmp	r3, #14
   1d330:	bne	1d310 <__flatcc_fb_gen_c_builder@@Base+0x1370>
   1d334:	ldr	r3, [r4, #16]
   1d338:	ldrh	r3, [r3, #8]
   1d33c:	cmp	r3, #4
   1d340:	bne	1d310 <__flatcc_fb_gen_c_builder@@Base+0x1370>
   1d344:	ldr	r1, [r4, #4]
   1d348:	ldr	r3, [r1, #4]
   1d34c:	ldrd	r6, [r4, #96]	; 0x60
   1d350:	strd	r6, [sp, #8]
   1d354:	ldr	r2, [r1]
   1d358:	str	r2, [sp]
   1d35c:	add	r2, sp, #260	; 0x104
   1d360:	mov	r1, r8
   1d364:	ldr	r0, [fp, #204]	; 0xcc
   1d368:	bl	13f84 <fprintf@plt>
   1d36c:	b	1d310 <__flatcc_fb_gen_c_builder@@Base+0x1370>
   1d370:	add	r4, sp, #260	; 0x104
   1d374:	mov	r2, r4
   1d378:	ldr	r1, [pc, #-696]	; 1d0c8 <__flatcc_fb_gen_c_builder@@Base+0x1128>
   1d37c:	ldr	r0, [fp, #204]	; 0xcc
   1d380:	bl	13f84 <fprintf@plt>
   1d384:	mov	r2, #220	; 0xdc
   1d388:	mov	r1, #0
   1d38c:	mov	r0, r4
   1d390:	bl	13f9c <memset@plt>
   1d394:	mov	r2, r4
   1d398:	ldr	r1, [sp, #32]
   1d39c:	ldr	r0, [r5, #12]
   1d3a0:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1d3a4:	str	r4, [sp, #8]
   1d3a8:	str	r4, [sp, #4]
   1d3ac:	str	r4, [sp]
   1d3b0:	mov	r3, sl
   1d3b4:	mov	r2, sl
   1d3b8:	mov	r1, r9
   1d3bc:	ldr	r0, [fp, #204]	; 0xcc
   1d3c0:	bl	13f84 <fprintf@plt>
   1d3c4:	ldr	r1, [fp, #204]	; 0xcc
   1d3c8:	mov	r0, #10
   1d3cc:	bl	13fe4 <fputc@plt>
   1d3d0:	ldr	r5, [r5]
   1d3d4:	cmp	r5, #0
   1d3d8:	beq	1d46c <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   1d3dc:	ldrh	r3, [r5, #8]
   1d3e0:	cmp	r3, #0
   1d3e4:	bne	1d3d0 <__flatcc_fb_gen_c_builder@@Base+0x1430>
   1d3e8:	mov	r1, r5
   1d3ec:	mov	r0, fp
   1d3f0:	bl	1a528 <__flatcc_gen_sort@@Base+0xe88>
   1d3f4:	ldrh	r6, [r5, #92]	; 0x5c
   1d3f8:	ands	r6, r6, #8
   1d3fc:	moveq	r7, #1
   1d400:	movne	r7, #0
   1d404:	add	r4, sp, #260	; 0x104
   1d408:	mov	r2, #220	; 0xdc
   1d40c:	mov	r1, #0
   1d410:	mov	r0, r4
   1d414:	bl	13f9c <memset@plt>
   1d418:	str	r5, [sp, #32]
   1d41c:	mov	r2, r4
   1d420:	mov	r1, r5
   1d424:	ldr	r0, [r5, #12]
   1d428:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1d42c:	str	r4, [sp, #4]
   1d430:	str	sl, [sp]
   1d434:	mov	r3, r4
   1d438:	mov	r2, r4
   1d43c:	ldr	r1, [pc, #-888]	; 1d0cc <__flatcc_fb_gen_c_builder@@Base+0x112c>
   1d440:	ldr	r0, [fp, #204]	; 0xcc
   1d444:	bl	13f84 <fprintf@plt>
   1d448:	mov	r2, r4
   1d44c:	ldr	r1, [pc, #-900]	; 1d0d0 <__flatcc_fb_gen_c_builder@@Base+0x1130>
   1d450:	ldr	r0, [fp, #204]	; 0xcc
   1d454:	bl	13f84 <fprintf@plt>
   1d458:	ldr	r4, [r5, #24]
   1d45c:	cmp	r4, #0
   1d460:	beq	1d370 <__flatcc_fb_gen_c_builder@@Base+0x13d0>
   1d464:	mov	r8, #0
   1d468:	b	1d280 <__flatcc_fb_gen_c_builder@@Base+0x12e0>
   1d46c:	ldr	r3, [fp, #212]	; 0xd4
   1d470:	ldr	r3, [r3, #140]	; 0x8c
   1d474:	cmp	r3, #0
   1d478:	bne	1d49c <__flatcc_fb_gen_c_builder@@Base+0x14fc>
   1d47c:	ldr	r3, [fp, #208]	; 0xd0
   1d480:	ldr	r2, [r3, #164]	; 0xa4
   1d484:	ldr	r1, [pc, #-952]	; 1d0d4 <__flatcc_fb_gen_c_builder@@Base+0x1134>
   1d488:	ldr	r0, [fp, #204]	; 0xcc
   1d48c:	bl	13f84 <fprintf@plt>
   1d490:	mov	r0, #0
   1d494:	add	sp, sp, #484	; 0x1e4
   1d498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d49c:	ldr	r3, [fp, #204]	; 0xcc
   1d4a0:	mov	r2, #36	; 0x24
   1d4a4:	mov	r1, #1
   1d4a8:	ldr	r0, [pc, #-984]	; 1d0d8 <__flatcc_fb_gen_c_builder@@Base+0x1138>
   1d4ac:	bl	13f18 <fwrite@plt>
   1d4b0:	b	1d47c <__flatcc_fb_gen_c_builder@@Base+0x14dc>
   1d4b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d4b8:	sub	sp, sp, #464	; 0x1d0
   1d4bc:	mov	r6, r0
   1d4c0:	mov	r4, r1
   1d4c4:	mov	r5, #220	; 0xdc
   1d4c8:	mov	r2, r5
   1d4cc:	mov	r1, #0
   1d4d0:	add	r0, sp, #244	; 0xf4
   1d4d4:	bl	13f9c <memset@plt>
   1d4d8:	mov	r2, r5
   1d4dc:	mov	r1, #0
   1d4e0:	add	r0, sp, #24
   1d4e4:	bl	13f9c <memset@plt>
   1d4e8:	add	r2, sp, #244	; 0xf4
   1d4ec:	mov	r1, r4
   1d4f0:	ldr	r0, [r4, #12]
   1d4f4:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1d4f8:	add	r2, sp, #244	; 0xf4
   1d4fc:	ldr	r1, [pc, #372]	; 1d678 <__flatcc_fb_gen_c_builder@@Base+0x16d8>
   1d500:	ldr	r0, [r6, #204]	; 0xcc
   1d504:	bl	13f84 <fprintf@plt>
   1d508:	ldr	r4, [r4, #20]
   1d50c:	cmp	r4, #0
   1d510:	beq	1d658 <__flatcc_fb_gen_c_builder@@Base+0x16b8>
   1d514:	ldr	r9, [pc, #352]	; 1d67c <__flatcc_fb_gen_c_builder@@Base+0x16dc>
   1d518:	ldr	r8, [pc, #352]	; 1d680 <__flatcc_fb_gen_c_builder@@Base+0x16e0>
   1d51c:	ldr	r7, [pc, #352]	; 1d684 <__flatcc_fb_gen_c_builder@@Base+0x16e4>
   1d520:	b	1d5f8 <__flatcc_fb_gen_c_builder@@Base+0x1658>
   1d524:	ldr	r3, [r4, #16]
   1d528:	add	r2, sp, #24
   1d52c:	mov	r1, r3
   1d530:	ldr	r0, [r3, #12]
   1d534:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1d538:	ldr	r1, [r4, #16]
   1d53c:	ldrh	r3, [r1, #8]
   1d540:	cmp	r3, #0
   1d544:	beq	1d588 <__flatcc_fb_gen_c_builder@@Base+0x15e8>
   1d548:	cmp	r3, #1
   1d54c:	beq	1d5a8 <__flatcc_fb_gen_c_builder@@Base+0x1608>
   1d550:	ldr	r4, [pc, #304]	; 1d688 <__flatcc_fb_gen_c_builder@@Base+0x16e8>
   1d554:	ldr	r3, [pc, #304]	; 1d68c <__flatcc_fb_gen_c_builder@@Base+0x16ec>
   1d558:	ldr	r0, [r3]
   1d55c:	ldr	r3, [pc, #300]	; 1d690 <__flatcc_fb_gen_c_builder@@Base+0x16f0>
   1d560:	str	r3, [sp]
   1d564:	mov	r3, #74	; 0x4a
   1d568:	mov	r2, r4
   1d56c:	ldr	r1, [pc, #288]	; 1d694 <__flatcc_fb_gen_c_builder@@Base+0x16f4>
   1d570:	bl	13f84 <fprintf@plt>
   1d574:	ldr	r3, [pc, #284]	; 1d698 <__flatcc_fb_gen_c_builder@@Base+0x16f8>
   1d578:	mov	r2, #74	; 0x4a
   1d57c:	mov	r1, r4
   1d580:	ldr	r0, [pc, #276]	; 1d69c <__flatcc_fb_gen_c_builder@@Base+0x16fc>
   1d584:	bl	14038 <__assert_fail@plt>
   1d588:	ldr	r2, [r4, #48]	; 0x30
   1d58c:	str	sl, [sp, #4]
   1d590:	str	r5, [sp]
   1d594:	add	r3, sp, #24
   1d598:	mov	r1, r9
   1d59c:	ldr	r0, [r6, #204]	; 0xcc
   1d5a0:	bl	13f84 <fprintf@plt>
   1d5a4:	b	1d5ec <__flatcc_fb_gen_c_builder@@Base+0x164c>
   1d5a8:	ldr	r2, [r4, #48]	; 0x30
   1d5ac:	str	sl, [sp, #16]
   1d5b0:	str	r5, [sp, #12]
   1d5b4:	ldrh	r3, [r1, #104]	; 0x68
   1d5b8:	str	r3, [sp, #8]
   1d5bc:	ldrd	r0, [r1, #112]	; 0x70
   1d5c0:	strd	r0, [sp]
   1d5c4:	mov	r1, r8
   1d5c8:	ldr	r0, [r6, #204]	; 0xcc
   1d5cc:	bl	13f84 <fprintf@plt>
   1d5d0:	b	1d5ec <__flatcc_fb_gen_c_builder@@Base+0x164c>
   1d5d4:	ldr	r2, [r4, #48]	; 0x30
   1d5d8:	str	sl, [sp]
   1d5dc:	mov	r3, r5
   1d5e0:	mov	r1, r7
   1d5e4:	ldr	r0, [r6, #204]	; 0xcc
   1d5e8:	bl	13f84 <fprintf@plt>
   1d5ec:	ldr	r4, [r4]
   1d5f0:	cmp	r4, #0
   1d5f4:	beq	1d658 <__flatcc_fb_gen_c_builder@@Base+0x16b8>
   1d5f8:	ldr	r3, [r4, #4]
   1d5fc:	ldr	r5, [r3, #4]
   1d600:	ldr	sl, [r3]
   1d604:	ldrh	r3, [r4, #24]
   1d608:	cmp	r3, #10
   1d60c:	beq	1d5d4 <__flatcc_fb_gen_c_builder@@Base+0x1634>
   1d610:	cmp	r3, #14
   1d614:	beq	1d524 <__flatcc_fb_gen_c_builder@@Base+0x1584>
   1d618:	cmp	r3, #0
   1d61c:	beq	1d5ec <__flatcc_fb_gen_c_builder@@Base+0x164c>
   1d620:	ldr	r4, [pc, #96]	; 1d688 <__flatcc_fb_gen_c_builder@@Base+0x16e8>
   1d624:	ldr	r3, [pc, #96]	; 1d68c <__flatcc_fb_gen_c_builder@@Base+0x16ec>
   1d628:	ldr	r0, [r3]
   1d62c:	ldr	r3, [pc, #108]	; 1d6a0 <__flatcc_fb_gen_c_builder@@Base+0x1700>
   1d630:	str	r3, [sp]
   1d634:	mov	r3, #83	; 0x53
   1d638:	mov	r2, r4
   1d63c:	ldr	r1, [pc, #80]	; 1d694 <__flatcc_fb_gen_c_builder@@Base+0x16f4>
   1d640:	bl	13f84 <fprintf@plt>
   1d644:	ldr	r3, [pc, #76]	; 1d698 <__flatcc_fb_gen_c_builder@@Base+0x16f8>
   1d648:	mov	r2, #83	; 0x53
   1d64c:	mov	r1, r4
   1d650:	ldr	r0, [pc, #68]	; 1d69c <__flatcc_fb_gen_c_builder@@Base+0x16fc>
   1d654:	bl	14038 <__assert_fail@plt>
   1d658:	ldr	r3, [r6, #204]	; 0xcc
   1d65c:	mov	r2, #47	; 0x2f
   1d660:	mov	r1, #1
   1d664:	ldr	r0, [pc, #56]	; 1d6a4 <__flatcc_fb_gen_c_builder@@Base+0x1704>
   1d668:	bl	13f18 <fwrite@plt>
   1d66c:	mov	r0, #0
   1d670:	add	sp, sp, #464	; 0x1d0
   1d674:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d678:	ldrdeq	sp, [r4], -r0
   1d67c:	andeq	sp, r4, r0, lsr r4
   1d680:	andeq	sp, r4, r0, lsl #9
   1d684:	andeq	sp, r4, ip, asr r5
   1d688:	andeq	sp, r4, ip, asr #9
   1d68c:	andeq	r6, r6, r8, lsr #1
   1d690:	andeq	sp, r4, r0, lsr #10
   1d694:	andeq	fp, r3, r8, lsr sl
   1d698:	andeq	sp, r4, r8, lsr #7
   1d69c:	andeq	r3, r4, r0, ror lr
   1d6a0:	muleq	r4, ip, r5
   1d6a4:	ldrdeq	sp, [r4], -r0
   1d6a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d6ac:	sub	sp, sp, #484	; 0x1e4
   1d6b0:	mov	sl, r0
   1d6b4:	mov	r4, r1
   1d6b8:	mov	r5, #220	; 0xdc
   1d6bc:	mov	r2, r5
   1d6c0:	mov	r1, #0
   1d6c4:	add	r0, sp, #260	; 0x104
   1d6c8:	bl	13f9c <memset@plt>
   1d6cc:	mov	r2, r5
   1d6d0:	mov	r1, #0
   1d6d4:	add	r0, sp, #40	; 0x28
   1d6d8:	bl	13f9c <memset@plt>
   1d6dc:	add	r2, sp, #260	; 0x104
   1d6e0:	mov	r1, r4
   1d6e4:	ldr	r0, [r4, #12]
   1d6e8:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1d6ec:	add	r2, sp, #260	; 0x104
   1d6f0:	ldr	r1, [pc, #1148]	; 1db74 <__flatcc_fb_gen_c_builder@@Base+0x1bd4>
   1d6f4:	ldr	r0, [sl, #204]	; 0xcc
   1d6f8:	bl	13f84 <fprintf@plt>
   1d6fc:	ldr	r4, [r4, #20]
   1d700:	cmp	r4, #0
   1d704:	beq	1dac8 <__flatcc_fb_gen_c_builder@@Base+0x1b28>
   1d708:	mov	r2, #1
   1d70c:	ldr	r8, [pc, #1124]	; 1db78 <__flatcc_fb_gen_c_builder@@Base+0x1bd8>
   1d710:	b	1d75c <__flatcc_fb_gen_c_builder@@Base+0x17bc>
   1d714:	ldrd	r2, [r4, #96]	; 0x60
   1d718:	ldrh	r1, [r4, #74]	; 0x4a
   1d71c:	str	r1, [sp, #8]
   1d720:	ldrd	r0, [r4, #88]	; 0x58
   1d724:	strd	r0, [sp]
   1d728:	ldr	r1, [pc, #1100]	; 1db7c <__flatcc_fb_gen_c_builder@@Base+0x1bdc>
   1d72c:	ldr	r0, [sl, #204]	; 0xcc
   1d730:	bl	13f84 <fprintf@plt>
   1d734:	ldr	r2, [r4, #4]
   1d738:	ldr	r3, [r2]
   1d73c:	ldr	r2, [r2, #4]
   1d740:	mov	r1, r8
   1d744:	ldr	r0, [sl, #204]	; 0xcc
   1d748:	bl	13f84 <fprintf@plt>
   1d74c:	mov	r2, #0
   1d750:	ldr	r4, [r4]
   1d754:	cmp	r4, #0
   1d758:	beq	1dac0 <__flatcc_fb_gen_c_builder@@Base+0x1b20>
   1d75c:	ldrh	r3, [r4, #72]	; 0x48
   1d760:	tst	r3, #4
   1d764:	bne	1d750 <__flatcc_fb_gen_c_builder@@Base+0x17b0>
   1d768:	cmp	r2, #0
   1d76c:	ldr	r3, [sl, #204]	; 0xcc
   1d770:	movne	r2, #28
   1d774:	movne	r1, #1
   1d778:	ldrne	r0, [pc, #1024]	; 1db80 <__flatcc_fb_gen_c_builder@@Base+0x1be0>
   1d77c:	moveq	r2, #30
   1d780:	moveq	r1, #1
   1d784:	ldreq	r0, [pc, #1016]	; 1db84 <__flatcc_fb_gen_c_builder@@Base+0x1be4>
   1d788:	bl	13f18 <fwrite@plt>
   1d78c:	ldrh	r5, [r4, #72]	; 0x48
   1d790:	lsr	r5, r5, #8
   1d794:	and	r5, r5, #1
   1d798:	ldrh	r3, [r4, #24]
   1d79c:	sub	r3, r3, #7
   1d7a0:	cmp	r3, #8
   1d7a4:	ldrls	pc, [pc, r3, lsl #2]
   1d7a8:	b	1d734 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1d7ac:	ldrdeq	sp, [r1], -r0
   1d7b0:	andeq	sp, r1, r4, lsl r7
   1d7b4:	andeq	sp, r1, r0, asr #17
   1d7b8:	andeq	sp, r1, r8, lsr #17
   1d7bc:	andeq	sp, r1, r4, lsr r7
   1d7c0:	andeq	sp, r1, r4, lsr r7
   1d7c4:	andeq	sp, r1, r4, lsr r7
   1d7c8:	ldrdeq	sp, [r1], -r8
   1d7cc:			; <UNDEFINED> instruction: 0x0001d9b0
   1d7d0:	ldr	r3, [r4, #104]	; 0x68
   1d7d4:	cmp	r3, #0
   1d7d8:	beq	1d84c <__flatcc_fb_gen_c_builder@@Base+0x18ac>
   1d7dc:	add	r2, sp, #40	; 0x28
   1d7e0:	mov	r1, r3
   1d7e4:	ldr	r0, [r3, #12]
   1d7e8:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1d7ec:	ldr	r3, [r4, #104]	; 0x68
   1d7f0:	ldrh	r3, [r3, #8]
   1d7f4:	cmp	r3, #0
   1d7f8:	bne	1d824 <__flatcc_fb_gen_c_builder@@Base+0x1884>
   1d7fc:	ldrd	r2, [r4, #96]	; 0x60
   1d800:	add	r1, sp, #40	; 0x28
   1d804:	str	r1, [sp, #8]
   1d808:	ldrh	r1, [r4, #74]	; 0x4a
   1d80c:	str	r1, [sp, #4]
   1d810:	str	r5, [sp]
   1d814:	ldr	r1, [pc, #876]	; 1db88 <__flatcc_fb_gen_c_builder@@Base+0x1be8>
   1d818:	ldr	r0, [sl, #204]	; 0xcc
   1d81c:	bl	13f84 <fprintf@plt>
   1d820:	b	1d734 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1d824:	ldrd	r2, [r4, #96]	; 0x60
   1d828:	ldrh	r1, [r4, #74]	; 0x4a
   1d82c:	str	r1, [sp, #16]
   1d830:	ldrd	r0, [r4, #88]	; 0x58
   1d834:	strd	r0, [sp, #8]
   1d838:	str	r5, [sp]
   1d83c:	ldr	r1, [pc, #840]	; 1db8c <__flatcc_fb_gen_c_builder@@Base+0x1bec>
   1d840:	ldr	r0, [sl, #204]	; 0xcc
   1d844:	bl	13f84 <fprintf@plt>
   1d848:	b	1d734 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1d84c:	ldr	r9, [sl, #204]	; 0xcc
   1d850:	ldrd	r2, [r4, #96]	; 0x60
   1d854:	strd	r2, [sp, #32]
   1d858:	ldrd	r6, [r4, #88]	; 0x58
   1d85c:	ldrh	fp, [r4, #74]	; 0x4a
   1d860:	orrs	r3, r6, r7
   1d864:	mvneq	r0, #0
   1d868:	moveq	r1, #0
   1d86c:	beq	1d884 <__flatcc_fb_gen_c_builder@@Base+0x18e4>
   1d870:	mov	r2, r6
   1d874:	mov	r3, r7
   1d878:	mvn	r0, #0
   1d87c:	mov	r1, #0
   1d880:	bl	3a114 <fb_value_set_visit@@Base+0x614>
   1d884:	strd	r0, [sp, #24]
   1d888:	str	fp, [sp, #16]
   1d88c:	strd	r6, [sp, #8]
   1d890:	str	r5, [sp]
   1d894:	ldrd	r2, [sp, #32]
   1d898:	ldr	r1, [pc, #752]	; 1db90 <__flatcc_fb_gen_c_builder@@Base+0x1bf0>
   1d89c:	mov	r0, r9
   1d8a0:	bl	13f84 <fprintf@plt>
   1d8a4:	b	1d734 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1d8a8:	ldrd	r2, [r4, #96]	; 0x60
   1d8ac:	str	r5, [sp]
   1d8b0:	ldr	r1, [pc, #732]	; 1db94 <__flatcc_fb_gen_c_builder@@Base+0x1bf4>
   1d8b4:	ldr	r0, [sl, #204]	; 0xcc
   1d8b8:	bl	13f84 <fprintf@plt>
   1d8bc:	b	1d734 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1d8c0:	ldrd	r2, [r4, #96]	; 0x60
   1d8c4:	str	r5, [sp]
   1d8c8:	ldr	r1, [pc, #712]	; 1db98 <__flatcc_fb_gen_c_builder@@Base+0x1bf8>
   1d8cc:	ldr	r0, [sl, #204]	; 0xcc
   1d8d0:	bl	13f84 <fprintf@plt>
   1d8d4:	b	1d734 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1d8d8:	ldr	r3, [r4, #16]
   1d8dc:	add	r2, sp, #40	; 0x28
   1d8e0:	mov	r1, r3
   1d8e4:	ldr	r0, [r3, #12]
   1d8e8:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1d8ec:	ldr	r3, [r4, #16]
   1d8f0:	ldrh	r3, [r3, #8]
   1d8f4:	cmp	r3, #4
   1d8f8:	ldrls	pc, [pc, r3, lsl #2]
   1d8fc:	b	1d978 <__flatcc_fb_gen_c_builder@@Base+0x19d8>
   1d900:	andeq	sp, r1, r8, lsr r9
   1d904:	andeq	sp, r1, r4, lsl r9
   1d908:	andeq	sp, r1, r8, ror r9
   1d90c:	andeq	sp, r1, r4, lsl r9
   1d910:	andeq	sp, r1, r8, asr r9
   1d914:	ldrd	r2, [r4, #96]	; 0x60
   1d918:	ldrh	r1, [r4, #74]	; 0x4a
   1d91c:	str	r1, [sp, #8]
   1d920:	ldrd	r0, [r4, #88]	; 0x58
   1d924:	strd	r0, [sp]
   1d928:	ldr	r1, [pc, #588]	; 1db7c <__flatcc_fb_gen_c_builder@@Base+0x1bdc>
   1d92c:	ldr	r0, [sl, #204]	; 0xcc
   1d930:	bl	13f84 <fprintf@plt>
   1d934:	b	1d734 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1d938:	ldrd	r2, [r4, #96]	; 0x60
   1d93c:	add	r1, sp, #40	; 0x28
   1d940:	str	r1, [sp, #4]
   1d944:	str	r5, [sp]
   1d948:	ldr	r1, [pc, #588]	; 1db9c <__flatcc_fb_gen_c_builder@@Base+0x1bfc>
   1d94c:	ldr	r0, [sl, #204]	; 0xcc
   1d950:	bl	13f84 <fprintf@plt>
   1d954:	b	1d734 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1d958:	ldrd	r2, [r4, #96]	; 0x60
   1d95c:	add	r1, sp, #40	; 0x28
   1d960:	str	r1, [sp, #4]
   1d964:	str	r5, [sp]
   1d968:	ldr	r1, [pc, #560]	; 1dba0 <__flatcc_fb_gen_c_builder@@Base+0x1c00>
   1d96c:	ldr	r0, [sl, #204]	; 0xcc
   1d970:	bl	13f84 <fprintf@plt>
   1d974:	b	1d734 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1d978:	ldr	r4, [pc, #548]	; 1dba4 <__flatcc_fb_gen_c_builder@@Base+0x1c04>
   1d97c:	ldr	r3, [pc, #548]	; 1dba8 <__flatcc_fb_gen_c_builder@@Base+0x1c08>
   1d980:	ldr	r0, [r3]
   1d984:	ldr	r3, [pc, #544]	; 1dbac <__flatcc_fb_gen_c_builder@@Base+0x1c0c>
   1d988:	str	r3, [sp]
   1d98c:	mov	r3, #178	; 0xb2
   1d990:	mov	r2, r4
   1d994:	ldr	r1, [pc, #532]	; 1dbb0 <__flatcc_fb_gen_c_builder@@Base+0x1c10>
   1d998:	bl	13f84 <fprintf@plt>
   1d99c:	ldr	r3, [pc, #528]	; 1dbb4 <__flatcc_fb_gen_c_builder@@Base+0x1c14>
   1d9a0:	mov	r2, #178	; 0xb2
   1d9a4:	mov	r1, r4
   1d9a8:	ldr	r0, [pc, #520]	; 1dbb8 <__flatcc_fb_gen_c_builder@@Base+0x1c18>
   1d9ac:	bl	14038 <__assert_fail@plt>
   1d9b0:	ldr	r3, [r4, #16]
   1d9b4:	add	r2, sp, #40	; 0x28
   1d9b8:	mov	r1, r3
   1d9bc:	ldr	r0, [r3, #12]
   1d9c0:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1d9c4:	ldr	r3, [r4, #16]
   1d9c8:	ldrh	r3, [r3, #8]
   1d9cc:	cmp	r3, #4
   1d9d0:	ldrls	pc, [pc, r3, lsl #2]
   1d9d4:	b	1da88 <__flatcc_fb_gen_c_builder@@Base+0x1ae8>
   1d9d8:	andeq	sp, r1, ip, ror #19
   1d9dc:	andeq	sp, r1, ip, lsl #20
   1d9e0:	andeq	sp, r1, r8, lsl #21
   1d9e4:	andeq	sp, r1, ip, lsl #20
   1d9e8:	andeq	sp, r1, r8, ror #20
   1d9ec:	ldrd	r2, [r4, #96]	; 0x60
   1d9f0:	add	r1, sp, #40	; 0x28
   1d9f4:	str	r1, [sp, #4]
   1d9f8:	str	r5, [sp]
   1d9fc:	ldr	r1, [pc, #440]	; 1dbbc <__flatcc_fb_gen_c_builder@@Base+0x1c1c>
   1da00:	ldr	r0, [sl, #204]	; 0xcc
   1da04:	bl	13f84 <fprintf@plt>
   1da08:	b	1d734 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1da0c:	ldr	r9, [sl, #204]	; 0xcc
   1da10:	ldrd	r2, [r4, #96]	; 0x60
   1da14:	strd	r2, [sp, #32]
   1da18:	ldrd	r6, [r4, #88]	; 0x58
   1da1c:	ldrh	fp, [r4, #74]	; 0x4a
   1da20:	orrs	r3, r6, r7
   1da24:	mvneq	r0, #0
   1da28:	moveq	r1, #0
   1da2c:	beq	1da44 <__flatcc_fb_gen_c_builder@@Base+0x1aa4>
   1da30:	mov	r2, r6
   1da34:	mov	r3, r7
   1da38:	mvn	r0, #0
   1da3c:	mov	r1, #0
   1da40:	bl	3a114 <fb_value_set_visit@@Base+0x614>
   1da44:	strd	r0, [sp, #24]
   1da48:	str	fp, [sp, #16]
   1da4c:	strd	r6, [sp, #8]
   1da50:	str	r5, [sp]
   1da54:	ldrd	r2, [sp, #32]
   1da58:	ldr	r1, [pc, #304]	; 1db90 <__flatcc_fb_gen_c_builder@@Base+0x1bf0>
   1da5c:	mov	r0, r9
   1da60:	bl	13f84 <fprintf@plt>
   1da64:	b	1d734 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1da68:	ldrd	r2, [r4, #96]	; 0x60
   1da6c:	add	r1, sp, #40	; 0x28
   1da70:	str	r1, [sp, #4]
   1da74:	str	r5, [sp]
   1da78:	ldr	r1, [pc, #320]	; 1dbc0 <__flatcc_fb_gen_c_builder@@Base+0x1c20>
   1da7c:	ldr	r0, [sl, #204]	; 0xcc
   1da80:	bl	13f84 <fprintf@plt>
   1da84:	b	1d734 <__flatcc_fb_gen_c_builder@@Base+0x1794>
   1da88:	ldr	r4, [pc, #276]	; 1dba4 <__flatcc_fb_gen_c_builder@@Base+0x1c04>
   1da8c:	ldr	r3, [pc, #276]	; 1dba8 <__flatcc_fb_gen_c_builder@@Base+0x1c08>
   1da90:	ldr	r0, [r3]
   1da94:	ldr	r3, [pc, #296]	; 1dbc4 <__flatcc_fb_gen_c_builder@@Base+0x1c24>
   1da98:	str	r3, [sp]
   1da9c:	mov	r3, #202	; 0xca
   1daa0:	mov	r2, r4
   1daa4:	ldr	r1, [pc, #260]	; 1dbb0 <__flatcc_fb_gen_c_builder@@Base+0x1c10>
   1daa8:	bl	13f84 <fprintf@plt>
   1daac:	ldr	r3, [pc, #256]	; 1dbb4 <__flatcc_fb_gen_c_builder@@Base+0x1c14>
   1dab0:	mov	r2, #202	; 0xca
   1dab4:	mov	r1, r4
   1dab8:	ldr	r0, [pc, #248]	; 1dbb8 <__flatcc_fb_gen_c_builder@@Base+0x1c18>
   1dabc:	bl	14038 <__assert_fail@plt>
   1dac0:	cmp	r2, #0
   1dac4:	beq	1db5c <__flatcc_fb_gen_c_builder@@Base+0x1bbc>
   1dac8:	ldr	r3, [sl, #204]	; 0xcc
   1dacc:	mov	r2, #29
   1dad0:	mov	r1, #1
   1dad4:	ldr	r0, [pc, #236]	; 1dbc8 <__flatcc_fb_gen_c_builder@@Base+0x1c28>
   1dad8:	bl	13f18 <fwrite@plt>
   1dadc:	ldr	r3, [sl, #204]	; 0xcc
   1dae0:	mov	r2, #3
   1dae4:	mov	r1, #1
   1dae8:	ldr	r0, [pc, #220]	; 1dbcc <__flatcc_fb_gen_c_builder@@Base+0x1c2c>
   1daec:	bl	13f18 <fwrite@plt>
   1daf0:	add	r4, sp, #260	; 0x104
   1daf4:	str	r4, [sp]
   1daf8:	mov	r3, r4
   1dafc:	mov	r2, r4
   1db00:	ldr	r1, [pc, #200]	; 1dbd0 <__flatcc_fb_gen_c_builder@@Base+0x1c30>
   1db04:	ldr	r0, [sl, #204]	; 0xcc
   1db08:	bl	13f84 <fprintf@plt>
   1db0c:	str	r4, [sp]
   1db10:	mov	r3, r4
   1db14:	mov	r2, r4
   1db18:	ldr	r1, [pc, #180]	; 1dbd4 <__flatcc_fb_gen_c_builder@@Base+0x1c34>
   1db1c:	ldr	r0, [sl, #204]	; 0xcc
   1db20:	bl	13f84 <fprintf@plt>
   1db24:	mov	r3, r4
   1db28:	mov	r2, r4
   1db2c:	ldr	r1, [pc, #164]	; 1dbd8 <__flatcc_fb_gen_c_builder@@Base+0x1c38>
   1db30:	ldr	r0, [sl, #204]	; 0xcc
   1db34:	bl	13f84 <fprintf@plt>
   1db38:	ldr	r0, [sl, #204]	; 0xcc
   1db3c:	str	r4, [sp]
   1db40:	mov	r3, sl
   1db44:	mov	r2, r4
   1db48:	ldr	r1, [pc, #140]	; 1dbdc <__flatcc_fb_gen_c_builder@@Base+0x1c3c>
   1db4c:	bl	13f84 <fprintf@plt>
   1db50:	mov	r0, #0
   1db54:	add	sp, sp, #484	; 0x1e4
   1db58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db5c:	ldr	r3, [sl, #204]	; 0xcc
   1db60:	mov	r2, #15
   1db64:	mov	r1, #1
   1db68:	ldr	r0, [pc, #112]	; 1dbe0 <__flatcc_fb_gen_c_builder@@Base+0x1c40>
   1db6c:	bl	13f18 <fwrite@plt>
   1db70:	b	1dac8 <__flatcc_fb_gen_c_builder@@Base+0x1b28>
   1db74:	andeq	sp, r4, r0, lsl #12
   1db78:			; <UNDEFINED> instruction: 0x0004e5b4
   1db7c:	andeq	sp, r4, r8, lsl #13
   1db80:	andeq	sp, r4, r8, asr #12
   1db84:	andeq	sp, r4, r8, ror #12
   1db88:			; <UNDEFINED> instruction: 0x0004d6b0
   1db8c:	strdeq	sp, [r4], -ip
   1db90:	andeq	sp, r4, ip, lsr r7
   1db94:	andeq	sp, r4, r0, lsl #15
   1db98:	andeq	sp, r4, ip, lsr #15
   1db9c:	ldrdeq	sp, [r4], -ip
   1dba0:	andeq	sp, r4, r8, lsl r8
   1dba4:	andeq	sp, r4, ip, asr #9
   1dba8:	andeq	r6, r6, r8, lsr #1
   1dbac:	andeq	sp, r4, r4, asr r8
   1dbb0:	andeq	fp, r3, r8, lsr sl
   1dbb4:			; <UNDEFINED> instruction: 0x0004d3bc
   1dbb8:	andeq	r3, r4, r0, ror lr
   1dbbc:	muleq	r4, r0, r8
   1dbc0:	ldrdeq	sp, [r4], -r4
   1dbc4:	andeq	sp, r4, r8, lsl r9
   1dbc8:	andeq	sp, r4, ip, ror #18
   1dbcc:	andeq	sp, r4, r8, lsr #20
   1dbd0:	andeq	sp, r4, ip, lsl #19
   1dbd4:	andeq	sp, r4, ip, lsr #20
   1dbd8:	ldrdeq	sp, [r4], -r8
   1dbdc:	muleq	r4, r0, fp
   1dbe0:	andeq	sp, r4, ip, asr r9

0001dbe4 <__flatcc_fb_gen_c_verifier@@Base>:
   1dbe4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1dbe8:	sub	sp, sp, #240	; 0xf0
   1dbec:	mov	r5, r0
   1dbf0:	ldr	r3, [r0, #208]	; 0xd0
   1dbf4:	ldr	r2, [r3, #164]	; 0xa4
   1dbf8:	mov	r3, r2
   1dbfc:	ldr	r1, [pc, #712]	; 1decc <__flatcc_fb_gen_c_verifier@@Base+0x2e8>
   1dc00:	ldr	r0, [r0, #204]	; 0xcc
   1dc04:	bl	13f84 <fprintf@plt>
   1dc08:	ldr	r3, [r5, #204]	; 0xcc
   1dc0c:	mov	r2, #81	; 0x51
   1dc10:	mov	r1, #1
   1dc14:	ldr	r0, [pc, #692]	; 1ded0 <__flatcc_fb_gen_c_verifier@@Base+0x2ec>
   1dc18:	bl	13f18 <fwrite@plt>
   1dc1c:	ldr	r3, [r5, #208]	; 0xd0
   1dc20:	ldr	r2, [r3, #164]	; 0xa4
   1dc24:	ldr	r1, [pc, #680]	; 1ded4 <__flatcc_fb_gen_c_verifier@@Base+0x2f0>
   1dc28:	ldr	r0, [r5, #204]	; 0xcc
   1dc2c:	bl	13f84 <fprintf@plt>
   1dc30:	ldr	r3, [r5, #208]	; 0xd0
   1dc34:	ldr	r2, [r3, #160]	; 0xa0
   1dc38:	ldr	r1, [pc, #664]	; 1ded8 <__flatcc_fb_gen_c_verifier@@Base+0x2f4>
   1dc3c:	ldr	r0, [r5, #204]	; 0xcc
   1dc40:	bl	13f84 <fprintf@plt>
   1dc44:	ldr	r3, [r5, #204]	; 0xcc
   1dc48:	mov	r2, #7
   1dc4c:	mov	r1, #1
   1dc50:	ldr	r0, [pc, #644]	; 1dedc <__flatcc_fb_gen_c_verifier@@Base+0x2f8>
   1dc54:	bl	13f18 <fwrite@plt>
   1dc58:	ldr	r3, [r5, #204]	; 0xcc
   1dc5c:	mov	r2, #36	; 0x24
   1dc60:	mov	r1, #1
   1dc64:	ldr	r0, [pc, #628]	; 1dee0 <__flatcc_fb_gen_c_verifier@@Base+0x2fc>
   1dc68:	bl	13f18 <fwrite@plt>
   1dc6c:	ldr	r2, [pc, #624]	; 1dee4 <__flatcc_fb_gen_c_verifier@@Base+0x300>
   1dc70:	ldr	r1, [pc, #624]	; 1dee8 <__flatcc_fb_gen_c_verifier@@Base+0x304>
   1dc74:	mov	r0, r5
   1dc78:	bl	15058 <__flatcc_fb_gen_c_includes@@Base>
   1dc7c:	ldr	r3, [r5, #212]	; 0xd4
   1dc80:	ldr	r3, [r3, #140]	; 0x8c
   1dc84:	cmp	r3, #0
   1dc88:	bne	1dcc0 <__flatcc_fb_gen_c_verifier@@Base+0xdc>
   1dc8c:	ldr	r1, [r5, #204]	; 0xcc
   1dc90:	mov	r0, #10
   1dc94:	bl	13fe4 <fputc@plt>
   1dc98:	mov	r2, #220	; 0xdc
   1dc9c:	mov	r1, #0
   1dca0:	add	r0, sp, #20
   1dca4:	bl	13f9c <memset@plt>
   1dca8:	ldr	r3, [r5, #208]	; 0xd0
   1dcac:	ldr	r4, [r3, #40]	; 0x28
   1dcb0:	cmp	r4, #0
   1dcb4:	beq	1dd14 <__flatcc_fb_gen_c_verifier@@Base+0x130>
   1dcb8:	ldr	r6, [pc, #556]	; 1deec <__flatcc_fb_gen_c_verifier@@Base+0x308>
   1dcbc:	b	1dce4 <__flatcc_fb_gen_c_verifier@@Base+0x100>
   1dcc0:	ldr	r3, [r5, #204]	; 0xcc
   1dcc4:	mov	r2, #36	; 0x24
   1dcc8:	mov	r1, #1
   1dccc:	ldr	r0, [pc, #540]	; 1def0 <__flatcc_fb_gen_c_verifier@@Base+0x30c>
   1dcd0:	bl	13f18 <fwrite@plt>
   1dcd4:	b	1dc8c <__flatcc_fb_gen_c_verifier@@Base+0xa8>
   1dcd8:	ldr	r4, [r4]
   1dcdc:	cmp	r4, #0
   1dce0:	beq	1dd14 <__flatcc_fb_gen_c_verifier@@Base+0x130>
   1dce4:	ldrh	r3, [r4, #8]
   1dce8:	cmp	r3, #0
   1dcec:	bne	1dcd8 <__flatcc_fb_gen_c_verifier@@Base+0xf4>
   1dcf0:	add	r2, sp, #20
   1dcf4:	mov	r1, r4
   1dcf8:	ldr	r0, [r4, #12]
   1dcfc:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1dd00:	add	r2, sp, #20
   1dd04:	mov	r1, r6
   1dd08:	ldr	r0, [r5, #204]	; 0xcc
   1dd0c:	bl	13f84 <fprintf@plt>
   1dd10:	b	1dcd8 <__flatcc_fb_gen_c_verifier@@Base+0xf4>
   1dd14:	ldr	r1, [r5, #204]	; 0xcc
   1dd18:	mov	r0, #10
   1dd1c:	bl	13fe4 <fputc@plt>
   1dd20:	ldr	r3, [r5, #208]	; 0xd0
   1dd24:	ldr	r4, [r3, #40]	; 0x28
   1dd28:	cmp	r4, #0
   1dd2c:	bne	1dd6c <__flatcc_fb_gen_c_verifier@@Base+0x188>
   1dd30:	ldr	r3, [r5, #212]	; 0xd4
   1dd34:	ldr	r3, [r3, #140]	; 0x8c
   1dd38:	cmp	r3, #0
   1dd3c:	bne	1deb4 <__flatcc_fb_gen_c_verifier@@Base+0x2d0>
   1dd40:	ldr	r3, [r5, #208]	; 0xd0
   1dd44:	ldr	r2, [r3, #164]	; 0xa4
   1dd48:	ldr	r1, [pc, #420]	; 1def4 <__flatcc_fb_gen_c_verifier@@Base+0x310>
   1dd4c:	ldr	r0, [r5, #204]	; 0xcc
   1dd50:	bl	13f84 <fprintf@plt>
   1dd54:	mov	r0, #0
   1dd58:	add	sp, sp, #240	; 0xf0
   1dd5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dd60:	ldr	r4, [r4]
   1dd64:	cmp	r4, #0
   1dd68:	beq	1dd88 <__flatcc_fb_gen_c_verifier@@Base+0x1a4>
   1dd6c:	ldrh	r3, [r4, #8]
   1dd70:	cmp	r3, #4
   1dd74:	bne	1dd60 <__flatcc_fb_gen_c_verifier@@Base+0x17c>
   1dd78:	mov	r1, r4
   1dd7c:	mov	r0, r5
   1dd80:	bl	1d4b4 <__flatcc_fb_gen_c_builder@@Base+0x1514>
   1dd84:	b	1dd60 <__flatcc_fb_gen_c_verifier@@Base+0x17c>
   1dd88:	ldr	r3, [r5, #208]	; 0xd0
   1dd8c:	ldr	r4, [r3, #40]	; 0x28
   1dd90:	cmp	r4, #0
   1dd94:	beq	1dd30 <__flatcc_fb_gen_c_verifier@@Base+0x14c>
   1dd98:	mov	sl, #220	; 0xdc
   1dd9c:	ldr	r9, [pc, #340]	; 1def8 <__flatcc_fb_gen_c_verifier@@Base+0x314>
   1dda0:	ldr	r8, [pc, #340]	; 1defc <__flatcc_fb_gen_c_verifier@@Base+0x318>
   1dda4:	ldr	r7, [pc, #340]	; 1df00 <__flatcc_fb_gen_c_verifier@@Base+0x31c>
   1dda8:	ldr	r6, [pc, #340]	; 1df04 <__flatcc_fb_gen_c_verifier@@Base+0x320>
   1ddac:	b	1ddbc <__flatcc_fb_gen_c_verifier@@Base+0x1d8>
   1ddb0:	ldr	r4, [r4]
   1ddb4:	cmp	r4, #0
   1ddb8:	beq	1de78 <__flatcc_fb_gen_c_verifier@@Base+0x294>
   1ddbc:	ldrh	r3, [r4, #8]
   1ddc0:	cmp	r3, #1
   1ddc4:	bne	1ddb0 <__flatcc_fb_gen_c_verifier@@Base+0x1cc>
   1ddc8:	mov	r2, sl
   1ddcc:	mov	r1, #0
   1ddd0:	add	r0, sp, #20
   1ddd4:	bl	13f9c <memset@plt>
   1ddd8:	add	r2, sp, #20
   1dddc:	mov	r1, r4
   1dde0:	ldr	r0, [r4, #12]
   1dde4:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1dde8:	ldrh	r3, [r4, #104]	; 0x68
   1ddec:	str	r3, [sp, #8]
   1ddf0:	ldrd	r2, [r4, #112]	; 0x70
   1ddf4:	strd	r2, [sp]
   1ddf8:	add	r3, sp, #20
   1ddfc:	mov	r2, r3
   1de00:	mov	r1, r9
   1de04:	ldr	r0, [r5, #204]	; 0xcc
   1de08:	bl	13f84 <fprintf@plt>
   1de0c:	ldrh	r3, [r4, #104]	; 0x68
   1de10:	str	r3, [sp, #8]
   1de14:	ldrd	r2, [r4, #112]	; 0x70
   1de18:	strd	r2, [sp]
   1de1c:	add	r3, sp, #20
   1de20:	mov	r2, r3
   1de24:	mov	r1, r8
   1de28:	ldr	r0, [r5, #204]	; 0xcc
   1de2c:	bl	13f84 <fprintf@plt>
   1de30:	ldrh	r3, [r4, #104]	; 0x68
   1de34:	str	r3, [sp, #8]
   1de38:	ldrd	r2, [r4, #112]	; 0x70
   1de3c:	strd	r2, [sp]
   1de40:	mov	r3, r5
   1de44:	add	r2, sp, #20
   1de48:	mov	r1, r7
   1de4c:	ldr	r0, [r5, #204]	; 0xcc
   1de50:	bl	13f84 <fprintf@plt>
   1de54:	ldrh	r3, [r4, #104]	; 0x68
   1de58:	str	r3, [sp, #8]
   1de5c:	ldrd	r2, [r4, #112]	; 0x70
   1de60:	strd	r2, [sp]
   1de64:	add	r2, sp, #20
   1de68:	mov	r1, r6
   1de6c:	ldr	r0, [r5, #204]	; 0xcc
   1de70:	bl	13f84 <fprintf@plt>
   1de74:	b	1ddb0 <__flatcc_fb_gen_c_verifier@@Base+0x1cc>
   1de78:	ldr	r3, [r5, #208]	; 0xd0
   1de7c:	ldr	r4, [r3, #40]	; 0x28
   1de80:	cmp	r4, #0
   1de84:	bne	1de98 <__flatcc_fb_gen_c_verifier@@Base+0x2b4>
   1de88:	b	1dd30 <__flatcc_fb_gen_c_verifier@@Base+0x14c>
   1de8c:	ldr	r4, [r4]
   1de90:	cmp	r4, #0
   1de94:	beq	1dd30 <__flatcc_fb_gen_c_verifier@@Base+0x14c>
   1de98:	ldrh	r3, [r4, #8]
   1de9c:	cmp	r3, #0
   1dea0:	bne	1de8c <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1dea4:	mov	r1, r4
   1dea8:	mov	r0, r5
   1deac:	bl	1d6a8 <__flatcc_fb_gen_c_builder@@Base+0x1708>
   1deb0:	b	1de8c <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1deb4:	ldr	r3, [r5, #204]	; 0xcc
   1deb8:	mov	r2, #36	; 0x24
   1debc:	mov	r1, #1
   1dec0:	ldr	r0, [pc, #64]	; 1df08 <__flatcc_fb_gen_c_verifier@@Base+0x324>
   1dec4:	bl	13f18 <fwrite@plt>
   1dec8:	b	1dd40 <__flatcc_fb_gen_c_verifier@@Base+0x15c>
   1decc:	andeq	sp, r4, r0, asr ip
   1ded0:	andeq	ip, r3, r0, lsr sp
   1ded4:	muleq	r4, ip, fp
   1ded8:			; <UNDEFINED> instruction: 0x0004cbb4
   1dedc:	andeq	r2, r4, ip, lsl #30
   1dee0:	andeq	sp, r4, r0, lsl #25
   1dee4:	andeq	sp, r4, r8, lsr #25
   1dee8:	strdeq	fp, [r3], -ip
   1deec:			; <UNDEFINED> instruction: 0x0004dcb4
   1def0:	andeq	ip, r3, r4, asr #28
   1def4:	andeq	sp, r4, r4, lsr #31
   1def8:	strdeq	sp, [r4], -ip
   1defc:	muleq	r4, r8, sp
   1df00:	andeq	sp, r4, ip, lsr lr
   1df04:	strdeq	sp, [r4], -r4
   1df08:	andeq	r2, r4, r8, lsr #25
   1df0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df10:	ldr	ip, [r0, #4]
   1df14:	cmp	ip, r1
   1df18:	movlt	fp, #0
   1df1c:	movlt	r0, fp
   1df20:	blt	1dfb8 <__flatcc_fb_gen_c_verifier@@Base+0x3d4>
   1df24:	ldr	fp, [r0]
   1df28:	add	fp, fp, r1
   1df2c:	sub	r0, ip, r1
   1df30:	cmp	r0, #8
   1df34:	movge	r0, #8
   1df38:	cmp	r0, #0
   1df3c:	beq	1dfd4 <__flatcc_fb_gen_c_verifier@@Base+0x3f0>
   1df40:	add	ip, fp, r0
   1df44:	rsb	r1, r0, #8
   1df48:	lsl	r1, r1, #3
   1df4c:	mov	sl, fp
   1df50:	mov	r8, #0
   1df54:	mov	r9, #0
   1df58:	ldrb	r6, [ip, #-1]!
   1df5c:	sub	r7, r1, #32
   1df60:	rsb	lr, r1, #32
   1df64:	mov	r5, #0
   1df68:	orr	r5, r5, r6, lsl r7
   1df6c:	orr	r5, r5, r6, lsr lr
   1df70:	lsl	r4, r6, r1
   1df74:	orr	r8, r8, r4
   1df78:	orr	r9, r9, r5
   1df7c:	add	r1, r1, #8
   1df80:	cmp	ip, sl
   1df84:	bne	1df58 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   1df88:	strd	r8, [r2]
   1df8c:	rsb	r2, r0, #8
   1df90:	lsl	r2, r2, #3
   1df94:	mov	r1, #1
   1df98:	sub	lr, r2, #32
   1df9c:	rsb	ip, r2, #32
   1dfa0:	lsl	r5, r1, lr
   1dfa4:	orr	r5, r5, r1, lsr ip
   1dfa8:	lsl	r4, r1, r2
   1dfac:	rsbs	r4, r4, #0
   1dfb0:	rsc	r5, r5, #0
   1dfb4:	strd	r4, [r3]
   1dfb8:	ldr	r3, [sp, #36]	; 0x24
   1dfbc:	cmp	r3, #0
   1dfc0:	strne	fp, [r3]
   1dfc4:	ldr	r3, [sp, #40]	; 0x28
   1dfc8:	cmp	r3, #0
   1dfcc:	strne	r0, [r3]
   1dfd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dfd4:	mov	r8, #0
   1dfd8:	mov	r9, #0
   1dfdc:	b	1df88 <__flatcc_fb_gen_c_verifier@@Base+0x3a4>
   1dfe0:	push	{r1, r2, r3}
   1dfe4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1dfe8:	sub	sp, sp, #12
   1dfec:	mov	r5, r0
   1dff0:	ldr	r8, [sp, #44]	; 0x2c
   1dff4:	ldr	r4, [r0, #220]	; 0xdc
   1dff8:	ldr	r3, [r0, #212]	; 0xd4
   1dffc:	ldr	r6, [r3, #176]	; 0xb0
   1e000:	ldr	r3, [pc, #184]	; 1e0c0 <__flatcc_fb_gen_c_verifier@@Base+0x4dc>
   1e004:	ldrb	r3, [r3]
   1e008:	cmp	r3, #0
   1e00c:	beq	1e0ac <__flatcc_fb_gen_c_verifier@@Base+0x4c8>
   1e010:	ldrb	r3, [r8]
   1e014:	cmp	r3, #0
   1e018:	beq	1e090 <__flatcc_fb_gen_c_verifier@@Base+0x4ac>
   1e01c:	mul	r6, r6, r4
   1e020:	cmp	r6, #64	; 0x40
   1e024:	ble	1e068 <__flatcc_fb_gen_c_verifier@@Base+0x484>
   1e028:	mov	r4, r6
   1e02c:	ldr	sl, [pc, #140]	; 1e0c0 <__flatcc_fb_gen_c_verifier@@Base+0x4dc>
   1e030:	ldr	r9, [pc, #140]	; 1e0c4 <__flatcc_fb_gen_c_verifier@@Base+0x4e0>
   1e034:	mov	r7, #64	; 0x40
   1e038:	mov	r3, sl
   1e03c:	mov	r2, r7
   1e040:	mov	r1, r9
   1e044:	ldr	r0, [r5, #204]	; 0xcc
   1e048:	bl	13f84 <fprintf@plt>
   1e04c:	sub	r4, r4, #64	; 0x40
   1e050:	cmp	r4, #64	; 0x40
   1e054:	bgt	1e038 <__flatcc_fb_gen_c_verifier@@Base+0x454>
   1e058:	sub	r3, r6, #64	; 0x40
   1e05c:	sub	r6, r6, #65	; 0x41
   1e060:	bic	r6, r6, #63	; 0x3f
   1e064:	sub	r6, r3, r6
   1e068:	ldr	r3, [pc, #80]	; 1e0c0 <__flatcc_fb_gen_c_verifier@@Base+0x4dc>
   1e06c:	mov	r2, r6
   1e070:	ldr	r1, [pc, #76]	; 1e0c4 <__flatcc_fb_gen_c_verifier@@Base+0x4e0>
   1e074:	ldr	r0, [r5, #204]	; 0xcc
   1e078:	bl	13f84 <fprintf@plt>
   1e07c:	add	r2, sp, #48	; 0x30
   1e080:	str	r2, [sp, #4]
   1e084:	mov	r1, r8
   1e088:	ldr	r0, [r5, #204]	; 0xcc
   1e08c:	bl	13fd8 <vfprintf@plt>
   1e090:	ldr	r1, [r5, #204]	; 0xcc
   1e094:	mov	r0, #10
   1e098:	bl	13fe4 <fputc@plt>
   1e09c:	add	sp, sp, #12
   1e0a0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e0a4:	add	sp, sp, #12
   1e0a8:	bx	lr
   1e0ac:	mov	r2, #64	; 0x40
   1e0b0:	mov	r1, #32
   1e0b4:	ldr	r0, [pc, #4]	; 1e0c0 <__flatcc_fb_gen_c_verifier@@Base+0x4dc>
   1e0b8:	bl	13f9c <memset@plt>
   1e0bc:	b	1e010 <__flatcc_fb_gen_c_verifier@@Base+0x42c>
   1e0c0:	strheq	r6, [r6], -r4
   1e0c4:	andeq	r3, r4, r4, asr lr
   1e0c8:	push	{r4, lr}
   1e0cc:	ldr	r1, [pc, #4]	; 1e0d8 <__flatcc_fb_gen_c_verifier@@Base+0x4f4>
   1e0d0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e0d4:	pop	{r4, pc}
   1e0d8:	andeq	lr, r4, r4, ror #2
   1e0dc:	push	{r4, lr}
   1e0e0:	ldr	r1, [pc, #4]	; 1e0ec <__flatcc_fb_gen_c_verifier@@Base+0x508>
   1e0e4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e0e8:	pop	{r4, pc}
   1e0ec:	andeq	lr, r4, r8, ror r1
   1e0f0:	push	{r4, lr}
   1e0f4:	ldr	r1, [pc, #4]	; 1e100 <__flatcc_fb_gen_c_verifier@@Base+0x51c>
   1e0f8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e0fc:	pop	{r4, pc}
   1e100:	andeq	lr, r4, r4, ror #2
   1e104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e108:	sub	sp, sp, #44	; 0x2c
   1e10c:	mov	r4, r0
   1e110:	mov	r7, r1
   1e114:	mov	r6, r2
   1e118:	mov	r8, r3
   1e11c:	ldr	r9, [sp, #84]	; 0x54
   1e120:	mov	r0, #0
   1e124:	mov	r1, #0
   1e128:	strd	r0, [sp, #32]
   1e12c:	add	r3, sp, #40	; 0x28
   1e130:	strd	r0, [r3, #-16]!
   1e134:	sub	r5, r8, r2
   1e138:	add	r5, r5, #1
   1e13c:	add	r5, r5, r5, lsr #31
   1e140:	add	r5, r2, r5, asr #1
   1e144:	lsl	fp, r5, #4
   1e148:	ldr	r0, [r7]
   1e14c:	add	r2, sp, #16
   1e150:	str	r2, [sp, #4]
   1e154:	add	r2, sp, #20
   1e158:	str	r2, [sp]
   1e15c:	add	r2, sp, #32
   1e160:	ldr	r1, [sp, #80]	; 0x50
   1e164:	add	r0, r0, fp
   1e168:	bl	1df0c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   1e16c:	mov	sl, r0
   1e170:	cmp	r0, #8
   1e174:	beq	1e260 <__flatcc_fb_gen_c_verifier@@Base+0x67c>
   1e178:	ldr	r3, [sp, #20]
   1e17c:	str	r3, [sp, #12]
   1e180:	ldr	r3, [sp, #16]
   1e184:	str	r3, [sp, #8]
   1e188:	ldrd	r2, [sp, #32]
   1e18c:	strd	r2, [sp]
   1e190:	ldrd	r2, [sp, #24]
   1e194:	ldr	r1, [pc, #660]	; 1e430 <__flatcc_fb_gen_c_verifier@@Base+0x84c>
   1e198:	mov	r0, r4
   1e19c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e1a0:	ldr	r3, [r4, #220]	; 0xdc
   1e1a4:	add	r3, r3, #1
   1e1a8:	str	r3, [r4, #220]	; 0xdc
   1e1ac:	cmp	r6, r5
   1e1b0:	beq	1e290 <__flatcc_fb_gen_c_verifier@@Base+0x6ac>
   1e1b4:	cmp	r8, r5
   1e1b8:	beq	1e384 <__flatcc_fb_gen_c_verifier@@Base+0x7a0>
   1e1bc:	str	r9, [sp, #4]
   1e1c0:	ldr	r3, [sp, #80]	; 0x50
   1e1c4:	str	r3, [sp]
   1e1c8:	mov	r3, r8
   1e1cc:	mov	r2, r5
   1e1d0:	mov	r1, r7
   1e1d4:	mov	r0, r4
   1e1d8:	bl	1e104 <__flatcc_fb_gen_c_verifier@@Base+0x520>
   1e1dc:	ldr	r3, [r4, #220]	; 0xdc
   1e1e0:	cmp	r3, #0
   1e1e4:	beq	1e408 <__flatcc_fb_gen_c_verifier@@Base+0x824>
   1e1e8:	sub	r3, r3, #1
   1e1ec:	str	r3, [r4, #220]	; 0xdc
   1e1f0:	ldr	r3, [sp, #20]
   1e1f4:	ldr	r2, [sp, #16]
   1e1f8:	ldr	r1, [pc, #564]	; 1e434 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   1e1fc:	mov	r0, r4
   1e200:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e204:	ldr	r3, [r4, #220]	; 0xdc
   1e208:	add	r3, r3, #1
   1e20c:	str	r3, [r4, #220]	; 0xdc
   1e210:	str	r9, [sp, #4]
   1e214:	ldr	r3, [sp, #80]	; 0x50
   1e218:	str	r3, [sp]
   1e21c:	sub	r3, r5, #1
   1e220:	mov	r2, r6
   1e224:	mov	r1, r7
   1e228:	mov	r0, r4
   1e22c:	bl	1e104 <__flatcc_fb_gen_c_verifier@@Base+0x520>
   1e230:	ldr	r3, [r4, #220]	; 0xdc
   1e234:	cmp	r3, #0
   1e238:	beq	1e41c <__flatcc_fb_gen_c_verifier@@Base+0x838>
   1e23c:	sub	r3, r3, #1
   1e240:	str	r3, [r4, #220]	; 0xdc
   1e244:	ldr	r3, [sp, #20]
   1e248:	ldr	r2, [sp, #16]
   1e24c:	ldr	r1, [pc, #484]	; 1e438 <__flatcc_fb_gen_c_verifier@@Base+0x854>
   1e250:	mov	r0, r4
   1e254:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e258:	add	sp, sp, #44	; 0x2c
   1e25c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e260:	ldr	r3, [sp, #20]
   1e264:	str	r3, [sp, #4]
   1e268:	ldr	r3, [sp, #16]
   1e26c:	str	r3, [sp]
   1e270:	ldrd	r2, [sp, #32]
   1e274:	ldr	r1, [pc, #448]	; 1e43c <__flatcc_fb_gen_c_verifier@@Base+0x858>
   1e278:	mov	r0, r4
   1e27c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e280:	ldr	r3, [r4, #220]	; 0xdc
   1e284:	add	r3, r3, #1
   1e288:	str	r3, [r4, #220]	; 0xdc
   1e28c:	b	1e1ac <__flatcc_fb_gen_c_verifier@@Base+0x5c8>
   1e290:	ldr	r3, [r7]
   1e294:	add	fp, r3, fp
   1e298:	ldr	r3, [fp, #12]
   1e29c:	ldr	r2, [fp, #8]
   1e2a0:	str	sl, [sp]
   1e2a4:	ldr	r5, [r7, #4]
   1e2a8:	ldr	r1, [r7, #12]
   1e2ac:	mov	r0, r4
   1e2b0:	blx	r5
   1e2b4:	cmp	r9, #0
   1e2b8:	ble	1e33c <__flatcc_fb_gen_c_verifier@@Base+0x758>
   1e2bc:	mov	r2, r9
   1e2c0:	ldr	r1, [pc, #376]	; 1e440 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1e2c4:	mov	r0, r4
   1e2c8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e2cc:	ldr	r3, [r4, #220]	; 0xdc
   1e2d0:	cmp	r3, #0
   1e2d4:	beq	1e34c <__flatcc_fb_gen_c_verifier@@Base+0x768>
   1e2d8:	sub	r3, r3, #1
   1e2dc:	str	r3, [r4, #220]	; 0xdc
   1e2e0:	ldr	r1, [pc, #348]	; 1e444 <__flatcc_fb_gen_c_verifier@@Base+0x860>
   1e2e4:	mov	r0, r4
   1e2e8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e2ec:	ldr	r3, [r4, #220]	; 0xdc
   1e2f0:	cmp	r3, #0
   1e2f4:	beq	1e360 <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1e2f8:	sub	r3, r3, #1
   1e2fc:	str	r3, [r4, #220]	; 0xdc
   1e300:	ldr	r3, [sp, #20]
   1e304:	ldr	r2, [sp, #16]
   1e308:	ldr	r1, [pc, #292]	; 1e434 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   1e30c:	mov	r0, r4
   1e310:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e314:	ldr	r3, [r4, #220]	; 0xdc
   1e318:	add	r3, r3, #1
   1e31c:	str	r3, [r4, #220]	; 0xdc
   1e320:	cmp	r9, #0
   1e324:	ble	1e374 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1e328:	mov	r2, r9
   1e32c:	ldr	r1, [pc, #268]	; 1e440 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1e330:	mov	r0, r4
   1e334:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e338:	b	1e230 <__flatcc_fb_gen_c_verifier@@Base+0x64c>
   1e33c:	ldr	r3, [r7, #8]
   1e340:	mov	r0, r4
   1e344:	blx	r3
   1e348:	b	1e2cc <__flatcc_fb_gen_c_verifier@@Base+0x6e8>
   1e34c:	ldr	r3, [pc, #244]	; 1e448 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   1e350:	mov	r2, #888	; 0x378
   1e354:	ldr	r1, [pc, #240]	; 1e44c <__flatcc_fb_gen_c_verifier@@Base+0x868>
   1e358:	ldr	r0, [pc, #240]	; 1e450 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1e35c:	bl	14038 <__assert_fail@plt>
   1e360:	ldr	r3, [pc, #224]	; 1e448 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   1e364:	ldr	r2, [pc, #232]	; 1e454 <__flatcc_fb_gen_c_verifier@@Base+0x870>
   1e368:	ldr	r1, [pc, #220]	; 1e44c <__flatcc_fb_gen_c_verifier@@Base+0x868>
   1e36c:	ldr	r0, [pc, #220]	; 1e450 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1e370:	bl	14038 <__assert_fail@plt>
   1e374:	ldr	r3, [r7, #8]
   1e378:	mov	r0, r4
   1e37c:	blx	r3
   1e380:	b	1e230 <__flatcc_fb_gen_c_verifier@@Base+0x64c>
   1e384:	ldr	r3, [r7]
   1e388:	add	fp, r3, fp
   1e38c:	ldr	r3, [fp, #12]
   1e390:	ldr	r2, [fp, #8]
   1e394:	str	sl, [sp]
   1e398:	ldr	r8, [r7, #4]
   1e39c:	ldr	r1, [r7, #12]
   1e3a0:	mov	r0, r4
   1e3a4:	blx	r8
   1e3a8:	cmp	r9, #0
   1e3ac:	ble	1e3e4 <__flatcc_fb_gen_c_verifier@@Base+0x800>
   1e3b0:	mov	r2, r9
   1e3b4:	ldr	r1, [pc, #132]	; 1e440 <__flatcc_fb_gen_c_verifier@@Base+0x85c>
   1e3b8:	mov	r0, r4
   1e3bc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e3c0:	ldr	r3, [r4, #220]	; 0xdc
   1e3c4:	cmp	r3, #0
   1e3c8:	beq	1e3f4 <__flatcc_fb_gen_c_verifier@@Base+0x810>
   1e3cc:	sub	r3, r3, #1
   1e3d0:	str	r3, [r4, #220]	; 0xdc
   1e3d4:	ldr	r1, [pc, #104]	; 1e444 <__flatcc_fb_gen_c_verifier@@Base+0x860>
   1e3d8:	mov	r0, r4
   1e3dc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e3e0:	b	1e1dc <__flatcc_fb_gen_c_verifier@@Base+0x5f8>
   1e3e4:	ldr	r3, [r7, #8]
   1e3e8:	mov	r0, r4
   1e3ec:	blx	r3
   1e3f0:	b	1e3c0 <__flatcc_fb_gen_c_verifier@@Base+0x7dc>
   1e3f4:	ldr	r3, [pc, #76]	; 1e448 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   1e3f8:	ldr	r2, [pc, #88]	; 1e458 <__flatcc_fb_gen_c_verifier@@Base+0x874>
   1e3fc:	ldr	r1, [pc, #72]	; 1e44c <__flatcc_fb_gen_c_verifier@@Base+0x868>
   1e400:	ldr	r0, [pc, #72]	; 1e450 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1e404:	bl	14038 <__assert_fail@plt>
   1e408:	ldr	r3, [pc, #56]	; 1e448 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   1e40c:	ldr	r2, [pc, #72]	; 1e45c <__flatcc_fb_gen_c_verifier@@Base+0x878>
   1e410:	ldr	r1, [pc, #52]	; 1e44c <__flatcc_fb_gen_c_verifier@@Base+0x868>
   1e414:	ldr	r0, [pc, #52]	; 1e450 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1e418:	bl	14038 <__assert_fail@plt>
   1e41c:	ldr	r3, [pc, #36]	; 1e448 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   1e420:	ldr	r2, [pc, #56]	; 1e460 <__flatcc_fb_gen_c_verifier@@Base+0x87c>
   1e424:	ldr	r1, [pc, #32]	; 1e44c <__flatcc_fb_gen_c_verifier@@Base+0x868>
   1e428:	ldr	r0, [pc, #32]	; 1e450 <__flatcc_fb_gen_c_verifier@@Base+0x86c>
   1e42c:	bl	14038 <__assert_fail@plt>
   1e430:	ldrdeq	lr, [r4], -r4
   1e434:	andeq	lr, r4, r8, ror r2
   1e438:	muleq	r4, r0, r2
   1e43c:			; <UNDEFINED> instruction: 0x0004e1b4
   1e440:	andeq	lr, r4, r0, lsl #4
   1e444:	andeq	lr, r4, r4, ror r2
   1e448:	andeq	sp, r4, r0, asr #31
   1e44c:	andeq	lr, r4, r0, lsl r2
   1e450:	andeq	lr, r4, r8, ror #4
   1e454:	andeq	r0, r0, r9, ror r3
   1e458:	andeq	r0, r0, r7, lsl #7
   1e45c:	andeq	r0, r0, fp, lsl #7
   1e460:	andeq	r0, r0, lr, lsl #7
   1e464:	push	{r4, r5, r6, lr}
   1e468:	sub	sp, sp, #8
   1e46c:	mov	r4, r0
   1e470:	mov	r5, r1
   1e474:	mov	r6, r2
   1e478:	ldr	r2, [sp, #24]
   1e47c:	ldr	r1, [pc, #260]	; 1e588 <__flatcc_fb_gen_c_verifier@@Base+0x9a4>
   1e480:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e484:	ldr	r1, [pc, #256]	; 1e58c <__flatcc_fb_gen_c_verifier@@Base+0x9a8>
   1e488:	mov	r0, r4
   1e48c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e490:	ldr	r3, [r4, #220]	; 0xdc
   1e494:	add	r3, r3, #1
   1e498:	str	r3, [r4, #220]	; 0xdc
   1e49c:	ldr	r3, [r5, #40]	; 0x28
   1e4a0:	sub	r3, r3, #1
   1e4a4:	cmp	r3, #8
   1e4a8:	ldrls	pc, [pc, r3, lsl #2]
   1e4ac:	b	1e538 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1e4b0:	ldrdeq	lr, [r1], -r4
   1e4b4:	ldrdeq	lr, [r1], -r4
   1e4b8:	ldrdeq	lr, [r1], -r4
   1e4bc:	ldrdeq	lr, [r1], -r4
   1e4c0:	ldrdeq	lr, [r1], -r4
   1e4c4:	andeq	lr, r1, r8, lsl r5
   1e4c8:	andeq	lr, r1, r8, lsl r5
   1e4cc:	andeq	lr, r1, r8, lsl r5
   1e4d0:	andeq	lr, r1, r8, lsl r5
   1e4d4:	ldrd	r2, [r6, #48]	; 0x30
   1e4d8:	ldr	r1, [pc, #176]	; 1e590 <__flatcc_fb_gen_c_verifier@@Base+0x9ac>
   1e4dc:	mov	r0, r4
   1e4e0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e4e4:	ldr	r3, [r4, #220]	; 0xdc
   1e4e8:	cmp	r3, #0
   1e4ec:	beq	1e574 <__flatcc_fb_gen_c_verifier@@Base+0x990>
   1e4f0:	sub	r3, r3, #1
   1e4f4:	str	r3, [r4, #220]	; 0xdc
   1e4f8:	ldr	r1, [pc, #148]	; 1e594 <__flatcc_fb_gen_c_verifier@@Base+0x9b0>
   1e4fc:	mov	r0, r4
   1e500:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e504:	ldr	r3, [r4, #220]	; 0xdc
   1e508:	add	r3, r3, #1
   1e50c:	str	r3, [r4, #220]	; 0xdc
   1e510:	add	sp, sp, #8
   1e514:	pop	{r4, r5, r6, pc}
   1e518:	ldrd	r2, [r6, #48]	; 0x30
   1e51c:	cmp	r2, #0
   1e520:	sbcs	r1, r3, #0
   1e524:	ldrlt	r1, [pc, #108]	; 1e598 <__flatcc_fb_gen_c_verifier@@Base+0x9b4>
   1e528:	ldrge	r1, [pc, #96]	; 1e590 <__flatcc_fb_gen_c_verifier@@Base+0x9ac>
   1e52c:	mov	r0, r4
   1e530:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e534:	b	1e4e4 <__flatcc_fb_gen_c_verifier@@Base+0x900>
   1e538:	ldr	r5, [pc, #92]	; 1e59c <__flatcc_fb_gen_c_verifier@@Base+0x9b8>
   1e53c:	ldr	r4, [pc, #92]	; 1e5a0 <__flatcc_fb_gen_c_verifier@@Base+0x9bc>
   1e540:	ldr	r3, [pc, #92]	; 1e5a4 <__flatcc_fb_gen_c_verifier@@Base+0x9c0>
   1e544:	ldr	r0, [r3]
   1e548:	ldr	r3, [pc, #88]	; 1e5a8 <__flatcc_fb_gen_c_verifier@@Base+0x9c4>
   1e54c:	str	r3, [sp]
   1e550:	mov	r3, r5
   1e554:	mov	r2, r4
   1e558:	ldr	r1, [pc, #76]	; 1e5ac <__flatcc_fb_gen_c_verifier@@Base+0x9c8>
   1e55c:	bl	13f84 <fprintf@plt>
   1e560:	ldr	r3, [pc, #72]	; 1e5b0 <__flatcc_fb_gen_c_verifier@@Base+0x9cc>
   1e564:	mov	r2, r5
   1e568:	mov	r1, r4
   1e56c:	ldr	r0, [pc, #64]	; 1e5b4 <__flatcc_fb_gen_c_verifier@@Base+0x9d0>
   1e570:	bl	14038 <__assert_fail@plt>
   1e574:	ldr	r3, [pc, #60]	; 1e5b8 <__flatcc_fb_gen_c_verifier@@Base+0x9d4>
   1e578:	ldr	r2, [pc, #60]	; 1e5bc <__flatcc_fb_gen_c_verifier@@Base+0x9d8>
   1e57c:	ldr	r1, [pc, #28]	; 1e5a0 <__flatcc_fb_gen_c_verifier@@Base+0x9bc>
   1e580:	ldr	r0, [pc, #56]	; 1e5c0 <__flatcc_fb_gen_c_verifier@@Base+0x9dc>
   1e584:	bl	14038 <__assert_fail@plt>
   1e588:	andeq	lr, r4, r0, lsr #5
   1e58c:	strdeq	lr, [r4], -r0
   1e590:	andeq	lr, r4, r4, lsl #6
   1e594:	andeq	lr, r4, r0, lsl #7
   1e598:	andeq	lr, r4, r0, lsr r3
   1e59c:	andeq	r0, r0, r6, asr #5
   1e5a0:	andeq	lr, r4, r0, lsl r2
   1e5a4:	andeq	r6, r6, r8, lsr #1
   1e5a8:	andeq	lr, r4, ip, asr r3
   1e5ac:	andeq	fp, r3, r8, lsr sl
   1e5b0:	ldrdeq	sp, [r4], -r0
   1e5b4:	andeq	r3, r4, r0, ror lr
   1e5b8:	andeq	sp, r4, r8, ror #31
   1e5bc:	andeq	r0, r0, pc, asr #5
   1e5c0:	andeq	lr, r4, r8, ror #4
   1e5c4:	push	{r4, lr}
   1e5c8:	sub	sp, sp, #208	; 0xd0
   1e5cc:	mov	r4, r0
   1e5d0:	mov	r0, r1
   1e5d4:	add	r1, sp, #4
   1e5d8:	bl	151d0 <__flatcc_fb_copy_scope@@Base>
   1e5dc:	ldr	r2, [r4, #208]	; 0xd0
   1e5e0:	add	r3, sp, #4
   1e5e4:	ldr	r2, [r2, #160]	; 0xa0
   1e5e8:	ldr	r1, [pc, #24]	; 1e608 <__flatcc_fb_gen_c_verifier@@Base+0xa24>
   1e5ec:	mov	r0, r4
   1e5f0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e5f4:	ldr	r1, [pc, #16]	; 1e60c <__flatcc_fb_gen_c_verifier@@Base+0xa28>
   1e5f8:	mov	r0, r4
   1e5fc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e600:	add	sp, sp, #208	; 0xd0
   1e604:	pop	{r4, pc}
   1e608:	andeq	lr, r4, ip, lsl #7
   1e60c:	strdeq	lr, [r4], -r8
   1e610:	push	{r4, r5, lr}
   1e614:	sub	sp, sp, #228	; 0xe4
   1e618:	mov	r4, r0
   1e61c:	mov	r5, r2
   1e620:	ldr	r2, [sp, #240]	; 0xf0
   1e624:	ldr	r1, [pc, #184]	; 1e6e4 <__flatcc_fb_gen_c_verifier@@Base+0xb00>
   1e628:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e62c:	ldr	r1, [pc, #180]	; 1e6e8 <__flatcc_fb_gen_c_verifier@@Base+0xb04>
   1e630:	mov	r0, r4
   1e634:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e638:	ldr	r3, [r4, #220]	; 0xdc
   1e63c:	add	r3, r3, #1
   1e640:	str	r3, [r4, #220]	; 0xdc
   1e644:	ldrh	r3, [r5, #8]
   1e648:	sub	r3, r3, #3
   1e64c:	uxth	r3, r3
   1e650:	cmp	r3, #1
   1e654:	bhi	1e6bc <__flatcc_fb_gen_c_verifier@@Base+0xad8>
   1e658:	mov	r2, #220	; 0xdc
   1e65c:	mov	r1, #0
   1e660:	add	r0, sp, #4
   1e664:	bl	13f9c <memset@plt>
   1e668:	add	r2, sp, #4
   1e66c:	mov	r1, r5
   1e670:	ldr	r0, [r5, #12]
   1e674:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1e678:	add	r2, sp, #4
   1e67c:	ldr	r1, [pc, #104]	; 1e6ec <__flatcc_fb_gen_c_verifier@@Base+0xb08>
   1e680:	mov	r0, r4
   1e684:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e688:	ldr	r3, [r4, #220]	; 0xdc
   1e68c:	cmp	r3, #0
   1e690:	beq	1e6d0 <__flatcc_fb_gen_c_verifier@@Base+0xaec>
   1e694:	sub	r3, r3, #1
   1e698:	str	r3, [r4, #220]	; 0xdc
   1e69c:	ldr	r1, [pc, #76]	; 1e6f0 <__flatcc_fb_gen_c_verifier@@Base+0xb0c>
   1e6a0:	mov	r0, r4
   1e6a4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e6a8:	ldr	r3, [r4, #220]	; 0xdc
   1e6ac:	add	r3, r3, #1
   1e6b0:	str	r3, [r4, #220]	; 0xdc
   1e6b4:	add	sp, sp, #228	; 0xe4
   1e6b8:	pop	{r4, r5, pc}
   1e6bc:	ldr	r3, [pc, #48]	; 1e6f4 <__flatcc_fb_gen_c_verifier@@Base+0xb10>
   1e6c0:	ldr	r2, [pc, #48]	; 1e6f8 <__flatcc_fb_gen_c_verifier@@Base+0xb14>
   1e6c4:	ldr	r1, [pc, #48]	; 1e6fc <__flatcc_fb_gen_c_verifier@@Base+0xb18>
   1e6c8:	ldr	r0, [pc, #48]	; 1e700 <__flatcc_fb_gen_c_verifier@@Base+0xb1c>
   1e6cc:	bl	14038 <__assert_fail@plt>
   1e6d0:	ldr	r3, [pc, #44]	; 1e704 <__flatcc_fb_gen_c_verifier@@Base+0xb20>
   1e6d4:	ldr	r2, [pc, #44]	; 1e708 <__flatcc_fb_gen_c_verifier@@Base+0xb24>
   1e6d8:	ldr	r1, [pc, #28]	; 1e6fc <__flatcc_fb_gen_c_verifier@@Base+0xb18>
   1e6dc:	ldr	r0, [pc, #40]	; 1e70c <__flatcc_fb_gen_c_verifier@@Base+0xb28>
   1e6e0:	bl	14038 <__assert_fail@plt>
   1e6e4:	andeq	lr, r4, ip, lsr #8
   1e6e8:	strdeq	lr, [r4], -r0
   1e6ec:	andeq	lr, r4, r0, ror r4
   1e6f0:	andeq	lr, r4, r0, lsl #7
   1e6f4:	strdeq	sp, [r4], -r8
   1e6f8:	ldrdeq	r0, [r0], -r9
   1e6fc:	andeq	lr, r4, r0, lsl r2
   1e700:	andeq	fp, r3, ip, lsl #19
   1e704:	andeq	lr, r4, r0, lsl r0
   1e708:	andeq	r0, r0, r6, ror #5
   1e70c:	andeq	lr, r4, r8, ror #4
   1e710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e714:	sub	sp, sp, #452	; 0x1c4
   1e718:	mov	r4, r0
   1e71c:	mov	r5, r1
   1e720:	mov	r6, #220	; 0xdc
   1e724:	mov	r2, r6
   1e728:	mov	r1, #0
   1e72c:	add	r0, sp, #228	; 0xe4
   1e730:	bl	13f9c <memset@plt>
   1e734:	mov	r2, r6
   1e738:	mov	r1, #0
   1e73c:	add	r0, sp, #8
   1e740:	bl	13f9c <memset@plt>
   1e744:	add	r2, sp, #228	; 0xe4
   1e748:	mov	r1, r5
   1e74c:	ldr	r0, [r5, #12]
   1e750:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1e754:	add	r2, sp, #228	; 0xe4
   1e758:	ldr	r1, [pc, #1044]	; 1eb74 <__flatcc_fb_gen_c_verifier@@Base+0xf90>
   1e75c:	mov	r0, r4
   1e760:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e764:	ldr	r1, [pc, #1036]	; 1eb78 <__flatcc_fb_gen_c_verifier@@Base+0xf94>
   1e768:	mov	r0, r4
   1e76c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e770:	ldr	r3, [r4, #220]	; 0xdc
   1e774:	add	r3, r3, #1
   1e778:	str	r3, [r4, #220]	; 0xdc
   1e77c:	ldr	r1, [pc, #1016]	; 1eb7c <__flatcc_fb_gen_c_verifier@@Base+0xf98>
   1e780:	mov	r0, r4
   1e784:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e788:	ldr	r1, [pc, #1008]	; 1eb80 <__flatcc_fb_gen_c_verifier@@Base+0xf9c>
   1e78c:	mov	r0, r4
   1e790:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e794:	ldr	r1, [pc, #1000]	; 1eb84 <__flatcc_fb_gen_c_verifier@@Base+0xfa0>
   1e798:	mov	r0, r4
   1e79c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e7a0:	ldr	r1, [pc, #992]	; 1eb88 <__flatcc_fb_gen_c_verifier@@Base+0xfa4>
   1e7a4:	mov	r0, r4
   1e7a8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e7ac:	ldr	r3, [r4, #220]	; 0xdc
   1e7b0:	add	r3, r3, #1
   1e7b4:	str	r3, [r4, #220]	; 0xdc
   1e7b8:	ldr	r1, [pc, #972]	; 1eb8c <__flatcc_fb_gen_c_verifier@@Base+0xfa8>
   1e7bc:	mov	r0, r4
   1e7c0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e7c4:	ldr	r3, [r4, #220]	; 0xdc
   1e7c8:	cmp	r3, #0
   1e7cc:	beq	1e7f8 <__flatcc_fb_gen_c_verifier@@Base+0xc14>
   1e7d0:	sub	r3, r3, #1
   1e7d4:	str	r3, [r4, #220]	; 0xdc
   1e7d8:	ldr	r5, [r5, #20]
   1e7dc:	cmp	r5, #0
   1e7e0:	beq	1e9c8 <__flatcc_fb_gen_c_verifier@@Base+0xde4>
   1e7e4:	ldr	r8, [pc, #932]	; 1eb90 <__flatcc_fb_gen_c_verifier@@Base+0xfac>
   1e7e8:	ldr	r9, [pc, #932]	; 1eb94 <__flatcc_fb_gen_c_verifier@@Base+0xfb0>
   1e7ec:	ldr	fp, [pc, #932]	; 1eb98 <__flatcc_fb_gen_c_verifier@@Base+0xfb4>
   1e7f0:	ldr	sl, [pc, #932]	; 1eb9c <__flatcc_fb_gen_c_verifier@@Base+0xfb8>
   1e7f4:	b	1e950 <__flatcc_fb_gen_c_verifier@@Base+0xd6c>
   1e7f8:	ldr	r3, [pc, #928]	; 1eba0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1e7fc:	ldr	r2, [pc, #928]	; 1eba4 <__flatcc_fb_gen_c_verifier@@Base+0xfc0>
   1e800:	ldr	r1, [pc, #928]	; 1eba8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1e804:	ldr	r0, [pc, #928]	; 1ebac <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1e808:	bl	14038 <__assert_fail@plt>
   1e80c:	ldr	r3, [r5, #16]
   1e810:	add	r2, sp, #8
   1e814:	mov	r1, r3
   1e818:	ldr	r0, [r3, #12]
   1e81c:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1e820:	ldr	r2, [r5, #48]	; 0x30
   1e824:	str	r7, [sp]
   1e828:	mov	r3, r6
   1e82c:	mov	r1, r8
   1e830:	mov	r0, r4
   1e834:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e838:	ldr	r3, [r4, #220]	; 0xdc
   1e83c:	add	r3, r3, #1
   1e840:	str	r3, [r4, #220]	; 0xdc
   1e844:	ldr	r3, [r5, #16]
   1e848:	ldrh	r3, [r3, #8]
   1e84c:	cmp	r3, #0
   1e850:	beq	1e898 <__flatcc_fb_gen_c_verifier@@Base+0xcb4>
   1e854:	cmp	r3, #1
   1e858:	beq	1e8cc <__flatcc_fb_gen_c_verifier@@Base+0xce8>
   1e85c:	ldr	r5, [pc, #844]	; 1ebb0 <__flatcc_fb_gen_c_verifier@@Base+0xfcc>
   1e860:	ldr	r4, [pc, #832]	; 1eba8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1e864:	ldr	r3, [pc, #840]	; 1ebb4 <__flatcc_fb_gen_c_verifier@@Base+0xfd0>
   1e868:	ldr	r0, [r3]
   1e86c:	ldr	r3, [pc, #836]	; 1ebb8 <__flatcc_fb_gen_c_verifier@@Base+0xfd4>
   1e870:	str	r3, [sp]
   1e874:	mov	r3, r5
   1e878:	mov	r2, r4
   1e87c:	ldr	r1, [pc, #824]	; 1ebbc <__flatcc_fb_gen_c_verifier@@Base+0xfd8>
   1e880:	bl	13f84 <fprintf@plt>
   1e884:	ldr	r3, [pc, #788]	; 1eba0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1e888:	mov	r2, r5
   1e88c:	mov	r1, r4
   1e890:	ldr	r0, [pc, #808]	; 1ebc0 <__flatcc_fb_gen_c_verifier@@Base+0xfdc>
   1e894:	bl	14038 <__assert_fail@plt>
   1e898:	add	r2, sp, #8
   1e89c:	mov	r1, fp
   1e8a0:	mov	r0, r4
   1e8a4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e8a8:	mov	r1, r9
   1e8ac:	mov	r0, r4
   1e8b0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e8b4:	ldr	r3, [r4, #220]	; 0xdc
   1e8b8:	cmp	r3, #0
   1e8bc:	beq	1e8e0 <__flatcc_fb_gen_c_verifier@@Base+0xcfc>
   1e8c0:	sub	r3, r3, #1
   1e8c4:	str	r3, [r4, #220]	; 0xdc
   1e8c8:	b	1e944 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
   1e8cc:	add	r2, sp, #8
   1e8d0:	ldr	r1, [pc, #748]	; 1ebc4 <__flatcc_fb_gen_c_verifier@@Base+0xfe0>
   1e8d4:	mov	r0, r4
   1e8d8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e8dc:	b	1e8a8 <__flatcc_fb_gen_c_verifier@@Base+0xcc4>
   1e8e0:	ldr	r3, [pc, #696]	; 1eba0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1e8e4:	ldr	r2, [pc, #732]	; 1ebc8 <__flatcc_fb_gen_c_verifier@@Base+0xfe4>
   1e8e8:	ldr	r1, [pc, #696]	; 1eba8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1e8ec:	ldr	r0, [pc, #696]	; 1ebac <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1e8f0:	bl	14038 <__assert_fail@plt>
   1e8f4:	ldr	r2, [r5, #48]	; 0x30
   1e8f8:	str	r7, [sp]
   1e8fc:	mov	r3, r6
   1e900:	mov	r1, r8
   1e904:	mov	r0, r4
   1e908:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e90c:	ldr	r3, [r4, #220]	; 0xdc
   1e910:	add	r3, r3, #1
   1e914:	str	r3, [r4, #220]	; 0xdc
   1e918:	mov	r1, sl
   1e91c:	mov	r0, r4
   1e920:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e924:	mov	r1, r9
   1e928:	mov	r0, r4
   1e92c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e930:	ldr	r3, [r4, #220]	; 0xdc
   1e934:	cmp	r3, #0
   1e938:	beq	1e9b4 <__flatcc_fb_gen_c_verifier@@Base+0xdd0>
   1e93c:	sub	r3, r3, #1
   1e940:	str	r3, [r4, #220]	; 0xdc
   1e944:	ldr	r5, [r5]
   1e948:	cmp	r5, #0
   1e94c:	beq	1e9c8 <__flatcc_fb_gen_c_verifier@@Base+0xde4>
   1e950:	ldr	r3, [r5, #4]
   1e954:	ldr	r6, [r3, #4]
   1e958:	ldr	r7, [r3]
   1e95c:	ldrh	r3, [r5, #24]
   1e960:	cmp	r3, #10
   1e964:	beq	1e8f4 <__flatcc_fb_gen_c_verifier@@Base+0xd10>
   1e968:	cmp	r3, #14
   1e96c:	beq	1e80c <__flatcc_fb_gen_c_verifier@@Base+0xc28>
   1e970:	cmp	r3, #0
   1e974:	beq	1e944 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
   1e978:	ldr	r5, [pc, #588]	; 1ebcc <__flatcc_fb_gen_c_verifier@@Base+0xfe8>
   1e97c:	ldr	r4, [pc, #548]	; 1eba8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1e980:	ldr	r3, [pc, #556]	; 1ebb4 <__flatcc_fb_gen_c_verifier@@Base+0xfd0>
   1e984:	ldr	r0, [r3]
   1e988:	ldr	r3, [pc, #576]	; 1ebd0 <__flatcc_fb_gen_c_verifier@@Base+0xfec>
   1e98c:	str	r3, [sp]
   1e990:	mov	r3, r5
   1e994:	mov	r2, r4
   1e998:	ldr	r1, [pc, #540]	; 1ebbc <__flatcc_fb_gen_c_verifier@@Base+0xfd8>
   1e99c:	bl	13f84 <fprintf@plt>
   1e9a0:	ldr	r3, [pc, #504]	; 1eba0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1e9a4:	mov	r2, r5
   1e9a8:	mov	r1, r4
   1e9ac:	ldr	r0, [pc, #524]	; 1ebc0 <__flatcc_fb_gen_c_verifier@@Base+0xfdc>
   1e9b0:	bl	14038 <__assert_fail@plt>
   1e9b4:	ldr	r3, [pc, #484]	; 1eba0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1e9b8:	ldr	r2, [pc, #532]	; 1ebd4 <__flatcc_fb_gen_c_verifier@@Base+0xff0>
   1e9bc:	ldr	r1, [pc, #484]	; 1eba8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1e9c0:	ldr	r0, [pc, #484]	; 1ebac <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1e9c4:	bl	14038 <__assert_fail@plt>
   1e9c8:	ldr	r1, [pc, #520]	; 1ebd8 <__flatcc_fb_gen_c_verifier@@Base+0xff4>
   1e9cc:	mov	r0, r4
   1e9d0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e9d4:	ldr	r3, [r4, #220]	; 0xdc
   1e9d8:	add	r3, r3, #1
   1e9dc:	str	r3, [r4, #220]	; 0xdc
   1e9e0:	ldr	r1, [pc, #500]	; 1ebdc <__flatcc_fb_gen_c_verifier@@Base+0xff8>
   1e9e4:	mov	r0, r4
   1e9e8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1e9ec:	ldr	r3, [r4, #220]	; 0xdc
   1e9f0:	add	r3, r3, #1
   1e9f4:	str	r3, [r4, #220]	; 0xdc
   1e9f8:	ldr	r1, [pc, #480]	; 1ebe0 <__flatcc_fb_gen_c_verifier@@Base+0xffc>
   1e9fc:	mov	r0, r4
   1ea00:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ea04:	ldr	r3, [r4, #220]	; 0xdc
   1ea08:	cmp	r3, #0
   1ea0c:	beq	1eb10 <__flatcc_fb_gen_c_verifier@@Base+0xf2c>
   1ea10:	sub	r3, r3, #1
   1ea14:	str	r3, [r4, #220]	; 0xdc
   1ea18:	ldr	r1, [pc, #452]	; 1ebe4 <__flatcc_fb_gen_c_verifier@@Base+0x1000>
   1ea1c:	mov	r0, r4
   1ea20:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ea24:	ldr	r3, [r4, #220]	; 0xdc
   1ea28:	add	r3, r3, #1
   1ea2c:	str	r3, [r4, #220]	; 0xdc
   1ea30:	ldr	r1, [pc, #432]	; 1ebe8 <__flatcc_fb_gen_c_verifier@@Base+0x1004>
   1ea34:	mov	r0, r4
   1ea38:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ea3c:	ldr	r3, [r4, #220]	; 0xdc
   1ea40:	cmp	r3, #0
   1ea44:	beq	1eb24 <__flatcc_fb_gen_c_verifier@@Base+0xf40>
   1ea48:	sub	r3, r3, #1
   1ea4c:	str	r3, [r4, #220]	; 0xdc
   1ea50:	ldr	r1, [pc, #404]	; 1ebec <__flatcc_fb_gen_c_verifier@@Base+0x1008>
   1ea54:	mov	r0, r4
   1ea58:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ea5c:	ldr	r3, [r4, #220]	; 0xdc
   1ea60:	cmp	r3, #0
   1ea64:	beq	1eb38 <__flatcc_fb_gen_c_verifier@@Base+0xf54>
   1ea68:	sub	r3, r3, #1
   1ea6c:	str	r3, [r4, #220]	; 0xdc
   1ea70:	ldr	r1, [pc, #372]	; 1ebec <__flatcc_fb_gen_c_verifier@@Base+0x1008>
   1ea74:	mov	r0, r4
   1ea78:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ea7c:	ldr	r1, [pc, #364]	; 1ebf0 <__flatcc_fb_gen_c_verifier@@Base+0x100c>
   1ea80:	mov	r0, r4
   1ea84:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ea88:	ldr	r1, [pc, #356]	; 1ebf4 <__flatcc_fb_gen_c_verifier@@Base+0x1010>
   1ea8c:	mov	r0, r4
   1ea90:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ea94:	ldr	r3, [r4, #220]	; 0xdc
   1ea98:	add	r3, r3, #1
   1ea9c:	str	r3, [r4, #220]	; 0xdc
   1eaa0:	ldr	r1, [pc, #336]	; 1ebf8 <__flatcc_fb_gen_c_verifier@@Base+0x1014>
   1eaa4:	mov	r0, r4
   1eaa8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1eaac:	ldr	r3, [r4, #220]	; 0xdc
   1eab0:	cmp	r3, #0
   1eab4:	beq	1eb4c <__flatcc_fb_gen_c_verifier@@Base+0xf68>
   1eab8:	sub	r3, r3, #1
   1eabc:	str	r3, [r4, #220]	; 0xdc
   1eac0:	ldr	r1, [pc, #292]	; 1ebec <__flatcc_fb_gen_c_verifier@@Base+0x1008>
   1eac4:	mov	r0, r4
   1eac8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1eacc:	ldr	r1, [pc, #296]	; 1ebfc <__flatcc_fb_gen_c_verifier@@Base+0x1018>
   1ead0:	mov	r0, r4
   1ead4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ead8:	ldr	r3, [r4, #220]	; 0xdc
   1eadc:	cmp	r3, #0
   1eae0:	beq	1eb60 <__flatcc_fb_gen_c_verifier@@Base+0xf7c>
   1eae4:	sub	r3, r3, #1
   1eae8:	str	r3, [r4, #220]	; 0xdc
   1eaec:	ldr	r1, [pc, #248]	; 1ebec <__flatcc_fb_gen_c_verifier@@Base+0x1008>
   1eaf0:	mov	r0, r4
   1eaf4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1eaf8:	ldr	r1, [pc, #124]	; 1eb7c <__flatcc_fb_gen_c_verifier@@Base+0xf98>
   1eafc:	mov	r0, r4
   1eb00:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1eb04:	mov	r0, #0
   1eb08:	add	sp, sp, #452	; 0x1c4
   1eb0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eb10:	ldr	r3, [pc, #136]	; 1eba0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1eb14:	ldr	r2, [pc, #228]	; 1ec00 <__flatcc_fb_gen_c_verifier@@Base+0x101c>
   1eb18:	ldr	r1, [pc, #136]	; 1eba8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1eb1c:	ldr	r0, [pc, #136]	; 1ebac <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1eb20:	bl	14038 <__assert_fail@plt>
   1eb24:	ldr	r3, [pc, #116]	; 1eba0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1eb28:	ldr	r2, [pc, #212]	; 1ec04 <__flatcc_fb_gen_c_verifier@@Base+0x1020>
   1eb2c:	ldr	r1, [pc, #116]	; 1eba8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1eb30:	ldr	r0, [pc, #116]	; 1ebac <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1eb34:	bl	14038 <__assert_fail@plt>
   1eb38:	ldr	r3, [pc, #96]	; 1eba0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1eb3c:	ldr	r2, [pc, #196]	; 1ec08 <__flatcc_fb_gen_c_verifier@@Base+0x1024>
   1eb40:	ldr	r1, [pc, #96]	; 1eba8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1eb44:	ldr	r0, [pc, #96]	; 1ebac <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1eb48:	bl	14038 <__assert_fail@plt>
   1eb4c:	ldr	r3, [pc, #76]	; 1eba0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1eb50:	ldr	r2, [pc, #180]	; 1ec0c <__flatcc_fb_gen_c_verifier@@Base+0x1028>
   1eb54:	ldr	r1, [pc, #76]	; 1eba8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1eb58:	ldr	r0, [pc, #76]	; 1ebac <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1eb5c:	bl	14038 <__assert_fail@plt>
   1eb60:	ldr	r3, [pc, #56]	; 1eba0 <__flatcc_fb_gen_c_verifier@@Base+0xfbc>
   1eb64:	mov	r2, #1552	; 0x610
   1eb68:	ldr	r1, [pc, #56]	; 1eba8 <__flatcc_fb_gen_c_verifier@@Base+0xfc4>
   1eb6c:	ldr	r0, [pc, #56]	; 1ebac <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1eb70:	bl	14038 <__assert_fail@plt>
   1eb74:			; <UNDEFINED> instruction: 0x0004e4b8
   1eb78:	andeq	r0, r5, r0, asr lr
   1eb7c:	andeq	r5, r4, r0, lsr #2
   1eb80:	andeq	lr, r4, r8, asr #10
   1eb84:	andeq	lr, r4, r8, asr r5
   1eb88:	andeq	lr, r4, r8, ror #10
   1eb8c:	andeq	lr, r4, ip, ror r5
   1eb90:	andeq	lr, r4, ip, lsr #11
   1eb94:	andeq	lr, r4, r0, ror #12
   1eb98:	andeq	lr, r4, r0, asr #11
   1eb9c:	andeq	lr, r4, r8, ror #12
   1eba0:	andeq	lr, r4, r0, lsr #32
   1eba4:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1eba8:	andeq	lr, r4, r0, lsl r2
   1ebac:	andeq	lr, r4, r8, ror #4
   1ebb0:	strdeq	r0, [r0], -r2
   1ebb4:	andeq	r6, r6, r8, lsr #1
   1ebb8:	andeq	lr, r4, r8, lsr #12
   1ebbc:	andeq	fp, r3, r8, lsr sl
   1ebc0:	andeq	r3, r4, r0, ror lr
   1ebc4:	strdeq	lr, [r4], -r4
   1ebc8:	strdeq	r0, [r0], -r6
   1ebcc:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1ebd0:	andeq	lr, r4, r8, lsr #13
   1ebd4:	strdeq	r0, [r0], -ip
   1ebd8:	ldrdeq	lr, [r4], -r8
   1ebdc:	andeq	lr, r4, r4, ror #13
   1ebe0:	andeq	lr, r4, r0, lsr #14
   1ebe4:	andeq	lr, r4, r0, lsl #7
   1ebe8:	andeq	lr, r4, ip, ror r7
   1ebec:	andeq	lr, r4, r4, ror r2
   1ebf0:			; <UNDEFINED> instruction: 0x0004e7b4
   1ebf4:	ldrdeq	lr, [r4], -r0
   1ebf8:	andeq	lr, r4, r0, ror #15
   1ebfc:	andeq	lr, r4, r4, asr #15
   1ec00:	andeq	r0, r0, r7, lsl #12
   1ec04:	andeq	r0, r0, r9, lsl #12
   1ec08:	andeq	r0, r0, sl, lsl #12
   1ec0c:	andeq	r0, r0, lr, lsl #12
   1ec10:	push	{r4, r5, r6, r7, lr}
   1ec14:	sub	sp, sp, #452	; 0x1c4
   1ec18:	mov	r5, r0
   1ec1c:	mov	r4, r1
   1ec20:	mov	r6, #220	; 0xdc
   1ec24:	mov	r2, r6
   1ec28:	mov	r1, #0
   1ec2c:	add	r0, sp, #228	; 0xe4
   1ec30:	bl	13f9c <memset@plt>
   1ec34:	mov	r2, r6
   1ec38:	mov	r1, #0
   1ec3c:	add	r0, sp, #8
   1ec40:	bl	13f9c <memset@plt>
   1ec44:	add	r2, sp, #228	; 0xe4
   1ec48:	mov	r1, r4
   1ec4c:	ldr	r0, [r4, #12]
   1ec50:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1ec54:	add	r2, sp, #228	; 0xe4
   1ec58:	ldr	r1, [pc, #280]	; 1ed78 <__flatcc_fb_gen_c_verifier@@Base+0x1194>
   1ec5c:	mov	r0, r5
   1ec60:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ec64:	ldr	r1, [pc, #272]	; 1ed7c <__flatcc_fb_gen_c_verifier@@Base+0x1198>
   1ec68:	mov	r0, r5
   1ec6c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ec70:	ldr	r3, [r5, #220]	; 0xdc
   1ec74:	add	r3, r3, #1
   1ec78:	str	r3, [r5, #220]	; 0xdc
   1ec7c:	ldr	r1, [pc, #252]	; 1ed80 <__flatcc_fb_gen_c_verifier@@Base+0x119c>
   1ec80:	mov	r0, r5
   1ec84:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ec88:	ldr	r4, [r4, #20]
   1ec8c:	cmp	r4, #0
   1ec90:	beq	1ece8 <__flatcc_fb_gen_c_verifier@@Base+0x1104>
   1ec94:	ldr	r7, [pc, #232]	; 1ed84 <__flatcc_fb_gen_c_verifier@@Base+0x11a0>
   1ec98:	ldr	r6, [pc, #232]	; 1ed88 <__flatcc_fb_gen_c_verifier@@Base+0x11a4>
   1ec9c:	b	1eccc <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1eca0:	ldr	r1, [r4, #4]
   1eca4:	ldr	r3, [r1, #4]
   1eca8:	ldr	r2, [r4, #48]	; 0x30
   1ecac:	ldr	r1, [r1]
   1ecb0:	str	r1, [sp]
   1ecb4:	mov	r1, r6
   1ecb8:	mov	r0, r5
   1ecbc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ecc0:	ldr	r4, [r4]
   1ecc4:	cmp	r4, #0
   1ecc8:	beq	1ece8 <__flatcc_fb_gen_c_verifier@@Base+0x1104>
   1eccc:	ldrh	r3, [r4, #24]
   1ecd0:	cmp	r3, #0
   1ecd4:	bne	1eca0 <__flatcc_fb_gen_c_verifier@@Base+0x10bc>
   1ecd8:	mov	r1, r7
   1ecdc:	mov	r0, r5
   1ece0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ece4:	b	1ecc0 <__flatcc_fb_gen_c_verifier@@Base+0x10dc>
   1ece8:	ldr	r1, [pc, #156]	; 1ed8c <__flatcc_fb_gen_c_verifier@@Base+0x11a8>
   1ecec:	mov	r0, r5
   1ecf0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ecf4:	ldr	r3, [r5, #220]	; 0xdc
   1ecf8:	add	r2, r3, #1
   1ecfc:	str	r2, [r5, #220]	; 0xdc
   1ed00:	cmp	r2, #0
   1ed04:	beq	1ed50 <__flatcc_fb_gen_c_verifier@@Base+0x116c>
   1ed08:	str	r3, [r5, #220]	; 0xdc
   1ed0c:	ldr	r1, [pc, #124]	; 1ed90 <__flatcc_fb_gen_c_verifier@@Base+0x11ac>
   1ed10:	mov	r0, r5
   1ed14:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ed18:	ldr	r3, [r5, #220]	; 0xdc
   1ed1c:	cmp	r3, #0
   1ed20:	beq	1ed64 <__flatcc_fb_gen_c_verifier@@Base+0x1180>
   1ed24:	sub	r3, r3, #1
   1ed28:	str	r3, [r5, #220]	; 0xdc
   1ed2c:	ldr	r1, [pc, #92]	; 1ed90 <__flatcc_fb_gen_c_verifier@@Base+0x11ac>
   1ed30:	mov	r0, r5
   1ed34:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ed38:	ldr	r1, [pc, #84]	; 1ed94 <__flatcc_fb_gen_c_verifier@@Base+0x11b0>
   1ed3c:	mov	r0, r5
   1ed40:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1ed44:	mov	r0, #0
   1ed48:	add	sp, sp, #452	; 0x1c4
   1ed4c:	pop	{r4, r5, r6, r7, pc}
   1ed50:	ldr	r3, [pc, #64]	; 1ed98 <__flatcc_fb_gen_c_verifier@@Base+0x11b4>
   1ed54:	ldr	r2, [pc, #64]	; 1ed9c <__flatcc_fb_gen_c_verifier@@Base+0x11b8>
   1ed58:	ldr	r1, [pc, #64]	; 1eda0 <__flatcc_fb_gen_c_verifier@@Base+0x11bc>
   1ed5c:	ldr	r0, [pc, #64]	; 1eda4 <__flatcc_fb_gen_c_verifier@@Base+0x11c0>
   1ed60:	bl	14038 <__assert_fail@plt>
   1ed64:	ldr	r3, [pc, #44]	; 1ed98 <__flatcc_fb_gen_c_verifier@@Base+0x11b4>
   1ed68:	ldr	r2, [pc, #56]	; 1eda8 <__flatcc_fb_gen_c_verifier@@Base+0x11c4>
   1ed6c:	ldr	r1, [pc, #44]	; 1eda0 <__flatcc_fb_gen_c_verifier@@Base+0x11bc>
   1ed70:	ldr	r0, [pc, #44]	; 1eda4 <__flatcc_fb_gen_c_verifier@@Base+0x11c0>
   1ed74:	bl	14038 <__assert_fail@plt>
   1ed78:	andeq	lr, r4, r8, lsr r8
   1ed7c:	andeq	r0, r5, r0, asr lr
   1ed80:	andeq	lr, r4, r8, asr r5
   1ed84:	andeq	lr, r4, ip, ror #16
   1ed88:	andeq	lr, r4, ip, lsl #17
   1ed8c:	andeq	lr, r4, ip, lsr #17
   1ed90:	andeq	lr, r4, r4, ror r2
   1ed94:	andeq	r5, r4, r0, lsr #2
   1ed98:	andeq	lr, r4, r4, lsr r0
   1ed9c:	andeq	r0, r0, lr, lsr #12
   1eda0:	andeq	lr, r4, r0, lsl r2
   1eda4:	andeq	lr, r4, r8, ror #4
   1eda8:	andeq	r0, r0, pc, lsr #12
   1edac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1edb0:	sub	sp, sp, #516	; 0x204
   1edb4:	mov	r4, r0
   1edb8:	mov	r5, r1
   1edbc:	mov	sl, r2
   1edc0:	str	r3, [sp, #16]
   1edc4:	mov	r2, #220	; 0xdc
   1edc8:	mov	r1, #0
   1edcc:	add	r0, sp, #292	; 0x124
   1edd0:	bl	13f9c <memset@plt>
   1edd4:	add	r1, sp, #88	; 0x58
   1edd8:	ldr	r0, [r5, #12]
   1eddc:	bl	151d0 <__flatcc_fb_copy_scope@@Base>
   1ede0:	ldrh	r3, [r5, #8]
   1ede4:	str	r3, [sp, #24]
   1ede8:	cmp	r3, #1
   1edec:	movne	r3, #0
   1edf0:	moveq	r3, #1
   1edf4:	str	r3, [sp, #68]	; 0x44
   1edf8:	ldrh	r3, [sl, #24]
   1edfc:	cmp	r3, #9
   1ee00:	beq	1ee48 <__flatcc_fb_gen_c_verifier@@Base+0x1264>
   1ee04:	cmp	r3, #15
   1ee08:	beq	1ee48 <__flatcc_fb_gen_c_verifier@@Base+0x1264>
   1ee0c:	cmp	r3, #7
   1ee10:	beq	1ee48 <__flatcc_fb_gen_c_verifier@@Base+0x1264>
   1ee14:	sub	r3, r3, #7
   1ee18:	cmp	r3, #8
   1ee1c:	ldrls	pc, [pc, r3, lsl #2]
   1ee20:	b	1f0a0 <__flatcc_fb_gen_c_verifier@@Base+0x14bc>
   1ee24:	andeq	lr, r1, r8, ror #31
   1ee28:	andeq	pc, r1, ip
   1ee2c:	ldrdeq	pc, [r1], -r8
   1ee30:	ldrdeq	pc, [r1], -r8
   1ee34:	andeq	pc, r1, r0, lsr #1
   1ee38:	andeq	pc, r1, r0, lsr #1
   1ee3c:	andeq	pc, r1, r0, lsr #1
   1ee40:	andeq	lr, r1, r0, lsl #30
   1ee44:	andeq	lr, r1, r0, lsl #30
   1ee48:	sub	r3, r3, #7
   1ee4c:	cmp	r3, #8
   1ee50:	ldrls	pc, [pc, r3, lsl #2]
   1ee54:	b	1f024 <__flatcc_fb_gen_c_verifier@@Base+0x1440>
   1ee58:	andeq	lr, r1, r4, lsr #30
   1ee5c:	strdeq	lr, [r1], -r4
   1ee60:			; <UNDEFINED> instruction: 0x0001f9b0
   1ee64:			; <UNDEFINED> instruction: 0x0001f9b0
   1ee68:	andeq	pc, r1, r4, lsr #32
   1ee6c:	andeq	pc, r1, r4, lsr #32
   1ee70:	andeq	pc, r1, r4, lsr #32
   1ee74:	andeq	lr, r1, ip, ror lr
   1ee78:	andeq	lr, r1, ip, ror lr
   1ee7c:	mov	r3, #1
   1ee80:	str	r3, [sp, #64]	; 0x40
   1ee84:	ldr	r3, [sl, #16]
   1ee88:	add	r2, sp, #292	; 0x124
   1ee8c:	mov	r1, r3
   1ee90:	ldr	r0, [r3, #12]
   1ee94:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1ee98:	ldr	r1, [sl, #16]
   1ee9c:	ldrh	r2, [r1, #8]
   1eea0:	cmp	r2, #1
   1eea4:	movne	fp, #0
   1eea8:	moveq	fp, #1
   1eeac:	clz	r3, r2
   1eeb0:	lsr	r3, r3, #5
   1eeb4:	str	r3, [sp, #28]
   1eeb8:	ldr	r3, [sp, #16]
   1eebc:	cmp	r3, #0
   1eec0:	cmpeq	r2, #4
   1eec4:	moveq	r3, #1
   1eec8:	movne	r3, #0
   1eecc:	cmp	r2, #3
   1eed0:	beq	1ef0c <__flatcc_fb_gen_c_verifier@@Base+0x1328>
   1eed4:	mov	r2, #0
   1eed8:	str	r2, [sp, #60]	; 0x3c
   1eedc:	mov	r5, r2
   1eee0:	str	r2, [sp, #44]	; 0x2c
   1eee4:	str	r5, [sp, #72]	; 0x48
   1eee8:	mov	r2, #0
   1eeec:	str	r2, [sp, #52]	; 0x34
   1eef0:	str	r2, [sp, #56]	; 0x38
   1eef4:	str	r2, [sp, #48]	; 0x30
   1eef8:	mov	r9, r2
   1eefc:	b	1efac <__flatcc_fb_gen_c_verifier@@Base+0x13c8>
   1ef00:	mov	r3, #0
   1ef04:	str	r3, [sp, #64]	; 0x40
   1ef08:	b	1ee84 <__flatcc_fb_gen_c_verifier@@Base+0x12a0>
   1ef0c:	ldr	r2, [r1, #40]	; 0x28
   1ef10:	str	r2, [sp, #60]	; 0x3c
   1ef14:	mov	r5, #1
   1ef18:	mov	r2, #0
   1ef1c:	str	r2, [sp, #44]	; 0x2c
   1ef20:	b	1eee4 <__flatcc_fb_gen_c_verifier@@Base+0x1300>
   1ef24:	mov	r3, #1
   1ef28:	str	r3, [sp, #64]	; 0x40
   1ef2c:	ldr	r3, [sl, #104]	; 0x68
   1ef30:	adds	r9, r3, #0
   1ef34:	movne	r9, #1
   1ef38:	ldrh	r3, [sl, #72]	; 0x48
   1ef3c:	and	r2, r3, #1024	; 0x400
   1ef40:	str	r2, [sp, #48]	; 0x30
   1ef44:	and	r3, r3, #2048	; 0x800
   1ef48:	str	r3, [sp, #56]	; 0x38
   1ef4c:	ldr	r3, [sl, #16]
   1ef50:	str	r3, [sp, #60]	; 0x3c
   1ef54:	mov	r5, #1
   1ef58:	ldr	r3, [sp, #48]	; 0x30
   1ef5c:	ldr	r2, [sp, #56]	; 0x38
   1ef60:	orrs	r3, r3, r2
   1ef64:	str	r3, [sp, #52]	; 0x34
   1ef68:	beq	1f084 <__flatcc_fb_gen_c_verifier@@Base+0x14a0>
   1ef6c:	ldr	r3, [sp, #64]	; 0x40
   1ef70:	clz	r3, r3
   1ef74:	lsr	r3, r3, #5
   1ef78:	ldr	r2, [sp, #60]	; 0x3c
   1ef7c:	cmp	r2, #4
   1ef80:	orrne	r3, r3, #1
   1ef84:	cmp	r3, #0
   1ef88:	bne	1f048 <__flatcc_fb_gen_c_verifier@@Base+0x1464>
   1ef8c:	mov	r3, #0
   1ef90:	mov	fp, r3
   1ef94:	str	r3, [sp, #28]
   1ef98:	str	r3, [sp, #72]	; 0x48
   1ef9c:	str	r3, [sp, #44]	; 0x2c
   1efa0:	mov	r9, r3
   1efa4:	mov	r5, r3
   1efa8:	str	r3, [sp, #64]	; 0x40
   1efac:	ldr	r2, [sp, #16]
   1efb0:	cmp	r2, #0
   1efb4:	beq	1f9fc <__flatcc_fb_gen_c_verifier@@Base+0x1e18>
   1efb8:	ldr	r2, [sp, #64]	; 0x40
   1efbc:	cmp	r2, #0
   1efc0:	beq	1fa58 <__flatcc_fb_gen_c_verifier@@Base+0x1e74>
   1efc4:	adds	r3, r3, #0
   1efc8:	movne	r3, #1
   1efcc:	str	r3, [sp, #76]	; 0x4c
   1efd0:	mov	r3, #1
   1efd4:	str	r3, [sp, #80]	; 0x50
   1efd8:	mov	r5, #0
   1efdc:	str	r5, [sp, #84]	; 0x54
   1efe0:	mov	r7, r5
   1efe4:	b	1fa40 <__flatcc_fb_gen_c_verifier@@Base+0x1e5c>
   1efe8:	mov	r3, #0
   1efec:	str	r3, [sp, #64]	; 0x40
   1eff0:	b	1ef2c <__flatcc_fb_gen_c_verifier@@Base+0x1348>
   1eff4:	mov	r3, #1
   1eff8:	str	r3, [sp, #64]	; 0x40
   1effc:	mov	r9, #0
   1f000:	str	r9, [sp, #56]	; 0x38
   1f004:	str	r9, [sp, #48]	; 0x30
   1f008:	b	1ef4c <__flatcc_fb_gen_c_verifier@@Base+0x1368>
   1f00c:	mov	r3, #0
   1f010:	str	r3, [sp, #64]	; 0x40
   1f014:	mov	r9, r3
   1f018:	str	r3, [sp, #56]	; 0x38
   1f01c:	str	r3, [sp, #48]	; 0x30
   1f020:	b	1ef4c <__flatcc_fb_gen_c_verifier@@Base+0x1368>
   1f024:	mov	r3, #1
   1f028:	str	r3, [sp, #64]	; 0x40
   1f02c:	mov	r3, #0
   1f030:	str	r3, [sp, #60]	; 0x3c
   1f034:	mov	r9, r3
   1f038:	str	r3, [sp, #56]	; 0x38
   1f03c:	str	r3, [sp, #48]	; 0x30
   1f040:	mov	r5, r3
   1f044:	b	1ef58 <__flatcc_fb_gen_c_verifier@@Base+0x1374>
   1f048:	ldr	r5, [pc, #2804]	; 1fb44 <__flatcc_fb_gen_c_verifier@@Base+0x1f60>
   1f04c:	ldr	r4, [pc, #2804]	; 1fb48 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1f050:	ldr	r3, [pc, #2804]	; 1fb4c <__flatcc_fb_gen_c_verifier@@Base+0x1f68>
   1f054:	str	r3, [sp]
   1f058:	mov	r3, r5
   1f05c:	mov	r2, r4
   1f060:	ldr	r1, [pc, #2792]	; 1fb50 <__flatcc_fb_gen_c_verifier@@Base+0x1f6c>
   1f064:	ldr	r0, [pc, #2792]	; 1fb54 <__flatcc_fb_gen_c_verifier@@Base+0x1f70>
   1f068:	ldr	r0, [r0]
   1f06c:	bl	13f84 <fprintf@plt>
   1f070:	ldr	r3, [pc, #2784]	; 1fb58 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1f074:	mov	r2, r5
   1f078:	mov	r1, r4
   1f07c:	ldr	r0, [pc, #2776]	; 1fb5c <__flatcc_fb_gen_c_verifier@@Base+0x1f78>
   1f080:	bl	14038 <__assert_fail@plt>
   1f084:	ldr	r2, [sp, #52]	; 0x34
   1f088:	mov	r3, r2
   1f08c:	mov	fp, r2
   1f090:	str	r2, [sp, #28]
   1f094:	str	r2, [sp, #72]	; 0x48
   1f098:	str	r2, [sp, #44]	; 0x2c
   1f09c:	b	1efac <__flatcc_fb_gen_c_verifier@@Base+0x13c8>
   1f0a0:	mov	r3, #0
   1f0a4:	str	r3, [sp, #52]	; 0x34
   1f0a8:	str	r3, [sp, #60]	; 0x3c
   1f0ac:	str	r3, [sp, #56]	; 0x38
   1f0b0:	str	r3, [sp, #48]	; 0x30
   1f0b4:	mov	fp, r3
   1f0b8:	str	r3, [sp, #28]
   1f0bc:	str	r3, [sp, #72]	; 0x48
   1f0c0:	str	r3, [sp, #44]	; 0x2c
   1f0c4:	mov	r9, r3
   1f0c8:	mov	r5, r3
   1f0cc:	str	r3, [sp, #64]	; 0x40
   1f0d0:	b	1efac <__flatcc_fb_gen_c_verifier@@Base+0x13c8>
   1f0d4:	ldr	r3, [sp, #16]
   1f0d8:	str	r3, [sp, #84]	; 0x54
   1f0dc:	ldr	r7, [sp, #64]	; 0x40
   1f0e0:	str	r3, [sp, #64]	; 0x40
   1f0e4:	b	1fa40 <__flatcc_fb_gen_c_verifier@@Base+0x1e5c>
   1f0e8:	ldr	r1, [pc, #2672]	; 1fb60 <__flatcc_fb_gen_c_verifier@@Base+0x1f7c>
   1f0ec:	mov	r0, r4
   1f0f0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f0f4:	ldr	r3, [r4, #220]	; 0xdc
   1f0f8:	add	r3, r3, #1
   1f0fc:	str	r3, [r4, #220]	; 0xdc
   1f100:	b	1fa48 <__flatcc_fb_gen_c_verifier@@Base+0x1e64>
   1f104:	ldr	r3, [r4, #220]	; 0xdc
   1f108:	cmp	r3, #0
   1f10c:	beq	1f21c <__flatcc_fb_gen_c_verifier@@Base+0x1638>
   1f110:	sub	r3, r3, #1
   1f114:	str	r3, [r4, #220]	; 0xdc
   1f118:	ldr	r1, [pc, #2628]	; 1fb64 <__flatcc_fb_gen_c_verifier@@Base+0x1f80>
   1f11c:	mov	r0, r4
   1f120:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f124:	ldr	r3, [r4, #220]	; 0xdc
   1f128:	add	r3, r3, #1
   1f12c:	str	r3, [r4, #220]	; 0xdc
   1f130:	ldr	r3, [sl, #104]	; 0x68
   1f134:	add	r2, sp, #292	; 0x124
   1f138:	mov	r1, r3
   1f13c:	ldr	r0, [r3, #12]
   1f140:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   1f144:	ldr	r3, [sl, #104]	; 0x68
   1f148:	ldrh	r3, [r3, #8]
   1f14c:	cmp	r3, #0
   1f150:	movne	fp, #1
   1f154:	ldr	r2, [sp, #28]
   1f158:	cmp	r3, #0
   1f15c:	moveq	r2, #1
   1f160:	str	r2, [sp, #28]
   1f164:	ldr	r1, [pc, #2556]	; 1fb68 <__flatcc_fb_gen_c_verifier@@Base+0x1f84>
   1f168:	mov	r0, r4
   1f16c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f170:	ldr	r3, [sp, #16]
   1f174:	orr	r8, fp, r3
   1f178:	mov	r7, #0
   1f17c:	mov	r5, #0
   1f180:	mov	r6, r5
   1f184:	ldr	r3, [sp, #24]
   1f188:	cmp	r3, #1
   1f18c:	beq	1f3e4 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1f190:	adds	r3, fp, #0
   1f194:	movne	r3, #1
   1f198:	cmp	r7, #0
   1f19c:	movne	r3, #0
   1f1a0:	cmp	r3, #0
   1f1a4:	bne	1f3f8 <__flatcc_fb_gen_c_verifier@@Base+0x1814>
   1f1a8:	cmp	r5, #0
   1f1ac:	bne	1f41c <__flatcc_fb_gen_c_verifier@@Base+0x1838>
   1f1b0:	cmp	fp, #0
   1f1b4:	bne	1f5ec <__flatcc_fb_gen_c_verifier@@Base+0x1a08>
   1f1b8:	ldr	r3, [sp, #44]	; 0x2c
   1f1bc:	cmp	r3, #0
   1f1c0:	bne	1f6cc <__flatcc_fb_gen_c_verifier@@Base+0x1ae8>
   1f1c4:	ldr	r3, [sp, #52]	; 0x34
   1f1c8:	cmp	r3, #0
   1f1cc:	bne	1f6dc <__flatcc_fb_gen_c_verifier@@Base+0x1af8>
   1f1d0:	ldr	r3, [sp, #28]
   1f1d4:	cmp	r3, #0
   1f1d8:	bne	1f6f8 <__flatcc_fb_gen_c_verifier@@Base+0x1b14>
   1f1dc:	ldr	r3, [sp, #76]	; 0x4c
   1f1e0:	cmp	r3, #0
   1f1e4:	beq	1f70c <__flatcc_fb_gen_c_verifier@@Base+0x1b28>
   1f1e8:	ldr	r3, [sp, #84]	; 0x54
   1f1ec:	cmp	r3, #0
   1f1f0:	add	r3, sp, #292	; 0x124
   1f1f4:	str	r3, [sp, #8]
   1f1f8:	ldrd	r2, [sl, #96]	; 0x60
   1f1fc:	strd	r2, [sp]
   1f200:	ldr	r2, [sl, #112]	; 0x70
   1f204:	mov	r3, #0
   1f208:	ldrne	r1, [pc, #2396]	; 1fb6c <__flatcc_fb_gen_c_verifier@@Base+0x1f88>
   1f20c:	ldreq	r1, [pc, #2396]	; 1fb70 <__flatcc_fb_gen_c_verifier@@Base+0x1f8c>
   1f210:	mov	r0, r4
   1f214:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f218:	b	1f5fc <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   1f21c:	ldr	r3, [pc, #2356]	; 1fb58 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1f220:	ldr	r2, [pc, #2380]	; 1fb74 <__flatcc_fb_gen_c_verifier@@Base+0x1f90>
   1f224:	ldr	r1, [pc, #2332]	; 1fb48 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1f228:	ldr	r0, [pc, #2376]	; 1fb78 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   1f22c:	bl	14038 <__assert_fail@plt>
   1f230:	ldr	r3, [sp, #60]	; 0x3c
   1f234:	sub	r3, r3, #1
   1f238:	cmp	r3, #10
   1f23c:	ldrls	pc, [pc, r3, lsl #2]
   1f240:	b	1f270 <__flatcc_fb_gen_c_verifier@@Base+0x168c>
   1f244:	andeq	pc, r1, r0, lsl #21
   1f248:	muleq	r1, r4, sl
   1f24c:	andeq	pc, r1, r8, lsr #5
   1f250:			; <UNDEFINED> instruction: 0x0001f2bc
   1f254:	andeq	pc, r1, r0, asr #6
   1f258:	ldrdeq	pc, [r1], -r0
   1f25c:	andeq	pc, r1, r4, ror #5
   1f260:	strdeq	pc, [r1], -r8
   1f264:	andeq	pc, r1, ip, lsl #6
   1f268:	andeq	pc, r1, r0, lsr r3	; <UNPREDICTABLE>
   1f26c:	andeq	pc, r1, r0, lsr #6
   1f270:	ldr	r4, [pc, #2308]	; 1fb7c <__flatcc_fb_gen_c_verifier@@Base+0x1f98>
   1f274:	ldr	r3, [pc, #2264]	; 1fb54 <__flatcc_fb_gen_c_verifier@@Base+0x1f70>
   1f278:	ldr	r0, [r3]
   1f27c:	ldr	r3, [pc, #2300]	; 1fb80 <__flatcc_fb_gen_c_verifier@@Base+0x1f9c>
   1f280:	str	r3, [sp]
   1f284:	mov	r3, #96	; 0x60
   1f288:	mov	r2, r4
   1f28c:	ldr	r1, [pc, #2236]	; 1fb50 <__flatcc_fb_gen_c_verifier@@Base+0x1f6c>
   1f290:	bl	13f84 <fprintf@plt>
   1f294:	ldr	r3, [pc, #2280]	; 1fb84 <__flatcc_fb_gen_c_verifier@@Base+0x1fa0>
   1f298:	mov	r2, #96	; 0x60
   1f29c:	mov	r1, r4
   1f2a0:	ldr	r0, [pc, #2228]	; 1fb5c <__flatcc_fb_gen_c_verifier@@Base+0x1f78>
   1f2a4:	bl	14038 <__assert_fail@plt>
   1f2a8:	ldr	r3, [pc, #2264]	; 1fb88 <__flatcc_fb_gen_c_verifier@@Base+0x1fa4>
   1f2ac:	str	r3, [sp, #40]	; 0x28
   1f2b0:	ldr	r3, [pc, #2260]	; 1fb8c <__flatcc_fb_gen_c_verifier@@Base+0x1fa8>
   1f2b4:	str	r3, [sp, #20]
   1f2b8:	b	1faa4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1f2bc:	ldr	r3, [pc, #2252]	; 1fb90 <__flatcc_fb_gen_c_verifier@@Base+0x1fac>
   1f2c0:	str	r3, [sp, #40]	; 0x28
   1f2c4:	ldr	r3, [pc, #2248]	; 1fb94 <__flatcc_fb_gen_c_verifier@@Base+0x1fb0>
   1f2c8:	str	r3, [sp, #20]
   1f2cc:	b	1faa4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1f2d0:	ldr	r3, [pc, #2240]	; 1fb98 <__flatcc_fb_gen_c_verifier@@Base+0x1fb4>
   1f2d4:	str	r3, [sp, #40]	; 0x28
   1f2d8:	ldr	r3, [pc, #2236]	; 1fb9c <__flatcc_fb_gen_c_verifier@@Base+0x1fb8>
   1f2dc:	str	r3, [sp, #20]
   1f2e0:	b	1faa4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1f2e4:	ldr	r3, [pc, #2228]	; 1fba0 <__flatcc_fb_gen_c_verifier@@Base+0x1fbc>
   1f2e8:	str	r3, [sp, #40]	; 0x28
   1f2ec:	ldr	r3, [pc, #2224]	; 1fba4 <__flatcc_fb_gen_c_verifier@@Base+0x1fc0>
   1f2f0:	str	r3, [sp, #20]
   1f2f4:	b	1faa4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1f2f8:	ldr	r3, [pc, #2216]	; 1fba8 <__flatcc_fb_gen_c_verifier@@Base+0x1fc4>
   1f2fc:	str	r3, [sp, #40]	; 0x28
   1f300:	ldr	r3, [pc, #2212]	; 1fbac <__flatcc_fb_gen_c_verifier@@Base+0x1fc8>
   1f304:	str	r3, [sp, #20]
   1f308:	b	1faa4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1f30c:	ldr	r3, [pc, #2204]	; 1fbb0 <__flatcc_fb_gen_c_verifier@@Base+0x1fcc>
   1f310:	str	r3, [sp, #40]	; 0x28
   1f314:	ldr	r3, [pc, #2200]	; 1fbb4 <__flatcc_fb_gen_c_verifier@@Base+0x1fd0>
   1f318:	str	r3, [sp, #20]
   1f31c:	b	1faa4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1f320:	ldr	r3, [pc, #2192]	; 1fbb8 <__flatcc_fb_gen_c_verifier@@Base+0x1fd4>
   1f324:	str	r3, [sp, #40]	; 0x28
   1f328:	str	r3, [sp, #20]
   1f32c:	b	1faa4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1f330:	ldr	r3, [pc, #2180]	; 1fbbc <__flatcc_fb_gen_c_verifier@@Base+0x1fd8>
   1f334:	str	r3, [sp, #40]	; 0x28
   1f338:	str	r3, [sp, #20]
   1f33c:	b	1faa4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1f340:	cmp	r7, #0
   1f344:	beq	1f378 <__flatcc_fb_gen_c_verifier@@Base+0x1794>
   1f348:	mov	r5, r7
   1f34c:	ldr	r3, [pc, #2108]	; 1fb90 <__flatcc_fb_gen_c_verifier@@Base+0x1fac>
   1f350:	str	r3, [sp, #40]	; 0x28
   1f354:	ldr	r3, [pc, #2148]	; 1fbc0 <__flatcc_fb_gen_c_verifier@@Base+0x1fdc>
   1f358:	str	r3, [sp, #20]
   1f35c:	b	1f634 <__flatcc_fb_gen_c_verifier@@Base+0x1a50>
   1f360:	mov	r5, r7
   1f364:	b	1f634 <__flatcc_fb_gen_c_verifier@@Base+0x1a50>
   1f368:	ldr	r1, [pc, #2132]	; 1fbc4 <__flatcc_fb_gen_c_verifier@@Base+0x1fe0>
   1f36c:	mov	r0, r4
   1f370:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f374:	b	1f67c <__flatcc_fb_gen_c_verifier@@Base+0x1a98>
   1f378:	ldr	r3, [pc, #2064]	; 1fb90 <__flatcc_fb_gen_c_verifier@@Base+0x1fac>
   1f37c:	str	r3, [sp, #40]	; 0x28
   1f380:	ldr	r3, [pc, #2104]	; 1fbc0 <__flatcc_fb_gen_c_verifier@@Base+0x1fdc>
   1f384:	str	r3, [sp, #20]
   1f388:	b	1faac <__flatcc_fb_gen_c_verifier@@Base+0x1ec8>
   1f38c:	ldr	r2, [r4, #208]	; 0xd0
   1f390:	add	r3, sp, #88	; 0x58
   1f394:	ldr	r2, [r2, #160]	; 0xa0
   1f398:	ldr	r1, [pc, #2088]	; 1fbc8 <__flatcc_fb_gen_c_verifier@@Base+0x1fe4>
   1f39c:	mov	r0, r4
   1f3a0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f3a4:	ldr	r3, [r4, #208]	; 0xd0
   1f3a8:	ldr	r2, [r3, #160]	; 0xa0
   1f3ac:	ldr	r1, [pc, #2072]	; 1fbcc <__flatcc_fb_gen_c_verifier@@Base+0x1fe8>
   1f3b0:	mov	r0, r4
   1f3b4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f3b8:	b	1fb1c <__flatcc_fb_gen_c_verifier@@Base+0x1f38>
   1f3bc:	ldr	r3, [pc, #1940]	; 1fb58 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1f3c0:	ldr	r2, [pc, #2056]	; 1fbd0 <__flatcc_fb_gen_c_verifier@@Base+0x1fec>
   1f3c4:	ldr	r1, [pc, #1916]	; 1fb48 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1f3c8:	ldr	r0, [pc, #1960]	; 1fb78 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   1f3cc:	bl	14038 <__assert_fail@plt>
   1f3d0:	ldr	r3, [pc, #1920]	; 1fb58 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1f3d4:	ldr	r2, [pc, #2036]	; 1fbd0 <__flatcc_fb_gen_c_verifier@@Base+0x1fec>
   1f3d8:	ldr	r1, [pc, #1896]	; 1fb48 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1f3dc:	ldr	r0, [pc, #1940]	; 1fb78 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   1f3e0:	bl	14038 <__assert_fail@plt>
   1f3e4:	ldrd	r2, [sl, #80]	; 0x50
   1f3e8:	ldr	r1, [pc, #2020]	; 1fbd4 <__flatcc_fb_gen_c_verifier@@Base+0x1ff0>
   1f3ec:	mov	r0, r4
   1f3f0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f3f4:	b	1f1a8 <__flatcc_fb_gen_c_verifier@@Base+0x15c4>
   1f3f8:	ldrh	r3, [sl, #74]	; 0x4a
   1f3fc:	str	r3, [sp, #8]
   1f400:	ldrd	r2, [sl, #88]	; 0x58
   1f404:	strd	r2, [sp]
   1f408:	ldrd	r2, [sl, #96]	; 0x60
   1f40c:	ldr	r1, [pc, #1988]	; 1fbd8 <__flatcc_fb_gen_c_verifier@@Base+0x1ff4>
   1f410:	mov	r0, r4
   1f414:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f418:	b	1f1a8 <__flatcc_fb_gen_c_verifier@@Base+0x15c4>
   1f41c:	ldr	r2, [sp, #20]
   1f420:	ldr	r1, [pc, #1972]	; 1fbdc <__flatcc_fb_gen_c_verifier@@Base+0x1ff8>
   1f424:	mov	r0, r4
   1f428:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f42c:	ldr	r1, [pc, #1964]	; 1fbe0 <__flatcc_fb_gen_c_verifier@@Base+0x1ffc>
   1f430:	mov	r0, r4
   1f434:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f438:	ldr	r3, [r4, #220]	; 0xdc
   1f43c:	add	r3, r3, #1
   1f440:	str	r3, [r4, #220]	; 0xdc
   1f444:	ldr	r2, [sp, #20]
   1f448:	ldr	r1, [pc, #1940]	; 1fbe4 <__flatcc_fb_gen_c_verifier@@Base+0x2000>
   1f44c:	mov	r0, r4
   1f450:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f454:	ldr	r1, [pc, #1932]	; 1fbe8 <__flatcc_fb_gen_c_verifier@@Base+0x2004>
   1f458:	mov	r0, r4
   1f45c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f460:	ldr	r3, [r4, #220]	; 0xdc
   1f464:	cmp	r3, #0
   1f468:	beq	1f4c8 <__flatcc_fb_gen_c_verifier@@Base+0x18e4>
   1f46c:	sub	r3, r3, #1
   1f470:	str	r3, [r4, #220]	; 0xdc
   1f474:	ldr	r1, [pc, #1904]	; 1fbec <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   1f478:	mov	r0, r4
   1f47c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f480:	ldr	r3, [sp, #68]	; 0x44
   1f484:	orr	r3, r3, r7
   1f488:	mov	r2, r3
   1f48c:	str	r3, [sp, #32]
   1f490:	ldr	r3, [sp, #48]	; 0x30
   1f494:	ldr	r1, [sp, #56]	; 0x38
   1f498:	orr	r3, r3, r1
   1f49c:	orrs	r3, r3, r2
   1f4a0:	bne	1f518 <__flatcc_fb_gen_c_verifier@@Base+0x1934>
   1f4a4:	ldrh	r3, [sl, #56]	; 0x38
   1f4a8:	sub	r3, r3, #3
   1f4ac:	cmp	r3, #3
   1f4b0:	ldrls	pc, [pc, r3, lsl #2]
   1f4b4:	b	1f59c <__flatcc_fb_gen_c_verifier@@Base+0x19b8>
   1f4b8:	andeq	pc, r1, ip, ror r5	; <UNPREDICTABLE>
   1f4bc:	andeq	pc, r1, ip, asr r5	; <UNPREDICTABLE>
   1f4c0:	ldrdeq	pc, [r1], -ip
   1f4c4:	ldrdeq	pc, [r1], -ip
   1f4c8:	ldr	r3, [pc, #1672]	; 1fb58 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1f4cc:	ldr	r2, [pc, #1820]	; 1fbf0 <__flatcc_fb_gen_c_verifier@@Base+0x200c>
   1f4d0:	ldr	r1, [pc, #1648]	; 1fb48 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1f4d4:	ldr	r0, [pc, #1692]	; 1fb78 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   1f4d8:	bl	14038 <__assert_fail@plt>
   1f4dc:	ldrd	r2, [sl, #48]	; 0x30
   1f4e0:	ldr	r1, [pc, #1804]	; 1fbf4 <__flatcc_fb_gen_c_verifier@@Base+0x2010>
   1f4e4:	mov	r0, r4
   1f4e8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f4ec:	ldr	r3, [r4, #220]	; 0xdc
   1f4f0:	add	r3, r3, #1
   1f4f4:	str	r3, [r4, #220]	; 0xdc
   1f4f8:	ldrsh	r3, [sl, #74]	; 0x4a
   1f4fc:	str	r3, [sp, #8]
   1f500:	ldrd	r2, [sl, #88]	; 0x58
   1f504:	strd	r2, [sp]
   1f508:	ldrd	r2, [sl, #96]	; 0x60
   1f50c:	ldr	r1, [pc, #1764]	; 1fbf8 <__flatcc_fb_gen_c_verifier@@Base+0x2014>
   1f510:	mov	r0, r4
   1f514:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f518:	ldr	r3, [sp, #20]
   1f51c:	mov	r2, r4
   1f520:	ldr	r1, [pc, #1748]	; 1fbfc <__flatcc_fb_gen_c_verifier@@Base+0x2018>
   1f524:	mov	r0, r4
   1f528:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f52c:	ldr	r3, [sp, #32]
   1f530:	cmp	r3, #0
   1f534:	bne	1f5fc <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   1f538:	ldr	r3, [r4, #220]	; 0xdc
   1f53c:	cmp	r3, #0
   1f540:	beq	1f5d8 <__flatcc_fb_gen_c_verifier@@Base+0x19f4>
   1f544:	sub	r3, r3, #1
   1f548:	str	r3, [r4, #220]	; 0xdc
   1f54c:	ldr	r1, [pc, #1688]	; 1fbec <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   1f550:	mov	r0, r4
   1f554:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f558:	b	1f5fc <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   1f55c:	ldrd	r2, [sl, #48]	; 0x30
   1f560:	ldr	r1, [pc, #1688]	; 1fc00 <__flatcc_fb_gen_c_verifier@@Base+0x201c>
   1f564:	mov	r0, r4
   1f568:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f56c:	ldr	r3, [r4, #220]	; 0xdc
   1f570:	add	r3, r3, #1
   1f574:	str	r3, [r4, #220]	; 0xdc
   1f578:	b	1f4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1914>
   1f57c:	ldrd	r2, [sl, #48]	; 0x30
   1f580:	ldr	r1, [pc, #1660]	; 1fc04 <__flatcc_fb_gen_c_verifier@@Base+0x2020>
   1f584:	mov	r0, r4
   1f588:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f58c:	ldr	r3, [r4, #220]	; 0xdc
   1f590:	add	r3, r3, #1
   1f594:	str	r3, [r4, #220]	; 0xdc
   1f598:	b	1f4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1914>
   1f59c:	ldr	r5, [pc, #1636]	; 1fc08 <__flatcc_fb_gen_c_verifier@@Base+0x2024>
   1f5a0:	ldr	r4, [pc, #1440]	; 1fb48 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1f5a4:	ldr	r3, [pc, #1448]	; 1fb54 <__flatcc_fb_gen_c_verifier@@Base+0x1f70>
   1f5a8:	ldr	r0, [r3]
   1f5ac:	ldr	r3, [pc, #1624]	; 1fc0c <__flatcc_fb_gen_c_verifier@@Base+0x2028>
   1f5b0:	str	r3, [sp]
   1f5b4:	mov	r3, r5
   1f5b8:	mov	r2, r4
   1f5bc:	ldr	r1, [pc, #1420]	; 1fb50 <__flatcc_fb_gen_c_verifier@@Base+0x1f6c>
   1f5c0:	bl	13f84 <fprintf@plt>
   1f5c4:	ldr	r3, [pc, #1420]	; 1fb58 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1f5c8:	mov	r2, r5
   1f5cc:	mov	r1, r4
   1f5d0:	ldr	r0, [pc, #1412]	; 1fb5c <__flatcc_fb_gen_c_verifier@@Base+0x1f78>
   1f5d4:	bl	14038 <__assert_fail@plt>
   1f5d8:	ldr	r3, [pc, #1400]	; 1fb58 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1f5dc:	ldr	r2, [pc, #1580]	; 1fc10 <__flatcc_fb_gen_c_verifier@@Base+0x202c>
   1f5e0:	ldr	r1, [pc, #1376]	; 1fb48 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1f5e4:	ldr	r0, [pc, #1420]	; 1fb78 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   1f5e8:	bl	14038 <__assert_fail@plt>
   1f5ec:	add	r2, sp, #292	; 0x124
   1f5f0:	ldr	r1, [pc, #1564]	; 1fc14 <__flatcc_fb_gen_c_verifier@@Base+0x2030>
   1f5f4:	mov	r0, r4
   1f5f8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f5fc:	cmp	r6, #0
   1f600:	bne	1f720 <__flatcc_fb_gen_c_verifier@@Base+0x1b3c>
   1f604:	cmp	r9, #1
   1f608:	bne	1f904 <__flatcc_fb_gen_c_verifier@@Base+0x1d20>
   1f60c:	mov	r9, #2
   1f610:	cmp	r9, #2
   1f614:	beq	1f104 <__flatcc_fb_gen_c_verifier@@Base+0x1520>
   1f618:	orr	r3, r5, fp
   1f61c:	ldr	r2, [sp, #16]
   1f620:	orr	r8, r3, r2
   1f624:	cmp	r5, #0
   1f628:	bne	1f230 <__flatcc_fb_gen_c_verifier@@Base+0x164c>
   1f62c:	cmp	r7, #0
   1f630:	beq	1f17c <__flatcc_fb_gen_c_verifier@@Base+0x1598>
   1f634:	cmp	r8, #0
   1f638:	beq	1f368 <__flatcc_fb_gen_c_verifier@@Base+0x1784>
   1f63c:	ldrd	r2, [sl, #88]	; 0x58
   1f640:	strd	r2, [sp, #32]
   1f644:	ldrsh	r6, [sl, #74]	; 0x4a
   1f648:	orrs	r1, r2, r3
   1f64c:	mvneq	r0, #0
   1f650:	moveq	r1, #0
   1f654:	beq	1f664 <__flatcc_fb_gen_c_verifier@@Base+0x1a80>
   1f658:	mvn	r0, #0
   1f65c:	mov	r1, #0
   1f660:	bl	3a114 <fb_value_set_visit@@Base+0x614>
   1f664:	strd	r0, [sp, #8]
   1f668:	str	r6, [sp]
   1f66c:	ldrd	r2, [sp, #32]
   1f670:	ldr	r1, [pc, #1440]	; 1fc18 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1f674:	mov	r0, r4
   1f678:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f67c:	ldr	r1, [pc, #1432]	; 1fc1c <__flatcc_fb_gen_c_verifier@@Base+0x2038>
   1f680:	mov	r0, r4
   1f684:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f688:	ldr	r1, [pc, #1424]	; 1fc20 <__flatcc_fb_gen_c_verifier@@Base+0x203c>
   1f68c:	mov	r0, r4
   1f690:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f694:	ldr	r3, [r4, #220]	; 0xdc
   1f698:	add	r3, r3, #1
   1f69c:	str	r3, [r4, #220]	; 0xdc
   1f6a0:	cmp	r5, #0
   1f6a4:	bne	1faac <__flatcc_fb_gen_c_verifier@@Base+0x1ec8>
   1f6a8:	adds	r6, r7, #0
   1f6ac:	movne	r6, #1
   1f6b0:	cmp	r8, #0
   1f6b4:	cmpne	r7, #0
   1f6b8:	beq	1f184 <__flatcc_fb_gen_c_verifier@@Base+0x15a0>
   1f6bc:	ldr	r1, [pc, #1376]	; 1fc24 <__flatcc_fb_gen_c_verifier@@Base+0x2040>
   1f6c0:	mov	r0, r4
   1f6c4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f6c8:	b	1f184 <__flatcc_fb_gen_c_verifier@@Base+0x15a0>
   1f6cc:	ldr	r1, [pc, #1364]	; 1fc28 <__flatcc_fb_gen_c_verifier@@Base+0x2044>
   1f6d0:	mov	r0, r4
   1f6d4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f6d8:	b	1f5fc <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   1f6dc:	ldr	r3, [sp, #48]	; 0x30
   1f6e0:	clz	r2, r3
   1f6e4:	lsr	r2, r2, #5
   1f6e8:	ldr	r1, [pc, #1340]	; 1fc2c <__flatcc_fb_gen_c_verifier@@Base+0x2048>
   1f6ec:	mov	r0, r4
   1f6f0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f6f4:	b	1f5fc <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   1f6f8:	add	r2, sp, #292	; 0x124
   1f6fc:	ldr	r1, [pc, #1324]	; 1fc30 <__flatcc_fb_gen_c_verifier@@Base+0x204c>
   1f700:	mov	r0, r4
   1f704:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f708:	b	1f5fc <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   1f70c:	ldr	r3, [sp, #80]	; 0x50
   1f710:	cmp	r3, #0
   1f714:	bne	1f764 <__flatcc_fb_gen_c_verifier@@Base+0x1b80>
   1f718:	cmp	r7, #0
   1f71c:	beq	1f864 <__flatcc_fb_gen_c_verifier@@Base+0x1c80>
   1f720:	cmp	r8, #0
   1f724:	beq	1f89c <__flatcc_fb_gen_c_verifier@@Base+0x1cb8>
   1f728:	ldr	r1, [pc, #1284]	; 1fc34 <__flatcc_fb_gen_c_verifier@@Base+0x2050>
   1f72c:	mov	r0, r4
   1f730:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f734:	ldr	r3, [r4, #220]	; 0xdc
   1f738:	cmp	r3, #0
   1f73c:	beq	1f8f0 <__flatcc_fb_gen_c_verifier@@Base+0x1d0c>
   1f740:	sub	r3, r3, #1
   1f744:	str	r3, [r4, #220]	; 0xdc
   1f748:	ldr	r1, [pc, #1180]	; 1fbec <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   1f74c:	mov	r0, r4
   1f750:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f754:	ldr	r1, [pc, #1244]	; 1fc38 <__flatcc_fb_gen_c_verifier@@Base+0x2054>
   1f758:	mov	r0, r4
   1f75c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f760:	b	1f604 <__flatcc_fb_gen_c_verifier@@Base+0x1a20>
   1f764:	ldr	r1, [pc, #1232]	; 1fc3c <__flatcc_fb_gen_c_verifier@@Base+0x2058>
   1f768:	mov	r0, r4
   1f76c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f770:	ldr	r3, [r4, #220]	; 0xdc
   1f774:	add	r3, r3, #2
   1f778:	str	r3, [r4, #220]	; 0xdc
   1f77c:	add	r2, sp, #292	; 0x124
   1f780:	ldr	r1, [pc, #1208]	; 1fc40 <__flatcc_fb_gen_c_verifier@@Base+0x205c>
   1f784:	mov	r0, r4
   1f788:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f78c:	ldr	r2, [r4, #208]	; 0xd0
   1f790:	add	r3, sp, #88	; 0x58
   1f794:	ldr	r2, [r2, #160]	; 0xa0
   1f798:	ldr	r1, [pc, #1064]	; 1fbc8 <__flatcc_fb_gen_c_verifier@@Base+0x1fe4>
   1f79c:	mov	r0, r4
   1f7a0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f7a4:	ldr	r3, [r4, #208]	; 0xd0
   1f7a8:	ldr	r2, [r3, #160]	; 0xa0
   1f7ac:	ldr	r1, [pc, #1048]	; 1fbcc <__flatcc_fb_gen_c_verifier@@Base+0x1fe8>
   1f7b0:	mov	r0, r4
   1f7b4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f7b8:	ldr	r3, [r4, #220]	; 0xdc
   1f7bc:	cmp	r3, #0
   1f7c0:	beq	1f814 <__flatcc_fb_gen_c_verifier@@Base+0x1c30>
   1f7c4:	sub	r2, r3, #1
   1f7c8:	str	r2, [r4, #220]	; 0xdc
   1f7cc:	cmp	r2, #0
   1f7d0:	beq	1f828 <__flatcc_fb_gen_c_verifier@@Base+0x1c44>
   1f7d4:	sub	r3, r3, #2
   1f7d8:	str	r3, [r4, #220]	; 0xdc
   1f7dc:	ldr	r3, [sp, #64]	; 0x40
   1f7e0:	cmp	r3, #0
   1f7e4:	beq	1f83c <__flatcc_fb_gen_c_verifier@@Base+0x1c58>
   1f7e8:	add	r3, sp, #292	; 0x124
   1f7ec:	str	r3, [sp, #12]
   1f7f0:	str	r3, [sp, #8]
   1f7f4:	ldrd	r2, [sl, #96]	; 0x60
   1f7f8:	strd	r2, [sp]
   1f7fc:	ldr	r2, [sl, #112]	; 0x70
   1f800:	mov	r3, #0
   1f804:	ldr	r1, [pc, #1080]	; 1fc44 <__flatcc_fb_gen_c_verifier@@Base+0x2060>
   1f808:	mov	r0, r4
   1f80c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f810:	b	1f5fc <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   1f814:	ldr	r3, [pc, #828]	; 1fb58 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1f818:	ldr	r2, [pc, #1064]	; 1fc48 <__flatcc_fb_gen_c_verifier@@Base+0x2064>
   1f81c:	ldr	r1, [pc, #804]	; 1fb48 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1f820:	ldr	r0, [pc, #848]	; 1fb78 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   1f824:	bl	14038 <__assert_fail@plt>
   1f828:	ldr	r3, [pc, #808]	; 1fb58 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1f82c:	ldr	r2, [pc, #1044]	; 1fc48 <__flatcc_fb_gen_c_verifier@@Base+0x2064>
   1f830:	ldr	r1, [pc, #784]	; 1fb48 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1f834:	ldr	r0, [pc, #828]	; 1fb78 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   1f838:	bl	14038 <__assert_fail@plt>
   1f83c:	add	r3, sp, #292	; 0x124
   1f840:	str	r3, [sp, #8]
   1f844:	ldrd	r2, [sl, #96]	; 0x60
   1f848:	strd	r2, [sp]
   1f84c:	ldr	r2, [sl, #112]	; 0x70
   1f850:	mov	r3, #0
   1f854:	ldr	r1, [pc, #1008]	; 1fc4c <__flatcc_fb_gen_c_verifier@@Base+0x2068>
   1f858:	mov	r0, r4
   1f85c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f860:	b	1f5fc <__flatcc_fb_gen_c_verifier@@Base+0x1a18>
   1f864:	ldr	r4, [pc, #732]	; 1fb48 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1f868:	ldr	r3, [pc, #992]	; 1fc50 <__flatcc_fb_gen_c_verifier@@Base+0x206c>
   1f86c:	str	r3, [sp]
   1f870:	mov	r3, #636	; 0x27c
   1f874:	mov	r2, r4
   1f878:	ldr	r1, [pc, #720]	; 1fb50 <__flatcc_fb_gen_c_verifier@@Base+0x1f6c>
   1f87c:	ldr	r0, [pc, #720]	; 1fb54 <__flatcc_fb_gen_c_verifier@@Base+0x1f70>
   1f880:	ldr	r0, [r0]
   1f884:	bl	13f84 <fprintf@plt>
   1f888:	ldr	r3, [pc, #712]	; 1fb58 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1f88c:	mov	r2, #636	; 0x27c
   1f890:	mov	r1, r4
   1f894:	ldr	r0, [pc, #704]	; 1fb5c <__flatcc_fb_gen_c_verifier@@Base+0x1f78>
   1f898:	bl	14038 <__assert_fail@plt>
   1f89c:	ldr	r1, [pc, #944]	; 1fc54 <__flatcc_fb_gen_c_verifier@@Base+0x2070>
   1f8a0:	mov	r0, r4
   1f8a4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f8a8:	ldr	r1, [pc, #936]	; 1fc58 <__flatcc_fb_gen_c_verifier@@Base+0x2074>
   1f8ac:	mov	r0, r4
   1f8b0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f8b4:	ldr	r1, [pc, #888]	; 1fc34 <__flatcc_fb_gen_c_verifier@@Base+0x2050>
   1f8b8:	mov	r0, r4
   1f8bc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f8c0:	ldr	r3, [r4, #220]	; 0xdc
   1f8c4:	cmp	r3, #0
   1f8c8:	beq	1f8f0 <__flatcc_fb_gen_c_verifier@@Base+0x1d0c>
   1f8cc:	sub	r3, r3, #1
   1f8d0:	str	r3, [r4, #220]	; 0xdc
   1f8d4:	ldr	r1, [pc, #784]	; 1fbec <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   1f8d8:	mov	r0, r4
   1f8dc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f8e0:	ldr	r1, [pc, #884]	; 1fc5c <__flatcc_fb_gen_c_verifier@@Base+0x2078>
   1f8e4:	mov	r0, r4
   1f8e8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f8ec:	b	1f604 <__flatcc_fb_gen_c_verifier@@Base+0x1a20>
   1f8f0:	ldr	r3, [pc, #608]	; 1fb58 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1f8f4:	ldr	r2, [pc, #868]	; 1fc60 <__flatcc_fb_gen_c_verifier@@Base+0x207c>
   1f8f8:	ldr	r1, [pc, #584]	; 1fb48 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1f8fc:	ldr	r0, [pc, #628]	; 1fb78 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   1f900:	bl	14038 <__assert_fail@plt>
   1f904:	cmp	r9, #2
   1f908:	beq	1f940 <__flatcc_fb_gen_c_verifier@@Base+0x1d5c>
   1f90c:	ldr	r3, [sp, #44]	; 0x2c
   1f910:	ldr	r2, [sp, #48]	; 0x30
   1f914:	orr	r3, r3, r2
   1f918:	ldr	r2, [sp, #56]	; 0x38
   1f91c:	orr	r3, r3, r2
   1f920:	orr	r3, r3, r9
   1f924:	orr	r7, r3, r7
   1f928:	ldr	r3, [sp, #28]
   1f92c:	orrs	r3, r7, r3
   1f930:	bne	1f990 <__flatcc_fb_gen_c_verifier@@Base+0x1dac>
   1f934:	mov	r0, #0
   1f938:	add	sp, sp, #516	; 0x204
   1f93c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f940:	ldr	r1, [pc, #796]	; 1fc64 <__flatcc_fb_gen_c_verifier@@Base+0x2080>
   1f944:	mov	r0, r4
   1f948:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f94c:	ldr	r1, [pc, #788]	; 1fc68 <__flatcc_fb_gen_c_verifier@@Base+0x2084>
   1f950:	mov	r0, r4
   1f954:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f958:	ldr	r3, [r4, #220]	; 0xdc
   1f95c:	cmp	r3, #0
   1f960:	beq	1f97c <__flatcc_fb_gen_c_verifier@@Base+0x1d98>
   1f964:	sub	r3, r3, #1
   1f968:	str	r3, [r4, #220]	; 0xdc
   1f96c:	ldr	r1, [pc, #760]	; 1fc6c <__flatcc_fb_gen_c_verifier@@Base+0x2088>
   1f970:	mov	r0, r4
   1f974:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f978:	b	1f90c <__flatcc_fb_gen_c_verifier@@Base+0x1d28>
   1f97c:	ldr	r3, [pc, #468]	; 1fb58 <__flatcc_fb_gen_c_verifier@@Base+0x1f74>
   1f980:	ldr	r2, [pc, #744]	; 1fc70 <__flatcc_fb_gen_c_verifier@@Base+0x208c>
   1f984:	ldr	r1, [pc, #444]	; 1fb48 <__flatcc_fb_gen_c_verifier@@Base+0x1f64>
   1f988:	ldr	r0, [pc, #488]	; 1fb78 <__flatcc_fb_gen_c_verifier@@Base+0x1f94>
   1f98c:	bl	14038 <__assert_fail@plt>
   1f990:	ldrd	r2, [sl, #96]	; 0x60
   1f994:	ldr	r1, [pc, #728]	; 1fc74 <__flatcc_fb_gen_c_verifier@@Base+0x2090>
   1f998:	mov	r0, r4
   1f99c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f9a0:	ldr	r1, [pc, #688]	; 1fc58 <__flatcc_fb_gen_c_verifier@@Base+0x2074>
   1f9a4:	mov	r0, r4
   1f9a8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1f9ac:	b	1f934 <__flatcc_fb_gen_c_verifier@@Base+0x1d50>
   1f9b0:	mov	r3, #1
   1f9b4:	mov	r1, r3
   1f9b8:	str	r3, [sp, #64]	; 0x40
   1f9bc:	mov	r3, #0
   1f9c0:	str	r3, [sp, #60]	; 0x3c
   1f9c4:	mov	fp, r3
   1f9c8:	str	r3, [sp, #28]
   1f9cc:	mov	r5, r3
   1f9d0:	str	r1, [sp, #44]	; 0x2c
   1f9d4:	b	1eee4 <__flatcc_fb_gen_c_verifier@@Base+0x1300>
   1f9d8:	mov	r3, #0
   1f9dc:	str	r3, [sp, #64]	; 0x40
   1f9e0:	str	r3, [sp, #60]	; 0x3c
   1f9e4:	mov	fp, r3
   1f9e8:	str	r3, [sp, #28]
   1f9ec:	mov	r5, r3
   1f9f0:	mov	r2, #1
   1f9f4:	str	r2, [sp, #44]	; 0x2c
   1f9f8:	b	1eee4 <__flatcc_fb_gen_c_verifier@@Base+0x1300>
   1f9fc:	adds	r3, r3, #0
   1fa00:	movne	r3, #1
   1fa04:	str	r3, [sp, #76]	; 0x4c
   1fa08:	ldr	r2, [sp, #64]	; 0x40
   1fa0c:	cmp	r2, #0
   1fa10:	moveq	r3, #0
   1fa14:	andne	r3, r3, #1
   1fa18:	str	r3, [sp, #80]	; 0x50
   1fa1c:	cmp	r3, #0
   1fa20:	beq	1f0d4 <__flatcc_fb_gen_c_verifier@@Base+0x14f0>
   1fa24:	ldr	r3, [sp, #16]
   1fa28:	str	r3, [sp, #64]	; 0x40
   1fa2c:	mov	r7, r3
   1fa30:	mov	r3, #0
   1fa34:	str	r3, [sp, #80]	; 0x50
   1fa38:	mov	r3, #1
   1fa3c:	str	r3, [sp, #84]	; 0x54
   1fa40:	cmp	r9, #1
   1fa44:	beq	1f0e8 <__flatcc_fb_gen_c_verifier@@Base+0x1504>
   1fa48:	ldr	r3, [pc, #552]	; 1fc78 <__flatcc_fb_gen_c_verifier@@Base+0x2094>
   1fa4c:	str	r3, [sp, #40]	; 0x28
   1fa50:	str	r3, [sp, #20]
   1fa54:	b	1f610 <__flatcc_fb_gen_c_verifier@@Base+0x1a2c>
   1fa58:	adds	r3, r3, #0
   1fa5c:	movne	r3, #1
   1fa60:	str	r3, [sp, #76]	; 0x4c
   1fa64:	ldr	r3, [sp, #64]	; 0x40
   1fa68:	mov	r5, r3
   1fa6c:	str	r3, [sp, #84]	; 0x54
   1fa70:	mov	r7, r3
   1fa74:	mov	r3, #1
   1fa78:	str	r3, [sp, #80]	; 0x50
   1fa7c:	b	1fa40 <__flatcc_fb_gen_c_verifier@@Base+0x1e5c>
   1fa80:	ldr	r3, [pc, #500]	; 1fc7c <__flatcc_fb_gen_c_verifier@@Base+0x2098>
   1fa84:	str	r3, [sp, #40]	; 0x28
   1fa88:	ldr	r3, [pc, #496]	; 1fc80 <__flatcc_fb_gen_c_verifier@@Base+0x209c>
   1fa8c:	str	r3, [sp, #20]
   1fa90:	b	1faa4 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1fa94:	ldr	r3, [pc, #488]	; 1fc84 <__flatcc_fb_gen_c_verifier@@Base+0x20a0>
   1fa98:	str	r3, [sp, #40]	; 0x28
   1fa9c:	ldr	r3, [pc, #484]	; 1fc88 <__flatcc_fb_gen_c_verifier@@Base+0x20a4>
   1faa0:	str	r3, [sp, #20]
   1faa4:	cmp	r7, #0
   1faa8:	bne	1f360 <__flatcc_fb_gen_c_verifier@@Base+0x177c>
   1faac:	ldr	r2, [sp, #40]	; 0x28
   1fab0:	ldr	r1, [pc, #468]	; 1fc8c <__flatcc_fb_gen_c_verifier@@Base+0x20a8>
   1fab4:	mov	r0, r4
   1fab8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1fabc:	ldr	r1, [pc, #376]	; 1fc3c <__flatcc_fb_gen_c_verifier@@Base+0x2058>
   1fac0:	mov	r0, r4
   1fac4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1fac8:	ldr	r3, [r4, #220]	; 0xdc
   1facc:	add	r3, r3, #2
   1fad0:	str	r3, [r4, #220]	; 0xdc
   1fad4:	ldr	r3, [sp, #72]	; 0x48
   1fad8:	cmp	r3, #0
   1fadc:	beq	1f38c <__flatcc_fb_gen_c_verifier@@Base+0x17a8>
   1fae0:	add	r2, sp, #292	; 0x124
   1fae4:	ldr	r1, [pc, #340]	; 1fc40 <__flatcc_fb_gen_c_verifier@@Base+0x205c>
   1fae8:	mov	r0, r4
   1faec:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1faf0:	ldr	r2, [r4, #208]	; 0xd0
   1faf4:	add	r3, sp, #88	; 0x58
   1faf8:	ldr	r2, [r2, #160]	; 0xa0
   1fafc:	ldr	r1, [pc, #196]	; 1fbc8 <__flatcc_fb_gen_c_verifier@@Base+0x1fe4>
   1fb00:	mov	r0, r4
   1fb04:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1fb08:	ldr	r3, [r4, #208]	; 0xd0
   1fb0c:	ldr	r2, [r3, #160]	; 0xa0
   1fb10:	ldr	r1, [pc, #180]	; 1fbcc <__flatcc_fb_gen_c_verifier@@Base+0x1fe8>
   1fb14:	mov	r0, r4
   1fb18:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1fb1c:	ldr	r3, [r4, #220]	; 0xdc
   1fb20:	cmp	r3, #0
   1fb24:	beq	1f3bc <__flatcc_fb_gen_c_verifier@@Base+0x17d8>
   1fb28:	sub	r2, r3, #1
   1fb2c:	str	r2, [r4, #220]	; 0xdc
   1fb30:	cmp	r2, #0
   1fb34:	beq	1f3d0 <__flatcc_fb_gen_c_verifier@@Base+0x17ec>
   1fb38:	sub	r3, r3, #2
   1fb3c:	str	r3, [r4, #220]	; 0xdc
   1fb40:	b	1f6a8 <__flatcc_fb_gen_c_verifier@@Base+0x1ac4>
   1fb44:	ldrdeq	r0, [r0], -r2
   1fb48:	andeq	lr, r4, r0, lsl r2
   1fb4c:	andeq	lr, r4, r4, asr #17
   1fb50:	andeq	fp, r3, r8, lsr sl
   1fb54:	andeq	r6, r6, r8, lsr #1
   1fb58:	andeq	lr, r4, ip, asr #32
   1fb5c:	andeq	r3, r4, r0, ror lr
   1fb60:	andeq	lr, r4, r0, lsl #18
   1fb64:	andeq	lr, r4, r4, lsr r9
   1fb68:	andeq	lr, r4, ip, asr #18
   1fb6c:	andeq	lr, r4, r4, lsl pc
   1fb70:	andeq	lr, r4, r8, ror pc
   1fb74:	andeq	r0, r0, sl, ror #3
   1fb78:	andeq	lr, r4, r8, ror #4
   1fb7c:	andeq	fp, r3, ip, ror #19
   1fb80:	andeq	fp, r3, r4, asr #20
   1fb84:	andeq	lr, r4, r4, rrx
   1fb88:	andeq	fp, r3, r0, ror #17
   1fb8c:	andeq	fp, r3, r4, asr sp
   1fb90:	andeq	fp, r3, ip, ror #17
   1fb94:	andeq	fp, r3, ip, asr sp
   1fb98:	strdeq	fp, [r3], -ip
   1fb9c:	andeq	fp, r3, r4, ror #26
   1fba0:	andeq	fp, r3, r4, lsl #18
   1fba4:	andeq	fp, r3, ip, ror #26
   1fba8:	andeq	fp, r3, ip, lsl #18
   1fbac:	andeq	fp, r3, r4, ror sp
   1fbb0:	andeq	fp, r3, r4, lsl r9
   1fbb4:	andeq	fp, r3, ip, ror sp
   1fbb8:	andeq	fp, r3, ip, lsl r9
   1fbbc:	andeq	fp, r3, r4, lsr #18
   1fbc0:	andeq	r3, r5, r0, ror #17
   1fbc4:	muleq	r4, r0, r9
   1fbc8:	ldrdeq	lr, [r4], -r4
   1fbcc:	strdeq	lr, [r4], -r4
   1fbd0:	andeq	r0, r0, fp, lsl r2
   1fbd4:	andeq	lr, r4, r0, ror #22
   1fbd8:	muleq	r4, r0, fp
   1fbdc:	andeq	lr, r4, r0, ror #23
   1fbe0:	andeq	lr, r4, ip, lsl ip
   1fbe4:	andeq	lr, r4, r0, lsr ip
   1fbe8:	andeq	lr, r4, r8, lsl #25
   1fbec:	andeq	lr, r4, r4, ror r2
   1fbf0:	andeq	r0, r0, pc, lsr #4
   1fbf4:			; <UNDEFINED> instruction: 0x0004ecb4
   1fbf8:			; <UNDEFINED> instruction: 0x0004edb0
   1fbfc:	andeq	lr, r4, r0, lsl #28
   1fc00:	strdeq	lr, [r4], -r8
   1fc04:	andeq	lr, r4, ip, lsr sp
   1fc08:	andeq	r0, r0, lr, asr #4
   1fc0c:	andeq	lr, r4, r0, lsl #27
   1fc10:	andeq	r0, r0, sl, asr r2
   1fc14:	andeq	lr, r4, r0, lsr #28
   1fc18:	ldrdeq	lr, [r4], -r0
   1fc1c:	andeq	lr, r4, r4, lsr #20
   1fc20:	andeq	lr, r4, r0, ror #20
   1fc24:	andeq	lr, r4, r8, lsl fp
   1fc28:	andeq	lr, r4, r8, asr lr
   1fc2c:	muleq	r4, r4, lr
   1fc30:	andeq	lr, r4, r4, ror #29
   1fc34:	andeq	pc, r4, r8, ror r1	; <UNPREDICTABLE>
   1fc38:	muleq	r4, r8, r2
   1fc3c:	andeq	lr, r4, ip, ror sl
   1fc40:	andeq	lr, r4, r0, asr #21
   1fc44:	ldrdeq	lr, [r4], -r4
   1fc48:	andeq	r0, r0, r3, ror r2
   1fc4c:	andeq	pc, r4, r8, rrx
   1fc50:	ldrdeq	pc, [r4], -ip
   1fc54:	andeq	pc, r4, r0, lsl r1	; <UNPREDICTABLE>
   1fc58:	andeq	pc, r4, r8, ror #2
   1fc5c:	andeq	pc, r4, r4, ror #4
   1fc60:	andeq	r0, r0, r7, lsl #5
   1fc64:			; <UNDEFINED> instruction: 0x0004f1b4
   1fc68:	andeq	pc, r4, ip, asr #3
   1fc6c:	strdeq	pc, [r4], -ip
   1fc70:	muleq	r0, r5, r2
   1fc74:	andeq	pc, r4, r0, lsl r2	; <UNPREDICTABLE>
   1fc78:	andeq	lr, r4, r0, asr #17
   1fc7c:	andeq	fp, r3, r8, asr #17
   1fc80:	andeq	fp, r3, r4, asr #26
   1fc84:	ldrdeq	fp, [r3], -r4
   1fc88:	andeq	fp, r3, ip, asr #26
   1fc8c:	andeq	lr, r4, r0, ror sl
   1fc90:	push	{r4, r5, r6, r7, r8, lr}
   1fc94:	mov	r4, r0
   1fc98:	mov	r5, r1
   1fc9c:	mov	r6, r2
   1fca0:	mov	r7, r3
   1fca4:	ldr	r2, [sp, #24]
   1fca8:	ldr	r1, [pc, #112]	; 1fd20 <__flatcc_fb_gen_c_verifier@@Base+0x213c>
   1fcac:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1fcb0:	ldr	r1, [pc, #108]	; 1fd24 <__flatcc_fb_gen_c_verifier@@Base+0x2140>
   1fcb4:	mov	r0, r4
   1fcb8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1fcbc:	ldr	r3, [r4, #220]	; 0xdc
   1fcc0:	add	r3, r3, #1
   1fcc4:	str	r3, [r4, #220]	; 0xdc
   1fcc8:	mov	r3, r7
   1fccc:	mov	r2, r6
   1fcd0:	mov	r1, r5
   1fcd4:	mov	r0, r4
   1fcd8:	bl	1edac <__flatcc_fb_gen_c_verifier@@Base+0x11c8>
   1fcdc:	ldr	r3, [r4, #220]	; 0xdc
   1fce0:	cmp	r3, #0
   1fce4:	beq	1fd0c <__flatcc_fb_gen_c_verifier@@Base+0x2128>
   1fce8:	sub	r3, r3, #1
   1fcec:	str	r3, [r4, #220]	; 0xdc
   1fcf0:	ldr	r1, [pc, #48]	; 1fd28 <__flatcc_fb_gen_c_verifier@@Base+0x2144>
   1fcf4:	mov	r0, r4
   1fcf8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1fcfc:	ldr	r3, [r4, #220]	; 0xdc
   1fd00:	add	r3, r3, #1
   1fd04:	str	r3, [r4, #220]	; 0xdc
   1fd08:	pop	{r4, r5, r6, r7, r8, pc}
   1fd0c:	ldr	r3, [pc, #24]	; 1fd2c <__flatcc_fb_gen_c_verifier@@Base+0x2148>
   1fd10:	ldr	r2, [pc, #24]	; 1fd30 <__flatcc_fb_gen_c_verifier@@Base+0x214c>
   1fd14:	ldr	r1, [pc, #24]	; 1fd34 <__flatcc_fb_gen_c_verifier@@Base+0x2150>
   1fd18:	ldr	r0, [pc, #24]	; 1fd38 <__flatcc_fb_gen_c_verifier@@Base+0x2154>
   1fd1c:	bl	14038 <__assert_fail@plt>
   1fd20:	andeq	pc, r4, r4, asr #5
   1fd24:	andeq	pc, r4, r8, lsl #6
   1fd28:	andeq	lr, r4, r0, lsl #7
   1fd2c:	andeq	lr, r4, r8, ror r0
   1fd30:	andeq	r0, r0, r3, lsr #5
   1fd34:	andeq	lr, r4, r0, lsl r2
   1fd38:	andeq	lr, r4, r8, ror #4
   1fd3c:	push	{r4, lr}
   1fd40:	add	r3, r1, #4
   1fd44:	mov	r2, r0
   1fd48:	ldr	r1, [pc, #8]	; 1fd58 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1fd4c:	mov	r0, r3
   1fd50:	bl	278c0 <fb_symbol_table_visit@@Base>
   1fd54:	pop	{r4, pc}
   1fd58:	andeq	r0, r2, r8
   1fd5c:	push	{r4, lr}
   1fd60:	add	r3, r1, #4
   1fd64:	mov	r2, r0
   1fd68:	ldr	r1, [pc, #8]	; 1fd78 <__flatcc_fb_gen_c_verifier@@Base+0x2194>
   1fd6c:	mov	r0, r3
   1fd70:	bl	278c0 <fb_symbol_table_visit@@Base>
   1fd74:	pop	{r4, pc}
   1fd78:			; <UNDEFINED> instruction: 0x0001febc
   1fd7c:	push	{r4, r5, r6, lr}
   1fd80:	mov	r5, r0
   1fd84:	mov	r4, r1
   1fd88:	ldr	r3, [pc, #40]	; 1fdb8 <__flatcc_fb_gen_c_verifier@@Base+0x21d4>
   1fd8c:	mov	r2, #8
   1fd90:	bl	14008 <qsort@plt>
   1fd94:	cmp	r4, #0
   1fd98:	pople	{r4, r5, r6, pc}
   1fd9c:	mov	r3, #0
   1fda0:	ldr	r2, [r5, r3, lsl #3]
   1fda4:	str	r3, [r2, #124]	; 0x7c
   1fda8:	add	r3, r3, #1
   1fdac:	cmp	r4, r3
   1fdb0:	bne	1fda0 <__flatcc_fb_gen_c_verifier@@Base+0x21bc>
   1fdb4:	pop	{r4, r5, r6, pc}
   1fdb8:	andeq	r0, r2, ip, lsl #6
   1fdbc:	push	{r4, r5, r6, lr}
   1fdc0:	ldr	r5, [r0, #4]
   1fdc4:	ldr	r4, [r1, #4]
   1fdc8:	cmp	r5, r4
   1fdcc:	movlt	r2, r5
   1fdd0:	movge	r2, r4
   1fdd4:	ldr	r1, [r1]
   1fdd8:	ldr	r0, [r0]
   1fddc:	bl	13ef4 <memcmp@plt>
   1fde0:	cmp	r0, #0
   1fde4:	subeq	r0, r5, r4
   1fde8:	pop	{r4, r5, r6, pc}
   1fdec:	push	{r4, r5, r6, lr}
   1fdf0:	mov	r4, r0
   1fdf4:	mov	r5, r1
   1fdf8:	ldrh	r3, [r1, #8]
   1fdfc:	sub	r3, r3, #3
   1fe00:	cmp	r3, #1
   1fe04:	movhi	r3, #0
   1fe08:	bls	1fe4c <__flatcc_fb_gen_c_verifier@@Base+0x2268>
   1fe0c:	cmp	r3, #0
   1fe10:	popeq	{r4, r5, r6, pc}
   1fe14:	ldr	r3, [r4, #8]
   1fe18:	ldr	r2, [r5, #4]
   1fe1c:	ldr	r2, [r2]
   1fe20:	str	r2, [r3]
   1fe24:	ldr	r3, [r4, #8]
   1fe28:	ldr	r2, [r5, #4]
   1fe2c:	ldr	r2, [r2, #4]
   1fe30:	str	r2, [r3, #4]
   1fe34:	ldr	r3, [r4, #8]
   1fe38:	str	r5, [r3, #8]
   1fe3c:	ldr	r3, [r4, #8]
   1fe40:	add	r3, r3, #16
   1fe44:	str	r3, [r4, #8]
   1fe48:	pop	{r4, r5, r6, pc}
   1fe4c:	ldr	r0, [r0, #4]
   1fe50:	ldr	r1, [r1, #16]
   1fe54:	add	r0, r0, #172	; 0xac
   1fe58:	bl	27230 <ptr_set_find_item@@Base>
   1fe5c:	cmp	r0, #0
   1fe60:	movne	r3, r5
   1fe64:	bne	1fe0c <__flatcc_fb_gen_c_verifier@@Base+0x2228>
   1fe68:	pop	{r4, r5, r6, pc}
   1fe6c:	push	{r4, r5, r6, lr}
   1fe70:	mov	r5, r0
   1fe74:	ldrh	r3, [r1, #8]
   1fe78:	sub	r3, r3, #3
   1fe7c:	cmp	r3, #1
   1fe80:	movhi	r4, #0
   1fe84:	bls	1fe9c <__flatcc_fb_gen_c_verifier@@Base+0x22b8>
   1fe88:	cmp	r4, #0
   1fe8c:	ldrne	r3, [r5]
   1fe90:	addne	r3, r3, #1
   1fe94:	strne	r3, [r5]
   1fe98:	pop	{r4, r5, r6, pc}
   1fe9c:	mov	r4, r1
   1fea0:	ldr	r0, [r0, #4]
   1fea4:	ldr	r1, [r1, #16]
   1fea8:	add	r0, r0, #172	; 0xac
   1feac:	bl	27230 <ptr_set_find_item@@Base>
   1feb0:	cmp	r0, #0
   1feb4:	bne	1fe88 <__flatcc_fb_gen_c_verifier@@Base+0x22a4>
   1feb8:	pop	{r4, r5, r6, pc}
   1febc:	push	{r4, r5, r6, lr}
   1fec0:	mov	r4, r0
   1fec4:	mov	r5, r1
   1fec8:	ldrh	r3, [r1, #8]
   1fecc:	cmp	r3, #4
   1fed0:	movhi	r3, #0
   1fed4:	bls	1ff60 <__flatcc_fb_gen_c_verifier@@Base+0x237c>
   1fed8:	cmp	r3, #0
   1fedc:	popeq	{r4, r5, r6, pc}
   1fee0:	ldr	r2, [r4]
   1fee4:	cmp	r2, #0
   1fee8:	moveq	r1, #0
   1feec:	beq	1ff20 <__flatcc_fb_gen_c_verifier@@Base+0x233c>
   1fef0:	ldr	r3, [r3, #12]
   1fef4:	ldr	r3, [r3]
   1fef8:	cmp	r3, #0
   1fefc:	beq	1ff80 <__flatcc_fb_gen_c_verifier@@Base+0x239c>
   1ff00:	mov	r1, #0
   1ff04:	ldr	r2, [r3, #4]
   1ff08:	ldr	r2, [r2, #4]
   1ff0c:	add	r2, r2, #1
   1ff10:	add	r1, r1, r2
   1ff14:	ldr	r3, [r3]
   1ff18:	cmp	r3, #0
   1ff1c:	bne	1ff04 <__flatcc_fb_gen_c_verifier@@Base+0x2320>
   1ff20:	ldr	r3, [r5, #4]
   1ff24:	ldr	r3, [r3, #4]
   1ff28:	ldr	r2, [r4, #12]
   1ff2c:	add	r3, r3, r2
   1ff30:	add	r3, r3, #1
   1ff34:	add	r1, r3, r1
   1ff38:	str	r1, [r4, #12]
   1ff3c:	ldrh	r3, [r5, #8]
   1ff40:	cmp	r3, #4
   1ff44:	ldrls	pc, [pc, r3, lsl #2]
   1ff48:	b	1ffa4 <__flatcc_fb_gen_c_verifier@@Base+0x23c0>
   1ff4c:	andeq	pc, r1, r8, lsl #31
   1ff50:	andeq	pc, r1, r8, lsl #31
   1ff54:	andeq	pc, r1, r4, lsr #31
   1ff58:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1ff5c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1ff60:	ldr	r0, [r0, #40]	; 0x28
   1ff64:	ldr	r1, [r1, #16]
   1ff68:	add	r0, r0, #172	; 0xac
   1ff6c:	bl	27230 <ptr_set_find_item@@Base>
   1ff70:	cmp	r0, #0
   1ff74:	movne	r3, r5
   1ff78:	bne	1fed8 <__flatcc_fb_gen_c_verifier@@Base+0x22f4>
   1ff7c:	pop	{r4, r5, r6, pc}
   1ff80:	mov	r1, #0
   1ff84:	b	1ff20 <__flatcc_fb_gen_c_verifier@@Base+0x233c>
   1ff88:	ldr	r3, [r4, #4]
   1ff8c:	add	r3, r3, #1
   1ff90:	str	r3, [r4, #4]
   1ff94:	pop	{r4, r5, r6, pc}
   1ff98:	ldr	r3, [r4, #8]
   1ff9c:	add	r3, r3, #1
   1ffa0:	str	r3, [r4, #8]
   1ffa4:	pop	{r4, r5, r6, pc}
   1ffa8:	cmp	r0, #0
   1ffac:	bxeq	lr
   1ffb0:	push	{r4, lr}
   1ffb4:	bl	13ed0 <free@plt>
   1ffb8:	pop	{r4, pc}
   1ffbc:	push	{r4, lr}
   1ffc0:	mov	r4, r0
   1ffc4:	ldr	r0, [r0, #16]
   1ffc8:	cmp	r0, #0
   1ffcc:	beq	1ffd4 <__flatcc_fb_gen_c_verifier@@Base+0x23f0>
   1ffd0:	bl	13ed0 <free@plt>
   1ffd4:	ldr	r0, [r4, #20]
   1ffd8:	cmp	r0, #0
   1ffdc:	beq	1ffe4 <__flatcc_fb_gen_c_verifier@@Base+0x2400>
   1ffe0:	bl	13ed0 <free@plt>
   1ffe4:	ldr	r0, [r4, #24]
   1ffe8:	cmp	r0, #0
   1ffec:	beq	1fff4 <__flatcc_fb_gen_c_verifier@@Base+0x2410>
   1fff0:	bl	13ed0 <free@plt>
   1fff4:	mov	r2, #44	; 0x2c
   1fff8:	mov	r1, #0
   1fffc:	mov	r0, r4
   20000:	bl	13f9c <memset@plt>
   20004:	pop	{r4, pc}
   20008:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2000c:	mov	r7, r0
   20010:	mov	r9, r1
   20014:	ldrh	r3, [r1, #8]
   20018:	cmp	r3, #4
   2001c:	movhi	r3, #0
   20020:	bls	200d8 <__flatcc_fb_gen_c_verifier@@Base+0x24f4>
   20024:	cmp	r3, #0
   20028:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2002c:	ldr	sl, [r7, #36]	; 0x24
   20030:	ldr	r2, [r7]
   20034:	cmp	r2, #0
   20038:	moveq	r6, sl
   2003c:	beq	20088 <__flatcc_fb_gen_c_verifier@@Base+0x24a4>
   20040:	ldr	r3, [r3, #12]
   20044:	ldr	r5, [r3]
   20048:	cmp	r5, #0
   2004c:	beq	200f8 <__flatcc_fb_gen_c_verifier@@Base+0x2514>
   20050:	mov	r6, sl
   20054:	mov	r8, #46	; 0x2e
   20058:	ldr	r3, [r5, #4]
   2005c:	ldr	r4, [r3, #4]
   20060:	mov	r2, r4
   20064:	ldr	r1, [r3]
   20068:	mov	r0, r6
   2006c:	bl	13edc <memcpy@plt>
   20070:	add	r4, r6, r4
   20074:	add	r6, r4, #1
   20078:	strb	r8, [r4]
   2007c:	ldr	r5, [r5]
   20080:	cmp	r5, #0
   20084:	bne	20058 <__flatcc_fb_gen_c_verifier@@Base+0x2474>
   20088:	ldr	r3, [r9, #4]
   2008c:	ldr	r4, [r3, #4]
   20090:	mov	r2, r4
   20094:	ldr	r1, [r3]
   20098:	mov	r0, r6
   2009c:	bl	13edc <memcpy@plt>
   200a0:	add	r3, r6, r4
   200a4:	mov	r2, #0
   200a8:	strb	r2, [r6, r4]
   200ac:	add	r3, r3, #1
   200b0:	str	r3, [r7, #36]	; 0x24
   200b4:	ldrh	r3, [r9, #8]
   200b8:	cmp	r3, #4
   200bc:	ldrls	pc, [pc, r3, lsl #2]
   200c0:	b	2013c <__flatcc_fb_gen_c_verifier@@Base+0x2558>
   200c4:	andeq	r0, r2, r0, lsl #2
   200c8:	andeq	r0, r2, r0, lsl #2
   200cc:	andeq	r0, r2, ip, lsr r1
   200d0:	andeq	r0, r2, r0, lsr #2
   200d4:	andeq	r0, r2, r0, lsr #2
   200d8:	ldr	r0, [r0, #40]	; 0x28
   200dc:	ldr	r1, [r1, #16]
   200e0:	add	r0, r0, #172	; 0xac
   200e4:	bl	27230 <ptr_set_find_item@@Base>
   200e8:	cmp	r0, #0
   200ec:	movne	r3, r9
   200f0:	bne	20024 <__flatcc_fb_gen_c_verifier@@Base+0x2440>
   200f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   200f8:	mov	r6, sl
   200fc:	b	20088 <__flatcc_fb_gen_c_verifier@@Base+0x24a4>
   20100:	ldr	r3, [r7, #28]
   20104:	str	r9, [r3]
   20108:	ldr	r3, [r7, #28]
   2010c:	str	sl, [r3, #4]
   20110:	ldr	r3, [r7, #28]
   20114:	add	r3, r3, #8
   20118:	str	r3, [r7, #28]
   2011c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20120:	ldr	r3, [r7, #32]
   20124:	str	r9, [r3]
   20128:	ldr	r3, [r7, #32]
   2012c:	str	sl, [r3, #4]
   20130:	ldr	r3, [r7, #32]
   20134:	add	r3, r3, #8
   20138:	str	r3, [r7, #32]
   2013c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20144:	sub	sp, sp, #12
   20148:	ldr	r3, [r0, #20]
   2014c:	cmp	r3, #0
   20150:	beq	2022c <__flatcc_fb_gen_c_verifier@@Base+0x2648>
   20154:	mov	ip, #0
   20158:	mov	r6, ip
   2015c:	b	201f8 <__flatcc_fb_gen_c_verifier@@Base+0x2614>
   20160:	str	r6, [r1]
   20164:	cmp	r6, #0
   20168:	moveq	r8, #0
   2016c:	beq	201c8 <__flatcc_fb_gen_c_verifier@@Base+0x25e4>
   20170:	mov	r4, r0
   20174:	str	r6, [sp, #4]
   20178:	lsl	r6, r6, #4
   2017c:	add	r0, ip, r6
   20180:	bl	13f3c <malloc@plt>
   20184:	subs	r8, r0, #0
   20188:	beq	201c8 <__flatcc_fb_gen_c_verifier@@Base+0x25e4>
   2018c:	add	r6, r8, r6
   20190:	ldr	r4, [r4, #20]
   20194:	cmp	r4, #0
   20198:	beq	201b4 <__flatcc_fb_gen_c_verifier@@Base+0x25d0>
   2019c:	mov	r5, r8
   201a0:	mov	r2, #0
   201a4:	mov	r7, r2
   201a8:	ldr	r9, [pc, #340]	; 20304 <__flatcc_fb_gen_c_verifier@@Base+0x2720>
   201ac:	mov	fp, #1
   201b0:	b	202a4 <__flatcc_fb_gen_c_verifier@@Base+0x26c0>
   201b4:	ldr	r3, [pc, #332]	; 20308 <__flatcc_fb_gen_c_verifier@@Base+0x2724>
   201b8:	mov	r2, #16
   201bc:	ldr	r1, [sp, #4]
   201c0:	mov	r0, r8
   201c4:	bl	14008 <qsort@plt>
   201c8:	mov	r0, r8
   201cc:	add	sp, sp, #12
   201d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   201d4:	add	r6, r6, #1
   201d8:	ldr	r2, [r3, #4]
   201dc:	ldr	r2, [r2, #4]
   201e0:	add	r2, r2, #6
   201e4:	add	ip, ip, r2
   201e8:	add	r6, r6, #1
   201ec:	ldr	r3, [r3]
   201f0:	cmp	r3, #0
   201f4:	beq	20160 <__flatcc_fb_gen_c_verifier@@Base+0x257c>
   201f8:	ldrh	r2, [r3, #72]	; 0x48
   201fc:	tst	r2, #4
   20200:	bne	201ec <__flatcc_fb_gen_c_verifier@@Base+0x2608>
   20204:	ldrh	r2, [r3, #24]
   20208:	sub	r2, r2, #14
   2020c:	uxth	r2, r2
   20210:	cmp	r2, #1
   20214:	bhi	201e8 <__flatcc_fb_gen_c_verifier@@Base+0x2604>
   20218:	ldr	r2, [r3, #16]
   2021c:	ldrh	r2, [r2, #8]
   20220:	cmp	r2, #4
   20224:	bne	201e8 <__flatcc_fb_gen_c_verifier@@Base+0x2604>
   20228:	b	201d4 <__flatcc_fb_gen_c_verifier@@Base+0x25f0>
   2022c:	mov	r8, #0
   20230:	str	r8, [r1]
   20234:	b	201c8 <__flatcc_fb_gen_c_verifier@@Base+0x25e4>
   20238:	add	sl, r2, #1
   2023c:	str	r2, [r4, #112]	; 0x70
   20240:	ldr	r3, [r4, #4]
   20244:	ldr	r3, [r3, #4]
   20248:	add	r3, r3, #5
   2024c:	str	r3, [r5, #20]
   20250:	str	r6, [r5, #16]
   20254:	ldr	r3, [r4, #4]
   20258:	ldr	r2, [r3, #4]
   2025c:	ldr	r1, [r3]
   20260:	mov	r0, r6
   20264:	bl	13edc <memcpy@plt>
   20268:	ldr	r3, [r4, #4]
   2026c:	ldr	r2, [r3, #4]
   20270:	add	r3, r6, r2
   20274:	ldr	r0, [r9]
   20278:	str	r0, [r6, r2]
   2027c:	ldrh	r2, [r9, #4]
   20280:	strh	r2, [r3, #4]
   20284:	add	r6, r3, #6
   20288:	str	r4, [r5, #24]
   2028c:	str	fp, [r5, #28]
   20290:	add	r5, r5, #32
   20294:	mov	r2, sl
   20298:	ldr	r4, [r4]
   2029c:	cmp	r4, #0
   202a0:	beq	201b4 <__flatcc_fb_gen_c_verifier@@Base+0x25d0>
   202a4:	ldrh	r3, [r4, #72]	; 0x48
   202a8:	tst	r3, #4
   202ac:	bne	20298 <__flatcc_fb_gen_c_verifier@@Base+0x26b4>
   202b0:	ldr	r3, [r4, #4]
   202b4:	ldr	r3, [r3]
   202b8:	str	r3, [r5]
   202bc:	ldr	r3, [r4, #4]
   202c0:	ldr	r3, [r3, #4]
   202c4:	str	r3, [r5, #4]
   202c8:	str	r4, [r5, #8]
   202cc:	str	r7, [r5, #12]
   202d0:	add	r1, r5, #16
   202d4:	ldrh	r3, [r4, #24]
   202d8:	sub	r3, r3, #14
   202dc:	uxth	r3, r3
   202e0:	cmp	r3, #1
   202e4:	movhi	r5, r1
   202e8:	bhi	20298 <__flatcc_fb_gen_c_verifier@@Base+0x26b4>
   202ec:	ldr	r3, [r4, #16]
   202f0:	ldrh	r3, [r3, #8]
   202f4:	cmp	r3, #4
   202f8:	movne	r5, r1
   202fc:	bne	20298 <__flatcc_fb_gen_c_verifier@@Base+0x26b4>
   20300:	b	20238 <__flatcc_fb_gen_c_verifier@@Base+0x2654>
   20304:	andeq	r2, r5, r8, asr #24
   20308:			; <UNDEFINED> instruction: 0x0001fdbc
   2030c:	push	{r4, lr}
   20310:	ldr	r1, [r1, #4]
   20314:	ldr	r0, [r0, #4]
   20318:	bl	13eb8 <strcmp@plt>
   2031c:	pop	{r4, pc}
   20320:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20324:	sub	sp, sp, #84	; 0x54
   20328:	mov	r9, r0
   2032c:	str	r1, [sp, #12]
   20330:	mov	r8, r2
   20334:	mov	sl, r3
   20338:	ldr	fp, [sp, #120]	; 0x78
   2033c:	mov	r2, #0
   20340:	mov	r3, #0
   20344:	strd	r2, [sp, #72]	; 0x48
   20348:	strd	r2, [sp, #64]	; 0x40
   2034c:	ldr	r3, [pc, #2056]	; 20b5c <__flatcc_fb_gen_c_verifier@@Base+0x2f78>
   20350:	str	r3, [sp, #60]	; 0x3c
   20354:	mov	r3, #0
   20358:	str	r3, [sp, #56]	; 0x38
   2035c:	ldr	r5, [r1]
   20360:	lsl	r3, r8, #4
   20364:	str	r3, [sp, #20]
   20368:	add	r3, r5, r3
   2036c:	ldr	r3, [r3, #4]
   20370:	add	r2, fp, #8
   20374:	str	r2, [sp, #16]
   20378:	cmp	r3, r2
   2037c:	blt	2038c <__flatcc_fb_gen_c_verifier@@Base+0x27a8>
   20380:	sub	r3, r3, fp
   20384:	cmp	r3, #8
   20388:	bne	203a0 <__flatcc_fb_gen_c_verifier@@Base+0x27bc>
   2038c:	cmp	r8, sl
   20390:	beq	20538 <__flatcc_fb_gen_c_verifier@@Base+0x2954>
   20394:	add	r3, r8, #1
   20398:	cmp	sl, r3
   2039c:	beq	20518 <__flatcc_fb_gen_c_verifier@@Base+0x2934>
   203a0:	sub	r4, sl, r8
   203a4:	add	r4, r4, r4, lsr #31
   203a8:	add	r4, r8, r4, asr #1
   203ac:	mov	r2, #0
   203b0:	mov	r3, #0
   203b4:	strd	r2, [sp, #24]
   203b8:	strd	r2, [sp, #32]
   203bc:	strd	r2, [sp, #40]	; 0x28
   203c0:	strd	r2, [sp, #48]	; 0x30
   203c4:	cmp	r8, r4
   203c8:	bge	2044c <__flatcc_fb_gen_c_verifier@@Base+0x2868>
   203cc:	add	r5, r5, r4, lsl #4
   203d0:	mov	r7, r4
   203d4:	mov	r6, #0
   203d8:	str	r6, [sp, #4]
   203dc:	str	r6, [sp]
   203e0:	add	r3, sp, #40	; 0x28
   203e4:	add	r2, sp, #24
   203e8:	mov	r1, fp
   203ec:	sub	r0, r5, #16
   203f0:	bl	1df0c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   203f4:	str	r6, [sp, #4]
   203f8:	str	r6, [sp]
   203fc:	add	r3, sp, #48	; 0x30
   20400:	add	r2, sp, #32
   20404:	mov	r1, fp
   20408:	mov	r0, r5
   2040c:	bl	1df0c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   20410:	ldrd	r0, [sp, #32]
   20414:	ldrd	r2, [sp, #24]
   20418:	eor	r2, r2, r0
   2041c:	eor	r3, r3, r1
   20420:	ldrd	r0, [sp, #40]	; 0x28
   20424:	and	r0, r0, r2
   20428:	and	r1, r1, r3
   2042c:	mov	r2, r0
   20430:	mov	r3, r1
   20434:	orrs	r3, r2, r3
   20438:	bne	2055c <__flatcc_fb_gen_c_verifier@@Base+0x2978>
   2043c:	sub	r7, r7, #1
   20440:	sub	r5, r5, #16
   20444:	cmp	r8, r7
   20448:	bne	203d8 <__flatcc_fb_gen_c_verifier@@Base+0x27f4>
   2044c:	ldr	r3, [sp, #12]
   20450:	ldr	r5, [r3]
   20454:	mov	r2, #0
   20458:	mov	r3, #0
   2045c:	strd	r2, [sp, #24]
   20460:	strd	r2, [sp, #32]
   20464:	strd	r2, [sp, #40]	; 0x28
   20468:	strd	r2, [sp, #48]	; 0x30
   2046c:	cmp	sl, r4
   20470:	ble	204f0 <__flatcc_fb_gen_c_verifier@@Base+0x290c>
   20474:	add	r5, r5, r4, lsl #4
   20478:	mov	r6, #0
   2047c:	str	r6, [sp, #4]
   20480:	str	r6, [sp]
   20484:	add	r3, sp, #40	; 0x28
   20488:	add	r2, sp, #24
   2048c:	mov	r1, fp
   20490:	mov	r0, r5
   20494:	bl	1df0c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   20498:	add	r5, r5, #16
   2049c:	str	r6, [sp, #4]
   204a0:	str	r6, [sp]
   204a4:	add	r3, sp, #48	; 0x30
   204a8:	add	r2, sp, #32
   204ac:	mov	r1, fp
   204b0:	mov	r0, r5
   204b4:	bl	1df0c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   204b8:	ldrd	r0, [sp, #32]
   204bc:	ldrd	r2, [sp, #24]
   204c0:	eor	r2, r2, r0
   204c4:	eor	r3, r3, r1
   204c8:	ldrd	r0, [sp, #40]	; 0x28
   204cc:	and	r0, r0, r2
   204d0:	and	r1, r1, r3
   204d4:	mov	r2, r0
   204d8:	mov	r3, r1
   204dc:	orrs	r3, r2, r3
   204e0:	bne	20678 <__flatcc_fb_gen_c_verifier@@Base+0x2a94>
   204e4:	add	r4, r4, #1
   204e8:	cmp	sl, r4
   204ec:	bne	2047c <__flatcc_fb_gen_c_verifier@@Base+0x2898>
   204f0:	add	r7, r4, #1
   204f4:	ldr	r3, [sp, #12]
   204f8:	ldr	r0, [r3]
   204fc:	cmp	r8, r4
   20500:	bgt	209f0 <__flatcc_fb_gen_c_verifier@@Base+0x2e0c>
   20504:	ldr	r3, [sp, #20]
   20508:	add	r2, r0, r3
   2050c:	mov	r5, r8
   20510:	ldr	r1, [sp, #16]
   20514:	b	20690 <__flatcc_fb_gen_c_verifier@@Base+0x2aac>
   20518:	add	r3, r5, sl, lsl #4
   2051c:	ldr	r3, [r3, #4]
   20520:	ldr	r2, [sp, #16]
   20524:	cmp	r2, r3
   20528:	bgt	20538 <__flatcc_fb_gen_c_verifier@@Base+0x2954>
   2052c:	sub	r3, r3, fp
   20530:	cmp	r3, #8
   20534:	bne	203a0 <__flatcc_fb_gen_c_verifier@@Base+0x27bc>
   20538:	mov	r3, #0
   2053c:	str	r3, [sp, #4]
   20540:	str	fp, [sp]
   20544:	mov	r3, sl
   20548:	mov	r2, r8
   2054c:	ldr	r1, [sp, #12]
   20550:	mov	r0, r9
   20554:	bl	1e104 <__flatcc_fb_gen_c_verifier@@Base+0x520>
   20558:	b	20648 <__flatcc_fb_gen_c_verifier@@Base+0x2a64>
   2055c:	cmp	r8, r7
   20560:	bge	2044c <__flatcc_fb_gen_c_verifier@@Base+0x2868>
   20564:	ldr	r4, [sp, #12]
   20568:	ldr	r0, [r4]
   2056c:	add	r3, sp, #56	; 0x38
   20570:	str	r3, [sp, #4]
   20574:	add	r3, sp, #60	; 0x3c
   20578:	str	r3, [sp]
   2057c:	add	r3, sp, #64	; 0x40
   20580:	add	r2, sp, #72	; 0x48
   20584:	mov	r1, fp
   20588:	add	r0, r0, r7, lsl #4
   2058c:	bl	1df0c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   20590:	ldr	r3, [sp, #60]	; 0x3c
   20594:	str	r3, [sp, #4]
   20598:	ldr	r3, [sp, #56]	; 0x38
   2059c:	str	r3, [sp]
   205a0:	ldrd	r2, [sp, #72]	; 0x48
   205a4:	ldr	r1, [pc, #1460]	; 20b60 <__flatcc_fb_gen_c_verifier@@Base+0x2f7c>
   205a8:	mov	r0, r9
   205ac:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   205b0:	ldr	r3, [r9, #220]	; 0xdc
   205b4:	add	r3, r3, #1
   205b8:	str	r3, [r9, #220]	; 0xdc
   205bc:	str	fp, [sp]
   205c0:	sub	r3, r7, #1
   205c4:	mov	r2, r8
   205c8:	mov	r1, r4
   205cc:	mov	r0, r9
   205d0:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   205d4:	ldr	r3, [r9, #220]	; 0xdc
   205d8:	cmp	r3, #0
   205dc:	beq	20650 <__flatcc_fb_gen_c_verifier@@Base+0x2a6c>
   205e0:	sub	r3, r3, #1
   205e4:	str	r3, [r9, #220]	; 0xdc
   205e8:	ldr	r3, [sp, #60]	; 0x3c
   205ec:	ldr	r2, [sp, #56]	; 0x38
   205f0:	ldr	r1, [pc, #1388]	; 20b64 <__flatcc_fb_gen_c_verifier@@Base+0x2f80>
   205f4:	mov	r0, r9
   205f8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   205fc:	ldr	r3, [r9, #220]	; 0xdc
   20600:	add	r3, r3, #1
   20604:	str	r3, [r9, #220]	; 0xdc
   20608:	str	fp, [sp]
   2060c:	mov	r3, sl
   20610:	mov	r2, r7
   20614:	ldr	r1, [sp, #12]
   20618:	mov	r0, r9
   2061c:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   20620:	ldr	r3, [r9, #220]	; 0xdc
   20624:	cmp	r3, #0
   20628:	beq	20664 <__flatcc_fb_gen_c_verifier@@Base+0x2a80>
   2062c:	sub	r3, r3, #1
   20630:	str	r3, [r9, #220]	; 0xdc
   20634:	ldr	r3, [sp, #60]	; 0x3c
   20638:	ldr	r2, [sp, #56]	; 0x38
   2063c:	ldr	r1, [pc, #1316]	; 20b68 <__flatcc_fb_gen_c_verifier@@Base+0x2f84>
   20640:	mov	r0, r9
   20644:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20648:	add	sp, sp, #84	; 0x54
   2064c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20650:	ldr	r3, [pc, #1300]	; 20b6c <__flatcc_fb_gen_c_verifier@@Base+0x2f88>
   20654:	ldr	r2, [pc, #1300]	; 20b70 <__flatcc_fb_gen_c_verifier@@Base+0x2f8c>
   20658:	ldr	r1, [pc, #1300]	; 20b74 <__flatcc_fb_gen_c_verifier@@Base+0x2f90>
   2065c:	ldr	r0, [pc, #1300]	; 20b78 <__flatcc_fb_gen_c_verifier@@Base+0x2f94>
   20660:	bl	14038 <__assert_fail@plt>
   20664:	ldr	r3, [pc, #1280]	; 20b6c <__flatcc_fb_gen_c_verifier@@Base+0x2f88>
   20668:	ldr	r2, [pc, #1292]	; 20b7c <__flatcc_fb_gen_c_verifier@@Base+0x2f98>
   2066c:	ldr	r1, [pc, #1280]	; 20b74 <__flatcc_fb_gen_c_verifier@@Base+0x2f90>
   20670:	ldr	r0, [pc, #1280]	; 20b78 <__flatcc_fb_gen_c_verifier@@Base+0x2f94>
   20674:	bl	14038 <__assert_fail@plt>
   20678:	add	r7, r4, #1
   2067c:	b	204f4 <__flatcc_fb_gen_c_verifier@@Base+0x2910>
   20680:	add	r5, r5, #1
   20684:	add	r2, r2, #16
   20688:	cmp	r4, r5
   2068c:	blt	206ac <__flatcc_fb_gen_c_verifier@@Base+0x2ac8>
   20690:	ldr	r3, [r2, #4]
   20694:	cmp	r1, r3
   20698:	bgt	20680 <__flatcc_fb_gen_c_verifier@@Base+0x2a9c>
   2069c:	sub	r3, r3, fp
   206a0:	sub	r3, r3, #8
   206a4:	cmp	r3, #0
   206a8:	ble	20680 <__flatcc_fb_gen_c_verifier@@Base+0x2a9c>
   206ac:	cmp	r7, r5
   206b0:	ble	208e8 <__flatcc_fb_gen_c_verifier@@Base+0x2d04>
   206b4:	cmp	r8, r5
   206b8:	bge	20a04 <__flatcc_fb_gen_c_verifier@@Base+0x2e20>
   206bc:	sub	r6, r5, #-268435455	; 0xf0000001
   206c0:	lsl	r6, r6, #4
   206c4:	add	r3, r0, r6
   206c8:	ldr	r3, [r3, #4]
   206cc:	ldr	r2, [sp, #16]
   206d0:	cmp	r2, r3
   206d4:	blt	20a90 <__flatcc_fb_gen_c_verifier@@Base+0x2eac>
   206d8:	sub	r3, r3, fp
   206dc:	str	r3, [sp, #20]
   206e0:	add	ip, r6, #16
   206e4:	add	r3, sp, #56	; 0x38
   206e8:	str	r3, [sp, #4]
   206ec:	add	r3, sp, #60	; 0x3c
   206f0:	str	r3, [sp]
   206f4:	add	r3, sp, #64	; 0x40
   206f8:	add	r2, sp, #72	; 0x48
   206fc:	mov	r1, fp
   20700:	add	r0, r0, ip
   20704:	bl	1df0c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   20708:	ldr	r3, [sp, #60]	; 0x3c
   2070c:	str	r3, [sp, #4]
   20710:	ldr	r3, [sp, #56]	; 0x38
   20714:	str	r3, [sp]
   20718:	ldrd	r2, [sp, #72]	; 0x48
   2071c:	ldr	r1, [pc, #1116]	; 20b80 <__flatcc_fb_gen_c_verifier@@Base+0x2f9c>
   20720:	mov	r0, r9
   20724:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20728:	ldr	r3, [r9, #220]	; 0xdc
   2072c:	add	r3, r3, #1
   20730:	str	r3, [r9, #220]	; 0xdc
   20734:	ldr	r3, [sp, #20]
   20738:	cmp	r3, #8
   2073c:	bne	20ae4 <__flatcc_fb_gen_c_verifier@@Base+0x2f00>
   20740:	ldr	r3, [sp, #60]	; 0x3c
   20744:	ldr	r2, [sp, #56]	; 0x38
   20748:	ldr	r1, [pc, #1076]	; 20b84 <__flatcc_fb_gen_c_verifier@@Base+0x2fa0>
   2074c:	mov	r0, r9
   20750:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20754:	ldr	r0, [sp, #12]
   20758:	ldr	r3, [r0]
   2075c:	add	r6, r3, r6
   20760:	ldr	r3, [r6, #12]
   20764:	ldr	r2, [r6, #8]
   20768:	ldr	r1, [r0, #12]
   2076c:	str	r1, [sp, #20]
   20770:	mov	r1, #8
   20774:	str	r1, [sp]
   20778:	ldr	r6, [r0, #4]
   2077c:	ldr	r1, [sp, #20]
   20780:	mov	r0, r9
   20784:	blx	r6
   20788:	ldr	r3, [sp, #60]	; 0x3c
   2078c:	ldr	r2, [sp, #56]	; 0x38
   20790:	ldr	r1, [pc, #1008]	; 20b88 <__flatcc_fb_gen_c_verifier@@Base+0x2fa4>
   20794:	mov	r0, r9
   20798:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2079c:	ldr	r1, [pc, #1000]	; 20b8c <__flatcc_fb_gen_c_verifier@@Base+0x2fa8>
   207a0:	mov	r0, r9
   207a4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   207a8:	ldr	r1, [pc, #992]	; 20b90 <__flatcc_fb_gen_c_verifier@@Base+0x2fac>
   207ac:	mov	r0, r9
   207b0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   207b4:	ldr	r2, [sp, #16]
   207b8:	str	r2, [sp]
   207bc:	mov	r3, r4
   207c0:	mov	r2, r5
   207c4:	ldr	r1, [sp, #12]
   207c8:	mov	r0, r9
   207cc:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   207d0:	ldr	r3, [r9, #220]	; 0xdc
   207d4:	cmp	r3, #0
   207d8:	beq	208c0 <__flatcc_fb_gen_c_verifier@@Base+0x2cdc>
   207dc:	sub	r3, r3, #1
   207e0:	str	r3, [r9, #220]	; 0xdc
   207e4:	ldr	r3, [sp, #60]	; 0x3c
   207e8:	ldr	r2, [sp, #56]	; 0x38
   207ec:	ldr	r1, [pc, #928]	; 20b94 <__flatcc_fb_gen_c_verifier@@Base+0x2fb0>
   207f0:	mov	r0, r9
   207f4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   207f8:	str	r5, [sp, #16]
   207fc:	sub	r5, r5, #1
   20800:	ldr	r3, [r9, #220]	; 0xdc
   20804:	cmp	r3, #0
   20808:	beq	208d4 <__flatcc_fb_gen_c_verifier@@Base+0x2cf0>
   2080c:	sub	r3, r3, #1
   20810:	str	r3, [r9, #220]	; 0xdc
   20814:	ldr	r3, [sp, #60]	; 0x3c
   20818:	ldr	r2, [sp, #56]	; 0x38
   2081c:	ldr	r1, [pc, #884]	; 20b98 <__flatcc_fb_gen_c_verifier@@Base+0x2fb4>
   20820:	mov	r0, r9
   20824:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20828:	ldr	r3, [r9, #220]	; 0xdc
   2082c:	add	r3, r3, #1
   20830:	str	r3, [r9, #220]	; 0xdc
   20834:	cmp	sl, r7
   20838:	cmpge	r5, r8
   2083c:	movgt	r6, #1
   20840:	movle	r6, #0
   20844:	ble	208f0 <__flatcc_fb_gen_c_verifier@@Base+0x2d0c>
   20848:	ldr	r3, [sp, #12]
   2084c:	ldr	r4, [r3, #24]
   20850:	add	r4, r4, #1
   20854:	str	r4, [r3, #24]
   20858:	cmp	r5, r8
   2085c:	bgt	20b20 <__flatcc_fb_gen_c_verifier@@Base+0x2f3c>
   20860:	cmp	sl, r7
   20864:	blt	20900 <__flatcc_fb_gen_c_verifier@@Base+0x2d1c>
   20868:	str	fp, [sp]
   2086c:	mov	r3, sl
   20870:	mov	r2, r7
   20874:	ldr	r1, [sp, #12]
   20878:	mov	r0, r9
   2087c:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   20880:	cmp	r6, #0
   20884:	beq	20908 <__flatcc_fb_gen_c_verifier@@Base+0x2d24>
   20888:	ldr	r3, [r9, #220]	; 0xdc
   2088c:	str	r3, [r9, #228]	; 0xe4
   20890:	mov	r3, #0
   20894:	str	r3, [r9, #220]	; 0xdc
   20898:	mov	r2, r4
   2089c:	ldr	r1, [pc, #760]	; 20b9c <__flatcc_fb_gen_c_verifier@@Base+0x2fb8>
   208a0:	mov	r0, r9
   208a4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   208a8:	ldr	r3, [r9, #228]	; 0xe4
   208ac:	str	r3, [r9, #220]	; 0xdc
   208b0:	ldr	r1, [pc, #744]	; 20ba0 <__flatcc_fb_gen_c_verifier@@Base+0x2fbc>
   208b4:	mov	r0, r9
   208b8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   208bc:	b	20908 <__flatcc_fb_gen_c_verifier@@Base+0x2d24>
   208c0:	ldr	r3, [pc, #676]	; 20b6c <__flatcc_fb_gen_c_verifier@@Base+0x2f88>
   208c4:	mov	r2, #1040	; 0x410
   208c8:	ldr	r1, [pc, #676]	; 20b74 <__flatcc_fb_gen_c_verifier@@Base+0x2f90>
   208cc:	ldr	r0, [pc, #676]	; 20b78 <__flatcc_fb_gen_c_verifier@@Base+0x2f94>
   208d0:	bl	14038 <__assert_fail@plt>
   208d4:	ldr	r3, [pc, #656]	; 20b6c <__flatcc_fb_gen_c_verifier@@Base+0x2f88>
   208d8:	ldr	r2, [pc, #708]	; 20ba4 <__flatcc_fb_gen_c_verifier@@Base+0x2fc0>
   208dc:	ldr	r1, [pc, #656]	; 20b74 <__flatcc_fb_gen_c_verifier@@Base+0x2f90>
   208e0:	ldr	r0, [pc, #656]	; 20b78 <__flatcc_fb_gen_c_verifier@@Base+0x2f94>
   208e4:	bl	14038 <__assert_fail@plt>
   208e8:	str	r5, [sp, #16]
   208ec:	b	20834 <__flatcc_fb_gen_c_verifier@@Base+0x2c50>
   208f0:	cmp	r5, r8
   208f4:	bgt	20940 <__flatcc_fb_gen_c_verifier@@Base+0x2d5c>
   208f8:	cmp	sl, r7
   208fc:	bge	20b40 <__flatcc_fb_gen_c_verifier@@Base+0x2f5c>
   20900:	cmp	r5, r8
   20904:	ble	209c8 <__flatcc_fb_gen_c_verifier@@Base+0x2de4>
   20908:	ldr	r3, [sp, #16]
   2090c:	cmp	r7, r3
   20910:	ble	20648 <__flatcc_fb_gen_c_verifier@@Base+0x2a64>
   20914:	ldr	r3, [r9, #220]	; 0xdc
   20918:	cmp	r3, #0
   2091c:	beq	209dc <__flatcc_fb_gen_c_verifier@@Base+0x2df8>
   20920:	sub	r3, r3, #1
   20924:	str	r3, [r9, #220]	; 0xdc
   20928:	ldr	r3, [sp, #60]	; 0x3c
   2092c:	ldr	r2, [sp, #56]	; 0x38
   20930:	ldr	r1, [pc, #624]	; 20ba8 <__flatcc_fb_gen_c_verifier@@Base+0x2fc4>
   20934:	mov	r0, r9
   20938:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2093c:	b	20648 <__flatcc_fb_gen_c_verifier@@Base+0x2a64>
   20940:	mov	r3, #0
   20944:	str	r3, [sp, #4]
   20948:	str	fp, [sp]
   2094c:	sub	r3, r5, #1
   20950:	mov	r2, r8
   20954:	ldr	r1, [sp, #12]
   20958:	mov	r0, r9
   2095c:	bl	1e104 <__flatcc_fb_gen_c_verifier@@Base+0x520>
   20960:	cmp	r6, #0
   20964:	beq	208f8 <__flatcc_fb_gen_c_verifier@@Base+0x2d14>
   20968:	mov	r4, #0
   2096c:	mov	r2, r4
   20970:	ldr	r1, [pc, #564]	; 20bac <__flatcc_fb_gen_c_verifier@@Base+0x2fc8>
   20974:	mov	r0, r9
   20978:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2097c:	ldr	r3, [r9, #220]	; 0xdc
   20980:	str	r3, [r9, #228]	; 0xe4
   20984:	mov	r3, #0
   20988:	str	r3, [r9, #220]	; 0xdc
   2098c:	mov	r2, r4
   20990:	ldr	r1, [pc, #536]	; 20bb0 <__flatcc_fb_gen_c_verifier@@Base+0x2fcc>
   20994:	mov	r0, r9
   20998:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2099c:	ldr	r3, [r9, #228]	; 0xe4
   209a0:	str	r3, [r9, #220]	; 0xdc
   209a4:	cmp	sl, r7
   209a8:	blt	20900 <__flatcc_fb_gen_c_verifier@@Base+0x2d1c>
   209ac:	str	fp, [sp]
   209b0:	mov	r3, sl
   209b4:	mov	r2, r7
   209b8:	ldr	r1, [sp, #12]
   209bc:	mov	r0, r9
   209c0:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   209c4:	b	20888 <__flatcc_fb_gen_c_verifier@@Base+0x2ca4>
   209c8:	ldr	r3, [sp, #12]
   209cc:	ldr	r3, [r3, #8]
   209d0:	mov	r0, r9
   209d4:	blx	r3
   209d8:	b	20908 <__flatcc_fb_gen_c_verifier@@Base+0x2d24>
   209dc:	ldr	r3, [pc, #392]	; 20b6c <__flatcc_fb_gen_c_verifier@@Base+0x2f88>
   209e0:	mov	r2, #1072	; 0x430
   209e4:	ldr	r1, [pc, #392]	; 20b74 <__flatcc_fb_gen_c_verifier@@Base+0x2f90>
   209e8:	ldr	r0, [pc, #392]	; 20b78 <__flatcc_fb_gen_c_verifier@@Base+0x2f94>
   209ec:	bl	14038 <__assert_fail@plt>
   209f0:	cmp	r8, r7
   209f4:	strge	r8, [sp, #16]
   209f8:	movge	r5, r8
   209fc:	bge	20834 <__flatcc_fb_gen_c_verifier@@Base+0x2c50>
   20a00:	mov	r5, r8
   20a04:	add	r3, sp, #56	; 0x38
   20a08:	str	r3, [sp, #4]
   20a0c:	add	r3, sp, #60	; 0x3c
   20a10:	str	r3, [sp]
   20a14:	add	r3, sp, #64	; 0x40
   20a18:	add	r2, sp, #72	; 0x48
   20a1c:	mov	r1, fp
   20a20:	add	r0, r0, r5, lsl #4
   20a24:	bl	1df0c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   20a28:	ldr	r3, [sp, #60]	; 0x3c
   20a2c:	str	r3, [sp, #4]
   20a30:	ldr	r3, [sp, #56]	; 0x38
   20a34:	str	r3, [sp]
   20a38:	ldrd	r2, [sp, #72]	; 0x48
   20a3c:	ldr	r1, [pc, #316]	; 20b80 <__flatcc_fb_gen_c_verifier@@Base+0x2f9c>
   20a40:	mov	r0, r9
   20a44:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20a48:	ldr	r3, [r9, #220]	; 0xdc
   20a4c:	add	r3, r3, #1
   20a50:	str	r3, [r9, #220]	; 0xdc
   20a54:	ldr	r1, [pc, #304]	; 20b8c <__flatcc_fb_gen_c_verifier@@Base+0x2fa8>
   20a58:	mov	r0, r9
   20a5c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20a60:	ldr	r1, [pc, #296]	; 20b90 <__flatcc_fb_gen_c_verifier@@Base+0x2fac>
   20a64:	mov	r0, r9
   20a68:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20a6c:	ldr	r3, [sp, #16]
   20a70:	str	r3, [sp]
   20a74:	mov	r3, r4
   20a78:	mov	r2, r5
   20a7c:	ldr	r1, [sp, #12]
   20a80:	mov	r0, r9
   20a84:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   20a88:	str	r5, [sp, #16]
   20a8c:	b	20800 <__flatcc_fb_gen_c_verifier@@Base+0x2c1c>
   20a90:	add	r6, r6, #16
   20a94:	add	r3, sp, #56	; 0x38
   20a98:	str	r3, [sp, #4]
   20a9c:	add	r3, sp, #60	; 0x3c
   20aa0:	str	r3, [sp]
   20aa4:	add	r3, sp, #64	; 0x40
   20aa8:	add	r2, sp, #72	; 0x48
   20aac:	mov	r1, fp
   20ab0:	add	r0, r0, r6
   20ab4:	bl	1df0c <__flatcc_fb_gen_c_verifier@@Base+0x328>
   20ab8:	ldr	r3, [sp, #60]	; 0x3c
   20abc:	str	r3, [sp, #4]
   20ac0:	ldr	r3, [sp, #56]	; 0x38
   20ac4:	str	r3, [sp]
   20ac8:	ldrd	r2, [sp, #72]	; 0x48
   20acc:	ldr	r1, [pc, #172]	; 20b80 <__flatcc_fb_gen_c_verifier@@Base+0x2f9c>
   20ad0:	mov	r0, r9
   20ad4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20ad8:	ldr	r3, [r9, #220]	; 0xdc
   20adc:	add	r3, r3, #1
   20ae0:	str	r3, [r9, #220]	; 0xdc
   20ae4:	ldr	r1, [pc, #160]	; 20b8c <__flatcc_fb_gen_c_verifier@@Base+0x2fa8>
   20ae8:	mov	r0, r9
   20aec:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20af0:	ldr	r1, [pc, #152]	; 20b90 <__flatcc_fb_gen_c_verifier@@Base+0x2fac>
   20af4:	mov	r0, r9
   20af8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20afc:	ldr	r3, [sp, #16]
   20b00:	str	r3, [sp]
   20b04:	mov	r3, r4
   20b08:	mov	r2, r5
   20b0c:	ldr	r1, [sp, #12]
   20b10:	mov	r0, r9
   20b14:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   20b18:	str	r5, [sp, #16]
   20b1c:	b	20800 <__flatcc_fb_gen_c_verifier@@Base+0x2c1c>
   20b20:	str	r4, [sp, #4]
   20b24:	str	fp, [sp]
   20b28:	sub	r3, r5, #1
   20b2c:	mov	r2, r8
   20b30:	ldr	r1, [sp, #12]
   20b34:	mov	r0, r9
   20b38:	bl	1e104 <__flatcc_fb_gen_c_verifier@@Base+0x520>
   20b3c:	b	2096c <__flatcc_fb_gen_c_verifier@@Base+0x2d88>
   20b40:	str	fp, [sp]
   20b44:	mov	r3, sl
   20b48:	mov	r2, r7
   20b4c:	ldr	r1, [sp, #12]
   20b50:	mov	r0, r9
   20b54:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   20b58:	b	20908 <__flatcc_fb_gen_c_verifier@@Base+0x2d24>
   20b5c:	andeq	r5, r4, r0, lsr #2
   20b60:	andeq	pc, r4, ip, lsl r3	; <UNPREDICTABLE>
   20b64:	andeq	pc, r4, r4, asr #6
   20b68:	andeq	pc, r4, r4, ror #6
   20b6c:	andeq	lr, r4, r8, lsl #1
   20b70:	andeq	r0, r0, sp, asr #7
   20b74:	andeq	lr, r4, r0, lsl r2
   20b78:	andeq	lr, r4, r8, ror #4
   20b7c:	andeq	r0, r0, pc, asr #7
   20b80:	andeq	pc, r4, ip, ror r3	; <UNPREDICTABLE>
   20b84:	andeq	pc, r4, r4, lsr #7
   20b88:	andeq	pc, r4, r4, asr #7
   20b8c:	andeq	pc, r4, r0, ror #7
   20b90:	andeq	pc, r4, ip, ror #7
   20b94:	andeq	pc, r4, ip, lsl r4	; <UNPREDICTABLE>
   20b98:	andeq	pc, r4, ip, lsr r4	; <UNPREDICTABLE>
   20b9c:	andeq	pc, r4, ip, ror r4	; <UNPREDICTABLE>
   20ba0:	andeq	pc, r4, ip, lsl #9
   20ba4:	andeq	r0, r0, r4, lsl r4
   20ba8:	muleq	r4, r8, r4
   20bac:	andeq	pc, r4, ip, asr r4	; <UNPREDICTABLE>
   20bb0:	andeq	pc, r4, r0, ror r4	; <UNPREDICTABLE>
   20bb4:	push	{r4, r5, r6, r7, lr}
   20bb8:	sub	sp, sp, #260	; 0x104
   20bbc:	mov	r4, r0
   20bc0:	mov	r6, r1
   20bc4:	mov	r5, #0
   20bc8:	str	r5, [sp, #228]	; 0xe4
   20bcc:	str	r5, [sp, #232]	; 0xe8
   20bd0:	str	r5, [sp, #236]	; 0xec
   20bd4:	str	r5, [sp, #240]	; 0xf0
   20bd8:	str	r5, [sp, #244]	; 0xf4
   20bdc:	str	r5, [sp, #248]	; 0xf8
   20be0:	str	r5, [sp, #252]	; 0xfc
   20be4:	add	r1, sp, #24
   20be8:	mov	r0, r6
   20bec:	bl	151d0 <__flatcc_fb_copy_scope@@Base>
   20bf0:	ldr	r3, [r4, #208]	; 0xd0
   20bf4:	str	r5, [sp, #12]
   20bf8:	str	r5, [sp, #20]
   20bfc:	str	r3, [sp, #16]
   20c00:	add	r6, r6, #4
   20c04:	add	r2, sp, #12
   20c08:	ldr	r1, [pc, #604]	; 20e6c <__flatcc_fb_gen_c_verifier@@Base+0x3288>
   20c0c:	mov	r0, r6
   20c10:	bl	278c0 <fb_symbol_table_visit@@Base>
   20c14:	ldr	r5, [sp, #12]
   20c18:	cmp	r5, #0
   20c1c:	beq	20e64 <__flatcc_fb_gen_c_verifier@@Base+0x3280>
   20c20:	lsl	r0, r5, #4
   20c24:	bl	13f3c <malloc@plt>
   20c28:	subs	r7, r0, #0
   20c2c:	beq	20d44 <__flatcc_fb_gen_c_verifier@@Base+0x3160>
   20c30:	str	r7, [sp, #20]
   20c34:	add	r2, sp, #12
   20c38:	ldr	r1, [pc, #560]	; 20e70 <__flatcc_fb_gen_c_verifier@@Base+0x328c>
   20c3c:	mov	r0, r6
   20c40:	bl	278c0 <fb_symbol_table_visit@@Base>
   20c44:	ldr	r3, [pc, #552]	; 20e74 <__flatcc_fb_gen_c_verifier@@Base+0x3290>
   20c48:	mov	r2, #16
   20c4c:	ldr	r1, [sp, #12]
   20c50:	mov	r0, r7
   20c54:	bl	14008 <qsort@plt>
   20c58:	str	r7, [sp, #228]	; 0xe4
   20c5c:	mov	r3, #0
   20c60:	str	r3, [sp, #240]	; 0xf0
   20c64:	mov	r3, #3
   20c68:	str	r3, [sp, #244]	; 0xf4
   20c6c:	ldr	r3, [pc, #516]	; 20e78 <__flatcc_fb_gen_c_verifier@@Base+0x3294>
   20c70:	str	r3, [sp, #232]	; 0xe8
   20c74:	ldr	r3, [pc, #512]	; 20e7c <__flatcc_fb_gen_c_verifier@@Base+0x3298>
   20c78:	str	r3, [sp, #236]	; 0xec
   20c7c:	ldr	r2, [r4, #208]	; 0xd0
   20c80:	add	r3, sp, #24
   20c84:	ldr	r2, [r2, #160]	; 0xa0
   20c88:	ldr	r1, [pc, #496]	; 20e80 <__flatcc_fb_gen_c_verifier@@Base+0x329c>
   20c8c:	mov	r0, r4
   20c90:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20c94:	ldr	r3, [r4, #220]	; 0xdc
   20c98:	add	r3, r3, #2
   20c9c:	str	r3, [r4, #220]	; 0xdc
   20ca0:	ldr	r1, [pc, #476]	; 20e84 <__flatcc_fb_gen_c_verifier@@Base+0x32a0>
   20ca4:	mov	r0, r4
   20ca8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20cac:	ldr	r3, [r4, #220]	; 0xdc
   20cb0:	cmp	r3, #0
   20cb4:	beq	20d90 <__flatcc_fb_gen_c_verifier@@Base+0x31ac>
   20cb8:	sub	r2, r3, #1
   20cbc:	str	r2, [r4, #220]	; 0xdc
   20cc0:	cmp	r2, #0
   20cc4:	beq	20da4 <__flatcc_fb_gen_c_verifier@@Base+0x31c0>
   20cc8:	sub	r3, r3, #2
   20ccc:	str	r3, [r4, #220]	; 0xdc
   20cd0:	ldr	r1, [pc, #432]	; 20e88 <__flatcc_fb_gen_c_verifier@@Base+0x32a4>
   20cd4:	mov	r0, r4
   20cd8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20cdc:	ldr	r3, [r4, #220]	; 0xdc
   20ce0:	add	r3, r3, #1
   20ce4:	str	r3, [r4, #220]	; 0xdc
   20ce8:	cmp	r5, #0
   20cec:	bne	20dcc <__flatcc_fb_gen_c_verifier@@Base+0x31e8>
   20cf0:	ldr	r1, [pc, #404]	; 20e8c <__flatcc_fb_gen_c_verifier@@Base+0x32a8>
   20cf4:	mov	r0, r4
   20cf8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20cfc:	ldr	r1, [pc, #396]	; 20e90 <__flatcc_fb_gen_c_verifier@@Base+0x32ac>
   20d00:	mov	r0, r4
   20d04:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20d08:	ldr	r3, [r4, #220]	; 0xdc
   20d0c:	cmp	r3, #0
   20d10:	beq	20db8 <__flatcc_fb_gen_c_verifier@@Base+0x31d4>
   20d14:	sub	r3, r3, #1
   20d18:	str	r3, [r4, #220]	; 0xdc
   20d1c:	ldr	r1, [pc, #368]	; 20e94 <__flatcc_fb_gen_c_verifier@@Base+0x32b0>
   20d20:	mov	r0, r4
   20d24:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20d28:	ldr	r1, [pc, #360]	; 20e98 <__flatcc_fb_gen_c_verifier@@Base+0x32b4>
   20d2c:	mov	r0, r4
   20d30:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20d34:	ldr	r0, [sp, #228]	; 0xe4
   20d38:	bl	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x23c4>
   20d3c:	add	sp, sp, #260	; 0x104
   20d40:	pop	{r4, r5, r6, r7, pc}
   20d44:	mov	r3, #0
   20d48:	str	r3, [sp, #228]	; 0xe4
   20d4c:	cmp	r5, r3
   20d50:	ble	20c5c <__flatcc_fb_gen_c_verifier@@Base+0x3078>
   20d54:	ldr	r5, [pc, #320]	; 20e9c <__flatcc_fb_gen_c_verifier@@Base+0x32b8>
   20d58:	ldr	r4, [pc, #320]	; 20ea0 <__flatcc_fb_gen_c_verifier@@Base+0x32bc>
   20d5c:	ldr	r3, [pc, #320]	; 20ea4 <__flatcc_fb_gen_c_verifier@@Base+0x32c0>
   20d60:	str	r3, [sp]
   20d64:	mov	r3, r5
   20d68:	mov	r2, r4
   20d6c:	ldr	r1, [pc, #308]	; 20ea8 <__flatcc_fb_gen_c_verifier@@Base+0x32c4>
   20d70:	ldr	r0, [pc, #308]	; 20eac <__flatcc_fb_gen_c_verifier@@Base+0x32c8>
   20d74:	ldr	r0, [r0]
   20d78:	bl	13f84 <fprintf@plt>
   20d7c:	ldr	r3, [pc, #300]	; 20eb0 <__flatcc_fb_gen_c_verifier@@Base+0x32cc>
   20d80:	mov	r2, r5
   20d84:	mov	r1, r4
   20d88:	ldr	r0, [pc, #292]	; 20eb4 <__flatcc_fb_gen_c_verifier@@Base+0x32d0>
   20d8c:	bl	14038 <__assert_fail@plt>
   20d90:	ldr	r3, [pc, #280]	; 20eb0 <__flatcc_fb_gen_c_verifier@@Base+0x32cc>
   20d94:	mov	r2, #1152	; 0x480
   20d98:	ldr	r1, [pc, #256]	; 20ea0 <__flatcc_fb_gen_c_verifier@@Base+0x32bc>
   20d9c:	ldr	r0, [pc, #276]	; 20eb8 <__flatcc_fb_gen_c_verifier@@Base+0x32d4>
   20da0:	bl	14038 <__assert_fail@plt>
   20da4:	ldr	r3, [pc, #260]	; 20eb0 <__flatcc_fb_gen_c_verifier@@Base+0x32cc>
   20da8:	mov	r2, #1152	; 0x480
   20dac:	ldr	r1, [pc, #236]	; 20ea0 <__flatcc_fb_gen_c_verifier@@Base+0x32bc>
   20db0:	ldr	r0, [pc, #256]	; 20eb8 <__flatcc_fb_gen_c_verifier@@Base+0x32d4>
   20db4:	bl	14038 <__assert_fail@plt>
   20db8:	ldr	r3, [pc, #240]	; 20eb0 <__flatcc_fb_gen_c_verifier@@Base+0x32cc>
   20dbc:	ldr	r2, [pc, #248]	; 20ebc <__flatcc_fb_gen_c_verifier@@Base+0x32d8>
   20dc0:	ldr	r1, [pc, #216]	; 20ea0 <__flatcc_fb_gen_c_verifier@@Base+0x32bc>
   20dc4:	ldr	r0, [pc, #236]	; 20eb8 <__flatcc_fb_gen_c_verifier@@Base+0x32d4>
   20dc8:	bl	14038 <__assert_fail@plt>
   20dcc:	ldr	r1, [pc, #236]	; 20ec0 <__flatcc_fb_gen_c_verifier@@Base+0x32dc>
   20dd0:	mov	r0, r4
   20dd4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20dd8:	ldr	r1, [pc, #228]	; 20ec4 <__flatcc_fb_gen_c_verifier@@Base+0x32e0>
   20ddc:	mov	r0, r4
   20de0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20de4:	ldr	r1, [pc, #220]	; 20ec8 <__flatcc_fb_gen_c_verifier@@Base+0x32e4>
   20de8:	mov	r0, r4
   20dec:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20df0:	ldr	r1, [pc, #160]	; 20e98 <__flatcc_fb_gen_c_verifier@@Base+0x32b4>
   20df4:	mov	r0, r4
   20df8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20dfc:	ldr	r1, [pc, #200]	; 20ecc <__flatcc_fb_gen_c_verifier@@Base+0x32e8>
   20e00:	mov	r0, r4
   20e04:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20e08:	mov	r2, #0
   20e0c:	str	r2, [sp]
   20e10:	sub	r3, r5, #1
   20e14:	add	r1, sp, #228	; 0xe4
   20e18:	mov	r0, r4
   20e1c:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   20e20:	ldr	r1, [pc, #168]	; 20ed0 <__flatcc_fb_gen_c_verifier@@Base+0x32ec>
   20e24:	mov	r0, r4
   20e28:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20e2c:	ldr	r3, [r4, #220]	; 0xdc
   20e30:	cmp	r3, #0
   20e34:	beq	20e50 <__flatcc_fb_gen_c_verifier@@Base+0x326c>
   20e38:	sub	r3, r3, #1
   20e3c:	str	r3, [r4, #220]	; 0xdc
   20e40:	ldr	r1, [pc, #76]	; 20e94 <__flatcc_fb_gen_c_verifier@@Base+0x32b0>
   20e44:	mov	r0, r4
   20e48:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20e4c:	b	20d28 <__flatcc_fb_gen_c_verifier@@Base+0x3144>
   20e50:	ldr	r3, [pc, #88]	; 20eb0 <__flatcc_fb_gen_c_verifier@@Base+0x32cc>
   20e54:	ldr	r2, [pc, #120]	; 20ed4 <__flatcc_fb_gen_c_verifier@@Base+0x32f0>
   20e58:	ldr	r1, [pc, #64]	; 20ea0 <__flatcc_fb_gen_c_verifier@@Base+0x32bc>
   20e5c:	ldr	r0, [pc, #84]	; 20eb8 <__flatcc_fb_gen_c_verifier@@Base+0x32d4>
   20e60:	bl	14038 <__assert_fail@plt>
   20e64:	mov	r7, #0
   20e68:	b	20c58 <__flatcc_fb_gen_c_verifier@@Base+0x3074>
   20e6c:	andeq	pc, r1, ip, ror #28
   20e70:	andeq	pc, r1, ip, ror #27
   20e74:			; <UNDEFINED> instruction: 0x0001fdbc
   20e78:	andeq	lr, r1, r0, lsl r6
   20e7c:	andeq	lr, r1, r8, asr #1
   20e80:	andeq	lr, r4, ip, lsl #7
   20e84:	andeq	pc, r4, ip, ror #9
   20e88:	andeq	r0, r5, r0, asr lr
   20e8c:	andeq	pc, r4, r0, lsr #10
   20e90:	andeq	pc, r4, r4, asr r5	; <UNPREDICTABLE>
   20e94:	andeq	lr, r4, r4, ror r2
   20e98:	andeq	r5, r4, r0, lsr #2
   20e9c:	andeq	r0, r0, r4, ror r4
   20ea0:	andeq	lr, r4, r0, lsl r2
   20ea4:			; <UNDEFINED> instruction: 0x0004f4b0
   20ea8:	andeq	fp, r3, r8, lsr sl
   20eac:	andeq	r6, r6, r8, lsr #1
   20eb0:	muleq	r4, r4, r0
   20eb4:	andeq	r3, r4, r0, ror lr
   20eb8:	andeq	lr, r4, r8, ror #4
   20ebc:	andeq	r0, r0, r5, lsl #9
   20ec0:	andeq	pc, r4, r4, ror r5	; <UNPREDICTABLE>
   20ec4:	muleq	r4, r4, r5
   20ec8:	andeq	pc, r4, r8, lsr #11
   20ecc:	andeq	pc, r4, ip, ror #7
   20ed0:	andeq	lr, r4, r4, asr #15
   20ed4:	andeq	r0, r0, lr, lsl #9
   20ed8:	push	{r4, r5, lr}
   20edc:	sub	sp, sp, #268	; 0x10c
   20ee0:	mov	r3, #0
   20ee4:	str	r3, [sp, #40]	; 0x28
   20ee8:	str	r3, [sp, #12]
   20eec:	str	r3, [sp, #16]
   20ef0:	str	r3, [sp, #20]
   20ef4:	str	r3, [sp, #24]
   20ef8:	str	r3, [sp, #28]
   20efc:	str	r3, [sp, #32]
   20f00:	str	r3, [sp, #36]	; 0x24
   20f04:	ldrh	r3, [r1, #8]
   20f08:	sub	r3, r3, #3
   20f0c:	uxth	r3, r3
   20f10:	cmp	r3, #1
   20f14:	bhi	21048 <__flatcc_fb_gen_c_verifier@@Base+0x3464>
   20f18:	mov	r4, r0
   20f1c:	mov	r5, r1
   20f20:	add	r1, sp, #40	; 0x28
   20f24:	mov	r0, r5
   20f28:	bl	20140 <__flatcc_fb_gen_c_verifier@@Base+0x255c>
   20f2c:	str	r0, [sp, #12]
   20f30:	cmp	r0, #0
   20f34:	beq	2105c <__flatcc_fb_gen_c_verifier@@Base+0x3478>
   20f38:	str	r5, [sp, #24]
   20f3c:	mov	r3, #2
   20f40:	str	r3, [sp, #28]
   20f44:	ldr	r3, [pc, #560]	; 2117c <__flatcc_fb_gen_c_verifier@@Base+0x3598>
   20f48:	str	r3, [sp, #16]
   20f4c:	ldr	r3, [pc, #556]	; 21180 <__flatcc_fb_gen_c_verifier@@Base+0x359c>
   20f50:	str	r3, [sp, #20]
   20f54:	mov	r2, #220	; 0xdc
   20f58:	mov	r1, #0
   20f5c:	add	r0, sp, #44	; 0x2c
   20f60:	bl	13f9c <memset@plt>
   20f64:	add	r2, sp, #44	; 0x2c
   20f68:	mov	r1, r5
   20f6c:	ldr	r0, [r5, #12]
   20f70:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   20f74:	add	r2, sp, #44	; 0x2c
   20f78:	ldr	r1, [pc, #516]	; 21184 <__flatcc_fb_gen_c_verifier@@Base+0x35a0>
   20f7c:	mov	r0, r4
   20f80:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20f84:	ldr	r3, [r4, #220]	; 0xdc
   20f88:	add	r3, r3, #2
   20f8c:	str	r3, [r4, #220]	; 0xdc
   20f90:	ldr	r1, [pc, #496]	; 21188 <__flatcc_fb_gen_c_verifier@@Base+0x35a4>
   20f94:	mov	r0, r4
   20f98:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20f9c:	ldr	r3, [r4, #220]	; 0xdc
   20fa0:	cmp	r3, #0
   20fa4:	beq	210a4 <__flatcc_fb_gen_c_verifier@@Base+0x34c0>
   20fa8:	sub	r2, r3, #1
   20fac:	str	r2, [r4, #220]	; 0xdc
   20fb0:	cmp	r2, #0
   20fb4:	beq	210b8 <__flatcc_fb_gen_c_verifier@@Base+0x34d4>
   20fb8:	sub	r3, r3, #2
   20fbc:	str	r3, [r4, #220]	; 0xdc
   20fc0:	ldr	r1, [pc, #452]	; 2118c <__flatcc_fb_gen_c_verifier@@Base+0x35a8>
   20fc4:	mov	r0, r4
   20fc8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20fcc:	ldr	r3, [r4, #220]	; 0xdc
   20fd0:	add	r3, r3, #1
   20fd4:	str	r3, [r4, #220]	; 0xdc
   20fd8:	ldr	r3, [sp, #40]	; 0x28
   20fdc:	cmp	r3, #0
   20fe0:	bne	210e0 <__flatcc_fb_gen_c_verifier@@Base+0x34fc>
   20fe4:	ldr	r1, [pc, #420]	; 21190 <__flatcc_fb_gen_c_verifier@@Base+0x35ac>
   20fe8:	mov	r0, r4
   20fec:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20ff0:	ldr	r1, [pc, #412]	; 21194 <__flatcc_fb_gen_c_verifier@@Base+0x35b0>
   20ff4:	mov	r0, r4
   20ff8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20ffc:	ldr	r1, [pc, #404]	; 21198 <__flatcc_fb_gen_c_verifier@@Base+0x35b4>
   21000:	mov	r0, r4
   21004:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21008:	ldr	r3, [r4, #220]	; 0xdc
   2100c:	cmp	r3, #0
   21010:	beq	210cc <__flatcc_fb_gen_c_verifier@@Base+0x34e8>
   21014:	sub	r3, r3, #1
   21018:	str	r3, [r4, #220]	; 0xdc
   2101c:	ldr	r1, [pc, #376]	; 2119c <__flatcc_fb_gen_c_verifier@@Base+0x35b8>
   21020:	mov	r0, r4
   21024:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21028:	ldr	r1, [pc, #368]	; 211a0 <__flatcc_fb_gen_c_verifier@@Base+0x35bc>
   2102c:	mov	r0, r4
   21030:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21034:	ldr	r0, [sp, #12]
   21038:	bl	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x23c4>
   2103c:	mov	r0, #0
   21040:	add	sp, sp, #268	; 0x10c
   21044:	pop	{r4, r5, pc}
   21048:	ldr	r3, [pc, #340]	; 211a4 <__flatcc_fb_gen_c_verifier@@Base+0x35c0>
   2104c:	ldr	r2, [pc, #340]	; 211a8 <__flatcc_fb_gen_c_verifier@@Base+0x35c4>
   21050:	ldr	r1, [pc, #340]	; 211ac <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   21054:	ldr	r0, [pc, #340]	; 211b0 <__flatcc_fb_gen_c_verifier@@Base+0x35cc>
   21058:	bl	14038 <__assert_fail@plt>
   2105c:	ldr	r3, [sp, #40]	; 0x28
   21060:	cmp	r3, #0
   21064:	ble	20f38 <__flatcc_fb_gen_c_verifier@@Base+0x3354>
   21068:	ldr	r5, [pc, #324]	; 211b4 <__flatcc_fb_gen_c_verifier@@Base+0x35d0>
   2106c:	ldr	r4, [pc, #312]	; 211ac <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   21070:	ldr	r3, [pc, #320]	; 211b8 <__flatcc_fb_gen_c_verifier@@Base+0x35d4>
   21074:	str	r3, [sp]
   21078:	mov	r3, r5
   2107c:	mov	r2, r4
   21080:	ldr	r1, [pc, #308]	; 211bc <__flatcc_fb_gen_c_verifier@@Base+0x35d8>
   21084:	ldr	r0, [pc, #308]	; 211c0 <__flatcc_fb_gen_c_verifier@@Base+0x35dc>
   21088:	ldr	r0, [r0]
   2108c:	bl	13f84 <fprintf@plt>
   21090:	ldr	r3, [pc, #268]	; 211a4 <__flatcc_fb_gen_c_verifier@@Base+0x35c0>
   21094:	mov	r2, r5
   21098:	mov	r1, r4
   2109c:	ldr	r0, [pc, #288]	; 211c4 <__flatcc_fb_gen_c_verifier@@Base+0x35e0>
   210a0:	bl	14038 <__assert_fail@plt>
   210a4:	ldr	r3, [pc, #248]	; 211a4 <__flatcc_fb_gen_c_verifier@@Base+0x35c0>
   210a8:	ldr	r2, [pc, #280]	; 211c8 <__flatcc_fb_gen_c_verifier@@Base+0x35e4>
   210ac:	ldr	r1, [pc, #248]	; 211ac <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   210b0:	ldr	r0, [pc, #276]	; 211cc <__flatcc_fb_gen_c_verifier@@Base+0x35e8>
   210b4:	bl	14038 <__assert_fail@plt>
   210b8:	ldr	r3, [pc, #228]	; 211a4 <__flatcc_fb_gen_c_verifier@@Base+0x35c0>
   210bc:	ldr	r2, [pc, #260]	; 211c8 <__flatcc_fb_gen_c_verifier@@Base+0x35e4>
   210c0:	ldr	r1, [pc, #228]	; 211ac <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   210c4:	ldr	r0, [pc, #256]	; 211cc <__flatcc_fb_gen_c_verifier@@Base+0x35e8>
   210c8:	bl	14038 <__assert_fail@plt>
   210cc:	ldr	r3, [pc, #208]	; 211a4 <__flatcc_fb_gen_c_verifier@@Base+0x35c0>
   210d0:	ldr	r2, [pc, #248]	; 211d0 <__flatcc_fb_gen_c_verifier@@Base+0x35ec>
   210d4:	ldr	r1, [pc, #208]	; 211ac <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   210d8:	ldr	r0, [pc, #236]	; 211cc <__flatcc_fb_gen_c_verifier@@Base+0x35e8>
   210dc:	bl	14038 <__assert_fail@plt>
   210e0:	ldr	r1, [pc, #236]	; 211d4 <__flatcc_fb_gen_c_verifier@@Base+0x35f0>
   210e4:	mov	r0, r4
   210e8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   210ec:	ldr	r1, [pc, #228]	; 211d8 <__flatcc_fb_gen_c_verifier@@Base+0x35f4>
   210f0:	mov	r0, r4
   210f4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   210f8:	ldr	r1, [pc, #220]	; 211dc <__flatcc_fb_gen_c_verifier@@Base+0x35f8>
   210fc:	mov	r0, r4
   21100:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21104:	ldr	r1, [pc, #148]	; 211a0 <__flatcc_fb_gen_c_verifier@@Base+0x35bc>
   21108:	mov	r0, r4
   2110c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21110:	ldr	r1, [pc, #200]	; 211e0 <__flatcc_fb_gen_c_verifier@@Base+0x35fc>
   21114:	mov	r0, r4
   21118:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2111c:	mov	r2, #0
   21120:	str	r2, [sp]
   21124:	ldr	r3, [sp, #40]	; 0x28
   21128:	sub	r3, r3, #1
   2112c:	add	r1, sp, #12
   21130:	mov	r0, r4
   21134:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   21138:	ldr	r1, [pc, #164]	; 211e4 <__flatcc_fb_gen_c_verifier@@Base+0x3600>
   2113c:	mov	r0, r4
   21140:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21144:	ldr	r3, [r4, #220]	; 0xdc
   21148:	cmp	r3, #0
   2114c:	beq	21168 <__flatcc_fb_gen_c_verifier@@Base+0x3584>
   21150:	sub	r3, r3, #1
   21154:	str	r3, [r4, #220]	; 0xdc
   21158:	ldr	r1, [pc, #60]	; 2119c <__flatcc_fb_gen_c_verifier@@Base+0x35b8>
   2115c:	mov	r0, r4
   21160:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21164:	b	21028 <__flatcc_fb_gen_c_verifier@@Base+0x3444>
   21168:	ldr	r3, [pc, #52]	; 211a4 <__flatcc_fb_gen_c_verifier@@Base+0x35c0>
   2116c:	ldr	r2, [pc, #116]	; 211e8 <__flatcc_fb_gen_c_verifier@@Base+0x3604>
   21170:	ldr	r1, [pc, #52]	; 211ac <__flatcc_fb_gen_c_verifier@@Base+0x35c8>
   21174:	ldr	r0, [pc, #80]	; 211cc <__flatcc_fb_gen_c_verifier@@Base+0x35e8>
   21178:	bl	14038 <__assert_fail@plt>
   2117c:	andeq	lr, r1, r4, ror #8
   21180:	strdeq	lr, [r1], -r0
   21184:			; <UNDEFINED> instruction: 0x0004f5b4
   21188:	andeq	pc, r4, r8, lsl r6	; <UNPREDICTABLE>
   2118c:	andeq	r0, r5, r0, asr lr
   21190:	andeq	pc, r4, ip, asr #12
   21194:	andeq	pc, r4, r8, ror #12
   21198:	andeq	pc, r4, r4, asr r5	; <UNPREDICTABLE>
   2119c:	andeq	lr, r4, r4, ror r2
   211a0:	andeq	r5, r4, r0, lsr #2
   211a4:	andeq	lr, r4, ip, lsr #1
   211a8:	ldrdeq	r0, [r0], -lr
   211ac:	andeq	lr, r4, r0, lsl r2
   211b0:	andeq	fp, r3, ip, lsl #19
   211b4:	andeq	r0, r0, r1, ror #9
   211b8:			; <UNDEFINED> instruction: 0x0004f4b0
   211bc:	andeq	fp, r3, r8, lsr sl
   211c0:	andeq	r6, r6, r8, lsr #1
   211c4:	andeq	r3, r4, r0, ror lr
   211c8:	andeq	r0, r0, pc, ror #9
   211cc:	andeq	lr, r4, r8, ror #4
   211d0:	strdeq	r0, [r0], -r5
   211d4:	andeq	pc, r4, r4, ror r5	; <UNPREDICTABLE>
   211d8:	muleq	r4, r4, r5
   211dc:	andeq	pc, r4, r8, lsr #11
   211e0:	andeq	pc, r4, ip, ror #7
   211e4:	andeq	lr, r4, r4, asr #15
   211e8:	strdeq	r0, [r0], -lr

000211ec <__flatcc_fb_gen_c_json_parser@@Base>:
   211ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   211f0:	sub	sp, sp, #276	; 0x114
   211f4:	mov	r4, r0
   211f8:	ldr	r3, [r0, #208]	; 0xd0
   211fc:	ldr	r2, [r3, #164]	; 0xa4
   21200:	ldr	r1, [pc, #3700]	; 2207c <__flatcc_fb_gen_c_json_parser@@Base+0xe90>
   21204:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21208:	ldr	r3, [r4, #208]	; 0xd0
   2120c:	ldr	r2, [r3, #164]	; 0xa4
   21210:	ldr	r1, [pc, #3688]	; 22080 <__flatcc_fb_gen_c_json_parser@@Base+0xe94>
   21214:	mov	r0, r4
   21218:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2121c:	ldr	r5, [pc, #3680]	; 22084 <__flatcc_fb_gen_c_json_parser@@Base+0xe98>
   21220:	mov	r1, r5
   21224:	mov	r0, r4
   21228:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2122c:	ldr	r1, [pc, #3668]	; 22088 <__flatcc_fb_gen_c_json_parser@@Base+0xe9c>
   21230:	mov	r0, r4
   21234:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21238:	mov	r1, r5
   2123c:	mov	r0, r4
   21240:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21244:	ldr	r1, [pc, #3648]	; 2208c <__flatcc_fb_gen_c_json_parser@@Base+0xea0>
   21248:	mov	r0, r4
   2124c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21250:	ldr	r2, [pc, #3640]	; 22090 <__flatcc_fb_gen_c_json_parser@@Base+0xea4>
   21254:	ldr	r1, [pc, #3640]	; 22094 <__flatcc_fb_gen_c_json_parser@@Base+0xea8>
   21258:	mov	r0, r4
   2125c:	bl	15058 <__flatcc_fb_gen_c_includes@@Base>
   21260:	ldr	r3, [r4, #212]	; 0xd4
   21264:	ldr	r3, [r3, #140]	; 0x8c
   21268:	cmp	r3, #0
   2126c:	bne	212d4 <__flatcc_fb_gen_c_json_parser@@Base+0xe8>
   21270:	ldr	r1, [pc, #3596]	; 22084 <__flatcc_fb_gen_c_json_parser@@Base+0xe98>
   21274:	mov	r0, r4
   21278:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2127c:	ldr	r3, [r4, #208]	; 0xd0
   21280:	ldr	r5, [r3, #52]	; 0x34
   21284:	mov	r2, #220	; 0xdc
   21288:	mov	r1, #0
   2128c:	add	r0, sp, #52	; 0x34
   21290:	bl	13f9c <memset@plt>
   21294:	cmp	r5, #0
   21298:	beq	212a8 <__flatcc_fb_gen_c_json_parser@@Base+0xbc>
   2129c:	ldrh	r3, [r5, #8]
   212a0:	cmp	r3, #1
   212a4:	bls	212ec <__flatcc_fb_gen_c_json_parser@@Base+0x100>
   212a8:	ldr	r3, [r4, #208]	; 0xd0
   212ac:	ldr	r5, [r3, #40]	; 0x28
   212b0:	cmp	r5, #0
   212b4:	beq	21598 <__flatcc_fb_gen_c_json_parser@@Base+0x3ac>
   212b8:	ldr	fp, [pc, #3544]	; 22098 <__flatcc_fb_gen_c_json_parser@@Base+0xeac>
   212bc:	ldr	sl, [pc, #3544]	; 2209c <__flatcc_fb_gen_c_json_parser@@Base+0xeb0>
   212c0:	ldr	r7, [pc, #3544]	; 220a0 <__flatcc_fb_gen_c_json_parser@@Base+0xeb4>
   212c4:	ldr	r6, [pc, #3544]	; 220a4 <__flatcc_fb_gen_c_json_parser@@Base+0xeb8>
   212c8:	ldr	r9, [pc, #3544]	; 220a8 <__flatcc_fb_gen_c_json_parser@@Base+0xebc>
   212cc:	ldr	r8, [pc, #3544]	; 220ac <__flatcc_fb_gen_c_json_parser@@Base+0xec0>
   212d0:	b	214c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d8>
   212d4:	ldr	r3, [r4, #204]	; 0xcc
   212d8:	mov	r2, #36	; 0x24
   212dc:	mov	r1, #1
   212e0:	ldr	r0, [pc, #3528]	; 220b0 <__flatcc_fb_gen_c_json_parser@@Base+0xec4>
   212e4:	bl	13f18 <fwrite@plt>
   212e8:	b	21270 <__flatcc_fb_gen_c_json_parser@@Base+0x84>
   212ec:	ldr	r1, [pc, #3520]	; 220b4 <__flatcc_fb_gen_c_json_parser@@Base+0xec8>
   212f0:	mov	r0, r4
   212f4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   212f8:	ldr	r1, [pc, #3512]	; 220b8 <__flatcc_fb_gen_c_json_parser@@Base+0xecc>
   212fc:	mov	r0, r4
   21300:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21304:	ldr	r1, [pc, #3504]	; 220bc <__flatcc_fb_gen_c_json_parser@@Base+0xed0>
   21308:	mov	r0, r4
   2130c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21310:	ldr	r1, [pc, #3496]	; 220c0 <__flatcc_fb_gen_c_json_parser@@Base+0xed4>
   21314:	mov	r0, r4
   21318:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2131c:	ldr	r1, [pc, #3488]	; 220c4 <__flatcc_fb_gen_c_json_parser@@Base+0xed8>
   21320:	mov	r0, r4
   21324:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21328:	ldr	r1, [pc, #3480]	; 220c8 <__flatcc_fb_gen_c_json_parser@@Base+0xedc>
   2132c:	mov	r0, r4
   21330:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21334:	ldr	r1, [pc, #3472]	; 220cc <__flatcc_fb_gen_c_json_parser@@Base+0xee0>
   21338:	mov	r0, r4
   2133c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21340:	ldr	r1, [pc, #3464]	; 220d0 <__flatcc_fb_gen_c_json_parser@@Base+0xee4>
   21344:	mov	r0, r4
   21348:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2134c:	ldr	r1, [pc, #3456]	; 220d4 <__flatcc_fb_gen_c_json_parser@@Base+0xee8>
   21350:	mov	r0, r4
   21354:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21358:	ldr	r3, [r4, #208]	; 0xd0
   2135c:	ldr	r2, [r3, #160]	; 0xa0
   21360:	ldr	r1, [pc, #3816]	; 22250 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   21364:	mov	r0, r4
   21368:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2136c:	ldr	r3, [r4, #220]	; 0xdc
   21370:	add	r3, r3, #2
   21374:	str	r3, [r4, #220]	; 0xdc
   21378:	ldr	r1, [pc, #3416]	; 220d8 <__flatcc_fb_gen_c_json_parser@@Base+0xeec>
   2137c:	mov	r0, r4
   21380:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21384:	ldr	r3, [r4, #220]	; 0xdc
   21388:	cmp	r3, #0
   2138c:	beq	213b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc>
   21390:	sub	r2, r3, #1
   21394:	str	r2, [r4, #220]	; 0xdc
   21398:	cmp	r2, #0
   2139c:	beq	213cc <__flatcc_fb_gen_c_json_parser@@Base+0x1e0>
   213a0:	sub	r3, r3, #2
   213a4:	str	r3, [r4, #220]	; 0xdc
   213a8:	ldr	r1, [pc, #3284]	; 22084 <__flatcc_fb_gen_c_json_parser@@Base+0xe98>
   213ac:	mov	r0, r4
   213b0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   213b4:	b	212a8 <__flatcc_fb_gen_c_json_parser@@Base+0xbc>
   213b8:	ldr	r3, [pc, #3356]	; 220dc <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   213bc:	ldr	r2, [pc, #3356]	; 220e0 <__flatcc_fb_gen_c_json_parser@@Base+0xef4>
   213c0:	ldr	r1, [pc, #3808]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   213c4:	ldr	r0, [pc, #3796]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   213c8:	bl	14038 <__assert_fail@plt>
   213cc:	ldr	r3, [pc, #3336]	; 220dc <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   213d0:	ldr	r2, [pc, #3336]	; 220e0 <__flatcc_fb_gen_c_json_parser@@Base+0xef4>
   213d4:	ldr	r1, [pc, #3788]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   213d8:	ldr	r0, [pc, #3776]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   213dc:	bl	14038 <__assert_fail@plt>
   213e0:	add	r2, sp, #52	; 0x34
   213e4:	mov	r1, r5
   213e8:	ldr	r0, [r5, #12]
   213ec:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   213f0:	add	r2, sp, #52	; 0x34
   213f4:	mov	r1, fp
   213f8:	mov	r0, r4
   213fc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21400:	add	r2, sp, #52	; 0x34
   21404:	mov	r1, sl
   21408:	mov	r0, r4
   2140c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21410:	add	r2, sp, #52	; 0x34
   21414:	mov	r1, r7
   21418:	mov	r0, r4
   2141c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21420:	ldr	r3, [r4, #220]	; 0xdc
   21424:	add	r3, r3, #2
   21428:	str	r3, [r4, #220]	; 0xdc
   2142c:	mov	r1, r6
   21430:	mov	r0, r4
   21434:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21438:	ldr	r3, [r4, #220]	; 0xdc
   2143c:	cmp	r3, #0
   21440:	beq	21460 <__flatcc_fb_gen_c_json_parser@@Base+0x274>
   21444:	sub	r2, r3, #1
   21448:	str	r2, [r4, #220]	; 0xdc
   2144c:	cmp	r2, #0
   21450:	beq	21474 <__flatcc_fb_gen_c_json_parser@@Base+0x288>
   21454:	sub	r3, r3, #2
   21458:	str	r3, [r4, #220]	; 0xdc
   2145c:	b	214b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc>
   21460:	ldr	r3, [pc, #3188]	; 220dc <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   21464:	ldr	r2, [pc, #3192]	; 220e4 <__flatcc_fb_gen_c_json_parser@@Base+0xef8>
   21468:	ldr	r1, [pc, #3640]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   2146c:	ldr	r0, [pc, #3628]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   21470:	bl	14038 <__assert_fail@plt>
   21474:	ldr	r3, [pc, #3168]	; 220dc <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   21478:	ldr	r2, [pc, #3172]	; 220e4 <__flatcc_fb_gen_c_json_parser@@Base+0xef8>
   2147c:	ldr	r1, [pc, #3620]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21480:	ldr	r0, [pc, #3608]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   21484:	bl	14038 <__assert_fail@plt>
   21488:	add	r2, sp, #52	; 0x34
   2148c:	mov	r1, r5
   21490:	ldr	r0, [r5, #12]
   21494:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   21498:	add	r2, sp, #52	; 0x34
   2149c:	mov	r1, r9
   214a0:	mov	r0, r4
   214a4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   214a8:	add	r2, sp, #52	; 0x34
   214ac:	mov	r1, r8
   214b0:	mov	r0, r4
   214b4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   214b8:	ldr	r5, [r5]
   214bc:	cmp	r5, #0
   214c0:	beq	21598 <__flatcc_fb_gen_c_json_parser@@Base+0x3ac>
   214c4:	ldrh	r3, [r5, #8]
   214c8:	cmp	r3, #4
   214cc:	ldrls	pc, [pc, r3, lsl #2]
   214d0:	b	214b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc>
   214d4:	andeq	r1, r2, r8, ror #9
   214d8:	andeq	r1, r2, r8, lsl #9
   214dc:			; <UNDEFINED> instruction: 0x000214b8
   214e0:	andeq	r1, r2, ip, lsl #10
   214e4:	andeq	r1, r2, r0, ror #7
   214e8:	add	r2, sp, #52	; 0x34
   214ec:	mov	r1, r5
   214f0:	ldr	r0, [r5, #12]
   214f4:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   214f8:	add	r2, sp, #52	; 0x34
   214fc:	ldr	r1, [pc, #3044]	; 220e8 <__flatcc_fb_gen_c_json_parser@@Base+0xefc>
   21500:	mov	r0, r4
   21504:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21508:	b	214b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc>
   2150c:	add	r2, sp, #52	; 0x34
   21510:	mov	r1, r5
   21514:	ldr	r0, [r5, #12]
   21518:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   2151c:	add	r2, sp, #52	; 0x34
   21520:	mov	r1, r7
   21524:	mov	r0, r4
   21528:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2152c:	ldr	r3, [r4, #220]	; 0xdc
   21530:	add	r3, r3, #2
   21534:	str	r3, [r4, #220]	; 0xdc
   21538:	add	r2, sp, #52	; 0x34
   2153c:	mov	r1, r6
   21540:	mov	r0, r4
   21544:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21548:	ldr	r3, [r4, #220]	; 0xdc
   2154c:	cmp	r3, #0
   21550:	beq	21570 <__flatcc_fb_gen_c_json_parser@@Base+0x384>
   21554:	sub	r2, r3, #1
   21558:	str	r2, [r4, #220]	; 0xdc
   2155c:	cmp	r2, #0
   21560:	beq	21584 <__flatcc_fb_gen_c_json_parser@@Base+0x398>
   21564:	sub	r3, r3, #2
   21568:	str	r3, [r4, #220]	; 0xdc
   2156c:	b	214b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc>
   21570:	ldr	r3, [pc, #2916]	; 220dc <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   21574:	ldr	r2, [pc, #2928]	; 220ec <__flatcc_fb_gen_c_json_parser@@Base+0xf00>
   21578:	ldr	r1, [pc, #3368]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   2157c:	ldr	r0, [pc, #3356]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   21580:	bl	14038 <__assert_fail@plt>
   21584:	ldr	r3, [pc, #2896]	; 220dc <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   21588:	ldr	r2, [pc, #2908]	; 220ec <__flatcc_fb_gen_c_json_parser@@Base+0xf00>
   2158c:	ldr	r1, [pc, #3348]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21590:	ldr	r0, [pc, #3336]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   21594:	bl	14038 <__assert_fail@plt>
   21598:	ldr	r3, [r4, #208]	; 0xd0
   2159c:	mov	r2, r4
   215a0:	ldr	r1, [pc, #2888]	; 220f0 <__flatcc_fb_gen_c_json_parser@@Base+0xf04>
   215a4:	ldr	r0, [r3, #60]	; 0x3c
   215a8:	bl	28808 <fb_scope_table_visit@@Base>
   215ac:	ldr	r3, [r4, #208]	; 0xd0
   215b0:	ldr	r2, [r3, #160]	; 0xa0
   215b4:	ldr	r1, [pc, #3116]	; 221e8 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   215b8:	mov	r0, r4
   215bc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   215c0:	ldr	r3, [r4, #220]	; 0xdc
   215c4:	add	r3, r3, #2
   215c8:	str	r3, [r4, #220]	; 0xdc
   215cc:	ldr	r1, [pc, #2768]	; 220a4 <__flatcc_fb_gen_c_json_parser@@Base+0xeb8>
   215d0:	mov	r0, r4
   215d4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   215d8:	ldr	r3, [r4, #220]	; 0xdc
   215dc:	cmp	r3, #0
   215e0:	beq	21624 <__flatcc_fb_gen_c_json_parser@@Base+0x438>
   215e4:	sub	r2, r3, #1
   215e8:	str	r2, [r4, #220]	; 0xdc
   215ec:	cmp	r2, #0
   215f0:	beq	21638 <__flatcc_fb_gen_c_json_parser@@Base+0x44c>
   215f4:	sub	r3, r3, #2
   215f8:	str	r3, [r4, #220]	; 0xdc
   215fc:	ldr	r1, [pc, #2688]	; 22084 <__flatcc_fb_gen_c_json_parser@@Base+0xe98>
   21600:	mov	r0, r4
   21604:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21608:	ldr	r3, [r4, #208]	; 0xd0
   2160c:	ldr	r6, [r3, #40]	; 0x28
   21610:	cmp	r6, #0
   21614:	beq	222b0 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   21618:	ldr	fp, [pc, #2772]	; 220f4 <__flatcc_fb_gen_c_json_parser@@Base+0xf08>
   2161c:	ldr	sl, [pc, #2656]	; 22084 <__flatcc_fb_gen_c_json_parser@@Base+0xe98>
   21620:	b	2167c <__flatcc_fb_gen_c_json_parser@@Base+0x490>
   21624:	ldr	r3, [pc, #2736]	; 220dc <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   21628:	ldr	r2, [pc, #2760]	; 220f8 <__flatcc_fb_gen_c_json_parser@@Base+0xf0c>
   2162c:	ldr	r1, [pc, #3188]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21630:	ldr	r0, [pc, #3176]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   21634:	bl	14038 <__assert_fail@plt>
   21638:	ldr	r3, [pc, #2716]	; 220dc <__flatcc_fb_gen_c_json_parser@@Base+0xef0>
   2163c:	ldr	r2, [pc, #2740]	; 220f8 <__flatcc_fb_gen_c_json_parser@@Base+0xf0c>
   21640:	ldr	r1, [pc, #3168]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21644:	ldr	r0, [pc, #3156]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   21648:	bl	14038 <__assert_fail@plt>
   2164c:	mov	r1, r6
   21650:	mov	r0, r4
   21654:	bl	1e710 <__flatcc_fb_gen_c_verifier@@Base+0xb2c>
   21658:	mov	r1, r6
   2165c:	mov	r0, r4
   21660:	bl	1ec10 <__flatcc_fb_gen_c_verifier@@Base+0x102c>
   21664:	mov	r1, r6
   21668:	mov	r0, r4
   2166c:	bl	20ed8 <__flatcc_fb_gen_c_verifier@@Base+0x32f4>
   21670:	ldr	r6, [r6]
   21674:	cmp	r6, #0
   21678:	beq	222b0 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   2167c:	ldrh	r3, [r6, #8]
   21680:	cmp	r3, #4
   21684:	ldrls	pc, [pc, r3, lsl #2]
   21688:	b	21670 <__flatcc_fb_gen_c_json_parser@@Base+0x484>
   2168c:	andeq	r1, r2, r0, lsl #22
   21690:	andeq	r1, r2, r0, lsr #13
   21694:	andeq	r1, r2, r0, ror r6
   21698:	andeq	r2, r2, ip, rrx
   2169c:	andeq	r1, r2, ip, asr #12
   216a0:	mov	r3, #0
   216a4:	str	r3, [sp, #24]
   216a8:	str	r3, [sp, #28]
   216ac:	str	r3, [sp, #32]
   216b0:	str	r3, [sp, #36]	; 0x24
   216b4:	str	r3, [sp, #40]	; 0x28
   216b8:	str	r3, [sp, #44]	; 0x2c
   216bc:	str	r3, [sp, #48]	; 0x30
   216c0:	ldrh	r3, [r6, #8]
   216c4:	cmp	r3, #1
   216c8:	bne	21a08 <__flatcc_fb_gen_c_json_parser@@Base+0x81c>
   216cc:	add	r1, sp, #20
   216d0:	mov	r0, r6
   216d4:	bl	20140 <__flatcc_fb_gen_c_verifier@@Base+0x255c>
   216d8:	str	r0, [sp, #24]
   216dc:	cmp	r0, #0
   216e0:	beq	21a1c <__flatcc_fb_gen_c_json_parser@@Base+0x830>
   216e4:	str	r6, [sp, #36]	; 0x24
   216e8:	mov	r3, #1
   216ec:	str	r3, [sp, #40]	; 0x28
   216f0:	ldr	r3, [pc, #2564]	; 220fc <__flatcc_fb_gen_c_json_parser@@Base+0xf10>
   216f4:	str	r3, [sp, #28]
   216f8:	str	fp, [sp, #32]
   216fc:	mov	r2, #220	; 0xdc
   21700:	mov	r1, #0
   21704:	add	r0, sp, #52	; 0x34
   21708:	bl	13f9c <memset@plt>
   2170c:	mov	r5, r6
   21710:	add	r2, sp, #52	; 0x34
   21714:	mov	r1, r6
   21718:	ldr	r0, [r6, #12]
   2171c:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   21720:	add	r2, sp, #52	; 0x34
   21724:	ldr	r1, [pc, #2516]	; 22100 <__flatcc_fb_gen_c_json_parser@@Base+0xf14>
   21728:	mov	r0, r4
   2172c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21730:	ldr	r1, [pc, #2848]	; 22258 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   21734:	mov	r0, r4
   21738:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2173c:	ldr	r3, [r4, #220]	; 0xdc
   21740:	add	r3, r3, #1
   21744:	str	r3, [r4, #220]	; 0xdc
   21748:	ldr	r1, [pc, #2484]	; 22104 <__flatcc_fb_gen_c_json_parser@@Base+0xf18>
   2174c:	mov	r0, r4
   21750:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21754:	ldr	r3, [sp, #20]
   21758:	cmp	r3, #0
   2175c:	ble	21790 <__flatcc_fb_gen_c_json_parser@@Base+0x5a4>
   21760:	ldr	r1, [pc, #2464]	; 22108 <__flatcc_fb_gen_c_json_parser@@Base+0xf1c>
   21764:	mov	r0, r4
   21768:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2176c:	ldr	r1, [pc, #2456]	; 2210c <__flatcc_fb_gen_c_json_parser@@Base+0xf20>
   21770:	mov	r0, r4
   21774:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21778:	ldr	r1, [pc, #2716]	; 2221c <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   2177c:	mov	r0, r4
   21780:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21784:	ldr	r1, [pc, #2708]	; 22220 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   21788:	mov	r0, r4
   2178c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21790:	mov	r1, sl
   21794:	mov	r0, r4
   21798:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2179c:	ldr	r1, [pc, #2412]	; 22110 <__flatcc_fb_gen_c_json_parser@@Base+0xf24>
   217a0:	mov	r0, r4
   217a4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   217a8:	ldr	r1, [pc, #2404]	; 22114 <__flatcc_fb_gen_c_json_parser@@Base+0xf28>
   217ac:	mov	r0, r4
   217b0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   217b4:	ldr	r3, [r4, #220]	; 0xdc
   217b8:	add	r3, r3, #1
   217bc:	str	r3, [r4, #220]	; 0xdc
   217c0:	ldr	r3, [sp, #20]
   217c4:	cmp	r3, #0
   217c8:	bne	21a64 <__flatcc_fb_gen_c_json_parser@@Base+0x878>
   217cc:	ldr	r1, [pc, #2372]	; 22118 <__flatcc_fb_gen_c_json_parser@@Base+0xf2c>
   217d0:	mov	r0, r4
   217d4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   217d8:	ldr	r1, [pc, #2364]	; 2211c <__flatcc_fb_gen_c_json_parser@@Base+0xf30>
   217dc:	mov	r0, r4
   217e0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   217e4:	ldr	r1, [pc, #2356]	; 22120 <__flatcc_fb_gen_c_json_parser@@Base+0xf34>
   217e8:	mov	r0, r4
   217ec:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   217f0:	ldr	r3, [r4, #220]	; 0xdc
   217f4:	cmp	r3, #0
   217f8:	beq	21a9c <__flatcc_fb_gen_c_json_parser@@Base+0x8b0>
   217fc:	sub	r3, r3, #1
   21800:	str	r3, [r4, #220]	; 0xdc
   21804:	ldr	r1, [pc, #2684]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   21808:	mov	r0, r4
   2180c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21810:	ldr	r1, [pc, #2576]	; 22228 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   21814:	mov	r0, r4
   21818:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2181c:	ldr	r3, [sp, #20]
   21820:	cmp	r3, #0
   21824:	ble	21858 <__flatcc_fb_gen_c_json_parser@@Base+0x66c>
   21828:	ldr	r3, [r4, #220]	; 0xdc
   2182c:	str	r3, [r4, #228]	; 0xe4
   21830:	mov	r3, #0
   21834:	str	r3, [r4, #220]	; 0xdc
   21838:	ldr	r1, [pc, #2276]	; 22124 <__flatcc_fb_gen_c_json_parser@@Base+0xf38>
   2183c:	mov	r0, r4
   21840:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21844:	ldr	r3, [r4, #228]	; 0xe4
   21848:	str	r3, [r4, #220]	; 0xdc
   2184c:	ldr	r1, [pc, #2260]	; 22128 <__flatcc_fb_gen_c_json_parser@@Base+0xf3c>
   21850:	mov	r0, r4
   21854:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21858:	ldr	r3, [r4, #220]	; 0xdc
   2185c:	cmp	r3, #0
   21860:	beq	21ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x8c4>
   21864:	sub	r3, r3, #1
   21868:	str	r3, [r4, #220]	; 0xdc
   2186c:	ldr	r1, [pc, #2580]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   21870:	mov	r0, r4
   21874:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21878:	mov	r1, sl
   2187c:	mov	r0, r4
   21880:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21884:	ldr	r0, [sp, #24]
   21888:	bl	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x23c4>
   2188c:	ldrh	r3, [r6, #8]
   21890:	cmp	r3, #1
   21894:	bne	21ac4 <__flatcc_fb_gen_c_json_parser@@Base+0x8d8>
   21898:	mov	r2, #220	; 0xdc
   2189c:	mov	r1, #0
   218a0:	add	r0, sp, #52	; 0x34
   218a4:	bl	13f9c <memset@plt>
   218a8:	add	r2, sp, #52	; 0x34
   218ac:	mov	r1, r5
   218b0:	ldr	r0, [r6, #12]
   218b4:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   218b8:	add	r2, sp, #52	; 0x34
   218bc:	ldr	r1, [pc, #2152]	; 2212c <__flatcc_fb_gen_c_json_parser@@Base+0xf40>
   218c0:	mov	r0, r4
   218c4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   218c8:	ldr	r1, [pc, #2440]	; 22258 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   218cc:	mov	r0, r4
   218d0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   218d4:	ldr	r3, [r4, #220]	; 0xdc
   218d8:	add	r3, r3, #1
   218dc:	str	r3, [r4, #220]	; 0xdc
   218e0:	ldr	r1, [pc, #2084]	; 2210c <__flatcc_fb_gen_c_json_parser@@Base+0xf20>
   218e4:	mov	r0, r4
   218e8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   218ec:	mov	r1, sl
   218f0:	mov	r0, r4
   218f4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   218f8:	ldr	r1, [pc, #2096]	; 22130 <__flatcc_fb_gen_c_json_parser@@Base+0xf44>
   218fc:	mov	r0, r4
   21900:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21904:	ldrd	r2, [r6, #112]	; 0x70
   21908:	ldrh	r1, [r6, #104]	; 0x68
   2190c:	str	r1, [sp]
   21910:	ldr	r1, [pc, #2076]	; 22134 <__flatcc_fb_gen_c_json_parser@@Base+0xf48>
   21914:	mov	r0, r4
   21918:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2191c:	add	r2, sp, #52	; 0x34
   21920:	ldr	r1, [pc, #2064]	; 22138 <__flatcc_fb_gen_c_json_parser@@Base+0xf4c>
   21924:	mov	r0, r4
   21928:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2192c:	ldr	r1, [pc, #2056]	; 2213c <__flatcc_fb_gen_c_json_parser@@Base+0xf50>
   21930:	mov	r0, r4
   21934:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21938:	ldr	r1, [pc, #2280]	; 22228 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   2193c:	mov	r0, r4
   21940:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21944:	ldr	r3, [r4, #220]	; 0xdc
   21948:	str	r3, [r4, #228]	; 0xe4
   2194c:	mov	r3, #0
   21950:	str	r3, [r4, #220]	; 0xdc
   21954:	ldr	r1, [pc, #1992]	; 22124 <__flatcc_fb_gen_c_json_parser@@Base+0xf38>
   21958:	mov	r0, r4
   2195c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21960:	ldr	r3, [r4, #228]	; 0xe4
   21964:	str	r3, [r4, #220]	; 0xdc
   21968:	ldr	r1, [pc, #1976]	; 22128 <__flatcc_fb_gen_c_json_parser@@Base+0xf3c>
   2196c:	mov	r0, r4
   21970:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21974:	ldr	r3, [r4, #220]	; 0xdc
   21978:	cmp	r3, #0
   2197c:	beq	21ad8 <__flatcc_fb_gen_c_json_parser@@Base+0x8ec>
   21980:	sub	r3, r3, #1
   21984:	str	r3, [r4, #220]	; 0xdc
   21988:	ldr	r1, [pc, #2296]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   2198c:	mov	r0, r4
   21990:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21994:	mov	r1, sl
   21998:	mov	r0, r4
   2199c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   219a0:	add	r2, sp, #52	; 0x34
   219a4:	ldr	r1, [pc, #1940]	; 22140 <__flatcc_fb_gen_c_json_parser@@Base+0xf54>
   219a8:	mov	r0, r4
   219ac:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   219b0:	ldr	r1, [pc, #2208]	; 22258 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   219b4:	mov	r0, r4
   219b8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   219bc:	ldr	r3, [r4, #220]	; 0xdc
   219c0:	add	r3, r3, #1
   219c4:	str	r3, [r4, #220]	; 0xdc
   219c8:	add	r2, sp, #52	; 0x34
   219cc:	ldr	r1, [pc, #1904]	; 22144 <__flatcc_fb_gen_c_json_parser@@Base+0xf58>
   219d0:	mov	r0, r4
   219d4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   219d8:	ldr	r3, [r4, #220]	; 0xdc
   219dc:	cmp	r3, #0
   219e0:	beq	21aec <__flatcc_fb_gen_c_json_parser@@Base+0x900>
   219e4:	sub	r3, r3, #1
   219e8:	str	r3, [r4, #220]	; 0xdc
   219ec:	ldr	r1, [pc, #2196]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   219f0:	mov	r0, r4
   219f4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   219f8:	mov	r1, sl
   219fc:	mov	r0, r4
   21a00:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21a04:	b	21670 <__flatcc_fb_gen_c_json_parser@@Base+0x484>
   21a08:	ldr	r3, [pc, #1848]	; 22148 <__flatcc_fb_gen_c_json_parser@@Base+0xf5c>
   21a0c:	ldr	r2, [pc, #1848]	; 2214c <__flatcc_fb_gen_c_json_parser@@Base+0xf60>
   21a10:	ldr	r1, [pc, #2192]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21a14:	ldr	r0, [pc, #1844]	; 22150 <__flatcc_fb_gen_c_json_parser@@Base+0xf64>
   21a18:	bl	14038 <__assert_fail@plt>
   21a1c:	ldr	r3, [sp, #20]
   21a20:	cmp	r3, #0
   21a24:	ble	216e4 <__flatcc_fb_gen_c_json_parser@@Base+0x4f8>
   21a28:	ldr	r5, [pc, #1828]	; 22154 <__flatcc_fb_gen_c_json_parser@@Base+0xf68>
   21a2c:	ldr	r4, [pc, #2164]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21a30:	ldr	r3, [pc, #1992]	; 22200 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   21a34:	ldr	r0, [r3]
   21a38:	ldr	r3, [pc, #1988]	; 22204 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   21a3c:	str	r3, [sp]
   21a40:	mov	r3, r5
   21a44:	mov	r2, r4
   21a48:	ldr	r1, [pc, #1976]	; 22208 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   21a4c:	bl	13f84 <fprintf@plt>
   21a50:	ldr	r3, [pc, #1776]	; 22148 <__flatcc_fb_gen_c_json_parser@@Base+0xf5c>
   21a54:	mov	r2, r5
   21a58:	mov	r1, r4
   21a5c:	ldr	r0, [pc, #1960]	; 2220c <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   21a60:	bl	14038 <__assert_fail@plt>
   21a64:	ldr	r1, [pc, #1772]	; 22158 <__flatcc_fb_gen_c_json_parser@@Base+0xf6c>
   21a68:	mov	r0, r4
   21a6c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21a70:	ldr	r1, [pc, #1964]	; 22224 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   21a74:	mov	r0, r4
   21a78:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21a7c:	mov	r2, #0
   21a80:	str	r2, [sp]
   21a84:	ldr	r3, [sp, #20]
   21a88:	sub	r3, r3, #1
   21a8c:	add	r1, sp, #24
   21a90:	mov	r0, r4
   21a94:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   21a98:	b	217e4 <__flatcc_fb_gen_c_json_parser@@Base+0x5f8>
   21a9c:	ldr	r3, [pc, #1700]	; 22148 <__flatcc_fb_gen_c_json_parser@@Base+0xf5c>
   21aa0:	ldr	r2, [pc, #1716]	; 2215c <__flatcc_fb_gen_c_json_parser@@Base+0xf70>
   21aa4:	ldr	r1, [pc, #2044]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21aa8:	ldr	r0, [pc, #2032]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   21aac:	bl	14038 <__assert_fail@plt>
   21ab0:	ldr	r3, [pc, #1680]	; 22148 <__flatcc_fb_gen_c_json_parser@@Base+0xf5c>
   21ab4:	ldr	r2, [pc, #1700]	; 22160 <__flatcc_fb_gen_c_json_parser@@Base+0xf74>
   21ab8:	ldr	r1, [pc, #2024]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21abc:	ldr	r0, [pc, #2012]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   21ac0:	bl	14038 <__assert_fail@plt>
   21ac4:	ldr	r3, [pc, #1688]	; 22164 <__flatcc_fb_gen_c_json_parser@@Base+0xf78>
   21ac8:	ldr	r2, [pc, #1688]	; 22168 <__flatcc_fb_gen_c_json_parser@@Base+0xf7c>
   21acc:	ldr	r1, [pc, #2004]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21ad0:	ldr	r0, [pc, #1656]	; 22150 <__flatcc_fb_gen_c_json_parser@@Base+0xf64>
   21ad4:	bl	14038 <__assert_fail@plt>
   21ad8:	ldr	r3, [pc, #1668]	; 22164 <__flatcc_fb_gen_c_json_parser@@Base+0xf78>
   21adc:	ldr	r2, [pc, #1672]	; 2216c <__flatcc_fb_gen_c_json_parser@@Base+0xf80>
   21ae0:	ldr	r1, [pc, #1984]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21ae4:	ldr	r0, [pc, #1972]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   21ae8:	bl	14038 <__assert_fail@plt>
   21aec:	ldr	r3, [pc, #1648]	; 22164 <__flatcc_fb_gen_c_json_parser@@Base+0xf78>
   21af0:	mov	r2, #1376	; 0x560
   21af4:	ldr	r1, [pc, #1964]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21af8:	ldr	r0, [pc, #1952]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   21afc:	bl	14038 <__assert_fail@plt>
   21b00:	mov	r3, #0
   21b04:	str	r3, [sp, #24]
   21b08:	str	r3, [sp, #28]
   21b0c:	str	r3, [sp, #32]
   21b10:	str	r3, [sp, #36]	; 0x24
   21b14:	str	r3, [sp, #40]	; 0x28
   21b18:	str	r3, [sp, #44]	; 0x2c
   21b1c:	str	r3, [sp, #48]	; 0x30
   21b20:	ldrh	r3, [r6, #8]
   21b24:	cmp	r3, #0
   21b28:	bne	21d20 <__flatcc_fb_gen_c_json_parser@@Base+0xb34>
   21b2c:	add	r1, sp, #20
   21b30:	mov	r0, r6
   21b34:	bl	20140 <__flatcc_fb_gen_c_verifier@@Base+0x255c>
   21b38:	str	r0, [sp, #24]
   21b3c:	cmp	r0, #0
   21b40:	beq	21d34 <__flatcc_fb_gen_c_json_parser@@Base+0xb48>
   21b44:	str	r6, [sp, #36]	; 0x24
   21b48:	mov	r3, #0
   21b4c:	str	r3, [sp, #40]	; 0x28
   21b50:	ldr	r2, [pc, #1444]	; 220fc <__flatcc_fb_gen_c_json_parser@@Base+0xf10>
   21b54:	str	r2, [sp, #28]
   21b58:	str	fp, [sp, #32]
   21b5c:	str	r3, [sp, #44]	; 0x2c
   21b60:	ldr	r3, [sp, #20]
   21b64:	cmp	r3, #0
   21b68:	ble	21b94 <__flatcc_fb_gen_c_json_parser@@Base+0x9a8>
   21b6c:	mov	r1, r0
   21b70:	add	r0, r0, r3, lsl #4
   21b74:	ldr	r2, [r1, #12]
   21b78:	ldr	r3, [sp, #44]	; 0x2c
   21b7c:	cmp	r2, #0
   21b80:	addne	r3, r3, #1
   21b84:	str	r3, [sp, #44]	; 0x2c
   21b88:	add	r1, r1, #16
   21b8c:	cmp	r0, r1
   21b90:	bne	21b74 <__flatcc_fb_gen_c_json_parser@@Base+0x988>
   21b94:	mov	r2, #220	; 0xdc
   21b98:	mov	r1, #0
   21b9c:	add	r0, sp, #52	; 0x34
   21ba0:	bl	13f9c <memset@plt>
   21ba4:	add	r2, sp, #52	; 0x34
   21ba8:	mov	r1, r6
   21bac:	ldr	r0, [r6, #12]
   21bb0:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   21bb4:	add	r2, sp, #52	; 0x34
   21bb8:	ldr	r1, [pc, #1456]	; 22170 <__flatcc_fb_gen_c_json_parser@@Base+0xf84>
   21bbc:	mov	r0, r4
   21bc0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21bc4:	ldr	r1, [pc, #1676]	; 22258 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   21bc8:	mov	r0, r4
   21bcc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21bd0:	ldr	r3, [r4, #220]	; 0xdc
   21bd4:	add	r3, r3, #1
   21bd8:	str	r3, [r4, #220]	; 0xdc
   21bdc:	ldr	r1, [pc, #1312]	; 22104 <__flatcc_fb_gen_c_json_parser@@Base+0xf18>
   21be0:	mov	r0, r4
   21be4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21be8:	ldr	r3, [sp, #20]
   21bec:	cmp	r3, #0
   21bf0:	ble	21c24 <__flatcc_fb_gen_c_json_parser@@Base+0xa38>
   21bf4:	ldr	r1, [pc, #1296]	; 2210c <__flatcc_fb_gen_c_json_parser@@Base+0xf20>
   21bf8:	mov	r0, r4
   21bfc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c00:	ldr	r1, [pc, #1388]	; 22174 <__flatcc_fb_gen_c_json_parser@@Base+0xf88>
   21c04:	mov	r0, r4
   21c08:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c0c:	ldr	r1, [pc, #1544]	; 2221c <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   21c10:	mov	r0, r4
   21c14:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c18:	ldr	r1, [pc, #1536]	; 22220 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   21c1c:	mov	r0, r4
   21c20:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c24:	ldr	r3, [sp, #44]	; 0x2c
   21c28:	cmp	r3, #0
   21c2c:	bne	21d98 <__flatcc_fb_gen_c_json_parser@@Base+0xbac>
   21c30:	mov	r1, sl
   21c34:	mov	r0, r4
   21c38:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c3c:	ldr	r1, [pc, #1260]	; 22130 <__flatcc_fb_gen_c_json_parser@@Base+0xf44>
   21c40:	mov	r0, r4
   21c44:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c48:	ldrd	r2, [r6, #96]	; 0x60
   21c4c:	ldr	r1, [pc, #1316]	; 22178 <__flatcc_fb_gen_c_json_parser@@Base+0xf8c>
   21c50:	mov	r0, r4
   21c54:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c58:	ldr	r2, [sp, #44]	; 0x2c
   21c5c:	cmp	r2, #0
   21c60:	bne	21da8 <__flatcc_fb_gen_c_json_parser@@Base+0xbbc>
   21c64:	ldr	r1, [pc, #1188]	; 22110 <__flatcc_fb_gen_c_json_parser@@Base+0xf24>
   21c68:	mov	r0, r4
   21c6c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c70:	ldr	r1, [pc, #1180]	; 22114 <__flatcc_fb_gen_c_json_parser@@Base+0xf28>
   21c74:	mov	r0, r4
   21c78:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c7c:	ldr	r3, [r4, #220]	; 0xdc
   21c80:	add	r3, r3, #1
   21c84:	str	r3, [r4, #220]	; 0xdc
   21c88:	ldr	r1, [pc, #1224]	; 22158 <__flatcc_fb_gen_c_json_parser@@Base+0xf6c>
   21c8c:	mov	r0, r4
   21c90:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21c94:	ldr	r3, [sp, #20]
   21c98:	cmp	r3, #0
   21c9c:	ble	21dbc <__flatcc_fb_gen_c_json_parser@@Base+0xbd0>
   21ca0:	ldr	r1, [pc, #1404]	; 22224 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   21ca4:	mov	r0, r4
   21ca8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21cac:	mov	r2, #0
   21cb0:	str	r2, [sp]
   21cb4:	ldr	r3, [sp, #20]
   21cb8:	sub	r3, r3, #1
   21cbc:	add	r1, sp, #24
   21cc0:	mov	r0, r4
   21cc4:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   21cc8:	ldr	r1, [pc, #1196]	; 2217c <__flatcc_fb_gen_c_json_parser@@Base+0xf90>
   21ccc:	mov	r0, r4
   21cd0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21cd4:	ldr	r3, [r4, #220]	; 0xdc
   21cd8:	cmp	r3, #0
   21cdc:	beq	21dd8 <__flatcc_fb_gen_c_json_parser@@Base+0xbec>
   21ce0:	sub	r3, r3, #1
   21ce4:	str	r3, [r4, #220]	; 0xdc
   21ce8:	ldr	r1, [pc, #1432]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   21cec:	mov	r0, r4
   21cf0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21cf4:	ldr	r1, [pc, #1156]	; 22180 <__flatcc_fb_gen_c_json_parser@@Base+0xf94>
   21cf8:	mov	r0, r4
   21cfc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21d00:	ldr	r3, [sp, #20]
   21d04:	cmp	r3, #0
   21d08:	ble	21f1c <__flatcc_fb_gen_c_json_parser@@Base+0xd30>
   21d0c:	mov	r8, #1
   21d10:	mov	r5, #0
   21d14:	mov	r7, r5
   21d18:	str	r8, [sp, #12]
   21d1c:	b	21e34 <__flatcc_fb_gen_c_json_parser@@Base+0xc48>
   21d20:	ldr	r3, [pc, #1116]	; 22184 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   21d24:	ldr	r2, [pc, #1116]	; 22188 <__flatcc_fb_gen_c_json_parser@@Base+0xf9c>
   21d28:	ldr	r1, [pc, #1400]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21d2c:	ldr	r0, [pc, #1112]	; 2218c <__flatcc_fb_gen_c_json_parser@@Base+0xfa0>
   21d30:	bl	14038 <__assert_fail@plt>
   21d34:	ldr	r3, [sp, #20]
   21d38:	cmp	r3, #0
   21d3c:	bgt	21d60 <__flatcc_fb_gen_c_json_parser@@Base+0xb74>
   21d40:	str	r6, [sp, #36]	; 0x24
   21d44:	mov	r3, #0
   21d48:	str	r3, [sp, #40]	; 0x28
   21d4c:	ldr	r2, [pc, #936]	; 220fc <__flatcc_fb_gen_c_json_parser@@Base+0xf10>
   21d50:	str	r2, [sp, #28]
   21d54:	str	fp, [sp, #32]
   21d58:	str	r3, [sp, #44]	; 0x2c
   21d5c:	b	21b94 <__flatcc_fb_gen_c_json_parser@@Base+0x9a8>
   21d60:	ldr	r4, [pc, #1344]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21d64:	ldr	r3, [pc, #1172]	; 22200 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   21d68:	ldr	r0, [r3]
   21d6c:	ldr	r3, [pc, #1168]	; 22204 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   21d70:	str	r3, [sp]
   21d74:	mov	r3, #1392	; 0x570
   21d78:	mov	r2, r4
   21d7c:	ldr	r1, [pc, #1156]	; 22208 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   21d80:	bl	13f84 <fprintf@plt>
   21d84:	ldr	r3, [pc, #1016]	; 22184 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   21d88:	mov	r2, #1392	; 0x570
   21d8c:	mov	r1, r4
   21d90:	ldr	r0, [pc, #1140]	; 2220c <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   21d94:	bl	14038 <__assert_fail@plt>
   21d98:	ldr	r1, [pc, #1008]	; 22190 <__flatcc_fb_gen_c_json_parser@@Base+0xfa4>
   21d9c:	mov	r0, r4
   21da0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21da4:	b	21c30 <__flatcc_fb_gen_c_json_parser@@Base+0xa44>
   21da8:	asr	r3, r2, #31
   21dac:	ldr	r1, [pc, #992]	; 22194 <__flatcc_fb_gen_c_json_parser@@Base+0xfa8>
   21db0:	mov	r0, r4
   21db4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21db8:	b	21c64 <__flatcc_fb_gen_c_json_parser@@Base+0xa78>
   21dbc:	ldr	r1, [pc, #980]	; 22198 <__flatcc_fb_gen_c_json_parser@@Base+0xfac>
   21dc0:	mov	r0, r4
   21dc4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21dc8:	ldr	r1, [pc, #844]	; 2211c <__flatcc_fb_gen_c_json_parser@@Base+0xf30>
   21dcc:	mov	r0, r4
   21dd0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21dd4:	b	21cc8 <__flatcc_fb_gen_c_json_parser@@Base+0xadc>
   21dd8:	ldr	r3, [pc, #932]	; 22184 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   21ddc:	ldr	r2, [pc, #952]	; 2219c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   21de0:	ldr	r1, [pc, #1216]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   21de4:	ldr	r0, [pc, #1204]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   21de8:	bl	14038 <__assert_fail@plt>
   21dec:	ldr	r3, [r1, #16]
   21df0:	ldrh	r2, [r3, #8]
   21df4:	cmp	r2, #4
   21df8:	movne	r2, #0
   21dfc:	moveq	r2, #1
   21e00:	b	21e64 <__flatcc_fb_gen_c_json_parser@@Base+0xc78>
   21e04:	ldrd	r0, [r1, #96]	; 0x60
   21e08:	subs	r8, r0, r2
   21e0c:	sbc	r9, r1, r2, asr #31
   21e10:	mov	r2, r8
   21e14:	mov	r3, r9
   21e18:	ldr	r1, [pc, #896]	; 221a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfb4>
   21e1c:	mov	r0, r4
   21e20:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21e24:	add	r5, r5, #1
   21e28:	ldr	r3, [sp, #20]
   21e2c:	cmp	r5, r3
   21e30:	bge	21eac <__flatcc_fb_gen_c_json_parser@@Base+0xcc0>
   21e34:	ldr	r3, [sp, #24]
   21e38:	add	r3, r3, r5, lsl #4
   21e3c:	ldr	r1, [r3, #8]
   21e40:	ldrh	r0, [r1, #72]	; 0x48
   21e44:	tst	r0, #4
   21e48:	bne	21e24 <__flatcc_fb_gen_c_json_parser@@Base+0xc38>
   21e4c:	ldrh	r3, [r1, #24]
   21e50:	sub	r3, r3, #14
   21e54:	uxth	r3, r3
   21e58:	cmp	r3, #1
   21e5c:	movhi	r2, r7
   21e60:	bls	21dec <__flatcc_fb_gen_c_json_parser@@Base+0xc00>
   21e64:	tst	r0, #256	; 0x100
   21e68:	beq	21e24 <__flatcc_fb_gen_c_json_parser@@Base+0xc38>
   21e6c:	ldr	r3, [sp, #12]
   21e70:	cmp	r3, #0
   21e74:	beq	21e04 <__flatcc_fb_gen_c_json_parser@@Base+0xc18>
   21e78:	ldrd	r0, [r1, #96]	; 0x60
   21e7c:	subs	r8, r0, r2
   21e80:	sbc	r9, r1, r2, asr #31
   21e84:	mov	r2, r8
   21e88:	mov	r3, r9
   21e8c:	ldr	r1, [pc, #784]	; 221a4 <__flatcc_fb_gen_c_json_parser@@Base+0xfb8>
   21e90:	mov	r0, r4
   21e94:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21e98:	ldr	r3, [r4, #220]	; 0xdc
   21e9c:	add	r3, r3, #1
   21ea0:	str	r3, [r4, #220]	; 0xdc
   21ea4:	str	r7, [sp, #12]
   21ea8:	b	21e24 <__flatcc_fb_gen_c_json_parser@@Base+0xc38>
   21eac:	ldr	r8, [sp, #12]
   21eb0:	cmp	r8, #0
   21eb4:	bne	21f1c <__flatcc_fb_gen_c_json_parser@@Base+0xd30>
   21eb8:	ldr	r3, [r4, #220]	; 0xdc
   21ebc:	cmp	r3, #0
   21ec0:	beq	2200c <__flatcc_fb_gen_c_json_parser@@Base+0xe20>
   21ec4:	sub	r3, r3, #1
   21ec8:	str	r3, [r4, #220]	; 0xdc
   21ecc:	ldr	r1, [pc, #724]	; 221a8 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   21ed0:	mov	r0, r4
   21ed4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21ed8:	ldr	r3, [r4, #220]	; 0xdc
   21edc:	add	r3, r3, #1
   21ee0:	str	r3, [r4, #220]	; 0xdc
   21ee4:	ldr	r1, [pc, #704]	; 221ac <__flatcc_fb_gen_c_json_parser@@Base+0xfc0>
   21ee8:	mov	r0, r4
   21eec:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21ef0:	ldr	r1, [pc, #696]	; 221b0 <__flatcc_fb_gen_c_json_parser@@Base+0xfc4>
   21ef4:	mov	r0, r4
   21ef8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21efc:	ldr	r3, [r4, #220]	; 0xdc
   21f00:	cmp	r3, #0
   21f04:	beq	22020 <__flatcc_fb_gen_c_json_parser@@Base+0xe34>
   21f08:	sub	r3, r3, #1
   21f0c:	str	r3, [r4, #220]	; 0xdc
   21f10:	ldr	r1, [pc, #880]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   21f14:	mov	r0, r4
   21f18:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f1c:	ldr	r3, [sp, #44]	; 0x2c
   21f20:	cmp	r3, #0
   21f24:	bne	22034 <__flatcc_fb_gen_c_json_parser@@Base+0xe48>
   21f28:	ldr	r1, [pc, #644]	; 221b4 <__flatcc_fb_gen_c_json_parser@@Base+0xfc8>
   21f2c:	mov	r0, r4
   21f30:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f34:	ldr	r1, [pc, #748]	; 22228 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   21f38:	mov	r0, r4
   21f3c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f40:	ldr	r3, [r4, #220]	; 0xdc
   21f44:	str	r3, [r4, #228]	; 0xe4
   21f48:	mov	r3, #0
   21f4c:	str	r3, [r4, #220]	; 0xdc
   21f50:	ldr	r1, [pc, #460]	; 22124 <__flatcc_fb_gen_c_json_parser@@Base+0xf38>
   21f54:	mov	r0, r4
   21f58:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f5c:	ldr	r3, [r4, #228]	; 0xe4
   21f60:	str	r3, [r4, #220]	; 0xdc
   21f64:	ldr	r1, [pc, #444]	; 22128 <__flatcc_fb_gen_c_json_parser@@Base+0xf3c>
   21f68:	mov	r0, r4
   21f6c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f70:	ldr	r3, [r4, #220]	; 0xdc
   21f74:	cmp	r3, #0
   21f78:	beq	22044 <__flatcc_fb_gen_c_json_parser@@Base+0xe58>
   21f7c:	sub	r3, r3, #1
   21f80:	str	r3, [r4, #220]	; 0xdc
   21f84:	ldr	r1, [pc, #764]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   21f88:	mov	r0, r4
   21f8c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f90:	mov	r1, sl
   21f94:	mov	r0, r4
   21f98:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21f9c:	add	r2, sp, #52	; 0x34
   21fa0:	ldr	r1, [pc, #408]	; 22140 <__flatcc_fb_gen_c_json_parser@@Base+0xf54>
   21fa4:	mov	r0, r4
   21fa8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21fac:	ldr	r1, [pc, #676]	; 22258 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   21fb0:	mov	r0, r4
   21fb4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21fb8:	ldr	r3, [r4, #220]	; 0xdc
   21fbc:	add	r3, r3, #1
   21fc0:	str	r3, [r4, #220]	; 0xdc
   21fc4:	add	r2, sp, #52	; 0x34
   21fc8:	ldr	r1, [pc, #488]	; 221b8 <__flatcc_fb_gen_c_json_parser@@Base+0xfcc>
   21fcc:	mov	r0, r4
   21fd0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21fd4:	ldr	r3, [r4, #220]	; 0xdc
   21fd8:	cmp	r3, #0
   21fdc:	beq	22058 <__flatcc_fb_gen_c_json_parser@@Base+0xe6c>
   21fe0:	sub	r3, r3, #1
   21fe4:	str	r3, [r4, #220]	; 0xdc
   21fe8:	ldr	r1, [pc, #664]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   21fec:	mov	r0, r4
   21ff0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   21ff4:	mov	r1, sl
   21ff8:	mov	r0, r4
   21ffc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22000:	ldr	r0, [sp, #24]
   22004:	bl	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x23c4>
   22008:	b	21670 <__flatcc_fb_gen_c_json_parser@@Base+0x484>
   2200c:	ldr	r3, [pc, #368]	; 22184 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   22010:	ldr	r2, [pc, #420]	; 221bc <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
   22014:	ldr	r1, [pc, #652]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22018:	ldr	r0, [pc, #640]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   2201c:	bl	14038 <__assert_fail@plt>
   22020:	ldr	r3, [pc, #348]	; 22184 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   22024:	ldr	r2, [pc, #404]	; 221c0 <__flatcc_fb_gen_c_json_parser@@Base+0xfd4>
   22028:	ldr	r1, [pc, #632]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   2202c:	ldr	r0, [pc, #620]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22030:	bl	14038 <__assert_fail@plt>
   22034:	ldr	r1, [pc, #392]	; 221c4 <__flatcc_fb_gen_c_json_parser@@Base+0xfd8>
   22038:	mov	r0, r4
   2203c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22040:	b	21f28 <__flatcc_fb_gen_c_json_parser@@Base+0xd3c>
   22044:	ldr	r3, [pc, #312]	; 22184 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   22048:	ldr	r2, [pc, #376]	; 221c8 <__flatcc_fb_gen_c_json_parser@@Base+0xfdc>
   2204c:	ldr	r1, [pc, #596]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22050:	ldr	r0, [pc, #584]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22054:	bl	14038 <__assert_fail@plt>
   22058:	ldr	r3, [pc, #292]	; 22184 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   2205c:	ldr	r2, [pc, #360]	; 221cc <__flatcc_fb_gen_c_json_parser@@Base+0xfe0>
   22060:	ldr	r1, [pc, #576]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22064:	ldr	r0, [pc, #564]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22068:	bl	14038 <__assert_fail@plt>
   2206c:	mov	r1, r6
   22070:	mov	r0, r4
   22074:	bl	20ed8 <__flatcc_fb_gen_c_verifier@@Base+0x32f4>
   22078:	b	21670 <__flatcc_fb_gen_c_json_parser@@Base+0x484>
   2207c:	andeq	pc, r4, r8, ror r6	; <UNPREDICTABLE>
   22080:	muleq	r4, r4, r6
   22084:	andeq	r5, r4, r0, lsr #2
   22088:			; <UNDEFINED> instruction: 0x0004f6b0
   2208c:	andeq	pc, r4, r0, lsl #14
   22090:	andeq	pc, r4, r8, lsr #14
   22094:	andeq	fp, r3, r8, lsl #12
   22098:	andeq	pc, r4, ip, lsr r9	; <UNPREDICTABLE>
   2209c:	andeq	pc, r4, ip, asr #19
   220a0:			; <UNDEFINED> instruction: 0x0004f5b4
   220a4:	strdeq	lr, [r4], -r8
   220a8:	andeq	pc, r4, r0, lsl #20
   220ac:	andeq	pc, r4, r0, lsl #21
   220b0:	andeq	ip, r3, r4, asr #28
   220b4:	andeq	pc, r4, r8, lsr r7	; <UNPREDICTABLE>
   220b8:	andeq	pc, r4, ip, lsr r7	; <UNPREDICTABLE>
   220bc:	muleq	r4, r4, r7
   220c0:	muleq	r4, r8, r7
   220c4:	ldrdeq	pc, [r4], -ip
   220c8:	andeq	pc, r4, r4, lsl r8	; <UNPREDICTABLE>
   220cc:	andeq	pc, r4, ip, lsr r8	; <UNPREDICTABLE>
   220d0:	andeq	pc, r4, r4, lsl #17
   220d4:	ldrdeq	lr, [r4], -r0
   220d8:	andeq	pc, r4, r0, lsl r9	; <UNPREDICTABLE>
   220dc:	strheq	lr, [r4], -ip
   220e0:			; <UNDEFINED> instruction: 0x000006b4
   220e4:	andeq	r0, r0, r3, asr #13
   220e8:	andeq	pc, r4, r4, lsl #22
   220ec:	ldrdeq	r0, [r0], -r3
   220f0:	andeq	lr, r1, r4, asr #11
   220f4:	ldrdeq	lr, [r1], -ip
   220f8:	ldrdeq	r0, [r0], -fp
   220fc:	muleq	r1, r0, ip
   22100:	strdeq	pc, [r4], -r4
   22104:	andeq	pc, r4, r4, ror ip	; <UNPREDICTABLE>
   22108:	andeq	pc, r4, r0, lsl #25
   2210c:	muleq	r4, ip, ip
   22110:	andeq	pc, r4, r8, lsr #25
   22114:	andeq	lr, r4, r0, ror #20
   22118:	andeq	pc, r4, r8, ror #25
   2211c:	andeq	lr, r4, r8, ror r1
   22120:	andeq	pc, r4, r4, lsr sp	; <UNPREDICTABLE>
   22124:	andeq	pc, r4, r0, ror sp	; <UNPREDICTABLE>
   22128:	andeq	lr, r4, r0, ror #15
   2212c:	andeq	pc, r4, r8, ror sp	; <UNPREDICTABLE>
   22130:	andeq	lr, r4, r8, asr #10
   22134:	strdeq	pc, [r4], -ip
   22138:	andeq	lr, r4, r0, lsr #28
   2213c:	andeq	pc, r4, r8, asr #28
   22140:	muleq	r4, ip, lr
   22144:	andeq	pc, r4, r0, lsr pc	; <UNPREDICTABLE>
   22148:	ldrdeq	lr, [r4], -r8
   2214c:	andeq	r0, r0, r5, lsl r5
   22150:	andeq	fp, r3, r4, lsl #27
   22154:	andeq	r0, r0, r7, lsl r5
   22158:	strdeq	pc, [r4], -ip
   2215c:	andeq	r0, r0, r6, lsr r5
   22160:	andeq	r0, r0, pc, lsr r5
   22164:	strdeq	lr, [r4], -r4
   22168:	andeq	r0, r0, r9, asr #10
   2216c:	andeq	r0, r0, sl, asr r5
   22170:	muleq	r4, r4, pc	; <UNPREDICTABLE>
   22174:	andeq	r0, r5, r8, lsl r0
   22178:	andeq	r0, r5, r0, asr r0
   2217c:	andeq	r0, r5, r8, lsl #2
   22180:	andeq	r0, r5, r4, asr #2
   22184:	andeq	lr, r4, r8, lsl #2
   22188:	andeq	r0, r0, lr, ror #10
   2218c:	andeq	ip, r3, r0, lsl r6
   22190:	andeq	r0, r5, ip, lsr r0
   22194:	muleq	r5, r0, r0
   22198:	andeq	r0, r5, ip, ror #1
   2219c:	muleq	r0, lr, r5
   221a0:	andeq	r0, r5, r0, lsr #3
   221a4:	andeq	r0, r5, r4, ror #2
   221a8:	andeq	lr, r4, r8, lsr sp
   221ac:	ldrdeq	r0, [r5], -ip
   221b0:	andeq	pc, r4, r8, asr r1	; <UNPREDICTABLE>
   221b4:	andeq	r0, r5, r8, ror r2
   221b8:			; <UNDEFINED> instruction: 0x000502bc
   221bc:			; <UNDEFINED> instruction: 0x000005b2
   221c0:			; <UNDEFINED> instruction: 0x000005b5
   221c4:	andeq	r0, r5, r4, lsr r2
   221c8:	andeq	r0, r0, r1, asr #11
   221cc:	andeq	r0, r0, r7, asr #11
   221d0:			; <UNDEFINED> instruction: 0x00020bb4
   221d4:	andeq	pc, r1, ip, asr sp	; <UNPREDICTABLE>
   221d8:	andeq	pc, r1, ip, lsr sp	; <UNPREDICTABLE>
   221dc:			; <UNDEFINED> instruction: 0x0001fdbc
   221e0:	andeq	lr, r1, r0, lsl r6
   221e4:	andeq	lr, r1, r8, asr #1
   221e8:	andeq	pc, r4, r8, lsl #23
   221ec:	andeq	pc, r4, ip, ror #9
   221f0:	andeq	r0, r5, ip, lsl r3
   221f4:	andeq	pc, r4, r4, asr r5	; <UNPREDICTABLE>
   221f8:			; <UNDEFINED> instruction: 0x000505b4
   221fc:	andeq	r0, r0, sl, lsr #9
   22200:	andeq	r6, r6, r8, lsr #1
   22204:			; <UNDEFINED> instruction: 0x0004f4b0
   22208:	andeq	fp, r3, r8, lsr sl
   2220c:	andeq	r3, r4, r0, ror lr
   22210:			; <UNDEFINED> instruction: 0x000004b5
   22214:			; <UNDEFINED> instruction: 0x000004ba
   22218:	andeq	pc, r4, r4, ror r5	; <UNPREDICTABLE>
   2221c:	muleq	r4, r4, r5
   22220:	andeq	pc, r4, r8, lsr #11
   22224:	andeq	pc, r4, ip, ror #7
   22228:	andeq	lr, r4, r4, asr #15
   2222c:	andeq	lr, r4, ip, lsl r1
   22230:	andeq	r0, r0, r3, asr #9
   22234:	andeq	r0, r5, r4, lsl #7
   22238:	andeq	r0, r5, r0, asr #7
   2223c:	muleq	r5, r0, r4
   22240:	andeq	r0, r0, sl, asr #12
   22244:	andeq	r0, r0, sl, asr r6
   22248:	andeq	r0, r0, lr, asr r6
   2224c:	andeq	lr, r4, r4, lsr r1
   22250:	andeq	pc, r4, r4, asr #17
   22254:	andeq	r0, r5, r8, asr r3
   22258:	andeq	r0, r5, r0, asr lr
   2225c:	andeq	r0, r5, r0, asr #10
   22260:	andeq	r0, r5, r4, lsr #7
   22264:	andeq	r0, r5, ip, asr r5
   22268:	ldrdeq	r0, [r5], -ip
   2226c:	andeq	r0, r5, r8, asr r4
   22270:	andeq	r0, r5, r8, ror r5
   22274:	andeq	r0, r5, r4, asr #9
   22278:	ldrdeq	r0, [r5], -r8
   2227c:	andeq	r0, r5, ip, ror #9
   22280:	andeq	r0, r5, r0, lsr #10
   22284:	andeq	r0, r5, r4, lsr r5
   22288:	andeq	lr, r4, r4, ror r2
   2228c:	andeq	r5, r4, r0, lsr #2
   22290:	andeq	r0, r0, sp, ror #12
   22294:	andeq	r0, r5, r8, lsl r4
   22298:	andeq	r0, r0, sp, ror r6
   2229c:	andeq	r0, r0, r1, lsl #13
   222a0:	andeq	lr, r4, r8, ror #4
   222a4:	andeq	lr, r4, ip, asr #2
   222a8:	andeq	lr, r4, r0, lsl r2
   222ac:	andeq	r2, r4, r8, lsr #25
   222b0:	ldr	r3, [r4, #208]	; 0xd0
   222b4:	mov	r2, r4
   222b8:	ldr	r1, [pc, #-240]	; 221d0 <__flatcc_fb_gen_c_json_parser@@Base+0xfe4>
   222bc:	ldr	r0, [r3, #60]	; 0x3c
   222c0:	bl	28808 <fb_scope_table_visit@@Base>
   222c4:	mov	r1, #0
   222c8:	str	r1, [sp, #24]
   222cc:	str	r1, [sp, #28]
   222d0:	str	r1, [sp, #32]
   222d4:	str	r1, [sp, #36]	; 0x24
   222d8:	str	r1, [sp, #40]	; 0x28
   222dc:	str	r1, [sp, #44]	; 0x2c
   222e0:	str	r1, [sp, #48]	; 0x30
   222e4:	ldr	r5, [r4, #208]	; 0xd0
   222e8:	ldr	r7, [r5, #60]	; 0x3c
   222ec:	mov	r2, #44	; 0x2c
   222f0:	add	r0, sp, #52	; 0x34
   222f4:	bl	13f9c <memset@plt>
   222f8:	mov	r3, #1
   222fc:	str	r3, [sp, #52]	; 0x34
   22300:	str	r5, [sp, #92]	; 0x5c
   22304:	add	r2, sp, #52	; 0x34
   22308:	ldr	r1, [pc, #-316]	; 221d4 <__flatcc_fb_gen_c_json_parser@@Base+0xfe8>
   2230c:	mov	r0, r7
   22310:	bl	28808 <fb_scope_table_visit@@Base>
   22314:	ldr	r8, [sp, #56]	; 0x38
   22318:	mov	r1, #8
   2231c:	mov	r0, r8
   22320:	bl	13ea0 <calloc@plt>
   22324:	mov	r5, r0
   22328:	str	r0, [sp, #68]	; 0x44
   2232c:	ldr	r9, [sp, #60]	; 0x3c
   22330:	mov	r1, #8
   22334:	mov	r0, r9
   22338:	bl	13ea0 <calloc@plt>
   2233c:	mov	r6, r0
   22340:	str	r0, [sp, #72]	; 0x48
   22344:	ldr	sl, [sp, #64]	; 0x40
   22348:	mov	r0, sl
   2234c:	bl	13f3c <malloc@plt>
   22350:	str	r0, [sp, #76]	; 0x4c
   22354:	str	r5, [sp, #80]	; 0x50
   22358:	str	r6, [sp, #84]	; 0x54
   2235c:	str	r0, [sp, #88]	; 0x58
   22360:	clz	r5, r5
   22364:	lsr	r5, r5, #5
   22368:	cmp	r8, #0
   2236c:	movle	r5, #0
   22370:	cmp	r5, #0
   22374:	bne	22590 <__flatcc_fb_gen_c_json_parser@@Base+0x13a4>
   22378:	cmp	r9, #0
   2237c:	movle	r9, #0
   22380:	movgt	r9, #1
   22384:	cmp	r6, #0
   22388:	movne	r9, #0
   2238c:	cmp	r9, #0
   22390:	bne	22590 <__flatcc_fb_gen_c_json_parser@@Base+0x13a4>
   22394:	clz	r0, r0
   22398:	lsr	r0, r0, #5
   2239c:	cmp	sl, #0
   223a0:	moveq	r0, #0
   223a4:	cmp	r0, #0
   223a8:	bne	22590 <__flatcc_fb_gen_c_json_parser@@Base+0x13a4>
   223ac:	add	r2, sp, #52	; 0x34
   223b0:	ldr	r1, [pc, #-480]	; 221d8 <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   223b4:	mov	r0, r7
   223b8:	bl	28808 <fb_scope_table_visit@@Base>
   223bc:	ldr	r1, [sp, #56]	; 0x38
   223c0:	ldr	r0, [sp, #68]	; 0x44
   223c4:	bl	1fd7c <__flatcc_fb_gen_c_verifier@@Base+0x2198>
   223c8:	ldr	r1, [sp, #60]	; 0x3c
   223cc:	ldr	r0, [sp, #72]	; 0x48
   223d0:	bl	1fd7c <__flatcc_fb_gen_c_verifier@@Base+0x2198>
   223d4:	ldr	r5, [sp, #60]	; 0x3c
   223d8:	cmp	r5, #0
   223dc:	beq	22abc <__flatcc_fb_gen_c_json_parser@@Base+0x18d0>
   223e0:	mov	sl, r5
   223e4:	lsl	r7, r5, #4
   223e8:	mov	r0, r7
   223ec:	bl	13f3c <malloc@plt>
   223f0:	subs	r9, r0, #0
   223f4:	beq	2259c <__flatcc_fb_gen_c_json_parser@@Base+0x13b0>
   223f8:	cmp	r5, #0
   223fc:	ble	2243c <__flatcc_fb_gen_c_json_parser@@Base+0x1250>
   22400:	ldr	r6, [sp, #72]	; 0x48
   22404:	mov	r5, r9
   22408:	add	r7, r9, r7
   2240c:	mov	r8, #0
   22410:	ldr	r3, [r6, #4]
   22414:	str	r3, [r5]
   22418:	ldr	r0, [r6, #4]
   2241c:	bl	13f78 <strlen@plt>
   22420:	str	r0, [r5, #4]
   22424:	ldr	r3, [r6], #8
   22428:	str	r3, [r5, #8]
   2242c:	str	r8, [r5, #12]
   22430:	add	r5, r5, #16
   22434:	cmp	r7, r5
   22438:	bne	22410 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   2243c:	ldr	r3, [pc, #-616]	; 221dc <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   22440:	mov	r2, #16
   22444:	mov	r1, sl
   22448:	mov	r0, r9
   2244c:	bl	14008 <qsort@plt>
   22450:	ldr	r5, [sp, #60]	; 0x3c
   22454:	str	r9, [sp, #24]
   22458:	mov	r3, #0
   2245c:	str	r3, [sp, #36]	; 0x24
   22460:	mov	r3, #4
   22464:	str	r3, [sp, #40]	; 0x28
   22468:	ldr	r3, [pc, #-656]	; 221e0 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   2246c:	str	r3, [sp, #28]
   22470:	ldr	r3, [pc, #-660]	; 221e4 <__flatcc_fb_gen_c_json_parser@@Base+0xff8>
   22474:	str	r3, [sp, #32]
   22478:	ldr	r3, [r4, #208]	; 0xd0
   2247c:	ldr	r2, [r3, #160]	; 0xa0
   22480:	ldr	r1, [pc, #-672]	; 221e8 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   22484:	mov	r0, r4
   22488:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2248c:	ldr	r3, [r4, #220]	; 0xdc
   22490:	add	r3, r3, #2
   22494:	str	r3, [r4, #220]	; 0xdc
   22498:	ldr	r1, [pc, #-692]	; 221ec <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   2249c:	mov	r0, r4
   224a0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   224a4:	ldr	r3, [r4, #220]	; 0xdc
   224a8:	cmp	r3, #0
   224ac:	beq	225f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1404>
   224b0:	sub	r2, r3, #1
   224b4:	str	r2, [r4, #220]	; 0xdc
   224b8:	cmp	r2, #0
   224bc:	beq	22604 <__flatcc_fb_gen_c_json_parser@@Base+0x1418>
   224c0:	sub	r3, r3, #2
   224c4:	str	r3, [r4, #220]	; 0xdc
   224c8:	ldr	r1, [pc, #-632]	; 22258 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   224cc:	mov	r0, r4
   224d0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   224d4:	ldr	r3, [r4, #220]	; 0xdc
   224d8:	add	r3, r3, #1
   224dc:	str	r3, [r4, #220]	; 0xdc
   224e0:	cmp	r5, #0
   224e4:	bne	2262c <__flatcc_fb_gen_c_json_parser@@Base+0x1440>
   224e8:	ldr	r1, [pc, #-768]	; 221f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   224ec:	mov	r0, r4
   224f0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   224f4:	ldr	r1, [pc, #-776]	; 221f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   224f8:	mov	r0, r4
   224fc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22500:	ldr	r3, [r4, #220]	; 0xdc
   22504:	cmp	r3, #0
   22508:	beq	22618 <__flatcc_fb_gen_c_json_parser@@Base+0x142c>
   2250c:	sub	r3, r3, #1
   22510:	str	r3, [r4, #220]	; 0xdc
   22514:	ldr	r1, [pc, #-660]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   22518:	mov	r0, r4
   2251c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22520:	ldr	r1, [pc, #-668]	; 2228c <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   22524:	mov	r0, r4
   22528:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2252c:	ldr	r0, [sp, #24]
   22530:	bl	1ffa8 <__flatcc_fb_gen_c_verifier@@Base+0x23c4>
   22534:	add	r0, sp, #52	; 0x34
   22538:	bl	1ffbc <__flatcc_fb_gen_c_verifier@@Base+0x23d8>
   2253c:	ldr	r3, [r4, #208]	; 0xd0
   22540:	ldr	r5, [r3, #52]	; 0x34
   22544:	cmp	r5, #0
   22548:	beq	22560 <__flatcc_fb_gen_c_json_parser@@Base+0x1374>
   2254c:	ldrh	r3, [r5, #8]
   22550:	cmp	r3, #0
   22554:	beq	226c4 <__flatcc_fb_gen_c_json_parser@@Base+0x14d8>
   22558:	cmp	r3, #1
   2255c:	beq	228b4 <__flatcc_fb_gen_c_json_parser@@Base+0x16c8>
   22560:	ldr	r3, [r4, #212]	; 0xd4
   22564:	ldr	r3, [r3, #140]	; 0x8c
   22568:	cmp	r3, #0
   2256c:	bne	22aa4 <__flatcc_fb_gen_c_json_parser@@Base+0x18b8>
   22570:	ldr	r3, [r4, #208]	; 0xd0
   22574:	ldr	r2, [r3, #164]	; 0xa4
   22578:	ldr	r1, [pc, #-904]	; 221f8 <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   2257c:	mov	r0, r4
   22580:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22584:	mov	r0, #0
   22588:	add	sp, sp, #276	; 0x114
   2258c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22590:	add	r0, sp, #52	; 0x34
   22594:	bl	1ffbc <__flatcc_fb_gen_c_verifier@@Base+0x23d8>
   22598:	b	2253c <__flatcc_fb_gen_c_json_parser@@Base+0x1350>
   2259c:	mov	r3, #0
   225a0:	str	r3, [sp, #24]
   225a4:	cmp	r5, r3
   225a8:	ble	22458 <__flatcc_fb_gen_c_json_parser@@Base+0x126c>
   225ac:	add	r0, sp, #52	; 0x34
   225b0:	bl	1ffbc <__flatcc_fb_gen_c_verifier@@Base+0x23d8>
   225b4:	ldr	r5, [pc, #-960]	; 221fc <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   225b8:	ldr	r4, [pc, #-792]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   225bc:	ldr	r3, [pc, #-964]	; 22200 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   225c0:	ldr	r0, [r3]
   225c4:	ldr	r3, [pc, #-968]	; 22204 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   225c8:	str	r3, [sp]
   225cc:	mov	r3, r5
   225d0:	mov	r2, r4
   225d4:	ldr	r1, [pc, #-980]	; 22208 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   225d8:	bl	13f84 <fprintf@plt>
   225dc:	ldr	r3, [pc, #-952]	; 2222c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   225e0:	mov	r2, r5
   225e4:	mov	r1, r4
   225e8:	ldr	r0, [pc, #-996]	; 2220c <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   225ec:	bl	14038 <__assert_fail@plt>
   225f0:	ldr	r3, [pc, #-972]	; 2222c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   225f4:	ldr	r2, [pc, #-1004]	; 22210 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   225f8:	ldr	r1, [pc, #-856]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   225fc:	ldr	r0, [pc, #-868]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22600:	bl	14038 <__assert_fail@plt>
   22604:	ldr	r3, [pc, #-992]	; 2222c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   22608:	ldr	r2, [pc, #-1024]	; 22210 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   2260c:	ldr	r1, [pc, #-876]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22610:	ldr	r0, [pc, #-888]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22614:	bl	14038 <__assert_fail@plt>
   22618:	ldr	r3, [pc, #-1012]	; 2222c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   2261c:	ldr	r2, [pc, #-1040]	; 22214 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   22620:	ldr	r1, [pc, #-896]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22624:	ldr	r0, [pc, #-908]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22628:	bl	14038 <__assert_fail@plt>
   2262c:	ldr	r1, [pc, #-1052]	; 22218 <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   22630:	mov	r0, r4
   22634:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22638:	ldr	r1, [pc, #-1060]	; 2221c <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   2263c:	mov	r0, r4
   22640:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22644:	ldr	r1, [pc, #-1068]	; 22220 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   22648:	mov	r0, r4
   2264c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22650:	ldr	r1, [pc, #-972]	; 2228c <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   22654:	mov	r0, r4
   22658:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2265c:	ldr	r1, [pc, #-1088]	; 22224 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   22660:	mov	r0, r4
   22664:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22668:	mov	r2, #0
   2266c:	str	r2, [sp]
   22670:	sub	r3, r5, #1
   22674:	add	r1, sp, #24
   22678:	mov	r0, r4
   2267c:	bl	20320 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   22680:	ldr	r1, [pc, #-1120]	; 22228 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   22684:	mov	r0, r4
   22688:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2268c:	ldr	r3, [r4, #220]	; 0xdc
   22690:	cmp	r3, #0
   22694:	beq	226b0 <__flatcc_fb_gen_c_json_parser@@Base+0x14c4>
   22698:	sub	r3, r3, #1
   2269c:	str	r3, [r4, #220]	; 0xdc
   226a0:	ldr	r1, [pc, #-1056]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   226a4:	mov	r0, r4
   226a8:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   226ac:	b	22520 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   226b0:	ldr	r3, [pc, #-1164]	; 2222c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   226b4:	ldr	r2, [pc, #-1164]	; 22230 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   226b8:	ldr	r1, [pc, #-1048]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   226bc:	ldr	r0, [pc, #-1060]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   226c0:	bl	14038 <__assert_fail@plt>
   226c4:	mov	r2, #220	; 0xdc
   226c8:	mov	r1, #0
   226cc:	add	r0, sp, #52	; 0x34
   226d0:	bl	13f9c <memset@plt>
   226d4:	add	r2, sp, #52	; 0x34
   226d8:	mov	r1, r5
   226dc:	ldr	r0, [r5, #12]
   226e0:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   226e4:	ldr	r3, [r4, #208]	; 0xd0
   226e8:	ldr	r2, [r3, #160]	; 0xa0
   226ec:	ldr	r1, [pc, #-1188]	; 22250 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   226f0:	mov	r0, r4
   226f4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   226f8:	ldr	r3, [r4, #220]	; 0xdc
   226fc:	add	r3, r3, #2
   22700:	str	r3, [r4, #220]	; 0xdc
   22704:	ldr	r1, [pc, #-1208]	; 22254 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   22708:	mov	r0, r4
   2270c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22710:	ldr	r3, [r4, #220]	; 0xdc
   22714:	cmp	r3, #0
   22718:	beq	2284c <__flatcc_fb_gen_c_json_parser@@Base+0x1660>
   2271c:	sub	r2, r3, #1
   22720:	str	r2, [r4, #220]	; 0xdc
   22724:	cmp	r2, #0
   22728:	beq	22860 <__flatcc_fb_gen_c_json_parser@@Base+0x1674>
   2272c:	sub	r3, r3, #2
   22730:	str	r3, [r4, #220]	; 0xdc
   22734:	ldr	r1, [pc, #-1252]	; 22258 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   22738:	mov	r0, r4
   2273c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22740:	ldr	r3, [r4, #220]	; 0xdc
   22744:	add	r3, r3, #1
   22748:	str	r3, [r4, #220]	; 0xdc
   2274c:	ldr	r1, [pc, #-1312]	; 22234 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   22750:	mov	r0, r4
   22754:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22758:	ldr	r1, [pc, #-1280]	; 22260 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   2275c:	mov	r0, r4
   22760:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22764:	ldr	r1, [pc, #-1248]	; 2228c <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   22768:	mov	r0, r4
   2276c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22770:	ldr	r1, [pc, #-1344]	; 22238 <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   22774:	mov	r0, r4
   22778:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2277c:	ldr	r1, [pc, #-1308]	; 22268 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   22780:	mov	r0, r4
   22784:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22788:	ldr	r2, [r4, #208]	; 0xd0
   2278c:	ldrh	r3, [r2, #16]
   22790:	cmp	r3, #2
   22794:	beq	22874 <__flatcc_fb_gen_c_json_parser@@Base+0x1688>
   22798:	ldr	r1, [pc, #-1332]	; 2226c <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   2279c:	mov	r0, r4
   227a0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   227a4:	add	r2, sp, #52	; 0x34
   227a8:	ldr	r1, [pc, #-1396]	; 2223c <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   227ac:	mov	r0, r4
   227b0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   227b4:	ldr	r1, [pc, #-1352]	; 22274 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   227b8:	mov	r0, r4
   227bc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   227c0:	ldr	r3, [r4, #220]	; 0xdc
   227c4:	add	r3, r3, #1
   227c8:	str	r3, [r4, #220]	; 0xdc
   227cc:	ldr	r1, [pc, #-1372]	; 22278 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   227d0:	mov	r0, r4
   227d4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   227d8:	ldr	r3, [r4, #220]	; 0xdc
   227dc:	cmp	r3, #0
   227e0:	beq	2288c <__flatcc_fb_gen_c_json_parser@@Base+0x16a0>
   227e4:	sub	r3, r3, #1
   227e8:	str	r3, [r4, #220]	; 0xdc
   227ec:	ldr	r1, [pc, #-1388]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   227f0:	mov	r0, r4
   227f4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   227f8:	ldr	r1, [pc, #-1412]	; 2227c <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   227fc:	mov	r0, r4
   22800:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22804:	ldr	r1, [pc, #-1420]	; 22280 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   22808:	mov	r0, r4
   2280c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22810:	ldr	r1, [pc, #-1428]	; 22284 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   22814:	mov	r0, r4
   22818:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2281c:	ldr	r3, [r4, #220]	; 0xdc
   22820:	cmp	r3, #0
   22824:	beq	228a0 <__flatcc_fb_gen_c_json_parser@@Base+0x16b4>
   22828:	sub	r3, r3, #1
   2282c:	str	r3, [r4, #220]	; 0xdc
   22830:	ldr	r1, [pc, #-1456]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   22834:	mov	r0, r4
   22838:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2283c:	ldr	r1, [pc, #-1464]	; 2228c <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   22840:	mov	r0, r4
   22844:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22848:	b	22560 <__flatcc_fb_gen_c_json_parser@@Base+0x1374>
   2284c:	ldr	r3, [pc, #-1544]	; 2224c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   22850:	ldr	r2, [pc, #-1560]	; 22240 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   22854:	ldr	r1, [pc, #-1460]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22858:	ldr	r0, [pc, #-1472]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   2285c:	bl	14038 <__assert_fail@plt>
   22860:	ldr	r3, [pc, #-1564]	; 2224c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   22864:	ldr	r2, [pc, #-1580]	; 22240 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   22868:	ldr	r1, [pc, #-1480]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   2286c:	ldr	r0, [pc, #-1492]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22870:	bl	14038 <__assert_fail@plt>
   22874:	ldr	r3, [r2, #8]
   22878:	ldr	r2, [r2, #12]
   2287c:	ldr	r1, [pc, #-1520]	; 22294 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   22880:	mov	r0, r4
   22884:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22888:	b	227a4 <__flatcc_fb_gen_c_json_parser@@Base+0x15b8>
   2288c:	ldr	r3, [pc, #-1608]	; 2224c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   22890:	ldr	r2, [pc, #-1620]	; 22244 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   22894:	ldr	r1, [pc, #-1524]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22898:	ldr	r0, [pc, #-1536]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   2289c:	bl	14038 <__assert_fail@plt>
   228a0:	ldr	r3, [pc, #-1628]	; 2224c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   228a4:	ldr	r2, [pc, #-1636]	; 22248 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   228a8:	ldr	r1, [pc, #-1544]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   228ac:	ldr	r0, [pc, #-1556]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   228b0:	bl	14038 <__assert_fail@plt>
   228b4:	mov	r2, #220	; 0xdc
   228b8:	mov	r1, #0
   228bc:	add	r0, sp, #52	; 0x34
   228c0:	bl	13f9c <memset@plt>
   228c4:	add	r2, sp, #52	; 0x34
   228c8:	mov	r1, r5
   228cc:	ldr	r0, [r5, #12]
   228d0:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   228d4:	ldr	r3, [r4, #208]	; 0xd0
   228d8:	ldr	r2, [r3, #160]	; 0xa0
   228dc:	ldr	r1, [pc, #-1684]	; 22250 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   228e0:	mov	r0, r4
   228e4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   228e8:	ldr	r3, [r4, #220]	; 0xdc
   228ec:	add	r3, r3, #2
   228f0:	str	r3, [r4, #220]	; 0xdc
   228f4:	ldr	r1, [pc, #-1704]	; 22254 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   228f8:	mov	r0, r4
   228fc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22900:	ldr	r3, [r4, #220]	; 0xdc
   22904:	cmp	r3, #0
   22908:	beq	22a3c <__flatcc_fb_gen_c_json_parser@@Base+0x1850>
   2290c:	sub	r2, r3, #1
   22910:	str	r2, [r4, #220]	; 0xdc
   22914:	cmp	r2, #0
   22918:	beq	22a50 <__flatcc_fb_gen_c_json_parser@@Base+0x1864>
   2291c:	sub	r3, r3, #2
   22920:	str	r3, [r4, #220]	; 0xdc
   22924:	ldr	r1, [pc, #-1748]	; 22258 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   22928:	mov	r0, r4
   2292c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22930:	ldr	r3, [r4, #220]	; 0xdc
   22934:	add	r3, r3, #1
   22938:	str	r3, [r4, #220]	; 0xdc
   2293c:	ldr	r1, [pc, #-1768]	; 2225c <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   22940:	mov	r0, r4
   22944:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22948:	ldr	r1, [pc, #-1776]	; 22260 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   2294c:	mov	r0, r4
   22950:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22954:	ldr	r1, [pc, #-1744]	; 2228c <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   22958:	mov	r0, r4
   2295c:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22960:	ldr	r1, [pc, #-1796]	; 22264 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   22964:	mov	r0, r4
   22968:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2296c:	ldr	r1, [pc, #-1804]	; 22268 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   22970:	mov	r0, r4
   22974:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22978:	ldr	r2, [r4, #208]	; 0xd0
   2297c:	ldrh	r3, [r2, #16]
   22980:	cmp	r3, #2
   22984:	beq	22a64 <__flatcc_fb_gen_c_json_parser@@Base+0x1878>
   22988:	ldr	r1, [pc, #-1828]	; 2226c <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   2298c:	mov	r0, r4
   22990:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22994:	add	r2, sp, #52	; 0x34
   22998:	ldr	r1, [pc, #-1840]	; 22270 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   2299c:	mov	r0, r4
   229a0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   229a4:	ldr	r1, [pc, #-1848]	; 22274 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   229a8:	mov	r0, r4
   229ac:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   229b0:	ldr	r3, [r4, #220]	; 0xdc
   229b4:	add	r3, r3, #1
   229b8:	str	r3, [r4, #220]	; 0xdc
   229bc:	ldr	r1, [pc, #-1868]	; 22278 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   229c0:	mov	r0, r4
   229c4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   229c8:	ldr	r3, [r4, #220]	; 0xdc
   229cc:	cmp	r3, #0
   229d0:	beq	22a7c <__flatcc_fb_gen_c_json_parser@@Base+0x1890>
   229d4:	sub	r3, r3, #1
   229d8:	str	r3, [r4, #220]	; 0xdc
   229dc:	ldr	r1, [pc, #-1884]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   229e0:	mov	r0, r4
   229e4:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   229e8:	ldr	r1, [pc, #-1908]	; 2227c <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   229ec:	mov	r0, r4
   229f0:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   229f4:	ldr	r1, [pc, #-1916]	; 22280 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   229f8:	mov	r0, r4
   229fc:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22a00:	ldr	r1, [pc, #-1924]	; 22284 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   22a04:	mov	r0, r4
   22a08:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22a0c:	ldr	r3, [r4, #220]	; 0xdc
   22a10:	cmp	r3, #0
   22a14:	beq	22a90 <__flatcc_fb_gen_c_json_parser@@Base+0x18a4>
   22a18:	sub	r3, r3, #1
   22a1c:	str	r3, [r4, #220]	; 0xdc
   22a20:	ldr	r1, [pc, #-1952]	; 22288 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   22a24:	mov	r0, r4
   22a28:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22a2c:	ldr	r1, [pc, #-1960]	; 2228c <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   22a30:	mov	r0, r4
   22a34:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22a38:	b	22560 <__flatcc_fb_gen_c_json_parser@@Base+0x1374>
   22a3c:	ldr	r3, [pc, #-1952]	; 222a4 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   22a40:	ldr	r2, [pc, #-1976]	; 22290 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   22a44:	ldr	r1, [pc, #-1956]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22a48:	ldr	r0, [pc, #-1968]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22a4c:	bl	14038 <__assert_fail@plt>
   22a50:	ldr	r3, [pc, #-1972]	; 222a4 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   22a54:	ldr	r2, [pc, #-1996]	; 22290 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   22a58:	ldr	r1, [pc, #-1976]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22a5c:	ldr	r0, [pc, #-1988]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22a60:	bl	14038 <__assert_fail@plt>
   22a64:	ldr	r3, [r2, #8]
   22a68:	ldr	r2, [r2, #12]
   22a6c:	ldr	r1, [pc, #-2016]	; 22294 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   22a70:	mov	r0, r4
   22a74:	bl	1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   22a78:	b	22994 <__flatcc_fb_gen_c_json_parser@@Base+0x17a8>
   22a7c:	ldr	r3, [pc, #-2016]	; 222a4 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   22a80:	ldr	r2, [pc, #-2032]	; 22298 <__flatcc_fb_gen_c_json_parser@@Base+0x10ac>
   22a84:	ldr	r1, [pc, #-2020]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22a88:	ldr	r0, [pc, #-2032]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22a8c:	bl	14038 <__assert_fail@plt>
   22a90:	ldr	r3, [pc, #-2036]	; 222a4 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   22a94:	ldr	r2, [pc, #-2048]	; 2229c <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   22a98:	ldr	r1, [pc, #-2040]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   22a9c:	ldr	r0, [pc, #-2052]	; 222a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   22aa0:	bl	14038 <__assert_fail@plt>
   22aa4:	ldr	r3, [r4, #204]	; 0xcc
   22aa8:	mov	r2, #36	; 0x24
   22aac:	mov	r1, #1
   22ab0:	ldr	r0, [pc, #-2060]	; 222ac <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   22ab4:	bl	13f18 <fwrite@plt>
   22ab8:	b	22570 <__flatcc_fb_gen_c_json_parser@@Base+0x1384>
   22abc:	mov	r9, #0
   22ac0:	b	22454 <__flatcc_fb_gen_c_json_parser@@Base+0x1268>
   22ac4:	push	{r4, r5, r6, r7, r8, lr}
   22ac8:	sub	sp, sp, #448	; 0x1c0
   22acc:	mov	r5, r0
   22ad0:	mov	r4, r1
   22ad4:	mov	r6, #220	; 0xdc
   22ad8:	mov	r2, r6
   22adc:	mov	r1, #0
   22ae0:	add	r0, sp, #228	; 0xe4
   22ae4:	bl	13f9c <memset@plt>
   22ae8:	mov	r2, r6
   22aec:	mov	r1, #0
   22af0:	add	r0, sp, #8
   22af4:	bl	13f9c <memset@plt>
   22af8:	add	r2, sp, #228	; 0xe4
   22afc:	mov	r1, r4
   22b00:	ldr	r0, [r4, #12]
   22b04:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   22b08:	add	r2, sp, #228	; 0xe4
   22b0c:	ldr	r1, [pc, #344]	; 22c6c <__flatcc_fb_gen_c_json_parser@@Base+0x1a80>
   22b10:	ldr	r0, [r5, #204]	; 0xcc
   22b14:	bl	13f84 <fprintf@plt>
   22b18:	ldr	r4, [r4, #20]
   22b1c:	cmp	r4, #0
   22b20:	beq	22c38 <__flatcc_fb_gen_c_json_parser@@Base+0x1a4c>
   22b24:	ldr	r8, [pc, #324]	; 22c70 <__flatcc_fb_gen_c_json_parser@@Base+0x1a84>
   22b28:	ldr	r7, [pc, #324]	; 22c74 <__flatcc_fb_gen_c_json_parser@@Base+0x1a88>
   22b2c:	ldr	r6, [pc, #324]	; 22c78 <__flatcc_fb_gen_c_json_parser@@Base+0x1a8c>
   22b30:	b	22be4 <__flatcc_fb_gen_c_json_parser@@Base+0x19f8>
   22b34:	ldr	r3, [r4, #16]
   22b38:	add	r2, sp, #8
   22b3c:	mov	r1, r3
   22b40:	ldr	r0, [r3, #12]
   22b44:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   22b48:	ldr	r3, [r4, #16]
   22b4c:	ldrh	r3, [r3, #8]
   22b50:	cmp	r3, #0
   22b54:	beq	22b98 <__flatcc_fb_gen_c_json_parser@@Base+0x19ac>
   22b58:	cmp	r3, #1
   22b5c:	beq	22bb0 <__flatcc_fb_gen_c_json_parser@@Base+0x19c4>
   22b60:	ldr	r4, [pc, #276]	; 22c7c <__flatcc_fb_gen_c_json_parser@@Base+0x1a90>
   22b64:	ldr	r3, [pc, #276]	; 22c80 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   22b68:	ldr	r0, [r3]
   22b6c:	ldr	r3, [pc, #272]	; 22c84 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   22b70:	str	r3, [sp]
   22b74:	mov	r3, #240	; 0xf0
   22b78:	mov	r2, r4
   22b7c:	ldr	r1, [pc, #260]	; 22c88 <__flatcc_fb_gen_c_json_parser@@Base+0x1a9c>
   22b80:	bl	13f84 <fprintf@plt>
   22b84:	ldr	r3, [pc, #256]	; 22c8c <__flatcc_fb_gen_c_json_parser@@Base+0x1aa0>
   22b88:	mov	r2, #240	; 0xf0
   22b8c:	mov	r1, r4
   22b90:	ldr	r0, [pc, #248]	; 22c90 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa4>
   22b94:	bl	14038 <__assert_fail@plt>
   22b98:	add	r3, sp, #8
   22b9c:	ldr	r2, [r4, #48]	; 0x30
   22ba0:	mov	r1, r8
   22ba4:	ldr	r0, [r5, #204]	; 0xcc
   22ba8:	bl	13f84 <fprintf@plt>
   22bac:	b	22bd8 <__flatcc_fb_gen_c_json_parser@@Base+0x19ec>
   22bb0:	add	r3, sp, #8
   22bb4:	ldr	r2, [r4, #48]	; 0x30
   22bb8:	mov	r1, r7
   22bbc:	ldr	r0, [r5, #204]	; 0xcc
   22bc0:	bl	13f84 <fprintf@plt>
   22bc4:	b	22bd8 <__flatcc_fb_gen_c_json_parser@@Base+0x19ec>
   22bc8:	ldr	r2, [r4, #48]	; 0x30
   22bcc:	mov	r1, r6
   22bd0:	ldr	r0, [r5, #204]	; 0xcc
   22bd4:	bl	13f84 <fprintf@plt>
   22bd8:	ldr	r4, [r4]
   22bdc:	cmp	r4, #0
   22be0:	beq	22c38 <__flatcc_fb_gen_c_json_parser@@Base+0x1a4c>
   22be4:	ldrh	r3, [r4, #24]
   22be8:	cmp	r3, #10
   22bec:	beq	22bc8 <__flatcc_fb_gen_c_json_parser@@Base+0x19dc>
   22bf0:	cmp	r3, #14
   22bf4:	beq	22b34 <__flatcc_fb_gen_c_json_parser@@Base+0x1948>
   22bf8:	cmp	r3, #0
   22bfc:	beq	22bd8 <__flatcc_fb_gen_c_json_parser@@Base+0x19ec>
   22c00:	ldr	r4, [pc, #116]	; 22c7c <__flatcc_fb_gen_c_json_parser@@Base+0x1a90>
   22c04:	ldr	r3, [pc, #116]	; 22c80 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   22c08:	ldr	r0, [r3]
   22c0c:	ldr	r3, [pc, #112]	; 22c84 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   22c10:	str	r3, [sp]
   22c14:	mov	r3, #251	; 0xfb
   22c18:	mov	r2, r4
   22c1c:	ldr	r1, [pc, #100]	; 22c88 <__flatcc_fb_gen_c_json_parser@@Base+0x1a9c>
   22c20:	bl	13f84 <fprintf@plt>
   22c24:	ldr	r3, [pc, #96]	; 22c8c <__flatcc_fb_gen_c_json_parser@@Base+0x1aa0>
   22c28:	mov	r2, #251	; 0xfb
   22c2c:	mov	r1, r4
   22c30:	ldr	r0, [pc, #88]	; 22c90 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa4>
   22c34:	bl	14038 <__assert_fail@plt>
   22c38:	ldr	r3, [r5, #204]	; 0xcc
   22c3c:	mov	r2, #28
   22c40:	mov	r1, #1
   22c44:	ldr	r0, [pc, #72]	; 22c94 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa8>
   22c48:	bl	13f18 <fwrite@plt>
   22c4c:	ldr	r3, [r5, #204]	; 0xcc
   22c50:	mov	r2, #9
   22c54:	mov	r1, #1
   22c58:	ldr	r0, [pc, #56]	; 22c98 <__flatcc_fb_gen_c_json_parser@@Base+0x1aac>
   22c5c:	bl	13f18 <fwrite@plt>
   22c60:	mov	r0, #0
   22c64:	add	sp, sp, #448	; 0x1c0
   22c68:	pop	{r4, r5, r6, r7, r8, pc}
   22c6c:	andeq	r0, r5, r8, lsr r6
   22c70:			; <UNDEFINED> instruction: 0x000506bc
   22c74:	andeq	r0, r5, r0, lsr #14
   22c78:	andeq	r0, r5, r8, lsl #16
   22c7c:	andeq	r0, r5, r8, lsl #15
   22c80:	andeq	r6, r6, r8, lsr #1
   22c84:	andeq	r0, r5, r0, ror #15
   22c88:	andeq	fp, r3, r8, lsr sl
   22c8c:	ldrdeq	r0, [r5], -r4
   22c90:	andeq	r3, r4, r0, ror lr
   22c94:	andeq	r0, r5, r8, asr r8
   22c98:	andeq	r0, r5, r8, ror r8
   22c9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ca0:	sub	sp, sp, #468	; 0x1d4
   22ca4:	mov	r6, r0
   22ca8:	mov	r4, r1
   22cac:	mov	r5, #220	; 0xdc
   22cb0:	mov	r2, r5
   22cb4:	mov	r1, #0
   22cb8:	add	r0, sp, #244	; 0xf4
   22cbc:	bl	13f9c <memset@plt>
   22cc0:	mov	r2, r5
   22cc4:	mov	r1, #0
   22cc8:	add	r0, sp, #24
   22ccc:	bl	13f9c <memset@plt>
   22cd0:	add	r2, sp, #244	; 0xf4
   22cd4:	mov	r1, r4
   22cd8:	ldr	r0, [r4, #12]
   22cdc:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   22ce0:	add	r2, sp, #244	; 0xf4
   22ce4:	ldr	r1, [pc, #764]	; 22fe8 <__flatcc_fb_gen_c_json_parser@@Base+0x1dfc>
   22ce8:	ldr	r0, [r6, #204]	; 0xcc
   22cec:	bl	13f84 <fprintf@plt>
   22cf0:	ldr	r4, [r4, #20]
   22cf4:	cmp	r4, #0
   22cf8:	beq	22fb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc8>
   22cfc:	mov	r5, #0
   22d00:	ldr	r7, [pc, #740]	; 22fec <__flatcc_fb_gen_c_json_parser@@Base+0x1e00>
   22d04:	ldr	r8, [pc, #740]	; 22ff0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e04>
   22d08:	ldr	fp, [pc, #740]	; 22ff4 <__flatcc_fb_gen_c_json_parser@@Base+0x1e08>
   22d0c:	ldr	sl, [pc, #740]	; 22ff8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e0c>
   22d10:	ldr	r9, [pc, #740]	; 22ffc <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   22d14:	b	22e24 <__flatcc_fb_gen_c_json_parser@@Base+0x1c38>
   22d18:	ldr	r3, [r4, #16]
   22d1c:	sub	r3, r3, #1
   22d20:	cmp	r3, #10
   22d24:	ldrls	pc, [pc, r3, lsl #2]
   22d28:	b	22da0 <__flatcc_fb_gen_c_json_parser@@Base+0x1bb4>
   22d2c:	ldrdeq	r2, [r2], -r8
   22d30:	andeq	r2, r2, r8, asr sp
   22d34:	andeq	r2, r2, r0, ror #27
   22d38:	andeq	r2, r2, r0, ror #26
   22d3c:	andeq	r2, r2, r8, ror #26
   22d40:	andeq	r2, r2, r0, ror sp
   22d44:	andeq	r2, r2, r8, ror sp
   22d48:	andeq	r2, r2, r0, lsl #27
   22d4c:	andeq	r2, r2, r8, lsl #27
   22d50:	muleq	r2, r8, sp
   22d54:	muleq	r2, r0, sp
   22d58:	ldr	r2, [pc, #672]	; 23000 <__flatcc_fb_gen_c_json_parser@@Base+0x1e14>
   22d5c:	b	22de4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   22d60:	ldr	r2, [pc, #668]	; 23004 <__flatcc_fb_gen_c_json_parser@@Base+0x1e18>
   22d64:	b	22de4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   22d68:	ldr	r2, [pc, #664]	; 23008 <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   22d6c:	b	22de4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   22d70:	ldr	r2, [pc, #660]	; 2300c <__flatcc_fb_gen_c_json_parser@@Base+0x1e20>
   22d74:	b	22de4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   22d78:	ldr	r2, [pc, #656]	; 23010 <__flatcc_fb_gen_c_json_parser@@Base+0x1e24>
   22d7c:	b	22de4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   22d80:	ldr	r2, [pc, #652]	; 23014 <__flatcc_fb_gen_c_json_parser@@Base+0x1e28>
   22d84:	b	22de4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   22d88:	ldr	r2, [pc, #648]	; 23018 <__flatcc_fb_gen_c_json_parser@@Base+0x1e2c>
   22d8c:	b	22de4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   22d90:	mov	r2, r9
   22d94:	b	22de4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   22d98:	mov	r2, sl
   22d9c:	b	22de4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   22da0:	ldr	r4, [pc, #628]	; 2301c <__flatcc_fb_gen_c_json_parser@@Base+0x1e30>
   22da4:	ldr	r3, [pc, #628]	; 23020 <__flatcc_fb_gen_c_json_parser@@Base+0x1e34>
   22da8:	ldr	r0, [r3]
   22dac:	ldr	r3, [pc, #624]	; 23024 <__flatcc_fb_gen_c_json_parser@@Base+0x1e38>
   22db0:	str	r3, [sp]
   22db4:	mov	r3, #96	; 0x60
   22db8:	mov	r2, r4
   22dbc:	ldr	r1, [pc, #612]	; 23028 <__flatcc_fb_gen_c_json_parser@@Base+0x1e3c>
   22dc0:	bl	13f84 <fprintf@plt>
   22dc4:	ldr	r3, [pc, #608]	; 2302c <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
   22dc8:	mov	r2, #96	; 0x60
   22dcc:	mov	r1, r4
   22dd0:	ldr	r0, [pc, #600]	; 23030 <__flatcc_fb_gen_c_json_parser@@Base+0x1e44>
   22dd4:	bl	14038 <__assert_fail@plt>
   22dd8:	mov	r2, fp
   22ddc:	b	22de4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   22de0:	mov	r2, r8
   22de4:	ldr	r1, [r4, #4]
   22de8:	ldr	r3, [r1, #4]
   22dec:	str	r3, [sp, #16]
   22df0:	ldr	r1, [r1]
   22df4:	str	r1, [sp, #12]
   22df8:	str	r3, [sp, #8]
   22dfc:	ldrd	r0, [r4, #80]	; 0x50
   22e00:	strd	r0, [sp]
   22e04:	mov	r3, r5
   22e08:	mov	r1, r7
   22e0c:	ldr	r0, [r6, #204]	; 0xcc
   22e10:	bl	13f84 <fprintf@plt>
   22e14:	add	r5, r5, #1
   22e18:	ldr	r4, [r4]
   22e1c:	cmp	r4, #0
   22e20:	beq	22fb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc8>
   22e24:	ldrh	r3, [r4, #72]	; 0x48
   22e28:	tst	r3, #4
   22e2c:	bne	22e14 <__flatcc_fb_gen_c_json_parser@@Base+0x1c28>
   22e30:	ldrh	r3, [r4, #24]
   22e34:	cmp	r3, #8
   22e38:	beq	22d18 <__flatcc_fb_gen_c_json_parser@@Base+0x1b2c>
   22e3c:	cmp	r3, #14
   22e40:	bne	22e14 <__flatcc_fb_gen_c_json_parser@@Base+0x1c28>
   22e44:	ldr	r3, [r4, #16]
   22e48:	add	r2, sp, #24
   22e4c:	mov	r1, r3
   22e50:	ldr	r0, [r3, #12]
   22e54:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   22e58:	ldr	r2, [r4, #16]
   22e5c:	ldrh	r3, [r2, #8]
   22e60:	cmp	r3, #1
   22e64:	beq	22f78 <__flatcc_fb_gen_c_json_parser@@Base+0x1d8c>
   22e68:	cmp	r3, #3
   22e6c:	bne	22e14 <__flatcc_fb_gen_c_json_parser@@Base+0x1c28>
   22e70:	ldr	r3, [r2, #40]	; 0x28
   22e74:	sub	r3, r3, #1
   22e78:	cmp	r3, #10
   22e7c:	ldrls	pc, [pc, r3, lsl #2]
   22e80:	b	22ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d0c>
   22e84:	andeq	r2, r2, r0, lsr pc
   22e88:			; <UNDEFINED> instruction: 0x00022eb0
   22e8c:	andeq	r2, r2, r8, lsr pc
   22e90:			; <UNDEFINED> instruction: 0x00022eb8
   22e94:	andeq	r2, r2, r0, asr #29
   22e98:	andeq	r2, r2, r8, asr #29
   22e9c:	ldrdeq	r2, [r2], -r0
   22ea0:	ldrdeq	r2, [r2], -r8
   22ea4:	andeq	r2, r2, r0, ror #29
   22ea8:	strdeq	r2, [r2], -r0
   22eac:	andeq	r2, r2, r8, ror #29
   22eb0:	ldr	r2, [pc, #328]	; 23000 <__flatcc_fb_gen_c_json_parser@@Base+0x1e14>
   22eb4:	b	22f3c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   22eb8:	ldr	r2, [pc, #324]	; 23004 <__flatcc_fb_gen_c_json_parser@@Base+0x1e18>
   22ebc:	b	22f3c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   22ec0:	ldr	r2, [pc, #320]	; 23008 <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   22ec4:	b	22f3c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   22ec8:	ldr	r2, [pc, #316]	; 2300c <__flatcc_fb_gen_c_json_parser@@Base+0x1e20>
   22ecc:	b	22f3c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   22ed0:	ldr	r2, [pc, #312]	; 23010 <__flatcc_fb_gen_c_json_parser@@Base+0x1e24>
   22ed4:	b	22f3c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   22ed8:	ldr	r2, [pc, #308]	; 23014 <__flatcc_fb_gen_c_json_parser@@Base+0x1e28>
   22edc:	b	22f3c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   22ee0:	ldr	r2, [pc, #304]	; 23018 <__flatcc_fb_gen_c_json_parser@@Base+0x1e2c>
   22ee4:	b	22f3c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   22ee8:	mov	r2, r9
   22eec:	b	22f3c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   22ef0:	mov	r2, sl
   22ef4:	b	22f3c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   22ef8:	ldr	r4, [pc, #284]	; 2301c <__flatcc_fb_gen_c_json_parser@@Base+0x1e30>
   22efc:	ldr	r3, [pc, #284]	; 23020 <__flatcc_fb_gen_c_json_parser@@Base+0x1e34>
   22f00:	ldr	r0, [r3]
   22f04:	ldr	r3, [pc, #280]	; 23024 <__flatcc_fb_gen_c_json_parser@@Base+0x1e38>
   22f08:	str	r3, [sp]
   22f0c:	mov	r3, #96	; 0x60
   22f10:	mov	r2, r4
   22f14:	ldr	r1, [pc, #268]	; 23028 <__flatcc_fb_gen_c_json_parser@@Base+0x1e3c>
   22f18:	bl	13f84 <fprintf@plt>
   22f1c:	ldr	r3, [pc, #264]	; 2302c <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
   22f20:	mov	r2, #96	; 0x60
   22f24:	mov	r1, r4
   22f28:	ldr	r0, [pc, #256]	; 23030 <__flatcc_fb_gen_c_json_parser@@Base+0x1e44>
   22f2c:	bl	14038 <__assert_fail@plt>
   22f30:	mov	r2, fp
   22f34:	b	22f3c <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   22f38:	mov	r2, r8
   22f3c:	ldr	r1, [r4, #4]
   22f40:	ldr	r3, [r1, #4]
   22f44:	add	r0, sp, #24
   22f48:	str	r0, [sp, #20]
   22f4c:	str	r3, [sp, #16]
   22f50:	ldr	r1, [r1]
   22f54:	str	r1, [sp, #12]
   22f58:	str	r3, [sp, #8]
   22f5c:	ldrd	r0, [r4, #80]	; 0x50
   22f60:	strd	r0, [sp]
   22f64:	mov	r3, r5
   22f68:	ldr	r1, [pc, #196]	; 23034 <__flatcc_fb_gen_c_json_parser@@Base+0x1e48>
   22f6c:	ldr	r0, [r6, #204]	; 0xcc
   22f70:	bl	13f84 <fprintf@plt>
   22f74:	b	22e14 <__flatcc_fb_gen_c_json_parser@@Base+0x1c28>
   22f78:	ldr	r2, [r4, #4]
   22f7c:	ldr	r3, [r2, #4]
   22f80:	add	r1, sp, #24
   22f84:	str	r1, [sp, #20]
   22f88:	str	r3, [sp, #16]
   22f8c:	ldr	r2, [r2]
   22f90:	str	r2, [sp, #12]
   22f94:	str	r3, [sp, #8]
   22f98:	ldrd	r2, [r4, #80]	; 0x50
   22f9c:	strd	r2, [sp]
   22fa0:	mov	r2, r5
   22fa4:	ldr	r1, [pc, #140]	; 23038 <__flatcc_fb_gen_c_json_parser@@Base+0x1e4c>
   22fa8:	ldr	r0, [r6, #204]	; 0xcc
   22fac:	bl	13f84 <fprintf@plt>
   22fb0:	b	22e14 <__flatcc_fb_gen_c_json_parser@@Base+0x1c28>
   22fb4:	ldr	r3, [r6, #204]	; 0xcc
   22fb8:	mov	r2, #3
   22fbc:	mov	r1, #1
   22fc0:	ldr	r0, [pc, #116]	; 2303c <__flatcc_fb_gen_c_json_parser@@Base+0x1e50>
   22fc4:	bl	13f18 <fwrite@plt>
   22fc8:	add	r3, sp, #244	; 0xf4
   22fcc:	mov	r2, r3
   22fd0:	ldr	r1, [pc, #104]	; 23040 <__flatcc_fb_gen_c_json_parser@@Base+0x1e54>
   22fd4:	ldr	r0, [r6, #204]	; 0xcc
   22fd8:	bl	13f84 <fprintf@plt>
   22fdc:	mov	r0, #0
   22fe0:	add	sp, sp, #468	; 0x1d4
   22fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22fe8:	andeq	r0, r5, r4, lsl #17
   22fec:	ldrdeq	r0, [r5], -r4
   22ff0:	andeq	fp, r3, r4, asr sp
   22ff4:	andeq	fp, r3, r4, asr #26
   22ff8:	andeq	fp, r3, r4, lsr #18
   22ffc:	andeq	fp, r3, ip, lsl r9
   23000:	andeq	fp, r3, ip, asr #26
   23004:	andeq	fp, r3, ip, asr sp
   23008:	andeq	r3, r5, r0, ror #17
   2300c:	andeq	fp, r3, r4, ror #26
   23010:	andeq	fp, r3, ip, ror #26
   23014:	andeq	fp, r3, r4, ror sp
   23018:	andeq	fp, r3, ip, ror sp
   2301c:	andeq	fp, r3, ip, ror #19
   23020:	andeq	r6, r6, r8, lsr #1
   23024:	andeq	fp, r3, r4, asr #20
   23028:	andeq	fp, r3, r8, lsr sl
   2302c:	strdeq	r0, [r5], -r4
   23030:	andeq	r3, r4, r0, ror lr
   23034:	andeq	r0, r5, r0, lsr #18
   23038:	andeq	r0, r5, r4, lsl #19
   2303c:	andeq	sp, r4, r8, lsr #20
   23040:	andeq	r0, r5, ip, ror #19
   23044:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23048:	sub	sp, sp, #460	; 0x1cc
   2304c:	mov	r6, r0
   23050:	mov	r7, r1
   23054:	mov	r4, #220	; 0xdc
   23058:	mov	r2, r4
   2305c:	mov	r1, #0
   23060:	add	r0, sp, #236	; 0xec
   23064:	bl	13f9c <memset@plt>
   23068:	mov	r2, r4
   2306c:	mov	r1, #0
   23070:	add	r0, sp, #16
   23074:	bl	13f9c <memset@plt>
   23078:	add	r2, sp, #236	; 0xec
   2307c:	mov	r1, r7
   23080:	ldr	r0, [r7, #12]
   23084:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   23088:	ldr	r3, [r7, #40]	; 0x28
   2308c:	sub	r3, r3, #1
   23090:	cmp	r3, #10
   23094:	ldrls	pc, [pc, r3, lsl #2]
   23098:	b	230c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1edc>
   2309c:	andeq	r3, r2, r4, asr r1
   230a0:	strdeq	r3, [r2], -r8
   230a4:	andeq	r3, r2, r4, lsl #10
   230a8:	andeq	r3, r2, r0, lsl #2
   230ac:	andeq	r3, r2, r8, asr r5
   230b0:	andeq	r3, r2, ip, lsl #2
   230b4:	andeq	r3, r2, r8, lsl r1
   230b8:	andeq	r3, r2, r4, lsr #2
   230bc:	andeq	r3, r2, r0, lsr r1
   230c0:	andeq	r3, r2, r8, asr #2
   230c4:	andeq	r3, r2, ip, lsr r1
   230c8:	ldr	r4, [pc, #1248]	; 235b0 <__flatcc_fb_gen_c_json_parser@@Base+0x23c4>
   230cc:	ldr	r3, [pc, #1248]	; 235b4 <__flatcc_fb_gen_c_json_parser@@Base+0x23c8>
   230d0:	ldr	r0, [r3]
   230d4:	ldr	r3, [pc, #1244]	; 235b8 <__flatcc_fb_gen_c_json_parser@@Base+0x23cc>
   230d8:	str	r3, [sp]
   230dc:	mov	r3, #96	; 0x60
   230e0:	mov	r2, r4
   230e4:	ldr	r1, [pc, #1232]	; 235bc <__flatcc_fb_gen_c_json_parser@@Base+0x23d0>
   230e8:	bl	13f84 <fprintf@plt>
   230ec:	ldr	r3, [pc, #1228]	; 235c0 <__flatcc_fb_gen_c_json_parser@@Base+0x23d4>
   230f0:	mov	r2, #96	; 0x60
   230f4:	mov	r1, r4
   230f8:	ldr	r0, [pc, #1220]	; 235c4 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   230fc:	bl	14038 <__assert_fail@plt>
   23100:	ldr	sl, [pc, #1216]	; 235c8 <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   23104:	ldr	r8, [pc, #1216]	; 235cc <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   23108:	b	2350c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   2310c:	ldr	sl, [pc, #1212]	; 235d0 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   23110:	ldr	r8, [pc, #1212]	; 235d4 <__flatcc_fb_gen_c_json_parser@@Base+0x23e8>
   23114:	b	2350c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23118:	ldr	sl, [pc, #1208]	; 235d8 <__flatcc_fb_gen_c_json_parser@@Base+0x23ec>
   2311c:	ldr	r8, [pc, #1208]	; 235dc <__flatcc_fb_gen_c_json_parser@@Base+0x23f0>
   23120:	b	2350c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23124:	ldr	sl, [pc, #1204]	; 235e0 <__flatcc_fb_gen_c_json_parser@@Base+0x23f4>
   23128:	ldr	r8, [pc, #1204]	; 235e4 <__flatcc_fb_gen_c_json_parser@@Base+0x23f8>
   2312c:	b	2350c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23130:	ldr	sl, [pc, #1200]	; 235e8 <__flatcc_fb_gen_c_json_parser@@Base+0x23fc>
   23134:	ldr	r8, [pc, #1200]	; 235ec <__flatcc_fb_gen_c_json_parser@@Base+0x2400>
   23138:	b	2350c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   2313c:	ldr	sl, [pc, #1196]	; 235f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2404>
   23140:	mov	r8, sl
   23144:	b	2350c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23148:	ldr	sl, [pc, #1188]	; 235f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2408>
   2314c:	mov	r8, sl
   23150:	b	2350c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23154:	ldr	sl, [pc, #1180]	; 235f8 <__flatcc_fb_gen_c_json_parser@@Base+0x240c>
   23158:	ldr	r8, [pc, #1180]	; 235fc <__flatcc_fb_gen_c_json_parser@@Base+0x2410>
   2315c:	ldr	r0, [pc, #1180]	; 23600 <__flatcc_fb_gen_c_json_parser@@Base+0x2414>
   23160:	b	23510 <__flatcc_fb_gen_c_json_parser@@Base+0x2324>
   23164:	ldr	fp, [pc, #1176]	; 23604 <__flatcc_fb_gen_c_json_parser@@Base+0x2418>
   23168:	ldr	r9, [pc, #1176]	; 23608 <__flatcc_fb_gen_c_json_parser@@Base+0x241c>
   2316c:	ldr	r4, [pc, #1176]	; 2360c <__flatcc_fb_gen_c_json_parser@@Base+0x2420>
   23170:	mov	r5, #0
   23174:	ldr	r1, [r7, #20]
   23178:	cmp	r1, #0
   2317c:	bne	23200 <__flatcc_fb_gen_c_json_parser@@Base+0x2014>
   23180:	str	r8, [sp]
   23184:	mov	r3, r0
   23188:	add	r2, sp, #236	; 0xec
   2318c:	ldr	r1, [pc, #1148]	; 23610 <__flatcc_fb_gen_c_json_parser@@Base+0x2424>
   23190:	ldr	r0, [r6, #204]	; 0xcc
   23194:	bl	13f84 <fprintf@plt>
   23198:	mov	r1, r8
   2319c:	mov	r0, fp
   231a0:	bl	13eb8 <strcmp@plt>
   231a4:	cmp	r0, #0
   231a8:	bne	2323c <__flatcc_fb_gen_c_json_parser@@Base+0x2050>
   231ac:	mov	r2, fp
   231b0:	ldr	r1, [pc, #1116]	; 23614 <__flatcc_fb_gen_c_json_parser@@Base+0x2428>
   231b4:	ldr	r0, [r6, #204]	; 0xcc
   231b8:	bl	13f84 <fprintf@plt>
   231bc:	b	23250 <__flatcc_fb_gen_c_json_parser@@Base+0x2064>
   231c0:	ldr	fp, [pc, #1104]	; 23618 <__flatcc_fb_gen_c_json_parser@@Base+0x242c>
   231c4:	ldr	r9, [pc, #1104]	; 2361c <__flatcc_fb_gen_c_json_parser@@Base+0x2430>
   231c8:	mvn	r4, #0
   231cc:	mov	r5, #0
   231d0:	b	23174 <__flatcc_fb_gen_c_json_parser@@Base+0x1f88>
   231d4:	ldr	fp, [pc, #1008]	; 235cc <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   231d8:	ldr	r9, [pc, #1064]	; 23608 <__flatcc_fb_gen_c_json_parser@@Base+0x241c>
   231dc:	mov	r4, #255	; 0xff
   231e0:	mov	r5, #0
   231e4:	b	23174 <__flatcc_fb_gen_c_json_parser@@Base+0x1f88>
   231e8:	ldrd	r2, [r1, #48]	; 0x30
   231ec:	bic	r4, r4, r2
   231f0:	bic	r5, r5, r3
   231f4:	ldr	r1, [r1]
   231f8:	cmp	r1, #0
   231fc:	beq	23180 <__flatcc_fb_gen_c_json_parser@@Base+0x1f94>
   23200:	ldrh	r3, [r1, #56]	; 0x38
   23204:	cmp	r3, #5
   23208:	beq	231e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ffc>
   2320c:	cmp	r3, #6
   23210:	beq	23228 <__flatcc_fb_gen_c_json_parser@@Base+0x203c>
   23214:	cmp	r3, #4
   23218:	ldrdeq	r2, [r1, #48]	; 0x30
   2321c:	biceq	r4, r4, r2
   23220:	biceq	r5, r5, r3
   23224:	b	231f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2008>
   23228:	ldrb	r2, [r1, #48]	; 0x30
   2322c:	mov	r3, #0
   23230:	bic	r4, r4, r2
   23234:	bic	r5, r5, r3
   23238:	b	231f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2008>
   2323c:	mov	r3, fp
   23240:	mov	r2, fp
   23244:	ldr	r1, [pc, #980]	; 23620 <__flatcc_fb_gen_c_json_parser@@Base+0x2434>
   23248:	ldr	r0, [r6, #204]	; 0xcc
   2324c:	bl	13f84 <fprintf@plt>
   23250:	ldr	r3, [r6, #204]	; 0xcc
   23254:	mov	r2, #54	; 0x36
   23258:	mov	r1, #1
   2325c:	ldr	r0, [pc, #960]	; 23624 <__flatcc_fb_gen_c_json_parser@@Base+0x2438>
   23260:	bl	13f18 <fwrite@plt>
   23264:	ldr	r1, [r6, #204]	; 0xcc
   23268:	mov	r0, #10
   2326c:	bl	13fe4 <fputc@plt>
   23270:	orrs	r3, r4, r5
   23274:	bne	232a0 <__flatcc_fb_gen_c_json_parser@@Base+0x20b4>
   23278:	ldr	r3, [r6, #204]	; 0xcc
   2327c:	mov	r2, #59	; 0x3b
   23280:	mov	r1, #1
   23284:	ldr	r0, [pc, #924]	; 23628 <__flatcc_fb_gen_c_json_parser@@Base+0x243c>
   23288:	bl	13f18 <fwrite@plt>
   2328c:	ldr	r4, [r7, #20]
   23290:	cmp	r4, #0
   23294:	beq	233c4 <__flatcc_fb_gen_c_json_parser@@Base+0x21d8>
   23298:	ldr	r5, [pc, #908]	; 2362c <__flatcc_fb_gen_c_json_parser@@Base+0x2440>
   2329c:	b	232fc <__flatcc_fb_gen_c_json_parser@@Base+0x2110>
   232a0:	str	sl, [sp]
   232a4:	mov	r2, r4
   232a8:	mov	r3, r5
   232ac:	ldr	r1, [pc, #892]	; 23630 <__flatcc_fb_gen_c_json_parser@@Base+0x2444>
   232b0:	ldr	r0, [r6, #204]	; 0xcc
   232b4:	bl	13f84 <fprintf@plt>
   232b8:	b	23278 <__flatcc_fb_gen_c_json_parser@@Base+0x208c>
   232bc:	ldr	r2, [r4, #4]
   232c0:	ldr	r3, [r2, #4]
   232c4:	ldrd	r0, [r4, #48]	; 0x30
   232c8:	str	r3, [sp, #12]
   232cc:	ldr	r2, [r2]
   232d0:	str	r2, [sp, #8]
   232d4:	str	r3, [sp, #4]
   232d8:	str	r9, [sp]
   232dc:	mov	r2, r0
   232e0:	mov	r3, r1
   232e4:	mov	r1, r5
   232e8:	ldr	r0, [r6, #204]	; 0xcc
   232ec:	bl	13f84 <fprintf@plt>
   232f0:	ldr	r4, [r4]
   232f4:	cmp	r4, #0
   232f8:	beq	233c4 <__flatcc_fb_gen_c_json_parser@@Base+0x21d8>
   232fc:	ldrh	r3, [r4, #56]	; 0x38
   23300:	cmp	r3, #5
   23304:	beq	232bc <__flatcc_fb_gen_c_json_parser@@Base+0x20d0>
   23308:	cmp	r3, #6
   2330c:	beq	23388 <__flatcc_fb_gen_c_json_parser@@Base+0x219c>
   23310:	cmp	r3, #4
   23314:	beq	23350 <__flatcc_fb_gen_c_json_parser@@Base+0x2164>
   23318:	ldr	r4, [pc, #788]	; 23634 <__flatcc_fb_gen_c_json_parser@@Base+0x2448>
   2331c:	ldr	r3, [pc, #656]	; 235b4 <__flatcc_fb_gen_c_json_parser@@Base+0x23c8>
   23320:	ldr	r0, [r3]
   23324:	ldr	r3, [pc, #780]	; 23638 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   23328:	str	r3, [sp]
   2332c:	mov	r3, #134	; 0x86
   23330:	mov	r2, r4
   23334:	ldr	r1, [pc, #640]	; 235bc <__flatcc_fb_gen_c_json_parser@@Base+0x23d0>
   23338:	bl	13f84 <fprintf@plt>
   2333c:	ldr	r3, [pc, #760]	; 2363c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   23340:	mov	r2, #134	; 0x86
   23344:	mov	r1, r4
   23348:	ldr	r0, [pc, #628]	; 235c4 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   2334c:	bl	14038 <__assert_fail@plt>
   23350:	ldr	r2, [r4, #4]
   23354:	ldr	r3, [r2, #4]
   23358:	ldrd	r0, [r4, #48]	; 0x30
   2335c:	str	r3, [sp, #12]
   23360:	ldr	r2, [r2]
   23364:	str	r2, [sp, #8]
   23368:	str	r3, [sp, #4]
   2336c:	str	r9, [sp]
   23370:	mov	r2, r0
   23374:	mov	r3, r1
   23378:	mov	r1, r5
   2337c:	ldr	r0, [r6, #204]	; 0xcc
   23380:	bl	13f84 <fprintf@plt>
   23384:	b	232f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2104>
   23388:	ldr	r2, [r4, #4]
   2338c:	ldr	r3, [r2, #4]
   23390:	ldrb	r0, [r4, #48]	; 0x30
   23394:	mov	r1, #0
   23398:	str	r3, [sp, #12]
   2339c:	ldr	r2, [r2]
   233a0:	str	r2, [sp, #8]
   233a4:	str	r3, [sp, #4]
   233a8:	str	r9, [sp]
   233ac:	mov	r2, r0
   233b0:	mov	r3, r1
   233b4:	mov	r1, r5
   233b8:	ldr	r0, [r6, #204]	; 0xcc
   233bc:	bl	13f84 <fprintf@plt>
   233c0:	b	232f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2104>
   233c4:	ldr	r3, [r6, #204]	; 0xcc
   233c8:	mov	r2, #59	; 0x3b
   233cc:	mov	r1, #1
   233d0:	ldr	r0, [pc, #592]	; 23628 <__flatcc_fb_gen_c_json_parser@@Base+0x243c>
   233d4:	bl	13f18 <fwrite@plt>
   233d8:	ldr	r3, [r6, #204]	; 0xcc
   233dc:	mov	r2, #3
   233e0:	mov	r1, #1
   233e4:	ldr	r0, [pc, #596]	; 23640 <__flatcc_fb_gen_c_json_parser@@Base+0x2454>
   233e8:	bl	13f18 <fwrite@plt>
   233ec:	mov	r0, #0
   233f0:	add	sp, sp, #460	; 0x1cc
   233f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   233f8:	ldr	r2, [r4, #4]
   233fc:	ldr	r3, [r2, #4]
   23400:	ldrd	r0, [r4, #48]	; 0x30
   23404:	str	r3, [sp, #8]
   23408:	ldr	r2, [r2]
   2340c:	str	r2, [sp, #4]
   23410:	str	r3, [sp]
   23414:	mov	r2, r0
   23418:	mov	r3, r1
   2341c:	mov	r1, r5
   23420:	ldr	r0, [r6, #204]	; 0xcc
   23424:	bl	13f84 <fprintf@plt>
   23428:	ldr	r4, [r4]
   2342c:	cmp	r4, #0
   23430:	beq	234e4 <__flatcc_fb_gen_c_json_parser@@Base+0x22f8>
   23434:	ldrh	r3, [r4, #56]	; 0x38
   23438:	cmp	r3, #5
   2343c:	beq	233f8 <__flatcc_fb_gen_c_json_parser@@Base+0x220c>
   23440:	cmp	r3, #6
   23444:	beq	234bc <__flatcc_fb_gen_c_json_parser@@Base+0x22d0>
   23448:	cmp	r3, #4
   2344c:	beq	23488 <__flatcc_fb_gen_c_json_parser@@Base+0x229c>
   23450:	ldr	r4, [pc, #476]	; 23634 <__flatcc_fb_gen_c_json_parser@@Base+0x2448>
   23454:	ldr	r3, [pc, #344]	; 235b4 <__flatcc_fb_gen_c_json_parser@@Base+0x23c8>
   23458:	ldr	r0, [r3]
   2345c:	ldr	r3, [pc, #468]	; 23638 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   23460:	str	r3, [sp]
   23464:	mov	r3, #157	; 0x9d
   23468:	mov	r2, r4
   2346c:	ldr	r1, [pc, #328]	; 235bc <__flatcc_fb_gen_c_json_parser@@Base+0x23d0>
   23470:	bl	13f84 <fprintf@plt>
   23474:	ldr	r3, [pc, #448]	; 2363c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   23478:	mov	r2, #157	; 0x9d
   2347c:	mov	r1, r4
   23480:	ldr	r0, [pc, #316]	; 235c4 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   23484:	bl	14038 <__assert_fail@plt>
   23488:	ldr	r2, [r4, #4]
   2348c:	ldr	r3, [r2, #4]
   23490:	ldrd	r0, [r4, #48]	; 0x30
   23494:	str	r3, [sp, #8]
   23498:	ldr	r2, [r2]
   2349c:	str	r2, [sp, #4]
   234a0:	str	r3, [sp]
   234a4:	mov	r2, r0
   234a8:	mov	r3, r1
   234ac:	mov	r1, r7
   234b0:	ldr	r0, [r6, #204]	; 0xcc
   234b4:	bl	13f84 <fprintf@plt>
   234b8:	b	23428 <__flatcc_fb_gen_c_json_parser@@Base+0x223c>
   234bc:	ldr	r1, [r4, #4]
   234c0:	ldr	r3, [r1, #4]
   234c4:	ldrb	r2, [r4, #48]	; 0x30
   234c8:	str	r3, [sp, #4]
   234cc:	ldr	r1, [r1]
   234d0:	str	r1, [sp]
   234d4:	mov	r1, r8
   234d8:	ldr	r0, [r6, #204]	; 0xcc
   234dc:	bl	13f84 <fprintf@plt>
   234e0:	b	23428 <__flatcc_fb_gen_c_json_parser@@Base+0x223c>
   234e4:	mov	r2, sl
   234e8:	ldr	r1, [pc, #340]	; 23644 <__flatcc_fb_gen_c_json_parser@@Base+0x2458>
   234ec:	ldr	r0, [r6, #204]	; 0xcc
   234f0:	bl	13f84 <fprintf@plt>
   234f4:	b	233d8 <__flatcc_fb_gen_c_json_parser@@Base+0x21ec>
   234f8:	ldr	sl, [pc, #328]	; 23648 <__flatcc_fb_gen_c_json_parser@@Base+0x245c>
   234fc:	ldr	r8, [pc, #276]	; 23618 <__flatcc_fb_gen_c_json_parser@@Base+0x242c>
   23500:	b	2350c <__flatcc_fb_gen_c_json_parser@@Base+0x2320>
   23504:	ldr	sl, [pc, #320]	; 2364c <__flatcc_fb_gen_c_json_parser@@Base+0x2460>
   23508:	ldr	r8, [pc, #244]	; 23604 <__flatcc_fb_gen_c_json_parser@@Base+0x2418>
   2350c:	ldr	r0, [pc, #236]	; 23600 <__flatcc_fb_gen_c_json_parser@@Base+0x2414>
   23510:	ldrh	r3, [r7, #92]	; 0x5c
   23514:	tst	r3, #32
   23518:	beq	23568 <__flatcc_fb_gen_c_json_parser@@Base+0x237c>
   2351c:	ldrd	r2, [r7, #112]	; 0x70
   23520:	cmp	r3, #0
   23524:	cmpeq	r2, #2
   23528:	beq	23164 <__flatcc_fb_gen_c_json_parser@@Base+0x1f78>
   2352c:	cmp	r3, #0
   23530:	cmpeq	r2, #4
   23534:	beq	231c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd4>
   23538:	cmp	r3, #0
   2353c:	cmpeq	r2, #1
   23540:	beq	231d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1fe8>
   23544:	ldr	fp, [pc, #176]	; 235fc <__flatcc_fb_gen_c_json_parser@@Base+0x2410>
   23548:	ldr	r9, [pc, #256]	; 23650 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   2354c:	mvn	r4, #0
   23550:	mvn	r5, #0
   23554:	b	23174 <__flatcc_fb_gen_c_json_parser@@Base+0x1f88>
   23558:	mov	r0, r6
   2355c:	ldr	sl, [pc, #240]	; 23654 <__flatcc_fb_gen_c_json_parser@@Base+0x2468>
   23560:	ldr	r8, [pc, #240]	; 23658 <__flatcc_fb_gen_c_json_parser@@Base+0x246c>
   23564:	b	23510 <__flatcc_fb_gen_c_json_parser@@Base+0x2324>
   23568:	str	r8, [sp]
   2356c:	mov	r3, r0
   23570:	add	r2, sp, #236	; 0xec
   23574:	ldr	r1, [pc, #148]	; 23610 <__flatcc_fb_gen_c_json_parser@@Base+0x2424>
   23578:	ldr	r0, [r6, #204]	; 0xcc
   2357c:	bl	13f84 <fprintf@plt>
   23580:	ldr	r3, [r6, #204]	; 0xcc
   23584:	mov	r2, #18
   23588:	mov	r1, #1
   2358c:	ldr	r0, [pc, #200]	; 2365c <__flatcc_fb_gen_c_json_parser@@Base+0x2470>
   23590:	bl	13f18 <fwrite@plt>
   23594:	ldr	r4, [r7, #20]
   23598:	cmp	r4, #0
   2359c:	beq	234e4 <__flatcc_fb_gen_c_json_parser@@Base+0x22f8>
   235a0:	ldr	r8, [pc, #184]	; 23660 <__flatcc_fb_gen_c_json_parser@@Base+0x2474>
   235a4:	ldr	r7, [pc, #184]	; 23664 <__flatcc_fb_gen_c_json_parser@@Base+0x2478>
   235a8:	ldr	r5, [pc, #184]	; 23668 <__flatcc_fb_gen_c_json_parser@@Base+0x247c>
   235ac:	b	23434 <__flatcc_fb_gen_c_json_parser@@Base+0x2248>
   235b0:	andeq	fp, r3, ip, ror #19
   235b4:	andeq	r6, r6, r8, lsr #1
   235b8:	andeq	fp, r3, r4, asr #20
   235bc:	andeq	fp, r3, r8, lsr sl
   235c0:	strdeq	r0, [r5], -r4
   235c4:	andeq	r3, r4, r0, ror lr
   235c8:	andeq	fp, r3, ip, asr sp
   235cc:	andeq	fp, r3, ip, ror #17
   235d0:	andeq	fp, r3, r4, ror #26
   235d4:	strdeq	fp, [r3], -ip
   235d8:	andeq	fp, r3, ip, ror #26
   235dc:	andeq	fp, r3, r4, lsl #18
   235e0:	andeq	fp, r3, r4, ror sp
   235e4:	andeq	fp, r3, ip, lsl #18
   235e8:	andeq	fp, r3, ip, ror sp
   235ec:	andeq	fp, r3, r4, lsl r9
   235f0:	andeq	fp, r3, ip, lsl r9
   235f4:	andeq	fp, r3, r4, lsr #18
   235f8:	andeq	fp, r3, r4, asr #26
   235fc:	andeq	fp, r3, r8, asr #17
   23600:	andeq	r5, r4, r0, lsr #2
   23604:	andeq	fp, r3, r0, ror #17
   23608:	andeq	r0, r5, r4, asr #21
   2360c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   23610:	andeq	r0, r5, r0, ror #26
   23614:	andeq	r0, r5, r4, ror #21
   23618:	ldrdeq	fp, [r3], -r4
   2361c:	andeq	r0, r5, r8, asr #21
   23620:	ldrdeq	r0, [r5], -r0	; <UNPREDICTABLE>
   23624:	strdeq	r0, [r5], -r4
   23628:	muleq	r5, r0, fp
   2362c:	andeq	r0, r5, ip, asr #23
   23630:	andeq	r0, r5, ip, lsr #22
   23634:	andeq	r0, r5, r8, lsl #15
   23638:	andeq	r0, r5, ip, lsl ip
   2363c:	andeq	r0, r5, r8, lsl #12
   23640:	andeq	sp, r4, r8, lsr #20
   23644:	andeq	r0, r5, r4, lsr #26
   23648:	andeq	fp, r3, ip, asr #26
   2364c:	andeq	fp, r3, r4, asr sp
   23650:	andeq	r0, r5, ip, asr #21
   23654:	andeq	r3, r5, r0, ror #17
   23658:	strdeq	fp, [r3], -r4
   2365c:	andeq	r0, r5, r8, lsr #27
   23660:	andeq	r0, r5, r0, ror #25
   23664:	muleq	r5, ip, ip
   23668:	andeq	r0, r5, r8, asr ip
   2366c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23670:	sub	sp, sp, #484	; 0x1e4
   23674:	mov	sl, r0
   23678:	mov	r8, r1
   2367c:	mov	r4, #220	; 0xdc
   23680:	mov	r2, r4
   23684:	mov	r1, #0
   23688:	add	r0, sp, #260	; 0x104
   2368c:	bl	13f9c <memset@plt>
   23690:	mov	r2, r4
   23694:	mov	r1, #0
   23698:	add	r0, sp, #40	; 0x28
   2369c:	bl	13f9c <memset@plt>
   236a0:	add	r2, sp, #260	; 0x104
   236a4:	mov	r1, r8
   236a8:	ldr	r0, [r8, #12]
   236ac:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   236b0:	ldr	r4, [r8, #96]	; 0x60
   236b4:	ldr	r5, [r8, #100]	; 0x64
   236b8:	mov	r1, #4
   236bc:	mov	r0, r4
   236c0:	bl	13ea0 <calloc@plt>
   236c4:	orr	r4, r4, r5
   236c8:	clz	r3, r0
   236cc:	lsr	r3, r3, #5
   236d0:	cmp	r4, #0
   236d4:	moveq	r3, #0
   236d8:	cmp	r3, #0
   236dc:	bne	23734 <__flatcc_fb_gen_c_json_parser@@Base+0x2548>
   236e0:	mov	r9, r0
   236e4:	ldr	r3, [r8, #20]
   236e8:	cmp	r3, #0
   236ec:	beq	23704 <__flatcc_fb_gen_c_json_parser@@Base+0x2518>
   236f0:	ldr	r2, [r3, #96]	; 0x60
   236f4:	str	r3, [r9, r2, lsl #2]
   236f8:	ldr	r3, [r3]
   236fc:	cmp	r3, #0
   23700:	bne	236f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2504>
   23704:	add	r2, sp, #260	; 0x104
   23708:	ldr	r1, [pc, #2576]	; 24120 <__flatcc_fb_gen_c_json_parser@@Base+0x2f34>
   2370c:	ldr	r0, [sl, #204]	; 0xcc
   23710:	bl	13f84 <fprintf@plt>
   23714:	ldrd	r2, [r8, #96]	; 0x60
   23718:	orrs	r3, r2, r3
   2371c:	beq	240dc <__flatcc_fb_gen_c_json_parser@@Base+0x2ef0>
   23720:	sub	r5, r9, #4
   23724:	mov	r6, #0
   23728:	mov	r7, #0
   2372c:	ldr	fp, [pc, #2544]	; 24124 <__flatcc_fb_gen_c_json_parser@@Base+0x2f38>
   23730:	b	23b40 <__flatcc_fb_gen_c_json_parser@@Base+0x2954>
   23734:	ldr	r5, [pc, #2540]	; 24128 <__flatcc_fb_gen_c_json_parser@@Base+0x2f3c>
   23738:	ldr	r4, [pc, #2540]	; 2412c <__flatcc_fb_gen_c_json_parser@@Base+0x2f40>
   2373c:	ldr	r3, [pc, #2540]	; 24130 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   23740:	ldr	r0, [r3]
   23744:	ldr	r3, [pc, #2536]	; 24134 <__flatcc_fb_gen_c_json_parser@@Base+0x2f48>
   23748:	str	r3, [sp]
   2374c:	mov	r3, r5
   23750:	mov	r2, r4
   23754:	ldr	r1, [pc, #2524]	; 24138 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   23758:	bl	13f84 <fprintf@plt>
   2375c:	ldr	r3, [pc, #2520]	; 2413c <__flatcc_fb_gen_c_json_parser@@Base+0x2f50>
   23760:	mov	r2, r5
   23764:	mov	r1, r4
   23768:	ldr	r0, [pc, #2512]	; 24140 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   2376c:	bl	14038 <__assert_fail@plt>
   23770:	ldr	r3, [r4, #16]
   23774:	sub	r3, r3, #1
   23778:	cmp	r3, #10
   2377c:	ldrls	pc, [pc, r3, lsl #2]
   23780:	b	237f8 <__flatcc_fb_gen_c_json_parser@@Base+0x260c>
   23784:	andeq	r3, r2, r0, lsr r8
   23788:			; <UNDEFINED> instruction: 0x000237b0
   2378c:	andeq	r3, r2, r8, lsr r8
   23790:			; <UNDEFINED> instruction: 0x000237b8
   23794:	andeq	r3, r2, r0, asr #15
   23798:	andeq	r3, r2, r8, asr #15
   2379c:	ldrdeq	r3, [r2], -r0
   237a0:	ldrdeq	r3, [r2], -r8
   237a4:	andeq	r3, r2, r0, ror #15
   237a8:	strdeq	r3, [r2], -r0
   237ac:	andeq	r3, r2, r8, ror #15
   237b0:	ldr	r2, [pc, #2444]	; 24144 <__flatcc_fb_gen_c_json_parser@@Base+0x2f58>
   237b4:	b	2383c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   237b8:	ldr	r2, [pc, #2440]	; 24148 <__flatcc_fb_gen_c_json_parser@@Base+0x2f5c>
   237bc:	b	2383c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   237c0:	ldr	r2, [pc, #2436]	; 2414c <__flatcc_fb_gen_c_json_parser@@Base+0x2f60>
   237c4:	b	2383c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   237c8:	ldr	r2, [pc, #2432]	; 24150 <__flatcc_fb_gen_c_json_parser@@Base+0x2f64>
   237cc:	b	2383c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   237d0:	ldr	r2, [pc, #2428]	; 24154 <__flatcc_fb_gen_c_json_parser@@Base+0x2f68>
   237d4:	b	2383c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   237d8:	ldr	r2, [pc, #2424]	; 24158 <__flatcc_fb_gen_c_json_parser@@Base+0x2f6c>
   237dc:	b	2383c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   237e0:	ldr	r2, [pc, #2420]	; 2415c <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
   237e4:	b	2383c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   237e8:	ldr	r2, [pc, #2416]	; 24160 <__flatcc_fb_gen_c_json_parser@@Base+0x2f74>
   237ec:	b	2383c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   237f0:	ldr	r2, [pc, #2412]	; 24164 <__flatcc_fb_gen_c_json_parser@@Base+0x2f78>
   237f4:	b	2383c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   237f8:	ldr	r4, [pc, #2408]	; 24168 <__flatcc_fb_gen_c_json_parser@@Base+0x2f7c>
   237fc:	ldr	r3, [pc, #2348]	; 24130 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   23800:	ldr	r0, [r3]
   23804:	ldr	r3, [pc, #2400]	; 2416c <__flatcc_fb_gen_c_json_parser@@Base+0x2f80>
   23808:	str	r3, [sp]
   2380c:	mov	r3, #96	; 0x60
   23810:	mov	r2, r4
   23814:	ldr	r1, [pc, #2332]	; 24138 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   23818:	bl	13f84 <fprintf@plt>
   2381c:	ldr	r3, [pc, #2380]	; 24170 <__flatcc_fb_gen_c_json_parser@@Base+0x2f84>
   23820:	mov	r2, #96	; 0x60
   23824:	mov	r1, r4
   23828:	ldr	r0, [pc, #2320]	; 24140 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   2382c:	bl	14038 <__assert_fail@plt>
   23830:	ldr	r2, [pc, #2364]	; 24174 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   23834:	b	2383c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   23838:	ldr	r2, [pc, #2360]	; 24178 <__flatcc_fb_gen_c_json_parser@@Base+0x2f8c>
   2383c:	ldrh	r3, [r4, #56]	; 0x38
   23840:	sub	r3, r3, #3
   23844:	cmp	r3, #3
   23848:	ldrls	pc, [pc, r3, lsl #2]
   2384c:	b	23908 <__flatcc_fb_gen_c_json_parser@@Base+0x271c>
   23850:	ldrdeq	r3, [r2], -r0
   23854:	muleq	r2, r8, r8
   23858:	andeq	r3, r2, r0, ror #16
   2385c:	andeq	r3, r2, r0, ror #16
   23860:	ldr	ip, [r4, #4]
   23864:	ldr	r3, [ip, #4]
   23868:	ldrd	r0, [r4, #48]	; 0x30
   2386c:	strd	r0, [sp, #24]
   23870:	str	r3, [sp, #16]
   23874:	ldr	r1, [ip]
   23878:	str	r1, [sp, #12]
   2387c:	str	r3, [sp, #8]
   23880:	ldrd	r0, [r4, #96]	; 0x60
   23884:	strd	r0, [sp]
   23888:	ldr	r1, [pc, #2284]	; 2417c <__flatcc_fb_gen_c_json_parser@@Base+0x2f90>
   2388c:	ldr	r0, [sl, #204]	; 0xcc
   23890:	bl	13f84 <fprintf@plt>
   23894:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23898:	ldr	ip, [r4, #4]
   2389c:	ldr	r3, [ip, #4]
   238a0:	ldrd	r0, [r4, #48]	; 0x30
   238a4:	strd	r0, [sp, #24]
   238a8:	str	r3, [sp, #16]
   238ac:	ldr	r1, [ip]
   238b0:	str	r1, [sp, #12]
   238b4:	str	r3, [sp, #8]
   238b8:	ldrd	r0, [r4, #96]	; 0x60
   238bc:	strd	r0, [sp]
   238c0:	ldr	r1, [pc, #2232]	; 24180 <__flatcc_fb_gen_c_json_parser@@Base+0x2f94>
   238c4:	ldr	r0, [sl, #204]	; 0xcc
   238c8:	bl	13f84 <fprintf@plt>
   238cc:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   238d0:	ldr	r1, [r4, #4]
   238d4:	ldr	r3, [r1, #4]
   238d8:	vldr	d7, [r4, #48]	; 0x30
   238dc:	vstr	d7, [sp, #24]
   238e0:	str	r3, [sp, #16]
   238e4:	ldr	r1, [r1]
   238e8:	str	r1, [sp, #12]
   238ec:	str	r3, [sp, #8]
   238f0:	ldrd	r0, [r4, #96]	; 0x60
   238f4:	strd	r0, [sp]
   238f8:	ldr	r1, [pc, #2180]	; 24184 <__flatcc_fb_gen_c_json_parser@@Base+0x2f98>
   238fc:	ldr	r0, [sl, #204]	; 0xcc
   23900:	bl	13f84 <fprintf@plt>
   23904:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23908:	ldr	r5, [pc, #2168]	; 24188 <__flatcc_fb_gen_c_json_parser@@Base+0x2f9c>
   2390c:	ldr	r4, [pc, #2072]	; 2412c <__flatcc_fb_gen_c_json_parser@@Base+0x2f40>
   23910:	ldr	r3, [pc, #2072]	; 24130 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   23914:	ldr	r0, [r3]
   23918:	ldr	r3, [pc, #2156]	; 2418c <__flatcc_fb_gen_c_json_parser@@Base+0x2fa0>
   2391c:	str	r3, [sp]
   23920:	mov	r3, r5
   23924:	mov	r2, r4
   23928:	ldr	r1, [pc, #2056]	; 24138 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   2392c:	bl	13f84 <fprintf@plt>
   23930:	ldr	r3, [pc, #2052]	; 2413c <__flatcc_fb_gen_c_json_parser@@Base+0x2f50>
   23934:	mov	r2, r5
   23938:	mov	r1, r4
   2393c:	ldr	r0, [pc, #2044]	; 24140 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   23940:	bl	14038 <__assert_fail@plt>
   23944:	ldrh	r3, [r4, #72]	; 0x48
   23948:	tst	r3, #3072	; 0xc00
   2394c:	bne	239b8 <__flatcc_fb_gen_c_json_parser@@Base+0x27cc>
   23950:	ldr	r3, [r4, #104]	; 0x68
   23954:	cmp	r3, #0
   23958:	beq	239fc <__flatcc_fb_gen_c_json_parser@@Base+0x2810>
   2395c:	add	r2, sp, #40	; 0x28
   23960:	mov	r1, r3
   23964:	ldr	r0, [r3, #12]
   23968:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   2396c:	ldr	r3, [r4, #104]	; 0x68
   23970:	ldrh	r3, [r3, #8]
   23974:	cmp	r3, #0
   23978:	ldr	r2, [r4, #4]
   2397c:	ldr	r3, [r2, #4]
   23980:	ldrd	r0, [r4, #96]	; 0x60
   23984:	add	ip, sp, #40	; 0x28
   23988:	str	ip, [sp, #12]
   2398c:	str	r3, [sp, #8]
   23990:	ldr	r2, [r2]
   23994:	str	r2, [sp, #4]
   23998:	str	r3, [sp]
   2399c:	mov	r2, r0
   239a0:	mov	r3, r1
   239a4:	ldreq	r1, [pc, #2020]	; 24190 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa4>
   239a8:	ldrne	r1, [pc, #2020]	; 24194 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa8>
   239ac:	ldr	r0, [sl, #204]	; 0xcc
   239b0:	bl	13f84 <fprintf@plt>
   239b4:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   239b8:	ldr	ip, [r4, #4]
   239bc:	ldr	r2, [ip, #4]
   239c0:	ldrd	r0, [r4, #96]	; 0x60
   239c4:	lsr	r3, r3, #10
   239c8:	eor	r3, r3, #1
   239cc:	and	r3, r3, #1
   239d0:	str	r3, [sp, #12]
   239d4:	str	r2, [sp, #8]
   239d8:	ldr	r3, [ip]
   239dc:	str	r3, [sp, #4]
   239e0:	str	r2, [sp]
   239e4:	mov	r2, r0
   239e8:	mov	r3, r1
   239ec:	ldr	r1, [pc, #1956]	; 24198 <__flatcc_fb_gen_c_json_parser@@Base+0x2fac>
   239f0:	ldr	r0, [sl, #204]	; 0xcc
   239f4:	bl	13f84 <fprintf@plt>
   239f8:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   239fc:	ldr	r3, [r4, #16]
   23a00:	sub	r3, r3, #1
   23a04:	cmp	r3, #10
   23a08:	ldrls	pc, [pc, r3, lsl #2]
   23a0c:	b	23ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x28c4>
   23a10:	andeq	r3, r2, r8, ror #21
   23a14:	andeq	r3, r2, ip, lsr sl
   23a18:	strdeq	r3, [r2], -r0
   23a1c:	andeq	r3, r2, r0, ror sl
   23a20:	andeq	r3, r2, r8, ror sl
   23a24:	andeq	r3, r2, r0, lsl #21
   23a28:	andeq	r3, r2, r8, lsl #21
   23a2c:	muleq	r2, r0, sl
   23a30:	muleq	r2, r8, sl
   23a34:	andeq	r3, r2, r8, lsr #21
   23a38:	andeq	r3, r2, r0, lsr #21
   23a3c:	ldr	r2, [pc, #1792]	; 24144 <__flatcc_fb_gen_c_json_parser@@Base+0x2f58>
   23a40:	ldr	r1, [r4, #4]
   23a44:	ldr	r3, [r1, #4]
   23a48:	str	r3, [sp, #16]
   23a4c:	ldr	r1, [r1]
   23a50:	str	r1, [sp, #12]
   23a54:	str	r3, [sp, #8]
   23a58:	ldrd	r0, [r4, #96]	; 0x60
   23a5c:	strd	r0, [sp]
   23a60:	ldr	r1, [pc, #1844]	; 2419c <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   23a64:	ldr	r0, [sl, #204]	; 0xcc
   23a68:	bl	13f84 <fprintf@plt>
   23a6c:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23a70:	ldr	r2, [pc, #1744]	; 24148 <__flatcc_fb_gen_c_json_parser@@Base+0x2f5c>
   23a74:	b	23a40 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   23a78:	ldr	r2, [pc, #1740]	; 2414c <__flatcc_fb_gen_c_json_parser@@Base+0x2f60>
   23a7c:	b	23a40 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   23a80:	ldr	r2, [pc, #1736]	; 24150 <__flatcc_fb_gen_c_json_parser@@Base+0x2f64>
   23a84:	b	23a40 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   23a88:	ldr	r2, [pc, #1732]	; 24154 <__flatcc_fb_gen_c_json_parser@@Base+0x2f68>
   23a8c:	b	23a40 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   23a90:	ldr	r2, [pc, #1728]	; 24158 <__flatcc_fb_gen_c_json_parser@@Base+0x2f6c>
   23a94:	b	23a40 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   23a98:	ldr	r2, [pc, #1724]	; 2415c <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
   23a9c:	b	23a40 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   23aa0:	ldr	r2, [pc, #1720]	; 24160 <__flatcc_fb_gen_c_json_parser@@Base+0x2f74>
   23aa4:	b	23a40 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   23aa8:	ldr	r2, [pc, #1716]	; 24164 <__flatcc_fb_gen_c_json_parser@@Base+0x2f78>
   23aac:	b	23a40 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   23ab0:	ldr	r4, [pc, #1712]	; 24168 <__flatcc_fb_gen_c_json_parser@@Base+0x2f7c>
   23ab4:	ldr	r3, [pc, #1652]	; 24130 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   23ab8:	ldr	r0, [r3]
   23abc:	ldr	r3, [pc, #1704]	; 2416c <__flatcc_fb_gen_c_json_parser@@Base+0x2f80>
   23ac0:	str	r3, [sp]
   23ac4:	mov	r3, #96	; 0x60
   23ac8:	mov	r2, r4
   23acc:	ldr	r1, [pc, #1636]	; 24138 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   23ad0:	bl	13f84 <fprintf@plt>
   23ad4:	ldr	r3, [pc, #1684]	; 24170 <__flatcc_fb_gen_c_json_parser@@Base+0x2f84>
   23ad8:	mov	r2, #96	; 0x60
   23adc:	mov	r1, r4
   23ae0:	ldr	r0, [pc, #1624]	; 24140 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   23ae4:	bl	14038 <__assert_fail@plt>
   23ae8:	ldr	r2, [pc, #1668]	; 24174 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   23aec:	b	23a40 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   23af0:	ldr	r2, [pc, #1664]	; 24178 <__flatcc_fb_gen_c_json_parser@@Base+0x2f8c>
   23af4:	b	23a40 <__flatcc_fb_gen_c_json_parser@@Base+0x2854>
   23af8:	ldr	r2, [r4, #4]
   23afc:	ldr	r3, [r2, #4]
   23b00:	ldrd	r0, [r4, #96]	; 0x60
   23b04:	str	r3, [sp, #8]
   23b08:	ldr	r2, [r2]
   23b0c:	str	r2, [sp, #4]
   23b10:	str	r3, [sp]
   23b14:	mov	r2, r0
   23b18:	mov	r3, r1
   23b1c:	ldr	r1, [pc, #1660]	; 241a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb4>
   23b20:	ldr	r0, [sl, #204]	; 0xcc
   23b24:	bl	13f84 <fprintf@plt>
   23b28:	adds	r6, r6, #1
   23b2c:	adc	r7, r7, #0
   23b30:	ldrd	r2, [r8, #96]	; 0x60
   23b34:	cmp	r3, r7
   23b38:	cmpeq	r2, r6
   23b3c:	bls	240dc <__flatcc_fb_gen_c_json_parser@@Base+0x2ef0>
   23b40:	ldr	r4, [r5, #4]!
   23b44:	cmp	r4, #0
   23b48:	beq	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23b4c:	ldrh	r3, [r4, #72]	; 0x48
   23b50:	tst	r3, #4
   23b54:	bne	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23b58:	ldr	r3, [sl, #204]	; 0xcc
   23b5c:	mov	r2, #5
   23b60:	mov	r1, #1
   23b64:	mov	r0, fp
   23b68:	bl	13f18 <fwrite@plt>
   23b6c:	ldrh	r3, [r4, #24]
   23b70:	sub	r3, r3, #7
   23b74:	cmp	r3, #8
   23b78:	ldrls	pc, [pc, r3, lsl #2]
   23b7c:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23b80:	andeq	r3, r2, r4, asr #18
   23b84:	andeq	r3, r2, r0, ror r7
   23b88:	andeq	r3, r2, r4, lsr #23
   23b8c:	strdeq	r3, [r2], -r8
   23b90:	andeq	r3, r2, r8, lsr #22
   23b94:	andeq	r3, r2, r8, lsr #22
   23b98:	andeq	r3, r2, r8, lsr #22
   23b9c:	ldrdeq	r3, [r2], -r8
   23ba0:	andeq	r3, r2, r4, lsr #29
   23ba4:	ldr	r2, [r4, #4]
   23ba8:	ldr	r3, [r2, #4]
   23bac:	ldrd	r0, [r4, #96]	; 0x60
   23bb0:	str	r3, [sp, #8]
   23bb4:	ldr	r2, [r2]
   23bb8:	str	r2, [sp, #4]
   23bbc:	str	r3, [sp]
   23bc0:	mov	r2, r0
   23bc4:	mov	r3, r1
   23bc8:	ldr	r1, [pc, #1492]	; 241a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb8>
   23bcc:	ldr	r0, [sl, #204]	; 0xcc
   23bd0:	bl	13f84 <fprintf@plt>
   23bd4:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23bd8:	ldr	r3, [r4, #16]
   23bdc:	add	r2, sp, #40	; 0x28
   23be0:	mov	r1, r3
   23be4:	ldr	r0, [r3, #12]
   23be8:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   23bec:	ldr	r2, [r4, #16]
   23bf0:	ldrh	r3, [r2, #8]
   23bf4:	cmp	r3, #4
   23bf8:	ldrls	pc, [pc, r3, lsl #2]
   23bfc:	b	23e6c <__flatcc_fb_gen_c_json_parser@@Base+0x2c80>
   23c00:	strdeq	r3, [r2], -r0
   23c04:			; <UNDEFINED> instruction: 0x00023db4
   23c08:	andeq	r3, r2, ip, ror #28
   23c0c:	andeq	r3, r2, r4, lsl ip
   23c10:	andeq	r3, r2, ip, lsr #28
   23c14:	ldr	r3, [r2, #40]	; 0x28
   23c18:	sub	r3, r3, #1
   23c1c:	cmp	r3, #10
   23c20:	ldrls	pc, [pc, r3, lsl #2]
   23c24:	b	23cf0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b04>
   23c28:	andeq	r3, r2, r8, lsr #26
   23c2c:	andeq	r3, r2, r4, asr ip
   23c30:	andeq	r3, r2, r0, lsr sp
   23c34:			; <UNDEFINED> instruction: 0x00023cb0
   23c38:			; <UNDEFINED> instruction: 0x00023cb8
   23c3c:	andeq	r3, r2, r0, asr #25
   23c40:	andeq	r3, r2, r8, asr #25
   23c44:	ldrdeq	r3, [r2], -r0
   23c48:	ldrdeq	r3, [r2], -r8
   23c4c:	andeq	r3, r2, r8, ror #25
   23c50:	andeq	r3, r2, r0, ror #25
   23c54:	ldr	r2, [pc, #1256]	; 24144 <__flatcc_fb_gen_c_json_parser@@Base+0x2f58>
   23c58:	ldrh	r3, [r4, #56]	; 0x38
   23c5c:	cmp	r3, #4
   23c60:	beq	23d38 <__flatcc_fb_gen_c_json_parser@@Base+0x2b4c>
   23c64:	bcc	23d78 <__flatcc_fb_gen_c_json_parser@@Base+0x2b8c>
   23c68:	cmp	r3, #6
   23c6c:	bhi	23d78 <__flatcc_fb_gen_c_json_parser@@Base+0x2b8c>
   23c70:	ldr	ip, [r4, #4]
   23c74:	ldr	r3, [ip, #4]
   23c78:	add	r1, sp, #40	; 0x28
   23c7c:	str	r1, [sp, #32]
   23c80:	ldrd	r0, [r4, #48]	; 0x30
   23c84:	strd	r0, [sp, #24]
   23c88:	str	r3, [sp, #16]
   23c8c:	ldr	r1, [ip]
   23c90:	str	r1, [sp, #12]
   23c94:	str	r3, [sp, #8]
   23c98:	ldrd	r0, [r4, #96]	; 0x60
   23c9c:	strd	r0, [sp]
   23ca0:	ldr	r1, [pc, #1280]	; 241a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fbc>
   23ca4:	ldr	r0, [sl, #204]	; 0xcc
   23ca8:	bl	13f84 <fprintf@plt>
   23cac:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23cb0:	ldr	r2, [pc, #1168]	; 24148 <__flatcc_fb_gen_c_json_parser@@Base+0x2f5c>
   23cb4:	b	23c58 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   23cb8:	ldr	r2, [pc, #1164]	; 2414c <__flatcc_fb_gen_c_json_parser@@Base+0x2f60>
   23cbc:	b	23c58 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   23cc0:	ldr	r2, [pc, #1160]	; 24150 <__flatcc_fb_gen_c_json_parser@@Base+0x2f64>
   23cc4:	b	23c58 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   23cc8:	ldr	r2, [pc, #1156]	; 24154 <__flatcc_fb_gen_c_json_parser@@Base+0x2f68>
   23ccc:	b	23c58 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   23cd0:	ldr	r2, [pc, #1152]	; 24158 <__flatcc_fb_gen_c_json_parser@@Base+0x2f6c>
   23cd4:	b	23c58 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   23cd8:	ldr	r2, [pc, #1148]	; 2415c <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
   23cdc:	b	23c58 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   23ce0:	ldr	r2, [pc, #1144]	; 24160 <__flatcc_fb_gen_c_json_parser@@Base+0x2f74>
   23ce4:	b	23c58 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   23ce8:	ldr	r2, [pc, #1140]	; 24164 <__flatcc_fb_gen_c_json_parser@@Base+0x2f78>
   23cec:	b	23c58 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   23cf0:	ldr	r4, [pc, #1136]	; 24168 <__flatcc_fb_gen_c_json_parser@@Base+0x2f7c>
   23cf4:	ldr	r3, [pc, #1076]	; 24130 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   23cf8:	ldr	r0, [r3]
   23cfc:	ldr	r3, [pc, #1128]	; 2416c <__flatcc_fb_gen_c_json_parser@@Base+0x2f80>
   23d00:	str	r3, [sp]
   23d04:	mov	r3, #96	; 0x60
   23d08:	mov	r2, r4
   23d0c:	ldr	r1, [pc, #1060]	; 24138 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   23d10:	bl	13f84 <fprintf@plt>
   23d14:	ldr	r3, [pc, #1108]	; 24170 <__flatcc_fb_gen_c_json_parser@@Base+0x2f84>
   23d18:	mov	r2, #96	; 0x60
   23d1c:	mov	r1, r4
   23d20:	ldr	r0, [pc, #1048]	; 24140 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   23d24:	bl	14038 <__assert_fail@plt>
   23d28:	ldr	r2, [pc, #1092]	; 24174 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   23d2c:	b	23c58 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   23d30:	ldr	r2, [pc, #1088]	; 24178 <__flatcc_fb_gen_c_json_parser@@Base+0x2f8c>
   23d34:	b	23c58 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   23d38:	ldr	ip, [r4, #4]
   23d3c:	ldr	r3, [ip, #4]
   23d40:	add	r1, sp, #40	; 0x28
   23d44:	str	r1, [sp, #32]
   23d48:	ldrd	r0, [r4, #48]	; 0x30
   23d4c:	strd	r0, [sp, #24]
   23d50:	str	r3, [sp, #16]
   23d54:	ldr	r1, [ip]
   23d58:	str	r1, [sp, #12]
   23d5c:	str	r3, [sp, #8]
   23d60:	ldrd	r0, [r4, #96]	; 0x60
   23d64:	strd	r0, [sp]
   23d68:	ldr	r1, [pc, #1084]	; 241ac <__flatcc_fb_gen_c_json_parser@@Base+0x2fc0>
   23d6c:	ldr	r0, [sl, #204]	; 0xcc
   23d70:	bl	13f84 <fprintf@plt>
   23d74:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23d78:	ldr	r5, [pc, #1072]	; 241b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fc4>
   23d7c:	ldr	r4, [pc, #936]	; 2412c <__flatcc_fb_gen_c_json_parser@@Base+0x2f40>
   23d80:	ldr	r3, [pc, #936]	; 24130 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   23d84:	ldr	r0, [r3]
   23d88:	ldr	r3, [pc, #1060]	; 241b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2fc8>
   23d8c:	str	r3, [sp]
   23d90:	mov	r3, r5
   23d94:	mov	r2, r4
   23d98:	ldr	r1, [pc, #920]	; 24138 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   23d9c:	bl	13f84 <fprintf@plt>
   23da0:	ldr	r3, [pc, #916]	; 2413c <__flatcc_fb_gen_c_json_parser@@Base+0x2f50>
   23da4:	mov	r2, r5
   23da8:	mov	r1, r4
   23dac:	ldr	r0, [pc, #908]	; 24140 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   23db0:	bl	14038 <__assert_fail@plt>
   23db4:	ldr	r2, [r4, #4]
   23db8:	ldr	r3, [r2, #4]
   23dbc:	ldrd	r0, [r4, #96]	; 0x60
   23dc0:	add	ip, sp, #40	; 0x28
   23dc4:	str	ip, [sp, #12]
   23dc8:	str	r3, [sp, #8]
   23dcc:	ldr	r2, [r2]
   23dd0:	str	r2, [sp, #4]
   23dd4:	str	r3, [sp]
   23dd8:	mov	r2, r0
   23ddc:	mov	r3, r1
   23de0:	ldr	r1, [pc, #976]	; 241b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fcc>
   23de4:	ldr	r0, [sl, #204]	; 0xcc
   23de8:	bl	13f84 <fprintf@plt>
   23dec:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23df0:	ldr	r2, [r4, #4]
   23df4:	ldr	r3, [r2, #4]
   23df8:	ldrd	r0, [r4, #96]	; 0x60
   23dfc:	add	ip, sp, #40	; 0x28
   23e00:	str	ip, [sp, #12]
   23e04:	str	r3, [sp, #8]
   23e08:	ldr	r2, [r2]
   23e0c:	str	r2, [sp, #4]
   23e10:	str	r3, [sp]
   23e14:	mov	r2, r0
   23e18:	mov	r3, r1
   23e1c:	ldr	r1, [pc, #920]	; 241bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fd0>
   23e20:	ldr	r0, [sl, #204]	; 0xcc
   23e24:	bl	13f84 <fprintf@plt>
   23e28:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23e2c:	ldr	r2, [r4, #4]
   23e30:	ldr	r3, [r2, #4]
   23e34:	ldrd	r0, [r4, #96]	; 0x60
   23e38:	add	ip, sp, #40	; 0x28
   23e3c:	str	ip, [sp, #16]
   23e40:	str	ip, [sp, #12]
   23e44:	str	r3, [sp, #8]
   23e48:	ldr	r2, [r2]
   23e4c:	str	r2, [sp, #4]
   23e50:	str	r3, [sp]
   23e54:	mov	r2, r0
   23e58:	mov	r3, r1
   23e5c:	ldr	r1, [pc, #860]	; 241c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fd4>
   23e60:	ldr	r0, [sl, #204]	; 0xcc
   23e64:	bl	13f84 <fprintf@plt>
   23e68:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23e6c:	ldr	r4, [pc, #696]	; 2412c <__flatcc_fb_gen_c_json_parser@@Base+0x2f40>
   23e70:	ldr	r3, [pc, #696]	; 24130 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   23e74:	ldr	r0, [r3]
   23e78:	ldr	r3, [pc, #836]	; 241c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2fd8>
   23e7c:	str	r3, [sp]
   23e80:	mov	r3, #504	; 0x1f8
   23e84:	mov	r2, r4
   23e88:	ldr	r1, [pc, #680]	; 24138 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   23e8c:	bl	13f84 <fprintf@plt>
   23e90:	ldr	r3, [pc, #676]	; 2413c <__flatcc_fb_gen_c_json_parser@@Base+0x2f50>
   23e94:	mov	r2, #504	; 0x1f8
   23e98:	mov	r1, r4
   23e9c:	ldr	r0, [pc, #668]	; 24140 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   23ea0:	bl	14038 <__assert_fail@plt>
   23ea4:	ldr	r3, [r4, #16]
   23ea8:	add	r2, sp, #40	; 0x28
   23eac:	mov	r1, r3
   23eb0:	ldr	r0, [r3, #12]
   23eb4:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   23eb8:	ldr	r2, [r4, #16]
   23ebc:	ldrh	r3, [r2, #8]
   23ec0:	cmp	r3, #4
   23ec4:	ldrls	pc, [pc, r3, lsl #2]
   23ec8:	b	240a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2eb4>
   23ecc:	andeq	r3, r2, r0, ror #29
   23ed0:	andeq	r4, r2, r4, lsr #32
   23ed4:	andeq	r4, r2, r0, lsr #1
   23ed8:	andeq	r3, r2, ip, lsl pc
   23edc:	andeq	r4, r2, r0, rrx
   23ee0:	ldr	r2, [r4, #4]
   23ee4:	ldr	r3, [r2, #4]
   23ee8:	ldrd	r0, [r4, #96]	; 0x60
   23eec:	add	ip, sp, #40	; 0x28
   23ef0:	str	ip, [sp, #12]
   23ef4:	str	r3, [sp, #8]
   23ef8:	ldr	r2, [r2]
   23efc:	str	r2, [sp, #4]
   23f00:	str	r3, [sp]
   23f04:	mov	r2, r0
   23f08:	mov	r3, r1
   23f0c:	ldr	r1, [pc, #692]	; 241c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fdc>
   23f10:	ldr	r0, [sl, #204]	; 0xcc
   23f14:	bl	13f84 <fprintf@plt>
   23f18:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23f1c:	sub	r2, r2, #1
   23f20:	cmp	r2, #10
   23f24:	ldrls	pc, [pc, r2, lsl #2]
   23f28:	b	23fdc <__flatcc_fb_gen_c_json_parser@@Base+0x2df0>
   23f2c:	andeq	r4, r2, r4, lsl r0
   23f30:	andeq	r3, r2, r8, asr pc
   23f34:	andeq	r4, r2, ip, lsl r0
   23f38:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   23f3c:	andeq	r3, r2, r4, lsr #31
   23f40:	andeq	r3, r2, ip, lsr #31
   23f44:			; <UNDEFINED> instruction: 0x00023fb4
   23f48:			; <UNDEFINED> instruction: 0x00023fbc
   23f4c:	andeq	r3, r2, r4, asr #31
   23f50:	ldrdeq	r3, [r2], -r4
   23f54:	andeq	r3, r2, ip, asr #31
   23f58:	ldr	r2, [pc, #484]	; 24144 <__flatcc_fb_gen_c_json_parser@@Base+0x2f58>
   23f5c:	ldr	ip, [r4, #4]
   23f60:	ldr	r3, [ip, #4]
   23f64:	add	r1, sp, #40	; 0x28
   23f68:	str	r1, [sp, #32]
   23f6c:	ldrd	r0, [r8, #112]	; 0x70
   23f70:	strd	r0, [sp, #24]
   23f74:	str	r3, [sp, #16]
   23f78:	ldr	r1, [ip]
   23f7c:	str	r1, [sp, #12]
   23f80:	str	r3, [sp, #8]
   23f84:	ldrd	r0, [r4, #96]	; 0x60
   23f88:	strd	r0, [sp]
   23f8c:	ldr	r1, [pc, #568]	; 241cc <__flatcc_fb_gen_c_json_parser@@Base+0x2fe0>
   23f90:	ldr	r0, [sl, #204]	; 0xcc
   23f94:	bl	13f84 <fprintf@plt>
   23f98:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   23f9c:	ldr	r2, [pc, #420]	; 24148 <__flatcc_fb_gen_c_json_parser@@Base+0x2f5c>
   23fa0:	b	23f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   23fa4:	ldr	r2, [pc, #416]	; 2414c <__flatcc_fb_gen_c_json_parser@@Base+0x2f60>
   23fa8:	b	23f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   23fac:	ldr	r2, [pc, #412]	; 24150 <__flatcc_fb_gen_c_json_parser@@Base+0x2f64>
   23fb0:	b	23f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   23fb4:	ldr	r2, [pc, #408]	; 24154 <__flatcc_fb_gen_c_json_parser@@Base+0x2f68>
   23fb8:	b	23f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   23fbc:	ldr	r2, [pc, #404]	; 24158 <__flatcc_fb_gen_c_json_parser@@Base+0x2f6c>
   23fc0:	b	23f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   23fc4:	ldr	r2, [pc, #400]	; 2415c <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
   23fc8:	b	23f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   23fcc:	ldr	r2, [pc, #396]	; 24160 <__flatcc_fb_gen_c_json_parser@@Base+0x2f74>
   23fd0:	b	23f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   23fd4:	ldr	r2, [pc, #392]	; 24164 <__flatcc_fb_gen_c_json_parser@@Base+0x2f78>
   23fd8:	b	23f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   23fdc:	ldr	r4, [pc, #388]	; 24168 <__flatcc_fb_gen_c_json_parser@@Base+0x2f7c>
   23fe0:	ldr	r3, [pc, #328]	; 24130 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   23fe4:	ldr	r0, [r3]
   23fe8:	ldr	r3, [pc, #380]	; 2416c <__flatcc_fb_gen_c_json_parser@@Base+0x2f80>
   23fec:	str	r3, [sp]
   23ff0:	mov	r3, #96	; 0x60
   23ff4:	mov	r2, r4
   23ff8:	ldr	r1, [pc, #312]	; 24138 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   23ffc:	bl	13f84 <fprintf@plt>
   24000:	ldr	r3, [pc, #360]	; 24170 <__flatcc_fb_gen_c_json_parser@@Base+0x2f84>
   24004:	mov	r2, #96	; 0x60
   24008:	mov	r1, r4
   2400c:	ldr	r0, [pc, #300]	; 24140 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   24010:	bl	14038 <__assert_fail@plt>
   24014:	ldr	r2, [pc, #344]	; 24174 <__flatcc_fb_gen_c_json_parser@@Base+0x2f88>
   24018:	b	23f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   2401c:	ldr	r2, [pc, #340]	; 24178 <__flatcc_fb_gen_c_json_parser@@Base+0x2f8c>
   24020:	b	23f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   24024:	ldr	lr, [r4, #4]
   24028:	ldr	ip, [lr, #4]
   2402c:	ldrd	r2, [r4, #96]	; 0x60
   24030:	add	r1, sp, #40	; 0x28
   24034:	str	r1, [sp, #24]
   24038:	ldrd	r0, [r4, #88]	; 0x58
   2403c:	strd	r0, [sp, #16]
   24040:	str	ip, [sp, #8]
   24044:	ldr	r1, [lr]
   24048:	str	r1, [sp, #4]
   2404c:	str	ip, [sp]
   24050:	ldr	r1, [pc, #376]	; 241d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe4>
   24054:	ldr	r0, [sl, #204]	; 0xcc
   24058:	bl	13f84 <fprintf@plt>
   2405c:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   24060:	ldr	r2, [r4, #4]
   24064:	ldr	r3, [r2, #4]
   24068:	ldrd	r0, [r4, #96]	; 0x60
   2406c:	add	ip, sp, #40	; 0x28
   24070:	str	ip, [sp, #16]
   24074:	str	ip, [sp, #12]
   24078:	str	r3, [sp, #8]
   2407c:	ldr	r2, [r2]
   24080:	str	r2, [sp, #4]
   24084:	str	r3, [sp]
   24088:	mov	r2, r0
   2408c:	mov	r3, r1
   24090:	ldr	r1, [pc, #316]	; 241d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2fe8>
   24094:	ldr	r0, [sl, #204]	; 0xcc
   24098:	bl	13f84 <fprintf@plt>
   2409c:	b	23b28 <__flatcc_fb_gen_c_json_parser@@Base+0x293c>
   240a0:	ldr	r5, [pc, #304]	; 241d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   240a4:	ldr	r4, [pc, #128]	; 2412c <__flatcc_fb_gen_c_json_parser@@Base+0x2f40>
   240a8:	ldr	r3, [pc, #128]	; 24130 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   240ac:	ldr	r0, [r3]
   240b0:	ldr	r3, [pc, #292]	; 241dc <__flatcc_fb_gen_c_json_parser@@Base+0x2ff0>
   240b4:	str	r3, [sp]
   240b8:	mov	r3, r5
   240bc:	mov	r2, r4
   240c0:	ldr	r1, [pc, #112]	; 24138 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   240c4:	bl	13f84 <fprintf@plt>
   240c8:	ldr	r3, [pc, #108]	; 2413c <__flatcc_fb_gen_c_json_parser@@Base+0x2f50>
   240cc:	mov	r2, r5
   240d0:	mov	r1, r4
   240d4:	ldr	r0, [pc, #100]	; 24140 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   240d8:	bl	14038 <__assert_fail@plt>
   240dc:	ldr	r3, [sl, #204]	; 0xcc
   240e0:	mov	r2, #4
   240e4:	mov	r1, #1
   240e8:	ldr	r0, [pc, #240]	; 241e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ff4>
   240ec:	bl	13f18 <fwrite@plt>
   240f0:	add	r3, sp, #260	; 0x104
   240f4:	mov	r2, r3
   240f8:	ldr	r1, [pc, #228]	; 241e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ff8>
   240fc:	ldr	r0, [sl, #204]	; 0xcc
   24100:	bl	13f84 <fprintf@plt>
   24104:	cmp	r9, #0
   24108:	beq	24114 <__flatcc_fb_gen_c_json_parser@@Base+0x2f28>
   2410c:	mov	r0, r9
   24110:	bl	13ed0 <free@plt>
   24114:	mov	r0, #0
   24118:	add	sp, sp, #484	; 0x1e4
   2411c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24120:	andeq	r0, r5, r8, ror #27
   24124:	andeq	r0, r5, r4, asr lr
   24128:	andeq	r0, r0, r9, ror #2
   2412c:	andeq	r0, r5, r8, lsl #15
   24130:	andeq	r6, r6, r8, lsr #1
   24134:			; <UNDEFINED> instruction: 0x00050dbc
   24138:	andeq	fp, r3, r8, lsr sl
   2413c:	andeq	r0, r5, r0, lsr #12
   24140:	andeq	r3, r4, r0, ror lr
   24144:	andeq	fp, r3, ip, asr #26
   24148:	andeq	fp, r3, ip, asr sp
   2414c:	andeq	r3, r5, r0, ror #17
   24150:	andeq	fp, r3, r4, ror #26
   24154:	andeq	fp, r3, ip, ror #26
   24158:	andeq	fp, r3, r4, ror sp
   2415c:	andeq	fp, r3, ip, ror sp
   24160:	andeq	fp, r3, ip, lsl r9
   24164:	andeq	fp, r3, r4, lsr #18
   24168:	andeq	fp, r3, ip, ror #19
   2416c:	andeq	fp, r3, r4, asr #20
   24170:	strdeq	r0, [r5], -r4
   24174:	andeq	fp, r3, r4, asr #26
   24178:	andeq	fp, r3, r4, asr sp
   2417c:	andeq	r0, r5, ip, asr lr
   24180:	muleq	r5, ip, lr
   24184:	ldrdeq	r0, [r5], -ip
   24188:	muleq	r0, r6, r1
   2418c:	andeq	lr, r4, r0, lsl #27
   24190:	andeq	r0, r5, ip, ror #30
   24194:	andeq	r0, r5, ip, asr #31
   24198:	andeq	r0, r5, ip, lsl pc
   2419c:	andeq	r1, r5, ip, lsr #32
   241a0:	andeq	r1, r5, r0, ror r0
   241a4:	strheq	r1, [r5], -r0
   241a8:	strdeq	r1, [r5], -r8
   241ac:	andeq	r1, r5, r4, asr r1
   241b0:	andeq	r0, r0, r3, ror #3
   241b4:			; <UNDEFINED> instruction: 0x000511b0
   241b8:	andeq	r1, r5, r8, ror #3
   241bc:	andeq	r1, r5, ip, lsr r2
   241c0:	muleq	r5, r0, r2
   241c4:	strdeq	r1, [r5], -ip
   241c8:	andeq	r1, r5, ip, lsr r3
   241cc:	muleq	r5, r8, r3
   241d0:	strdeq	r1, [r5], -r8
   241d4:	andeq	r1, r5, ip, asr r4
   241d8:	andeq	r0, r0, pc, lsl r2
   241dc:	ldrdeq	r1, [r5], -r0
   241e0:	andeq	r1, r5, r8, ror #11
   241e4:	andeq	r1, r5, r8, lsl r5

000241e8 <__flatcc_fb_gen_c_json_printer@@Base>:
   241e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   241ec:	sub	sp, sp, #236	; 0xec
   241f0:	mov	r5, r0
   241f4:	ldr	r3, [r0, #208]	; 0xd0
   241f8:	ldr	r2, [r3, #164]	; 0xa4
   241fc:	mov	r3, r2
   24200:	ldr	r1, [pc, #1060]	; 2462c <__flatcc_fb_gen_c_json_printer@@Base+0x444>
   24204:	ldr	r0, [r0, #204]	; 0xcc
   24208:	bl	13f84 <fprintf@plt>
   2420c:	ldr	r3, [r5, #204]	; 0xcc
   24210:	mov	r2, #81	; 0x51
   24214:	mov	r1, #1
   24218:	ldr	r0, [pc, #1040]	; 24630 <__flatcc_fb_gen_c_json_printer@@Base+0x448>
   2421c:	bl	13f18 <fwrite@plt>
   24220:	ldr	r3, [r5, #204]	; 0xcc
   24224:	mov	r2, #40	; 0x28
   24228:	mov	r1, #1
   2422c:	ldr	r0, [pc, #1024]	; 24634 <__flatcc_fb_gen_c_json_printer@@Base+0x44c>
   24230:	bl	13f18 <fwrite@plt>
   24234:	ldr	r2, [pc, #1020]	; 24638 <__flatcc_fb_gen_c_json_printer@@Base+0x450>
   24238:	ldr	r1, [pc, #1020]	; 2463c <__flatcc_fb_gen_c_json_printer@@Base+0x454>
   2423c:	mov	r0, r5
   24240:	bl	15058 <__flatcc_fb_gen_c_includes@@Base>
   24244:	ldr	r3, [r5, #212]	; 0xd4
   24248:	ldr	r3, [r3, #140]	; 0x8c
   2424c:	cmp	r3, #0
   24250:	bne	242ac <__flatcc_fb_gen_c_json_printer@@Base+0xc4>
   24254:	ldr	r1, [r5, #204]	; 0xcc
   24258:	mov	r0, #10
   2425c:	bl	13fe4 <fputc@plt>
   24260:	ldr	r3, [r5, #208]	; 0xd0
   24264:	ldr	r4, [r3, #52]	; 0x34
   24268:	mov	r2, #220	; 0xdc
   2426c:	mov	r1, #0
   24270:	add	r0, sp, #12
   24274:	bl	13f9c <memset@plt>
   24278:	cmp	r4, #0
   2427c:	beq	2428c <__flatcc_fb_gen_c_json_printer@@Base+0xa4>
   24280:	ldrh	r3, [r4, #8]
   24284:	cmp	r3, #1
   24288:	bls	242c4 <__flatcc_fb_gen_c_json_printer@@Base+0xdc>
   2428c:	ldr	r3, [r5, #208]	; 0xd0
   24290:	ldr	r4, [r3, #40]	; 0x28
   24294:	cmp	r4, #0
   24298:	beq	24380 <__flatcc_fb_gen_c_json_printer@@Base+0x198>
   2429c:	ldr	r8, [pc, #924]	; 24640 <__flatcc_fb_gen_c_json_printer@@Base+0x458>
   242a0:	ldr	r7, [pc, #924]	; 24644 <__flatcc_fb_gen_c_json_printer@@Base+0x45c>
   242a4:	ldr	r6, [pc, #924]	; 24648 <__flatcc_fb_gen_c_json_printer@@Base+0x460>
   242a8:	b	2431c <__flatcc_fb_gen_c_json_printer@@Base+0x134>
   242ac:	ldr	r3, [r5, #204]	; 0xcc
   242b0:	mov	r2, #36	; 0x24
   242b4:	mov	r1, #1
   242b8:	ldr	r0, [pc, #908]	; 2464c <__flatcc_fb_gen_c_json_printer@@Base+0x464>
   242bc:	bl	13f18 <fwrite@plt>
   242c0:	b	24254 <__flatcc_fb_gen_c_json_printer@@Base+0x6c>
   242c4:	ldr	r3, [r5, #204]	; 0xcc
   242c8:	ldr	r2, [pc, #896]	; 24650 <__flatcc_fb_gen_c_json_printer@@Base+0x468>
   242cc:	mov	r1, #1
   242d0:	ldr	r0, [pc, #892]	; 24654 <__flatcc_fb_gen_c_json_printer@@Base+0x46c>
   242d4:	bl	13f18 <fwrite@plt>
   242d8:	ldr	r3, [r5, #208]	; 0xd0
   242dc:	ldr	r2, [r3, #160]	; 0xa0
   242e0:	ldr	r1, [pc, #880]	; 24658 <__flatcc_fb_gen_c_json_printer@@Base+0x470>
   242e4:	ldr	r0, [r5, #204]	; 0xcc
   242e8:	bl	13f84 <fprintf@plt>
   242ec:	b	2428c <__flatcc_fb_gen_c_json_printer@@Base+0xa4>
   242f0:	add	r2, sp, #12
   242f4:	mov	r1, r4
   242f8:	ldr	r0, [r4, #12]
   242fc:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   24300:	add	r2, sp, #12
   24304:	mov	r1, r8
   24308:	ldr	r0, [r5, #204]	; 0xcc
   2430c:	bl	13f84 <fprintf@plt>
   24310:	ldr	r4, [r4]
   24314:	cmp	r4, #0
   24318:	beq	24380 <__flatcc_fb_gen_c_json_printer@@Base+0x198>
   2431c:	ldrh	r3, [r4, #8]
   24320:	cmp	r3, #1
   24324:	beq	2435c <__flatcc_fb_gen_c_json_printer@@Base+0x174>
   24328:	bcc	242f0 <__flatcc_fb_gen_c_json_printer@@Base+0x108>
   2432c:	cmp	r3, #4
   24330:	bne	24310 <__flatcc_fb_gen_c_json_printer@@Base+0x128>
   24334:	add	r2, sp, #12
   24338:	mov	r1, r4
   2433c:	ldr	r0, [r4, #12]
   24340:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   24344:	add	r3, sp, #12
   24348:	mov	r2, r3
   2434c:	mov	r1, r7
   24350:	ldr	r0, [r5, #204]	; 0xcc
   24354:	bl	13f84 <fprintf@plt>
   24358:	b	24310 <__flatcc_fb_gen_c_json_printer@@Base+0x128>
   2435c:	add	r2, sp, #12
   24360:	mov	r1, r4
   24364:	ldr	r0, [r4, #12]
   24368:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   2436c:	add	r2, sp, #12
   24370:	mov	r1, r6
   24374:	ldr	r0, [r5, #204]	; 0xcc
   24378:	bl	13f84 <fprintf@plt>
   2437c:	b	24310 <__flatcc_fb_gen_c_json_printer@@Base+0x128>
   24380:	ldr	r1, [r5, #204]	; 0xcc
   24384:	mov	r0, #10
   24388:	bl	13fe4 <fputc@plt>
   2438c:	ldr	r3, [r5, #208]	; 0xd0
   24390:	ldr	r4, [r3, #40]	; 0x28
   24394:	cmp	r4, #0
   24398:	bne	243f4 <__flatcc_fb_gen_c_json_printer@@Base+0x20c>
   2439c:	ldr	r3, [r5, #208]	; 0xd0
   243a0:	ldr	r4, [r3, #52]	; 0x34
   243a4:	cmp	r4, #0
   243a8:	beq	243b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1d0>
   243ac:	ldrh	r3, [r4, #8]
   243b0:	cmp	r3, #1
   243b4:	bls	2457c <__flatcc_fb_gen_c_json_printer@@Base+0x394>
   243b8:	ldr	r3, [r5, #212]	; 0xd4
   243bc:	ldr	r3, [r3, #140]	; 0x8c
   243c0:	cmp	r3, #0
   243c4:	bne	24614 <__flatcc_fb_gen_c_json_printer@@Base+0x42c>
   243c8:	ldr	r3, [r5, #208]	; 0xd0
   243cc:	ldr	r2, [r3, #164]	; 0xa4
   243d0:	ldr	r1, [pc, #644]	; 2465c <__flatcc_fb_gen_c_json_printer@@Base+0x474>
   243d4:	ldr	r0, [r5, #204]	; 0xcc
   243d8:	bl	13f84 <fprintf@plt>
   243dc:	mov	r0, #0
   243e0:	add	sp, sp, #236	; 0xec
   243e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   243e8:	ldr	r4, [r4]
   243ec:	cmp	r4, #0
   243f0:	beq	24410 <__flatcc_fb_gen_c_json_printer@@Base+0x228>
   243f4:	ldrh	r3, [r4, #8]
   243f8:	cmp	r3, #3
   243fc:	bne	243e8 <__flatcc_fb_gen_c_json_printer@@Base+0x200>
   24400:	mov	r1, r4
   24404:	mov	r0, r5
   24408:	bl	23044 <__flatcc_fb_gen_c_json_parser@@Base+0x1e58>
   2440c:	b	243e8 <__flatcc_fb_gen_c_json_printer@@Base+0x200>
   24410:	ldr	r3, [r5, #208]	; 0xd0
   24414:	ldr	r6, [r3, #40]	; 0x28
   24418:	cmp	r6, #0
   2441c:	beq	2439c <__flatcc_fb_gen_c_json_printer@@Base+0x1b4>
   24420:	mov	fp, #220	; 0xdc
   24424:	ldr	sl, [pc, #564]	; 24660 <__flatcc_fb_gen_c_json_printer@@Base+0x478>
   24428:	ldr	r7, [pc, #564]	; 24664 <__flatcc_fb_gen_c_json_printer@@Base+0x47c>
   2442c:	ldr	r9, [pc, #564]	; 24668 <__flatcc_fb_gen_c_json_printer@@Base+0x480>
   24430:	ldr	r8, [pc, #564]	; 2466c <__flatcc_fb_gen_c_json_printer@@Base+0x484>
   24434:	b	244b8 <__flatcc_fb_gen_c_json_printer@@Base+0x2d0>
   24438:	ldr	r4, [r4]
   2443c:	cmp	r4, #0
   24440:	beq	24478 <__flatcc_fb_gen_c_json_printer@@Base+0x290>
   24444:	ldrh	r3, [r4, #24]
   24448:	cmp	r3, #0
   2444c:	beq	24438 <__flatcc_fb_gen_c_json_printer@@Base+0x250>
   24450:	ldr	r1, [r4, #4]
   24454:	ldr	r3, [r1, #4]
   24458:	ldr	r2, [r4, #48]	; 0x30
   2445c:	str	r3, [sp, #4]
   24460:	ldr	r1, [r1]
   24464:	str	r1, [sp]
   24468:	mov	r1, r7
   2446c:	ldr	r0, [r5, #204]	; 0xcc
   24470:	bl	13f84 <fprintf@plt>
   24474:	b	24438 <__flatcc_fb_gen_c_json_printer@@Base+0x250>
   24478:	ldr	r3, [r5, #204]	; 0xcc
   2447c:	mov	r2, #78	; 0x4e
   24480:	mov	r1, #1
   24484:	mov	r0, r9
   24488:	bl	13f18 <fwrite@plt>
   2448c:	ldr	r3, [r5, #204]	; 0xcc
   24490:	mov	r2, #9
   24494:	mov	r1, #1
   24498:	mov	r0, r8
   2449c:	bl	13f18 <fwrite@plt>
   244a0:	mov	r1, r6
   244a4:	mov	r0, r5
   244a8:	bl	22ac4 <__flatcc_fb_gen_c_json_parser@@Base+0x18d8>
   244ac:	ldr	r6, [r6]
   244b0:	cmp	r6, #0
   244b4:	beq	24504 <__flatcc_fb_gen_c_json_printer@@Base+0x31c>
   244b8:	ldrh	r3, [r6, #8]
   244bc:	cmp	r3, #4
   244c0:	bne	244ac <__flatcc_fb_gen_c_json_printer@@Base+0x2c4>
   244c4:	mov	r2, fp
   244c8:	mov	r1, #0
   244cc:	add	r0, sp, #12
   244d0:	bl	13f9c <memset@plt>
   244d4:	add	r2, sp, #12
   244d8:	mov	r1, r6
   244dc:	ldr	r0, [r6, #12]
   244e0:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   244e4:	add	r2, sp, #12
   244e8:	mov	r1, sl
   244ec:	ldr	r0, [r5, #204]	; 0xcc
   244f0:	bl	13f84 <fprintf@plt>
   244f4:	ldr	r4, [r6, #20]
   244f8:	cmp	r4, #0
   244fc:	bne	24444 <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   24500:	b	24478 <__flatcc_fb_gen_c_json_printer@@Base+0x290>
   24504:	ldr	r3, [r5, #208]	; 0xd0
   24508:	ldr	r4, [r3, #40]	; 0x28
   2450c:	cmp	r4, #0
   24510:	bne	24524 <__flatcc_fb_gen_c_json_printer@@Base+0x33c>
   24514:	b	2439c <__flatcc_fb_gen_c_json_printer@@Base+0x1b4>
   24518:	ldr	r4, [r4]
   2451c:	cmp	r4, #0
   24520:	beq	24540 <__flatcc_fb_gen_c_json_printer@@Base+0x358>
   24524:	ldrh	r3, [r4, #8]
   24528:	cmp	r3, #1
   2452c:	bne	24518 <__flatcc_fb_gen_c_json_printer@@Base+0x330>
   24530:	mov	r1, r4
   24534:	mov	r0, r5
   24538:	bl	22c9c <__flatcc_fb_gen_c_json_parser@@Base+0x1ab0>
   2453c:	b	24518 <__flatcc_fb_gen_c_json_printer@@Base+0x330>
   24540:	ldr	r3, [r5, #208]	; 0xd0
   24544:	ldr	r4, [r3, #40]	; 0x28
   24548:	cmp	r4, #0
   2454c:	bne	24560 <__flatcc_fb_gen_c_json_printer@@Base+0x378>
   24550:	b	2439c <__flatcc_fb_gen_c_json_printer@@Base+0x1b4>
   24554:	ldr	r4, [r4]
   24558:	cmp	r4, #0
   2455c:	beq	2439c <__flatcc_fb_gen_c_json_printer@@Base+0x1b4>
   24560:	ldrh	r3, [r4, #8]
   24564:	cmp	r3, #0
   24568:	bne	24554 <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   2456c:	mov	r1, r4
   24570:	mov	r0, r5
   24574:	bl	2366c <__flatcc_fb_gen_c_json_parser@@Base+0x2480>
   24578:	b	24554 <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   2457c:	mov	r2, #220	; 0xdc
   24580:	mov	r1, #0
   24584:	add	r0, sp, #12
   24588:	bl	13f9c <memset@plt>
   2458c:	add	r2, sp, #12
   24590:	mov	r1, r4
   24594:	ldr	r0, [r4, #12]
   24598:	bl	1528c <__flatcc_fb_scoped_symbol_name@@Base>
   2459c:	ldr	r3, [r5, #208]	; 0xd0
   245a0:	ldr	r2, [r3, #160]	; 0xa0
   245a4:	ldr	r1, [pc, #196]	; 24670 <__flatcc_fb_gen_c_json_printer@@Base+0x488>
   245a8:	ldr	r0, [r5, #204]	; 0xcc
   245ac:	bl	13f84 <fprintf@plt>
   245b0:	add	r2, sp, #12
   245b4:	ldr	r1, [pc, #184]	; 24674 <__flatcc_fb_gen_c_json_printer@@Base+0x48c>
   245b8:	ldr	r0, [r5, #204]	; 0xcc
   245bc:	bl	13f84 <fprintf@plt>
   245c0:	ldr	r2, [r5, #208]	; 0xd0
   245c4:	ldrh	r3, [r2, #16]
   245c8:	cmp	r3, #2
   245cc:	beq	245fc <__flatcc_fb_gen_c_json_printer@@Base+0x414>
   245d0:	ldr	r3, [r5, #204]	; 0xcc
   245d4:	mov	r2, #3
   245d8:	mov	r1, #1
   245dc:	ldr	r0, [pc, #148]	; 24678 <__flatcc_fb_gen_c_json_printer@@Base+0x490>
   245e0:	bl	13f18 <fwrite@plt>
   245e4:	ldr	r3, [r5, #204]	; 0xcc
   245e8:	mov	r2, #3
   245ec:	mov	r1, #1
   245f0:	ldr	r0, [pc, #132]	; 2467c <__flatcc_fb_gen_c_json_printer@@Base+0x494>
   245f4:	bl	13f18 <fwrite@plt>
   245f8:	b	243b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1d0>
   245fc:	ldr	r3, [r2, #8]
   24600:	ldr	r2, [r2, #12]
   24604:	ldr	r1, [pc, #116]	; 24680 <__flatcc_fb_gen_c_json_printer@@Base+0x498>
   24608:	ldr	r0, [r5, #204]	; 0xcc
   2460c:	bl	13f84 <fprintf@plt>
   24610:	b	245e4 <__flatcc_fb_gen_c_json_printer@@Base+0x3fc>
   24614:	ldr	r3, [r5, #204]	; 0xcc
   24618:	mov	r2, #36	; 0x24
   2461c:	mov	r1, #1
   24620:	ldr	r0, [pc, #92]	; 24684 <__flatcc_fb_gen_c_json_printer@@Base+0x49c>
   24624:	bl	13f18 <fwrite@plt>
   24628:	b	243c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1e0>
   2462c:	strdeq	r1, [r5], -r0
   24630:	andeq	ip, r3, r0, lsr sp
   24634:	andeq	r1, r5, r8, lsr #12
   24638:	andeq	r1, r5, r4, asr r6
   2463c:	andeq	fp, r3, r8, lsl r6
   24640:	andeq	r1, r5, r8, ror #18
   24644:	andeq	r1, r5, r0, lsr #17
   24648:	ldrdeq	r1, [r5], -r4
   2464c:	andeq	ip, r3, r4, asr #28
   24650:	andeq	r0, r0, r2, ror #3
   24654:	andeq	r1, r5, r4, ror #12
   24658:	andeq	r1, r5, r8, asr #16
   2465c:	andeq	r1, r5, ip, asr ip
   24660:	andeq	r1, r5, r4, lsr #20
   24664:	muleq	r5, r8, sl
   24668:	andeq	r1, r5, ip, ror #21
   2466c:	andeq	r0, r5, r8, ror r8
   24670:	andeq	r1, r5, ip, lsr fp
   24674:	muleq	r5, r4, fp
   24678:	andeq	r1, r5, r8, asr ip
   2467c:	andeq	sp, r4, r8, lsr #20
   24680:	andeq	r1, r5, ip, asr #24
   24684:	andeq	r2, r4, r8, lsr #25
   24688:	push	{r4, lr}
   2468c:	mov	r4, r0
   24690:	ldr	r0, [r0, #16]
   24694:	cmp	r0, #0
   24698:	beq	246a0 <__flatcc_fb_gen_c_json_printer@@Base+0x4b8>
   2469c:	bl	13ed0 <free@plt>
   246a0:	ldr	r0, [r4, #20]
   246a4:	cmp	r0, #0
   246a8:	beq	246b0 <__flatcc_fb_gen_c_json_printer@@Base+0x4c8>
   246ac:	bl	13ed0 <free@plt>
   246b0:	ldr	r0, [r4, #24]
   246b4:	cmp	r0, #0
   246b8:	beq	246c0 <__flatcc_fb_gen_c_json_printer@@Base+0x4d8>
   246bc:	bl	13ed0 <free@plt>
   246c0:	mov	r2, #44	; 0x2c
   246c4:	mov	r1, #0
   246c8:	mov	r0, r4
   246cc:	bl	13f9c <memset@plt>
   246d0:	pop	{r4, pc}
   246d4:	push	{r4, lr}
   246d8:	add	r3, r1, #4
   246dc:	mov	r2, r0
   246e0:	ldr	r1, [pc, #8]	; 246f0 <__flatcc_fb_gen_c_json_printer@@Base+0x508>
   246e4:	mov	r0, r3
   246e8:	bl	278c0 <fb_symbol_table_visit@@Base>
   246ec:	pop	{r4, pc}
   246f0:	andeq	r4, r2, r4, lsl r7
   246f4:	push	{r4, lr}
   246f8:	add	r3, r1, #4
   246fc:	mov	r2, r0
   24700:	ldr	r1, [pc, #8]	; 24710 <__flatcc_fb_gen_c_json_printer@@Base+0x528>
   24704:	mov	r0, r3
   24708:	bl	278c0 <fb_symbol_table_visit@@Base>
   2470c:	pop	{r4, pc}
   24710:	andeq	r4, r2, ip, asr #16
   24714:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24718:	mov	r7, r0
   2471c:	mov	r9, r1
   24720:	ldrh	r3, [r1, #8]
   24724:	cmp	r3, #4
   24728:	movhi	r3, #0
   2472c:	bls	247e4 <__flatcc_fb_gen_c_json_printer@@Base+0x5fc>
   24730:	cmp	r3, #0
   24734:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   24738:	ldr	sl, [r7, #36]	; 0x24
   2473c:	ldr	r2, [r7]
   24740:	cmp	r2, #0
   24744:	moveq	r6, sl
   24748:	beq	24794 <__flatcc_fb_gen_c_json_printer@@Base+0x5ac>
   2474c:	ldr	r3, [r3, #12]
   24750:	ldr	r5, [r3]
   24754:	cmp	r5, #0
   24758:	beq	24804 <__flatcc_fb_gen_c_json_printer@@Base+0x61c>
   2475c:	mov	r6, sl
   24760:	mov	r8, #46	; 0x2e
   24764:	ldr	r3, [r5, #4]
   24768:	ldr	r4, [r3, #4]
   2476c:	mov	r2, r4
   24770:	ldr	r1, [r3]
   24774:	mov	r0, r6
   24778:	bl	13edc <memcpy@plt>
   2477c:	add	r4, r6, r4
   24780:	add	r6, r4, #1
   24784:	strb	r8, [r4]
   24788:	ldr	r5, [r5]
   2478c:	cmp	r5, #0
   24790:	bne	24764 <__flatcc_fb_gen_c_json_printer@@Base+0x57c>
   24794:	ldr	r3, [r9, #4]
   24798:	ldr	r4, [r3, #4]
   2479c:	mov	r2, r4
   247a0:	ldr	r1, [r3]
   247a4:	mov	r0, r6
   247a8:	bl	13edc <memcpy@plt>
   247ac:	add	r3, r6, r4
   247b0:	mov	r2, #0
   247b4:	strb	r2, [r6, r4]
   247b8:	add	r3, r3, #1
   247bc:	str	r3, [r7, #36]	; 0x24
   247c0:	ldrh	r3, [r9, #8]
   247c4:	cmp	r3, #4
   247c8:	ldrls	pc, [pc, r3, lsl #2]
   247cc:	b	24848 <__flatcc_fb_gen_c_json_printer@@Base+0x660>
   247d0:	andeq	r4, r2, ip, lsl #16
   247d4:	andeq	r4, r2, ip, lsl #16
   247d8:	andeq	r4, r2, r8, asr #16
   247dc:	andeq	r4, r2, ip, lsr #16
   247e0:	andeq	r4, r2, ip, lsr #16
   247e4:	ldr	r0, [r0, #40]	; 0x28
   247e8:	ldr	r1, [r1, #16]
   247ec:	add	r0, r0, #172	; 0xac
   247f0:	bl	27230 <ptr_set_find_item@@Base>
   247f4:	cmp	r0, #0
   247f8:	movne	r3, r9
   247fc:	bne	24730 <__flatcc_fb_gen_c_json_printer@@Base+0x548>
   24800:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24804:	mov	r6, sl
   24808:	b	24794 <__flatcc_fb_gen_c_json_printer@@Base+0x5ac>
   2480c:	ldr	r3, [r7, #28]
   24810:	str	r9, [r3]
   24814:	ldr	r3, [r7, #28]
   24818:	str	sl, [r3, #4]
   2481c:	ldr	r3, [r7, #28]
   24820:	add	r3, r3, #8
   24824:	str	r3, [r7, #28]
   24828:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2482c:	ldr	r3, [r7, #32]
   24830:	str	r9, [r3]
   24834:	ldr	r3, [r7, #32]
   24838:	str	sl, [r3, #4]
   2483c:	ldr	r3, [r7, #32]
   24840:	add	r3, r3, #8
   24844:	str	r3, [r7, #32]
   24848:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2484c:	push	{r4, r5, r6, lr}
   24850:	mov	r4, r0
   24854:	mov	r5, r1
   24858:	ldrh	r3, [r1, #8]
   2485c:	cmp	r3, #4
   24860:	movhi	r3, #0
   24864:	bls	248f0 <__flatcc_fb_gen_c_json_printer@@Base+0x708>
   24868:	cmp	r3, #0
   2486c:	popeq	{r4, r5, r6, pc}
   24870:	ldr	r2, [r4]
   24874:	cmp	r2, #0
   24878:	moveq	r1, #0
   2487c:	beq	248b0 <__flatcc_fb_gen_c_json_printer@@Base+0x6c8>
   24880:	ldr	r3, [r3, #12]
   24884:	ldr	r3, [r3]
   24888:	cmp	r3, #0
   2488c:	beq	24910 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   24890:	mov	r1, #0
   24894:	ldr	r2, [r3, #4]
   24898:	ldr	r2, [r2, #4]
   2489c:	add	r2, r2, #1
   248a0:	add	r1, r1, r2
   248a4:	ldr	r3, [r3]
   248a8:	cmp	r3, #0
   248ac:	bne	24894 <__flatcc_fb_gen_c_json_printer@@Base+0x6ac>
   248b0:	ldr	r3, [r5, #4]
   248b4:	ldr	r3, [r3, #4]
   248b8:	ldr	r2, [r4, #12]
   248bc:	add	r3, r3, r2
   248c0:	add	r3, r3, #1
   248c4:	add	r1, r3, r1
   248c8:	str	r1, [r4, #12]
   248cc:	ldrh	r3, [r5, #8]
   248d0:	cmp	r3, #4
   248d4:	ldrls	pc, [pc, r3, lsl #2]
   248d8:	b	24934 <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   248dc:	andeq	r4, r2, r8, lsl r9
   248e0:	andeq	r4, r2, r8, lsl r9
   248e4:	andeq	r4, r2, r4, lsr r9
   248e8:	andeq	r4, r2, r8, lsr #18
   248ec:	andeq	r4, r2, r8, lsr #18
   248f0:	ldr	r0, [r0, #40]	; 0x28
   248f4:	ldr	r1, [r1, #16]
   248f8:	add	r0, r0, #172	; 0xac
   248fc:	bl	27230 <ptr_set_find_item@@Base>
   24900:	cmp	r0, #0
   24904:	movne	r3, r5
   24908:	bne	24868 <__flatcc_fb_gen_c_json_printer@@Base+0x680>
   2490c:	pop	{r4, r5, r6, pc}
   24910:	mov	r1, #0
   24914:	b	248b0 <__flatcc_fb_gen_c_json_printer@@Base+0x6c8>
   24918:	ldr	r3, [r4, #4]
   2491c:	add	r3, r3, #1
   24920:	str	r3, [r4, #4]
   24924:	pop	{r4, r5, r6, pc}
   24928:	ldr	r3, [r4, #8]
   2492c:	add	r3, r3, #1
   24930:	str	r3, [r4, #8]
   24934:	pop	{r4, r5, r6, pc}
   24938:	push	{r4, r5, r6, lr}
   2493c:	mov	r5, r0
   24940:	mov	r4, r1
   24944:	ldr	r3, [pc, #40]	; 24974 <__flatcc_fb_gen_c_json_printer@@Base+0x78c>
   24948:	mov	r2, #8
   2494c:	bl	14008 <qsort@plt>
   24950:	cmp	r4, #0
   24954:	pople	{r4, r5, r6, pc}
   24958:	mov	r3, #0
   2495c:	ldr	r2, [r5, r3, lsl #3]
   24960:	str	r3, [r2, #124]	; 0x7c
   24964:	add	r3, r3, #1
   24968:	cmp	r4, r3
   2496c:	bne	2495c <__flatcc_fb_gen_c_json_printer@@Base+0x774>
   24970:	pop	{r4, r5, r6, pc}
   24974:	andeq	r4, r2, r8, ror r9
   24978:	push	{r4, lr}
   2497c:	ldr	r1, [r1, #4]
   24980:	ldr	r0, [r0, #4]
   24984:	bl	13eb8 <strcmp@plt>
   24988:	pop	{r4, pc}
   2498c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24990:	sub	sp, sp, #36	; 0x24
   24994:	cmp	r0, #0
   24998:	beq	249fc <__flatcc_fb_gen_c_json_printer@@Base+0x814>
   2499c:	ldr	r2, [r0, #4]
   249a0:	ldr	r3, [pc, #2100]	; 251dc <__flatcc_fb_gen_c_json_printer@@Base+0xff4>
   249a4:	cmp	r2, r3
   249a8:	bne	249fc <__flatcc_fb_gen_c_json_printer@@Base+0x814>
   249ac:	ldr	r3, [r0]
   249b0:	adds	r2, r0, r3
   249b4:	beq	249fc <__flatcc_fb_gen_c_json_printer@@Base+0x814>
   249b8:	ldr	r3, [r0, r3]
   249bc:	sub	r3, r2, r3
   249c0:	ldrh	r1, [r3]
   249c4:	cmp	r1, #5
   249c8:	bls	24a10 <__flatcc_fb_gen_c_json_printer@@Base+0x828>
   249cc:	ldrh	r3, [r3, #4]
   249d0:	cmp	r3, #0
   249d4:	beq	24a10 <__flatcc_fb_gen_c_json_printer@@Base+0x828>
   249d8:	add	r1, r2, r3
   249dc:	ldr	r3, [r2, r3]
   249e0:	add	r3, r3, #4
   249e4:	add	r3, r1, r3
   249e8:	str	r3, [sp, #28]
   249ec:	str	r3, [sp, #24]
   249f0:	mov	r3, #0
   249f4:	str	r3, [sp, #20]
   249f8:	b	25118 <__flatcc_fb_gen_c_json_printer@@Base+0xf30>
   249fc:	ldr	r3, [pc, #2012]	; 251e0 <__flatcc_fb_gen_c_json_printer@@Base+0xff8>
   24a00:	mov	r2, #237	; 0xed
   24a04:	ldr	r1, [pc, #2008]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24a08:	ldr	r0, [pc, #2008]	; 251e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   24a0c:	bl	14038 <__assert_fail@plt>
   24a10:	ldr	r3, [pc, #1992]	; 251e0 <__flatcc_fb_gen_c_json_printer@@Base+0xff8>
   24a14:	mov	r2, #237	; 0xed
   24a18:	ldr	r1, [pc, #1988]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24a1c:	ldr	r0, [pc, #1992]	; 251ec <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   24a20:	bl	14038 <__assert_fail@plt>
   24a24:	ldr	r3, [pc, #1988]	; 251f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1008>
   24a28:	mov	r2, #224	; 0xe0
   24a2c:	ldr	r1, [pc, #1968]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24a30:	ldr	r0, [pc, #1968]	; 251e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   24a34:	bl	14038 <__assert_fail@plt>
   24a38:	ldr	r3, [pc, #1968]	; 251f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1008>
   24a3c:	mov	r2, #224	; 0xe0
   24a40:	ldr	r1, [pc, #1948]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24a44:	ldr	r0, [pc, #1952]	; 251ec <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   24a48:	bl	14038 <__assert_fail@plt>
   24a4c:	lsl	r3, r4, #2
   24a50:	add	r2, fp, r3
   24a54:	ldr	ip, [fp, #-4]
   24a58:	cmp	r4, ip
   24a5c:	bcs	24b24 <__flatcc_fb_gen_c_json_printer@@Base+0x93c>
   24a60:	ldr	r0, [fp, r4, lsl #2]
   24a64:	adds	r1, r2, r0
   24a68:	beq	24b38 <__flatcc_fb_gen_c_json_printer@@Base+0x950>
   24a6c:	ldr	r2, [r2, r0]
   24a70:	sub	r2, r1, r2
   24a74:	ldrh	r0, [r2]
   24a78:	cmp	r0, #5
   24a7c:	bls	24b4c <__flatcc_fb_gen_c_json_printer@@Base+0x964>
   24a80:	ldrh	r2, [r2, #4]
   24a84:	cmp	r2, #0
   24a88:	beq	24b4c <__flatcc_fb_gen_c_json_printer@@Base+0x964>
   24a8c:	add	lr, r1, r2
   24a90:	ldr	r0, [r1, r2]
   24a94:	add	r0, r0, #4
   24a98:	add	r0, lr, r0
   24a9c:	add	r5, r4, #1
   24aa0:	add	r3, r3, #4
   24aa4:	add	r1, fp, r3
   24aa8:	cmp	r5, ip
   24aac:	bcs	24b60 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   24ab0:	ldr	r3, [fp, r3]
   24ab4:	adds	r2, r1, r3
   24ab8:	beq	24b74 <__flatcc_fb_gen_c_json_printer@@Base+0x98c>
   24abc:	ldr	r3, [r1, r3]
   24ac0:	sub	r3, r2, r3
   24ac4:	ldrh	r1, [r3]
   24ac8:	cmp	r1, #5
   24acc:	bls	24b88 <__flatcc_fb_gen_c_json_printer@@Base+0x9a0>
   24ad0:	ldrh	r3, [r3, #4]
   24ad4:	cmp	r3, #0
   24ad8:	beq	24b88 <__flatcc_fb_gen_c_json_printer@@Base+0x9a0>
   24adc:	add	r1, r2, r3
   24ae0:	ldr	r3, [r2, r3]
   24ae4:	add	r3, r3, #4
   24ae8:	adds	r1, r1, r3
   24aec:	moveq	r7, #0
   24af0:	ldrne	r7, [r1, #-4]
   24af4:	cmp	r0, #0
   24af8:	beq	24b9c <__flatcc_fb_gen_c_json_printer@@Base+0x9b4>
   24afc:	ldr	r6, [r0, #-4]
   24b00:	cmp	r7, r6
   24b04:	movcc	r2, r7
   24b08:	movcs	r2, r6
   24b0c:	bl	14020 <strncmp@plt>
   24b10:	cmp	r0, #0
   24b14:	bne	24ba4 <__flatcc_fb_gen_c_json_printer@@Base+0x9bc>
   24b18:	cmp	r7, r6
   24b1c:	movls	r5, r4
   24b20:	b	24c78 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
   24b24:	ldr	r3, [pc, #1736]	; 251f4 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   24b28:	mov	r2, #192	; 0xc0
   24b2c:	ldr	r1, [pc, #1712]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24b30:	ldr	r0, [pc, #1728]	; 251f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   24b34:	bl	14038 <__assert_fail@plt>
   24b38:	ldr	r3, [pc, #1724]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24b3c:	mov	r2, #195	; 0xc3
   24b40:	ldr	r1, [pc, #1692]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24b44:	ldr	r0, [pc, #1692]	; 251e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   24b48:	bl	14038 <__assert_fail@plt>
   24b4c:	ldr	r3, [pc, #1704]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24b50:	mov	r2, #195	; 0xc3
   24b54:	ldr	r1, [pc, #1672]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24b58:	ldr	r0, [pc, #1676]	; 251ec <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   24b5c:	bl	14038 <__assert_fail@plt>
   24b60:	ldr	r3, [pc, #1676]	; 251f4 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   24b64:	mov	r2, #192	; 0xc0
   24b68:	ldr	r1, [pc, #1652]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24b6c:	ldr	r0, [pc, #1668]	; 251f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   24b70:	bl	14038 <__assert_fail@plt>
   24b74:	ldr	r3, [pc, #1664]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24b78:	mov	r2, #195	; 0xc3
   24b7c:	ldr	r1, [pc, #1632]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24b80:	ldr	r0, [pc, #1632]	; 251e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   24b84:	bl	14038 <__assert_fail@plt>
   24b88:	ldr	r3, [pc, #1644]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24b8c:	mov	r2, #195	; 0xc3
   24b90:	ldr	r1, [pc, #1612]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24b94:	ldr	r0, [pc, #1616]	; 251ec <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   24b98:	bl	14038 <__assert_fail@plt>
   24b9c:	mov	r6, #0
   24ba0:	b	24b18 <__flatcc_fb_gen_c_json_printer@@Base+0x930>
   24ba4:	cmp	r0, #0
   24ba8:	movge	r5, r4
   24bac:	b	24c78 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
   24bb0:	ldr	r3, [pc, #1596]	; 251f4 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   24bb4:	mov	r2, #192	; 0xc0
   24bb8:	ldr	r1, [pc, #1572]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24bbc:	ldr	r0, [pc, #1588]	; 251f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   24bc0:	bl	14038 <__assert_fail@plt>
   24bc4:	ldr	r3, [pc, #1584]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24bc8:	mov	r2, #195	; 0xc3
   24bcc:	ldr	r1, [pc, #1552]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24bd0:	ldr	r0, [pc, #1552]	; 251e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   24bd4:	bl	14038 <__assert_fail@plt>
   24bd8:	ldr	r3, [pc, #1564]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24bdc:	mov	r2, #195	; 0xc3
   24be0:	ldr	r1, [pc, #1532]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24be4:	ldr	r0, [pc, #1536]	; 251ec <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   24be8:	bl	14038 <__assert_fail@plt>
   24bec:	ldr	r3, [pc, #1536]	; 251f4 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   24bf0:	mov	r2, #192	; 0xc0
   24bf4:	ldr	r1, [pc, #1512]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24bf8:	ldr	r0, [pc, #1528]	; 251f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   24bfc:	bl	14038 <__assert_fail@plt>
   24c00:	ldr	r3, [pc, #1524]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24c04:	mov	r2, #195	; 0xc3
   24c08:	ldr	r1, [pc, #1492]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24c0c:	ldr	r0, [pc, #1492]	; 251e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   24c10:	bl	14038 <__assert_fail@plt>
   24c14:	ldr	r3, [pc, #1504]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24c18:	mov	r2, #195	; 0xc3
   24c1c:	ldr	r1, [pc, #1472]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24c20:	ldr	r0, [pc, #1476]	; 251ec <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   24c24:	bl	14038 <__assert_fail@plt>
   24c28:	mov	r7, #0
   24c2c:	b	24d44 <__flatcc_fb_gen_c_json_printer@@Base+0xb5c>
   24c30:	cmp	r0, #0
   24c34:	bge	24d4c <__flatcc_fb_gen_c_json_printer@@Base+0xb64>
   24c38:	sub	r3, sl, r5
   24c3c:	lsl	r3, r3, #2
   24c40:	sub	r4, r4, r3
   24c44:	str	r4, [fp, r9]
   24c48:	add	r6, r3, r6
   24c4c:	ldr	r3, [sp, #4]
   24c50:	str	r6, [fp, r3]
   24c54:	lsl	r4, r5, #1
   24c58:	mov	sl, r5
   24c5c:	ldr	r3, [sp]
   24c60:	cmp	r3, r4
   24c64:	bcc	24d4c <__flatcc_fb_gen_c_json_printer@@Base+0xb64>
   24c68:	ldr	r3, [sp]
   24c6c:	cmp	r3, r4
   24c70:	movls	r5, r4
   24c74:	bhi	24a4c <__flatcc_fb_gen_c_json_printer@@Base+0x864>
   24c78:	lsl	r9, sl, #2
   24c7c:	add	r3, fp, r9
   24c80:	ldr	r1, [fp, #-4]
   24c84:	cmp	sl, r1
   24c88:	bcs	24bb0 <__flatcc_fb_gen_c_json_printer@@Base+0x9c8>
   24c8c:	ldr	r6, [fp, sl, lsl #2]
   24c90:	adds	r2, r3, r6
   24c94:	beq	24bc4 <__flatcc_fb_gen_c_json_printer@@Base+0x9dc>
   24c98:	ldr	r3, [r3, r6]
   24c9c:	sub	r3, r2, r3
   24ca0:	ldrh	r0, [r3]
   24ca4:	cmp	r0, #5
   24ca8:	bls	24bd8 <__flatcc_fb_gen_c_json_printer@@Base+0x9f0>
   24cac:	ldrh	r3, [r3, #4]
   24cb0:	cmp	r3, #0
   24cb4:	beq	24bd8 <__flatcc_fb_gen_c_json_printer@@Base+0x9f0>
   24cb8:	add	ip, r2, r3
   24cbc:	ldr	r0, [r2, r3]
   24cc0:	add	r0, r0, #4
   24cc4:	add	r0, ip, r0
   24cc8:	lsl	r3, r5, #2
   24ccc:	str	r3, [sp, #4]
   24cd0:	add	r3, fp, r3
   24cd4:	cmp	r5, r1
   24cd8:	bcs	24bec <__flatcc_fb_gen_c_json_printer@@Base+0xa04>
   24cdc:	ldr	r4, [fp, r5, lsl #2]
   24ce0:	adds	r2, r3, r4
   24ce4:	beq	24c00 <__flatcc_fb_gen_c_json_printer@@Base+0xa18>
   24ce8:	ldr	r3, [r3, r4]
   24cec:	sub	r3, r2, r3
   24cf0:	ldrh	r1, [r3]
   24cf4:	cmp	r1, #5
   24cf8:	bls	24c14 <__flatcc_fb_gen_c_json_printer@@Base+0xa2c>
   24cfc:	ldrh	r3, [r3, #4]
   24d00:	cmp	r3, #0
   24d04:	beq	24c14 <__flatcc_fb_gen_c_json_printer@@Base+0xa2c>
   24d08:	add	r1, r2, r3
   24d0c:	ldr	r3, [r2, r3]
   24d10:	add	r3, r3, #4
   24d14:	adds	r1, r1, r3
   24d18:	moveq	r8, #0
   24d1c:	ldrne	r8, [r1, #-4]
   24d20:	cmp	r0, #0
   24d24:	beq	24c28 <__flatcc_fb_gen_c_json_printer@@Base+0xa40>
   24d28:	ldr	r7, [r0, #-4]
   24d2c:	cmp	r8, r7
   24d30:	movcc	r2, r8
   24d34:	movcs	r2, r7
   24d38:	bl	14020 <strncmp@plt>
   24d3c:	cmp	r0, #0
   24d40:	bne	24c30 <__flatcc_fb_gen_c_json_printer@@Base+0xa48>
   24d44:	cmp	r8, r7
   24d48:	bhi	24c38 <__flatcc_fb_gen_c_json_printer@@Base+0xa50>
   24d4c:	ldr	r2, [sp, #8]
   24d50:	sub	r3, r2, #1
   24d54:	ldr	r1, [sp, #12]
   24d58:	sub	r1, r1, #2
   24d5c:	str	r1, [sp, #12]
   24d60:	cmp	r2, #0
   24d64:	beq	24d88 <__flatcc_fb_gen_c_json_printer@@Base+0xba0>
   24d68:	str	r3, [sp, #8]
   24d6c:	ldr	r2, [sp]
   24d70:	ldr	r3, [sp, #12]
   24d74:	cmp	r2, r3
   24d78:	bcc	24d4c <__flatcc_fb_gen_c_json_printer@@Base+0xb64>
   24d7c:	ldr	sl, [sp, #8]
   24d80:	mov	r4, r3
   24d84:	b	24c68 <__flatcc_fb_gen_c_json_printer@@Base+0xa80>
   24d88:	ldr	r3, [sp]
   24d8c:	cmp	r3, #0
   24d90:	beq	2510c <__flatcc_fb_gen_c_json_printer@@Base+0xf24>
   24d94:	ldr	r3, [sp, #16]
   24d98:	add	r2, fp, r3, lsl #2
   24d9c:	str	r2, [sp, #16]
   24da0:	rsb	r3, r3, r3, lsl #30
   24da4:	lsl	r3, r3, #2
   24da8:	add	r3, r3, #4
   24dac:	str	r3, [sp, #12]
   24db0:	b	250cc <__flatcc_fb_gen_c_json_printer@@Base+0xee4>
   24db4:	lsl	r3, r4, #2
   24db8:	add	r0, fp, r3
   24dbc:	ldr	ip, [fp, #-4]
   24dc0:	cmp	r4, ip
   24dc4:	bcs	24e8c <__flatcc_fb_gen_c_json_printer@@Base+0xca4>
   24dc8:	ldr	r2, [fp, r4, lsl #2]
   24dcc:	adds	r1, r0, r2
   24dd0:	beq	24ea0 <__flatcc_fb_gen_c_json_printer@@Base+0xcb8>
   24dd4:	ldr	r2, [r0, r2]
   24dd8:	sub	r2, r1, r2
   24ddc:	ldrh	r0, [r2]
   24de0:	cmp	r0, #5
   24de4:	bls	24eb4 <__flatcc_fb_gen_c_json_printer@@Base+0xccc>
   24de8:	ldrh	r2, [r2, #4]
   24dec:	cmp	r2, #0
   24df0:	beq	24eb4 <__flatcc_fb_gen_c_json_printer@@Base+0xccc>
   24df4:	add	lr, r1, r2
   24df8:	ldr	r0, [r1, r2]
   24dfc:	add	r0, r0, #4
   24e00:	add	r0, lr, r0
   24e04:	add	r5, r4, #1
   24e08:	add	r3, r3, #4
   24e0c:	add	r1, fp, r3
   24e10:	cmp	r5, ip
   24e14:	bcs	24ec8 <__flatcc_fb_gen_c_json_printer@@Base+0xce0>
   24e18:	ldr	r3, [fp, r3]
   24e1c:	adds	r2, r1, r3
   24e20:	beq	24edc <__flatcc_fb_gen_c_json_printer@@Base+0xcf4>
   24e24:	ldr	r3, [r1, r3]
   24e28:	sub	r3, r2, r3
   24e2c:	ldrh	r1, [r3]
   24e30:	cmp	r1, #5
   24e34:	bls	24ef0 <__flatcc_fb_gen_c_json_printer@@Base+0xd08>
   24e38:	ldrh	r3, [r3, #4]
   24e3c:	cmp	r3, #0
   24e40:	beq	24ef0 <__flatcc_fb_gen_c_json_printer@@Base+0xd08>
   24e44:	add	r1, r2, r3
   24e48:	ldr	r3, [r2, r3]
   24e4c:	add	r3, r3, #4
   24e50:	adds	r1, r1, r3
   24e54:	beq	251b0 <__flatcc_fb_gen_c_json_printer@@Base+0xfc8>
   24e58:	ldr	r6, [r1, #-4]
   24e5c:	cmp	r0, #0
   24e60:	beq	24f04 <__flatcc_fb_gen_c_json_printer@@Base+0xd1c>
   24e64:	ldr	r7, [r0, #-4]
   24e68:	cmp	r6, r7
   24e6c:	movcc	r2, r6
   24e70:	movcs	r2, r7
   24e74:	bl	14020 <strncmp@plt>
   24e78:	cmp	r0, #0
   24e7c:	bne	24f0c <__flatcc_fb_gen_c_json_printer@@Base+0xd24>
   24e80:	cmp	r7, r6
   24e84:	movcs	r5, r4
   24e88:	b	24fe0 <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   24e8c:	ldr	r3, [pc, #864]	; 251f4 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   24e90:	mov	r2, #192	; 0xc0
   24e94:	ldr	r1, [pc, #840]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24e98:	ldr	r0, [pc, #856]	; 251f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   24e9c:	bl	14038 <__assert_fail@plt>
   24ea0:	ldr	r3, [pc, #852]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24ea4:	mov	r2, #195	; 0xc3
   24ea8:	ldr	r1, [pc, #820]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24eac:	ldr	r0, [pc, #820]	; 251e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   24eb0:	bl	14038 <__assert_fail@plt>
   24eb4:	ldr	r3, [pc, #832]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24eb8:	mov	r2, #195	; 0xc3
   24ebc:	ldr	r1, [pc, #800]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24ec0:	ldr	r0, [pc, #804]	; 251ec <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   24ec4:	bl	14038 <__assert_fail@plt>
   24ec8:	ldr	r3, [pc, #804]	; 251f4 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   24ecc:	mov	r2, #192	; 0xc0
   24ed0:	ldr	r1, [pc, #780]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24ed4:	ldr	r0, [pc, #796]	; 251f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   24ed8:	bl	14038 <__assert_fail@plt>
   24edc:	ldr	r3, [pc, #792]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24ee0:	mov	r2, #195	; 0xc3
   24ee4:	ldr	r1, [pc, #760]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24ee8:	ldr	r0, [pc, #760]	; 251e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   24eec:	bl	14038 <__assert_fail@plt>
   24ef0:	ldr	r3, [pc, #772]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24ef4:	mov	r2, #195	; 0xc3
   24ef8:	ldr	r1, [pc, #740]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24efc:	ldr	r0, [pc, #744]	; 251ec <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   24f00:	bl	14038 <__assert_fail@plt>
   24f04:	ldr	r7, [sp, #8]
   24f08:	b	24e80 <__flatcc_fb_gen_c_json_printer@@Base+0xc98>
   24f0c:	cmp	r0, #0
   24f10:	movge	r5, r4
   24f14:	b	24fe0 <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   24f18:	ldr	r3, [pc, #724]	; 251f4 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   24f1c:	mov	r2, #192	; 0xc0
   24f20:	ldr	r1, [pc, #700]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24f24:	ldr	r0, [pc, #716]	; 251f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   24f28:	bl	14038 <__assert_fail@plt>
   24f2c:	ldr	r3, [pc, #712]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24f30:	mov	r2, #195	; 0xc3
   24f34:	ldr	r1, [pc, #680]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24f38:	ldr	r0, [pc, #680]	; 251e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   24f3c:	bl	14038 <__assert_fail@plt>
   24f40:	ldr	r3, [pc, #692]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24f44:	mov	r2, #195	; 0xc3
   24f48:	ldr	r1, [pc, #660]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24f4c:	ldr	r0, [pc, #664]	; 251ec <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   24f50:	bl	14038 <__assert_fail@plt>
   24f54:	ldr	r3, [pc, #664]	; 251f4 <__flatcc_fb_gen_c_json_printer@@Base+0x100c>
   24f58:	mov	r2, #192	; 0xc0
   24f5c:	ldr	r1, [pc, #640]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24f60:	ldr	r0, [pc, #656]	; 251f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1010>
   24f64:	bl	14038 <__assert_fail@plt>
   24f68:	ldr	r3, [pc, #652]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24f6c:	mov	r2, #195	; 0xc3
   24f70:	ldr	r1, [pc, #620]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24f74:	ldr	r0, [pc, #620]	; 251e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
   24f78:	bl	14038 <__assert_fail@plt>
   24f7c:	ldr	r3, [pc, #632]	; 251fc <__flatcc_fb_gen_c_json_printer@@Base+0x1014>
   24f80:	mov	r2, #195	; 0xc3
   24f84:	ldr	r1, [pc, #600]	; 251e4 <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
   24f88:	ldr	r0, [pc, #604]	; 251ec <__flatcc_fb_gen_c_json_printer@@Base+0x1004>
   24f8c:	bl	14038 <__assert_fail@plt>
   24f90:	ldr	r7, [sp, #8]
   24f94:	b	250ac <__flatcc_fb_gen_c_json_printer@@Base+0xec4>
   24f98:	cmp	r0, #0
   24f9c:	bge	250b4 <__flatcc_fb_gen_c_json_printer@@Base+0xecc>
   24fa0:	sub	r3, sl, r5
   24fa4:	lsl	r3, r3, #2
   24fa8:	sub	r4, r4, r3
   24fac:	str	r4, [fp, r9]
   24fb0:	add	r6, r3, r6
   24fb4:	ldr	r3, [sp, #4]
   24fb8:	str	r6, [fp, r3]
   24fbc:	lsl	r4, r5, #1
   24fc0:	mov	sl, r5
   24fc4:	ldr	r3, [sp]
   24fc8:	cmp	r3, r4
   24fcc:	bcc	250b4 <__flatcc_fb_gen_c_json_printer@@Base+0xecc>
   24fd0:	ldr	r3, [sp]
   24fd4:	cmp	r3, r4
   24fd8:	movls	r5, r4
   24fdc:	bhi	24db4 <__flatcc_fb_gen_c_json_printer@@Base+0xbcc>
   24fe0:	lsl	r9, sl, #2
   24fe4:	add	r3, fp, r9
   24fe8:	ldr	r1, [fp, #-4]
   24fec:	cmp	sl, r1
   24ff0:	bcs	24f18 <__flatcc_fb_gen_c_json_printer@@Base+0xd30>
   24ff4:	ldr	r6, [fp, sl, lsl #2]
   24ff8:	adds	r2, r3, r6
   24ffc:	beq	24f2c <__flatcc_fb_gen_c_json_printer@@Base+0xd44>
   25000:	ldr	r3, [r3, r6]
   25004:	sub	r3, r2, r3
   25008:	ldrh	r0, [r3]
   2500c:	cmp	r0, #5
   25010:	bls	24f40 <__flatcc_fb_gen_c_json_printer@@Base+0xd58>
   25014:	ldrh	r3, [r3, #4]
   25018:	cmp	r3, #0
   2501c:	beq	24f40 <__flatcc_fb_gen_c_json_printer@@Base+0xd58>
   25020:	add	ip, r2, r3
   25024:	ldr	r0, [r2, r3]
   25028:	add	r0, r0, #4
   2502c:	add	r0, ip, r0
   25030:	lsl	r3, r5, #2
   25034:	str	r3, [sp, #4]
   25038:	add	r3, fp, r3
   2503c:	cmp	r5, r1
   25040:	bcs	24f54 <__flatcc_fb_gen_c_json_printer@@Base+0xd6c>
   25044:	ldr	r4, [fp, r5, lsl #2]
   25048:	adds	r2, r3, r4
   2504c:	beq	24f68 <__flatcc_fb_gen_c_json_printer@@Base+0xd80>
   25050:	ldr	r3, [r3, r4]
   25054:	sub	r3, r2, r3
   25058:	ldrh	r1, [r3]
   2505c:	cmp	r1, #5
   25060:	bls	24f7c <__flatcc_fb_gen_c_json_printer@@Base+0xd94>
   25064:	ldrh	r3, [r3, #4]
   25068:	cmp	r3, #0
   2506c:	beq	24f7c <__flatcc_fb_gen_c_json_printer@@Base+0xd94>
   25070:	add	r1, r2, r3
   25074:	ldr	r3, [r2, r3]
   25078:	add	r3, r3, #4
   2507c:	adds	r1, r1, r3
   25080:	beq	251c4 <__flatcc_fb_gen_c_json_printer@@Base+0xfdc>
   25084:	ldr	r8, [r1, #-4]
   25088:	cmp	r0, #0
   2508c:	beq	24f90 <__flatcc_fb_gen_c_json_printer@@Base+0xda8>
   25090:	ldr	r7, [r0, #-4]
   25094:	cmp	r8, r7
   25098:	movcc	r2, r8
   2509c:	movcs	r2, r7
   250a0:	bl	14020 <strncmp@plt>
   250a4:	cmp	r0, #0
   250a8:	bne	24f98 <__flatcc_fb_gen_c_json_printer@@Base+0xdb0>
   250ac:	cmp	r8, r7
   250b0:	bhi	24fa0 <__flatcc_fb_gen_c_json_printer@@Base+0xdb8>
   250b4:	ldr	r3, [sp, #12]
   250b8:	add	r3, r3, #4
   250bc:	str	r3, [sp, #12]
   250c0:	ldr	r3, [sp]
   250c4:	cmp	r3, #0
   250c8:	beq	2510c <__flatcc_fb_gen_c_json_printer@@Base+0xf24>
   250cc:	ldr	r3, [fp]
   250d0:	ldr	r0, [sp, #12]
   250d4:	add	r3, r0, r3
   250d8:	ldr	r1, [sp, #16]
   250dc:	ldr	r2, [r1, #-4]
   250e0:	sub	r2, r2, r0
   250e4:	str	r2, [fp]
   250e8:	mov	r2, r1
   250ec:	str	r3, [r2, #-4]!
   250f0:	str	r2, [sp, #16]
   250f4:	ldr	r3, [sp]
   250f8:	sub	r3, r3, #1
   250fc:	str	r3, [sp]
   25100:	ldr	r4, [sp, #8]
   25104:	mov	sl, r4
   25108:	b	24fd0 <__flatcc_fb_gen_c_json_printer@@Base+0xde8>
   2510c:	ldr	r3, [sp, #20]
   25110:	add	r3, r3, #1
   25114:	str	r3, [sp, #20]
   25118:	ldr	r3, [sp, #28]
   2511c:	cmp	r3, #0
   25120:	beq	251d4 <__flatcc_fb_gen_c_json_printer@@Base+0xfec>
   25124:	ldr	r3, [r3, #-4]
   25128:	ldr	r2, [sp, #20]
   2512c:	cmp	r2, r3
   25130:	bcs	251d4 <__flatcc_fb_gen_c_json_printer@@Base+0xfec>
   25134:	ldr	r2, [sp, #24]
   25138:	mov	r3, r2
   2513c:	add	r2, r2, #4
   25140:	str	r2, [sp, #24]
   25144:	ldr	r1, [r3]
   25148:	adds	r2, r3, r1
   2514c:	beq	24a24 <__flatcc_fb_gen_c_json_printer@@Base+0x83c>
   25150:	ldr	r3, [r3, r1]
   25154:	sub	r3, r2, r3
   25158:	ldrh	r1, [r3]
   2515c:	cmp	r1, #7
   25160:	bls	24a38 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   25164:	ldrh	r3, [r3, #6]
   25168:	cmp	r3, #0
   2516c:	beq	24a38 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   25170:	add	r1, r2, r3
   25174:	ldr	r3, [r2, r3]
   25178:	add	r3, r3, #4
   2517c:	adds	fp, r1, r3
   25180:	beq	2510c <__flatcc_fb_gen_c_json_printer@@Base+0xf24>
   25184:	ldr	r3, [fp, #-4]
   25188:	str	r3, [sp, #16]
   2518c:	cmp	r3, #0
   25190:	beq	2510c <__flatcc_fb_gen_c_json_printer@@Base+0xf24>
   25194:	sub	r2, r3, #1
   25198:	str	r2, [sp]
   2519c:	lsr	r3, r3, #1
   251a0:	str	r3, [sp, #8]
   251a4:	lsl	r3, r3, #1
   251a8:	str	r3, [sp, #12]
   251ac:	b	24d6c <__flatcc_fb_gen_c_json_printer@@Base+0xb84>
   251b0:	cmp	r0, #0
   251b4:	moveq	r5, r4
   251b8:	beq	24fe0 <__flatcc_fb_gen_c_json_printer@@Base+0xdf8>
   251bc:	ldr	r6, [sp, #8]
   251c0:	b	24e64 <__flatcc_fb_gen_c_json_printer@@Base+0xc7c>
   251c4:	cmp	r0, #0
   251c8:	beq	250b4 <__flatcc_fb_gen_c_json_printer@@Base+0xecc>
   251cc:	ldr	r8, [sp, #8]
   251d0:	b	25090 <__flatcc_fb_gen_c_json_printer@@Base+0xea8>
   251d4:	add	sp, sp, #36	; 0x24
   251d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   251dc:	movtpl	r4, #9794	; 0x2642
   251e0:	andeq	r1, r5, ip, ror ip
   251e4:	muleq	r5, r4, sp
   251e8:	strdeq	r1, [r5], -r4
   251ec:	andeq	r1, r5, ip, lsl lr
   251f0:	muleq	r5, r8, ip
   251f4:			; <UNDEFINED> instruction: 0x00051cb4
   251f8:	andeq	r1, r5, r0, asr #28
   251fc:	andeq	r1, r5, ip, asr #25
   25200:	sub	sp, sp, #8
   25204:	push	{r4, r5, r6, r7, r8, lr}
   25208:	mov	r4, r0
   2520c:	add	r1, sp, #20
   25210:	stmib	r1, {r2, r3}
   25214:	ldr	r2, [sp, #24]
   25218:	ldrh	r3, [sp, #32]
   2521c:	sub	r3, r3, #2
   25220:	cmp	r3, #13
   25224:	ldrls	pc, [pc, r3, lsl #2]
   25228:	b	2530c <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   2522c:	andeq	r5, r2, r4, ror #4
   25230:	andeq	r5, r2, ip, lsl #6
   25234:	andeq	r5, r2, ip, lsl #6
   25238:	andeq	r5, r2, ip, lsl #6
   2523c:	andeq	r5, r2, ip, lsl #6
   25240:	andeq	r5, r2, r0, lsr #12
   25244:	andeq	r5, r2, ip, asr r6
   25248:	andeq	r5, r2, ip, ror #10
   2524c:	andeq	r5, r2, ip, lsl #6
   25250:	andeq	r5, r2, ip, lsl #6
   25254:	andeq	r5, r2, ip, lsl #6
   25258:	andeq	r5, r2, ip, lsl #6
   2525c:	andeq	r5, r2, ip, asr #5
   25260:	andeq	r5, r2, r4, ror r2
   25264:	mov	r5, #0
   25268:	mov	r3, #13
   2526c:	mvn	r7, #0
   25270:	b	25578 <__flatcc_fb_gen_c_json_printer@@Base+0x1390>
   25274:	ldr	r7, [r2, #124]	; 0x7c
   25278:	ldrh	r3, [r2, #8]
   2527c:	cmp	r3, #1
   25280:	bls	25608 <__flatcc_fb_gen_c_json_printer@@Base+0x1420>
   25284:	cmp	r3, #3
   25288:	bne	25320 <__flatcc_fb_gen_c_json_printer@@Base+0x1138>
   2528c:	ldr	r3, [r2, #40]	; 0x28
   25290:	sub	r3, r3, #1
   25294:	cmp	r3, #10
   25298:	ldrls	pc, [pc, r3, lsl #2]
   2529c:	b	254d0 <__flatcc_fb_gen_c_json_printer@@Base+0x12e8>
   252a0:	andeq	r5, r2, r0, lsr r3
   252a4:	andeq	r5, r2, r4, asr r3
   252a8:	andeq	r5, r2, r8, ror r3
   252ac:	muleq	r2, ip, r3
   252b0:	andeq	r5, r2, r0, asr #7
   252b4:	andeq	r5, r2, r4, ror #7
   252b8:	andeq	r5, r2, r8, lsl #8
   252bc:	andeq	r5, r2, ip, lsr #8
   252c0:	andeq	r5, r2, r0, asr r4
   252c4:	andeq	r5, r2, r4, ror r4
   252c8:	muleq	r2, r8, r4
   252cc:	ldr	r7, [r2, #124]	; 0x7c
   252d0:	ldrh	r3, [r2, #8]
   252d4:	cmp	r3, #4
   252d8:	ldrls	pc, [pc, r3, lsl #2]
   252dc:	b	252f4 <__flatcc_fb_gen_c_json_printer@@Base+0x110c>
   252e0:	andeq	r5, r2, r8, lsr #6
   252e4:	andeq	r5, r2, r8, lsr #6
   252e8:	strdeq	r5, [r2], -r4
   252ec:	andeq	r5, r2, r4, lsl #6
   252f0:	andeq	r5, r2, r4, lsl r6
   252f4:	mov	r5, #0
   252f8:	mov	r3, r5
   252fc:	mvn	r7, #0
   25300:	b	25578 <__flatcc_fb_gen_c_json_printer@@Base+0x1390>
   25304:	ldr	r2, [r2, #40]	; 0x28
   25308:	b	25660 <__flatcc_fb_gen_c_json_printer@@Base+0x1478>
   2530c:	mov	r3, #0
   25310:	mvn	r7, #0
   25314:	mov	r5, #0
   25318:	mov	r6, r5
   2531c:	b	2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   25320:	mov	r3, #0
   25324:	b	25314 <__flatcc_fb_gen_c_json_printer@@Base+0x112c>
   25328:	mov	r3, #15
   2532c:	b	25314 <__flatcc_fb_gen_c_json_printer@@Base+0x112c>
   25330:	mov	r3, #14
   25334:	b	25348 <__flatcc_fb_gen_c_json_printer@@Base+0x1160>
   25338:	mov	r3, #14
   2533c:	mvn	r7, #0
   25340:	b	25348 <__flatcc_fb_gen_c_json_printer@@Base+0x1160>
   25344:	mov	r3, #0
   25348:	mov	r5, #0
   2534c:	mov	r6, #10
   25350:	b	2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   25354:	mov	r3, #14
   25358:	b	2536c <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   2535c:	mov	r3, #14
   25360:	mvn	r7, #0
   25364:	b	2536c <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   25368:	mov	r3, #0
   2536c:	mov	r5, #0
   25370:	mov	r6, #8
   25374:	b	2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   25378:	mov	r3, #14
   2537c:	b	25390 <__flatcc_fb_gen_c_json_printer@@Base+0x11a8>
   25380:	mov	r3, #14
   25384:	mvn	r7, #0
   25388:	b	25390 <__flatcc_fb_gen_c_json_printer@@Base+0x11a8>
   2538c:	mov	r3, #0
   25390:	mov	r5, #0
   25394:	mov	r6, #6
   25398:	b	2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   2539c:	mov	r3, #14
   253a0:	b	253b4 <__flatcc_fb_gen_c_json_printer@@Base+0x11cc>
   253a4:	mov	r3, #14
   253a8:	mvn	r7, #0
   253ac:	b	253b4 <__flatcc_fb_gen_c_json_printer@@Base+0x11cc>
   253b0:	mov	r3, #0
   253b4:	mov	r5, #0
   253b8:	mov	r6, #4
   253bc:	b	2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   253c0:	mov	r3, #14
   253c4:	b	253d8 <__flatcc_fb_gen_c_json_printer@@Base+0x11f0>
   253c8:	mov	r3, #14
   253cc:	mvn	r7, #0
   253d0:	b	253d8 <__flatcc_fb_gen_c_json_printer@@Base+0x11f0>
   253d4:	mov	r3, #0
   253d8:	mov	r5, #0
   253dc:	mov	r6, #2
   253e0:	b	2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   253e4:	mov	r3, #14
   253e8:	b	253fc <__flatcc_fb_gen_c_json_printer@@Base+0x1214>
   253ec:	mov	r3, #14
   253f0:	mvn	r7, #0
   253f4:	b	253fc <__flatcc_fb_gen_c_json_printer@@Base+0x1214>
   253f8:	mov	r3, #0
   253fc:	mov	r5, #0
   25400:	mov	r6, #9
   25404:	b	2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   25408:	mov	r3, #14
   2540c:	b	25420 <__flatcc_fb_gen_c_json_printer@@Base+0x1238>
   25410:	mov	r3, #14
   25414:	mvn	r7, #0
   25418:	b	25420 <__flatcc_fb_gen_c_json_printer@@Base+0x1238>
   2541c:	mov	r3, #0
   25420:	mov	r5, #0
   25424:	mov	r6, #7
   25428:	b	2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   2542c:	mov	r3, #14
   25430:	b	25444 <__flatcc_fb_gen_c_json_printer@@Base+0x125c>
   25434:	mov	r3, #14
   25438:	mvn	r7, #0
   2543c:	b	25444 <__flatcc_fb_gen_c_json_printer@@Base+0x125c>
   25440:	mov	r3, #0
   25444:	mov	r5, #0
   25448:	mov	r6, #5
   2544c:	b	2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   25450:	mov	r3, #14
   25454:	b	25468 <__flatcc_fb_gen_c_json_printer@@Base+0x1280>
   25458:	mov	r3, #14
   2545c:	mvn	r7, #0
   25460:	b	25468 <__flatcc_fb_gen_c_json_printer@@Base+0x1280>
   25464:	mov	r3, #0
   25468:	mov	r5, #0
   2546c:	mov	r6, #3
   25470:	b	2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   25474:	mov	r3, #14
   25478:	b	2548c <__flatcc_fb_gen_c_json_printer@@Base+0x12a4>
   2547c:	mov	r3, #14
   25480:	mvn	r7, #0
   25484:	b	2548c <__flatcc_fb_gen_c_json_printer@@Base+0x12a4>
   25488:	mov	r3, #0
   2548c:	mov	r5, #0
   25490:	mov	r6, #12
   25494:	b	2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   25498:	mov	r3, #14
   2549c:	mov	r5, #0
   254a0:	mov	r6, #11
   254a4:	b	2557c <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   254a8:	mov	r3, #14
   254ac:	mvn	r7, #0
   254b0:	b	2549c <__flatcc_fb_gen_c_json_printer@@Base+0x12b4>
   254b4:	mov	r3, #0
   254b8:	b	2549c <__flatcc_fb_gen_c_json_printer@@Base+0x12b4>
   254bc:	mov	r6, #0
   254c0:	mov	r5, r6
   254c4:	mov	r3, #14
   254c8:	mvn	r7, #0
   254cc:	b	25584 <__flatcc_fb_gen_c_json_printer@@Base+0x139c>
   254d0:	mov	r5, #0
   254d4:	mov	r6, #14
   254d8:	b	25598 <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   254dc:	mov	r6, r3
   254e0:	b	25598 <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   254e4:	mov	r5, #0
   254e8:	mov	r6, r5
   254ec:	b	25598 <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   254f0:	mov	r3, #1
   254f4:	mov	r2, r3
   254f8:	mov	r1, #0
   254fc:	mov	r0, r4
   25500:	bl	368e4 <flatcc_builder_table_add@@Base>
   25504:	cmp	r0, #0
   25508:	strbne	r6, [r0]
   2550c:	bne	255dc <__flatcc_fb_gen_c_json_printer@@Base+0x13f4>
   25510:	mov	r0, #0
   25514:	b	25558 <__flatcc_fb_gen_c_json_printer@@Base+0x1370>
   25518:	mov	r3, #1
   2551c:	mov	r2, r3
   25520:	mov	r1, r3
   25524:	mov	r0, r4
   25528:	bl	368e4 <flatcc_builder_table_add@@Base>
   2552c:	cmp	r0, #0
   25530:	strbne	r5, [r0]
   25534:	bne	255e4 <__flatcc_fb_gen_c_json_printer@@Base+0x13fc>
   25538:	mov	r0, #0
   2553c:	b	25558 <__flatcc_fb_gen_c_json_printer@@Base+0x1370>
   25540:	ldr	r3, [pc, #340]	; 2569c <__flatcc_fb_gen_c_json_printer@@Base+0x14b4>
   25544:	mov	r2, #23
   25548:	ldr	r1, [pc, #336]	; 256a0 <__flatcc_fb_gen_c_json_printer@@Base+0x14b8>
   2554c:	ldr	r0, [pc, #336]	; 256a4 <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
   25550:	bl	14038 <__assert_fail@plt>
   25554:	mov	r0, #0
   25558:	pop	{r4, r5, r6, r7, r8, lr}
   2555c:	add	sp, sp, #8
   25560:	bx	lr
   25564:	mov	r0, #0
   25568:	b	25558 <__flatcc_fb_gen_c_json_printer@@Base+0x1370>
   2556c:	mov	r5, #13
   25570:	mov	r3, #14
   25574:	mvn	r7, #0
   25578:	mov	r6, #0
   2557c:	cmp	r3, #0
   25580:	beq	25598 <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   25584:	cmp	r3, #14
   25588:	cmpeq	r5, #0
   2558c:	moveq	r5, r6
   25590:	moveq	r6, r3
   25594:	bne	254dc <__flatcc_fb_gen_c_json_printer@@Base+0x12f4>
   25598:	mov	r1, #3
   2559c:	mov	r0, r4
   255a0:	bl	34ee8 <flatcc_builder_start_table@@Base>
   255a4:	cmp	r0, #0
   255a8:	bne	25554 <__flatcc_fb_gen_c_json_printer@@Base+0x136c>
   255ac:	cmn	r7, #1
   255b0:	beq	255d4 <__flatcc_fb_gen_c_json_printer@@Base+0x13ec>
   255b4:	mov	r3, #4
   255b8:	mov	r2, r3
   255bc:	mov	r1, #2
   255c0:	mov	r0, r4
   255c4:	bl	368e4 <flatcc_builder_table_add@@Base>
   255c8:	cmp	r0, #0
   255cc:	strne	r7, [r0]
   255d0:	beq	25564 <__flatcc_fb_gen_c_json_printer@@Base+0x137c>
   255d4:	cmp	r6, #0
   255d8:	bne	254f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1308>
   255dc:	cmp	r5, #0
   255e0:	bne	25518 <__flatcc_fb_gen_c_json_printer@@Base+0x1330>
   255e4:	mov	r2, #0
   255e8:	ldr	r1, [pc, #184]	; 256a8 <__flatcc_fb_gen_c_json_printer@@Base+0x14c0>
   255ec:	mov	r0, r4
   255f0:	bl	3588c <flatcc_builder_check_required@@Base>
   255f4:	cmp	r0, #0
   255f8:	beq	25540 <__flatcc_fb_gen_c_json_printer@@Base+0x1358>
   255fc:	mov	r0, r4
   25600:	bl	35938 <flatcc_builder_end_table@@Base>
   25604:	b	25558 <__flatcc_fb_gen_c_json_printer@@Base+0x1370>
   25608:	mov	r5, #15
   2560c:	mov	r3, #14
   25610:	b	25578 <__flatcc_fb_gen_c_json_printer@@Base+0x1390>
   25614:	mov	r5, #0
   25618:	mov	r3, #16
   2561c:	b	25578 <__flatcc_fb_gen_c_json_printer@@Base+0x1390>
   25620:	sub	r2, r2, #1
   25624:	cmp	r2, #10
   25628:	ldrls	pc, [pc, r2, lsl #2]
   2562c:	b	254bc <__flatcc_fb_gen_c_json_printer@@Base+0x12d4>
   25630:	andeq	r5, r2, r8, lsr r3
   25634:	andeq	r5, r2, ip, asr r3
   25638:	andeq	r5, r2, r0, lsl #7
   2563c:	andeq	r5, r2, r4, lsr #7
   25640:	andeq	r5, r2, r8, asr #7
   25644:	andeq	r5, r2, ip, ror #7
   25648:	andeq	r5, r2, r0, lsl r4
   2564c:	andeq	r5, r2, r4, lsr r4
   25650:	andeq	r5, r2, r8, asr r4
   25654:	andeq	r5, r2, ip, ror r4
   25658:	andeq	r5, r2, r8, lsr #9
   2565c:	mvn	r7, #0
   25660:	sub	r2, r2, #1
   25664:	cmp	r2, #10
   25668:	ldrls	pc, [pc, r2, lsl #2]
   2566c:	b	254e4 <__flatcc_fb_gen_c_json_printer@@Base+0x12fc>
   25670:	andeq	r5, r2, r4, asr #6
   25674:	andeq	r5, r2, r8, ror #6
   25678:	andeq	r5, r2, ip, lsl #7
   2567c:			; <UNDEFINED> instruction: 0x000253b0
   25680:	ldrdeq	r5, [r2], -r4
   25684:	strdeq	r5, [r2], -r8
   25688:	andeq	r5, r2, ip, lsl r4
   2568c:	andeq	r5, r2, r0, asr #8
   25690:	andeq	r5, r2, r4, ror #8
   25694:	andeq	r5, r2, r8, lsl #9
   25698:			; <UNDEFINED> instruction: 0x000254b4
   2569c:	andeq	r1, r5, r4, ror #25
   256a0:	andeq	r1, r5, r8, ror lr
   256a4:	ldrdeq	r1, [r5], -r8
   256a8:	strdeq	r1, [r5], -r8
   256ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   256b0:	vpush	{d8-d9}
   256b4:	sub	sp, sp, #108	; 0x6c
   256b8:	mov	r9, r0
   256bc:	mov	r6, r1
   256c0:	mov	r5, r2
   256c4:	str	r2, [sp, #52]	; 0x34
   256c8:	ldr	r4, [r1, #184]	; 0xb8
   256cc:	ldr	r7, [r2, #60]	; 0x3c
   256d0:	mov	r2, #44	; 0x2c
   256d4:	mov	r1, #0
   256d8:	add	r0, sp, #60	; 0x3c
   256dc:	bl	13f9c <memset@plt>
   256e0:	str	r4, [sp, #60]	; 0x3c
   256e4:	str	r5, [sp, #100]	; 0x64
   256e8:	add	r2, sp, #60	; 0x3c
   256ec:	ldr	r1, [pc, #1316]	; 25c18 <__flatcc_fb_gen_c_json_printer@@Base+0x1a30>
   256f0:	mov	r0, r7
   256f4:	bl	28808 <fb_scope_table_visit@@Base>
   256f8:	ldr	r8, [sp, #64]	; 0x40
   256fc:	mov	r1, #8
   25700:	mov	r0, r8
   25704:	bl	13ea0 <calloc@plt>
   25708:	mov	r4, r0
   2570c:	str	r0, [sp, #76]	; 0x4c
   25710:	ldr	sl, [sp, #68]	; 0x44
   25714:	mov	r1, #8
   25718:	mov	r0, sl
   2571c:	bl	13ea0 <calloc@plt>
   25720:	mov	r5, r0
   25724:	str	r0, [sp, #80]	; 0x50
   25728:	ldr	fp, [sp, #72]	; 0x48
   2572c:	mov	r0, fp
   25730:	bl	13f3c <malloc@plt>
   25734:	str	r0, [sp, #84]	; 0x54
   25738:	str	r4, [sp, #88]	; 0x58
   2573c:	str	r5, [sp, #92]	; 0x5c
   25740:	str	r0, [sp, #96]	; 0x60
   25744:	clz	r4, r4
   25748:	lsr	r4, r4, #5
   2574c:	cmp	r8, #0
   25750:	movle	r4, #0
   25754:	cmp	r4, #0
   25758:	bne	25878 <__flatcc_fb_gen_c_json_printer@@Base+0x1690>
   2575c:	clz	r5, r5
   25760:	lsr	r5, r5, #5
   25764:	cmp	sl, #0
   25768:	movle	r5, #0
   2576c:	cmp	r5, #0
   25770:	bne	25878 <__flatcc_fb_gen_c_json_printer@@Base+0x1690>
   25774:	clz	r3, r0
   25778:	lsr	r3, r3, #5
   2577c:	cmp	fp, #0
   25780:	moveq	r3, #0
   25784:	str	r3, [sp, #24]
   25788:	cmp	r3, #0
   2578c:	bne	25878 <__flatcc_fb_gen_c_json_printer@@Base+0x1690>
   25790:	add	r2, sp, #60	; 0x3c
   25794:	ldr	r1, [pc, #1152]	; 25c1c <__flatcc_fb_gen_c_json_printer@@Base+0x1a34>
   25798:	mov	r0, r7
   2579c:	bl	28808 <fb_scope_table_visit@@Base>
   257a0:	ldr	r1, [sp, #64]	; 0x40
   257a4:	ldr	r0, [sp, #76]	; 0x4c
   257a8:	bl	24938 <__flatcc_fb_gen_c_json_printer@@Base+0x750>
   257ac:	ldr	r1, [sp, #68]	; 0x44
   257b0:	ldr	r0, [sp, #80]	; 0x50
   257b4:	bl	24938 <__flatcc_fb_gen_c_json_printer@@Base+0x750>
   257b8:	ldr	r0, [sp, #64]	; 0x40
   257bc:	cmp	r0, #0
   257c0:	ble	25898 <__flatcc_fb_gen_c_json_printer@@Base+0x16b0>
   257c4:	lsl	r0, r0, #2
   257c8:	bl	13f3c <malloc@plt>
   257cc:	subs	r3, r0, #0
   257d0:	str	r3, [sp, #28]
   257d4:	beq	25888 <__flatcc_fb_gen_c_json_printer@@Base+0x16a0>
   257d8:	ldr	r3, [r6, #188]	; 0xbc
   257dc:	cmp	r3, #0
   257e0:	beq	258a4 <__flatcc_fb_gen_c_json_printer@@Base+0x16bc>
   257e4:	mov	r3, #2
   257e8:	mov	r2, #0
   257ec:	ldr	r1, [pc, #1068]	; 25c20 <__flatcc_fb_gen_c_json_printer@@Base+0x1a38>
   257f0:	mov	r0, r9
   257f4:	bl	340bc <flatcc_builder_start_buffer@@Base>
   257f8:	cmp	r0, #0
   257fc:	bne	2580c <__flatcc_fb_gen_c_json_printer@@Base+0x1624>
   25800:	mov	r1, #5
   25804:	mov	r0, r9
   25808:	bl	34ee8 <flatcc_builder_start_table@@Base>
   2580c:	ldr	r3, [sp, #52]	; 0x34
   25810:	ldrh	r3, [r3, #16]
   25814:	cmp	r3, #2
   25818:	beq	258d0 <__flatcc_fb_gen_c_json_printer@@Base+0x16e8>
   2581c:	ldr	r3, [sp, #52]	; 0x34
   25820:	ldrh	r3, [r3, #32]
   25824:	cmp	r3, #2
   25828:	beq	25904 <__flatcc_fb_gen_c_json_printer@@Base+0x171c>
   2582c:	ldr	r3, [sp, #76]	; 0x4c
   25830:	mov	r2, r3
   25834:	str	r3, [sp, #48]	; 0x30
   25838:	ldr	r3, [sp, #64]	; 0x40
   2583c:	str	r3, [sp, #44]	; 0x2c
   25840:	cmp	r3, #0
   25844:	ble	25fc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1de0>
   25848:	str	r2, [sp, #36]	; 0x24
   2584c:	ldr	r3, [sp, #28]
   25850:	sub	r3, r3, #4
   25854:	str	r3, [sp, #40]	; 0x28
   25858:	mov	r3, #0
   2585c:	str	r3, [sp, #32]
   25860:	ldr	r3, [pc, #992]	; 25c48 <__flatcc_fb_gen_c_json_printer@@Base+0x1a60>
   25864:	add	r3, r3, #128	; 0x80
   25868:	str	r3, [sp, #12]
   2586c:	vldr	d9, [pc, #924]	; 25c10 <__flatcc_fb_gen_c_json_printer@@Base+0x1a28>
   25870:	str	r9, [sp, #8]
   25874:	b	25ee0 <__flatcc_fb_gen_c_json_printer@@Base+0x1cf8>
   25878:	add	r0, sp, #60	; 0x3c
   2587c:	bl	24688 <__flatcc_fb_gen_c_json_printer@@Base+0x4a0>
   25880:	mvn	r0, #0
   25884:	b	26370 <__flatcc_fb_gen_c_json_printer@@Base+0x2188>
   25888:	add	r0, sp, #60	; 0x3c
   2588c:	bl	24688 <__flatcc_fb_gen_c_json_printer@@Base+0x4a0>
   25890:	mvn	r0, #0
   25894:	b	26370 <__flatcc_fb_gen_c_json_printer@@Base+0x2188>
   25898:	mov	r3, #0
   2589c:	str	r3, [sp, #28]
   258a0:	b	257d8 <__flatcc_fb_gen_c_json_printer@@Base+0x15f0>
   258a4:	mov	r3, #0
   258a8:	mov	r2, r3
   258ac:	ldr	r1, [pc, #876]	; 25c20 <__flatcc_fb_gen_c_json_printer@@Base+0x1a38>
   258b0:	mov	r0, r9
   258b4:	bl	340bc <flatcc_builder_start_buffer@@Base>
   258b8:	cmp	r0, #0
   258bc:	bne	2580c <__flatcc_fb_gen_c_json_printer@@Base+0x1624>
   258c0:	mov	r1, #5
   258c4:	mov	r0, r9
   258c8:	bl	34ee8 <flatcc_builder_start_table@@Base>
   258cc:	b	2580c <__flatcc_fb_gen_c_json_printer@@Base+0x1624>
   258d0:	ldr	r3, [sp, #52]	; 0x34
   258d4:	ldr	r2, [r3, #12]
   258d8:	ldr	r1, [r3, #8]
   258dc:	mov	r0, r9
   258e0:	bl	36658 <flatcc_builder_create_string@@Base>
   258e4:	subs	r4, r0, #0
   258e8:	beq	2581c <__flatcc_fb_gen_c_json_printer@@Base+0x1634>
   258ec:	mov	r1, #2
   258f0:	mov	r0, r9
   258f4:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   258f8:	cmp	r0, #0
   258fc:	strne	r4, [r0]
   25900:	b	2581c <__flatcc_fb_gen_c_json_printer@@Base+0x1634>
   25904:	ldr	r3, [sp, #52]	; 0x34
   25908:	ldr	r2, [r3, #28]
   2590c:	ldr	r1, [r3, #24]
   25910:	mov	r0, r9
   25914:	bl	36658 <flatcc_builder_create_string@@Base>
   25918:	subs	r4, r0, #0
   2591c:	beq	2582c <__flatcc_fb_gen_c_json_printer@@Base+0x1644>
   25920:	mov	r1, #3
   25924:	mov	r0, r9
   25928:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   2592c:	cmp	r0, #0
   25930:	strne	r4, [r0]
   25934:	b	2582c <__flatcc_fb_gen_c_json_printer@@Base+0x1644>
   25938:	ldr	r3, [r4, #16]
   2593c:	ldrh	r3, [r3, #8]
   25940:	cmp	r3, #4
   25944:	bne	25d28 <__flatcc_fb_gen_c_json_printer@@Base+0x1b40>
   25948:	mov	r1, #9
   2594c:	ldr	r8, [sp, #8]
   25950:	mov	r0, r8
   25954:	bl	34ee8 <flatcc_builder_start_table@@Base>
   25958:	mov	r0, r8
   2595c:	bl	34d3c <flatcc_builder_start_string@@Base>
   25960:	ldr	r3, [r4, #4]
   25964:	ldr	r2, [r3, #4]
   25968:	ldr	r1, [r3]
   2596c:	mov	r0, r8
   25970:	bl	34954 <flatcc_builder_append_string@@Base>
   25974:	mov	r2, #5
   25978:	ldr	r1, [pc, #676]	; 25c24 <__flatcc_fb_gen_c_json_printer@@Base+0x1a3c>
   2597c:	mov	r0, r8
   25980:	bl	34954 <flatcc_builder_append_string@@Base>
   25984:	str	r8, [sp, #8]
   25988:	mov	r0, r8
   2598c:	bl	367d0 <flatcc_builder_end_string@@Base>
   25990:	subs	r8, r0, #0
   25994:	beq	259ac <__flatcc_fb_gen_c_json_printer@@Base+0x17c4>
   25998:	mov	r1, #0
   2599c:	ldr	r0, [sp, #8]
   259a0:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   259a4:	cmp	r0, #0
   259a8:	strne	r8, [r0]
   259ac:	mov	r1, #3
   259b0:	ldr	r8, [sp, #8]
   259b4:	mov	r0, r8
   259b8:	bl	34ee8 <flatcc_builder_start_table@@Base>
   259bc:	cmp	r0, #0
   259c0:	bne	25a28 <__flatcc_fb_gen_c_json_printer@@Base+0x1840>
   259c4:	mov	r3, #1
   259c8:	mov	r2, r3
   259cc:	mov	r1, #0
   259d0:	mov	r0, r8
   259d4:	bl	368e4 <flatcc_builder_table_add@@Base>
   259d8:	cmp	r0, #0
   259dc:	beq	25a28 <__flatcc_fb_gen_c_json_printer@@Base+0x1840>
   259e0:	mov	r3, #1
   259e4:	strb	r3, [r0]
   259e8:	mov	r2, #0
   259ec:	ldr	r3, [pc, #596]	; 25c48 <__flatcc_fb_gen_c_json_printer@@Base+0x1a60>
   259f0:	add	r1, r3, #124	; 0x7c
   259f4:	mov	r0, r8
   259f8:	bl	3588c <flatcc_builder_check_required@@Base>
   259fc:	cmp	r0, #0
   25a00:	beq	25a94 <__flatcc_fb_gen_c_json_printer@@Base+0x18ac>
   25a04:	ldr	r0, [sp, #8]
   25a08:	bl	35938 <flatcc_builder_end_table@@Base>
   25a0c:	subs	r8, r0, #0
   25a10:	beq	25a28 <__flatcc_fb_gen_c_json_printer@@Base+0x1840>
   25a14:	mov	r1, #1
   25a18:	ldr	r0, [sp, #8]
   25a1c:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   25a20:	cmp	r0, #0
   25a24:	strne	r8, [r0]
   25a28:	ldrh	r8, [r4, #96]	; 0x60
   25a2c:	add	r8, r8, #1
   25a30:	lsl	r8, r8, #1
   25a34:	uxth	r8, r8
   25a38:	cmp	r8, #0
   25a3c:	bne	25aa8 <__flatcc_fb_gen_c_json_printer@@Base+0x18c0>
   25a40:	ldrh	r8, [r4, #96]	; 0x60
   25a44:	sub	r8, r8, #1
   25a48:	uxth	r8, r8
   25a4c:	cmp	r8, #0
   25a50:	bne	25ac8 <__flatcc_fb_gen_c_json_printer@@Base+0x18e0>
   25a54:	cmp	sl, #0
   25a58:	bne	25ae8 <__flatcc_fb_gen_c_json_printer@@Base+0x1900>
   25a5c:	mov	r2, #2
   25a60:	ldr	r1, [sp, #12]
   25a64:	ldr	r0, [sp, #8]
   25a68:	bl	3588c <flatcc_builder_check_required@@Base>
   25a6c:	cmp	r0, #0
   25a70:	beq	25b08 <__flatcc_fb_gen_c_json_printer@@Base+0x1920>
   25a74:	ldr	r8, [sp, #8]
   25a78:	mov	r0, r8
   25a7c:	bl	35938 <flatcc_builder_end_table@@Base>
   25a80:	subs	r1, r0, #0
   25a84:	beq	25d28 <__flatcc_fb_gen_c_json_printer@@Base+0x1b40>
   25a88:	mov	r0, r8
   25a8c:	bl	3472c <flatcc_builder_offset_vector_push@@Base>
   25a90:	b	25d28 <__flatcc_fb_gen_c_json_printer@@Base+0x1b40>
   25a94:	ldr	r3, [pc, #396]	; 25c28 <__flatcc_fb_gen_c_json_printer@@Base+0x1a40>
   25a98:	mov	r2, #23
   25a9c:	ldr	r1, [pc, #440]	; 25c5c <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   25aa0:	ldr	r0, [pc, #388]	; 25c2c <__flatcc_fb_gen_c_json_printer@@Base+0x1a44>
   25aa4:	bl	14038 <__assert_fail@plt>
   25aa8:	mov	r3, #2
   25aac:	mov	r2, r3
   25ab0:	mov	r1, #3
   25ab4:	ldr	r0, [sp, #8]
   25ab8:	bl	368e4 <flatcc_builder_table_add@@Base>
   25abc:	cmp	r0, #0
   25ac0:	strhne	r8, [r0]
   25ac4:	b	25a40 <__flatcc_fb_gen_c_json_printer@@Base+0x1858>
   25ac8:	mov	r3, #2
   25acc:	mov	r2, r3
   25ad0:	mov	r1, r3
   25ad4:	ldr	r0, [sp, #8]
   25ad8:	bl	368e4 <flatcc_builder_table_add@@Base>
   25adc:	cmp	r0, #0
   25ae0:	strhne	r8, [r0]
   25ae4:	b	25a54 <__flatcc_fb_gen_c_json_printer@@Base+0x186c>
   25ae8:	mov	r3, #1
   25aec:	mov	r2, r3
   25af0:	mov	r1, #6
   25af4:	ldr	r0, [sp, #8]
   25af8:	bl	368e4 <flatcc_builder_table_add@@Base>
   25afc:	cmp	r0, #0
   25b00:	strbne	fp, [r0]
   25b04:	b	25a5c <__flatcc_fb_gen_c_json_printer@@Base+0x1874>
   25b08:	ldr	r3, [pc, #288]	; 25c30 <__flatcc_fb_gen_c_json_printer@@Base+0x1a48>
   25b0c:	mov	r2, #29
   25b10:	ldr	r1, [pc, #324]	; 25c5c <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   25b14:	ldr	r0, [pc, #280]	; 25c34 <__flatcc_fb_gen_c_json_printer@@Base+0x1a4c>
   25b18:	bl	14038 <__assert_fail@plt>
   25b1c:	mov	r1, #1
   25b20:	ldr	r0, [sp, #8]
   25b24:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   25b28:	cmp	r0, #0
   25b2c:	strne	r8, [r0]
   25b30:	b	25d90 <__flatcc_fb_gen_c_json_printer@@Base+0x1ba8>
   25b34:	ldrh	r3, [r4, #56]	; 0x38
   25b38:	sub	r3, r3, #3
   25b3c:	cmp	r3, #3
   25b40:	ldrls	pc, [pc, r3, lsl #2]
   25b44:	b	25c08 <__flatcc_fb_gen_c_json_printer@@Base+0x1a20>
   25b48:	andeq	r5, r2, ip, lsr #23
   25b4c:	muleq	r2, r0, fp
   25b50:	andeq	r5, r2, r8, asr fp
   25b54:	muleq	r2, ip, fp
   25b58:	ldrd	r2, [r4, #48]	; 0x30
   25b5c:	strd	r2, [sp, #16]
   25b60:	ldrd	r2, [sp, #16]
   25b64:	orrs	r3, r2, r3
   25b68:	beq	25bd8 <__flatcc_fb_gen_c_json_printer@@Base+0x19f0>
   25b6c:	mov	r3, #8
   25b70:	mov	r2, r3
   25b74:	mov	r1, #4
   25b78:	ldr	r0, [sp, #8]
   25b7c:	bl	368e4 <flatcc_builder_table_add@@Base>
   25b80:	cmp	r0, #0
   25b84:	ldrdne	r2, [sp, #16]
   25b88:	strdne	r2, [r0]
   25b8c:	b	25bd8 <__flatcc_fb_gen_c_json_printer@@Base+0x19f0>
   25b90:	ldrd	r2, [r4, #48]	; 0x30
   25b94:	strd	r2, [sp, #16]
   25b98:	b	25b60 <__flatcc_fb_gen_c_json_printer@@Base+0x1978>
   25b9c:	ldrb	r2, [r4, #48]	; 0x30
   25ba0:	mov	r3, #0
   25ba4:	strd	r2, [sp, #16]
   25ba8:	b	25b60 <__flatcc_fb_gen_c_json_printer@@Base+0x1978>
   25bac:	vldr	d8, [r4, #48]	; 0x30
   25bb0:	vcmp.f64	d8, d9
   25bb4:	vmrs	APSR_nzcv, fpscr
   25bb8:	beq	25bd8 <__flatcc_fb_gen_c_json_printer@@Base+0x19f0>
   25bbc:	mov	r3, #8
   25bc0:	mov	r2, r3
   25bc4:	mov	r1, #5
   25bc8:	ldr	r0, [sp, #8]
   25bcc:	bl	368e4 <flatcc_builder_table_add@@Base>
   25bd0:	cmp	r0, #0
   25bd4:	vstrne	d8, [r0]
   25bd8:	ldrh	r8, [r4, #96]	; 0x60
   25bdc:	cmp	r8, #0
   25be0:	moveq	r8, #4
   25be4:	bne	25c64 <__flatcc_fb_gen_c_json_printer@@Base+0x1a7c>
   25be8:	mov	r3, #2
   25bec:	mov	r2, r3
   25bf0:	mov	r1, #3
   25bf4:	ldr	r0, [sp, #8]
   25bf8:	bl	368e4 <flatcc_builder_table_add@@Base>
   25bfc:	cmp	r0, #0
   25c00:	strhne	r8, [r0]
   25c04:	b	25c98 <__flatcc_fb_gen_c_json_printer@@Base+0x1ab0>
   25c08:	vmov.f64	d8, d9
   25c0c:	b	25bb0 <__flatcc_fb_gen_c_json_printer@@Base+0x19c8>
	...
   25c18:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   25c1c:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   25c20:	andeq	r1, r5, r8, ror #30
   25c24:	andeq	r2, r5, r8, asr #24
   25c28:	andeq	r1, r5, r4, ror #25
   25c2c:	ldrdeq	r1, [r5], -r8
   25c30:	andeq	r1, r5, r4, lsl #26
   25c34:	andeq	r1, r5, r0, ror pc
   25c38:	andeq	r1, r5, r4, lsr #26
   25c3c:	andeq	r2, r5, r0
   25c40:	andeq	r1, r5, r0, asr #26
   25c44:	muleq	r5, r4, r0
   25c48:	andeq	r1, r5, ip, ror ip
   25c4c:	andeq	r1, r5, r0, ror #26
   25c50:	andeq	r2, r5, ip, lsr #2
   25c54:	andeq	r1, r5, r4, ror sp
   25c58:	andeq	r1, r5, ip, ror sp
   25c5c:	andeq	r1, r5, r8, ror lr
   25c60:			; <UNDEFINED> instruction: 0x000521bc
   25c64:	mov	r3, #2
   25c68:	mov	r2, r3
   25c6c:	mov	r1, r3
   25c70:	ldr	r0, [sp, #8]
   25c74:	bl	368e4 <flatcc_builder_table_add@@Base>
   25c78:	cmp	r0, #0
   25c7c:	strhne	r8, [r0]
   25c80:	ldrh	r8, [r4, #96]	; 0x60
   25c84:	add	r8, r8, #2
   25c88:	lsl	r8, r8, #1
   25c8c:	uxth	r8, r8
   25c90:	cmp	r8, #0
   25c94:	bne	25be8 <__flatcc_fb_gen_c_json_printer@@Base+0x1a00>
   25c98:	cmp	r5, #0
   25c9c:	bne	25dd0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be8>
   25ca0:	tst	r6, #256	; 0x100
   25ca4:	bne	25df4 <__flatcc_fb_gen_c_json_printer@@Base+0x1c0c>
   25ca8:	cmp	sl, #0
   25cac:	bne	25e18 <__flatcc_fb_gen_c_json_printer@@Base+0x1c30>
   25cb0:	mov	r2, #2
   25cb4:	ldr	r1, [sp, #12]
   25cb8:	ldr	r0, [sp, #8]
   25cbc:	bl	3588c <flatcc_builder_check_required@@Base>
   25cc0:	cmp	r0, #0
   25cc4:	beq	25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x1c50>
   25cc8:	ldr	r6, [sp, #8]
   25ccc:	mov	r0, r6
   25cd0:	bl	35938 <flatcc_builder_end_table@@Base>
   25cd4:	subs	r1, r0, #0
   25cd8:	beq	25ce4 <__flatcc_fb_gen_c_json_printer@@Base+0x1afc>
   25cdc:	mov	r0, r6
   25ce0:	bl	3472c <flatcc_builder_offset_vector_push@@Base>
   25ce4:	orr	r7, r5, r7
   25ce8:	ldr	r4, [r4]
   25cec:	cmp	r4, #0
   25cf0:	beq	25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1c64>
   25cf4:	cmp	r7, #0
   25cf8:	ldrheq	r5, [r4, #72]	; 0x48
   25cfc:	lsreq	r5, r5, #7
   25d00:	andeq	r5, r5, #1
   25d04:	ldrne	r5, [sp, #24]
   25d08:	uxtb	r5, r5
   25d0c:	ldrh	r6, [r4, #72]	; 0x48
   25d10:	ands	sl, r6, #4
   25d14:	movne	fp, #1
   25d18:	moveq	fp, #0
   25d1c:	ldrh	r3, [r4, #24]
   25d20:	cmp	r3, #14
   25d24:	beq	25938 <__flatcc_fb_gen_c_json_printer@@Base+0x1750>
   25d28:	mov	r1, #9
   25d2c:	ldr	r8, [sp, #8]
   25d30:	mov	r0, r8
   25d34:	bl	34ee8 <flatcc_builder_start_table@@Base>
   25d38:	ldr	r3, [r4, #4]
   25d3c:	ldr	r2, [r3, #4]
   25d40:	ldr	r1, [r3]
   25d44:	str	r8, [sp, #8]
   25d48:	mov	r0, r8
   25d4c:	bl	36658 <flatcc_builder_create_string@@Base>
   25d50:	subs	r8, r0, #0
   25d54:	beq	25d6c <__flatcc_fb_gen_c_json_printer@@Base+0x1b84>
   25d58:	mov	r1, #0
   25d5c:	ldr	r0, [sp, #8]
   25d60:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   25d64:	cmp	r0, #0
   25d68:	strne	r8, [r0]
   25d6c:	add	r3, r4, #24
   25d70:	ldm	r3, {r0, r1}
   25d74:	stm	sp, {r0, r1}
   25d78:	add	r3, r4, #16
   25d7c:	ldm	r3, {r2, r3}
   25d80:	ldr	r0, [sp, #8]
   25d84:	bl	25200 <__flatcc_fb_gen_c_json_printer@@Base+0x1018>
   25d88:	subs	r8, r0, #0
   25d8c:	bne	25b1c <__flatcc_fb_gen_c_json_printer@@Base+0x1934>
   25d90:	ldrh	r3, [r9, #8]
   25d94:	cmp	r3, #0
   25d98:	beq	25b34 <__flatcc_fb_gen_c_json_printer@@Base+0x194c>
   25d9c:	cmp	r3, #1
   25da0:	bne	25ca8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ac0>
   25da4:	ldrh	r6, [r4, #80]	; 0x50
   25da8:	cmp	r6, #0
   25dac:	beq	25ca8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ac0>
   25db0:	mov	r3, #2
   25db4:	mov	r2, r3
   25db8:	mov	r1, #3
   25dbc:	ldr	r0, [sp, #8]
   25dc0:	bl	368e4 <flatcc_builder_table_add@@Base>
   25dc4:	cmp	r0, #0
   25dc8:	strhne	r6, [r0]
   25dcc:	b	25ca8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ac0>
   25dd0:	mov	r3, #1
   25dd4:	mov	r2, r3
   25dd8:	mov	r1, #8
   25ddc:	ldr	r0, [sp, #8]
   25de0:	bl	368e4 <flatcc_builder_table_add@@Base>
   25de4:	cmp	r0, #0
   25de8:	movne	r3, #1
   25dec:	strbne	r3, [r0]
   25df0:	b	25ca0 <__flatcc_fb_gen_c_json_printer@@Base+0x1ab8>
   25df4:	mov	r3, #1
   25df8:	mov	r2, r3
   25dfc:	mov	r1, #7
   25e00:	ldr	r0, [sp, #8]
   25e04:	bl	368e4 <flatcc_builder_table_add@@Base>
   25e08:	cmp	r0, #0
   25e0c:	movne	r3, #1
   25e10:	strbne	r3, [r0]
   25e14:	b	25ca8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ac0>
   25e18:	mov	r3, #1
   25e1c:	mov	r2, r3
   25e20:	mov	r1, #6
   25e24:	ldr	r0, [sp, #8]
   25e28:	bl	368e4 <flatcc_builder_table_add@@Base>
   25e2c:	cmp	r0, #0
   25e30:	strbne	fp, [r0]
   25e34:	b	25cb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1ac8>
   25e38:	ldr	r3, [pc, #-528]	; 25c30 <__flatcc_fb_gen_c_json_printer@@Base+0x1a48>
   25e3c:	mov	r2, #29
   25e40:	ldr	r1, [pc, #-492]	; 25c5c <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   25e44:	ldr	r0, [pc, #-536]	; 25c34 <__flatcc_fb_gen_c_json_printer@@Base+0x1a4c>
   25e48:	bl	14038 <__assert_fail@plt>
   25e4c:	ldr	r5, [sp, #8]
   25e50:	mov	r0, r5
   25e54:	bl	35d60 <flatcc_builder_end_offset_vector@@Base>
   25e58:	subs	r4, r0, #0
   25e5c:	beq	25f44 <__flatcc_fb_gen_c_json_printer@@Base+0x1d5c>
   25e60:	mov	r1, #1
   25e64:	mov	r0, r5
   25e68:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   25e6c:	cmp	r0, #0
   25e70:	strne	r4, [r0]
   25e74:	ldrh	r4, [r9, #8]
   25e78:	cmp	r4, #1
   25e7c:	beq	263a8 <__flatcc_fb_gen_c_json_printer@@Base+0x21c0>
   25e80:	ldrh	r4, [r9, #104]	; 0x68
   25e84:	cmp	r4, #0
   25e88:	bne	25f90 <__flatcc_fb_gen_c_json_printer@@Base+0x1da8>
   25e8c:	mov	r2, #2
   25e90:	ldr	r3, [pc, #-592]	; 25c48 <__flatcc_fb_gen_c_json_printer@@Base+0x1a60>
   25e94:	add	r1, r3, #160	; 0xa0
   25e98:	ldr	r0, [sp, #8]
   25e9c:	bl	3588c <flatcc_builder_check_required@@Base>
   25ea0:	cmp	r0, #0
   25ea4:	beq	25fb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1dc8>
   25ea8:	ldr	r0, [sp, #8]
   25eac:	bl	35938 <flatcc_builder_end_table@@Base>
   25eb0:	ldr	r3, [sp, #40]	; 0x28
   25eb4:	str	r0, [r3, #4]!
   25eb8:	str	r3, [sp, #40]	; 0x28
   25ebc:	ldr	r3, [sp, #32]
   25ec0:	add	r3, r3, #1
   25ec4:	str	r3, [sp, #32]
   25ec8:	ldr	r2, [sp, #36]	; 0x24
   25ecc:	add	r2, r2, #8
   25ed0:	str	r2, [sp, #36]	; 0x24
   25ed4:	ldr	r2, [sp, #44]	; 0x2c
   25ed8:	cmp	r2, r3
   25edc:	beq	25fc4 <__flatcc_fb_gen_c_json_printer@@Base+0x1ddc>
   25ee0:	ldr	r3, [sp, #48]	; 0x30
   25ee4:	ldr	r2, [sp, #32]
   25ee8:	ldr	r9, [r3, r2, lsl #3]
   25eec:	mov	r1, #5
   25ef0:	ldr	r5, [sp, #8]
   25ef4:	mov	r0, r5
   25ef8:	bl	34ee8 <flatcc_builder_start_table@@Base>
   25efc:	ldr	r3, [sp, #36]	; 0x24
   25f00:	ldr	r1, [r3, #4]
   25f04:	mov	r0, r5
   25f08:	bl	36770 <flatcc_builder_create_string_str@@Base>
   25f0c:	subs	r4, r0, #0
   25f10:	beq	25f28 <__flatcc_fb_gen_c_json_printer@@Base+0x1d40>
   25f14:	mov	r1, #0
   25f18:	mov	r0, r5
   25f1c:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   25f20:	cmp	r0, #0
   25f24:	strne	r4, [r0]
   25f28:	ldr	r0, [sp, #8]
   25f2c:	bl	34cc4 <flatcc_builder_start_offset_vector@@Base>
   25f30:	ldr	r4, [r9, #20]
   25f34:	cmp	r4, #0
   25f38:	beq	25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1c64>
   25f3c:	mov	r7, #0
   25f40:	b	25cf4 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0c>
   25f44:	ldrh	r4, [r9, #8]
   25f48:	cmp	r4, #1
   25f4c:	ldrne	r5, [sp, #24]
   25f50:	beq	25f7c <__flatcc_fb_gen_c_json_printer@@Base+0x1d94>
   25f54:	cmp	r4, #1
   25f58:	bne	25e80 <__flatcc_fb_gen_c_json_printer@@Base+0x1c98>
   25f5c:	mov	r3, #1
   25f60:	mov	r2, r3
   25f64:	mov	r1, #2
   25f68:	ldr	r0, [sp, #8]
   25f6c:	bl	368e4 <flatcc_builder_table_add@@Base>
   25f70:	cmp	r0, #0
   25f74:	strbne	r5, [r0]
   25f78:	b	25e80 <__flatcc_fb_gen_c_json_printer@@Base+0x1c98>
   25f7c:	ldr	r5, [r9, #112]	; 0x70
   25f80:	cmp	r5, #0
   25f84:	moveq	r5, #1
   25f88:	beq	25f54 <__flatcc_fb_gen_c_json_printer@@Base+0x1d6c>
   25f8c:	b	263b8 <__flatcc_fb_gen_c_json_printer@@Base+0x21d0>
   25f90:	mov	r3, #4
   25f94:	mov	r2, r3
   25f98:	mov	r1, #3
   25f9c:	ldr	r0, [sp, #8]
   25fa0:	bl	368e4 <flatcc_builder_table_add@@Base>
   25fa4:	cmp	r0, #0
   25fa8:	strne	r4, [r0]
   25fac:	b	25e8c <__flatcc_fb_gen_c_json_printer@@Base+0x1ca4>
   25fb0:	ldr	r3, [pc, #-896]	; 25c38 <__flatcc_fb_gen_c_json_printer@@Base+0x1a50>
   25fb4:	mov	r2, #31
   25fb8:	ldr	r1, [pc, #-868]	; 25c5c <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   25fbc:	ldr	r0, [pc, #-904]	; 25c3c <__flatcc_fb_gen_c_json_printer@@Base+0x1a54>
   25fc0:	bl	14038 <__assert_fail@plt>
   25fc4:	ldr	r9, [sp, #8]
   25fc8:	ldr	r2, [sp, #44]	; 0x2c
   25fcc:	ldr	r1, [sp, #28]
   25fd0:	mov	r0, r9
   25fd4:	bl	35e38 <flatcc_builder_create_offset_vector@@Base>
   25fd8:	subs	r4, r0, #0
   25fdc:	beq	25ff4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e0c>
   25fe0:	mov	r1, #0
   25fe4:	mov	r0, r9
   25fe8:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   25fec:	cmp	r0, #0
   25ff0:	strne	r4, [r0]
   25ff4:	ldr	r3, [sp, #80]	; 0x50
   25ff8:	mov	sl, r3
   25ffc:	str	r3, [sp, #12]
   26000:	ldr	r3, [sp, #68]	; 0x44
   26004:	mov	r4, r3
   26008:	str	r3, [sp, #16]
   2600c:	mov	r0, r9
   26010:	bl	34cc4 <flatcc_builder_start_offset_vector@@Base>
   26014:	cmp	r4, #0
   26018:	ble	262cc <__flatcc_fb_gen_c_json_printer@@Base+0x20e4>
   2601c:	mov	fp, #0
   26020:	ldr	r3, [pc, #-992]	; 25c48 <__flatcc_fb_gen_c_json_printer@@Base+0x1a60>
   26024:	add	r3, r3, #192	; 0xc0
   26028:	str	r3, [sp, #8]
   2602c:	b	26224 <__flatcc_fb_gen_c_json_printer@@Base+0x203c>
   26030:	mov	r1, #3
   26034:	mov	r0, r9
   26038:	bl	34ee8 <flatcc_builder_start_table@@Base>
   2603c:	ldr	r3, [r4, #4]
   26040:	ldr	r2, [r3, #4]
   26044:	ldr	r1, [r3]
   26048:	mov	r0, r9
   2604c:	bl	36658 <flatcc_builder_create_string@@Base>
   26050:	subs	r6, r0, #0
   26054:	beq	26074 <__flatcc_fb_gen_c_json_printer@@Base+0x1e8c>
   26058:	mov	r1, #0
   2605c:	mov	r0, r9
   26060:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   26064:	cmp	r0, #0
   26068:	beq	2607c <__flatcc_fb_gen_c_json_printer@@Base+0x1e94>
   2606c:	ldr	r3, [sp, #28]
   26070:	b	26114 <__flatcc_fb_gen_c_json_printer@@Base+0x1f2c>
   26074:	ldr	r3, [sp, #28]
   26078:	b	26118 <__flatcc_fb_gen_c_json_printer@@Base+0x1f30>
   2607c:	ldr	r3, [sp, #28]
   26080:	b	26118 <__flatcc_fb_gen_c_json_printer@@Base+0x1f30>
   26084:	ldrd	r6, [r4, #48]	; 0x30
   26088:	orrs	r3, r6, r7
   2608c:	bne	26158 <__flatcc_fb_gen_c_json_printer@@Base+0x1f70>
   26090:	mov	r2, #1
   26094:	ldr	r1, [sp, #8]
   26098:	mov	r0, r9
   2609c:	bl	3588c <flatcc_builder_check_required@@Base>
   260a0:	cmp	r0, #0
   260a4:	beq	26178 <__flatcc_fb_gen_c_json_printer@@Base+0x1f90>
   260a8:	mov	r0, r9
   260ac:	bl	35938 <flatcc_builder_end_table@@Base>
   260b0:	subs	r1, r0, #0
   260b4:	beq	260c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed8>
   260b8:	mov	r0, r9
   260bc:	bl	3472c <flatcc_builder_offset_vector_push@@Base>
   260c0:	ldr	r4, [r4]
   260c4:	cmp	r4, #0
   260c8:	beq	2618c <__flatcc_fb_gen_c_json_printer@@Base+0x1fa4>
   260cc:	cmp	r5, #4
   260d0:	beq	26030 <__flatcc_fb_gen_c_json_printer@@Base+0x1e48>
   260d4:	mov	r1, #3
   260d8:	mov	r0, r9
   260dc:	bl	34ee8 <flatcc_builder_start_table@@Base>
   260e0:	ldr	r3, [r4, #4]
   260e4:	ldr	r2, [r3, #4]
   260e8:	ldr	r1, [r3]
   260ec:	mov	r0, r9
   260f0:	bl	36658 <flatcc_builder_create_string@@Base>
   260f4:	subs	r6, r0, #0
   260f8:	beq	26084 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9c>
   260fc:	mov	r1, #0
   26100:	mov	r0, r9
   26104:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   26108:	cmp	r0, #0
   2610c:	movne	r3, #0
   26110:	beq	26084 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9c>
   26114:	str	r6, [r0]
   26118:	cmp	r3, #0
   2611c:	beq	26084 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9c>
   26120:	ldrh	r2, [r4, #24]
   26124:	cmp	r2, #14
   26128:	bne	26084 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9c>
   2612c:	ldr	r2, [r4, #16]
   26130:	ldr	r2, [r2, #124]	; 0x7c
   26134:	ldr	r6, [r3, r2, lsl #2]
   26138:	cmp	r6, #0
   2613c:	beq	26084 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9c>
   26140:	mov	r1, #2
   26144:	mov	r0, r9
   26148:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   2614c:	cmp	r0, #0
   26150:	strne	r6, [r0]
   26154:	b	26084 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9c>
   26158:	mov	r3, #8
   2615c:	mov	r2, r3
   26160:	mov	r1, #1
   26164:	mov	r0, r9
   26168:	bl	368e4 <flatcc_builder_table_add@@Base>
   2616c:	cmp	r0, #0
   26170:	strdne	r6, [r0]
   26174:	b	26090 <__flatcc_fb_gen_c_json_printer@@Base+0x1ea8>
   26178:	ldr	r3, [pc, #-1344]	; 25c40 <__flatcc_fb_gen_c_json_printer@@Base+0x1a58>
   2617c:	mov	r2, #25
   26180:	ldr	r1, [pc, #-1324]	; 25c5c <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   26184:	ldr	r0, [pc, #-1352]	; 25c44 <__flatcc_fb_gen_c_json_printer@@Base+0x1a5c>
   26188:	bl	14038 <__assert_fail@plt>
   2618c:	mov	r0, r9
   26190:	bl	35d60 <flatcc_builder_end_offset_vector@@Base>
   26194:	subs	r4, r0, #0
   26198:	beq	261b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1fc8>
   2619c:	mov	r1, #1
   261a0:	mov	r0, r9
   261a4:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   261a8:	cmp	r0, #0
   261ac:	strne	r4, [r0]
   261b0:	cmp	r5, #4
   261b4:	beq	2627c <__flatcc_fb_gen_c_json_printer@@Base+0x2094>
   261b8:	add	r3, r8, #48	; 0x30
   261bc:	ldm	r3, {r0, r1}
   261c0:	stm	sp, {r0, r1}
   261c4:	add	r8, r8, #40	; 0x28
   261c8:	ldm	r8, {r2, r3}
   261cc:	mov	r0, r9
   261d0:	bl	25200 <__flatcc_fb_gen_c_json_printer@@Base+0x1018>
   261d4:	subs	r4, r0, #0
   261d8:	bne	262a0 <__flatcc_fb_gen_c_json_printer@@Base+0x20b8>
   261dc:	mov	r2, #3
   261e0:	ldr	r3, [pc, #-1440]	; 25c48 <__flatcc_fb_gen_c_json_printer@@Base+0x1a60>
   261e4:	add	r1, r3, #220	; 0xdc
   261e8:	mov	r0, r9
   261ec:	bl	3588c <flatcc_builder_check_required@@Base>
   261f0:	cmp	r0, #0
   261f4:	beq	262b8 <__flatcc_fb_gen_c_json_printer@@Base+0x20d0>
   261f8:	mov	r0, r9
   261fc:	bl	35938 <flatcc_builder_end_table@@Base>
   26200:	subs	r1, r0, #0
   26204:	beq	26210 <__flatcc_fb_gen_c_json_printer@@Base+0x2028>
   26208:	mov	r0, r9
   2620c:	bl	3472c <flatcc_builder_offset_vector_push@@Base>
   26210:	add	fp, fp, #1
   26214:	add	sl, sl, #8
   26218:	ldr	r3, [sp, #16]
   2621c:	cmp	r3, fp
   26220:	beq	262cc <__flatcc_fb_gen_c_json_printer@@Base+0x20e4>
   26224:	ldr	r3, [sp, #12]
   26228:	ldr	r8, [r3, fp, lsl #3]
   2622c:	ldrh	r5, [r8, #8]
   26230:	mov	r1, #4
   26234:	mov	r0, r9
   26238:	bl	34ee8 <flatcc_builder_start_table@@Base>
   2623c:	ldr	r1, [sl, #4]
   26240:	mov	r0, r9
   26244:	bl	36770 <flatcc_builder_create_string_str@@Base>
   26248:	subs	r4, r0, #0
   2624c:	beq	26264 <__flatcc_fb_gen_c_json_printer@@Base+0x207c>
   26250:	mov	r1, #0
   26254:	mov	r0, r9
   26258:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   2625c:	cmp	r0, #0
   26260:	strne	r4, [r0]
   26264:	mov	r0, r9
   26268:	bl	34cc4 <flatcc_builder_start_offset_vector@@Base>
   2626c:	ldr	r4, [r8, #20]
   26270:	cmp	r4, #0
   26274:	bne	260cc <__flatcc_fb_gen_c_json_printer@@Base+0x1ee4>
   26278:	b	2618c <__flatcc_fb_gen_c_json_printer@@Base+0x1fa4>
   2627c:	mov	r3, #1
   26280:	mov	r2, r3
   26284:	mov	r1, #2
   26288:	mov	r0, r9
   2628c:	bl	368e4 <flatcc_builder_table_add@@Base>
   26290:	cmp	r0, #0
   26294:	movne	r3, #1
   26298:	strbne	r3, [r0]
   2629c:	b	261b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1fd0>
   262a0:	mov	r1, #3
   262a4:	mov	r0, r9
   262a8:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   262ac:	cmp	r0, #0
   262b0:	strne	r4, [r0]
   262b4:	b	261dc <__flatcc_fb_gen_c_json_printer@@Base+0x1ff4>
   262b8:	ldr	r3, [pc, #-1652]	; 25c4c <__flatcc_fb_gen_c_json_printer@@Base+0x1a64>
   262bc:	mov	r2, #27
   262c0:	ldr	r1, [pc, #-1644]	; 25c5c <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   262c4:	ldr	r0, [pc, #-1660]	; 25c50 <__flatcc_fb_gen_c_json_printer@@Base+0x1a68>
   262c8:	bl	14038 <__assert_fail@plt>
   262cc:	mov	r0, r9
   262d0:	bl	35d60 <flatcc_builder_end_offset_vector@@Base>
   262d4:	subs	r4, r0, #0
   262d8:	beq	262f0 <__flatcc_fb_gen_c_json_printer@@Base+0x2108>
   262dc:	mov	r1, #1
   262e0:	mov	r0, r9
   262e4:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   262e8:	cmp	r0, #0
   262ec:	strne	r4, [r0]
   262f0:	ldr	r3, [sp, #52]	; 0x34
   262f4:	ldr	r3, [r3, #52]	; 0x34
   262f8:	cmp	r3, #0
   262fc:	beq	26320 <__flatcc_fb_gen_c_json_printer@@Base+0x2138>
   26300:	ldrh	r2, [r3, #8]
   26304:	cmp	r2, #0
   26308:	bne	26320 <__flatcc_fb_gen_c_json_printer@@Base+0x2138>
   2630c:	ldr	r3, [r3, #124]	; 0x7c
   26310:	ldr	r2, [sp, #28]
   26314:	ldr	r4, [r2, r3, lsl #2]
   26318:	cmp	r4, #0
   2631c:	bne	2637c <__flatcc_fb_gen_c_json_printer@@Base+0x2194>
   26320:	mov	r2, #2
   26324:	ldr	r1, [pc, #-1752]	; 25c54 <__flatcc_fb_gen_c_json_printer@@Base+0x1a6c>
   26328:	mov	r0, r9
   2632c:	bl	3588c <flatcc_builder_check_required@@Base>
   26330:	cmp	r0, #0
   26334:	beq	26394 <__flatcc_fb_gen_c_json_printer@@Base+0x21ac>
   26338:	mov	r0, r9
   2633c:	bl	35938 <flatcc_builder_end_table@@Base>
   26340:	mov	r1, r0
   26344:	mov	r0, r9
   26348:	bl	34174 <flatcc_builder_end_buffer@@Base>
   2634c:	add	r0, sp, #60	; 0x3c
   26350:	bl	24688 <__flatcc_fb_gen_c_json_printer@@Base+0x4a0>
   26354:	ldr	r3, [sp, #28]
   26358:	cmp	r3, #0
   2635c:	moveq	r0, #0
   26360:	beq	26370 <__flatcc_fb_gen_c_json_printer@@Base+0x2188>
   26364:	mov	r0, r3
   26368:	bl	13ed0 <free@plt>
   2636c:	mov	r0, #0
   26370:	add	sp, sp, #108	; 0x6c
   26374:	vpop	{d8-d9}
   26378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2637c:	mov	r1, #4
   26380:	mov	r0, r9
   26384:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   26388:	cmp	r0, #0
   2638c:	strne	r4, [r0]
   26390:	b	26320 <__flatcc_fb_gen_c_json_printer@@Base+0x2138>
   26394:	ldr	r3, [pc, #-1860]	; 25c58 <__flatcc_fb_gen_c_json_printer@@Base+0x1a70>
   26398:	mov	r2, #33	; 0x21
   2639c:	ldr	r1, [pc, #-1864]	; 25c5c <__flatcc_fb_gen_c_json_printer@@Base+0x1a74>
   263a0:	ldr	r0, [pc, #-1864]	; 25c60 <__flatcc_fb_gen_c_json_printer@@Base+0x1a78>
   263a4:	bl	14038 <__assert_fail@plt>
   263a8:	ldr	r5, [r9, #112]	; 0x70
   263ac:	cmp	r5, #0
   263b0:	moveq	r5, #1
   263b4:	beq	25f5c <__flatcc_fb_gen_c_json_printer@@Base+0x1d74>
   263b8:	mov	r3, #4
   263bc:	mov	r2, r3
   263c0:	mov	r1, r3
   263c4:	ldr	r0, [sp, #8]
   263c8:	bl	368e4 <flatcc_builder_table_add@@Base>
   263cc:	cmp	r0, #0
   263d0:	strne	r5, [r0]
   263d4:	mov	r5, #1
   263d8:	b	25f54 <__flatcc_fb_gen_c_json_printer@@Base+0x1d6c>

000263dc <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   263dc:	push	{r4, r5, r6, r7, lr}
   263e0:	sub	sp, sp, #236	; 0xec
   263e4:	mov	r6, r0
   263e8:	mov	r7, r1
   263ec:	mov	r4, r2
   263f0:	mov	r5, r3
   263f4:	mov	r0, sp
   263f8:	bl	33788 <flatcc_builder_init@@Base>
   263fc:	mov	r2, r7
   26400:	mov	r1, r6
   26404:	mov	r0, sp
   26408:	bl	256ac <__flatcc_fb_gen_c_json_printer@@Base+0x14c4>
   2640c:	ldr	r2, [r5]
   26410:	mov	r1, r4
   26414:	mov	r0, sp
   26418:	bl	36f68 <flatcc_builder_copy_buffer@@Base>
   2641c:	cmp	r0, #0
   26420:	beq	2642c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x50>
   26424:	mov	r0, r4
   26428:	bl	2498c <__flatcc_fb_gen_c_json_printer@@Base+0x7a4>
   2642c:	mov	r0, sp
   26430:	bl	36e6c <flatcc_builder_get_buffer_size@@Base>
   26434:	str	r0, [r5]
   26438:	mov	r0, sp
   2643c:	bl	33930 <flatcc_builder_clear@@Base>
   26440:	mov	r0, r4
   26444:	add	sp, sp, #236	; 0xec
   26448:	pop	{r4, r5, r6, r7, pc}

0002644c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   2644c:	push	{r4, r5, r6, lr}
   26450:	sub	sp, sp, #232	; 0xe8
   26454:	mov	r4, r0
   26458:	mov	r5, r1
   2645c:	mov	r6, r2
   26460:	mov	r0, sp
   26464:	bl	33788 <flatcc_builder_init@@Base>
   26468:	mov	r2, r5
   2646c:	mov	r1, r4
   26470:	mov	r0, sp
   26474:	bl	256ac <__flatcc_fb_gen_c_json_printer@@Base+0x14c4>
   26478:	cmp	r0, #0
   2647c:	movne	r4, #0
   26480:	bne	264a0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x54>
   26484:	mov	r1, r6
   26488:	mov	r0, sp
   2648c:	bl	36fb4 <flatcc_builder_finalize_buffer@@Base>
   26490:	subs	r4, r0, #0
   26494:	beq	264a0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x54>
   26498:	mov	r0, r4
   2649c:	bl	2498c <__flatcc_fb_gen_c_json_printer@@Base+0x7a4>
   264a0:	mov	r0, sp
   264a4:	bl	33930 <flatcc_builder_clear@@Base>
   264a8:	mov	r0, r4
   264ac:	add	sp, sp, #232	; 0xe8
   264b0:	pop	{r4, r5, r6, pc}

000264b4 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   264b4:	push	{r4, r5, r6, r7, r8, lr}
   264b8:	sub	sp, sp, #16
   264bc:	mov	r5, r0
   264c0:	mov	r6, r1
   264c4:	ldr	r4, [r0, #216]	; 0xd8
   264c8:	ldr	r3, [pc, #344]	; 26628 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x174>
   264cc:	cmp	r4, #0
   264d0:	moveq	r4, r3
   264d4:	mov	r0, r4
   264d8:	bl	13f78 <strlen@plt>
   264dc:	mov	r8, r0
   264e0:	ldr	r7, [r6, #160]	; 0xa0
   264e4:	mov	r0, r7
   264e8:	bl	13f78 <strlen@plt>
   264ec:	ldr	r2, [r5, #108]	; 0x6c
   264f0:	cmp	r2, #0
   264f4:	beq	2658c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd8>
   264f8:	ldr	r3, [pc, #300]	; 2662c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x178>
   264fc:	ldr	r4, [r3]
   26500:	cmp	r4, #0
   26504:	beq	26620 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16c>
   26508:	add	r2, sp, #12
   2650c:	mov	r1, r6
   26510:	mov	r0, r5
   26514:	bl	2644c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   26518:	subs	r5, r0, #0
   2651c:	beq	26610 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   26520:	mov	r3, r4
   26524:	ldr	r2, [sp, #12]
   26528:	mov	r1, #1
   2652c:	mov	r0, r5
   26530:	bl	13f18 <fwrite@plt>
   26534:	ldr	r3, [sp, #12]
   26538:	cmp	r0, r3
   2653c:	moveq	r6, #0
   26540:	beq	26560 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xac>
   26544:	ldr	r3, [pc, #228]	; 26630 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17c>
   26548:	ldr	r3, [r3]
   2654c:	mov	r2, #38	; 0x26
   26550:	mov	r1, #1
   26554:	ldr	r0, [pc, #216]	; 26634 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x180>
   26558:	bl	13f18 <fwrite@plt>
   2655c:	mvn	r6, #0
   26560:	mov	r0, r5
   26564:	bl	13ed0 <free@plt>
   26568:	ldr	r3, [pc, #188]	; 2662c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x178>
   2656c:	ldr	r3, [r3]
   26570:	cmp	r4, r3
   26574:	beq	26580 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcc>
   26578:	mov	r0, r4
   2657c:	bl	13fcc <fclose@plt>
   26580:	mov	r0, r6
   26584:	add	sp, sp, #16
   26588:	pop	{r4, r5, r6, r7, r8, pc}
   2658c:	mov	r3, #1
   26590:	str	r3, [sp, #4]
   26594:	ldr	r3, [pc, #156]	; 26638 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x184>
   26598:	str	r3, [sp]
   2659c:	mov	r3, r0
   265a0:	mov	r2, r7
   265a4:	mov	r1, r8
   265a8:	mov	r0, r4
   265ac:	bl	28f38 <__flatcc_fb_create_join_path_n@@Base>
   265b0:	subs	r7, r0, #0
   265b4:	beq	265d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x124>
   265b8:	ldr	r1, [pc, #124]	; 2663c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x188>
   265bc:	mov	r0, r7
   265c0:	bl	13ec4 <fopen@plt>
   265c4:	subs	r4, r0, #0
   265c8:	beq	265f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x144>
   265cc:	mov	r0, r7
   265d0:	bl	13ed0 <free@plt>
   265d4:	b	26500 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c>
   265d8:	ldr	r3, [pc, #80]	; 26630 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17c>
   265dc:	ldr	r3, [r3]
   265e0:	mov	r2, #34	; 0x22
   265e4:	mov	r1, #1
   265e8:	ldr	r0, [pc, #80]	; 26640 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18c>
   265ec:	bl	13f18 <fwrite@plt>
   265f0:	mov	r0, #1
   265f4:	bl	13f6c <exit@plt>
   265f8:	mov	r2, r7
   265fc:	ldr	r1, [pc, #64]	; 26644 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x190>
   26600:	ldr	r3, [pc, #40]	; 26630 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17c>
   26604:	ldr	r0, [r3]
   26608:	bl	13f84 <fprintf@plt>
   2660c:	b	265cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x118>
   26610:	ldr	r0, [pc, #48]	; 26648 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x194>
   26614:	bl	13f30 <puts@plt>
   26618:	mvn	r6, #0
   2661c:	b	26568 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb4>
   26620:	mvn	r6, #0
   26624:	b	26580 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcc>
   26628:	andeq	r5, r4, r0, lsr #2
   2662c:	andeq	r6, r6, ip, lsr #1
   26630:	andeq	r6, r6, r8, lsr #1
   26634:	andeq	r2, r5, r8, lsr #5
   26638:			; <UNDEFINED> instruction: 0x0003b3b8
   2663c:	muleq	r3, r4, r4
   26640:	muleq	r3, r4, r3
   26644:	andeq	r2, r5, r0, asr r2
   26648:	andeq	r2, r5, r4, lsl #5
   2664c:	push	{r4, r5, r6, r7, r8, lr}
   26650:	ldr	r5, [r0]
   26654:	ldr	r3, [r0, #12]
   26658:	cmp	r3, #0
   2665c:	popeq	{r4, r5, r6, r7, r8, pc}
   26660:	mov	r8, r2
   26664:	mov	r7, r1
   26668:	mov	r6, r0
   2666c:	sub	r5, r5, #4
   26670:	mov	r4, #0
   26674:	b	26688 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d4>
   26678:	add	r4, r4, #1
   2667c:	ldr	r3, [r6, #12]
   26680:	cmp	r3, r4
   26684:	bls	266a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
   26688:	ldr	r1, [r5, #4]!
   2668c:	cmp	r1, #0
   26690:	cmpne	r1, #2
   26694:	beq	26678 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c4>
   26698:	mov	r0, r8
   2669c:	blx	r7
   266a0:	b	26678 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c4>
   266a4:	pop	{r4, r5, r6, r7, r8, pc}
   266a8:	push	{r4, lr}
   266ac:	mov	r4, r0
   266b0:	ldr	r0, [r0]
   266b4:	cmp	r0, #0
   266b8:	beq	266c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x20c>
   266bc:	bl	13ed0 <free@plt>
   266c0:	mov	r3, #0
   266c4:	str	r3, [r4]
   266c8:	str	r3, [r4, #4]
   266cc:	str	r3, [r4, #8]
   266d0:	str	r3, [r4, #12]
   266d4:	pop	{r4, pc}
   266d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   266dc:	sub	sp, sp, #28
   266e0:	str	r1, [sp, #8]
   266e4:	str	r2, [sp, #12]
   266e8:	subs	fp, r3, #0
   266ec:	beq	26790 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2dc>
   266f0:	mov	sl, r0
   266f4:	cmp	fp, #2
   266f8:	beq	267a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f0>
   266fc:	cmp	fp, #1
   26700:	beq	267b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x304>
   26704:	ldr	r1, [r0, #8]
   26708:	ldr	r2, [r0, #12]
   2670c:	mov	r3, #179	; 0xb3
   26710:	mul	r3, r3, r2
   26714:	cmp	r1, r3, lsr #8
   26718:	bcc	2672c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x278>
   2671c:	lsl	r1, r1, #1
   26720:	bl	268d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x41c>
   26724:	cmp	r0, #0
   26728:	bne	267cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x318>
   2672c:	ldr	r6, [sl]
   26730:	ldr	r7, [sl, #12]
   26734:	sub	r7, r7, #1
   26738:	add	r3, sp, #16
   2673c:	str	r3, [sp, #4]
   26740:	ldr	r3, [pc, #356]	; 268ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f8>
   26744:	str	r3, [sp]
   26748:	ldr	r2, [sp, #12]
   2674c:	mov	r3, #0
   26750:	ldr	r0, [sp, #8]
   26754:	bl	37760 <cmetrohash64_1@@Base>
   26758:	ldr	r5, [sp, #16]
   2675c:	and	r3, r7, r5
   26760:	ldr	r2, [sp, #64]	; 0x40
   26764:	sub	r2, r2, #2
   26768:	cmp	r2, #1
   2676c:	bls	267e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x334>
   26770:	add	r8, r6, r3, lsl #2
   26774:	ldr	r4, [r6, r3, lsl #2]
   26778:	cmp	r4, #0
   2677c:	moveq	r9, r8
   26780:	beq	2688c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d8>
   26784:	add	r5, r5, #1
   26788:	mov	r9, #0
   2678c:	b	26854 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a0>
   26790:	ldr	r3, [pc, #280]	; 268b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3fc>
   26794:	mov	r2, #114	; 0x72
   26798:	ldr	r1, [pc, #276]	; 268b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x400>
   2679c:	ldr	r0, [pc, #276]	; 268b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x404>
   267a0:	bl	14038 <__assert_fail@plt>
   267a4:	ldr	r3, [pc, #260]	; 268b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3fc>
   267a8:	mov	r2, #115	; 0x73
   267ac:	ldr	r1, [pc, #256]	; 268b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x400>
   267b0:	ldr	r0, [pc, #260]	; 268bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x408>
   267b4:	bl	14038 <__assert_fail@plt>
   267b8:	ldr	r3, [pc, #240]	; 268b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3fc>
   267bc:	mov	r2, #116	; 0x74
   267c0:	ldr	r1, [pc, #236]	; 268b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x400>
   267c4:	ldr	r0, [pc, #244]	; 268c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x40c>
   267c8:	bl	14038 <__assert_fail@plt>
   267cc:	ldr	r2, [pc, #240]	; 268c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x410>
   267d0:	ldr	r1, [pc, #240]	; 268c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x414>
   267d4:	ldr	r3, [pc, #240]	; 268cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x418>
   267d8:	ldr	r0, [r3]
   267dc:	bl	13f84 <fprintf@plt>
   267e0:	mov	r0, #1
   267e4:	bl	13f6c <exit@plt>
   267e8:	ldr	r2, [sl, #8]
   267ec:	add	r2, r2, #1
   267f0:	str	r2, [sl, #8]
   267f4:	add	r2, r6, r3, lsl #2
   267f8:	ldr	r3, [r6, r3, lsl #2]
   267fc:	cmp	r3, #0
   26800:	cmpne	r3, #2
   26804:	beq	26828 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x374>
   26808:	add	r5, r5, #1
   2680c:	and	r3, r5, r7
   26810:	add	r2, r6, r3, lsl #2
   26814:	ldr	r3, [r6, r3, lsl #2]
   26818:	add	r5, r5, #1
   2681c:	cmp	r3, #0
   26820:	cmpne	r3, #2
   26824:	bne	2680c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x358>
   26828:	str	fp, [r2]
   2682c:	mov	r4, #0
   26830:	b	268a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ec>
   26834:	cmp	r9, #0
   26838:	moveq	r9, r8
   2683c:	and	r3, r7, r5
   26840:	add	r8, r6, r3, lsl #2
   26844:	ldr	r4, [r6, r3, lsl #2]
   26848:	add	r5, r5, #1
   2684c:	cmp	r4, #0
   26850:	beq	26884 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3d0>
   26854:	cmp	r4, #2
   26858:	beq	26834 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x380>
   2685c:	ldr	r2, [sp, #12]
   26860:	mov	r1, r4
   26864:	ldr	r0, [sp, #8]
   26868:	bl	14020 <strncmp@plt>
   2686c:	cmp	r0, #0
   26870:	bne	2683c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x388>
   26874:	ldr	r3, [sp, #64]	; 0x40
   26878:	cmp	r3, #0
   2687c:	streq	fp, [r8]
   26880:	b	268a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ec>
   26884:	cmp	r9, #0
   26888:	moveq	r9, r8
   2688c:	ldr	r3, [sl, #8]
   26890:	add	r3, r3, #1
   26894:	str	r3, [sl, #8]
   26898:	str	fp, [r9]
   2689c:	mov	r4, #0
   268a0:	mov	r0, r4
   268a4:	add	sp, sp, #28
   268a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   268ac:	svccs	0x00693b52
   268b0:	ldrdeq	r2, [r5], -r0
   268b4:	andeq	r2, r5, r8, ror #5
   268b8:	andeq	r2, r5, r8, lsr r3
   268bc:	andeq	r2, r5, r0, asr r3
   268c0:	andeq	r2, r5, r8, ror #6
   268c4:	andeq	r2, r5, r0, lsl #7
   268c8:			; <UNDEFINED> instruction: 0x000523b4
   268cc:	andeq	r6, r6, r8, lsr #1
   268d0:	push	{r4, r5, r6, r7, r8, lr}
   268d4:	sub	sp, sp, #24
   268d8:	mov	r7, r0
   268dc:	ldr	r6, [r0]
   268e0:	ldr	r3, [r0, #8]
   268e4:	cmp	r1, r3
   268e8:	movcc	r1, r3
   268ec:	cmp	r1, #2
   268f0:	bls	26950 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x49c>
   268f4:	mov	r4, #4
   268f8:	mov	r2, #179	; 0xb3
   268fc:	lsl	r4, r4, #1
   26900:	mul	r3, r2, r4
   26904:	cmp	r1, r3, lsr #8
   26908:	bhi	268fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x448>
   2690c:	mov	r1, #4
   26910:	mov	r0, r4
   26914:	bl	13ea0 <calloc@plt>
   26918:	str	r0, [sp, #8]
   2691c:	cmp	r0, #0
   26920:	beq	269c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x514>
   26924:	mov	r3, #0
   26928:	str	r3, [sp, #12]
   2692c:	str	r4, [sp, #20]
   26930:	str	r3, [sp, #16]
   26934:	ldr	r3, [r7, #12]
   26938:	cmp	r3, #0
   2693c:	beq	2699c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>
   26940:	sub	r6, r6, #4
   26944:	mov	r5, #0
   26948:	mov	r8, #3
   2694c:	b	26968 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b4>
   26950:	mov	r4, #4
   26954:	b	2690c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x458>
   26958:	add	r5, r5, #1
   2695c:	ldr	r3, [r7, #12]
   26960:	cmp	r3, r5
   26964:	bls	2699c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>
   26968:	ldr	r4, [r6, #4]!
   2696c:	cmp	r4, #0
   26970:	cmpne	r4, #2
   26974:	beq	26958 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a4>
   26978:	mov	r0, r4
   2697c:	bl	13f78 <strlen@plt>
   26980:	str	r8, [sp]
   26984:	mov	r3, r4
   26988:	mov	r2, r0
   2698c:	mov	r1, r4
   26990:	add	r0, sp, #8
   26994:	bl	266d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x224>
   26998:	b	26958 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a4>
   2699c:	mov	r0, r7
   269a0:	bl	266a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f4>
   269a4:	add	ip, sp, #8
   269a8:	ldm	ip!, {r0, r1, r2, r3}
   269ac:	str	r0, [r7]
   269b0:	str	r1, [r7, #4]
   269b4:	str	r2, [r7, #8]
   269b8:	str	r3, [r7, #12]
   269bc:	mov	r0, #0
   269c0:	add	sp, sp, #24
   269c4:	pop	{r4, r5, r6, r7, r8, pc}
   269c8:	mvn	r0, #0
   269cc:	b	269c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x50c>
   269d0:	push	{r4, r5, r6, r7, r8, r9, lr}
   269d4:	sub	sp, sp, #20
   269d8:	ldr	r7, [r0]
   269dc:	cmp	r7, #0
   269e0:	beq	26a6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b8>
   269e4:	mov	r9, r2
   269e8:	mov	r8, r1
   269ec:	ldr	r6, [r0, #12]
   269f0:	sub	r6, r6, #1
   269f4:	add	r3, sp, #8
   269f8:	str	r3, [sp, #4]
   269fc:	ldr	r3, [pc, #112]	; 26a74 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5c0>
   26a00:	str	r3, [sp]
   26a04:	mov	r3, #0
   26a08:	mov	r0, r1
   26a0c:	bl	37760 <cmetrohash64_1@@Base>
   26a10:	ldr	r5, [sp, #8]
   26a14:	and	r3, r6, r5
   26a18:	ldr	r4, [r7, r3, lsl #2]
   26a1c:	cmp	r4, #0
   26a20:	beq	26a60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ac>
   26a24:	add	r5, r5, #1
   26a28:	b	26a40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x58c>
   26a2c:	and	r3, r5, r6
   26a30:	ldr	r4, [r7, r3, lsl #2]
   26a34:	add	r5, r5, #1
   26a38:	cmp	r4, #0
   26a3c:	beq	26a60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ac>
   26a40:	cmp	r4, #2
   26a44:	beq	26a2c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x578>
   26a48:	mov	r2, r9
   26a4c:	mov	r1, r4
   26a50:	mov	r0, r8
   26a54:	bl	14020 <strncmp@plt>
   26a58:	cmp	r0, #0
   26a5c:	bne	26a2c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x578>
   26a60:	mov	r0, r4
   26a64:	add	sp, sp, #20
   26a68:	pop	{r4, r5, r6, r7, r8, r9, pc}
   26a6c:	mov	r4, #0
   26a70:	b	26a60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ac>
   26a74:	svccs	0x00693b52
   26a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26a7c:	sub	sp, sp, #20
   26a80:	ldr	r6, [r0]
   26a84:	cmp	r6, #0
   26a88:	beq	26b34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x680>
   26a8c:	mov	r9, r2
   26a90:	mov	r8, r1
   26a94:	mov	fp, r0
   26a98:	ldr	r7, [r0, #12]
   26a9c:	sub	r7, r7, #1
   26aa0:	add	r3, sp, #8
   26aa4:	str	r3, [sp, #4]
   26aa8:	ldr	r3, [pc, #140]	; 26b3c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x688>
   26aac:	str	r3, [sp]
   26ab0:	mov	r3, #0
   26ab4:	mov	r0, r1
   26ab8:	bl	37760 <cmetrohash64_1@@Base>
   26abc:	ldr	r5, [sp, #8]
   26ac0:	and	r3, r7, r5
   26ac4:	add	sl, r6, r3, lsl #2
   26ac8:	ldr	r4, [r6, r3, lsl #2]
   26acc:	cmp	r4, #0
   26ad0:	beq	26b28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x674>
   26ad4:	add	r5, r5, #1
   26ad8:	b	26af4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x640>
   26adc:	and	r3, r5, r7
   26ae0:	add	sl, r6, r3, lsl #2
   26ae4:	ldr	r4, [r6, r3, lsl #2]
   26ae8:	add	r5, r5, #1
   26aec:	cmp	r4, #0
   26af0:	beq	26b28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x674>
   26af4:	cmp	r4, #2
   26af8:	beq	26adc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x628>
   26afc:	mov	r2, r9
   26b00:	mov	r1, r4
   26b04:	mov	r0, r8
   26b08:	bl	14020 <strncmp@plt>
   26b0c:	cmp	r0, #0
   26b10:	bne	26adc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x628>
   26b14:	mov	r3, #2
   26b18:	str	r3, [sl]
   26b1c:	ldr	r3, [fp, #8]
   26b20:	sub	r3, r3, #1
   26b24:	str	r3, [fp, #8]
   26b28:	mov	r0, r4
   26b2c:	add	sp, sp, #20
   26b30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26b34:	mov	r4, #0
   26b38:	b	26b28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x674>
   26b3c:	svccs	0x00693b52

00026b40 <str_set_clear@@Base>:
   26b40:	push	{r4, lr}
   26b44:	bl	266a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f4>
   26b48:	pop	{r4, pc}

00026b4c <str_set_destroy@@Base>:
   26b4c:	push	{r4, lr}
   26b50:	mov	r4, r0
   26b54:	cmp	r1, #0
   26b58:	beq	26b60 <str_set_destroy@@Base+0x14>
   26b5c:	bl	2664c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x198>
   26b60:	mov	r0, r4
   26b64:	bl	266a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f4>
   26b68:	pop	{r4, pc}

00026b6c <str_set_init@@Base>:
   26b6c:	push	{r4, r5, r6, lr}
   26b70:	mov	r5, r0
   26b74:	cmp	r1, #2
   26b78:	bls	26bc0 <str_set_init@@Base+0x54>
   26b7c:	mov	r4, #4
   26b80:	mov	r2, #179	; 0xb3
   26b84:	lsl	r4, r4, #1
   26b88:	mul	r3, r2, r4
   26b8c:	cmp	r1, r3, lsr #8
   26b90:	bhi	26b84 <str_set_init@@Base+0x18>
   26b94:	mov	r1, #4
   26b98:	mov	r0, r4
   26b9c:	bl	13ea0 <calloc@plt>
   26ba0:	str	r0, [r5]
   26ba4:	cmp	r0, #0
   26ba8:	movne	r0, #0
   26bac:	strne	r0, [r5, #4]
   26bb0:	strne	r4, [r5, #12]
   26bb4:	strne	r0, [r5, #8]
   26bb8:	mvneq	r0, #0
   26bbc:	pop	{r4, r5, r6, pc}
   26bc0:	mov	r4, #4
   26bc4:	b	26b94 <str_set_init@@Base+0x28>

00026bc8 <str_set_resize@@Base>:
   26bc8:	push	{r4, lr}
   26bcc:	bl	268d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x41c>
   26bd0:	pop	{r4, pc}

00026bd4 <str_set_insert@@Base>:
   26bd4:	push	{lr}		; (str lr, [sp, #-4]!)
   26bd8:	sub	sp, sp, #12
   26bdc:	ldr	ip, [sp, #16]
   26be0:	str	ip, [sp]
   26be4:	bl	266d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x224>
   26be8:	add	sp, sp, #12
   26bec:	pop	{pc}		; (ldr pc, [sp], #4)

00026bf0 <str_set_insert_item@@Base>:
   26bf0:	push	{r4, r5, r6, lr}
   26bf4:	sub	sp, sp, #8
   26bf8:	mov	r5, r0
   26bfc:	mov	r4, r1
   26c00:	mov	r6, r2
   26c04:	mov	r0, r1
   26c08:	bl	13f78 <strlen@plt>
   26c0c:	str	r6, [sp]
   26c10:	mov	r3, r4
   26c14:	mov	r2, r0
   26c18:	mov	r1, r4
   26c1c:	mov	r0, r5
   26c20:	bl	266d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x224>
   26c24:	add	sp, sp, #8
   26c28:	pop	{r4, r5, r6, pc}

00026c2c <str_set_find@@Base>:
   26c2c:	push	{r4, lr}
   26c30:	bl	269d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x51c>
   26c34:	pop	{r4, pc}

00026c38 <str_set_find_item@@Base>:
   26c38:	push	{r4, r5, r6, lr}
   26c3c:	mov	r5, r0
   26c40:	mov	r4, r1
   26c44:	mov	r0, r1
   26c48:	bl	13f78 <strlen@plt>
   26c4c:	mov	r2, r0
   26c50:	mov	r1, r4
   26c54:	mov	r0, r5
   26c58:	bl	269d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x51c>
   26c5c:	pop	{r4, r5, r6, pc}

00026c60 <str_set_remove@@Base>:
   26c60:	push	{r4, lr}
   26c64:	bl	26a78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5c4>
   26c68:	pop	{r4, pc}

00026c6c <str_set_remove_item@@Base>:
   26c6c:	push	{r4, r5, r6, lr}
   26c70:	mov	r5, r0
   26c74:	mov	r4, r1
   26c78:	mov	r0, r1
   26c7c:	bl	13f78 <strlen@plt>
   26c80:	mov	r2, r0
   26c84:	mov	r1, r4
   26c88:	mov	r0, r5
   26c8c:	bl	26a78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5c4>
   26c90:	pop	{r4, r5, r6, pc}

00026c94 <str_set_visit@@Base>:
   26c94:	push	{r4, lr}
   26c98:	bl	2664c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x198>
   26c9c:	pop	{r4, pc}
   26ca0:	push	{r4, r5, r6, r7, r8, lr}
   26ca4:	ldr	r5, [r0]
   26ca8:	ldr	r3, [r0, #12]
   26cac:	cmp	r3, #0
   26cb0:	popeq	{r4, r5, r6, r7, r8, pc}
   26cb4:	mov	r8, r2
   26cb8:	mov	r7, r1
   26cbc:	mov	r6, r0
   26cc0:	sub	r5, r5, #4
   26cc4:	mov	r4, #0
   26cc8:	b	26cdc <str_set_visit@@Base+0x48>
   26ccc:	add	r4, r4, #1
   26cd0:	ldr	r3, [r6, #12]
   26cd4:	cmp	r3, r4
   26cd8:	bls	26cf8 <str_set_visit@@Base+0x64>
   26cdc:	ldr	r1, [r5, #4]!
   26ce0:	cmp	r1, #0
   26ce4:	cmpne	r1, #2
   26ce8:	beq	26ccc <str_set_visit@@Base+0x38>
   26cec:	mov	r0, r8
   26cf0:	blx	r7
   26cf4:	b	26ccc <str_set_visit@@Base+0x38>
   26cf8:	pop	{r4, r5, r6, r7, r8, pc}
   26cfc:	push	{r4, lr}
   26d00:	mov	r4, r0
   26d04:	ldr	r0, [r0]
   26d08:	cmp	r0, #0
   26d0c:	beq	26d14 <str_set_visit@@Base+0x80>
   26d10:	bl	13ed0 <free@plt>
   26d14:	mov	r3, #0
   26d18:	str	r3, [r4]
   26d1c:	str	r3, [r4, #4]
   26d20:	str	r3, [r4, #8]
   26d24:	str	r3, [r4, #12]
   26d28:	pop	{r4, pc}
   26d2c:	push	{r4, r5, r6, r7, r8, r9, lr}
   26d30:	sub	sp, sp, #28
   26d34:	ldr	r9, [sp, #56]	; 0x38
   26d38:	subs	r8, r3, #0
   26d3c:	beq	26de4 <str_set_visit@@Base+0x150>
   26d40:	mov	r7, r0
   26d44:	mov	r6, r1
   26d48:	cmp	r8, #2
   26d4c:	beq	26df8 <str_set_visit@@Base+0x164>
   26d50:	cmp	r8, #1
   26d54:	beq	26e0c <str_set_visit@@Base+0x178>
   26d58:	ldr	r1, [r0, #8]
   26d5c:	ldr	r2, [r0, #12]
   26d60:	mov	r3, #179	; 0xb3
   26d64:	mul	r3, r3, r2
   26d68:	cmp	r1, r3, lsr #8
   26d6c:	bcc	26d80 <str_set_visit@@Base+0xec>
   26d70:	lsl	r1, r1, #1
   26d74:	bl	26f0c <str_set_visit@@Base+0x278>
   26d78:	cmp	r0, #0
   26d7c:	bne	26e20 <str_set_visit@@Base+0x18c>
   26d80:	ldr	r4, [r7]
   26d84:	ldr	r5, [r7, #12]
   26d88:	sub	r5, r5, #1
   26d8c:	add	r0, sp, #24
   26d90:	str	r6, [r0, #-12]!
   26d94:	add	r3, sp, #16
   26d98:	str	r3, [sp, #4]
   26d9c:	ldr	r3, [pc, #324]	; 26ee8 <str_set_visit@@Base+0x254>
   26da0:	str	r3, [sp]
   26da4:	mov	r2, #4
   26da8:	mov	r3, #0
   26dac:	bl	37760 <cmetrohash64_1@@Base>
   26db0:	ldr	r3, [sp, #16]
   26db4:	and	r2, r5, r3
   26db8:	sub	r1, r9, #2
   26dbc:	cmp	r1, #1
   26dc0:	bls	26e3c <str_set_visit@@Base+0x1a8>
   26dc4:	add	r1, r4, r2, lsl #2
   26dc8:	ldr	r0, [r4, r2, lsl #2]
   26dcc:	cmp	r0, #0
   26dd0:	moveq	ip, r1
   26dd4:	beq	26ecc <str_set_visit@@Base+0x238>
   26dd8:	add	r3, r3, #1
   26ddc:	mov	ip, #0
   26de0:	b	26ea8 <str_set_visit@@Base+0x214>
   26de4:	ldr	r3, [pc, #256]	; 26eec <str_set_visit@@Base+0x258>
   26de8:	mov	r2, #114	; 0x72
   26dec:	ldr	r1, [pc, #252]	; 26ef0 <str_set_visit@@Base+0x25c>
   26df0:	ldr	r0, [pc, #252]	; 26ef4 <str_set_visit@@Base+0x260>
   26df4:	bl	14038 <__assert_fail@plt>
   26df8:	ldr	r3, [pc, #236]	; 26eec <str_set_visit@@Base+0x258>
   26dfc:	mov	r2, #115	; 0x73
   26e00:	ldr	r1, [pc, #232]	; 26ef0 <str_set_visit@@Base+0x25c>
   26e04:	ldr	r0, [pc, #236]	; 26ef8 <str_set_visit@@Base+0x264>
   26e08:	bl	14038 <__assert_fail@plt>
   26e0c:	ldr	r3, [pc, #216]	; 26eec <str_set_visit@@Base+0x258>
   26e10:	mov	r2, #116	; 0x74
   26e14:	ldr	r1, [pc, #212]	; 26ef0 <str_set_visit@@Base+0x25c>
   26e18:	ldr	r0, [pc, #220]	; 26efc <str_set_visit@@Base+0x268>
   26e1c:	bl	14038 <__assert_fail@plt>
   26e20:	ldr	r2, [pc, #216]	; 26f00 <str_set_visit@@Base+0x26c>
   26e24:	ldr	r1, [pc, #216]	; 26f04 <str_set_visit@@Base+0x270>
   26e28:	ldr	r3, [pc, #216]	; 26f08 <str_set_visit@@Base+0x274>
   26e2c:	ldr	r0, [r3]
   26e30:	bl	13f84 <fprintf@plt>
   26e34:	mov	r0, #1
   26e38:	bl	13f6c <exit@plt>
   26e3c:	ldr	r1, [r7, #8]
   26e40:	add	r1, r1, #1
   26e44:	str	r1, [r7, #8]
   26e48:	add	r1, r4, r2, lsl #2
   26e4c:	ldr	r2, [r4, r2, lsl #2]
   26e50:	cmp	r2, #0
   26e54:	cmpne	r2, #2
   26e58:	beq	26e7c <str_set_visit@@Base+0x1e8>
   26e5c:	add	r3, r3, #1
   26e60:	and	r2, r3, r5
   26e64:	add	r1, r4, r2, lsl #2
   26e68:	ldr	r2, [r4, r2, lsl #2]
   26e6c:	add	r3, r3, #1
   26e70:	cmp	r2, #0
   26e74:	cmpne	r2, #2
   26e78:	bne	26e60 <str_set_visit@@Base+0x1cc>
   26e7c:	str	r8, [r1]
   26e80:	mov	r0, #0
   26e84:	b	26ee0 <str_set_visit@@Base+0x24c>
   26e88:	cmp	ip, #0
   26e8c:	moveq	ip, r1
   26e90:	and	r2, r5, r3
   26e94:	add	r1, r4, r2, lsl #2
   26e98:	ldr	r0, [r4, r2, lsl #2]
   26e9c:	add	r3, r3, #1
   26ea0:	cmp	r0, #0
   26ea4:	beq	26ec4 <str_set_visit@@Base+0x230>
   26ea8:	cmp	r0, #2
   26eac:	beq	26e88 <str_set_visit@@Base+0x1f4>
   26eb0:	cmp	r6, r0
   26eb4:	bne	26e90 <str_set_visit@@Base+0x1fc>
   26eb8:	cmp	r9, #0
   26ebc:	streq	r8, [r1]
   26ec0:	b	26ee0 <str_set_visit@@Base+0x24c>
   26ec4:	cmp	ip, #0
   26ec8:	moveq	ip, r1
   26ecc:	ldr	r3, [r7, #8]
   26ed0:	add	r3, r3, #1
   26ed4:	str	r3, [r7, #8]
   26ed8:	str	r8, [ip]
   26edc:	mov	r0, #0
   26ee0:	add	sp, sp, #28
   26ee4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   26ee8:	svccs	0x00693b52
   26eec:	andeq	r2, r5, ip, asr #7
   26ef0:	andeq	r2, r5, r8, ror #5
   26ef4:	andeq	r2, r5, r8, lsr r3
   26ef8:	andeq	r2, r5, r0, asr r3
   26efc:	andeq	r2, r5, r8, ror #6
   26f00:	andeq	r2, r5, r0, lsl #7
   26f04:			; <UNDEFINED> instruction: 0x000523b4
   26f08:	andeq	r6, r6, r8, lsr #1
   26f0c:	push	{r4, r5, r6, r7, r8, lr}
   26f10:	sub	sp, sp, #24
   26f14:	mov	r6, r0
   26f18:	ldr	r5, [r0]
   26f1c:	ldr	r3, [r0, #8]
   26f20:	cmp	r1, r3
   26f24:	movcc	r1, r3
   26f28:	cmp	r1, #2
   26f2c:	bls	26f90 <str_set_visit@@Base+0x2fc>
   26f30:	mov	r4, #4
   26f34:	mov	r2, #179	; 0xb3
   26f38:	lsl	r4, r4, #1
   26f3c:	mul	r3, r2, r4
   26f40:	cmp	r1, r3, lsr #8
   26f44:	bhi	26f38 <str_set_visit@@Base+0x2a4>
   26f48:	mov	r1, #4
   26f4c:	mov	r0, r4
   26f50:	bl	13ea0 <calloc@plt>
   26f54:	str	r0, [sp, #8]
   26f58:	cmp	r0, #0
   26f5c:	beq	26ffc <str_set_visit@@Base+0x368>
   26f60:	mov	r3, #0
   26f64:	str	r3, [sp, #12]
   26f68:	str	r4, [sp, #20]
   26f6c:	str	r3, [sp, #16]
   26f70:	ldr	r3, [r6, #12]
   26f74:	cmp	r3, #0
   26f78:	beq	26fd0 <str_set_visit@@Base+0x33c>
   26f7c:	sub	r5, r5, #4
   26f80:	mov	r4, #0
   26f84:	mov	r8, #3
   26f88:	mov	r7, #4
   26f8c:	b	26fa8 <str_set_visit@@Base+0x314>
   26f90:	mov	r4, #4
   26f94:	b	26f48 <str_set_visit@@Base+0x2b4>
   26f98:	add	r4, r4, #1
   26f9c:	ldr	r3, [r6, #12]
   26fa0:	cmp	r3, r4
   26fa4:	bls	26fd0 <str_set_visit@@Base+0x33c>
   26fa8:	ldr	r1, [r5, #4]!
   26fac:	cmp	r1, #0
   26fb0:	cmpne	r1, #2
   26fb4:	beq	26f98 <str_set_visit@@Base+0x304>
   26fb8:	str	r8, [sp]
   26fbc:	mov	r3, r1
   26fc0:	mov	r2, r7
   26fc4:	add	r0, sp, #8
   26fc8:	bl	26d2c <str_set_visit@@Base+0x98>
   26fcc:	b	26f98 <str_set_visit@@Base+0x304>
   26fd0:	mov	r0, r6
   26fd4:	bl	26cfc <str_set_visit@@Base+0x68>
   26fd8:	add	ip, sp, #8
   26fdc:	ldm	ip!, {r0, r1, r2, r3}
   26fe0:	str	r0, [r6]
   26fe4:	str	r1, [r6, #4]
   26fe8:	str	r2, [r6, #8]
   26fec:	str	r3, [r6, #12]
   26ff0:	mov	r0, #0
   26ff4:	add	sp, sp, #24
   26ff8:	pop	{r4, r5, r6, r7, r8, pc}
   26ffc:	mvn	r0, #0
   27000:	b	26ff4 <str_set_visit@@Base+0x360>
   27004:	push	{r4, r5, r6, lr}
   27008:	sub	sp, sp, #24
   2700c:	ldr	r5, [r0]
   27010:	cmp	r5, #0
   27014:	beq	27090 <str_set_visit@@Base+0x3fc>
   27018:	mov	r6, r1
   2701c:	ldr	r4, [r0, #12]
   27020:	sub	r4, r4, #1
   27024:	add	r0, sp, #24
   27028:	str	r1, [r0, #-12]!
   2702c:	add	r3, sp, #16
   27030:	str	r3, [sp, #4]
   27034:	ldr	r3, [pc, #92]	; 27098 <str_set_visit@@Base+0x404>
   27038:	str	r3, [sp]
   2703c:	mov	r2, #4
   27040:	mov	r3, #0
   27044:	bl	37760 <cmetrohash64_1@@Base>
   27048:	ldr	r3, [sp, #16]
   2704c:	and	r2, r4, r3
   27050:	ldr	r0, [r5, r2, lsl #2]
   27054:	cmp	r0, #0
   27058:	beq	27088 <str_set_visit@@Base+0x3f4>
   2705c:	add	r3, r3, #1
   27060:	b	27078 <str_set_visit@@Base+0x3e4>
   27064:	and	r2, r3, r4
   27068:	ldr	r0, [r5, r2, lsl #2]
   2706c:	add	r3, r3, #1
   27070:	cmp	r0, #0
   27074:	beq	27088 <str_set_visit@@Base+0x3f4>
   27078:	cmp	r0, #2
   2707c:	beq	27064 <str_set_visit@@Base+0x3d0>
   27080:	cmp	r6, r0
   27084:	bne	27064 <str_set_visit@@Base+0x3d0>
   27088:	add	sp, sp, #24
   2708c:	pop	{r4, r5, r6, pc}
   27090:	mov	r0, #0
   27094:	b	27088 <str_set_visit@@Base+0x3f4>
   27098:	svccs	0x00693b52
   2709c:	push	{r4, r5, r6, r7, lr}
   270a0:	sub	sp, sp, #28
   270a4:	ldr	r4, [r0]
   270a8:	cmp	r4, #0
   270ac:	beq	27148 <str_set_visit@@Base+0x4b4>
   270b0:	mov	r6, r1
   270b4:	mov	r7, r0
   270b8:	ldr	r5, [r0, #12]
   270bc:	sub	r5, r5, #1
   270c0:	add	r0, sp, #24
   270c4:	str	r1, [r0, #-12]!
   270c8:	add	r3, sp, #16
   270cc:	str	r3, [sp, #4]
   270d0:	ldr	r3, [pc, #120]	; 27150 <str_set_visit@@Base+0x4bc>
   270d4:	str	r3, [sp]
   270d8:	mov	r2, #4
   270dc:	mov	r3, #0
   270e0:	bl	37760 <cmetrohash64_1@@Base>
   270e4:	ldr	r3, [sp, #16]
   270e8:	and	r2, r5, r3
   270ec:	add	r1, r4, r2, lsl #2
   270f0:	ldr	r0, [r4, r2, lsl #2]
   270f4:	cmp	r0, #0
   270f8:	beq	27140 <str_set_visit@@Base+0x4ac>
   270fc:	add	r3, r3, #1
   27100:	b	2711c <str_set_visit@@Base+0x488>
   27104:	and	r2, r3, r5
   27108:	add	r1, r4, r2, lsl #2
   2710c:	ldr	r0, [r4, r2, lsl #2]
   27110:	add	r3, r3, #1
   27114:	cmp	r0, #0
   27118:	beq	27140 <str_set_visit@@Base+0x4ac>
   2711c:	cmp	r0, #2
   27120:	beq	27104 <str_set_visit@@Base+0x470>
   27124:	cmp	r6, r0
   27128:	bne	27104 <str_set_visit@@Base+0x470>
   2712c:	mov	r3, #2
   27130:	str	r3, [r1]
   27134:	ldr	r3, [r7, #8]
   27138:	sub	r3, r3, #1
   2713c:	str	r3, [r7, #8]
   27140:	add	sp, sp, #28
   27144:	pop	{r4, r5, r6, r7, pc}
   27148:	mov	r0, #0
   2714c:	b	27140 <str_set_visit@@Base+0x4ac>
   27150:	svccs	0x00693b52

00027154 <ptr_set_clear@@Base>:
   27154:	push	{r4, lr}
   27158:	bl	26cfc <str_set_visit@@Base+0x68>
   2715c:	pop	{r4, pc}

00027160 <ptr_set_destroy@@Base>:
   27160:	push	{r4, lr}
   27164:	mov	r4, r0
   27168:	cmp	r1, #0
   2716c:	beq	27174 <ptr_set_destroy@@Base+0x14>
   27170:	bl	26ca0 <str_set_visit@@Base+0xc>
   27174:	mov	r0, r4
   27178:	bl	26cfc <str_set_visit@@Base+0x68>
   2717c:	pop	{r4, pc}

00027180 <ptr_set_init@@Base>:
   27180:	push	{r4, r5, r6, lr}
   27184:	mov	r5, r0
   27188:	cmp	r1, #2
   2718c:	bls	271d4 <ptr_set_init@@Base+0x54>
   27190:	mov	r4, #4
   27194:	mov	r2, #179	; 0xb3
   27198:	lsl	r4, r4, #1
   2719c:	mul	r3, r2, r4
   271a0:	cmp	r1, r3, lsr #8
   271a4:	bhi	27198 <ptr_set_init@@Base+0x18>
   271a8:	mov	r1, #4
   271ac:	mov	r0, r4
   271b0:	bl	13ea0 <calloc@plt>
   271b4:	str	r0, [r5]
   271b8:	cmp	r0, #0
   271bc:	movne	r0, #0
   271c0:	strne	r0, [r5, #4]
   271c4:	strne	r4, [r5, #12]
   271c8:	strne	r0, [r5, #8]
   271cc:	mvneq	r0, #0
   271d0:	pop	{r4, r5, r6, pc}
   271d4:	mov	r4, #4
   271d8:	b	271a8 <ptr_set_init@@Base+0x28>

000271dc <ptr_set_resize@@Base>:
   271dc:	push	{r4, lr}
   271e0:	bl	26f0c <str_set_visit@@Base+0x278>
   271e4:	pop	{r4, pc}

000271e8 <ptr_set_insert@@Base>:
   271e8:	push	{lr}		; (str lr, [sp, #-4]!)
   271ec:	sub	sp, sp, #12
   271f0:	ldr	ip, [sp, #16]
   271f4:	str	ip, [sp]
   271f8:	bl	26d2c <str_set_visit@@Base+0x98>
   271fc:	add	sp, sp, #12
   27200:	pop	{pc}		; (ldr pc, [sp], #4)

00027204 <ptr_set_insert_item@@Base>:
   27204:	push	{lr}		; (str lr, [sp, #-4]!)
   27208:	sub	sp, sp, #12
   2720c:	str	r2, [sp]
   27210:	mov	r3, r1
   27214:	mov	r2, #4
   27218:	bl	26d2c <str_set_visit@@Base+0x98>
   2721c:	add	sp, sp, #12
   27220:	pop	{pc}		; (ldr pc, [sp], #4)

00027224 <ptr_set_find@@Base>:
   27224:	push	{r4, lr}
   27228:	bl	27004 <str_set_visit@@Base+0x370>
   2722c:	pop	{r4, pc}

00027230 <ptr_set_find_item@@Base>:
   27230:	push	{r4, lr}
   27234:	mov	r2, #4
   27238:	bl	27004 <str_set_visit@@Base+0x370>
   2723c:	pop	{r4, pc}

00027240 <ptr_set_remove@@Base>:
   27240:	push	{r4, lr}
   27244:	bl	2709c <str_set_visit@@Base+0x408>
   27248:	pop	{r4, pc}

0002724c <ptr_set_remove_item@@Base>:
   2724c:	push	{r4, lr}
   27250:	mov	r2, #4
   27254:	bl	2709c <str_set_visit@@Base+0x408>
   27258:	pop	{r4, pc}

0002725c <ptr_set_visit@@Base>:
   2725c:	push	{r4, lr}
   27260:	bl	26ca0 <str_set_visit@@Base+0xc>
   27264:	pop	{r4, pc}
   27268:	push	{r4, r5, r6, r7, r8, lr}
   2726c:	ldr	r5, [r0]
   27270:	ldr	r3, [r0, #12]
   27274:	cmp	r3, #0
   27278:	popeq	{r4, r5, r6, r7, r8, pc}
   2727c:	mov	r8, r2
   27280:	mov	r7, r1
   27284:	mov	r6, r0
   27288:	sub	r5, r5, #4
   2728c:	mov	r4, #0
   27290:	b	272a4 <ptr_set_visit@@Base+0x48>
   27294:	add	r4, r4, #1
   27298:	ldr	r3, [r6, #12]
   2729c:	cmp	r3, r4
   272a0:	bls	272c0 <ptr_set_visit@@Base+0x64>
   272a4:	ldr	r1, [r5, #4]!
   272a8:	cmp	r1, #0
   272ac:	cmpne	r1, #2
   272b0:	beq	27294 <ptr_set_visit@@Base+0x38>
   272b4:	mov	r0, r8
   272b8:	blx	r7
   272bc:	b	27294 <ptr_set_visit@@Base+0x38>
   272c0:	pop	{r4, r5, r6, r7, r8, pc}
   272c4:	push	{r4, lr}
   272c8:	mov	r4, r0
   272cc:	ldr	r0, [r0]
   272d0:	cmp	r0, #0
   272d4:	beq	272dc <ptr_set_visit@@Base+0x80>
   272d8:	bl	13ed0 <free@plt>
   272dc:	mov	r3, #0
   272e0:	str	r3, [r4]
   272e4:	str	r3, [r4, #4]
   272e8:	str	r3, [r4, #8]
   272ec:	str	r3, [r4, #12]
   272f0:	pop	{r4, pc}
   272f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   272f8:	sub	sp, sp, #28
   272fc:	str	r1, [sp, #8]
   27300:	cmp	r3, #0
   27304:	str	r3, [sp, #12]
   27308:	beq	273b8 <ptr_set_visit@@Base+0x15c>
   2730c:	mov	fp, r0
   27310:	mov	r8, r2
   27314:	ldr	r3, [sp, #12]
   27318:	cmp	r3, #2
   2731c:	beq	273cc <ptr_set_visit@@Base+0x170>
   27320:	ldr	r3, [sp, #12]
   27324:	cmp	r3, #1
   27328:	beq	273e0 <ptr_set_visit@@Base+0x184>
   2732c:	ldr	r1, [r0, #8]
   27330:	ldr	r2, [r0, #12]
   27334:	mov	r3, #179	; 0xb3
   27338:	mul	r3, r3, r2
   2733c:	cmp	r1, r3, lsr #8
   27340:	bcc	27354 <ptr_set_visit@@Base+0xf8>
   27344:	lsl	r1, r1, #1
   27348:	bl	27514 <ptr_set_visit@@Base+0x2b8>
   2734c:	cmp	r0, #0
   27350:	bne	273f4 <ptr_set_visit@@Base+0x198>
   27354:	ldr	r6, [fp]
   27358:	ldr	r7, [fp, #12]
   2735c:	sub	r7, r7, #1
   27360:	add	r3, sp, #16
   27364:	str	r3, [sp, #4]
   27368:	ldr	r3, [pc, #384]	; 274f0 <ptr_set_visit@@Base+0x294>
   2736c:	str	r3, [sp]
   27370:	mov	r2, r8
   27374:	mov	r3, #0
   27378:	ldr	r0, [sp, #8]
   2737c:	bl	37760 <cmetrohash64_1@@Base>
   27380:	ldr	r5, [sp, #16]
   27384:	and	r3, r7, r5
   27388:	ldr	r2, [sp, #64]	; 0x40
   2738c:	sub	r2, r2, #2
   27390:	cmp	r2, #1
   27394:	bls	27410 <ptr_set_visit@@Base+0x1b4>
   27398:	add	r9, r6, r3, lsl #2
   2739c:	ldr	r4, [r6, r3, lsl #2]
   273a0:	cmp	r4, #0
   273a4:	moveq	sl, r9
   273a8:	beq	274cc <ptr_set_visit@@Base+0x270>
   273ac:	add	r5, r5, #1
   273b0:	mov	sl, #0
   273b4:	b	27480 <ptr_set_visit@@Base+0x224>
   273b8:	ldr	r3, [pc, #308]	; 274f4 <ptr_set_visit@@Base+0x298>
   273bc:	mov	r2, #114	; 0x72
   273c0:	ldr	r1, [pc, #304]	; 274f8 <ptr_set_visit@@Base+0x29c>
   273c4:	ldr	r0, [pc, #304]	; 274fc <ptr_set_visit@@Base+0x2a0>
   273c8:	bl	14038 <__assert_fail@plt>
   273cc:	ldr	r3, [pc, #288]	; 274f4 <ptr_set_visit@@Base+0x298>
   273d0:	mov	r2, #115	; 0x73
   273d4:	ldr	r1, [pc, #284]	; 274f8 <ptr_set_visit@@Base+0x29c>
   273d8:	ldr	r0, [pc, #288]	; 27500 <ptr_set_visit@@Base+0x2a4>
   273dc:	bl	14038 <__assert_fail@plt>
   273e0:	ldr	r3, [pc, #268]	; 274f4 <ptr_set_visit@@Base+0x298>
   273e4:	mov	r2, #116	; 0x74
   273e8:	ldr	r1, [pc, #264]	; 274f8 <ptr_set_visit@@Base+0x29c>
   273ec:	ldr	r0, [pc, #272]	; 27504 <ptr_set_visit@@Base+0x2a8>
   273f0:	bl	14038 <__assert_fail@plt>
   273f4:	ldr	r2, [pc, #268]	; 27508 <ptr_set_visit@@Base+0x2ac>
   273f8:	ldr	r1, [pc, #268]	; 2750c <ptr_set_visit@@Base+0x2b0>
   273fc:	ldr	r3, [pc, #268]	; 27510 <ptr_set_visit@@Base+0x2b4>
   27400:	ldr	r0, [r3]
   27404:	bl	13f84 <fprintf@plt>
   27408:	mov	r0, #1
   2740c:	bl	13f6c <exit@plt>
   27410:	ldr	r2, [fp, #8]
   27414:	add	r2, r2, #1
   27418:	str	r2, [fp, #8]
   2741c:	add	r2, r6, r3, lsl #2
   27420:	ldr	r3, [r6, r3, lsl #2]
   27424:	cmp	r3, #0
   27428:	cmpne	r3, #2
   2742c:	beq	27450 <ptr_set_visit@@Base+0x1f4>
   27430:	add	r5, r5, #1
   27434:	and	r3, r5, r7
   27438:	add	r2, r6, r3, lsl #2
   2743c:	ldr	r3, [r6, r3, lsl #2]
   27440:	add	r5, r5, #1
   27444:	cmp	r3, #0
   27448:	cmpne	r3, #2
   2744c:	bne	27434 <ptr_set_visit@@Base+0x1d8>
   27450:	ldr	r3, [sp, #12]
   27454:	str	r3, [r2]
   27458:	mov	r4, #0
   2745c:	b	274e4 <ptr_set_visit@@Base+0x288>
   27460:	cmp	sl, #0
   27464:	moveq	sl, r9
   27468:	and	r3, r7, r5
   2746c:	add	r9, r6, r3, lsl #2
   27470:	ldr	r4, [r6, r3, lsl #2]
   27474:	add	r5, r5, #1
   27478:	cmp	r4, #0
   2747c:	beq	274c4 <ptr_set_visit@@Base+0x268>
   27480:	cmp	r4, #2
   27484:	beq	27460 <ptr_set_visit@@Base+0x204>
   27488:	ldr	r3, [r4, #4]
   2748c:	ldr	r2, [r3, #4]
   27490:	cmp	r8, r2
   27494:	bne	27468 <ptr_set_visit@@Base+0x20c>
   27498:	mov	r2, r8
   2749c:	ldr	r1, [r3]
   274a0:	ldr	r0, [sp, #8]
   274a4:	bl	13ef4 <memcmp@plt>
   274a8:	cmp	r0, #0
   274ac:	bne	27468 <ptr_set_visit@@Base+0x20c>
   274b0:	ldr	r3, [sp, #64]	; 0x40
   274b4:	cmp	r3, #0
   274b8:	ldreq	r3, [sp, #12]
   274bc:	streq	r3, [r9]
   274c0:	b	274e4 <ptr_set_visit@@Base+0x288>
   274c4:	cmp	sl, #0
   274c8:	moveq	sl, r9
   274cc:	ldr	r3, [fp, #8]
   274d0:	add	r3, r3, #1
   274d4:	str	r3, [fp, #8]
   274d8:	ldr	r3, [sp, #12]
   274dc:	str	r3, [sl]
   274e0:	mov	r4, #0
   274e4:	mov	r0, r4
   274e8:	add	sp, sp, #28
   274ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   274f0:	svccs	0x00693b52
   274f4:	andeq	r2, r5, r4, ror #7
   274f8:	andeq	r2, r5, r8, ror #5
   274fc:	andeq	r2, r5, r8, lsr r3
   27500:	andeq	r2, r5, r0, asr r3
   27504:	andeq	r2, r5, r8, ror #6
   27508:	andeq	r2, r5, r0, lsl #7
   2750c:			; <UNDEFINED> instruction: 0x000523b4
   27510:	andeq	r6, r6, r8, lsr #1
   27514:	push	{r4, r5, r6, r7, lr}
   27518:	sub	sp, sp, #28
   2751c:	mov	r6, r0
   27520:	ldr	r5, [r0]
   27524:	ldr	r3, [r0, #8]
   27528:	cmp	r1, r3
   2752c:	movcc	r1, r3
   27530:	cmp	r1, #2
   27534:	bls	27594 <ptr_set_visit@@Base+0x338>
   27538:	mov	r4, #4
   2753c:	mov	r2, #179	; 0xb3
   27540:	lsl	r4, r4, #1
   27544:	mul	r3, r2, r4
   27548:	cmp	r1, r3, lsr #8
   2754c:	bhi	27540 <ptr_set_visit@@Base+0x2e4>
   27550:	mov	r1, #4
   27554:	mov	r0, r4
   27558:	bl	13ea0 <calloc@plt>
   2755c:	str	r0, [sp, #8]
   27560:	cmp	r0, #0
   27564:	beq	27604 <ptr_set_visit@@Base+0x3a8>
   27568:	mov	r3, #0
   2756c:	str	r3, [sp, #12]
   27570:	str	r4, [sp, #20]
   27574:	str	r3, [sp, #16]
   27578:	ldr	r3, [r6, #12]
   2757c:	cmp	r3, #0
   27580:	beq	275d8 <ptr_set_visit@@Base+0x37c>
   27584:	sub	r5, r5, #4
   27588:	mov	r4, #0
   2758c:	mov	r7, #3
   27590:	b	275ac <ptr_set_visit@@Base+0x350>
   27594:	mov	r4, #4
   27598:	b	27550 <ptr_set_visit@@Base+0x2f4>
   2759c:	add	r4, r4, #1
   275a0:	ldr	r3, [r6, #12]
   275a4:	cmp	r3, r4
   275a8:	bls	275d8 <ptr_set_visit@@Base+0x37c>
   275ac:	ldr	r3, [r5, #4]!
   275b0:	cmp	r3, #0
   275b4:	cmpne	r3, #2
   275b8:	beq	2759c <ptr_set_visit@@Base+0x340>
   275bc:	ldr	r1, [r3, #4]
   275c0:	ldr	r2, [r1, #4]
   275c4:	ldr	r1, [r1]
   275c8:	str	r7, [sp]
   275cc:	add	r0, sp, #8
   275d0:	bl	272f4 <ptr_set_visit@@Base+0x98>
   275d4:	b	2759c <ptr_set_visit@@Base+0x340>
   275d8:	mov	r0, r6
   275dc:	bl	272c4 <ptr_set_visit@@Base+0x68>
   275e0:	add	ip, sp, #8
   275e4:	ldm	ip!, {r0, r1, r2, r3}
   275e8:	str	r0, [r6]
   275ec:	str	r1, [r6, #4]
   275f0:	str	r2, [r6, #8]
   275f4:	str	r3, [r6, #12]
   275f8:	mov	r0, #0
   275fc:	add	sp, sp, #28
   27600:	pop	{r4, r5, r6, r7, pc}
   27604:	mvn	r0, #0
   27608:	b	275fc <ptr_set_visit@@Base+0x3a0>
   2760c:	push	{r4, r5, r6, r7, r8, r9, lr}
   27610:	sub	sp, sp, #20
   27614:	ldr	r8, [r0]
   27618:	cmp	r8, #0
   2761c:	beq	276b8 <ptr_set_visit@@Base+0x45c>
   27620:	mov	r6, r2
   27624:	mov	r9, r1
   27628:	ldr	r7, [r0, #12]
   2762c:	sub	r7, r7, #1
   27630:	add	r3, sp, #8
   27634:	str	r3, [sp, #4]
   27638:	ldr	r3, [pc, #128]	; 276c0 <ptr_set_visit@@Base+0x464>
   2763c:	str	r3, [sp]
   27640:	mov	r3, #0
   27644:	mov	r0, r1
   27648:	bl	37760 <cmetrohash64_1@@Base>
   2764c:	ldr	r5, [sp, #8]
   27650:	and	r3, r7, r5
   27654:	ldr	r4, [r8, r3, lsl #2]
   27658:	cmp	r4, #0
   2765c:	beq	276ac <ptr_set_visit@@Base+0x450>
   27660:	add	r5, r5, #1
   27664:	b	2767c <ptr_set_visit@@Base+0x420>
   27668:	and	r3, r7, r5
   2766c:	ldr	r4, [r8, r3, lsl #2]
   27670:	add	r5, r5, #1
   27674:	cmp	r4, #0
   27678:	beq	276ac <ptr_set_visit@@Base+0x450>
   2767c:	cmp	r4, #2
   27680:	beq	27668 <ptr_set_visit@@Base+0x40c>
   27684:	ldr	r3, [r4, #4]
   27688:	ldr	r2, [r3, #4]
   2768c:	cmp	r6, r2
   27690:	bne	27668 <ptr_set_visit@@Base+0x40c>
   27694:	mov	r2, r6
   27698:	ldr	r1, [r3]
   2769c:	mov	r0, r9
   276a0:	bl	13ef4 <memcmp@plt>
   276a4:	cmp	r0, #0
   276a8:	bne	27668 <ptr_set_visit@@Base+0x40c>
   276ac:	mov	r0, r4
   276b0:	add	sp, sp, #20
   276b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   276b8:	mov	r4, #0
   276bc:	b	276ac <ptr_set_visit@@Base+0x450>
   276c0:	svccs	0x00693b52
   276c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   276c8:	sub	sp, sp, #20
   276cc:	ldr	r6, [r0]
   276d0:	cmp	r6, #0
   276d4:	beq	27790 <ptr_set_visit@@Base+0x534>
   276d8:	mov	r7, r2
   276dc:	mov	sl, r1
   276e0:	mov	fp, r0
   276e4:	ldr	r8, [r0, #12]
   276e8:	sub	r8, r8, #1
   276ec:	add	r3, sp, #8
   276f0:	str	r3, [sp, #4]
   276f4:	ldr	r3, [pc, #156]	; 27798 <ptr_set_visit@@Base+0x53c>
   276f8:	str	r3, [sp]
   276fc:	mov	r3, #0
   27700:	mov	r0, r1
   27704:	bl	37760 <cmetrohash64_1@@Base>
   27708:	ldr	r5, [sp, #8]
   2770c:	and	r3, r8, r5
   27710:	add	r9, r6, r3, lsl #2
   27714:	ldr	r4, [r6, r3, lsl #2]
   27718:	cmp	r4, #0
   2771c:	beq	27784 <ptr_set_visit@@Base+0x528>
   27720:	add	r5, r5, #1
   27724:	b	27740 <ptr_set_visit@@Base+0x4e4>
   27728:	and	r3, r8, r5
   2772c:	add	r9, r6, r3, lsl #2
   27730:	ldr	r4, [r6, r3, lsl #2]
   27734:	add	r5, r5, #1
   27738:	cmp	r4, #0
   2773c:	beq	27784 <ptr_set_visit@@Base+0x528>
   27740:	cmp	r4, #2
   27744:	beq	27728 <ptr_set_visit@@Base+0x4cc>
   27748:	ldr	r3, [r4, #4]
   2774c:	ldr	r2, [r3, #4]
   27750:	cmp	r7, r2
   27754:	bne	27728 <ptr_set_visit@@Base+0x4cc>
   27758:	mov	r2, r7
   2775c:	ldr	r1, [r3]
   27760:	mov	r0, sl
   27764:	bl	13ef4 <memcmp@plt>
   27768:	cmp	r0, #0
   2776c:	bne	27728 <ptr_set_visit@@Base+0x4cc>
   27770:	mov	r3, #2
   27774:	str	r3, [r9]
   27778:	ldr	r3, [fp, #8]
   2777c:	sub	r3, r3, #1
   27780:	str	r3, [fp, #8]
   27784:	mov	r0, r4
   27788:	add	sp, sp, #20
   2778c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27790:	mov	r4, #0
   27794:	b	27784 <ptr_set_visit@@Base+0x528>
   27798:	svccs	0x00693b52

0002779c <fb_symbol_table_clear@@Base>:
   2779c:	push	{r4, lr}
   277a0:	bl	272c4 <ptr_set_visit@@Base+0x68>
   277a4:	pop	{r4, pc}

000277a8 <fb_symbol_table_destroy@@Base>:
   277a8:	push	{r4, lr}
   277ac:	mov	r4, r0
   277b0:	cmp	r1, #0
   277b4:	beq	277bc <fb_symbol_table_destroy@@Base+0x14>
   277b8:	bl	27268 <ptr_set_visit@@Base+0xc>
   277bc:	mov	r0, r4
   277c0:	bl	272c4 <ptr_set_visit@@Base+0x68>
   277c4:	pop	{r4, pc}

000277c8 <fb_symbol_table_init@@Base>:
   277c8:	push	{r4, r5, r6, lr}
   277cc:	mov	r5, r0
   277d0:	cmp	r1, #2
   277d4:	bls	2781c <fb_symbol_table_init@@Base+0x54>
   277d8:	mov	r4, #4
   277dc:	mov	r2, #179	; 0xb3
   277e0:	lsl	r4, r4, #1
   277e4:	mul	r3, r2, r4
   277e8:	cmp	r1, r3, lsr #8
   277ec:	bhi	277e0 <fb_symbol_table_init@@Base+0x18>
   277f0:	mov	r1, #4
   277f4:	mov	r0, r4
   277f8:	bl	13ea0 <calloc@plt>
   277fc:	str	r0, [r5]
   27800:	cmp	r0, #0
   27804:	movne	r0, #0
   27808:	strne	r0, [r5, #4]
   2780c:	strne	r4, [r5, #12]
   27810:	strne	r0, [r5, #8]
   27814:	mvneq	r0, #0
   27818:	pop	{r4, r5, r6, pc}
   2781c:	mov	r4, #4
   27820:	b	277f0 <fb_symbol_table_init@@Base+0x28>

00027824 <fb_symbol_table_resize@@Base>:
   27824:	push	{r4, lr}
   27828:	bl	27514 <ptr_set_visit@@Base+0x2b8>
   2782c:	pop	{r4, pc}

00027830 <fb_symbol_table_insert@@Base>:
   27830:	push	{lr}		; (str lr, [sp, #-4]!)
   27834:	sub	sp, sp, #12
   27838:	ldr	ip, [sp, #16]
   2783c:	str	ip, [sp]
   27840:	bl	272f4 <ptr_set_visit@@Base+0x98>
   27844:	add	sp, sp, #12
   27848:	pop	{pc}		; (ldr pc, [sp], #4)

0002784c <fb_symbol_table_insert_item@@Base>:
   2784c:	push	{lr}		; (str lr, [sp, #-4]!)
   27850:	sub	sp, sp, #12
   27854:	mov	r3, r1
   27858:	ldr	r1, [r1, #4]
   2785c:	ldr	ip, [r1, #4]
   27860:	ldr	r1, [r1]
   27864:	str	r2, [sp]
   27868:	mov	r2, ip
   2786c:	bl	272f4 <ptr_set_visit@@Base+0x98>
   27870:	add	sp, sp, #12
   27874:	pop	{pc}		; (ldr pc, [sp], #4)

00027878 <fb_symbol_table_find@@Base>:
   27878:	push	{r4, lr}
   2787c:	bl	2760c <ptr_set_visit@@Base+0x3b0>
   27880:	pop	{r4, pc}

00027884 <fb_symbol_table_find_item@@Base>:
   27884:	push	{r4, lr}
   27888:	ldr	r3, [r1, #4]
   2788c:	ldr	r2, [r3, #4]
   27890:	ldr	r1, [r3]
   27894:	bl	2760c <ptr_set_visit@@Base+0x3b0>
   27898:	pop	{r4, pc}

0002789c <fb_symbol_table_remove@@Base>:
   2789c:	push	{r4, lr}
   278a0:	bl	276c4 <ptr_set_visit@@Base+0x468>
   278a4:	pop	{r4, pc}

000278a8 <fb_symbol_table_remove_item@@Base>:
   278a8:	push	{r4, lr}
   278ac:	ldr	r3, [r1, #4]
   278b0:	ldr	r2, [r3, #4]
   278b4:	ldr	r1, [r3]
   278b8:	bl	276c4 <ptr_set_visit@@Base+0x468>
   278bc:	pop	{r4, pc}

000278c0 <fb_symbol_table_visit@@Base>:
   278c0:	push	{r4, lr}
   278c4:	bl	27268 <ptr_set_visit@@Base+0xc>
   278c8:	pop	{r4, pc}
   278cc:	push	{r4, r5, r6, r7, r8, lr}
   278d0:	ldr	r5, [r0]
   278d4:	ldr	r3, [r0, #12]
   278d8:	cmp	r3, #0
   278dc:	popeq	{r4, r5, r6, r7, r8, pc}
   278e0:	mov	r8, r2
   278e4:	mov	r7, r1
   278e8:	mov	r6, r0
   278ec:	sub	r5, r5, #4
   278f0:	mov	r4, #0
   278f4:	b	27908 <fb_symbol_table_visit@@Base+0x48>
   278f8:	add	r4, r4, #1
   278fc:	ldr	r3, [r6, #12]
   27900:	cmp	r3, r4
   27904:	bls	27924 <fb_symbol_table_visit@@Base+0x64>
   27908:	ldr	r1, [r5, #4]!
   2790c:	cmp	r1, #0
   27910:	cmpne	r1, #2
   27914:	beq	278f8 <fb_symbol_table_visit@@Base+0x38>
   27918:	mov	r0, r8
   2791c:	blx	r7
   27920:	b	278f8 <fb_symbol_table_visit@@Base+0x38>
   27924:	pop	{r4, r5, r6, r7, r8, pc}
   27928:	push	{r4, lr}
   2792c:	mov	r4, r0
   27930:	ldr	r0, [r0]
   27934:	cmp	r0, #0
   27938:	beq	27940 <fb_symbol_table_visit@@Base+0x80>
   2793c:	bl	13ed0 <free@plt>
   27940:	mov	r3, #0
   27944:	str	r3, [r4]
   27948:	str	r3, [r4, #4]
   2794c:	str	r3, [r4, #8]
   27950:	str	r3, [r4, #12]
   27954:	pop	{r4, pc}
   27958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2795c:	sub	sp, sp, #28
   27960:	str	r0, [sp, #20]
   27964:	str	r1, [sp, #8]
   27968:	str	r2, [sp, #12]
   2796c:	cmp	r3, #0
   27970:	str	r3, [sp, #16]
   27974:	beq	27a04 <fb_symbol_table_visit@@Base+0x144>
   27978:	ldr	r3, [sp, #16]
   2797c:	cmp	r3, #2
   27980:	beq	27a18 <fb_symbol_table_visit@@Base+0x158>
   27984:	ldr	r3, [sp, #16]
   27988:	cmp	r3, #1
   2798c:	beq	27a2c <fb_symbol_table_visit@@Base+0x16c>
   27990:	ldr	r0, [sp, #20]
   27994:	ldr	r1, [r0, #8]
   27998:	ldr	r2, [r0, #12]
   2799c:	mov	r3, #179	; 0xb3
   279a0:	mul	r3, r3, r2
   279a4:	cmp	r1, r3, lsr #8
   279a8:	bcc	279bc <fb_symbol_table_visit@@Base+0xfc>
   279ac:	lsl	r1, r1, #1
   279b0:	bl	27e88 <fb_symbol_table_visit@@Base+0x5c8>
   279b4:	cmp	r0, #0
   279b8:	bne	27a40 <fb_symbol_table_visit@@Base+0x180>
   279bc:	ldr	r3, [sp, #20]
   279c0:	ldr	r7, [r3]
   279c4:	ldr	r3, [r3, #12]
   279c8:	sub	r3, r3, #1
   279cc:	str	r3, [sp]
   279d0:	ldr	r3, [sp, #12]
   279d4:	str	r3, [sp, #4]
   279d8:	cmp	r3, #0
   279dc:	ble	27ad4 <fb_symbol_table_visit@@Base+0x214>
   279e0:	ldr	r5, [sp, #8]
   279e4:	mov	lr, r3
   279e8:	mov	r4, #0
   279ec:	mvn	fp, #0
   279f0:	ldr	sl, [pc, #1124]	; 27e5c <fb_symbol_table_visit@@Base+0x59c>
   279f4:	ldr	r8, [pc, #1124]	; 27e60 <fb_symbol_table_visit@@Base+0x5a0>
   279f8:	ldr	r6, [pc, #1124]	; 27e64 <fb_symbol_table_visit@@Base+0x5a4>
   279fc:	mov	r9, r4
   27a00:	b	27b60 <fb_symbol_table_visit@@Base+0x2a0>
   27a04:	ldr	r3, [pc, #1116]	; 27e68 <fb_symbol_table_visit@@Base+0x5a8>
   27a08:	mov	r2, #114	; 0x72
   27a0c:	ldr	r1, [pc, #1112]	; 27e6c <fb_symbol_table_visit@@Base+0x5ac>
   27a10:	ldr	r0, [pc, #1112]	; 27e70 <fb_symbol_table_visit@@Base+0x5b0>
   27a14:	bl	14038 <__assert_fail@plt>
   27a18:	ldr	r3, [pc, #1096]	; 27e68 <fb_symbol_table_visit@@Base+0x5a8>
   27a1c:	mov	r2, #115	; 0x73
   27a20:	ldr	r1, [pc, #1092]	; 27e6c <fb_symbol_table_visit@@Base+0x5ac>
   27a24:	ldr	r0, [pc, #1096]	; 27e74 <fb_symbol_table_visit@@Base+0x5b4>
   27a28:	bl	14038 <__assert_fail@plt>
   27a2c:	ldr	r3, [pc, #1076]	; 27e68 <fb_symbol_table_visit@@Base+0x5a8>
   27a30:	mov	r2, #116	; 0x74
   27a34:	ldr	r1, [pc, #1072]	; 27e6c <fb_symbol_table_visit@@Base+0x5ac>
   27a38:	ldr	r0, [pc, #1080]	; 27e78 <fb_symbol_table_visit@@Base+0x5b8>
   27a3c:	bl	14038 <__assert_fail@plt>
   27a40:	ldr	r2, [pc, #1076]	; 27e7c <fb_symbol_table_visit@@Base+0x5bc>
   27a44:	ldr	r1, [pc, #1076]	; 27e80 <fb_symbol_table_visit@@Base+0x5c0>
   27a48:	ldr	r3, [pc, #1076]	; 27e84 <fb_symbol_table_visit@@Base+0x5c4>
   27a4c:	ldr	r0, [r3]
   27a50:	bl	13f84 <fprintf@plt>
   27a54:	mov	r0, #1
   27a58:	bl	13f6c <exit@plt>
   27a5c:	mov	r3, r9
   27a60:	eor	r4, r4, r6
   27a64:	eor	r3, r3, r4
   27a68:	mul	r4, r5, r3
   27a6c:	ldr	ip, [ip]
   27a70:	adds	lr, lr, #1
   27a74:	beq	27e24 <fb_symbol_table_visit@@Base+0x564>
   27a78:	cmp	ip, #0
   27a7c:	beq	27e24 <fb_symbol_table_visit@@Base+0x564>
   27a80:	ldr	r3, [ip, #4]
   27a84:	ldr	r0, [r3]
   27a88:	ldr	r3, [r3, #4]
   27a8c:	subs	r3, r3, #1
   27a90:	beq	27a5c <fb_symbol_table_visit@@Base+0x19c>
   27a94:	add	r1, r0, #1
   27a98:	ldrb	r2, [r0]
   27a9c:	cmp	r2, #0
   27aa0:	beq	27acc <fb_symbol_table_visit@@Base+0x20c>
   27aa4:	add	r0, r0, r3
   27aa8:	mov	r3, r9
   27aac:	add	r3, r3, r3, lsl #5
   27ab0:	eor	r3, r3, r2
   27ab4:	cmp	r0, r1
   27ab8:	beq	27a60 <fb_symbol_table_visit@@Base+0x1a0>
   27abc:	ldrb	r2, [r1], #1
   27ac0:	cmp	r2, #0
   27ac4:	bne	27aac <fb_symbol_table_visit@@Base+0x1ec>
   27ac8:	b	27a60 <fb_symbol_table_visit@@Base+0x1a0>
   27acc:	mov	r3, r9
   27ad0:	b	27a60 <fb_symbol_table_visit@@Base+0x1a0>
   27ad4:	ldr	r3, [sp, #8]
   27ad8:	cmp	r3, #0
   27adc:	moveq	r4, #0
   27ae0:	beq	27e24 <fb_symbol_table_visit@@Base+0x564>
   27ae4:	ldr	lr, [sp, #12]
   27ae8:	ldr	ip, [sp, #8]
   27aec:	mov	r4, #0
   27af0:	ldr	r9, [pc, #868]	; 27e5c <fb_symbol_table_visit@@Base+0x59c>
   27af4:	ldr	r6, [pc, #868]	; 27e60 <fb_symbol_table_visit@@Base+0x5a0>
   27af8:	ldr	r5, [pc, #868]	; 27e64 <fb_symbol_table_visit@@Base+0x5a4>
   27afc:	b	27a80 <fb_symbol_table_visit@@Base+0x1c0>
   27b00:	cmp	r1, #0
   27b04:	beq	27e14 <fb_symbol_table_visit@@Base+0x554>
   27b08:	add	ip, r5, #1
   27b0c:	ldrb	r0, [r5]
   27b10:	cmp	r0, #0
   27b14:	beq	27de8 <fb_symbol_table_visit@@Base+0x528>
   27b18:	add	r1, r5, r1
   27b1c:	mov	r3, sl
   27b20:	add	r3, r3, r3, lsl #5
   27b24:	eor	r3, r3, r0
   27b28:	cmp	r1, ip
   27b2c:	beq	27b3c <fb_symbol_table_visit@@Base+0x27c>
   27b30:	ldrb	r0, [ip], #1
   27b34:	cmp	r0, #0
   27b38:	bne	27b20 <fb_symbol_table_visit@@Base+0x260>
   27b3c:	eor	r4, r4, r8
   27b40:	eor	r3, r3, r4
   27b44:	mul	r4, r6, r3
   27b48:	cmp	lr, r2
   27b4c:	beq	27e24 <fb_symbol_table_visit@@Base+0x564>
   27b50:	mvn	r3, r2
   27b54:	add	lr, lr, r3
   27b58:	add	r2, r2, #1
   27b5c:	add	r5, r5, r2
   27b60:	cmp	lr, #0
   27b64:	beq	27dfc <fb_symbol_table_visit@@Base+0x53c>
   27b68:	ldrb	r3, [r5]
   27b6c:	cmp	r3, #46	; 0x2e
   27b70:	movne	r3, r5
   27b74:	movne	r1, r9
   27b78:	beq	27e08 <fb_symbol_table_visit@@Base+0x548>
   27b7c:	add	r2, r1, #1
   27b80:	cmp	r2, lr
   27b84:	beq	27b00 <fb_symbol_table_visit@@Base+0x240>
   27b88:	ldrb	r0, [r3, #1]!
   27b8c:	cmp	r0, #46	; 0x2e
   27b90:	beq	27dc0 <fb_symbol_table_visit@@Base+0x500>
   27b94:	mov	r1, r2
   27b98:	b	27b7c <fb_symbol_table_visit@@Base+0x2bc>
   27b9c:	ldr	r1, [sp, #20]
   27ba0:	ldr	r2, [r1, #8]
   27ba4:	add	r2, r2, #1
   27ba8:	str	r2, [r1, #8]
   27bac:	add	r2, r7, r3, lsl #2
   27bb0:	ldr	r3, [r7, r3, lsl #2]
   27bb4:	cmp	r3, #0
   27bb8:	cmpne	r3, #2
   27bbc:	beq	27be4 <fb_symbol_table_visit@@Base+0x324>
   27bc0:	add	r4, r4, #1
   27bc4:	ldr	r1, [sp]
   27bc8:	and	r3, r1, r4
   27bcc:	add	r2, r7, r3, lsl #2
   27bd0:	ldr	r3, [r7, r3, lsl #2]
   27bd4:	add	r4, r4, #1
   27bd8:	cmp	r3, #0
   27bdc:	cmpne	r3, #2
   27be0:	bne	27bc8 <fb_symbol_table_visit@@Base+0x308>
   27be4:	ldr	r3, [sp, #16]
   27be8:	str	r3, [r2]
   27bec:	mov	r6, #0
   27bf0:	b	27da4 <fb_symbol_table_visit@@Base+0x4e4>
   27bf4:	cmp	r9, #0
   27bf8:	moveq	r9, r8
   27bfc:	ldr	r3, [sp]
   27c00:	and	r3, r3, r4
   27c04:	add	r8, r7, r3, lsl #2
   27c08:	ldr	r6, [r7, r3, lsl #2]
   27c0c:	add	r4, r4, #1
   27c10:	cmp	r6, #0
   27c14:	beq	27d80 <fb_symbol_table_visit@@Base+0x4c0>
   27c18:	cmp	r6, #2
   27c1c:	beq	27bf4 <fb_symbol_table_visit@@Base+0x334>
   27c20:	ldr	r5, [r6]
   27c24:	ldr	r3, [sp, #4]
   27c28:	cmp	r3, #0
   27c2c:	ble	27c98 <fb_symbol_table_visit@@Base+0x3d8>
   27c30:	cmp	r5, #0
   27c34:	beq	27bfc <fb_symbol_table_visit@@Base+0x33c>
   27c38:	ldr	r3, [r5, #4]
   27c3c:	ldr	r2, [r3]
   27c40:	ldr	lr, [r3, #4]
   27c44:	ldr	r3, [sp, #12]
   27c48:	cmp	r3, lr
   27c4c:	bcc	27bfc <fb_symbol_table_visit@@Base+0x33c>
   27c50:	ldr	sl, [sp, #8]
   27c54:	mov	fp, r3
   27c58:	cmp	lr, #0
   27c5c:	beq	27d24 <fb_symbol_table_visit@@Base+0x464>
   27c60:	ldrb	r1, [r2]
   27c64:	ldrb	r3, [sl]
   27c68:	cmp	r1, r3
   27c6c:	bne	27bfc <fb_symbol_table_visit@@Base+0x33c>
   27c70:	mov	r1, sl
   27c74:	mov	r3, #0
   27c78:	add	r3, r3, #1
   27c7c:	cmp	r3, lr
   27c80:	beq	27d28 <fb_symbol_table_visit@@Base+0x468>
   27c84:	ldrb	ip, [r2, #1]!
   27c88:	ldrb	r0, [r1, #1]!
   27c8c:	cmp	ip, r0
   27c90:	beq	27c78 <fb_symbol_table_visit@@Base+0x3b8>
   27c94:	b	27bfc <fb_symbol_table_visit@@Base+0x33c>
   27c98:	ldr	sl, [sp, #8]
   27c9c:	ldr	fp, [sp, #4]
   27ca0:	adds	r3, r5, #0
   27ca4:	movne	r3, #1
   27ca8:	adds	r2, sl, #0
   27cac:	movne	r2, #1
   27cb0:	tst	r3, r2
   27cb4:	beq	27d00 <fb_symbol_table_visit@@Base+0x440>
   27cb8:	ldr	r3, [r5, #4]
   27cbc:	ldr	r2, [r3, #4]
   27cc0:	ldr	r1, [sl, #4]
   27cc4:	ldr	r0, [r1, #4]
   27cc8:	cmp	r2, r0
   27ccc:	bne	27bfc <fb_symbol_table_visit@@Base+0x33c>
   27cd0:	ldr	r1, [r1]
   27cd4:	ldr	r0, [r3]
   27cd8:	bl	14020 <strncmp@plt>
   27cdc:	cmp	r0, #0
   27ce0:	bne	27bfc <fb_symbol_table_visit@@Base+0x33c>
   27ce4:	ldr	r5, [r5]
   27ce8:	ldr	sl, [sl]
   27cec:	adds	fp, fp, #1
   27cf0:	bne	27ca0 <fb_symbol_table_visit@@Base+0x3e0>
   27cf4:	clz	r5, r5
   27cf8:	lsr	r5, r5, #5
   27cfc:	b	27d08 <fb_symbol_table_visit@@Base+0x448>
   27d00:	orr	r5, r3, r2
   27d04:	eor	r5, r5, #1
   27d08:	cmp	r5, #0
   27d0c:	beq	27bfc <fb_symbol_table_visit@@Base+0x33c>
   27d10:	ldr	r3, [sp, #64]	; 0x40
   27d14:	cmp	r3, #0
   27d18:	ldreq	r3, [sp, #16]
   27d1c:	streq	r3, [r8]
   27d20:	b	27da4 <fb_symbol_table_visit@@Base+0x4e4>
   27d24:	mov	r3, lr
   27d28:	cmp	lr, fp
   27d2c:	beq	27d70 <fb_symbol_table_visit@@Base+0x4b0>
   27d30:	ldrb	r3, [sl, r3]
   27d34:	cmp	r3, #46	; 0x2e
   27d38:	bne	27bfc <fb_symbol_table_visit@@Base+0x33c>
   27d3c:	mvn	r3, lr
   27d40:	add	fp, fp, r3
   27d44:	add	lr, lr, #1
   27d48:	add	sl, sl, lr
   27d4c:	ldr	r5, [r5]
   27d50:	cmp	r5, #0
   27d54:	beq	27bfc <fb_symbol_table_visit@@Base+0x33c>
   27d58:	ldr	r3, [r5, #4]
   27d5c:	ldr	r2, [r3]
   27d60:	ldr	lr, [r3, #4]
   27d64:	cmp	lr, fp
   27d68:	bls	27c58 <fb_symbol_table_visit@@Base+0x398>
   27d6c:	b	27bfc <fb_symbol_table_visit@@Base+0x33c>
   27d70:	ldr	r5, [r5]
   27d74:	clz	r5, r5
   27d78:	lsr	r5, r5, #5
   27d7c:	b	27d08 <fb_symbol_table_visit@@Base+0x448>
   27d80:	cmp	r9, #0
   27d84:	moveq	r9, r8
   27d88:	ldr	r2, [sp, #20]
   27d8c:	ldr	r3, [r2, #8]
   27d90:	add	r3, r3, #1
   27d94:	str	r3, [r2, #8]
   27d98:	ldr	r3, [sp, #16]
   27d9c:	str	r3, [r9]
   27da0:	mov	r6, #0
   27da4:	mov	r0, r6
   27da8:	add	sp, sp, #28
   27dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27db0:	eor	r4, r4, #5376	; 0x1500
   27db4:	eor	r4, r4, #5
   27db8:	mul	r4, r6, r4
   27dbc:	b	27b50 <fb_symbol_table_visit@@Base+0x290>
   27dc0:	cmp	r1, #0
   27dc4:	beq	27db0 <fb_symbol_table_visit@@Base+0x4f0>
   27dc8:	add	ip, r5, #1
   27dcc:	ldrb	r0, [r5]
   27dd0:	cmp	r0, #0
   27dd4:	bne	27b18 <fb_symbol_table_visit@@Base+0x258>
   27dd8:	eor	r4, r4, #5376	; 0x1500
   27ddc:	eor	r4, r4, #5
   27de0:	mul	r4, r6, r4
   27de4:	b	27b50 <fb_symbol_table_visit@@Base+0x290>
   27de8:	eor	r4, r4, #5376	; 0x1500
   27dec:	eor	r4, r4, #5
   27df0:	ldr	r3, [pc, #108]	; 27e64 <fb_symbol_table_visit@@Base+0x5a4>
   27df4:	mul	r4, r3, r4
   27df8:	b	27e24 <fb_symbol_table_visit@@Base+0x564>
   27dfc:	mov	r2, lr
   27e00:	mov	r1, fp
   27e04:	b	27b08 <fb_symbol_table_visit@@Base+0x248>
   27e08:	mov	r1, fp
   27e0c:	mov	r2, r9
   27e10:	b	27dc8 <fb_symbol_table_visit@@Base+0x508>
   27e14:	eor	r4, r4, #5376	; 0x1500
   27e18:	eor	r4, r4, #5
   27e1c:	ldr	r3, [pc, #64]	; 27e64 <fb_symbol_table_visit@@Base+0x5a4>
   27e20:	mul	r4, r3, r4
   27e24:	ldr	r3, [sp]
   27e28:	and	r3, r3, r4
   27e2c:	ldr	r2, [sp, #64]	; 0x40
   27e30:	sub	r2, r2, #2
   27e34:	cmp	r2, #1
   27e38:	bls	27b9c <fb_symbol_table_visit@@Base+0x2dc>
   27e3c:	add	r8, r7, r3, lsl #2
   27e40:	ldr	r6, [r7, r3, lsl #2]
   27e44:	cmp	r6, #0
   27e48:	moveq	r9, r8
   27e4c:	beq	27d88 <fb_symbol_table_visit@@Base+0x4c8>
   27e50:	add	r4, r4, #1
   27e54:	mov	r9, #0
   27e58:	b	27c18 <fb_symbol_table_visit@@Base+0x358>
   27e5c:	svccs	0x00692e57
   27e60:	svccs	0x00693b52
   27e64:			; <UNDEFINED> instruction: 0x9e3779b1
   27e68:	strdeq	r2, [r5], -ip
   27e6c:	andeq	r2, r5, r8, ror #5
   27e70:	andeq	r2, r5, r8, lsr r3
   27e74:	andeq	r2, r5, r0, asr r3
   27e78:	andeq	r2, r5, r8, ror #6
   27e7c:	andeq	r2, r5, r0, lsl #7
   27e80:			; <UNDEFINED> instruction: 0x000523b4
   27e84:	andeq	r6, r6, r8, lsr #1
   27e88:	push	{r4, r5, r6, r7, r8, lr}
   27e8c:	sub	sp, sp, #24
   27e90:	mov	r6, r0
   27e94:	ldr	r5, [r0]
   27e98:	ldr	r3, [r0, #8]
   27e9c:	cmp	r1, r3
   27ea0:	movcc	r1, r3
   27ea4:	cmp	r1, #2
   27ea8:	bls	27f0c <fb_symbol_table_visit@@Base+0x64c>
   27eac:	mov	r4, #4
   27eb0:	mov	r2, #179	; 0xb3
   27eb4:	lsl	r4, r4, #1
   27eb8:	mul	r3, r2, r4
   27ebc:	cmp	r1, r3, lsr #8
   27ec0:	bhi	27eb4 <fb_symbol_table_visit@@Base+0x5f4>
   27ec4:	mov	r1, #4
   27ec8:	mov	r0, r4
   27ecc:	bl	13ea0 <calloc@plt>
   27ed0:	str	r0, [sp, #8]
   27ed4:	cmp	r0, #0
   27ed8:	beq	27f78 <fb_symbol_table_visit@@Base+0x6b8>
   27edc:	mov	r3, #0
   27ee0:	str	r3, [sp, #12]
   27ee4:	str	r4, [sp, #20]
   27ee8:	str	r3, [sp, #16]
   27eec:	ldr	r3, [r6, #12]
   27ef0:	cmp	r3, #0
   27ef4:	beq	27f4c <fb_symbol_table_visit@@Base+0x68c>
   27ef8:	sub	r5, r5, #4
   27efc:	mov	r4, #0
   27f00:	mov	r8, #3
   27f04:	mov	r7, r4
   27f08:	b	27f24 <fb_symbol_table_visit@@Base+0x664>
   27f0c:	mov	r4, #4
   27f10:	b	27ec4 <fb_symbol_table_visit@@Base+0x604>
   27f14:	add	r4, r4, #1
   27f18:	ldr	r3, [r6, #12]
   27f1c:	cmp	r3, r4
   27f20:	bls	27f4c <fb_symbol_table_visit@@Base+0x68c>
   27f24:	ldr	r3, [r5, #4]!
   27f28:	cmp	r3, #0
   27f2c:	cmpne	r3, #2
   27f30:	beq	27f14 <fb_symbol_table_visit@@Base+0x654>
   27f34:	ldr	r1, [r3]
   27f38:	str	r8, [sp]
   27f3c:	mov	r2, r7
   27f40:	add	r0, sp, #8
   27f44:	bl	27958 <fb_symbol_table_visit@@Base+0x98>
   27f48:	b	27f14 <fb_symbol_table_visit@@Base+0x654>
   27f4c:	mov	r0, r6
   27f50:	bl	27928 <fb_symbol_table_visit@@Base+0x68>
   27f54:	add	ip, sp, #8
   27f58:	ldm	ip!, {r0, r1, r2, r3}
   27f5c:	str	r0, [r6]
   27f60:	str	r1, [r6, #4]
   27f64:	str	r2, [r6, #8]
   27f68:	str	r3, [r6, #12]
   27f6c:	mov	r0, #0
   27f70:	add	sp, sp, #24
   27f74:	pop	{r4, r5, r6, r7, r8, pc}
   27f78:	mvn	r0, #0
   27f7c:	b	27f70 <fb_symbol_table_visit@@Base+0x6b0>
   27f80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27f84:	sub	sp, sp, #20
   27f88:	str	r1, [sp, #4]
   27f8c:	ldr	r8, [r0]
   27f90:	cmp	r8, #0
   27f94:	beq	2826c <fb_symbol_table_visit@@Base+0x9ac>
   27f98:	ldr	r3, [r0, #12]
   27f9c:	sub	r9, r3, #1
   27fa0:	str	r2, [sp, #12]
   27fa4:	cmp	r2, #0
   27fa8:	ble	28040 <fb_symbol_table_visit@@Base+0x780>
   27fac:	mov	r6, r1
   27fb0:	mov	r5, r2
   27fb4:	mov	r4, #0
   27fb8:	ldr	r7, [pc, #848]	; 28310 <fb_symbol_table_visit@@Base+0xa50>
   27fbc:	ldr	fp, [pc, #848]	; 28314 <fb_symbol_table_visit@@Base+0xa54>
   27fc0:	mov	sl, r4
   27fc4:	b	280cc <fb_symbol_table_visit@@Base+0x80c>
   27fc8:	mov	r3, r6
   27fcc:	eor	r4, r4, fp
   27fd0:	eor	r3, r3, r4
   27fd4:	mul	r4, r7, r3
   27fd8:	ldr	lr, [lr]
   27fdc:	adds	r5, r5, #1
   27fe0:	beq	282f0 <fb_symbol_table_visit@@Base+0xa30>
   27fe4:	cmp	lr, #0
   27fe8:	beq	282f0 <fb_symbol_table_visit@@Base+0xa30>
   27fec:	ldr	r3, [lr, #4]
   27ff0:	ldr	ip, [r3]
   27ff4:	ldr	r3, [r3, #4]
   27ff8:	subs	r3, r3, #1
   27ffc:	beq	27fc8 <fb_symbol_table_visit@@Base+0x708>
   28000:	add	r0, ip, #1
   28004:	ldrb	r1, [ip]
   28008:	cmp	r1, #0
   2800c:	beq	28038 <fb_symbol_table_visit@@Base+0x778>
   28010:	add	ip, ip, r3
   28014:	mov	r3, r6
   28018:	add	r3, r3, r3, lsl #5
   2801c:	eor	r3, r3, r1
   28020:	cmp	ip, r0
   28024:	beq	27fcc <fb_symbol_table_visit@@Base+0x70c>
   28028:	ldrb	r1, [r0], #1
   2802c:	cmp	r1, #0
   28030:	bne	28018 <fb_symbol_table_visit@@Base+0x758>
   28034:	b	27fcc <fb_symbol_table_visit@@Base+0x70c>
   28038:	mov	r3, r6
   2803c:	b	27fcc <fb_symbol_table_visit@@Base+0x70c>
   28040:	ldr	r3, [sp, #4]
   28044:	cmp	r3, #0
   28048:	moveq	r4, #0
   2804c:	beq	282f0 <fb_symbol_table_visit@@Base+0xa30>
   28050:	mov	r5, r2
   28054:	ldr	lr, [sp, #4]
   28058:	mov	r4, #0
   2805c:	ldr	r6, [pc, #692]	; 28318 <fb_symbol_table_visit@@Base+0xa58>
   28060:	ldr	fp, [pc, #680]	; 28310 <fb_symbol_table_visit@@Base+0xa50>
   28064:	ldr	r7, [pc, #680]	; 28314 <fb_symbol_table_visit@@Base+0xa54>
   28068:	b	27fec <fb_symbol_table_visit@@Base+0x72c>
   2806c:	cmp	r0, #0
   28070:	beq	282e0 <fb_symbol_table_visit@@Base+0xa20>
   28074:	add	lr, r6, #1
   28078:	ldrb	ip, [r6]
   2807c:	cmp	ip, #0
   28080:	beq	282b4 <fb_symbol_table_visit@@Base+0x9f4>
   28084:	add	r0, r6, r0
   28088:	ldr	r3, [pc, #648]	; 28318 <fb_symbol_table_visit@@Base+0xa58>
   2808c:	add	r3, r3, r3, lsl #5
   28090:	eor	r3, r3, ip
   28094:	cmp	r0, lr
   28098:	beq	280a8 <fb_symbol_table_visit@@Base+0x7e8>
   2809c:	ldrb	ip, [lr], #1
   280a0:	cmp	ip, #0
   280a4:	bne	2808c <fb_symbol_table_visit@@Base+0x7cc>
   280a8:	eor	r4, r4, r7
   280ac:	eor	r3, r3, r4
   280b0:	mul	r4, fp, r3
   280b4:	cmp	r5, r1
   280b8:	beq	282f0 <fb_symbol_table_visit@@Base+0xa30>
   280bc:	mvn	r3, r1
   280c0:	add	r5, r5, r3
   280c4:	add	r1, r1, #1
   280c8:	add	r6, r6, r1
   280cc:	cmp	r5, #0
   280d0:	beq	282c8 <fb_symbol_table_visit@@Base+0xa08>
   280d4:	ldrb	r3, [r6]
   280d8:	cmp	r3, #46	; 0x2e
   280dc:	movne	r3, r6
   280e0:	movne	r0, sl
   280e4:	beq	282d4 <fb_symbol_table_visit@@Base+0xa14>
   280e8:	add	r1, r0, #1
   280ec:	cmp	r1, r5
   280f0:	beq	2806c <fb_symbol_table_visit@@Base+0x7ac>
   280f4:	ldrb	ip, [r3, #1]!
   280f8:	cmp	ip, #46	; 0x2e
   280fc:	beq	2828c <fb_symbol_table_visit@@Base+0x9cc>
   28100:	mov	r0, r1
   28104:	b	280e8 <fb_symbol_table_visit@@Base+0x828>
   28108:	ldr	sl, [sp, #4]
   2810c:	mov	fp, r7
   28110:	adds	r3, r5, #0
   28114:	movne	r3, #1
   28118:	adds	r2, sl, #0
   2811c:	movne	r2, #1
   28120:	tst	r3, r2
   28124:	beq	28170 <fb_symbol_table_visit@@Base+0x8b0>
   28128:	ldr	r3, [r5, #4]
   2812c:	ldr	r2, [r3, #4]
   28130:	ldr	r1, [sl, #4]
   28134:	ldr	r0, [r1, #4]
   28138:	cmp	r2, r0
   2813c:	bne	28180 <fb_symbol_table_visit@@Base+0x8c0>
   28140:	ldr	r1, [r1]
   28144:	ldr	r0, [r3]
   28148:	bl	14020 <strncmp@plt>
   2814c:	cmp	r0, #0
   28150:	bne	28180 <fb_symbol_table_visit@@Base+0x8c0>
   28154:	ldr	r5, [r5]
   28158:	ldr	sl, [sl]
   2815c:	adds	fp, fp, #1
   28160:	bne	28110 <fb_symbol_table_visit@@Base+0x850>
   28164:	clz	r5, r5
   28168:	lsr	r5, r5, #5
   2816c:	b	28178 <fb_symbol_table_visit@@Base+0x8b8>
   28170:	orr	r5, r3, r2
   28174:	eor	r5, r5, #1
   28178:	cmp	r5, #0
   2817c:	bne	28270 <fb_symbol_table_visit@@Base+0x9b0>
   28180:	and	r3, r9, r4
   28184:	ldr	r6, [r8, r3, lsl #2]
   28188:	add	r4, r4, #1
   2818c:	cmp	r6, #0
   28190:	beq	28270 <fb_symbol_table_visit@@Base+0x9b0>
   28194:	cmp	r6, #2
   28198:	beq	28180 <fb_symbol_table_visit@@Base+0x8c0>
   2819c:	ldr	r5, [r6]
   281a0:	cmp	r7, #0
   281a4:	ble	28108 <fb_symbol_table_visit@@Base+0x848>
   281a8:	cmp	r5, #0
   281ac:	beq	28180 <fb_symbol_table_visit@@Base+0x8c0>
   281b0:	ldr	r3, [r5, #4]
   281b4:	ldr	r2, [r3]
   281b8:	ldr	lr, [r3, #4]
   281bc:	ldr	r3, [sp, #8]
   281c0:	cmp	r3, lr
   281c4:	bcc	28180 <fb_symbol_table_visit@@Base+0x8c0>
   281c8:	ldr	sl, [sp, #4]
   281cc:	mov	fp, r3
   281d0:	cmp	lr, #0
   281d4:	beq	28210 <fb_symbol_table_visit@@Base+0x950>
   281d8:	ldrb	r1, [r2]
   281dc:	ldrb	r3, [sl]
   281e0:	cmp	r1, r3
   281e4:	bne	28180 <fb_symbol_table_visit@@Base+0x8c0>
   281e8:	mov	r1, sl
   281ec:	mov	r3, #0
   281f0:	add	r3, r3, #1
   281f4:	cmp	r3, lr
   281f8:	beq	28214 <fb_symbol_table_visit@@Base+0x954>
   281fc:	ldrb	ip, [r2, #1]!
   28200:	ldrb	r0, [r1, #1]!
   28204:	cmp	ip, r0
   28208:	beq	281f0 <fb_symbol_table_visit@@Base+0x930>
   2820c:	b	28180 <fb_symbol_table_visit@@Base+0x8c0>
   28210:	mov	r3, lr
   28214:	cmp	lr, fp
   28218:	beq	2825c <fb_symbol_table_visit@@Base+0x99c>
   2821c:	ldrb	r3, [sl, r3]
   28220:	cmp	r3, #46	; 0x2e
   28224:	bne	28180 <fb_symbol_table_visit@@Base+0x8c0>
   28228:	mvn	r3, lr
   2822c:	add	fp, fp, r3
   28230:	add	lr, lr, #1
   28234:	add	sl, sl, lr
   28238:	ldr	r5, [r5]
   2823c:	cmp	r5, #0
   28240:	beq	28180 <fb_symbol_table_visit@@Base+0x8c0>
   28244:	ldr	r3, [r5, #4]
   28248:	ldr	r2, [r3]
   2824c:	ldr	lr, [r3, #4]
   28250:	cmp	lr, fp
   28254:	bls	281d0 <fb_symbol_table_visit@@Base+0x910>
   28258:	b	28180 <fb_symbol_table_visit@@Base+0x8c0>
   2825c:	ldr	r5, [r5]
   28260:	clz	r5, r5
   28264:	lsr	r5, r5, #5
   28268:	b	28178 <fb_symbol_table_visit@@Base+0x8b8>
   2826c:	mov	r6, #0
   28270:	mov	r0, r6
   28274:	add	sp, sp, #20
   28278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2827c:	eor	r4, r4, #5376	; 0x1500
   28280:	eor	r4, r4, #5
   28284:	mul	r4, fp, r4
   28288:	b	280bc <fb_symbol_table_visit@@Base+0x7fc>
   2828c:	cmp	r0, #0
   28290:	beq	2827c <fb_symbol_table_visit@@Base+0x9bc>
   28294:	add	lr, r6, #1
   28298:	ldrb	ip, [r6]
   2829c:	cmp	ip, #0
   282a0:	bne	28084 <fb_symbol_table_visit@@Base+0x7c4>
   282a4:	eor	r4, r4, #5376	; 0x1500
   282a8:	eor	r4, r4, #5
   282ac:	mul	r4, fp, r4
   282b0:	b	280bc <fb_symbol_table_visit@@Base+0x7fc>
   282b4:	eor	r4, r4, #5376	; 0x1500
   282b8:	eor	r4, r4, #5
   282bc:	ldr	r3, [pc, #80]	; 28314 <fb_symbol_table_visit@@Base+0xa54>
   282c0:	mul	r4, r3, r4
   282c4:	b	282f0 <fb_symbol_table_visit@@Base+0xa30>
   282c8:	mov	r1, r5
   282cc:	mvn	r0, #0
   282d0:	b	28074 <fb_symbol_table_visit@@Base+0x7b4>
   282d4:	mvn	r0, #0
   282d8:	mov	r1, sl
   282dc:	b	28294 <fb_symbol_table_visit@@Base+0x9d4>
   282e0:	eor	r4, r4, #5376	; 0x1500
   282e4:	eor	r4, r4, #5
   282e8:	ldr	r3, [pc, #36]	; 28314 <fb_symbol_table_visit@@Base+0xa54>
   282ec:	mul	r4, r3, r4
   282f0:	and	r3, r9, r4
   282f4:	ldr	r6, [r8, r3, lsl #2]
   282f8:	cmp	r6, #0
   282fc:	beq	28270 <fb_symbol_table_visit@@Base+0x9b0>
   28300:	add	r4, r4, #1
   28304:	str	r2, [sp, #8]
   28308:	ldr	r7, [sp, #12]
   2830c:	b	28194 <fb_symbol_table_visit@@Base+0x8d4>
   28310:	svccs	0x00693b52
   28314:			; <UNDEFINED> instruction: 0x9e3779b1
   28318:	svccs	0x00692e57
   2831c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28320:	sub	sp, sp, #20
   28324:	str	r1, [sp, #4]
   28328:	ldr	r7, [r0]
   2832c:	cmp	r7, #0
   28330:	beq	2867c <fb_symbol_table_visit@@Base+0xdbc>
   28334:	mov	sl, r2
   28338:	ldr	r3, [r0, #12]
   2833c:	sub	r3, r3, #1
   28340:	str	r3, [sp, #8]
   28344:	str	r2, [sp]
   28348:	cmp	r2, #0
   2834c:	ble	283e4 <fb_symbol_table_visit@@Base+0xb24>
   28350:	mov	r6, r1
   28354:	mov	r5, r2
   28358:	mov	r4, #0
   2835c:	ldr	r9, [pc, #900]	; 286e8 <fb_symbol_table_visit@@Base+0xe28>
   28360:	ldr	r8, [pc, #900]	; 286ec <fb_symbol_table_visit@@Base+0xe2c>
   28364:	mov	fp, r4
   28368:	b	28470 <fb_symbol_table_visit@@Base+0xbb0>
   2836c:	mov	r3, fp
   28370:	eor	r4, r4, r8
   28374:	eor	r3, r3, r4
   28378:	mul	r4, r6, r3
   2837c:	ldr	lr, [lr]
   28380:	adds	r5, r5, #1
   28384:	beq	284bc <fb_symbol_table_visit@@Base+0xbfc>
   28388:	cmp	lr, #0
   2838c:	beq	284bc <fb_symbol_table_visit@@Base+0xbfc>
   28390:	ldr	r3, [lr, #4]
   28394:	ldr	ip, [r3]
   28398:	ldr	r3, [r3, #4]
   2839c:	subs	r3, r3, #1
   283a0:	beq	2836c <fb_symbol_table_visit@@Base+0xaac>
   283a4:	add	r1, ip, #1
   283a8:	ldrb	r2, [ip]
   283ac:	cmp	r2, #0
   283b0:	beq	283dc <fb_symbol_table_visit@@Base+0xb1c>
   283b4:	add	ip, ip, r3
   283b8:	mov	r3, fp
   283bc:	add	r3, r3, r3, lsl #5
   283c0:	eor	r3, r3, r2
   283c4:	cmp	ip, r1
   283c8:	beq	28370 <fb_symbol_table_visit@@Base+0xab0>
   283cc:	ldrb	r2, [r1], #1
   283d0:	cmp	r2, #0
   283d4:	bne	283bc <fb_symbol_table_visit@@Base+0xafc>
   283d8:	b	28370 <fb_symbol_table_visit@@Base+0xab0>
   283dc:	mov	r3, fp
   283e0:	b	28370 <fb_symbol_table_visit@@Base+0xab0>
   283e4:	ldr	r3, [sp, #4]
   283e8:	cmp	r3, #0
   283ec:	moveq	r4, #0
   283f0:	beq	284bc <fb_symbol_table_visit@@Base+0xbfc>
   283f4:	mov	r5, sl
   283f8:	ldr	lr, [sp, #4]
   283fc:	mov	r4, #0
   28400:	ldr	fp, [pc, #744]	; 286f0 <fb_symbol_table_visit@@Base+0xe30>
   28404:	ldr	r8, [pc, #732]	; 286e8 <fb_symbol_table_visit@@Base+0xe28>
   28408:	ldr	r6, [pc, #732]	; 286ec <fb_symbol_table_visit@@Base+0xe2c>
   2840c:	b	28390 <fb_symbol_table_visit@@Base+0xad0>
   28410:	cmp	r1, #0
   28414:	beq	284ac <fb_symbol_table_visit@@Base+0xbec>
   28418:	add	lr, r6, #1
   2841c:	ldrb	ip, [r6]
   28420:	cmp	ip, #0
   28424:	beq	286c8 <fb_symbol_table_visit@@Base+0xe08>
   28428:	add	r1, r6, r1
   2842c:	ldr	r3, [pc, #700]	; 286f0 <fb_symbol_table_visit@@Base+0xe30>
   28430:	add	r3, r3, r3, lsl #5
   28434:	eor	r3, r3, ip
   28438:	cmp	r1, lr
   2843c:	beq	2844c <fb_symbol_table_visit@@Base+0xb8c>
   28440:	ldrb	ip, [lr], #1
   28444:	cmp	ip, #0
   28448:	bne	28430 <fb_symbol_table_visit@@Base+0xb70>
   2844c:	eor	r4, r4, r9
   28450:	eor	r3, r3, r4
   28454:	mul	r4, r8, r3
   28458:	cmp	r5, r2
   2845c:	beq	284bc <fb_symbol_table_visit@@Base+0xbfc>
   28460:	mvn	r3, r2
   28464:	add	r5, r5, r3
   28468:	add	r2, r2, #1
   2846c:	add	r6, r6, r2
   28470:	cmp	r5, #0
   28474:	beq	286bc <fb_symbol_table_visit@@Base+0xdfc>
   28478:	ldrb	r3, [r6]
   2847c:	cmp	r3, #46	; 0x2e
   28480:	movne	r3, r6
   28484:	movne	r1, fp
   28488:	beq	286dc <fb_symbol_table_visit@@Base+0xe1c>
   2848c:	add	r2, r1, #1
   28490:	cmp	r2, r5
   28494:	beq	28410 <fb_symbol_table_visit@@Base+0xb50>
   28498:	ldrb	ip, [r3, #1]!
   2849c:	cmp	ip, #46	; 0x2e
   284a0:	beq	28694 <fb_symbol_table_visit@@Base+0xdd4>
   284a4:	mov	r1, r2
   284a8:	b	2848c <fb_symbol_table_visit@@Base+0xbcc>
   284ac:	eor	r4, r4, #5376	; 0x1500
   284b0:	eor	r4, r4, #5
   284b4:	ldr	r3, [pc, #560]	; 286ec <fb_symbol_table_visit@@Base+0xe2c>
   284b8:	mul	r4, r3, r4
   284bc:	ldr	r2, [sp, #8]
   284c0:	mov	r3, r2
   284c4:	and	r3, r3, r4
   284c8:	add	r8, r7, r3, lsl #2
   284cc:	ldr	r6, [r7, r3, lsl #2]
   284d0:	cmp	r6, #0
   284d4:	beq	28670 <fb_symbol_table_visit@@Base+0xdb0>
   284d8:	str	r0, [sp, #12]
   284dc:	add	r4, r4, #1
   284e0:	str	sl, [sp, #8]
   284e4:	mov	r9, r2
   284e8:	b	2857c <fb_symbol_table_visit@@Base+0xcbc>
   284ec:	ldr	sl, [sp, #4]
   284f0:	ldr	fp, [sp]
   284f4:	adds	r3, r5, #0
   284f8:	movne	r3, #1
   284fc:	adds	r2, sl, #0
   28500:	movne	r2, #1
   28504:	tst	r3, r2
   28508:	beq	28554 <fb_symbol_table_visit@@Base+0xc94>
   2850c:	ldr	r3, [r5, #4]
   28510:	ldr	r2, [r3, #4]
   28514:	ldr	r1, [sl, #4]
   28518:	ldr	r0, [r1, #4]
   2851c:	cmp	r2, r0
   28520:	bne	28564 <fb_symbol_table_visit@@Base+0xca4>
   28524:	ldr	r1, [r1]
   28528:	ldr	r0, [r3]
   2852c:	bl	14020 <strncmp@plt>
   28530:	cmp	r0, #0
   28534:	bne	28564 <fb_symbol_table_visit@@Base+0xca4>
   28538:	ldr	r5, [r5]
   2853c:	ldr	sl, [sl]
   28540:	adds	fp, fp, #1
   28544:	bne	284f4 <fb_symbol_table_visit@@Base+0xc34>
   28548:	clz	r5, r5
   2854c:	lsr	r5, r5, #5
   28550:	b	2855c <fb_symbol_table_visit@@Base+0xc9c>
   28554:	orr	r5, r3, r2
   28558:	eor	r5, r5, #1
   2855c:	cmp	r5, #0
   28560:	bne	28658 <fb_symbol_table_visit@@Base+0xd98>
   28564:	and	r3, r9, r4
   28568:	add	r8, r7, r3, lsl #2
   2856c:	ldr	r6, [r7, r3, lsl #2]
   28570:	add	r4, r4, #1
   28574:	cmp	r6, #0
   28578:	beq	28670 <fb_symbol_table_visit@@Base+0xdb0>
   2857c:	cmp	r6, #2
   28580:	beq	28564 <fb_symbol_table_visit@@Base+0xca4>
   28584:	ldr	r5, [r6]
   28588:	ldr	r3, [sp]
   2858c:	cmp	r3, #0
   28590:	ble	284ec <fb_symbol_table_visit@@Base+0xc2c>
   28594:	cmp	r5, #0
   28598:	beq	28564 <fb_symbol_table_visit@@Base+0xca4>
   2859c:	ldr	r3, [r5, #4]
   285a0:	ldr	r2, [r3]
   285a4:	ldr	lr, [r3, #4]
   285a8:	ldr	r3, [sp, #8]
   285ac:	cmp	r3, lr
   285b0:	bcc	28564 <fb_symbol_table_visit@@Base+0xca4>
   285b4:	ldr	sl, [sp, #4]
   285b8:	mov	fp, r3
   285bc:	cmp	lr, #0
   285c0:	beq	285fc <fb_symbol_table_visit@@Base+0xd3c>
   285c4:	ldrb	r1, [r2]
   285c8:	ldrb	r3, [sl]
   285cc:	cmp	r1, r3
   285d0:	bne	28564 <fb_symbol_table_visit@@Base+0xca4>
   285d4:	mov	r1, sl
   285d8:	mov	r3, #0
   285dc:	add	r3, r3, #1
   285e0:	cmp	r3, lr
   285e4:	beq	28600 <fb_symbol_table_visit@@Base+0xd40>
   285e8:	ldrb	ip, [r2, #1]!
   285ec:	ldrb	r0, [r1, #1]!
   285f0:	cmp	ip, r0
   285f4:	beq	285dc <fb_symbol_table_visit@@Base+0xd1c>
   285f8:	b	28564 <fb_symbol_table_visit@@Base+0xca4>
   285fc:	mov	r3, lr
   28600:	cmp	lr, fp
   28604:	beq	28648 <fb_symbol_table_visit@@Base+0xd88>
   28608:	ldrb	r3, [sl, r3]
   2860c:	cmp	r3, #46	; 0x2e
   28610:	bne	28564 <fb_symbol_table_visit@@Base+0xca4>
   28614:	mvn	r3, lr
   28618:	add	fp, fp, r3
   2861c:	add	lr, lr, #1
   28620:	add	sl, sl, lr
   28624:	ldr	r5, [r5]
   28628:	cmp	r5, #0
   2862c:	beq	28564 <fb_symbol_table_visit@@Base+0xca4>
   28630:	ldr	r3, [r5, #4]
   28634:	ldr	r2, [r3]
   28638:	ldr	lr, [r3, #4]
   2863c:	cmp	lr, fp
   28640:	bls	285bc <fb_symbol_table_visit@@Base+0xcfc>
   28644:	b	28564 <fb_symbol_table_visit@@Base+0xca4>
   28648:	ldr	r5, [r5]
   2864c:	clz	r5, r5
   28650:	lsr	r5, r5, #5
   28654:	b	2855c <fb_symbol_table_visit@@Base+0xc9c>
   28658:	mov	r3, #2
   2865c:	str	r3, [r8]
   28660:	ldr	r2, [sp, #12]
   28664:	ldr	r3, [r2, #8]
   28668:	sub	r3, r3, #1
   2866c:	str	r3, [r2, #8]
   28670:	mov	r0, r6
   28674:	add	sp, sp, #20
   28678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2867c:	mov	r6, #0
   28680:	b	28670 <fb_symbol_table_visit@@Base+0xdb0>
   28684:	eor	r4, r4, #5376	; 0x1500
   28688:	eor	r4, r4, #5
   2868c:	mul	r4, r8, r4
   28690:	b	28460 <fb_symbol_table_visit@@Base+0xba0>
   28694:	cmp	r1, #0
   28698:	beq	28684 <fb_symbol_table_visit@@Base+0xdc4>
   2869c:	add	lr, r6, #1
   286a0:	ldrb	ip, [r6]
   286a4:	cmp	ip, #0
   286a8:	bne	28428 <fb_symbol_table_visit@@Base+0xb68>
   286ac:	eor	r4, r4, #5376	; 0x1500
   286b0:	eor	r4, r4, #5
   286b4:	mul	r4, r8, r4
   286b8:	b	28460 <fb_symbol_table_visit@@Base+0xba0>
   286bc:	mov	r2, r5
   286c0:	mvn	r1, #0
   286c4:	b	28418 <fb_symbol_table_visit@@Base+0xb58>
   286c8:	eor	r4, r4, #5376	; 0x1500
   286cc:	eor	r4, r4, #5
   286d0:	ldr	r3, [pc, #20]	; 286ec <fb_symbol_table_visit@@Base+0xe2c>
   286d4:	mul	r4, r3, r4
   286d8:	b	284bc <fb_symbol_table_visit@@Base+0xbfc>
   286dc:	mvn	r1, #0
   286e0:	mov	r2, fp
   286e4:	b	2869c <fb_symbol_table_visit@@Base+0xddc>
   286e8:	svccs	0x00693b52
   286ec:			; <UNDEFINED> instruction: 0x9e3779b1
   286f0:	svccs	0x00692e57

000286f4 <fb_scope_table_clear@@Base>:
   286f4:	push	{r4, lr}
   286f8:	bl	27928 <fb_symbol_table_visit@@Base+0x68>
   286fc:	pop	{r4, pc}

00028700 <fb_scope_table_destroy@@Base>:
   28700:	push	{r4, lr}
   28704:	mov	r4, r0
   28708:	cmp	r1, #0
   2870c:	beq	28714 <fb_scope_table_destroy@@Base+0x14>
   28710:	bl	278cc <fb_symbol_table_visit@@Base+0xc>
   28714:	mov	r0, r4
   28718:	bl	27928 <fb_symbol_table_visit@@Base+0x68>
   2871c:	pop	{r4, pc}

00028720 <fb_scope_table_init@@Base>:
   28720:	push	{r4, r5, r6, lr}
   28724:	mov	r5, r0
   28728:	cmp	r1, #2
   2872c:	bls	28774 <fb_scope_table_init@@Base+0x54>
   28730:	mov	r4, #4
   28734:	mov	r2, #179	; 0xb3
   28738:	lsl	r4, r4, #1
   2873c:	mul	r3, r2, r4
   28740:	cmp	r1, r3, lsr #8
   28744:	bhi	28738 <fb_scope_table_init@@Base+0x18>
   28748:	mov	r1, #4
   2874c:	mov	r0, r4
   28750:	bl	13ea0 <calloc@plt>
   28754:	str	r0, [r5]
   28758:	cmp	r0, #0
   2875c:	movne	r0, #0
   28760:	strne	r0, [r5, #4]
   28764:	strne	r4, [r5, #12]
   28768:	strne	r0, [r5, #8]
   2876c:	mvneq	r0, #0
   28770:	pop	{r4, r5, r6, pc}
   28774:	mov	r4, #4
   28778:	b	28748 <fb_scope_table_init@@Base+0x28>

0002877c <fb_scope_table_resize@@Base>:
   2877c:	push	{r4, lr}
   28780:	bl	27e88 <fb_symbol_table_visit@@Base+0x5c8>
   28784:	pop	{r4, pc}

00028788 <fb_scope_table_insert@@Base>:
   28788:	push	{lr}		; (str lr, [sp, #-4]!)
   2878c:	sub	sp, sp, #12
   28790:	ldr	ip, [sp, #16]
   28794:	str	ip, [sp]
   28798:	bl	27958 <fb_symbol_table_visit@@Base+0x98>
   2879c:	add	sp, sp, #12
   287a0:	pop	{pc}		; (ldr pc, [sp], #4)

000287a4 <fb_scope_table_insert_item@@Base>:
   287a4:	push	{lr}		; (str lr, [sp, #-4]!)
   287a8:	sub	sp, sp, #12
   287ac:	mov	r3, r1
   287b0:	ldr	r1, [r1]
   287b4:	str	r2, [sp]
   287b8:	mov	r2, #0
   287bc:	bl	27958 <fb_symbol_table_visit@@Base+0x98>
   287c0:	add	sp, sp, #12
   287c4:	pop	{pc}		; (ldr pc, [sp], #4)

000287c8 <fb_scope_table_find@@Base>:
   287c8:	push	{r4, lr}
   287cc:	bl	27f80 <fb_symbol_table_visit@@Base+0x6c0>
   287d0:	pop	{r4, pc}

000287d4 <fb_scope_table_find_item@@Base>:
   287d4:	push	{r4, lr}
   287d8:	mov	r2, #0
   287dc:	ldr	r1, [r1]
   287e0:	bl	27f80 <fb_symbol_table_visit@@Base+0x6c0>
   287e4:	pop	{r4, pc}

000287e8 <fb_scope_table_remove@@Base>:
   287e8:	push	{r4, lr}
   287ec:	bl	2831c <fb_symbol_table_visit@@Base+0xa5c>
   287f0:	pop	{r4, pc}

000287f4 <fb_scope_table_remove_item@@Base>:
   287f4:	push	{r4, lr}
   287f8:	mov	r2, #0
   287fc:	ldr	r1, [r1]
   28800:	bl	2831c <fb_symbol_table_visit@@Base+0xa5c>
   28804:	pop	{r4, pc}

00028808 <fb_scope_table_visit@@Base>:
   28808:	push	{r4, lr}
   2880c:	bl	278cc <fb_symbol_table_visit@@Base+0xc>
   28810:	pop	{r4, pc}
   28814:	push	{r4, r5, r6, r7, r8, lr}
   28818:	ldr	r5, [r0]
   2881c:	ldr	r3, [r0, #12]
   28820:	cmp	r3, #0
   28824:	popeq	{r4, r5, r6, r7, r8, pc}
   28828:	mov	r8, r2
   2882c:	mov	r7, r1
   28830:	mov	r6, r0
   28834:	sub	r5, r5, #4
   28838:	mov	r4, #0
   2883c:	b	28850 <fb_scope_table_visit@@Base+0x48>
   28840:	add	r4, r4, #1
   28844:	ldr	r3, [r6, #12]
   28848:	cmp	r3, r4
   2884c:	bls	2886c <fb_scope_table_visit@@Base+0x64>
   28850:	ldr	r1, [r5, #4]!
   28854:	cmp	r1, #0
   28858:	cmpne	r1, #2
   2885c:	beq	28840 <fb_scope_table_visit@@Base+0x38>
   28860:	mov	r0, r8
   28864:	blx	r7
   28868:	b	28840 <fb_scope_table_visit@@Base+0x38>
   2886c:	pop	{r4, r5, r6, r7, r8, pc}
   28870:	push	{r4, lr}
   28874:	mov	r4, r0
   28878:	ldr	r0, [r0]
   2887c:	cmp	r0, #0
   28880:	beq	28888 <fb_scope_table_visit@@Base+0x80>
   28884:	bl	13ed0 <free@plt>
   28888:	mov	r3, #0
   2888c:	str	r3, [r4]
   28890:	str	r3, [r4, #4]
   28894:	str	r3, [r4, #8]
   28898:	str	r3, [r4, #12]
   2889c:	pop	{r4, pc}
   288a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   288a4:	sub	sp, sp, #28
   288a8:	str	r1, [sp, #8]
   288ac:	cmp	r3, #0
   288b0:	str	r3, [sp, #12]
   288b4:	beq	28964 <fb_scope_table_visit@@Base+0x15c>
   288b8:	mov	fp, r0
   288bc:	mov	r8, r2
   288c0:	ldr	r3, [sp, #12]
   288c4:	cmp	r3, #2
   288c8:	beq	28978 <fb_scope_table_visit@@Base+0x170>
   288cc:	ldr	r3, [sp, #12]
   288d0:	cmp	r3, #1
   288d4:	beq	2898c <fb_scope_table_visit@@Base+0x184>
   288d8:	ldr	r1, [r0, #8]
   288dc:	ldr	r2, [r0, #12]
   288e0:	mov	r3, #179	; 0xb3
   288e4:	mul	r3, r3, r2
   288e8:	cmp	r1, r3, lsr #8
   288ec:	bcc	28900 <fb_scope_table_visit@@Base+0xf8>
   288f0:	lsl	r1, r1, #1
   288f4:	bl	28abc <fb_scope_table_visit@@Base+0x2b4>
   288f8:	cmp	r0, #0
   288fc:	bne	289a0 <fb_scope_table_visit@@Base+0x198>
   28900:	ldr	r6, [fp]
   28904:	ldr	r7, [fp, #12]
   28908:	sub	r7, r7, #1
   2890c:	add	r3, sp, #16
   28910:	str	r3, [sp, #4]
   28914:	ldr	r3, [pc, #380]	; 28a98 <fb_scope_table_visit@@Base+0x290>
   28918:	str	r3, [sp]
   2891c:	mov	r2, r8
   28920:	mov	r3, #0
   28924:	ldr	r0, [sp, #8]
   28928:	bl	37760 <cmetrohash64_1@@Base>
   2892c:	ldr	r5, [sp, #16]
   28930:	and	r3, r7, r5
   28934:	ldr	r2, [sp, #64]	; 0x40
   28938:	sub	r2, r2, #2
   2893c:	cmp	r2, #1
   28940:	bls	289bc <fb_scope_table_visit@@Base+0x1b4>
   28944:	add	r9, r6, r3, lsl #2
   28948:	ldr	r4, [r6, r3, lsl #2]
   2894c:	cmp	r4, #0
   28950:	moveq	sl, r9
   28954:	beq	28a74 <fb_scope_table_visit@@Base+0x26c>
   28958:	add	r5, r5, #1
   2895c:	mov	sl, #0
   28960:	b	28a2c <fb_scope_table_visit@@Base+0x224>
   28964:	ldr	r3, [pc, #304]	; 28a9c <fb_scope_table_visit@@Base+0x294>
   28968:	mov	r2, #114	; 0x72
   2896c:	ldr	r1, [pc, #300]	; 28aa0 <fb_scope_table_visit@@Base+0x298>
   28970:	ldr	r0, [pc, #300]	; 28aa4 <fb_scope_table_visit@@Base+0x29c>
   28974:	bl	14038 <__assert_fail@plt>
   28978:	ldr	r3, [pc, #284]	; 28a9c <fb_scope_table_visit@@Base+0x294>
   2897c:	mov	r2, #115	; 0x73
   28980:	ldr	r1, [pc, #280]	; 28aa0 <fb_scope_table_visit@@Base+0x298>
   28984:	ldr	r0, [pc, #284]	; 28aa8 <fb_scope_table_visit@@Base+0x2a0>
   28988:	bl	14038 <__assert_fail@plt>
   2898c:	ldr	r3, [pc, #264]	; 28a9c <fb_scope_table_visit@@Base+0x294>
   28990:	mov	r2, #116	; 0x74
   28994:	ldr	r1, [pc, #260]	; 28aa0 <fb_scope_table_visit@@Base+0x298>
   28998:	ldr	r0, [pc, #268]	; 28aac <fb_scope_table_visit@@Base+0x2a4>
   2899c:	bl	14038 <__assert_fail@plt>
   289a0:	ldr	r2, [pc, #264]	; 28ab0 <fb_scope_table_visit@@Base+0x2a8>
   289a4:	ldr	r1, [pc, #264]	; 28ab4 <fb_scope_table_visit@@Base+0x2ac>
   289a8:	ldr	r3, [pc, #264]	; 28ab8 <fb_scope_table_visit@@Base+0x2b0>
   289ac:	ldr	r0, [r3]
   289b0:	bl	13f84 <fprintf@plt>
   289b4:	mov	r0, #1
   289b8:	bl	13f6c <exit@plt>
   289bc:	ldr	r2, [fp, #8]
   289c0:	add	r2, r2, #1
   289c4:	str	r2, [fp, #8]
   289c8:	add	r2, r6, r3, lsl #2
   289cc:	ldr	r3, [r6, r3, lsl #2]
   289d0:	cmp	r3, #0
   289d4:	cmpne	r3, #2
   289d8:	beq	289fc <fb_scope_table_visit@@Base+0x1f4>
   289dc:	add	r5, r5, #1
   289e0:	and	r3, r7, r5
   289e4:	add	r2, r6, r3, lsl #2
   289e8:	ldr	r3, [r6, r3, lsl #2]
   289ec:	add	r5, r5, #1
   289f0:	cmp	r3, #0
   289f4:	cmpne	r3, #2
   289f8:	bne	289e0 <fb_scope_table_visit@@Base+0x1d8>
   289fc:	ldr	r3, [sp, #12]
   28a00:	str	r3, [r2]
   28a04:	mov	r4, #0
   28a08:	b	28a8c <fb_scope_table_visit@@Base+0x284>
   28a0c:	cmp	sl, #0
   28a10:	moveq	sl, r9
   28a14:	and	r3, r7, r5
   28a18:	add	r9, r6, r3, lsl #2
   28a1c:	ldr	r4, [r6, r3, lsl #2]
   28a20:	add	r5, r5, #1
   28a24:	cmp	r4, #0
   28a28:	beq	28a6c <fb_scope_table_visit@@Base+0x264>
   28a2c:	cmp	r4, #2
   28a30:	beq	28a0c <fb_scope_table_visit@@Base+0x204>
   28a34:	ldr	r3, [r4, #148]	; 0x94
   28a38:	cmp	r8, r3
   28a3c:	bne	28a14 <fb_scope_table_visit@@Base+0x20c>
   28a40:	mov	r2, r8
   28a44:	ldr	r1, [r4, #144]	; 0x90
   28a48:	ldr	r0, [sp, #8]
   28a4c:	bl	13ef4 <memcmp@plt>
   28a50:	cmp	r0, #0
   28a54:	bne	28a14 <fb_scope_table_visit@@Base+0x20c>
   28a58:	ldr	r3, [sp, #64]	; 0x40
   28a5c:	cmp	r3, #0
   28a60:	ldreq	r3, [sp, #12]
   28a64:	streq	r3, [r9]
   28a68:	b	28a8c <fb_scope_table_visit@@Base+0x284>
   28a6c:	cmp	sl, #0
   28a70:	moveq	sl, r9
   28a74:	ldr	r3, [fp, #8]
   28a78:	add	r3, r3, #1
   28a7c:	str	r3, [fp, #8]
   28a80:	ldr	r3, [sp, #12]
   28a84:	str	r3, [sl]
   28a88:	mov	r4, #0
   28a8c:	mov	r0, r4
   28a90:	add	sp, sp, #28
   28a94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28a98:	svccs	0x00693b52
   28a9c:	andeq	r2, r5, r4, lsl r4
   28aa0:	andeq	r2, r5, r8, ror #5
   28aa4:	andeq	r2, r5, r8, lsr r3
   28aa8:	andeq	r2, r5, r0, asr r3
   28aac:	andeq	r2, r5, r8, ror #6
   28ab0:	andeq	r2, r5, r0, lsl #7
   28ab4:			; <UNDEFINED> instruction: 0x000523b4
   28ab8:	andeq	r6, r6, r8, lsr #1
   28abc:	push	{r4, r5, r6, r7, lr}
   28ac0:	sub	sp, sp, #28
   28ac4:	mov	r6, r0
   28ac8:	ldr	r5, [r0]
   28acc:	ldr	r3, [r0, #8]
   28ad0:	cmp	r1, r3
   28ad4:	movcc	r1, r3
   28ad8:	cmp	r1, #2
   28adc:	bls	28b3c <fb_scope_table_visit@@Base+0x334>
   28ae0:	mov	r4, #4
   28ae4:	mov	r2, #179	; 0xb3
   28ae8:	lsl	r4, r4, #1
   28aec:	mul	r3, r2, r4
   28af0:	cmp	r1, r3, lsr #8
   28af4:	bhi	28ae8 <fb_scope_table_visit@@Base+0x2e0>
   28af8:	mov	r1, #4
   28afc:	mov	r0, r4
   28b00:	bl	13ea0 <calloc@plt>
   28b04:	str	r0, [sp, #8]
   28b08:	cmp	r0, #0
   28b0c:	beq	28ba8 <fb_scope_table_visit@@Base+0x3a0>
   28b10:	mov	r3, #0
   28b14:	str	r3, [sp, #12]
   28b18:	str	r4, [sp, #20]
   28b1c:	str	r3, [sp, #16]
   28b20:	ldr	r3, [r6, #12]
   28b24:	cmp	r3, #0
   28b28:	beq	28b7c <fb_scope_table_visit@@Base+0x374>
   28b2c:	sub	r5, r5, #4
   28b30:	mov	r4, #0
   28b34:	mov	r7, #3
   28b38:	b	28b54 <fb_scope_table_visit@@Base+0x34c>
   28b3c:	mov	r4, #4
   28b40:	b	28af8 <fb_scope_table_visit@@Base+0x2f0>
   28b44:	add	r4, r4, #1
   28b48:	ldr	r3, [r6, #12]
   28b4c:	cmp	r3, r4
   28b50:	bls	28b7c <fb_scope_table_visit@@Base+0x374>
   28b54:	ldr	r3, [r5, #4]!
   28b58:	cmp	r3, #0
   28b5c:	cmpne	r3, #2
   28b60:	beq	28b44 <fb_scope_table_visit@@Base+0x33c>
   28b64:	ldr	r2, [r3, #148]	; 0x94
   28b68:	ldr	r1, [r3, #144]	; 0x90
   28b6c:	str	r7, [sp]
   28b70:	add	r0, sp, #8
   28b74:	bl	288a0 <fb_scope_table_visit@@Base+0x98>
   28b78:	b	28b44 <fb_scope_table_visit@@Base+0x33c>
   28b7c:	mov	r0, r6
   28b80:	bl	28870 <fb_scope_table_visit@@Base+0x68>
   28b84:	add	ip, sp, #8
   28b88:	ldm	ip!, {r0, r1, r2, r3}
   28b8c:	str	r0, [r6]
   28b90:	str	r1, [r6, #4]
   28b94:	str	r2, [r6, #8]
   28b98:	str	r3, [r6, #12]
   28b9c:	mov	r0, #0
   28ba0:	add	sp, sp, #28
   28ba4:	pop	{r4, r5, r6, r7, pc}
   28ba8:	mvn	r0, #0
   28bac:	b	28ba0 <fb_scope_table_visit@@Base+0x398>
   28bb0:	push	{r4, r5, r6, r7, r8, r9, lr}
   28bb4:	sub	sp, sp, #20
   28bb8:	ldr	r8, [r0]
   28bbc:	cmp	r8, #0
   28bc0:	beq	28c58 <fb_scope_table_visit@@Base+0x450>
   28bc4:	mov	r6, r2
   28bc8:	mov	r9, r1
   28bcc:	ldr	r7, [r0, #12]
   28bd0:	sub	r7, r7, #1
   28bd4:	add	r3, sp, #8
   28bd8:	str	r3, [sp, #4]
   28bdc:	ldr	r3, [pc, #124]	; 28c60 <fb_scope_table_visit@@Base+0x458>
   28be0:	str	r3, [sp]
   28be4:	mov	r3, #0
   28be8:	mov	r0, r1
   28bec:	bl	37760 <cmetrohash64_1@@Base>
   28bf0:	ldr	r5, [sp, #8]
   28bf4:	and	r3, r7, r5
   28bf8:	ldr	r4, [r8, r3, lsl #2]
   28bfc:	cmp	r4, #0
   28c00:	beq	28c4c <fb_scope_table_visit@@Base+0x444>
   28c04:	add	r5, r5, #1
   28c08:	b	28c20 <fb_scope_table_visit@@Base+0x418>
   28c0c:	and	r3, r7, r5
   28c10:	ldr	r4, [r8, r3, lsl #2]
   28c14:	add	r5, r5, #1
   28c18:	cmp	r4, #0
   28c1c:	beq	28c4c <fb_scope_table_visit@@Base+0x444>
   28c20:	cmp	r4, #2
   28c24:	beq	28c0c <fb_scope_table_visit@@Base+0x404>
   28c28:	ldr	r3, [r4, #148]	; 0x94
   28c2c:	cmp	r6, r3
   28c30:	bne	28c0c <fb_scope_table_visit@@Base+0x404>
   28c34:	mov	r2, r6
   28c38:	ldr	r1, [r4, #144]	; 0x90
   28c3c:	mov	r0, r9
   28c40:	bl	13ef4 <memcmp@plt>
   28c44:	cmp	r0, #0
   28c48:	bne	28c0c <fb_scope_table_visit@@Base+0x404>
   28c4c:	mov	r0, r4
   28c50:	add	sp, sp, #20
   28c54:	pop	{r4, r5, r6, r7, r8, r9, pc}
   28c58:	mov	r4, #0
   28c5c:	b	28c4c <fb_scope_table_visit@@Base+0x444>
   28c60:	svccs	0x00693b52
   28c64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28c68:	sub	sp, sp, #20
   28c6c:	ldr	r6, [r0]
   28c70:	cmp	r6, #0
   28c74:	beq	28d2c <fb_scope_table_visit@@Base+0x524>
   28c78:	mov	r7, r2
   28c7c:	mov	sl, r1
   28c80:	mov	fp, r0
   28c84:	ldr	r8, [r0, #12]
   28c88:	sub	r8, r8, #1
   28c8c:	add	r3, sp, #8
   28c90:	str	r3, [sp, #4]
   28c94:	ldr	r3, [pc, #152]	; 28d34 <fb_scope_table_visit@@Base+0x52c>
   28c98:	str	r3, [sp]
   28c9c:	mov	r3, #0
   28ca0:	mov	r0, r1
   28ca4:	bl	37760 <cmetrohash64_1@@Base>
   28ca8:	ldr	r5, [sp, #8]
   28cac:	and	r3, r8, r5
   28cb0:	add	r9, r6, r3, lsl #2
   28cb4:	ldr	r4, [r6, r3, lsl #2]
   28cb8:	cmp	r4, #0
   28cbc:	beq	28d20 <fb_scope_table_visit@@Base+0x518>
   28cc0:	add	r5, r5, #1
   28cc4:	b	28ce0 <fb_scope_table_visit@@Base+0x4d8>
   28cc8:	and	r3, r8, r5
   28ccc:	add	r9, r6, r3, lsl #2
   28cd0:	ldr	r4, [r6, r3, lsl #2]
   28cd4:	add	r5, r5, #1
   28cd8:	cmp	r4, #0
   28cdc:	beq	28d20 <fb_scope_table_visit@@Base+0x518>
   28ce0:	cmp	r4, #2
   28ce4:	beq	28cc8 <fb_scope_table_visit@@Base+0x4c0>
   28ce8:	ldr	r3, [r4, #148]	; 0x94
   28cec:	cmp	r7, r3
   28cf0:	bne	28cc8 <fb_scope_table_visit@@Base+0x4c0>
   28cf4:	mov	r2, r7
   28cf8:	ldr	r1, [r4, #144]	; 0x90
   28cfc:	mov	r0, sl
   28d00:	bl	13ef4 <memcmp@plt>
   28d04:	cmp	r0, #0
   28d08:	bne	28cc8 <fb_scope_table_visit@@Base+0x4c0>
   28d0c:	mov	r3, #2
   28d10:	str	r3, [r9]
   28d14:	ldr	r3, [fp, #8]
   28d18:	sub	r3, r3, #1
   28d1c:	str	r3, [fp, #8]
   28d20:	mov	r0, r4
   28d24:	add	sp, sp, #20
   28d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28d2c:	mov	r4, #0
   28d30:	b	28d20 <fb_scope_table_visit@@Base+0x518>
   28d34:	svccs	0x00693b52

00028d38 <fb_schema_table_clear@@Base>:
   28d38:	push	{r4, lr}
   28d3c:	bl	28870 <fb_scope_table_visit@@Base+0x68>
   28d40:	pop	{r4, pc}

00028d44 <fb_schema_table_destroy@@Base>:
   28d44:	push	{r4, lr}
   28d48:	mov	r4, r0
   28d4c:	cmp	r1, #0
   28d50:	beq	28d58 <fb_schema_table_destroy@@Base+0x14>
   28d54:	bl	28814 <fb_scope_table_visit@@Base+0xc>
   28d58:	mov	r0, r4
   28d5c:	bl	28870 <fb_scope_table_visit@@Base+0x68>
   28d60:	pop	{r4, pc}

00028d64 <fb_schema_table_init@@Base>:
   28d64:	push	{r4, r5, r6, lr}
   28d68:	mov	r5, r0
   28d6c:	cmp	r1, #2
   28d70:	bls	28db8 <fb_schema_table_init@@Base+0x54>
   28d74:	mov	r4, #4
   28d78:	mov	r2, #179	; 0xb3
   28d7c:	lsl	r4, r4, #1
   28d80:	mul	r3, r2, r4
   28d84:	cmp	r1, r3, lsr #8
   28d88:	bhi	28d7c <fb_schema_table_init@@Base+0x18>
   28d8c:	mov	r1, #4
   28d90:	mov	r0, r4
   28d94:	bl	13ea0 <calloc@plt>
   28d98:	str	r0, [r5]
   28d9c:	cmp	r0, #0
   28da0:	movne	r0, #0
   28da4:	strne	r0, [r5, #4]
   28da8:	strne	r4, [r5, #12]
   28dac:	strne	r0, [r5, #8]
   28db0:	mvneq	r0, #0
   28db4:	pop	{r4, r5, r6, pc}
   28db8:	mov	r4, #4
   28dbc:	b	28d8c <fb_schema_table_init@@Base+0x28>

00028dc0 <fb_schema_table_resize@@Base>:
   28dc0:	push	{r4, lr}
   28dc4:	bl	28abc <fb_scope_table_visit@@Base+0x2b4>
   28dc8:	pop	{r4, pc}

00028dcc <fb_schema_table_insert@@Base>:
   28dcc:	push	{lr}		; (str lr, [sp, #-4]!)
   28dd0:	sub	sp, sp, #12
   28dd4:	ldr	ip, [sp, #16]
   28dd8:	str	ip, [sp]
   28ddc:	bl	288a0 <fb_scope_table_visit@@Base+0x98>
   28de0:	add	sp, sp, #12
   28de4:	pop	{pc}		; (ldr pc, [sp], #4)

00028de8 <fb_schema_table_insert_item@@Base>:
   28de8:	push	{lr}		; (str lr, [sp, #-4]!)
   28dec:	sub	sp, sp, #12
   28df0:	mov	r3, r1
   28df4:	ldr	ip, [r1, #148]	; 0x94
   28df8:	ldr	r1, [r1, #144]	; 0x90
   28dfc:	str	r2, [sp]
   28e00:	mov	r2, ip
   28e04:	bl	288a0 <fb_scope_table_visit@@Base+0x98>
   28e08:	add	sp, sp, #12
   28e0c:	pop	{pc}		; (ldr pc, [sp], #4)

00028e10 <fb_schema_table_find@@Base>:
   28e10:	push	{r4, lr}
   28e14:	bl	28bb0 <fb_scope_table_visit@@Base+0x3a8>
   28e18:	pop	{r4, pc}

00028e1c <fb_schema_table_find_item@@Base>:
   28e1c:	push	{r4, lr}
   28e20:	ldr	r2, [r1, #148]	; 0x94
   28e24:	ldr	r1, [r1, #144]	; 0x90
   28e28:	bl	28bb0 <fb_scope_table_visit@@Base+0x3a8>
   28e2c:	pop	{r4, pc}

00028e30 <fb_schema_table_remove@@Base>:
   28e30:	push	{r4, lr}
   28e34:	bl	28c64 <fb_scope_table_visit@@Base+0x45c>
   28e38:	pop	{r4, pc}

00028e3c <fb_schema_table_remove_item@@Base>:
   28e3c:	push	{r4, lr}
   28e40:	ldr	r2, [r1, #148]	; 0x94
   28e44:	ldr	r1, [r1, #144]	; 0x90
   28e48:	bl	28c64 <fb_scope_table_visit@@Base+0x45c>
   28e4c:	pop	{r4, pc}

00028e50 <fb_schema_table_visit@@Base>:
   28e50:	push	{r4, lr}
   28e54:	bl	28814 <fb_scope_table_visit@@Base+0xc>
   28e58:	pop	{r4, pc}

00028e5c <__flatcc_fb_copy_path_n@@Base>:
   28e5c:	push	{r4, r5, r6, lr}
   28e60:	mov	r6, r0
   28e64:	mov	r4, r1
   28e68:	mov	r2, r1
   28e6c:	mov	r1, #0
   28e70:	bl	13fc0 <memchr@plt>
   28e74:	cmp	r0, #0
   28e78:	subne	r4, r0, r6
   28e7c:	add	r0, r4, #1
   28e80:	bl	13f3c <malloc@plt>
   28e84:	subs	r5, r0, #0
   28e88:	beq	28ea4 <__flatcc_fb_copy_path_n@@Base+0x48>
   28e8c:	mov	r2, r4
   28e90:	mov	r1, r6
   28e94:	mov	r0, r5
   28e98:	bl	13edc <memcpy@plt>
   28e9c:	mov	r3, #0
   28ea0:	strb	r3, [r5, r4]
   28ea4:	mov	r0, r5
   28ea8:	pop	{r4, r5, r6, pc}

00028eac <__flatcc_fb_copy_path@@Base>:
   28eac:	push	{r4, r5, r6, lr}
   28eb0:	mov	r6, r0
   28eb4:	bl	13f78 <strlen@plt>
   28eb8:	mov	r5, r0
   28ebc:	add	r0, r0, #1
   28ec0:	bl	13f3c <malloc@plt>
   28ec4:	subs	r4, r0, #0
   28ec8:	beq	28ee4 <__flatcc_fb_copy_path@@Base+0x38>
   28ecc:	mov	r2, r5
   28ed0:	mov	r1, r6
   28ed4:	mov	r0, r4
   28ed8:	bl	13edc <memcpy@plt>
   28edc:	mov	r3, #0
   28ee0:	strb	r3, [r4, r5]
   28ee4:	mov	r0, r4
   28ee8:	pop	{r4, r5, r6, pc}

00028eec <__flatcc_fb_chomp@@Base>:
   28eec:	push	{r4, r5, r6, r7, r8, lr}
   28ef0:	mov	r7, r0
   28ef4:	mov	r4, r1
   28ef8:	subs	r5, r2, #0
   28efc:	moveq	r0, #0
   28f00:	beq	28f0c <__flatcc_fb_chomp@@Base+0x20>
   28f04:	mov	r0, r5
   28f08:	bl	13f78 <strlen@plt>
   28f0c:	cmp	r0, r4
   28f10:	bcs	28f30 <__flatcc_fb_chomp@@Base+0x44>
   28f14:	sub	r6, r4, r0
   28f18:	mov	r2, r0
   28f1c:	mov	r1, r5
   28f20:	add	r0, r7, r6
   28f24:	bl	14020 <strncmp@plt>
   28f28:	cmp	r0, #0
   28f2c:	moveq	r4, r6
   28f30:	mov	r0, r4
   28f34:	pop	{r4, r5, r6, r7, r8, pc}

00028f38 <__flatcc_fb_create_join_path_n@@Base>:
   28f38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28f3c:	mov	r9, r0
   28f40:	mov	r4, r1
   28f44:	mov	sl, r2
   28f48:	mov	r7, r3
   28f4c:	ldr	r8, [sp, #32]
   28f50:	cmp	r8, #0
   28f54:	moveq	r6, #0
   28f58:	beq	28f68 <__flatcc_fb_create_join_path_n@@Base+0x30>
   28f5c:	mov	r0, r8
   28f60:	bl	13f78 <strlen@plt>
   28f64:	mov	r6, r0
   28f68:	cmp	r9, #0
   28f6c:	beq	29038 <__flatcc_fb_create_join_path_n@@Base+0x100>
   28f70:	cmp	r7, #0
   28f74:	beq	28f9c <__flatcc_fb_create_join_path_n@@Base+0x64>
   28f78:	ldrb	r3, [sl]
   28f7c:	cmp	r3, #92	; 0x5c
   28f80:	cmpne	r3, #47	; 0x2f
   28f84:	beq	29040 <__flatcc_fb_create_join_path_n@@Base+0x108>
   28f88:	cmp	r7, #1
   28f8c:	bls	28f9c <__flatcc_fb_create_join_path_n@@Base+0x64>
   28f90:	ldrb	r3, [sl, #1]
   28f94:	cmp	r3, #58	; 0x3a
   28f98:	beq	29070 <__flatcc_fb_create_join_path_n@@Base+0x138>
   28f9c:	ldr	r3, [sp, #36]	; 0x24
   28fa0:	cmp	r3, #0
   28fa4:	beq	29044 <__flatcc_fb_create_join_path_n@@Base+0x10c>
   28fa8:	cmp	r4, #0
   28fac:	beq	29044 <__flatcc_fb_create_join_path_n@@Base+0x10c>
   28fb0:	add	r3, r9, r4
   28fb4:	ldrb	r3, [r3, #-1]
   28fb8:	cmp	r3, #92	; 0x5c
   28fbc:	cmpne	r3, #47	; 0x2f
   28fc0:	beq	29044 <__flatcc_fb_create_join_path_n@@Base+0x10c>
   28fc4:	ldr	r3, [sp, #36]	; 0x24
   28fc8:	add	r0, r3, #1
   28fcc:	add	r0, r0, r7
   28fd0:	add	r0, r0, r6
   28fd4:	add	r0, r0, r4
   28fd8:	bl	13f3c <malloc@plt>
   28fdc:	subs	r5, r0, #0
   28fe0:	beq	29030 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   28fe4:	mov	r2, r4
   28fe8:	mov	r1, r9
   28fec:	mov	r0, r5
   28ff0:	bl	13edc <memcpy@plt>
   28ff4:	mov	r3, #47	; 0x2f
   28ff8:	strb	r3, [r5, r4]
   28ffc:	add	r4, r4, #1
   29000:	mov	r2, r7
   29004:	mov	r1, sl
   29008:	add	r0, r5, r4
   2900c:	bl	13edc <memcpy@plt>
   29010:	add	r4, r4, r7
   29014:	mov	r2, r6
   29018:	mov	r1, r8
   2901c:	add	r0, r5, r4
   29020:	bl	13edc <memcpy@plt>
   29024:	add	r6, r5, r6
   29028:	mov	r3, #0
   2902c:	strb	r3, [r6, r4]
   29030:	mov	r0, r5
   29034:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29038:	mov	r4, #0
   2903c:	b	29044 <__flatcc_fb_create_join_path_n@@Base+0x10c>
   29040:	mov	r4, #0
   29044:	add	r0, r7, #1
   29048:	add	r0, r0, r6
   2904c:	add	r0, r0, r4
   29050:	bl	13f3c <malloc@plt>
   29054:	subs	r5, r0, #0
   29058:	beq	29030 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   2905c:	mov	r2, r4
   29060:	mov	r1, r9
   29064:	mov	r0, r5
   29068:	bl	13edc <memcpy@plt>
   2906c:	b	29000 <__flatcc_fb_create_join_path_n@@Base+0xc8>
   29070:	mov	r4, #0
   29074:	b	29044 <__flatcc_fb_create_join_path_n@@Base+0x10c>

00029078 <__flatcc_fb_create_join_path@@Base>:
   29078:	push	{r4, r5, r6, r7, r8, lr}
   2907c:	sub	sp, sp, #8
   29080:	mov	r4, r1
   29084:	mov	r7, r2
   29088:	mov	r8, r3
   2908c:	subs	r5, r0, #0
   29090:	moveq	r6, #0
   29094:	beq	290a4 <__flatcc_fb_create_join_path@@Base+0x2c>
   29098:	mov	r0, r5
   2909c:	bl	13f78 <strlen@plt>
   290a0:	mov	r6, r0
   290a4:	cmp	r4, #0
   290a8:	beq	290d8 <__flatcc_fb_create_join_path@@Base+0x60>
   290ac:	mov	r0, r4
   290b0:	bl	13f78 <strlen@plt>
   290b4:	mov	r3, r0
   290b8:	str	r8, [sp, #4]
   290bc:	str	r7, [sp]
   290c0:	mov	r2, r4
   290c4:	mov	r1, r6
   290c8:	mov	r0, r5
   290cc:	bl	28f38 <__flatcc_fb_create_join_path_n@@Base>
   290d0:	add	sp, sp, #8
   290d4:	pop	{r4, r5, r6, r7, r8, pc}
   290d8:	mov	r3, #0
   290dc:	b	290b8 <__flatcc_fb_create_join_path@@Base+0x40>

000290e0 <__flatcc_fb_create_path_ext_n@@Base>:
   290e0:	push	{lr}		; (str lr, [sp, #-4]!)
   290e4:	sub	sp, sp, #12
   290e8:	mov	ip, #0
   290ec:	str	ip, [sp, #4]
   290f0:	str	r2, [sp]
   290f4:	mov	r3, r1
   290f8:	mov	r2, r0
   290fc:	mov	r1, ip
   29100:	mov	r0, ip
   29104:	bl	28f38 <__flatcc_fb_create_join_path_n@@Base>
   29108:	add	sp, sp, #12
   2910c:	pop	{pc}		; (ldr pc, [sp], #4)

00029110 <__flatcc_fb_create_path_ext@@Base>:
   29110:	push	{r4, lr}
   29114:	mov	r3, #0
   29118:	mov	r2, r1
   2911c:	mov	r1, r0
   29120:	mov	r0, r3
   29124:	bl	29078 <__flatcc_fb_create_join_path@@Base>
   29128:	pop	{r4, pc}

0002912c <__flatcc_fb_create_make_path_n@@Base>:
   2912c:	push	{r4, r5, r6, lr}
   29130:	mov	r4, r0
   29134:	cmp	r1, #1
   29138:	beq	291a0 <__flatcc_fb_create_make_path_n@@Base+0x74>
   2913c:	cmp	r1, #1
   29140:	bls	291b0 <__flatcc_fb_create_make_path_n@@Base+0x84>
   29144:	subs	r5, r1, #1
   29148:	movne	r3, r0
   2914c:	addne	r0, r0, r5
   29150:	bne	291f0 <__flatcc_fb_create_make_path_n@@Base+0xc4>
   29154:	ldrb	r0, [r4]
   29158:	add	r1, r1, #1
   2915c:	cmp	r0, #32
   29160:	movne	r0, r1
   29164:	addeq	r0, r1, #1
   29168:	bl	13f3c <malloc@plt>
   2916c:	cmp	r0, #0
   29170:	popeq	{r4, r5, r6, pc}
   29174:	mov	r3, r5
   29178:	ldrb	r1, [r4, r5]
   2917c:	cmp	r1, #32
   29180:	moveq	r2, #92	; 0x5c
   29184:	strbeq	r2, [r0, r3]
   29188:	addeq	r3, r3, #1
   2918c:	mov	r2, r0
   29190:	strb	r1, [r2, r3]!
   29194:	mov	r3, #0
   29198:	strb	r3, [r2, #1]
   2919c:	pop	{r4, r5, r6, pc}
   291a0:	ldrb	r5, [r0]
   291a4:	cmp	r5, #92	; 0x5c
   291a8:	cmpne	r5, #32
   291ac:	beq	291bc <__flatcc_fb_create_make_path_n@@Base+0x90>
   291b0:	mov	r0, r4
   291b4:	bl	28e5c <__flatcc_fb_copy_path_n@@Base>
   291b8:	pop	{r4, r5, r6, pc}
   291bc:	mov	r0, #3
   291c0:	bl	13f3c <malloc@plt>
   291c4:	cmp	r0, #0
   291c8:	movne	r3, #92	; 0x5c
   291cc:	strbne	r3, [r0]
   291d0:	strbne	r5, [r0, #1]
   291d4:	movne	r3, #0
   291d8:	strbne	r3, [r0, #2]
   291dc:	pop	{r4, r5, r6, pc}
   291e0:	cmp	r2, #32
   291e4:	addeq	r1, r1, #1
   291e8:	cmp	r3, r0
   291ec:	beq	2920c <__flatcc_fb_create_make_path_n@@Base+0xe0>
   291f0:	ldrb	r2, [r3], #1
   291f4:	cmp	r2, #92	; 0x5c
   291f8:	bne	291e0 <__flatcc_fb_create_make_path_n@@Base+0xb4>
   291fc:	ldrb	ip, [r3]
   29200:	cmp	ip, #32
   29204:	addeq	r1, r1, #1
   29208:	b	291e0 <__flatcc_fb_create_make_path_n@@Base+0xb4>
   2920c:	add	r6, r4, r5
   29210:	ldrb	r0, [r4, r5]
   29214:	add	r1, r1, #1
   29218:	cmp	r0, #32
   2921c:	movne	r0, r1
   29220:	addeq	r0, r1, #1
   29224:	bl	13f3c <malloc@plt>
   29228:	cmp	r0, #0
   2922c:	popeq	{r4, r5, r6, pc}
   29230:	mov	r1, r4
   29234:	mov	ip, r6
   29238:	mov	r3, #0
   2923c:	mov	r6, #92	; 0x5c
   29240:	b	29264 <__flatcc_fb_create_make_path_n@@Base+0x138>
   29244:	ldrb	lr, [r1]
   29248:	cmp	lr, #32
   2924c:	strbeq	r6, [r0, r3]
   29250:	addeq	r3, r3, #1
   29254:	strb	r2, [r0, r3]
   29258:	add	r3, r3, #1
   2925c:	cmp	r1, ip
   29260:	beq	29178 <__flatcc_fb_create_make_path_n@@Base+0x4c>
   29264:	ldrb	r2, [r1], #1
   29268:	cmp	r2, #92	; 0x5c
   2926c:	beq	29244 <__flatcc_fb_create_make_path_n@@Base+0x118>
   29270:	cmp	r2, #32
   29274:	strbeq	r6, [r0, r3]
   29278:	addeq	r3, r3, #1
   2927c:	b	29254 <__flatcc_fb_create_make_path_n@@Base+0x128>

00029280 <__flatcc_fb_create_make_path@@Base>:
   29280:	push	{r4, lr}
   29284:	mov	r4, r0
   29288:	bl	13f78 <strlen@plt>
   2928c:	mov	r1, r0
   29290:	mov	r0, r4
   29294:	bl	2912c <__flatcc_fb_create_make_path_n@@Base>
   29298:	pop	{r4, pc}

0002929c <__flatcc_fb_find_basename@@Base>:
   2929c:	add	r1, r0, r1
   292a0:	cmp	r0, r1
   292a4:	beq	292e0 <__flatcc_fb_find_basename@@Base+0x44>
   292a8:	sub	r3, r1, #1
   292ac:	ldrb	r2, [r1, #-1]
   292b0:	cmp	r2, #92	; 0x5c
   292b4:	cmpne	r2, #47	; 0x2f
   292b8:	beq	292ec <__flatcc_fb_find_basename@@Base+0x50>
   292bc:	cmp	r0, r3
   292c0:	beq	292e4 <__flatcc_fb_find_basename@@Base+0x48>
   292c4:	sub	r1, r3, #1
   292c8:	ldrb	r2, [r3, #-1]
   292cc:	cmp	r2, #92	; 0x5c
   292d0:	cmpne	r2, #47	; 0x2f
   292d4:	beq	292e4 <__flatcc_fb_find_basename@@Base+0x48>
   292d8:	mov	r3, r1
   292dc:	b	292bc <__flatcc_fb_find_basename@@Base+0x20>
   292e0:	mov	r3, r1
   292e4:	sub	r0, r3, r0
   292e8:	bx	lr
   292ec:	mov	r3, r1
   292f0:	b	292e4 <__flatcc_fb_find_basename@@Base+0x48>

000292f4 <__flatcc_fb_create_basename@@Base>:
   292f4:	push	{r4, r5, r6, lr}
   292f8:	mov	r4, r0
   292fc:	mov	r5, r1
   29300:	mov	r6, r2
   29304:	bl	2929c <__flatcc_fb_find_basename@@Base>
   29308:	add	r4, r4, r0
   2930c:	mov	r2, r6
   29310:	sub	r1, r5, r0
   29314:	mov	r0, r4
   29318:	bl	28eec <__flatcc_fb_chomp@@Base>
   2931c:	mov	r6, r0
   29320:	add	r0, r0, #1
   29324:	bl	13f3c <malloc@plt>
   29328:	subs	r5, r0, #0
   2932c:	beq	29348 <__flatcc_fb_create_basename@@Base+0x54>
   29330:	mov	r2, r6
   29334:	mov	r1, r4
   29338:	mov	r0, r5
   2933c:	bl	13edc <memcpy@plt>
   29340:	mov	r3, #0
   29344:	strb	r3, [r5, r6]
   29348:	mov	r0, r5
   2934c:	pop	{r4, r5, r6, pc}

00029350 <__flatcc_fb_read_file@@Base>:
   29350:	push	{r4, r5, r6, r7, r8, r9, lr}
   29354:	sub	sp, sp, #12
   29358:	mov	r4, r1
   2935c:	subs	r9, r2, #0
   29360:	addeq	r9, sp, #4
   29364:	ldr	r1, [pc, #208]	; 2943c <__flatcc_fb_read_file@@Base+0xec>
   29368:	bl	13ec4 <fopen@plt>
   2936c:	subs	r6, r0, #0
   29370:	beq	29404 <__flatcc_fb_read_file@@Base+0xb4>
   29374:	mov	r2, #2
   29378:	mov	r1, #0
   2937c:	mov	r0, r6
   29380:	bl	14014 <fseek@plt>
   29384:	mov	r0, r6
   29388:	bl	13ee8 <ftell@plt>
   2938c:	mov	r5, r0
   29390:	str	r0, [r9]
   29394:	cmp	r4, #0
   29398:	cmpne	r0, r4
   2939c:	bhi	2940c <__flatcc_fb_read_file@@Base+0xbc>
   293a0:	mov	r0, r6
   293a4:	bl	13f00 <rewind@plt>
   293a8:	cmp	r5, #0
   293ac:	movne	r0, r5
   293b0:	moveq	r0, #1
   293b4:	bl	13f3c <malloc@plt>
   293b8:	subs	r7, r0, #0
   293bc:	beq	29410 <__flatcc_fb_read_file@@Base+0xc0>
   293c0:	mov	r4, #0
   293c4:	mov	r8, #1
   293c8:	b	293d0 <__flatcc_fb_read_file@@Base+0x80>
   293cc:	add	r4, r4, r0
   293d0:	mov	r3, r6
   293d4:	sub	r2, r5, r4
   293d8:	mov	r1, r8
   293dc:	add	r0, r7, r4
   293e0:	bl	13f24 <fread@plt>
   293e4:	cmp	r0, #0
   293e8:	bne	293cc <__flatcc_fb_read_file@@Base+0x7c>
   293ec:	cmp	r4, r5
   293f0:	bne	29410 <__flatcc_fb_read_file@@Base+0xc0>
   293f4:	mov	r0, r6
   293f8:	bl	13fcc <fclose@plt>
   293fc:	str	r4, [r9]
   29400:	b	29430 <__flatcc_fb_read_file@@Base+0xe0>
   29404:	mov	r5, #0
   29408:	b	29428 <__flatcc_fb_read_file@@Base+0xd8>
   2940c:	mov	r7, #0
   29410:	mov	r0, r6
   29414:	bl	13fcc <fclose@plt>
   29418:	cmp	r7, #0
   2941c:	beq	29428 <__flatcc_fb_read_file@@Base+0xd8>
   29420:	mov	r0, r7
   29424:	bl	13ed0 <free@plt>
   29428:	str	r5, [r9]
   2942c:	mov	r7, #0
   29430:	mov	r0, r7
   29434:	add	sp, sp, #12
   29438:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2943c:	andeq	r2, r5, ip, lsr #8
   29440:	ldr	r3, [r0]
   29444:	cmp	r3, #0
   29448:	beq	2946c <__flatcc_fb_read_file@@Base+0x11c>
   2944c:	mov	r1, #0
   29450:	b	29458 <__flatcc_fb_read_file@@Base+0x108>
   29454:	mov	r3, r2
   29458:	ldr	r2, [r3]
   2945c:	str	r1, [r3]
   29460:	mov	r1, r3
   29464:	cmp	r2, #0
   29468:	bne	29454 <__flatcc_fb_read_file@@Base+0x104>
   2946c:	str	r3, [r0]
   29470:	bx	lr

00029474 <__flatcc_fb_default_error_out@@Base>:
   29474:	push	{r4, lr}
   29478:	mov	r0, r1
   2947c:	ldr	r3, [pc, #12]	; 29490 <__flatcc_fb_default_error_out@@Base+0x1c>
   29480:	ldr	r3, [r3]
   29484:	mov	r1, #1
   29488:	bl	13f18 <fwrite@plt>
   2948c:	pop	{r4, pc}
   29490:	andeq	r6, r6, r8, lsr #1
   29494:	push	{r4, r5, r6, r7, r8, lr}
   29498:	mov	r4, r0
   2949c:	mov	r7, r1
   294a0:	mov	r5, r2
   294a4:	mov	r6, r3
   294a8:	ldr	r0, [r0, #20]
   294ac:	ldr	r1, [r4, #28]
   294b0:	add	r8, r1, r1, lsl #2
   294b4:	lsl	r8, r8, #2
   294b8:	add	r3, r0, r8
   294bc:	str	r3, [r4, #24]
   294c0:	ldr	r2, [r4, #40]	; 0x28
   294c4:	cmp	r3, r2
   294c8:	beq	29508 <__flatcc_fb_default_error_out@@Base+0x94>
   294cc:	ldr	r2, [r4, #40]	; 0x28
   294d0:	str	r7, [r2, #16]
   294d4:	str	r5, [r2]
   294d8:	sub	r6, r6, r5
   294dc:	str	r6, [r2, #4]
   294e0:	ldr	r3, [r4, #64]	; 0x40
   294e4:	str	r3, [r2, #8]
   294e8:	ldr	r3, [r4, #60]	; 0x3c
   294ec:	sub	r5, r5, r3
   294f0:	add	r5, r5, #1
   294f4:	str	r5, [r2, #12]
   294f8:	ldr	r3, [r4, #40]	; 0x28
   294fc:	add	r3, r3, #20
   29500:	str	r3, [r4, #40]	; 0x28
   29504:	pop	{r4, r5, r6, r7, r8, pc}
   29508:	cmp	r1, #0
   2950c:	lslne	r1, r1, #1
   29510:	moveq	r1, #1024	; 0x400
   29514:	str	r1, [r4, #28]
   29518:	add	r1, r1, r1, lsl #2
   2951c:	lsl	r1, r1, #2
   29520:	bl	13f0c <realloc@plt>
   29524:	str	r0, [r4, #20]
   29528:	cmp	r0, #0
   2952c:	beq	2954c <__flatcc_fb_default_error_out@@Base+0xd8>
   29530:	ldr	r3, [r4, #28]
   29534:	add	r3, r3, r3, lsl #2
   29538:	add	r3, r0, r3, lsl #2
   2953c:	str	r3, [r4, #24]
   29540:	add	r0, r0, r8
   29544:	str	r0, [r4, #40]	; 0x28
   29548:	b	294cc <__flatcc_fb_default_error_out@@Base+0x58>
   2954c:	ldr	r3, [pc, #24]	; 2956c <__flatcc_fb_default_error_out@@Base+0xf8>
   29550:	ldr	r3, [r3]
   29554:	mov	r2, #34	; 0x22
   29558:	mov	r1, #1
   2955c:	ldr	r0, [pc, #12]	; 29570 <__flatcc_fb_default_error_out@@Base+0xfc>
   29560:	bl	13f18 <fwrite@plt>
   29564:	mov	r0, #1
   29568:	bl	13f6c <exit@plt>
   2956c:	andeq	r6, r6, r8, lsr #1
   29570:	muleq	r3, r4, r3
   29574:	push	{r4, lr}
   29578:	add	r0, r1, #4
   2957c:	bl	2779c <fb_symbol_table_clear@@Base>
   29580:	pop	{r4, pc}
   29584:	push	{r4, r5, r6, r7, r8, lr}
   29588:	mov	r4, r0
   2958c:	ldr	r3, [r0, #40]	; 0x28
   29590:	add	r5, r3, #20
   29594:	str	r5, [r0, #40]	; 0x28
   29598:	ldr	r2, [r0, #24]
   2959c:	cmp	r5, r2
   295a0:	beq	295c0 <__flatcc_fb_default_error_out@@Base+0x14c>
   295a4:	ldr	r3, [r3, #36]	; 0x24
   295a8:	cmn	r3, #964	; 0x3c4
   295ac:	moveq	r7, #1
   295b0:	moveq	r6, #65536	; 0x10000
   295b4:	beq	29638 <__flatcc_fb_default_error_out@@Base+0x1c4>
   295b8:	mov	r0, r5
   295bc:	pop	{r4, r5, r6, r7, r8, pc}
   295c0:	str	r3, [r4, #40]	; 0x28
   295c4:	ldr	r3, [pc, #180]	; 29680 <__flatcc_fb_default_error_out@@Base+0x20c>
   295c8:	ldr	r2, [pc, #180]	; 29684 <__flatcc_fb_default_error_out@@Base+0x210>
   295cc:	ldr	r1, [pc, #180]	; 29688 <__flatcc_fb_default_error_out@@Base+0x214>
   295d0:	ldr	r0, [pc, #180]	; 2968c <__flatcc_fb_default_error_out@@Base+0x218>
   295d4:	bl	14038 <__assert_fail@plt>
   295d8:	ldr	r3, [pc, #176]	; 29690 <__flatcc_fb_default_error_out@@Base+0x21c>
   295dc:	ldr	r3, [r3]
   295e0:	mov	r2, #34	; 0x22
   295e4:	mov	r1, #1
   295e8:	ldr	r0, [pc, #164]	; 29694 <__flatcc_fb_default_error_out@@Base+0x220>
   295ec:	bl	13f18 <fwrite@plt>
   295f0:	mov	r0, #1
   295f4:	bl	13f6c <exit@plt>
   295f8:	ldr	r2, [r4, #52]	; 0x34
   295fc:	add	r2, r2, #16
   29600:	str	r2, [r4, #52]	; 0x34
   29604:	str	r5, [r3, #4]
   29608:	ldr	r2, [r4, #36]	; 0x24
   2960c:	str	r2, [r3]
   29610:	str	r3, [r4, #36]	; 0x24
   29614:	ldr	r3, [r4, #40]	; 0x28
   29618:	add	r5, r3, #20
   2961c:	str	r5, [r4, #40]	; 0x28
   29620:	ldr	r2, [r4, #24]
   29624:	cmp	r5, r2
   29628:	beq	295c0 <__flatcc_fb_default_error_out@@Base+0x14c>
   2962c:	ldr	r3, [r3, #36]	; 0x24
   29630:	cmn	r3, #964	; 0x3c4
   29634:	bne	295b8 <__flatcc_fb_default_error_out@@Base+0x144>
   29638:	ldr	r3, [r4, #52]	; 0x34
   2963c:	add	r1, r3, #16
   29640:	ldr	r2, [r4, #44]	; 0x2c
   29644:	cmp	r1, r2
   29648:	bls	295f8 <__flatcc_fb_default_error_out@@Base+0x184>
   2964c:	mov	r1, r7
   29650:	mov	r0, r6
   29654:	bl	13ea0 <calloc@plt>
   29658:	cmp	r0, #0
   2965c:	beq	295d8 <__flatcc_fb_default_error_out@@Base+0x164>
   29660:	ldr	r3, [r4, #48]	; 0x30
   29664:	str	r3, [r0]
   29668:	str	r0, [r4, #48]	; 0x30
   2966c:	add	r3, r0, #16
   29670:	str	r3, [r4, #52]	; 0x34
   29674:	add	r0, r0, #65536	; 0x10000
   29678:	str	r0, [r4, #44]	; 0x2c
   2967c:	b	295f8 <__flatcc_fb_default_error_out@@Base+0x184>
   29680:	andeq	r2, r5, r0, lsr r4
   29684:	andeq	r0, r0, r5, asr r1
   29688:	andeq	r2, r5, r8, asr r5
   2968c:	andeq	r3, r4, r0, ror lr
   29690:	andeq	r6, r6, r8, lsr #1
   29694:	muleq	r3, r4, r3
   29698:	ldr	r3, [r0, #40]	; 0x28
   2969c:	ldr	r3, [r3, #16]
   296a0:	cmp	r3, #0
   296a4:	bxeq	lr
   296a8:	push	{r4, r5, r6, lr}
   296ac:	mov	r6, r2
   296b0:	mov	r5, r1
   296b4:	mov	r4, r0
   296b8:	cmp	r1, r3
   296bc:	beq	296e0 <__flatcc_fb_default_error_out@@Base+0x26c>
   296c0:	mov	r0, r4
   296c4:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   296c8:	ldr	r3, [r4, #40]	; 0x28
   296cc:	ldr	r3, [r3, #16]
   296d0:	cmp	r3, #0
   296d4:	beq	29700 <__flatcc_fb_default_error_out@@Base+0x28c>
   296d8:	cmp	r3, r5
   296dc:	bne	296c0 <__flatcc_fb_default_error_out@@Base+0x24c>
   296e0:	cmp	r6, #0
   296e4:	bne	296f4 <__flatcc_fb_default_error_out@@Base+0x280>
   296e8:	mov	r3, #0
   296ec:	str	r3, [r4, #36]	; 0x24
   296f0:	pop	{r4, r5, r6, pc}
   296f4:	mov	r0, r4
   296f8:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   296fc:	b	296e8 <__flatcc_fb_default_error_out@@Base+0x274>
   29700:	pop	{r4, r5, r6, pc}

00029704 <__flatcc_fb_print_error@@Base>:
   29704:	push	{r1, r2, r3}
   29708:	push	{r4, r5, lr}
   2970c:	sub	sp, sp, #208	; 0xd0
   29710:	mov	r5, r0
   29714:	add	r3, sp, #224	; 0xe0
   29718:	str	r3, [sp, #204]	; 0xcc
   2971c:	ldr	r2, [sp, #220]	; 0xdc
   29720:	mov	r1, #200	; 0xc8
   29724:	add	r0, sp, #4
   29728:	bl	13ffc <vsnprintf@plt>
   2972c:	mov	r4, r0
   29730:	cmp	r0, #199	; 0xc7
   29734:	bgt	29760 <__flatcc_fb_print_error@@Base+0x5c>
   29738:	ldr	r3, [r5, #8]
   2973c:	mov	r2, r4
   29740:	add	r1, sp, #4
   29744:	ldr	r0, [r5, #12]
   29748:	blx	r3
   2974c:	mov	r0, r4
   29750:	add	sp, sp, #208	; 0xd0
   29754:	pop	{r4, r5, lr}
   29758:	add	sp, sp, #12
   2975c:	bx	lr
   29760:	ldr	r3, [pc, #20]	; 2977c <__flatcc_fb_print_error@@Base+0x78>
   29764:	ldr	r0, [r3]
   29768:	str	r0, [sp, #199]	; 0xc7
   2976c:	ldrb	r3, [r3, #4]
   29770:	strb	r3, [sp, #203]	; 0xcb
   29774:	mov	r4, #199	; 0xc7
   29778:	b	29738 <__flatcc_fb_print_error@@Base+0x34>
   2977c:	andeq	r2, r5, r0, lsr #11

00029780 <__flatcc_error_find_file_of_token@@Base>:
   29780:	cmp	r0, #0
   29784:	bne	2979c <__flatcc_error_find_file_of_token@@Base+0x1c>
   29788:	ldr	r0, [pc, #52]	; 297c4 <__flatcc_error_find_file_of_token@@Base+0x44>
   2978c:	bx	lr
   29790:	ldr	r0, [r0]
   29794:	cmp	r0, #0
   29798:	beq	297bc <__flatcc_error_find_file_of_token@@Base+0x3c>
   2979c:	ldr	r3, [r0, #20]
   297a0:	cmp	r3, r1
   297a4:	bhi	29790 <__flatcc_error_find_file_of_token@@Base+0x10>
   297a8:	ldr	r3, [r0, #24]
   297ac:	cmp	r1, r3
   297b0:	bcs	29790 <__flatcc_error_find_file_of_token@@Base+0x10>
   297b4:	ldr	r0, [r0, #520]	; 0x208
   297b8:	bx	lr
   297bc:	ldr	r0, [pc]	; 297c4 <__flatcc_error_find_file_of_token@@Base+0x44>
   297c0:	bx	lr
   297c4:	andeq	r5, r4, r0, lsr #2

000297c8 <__flatcc_error_report@@Base>:
   297c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   297cc:	sub	sp, sp, #44	; 0x2c
   297d0:	mov	r5, r0
   297d4:	mov	r6, r2
   297d8:	mov	r4, r3
   297dc:	ldr	r7, [sp, #72]	; 0x48
   297e0:	mov	r8, r1
   297e4:	adds	r1, r1, #0
   297e8:	movne	r1, #1
   297ec:	cmp	r7, #0
   297f0:	movne	r3, #0
   297f4:	andeq	r3, r1, #1
   297f8:	cmp	r3, #0
   297fc:	ldrne	r7, [r8]
   29800:	ldrne	r3, [r8, #4]
   29804:	strne	r3, [sp, #76]	; 0x4c
   29808:	ldr	r3, [pc, #356]	; 29974 <__flatcc_error_report@@Base+0x1ac>
   2980c:	cmp	r2, #0
   29810:	moveq	r6, r3
   29814:	cmp	r7, #0
   29818:	moveq	r3, #0
   2981c:	streq	r3, [sp, #76]	; 0x4c
   29820:	ldreq	r7, [pc, #332]	; 29974 <__flatcc_error_report@@Base+0x1ac>
   29824:	clz	r3, r4
   29828:	lsr	r3, r3, #5
   2982c:	tst	r1, r3
   29830:	bne	298b4 <__flatcc_error_report@@Base+0xec>
   29834:	cmp	r4, #0
   29838:	moveq	r1, #0
   2983c:	andne	r1, r1, #1
   29840:	cmp	r1, #0
   29844:	bne	298ec <__flatcc_error_report@@Base+0x124>
   29848:	cmp	r8, #0
   2984c:	movne	r3, #0
   29850:	andeq	r3, r3, #1
   29854:	cmp	r3, #0
   29858:	bne	29958 <__flatcc_error_report@@Base+0x190>
   2985c:	cmp	r4, #0
   29860:	beq	29968 <__flatcc_error_report@@Base+0x1a0>
   29864:	mov	r1, r4
   29868:	bl	29780 <__flatcc_error_find_file_of_token@@Base>
   2986c:	ldr	r3, [r4]
   29870:	str	r3, [sp, #12]
   29874:	ldr	r3, [r4, #4]
   29878:	str	r3, [sp, #8]
   2987c:	ldr	r3, [r4, #12]
   29880:	str	r3, [sp, #4]
   29884:	ldr	r3, [r4, #8]
   29888:	str	r3, [sp]
   2988c:	mov	r3, r0
   29890:	mov	r2, r6
   29894:	ldr	r1, [pc, #220]	; 29978 <__flatcc_error_report@@Base+0x1b0>
   29898:	mov	r0, r5
   2989c:	bl	29704 <__flatcc_fb_print_error@@Base>
   298a0:	ldr	r3, [r5, #108]	; 0x6c
   298a4:	add	r3, r3, #1
   298a8:	str	r3, [r5, #108]	; 0x6c
   298ac:	add	sp, sp, #44	; 0x2c
   298b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   298b4:	mov	r1, r8
   298b8:	bl	29780 <__flatcc_error_find_file_of_token@@Base>
   298bc:	ldr	r3, [r8, #8]
   298c0:	str	r6, [sp, #12]
   298c4:	str	r7, [sp, #8]
   298c8:	ldr	r2, [sp, #76]	; 0x4c
   298cc:	str	r2, [sp, #4]
   298d0:	ldr	r2, [r8, #12]
   298d4:	str	r2, [sp]
   298d8:	mov	r2, r0
   298dc:	ldr	r1, [pc, #152]	; 2997c <__flatcc_error_report@@Base+0x1b4>
   298e0:	mov	r0, r5
   298e4:	bl	29704 <__flatcc_fb_print_error@@Base>
   298e8:	b	298a0 <__flatcc_error_report@@Base+0xd8>
   298ec:	mov	r1, r8
   298f0:	bl	29780 <__flatcc_error_find_file_of_token@@Base>
   298f4:	mov	r9, r0
   298f8:	mov	r1, r4
   298fc:	mov	r0, r5
   29900:	bl	29780 <__flatcc_error_find_file_of_token@@Base>
   29904:	ldr	r3, [r8, #8]
   29908:	ldr	r2, [r4]
   2990c:	str	r2, [sp, #32]
   29910:	ldr	r2, [r4, #4]
   29914:	str	r2, [sp, #28]
   29918:	ldr	r2, [r4, #12]
   2991c:	str	r2, [sp, #24]
   29920:	ldr	r2, [r4, #8]
   29924:	str	r2, [sp, #20]
   29928:	str	r0, [sp, #16]
   2992c:	str	r6, [sp, #12]
   29930:	str	r7, [sp, #8]
   29934:	ldr	r2, [sp, #76]	; 0x4c
   29938:	str	r2, [sp, #4]
   2993c:	ldr	r2, [r8, #12]
   29940:	str	r2, [sp]
   29944:	mov	r2, r9
   29948:	ldr	r1, [pc, #48]	; 29980 <__flatcc_error_report@@Base+0x1b8>
   2994c:	mov	r0, r5
   29950:	bl	29704 <__flatcc_fb_print_error@@Base>
   29954:	b	298a0 <__flatcc_error_report@@Base+0xd8>
   29958:	mov	r2, r6
   2995c:	ldr	r1, [pc, #32]	; 29984 <__flatcc_error_report@@Base+0x1bc>
   29960:	bl	29704 <__flatcc_fb_print_error@@Base>
   29964:	b	298a0 <__flatcc_error_report@@Base+0xd8>
   29968:	ldr	r1, [pc, #24]	; 29988 <__flatcc_error_report@@Base+0x1c0>
   2996c:	bl	29704 <__flatcc_fb_print_error@@Base>
   29970:	b	298a0 <__flatcc_error_report@@Base+0xd8>
   29974:	andeq	r5, r4, r0, lsr #2
   29978:	andeq	r2, r5, r8, lsl #12
   2997c:	andeq	r2, r5, r8, lsr #11
   29980:	andeq	r2, r5, r8, asr #11
   29984:	strdeq	r2, [r5], -ip
   29988:	andeq	r2, r5, r8, lsr #12
   2998c:	push	{lr}		; (str lr, [sp, #-4]!)
   29990:	sub	sp, sp, #12
   29994:	mov	ip, #0
   29998:	str	ip, [sp, #4]
   2999c:	str	ip, [sp]
   299a0:	bl	297c8 <__flatcc_error_report@@Base>
   299a4:	add	sp, sp, #12
   299a8:	pop	{pc}		; (ldr pc, [sp], #4)
   299ac:	push	{r4, r5, r6, r7, r8, lr}
   299b0:	mov	r4, r0
   299b4:	mov	r5, r1
   299b8:	ldr	r6, [r0, #40]	; 0x28
   299bc:	ldr	r3, [r0, #52]	; 0x34
   299c0:	add	r1, r3, #16
   299c4:	ldr	r2, [r0, #44]	; 0x2c
   299c8:	cmp	r1, r2
   299cc:	bhi	299fc <__flatcc_error_report@@Base+0x234>
   299d0:	ldr	r2, [r4, #52]	; 0x34
   299d4:	add	r2, r2, #16
   299d8:	str	r2, [r4, #52]	; 0x34
   299dc:	str	r6, [r3, #4]
   299e0:	str	r3, [r5]
   299e4:	mov	r0, r4
   299e8:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   299ec:	ldr	r6, [r5]
   299f0:	mov	r8, #1
   299f4:	mov	r7, #65536	; 0x10000
   299f8:	b	29aa8 <__flatcc_error_report@@Base+0x2e0>
   299fc:	mov	r1, #1
   29a00:	mov	r0, #65536	; 0x10000
   29a04:	bl	13ea0 <calloc@plt>
   29a08:	cmp	r0, #0
   29a0c:	beq	29a30 <__flatcc_error_report@@Base+0x268>
   29a10:	ldr	r3, [r4, #48]	; 0x30
   29a14:	str	r3, [r0]
   29a18:	str	r0, [r4, #48]	; 0x30
   29a1c:	add	r3, r0, #16
   29a20:	str	r3, [r4, #52]	; 0x34
   29a24:	add	r0, r0, #65536	; 0x10000
   29a28:	str	r0, [r4, #44]	; 0x2c
   29a2c:	b	299d0 <__flatcc_error_report@@Base+0x208>
   29a30:	ldr	r3, [pc, #236]	; 29b24 <__flatcc_error_report@@Base+0x35c>
   29a34:	ldr	r3, [r3]
   29a38:	mov	r2, #34	; 0x22
   29a3c:	mov	r1, #1
   29a40:	ldr	r0, [pc, #224]	; 29b28 <__flatcc_error_report@@Base+0x360>
   29a44:	bl	13f18 <fwrite@plt>
   29a48:	mov	r0, #1
   29a4c:	bl	13f6c <exit@plt>
   29a50:	mov	r3, #0
   29a54:	ldr	r2, [pc, #208]	; 29b2c <__flatcc_error_report@@Base+0x364>
   29a58:	mov	r1, r5
   29a5c:	mov	r0, r4
   29a60:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   29a64:	pop	{r4, r5, r6, r7, r8, pc}
   29a68:	ldr	r3, [pc, #180]	; 29b24 <__flatcc_error_report@@Base+0x35c>
   29a6c:	ldr	r3, [r3]
   29a70:	mov	r2, #34	; 0x22
   29a74:	mov	r1, #1
   29a78:	ldr	r0, [pc, #168]	; 29b28 <__flatcc_error_report@@Base+0x360>
   29a7c:	bl	13f18 <fwrite@plt>
   29a80:	mov	r0, #1
   29a84:	bl	13f6c <exit@plt>
   29a88:	ldr	r2, [r4, #52]	; 0x34
   29a8c:	add	r2, r2, #16
   29a90:	str	r2, [r4, #52]	; 0x34
   29a94:	str	r5, [r3, #4]
   29a98:	str	r3, [r6]
   29a9c:	mov	r6, r3
   29aa0:	mov	r0, r4
   29aa4:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   29aa8:	ldr	r5, [r4, #40]	; 0x28
   29aac:	ldr	r3, [r5, #16]
   29ab0:	cmp	r3, #46	; 0x2e
   29ab4:	popne	{r4, r5, r6, r7, r8, pc}
   29ab8:	mov	r0, r4
   29abc:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   29ac0:	cmp	r5, #0
   29ac4:	beq	29b20 <__flatcc_error_report@@Base+0x358>
   29ac8:	ldr	r5, [r4, #40]	; 0x28
   29acc:	ldr	r3, [r5, #16]
   29ad0:	cmp	r3, #9
   29ad4:	bne	29a50 <__flatcc_error_report@@Base+0x288>
   29ad8:	ldr	r3, [r4, #52]	; 0x34
   29adc:	add	r1, r3, #16
   29ae0:	ldr	r2, [r4, #44]	; 0x2c
   29ae4:	cmp	r1, r2
   29ae8:	bls	29a88 <__flatcc_error_report@@Base+0x2c0>
   29aec:	mov	r1, r8
   29af0:	mov	r0, r7
   29af4:	bl	13ea0 <calloc@plt>
   29af8:	cmp	r0, #0
   29afc:	beq	29a68 <__flatcc_error_report@@Base+0x2a0>
   29b00:	ldr	r3, [r4, #48]	; 0x30
   29b04:	str	r3, [r0]
   29b08:	str	r0, [r4, #48]	; 0x30
   29b0c:	add	r3, r0, #16
   29b10:	str	r3, [r4, #52]	; 0x34
   29b14:	add	r0, r0, #65536	; 0x10000
   29b18:	str	r0, [r4, #44]	; 0x2c
   29b1c:	b	29a88 <__flatcc_error_report@@Base+0x2c0>
   29b20:	pop	{r4, r5, r6, r7, r8, pc}
   29b24:	andeq	r6, r6, r8, lsr #1
   29b28:	muleq	r3, r4, r3
   29b2c:	andeq	r2, r5, ip, asr #12
   29b30:	push	{r4, lr}
   29b34:	mov	r4, r0
   29b38:	mov	r0, #0
   29b3c:	str	r0, [r4, #36]	; 0x24
   29b40:	ldr	r0, [r4, #40]	; 0x28
   29b44:	ldr	ip, [r0, #16]
   29b48:	cmp	ip, r1
   29b4c:	beq	29b64 <__flatcc_error_report@@Base+0x39c>
   29b50:	mov	r1, r0
   29b54:	mov	r0, r4
   29b58:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   29b5c:	ldr	r0, [r4, #40]	; 0x28
   29b60:	pop	{r4, pc}
   29b64:	mov	r0, r4
   29b68:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   29b6c:	pop	{r4, pc}
   29b70:	push	{r4, r5, r6, r7, r8, lr}
   29b74:	mov	r4, r0
   29b78:	mov	r8, r1
   29b7c:	ldr	r7, [r0, #40]	; 0x28
   29b80:	mov	r3, #1
   29b84:	strh	r3, [r1, #8]
   29b88:	mov	r5, #0
   29b8c:	b	29b94 <__flatcc_error_report@@Base+0x3cc>
   29b90:	add	r5, r5, #1
   29b94:	ldr	r6, [r4, #40]	; 0x28
   29b98:	ldr	r3, [r6, #16]
   29b9c:	cmp	r3, #91	; 0x5b
   29ba0:	bne	29bb4 <__flatcc_error_report@@Base+0x3ec>
   29ba4:	mov	r0, r4
   29ba8:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   29bac:	cmp	r6, #0
   29bb0:	bne	29b90 <__flatcc_error_report@@Base+0x3c8>
   29bb4:	cmp	r5, #1
   29bb8:	ble	29bd0 <__flatcc_error_report@@Base+0x408>
   29bbc:	mov	r3, #0
   29bc0:	ldr	r2, [pc, #476]	; 29da4 <__flatcc_error_report@@Base+0x5dc>
   29bc4:	mov	r1, r7
   29bc8:	mov	r0, r4
   29bcc:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   29bd0:	ldr	r2, [r4, #40]	; 0x28
   29bd4:	ldr	r3, [r2, #16]
   29bd8:	cmn	r3, #984	; 0x3d8
   29bdc:	ble	29c18 <__flatcc_error_report@@Base+0x450>
   29be0:	ldr	r1, [pc, #448]	; 29da8 <__flatcc_error_report@@Base+0x5e0>
   29be4:	cmp	r3, r1
   29be8:	beq	29cb8 <__flatcc_error_report@@Base+0x4f0>
   29bec:	ble	29c74 <__flatcc_error_report@@Base+0x4ac>
   29bf0:	cmp	r3, #9
   29bf4:	beq	29cd8 <__flatcc_error_report@@Base+0x510>
   29bf8:	cmp	r3, #93	; 0x5d
   29bfc:	bne	29c98 <__flatcc_error_report@@Base+0x4d0>
   29c00:	mov	r3, #0
   29c04:	ldr	r2, [pc, #416]	; 29dac <__flatcc_error_report@@Base+0x5e4>
   29c08:	mov	r1, r3
   29c0c:	mov	r0, r4
   29c10:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   29c14:	b	29d04 <__flatcc_error_report@@Base+0x53c>
   29c18:	mvn	r1, #984	; 0x3d8
   29c1c:	cmp	r3, r1
   29c20:	bge	29c44 <__flatcc_error_report@@Base+0x47c>
   29c24:	cmn	r3, #988	; 0x3dc
   29c28:	bge	29c64 <__flatcc_error_report@@Base+0x49c>
   29c2c:	cmn	r3, #996	; 0x3e4
   29c30:	bge	29c44 <__flatcc_error_report@@Base+0x47c>
   29c34:	add	r3, r3, #996	; 0x3e4
   29c38:	add	r3, r3, #3
   29c3c:	cmp	r3, #1
   29c40:	bhi	29ca0 <__flatcc_error_report@@Base+0x4d8>
   29c44:	str	r2, [r8]
   29c48:	cmp	r5, #0
   29c4c:	movne	r3, #7
   29c50:	moveq	r3, #8
   29c54:	strh	r3, [r8, #8]
   29c58:	mov	r0, r4
   29c5c:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   29c60:	b	29d04 <__flatcc_error_report@@Base+0x53c>
   29c64:	ldr	r1, [pc, #324]	; 29db0 <__flatcc_error_report@@Base+0x5e8>
   29c68:	cmp	r3, r1
   29c6c:	bne	29ca0 <__flatcc_error_report@@Base+0x4d8>
   29c70:	b	29c44 <__flatcc_error_report@@Base+0x47c>
   29c74:	sub	r1, r1, #8
   29c78:	cmp	r3, r1
   29c7c:	blt	29ca0 <__flatcc_error_report@@Base+0x4d8>
   29c80:	cmn	r3, #976	; 0x3d0
   29c84:	blt	29c44 <__flatcc_error_report@@Base+0x47c>
   29c88:	add	r1, r1, #7
   29c8c:	cmp	r3, r1
   29c90:	beq	29c44 <__flatcc_error_report@@Base+0x47c>
   29c94:	b	29ca0 <__flatcc_error_report@@Base+0x4d8>
   29c98:	cmn	r3, #972	; 0x3cc
   29c9c:	beq	29c44 <__flatcc_error_report@@Base+0x47c>
   29ca0:	mov	r3, #0
   29ca4:	ldr	r2, [pc, #264]	; 29db4 <__flatcc_error_report@@Base+0x5ec>
   29ca8:	mov	r1, r3
   29cac:	mov	r0, r4
   29cb0:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   29cb4:	b	29d04 <__flatcc_error_report@@Base+0x53c>
   29cb8:	str	r2, [r8]
   29cbc:	cmp	r5, #0
   29cc0:	movne	r3, #9
   29cc4:	moveq	r3, #10
   29cc8:	strh	r3, [r8, #8]
   29ccc:	mov	r0, r4
   29cd0:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   29cd4:	b	29d04 <__flatcc_error_report@@Base+0x53c>
   29cd8:	mov	r1, r8
   29cdc:	mov	r0, r4
   29ce0:	bl	299ac <__flatcc_error_report@@Base+0x1e4>
   29ce4:	cmp	r5, #0
   29ce8:	movne	r3, #11
   29cec:	moveq	r3, #12
   29cf0:	strh	r3, [r8, #8]
   29cf4:	b	29d04 <__flatcc_error_report@@Base+0x53c>
   29cf8:	sub	r5, r5, #1
   29cfc:	cmn	r5, #1
   29d00:	beq	29d24 <__flatcc_error_report@@Base+0x55c>
   29d04:	ldr	r6, [r4, #40]	; 0x28
   29d08:	ldr	r3, [r6, #16]
   29d0c:	cmp	r3, #93	; 0x5d
   29d10:	bne	29d98 <__flatcc_error_report@@Base+0x5d0>
   29d14:	mov	r0, r4
   29d18:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   29d1c:	cmp	r6, #0
   29d20:	bne	29cf8 <__flatcc_error_report@@Base+0x530>
   29d24:	cmp	r5, #0
   29d28:	beq	29d40 <__flatcc_error_report@@Base+0x578>
   29d2c:	mov	r3, r7
   29d30:	ldr	r2, [pc, #128]	; 29db8 <__flatcc_error_report@@Base+0x5f0>
   29d34:	mov	r1, #0
   29d38:	mov	r0, r4
   29d3c:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   29d40:	ldr	r5, [r4, #40]	; 0x28
   29d44:	ldr	r3, [r5, #16]
   29d48:	cmp	r3, #93	; 0x5d
   29d4c:	popne	{r4, r5, r6, r7, r8, pc}
   29d50:	mov	r0, r4
   29d54:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   29d58:	cmp	r5, #0
   29d5c:	popeq	{r4, r5, r6, r7, r8, pc}
   29d60:	mov	r3, r7
   29d64:	ldr	r2, [pc, #80]	; 29dbc <__flatcc_error_report@@Base+0x5f4>
   29d68:	mov	r1, r5
   29d6c:	mov	r0, r4
   29d70:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   29d74:	ldr	r5, [r4, #40]	; 0x28
   29d78:	ldr	r3, [r5, #16]
   29d7c:	cmp	r3, #93	; 0x5d
   29d80:	popne	{r4, r5, r6, r7, r8, pc}
   29d84:	mov	r0, r4
   29d88:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   29d8c:	cmp	r5, #0
   29d90:	bne	29d74 <__flatcc_error_report@@Base+0x5ac>
   29d94:	pop	{r4, r5, r6, r7, r8, pc}
   29d98:	cmp	r5, #0
   29d9c:	bne	29d2c <__flatcc_error_report@@Base+0x564>
   29da0:	pop	{r4, r5, r6, r7, r8, pc}
   29da4:	andeq	r2, r5, r4, ror r6
   29da8:			; <UNDEFINED> instruction: 0xfffffc32
   29dac:	muleq	r5, ip, r6
   29db0:			; <UNDEFINED> instruction: 0xfffffc25
   29db4:			; <UNDEFINED> instruction: 0x000526b8
   29db8:	ldrdeq	r2, [r5], -r0
   29dbc:	strdeq	r2, [r5], -r4
   29dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29dc4:	sub	sp, sp, #12
   29dc8:	mov	r4, r0
   29dcc:	mov	r5, r1
   29dd0:	mov	r3, #2
   29dd4:	strh	r3, [r1, #8]
   29dd8:	mov	r3, #0
   29ddc:	str	r3, [r1]
   29de0:	str	r3, [r1, #4]
   29de4:	mov	r6, #1
   29de8:	ldr	fp, [pc, #336]	; 29f40 <__flatcc_error_report@@Base+0x778>
   29dec:	mov	r7, r3
   29df0:	ldr	sl, [pc, #332]	; 29f44 <__flatcc_error_report@@Base+0x77c>
   29df4:	ldr	r9, [pc, #332]	; 29f48 <__flatcc_error_report@@Base+0x780>
   29df8:	ldr	r8, [pc, #332]	; 29f4c <__flatcc_error_report@@Base+0x784>
   29dfc:	b	29e30 <__flatcc_error_report@@Base+0x668>
   29e00:	ldr	r3, [r5]
   29e04:	cmp	r3, #0
   29e08:	ldreq	r3, [r1]
   29e0c:	streq	r3, [r5]
   29e10:	b	29e28 <__flatcc_error_report@@Base+0x660>
   29e14:	strh	r6, [r5, #8]
   29e18:	mov	r3, r7
   29e1c:	mov	r2, r8
   29e20:	mov	r0, r4
   29e24:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   29e28:	mov	r0, r4
   29e2c:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   29e30:	ldr	r1, [r4, #40]	; 0x28
   29e34:	ldr	r3, [r1, #16]
   29e38:	sub	r3, r3, #6
   29e3c:	cmp	r3, #17
   29e40:	ldrls	pc, [pc, r3, lsl #2]
   29e44:	b	29ec8 <__flatcc_error_report@@Base+0x700>
   29e48:	muleq	r2, r0, lr
   29e4c:	andeq	r9, r2, r8, asr #29
   29e50:	andeq	r9, r2, r8, asr #29
   29e54:	andeq	r9, r2, r8, asr #29
   29e58:	andeq	r9, r2, r8, asr #29
   29e5c:	andeq	r9, r2, r8, asr #29
   29e60:	andeq	r9, r2, r8, asr #29
   29e64:	andeq	r9, r2, r8, asr #29
   29e68:	andeq	r9, r2, r8, asr #29
   29e6c:	andeq	r9, r2, r8, asr #29
   29e70:	andeq	r9, r2, r8, asr #29
   29e74:	andeq	r9, r2, r8, asr #29
   29e78:			; <UNDEFINED> instruction: 0x00029eb0
   29e7c:	andeq	r9, r2, r8, asr #29
   29e80:	andeq	r9, r2, r0, lsl #28
   29e84:	andeq	r9, r2, r4, lsl lr
   29e88:	andeq	r9, r2, r0, ror #29
   29e8c:	andeq	r9, r2, r0, ror #29
   29e90:	strh	r6, [r5, #8]
   29e94:	str	r6, [sp, #4]
   29e98:	str	r9, [sp]
   29e9c:	mov	r3, r7
   29ea0:	mov	r2, sl
   29ea4:	mov	r0, r4
   29ea8:	bl	297c8 <__flatcc_error_report@@Base>
   29eac:	b	29e28 <__flatcc_error_report@@Base+0x660>
   29eb0:	strh	r6, [r5, #8]
   29eb4:	mov	r3, r7
   29eb8:	mov	r2, fp
   29ebc:	mov	r0, r4
   29ec0:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   29ec4:	b	29e28 <__flatcc_error_report@@Base+0x660>
   29ec8:	mov	r3, #0
   29ecc:	ldr	r2, [pc, #124]	; 29f50 <__flatcc_error_report@@Base+0x788>
   29ed0:	mov	r0, r4
   29ed4:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   29ed8:	mov	r3, #1
   29edc:	strh	r3, [r5, #8]
   29ee0:	ldr	r2, [r5]
   29ee4:	cmp	r2, #0
   29ee8:	ldrne	r3, [r4, #40]	; 0x28
   29eec:	ldrne	r3, [r3]
   29ef0:	subne	r3, r3, r2
   29ef4:	strne	r3, [r5, #4]
   29ef8:	ldr	r6, [r4, #40]	; 0x28
   29efc:	ldr	r3, [r6, #16]
   29f00:	cmp	r3, #22
   29f04:	bne	29f20 <__flatcc_error_report@@Base+0x758>
   29f08:	mov	r0, r4
   29f0c:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   29f10:	cmp	r6, #0
   29f14:	beq	29f34 <__flatcc_error_report@@Base+0x76c>
   29f18:	add	sp, sp, #12
   29f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29f20:	mov	r3, #0
   29f24:	ldr	r2, [pc, #40]	; 29f54 <__flatcc_error_report@@Base+0x78c>
   29f28:	mov	r1, r6
   29f2c:	mov	r0, r4
   29f30:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   29f34:	mov	r3, #1
   29f38:	strh	r3, [r5, #8]
   29f3c:	b	29f18 <__flatcc_error_report@@Base+0x750>
   29f40:	andeq	r2, r5, ip, asr r7
   29f44:	andeq	r2, r5, ip, lsr #14
   29f48:	andeq	r2, r5, r8, asr r7
   29f4c:	andeq	r2, r5, ip, lsl #14
   29f50:	andeq	r2, r5, ip, ror r7
   29f54:	andeq	r2, r5, r8, lsr #15
   29f58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29f5c:	sub	sp, sp, #44	; 0x2c
   29f60:	mov	sl, r0
   29f64:	mov	r8, r1
   29f68:	mov	r7, r2
   29f6c:	mov	r6, r3
   29f70:	ldr	r4, [r0, #40]	; 0x28
   29f74:	ldr	r3, [r4, #16]
   29f78:	cmp	r3, #45	; 0x2d
   29f7c:	beq	29fbc <__flatcc_error_report@@Base+0x7f4>
   29f80:	cmp	r3, #10
   29f84:	beq	2a238 <__flatcc_error_report@@Base+0xa70>
   29f88:	ble	2a540 <__flatcc_error_report@@Base+0xd78>
   29f8c:	cmp	r3, #14
   29f90:	beq	2a064 <__flatcc_error_report@@Base+0x89c>
   29f94:	cmp	r3, #19
   29f98:	beq	2a4c0 <__flatcc_error_report@@Base+0xcf8>
   29f9c:	cmp	r3, #11
   29fa0:	beq	2a3d0 <__flatcc_error_report@@Base+0xc08>
   29fa4:	mov	r3, #0
   29fa8:	mov	r2, r6
   29fac:	mov	r1, r4
   29fb0:	mov	r0, sl
   29fb4:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   29fb8:	b	2a43c <__flatcc_error_report@@Base+0xc74>
   29fbc:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   29fc0:	ldr	r5, [sl, #40]	; 0x28
   29fc4:	ldr	r3, [r5, #16]
   29fc8:	cmp	r3, #10
   29fcc:	beq	2a22c <__flatcc_error_report@@Base+0xa64>
   29fd0:	bgt	2a034 <__flatcc_error_report@@Base+0x86c>
   29fd4:	ldr	r2, [pc, #1540]	; 2a5e0 <__flatcc_error_report@@Base+0xe18>
   29fd8:	cmp	r3, r2
   29fdc:	beq	2a490 <__flatcc_error_report@@Base+0xcc8>
   29fe0:	cmp	r3, #9
   29fe4:	bne	2a024 <__flatcc_error_report@@Base+0x85c>
   29fe8:	mov	r1, r8
   29fec:	mov	r0, sl
   29ff0:	bl	299ac <__flatcc_error_report@@Base+0x1e4>
   29ff4:	cmp	r4, #0
   29ff8:	moveq	r3, #13
   29ffc:	strheq	r3, [r8, #8]
   2a000:	beq	2a43c <__flatcc_error_report@@Base+0xc74>
   2a004:	mov	r3, #1
   2a008:	strh	r3, [r8, #8]
   2a00c:	mov	r3, #0
   2a010:	ldr	r2, [pc, #1484]	; 2a5e4 <__flatcc_error_report@@Base+0xe1c>
   2a014:	mov	r1, r5
   2a018:	mov	r0, sl
   2a01c:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2a020:	b	2a43c <__flatcc_error_report@@Base+0xc74>
   2a024:	cmn	r3, #988	; 0x3dc
   2a028:	beq	2a484 <__flatcc_error_report@@Base+0xcbc>
   2a02c:	mov	r4, r5
   2a030:	b	29fa4 <__flatcc_error_report@@Base+0x7dc>
   2a034:	cmp	r3, #14
   2a038:	beq	2a058 <__flatcc_error_report@@Base+0x890>
   2a03c:	cmp	r3, #19
   2a040:	beq	2a4b4 <__flatcc_error_report@@Base+0xcec>
   2a044:	cmp	r3, #11
   2a048:	bne	2a02c <__flatcc_error_report@@Base+0x864>
   2a04c:	mov	r6, r4
   2a050:	mov	r4, r5
   2a054:	b	2a3d4 <__flatcc_error_report@@Base+0xc0c>
   2a058:	mov	fp, r4
   2a05c:	mov	r4, r5
   2a060:	b	2a068 <__flatcc_error_report@@Base+0x8a0>
   2a064:	mov	fp, #0
   2a068:	mov	r3, #5
   2a06c:	strh	r3, [r8, #8]
   2a070:	ldr	r3, [r4]
   2a074:	ldr	r2, [r4, #4]
   2a078:	add	lr, r3, r2
   2a07c:	cmp	r3, lr
   2a080:	beq	2a0b0 <__flatcc_error_report@@Base+0x8e8>
   2a084:	ldrb	r5, [r3]
   2a088:	cmp	r5, #45	; 0x2d
   2a08c:	movne	r1, #0
   2a090:	moveq	r1, #1
   2a094:	add	r9, r3, r1
   2a098:	sub	r2, r2, r1
   2a09c:	cmp	r2, #1
   2a0a0:	ble	2a0b0 <__flatcc_error_report@@Base+0x8e8>
   2a0a4:	ldrb	r3, [r3, r1]
   2a0a8:	cmp	r3, #48	; 0x30
   2a0ac:	beq	2a0f0 <__flatcc_error_report@@Base+0x928>
   2a0b0:	mov	r3, #1
   2a0b4:	strh	r3, [r8, #8]
   2a0b8:	mov	r3, #0
   2a0bc:	ldr	r2, [pc, #1316]	; 2a5e8 <__flatcc_error_report@@Base+0xe20>
   2a0c0:	mov	r1, r4
   2a0c4:	mov	r0, sl
   2a0c8:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2a0cc:	cmp	fp, #0
   2a0d0:	beq	2a434 <__flatcc_error_report@@Base+0xc6c>
   2a0d4:	ldrd	r2, [r8]
   2a0d8:	rsbs	r2, r2, #0
   2a0dc:	rsc	r3, r3, #0
   2a0e0:	strd	r2, [r8]
   2a0e4:	mov	r3, #4
   2a0e8:	strh	r3, [r8, #8]
   2a0ec:	b	2a434 <__flatcc_error_report@@Base+0xc6c>
   2a0f0:	ldrb	r3, [r9, #1]
   2a0f4:	orr	r3, r3, #32
   2a0f8:	cmp	r3, #120	; 0x78
   2a0fc:	bne	2a0b0 <__flatcc_error_report@@Base+0x8e8>
   2a100:	add	r3, r9, #2
   2a104:	str	r3, [sp]
   2a108:	sub	r3, lr, r3
   2a10c:	cmp	r3, #16
   2a110:	addgt	r9, r9, #18
   2a114:	movle	r9, lr
   2a118:	ldr	r3, [sp]
   2a11c:	cmp	r3, r9
   2a120:	beq	2a0b0 <__flatcc_error_report@@Base+0x8e8>
   2a124:	mov	ip, r3
   2a128:	mov	r2, #0
   2a12c:	mov	r3, #0
   2a130:	str	r4, [sp, #4]
   2a134:	str	lr, [sp, #8]
   2a138:	mov	r6, r5
   2a13c:	mov	r7, fp
   2a140:	str	sl, [sp, #12]
   2a144:	b	2a18c <__flatcc_error_report@@Base+0x9c4>
   2a148:	orr	lr, lr, #32
   2a14c:	sub	r0, lr, #97	; 0x61
   2a150:	uxtb	r0, r0
   2a154:	cmp	r0, #5
   2a158:	bhi	2a1cc <__flatcc_error_report@@Base+0xa04>
   2a15c:	lsl	fp, r3, #4
   2a160:	orr	fp, fp, r2, lsr #28
   2a164:	lsl	sl, r2, #4
   2a168:	subs	r0, sl, #87	; 0x57
   2a16c:	sbc	r1, fp, #0
   2a170:	uxtb	r2, lr
   2a174:	mov	r3, #0
   2a178:	adds	r2, r2, r0
   2a17c:	adc	r3, r3, r1
   2a180:	mov	r1, ip
   2a184:	cmp	r9, ip
   2a188:	beq	2a598 <__flatcc_error_report@@Base+0xdd0>
   2a18c:	mov	r1, ip
   2a190:	ldrb	lr, [ip], #1
   2a194:	sub	r0, lr, #48	; 0x30
   2a198:	uxtb	r0, r0
   2a19c:	cmp	r0, #9
   2a1a0:	bhi	2a148 <__flatcc_error_report@@Base+0x980>
   2a1a4:	lsl	r5, r3, #4
   2a1a8:	orr	r5, r5, r2, lsr #28
   2a1ac:	lsl	r4, r2, #4
   2a1b0:	subs	r0, r4, #48	; 0x30
   2a1b4:	sbc	r1, r5, #0
   2a1b8:	uxtb	r2, lr
   2a1bc:	mov	r3, #0
   2a1c0:	adds	r2, r2, r0
   2a1c4:	adc	r3, r3, r1
   2a1c8:	b	2a180 <__flatcc_error_report@@Base+0x9b8>
   2a1cc:	ldr	r4, [sp, #4]
   2a1d0:	ldr	lr, [sp, #8]
   2a1d4:	mov	r5, r6
   2a1d8:	mov	r6, r1
   2a1dc:	mov	fp, r7
   2a1e0:	ldr	sl, [sp, #12]
   2a1e4:	ldr	r1, [sp]
   2a1e8:	cmp	r1, r6
   2a1ec:	beq	2a0b0 <__flatcc_error_report@@Base+0x8e8>
   2a1f0:	cmp	lr, r6
   2a1f4:	beq	2a21c <__flatcc_error_report@@Base+0xa54>
   2a1f8:	ldrb	r1, [r6]
   2a1fc:	cmp	r9, r6
   2a200:	beq	2a5b8 <__flatcc_error_report@@Base+0xdf0>
   2a204:	cmp	r1, #80	; 0x50
   2a208:	beq	2a0b0 <__flatcc_error_report@@Base+0x8e8>
   2a20c:	cmp	r1, #112	; 0x70
   2a210:	beq	2a0b0 <__flatcc_error_report@@Base+0x8e8>
   2a214:	cmp	r1, #46	; 0x2e
   2a218:	beq	2a0b0 <__flatcc_error_report@@Base+0x8e8>
   2a21c:	strd	r2, [r8]
   2a220:	cmp	r5, #45	; 0x2d
   2a224:	bne	2a0cc <__flatcc_error_report@@Base+0x904>
   2a228:	b	2a0b0 <__flatcc_error_report@@Base+0x8e8>
   2a22c:	str	r4, [sp]
   2a230:	mov	r4, r5
   2a234:	b	2a240 <__flatcc_error_report@@Base+0xa78>
   2a238:	mov	r3, #0
   2a23c:	str	r3, [sp]
   2a240:	mov	r3, #5
   2a244:	strh	r3, [r8, #8]
   2a248:	ldr	r9, [r4]
   2a24c:	ldr	fp, [r4, #4]
   2a250:	add	fp, r9, fp
   2a254:	cmp	r9, fp
   2a258:	beq	2a3b0 <__flatcc_error_report@@Base+0xbe8>
   2a25c:	ldrb	r3, [r9]
   2a260:	cmp	r3, #45	; 0x2d
   2a264:	movne	r3, #0
   2a268:	moveq	r3, #1
   2a26c:	str	r3, [sp, #8]
   2a270:	add	r2, r9, r3
   2a274:	str	r2, [sp, #4]
   2a278:	cmp	fp, r2
   2a27c:	beq	2a3b0 <__flatcc_error_report@@Base+0xbe8>
   2a280:	ldrb	r0, [r9, r3]
   2a284:	sub	r3, r0, #48	; 0x30
   2a288:	uxtb	r3, r3
   2a28c:	cmp	r3, #9
   2a290:	bhi	2a3b0 <__flatcc_error_report@@Base+0xbe8>
   2a294:	uxtb	r0, r0
   2a298:	mov	r1, #0
   2a29c:	subs	r0, r0, #48	; 0x30
   2a2a0:	sbc	r1, r1, #0
   2a2a4:	add	ip, r2, #1
   2a2a8:	mov	lr, #10
   2a2ac:	mov	r6, r9
   2a2b0:	mov	r9, r4
   2a2b4:	mov	r7, fp
   2a2b8:	mov	r4, ip
   2a2bc:	cmp	ip, r7
   2a2c0:	beq	2a310 <__flatcc_error_report@@Base+0xb48>
   2a2c4:	ldrb	r2, [ip], #1
   2a2c8:	sub	r3, r2, #48	; 0x30
   2a2cc:	uxtb	r3, r3
   2a2d0:	cmp	r3, #9
   2a2d4:	bhi	2a310 <__flatcc_error_report@@Base+0xb48>
   2a2d8:	umull	r4, r5, r0, lr
   2a2dc:	mla	r5, lr, r1, r5
   2a2e0:	subs	r4, r4, #48	; 0x30
   2a2e4:	sbc	r5, r5, #0
   2a2e8:	uxtb	r2, r2
   2a2ec:	mov	r3, #0
   2a2f0:	adds	r2, r2, r4
   2a2f4:	adc	r3, r3, r5
   2a2f8:	cmp	r3, r1
   2a2fc:	cmpeq	r2, r0
   2a300:	bcc	2a3ac <__flatcc_error_report@@Base+0xbe4>
   2a304:	mov	r0, r2
   2a308:	mov	r1, r3
   2a30c:	b	2a2b8 <__flatcc_error_report@@Base+0xaf0>
   2a310:	mov	r3, r4
   2a314:	mov	r4, r9
   2a318:	mov	r9, r6
   2a31c:	mov	r6, r3
   2a320:	cmp	r9, r3
   2a324:	beq	2a3b0 <__flatcc_error_report@@Base+0xbe8>
   2a328:	ldr	r3, [sp, #4]
   2a32c:	cmp	r3, r6
   2a330:	beq	2a3b0 <__flatcc_error_report@@Base+0xbe8>
   2a334:	cmp	fp, r6
   2a338:	beq	2a35c <__flatcc_error_report@@Base+0xb94>
   2a33c:	ldrb	r3, [r6]
   2a340:	cmp	r3, #80	; 0x50
   2a344:	beq	2a3a4 <__flatcc_error_report@@Base+0xbdc>
   2a348:	bhi	2a394 <__flatcc_error_report@@Base+0xbcc>
   2a34c:	cmp	r3, #46	; 0x2e
   2a350:	beq	2a3a4 <__flatcc_error_report@@Base+0xbdc>
   2a354:	cmp	r3, #69	; 0x45
   2a358:	beq	2a3a4 <__flatcc_error_report@@Base+0xbdc>
   2a35c:	ldr	r3, [sp, #8]
   2a360:	strd	r0, [r8]
   2a364:	cmp	r3, #0
   2a368:	bne	2a3b0 <__flatcc_error_report@@Base+0xbe8>
   2a36c:	ldr	r3, [sp]
   2a370:	cmp	r3, #0
   2a374:	beq	2a434 <__flatcc_error_report@@Base+0xc6c>
   2a378:	ldrd	r2, [r8]
   2a37c:	rsbs	r2, r2, #0
   2a380:	rsc	r3, r3, #0
   2a384:	strd	r2, [r8]
   2a388:	mov	r3, #4
   2a38c:	strh	r3, [r8, #8]
   2a390:	b	2a434 <__flatcc_error_report@@Base+0xc6c>
   2a394:	cmp	r3, #101	; 0x65
   2a398:	beq	2a3a4 <__flatcc_error_report@@Base+0xbdc>
   2a39c:	cmp	r3, #112	; 0x70
   2a3a0:	bne	2a35c <__flatcc_error_report@@Base+0xb94>
   2a3a4:	mvn	r3, #2
   2a3a8:	b	2a364 <__flatcc_error_report@@Base+0xb9c>
   2a3ac:	mov	r4, r9
   2a3b0:	mov	r3, #1
   2a3b4:	strh	r3, [r8, #8]
   2a3b8:	mov	r3, #0
   2a3bc:	ldr	r2, [pc, #552]	; 2a5ec <__flatcc_error_report@@Base+0xe24>
   2a3c0:	mov	r1, r4
   2a3c4:	mov	r0, sl
   2a3c8:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2a3cc:	b	2a36c <__flatcc_error_report@@Base+0xba4>
   2a3d0:	mov	r6, #0
   2a3d4:	mov	r3, #3
   2a3d8:	strh	r3, [r8, #8]
   2a3dc:	add	r1, sp, #36	; 0x24
   2a3e0:	ldr	r0, [r4]
   2a3e4:	bl	13fb4 <strtod@plt>
   2a3e8:	vstr	d0, [r8]
   2a3ec:	ldr	r2, [r4]
   2a3f0:	ldr	r3, [r4, #4]
   2a3f4:	add	r3, r2, r3
   2a3f8:	ldr	r1, [sp, #36]	; 0x24
   2a3fc:	cmp	r1, r3
   2a400:	beq	2a444 <__flatcc_error_report@@Base+0xc7c>
   2a404:	mov	r3, #1
   2a408:	strh	r3, [r8, #8]
   2a40c:	mov	r3, #0
   2a410:	ldr	r2, [pc, #472]	; 2a5f0 <__flatcc_error_report@@Base+0xe28>
   2a414:	mov	r1, r4
   2a418:	mov	r0, sl
   2a41c:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2a420:	cmp	r6, #0
   2a424:	beq	2a434 <__flatcc_error_report@@Base+0xc6c>
   2a428:	ldrh	r3, [r8, #8]
   2a42c:	cmp	r3, #6
   2a430:	beq	2a578 <__flatcc_error_report@@Base+0xdb0>
   2a434:	mov	r0, sl
   2a438:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a43c:	add	sp, sp, #44	; 0x2c
   2a440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a444:	ldrb	r3, [r2]
   2a448:	cmp	r3, #46	; 0x2e
   2a44c:	beq	2a464 <__flatcc_error_report@@Base+0xc9c>
   2a450:	cmp	r6, #0
   2a454:	vnegne.f64	d0, d0
   2a458:	vstrne	d0, [r8]
   2a45c:	bne	2a428 <__flatcc_error_report@@Base+0xc60>
   2a460:	b	2a434 <__flatcc_error_report@@Base+0xc6c>
   2a464:	mov	r3, #1
   2a468:	strh	r3, [r8, #8]
   2a46c:	mov	r3, #0
   2a470:	ldr	r2, [pc, #380]	; 2a5f4 <__flatcc_error_report@@Base+0xe2c>
   2a474:	mov	r1, r4
   2a478:	mov	r0, sl
   2a47c:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2a480:	b	2a420 <__flatcc_error_report@@Base+0xc58>
   2a484:	mov	r3, r4
   2a488:	mov	r4, r5
   2a48c:	b	2a560 <__flatcc_error_report@@Base+0xd98>
   2a490:	mov	r3, r4
   2a494:	mov	r4, r5
   2a498:	b	2a4a0 <__flatcc_error_report@@Base+0xcd8>
   2a49c:	mov	r3, #0
   2a4a0:	mov	r2, #0
   2a4a4:	strb	r2, [r8]
   2a4a8:	mov	r2, #6
   2a4ac:	strh	r2, [r8, #8]
   2a4b0:	b	2a570 <__flatcc_error_report@@Base+0xda8>
   2a4b4:	mov	r9, r4
   2a4b8:	mov	r4, r5
   2a4bc:	b	2a4c4 <__flatcc_error_report@@Base+0xcfc>
   2a4c0:	mov	r9, #0
   2a4c4:	mov	r0, sl
   2a4c8:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a4cc:	mov	r1, r8
   2a4d0:	mov	r0, sl
   2a4d4:	bl	29dc0 <__flatcc_error_report@@Base+0x5f8>
   2a4d8:	tst	r7, #1
   2a4dc:	beq	2a508 <__flatcc_error_report@@Base+0xd40>
   2a4e0:	cmp	r9, #0
   2a4e4:	beq	2a43c <__flatcc_error_report@@Base+0xc74>
   2a4e8:	mov	r3, #1
   2a4ec:	strh	r3, [r8, #8]
   2a4f0:	mov	r3, #0
   2a4f4:	ldr	r2, [pc, #252]	; 2a5f8 <__flatcc_error_report@@Base+0xe30>
   2a4f8:	mov	r1, r4
   2a4fc:	mov	r0, sl
   2a500:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2a504:	b	2a43c <__flatcc_error_report@@Base+0xc74>
   2a508:	mov	r3, #1
   2a50c:	strh	r3, [r8, #8]
   2a510:	mov	r3, #0
   2a514:	mov	r2, r6
   2a518:	mov	r1, r4
   2a51c:	mov	r0, sl
   2a520:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2a524:	b	2a43c <__flatcc_error_report@@Base+0xc74>
   2a528:	mov	r1, r8
   2a52c:	mov	r0, sl
   2a530:	bl	299ac <__flatcc_error_report@@Base+0x1e4>
   2a534:	mov	r3, #13
   2a538:	strh	r3, [r8, #8]
   2a53c:	b	2a43c <__flatcc_error_report@@Base+0xc74>
   2a540:	ldr	r2, [pc, #152]	; 2a5e0 <__flatcc_error_report@@Base+0xe18>
   2a544:	cmp	r3, r2
   2a548:	beq	2a49c <__flatcc_error_report@@Base+0xcd4>
   2a54c:	cmp	r3, #9
   2a550:	beq	2a528 <__flatcc_error_report@@Base+0xd60>
   2a554:	cmn	r3, #988	; 0x3dc
   2a558:	moveq	r3, #0
   2a55c:	bne	29fa4 <__flatcc_error_report@@Base+0x7dc>
   2a560:	mov	r2, #1
   2a564:	strb	r2, [r8]
   2a568:	mov	r2, #6
   2a56c:	strh	r2, [r8, #8]
   2a570:	cmp	r3, #0
   2a574:	beq	2a434 <__flatcc_error_report@@Base+0xc6c>
   2a578:	mov	r3, #1
   2a57c:	strh	r3, [r8, #8]
   2a580:	mov	r3, #0
   2a584:	ldr	r2, [pc, #112]	; 2a5fc <__flatcc_error_report@@Base+0xe34>
   2a588:	mov	r1, r4
   2a58c:	mov	r0, sl
   2a590:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2a594:	b	2a434 <__flatcc_error_report@@Base+0xc6c>
   2a598:	ldr	r4, [sp, #4]
   2a59c:	ldr	lr, [sp, #8]
   2a5a0:	mov	r5, r6
   2a5a4:	mov	fp, r7
   2a5a8:	ldr	sl, [sp, #12]
   2a5ac:	cmp	lr, ip
   2a5b0:	beq	2a21c <__flatcc_error_report@@Base+0xa54>
   2a5b4:	ldrb	r1, [r1]
   2a5b8:	sub	r0, r1, #48	; 0x30
   2a5bc:	uxtb	r0, r0
   2a5c0:	cmp	r0, #9
   2a5c4:	bls	2a0b0 <__flatcc_error_report@@Base+0x8e8>
   2a5c8:	orr	r1, r1, #32
   2a5cc:	sub	r0, r1, #97	; 0x61
   2a5d0:	uxtb	r0, r0
   2a5d4:	cmp	r0, #5
   2a5d8:	bhi	2a204 <__flatcc_error_report@@Base+0xa3c>
   2a5dc:	b	2a0b0 <__flatcc_error_report@@Base+0x8e8>
   2a5e0:			; <UNDEFINED> instruction: 0xfffffc26
   2a5e4:	andeq	r2, r5, r4, asr r8
   2a5e8:			; <UNDEFINED> instruction: 0x000527bc
   2a5ec:	ldrdeq	r2, [r5], -r8
   2a5f0:	strdeq	r2, [r5], -r0
   2a5f4:	andeq	r2, r5, r8, lsl #16
   2a5f8:	andeq	r2, r5, r0, lsr r8
   2a5fc:	andeq	r2, r5, r4, ror r8
   2a600:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a604:	ldr	fp, [r0, #40]	; 0x28
   2a608:	ldr	r3, [fp, #16]
   2a60c:	cmp	r3, #40	; 0x28
   2a610:	beq	2a61c <__flatcc_error_report@@Base+0xe54>
   2a614:	mov	r0, #0
   2a618:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a61c:	mov	r4, r0
   2a620:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a624:	cmp	fp, #0
   2a628:	beq	2a7dc <__flatcc_error_report@@Base+0x1014>
   2a62c:	ldr	r6, [r4, #40]	; 0x28
   2a630:	ldr	r3, [r6, #16]
   2a634:	cmp	r3, #9
   2a638:	beq	2a658 <__flatcc_error_report@@Base+0xe90>
   2a63c:	mov	r3, fp
   2a640:	ldr	r2, [pc, #456]	; 2a810 <__flatcc_error_report@@Base+0x1048>
   2a644:	mov	r1, #41	; 0x29
   2a648:	mov	r0, r4
   2a64c:	bl	29b30 <__flatcc_error_report@@Base+0x368>
   2a650:	mov	r0, #0
   2a654:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a658:	mov	r0, r4
   2a65c:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a660:	cmp	r6, #0
   2a664:	beq	2a7f4 <__flatcc_error_report@@Base+0x102c>
   2a668:	mov	r7, #0
   2a66c:	mov	r8, #1
   2a670:	mov	sl, #65536	; 0x10000
   2a674:	ldr	r9, [pc, #408]	; 2a814 <__flatcc_error_report@@Base+0x104c>
   2a678:	b	2a714 <__flatcc_error_report@@Base+0xf4c>
   2a67c:	ldr	r3, [pc, #404]	; 2a818 <__flatcc_error_report@@Base+0x1050>
   2a680:	ldr	r3, [r3]
   2a684:	mov	r2, #34	; 0x22
   2a688:	mov	r1, #1
   2a68c:	ldr	r0, [pc, #392]	; 2a81c <__flatcc_error_report@@Base+0x1054>
   2a690:	bl	13f18 <fwrite@plt>
   2a694:	mov	r0, #1
   2a698:	bl	13f6c <exit@plt>
   2a69c:	ldr	r2, [r4, #52]	; 0x34
   2a6a0:	add	r2, r2, #32
   2a6a4:	str	r2, [r4, #52]	; 0x34
   2a6a8:	mov	r5, r3
   2a6ac:	str	r7, [r3]
   2a6b0:	str	r6, [r3, #4]
   2a6b4:	ldr	r6, [r4, #40]	; 0x28
   2a6b8:	ldr	r3, [r6, #16]
   2a6bc:	cmp	r3, #58	; 0x3a
   2a6c0:	beq	2a75c <__flatcc_error_report@@Base+0xf94>
   2a6c4:	ldr	r3, [r4, #108]	; 0x6c
   2a6c8:	cmp	r3, #9
   2a6cc:	bgt	2a7e4 <__flatcc_error_report@@Base+0x101c>
   2a6d0:	ldr	r6, [r4, #40]	; 0x28
   2a6d4:	ldr	r3, [r6, #16]
   2a6d8:	cmp	r3, #44	; 0x2c
   2a6dc:	bne	2a798 <__flatcc_error_report@@Base+0xfd0>
   2a6e0:	mov	r0, r4
   2a6e4:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a6e8:	cmp	r6, #0
   2a6ec:	beq	2a798 <__flatcc_error_report@@Base+0xfd0>
   2a6f0:	ldr	r6, [r4, #40]	; 0x28
   2a6f4:	ldr	r3, [r6, #16]
   2a6f8:	cmp	r3, #9
   2a6fc:	bne	2a784 <__flatcc_error_report@@Base+0xfbc>
   2a700:	mov	r0, r4
   2a704:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a708:	mov	r7, r5
   2a70c:	cmp	r6, #0
   2a710:	beq	2a798 <__flatcc_error_report@@Base+0xfd0>
   2a714:	ldr	r3, [r4, #52]	; 0x34
   2a718:	add	r1, r3, #32
   2a71c:	ldr	r2, [r4, #44]	; 0x2c
   2a720:	cmp	r1, r2
   2a724:	bls	2a69c <__flatcc_error_report@@Base+0xed4>
   2a728:	mov	r1, r8
   2a72c:	mov	r0, sl
   2a730:	bl	13ea0 <calloc@plt>
   2a734:	cmp	r0, #0
   2a738:	beq	2a67c <__flatcc_error_report@@Base+0xeb4>
   2a73c:	ldr	r3, [r4, #48]	; 0x30
   2a740:	str	r3, [r0]
   2a744:	str	r0, [r4, #48]	; 0x30
   2a748:	add	r3, r0, #16
   2a74c:	str	r3, [r4, #52]	; 0x34
   2a750:	add	r0, r0, #65536	; 0x10000
   2a754:	str	r0, [r4, #44]	; 0x2c
   2a758:	b	2a69c <__flatcc_error_report@@Base+0xed4>
   2a75c:	mov	r0, r4
   2a760:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a764:	cmp	r6, #0
   2a768:	beq	2a6c4 <__flatcc_error_report@@Base+0xefc>
   2a76c:	mov	r3, r9
   2a770:	mov	r2, r8
   2a774:	add	r1, r5, #8
   2a778:	mov	r0, r4
   2a77c:	bl	29f58 <__flatcc_error_report@@Base+0x790>
   2a780:	b	2a6c4 <__flatcc_error_report@@Base+0xefc>
   2a784:	mov	r3, #0
   2a788:	ldr	r2, [pc, #144]	; 2a820 <__flatcc_error_report@@Base+0x1058>
   2a78c:	mov	r1, r6
   2a790:	mov	r0, r4
   2a794:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2a798:	mov	r3, fp
   2a79c:	ldr	r2, [pc, #108]	; 2a810 <__flatcc_error_report@@Base+0x1048>
   2a7a0:	mov	r1, #41	; 0x29
   2a7a4:	mov	r0, r4
   2a7a8:	bl	29b30 <__flatcc_error_report@@Base+0x368>
   2a7ac:	cmp	r5, #0
   2a7b0:	beq	2a7ec <__flatcc_error_report@@Base+0x1024>
   2a7b4:	mov	r0, r5
   2a7b8:	mov	r2, #0
   2a7bc:	b	2a7c4 <__flatcc_error_report@@Base+0xffc>
   2a7c0:	mov	r0, r3
   2a7c4:	ldr	r3, [r0]
   2a7c8:	str	r2, [r0]
   2a7cc:	mov	r2, r0
   2a7d0:	cmp	r3, #0
   2a7d4:	bne	2a7c0 <__flatcc_error_report@@Base+0xff8>
   2a7d8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a7dc:	mov	r0, #0
   2a7e0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a7e4:	mov	r0, r5
   2a7e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a7ec:	mov	r0, #0
   2a7f0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a7f4:	mov	r3, fp
   2a7f8:	ldr	r2, [pc, #16]	; 2a810 <__flatcc_error_report@@Base+0x1048>
   2a7fc:	mov	r1, #41	; 0x29
   2a800:	mov	r0, r4
   2a804:	bl	29b30 <__flatcc_error_report@@Base+0x368>
   2a808:	mov	r0, #0
   2a80c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a810:	andeq	r2, r5, r8, ror #17
   2a814:	muleq	r5, r8, r8
   2a818:	andeq	r6, r6, r8, lsr #1
   2a81c:	muleq	r3, r4, r3
   2a820:			; <UNDEFINED> instruction: 0x000528b8
   2a824:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a828:	mov	r4, r0
   2a82c:	ldr	r5, [r0, #40]	; 0x28
   2a830:	ldr	r3, [r5, #16]
   2a834:	cmp	r3, #9
   2a838:	bne	2a890 <__flatcc_error_report@@Base+0x10c8>
   2a83c:	mov	r7, r1
   2a840:	mov	r8, r2
   2a844:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a848:	cmp	r5, #0
   2a84c:	beq	2a8a0 <__flatcc_error_report@@Base+0x10d8>
   2a850:	str	r5, [r7, #4]
   2a854:	mov	r0, r4
   2a858:	bl	2a600 <__flatcc_error_report@@Base+0xe38>
   2a85c:	str	r0, [r7, #28]
   2a860:	ldr	r5, [r4, #40]	; 0x28
   2a864:	ldr	r3, [r5, #16]
   2a868:	cmp	r3, #123	; 0x7b
   2a86c:	bne	2a8b4 <__flatcc_error_report@@Base+0x10ec>
   2a870:	mov	r0, r4
   2a874:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a878:	cmp	r5, #0
   2a87c:	beq	2a8a0 <__flatcc_error_report@@Base+0x10d8>
   2a880:	ldr	fp, [r4, #40]	; 0x28
   2a884:	ldr	r9, [pc, #1256]	; 2ad74 <__flatcc_error_report@@Base+0x15ac>
   2a888:	ldr	sl, [pc, #1256]	; 2ad78 <__flatcc_error_report@@Base+0x15b0>
   2a88c:	b	2ac40 <__flatcc_error_report@@Base+0x1478>
   2a890:	mov	r3, #0
   2a894:	ldr	r2, [pc, #1248]	; 2ad7c <__flatcc_error_report@@Base+0x15b4>
   2a898:	mov	r1, r5
   2a89c:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2a8a0:	mov	r2, #1
   2a8a4:	mov	r1, #125	; 0x7d
   2a8a8:	mov	r0, r4
   2a8ac:	bl	29698 <__flatcc_fb_default_error_out@@Base+0x224>
   2a8b0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a8b4:	mov	r3, #0
   2a8b8:	ldr	r2, [pc, #1216]	; 2ad80 <__flatcc_error_report@@Base+0x15b8>
   2a8bc:	mov	r1, r5
   2a8c0:	mov	r0, r4
   2a8c4:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2a8c8:	b	2a8a0 <__flatcc_error_report@@Base+0x10d8>
   2a8cc:	ldr	r5, [r4, #52]	; 0x34
   2a8d0:	add	r2, r5, #128	; 0x80
   2a8d4:	ldr	r3, [r4, #44]	; 0x2c
   2a8d8:	cmp	r2, r3
   2a8dc:	bhi	2a9ec <__flatcc_error_report@@Base+0x1224>
   2a8e0:	ldr	r3, [r4, #52]	; 0x34
   2a8e4:	add	r3, r3, #128	; 0x80
   2a8e8:	str	r3, [r4, #52]	; 0x34
   2a8ec:	mov	r6, r5
   2a8f0:	ldr	r3, [r7, #20]
   2a8f4:	str	r3, [r5]
   2a8f8:	mov	r3, #5
   2a8fc:	strh	r3, [r5, #8]
   2a900:	str	r5, [r7, #20]
   2a904:	add	r0, r4, #36	; 0x24
   2a908:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2a90c:	ldr	r3, [r4, #36]	; 0x24
   2a910:	str	r3, [r5, #68]	; 0x44
   2a914:	mov	r3, #0
   2a918:	str	r3, [r4, #36]	; 0x24
   2a91c:	ldr	r5, [r4, #40]	; 0x28
   2a920:	ldr	r3, [r5, #16]
   2a924:	cmp	r3, #9
   2a928:	bne	2aa40 <__flatcc_error_report@@Base+0x1278>
   2a92c:	mov	r0, r4
   2a930:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a934:	cmp	r5, #0
   2a938:	beq	2aac4 <__flatcc_error_report@@Base+0x12fc>
   2a93c:	str	r5, [r6, #4]
   2a940:	ldr	r5, [r4, #40]	; 0x28
   2a944:	ldr	r3, [r5, #16]
   2a948:	cmp	r3, #40	; 0x28
   2a94c:	bne	2aa58 <__flatcc_error_report@@Base+0x1290>
   2a950:	mov	r0, r4
   2a954:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a958:	cmp	r5, #0
   2a95c:	beq	2aac4 <__flatcc_error_report@@Base+0x12fc>
   2a960:	add	r1, r6, #32
   2a964:	mov	r0, r4
   2a968:	bl	29b70 <__flatcc_error_report@@Base+0x3a8>
   2a96c:	ldr	r5, [r4, #40]	; 0x28
   2a970:	ldr	r3, [r5, #16]
   2a974:	cmp	r3, #41	; 0x29
   2a978:	bne	2aa70 <__flatcc_error_report@@Base+0x12a8>
   2a97c:	mov	r0, r4
   2a980:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a984:	cmp	r5, #0
   2a988:	beq	2aac4 <__flatcc_error_report@@Base+0x12fc>
   2a98c:	ldr	r5, [r4, #40]	; 0x28
   2a990:	ldr	r3, [r5, #16]
   2a994:	cmp	r3, #58	; 0x3a
   2a998:	bne	2aa88 <__flatcc_error_report@@Base+0x12c0>
   2a99c:	mov	r0, r4
   2a9a0:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2a9a4:	cmp	r5, #0
   2a9a8:	beq	2aac4 <__flatcc_error_report@@Base+0x12fc>
   2a9ac:	add	r1, r6, #16
   2a9b0:	mov	r0, r4
   2a9b4:	bl	29b70 <__flatcc_error_report@@Base+0x3a8>
   2a9b8:	ldr	r5, [r4, #40]	; 0x28
   2a9bc:	ldr	r3, [r5, #16]
   2a9c0:	cmp	r3, #61	; 0x3d
   2a9c4:	beq	2aaa0 <__flatcc_error_report@@Base+0x12d8>
   2a9c8:	mov	r0, r4
   2a9cc:	bl	2a600 <__flatcc_error_report@@Base+0xe38>
   2a9d0:	str	r0, [r6, #64]	; 0x40
   2a9d4:	mov	r3, #0
   2a9d8:	ldr	r2, [pc, #932]	; 2ad84 <__flatcc_error_report@@Base+0x15bc>
   2a9dc:	mov	r1, #59	; 0x3b
   2a9e0:	mov	r0, r4
   2a9e4:	bl	29b30 <__flatcc_error_report@@Base+0x368>
   2a9e8:	b	2ac34 <__flatcc_error_report@@Base+0x146c>
   2a9ec:	mov	r1, #1
   2a9f0:	mov	r0, #65536	; 0x10000
   2a9f4:	bl	13ea0 <calloc@plt>
   2a9f8:	cmp	r0, #0
   2a9fc:	beq	2aa20 <__flatcc_error_report@@Base+0x1258>
   2aa00:	ldr	r3, [r4, #48]	; 0x30
   2aa04:	str	r3, [r0]
   2aa08:	str	r0, [r4, #48]	; 0x30
   2aa0c:	add	r5, r0, #16
   2aa10:	str	r5, [r4, #52]	; 0x34
   2aa14:	add	r0, r0, #65536	; 0x10000
   2aa18:	str	r0, [r4, #44]	; 0x2c
   2aa1c:	b	2a8e0 <__flatcc_error_report@@Base+0x1118>
   2aa20:	ldr	r3, [pc, #864]	; 2ad88 <__flatcc_error_report@@Base+0x15c0>
   2aa24:	ldr	r3, [r3]
   2aa28:	mov	r2, #34	; 0x22
   2aa2c:	mov	r1, #1
   2aa30:	ldr	r0, [pc, #852]	; 2ad8c <__flatcc_error_report@@Base+0x15c4>
   2aa34:	bl	13f18 <fwrite@plt>
   2aa38:	mov	r0, #1
   2aa3c:	bl	13f6c <exit@plt>
   2aa40:	mov	r3, #0
   2aa44:	ldr	r2, [pc, #836]	; 2ad90 <__flatcc_error_report@@Base+0x15c8>
   2aa48:	mov	r1, r5
   2aa4c:	mov	r0, r4
   2aa50:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2aa54:	b	2aac4 <__flatcc_error_report@@Base+0x12fc>
   2aa58:	mov	r3, #0
   2aa5c:	ldr	r2, [pc, #816]	; 2ad94 <__flatcc_error_report@@Base+0x15cc>
   2aa60:	mov	r1, r5
   2aa64:	mov	r0, r4
   2aa68:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2aa6c:	b	2aac4 <__flatcc_error_report@@Base+0x12fc>
   2aa70:	mov	r3, #0
   2aa74:	ldr	r2, [pc, #796]	; 2ad98 <__flatcc_error_report@@Base+0x15d0>
   2aa78:	mov	r1, r5
   2aa7c:	mov	r0, r4
   2aa80:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2aa84:	b	2aac4 <__flatcc_error_report@@Base+0x12fc>
   2aa88:	mov	r3, #0
   2aa8c:	ldr	r2, [pc, #776]	; 2ad9c <__flatcc_error_report@@Base+0x15d4>
   2aa90:	mov	r1, r5
   2aa94:	mov	r0, r4
   2aa98:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2aa9c:	b	2aac4 <__flatcc_error_report@@Base+0x12fc>
   2aaa0:	mov	r0, r4
   2aaa4:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2aaa8:	cmp	r5, #0
   2aaac:	beq	2a9c8 <__flatcc_error_report@@Base+0x1200>
   2aab0:	mov	r3, #0
   2aab4:	ldr	r2, [pc, #740]	; 2ada0 <__flatcc_error_report@@Base+0x15d8>
   2aab8:	mov	r1, r5
   2aabc:	mov	r0, r4
   2aac0:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2aac4:	ldr	r3, [r4, #40]	; 0x28
   2aac8:	ldr	r3, [r3, #16]
   2aacc:	cmp	r3, #0
   2aad0:	beq	2ac34 <__flatcc_error_report@@Base+0x146c>
   2aad4:	cmp	r3, #59	; 0x3b
   2aad8:	beq	2ab18 <__flatcc_error_report@@Base+0x1350>
   2aadc:	cmp	r3, #125	; 0x7d
   2aae0:	beq	2ab0c <__flatcc_error_report@@Base+0x1344>
   2aae4:	mov	r0, r4
   2aae8:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2aaec:	ldr	r3, [r4, #40]	; 0x28
   2aaf0:	ldr	r3, [r3, #16]
   2aaf4:	cmp	r3, #0
   2aaf8:	beq	2ac34 <__flatcc_error_report@@Base+0x146c>
   2aafc:	cmp	r3, #59	; 0x3b
   2ab00:	beq	2ab18 <__flatcc_error_report@@Base+0x1350>
   2ab04:	cmp	r3, #125	; 0x7d
   2ab08:	bne	2aae4 <__flatcc_error_report@@Base+0x131c>
   2ab0c:	mov	r3, #0
   2ab10:	str	r3, [r4, #36]	; 0x24
   2ab14:	b	2ac34 <__flatcc_error_report@@Base+0x146c>
   2ab18:	mov	r0, r4
   2ab1c:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2ab20:	mov	r3, #0
   2ab24:	str	r3, [r4, #36]	; 0x24
   2ab28:	b	2ac34 <__flatcc_error_report@@Base+0x146c>
   2ab2c:	mov	r1, #1
   2ab30:	mov	r0, #65536	; 0x10000
   2ab34:	bl	13ea0 <calloc@plt>
   2ab38:	cmp	r0, #0
   2ab3c:	beq	2ab60 <__flatcc_error_report@@Base+0x1398>
   2ab40:	ldr	r3, [r4, #48]	; 0x30
   2ab44:	str	r3, [r0]
   2ab48:	str	r0, [r4, #48]	; 0x30
   2ab4c:	add	r5, r0, #16
   2ab50:	str	r5, [r4, #52]	; 0x34
   2ab54:	add	r0, r0, #65536	; 0x10000
   2ab58:	str	r0, [r4, #44]	; 0x2c
   2ab5c:	b	2ac70 <__flatcc_error_report@@Base+0x14a8>
   2ab60:	ldr	r3, [pc, #544]	; 2ad88 <__flatcc_error_report@@Base+0x15c0>
   2ab64:	ldr	r3, [r3]
   2ab68:	mov	r2, #34	; 0x22
   2ab6c:	mov	r1, #1
   2ab70:	ldr	r0, [pc, #532]	; 2ad8c <__flatcc_error_report@@Base+0x15c4>
   2ab74:	bl	13f18 <fwrite@plt>
   2ab78:	mov	r0, #1
   2ab7c:	bl	13f6c <exit@plt>
   2ab80:	mov	r3, #0
   2ab84:	ldr	r2, [pc, #536]	; 2ada4 <__flatcc_error_report@@Base+0x15dc>
   2ab88:	mov	r1, r5
   2ab8c:	mov	r0, r4
   2ab90:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2ab94:	ldr	r3, [r4, #40]	; 0x28
   2ab98:	ldr	r3, [r3, #16]
   2ab9c:	cmp	r3, #0
   2aba0:	beq	2ac34 <__flatcc_error_report@@Base+0x146c>
   2aba4:	cmp	r3, #59	; 0x3b
   2aba8:	beq	2ad20 <__flatcc_error_report@@Base+0x1558>
   2abac:	cmp	r3, #125	; 0x7d
   2abb0:	beq	2abdc <__flatcc_error_report@@Base+0x1414>
   2abb4:	mov	r0, r4
   2abb8:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2abbc:	ldr	r3, [r4, #40]	; 0x28
   2abc0:	ldr	r3, [r3, #16]
   2abc4:	cmp	r3, #0
   2abc8:	beq	2ac34 <__flatcc_error_report@@Base+0x146c>
   2abcc:	cmp	r3, #59	; 0x3b
   2abd0:	beq	2ad20 <__flatcc_error_report@@Base+0x1558>
   2abd4:	cmp	r3, #125	; 0x7d
   2abd8:	bne	2abb4 <__flatcc_error_report@@Base+0x13ec>
   2abdc:	mov	r3, #0
   2abe0:	str	r3, [r4, #36]	; 0x24
   2abe4:	b	2ac34 <__flatcc_error_report@@Base+0x146c>
   2abe8:	mov	r3, #0
   2abec:	ldr	r2, [pc, #436]	; 2ada8 <__flatcc_error_report@@Base+0x15e0>
   2abf0:	mov	r1, r5
   2abf4:	mov	r0, r4
   2abf8:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2abfc:	b	2ab94 <__flatcc_error_report@@Base+0x13cc>
   2ac00:	mov	r3, sl
   2ac04:	mov	r2, #2
   2ac08:	add	r1, r6, #48	; 0x30
   2ac0c:	mov	r0, r4
   2ac10:	bl	29f58 <__flatcc_error_report@@Base+0x790>
   2ac14:	mov	r0, r4
   2ac18:	bl	2a600 <__flatcc_error_report@@Base+0xe38>
   2ac1c:	str	r0, [r6, #64]	; 0x40
   2ac20:	mov	r3, #0
   2ac24:	mov	r2, r9
   2ac28:	mov	r1, #59	; 0x3b
   2ac2c:	mov	r0, r4
   2ac30:	bl	29b30 <__flatcc_error_report@@Base+0x368>
   2ac34:	ldr	r3, [r4, #108]	; 0x6c
   2ac38:	cmp	r3, #9
   2ac3c:	bgt	2a8a0 <__flatcc_error_report@@Base+0x10d8>
   2ac40:	ldr	r5, [r4, #40]	; 0x28
   2ac44:	ldr	r3, [r5, #16]
   2ac48:	cmp	r3, #125	; 0x7d
   2ac4c:	beq	2ad34 <__flatcc_error_report@@Base+0x156c>
   2ac50:	ldr	r3, [pc, #340]	; 2adac <__flatcc_error_report@@Base+0x15e4>
   2ac54:	cmp	r8, r3
   2ac58:	beq	2a8cc <__flatcc_error_report@@Base+0x1104>
   2ac5c:	ldr	r5, [r4, #52]	; 0x34
   2ac60:	add	r2, r5, #128	; 0x80
   2ac64:	ldr	r3, [r4, #44]	; 0x2c
   2ac68:	cmp	r2, r3
   2ac6c:	bhi	2ab2c <__flatcc_error_report@@Base+0x1364>
   2ac70:	ldr	r3, [r4, #52]	; 0x34
   2ac74:	add	r3, r3, #128	; 0x80
   2ac78:	str	r3, [r4, #52]	; 0x34
   2ac7c:	mov	r6, r5
   2ac80:	ldr	r3, [r7, #20]
   2ac84:	str	r3, [r5]
   2ac88:	mov	r3, #5
   2ac8c:	strh	r3, [r5, #8]
   2ac90:	str	r5, [r7, #20]
   2ac94:	add	r0, r4, #36	; 0x24
   2ac98:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2ac9c:	ldr	r3, [r4, #36]	; 0x24
   2aca0:	str	r3, [r5, #68]	; 0x44
   2aca4:	mov	r3, #0
   2aca8:	str	r3, [r4, #36]	; 0x24
   2acac:	ldr	r5, [r4, #40]	; 0x28
   2acb0:	ldr	r3, [r5, #16]
   2acb4:	cmp	r3, #9
   2acb8:	bne	2ab80 <__flatcc_error_report@@Base+0x13b8>
   2acbc:	mov	r0, r4
   2acc0:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2acc4:	cmp	r5, #0
   2acc8:	beq	2ab94 <__flatcc_error_report@@Base+0x13cc>
   2accc:	str	r5, [r6, #4]
   2acd0:	ldr	r5, [r4, #40]	; 0x28
   2acd4:	ldr	r3, [r5, #16]
   2acd8:	cmp	r3, #58	; 0x3a
   2acdc:	bne	2abe8 <__flatcc_error_report@@Base+0x1420>
   2ace0:	mov	r0, r4
   2ace4:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2ace8:	cmp	r5, #0
   2acec:	beq	2ab94 <__flatcc_error_report@@Base+0x13cc>
   2acf0:	add	r1, r6, #16
   2acf4:	mov	r0, r4
   2acf8:	bl	29b70 <__flatcc_error_report@@Base+0x3a8>
   2acfc:	ldr	r5, [r4, #40]	; 0x28
   2ad00:	ldr	r3, [r5, #16]
   2ad04:	cmp	r3, #61	; 0x3d
   2ad08:	bne	2ac14 <__flatcc_error_report@@Base+0x144c>
   2ad0c:	mov	r0, r4
   2ad10:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2ad14:	cmp	r5, #0
   2ad18:	bne	2ac00 <__flatcc_error_report@@Base+0x1438>
   2ad1c:	b	2ac14 <__flatcc_error_report@@Base+0x144c>
   2ad20:	mov	r0, r4
   2ad24:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2ad28:	mov	r3, #0
   2ad2c:	str	r3, [r4, #36]	; 0x24
   2ad30:	b	2ac34 <__flatcc_error_report@@Base+0x146c>
   2ad34:	mov	r0, r4
   2ad38:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2ad3c:	clz	r5, r5
   2ad40:	lsr	r5, r5, #5
   2ad44:	cmp	fp, #0
   2ad48:	moveq	r5, #0
   2ad4c:	cmp	r5, #0
   2ad50:	beq	2ad68 <__flatcc_error_report@@Base+0x15a0>
   2ad54:	mov	r3, fp
   2ad58:	ldr	r2, [pc, #80]	; 2adb0 <__flatcc_error_report@@Base+0x15e8>
   2ad5c:	ldr	r1, [r4, #40]	; 0x28
   2ad60:	mov	r0, r4
   2ad64:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2ad68:	add	r0, r7, #20
   2ad6c:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2ad70:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ad74:	andeq	r2, r5, r0, lsr #21
   2ad78:	andeq	r2, r5, ip, ror sl
   2ad7c:	andeq	r2, r5, r8, lsl #18
   2ad80:	andeq	r2, r5, ip, lsr #18
   2ad84:	andeq	r2, r5, r0, lsl sl
   2ad88:	andeq	r6, r6, r8, lsr #1
   2ad8c:	muleq	r3, r4, r3
   2ad90:	andeq	r2, r5, r8, asr #18
   2ad94:	andeq	r2, r5, r4, ror #18
   2ad98:	andeq	r2, r5, ip, lsl #19
   2ad9c:			; <UNDEFINED> instruction: 0x000529b4
   2ada0:	andeq	r2, r5, r8, ror #19
   2ada4:	andeq	r2, r5, r4, lsr sl
   2ada8:	andeq	r2, r5, r0, asr sl
   2adac:			; <UNDEFINED> instruction: 0xfffffc39
   2adb0:	andeq	r2, r5, r4, asr #21

0002adb4 <error_ref_sym@@Base>:
   2adb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2adb8:	sub	sp, sp, #76	; 0x4c
   2adbc:	str	r0, [sp, #12]
   2adc0:	mov	fp, r2
   2adc4:	mov	sl, r3
   2adc8:	subs	r9, r1, #0
   2adcc:	beq	2ae8c <error_ref_sym@@Base+0xd8>
   2add0:	mov	r6, r9
   2add4:	mov	r7, #0
   2add8:	mov	r5, #50	; 0x32
   2addc:	mov	r8, #46	; 0x2e
   2ade0:	ldr	r3, [r6, #4]
   2ade4:	ldr	r4, [r3, #4]
   2ade8:	cmp	r4, r5
   2adec:	movge	r4, r5
   2adf0:	mov	r2, r4
   2adf4:	ldr	r1, [r3]
   2adf8:	add	r3, sp, #20
   2adfc:	add	r0, r3, r7
   2ae00:	bl	13edc <memcpy@plt>
   2ae04:	sub	r5, r5, r4
   2ae08:	add	r4, r4, r7
   2ae0c:	add	r3, sp, #72	; 0x48
   2ae10:	add	r3, r3, r4
   2ae14:	strb	r8, [r3, #-52]	; 0xffffffcc
   2ae18:	sub	r5, r5, #1
   2ae1c:	add	r7, r4, #1
   2ae20:	ldr	r6, [r6]
   2ae24:	cmp	r6, #0
   2ae28:	cmpne	r5, #0
   2ae2c:	bgt	2ade0 <error_ref_sym@@Base+0x2c>
   2ae30:	add	r3, sp, #72	; 0x48
   2ae34:	add	r3, r3, r7
   2ae38:	mov	r2, #0
   2ae3c:	strb	r2, [r3, #-52]	; 0xffffffcc
   2ae40:	cmp	r7, r2
   2ae44:	movle	r4, r7
   2ae48:	cmp	r5, r2
   2ae4c:	ldrle	r3, [pc, #68]	; 2ae98 <error_ref_sym@@Base+0xe4>
   2ae50:	ldrle	r0, [r3, #8]
   2ae54:	strle	r0, [sp, #67]	; 0x43
   2ae58:	movle	r4, #50	; 0x32
   2ae5c:	ldr	r1, [r9, #4]
   2ae60:	cmp	sl, #0
   2ae64:	ldrne	r3, [sl, #4]
   2ae68:	moveq	r3, #0
   2ae6c:	str	r4, [sp, #4]
   2ae70:	add	r2, sp, #20
   2ae74:	str	r2, [sp]
   2ae78:	mov	r2, fp
   2ae7c:	ldr	r0, [sp, #12]
   2ae80:	bl	297c8 <__flatcc_error_report@@Base>
   2ae84:	add	sp, sp, #76	; 0x4c
   2ae88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ae8c:	mov	r4, #0
   2ae90:	strb	r4, [sp, #20]
   2ae94:	b	2ae5c <error_ref_sym@@Base+0xa8>
   2ae98:	andeq	r2, r5, r0, lsr r4

0002ae9c <__flatcc_fb_init_parser@@Base>:
   2ae9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2aea0:	mov	r5, r0
   2aea4:	mov	r7, r1
   2aea8:	mov	r6, r2
   2aeac:	mov	r8, r3
   2aeb0:	ldr	r4, [sp, #36]	; 0x24
   2aeb4:	mov	r2, #560	; 0x230
   2aeb8:	mov	r1, #0
   2aebc:	bl	13f9c <memset@plt>
   2aec0:	cmp	r8, #0
   2aec4:	strne	r8, [r5, #8]
   2aec8:	ldrne	r3, [sp, #32]
   2aecc:	strne	r3, [r5, #12]
   2aed0:	ldreq	r3, [pc, #712]	; 2b1a0 <__flatcc_fb_init_parser@@Base+0x304>
   2aed4:	streq	r3, [r5, #8]
   2aed8:	cmp	r7, #0
   2aedc:	beq	2af34 <__flatcc_fb_init_parser@@Base+0x98>
   2aee0:	mov	r2, #224	; 0xe0
   2aee4:	mov	r1, r7
   2aee8:	add	r0, r5, #128	; 0x80
   2aeec:	bl	13edc <memcpy@plt>
   2aef0:	cmp	r4, #0
   2aef4:	addeq	r4, r5, #416	; 0x1a0
   2aef8:	str	r4, [r5, #412]	; 0x19c
   2aefc:	ldr	r3, [r5, #192]	; 0xc0
   2af00:	cmp	r3, #4
   2af04:	beq	2af40 <__flatcc_fb_init_parser@@Base+0xa4>
   2af08:	cmp	r3, #8
   2af0c:	beq	2af40 <__flatcc_fb_init_parser@@Base+0xa4>
   2af10:	cmp	r3, #2
   2af14:	beq	2af40 <__flatcc_fb_init_parser@@Base+0xa4>
   2af18:	mov	r3, #0
   2af1c:	ldr	r2, [pc, #640]	; 2b1a4 <__flatcc_fb_init_parser@@Base+0x308>
   2af20:	mov	r1, r3
   2af24:	mov	r0, r5
   2af28:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2af2c:	mvn	r0, #0
   2af30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2af34:	add	r0, r5, #128	; 0x80
   2af38:	bl	1431c <flatcc_init_options@@Base>
   2af3c:	b	2aef0 <__flatcc_fb_init_parser@@Base+0x54>
   2af40:	ldr	r3, [r5, #196]	; 0xc4
   2af44:	cmp	r3, #4
   2af48:	beq	2af78 <__flatcc_fb_init_parser@@Base+0xdc>
   2af4c:	cmp	r3, #8
   2af50:	beq	2af78 <__flatcc_fb_init_parser@@Base+0xdc>
   2af54:	cmp	r3, #2
   2af58:	beq	2af78 <__flatcc_fb_init_parser@@Base+0xdc>
   2af5c:	mov	r3, #0
   2af60:	ldr	r2, [pc, #576]	; 2b1a8 <__flatcc_fb_init_parser@@Base+0x30c>
   2af64:	mov	r1, r3
   2af68:	mov	r0, r5
   2af6c:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2af70:	mvn	r0, #0
   2af74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2af78:	ldr	r3, [pc, #556]	; 2b1ac <__flatcc_fb_init_parser@@Base+0x310>
   2af7c:	cmp	r6, #0
   2af80:	moveq	r6, r3
   2af84:	mov	r0, r6
   2af88:	bl	13f78 <strlen@plt>
   2af8c:	mov	sl, r0
   2af90:	ldr	r2, [r7, #96]	; 0x60
   2af94:	mov	r1, r0
   2af98:	mov	r0, r6
   2af9c:	bl	292f4 <__flatcc_fb_create_basename@@Base>
   2afa0:	mov	r4, r0
   2afa4:	str	r0, [r5, #512]	; 0x200
   2afa8:	cmp	r0, #0
   2afac:	beq	2b08c <__flatcc_fb_init_parser@@Base+0x1f0>
   2afb0:	bl	13f78 <strlen@plt>
   2afb4:	mov	r9, r0
   2afb8:	mov	r1, r0
   2afbc:	mov	r0, r4
   2afc0:	bl	28e5c <__flatcc_fb_copy_path_n@@Base>
   2afc4:	subs	r8, r0, #0
   2afc8:	beq	2b0ac <__flatcc_fb_init_parser@@Base+0x210>
   2afcc:	cmp	r9, #0
   2afd0:	beq	2b00c <__flatcc_fb_init_parser@@Base+0x170>
   2afd4:	ldrb	r4, [r8]
   2afd8:	cmp	r4, #0
   2afdc:	beq	2b00c <__flatcc_fb_init_parser@@Base+0x170>
   2afe0:	bl	13f54 <__ctype_toupper_loc@plt>
   2afe4:	mov	r3, r8
   2afe8:	add	r1, r8, r9
   2afec:	ldr	r2, [r0]
   2aff0:	ldr	r2, [r2, r4, lsl #2]
   2aff4:	strb	r2, [r3], #1
   2aff8:	cmp	r1, r3
   2affc:	beq	2b00c <__flatcc_fb_init_parser@@Base+0x170>
   2b000:	ldrb	r4, [r3]
   2b004:	cmp	r4, #0
   2b008:	bne	2afec <__flatcc_fb_init_parser@@Base+0x150>
   2b00c:	str	r8, [r5, #516]	; 0x204
   2b010:	str	r8, [r5, #496]	; 0x1f0
   2b014:	str	r9, [r5, #500]	; 0x1f4
   2b018:	ldr	r2, [pc, #400]	; 2b1b0 <__flatcc_fb_init_parser@@Base+0x314>
   2b01c:	mov	r1, sl
   2b020:	mov	r0, r6
   2b024:	bl	292f4 <__flatcc_fb_create_basename@@Base>
   2b028:	str	r0, [r5, #520]	; 0x208
   2b02c:	cmp	r0, #0
   2b030:	beq	2b0cc <__flatcc_fb_init_parser@@Base+0x230>
   2b034:	ldr	r3, [r7, #192]	; 0xc0
   2b038:	cmp	r3, #0
   2b03c:	beq	2b050 <__flatcc_fb_init_parser@@Base+0x1b4>
   2b040:	str	r3, [r5, #476]	; 0x1dc
   2b044:	ldr	r0, [r7, #192]	; 0xc0
   2b048:	bl	13f78 <strlen@plt>
   2b04c:	str	r0, [r5, #480]	; 0x1e0
   2b050:	mov	r2, #0
   2b054:	mov	r1, r2
   2b058:	ldr	r0, [r5, #412]	; 0x19c
   2b05c:	bl	287c8 <fb_scope_table_find@@Base>
   2b060:	subs	r4, r0, #0
   2b064:	beq	2b0ec <__flatcc_fb_init_parser@@Base+0x250>
   2b068:	str	r4, [r5, #544]	; 0x220
   2b06c:	mov	r2, #0
   2b070:	mov	r1, r2
   2b074:	ldr	r0, [r5, #412]	; 0x19c
   2b078:	bl	287c8 <fb_scope_table_find@@Base>
   2b07c:	cmp	r4, r0
   2b080:	bne	2b18c <__flatcc_fb_init_parser@@Base+0x2f0>
   2b084:	mov	r0, #0
   2b088:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b08c:	ldr	r3, [pc, #288]	; 2b1b4 <__flatcc_fb_init_parser@@Base+0x318>
   2b090:	ldr	r3, [r3]
   2b094:	mov	r2, #34	; 0x22
   2b098:	mov	r1, #1
   2b09c:	ldr	r0, [pc, #276]	; 2b1b8 <__flatcc_fb_init_parser@@Base+0x31c>
   2b0a0:	bl	13f18 <fwrite@plt>
   2b0a4:	mov	r0, #1
   2b0a8:	bl	13f6c <exit@plt>
   2b0ac:	ldr	r3, [pc, #256]	; 2b1b4 <__flatcc_fb_init_parser@@Base+0x318>
   2b0b0:	ldr	r3, [r3]
   2b0b4:	mov	r2, #34	; 0x22
   2b0b8:	mov	r1, #1
   2b0bc:	ldr	r0, [pc, #244]	; 2b1b8 <__flatcc_fb_init_parser@@Base+0x31c>
   2b0c0:	bl	13f18 <fwrite@plt>
   2b0c4:	mov	r0, #1
   2b0c8:	bl	13f6c <exit@plt>
   2b0cc:	ldr	r3, [pc, #224]	; 2b1b4 <__flatcc_fb_init_parser@@Base+0x318>
   2b0d0:	ldr	r3, [r3]
   2b0d4:	mov	r2, #34	; 0x22
   2b0d8:	mov	r1, #1
   2b0dc:	ldr	r0, [pc, #212]	; 2b1b8 <__flatcc_fb_init_parser@@Base+0x31c>
   2b0e0:	bl	13f18 <fwrite@plt>
   2b0e4:	mov	r0, #1
   2b0e8:	bl	13f6c <exit@plt>
   2b0ec:	ldr	r4, [r5, #52]	; 0x34
   2b0f0:	add	r2, r4, #32
   2b0f4:	ldr	r3, [r5, #44]	; 0x2c
   2b0f8:	cmp	r2, r3
   2b0fc:	bhi	2b138 <__flatcc_fb_init_parser@@Base+0x29c>
   2b100:	ldr	r3, [r5, #52]	; 0x34
   2b104:	add	r3, r3, #32
   2b108:	str	r3, [r5, #52]	; 0x34
   2b10c:	mov	r3, r4
   2b110:	mov	r2, #0
   2b114:	str	r2, [r3], #20
   2b118:	add	r2, r5, #476	; 0x1dc
   2b11c:	ldm	r2, {r0, r1}
   2b120:	stm	r3, {r0, r1}
   2b124:	mov	r2, #1
   2b128:	mov	r1, r4
   2b12c:	ldr	r0, [r5, #412]	; 0x19c
   2b130:	bl	287a4 <fb_scope_table_insert_item@@Base>
   2b134:	b	2b068 <__flatcc_fb_init_parser@@Base+0x1cc>
   2b138:	mov	r1, #1
   2b13c:	mov	r0, #65536	; 0x10000
   2b140:	bl	13ea0 <calloc@plt>
   2b144:	cmp	r0, #0
   2b148:	beq	2b16c <__flatcc_fb_init_parser@@Base+0x2d0>
   2b14c:	ldr	r3, [r5, #48]	; 0x30
   2b150:	str	r3, [r0]
   2b154:	str	r0, [r5, #48]	; 0x30
   2b158:	add	r4, r0, #16
   2b15c:	str	r4, [r5, #52]	; 0x34
   2b160:	add	r0, r0, #65536	; 0x10000
   2b164:	str	r0, [r5, #44]	; 0x2c
   2b168:	b	2b100 <__flatcc_fb_init_parser@@Base+0x264>
   2b16c:	ldr	r3, [pc, #64]	; 2b1b4 <__flatcc_fb_init_parser@@Base+0x318>
   2b170:	ldr	r3, [r3]
   2b174:	mov	r2, #34	; 0x22
   2b178:	mov	r1, #1
   2b17c:	ldr	r0, [pc, #52]	; 2b1b8 <__flatcc_fb_init_parser@@Base+0x31c>
   2b180:	bl	13f18 <fwrite@plt>
   2b184:	mov	r0, #1
   2b188:	bl	13f6c <exit@plt>
   2b18c:	ldr	r3, [pc, #40]	; 2b1bc <__flatcc_fb_init_parser@@Base+0x320>
   2b190:	ldr	r2, [pc, #40]	; 2b1c0 <__flatcc_fb_init_parser@@Base+0x324>
   2b194:	ldr	r1, [pc, #40]	; 2b1c4 <__flatcc_fb_init_parser@@Base+0x328>
   2b198:	ldr	r0, [pc, #40]	; 2b1c8 <__flatcc_fb_init_parser@@Base+0x32c>
   2b19c:	bl	14038 <__assert_fail@plt>
   2b1a0:	andeq	r9, r2, r4, ror r4
   2b1a4:	strdeq	r2, [r5], -r8
   2b1a8:	andeq	r2, r5, r0, lsr fp
   2b1ac:	strdeq	r2, [r5], -r0
   2b1b0:	andeq	r5, r4, r0, lsr #2
   2b1b4:	andeq	r6, r6, r8, lsr #1
   2b1b8:	muleq	r3, r4, r3
   2b1bc:	andeq	r2, r5, r0, asr #8
   2b1c0:	andeq	r0, r0, r3, lsr r5
   2b1c4:	andeq	r2, r5, r8, asr r5
   2b1c8:	andeq	r2, r5, ip, ror #22

0002b1cc <__flatcc_fb_parse@@Base>:
   2b1cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b1d0:	sub	sp, sp, #28
   2b1d4:	mov	r9, r0
   2b1d8:	mov	r4, r1
   2b1dc:	str	r1, [r0, #60]	; 0x3c
   2b1e0:	mov	r1, #1
   2b1e4:	str	r1, [r0, #64]	; 0x40
   2b1e8:	mov	r1, #9
   2b1ec:	str	r1, [r0, #84]	; 0x54
   2b1f0:	ldr	r1, [pc, #4028]	; 2c1b4 <__flatcc_fb_parse@@Base+0xfe8>
   2b1f4:	str	r1, [r0, #68]	; 0x44
   2b1f8:	mov	r1, #4
   2b1fc:	str	r1, [r0, #72]	; 0x48
   2b200:	mov	r1, #0
   2b204:	str	r1, [r0, #80]	; 0x50
   2b208:	str	r1, [r0, #76]	; 0x4c
   2b20c:	ldr	r0, [pc, #4004]	; 2c1b8 <__flatcc_fb_parse@@Base+0xfec>
   2b210:	str	r0, [r9, #104]	; 0x68
   2b214:	ldr	r0, [pc, #4000]	; 2c1bc <__flatcc_fb_parse@@Base+0xff0>
   2b218:	str	r0, [r9, #88]	; 0x58
   2b21c:	mov	r0, #5
   2b220:	str	r0, [r9, #92]	; 0x5c
   2b224:	str	r1, [r9, #100]	; 0x64
   2b228:	str	r1, [r9, #96]	; 0x60
   2b22c:	cmp	r3, r1
   2b230:	strne	r4, [r9, #16]
   2b234:	add	r6, r4, r2
   2b238:	ldr	sl, [pc, #3968]	; 2c1c0 <__flatcc_fb_parse@@Base+0xff4>
   2b23c:	ldr	fp, [pc, #3968]	; 2c1c4 <__flatcc_fb_parse@@Base+0xff8>
   2b240:	cmp	r6, r4
   2b244:	bne	2bf38 <__flatcc_fb_parse@@Base+0xd6c>
   2b248:	mov	r7, r6
   2b24c:	b	2b4b0 <__flatcc_fb_parse@@Base+0x2e4>
   2b250:	mov	r5, r4
   2b254:	add	r4, r5, #1
   2b258:	cmp	r6, r4
   2b25c:	beq	2b280 <__flatcc_fb_parse@@Base+0xb4>
   2b260:	ldrb	r3, [r5, #1]
   2b264:	cmp	r3, #34	; 0x22
   2b268:	cmpne	r3, #92	; 0x5c
   2b26c:	beq	2b284 <__flatcc_fb_parse@@Base+0xb8>
   2b270:	cmp	r3, #127	; 0x7f
   2b274:	cmpne	r3, #31
   2b278:	bhi	2b250 <__flatcc_fb_parse@@Base+0x84>
   2b27c:	b	2b284 <__flatcc_fb_parse@@Base+0xb8>
   2b280:	mov	r4, r6
   2b284:	cmp	r7, r4
   2b288:	beq	2b2a0 <__flatcc_fb_parse@@Base+0xd4>
   2b28c:	mov	r3, r4
   2b290:	mov	r2, r7
   2b294:	mov	r1, #20
   2b298:	mov	r0, r9
   2b29c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b2a0:	ldrb	r3, [r4]
   2b2a4:	cmp	r3, #34	; 0x22
   2b2a8:	beq	2b2f4 <__flatcc_fb_parse@@Base+0x128>
   2b2ac:	cmp	r3, #0
   2b2b0:	cmpne	r6, r4
   2b2b4:	beq	2b314 <__flatcc_fb_parse@@Base+0x148>
   2b2b8:	cmp	r3, #92	; 0x5c
   2b2bc:	beq	2b32c <__flatcc_fb_parse@@Base+0x160>
   2b2c0:	ldrb	r3, [r4]
   2b2c4:	cmp	r3, #13
   2b2c8:	cmpne	r3, #10
   2b2cc:	beq	2b428 <__flatcc_fb_parse@@Base+0x25c>
   2b2d0:	add	r5, r4, #1
   2b2d4:	mov	r3, r5
   2b2d8:	mov	r2, r4
   2b2dc:	mov	r1, r8
   2b2e0:	mov	r0, r9
   2b2e4:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b2e8:	mov	r7, r5
   2b2ec:	sub	r5, r5, #1
   2b2f0:	b	2b254 <__flatcc_fb_parse@@Base+0x88>
   2b2f4:	add	r5, r5, #2
   2b2f8:	mov	r3, r5
   2b2fc:	mov	r2, r4
   2b300:	mov	r1, #22
   2b304:	mov	r0, r9
   2b308:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b30c:	mov	r4, r5
   2b310:	b	2b240 <__flatcc_fb_parse@@Base+0x74>
   2b314:	mov	r3, r4
   2b318:	mov	r2, r4
   2b31c:	mov	r1, #23
   2b320:	mov	r0, r9
   2b324:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b328:	b	2b240 <__flatcc_fb_parse@@Base+0x74>
   2b32c:	add	r7, r5, #2
   2b330:	mov	r3, r7
   2b334:	mov	r2, r4
   2b338:	mov	r1, #21
   2b33c:	mov	r0, r9
   2b340:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b344:	cmp	r6, r7
   2b348:	beq	2b3dc <__flatcc_fb_parse@@Base+0x210>
   2b34c:	ldrb	r3, [r4, #1]
   2b350:	cmp	r3, #0
   2b354:	beq	2b3c0 <__flatcc_fb_parse@@Base+0x1f4>
   2b358:	cmp	r3, #34	; 0x22
   2b35c:	cmpne	r3, #92	; 0x5c
   2b360:	addeq	r5, r4, #2
   2b364:	beq	2b2ec <__flatcc_fb_parse@@Base+0x120>
   2b368:	cmp	r3, #10
   2b36c:	beq	2b3e4 <__flatcc_fb_parse@@Base+0x218>
   2b370:	cmp	r3, #13
   2b374:	movne	r4, r7
   2b378:	bne	2b2c0 <__flatcc_fb_parse@@Base+0xf4>
   2b37c:	add	r5, r4, #2
   2b380:	cmp	r6, r5
   2b384:	beq	2b394 <__flatcc_fb_parse@@Base+0x1c8>
   2b388:	ldrb	r3, [r4, #2]
   2b38c:	cmp	r3, #10
   2b390:	addeq	r5, r4, #3
   2b394:	ldr	r3, [r9, #64]	; 0x40
   2b398:	add	r3, r3, #1
   2b39c:	str	r3, [r9, #64]	; 0x40
   2b3a0:	str	r5, [r9, #60]	; 0x3c
   2b3a4:	mov	r3, r5
   2b3a8:	mov	r2, r7
   2b3ac:	mov	r1, #18
   2b3b0:	mov	r0, r9
   2b3b4:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b3b8:	mov	r7, r5
   2b3bc:	b	2b2ec <__flatcc_fb_parse@@Base+0x120>
   2b3c0:	mov	r4, r7
   2b3c4:	mov	r3, r4
   2b3c8:	mov	r2, r4
   2b3cc:	mov	r1, #23
   2b3d0:	mov	r0, r9
   2b3d4:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b3d8:	b	2b240 <__flatcc_fb_parse@@Base+0x74>
   2b3dc:	mov	r4, r6
   2b3e0:	b	2b3c4 <__flatcc_fb_parse@@Base+0x1f8>
   2b3e4:	add	r5, r4, #2
   2b3e8:	cmp	r6, r5
   2b3ec:	beq	2b3fc <__flatcc_fb_parse@@Base+0x230>
   2b3f0:	ldrb	r3, [r4, #2]
   2b3f4:	cmp	r3, #13
   2b3f8:	addeq	r5, r4, #3
   2b3fc:	ldr	r3, [r9, #64]	; 0x40
   2b400:	add	r3, r3, #1
   2b404:	str	r3, [r9, #64]	; 0x40
   2b408:	str	r5, [r9, #60]	; 0x3c
   2b40c:	mov	r3, r5
   2b410:	mov	r2, r7
   2b414:	mov	r1, #18
   2b418:	mov	r0, r9
   2b41c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b420:	mov	r7, r5
   2b424:	b	2b2ec <__flatcc_fb_parse@@Base+0x120>
   2b428:	mov	r3, r4
   2b42c:	mov	r2, r4
   2b430:	mov	r1, #23
   2b434:	mov	r0, r9
   2b438:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b43c:	b	2b240 <__flatcc_fb_parse@@Base+0x74>
   2b440:	mov	r5, r4
   2b444:	add	r4, r5, #1
   2b448:	cmp	r6, r4
   2b44c:	beq	2ded4 <__flatcc_fb_parse@@Base+0x2d08>
   2b450:	ldrb	r3, [r5, #1]
   2b454:	cmp	r3, #127	; 0x7f
   2b458:	cmpne	r3, #31
   2b45c:	bhi	2b440 <__flatcc_fb_parse@@Base+0x274>
   2b460:	cmp	r7, r4
   2b464:	beq	2df08 <__flatcc_fb_parse@@Base+0x2d3c>
   2b468:	ldr	r3, [r9, #32]
   2b46c:	cmp	r3, #0
   2b470:	beq	2df08 <__flatcc_fb_parse@@Base+0x2d3c>
   2b474:	b	2deec <__flatcc_fb_parse@@Base+0x2d20>
   2b478:	mov	r7, r6
   2b47c:	b	2b484 <__flatcc_fb_parse@@Base+0x2b8>
   2b480:	mov	r7, r4
   2b484:	mov	r3, r7
   2b488:	mov	r2, r7
   2b48c:	mov	r1, #27
   2b490:	mov	r0, r9
   2b494:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b498:	mov	r4, r7
   2b49c:	cmp	r6, r7
   2b4a0:	beq	2b4b0 <__flatcc_fb_parse@@Base+0x2e4>
   2b4a4:	ldrb	r3, [r7]
   2b4a8:	cmp	r3, #0
   2b4ac:	beq	2cc60 <__flatcc_fb_parse@@Base+0x1a94>
   2b4b0:	mov	r3, r7
   2b4b4:	mov	r2, r7
   2b4b8:	mov	r1, #0
   2b4bc:	mov	r0, r9
   2b4c0:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b4c4:	ldr	r3, [r9, #40]	; 0x28
   2b4c8:	str	r3, [r9, #24]
   2b4cc:	ldr	r4, [r9, #20]
   2b4d0:	str	r4, [r9, #40]	; 0x28
   2b4d4:	ldr	r0, [r9, #216]	; 0xd8
   2b4d8:	bl	13f3c <malloc@plt>
   2b4dc:	str	r0, [r9, #112]	; 0x70
   2b4e0:	cmp	r0, #0
   2b4e4:	beq	2cc78 <__flatcc_fb_parse@@Base+0x1aac>
   2b4e8:	ldr	r3, [r4, #16]
   2b4ec:	cmn	r3, #964	; 0x3c4
   2b4f0:	beq	2cc98 <__flatcc_fb_parse@@Base+0x1acc>
   2b4f4:	ldr	sl, [r9, #40]	; 0x28
   2b4f8:	ldr	r5, [pc, #3724]	; 2c38c <__flatcc_fb_parse@@Base+0x11c0>
   2b4fc:	ldr	r8, [pc, #3268]	; 2c1c8 <__flatcc_fb_parse@@Base+0xffc>
   2b500:	mov	r6, #0
   2b504:	mov	r7, #1
   2b508:	ldr	fp, [pc, #3260]	; 2c1cc <__flatcc_fb_parse@@Base+0x1000>
   2b50c:	b	2cd40 <__flatcc_fb_parse@@Base+0x1b74>
   2b510:	mov	r3, #0
   2b514:	str	r3, [r9, #32]
   2b518:	b	2b240 <__flatcc_fb_parse@@Base+0x74>
   2b51c:	mov	r3, r7
   2b520:	mov	r2, r4
   2b524:	mov	r1, r8
   2b528:	mov	r0, r9
   2b52c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b530:	b	2df3c <__flatcc_fb_parse@@Base+0x2d70>
   2b534:	mov	r3, r7
   2b538:	mov	r2, r4
   2b53c:	mov	r1, #7
   2b540:	mov	r0, r9
   2b544:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b548:	b	2df3c <__flatcc_fb_parse@@Base+0x2d70>
   2b54c:	cmp	r5, r2
   2b550:	moveq	r7, r2
   2b554:	beq	2df88 <__flatcc_fb_parse@@Base+0x2dbc>
   2b558:	ldr	r3, [r9, #32]
   2b55c:	cmp	r3, #0
   2b560:	movne	r7, r2
   2b564:	bne	2df74 <__flatcc_fb_parse@@Base+0x2da8>
   2b568:	mov	r7, r2
   2b56c:	b	2df88 <__flatcc_fb_parse@@Base+0x2dbc>
   2b570:	mov	r7, r6
   2b574:	b	2dff0 <__flatcc_fb_parse@@Base+0x2e24>
   2b578:	add	r5, r7, #1
   2b57c:	cmp	r6, r5
   2b580:	beq	2b590 <__flatcc_fb_parse@@Base+0x3c4>
   2b584:	ldrb	r3, [r7, #1]
   2b588:	cmp	r3, #13
   2b58c:	addeq	r5, r7, #2
   2b590:	ldr	r3, [r9, #64]	; 0x40
   2b594:	add	r3, r3, #1
   2b598:	str	r3, [r9, #64]	; 0x40
   2b59c:	str	r5, [r9, #60]	; 0x3c
   2b5a0:	sub	r2, r5, #1
   2b5a4:	add	r7, r2, #1
   2b5a8:	cmp	r6, r7
   2b5ac:	beq	2df5c <__flatcc_fb_parse@@Base+0x2d90>
   2b5b0:	ldrb	r3, [r2, #1]
   2b5b4:	cmp	r3, #127	; 0x7f
   2b5b8:	cmpne	r3, #31
   2b5bc:	bls	2df44 <__flatcc_fb_parse@@Base+0x2d78>
   2b5c0:	cmp	r3, #47	; 0x2f
   2b5c4:	movne	r2, r7
   2b5c8:	bne	2b5a4 <__flatcc_fb_parse@@Base+0x3d8>
   2b5cc:	ldrb	r3, [r7, #-1]
   2b5d0:	cmp	r3, #42	; 0x2a
   2b5d4:	beq	2b54c <__flatcc_fb_parse@@Base+0x380>
   2b5d8:	mov	r2, r7
   2b5dc:	b	2b5a4 <__flatcc_fb_parse@@Base+0x3d8>
   2b5e0:	add	r5, r7, #1
   2b5e4:	cmp	r6, r5
   2b5e8:	beq	2b5f8 <__flatcc_fb_parse@@Base+0x42c>
   2b5ec:	ldrb	r3, [r7, #1]
   2b5f0:	cmp	r3, #10
   2b5f4:	addeq	r5, r7, #2
   2b5f8:	ldr	r3, [r9, #64]	; 0x40
   2b5fc:	add	r3, r3, #1
   2b600:	str	r3, [r9, #64]	; 0x40
   2b604:	str	r5, [r9, #60]	; 0x3c
   2b608:	b	2b5a0 <__flatcc_fb_parse@@Base+0x3d4>
   2b60c:	mov	r3, r5
   2b610:	mov	r2, r7
   2b614:	mov	r1, r8
   2b618:	mov	r0, r9
   2b61c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b620:	b	2b5a0 <__flatcc_fb_parse@@Base+0x3d4>
   2b624:	add	r4, r7, #2
   2b628:	mov	r3, #0
   2b62c:	str	r3, [r9, #32]
   2b630:	b	2b240 <__flatcc_fb_parse@@Base+0x74>
   2b634:	mov	r3, r4
   2b638:	mov	r2, r4
   2b63c:	mov	r1, #0
   2b640:	mov	r0, r9
   2b644:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b648:	b	2b4c4 <__flatcc_fb_parse@@Base+0x2f8>
   2b64c:	add	r3, r4, #1
   2b650:	mov	r1, r6
   2b654:	mov	r7, r3
   2b658:	cmp	r3, r1
   2b65c:	beq	2b49c <__flatcc_fb_parse@@Base+0x2d0>
   2b660:	ldrb	r2, [r3], #1
   2b664:	cmp	r2, #9
   2b668:	cmpne	r2, #32
   2b66c:	beq	2b654 <__flatcc_fb_parse@@Base+0x488>
   2b670:	mov	r4, r7
   2b674:	b	2bf38 <__flatcc_fb_parse@@Base+0xd6c>
   2b678:	add	r3, r4, #1
   2b67c:	cmp	r6, r3
   2b680:	beq	2b690 <__flatcc_fb_parse@@Base+0x4c4>
   2b684:	ldrb	r2, [r4, #1]
   2b688:	cmp	r2, #13
   2b68c:	addeq	r3, r4, #2
   2b690:	ldr	r2, [r9, #64]	; 0x40
   2b694:	add	r2, r2, #1
   2b698:	str	r2, [r9, #64]	; 0x40
   2b69c:	str	r3, [r9, #60]	; 0x3c
   2b6a0:	mov	r4, r3
   2b6a4:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2b6a8:	add	r3, r4, #1
   2b6ac:	cmp	r6, r3
   2b6b0:	beq	2b6c0 <__flatcc_fb_parse@@Base+0x4f4>
   2b6b4:	ldrb	r2, [r4, #1]
   2b6b8:	cmp	r2, #10
   2b6bc:	addeq	r3, r4, #2
   2b6c0:	ldr	r2, [r9, #64]	; 0x40
   2b6c4:	add	r2, r2, #1
   2b6c8:	str	r2, [r9, #64]	; 0x40
   2b6cc:	str	r3, [r9, #60]	; 0x3c
   2b6d0:	mov	r4, r3
   2b6d4:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2b6d8:	add	r5, r4, #1
   2b6dc:	mov	r3, r5
   2b6e0:	mov	r2, r4
   2b6e4:	mov	r1, #19
   2b6e8:	mov	r0, r9
   2b6ec:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b6f0:	mov	r7, r5
   2b6f4:	mov	r8, #6
   2b6f8:	b	2b2ec <__flatcc_fb_parse@@Base+0x120>
   2b6fc:	add	r5, r4, #1
   2b700:	cmp	r6, r5
   2b704:	beq	2b724 <__flatcc_fb_parse@@Base+0x558>
   2b708:	ldrb	r3, [r4, #1]
   2b70c:	cmp	r3, #47	; 0x2f
   2b710:	beq	2b740 <__flatcc_fb_parse@@Base+0x574>
   2b714:	cmp	r3, #61	; 0x3d
   2b718:	beq	2b804 <__flatcc_fb_parse@@Base+0x638>
   2b71c:	cmp	r3, #42	; 0x2a
   2b720:	beq	2b7a0 <__flatcc_fb_parse@@Base+0x5d4>
   2b724:	mov	r3, r5
   2b728:	mov	r2, r4
   2b72c:	mov	r1, #47	; 0x2f
   2b730:	mov	r0, r9
   2b734:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b738:	mov	r4, r5
   2b73c:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2b740:	add	r7, r4, #2
   2b744:	cmp	r6, r7
   2b748:	moveq	r3, #0
   2b74c:	beq	2b764 <__flatcc_fb_parse@@Base+0x598>
   2b750:	ldrb	r3, [r4, #2]
   2b754:	cmp	r3, #33	; 0x21
   2b758:	cmpne	r3, #47	; 0x2f
   2b75c:	moveq	r3, #1
   2b760:	movne	r3, #0
   2b764:	add	r7, r7, r3
   2b768:	sub	r4, r7, r4
   2b76c:	cmp	r4, #3
   2b770:	moveq	r3, #1
   2b774:	movne	r3, #0
   2b778:	str	r3, [r9, #32]
   2b77c:	beq	2b788 <__flatcc_fb_parse@@Base+0x5bc>
   2b780:	ldr	r8, [pc, #2632]	; 2c1d0 <__flatcc_fb_parse@@Base+0x1004>
   2b784:	b	2df3c <__flatcc_fb_parse@@Base+0x2d70>
   2b788:	mov	r3, r7
   2b78c:	mov	r2, r7
   2b790:	ldr	r1, [pc, #2616]	; 2c1d0 <__flatcc_fb_parse@@Base+0x1004>
   2b794:	mov	r0, r9
   2b798:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b79c:	b	2b780 <__flatcc_fb_parse@@Base+0x5b4>
   2b7a0:	add	r5, r4, #2
   2b7a4:	cmp	r6, r5
   2b7a8:	moveq	r3, #0
   2b7ac:	beq	2b7c4 <__flatcc_fb_parse@@Base+0x5f8>
   2b7b0:	ldrb	r3, [r4, #2]
   2b7b4:	cmp	r3, #33	; 0x21
   2b7b8:	cmpne	r3, #42	; 0x2a
   2b7bc:	moveq	r3, #1
   2b7c0:	movne	r3, #0
   2b7c4:	add	r5, r5, r3
   2b7c8:	sub	r4, r5, r4
   2b7cc:	cmp	r4, #3
   2b7d0:	moveq	r3, #1
   2b7d4:	movne	r3, #0
   2b7d8:	str	r3, [r9, #32]
   2b7dc:	beq	2b7ec <__flatcc_fb_parse@@Base+0x620>
   2b7e0:	ldr	r4, [pc, #2536]	; 2c1d0 <__flatcc_fb_parse@@Base+0x1004>
   2b7e4:	mov	r8, #7
   2b7e8:	b	2b5a0 <__flatcc_fb_parse@@Base+0x3d4>
   2b7ec:	mov	r3, r5
   2b7f0:	mov	r2, r5
   2b7f4:	ldr	r1, [pc, #2516]	; 2c1d0 <__flatcc_fb_parse@@Base+0x1004>
   2b7f8:	mov	r0, r9
   2b7fc:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b800:	b	2b7e0 <__flatcc_fb_parse@@Base+0x614>
   2b804:	add	r5, r4, #2
   2b808:	mov	r3, r5
   2b80c:	mov	r2, r4
   2b810:	ldr	r1, [pc, #2492]	; 2c1d4 <__flatcc_fb_parse@@Base+0x1008>
   2b814:	mov	r0, r9
   2b818:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b81c:	mov	r4, r5
   2b820:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2b824:	add	r5, r4, #1
   2b828:	mov	r3, r5
   2b82c:	mov	r2, r4
   2b830:	mov	r0, r9
   2b834:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b838:	mov	r4, r5
   2b83c:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2b840:	add	r5, r4, #1
   2b844:	cmp	r6, r5
   2b848:	beq	2b858 <__flatcc_fb_parse@@Base+0x68c>
   2b84c:	ldrb	r3, [r4, #1]
   2b850:	cmp	r3, #61	; 0x3d
   2b854:	beq	2b870 <__flatcc_fb_parse@@Base+0x6a4>
   2b858:	mov	r3, r5
   2b85c:	mov	r2, r4
   2b860:	mov	r0, r9
   2b864:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b868:	mov	r4, r5
   2b86c:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2b870:	add	r5, r4, #2
   2b874:	mov	r3, r5
   2b878:	mov	r2, r4
   2b87c:	orr	r1, r1, #15616	; 0x3d00
   2b880:	mov	r0, r9
   2b884:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b888:	mov	r4, r5
   2b88c:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2b890:	add	r5, r4, #1
   2b894:	cmp	r6, r5
   2b898:	beq	2b8b0 <__flatcc_fb_parse@@Base+0x6e4>
   2b89c:	ldrb	r3, [r4, #1]
   2b8a0:	cmp	r3, #61	; 0x3d
   2b8a4:	beq	2b8cc <__flatcc_fb_parse@@Base+0x700>
   2b8a8:	cmp	r3, #124	; 0x7c
   2b8ac:	beq	2b8ec <__flatcc_fb_parse@@Base+0x720>
   2b8b0:	mov	r3, r5
   2b8b4:	mov	r2, r4
   2b8b8:	mov	r1, #124	; 0x7c
   2b8bc:	mov	r0, r9
   2b8c0:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b8c4:	mov	r4, r5
   2b8c8:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2b8cc:	add	r5, r4, #2
   2b8d0:	mov	r3, r5
   2b8d4:	mov	r2, r4
   2b8d8:	ldr	r1, [pc, #2296]	; 2c1d8 <__flatcc_fb_parse@@Base+0x100c>
   2b8dc:	mov	r0, r9
   2b8e0:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b8e4:	mov	r4, r5
   2b8e8:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2b8ec:	add	r5, r4, #2
   2b8f0:	mov	r3, r5
   2b8f4:	mov	r2, r4
   2b8f8:	ldr	r1, [pc, #2268]	; 2c1dc <__flatcc_fb_parse@@Base+0x1010>
   2b8fc:	mov	r0, r9
   2b900:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b904:	b	2b8b0 <__flatcc_fb_parse@@Base+0x6e4>
   2b908:	add	r5, r4, #1
   2b90c:	cmp	r6, r5
   2b910:	beq	2b960 <__flatcc_fb_parse@@Base+0x794>
   2b914:	ldrb	r3, [r4, #1]
   2b918:	cmp	r3, #38	; 0x26
   2b91c:	beq	2b948 <__flatcc_fb_parse@@Base+0x77c>
   2b920:	cmp	r3, #61	; 0x3d
   2b924:	bne	2b960 <__flatcc_fb_parse@@Base+0x794>
   2b928:	add	r5, r4, #2
   2b92c:	mov	r3, r5
   2b930:	mov	r2, r4
   2b934:	ldr	r1, [pc, #2212]	; 2c1e0 <__flatcc_fb_parse@@Base+0x1014>
   2b938:	mov	r0, r9
   2b93c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b940:	mov	r4, r5
   2b944:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2b948:	add	r5, r4, #2
   2b94c:	mov	r3, r5
   2b950:	mov	r2, r4
   2b954:	ldr	r1, [pc, #2184]	; 2c1e4 <__flatcc_fb_parse@@Base+0x1018>
   2b958:	mov	r0, r9
   2b95c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b960:	mov	r3, r5
   2b964:	mov	r2, r4
   2b968:	mov	r1, #38	; 0x26
   2b96c:	mov	r0, r9
   2b970:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b974:	mov	r4, r5
   2b978:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2b97c:	add	r5, r4, #1
   2b980:	cmp	r6, r5
   2b984:	beq	2b9e8 <__flatcc_fb_parse@@Base+0x81c>
   2b988:	ldrb	r3, [r4, #1]
   2b98c:	cmp	r3, #61	; 0x3d
   2b990:	beq	2b9bc <__flatcc_fb_parse@@Base+0x7f0>
   2b994:	cmp	r3, #62	; 0x3e
   2b998:	bne	2b9e8 <__flatcc_fb_parse@@Base+0x81c>
   2b99c:	add	r5, r4, #2
   2b9a0:	mov	r3, r5
   2b9a4:	mov	r2, r4
   2b9a8:	ldr	r1, [pc, #2104]	; 2c1e8 <__flatcc_fb_parse@@Base+0x101c>
   2b9ac:	mov	r0, r9
   2b9b0:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b9b4:	mov	r4, r5
   2b9b8:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2b9bc:	add	r5, r4, #2
   2b9c0:	cmp	r6, r5
   2b9c4:	beq	2b9d4 <__flatcc_fb_parse@@Base+0x808>
   2b9c8:	ldrb	r3, [r4, #2]
   2b9cc:	cmp	r3, #61	; 0x3d
   2b9d0:	beq	2ba04 <__flatcc_fb_parse@@Base+0x838>
   2b9d4:	mov	r3, r5
   2b9d8:	mov	r2, r4
   2b9dc:	ldr	r1, [pc, #2056]	; 2c1ec <__flatcc_fb_parse@@Base+0x1020>
   2b9e0:	mov	r0, r9
   2b9e4:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b9e8:	mov	r3, r5
   2b9ec:	mov	r2, r4
   2b9f0:	mov	r1, #61	; 0x3d
   2b9f4:	mov	r0, r9
   2b9f8:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2b9fc:	mov	r4, r5
   2ba00:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2ba04:	add	r5, r4, #3
   2ba08:	mov	r3, r5
   2ba0c:	mov	r2, r4
   2ba10:	ldr	r1, [pc, #2008]	; 2c1f0 <__flatcc_fb_parse@@Base+0x1024>
   2ba14:	mov	r0, r9
   2ba18:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2ba1c:	mov	r4, r5
   2ba20:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2ba24:	add	r5, r4, #1
   2ba28:	cmp	r6, r5
   2ba2c:	beq	2bab8 <__flatcc_fb_parse@@Base+0x8ec>
   2ba30:	ldrb	r3, [r4, #1]
   2ba34:	cmp	r3, #58	; 0x3a
   2ba38:	beq	2ba64 <__flatcc_fb_parse@@Base+0x898>
   2ba3c:	cmp	r3, #61	; 0x3d
   2ba40:	bne	2bab8 <__flatcc_fb_parse@@Base+0x8ec>
   2ba44:	add	r5, r4, #2
   2ba48:	mov	r3, r5
   2ba4c:	mov	r2, r4
   2ba50:	ldr	r1, [pc, #1948]	; 2c1f4 <__flatcc_fb_parse@@Base+0x1028>
   2ba54:	mov	r0, r9
   2ba58:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2ba5c:	mov	r4, r5
   2ba60:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2ba64:	add	r5, r4, #2
   2ba68:	cmp	r6, r5
   2ba6c:	beq	2ba7c <__flatcc_fb_parse@@Base+0x8b0>
   2ba70:	ldrb	r3, [r4, #2]
   2ba74:	cmp	r3, #61	; 0x3d
   2ba78:	beq	2ba98 <__flatcc_fb_parse@@Base+0x8cc>
   2ba7c:	mov	r3, r5
   2ba80:	mov	r2, r4
   2ba84:	ldr	r1, [pc, #1900]	; 2c1f8 <__flatcc_fb_parse@@Base+0x102c>
   2ba88:	mov	r0, r9
   2ba8c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2ba90:	mov	r4, r5
   2ba94:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2ba98:	add	r5, r4, #3
   2ba9c:	mov	r3, r5
   2baa0:	mov	r2, r4
   2baa4:	ldr	r1, [pc, #1872]	; 2c1fc <__flatcc_fb_parse@@Base+0x1030>
   2baa8:	mov	r0, r9
   2baac:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bab0:	mov	r4, r5
   2bab4:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bab8:	mov	r3, r5
   2babc:	mov	r2, r4
   2bac0:	mov	r1, #58	; 0x3a
   2bac4:	mov	r0, r9
   2bac8:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bacc:	mov	r4, r5
   2bad0:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bad4:	add	r5, r4, #1
   2bad8:	cmp	r6, r5
   2badc:	beq	2bb2c <__flatcc_fb_parse@@Base+0x960>
   2bae0:	ldrb	r3, [r4, #1]
   2bae4:	cmp	r3, #42	; 0x2a
   2bae8:	beq	2bb10 <__flatcc_fb_parse@@Base+0x944>
   2baec:	cmp	r3, #61	; 0x3d
   2baf0:	bne	2bb2c <__flatcc_fb_parse@@Base+0x960>
   2baf4:	mov	r3, r5
   2baf8:	mov	r2, r4
   2bafc:	ldr	r1, [pc, #1788]	; 2c200 <__flatcc_fb_parse@@Base+0x1034>
   2bb00:	mov	r0, r9
   2bb04:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bb08:	mov	r4, r5
   2bb0c:	b	2bf38 <__flatcc_fb_parse@@Base+0xd6c>
   2bb10:	mov	r3, r5
   2bb14:	mov	r2, r4
   2bb18:	ldr	r1, [pc, #1764]	; 2c204 <__flatcc_fb_parse@@Base+0x1038>
   2bb1c:	mov	r0, r9
   2bb20:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bb24:	mov	r4, r5
   2bb28:	b	2bf38 <__flatcc_fb_parse@@Base+0xd6c>
   2bb2c:	mov	r3, r5
   2bb30:	mov	r2, r4
   2bb34:	mov	r1, #42	; 0x2a
   2bb38:	mov	r0, r9
   2bb3c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bb40:	mov	r4, r5
   2bb44:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bb48:	add	r5, r4, #1
   2bb4c:	cmp	r6, r5
   2bb50:	beq	2bb70 <__flatcc_fb_parse@@Base+0x9a4>
   2bb54:	ldrb	r3, [r4, #1]
   2bb58:	cmp	r3, #60	; 0x3c
   2bb5c:	beq	2bbcc <__flatcc_fb_parse@@Base+0xa00>
   2bb60:	cmp	r3, #61	; 0x3d
   2bb64:	beq	2bbac <__flatcc_fb_parse@@Base+0x9e0>
   2bb68:	cmp	r3, #45	; 0x2d
   2bb6c:	beq	2bb8c <__flatcc_fb_parse@@Base+0x9c0>
   2bb70:	mov	r3, r5
   2bb74:	mov	r2, r4
   2bb78:	mov	r1, #60	; 0x3c
   2bb7c:	mov	r0, r9
   2bb80:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bb84:	mov	r4, r5
   2bb88:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bb8c:	add	r5, r4, #2
   2bb90:	mov	r3, r5
   2bb94:	mov	r2, r4
   2bb98:	ldr	r1, [pc, #1640]	; 2c208 <__flatcc_fb_parse@@Base+0x103c>
   2bb9c:	mov	r0, r9
   2bba0:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bba4:	mov	r4, r5
   2bba8:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bbac:	add	r5, r4, #2
   2bbb0:	mov	r3, r5
   2bbb4:	mov	r2, r4
   2bbb8:	ldr	r1, [pc, #1612]	; 2c20c <__flatcc_fb_parse@@Base+0x1040>
   2bbbc:	mov	r0, r9
   2bbc0:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bbc4:	mov	r4, r5
   2bbc8:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bbcc:	add	r5, r4, #2
   2bbd0:	cmp	r6, r5
   2bbd4:	beq	2bc60 <__flatcc_fb_parse@@Base+0xa94>
   2bbd8:	ldrb	r3, [r4, #2]
   2bbdc:	cmp	r3, #60	; 0x3c
   2bbe0:	beq	2bc0c <__flatcc_fb_parse@@Base+0xa40>
   2bbe4:	cmp	r3, #61	; 0x3d
   2bbe8:	bne	2bc60 <__flatcc_fb_parse@@Base+0xa94>
   2bbec:	add	r5, r4, #3
   2bbf0:	mov	r3, r5
   2bbf4:	mov	r2, r4
   2bbf8:	ldr	r1, [pc, #1552]	; 2c210 <__flatcc_fb_parse@@Base+0x1044>
   2bbfc:	mov	r0, r9
   2bc00:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bc04:	mov	r4, r5
   2bc08:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bc0c:	add	r5, r4, #3
   2bc10:	cmp	r6, r5
   2bc14:	beq	2bc24 <__flatcc_fb_parse@@Base+0xa58>
   2bc18:	ldrb	r3, [r4, #3]
   2bc1c:	cmp	r3, #61	; 0x3d
   2bc20:	beq	2bc40 <__flatcc_fb_parse@@Base+0xa74>
   2bc24:	mov	r3, r5
   2bc28:	mov	r2, r4
   2bc2c:	ldr	r1, [pc, #1504]	; 2c214 <__flatcc_fb_parse@@Base+0x1048>
   2bc30:	mov	r0, r9
   2bc34:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bc38:	mov	r4, r5
   2bc3c:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bc40:	add	r5, r4, #4
   2bc44:	mov	r3, r5
   2bc48:	mov	r2, r4
   2bc4c:	ldr	r1, [pc, #1476]	; 2c218 <__flatcc_fb_parse@@Base+0x104c>
   2bc50:	mov	r0, r9
   2bc54:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bc58:	mov	r4, r5
   2bc5c:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bc60:	mov	r3, r5
   2bc64:	mov	r2, r4
   2bc68:	ldr	r1, [pc, #1452]	; 2c21c <__flatcc_fb_parse@@Base+0x1050>
   2bc6c:	mov	r0, r9
   2bc70:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bc74:	mov	r4, r5
   2bc78:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bc7c:	add	r5, r4, #1
   2bc80:	cmp	r6, r5
   2bc84:	beq	2bc9c <__flatcc_fb_parse@@Base+0xad0>
   2bc88:	ldrb	r3, [r4, #1]
   2bc8c:	cmp	r3, #61	; 0x3d
   2bc90:	beq	2bcb8 <__flatcc_fb_parse@@Base+0xaec>
   2bc94:	cmp	r3, #62	; 0x3e
   2bc98:	beq	2bcd8 <__flatcc_fb_parse@@Base+0xb0c>
   2bc9c:	mov	r3, r5
   2bca0:	mov	r2, r4
   2bca4:	mov	r1, #62	; 0x3e
   2bca8:	mov	r0, r9
   2bcac:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bcb0:	mov	r4, r5
   2bcb4:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bcb8:	add	r5, r4, #2
   2bcbc:	mov	r3, r5
   2bcc0:	mov	r2, r4
   2bcc4:	ldr	r1, [pc, #1364]	; 2c220 <__flatcc_fb_parse@@Base+0x1054>
   2bcc8:	mov	r0, r9
   2bccc:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bcd0:	mov	r4, r5
   2bcd4:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bcd8:	add	r5, r4, #2
   2bcdc:	cmp	r6, r5
   2bce0:	beq	2bcf8 <__flatcc_fb_parse@@Base+0xb2c>
   2bce4:	ldrb	r3, [r4, #2]
   2bce8:	cmp	r3, #61	; 0x3d
   2bcec:	beq	2bd14 <__flatcc_fb_parse@@Base+0xb48>
   2bcf0:	cmp	r3, #62	; 0x3e
   2bcf4:	beq	2bd34 <__flatcc_fb_parse@@Base+0xb68>
   2bcf8:	mov	r3, r5
   2bcfc:	mov	r2, r4
   2bd00:	ldr	r1, [pc, #1308]	; 2c224 <__flatcc_fb_parse@@Base+0x1058>
   2bd04:	mov	r0, r9
   2bd08:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bd0c:	mov	r4, r5
   2bd10:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bd14:	add	r5, r4, #3
   2bd18:	mov	r3, r5
   2bd1c:	mov	r2, r4
   2bd20:	ldr	r1, [pc, #1280]	; 2c228 <__flatcc_fb_parse@@Base+0x105c>
   2bd24:	mov	r0, r9
   2bd28:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bd2c:	mov	r4, r5
   2bd30:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bd34:	add	r5, r4, #3
   2bd38:	cmp	r6, r5
   2bd3c:	beq	2bd4c <__flatcc_fb_parse@@Base+0xb80>
   2bd40:	ldrb	r3, [r4, #3]
   2bd44:	cmp	r3, #61	; 0x3d
   2bd48:	beq	2bd68 <__flatcc_fb_parse@@Base+0xb9c>
   2bd4c:	mov	r3, r5
   2bd50:	mov	r2, r4
   2bd54:	ldr	r1, [pc, #1232]	; 2c22c <__flatcc_fb_parse@@Base+0x1060>
   2bd58:	mov	r0, r9
   2bd5c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bd60:	mov	r4, r5
   2bd64:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bd68:	add	r5, r4, #4
   2bd6c:	mov	r3, r5
   2bd70:	mov	r2, r4
   2bd74:	ldr	r1, [pc, #1204]	; 2c230 <__flatcc_fb_parse@@Base+0x1064>
   2bd78:	mov	r0, r9
   2bd7c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bd80:	mov	r4, r5
   2bd84:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bd88:	add	r5, r4, #1
   2bd8c:	cmp	r6, r5
   2bd90:	beq	2bdb0 <__flatcc_fb_parse@@Base+0xbe4>
   2bd94:	ldrb	r3, [r4, #1]
   2bd98:	cmp	r3, #61	; 0x3d
   2bd9c:	beq	2bdcc <__flatcc_fb_parse@@Base+0xc00>
   2bda0:	cmp	r3, #62	; 0x3e
   2bda4:	beq	2be0c <__flatcc_fb_parse@@Base+0xc40>
   2bda8:	cmp	r3, #45	; 0x2d
   2bdac:	beq	2bdec <__flatcc_fb_parse@@Base+0xc20>
   2bdb0:	mov	r3, r5
   2bdb4:	mov	r2, r4
   2bdb8:	mov	r1, #45	; 0x2d
   2bdbc:	mov	r0, r9
   2bdc0:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bdc4:	mov	r4, r5
   2bdc8:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bdcc:	add	r5, r4, #2
   2bdd0:	mov	r3, r5
   2bdd4:	mov	r2, r4
   2bdd8:	ldr	r1, [pc, #1108]	; 2c234 <__flatcc_fb_parse@@Base+0x1068>
   2bddc:	mov	r0, r9
   2bde0:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bde4:	mov	r4, r5
   2bde8:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bdec:	add	r5, r4, #2
   2bdf0:	mov	r3, r5
   2bdf4:	mov	r2, r4
   2bdf8:	ldr	r1, [pc, #1080]	; 2c238 <__flatcc_fb_parse@@Base+0x106c>
   2bdfc:	mov	r0, r9
   2be00:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2be04:	mov	r4, r5
   2be08:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2be0c:	add	r5, r4, #2
   2be10:	mov	r3, r5
   2be14:	mov	r2, r4
   2be18:	ldr	r1, [pc, #1052]	; 2c23c <__flatcc_fb_parse@@Base+0x1070>
   2be1c:	mov	r0, r9
   2be20:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2be24:	mov	r4, r5
   2be28:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2be2c:	add	r5, r4, #1
   2be30:	cmp	r6, r5
   2be34:	beq	2be8c <__flatcc_fb_parse@@Base+0xcc0>
   2be38:	ldrb	r3, [r4, #1]
   2be3c:	cmp	r3, #43	; 0x2b
   2be40:	beq	2be6c <__flatcc_fb_parse@@Base+0xca0>
   2be44:	cmp	r3, #61	; 0x3d
   2be48:	bne	2be8c <__flatcc_fb_parse@@Base+0xcc0>
   2be4c:	add	r5, r4, #2
   2be50:	mov	r3, r5
   2be54:	mov	r2, r4
   2be58:	ldr	r1, [pc, #992]	; 2c240 <__flatcc_fb_parse@@Base+0x1074>
   2be5c:	mov	r0, r9
   2be60:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2be64:	mov	r4, r5
   2be68:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2be6c:	add	r5, r4, #2
   2be70:	mov	r3, r5
   2be74:	mov	r2, r4
   2be78:	ldr	r1, [pc, #964]	; 2c244 <__flatcc_fb_parse@@Base+0x1078>
   2be7c:	mov	r0, r9
   2be80:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2be84:	mov	r4, r5
   2be88:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2be8c:	mov	r3, r5
   2be90:	mov	r2, r4
   2be94:	mov	r1, #43	; 0x2b
   2be98:	mov	r0, r9
   2be9c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bea0:	mov	r4, r5
   2bea4:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2bea8:	add	r5, r4, #1
   2beac:	cmp	r6, r5
   2beb0:	beq	2c198 <__flatcc_fb_parse@@Base+0xfcc>
   2beb4:	ldrb	r3, [r4, #1]
   2beb8:	cmp	r3, #46	; 0x2e
   2bebc:	beq	2c144 <__flatcc_fb_parse@@Base+0xf78>
   2bec0:	bcc	2c198 <__flatcc_fb_parse@@Base+0xfcc>
   2bec4:	sub	r3, r3, #48	; 0x30
   2bec8:	cmp	r3, #9
   2becc:	movls	r1, r4
   2bed0:	bhi	2c198 <__flatcc_fb_parse@@Base+0xfcc>
   2bed4:	add	r2, r5, #1
   2bed8:	mov	r0, r6
   2bedc:	mov	r5, r2
   2bee0:	cmp	r2, r0
   2bee4:	beq	2bf10 <__flatcc_fb_parse@@Base+0xd44>
   2bee8:	add	r2, r2, #1
   2beec:	ldrb	r3, [r5]
   2bef0:	sub	r3, r3, #48	; 0x30
   2bef4:	uxtb	r3, r3
   2bef8:	cmp	r3, #9
   2befc:	bls	2bedc <__flatcc_fb_parse@@Base+0xd10>
   2bf00:	ldrb	r3, [r5]
   2bf04:	and	r3, r3, #223	; 0xdf
   2bf08:	cmp	r3, #69	; 0x45
   2bf0c:	beq	2c4d4 <__flatcc_fb_parse@@Base+0x1308>
   2bf10:	cmp	r5, r1
   2bf14:	beq	2c524 <__flatcc_fb_parse@@Base+0x1358>
   2bf18:	mov	r3, r5
   2bf1c:	mov	r2, r4
   2bf20:	mov	r1, #11
   2bf24:	mov	r0, r9
   2bf28:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2bf2c:	mov	r4, r5
   2bf30:	cmp	r6, r4
   2bf34:	beq	2b248 <__flatcc_fb_parse@@Base+0x7c>
   2bf38:	ldrb	r1, [r4]
   2bf3c:	cmp	r1, #126	; 0x7e
   2bf40:	ldrls	pc, [pc, r1, lsl #2]
   2bf44:	b	2cc0c <__flatcc_fb_parse@@Base+0x1a40>
   2bf48:	andeq	fp, r2, r4, lsr r6
   2bf4c:	andeq	ip, r2, ip, lsl #24
   2bf50:	andeq	ip, r2, ip, lsl #24
   2bf54:	andeq	ip, r2, ip, lsl #24
   2bf58:	andeq	ip, r2, ip, lsl #24
   2bf5c:	andeq	ip, r2, ip, lsl #24
   2bf60:	andeq	ip, r2, ip, lsl #24
   2bf64:	andeq	ip, r2, ip, lsl #24
   2bf68:	andeq	ip, r2, ip, lsl #24
   2bf6c:	andeq	fp, r2, ip, asr #12
   2bf70:	andeq	fp, r2, r8, ror r6
   2bf74:	andeq	ip, r2, ip, lsl #24
   2bf78:	andeq	ip, r2, ip, lsl #24
   2bf7c:	andeq	fp, r2, r8, lsr #13
   2bf80:	andeq	ip, r2, ip, lsl #24
   2bf84:	andeq	ip, r2, ip, lsl #24
   2bf88:	andeq	ip, r2, ip, lsl #24
   2bf8c:	andeq	ip, r2, ip, lsl #24
   2bf90:	andeq	ip, r2, ip, lsl #24
   2bf94:	andeq	ip, r2, ip, lsl #24
   2bf98:	andeq	ip, r2, ip, lsl #24
   2bf9c:	andeq	ip, r2, ip, lsl #24
   2bfa0:	andeq	ip, r2, ip, lsl #24
   2bfa4:	andeq	ip, r2, ip, lsl #24
   2bfa8:	andeq	ip, r2, ip, lsl #24
   2bfac:	andeq	ip, r2, ip, lsl #24
   2bfb0:	andeq	ip, r2, ip, lsl #24
   2bfb4:	andeq	ip, r2, ip, lsl #24
   2bfb8:	andeq	ip, r2, ip, lsl #24
   2bfbc:	andeq	ip, r2, ip, lsl #24
   2bfc0:	andeq	ip, r2, ip, lsl #24
   2bfc4:	andeq	ip, r2, ip, lsl #24
   2bfc8:	andeq	fp, r2, ip, asr #12
   2bfcc:	andeq	fp, r2, r0, asr #16
   2bfd0:	ldrdeq	fp, [r2], -r8
   2bfd4:	andeq	ip, r2, ip, lsl #24
   2bfd8:	andeq	ip, r2, ip, lsl #24
   2bfdc:	andeq	fp, r2, r0, asr #16
   2bfe0:	andeq	fp, r2, r8, lsl #18
   2bfe4:	andeq	ip, r2, ip, lsl #24
   2bfe8:	andeq	fp, r2, r4, lsr #16
   2bfec:	andeq	fp, r2, r4, lsr #16
   2bff0:	ldrdeq	fp, [r2], -r4
   2bff4:	andeq	fp, r2, ip, lsr #28
   2bff8:	andeq	fp, r2, r4, lsr #16
   2bffc:	andeq	fp, r2, r8, lsl #27
   2c000:	andeq	fp, r2, r8, lsr #29
   2c004:	strdeq	fp, [r2], -ip
   2c008:	andeq	ip, r2, r0, lsl #8
   2c00c:	andeq	ip, r2, r0, lsr #8
   2c010:	andeq	ip, r2, r0, lsr #8
   2c014:	andeq	ip, r2, r0, lsr #8
   2c018:	andeq	ip, r2, r0, lsr #8
   2c01c:	andeq	ip, r2, r0, lsr #8
   2c020:	andeq	ip, r2, r0, lsr #8
   2c024:	andeq	ip, r2, r0, lsr #8
   2c028:	andeq	ip, r2, r0, lsr #8
   2c02c:	andeq	ip, r2, r0, lsr #8
   2c030:	andeq	fp, r2, r4, lsr #20
   2c034:	andeq	fp, r2, r4, lsr #16
   2c038:	andeq	fp, r2, r8, asr #22
   2c03c:	andeq	fp, r2, ip, ror r9
   2c040:	andeq	fp, r2, ip, ror ip
   2c044:	andeq	fp, r2, r4, lsr #16
   2c048:	andeq	ip, r2, ip, lsl #24
   2c04c:	andeq	ip, r2, r4, asr #10
   2c050:	andeq	ip, r2, r4, asr #10
   2c054:	andeq	ip, r2, r4, asr #10
   2c058:	andeq	ip, r2, r4, asr #10
   2c05c:	andeq	ip, r2, r4, asr #10
   2c060:	andeq	ip, r2, r4, asr #10
   2c064:	andeq	ip, r2, r4, asr #10
   2c068:	andeq	ip, r2, r4, asr #10
   2c06c:	andeq	ip, r2, r4, asr #10
   2c070:	andeq	ip, r2, r4, asr #10
   2c074:	andeq	ip, r2, r4, asr #10
   2c078:	andeq	ip, r2, r4, asr #10
   2c07c:	andeq	ip, r2, r4, asr #10
   2c080:	andeq	ip, r2, r4, asr #10
   2c084:	andeq	ip, r2, r4, asr #10
   2c088:	andeq	ip, r2, r4, asr #10
   2c08c:	andeq	ip, r2, r4, asr #10
   2c090:	andeq	ip, r2, r4, asr #10
   2c094:	andeq	ip, r2, r4, asr #10
   2c098:	andeq	ip, r2, r4, asr #10
   2c09c:	andeq	ip, r2, r4, asr #10
   2c0a0:	andeq	ip, r2, r4, asr #10
   2c0a4:	andeq	ip, r2, r4, asr #10
   2c0a8:	andeq	ip, r2, r4, asr #10
   2c0ac:	andeq	ip, r2, r4, asr #10
   2c0b0:	andeq	ip, r2, r4, asr #10
   2c0b4:	andeq	fp, r2, r4, lsr #16
   2c0b8:	andeq	fp, r2, r4, lsr #16
   2c0bc:	andeq	fp, r2, r4, lsr #16
   2c0c0:	andeq	fp, r2, r0, asr #16
   2c0c4:	andeq	ip, r2, r4, asr #10
   2c0c8:	andeq	ip, r2, ip, lsl #24
   2c0cc:	andeq	ip, r2, r4, asr #10
   2c0d0:	andeq	ip, r2, r4, asr #10
   2c0d4:	andeq	ip, r2, r4, asr #10
   2c0d8:	andeq	ip, r2, r4, asr #10
   2c0dc:	andeq	ip, r2, r4, asr #10
   2c0e0:	andeq	ip, r2, r4, asr #10
   2c0e4:	andeq	ip, r2, r4, asr #10
   2c0e8:	andeq	ip, r2, r4, asr #10
   2c0ec:	andeq	ip, r2, r4, asr #10
   2c0f0:	andeq	ip, r2, r4, asr #10
   2c0f4:	andeq	ip, r2, r4, asr #10
   2c0f8:	andeq	ip, r2, r4, asr #10
   2c0fc:	andeq	ip, r2, r4, asr #10
   2c100:	andeq	ip, r2, r4, asr #10
   2c104:	andeq	ip, r2, r4, asr #10
   2c108:	andeq	ip, r2, r4, asr #10
   2c10c:	andeq	ip, r2, r4, asr #10
   2c110:	andeq	ip, r2, r4, asr #10
   2c114:	andeq	ip, r2, r4, asr #10
   2c118:	andeq	ip, r2, r4, asr #10
   2c11c:	andeq	ip, r2, r4, asr #10
   2c120:	andeq	ip, r2, r4, asr #10
   2c124:	andeq	ip, r2, r4, asr #10
   2c128:	andeq	ip, r2, r4, asr #10
   2c12c:	andeq	ip, r2, r4, asr #10
   2c130:	andeq	ip, r2, r4, asr #10
   2c134:	andeq	fp, r2, r4, lsr #16
   2c138:	muleq	r2, r0, r8
   2c13c:	andeq	fp, r2, r4, lsr #16
   2c140:	andeq	fp, r2, r0, asr #16
   2c144:	add	r5, r4, #2
   2c148:	cmp	r6, r5
   2c14c:	beq	2c15c <__flatcc_fb_parse@@Base+0xf90>
   2c150:	ldrb	r3, [r4, #2]
   2c154:	cmp	r3, #46	; 0x2e
   2c158:	beq	2c178 <__flatcc_fb_parse@@Base+0xfac>
   2c15c:	mov	r3, r5
   2c160:	mov	r2, r4
   2c164:	ldr	r1, [pc, #220]	; 2c248 <__flatcc_fb_parse@@Base+0x107c>
   2c168:	mov	r0, r9
   2c16c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2c170:	mov	r4, r5
   2c174:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2c178:	add	r5, r4, #3
   2c17c:	mov	r3, r5
   2c180:	mov	r2, r4
   2c184:	ldr	r1, [pc, #192]	; 2c24c <__flatcc_fb_parse@@Base+0x1080>
   2c188:	mov	r0, r9
   2c18c:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2c190:	mov	r4, r5
   2c194:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2c198:	mov	r3, r5
   2c19c:	mov	r2, r4
   2c1a0:	mov	r1, #46	; 0x2e
   2c1a4:	mov	r0, r9
   2c1a8:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2c1ac:	mov	r4, r5
   2c1b0:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2c1b4:	andeq	r2, r5, r0, asr #23
   2c1b8:			; <UNDEFINED> instruction: 0xfffffc2a
   2c1bc:	andeq	r2, r5, r8, asr #23
   2c1c0:	ldrbvs	r7, [r0, #-571]!	; 0xfffffdc5
   2c1c4:	strbtvc	r6, [lr], #-2355	; 0xfffff6cd
   2c1c8:	andeq	r2, r5, ip, ror ip
   2c1cc:	andeq	r2, r5, r4, ror #25
   2c1d0:			; <UNDEFINED> instruction: 0xfffffc3c
   2c1d4:	andeq	r3, r0, pc, lsr #26
   2c1d8:	andeq	r3, r0, ip, ror sp
   2c1dc:	andeq	r7, r0, ip, ror ip
   2c1e0:	andeq	r3, r0, r6, lsr #26
   2c1e4:	andeq	r2, r0, r6, lsr #12
   2c1e8:	andeq	r3, r0, sp, lsr lr
   2c1ec:	andeq	r3, r0, sp, lsr sp
   2c1f0:	eorseq	r3, sp, sp, lsr sp
   2c1f4:	andeq	r3, r0, sl, lsr sp
   2c1f8:	andeq	r3, r0, sl, lsr sl
   2c1fc:	eorseq	r3, sp, sl, lsr sl
   2c200:	andeq	r3, r0, sl, lsr #26
   2c204:	andeq	r2, r0, sl, lsr #20
   2c208:	andeq	r2, r0, ip, lsr sp
   2c20c:	andeq	r3, r0, ip, lsr sp
   2c210:	eorseq	r3, sp, ip, lsr ip
   2c214:	eorseq	r3, ip, ip, lsr ip
   2c218:	ldccc	12, cr3, [ip, #-240]!	; 0xffffff10
   2c21c:	andeq	r3, r0, ip, lsr ip
   2c220:	andeq	r3, r0, lr, lsr sp
   2c224:	andeq	r3, r0, lr, lsr lr
   2c228:	eorseq	r3, sp, lr, lsr lr
   2c22c:	eorseq	r3, lr, lr, lsr lr
   2c230:	ldccc	14, cr3, [lr, #-248]!	; 0xffffff08
   2c234:	andeq	r3, r0, sp, lsr #26
   2c238:	andeq	r2, r0, sp, lsr #26
   2c23c:	andeq	r3, r0, sp, lsr #28
   2c240:	andeq	r3, r0, fp, lsr #26
   2c244:	andeq	r2, r0, fp, lsr #22
   2c248:	andeq	r2, r0, lr, lsr #28
   2c24c:	eoreq	r2, lr, lr, lsr #28
   2c250:	andeq	r2, r5, r0, lsr r4
   2c254:	stmdacc	r9!, {r0, r2, r4, r5, r8, sl, ip, sp, lr}^
   2c258:	rsbcc	r6, ip, #57671680	; 0x3700000
   2c25c:	rsbcc	r6, lr, #868352	; 0xd4000
   2c260:	rsbcc	r7, r9, #226492416	; 0xd800000
   2c264:	strbtcc	r6, [lr], #-2357	; 0xfffff6cb
   2c268:	strbtcc	r6, [ip], #-1591	; 0xfffff9c9
   2c26c:	andeq	r2, r5, ip, lsl ip
   2c270:			; <UNDEFINED> instruction: 0xfffffc1d
   2c274:			; <UNDEFINED> instruction: 0x36697536
   2c278:			; <UNDEFINED> instruction: 0x366e6935
   2c27c:	andeq	fp, r3, r4, ror sp
   2c280:			; <UNDEFINED> instruction: 0xfffffc20
   2c284:	strbvs	r7, [r1, #-1077]!	; 0xfffffbcb
   2c288:	strbvs	r6, [lr, #-2359]!	; 0xfffff6c9
   2c28c:	strbvs	r7, [r2, #-1333]!	; 0xfffffacb
   2c290:	andeq	r2, r5, r8, asr #23
   2c294:			; <UNDEFINED> instruction: 0xfffffc2a
   2c298:	stmdacc	lr!, {r2, r4, r5, r8, fp, sp, lr}^
   2c29c:	andeq	fp, r3, ip, ror sp
   2c2a0:	strbvs	r6, [pc, #-1078]!	; 2be72 <__flatcc_fb_parse@@Base+0xca6>
   2c2a4:	andeq	r2, r5, r4, asr #24
   2c2a8:			; <UNDEFINED> instruction: 0xfffffc38
   2c2ac:	mcrvs	6, 3, r6, cr9, cr14, {1}
   2c2b0:			; <UNDEFINED> instruction: 0x676c7535
   2c2b4:	ldrbvs	r6, [r4, #-313]!	; 0xfffffec7
   2c2b8:	ldrbvs	r7, [r2, #-1076]!	; 0xfffffbcc
   2c2bc:	andeq	r3, r5, ip, lsl #22
   2c2c0:			; <UNDEFINED> instruction: 0xfffffc24
   2c2c4:			; <UNDEFINED> instruction: 0x67747336
   2c2c8:			; <UNDEFINED> instruction: 0x676f6c34
   2c2cc:	ldrdeq	r2, [r5], -ip
   2c2d0:	sfmvs	f6, 2, [pc], #-208	; 2c208 <__flatcc_fb_parse@@Base+0x103c>
   2c2d4:	andeq	fp, r3, ip, lsr #18
   2c2d8:	strbtvc	r7, [r9], #-1332	; 0xfffffacc
   2c2dc:	strbtvc	r6, [ip], #-1589	; 0xfffff9cb
   2c2e0:	andeq	fp, r3, ip, lsl r9
   2c2e4:	rsbvc	r6, r9, #66060288	; 0x3f00000
   2c2e8:	strbtvc	r7, [r8], #-821	; 0xfffffccb
   2c2ec:	mcrvs	5, 3, r7, cr14, cr5, {1}
   2c2f0:	strdeq	r2, [r5], -ip
   2c2f4:			; <UNDEFINED> instruction: 0xfffffc30
   2c2f8:	ldrbtvc	r7, [r3], #-1334	; 0xfffffaca
   2c2fc:	andeq	r3, r5, r8, lsr #20
   2c300:	ldrdeq	r2, [r5], -r0
   2c304:			; <UNDEFINED> instruction: 0xfffffc1e
   2c308:	andeq	r3, r5, r0, ror #17
   2c30c:			; <UNDEFINED> instruction: 0xfffffc19
   2c310:	ldrdeq	r2, [r5], -r4
   2c314:			; <UNDEFINED> instruction: 0xfffffc1a
   2c318:	andeq	r2, r5, r4, ror #23
   2c31c:			; <UNDEFINED> instruction: 0xfffffc25
   2c320:	andeq	r2, r5, ip, ror #23
   2c324:			; <UNDEFINED> instruction: 0xfffffc26
   2c328:	andeq	fp, r3, ip, ror #26
   2c32c:			; <UNDEFINED> instruction: 0xfffffc21
   2c330:	andeq	fp, r3, r4, ror #26
   2c334:			; <UNDEFINED> instruction: 0xfffffc22
   2c338:	strdeq	r4, [r5], -r8
   2c33c:			; <UNDEFINED> instruction: 0xfffffc29
   2c340:	andeq	fp, r3, ip, asr sp
   2c344:	strdeq	r2, [r5], -r4
   2c348:	andeq	r2, r5, r4, lsl #24
   2c34c:			; <UNDEFINED> instruction: 0xfffffc28
   2c350:	andeq	fp, r3, r4, lsr #18
   2c354:			; <UNDEFINED> instruction: 0xfffffc31
   2c358:	andeq	r2, r5, r0, lsr #15
   2c35c:			; <UNDEFINED> instruction: 0xfffffc32
   2c360:	andeq	fp, r3, ip, asr #26
   2c364:			; <UNDEFINED> instruction: 0xfffffc2d
   2c368:	andeq	fp, r3, r4, asr sp
   2c36c:			; <UNDEFINED> instruction: 0xfffffc2c
   2c370:	andeq	fp, r3, r4, asr #26
   2c374:			; <UNDEFINED> instruction: 0xfffffc2e
   2c378:	andeq	r2, r5, ip, lsl #24
   2c37c:			; <UNDEFINED> instruction: 0xfffffc34
   2c380:	andeq	r2, r5, r4, lsl ip
   2c384:			; <UNDEFINED> instruction: 0xfffffc1c
   2c388:	andeq	r2, r5, r4, lsr #24
   2c38c:			; <UNDEFINED> instruction: 0xfffffc35
   2c390:	andeq	r2, r5, ip, lsr #24
   2c394:	andeq	r2, r5, r8, lsr ip
   2c398:	andeq	r2, r5, r0, asr ip
   2c39c:			; <UNDEFINED> instruction: 0xfffffc39
   2c3a0:	andeq	r2, r5, ip, asr ip
   2c3a4:	andeq	r2, r5, ip, ror #24
   2c3a8:			; <UNDEFINED> instruction: 0x00052cb4
   2c3ac:			; <UNDEFINED> instruction: 0xfffffc36
   2c3b0:	andeq	r3, r5, r4, asr r0
   2c3b4:			; <UNDEFINED> instruction: 0xfffffc3a
   2c3b8:	strdeq	r2, [r5], -r0
   2c3bc:	andeq	r2, r5, r8, asr r7
   2c3c0:	andeq	r3, r5, r4, lsr #2
   2c3c4:	andeq	r2, r5, r4, lsl #26
   2c3c8:	andeq	r2, r5, r4, lsr #26
   2c3cc:	andeq	r2, r5, ip, asr #26
   2c3d0:	andeq	r2, r5, r8, ror #26
   2c3d4:	muleq	r5, r0, sp
   2c3d8:	andeq	r2, r5, ip, lsr #27
   2c3dc:	andeq	r2, r5, r8, asr #27
   2c3e0:	andeq	r2, r5, r8, lsl lr
   2c3e4:	andeq	r2, r5, r8, lsr lr
   2c3e8:	andeq	r2, r5, r0, asr lr
   2c3ec:	andeq	r3, r5, ip, ror #2
   2c3f0:	andeq	r6, r6, r8, lsr #1
   2c3f4:	muleq	r3, r4, r3
   2c3f8:	andeq	r2, r5, r8, ror lr
   2c3fc:	muleq	r5, ip, lr
   2c400:	add	r3, r4, #1
   2c404:	cmp	r6, r3
   2c408:	beq	2c420 <__flatcc_fb_parse@@Base+0x1254>
   2c40c:	ldrb	r3, [r4, #1]
   2c410:	cmp	r3, #88	; 0x58
   2c414:	beq	2c44c <__flatcc_fb_parse@@Base+0x1280>
   2c418:	cmp	r3, #120	; 0x78
   2c41c:	beq	2c44c <__flatcc_fb_parse@@Base+0x1280>
   2c420:	add	r2, r4, #1
   2c424:	mov	r5, r2
   2c428:	cmp	r2, #0
   2c42c:	beq	2c4a4 <__flatcc_fb_parse@@Base+0x12d8>
   2c430:	add	r2, r2, #1
   2c434:	ldrb	r3, [r5]
   2c438:	sub	r3, r3, #48	; 0x30
   2c43c:	uxtb	r3, r3
   2c440:	cmp	r3, #9
   2c444:	bls	2c424 <__flatcc_fb_parse@@Base+0x1258>
   2c448:	b	2c4a8 <__flatcc_fb_parse@@Base+0x12dc>
   2c44c:	add	r2, r4, #2
   2c450:	mov	r0, r6
   2c454:	mov	r5, r2
   2c458:	cmp	r0, r2
   2c45c:	beq	2c488 <__flatcc_fb_parse@@Base+0x12bc>
   2c460:	ldrb	r3, [r2], #1
   2c464:	sub	r1, r3, #48	; 0x30
   2c468:	uxtb	r1, r1
   2c46c:	cmp	r1, #9
   2c470:	bls	2c454 <__flatcc_fb_parse@@Base+0x1288>
   2c474:	orr	r3, r3, #32
   2c478:	sub	r3, r3, #97	; 0x61
   2c47c:	uxtb	r3, r3
   2c480:	cmp	r3, #5
   2c484:	bls	2c454 <__flatcc_fb_parse@@Base+0x1288>
   2c488:	mov	r3, r5
   2c48c:	mov	r2, r4
   2c490:	mov	r1, #14
   2c494:	mov	r0, r9
   2c498:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2c49c:	mov	r4, r5
   2c4a0:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2c4a4:	mov	r5, #0
   2c4a8:	ldrb	r3, [r5]
   2c4ac:	cmp	r3, #46	; 0x2e
   2c4b0:	moveq	r1, r5
   2c4b4:	beq	2bed4 <__flatcc_fb_parse@@Base+0xd08>
   2c4b8:	cmp	r6, r5
   2c4bc:	beq	2c528 <__flatcc_fb_parse@@Base+0x135c>
   2c4c0:	ldrb	r3, [r5]
   2c4c4:	and	r3, r3, #223	; 0xdf
   2c4c8:	cmp	r3, #69	; 0x45
   2c4cc:	moveq	r1, r5
   2c4d0:	bne	2c528 <__flatcc_fb_parse@@Base+0x135c>
   2c4d4:	add	r2, r5, #1
   2c4d8:	cmp	r6, r2
   2c4dc:	beq	2c4f4 <__flatcc_fb_parse@@Base+0x1328>
   2c4e0:	ldrb	r3, [r5, #1]
   2c4e4:	sub	r3, r3, #43	; 0x2b
   2c4e8:	and	r3, r3, #253	; 0xfd
   2c4ec:	cmp	r3, #0
   2c4f0:	movne	r2, r5
   2c4f4:	add	r2, r2, #1
   2c4f8:	mov	r0, r6
   2c4fc:	mov	r5, r2
   2c500:	cmp	r0, r2
   2c504:	beq	2bf10 <__flatcc_fb_parse@@Base+0xd44>
   2c508:	add	r2, r2, #1
   2c50c:	ldrb	r3, [r5]
   2c510:	sub	r3, r3, #48	; 0x30
   2c514:	uxtb	r3, r3
   2c518:	cmp	r3, #9
   2c51c:	bls	2c4fc <__flatcc_fb_parse@@Base+0x1330>
   2c520:	b	2bf10 <__flatcc_fb_parse@@Base+0xd44>
   2c524:	mov	r5, r1
   2c528:	mov	r3, r5
   2c52c:	mov	r2, r4
   2c530:	mov	r1, #10
   2c534:	mov	r0, r9
   2c538:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2c53c:	mov	r4, r5
   2c540:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2c544:	lsl	r1, r1, #8
   2c548:	add	r5, r4, #1
   2c54c:	cmp	r6, r5
   2c550:	beq	2c5a0 <__flatcc_fb_parse@@Base+0x13d4>
   2c554:	ldrb	r2, [r4, #1]
   2c558:	ldr	r3, [pc, #-784]	; 2c250 <__flatcc_fb_parse@@Base+0x1084>
   2c55c:	add	r3, r3, r2
   2c560:	ldrb	r3, [r3, #40]	; 0x28
   2c564:	cmp	r3, #0
   2c568:	beq	2c5a0 <__flatcc_fb_parse@@Base+0x13d4>
   2c56c:	orr	r1, r1, r2, lsl #16
   2c570:	add	r3, r4, #2
   2c574:	mov	ip, r6
   2c578:	ldr	r0, [pc, #-816]	; 2c250 <__flatcc_fb_parse@@Base+0x1084>
   2c57c:	mov	r5, r3
   2c580:	cmp	ip, r3
   2c584:	beq	2c5a0 <__flatcc_fb_parse@@Base+0x13d4>
   2c588:	add	r3, r3, #1
   2c58c:	ldrb	r2, [r5]
   2c590:	add	r2, r0, r2
   2c594:	ldrb	r2, [r2, #40]	; 0x28
   2c598:	cmp	r2, #0
   2c59c:	bne	2c57c <__flatcc_fb_parse@@Base+0x13b0>
   2c5a0:	ldrb	r3, [r5, #-1]
   2c5a4:	orr	r1, r1, r3, lsl #24
   2c5a8:	sub	r3, r5, r4
   2c5ac:	uxtb	r3, r3
   2c5b0:	add	r3, r3, #48	; 0x30
   2c5b4:	orr	r1, r3, r1
   2c5b8:	cmp	r1, sl
   2c5bc:	beq	2cbac <__flatcc_fb_parse@@Base+0x19e0>
   2c5c0:	bhi	2c754 <__flatcc_fb_parse@@Base+0x1588>
   2c5c4:	ldr	r3, [pc, #-888]	; 2c254 <__flatcc_fb_parse@@Base+0x1088>
   2c5c8:	cmp	r1, r3
   2c5cc:	beq	2ca0c <__flatcc_fb_parse@@Base+0x1840>
   2c5d0:	bhi	2c684 <__flatcc_fb_parse@@Base+0x14b8>
   2c5d4:	add	r3, r3, #-67108863	; 0xfc000001
   2c5d8:	cmp	r1, r3
   2c5dc:	beq	2caec <__flatcc_fb_parse@@Base+0x1920>
   2c5e0:	bhi	2c610 <__flatcc_fb_parse@@Base+0x1444>
   2c5e4:	ldr	r3, [pc, #-916]	; 2c258 <__flatcc_fb_parse@@Base+0x108c>
   2c5e8:	cmp	r1, r3
   2c5ec:	beq	2cb2c <__flatcc_fb_parse@@Base+0x1960>
   2c5f0:	ldr	r3, [pc, #-924]	; 2c25c <__flatcc_fb_parse@@Base+0x1090>
   2c5f4:	cmp	r1, r3
   2c5f8:	beq	2c9ac <__flatcc_fb_parse@@Base+0x17e0>
   2c5fc:	ldr	r3, [pc, #-932]	; 2c260 <__flatcc_fb_parse@@Base+0x1094>
   2c600:	cmp	r1, r3
   2c604:	beq	2caac <__flatcc_fb_parse@@Base+0x18e0>
   2c608:	mov	r1, #9
   2c60c:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c610:	ldr	r3, [pc, #-948]	; 2c264 <__flatcc_fb_parse@@Base+0x1098>
   2c614:	cmp	r1, r3
   2c618:	beq	2c9cc <__flatcc_fb_parse@@Base+0x1800>
   2c61c:	bhi	2c64c <__flatcc_fb_parse@@Base+0x1480>
   2c620:	ldr	r3, [pc, #-960]	; 2c268 <__flatcc_fb_parse@@Base+0x109c>
   2c624:	cmp	r1, r3
   2c628:	bne	2c608 <__flatcc_fb_parse@@Base+0x143c>
   2c62c:	mov	r2, #7
   2c630:	mov	r1, r4
   2c634:	ldr	r0, [pc, #-976]	; 2c26c <__flatcc_fb_parse@@Base+0x10a0>
   2c638:	bl	13ef4 <memcmp@plt>
   2c63c:	ldr	r1, [pc, #-980]	; 2c270 <__flatcc_fb_parse@@Base+0x10a4>
   2c640:	cmp	r0, #0
   2c644:	movne	r1, #9
   2c648:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c64c:	ldr	r3, [pc, #-992]	; 2c274 <__flatcc_fb_parse@@Base+0x10a8>
   2c650:	cmp	r1, r3
   2c654:	beq	2cacc <__flatcc_fb_parse@@Base+0x1900>
   2c658:	ldr	r3, [pc, #-1000]	; 2c278 <__flatcc_fb_parse@@Base+0x10ac>
   2c65c:	cmp	r1, r3
   2c660:	bne	2c608 <__flatcc_fb_parse@@Base+0x143c>
   2c664:	mov	r2, #5
   2c668:	mov	r1, r4
   2c66c:	ldr	r0, [pc, #-1016]	; 2c27c <__flatcc_fb_parse@@Base+0x10b0>
   2c670:	bl	13ef4 <memcmp@plt>
   2c674:	ldr	r1, [pc, #-1020]	; 2c280 <__flatcc_fb_parse@@Base+0x10b4>
   2c678:	cmp	r0, #0
   2c67c:	movne	r1, #9
   2c680:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c684:	ldr	r3, [pc, #-1032]	; 2c284 <__flatcc_fb_parse@@Base+0x10b8>
   2c688:	cmp	r1, r3
   2c68c:	beq	2c9ec <__flatcc_fb_parse@@Base+0x1820>
   2c690:	bls	2c6d0 <__flatcc_fb_parse@@Base+0x1504>
   2c694:	ldr	r3, [pc, #-1044]	; 2c288 <__flatcc_fb_parse@@Base+0x10bc>
   2c698:	cmp	r1, r3
   2c69c:	beq	2cb4c <__flatcc_fb_parse@@Base+0x1980>
   2c6a0:	bhi	2c718 <__flatcc_fb_parse@@Base+0x154c>
   2c6a4:	ldr	r3, [pc, #-1056]	; 2c28c <__flatcc_fb_parse@@Base+0x10c0>
   2c6a8:	cmp	r1, r3
   2c6ac:	bne	2c608 <__flatcc_fb_parse@@Base+0x143c>
   2c6b0:	mov	r2, #5
   2c6b4:	mov	r1, r4
   2c6b8:	ldr	r0, [pc, #-1072]	; 2c290 <__flatcc_fb_parse@@Base+0x10c4>
   2c6bc:	bl	13ef4 <memcmp@plt>
   2c6c0:	ldr	r1, [pc, #-1076]	; 2c294 <__flatcc_fb_parse@@Base+0x10c8>
   2c6c4:	cmp	r0, #0
   2c6c8:	movne	r1, #9
   2c6cc:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c6d0:	sub	r3, r3, #3584	; 0xe00
   2c6d4:	cmp	r1, r3
   2c6d8:	beq	2c98c <__flatcc_fb_parse@@Base+0x17c0>
   2c6dc:	add	r3, r3, #2048	; 0x800
   2c6e0:	add	r3, r3, #4
   2c6e4:	cmp	r1, r3
   2c6e8:	beq	2cb8c <__flatcc_fb_parse@@Base+0x19c0>
   2c6ec:	ldr	r3, [pc, #-1116]	; 2c298 <__flatcc_fb_parse@@Base+0x10cc>
   2c6f0:	cmp	r1, r3
   2c6f4:	bne	2c608 <__flatcc_fb_parse@@Base+0x143c>
   2c6f8:	mov	r2, #4
   2c6fc:	mov	r1, r4
   2c700:	ldr	r0, [pc, #-1132]	; 2c29c <__flatcc_fb_parse@@Base+0x10d0>
   2c704:	bl	13ef4 <memcmp@plt>
   2c708:	cmp	r0, #0
   2c70c:	movne	r1, #9
   2c710:	mvneq	r1, #992	; 0x3e0
   2c714:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c718:	ldr	r3, [pc, #-1152]	; 2c2a0 <__flatcc_fb_parse@@Base+0x10d4>
   2c71c:	cmp	r1, r3
   2c720:	beq	2ca6c <__flatcc_fb_parse@@Base+0x18a0>
   2c724:	add	r3, r3, #3584	; 0xe00
   2c728:	add	r3, r3, #3
   2c72c:	cmp	r1, r3
   2c730:	bne	2c608 <__flatcc_fb_parse@@Base+0x143c>
   2c734:	mov	r2, #9
   2c738:	mov	r1, r4
   2c73c:	ldr	r0, [pc, #-1184]	; 2c2a4 <__flatcc_fb_parse@@Base+0x10d8>
   2c740:	bl	13ef4 <memcmp@plt>
   2c744:	ldr	r1, [pc, #-1188]	; 2c2a8 <__flatcc_fb_parse@@Base+0x10dc>
   2c748:	cmp	r0, #0
   2c74c:	movne	r1, #9
   2c750:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c754:	ldr	r3, [pc, #-1200]	; 2c2ac <__flatcc_fb_parse@@Base+0x10e0>
   2c758:	cmp	r1, r3
   2c75c:	beq	2cbcc <__flatcc_fb_parse@@Base+0x1a00>
   2c760:	bhi	2c834 <__flatcc_fb_parse@@Base+0x1668>
   2c764:	ldr	r3, [pc, #-1212]	; 2c2b0 <__flatcc_fb_parse@@Base+0x10e4>
   2c768:	cmp	r1, r3
   2c76c:	beq	2ca2c <__flatcc_fb_parse@@Base+0x1860>
   2c770:	bhi	2c7bc <__flatcc_fb_parse@@Base+0x15f0>
   2c774:	ldr	r3, [pc, #-1224]	; 2c2b4 <__flatcc_fb_parse@@Base+0x10e8>
   2c778:	cmp	r1, r3
   2c77c:	beq	2cb6c <__flatcc_fb_parse@@Base+0x19a0>
   2c780:	add	r3, r3, #327680	; 0x50000
   2c784:	add	r3, r3, #251	; 0xfb
   2c788:	cmp	r1, r3
   2c78c:	beq	2c94c <__flatcc_fb_parse@@Base+0x1780>
   2c790:	ldr	r3, [pc, #-1248]	; 2c2b8 <__flatcc_fb_parse@@Base+0x10ec>
   2c794:	cmp	r1, r3
   2c798:	bne	2c608 <__flatcc_fb_parse@@Base+0x143c>
   2c79c:	mov	r2, #4
   2c7a0:	mov	r1, r4
   2c7a4:	ldr	r0, [pc, #-1264]	; 2c2bc <__flatcc_fb_parse@@Base+0x10f0>
   2c7a8:	bl	13ef4 <memcmp@plt>
   2c7ac:	ldr	r1, [pc, #-1268]	; 2c2c0 <__flatcc_fb_parse@@Base+0x10f4>
   2c7b0:	cmp	r0, #0
   2c7b4:	movne	r1, #9
   2c7b8:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c7bc:	ldr	r3, [pc, #-1280]	; 2c2c4 <__flatcc_fb_parse@@Base+0x10f8>
   2c7c0:	cmp	r1, r3
   2c7c4:	beq	2ca8c <__flatcc_fb_parse@@Base+0x18c0>
   2c7c8:	bhi	2c7f8 <__flatcc_fb_parse@@Base+0x162c>
   2c7cc:	ldr	r3, [pc, #-1292]	; 2c2c8 <__flatcc_fb_parse@@Base+0x10fc>
   2c7d0:	cmp	r1, r3
   2c7d4:	bne	2c608 <__flatcc_fb_parse@@Base+0x143c>
   2c7d8:	mov	r2, #4
   2c7dc:	mov	r1, r4
   2c7e0:	ldr	r0, [pc, #-1308]	; 2c2cc <__flatcc_fb_parse@@Base+0x1100>
   2c7e4:	bl	13ef4 <memcmp@plt>
   2c7e8:	cmp	r0, #0
   2c7ec:	movne	r1, #9
   2c7f0:	mvneq	r1, #988	; 0x3dc
   2c7f4:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c7f8:	ldr	r3, [pc, #-1328]	; 2c2d0 <__flatcc_fb_parse@@Base+0x1104>
   2c7fc:	cmp	r1, r3
   2c800:	beq	2c92c <__flatcc_fb_parse@@Base+0x1760>
   2c804:	add	r3, r3, #16711680	; 0xff0000
   2c808:	add	r3, r3, #768	; 0x300
   2c80c:	cmp	r1, r3
   2c810:	bne	2c608 <__flatcc_fb_parse@@Base+0x143c>
   2c814:	mov	r2, #4
   2c818:	mov	r1, r4
   2c81c:	ldr	r0, [pc, #-1360]	; 2c2d4 <__flatcc_fb_parse@@Base+0x1108>
   2c820:	bl	13ef4 <memcmp@plt>
   2c824:	cmp	r0, #0
   2c828:	movne	r1, #9
   2c82c:	mvneq	r1, #996	; 0x3e4
   2c830:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c834:	ldr	r3, [pc, #-1380]	; 2c2d8 <__flatcc_fb_parse@@Base+0x110c>
   2c838:	cmp	r1, r3
   2c83c:	beq	2c96c <__flatcc_fb_parse@@Base+0x17a0>
   2c840:	bls	2c87c <__flatcc_fb_parse@@Base+0x16b0>
   2c844:	cmp	r1, fp
   2c848:	beq	2c8f8 <__flatcc_fb_parse@@Base+0x172c>
   2c84c:	bhi	2c8c0 <__flatcc_fb_parse@@Base+0x16f4>
   2c850:	ldr	r3, [pc, #-1404]	; 2c2dc <__flatcc_fb_parse@@Base+0x1110>
   2c854:	cmp	r1, r3
   2c858:	bne	2c608 <__flatcc_fb_parse@@Base+0x143c>
   2c85c:	mov	r2, #5
   2c860:	mov	r1, r4
   2c864:	ldr	r0, [pc, #-1420]	; 2c2e0 <__flatcc_fb_parse@@Base+0x1114>
   2c868:	bl	13ef4 <memcmp@plt>
   2c86c:	cmp	r0, #0
   2c870:	movne	r1, #9
   2c874:	mvneq	r1, #984	; 0x3d8
   2c878:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c87c:	ldr	r3, [pc, #-1440]	; 2c2e4 <__flatcc_fb_parse@@Base+0x1118>
   2c880:	cmp	r1, r3
   2c884:	beq	2cbec <__flatcc_fb_parse@@Base+0x1a20>
   2c888:	ldr	r3, [pc, #-1448]	; 2c2e8 <__flatcc_fb_parse@@Base+0x111c>
   2c88c:	cmp	r1, r3
   2c890:	beq	2ca4c <__flatcc_fb_parse@@Base+0x1880>
   2c894:	ldr	r3, [pc, #-1456]	; 2c2ec <__flatcc_fb_parse@@Base+0x1120>
   2c898:	cmp	r1, r3
   2c89c:	bne	2c608 <__flatcc_fb_parse@@Base+0x143c>
   2c8a0:	mov	r2, #5
   2c8a4:	mov	r1, r4
   2c8a8:	ldr	r0, [pc, #-1472]	; 2c2f0 <__flatcc_fb_parse@@Base+0x1124>
   2c8ac:	bl	13ef4 <memcmp@plt>
   2c8b0:	ldr	r1, [pc, #-1476]	; 2c2f4 <__flatcc_fb_parse@@Base+0x1128>
   2c8b4:	cmp	r0, #0
   2c8b8:	movne	r1, #9
   2c8bc:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c8c0:	ldr	r3, [pc, #-1488]	; 2c2f8 <__flatcc_fb_parse@@Base+0x112c>
   2c8c4:	cmp	r1, r3
   2c8c8:	beq	2cb0c <__flatcc_fb_parse@@Base+0x1940>
   2c8cc:	add	r3, r3, #65024	; 0xfe00
   2c8d0:	cmp	r1, r3
   2c8d4:	bne	2c608 <__flatcc_fb_parse@@Base+0x143c>
   2c8d8:	mov	r2, #6
   2c8dc:	mov	r1, r4
   2c8e0:	ldr	r0, [pc, #-1516]	; 2c2fc <__flatcc_fb_parse@@Base+0x1130>
   2c8e4:	bl	13ef4 <memcmp@plt>
   2c8e8:	cmp	r0, #0
   2c8ec:	movne	r1, #9
   2c8f0:	mvneq	r1, #972	; 0x3cc
   2c8f4:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c8f8:	mov	r2, #3
   2c8fc:	mov	r1, r4
   2c900:	ldr	r0, [pc, #-1544]	; 2c300 <__flatcc_fb_parse@@Base+0x1134>
   2c904:	bl	13ef4 <memcmp@plt>
   2c908:	ldr	r1, [pc, #-1548]	; 2c304 <__flatcc_fb_parse@@Base+0x1138>
   2c90c:	cmp	r0, #0
   2c910:	movne	r1, #9
   2c914:	mov	r3, r5
   2c918:	mov	r2, r4
   2c91c:	mov	r0, r9
   2c920:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2c924:	mov	r4, r5
   2c928:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2c92c:	mov	r2, #4
   2c930:	mov	r1, r4
   2c934:	ldr	r0, [pc, #-1588]	; 2c308 <__flatcc_fb_parse@@Base+0x113c>
   2c938:	bl	13ef4 <memcmp@plt>
   2c93c:	ldr	r1, [pc, #-1592]	; 2c30c <__flatcc_fb_parse@@Base+0x1140>
   2c940:	cmp	r0, #0
   2c944:	movne	r1, #9
   2c948:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c94c:	mov	r2, #4
   2c950:	mov	r1, r4
   2c954:	ldr	r0, [pc, #-1612]	; 2c310 <__flatcc_fb_parse@@Base+0x1144>
   2c958:	bl	13ef4 <memcmp@plt>
   2c95c:	ldr	r1, [pc, #-1616]	; 2c314 <__flatcc_fb_parse@@Base+0x1148>
   2c960:	cmp	r0, #0
   2c964:	movne	r1, #9
   2c968:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c96c:	mov	r2, #4
   2c970:	mov	r1, r4
   2c974:	ldr	r0, [pc, #-1636]	; 2c318 <__flatcc_fb_parse@@Base+0x114c>
   2c978:	bl	13ef4 <memcmp@plt>
   2c97c:	ldr	r1, [pc, #-1640]	; 2c31c <__flatcc_fb_parse@@Base+0x1150>
   2c980:	cmp	r0, #0
   2c984:	movne	r1, #9
   2c988:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c98c:	mov	r2, #5
   2c990:	mov	r1, r4
   2c994:	ldr	r0, [pc, #-1660]	; 2c320 <__flatcc_fb_parse@@Base+0x1154>
   2c998:	bl	13ef4 <memcmp@plt>
   2c99c:	ldr	r1, [pc, #-1664]	; 2c324 <__flatcc_fb_parse@@Base+0x1158>
   2c9a0:	cmp	r0, #0
   2c9a4:	movne	r1, #9
   2c9a8:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c9ac:	mov	r2, #5
   2c9b0:	mov	r1, r4
   2c9b4:	ldr	r0, [pc, #-1684]	; 2c328 <__flatcc_fb_parse@@Base+0x115c>
   2c9b8:	bl	13ef4 <memcmp@plt>
   2c9bc:	ldr	r1, [pc, #-1688]	; 2c32c <__flatcc_fb_parse@@Base+0x1160>
   2c9c0:	cmp	r0, #0
   2c9c4:	movne	r1, #9
   2c9c8:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c9cc:	mov	r2, #5
   2c9d0:	mov	r1, r4
   2c9d4:	ldr	r0, [pc, #-1708]	; 2c330 <__flatcc_fb_parse@@Base+0x1164>
   2c9d8:	bl	13ef4 <memcmp@plt>
   2c9dc:	ldr	r1, [pc, #-1712]	; 2c334 <__flatcc_fb_parse@@Base+0x1168>
   2c9e0:	cmp	r0, #0
   2c9e4:	movne	r1, #9
   2c9e8:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2c9ec:	mov	r2, #5
   2c9f0:	mov	r1, r4
   2c9f4:	ldr	r0, [pc, #-1732]	; 2c338 <__flatcc_fb_parse@@Base+0x116c>
   2c9f8:	bl	13ef4 <memcmp@plt>
   2c9fc:	ldr	r1, [pc, #-1736]	; 2c33c <__flatcc_fb_parse@@Base+0x1170>
   2ca00:	cmp	r0, #0
   2ca04:	movne	r1, #9
   2ca08:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2ca0c:	mov	r2, #5
   2ca10:	mov	r1, r4
   2ca14:	ldr	r0, [pc, #-1756]	; 2c340 <__flatcc_fb_parse@@Base+0x1174>
   2ca18:	bl	13ef4 <memcmp@plt>
   2ca1c:	cmp	r0, #0
   2ca20:	movne	r1, #9
   2ca24:	mvneq	r1, #980	; 0x3d4
   2ca28:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2ca2c:	mov	r2, #5
   2ca30:	mov	r1, r4
   2ca34:	ldr	r0, [pc, #-1784]	; 2c344 <__flatcc_fb_parse@@Base+0x1178>
   2ca38:	bl	13ef4 <memcmp@plt>
   2ca3c:	cmp	r0, #0
   2ca40:	movne	r1, #9
   2ca44:	mvneq	r1, #976	; 0x3d0
   2ca48:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2ca4c:	mov	r2, #5
   2ca50:	mov	r1, r4
   2ca54:	ldr	r0, [pc, #-1812]	; 2c348 <__flatcc_fb_parse@@Base+0x117c>
   2ca58:	bl	13ef4 <memcmp@plt>
   2ca5c:	ldr	r1, [pc, #-1816]	; 2c34c <__flatcc_fb_parse@@Base+0x1180>
   2ca60:	cmp	r0, #0
   2ca64:	movne	r1, #9
   2ca68:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2ca6c:	mov	r2, #6
   2ca70:	mov	r1, r4
   2ca74:	ldr	r0, [pc, #-1836]	; 2c350 <__flatcc_fb_parse@@Base+0x1184>
   2ca78:	bl	13ef4 <memcmp@plt>
   2ca7c:	ldr	r1, [pc, #-1840]	; 2c354 <__flatcc_fb_parse@@Base+0x1188>
   2ca80:	cmp	r0, #0
   2ca84:	movne	r1, #9
   2ca88:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2ca8c:	mov	r2, #6
   2ca90:	mov	r1, r4
   2ca94:	ldr	r0, [pc, #-1860]	; 2c358 <__flatcc_fb_parse@@Base+0x118c>
   2ca98:	bl	13ef4 <memcmp@plt>
   2ca9c:	ldr	r1, [pc, #-1864]	; 2c35c <__flatcc_fb_parse@@Base+0x1190>
   2caa0:	cmp	r0, #0
   2caa4:	movne	r1, #9
   2caa8:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2caac:	mov	r2, #6
   2cab0:	mov	r1, r4
   2cab4:	ldr	r0, [pc, #-1884]	; 2c360 <__flatcc_fb_parse@@Base+0x1194>
   2cab8:	bl	13ef4 <memcmp@plt>
   2cabc:	ldr	r1, [pc, #-1888]	; 2c364 <__flatcc_fb_parse@@Base+0x1198>
   2cac0:	cmp	r0, #0
   2cac4:	movne	r1, #9
   2cac8:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2cacc:	mov	r2, #6
   2cad0:	mov	r1, r4
   2cad4:	ldr	r0, [pc, #-1908]	; 2c368 <__flatcc_fb_parse@@Base+0x119c>
   2cad8:	bl	13ef4 <memcmp@plt>
   2cadc:	ldr	r1, [pc, #-1912]	; 2c36c <__flatcc_fb_parse@@Base+0x11a0>
   2cae0:	cmp	r0, #0
   2cae4:	movne	r1, #9
   2cae8:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2caec:	mov	r2, #6
   2caf0:	mov	r1, r4
   2caf4:	ldr	r0, [pc, #-1932]	; 2c370 <__flatcc_fb_parse@@Base+0x11a4>
   2caf8:	bl	13ef4 <memcmp@plt>
   2cafc:	ldr	r1, [pc, #-1936]	; 2c374 <__flatcc_fb_parse@@Base+0x11a8>
   2cb00:	cmp	r0, #0
   2cb04:	movne	r1, #9
   2cb08:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2cb0c:	mov	r2, #6
   2cb10:	mov	r1, r4
   2cb14:	ldr	r0, [pc, #-1956]	; 2c378 <__flatcc_fb_parse@@Base+0x11ac>
   2cb18:	bl	13ef4 <memcmp@plt>
   2cb1c:	ldr	r1, [pc, #-1960]	; 2c37c <__flatcc_fb_parse@@Base+0x11b0>
   2cb20:	cmp	r0, #0
   2cb24:	movne	r1, #9
   2cb28:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2cb2c:	mov	r2, #7
   2cb30:	mov	r1, r4
   2cb34:	ldr	r0, [pc, #-1980]	; 2c380 <__flatcc_fb_parse@@Base+0x11b4>
   2cb38:	bl	13ef4 <memcmp@plt>
   2cb3c:	ldr	r1, [pc, #-1984]	; 2c384 <__flatcc_fb_parse@@Base+0x11b8>
   2cb40:	cmp	r0, #0
   2cb44:	movne	r1, #9
   2cb48:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2cb4c:	mov	r2, #7
   2cb50:	mov	r1, r4
   2cb54:	ldr	r0, [pc, #-2004]	; 2c388 <__flatcc_fb_parse@@Base+0x11bc>
   2cb58:	bl	13ef4 <memcmp@plt>
   2cb5c:	ldr	r1, [pc, #-2008]	; 2c38c <__flatcc_fb_parse@@Base+0x11c0>
   2cb60:	cmp	r0, #0
   2cb64:	movne	r1, #9
   2cb68:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2cb6c:	mov	r2, #9
   2cb70:	mov	r1, r4
   2cb74:	ldr	r0, [pc, #-2028]	; 2c390 <__flatcc_fb_parse@@Base+0x11c4>
   2cb78:	bl	13ef4 <memcmp@plt>
   2cb7c:	ldr	r1, [pc, #-2008]	; 2c3ac <__flatcc_fb_parse@@Base+0x11e0>
   2cb80:	cmp	r0, #0
   2cb84:	movne	r1, #9
   2cb88:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2cb8c:	mov	r2, #9
   2cb90:	mov	r1, r4
   2cb94:	ldr	r0, [pc, #-2056]	; 2c394 <__flatcc_fb_parse@@Base+0x11c8>
   2cb98:	bl	13ef4 <memcmp@plt>
   2cb9c:	cmp	r0, #0
   2cba0:	movne	r1, #9
   2cba4:	mvneq	r1, #968	; 0x3c8
   2cba8:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2cbac:	mov	r2, #11
   2cbb0:	mov	r1, r4
   2cbb4:	ldr	r0, [pc, #-2084]	; 2c398 <__flatcc_fb_parse@@Base+0x11cc>
   2cbb8:	bl	13ef4 <memcmp@plt>
   2cbbc:	ldr	r1, [pc, #-2088]	; 2c39c <__flatcc_fb_parse@@Base+0x11d0>
   2cbc0:	cmp	r0, #0
   2cbc4:	movne	r1, #9
   2cbc8:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2cbcc:	mov	r2, #14
   2cbd0:	mov	r1, r4
   2cbd4:	ldr	r0, [pc, #-2108]	; 2c3a0 <__flatcc_fb_parse@@Base+0x11d4>
   2cbd8:	bl	13ef4 <memcmp@plt>
   2cbdc:	ldr	r1, [pc, #-2096]	; 2c3b4 <__flatcc_fb_parse@@Base+0x11e8>
   2cbe0:	cmp	r0, #0
   2cbe4:	movne	r1, #9
   2cbe8:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2cbec:	mov	r2, #15
   2cbf0:	mov	r1, r4
   2cbf4:	ldr	r0, [pc, #-2136]	; 2c3a4 <__flatcc_fb_parse@@Base+0x11d8>
   2cbf8:	bl	13ef4 <memcmp@plt>
   2cbfc:	cmp	r0, #0
   2cc00:	movne	r1, #9
   2cc04:	mvneq	r1, #964	; 0x3c4
   2cc08:	b	2c914 <__flatcc_fb_parse@@Base+0x1748>
   2cc0c:	add	r5, r4, #1
   2cc10:	cmp	r1, #127	; 0x7f
   2cc14:	cmpne	r1, #31
   2cc18:	bhi	2cc28 <__flatcc_fb_parse@@Base+0x1a5c>
   2cc1c:	cmp	r1, #32
   2cc20:	cmpne	r1, #9
   2cc24:	bne	2cc44 <__flatcc_fb_parse@@Base+0x1a78>
   2cc28:	mov	r3, r5
   2cc2c:	mov	r2, r4
   2cc30:	mov	r1, #8
   2cc34:	mov	r0, r9
   2cc38:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2cc3c:	mov	r4, r5
   2cc40:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2cc44:	mov	r3, r5
   2cc48:	mov	r2, r4
   2cc4c:	mov	r1, #5
   2cc50:	mov	r0, r9
   2cc54:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2cc58:	mov	r4, r5
   2cc5c:	b	2bf30 <__flatcc_fb_parse@@Base+0xd64>
   2cc60:	mov	r3, r7
   2cc64:	mov	r2, r4
   2cc68:	mov	r1, #0
   2cc6c:	mov	r0, r9
   2cc70:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2cc74:	b	2b4c4 <__flatcc_fb_parse@@Base+0x2f8>
   2cc78:	ldr	r3, [pc, #-2192]	; 2c3f0 <__flatcc_fb_parse@@Base+0x1224>
   2cc7c:	ldr	r3, [r3]
   2cc80:	mov	r2, #34	; 0x22
   2cc84:	mov	r1, #1
   2cc88:	ldr	r0, [pc, #-2204]	; 2c3f4 <__flatcc_fb_parse@@Base+0x1228>
   2cc8c:	bl	13f18 <fwrite@plt>
   2cc90:	mov	r0, #1
   2cc94:	bl	13f6c <exit@plt>
   2cc98:	mov	r0, r9
   2cc9c:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2cca0:	b	2b4f4 <__flatcc_fb_parse@@Base+0x328>
   2cca4:	mov	r3, r6
   2cca8:	mov	r2, r8
   2ccac:	mov	r1, sl
   2ccb0:	mov	r0, r9
   2ccb4:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2ccb8:	b	2cd6c <__flatcc_fb_parse@@Base+0x1ba0>
   2ccbc:	mov	r3, r6
   2ccc0:	ldr	r2, [pc, #-2336]	; 2c3a8 <__flatcc_fb_parse@@Base+0x11dc>
   2ccc4:	mov	r1, r4
   2ccc8:	mov	r0, r9
   2cccc:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2ccd0:	mov	r2, r7
   2ccd4:	mov	r1, #59	; 0x3b
   2ccd8:	mov	r0, r9
   2ccdc:	bl	29698 <__flatcc_fb_default_error_out@@Base+0x224>
   2cce0:	b	2cd98 <__flatcc_fb_parse@@Base+0x1bcc>
   2cce4:	ldr	r3, [pc, #-2300]	; 2c3f0 <__flatcc_fb_parse@@Base+0x1224>
   2cce8:	ldr	r3, [r3]
   2ccec:	mov	r2, #34	; 0x22
   2ccf0:	mov	r1, #1
   2ccf4:	ldr	r0, [pc, #-2312]	; 2c3f4 <__flatcc_fb_parse@@Base+0x1228>
   2ccf8:	bl	13f18 <fwrite@plt>
   2ccfc:	mov	r0, #1
   2cd00:	bl	13f6c <exit@plt>
   2cd04:	ldr	r3, [r9, #52]	; 0x34
   2cd08:	add	r3, r3, #32
   2cd0c:	str	r3, [r9, #52]	; 0x34
   2cd10:	ldr	r3, [r9, #352]	; 0x160
   2cd14:	str	r3, [r1]
   2cd18:	str	r1, [r9, #352]	; 0x160
   2cd1c:	add	r1, r1, #8
   2cd20:	mov	r0, r9
   2cd24:	bl	29dc0 <__flatcc_error_report@@Base+0x5f8>
   2cd28:	ldr	r1, [r9, #40]	; 0x28
   2cd2c:	ldr	r3, [r1, #16]
   2cd30:	cmp	r3, #59	; 0x3b
   2cd34:	bne	2cde0 <__flatcc_fb_parse@@Base+0x1c14>
   2cd38:	mov	r0, r9
   2cd3c:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2cd40:	ldr	r4, [r9, #40]	; 0x28
   2cd44:	ldr	r3, [r4, #16]
   2cd48:	cmp	r3, r5
   2cd4c:	bne	2cdf4 <__flatcc_fb_parse@@Base+0x1c28>
   2cd50:	mov	r0, r9
   2cd54:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2cd58:	cmp	r4, #0
   2cd5c:	beq	2cdf4 <__flatcc_fb_parse@@Base+0x1c28>
   2cd60:	ldr	r3, [r9, #140]	; 0x8c
   2cd64:	cmp	r3, #0
   2cd68:	bne	2cca4 <__flatcc_fb_parse@@Base+0x1ad8>
   2cd6c:	ldr	r3, [r9, #108]	; 0x6c
   2cd70:	cmp	r3, #9
   2cd74:	bgt	2cdf4 <__flatcc_fb_parse@@Base+0x1c28>
   2cd78:	ldr	r4, [r9, #40]	; 0x28
   2cd7c:	ldr	r3, [r4, #16]
   2cd80:	cmp	r3, #19
   2cd84:	bne	2ccbc <__flatcc_fb_parse@@Base+0x1af0>
   2cd88:	mov	r0, r9
   2cd8c:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2cd90:	cmp	r4, #0
   2cd94:	beq	2ccd0 <__flatcc_fb_parse@@Base+0x1b04>
   2cd98:	ldr	r1, [r9, #52]	; 0x34
   2cd9c:	add	r2, r1, #32
   2cda0:	ldr	r3, [r9, #44]	; 0x2c
   2cda4:	cmp	r2, r3
   2cda8:	bls	2cd04 <__flatcc_fb_parse@@Base+0x1b38>
   2cdac:	mov	r1, r7
   2cdb0:	mov	r0, #65536	; 0x10000
   2cdb4:	bl	13ea0 <calloc@plt>
   2cdb8:	cmp	r0, #0
   2cdbc:	beq	2cce4 <__flatcc_fb_parse@@Base+0x1b18>
   2cdc0:	ldr	r3, [r9, #48]	; 0x30
   2cdc4:	str	r3, [r0]
   2cdc8:	str	r0, [r9, #48]	; 0x30
   2cdcc:	add	r1, r0, #16
   2cdd0:	str	r1, [r9, #52]	; 0x34
   2cdd4:	add	r0, r0, #65536	; 0x10000
   2cdd8:	str	r0, [r9, #44]	; 0x2c
   2cddc:	b	2cd04 <__flatcc_fb_parse@@Base+0x1b38>
   2cde0:	mov	r3, r6
   2cde4:	mov	r2, fp
   2cde8:	mov	r0, r9
   2cdec:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2cdf0:	b	2cd40 <__flatcc_fb_parse@@Base+0x1b74>
   2cdf4:	ldr	fp, [r9, #40]	; 0x28
   2cdf8:	b	2d20c <__flatcc_fb_parse@@Base+0x2040>
   2cdfc:	ldr	r2, [pc, #-2648]	; 2c3ac <__flatcc_fb_parse@@Base+0x11e0>
   2ce00:	cmp	r3, r2
   2ce04:	beq	2d280 <__flatcc_fb_parse@@Base+0x20b4>
   2ce08:	bgt	2cf2c <__flatcc_fb_parse@@Base+0x1d60>
   2ce0c:	sub	r2, r2, #1
   2ce10:	cmp	r3, r2
   2ce14:	bne	2d26c <__flatcc_fb_parse@@Base+0x20a0>
   2ce18:	mov	r3, #0
   2ce1c:	ldr	r2, [pc, #-2676]	; 2c3b0 <__flatcc_fb_parse@@Base+0x11e4>
   2ce20:	mov	r0, r9
   2ce24:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2ce28:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2ce2c:	cmp	r3, #5
   2ce30:	beq	2de28 <__flatcc_fb_parse@@Base+0x2c5c>
   2ce34:	bgt	2cef0 <__flatcc_fb_parse@@Base+0x1d24>
   2ce38:	ldr	r2, [pc, #-2700]	; 2c3b4 <__flatcc_fb_parse@@Base+0x11e8>
   2ce3c:	cmp	r3, r2
   2ce40:	beq	2d07c <__flatcc_fb_parse@@Base+0x1eb0>
   2ce44:	blt	2d52c <__flatcc_fb_parse@@Base+0x2360>
   2ce48:	mvn	r2, #964	; 0x3c4
   2ce4c:	cmp	r3, r2
   2ce50:	bne	2d26c <__flatcc_fb_parse@@Base+0x20a0>
   2ce54:	mov	r0, r9
   2ce58:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2ce5c:	add	r4, r9, #360	; 0x168
   2ce60:	ldrh	r3, [r4, #8]
   2ce64:	cmp	r3, #0
   2ce68:	bne	2d140 <__flatcc_fb_parse@@Base+0x1f74>
   2ce6c:	ldr	r5, [r9, #40]	; 0x28
   2ce70:	ldr	r3, [r5, #16]
   2ce74:	cmp	r3, #19
   2ce78:	bne	2d168 <__flatcc_fb_parse@@Base+0x1f9c>
   2ce7c:	mov	r0, r9
   2ce80:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2ce84:	cmp	r5, #0
   2ce88:	beq	2d17c <__flatcc_fb_parse@@Base+0x1fb0>
   2ce8c:	ldr	r5, [r9, #40]	; 0x28
   2ce90:	mov	r1, r4
   2ce94:	mov	r0, r9
   2ce98:	bl	29dc0 <__flatcc_error_report@@Base+0x5f8>
   2ce9c:	ldr	r3, [r9, #360]	; 0x168
   2cea0:	cmp	r3, #0
   2cea4:	beq	2ced4 <__flatcc_fb_parse@@Base+0x1d08>
   2cea8:	ldr	r3, [r9, #364]	; 0x16c
   2ceac:	cmp	r3, #4
   2ceb0:	beq	2ced4 <__flatcc_fb_parse@@Base+0x1d08>
   2ceb4:	add	r3, r9, #360	; 0x168
   2ceb8:	mov	r2, #1
   2cebc:	strh	r2, [r3, #8]
   2cec0:	mov	r3, #0
   2cec4:	ldr	r2, [pc, #-2836]	; 2c3b8 <__flatcc_fb_parse@@Base+0x11ec>
   2cec8:	mov	r1, r5
   2cecc:	mov	r0, r9
   2ced0:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2ced4:	ldr	r1, [r9, #40]	; 0x28
   2ced8:	ldr	r3, [r1, #16]
   2cedc:	cmp	r3, #59	; 0x3b
   2cee0:	bne	2d190 <__flatcc_fb_parse@@Base+0x1fc4>
   2cee4:	mov	r0, r9
   2cee8:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2ceec:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2cef0:	cmp	r3, #27
   2cef4:	beq	2de4c <__flatcc_fb_parse@@Base+0x2c80>
   2cef8:	cmp	r3, #123	; 0x7b
   2cefc:	beq	2de14 <__flatcc_fb_parse@@Base+0x2c48>
   2cf00:	cmp	r3, #7
   2cf04:	bne	2d26c <__flatcc_fb_parse@@Base+0x20a0>
   2cf08:	mov	r3, #1
   2cf0c:	str	r3, [sp, #4]
   2cf10:	ldr	r3, [pc, #-2908]	; 2c3bc <__flatcc_fb_parse@@Base+0x11f0>
   2cf14:	str	r3, [sp]
   2cf18:	mov	r3, #0
   2cf1c:	ldr	r2, [pc, #-2916]	; 2c3c0 <__flatcc_fb_parse@@Base+0x11f4>
   2cf20:	mov	r0, r9
   2cf24:	bl	297c8 <__flatcc_error_report@@Base>
   2cf28:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2cf2c:	mov	r0, r9
   2cf30:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2cf34:	mov	r3, #0
   2cf38:	str	r3, [sp, #20]
   2cf3c:	ldr	r4, [r9, #40]	; 0x28
   2cf40:	ldr	r3, [r4, #16]
   2cf44:	cmp	r3, #59	; 0x3b
   2cf48:	beq	2cf80 <__flatcc_fb_parse@@Base+0x1db4>
   2cf4c:	ldr	r1, [r9, #40]	; 0x28
   2cf50:	ldr	r3, [r1, #16]
   2cf54:	cmp	r3, #9
   2cf58:	beq	2cf9c <__flatcc_fb_parse@@Base+0x1dd0>
   2cf5c:	mov	r3, #0
   2cf60:	ldr	r2, [pc, #-2980]	; 2c3c4 <__flatcc_fb_parse@@Base+0x11f8>
   2cf64:	mov	r0, r9
   2cf68:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2cf6c:	mov	r2, #1
   2cf70:	mov	r1, #59	; 0x3b
   2cf74:	mov	r0, r9
   2cf78:	bl	29698 <__flatcc_fb_default_error_out@@Base+0x224>
   2cf7c:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2cf80:	mov	r0, r9
   2cf84:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2cf88:	cmp	r4, #0
   2cf8c:	beq	2cf4c <__flatcc_fb_parse@@Base+0x1d80>
   2cf90:	mov	r3, #0
   2cf94:	str	r3, [r9, #544]	; 0x220
   2cf98:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2cf9c:	add	r1, sp, #20
   2cfa0:	mov	r0, r9
   2cfa4:	bl	299ac <__flatcc_error_report@@Base+0x1e4>
   2cfa8:	mov	r3, r4
   2cfac:	ldr	r2, [pc, #-3052]	; 2c3c8 <__flatcc_fb_parse@@Base+0x11fc>
   2cfb0:	mov	r1, #59	; 0x3b
   2cfb4:	mov	r0, r9
   2cfb8:	bl	29b30 <__flatcc_error_report@@Base+0x368>
   2cfbc:	ldr	r5, [sp, #20]
   2cfc0:	mov	r2, #0
   2cfc4:	mov	r1, r5
   2cfc8:	ldr	r0, [r9, #412]	; 0x19c
   2cfcc:	bl	287c8 <fb_scope_table_find@@Base>
   2cfd0:	cmp	r0, #0
   2cfd4:	beq	2cfe0 <__flatcc_fb_parse@@Base+0x1e14>
   2cfd8:	str	r0, [r9, #544]	; 0x220
   2cfdc:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2cfe0:	ldr	r4, [r9, #52]	; 0x34
   2cfe4:	add	r2, r4, #32
   2cfe8:	ldr	r3, [r9, #44]	; 0x2c
   2cfec:	cmp	r2, r3
   2cff0:	bls	2d044 <__flatcc_fb_parse@@Base+0x1e78>
   2cff4:	mov	r1, #1
   2cff8:	mov	r0, #65536	; 0x10000
   2cffc:	bl	13ea0 <calloc@plt>
   2d000:	cmp	r0, #0
   2d004:	bne	2d028 <__flatcc_fb_parse@@Base+0x1e5c>
   2d008:	ldr	r3, [pc, #-3104]	; 2c3f0 <__flatcc_fb_parse@@Base+0x1224>
   2d00c:	ldr	r3, [r3]
   2d010:	mov	r2, #34	; 0x22
   2d014:	mov	r1, #1
   2d018:	ldr	r0, [pc, #-3116]	; 2c3f4 <__flatcc_fb_parse@@Base+0x1228>
   2d01c:	bl	13f18 <fwrite@plt>
   2d020:	mov	r0, #1
   2d024:	bl	13f6c <exit@plt>
   2d028:	ldr	r3, [r9, #48]	; 0x30
   2d02c:	str	r3, [r0]
   2d030:	str	r0, [r9, #48]	; 0x30
   2d034:	add	r4, r0, #16
   2d038:	str	r4, [r9, #52]	; 0x34
   2d03c:	add	r0, r0, #65536	; 0x10000
   2d040:	str	r0, [r9, #44]	; 0x2c
   2d044:	ldr	r3, [r9, #52]	; 0x34
   2d048:	add	r3, r3, #32
   2d04c:	str	r3, [r9, #52]	; 0x34
   2d050:	mov	r3, r4
   2d054:	str	r5, [r3], #20
   2d058:	add	r2, r9, #476	; 0x1dc
   2d05c:	ldm	r2, {r0, r1}
   2d060:	stm	r3, {r0, r1}
   2d064:	mov	r2, #1
   2d068:	mov	r1, r4
   2d06c:	ldr	r0, [r9, #412]	; 0x19c
   2d070:	bl	287a4 <fb_scope_table_insert_item@@Base>
   2d074:	mov	r0, r4
   2d078:	b	2cfd8 <__flatcc_fb_parse@@Base+0x1e0c>
   2d07c:	mov	r0, r9
   2d080:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d084:	add	r5, r9, #376	; 0x178
   2d088:	ldrh	r3, [r5, #8]
   2d08c:	cmp	r3, #2
   2d090:	beq	2d0dc <__flatcc_fb_parse@@Base+0x1f10>
   2d094:	ldr	r4, [r9, #40]	; 0x28
   2d098:	ldr	r3, [r4, #16]
   2d09c:	cmp	r3, #19
   2d0a0:	bne	2d104 <__flatcc_fb_parse@@Base+0x1f38>
   2d0a4:	mov	r0, r9
   2d0a8:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d0ac:	cmp	r4, #0
   2d0b0:	beq	2d118 <__flatcc_fb_parse@@Base+0x1f4c>
   2d0b4:	mov	r1, r5
   2d0b8:	mov	r0, r9
   2d0bc:	bl	29dc0 <__flatcc_error_report@@Base+0x5f8>
   2d0c0:	ldr	r1, [r9, #40]	; 0x28
   2d0c4:	ldr	r3, [r1, #16]
   2d0c8:	cmp	r3, #59	; 0x3b
   2d0cc:	bne	2d12c <__flatcc_fb_parse@@Base+0x1f60>
   2d0d0:	mov	r0, r9
   2d0d4:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d0d8:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d0dc:	ldr	r3, [r9, #380]	; 0x17c
   2d0e0:	str	r3, [sp, #4]
   2d0e4:	ldr	r3, [r9, #376]	; 0x178
   2d0e8:	str	r3, [sp]
   2d0ec:	mov	r3, #0
   2d0f0:	ldr	r2, [pc, #-3372]	; 2c3cc <__flatcc_fb_parse@@Base+0x1200>
   2d0f4:	ldr	r1, [r9, #40]	; 0x28
   2d0f8:	mov	r0, r9
   2d0fc:	bl	297c8 <__flatcc_error_report@@Base>
   2d100:	b	2d094 <__flatcc_fb_parse@@Base+0x1ec8>
   2d104:	mov	r3, #0
   2d108:	ldr	r2, [pc, #-3392]	; 2c3d0 <__flatcc_fb_parse@@Base+0x1204>
   2d10c:	mov	r1, r4
   2d110:	mov	r0, r9
   2d114:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d118:	mov	r2, #1
   2d11c:	mov	r1, #59	; 0x3b
   2d120:	mov	r0, r9
   2d124:	bl	29698 <__flatcc_fb_default_error_out@@Base+0x224>
   2d128:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d12c:	mov	r3, #0
   2d130:	ldr	r2, [pc, #-3428]	; 2c3d4 <__flatcc_fb_parse@@Base+0x1208>
   2d134:	mov	r0, r9
   2d138:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d13c:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d140:	ldr	r3, [r9, #364]	; 0x16c
   2d144:	str	r3, [sp, #4]
   2d148:	ldr	r3, [r9, #360]	; 0x168
   2d14c:	str	r3, [sp]
   2d150:	mov	r3, #0
   2d154:	ldr	r2, [pc, #-3460]	; 2c3d8 <__flatcc_fb_parse@@Base+0x120c>
   2d158:	ldr	r1, [r9, #40]	; 0x28
   2d15c:	mov	r0, r9
   2d160:	bl	297c8 <__flatcc_error_report@@Base>
   2d164:	b	2ce6c <__flatcc_fb_parse@@Base+0x1ca0>
   2d168:	mov	r3, #0
   2d16c:	ldr	r2, [pc, #-3480]	; 2c3dc <__flatcc_fb_parse@@Base+0x1210>
   2d170:	mov	r1, r5
   2d174:	mov	r0, r9
   2d178:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d17c:	mov	r2, #1
   2d180:	mov	r1, #59	; 0x3b
   2d184:	mov	r0, r9
   2d188:	bl	29698 <__flatcc_fb_default_error_out@@Base+0x224>
   2d18c:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d190:	mov	r3, #0
   2d194:	ldr	r2, [pc, #-3516]	; 2c3e0 <__flatcc_fb_parse@@Base+0x1214>
   2d198:	mov	r0, r9
   2d19c:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d1a0:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d1a4:	mov	r0, r9
   2d1a8:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d1ac:	add	r5, r9, #400	; 0x190
   2d1b0:	ldr	r4, [r9, #40]	; 0x28
   2d1b4:	ldr	r3, [r9, #400]	; 0x190
   2d1b8:	cmp	r3, #0
   2d1bc:	beq	2d1d4 <__flatcc_fb_parse@@Base+0x2008>
   2d1c0:	mov	r3, #0
   2d1c4:	ldr	r2, [pc, #-3560]	; 2c3e4 <__flatcc_fb_parse@@Base+0x1218>
   2d1c8:	mov	r1, r4
   2d1cc:	mov	r0, r9
   2d1d0:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d1d4:	mov	r1, r5
   2d1d8:	mov	r0, r9
   2d1dc:	bl	299ac <__flatcc_error_report@@Base+0x1e4>
   2d1e0:	ldr	r3, [r9, #544]	; 0x220
   2d1e4:	str	r3, [r9, #408]	; 0x198
   2d1e8:	mov	r3, r4
   2d1ec:	ldr	r2, [pc, #-3596]	; 2c3e8 <__flatcc_fb_parse@@Base+0x121c>
   2d1f0:	mov	r1, #59	; 0x3b
   2d1f4:	mov	r0, r9
   2d1f8:	bl	29b30 <__flatcc_error_report@@Base+0x368>
   2d1fc:	ldr	r3, [r9, #40]	; 0x28
   2d200:	cmp	fp, r3
   2d204:	beq	2de70 <__flatcc_fb_parse@@Base+0x2ca4>
   2d208:	mov	fp, r3
   2d20c:	ldr	r3, [fp, #16]
   2d210:	cmp	r3, #0
   2d214:	beq	2de90 <__flatcc_fb_parse@@Base+0x2cc4>
   2d218:	ldr	r3, [r9, #108]	; 0x6c
   2d21c:	cmp	r3, #9
   2d220:	bgt	2dec8 <__flatcc_fb_parse@@Base+0x2cfc>
   2d224:	ldr	r1, [r9, #40]	; 0x28
   2d228:	ldr	r3, [r1, #16]
   2d22c:	cmn	r3, #968	; 0x3c8
   2d230:	beq	2d1a4 <__flatcc_fb_parse@@Base+0x1fd8>
   2d234:	bgt	2ce2c <__flatcc_fb_parse@@Base+0x1c60>
   2d238:	mvn	r2, #972	; 0x3cc
   2d23c:	cmp	r3, r2
   2d240:	beq	2d3a8 <__flatcc_fb_parse@@Base+0x21dc>
   2d244:	cmn	r3, #972	; 0x3cc
   2d248:	bge	2cdfc <__flatcc_fb_parse@@Base+0x1c30>
   2d24c:	sub	r2, r2, #10
   2d250:	cmp	r3, r2
   2d254:	beq	2d46c <__flatcc_fb_parse@@Base+0x22a0>
   2d258:	cmn	r3, #976	; 0x3d0
   2d25c:	beq	2d99c <__flatcc_fb_parse@@Base+0x27d0>
   2d260:	mvn	r2, #996	; 0x3e4
   2d264:	cmp	r3, r2
   2d268:	beq	2d5f0 <__flatcc_fb_parse@@Base+0x2424>
   2d26c:	mov	r3, #0
   2d270:	ldr	r2, [pc, #-3724]	; 2c3ec <__flatcc_fb_parse@@Base+0x1220>
   2d274:	mov	r0, r9
   2d278:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d27c:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d280:	mov	r0, r9
   2d284:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d288:	ldr	r3, [r9, #52]	; 0x34
   2d28c:	add	r1, r3, #32
   2d290:	ldr	r2, [r9, #44]	; 0x2c
   2d294:	cmp	r1, r2
   2d298:	bhi	2d30c <__flatcc_fb_parse@@Base+0x2140>
   2d29c:	ldr	r2, [r9, #52]	; 0x34
   2d2a0:	add	r2, r2, #32
   2d2a4:	str	r2, [r9, #52]	; 0x34
   2d2a8:	mov	r5, r3
   2d2ac:	ldr	r2, [r9, #356]	; 0x164
   2d2b0:	str	r2, [r3]
   2d2b4:	str	r3, [r9, #356]	; 0x164
   2d2b8:	ldr	r4, [r9, #40]	; 0x28
   2d2bc:	ldr	r3, [r4, #16]
   2d2c0:	cmp	r3, #19
   2d2c4:	bne	2d360 <__flatcc_fb_parse@@Base+0x2194>
   2d2c8:	mov	r0, r9
   2d2cc:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d2d0:	cmp	r4, #0
   2d2d4:	beq	2d2f0 <__flatcc_fb_parse@@Base+0x2124>
   2d2d8:	add	r1, r5, #8
   2d2dc:	mov	r0, r9
   2d2e0:	bl	29dc0 <__flatcc_error_report@@Base+0x5f8>
   2d2e4:	ldr	r3, [r5, #12]
   2d2e8:	cmp	r3, #0
   2d2ec:	beq	2d378 <__flatcc_fb_parse@@Base+0x21ac>
   2d2f0:	ldr	r1, [r9, #40]	; 0x28
   2d2f4:	ldr	r3, [r1, #16]
   2d2f8:	cmp	r3, #59	; 0x3b
   2d2fc:	bne	2d394 <__flatcc_fb_parse@@Base+0x21c8>
   2d300:	mov	r0, r9
   2d304:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d308:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d30c:	mov	r1, #1
   2d310:	mov	r0, #65536	; 0x10000
   2d314:	bl	13ea0 <calloc@plt>
   2d318:	cmp	r0, #0
   2d31c:	beq	2d340 <__flatcc_fb_parse@@Base+0x2174>
   2d320:	ldr	r3, [r9, #48]	; 0x30
   2d324:	str	r3, [r0]
   2d328:	str	r0, [r9, #48]	; 0x30
   2d32c:	add	r3, r0, #16
   2d330:	str	r3, [r9, #52]	; 0x34
   2d334:	add	r0, r0, #65536	; 0x10000
   2d338:	str	r0, [r9, #44]	; 0x2c
   2d33c:	b	2d29c <__flatcc_fb_parse@@Base+0x20d0>
   2d340:	ldr	r3, [pc, #-3928]	; 2c3f0 <__flatcc_fb_parse@@Base+0x1224>
   2d344:	ldr	r3, [r3]
   2d348:	mov	r2, #34	; 0x22
   2d34c:	mov	r1, #1
   2d350:	ldr	r0, [pc, #-3940]	; 2c3f4 <__flatcc_fb_parse@@Base+0x1228>
   2d354:	bl	13f18 <fwrite@plt>
   2d358:	mov	r0, #1
   2d35c:	bl	13f6c <exit@plt>
   2d360:	mov	r3, #0
   2d364:	ldr	r2, [pc, #-3956]	; 2c3f8 <__flatcc_fb_parse@@Base+0x122c>
   2d368:	mov	r1, r4
   2d36c:	mov	r0, r9
   2d370:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d374:	b	2d2f0 <__flatcc_fb_parse@@Base+0x2124>
   2d378:	str	r3, [sp, #4]
   2d37c:	str	r3, [sp]
   2d380:	ldr	r2, [pc, #-3980]	; 2c3fc <__flatcc_fb_parse@@Base+0x1230>
   2d384:	mov	r1, r4
   2d388:	mov	r0, r9
   2d38c:	bl	297c8 <__flatcc_error_report@@Base>
   2d390:	b	2d2f0 <__flatcc_fb_parse@@Base+0x2124>
   2d394:	mov	r3, #0
   2d398:	ldr	r2, [pc, #3176]	; 2e008 <__flatcc_fb_parse@@Base+0x2e3c>
   2d39c:	mov	r0, r9
   2d3a0:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d3a4:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d3a8:	mov	r0, r9
   2d3ac:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d3b0:	ldr	r4, [r9, #52]	; 0x34
   2d3b4:	add	r2, r4, #128	; 0x80
   2d3b8:	ldr	r3, [r9, #44]	; 0x2c
   2d3bc:	cmp	r2, r3
   2d3c0:	bhi	2d418 <__flatcc_fb_parse@@Base+0x224c>
   2d3c4:	ldr	r3, [r9, #52]	; 0x34
   2d3c8:	add	r3, r3, #128	; 0x80
   2d3cc:	str	r3, [r9, #52]	; 0x34
   2d3d0:	ldr	r3, [r9, #392]	; 0x188
   2d3d4:	str	r3, [r4]
   2d3d8:	mov	r3, #1
   2d3dc:	strh	r3, [r4, #8]
   2d3e0:	str	r4, [r9, #392]	; 0x188
   2d3e4:	ldr	r3, [r9, #544]	; 0x220
   2d3e8:	str	r3, [r4, #12]
   2d3ec:	add	r0, r9, #36	; 0x24
   2d3f0:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2d3f4:	ldr	r3, [r9, #36]	; 0x24
   2d3f8:	str	r3, [r4, #32]
   2d3fc:	mov	r3, #0
   2d400:	str	r3, [r9, #36]	; 0x24
   2d404:	mvn	r2, #972	; 0x3cc
   2d408:	mov	r1, r4
   2d40c:	mov	r0, r9
   2d410:	bl	2a824 <__flatcc_error_report@@Base+0x105c>
   2d414:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d418:	mov	r1, #1
   2d41c:	mov	r0, #65536	; 0x10000
   2d420:	bl	13ea0 <calloc@plt>
   2d424:	cmp	r0, #0
   2d428:	beq	2d44c <__flatcc_fb_parse@@Base+0x2280>
   2d42c:	ldr	r3, [r9, #48]	; 0x30
   2d430:	str	r3, [r0]
   2d434:	str	r0, [r9, #48]	; 0x30
   2d438:	add	r4, r0, #16
   2d43c:	str	r4, [r9, #52]	; 0x34
   2d440:	add	r0, r0, #65536	; 0x10000
   2d444:	str	r0, [r9, #44]	; 0x2c
   2d448:	b	2d3c4 <__flatcc_fb_parse@@Base+0x21f8>
   2d44c:	ldr	r3, [pc, #3000]	; 2e00c <__flatcc_fb_parse@@Base+0x2e40>
   2d450:	ldr	r3, [r3]
   2d454:	mov	r2, #34	; 0x22
   2d458:	mov	r1, #1
   2d45c:	ldr	r0, [pc, #2988]	; 2e010 <__flatcc_fb_parse@@Base+0x2e44>
   2d460:	bl	13f18 <fwrite@plt>
   2d464:	mov	r0, #1
   2d468:	bl	13f6c <exit@plt>
   2d46c:	mov	r0, r9
   2d470:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d474:	ldr	r4, [r9, #52]	; 0x34
   2d478:	add	r2, r4, #128	; 0x80
   2d47c:	ldr	r3, [r9, #44]	; 0x2c
   2d480:	cmp	r2, r3
   2d484:	bhi	2d4d8 <__flatcc_fb_parse@@Base+0x230c>
   2d488:	ldr	r3, [r9, #52]	; 0x34
   2d48c:	add	r3, r3, #128	; 0x80
   2d490:	str	r3, [r9, #52]	; 0x34
   2d494:	ldr	r3, [r9, #392]	; 0x188
   2d498:	str	r3, [r4]
   2d49c:	mov	r5, #0
   2d4a0:	strh	r5, [r4, #8]
   2d4a4:	str	r4, [r9, #392]	; 0x188
   2d4a8:	ldr	r3, [r9, #544]	; 0x220
   2d4ac:	str	r3, [r4, #12]
   2d4b0:	add	r0, r9, #36	; 0x24
   2d4b4:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2d4b8:	ldr	r3, [r9, #36]	; 0x24
   2d4bc:	str	r3, [r4, #32]
   2d4c0:	str	r5, [r9, #36]	; 0x24
   2d4c4:	ldr	r2, [pc, #2888]	; 2e014 <__flatcc_fb_parse@@Base+0x2e48>
   2d4c8:	mov	r1, r4
   2d4cc:	mov	r0, r9
   2d4d0:	bl	2a824 <__flatcc_error_report@@Base+0x105c>
   2d4d4:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d4d8:	mov	r1, #1
   2d4dc:	mov	r0, #65536	; 0x10000
   2d4e0:	bl	13ea0 <calloc@plt>
   2d4e4:	cmp	r0, #0
   2d4e8:	beq	2d50c <__flatcc_fb_parse@@Base+0x2340>
   2d4ec:	ldr	r3, [r9, #48]	; 0x30
   2d4f0:	str	r3, [r0]
   2d4f4:	str	r0, [r9, #48]	; 0x30
   2d4f8:	add	r4, r0, #16
   2d4fc:	str	r4, [r9, #52]	; 0x34
   2d500:	add	r0, r0, #65536	; 0x10000
   2d504:	str	r0, [r9, #44]	; 0x2c
   2d508:	b	2d488 <__flatcc_fb_parse@@Base+0x22bc>
   2d50c:	ldr	r3, [pc, #2808]	; 2e00c <__flatcc_fb_parse@@Base+0x2e40>
   2d510:	ldr	r3, [r3]
   2d514:	mov	r2, #34	; 0x22
   2d518:	mov	r1, #1
   2d51c:	ldr	r0, [pc, #2796]	; 2e010 <__flatcc_fb_parse@@Base+0x2e44>
   2d520:	bl	13f18 <fwrite@plt>
   2d524:	mov	r0, #1
   2d528:	bl	13f6c <exit@plt>
   2d52c:	mov	r0, r9
   2d530:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d534:	ldr	r4, [r9, #52]	; 0x34
   2d538:	add	r2, r4, #128	; 0x80
   2d53c:	ldr	r3, [r9, #44]	; 0x2c
   2d540:	cmp	r2, r3
   2d544:	bhi	2d59c <__flatcc_fb_parse@@Base+0x23d0>
   2d548:	ldr	r3, [r9, #52]	; 0x34
   2d54c:	add	r3, r3, #128	; 0x80
   2d550:	str	r3, [r9, #52]	; 0x34
   2d554:	ldr	r3, [r9, #392]	; 0x188
   2d558:	str	r3, [r4]
   2d55c:	mov	r3, #2
   2d560:	strh	r3, [r4, #8]
   2d564:	str	r4, [r9, #392]	; 0x188
   2d568:	ldr	r3, [r9, #544]	; 0x220
   2d56c:	str	r3, [r4, #12]
   2d570:	add	r0, r9, #36	; 0x24
   2d574:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2d578:	ldr	r3, [r9, #36]	; 0x24
   2d57c:	str	r3, [r4, #32]
   2d580:	mov	r3, #0
   2d584:	str	r3, [r9, #36]	; 0x24
   2d588:	ldr	r2, [pc, #2696]	; 2e018 <__flatcc_fb_parse@@Base+0x2e4c>
   2d58c:	mov	r1, r4
   2d590:	mov	r0, r9
   2d594:	bl	2a824 <__flatcc_error_report@@Base+0x105c>
   2d598:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d59c:	mov	r1, #1
   2d5a0:	mov	r0, #65536	; 0x10000
   2d5a4:	bl	13ea0 <calloc@plt>
   2d5a8:	cmp	r0, #0
   2d5ac:	beq	2d5d0 <__flatcc_fb_parse@@Base+0x2404>
   2d5b0:	ldr	r3, [r9, #48]	; 0x30
   2d5b4:	str	r3, [r0]
   2d5b8:	str	r0, [r9, #48]	; 0x30
   2d5bc:	add	r4, r0, #16
   2d5c0:	str	r4, [r9, #52]	; 0x34
   2d5c4:	add	r0, r0, #65536	; 0x10000
   2d5c8:	str	r0, [r9, #44]	; 0x2c
   2d5cc:	b	2d548 <__flatcc_fb_parse@@Base+0x237c>
   2d5d0:	ldr	r3, [pc, #2612]	; 2e00c <__flatcc_fb_parse@@Base+0x2e40>
   2d5d4:	ldr	r3, [r3]
   2d5d8:	mov	r2, #34	; 0x22
   2d5dc:	mov	r1, #1
   2d5e0:	ldr	r0, [pc, #2600]	; 2e010 <__flatcc_fb_parse@@Base+0x2e44>
   2d5e4:	bl	13f18 <fwrite@plt>
   2d5e8:	mov	r0, #1
   2d5ec:	bl	13f6c <exit@plt>
   2d5f0:	mov	r0, r9
   2d5f4:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d5f8:	ldr	r4, [r9, #52]	; 0x34
   2d5fc:	add	r2, r4, #128	; 0x80
   2d600:	ldr	r3, [r9, #44]	; 0x2c
   2d604:	cmp	r2, r3
   2d608:	bhi	2d6cc <__flatcc_fb_parse@@Base+0x2500>
   2d60c:	ldr	r3, [r9, #52]	; 0x34
   2d610:	add	r3, r3, #128	; 0x80
   2d614:	str	r3, [r9, #52]	; 0x34
   2d618:	mov	r7, r4
   2d61c:	ldr	r3, [r9, #392]	; 0x188
   2d620:	str	r3, [r4]
   2d624:	mov	r3, #3
   2d628:	strh	r3, [r4, #8]
   2d62c:	str	r4, [r9, #392]	; 0x188
   2d630:	ldr	r3, [r9, #544]	; 0x220
   2d634:	str	r3, [r4, #12]
   2d638:	add	r3, r9, #36	; 0x24
   2d63c:	str	r3, [sp, #8]
   2d640:	mov	r0, r3
   2d644:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2d648:	ldr	r3, [r9, #36]	; 0x24
   2d64c:	str	r3, [r4, #32]
   2d650:	mov	r3, #0
   2d654:	str	r3, [r9, #36]	; 0x24
   2d658:	ldr	r5, [r9, #40]	; 0x28
   2d65c:	ldr	r3, [r5, #16]
   2d660:	cmp	r3, #9
   2d664:	bne	2d720 <__flatcc_fb_parse@@Base+0x2554>
   2d668:	mov	r0, r9
   2d66c:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d670:	str	r5, [r4, #4]
   2d674:	cmp	r5, #0
   2d678:	beq	2d830 <__flatcc_fb_parse@@Base+0x2664>
   2d67c:	ldr	r4, [r9, #40]	; 0x28
   2d680:	ldr	r3, [r4, #16]
   2d684:	cmp	r3, #58	; 0x3a
   2d688:	beq	2d740 <__flatcc_fb_parse@@Base+0x2574>
   2d68c:	mov	r0, r9
   2d690:	bl	2a600 <__flatcc_error_report@@Base+0xe38>
   2d694:	str	r0, [r7, #28]
   2d698:	ldr	r3, [r9, #40]	; 0x28
   2d69c:	mov	r4, r3
   2d6a0:	str	r3, [sp, #12]
   2d6a4:	ldr	r3, [r3, #16]
   2d6a8:	cmp	r3, #123	; 0x7b
   2d6ac:	bne	2d804 <__flatcc_fb_parse@@Base+0x2638>
   2d6b0:	mov	r0, r9
   2d6b4:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d6b8:	cmp	r4, #0
   2d6bc:	beq	2d830 <__flatcc_fb_parse@@Base+0x2664>
   2d6c0:	mov	sl, #5
   2d6c4:	mov	r6, #0
   2d6c8:	b	2d8e0 <__flatcc_fb_parse@@Base+0x2714>
   2d6cc:	mov	r1, #1
   2d6d0:	mov	r0, #65536	; 0x10000
   2d6d4:	bl	13ea0 <calloc@plt>
   2d6d8:	cmp	r0, #0
   2d6dc:	beq	2d700 <__flatcc_fb_parse@@Base+0x2534>
   2d6e0:	ldr	r3, [r9, #48]	; 0x30
   2d6e4:	str	r3, [r0]
   2d6e8:	str	r0, [r9, #48]	; 0x30
   2d6ec:	add	r4, r0, #16
   2d6f0:	str	r4, [r9, #52]	; 0x34
   2d6f4:	add	r0, r0, #65536	; 0x10000
   2d6f8:	str	r0, [r9, #44]	; 0x2c
   2d6fc:	b	2d60c <__flatcc_fb_parse@@Base+0x2440>
   2d700:	ldr	r3, [pc, #2308]	; 2e00c <__flatcc_fb_parse@@Base+0x2e40>
   2d704:	ldr	r3, [r3]
   2d708:	mov	r2, #34	; 0x22
   2d70c:	mov	r1, #1
   2d710:	ldr	r0, [pc, #2296]	; 2e010 <__flatcc_fb_parse@@Base+0x2e44>
   2d714:	bl	13f18 <fwrite@plt>
   2d718:	mov	r0, #1
   2d71c:	bl	13f6c <exit@plt>
   2d720:	mov	r3, #0
   2d724:	ldr	r2, [pc, #2288]	; 2e01c <__flatcc_fb_parse@@Base+0x2e50>
   2d728:	mov	r1, r5
   2d72c:	mov	r0, r9
   2d730:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d734:	mov	r3, #0
   2d738:	str	r3, [r4, #4]
   2d73c:	b	2d830 <__flatcc_fb_parse@@Base+0x2664>
   2d740:	mov	r0, r9
   2d744:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d748:	cmp	r4, #0
   2d74c:	beq	2d68c <__flatcc_fb_parse@@Base+0x24c0>
   2d750:	add	r1, r7, #40	; 0x28
   2d754:	mov	r0, r9
   2d758:	bl	29b70 <__flatcc_error_report@@Base+0x3a8>
   2d75c:	ldrh	r3, [r7, #48]	; 0x30
   2d760:	cmp	r3, #8
   2d764:	beq	2d780 <__flatcc_fb_parse@@Base+0x25b4>
   2d768:	mov	r3, #0
   2d76c:	ldr	r2, [pc, #2220]	; 2e020 <__flatcc_fb_parse@@Base+0x2e54>
   2d770:	ldr	r1, [r7, #40]	; 0x28
   2d774:	mov	r0, r9
   2d778:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d77c:	b	2d68c <__flatcc_fb_parse@@Base+0x24c0>
   2d780:	ldr	r1, [r7, #40]	; 0x28
   2d784:	ldr	r3, [r1, #16]
   2d788:	add	r3, r3, #996	; 0x3e4
   2d78c:	cmp	r3, #21
   2d790:	ldrls	pc, [pc, r3, lsl #2]
   2d794:	b	2d68c <__flatcc_fb_parse@@Base+0x24c0>
   2d798:	strdeq	sp, [r2], -r0
   2d79c:	strdeq	sp, [r2], -r0
   2d7a0:	andeq	sp, r2, ip, lsl #13
   2d7a4:	andeq	sp, r2, ip, lsl #13
   2d7a8:	andeq	sp, r2, ip, lsl #13
   2d7ac:	andeq	sp, r2, ip, lsl #13
   2d7b0:	andeq	sp, r2, ip, lsl #13
   2d7b4:	andeq	sp, r2, ip, lsl #13
   2d7b8:	andeq	sp, r2, ip, lsl #13
   2d7bc:	andeq	sp, r2, ip, lsl #13
   2d7c0:	andeq	sp, r2, ip, lsl #13
   2d7c4:	strdeq	sp, [r2], -r0
   2d7c8:	andeq	sp, r2, ip, lsl #13
   2d7cc:	andeq	sp, r2, ip, lsl #13
   2d7d0:	andeq	sp, r2, ip, lsl #13
   2d7d4:	andeq	sp, r2, ip, lsl #13
   2d7d8:	andeq	sp, r2, ip, lsl #13
   2d7dc:	andeq	sp, r2, ip, lsl #13
   2d7e0:	andeq	sp, r2, ip, lsl #13
   2d7e4:	andeq	sp, r2, ip, lsl #13
   2d7e8:	andeq	sp, r2, ip, lsl #13
   2d7ec:	strdeq	sp, [r2], -r0
   2d7f0:	mov	r3, #0
   2d7f4:	ldr	r2, [pc, #2084]	; 2e020 <__flatcc_fb_parse@@Base+0x2e54>
   2d7f8:	mov	r0, r9
   2d7fc:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d800:	b	2d68c <__flatcc_fb_parse@@Base+0x24c0>
   2d804:	mov	r3, #0
   2d808:	ldr	r2, [pc, #2068]	; 2e024 <__flatcc_fb_parse@@Base+0x2e58>
   2d80c:	ldr	r1, [sp, #12]
   2d810:	mov	r0, r9
   2d814:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d818:	b	2d830 <__flatcc_fb_parse@@Base+0x2664>
   2d81c:	mov	r3, #0
   2d820:	ldr	r2, [pc, #2048]	; 2e028 <__flatcc_fb_parse@@Base+0x2e5c>
   2d824:	mov	r1, r5
   2d828:	mov	r0, r9
   2d82c:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2d830:	mov	r2, #1
   2d834:	mov	r1, #125	; 0x7d
   2d838:	mov	r0, r9
   2d83c:	bl	29698 <__flatcc_fb_default_error_out@@Base+0x224>
   2d840:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d844:	ldr	r3, [pc, #1984]	; 2e00c <__flatcc_fb_parse@@Base+0x2e40>
   2d848:	ldr	r3, [r3]
   2d84c:	mov	r2, #34	; 0x22
   2d850:	mov	r1, #1
   2d854:	ldr	r0, [pc, #1972]	; 2e010 <__flatcc_fb_parse@@Base+0x2e44>
   2d858:	bl	13f18 <fwrite@plt>
   2d85c:	mov	r0, #1
   2d860:	bl	13f6c <exit@plt>
   2d864:	ldr	r3, [r9, #52]	; 0x34
   2d868:	add	r3, r3, #128	; 0x80
   2d86c:	str	r3, [r9, #52]	; 0x34
   2d870:	mov	r8, r4
   2d874:	ldr	r3, [r7, #20]
   2d878:	str	r3, [r4]
   2d87c:	strh	sl, [r4, #8]
   2d880:	str	r4, [r7, #20]
   2d884:	ldr	r0, [sp, #8]
   2d888:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2d88c:	ldr	r3, [r9, #36]	; 0x24
   2d890:	str	r3, [r4, #68]	; 0x44
   2d894:	str	r6, [r9, #36]	; 0x24
   2d898:	str	r5, [r4, #4]
   2d89c:	ldr	r4, [r9, #40]	; 0x28
   2d8a0:	ldr	r3, [r4, #16]
   2d8a4:	cmp	r3, #61	; 0x3d
   2d8a8:	beq	2d954 <__flatcc_fb_parse@@Base+0x2788>
   2d8ac:	ldr	r4, [r9, #40]	; 0x28
   2d8b0:	ldr	r3, [r4, #16]
   2d8b4:	cmp	r3, #44	; 0x2c
   2d8b8:	bne	2d97c <__flatcc_fb_parse@@Base+0x27b0>
   2d8bc:	mov	r0, r9
   2d8c0:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d8c4:	cmp	r4, #0
   2d8c8:	beq	2d97c <__flatcc_fb_parse@@Base+0x27b0>
   2d8cc:	ldr	r3, [r9, #40]	; 0x28
   2d8d0:	ldr	r3, [r3, #16]
   2d8d4:	cmp	r3, #125	; 0x7d
   2d8d8:	beq	2d97c <__flatcc_fb_parse@@Base+0x27b0>
   2d8dc:	str	r6, [r9, #36]	; 0x24
   2d8e0:	ldr	r5, [r9, #40]	; 0x28
   2d8e4:	ldr	r3, [r5, #16]
   2d8e8:	cmp	r3, #9
   2d8ec:	bne	2d81c <__flatcc_fb_parse@@Base+0x2650>
   2d8f0:	mov	r0, r9
   2d8f4:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d8f8:	cmp	r5, #0
   2d8fc:	beq	2d830 <__flatcc_fb_parse@@Base+0x2664>
   2d900:	ldr	r3, [r9, #108]	; 0x6c
   2d904:	cmp	r3, #9
   2d908:	bgt	2d830 <__flatcc_fb_parse@@Base+0x2664>
   2d90c:	ldr	r4, [r9, #52]	; 0x34
   2d910:	add	r2, r4, #128	; 0x80
   2d914:	ldr	r3, [r9, #44]	; 0x2c
   2d918:	cmp	r2, r3
   2d91c:	bls	2d864 <__flatcc_fb_parse@@Base+0x2698>
   2d920:	mov	r1, #1
   2d924:	mov	r0, #65536	; 0x10000
   2d928:	bl	13ea0 <calloc@plt>
   2d92c:	cmp	r0, #0
   2d930:	beq	2d844 <__flatcc_fb_parse@@Base+0x2678>
   2d934:	ldr	r3, [r9, #48]	; 0x30
   2d938:	str	r3, [r0]
   2d93c:	str	r0, [r9, #48]	; 0x30
   2d940:	add	r4, r0, #16
   2d944:	str	r4, [r9, #52]	; 0x34
   2d948:	add	r0, r0, #65536	; 0x10000
   2d94c:	str	r0, [r9, #44]	; 0x2c
   2d950:	b	2d864 <__flatcc_fb_parse@@Base+0x2698>
   2d954:	mov	r0, r9
   2d958:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d95c:	cmp	r4, #0
   2d960:	beq	2d8ac <__flatcc_fb_parse@@Base+0x26e0>
   2d964:	ldr	r3, [pc, #1728]	; 2e02c <__flatcc_fb_parse@@Base+0x2e60>
   2d968:	mov	r2, r6
   2d96c:	add	r1, r8, #48	; 0x30
   2d970:	mov	r0, r9
   2d974:	bl	29f58 <__flatcc_error_report@@Base+0x790>
   2d978:	b	2d8ac <__flatcc_fb_parse@@Base+0x26e0>
   2d97c:	ldr	r3, [sp, #12]
   2d980:	ldr	r2, [pc, #1704]	; 2e030 <__flatcc_fb_parse@@Base+0x2e64>
   2d984:	mov	r1, #125	; 0x7d
   2d988:	mov	r0, r9
   2d98c:	bl	29b30 <__flatcc_error_report@@Base+0x368>
   2d990:	add	r0, r7, #20
   2d994:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2d998:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2d99c:	mov	r0, r9
   2d9a0:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2d9a4:	ldr	r4, [r9, #52]	; 0x34
   2d9a8:	add	r2, r4, #128	; 0x80
   2d9ac:	ldr	r3, [r9, #44]	; 0x2c
   2d9b0:	cmp	r2, r3
   2d9b4:	bhi	2da84 <__flatcc_fb_parse@@Base+0x28b8>
   2d9b8:	ldr	r3, [r9, #52]	; 0x34
   2d9bc:	add	r3, r3, #128	; 0x80
   2d9c0:	str	r3, [r9, #52]	; 0x34
   2d9c4:	mov	r8, r4
   2d9c8:	ldr	r3, [r9, #392]	; 0x188
   2d9cc:	str	r3, [r4]
   2d9d0:	mov	r3, #4
   2d9d4:	strh	r3, [r4, #8]
   2d9d8:	str	r4, [r9, #392]	; 0x188
   2d9dc:	ldr	r3, [r9, #544]	; 0x220
   2d9e0:	str	r3, [r4, #12]
   2d9e4:	add	r3, r9, #36	; 0x24
   2d9e8:	str	r3, [sp, #8]
   2d9ec:	mov	r0, r3
   2d9f0:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2d9f4:	ldr	r3, [r9, #36]	; 0x24
   2d9f8:	str	r3, [r4, #32]
   2d9fc:	mov	r3, #0
   2da00:	str	r3, [r9, #36]	; 0x24
   2da04:	ldr	r5, [r9, #40]	; 0x28
   2da08:	ldr	r3, [r5, #16]
   2da0c:	cmp	r3, #9
   2da10:	bne	2dad8 <__flatcc_fb_parse@@Base+0x290c>
   2da14:	mov	r0, r9
   2da18:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2da1c:	str	r5, [r4, #4]
   2da20:	cmp	r5, #0
   2da24:	beq	2daf4 <__flatcc_fb_parse@@Base+0x2928>
   2da28:	mov	r0, r9
   2da2c:	bl	2a600 <__flatcc_error_report@@Base+0xe38>
   2da30:	str	r0, [r4, #28]
   2da34:	ldr	r3, [r9, #40]	; 0x28
   2da38:	mov	r4, r3
   2da3c:	str	r3, [sp, #12]
   2da40:	ldr	r3, [r3, #16]
   2da44:	cmp	r3, #123	; 0x7b
   2da48:	bne	2db48 <__flatcc_fb_parse@@Base+0x297c>
   2da4c:	mov	r0, r9
   2da50:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2da54:	cmp	r4, #0
   2da58:	beq	2daf4 <__flatcc_fb_parse@@Base+0x2928>
   2da5c:	ldr	r6, [r9, #40]	; 0x28
   2da60:	ldr	r3, [r6, #16]
   2da64:	cmp	r3, #9
   2da68:	bne	2db60 <__flatcc_fb_parse@@Base+0x2994>
   2da6c:	ldr	r3, [r9, #108]	; 0x6c
   2da70:	cmp	r3, #9
   2da74:	bgt	2db14 <__flatcc_fb_parse@@Base+0x2948>
   2da78:	mov	sl, #5
   2da7c:	mov	r7, #0
   2da80:	b	2dc54 <__flatcc_fb_parse@@Base+0x2a88>
   2da84:	mov	r1, #1
   2da88:	mov	r0, #65536	; 0x10000
   2da8c:	bl	13ea0 <calloc@plt>
   2da90:	cmp	r0, #0
   2da94:	beq	2dab8 <__flatcc_fb_parse@@Base+0x28ec>
   2da98:	ldr	r3, [r9, #48]	; 0x30
   2da9c:	str	r3, [r0]
   2daa0:	str	r0, [r9, #48]	; 0x30
   2daa4:	add	r4, r0, #16
   2daa8:	str	r4, [r9, #52]	; 0x34
   2daac:	add	r0, r0, #65536	; 0x10000
   2dab0:	str	r0, [r9, #44]	; 0x2c
   2dab4:	b	2d9b8 <__flatcc_fb_parse@@Base+0x27ec>
   2dab8:	ldr	r3, [pc, #1356]	; 2e00c <__flatcc_fb_parse@@Base+0x2e40>
   2dabc:	ldr	r3, [r3]
   2dac0:	mov	r2, #34	; 0x22
   2dac4:	mov	r1, #1
   2dac8:	ldr	r0, [pc, #1344]	; 2e010 <__flatcc_fb_parse@@Base+0x2e44>
   2dacc:	bl	13f18 <fwrite@plt>
   2dad0:	mov	r0, #1
   2dad4:	bl	13f6c <exit@plt>
   2dad8:	mov	r3, #0
   2dadc:	ldr	r2, [pc, #1360]	; 2e034 <__flatcc_fb_parse@@Base+0x2e68>
   2dae0:	mov	r1, r5
   2dae4:	mov	r0, r9
   2dae8:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2daec:	mov	r3, #0
   2daf0:	str	r3, [r4, #4]
   2daf4:	ldr	r3, [r9, #40]	; 0x28
   2daf8:	ldr	r3, [r3, #16]
   2dafc:	cmp	r3, #0
   2db00:	beq	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2db04:	cmp	r3, #59	; 0x3b
   2db08:	beq	2de00 <__flatcc_fb_parse@@Base+0x2c34>
   2db0c:	cmp	r3, #125	; 0x7d
   2db10:	beq	2db3c <__flatcc_fb_parse@@Base+0x2970>
   2db14:	mov	r0, r9
   2db18:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2db1c:	ldr	r3, [r9, #40]	; 0x28
   2db20:	ldr	r3, [r3, #16]
   2db24:	cmp	r3, #0
   2db28:	beq	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2db2c:	cmp	r3, #59	; 0x3b
   2db30:	beq	2de00 <__flatcc_fb_parse@@Base+0x2c34>
   2db34:	cmp	r3, #125	; 0x7d
   2db38:	bne	2db14 <__flatcc_fb_parse@@Base+0x2948>
   2db3c:	mov	r3, #0
   2db40:	str	r3, [r9, #36]	; 0x24
   2db44:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2db48:	mov	r3, #0
   2db4c:	ldr	r2, [pc, #1252]	; 2e038 <__flatcc_fb_parse@@Base+0x2e6c>
   2db50:	ldr	r1, [sp, #12]
   2db54:	mov	r0, r9
   2db58:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2db5c:	b	2daf4 <__flatcc_fb_parse@@Base+0x2928>
   2db60:	mov	r3, #0
   2db64:	ldr	r2, [pc, #1232]	; 2e03c <__flatcc_fb_parse@@Base+0x2e70>
   2db68:	mov	r1, r6
   2db6c:	mov	r0, r9
   2db70:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2db74:	b	2daf4 <__flatcc_fb_parse@@Base+0x2928>
   2db78:	mov	r1, #1
   2db7c:	mov	r0, #65536	; 0x10000
   2db80:	bl	13ea0 <calloc@plt>
   2db84:	cmp	r0, #0
   2db88:	beq	2dbac <__flatcc_fb_parse@@Base+0x29e0>
   2db8c:	ldr	r3, [r9, #48]	; 0x30
   2db90:	str	r3, [r0]
   2db94:	str	r0, [r9, #48]	; 0x30
   2db98:	add	r5, r0, #16
   2db9c:	str	r5, [r9, #52]	; 0x34
   2dba0:	add	r0, r0, #65536	; 0x10000
   2dba4:	str	r0, [r9, #44]	; 0x2c
   2dba8:	b	2dc68 <__flatcc_fb_parse@@Base+0x2a9c>
   2dbac:	ldr	r3, [pc, #1112]	; 2e00c <__flatcc_fb_parse@@Base+0x2e40>
   2dbb0:	ldr	r3, [r3]
   2dbb4:	mov	r2, #34	; 0x22
   2dbb8:	mov	r1, #1
   2dbbc:	ldr	r0, [pc, #1100]	; 2e010 <__flatcc_fb_parse@@Base+0x2e44>
   2dbc0:	bl	13f18 <fwrite@plt>
   2dbc4:	mov	r0, #1
   2dbc8:	bl	13f6c <exit@plt>
   2dbcc:	mov	r3, r2
   2dbd0:	str	r3, [sp, #20]
   2dbd4:	ldr	r2, [r3]
   2dbd8:	cmp	r2, #0
   2dbdc:	bne	2dbcc <__flatcc_fb_parse@@Base+0x2a00>
   2dbe0:	ldr	r3, [r3, #4]
   2dbe4:	str	r3, [r4, #4]
   2dbe8:	ldr	r5, [r9, #40]	; 0x28
   2dbec:	ldr	r3, [r5, #16]
   2dbf0:	cmp	r3, #58	; 0x3a
   2dbf4:	beq	2dccc <__flatcc_fb_parse@@Base+0x2b00>
   2dbf8:	ldr	r5, [r9, #40]	; 0x28
   2dbfc:	ldr	r3, [r5, #16]
   2dc00:	cmp	r3, #61	; 0x3d
   2dc04:	beq	2dd10 <__flatcc_fb_parse@@Base+0x2b44>
   2dc08:	ldr	r4, [r9, #40]	; 0x28
   2dc0c:	ldr	r3, [r4, #16]
   2dc10:	cmp	r3, #44	; 0x2c
   2dc14:	bne	2dd38 <__flatcc_fb_parse@@Base+0x2b6c>
   2dc18:	mov	r0, r9
   2dc1c:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2dc20:	cmp	r4, #0
   2dc24:	beq	2dd38 <__flatcc_fb_parse@@Base+0x2b6c>
   2dc28:	ldr	r6, [r9, #40]	; 0x28
   2dc2c:	ldr	r3, [r6, #16]
   2dc30:	cmp	r3, #125	; 0x7d
   2dc34:	beq	2dd38 <__flatcc_fb_parse@@Base+0x2b6c>
   2dc38:	str	r7, [r9, #36]	; 0x24
   2dc3c:	ldr	r3, [r6, #16]
   2dc40:	cmp	r3, #9
   2dc44:	bne	2db60 <__flatcc_fb_parse@@Base+0x2994>
   2dc48:	ldr	r3, [r9, #108]	; 0x6c
   2dc4c:	cmp	r3, #9
   2dc50:	bgt	2db14 <__flatcc_fb_parse@@Base+0x2948>
   2dc54:	ldr	r5, [r9, #52]	; 0x34
   2dc58:	add	r2, r5, #128	; 0x80
   2dc5c:	ldr	r3, [r9, #44]	; 0x2c
   2dc60:	cmp	r2, r3
   2dc64:	bhi	2db78 <__flatcc_fb_parse@@Base+0x29ac>
   2dc68:	ldr	r3, [r9, #52]	; 0x34
   2dc6c:	add	r3, r3, #128	; 0x80
   2dc70:	str	r3, [r9, #52]	; 0x34
   2dc74:	mov	r4, r5
   2dc78:	ldr	r3, [r8, #20]
   2dc7c:	str	r3, [r5]
   2dc80:	strh	sl, [r5, #8]
   2dc84:	str	r5, [r8, #20]
   2dc88:	ldr	r0, [sp, #8]
   2dc8c:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2dc90:	ldr	r3, [r9, #36]	; 0x24
   2dc94:	str	r3, [r5, #68]	; 0x44
   2dc98:	str	r7, [r9, #36]	; 0x24
   2dc9c:	add	r1, sp, #20
   2dca0:	mov	r0, r9
   2dca4:	bl	299ac <__flatcc_error_report@@Base+0x1e4>
   2dca8:	ldr	r2, [sp, #20]
   2dcac:	str	r2, [r5, #16]
   2dcb0:	mov	r3, #12
   2dcb4:	strh	r3, [r5, #24]
   2dcb8:	ldr	r3, [r2]
   2dcbc:	cmp	r3, #0
   2dcc0:	bne	2dbd0 <__flatcc_fb_parse@@Base+0x2a04>
   2dcc4:	mov	r3, r2
   2dcc8:	b	2dbe0 <__flatcc_fb_parse@@Base+0x2a14>
   2dccc:	mov	r0, r9
   2dcd0:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2dcd4:	cmp	r5, #0
   2dcd8:	beq	2dbf8 <__flatcc_fb_parse@@Base+0x2a2c>
   2dcdc:	ldr	r3, [r4, #16]
   2dce0:	ldr	r3, [r3]
   2dce4:	cmp	r3, #0
   2dce8:	beq	2dd00 <__flatcc_fb_parse@@Base+0x2b34>
   2dcec:	mov	r3, r7
   2dcf0:	ldr	r2, [pc, #840]	; 2e040 <__flatcc_fb_parse@@Base+0x2e74>
   2dcf4:	mov	r1, r6
   2dcf8:	mov	r0, r9
   2dcfc:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2dd00:	add	r1, r4, #16
   2dd04:	mov	r0, r9
   2dd08:	bl	29b70 <__flatcc_error_report@@Base+0x3a8>
   2dd0c:	b	2dbf8 <__flatcc_fb_parse@@Base+0x2a2c>
   2dd10:	mov	r0, r9
   2dd14:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2dd18:	cmp	r5, #0
   2dd1c:	beq	2dc08 <__flatcc_fb_parse@@Base+0x2a3c>
   2dd20:	ldr	r3, [pc, #772]	; 2e02c <__flatcc_fb_parse@@Base+0x2e60>
   2dd24:	mov	r2, r7
   2dd28:	add	r1, r4, #48	; 0x30
   2dd2c:	mov	r0, r9
   2dd30:	bl	29f58 <__flatcc_error_report@@Base+0x790>
   2dd34:	b	2dc08 <__flatcc_fb_parse@@Base+0x2a3c>
   2dd38:	ldr	r3, [sp, #12]
   2dd3c:	ldr	r2, [pc, #768]	; 2e044 <__flatcc_fb_parse@@Base+0x2e78>
   2dd40:	mov	r1, #125	; 0x7d
   2dd44:	mov	r0, r9
   2dd48:	bl	29b30 <__flatcc_error_report@@Base+0x368>
   2dd4c:	add	r0, r8, #20
   2dd50:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2dd54:	ldr	r4, [r9, #52]	; 0x34
   2dd58:	add	r2, r4, #128	; 0x80
   2dd5c:	ldr	r3, [r9, #44]	; 0x2c
   2dd60:	cmp	r2, r3
   2dd64:	bhi	2ddac <__flatcc_fb_parse@@Base+0x2be0>
   2dd68:	ldr	r3, [r9, #52]	; 0x34
   2dd6c:	add	r3, r3, #128	; 0x80
   2dd70:	str	r3, [r9, #52]	; 0x34
   2dd74:	ldr	r3, [r8, #20]
   2dd78:	str	r3, [r4]
   2dd7c:	mov	r3, #5
   2dd80:	strh	r3, [r4, #8]
   2dd84:	str	r4, [r8, #20]
   2dd88:	ldr	r0, [sp, #8]
   2dd8c:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2dd90:	ldr	r3, [r9, #36]	; 0x24
   2dd94:	str	r3, [r4, #68]	; 0x44
   2dd98:	mov	r3, #0
   2dd9c:	str	r3, [r9, #36]	; 0x24
   2dda0:	add	r3, r9, #68	; 0x44
   2dda4:	str	r3, [r4, #4]
   2dda8:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2ddac:	mov	r1, #1
   2ddb0:	mov	r0, #65536	; 0x10000
   2ddb4:	bl	13ea0 <calloc@plt>
   2ddb8:	cmp	r0, #0
   2ddbc:	beq	2dde0 <__flatcc_fb_parse@@Base+0x2c14>
   2ddc0:	ldr	r3, [r9, #48]	; 0x30
   2ddc4:	str	r3, [r0]
   2ddc8:	str	r0, [r9, #48]	; 0x30
   2ddcc:	add	r4, r0, #16
   2ddd0:	str	r4, [r9, #52]	; 0x34
   2ddd4:	add	r0, r0, #65536	; 0x10000
   2ddd8:	str	r0, [r9, #44]	; 0x2c
   2dddc:	b	2dd68 <__flatcc_fb_parse@@Base+0x2b9c>
   2dde0:	ldr	r3, [pc, #548]	; 2e00c <__flatcc_fb_parse@@Base+0x2e40>
   2dde4:	ldr	r3, [r3]
   2dde8:	mov	r2, #34	; 0x22
   2ddec:	mov	r1, #1
   2ddf0:	ldr	r0, [pc, #536]	; 2e010 <__flatcc_fb_parse@@Base+0x2e44>
   2ddf4:	bl	13f18 <fwrite@plt>
   2ddf8:	mov	r0, #1
   2ddfc:	bl	13f6c <exit@plt>
   2de00:	mov	r0, r9
   2de04:	bl	29584 <__flatcc_fb_default_error_out@@Base+0x110>
   2de08:	mov	r3, #0
   2de0c:	str	r3, [r9, #36]	; 0x24
   2de10:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2de14:	mov	r3, #0
   2de18:	ldr	r2, [pc, #552]	; 2e048 <__flatcc_fb_parse@@Base+0x2e7c>
   2de1c:	mov	r0, r9
   2de20:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2de24:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2de28:	mov	r3, #1
   2de2c:	str	r3, [sp, #4]
   2de30:	ldr	r3, [pc, #532]	; 2e04c <__flatcc_fb_parse@@Base+0x2e80>
   2de34:	str	r3, [sp]
   2de38:	mov	r3, #0
   2de3c:	ldr	r2, [pc, #524]	; 2e050 <__flatcc_fb_parse@@Base+0x2e84>
   2de40:	mov	r0, r9
   2de44:	bl	297c8 <__flatcc_error_report@@Base>
   2de48:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2de4c:	mov	r3, #5
   2de50:	str	r3, [sp, #4]
   2de54:	ldr	r3, [pc, #504]	; 2e054 <__flatcc_fb_parse@@Base+0x2e88>
   2de58:	str	r3, [sp]
   2de5c:	mov	r3, #0
   2de60:	ldr	r2, [pc, #496]	; 2e058 <__flatcc_fb_parse@@Base+0x2e8c>
   2de64:	mov	r0, r9
   2de68:	bl	297c8 <__flatcc_error_report@@Base>
   2de6c:	b	2d1fc <__flatcc_fb_parse@@Base+0x2030>
   2de70:	ldr	r3, [r9, #108]	; 0x6c
   2de74:	cmp	r3, #0
   2de78:	bne	2dec8 <__flatcc_fb_parse@@Base+0x2cfc>
   2de7c:	ldr	r2, [pc, #472]	; 2e05c <__flatcc_fb_parse@@Base+0x2e90>
   2de80:	mov	r1, fp
   2de84:	mov	r0, r9
   2de88:	bl	2998c <__flatcc_error_report@@Base+0x1c4>
   2de8c:	b	2dec8 <__flatcc_fb_parse@@Base+0x2cfc>
   2de90:	ldr	r3, [r9, #356]	; 0x164
   2de94:	cmp	r3, #0
   2de98:	beq	2debc <__flatcc_fb_parse@@Base+0x2cf0>
   2de9c:	mov	r1, #0
   2dea0:	b	2dea8 <__flatcc_fb_parse@@Base+0x2cdc>
   2dea4:	mov	r3, r2
   2dea8:	ldr	r2, [r3]
   2deac:	str	r1, [r3]
   2deb0:	mov	r1, r3
   2deb4:	cmp	r2, #0
   2deb8:	bne	2dea4 <__flatcc_fb_parse@@Base+0x2cd8>
   2debc:	str	r3, [r9, #356]	; 0x164
   2dec0:	add	r0, r9, #392	; 0x188
   2dec4:	bl	29440 <__flatcc_fb_read_file@@Base+0xf0>
   2dec8:	ldr	r0, [r9, #108]	; 0x6c
   2decc:	add	sp, sp, #28
   2ded0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ded4:	cmp	r6, r7
   2ded8:	beq	2b484 <__flatcc_fb_parse@@Base+0x2b8>
   2dedc:	ldr	r3, [r9, #32]
   2dee0:	cmp	r3, #0
   2dee4:	beq	2b478 <__flatcc_fb_parse@@Base+0x2ac>
   2dee8:	mov	r4, r6
   2deec:	mov	r3, r4
   2def0:	mov	r2, r7
   2def4:	mov	r1, r8
   2def8:	mov	r0, r9
   2defc:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2df00:	cmp	r6, r4
   2df04:	beq	2b478 <__flatcc_fb_parse@@Base+0x2ac>
   2df08:	ldrb	r3, [r4]
   2df0c:	cmp	r3, #0
   2df10:	beq	2b480 <__flatcc_fb_parse@@Base+0x2b4>
   2df14:	cmp	r3, #13
   2df18:	cmpne	r3, #10
   2df1c:	beq	2b510 <__flatcc_fb_parse@@Base+0x344>
   2df20:	add	r7, r5, #2
   2df24:	cmp	r3, #9
   2df28:	cmpne	r3, #32
   2df2c:	bne	2b534 <__flatcc_fb_parse@@Base+0x368>
   2df30:	ldr	r3, [r9, #32]
   2df34:	cmp	r3, #0
   2df38:	bne	2b51c <__flatcc_fb_parse@@Base+0x350>
   2df3c:	sub	r5, r7, #1
   2df40:	b	2b444 <__flatcc_fb_parse@@Base+0x278>
   2df44:	cmp	r5, r7
   2df48:	beq	2df90 <__flatcc_fb_parse@@Base+0x2dc4>
   2df4c:	ldr	r3, [r9, #32]
   2df50:	cmp	r3, #0
   2df54:	beq	2df90 <__flatcc_fb_parse@@Base+0x2dc4>
   2df58:	b	2df74 <__flatcc_fb_parse@@Base+0x2da8>
   2df5c:	cmp	r6, r5
   2df60:	beq	2dfec <__flatcc_fb_parse@@Base+0x2e20>
   2df64:	ldr	r3, [r9, #32]
   2df68:	cmp	r3, #0
   2df6c:	beq	2b570 <__flatcc_fb_parse@@Base+0x3a4>
   2df70:	mov	r7, r6
   2df74:	mov	r3, r7
   2df78:	mov	r2, r5
   2df7c:	mov	r1, r4
   2df80:	mov	r0, r9
   2df84:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2df88:	cmp	r6, r7
   2df8c:	beq	2b570 <__flatcc_fb_parse@@Base+0x3a4>
   2df90:	ldrb	r3, [r7]
   2df94:	cmp	r3, #0
   2df98:	beq	2dff0 <__flatcc_fb_parse@@Base+0x2e24>
   2df9c:	cmp	r3, #10
   2dfa0:	beq	2b578 <__flatcc_fb_parse@@Base+0x3ac>
   2dfa4:	cmp	r3, #13
   2dfa8:	beq	2b5e0 <__flatcc_fb_parse@@Base+0x414>
   2dfac:	cmp	r3, #127	; 0x7f
   2dfb0:	cmpne	r3, #31
   2dfb4:	bhi	2b624 <__flatcc_fb_parse@@Base+0x458>
   2dfb8:	add	r5, r7, #1
   2dfbc:	cmp	r3, #9
   2dfc0:	cmpne	r3, #32
   2dfc4:	bne	2b60c <__flatcc_fb_parse@@Base+0x440>
   2dfc8:	ldr	r3, [r9, #32]
   2dfcc:	cmp	r3, #0
   2dfd0:	beq	2b5a0 <__flatcc_fb_parse@@Base+0x3d4>
   2dfd4:	mov	r3, r5
   2dfd8:	mov	r2, r7
   2dfdc:	mov	r1, r4
   2dfe0:	mov	r0, r9
   2dfe4:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2dfe8:	b	2b5a0 <__flatcc_fb_parse@@Base+0x3d4>
   2dfec:	mov	r7, r5
   2dff0:	mov	r3, r7
   2dff4:	mov	r2, r7
   2dff8:	mov	r1, #27
   2dffc:	mov	r0, r9
   2e000:	bl	29494 <__flatcc_fb_default_error_out@@Base+0x20>
   2e004:	b	2b498 <__flatcc_fb_parse@@Base+0x2cc>
   2e008:			; <UNDEFINED> instruction: 0x00052ebc
   2e00c:	andeq	r6, r6, r8, lsr #1
   2e010:	muleq	r3, r4, r3
   2e014:			; <UNDEFINED> instruction: 0xfffffc29
   2e018:			; <UNDEFINED> instruction: 0xfffffc39
   2e01c:	ldrdeq	r2, [r5], -r4
   2e020:	strdeq	r2, [r5], -ip
   2e024:	andeq	r2, r5, r4, lsl pc
   2e028:	andeq	r2, r5, r4, lsr pc
   2e02c:	andeq	r2, r5, r0, asr pc
   2e030:	andeq	r2, r5, ip, ror #30
   2e034:	muleq	r5, r0, pc	; <UNPREDICTABLE>
   2e038:			; <UNDEFINED> instruction: 0x00052fb8
   2e03c:	ldrdeq	r2, [r5], -r8
   2e040:	strdeq	r2, [r5], -r4
   2e044:	andeq	r3, r5, r0, lsr r0
   2e048:	andeq	r3, r5, ip, lsl #1
   2e04c:	andeq	r2, r5, r8, asr r7
   2e050:	strdeq	r3, [r5], -r0
   2e054:	andeq	r3, r5, r4, ror #2
   2e058:	andeq	r3, r5, ip, asr #2
   2e05c:	muleq	r5, r4, r1

0002e060 <__flatcc_fb_clear_parser@@Base>:
   2e060:	push	{r4, r5, r6, lr}
   2e064:	mov	r5, r0
   2e068:	ldr	r4, [r0, #392]	; 0x188
   2e06c:	cmp	r4, #0
   2e070:	bne	2e14c <__flatcc_fb_clear_parser@@Base+0xec>
   2e074:	add	r0, r5, #448	; 0x1c0
   2e078:	bl	28d38 <fb_schema_table_clear@@Base>
   2e07c:	add	r0, r5, #432	; 0x1b0
   2e080:	bl	39284 <fb_name_table_clear@@Base>
   2e084:	add	r0, r5, #524	; 0x20c
   2e088:	bl	27154 <ptr_set_clear@@Base>
   2e08c:	ldr	r0, [r5, #112]	; 0x70
   2e090:	cmp	r0, #0
   2e094:	beq	2e09c <__flatcc_fb_clear_parser@@Base+0x3c>
   2e098:	bl	13ed0 <free@plt>
   2e09c:	ldr	r0, [r5, #20]
   2e0a0:	cmp	r0, #0
   2e0a4:	beq	2e0ac <__flatcc_fb_clear_parser@@Base+0x4c>
   2e0a8:	bl	13ed0 <free@plt>
   2e0ac:	ldr	r0, [r5, #512]	; 0x200
   2e0b0:	cmp	r0, #0
   2e0b4:	beq	2e0bc <__flatcc_fb_clear_parser@@Base+0x5c>
   2e0b8:	bl	13ed0 <free@plt>
   2e0bc:	ldr	r0, [r5, #516]	; 0x204
   2e0c0:	cmp	r0, #0
   2e0c4:	beq	2e0cc <__flatcc_fb_clear_parser@@Base+0x6c>
   2e0c8:	bl	13ed0 <free@plt>
   2e0cc:	ldr	r0, [r5, #520]	; 0x208
   2e0d0:	cmp	r0, #0
   2e0d4:	beq	2e0dc <__flatcc_fb_clear_parser@@Base+0x7c>
   2e0d8:	bl	13ed0 <free@plt>
   2e0dc:	ldr	r0, [r5, #548]	; 0x224
   2e0e0:	cmp	r0, #0
   2e0e4:	beq	2e0ec <__flatcc_fb_clear_parser@@Base+0x8c>
   2e0e8:	bl	13ed0 <free@plt>
   2e0ec:	mov	r2, #0
   2e0f0:	ldr	r1, [pc, #116]	; 2e16c <__flatcc_fb_clear_parser@@Base+0x10c>
   2e0f4:	add	r0, r5, #416	; 0x1a0
   2e0f8:	bl	28700 <fb_scope_table_destroy@@Base>
   2e0fc:	ldr	r0, [r5, #48]	; 0x30
   2e100:	cmp	r0, #0
   2e104:	beq	2e11c <__flatcc_fb_clear_parser@@Base+0xbc>
   2e108:	ldr	r4, [r0]
   2e10c:	bl	13ed0 <free@plt>
   2e110:	mov	r0, r4
   2e114:	cmp	r4, #0
   2e118:	bne	2e108 <__flatcc_fb_clear_parser@@Base+0xa8>
   2e11c:	ldr	r0, [r5, #16]
   2e120:	cmp	r0, #0
   2e124:	beq	2e12c <__flatcc_fb_clear_parser@@Base+0xcc>
   2e128:	bl	13ed0 <free@plt>
   2e12c:	mov	r2, #560	; 0x230
   2e130:	mov	r1, #0
   2e134:	mov	r0, r5
   2e138:	bl	13f9c <memset@plt>
   2e13c:	pop	{r4, r5, r6, pc}
   2e140:	ldr	r4, [r4]
   2e144:	cmp	r4, #0
   2e148:	beq	2e074 <__flatcc_fb_clear_parser@@Base+0x14>
   2e14c:	ldrh	r3, [r4, #8]
   2e150:	cmp	r3, #4
   2e154:	bhi	2e140 <__flatcc_fb_clear_parser@@Base+0xe0>
   2e158:	add	r0, r4, #56	; 0x38
   2e15c:	bl	2779c <fb_symbol_table_clear@@Base>
   2e160:	add	r0, r4, #72	; 0x48
   2e164:	bl	399f8 <fb_value_set_clear@@Base>
   2e168:	b	2e140 <__flatcc_fb_clear_parser@@Base+0xe0>
   2e16c:	andeq	r9, r2, r4, ror r5
   2e170:	ldr	r3, [r0, #16]
   2e174:	add	r3, r3, #996	; 0x3e4
   2e178:	add	r3, r3, #3
   2e17c:	cmp	r3, #27
   2e180:	ldrls	pc, [pc, r3, lsl #2]
   2e184:	b	2e248 <__flatcc_fb_clear_parser@@Base+0x1e8>
   2e188:	andeq	lr, r2, r0, lsl r2
   2e18c:	andeq	lr, r2, r0, lsr r2
   2e190:	andeq	lr, r2, r8, asr #4
   2e194:	andeq	lr, r2, r0, asr #4
   2e198:	andeq	lr, r2, r8, lsr r2
   2e19c:	andeq	lr, r2, r0, lsr #4
   2e1a0:	andeq	lr, r2, r0, lsr r2
   2e1a4:	andeq	lr, r2, r8, lsr #4
   2e1a8:	andeq	lr, r2, r0, lsr #4
   2e1ac:	andeq	lr, r2, r8, lsl r2
   2e1b0:	andeq	lr, r2, r8, lsl r2
   2e1b4:	andeq	lr, r2, r8, asr #4
   2e1b8:	strdeq	lr, [r2], -r8
   2e1bc:	andeq	lr, r2, r8, asr #4
   2e1c0:	andeq	lr, r2, r0, asr #4
   2e1c4:	andeq	lr, r2, r8, lsr #4
   2e1c8:	andeq	lr, r2, r8, asr #4
   2e1cc:	andeq	lr, r2, r8, lsl #4
   2e1d0:	andeq	lr, r2, r8, lsl #4
   2e1d4:	andeq	lr, r2, r0, lsl #4
   2e1d8:	strdeq	lr, [r2], -r8
   2e1dc:	andeq	lr, r2, r0, asr r2
   2e1e0:	andeq	lr, r2, r0, asr r2
   2e1e4:	andeq	lr, r2, r8, asr #4
   2e1e8:	andeq	lr, r2, r8, lsr r2
   2e1ec:	andeq	lr, r2, r8, asr #4
   2e1f0:	andeq	lr, r2, r8, asr #4
   2e1f4:	andeq	lr, r2, r0, lsl #4
   2e1f8:	mov	r0, #2
   2e1fc:	bx	lr
   2e200:	mov	r0, #3
   2e204:	bx	lr
   2e208:	mov	r0, #4
   2e20c:	bx	lr
   2e210:	mov	r0, #5
   2e214:	bx	lr
   2e218:	mov	r0, #6
   2e21c:	bx	lr
   2e220:	mov	r0, #7
   2e224:	bx	lr
   2e228:	mov	r0, #8
   2e22c:	bx	lr
   2e230:	mov	r0, #9
   2e234:	bx	lr
   2e238:	mov	r0, #10
   2e23c:	bx	lr
   2e240:	mov	r0, #11
   2e244:	bx	lr
   2e248:	mov	r0, #0
   2e24c:	bx	lr
   2e250:	mov	r0, #1
   2e254:	bx	lr
   2e258:	push	{lr}		; (str lr, [sp, #-4]!)
   2e25c:	sub	sp, sp, #12
   2e260:	mov	ip, #0
   2e264:	str	ip, [sp, #4]
   2e268:	str	ip, [sp]
   2e26c:	bl	297c8 <__flatcc_error_report@@Base>
   2e270:	add	sp, sp, #12
   2e274:	pop	{pc}		; (ldr pc, [sp], #4)
   2e278:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e27c:	ldrh	fp, [r1, #8]
   2e280:	cmp	fp, #1
   2e284:	bne	2e308 <__flatcc_fb_clear_parser@@Base+0x2a8>
   2e288:	mov	sl, r0
   2e28c:	mov	r5, r1
   2e290:	ldrh	r3, [r1, #10]
   2e294:	tst	r3, #1
   2e298:	bne	2e31c <__flatcc_fb_clear_parser@@Base+0x2bc>
   2e29c:	tst	r3, #2
   2e2a0:	bne	2e694 <__flatcc_fb_clear_parser@@Base+0x634>
   2e2a4:	ldr	r2, [r1, #120]	; 0x78
   2e2a8:	cmp	r2, #0
   2e2ac:	bne	2e330 <__flatcc_fb_clear_parser@@Base+0x2d0>
   2e2b0:	orr	r3, r3, #1
   2e2b4:	strh	r3, [r1, #10]
   2e2b8:	ldr	r4, [r1, #20]
   2e2bc:	cmp	r4, #0
   2e2c0:	beq	2e5bc <__flatcc_fb_clear_parser@@Base+0x55c>
   2e2c4:	ldr	r3, [r0, #116]	; 0x74
   2e2c8:	cmp	r3, #99	; 0x63
   2e2cc:	bgt	2e488 <__flatcc_fb_clear_parser@@Base+0x428>
   2e2d0:	ldrh	r3, [r4, #24]
   2e2d4:	cmp	r3, #8
   2e2d8:	beq	2e344 <__flatcc_fb_clear_parser@@Base+0x2e4>
   2e2dc:	cmp	r3, #14
   2e2e0:	beq	2e4c0 <__flatcc_fb_clear_parser@@Base+0x460>
   2e2e4:	cmp	r3, #1
   2e2e8:	beq	2e69c <__flatcc_fb_clear_parser@@Base+0x63c>
   2e2ec:	mov	r3, #0
   2e2f0:	ldr	r2, [pc, #980]	; 2e6cc <__flatcc_fb_clear_parser@@Base+0x66c>
   2e2f4:	ldr	r1, [r4, #4]
   2e2f8:	mov	r0, sl
   2e2fc:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e300:	mvn	r0, #0
   2e304:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e308:	ldr	r3, [pc, #960]	; 2e6d0 <__flatcc_fb_clear_parser@@Base+0x670>
   2e30c:	ldr	r2, [pc, #960]	; 2e6d4 <__flatcc_fb_clear_parser@@Base+0x674>
   2e310:	ldr	r1, [pc, #960]	; 2e6d8 <__flatcc_fb_clear_parser@@Base+0x678>
   2e314:	ldr	r0, [pc, #960]	; 2e6dc <__flatcc_fb_clear_parser@@Base+0x67c>
   2e318:	bl	14038 <__assert_fail@plt>
   2e31c:	ldr	r3, [pc, #940]	; 2e6d0 <__flatcc_fb_clear_parser@@Base+0x670>
   2e320:	mov	r2, #504	; 0x1f8
   2e324:	ldr	r1, [pc, #940]	; 2e6d8 <__flatcc_fb_clear_parser@@Base+0x678>
   2e328:	ldr	r0, [pc, #944]	; 2e6e0 <__flatcc_fb_clear_parser@@Base+0x680>
   2e32c:	bl	14038 <__assert_fail@plt>
   2e330:	ldr	r3, [pc, #920]	; 2e6d0 <__flatcc_fb_clear_parser@@Base+0x670>
   2e334:	mov	r2, #508	; 0x1fc
   2e338:	ldr	r1, [pc, #920]	; 2e6d8 <__flatcc_fb_clear_parser@@Base+0x678>
   2e33c:	ldr	r0, [pc, #928]	; 2e6e4 <__flatcc_fb_clear_parser@@Base+0x684>
   2e340:	bl	14038 <__assert_fail@plt>
   2e344:	ldr	r6, [r4, #16]
   2e348:	mov	r0, r6
   2e34c:	bl	2e170 <__flatcc_fb_clear_parser@@Base+0x110>
   2e350:	str	r0, [r4, #16]
   2e354:	ldr	r3, [pc, #884]	; 2e6d0 <__flatcc_fb_clear_parser@@Base+0x670>
   2e358:	add	r0, r3, r0, lsl #2
   2e35c:	ldr	r1, [r0, #16]
   2e360:	mov	r2, r1
   2e364:	mov	r3, #0
   2e368:	orrs	r0, r2, r3
   2e36c:	beq	2e4a4 <__flatcc_fb_clear_parser@@Base+0x444>
   2e370:	strh	r1, [r4, #74]	; 0x4a
   2e374:	strd	r2, [r4, #88]	; 0x58
   2e378:	ldrd	r8, [r5, #112]	; 0x70
   2e37c:	ldrh	r0, [r4, #74]	; 0x4a
   2e380:	sub	r3, r0, #1
   2e384:	uxth	r3, r3
   2e388:	cmp	r3, #255	; 0xff
   2e38c:	bhi	2e6a4 <__flatcc_fb_clear_parser@@Base+0x644>
   2e390:	uxth	r0, r0
   2e394:	mov	r1, #0
   2e398:	cmp	r1, #0
   2e39c:	cmpeq	r0, #1
   2e3a0:	beq	2e3d4 <__flatcc_fb_clear_parser@@Base+0x374>
   2e3a4:	mov	r6, #1
   2e3a8:	mov	r7, #0
   2e3ac:	adds	r2, r6, r6
   2e3b0:	adc	r3, r7, r7
   2e3b4:	mov	r6, r2
   2e3b8:	mov	r7, r3
   2e3bc:	cmp	r1, r3
   2e3c0:	cmpeq	r0, r2
   2e3c4:	bcc	2e6a4 <__flatcc_fb_clear_parser@@Base+0x644>
   2e3c8:	cmp	r1, r3
   2e3cc:	cmpeq	r0, r2
   2e3d0:	bne	2e3ac <__flatcc_fb_clear_parser@@Base+0x34c>
   2e3d4:	subs	r8, r8, #1
   2e3d8:	sbc	r9, r9, #0
   2e3dc:	adds	r8, r8, r0
   2e3e0:	adc	r9, r9, r1
   2e3e4:	rsbs	r0, r0, #0
   2e3e8:	rsc	r1, r1, #0
   2e3ec:	and	r0, r0, r8
   2e3f0:	and	r1, r1, r9
   2e3f4:	strd	r0, [r4, #80]	; 0x50
   2e3f8:	ldrd	r2, [r5, #112]	; 0x70
   2e3fc:	cmp	r3, r1
   2e400:	cmpeq	r2, r0
   2e404:	bhi	2e5a0 <__flatcc_fb_clear_parser@@Base+0x540>
   2e408:	ldrd	r6, [r4, #88]	; 0x58
   2e40c:	adds	r6, r6, r0
   2e410:	adc	r7, r7, r1
   2e414:	cmp	r7, r1
   2e418:	cmpeq	r6, r0
   2e41c:	bcc	2e5a0 <__flatcc_fb_clear_parser@@Base+0x540>
   2e420:	cmp	r3, r7
   2e424:	cmpeq	r2, r6
   2e428:	movhi	r3, #1
   2e42c:	movls	r3, #0
   2e430:	ldr	r0, [pc, #688]	; 2e6e8 <__flatcc_fb_clear_parser@@Base+0x688>
   2e434:	mov	r1, #0
   2e438:	cmp	r7, r1
   2e43c:	cmpeq	r6, r0
   2e440:	orrhi	r3, r3, #1
   2e444:	cmp	r3, #0
   2e448:	beq	2e460 <__flatcc_fb_clear_parser@@Base+0x400>
   2e44c:	mov	r3, #0
   2e450:	ldr	r2, [pc, #660]	; 2e6ec <__flatcc_fb_clear_parser@@Base+0x68c>
   2e454:	ldr	r1, [r4, #4]
   2e458:	mov	r0, sl
   2e45c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e460:	strd	r6, [r5, #112]	; 0x70
   2e464:	ldrh	r3, [r4, #74]	; 0x4a
   2e468:	cmp	r3, fp
   2e46c:	movcs	fp, r3
   2e470:	ldr	r4, [r4]
   2e474:	cmp	r4, #0
   2e478:	beq	2e5bc <__flatcc_fb_clear_parser@@Base+0x55c>
   2e47c:	ldr	r3, [sl, #116]	; 0x74
   2e480:	cmp	r3, #99	; 0x63
   2e484:	ble	2e2d0 <__flatcc_fb_clear_parser@@Base+0x270>
   2e488:	mov	r3, #0
   2e48c:	ldr	r2, [pc, #604]	; 2e6f0 <__flatcc_fb_clear_parser@@Base+0x690>
   2e490:	mov	r1, r3
   2e494:	mov	r0, sl
   2e498:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e49c:	mvn	r0, #0
   2e4a0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e4a4:	mov	r3, r6
   2e4a8:	ldr	r2, [pc, #540]	; 2e6cc <__flatcc_fb_clear_parser@@Base+0x66c>
   2e4ac:	ldr	r1, [r4, #4]
   2e4b0:	mov	r0, sl
   2e4b4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e4b8:	mvn	r0, #0
   2e4bc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e4c0:	ldr	r6, [r4, #16]
   2e4c4:	ldrh	r3, [r6, #8]
   2e4c8:	cmp	r3, #3
   2e4cc:	beq	2e538 <__flatcc_fb_clear_parser@@Base+0x4d8>
   2e4d0:	cmp	r3, #1
   2e4d4:	bne	2e584 <__flatcc_fb_clear_parser@@Base+0x524>
   2e4d8:	ldrh	r3, [r6, #10]
   2e4dc:	tst	r3, #1
   2e4e0:	bne	2e550 <__flatcc_fb_clear_parser@@Base+0x4f0>
   2e4e4:	tst	r3, #2
   2e4e8:	bne	2e524 <__flatcc_fb_clear_parser@@Base+0x4c4>
   2e4ec:	ldr	r3, [sl, #188]	; 0xbc
   2e4f0:	cmp	r3, #0
   2e4f4:	bne	2e56c <__flatcc_fb_clear_parser@@Base+0x50c>
   2e4f8:	ldr	r3, [sl, #116]	; 0x74
   2e4fc:	add	r3, r3, #1
   2e500:	str	r3, [sl, #116]	; 0x74
   2e504:	mov	r1, r6
   2e508:	mov	r0, sl
   2e50c:	bl	2e278 <__flatcc_fb_clear_parser@@Base+0x218>
   2e510:	ldr	r3, [sl, #116]	; 0x74
   2e514:	sub	r3, r3, #1
   2e518:	str	r3, [sl, #116]	; 0x74
   2e51c:	cmp	r0, #0
   2e520:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e524:	ldrh	r3, [r6, #104]	; 0x68
   2e528:	strh	r3, [r4, #74]	; 0x4a
   2e52c:	ldrd	r2, [r6, #112]	; 0x70
   2e530:	strd	r2, [r4, #88]	; 0x58
   2e534:	b	2e378 <__flatcc_fb_clear_parser@@Base+0x318>
   2e538:	ldr	r3, [r6, #112]	; 0x70
   2e53c:	ldr	r2, [r6, #116]	; 0x74
   2e540:	strh	r3, [r4, #74]	; 0x4a
   2e544:	str	r3, [r4, #88]	; 0x58
   2e548:	str	r2, [r4, #92]	; 0x5c
   2e54c:	b	2e378 <__flatcc_fb_clear_parser@@Base+0x318>
   2e550:	ldr	r3, [r6, #4]
   2e554:	ldr	r2, [pc, #408]	; 2e6f4 <__flatcc_fb_clear_parser@@Base+0x694>
   2e558:	ldr	r1, [r4, #4]
   2e55c:	mov	r0, sl
   2e560:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e564:	mvn	r0, #0
   2e568:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e56c:	ldr	r3, [r6, #4]
   2e570:	ldr	r2, [pc, #384]	; 2e6f8 <__flatcc_fb_clear_parser@@Base+0x698>
   2e574:	ldr	r1, [r4, #4]
   2e578:	mov	r0, sl
   2e57c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e580:	b	2e4f8 <__flatcc_fb_clear_parser@@Base+0x498>
   2e584:	mov	r3, #0
   2e588:	ldr	r2, [pc, #364]	; 2e6fc <__flatcc_fb_clear_parser@@Base+0x69c>
   2e58c:	ldr	r1, [r4, #4]
   2e590:	mov	r0, sl
   2e594:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e598:	mvn	r0, #0
   2e59c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e5a0:	mov	r3, #0
   2e5a4:	ldr	r2, [pc, #340]	; 2e700 <__flatcc_fb_clear_parser@@Base+0x6a0>
   2e5a8:	ldr	r1, [r4, #4]
   2e5ac:	mov	r0, sl
   2e5b0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e5b4:	mvn	r0, #0
   2e5b8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e5bc:	ldrh	r3, [r5, #104]	; 0x68
   2e5c0:	cmp	r3, #0
   2e5c4:	strheq	fp, [r5, #104]	; 0x68
   2e5c8:	beq	2e5d4 <__flatcc_fb_clear_parser@@Base+0x574>
   2e5cc:	cmp	r3, fp
   2e5d0:	bcc	2e678 <__flatcc_fb_clear_parser@@Base+0x618>
   2e5d4:	ldrd	r8, [r5, #112]	; 0x70
   2e5d8:	ldrh	r0, [r5, #104]	; 0x68
   2e5dc:	sub	r3, r0, #1
   2e5e0:	uxth	r3, r3
   2e5e4:	cmp	r3, #255	; 0xff
   2e5e8:	bhi	2e6b8 <__flatcc_fb_clear_parser@@Base+0x658>
   2e5ec:	uxth	r0, r0
   2e5f0:	mov	r1, #0
   2e5f4:	cmp	r1, #0
   2e5f8:	cmpeq	r0, #1
   2e5fc:	beq	2e630 <__flatcc_fb_clear_parser@@Base+0x5d0>
   2e600:	mov	r6, #1
   2e604:	mov	r7, #0
   2e608:	adds	r2, r6, r6
   2e60c:	adc	r3, r7, r7
   2e610:	mov	r6, r2
   2e614:	mov	r7, r3
   2e618:	cmp	r1, r3
   2e61c:	cmpeq	r0, r2
   2e620:	bcc	2e6b8 <__flatcc_fb_clear_parser@@Base+0x658>
   2e624:	cmp	r1, r3
   2e628:	cmpeq	r0, r2
   2e62c:	bne	2e608 <__flatcc_fb_clear_parser@@Base+0x5a8>
   2e630:	subs	r2, r8, #1
   2e634:	sbc	r3, r9, #0
   2e638:	adds	r2, r2, r0
   2e63c:	adc	r3, r3, r1
   2e640:	rsbs	r0, r0, #0
   2e644:	rsc	r1, r1, #0
   2e648:	and	r0, r0, r2
   2e64c:	and	r1, r1, r3
   2e650:	strd	r0, [r5, #112]	; 0x70
   2e654:	ldrh	r3, [r5, #10]
   2e658:	bic	r3, r3, #1
   2e65c:	orr	r3, r3, #2
   2e660:	strh	r3, [r5, #10]
   2e664:	ldr	r3, [sl, #396]	; 0x18c
   2e668:	str	r3, [r5, #120]	; 0x78
   2e66c:	str	r5, [sl, #396]	; 0x18c
   2e670:	mov	r0, #0
   2e674:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e678:	mov	r3, #0
   2e67c:	ldr	r2, [pc, #128]	; 2e704 <__flatcc_fb_clear_parser@@Base+0x6a4>
   2e680:	ldr	r1, [r5, #4]
   2e684:	mov	r0, sl
   2e688:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e68c:	strh	fp, [r5, #104]	; 0x68
   2e690:	b	2e5d4 <__flatcc_fb_clear_parser@@Base+0x574>
   2e694:	mov	r0, #0
   2e698:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e69c:	mvn	r0, #0
   2e6a0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e6a4:	ldr	r3, [pc, #92]	; 2e708 <__flatcc_fb_clear_parser@@Base+0x6a8>
   2e6a8:	mov	r2, #108	; 0x6c
   2e6ac:	ldr	r1, [pc, #36]	; 2e6d8 <__flatcc_fb_clear_parser@@Base+0x678>
   2e6b0:	ldr	r0, [pc, #84]	; 2e70c <__flatcc_fb_clear_parser@@Base+0x6ac>
   2e6b4:	bl	14038 <__assert_fail@plt>
   2e6b8:	ldr	r3, [pc, #72]	; 2e708 <__flatcc_fb_clear_parser@@Base+0x6a8>
   2e6bc:	mov	r2, #108	; 0x6c
   2e6c0:	ldr	r1, [pc, #16]	; 2e6d8 <__flatcc_fb_clear_parser@@Base+0x678>
   2e6c4:	ldr	r0, [pc, #64]	; 2e70c <__flatcc_fb_clear_parser@@Base+0x6ac>
   2e6c8:	bl	14038 <__assert_fail@plt>
   2e6cc:	muleq	r5, ip, r3
   2e6d0:	andeq	r3, r5, ip, lsr #3
   2e6d4:	strdeq	r0, [r0], -r6
   2e6d8:	ldrdeq	r3, [r5], -r0
   2e6dc:	andeq	fp, r3, r4, lsl #27
   2e6e0:	andeq	r3, r5, ip, lsl r3
   2e6e4:	andeq	r3, r5, r4, asr #6
   2e6e8:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   2e6ec:	andeq	r3, r5, r0, asr r4
   2e6f0:	andeq	r3, r5, r0, asr r3
   2e6f4:	andeq	r3, r5, ip, lsr #7
   2e6f8:	andeq	r3, r5, ip, asr #7
   2e6fc:	andeq	r3, r5, r4, lsl r4
   2e700:	andeq	r3, r5, r8, lsr r4
   2e704:	andeq	r3, r5, r4, lsl #9
   2e708:	andeq	r3, r5, ip, ror #3
   2e70c:	andeq	r3, r5, r0, asr #9
   2e710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e714:	sub	sp, sp, #68	; 0x44
   2e718:	mov	r6, r0
   2e71c:	mov	fp, r1
   2e720:	ldrh	r3, [r1, #48]	; 0x30
   2e724:	str	r3, [sp, #8]
   2e728:	cmp	r3, #0
   2e72c:	bne	2e764 <__flatcc_fb_clear_parser@@Base+0x704>
   2e730:	ldr	r4, [r1, #28]
   2e734:	mov	r2, #48	; 0x30
   2e738:	mov	r1, #0
   2e73c:	add	r0, sp, #16
   2e740:	bl	13f9c <memset@plt>
   2e744:	cmp	r4, #0
   2e748:	beq	2e9b0 <__flatcc_fb_clear_parser@@Base+0x950>
   2e74c:	ldr	r7, [sp, #8]
   2e750:	mov	r5, #100	; 0x64
   2e754:	ldr	r8, [pc, #2244]	; 2f020 <__flatcc_fb_clear_parser@@Base+0xfc0>
   2e758:	ldr	sl, [pc, #2244]	; 2f024 <__flatcc_fb_clear_parser@@Base+0xfc4>
   2e75c:	ldr	r9, [pc, #2244]	; 2f028 <__flatcc_fb_clear_parser@@Base+0xfc8>
   2e760:	b	2e7d0 <__flatcc_fb_clear_parser@@Base+0x770>
   2e764:	mov	r3, #0
   2e768:	ldr	r2, [pc, #2236]	; 2f02c <__flatcc_fb_clear_parser@@Base+0xfcc>
   2e76c:	ldr	r1, [r1, #4]
   2e770:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e774:	mvn	r3, #0
   2e778:	str	r3, [sp, #4]
   2e77c:	b	2f014 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2e780:	mov	r3, #0
   2e784:	ldr	r2, [pc, #2212]	; 2f030 <__flatcc_fb_clear_parser@@Base+0xfd0>
   2e788:	ldr	r1, [r4, #4]
   2e78c:	mov	r0, r6
   2e790:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e794:	b	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e798:	mov	r3, #0
   2e79c:	ldr	r2, [pc, #2192]	; 2f034 <__flatcc_fb_clear_parser@@Base+0xfd4>
   2e7a0:	ldr	r1, [r4, #4]
   2e7a4:	mov	r0, r6
   2e7a8:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e7ac:	ldr	r4, [r4]
   2e7b0:	subs	r5, r5, #1
   2e7b4:	movne	r3, #1
   2e7b8:	moveq	r3, #0
   2e7bc:	cmp	r4, #0
   2e7c0:	moveq	r3, #0
   2e7c4:	andne	r3, r3, #1
   2e7c8:	cmp	r3, #0
   2e7cc:	beq	2e92c <__flatcc_fb_clear_parser@@Base+0x8cc>
   2e7d0:	ldr	r3, [r4, #4]
   2e7d4:	ldr	r0, [r6, #412]	; 0x19c
   2e7d8:	ldr	r2, [r3, #4]
   2e7dc:	ldr	r1, [r3]
   2e7e0:	add	r0, r0, #16
   2e7e4:	bl	3935c <fb_name_table_find@@Base>
   2e7e8:	cmp	r0, #0
   2e7ec:	beq	2e780 <__flatcc_fb_clear_parser@@Base+0x720>
   2e7f0:	ldr	r3, [r0, #24]
   2e7f4:	cmp	r3, #0
   2e7f8:	beq	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e7fc:	cmp	r3, #4
   2e800:	bne	2e798 <__flatcc_fb_clear_parser@@Base+0x738>
   2e804:	mov	r2, #1
   2e808:	orr	r7, r7, r2, lsl r3
   2e80c:	uxth	r7, r7
   2e810:	add	r2, sp, #16
   2e814:	ldr	r2, [r2, r3, lsl #2]
   2e818:	cmp	r2, #0
   2e81c:	beq	2e838 <__flatcc_fb_clear_parser@@Base+0x7d8>
   2e820:	mov	r3, #0
   2e824:	ldr	r2, [pc, #2060]	; 2f038 <__flatcc_fb_clear_parser@@Base+0xfd8>
   2e828:	ldr	r1, [r4, #4]
   2e82c:	mov	r0, r6
   2e830:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e834:	b	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e838:	add	r2, sp, #16
   2e83c:	str	r4, [r2, r3, lsl #2]
   2e840:	add	r3, r8, r3, lsl #2
   2e844:	ldr	r3, [r3, #76]	; 0x4c
   2e848:	cmp	r3, #0
   2e84c:	bne	2e874 <__flatcc_fb_clear_parser@@Base+0x814>
   2e850:	ldrh	r3, [r4, #16]
   2e854:	cmp	r3, #0
   2e858:	beq	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e85c:	mov	r3, #0
   2e860:	mov	r2, r9
   2e864:	ldr	r1, [r4, #4]
   2e868:	mov	r0, r6
   2e86c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e870:	b	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e874:	cmp	r3, #2
   2e878:	beq	2e8a8 <__flatcc_fb_clear_parser@@Base+0x848>
   2e87c:	cmp	r3, #5
   2e880:	bne	2e8cc <__flatcc_fb_clear_parser@@Base+0x86c>
   2e884:	ldrh	r3, [r4, #16]
   2e888:	cmp	r3, #5
   2e88c:	beq	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e890:	mov	r3, #0
   2e894:	mov	r2, sl
   2e898:	ldr	r1, [r4, #4]
   2e89c:	mov	r0, r6
   2e8a0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e8a4:	b	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e8a8:	ldrh	r3, [r4, #16]
   2e8ac:	cmp	r3, #2
   2e8b0:	beq	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e8b4:	mov	r3, #0
   2e8b8:	ldr	r2, [pc, #1916]	; 2f03c <__flatcc_fb_clear_parser@@Base+0xfdc>
   2e8bc:	ldr	r1, [r4, #4]
   2e8c0:	mov	r0, r6
   2e8c4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e8c8:	b	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e8cc:	cmp	r3, #4
   2e8d0:	bne	2e900 <__flatcc_fb_clear_parser@@Base+0x8a0>
   2e8d4:	ldrh	r3, [r4, #16]
   2e8d8:	sub	r3, r3, #4
   2e8dc:	uxth	r3, r3
   2e8e0:	cmp	r3, #1
   2e8e4:	bls	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e8e8:	mov	r3, #0
   2e8ec:	ldr	r2, [pc, #1868]	; 2f040 <__flatcc_fb_clear_parser@@Base+0xfe0>
   2e8f0:	ldr	r1, [r4, #4]
   2e8f4:	mov	r0, r6
   2e8f8:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e8fc:	b	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e900:	cmp	r3, #6
   2e904:	bne	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e908:	ldrh	r3, [r4, #16]
   2e90c:	cmp	r3, #6
   2e910:	beq	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e914:	mov	r3, #0
   2e918:	ldr	r2, [pc, #1828]	; 2f044 <__flatcc_fb_clear_parser@@Base+0xfe4>
   2e91c:	ldr	r1, [r4, #4]
   2e920:	mov	r0, r6
   2e924:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e928:	b	2e7ac <__flatcc_fb_clear_parser@@Base+0x74c>
   2e92c:	cmp	r4, #0
   2e930:	beq	2e944 <__flatcc_fb_clear_parser@@Base+0x8e4>
   2e934:	ldr	r2, [pc, #1804]	; 2f048 <__flatcc_fb_clear_parser@@Base+0xfe8>
   2e938:	ldr	r1, [r4, #4]
   2e93c:	mov	r0, r6
   2e940:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e944:	strh	r7, [fp, #92]	; 0x5c
   2e948:	ldr	r3, [sp, #32]
   2e94c:	cmp	r3, #0
   2e950:	beq	2efc4 <__flatcc_fb_clear_parser@@Base+0xf64>
   2e954:	ldrd	r4, [r3, #8]
   2e958:	subs	r2, r4, #1
   2e95c:	sbc	r3, r5, #0
   2e960:	cmp	r3, #0
   2e964:	cmpeq	r2, #255	; 0xff
   2e968:	bhi	2efb0 <__flatcc_fb_clear_parser@@Base+0xf50>
   2e96c:	cmp	r5, #0
   2e970:	cmpeq	r4, #1
   2e974:	beq	2e9a8 <__flatcc_fb_clear_parser@@Base+0x948>
   2e978:	mov	r0, #1
   2e97c:	mov	r1, #0
   2e980:	adds	r2, r0, r0
   2e984:	adc	r3, r1, r1
   2e988:	mov	r0, r2
   2e98c:	mov	r1, r3
   2e990:	cmp	r5, r3
   2e994:	cmpeq	r4, r2
   2e998:	bcc	2efb0 <__flatcc_fb_clear_parser@@Base+0xf50>
   2e99c:	cmp	r5, r3
   2e9a0:	cmpeq	r4, r2
   2e9a4:	bne	2e980 <__flatcc_fb_clear_parser@@Base+0x920>
   2e9a8:	strh	r4, [fp, #104]	; 0x68
   2e9ac:	b	2efc4 <__flatcc_fb_clear_parser@@Base+0xf64>
   2e9b0:	ldr	r7, [sp, #8]
   2e9b4:	b	2e944 <__flatcc_fb_clear_parser@@Base+0x8e4>
   2e9b8:	ldr	r3, [r0, #4]
   2e9bc:	ldr	r2, [pc, #1672]	; 2f04c <__flatcc_fb_clear_parser@@Base+0xfec>
   2e9c0:	ldr	r1, [sl, #4]
   2e9c4:	mov	r0, r6
   2e9c8:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2e9cc:	ldr	sl, [sl]
   2e9d0:	cmp	sl, #0
   2e9d4:	beq	2ef48 <__flatcc_fb_clear_parser@@Base+0xee8>
   2e9d8:	mov	r2, #1
   2e9dc:	mov	r1, sl
   2e9e0:	add	r0, fp, #56	; 0x38
   2e9e4:	bl	2784c <fb_symbol_table_insert_item@@Base>
   2e9e8:	cmp	r0, #0
   2e9ec:	bne	2e9b8 <__flatcc_fb_clear_parser@@Base+0x958>
   2e9f0:	ldrh	r3, [sl, #8]
   2e9f4:	cmp	r3, #5
   2e9f8:	bne	2ea44 <__flatcc_fb_clear_parser@@Base+0x9e4>
   2e9fc:	ldr	r8, [r6, #172]	; 0xac
   2ea00:	cmp	r8, #0
   2ea04:	movne	r8, #128	; 0x80
   2ea08:	moveq	r8, #0
   2ea0c:	ldr	r3, [r6, #168]	; 0xa8
   2ea10:	cmp	r3, #0
   2ea14:	orrne	r8, r8, #4
   2ea18:	ldr	r4, [sl, #64]	; 0x40
   2ea1c:	mov	r2, #48	; 0x30
   2ea20:	mov	r1, #0
   2ea24:	add	r0, sp, #16
   2ea28:	bl	13f9c <memset@plt>
   2ea2c:	cmp	r4, #0
   2ea30:	beq	2efdc <__flatcc_fb_clear_parser@@Base+0xf7c>
   2ea34:	ldr	r7, [sp, #8]
   2ea38:	mov	r5, #100	; 0x64
   2ea3c:	ldr	r9, [pc, #1508]	; 2f028 <__flatcc_fb_clear_parser@@Base+0xfc8>
   2ea40:	b	2eacc <__flatcc_fb_clear_parser@@Base+0xa6c>
   2ea44:	mov	r3, #0
   2ea48:	ldr	r2, [pc, #1536]	; 2f050 <__flatcc_fb_clear_parser@@Base+0xff0>
   2ea4c:	ldr	r1, [sl, #4]
   2ea50:	mov	r0, r6
   2ea54:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ea58:	mvn	r3, #0
   2ea5c:	str	r3, [sp, #4]
   2ea60:	b	2f014 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2ea64:	mov	r3, #0
   2ea68:	ldr	r2, [pc, #1472]	; 2f030 <__flatcc_fb_clear_parser@@Base+0xfd0>
   2ea6c:	ldr	r1, [r4, #4]
   2ea70:	mov	r0, r6
   2ea74:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ea78:	b	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2ea7c:	mov	r3, #0
   2ea80:	ldr	r2, [pc, #1452]	; 2f034 <__flatcc_fb_clear_parser@@Base+0xfd4>
   2ea84:	ldr	r1, [r4, #4]
   2ea88:	mov	r0, r6
   2ea8c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ea90:	b	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2ea94:	mov	r3, #0
   2ea98:	ldr	r2, [pc, #1432]	; 2f038 <__flatcc_fb_clear_parser@@Base+0xfd8>
   2ea9c:	ldr	r1, [r4, #4]
   2eaa0:	mov	r0, r6
   2eaa4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2eaa8:	ldr	r4, [r4]
   2eaac:	subs	r5, r5, #1
   2eab0:	movne	r3, #1
   2eab4:	moveq	r3, #0
   2eab8:	cmp	r4, #0
   2eabc:	moveq	r3, #0
   2eac0:	andne	r3, r3, #1
   2eac4:	cmp	r3, #0
   2eac8:	beq	2ec18 <__flatcc_fb_clear_parser@@Base+0xbb8>
   2eacc:	ldr	r3, [r4, #4]
   2ead0:	ldr	r0, [r6, #412]	; 0x19c
   2ead4:	ldr	r2, [r3, #4]
   2ead8:	ldr	r1, [r3]
   2eadc:	add	r0, r0, #16
   2eae0:	bl	3935c <fb_name_table_find@@Base>
   2eae4:	cmp	r0, #0
   2eae8:	beq	2ea64 <__flatcc_fb_clear_parser@@Base+0xa04>
   2eaec:	ldr	r3, [r0, #24]
   2eaf0:	cmp	r3, #0
   2eaf4:	beq	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2eaf8:	asr	r2, r8, r3
   2eafc:	tst	r2, #1
   2eb00:	beq	2ea7c <__flatcc_fb_clear_parser@@Base+0xa1c>
   2eb04:	mov	r2, #1
   2eb08:	orr	r7, r7, r2, lsl r3
   2eb0c:	uxth	r7, r7
   2eb10:	add	r2, sp, #16
   2eb14:	ldr	r2, [r2, r3, lsl #2]
   2eb18:	cmp	r2, #0
   2eb1c:	bne	2ea94 <__flatcc_fb_clear_parser@@Base+0xa34>
   2eb20:	add	r2, sp, #16
   2eb24:	str	r4, [r2, r3, lsl #2]
   2eb28:	ldr	r2, [pc, #1264]	; 2f020 <__flatcc_fb_clear_parser@@Base+0xfc0>
   2eb2c:	add	r3, r2, r3, lsl #2
   2eb30:	ldr	r3, [r3, #76]	; 0x4c
   2eb34:	cmp	r3, #0
   2eb38:	bne	2eb60 <__flatcc_fb_clear_parser@@Base+0xb00>
   2eb3c:	ldrh	r3, [r4, #16]
   2eb40:	cmp	r3, #0
   2eb44:	beq	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2eb48:	mov	r3, #0
   2eb4c:	mov	r2, r9
   2eb50:	ldr	r1, [r4, #4]
   2eb54:	mov	r0, r6
   2eb58:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2eb5c:	b	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2eb60:	cmp	r3, #2
   2eb64:	beq	2eb94 <__flatcc_fb_clear_parser@@Base+0xb34>
   2eb68:	cmp	r3, #5
   2eb6c:	bne	2ebb8 <__flatcc_fb_clear_parser@@Base+0xb58>
   2eb70:	ldrh	r3, [r4, #16]
   2eb74:	cmp	r3, #5
   2eb78:	beq	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2eb7c:	mov	r3, #0
   2eb80:	ldr	r2, [pc, #1180]	; 2f024 <__flatcc_fb_clear_parser@@Base+0xfc4>
   2eb84:	ldr	r1, [r4, #4]
   2eb88:	mov	r0, r6
   2eb8c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2eb90:	b	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2eb94:	ldrh	r3, [r4, #16]
   2eb98:	cmp	r3, #2
   2eb9c:	beq	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2eba0:	mov	r3, #0
   2eba4:	ldr	r2, [pc, #1168]	; 2f03c <__flatcc_fb_clear_parser@@Base+0xfdc>
   2eba8:	ldr	r1, [r4, #4]
   2ebac:	mov	r0, r6
   2ebb0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ebb4:	b	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2ebb8:	cmp	r3, #4
   2ebbc:	bne	2ebec <__flatcc_fb_clear_parser@@Base+0xb8c>
   2ebc0:	ldrh	r3, [r4, #16]
   2ebc4:	sub	r3, r3, #4
   2ebc8:	uxth	r3, r3
   2ebcc:	cmp	r3, #1
   2ebd0:	bls	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2ebd4:	mov	r3, #0
   2ebd8:	ldr	r2, [pc, #1120]	; 2f040 <__flatcc_fb_clear_parser@@Base+0xfe0>
   2ebdc:	ldr	r1, [r4, #4]
   2ebe0:	mov	r0, r6
   2ebe4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ebe8:	b	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2ebec:	cmp	r3, #6
   2ebf0:	bne	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2ebf4:	ldrh	r3, [r4, #16]
   2ebf8:	cmp	r3, #6
   2ebfc:	beq	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2ec00:	mov	r3, #0
   2ec04:	ldr	r2, [pc, #1080]	; 2f044 <__flatcc_fb_clear_parser@@Base+0xfe4>
   2ec08:	ldr	r1, [r4, #4]
   2ec0c:	mov	r0, r6
   2ec10:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ec14:	b	2eaa8 <__flatcc_fb_clear_parser@@Base+0xa48>
   2ec18:	cmp	r4, #0
   2ec1c:	beq	2ec30 <__flatcc_fb_clear_parser@@Base+0xbd0>
   2ec20:	ldr	r2, [pc, #1056]	; 2f048 <__flatcc_fb_clear_parser@@Base+0xfe8>
   2ec24:	ldr	r1, [r4, #4]
   2ec28:	mov	r0, r6
   2ec2c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ec30:	strh	r7, [sl, #72]	; 0x48
   2ec34:	ldrh	r3, [sl, #24]
   2ec38:	cmp	r3, #8
   2ec3c:	beq	2ef14 <__flatcc_fb_clear_parser@@Base+0xeb4>
   2ec40:	cmp	r3, #12
   2ec44:	bne	2eff8 <__flatcc_fb_clear_parser@@Base+0xf98>
   2ec48:	ldr	r8, [fp, #12]
   2ec4c:	ldr	r1, [sl, #16]
   2ec50:	cmp	r1, #0
   2ec54:	beq	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2ec58:	mov	r9, r1
   2ec5c:	mov	r2, #0
   2ec60:	b	2ec6c <__flatcc_fb_clear_parser@@Base+0xc0c>
   2ec64:	mov	r2, r0
   2ec68:	mov	r9, r3
   2ec6c:	ldr	r3, [r9]
   2ec70:	add	r0, r2, #1
   2ec74:	cmp	r3, #0
   2ec78:	bne	2ec64 <__flatcc_fb_clear_parser@@Base+0xc04>
   2ec7c:	cmp	r9, #0
   2ec80:	beq	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2ec84:	adds	ip, r8, #0
   2ec88:	movne	ip, #1
   2ec8c:	cmp	r0, #1
   2ec90:	movne	ip, #0
   2ec94:	cmp	ip, #0
   2ec98:	bne	2ed10 <__flatcc_fb_clear_parser@@Base+0xcb0>
   2ec9c:	cmp	r0, #1
   2eca0:	moveq	r1, r3
   2eca4:	cmn	r6, #352	; 0x160
   2eca8:	beq	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2ecac:	ldr	r0, [r6, #412]	; 0x19c
   2ecb0:	cmp	r0, #0
   2ecb4:	beq	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2ecb8:	rsb	r2, r2, #0
   2ecbc:	bl	287c8 <fb_scope_table_find@@Base>
   2ecc0:	cmp	r0, #0
   2ecc4:	beq	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2ecc8:	ldr	r3, [r9, #4]
   2eccc:	ldr	r2, [r3, #4]
   2ecd0:	ldr	r1, [r3]
   2ecd4:	add	r0, r0, #4
   2ecd8:	bl	27878 <fb_symbol_table_find@@Base>
   2ecdc:	subs	r4, r0, #0
   2ece0:	beq	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2ece4:	ldrh	r3, [r4, #8]
   2ece8:	cmp	r3, #4
   2ecec:	bls	2ee54 <__flatcc_fb_clear_parser@@Base+0xdf4>
   2ecf0:	mov	r3, sl
   2ecf4:	ldr	r2, [pc, #856]	; 2f054 <__flatcc_fb_clear_parser@@Base+0xff4>
   2ecf8:	ldr	r1, [sl, #16]
   2ecfc:	mov	r0, r6
   2ed00:	bl	2adb4 <error_ref_sym@@Base>
   2ed04:	mov	r3, #1
   2ed08:	strh	r3, [sl, #24]
   2ed0c:	b	2e9cc <__flatcc_fb_clear_parser@@Base+0x96c>
   2ed10:	add	r3, r6, #524	; 0x20c
   2ed14:	str	r3, [sp, #12]
   2ed18:	add	r7, r6, #352	; 0x160
   2ed1c:	b	2edc4 <__flatcc_fb_clear_parser@@Base+0xd64>
   2ed20:	ldr	r1, [r4, #16]
   2ed24:	ldr	r0, [sp, #12]
   2ed28:	bl	27230 <ptr_set_find_item@@Base>
   2ed2c:	cmp	r0, #0
   2ed30:	beq	2edec <__flatcc_fb_clear_parser@@Base+0xd8c>
   2ed34:	str	r4, [sl, #16]
   2ed38:	mov	r3, #14
   2ed3c:	strh	r3, [sl, #24]
   2ed40:	ldrh	r3, [r4, #8]
   2ed44:	cmp	r3, #1
   2ed48:	beq	2eee0 <__flatcc_fb_clear_parser@@Base+0xe80>
   2ed4c:	ldr	r2, [r6, #152]	; 0x98
   2ed50:	cmp	r2, #0
   2ed54:	beq	2eeb8 <__flatcc_fb_clear_parser@@Base+0xe58>
   2ed58:	cmp	r3, #3
   2ed5c:	bne	2ee6c <__flatcc_fb_clear_parser@@Base+0xe0c>
   2ed60:	ldrh	r3, [sl, #72]	; 0x48
   2ed64:	tst	r3, #128	; 0x80
   2ed68:	beq	2ef24 <__flatcc_fb_clear_parser@@Base+0xec4>
   2ed6c:	ldr	r3, [r6, #148]	; 0x94
   2ed70:	cmp	r3, #0
   2ed74:	beq	2ee94 <__flatcc_fb_clear_parser@@Base+0xe34>
   2ed78:	ldr	r3, [sp, #4]
   2ed7c:	add	r3, r3, #1
   2ed80:	str	r3, [sp, #4]
   2ed84:	b	2ef24 <__flatcc_fb_clear_parser@@Base+0xec4>
   2ed88:	sub	r5, r5, #1
   2ed8c:	add	r4, r4, #1
   2ed90:	cmp	r5, #1
   2ed94:	ble	2ee28 <__flatcc_fb_clear_parser@@Base+0xdc8>
   2ed98:	cmp	r7, #0
   2ed9c:	beq	2ed88 <__flatcc_fb_clear_parser@@Base+0xd28>
   2eda0:	ldr	r0, [r6, #412]	; 0x19c
   2eda4:	cmp	r0, #0
   2eda8:	beq	2ed88 <__flatcc_fb_clear_parser@@Base+0xd28>
   2edac:	mov	r2, r4
   2edb0:	ldr	r1, [r8]
   2edb4:	bl	287c8 <fb_scope_table_find@@Base>
   2edb8:	cmp	r0, #0
   2edbc:	beq	2ed88 <__flatcc_fb_clear_parser@@Base+0xd28>
   2edc0:	mov	r8, r0
   2edc4:	ldr	r3, [r9, #4]
   2edc8:	ldr	r2, [r3, #4]
   2edcc:	ldr	r1, [r3]
   2edd0:	add	r0, r8, #4
   2edd4:	bl	27878 <fb_symbol_table_find@@Base>
   2edd8:	subs	r4, r0, #0
   2eddc:	beq	2edec <__flatcc_fb_clear_parser@@Base+0xd8c>
   2ede0:	ldrh	r3, [r4, #8]
   2ede4:	cmp	r3, #4
   2ede8:	bls	2ed20 <__flatcc_fb_clear_parser@@Base+0xcc0>
   2edec:	cmp	r8, #0
   2edf0:	beq	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2edf4:	ldr	r3, [r8]
   2edf8:	cmp	r3, #0
   2edfc:	beq	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2ee00:	mov	r4, #0
   2ee04:	add	r4, r4, #1
   2ee08:	ldr	r3, [r3]
   2ee0c:	cmp	r3, #0
   2ee10:	bne	2ee04 <__flatcc_fb_clear_parser@@Base+0xda4>
   2ee14:	cmp	r4, #0
   2ee18:	beq	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2ee1c:	mov	r5, r4
   2ee20:	rsb	r4, r4, #1
   2ee24:	b	2ed90 <__flatcc_fb_clear_parser@@Base+0xd30>
   2ee28:	cmp	r7, #0
   2ee2c:	beq	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2ee30:	ldr	r0, [r6, #412]	; 0x19c
   2ee34:	cmp	r0, #0
   2ee38:	beq	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2ee3c:	mov	r2, #0
   2ee40:	mov	r1, r2
   2ee44:	bl	287c8 <fb_scope_table_find@@Base>
   2ee48:	subs	r8, r0, #0
   2ee4c:	bne	2edc4 <__flatcc_fb_clear_parser@@Base+0xd64>
   2ee50:	b	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2ee54:	ldr	r1, [r4, #16]
   2ee58:	add	r0, r6, #524	; 0x20c
   2ee5c:	bl	27230 <ptr_set_find_item@@Base>
   2ee60:	cmp	r0, #0
   2ee64:	bne	2ed34 <__flatcc_fb_clear_parser@@Base+0xcd4>
   2ee68:	b	2ecf0 <__flatcc_fb_clear_parser@@Base+0xc90>
   2ee6c:	ldr	r3, [r4, #4]
   2ee70:	ldr	r2, [pc, #480]	; 2f058 <__flatcc_fb_clear_parser@@Base+0xff8>
   2ee74:	ldr	r1, [sl, #4]
   2ee78:	mov	r0, r6
   2ee7c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ee80:	mov	r3, #1
   2ee84:	strh	r3, [sl, #24]
   2ee88:	mvn	r3, #0
   2ee8c:	str	r3, [sp, #4]
   2ee90:	b	2f014 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2ee94:	ldr	r2, [pc, #448]	; 2f05c <__flatcc_fb_clear_parser@@Base+0xffc>
   2ee98:	ldr	r1, [sl, #4]
   2ee9c:	mov	r0, r6
   2eea0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2eea4:	mov	r3, #1
   2eea8:	strh	r3, [sl, #24]
   2eeac:	mvn	r3, #0
   2eeb0:	str	r3, [sp, #4]
   2eeb4:	b	2f014 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2eeb8:	ldr	r3, [r4, #4]
   2eebc:	ldr	r2, [pc, #412]	; 2f060 <__flatcc_fb_clear_parser@@Base+0x1000>
   2eec0:	ldr	r1, [sl, #4]
   2eec4:	mov	r0, r6
   2eec8:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2eecc:	mov	r3, #1
   2eed0:	strh	r3, [sl, #24]
   2eed4:	mvn	r3, #0
   2eed8:	str	r3, [sp, #4]
   2eedc:	b	2f014 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2eee0:	ldrh	r3, [sl, #72]	; 0x48
   2eee4:	tst	r3, #128	; 0x80
   2eee8:	beq	2ef24 <__flatcc_fb_clear_parser@@Base+0xec4>
   2eeec:	mov	r3, #0
   2eef0:	ldr	r2, [pc, #356]	; 2f05c <__flatcc_fb_clear_parser@@Base+0xffc>
   2eef4:	ldr	r1, [sl, #4]
   2eef8:	mov	r0, r6
   2eefc:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ef00:	mov	r3, #1
   2ef04:	strh	r3, [sl, #24]
   2ef08:	mvn	r3, #0
   2ef0c:	str	r3, [sp, #4]
   2ef10:	b	2f014 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2ef14:	tst	r7, #128	; 0x80
   2ef18:	ldrne	r3, [sp, #4]
   2ef1c:	addne	r3, r3, #1
   2ef20:	strne	r3, [sp, #4]
   2ef24:	ldrh	r3, [sl, #56]	; 0x38
   2ef28:	cmp	r3, #0
   2ef2c:	beq	2e9cc <__flatcc_fb_clear_parser@@Base+0x96c>
   2ef30:	mov	r3, #0
   2ef34:	ldr	r2, [pc, #296]	; 2f064 <__flatcc_fb_clear_parser@@Base+0x1004>
   2ef38:	ldr	r1, [sl, #4]
   2ef3c:	mov	r0, r6
   2ef40:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ef44:	b	2e9cc <__flatcc_fb_clear_parser@@Base+0x96c>
   2ef48:	ldr	r2, [sp, #4]
   2ef4c:	cmp	r2, #0
   2ef50:	beq	2f014 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2ef54:	ldrh	r3, [fp, #10]
   2ef58:	orr	r3, r3, #8
   2ef5c:	strh	r3, [fp, #10]
   2ef60:	mov	r3, r2
   2ef64:	cmp	r2, #1
   2ef68:	movle	r3, #0
   2ef6c:	strle	r3, [sp, #4]
   2ef70:	ble	2f014 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2ef74:	ldr	r3, [r6, #156]	; 0x9c
   2ef78:	cmp	r3, #0
   2ef7c:	movne	r3, #0
   2ef80:	strne	r3, [sp, #4]
   2ef84:	bne	2f014 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2ef88:	ldr	r2, [pc, #216]	; 2f068 <__flatcc_fb_clear_parser@@Base+0x1008>
   2ef8c:	ldr	r1, [fp, #4]
   2ef90:	mov	r0, r6
   2ef94:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ef98:	mvn	r3, #0
   2ef9c:	str	r3, [sp, #4]
   2efa0:	b	2f014 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2efa4:	mov	r3, #0
   2efa8:	str	r3, [sp, #4]
   2efac:	b	2f014 <__flatcc_fb_clear_parser@@Base+0xfb4>
   2efb0:	mov	r3, #0
   2efb4:	ldr	r2, [pc, #176]	; 2f06c <__flatcc_fb_clear_parser@@Base+0x100c>
   2efb8:	ldr	r1, [fp, #4]
   2efbc:	mov	r0, r6
   2efc0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2efc4:	ldr	sl, [fp, #20]
   2efc8:	cmp	sl, #0
   2efcc:	beq	2efa4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2efd0:	mov	r3, #0
   2efd4:	str	r3, [sp, #4]
   2efd8:	b	2e9d8 <__flatcc_fb_clear_parser@@Base+0x978>
   2efdc:	mov	r3, #0
   2efe0:	strh	r3, [sl, #72]	; 0x48
   2efe4:	ldrh	r3, [sl, #24]
   2efe8:	cmp	r3, #8
   2efec:	beq	2ef24 <__flatcc_fb_clear_parser@@Base+0xec4>
   2eff0:	cmp	r3, #12
   2eff4:	beq	2ec48 <__flatcc_fb_clear_parser@@Base+0xbe8>
   2eff8:	mov	r3, #0
   2effc:	ldr	r2, [pc, #108]	; 2f070 <__flatcc_fb_clear_parser@@Base+0x1010>
   2f000:	ldr	r1, [sl, #4]
   2f004:	mov	r0, r6
   2f008:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f00c:	mvn	r3, #0
   2f010:	str	r3, [sp, #4]
   2f014:	ldr	r0, [sp, #4]
   2f018:	add	sp, sp, #68	; 0x44
   2f01c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f020:	andeq	r3, r5, ip, lsr #3
   2f024:	andeq	r3, r5, r8, asr #11
   2f028:	andeq	r3, r5, ip, ror r5
   2f02c:	ldrdeq	r3, [r5], -r8
   2f030:	andeq	r3, r5, r4, lsl #10
   2f034:	andeq	r3, r5, r4, lsr #10
   2f038:	andeq	r3, r5, r4, asr r5
   2f03c:	andeq	r3, r5, r4, lsr #11
   2f040:	strdeq	r3, [r5], -r4
   2f044:	andeq	r3, r5, r8, lsl r6
   2f048:	andeq	r3, r5, r4, asr #12
   2f04c:	andeq	r3, r5, r8, asr r6
   2f050:	andeq	r3, r5, ip, ror r6
   2f054:	andeq	r3, r5, r0, lsr #13
   2f058:	ldrdeq	r3, [r5], -r0
   2f05c:	andeq	r3, r5, r4, lsl r7
   2f060:	andeq	r3, r5, r8, asr #14
   2f064:	andeq	r3, r5, r0, asr #15
   2f068:	strdeq	r3, [r5], -r4
   2f06c:	andeq	r3, r5, r0, lsr r8
   2f070:	andeq	r3, r5, r4, lsl #15
   2f074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f078:	sub	sp, sp, #100	; 0x64
   2f07c:	mov	r5, r0
   2f080:	mov	r6, r1
   2f084:	ldrh	fp, [r1, #8]
   2f088:	cmp	fp, #4
   2f08c:	beq	2f150 <__flatcc_fb_clear_parser@@Base+0x10f0>
   2f090:	cmp	fp, #3
   2f094:	bne	2f104 <__flatcc_fb_clear_parser@@Base+0x10a4>
   2f098:	ldrh	r3, [r1, #48]	; 0x30
   2f09c:	cmp	r3, #0
   2f0a0:	beq	2f118 <__flatcc_fb_clear_parser@@Base+0x10b8>
   2f0a4:	cmp	r3, #8
   2f0a8:	bne	2f138 <__flatcc_fb_clear_parser@@Base+0x10d8>
   2f0ac:	ldr	r0, [r1, #40]	; 0x28
   2f0b0:	bl	2e170 <__flatcc_fb_clear_parser@@Base+0x110>
   2f0b4:	str	r0, [r6, #40]	; 0x28
   2f0b8:	ldr	r3, [pc, #2660]	; 2fb24 <__flatcc_fb_clear_parser@@Base+0x1ac4>
   2f0bc:	add	r0, r3, r0, lsl #2
   2f0c0:	ldr	r3, [r0, #16]
   2f0c4:	str	r3, [r6, #112]	; 0x70
   2f0c8:	mov	r2, #0
   2f0cc:	str	r2, [r6, #116]	; 0x74
   2f0d0:	strh	r3, [r6, #104]	; 0x68
   2f0d4:	ldr	r4, [r6, #28]
   2f0d8:	mov	r2, #48	; 0x30
   2f0dc:	mov	r1, #0
   2f0e0:	add	r0, sp, r2
   2f0e4:	bl	13f9c <memset@plt>
   2f0e8:	cmp	r4, #0
   2f0ec:	beq	2fb14 <__flatcc_fb_clear_parser@@Base+0x1ab4>
   2f0f0:	mov	r7, #100	; 0x64
   2f0f4:	mov	r8, #0
   2f0f8:	ldr	r9, [pc, #2596]	; 2fb24 <__flatcc_fb_clear_parser@@Base+0x1ac4>
   2f0fc:	ldr	sl, [pc, #2596]	; 2fb28 <__flatcc_fb_clear_parser@@Base+0x1ac8>
   2f100:	b	2f1ec <__flatcc_fb_clear_parser@@Base+0x118c>
   2f104:	ldr	r3, [pc, #2592]	; 2fb2c <__flatcc_fb_clear_parser@@Base+0x1acc>
   2f108:	ldr	r2, [pc, #2592]	; 2fb30 <__flatcc_fb_clear_parser@@Base+0x1ad0>
   2f10c:	ldr	r1, [pc, #2592]	; 2fb34 <__flatcc_fb_clear_parser@@Base+0x1ad4>
   2f110:	ldr	r0, [pc, #2592]	; 2fb38 <__flatcc_fb_clear_parser@@Base+0x1ad8>
   2f114:	bl	14038 <__assert_fail@plt>
   2f118:	mov	r3, #1
   2f11c:	strh	r3, [r1, #48]	; 0x30
   2f120:	mov	r3, #0
   2f124:	ldr	r2, [pc, #2576]	; 2fb3c <__flatcc_fb_clear_parser@@Base+0x1adc>
   2f128:	ldr	r1, [r1, #4]
   2f12c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f130:	mvn	r0, #0
   2f134:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2f138:	mov	r3, #0
   2f13c:	ldr	r2, [pc, #2556]	; 2fb40 <__flatcc_fb_clear_parser@@Base+0x1ae0>
   2f140:	ldr	r1, [r1, #4]
   2f144:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f148:	mvn	r0, #0
   2f14c:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2f150:	ldrh	r3, [r1, #48]	; 0x30
   2f154:	cmp	r3, #0
   2f158:	bne	2f184 <__flatcc_fb_clear_parser@@Base+0x1124>
   2f15c:	mov	r3, #8
   2f160:	strh	r3, [r1, #48]	; 0x30
   2f164:	mov	r3, #4
   2f168:	str	r3, [r1, #40]	; 0x28
   2f16c:	mov	r2, #1
   2f170:	mov	r3, #0
   2f174:	strd	r2, [r1, #112]	; 0x70
   2f178:	mov	r3, #1
   2f17c:	strh	r3, [r1, #104]	; 0x68
   2f180:	b	2f0d4 <__flatcc_fb_clear_parser@@Base+0x1074>
   2f184:	mov	r3, #0
   2f188:	ldr	r2, [pc, #2484]	; 2fb44 <__flatcc_fb_clear_parser@@Base+0x1ae4>
   2f18c:	ldr	r1, [r1, #4]
   2f190:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f194:	mvn	r0, #0
   2f198:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2f19c:	mov	r3, #0
   2f1a0:	ldr	r2, [pc, #2464]	; 2fb48 <__flatcc_fb_clear_parser@@Base+0x1ae8>
   2f1a4:	ldr	r1, [r4, #4]
   2f1a8:	mov	r0, r5
   2f1ac:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f1b0:	b	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f1b4:	mov	r3, #0
   2f1b8:	ldr	r2, [pc, #2444]	; 2fb4c <__flatcc_fb_clear_parser@@Base+0x1aec>
   2f1bc:	ldr	r1, [r4, #4]
   2f1c0:	mov	r0, r5
   2f1c4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f1c8:	ldr	r4, [r4]
   2f1cc:	subs	r7, r7, #1
   2f1d0:	movne	r3, #1
   2f1d4:	moveq	r3, #0
   2f1d8:	cmp	r4, #0
   2f1dc:	moveq	r3, #0
   2f1e0:	andne	r3, r3, #1
   2f1e4:	cmp	r3, #0
   2f1e8:	beq	2f348 <__flatcc_fb_clear_parser@@Base+0x12e8>
   2f1ec:	ldr	r3, [r4, #4]
   2f1f0:	ldr	r0, [r5, #412]	; 0x19c
   2f1f4:	ldr	r2, [r3, #4]
   2f1f8:	ldr	r1, [r3]
   2f1fc:	add	r0, r0, #16
   2f200:	bl	3935c <fb_name_table_find@@Base>
   2f204:	cmp	r0, #0
   2f208:	beq	2f19c <__flatcc_fb_clear_parser@@Base+0x113c>
   2f20c:	ldr	r3, [r0, #24]
   2f210:	cmp	r3, #0
   2f214:	beq	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f218:	cmp	r3, #5
   2f21c:	bne	2f1b4 <__flatcc_fb_clear_parser@@Base+0x1154>
   2f220:	mov	r2, #1
   2f224:	orr	r8, r8, r2, lsl r3
   2f228:	uxth	r8, r8
   2f22c:	add	r2, sp, #48	; 0x30
   2f230:	ldr	r2, [r2, r3, lsl #2]
   2f234:	cmp	r2, #0
   2f238:	beq	2f254 <__flatcc_fb_clear_parser@@Base+0x11f4>
   2f23c:	mov	r3, #0
   2f240:	ldr	r2, [pc, #2312]	; 2fb50 <__flatcc_fb_clear_parser@@Base+0x1af0>
   2f244:	ldr	r1, [r4, #4]
   2f248:	mov	r0, r5
   2f24c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f250:	b	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f254:	add	r2, sp, #48	; 0x30
   2f258:	str	r4, [r2, r3, lsl #2]
   2f25c:	add	r3, r9, r3, lsl #2
   2f260:	ldr	r3, [r3, #76]	; 0x4c
   2f264:	cmp	r3, #0
   2f268:	bne	2f290 <__flatcc_fb_clear_parser@@Base+0x1230>
   2f26c:	ldrh	r3, [r4, #16]
   2f270:	cmp	r3, #0
   2f274:	beq	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f278:	mov	r3, #0
   2f27c:	mov	r2, sl
   2f280:	ldr	r1, [r4, #4]
   2f284:	mov	r0, r5
   2f288:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f28c:	b	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f290:	cmp	r3, #2
   2f294:	beq	2f2c4 <__flatcc_fb_clear_parser@@Base+0x1264>
   2f298:	cmp	r3, #5
   2f29c:	bne	2f2e8 <__flatcc_fb_clear_parser@@Base+0x1288>
   2f2a0:	ldrh	r3, [r4, #16]
   2f2a4:	cmp	r3, #5
   2f2a8:	beq	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f2ac:	mov	r3, #0
   2f2b0:	ldr	r2, [pc, #2204]	; 2fb54 <__flatcc_fb_clear_parser@@Base+0x1af4>
   2f2b4:	ldr	r1, [r4, #4]
   2f2b8:	mov	r0, r5
   2f2bc:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f2c0:	b	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f2c4:	ldrh	r3, [r4, #16]
   2f2c8:	cmp	r3, #2
   2f2cc:	beq	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f2d0:	mov	r3, #0
   2f2d4:	ldr	r2, [pc, #2172]	; 2fb58 <__flatcc_fb_clear_parser@@Base+0x1af8>
   2f2d8:	ldr	r1, [r4, #4]
   2f2dc:	mov	r0, r5
   2f2e0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f2e4:	b	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f2e8:	cmp	r3, #4
   2f2ec:	bne	2f31c <__flatcc_fb_clear_parser@@Base+0x12bc>
   2f2f0:	ldrh	r3, [r4, #16]
   2f2f4:	sub	r3, r3, #4
   2f2f8:	uxth	r3, r3
   2f2fc:	cmp	r3, #1
   2f300:	bls	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f304:	mov	r3, #0
   2f308:	ldr	r2, [pc, #2124]	; 2fb5c <__flatcc_fb_clear_parser@@Base+0x1afc>
   2f30c:	ldr	r1, [r4, #4]
   2f310:	mov	r0, r5
   2f314:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f318:	b	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f31c:	cmp	r3, #6
   2f320:	bne	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f324:	ldrh	r3, [r4, #16]
   2f328:	cmp	r3, #6
   2f32c:	beq	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f330:	mov	r3, #0
   2f334:	ldr	r2, [pc, #2084]	; 2fb60 <__flatcc_fb_clear_parser@@Base+0x1b00>
   2f338:	ldr	r1, [r4, #4]
   2f33c:	mov	r0, r5
   2f340:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f344:	b	2f1c8 <__flatcc_fb_clear_parser@@Base+0x1168>
   2f348:	cmp	r4, #0
   2f34c:	beq	2f360 <__flatcc_fb_clear_parser@@Base+0x1300>
   2f350:	ldr	r2, [pc, #2060]	; 2fb64 <__flatcc_fb_clear_parser@@Base+0x1b04>
   2f354:	ldr	r1, [r4, #4]
   2f358:	mov	r0, r5
   2f35c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f360:	strh	r8, [r6, #92]	; 0x5c
   2f364:	tst	r8, #32
   2f368:	moveq	r3, #0
   2f36c:	streq	r3, [sp]
   2f370:	beq	2f388 <__flatcc_fb_clear_parser@@Base+0x1328>
   2f374:	mov	r2, #0
   2f378:	mov	r3, #0
   2f37c:	strd	r2, [sp, #32]
   2f380:	mov	r3, #1
   2f384:	str	r3, [sp]
   2f388:	ldr	r2, [r6, #40]	; 0x28
   2f38c:	cmp	r2, #5
   2f390:	beq	2f3e4 <__flatcc_fb_clear_parser@@Base+0x1384>
   2f394:	mov	r0, #0
   2f398:	mov	r1, #0
   2f39c:	strd	r0, [sp, #32]
   2f3a0:	mov	r3, #4
   2f3a4:	strh	r3, [sp, #40]	; 0x28
   2f3a8:	add	r3, sp, #32
   2f3ac:	mov	r1, r6
   2f3b0:	mov	r0, r5
   2f3b4:	bl	32884 <__flatcc_fb_coerce_scalar_type@@Base>
   2f3b8:	cmp	r0, #0
   2f3bc:	bne	2f3f8 <__flatcc_fb_clear_parser@@Base+0x1398>
   2f3c0:	add	ip, sp, #16
   2f3c4:	add	r3, sp, #32
   2f3c8:	ldm	r3, {r0, r1, r2, r3}
   2f3cc:	stm	ip, {r0, r1, r2, r3}
   2f3d0:	ldr	r4, [r6, #20]
   2f3d4:	cmp	r4, #0
   2f3d8:	beq	2fb0c <__flatcc_fb_clear_parser@@Base+0x1aac>
   2f3dc:	mov	sl, #1
   2f3e0:	b	2fa24 <__flatcc_fb_clear_parser@@Base+0x19c4>
   2f3e4:	mov	r3, #0
   2f3e8:	strb	r3, [sp, #32]
   2f3ec:	mov	r3, #6
   2f3f0:	strh	r3, [sp, #40]	; 0x28
   2f3f4:	b	2f3c0 <__flatcc_fb_clear_parser@@Base+0x1360>
   2f3f8:	mov	r3, #0
   2f3fc:	ldr	r2, [pc, #1892]	; 2fb68 <__flatcc_fb_clear_parser@@Base+0x1b08>
   2f400:	mov	r1, r3
   2f404:	mov	r0, r5
   2f408:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f40c:	mvn	r0, #0
   2f410:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2f414:	ldrh	r3, [r4, #8]
   2f418:	cmp	r3, #5
   2f41c:	bne	2f524 <__flatcc_fb_clear_parser@@Base+0x14c4>
   2f420:	ldr	r3, [r4, #64]	; 0x40
   2f424:	cmp	r3, #0
   2f428:	bne	2f540 <__flatcc_fb_clear_parser@@Base+0x14e0>
   2f42c:	cmp	fp, #4
   2f430:	beq	2f554 <__flatcc_fb_clear_parser@@Base+0x14f4>
   2f434:	ldrh	r2, [r4, #56]	; 0x38
   2f438:	eor	r3, sl, #1
   2f43c:	cmp	r2, #0
   2f440:	movne	r3, #0
   2f444:	andeq	r3, r3, #1
   2f448:	cmp	r3, #0
   2f44c:	beq	2f46c <__flatcc_fb_clear_parser@@Base+0x140c>
   2f450:	ldrh	r3, [sp, #40]	; 0x28
   2f454:	cmp	r3, #5
   2f458:	beq	2f7e8 <__flatcc_fb_clear_parser@@Base+0x1788>
   2f45c:	cmp	r3, #4
   2f460:	beq	2f838 <__flatcc_fb_clear_parser@@Base+0x17d8>
   2f464:	cmp	r3, #6
   2f468:	beq	2f888 <__flatcc_fb_clear_parser@@Base+0x1828>
   2f46c:	ldr	r3, [sp]
   2f470:	cmp	r3, #0
   2f474:	beq	2f8f0 <__flatcc_fb_clear_parser@@Base+0x1890>
   2f478:	ldrh	r3, [r4, #56]	; 0x38
   2f47c:	cmp	r3, #0
   2f480:	beq	2f49c <__flatcc_fb_clear_parser@@Base+0x143c>
   2f484:	cmp	r3, #5
   2f488:	bne	2f8b8 <__flatcc_fb_clear_parser@@Base+0x1858>
   2f48c:	add	ip, sp, #32
   2f490:	add	r3, r4, #48	; 0x30
   2f494:	ldm	r3, {r0, r1, r2, r3}
   2f498:	stm	ip, {r0, r1, r2, r3}
   2f49c:	ldrd	r0, [sp, #32]
   2f4a0:	ldr	r3, [r6, #40]	; 0x28
   2f4a4:	ldr	r2, [pc, #1656]	; 2fb24 <__flatcc_fb_clear_parser@@Base+0x1ac4>
   2f4a8:	add	r3, r2, r3, lsl #2
   2f4ac:	ldr	r2, [r3, #16]
   2f4b0:	lsl	r2, r2, #3
   2f4b4:	mov	r3, #0
   2f4b8:	cmp	r1, r3
   2f4bc:	cmpeq	r0, r2
   2f4c0:	bcs	2f8d4 <__flatcc_fb_clear_parser@@Base+0x1874>
   2f4c4:	mov	r2, #1
   2f4c8:	sub	r3, r0, #32
   2f4cc:	rsb	r1, r0, #32
   2f4d0:	lsl	r3, r2, r3
   2f4d4:	orr	r3, r3, r2, lsr r1
   2f4d8:	lsl	r0, r2, r0
   2f4dc:	str	r0, [r4, #48]	; 0x30
   2f4e0:	str	r3, [r4, #52]	; 0x34
   2f4e4:	mov	r3, #5
   2f4e8:	strh	r3, [r4, #56]	; 0x38
   2f4ec:	add	r3, r4, #48	; 0x30
   2f4f0:	ldr	r2, [r6, #40]	; 0x28
   2f4f4:	mov	r1, r4
   2f4f8:	mov	r0, r5
   2f4fc:	bl	32884 <__flatcc_fb_coerce_scalar_type@@Base>
   2f500:	cmp	r0, #0
   2f504:	beq	2f90c <__flatcc_fb_clear_parser@@Base+0x18ac>
   2f508:	mov	r3, #0
   2f50c:	ldr	r2, [pc, #1624]	; 2fb6c <__flatcc_fb_clear_parser@@Base+0x1b0c>
   2f510:	ldr	r1, [r4, #4]
   2f514:	mov	r0, r5
   2f518:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f51c:	mvn	r0, #0
   2f520:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2f524:	mov	r3, #0
   2f528:	ldr	r2, [pc, #1600]	; 2fb70 <__flatcc_fb_clear_parser@@Base+0x1b10>
   2f52c:	ldr	r1, [r4, #4]
   2f530:	mov	r0, r5
   2f534:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f538:	mvn	r0, #0
   2f53c:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2f540:	ldr	r3, [pc, #1508]	; 2fb2c <__flatcc_fb_clear_parser@@Base+0x1acc>
   2f544:	ldr	r2, [pc, #1576]	; 2fb74 <__flatcc_fb_clear_parser@@Base+0x1b14>
   2f548:	ldr	r1, [pc, #1508]	; 2fb34 <__flatcc_fb_clear_parser@@Base+0x1ad4>
   2f54c:	ldr	r0, [pc, #1572]	; 2fb78 <__flatcc_fb_clear_parser@@Base+0x1b18>
   2f550:	bl	14038 <__assert_fail@plt>
   2f554:	ldr	r1, [r4, #4]
   2f558:	add	r3, r5, #68	; 0x44
   2f55c:	cmp	r1, r3
   2f560:	moveq	r3, #0
   2f564:	strheq	r3, [r4, #24]
   2f568:	beq	2f434 <__flatcc_fb_clear_parser@@Base+0x13d4>
   2f56c:	ldrh	r3, [r4, #24]
   2f570:	cmp	r3, #10
   2f574:	beq	2f5a4 <__flatcc_fb_clear_parser@@Base+0x1544>
   2f578:	cmp	r3, #12
   2f57c:	beq	2f5b4 <__flatcc_fb_clear_parser@@Base+0x1554>
   2f580:	cmp	r3, #1
   2f584:	beq	2fa14 <__flatcc_fb_clear_parser@@Base+0x19b4>
   2f588:	mov	r3, #0
   2f58c:	ldr	r2, [pc, #1512]	; 2fb7c <__flatcc_fb_clear_parser@@Base+0x1b1c>
   2f590:	mov	r0, r5
   2f594:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f598:	mov	r3, #1
   2f59c:	strh	r3, [r4, #24]
   2f5a0:	b	2fa14 <__flatcc_fb_clear_parser@@Base+0x19b4>
   2f5a4:	mov	r2, #0
   2f5a8:	mov	r3, #0
   2f5ac:	strd	r2, [r4, #88]	; 0x58
   2f5b0:	b	2f434 <__flatcc_fb_clear_parser@@Base+0x13d4>
   2f5b4:	ldr	r3, [r6, #12]
   2f5b8:	mov	lr, r3
   2f5bc:	ldr	r1, [r4, #16]
   2f5c0:	cmp	r1, #0
   2f5c4:	beq	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f5c8:	mov	ip, r1
   2f5cc:	mov	r2, #0
   2f5d0:	b	2f5dc <__flatcc_fb_clear_parser@@Base+0x157c>
   2f5d4:	mov	r2, r0
   2f5d8:	mov	ip, r3
   2f5dc:	ldr	r3, [ip]
   2f5e0:	add	r0, r2, #1
   2f5e4:	cmp	r3, #0
   2f5e8:	bne	2f5d4 <__flatcc_fb_clear_parser@@Base+0x1574>
   2f5ec:	str	ip, [sp, #4]
   2f5f0:	cmp	ip, #0
   2f5f4:	beq	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f5f8:	adds	ip, lr, #0
   2f5fc:	movne	ip, #1
   2f600:	cmp	r0, #1
   2f604:	movne	ip, #0
   2f608:	cmp	ip, #0
   2f60c:	bne	2f688 <__flatcc_fb_clear_parser@@Base+0x1628>
   2f610:	cmp	r0, #1
   2f614:	moveq	r1, r3
   2f618:	cmn	r5, #352	; 0x160
   2f61c:	beq	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f620:	ldr	r0, [r5, #412]	; 0x19c
   2f624:	cmp	r0, #0
   2f628:	beq	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f62c:	rsb	r2, r2, #0
   2f630:	bl	287c8 <fb_scope_table_find@@Base>
   2f634:	cmp	r0, #0
   2f638:	beq	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f63c:	ldr	r3, [sp, #4]
   2f640:	ldr	r3, [r3, #4]
   2f644:	ldr	r2, [r3, #4]
   2f648:	ldr	r1, [r3]
   2f64c:	add	r0, r0, #4
   2f650:	bl	27878 <fb_symbol_table_find@@Base>
   2f654:	subs	r7, r0, #0
   2f658:	beq	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f65c:	ldrh	r3, [r7, #8]
   2f660:	cmp	r3, #4
   2f664:	bls	2f7b4 <__flatcc_fb_clear_parser@@Base+0x1754>
   2f668:	mov	r3, r4
   2f66c:	ldr	r2, [pc, #1292]	; 2fb80 <__flatcc_fb_clear_parser@@Base+0x1b20>
   2f670:	ldr	r1, [r4, #16]
   2f674:	mov	r0, r5
   2f678:	bl	2adb4 <error_ref_sym@@Base>
   2f67c:	mov	r3, #1
   2f680:	strh	r3, [r4, #24]
   2f684:	b	2fa14 <__flatcc_fb_clear_parser@@Base+0x19b4>
   2f688:	add	r3, r5, #524	; 0x20c
   2f68c:	str	r3, [sp, #8]
   2f690:	add	r9, r5, #352	; 0x160
   2f694:	str	sl, [sp, #12]
   2f698:	mov	sl, lr
   2f69c:	b	2f720 <__flatcc_fb_clear_parser@@Base+0x16c0>
   2f6a0:	ldr	r1, [r7, #16]
   2f6a4:	ldr	r0, [sp, #8]
   2f6a8:	bl	27230 <ptr_set_find_item@@Base>
   2f6ac:	cmp	r0, #0
   2f6b0:	beq	2f74c <__flatcc_fb_clear_parser@@Base+0x16ec>
   2f6b4:	ldr	sl, [sp, #12]
   2f6b8:	ldrh	r3, [r7, #8]
   2f6bc:	cmp	r3, #1
   2f6c0:	bls	2f7cc <__flatcc_fb_clear_parser@@Base+0x176c>
   2f6c4:	ldr	r3, [r7, #4]
   2f6c8:	ldr	r2, [pc, #1204]	; 2fb84 <__flatcc_fb_clear_parser@@Base+0x1b24>
   2f6cc:	ldr	r1, [r4, #4]
   2f6d0:	mov	r0, r5
   2f6d4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f6d8:	mov	r3, #1
   2f6dc:	strh	r3, [r4, #24]
   2f6e0:	b	2fa14 <__flatcc_fb_clear_parser@@Base+0x19b4>
   2f6e4:	sub	r8, r8, #1
   2f6e8:	add	r7, r7, #1
   2f6ec:	cmp	r8, #1
   2f6f0:	ble	2f788 <__flatcc_fb_clear_parser@@Base+0x1728>
   2f6f4:	cmp	r9, #0
   2f6f8:	beq	2f6e4 <__flatcc_fb_clear_parser@@Base+0x1684>
   2f6fc:	ldr	r0, [r5, #412]	; 0x19c
   2f700:	cmp	r0, #0
   2f704:	beq	2f6e4 <__flatcc_fb_clear_parser@@Base+0x1684>
   2f708:	mov	r2, r7
   2f70c:	ldr	r1, [sl]
   2f710:	bl	287c8 <fb_scope_table_find@@Base>
   2f714:	cmp	r0, #0
   2f718:	beq	2f6e4 <__flatcc_fb_clear_parser@@Base+0x1684>
   2f71c:	mov	sl, r0
   2f720:	ldr	r3, [sp, #4]
   2f724:	ldr	r3, [r3, #4]
   2f728:	ldr	r2, [r3, #4]
   2f72c:	ldr	r1, [r3]
   2f730:	add	r0, sl, #4
   2f734:	bl	27878 <fb_symbol_table_find@@Base>
   2f738:	subs	r7, r0, #0
   2f73c:	beq	2f74c <__flatcc_fb_clear_parser@@Base+0x16ec>
   2f740:	ldrh	r3, [r7, #8]
   2f744:	cmp	r3, #4
   2f748:	bls	2f6a0 <__flatcc_fb_clear_parser@@Base+0x1640>
   2f74c:	cmp	sl, #0
   2f750:	beq	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f754:	ldr	r3, [sl]
   2f758:	cmp	r3, #0
   2f75c:	beq	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f760:	mov	r7, #0
   2f764:	add	r7, r7, #1
   2f768:	ldr	r3, [r3]
   2f76c:	cmp	r3, #0
   2f770:	bne	2f764 <__flatcc_fb_clear_parser@@Base+0x1704>
   2f774:	cmp	r7, #0
   2f778:	beq	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f77c:	mov	r8, r7
   2f780:	rsb	r7, r7, #1
   2f784:	b	2f6ec <__flatcc_fb_clear_parser@@Base+0x168c>
   2f788:	cmp	r9, #0
   2f78c:	beq	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f790:	ldr	r0, [r5, #412]	; 0x19c
   2f794:	cmp	r0, #0
   2f798:	beq	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f79c:	mov	r2, #0
   2f7a0:	mov	r1, r2
   2f7a4:	bl	287c8 <fb_scope_table_find@@Base>
   2f7a8:	subs	sl, r0, #0
   2f7ac:	bne	2f720 <__flatcc_fb_clear_parser@@Base+0x16c0>
   2f7b0:	b	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f7b4:	ldr	r1, [r7, #16]
   2f7b8:	add	r0, r5, #524	; 0x20c
   2f7bc:	bl	27230 <ptr_set_find_item@@Base>
   2f7c0:	cmp	r0, #0
   2f7c4:	bne	2f6b8 <__flatcc_fb_clear_parser@@Base+0x1658>
   2f7c8:	b	2f668 <__flatcc_fb_clear_parser@@Base+0x1608>
   2f7cc:	mov	r3, #14
   2f7d0:	strh	r3, [r4, #24]
   2f7d4:	str	r7, [r4, #16]
   2f7d8:	mov	r2, #0
   2f7dc:	mov	r3, #0
   2f7e0:	strd	r2, [r4, #88]	; 0x58
   2f7e4:	b	2f434 <__flatcc_fb_clear_parser@@Base+0x13d4>
   2f7e8:	ldr	r3, [r6, #40]	; 0x28
   2f7ec:	cmp	r3, #6
   2f7f0:	beq	2f808 <__flatcc_fb_clear_parser@@Base+0x17a8>
   2f7f4:	ldrd	r2, [sp, #32]
   2f7f8:	adds	r2, r2, #1
   2f7fc:	adc	r3, r3, #0
   2f800:	strd	r2, [sp, #32]
   2f804:	b	2f46c <__flatcc_fb_clear_parser@@Base+0x140c>
   2f808:	mvn	r0, #0
   2f80c:	mvn	r1, #0
   2f810:	ldrd	r2, [sp, #32]
   2f814:	cmp	r3, r1
   2f818:	cmpeq	r2, r0
   2f81c:	bne	2f7f4 <__flatcc_fb_clear_parser@@Base+0x1794>
   2f820:	mov	r3, #0
   2f824:	ldr	r2, [pc, #860]	; 2fb88 <__flatcc_fb_clear_parser@@Base+0x1b28>
   2f828:	ldr	r1, [r4, #4]
   2f82c:	mov	r0, r5
   2f830:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f834:	b	2f7f4 <__flatcc_fb_clear_parser@@Base+0x1794>
   2f838:	ldr	r3, [r6, #40]	; 0x28
   2f83c:	cmp	r3, #6
   2f840:	beq	2f858 <__flatcc_fb_clear_parser@@Base+0x17f8>
   2f844:	ldrd	r2, [sp, #32]
   2f848:	adds	r2, r2, #1
   2f84c:	adc	r3, r3, #0
   2f850:	strd	r2, [sp, #32]
   2f854:	b	2f46c <__flatcc_fb_clear_parser@@Base+0x140c>
   2f858:	mvn	r0, #0
   2f85c:	mvn	r1, #-2147483648	; 0x80000000
   2f860:	ldrd	r2, [sp, #32]
   2f864:	cmp	r3, r1
   2f868:	cmpeq	r2, r0
   2f86c:	bne	2f844 <__flatcc_fb_clear_parser@@Base+0x17e4>
   2f870:	mov	r3, #0
   2f874:	ldr	r2, [pc, #784]	; 2fb8c <__flatcc_fb_clear_parser@@Base+0x1b2c>
   2f878:	ldr	r1, [r4, #4]
   2f87c:	mov	r0, r5
   2f880:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f884:	b	2f844 <__flatcc_fb_clear_parser@@Base+0x17e4>
   2f888:	ldrb	r3, [sp, #32]
   2f88c:	cmp	r3, #1
   2f890:	beq	2f8a0 <__flatcc_fb_clear_parser@@Base+0x1840>
   2f894:	mov	r3, #1
   2f898:	strb	r3, [sp, #32]
   2f89c:	b	2f46c <__flatcc_fb_clear_parser@@Base+0x140c>
   2f8a0:	mov	r3, #0
   2f8a4:	ldr	r2, [pc, #740]	; 2fb90 <__flatcc_fb_clear_parser@@Base+0x1b30>
   2f8a8:	ldr	r1, [r4, #4]
   2f8ac:	mov	r0, r5
   2f8b0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f8b4:	b	2f894 <__flatcc_fb_clear_parser@@Base+0x1834>
   2f8b8:	mov	r3, #0
   2f8bc:	ldr	r2, [pc, #720]	; 2fb94 <__flatcc_fb_clear_parser@@Base+0x1b34>
   2f8c0:	ldr	r1, [r4, #4]
   2f8c4:	mov	r0, r5
   2f8c8:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f8cc:	mvn	r0, #0
   2f8d0:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2f8d4:	mov	r3, #0
   2f8d8:	ldr	r2, [pc, #652]	; 2fb6c <__flatcc_fb_clear_parser@@Base+0x1b0c>
   2f8dc:	ldr	r1, [r4, #4]
   2f8e0:	mov	r0, r5
   2f8e4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f8e8:	mvn	r0, #0
   2f8ec:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2f8f0:	ldrh	r3, [r4, #56]	; 0x38
   2f8f4:	cmp	r3, #0
   2f8f8:	bne	2f970 <__flatcc_fb_clear_parser@@Base+0x1910>
   2f8fc:	add	ip, r4, #48	; 0x30
   2f900:	add	r3, sp, #32
   2f904:	ldm	r3, {r0, r1, r2, r3}
   2f908:	stm	ip, {r0, r1, r2, r3}
   2f90c:	cmp	sl, #0
   2f910:	bne	2f9b8 <__flatcc_fb_clear_parser@@Base+0x1958>
   2f914:	ldr	r3, [r5, #180]	; 0xb4
   2f918:	cmp	r3, #0
   2f91c:	beq	2f9b8 <__flatcc_fb_clear_parser@@Base+0x1958>
   2f920:	ldrh	r3, [sp, #40]	; 0x28
   2f924:	cmp	r3, #5
   2f928:	beq	2f9a4 <__flatcc_fb_clear_parser@@Base+0x1944>
   2f92c:	cmp	r3, #4
   2f930:	beq	2fa6c <__flatcc_fb_clear_parser@@Base+0x1a0c>
   2f934:	cmp	r3, #6
   2f938:	bne	2f9b8 <__flatcc_fb_clear_parser@@Base+0x1958>
   2f93c:	ldrb	r2, [sp, #32]
   2f940:	ldrb	r3, [sp, #16]
   2f944:	cmp	r2, r3
   2f948:	bhi	2f9b8 <__flatcc_fb_clear_parser@@Base+0x1958>
   2f94c:	mov	r3, #0
   2f950:	ldr	r2, [pc, #576]	; 2fb98 <__flatcc_fb_clear_parser@@Base+0x1b38>
   2f954:	ldr	r1, [r4, #4]
   2f958:	mov	r0, r5
   2f95c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2f960:	mov	r3, #1
   2f964:	strh	r3, [r4, #56]	; 0x38
   2f968:	mvn	r0, #0
   2f96c:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2f970:	add	ip, sp, #32
   2f974:	add	r3, r4, #48	; 0x30
   2f978:	ldm	r3, {r0, r1, r2, r3}
   2f97c:	stm	ip, {r0, r1, r2, r3}
   2f980:	mov	r3, ip
   2f984:	ldr	r2, [r6, #40]	; 0x28
   2f988:	mov	r1, r4
   2f98c:	mov	r0, r5
   2f990:	bl	32884 <__flatcc_fb_coerce_scalar_type@@Base>
   2f994:	cmp	r0, #0
   2f998:	beq	2f8fc <__flatcc_fb_clear_parser@@Base+0x189c>
   2f99c:	mvn	r0, #0
   2f9a0:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2f9a4:	ldrd	r2, [sp, #16]
   2f9a8:	ldrd	r0, [sp, #32]
   2f9ac:	cmp	r1, r3
   2f9b0:	cmpeq	r0, r2
   2f9b4:	bls	2fa80 <__flatcc_fb_clear_parser@@Base+0x1a20>
   2f9b8:	add	ip, sp, #16
   2f9bc:	add	r3, sp, #32
   2f9c0:	ldm	r3, {r0, r1, r2, r3}
   2f9c4:	stm	ip, {r0, r1, r2, r3}
   2f9c8:	mov	r2, #1
   2f9cc:	add	r1, r4, #48	; 0x30
   2f9d0:	add	r0, r6, #72	; 0x48
   2f9d4:	bl	39aa8 <fb_value_set_insert_item@@Base>
   2f9d8:	cmp	r0, #0
   2f9dc:	beq	2f9f4 <__flatcc_fb_clear_parser@@Base+0x1994>
   2f9e0:	cmp	fp, #4
   2f9e4:	beq	2fadc <__flatcc_fb_clear_parser@@Base+0x1a7c>
   2f9e8:	ldrh	r3, [r4, #10]
   2f9ec:	orr	r3, r3, #4
   2f9f0:	strh	r3, [r4, #10]
   2f9f4:	ldr	r3, [r4, #64]	; 0x40
   2f9f8:	cmp	r3, #0
   2f9fc:	beq	2fa14 <__flatcc_fb_clear_parser@@Base+0x19b4>
   2fa00:	mov	r3, #0
   2fa04:	ldr	r2, [pc, #400]	; 2fb9c <__flatcc_fb_clear_parser@@Base+0x1b3c>
   2fa08:	ldr	r1, [r4, #4]
   2fa0c:	mov	r0, r5
   2fa10:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fa14:	ldr	r4, [r4]
   2fa18:	mov	sl, #0
   2fa1c:	cmp	r4, sl
   2fa20:	beq	2fb00 <__flatcc_fb_clear_parser@@Base+0x1aa0>
   2fa24:	mov	r2, #1
   2fa28:	mov	r1, r4
   2fa2c:	add	r0, r6, #56	; 0x38
   2fa30:	bl	2784c <fb_symbol_table_insert_item@@Base>
   2fa34:	cmp	r0, #0
   2fa38:	beq	2f414 <__flatcc_fb_clear_parser@@Base+0x13b4>
   2fa3c:	ldr	r3, [r0, #4]
   2fa40:	add	r2, r5, #68	; 0x44
   2fa44:	cmp	r3, r2
   2fa48:	moveq	r3, #0
   2fa4c:	ldreq	r2, [pc, #332]	; 2fba0 <__flatcc_fb_clear_parser@@Base+0x1b40>
   2fa50:	ldrne	r2, [pc, #332]	; 2fba4 <__flatcc_fb_clear_parser@@Base+0x1b44>
   2fa54:	ldr	r1, [r4, #4]
   2fa58:	mov	r0, r5
   2fa5c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fa60:	mov	r3, #1
   2fa64:	strh	r3, [r4, #24]
   2fa68:	b	2fa14 <__flatcc_fb_clear_parser@@Base+0x19b4>
   2fa6c:	ldrd	r0, [sp, #16]
   2fa70:	ldrd	r2, [sp, #32]
   2fa74:	cmp	r0, r2
   2fa78:	sbcs	r3, r1, r3
   2fa7c:	blt	2f9b8 <__flatcc_fb_clear_parser@@Base+0x1958>
   2fa80:	cmp	fp, #4
   2fa84:	bne	2fa94 <__flatcc_fb_clear_parser@@Base+0x1a34>
   2fa88:	ldrd	r2, [sp, #16]
   2fa8c:	orrs	r3, r2, r3
   2fa90:	beq	2fab8 <__flatcc_fb_clear_parser@@Base+0x1a58>
   2fa94:	mov	r3, #0
   2fa98:	ldr	r2, [pc, #264]	; 2fba8 <__flatcc_fb_clear_parser@@Base+0x1b48>
   2fa9c:	ldr	r1, [r4, #4]
   2faa0:	mov	r0, r5
   2faa4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2faa8:	mov	r3, #1
   2faac:	strh	r3, [r4, #56]	; 0x38
   2fab0:	mvn	r0, #0
   2fab4:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2fab8:	mov	r3, #0
   2fabc:	ldr	r2, [pc, #232]	; 2fbac <__flatcc_fb_clear_parser@@Base+0x1b4c>
   2fac0:	ldr	r1, [r4, #4]
   2fac4:	mov	r0, r5
   2fac8:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2facc:	mov	r3, #1
   2fad0:	strh	r3, [r4, #56]	; 0x38
   2fad4:	mvn	r0, #0
   2fad8:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2fadc:	mov	r3, #0
   2fae0:	ldr	r2, [pc, #200]	; 2fbb0 <__flatcc_fb_clear_parser@@Base+0x1b50>
   2fae4:	ldr	r1, [r4, #4]
   2fae8:	mov	r0, r5
   2faec:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2faf0:	mov	r3, #1
   2faf4:	strh	r3, [r4, #56]	; 0x38
   2faf8:	mvn	r0, #0
   2fafc:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2fb00:	mov	r0, sl
   2fb04:	add	sp, sp, #100	; 0x64
   2fb08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fb0c:	mov	r0, #0
   2fb10:	b	2fb04 <__flatcc_fb_clear_parser@@Base+0x1aa4>
   2fb14:	mov	r3, #0
   2fb18:	strh	r3, [r6, #92]	; 0x5c
   2fb1c:	str	r3, [sp]
   2fb20:	b	2f388 <__flatcc_fb_clear_parser@@Base+0x1328>
   2fb24:	andeq	r3, r5, ip, lsr #3
   2fb28:	andeq	r3, r5, ip, ror r5
   2fb2c:	andeq	r3, r5, r8, lsr #4
   2fb30:	andeq	r0, r0, sp, asr #9
   2fb34:	ldrdeq	r3, [r5], -r0
   2fb38:	andeq	r3, r5, ip, ror r8
   2fb3c:	muleq	r5, ip, r8
   2fb40:			; <UNDEFINED> instruction: 0x000538b4
   2fb44:	andeq	r3, r5, r8, ror #17
   2fb48:	andeq	r3, r5, r4, lsl #10
   2fb4c:	andeq	r3, r5, r4, lsr #10
   2fb50:	andeq	r3, r5, r4, asr r5
   2fb54:	andeq	r3, r5, r8, asr #11
   2fb58:	andeq	r3, r5, r4, lsr #11
   2fb5c:	strdeq	r3, [r5], -r4
   2fb60:	andeq	r3, r5, r8, lsl r6
   2fb64:	andeq	r3, r5, r4, asr #12
   2fb68:	andeq	r3, r5, r8, lsr #18
   2fb6c:	andeq	r3, r5, r0, asr fp
   2fb70:	andeq	r3, r5, r4, lsr #19
   2fb74:	andeq	r0, r0, r3, lsr #10
   2fb78:	ldrdeq	r3, [r5], -r0
   2fb7c:	andeq	r3, r5, r8, ror #19
   2fb80:	andeq	r3, r5, r0, lsr sl
   2fb84:	andeq	r3, r5, r0, ror #20
   2fb88:	andeq	r3, r5, r8, lsr #21
   2fb8c:	andeq	r3, r5, r8, asr #21
   2fb90:	andeq	r3, r5, r4, ror #21
   2fb94:	andeq	r3, r5, r4, lsl fp
   2fb98:	strdeq	r3, [r5], -r0
   2fb9c:	andeq	r3, r5, ip, ror ip
   2fba0:	andeq	r3, r5, r8, ror #18
   2fba4:	andeq	r3, r5, r8, lsl #19
   2fba8:	andeq	r3, r5, r8, asr #23
   2fbac:	andeq	r3, r5, r4, lsl #23
   2fbb0:	andeq	r3, r5, r0, lsr ip

0002fbb4 <__flatcc_fb_build_schema@@Base>:
   2fbb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fbb8:	sub	sp, sp, #236	; 0xec
   2fbbc:	mov	fp, r0
   2fbc0:	add	sl, r0, #352	; 0x160
   2fbc4:	add	r3, r0, #524	; 0x20c
   2fbc8:	str	r3, [sp, #16]
   2fbcc:	mov	r1, sl
   2fbd0:	mov	r0, r3
   2fbd4:	bl	27230 <ptr_set_find_item@@Base>
   2fbd8:	cmp	r0, #0
   2fbdc:	beq	2fc00 <__flatcc_fb_build_schema@@Base+0x4c>
   2fbe0:	ldr	r5, [fp, #392]	; 0x188
   2fbe4:	cmp	r5, #0
   2fbe8:	beq	2fd04 <__flatcc_fb_build_schema@@Base+0x150>
   2fbec:	mov	r7, #1
   2fbf0:	ldr	r8, [pc, #3972]	; 30b7c <__flatcc_fb_build_schema@@Base+0xfc8>
   2fbf4:	ldr	r4, [pc, #3972]	; 30b80 <__flatcc_fb_build_schema@@Base+0xfcc>
   2fbf8:	ldr	r6, [pc, #3972]	; 30b84 <__flatcc_fb_build_schema@@Base+0xfd0>
   2fbfc:	b	2fc20 <__flatcc_fb_build_schema@@Base+0x6c>
   2fc00:	ldr	r3, [pc, #3968]	; 30b88 <__flatcc_fb_build_schema@@Base+0xfd4>
   2fc04:	ldr	r2, [pc, #3968]	; 30b8c <__flatcc_fb_build_schema@@Base+0xfd8>
   2fc08:	ldr	r1, [pc, #3968]	; 30b90 <__flatcc_fb_build_schema@@Base+0xfdc>
   2fc0c:	ldr	r0, [pc, #3968]	; 30b94 <__flatcc_fb_build_schema@@Base+0xfe0>
   2fc10:	bl	14038 <__assert_fail@plt>
   2fc14:	ldr	r5, [r5]
   2fc18:	cmp	r5, #0
   2fc1c:	beq	2fd04 <__flatcc_fb_build_schema@@Base+0x150>
   2fc20:	ldrh	r3, [r5, #8]
   2fc24:	cmp	r3, #4
   2fc28:	bhi	2fc14 <__flatcc_fb_build_schema@@Base+0x60>
   2fc2c:	ldr	r0, [r5, #12]
   2fc30:	cmp	r0, #0
   2fc34:	beq	3275c <__flatcc_fb_build_schema@@Base+0x2ba8>
   2fc38:	ldr	lr, [r0]
   2fc3c:	cmp	lr, #0
   2fc40:	beq	3275c <__flatcc_fb_build_schema@@Base+0x2ba8>
   2fc44:	ldr	r1, [pc, #3896]	; 30b84 <__flatcc_fb_build_schema@@Base+0xfd0>
   2fc48:	ldr	r3, [lr, #4]
   2fc4c:	ldr	r2, [r3]
   2fc50:	ldr	ip, [r3, #4]
   2fc54:	cmp	ip, #0
   2fc58:	beq	2fc74 <__flatcc_fb_build_schema@@Base+0xc0>
   2fc5c:	add	ip, r2, ip
   2fc60:	ldrb	r3, [r2], #1
   2fc64:	eor	r3, r3, r1
   2fc68:	mul	r1, r4, r3
   2fc6c:	cmp	r2, ip
   2fc70:	bne	2fc60 <__flatcc_fb_build_schema@@Base+0xac>
   2fc74:	eor	r3, r1, #46	; 0x2e
   2fc78:	mul	r1, r4, r3
   2fc7c:	ldr	lr, [lr]
   2fc80:	cmp	lr, #0
   2fc84:	bne	2fc48 <__flatcc_fb_build_schema@@Base+0x94>
   2fc88:	ldr	r2, [r5, #4]
   2fc8c:	ldr	r3, [r2]
   2fc90:	ldr	r2, [r2, #4]
   2fc94:	sub	ip, r2, #1
   2fc98:	cmp	r2, #0
   2fc9c:	beq	327b4 <__flatcc_fb_build_schema@@Base+0x2c00>
   2fca0:	sub	r2, r3, #1
   2fca4:	add	ip, r3, ip
   2fca8:	ldrb	r3, [r2, #1]!
   2fcac:	eor	r3, r3, r1
   2fcb0:	mul	r1, r4, r3
   2fcb4:	cmp	ip, r2
   2fcb8:	bne	2fca8 <__flatcc_fb_build_schema@@Base+0xf4>
   2fcbc:	cmp	r1, #0
   2fcc0:	moveq	r1, r6
   2fcc4:	str	r1, [r5, #88]	; 0x58
   2fcc8:	str	sl, [r5, #16]
   2fccc:	cmp	r0, #0
   2fcd0:	beq	2fc14 <__flatcc_fb_build_schema@@Base+0x60>
   2fcd4:	mov	r2, r7
   2fcd8:	mov	r1, r5
   2fcdc:	add	r0, r0, #4
   2fce0:	bl	2784c <fb_symbol_table_insert_item@@Base>
   2fce4:	cmp	r0, #0
   2fce8:	beq	2fc14 <__flatcc_fb_build_schema@@Base+0x60>
   2fcec:	ldr	r3, [r0, #4]
   2fcf0:	mov	r2, r8
   2fcf4:	ldr	r1, [r5, #4]
   2fcf8:	mov	r0, fp
   2fcfc:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fd00:	b	2fc14 <__flatcc_fb_build_schema@@Base+0x60>
   2fd04:	ldr	r4, [fp, #356]	; 0x164
   2fd08:	cmp	r4, #0
   2fd0c:	beq	2fd8c <__flatcc_fb_build_schema@@Base+0x1d8>
   2fd10:	mov	r5, #1
   2fd14:	ldr	r7, [pc, #3708]	; 30b98 <__flatcc_fb_build_schema@@Base+0xfe4>
   2fd18:	mov	r6, #0
   2fd1c:	b	2fd50 <__flatcc_fb_build_schema@@Base+0x19c>
   2fd20:	ldr	r3, [r4, #12]
   2fd24:	str	r3, [sp, #4]
   2fd28:	ldr	r3, [r4, #8]
   2fd2c:	str	r3, [sp]
   2fd30:	mov	r3, r6
   2fd34:	mov	r2, r7
   2fd38:	mov	r1, r6
   2fd3c:	mov	r0, fp
   2fd40:	bl	297c8 <__flatcc_error_report@@Base>
   2fd44:	ldr	r4, [r4]
   2fd48:	cmp	r4, #0
   2fd4c:	beq	2fd8c <__flatcc_fb_build_schema@@Base+0x1d8>
   2fd50:	ldr	r0, [fp, #412]	; 0x19c
   2fd54:	mov	r2, r5
   2fd58:	mov	r1, r4
   2fd5c:	add	r0, r0, #16
   2fd60:	bl	39334 <fb_name_table_insert_item@@Base>
   2fd64:	cmp	r0, #0
   2fd68:	beq	2fd44 <__flatcc_fb_build_schema@@Base+0x190>
   2fd6c:	cmp	r4, #0
   2fd70:	bne	2fd20 <__flatcc_fb_build_schema@@Base+0x16c>
   2fd74:	mov	r3, r6
   2fd78:	mov	r2, r7
   2fd7c:	mov	r1, r6
   2fd80:	mov	r0, fp
   2fd84:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2fd88:	b	2fd44 <__flatcc_fb_build_schema@@Base+0x190>
   2fd8c:	ldr	r6, [pc, #3592]	; 30b9c <__flatcc_fb_build_schema@@Base+0xfe8>
   2fd90:	mov	r5, #0
   2fd94:	mov	r7, #1
   2fd98:	mov	r9, #2
   2fd9c:	mov	r8, r5
   2fda0:	b	2fe14 <__flatcc_fb_build_schema@@Base+0x260>
   2fda4:	ldr	r3, [pc, #3572]	; 30ba0 <__flatcc_fb_build_schema@@Base+0xfec>
   2fda8:	ldr	r3, [r3]
   2fdac:	mov	r2, #34	; 0x22
   2fdb0:	mov	r1, #1
   2fdb4:	ldr	r0, [pc, #3560]	; 30ba4 <__flatcc_fb_build_schema@@Base+0xff0>
   2fdb8:	bl	13f18 <fwrite@plt>
   2fdbc:	mov	r0, #1
   2fdc0:	bl	13f6c <exit@plt>
   2fdc4:	ldr	r3, [fp, #52]	; 0x34
   2fdc8:	add	r3, r3, #32
   2fdcc:	str	r3, [fp, #52]	; 0x34
   2fdd0:	str	r5, [r4, #24]
   2fdd4:	ldr	r0, [r6, #4]!
   2fdd8:	str	r0, [r4, #8]
   2fddc:	bl	13f78 <strlen@plt>
   2fde0:	str	r0, [r4, #12]
   2fde4:	strh	r9, [r4, #16]
   2fde8:	str	r8, [r4]
   2fdec:	ldr	r0, [fp, #412]	; 0x19c
   2fdf0:	mov	r2, r7
   2fdf4:	mov	r1, r4
   2fdf8:	add	r0, r0, #16
   2fdfc:	bl	39334 <fb_name_table_insert_item@@Base>
   2fe00:	cmp	r0, #0
   2fe04:	strne	r5, [r0, #24]
   2fe08:	add	r5, r5, #1
   2fe0c:	cmp	r5, #12
   2fe10:	beq	2fe5c <__flatcc_fb_build_schema@@Base+0x2a8>
   2fe14:	ldr	r4, [fp, #52]	; 0x34
   2fe18:	add	r2, r4, #32
   2fe1c:	ldr	r3, [fp, #44]	; 0x2c
   2fe20:	cmp	r2, r3
   2fe24:	bls	2fdc4 <__flatcc_fb_build_schema@@Base+0x210>
   2fe28:	mov	r1, r7
   2fe2c:	mov	r0, #65536	; 0x10000
   2fe30:	bl	13ea0 <calloc@plt>
   2fe34:	cmp	r0, #0
   2fe38:	beq	2fda4 <__flatcc_fb_build_schema@@Base+0x1f0>
   2fe3c:	ldr	r3, [fp, #48]	; 0x30
   2fe40:	str	r3, [r0]
   2fe44:	str	r0, [fp, #48]	; 0x30
   2fe48:	add	r4, r0, #16
   2fe4c:	str	r4, [fp, #52]	; 0x34
   2fe50:	add	r0, r0, #65536	; 0x10000
   2fe54:	str	r0, [fp, #44]	; 0x2c
   2fe58:	b	2fdc4 <__flatcc_fb_build_schema@@Base+0x210>
   2fe5c:	ldr	r3, [fp, #184]	; 0xb8
   2fe60:	cmp	r3, #0
   2fe64:	bne	2feac <__flatcc_fb_build_schema@@Base+0x2f8>
   2fe68:	ldr	r4, [fp, #392]	; 0x188
   2fe6c:	cmp	r4, #0
   2fe70:	beq	2ff60 <__flatcc_fb_build_schema@@Base+0x3ac>
   2fe74:	mov	r5, #1
   2fe78:	b	2fe88 <__flatcc_fb_build_schema@@Base+0x2d4>
   2fe7c:	ldr	r4, [r4]
   2fe80:	cmp	r4, #0
   2fe84:	beq	2feac <__flatcc_fb_build_schema@@Base+0x2f8>
   2fe88:	ldrh	r3, [r4, #8]
   2fe8c:	cmp	r3, #3
   2fe90:	bne	2fe7c <__flatcc_fb_build_schema@@Base+0x2c8>
   2fe94:	mov	r1, r4
   2fe98:	mov	r0, fp
   2fe9c:	bl	2f074 <__flatcc_fb_clear_parser@@Base+0x1014>
   2fea0:	cmp	r0, #0
   2fea4:	strhne	r5, [r4, #48]	; 0x30
   2fea8:	b	2fe7c <__flatcc_fb_build_schema@@Base+0x2c8>
   2feac:	ldr	r4, [fp, #392]	; 0x188
   2feb0:	cmp	r4, #0
   2feb4:	beq	2ff60 <__flatcc_fb_build_schema@@Base+0x3ac>
   2feb8:	mov	r5, #1
   2febc:	b	2fee0 <__flatcc_fb_build_schema@@Base+0x32c>
   2fec0:	mov	r1, r4
   2fec4:	mov	r0, fp
   2fec8:	bl	2e710 <__flatcc_fb_clear_parser@@Base+0x6b0>
   2fecc:	cmp	r0, #0
   2fed0:	strhne	r5, [r4, #48]	; 0x30
   2fed4:	ldr	r4, [r4]
   2fed8:	cmp	r4, #0
   2fedc:	beq	2ff60 <__flatcc_fb_build_schema@@Base+0x3ac>
   2fee0:	ldrh	r3, [r4, #8]
   2fee4:	cmp	r3, #4
   2fee8:	ldrls	pc, [pc, r3, lsl #2]
   2feec:	b	2ff40 <__flatcc_fb_build_schema@@Base+0x38c>
   2fef0:	ldrdeq	pc, [r2], -r4
   2fef4:	andeq	pc, r2, r0, asr #29
   2fef8:	ldrdeq	pc, [r2], -r4
   2fefc:	andeq	pc, r2, r4, lsl #30
   2ff00:	andeq	pc, r2, r8, lsr #30
   2ff04:	ldr	r3, [fp, #184]	; 0xb8
   2ff08:	cmp	r3, #0
   2ff0c:	beq	2fed4 <__flatcc_fb_build_schema@@Base+0x320>
   2ff10:	mov	r1, r4
   2ff14:	mov	r0, fp
   2ff18:	bl	2f074 <__flatcc_fb_clear_parser@@Base+0x1014>
   2ff1c:	cmp	r0, #0
   2ff20:	strhne	r5, [r4, #48]	; 0x30
   2ff24:	b	2fed4 <__flatcc_fb_build_schema@@Base+0x320>
   2ff28:	mov	r1, r4
   2ff2c:	mov	r0, fp
   2ff30:	bl	2f074 <__flatcc_fb_clear_parser@@Base+0x1014>
   2ff34:	cmp	r0, #0
   2ff38:	strhne	r5, [r4, #48]	; 0x30
   2ff3c:	b	2fed4 <__flatcc_fb_build_schema@@Base+0x320>
   2ff40:	mov	r3, #0
   2ff44:	ldr	r2, [pc, #3164]	; 30ba8 <__flatcc_fb_build_schema@@Base+0xff4>
   2ff48:	ldr	r1, [r4, #4]
   2ff4c:	mov	r0, fp
   2ff50:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   2ff54:	mvn	r0, #0
   2ff58:	add	sp, sp, #236	; 0xec
   2ff5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ff60:	ldr	r4, [fp, #392]	; 0x188
   2ff64:	cmp	r4, #0
   2ff68:	beq	32230 <__flatcc_fb_build_schema@@Base+0x267c>
   2ff6c:	mov	r5, #1
   2ff70:	b	2ff80 <__flatcc_fb_build_schema@@Base+0x3cc>
   2ff74:	ldr	r4, [r4]
   2ff78:	cmp	r4, #0
   2ff7c:	beq	2ffb0 <__flatcc_fb_build_schema@@Base+0x3fc>
   2ff80:	ldrh	r3, [r4, #8]
   2ff84:	cmp	r3, #1
   2ff88:	bne	2ff74 <__flatcc_fb_build_schema@@Base+0x3c0>
   2ff8c:	ldrh	r3, [r4, #48]	; 0x30
   2ff90:	cmp	r3, #1
   2ff94:	beq	2ff74 <__flatcc_fb_build_schema@@Base+0x3c0>
   2ff98:	mov	r1, r4
   2ff9c:	mov	r0, fp
   2ffa0:	bl	2e278 <__flatcc_fb_clear_parser@@Base+0x218>
   2ffa4:	cmp	r0, #0
   2ffa8:	strhne	r5, [r4, #48]	; 0x30
   2ffac:	b	2ff74 <__flatcc_fb_build_schema@@Base+0x3c0>
   2ffb0:	ldr	r3, [fp, #392]	; 0x188
   2ffb4:	str	r3, [sp, #12]
   2ffb8:	cmp	r3, #0
   2ffbc:	beq	32230 <__flatcc_fb_build_schema@@Base+0x267c>
   2ffc0:	mov	r9, sl
   2ffc4:	mov	r8, fp
   2ffc8:	b	31ad0 <__flatcc_fb_build_schema@@Base+0x1f1c>
   2ffcc:	ldr	r3, [sp, #12]
   2ffd0:	ldrh	r3, [r3, #48]	; 0x30
   2ffd4:	str	r3, [sp, #56]	; 0x38
   2ffd8:	cmp	r3, #1
   2ffdc:	beq	31abc <__flatcc_fb_build_schema@@Base+0x1f08>
   2ffe0:	cmp	r3, #0
   2ffe4:	bne	30020 <__flatcc_fb_build_schema@@Base+0x46c>
   2ffe8:	ldr	r3, [sp, #12]
   2ffec:	ldr	r4, [r3, #28]
   2fff0:	mov	r2, #48	; 0x30
   2fff4:	mov	r1, #0
   2fff8:	add	r0, sp, #84	; 0x54
   2fffc:	bl	13f9c <memset@plt>
   30000:	cmp	r4, #0
   30004:	beq	30248 <__flatcc_fb_build_schema@@Base+0x694>
   30008:	ldr	r6, [sp, #56]	; 0x38
   3000c:	mov	r5, #100	; 0x64
   30010:	ldr	r7, [pc, #2964]	; 30bac <__flatcc_fb_build_schema@@Base+0xff8>
   30014:	ldr	fp, [pc, #2964]	; 30bb0 <__flatcc_fb_build_schema@@Base+0xffc>
   30018:	ldr	sl, [pc, #2964]	; 30bb4 <__flatcc_fb_build_schema@@Base+0x1000>
   3001c:	b	3009c <__flatcc_fb_build_schema@@Base+0x4e8>
   30020:	ldr	r3, [pc, #2960]	; 30bb8 <__flatcc_fb_build_schema@@Base+0x1004>
   30024:	ldr	r2, [pc, #2960]	; 30bbc <__flatcc_fb_build_schema@@Base+0x1008>
   30028:	ldr	r1, [pc, #2912]	; 30b90 <__flatcc_fb_build_schema@@Base+0xfdc>
   3002c:	ldr	r0, [pc, #3180]	; 30ca0 <__flatcc_fb_build_schema@@Base+0x10ec>
   30030:	bl	14038 <__assert_fail@plt>
   30034:	mov	r3, #0
   30038:	ldr	r2, [pc, #2944]	; 30bc0 <__flatcc_fb_build_schema@@Base+0x100c>
   3003c:	ldr	r1, [r4, #4]
   30040:	mov	r0, r8
   30044:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30048:	b	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   3004c:	mov	r3, #0
   30050:	ldr	r2, [pc, #2924]	; 30bc4 <__flatcc_fb_build_schema@@Base+0x1010>
   30054:	ldr	r1, [r4, #4]
   30058:	mov	r0, r8
   3005c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30060:	b	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   30064:	mov	r3, #0
   30068:	ldr	r2, [pc, #2904]	; 30bc8 <__flatcc_fb_build_schema@@Base+0x1014>
   3006c:	ldr	r1, [r4, #4]
   30070:	mov	r0, r8
   30074:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30078:	ldr	r4, [r4]
   3007c:	subs	r5, r5, #1
   30080:	movne	r3, #1
   30084:	moveq	r3, #0
   30088:	cmp	r4, #0
   3008c:	moveq	r3, #0
   30090:	andne	r3, r3, #1
   30094:	cmp	r3, #0
   30098:	beq	301e4 <__flatcc_fb_build_schema@@Base+0x630>
   3009c:	ldr	r3, [r4, #4]
   300a0:	ldr	r0, [r8, #412]	; 0x19c
   300a4:	ldr	r2, [r3, #4]
   300a8:	ldr	r1, [r3]
   300ac:	add	r0, r0, #16
   300b0:	bl	3935c <fb_name_table_find@@Base>
   300b4:	cmp	r0, #0
   300b8:	beq	30034 <__flatcc_fb_build_schema@@Base+0x480>
   300bc:	ldr	r3, [r0, #24]
   300c0:	cmp	r3, #0
   300c4:	beq	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   300c8:	cmp	r3, #3
   300cc:	bne	3004c <__flatcc_fb_build_schema@@Base+0x498>
   300d0:	mov	r2, #1
   300d4:	orr	r6, r6, r2, lsl r3
   300d8:	uxth	r6, r6
   300dc:	add	r2, sp, #84	; 0x54
   300e0:	ldr	r2, [r2, r3, lsl #2]
   300e4:	cmp	r2, #0
   300e8:	bne	30064 <__flatcc_fb_build_schema@@Base+0x4b0>
   300ec:	add	r2, sp, #84	; 0x54
   300f0:	str	r4, [r2, r3, lsl #2]
   300f4:	ldr	r2, [pc, #2824]	; 30c04 <__flatcc_fb_build_schema@@Base+0x1050>
   300f8:	add	r3, r2, r3, lsl #2
   300fc:	ldr	r3, [r3, #76]	; 0x4c
   30100:	cmp	r3, #0
   30104:	bne	3012c <__flatcc_fb_build_schema@@Base+0x578>
   30108:	ldrh	r3, [r4, #16]
   3010c:	cmp	r3, #0
   30110:	beq	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   30114:	mov	r3, #0
   30118:	mov	r2, sl
   3011c:	ldr	r1, [r4, #4]
   30120:	mov	r0, r8
   30124:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30128:	b	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   3012c:	cmp	r3, #2
   30130:	beq	30160 <__flatcc_fb_build_schema@@Base+0x5ac>
   30134:	cmp	r3, #5
   30138:	bne	30184 <__flatcc_fb_build_schema@@Base+0x5d0>
   3013c:	ldrh	r3, [r4, #16]
   30140:	cmp	r3, #5
   30144:	beq	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   30148:	mov	r3, #0
   3014c:	mov	r2, r7
   30150:	ldr	r1, [r4, #4]
   30154:	mov	r0, r8
   30158:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3015c:	b	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   30160:	ldrh	r3, [r4, #16]
   30164:	cmp	r3, #2
   30168:	beq	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   3016c:	mov	r3, #0
   30170:	mov	r2, fp
   30174:	ldr	r1, [r4, #4]
   30178:	mov	r0, r8
   3017c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30180:	b	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   30184:	cmp	r3, #4
   30188:	bne	301b8 <__flatcc_fb_build_schema@@Base+0x604>
   3018c:	ldrh	r3, [r4, #16]
   30190:	sub	r3, r3, #4
   30194:	uxth	r3, r3
   30198:	cmp	r3, #1
   3019c:	bls	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   301a0:	mov	r3, #0
   301a4:	ldr	r2, [pc, #2592]	; 30bcc <__flatcc_fb_build_schema@@Base+0x1018>
   301a8:	ldr	r1, [r4, #4]
   301ac:	mov	r0, r8
   301b0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   301b4:	b	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   301b8:	cmp	r3, #6
   301bc:	bne	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   301c0:	ldrh	r3, [r4, #16]
   301c4:	cmp	r3, #6
   301c8:	beq	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   301cc:	mov	r3, #0
   301d0:	ldr	r2, [pc, #2552]	; 30bd0 <__flatcc_fb_build_schema@@Base+0x101c>
   301d4:	ldr	r1, [r4, #4]
   301d8:	mov	r0, r8
   301dc:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   301e0:	b	30078 <__flatcc_fb_build_schema@@Base+0x4c4>
   301e4:	cmp	r4, #0
   301e8:	beq	301fc <__flatcc_fb_build_schema@@Base+0x648>
   301ec:	ldr	r2, [pc, #2528]	; 30bd4 <__flatcc_fb_build_schema@@Base+0x1020>
   301f0:	ldr	r1, [r4, #4]
   301f4:	mov	r0, r8
   301f8:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   301fc:	ldr	sl, [sp, #12]
   30200:	strh	r6, [sl, #92]	; 0x5c
   30204:	ldr	fp, [sl, #20]
   30208:	cmp	fp, #0
   3020c:	beq	327e4 <__flatcc_fb_build_schema@@Base+0x2c30>
   30210:	mov	r3, #0
   30214:	mov	r1, r3
   30218:	str	r3, [sp, #68]	; 0x44
   3021c:	str	r3, [sp, #40]	; 0x28
   30220:	str	r3, [sp, #64]	; 0x40
   30224:	mov	r2, #0
   30228:	mov	r3, #0
   3022c:	mov	r4, r2
   30230:	mov	r5, r3
   30234:	strd	r4, [sp, #48]	; 0x30
   30238:	str	r1, [sp, #20]
   3023c:	mov	r3, r5
   30240:	strd	r2, [sp, #24]
   30244:	b	3176c <__flatcc_fb_build_schema@@Base+0x1bb8>
   30248:	ldr	r6, [sp, #56]	; 0x38
   3024c:	b	301fc <__flatcc_fb_build_schema@@Base+0x648>
   30250:	ldrh	r3, [fp, #8]
   30254:	cmp	r3, #5
   30258:	bne	302a0 <__flatcc_fb_build_schema@@Base+0x6ec>
   3025c:	ldrh	r3, [fp, #24]
   30260:	cmp	r3, #1
   30264:	beq	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   30268:	sub	r3, r3, #7
   3026c:	uxth	r3, r3
   30270:	cmp	r3, #1
   30274:	bls	302c4 <__flatcc_fb_build_schema@@Base+0x710>
   30278:	ldr	r4, [fp, #64]	; 0x40
   3027c:	mov	r2, #48	; 0x30
   30280:	mov	r1, #0
   30284:	add	r0, sp, #84	; 0x54
   30288:	bl	13f9c <memset@plt>
   3028c:	cmp	r4, #0
   30290:	beq	305d0 <__flatcc_fb_build_schema@@Base+0xa1c>
   30294:	ldr	r6, [sp, #56]	; 0x38
   30298:	mov	r5, #100	; 0x64
   3029c:	b	30324 <__flatcc_fb_build_schema@@Base+0x770>
   302a0:	mov	r3, #0
   302a4:	ldr	r2, [pc, #2560]	; 30cac <__flatcc_fb_build_schema@@Base+0x10f8>
   302a8:	ldr	r1, [fp, #4]
   302ac:	mov	r0, r8
   302b0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   302b4:	mov	r3, #1
   302b8:	ldr	r2, [sp, #12]
   302bc:	strh	r3, [r2, #48]	; 0x30
   302c0:	b	31abc <__flatcc_fb_build_schema@@Base+0x1f08>
   302c4:	ldr	r0, [fp, #16]
   302c8:	bl	2e170 <__flatcc_fb_clear_parser@@Base+0x110>
   302cc:	str	r0, [fp, #16]
   302d0:	b	30278 <__flatcc_fb_build_schema@@Base+0x6c4>
   302d4:	mov	r3, #0
   302d8:	ldr	r2, [pc, #2272]	; 30bc0 <__flatcc_fb_build_schema@@Base+0x100c>
   302dc:	ldr	r1, [r4, #4]
   302e0:	mov	r0, r8
   302e4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   302e8:	b	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   302ec:	mov	r3, #0
   302f0:	ldr	r2, [pc, #2252]	; 30bc4 <__flatcc_fb_build_schema@@Base+0x1010>
   302f4:	ldr	r1, [r4, #4]
   302f8:	mov	r0, r8
   302fc:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30300:	ldr	r4, [r4]
   30304:	subs	r5, r5, #1
   30308:	movne	r3, #1
   3030c:	moveq	r3, #0
   30310:	cmp	r4, #0
   30314:	moveq	r3, #0
   30318:	andne	r3, r3, #1
   3031c:	cmp	r3, #0
   30320:	beq	3048c <__flatcc_fb_build_schema@@Base+0x8d8>
   30324:	ldr	r3, [r4, #4]
   30328:	ldr	r0, [r8, #412]	; 0x19c
   3032c:	ldr	r2, [r3, #4]
   30330:	ldr	r1, [r3]
   30334:	add	r0, r0, #16
   30338:	bl	3935c <fb_name_table_find@@Base>
   3033c:	cmp	r0, #0
   30340:	beq	302d4 <__flatcc_fb_build_schema@@Base+0x720>
   30344:	ldr	r3, [r0, #24]
   30348:	cmp	r3, #0
   3034c:	beq	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   30350:	ldr	r2, [pc, #2176]	; 30bd8 <__flatcc_fb_build_schema@@Base+0x1024>
   30354:	asr	r2, r2, r3
   30358:	tst	r2, #1
   3035c:	beq	302ec <__flatcc_fb_build_schema@@Base+0x738>
   30360:	mov	r2, #1
   30364:	orr	r6, r6, r2, lsl r3
   30368:	uxth	r6, r6
   3036c:	add	r2, sp, #84	; 0x54
   30370:	ldr	r2, [r2, r3, lsl #2]
   30374:	cmp	r2, #0
   30378:	beq	30394 <__flatcc_fb_build_schema@@Base+0x7e0>
   3037c:	mov	r3, #0
   30380:	ldr	r2, [pc, #2112]	; 30bc8 <__flatcc_fb_build_schema@@Base+0x1014>
   30384:	ldr	r1, [r4, #4]
   30388:	mov	r0, r8
   3038c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30390:	b	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   30394:	add	r2, sp, #84	; 0x54
   30398:	str	r4, [r2, r3, lsl #2]
   3039c:	ldr	r2, [pc, #2144]	; 30c04 <__flatcc_fb_build_schema@@Base+0x1050>
   303a0:	add	r3, r2, r3, lsl #2
   303a4:	ldr	r3, [r3, #76]	; 0x4c
   303a8:	cmp	r3, #0
   303ac:	bne	303d4 <__flatcc_fb_build_schema@@Base+0x820>
   303b0:	ldrh	r3, [r4, #16]
   303b4:	cmp	r3, #0
   303b8:	beq	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   303bc:	mov	r3, #0
   303c0:	ldr	r2, [pc, #2028]	; 30bb4 <__flatcc_fb_build_schema@@Base+0x1000>
   303c4:	ldr	r1, [r4, #4]
   303c8:	mov	r0, r8
   303cc:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   303d0:	b	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   303d4:	cmp	r3, #2
   303d8:	beq	30408 <__flatcc_fb_build_schema@@Base+0x854>
   303dc:	cmp	r3, #5
   303e0:	bne	3042c <__flatcc_fb_build_schema@@Base+0x878>
   303e4:	ldrh	r3, [r4, #16]
   303e8:	cmp	r3, #5
   303ec:	beq	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   303f0:	mov	r3, #0
   303f4:	ldr	r2, [pc, #1968]	; 30bac <__flatcc_fb_build_schema@@Base+0xff8>
   303f8:	ldr	r1, [r4, #4]
   303fc:	mov	r0, r8
   30400:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30404:	b	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   30408:	ldrh	r3, [r4, #16]
   3040c:	cmp	r3, #2
   30410:	beq	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   30414:	mov	r3, #0
   30418:	ldr	r2, [pc, #1936]	; 30bb0 <__flatcc_fb_build_schema@@Base+0xffc>
   3041c:	ldr	r1, [r4, #4]
   30420:	mov	r0, r8
   30424:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30428:	b	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   3042c:	cmp	r3, #4
   30430:	bne	30460 <__flatcc_fb_build_schema@@Base+0x8ac>
   30434:	ldrh	r3, [r4, #16]
   30438:	sub	r3, r3, #4
   3043c:	uxth	r3, r3
   30440:	cmp	r3, #1
   30444:	bls	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   30448:	mov	r3, #0
   3044c:	ldr	r2, [pc, #1912]	; 30bcc <__flatcc_fb_build_schema@@Base+0x1018>
   30450:	ldr	r1, [r4, #4]
   30454:	mov	r0, r8
   30458:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3045c:	b	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   30460:	cmp	r3, #6
   30464:	bne	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   30468:	ldrh	r3, [r4, #16]
   3046c:	cmp	r3, #6
   30470:	beq	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   30474:	mov	r3, #0
   30478:	ldr	r2, [pc, #1872]	; 30bd0 <__flatcc_fb_build_schema@@Base+0x101c>
   3047c:	ldr	r1, [r4, #4]
   30480:	mov	r0, r8
   30484:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30488:	b	30300 <__flatcc_fb_build_schema@@Base+0x74c>
   3048c:	cmp	r4, #0
   30490:	beq	304a4 <__flatcc_fb_build_schema@@Base+0x8f0>
   30494:	ldr	r2, [pc, #1848]	; 30bd4 <__flatcc_fb_build_schema@@Base+0x1020>
   30498:	ldr	r1, [r4, #4]
   3049c:	mov	r0, r8
   304a0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   304a4:	strh	r6, [fp, #72]	; 0x48
   304a8:	ldr	r3, [sp, #108]	; 0x6c
   304ac:	str	r3, [sp, #44]	; 0x2c
   304b0:	cmp	r3, #0
   304b4:	beq	30648 <__flatcc_fb_build_schema@@Base+0xa94>
   304b8:	ldrh	r3, [fp, #24]
   304bc:	cmp	r3, #7
   304c0:	bne	305d8 <__flatcc_fb_build_schema@@Base+0xa24>
   304c4:	ldr	r3, [fp, #16]
   304c8:	cmp	r3, #4
   304cc:	bne	305d8 <__flatcc_fb_build_schema@@Base+0xa24>
   304d0:	ldr	r2, [sp, #44]	; 0x2c
   304d4:	ldrh	r3, [r2, #16]
   304d8:	cmp	r3, #2
   304dc:	bne	327c8 <__flatcc_fb_build_schema@@Base+0x2c14>
   304e0:	ldr	r1, [r2, #8]
   304e4:	ldr	lr, [r2, #12]
   304e8:	cmp	lr, #0
   304ec:	ble	30604 <__flatcc_fb_build_schema@@Base+0xa50>
   304f0:	sub	r4, lr, #1
   304f4:	mov	ip, r4
   304f8:	ldrb	r3, [r1, r4]
   304fc:	cmp	r3, #46	; 0x2e
   30500:	subne	r2, lr, #1
   30504:	addne	r2, r1, r2
   30508:	movne	r3, r4
   3050c:	beq	305f4 <__flatcc_fb_build_schema@@Base+0xa40>
   30510:	cmp	r3, #0
   30514:	beq	305fc <__flatcc_fb_build_schema@@Base+0xa48>
   30518:	sub	r3, r3, #1
   3051c:	mov	ip, r3
   30520:	ldrb	r0, [r2, #-1]!
   30524:	cmp	r0, #46	; 0x2e
   30528:	bne	30510 <__flatcc_fb_build_schema@@Base+0x95c>
   3052c:	add	ip, ip, #1
   30530:	add	r2, r1, ip
   30534:	str	r2, [sp, #32]
   30538:	mov	lr, r4
   3053c:	ldr	r6, [sl, #12]
   30540:	sub	r2, lr, r3
   30544:	str	r2, [sp, #36]	; 0x24
   30548:	adds	r2, r6, #0
   3054c:	movne	r2, #1
   30550:	cmp	r3, #0
   30554:	movne	r2, #0
   30558:	cmp	r2, #0
   3055c:	bne	307ac <__flatcc_fb_build_schema@@Base+0xbf8>
   30560:	cmp	r9, #0
   30564:	beq	305a4 <__flatcc_fb_build_schema@@Base+0x9f0>
   30568:	ldr	r0, [r8, #412]	; 0x19c
   3056c:	cmp	r0, #0
   30570:	beq	305a4 <__flatcc_fb_build_schema@@Base+0x9f0>
   30574:	mov	r2, r3
   30578:	cmp	r3, #0
   3057c:	moveq	r1, #0
   30580:	bl	287c8 <fb_scope_table_find@@Base>
   30584:	cmp	r0, #0
   30588:	beq	305a4 <__flatcc_fb_build_schema@@Base+0x9f0>
   3058c:	ldr	r2, [sp, #36]	; 0x24
   30590:	ldr	r1, [sp, #32]
   30594:	add	r0, r0, #4
   30598:	bl	27878 <fb_symbol_table_find@@Base>
   3059c:	subs	r4, r0, #0
   305a0:	bne	30624 <__flatcc_fb_build_schema@@Base+0xa70>
   305a4:	ldr	r2, [sp, #44]	; 0x2c
   305a8:	ldr	r1, [r2, #4]
   305ac:	ldr	r3, [r2, #12]
   305b0:	str	r3, [sp, #4]
   305b4:	ldr	r3, [r2, #8]
   305b8:	str	r3, [sp]
   305bc:	mov	r3, #0
   305c0:	ldr	r2, [pc, #1556]	; 30bdc <__flatcc_fb_build_schema@@Base+0x1028>
   305c4:	mov	r0, r8
   305c8:	bl	297c8 <__flatcc_error_report@@Base>
   305cc:	b	30648 <__flatcc_fb_build_schema@@Base+0xa94>
   305d0:	ldr	r6, [sp, #56]	; 0x38
   305d4:	b	304a4 <__flatcc_fb_build_schema@@Base+0x8f0>
   305d8:	mov	r3, #0
   305dc:	ldr	r2, [pc, #1532]	; 30be0 <__flatcc_fb_build_schema@@Base+0x102c>
   305e0:	ldr	r1, [sp, #44]	; 0x2c
   305e4:	ldr	r1, [r1, #4]
   305e8:	mov	r0, r8
   305ec:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   305f0:	b	30648 <__flatcc_fb_build_schema@@Base+0xa94>
   305f4:	mov	r3, r4
   305f8:	b	3052c <__flatcc_fb_build_schema@@Base+0x978>
   305fc:	str	r1, [sp, #32]
   30600:	b	3053c <__flatcc_fb_build_schema@@Base+0x988>
   30604:	mov	r3, lr
   30608:	str	r1, [sp, #32]
   3060c:	b	3053c <__flatcc_fb_build_schema@@Base+0x988>
   30610:	ldr	r1, [r4, #16]
   30614:	ldr	r0, [sp, #16]
   30618:	bl	27230 <ptr_set_find_item@@Base>
   3061c:	cmp	r0, #0
   30620:	beq	307d0 <__flatcc_fb_build_schema@@Base+0xc1c>
   30624:	ldrh	r3, [r4, #8]
   30628:	cmp	r3, #0
   3062c:	beq	30644 <__flatcc_fb_build_schema@@Base+0xa90>
   30630:	ldr	r2, [r8, #176]	; 0xb0
   30634:	cmp	r2, #0
   30638:	beq	30838 <__flatcc_fb_build_schema@@Base+0xc84>
   3063c:	cmp	r3, #1
   30640:	bne	30854 <__flatcc_fb_build_schema@@Base+0xca0>
   30644:	str	r4, [fp, #104]	; 0x68
   30648:	ldrh	r3, [fp, #72]	; 0x48
   3064c:	tst	r3, #256	; 0x100
   30650:	beq	30660 <__flatcc_fb_build_schema@@Base+0xaac>
   30654:	ldrh	r3, [fp, #24]
   30658:	cmp	r3, #8
   3065c:	beq	30870 <__flatcc_fb_build_schema@@Base+0xcbc>
   30660:	ldrh	r3, [fp, #72]	; 0x48
   30664:	tst	r3, #1024	; 0x400
   30668:	beq	3068c <__flatcc_fb_build_schema@@Base+0xad8>
   3066c:	ldrh	r3, [fp, #24]
   30670:	cmp	r3, #7
   30674:	beq	327d4 <__flatcc_fb_build_schema@@Base+0x2c20>
   30678:	mov	r3, #0
   3067c:	ldr	r2, [pc, #1376]	; 30be4 <__flatcc_fb_build_schema@@Base+0x1030>
   30680:	ldr	r1, [fp, #4]
   30684:	mov	r0, r8
   30688:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3068c:	ldrh	r3, [fp, #72]	; 0x48
   30690:	tst	r3, #2048	; 0x800
   30694:	beq	306b8 <__flatcc_fb_build_schema@@Base+0xb04>
   30698:	ldrh	r3, [fp, #24]
   3069c:	cmp	r3, #7
   306a0:	beq	30888 <__flatcc_fb_build_schema@@Base+0xcd4>
   306a4:	mov	r3, #0
   306a8:	ldr	r2, [pc, #1336]	; 30be8 <__flatcc_fb_build_schema@@Base+0x1034>
   306ac:	ldr	r1, [fp, #4]
   306b0:	mov	r0, r8
   306b4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   306b8:	ldrh	r3, [fp, #72]	; 0x48
   306bc:	and	r3, r3, #3072	; 0xc00
   306c0:	cmp	r3, #3072	; 0xc00
   306c4:	beq	30898 <__flatcc_fb_build_schema@@Base+0xce4>
   306c8:	ldr	r6, [sp, #88]	; 0x58
   306cc:	adds	r3, r6, #0
   306d0:	movne	r3, #1
   306d4:	mov	r1, r3
   306d8:	str	r3, [sp, #60]	; 0x3c
   306dc:	ldrd	r2, [sp, #24]
   306e0:	mov	r0, r2
   306e4:	orrs	r3, r0, r3
   306e8:	mov	r3, r1
   306ec:	movne	r3, #0
   306f0:	andeq	r3, r3, #1
   306f4:	cmp	r3, #0
   306f8:	bne	308b0 <__flatcc_fb_build_schema@@Base+0xcfc>
   306fc:	ldr	r3, [sp, #20]
   30700:	cmp	r3, #0
   30704:	bne	30744 <__flatcc_fb_build_schema@@Base+0xb90>
   30708:	ldrd	r2, [r8, #216]	; 0xd8
   3070c:	ldrd	r0, [sp, #24]
   30710:	cmp	r3, r1
   30714:	cmpeq	r2, r0
   30718:	bls	308d4 <__flatcc_fb_build_schema@@Base+0xd20>
   3071c:	ldr	r1, [sp, #40]	; 0x28
   30720:	cmp	r1, #0
   30724:	ldrheq	r2, [sp, #24]
   30728:	moveq	r3, #0
   3072c:	strdeq	r2, [fp, #96]	; 0x60
   30730:	streq	r1, [sp, #20]
   30734:	ldrd	r2, [sp, #24]
   30738:	adds	r2, r2, #1
   3073c:	adc	r3, r3, #0
   30740:	strd	r2, [sp, #24]
   30744:	ldrh	r3, [fp, #24]
   30748:	sub	r3, r3, #7
   3074c:	cmp	r3, #5
   30750:	ldrls	pc, [pc, r3, lsl #2]
   30754:	b	31700 <__flatcc_fb_build_schema@@Base+0x1b4c>
   30758:			; <UNDEFINED> instruction: 0x00030cb4
   3075c:	strdeq	r0, [r3], -r4
   30760:	andeq	r0, r3, r8, lsr #27
   30764:	andeq	r0, r3, r4, ror sp
   30768:	andeq	r1, r3, ip, asr r4
   3076c:	ldrdeq	r0, [r3], -ip
   30770:	sub	r5, r5, #1
   30774:	add	r4, r4, #1
   30778:	cmp	r5, #1
   3077c:	ble	3080c <__flatcc_fb_build_schema@@Base+0xc58>
   30780:	cmp	r9, #0
   30784:	beq	30770 <__flatcc_fb_build_schema@@Base+0xbbc>
   30788:	ldr	r0, [r8, #412]	; 0x19c
   3078c:	cmp	r0, #0
   30790:	beq	30770 <__flatcc_fb_build_schema@@Base+0xbbc>
   30794:	mov	r2, r4
   30798:	ldr	r1, [r6]
   3079c:	bl	287c8 <fb_scope_table_find@@Base>
   307a0:	cmp	r0, #0
   307a4:	beq	30770 <__flatcc_fb_build_schema@@Base+0xbbc>
   307a8:	mov	r6, r0
   307ac:	ldr	r2, [sp, #36]	; 0x24
   307b0:	ldr	r1, [sp, #32]
   307b4:	add	r0, r6, #4
   307b8:	bl	27878 <fb_symbol_table_find@@Base>
   307bc:	subs	r4, r0, #0
   307c0:	beq	307d0 <__flatcc_fb_build_schema@@Base+0xc1c>
   307c4:	ldrh	r3, [r4, #8]
   307c8:	cmp	r3, #4
   307cc:	bls	30610 <__flatcc_fb_build_schema@@Base+0xa5c>
   307d0:	cmp	r6, #0
   307d4:	beq	305a4 <__flatcc_fb_build_schema@@Base+0x9f0>
   307d8:	ldr	r3, [r6]
   307dc:	cmp	r3, #0
   307e0:	beq	305a4 <__flatcc_fb_build_schema@@Base+0x9f0>
   307e4:	mov	r4, #0
   307e8:	add	r4, r4, #1
   307ec:	ldr	r3, [r3]
   307f0:	cmp	r3, #0
   307f4:	bne	307e8 <__flatcc_fb_build_schema@@Base+0xc34>
   307f8:	cmp	r4, #0
   307fc:	beq	305a4 <__flatcc_fb_build_schema@@Base+0x9f0>
   30800:	mov	r5, r4
   30804:	rsb	r4, r4, #1
   30808:	b	30778 <__flatcc_fb_build_schema@@Base+0xbc4>
   3080c:	cmp	r9, #0
   30810:	beq	305a4 <__flatcc_fb_build_schema@@Base+0x9f0>
   30814:	ldr	r0, [r8, #412]	; 0x19c
   30818:	cmp	r0, #0
   3081c:	beq	305a4 <__flatcc_fb_build_schema@@Base+0x9f0>
   30820:	mov	r2, #0
   30824:	mov	r1, r2
   30828:	bl	287c8 <fb_scope_table_find@@Base>
   3082c:	subs	r6, r0, #0
   30830:	bne	307ac <__flatcc_fb_build_schema@@Base+0xbf8>
   30834:	b	305a4 <__flatcc_fb_build_schema@@Base+0x9f0>
   30838:	ldr	r3, [r4, #4]
   3083c:	ldr	r2, [pc, #936]	; 30bec <__flatcc_fb_build_schema@@Base+0x1038>
   30840:	ldr	r1, [sp, #44]	; 0x2c
   30844:	ldr	r1, [r1, #4]
   30848:	mov	r0, r8
   3084c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30850:	b	30648 <__flatcc_fb_build_schema@@Base+0xa94>
   30854:	ldr	r3, [r4, #4]
   30858:	ldr	r2, [pc, #912]	; 30bf0 <__flatcc_fb_build_schema@@Base+0x103c>
   3085c:	ldr	r1, [sp, #44]	; 0x2c
   30860:	ldr	r1, [r1, #4]
   30864:	mov	r0, r8
   30868:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3086c:	b	30648 <__flatcc_fb_build_schema@@Base+0xa94>
   30870:	mov	r3, #0
   30874:	ldr	r2, [pc, #888]	; 30bf4 <__flatcc_fb_build_schema@@Base+0x1040>
   30878:	ldr	r1, [fp, #4]
   3087c:	mov	r0, r8
   30880:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30884:	b	30660 <__flatcc_fb_build_schema@@Base+0xaac>
   30888:	ldr	r3, [fp, #16]
   3088c:	cmp	r3, #4
   30890:	bne	306a4 <__flatcc_fb_build_schema@@Base+0xaf0>
   30894:	b	306b8 <__flatcc_fb_build_schema@@Base+0xb04>
   30898:	mov	r3, #0
   3089c:	ldr	r2, [pc, #852]	; 30bf8 <__flatcc_fb_build_schema@@Base+0x1044>
   308a0:	ldr	r1, [fp, #4]
   308a4:	mov	r0, r8
   308a8:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   308ac:	b	306c8 <__flatcc_fb_build_schema@@Base+0xb14>
   308b0:	ldr	r3, [r8, #112]	; 0x70
   308b4:	str	r3, [sp, #68]	; 0x44
   308b8:	ldr	r2, [r8, #216]	; 0xd8
   308bc:	mov	r1, #0
   308c0:	mov	r0, r3
   308c4:	bl	13f9c <memset@plt>
   308c8:	mov	r3, #1
   308cc:	str	r3, [sp, #40]	; 0x28
   308d0:	b	306fc <__flatcc_fb_build_schema@@Base+0xb48>
   308d4:	mov	r3, #0
   308d8:	ldr	r2, [pc, #796]	; 30bfc <__flatcc_fb_build_schema@@Base+0x1048>
   308dc:	ldr	r1, [fp, #4]
   308e0:	mov	r0, r8
   308e4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   308e8:	mov	r3, #1
   308ec:	str	r3, [sp, #20]
   308f0:	b	30734 <__flatcc_fb_build_schema@@Base+0xb80>
   308f4:	ldrh	r3, [fp, #56]	; 0x38
   308f8:	cmp	r3, #13
   308fc:	beq	30970 <__flatcc_fb_build_schema@@Base+0xdbc>
   30900:	ldrh	r3, [fp, #56]	; 0x38
   30904:	cmp	r3, #0
   30908:	bne	30920 <__flatcc_fb_build_schema@@Base+0xd6c>
   3090c:	mov	r3, #5
   30910:	strh	r3, [fp, #56]	; 0x38
   30914:	mov	r2, #0
   30918:	mov	r3, #0
   3091c:	strd	r2, [fp, #48]	; 0x30
   30920:	add	r3, fp, #48	; 0x30
   30924:	ldr	r2, [fp, #16]
   30928:	mov	r1, fp
   3092c:	mov	r0, r8
   30930:	bl	32884 <__flatcc_fb_coerce_scalar_type@@Base>
   30934:	cmp	r0, #0
   30938:	movne	r3, #1
   3093c:	strhne	r3, [fp, #24]
   30940:	bne	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   30944:	ldr	r3, [fp, #16]
   30948:	ldr	r2, [pc, #692]	; 30c04 <__flatcc_fb_build_schema@@Base+0x1050>
   3094c:	add	r3, r2, r3, lsl #2
   30950:	ldr	r3, [r3, #16]
   30954:	str	r3, [fp, #88]	; 0x58
   30958:	mov	r2, #0
   3095c:	str	r2, [fp, #92]	; 0x5c
   30960:	strh	r3, [fp, #74]	; 0x4a
   30964:	mov	r3, #1
   30968:	str	r3, [sp, #32]
   3096c:	b	30ce8 <__flatcc_fb_build_schema@@Base+0x1134>
   30970:	ldr	r3, [sl, #12]
   30974:	mov	ip, r3
   30978:	ldr	r3, [fp, #48]	; 0x30
   3097c:	cmp	r3, #0
   30980:	strne	r3, [sp, #32]
   30984:	movne	r2, #0
   30988:	strne	r2, [sp, #36]	; 0x24
   3098c:	bne	309b4 <__flatcc_fb_build_schema@@Base+0xe00>
   30990:	ldr	r3, [pc, #664]	; 30c30 <__flatcc_fb_build_schema@@Base+0x107c>
   30994:	ldr	r2, [pc, #664]	; 30c34 <__flatcc_fb_build_schema@@Base+0x1080>
   30998:	ldr	r1, [pc, #496]	; 30b90 <__flatcc_fb_build_schema@@Base+0xfdc>
   3099c:	ldr	r0, [pc, #660]	; 30c38 <__flatcc_fb_build_schema@@Base+0x1084>
   309a0:	bl	14038 <__assert_fail@plt>
   309a4:	ldr	r2, [sp, #32]
   309a8:	str	r2, [sp, #36]	; 0x24
   309ac:	mov	r2, r0
   309b0:	str	r1, [sp, #32]
   309b4:	ldr	r1, [sp, #32]
   309b8:	ldr	r1, [r1]
   309bc:	add	r0, r2, #1
   309c0:	cmp	r1, #0
   309c4:	bne	309a4 <__flatcc_fb_build_schema@@Base+0xdf0>
   309c8:	ldr	r0, [sp, #36]	; 0x24
   309cc:	cmp	r0, #0
   309d0:	beq	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   309d4:	adds	r0, ip, #0
   309d8:	movne	r0, #1
   309dc:	cmp	r2, #1
   309e0:	movne	r0, #0
   309e4:	cmp	r0, #0
   309e8:	bne	30a5c <__flatcc_fb_build_schema@@Base+0xea8>
   309ec:	cmp	r2, #1
   309f0:	movne	r1, r3
   309f4:	cmp	r9, #0
   309f8:	beq	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   309fc:	ldr	r0, [r8, #412]	; 0x19c
   30a00:	cmp	r0, #0
   30a04:	beq	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   30a08:	rsb	r2, r2, #1
   30a0c:	bl	287c8 <fb_scope_table_find@@Base>
   30a10:	cmp	r0, #0
   30a14:	beq	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   30a18:	ldr	r3, [sp, #36]	; 0x24
   30a1c:	ldr	r3, [r3, #4]
   30a20:	ldr	r2, [r3, #4]
   30a24:	ldr	r1, [r3]
   30a28:	add	r0, r0, #4
   30a2c:	bl	27878 <fb_symbol_table_find@@Base>
   30a30:	subs	r4, r0, #0
   30a34:	beq	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   30a38:	ldrh	r3, [r4, #8]
   30a3c:	cmp	r3, #4
   30a40:	bhi	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   30a44:	ldr	r1, [r4, #16]
   30a48:	ldr	r0, [sp, #16]
   30a4c:	bl	27230 <ptr_set_find_item@@Base>
   30a50:	cmp	r0, #0
   30a54:	bne	30a80 <__flatcc_fb_build_schema@@Base+0xecc>
   30a58:	b	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   30a5c:	str	r6, [sp, #44]	; 0x2c
   30a60:	mov	r6, ip
   30a64:	b	30b14 <__flatcc_fb_build_schema@@Base+0xf60>
   30a68:	ldr	r1, [r4, #16]
   30a6c:	ldr	r0, [sp, #16]
   30a70:	bl	27230 <ptr_set_find_item@@Base>
   30a74:	cmp	r0, #0
   30a78:	beq	30b40 <__flatcc_fb_build_schema@@Base+0xf8c>
   30a7c:	ldr	r6, [sp, #44]	; 0x2c
   30a80:	ldrh	r3, [r4, #8]
   30a84:	cmp	r3, #3
   30a88:	beq	32780 <__flatcc_fb_build_schema@@Base+0x2bcc>
   30a8c:	mov	r3, fp
   30a90:	ldr	r2, [pc, #360]	; 30c00 <__flatcc_fb_build_schema@@Base+0x104c>
   30a94:	ldr	r1, [fp, #48]	; 0x30
   30a98:	mov	r0, r8
   30a9c:	bl	2adb4 <error_ref_sym@@Base>
   30aa0:	mov	r3, #1
   30aa4:	strh	r3, [fp, #24]
   30aa8:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   30aac:	sub	r5, r5, #1
   30ab0:	add	r4, r4, #1
   30ab4:	cmp	r5, #1
   30ab8:	ble	30aec <__flatcc_fb_build_schema@@Base+0xf38>
   30abc:	cmp	r9, #0
   30ac0:	beq	30aac <__flatcc_fb_build_schema@@Base+0xef8>
   30ac4:	ldr	r0, [r8, #412]	; 0x19c
   30ac8:	cmp	r0, #0
   30acc:	beq	30aac <__flatcc_fb_build_schema@@Base+0xef8>
   30ad0:	mov	r2, r4
   30ad4:	ldr	r1, [r6]
   30ad8:	bl	287c8 <fb_scope_table_find@@Base>
   30adc:	cmp	r0, #0
   30ae0:	beq	30aac <__flatcc_fb_build_schema@@Base+0xef8>
   30ae4:	mov	r6, r0
   30ae8:	b	30b14 <__flatcc_fb_build_schema@@Base+0xf60>
   30aec:	cmp	r9, #0
   30af0:	beq	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   30af4:	ldr	r0, [r8, #412]	; 0x19c
   30af8:	cmp	r0, #0
   30afc:	beq	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   30b00:	mov	r2, #0
   30b04:	mov	r1, r2
   30b08:	bl	287c8 <fb_scope_table_find@@Base>
   30b0c:	subs	r6, r0, #0
   30b10:	beq	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   30b14:	ldr	r3, [sp, #36]	; 0x24
   30b18:	ldr	r3, [r3, #4]
   30b1c:	ldr	r2, [r3, #4]
   30b20:	ldr	r1, [r3]
   30b24:	add	r0, r6, #4
   30b28:	bl	27878 <fb_symbol_table_find@@Base>
   30b2c:	subs	r4, r0, #0
   30b30:	beq	30b40 <__flatcc_fb_build_schema@@Base+0xf8c>
   30b34:	ldrh	r3, [r4, #8]
   30b38:	cmp	r3, #4
   30b3c:	bls	30a68 <__flatcc_fb_build_schema@@Base+0xeb4>
   30b40:	cmp	r6, #0
   30b44:	beq	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   30b48:	ldr	r3, [r6]
   30b4c:	cmp	r3, #0
   30b50:	beq	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   30b54:	mov	r4, #0
   30b58:	add	r4, r4, #1
   30b5c:	ldr	r3, [r3]
   30b60:	cmp	r3, #0
   30b64:	bne	30b58 <__flatcc_fb_build_schema@@Base+0xfa4>
   30b68:	cmp	r4, #0
   30b6c:	beq	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   30b70:	mov	r5, r4
   30b74:	rsb	r4, r4, #1
   30b78:	b	30ab4 <__flatcc_fb_build_schema@@Base+0xf00>
   30b7c:	ldrdeq	r3, [r5], -ip
   30b80:			; <UNDEFINED> instruction: 0x01000193
   30b84:	tsthi	ip, r5, asr #27
   30b88:	andeq	r3, r5, r8, lsr r2
   30b8c:	andeq	r0, r0, r6, lsl r6
   30b90:	ldrdeq	r3, [r5], -r0
   30b94:	andeq	r3, r5, r4, lsr #29
   30b98:	strdeq	r3, [r5], -r8
   30b9c:	andeq	r3, r5, r0, asr r2
   30ba0:	andeq	r6, r6, r8, lsr #1
   30ba4:	muleq	r3, r4, r3
   30ba8:	andeq	r3, r5, r4, lsl pc
   30bac:	andeq	r3, r5, r8, asr #11
   30bb0:	andeq	r3, r5, r4, lsr #11
   30bb4:	andeq	r3, r5, ip, ror r5
   30bb8:	andeq	r3, r5, r4, lsl #5
   30bbc:	andeq	r0, r0, r2, lsl #6
   30bc0:	andeq	r3, r5, r4, lsl #10
   30bc4:	andeq	r3, r5, r4, lsr #10
   30bc8:	andeq	r3, r5, r4, asr r5
   30bcc:	strdeq	r3, [r5], -r4
   30bd0:	andeq	r3, r5, r8, lsl r6
   30bd4:	andeq	r3, r5, r4, asr #12
   30bd8:	andeq	r0, r0, r6, asr #31
   30bdc:	andeq	r3, r5, r4, ror #31
   30be0:	andeq	r3, r5, r4, lsr #31
   30be4:	muleq	r5, ip, r0
   30be8:	ldrdeq	r4, [r5], -r8
   30bec:	andeq	r4, r5, r0
   30bf0:	andeq	r4, r5, ip, lsr #32
   30bf4:	andeq	r4, r5, r4, rrx
   30bf8:	andeq	r4, r5, r8, lsl r1
   30bfc:	andeq	r4, r5, r0, asr r1
   30c00:	andeq	r4, r5, r4, ror r1
   30c04:	andeq	r3, r5, ip, lsr #3
   30c08:	andeq	r4, r5, r8, asr #9
   30c0c:	andeq	r4, r5, r8, ror #9
   30c10:	andeq	r4, r5, r8, lsr #3
   30c14:	ldrdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   30c18:	strdeq	r4, [r5], -r8
   30c1c:	andeq	r4, r5, r4, lsr #4
   30c20:	andeq	r4, r5, r4, asr r2
   30c24:	andeq	r4, r5, ip, lsl #5
   30c28:			; <UNDEFINED> instruction: 0x000542b8
   30c2c:	andeq	r4, r5, ip, lsl #6
   30c30:	muleq	r5, r4, r2
   30c34:	andeq	r0, r0, fp, asr r1
   30c38:	andeq	r4, r5, r0, ror r1
   30c3c:	andeq	r4, r5, r0, lsl #16
   30c40:	andeq	r4, r5, ip, lsr r3
   30c44:	andeq	r4, r5, r4, lsl #7
   30c48:			; <UNDEFINED> instruction: 0x000543b8
   30c4c:	andeq	r4, r5, r0, ror #5
   30c50:	andeq	r4, r5, r4, lsl #8
   30c54:	andeq	r4, r5, ip, lsr #8
   30c58:	andeq	r3, r5, r8, asr pc
   30c5c:	andeq	r4, r5, ip, ror #8
   30c60:	strdeq	r3, [r5], -r0
   30c64:	andeq	r3, r5, r0, lsr #25
   30c68:	andeq	r4, r5, r8, lsr #9
   30c6c:	andeq	r4, r5, r4, lsl #10
   30c70:	andeq	r4, r5, ip, lsr r5
   30c74:	strdeq	r3, [r5], -ip
   30c78:	andeq	r3, r5, r4, asr lr
   30c7c:	andeq	r3, r5, ip, lsr sp
   30c80:	andeq	r3, r5, r0, lsr #27
   30c84:	andeq	r4, r5, ip, ror #10
   30c88:			; <UNDEFINED> instruction: 0x000545b8
   30c8c:	andeq	r4, r5, r0, lsr #11
   30c90:	andeq	r4, r5, ip, ror #11
   30c94:	strdeq	r3, [r5], -r4
   30c98:	andeq	r3, r5, r8, lsr #5
   30c9c:	andeq	r0, r0, r9, ror #8
   30ca0:	andeq	r3, r5, r8, asr #30
   30ca4:	ldrdeq	r3, [r5], -r0
   30ca8:	andeq	r4, r5, r0, ror r6
   30cac:	andeq	r3, r5, ip, ror pc
   30cb0:	andeq	r4, r5, r0, lsr r6
   30cb4:	ldr	r3, [fp, #16]
   30cb8:	ldr	r2, [pc, #-188]	; 30c04 <__flatcc_fb_build_schema@@Base+0x1050>
   30cbc:	add	r3, r2, r3, lsl #2
   30cc0:	ldr	r3, [r3, #16]
   30cc4:	str	r3, [fp, #88]	; 0x58
   30cc8:	mov	r2, #0
   30ccc:	str	r2, [fp, #92]	; 0x5c
   30cd0:	strh	r3, [fp, #74]	; 0x4a
   30cd4:	ldrh	r3, [fp, #56]	; 0x38
   30cd8:	cmp	r3, r2
   30cdc:	moveq	r3, #0
   30ce0:	streq	r3, [sp, #32]
   30ce4:	bne	30d54 <__flatcc_fb_build_schema@@Base+0x11a0>
   30ce8:	ldr	r3, [sp, #20]
   30cec:	cmp	r3, #0
   30cf0:	bne	31734 <__flatcc_fb_build_schema@@Base+0x1b80>
   30cf4:	ldr	r3, [sp, #40]	; 0x28
   30cf8:	eor	r3, r3, #1
   30cfc:	ldr	r2, [sp, #60]	; 0x3c
   30d00:	tst	r2, r3
   30d04:	bne	31720 <__flatcc_fb_build_schema@@Base+0x1b6c>
   30d08:	ldr	r3, [sp, #40]	; 0x28
   30d0c:	cmp	r6, #0
   30d10:	movne	r3, #0
   30d14:	andeq	r3, r3, #1
   30d18:	cmp	r3, #0
   30d1c:	bne	3179c <__flatcc_fb_build_schema@@Base+0x1be8>
   30d20:	cmp	r6, #0
   30d24:	beq	317e4 <__flatcc_fb_build_schema@@Base+0x1c30>
   30d28:	ldrh	r3, [r6, #16]
   30d2c:	cmp	r3, #5
   30d30:	beq	317b4 <__flatcc_fb_build_schema@@Base+0x1c00>
   30d34:	cmp	r3, #4
   30d38:	mov	r3, #0
   30d3c:	ldreq	r2, [pc, #-316]	; 30c08 <__flatcc_fb_build_schema@@Base+0x1054>
   30d40:	ldrne	r2, [pc, #-316]	; 30c0c <__flatcc_fb_build_schema@@Base+0x1058>
   30d44:	ldr	r1, [r6, #4]
   30d48:	mov	r0, r8
   30d4c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30d50:	b	31734 <__flatcc_fb_build_schema@@Base+0x1b80>
   30d54:	mov	r3, r2
   30d58:	ldr	r2, [pc, #-336]	; 30c10 <__flatcc_fb_build_schema@@Base+0x105c>
   30d5c:	ldr	r1, [fp, #4]
   30d60:	mov	r0, r8
   30d64:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30d68:	mov	r3, #1
   30d6c:	strh	r3, [fp, #24]
   30d70:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   30d74:	ldrh	r3, [fp, #56]	; 0x38
   30d78:	cmp	r3, #0
   30d7c:	ldreq	r3, [r8, #164]	; 0xa4
   30d80:	streq	r3, [sp, #32]
   30d84:	beq	30ce8 <__flatcc_fb_build_schema@@Base+0x1134>
   30d88:	mov	r3, #0
   30d8c:	ldr	r2, [pc, #-384]	; 30c14 <__flatcc_fb_build_schema@@Base+0x1060>
   30d90:	ldr	r1, [fp, #4]
   30d94:	mov	r0, r8
   30d98:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30d9c:	mov	r3, #1
   30da0:	strh	r3, [fp, #24]
   30da4:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   30da8:	ldrh	r3, [fp, #56]	; 0x38
   30dac:	cmp	r3, #0
   30db0:	moveq	r3, #0
   30db4:	streq	r3, [sp, #32]
   30db8:	beq	30ce8 <__flatcc_fb_build_schema@@Base+0x1134>
   30dbc:	mov	r3, #0
   30dc0:	ldr	r2, [pc, #-432]	; 30c18 <__flatcc_fb_build_schema@@Base+0x1064>
   30dc4:	ldr	r1, [fp, #4]
   30dc8:	mov	r0, r8
   30dcc:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30dd0:	mov	r3, #1
   30dd4:	strh	r3, [fp, #24]
   30dd8:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   30ddc:	ldr	r5, [sl, #12]
   30de0:	ldr	r1, [fp, #16]
   30de4:	cmp	r1, #0
   30de8:	beq	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30dec:	mov	ip, r1
   30df0:	mov	r2, #0
   30df4:	b	30e00 <__flatcc_fb_build_schema@@Base+0x124c>
   30df8:	mov	r2, r3
   30dfc:	mov	ip, r0
   30e00:	ldr	r0, [ip]
   30e04:	add	r3, r2, #1
   30e08:	cmp	r0, #0
   30e0c:	bne	30df8 <__flatcc_fb_build_schema@@Base+0x1244>
   30e10:	str	r0, [sp, #44]	; 0x2c
   30e14:	str	ip, [sp, #32]
   30e18:	cmp	ip, #0
   30e1c:	beq	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30e20:	adds	r0, r5, #0
   30e24:	movne	r0, #1
   30e28:	cmp	r3, #1
   30e2c:	movne	r0, #0
   30e30:	cmp	r0, #0
   30e34:	bne	30f2c <__flatcc_fb_build_schema@@Base+0x1378>
   30e38:	ldr	r0, [sp, #44]	; 0x2c
   30e3c:	cmp	r3, #1
   30e40:	moveq	r1, r0
   30e44:	cmp	r9, #0
   30e48:	beq	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30e4c:	ldr	r0, [r8, #412]	; 0x19c
   30e50:	cmp	r0, #0
   30e54:	beq	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30e58:	rsb	r2, r2, #0
   30e5c:	bl	287c8 <fb_scope_table_find@@Base>
   30e60:	cmp	r0, #0
   30e64:	beq	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30e68:	ldr	r3, [sp, #32]
   30e6c:	ldr	r3, [r3, #4]
   30e70:	ldr	r2, [r3, #4]
   30e74:	ldr	r1, [r3]
   30e78:	add	r0, r0, #4
   30e7c:	bl	27878 <fb_symbol_table_find@@Base>
   30e80:	subs	r7, r0, #0
   30e84:	beq	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30e88:	ldrh	r3, [r7, #8]
   30e8c:	cmp	r3, #4
   30e90:	bls	30fc0 <__flatcc_fb_build_schema@@Base+0x140c>
   30e94:	mov	r3, fp
   30e98:	ldr	r2, [pc, #-644]	; 30c1c <__flatcc_fb_build_schema@@Base+0x1068>
   30e9c:	ldr	r1, [fp, #16]
   30ea0:	mov	r0, r8
   30ea4:	bl	2adb4 <error_ref_sym@@Base>
   30ea8:	mov	r3, #1
   30eac:	strh	r3, [fp, #24]
   30eb0:	str	r3, [sp, #20]
   30eb4:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   30eb8:	ldr	r1, [r7, #16]
   30ebc:	ldr	r0, [sp, #16]
   30ec0:	bl	27230 <ptr_set_find_item@@Base>
   30ec4:	cmp	r0, #0
   30ec8:	beq	30f58 <__flatcc_fb_build_schema@@Base+0x13a4>
   30ecc:	ldrh	r3, [r7, #8]
   30ed0:	cmp	r3, #4
   30ed4:	ldrls	pc, [pc, r3, lsl #2]
   30ed8:	b	31024 <__flatcc_fb_build_schema@@Base+0x1470>
   30edc:	andeq	r1, r3, r4, asr #32
   30ee0:	andeq	r1, r3, r4, asr #32
   30ee4:	andeq	r1, r3, r4
   30ee8:	ldrdeq	r0, [r3], -r8
   30eec:	andeq	r1, r3, r4, asr #32
   30ef0:	sub	r7, r7, #1
   30ef4:	add	r4, r4, #1
   30ef8:	cmp	r7, #1
   30efc:	ble	30f94 <__flatcc_fb_build_schema@@Base+0x13e0>
   30f00:	cmp	r9, #0
   30f04:	beq	30ef0 <__flatcc_fb_build_schema@@Base+0x133c>
   30f08:	ldr	r0, [r8, #412]	; 0x19c
   30f0c:	cmp	r0, #0
   30f10:	beq	30ef0 <__flatcc_fb_build_schema@@Base+0x133c>
   30f14:	mov	r2, r4
   30f18:	ldr	r1, [r5]
   30f1c:	bl	287c8 <fb_scope_table_find@@Base>
   30f20:	cmp	r0, #0
   30f24:	beq	30ef0 <__flatcc_fb_build_schema@@Base+0x133c>
   30f28:	mov	r5, r0
   30f2c:	ldr	r3, [sp, #32]
   30f30:	ldr	r3, [r3, #4]
   30f34:	ldr	r2, [r3, #4]
   30f38:	ldr	r1, [r3]
   30f3c:	add	r0, r5, #4
   30f40:	bl	27878 <fb_symbol_table_find@@Base>
   30f44:	subs	r7, r0, #0
   30f48:	beq	30f58 <__flatcc_fb_build_schema@@Base+0x13a4>
   30f4c:	ldrh	r3, [r7, #8]
   30f50:	cmp	r3, #4
   30f54:	bls	30eb8 <__flatcc_fb_build_schema@@Base+0x1304>
   30f58:	cmp	r5, #0
   30f5c:	beq	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30f60:	ldr	r3, [r5]
   30f64:	cmp	r3, #0
   30f68:	beq	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30f6c:	mov	r4, #0
   30f70:	add	r4, r4, #1
   30f74:	ldr	r3, [r3]
   30f78:	cmp	r3, #0
   30f7c:	bne	30f70 <__flatcc_fb_build_schema@@Base+0x13bc>
   30f80:	cmp	r4, #0
   30f84:	beq	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30f88:	mov	r7, r4
   30f8c:	rsb	r4, r4, #1
   30f90:	b	30ef8 <__flatcc_fb_build_schema@@Base+0x1344>
   30f94:	cmp	r9, #0
   30f98:	beq	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30f9c:	ldr	r0, [r8, #412]	; 0x19c
   30fa0:	cmp	r0, #0
   30fa4:	beq	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30fa8:	mov	r2, #0
   30fac:	mov	r1, r2
   30fb0:	bl	287c8 <fb_scope_table_find@@Base>
   30fb4:	subs	r5, r0, #0
   30fb8:	bne	30f2c <__flatcc_fb_build_schema@@Base+0x1378>
   30fbc:	b	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30fc0:	ldr	r1, [r7, #16]
   30fc4:	ldr	r0, [sp, #16]
   30fc8:	bl	27230 <ptr_set_find_item@@Base>
   30fcc:	cmp	r0, #0
   30fd0:	bne	30ecc <__flatcc_fb_build_schema@@Base+0x1318>
   30fd4:	b	30e94 <__flatcc_fb_build_schema@@Base+0x12e0>
   30fd8:	ldrh	r3, [fp, #72]	; 0x48
   30fdc:	tst	r3, #256	; 0x100
   30fe0:	beq	30ff8 <__flatcc_fb_build_schema@@Base+0x1444>
   30fe4:	mov	r3, #0
   30fe8:	ldr	r2, [pc, #-976]	; 30c20 <__flatcc_fb_build_schema@@Base+0x106c>
   30fec:	ldr	r1, [fp, #4]
   30ff0:	mov	r0, r8
   30ff4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   30ff8:	ldr	r3, [r8, #148]	; 0x94
   30ffc:	str	r3, [sp, #32]
   31000:	b	3104c <__flatcc_fb_build_schema@@Base+0x1498>
   31004:	ldr	r3, [r7, #4]
   31008:	ldr	r2, [pc, #-1004]	; 30c24 <__flatcc_fb_build_schema@@Base+0x1070>
   3100c:	ldr	r1, [fp, #4]
   31010:	mov	r0, r8
   31014:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31018:	mov	r3, #1
   3101c:	strh	r3, [fp, #24]
   31020:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   31024:	ldr	r3, [r7, #4]
   31028:	ldr	r2, [pc, #-1032]	; 30c28 <__flatcc_fb_build_schema@@Base+0x1074>
   3102c:	ldr	r1, [fp, #4]
   31030:	mov	r0, r8
   31034:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31038:	mov	r3, #1
   3103c:	strh	r3, [fp, #24]
   31040:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   31044:	mov	r3, #0
   31048:	str	r3, [sp, #32]
   3104c:	mov	r3, #14
   31050:	strh	r3, [fp, #24]
   31054:	str	r7, [fp, #16]
   31058:	ldrd	r2, [r7, #112]	; 0x70
   3105c:	strd	r2, [fp, #88]	; 0x58
   31060:	ldrh	r3, [r7, #104]	; 0x68
   31064:	strh	r3, [fp, #74]	; 0x4a
   31068:	ldrh	r3, [r7, #8]
   3106c:	ldr	r2, [sp, #20]
   31070:	cmp	r3, #4
   31074:	cmpeq	r2, #0
   31078:	bne	310a0 <__flatcc_fb_build_schema@@Base+0x14ec>
   3107c:	ldr	r3, [sp, #40]	; 0x28
   31080:	cmp	r3, #0
   31084:	ldrheq	r2, [sp, #24]
   31088:	moveq	r3, #0
   3108c:	strdeq	r2, [fp, #96]	; 0x60
   31090:	ldrd	r2, [sp, #24]
   31094:	adds	r2, r2, #1
   31098:	adc	r3, r3, #0
   3109c:	strd	r2, [sp, #24]
   310a0:	ldrh	r3, [fp, #56]	; 0x38
   310a4:	cmp	r3, #0
   310a8:	beq	313d0 <__flatcc_fb_build_schema@@Base+0x181c>
   310ac:	ldrh	r2, [r7, #8]
   310b0:	cmp	r2, #3
   310b4:	beq	310d8 <__flatcc_fb_build_schema@@Base+0x1524>
   310b8:	mov	r3, #0
   310bc:	ldr	r2, [pc, #-1144]	; 30c4c <__flatcc_fb_build_schema@@Base+0x1098>
   310c0:	ldr	r1, [fp, #4]
   310c4:	mov	r0, r8
   310c8:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   310cc:	mov	r3, #1
   310d0:	strh	r3, [fp, #24]
   310d4:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   310d8:	cmp	r3, #13
   310dc:	beq	3114c <__flatcc_fb_build_schema@@Base+0x1598>
   310e0:	add	r4, fp, #48	; 0x30
   310e4:	mov	r3, r4
   310e8:	ldr	r2, [r7, #40]	; 0x28
   310ec:	mov	r1, fp
   310f0:	mov	r0, r8
   310f4:	bl	32884 <__flatcc_fb_coerce_scalar_type@@Base>
   310f8:	cmp	r0, #0
   310fc:	movne	r3, #1
   31100:	strhne	r3, [fp, #24]
   31104:	bne	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   31108:	ldr	r3, [r8, #212]	; 0xd4
   3110c:	cmp	r3, #0
   31110:	beq	30ce8 <__flatcc_fb_build_schema@@Base+0x1134>
   31114:	ldr	r0, [fp, #16]
   31118:	mov	r1, r4
   3111c:	add	r0, r0, #72	; 0x48
   31120:	bl	39ad4 <fb_value_set_find_item@@Base>
   31124:	cmp	r0, #0
   31128:	bne	30ce8 <__flatcc_fb_build_schema@@Base+0x1134>
   3112c:	mov	r3, #0
   31130:	ldr	r2, [pc, #-1292]	; 30c2c <__flatcc_fb_build_schema@@Base+0x1078>
   31134:	ldr	r1, [fp, #4]
   31138:	mov	r0, r8
   3113c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31140:	mov	r3, #1
   31144:	strh	r3, [fp, #24]
   31148:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   3114c:	ldr	r5, [sl, #12]
   31150:	ldr	r3, [fp, #48]	; 0x30
   31154:	str	r3, [sp, #76]	; 0x4c
   31158:	cmp	r3, #0
   3115c:	bne	31174 <__flatcc_fb_build_schema@@Base+0x15c0>
   31160:	ldr	r3, [pc, #-1336]	; 30c30 <__flatcc_fb_build_schema@@Base+0x107c>
   31164:	ldr	r2, [pc, #-1336]	; 30c34 <__flatcc_fb_build_schema@@Base+0x1080>
   31168:	ldr	r1, [pc, #-1228]	; 30ca4 <__flatcc_fb_build_schema@@Base+0x10f0>
   3116c:	ldr	r0, [pc, #-1340]	; 30c38 <__flatcc_fb_build_schema@@Base+0x1084>
   31170:	bl	14038 <__assert_fail@plt>
   31174:	ldr	r3, [sp, #76]	; 0x4c
   31178:	str	r3, [sp, #72]	; 0x48
   3117c:	mov	r2, #0
   31180:	b	31194 <__flatcc_fb_build_schema@@Base+0x15e0>
   31184:	ldr	r2, [sp, #72]	; 0x48
   31188:	str	r2, [sp, #44]	; 0x2c
   3118c:	mov	r2, r3
   31190:	str	r1, [sp, #72]	; 0x48
   31194:	ldr	r3, [sp, #72]	; 0x48
   31198:	ldr	r1, [r3]
   3119c:	add	r3, r2, #1
   311a0:	cmp	r1, #0
   311a4:	bne	31184 <__flatcc_fb_build_schema@@Base+0x15d0>
   311a8:	ldr	r3, [sp, #44]	; 0x2c
   311ac:	cmp	r3, #0
   311b0:	beq	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   311b4:	adds	r3, r5, #0
   311b8:	movne	r3, #1
   311bc:	cmp	r2, #1
   311c0:	movne	r3, #0
   311c4:	cmp	r3, #0
   311c8:	bne	31280 <__flatcc_fb_build_schema@@Base+0x16cc>
   311cc:	ldr	r3, [sp, #76]	; 0x4c
   311d0:	cmp	r2, #1
   311d4:	movne	r1, r3
   311d8:	cmp	r9, #0
   311dc:	beq	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   311e0:	ldr	r0, [r8, #412]	; 0x19c
   311e4:	cmp	r0, #0
   311e8:	beq	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   311ec:	rsb	r2, r2, #1
   311f0:	bl	287c8 <fb_scope_table_find@@Base>
   311f4:	cmp	r0, #0
   311f8:	beq	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   311fc:	ldr	r3, [sp, #44]	; 0x2c
   31200:	ldr	r3, [r3, #4]
   31204:	ldr	r2, [r3, #4]
   31208:	ldr	r1, [r3]
   3120c:	add	r0, r0, #4
   31210:	bl	27878 <fb_symbol_table_find@@Base>
   31214:	subs	r4, r0, #0
   31218:	beq	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   3121c:	ldrh	r3, [r4, #8]
   31220:	cmp	r3, #4
   31224:	bhi	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   31228:	ldr	r1, [r4, #16]
   3122c:	ldr	r0, [sp, #16]
   31230:	bl	27230 <ptr_set_find_item@@Base>
   31234:	cmp	r0, #0
   31238:	beq	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   3123c:	ldrh	r3, [r4, #8]
   31240:	cmp	r3, #3
   31244:	bne	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   31248:	mov	r0, r4
   3124c:	ldr	r3, [sp, #72]	; 0x48
   31250:	ldr	r3, [r3, #4]
   31254:	ldr	r2, [r3, #4]
   31258:	ldr	r1, [r3]
   3125c:	add	r0, r0, #56	; 0x38
   31260:	bl	27878 <fb_symbol_table_find@@Base>
   31264:	subs	r3, r0, #0
   31268:	beq	31388 <__flatcc_fb_build_schema@@Base+0x17d4>
   3126c:	add	ip, fp, #48	; 0x30
   31270:	add	r3, r3, #48	; 0x30
   31274:	ldm	r3, {r0, r1, r2, r3}
   31278:	stm	ip, {r0, r1, r2, r3}
   3127c:	b	30ce8 <__flatcc_fb_build_schema@@Base+0x1134>
   31280:	str	r6, [sp, #36]	; 0x24
   31284:	b	312e0 <__flatcc_fb_build_schema@@Base+0x172c>
   31288:	ldr	r1, [r4, #16]
   3128c:	ldr	r0, [sp, #16]
   31290:	bl	27230 <ptr_set_find_item@@Base>
   31294:	cmp	r0, #0
   31298:	beq	3130c <__flatcc_fb_build_schema@@Base+0x1758>
   3129c:	ldr	r6, [sp, #36]	; 0x24
   312a0:	b	3123c <__flatcc_fb_build_schema@@Base+0x1688>
   312a4:	sub	r4, r4, #1
   312a8:	add	r6, r6, #1
   312ac:	cmp	r4, #1
   312b0:	ble	31348 <__flatcc_fb_build_schema@@Base+0x1794>
   312b4:	cmp	r9, #0
   312b8:	beq	312a4 <__flatcc_fb_build_schema@@Base+0x16f0>
   312bc:	ldr	r0, [r8, #412]	; 0x19c
   312c0:	cmp	r0, #0
   312c4:	beq	312a4 <__flatcc_fb_build_schema@@Base+0x16f0>
   312c8:	mov	r2, r6
   312cc:	ldr	r1, [r5]
   312d0:	bl	287c8 <fb_scope_table_find@@Base>
   312d4:	cmp	r0, #0
   312d8:	beq	312a4 <__flatcc_fb_build_schema@@Base+0x16f0>
   312dc:	mov	r5, r0
   312e0:	ldr	r3, [sp, #44]	; 0x2c
   312e4:	ldr	r3, [r3, #4]
   312e8:	ldr	r2, [r3, #4]
   312ec:	ldr	r1, [r3]
   312f0:	add	r0, r5, #4
   312f4:	bl	27878 <fb_symbol_table_find@@Base>
   312f8:	subs	r4, r0, #0
   312fc:	beq	3130c <__flatcc_fb_build_schema@@Base+0x1758>
   31300:	ldrh	r3, [r4, #8]
   31304:	cmp	r3, #4
   31308:	bls	31288 <__flatcc_fb_build_schema@@Base+0x16d4>
   3130c:	cmp	r5, #0
   31310:	beq	313a8 <__flatcc_fb_build_schema@@Base+0x17f4>
   31314:	ldr	r2, [r5]
   31318:	cmp	r2, #0
   3131c:	beq	313b0 <__flatcc_fb_build_schema@@Base+0x17fc>
   31320:	mov	r3, #0
   31324:	add	r3, r3, #1
   31328:	ldr	r2, [r2]
   3132c:	cmp	r2, #0
   31330:	bne	31324 <__flatcc_fb_build_schema@@Base+0x1770>
   31334:	cmp	r3, #0
   31338:	beq	313b8 <__flatcc_fb_build_schema@@Base+0x1804>
   3133c:	mov	r4, r3
   31340:	rsb	r6, r3, #1
   31344:	b	312ac <__flatcc_fb_build_schema@@Base+0x16f8>
   31348:	cmp	r9, #0
   3134c:	beq	313c0 <__flatcc_fb_build_schema@@Base+0x180c>
   31350:	ldr	r0, [r8, #412]	; 0x19c
   31354:	cmp	r0, #0
   31358:	beq	313c8 <__flatcc_fb_build_schema@@Base+0x1814>
   3135c:	mov	r2, #0
   31360:	mov	r1, r2
   31364:	bl	287c8 <fb_scope_table_find@@Base>
   31368:	cmp	r0, #0
   3136c:	bne	312dc <__flatcc_fb_build_schema@@Base+0x1728>
   31370:	ldr	r6, [sp, #36]	; 0x24
   31374:	ldr	r3, [sp, #76]	; 0x4c
   31378:	ldr	r3, [r3]
   3137c:	cmp	r3, #0
   31380:	moveq	r0, r7
   31384:	beq	3124c <__flatcc_fb_build_schema@@Base+0x1698>
   31388:	mov	r3, fp
   3138c:	ldr	r2, [pc, #-1880]	; 30c3c <__flatcc_fb_build_schema@@Base+0x1088>
   31390:	ldr	r1, [fp, #48]	; 0x30
   31394:	mov	r0, r8
   31398:	bl	2adb4 <error_ref_sym@@Base>
   3139c:	mov	r3, #1
   313a0:	strh	r3, [fp, #24]
   313a4:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   313a8:	ldr	r6, [sp, #36]	; 0x24
   313ac:	b	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   313b0:	ldr	r6, [sp, #36]	; 0x24
   313b4:	b	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   313b8:	ldr	r6, [sp, #36]	; 0x24
   313bc:	b	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   313c0:	ldr	r6, [sp, #36]	; 0x24
   313c4:	b	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   313c8:	ldr	r6, [sp, #36]	; 0x24
   313cc:	b	31374 <__flatcc_fb_build_schema@@Base+0x17c0>
   313d0:	ldrh	r3, [r7, #8]
   313d4:	cmp	r3, #3
   313d8:	bne	30ce8 <__flatcc_fb_build_schema@@Base+0x1134>
   313dc:	mov	r3, #5
   313e0:	strh	r3, [fp, #56]	; 0x38
   313e4:	mov	r4, fp
   313e8:	mov	r2, #0
   313ec:	mov	r3, #0
   313f0:	strd	r2, [r4, #48]!	; 0x30
   313f4:	mov	r3, r4
   313f8:	ldr	r2, [r7, #40]	; 0x28
   313fc:	mov	r1, r7
   31400:	mov	r0, r8
   31404:	bl	32884 <__flatcc_fb_coerce_scalar_type@@Base>
   31408:	cmp	r0, #0
   3140c:	movne	r3, #1
   31410:	strhne	r3, [fp, #24]
   31414:	bne	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   31418:	ldr	r3, [r8, #212]	; 0xd4
   3141c:	cmp	r3, #0
   31420:	beq	30ce8 <__flatcc_fb_build_schema@@Base+0x1134>
   31424:	ldr	r0, [fp, #16]
   31428:	mov	r1, r4
   3142c:	add	r0, r0, #72	; 0x48
   31430:	bl	39ad4 <fb_value_set_find_item@@Base>
   31434:	cmp	r0, #0
   31438:	bne	30ce8 <__flatcc_fb_build_schema@@Base+0x1134>
   3143c:	ldr	r3, [r7, #4]
   31440:	ldr	r2, [pc, #-2056]	; 30c40 <__flatcc_fb_build_schema@@Base+0x108c>
   31444:	ldr	r1, [fp, #4]
   31448:	mov	r0, r8
   3144c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31450:	mov	r3, #1
   31454:	strh	r3, [fp, #24]
   31458:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   3145c:	ldr	r5, [sl, #12]
   31460:	ldr	r1, [fp, #16]
   31464:	cmp	r1, #0
   31468:	beq	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   3146c:	mov	ip, r1
   31470:	mov	r2, #0
   31474:	b	31480 <__flatcc_fb_build_schema@@Base+0x18cc>
   31478:	mov	r2, r0
   3147c:	mov	ip, r3
   31480:	ldr	r3, [ip]
   31484:	add	r0, r2, #1
   31488:	cmp	r3, #0
   3148c:	bne	31478 <__flatcc_fb_build_schema@@Base+0x18c4>
   31490:	str	ip, [sp, #32]
   31494:	cmp	ip, #0
   31498:	beq	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   3149c:	adds	ip, r5, #0
   314a0:	movne	ip, #1
   314a4:	cmp	r0, #1
   314a8:	movne	ip, #0
   314ac:	cmp	ip, #0
   314b0:	bne	315a0 <__flatcc_fb_build_schema@@Base+0x19ec>
   314b4:	cmp	r0, #1
   314b8:	moveq	r1, r3
   314bc:	cmp	r9, #0
   314c0:	beq	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   314c4:	ldr	r0, [r8, #412]	; 0x19c
   314c8:	cmp	r0, #0
   314cc:	beq	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   314d0:	rsb	r2, r2, #0
   314d4:	bl	287c8 <fb_scope_table_find@@Base>
   314d8:	cmp	r0, #0
   314dc:	beq	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   314e0:	ldr	r3, [sp, #32]
   314e4:	ldr	r3, [r3, #4]
   314e8:	ldr	r2, [r3, #4]
   314ec:	ldr	r1, [r3]
   314f0:	add	r0, r0, #4
   314f4:	bl	27878 <fb_symbol_table_find@@Base>
   314f8:	subs	r7, r0, #0
   314fc:	beq	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   31500:	ldrh	r3, [r7, #8]
   31504:	cmp	r3, #4
   31508:	bls	31634 <__flatcc_fb_build_schema@@Base+0x1a80>
   3150c:	mov	r3, fp
   31510:	ldr	r2, [pc, #-2260]	; 30c44 <__flatcc_fb_build_schema@@Base+0x1090>
   31514:	ldr	r1, [fp, #16]
   31518:	mov	r0, r8
   3151c:	bl	2adb4 <error_ref_sym@@Base>
   31520:	mov	r3, #1
   31524:	strh	r3, [fp, #24]
   31528:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   3152c:	ldr	r1, [r7, #16]
   31530:	ldr	r0, [sp, #16]
   31534:	bl	27230 <ptr_set_find_item@@Base>
   31538:	cmp	r0, #0
   3153c:	beq	315cc <__flatcc_fb_build_schema@@Base+0x1a18>
   31540:	ldrh	r3, [r7, #8]
   31544:	cmp	r3, #4
   31548:	ldrls	pc, [pc, r3, lsl #2]
   3154c:	b	3164c <__flatcc_fb_build_schema@@Base+0x1a98>
   31550:	andeq	r1, r3, ip, ror #12
   31554:	andeq	r1, r3, ip, ror #12
   31558:	andeq	r1, r3, ip, asr #12
   3155c:	andeq	r1, r3, ip, ror #12
   31560:	andeq	r1, r3, ip, ror #12
   31564:	sub	r7, r7, #1
   31568:	add	r4, r4, #1
   3156c:	cmp	r7, #1
   31570:	ble	31608 <__flatcc_fb_build_schema@@Base+0x1a54>
   31574:	cmp	r9, #0
   31578:	beq	31564 <__flatcc_fb_build_schema@@Base+0x19b0>
   3157c:	ldr	r0, [r8, #412]	; 0x19c
   31580:	cmp	r0, #0
   31584:	beq	31564 <__flatcc_fb_build_schema@@Base+0x19b0>
   31588:	mov	r2, r4
   3158c:	ldr	r1, [r5]
   31590:	bl	287c8 <fb_scope_table_find@@Base>
   31594:	cmp	r0, #0
   31598:	beq	31564 <__flatcc_fb_build_schema@@Base+0x19b0>
   3159c:	mov	r5, r0
   315a0:	ldr	r3, [sp, #32]
   315a4:	ldr	r3, [r3, #4]
   315a8:	ldr	r2, [r3, #4]
   315ac:	ldr	r1, [r3]
   315b0:	add	r0, r5, #4
   315b4:	bl	27878 <fb_symbol_table_find@@Base>
   315b8:	subs	r7, r0, #0
   315bc:	beq	315cc <__flatcc_fb_build_schema@@Base+0x1a18>
   315c0:	ldrh	r3, [r7, #8]
   315c4:	cmp	r3, #4
   315c8:	bls	3152c <__flatcc_fb_build_schema@@Base+0x1978>
   315cc:	cmp	r5, #0
   315d0:	beq	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   315d4:	ldr	r3, [r5]
   315d8:	cmp	r3, #0
   315dc:	beq	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   315e0:	mov	r4, #0
   315e4:	add	r4, r4, #1
   315e8:	ldr	r3, [r3]
   315ec:	cmp	r3, #0
   315f0:	bne	315e4 <__flatcc_fb_build_schema@@Base+0x1a30>
   315f4:	cmp	r4, #0
   315f8:	beq	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   315fc:	mov	r7, r4
   31600:	rsb	r4, r4, #1
   31604:	b	3156c <__flatcc_fb_build_schema@@Base+0x19b8>
   31608:	cmp	r9, #0
   3160c:	beq	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   31610:	ldr	r0, [r8, #412]	; 0x19c
   31614:	cmp	r0, #0
   31618:	beq	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   3161c:	mov	r2, #0
   31620:	mov	r1, r2
   31624:	bl	287c8 <fb_scope_table_find@@Base>
   31628:	subs	r5, r0, #0
   3162c:	bne	315a0 <__flatcc_fb_build_schema@@Base+0x19ec>
   31630:	b	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   31634:	ldr	r1, [r7, #16]
   31638:	ldr	r0, [sp, #16]
   3163c:	bl	27230 <ptr_set_find_item@@Base>
   31640:	cmp	r0, #0
   31644:	bne	31540 <__flatcc_fb_build_schema@@Base+0x198c>
   31648:	b	3150c <__flatcc_fb_build_schema@@Base+0x1958>
   3164c:	ldr	r3, [fp, #16]
   31650:	ldr	r2, [pc, #-2576]	; 30c48 <__flatcc_fb_build_schema@@Base+0x1094>
   31654:	ldr	r1, [fp, #4]
   31658:	mov	r0, r8
   3165c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31660:	mov	r3, #1
   31664:	strh	r3, [fp, #24]
   31668:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   3166c:	ldrh	r3, [fp, #56]	; 0x38
   31670:	cmp	r3, #0
   31674:	bne	316e0 <__flatcc_fb_build_schema@@Base+0x1b2c>
   31678:	mov	r3, #15
   3167c:	strh	r3, [fp, #24]
   31680:	str	r7, [fp, #16]
   31684:	ldrd	r2, [r7, #112]	; 0x70
   31688:	strd	r2, [fp, #88]	; 0x58
   3168c:	ldrh	r3, [r7, #104]	; 0x68
   31690:	strh	r3, [fp, #74]	; 0x4a
   31694:	ldrh	r3, [r7, #8]
   31698:	ldr	r2, [sp, #20]
   3169c:	cmp	r3, #4
   316a0:	cmpeq	r2, #0
   316a4:	movne	r3, #0
   316a8:	strne	r3, [sp, #32]
   316ac:	bne	30ce8 <__flatcc_fb_build_schema@@Base+0x1134>
   316b0:	ldr	r3, [sp, #40]	; 0x28
   316b4:	cmp	r3, #0
   316b8:	ldrheq	r2, [sp, #24]
   316bc:	moveq	r3, #0
   316c0:	strdeq	r2, [fp, #96]	; 0x60
   316c4:	ldrd	r2, [sp, #24]
   316c8:	adds	r2, r2, #1
   316cc:	adc	r3, r3, #0
   316d0:	strd	r2, [sp, #24]
   316d4:	mov	r3, #0
   316d8:	str	r3, [sp, #32]
   316dc:	b	30ce8 <__flatcc_fb_build_schema@@Base+0x1134>
   316e0:	mov	r3, #0
   316e4:	ldr	r2, [pc, #-2720]	; 30c4c <__flatcc_fb_build_schema@@Base+0x1098>
   316e8:	ldr	r1, [fp, #4]
   316ec:	mov	r0, r8
   316f0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   316f4:	mov	r3, #1
   316f8:	strh	r3, [fp, #24]
   316fc:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   31700:	mov	r3, #0
   31704:	ldr	r2, [pc, #-2748]	; 30c50 <__flatcc_fb_build_schema@@Base+0x109c>
   31708:	ldr	r1, [fp, #4]
   3170c:	mov	r0, r8
   31710:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31714:	mov	r3, #1
   31718:	strh	r3, [fp, #24]
   3171c:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   31720:	mov	r3, #0
   31724:	ldr	r2, [pc, #-2776]	; 30c54 <__flatcc_fb_build_schema@@Base+0x10a0>
   31728:	ldr	r1, [r6, #4]
   3172c:	mov	r0, r8
   31730:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31734:	mov	r3, #1
   31738:	str	r3, [sp, #20]
   3173c:	ldrh	r3, [fp, #72]	; 0x48
   31740:	tst	r3, #128	; 0x80
   31744:	beq	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   31748:	ldr	r3, [sp, #64]	; 0x40
   3174c:	add	r3, r3, #1
   31750:	str	r3, [sp, #64]	; 0x40
   31754:	ldr	r3, [sp, #32]
   31758:	cmp	r3, #0
   3175c:	beq	31954 <__flatcc_fb_build_schema@@Base+0x1da0>
   31760:	ldr	fp, [fp]
   31764:	cmp	fp, #0
   31768:	beq	31968 <__flatcc_fb_build_schema@@Base+0x1db4>
   3176c:	mov	r2, #1
   31770:	mov	r1, fp
   31774:	add	r0, sl, #56	; 0x38
   31778:	bl	2784c <fb_symbol_table_insert_item@@Base>
   3177c:	subs	r7, r0, #0
   31780:	beq	30250 <__flatcc_fb_build_schema@@Base+0x69c>
   31784:	ldr	r3, [r7, #4]
   31788:	ldr	r2, [pc, #-2872]	; 30c58 <__flatcc_fb_build_schema@@Base+0x10a4>
   3178c:	ldr	r1, [fp, #4]
   31790:	mov	r0, r8
   31794:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31798:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   3179c:	mov	r3, #0
   317a0:	ldr	r2, [pc, #-2892]	; 30c5c <__flatcc_fb_build_schema@@Base+0x10a8>
   317a4:	ldr	r1, [fp, #4]
   317a8:	mov	r0, r8
   317ac:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   317b0:	b	31734 <__flatcc_fb_build_schema@@Base+0x1b80>
   317b4:	ldrd	r2, [r6, #8]
   317b8:	ldrd	r0, [r8, #216]	; 0xd8
   317bc:	cmp	r3, r1
   317c0:	cmpeq	r2, r0
   317c4:	bcs	31870 <__flatcc_fb_build_schema@@Base+0x1cbc>
   317c8:	uxth	r2, r2
   317cc:	mov	r3, #0
   317d0:	strd	r2, [fp, #96]	; 0x60
   317d4:	ldrd	r0, [sp, #48]	; 0x30
   317d8:	cmp	r1, r3
   317dc:	cmpeq	r0, r2
   317e0:	strdcc	r2, [sp, #48]	; 0x30
   317e4:	ldr	r3, [sp, #40]	; 0x28
   317e8:	cmp	r3, #0
   317ec:	beq	31948 <__flatcc_fb_build_schema@@Base+0x1d94>
   317f0:	ldr	r3, [fp, #96]	; 0x60
   317f4:	ldr	r1, [sp, #68]	; 0x44
   317f8:	add	r2, r1, r3
   317fc:	ldrb	r3, [r1, r3]
   31800:	cmp	r3, #2
   31804:	beq	31888 <__flatcc_fb_build_schema@@Base+0x1cd4>
   31808:	cmp	r3, #0
   3180c:	moveq	r3, #1
   31810:	strbeq	r3, [r2]
   31814:	bne	318a8 <__flatcc_fb_build_schema@@Base+0x1cf4>
   31818:	cmp	r7, #0
   3181c:	beq	3173c <__flatcc_fb_build_schema@@Base+0x1b88>
   31820:	ldrh	r3, [r7, #8]
   31824:	cmp	r3, #4
   31828:	bne	3173c <__flatcc_fb_build_schema@@Base+0x1b88>
   3182c:	ldrh	r2, [fp, #24]
   31830:	ldrd	r0, [fp, #96]	; 0x60
   31834:	cmp	r1, #0
   31838:	cmpeq	r0, #1
   3183c:	bhi	318c0 <__flatcc_fb_build_schema@@Base+0x1d0c>
   31840:	mov	r3, #0
   31844:	ldr	r1, [pc, #-3052]	; 30c60 <__flatcc_fb_build_schema@@Base+0x10ac>
   31848:	ldr	r0, [pc, #-3052]	; 30c64 <__flatcc_fb_build_schema@@Base+0x10b0>
   3184c:	cmp	r2, #11
   31850:	movne	r0, r1
   31854:	mov	r2, r0
   31858:	ldr	r1, [r6, #4]
   3185c:	mov	r0, r8
   31860:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31864:	ldr	r3, [sp, #40]	; 0x28
   31868:	str	r3, [sp, #20]
   3186c:	b	3173c <__flatcc_fb_build_schema@@Base+0x1b88>
   31870:	mov	r3, #0
   31874:	ldr	r2, [pc, #-3092]	; 30c68 <__flatcc_fb_build_schema@@Base+0x10b4>
   31878:	ldr	r1, [fp, #4]
   3187c:	mov	r0, r8
   31880:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31884:	b	31734 <__flatcc_fb_build_schema@@Base+0x1b80>
   31888:	mov	r3, #0
   3188c:	ldr	r2, [pc, #-3112]	; 30c6c <__flatcc_fb_build_schema@@Base+0x10b8>
   31890:	ldr	r1, [r6, #4]
   31894:	mov	r0, r8
   31898:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3189c:	ldr	r3, [sp, #40]	; 0x28
   318a0:	str	r3, [sp, #20]
   318a4:	b	3173c <__flatcc_fb_build_schema@@Base+0x1b88>
   318a8:	mov	r3, #0
   318ac:	ldr	r2, [pc, #-3140]	; 30c70 <__flatcc_fb_build_schema@@Base+0x10bc>
   318b0:	ldr	r1, [r6, #4]
   318b4:	mov	r0, r8
   318b8:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   318bc:	b	31818 <__flatcc_fb_build_schema@@Base+0x1c64>
   318c0:	sub	r0, r0, #1
   318c4:	ldr	r3, [sp, #68]	; 0x44
   318c8:	add	r1, r3, r0
   318cc:	ldrb	r3, [r3, r0]
   318d0:	cmp	r3, #2
   318d4:	beq	31918 <__flatcc_fb_build_schema@@Base+0x1d64>
   318d8:	cmp	r3, #0
   318dc:	moveq	r3, #2
   318e0:	strbeq	r3, [r1]
   318e4:	beq	3173c <__flatcc_fb_build_schema@@Base+0x1b88>
   318e8:	mov	r3, #0
   318ec:	ldr	r1, [pc, #-3200]	; 30c74 <__flatcc_fb_build_schema@@Base+0x10c0>
   318f0:	ldr	r0, [pc, #-3200]	; 30c78 <__flatcc_fb_build_schema@@Base+0x10c4>
   318f4:	cmp	r2, #11
   318f8:	movne	r1, r0
   318fc:	mov	r2, r1
   31900:	ldr	r1, [r6, #4]
   31904:	mov	r0, r8
   31908:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3190c:	ldr	r3, [sp, #40]	; 0x28
   31910:	str	r3, [sp, #20]
   31914:	b	3173c <__flatcc_fb_build_schema@@Base+0x1b88>
   31918:	mov	r3, #0
   3191c:	ldr	r1, [pc, #-3240]	; 30c7c <__flatcc_fb_build_schema@@Base+0x10c8>
   31920:	ldr	r0, [pc, #-3240]	; 30c80 <__flatcc_fb_build_schema@@Base+0x10cc>
   31924:	cmp	r2, #11
   31928:	movne	r1, r0
   3192c:	mov	r2, r1
   31930:	ldr	r1, [r6, #4]
   31934:	mov	r0, r8
   31938:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3193c:	ldr	r3, [sp, #40]	; 0x28
   31940:	str	r3, [sp, #20]
   31944:	b	3173c <__flatcc_fb_build_schema@@Base+0x1b88>
   31948:	ldr	r3, [sp, #40]	; 0x28
   3194c:	str	r3, [sp, #20]
   31950:	b	3173c <__flatcc_fb_build_schema@@Base+0x1b88>
   31954:	ldr	r2, [pc, #-3288]	; 30c84 <__flatcc_fb_build_schema@@Base+0x10d0>
   31958:	ldr	r1, [fp, #4]
   3195c:	mov	r0, r8
   31960:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31964:	b	31760 <__flatcc_fb_build_schema@@Base+0x1bac>
   31968:	ldr	ip, [sp, #20]
   3196c:	cmp	ip, #0
   31970:	bne	31a80 <__flatcc_fb_build_schema@@Base+0x1ecc>
   31974:	ldr	lr, [sp, #12]
   31978:	ldrd	r0, [sp, #24]
   3197c:	mov	r2, r0
   31980:	mov	r3, r1
   31984:	strd	r2, [lr, #96]	; 0x60
   31988:	ldr	r2, [sp, #40]	; 0x28
   3198c:	cmp	ip, #0
   31990:	movne	r2, #0
   31994:	andeq	r2, r2, #1
   31998:	cmp	r2, #0
   3199c:	beq	31a80 <__flatcc_fb_build_schema@@Base+0x1ecc>
   319a0:	mov	r3, r0
   319a4:	orrs	r3, r3, r1
   319a8:	movne	r3, #1
   319ac:	moveq	r3, #0
   319b0:	ldrd	r4, [sp, #48]	; 0x30
   319b4:	cmp	r1, r5
   319b8:	cmpeq	r0, r4
   319bc:	movhi	r3, #0
   319c0:	andls	r3, r3, #1
   319c4:	cmp	r3, #0
   319c8:	beq	31a80 <__flatcc_fb_build_schema@@Base+0x1ecc>
   319cc:	orrs	r3, r4, r5
   319d0:	beq	31b40 <__flatcc_fb_build_schema@@Base+0x1f8c>
   319d4:	ldr	r3, [sp, #68]	; 0x44
   319d8:	sub	r6, r3, #1
   319dc:	mov	r2, #10
   319e0:	mov	r4, #0
   319e4:	mov	r5, #0
   319e8:	ldr	fp, [pc, #-3432]	; 30c88 <__flatcc_fb_build_schema@@Base+0x10d4>
   319ec:	mov	sl, #0
   319f0:	b	31a2c <__flatcc_fb_build_schema@@Base+0x1e78>
   319f4:	ldr	r2, [pc, #-3440]	; 30c8c <__flatcc_fb_build_schema@@Base+0x10d8>
   319f8:	ldr	r1, [sp, #12]
   319fc:	ldr	r1, [r1, #4]
   31a00:	mov	r0, r8
   31a04:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31a08:	mov	r3, #1
   31a0c:	str	r3, [sp, #20]
   31a10:	b	31a80 <__flatcc_fb_build_schema@@Base+0x1ecc>
   31a14:	adds	r4, r4, #1
   31a18:	adc	r5, r5, #0
   31a1c:	ldrd	r0, [sp, #48]	; 0x30
   31a20:	cmp	r5, r1
   31a24:	cmpeq	r4, r0
   31a28:	beq	31a78 <__flatcc_fb_build_schema@@Base+0x1ec4>
   31a2c:	ldrb	r3, [r6, #1]!
   31a30:	cmp	r3, #0
   31a34:	bne	31a14 <__flatcc_fb_build_schema@@Base+0x1e60>
   31a38:	sub	r7, r2, #1
   31a3c:	cmp	r2, #0
   31a40:	beq	319f4 <__flatcc_fb_build_schema@@Base+0x1e40>
   31a44:	mov	r2, r4
   31a48:	mov	r3, r5
   31a4c:	mov	r1, fp
   31a50:	add	r0, sp, #132	; 0x84
   31a54:	bl	13ff0 <sprintf@plt>
   31a58:	mov	r3, sl
   31a5c:	add	r2, sp, #132	; 0x84
   31a60:	ldr	r1, [sp, #12]
   31a64:	ldr	r1, [r1, #4]
   31a68:	mov	r0, r8
   31a6c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31a70:	mov	r2, r7
   31a74:	b	31a14 <__flatcc_fb_build_schema@@Base+0x1e60>
   31a78:	mov	r3, #1
   31a7c:	str	r3, [sp, #20]
   31a80:	ldr	r2, [sp, #64]	; 0x40
   31a84:	cmp	r2, #0
   31a88:	beq	31ab0 <__flatcc_fb_build_schema@@Base+0x1efc>
   31a8c:	ldr	r1, [sp, #12]
   31a90:	ldrh	r3, [r1, #10]
   31a94:	orr	r3, r3, #8
   31a98:	strh	r3, [r1, #10]
   31a9c:	cmp	r2, #1
   31aa0:	ble	31ab0 <__flatcc_fb_build_schema@@Base+0x1efc>
   31aa4:	ldr	r3, [r8, #156]	; 0x9c
   31aa8:	cmp	r3, #0
   31aac:	beq	31b4c <__flatcc_fb_build_schema@@Base+0x1f98>
   31ab0:	ldr	r3, [sp, #20]
   31ab4:	cmp	r3, #0
   31ab8:	bne	302b4 <__flatcc_fb_build_schema@@Base+0x700>
   31abc:	ldr	r3, [sp, #12]
   31ac0:	ldr	r3, [r3]
   31ac4:	str	r3, [sp, #12]
   31ac8:	cmp	r3, #0
   31acc:	beq	32228 <__flatcc_fb_build_schema@@Base+0x2674>
   31ad0:	ldr	r3, [sp, #12]
   31ad4:	ldrh	r3, [r3, #8]
   31ad8:	cmp	r3, #0
   31adc:	beq	2ffcc <__flatcc_fb_build_schema@@Base+0x418>
   31ae0:	cmp	r3, #2
   31ae4:	bne	31abc <__flatcc_fb_build_schema@@Base+0x1f08>
   31ae8:	ldr	r3, [sp, #12]
   31aec:	ldrh	fp, [r3, #48]	; 0x30
   31af0:	cmp	fp, #1
   31af4:	beq	31abc <__flatcc_fb_build_schema@@Base+0x1f08>
   31af8:	cmp	fp, #0
   31afc:	bne	31b60 <__flatcc_fb_build_schema@@Base+0x1fac>
   31b00:	ldr	r1, [sp, #12]
   31b04:	ldr	r3, [r1, #28]
   31b08:	cmp	r3, #0
   31b0c:	beq	31b24 <__flatcc_fb_build_schema@@Base+0x1f70>
   31b10:	mov	r3, #0
   31b14:	ldr	r2, [pc, #-3724]	; 30c90 <__flatcc_fb_build_schema@@Base+0x10dc>
   31b18:	ldr	r1, [r1, #4]
   31b1c:	mov	r0, r8
   31b20:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31b24:	ldr	r3, [sp, #12]
   31b28:	ldr	sl, [r3, #20]
   31b2c:	cmp	sl, #0
   31b30:	beq	31abc <__flatcc_fb_build_schema@@Base+0x1f08>
   31b34:	str	fp, [sp, #20]
   31b38:	mov	r6, r3
   31b3c:	b	31e0c <__flatcc_fb_build_schema@@Base+0x2258>
   31b40:	mov	r3, #1
   31b44:	str	r3, [sp, #20]
   31b48:	b	31a80 <__flatcc_fb_build_schema@@Base+0x1ecc>
   31b4c:	ldr	r2, [pc, #-3776]	; 30c94 <__flatcc_fb_build_schema@@Base+0x10e0>
   31b50:	ldr	r1, [r1, #4]
   31b54:	mov	r0, r8
   31b58:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31b5c:	b	302b4 <__flatcc_fb_build_schema@@Base+0x700>
   31b60:	ldr	r3, [pc, #-3792]	; 30c98 <__flatcc_fb_build_schema@@Base+0x10e4>
   31b64:	ldr	r2, [pc, #-3792]	; 30c9c <__flatcc_fb_build_schema@@Base+0x10e8>
   31b68:	ldr	r1, [pc, #-3788]	; 30ca4 <__flatcc_fb_build_schema@@Base+0x10f0>
   31b6c:	ldr	r0, [pc, #-3796]	; 30ca0 <__flatcc_fb_build_schema@@Base+0x10ec>
   31b70:	bl	14038 <__assert_fail@plt>
   31b74:	ldrh	r3, [sl, #8]
   31b78:	cmp	r3, #5
   31b7c:	bne	31bd0 <__flatcc_fb_build_schema@@Base+0x201c>
   31b80:	ldrh	r3, [sl, #56]	; 0x38
   31b84:	cmp	r3, #0
   31b88:	bne	31bf4 <__flatcc_fb_build_schema@@Base+0x2040>
   31b8c:	ldrh	r3, [sl, #24]
   31b90:	cmp	r3, #1
   31b94:	beq	31e00 <__flatcc_fb_build_schema@@Base+0x224c>
   31b98:	cmp	r3, #12
   31b9c:	beq	31bb4 <__flatcc_fb_build_schema@@Base+0x2000>
   31ba0:	mov	r3, #0
   31ba4:	ldr	r2, [pc, #-3844]	; 30ca8 <__flatcc_fb_build_schema@@Base+0x10f4>
   31ba8:	ldr	r1, [sl, #4]
   31bac:	mov	r0, r8
   31bb0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31bb4:	ldr	r7, [r6, #12]
   31bb8:	ldr	r1, [sl, #32]
   31bbc:	cmp	r1, #0
   31bc0:	beq	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31bc4:	mov	fp, r1
   31bc8:	mov	r2, #0
   31bcc:	b	31c14 <__flatcc_fb_build_schema@@Base+0x2060>
   31bd0:	mov	r3, #0
   31bd4:	ldr	r2, [pc, #-3888]	; 30cac <__flatcc_fb_build_schema@@Base+0x10f8>
   31bd8:	ldr	r1, [sl, #4]
   31bdc:	mov	r0, r8
   31be0:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31be4:	mov	r3, #1
   31be8:	ldr	r2, [sp, #12]
   31bec:	strh	r3, [r2, #48]	; 0x30
   31bf0:	b	31abc <__flatcc_fb_build_schema@@Base+0x1f08>
   31bf4:	mov	r3, #0
   31bf8:	ldr	r2, [pc, #-3920]	; 30cb0 <__flatcc_fb_build_schema@@Base+0x10fc>
   31bfc:	ldr	r1, [sl, #4]
   31c00:	mov	r0, r8
   31c04:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31c08:	b	31b8c <__flatcc_fb_build_schema@@Base+0x1fd8>
   31c0c:	mov	r2, r0
   31c10:	mov	fp, r3
   31c14:	ldr	r3, [fp]
   31c18:	add	r0, r2, #1
   31c1c:	cmp	r3, #0
   31c20:	bne	31c0c <__flatcc_fb_build_schema@@Base+0x2058>
   31c24:	cmp	fp, #0
   31c28:	beq	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31c2c:	adds	ip, r7, #0
   31c30:	movne	ip, #1
   31c34:	cmp	r0, #1
   31c38:	movne	ip, #0
   31c3c:	cmp	ip, #0
   31c40:	bne	31d3c <__flatcc_fb_build_schema@@Base+0x2188>
   31c44:	cmp	r0, #1
   31c48:	moveq	r1, r3
   31c4c:	cmp	r9, #0
   31c50:	beq	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31c54:	ldr	r0, [r8, #412]	; 0x19c
   31c58:	cmp	r0, #0
   31c5c:	beq	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31c60:	rsb	r2, r2, #0
   31c64:	bl	287c8 <fb_scope_table_find@@Base>
   31c68:	cmp	r0, #0
   31c6c:	beq	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31c70:	ldr	r3, [fp, #4]
   31c74:	ldr	r2, [r3, #4]
   31c78:	ldr	r1, [r3]
   31c7c:	add	r0, r0, #4
   31c80:	bl	27878 <fb_symbol_table_find@@Base>
   31c84:	subs	r4, r0, #0
   31c88:	beq	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31c8c:	ldrh	r3, [r4, #8]
   31c90:	cmp	r3, #4
   31c94:	bls	31dcc <__flatcc_fb_build_schema@@Base+0x2218>
   31c98:	mov	r3, sl
   31c9c:	ldr	r2, [pc, #2912]	; 32804 <__flatcc_fb_build_schema@@Base+0x2c50>
   31ca0:	ldr	r1, [sl, #32]
   31ca4:	mov	r0, r8
   31ca8:	bl	2adb4 <error_ref_sym@@Base>
   31cac:	mov	r3, #1
   31cb0:	strh	r3, [sl, #24]
   31cb4:	b	31e00 <__flatcc_fb_build_schema@@Base+0x224c>
   31cb8:	ldr	r1, [r4, #16]
   31cbc:	ldr	r0, [sp, #16]
   31cc0:	bl	27230 <ptr_set_find_item@@Base>
   31cc4:	cmp	r0, #0
   31cc8:	beq	31d64 <__flatcc_fb_build_schema@@Base+0x21b0>
   31ccc:	ldrh	r3, [r4, #8]
   31cd0:	cmp	r3, #0
   31cd4:	bne	31de4 <__flatcc_fb_build_schema@@Base+0x2230>
   31cd8:	mov	r3, #14
   31cdc:	strh	r3, [sl, #40]	; 0x28
   31ce0:	str	r4, [sl, #32]
   31ce4:	ldr	r7, [r6, #12]
   31ce8:	ldr	r1, [sl, #16]
   31cec:	cmp	r1, #0
   31cf0:	beq	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   31cf4:	mov	fp, r1
   31cf8:	mov	r2, #0
   31cfc:	b	31e44 <__flatcc_fb_build_schema@@Base+0x2290>
   31d00:	sub	r5, r5, #1
   31d04:	add	r4, r4, #1
   31d08:	cmp	r5, #1
   31d0c:	ble	31da0 <__flatcc_fb_build_schema@@Base+0x21ec>
   31d10:	cmp	r9, #0
   31d14:	beq	31d00 <__flatcc_fb_build_schema@@Base+0x214c>
   31d18:	ldr	r0, [r8, #412]	; 0x19c
   31d1c:	cmp	r0, #0
   31d20:	beq	31d00 <__flatcc_fb_build_schema@@Base+0x214c>
   31d24:	mov	r2, r4
   31d28:	ldr	r1, [r7]
   31d2c:	bl	287c8 <fb_scope_table_find@@Base>
   31d30:	cmp	r0, #0
   31d34:	beq	31d00 <__flatcc_fb_build_schema@@Base+0x214c>
   31d38:	mov	r7, r0
   31d3c:	ldr	r3, [fp, #4]
   31d40:	ldr	r2, [r3, #4]
   31d44:	ldr	r1, [r3]
   31d48:	add	r0, r7, #4
   31d4c:	bl	27878 <fb_symbol_table_find@@Base>
   31d50:	subs	r4, r0, #0
   31d54:	beq	31d64 <__flatcc_fb_build_schema@@Base+0x21b0>
   31d58:	ldrh	r3, [r4, #8]
   31d5c:	cmp	r3, #4
   31d60:	bls	31cb8 <__flatcc_fb_build_schema@@Base+0x2104>
   31d64:	cmp	r7, #0
   31d68:	beq	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31d6c:	ldr	r3, [r7]
   31d70:	cmp	r3, #0
   31d74:	beq	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31d78:	mov	r4, #0
   31d7c:	add	r4, r4, #1
   31d80:	ldr	r3, [r3]
   31d84:	cmp	r3, #0
   31d88:	bne	31d7c <__flatcc_fb_build_schema@@Base+0x21c8>
   31d8c:	cmp	r4, #0
   31d90:	beq	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31d94:	mov	r5, r4
   31d98:	rsb	r4, r4, #1
   31d9c:	b	31d08 <__flatcc_fb_build_schema@@Base+0x2154>
   31da0:	cmp	r9, #0
   31da4:	beq	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31da8:	ldr	r0, [r8, #412]	; 0x19c
   31dac:	cmp	r0, #0
   31db0:	beq	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31db4:	mov	r2, #0
   31db8:	mov	r1, r2
   31dbc:	bl	287c8 <fb_scope_table_find@@Base>
   31dc0:	subs	r7, r0, #0
   31dc4:	bne	31d3c <__flatcc_fb_build_schema@@Base+0x2188>
   31dc8:	b	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31dcc:	ldr	r1, [r4, #16]
   31dd0:	ldr	r0, [sp, #16]
   31dd4:	bl	27230 <ptr_set_find_item@@Base>
   31dd8:	cmp	r0, #0
   31ddc:	bne	31ccc <__flatcc_fb_build_schema@@Base+0x2118>
   31de0:	b	31c98 <__flatcc_fb_build_schema@@Base+0x20e4>
   31de4:	ldr	r3, [r4, #4]
   31de8:	ldr	r2, [pc, #2584]	; 32808 <__flatcc_fb_build_schema@@Base+0x2c54>
   31dec:	ldr	r1, [sl, #4]
   31df0:	mov	r0, r8
   31df4:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31df8:	mov	r3, #1
   31dfc:	strh	r3, [sl, #24]
   31e00:	ldr	sl, [sl]
   31e04:	cmp	sl, #0
   31e08:	beq	31abc <__flatcc_fb_build_schema@@Base+0x1f08>
   31e0c:	mov	r2, #1
   31e10:	mov	r1, sl
   31e14:	add	r0, r6, #56	; 0x38
   31e18:	bl	2784c <fb_symbol_table_insert_item@@Base>
   31e1c:	cmp	r0, #0
   31e20:	beq	31b74 <__flatcc_fb_build_schema@@Base+0x1fc0>
   31e24:	ldr	r3, [r0, #4]
   31e28:	ldr	r2, [pc, #2524]	; 3280c <__flatcc_fb_build_schema@@Base+0x2c58>
   31e2c:	ldr	r1, [sl, #4]
   31e30:	mov	r0, r8
   31e34:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   31e38:	b	31e00 <__flatcc_fb_build_schema@@Base+0x224c>
   31e3c:	mov	r2, r0
   31e40:	mov	fp, r3
   31e44:	ldr	r3, [fp]
   31e48:	add	r0, r2, #1
   31e4c:	cmp	r3, #0
   31e50:	bne	31e3c <__flatcc_fb_build_schema@@Base+0x2288>
   31e54:	cmp	fp, #0
   31e58:	beq	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   31e5c:	adds	ip, r7, #0
   31e60:	movne	ip, #1
   31e64:	cmp	r0, #1
   31e68:	movne	ip, #0
   31e6c:	cmp	ip, #0
   31e70:	bne	31f88 <__flatcc_fb_build_schema@@Base+0x23d4>
   31e74:	cmp	r0, #1
   31e78:	moveq	r1, r3
   31e7c:	cmp	r9, #0
   31e80:	beq	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   31e84:	ldr	r0, [r8, #412]	; 0x19c
   31e88:	cmp	r0, #0
   31e8c:	beq	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   31e90:	rsb	r2, r2, #0
   31e94:	bl	287c8 <fb_scope_table_find@@Base>
   31e98:	cmp	r0, #0
   31e9c:	beq	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   31ea0:	ldr	r3, [fp, #4]
   31ea4:	ldr	r2, [r3, #4]
   31ea8:	ldr	r1, [r3]
   31eac:	add	r0, r0, #4
   31eb0:	bl	27878 <fb_symbol_table_find@@Base>
   31eb4:	subs	r4, r0, #0
   31eb8:	beq	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   31ebc:	ldrh	r3, [r4, #8]
   31ec0:	cmp	r3, #4
   31ec4:	bls	32018 <__flatcc_fb_build_schema@@Base+0x2464>
   31ec8:	mov	r3, sl
   31ecc:	ldr	r2, [pc, #2364]	; 32810 <__flatcc_fb_build_schema@@Base+0x2c5c>
   31ed0:	ldr	r1, [sl, #16]
   31ed4:	mov	r0, r8
   31ed8:	bl	2adb4 <error_ref_sym@@Base>
   31edc:	mov	r3, #1
   31ee0:	strh	r3, [sl, #24]
   31ee4:	b	31e00 <__flatcc_fb_build_schema@@Base+0x224c>
   31ee8:	ldr	r1, [r4, #16]
   31eec:	ldr	r0, [sp, #16]
   31ef0:	bl	27230 <ptr_set_find_item@@Base>
   31ef4:	cmp	r0, #0
   31ef8:	beq	31fb0 <__flatcc_fb_build_schema@@Base+0x23fc>
   31efc:	ldrh	r3, [r4, #8]
   31f00:	cmp	r3, #0
   31f04:	bne	32030 <__flatcc_fb_build_schema@@Base+0x247c>
   31f08:	mov	r3, #14
   31f0c:	strh	r3, [sl, #24]
   31f10:	str	r4, [sl, #16]
   31f14:	mov	r2, #0
   31f18:	mov	r3, #0
   31f1c:	strd	r2, [sl, #88]	; 0x58
   31f20:	ldr	r4, [sl, #64]	; 0x40
   31f24:	mov	r2, #48	; 0x30
   31f28:	mov	r1, #0
   31f2c:	add	r0, sp, #132	; 0x84
   31f30:	bl	13f9c <memset@plt>
   31f34:	cmp	r4, #0
   31f38:	beq	32220 <__flatcc_fb_build_schema@@Base+0x266c>
   31f3c:	ldr	r7, [sp, #20]
   31f40:	mov	r5, #100	; 0x64
   31f44:	ldr	fp, [pc, #2248]	; 32814 <__flatcc_fb_build_schema@@Base+0x2c60>
   31f48:	b	320a0 <__flatcc_fb_build_schema@@Base+0x24ec>
   31f4c:	sub	r5, r5, #1
   31f50:	add	r4, r4, #1
   31f54:	cmp	r5, #1
   31f58:	ble	31fec <__flatcc_fb_build_schema@@Base+0x2438>
   31f5c:	cmp	r9, #0
   31f60:	beq	31f4c <__flatcc_fb_build_schema@@Base+0x2398>
   31f64:	ldr	r0, [r8, #412]	; 0x19c
   31f68:	cmp	r0, #0
   31f6c:	beq	31f4c <__flatcc_fb_build_schema@@Base+0x2398>
   31f70:	mov	r2, r4
   31f74:	ldr	r1, [r7]
   31f78:	bl	287c8 <fb_scope_table_find@@Base>
   31f7c:	cmp	r0, #0
   31f80:	beq	31f4c <__flatcc_fb_build_schema@@Base+0x2398>
   31f84:	mov	r7, r0
   31f88:	ldr	r3, [fp, #4]
   31f8c:	ldr	r2, [r3, #4]
   31f90:	ldr	r1, [r3]
   31f94:	add	r0, r7, #4
   31f98:	bl	27878 <fb_symbol_table_find@@Base>
   31f9c:	subs	r4, r0, #0
   31fa0:	beq	31fb0 <__flatcc_fb_build_schema@@Base+0x23fc>
   31fa4:	ldrh	r3, [r4, #8]
   31fa8:	cmp	r3, #4
   31fac:	bls	31ee8 <__flatcc_fb_build_schema@@Base+0x2334>
   31fb0:	cmp	r7, #0
   31fb4:	beq	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   31fb8:	ldr	r3, [r7]
   31fbc:	cmp	r3, #0
   31fc0:	beq	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   31fc4:	mov	r4, #0
   31fc8:	add	r4, r4, #1
   31fcc:	ldr	r3, [r3]
   31fd0:	cmp	r3, #0
   31fd4:	bne	31fc8 <__flatcc_fb_build_schema@@Base+0x2414>
   31fd8:	cmp	r4, #0
   31fdc:	beq	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   31fe0:	mov	r5, r4
   31fe4:	rsb	r4, r4, #1
   31fe8:	b	31f54 <__flatcc_fb_build_schema@@Base+0x23a0>
   31fec:	cmp	r9, #0
   31ff0:	beq	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   31ff4:	ldr	r0, [r8, #412]	; 0x19c
   31ff8:	cmp	r0, #0
   31ffc:	beq	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   32000:	mov	r2, #0
   32004:	mov	r1, r2
   32008:	bl	287c8 <fb_scope_table_find@@Base>
   3200c:	subs	r7, r0, #0
   32010:	bne	31f88 <__flatcc_fb_build_schema@@Base+0x23d4>
   32014:	b	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   32018:	ldr	r1, [r4, #16]
   3201c:	ldr	r0, [sp, #16]
   32020:	bl	27230 <ptr_set_find_item@@Base>
   32024:	cmp	r0, #0
   32028:	bne	31efc <__flatcc_fb_build_schema@@Base+0x2348>
   3202c:	b	31ec8 <__flatcc_fb_build_schema@@Base+0x2314>
   32030:	ldr	r3, [r4, #4]
   32034:	ldr	r2, [pc, #2012]	; 32818 <__flatcc_fb_build_schema@@Base+0x2c64>
   32038:	ldr	r1, [sl, #4]
   3203c:	mov	r0, r8
   32040:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32044:	mov	r3, #1
   32048:	strh	r3, [sl, #24]
   3204c:	b	31e00 <__flatcc_fb_build_schema@@Base+0x224c>
   32050:	mov	r3, #0
   32054:	ldr	r2, [pc, #1984]	; 3281c <__flatcc_fb_build_schema@@Base+0x2c68>
   32058:	ldr	r1, [r4, #4]
   3205c:	mov	r0, r8
   32060:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32064:	b	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   32068:	mov	r3, #0
   3206c:	ldr	r2, [pc, #1964]	; 32820 <__flatcc_fb_build_schema@@Base+0x2c6c>
   32070:	ldr	r1, [r4, #4]
   32074:	mov	r0, r8
   32078:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3207c:	ldr	r4, [r4]
   32080:	subs	r5, r5, #1
   32084:	movne	r3, #1
   32088:	moveq	r3, #0
   3208c:	cmp	r4, #0
   32090:	moveq	r3, #0
   32094:	andne	r3, r3, #1
   32098:	cmp	r3, #0
   3209c:	beq	32200 <__flatcc_fb_build_schema@@Base+0x264c>
   320a0:	ldr	r3, [r4, #4]
   320a4:	ldr	r0, [r8, #412]	; 0x19c
   320a8:	ldr	r2, [r3, #4]
   320ac:	ldr	r1, [r3]
   320b0:	add	r0, r0, #16
   320b4:	bl	3935c <fb_name_table_find@@Base>
   320b8:	cmp	r0, #0
   320bc:	beq	32050 <__flatcc_fb_build_schema@@Base+0x249c>
   320c0:	ldr	r3, [r0, #24]
   320c4:	cmp	r3, #0
   320c8:	beq	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   320cc:	cmp	r3, #2
   320d0:	bne	32068 <__flatcc_fb_build_schema@@Base+0x24b4>
   320d4:	mov	r2, #1
   320d8:	orr	r7, r7, r2, lsl r3
   320dc:	uxth	r7, r7
   320e0:	add	r2, sp, #132	; 0x84
   320e4:	ldr	r2, [r2, r3, lsl #2]
   320e8:	cmp	r2, #0
   320ec:	beq	32108 <__flatcc_fb_build_schema@@Base+0x2554>
   320f0:	mov	r3, #0
   320f4:	ldr	r2, [pc, #1832]	; 32824 <__flatcc_fb_build_schema@@Base+0x2c70>
   320f8:	ldr	r1, [r4, #4]
   320fc:	mov	r0, r8
   32100:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32104:	b	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   32108:	add	r2, sp, #132	; 0x84
   3210c:	str	r4, [r2, r3, lsl #2]
   32110:	ldr	r2, [pc, #1808]	; 32828 <__flatcc_fb_build_schema@@Base+0x2c74>
   32114:	add	r3, r2, r3, lsl #2
   32118:	ldr	r3, [r3, #76]	; 0x4c
   3211c:	cmp	r3, #0
   32120:	bne	32148 <__flatcc_fb_build_schema@@Base+0x2594>
   32124:	ldrh	r3, [r4, #16]
   32128:	cmp	r3, #0
   3212c:	beq	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   32130:	mov	r3, #0
   32134:	ldr	r2, [pc, #1776]	; 3282c <__flatcc_fb_build_schema@@Base+0x2c78>
   32138:	ldr	r1, [r4, #4]
   3213c:	mov	r0, r8
   32140:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32144:	b	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   32148:	cmp	r3, #2
   3214c:	beq	3217c <__flatcc_fb_build_schema@@Base+0x25c8>
   32150:	cmp	r3, #5
   32154:	bne	321a0 <__flatcc_fb_build_schema@@Base+0x25ec>
   32158:	ldrh	r3, [r4, #16]
   3215c:	cmp	r3, #5
   32160:	beq	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   32164:	mov	r3, #0
   32168:	mov	r2, fp
   3216c:	ldr	r1, [r4, #4]
   32170:	mov	r0, r8
   32174:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32178:	b	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   3217c:	ldrh	r3, [r4, #16]
   32180:	cmp	r3, #2
   32184:	beq	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   32188:	mov	r3, #0
   3218c:	ldr	r2, [pc, #1692]	; 32830 <__flatcc_fb_build_schema@@Base+0x2c7c>
   32190:	ldr	r1, [r4, #4]
   32194:	mov	r0, r8
   32198:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   3219c:	b	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   321a0:	cmp	r3, #4
   321a4:	bne	321d4 <__flatcc_fb_build_schema@@Base+0x2620>
   321a8:	ldrh	r3, [r4, #16]
   321ac:	sub	r3, r3, #4
   321b0:	uxth	r3, r3
   321b4:	cmp	r3, #1
   321b8:	bls	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   321bc:	mov	r3, #0
   321c0:	ldr	r2, [pc, #1644]	; 32834 <__flatcc_fb_build_schema@@Base+0x2c80>
   321c4:	ldr	r1, [r4, #4]
   321c8:	mov	r0, r8
   321cc:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   321d0:	b	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   321d4:	cmp	r3, #6
   321d8:	bne	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   321dc:	ldrh	r3, [r4, #16]
   321e0:	cmp	r3, #6
   321e4:	beq	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   321e8:	mov	r3, #0
   321ec:	ldr	r2, [pc, #1604]	; 32838 <__flatcc_fb_build_schema@@Base+0x2c84>
   321f0:	ldr	r1, [r4, #4]
   321f4:	mov	r0, r8
   321f8:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   321fc:	b	3207c <__flatcc_fb_build_schema@@Base+0x24c8>
   32200:	cmp	r4, #0
   32204:	beq	32218 <__flatcc_fb_build_schema@@Base+0x2664>
   32208:	ldr	r2, [pc, #1580]	; 3283c <__flatcc_fb_build_schema@@Base+0x2c88>
   3220c:	ldr	r1, [r4, #4]
   32210:	mov	r0, r8
   32214:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32218:	strh	r7, [sl, #72]	; 0x48
   3221c:	b	31e00 <__flatcc_fb_build_schema@@Base+0x224c>
   32220:	ldr	r7, [sp, #20]
   32224:	b	32218 <__flatcc_fb_build_schema@@Base+0x2664>
   32228:	mov	sl, r9
   3222c:	mov	fp, r8
   32230:	ldr	r3, [fp, #396]	; 0x18c
   32234:	cmp	r3, #0
   32238:	beq	3225c <__flatcc_fb_build_schema@@Base+0x26a8>
   3223c:	mov	r1, #0
   32240:	b	32248 <__flatcc_fb_build_schema@@Base+0x2694>
   32244:	mov	r3, r2
   32248:	ldr	r2, [r3, #120]	; 0x78
   3224c:	str	r1, [r3, #120]	; 0x78
   32250:	mov	r1, r3
   32254:	cmp	r2, #0
   32258:	bne	32244 <__flatcc_fb_build_schema@@Base+0x2690>
   3225c:	str	r3, [fp, #396]	; 0x18c
   32260:	ldr	r5, [fp, #392]	; 0x188
   32264:	cmp	r5, #0
   32268:	beq	324f8 <__flatcc_fb_build_schema@@Base+0x2944>
   3226c:	mov	r7, #36	; 0x24
   32270:	mov	r6, #0
   32274:	add	r9, sp, #116	; 0x74
   32278:	mov	r8, #8
   3227c:	b	3229c <__flatcc_fb_build_schema@@Base+0x26e8>
   32280:	add	r2, sp, #132	; 0x84
   32284:	str	r6, [r2]
   32288:	ldr	r3, [sp, #132]	; 0x84
   3228c:	str	r3, [r5, #24]
   32290:	ldr	r5, [r5]
   32294:	cmp	r5, #0
   32298:	beq	324f8 <__flatcc_fb_build_schema@@Base+0x2944>
   3229c:	ldrh	r3, [r5, #8]
   322a0:	cmp	r3, #0
   322a4:	bne	32290 <__flatcc_fb_build_schema@@Base+0x26dc>
   322a8:	ldrh	r3, [r5, #92]	; 0x5c
   322ac:	tst	r3, #8
   322b0:	beq	322e0 <__flatcc_fb_build_schema@@Base+0x272c>
   322b4:	ldr	r3, [r5, #20]
   322b8:	str	r6, [sp, #132]	; 0x84
   322bc:	cmp	r3, #0
   322c0:	beq	32280 <__flatcc_fb_build_schema@@Base+0x26cc>
   322c4:	add	r2, sp, #132	; 0x84
   322c8:	str	r3, [r2]
   322cc:	add	r2, r3, #108	; 0x6c
   322d0:	ldr	r3, [r3]
   322d4:	cmp	r3, #0
   322d8:	bne	322c8 <__flatcc_fb_build_schema@@Base+0x2714>
   322dc:	b	32284 <__flatcc_fb_build_schema@@Base+0x26d0>
   322e0:	ldr	r4, [r5, #20]
   322e4:	mov	r2, r7
   322e8:	mov	r1, r6
   322ec:	add	r0, sp, #84	; 0x54
   322f0:	bl	13f9c <memset@plt>
   322f4:	mov	r2, r7
   322f8:	mov	r1, r6
   322fc:	add	r0, sp, #132	; 0x84
   32300:	bl	13f9c <memset@plt>
   32304:	cmp	r4, #0
   32308:	beq	32458 <__flatcc_fb_build_schema@@Base+0x28a4>
   3230c:	mov	r1, r4
   32310:	b	323bc <__flatcc_fb_build_schema@@Base+0x2808>
   32314:	ldr	r2, [r1, #16]
   32318:	ldrh	r3, [r2, #8]
   3231c:	cmp	r3, #3
   32320:	beq	32338 <__flatcc_fb_build_schema@@Base+0x2784>
   32324:	cmp	r3, #4
   32328:	beq	32340 <__flatcc_fb_build_schema@@Base+0x278c>
   3232c:	cmp	r3, #1
   32330:	ldrhne	r2, [fp, #192]	; 0xc0
   32334:	bne	3234c <__flatcc_fb_build_schema@@Base+0x2798>
   32338:	ldrh	r2, [r2, #104]	; 0x68
   3233c:	b	3234c <__flatcc_fb_build_schema@@Base+0x2798>
   32340:	ldrh	r2, [fp, #192]	; 0xc0
   32344:	b	3234c <__flatcc_fb_build_schema@@Base+0x2798>
   32348:	ldrh	r2, [fp, #192]	; 0xc0
   3234c:	cmp	r2, #0
   32350:	beq	32444 <__flatcc_fb_build_schema@@Base+0x2890>
   32354:	lsrs	r2, r2, #1
   32358:	moveq	r3, r2
   3235c:	beq	32374 <__flatcc_fb_build_schema@@Base+0x27c0>
   32360:	mov	r3, r6
   32364:	add	r3, r3, #1
   32368:	uxth	r3, r3
   3236c:	lsrs	r2, r2, #1
   32370:	bne	32364 <__flatcc_fb_build_schema@@Base+0x27b0>
   32374:	cmp	r3, #7
   32378:	movcs	r3, #7
   3237c:	add	r2, sp, #232	; 0xe8
   32380:	add	r2, r2, r3, lsl #2
   32384:	ldr	r2, [r2, #-148]	; 0xffffff6c
   32388:	cmp	r2, #0
   3238c:	add	r2, sp, #232	; 0xe8
   32390:	add	r2, r2, r3, lsl #2
   32394:	streq	r1, [r2, #-148]	; 0xffffff6c
   32398:	ldrne	r2, [r2, #-100]	; 0xffffff9c
   3239c:	strne	r1, [r2]
   323a0:	add	r2, sp, #232	; 0xe8
   323a4:	add	r3, r2, r3, lsl #2
   323a8:	add	r2, r1, #108	; 0x6c
   323ac:	str	r2, [r3, #-100]	; 0xffffff9c
   323b0:	ldr	r1, [r1]
   323b4:	cmp	r1, #0
   323b8:	beq	32458 <__flatcc_fb_build_schema@@Base+0x28a4>
   323bc:	ldrh	r2, [r1, #74]	; 0x4a
   323c0:	ldrh	r3, [r1, #24]
   323c4:	sub	r3, r3, #1
   323c8:	cmp	r3, #14
   323cc:	ldrls	pc, [pc, r3, lsl #2]
   323d0:	b	3234c <__flatcc_fb_build_schema@@Base+0x2798>
   323d4:	andeq	r2, r3, r0, lsl r4
   323d8:	andeq	r2, r3, ip, asr #6
   323dc:	andeq	r2, r3, ip, asr #6
   323e0:	andeq	r2, r3, ip, asr #6
   323e4:	andeq	r2, r3, ip, asr #6
   323e8:	andeq	r2, r3, ip, asr #6
   323ec:	andeq	r2, r3, r8, asr #6
   323f0:	andeq	r2, r3, ip, asr #6
   323f4:	andeq	r2, r3, r8, asr #6
   323f8:	andeq	r2, r3, r8, asr #6
   323fc:	andeq	r2, r3, ip, asr #6
   32400:	andeq	r2, r3, ip, asr #6
   32404:	andeq	r2, r3, ip, asr #6
   32408:	andeq	r2, r3, r4, lsl r3
   3240c:	andeq	r2, r3, r8, asr #6
   32410:	add	r2, sp, #232	; 0xe8
   32414:	str	r6, [r2, #-152]!	; 0xffffff68
   32418:	b	32420 <__flatcc_fb_build_schema@@Base+0x286c>
   3241c:	mov	r4, r3
   32420:	str	r4, [r2]
   32424:	add	r2, r4, #108	; 0x6c
   32428:	ldr	r3, [r4]
   3242c:	cmp	r3, #0
   32430:	bne	3241c <__flatcc_fb_build_schema@@Base+0x2868>
   32434:	str	r6, [r4, #108]	; 0x6c
   32438:	ldr	r3, [sp, #80]	; 0x50
   3243c:	str	r3, [r5, #24]
   32440:	b	32290 <__flatcc_fb_build_schema@@Base+0x26dc>
   32444:	ldr	r3, [pc, #1012]	; 32840 <__flatcc_fb_build_schema@@Base+0x2c8c>
   32448:	ldr	r2, [pc, #1012]	; 32844 <__flatcc_fb_build_schema@@Base+0x2c90>
   3244c:	ldr	r1, [pc, #1012]	; 32848 <__flatcc_fb_build_schema@@Base+0x2c94>
   32450:	ldr	r0, [pc, #1012]	; 3284c <__flatcc_fb_build_schema@@Base+0x2c98>
   32454:	bl	14038 <__assert_fail@plt>
   32458:	str	r9, [sp, #164]	; 0xa4
   3245c:	mov	r0, r8
   32460:	mov	r1, r8
   32464:	b	324ac <__flatcc_fb_build_schema@@Base+0x28f8>
   32468:	add	r3, sp, #232	; 0xe8
   3246c:	add	r1, r3, r1, lsl #2
   32470:	ldr	r3, [r1, #-100]	; 0xffffff9c
   32474:	ldr	r2, [sp, #84]	; 0x54
   32478:	str	r2, [r3]
   3247c:	ldr	r3, [sp, #116]	; 0x74
   32480:	b	3243c <__flatcc_fb_build_schema@@Base+0x2888>
   32484:	add	r3, sp, #232	; 0xe8
   32488:	add	r3, r3, r1, lsl #2
   3248c:	ldr	r2, [r3, #-148]	; 0xffffff6c
   32490:	add	r3, sp, #232	; 0xe8
   32494:	add	r0, r3, r0, lsl #2
   32498:	ldr	r3, [r0, #-100]	; 0xffffff9c
   3249c:	str	r2, [r3]
   324a0:	cmp	r1, #0
   324a4:	beq	3247c <__flatcc_fb_build_schema@@Base+0x28c8>
   324a8:	mov	r0, r1
   324ac:	sub	r3, r1, #1
   324b0:	uxth	r3, r3
   324b4:	add	r2, sp, #232	; 0xe8
   324b8:	add	r2, r2, r3, lsl #2
   324bc:	ldr	r2, [r2, #-148]	; 0xffffff6c
   324c0:	cmp	r2, #0
   324c4:	movne	r1, r3
   324c8:	bne	32484 <__flatcc_fb_build_schema@@Base+0x28d0>
   324cc:	cmp	r3, #0
   324d0:	beq	32468 <__flatcc_fb_build_schema@@Base+0x28b4>
   324d4:	sub	r3, r3, #1
   324d8:	uxth	r3, r3
   324dc:	add	r2, sp, #232	; 0xe8
   324e0:	add	r2, r2, r3, lsl #2
   324e4:	ldr	r2, [r2, #-148]	; 0xffffff6c
   324e8:	cmp	r2, #0
   324ec:	beq	324cc <__flatcc_fb_build_schema@@Base+0x2918>
   324f0:	mov	r1, r3
   324f4:	b	32484 <__flatcc_fb_build_schema@@Base+0x28d0>
   324f8:	ldr	r1, [fp, #400]	; 0x190
   324fc:	cmp	r1, #0
   32500:	ldrne	r5, [fp, #408]	; 0x198
   32504:	movne	r6, r1
   32508:	movne	r2, #0
   3250c:	bne	3253c <__flatcc_fb_build_schema@@Base+0x2988>
   32510:	ldr	r3, [fp, #208]	; 0xd0
   32514:	cmp	r3, #0
   32518:	beq	3260c <__flatcc_fb_build_schema@@Base+0x2a58>
   3251c:	mov	r3, #0
   32520:	ldr	r2, [pc, #808]	; 32850 <__flatcc_fb_build_schema@@Base+0x2c9c>
   32524:	mov	r1, r3
   32528:	mov	r0, fp
   3252c:	bl	2e258 <__flatcc_fb_clear_parser@@Base+0x1f8>
   32530:	b	3260c <__flatcc_fb_build_schema@@Base+0x2a58>
   32534:	mov	r2, r0
   32538:	mov	r6, r3
   3253c:	ldr	r3, [r6]
   32540:	add	r0, r2, #1
   32544:	cmp	r3, #0
   32548:	bne	32534 <__flatcc_fb_build_schema@@Base+0x2980>
   3254c:	cmp	r6, #0
   32550:	beq	325c0 <__flatcc_fb_build_schema@@Base+0x2a0c>
   32554:	adds	ip, r5, #0
   32558:	movne	ip, #1
   3255c:	cmp	r0, #1
   32560:	movne	ip, #0
   32564:	cmp	ip, #0
   32568:	bne	325cc <__flatcc_fb_build_schema@@Base+0x2a18>
   3256c:	cmp	r0, #1
   32570:	moveq	r1, r3
   32574:	cmp	sl, #0
   32578:	beq	32700 <__flatcc_fb_build_schema@@Base+0x2b4c>
   3257c:	ldr	r0, [fp, #412]	; 0x19c
   32580:	cmp	r0, #0
   32584:	beq	32700 <__flatcc_fb_build_schema@@Base+0x2b4c>
   32588:	rsb	r2, r2, #0
   3258c:	bl	287c8 <fb_scope_table_find@@Base>
   32590:	cmp	r0, #0
   32594:	beq	325c0 <__flatcc_fb_build_schema@@Base+0x2a0c>
   32598:	ldr	r3, [r6, #4]
   3259c:	ldr	r2, [r3, #4]
   325a0:	ldr	r1, [r3]
   325a4:	add	r0, r0, #4
   325a8:	bl	27878 <fb_symbol_table_find@@Base>
   325ac:	subs	r4, r0, #0
   325b0:	beq	325c0 <__flatcc_fb_build_schema@@Base+0x2a0c>
   325b4:	ldrh	r3, [r4, #8]
   325b8:	cmp	r3, #4
   325bc:	bls	326ec <__flatcc_fb_build_schema@@Base+0x2b38>
   325c0:	mov	r3, #0
   325c4:	str	r3, [fp, #404]	; 0x194
   325c8:	b	32708 <__flatcc_fb_build_schema@@Base+0x2b54>
   325cc:	mov	r7, #0
   325d0:	b	3265c <__flatcc_fb_build_schema@@Base+0x2aa8>
   325d4:	ldr	r1, [r4, #16]
   325d8:	ldr	r0, [sp, #16]
   325dc:	bl	27230 <ptr_set_find_item@@Base>
   325e0:	cmp	r0, #0
   325e4:	beq	32684 <__flatcc_fb_build_schema@@Base+0x2ad0>
   325e8:	str	r4, [fp, #404]	; 0x194
   325ec:	ldr	r3, [fp, #176]	; 0xb0
   325f0:	cmp	r3, #0
   325f4:	bne	32720 <__flatcc_fb_build_schema@@Base+0x2b6c>
   325f8:	ldrh	r3, [r4, #8]
   325fc:	cmp	r3, #0
   32600:	bne	32744 <__flatcc_fb_build_schema@@Base+0x2b90>
   32604:	mov	r3, #0
   32608:	str	r3, [fp, #400]	; 0x190
   3260c:	ldr	r0, [fp, #108]	; 0x6c
   32610:	clz	r3, r0
   32614:	lsr	r3, r3, #5
   32618:	str	r3, [fp, #120]	; 0x78
   3261c:	b	2ff58 <__flatcc_fb_build_schema@@Base+0x3a4>
   32620:	sub	r8, r8, #1
   32624:	add	r4, r4, #1
   32628:	cmp	r8, #1
   3262c:	ble	326c0 <__flatcc_fb_build_schema@@Base+0x2b0c>
   32630:	cmp	sl, #0
   32634:	beq	32620 <__flatcc_fb_build_schema@@Base+0x2a6c>
   32638:	ldr	r0, [fp, #412]	; 0x19c
   3263c:	cmp	r0, #0
   32640:	beq	32620 <__flatcc_fb_build_schema@@Base+0x2a6c>
   32644:	mov	r2, r4
   32648:	ldr	r1, [r5]
   3264c:	bl	287c8 <fb_scope_table_find@@Base>
   32650:	cmp	r0, #0
   32654:	beq	32620 <__flatcc_fb_build_schema@@Base+0x2a6c>
   32658:	mov	r5, r0
   3265c:	ldr	r3, [r6, #4]
   32660:	ldr	r2, [r3, #4]
   32664:	ldr	r1, [r3]
   32668:	add	r0, r5, #4
   3266c:	bl	27878 <fb_symbol_table_find@@Base>
   32670:	subs	r4, r0, #0
   32674:	beq	32684 <__flatcc_fb_build_schema@@Base+0x2ad0>
   32678:	ldrh	r3, [r4, #8]
   3267c:	cmp	r3, #4
   32680:	bls	325d4 <__flatcc_fb_build_schema@@Base+0x2a20>
   32684:	cmp	r5, #0
   32688:	beq	32700 <__flatcc_fb_build_schema@@Base+0x2b4c>
   3268c:	ldr	r3, [r5]
   32690:	cmp	r3, #0
   32694:	beq	325c0 <__flatcc_fb_build_schema@@Base+0x2a0c>
   32698:	mov	r4, #0
   3269c:	add	r4, r4, #1
   326a0:	ldr	r3, [r3]
   326a4:	cmp	r3, #0
   326a8:	bne	3269c <__flatcc_fb_build_schema@@Base+0x2ae8>
   326ac:	cmp	r4, #0
   326b0:	beq	32700 <__flatcc_fb_build_schema@@Base+0x2b4c>
   326b4:	mov	r8, r4
   326b8:	rsb	r4, r4, #1
   326bc:	b	32628 <__flatcc_fb_build_schema@@Base+0x2a74>
   326c0:	cmp	sl, #0
   326c4:	beq	32700 <__flatcc_fb_build_schema@@Base+0x2b4c>
   326c8:	ldr	r0, [fp, #412]	; 0x19c
   326cc:	cmp	r0, #0
   326d0:	beq	32700 <__flatcc_fb_build_schema@@Base+0x2b4c>
   326d4:	mov	r2, r7
   326d8:	mov	r1, r7
   326dc:	bl	287c8 <fb_scope_table_find@@Base>
   326e0:	subs	r5, r0, #0
   326e4:	bne	3265c <__flatcc_fb_build_schema@@Base+0x2aa8>
   326e8:	b	325c0 <__flatcc_fb_build_schema@@Base+0x2a0c>
   326ec:	ldr	r1, [r4, #16]
   326f0:	ldr	r0, [sp, #16]
   326f4:	bl	27230 <ptr_set_find_item@@Base>
   326f8:	cmp	r0, #0
   326fc:	bne	325e8 <__flatcc_fb_build_schema@@Base+0x2a34>
   32700:	mov	r3, #0
   32704:	str	r3, [fp, #404]	; 0x194
   32708:	mov	r3, #0
   3270c:	ldr	r2, [pc, #320]	; 32854 <__flatcc_fb_build_schema@@Base+0x2ca0>
   32710:	ldr	r1, [fp, #400]	; 0x190
   32714:	mov	r0, fp
   32718:	bl	2adb4 <error_ref_sym@@Base>
   3271c:	b	32604 <__flatcc_fb_build_schema@@Base+0x2a50>
   32720:	ldrh	r3, [r4, #8]
   32724:	cmp	r3, #1
   32728:	bls	32604 <__flatcc_fb_build_schema@@Base+0x2a50>
   3272c:	mov	r3, #0
   32730:	ldr	r2, [pc, #288]	; 32858 <__flatcc_fb_build_schema@@Base+0x2ca4>
   32734:	ldr	r1, [fp, #400]	; 0x190
   32738:	mov	r0, fp
   3273c:	bl	2adb4 <error_ref_sym@@Base>
   32740:	b	32604 <__flatcc_fb_build_schema@@Base+0x2a50>
   32744:	mov	r3, #0
   32748:	ldr	r2, [pc, #268]	; 3285c <__flatcc_fb_build_schema@@Base+0x2ca8>
   3274c:	ldr	r1, [fp, #400]	; 0x190
   32750:	mov	r0, fp
   32754:	bl	2adb4 <error_ref_sym@@Base>
   32758:	b	32604 <__flatcc_fb_build_schema@@Base+0x2a50>
   3275c:	ldr	r2, [r5, #4]
   32760:	ldr	r3, [r2]
   32764:	ldr	r2, [r2, #4]
   32768:	sub	ip, r2, #1
   3276c:	cmp	r2, #0
   32770:	ldreq	r1, [pc, #232]	; 32860 <__flatcc_fb_build_schema@@Base+0x2cac>
   32774:	beq	2fcc4 <__flatcc_fb_build_schema@@Base+0x110>
   32778:	ldr	r1, [pc, #224]	; 32860 <__flatcc_fb_build_schema@@Base+0x2cac>
   3277c:	b	2fca0 <__flatcc_fb_build_schema@@Base+0xec>
   32780:	ldr	r3, [sp, #32]
   32784:	ldr	r3, [r3, #4]
   32788:	ldr	r2, [r3, #4]
   3278c:	ldr	r1, [r3]
   32790:	add	r0, r4, #56	; 0x38
   32794:	bl	27878 <fb_symbol_table_find@@Base>
   32798:	subs	r3, r0, #0
   3279c:	beq	30a8c <__flatcc_fb_build_schema@@Base+0xed8>
   327a0:	add	ip, fp, #48	; 0x30
   327a4:	add	r3, r3, #48	; 0x30
   327a8:	ldm	r3, {r0, r1, r2, r3}
   327ac:	stm	ip, {r0, r1, r2, r3}
   327b0:	b	30900 <__flatcc_fb_build_schema@@Base+0xd4c>
   327b4:	cmp	r1, #0
   327b8:	streq	r6, [r5, #88]	; 0x58
   327bc:	streq	sl, [r5, #16]
   327c0:	beq	2fcd4 <__flatcc_fb_build_schema@@Base+0x120>
   327c4:	b	2fcc4 <__flatcc_fb_build_schema@@Base+0x110>
   327c8:	ldrh	r3, [fp, #72]	; 0x48
   327cc:	tst	r3, #1024	; 0x400
   327d0:	beq	3068c <__flatcc_fb_build_schema@@Base+0xad8>
   327d4:	ldr	r3, [fp, #16]
   327d8:	cmp	r3, #4
   327dc:	bne	30678 <__flatcc_fb_build_schema@@Base+0xac4>
   327e0:	b	306b8 <__flatcc_fb_build_schema@@Base+0xb04>
   327e4:	mov	r2, #0
   327e8:	mov	r3, #0
   327ec:	ldr	r1, [sp, #12]
   327f0:	strd	r2, [r1, #96]	; 0x60
   327f4:	mov	r3, #0
   327f8:	str	r3, [sp, #64]	; 0x40
   327fc:	str	r3, [sp, #20]
   32800:	b	31a80 <__flatcc_fb_build_schema@@Base+0x1ecc>
   32804:			; <UNDEFINED> instruction: 0x000546b0
   32808:	andeq	r4, r5, r4, ror #13
   3280c:	andeq	r4, r5, r0, lsl r6
   32810:	andeq	r4, r5, ip, lsl r7
   32814:	andeq	r3, r5, r8, asr #11
   32818:	andeq	r4, r5, r0, asr r7
   3281c:	andeq	r3, r5, r4, lsl #10
   32820:	andeq	r3, r5, r4, lsr #10
   32824:	andeq	r3, r5, r4, asr r5
   32828:	andeq	r3, r5, ip, lsr #3
   3282c:	andeq	r3, r5, ip, ror r5
   32830:	andeq	r3, r5, r4, lsr #11
   32834:	strdeq	r3, [r5], -r4
   32838:	andeq	r3, r5, r8, lsl r6
   3283c:	andeq	r3, r5, r4, asr #12
   32840:			; <UNDEFINED> instruction: 0x000532bc
   32844:	strdeq	r0, [r0], -r1
   32848:	ldrdeq	r3, [r5], -r0
   3284c:	andeq	r4, r5, r8, lsl #15
   32850:	muleq	r5, r0, r7
   32854:	andeq	r4, r5, r8, lsr #15
   32858:			; <UNDEFINED> instruction: 0x000547bc
   3285c:	andeq	r4, r5, r4, ror #15
   32860:	tsthi	ip, r5, asr #27
   32864:	push	{lr}		; (str lr, [sp, #-4]!)
   32868:	sub	sp, sp, #12
   3286c:	mov	ip, #0
   32870:	str	ip, [sp, #4]
   32874:	str	ip, [sp]
   32878:	bl	297c8 <__flatcc_error_report@@Base>
   3287c:	add	sp, sp, #12
   32880:	pop	{pc}		; (ldr pc, [sp], #4)

00032884 <__flatcc_fb_coerce_scalar_type@@Base>:
   32884:	ldrh	ip, [r3, #8]
   32888:	cmp	ip, #0
   3288c:	beq	33064 <__flatcc_fb_coerce_scalar_type@@Base+0x7e0>
   32890:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   32894:	vpush	{d8}
   32898:	cmp	ip, #4
   3289c:	beq	32934 <__flatcc_fb_coerce_scalar_type@@Base+0xb0>
   328a0:	cmp	ip, #1
   328a4:	beq	3306c <__flatcc_fb_coerce_scalar_type@@Base+0x7e8>
   328a8:	mov	r4, r3
   328ac:	mov	r6, r1
   328b0:	mov	r5, r0
   328b4:	subs	r3, r2, #5
   328b8:	movne	r3, #1
   328bc:	cmp	ip, #6
   328c0:	movne	r3, #0
   328c4:	cmp	r3, #0
   328c8:	beq	32964 <__flatcc_fb_coerce_scalar_type@@Base+0xe0>
   328cc:	ldr	r3, [r0, #144]	; 0x90
   328d0:	cmp	r3, #0
   328d4:	beq	32964 <__flatcc_fb_coerce_scalar_type@@Base+0xe0>
   328d8:	mov	r3, #5
   328dc:	strh	r3, [r4, #8]
   328e0:	ldrb	r0, [r4]
   328e4:	mov	r1, #0
   328e8:	strd	r0, [r4]
   328ec:	cmp	r1, #0
   328f0:	cmpeq	r0, #1
   328f4:	bhi	32950 <__flatcc_fb_coerce_scalar_type@@Base+0xcc>
   328f8:	sub	r2, r2, #1
   328fc:	cmp	r2, #10
   32900:	ldrls	pc, [pc, r2, lsl #2]
   32904:	b	33040 <__flatcc_fb_coerce_scalar_type@@Base+0x7bc>
   32908:	andeq	r3, r3, r8, lsl #1
   3290c:	ldrdeq	r2, [r3], -r4
   32910:	andeq	r2, r3, r4, asr #20
   32914:			; <UNDEFINED> instruction: 0x00032ab4
   32918:	andeq	r2, r3, r8, asr #27
   3291c:	andeq	r2, r3, ip, lsl fp
   32920:	andeq	r2, r3, r0, lsr #23
   32924:	andeq	r2, r3, r8, asr ip
   32928:	andeq	r2, r3, r0, lsl sp
   3292c:	andeq	r2, r3, r8, asr #28
   32930:	andeq	r2, r3, r0, asr #30
   32934:	ldrd	r4, [r3]
   32938:	cmp	r4, #0
   3293c:	sbcs	ip, r5, #0
   32940:	movge	ip, #5
   32944:	strhge	ip, [r3, #8]
   32948:	ldrh	ip, [r3, #8]
   3294c:	b	328a8 <__flatcc_fb_coerce_scalar_type@@Base+0x24>
   32950:	ldr	r3, [pc, #1848]	; 33090 <__flatcc_fb_coerce_scalar_type@@Base+0x80c>
   32954:	mov	r2, #52	; 0x34
   32958:	ldr	r1, [pc, #1844]	; 33094 <__flatcc_fb_coerce_scalar_type@@Base+0x810>
   3295c:	ldr	r0, [pc, #1844]	; 33098 <__flatcc_fb_coerce_scalar_type@@Base+0x814>
   32960:	bl	14038 <__assert_fail@plt>
   32964:	sub	r2, r2, #1
   32968:	cmp	r2, #10
   3296c:	ldrls	pc, [pc, r2, lsl #2]
   32970:	b	33040 <__flatcc_fb_coerce_scalar_type@@Base+0x7bc>
   32974:	andeq	r2, r3, r0, lsr #19
   32978:	ldrdeq	r2, [r3], -r4
   3297c:	andeq	r2, r3, r4, asr #20
   32980:			; <UNDEFINED> instruction: 0x00032ab4
   32984:	andeq	r2, r3, r8, asr #27
   32988:	andeq	r2, r3, ip, lsl fp
   3298c:	andeq	r2, r3, r0, lsr #23
   32990:	andeq	r2, r3, r8, asr ip
   32994:	andeq	r2, r3, r0, lsl sp
   32998:	andeq	r2, r3, r8, asr #28
   3299c:	andeq	r2, r3, r0, asr #30
   329a0:	ldrh	r3, [r4, #8]
   329a4:	cmp	r3, #5
   329a8:	moveq	r0, #0
   329ac:	beq	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   329b0:	mov	r3, #0
   329b4:	ldr	r2, [pc, #1760]	; 3309c <__flatcc_fb_coerce_scalar_type@@Base+0x818>
   329b8:	ldr	r1, [r6, #4]
   329bc:	mov	r0, r5
   329c0:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   329c4:	mov	r3, #1
   329c8:	strh	r3, [r4, #8]
   329cc:	mvn	r0, #0
   329d0:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   329d4:	ldrh	r3, [r4, #8]
   329d8:	cmp	r3, #5
   329dc:	bne	32a20 <__flatcc_fb_coerce_scalar_type@@Base+0x19c>
   329e0:	ldrd	r2, [r4]
   329e4:	mvn	r0, #0
   329e8:	mov	r1, #0
   329ec:	cmp	r3, r1
   329f0:	cmpeq	r2, r0
   329f4:	movls	r0, #0
   329f8:	bls	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   329fc:	mov	r3, #0
   32a00:	ldr	r2, [pc, #1688]	; 330a0 <__flatcc_fb_coerce_scalar_type@@Base+0x81c>
   32a04:	ldr	r1, [r6, #4]
   32a08:	mov	r0, r5
   32a0c:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32a10:	mov	r3, #1
   32a14:	strh	r3, [r4, #8]
   32a18:	mvn	r0, #0
   32a1c:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32a20:	mov	r3, #0
   32a24:	ldr	r2, [pc, #1656]	; 330a4 <__flatcc_fb_coerce_scalar_type@@Base+0x820>
   32a28:	ldr	r1, [r6, #4]
   32a2c:	mov	r0, r5
   32a30:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32a34:	mov	r3, #1
   32a38:	strh	r3, [r4, #8]
   32a3c:	mvn	r0, #0
   32a40:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32a44:	ldrh	r3, [r4, #8]
   32a48:	cmp	r3, #5
   32a4c:	bne	32a90 <__flatcc_fb_coerce_scalar_type@@Base+0x20c>
   32a50:	ldrd	r2, [r4]
   32a54:	ldr	r0, [pc, #1612]	; 330a8 <__flatcc_fb_coerce_scalar_type@@Base+0x824>
   32a58:	mov	r1, #0
   32a5c:	cmp	r3, r1
   32a60:	cmpeq	r2, r0
   32a64:	movls	r0, #0
   32a68:	bls	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32a6c:	mov	r3, #0
   32a70:	ldr	r2, [pc, #1588]	; 330ac <__flatcc_fb_coerce_scalar_type@@Base+0x828>
   32a74:	ldr	r1, [r6, #4]
   32a78:	mov	r0, r5
   32a7c:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32a80:	mov	r3, #1
   32a84:	strh	r3, [r4, #8]
   32a88:	mvn	r0, #0
   32a8c:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32a90:	mov	r3, #0
   32a94:	ldr	r2, [pc, #1556]	; 330b0 <__flatcc_fb_coerce_scalar_type@@Base+0x82c>
   32a98:	ldr	r1, [r6, #4]
   32a9c:	mov	r0, r5
   32aa0:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32aa4:	mov	r3, #1
   32aa8:	strh	r3, [r4, #8]
   32aac:	mvn	r0, #0
   32ab0:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32ab4:	ldrh	r3, [r4, #8]
   32ab8:	cmp	r3, #5
   32abc:	bne	32af8 <__flatcc_fb_coerce_scalar_type@@Base+0x274>
   32ac0:	ldrd	r2, [r4]
   32ac4:	cmp	r3, #0
   32ac8:	cmpeq	r2, #255	; 0xff
   32acc:	movls	r0, #0
   32ad0:	bls	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32ad4:	mov	r3, #0
   32ad8:	ldr	r2, [pc, #1492]	; 330b4 <__flatcc_fb_coerce_scalar_type@@Base+0x830>
   32adc:	ldr	r1, [r6, #4]
   32ae0:	mov	r0, r5
   32ae4:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32ae8:	mov	r3, #1
   32aec:	strh	r3, [r4, #8]
   32af0:	mvn	r0, #0
   32af4:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32af8:	mov	r3, #0
   32afc:	ldr	r2, [pc, #1460]	; 330b8 <__flatcc_fb_coerce_scalar_type@@Base+0x834>
   32b00:	ldr	r1, [r6, #4]
   32b04:	mov	r0, r5
   32b08:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32b0c:	mov	r3, #1
   32b10:	strh	r3, [r4, #8]
   32b14:	mvn	r0, #0
   32b18:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32b1c:	ldrh	r3, [r4, #8]
   32b20:	cmp	r3, #4
   32b24:	moveq	r0, #0
   32b28:	beq	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32b2c:	cmp	r3, #5
   32b30:	bne	32b7c <__flatcc_fb_coerce_scalar_type@@Base+0x2f8>
   32b34:	ldrd	r2, [r4]
   32b38:	cmp	r2, #0
   32b3c:	sbcs	r1, r3, #0
   32b40:	blt	32b58 <__flatcc_fb_coerce_scalar_type@@Base+0x2d4>
   32b44:	strd	r2, [r4]
   32b48:	mov	r3, #4
   32b4c:	strh	r3, [r4, #8]
   32b50:	mov	r0, #0
   32b54:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32b58:	mov	r3, #0
   32b5c:	ldr	r2, [pc, #1368]	; 330bc <__flatcc_fb_coerce_scalar_type@@Base+0x838>
   32b60:	ldr	r1, [r6, #4]
   32b64:	mov	r0, r5
   32b68:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32b6c:	mov	r3, #1
   32b70:	strh	r3, [r4, #8]
   32b74:	mvn	r0, #0
   32b78:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32b7c:	mov	r3, #0
   32b80:	ldr	r2, [pc, #1336]	; 330c0 <__flatcc_fb_coerce_scalar_type@@Base+0x83c>
   32b84:	ldr	r1, [r6, #4]
   32b88:	mov	r0, r5
   32b8c:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32b90:	mov	r3, #1
   32b94:	strh	r3, [r4, #8]
   32b98:	mvn	r0, #0
   32b9c:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32ba0:	ldrh	r3, [r4, #8]
   32ba4:	cmp	r3, #4
   32ba8:	beq	32bf4 <__flatcc_fb_coerce_scalar_type@@Base+0x370>
   32bac:	cmp	r3, #5
   32bb0:	bne	32c34 <__flatcc_fb_coerce_scalar_type@@Base+0x3b0>
   32bb4:	ldrd	r2, [r4]
   32bb8:	cmp	r2, #-2147483648	; 0x80000000
   32bbc:	sbcs	r3, r3, #0
   32bc0:	movlt	r3, #4
   32bc4:	strhlt	r3, [r4, #8]
   32bc8:	movlt	r0, #0
   32bcc:	blt	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32bd0:	mov	r3, #0
   32bd4:	ldr	r2, [pc, #1256]	; 330c4 <__flatcc_fb_coerce_scalar_type@@Base+0x840>
   32bd8:	ldr	r1, [r6, #4]
   32bdc:	mov	r0, r5
   32be0:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32be4:	mov	r3, #1
   32be8:	strh	r3, [r4, #8]
   32bec:	mvn	r0, #0
   32bf0:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32bf4:	ldrd	r2, [r4]
   32bf8:	mov	r0, #-2147483648	; 0x80000000
   32bfc:	mvn	r1, #0
   32c00:	cmp	r2, r0
   32c04:	sbcs	r3, r3, r1
   32c08:	movge	r0, #0
   32c0c:	bge	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32c10:	mov	r3, #0
   32c14:	ldr	r2, [pc, #1196]	; 330c8 <__flatcc_fb_coerce_scalar_type@@Base+0x844>
   32c18:	ldr	r1, [r6, #4]
   32c1c:	mov	r0, r5
   32c20:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32c24:	mov	r3, #1
   32c28:	strh	r3, [r4, #8]
   32c2c:	mvn	r0, #0
   32c30:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32c34:	mov	r3, #0
   32c38:	ldr	r2, [pc, #1164]	; 330cc <__flatcc_fb_coerce_scalar_type@@Base+0x848>
   32c3c:	ldr	r1, [r6, #4]
   32c40:	mov	r0, r5
   32c44:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32c48:	mov	r3, #1
   32c4c:	strh	r3, [r4, #8]
   32c50:	mvn	r0, #0
   32c54:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32c58:	ldrh	r3, [r4, #8]
   32c5c:	cmp	r3, #4
   32c60:	beq	32cac <__flatcc_fb_coerce_scalar_type@@Base+0x428>
   32c64:	cmp	r3, #5
   32c68:	bne	32cec <__flatcc_fb_coerce_scalar_type@@Base+0x468>
   32c6c:	ldrd	r2, [r4]
   32c70:	cmp	r2, #32768	; 0x8000
   32c74:	sbcs	r3, r3, #0
   32c78:	movlt	r3, #4
   32c7c:	strhlt	r3, [r4, #8]
   32c80:	movlt	r0, #0
   32c84:	blt	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32c88:	mov	r3, #0
   32c8c:	ldr	r2, [pc, #1084]	; 330d0 <__flatcc_fb_coerce_scalar_type@@Base+0x84c>
   32c90:	ldr	r1, [r6, #4]
   32c94:	mov	r0, r5
   32c98:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32c9c:	mov	r3, #1
   32ca0:	strh	r3, [r4, #8]
   32ca4:	mvn	r0, #0
   32ca8:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32cac:	ldrd	r2, [r4]
   32cb0:	ldr	r0, [pc, #1052]	; 330d4 <__flatcc_fb_coerce_scalar_type@@Base+0x850>
   32cb4:	mvn	r1, #0
   32cb8:	cmp	r2, r0
   32cbc:	sbcs	r3, r3, r1
   32cc0:	movge	r0, #0
   32cc4:	bge	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32cc8:	mov	r3, #0
   32ccc:	ldr	r2, [pc, #1028]	; 330d8 <__flatcc_fb_coerce_scalar_type@@Base+0x854>
   32cd0:	ldr	r1, [r6, #4]
   32cd4:	mov	r0, r5
   32cd8:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32cdc:	mov	r3, #1
   32ce0:	strh	r3, [r4, #8]
   32ce4:	mvn	r0, #0
   32ce8:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32cec:	mov	r3, #0
   32cf0:	ldr	r2, [pc, #996]	; 330dc <__flatcc_fb_coerce_scalar_type@@Base+0x858>
   32cf4:	ldr	r1, [r6, #4]
   32cf8:	mov	r0, r5
   32cfc:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32d00:	mov	r3, #1
   32d04:	strh	r3, [r4, #8]
   32d08:	mvn	r0, #0
   32d0c:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32d10:	ldrh	r3, [r4, #8]
   32d14:	cmp	r3, #4
   32d18:	beq	32d64 <__flatcc_fb_coerce_scalar_type@@Base+0x4e0>
   32d1c:	cmp	r3, #5
   32d20:	bne	32da4 <__flatcc_fb_coerce_scalar_type@@Base+0x520>
   32d24:	ldrd	r2, [r4]
   32d28:	cmp	r2, #128	; 0x80
   32d2c:	sbcs	r3, r3, #0
   32d30:	movlt	r3, #4
   32d34:	strhlt	r3, [r4, #8]
   32d38:	movlt	r0, #0
   32d3c:	blt	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32d40:	mov	r3, #0
   32d44:	ldr	r2, [pc, #916]	; 330e0 <__flatcc_fb_coerce_scalar_type@@Base+0x85c>
   32d48:	ldr	r1, [r6, #4]
   32d4c:	mov	r0, r5
   32d50:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32d54:	mov	r3, #1
   32d58:	strh	r3, [r4, #8]
   32d5c:	mvn	r0, #0
   32d60:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32d64:	ldrd	r2, [r4]
   32d68:	mvn	r0, #127	; 0x7f
   32d6c:	mvn	r1, #0
   32d70:	cmp	r2, r0
   32d74:	sbcs	r3, r3, r1
   32d78:	movge	r0, #0
   32d7c:	bge	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32d80:	mov	r3, #0
   32d84:	ldr	r2, [pc, #856]	; 330e4 <__flatcc_fb_coerce_scalar_type@@Base+0x860>
   32d88:	ldr	r1, [r6, #4]
   32d8c:	mov	r0, r5
   32d90:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32d94:	mov	r3, #1
   32d98:	strh	r3, [r4, #8]
   32d9c:	mvn	r0, #0
   32da0:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32da4:	mov	r3, #0
   32da8:	ldr	r2, [pc, #824]	; 330e8 <__flatcc_fb_coerce_scalar_type@@Base+0x864>
   32dac:	ldr	r1, [r6, #4]
   32db0:	mov	r0, r5
   32db4:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32db8:	mov	r3, #1
   32dbc:	strh	r3, [r4, #8]
   32dc0:	mvn	r0, #0
   32dc4:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32dc8:	ldrh	r3, [r4, #8]
   32dcc:	cmp	r3, #5
   32dd0:	beq	32e04 <__flatcc_fb_coerce_scalar_type@@Base+0x580>
   32dd4:	cmp	r3, #6
   32dd8:	moveq	r0, #0
   32ddc:	beq	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32de0:	mov	r3, #0
   32de4:	ldr	r2, [pc, #768]	; 330ec <__flatcc_fb_coerce_scalar_type@@Base+0x868>
   32de8:	ldr	r1, [r6, #4]
   32dec:	mov	r0, r5
   32df0:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32df4:	mov	r3, #1
   32df8:	strh	r3, [r4, #8]
   32dfc:	mvn	r0, #0
   32e00:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32e04:	ldr	r3, [r5, #144]	; 0x90
   32e08:	cmp	r3, #0
   32e0c:	beq	32de0 <__flatcc_fb_coerce_scalar_type@@Base+0x55c>
   32e10:	ldrd	r2, [r4]
   32e14:	cmp	r3, #0
   32e18:	cmpeq	r2, #1
   32e1c:	movls	r0, #0
   32e20:	bls	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32e24:	mov	r3, #0
   32e28:	ldr	r2, [pc, #704]	; 330f0 <__flatcc_fb_coerce_scalar_type@@Base+0x86c>
   32e2c:	ldr	r1, [r6, #4]
   32e30:	mov	r0, r5
   32e34:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32e38:	mov	r3, #1
   32e3c:	strh	r3, [r4, #8]
   32e40:	mvn	r0, #0
   32e44:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32e48:	ldrh	r3, [r4, #8]
   32e4c:	cmp	r3, #4
   32e50:	beq	32e88 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   32e54:	cmp	r3, #5
   32e58:	beq	32ee4 <__flatcc_fb_coerce_scalar_type@@Base+0x660>
   32e5c:	cmp	r3, #3
   32e60:	beq	33078 <__flatcc_fb_coerce_scalar_type@@Base+0x7f4>
   32e64:	mov	r3, #0
   32e68:	ldr	r2, [pc, #644]	; 330f4 <__flatcc_fb_coerce_scalar_type@@Base+0x870>
   32e6c:	ldr	r1, [r6, #4]
   32e70:	mov	r0, r5
   32e74:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32e78:	mov	r3, #1
   32e7c:	strh	r3, [r4, #8]
   32e80:	mvn	r0, #0
   32e84:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32e88:	ldrd	r8, [r4]
   32e8c:	mov	r0, r8
   32e90:	mov	r1, r9
   32e94:	bl	39e64 <fb_value_set_visit@@Base+0x364>
   32e98:	mov	sl, r0
   32e9c:	mov	fp, r1
   32ea0:	bl	3a18c <fb_value_set_visit@@Base+0x68c>
   32ea4:	cmp	r9, r1
   32ea8:	cmpeq	r8, r0
   32eac:	strdeq	sl, [r4]
   32eb0:	moveq	r3, #3
   32eb4:	strheq	r3, [r4, #8]
   32eb8:	moveq	r0, #0
   32ebc:	beq	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32ec0:	mov	r3, #0
   32ec4:	ldr	r2, [pc, #556]	; 330f8 <__flatcc_fb_coerce_scalar_type@@Base+0x874>
   32ec8:	ldr	r1, [r6, #4]
   32ecc:	mov	r0, r5
   32ed0:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32ed4:	mov	r3, #1
   32ed8:	strh	r3, [r4, #8]
   32edc:	mvn	r0, #0
   32ee0:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32ee4:	ldrd	r8, [r4]
   32ee8:	mov	r0, r8
   32eec:	mov	r1, r9
   32ef0:	bl	39e50 <fb_value_set_visit@@Base+0x350>
   32ef4:	mov	sl, r0
   32ef8:	mov	fp, r1
   32efc:	bl	3a200 <fb_value_set_visit@@Base+0x700>
   32f00:	cmp	r9, r1
   32f04:	cmpeq	r8, r0
   32f08:	strdeq	sl, [r4]
   32f0c:	moveq	r3, #3
   32f10:	strheq	r3, [r4, #8]
   32f14:	moveq	r0, #0
   32f18:	beq	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32f1c:	mov	r3, #0
   32f20:	ldr	r2, [pc, #464]	; 330f8 <__flatcc_fb_coerce_scalar_type@@Base+0x874>
   32f24:	ldr	r1, [r6, #4]
   32f28:	mov	r0, r5
   32f2c:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32f30:	mov	r3, #1
   32f34:	strh	r3, [r4, #8]
   32f38:	mvn	r0, #0
   32f3c:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32f40:	ldrh	r3, [r4, #8]
   32f44:	cmp	r3, #4
   32f48:	beq	32f80 <__flatcc_fb_coerce_scalar_type@@Base+0x6fc>
   32f4c:	cmp	r3, #5
   32f50:	beq	32fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x75c>
   32f54:	cmp	r3, #3
   32f58:	beq	33080 <__flatcc_fb_coerce_scalar_type@@Base+0x7fc>
   32f5c:	mov	r3, #0
   32f60:	ldr	r2, [pc, #404]	; 330fc <__flatcc_fb_coerce_scalar_type@@Base+0x878>
   32f64:	ldr	r1, [r6, #4]
   32f68:	mov	r0, r5
   32f6c:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32f70:	mov	r3, #1
   32f74:	strh	r3, [r4, #8]
   32f78:	mvn	r0, #0
   32f7c:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32f80:	ldrd	r8, [r4]
   32f84:	mov	r0, r8
   32f88:	mov	r1, r9
   32f8c:	bl	3a098 <fb_value_set_visit@@Base+0x598>
   32f90:	vmov	s16, r0
   32f94:	bl	3a160 <fb_value_set_visit@@Base+0x660>
   32f98:	cmp	r9, r1
   32f9c:	cmpeq	r8, r0
   32fa0:	bne	32fbc <__flatcc_fb_coerce_scalar_type@@Base+0x738>
   32fa4:	vcvt.f64.f32	d8, s16
   32fa8:	vstr	d8, [r4]
   32fac:	mov	r3, #3
   32fb0:	strh	r3, [r4, #8]
   32fb4:	mov	r0, #0
   32fb8:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32fbc:	mov	r3, #0
   32fc0:	ldr	r2, [pc, #312]	; 33100 <__flatcc_fb_coerce_scalar_type@@Base+0x87c>
   32fc4:	ldr	r1, [r6, #4]
   32fc8:	mov	r0, r5
   32fcc:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   32fd0:	mov	r3, #1
   32fd4:	strh	r3, [r4, #8]
   32fd8:	mvn	r0, #0
   32fdc:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   32fe0:	ldrd	r8, [r4]
   32fe4:	mov	r0, r8
   32fe8:	mov	r1, r9
   32fec:	bl	3a088 <fb_value_set_visit@@Base+0x588>
   32ff0:	vmov	s16, r0
   32ff4:	bl	3a1b8 <fb_value_set_visit@@Base+0x6b8>
   32ff8:	cmp	r9, r1
   32ffc:	cmpeq	r8, r0
   33000:	bne	3301c <__flatcc_fb_coerce_scalar_type@@Base+0x798>
   33004:	vcvt.f64.f32	d8, s16
   33008:	vstr	d8, [r4]
   3300c:	mov	r3, #3
   33010:	strh	r3, [r4, #8]
   33014:	mov	r0, #0
   33018:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   3301c:	mov	r3, #0
   33020:	ldr	r2, [pc, #216]	; 33100 <__flatcc_fb_coerce_scalar_type@@Base+0x87c>
   33024:	ldr	r1, [r6, #4]
   33028:	mov	r0, r5
   3302c:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33030:	mov	r3, #1
   33034:	strh	r3, [r4, #8]
   33038:	mvn	r0, #0
   3303c:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33040:	mov	r3, #0
   33044:	ldr	r2, [pc, #184]	; 33104 <__flatcc_fb_coerce_scalar_type@@Base+0x880>
   33048:	ldr	r1, [r6, #4]
   3304c:	mov	r0, r5
   33050:	bl	32864 <__flatcc_fb_build_schema@@Base+0x2cb0>
   33054:	mov	r3, #1
   33058:	strh	r3, [r4, #8]
   3305c:	mvn	r0, #0
   33060:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33064:	mov	r0, #0
   33068:	bx	lr
   3306c:	mov	r0, #0
   33070:	vpop	{d8}
   33074:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   33078:	mov	r0, #0
   3307c:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33080:	mov	r0, #0
   33084:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33088:	mov	r0, #0
   3308c:	b	33070 <__flatcc_fb_coerce_scalar_type@@Base+0x7ec>
   33090:	andeq	r4, r5, r8, lsr #17
   33094:	andeq	r4, r5, r8, asr #17
   33098:	andeq	r4, r5, r0, lsl r9
   3309c:	andeq	r4, r5, r0, lsr r9
   330a0:	muleq	r5, ip, r9
   330a4:	andeq	r4, r5, r4, ror #18
   330a8:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   330ac:	strdeq	r4, [r5], -r8
   330b0:			; <UNDEFINED> instruction: 0x000549bc
   330b4:	andeq	r4, r5, r0, asr sl
   330b8:	andeq	r4, r5, r8, lsl sl
   330bc:	andeq	r4, r5, r0, ror sl
   330c0:	muleq	r5, r0, sl
   330c4:	ldrdeq	r4, [r5], -r8
   330c8:			; <UNDEFINED> instruction: 0x00054abc
   330cc:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   330d0:	andeq	r4, r5, r4, asr #22
   330d4:			; <UNDEFINED> instruction: 0xffff8000
   330d8:	andeq	r4, r5, r4, lsr #22
   330dc:	andeq	r4, r5, r4, ror #22
   330e0:			; <UNDEFINED> instruction: 0x00054bb0
   330e4:	muleq	r5, r4, fp
   330e8:	andeq	r4, r5, ip, asr #23
   330ec:	andeq	r4, r5, ip, lsr ip
   330f0:	strdeq	r4, [r5], -ip
   330f4:	andeq	r4, r5, r4, lsr #25
   330f8:	andeq	r4, r5, r4, ror ip
   330fc:	andeq	r4, r5, r0, lsl sp
   33100:	andeq	r4, r5, r0, ror #25
   33104:	andeq	r4, r5, r8, asr #26
   33108:	push	{r4, r5, r6, lr}
   3310c:	sub	sp, sp, #8
   33110:	mov	r4, r0
   33114:	mov	r5, r2
   33118:	ldr	r2, [r0, #28]
   3311c:	mov	r3, #1
   33120:	str	r3, [sp]
   33124:	ldr	r6, [r0, #48]	; 0x30
   33128:	add	r2, r1, r2
   3312c:	add	r1, r0, #60	; 0x3c
   33130:	ldr	r0, [r0, #40]	; 0x28
   33134:	blx	r6
   33138:	cmp	r0, #0
   3313c:	bne	33174 <__flatcc_fb_coerce_scalar_type@@Base+0x8f0>
   33140:	ldr	r1, [r4, #28]
   33144:	ldr	r2, [r4, #60]	; 0x3c
   33148:	add	r2, r2, r1
   3314c:	str	r2, [r4, #16]
   33150:	ldr	r3, [r4, #64]	; 0x40
   33154:	sub	r3, r3, r1
   33158:	cmp	r3, r5
   3315c:	movcs	r3, r5
   33160:	str	r3, [r4, #24]
   33164:	ldr	r3, [r4, #32]
   33168:	str	r5, [r3, #4]
   3316c:	add	sp, sp, #8
   33170:	pop	{r4, r5, r6, pc}
   33174:	mvn	r0, #0
   33178:	b	3316c <__flatcc_fb_coerce_scalar_type@@Base+0x8e8>

0003317c <flatcc_builder_default_alloc@@Base>:
   3317c:	push	{r4, r5, r6, r7, r8, lr}
   33180:	mov	r5, r1
   33184:	cmp	r2, #0
   33188:	bne	331ac <flatcc_builder_default_alloc@@Base+0x30>
   3318c:	ldr	r0, [r1]
   33190:	cmp	r0, #0
   33194:	beq	33278 <flatcc_builder_default_alloc@@Base+0xfc>
   33198:	bl	13ed0 <free@plt>
   3319c:	mov	r0, #0
   331a0:	str	r0, [r5]
   331a4:	str	r0, [r5, #4]
   331a8:	pop	{r4, r5, r6, r7, r8, pc}
   331ac:	mov	r6, r3
   331b0:	ldr	r3, [sp, #24]
   331b4:	sub	r3, r3, #1
   331b8:	cmp	r3, #6
   331bc:	ldrls	pc, [pc, r3, lsl #2]
   331c0:	b	33254 <flatcc_builder_default_alloc@@Base+0xd8>
   331c4:	andeq	r3, r3, r8, ror #3
   331c8:	andeq	r3, r3, r4, asr r2
   331cc:	andeq	r3, r3, r4, asr r2
   331d0:	andeq	r3, r3, r0, ror #3
   331d4:	andeq	r3, r3, ip, asr r2
   331d8:	andeq	r3, r3, r4, asr r2
   331dc:	andeq	r3, r3, ip, asr #4
   331e0:	mov	r4, #288	; 0x120
   331e4:	b	331ec <flatcc_builder_default_alloc@@Base+0x70>
   331e8:	mov	r4, #256	; 0x100
   331ec:	cmp	r4, r2
   331f0:	bcs	33200 <flatcc_builder_default_alloc@@Base+0x84>
   331f4:	lsl	r4, r4, #1
   331f8:	cmp	r2, r4
   331fc:	bhi	331f4 <flatcc_builder_default_alloc@@Base+0x78>
   33200:	ldr	r3, [r5, #4]
   33204:	cmp	r2, r3
   33208:	bhi	33214 <flatcc_builder_default_alloc@@Base+0x98>
   3320c:	cmp	r4, r3, lsr #1
   33210:	bls	33280 <flatcc_builder_default_alloc@@Base+0x104>
   33214:	mov	r1, r4
   33218:	ldr	r0, [r5]
   3321c:	bl	13f0c <realloc@plt>
   33220:	subs	r7, r0, #0
   33224:	beq	33288 <flatcc_builder_default_alloc@@Base+0x10c>
   33228:	cmp	r6, #0
   3322c:	beq	3323c <flatcc_builder_default_alloc@@Base+0xc0>
   33230:	ldr	r0, [r5, #4]
   33234:	cmp	r0, r4
   33238:	bcc	33264 <flatcc_builder_default_alloc@@Base+0xe8>
   3323c:	str	r7, [r5]
   33240:	str	r4, [r5, #4]
   33244:	mov	r0, #0
   33248:	pop	{r4, r5, r6, r7, r8, pc}
   3324c:	mov	r4, #64	; 0x40
   33250:	b	331ec <flatcc_builder_default_alloc@@Base+0x70>
   33254:	mov	r4, #32
   33258:	b	331ec <flatcc_builder_default_alloc@@Base+0x70>
   3325c:	mov	r4, r2
   33260:	b	33200 <flatcc_builder_default_alloc@@Base+0x84>
   33264:	sub	r2, r4, r0
   33268:	mov	r1, #0
   3326c:	add	r0, r7, r0
   33270:	bl	13f9c <memset@plt>
   33274:	b	3323c <flatcc_builder_default_alloc@@Base+0xc0>
   33278:	mov	r0, #0
   3327c:	pop	{r4, r5, r6, r7, r8, pc}
   33280:	mov	r0, #0
   33284:	pop	{r4, r5, r6, r7, r8, pc}
   33288:	mvn	r0, #0
   3328c:	pop	{r4, r5, r6, r7, r8, pc}
   33290:	cmp	r2, #0
   33294:	bne	332a4 <flatcc_builder_default_alloc@@Base+0x128>
   33298:	ldrh	r2, [r0, #132]	; 0x84
   3329c:	cmp	r2, #0
   332a0:	moveq	r2, #1
   332a4:	ldrh	ip, [r1]
   332a8:	cmp	ip, #3
   332ac:	movls	ip, #4
   332b0:	strhls	ip, [r1]
   332b4:	ldrh	ip, [r1]
   332b8:	cmp	ip, r2
   332bc:	strhcc	r2, [r1]
   332c0:	cmp	r3, #0
   332c4:	bne	33380 <flatcc_builder_default_alloc@@Base+0x204>
   332c8:	push	{r4, r5, lr}
   332cc:	sub	sp, sp, #84	; 0x54
   332d0:	ldr	r4, [r0, #140]	; 0x8c
   332d4:	sub	r2, r2, #1
   332d8:	ands	r2, r2, r4
   332dc:	bne	332ec <flatcc_builder_default_alloc@@Base+0x170>
   332e0:	mov	r0, #0
   332e4:	add	sp, sp, #84	; 0x54
   332e8:	pop	{r4, r5, pc}
   332ec:	str	r2, [sp, #8]
   332f0:	ldr	r3, [pc, #144]	; 33388 <flatcc_builder_default_alloc@@Base+0x20c>
   332f4:	str	r3, [sp, #16]
   332f8:	str	r2, [sp, #20]
   332fc:	mov	r3, #1
   33300:	str	r3, [sp, #12]
   33304:	add	r3, r4, r2
   33308:	str	r3, [r0, #140]	; 0x8c
   3330c:	cmp	r4, r3
   33310:	bgt	33358 <flatcc_builder_default_alloc@@Base+0x1dc>
   33314:	ldr	ip, [r0, #36]	; 0x24
   33318:	str	r2, [sp]
   3331c:	ldr	r5, [r0, #44]	; 0x2c
   33320:	mov	r3, r4
   33324:	mov	r2, #1
   33328:	add	r1, sp, #16
   3332c:	mov	r0, ip
   33330:	blx	r5
   33334:	cmp	r0, #0
   33338:	bne	3336c <flatcc_builder_default_alloc@@Base+0x1f0>
   3333c:	cmn	r4, #1
   33340:	bne	332e0 <flatcc_builder_default_alloc@@Base+0x164>
   33344:	ldr	r3, [pc, #64]	; 3338c <flatcc_builder_default_alloc@@Base+0x210>
   33348:	ldr	r2, [pc, #64]	; 33390 <flatcc_builder_default_alloc@@Base+0x214>
   3334c:	ldr	r1, [pc, #64]	; 33394 <flatcc_builder_default_alloc@@Base+0x218>
   33350:	ldr	r0, [pc, #64]	; 33398 <flatcc_builder_default_alloc@@Base+0x21c>
   33354:	bl	14038 <__assert_fail@plt>
   33358:	ldr	r3, [pc, #60]	; 3339c <flatcc_builder_default_alloc@@Base+0x220>
   3335c:	ldr	r2, [pc, #60]	; 333a0 <flatcc_builder_default_alloc@@Base+0x224>
   33360:	ldr	r1, [pc, #44]	; 33394 <flatcc_builder_default_alloc@@Base+0x218>
   33364:	ldr	r0, [pc, #44]	; 33398 <flatcc_builder_default_alloc@@Base+0x21c>
   33368:	bl	14038 <__assert_fail@plt>
   3336c:	ldr	r3, [pc, #40]	; 3339c <flatcc_builder_default_alloc@@Base+0x220>
   33370:	ldr	r2, [pc, #44]	; 333a4 <flatcc_builder_default_alloc@@Base+0x228>
   33374:	ldr	r1, [pc, #24]	; 33394 <flatcc_builder_default_alloc@@Base+0x218>
   33378:	ldr	r0, [pc, #24]	; 33398 <flatcc_builder_default_alloc@@Base+0x21c>
   3337c:	bl	14038 <__assert_fail@plt>
   33380:	mov	r0, #0
   33384:	bx	lr
   33388:	andeq	r4, r5, r0, ror #26
   3338c:	andeq	r4, r5, ip, ror #30
   33390:			; <UNDEFINED> instruction: 0x000002be
   33394:			; <UNDEFINED> instruction: 0x000554b0
   33398:	andeq	r3, r4, r0, ror lr
   3339c:	andeq	r4, r5, r0, ror #30
   333a0:	andeq	r0, r0, r1, lsr #5
   333a4:	andeq	r0, r0, r5, lsr #5
   333a8:	push	{r4, r5, r6, r7, lr}
   333ac:	sub	sp, sp, #12
   333b0:	mov	r4, r0
   333b4:	mov	r6, r1
   333b8:	ldr	r3, [r0, #156]	; 0x9c
   333bc:	add	r2, r3, #1
   333c0:	str	r2, [r0, #156]	; 0x9c
   333c4:	ldr	r1, [r0, #160]	; 0xa0
   333c8:	cmp	r2, r1
   333cc:	ble	3346c <flatcc_builder_default_alloc@@Base+0x2f0>
   333d0:	ldr	r1, [r0, #176]	; 0xb0
   333d4:	cmp	r2, r1
   333d8:	cmpgt	r1, #0
   333dc:	bgt	334d4 <flatcc_builder_default_alloc@@Base+0x358>
   333e0:	add	r3, r3, r3, lsl #3
   333e4:	lsl	r5, r3, #2
   333e8:	add	r2, r5, #36	; 0x24
   333ec:	ldr	r3, [r0, #88]	; 0x58
   333f0:	cmp	r2, r3
   333f4:	bhi	33434 <flatcc_builder_default_alloc@@Base+0x2b8>
   333f8:	ldr	r3, [r4, #84]	; 0x54
   333fc:	add	r5, r3, r5
   33400:	str	r5, [r4, #32]
   33404:	cmp	r5, #0
   33408:	beq	334dc <flatcc_builder_default_alloc@@Base+0x360>
   3340c:	ldr	r3, [r4, #88]	; 0x58
   33410:	ldr	r2, [pc, #204]	; 334e4 <flatcc_builder_default_alloc@@Base+0x368>
   33414:	umull	r2, r3, r2, r3
   33418:	lsr	r3, r3, #3
   3341c:	str	r3, [r4, #160]	; 0xa0
   33420:	ldr	r2, [r4, #176]	; 0xb0
   33424:	cmp	r2, #0
   33428:	cmpgt	r3, r2
   3342c:	strgt	r2, [r4, #160]	; 0xa0
   33430:	b	33478 <flatcc_builder_default_alloc@@Base+0x2fc>
   33434:	mov	r3, #4
   33438:	str	r3, [sp]
   3343c:	ldr	r7, [r0, #48]	; 0x30
   33440:	mov	r3, #0
   33444:	add	r1, r0, #84	; 0x54
   33448:	ldr	r0, [r0, #40]	; 0x28
   3344c:	blx	r7
   33450:	cmp	r0, #0
   33454:	beq	333f8 <flatcc_builder_default_alloc@@Base+0x27c>
   33458:	ldr	r3, [pc, #136]	; 334e8 <flatcc_builder_default_alloc@@Base+0x36c>
   3345c:	mov	r2, #308	; 0x134
   33460:	ldr	r1, [pc, #132]	; 334ec <flatcc_builder_default_alloc@@Base+0x370>
   33464:	ldr	r0, [pc, #132]	; 334f0 <flatcc_builder_default_alloc@@Base+0x374>
   33468:	bl	14038 <__assert_fail@plt>
   3346c:	ldr	r3, [r0, #32]
   33470:	add	r3, r3, #36	; 0x24
   33474:	str	r3, [r0, #32]
   33478:	ldr	r3, [r4, #32]
   3347c:	ldr	r2, [r4, #20]
   33480:	str	r2, [r3, #8]
   33484:	ldr	r3, [r4, #32]
   33488:	ldrh	r2, [r4, #130]	; 0x82
   3348c:	strh	r2, [r3, #12]
   33490:	strh	r6, [r4, #130]	; 0x82
   33494:	ldr	r3, [r4, #32]
   33498:	ldr	r2, [r4, #28]
   3349c:	str	r2, [r3]
   334a0:	ldr	r3, [r4, #32]
   334a4:	mvn	r2, #3
   334a8:	str	r2, [r3, #4]
   334ac:	ldr	r3, [r4, #28]
   334b0:	ldr	r2, [r4, #20]
   334b4:	add	r3, r3, r2
   334b8:	add	r3, r3, #7
   334bc:	bic	r3, r3, #7
   334c0:	str	r3, [r4, #28]
   334c4:	mov	r0, #0
   334c8:	str	r0, [r4, #20]
   334cc:	add	sp, sp, #12
   334d0:	pop	{r4, r5, r6, r7, pc}
   334d4:	mvn	r0, #0
   334d8:	b	334cc <flatcc_builder_default_alloc@@Base+0x350>
   334dc:	mvn	r0, #0
   334e0:	b	334cc <flatcc_builder_default_alloc@@Base+0x350>
   334e4:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   334e8:	andeq	r4, r5, ip, ror pc
   334ec:			; <UNDEFINED> instruction: 0x000554b0
   334f0:	andeq	r3, r4, r0, ror lr
   334f4:	push	{r4, r5, r6, r7, r8, lr}
   334f8:	sub	sp, sp, #88	; 0x58
   334fc:	cmn	r2, #-1073741823	; 0xc0000001
   33500:	bhi	336b4 <flatcc_builder_default_alloc@@Base+0x538>
   33504:	ldrh	ip, [r0, #128]	; 0x80
   33508:	cmp	ip, #3
   3350c:	movls	ip, #4
   33510:	strhls	ip, [r0, #128]	; 0x80
   33514:	str	r2, [sp, #84]	; 0x54
   33518:	ldr	r7, [r0, #136]	; 0x88
   3351c:	and	lr, r7, #3
   33520:	mov	ip, #4
   33524:	str	ip, [sp, #12]
   33528:	add	r4, sp, #84	; 0x54
   3352c:	str	r4, [sp, #20]
   33530:	str	ip, [sp, #24]
   33534:	mov	ip, #1
   33538:	str	ip, [sp, #16]
   3353c:	lsls	r5, r2, #2
   33540:	beq	3355c <flatcc_builder_default_alloc@@Base+0x3e0>
   33544:	add	ip, r5, #4
   33548:	str	ip, [sp, #12]
   3354c:	str	r1, [sp, #28]
   33550:	str	r5, [sp, #32]
   33554:	mov	ip, #2
   33558:	str	ip, [sp, #16]
   3355c:	cmp	lr, #0
   33560:	beq	33590 <flatcc_builder_default_alloc@@Base+0x414>
   33564:	ldr	ip, [sp, #12]
   33568:	add	ip, ip, lr
   3356c:	str	ip, [sp, #12]
   33570:	ldr	ip, [sp, #16]
   33574:	add	ip, ip, #1
   33578:	add	r4, sp, #88	; 0x58
   3357c:	add	r4, r4, ip, lsl #3
   33580:	ldr	r6, [pc, #308]	; 336bc <flatcc_builder_default_alloc@@Base+0x540>
   33584:	str	r6, [r4, #-76]	; 0xffffffb4
   33588:	str	lr, [r4, #-72]	; 0xffffffb8
   3358c:	str	ip, [sp, #16]
   33590:	mov	r6, r0
   33594:	ldr	r8, [sp, #12]
   33598:	sub	r7, r7, r8
   3359c:	cmp	r2, #0
   335a0:	beq	33648 <flatcc_builder_default_alloc@@Base+0x4cc>
   335a4:	mov	r2, r1
   335a8:	mov	ip, r3
   335ac:	add	r5, r1, r5
   335b0:	mvn	r1, #3
   335b4:	b	335e0 <flatcc_builder_default_alloc@@Base+0x464>
   335b8:	cmp	r3, #0
   335bc:	beq	33634 <flatcc_builder_default_alloc@@Base+0x4b8>
   335c0:	ldrb	r0, [ip]
   335c4:	cmp	r0, #0
   335c8:	bne	33620 <flatcc_builder_default_alloc@@Base+0x4a4>
   335cc:	add	r2, r2, #4
   335d0:	add	ip, ip, #1
   335d4:	sub	r1, r1, #4
   335d8:	cmp	r2, r5
   335dc:	beq	33648 <flatcc_builder_default_alloc@@Base+0x4cc>
   335e0:	ldr	lr, [r2]
   335e4:	cmp	lr, #0
   335e8:	beq	335b8 <flatcc_builder_default_alloc@@Base+0x43c>
   335ec:	sub	r4, r1, r7
   335f0:	add	lr, r4, lr
   335f4:	str	lr, [r2]
   335f8:	cmp	r3, #0
   335fc:	beq	335cc <flatcc_builder_default_alloc@@Base+0x450>
   33600:	ldrb	r0, [ip]
   33604:	cmp	r0, #0
   33608:	bne	335cc <flatcc_builder_default_alloc@@Base+0x450>
   3360c:	ldr	r3, [pc, #172]	; 336c0 <flatcc_builder_default_alloc@@Base+0x544>
   33610:	ldr	r2, [pc, #172]	; 336c4 <flatcc_builder_default_alloc@@Base+0x548>
   33614:	ldr	r1, [pc, #172]	; 336c8 <flatcc_builder_default_alloc@@Base+0x54c>
   33618:	ldr	r0, [pc, #172]	; 336cc <flatcc_builder_default_alloc@@Base+0x550>
   3361c:	bl	14038 <__assert_fail@plt>
   33620:	ldr	r3, [pc, #152]	; 336c0 <flatcc_builder_default_alloc@@Base+0x544>
   33624:	ldr	r2, [pc, #164]	; 336d0 <flatcc_builder_default_alloc@@Base+0x554>
   33628:	ldr	r1, [pc, #152]	; 336c8 <flatcc_builder_default_alloc@@Base+0x54c>
   3362c:	ldr	r0, [pc, #160]	; 336d4 <flatcc_builder_default_alloc@@Base+0x558>
   33630:	bl	14038 <__assert_fail@plt>
   33634:	ldr	r3, [pc, #132]	; 336c0 <flatcc_builder_default_alloc@@Base+0x544>
   33638:	ldr	r2, [pc, #152]	; 336d8 <flatcc_builder_default_alloc@@Base+0x55c>
   3363c:	ldr	r1, [pc, #132]	; 336c8 <flatcc_builder_default_alloc@@Base+0x54c>
   33640:	ldr	r0, [pc, #148]	; 336dc <flatcc_builder_default_alloc@@Base+0x560>
   33644:	bl	14038 <__assert_fail@plt>
   33648:	ldr	r3, [r6, #136]	; 0x88
   3364c:	sub	r4, r3, r8
   33650:	cmp	r3, r4
   33654:	ble	3368c <flatcc_builder_default_alloc@@Base+0x510>
   33658:	str	r8, [sp]
   3365c:	ldr	r5, [r6, #44]	; 0x2c
   33660:	mov	r3, r4
   33664:	ldr	r2, [sp, #16]
   33668:	add	r1, sp, #20
   3366c:	ldr	r0, [r6, #36]	; 0x24
   33670:	blx	r5
   33674:	cmp	r0, #0
   33678:	streq	r4, [r6, #136]	; 0x88
   3367c:	bne	336a0 <flatcc_builder_default_alloc@@Base+0x524>
   33680:	mov	r0, r4
   33684:	add	sp, sp, #88	; 0x58
   33688:	pop	{r4, r5, r6, r7, r8, pc}
   3368c:	ldr	r3, [pc, #76]	; 336e0 <flatcc_builder_default_alloc@@Base+0x564>
   33690:	ldr	r2, [pc, #76]	; 336e4 <flatcc_builder_default_alloc@@Base+0x568>
   33694:	ldr	r1, [pc, #44]	; 336c8 <flatcc_builder_default_alloc@@Base+0x54c>
   33698:	ldr	r0, [pc, #60]	; 336dc <flatcc_builder_default_alloc@@Base+0x560>
   3369c:	bl	14038 <__assert_fail@plt>
   336a0:	ldr	r3, [pc, #56]	; 336e0 <flatcc_builder_default_alloc@@Base+0x564>
   336a4:	ldr	r2, [pc, #60]	; 336e8 <flatcc_builder_default_alloc@@Base+0x56c>
   336a8:	ldr	r1, [pc, #24]	; 336c8 <flatcc_builder_default_alloc@@Base+0x54c>
   336ac:	ldr	r0, [pc, #40]	; 336dc <flatcc_builder_default_alloc@@Base+0x560>
   336b0:	bl	14038 <__assert_fail@plt>
   336b4:	mov	r4, #0
   336b8:	b	33680 <flatcc_builder_default_alloc@@Base+0x504>
   336bc:	andeq	r4, r5, r0, ror #26
   336c0:	andeq	r4, r5, ip, lsl #31
   336c4:			; <UNDEFINED> instruction: 0x000005b1
   336c8:			; <UNDEFINED> instruction: 0x000554b0
   336cc:	strdeq	r5, [r5], -r8
   336d0:			; <UNDEFINED> instruction: 0x000005b5
   336d4:	andeq	r5, r5, r8, lsl #10
   336d8:			; <UNDEFINED> instruction: 0x000005b7
   336dc:	andeq	r3, r4, r0, ror lr
   336e0:	andeq	r4, r5, ip, lsr #31
   336e4:	andeq	r0, r0, r7, lsl #5
   336e8:	andeq	r0, r0, fp, lsl #5

000336ec <flatcc_builder_flush_vtable_cache@@Base>:
   336ec:	ldr	r3, [r0, #116]	; 0x74
   336f0:	cmp	r3, #0
   336f4:	bxeq	lr
   336f8:	push	{r4, lr}
   336fc:	mov	r4, r0
   33700:	ldr	r2, [r0, #96]	; 0x60
   33704:	mov	r1, #0
   33708:	ldr	r0, [r0, #92]	; 0x5c
   3370c:	bl	13f9c <memset@plt>
   33710:	mov	r3, #16
   33714:	str	r3, [r4, #124]	; 0x7c
   33718:	mov	r3, #0
   3371c:	str	r3, [r4, #120]	; 0x78
   33720:	pop	{r4, pc}

00033724 <flatcc_builder_custom_init@@Base>:
   33724:	push	{r4, r5, r6, r7, r8, lr}
   33728:	mov	r4, r0
   3372c:	mov	r6, r1
   33730:	mov	r7, r2
   33734:	mov	r5, r3
   33738:	mov	r2, #232	; 0xe8
   3373c:	mov	r1, #0
   33740:	bl	13f9c <memset@plt>
   33744:	cmp	r6, #0
   33748:	moveq	r3, #1
   3374c:	streq	r3, [r4, #184]	; 0xb8
   33750:	addeq	r7, r4, #188	; 0xbc
   33754:	ldreq	r6, [pc, #36]	; 33780 <flatcc_builder_custom_init@@Base+0x5c>
   33758:	ldr	r3, [pc, #36]	; 33784 <flatcc_builder_custom_init@@Base+0x60>
   3375c:	cmp	r5, #0
   33760:	moveq	r5, r3
   33764:	ldr	r3, [sp, #24]
   33768:	str	r3, [r4, #40]	; 0x28
   3376c:	str	r5, [r4, #48]	; 0x30
   33770:	str	r7, [r4, #36]	; 0x24
   33774:	str	r6, [r4, #44]	; 0x2c
   33778:	mov	r0, #0
   3377c:	pop	{r4, r5, r6, r7, r8, pc}
   33780:	strdeq	r7, [r3], -ip
   33784:	andeq	r3, r3, ip, ror r1

00033788 <flatcc_builder_init@@Base>:
   33788:	push	{r4, lr}
   3378c:	mov	r4, r0
   33790:	mov	r2, #232	; 0xe8
   33794:	mov	r1, #0
   33798:	bl	13f9c <memset@plt>
   3379c:	mov	r3, #1
   337a0:	str	r3, [r4, #184]	; 0xb8
   337a4:	ldr	r3, [pc, #24]	; 337c4 <flatcc_builder_init@@Base+0x3c>
   337a8:	str	r3, [r4, #48]	; 0x30
   337ac:	add	r3, r4, #188	; 0xbc
   337b0:	str	r3, [r4, #36]	; 0x24
   337b4:	ldr	r3, [pc, #12]	; 337c8 <flatcc_builder_init@@Base+0x40>
   337b8:	str	r3, [r4, #44]	; 0x2c
   337bc:	mov	r0, #0
   337c0:	pop	{r4, pc}
   337c4:	andeq	r3, r3, ip, ror r1
   337c8:	strdeq	r7, [r3], -ip

000337cc <flatcc_builder_custom_reset@@Base>:
   337cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   337d0:	sub	sp, sp, #12
   337d4:	mov	r6, r0
   337d8:	mov	fp, r1
   337dc:	mov	r8, r2
   337e0:	mov	r4, r0
   337e4:	mov	r5, #0
   337e8:	mov	r9, r5
   337ec:	mov	sl, #1
   337f0:	b	33814 <flatcc_builder_custom_reset@@Base+0x48>
   337f4:	ldr	r2, [r7, #56]	; 0x38
   337f8:	mov	r1, r9
   337fc:	ldr	r0, [r7, #52]	; 0x34
   33800:	bl	13f9c <memset@plt>
   33804:	add	r5, r5, #1
   33808:	add	r4, r4, #8
   3380c:	cmp	r5, #8
   33810:	beq	3387c <flatcc_builder_custom_reset@@Base+0xb0>
   33814:	add	r1, r4, #52	; 0x34
   33818:	mov	r7, r4
   3381c:	ldr	r3, [r4, #52]	; 0x34
   33820:	cmp	r3, #0
   33824:	beq	3385c <flatcc_builder_custom_reset@@Base+0x90>
   33828:	cmp	r5, #5
   3382c:	cmpne	r8, #0
   33830:	beq	337f4 <flatcc_builder_custom_reset@@Base+0x28>
   33834:	str	r5, [sp]
   33838:	mov	r3, sl
   3383c:	mov	r2, sl
   33840:	ldr	r0, [r6, #40]	; 0x28
   33844:	ldr	ip, [r6, #48]	; 0x30
   33848:	blx	ip
   3384c:	cmp	r0, #0
   33850:	beq	337f4 <flatcc_builder_custom_reset@@Base+0x28>
   33854:	mvn	r0, #0
   33858:	b	338f4 <flatcc_builder_custom_reset@@Base+0x128>
   3385c:	ldr	r3, [r4, #56]	; 0x38
   33860:	cmp	r3, #0
   33864:	beq	33804 <flatcc_builder_custom_reset@@Base+0x38>
   33868:	ldr	r3, [pc, #156]	; 3390c <flatcc_builder_custom_reset@@Base+0x140>
   3386c:	ldr	r2, [pc, #156]	; 33910 <flatcc_builder_custom_reset@@Base+0x144>
   33870:	ldr	r1, [pc, #156]	; 33914 <flatcc_builder_custom_reset@@Base+0x148>
   33874:	ldr	r0, [pc, #156]	; 33918 <flatcc_builder_custom_reset@@Base+0x14c>
   33878:	bl	14038 <__assert_fail@plt>
   3387c:	mov	r3, #0
   33880:	str	r3, [r6, #120]	; 0x78
   33884:	ldr	r3, [r6, #124]	; 0x7c
   33888:	cmp	r3, #0
   3388c:	movne	r3, #16
   33890:	strne	r3, [r6, #124]	; 0x7c
   33894:	mov	r3, #0
   33898:	strh	r3, [r6, #128]	; 0x80
   3389c:	str	r3, [r6, #136]	; 0x88
   338a0:	str	r3, [r6, #140]	; 0x8c
   338a4:	str	r3, [r6, #156]	; 0x9c
   338a8:	str	r3, [r6, #160]	; 0xa0
   338ac:	str	r3, [r6, #20]
   338b0:	str	r3, [r6, #24]
   338b4:	str	r3, [r6, #148]	; 0x94
   338b8:	str	r3, [r6, #152]	; 0x98
   338bc:	ldr	r2, [r6, #60]	; 0x3c
   338c0:	str	r2, [r6, #16]
   338c4:	ldr	r2, [r6, #76]	; 0x4c
   338c8:	str	r2, [r6]
   338cc:	ldr	r2, [r6, #52]	; 0x34
   338d0:	str	r2, [r6, #4]
   338d4:	str	r3, [r6, #32]
   338d8:	cmp	fp, r3
   338dc:	strne	r3, [r6, #172]	; 0xac
   338e0:	strne	r3, [r6, #176]	; 0xb0
   338e4:	strne	r3, [r6, #180]	; 0xb4
   338e8:	ldr	r0, [r6, #184]	; 0xb8
   338ec:	cmp	r0, #0
   338f0:	bne	338fc <flatcc_builder_custom_reset@@Base+0x130>
   338f4:	add	sp, sp, #12
   338f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   338fc:	add	r0, r6, #188	; 0xbc
   33900:	bl	371c4 <flatcc_emitter_reset@@Base>
   33904:	mov	r0, #0
   33908:	b	338f4 <flatcc_builder_custom_reset@@Base+0x128>
   3390c:			; <UNDEFINED> instruction: 0x00054fb8
   33910:			; <UNDEFINED> instruction: 0x000001b2
   33914:			; <UNDEFINED> instruction: 0x000554b0
   33918:	andeq	r5, r5, r8, lsl r5

0003391c <flatcc_builder_reset@@Base>:
   3391c:	push	{r4, lr}
   33920:	mov	r2, #0
   33924:	mov	r1, r2
   33928:	bl	337cc <flatcc_builder_custom_reset@@Base>
   3392c:	pop	{r4, pc}

00033930 <flatcc_builder_clear@@Base>:
   33930:	push	{r4, r5, r6, r7, r8, lr}
   33934:	sub	sp, sp, #8
   33938:	mov	r6, r0
   3393c:	add	r5, r0, #52	; 0x34
   33940:	mov	r4, #0
   33944:	mov	r8, r4
   33948:	str	r4, [sp]
   3394c:	ldr	r7, [r6, #48]	; 0x30
   33950:	mov	r3, r8
   33954:	mov	r2, r8
   33958:	mov	r1, r5
   3395c:	ldr	r0, [r6, #40]	; 0x28
   33960:	blx	r7
   33964:	add	r4, r4, #1
   33968:	add	r5, r5, #8
   3396c:	cmp	r4, #8
   33970:	bne	33948 <flatcc_builder_clear@@Base+0x18>
   33974:	ldr	r3, [r6, #184]	; 0xb8
   33978:	cmp	r3, #0
   3397c:	bne	33998 <flatcc_builder_clear@@Base+0x68>
   33980:	mov	r2, #232	; 0xe8
   33984:	mov	r1, #0
   33988:	mov	r0, r6
   3398c:	bl	13f9c <memset@plt>
   33990:	add	sp, sp, #8
   33994:	pop	{r4, r5, r6, r7, r8, pc}
   33998:	add	r0, r6, #188	; 0xbc
   3399c:	bl	37294 <flatcc_emitter_clear@@Base>
   339a0:	b	33980 <flatcc_builder_clear@@Base+0x50>

000339a4 <flatcc_builder_enter_user_frame_ptr@@Base>:
   339a4:	push	{r4, r5, r6, r7, r8, lr}
   339a8:	sub	sp, sp, #8
   339ac:	mov	r7, r0
   339b0:	add	r4, r1, #3
   339b4:	bic	r4, r4, #3
   339b8:	add	r4, r4, #4
   339bc:	ldr	r5, [r0, #228]	; 0xe4
   339c0:	add	r2, r4, r5
   339c4:	ldr	r3, [r0, #112]	; 0x70
   339c8:	cmp	r2, r3
   339cc:	bhi	33a14 <flatcc_builder_enter_user_frame_ptr@@Base+0x70>
   339d0:	ldr	r8, [r7, #108]	; 0x6c
   339d4:	adds	r6, r8, r5
   339d8:	beq	33a4c <flatcc_builder_enter_user_frame_ptr@@Base+0xa8>
   339dc:	mov	r2, r4
   339e0:	mov	r1, #0
   339e4:	mov	r0, r6
   339e8:	bl	13f9c <memset@plt>
   339ec:	ldr	r3, [r7, #224]	; 0xe0
   339f0:	str	r3, [r8, r5]
   339f4:	ldr	r1, [r7, #228]	; 0xe4
   339f8:	add	r3, r1, #4
   339fc:	str	r3, [r7, #224]	; 0xe0
   33a00:	add	r4, r4, r1
   33a04:	str	r4, [r7, #228]	; 0xe4
   33a08:	add	r0, r6, #4
   33a0c:	add	sp, sp, #8
   33a10:	pop	{r4, r5, r6, r7, r8, pc}
   33a14:	mov	r3, #7
   33a18:	str	r3, [sp]
   33a1c:	ldr	r6, [r0, #48]	; 0x30
   33a20:	mov	r3, #0
   33a24:	add	r1, r0, #108	; 0x6c
   33a28:	ldr	r0, [r0, #40]	; 0x28
   33a2c:	blx	r6
   33a30:	cmp	r0, #0
   33a34:	beq	339d0 <flatcc_builder_enter_user_frame_ptr@@Base+0x2c>
   33a38:	ldr	r3, [pc, #20]	; 33a54 <flatcc_builder_enter_user_frame_ptr@@Base+0xb0>
   33a3c:	mov	r2, #308	; 0x134
   33a40:	ldr	r1, [pc, #16]	; 33a58 <flatcc_builder_enter_user_frame_ptr@@Base+0xb4>
   33a44:	ldr	r0, [pc, #16]	; 33a5c <flatcc_builder_enter_user_frame_ptr@@Base+0xb8>
   33a48:	bl	14038 <__assert_fail@plt>
   33a4c:	mov	r0, #0
   33a50:	b	33a0c <flatcc_builder_enter_user_frame_ptr@@Base+0x68>
   33a54:	andeq	r4, r5, ip, ror pc
   33a58:			; <UNDEFINED> instruction: 0x000554b0
   33a5c:	andeq	r3, r4, r0, ror lr

00033a60 <flatcc_builder_enter_user_frame@@Base>:
   33a60:	push	{r4, r5, r6, r7, lr}
   33a64:	sub	sp, sp, #12
   33a68:	mov	r6, r0
   33a6c:	add	r4, r1, #3
   33a70:	bic	r4, r4, #3
   33a74:	add	r4, r4, #4
   33a78:	ldr	r5, [r0, #228]	; 0xe4
   33a7c:	add	r2, r4, r5
   33a80:	ldr	r3, [r0, #112]	; 0x70
   33a84:	cmp	r2, r3
   33a88:	bhi	33acc <flatcc_builder_enter_user_frame@@Base+0x6c>
   33a8c:	ldr	r7, [r6, #108]	; 0x6c
   33a90:	adds	r0, r7, r5
   33a94:	moveq	r0, #0
   33a98:	beq	33ac4 <flatcc_builder_enter_user_frame@@Base+0x64>
   33a9c:	mov	r2, r4
   33aa0:	mov	r1, #0
   33aa4:	bl	13f9c <memset@plt>
   33aa8:	ldr	r3, [r6, #224]	; 0xe0
   33aac:	str	r3, [r7, r5]
   33ab0:	ldr	r1, [r6, #228]	; 0xe4
   33ab4:	add	r0, r1, #4
   33ab8:	str	r0, [r6, #224]	; 0xe0
   33abc:	add	r4, r4, r1
   33ac0:	str	r4, [r6, #228]	; 0xe4
   33ac4:	add	sp, sp, #12
   33ac8:	pop	{r4, r5, r6, r7, pc}
   33acc:	mov	r3, #7
   33ad0:	str	r3, [sp]
   33ad4:	ldr	r7, [r0, #48]	; 0x30
   33ad8:	mov	r3, #0
   33adc:	add	r1, r0, #108	; 0x6c
   33ae0:	ldr	r0, [r0, #40]	; 0x28
   33ae4:	blx	r7
   33ae8:	cmp	r0, #0
   33aec:	beq	33a8c <flatcc_builder_enter_user_frame@@Base+0x2c>
   33af0:	ldr	r3, [pc, #12]	; 33b04 <flatcc_builder_enter_user_frame@@Base+0xa4>
   33af4:	mov	r2, #308	; 0x134
   33af8:	ldr	r1, [pc, #8]	; 33b08 <flatcc_builder_enter_user_frame@@Base+0xa8>
   33afc:	ldr	r0, [pc, #8]	; 33b0c <flatcc_builder_enter_user_frame@@Base+0xac>
   33b00:	bl	14038 <__assert_fail@plt>
   33b04:	andeq	r4, r5, ip, ror pc
   33b08:			; <UNDEFINED> instruction: 0x000554b0
   33b0c:	andeq	r3, r4, r0, ror lr

00033b10 <flatcc_builder_exit_user_frame@@Base>:
   33b10:	ldr	r3, [r0, #224]	; 0xe0
   33b14:	cmp	r3, #0
   33b18:	beq	33b3c <flatcc_builder_exit_user_frame@@Base+0x2c>
   33b1c:	ldr	r2, [r0, #108]	; 0x6c
   33b20:	add	r2, r2, r3
   33b24:	sub	r3, r3, #4
   33b28:	str	r3, [r0, #228]	; 0xe4
   33b2c:	ldr	r3, [r2, #-4]
   33b30:	str	r3, [r0, #224]	; 0xe0
   33b34:	mov	r0, r3
   33b38:	bx	lr
   33b3c:	push	{r4, lr}
   33b40:	ldr	r3, [pc, #12]	; 33b54 <flatcc_builder_exit_user_frame@@Base+0x44>
   33b44:	ldr	r2, [pc, #12]	; 33b58 <flatcc_builder_exit_user_frame@@Base+0x48>
   33b48:	ldr	r1, [pc, #12]	; 33b5c <flatcc_builder_exit_user_frame@@Base+0x4c>
   33b4c:	ldr	r0, [pc, #12]	; 33b60 <flatcc_builder_exit_user_frame@@Base+0x50>
   33b50:	bl	14038 <__assert_fail@plt>
   33b54:	ldrdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   33b58:	andeq	r0, r0, lr, lsl r2
   33b5c:			; <UNDEFINED> instruction: 0x000554b0
   33b60:	andeq	r5, r5, ip, lsr #10

00033b64 <flatcc_builder_exit_user_frame_at@@Base>:
   33b64:	push	{r4, lr}
   33b68:	ldr	r3, [r0, #224]	; 0xe0
   33b6c:	cmp	r3, r1
   33b70:	bcc	33b80 <flatcc_builder_exit_user_frame_at@@Base+0x1c>
   33b74:	str	r1, [r0, #224]	; 0xe0
   33b78:	bl	33b10 <flatcc_builder_exit_user_frame@@Base>
   33b7c:	pop	{r4, pc}
   33b80:	ldr	r3, [pc, #12]	; 33b94 <flatcc_builder_exit_user_frame_at@@Base+0x30>
   33b84:	ldr	r2, [pc, #12]	; 33b98 <flatcc_builder_exit_user_frame_at@@Base+0x34>
   33b88:	ldr	r1, [pc, #12]	; 33b9c <flatcc_builder_exit_user_frame_at@@Base+0x38>
   33b8c:	ldr	r0, [pc, #12]	; 33ba0 <flatcc_builder_exit_user_frame_at@@Base+0x3c>
   33b90:	bl	14038 <__assert_fail@plt>
   33b94:	strdeq	r4, [r5], -r4	; <UNPREDICTABLE>
   33b98:	andeq	r0, r0, r7, lsr #4
   33b9c:			; <UNDEFINED> instruction: 0x000554b0
   33ba0:	andeq	r5, r5, r8, asr #10

00033ba4 <flatcc_builder_get_current_user_frame@@Base>:
   33ba4:	ldr	r0, [r0, #224]	; 0xe0
   33ba8:	bx	lr

00033bac <flatcc_builder_get_user_frame_ptr@@Base>:
   33bac:	ldr	r0, [r0, #108]	; 0x6c
   33bb0:	add	r0, r0, r1
   33bb4:	bx	lr

00033bb8 <flatcc_builder_embed_buffer@@Base>:
   33bb8:	push	{r4, r5, r6, lr}
   33bbc:	sub	sp, sp, #88	; 0x58
   33bc0:	mov	r4, r0
   33bc4:	mov	r6, r2
   33bc8:	mov	r5, r3
   33bcc:	ldr	r3, [r0, #152]	; 0x98
   33bd0:	adds	r3, r3, #0
   33bd4:	movne	r3, #1
   33bd8:	mov	r2, r1
   33bdc:	add	r1, sp, #104	; 0x68
   33be0:	bl	33290 <flatcc_builder_default_alloc@@Base+0x114>
   33be4:	cmp	r0, #0
   33be8:	bne	33d24 <flatcc_builder_embed_buffer@@Base+0x16c>
   33bec:	ldr	r3, [sp, #108]	; 0x6c
   33bf0:	and	r3, r3, #2
   33bf4:	cmp	r3, #0
   33bf8:	movne	r3, #4
   33bfc:	moveq	r3, #0
   33c00:	ldr	r1, [r4, #136]	; 0x88
   33c04:	sub	r2, r1, r5
   33c08:	sub	r3, r2, r3
   33c0c:	ldrh	r2, [sp, #104]	; 0x68
   33c10:	sub	r2, r2, #1
   33c14:	and	r3, r3, r2
   33c18:	add	r2, r5, r3
   33c1c:	str	r2, [sp, #84]	; 0x54
   33c20:	mov	r2, #0
   33c24:	str	r2, [sp, #12]
   33c28:	str	r2, [sp, #16]
   33c2c:	ldr	r2, [r4, #152]	; 0x98
   33c30:	cmp	r2, #0
   33c34:	beq	33c54 <flatcc_builder_embed_buffer@@Base+0x9c>
   33c38:	mov	r2, #4
   33c3c:	str	r2, [sp, #12]
   33c40:	add	r0, sp, #84	; 0x54
   33c44:	str	r0, [sp, #20]
   33c48:	str	r2, [sp, #24]
   33c4c:	mov	r2, #1
   33c50:	str	r2, [sp, #16]
   33c54:	cmp	r5, #0
   33c58:	beq	33c84 <flatcc_builder_embed_buffer@@Base+0xcc>
   33c5c:	ldr	r2, [sp, #12]
   33c60:	add	r2, r2, r5
   33c64:	str	r2, [sp, #12]
   33c68:	ldr	r2, [sp, #16]
   33c6c:	add	r2, r2, #1
   33c70:	add	r0, sp, #88	; 0x58
   33c74:	add	r0, r0, r2, lsl #3
   33c78:	str	r6, [r0, #-76]	; 0xffffffb4
   33c7c:	str	r5, [r0, #-72]	; 0xffffffb8
   33c80:	str	r2, [sp, #16]
   33c84:	cmp	r3, #0
   33c88:	beq	33cb8 <flatcc_builder_embed_buffer@@Base+0x100>
   33c8c:	ldr	r2, [sp, #12]
   33c90:	add	r2, r2, r3
   33c94:	str	r2, [sp, #12]
   33c98:	ldr	r2, [sp, #16]
   33c9c:	add	r2, r2, #1
   33ca0:	add	r0, sp, #88	; 0x58
   33ca4:	add	r0, r0, r2, lsl #3
   33ca8:	ldr	ip, [pc, #124]	; 33d2c <flatcc_builder_embed_buffer@@Base+0x174>
   33cac:	str	ip, [r0, #-76]	; 0xffffffb4
   33cb0:	str	r3, [r0, #-72]	; 0xffffffb8
   33cb4:	str	r2, [sp, #16]
   33cb8:	ldr	r3, [sp, #12]
   33cbc:	sub	r5, r1, r3
   33cc0:	cmp	r1, r5
   33cc4:	ble	33cfc <flatcc_builder_embed_buffer@@Base+0x144>
   33cc8:	str	r3, [sp]
   33ccc:	ldr	r6, [r4, #44]	; 0x2c
   33cd0:	mov	r3, r5
   33cd4:	ldr	r2, [sp, #16]
   33cd8:	add	r1, sp, #20
   33cdc:	ldr	r0, [r4, #36]	; 0x24
   33ce0:	blx	r6
   33ce4:	cmp	r0, #0
   33ce8:	streq	r5, [r4, #136]	; 0x88
   33cec:	bne	33d10 <flatcc_builder_embed_buffer@@Base+0x158>
   33cf0:	mov	r0, r5
   33cf4:	add	sp, sp, #88	; 0x58
   33cf8:	pop	{r4, r5, r6, pc}
   33cfc:	ldr	r3, [pc, #44]	; 33d30 <flatcc_builder_embed_buffer@@Base+0x178>
   33d00:	ldr	r2, [pc, #44]	; 33d34 <flatcc_builder_embed_buffer@@Base+0x17c>
   33d04:	ldr	r1, [pc, #44]	; 33d38 <flatcc_builder_embed_buffer@@Base+0x180>
   33d08:	ldr	r0, [pc, #44]	; 33d3c <flatcc_builder_embed_buffer@@Base+0x184>
   33d0c:	bl	14038 <__assert_fail@plt>
   33d10:	ldr	r3, [pc, #24]	; 33d30 <flatcc_builder_embed_buffer@@Base+0x178>
   33d14:	ldr	r2, [pc, #36]	; 33d40 <flatcc_builder_embed_buffer@@Base+0x188>
   33d18:	ldr	r1, [pc, #24]	; 33d38 <flatcc_builder_embed_buffer@@Base+0x180>
   33d1c:	ldr	r0, [pc, #24]	; 33d3c <flatcc_builder_embed_buffer@@Base+0x184>
   33d20:	bl	14038 <__assert_fail@plt>
   33d24:	mov	r5, #0
   33d28:	b	33cf0 <flatcc_builder_embed_buffer@@Base+0x138>
   33d2c:	andeq	r4, r5, r0, ror #26
   33d30:	andeq	r4, r5, ip, lsr #31
   33d34:	andeq	r0, r0, r7, lsl #5
   33d38:			; <UNDEFINED> instruction: 0x000554b0
   33d3c:	andeq	r3, r4, r0, ror lr
   33d40:	andeq	r0, r0, fp, lsl #5

00033d44 <flatcc_builder_create_buffer@@Base>:
   33d44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33d48:	sub	sp, sp, #96	; 0x60
   33d4c:	mov	r5, r0
   33d50:	mov	r9, r1
   33d54:	mov	r6, r3
   33d58:	ldr	r8, [sp, #132]	; 0x84
   33d5c:	mov	r3, #0
   33d60:	str	r3, [sp, #12]
   33d64:	and	r4, r8, #1
   33d68:	uxtb	r7, r4
   33d6c:	mov	r3, r7
   33d70:	add	r1, sp, #128	; 0x80
   33d74:	bl	33290 <flatcc_builder_default_alloc@@Base+0x114>
   33d78:	cmp	r0, #0
   33d7c:	bne	33f20 <flatcc_builder_create_buffer@@Base+0x1dc>
   33d80:	ldrh	r0, [sp, #128]	; 0x80
   33d84:	ldrh	r3, [r5, #128]	; 0x80
   33d88:	cmp	r3, r0
   33d8c:	strhcc	r0, [r5, #128]	; 0x80
   33d90:	cmp	r9, #0
   33d94:	ldrne	r3, [r9]
   33d98:	strne	r3, [sp, #12]
   33d9c:	ldr	r1, [sp, #12]
   33da0:	cmp	r1, #0
   33da4:	movne	r1, #4
   33da8:	moveq	r1, #0
   33dac:	tst	r8, #2
   33db0:	bne	33f28 <flatcc_builder_create_buffer@@Base+0x1e4>
   33db4:	ldr	ip, [r5, #136]	; 0x88
   33db8:	mov	r2, ip
   33dbc:	sub	r3, ip, #4
   33dc0:	sub	r3, r3, r1
   33dc4:	sub	r0, r0, #1
   33dc8:	and	r3, r3, r0
   33dcc:	mov	r0, #0
   33dd0:	str	r0, [sp, #16]
   33dd4:	str	r0, [sp, #20]
   33dd8:	cmp	r4, r0
   33ddc:	bne	33f44 <flatcc_builder_create_buffer@@Base+0x200>
   33de0:	ldr	lr, [sp, #16]
   33de4:	add	lr, lr, #4
   33de8:	str	lr, [sp, #16]
   33dec:	ldr	r8, [sp, #20]
   33df0:	add	r0, r8, #1
   33df4:	add	r9, sp, #96	; 0x60
   33df8:	add	r9, r9, r0, lsl #3
   33dfc:	add	sl, sp, #92	; 0x5c
   33e00:	str	sl, [r9, #-80]	; 0xffffffb0
   33e04:	mov	sl, #4
   33e08:	str	sl, [r9, #-76]	; 0xffffffb4
   33e0c:	str	r0, [sp, #20]
   33e10:	cmp	r1, #0
   33e14:	beq	33e40 <flatcc_builder_create_buffer@@Base+0xfc>
   33e18:	add	lr, r1, lr
   33e1c:	str	lr, [sp, #16]
   33e20:	add	r0, r8, #2
   33e24:	add	lr, sp, #96	; 0x60
   33e28:	add	r0, lr, r0, lsl #3
   33e2c:	add	lr, sp, #12
   33e30:	str	lr, [r0, #-80]	; 0xffffffb0
   33e34:	str	r1, [r0, #-76]	; 0xffffffb4
   33e38:	add	r8, r8, #2
   33e3c:	str	r8, [sp, #20]
   33e40:	cmp	r3, #0
   33e44:	beq	33e74 <flatcc_builder_create_buffer@@Base+0x130>
   33e48:	ldr	r1, [sp, #16]
   33e4c:	add	r1, r1, r3
   33e50:	str	r1, [sp, #16]
   33e54:	ldr	r1, [sp, #20]
   33e58:	add	r1, r1, #1
   33e5c:	add	r0, sp, #96	; 0x60
   33e60:	add	r0, r0, r1, lsl #3
   33e64:	ldr	lr, [pc, #248]	; 33f64 <flatcc_builder_create_buffer@@Base+0x220>
   33e68:	str	lr, [r0, #-80]	; 0xffffffb0
   33e6c:	str	r3, [r0, #-76]	; 0xffffffb4
   33e70:	str	r1, [sp, #20]
   33e74:	ldr	r1, [sp, #16]
   33e78:	sub	r3, r2, r1
   33e7c:	add	r3, r3, r7, lsl #2
   33e80:	cmp	r4, #0
   33e84:	ldrne	r2, [r5, #144]	; 0x90
   33e88:	ldreq	r2, [r5, #140]	; 0x8c
   33e8c:	sub	r2, r2, r3
   33e90:	str	r2, [sp, #88]	; 0x58
   33e94:	sub	r3, r6, r3
   33e98:	str	r3, [sp, #92]	; 0x5c
   33e9c:	sub	r4, ip, r1
   33ea0:	cmp	r4, ip
   33ea4:	bge	33ee4 <flatcc_builder_create_buffer@@Base+0x1a0>
   33ea8:	str	r1, [sp]
   33eac:	ldr	r6, [r5, #44]	; 0x2c
   33eb0:	mov	r3, r4
   33eb4:	ldr	r2, [sp, #20]
   33eb8:	add	r1, sp, #24
   33ebc:	ldr	r0, [r5, #36]	; 0x24
   33ec0:	blx	r6
   33ec4:	cmp	r0, #0
   33ec8:	bne	33ef8 <flatcc_builder_create_buffer@@Base+0x1b4>
   33ecc:	str	r4, [r5, #136]	; 0x88
   33ed0:	cmp	r4, #0
   33ed4:	beq	33f0c <flatcc_builder_create_buffer@@Base+0x1c8>
   33ed8:	mov	r0, r4
   33edc:	add	sp, sp, #96	; 0x60
   33ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   33ee4:	ldr	r3, [pc, #124]	; 33f68 <flatcc_builder_create_buffer@@Base+0x224>
   33ee8:	ldr	r2, [pc, #124]	; 33f6c <flatcc_builder_create_buffer@@Base+0x228>
   33eec:	ldr	r1, [pc, #124]	; 33f70 <flatcc_builder_create_buffer@@Base+0x22c>
   33ef0:	ldr	r0, [pc, #124]	; 33f74 <flatcc_builder_create_buffer@@Base+0x230>
   33ef4:	bl	14038 <__assert_fail@plt>
   33ef8:	ldr	r3, [pc, #104]	; 33f68 <flatcc_builder_create_buffer@@Base+0x224>
   33efc:	ldr	r2, [pc, #116]	; 33f78 <flatcc_builder_create_buffer@@Base+0x234>
   33f00:	ldr	r1, [pc, #104]	; 33f70 <flatcc_builder_create_buffer@@Base+0x22c>
   33f04:	ldr	r0, [pc, #104]	; 33f74 <flatcc_builder_create_buffer@@Base+0x230>
   33f08:	bl	14038 <__assert_fail@plt>
   33f0c:	ldr	r3, [pc, #104]	; 33f7c <flatcc_builder_create_buffer@@Base+0x238>
   33f10:	mov	r2, #772	; 0x304
   33f14:	ldr	r1, [pc, #84]	; 33f70 <flatcc_builder_create_buffer@@Base+0x22c>
   33f18:	ldr	r0, [pc, #84]	; 33f74 <flatcc_builder_create_buffer@@Base+0x230>
   33f1c:	bl	14038 <__assert_fail@plt>
   33f20:	mov	r4, #0
   33f24:	b	33ed8 <flatcc_builder_create_buffer@@Base+0x194>
   33f28:	ldr	ip, [r5, #136]	; 0x88
   33f2c:	mov	r2, ip
   33f30:	sub	r3, ip, #8
   33f34:	sub	r3, r3, r1
   33f38:	sub	r0, r0, #1
   33f3c:	and	r3, r3, r0
   33f40:	mov	r7, #1
   33f44:	mov	r0, #4
   33f48:	str	r0, [sp, #16]
   33f4c:	add	lr, sp, #88	; 0x58
   33f50:	str	lr, [sp, #24]
   33f54:	str	r0, [sp, #28]
   33f58:	mov	r0, #1
   33f5c:	str	r0, [sp, #20]
   33f60:	b	33de0 <flatcc_builder_create_buffer@@Base+0x9c>
   33f64:	andeq	r4, r5, r0, ror #26
   33f68:	andeq	r4, r5, ip, lsr #31
   33f6c:	andeq	r0, r0, r7, lsl #5
   33f70:			; <UNDEFINED> instruction: 0x000554b0
   33f74:	andeq	r3, r4, r0, ror lr
   33f78:	andeq	r0, r0, fp, lsl #5
   33f7c:	andeq	r5, r5, r8, lsl r0

00033f80 <flatcc_builder_create_struct@@Base>:
   33f80:	push	{r4, r5, r6, lr}
   33f84:	sub	sp, sp, #80	; 0x50
   33f88:	cmp	r3, #0
   33f8c:	beq	33fe4 <flatcc_builder_create_struct@@Base+0x64>
   33f90:	mov	r4, r0
   33f94:	ldrh	r0, [r0, #128]	; 0x80
   33f98:	cmp	r0, r3
   33f9c:	strhcc	r3, [r4, #128]	; 0x80
   33fa0:	ldr	ip, [r4, #136]	; 0x88
   33fa4:	sub	r0, ip, r2
   33fa8:	sub	r3, r3, #1
   33fac:	and	r3, r3, r0
   33fb0:	mov	r0, #0
   33fb4:	str	r0, [sp, #8]
   33fb8:	str	r0, [sp, #12]
   33fbc:	cmp	r2, r0
   33fc0:	beq	34020 <flatcc_builder_create_struct@@Base+0xa0>
   33fc4:	str	r2, [sp, #8]
   33fc8:	str	r1, [sp, #16]
   33fcc:	str	r2, [sp, #20]
   33fd0:	mov	r2, #1
   33fd4:	str	r2, [sp, #12]
   33fd8:	cmp	r3, r0
   33fdc:	beq	34054 <flatcc_builder_create_struct@@Base+0xd4>
   33fe0:	b	34028 <flatcc_builder_create_struct@@Base+0xa8>
   33fe4:	ldr	r3, [pc, #172]	; 34098 <flatcc_builder_create_struct@@Base+0x118>
   33fe8:	ldr	r2, [pc, #172]	; 3409c <flatcc_builder_create_struct@@Base+0x11c>
   33fec:	ldr	r1, [pc, #172]	; 340a0 <flatcc_builder_create_struct@@Base+0x120>
   33ff0:	ldr	r0, [pc, #172]	; 340a4 <flatcc_builder_create_struct@@Base+0x124>
   33ff4:	bl	14038 <__assert_fail@plt>
   33ff8:	ldr	r3, [pc, #168]	; 340a8 <flatcc_builder_create_struct@@Base+0x128>
   33ffc:	ldr	r2, [pc, #168]	; 340ac <flatcc_builder_create_struct@@Base+0x12c>
   34000:	ldr	r1, [pc, #152]	; 340a0 <flatcc_builder_create_struct@@Base+0x120>
   34004:	ldr	r0, [pc, #164]	; 340b0 <flatcc_builder_create_struct@@Base+0x130>
   34008:	bl	14038 <__assert_fail@plt>
   3400c:	ldr	r3, [pc, #148]	; 340a8 <flatcc_builder_create_struct@@Base+0x128>
   34010:	ldr	r2, [pc, #156]	; 340b4 <flatcc_builder_create_struct@@Base+0x134>
   34014:	ldr	r1, [pc, #132]	; 340a0 <flatcc_builder_create_struct@@Base+0x120>
   34018:	ldr	r0, [pc, #144]	; 340b0 <flatcc_builder_create_struct@@Base+0x130>
   3401c:	bl	14038 <__assert_fail@plt>
   34020:	cmp	r3, #0
   34024:	beq	33ff8 <flatcc_builder_create_struct@@Base+0x78>
   34028:	ldr	r2, [sp, #8]
   3402c:	add	r2, r2, r3
   34030:	str	r2, [sp, #8]
   34034:	ldr	r2, [sp, #12]
   34038:	add	r2, r2, #1
   3403c:	add	r1, sp, #80	; 0x50
   34040:	add	r1, r1, r2, lsl #3
   34044:	ldr	r0, [pc, #108]	; 340b8 <flatcc_builder_create_struct@@Base+0x138>
   34048:	str	r0, [r1, #-72]	; 0xffffffb8
   3404c:	str	r3, [r1, #-68]	; 0xffffffbc
   34050:	str	r2, [sp, #12]
   34054:	ldr	r3, [sp, #8]
   34058:	sub	r5, ip, r3
   3405c:	cmp	ip, r5
   34060:	ble	33ff8 <flatcc_builder_create_struct@@Base+0x78>
   34064:	str	r3, [sp]
   34068:	ldr	r6, [r4, #44]	; 0x2c
   3406c:	mov	r3, r5
   34070:	ldr	r2, [sp, #12]
   34074:	add	r1, sp, #16
   34078:	ldr	r0, [r4, #36]	; 0x24
   3407c:	blx	r6
   34080:	cmp	r0, #0
   34084:	bne	3400c <flatcc_builder_create_struct@@Base+0x8c>
   34088:	str	r5, [r4, #136]	; 0x88
   3408c:	mov	r0, r5
   34090:	add	sp, sp, #80	; 0x50
   34094:	pop	{r4, r5, r6, pc}
   34098:	andeq	r5, r5, r8, lsr r0
   3409c:	andeq	r0, r0, pc, lsl #6
   340a0:			; <UNDEFINED> instruction: 0x000554b0
   340a4:	andeq	r5, r5, r8, ror #10
   340a8:	andeq	r4, r5, ip, lsr #31
   340ac:	andeq	r0, r0, r7, lsl #5
   340b0:	andeq	r3, r4, r0, ror lr
   340b4:	andeq	r0, r0, fp, lsl #5
   340b8:	andeq	r4, r5, r0, ror #26

000340bc <flatcc_builder_start_buffer@@Base>:
   340bc:	push	{r4, r5, r6, r7, r8, lr}
   340c0:	mov	r4, r0
   340c4:	mov	r5, r1
   340c8:	mov	r7, r2
   340cc:	mov	r6, r3
   340d0:	ldrh	r1, [r0, #128]	; 0x80
   340d4:	bl	333a8 <flatcc_builder_default_alloc@@Base+0x22c>
   340d8:	cmp	r0, #0
   340dc:	bne	34168 <flatcc_builder_start_buffer@@Base+0xac>
   340e0:	mov	r3, #1
   340e4:	strh	r3, [r4, #128]	; 0x80
   340e8:	ldr	r3, [r4, #32]
   340ec:	ldrh	r2, [r4, #132]	; 0x84
   340f0:	strh	r2, [r3, #34]	; 0x22
   340f4:	strh	r7, [r4, #132]	; 0x84
   340f8:	ldr	r3, [r4, #32]
   340fc:	ldrh	r2, [r4, #164]	; 0xa4
   34100:	strh	r2, [r3, #32]
   34104:	strh	r6, [r4, #164]	; 0xa4
   34108:	ldr	r3, [r4, #32]
   3410c:	ldr	r2, [r4, #144]	; 0x90
   34110:	str	r2, [r3, #20]
   34114:	ldr	r3, [r4, #32]
   34118:	ldr	r2, [r4, #152]	; 0x98
   3411c:	str	r2, [r3, #28]
   34120:	ldr	r3, [r4, #136]	; 0x88
   34124:	str	r3, [r4, #144]	; 0x90
   34128:	ldr	r3, [r4, #148]	; 0x94
   3412c:	add	r2, r3, #1
   34130:	str	r2, [r4, #148]	; 0x94
   34134:	str	r3, [r4, #152]	; 0x98
   34138:	ldr	r3, [r4, #32]
   3413c:	ldr	r2, [r4, #168]	; 0xa8
   34140:	str	r2, [r3, #16]
   34144:	ldr	r3, [pc, #36]	; 34170 <flatcc_builder_start_buffer@@Base+0xb4>
   34148:	cmp	r5, #0
   3414c:	moveq	r5, r3
   34150:	ldr	r3, [r5]
   34154:	str	r3, [r4, #168]	; 0xa8
   34158:	ldr	r3, [r4, #32]
   3415c:	mov	r2, #1
   34160:	strh	r2, [r3, #14]
   34164:	pop	{r4, r5, r6, r7, r8, pc}
   34168:	mvn	r0, #0
   3416c:	pop	{r4, r5, r6, r7, r8, pc}
   34170:	andeq	r4, r5, r0, ror #26

00034174 <flatcc_builder_end_buffer@@Base>:
   34174:	push	{r4, r5, lr}
   34178:	sub	sp, sp, #12
   3417c:	mov	r4, r0
   34180:	ldrh	r2, [r0, #164]	; 0xa4
   34184:	and	r2, r2, #2
   34188:	ldr	r0, [r0, #152]	; 0x98
   3418c:	cmp	r0, #0
   34190:	moveq	r0, r2
   34194:	orrne	r0, r2, #1
   34198:	ldr	r2, [r4, #32]
   3419c:	ldrh	r2, [r2, #14]
   341a0:	cmp	r2, #1
   341a4:	bne	341e8 <flatcc_builder_end_buffer@@Base+0x74>
   341a8:	ldrh	r2, [r4, #132]	; 0x84
   341ac:	ldrh	r3, [r4, #128]	; 0x80
   341b0:	cmp	r3, r2
   341b4:	strhcc	r2, [r4, #128]	; 0x80
   341b8:	str	r0, [sp, #4]
   341bc:	ldrh	r3, [r4, #128]	; 0x80
   341c0:	str	r3, [sp]
   341c4:	mov	r3, r1
   341c8:	add	r1, r4, #168	; 0xa8
   341cc:	mov	r0, r4
   341d0:	bl	33d44 <flatcc_builder_create_buffer@@Base>
   341d4:	subs	r5, r0, #0
   341d8:	bne	341fc <flatcc_builder_end_buffer@@Base+0x88>
   341dc:	mov	r0, r5
   341e0:	add	sp, sp, #12
   341e4:	pop	{r4, r5, pc}
   341e8:	ldr	r3, [pc, #176]	; 342a0 <flatcc_builder_end_buffer@@Base+0x12c>
   341ec:	ldr	r2, [pc, #176]	; 342a4 <flatcc_builder_end_buffer@@Base+0x130>
   341f0:	ldr	r1, [pc, #176]	; 342a8 <flatcc_builder_end_buffer@@Base+0x134>
   341f4:	ldr	r0, [pc, #176]	; 342ac <flatcc_builder_end_buffer@@Base+0x138>
   341f8:	bl	14038 <__assert_fail@plt>
   341fc:	ldr	r3, [r4, #32]
   34200:	ldr	r2, [r3, #20]
   34204:	str	r2, [r4, #144]	; 0x90
   34208:	ldr	r2, [r3, #28]
   3420c:	str	r2, [r4, #152]	; 0x98
   34210:	ldr	r2, [r3, #16]
   34214:	str	r2, [r4, #168]	; 0xa8
   34218:	ldrh	r3, [r3, #32]
   3421c:	strh	r3, [r4, #164]	; 0xa4
   34220:	ldr	r2, [r4, #20]
   34224:	mov	r1, #0
   34228:	ldr	r0, [r4, #16]
   3422c:	bl	13f9c <memset@plt>
   34230:	ldr	r2, [r4, #32]
   34234:	ldr	r3, [r2, #8]
   34238:	str	r3, [r4, #20]
   3423c:	ldr	r0, [r2]
   34240:	str	r0, [r4, #28]
   34244:	ldr	r1, [r2, #4]
   34248:	ldr	r3, [r4, #60]	; 0x3c
   3424c:	add	r3, r3, r0
   34250:	str	r3, [r4, #16]
   34254:	ldr	r3, [r4, #64]	; 0x40
   34258:	sub	r3, r3, r0
   3425c:	cmp	r3, r1
   34260:	movcs	r3, r1
   34264:	str	r3, [r4, #24]
   34268:	str	r1, [r2, #4]
   3426c:	ldrh	r3, [r4, #130]	; 0x82
   34270:	ldrh	r2, [r4, #128]	; 0x80
   34274:	cmp	r2, r3
   34278:	strhcc	r3, [r4, #128]	; 0x80
   3427c:	ldr	r3, [r4, #32]
   34280:	ldrh	r2, [r3, #12]
   34284:	strh	r2, [r4, #130]	; 0x82
   34288:	sub	r3, r3, #36	; 0x24
   3428c:	str	r3, [r4, #32]
   34290:	ldr	r3, [r4, #156]	; 0x9c
   34294:	sub	r3, r3, #1
   34298:	str	r3, [r4, #156]	; 0x9c
   3429c:	b	341dc <flatcc_builder_end_buffer@@Base+0x68>
   342a0:	andeq	r5, r5, r8, asr r0
   342a4:	andeq	r0, r0, r6, asr #6
   342a8:			; <UNDEFINED> instruction: 0x000554b0
   342ac:	andeq	r5, r5, r4, ror r5

000342b0 <flatcc_builder_start_struct@@Base>:
   342b0:	push	{r4, r5, r6, lr}
   342b4:	mov	r4, r0
   342b8:	mov	r5, r1
   342bc:	mov	r1, r2
   342c0:	bl	333a8 <flatcc_builder_default_alloc@@Base+0x22c>
   342c4:	cmp	r0, #0
   342c8:	bne	34348 <flatcc_builder_start_struct@@Base+0x98>
   342cc:	ldr	r3, [r4, #32]
   342d0:	mov	r2, #2
   342d4:	strh	r2, [r3, #14]
   342d8:	ldr	r1, [r4, #28]
   342dc:	ldr	r2, [r4, #60]	; 0x3c
   342e0:	add	r2, r2, r1
   342e4:	str	r2, [r4, #16]
   342e8:	ldr	r3, [r4, #64]	; 0x40
   342ec:	sub	r3, r3, r1
   342f0:	cmn	r3, #4
   342f4:	mvnhi	r3, #3
   342f8:	str	r3, [r4, #24]
   342fc:	ldr	r3, [r4, #32]
   34300:	mvn	r2, #3
   34304:	str	r2, [r3, #4]
   34308:	ldr	r6, [r4, #20]
   3430c:	add	r5, r5, r6
   34310:	str	r5, [r4, #20]
   34314:	ldr	r3, [r4, #24]
   34318:	cmp	r5, r3
   3431c:	bcs	3432c <flatcc_builder_start_struct@@Base+0x7c>
   34320:	ldr	r0, [r4, #16]
   34324:	add	r0, r0, r6
   34328:	pop	{r4, r5, r6, pc}
   3432c:	add	r1, r5, #1
   34330:	mov	r0, r4
   34334:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   34338:	cmp	r0, #0
   3433c:	beq	34320 <flatcc_builder_start_struct@@Base+0x70>
   34340:	mov	r0, #0
   34344:	pop	{r4, r5, r6, pc}
   34348:	mov	r0, #0
   3434c:	pop	{r4, r5, r6, pc}

00034350 <flatcc_builder_struct_edit@@Base>:
   34350:	ldr	r0, [r0, #16]
   34354:	bx	lr

00034358 <flatcc_builder_end_struct@@Base>:
   34358:	push	{r4, r5, r6, lr}
   3435c:	ldr	r3, [r0, #32]
   34360:	ldrh	r3, [r3, #14]
   34364:	cmp	r3, #2
   34368:	bne	34390 <flatcc_builder_end_struct@@Base+0x38>
   3436c:	mov	r4, r0
   34370:	ldrh	r3, [r0, #130]	; 0x82
   34374:	ldr	r2, [r0, #20]
   34378:	ldr	r1, [r0, #16]
   3437c:	bl	33f80 <flatcc_builder_create_struct@@Base>
   34380:	subs	r5, r0, #0
   34384:	bne	343a4 <flatcc_builder_end_struct@@Base+0x4c>
   34388:	mov	r0, r5
   3438c:	pop	{r4, r5, r6, pc}
   34390:	ldr	r3, [pc, #140]	; 34424 <flatcc_builder_end_struct@@Base+0xcc>
   34394:	mov	r2, #872	; 0x368
   34398:	ldr	r1, [pc, #136]	; 34428 <flatcc_builder_end_struct@@Base+0xd0>
   3439c:	ldr	r0, [pc, #136]	; 3442c <flatcc_builder_end_struct@@Base+0xd4>
   343a0:	bl	14038 <__assert_fail@plt>
   343a4:	ldr	r2, [r4, #20]
   343a8:	mov	r1, #0
   343ac:	ldr	r0, [r4, #16]
   343b0:	bl	13f9c <memset@plt>
   343b4:	ldr	r2, [r4, #32]
   343b8:	ldr	r3, [r2, #8]
   343bc:	str	r3, [r4, #20]
   343c0:	ldr	r0, [r2]
   343c4:	str	r0, [r4, #28]
   343c8:	ldr	r1, [r2, #4]
   343cc:	ldr	r3, [r4, #60]	; 0x3c
   343d0:	add	r3, r3, r0
   343d4:	str	r3, [r4, #16]
   343d8:	ldr	r3, [r4, #64]	; 0x40
   343dc:	sub	r3, r3, r0
   343e0:	cmp	r3, r1
   343e4:	movcs	r3, r1
   343e8:	str	r3, [r4, #24]
   343ec:	str	r1, [r2, #4]
   343f0:	ldrh	r3, [r4, #130]	; 0x82
   343f4:	ldrh	r2, [r4, #128]	; 0x80
   343f8:	cmp	r2, r3
   343fc:	strhcc	r3, [r4, #128]	; 0x80
   34400:	ldr	r3, [r4, #32]
   34404:	ldrh	r2, [r3, #12]
   34408:	strh	r2, [r4, #130]	; 0x82
   3440c:	sub	r3, r3, #36	; 0x24
   34410:	str	r3, [r4, #32]
   34414:	ldr	r3, [r4, #156]	; 0x9c
   34418:	sub	r3, r3, #1
   3441c:	str	r3, [r4, #156]	; 0x9c
   34420:	b	34388 <flatcc_builder_end_struct@@Base+0x30>
   34424:	andeq	r5, r5, r4, ror r0
   34428:			; <UNDEFINED> instruction: 0x000554b0
   3442c:	andeq	r5, r5, r0, lsr #11

00034430 <flatcc_builder_extend_vector@@Base>:
   34430:	push	{r4, r5, r6, lr}
   34434:	mov	r4, r0
   34438:	ldr	r2, [r0, #32]
   3443c:	ldr	r3, [r2, #20]
   34440:	add	r0, r1, r3
   34444:	ldr	ip, [r2, #24]
   34448:	cmp	r3, r0
   3444c:	movls	r3, #0
   34450:	movhi	r3, #1
   34454:	cmp	ip, r0
   34458:	orrcc	r3, r3, #1
   3445c:	cmp	r3, #0
   34460:	bne	34494 <flatcc_builder_extend_vector@@Base+0x64>
   34464:	str	r0, [r2, #20]
   34468:	ldr	r5, [r4, #20]
   3446c:	ldr	r3, [r4, #32]
   34470:	ldr	r3, [r3, #16]
   34474:	mla	r1, r3, r1, r5
   34478:	str	r1, [r4, #20]
   3447c:	ldr	r3, [r4, #24]
   34480:	cmp	r1, r3
   34484:	bcs	344a8 <flatcc_builder_extend_vector@@Base+0x78>
   34488:	ldr	r0, [r4, #16]
   3448c:	add	r0, r0, r5
   34490:	pop	{r4, r5, r6, pc}
   34494:	ldr	r3, [pc, #44]	; 344c8 <flatcc_builder_extend_vector@@Base+0x98>
   34498:	mov	r2, #892	; 0x37c
   3449c:	ldr	r1, [pc, #40]	; 344cc <flatcc_builder_extend_vector@@Base+0x9c>
   344a0:	ldr	r0, [pc, #40]	; 344d0 <flatcc_builder_extend_vector@@Base+0xa0>
   344a4:	bl	14038 <__assert_fail@plt>
   344a8:	mvn	r2, #3
   344ac:	add	r1, r1, #1
   344b0:	mov	r0, r4
   344b4:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   344b8:	cmp	r0, #0
   344bc:	beq	34488 <flatcc_builder_extend_vector@@Base+0x58>
   344c0:	mov	r0, #0
   344c4:	pop	{r4, r5, r6, pc}
   344c8:	muleq	r5, r0, r0
   344cc:			; <UNDEFINED> instruction: 0x000554b0
   344d0:	andeq	r5, r5, ip, asr #11

000344d4 <flatcc_builder_vector_push@@Base>:
   344d4:	push	{r4, r5, r6, r7, r8, lr}
   344d8:	ldr	r3, [r0, #32]
   344dc:	ldrh	r2, [r3, #14]
   344e0:	cmp	r2, #4
   344e4:	bne	3454c <flatcc_builder_vector_push@@Base+0x78>
   344e8:	mov	r4, r0
   344ec:	mov	r6, r1
   344f0:	ldr	r2, [r3, #20]
   344f4:	ldr	r1, [r3, #24]
   344f8:	cmp	r2, r1
   344fc:	bhi	34560 <flatcc_builder_vector_push@@Base+0x8c>
   34500:	add	r2, r2, #1
   34504:	str	r2, [r3, #20]
   34508:	ldr	r3, [r0, #32]
   3450c:	ldr	r7, [r3, #16]
   34510:	ldr	r5, [r0, #20]
   34514:	add	r1, r7, r5
   34518:	str	r1, [r0, #20]
   3451c:	ldr	r3, [r0, #24]
   34520:	cmp	r1, r3
   34524:	bcs	34574 <flatcc_builder_vector_push@@Base+0xa0>
   34528:	ldr	r4, [r4, #16]
   3452c:	adds	r4, r4, r5
   34530:	beq	34544 <flatcc_builder_vector_push@@Base+0x70>
   34534:	mov	r2, r7
   34538:	mov	r1, r6
   3453c:	mov	r0, r4
   34540:	bl	13edc <memcpy@plt>
   34544:	mov	r0, r4
   34548:	pop	{r4, r5, r6, r7, r8, pc}
   3454c:	ldr	r3, [pc, #60]	; 34590 <flatcc_builder_vector_push@@Base+0xbc>
   34550:	ldr	r2, [pc, #60]	; 34594 <flatcc_builder_vector_push@@Base+0xc0>
   34554:	ldr	r1, [pc, #60]	; 34598 <flatcc_builder_vector_push@@Base+0xc4>
   34558:	ldr	r0, [pc, #60]	; 3459c <flatcc_builder_vector_push@@Base+0xc8>
   3455c:	bl	14038 <__assert_fail@plt>
   34560:	ldr	r3, [pc, #40]	; 34590 <flatcc_builder_vector_push@@Base+0xbc>
   34564:	mov	r2, #908	; 0x38c
   34568:	ldr	r1, [pc, #40]	; 34598 <flatcc_builder_vector_push@@Base+0xc4>
   3456c:	ldr	r0, [pc, #44]	; 345a0 <flatcc_builder_vector_push@@Base+0xcc>
   34570:	bl	14038 <__assert_fail@plt>
   34574:	mvn	r2, #3
   34578:	add	r1, r1, #1
   3457c:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   34580:	cmp	r0, #0
   34584:	beq	34528 <flatcc_builder_vector_push@@Base+0x54>
   34588:	mov	r4, #0
   3458c:	b	34544 <flatcc_builder_vector_push@@Base+0x70>
   34590:	andeq	r5, r5, r4, lsr #1
   34594:	andeq	r0, r0, fp, lsl #7
   34598:			; <UNDEFINED> instruction: 0x000554b0
   3459c:	andeq	r5, r5, r8, ror #11
   345a0:	andeq	r5, r5, r4, lsl r6

000345a4 <flatcc_builder_append_vector@@Base>:
   345a4:	push	{r4, r5, r6, r7, r8, lr}
   345a8:	mov	r5, r1
   345ac:	ldr	r1, [r0, #32]
   345b0:	ldrh	r3, [r1, #14]
   345b4:	cmp	r3, #4
   345b8:	bne	34634 <flatcc_builder_append_vector@@Base+0x90>
   345bc:	mov	r4, r0
   345c0:	ldr	r3, [r1, #20]
   345c4:	add	r0, r2, r3
   345c8:	ldr	ip, [r1, #24]
   345cc:	cmp	r3, r0
   345d0:	movls	r3, #0
   345d4:	movhi	r3, #1
   345d8:	cmp	ip, r0
   345dc:	orrcc	r3, r3, #1
   345e0:	cmp	r3, #0
   345e4:	bne	34648 <flatcc_builder_append_vector@@Base+0xa4>
   345e8:	str	r0, [r1, #20]
   345ec:	ldr	r3, [r4, #32]
   345f0:	ldr	r6, [r3, #16]
   345f4:	mul	r6, r6, r2
   345f8:	ldr	r7, [r4, #20]
   345fc:	add	r1, r6, r7
   34600:	str	r1, [r4, #20]
   34604:	ldr	r3, [r4, #24]
   34608:	cmp	r1, r3
   3460c:	bcs	3465c <flatcc_builder_append_vector@@Base+0xb8>
   34610:	ldr	r4, [r4, #16]
   34614:	adds	r4, r4, r7
   34618:	beq	3462c <flatcc_builder_append_vector@@Base+0x88>
   3461c:	mov	r2, r6
   34620:	mov	r1, r5
   34624:	mov	r0, r4
   34628:	bl	13edc <memcpy@plt>
   3462c:	mov	r0, r4
   34630:	pop	{r4, r5, r6, r7, r8, pc}
   34634:	ldr	r3, [pc, #64]	; 3467c <flatcc_builder_append_vector@@Base+0xd8>
   34638:	ldr	r2, [pc, #64]	; 34680 <flatcc_builder_append_vector@@Base+0xdc>
   3463c:	ldr	r1, [pc, #64]	; 34684 <flatcc_builder_append_vector@@Base+0xe0>
   34640:	ldr	r0, [pc, #64]	; 34688 <flatcc_builder_append_vector@@Base+0xe4>
   34644:	bl	14038 <__assert_fail@plt>
   34648:	ldr	r3, [pc, #60]	; 3468c <flatcc_builder_append_vector@@Base+0xe8>
   3464c:	mov	r2, #892	; 0x37c
   34650:	ldr	r1, [pc, #44]	; 34684 <flatcc_builder_append_vector@@Base+0xe0>
   34654:	ldr	r0, [pc, #52]	; 34690 <flatcc_builder_append_vector@@Base+0xec>
   34658:	bl	14038 <__assert_fail@plt>
   3465c:	mvn	r2, #3
   34660:	add	r1, r1, #1
   34664:	mov	r0, r4
   34668:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   3466c:	cmp	r0, #0
   34670:	beq	34610 <flatcc_builder_append_vector@@Base+0x6c>
   34674:	mov	r4, #0
   34678:	b	3462c <flatcc_builder_append_vector@@Base+0x88>
   3467c:	andeq	r5, r5, r0, asr #1
   34680:	muleq	r0, r3, r3
   34684:			; <UNDEFINED> instruction: 0x000554b0
   34688:	andeq	r5, r5, r8, ror #11
   3468c:	muleq	r5, r0, r0
   34690:	andeq	r5, r5, ip, asr #11

00034694 <flatcc_builder_extend_offset_vector@@Base>:
   34694:	push	{r4, r5, r6, lr}
   34698:	mov	r4, r0
   3469c:	ldr	r2, [r0, #32]
   346a0:	ldr	r3, [r2, #20]
   346a4:	adds	r3, r1, r3
   346a8:	movcs	ip, #1
   346ac:	movcc	ip, #0
   346b0:	cmn	r3, #-1073741823	; 0xc0000001
   346b4:	movls	r0, #0
   346b8:	movhi	r0, #1
   346bc:	orrs	r0, ip, r0
   346c0:	bne	346ec <flatcc_builder_extend_offset_vector@@Base+0x58>
   346c4:	str	r3, [r2, #20]
   346c8:	ldr	r5, [r4, #20]
   346cc:	add	r1, r5, r1, lsl #2
   346d0:	str	r1, [r4, #20]
   346d4:	ldr	r3, [r4, #24]
   346d8:	cmp	r1, r3
   346dc:	bcs	34700 <flatcc_builder_extend_offset_vector@@Base+0x6c>
   346e0:	ldr	r0, [r4, #16]
   346e4:	add	r0, r0, r5
   346e8:	pop	{r4, r5, r6, pc}
   346ec:	ldr	r3, [pc, #44]	; 34720 <flatcc_builder_extend_offset_vector@@Base+0x8c>
   346f0:	mov	r2, #892	; 0x37c
   346f4:	ldr	r1, [pc, #40]	; 34724 <flatcc_builder_extend_offset_vector@@Base+0x90>
   346f8:	ldr	r0, [pc, #40]	; 34728 <flatcc_builder_extend_offset_vector@@Base+0x94>
   346fc:	bl	14038 <__assert_fail@plt>
   34700:	mvn	r2, #3
   34704:	add	r1, r1, #1
   34708:	mov	r0, r4
   3470c:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   34710:	cmp	r0, #0
   34714:	beq	346e0 <flatcc_builder_extend_offset_vector@@Base+0x4c>
   34718:	mov	r0, #0
   3471c:	pop	{r4, r5, r6, pc}
   34720:	muleq	r5, r0, r0
   34724:			; <UNDEFINED> instruction: 0x000554b0
   34728:	andeq	r5, r5, ip, asr #11

0003472c <flatcc_builder_offset_vector_push@@Base>:
   3472c:	push	{r4, r5, r6, lr}
   34730:	ldr	r2, [r0, #32]
   34734:	ldrh	r3, [r2, #14]
   34738:	cmp	r3, #5
   3473c:	bne	34784 <flatcc_builder_offset_vector_push@@Base+0x58>
   34740:	mov	r4, r0
   34744:	mov	r6, r1
   34748:	ldr	r3, [r2, #20]
   3474c:	cmn	r3, #-1073741823	; 0xc0000001
   34750:	beq	347b4 <flatcc_builder_offset_vector_push@@Base+0x88>
   34754:	add	r3, r3, #1
   34758:	str	r3, [r2, #20]
   3475c:	ldr	r5, [r0, #20]
   34760:	add	r3, r5, #4
   34764:	str	r3, [r0, #20]
   34768:	ldr	r2, [r0, #24]
   3476c:	cmp	r3, r2
   34770:	bcs	34798 <flatcc_builder_offset_vector_push@@Base+0x6c>
   34774:	ldr	r3, [r4, #16]
   34778:	adds	r0, r3, r5
   3477c:	strne	r6, [r3, r5]
   34780:	pop	{r4, r5, r6, pc}
   34784:	ldr	r3, [pc, #48]	; 347bc <flatcc_builder_offset_vector_push@@Base+0x90>
   34788:	ldr	r2, [pc, #48]	; 347c0 <flatcc_builder_offset_vector_push@@Base+0x94>
   3478c:	ldr	r1, [pc, #48]	; 347c4 <flatcc_builder_offset_vector_push@@Base+0x98>
   34790:	ldr	r0, [pc, #48]	; 347c8 <flatcc_builder_offset_vector_push@@Base+0x9c>
   34794:	bl	14038 <__assert_fail@plt>
   34798:	mvn	r2, #3
   3479c:	add	r1, r5, #5
   347a0:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   347a4:	cmp	r0, #0
   347a8:	beq	34774 <flatcc_builder_offset_vector_push@@Base+0x48>
   347ac:	mov	r0, #0
   347b0:	pop	{r4, r5, r6, pc}
   347b4:	mov	r0, #0
   347b8:	pop	{r4, r5, r6, pc}
   347bc:	andeq	r5, r5, r0, ror #1
   347c0:	andeq	r0, r0, r6, lsr #7
   347c4:			; <UNDEFINED> instruction: 0x000554b0
   347c8:	andeq	r5, r5, r4, asr r6

000347cc <flatcc_builder_append_offset_vector@@Base>:
   347cc:	push	{r4, r5, r6, r7, r8, lr}
   347d0:	mov	r6, r1
   347d4:	ldr	r1, [r0, #32]
   347d8:	ldrh	r3, [r1, #14]
   347dc:	cmp	r3, #5
   347e0:	bne	34850 <flatcc_builder_append_offset_vector@@Base+0x84>
   347e4:	mov	r5, r0
   347e8:	ldr	r3, [r1, #20]
   347ec:	adds	r3, r2, r3
   347f0:	movcs	ip, #1
   347f4:	movcc	ip, #0
   347f8:	cmn	r3, #-1073741823	; 0xc0000001
   347fc:	movls	r0, #0
   34800:	movhi	r0, #1
   34804:	orrs	r0, ip, r0
   34808:	bne	34864 <flatcc_builder_append_offset_vector@@Base+0x98>
   3480c:	str	r3, [r1, #20]
   34810:	lsl	r4, r2, #2
   34814:	ldr	r7, [r5, #20]
   34818:	add	r1, r4, r7
   3481c:	str	r1, [r5, #20]
   34820:	ldr	r3, [r5, #24]
   34824:	cmp	r1, r3
   34828:	bcs	34878 <flatcc_builder_append_offset_vector@@Base+0xac>
   3482c:	ldr	r5, [r5, #16]
   34830:	adds	r5, r5, r7
   34834:	beq	34848 <flatcc_builder_append_offset_vector@@Base+0x7c>
   34838:	mov	r2, r4
   3483c:	mov	r1, r6
   34840:	mov	r0, r5
   34844:	bl	13edc <memcpy@plt>
   34848:	mov	r0, r5
   3484c:	pop	{r4, r5, r6, r7, r8, pc}
   34850:	ldr	r3, [pc, #64]	; 34898 <flatcc_builder_append_offset_vector@@Base+0xcc>
   34854:	mov	r2, #948	; 0x3b4
   34858:	ldr	r1, [pc, #60]	; 3489c <flatcc_builder_append_offset_vector@@Base+0xd0>
   3485c:	ldr	r0, [pc, #60]	; 348a0 <flatcc_builder_append_offset_vector@@Base+0xd4>
   34860:	bl	14038 <__assert_fail@plt>
   34864:	ldr	r3, [pc, #56]	; 348a4 <flatcc_builder_append_offset_vector@@Base+0xd8>
   34868:	mov	r2, #892	; 0x37c
   3486c:	ldr	r1, [pc, #40]	; 3489c <flatcc_builder_append_offset_vector@@Base+0xd0>
   34870:	ldr	r0, [pc, #48]	; 348a8 <flatcc_builder_append_offset_vector@@Base+0xdc>
   34874:	bl	14038 <__assert_fail@plt>
   34878:	mvn	r2, #3
   3487c:	add	r1, r1, #1
   34880:	mov	r0, r5
   34884:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   34888:	cmp	r0, #0
   3488c:	beq	3482c <flatcc_builder_append_offset_vector@@Base+0x60>
   34890:	mov	r5, #0
   34894:	b	34848 <flatcc_builder_append_offset_vector@@Base+0x7c>
   34898:	andeq	r5, r5, r4, lsl #2
   3489c:			; <UNDEFINED> instruction: 0x000554b0
   348a0:	andeq	r5, r5, r4, asr r6
   348a4:	muleq	r5, r0, r0
   348a8:	andeq	r5, r5, ip, asr #11

000348ac <flatcc_builder_extend_string@@Base>:
   348ac:	push	{r4, r5, r6, lr}
   348b0:	ldr	r2, [r0, #32]
   348b4:	ldrh	r3, [r2, #14]
   348b8:	cmp	r3, #6
   348bc:	bne	348f8 <flatcc_builder_extend_string@@Base+0x4c>
   348c0:	mov	r4, r0
   348c4:	ldr	r3, [r2, #20]
   348c8:	adds	r3, r1, r3
   348cc:	bcs	3490c <flatcc_builder_extend_string@@Base+0x60>
   348d0:	str	r3, [r2, #20]
   348d4:	ldr	r5, [r0, #20]
   348d8:	add	r1, r1, r5
   348dc:	str	r1, [r0, #20]
   348e0:	ldr	r3, [r0, #24]
   348e4:	cmp	r1, r3
   348e8:	bcs	34920 <flatcc_builder_extend_string@@Base+0x74>
   348ec:	ldr	r0, [r4, #16]
   348f0:	add	r0, r0, r5
   348f4:	pop	{r4, r5, r6, pc}
   348f8:	ldr	r3, [pc, #60]	; 3493c <flatcc_builder_extend_string@@Base+0x90>
   348fc:	ldr	r2, [pc, #60]	; 34940 <flatcc_builder_extend_string@@Base+0x94>
   34900:	ldr	r1, [pc, #60]	; 34944 <flatcc_builder_extend_string@@Base+0x98>
   34904:	ldr	r0, [pc, #60]	; 34948 <flatcc_builder_extend_string@@Base+0x9c>
   34908:	bl	14038 <__assert_fail@plt>
   3490c:	ldr	r3, [pc, #56]	; 3494c <flatcc_builder_extend_string@@Base+0xa0>
   34910:	mov	r2, #892	; 0x37c
   34914:	ldr	r1, [pc, #40]	; 34944 <flatcc_builder_extend_string@@Base+0x98>
   34918:	ldr	r0, [pc, #48]	; 34950 <flatcc_builder_extend_string@@Base+0xa4>
   3491c:	bl	14038 <__assert_fail@plt>
   34920:	mvn	r2, #3
   34924:	add	r1, r1, #1
   34928:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   3492c:	cmp	r0, #0
   34930:	beq	348ec <flatcc_builder_extend_string@@Base+0x40>
   34934:	mov	r0, #0
   34938:	pop	{r4, r5, r6, pc}
   3493c:	andeq	r5, r5, r8, lsr #2
   34940:			; <UNDEFINED> instruction: 0x000003bd
   34944:			; <UNDEFINED> instruction: 0x000554b0
   34948:	andeq	r5, r5, r8, lsl #13
   3494c:	muleq	r5, r0, r0
   34950:	andeq	r5, r5, ip, asr #11

00034954 <flatcc_builder_append_string@@Base>:
   34954:	push	{r4, r5, r6, r7, r8, lr}
   34958:	mov	r5, r2
   3495c:	ldr	r2, [r0, #32]
   34960:	ldrh	r3, [r2, #14]
   34964:	cmp	r3, #6
   34968:	bne	349c0 <flatcc_builder_append_string@@Base+0x6c>
   3496c:	mov	r4, r0
   34970:	mov	r6, r1
   34974:	ldr	r3, [r2, #20]
   34978:	adds	r3, r5, r3
   3497c:	bcs	349d4 <flatcc_builder_append_string@@Base+0x80>
   34980:	str	r3, [r2, #20]
   34984:	ldr	r7, [r0, #20]
   34988:	add	r1, r5, r7
   3498c:	str	r1, [r0, #20]
   34990:	ldr	r3, [r0, #24]
   34994:	cmp	r1, r3
   34998:	bcs	349e8 <flatcc_builder_append_string@@Base+0x94>
   3499c:	ldr	r4, [r4, #16]
   349a0:	adds	r4, r4, r7
   349a4:	beq	349b8 <flatcc_builder_append_string@@Base+0x64>
   349a8:	mov	r2, r5
   349ac:	mov	r1, r6
   349b0:	mov	r0, r4
   349b4:	bl	13edc <memcpy@plt>
   349b8:	mov	r0, r4
   349bc:	pop	{r4, r5, r6, r7, r8, pc}
   349c0:	ldr	r3, [pc, #60]	; 34a04 <flatcc_builder_append_string@@Base+0xb0>
   349c4:	ldr	r2, [pc, #60]	; 34a08 <flatcc_builder_append_string@@Base+0xb4>
   349c8:	ldr	r1, [pc, #60]	; 34a0c <flatcc_builder_append_string@@Base+0xb8>
   349cc:	ldr	r0, [pc, #60]	; 34a10 <flatcc_builder_append_string@@Base+0xbc>
   349d0:	bl	14038 <__assert_fail@plt>
   349d4:	ldr	r3, [pc, #56]	; 34a14 <flatcc_builder_append_string@@Base+0xc0>
   349d8:	mov	r2, #892	; 0x37c
   349dc:	ldr	r1, [pc, #40]	; 34a0c <flatcc_builder_append_string@@Base+0xb8>
   349e0:	ldr	r0, [pc, #48]	; 34a18 <flatcc_builder_append_string@@Base+0xc4>
   349e4:	bl	14038 <__assert_fail@plt>
   349e8:	mvn	r2, #3
   349ec:	add	r1, r1, #1
   349f0:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   349f4:	cmp	r0, #0
   349f8:	beq	3499c <flatcc_builder_append_string@@Base+0x48>
   349fc:	mov	r4, #0
   34a00:	b	349b8 <flatcc_builder_append_string@@Base+0x64>
   34a04:	andeq	r5, r5, r8, asr #2
   34a08:	andeq	r0, r0, r6, asr #7
   34a0c:			; <UNDEFINED> instruction: 0x000554b0
   34a10:	andeq	r5, r5, r8, lsl #13
   34a14:	muleq	r5, r0, r0
   34a18:	andeq	r5, r5, ip, asr #11

00034a1c <flatcc_builder_append_string_str@@Base>:
   34a1c:	push	{r4, r5, r6, lr}
   34a20:	mov	r5, r0
   34a24:	mov	r4, r1
   34a28:	mov	r0, r1
   34a2c:	bl	13f78 <strlen@plt>
   34a30:	mov	r2, r0
   34a34:	mov	r1, r4
   34a38:	mov	r0, r5
   34a3c:	bl	34954 <flatcc_builder_append_string@@Base>
   34a40:	pop	{r4, r5, r6, pc}

00034a44 <flatcc_builder_append_string_strn@@Base>:
   34a44:	push	{r4, r5, r6, lr}
   34a48:	mov	r6, r0
   34a4c:	mov	r4, r1
   34a50:	mov	r5, r2
   34a54:	mov	r1, #0
   34a58:	mov	r0, r4
   34a5c:	bl	13fc0 <memchr@plt>
   34a60:	cmp	r0, #0
   34a64:	subne	r5, r0, r4
   34a68:	mov	r2, r5
   34a6c:	mov	r1, r4
   34a70:	mov	r0, r6
   34a74:	bl	34954 <flatcc_builder_append_string@@Base>
   34a78:	pop	{r4, r5, r6, pc}

00034a7c <flatcc_builder_truncate_vector@@Base>:
   34a7c:	push	{r4, lr}
   34a80:	ldr	ip, [r0, #32]
   34a84:	ldrh	r3, [ip, #14]
   34a88:	cmp	r3, #4
   34a8c:	bne	34ad4 <flatcc_builder_truncate_vector@@Base+0x58>
   34a90:	ldr	r3, [ip, #20]
   34a94:	cmp	r3, r1
   34a98:	bcc	34ae8 <flatcc_builder_truncate_vector@@Base+0x6c>
   34a9c:	sub	r3, r3, r1
   34aa0:	str	r3, [ip, #20]
   34aa4:	ldr	r3, [r0, #32]
   34aa8:	ldr	r2, [r3, #16]
   34aac:	mul	r2, r2, r1
   34ab0:	ldr	r3, [r0, #20]
   34ab4:	sub	r3, r3, r2
   34ab8:	str	r3, [r0, #20]
   34abc:	ldr	r0, [r0, #16]
   34ac0:	mov	r1, #0
   34ac4:	add	r0, r0, r3
   34ac8:	bl	13f9c <memset@plt>
   34acc:	mov	r0, #0
   34ad0:	pop	{r4, pc}
   34ad4:	ldr	r3, [pc, #32]	; 34afc <flatcc_builder_truncate_vector@@Base+0x80>
   34ad8:	ldr	r2, [pc, #32]	; 34b00 <flatcc_builder_truncate_vector@@Base+0x84>
   34adc:	ldr	r1, [pc, #32]	; 34b04 <flatcc_builder_truncate_vector@@Base+0x88>
   34ae0:	ldr	r0, [pc, #32]	; 34b08 <flatcc_builder_truncate_vector@@Base+0x8c>
   34ae4:	bl	14038 <__assert_fail@plt>
   34ae8:	ldr	r3, [pc, #12]	; 34afc <flatcc_builder_truncate_vector@@Base+0x80>
   34aec:	ldr	r2, [pc, #24]	; 34b0c <flatcc_builder_truncate_vector@@Base+0x90>
   34af0:	ldr	r1, [pc, #12]	; 34b04 <flatcc_builder_truncate_vector@@Base+0x88>
   34af4:	ldr	r0, [pc, #20]	; 34b10 <flatcc_builder_truncate_vector@@Base+0x94>
   34af8:	bl	14038 <__assert_fail@plt>
   34afc:	andeq	r5, r5, r8, ror #2
   34b00:	ldrdeq	r0, [r0], -r9
   34b04:			; <UNDEFINED> instruction: 0x000554b0
   34b08:	andeq	r5, r5, r8, ror #11
   34b0c:	ldrdeq	r0, [r0], -sl
   34b10:			; <UNDEFINED> instruction: 0x000556b4

00034b14 <flatcc_builder_truncate_offset_vector@@Base>:
   34b14:	push	{r4, lr}
   34b18:	ldr	ip, [r0, #32]
   34b1c:	ldrh	r3, [ip, #14]
   34b20:	cmp	r3, #5
   34b24:	bne	34b6c <flatcc_builder_truncate_offset_vector@@Base+0x58>
   34b28:	ldr	r3, [ip, #20]
   34b2c:	cmp	r3, r1
   34b30:	bcc	34b80 <flatcc_builder_truncate_offset_vector@@Base+0x6c>
   34b34:	sub	r3, r3, r1
   34b38:	str	r3, [ip, #20]
   34b3c:	ldr	r3, [r0, #32]
   34b40:	ldr	r2, [r3, #16]
   34b44:	mul	r2, r2, r1
   34b48:	ldr	r3, [r0, #20]
   34b4c:	sub	r3, r3, r2
   34b50:	str	r3, [r0, #20]
   34b54:	ldr	r0, [r0, #16]
   34b58:	mov	r1, #0
   34b5c:	add	r0, r0, r3
   34b60:	bl	13f9c <memset@plt>
   34b64:	mov	r0, #0
   34b68:	pop	{r4, pc}
   34b6c:	ldr	r3, [pc, #32]	; 34b94 <flatcc_builder_truncate_offset_vector@@Base+0x80>
   34b70:	ldr	r2, [pc, #32]	; 34b98 <flatcc_builder_truncate_offset_vector@@Base+0x84>
   34b74:	ldr	r1, [pc, #32]	; 34b9c <flatcc_builder_truncate_offset_vector@@Base+0x88>
   34b78:	ldr	r0, [pc, #32]	; 34ba0 <flatcc_builder_truncate_offset_vector@@Base+0x8c>
   34b7c:	bl	14038 <__assert_fail@plt>
   34b80:	ldr	r3, [pc, #12]	; 34b94 <flatcc_builder_truncate_offset_vector@@Base+0x80>
   34b84:	ldr	r2, [pc, #24]	; 34ba4 <flatcc_builder_truncate_offset_vector@@Base+0x90>
   34b88:	ldr	r1, [pc, #12]	; 34b9c <flatcc_builder_truncate_offset_vector@@Base+0x88>
   34b8c:	ldr	r0, [pc, #20]	; 34ba8 <flatcc_builder_truncate_offset_vector@@Base+0x94>
   34b90:	bl	14038 <__assert_fail@plt>
   34b94:	andeq	r5, r5, r8, lsl #3
   34b98:	andeq	r0, r0, r2, ror #7
   34b9c:			; <UNDEFINED> instruction: 0x000554b0
   34ba0:	andeq	r5, r5, r4, asr r6
   34ba4:	andeq	r0, r0, r3, ror #7
   34ba8:	ldrdeq	r5, [r5], -r8

00034bac <flatcc_builder_truncate_string@@Base>:
   34bac:	push	{r4, lr}
   34bb0:	ldr	r2, [r0, #32]
   34bb4:	ldrh	r3, [r2, #14]
   34bb8:	cmp	r3, #6
   34bbc:	bne	34bfc <flatcc_builder_truncate_string@@Base+0x50>
   34bc0:	ldr	r3, [r2, #20]
   34bc4:	cmp	r3, r1
   34bc8:	bcc	34c10 <flatcc_builder_truncate_string@@Base+0x64>
   34bcc:	sub	r3, r3, r1
   34bd0:	str	r3, [r2, #20]
   34bd4:	ldr	r3, [r0, #20]
   34bd8:	sub	r3, r3, r1
   34bdc:	str	r3, [r0, #20]
   34be0:	ldr	r0, [r0, #16]
   34be4:	mov	r2, r1
   34be8:	mov	r1, #0
   34bec:	add	r0, r0, r3
   34bf0:	bl	13f9c <memset@plt>
   34bf4:	mov	r0, #0
   34bf8:	pop	{r4, pc}
   34bfc:	ldr	r3, [pc, #32]	; 34c24 <flatcc_builder_truncate_string@@Base+0x78>
   34c00:	ldr	r2, [pc, #32]	; 34c28 <flatcc_builder_truncate_string@@Base+0x7c>
   34c04:	ldr	r1, [pc, #32]	; 34c2c <flatcc_builder_truncate_string@@Base+0x80>
   34c08:	ldr	r0, [pc, #32]	; 34c30 <flatcc_builder_truncate_string@@Base+0x84>
   34c0c:	bl	14038 <__assert_fail@plt>
   34c10:	ldr	r3, [pc, #12]	; 34c24 <flatcc_builder_truncate_string@@Base+0x78>
   34c14:	mov	r2, #1004	; 0x3ec
   34c18:	ldr	r1, [pc, #12]	; 34c2c <flatcc_builder_truncate_string@@Base+0x80>
   34c1c:	ldr	r0, [pc, #16]	; 34c34 <flatcc_builder_truncate_string@@Base+0x88>
   34c20:	bl	14038 <__assert_fail@plt>
   34c24:			; <UNDEFINED> instruction: 0x000551b0
   34c28:	andeq	r0, r0, fp, ror #7
   34c2c:			; <UNDEFINED> instruction: 0x000554b0
   34c30:	andeq	r5, r5, r8, lsl #13
   34c34:	andeq	r5, r5, r4, lsl r7

00034c38 <flatcc_builder_start_vector@@Base>:
   34c38:	push	{r4, r5, r6, lr}
   34c3c:	mov	r4, r0
   34c40:	mov	r6, r1
   34c44:	mov	r5, r3
   34c48:	cmp	r2, #4
   34c4c:	movcs	r1, r2
   34c50:	movcc	r1, #4
   34c54:	bl	333a8 <flatcc_builder_default_alloc@@Base+0x22c>
   34c58:	cmp	r0, #0
   34c5c:	bne	34cbc <flatcc_builder_start_vector@@Base+0x84>
   34c60:	ldr	r3, [r4, #32]
   34c64:	str	r6, [r3, #16]
   34c68:	ldr	r3, [r4, #32]
   34c6c:	mov	r2, #0
   34c70:	str	r2, [r3, #20]
   34c74:	ldr	r3, [r4, #32]
   34c78:	str	r5, [r3, #24]
   34c7c:	ldr	r3, [r4, #32]
   34c80:	mov	r2, #4
   34c84:	strh	r2, [r3, #14]
   34c88:	ldr	r1, [r4, #28]
   34c8c:	ldr	r2, [r4, #60]	; 0x3c
   34c90:	add	r2, r2, r1
   34c94:	str	r2, [r4, #16]
   34c98:	ldr	r3, [r4, #64]	; 0x40
   34c9c:	sub	r3, r3, r1
   34ca0:	cmn	r3, #4
   34ca4:	mvnhi	r3, #3
   34ca8:	str	r3, [r4, #24]
   34cac:	ldr	r3, [r4, #32]
   34cb0:	mvn	r2, #3
   34cb4:	str	r2, [r3, #4]
   34cb8:	pop	{r4, r5, r6, pc}
   34cbc:	mvn	r0, #0
   34cc0:	pop	{r4, r5, r6, pc}

00034cc4 <flatcc_builder_start_offset_vector@@Base>:
   34cc4:	push	{r4, lr}
   34cc8:	mov	r4, r0
   34ccc:	mov	r1, #4
   34cd0:	bl	333a8 <flatcc_builder_default_alloc@@Base+0x22c>
   34cd4:	cmp	r0, #0
   34cd8:	bne	34d34 <flatcc_builder_start_offset_vector@@Base+0x70>
   34cdc:	ldr	r3, [r4, #32]
   34ce0:	mov	r2, #4
   34ce4:	str	r2, [r3, #16]
   34ce8:	ldr	r3, [r4, #32]
   34cec:	mov	r2, #0
   34cf0:	str	r2, [r3, #20]
   34cf4:	ldr	r3, [r4, #32]
   34cf8:	mov	r2, #5
   34cfc:	strh	r2, [r3, #14]
   34d00:	ldr	r1, [r4, #28]
   34d04:	ldr	r2, [r4, #60]	; 0x3c
   34d08:	add	r2, r2, r1
   34d0c:	str	r2, [r4, #16]
   34d10:	ldr	r3, [r4, #64]	; 0x40
   34d14:	sub	r3, r3, r1
   34d18:	cmn	r3, #4
   34d1c:	mvnhi	r3, #3
   34d20:	str	r3, [r4, #24]
   34d24:	ldr	r3, [r4, #32]
   34d28:	mvn	r2, #3
   34d2c:	str	r2, [r3, #4]
   34d30:	pop	{r4, pc}
   34d34:	mvn	r0, #0
   34d38:	pop	{r4, pc}

00034d3c <flatcc_builder_start_string@@Base>:
   34d3c:	push	{r4, lr}
   34d40:	mov	r4, r0
   34d44:	mov	r1, #1
   34d48:	bl	333a8 <flatcc_builder_default_alloc@@Base+0x22c>
   34d4c:	cmp	r0, #0
   34d50:	bne	34dac <flatcc_builder_start_string@@Base+0x70>
   34d54:	ldr	r3, [r4, #32]
   34d58:	mov	r2, #1
   34d5c:	str	r2, [r3, #16]
   34d60:	ldr	r3, [r4, #32]
   34d64:	mov	r2, #0
   34d68:	str	r2, [r3, #20]
   34d6c:	ldr	r3, [r4, #32]
   34d70:	mov	r2, #6
   34d74:	strh	r2, [r3, #14]
   34d78:	ldr	r1, [r4, #28]
   34d7c:	ldr	r2, [r4, #60]	; 0x3c
   34d80:	add	r2, r2, r1
   34d84:	str	r2, [r4, #16]
   34d88:	ldr	r3, [r4, #64]	; 0x40
   34d8c:	sub	r3, r3, r1
   34d90:	cmn	r3, #4
   34d94:	mvnhi	r3, #3
   34d98:	str	r3, [r4, #24]
   34d9c:	ldr	r3, [r4, #32]
   34da0:	mvn	r2, #3
   34da4:	str	r2, [r3, #4]
   34da8:	pop	{r4, pc}
   34dac:	mvn	r0, #0
   34db0:	pop	{r4, pc}

00034db4 <flatcc_builder_reserve_table@@Base>:
   34db4:	push	{r4, r5, r6, r7, lr}
   34db8:	sub	sp, sp, #12
   34dbc:	cmp	r1, #0
   34dc0:	blt	34e4c <flatcc_builder_reserve_table@@Base+0x98>
   34dc4:	mov	r5, r0
   34dc8:	ldr	r2, [r0, #32]
   34dcc:	ldrh	r6, [r2, #28]
   34dd0:	ldr	r3, [r2, #16]
   34dd4:	add	r6, r3, r6, lsl #1
   34dd8:	add	r1, r1, #2
   34ddc:	lsl	r4, r1, #1
   34de0:	add	r2, r6, r4
   34de4:	ldr	r3, [r0, #56]	; 0x38
   34de8:	cmp	r2, r3
   34dec:	bhi	34e60 <flatcc_builder_reserve_table@@Base+0xac>
   34df0:	ldr	r3, [r5, #52]	; 0x34
   34df4:	adds	r3, r3, r6
   34df8:	moveq	r3, #0
   34dfc:	streq	r3, [r5, #4]
   34e00:	mvneq	r0, #0
   34e04:	beq	34e44 <flatcc_builder_reserve_table@@Base+0x90>
   34e08:	add	r3, r3, #4
   34e0c:	str	r3, [r5, #4]
   34e10:	ldr	r3, [r5, #32]
   34e14:	ldr	r6, [r3, #20]
   34e18:	add	r2, r4, r6
   34e1c:	sub	r2, r2, #3
   34e20:	ldr	r3, [r5, #80]	; 0x50
   34e24:	cmp	r2, r3
   34e28:	bhi	34e98 <flatcc_builder_reserve_table@@Base+0xe4>
   34e2c:	ldr	r0, [r5, #76]	; 0x4c
   34e30:	add	r0, r0, r6
   34e34:	str	r0, [r5]
   34e38:	cmp	r0, #0
   34e3c:	movne	r0, #0
   34e40:	mvneq	r0, #0
   34e44:	add	sp, sp, #12
   34e48:	pop	{r4, r5, r6, r7, pc}
   34e4c:	ldr	r3, [pc, #124]	; 34ed0 <flatcc_builder_reserve_table@@Base+0x11c>
   34e50:	ldr	r2, [pc, #124]	; 34ed4 <flatcc_builder_reserve_table@@Base+0x120>
   34e54:	ldr	r1, [pc, #124]	; 34ed8 <flatcc_builder_reserve_table@@Base+0x124>
   34e58:	ldr	r0, [pc, #124]	; 34edc <flatcc_builder_reserve_table@@Base+0x128>
   34e5c:	bl	14038 <__assert_fail@plt>
   34e60:	mov	r3, #0
   34e64:	str	r3, [sp]
   34e68:	ldr	r7, [r0, #48]	; 0x30
   34e6c:	mov	r3, #1
   34e70:	add	r1, r0, #52	; 0x34
   34e74:	ldr	r0, [r0, #40]	; 0x28
   34e78:	blx	r7
   34e7c:	cmp	r0, #0
   34e80:	beq	34df0 <flatcc_builder_reserve_table@@Base+0x3c>
   34e84:	ldr	r3, [pc, #84]	; 34ee0 <flatcc_builder_reserve_table@@Base+0x12c>
   34e88:	mov	r2, #308	; 0x134
   34e8c:	ldr	r1, [pc, #68]	; 34ed8 <flatcc_builder_reserve_table@@Base+0x124>
   34e90:	ldr	r0, [pc, #76]	; 34ee4 <flatcc_builder_reserve_table@@Base+0x130>
   34e94:	bl	14038 <__assert_fail@plt>
   34e98:	mov	r3, #3
   34e9c:	str	r3, [sp]
   34ea0:	ldr	r4, [r5, #48]	; 0x30
   34ea4:	mov	r3, #0
   34ea8:	add	r1, r5, #76	; 0x4c
   34eac:	ldr	r0, [r5, #40]	; 0x28
   34eb0:	blx	r4
   34eb4:	cmp	r0, #0
   34eb8:	beq	34e2c <flatcc_builder_reserve_table@@Base+0x78>
   34ebc:	ldr	r3, [pc, #28]	; 34ee0 <flatcc_builder_reserve_table@@Base+0x12c>
   34ec0:	mov	r2, #308	; 0x134
   34ec4:	ldr	r1, [pc, #12]	; 34ed8 <flatcc_builder_reserve_table@@Base+0x124>
   34ec8:	ldr	r0, [pc, #20]	; 34ee4 <flatcc_builder_reserve_table@@Base+0x130>
   34ecc:	bl	14038 <__assert_fail@plt>
   34ed0:	ldrdeq	r5, [r5], -r0
   34ed4:	andeq	r0, r0, r9, lsr #8
   34ed8:			; <UNDEFINED> instruction: 0x000554b0
   34edc:	andeq	r5, r5, r8, lsr r7
   34ee0:	andeq	r4, r5, ip, ror pc
   34ee4:	andeq	r3, r4, r0, ror lr

00034ee8 <flatcc_builder_start_table@@Base>:
   34ee8:	push	{r4, r5, r6, r7, lr}
   34eec:	sub	sp, sp, #12
   34ef0:	mov	r4, r0
   34ef4:	mov	r5, r1
   34ef8:	mov	r1, #4
   34efc:	bl	333a8 <flatcc_builder_default_alloc@@Base+0x22c>
   34f00:	cmp	r0, #0
   34f04:	bne	35094 <flatcc_builder_start_table@@Base+0x1ac>
   34f08:	ldr	r2, [r4, #32]
   34f0c:	ldr	r3, [r4, #4]
   34f10:	ldr	r1, [r4, #52]	; 0x34
   34f14:	sub	r3, r3, r1
   34f18:	str	r3, [r2, #16]
   34f1c:	ldr	r2, [r4, #32]
   34f20:	ldr	r3, [r4]
   34f24:	ldr	r1, [r4, #76]	; 0x4c
   34f28:	sub	r3, r3, r1
   34f2c:	str	r3, [r2, #20]
   34f30:	ldr	r3, [r4, #32]
   34f34:	ldr	r2, [r4, #12]
   34f38:	str	r2, [r3, #24]
   34f3c:	ldr	r3, [r4, #32]
   34f40:	ldrh	r2, [r4, #8]
   34f44:	strh	r2, [r3, #28]
   34f48:	ldr	r3, [pc, #340]	; 350a4 <flatcc_builder_start_table@@Base+0x1bc>
   34f4c:	str	r3, [r4, #12]
   34f50:	mov	r3, #0
   34f54:	strh	r3, [r4, #8]
   34f58:	ldr	r3, [r4, #32]
   34f5c:	mov	r2, #3
   34f60:	strh	r2, [r3, #14]
   34f64:	ldr	r2, [r4, #32]
   34f68:	ldrh	r6, [r2, #28]
   34f6c:	ldr	r3, [r2, #16]
   34f70:	add	r6, r3, r6, lsl #1
   34f74:	add	r5, r5, #2
   34f78:	lsl	r5, r5, #1
   34f7c:	add	r2, r6, r5
   34f80:	ldr	r3, [r4, #56]	; 0x38
   34f84:	cmp	r2, r3
   34f88:	bhi	35024 <flatcc_builder_start_table@@Base+0x13c>
   34f8c:	ldr	r3, [r4, #52]	; 0x34
   34f90:	adds	r3, r3, r6
   34f94:	moveq	r3, #0
   34f98:	streq	r3, [r4, #4]
   34f9c:	mvneq	r0, #0
   34fa0:	beq	3501c <flatcc_builder_start_table@@Base+0x134>
   34fa4:	add	r3, r3, #4
   34fa8:	str	r3, [r4, #4]
   34fac:	ldr	r3, [r4, #32]
   34fb0:	ldr	r6, [r3, #20]
   34fb4:	sub	r2, r5, #3
   34fb8:	add	r2, r2, r6
   34fbc:	ldr	r3, [r4, #80]	; 0x50
   34fc0:	cmp	r2, r3
   34fc4:	bhi	3505c <flatcc_builder_start_table@@Base+0x174>
   34fc8:	ldr	r0, [r4, #76]	; 0x4c
   34fcc:	add	r0, r0, r6
   34fd0:	str	r0, [r4]
   34fd4:	cmp	r0, #0
   34fd8:	movne	r0, #0
   34fdc:	mvneq	r0, #0
   34fe0:	cmp	r0, #0
   34fe4:	bne	3509c <flatcc_builder_start_table@@Base+0x1b4>
   34fe8:	ldr	r1, [r4, #28]
   34fec:	ldr	r2, [r4, #60]	; 0x3c
   34ff0:	add	r2, r2, r1
   34ff4:	str	r2, [r4, #16]
   34ff8:	ldr	r3, [r4, #64]	; 0x40
   34ffc:	sub	r3, r3, r1
   35000:	ldr	r2, [pc, #160]	; 350a8 <flatcc_builder_start_table@@Base+0x1c0>
   35004:	cmp	r3, r2
   35008:	ldrhi	r3, [pc, #152]	; 350a8 <flatcc_builder_start_table@@Base+0x1c0>
   3500c:	str	r3, [r4, #24]
   35010:	ldr	r3, [r4, #32]
   35014:	ldr	r2, [pc, #140]	; 350a8 <flatcc_builder_start_table@@Base+0x1c0>
   35018:	str	r2, [r3, #4]
   3501c:	add	sp, sp, #12
   35020:	pop	{r4, r5, r6, r7, pc}
   35024:	mov	r3, #0
   35028:	str	r3, [sp]
   3502c:	ldr	r7, [r4, #48]	; 0x30
   35030:	mov	r3, #1
   35034:	add	r1, r4, #52	; 0x34
   35038:	ldr	r0, [r4, #40]	; 0x28
   3503c:	blx	r7
   35040:	cmp	r0, #0
   35044:	beq	34f8c <flatcc_builder_start_table@@Base+0xa4>
   35048:	ldr	r3, [pc, #92]	; 350ac <flatcc_builder_start_table@@Base+0x1c4>
   3504c:	mov	r2, #308	; 0x134
   35050:	ldr	r1, [pc, #88]	; 350b0 <flatcc_builder_start_table@@Base+0x1c8>
   35054:	ldr	r0, [pc, #88]	; 350b4 <flatcc_builder_start_table@@Base+0x1cc>
   35058:	bl	14038 <__assert_fail@plt>
   3505c:	mov	r3, #3
   35060:	str	r3, [sp]
   35064:	ldr	r5, [r4, #48]	; 0x30
   35068:	mov	r3, #0
   3506c:	add	r1, r4, #76	; 0x4c
   35070:	ldr	r0, [r4, #40]	; 0x28
   35074:	blx	r5
   35078:	cmp	r0, #0
   3507c:	beq	34fc8 <flatcc_builder_start_table@@Base+0xe0>
   35080:	ldr	r3, [pc, #36]	; 350ac <flatcc_builder_start_table@@Base+0x1c4>
   35084:	mov	r2, #308	; 0x134
   35088:	ldr	r1, [pc, #32]	; 350b0 <flatcc_builder_start_table@@Base+0x1c8>
   3508c:	ldr	r0, [pc, #32]	; 350b4 <flatcc_builder_start_table@@Base+0x1cc>
   35090:	bl	14038 <__assert_fail@plt>
   35094:	mvn	r0, #0
   35098:	b	3501c <flatcc_builder_start_table@@Base+0x134>
   3509c:	mvn	r0, #0
   350a0:	b	3501c <flatcc_builder_start_table@@Base+0x134>
   350a4:	svccs	0x00693b52
   350a8:	strdeq	pc, [r0], -ip
   350ac:	andeq	r4, r5, ip, ror pc
   350b0:			; <UNDEFINED> instruction: 0x000554b0
   350b4:	andeq	r3, r4, r0, ror lr

000350b8 <flatcc_builder_create_vtable@@Base>:
   350b8:	push	{r4, r5, r6, lr}
   350bc:	sub	sp, sp, #80	; 0x50
   350c0:	mov	r5, r0
   350c4:	mov	r3, #0
   350c8:	str	r3, [sp, #8]
   350cc:	str	r3, [sp, #12]
   350d0:	cmp	r2, #0
   350d4:	beq	35158 <flatcc_builder_create_vtable@@Base+0xa0>
   350d8:	str	r2, [sp, #8]
   350dc:	str	r1, [sp, #16]
   350e0:	str	r2, [sp, #20]
   350e4:	mov	r3, #1
   350e8:	str	r3, [sp, #12]
   350ec:	ldr	r3, [r0, #152]	; 0x98
   350f0:	cmp	r3, #0
   350f4:	bne	35170 <flatcc_builder_create_vtable@@Base+0xb8>
   350f8:	ldr	r3, [r0, #180]	; 0xb4
   350fc:	cmp	r3, #0
   35100:	bne	35170 <flatcc_builder_create_vtable@@Base+0xb8>
   35104:	ldr	r4, [r0, #140]	; 0x8c
   35108:	mov	r3, r2
   3510c:	add	r2, r2, r4
   35110:	str	r2, [r0, #140]	; 0x8c
   35114:	cmp	r4, r2
   35118:	ble	351d0 <flatcc_builder_create_vtable@@Base+0x118>
   3511c:	ldr	r3, [pc, #232]	; 3520c <flatcc_builder_create_vtable@@Base+0x154>
   35120:	ldr	r2, [pc, #232]	; 35210 <flatcc_builder_create_vtable@@Base+0x158>
   35124:	ldr	r1, [pc, #232]	; 35214 <flatcc_builder_create_vtable@@Base+0x15c>
   35128:	ldr	r0, [pc, #232]	; 35218 <flatcc_builder_create_vtable@@Base+0x160>
   3512c:	bl	14038 <__assert_fail@plt>
   35130:	ldr	r3, [pc, #228]	; 3521c <flatcc_builder_create_vtable@@Base+0x164>
   35134:	ldr	r2, [pc, #228]	; 35220 <flatcc_builder_create_vtable@@Base+0x168>
   35138:	ldr	r1, [pc, #212]	; 35214 <flatcc_builder_create_vtable@@Base+0x15c>
   3513c:	ldr	r0, [pc, #212]	; 35218 <flatcc_builder_create_vtable@@Base+0x160>
   35140:	bl	14038 <__assert_fail@plt>
   35144:	ldr	r3, [pc, #208]	; 3521c <flatcc_builder_create_vtable@@Base+0x164>
   35148:	ldr	r2, [pc, #212]	; 35224 <flatcc_builder_create_vtable@@Base+0x16c>
   3514c:	ldr	r1, [pc, #192]	; 35214 <flatcc_builder_create_vtable@@Base+0x15c>
   35150:	ldr	r0, [pc, #192]	; 35218 <flatcc_builder_create_vtable@@Base+0x160>
   35154:	bl	14038 <__assert_fail@plt>
   35158:	ldr	r3, [r0, #152]	; 0x98
   3515c:	cmp	r3, #0
   35160:	bne	35130 <flatcc_builder_create_vtable@@Base+0x78>
   35164:	ldr	r3, [r0, #180]	; 0xb4
   35168:	cmp	r3, #0
   3516c:	beq	351c0 <flatcc_builder_create_vtable@@Base+0x108>
   35170:	ldr	r2, [r5, #136]	; 0x88
   35174:	ldr	r3, [sp, #8]
   35178:	sub	r4, r2, r3
   3517c:	cmp	r2, r4
   35180:	ble	35130 <flatcc_builder_create_vtable@@Base+0x78>
   35184:	str	r3, [sp]
   35188:	ldr	r6, [r5, #44]	; 0x2c
   3518c:	mov	r3, r4
   35190:	ldr	r2, [sp, #12]
   35194:	add	r1, sp, #16
   35198:	ldr	r0, [r5, #36]	; 0x24
   3519c:	blx	r6
   351a0:	cmp	r0, #0
   351a4:	bne	35144 <flatcc_builder_create_vtable@@Base+0x8c>
   351a8:	str	r4, [r5, #136]	; 0x88
   351ac:	cmp	r4, #0
   351b0:	addne	r4, r4, #1
   351b4:	mov	r0, r4
   351b8:	add	sp, sp, #80	; 0x50
   351bc:	pop	{r4, r5, r6, pc}
   351c0:	ldr	r4, [r5, #140]	; 0x8c
   351c4:	ldr	r3, [sp, #8]
   351c8:	add	r2, r3, r4
   351cc:	str	r2, [r5, #140]	; 0x8c
   351d0:	ldr	r0, [r5, #36]	; 0x24
   351d4:	str	r3, [sp]
   351d8:	ldr	r5, [r5, #44]	; 0x2c
   351dc:	mov	r3, r4
   351e0:	ldr	r2, [sp, #12]
   351e4:	add	r1, sp, #16
   351e8:	blx	r5
   351ec:	cmp	r0, #0
   351f0:	addeq	r4, r4, #1
   351f4:	beq	351b4 <flatcc_builder_create_vtable@@Base+0xfc>
   351f8:	ldr	r3, [pc, #12]	; 3520c <flatcc_builder_create_vtable@@Base+0x154>
   351fc:	ldr	r2, [pc, #36]	; 35228 <flatcc_builder_create_vtable@@Base+0x170>
   35200:	ldr	r1, [pc, #12]	; 35214 <flatcc_builder_create_vtable@@Base+0x15c>
   35204:	ldr	r0, [pc, #12]	; 35218 <flatcc_builder_create_vtable@@Base+0x160>
   35208:	bl	14038 <__assert_fail@plt>
   3520c:	andeq	r4, r5, r0, ror #30
   35210:	andeq	r0, r0, r1, lsr #5
   35214:			; <UNDEFINED> instruction: 0x000554b0
   35218:	andeq	r3, r4, r0, ror lr
   3521c:	andeq	r4, r5, ip, lsr #31
   35220:	andeq	r0, r0, r7, lsl #5
   35224:	andeq	r0, r0, fp, lsl #5
   35228:	andeq	r0, r0, r5, lsr #5

0003522c <flatcc_builder_create_cached_vtable@@Base>:
   3522c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35230:	sub	sp, sp, #28
   35234:	mov	r8, r0
   35238:	str	r1, [sp, #8]
   3523c:	mov	r7, r2
   35240:	mov	fp, r3
   35244:	ldr	r4, [r0, #116]	; 0x74
   35248:	cmp	r4, #0
   3524c:	beq	35294 <flatcc_builder_create_cached_vtable@@Base+0x68>
   35250:	ldr	r3, [r8, #116]	; 0x74
   35254:	rsb	r3, r3, #32
   35258:	lsr	fp, fp, r3
   3525c:	ldr	r3, [r8, #92]	; 0x5c
   35260:	str	r3, [sp, #16]
   35264:	adds	r2, r3, fp, lsl #2
   35268:	str	r2, [sp, #20]
   3526c:	beq	35564 <flatcc_builder_create_cached_vtable@@Base+0x338>
   35270:	ldr	r5, [r3, fp, lsl #2]
   35274:	cmp	r5, #0
   35278:	beq	35404 <flatcc_builder_create_cached_vtable@@Base+0x1d8>
   3527c:	ldr	sl, [r8, #100]	; 0x64
   35280:	ldr	r6, [r8, #68]	; 0x44
   35284:	mov	r9, r2
   35288:	mov	r3, #0
   3528c:	str	r3, [sp, #12]
   35290:	b	3538c <flatcc_builder_create_cached_vtable@@Base+0x160>
   35294:	add	r6, r0, #92	; 0x5c
   35298:	ldr	r3, [r0, #124]	; 0x7c
   3529c:	cmp	r3, #0
   352a0:	bne	352f8 <flatcc_builder_create_cached_vtable@@Base+0xcc>
   352a4:	ldr	r3, [r0, #104]	; 0x68
   352a8:	cmp	r3, #15
   352ac:	bls	3530c <flatcc_builder_create_cached_vtable@@Base+0xe0>
   352b0:	ldr	r3, [r8, #100]	; 0x64
   352b4:	cmp	r3, #0
   352b8:	beq	35584 <flatcc_builder_create_cached_vtable@@Base+0x358>
   352bc:	mov	r3, #16
   352c0:	str	r3, [r8, #124]	; 0x7c
   352c4:	mov	r3, #5
   352c8:	str	r3, [sp]
   352cc:	ldr	r5, [r8, #48]	; 0x30
   352d0:	mov	r3, #1
   352d4:	mov	r2, #256	; 0x100
   352d8:	mov	r1, r6
   352dc:	ldr	r0, [r8, #40]	; 0x28
   352e0:	blx	r5
   352e4:	cmp	r0, #0
   352e8:	bne	35584 <flatcc_builder_create_cached_vtable@@Base+0x358>
   352ec:	ldr	r1, [r8, #96]	; 0x60
   352f0:	mov	r3, #256	; 0x100
   352f4:	b	3534c <flatcc_builder_create_cached_vtable@@Base+0x120>
   352f8:	ldr	r3, [pc, #652]	; 3558c <flatcc_builder_create_cached_vtable@@Base+0x360>
   352fc:	ldr	r2, [pc, #652]	; 35590 <flatcc_builder_create_cached_vtable@@Base+0x364>
   35300:	ldr	r1, [pc, #652]	; 35594 <flatcc_builder_create_cached_vtable@@Base+0x368>
   35304:	ldr	r0, [pc, #652]	; 35598 <flatcc_builder_create_cached_vtable@@Base+0x36c>
   35308:	bl	14038 <__assert_fail@plt>
   3530c:	mov	r3, #6
   35310:	str	r3, [sp]
   35314:	ldr	r5, [r0, #48]	; 0x30
   35318:	mov	r3, #0
   3531c:	mov	r2, #16
   35320:	add	r1, r0, #100	; 0x64
   35324:	ldr	r0, [r0, #40]	; 0x28
   35328:	blx	r5
   3532c:	cmp	r0, #0
   35330:	beq	352b0 <flatcc_builder_create_cached_vtable@@Base+0x84>
   35334:	ldr	r3, [pc, #608]	; 3559c <flatcc_builder_create_cached_vtable@@Base+0x370>
   35338:	mov	r2, #308	; 0x134
   3533c:	ldr	r1, [pc, #592]	; 35594 <flatcc_builder_create_cached_vtable@@Base+0x368>
   35340:	ldr	r0, [pc, #600]	; 355a0 <flatcc_builder_create_cached_vtable@@Base+0x374>
   35344:	bl	14038 <__assert_fail@plt>
   35348:	mov	r3, r2
   3534c:	lsl	r2, r3, #1
   35350:	cmp	r2, r1
   35354:	bls	35348 <flatcc_builder_create_cached_vtable@@Base+0x11c>
   35358:	lsr	r3, r3, #2
   3535c:	cmp	r3, #1
   35360:	bls	35374 <flatcc_builder_create_cached_vtable@@Base+0x148>
   35364:	mov	r2, #1
   35368:	add	r4, r4, #1
   3536c:	cmp	r3, r2, lsl r4
   35370:	bhi	35368 <flatcc_builder_create_cached_vtable@@Base+0x13c>
   35374:	str	r4, [r8, #116]	; 0x74
   35378:	b	35250 <flatcc_builder_create_cached_vtable@@Base+0x24>
   3537c:	add	r9, r4, #12
   35380:	ldr	r5, [r4, #12]
   35384:	cmp	r5, #0
   35388:	beq	3540c <flatcc_builder_create_cached_vtable@@Base+0x1e0>
   3538c:	add	r4, sl, r5
   35390:	ldr	r3, [r4, #8]
   35394:	add	r1, r6, r3
   35398:	ldrh	r3, [r6, r3]
   3539c:	cmp	r3, r7
   353a0:	bne	3537c <flatcc_builder_create_cached_vtable@@Base+0x150>
   353a4:	mov	r2, r7
   353a8:	ldr	r0, [sp, #8]
   353ac:	bl	13ef4 <memcmp@plt>
   353b0:	cmp	r0, #0
   353b4:	bne	3537c <flatcc_builder_create_cached_vtable@@Base+0x150>
   353b8:	ldr	r2, [r4, #4]
   353bc:	ldr	r3, [r8, #152]	; 0x98
   353c0:	cmp	r2, r3
   353c4:	addne	r9, r4, #12
   353c8:	ldrne	r5, [r4, #12]
   353cc:	strne	r4, [sp, #12]
   353d0:	bne	35384 <flatcc_builder_create_cached_vtable@@Base+0x158>
   353d4:	ldr	r3, [sp, #20]
   353d8:	cmp	r3, r9
   353dc:	beq	353f8 <flatcc_builder_create_cached_vtable@@Base+0x1cc>
   353e0:	ldr	r3, [r4, #12]
   353e4:	str	r3, [r9]
   353e8:	ldr	r2, [sp, #16]
   353ec:	ldr	r3, [r2, fp, lsl #2]
   353f0:	str	r3, [r4, #12]
   353f4:	str	r5, [r2, fp, lsl #2]
   353f8:	ldr	r0, [r4]
   353fc:	add	sp, sp, #28
   35400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35404:	mov	r3, #0
   35408:	str	r3, [sp, #12]
   3540c:	ldr	r4, [r8, #124]	; 0x7c
   35410:	add	r2, r4, #16
   35414:	ldr	r3, [r8, #104]	; 0x68
   35418:	cmp	r2, r3
   3541c:	bhi	35488 <flatcc_builder_create_cached_vtable@@Base+0x25c>
   35420:	ldr	r5, [r8, #100]	; 0x64
   35424:	adds	r6, r5, r4
   35428:	beq	3556c <flatcc_builder_create_cached_vtable@@Base+0x340>
   3542c:	ldr	r3, [r8, #124]	; 0x7c
   35430:	add	r2, r3, #16
   35434:	str	r2, [r8, #124]	; 0x7c
   35438:	ldr	r2, [r8, #152]	; 0x98
   3543c:	str	r2, [r6, #4]
   35440:	ldr	r1, [sp, #16]
   35444:	ldr	r2, [r1, fp, lsl #2]
   35448:	str	r2, [r6, #12]
   3544c:	str	r3, [r1, fp, lsl #2]
   35450:	mov	r2, r7
   35454:	ldr	r1, [sp, #8]
   35458:	mov	r0, r8
   3545c:	bl	350b8 <flatcc_builder_create_vtable@@Base>
   35460:	str	r0, [r5, r4]
   35464:	cmp	r0, #0
   35468:	beq	35574 <flatcc_builder_create_cached_vtable@@Base+0x348>
   3546c:	ldr	r3, [sp, #12]
   35470:	cmp	r3, #0
   35474:	beq	354c0 <flatcc_builder_create_cached_vtable@@Base+0x294>
   35478:	ldr	r3, [r3, #8]
   3547c:	str	r3, [r6, #8]
   35480:	ldr	r0, [r5, r4]
   35484:	b	353fc <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   35488:	mov	r3, #6
   3548c:	str	r3, [sp]
   35490:	ldr	r5, [r8, #48]	; 0x30
   35494:	mov	r3, #0
   35498:	add	r1, r8, #100	; 0x64
   3549c:	ldr	r0, [r8, #40]	; 0x28
   354a0:	blx	r5
   354a4:	cmp	r0, #0
   354a8:	beq	35420 <flatcc_builder_create_cached_vtable@@Base+0x1f4>
   354ac:	ldr	r3, [pc, #232]	; 3559c <flatcc_builder_create_cached_vtable@@Base+0x370>
   354b0:	mov	r2, #308	; 0x134
   354b4:	ldr	r1, [pc, #216]	; 35594 <flatcc_builder_create_cached_vtable@@Base+0x368>
   354b8:	ldr	r0, [pc, #224]	; 355a0 <flatcc_builder_create_cached_vtable@@Base+0x374>
   354bc:	bl	14038 <__assert_fail@plt>
   354c0:	ldr	r2, [r8, #172]	; 0xac
   354c4:	cmp	r2, #0
   354c8:	beq	354dc <flatcc_builder_create_cached_vtable@@Base+0x2b0>
   354cc:	ldr	r3, [r8, #120]	; 0x78
   354d0:	add	r3, r7, r3
   354d4:	cmp	r2, r3
   354d8:	bcc	35520 <flatcc_builder_create_cached_vtable@@Base+0x2f4>
   354dc:	ldr	r9, [r8, #120]	; 0x78
   354e0:	add	r2, r9, r7
   354e4:	ldr	r3, [r8, #72]	; 0x48
   354e8:	cmp	r2, r3
   354ec:	bhi	3552c <flatcc_builder_create_cached_vtable@@Base+0x300>
   354f0:	ldr	r3, [r8, #68]	; 0x44
   354f4:	adds	r0, r3, r9
   354f8:	beq	3557c <flatcc_builder_create_cached_vtable@@Base+0x350>
   354fc:	ldr	r3, [r8, #120]	; 0x78
   35500:	str	r3, [r6, #8]
   35504:	ldr	r3, [r8, #120]	; 0x78
   35508:	add	r3, r3, r7
   3550c:	str	r3, [r8, #120]	; 0x78
   35510:	mov	r2, r7
   35514:	ldr	r1, [sp, #8]
   35518:	bl	13edc <memcpy@plt>
   3551c:	b	35480 <flatcc_builder_create_cached_vtable@@Base+0x254>
   35520:	mov	r0, r8
   35524:	bl	336ec <flatcc_builder_flush_vtable_cache@@Base>
   35528:	b	35480 <flatcc_builder_create_cached_vtable@@Base+0x254>
   3552c:	mov	r3, #2
   35530:	str	r3, [sp]
   35534:	ldr	sl, [r8, #48]	; 0x30
   35538:	mov	r3, #0
   3553c:	add	r1, r8, #68	; 0x44
   35540:	ldr	r0, [r8, #40]	; 0x28
   35544:	blx	sl
   35548:	cmp	r0, #0
   3554c:	beq	354f0 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   35550:	ldr	r3, [pc, #68]	; 3559c <flatcc_builder_create_cached_vtable@@Base+0x370>
   35554:	mov	r2, #308	; 0x134
   35558:	ldr	r1, [pc, #52]	; 35594 <flatcc_builder_create_cached_vtable@@Base+0x368>
   3555c:	ldr	r0, [pc, #60]	; 355a0 <flatcc_builder_create_cached_vtable@@Base+0x374>
   35560:	bl	14038 <__assert_fail@plt>
   35564:	mov	r0, #0
   35568:	b	353fc <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   3556c:	mov	r0, #0
   35570:	b	353fc <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   35574:	mov	r0, #0
   35578:	b	353fc <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   3557c:	mvn	r0, #0
   35580:	b	353fc <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   35584:	mov	r0, #0
   35588:	b	353fc <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   3558c:	strdeq	r5, [r5], -r0
   35590:	andeq	r0, r0, r6, asr r1
   35594:			; <UNDEFINED> instruction: 0x000554b0
   35598:	andeq	r5, r5, r4, asr #14
   3559c:	andeq	r4, r5, ip, ror pc
   355a0:	andeq	r3, r4, r0, ror lr

000355a4 <flatcc_builder_create_table@@Base>:
   355a4:	push	{r4, r5, r6, r7, lr}
   355a8:	sub	sp, sp, #92	; 0x5c
   355ac:	ldr	r4, [sp, #116]	; 0x74
   355b0:	ldr	ip, [sp, #120]	; 0x78
   355b4:	cmp	r4, #0
   355b8:	blt	356f8 <flatcc_builder_create_table@@Base+0x154>
   355bc:	mov	r5, r0
   355c0:	tst	ip, #1
   355c4:	beq	3570c <flatcc_builder_create_table@@Base+0x168>
   355c8:	cmp	r3, #4
   355cc:	movcs	r0, r3
   355d0:	movcc	r0, #4
   355d4:	ldrh	r3, [r5, #128]	; 0x80
   355d8:	cmp	r3, r0
   355dc:	strhcc	r0, [r5, #128]	; 0x80
   355e0:	ldr	lr, [r5, #136]	; 0x88
   355e4:	sub	r7, lr, r2
   355e8:	sub	r0, r0, #1
   355ec:	and	r7, r7, r0
   355f0:	mvn	r3, #3
   355f4:	sub	r3, r3, r2
   355f8:	add	r3, r3, lr
   355fc:	sub	r3, r3, r7
   35600:	sub	ip, ip, #1
   35604:	sub	ip, r3, ip
   35608:	str	ip, [sp, #84]	; 0x54
   3560c:	cmp	r4, #0
   35610:	ble	35640 <flatcc_builder_create_table@@Base+0x9c>
   35614:	ldr	ip, [sp, #112]	; 0x70
   35618:	add	r4, ip, r4, lsl #1
   3561c:	mvn	r6, #3
   35620:	sub	r6, r6, r3
   35624:	ldrh	r3, [ip], #2
   35628:	sub	lr, r6, r3
   3562c:	ldr	r0, [r1, r3]
   35630:	add	r0, r0, lr
   35634:	str	r0, [r1, r3]
   35638:	cmp	ip, r4
   3563c:	bne	35624 <flatcc_builder_create_table@@Base+0x80>
   35640:	mov	r3, #4
   35644:	str	r3, [sp, #12]
   35648:	add	r0, sp, #84	; 0x54
   3564c:	str	r0, [sp, #20]
   35650:	str	r3, [sp, #24]
   35654:	mov	r3, #1
   35658:	str	r3, [sp, #16]
   3565c:	cmp	r2, #0
   35660:	beq	3567c <flatcc_builder_create_table@@Base+0xd8>
   35664:	add	r3, r2, #4
   35668:	str	r3, [sp, #12]
   3566c:	str	r1, [sp, #28]
   35670:	str	r2, [sp, #32]
   35674:	mov	r3, #2
   35678:	str	r3, [sp, #16]
   3567c:	cmp	r7, #0
   35680:	beq	356b0 <flatcc_builder_create_table@@Base+0x10c>
   35684:	ldr	r3, [sp, #12]
   35688:	add	r3, r3, r7
   3568c:	str	r3, [sp, #12]
   35690:	ldr	r3, [sp, #16]
   35694:	add	r3, r3, #1
   35698:	add	r2, sp, #88	; 0x58
   3569c:	add	r2, r2, r3, lsl #3
   356a0:	ldr	r1, [pc, #160]	; 35748 <flatcc_builder_create_table@@Base+0x1a4>
   356a4:	str	r1, [r2, #-76]	; 0xffffffb4
   356a8:	str	r7, [r2, #-72]	; 0xffffffb8
   356ac:	str	r3, [sp, #16]
   356b0:	ldr	r2, [r5, #136]	; 0x88
   356b4:	ldr	r3, [sp, #12]
   356b8:	sub	r4, r2, r3
   356bc:	cmp	r2, r4
   356c0:	ble	35720 <flatcc_builder_create_table@@Base+0x17c>
   356c4:	str	r3, [sp]
   356c8:	ldr	r6, [r5, #44]	; 0x2c
   356cc:	mov	r3, r4
   356d0:	ldr	r2, [sp, #16]
   356d4:	add	r1, sp, #20
   356d8:	ldr	r0, [r5, #36]	; 0x24
   356dc:	blx	r6
   356e0:	cmp	r0, #0
   356e4:	bne	35734 <flatcc_builder_create_table@@Base+0x190>
   356e8:	str	r4, [r5, #136]	; 0x88
   356ec:	mov	r0, r4
   356f0:	add	sp, sp, #92	; 0x5c
   356f4:	pop	{r4, r5, r6, r7, pc}
   356f8:	ldr	r3, [pc, #76]	; 3574c <flatcc_builder_create_table@@Base+0x1a8>
   356fc:	ldr	r2, [pc, #76]	; 35750 <flatcc_builder_create_table@@Base+0x1ac>
   35700:	ldr	r1, [pc, #76]	; 35754 <flatcc_builder_create_table@@Base+0x1b0>
   35704:	ldr	r0, [pc, #76]	; 35758 <flatcc_builder_create_table@@Base+0x1b4>
   35708:	bl	14038 <__assert_fail@plt>
   3570c:	ldr	r3, [pc, #56]	; 3574c <flatcc_builder_create_table@@Base+0x1a8>
   35710:	ldr	r2, [pc, #68]	; 3575c <flatcc_builder_create_table@@Base+0x1b8>
   35714:	ldr	r1, [pc, #56]	; 35754 <flatcc_builder_create_table@@Base+0x1b0>
   35718:	ldr	r0, [pc, #64]	; 35760 <flatcc_builder_create_table@@Base+0x1bc>
   3571c:	bl	14038 <__assert_fail@plt>
   35720:	ldr	r3, [pc, #60]	; 35764 <flatcc_builder_create_table@@Base+0x1c0>
   35724:	ldr	r2, [pc, #60]	; 35768 <flatcc_builder_create_table@@Base+0x1c4>
   35728:	ldr	r1, [pc, #36]	; 35754 <flatcc_builder_create_table@@Base+0x1b0>
   3572c:	ldr	r0, [pc, #56]	; 3576c <flatcc_builder_create_table@@Base+0x1c8>
   35730:	bl	14038 <__assert_fail@plt>
   35734:	ldr	r3, [pc, #40]	; 35764 <flatcc_builder_create_table@@Base+0x1c0>
   35738:	ldr	r2, [pc, #48]	; 35770 <flatcc_builder_create_table@@Base+0x1cc>
   3573c:	ldr	r1, [pc, #16]	; 35754 <flatcc_builder_create_table@@Base+0x1b0>
   35740:	ldr	r0, [pc, #36]	; 3576c <flatcc_builder_create_table@@Base+0x1c8>
   35744:	bl	14038 <__assert_fail@plt>
   35748:	andeq	r4, r5, r0, ror #26
   3574c:	strdeq	r5, [r5], -ip
   35750:	ldrdeq	r0, [r0], -r5
   35754:			; <UNDEFINED> instruction: 0x000554b0
   35758:	andeq	r5, r5, r4, asr r7
   3575c:	ldrdeq	r0, [r0], -fp
   35760:	andeq	r5, r5, r8, ror #14
   35764:	andeq	r4, r5, ip, lsr #31
   35768:	andeq	r0, r0, r7, lsl #5
   3576c:	andeq	r3, r4, r0, ror lr
   35770:	andeq	r0, r0, fp, lsl #5

00035774 <flatcc_builder_check_required_field@@Base>:
   35774:	ldr	r3, [r0, #32]
   35778:	ldrh	r3, [r3, #14]
   3577c:	cmp	r3, #3
   35780:	bne	357ac <flatcc_builder_check_required_field@@Base+0x38>
   35784:	ldrh	r3, [r0, #8]
   35788:	cmp	r3, r1
   3578c:	movls	r0, #0
   35790:	bls	357a8 <flatcc_builder_check_required_field@@Base+0x34>
   35794:	ldr	r3, [r0, #4]
   35798:	lsl	r1, r1, #1
   3579c:	ldrh	r0, [r3, r1]
   357a0:	adds	r0, r0, #0
   357a4:	movne	r0, #1
   357a8:	bx	lr
   357ac:	push	{r4, lr}
   357b0:	ldr	r3, [pc, #12]	; 357c4 <flatcc_builder_check_required_field@@Base+0x50>
   357b4:	ldr	r2, [pc, #12]	; 357c8 <flatcc_builder_check_required_field@@Base+0x54>
   357b8:	ldr	r1, [pc, #12]	; 357cc <flatcc_builder_check_required_field@@Base+0x58>
   357bc:	ldr	r0, [pc, #12]	; 357d0 <flatcc_builder_check_required_field@@Base+0x5c>
   357c0:	bl	14038 <__assert_fail@plt>
   357c4:	andeq	r5, r5, r8, lsl r2
   357c8:	strdeq	r0, [r0], -r8
   357cc:			; <UNDEFINED> instruction: 0x000554b0
   357d0:	andeq	r5, r5, r4, ror r7

000357d4 <flatcc_builder_check_union_field@@Base>:
   357d4:	ldr	r3, [r0, #32]
   357d8:	ldrh	r3, [r3, #14]
   357dc:	cmp	r3, #3
   357e0:	bne	3583c <flatcc_builder_check_union_field@@Base+0x68>
   357e4:	cmp	r1, #0
   357e8:	moveq	r0, #0
   357ec:	beq	35864 <flatcc_builder_check_union_field@@Base+0x90>
   357f0:	ldrh	r3, [r0, #8]
   357f4:	cmp	r3, r1
   357f8:	movls	r0, #0
   357fc:	bls	35864 <flatcc_builder_check_union_field@@Base+0x90>
   35800:	ldr	r3, [r0, #4]
   35804:	sub	r1, r1, #-2147483647	; 0x80000001
   35808:	lsl	r1, r1, #1
   3580c:	ldrh	r2, [r3, r1]
   35810:	cmp	r2, #0
   35814:	beq	35854 <flatcc_builder_check_union_field@@Base+0x80>
   35818:	ldr	r0, [r0, #16]
   3581c:	ldrb	r2, [r0, r2]
   35820:	cmp	r2, #0
   35824:	bne	35868 <flatcc_builder_check_union_field@@Base+0x94>
   35828:	add	r1, r3, r1
   3582c:	ldrh	r0, [r1, #2]
   35830:	clz	r0, r0
   35834:	lsr	r0, r0, #5
   35838:	b	35864 <flatcc_builder_check_union_field@@Base+0x90>
   3583c:	push	{r4, lr}
   35840:	ldr	r3, [pc, #52]	; 3587c <flatcc_builder_check_union_field@@Base+0xa8>
   35844:	ldr	r2, [pc, #52]	; 35880 <flatcc_builder_check_union_field@@Base+0xac>
   35848:	ldr	r1, [pc, #52]	; 35884 <flatcc_builder_check_union_field@@Base+0xb0>
   3584c:	ldr	r0, [pc, #52]	; 35888 <flatcc_builder_check_union_field@@Base+0xb4>
   35850:	bl	14038 <__assert_fail@plt>
   35854:	add	r1, r3, r1
   35858:	ldrh	r0, [r1, #2]
   3585c:	clz	r0, r0
   35860:	lsr	r0, r0, #5
   35864:	bx	lr
   35868:	add	r1, r3, r1
   3586c:	ldrh	r0, [r1, #2]
   35870:	adds	r0, r0, #0
   35874:	movne	r0, #1
   35878:	b	35864 <flatcc_builder_check_union_field@@Base+0x90>
   3587c:	andeq	r5, r5, ip, lsr r2
   35880:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   35884:			; <UNDEFINED> instruction: 0x000554b0
   35888:	andeq	r5, r5, r4, ror r7

0003588c <flatcc_builder_check_required@@Base>:
   3588c:	ldr	r3, [r0, #32]
   35890:	ldrh	r3, [r3, #14]
   35894:	cmp	r3, #3
   35898:	bne	358f8 <flatcc_builder_check_required@@Base+0x6c>
   3589c:	ldrh	r3, [r0, #8]
   358a0:	cmp	r3, r2
   358a4:	movlt	r0, #0
   358a8:	blt	35914 <flatcc_builder_check_required@@Base+0x88>
   358ac:	cmp	r2, #0
   358b0:	ble	35918 <flatcc_builder_check_required@@Base+0x8c>
   358b4:	ldr	ip, [r0, #4]
   358b8:	ldrh	r3, [r1]
   358bc:	lsl	r3, r3, #1
   358c0:	ldrh	r3, [ip, r3]
   358c4:	cmp	r3, #0
   358c8:	beq	35920 <flatcc_builder_check_required@@Base+0x94>
   358cc:	add	r0, r1, #2
   358d0:	add	r2, r1, r2, lsl #1
   358d4:	cmp	r0, r2
   358d8:	beq	35910 <flatcc_builder_check_required@@Base+0x84>
   358dc:	ldrh	r3, [r0], #2
   358e0:	lsl	r3, r3, #1
   358e4:	ldrh	r3, [ip, r3]
   358e8:	cmp	r3, #0
   358ec:	bne	358d4 <flatcc_builder_check_required@@Base+0x48>
   358f0:	mov	r0, #0
   358f4:	b	35914 <flatcc_builder_check_required@@Base+0x88>
   358f8:	push	{r4, lr}
   358fc:	ldr	r3, [pc, #36]	; 35928 <flatcc_builder_check_required@@Base+0x9c>
   35900:	ldr	r2, [pc, #36]	; 3592c <flatcc_builder_check_required@@Base+0xa0>
   35904:	ldr	r1, [pc, #36]	; 35930 <flatcc_builder_check_required@@Base+0xa4>
   35908:	ldr	r0, [pc, #36]	; 35934 <flatcc_builder_check_required@@Base+0xa8>
   3590c:	bl	14038 <__assert_fail@plt>
   35910:	mov	r0, #1
   35914:	bx	lr
   35918:	mov	r0, #1
   3591c:	b	35914 <flatcc_builder_check_required@@Base+0x88>
   35920:	mov	r0, #0
   35924:	b	35914 <flatcc_builder_check_required@@Base+0x88>
   35928:	andeq	r5, r5, r0, ror #4
   3592c:	andeq	r0, r0, r1, lsl r5
   35930:			; <UNDEFINED> instruction: 0x000554b0
   35934:	andeq	r5, r5, r4, ror r7

00035938 <flatcc_builder_end_table@@Base>:
   35938:	push	{r4, r5, r6, r7, lr}
   3593c:	sub	sp, sp, #20
   35940:	ldr	r3, [r0, #32]
   35944:	ldrh	r3, [r3, #14]
   35948:	cmp	r3, #3
   3594c:	bne	359bc <flatcc_builder_end_table@@Base+0x84>
   35950:	mov	r4, r0
   35954:	ldr	r1, [r0, #4]
   35958:	sub	r6, r1, #4
   3595c:	ldrh	r5, [r0, #8]
   35960:	add	r5, r5, #2
   35964:	lsl	r5, r5, #1
   35968:	uxth	r5, r5
   3596c:	strh	r5, [r1, #-4]
   35970:	ldr	r3, [r0, #20]
   35974:	add	r3, r3, #4
   35978:	uxth	r2, r3
   3597c:	strh	r2, [r1, #-2]
   35980:	ldr	r3, [r0, #12]
   35984:	eor	r3, r3, r5
   35988:	ldr	r1, [pc, #328]	; 35ad8 <flatcc_builder_end_table@@Base+0x1a0>
   3598c:	mul	r3, r1, r3
   35990:	eor	r3, r3, r2
   35994:	mul	r3, r1, r3
   35998:	str	r3, [r0, #12]
   3599c:	mov	r2, r5
   359a0:	mov	r1, r6
   359a4:	bl	3522c <flatcc_builder_create_cached_vtable@@Base>
   359a8:	subs	r7, r0, #0
   359ac:	bne	359d0 <flatcc_builder_end_table@@Base+0x98>
   359b0:	mov	r0, r7
   359b4:	add	sp, sp, #20
   359b8:	pop	{r4, r5, r6, r7, pc}
   359bc:	ldr	r3, [pc, #280]	; 35adc <flatcc_builder_end_table@@Base+0x1a4>
   359c0:	ldr	r2, [pc, #280]	; 35ae0 <flatcc_builder_end_table@@Base+0x1a8>
   359c4:	ldr	r1, [pc, #280]	; 35ae4 <flatcc_builder_end_table@@Base+0x1ac>
   359c8:	ldr	r0, [pc, #280]	; 35ae8 <flatcc_builder_end_table@@Base+0x1b0>
   359cc:	bl	14038 <__assert_fail@plt>
   359d0:	mov	r2, r5
   359d4:	mov	r1, #0
   359d8:	mov	r0, r6
   359dc:	bl	13f9c <memset@plt>
   359e0:	ldr	r3, [r4, #32]
   359e4:	ldr	r1, [r4, #76]	; 0x4c
   359e8:	ldr	r3, [r3, #20]
   359ec:	add	r1, r1, r3
   359f0:	ldrh	r3, [r4, #130]	; 0x82
   359f4:	str	r7, [sp, #8]
   359f8:	ldr	r2, [r4]
   359fc:	sub	r2, r2, r1
   35a00:	asr	r2, r2, #1
   35a04:	str	r2, [sp, #4]
   35a08:	str	r1, [sp]
   35a0c:	ldr	r2, [r4, #20]
   35a10:	ldr	r1, [r4, #16]
   35a14:	mov	r0, r4
   35a18:	bl	355a4 <flatcc_builder_create_table@@Base>
   35a1c:	subs	r7, r0, #0
   35a20:	beq	359b0 <flatcc_builder_end_table@@Base+0x78>
   35a24:	ldr	r3, [r4, #32]
   35a28:	ldr	r2, [r3, #24]
   35a2c:	str	r2, [r4, #12]
   35a30:	ldrh	r2, [r3, #28]
   35a34:	strh	r2, [r4, #8]
   35a38:	ldr	r2, [r4, #52]	; 0x34
   35a3c:	ldr	r1, [r3, #16]
   35a40:	add	r2, r2, r1
   35a44:	str	r2, [r4, #4]
   35a48:	ldr	r2, [r4, #76]	; 0x4c
   35a4c:	ldr	r3, [r3, #20]
   35a50:	add	r3, r2, r3
   35a54:	str	r3, [r4]
   35a58:	ldr	r2, [r4, #20]
   35a5c:	mov	r1, #0
   35a60:	ldr	r0, [r4, #16]
   35a64:	bl	13f9c <memset@plt>
   35a68:	ldr	r2, [r4, #32]
   35a6c:	ldr	r3, [r2, #8]
   35a70:	str	r3, [r4, #20]
   35a74:	ldr	r0, [r2]
   35a78:	str	r0, [r4, #28]
   35a7c:	ldr	r1, [r2, #4]
   35a80:	ldr	r3, [r4, #60]	; 0x3c
   35a84:	add	r3, r3, r0
   35a88:	str	r3, [r4, #16]
   35a8c:	ldr	r3, [r4, #64]	; 0x40
   35a90:	sub	r3, r3, r0
   35a94:	cmp	r3, r1
   35a98:	movcs	r3, r1
   35a9c:	str	r3, [r4, #24]
   35aa0:	str	r1, [r2, #4]
   35aa4:	ldrh	r3, [r4, #130]	; 0x82
   35aa8:	ldrh	r2, [r4, #128]	; 0x80
   35aac:	cmp	r2, r3
   35ab0:	strhcc	r3, [r4, #128]	; 0x80
   35ab4:	ldr	r3, [r4, #32]
   35ab8:	ldrh	r2, [r3, #12]
   35abc:	strh	r2, [r4, #130]	; 0x82
   35ac0:	sub	r3, r3, #36	; 0x24
   35ac4:	str	r3, [r4, #32]
   35ac8:	ldr	r3, [r4, #156]	; 0x9c
   35acc:	sub	r3, r3, #1
   35ad0:	str	r3, [r4, #156]	; 0x9c
   35ad4:	b	359b0 <flatcc_builder_end_table@@Base+0x78>
   35ad8:			; <UNDEFINED> instruction: 0x9e3779b1
   35adc:	andeq	r5, r5, r0, lsl #5
   35ae0:	andeq	r0, r0, r5, lsr #10
   35ae4:			; <UNDEFINED> instruction: 0x000554b0
   35ae8:	andeq	r5, r5, r4, ror r7

00035aec <flatcc_builder_create_vector@@Base>:
   35aec:	push	{r4, r5, r6, lr}
   35af0:	sub	sp, sp, #88	; 0x58
   35af4:	mov	r4, r0
   35af8:	ldrh	r0, [sp, #104]	; 0x68
   35afc:	ldr	ip, [sp, #108]	; 0x6c
   35b00:	cmp	r2, ip
   35b04:	bhi	35be8 <flatcc_builder_create_vector@@Base+0xfc>
   35b08:	cmp	r0, #4
   35b0c:	movcc	r0, #4
   35b10:	ldrh	ip, [r4, #128]	; 0x80
   35b14:	cmp	ip, r0
   35b18:	strhcc	r0, [r4, #128]	; 0x80
   35b1c:	mul	r3, r3, r2
   35b20:	str	r2, [sp, #84]	; 0x54
   35b24:	ldr	r2, [r4, #136]	; 0x88
   35b28:	sub	ip, r2, r3
   35b2c:	sub	r0, r0, #1
   35b30:	and	r0, r0, ip
   35b34:	mov	ip, #4
   35b38:	str	ip, [sp, #12]
   35b3c:	add	lr, sp, #84	; 0x54
   35b40:	str	lr, [sp, #20]
   35b44:	str	ip, [sp, #24]
   35b48:	mov	ip, #1
   35b4c:	str	ip, [sp, #16]
   35b50:	cmp	r3, #0
   35b54:	beq	35b70 <flatcc_builder_create_vector@@Base+0x84>
   35b58:	add	ip, r3, #4
   35b5c:	str	ip, [sp, #12]
   35b60:	str	r1, [sp, #28]
   35b64:	str	r3, [sp, #32]
   35b68:	mov	r3, #2
   35b6c:	str	r3, [sp, #16]
   35b70:	cmp	r0, #0
   35b74:	beq	35ba4 <flatcc_builder_create_vector@@Base+0xb8>
   35b78:	ldr	r3, [sp, #12]
   35b7c:	add	r3, r3, r0
   35b80:	str	r3, [sp, #12]
   35b84:	ldr	r3, [sp, #16]
   35b88:	add	r3, r3, #1
   35b8c:	add	r1, sp, #88	; 0x58
   35b90:	add	r1, r1, r3, lsl #3
   35b94:	ldr	ip, [pc, #136]	; 35c24 <flatcc_builder_create_vector@@Base+0x138>
   35b98:	str	ip, [r1, #-76]	; 0xffffffb4
   35b9c:	str	r0, [r1, #-72]	; 0xffffffb8
   35ba0:	str	r3, [sp, #16]
   35ba4:	ldr	r3, [sp, #12]
   35ba8:	sub	r5, r2, r3
   35bac:	cmp	r2, r5
   35bb0:	ble	35bfc <flatcc_builder_create_vector@@Base+0x110>
   35bb4:	str	r3, [sp]
   35bb8:	ldr	r6, [r4, #44]	; 0x2c
   35bbc:	mov	r3, r5
   35bc0:	ldr	r2, [sp, #16]
   35bc4:	add	r1, sp, #20
   35bc8:	ldr	r0, [r4, #36]	; 0x24
   35bcc:	blx	r6
   35bd0:	cmp	r0, #0
   35bd4:	bne	35c10 <flatcc_builder_create_vector@@Base+0x124>
   35bd8:	str	r5, [r4, #136]	; 0x88
   35bdc:	mov	r0, r5
   35be0:	add	sp, sp, #88	; 0x58
   35be4:	pop	{r4, r5, r6, pc}
   35be8:	ldr	r3, [pc, #56]	; 35c28 <flatcc_builder_create_vector@@Base+0x13c>
   35bec:	ldr	r2, [pc, #56]	; 35c2c <flatcc_builder_create_vector@@Base+0x140>
   35bf0:	ldr	r1, [pc, #56]	; 35c30 <flatcc_builder_create_vector@@Base+0x144>
   35bf4:	ldr	r0, [pc, #56]	; 35c34 <flatcc_builder_create_vector@@Base+0x148>
   35bf8:	bl	14038 <__assert_fail@plt>
   35bfc:	ldr	r3, [pc, #52]	; 35c38 <flatcc_builder_create_vector@@Base+0x14c>
   35c00:	ldr	r2, [pc, #52]	; 35c3c <flatcc_builder_create_vector@@Base+0x150>
   35c04:	ldr	r1, [pc, #36]	; 35c30 <flatcc_builder_create_vector@@Base+0x144>
   35c08:	ldr	r0, [pc, #48]	; 35c40 <flatcc_builder_create_vector@@Base+0x154>
   35c0c:	bl	14038 <__assert_fail@plt>
   35c10:	ldr	r3, [pc, #32]	; 35c38 <flatcc_builder_create_vector@@Base+0x14c>
   35c14:	ldr	r2, [pc, #40]	; 35c44 <flatcc_builder_create_vector@@Base+0x158>
   35c18:	ldr	r1, [pc, #16]	; 35c30 <flatcc_builder_create_vector@@Base+0x144>
   35c1c:	ldr	r0, [pc, #28]	; 35c40 <flatcc_builder_create_vector@@Base+0x154>
   35c20:	bl	14038 <__assert_fail@plt>
   35c24:	andeq	r4, r5, r0, ror #26
   35c28:	muleq	r5, ip, r2
   35c2c:	andeq	r0, r0, r5, asr r5
   35c30:			; <UNDEFINED> instruction: 0x000554b0
   35c34:	andeq	r5, r5, r0, lsr #15
   35c38:	andeq	r4, r5, ip, lsr #31
   35c3c:	andeq	r0, r0, r7, lsl #5
   35c40:	andeq	r3, r4, r0, ror lr
   35c44:	andeq	r0, r0, fp, lsl #5

00035c48 <flatcc_builder_end_vector@@Base>:
   35c48:	push	{r4, r5, lr}
   35c4c:	sub	sp, sp, #12
   35c50:	ldr	r1, [r0, #32]
   35c54:	ldrh	r3, [r1, #14]
   35c58:	cmp	r3, #4
   35c5c:	bne	35c98 <flatcc_builder_end_vector@@Base+0x50>
   35c60:	mov	r4, r0
   35c64:	ldr	r3, [r1, #16]
   35c68:	ldr	r2, [r1, #20]
   35c6c:	ldr	r1, [r1, #24]
   35c70:	str	r1, [sp, #4]
   35c74:	ldrh	r1, [r0, #130]	; 0x82
   35c78:	str	r1, [sp]
   35c7c:	ldr	r1, [r0, #16]
   35c80:	bl	35aec <flatcc_builder_create_vector@@Base>
   35c84:	subs	r5, r0, #0
   35c88:	bne	35cac <flatcc_builder_end_vector@@Base+0x64>
   35c8c:	mov	r0, r5
   35c90:	add	sp, sp, #12
   35c94:	pop	{r4, r5, pc}
   35c98:	ldr	r3, [pc, #140]	; 35d2c <flatcc_builder_end_vector@@Base+0xe4>
   35c9c:	ldr	r2, [pc, #140]	; 35d30 <flatcc_builder_end_vector@@Base+0xe8>
   35ca0:	ldr	r1, [pc, #140]	; 35d34 <flatcc_builder_end_vector@@Base+0xec>
   35ca4:	ldr	r0, [pc, #140]	; 35d38 <flatcc_builder_end_vector@@Base+0xf0>
   35ca8:	bl	14038 <__assert_fail@plt>
   35cac:	ldr	r2, [r4, #20]
   35cb0:	mov	r1, #0
   35cb4:	ldr	r0, [r4, #16]
   35cb8:	bl	13f9c <memset@plt>
   35cbc:	ldr	r2, [r4, #32]
   35cc0:	ldr	r3, [r2, #8]
   35cc4:	str	r3, [r4, #20]
   35cc8:	ldr	r0, [r2]
   35ccc:	str	r0, [r4, #28]
   35cd0:	ldr	r1, [r2, #4]
   35cd4:	ldr	r3, [r4, #60]	; 0x3c
   35cd8:	add	r3, r3, r0
   35cdc:	str	r3, [r4, #16]
   35ce0:	ldr	r3, [r4, #64]	; 0x40
   35ce4:	sub	r3, r3, r0
   35ce8:	cmp	r3, r1
   35cec:	movcs	r3, r1
   35cf0:	str	r3, [r4, #24]
   35cf4:	str	r1, [r2, #4]
   35cf8:	ldrh	r3, [r4, #130]	; 0x82
   35cfc:	ldrh	r2, [r4, #128]	; 0x80
   35d00:	cmp	r2, r3
   35d04:	strhcc	r3, [r4, #128]	; 0x80
   35d08:	ldr	r3, [r4, #32]
   35d0c:	ldrh	r2, [r3, #12]
   35d10:	strh	r2, [r4, #130]	; 0x82
   35d14:	sub	r3, r3, #36	; 0x24
   35d18:	str	r3, [r4, #32]
   35d1c:	ldr	r3, [r4, #156]	; 0x9c
   35d20:	sub	r3, r3, #1
   35d24:	str	r3, [r4, #156]	; 0x9c
   35d28:	b	35c8c <flatcc_builder_end_vector@@Base+0x44>
   35d2c:			; <UNDEFINED> instruction: 0x000552bc
   35d30:	andeq	r0, r0, r8, ror r5
   35d34:			; <UNDEFINED> instruction: 0x000554b0
   35d38:	andeq	r5, r5, r8, ror #11

00035d3c <flatcc_builder_vector_count@@Base>:
   35d3c:	ldr	r3, [r0, #32]
   35d40:	ldr	r0, [r3, #20]
   35d44:	bx	lr

00035d48 <flatcc_builder_vector_edit@@Base>:
   35d48:	ldr	r0, [r0, #16]
   35d4c:	bx	lr

00035d50 <flatcc_builder_create_offset_vector_direct@@Base>:
   35d50:	push	{r4, lr}
   35d54:	mov	r3, #0
   35d58:	bl	334f4 <flatcc_builder_default_alloc@@Base+0x378>
   35d5c:	pop	{r4, pc}

00035d60 <flatcc_builder_end_offset_vector@@Base>:
   35d60:	push	{r4, r5, r6, lr}
   35d64:	ldr	r3, [r0, #32]
   35d68:	ldrh	r2, [r3, #14]
   35d6c:	cmp	r2, #5
   35d70:	bne	35d94 <flatcc_builder_end_offset_vector@@Base+0x34>
   35d74:	mov	r4, r0
   35d78:	ldr	r2, [r3, #20]
   35d7c:	ldr	r1, [r0, #16]
   35d80:	bl	35d50 <flatcc_builder_create_offset_vector_direct@@Base>
   35d84:	subs	r5, r0, #0
   35d88:	bne	35da8 <flatcc_builder_end_offset_vector@@Base+0x48>
   35d8c:	mov	r0, r5
   35d90:	pop	{r4, r5, r6, pc}
   35d94:	ldr	r3, [pc, #140]	; 35e28 <flatcc_builder_end_offset_vector@@Base+0xc8>
   35d98:	ldr	r2, [pc, #140]	; 35e2c <flatcc_builder_end_offset_vector@@Base+0xcc>
   35d9c:	ldr	r1, [pc, #140]	; 35e30 <flatcc_builder_end_offset_vector@@Base+0xd0>
   35da0:	ldr	r0, [pc, #140]	; 35e34 <flatcc_builder_end_offset_vector@@Base+0xd4>
   35da4:	bl	14038 <__assert_fail@plt>
   35da8:	ldr	r2, [r4, #20]
   35dac:	mov	r1, #0
   35db0:	ldr	r0, [r4, #16]
   35db4:	bl	13f9c <memset@plt>
   35db8:	ldr	r2, [r4, #32]
   35dbc:	ldr	r3, [r2, #8]
   35dc0:	str	r3, [r4, #20]
   35dc4:	ldr	r0, [r2]
   35dc8:	str	r0, [r4, #28]
   35dcc:	ldr	r1, [r2, #4]
   35dd0:	ldr	r3, [r4, #60]	; 0x3c
   35dd4:	add	r3, r3, r0
   35dd8:	str	r3, [r4, #16]
   35ddc:	ldr	r3, [r4, #64]	; 0x40
   35de0:	sub	r3, r3, r0
   35de4:	cmp	r3, r1
   35de8:	movcs	r3, r1
   35dec:	str	r3, [r4, #24]
   35df0:	str	r1, [r2, #4]
   35df4:	ldrh	r3, [r4, #130]	; 0x82
   35df8:	ldrh	r2, [r4, #128]	; 0x80
   35dfc:	cmp	r2, r3
   35e00:	strhcc	r3, [r4, #128]	; 0x80
   35e04:	ldr	r3, [r4, #32]
   35e08:	ldrh	r2, [r3, #12]
   35e0c:	strh	r2, [r4, #130]	; 0x82
   35e10:	sub	r3, r3, #36	; 0x24
   35e14:	str	r3, [r4, #32]
   35e18:	ldr	r3, [r4, #156]	; 0x9c
   35e1c:	sub	r3, r3, #1
   35e20:	str	r3, [r4, #156]	; 0x9c
   35e24:	b	35d8c <flatcc_builder_end_offset_vector@@Base+0x2c>
   35e28:	ldrdeq	r5, [r5], -r8
   35e2c:	andeq	r0, r0, r8, asr #11
   35e30:			; <UNDEFINED> instruction: 0x000554b0
   35e34:	andeq	r5, r5, r4, asr r6

00035e38 <flatcc_builder_create_offset_vector@@Base>:
   35e38:	push	{r4, r5, r6, lr}
   35e3c:	mov	r4, r0
   35e40:	mov	r6, r1
   35e44:	mov	r5, r2
   35e48:	bl	34cc4 <flatcc_builder_start_offset_vector@@Base>
   35e4c:	cmp	r0, #0
   35e50:	beq	35e5c <flatcc_builder_create_offset_vector@@Base+0x24>
   35e54:	mov	r0, #0
   35e58:	pop	{r4, r5, r6, pc}
   35e5c:	mov	r1, r5
   35e60:	mov	r0, r4
   35e64:	bl	34694 <flatcc_builder_extend_offset_vector@@Base>
   35e68:	cmp	r0, #0
   35e6c:	beq	35e88 <flatcc_builder_create_offset_vector@@Base+0x50>
   35e70:	lsl	r2, r5, #2
   35e74:	mov	r1, r6
   35e78:	bl	13edc <memcpy@plt>
   35e7c:	mov	r0, r4
   35e80:	bl	35d60 <flatcc_builder_end_offset_vector@@Base>
   35e84:	pop	{r4, r5, r6, pc}
   35e88:	mov	r0, #0
   35e8c:	pop	{r4, r5, r6, pc}

00035e90 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   35e90:	push	{r4, r5, r6, lr}
   35e94:	mov	r4, r0
   35e98:	ldr	r2, [r0, #32]
   35e9c:	ldrh	r0, [r2, #14]
   35ea0:	cmp	r0, #5
   35ea4:	bne	35ecc <flatcc_builder_end_offset_vector_for_unions@@Base+0x3c>
   35ea8:	mov	r3, r1
   35eac:	ldr	r2, [r2, #20]
   35eb0:	ldr	r1, [r4, #16]
   35eb4:	mov	r0, r4
   35eb8:	bl	334f4 <flatcc_builder_default_alloc@@Base+0x378>
   35ebc:	subs	r5, r0, #0
   35ec0:	bne	35ee0 <flatcc_builder_end_offset_vector_for_unions@@Base+0x50>
   35ec4:	mov	r0, r5
   35ec8:	pop	{r4, r5, r6, pc}
   35ecc:	ldr	r3, [pc, #140]	; 35f60 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd0>
   35ed0:	ldr	r2, [pc, #140]	; 35f64 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd4>
   35ed4:	ldr	r1, [pc, #140]	; 35f68 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd8>
   35ed8:	ldr	r0, [pc, #140]	; 35f6c <flatcc_builder_end_offset_vector_for_unions@@Base+0xdc>
   35edc:	bl	14038 <__assert_fail@plt>
   35ee0:	ldr	r2, [r4, #20]
   35ee4:	mov	r1, #0
   35ee8:	ldr	r0, [r4, #16]
   35eec:	bl	13f9c <memset@plt>
   35ef0:	ldr	r2, [r4, #32]
   35ef4:	ldr	r3, [r2, #8]
   35ef8:	str	r3, [r4, #20]
   35efc:	ldr	r0, [r2]
   35f00:	str	r0, [r4, #28]
   35f04:	ldr	r1, [r2, #4]
   35f08:	ldr	r3, [r4, #60]	; 0x3c
   35f0c:	add	r3, r3, r0
   35f10:	str	r3, [r4, #16]
   35f14:	ldr	r3, [r4, #64]	; 0x40
   35f18:	sub	r3, r3, r0
   35f1c:	cmp	r3, r1
   35f20:	movcs	r3, r1
   35f24:	str	r3, [r4, #24]
   35f28:	str	r1, [r2, #4]
   35f2c:	ldrh	r3, [r4, #130]	; 0x82
   35f30:	ldrh	r2, [r4, #128]	; 0x80
   35f34:	cmp	r2, r3
   35f38:	strhcc	r3, [r4, #128]	; 0x80
   35f3c:	ldr	r3, [r4, #32]
   35f40:	ldrh	r2, [r3, #12]
   35f44:	strh	r2, [r4, #130]	; 0x82
   35f48:	sub	r3, r3, #36	; 0x24
   35f4c:	str	r3, [r4, #32]
   35f50:	ldr	r3, [r4, #156]	; 0x9c
   35f54:	sub	r3, r3, #1
   35f58:	str	r3, [r4, #156]	; 0x9c
   35f5c:	b	35ec4 <flatcc_builder_end_offset_vector_for_unions@@Base+0x34>
   35f60:	strdeq	r5, [r5], -ip
   35f64:	ldrdeq	r0, [r0], -r5
   35f68:			; <UNDEFINED> instruction: 0x000554b0
   35f6c:	andeq	r5, r5, r4, asr r6

00035f70 <flatcc_builder_offset_vector_edit@@Base>:
   35f70:	ldr	r0, [r0, #16]
   35f74:	bx	lr

00035f78 <flatcc_builder_offset_vector_count@@Base>:
   35f78:	ldr	r3, [r0, #32]
   35f7c:	ldr	r0, [r3, #20]
   35f80:	bx	lr

00035f84 <flatcc_builder_create_union_vector_direct@@Base>:
   35f84:	push	{r4, r5, r6, r7, lr}
   35f88:	sub	sp, sp, #12
   35f8c:	mov	r4, r0
   35f90:	mov	r5, r1
   35f94:	mov	r6, r2
   35f98:	mov	r1, r3
   35f9c:	mov	r3, r2
   35fa0:	ldr	r2, [sp, #32]
   35fa4:	mov	r0, r5
   35fa8:	bl	334f4 <flatcc_builder_default_alloc@@Base+0x378>
   35fac:	subs	r7, r0, #0
   35fb0:	bne	35fcc <flatcc_builder_create_union_vector_direct@@Base+0x48>
   35fb4:	mov	r3, #0
   35fb8:	str	r3, [r4]
   35fbc:	str	r3, [r4, #4]
   35fc0:	mov	r0, r4
   35fc4:	add	sp, sp, #12
   35fc8:	pop	{r4, r5, r6, r7, pc}
   35fcc:	mvn	r3, #0
   35fd0:	str	r3, [sp, #4]
   35fd4:	mov	r3, #1
   35fd8:	str	r3, [sp]
   35fdc:	ldr	r2, [sp, #32]
   35fe0:	mov	r1, r6
   35fe4:	mov	r0, r5
   35fe8:	bl	35aec <flatcc_builder_create_vector@@Base>
   35fec:	cmp	r0, #0
   35ff0:	moveq	r3, #0
   35ff4:	streq	r3, [r4]
   35ff8:	strne	r0, [r4]
   35ffc:	str	r7, [r4, #4]
   36000:	b	35fc0 <flatcc_builder_create_union_vector_direct@@Base+0x3c>

00036004 <flatcc_builder_create_union_vector@@Base>:
   36004:	push	{r4, r5, r6, r7, r8, lr}
   36008:	sub	sp, sp, #16
   3600c:	mov	r5, r0
   36010:	mov	r4, r1
   36014:	mov	r7, r2
   36018:	mov	r6, r3
   3601c:	mov	r0, r1
   36020:	bl	34cc4 <flatcc_builder_start_offset_vector@@Base>
   36024:	cmp	r0, #0
   36028:	beq	36044 <flatcc_builder_create_union_vector@@Base+0x40>
   3602c:	mov	r3, #0
   36030:	str	r3, [r5]
   36034:	str	r3, [r5, #4]
   36038:	mov	r0, r5
   3603c:	add	sp, sp, #16
   36040:	pop	{r4, r5, r6, r7, r8, pc}
   36044:	mov	r1, r6
   36048:	mov	r0, r4
   3604c:	bl	34694 <flatcc_builder_extend_offset_vector@@Base>
   36050:	cmp	r0, #0
   36054:	moveq	r3, #0
   36058:	streq	r3, [r5]
   3605c:	streq	r3, [r5, #4]
   36060:	beq	36038 <flatcc_builder_create_union_vector@@Base+0x34>
   36064:	ldr	r8, [r4, #20]
   36068:	add	r1, r6, r8
   3606c:	str	r1, [r4, #20]
   36070:	ldr	r3, [r4, #24]
   36074:	cmp	r1, r3
   36078:	bcs	3615c <flatcc_builder_create_union_vector@@Base+0x158>
   3607c:	ldr	r3, [r4, #16]
   36080:	adds	r2, r3, r8
   36084:	beq	36174 <flatcc_builder_create_union_vector@@Base+0x170>
   36088:	cmp	r6, #0
   3608c:	beq	360bc <flatcc_builder_create_union_vector@@Base+0xb8>
   36090:	mov	r1, r7
   36094:	sub	ip, r2, #1
   36098:	sub	r0, r3, #4
   3609c:	add	r7, r7, r6, lsl #3
   360a0:	ldrb	lr, [r1]
   360a4:	strb	lr, [ip, #1]!
   360a8:	ldr	lr, [r1, #4]
   360ac:	str	lr, [r0, #4]!
   360b0:	add	r1, r1, #8
   360b4:	cmp	r1, r7
   360b8:	bne	360a0 <flatcc_builder_create_union_vector@@Base+0x9c>
   360bc:	str	r6, [sp]
   360c0:	mov	r1, r4
   360c4:	add	r0, sp, #8
   360c8:	bl	35f84 <flatcc_builder_create_union_vector_direct@@Base>
   360cc:	ldr	r7, [sp, #8]
   360d0:	ldr	r6, [sp, #12]
   360d4:	ldr	r2, [r4, #20]
   360d8:	mov	r1, #0
   360dc:	ldr	r0, [r4, #16]
   360e0:	bl	13f9c <memset@plt>
   360e4:	ldr	r2, [r4, #32]
   360e8:	ldr	r3, [r2, #8]
   360ec:	str	r3, [r4, #20]
   360f0:	ldr	r0, [r2]
   360f4:	str	r0, [r4, #28]
   360f8:	ldr	r1, [r2, #4]
   360fc:	ldr	r3, [r4, #60]	; 0x3c
   36100:	add	r3, r3, r0
   36104:	str	r3, [r4, #16]
   36108:	ldr	r3, [r4, #64]	; 0x40
   3610c:	sub	r3, r3, r0
   36110:	cmp	r3, r1
   36114:	movcs	r3, r1
   36118:	str	r3, [r4, #24]
   3611c:	str	r1, [r2, #4]
   36120:	ldrh	r3, [r4, #130]	; 0x82
   36124:	ldrh	r2, [r4, #128]	; 0x80
   36128:	cmp	r2, r3
   3612c:	strhcc	r3, [r4, #128]	; 0x80
   36130:	ldr	r3, [r4, #32]
   36134:	ldrh	r2, [r3, #12]
   36138:	strh	r2, [r4, #130]	; 0x82
   3613c:	sub	r3, r3, #36	; 0x24
   36140:	str	r3, [r4, #32]
   36144:	ldr	r3, [r4, #156]	; 0x9c
   36148:	sub	r3, r3, #1
   3614c:	str	r3, [r4, #156]	; 0x9c
   36150:	str	r7, [r5]
   36154:	str	r6, [r5, #4]
   36158:	b	36038 <flatcc_builder_create_union_vector@@Base+0x34>
   3615c:	mvn	r2, #3
   36160:	add	r1, r1, #1
   36164:	mov	r0, r4
   36168:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   3616c:	cmp	r0, #0
   36170:	beq	3607c <flatcc_builder_create_union_vector@@Base+0x78>
   36174:	mov	r3, #0
   36178:	str	r3, [r5]
   3617c:	str	r3, [r5, #4]
   36180:	b	36038 <flatcc_builder_create_union_vector@@Base+0x34>

00036184 <flatcc_builder_start_union_vector@@Base>:
   36184:	push	{r4, lr}
   36188:	mov	r4, r0
   3618c:	mov	r1, #4
   36190:	bl	333a8 <flatcc_builder_default_alloc@@Base+0x22c>
   36194:	cmp	r0, #0
   36198:	bne	361f4 <flatcc_builder_start_union_vector@@Base+0x70>
   3619c:	ldr	r3, [r4, #32]
   361a0:	mov	r2, #8
   361a4:	str	r2, [r3, #16]
   361a8:	ldr	r3, [r4, #32]
   361ac:	mov	r2, #0
   361b0:	str	r2, [r3, #20]
   361b4:	ldr	r3, [r4, #32]
   361b8:	mov	r2, #7
   361bc:	strh	r2, [r3, #14]
   361c0:	ldr	r1, [r4, #28]
   361c4:	ldr	r2, [r4, #60]	; 0x3c
   361c8:	add	r2, r2, r1
   361cc:	str	r2, [r4, #16]
   361d0:	ldr	r3, [r4, #64]	; 0x40
   361d4:	sub	r3, r3, r1
   361d8:	cmn	r3, #4
   361dc:	mvnhi	r3, #3
   361e0:	str	r3, [r4, #24]
   361e4:	ldr	r3, [r4, #32]
   361e8:	mvn	r2, #3
   361ec:	str	r2, [r3, #4]
   361f0:	pop	{r4, pc}
   361f4:	mvn	r0, #0
   361f8:	pop	{r4, pc}

000361fc <flatcc_builder_end_union_vector@@Base>:
   361fc:	push	{r4, r5, r6, r7, r8, lr}
   36200:	sub	sp, sp, #16
   36204:	ldr	r3, [r1, #32]
   36208:	ldrh	r2, [r3, #14]
   3620c:	cmp	r2, #7
   36210:	bne	36328 <flatcc_builder_end_union_vector@@Base+0x12c>
   36214:	mov	r6, r0
   36218:	mov	r4, r1
   3621c:	ldr	r5, [r3, #20]
   36220:	ldr	r8, [r1, #20]
   36224:	add	r1, r5, r5, lsl #2
   36228:	add	r1, r1, r8
   3622c:	str	r1, [r4, #20]
   36230:	ldr	r3, [r4, #24]
   36234:	cmp	r1, r3
   36238:	bcs	3633c <flatcc_builder_end_union_vector@@Base+0x140>
   3623c:	ldr	r7, [r4, #16]
   36240:	adds	r3, r7, r8
   36244:	beq	36354 <flatcc_builder_end_union_vector@@Base+0x158>
   36248:	add	r2, r3, r5, lsl #2
   3624c:	cmp	r5, #0
   36250:	beq	36280 <flatcc_builder_end_union_vector@@Base+0x84>
   36254:	mov	r1, r7
   36258:	sub	ip, r2, #1
   3625c:	sub	r0, r3, #4
   36260:	add	r7, r7, r5, lsl #3
   36264:	ldrb	lr, [r1]
   36268:	strb	lr, [ip, #1]!
   3626c:	ldr	lr, [r1, #4]
   36270:	str	lr, [r0, #4]!
   36274:	add	r1, r1, #8
   36278:	cmp	r1, r7
   3627c:	bne	36264 <flatcc_builder_end_union_vector@@Base+0x68>
   36280:	str	r5, [sp]
   36284:	mov	r1, r4
   36288:	add	r0, sp, #8
   3628c:	bl	35f84 <flatcc_builder_create_union_vector_direct@@Base>
   36290:	ldr	r7, [sp, #8]
   36294:	ldr	r5, [sp, #12]
   36298:	ldr	r2, [r4, #20]
   3629c:	mov	r1, #0
   362a0:	ldr	r0, [r4, #16]
   362a4:	bl	13f9c <memset@plt>
   362a8:	ldr	r2, [r4, #32]
   362ac:	ldr	r3, [r2, #8]
   362b0:	str	r3, [r4, #20]
   362b4:	ldr	r0, [r2]
   362b8:	str	r0, [r4, #28]
   362bc:	ldr	r1, [r2, #4]
   362c0:	ldr	r3, [r4, #60]	; 0x3c
   362c4:	add	r3, r3, r0
   362c8:	str	r3, [r4, #16]
   362cc:	ldr	r3, [r4, #64]	; 0x40
   362d0:	sub	r3, r3, r0
   362d4:	cmp	r3, r1
   362d8:	movcs	r3, r1
   362dc:	str	r3, [r4, #24]
   362e0:	str	r1, [r2, #4]
   362e4:	ldrh	r3, [r4, #130]	; 0x82
   362e8:	ldrh	r2, [r4, #128]	; 0x80
   362ec:	cmp	r2, r3
   362f0:	strhcc	r3, [r4, #128]	; 0x80
   362f4:	ldr	r3, [r4, #32]
   362f8:	ldrh	r2, [r3, #12]
   362fc:	strh	r2, [r4, #130]	; 0x82
   36300:	sub	r3, r3, #36	; 0x24
   36304:	str	r3, [r4, #32]
   36308:	ldr	r3, [r4, #156]	; 0x9c
   3630c:	sub	r3, r3, #1
   36310:	str	r3, [r4, #156]	; 0x9c
   36314:	str	r7, [r6]
   36318:	str	r5, [r6, #4]
   3631c:	mov	r0, r6
   36320:	add	sp, sp, #16
   36324:	pop	{r4, r5, r6, r7, r8, pc}
   36328:	ldr	r3, [pc, #52]	; 36364 <flatcc_builder_end_union_vector@@Base+0x168>
   3632c:	ldr	r2, [pc, #52]	; 36368 <flatcc_builder_end_union_vector@@Base+0x16c>
   36330:	ldr	r1, [pc, #52]	; 3636c <flatcc_builder_end_union_vector@@Base+0x170>
   36334:	ldr	r0, [pc, #52]	; 36370 <flatcc_builder_end_union_vector@@Base+0x174>
   36338:	bl	14038 <__assert_fail@plt>
   3633c:	mvn	r2, #3
   36340:	add	r1, r1, #1
   36344:	mov	r0, r4
   36348:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   3634c:	cmp	r0, #0
   36350:	beq	3623c <flatcc_builder_end_union_vector@@Base+0x40>
   36354:	mov	r3, #0
   36358:	str	r3, [r6]
   3635c:	str	r3, [r6, #4]
   36360:	b	3631c <flatcc_builder_end_union_vector@@Base+0x120>
   36364:	andeq	r5, r5, r8, lsr #6
   36368:	andeq	r0, r0, r1, asr r6
   3636c:			; <UNDEFINED> instruction: 0x000554b0
   36370:			; <UNDEFINED> instruction: 0x000557b4

00036374 <flatcc_builder_union_vector_edit@@Base>:
   36374:	ldr	r0, [r0, #16]
   36378:	bx	lr

0003637c <flatcc_builder_union_vector_count@@Base>:
   3637c:	ldr	r3, [r0, #32]
   36380:	ldr	r0, [r3, #20]
   36384:	bx	lr

00036388 <flatcc_builder_extend_union_vector@@Base>:
   36388:	push	{r4, r5, r6, lr}
   3638c:	mov	r4, r0
   36390:	ldr	r2, [r0, #32]
   36394:	ldr	r3, [r2, #20]
   36398:	adds	r3, r1, r3
   3639c:	movcs	ip, #1
   363a0:	movcc	ip, #0
   363a4:	cmn	r3, #-536870911	; 0xe0000001
   363a8:	movls	r0, #0
   363ac:	movhi	r0, #1
   363b0:	orrs	r0, ip, r0
   363b4:	bne	363e0 <flatcc_builder_extend_union_vector@@Base+0x58>
   363b8:	str	r3, [r2, #20]
   363bc:	ldr	r5, [r4, #20]
   363c0:	add	r1, r5, r1, lsl #3
   363c4:	str	r1, [r4, #20]
   363c8:	ldr	r3, [r4, #24]
   363cc:	cmp	r1, r3
   363d0:	bcs	363f4 <flatcc_builder_extend_union_vector@@Base+0x6c>
   363d4:	ldr	r0, [r4, #16]
   363d8:	add	r0, r0, r5
   363dc:	pop	{r4, r5, r6, pc}
   363e0:	ldr	r3, [pc, #44]	; 36414 <flatcc_builder_extend_union_vector@@Base+0x8c>
   363e4:	mov	r2, #892	; 0x37c
   363e8:	ldr	r1, [pc, #40]	; 36418 <flatcc_builder_extend_union_vector@@Base+0x90>
   363ec:	ldr	r0, [pc, #40]	; 3641c <flatcc_builder_extend_union_vector@@Base+0x94>
   363f0:	bl	14038 <__assert_fail@plt>
   363f4:	mvn	r2, #3
   363f8:	add	r1, r1, #1
   363fc:	mov	r0, r4
   36400:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   36404:	cmp	r0, #0
   36408:	beq	363d4 <flatcc_builder_extend_union_vector@@Base+0x4c>
   3640c:	mov	r0, #0
   36410:	pop	{r4, r5, r6, pc}
   36414:	muleq	r5, r0, r0
   36418:			; <UNDEFINED> instruction: 0x000554b0
   3641c:	andeq	r5, r5, ip, asr #11

00036420 <flatcc_builder_truncate_union_vector@@Base>:
   36420:	push	{r4, lr}
   36424:	ldr	ip, [r0, #32]
   36428:	ldrh	r3, [ip, #14]
   3642c:	cmp	r3, #7
   36430:	bne	36478 <flatcc_builder_truncate_union_vector@@Base+0x58>
   36434:	ldr	r3, [ip, #20]
   36438:	cmp	r3, r1
   3643c:	bcc	3648c <flatcc_builder_truncate_union_vector@@Base+0x6c>
   36440:	sub	r3, r3, r1
   36444:	str	r3, [ip, #20]
   36448:	ldr	r3, [r0, #32]
   3644c:	ldr	r2, [r3, #16]
   36450:	mul	r2, r2, r1
   36454:	ldr	r3, [r0, #20]
   36458:	sub	r3, r3, r2
   3645c:	str	r3, [r0, #20]
   36460:	ldr	r0, [r0, #16]
   36464:	mov	r1, #0
   36468:	add	r0, r0, r3
   3646c:	bl	13f9c <memset@plt>
   36470:	mov	r0, #0
   36474:	pop	{r4, pc}
   36478:	ldr	r3, [pc, #32]	; 364a0 <flatcc_builder_truncate_union_vector@@Base+0x80>
   3647c:	ldr	r2, [pc, #32]	; 364a4 <flatcc_builder_truncate_union_vector@@Base+0x84>
   36480:	ldr	r1, [pc, #32]	; 364a8 <flatcc_builder_truncate_union_vector@@Base+0x88>
   36484:	ldr	r0, [pc, #32]	; 364ac <flatcc_builder_truncate_union_vector@@Base+0x8c>
   36488:	bl	14038 <__assert_fail@plt>
   3648c:	ldr	r3, [pc, #12]	; 364a0 <flatcc_builder_truncate_union_vector@@Base+0x80>
   36490:	ldr	r2, [pc, #24]	; 364b0 <flatcc_builder_truncate_union_vector@@Base+0x90>
   36494:	ldr	r1, [pc, #12]	; 364a8 <flatcc_builder_truncate_union_vector@@Base+0x88>
   36498:	ldr	r0, [pc, #20]	; 364b4 <flatcc_builder_truncate_union_vector@@Base+0x94>
   3649c:	bl	14038 <__assert_fail@plt>
   364a0:	andeq	r5, r5, r8, asr #6
   364a4:	andeq	r0, r0, r1, lsl #13
   364a8:			; <UNDEFINED> instruction: 0x000554b0
   364ac:			; <UNDEFINED> instruction: 0x000557b4
   364b0:	andeq	r0, r0, r2, lsl #13
   364b4:	ldrdeq	r5, [r5], -r8

000364b8 <flatcc_builder_union_vector_push@@Base>:
   364b8:	push	{r4, r5, lr}
   364bc:	sub	sp, sp, #12
   364c0:	add	r3, sp, #8
   364c4:	stmdb	r3, {r1, r2}
   364c8:	ldr	r2, [r0, #32]
   364cc:	ldrh	r3, [r2, #14]
   364d0:	cmp	r3, #7
   364d4:	bne	3652c <flatcc_builder_union_vector_push@@Base+0x74>
   364d8:	mov	r4, r0
   364dc:	ldr	r3, [r2, #20]
   364e0:	cmn	r3, #-536870911	; 0xe0000001
   364e4:	beq	3655c <flatcc_builder_union_vector_push@@Base+0xa4>
   364e8:	add	r3, r3, #1
   364ec:	str	r3, [r2, #20]
   364f0:	ldr	r5, [r0, #20]
   364f4:	add	r3, r5, #8
   364f8:	str	r3, [r0, #20]
   364fc:	ldr	r2, [r0, #24]
   36500:	cmp	r3, r2
   36504:	bcs	36540 <flatcc_builder_union_vector_push@@Base+0x88>
   36508:	ldr	r3, [r4, #16]
   3650c:	adds	r3, r3, r5
   36510:	moveq	r0, r3
   36514:	addne	r2, sp, #8
   36518:	ldmdbne	r2, {r0, r1}
   3651c:	stmne	r3, {r0, r1}
   36520:	movne	r0, r3
   36524:	add	sp, sp, #12
   36528:	pop	{r4, r5, pc}
   3652c:	ldr	r3, [pc, #48]	; 36564 <flatcc_builder_union_vector_push@@Base+0xac>
   36530:	ldr	r2, [pc, #48]	; 36568 <flatcc_builder_union_vector_push@@Base+0xb0>
   36534:	ldr	r1, [pc, #48]	; 3656c <flatcc_builder_union_vector_push@@Base+0xb4>
   36538:	ldr	r0, [pc, #48]	; 36570 <flatcc_builder_union_vector_push@@Base+0xb8>
   3653c:	bl	14038 <__assert_fail@plt>
   36540:	mvn	r2, #3
   36544:	add	r1, r5, #9
   36548:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   3654c:	cmp	r0, #0
   36550:	beq	36508 <flatcc_builder_union_vector_push@@Base+0x50>
   36554:	mov	r0, #0
   36558:	b	36524 <flatcc_builder_union_vector_push@@Base+0x6c>
   3655c:	mov	r0, #0
   36560:	b	36524 <flatcc_builder_union_vector_push@@Base+0x6c>
   36564:	andeq	r5, r5, r0, ror r3
   36568:	andeq	r0, r0, sp, lsl #13
   3656c:			; <UNDEFINED> instruction: 0x000554b0
   36570:			; <UNDEFINED> instruction: 0x000557b4

00036574 <flatcc_builder_append_union_vector@@Base>:
   36574:	push	{r4, r5, r6, r7, r8, lr}
   36578:	mov	r6, r1
   3657c:	ldr	r1, [r0, #32]
   36580:	ldrh	r3, [r1, #14]
   36584:	cmp	r3, #7
   36588:	bne	365f8 <flatcc_builder_append_union_vector@@Base+0x84>
   3658c:	mov	r5, r0
   36590:	ldr	r3, [r1, #20]
   36594:	adds	r3, r2, r3
   36598:	movcs	ip, #1
   3659c:	movcc	ip, #0
   365a0:	cmn	r3, #-536870911	; 0xe0000001
   365a4:	movls	r0, #0
   365a8:	movhi	r0, #1
   365ac:	orrs	r0, ip, r0
   365b0:	bne	3660c <flatcc_builder_append_union_vector@@Base+0x98>
   365b4:	str	r3, [r1, #20]
   365b8:	lsl	r4, r2, #3
   365bc:	ldr	r7, [r5, #20]
   365c0:	add	r1, r4, r7
   365c4:	str	r1, [r5, #20]
   365c8:	ldr	r3, [r5, #24]
   365cc:	cmp	r1, r3
   365d0:	bcs	36620 <flatcc_builder_append_union_vector@@Base+0xac>
   365d4:	ldr	r5, [r5, #16]
   365d8:	adds	r5, r5, r7
   365dc:	beq	365f0 <flatcc_builder_append_union_vector@@Base+0x7c>
   365e0:	mov	r2, r4
   365e4:	mov	r1, r6
   365e8:	mov	r0, r5
   365ec:	bl	13edc <memcpy@plt>
   365f0:	mov	r0, r5
   365f4:	pop	{r4, r5, r6, r7, r8, pc}
   365f8:	ldr	r3, [pc, #64]	; 36640 <flatcc_builder_append_union_vector@@Base+0xcc>
   365fc:	ldr	r2, [pc, #64]	; 36644 <flatcc_builder_append_union_vector@@Base+0xd0>
   36600:	ldr	r1, [pc, #64]	; 36648 <flatcc_builder_append_union_vector@@Base+0xd4>
   36604:	ldr	r0, [pc, #64]	; 3664c <flatcc_builder_append_union_vector@@Base+0xd8>
   36608:	bl	14038 <__assert_fail@plt>
   3660c:	ldr	r3, [pc, #60]	; 36650 <flatcc_builder_append_union_vector@@Base+0xdc>
   36610:	mov	r2, #892	; 0x37c
   36614:	ldr	r1, [pc, #44]	; 36648 <flatcc_builder_append_union_vector@@Base+0xd4>
   36618:	ldr	r0, [pc, #52]	; 36654 <flatcc_builder_append_union_vector@@Base+0xe0>
   3661c:	bl	14038 <__assert_fail@plt>
   36620:	mvn	r2, #3
   36624:	add	r1, r1, #1
   36628:	mov	r0, r5
   3662c:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   36630:	cmp	r0, #0
   36634:	beq	365d4 <flatcc_builder_append_union_vector@@Base+0x60>
   36638:	mov	r5, #0
   3663c:	b	365f0 <flatcc_builder_append_union_vector@@Base+0x7c>
   36640:	muleq	r5, r4, r3
   36644:	muleq	r0, ip, r6
   36648:			; <UNDEFINED> instruction: 0x000554b0
   3664c:			; <UNDEFINED> instruction: 0x000557b4
   36650:	muleq	r5, r0, r0
   36654:	andeq	r5, r5, ip, asr #11

00036658 <flatcc_builder_create_string@@Base>:
   36658:	push	{r4, r5, r6, lr}
   3665c:	sub	sp, sp, #88	; 0x58
   36660:	mov	r5, r0
   36664:	str	r2, [sp, #84]	; 0x54
   36668:	ldr	r0, [r0, #136]	; 0x88
   3666c:	sub	r3, r0, r2
   36670:	sub	r3, r3, #1
   36674:	and	r3, r3, #3
   36678:	add	r3, r3, #1
   3667c:	mov	ip, #4
   36680:	str	ip, [sp, #12]
   36684:	add	lr, sp, #84	; 0x54
   36688:	str	lr, [sp, #20]
   3668c:	str	ip, [sp, #24]
   36690:	mov	ip, #1
   36694:	str	ip, [sp, #16]
   36698:	cmp	r2, #0
   3669c:	beq	366b8 <flatcc_builder_create_string@@Base+0x60>
   366a0:	add	ip, r2, #4
   366a4:	str	ip, [sp, #12]
   366a8:	str	r1, [sp, #28]
   366ac:	str	r2, [sp, #32]
   366b0:	mov	r2, #2
   366b4:	str	r2, [sp, #16]
   366b8:	cmp	r3, #0
   366bc:	beq	366ec <flatcc_builder_create_string@@Base+0x94>
   366c0:	ldr	r2, [sp, #12]
   366c4:	add	r2, r2, r3
   366c8:	str	r2, [sp, #12]
   366cc:	ldr	r2, [sp, #16]
   366d0:	add	r2, r2, #1
   366d4:	add	r1, sp, #88	; 0x58
   366d8:	add	r1, r1, r2, lsl #3
   366dc:	ldr	ip, [pc, #116]	; 36758 <flatcc_builder_create_string@@Base+0x100>
   366e0:	str	ip, [r1, #-76]	; 0xffffffb4
   366e4:	str	r3, [r1, #-72]	; 0xffffffb8
   366e8:	str	r2, [sp, #16]
   366ec:	ldr	r3, [sp, #12]
   366f0:	sub	r4, r0, r3
   366f4:	cmp	r0, r4
   366f8:	ble	36730 <flatcc_builder_create_string@@Base+0xd8>
   366fc:	str	r3, [sp]
   36700:	ldr	r6, [r5, #44]	; 0x2c
   36704:	mov	r3, r4
   36708:	ldr	r2, [sp, #16]
   3670c:	add	r1, sp, #20
   36710:	ldr	r0, [r5, #36]	; 0x24
   36714:	blx	r6
   36718:	cmp	r0, #0
   3671c:	bne	36744 <flatcc_builder_create_string@@Base+0xec>
   36720:	str	r4, [r5, #136]	; 0x88
   36724:	mov	r0, r4
   36728:	add	sp, sp, #88	; 0x58
   3672c:	pop	{r4, r5, r6, pc}
   36730:	ldr	r3, [pc, #36]	; 3675c <flatcc_builder_create_string@@Base+0x104>
   36734:	ldr	r2, [pc, #36]	; 36760 <flatcc_builder_create_string@@Base+0x108>
   36738:	ldr	r1, [pc, #36]	; 36764 <flatcc_builder_create_string@@Base+0x10c>
   3673c:	ldr	r0, [pc, #36]	; 36768 <flatcc_builder_create_string@@Base+0x110>
   36740:	bl	14038 <__assert_fail@plt>
   36744:	ldr	r3, [pc, #16]	; 3675c <flatcc_builder_create_string@@Base+0x104>
   36748:	ldr	r2, [pc, #28]	; 3676c <flatcc_builder_create_string@@Base+0x114>
   3674c:	ldr	r1, [pc, #16]	; 36764 <flatcc_builder_create_string@@Base+0x10c>
   36750:	ldr	r0, [pc, #16]	; 36768 <flatcc_builder_create_string@@Base+0x110>
   36754:	bl	14038 <__assert_fail@plt>
   36758:	andeq	r4, r5, r0, ror #26
   3675c:	andeq	r4, r5, ip, lsr #31
   36760:	andeq	r0, r0, r7, lsl #5
   36764:			; <UNDEFINED> instruction: 0x000554b0
   36768:	andeq	r3, r4, r0, ror lr
   3676c:	andeq	r0, r0, fp, lsl #5

00036770 <flatcc_builder_create_string_str@@Base>:
   36770:	push	{r4, r5, r6, lr}
   36774:	mov	r5, r0
   36778:	mov	r4, r1
   3677c:	mov	r0, r1
   36780:	bl	13f78 <strlen@plt>
   36784:	mov	r2, r0
   36788:	mov	r1, r4
   3678c:	mov	r0, r5
   36790:	bl	36658 <flatcc_builder_create_string@@Base>
   36794:	pop	{r4, r5, r6, pc}

00036798 <flatcc_builder_create_string_strn@@Base>:
   36798:	push	{r4, r5, r6, lr}
   3679c:	mov	r6, r0
   367a0:	mov	r4, r1
   367a4:	mov	r5, r2
   367a8:	mov	r1, #0
   367ac:	mov	r0, r4
   367b0:	bl	13fc0 <memchr@plt>
   367b4:	cmp	r0, #0
   367b8:	subne	r5, r0, r4
   367bc:	mov	r2, r5
   367c0:	mov	r1, r4
   367c4:	mov	r0, r6
   367c8:	bl	36658 <flatcc_builder_create_string@@Base>
   367cc:	pop	{r4, r5, r6, pc}

000367d0 <flatcc_builder_end_string@@Base>:
   367d0:	push	{r4, r5, r6, lr}
   367d4:	ldr	r3, [r0, #32]
   367d8:	ldrh	r2, [r3, #14]
   367dc:	cmp	r2, #6
   367e0:	bne	36810 <flatcc_builder_end_string@@Base+0x40>
   367e4:	mov	r4, r0
   367e8:	ldr	r2, [r3, #20]
   367ec:	ldr	r3, [r0, #20]
   367f0:	cmp	r2, r3
   367f4:	bne	36824 <flatcc_builder_end_string@@Base+0x54>
   367f8:	ldr	r1, [r0, #16]
   367fc:	bl	36658 <flatcc_builder_create_string@@Base>
   36800:	subs	r5, r0, #0
   36804:	bne	36838 <flatcc_builder_end_string@@Base+0x68>
   36808:	mov	r0, r5
   3680c:	pop	{r4, r5, r6, pc}
   36810:	ldr	r3, [pc, #160]	; 368b8 <flatcc_builder_end_string@@Base+0xe8>
   36814:	ldr	r2, [pc, #160]	; 368bc <flatcc_builder_end_string@@Base+0xec>
   36818:	ldr	r1, [pc, #160]	; 368c0 <flatcc_builder_end_string@@Base+0xf0>
   3681c:	ldr	r0, [pc, #160]	; 368c4 <flatcc_builder_end_string@@Base+0xf4>
   36820:	bl	14038 <__assert_fail@plt>
   36824:	ldr	r3, [pc, #140]	; 368b8 <flatcc_builder_end_string@@Base+0xe8>
   36828:	ldr	r2, [pc, #152]	; 368c8 <flatcc_builder_end_string@@Base+0xf8>
   3682c:	ldr	r1, [pc, #140]	; 368c0 <flatcc_builder_end_string@@Base+0xf0>
   36830:	ldr	r0, [pc, #148]	; 368cc <flatcc_builder_end_string@@Base+0xfc>
   36834:	bl	14038 <__assert_fail@plt>
   36838:	ldr	r2, [r4, #20]
   3683c:	mov	r1, #0
   36840:	ldr	r0, [r4, #16]
   36844:	bl	13f9c <memset@plt>
   36848:	ldr	r2, [r4, #32]
   3684c:	ldr	r3, [r2, #8]
   36850:	str	r3, [r4, #20]
   36854:	ldr	r0, [r2]
   36858:	str	r0, [r4, #28]
   3685c:	ldr	r1, [r2, #4]
   36860:	ldr	r3, [r4, #60]	; 0x3c
   36864:	add	r3, r3, r0
   36868:	str	r3, [r4, #16]
   3686c:	ldr	r3, [r4, #64]	; 0x40
   36870:	sub	r3, r3, r0
   36874:	cmp	r3, r1
   36878:	movcs	r3, r1
   3687c:	str	r3, [r4, #24]
   36880:	str	r1, [r2, #4]
   36884:	ldrh	r3, [r4, #130]	; 0x82
   36888:	ldrh	r2, [r4, #128]	; 0x80
   3688c:	cmp	r2, r3
   36890:	strhcc	r3, [r4, #128]	; 0x80
   36894:	ldr	r3, [r4, #32]
   36898:	ldrh	r2, [r3, #12]
   3689c:	strh	r2, [r4, #130]	; 0x82
   368a0:	sub	r3, r3, #36	; 0x24
   368a4:	str	r3, [r4, #32]
   368a8:	ldr	r3, [r4, #156]	; 0x9c
   368ac:	sub	r3, r3, #1
   368b0:	str	r3, [r4, #156]	; 0x9c
   368b4:	b	36808 <flatcc_builder_end_string@@Base+0x38>
   368b8:			; <UNDEFINED> instruction: 0x000553b8
   368bc:	andeq	r0, r0, r4, asr #13
   368c0:			; <UNDEFINED> instruction: 0x000554b0
   368c4:	andeq	r5, r5, r8, lsl #13
   368c8:	andeq	r0, r0, r5, asr #13
   368cc:	andeq	r5, r5, r8, ror #15

000368d0 <flatcc_builder_string_edit@@Base>:
   368d0:	ldr	r0, [r0, #16]
   368d4:	bx	lr

000368d8 <flatcc_builder_string_len@@Base>:
   368d8:	ldr	r3, [r0, #32]
   368dc:	ldr	r0, [r3, #20]
   368e0:	bx	lr

000368e4 <flatcc_builder_table_add@@Base>:
   368e4:	push	{r4, r5, r6, r7, r8, lr}
   368e8:	mov	r5, r1
   368ec:	ldr	r1, [r0, #32]
   368f0:	ldrh	r1, [r1, #14]
   368f4:	cmp	r1, #3
   368f8:	bne	369a4 <flatcc_builder_table_add@@Base+0xc0>
   368fc:	mov	r4, r0
   36900:	ldr	r1, [pc, #248]	; 36a00 <flatcc_builder_table_add@@Base+0x11c>
   36904:	cmp	r5, r1
   36908:	bhi	369b8 <flatcc_builder_table_add@@Base+0xd4>
   3690c:	ldrh	r1, [r0, #130]	; 0x82
   36910:	cmp	r1, r3
   36914:	strhcc	r3, [r0, #130]	; 0x82
   36918:	ldr	r0, [r0, #4]
   3691c:	lsl	r1, r5, #1
   36920:	ldrh	r1, [r0, r1]
   36924:	cmp	r1, #0
   36928:	bne	369cc <flatcc_builder_table_add@@Base+0xe8>
   3692c:	ldr	r0, [r4, #12]
   36930:	eor	r0, r0, r5
   36934:	ldr	r1, [pc, #200]	; 36a04 <flatcc_builder_table_add@@Base+0x120>
   36938:	mul	r0, r1, r0
   3693c:	eor	r0, r0, r2
   36940:	mul	r0, r1, r0
   36944:	str	r0, [r4, #12]
   36948:	uxth	r7, r5
   3694c:	sub	r6, r3, #1
   36950:	ldr	r0, [r4, #20]
   36954:	add	r6, r6, r0
   36958:	rsb	r3, r3, #0
   3695c:	and	r6, r6, r3
   36960:	add	r1, r2, r6
   36964:	str	r1, [r4, #20]
   36968:	ldr	r3, [r4, #24]
   3696c:	cmp	r1, r3
   36970:	bcs	369e0 <flatcc_builder_table_add@@Base+0xfc>
   36974:	uxth	r5, r5
   36978:	ldr	r3, [r4, #4]
   3697c:	lsl	r5, r5, #1
   36980:	add	r2, r6, #4
   36984:	strh	r2, [r3, r5]
   36988:	ldrh	r3, [r4, #8]
   3698c:	cmp	r3, r7
   36990:	addls	r7, r7, #1
   36994:	strhls	r7, [r4, #8]
   36998:	ldr	r0, [r4, #16]
   3699c:	add	r0, r0, r6
   369a0:	pop	{r4, r5, r6, r7, r8, pc}
   369a4:	ldr	r3, [pc, #92]	; 36a08 <flatcc_builder_table_add@@Base+0x124>
   369a8:	ldr	r2, [pc, #92]	; 36a0c <flatcc_builder_table_add@@Base+0x128>
   369ac:	ldr	r1, [pc, #92]	; 36a10 <flatcc_builder_table_add@@Base+0x12c>
   369b0:	ldr	r0, [pc, #92]	; 36a14 <flatcc_builder_table_add@@Base+0x130>
   369b4:	bl	14038 <__assert_fail@plt>
   369b8:	ldr	r3, [pc, #72]	; 36a08 <flatcc_builder_table_add@@Base+0x124>
   369bc:	ldr	r2, [pc, #84]	; 36a18 <flatcc_builder_table_add@@Base+0x134>
   369c0:	ldr	r1, [pc, #72]	; 36a10 <flatcc_builder_table_add@@Base+0x12c>
   369c4:	ldr	r0, [pc, #80]	; 36a1c <flatcc_builder_table_add@@Base+0x138>
   369c8:	bl	14038 <__assert_fail@plt>
   369cc:	ldr	r3, [pc, #52]	; 36a08 <flatcc_builder_table_add@@Base+0x124>
   369d0:	ldr	r2, [pc, #72]	; 36a20 <flatcc_builder_table_add@@Base+0x13c>
   369d4:	ldr	r1, [pc, #52]	; 36a10 <flatcc_builder_table_add@@Base+0x12c>
   369d8:	ldr	r0, [pc, #68]	; 36a24 <flatcc_builder_table_add@@Base+0x140>
   369dc:	bl	14038 <__assert_fail@plt>
   369e0:	ldr	r2, [pc, #64]	; 36a28 <flatcc_builder_table_add@@Base+0x144>
   369e4:	add	r1, r1, #1
   369e8:	mov	r0, r4
   369ec:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   369f0:	cmp	r0, #0
   369f4:	beq	36974 <flatcc_builder_table_add@@Base+0x90>
   369f8:	mov	r0, #0
   369fc:	pop	{r4, r5, r6, r7, r8, pc}
   36a00:	strdeq	r7, [r0], -ip
   36a04:			; <UNDEFINED> instruction: 0x9e3779b1
   36a08:	ldrdeq	r5, [r5], -r4
   36a0c:	andeq	r0, r0, sp, ror #13
   36a10:			; <UNDEFINED> instruction: 0x000554b0
   36a14:	andeq	r5, r5, r4, ror r7
   36a18:	andeq	r0, r0, lr, ror #13
   36a1c:	andeq	r5, r5, ip, lsl #16
   36a20:	strdeq	r0, [r0], -r8
   36a24:	andeq	r3, r4, r0, ror lr
   36a28:	strdeq	pc, [r0], -ip

00036a2c <flatcc_builder_table_edit@@Base>:
   36a2c:	ldr	r3, [r0, #32]
   36a30:	ldrh	r3, [r3, #14]
   36a34:	cmp	r3, #3
   36a38:	bne	36a50 <flatcc_builder_table_edit@@Base+0x24>
   36a3c:	ldr	r3, [r0, #20]
   36a40:	sub	r1, r3, r1
   36a44:	ldr	r0, [r0, #16]
   36a48:	add	r0, r0, r1
   36a4c:	bx	lr
   36a50:	push	{r4, lr}
   36a54:	ldr	r3, [pc, #12]	; 36a68 <flatcc_builder_table_edit@@Base+0x3c>
   36a58:	ldr	r2, [pc, #12]	; 36a6c <flatcc_builder_table_edit@@Base+0x40>
   36a5c:	ldr	r1, [pc, #12]	; 36a70 <flatcc_builder_table_edit@@Base+0x44>
   36a60:	ldr	r0, [pc, #12]	; 36a74 <flatcc_builder_table_edit@@Base+0x48>
   36a64:	bl	14038 <__assert_fail@plt>
   36a68:	strdeq	r5, [r5], -r0
   36a6c:	andeq	r0, r0, r2, lsl #14
   36a70:			; <UNDEFINED> instruction: 0x000554b0
   36a74:	andeq	r5, r5, r4, ror r7

00036a78 <flatcc_builder_table_add_copy@@Base>:
   36a78:	push	{r4, r5, r6, lr}
   36a7c:	mov	r6, r2
   36a80:	mov	r5, r3
   36a84:	ldrh	r3, [sp, #16]
   36a88:	mov	r2, r5
   36a8c:	bl	368e4 <flatcc_builder_table_add@@Base>
   36a90:	subs	r4, r0, #0
   36a94:	beq	36aa8 <flatcc_builder_table_add_copy@@Base+0x30>
   36a98:	mov	r2, r5
   36a9c:	mov	r1, r6
   36aa0:	mov	r0, r4
   36aa4:	bl	13edc <memcpy@plt>
   36aa8:	mov	r0, r4
   36aac:	pop	{r4, r5, r6, pc}

00036ab0 <flatcc_builder_table_add_offset@@Base>:
   36ab0:	push	{r4, r5, r6, r7, r8, lr}
   36ab4:	ldr	r3, [r0, #32]
   36ab8:	ldrh	r3, [r3, #14]
   36abc:	cmp	r3, #3
   36ac0:	bne	36b70 <flatcc_builder_table_add_offset@@Base+0xc0>
   36ac4:	mov	r4, r0
   36ac8:	mov	r5, r1
   36acc:	ldr	r3, [pc, #240]	; 36bc4 <flatcc_builder_table_add_offset@@Base+0x114>
   36ad0:	cmp	r1, r3
   36ad4:	bhi	36b84 <flatcc_builder_table_add_offset@@Base+0xd4>
   36ad8:	ldr	r2, [r0, #4]
   36adc:	lsl	r3, r1, #1
   36ae0:	ldrh	r3, [r2, r3]
   36ae4:	cmp	r3, #0
   36ae8:	bne	36b98 <flatcc_builder_table_add_offset@@Base+0xe8>
   36aec:	ldr	r3, [r0, #12]
   36af0:	eor	r3, r3, r1
   36af4:	ldr	r2, [pc, #204]	; 36bc8 <flatcc_builder_table_add_offset@@Base+0x118>
   36af8:	mul	r3, r2, r3
   36afc:	eor	r3, r3, #4
   36b00:	mul	r3, r2, r3
   36b04:	str	r3, [r0, #12]
   36b08:	uxth	r7, r1
   36b0c:	ldr	r6, [r0, #20]
   36b10:	add	r6, r6, #3
   36b14:	bic	r6, r6, #3
   36b18:	add	r1, r6, #4
   36b1c:	str	r1, [r0, #20]
   36b20:	ldr	r3, [r0, #24]
   36b24:	cmp	r1, r3
   36b28:	bhi	36bac <flatcc_builder_table_add_offset@@Base+0xfc>
   36b2c:	uxth	r2, r6
   36b30:	uxth	r5, r5
   36b34:	ldr	r3, [r4, #4]
   36b38:	lsl	r5, r5, #1
   36b3c:	add	r1, r2, #4
   36b40:	strh	r1, [r3, r5]
   36b44:	ldrh	r3, [r4, #8]
   36b48:	cmp	r3, r7
   36b4c:	addls	r7, r7, #1
   36b50:	strhls	r7, [r4, #8]
   36b54:	ldr	r3, [r4]
   36b58:	add	r1, r3, #2
   36b5c:	str	r1, [r4]
   36b60:	strh	r2, [r3]
   36b64:	ldr	r0, [r4, #16]
   36b68:	add	r0, r0, r6
   36b6c:	pop	{r4, r5, r6, r7, r8, pc}
   36b70:	ldr	r3, [pc, #84]	; 36bcc <flatcc_builder_table_add_offset@@Base+0x11c>
   36b74:	ldr	r2, [pc, #84]	; 36bd0 <flatcc_builder_table_add_offset@@Base+0x120>
   36b78:	ldr	r1, [pc, #84]	; 36bd4 <flatcc_builder_table_add_offset@@Base+0x124>
   36b7c:	ldr	r0, [pc, #84]	; 36bd8 <flatcc_builder_table_add_offset@@Base+0x128>
   36b80:	bl	14038 <__assert_fail@plt>
   36b84:	ldr	r3, [pc, #64]	; 36bcc <flatcc_builder_table_add_offset@@Base+0x11c>
   36b88:	ldr	r2, [pc, #76]	; 36bdc <flatcc_builder_table_add_offset@@Base+0x12c>
   36b8c:	ldr	r1, [pc, #64]	; 36bd4 <flatcc_builder_table_add_offset@@Base+0x124>
   36b90:	ldr	r0, [pc, #72]	; 36be0 <flatcc_builder_table_add_offset@@Base+0x130>
   36b94:	bl	14038 <__assert_fail@plt>
   36b98:	ldr	r3, [pc, #44]	; 36bcc <flatcc_builder_table_add_offset@@Base+0x11c>
   36b9c:	ldr	r2, [pc, #64]	; 36be4 <flatcc_builder_table_add_offset@@Base+0x134>
   36ba0:	ldr	r1, [pc, #44]	; 36bd4 <flatcc_builder_table_add_offset@@Base+0x124>
   36ba4:	ldr	r0, [pc, #60]	; 36be8 <flatcc_builder_table_add_offset@@Base+0x138>
   36ba8:	bl	14038 <__assert_fail@plt>
   36bac:	ldr	r2, [pc, #56]	; 36bec <flatcc_builder_table_add_offset@@Base+0x13c>
   36bb0:	bl	33108 <__flatcc_fb_coerce_scalar_type@@Base+0x884>
   36bb4:	cmp	r0, #0
   36bb8:	beq	36b2c <flatcc_builder_table_add_offset@@Base+0x7c>
   36bbc:	mov	r0, #0
   36bc0:	pop	{r4, r5, r6, r7, r8, pc}
   36bc4:	strdeq	r7, [r0], -ip
   36bc8:			; <UNDEFINED> instruction: 0x9e3779b1
   36bcc:	andeq	r5, r5, ip, lsl #8
   36bd0:	andeq	r0, r0, r3, lsl r7
   36bd4:			; <UNDEFINED> instruction: 0x000554b0
   36bd8:	andeq	r5, r5, r4, ror r7
   36bdc:	andeq	r0, r0, r4, lsl r7
   36be0:	andeq	r5, r5, ip, lsl #16
   36be4:	andeq	r0, r0, fp, lsl r7
   36be8:	andeq	r3, r4, r0, ror lr
   36bec:	strdeq	pc, [r0], -ip

00036bf0 <flatcc_builder_table_add_union@@Base>:
   36bf0:	push	{r4, r5, r6, r7, lr}
   36bf4:	sub	sp, sp, #12
   36bf8:	mov	r5, r1
   36bfc:	add	r1, sp, #8
   36c00:	stmdb	r1, {r2, r3}
   36c04:	ldr	r3, [r0, #32]
   36c08:	ldrh	r3, [r3, #14]
   36c0c:	cmp	r3, #3
   36c10:	bne	36c80 <flatcc_builder_table_add_union@@Base+0x90>
   36c14:	mov	r4, r0
   36c18:	ldrb	r7, [sp]
   36c1c:	ldr	r6, [sp, #4]
   36c20:	adds	r3, r6, #0
   36c24:	movne	r3, #1
   36c28:	cmp	r7, #0
   36c2c:	movne	r3, #0
   36c30:	cmp	r3, #0
   36c34:	bne	36c94 <flatcc_builder_table_add_union@@Base+0xa4>
   36c38:	cmp	r6, #0
   36c3c:	beq	36c54 <flatcc_builder_table_add_union@@Base+0x64>
   36c40:	mov	r1, r5
   36c44:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   36c48:	cmp	r0, #0
   36c4c:	strne	r6, [r0]
   36c50:	beq	36ca8 <flatcc_builder_table_add_union@@Base+0xb8>
   36c54:	mov	r3, #1
   36c58:	mov	r2, r3
   36c5c:	sub	r1, r5, #1
   36c60:	mov	r0, r4
   36c64:	bl	368e4 <flatcc_builder_table_add@@Base>
   36c68:	cmp	r0, #0
   36c6c:	beq	36cbc <flatcc_builder_table_add_union@@Base+0xcc>
   36c70:	strb	r7, [r0]
   36c74:	mov	r0, #0
   36c78:	add	sp, sp, #12
   36c7c:	pop	{r4, r5, r6, r7, pc}
   36c80:	ldr	r3, [pc, #72]	; 36cd0 <flatcc_builder_table_add_union@@Base+0xe0>
   36c84:	ldr	r2, [pc, #72]	; 36cd4 <flatcc_builder_table_add_union@@Base+0xe4>
   36c88:	ldr	r1, [pc, #72]	; 36cd8 <flatcc_builder_table_add_union@@Base+0xe8>
   36c8c:	ldr	r0, [pc, #72]	; 36cdc <flatcc_builder_table_add_union@@Base+0xec>
   36c90:	bl	14038 <__assert_fail@plt>
   36c94:	ldr	r3, [pc, #52]	; 36cd0 <flatcc_builder_table_add_union@@Base+0xe0>
   36c98:	ldr	r2, [pc, #64]	; 36ce0 <flatcc_builder_table_add_union@@Base+0xf0>
   36c9c:	ldr	r1, [pc, #52]	; 36cd8 <flatcc_builder_table_add_union@@Base+0xe8>
   36ca0:	ldr	r0, [pc, #60]	; 36ce4 <flatcc_builder_table_add_union@@Base+0xf4>
   36ca4:	bl	14038 <__assert_fail@plt>
   36ca8:	ldr	r3, [pc, #32]	; 36cd0 <flatcc_builder_table_add_union@@Base+0xe0>
   36cac:	ldr	r2, [pc, #52]	; 36ce8 <flatcc_builder_table_add_union@@Base+0xf8>
   36cb0:	ldr	r1, [pc, #32]	; 36cd8 <flatcc_builder_table_add_union@@Base+0xe8>
   36cb4:	ldr	r0, [pc, #48]	; 36cec <flatcc_builder_table_add_union@@Base+0xfc>
   36cb8:	bl	14038 <__assert_fail@plt>
   36cbc:	ldr	r3, [pc, #12]	; 36cd0 <flatcc_builder_table_add_union@@Base+0xe0>
   36cc0:	ldr	r2, [pc, #40]	; 36cf0 <flatcc_builder_table_add_union@@Base+0x100>
   36cc4:	ldr	r1, [pc, #12]	; 36cd8 <flatcc_builder_table_add_union@@Base+0xe8>
   36cc8:	ldr	r0, [pc, #36]	; 36cf4 <flatcc_builder_table_add_union@@Base+0x104>
   36ccc:	bl	14038 <__assert_fail@plt>
   36cd0:	andeq	r5, r5, ip, lsr #8
   36cd4:	andeq	r0, r0, lr, ror #11
   36cd8:			; <UNDEFINED> instruction: 0x000554b0
   36cdc:	andeq	r5, r5, r4, ror r7
   36ce0:	andeq	r0, r0, pc, ror #11
   36ce4:	andeq	r5, r5, r0, asr r8
   36ce8:	strdeq	r0, [r0], -r2
   36cec:	andeq	r5, r5, r4, ror r8
   36cf0:	strdeq	r0, [r0], -r6
   36cf4:	andeq	r5, r5, r0, lsl #17

00036cf8 <flatcc_builder_table_add_union_vector@@Base>:
   36cf8:	push	{r4, r5, r6, r7, lr}
   36cfc:	sub	sp, sp, #12
   36d00:	mov	r7, r1
   36d04:	add	r1, sp, #8
   36d08:	stmdb	r1, {r2, r3}
   36d0c:	ldr	r4, [sp]
   36d10:	ldr	r6, [sp, #4]
   36d14:	ldr	r3, [r0, #32]
   36d18:	ldrh	r3, [r3, #14]
   36d1c:	cmp	r3, #3
   36d20:	bne	36d5c <flatcc_builder_table_add_union_vector@@Base+0x64>
   36d24:	mov	r5, r0
   36d28:	clz	r3, r6
   36d2c:	lsr	r3, r3, #5
   36d30:	clz	r2, r4
   36d34:	lsr	r2, r2, #5
   36d38:	cmp	r2, r3
   36d3c:	beq	36d84 <flatcc_builder_table_add_union_vector@@Base+0x8c>
   36d40:	adds	r4, r4, #0
   36d44:	movne	r4, #1
   36d48:	cmp	r4, r3
   36d4c:	mvnne	r0, #0
   36d50:	beq	36d70 <flatcc_builder_table_add_union_vector@@Base+0x78>
   36d54:	add	sp, sp, #12
   36d58:	pop	{r4, r5, r6, r7, pc}
   36d5c:	ldr	r3, [pc, #136]	; 36dec <flatcc_builder_table_add_union_vector@@Base+0xf4>
   36d60:	mov	r2, #1536	; 0x600
   36d64:	ldr	r1, [pc, #132]	; 36df0 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   36d68:	ldr	r0, [pc, #132]	; 36df4 <flatcc_builder_table_add_union_vector@@Base+0xfc>
   36d6c:	bl	14038 <__assert_fail@plt>
   36d70:	ldr	r3, [pc, #116]	; 36dec <flatcc_builder_table_add_union_vector@@Base+0xf4>
   36d74:	ldr	r2, [pc, #124]	; 36df8 <flatcc_builder_table_add_union_vector@@Base+0x100>
   36d78:	ldr	r1, [pc, #112]	; 36df0 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   36d7c:	ldr	r0, [pc, #120]	; 36dfc <flatcc_builder_table_add_union_vector@@Base+0x104>
   36d80:	bl	14038 <__assert_fail@plt>
   36d84:	cmp	r4, #0
   36d88:	moveq	r0, #0
   36d8c:	beq	36d54 <flatcc_builder_table_add_union_vector@@Base+0x5c>
   36d90:	sub	r1, r7, #1
   36d94:	mov	r0, r5
   36d98:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   36d9c:	cmp	r0, #0
   36da0:	beq	36dd8 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   36da4:	str	r4, [r0]
   36da8:	mov	r1, r7
   36dac:	mov	r0, r5
   36db0:	bl	36ab0 <flatcc_builder_table_add_offset@@Base>
   36db4:	cmp	r0, #0
   36db8:	strne	r6, [r0]
   36dbc:	movne	r0, #0
   36dc0:	bne	36d54 <flatcc_builder_table_add_union_vector@@Base+0x5c>
   36dc4:	ldr	r3, [pc, #32]	; 36dec <flatcc_builder_table_add_union_vector@@Base+0xf4>
   36dc8:	ldr	r2, [pc, #48]	; 36e00 <flatcc_builder_table_add_union_vector@@Base+0x108>
   36dcc:	ldr	r1, [pc, #28]	; 36df0 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   36dd0:	ldr	r0, [pc, #44]	; 36e04 <flatcc_builder_table_add_union_vector@@Base+0x10c>
   36dd4:	bl	14038 <__assert_fail@plt>
   36dd8:	ldr	r3, [pc, #12]	; 36dec <flatcc_builder_table_add_union_vector@@Base+0xf4>
   36ddc:	ldr	r2, [pc, #36]	; 36e08 <flatcc_builder_table_add_union_vector@@Base+0x110>
   36de0:	ldr	r1, [pc, #8]	; 36df0 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   36de4:	ldr	r0, [pc, #24]	; 36e04 <flatcc_builder_table_add_union_vector@@Base+0x10c>
   36de8:	bl	14038 <__assert_fail@plt>
   36dec:	andeq	r5, r5, ip, asr #8
   36df0:			; <UNDEFINED> instruction: 0x000554b0
   36df4:	andeq	r5, r5, r4, ror r7
   36df8:	andeq	r0, r0, r1, lsl #12
   36dfc:	andeq	r5, r5, ip, lsl #17
   36e00:	andeq	r0, r0, r8, lsl #12
   36e04:	andeq	r5, r5, r4, ror r8
   36e08:	andeq	r0, r0, r4, lsl #12

00036e0c <flatcc_builder_push_buffer_alignment@@Base>:
   36e0c:	mov	r3, r0
   36e10:	ldrh	r0, [r0, #128]	; 0x80
   36e14:	mov	r2, #4
   36e18:	strh	r2, [r3, #128]	; 0x80
   36e1c:	bx	lr

00036e20 <flatcc_builder_pop_buffer_alignment@@Base>:
   36e20:	ldrh	r3, [r0, #128]	; 0x80
   36e24:	cmp	r3, r1
   36e28:	strhcc	r1, [r0, #128]	; 0x80
   36e2c:	bx	lr

00036e30 <flatcc_builder_get_buffer_alignment@@Base>:
   36e30:	ldrh	r0, [r0, #128]	; 0x80
   36e34:	bx	lr

00036e38 <flatcc_builder_set_vtable_clustering@@Base>:
   36e38:	clz	r1, r1
   36e3c:	lsr	r1, r1, #5
   36e40:	str	r1, [r0, #180]	; 0xb4
   36e44:	bx	lr

00036e48 <flatcc_builder_set_block_align@@Base>:
   36e48:	strh	r1, [r0, #132]	; 0x84
   36e4c:	bx	lr

00036e50 <flatcc_builder_get_level@@Base>:
   36e50:	ldr	r0, [r0, #156]	; 0x9c
   36e54:	bx	lr

00036e58 <flatcc_builder_set_max_level@@Base>:
   36e58:	str	r1, [r0, #176]	; 0xb0
   36e5c:	ldr	r3, [r0, #160]	; 0xa0
   36e60:	cmp	r1, r3
   36e64:	strgt	r1, [r0, #160]	; 0xa0
   36e68:	bx	lr

00036e6c <flatcc_builder_get_buffer_size@@Base>:
   36e6c:	ldr	r2, [r0, #140]	; 0x8c
   36e70:	ldr	r0, [r0, #136]	; 0x88
   36e74:	sub	r0, r2, r0
   36e78:	bx	lr

00036e7c <flatcc_builder_get_buffer_start@@Base>:
   36e7c:	ldr	r0, [r0, #136]	; 0x88
   36e80:	bx	lr

00036e84 <flatcc_builder_get_buffer_end@@Base>:
   36e84:	ldr	r0, [r0, #140]	; 0x8c
   36e88:	bx	lr

00036e8c <flatcc_builder_set_vtable_cache_limit@@Base>:
   36e8c:	str	r1, [r0, #172]	; 0xac
   36e90:	bx	lr

00036e94 <flatcc_builder_set_identifier@@Base>:
   36e94:	ldr	r3, [pc, #16]	; 36eac <flatcc_builder_set_identifier@@Base+0x18>
   36e98:	cmp	r1, #0
   36e9c:	moveq	r1, r3
   36ea0:	ldr	r3, [r1]
   36ea4:	str	r3, [r0, #168]	; 0xa8
   36ea8:	bx	lr
   36eac:	andeq	r4, r5, r0, ror #26

00036eb0 <flatcc_builder_get_type@@Base>:
   36eb0:	ldr	r3, [r0, #32]
   36eb4:	cmp	r3, #0
   36eb8:	ldrhne	r0, [r3, #14]
   36ebc:	moveq	r0, #0
   36ec0:	bx	lr

00036ec4 <flatcc_builder_get_type_at@@Base>:
   36ec4:	cmp	r1, #0
   36ec8:	ble	36ef0 <flatcc_builder_get_type_at@@Base+0x2c>
   36ecc:	ldr	r3, [r0, #156]	; 0x9c
   36ed0:	cmp	r1, r3
   36ed4:	bgt	36ef8 <flatcc_builder_get_type_at@@Base+0x34>
   36ed8:	sub	r1, r1, r3
   36edc:	ldr	r3, [r0, #32]
   36ee0:	add	r1, r1, r1, lsl #3
   36ee4:	add	r1, r3, r1, lsl #2
   36ee8:	ldrh	r0, [r1, #14]
   36eec:	bx	lr
   36ef0:	mov	r0, #0
   36ef4:	bx	lr
   36ef8:	mov	r0, #0
   36efc:	bx	lr

00036f00 <flatcc_builder_get_direct_buffer@@Base>:
   36f00:	ldr	r3, [r0, #184]	; 0xb8
   36f04:	cmp	r3, #0
   36f08:	beq	36f44 <flatcc_builder_get_direct_buffer@@Base+0x44>
   36f0c:	ldr	r2, [r0, #188]	; 0xbc
   36f10:	ldr	r3, [r0, #192]	; 0xc0
   36f14:	cmp	r2, r3
   36f18:	beq	36f30 <flatcc_builder_get_direct_buffer@@Base+0x30>
   36f1c:	cmp	r1, #0
   36f20:	beq	36f58 <flatcc_builder_get_direct_buffer@@Base+0x58>
   36f24:	mov	r0, #0
   36f28:	str	r0, [r1]
   36f2c:	bx	lr
   36f30:	cmp	r1, #0
   36f34:	ldrne	r3, [r0, #212]	; 0xd4
   36f38:	strne	r3, [r1]
   36f3c:	ldr	r0, [r0, #196]	; 0xc4
   36f40:	bx	lr
   36f44:	cmp	r1, #0
   36f48:	beq	36f60 <flatcc_builder_get_direct_buffer@@Base+0x60>
   36f4c:	mov	r0, #0
   36f50:	str	r0, [r1]
   36f54:	bx	lr
   36f58:	mov	r0, #0
   36f5c:	bx	lr
   36f60:	mov	r0, #0
   36f64:	bx	lr

00036f68 <flatcc_builder_copy_buffer@@Base>:
   36f68:	ldr	r3, [r0, #184]	; 0xb8
   36f6c:	cmp	r3, #0
   36f70:	beq	36f9c <flatcc_builder_copy_buffer@@Base+0x34>
   36f74:	push	{r4, lr}
   36f78:	add	r0, r0, #188	; 0xbc
   36f7c:	bl	37698 <flatcc_emitter_copy_buffer@@Base>
   36f80:	cmp	r0, #0
   36f84:	popne	{r4, pc}
   36f88:	ldr	r3, [pc, #20]	; 36fa4 <flatcc_builder_copy_buffer@@Base+0x3c>
   36f8c:	ldr	r2, [pc, #20]	; 36fa8 <flatcc_builder_copy_buffer@@Base+0x40>
   36f90:	ldr	r1, [pc, #20]	; 36fac <flatcc_builder_copy_buffer@@Base+0x44>
   36f94:	ldr	r0, [pc, #20]	; 36fb0 <flatcc_builder_copy_buffer@@Base+0x48>
   36f98:	bl	14038 <__assert_fail@plt>
   36f9c:	mov	r0, #0
   36fa0:	bx	lr
   36fa4:	andeq	r5, r5, r4, ror r4
   36fa8:	andeq	r0, r0, r6, lsl #15
   36fac:			; <UNDEFINED> instruction: 0x000554b0
   36fb0:			; <UNDEFINED> instruction: 0x000558b4

00036fb4 <flatcc_builder_finalize_buffer@@Base>:
   36fb4:	push	{r4, r5, r6, lr}
   36fb8:	mov	r5, r0
   36fbc:	ldr	r4, [r0, #140]	; 0x8c
   36fc0:	ldr	r3, [r0, #136]	; 0x88
   36fc4:	sub	r4, r4, r3
   36fc8:	cmp	r1, #0
   36fcc:	strne	r4, [r1]
   36fd0:	mov	r0, r4
   36fd4:	bl	13f3c <malloc@plt>
   36fd8:	subs	r6, r0, #0
   36fdc:	beq	37000 <flatcc_builder_finalize_buffer@@Base+0x4c>
   36fe0:	mov	r2, r4
   36fe4:	mov	r1, r6
   36fe8:	mov	r0, r5
   36fec:	bl	36f68 <flatcc_builder_copy_buffer@@Base>
   36ff0:	cmp	r0, #0
   36ff4:	beq	37014 <flatcc_builder_finalize_buffer@@Base+0x60>
   36ff8:	mov	r0, r6
   36ffc:	pop	{r4, r5, r6, pc}
   37000:	ldr	r3, [pc, #32]	; 37028 <flatcc_builder_finalize_buffer@@Base+0x74>
   37004:	ldr	r2, [pc, #32]	; 3702c <flatcc_builder_finalize_buffer@@Base+0x78>
   37008:	ldr	r1, [pc, #32]	; 37030 <flatcc_builder_finalize_buffer@@Base+0x7c>
   3700c:	ldr	r0, [pc, #32]	; 37034 <flatcc_builder_finalize_buffer@@Base+0x80>
   37010:	bl	14038 <__assert_fail@plt>
   37014:	ldr	r3, [pc, #12]	; 37028 <flatcc_builder_finalize_buffer@@Base+0x74>
   37018:	ldr	r2, [pc, #24]	; 37038 <flatcc_builder_finalize_buffer@@Base+0x84>
   3701c:	ldr	r1, [pc, #12]	; 37030 <flatcc_builder_finalize_buffer@@Base+0x7c>
   37020:	ldr	r0, [pc, #12]	; 37034 <flatcc_builder_finalize_buffer@@Base+0x80>
   37024:	bl	14038 <__assert_fail@plt>
   37028:	muleq	r5, r0, r4
   3702c:	muleq	r0, r8, r7
   37030:			; <UNDEFINED> instruction: 0x000554b0
   37034:	andeq	r3, r4, r0, ror lr
   37038:	muleq	r0, ip, r7

0003703c <flatcc_builder_finalize_aligned_buffer@@Base>:
   3703c:	push	{r4, r5, r6, r7, lr}
   37040:	sub	sp, sp, #12
   37044:	mov	r7, r0
   37048:	ldr	r4, [r0, #140]	; 0x8c
   3704c:	ldr	r3, [r0, #136]	; 0x88
   37050:	sub	r3, r4, r3
   37054:	subs	r6, r1, #0
   37058:	strne	r3, [r6]
   3705c:	ldrh	r1, [r0, #128]	; 0x80
   37060:	sub	r4, r1, #1
   37064:	add	r4, r4, r3
   37068:	rsb	r3, r1, #0
   3706c:	and	r4, r4, r3
   37070:	add	r0, sp, #8
   37074:	mov	r3, #0
   37078:	str	r3, [r0, #-4]!
   3707c:	mov	r2, r4
   37080:	cmp	r1, #4
   37084:	movcc	r1, #4
   37088:	bl	13f90 <posix_memalign@plt>
   3708c:	cmp	r0, #0
   37090:	beq	370b4 <flatcc_builder_finalize_aligned_buffer@@Base+0x78>
   37094:	ldr	r0, [sp, #4]
   37098:	cmp	r0, #0
   3709c:	beq	370a4 <flatcc_builder_finalize_aligned_buffer@@Base+0x68>
   370a0:	bl	13ed0 <free@plt>
   370a4:	cmp	r6, #0
   370a8:	mov	r5, #0
   370ac:	strne	r5, [r6]
   370b0:	b	370d8 <flatcc_builder_finalize_aligned_buffer@@Base+0x9c>
   370b4:	ldr	r5, [sp, #4]
   370b8:	cmp	r5, #0
   370bc:	beq	370a4 <flatcc_builder_finalize_aligned_buffer@@Base+0x68>
   370c0:	mov	r2, r4
   370c4:	mov	r1, r5
   370c8:	mov	r0, r7
   370cc:	bl	36f68 <flatcc_builder_copy_buffer@@Base>
   370d0:	cmp	r0, #0
   370d4:	beq	370e4 <flatcc_builder_finalize_aligned_buffer@@Base+0xa8>
   370d8:	mov	r0, r5
   370dc:	add	sp, sp, #12
   370e0:	pop	{r4, r5, r6, r7, pc}
   370e4:	mov	r0, r5
   370e8:	bl	13ed0 <free@plt>
   370ec:	b	370a4 <flatcc_builder_finalize_aligned_buffer@@Base+0x68>

000370f0 <flatcc_builder_aligned_alloc@@Base>:
   370f0:	push	{lr}		; (str lr, [sp, #-4]!)
   370f4:	sub	sp, sp, #12
   370f8:	add	r3, sp, #8
   370fc:	mov	r2, #0
   37100:	str	r2, [r3, #-4]!
   37104:	mov	r2, r1
   37108:	cmp	r0, #4
   3710c:	movcs	r1, r0
   37110:	movcc	r1, #4
   37114:	mov	r0, r3
   37118:	bl	13f90 <posix_memalign@plt>
   3711c:	cmp	r0, #0
   37120:	beq	3713c <flatcc_builder_aligned_alloc@@Base+0x4c>
   37124:	ldr	r0, [sp, #4]
   37128:	cmp	r0, #0
   3712c:	beq	3713c <flatcc_builder_aligned_alloc@@Base+0x4c>
   37130:	bl	13ed0 <free@plt>
   37134:	mov	r3, #0
   37138:	str	r3, [sp, #4]
   3713c:	ldr	r0, [sp, #4]
   37140:	add	sp, sp, #12
   37144:	pop	{pc}		; (ldr pc, [sp], #4)

00037148 <flatcc_builder_aligned_free@@Base>:
   37148:	push	{r4, lr}
   3714c:	bl	13ed0 <free@plt>
   37150:	pop	{r4, pc}

00037154 <flatcc_builder_get_emit_context@@Base>:
   37154:	ldr	r0, [r0, #36]	; 0x24
   37158:	bx	lr

0003715c <flatcc_emitter_recycle_page@@Base>:
   3715c:	ldr	r3, [r0]
   37160:	cmp	r3, r1
   37164:	beq	371b4 <flatcc_emitter_recycle_page@@Base+0x58>
   37168:	ldr	r3, [r0, #4]
   3716c:	cmp	r1, r3
   37170:	beq	371bc <flatcc_emitter_recycle_page@@Base+0x60>
   37174:	ldr	r3, [r1, #2944]	; 0xb80
   37178:	ldr	r2, [r1, #2948]	; 0xb84
   3717c:	str	r2, [r3, #2948]	; 0xb84
   37180:	ldr	r3, [r1, #2948]	; 0xb84
   37184:	ldr	r2, [r1, #2944]	; 0xb80
   37188:	str	r2, [r3, #2944]	; 0xb80
   3718c:	ldr	r3, [r0]
   37190:	ldr	r3, [r3, #2948]	; 0xb84
   37194:	str	r3, [r1, #2948]	; 0xb84
   37198:	ldr	r2, [r0]
   3719c:	str	r2, [r1, #2944]	; 0xb80
   371a0:	str	r1, [r3, #2944]	; 0xb80
   371a4:	ldr	r3, [r1, #2944]	; 0xb80
   371a8:	str	r1, [r3, #2948]	; 0xb84
   371ac:	mov	r0, #0
   371b0:	bx	lr
   371b4:	mvn	r0, #0
   371b8:	bx	lr
   371bc:	mvn	r0, #0
   371c0:	bx	lr

000371c4 <flatcc_emitter_reset@@Base>:
   371c4:	ldr	r3, [r0]
   371c8:	cmp	r3, #0
   371cc:	bxeq	lr
   371d0:	str	r3, [r0, #4]
   371d4:	add	r2, r3, #1472	; 0x5c0
   371d8:	str	r2, [r0, #8]
   371dc:	str	r2, [r0, #16]
   371e0:	mov	r2, #1472	; 0x5c0
   371e4:	str	r2, [r0, #12]
   371e8:	str	r2, [r0, #20]
   371ec:	sub	r2, r2, #2944	; 0xb80
   371f0:	str	r2, [r3, #2952]	; 0xb88
   371f4:	ldr	r3, [r0, #32]
   371f8:	cmp	r3, #0
   371fc:	ldreq	r3, [r0, #24]
   37200:	streq	r3, [r0, #32]
   37204:	ldr	r3, [r0, #32]
   37208:	add	r2, r3, r3, lsl #1
   3720c:	ldr	r3, [r0, #24]
   37210:	lsr	r3, r3, #2
   37214:	add	r3, r3, r2, lsr #2
   37218:	str	r3, [r0, #32]
   3721c:	mov	r2, #0
   37220:	str	r2, [r0, #24]
   37224:	ldr	r2, [r0, #28]
   37228:	cmp	r2, r3, lsl #1
   3722c:	bxls	lr
   37230:	push	{r4, lr}
   37234:	mov	r4, r0
   37238:	ldr	r3, [r0, #4]
   3723c:	ldr	r0, [r3, #2944]	; 0xb80
   37240:	ldr	r2, [r4]
   37244:	cmp	r0, r2
   37248:	popeq	{r4, pc}
   3724c:	ldr	r2, [r0, #2944]	; 0xb80
   37250:	str	r2, [r3, #2944]	; 0xb80
   37254:	ldr	r3, [r0, #2944]	; 0xb80
   37258:	ldr	r2, [r4, #4]
   3725c:	str	r2, [r3, #2948]	; 0xb84
   37260:	bl	13ed0 <free@plt>
   37264:	ldr	r3, [r4, #28]
   37268:	sub	r3, r3, #2944	; 0xb80
   3726c:	str	r3, [r4, #28]
   37270:	ldr	r2, [r4, #32]
   37274:	cmp	r3, r2, lsl #1
   37278:	popls	{r4, pc}
   3727c:	ldr	r3, [r4, #4]
   37280:	ldr	r0, [r3, #2944]	; 0xb80
   37284:	ldr	r2, [r4]
   37288:	cmp	r0, r2
   3728c:	bne	3724c <flatcc_emitter_reset@@Base+0x88>
   37290:	pop	{r4, pc}

00037294 <flatcc_emitter_clear@@Base>:
   37294:	ldr	r3, [r0]
   37298:	cmp	r3, #0
   3729c:	bxeq	lr
   372a0:	push	{r4, r5, r6, lr}
   372a4:	mov	r5, r0
   372a8:	ldr	r2, [r3, #2948]	; 0xb84
   372ac:	mov	r1, #0
   372b0:	str	r1, [r2, #2944]	; 0xb80
   372b4:	ldr	r4, [r3, #2944]	; 0xb80
   372b8:	cmp	r4, r1
   372bc:	bne	372cc <flatcc_emitter_clear@@Base+0x38>
   372c0:	mov	r4, r3
   372c4:	b	372e0 <flatcc_emitter_clear@@Base+0x4c>
   372c8:	mov	r4, r3
   372cc:	ldr	r0, [r4, #2948]	; 0xb84
   372d0:	bl	13ed0 <free@plt>
   372d4:	ldr	r3, [r4, #2944]	; 0xb80
   372d8:	cmp	r3, #0
   372dc:	bne	372c8 <flatcc_emitter_clear@@Base+0x34>
   372e0:	mov	r0, r4
   372e4:	bl	13ed0 <free@plt>
   372e8:	mov	r2, #36	; 0x24
   372ec:	mov	r1, #0
   372f0:	mov	r0, r5
   372f4:	bl	13f9c <memset@plt>
   372f8:	pop	{r4, r5, r6, pc}

000372fc <flatcc_emitter@@Base>:
   372fc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37300:	mov	r4, r0
   37304:	ldr	ip, [sp, #40]	; 0x28
   37308:	ldr	r0, [r0, #24]
   3730c:	add	r0, r0, ip
   37310:	str	r0, [r4, #24]
   37314:	cmp	r3, #0
   37318:	blt	37344 <flatcc_emitter@@Base+0x48>
   3731c:	ldr	r3, [r4, #20]
   37320:	cmp	ip, r3
   37324:	bls	37430 <flatcc_emitter@@Base+0x134>
   37328:	cmp	r2, #0
   3732c:	addne	r7, r1, #8
   37330:	movne	sl, r2
   37334:	movne	fp, #2944	; 0xb80
   37338:	bne	375e4 <flatcc_emitter@@Base+0x2e8>
   3733c:	mov	r0, r2
   37340:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37344:	ldr	r3, [r4, #12]
   37348:	cmp	ip, r3
   3734c:	bhi	37370 <flatcc_emitter@@Base+0x74>
   37350:	ldr	r5, [r4, #8]
   37354:	sub	r5, r5, ip
   37358:	str	r5, [r4, #8]
   3735c:	sub	r3, r3, ip
   37360:	str	r3, [r4, #12]
   37364:	b	37444 <flatcc_emitter@@Base+0x148>
   37368:	mov	r0, r2
   3736c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37370:	add	r7, r1, r2, lsl #3
   37374:	mov	r8, r2
   37378:	mov	fp, #1472	; 0x5c0
   3737c:	mov	sl, #2944	; 0xb80
   37380:	b	37560 <flatcc_emitter@@Base+0x264>
   37384:	mov	r2, r5
   37388:	rsb	r1, r2, #0
   3738c:	ldr	r0, [r4, #8]
   37390:	add	r0, r0, r1
   37394:	str	r0, [r4, #8]
   37398:	sub	r3, r3, r2
   3739c:	str	r3, [r4, #12]
   373a0:	add	r6, r6, r1
   373a4:	sub	r5, r5, r2
   373a8:	mov	r1, r6
   373ac:	bl	13edc <memcpy@plt>
   373b0:	cmp	r5, #0
   373b4:	beq	37558 <flatcc_emitter@@Base+0x25c>
   373b8:	ldr	r3, [r4, #12]
   373bc:	cmp	r3, r5
   373c0:	bcs	37384 <flatcc_emitter@@Base+0x88>
   373c4:	cmp	r3, #0
   373c8:	movne	r2, r3
   373cc:	bne	37388 <flatcc_emitter@@Base+0x8c>
   373d0:	ldr	r9, [r4]
   373d4:	cmp	r9, #0
   373d8:	beq	37678 <flatcc_emitter@@Base+0x37c>
   373dc:	ldr	r2, [r9, #2948]	; 0xb84
   373e0:	ldr	r3, [r4, #4]
   373e4:	cmp	r2, r3
   373e8:	beq	37600 <flatcc_emitter@@Base+0x304>
   373ec:	ldr	r3, [r9, #2952]	; 0xb88
   373f0:	sub	r3, r3, #2944	; 0xb80
   373f4:	str	r3, [r2, #2952]	; 0xb88
   373f8:	ldr	r3, [r4]
   373fc:	ldr	r3, [r3, #2948]	; 0xb84
   37400:	str	r3, [r4]
   37404:	ldr	r3, [r4]
   37408:	add	r2, r3, #2944	; 0xb80
   3740c:	str	r2, [r4, #8]
   37410:	str	sl, [r4, #12]
   37414:	ldr	r2, [r3, #2944]	; 0xb80
   37418:	ldr	r2, [r2, #2952]	; 0xb88
   3741c:	sub	r2, r2, #2944	; 0xb80
   37420:	str	r2, [r3, #2952]	; 0xb88
   37424:	b	373b0 <flatcc_emitter@@Base+0xb4>
   37428:	mov	r0, #0
   3742c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37430:	ldr	r5, [r4, #16]
   37434:	add	r0, r5, ip
   37438:	str	r0, [r4, #16]
   3743c:	sub	r3, r3, ip
   37440:	str	r3, [r4, #20]
   37444:	cmp	r2, #0
   37448:	addne	r4, r1, #8
   3744c:	movne	r8, r2
   37450:	beq	37368 <flatcc_emitter@@Base+0x6c>
   37454:	ldr	r2, [r4, #-4]
   37458:	ldr	r1, [r4, #-8]
   3745c:	mov	r0, r5
   37460:	bl	13edc <memcpy@plt>
   37464:	ldr	r3, [r4, #-4]
   37468:	add	r5, r5, r3
   3746c:	add	r4, r4, #8
   37470:	subs	r8, r8, #1
   37474:	bne	37454 <flatcc_emitter@@Base+0x158>
   37478:	mov	r0, #0
   3747c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37480:	ldr	r0, [pc, #520]	; 37690 <flatcc_emitter@@Base+0x394>
   37484:	bl	13f3c <malloc@plt>
   37488:	cmp	r0, #0
   3748c:	beq	37548 <flatcc_emitter@@Base+0x24c>
   37490:	ldr	r3, [r4, #28]
   37494:	add	r3, r3, #2944	; 0xb80
   37498:	str	r3, [r4, #28]
   3749c:	str	r5, [r0, #2948]	; 0xb84
   374a0:	str	r9, [r0, #2944]	; 0xb80
   374a4:	str	r0, [r9, #2948]	; 0xb84
   374a8:	ldr	r3, [r4, #4]
   374ac:	str	r0, [r3, #2944]	; 0xb80
   374b0:	str	r0, [r4, #4]
   374b4:	b	37528 <flatcc_emitter@@Base+0x22c>
   374b8:	mov	r5, r6
   374bc:	mov	r2, r5
   374c0:	mov	r1, r8
   374c4:	ldr	r0, [r4, #16]
   374c8:	bl	13edc <memcpy@plt>
   374cc:	sub	r6, r6, r5
   374d0:	add	r8, r8, r5
   374d4:	ldr	r3, [r4, #16]
   374d8:	add	r3, r3, r5
   374dc:	str	r3, [r4, #16]
   374e0:	ldr	r3, [r4, #20]
   374e4:	sub	r5, r3, r5
   374e8:	str	r5, [r4, #20]
   374ec:	cmp	r6, #0
   374f0:	beq	375d8 <flatcc_emitter@@Base+0x2dc>
   374f4:	ldr	r5, [r4, #20]
   374f8:	cmp	r5, r6
   374fc:	bcs	374b8 <flatcc_emitter@@Base+0x1bc>
   37500:	cmp	r5, #0
   37504:	bne	374bc <flatcc_emitter@@Base+0x1c0>
   37508:	ldr	r5, [r4, #4]
   3750c:	cmp	r5, #0
   37510:	beq	375c0 <flatcc_emitter@@Base+0x2c4>
   37514:	ldr	r9, [r5, #2944]	; 0xb80
   37518:	ldr	r3, [r4]
   3751c:	cmp	r9, r3
   37520:	strne	r9, [r4, #4]
   37524:	beq	37480 <flatcc_emitter@@Base+0x184>
   37528:	ldr	r3, [r4, #4]
   3752c:	str	r3, [r4, #16]
   37530:	str	fp, [r4, #20]
   37534:	ldr	r2, [r3, #2948]	; 0xb84
   37538:	ldr	r2, [r2, #2952]	; 0xb88
   3753c:	add	r2, r2, #2944	; 0xb80
   37540:	str	r2, [r3, #2952]	; 0xb88
   37544:	b	374ec <flatcc_emitter@@Base+0x1f0>
   37548:	mvn	r0, #0
   3754c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37550:	mvn	r0, #0
   37554:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37558:	sub	r7, r7, #8
   3755c:	sub	r8, r8, #1
   37560:	cmp	r8, #0
   37564:	beq	37428 <flatcc_emitter@@Base+0x12c>
   37568:	ldr	r5, [r7, #-4]
   3756c:	ldr	r6, [r7, #-8]
   37570:	add	r6, r6, r5
   37574:	cmp	r5, #0
   37578:	bne	373b8 <flatcc_emitter@@Base+0xbc>
   3757c:	b	37558 <flatcc_emitter@@Base+0x25c>
   37580:	ldr	r3, [r4, #28]
   37584:	add	r3, r3, #2944	; 0xb80
   37588:	str	r3, [r4, #28]
   3758c:	str	r0, [r4]
   37590:	str	r0, [r4, #4]
   37594:	str	r0, [r0, #2944]	; 0xb80
   37598:	str	r0, [r0, #2948]	; 0xb84
   3759c:	add	r3, r0, #1472	; 0x5c0
   375a0:	str	r3, [r4, #8]
   375a4:	str	r3, [r4, #16]
   375a8:	mov	r3, #1472	; 0x5c0
   375ac:	str	r3, [r4, #12]
   375b0:	str	r3, [r4, #20]
   375b4:	sub	r3, r3, #2944	; 0xb80
   375b8:	str	r3, [r0, #2952]	; 0xb88
   375bc:	b	374ec <flatcc_emitter@@Base+0x1f0>
   375c0:	ldr	r0, [pc, #200]	; 37690 <flatcc_emitter@@Base+0x394>
   375c4:	bl	13f3c <malloc@plt>
   375c8:	cmp	r0, #0
   375cc:	bne	37580 <flatcc_emitter@@Base+0x284>
   375d0:	mvn	r0, #0
   375d4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   375d8:	add	r7, r7, #8
   375dc:	subs	sl, sl, #1
   375e0:	beq	375f8 <flatcc_emitter@@Base+0x2fc>
   375e4:	ldr	r8, [r7, #-8]
   375e8:	ldr	r6, [r7, #-4]
   375ec:	cmp	r6, #0
   375f0:	bne	374f4 <flatcc_emitter@@Base+0x1f8>
   375f4:	b	375d8 <flatcc_emitter@@Base+0x2dc>
   375f8:	mov	r0, #0
   375fc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37600:	ldr	r0, [pc, #136]	; 37690 <flatcc_emitter@@Base+0x394>
   37604:	bl	13f3c <malloc@plt>
   37608:	cmp	r0, #0
   3760c:	beq	37550 <flatcc_emitter@@Base+0x254>
   37610:	ldr	r3, [r4, #28]
   37614:	add	r3, r3, #2944	; 0xb80
   37618:	str	r3, [r4, #28]
   3761c:	ldr	r3, [r4, #4]
   37620:	str	r3, [r0, #2948]	; 0xb84
   37624:	str	r9, [r0, #2944]	; 0xb80
   37628:	str	r0, [r9, #2948]	; 0xb84
   3762c:	ldr	r3, [r4, #4]
   37630:	str	r0, [r3, #2944]	; 0xb80
   37634:	str	r0, [r4]
   37638:	b	37404 <flatcc_emitter@@Base+0x108>
   3763c:	ldr	r3, [r4, #28]
   37640:	add	r3, r3, #2944	; 0xb80
   37644:	str	r3, [r4, #28]
   37648:	str	r0, [r4]
   3764c:	str	r0, [r4, #4]
   37650:	str	r0, [r0, #2944]	; 0xb80
   37654:	str	r0, [r0, #2948]	; 0xb84
   37658:	add	r3, r0, #1472	; 0x5c0
   3765c:	str	r3, [r4, #8]
   37660:	str	r3, [r4, #16]
   37664:	str	fp, [r4, #12]
   37668:	str	fp, [r4, #20]
   3766c:	ldr	r3, [pc, #32]	; 37694 <flatcc_emitter@@Base+0x398>
   37670:	str	r3, [r0, #2952]	; 0xb88
   37674:	b	373b0 <flatcc_emitter@@Base+0xb4>
   37678:	ldr	r0, [pc, #16]	; 37690 <flatcc_emitter@@Base+0x394>
   3767c:	bl	13f3c <malloc@plt>
   37680:	cmp	r0, #0
   37684:	bne	3763c <flatcc_emitter@@Base+0x340>
   37688:	mvn	r0, #0
   3768c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37690:	andeq	r0, r0, ip, lsl #23
   37694:			; <UNDEFINED> instruction: 0xfffffa40

00037698 <flatcc_emitter_copy_buffer@@Base>:
   37698:	push	{r4, r5, r6, r7, r8, lr}
   3769c:	mov	r5, r1
   376a0:	ldr	r1, [r0, #24]
   376a4:	cmp	r1, r2
   376a8:	bhi	3774c <flatcc_emitter_copy_buffer@@Base+0xb4>
   376ac:	ldr	r3, [r0]
   376b0:	cmp	r3, #0
   376b4:	beq	37754 <flatcc_emitter_copy_buffer@@Base+0xbc>
   376b8:	mov	r6, r0
   376bc:	ldr	r2, [r0, #4]
   376c0:	cmp	r3, r2
   376c4:	beq	37738 <flatcc_emitter_copy_buffer@@Base+0xa0>
   376c8:	ldr	r4, [r0, #12]
   376cc:	rsb	r4, r4, #2944	; 0xb80
   376d0:	mov	r2, r4
   376d4:	ldr	r1, [r0, #8]
   376d8:	mov	r0, r5
   376dc:	bl	13edc <memcpy@plt>
   376e0:	add	r5, r5, r4
   376e4:	ldr	r3, [r6]
   376e8:	ldr	r4, [r3, #2944]	; 0xb80
   376ec:	ldr	r1, [r6, #4]
   376f0:	cmp	r4, r1
   376f4:	beq	37720 <flatcc_emitter_copy_buffer@@Base+0x88>
   376f8:	mov	r7, #2944	; 0xb80
   376fc:	mov	r2, r7
   37700:	mov	r1, r4
   37704:	mov	r0, r5
   37708:	bl	13edc <memcpy@plt>
   3770c:	add	r5, r5, #2944	; 0xb80
   37710:	ldr	r4, [r4, #2944]	; 0xb80
   37714:	ldr	r1, [r6, #4]
   37718:	cmp	r1, r4
   3771c:	bne	376fc <flatcc_emitter_copy_buffer@@Base+0x64>
   37720:	ldr	r2, [r6, #20]
   37724:	rsb	r2, r2, #2944	; 0xb80
   37728:	mov	r0, r5
   3772c:	bl	13edc <memcpy@plt>
   37730:	mov	r0, r5
   37734:	pop	{r4, r5, r6, r7, r8, pc}
   37738:	mov	r2, r1
   3773c:	ldr	r1, [r0, #8]
   37740:	mov	r0, r5
   37744:	bl	13edc <memcpy@plt>
   37748:	b	37730 <flatcc_emitter_copy_buffer@@Base+0x98>
   3774c:	mov	r5, #0
   37750:	b	37730 <flatcc_emitter_copy_buffer@@Base+0x98>
   37754:	mov	r5, #0
   37758:	b	37730 <flatcc_emitter_copy_buffer@@Base+0x98>
   3775c:	andeq	r0, r0, r0

00037760 <cmetrohash64_1@@Base>:
   37760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37764:	sub	sp, sp, #300	; 0x12c
   37768:	add	r1, r0, r2
   3776c:	mov	r7, r1
   37770:	str	r1, [sp, #276]	; 0x114
   37774:	add	r5, pc, #100	; 0x64
   37778:	ldrd	r4, [r5]
   3777c:	adds	r4, r4, r2
   37780:	adc	r5, r5, r3
   37784:	ldr	r1, [pc, #104]	; 377f4 <cmetrohash64_1@@Base+0x94>
   37788:	ldr	ip, [sp, #336]	; 0x150
   3778c:	umlal	r4, r5, r1, ip
   37790:	add	r1, sp, #280	; 0x118
   37794:	strd	r4, [r1]
   37798:	add	r1, sp, #288	; 0x120
   3779c:	strd	r4, [r1]
   377a0:	cmp	r3, #0
   377a4:	cmpeq	r2, #31
   377a8:	bls	37dfc <cmetrohash64_1@@Base+0x69c>
   377ac:	strd	r4, [sp, #8]
   377b0:	strd	r4, [sp, #16]
   377b4:	mov	r8, r4
   377b8:	mov	r9, r5
   377bc:	strd	r4, [sp]
   377c0:	ldr	lr, [pc, #44]	; 377f4 <cmetrohash64_1@@Base+0x94>
   377c4:	ldr	ip, [pc, #36]	; 377f0 <cmetrohash64_1@@Base+0x90>
   377c8:	ldr	r6, [pc, #24]	; 377e8 <cmetrohash64_1@@Base+0x88>
   377cc:	ldr	r1, [pc, #24]	; 377ec <cmetrohash64_1@@Base+0x8c>
   377d0:	sub	r7, r7, #32
   377d4:	str	r7, [sp, #272]	; 0x110
   377d8:	b	377f8 <cmetrohash64_1@@Base+0x98>
   377dc:	nop			; (mov r0, r0)
   377e0:	svcge	0x00065edb
   377e4:	rscvs	r5, r2, fp, lsr sp
   377e8:	blvc	ff7e78dc <__bss_end__@@Base+0xff7817e8>
   377ec:	svccs	0x005870a5
   377f0:			; <UNDEFINED> instruction: 0x8648dbdb
   377f4:	ldmdagt	sl!, {r0, r5, r6, r7, r8, ip, pc}
   377f8:	ldrb	r2, [r0, #1]
   377fc:	mov	r4, #0
   37800:	str	r4, [sp, #28]
   37804:	lsl	r3, r2, #8
   37808:	str	r3, [sp, #24]
   3780c:	ldrb	r2, [r0, #2]
   37810:	str	r4, [sp, #36]	; 0x24
   37814:	lsl	r3, r2, #16
   37818:	str	r3, [sp, #32]
   3781c:	ldrd	r4, [sp, #24]
   37820:	ldrd	r2, [sp, #32]
   37824:	orr	r4, r4, r2
   37828:	orr	r5, r5, r3
   3782c:	ldrb	r2, [r0]
   37830:	mov	r3, #0
   37834:	orr	r2, r2, r4
   37838:	orr	r3, r3, r5
   3783c:	ldrb	r4, [r0, #3]
   37840:	mov	r7, #0
   37844:	str	r7, [sp, #44]	; 0x2c
   37848:	lsl	r4, r4, #24
   3784c:	str	r4, [sp, #40]	; 0x28
   37850:	ldrd	r4, [sp, #40]	; 0x28
   37854:	orr	r4, r4, r2
   37858:	orr	r5, r5, r3
   3785c:	ldrb	fp, [r0, #4]
   37860:	orr	r2, r4, r7
   37864:	orr	r3, r5, fp
   37868:	ldrb	r4, [r0, #5]
   3786c:	lsl	r4, r4, #8
   37870:	str	r4, [sp, #52]	; 0x34
   37874:	str	r7, [sp, #48]	; 0x30
   37878:	ldrd	r4, [sp, #48]	; 0x30
   3787c:	orr	r4, r4, r2
   37880:	orr	r5, r5, r3
   37884:	mov	r2, r4
   37888:	mov	r3, r5
   3788c:	ldrb	r4, [r0, #6]
   37890:	lsl	r4, r4, #16
   37894:	str	r4, [sp, #60]	; 0x3c
   37898:	str	r7, [sp, #56]	; 0x38
   3789c:	ldrd	r4, [sp, #56]	; 0x38
   378a0:	orr	r4, r4, r2
   378a4:	orr	r5, r5, r3
   378a8:	mov	r2, r4
   378ac:	mov	r3, r5
   378b0:	ldrb	r4, [r0, #7]
   378b4:	lsl	r4, r4, #24
   378b8:	str	r4, [sp, #68]	; 0x44
   378bc:	str	r7, [sp, #64]	; 0x40
   378c0:	ldrd	r4, [sp, #64]	; 0x40
   378c4:	orr	r4, r4, r2
   378c8:	orr	r5, r5, r3
   378cc:	umull	r2, r3, r4, lr
   378d0:	mla	r3, lr, r5, r3
   378d4:	ldrd	r4, [sp]
   378d8:	adds	r4, r4, r2
   378dc:	adc	r5, r5, r3
   378e0:	mov	r2, r4
   378e4:	lsr	r4, r4, #29
   378e8:	orr	r4, r4, r5, lsl #3
   378ec:	str	r4, [sp, #72]	; 0x48
   378f0:	lsr	r3, r5, #29
   378f4:	orr	r3, r3, r2, lsl #3
   378f8:	str	r3, [sp, #76]	; 0x4c
   378fc:	ldrd	r2, [sp, #72]	; 0x48
   37900:	ldrd	r4, [sp, #16]
   37904:	adds	r2, r2, r4
   37908:	adc	r3, r3, r5
   3790c:	strd	r2, [sp]
   37910:	ldrb	r2, [r0, #9]
   37914:	str	r7, [sp, #84]	; 0x54
   37918:	lsl	r3, r2, #8
   3791c:	str	r3, [sp, #80]	; 0x50
   37920:	ldrb	r2, [r0, #10]
   37924:	str	r7, [sp, #92]	; 0x5c
   37928:	lsl	r3, r2, #16
   3792c:	str	r3, [sp, #88]	; 0x58
   37930:	ldrd	r4, [sp, #80]	; 0x50
   37934:	ldrd	r2, [sp, #88]	; 0x58
   37938:	orr	r4, r4, r2
   3793c:	orr	r5, r5, r3
   37940:	ldrb	r2, [r0, #8]
   37944:	mov	r3, #0
   37948:	orr	r2, r2, r4
   3794c:	orr	r3, r3, r5
   37950:	ldrb	r4, [r0, #11]
   37954:	str	r7, [sp, #100]	; 0x64
   37958:	lsl	r5, r4, #24
   3795c:	str	r5, [sp, #96]	; 0x60
   37960:	ldrd	r4, [sp, #96]	; 0x60
   37964:	orr	r4, r4, r2
   37968:	orr	r5, r5, r3
   3796c:	mov	r2, r4
   37970:	mov	r3, r5
   37974:	ldrb	r5, [r0, #12]
   37978:	str	r5, [sp, #108]	; 0x6c
   3797c:	str	r7, [sp, #104]	; 0x68
   37980:	ldrd	r4, [sp, #104]	; 0x68
   37984:	orr	r4, r4, r2
   37988:	orr	r5, r5, r3
   3798c:	mov	r2, r4
   37990:	mov	r3, r5
   37994:	ldrb	r4, [r0, #13]
   37998:	lsl	r5, r4, #8
   3799c:	str	r5, [sp, #116]	; 0x74
   379a0:	str	r7, [sp, #112]	; 0x70
   379a4:	ldrd	r4, [sp, #112]	; 0x70
   379a8:	orr	r4, r4, r2
   379ac:	orr	r5, r5, r3
   379b0:	mov	r2, r4
   379b4:	mov	r3, r5
   379b8:	ldrb	r4, [r0, #14]
   379bc:	lsl	r5, r4, #16
   379c0:	str	r5, [sp, #124]	; 0x7c
   379c4:	str	r7, [sp, #120]	; 0x78
   379c8:	ldrd	r4, [sp, #120]	; 0x78
   379cc:	orr	r4, r4, r2
   379d0:	orr	r5, r5, r3
   379d4:	mov	r2, r4
   379d8:	mov	r3, r5
   379dc:	ldrb	r4, [r0, #15]
   379e0:	lsl	r5, r4, #24
   379e4:	str	r5, [sp, #132]	; 0x84
   379e8:	str	r7, [sp, #128]	; 0x80
   379ec:	ldrd	r4, [sp, #128]	; 0x80
   379f0:	orr	r4, r4, r2
   379f4:	orr	r5, r5, r3
   379f8:	mov	r3, r5
   379fc:	umull	r4, r5, r4, ip
   37a00:	mla	r5, ip, r3, r5
   37a04:	adds	r4, r4, r8
   37a08:	adc	r5, r5, r9
   37a0c:	lsr	r3, r4, #29
   37a10:	orr	r3, r3, r5, lsl #3
   37a14:	str	r3, [sp, #136]	; 0x88
   37a18:	lsr	r3, r5, #29
   37a1c:	orr	r3, r3, r4, lsl #3
   37a20:	str	r3, [sp, #140]	; 0x8c
   37a24:	ldrd	r2, [sp, #136]	; 0x88
   37a28:	ldrd	r8, [sp, #8]
   37a2c:	adds	r2, r2, r8
   37a30:	adc	r3, r3, r9
   37a34:	mov	r8, r2
   37a38:	mov	r9, r3
   37a3c:	ldrb	r2, [r0, #17]
   37a40:	str	r7, [sp, #148]	; 0x94
   37a44:	lsl	r3, r2, #8
   37a48:	str	r3, [sp, #144]	; 0x90
   37a4c:	ldrb	r2, [r0, #18]
   37a50:	str	r7, [sp, #156]	; 0x9c
   37a54:	lsl	r3, r2, #16
   37a58:	str	r3, [sp, #152]	; 0x98
   37a5c:	ldrd	r2, [sp, #144]	; 0x90
   37a60:	ldrd	r4, [sp, #152]	; 0x98
   37a64:	orr	r2, r2, r4
   37a68:	orr	r3, r3, r5
   37a6c:	mov	r4, r2
   37a70:	mov	r5, r3
   37a74:	ldrb	r2, [r0, #16]
   37a78:	mov	r3, #0
   37a7c:	orr	r2, r2, r4
   37a80:	orr	r3, r3, r5
   37a84:	ldrb	r4, [r0, #19]
   37a88:	str	r7, [sp, #164]	; 0xa4
   37a8c:	lsl	r5, r4, #24
   37a90:	str	r5, [sp, #160]	; 0xa0
   37a94:	ldrd	r4, [sp, #160]	; 0xa0
   37a98:	orr	r4, r4, r2
   37a9c:	orr	r5, r5, r3
   37aa0:	mov	r2, r4
   37aa4:	mov	r3, r5
   37aa8:	ldrb	r5, [r0, #20]
   37aac:	str	r5, [sp, #172]	; 0xac
   37ab0:	str	r7, [sp, #168]	; 0xa8
   37ab4:	ldrd	r4, [sp, #168]	; 0xa8
   37ab8:	orr	r4, r4, r2
   37abc:	orr	r5, r5, r3
   37ac0:	mov	r2, r4
   37ac4:	mov	r3, r5
   37ac8:	ldrb	r4, [r0, #21]
   37acc:	lsl	r5, r4, #8
   37ad0:	str	r5, [sp, #180]	; 0xb4
   37ad4:	str	r7, [sp, #176]	; 0xb0
   37ad8:	ldrd	r4, [sp, #176]	; 0xb0
   37adc:	orr	r4, r4, r2
   37ae0:	orr	r5, r5, r3
   37ae4:	mov	r2, r4
   37ae8:	mov	r3, r5
   37aec:	ldrb	r4, [r0, #22]
   37af0:	lsl	r5, r4, #16
   37af4:	str	r5, [sp, #188]	; 0xbc
   37af8:	str	r7, [sp, #184]	; 0xb8
   37afc:	ldrd	r4, [sp, #184]	; 0xb8
   37b00:	orr	r4, r4, r2
   37b04:	orr	r5, r5, r3
   37b08:	mov	r2, r4
   37b0c:	mov	r3, r5
   37b10:	ldrb	r4, [r0, #23]
   37b14:	lsl	r5, r4, #24
   37b18:	str	r5, [sp, #196]	; 0xc4
   37b1c:	str	r7, [sp, #192]	; 0xc0
   37b20:	ldrd	r4, [sp, #192]	; 0xc0
   37b24:	orr	r4, r4, r2
   37b28:	orr	r5, r5, r3
   37b2c:	umull	r2, r3, r4, r6
   37b30:	mla	r3, r6, r5, r3
   37b34:	ldrd	r4, [sp, #16]
   37b38:	adds	r4, r4, r2
   37b3c:	adc	r5, r5, r3
   37b40:	mov	r2, r4
   37b44:	mov	r3, r5
   37b48:	lsr	r4, r4, #29
   37b4c:	orr	r5, r4, r5, lsl #3
   37b50:	str	r5, [sp, #200]	; 0xc8
   37b54:	lsr	r3, r3, #29
   37b58:	orr	r3, r3, r2, lsl #3
   37b5c:	str	r3, [sp, #204]	; 0xcc
   37b60:	ldrd	r4, [sp, #200]	; 0xc8
   37b64:	ldrd	r2, [sp]
   37b68:	adds	r4, r4, r2
   37b6c:	adc	r5, r5, r3
   37b70:	strd	r4, [sp, #16]
   37b74:	ldrb	r2, [r0, #26]
   37b78:	str	r7, [sp, #212]	; 0xd4
   37b7c:	lsl	r3, r2, #16
   37b80:	str	r3, [sp, #208]	; 0xd0
   37b84:	ldrb	r2, [r0, #25]
   37b88:	str	r7, [sp, #220]	; 0xdc
   37b8c:	lsl	r3, r2, #8
   37b90:	str	r3, [sp, #216]	; 0xd8
   37b94:	ldrd	r2, [sp, #208]	; 0xd0
   37b98:	ldrd	r4, [sp, #216]	; 0xd8
   37b9c:	orr	r2, r2, r4
   37ba0:	orr	r3, r3, r5
   37ba4:	mov	r4, r2
   37ba8:	mov	r5, r3
   37bac:	ldrb	r2, [r0, #24]
   37bb0:	mov	r3, #0
   37bb4:	orr	r2, r2, r4
   37bb8:	orr	r3, r3, r5
   37bbc:	ldrb	r4, [r0, #27]
   37bc0:	str	r7, [sp, #228]	; 0xe4
   37bc4:	lsl	r5, r4, #24
   37bc8:	str	r5, [sp, #224]	; 0xe0
   37bcc:	ldrd	r4, [sp, #224]	; 0xe0
   37bd0:	orr	r4, r4, r2
   37bd4:	orr	r5, r5, r3
   37bd8:	mov	r2, r4
   37bdc:	mov	r3, r5
   37be0:	ldrb	r5, [r0, #28]
   37be4:	str	r5, [sp, #236]	; 0xec
   37be8:	str	r7, [sp, #232]	; 0xe8
   37bec:	ldrd	r4, [sp, #232]	; 0xe8
   37bf0:	orr	r4, r4, r2
   37bf4:	orr	r5, r5, r3
   37bf8:	mov	r2, r4
   37bfc:	mov	r3, r5
   37c00:	ldrb	r4, [r0, #29]
   37c04:	lsl	r5, r4, #8
   37c08:	str	r5, [sp, #244]	; 0xf4
   37c0c:	str	r7, [sp, #240]	; 0xf0
   37c10:	ldrd	r4, [sp, #240]	; 0xf0
   37c14:	orr	r4, r4, r2
   37c18:	orr	r5, r5, r3
   37c1c:	mov	r2, r4
   37c20:	mov	r3, r5
   37c24:	ldrb	r4, [r0, #30]
   37c28:	lsl	r5, r4, #16
   37c2c:	str	r5, [sp, #252]	; 0xfc
   37c30:	str	r7, [sp, #248]	; 0xf8
   37c34:	ldrd	r4, [sp, #248]	; 0xf8
   37c38:	orr	r4, r4, r2
   37c3c:	orr	r5, r5, r3
   37c40:	mov	r2, r4
   37c44:	mov	r3, r5
   37c48:	ldrb	r4, [r0, #31]
   37c4c:	lsl	r5, r4, #24
   37c50:	str	r5, [sp, #260]	; 0x104
   37c54:	str	r7, [sp, #256]	; 0x100
   37c58:	add	r4, sp, #256	; 0x100
   37c5c:	ldrd	r4, [r4]
   37c60:	orr	r4, r4, r2
   37c64:	orr	r5, r5, r3
   37c68:	umull	r2, r3, r4, r1
   37c6c:	mla	r3, r1, r5, r3
   37c70:	ldrd	r4, [sp, #8]
   37c74:	adds	r4, r4, r2
   37c78:	adc	r5, r5, r3
   37c7c:	mov	r2, r4
   37c80:	add	r0, r0, #32
   37c84:	lsr	r4, r4, #29
   37c88:	orr	r4, r4, r5, lsl #3
   37c8c:	str	r4, [sp, #264]	; 0x108
   37c90:	lsr	r3, r5, #29
   37c94:	orr	r3, r3, r2, lsl #3
   37c98:	str	r3, [sp, #268]	; 0x10c
   37c9c:	add	r3, sp, #264	; 0x108
   37ca0:	ldrd	r2, [r3]
   37ca4:	adds	r2, r2, r8
   37ca8:	adc	r3, r3, r9
   37cac:	strd	r2, [sp, #8]
   37cb0:	ldr	r3, [sp, #272]	; 0x110
   37cb4:	cmp	r0, r3
   37cb8:	bls	377f8 <cmetrohash64_1@@Base+0x98>
   37cbc:	ldrd	sl, [sp]
   37cc0:	ldrd	r2, [sp, #8]
   37cc4:	adds	r6, sl, r2
   37cc8:	adc	r7, fp, r3
   37ccc:	ldr	r3, [pc, #-1248]	; 377f4 <cmetrohash64_1@@Base+0x94>
   37cd0:	umull	r4, r5, r6, r3
   37cd4:	mla	r5, r3, r7, r5
   37cd8:	adds	r4, r4, r8
   37cdc:	adc	r5, r5, r9
   37ce0:	lsl	r1, r5, #31
   37ce4:	orr	r1, r1, r4, lsr #1
   37ce8:	lsl	r4, r4, #31
   37cec:	orr	r4, r4, r5, lsr #1
   37cf0:	ldr	r2, [pc, #-1288]	; 377f0 <cmetrohash64_1@@Base+0x90>
   37cf4:	umull	r4, r5, r4, r2
   37cf8:	mla	r5, r2, r1, r5
   37cfc:	ldrd	r6, [sp, #16]
   37d00:	eor	r6, r6, r4
   37d04:	eor	r7, r7, r5
   37d08:	strd	r6, [sp, #16]
   37d0c:	adds	r6, r6, r8
   37d10:	adc	r7, r7, r9
   37d14:	umull	r4, r5, r6, r2
   37d18:	mla	r5, r2, r7, r5
   37d1c:	mov	r6, sl
   37d20:	mov	r7, fp
   37d24:	adds	sl, sl, r4
   37d28:	adc	fp, fp, r5
   37d2c:	lsl	r1, fp, #31
   37d30:	orr	r1, r1, sl, lsr #1
   37d34:	lsl	sl, sl, #31
   37d38:	orr	sl, sl, fp, lsr #1
   37d3c:	umull	sl, fp, sl, r3
   37d40:	mla	fp, r3, r1, fp
   37d44:	ldrd	r4, [sp, #8]
   37d48:	eor	r4, r4, sl
   37d4c:	eor	r5, r5, fp
   37d50:	mov	sl, r4
   37d54:	mov	fp, r5
   37d58:	ldrd	r4, [sp, #16]
   37d5c:	adds	r6, r6, r4
   37d60:	adc	r7, r7, r5
   37d64:	umull	r4, r5, r6, r3
   37d68:	mla	r5, r3, r7, r5
   37d6c:	adds	r4, r4, sl
   37d70:	adc	r5, r5, fp
   37d74:	lsl	r1, r5, #31
   37d78:	orr	r1, r1, r4, lsr #1
   37d7c:	lsl	r4, r4, #31
   37d80:	orr	r4, r4, r5, lsr #1
   37d84:	umull	r6, r7, r4, r2
   37d88:	mla	r7, r2, r1, r7
   37d8c:	ldrd	r4, [sp]
   37d90:	eor	r4, r4, r8
   37d94:	eor	r5, r5, r9
   37d98:	eor	r4, r4, r6
   37d9c:	eor	r5, r5, r7
   37da0:	adds	r8, r8, sl
   37da4:	adc	r9, r9, fp
   37da8:	umull	r6, r7, r8, r2
   37dac:	mla	r7, r2, r9, r7
   37db0:	ldrd	r8, [sp, #16]
   37db4:	adds	r8, r8, r6
   37db8:	adc	r9, r9, r7
   37dbc:	lsl	r2, r9, #31
   37dc0:	orr	r2, r2, r8, lsr #1
   37dc4:	lsl	r6, r8, #31
   37dc8:	orr	r6, r6, r9, lsr #1
   37dcc:	umull	r6, r7, r6, r3
   37dd0:	mla	r7, r3, r2, r7
   37dd4:	eor	r4, r4, r6
   37dd8:	eor	r5, r5, r7
   37ddc:	add	r3, sp, #280	; 0x118
   37de0:	ldrd	r2, [r3]
   37de4:	adds	r2, r2, r4
   37de8:	adc	r3, r3, r5
   37dec:	mov	r4, r2
   37df0:	mov	r5, r3
   37df4:	add	r3, sp, #288	; 0x120
   37df8:	strd	r4, [r3]
   37dfc:	ldr	r3, [sp, #276]	; 0x114
   37e00:	sub	r3, r3, r0
   37e04:	cmp	r3, #15
   37e08:	ble	37ff8 <cmetrohash64_1@@Base+0x898>
   37e0c:	ldrb	r4, [r0, #1]
   37e10:	mov	r3, #0
   37e14:	lsl	r2, r4, #8
   37e18:	ldrb	r6, [r0, #2]
   37e1c:	mov	r5, #0
   37e20:	lsl	r4, r6, #16
   37e24:	orr	r2, r2, r4
   37e28:	orr	r3, r3, r5
   37e2c:	ldrb	r4, [r0]
   37e30:	mov	r5, #0
   37e34:	orr	r2, r2, r4
   37e38:	orr	r3, r3, r5
   37e3c:	ldrb	r6, [r0, #3]
   37e40:	mov	r5, #0
   37e44:	lsl	r4, r6, #24
   37e48:	orr	r2, r2, r4
   37e4c:	orr	r3, r3, r5
   37e50:	mov	r8, #0
   37e54:	ldrb	r9, [r0, #4]
   37e58:	orr	r2, r2, r8
   37e5c:	orr	r3, r3, r9
   37e60:	ldrb	r6, [r0, #5]
   37e64:	lsl	r5, r6, #8
   37e68:	orr	r2, r2, r8
   37e6c:	orr	r3, r3, r5
   37e70:	ldrb	r6, [r0, #6]
   37e74:	lsl	r5, r6, #16
   37e78:	orr	r4, r8, r2
   37e7c:	orr	r5, r5, r3
   37e80:	ldrb	r6, [r0, #7]
   37e84:	lsl	r3, r6, #24
   37e88:	orr	r4, r4, r8
   37e8c:	orr	r5, r5, r3
   37e90:	ldr	r1, [pc, #-1700]	; 377f4 <cmetrohash64_1@@Base+0x94>
   37e94:	umull	r6, r7, r4, r1
   37e98:	mla	r7, r1, r5, r7
   37e9c:	add	r3, sp, #288	; 0x120
   37ea0:	ldrd	r2, [r3]
   37ea4:	adds	r2, r2, r6
   37ea8:	adc	r3, r3, r7
   37eac:	mov	r7, r3
   37eb0:	lsl	r3, r3, #31
   37eb4:	orr	r3, r3, r2, lsr #1
   37eb8:	lsl	sl, r2, #31
   37ebc:	orr	sl, sl, r7, lsr #1
   37ec0:	ldr	ip, [pc, #-1752]	; 377f0 <cmetrohash64_1@@Base+0x90>
   37ec4:	umull	sl, fp, sl, ip
   37ec8:	mla	fp, ip, r3, fp
   37ecc:	ldrb	r4, [r0, #9]
   37ed0:	mov	r3, #0
   37ed4:	lsl	r2, r4, #8
   37ed8:	ldrb	r6, [r0, #10]
   37edc:	mov	r5, #0
   37ee0:	lsl	r4, r6, #16
   37ee4:	orr	r2, r2, r4
   37ee8:	orr	r3, r3, r5
   37eec:	ldrb	r4, [r0, #8]
   37ef0:	mov	r5, #0
   37ef4:	orr	r2, r2, r4
   37ef8:	orr	r3, r3, r5
   37efc:	ldrb	r6, [r0, #11]
   37f00:	mov	r5, #0
   37f04:	lsl	r4, r6, #24
   37f08:	orr	r2, r2, r4
   37f0c:	orr	r3, r3, r5
   37f10:	ldrb	r7, [r0, #12]
   37f14:	orr	r2, r2, r8
   37f18:	orr	r3, r3, r7
   37f1c:	ldrb	r6, [r0, #13]
   37f20:	lsl	r5, r6, #8
   37f24:	orr	r2, r2, r8
   37f28:	orr	r3, r3, r5
   37f2c:	ldrb	r6, [r0, #14]
   37f30:	lsl	r5, r6, #16
   37f34:	orr	r2, r2, r8
   37f38:	orr	r3, r3, r5
   37f3c:	ldrb	r6, [r0, #15]
   37f40:	lsl	r5, r6, #24
   37f44:	orr	r2, r2, r8
   37f48:	orr	r3, r3, r5
   37f4c:	umull	r6, r7, r2, ip
   37f50:	mla	r7, ip, r3, r7
   37f54:	add	r3, sp, #288	; 0x120
   37f58:	ldrd	r2, [r3]
   37f5c:	adds	r2, r2, r6
   37f60:	adc	r3, r3, r7
   37f64:	add	r0, r0, #16
   37f68:	lsl	ip, r3, #31
   37f6c:	orr	ip, ip, r2, lsr #1
   37f70:	lsl	r2, r2, #31
   37f74:	orr	r2, r2, r3, lsr #1
   37f78:	ldr	lr, [pc, #-1944]	; 377e8 <cmetrohash64_1@@Base+0x88>
   37f7c:	umull	r2, r3, r2, lr
   37f80:	mla	r3, lr, ip, r3
   37f84:	umull	r4, r5, sl, r1
   37f88:	mla	r5, r1, fp, r5
   37f8c:	lsl	r1, r5, #29
   37f90:	orr	r9, r1, r4, lsr #3
   37f94:	lsl	r1, r4, #29
   37f98:	orr	r8, r1, r5, lsr #3
   37f9c:	adds	r8, r8, r2
   37fa0:	adc	r9, r9, r3
   37fa4:	ldr	r1, [pc, #-1984]	; 377ec <cmetrohash64_1@@Base+0x8c>
   37fa8:	umull	r4, r5, r2, r1
   37fac:	mla	r5, r1, r3, r5
   37fb0:	lsl	r1, r5, #29
   37fb4:	orr	r7, r1, r4, lsr #3
   37fb8:	lsl	r1, r4, #29
   37fbc:	orr	r6, r1, r5, lsr #3
   37fc0:	eor	sl, sl, r8
   37fc4:	eor	fp, fp, r9
   37fc8:	adds	sl, sl, r6
   37fcc:	adc	fp, fp, r7
   37fd0:	eor	sl, sl, r2
   37fd4:	eor	fp, fp, r3
   37fd8:	add	r3, sp, #288	; 0x120
   37fdc:	ldrd	r2, [r3]
   37fe0:	adds	r2, r2, sl
   37fe4:	adc	r3, r3, fp
   37fe8:	mov	sl, r2
   37fec:	mov	fp, r3
   37ff0:	add	r3, sp, #288	; 0x120
   37ff4:	strd	sl, [r3]
   37ff8:	ldr	r3, [sp, #276]	; 0x114
   37ffc:	sub	r3, r3, r0
   38000:	cmp	r3, #7
   38004:	ble	380d8 <cmetrohash64_1@@Base+0x978>
   38008:	ldrb	r4, [r0, #1]
   3800c:	mov	r3, #0
   38010:	lsl	r2, r4, #8
   38014:	ldrb	r6, [r0, #2]
   38018:	mov	r5, #0
   3801c:	lsl	r4, r6, #16
   38020:	orr	r2, r2, r4
   38024:	orr	r3, r3, r5
   38028:	ldrb	r4, [r0]
   3802c:	mov	r5, #0
   38030:	orr	r2, r2, r4
   38034:	orr	r3, r3, r5
   38038:	ldrb	r6, [r0, #3]
   3803c:	mov	r5, #0
   38040:	lsl	r4, r6, #24
   38044:	orr	r2, r2, r4
   38048:	orr	r3, r3, r5
   3804c:	mov	r4, #0
   38050:	ldrb	r5, [r0, #4]
   38054:	orr	r2, r2, r4
   38058:	orr	r3, r3, r5
   3805c:	ldrb	r8, [r0, #5]
   38060:	lsl	r7, r8, #8
   38064:	orr	r2, r2, r4
   38068:	orr	r3, r3, r7
   3806c:	ldrb	r8, [r0, #6]
   38070:	lsl	r7, r8, #16
   38074:	orr	r2, r2, r4
   38078:	orr	r3, r3, r7
   3807c:	ldrb	r8, [r0, #7]
   38080:	lsl	r7, r8, #24
   38084:	orr	r2, r2, r4
   38088:	orr	r3, r3, r7
   3808c:	ldr	r1, [pc, #-2216]	; 377ec <cmetrohash64_1@@Base+0x8c>
   38090:	umull	r4, r5, r2, r1
   38094:	mla	r5, r1, r3, r5
   38098:	add	r3, sp, #288	; 0x120
   3809c:	ldrd	r2, [r3]
   380a0:	adds	r2, r2, r4
   380a4:	adc	r3, r3, r5
   380a8:	add	r0, r0, #8
   380ac:	lsl	r1, r3, #31
   380b0:	orr	r1, r1, r2, lsr #1
   380b4:	lsl	r4, r2, #31
   380b8:	orr	r4, r4, r3, lsr #1
   380bc:	ldr	ip, [pc, #-2260]	; 377f0 <cmetrohash64_1@@Base+0x90>
   380c0:	umull	r4, r5, r4, ip
   380c4:	mla	r5, ip, r1, r5
   380c8:	eor	r4, r4, r2
   380cc:	eor	r5, r5, r3
   380d0:	add	r3, sp, #288	; 0x120
   380d4:	strd	r4, [r3]
   380d8:	ldr	r3, [sp, #276]	; 0x114
   380dc:	sub	r3, r3, r0
   380e0:	cmp	r3, #3
   380e4:	ble	38148 <cmetrohash64_1@@Base+0x9e8>
   380e8:	ldrb	r3, [r0, #1]
   380ec:	ldrb	r1, [r0, #2]
   380f0:	lsl	r1, r1, #16
   380f4:	orr	r1, r1, r3, lsl #8
   380f8:	ldrb	r3, [r0]
   380fc:	orr	r1, r1, r3
   38100:	ldrb	r3, [r0, #3]
   38104:	orr	r1, r1, r3, lsl #24
   38108:	add	r3, sp, #288	; 0x120
   3810c:	ldrd	r2, [r3]
   38110:	ldr	ip, [pc, #-2348]	; 377ec <cmetrohash64_1@@Base+0x8c>
   38114:	umlal	r2, r3, ip, r1
   38118:	add	r0, r0, #4
   3811c:	lsr	r4, r2, #15
   38120:	orr	r4, r4, r3, lsl #17
   38124:	lsr	r1, r3, #15
   38128:	orr	r1, r1, r2, lsl #17
   3812c:	ldr	ip, [pc, #-2372]	; 377f0 <cmetrohash64_1@@Base+0x90>
   38130:	umull	r4, r5, r4, ip
   38134:	mla	r5, ip, r1, r5
   38138:	eor	r4, r4, r2
   3813c:	eor	r5, r5, r3
   38140:	add	r3, sp, #288	; 0x120
   38144:	strd	r4, [r3]
   38148:	ldr	r3, [sp, #276]	; 0x114
   3814c:	sub	r3, r3, r0
   38150:	cmp	r3, #1
   38154:	ble	381b0 <cmetrohash64_1@@Base+0xa50>
   38158:	ldrb	r4, [r0, #1]
   3815c:	ldrb	r2, [r0], #2
   38160:	orr	r2, r2, r4, lsl #8
   38164:	asr	r7, r2, #31
   38168:	ldr	r3, [pc, #-2436]	; 377ec <cmetrohash64_1@@Base+0x8c>
   3816c:	umull	r4, r5, r2, r3
   38170:	mla	r5, r3, r7, r5
   38174:	add	r3, sp, #288	; 0x120
   38178:	ldrd	r2, [r3]
   3817c:	adds	r2, r2, r4
   38180:	adc	r3, r3, r5
   38184:	lsr	r4, r2, #13
   38188:	orr	r4, r4, r3, lsl #19
   3818c:	lsr	r1, r3, #13
   38190:	orr	r1, r1, r2, lsl #19
   38194:	ldr	ip, [pc, #-2476]	; 377f0 <cmetrohash64_1@@Base+0x90>
   38198:	umull	r4, r5, r4, ip
   3819c:	mla	r5, ip, r1, r5
   381a0:	eor	r2, r2, r4
   381a4:	eor	r3, r3, r5
   381a8:	add	r1, sp, #288	; 0x120
   381ac:	strd	r2, [r1]
   381b0:	ldr	r3, [sp, #276]	; 0x114
   381b4:	sub	r3, r3, r0
   381b8:	cmp	r3, #0
   381bc:	ble	38208 <cmetrohash64_1@@Base+0xaa8>
   381c0:	ldrb	r2, [r0]
   381c4:	ldr	r0, [pc, #-2528]	; 377ec <cmetrohash64_1@@Base+0x8c>
   381c8:	umull	r2, r3, r2, r0
   381cc:	add	r1, sp, #288	; 0x120
   381d0:	ldrd	r0, [r1]
   381d4:	adds	r0, r0, r2
   381d8:	adc	r1, r1, r3
   381dc:	lsr	r2, r0, #25
   381e0:	orr	r2, r2, r1, lsl #7
   381e4:	lsr	ip, r1, #25
   381e8:	orr	ip, ip, r0, lsl #7
   381ec:	ldr	lr, [pc, #-2564]	; 377f0 <cmetrohash64_1@@Base+0x90>
   381f0:	umull	r2, r3, r2, lr
   381f4:	mla	r3, lr, ip, r3
   381f8:	eor	r2, r2, r0
   381fc:	eor	r3, r3, r1
   38200:	add	r1, sp, #288	; 0x120
   38204:	strd	r2, [r1]
   38208:	add	r3, sp, #288	; 0x120
   3820c:	ldrd	r0, [r3]
   38210:	lsl	ip, r1, #31
   38214:	orr	r3, ip, r0, lsr #1
   38218:	lsl	ip, r0, #31
   3821c:	orr	r2, ip, r1, lsr #1
   38220:	eor	r0, r0, r2
   38224:	eor	r1, r1, r3
   38228:	ldr	ip, [pc, #-2620]	; 377f4 <cmetrohash64_1@@Base+0x94>
   3822c:	umull	r2, r3, r0, ip
   38230:	mla	r3, ip, r1, r3
   38234:	lsl	ip, r3, #31
   38238:	orr	r1, ip, r2, lsr #1
   3823c:	lsl	ip, r2, #31
   38240:	orr	r0, ip, r3, lsr #1
   38244:	eor	r0, r0, r2
   38248:	eor	r1, r1, r3
   3824c:	add	r3, sp, #296	; 0x128
   38250:	strd	r0, [r3, #-8]!
   38254:	ldm	r3!, {r0, r1}
   38258:	ldr	r3, [sp, #340]	; 0x154
   3825c:	str	r0, [r3]
   38260:	str	r1, [r3, #4]
   38264:	add	sp, sp, #300	; 0x12c
   38268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003826c <cmetrohash64_2@@Base>:
   3826c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38270:	sub	sp, sp, #292	; 0x124
   38274:	add	r1, r0, r2
   38278:	mov	lr, r1
   3827c:	str	r1, [sp, #268]	; 0x10c
   38280:	add	r5, pc, #896	; 0x380
   38284:	ldrd	r4, [r5]
   38288:	adds	r4, r4, r2
   3828c:	adc	r5, r5, r3
   38290:	ldr	r1, [pc, #900]	; 3861c <cmetrohash64_2@@Base+0x3b0>
   38294:	ldr	ip, [sp, #328]	; 0x148
   38298:	umlal	r4, r5, r1, ip
   3829c:	add	r1, sp, #272	; 0x110
   382a0:	strd	r4, [r1]
   382a4:	add	r1, sp, #280	; 0x118
   382a8:	strd	r4, [r1]
   382ac:	cmp	r3, #0
   382b0:	cmpeq	r2, #31
   382b4:	bls	388f4 <cmetrohash64_2@@Base+0x688>
   382b8:	mov	sl, r4
   382bc:	mov	fp, r5
   382c0:	strd	r4, [sp, #8]
   382c4:	mov	r8, r4
   382c8:	mov	r9, r5
   382cc:	strd	r4, [sp]
   382d0:	ldr	ip, [pc, #832]	; 38618 <cmetrohash64_2@@Base+0x3ac>
   382d4:	ldr	r1, [pc, #824]	; 38614 <cmetrohash64_2@@Base+0x3a8>
   382d8:	sub	r3, lr, #32
   382dc:	str	r3, [sp, #264]	; 0x108
   382e0:	ldrb	r2, [r0, #1]
   382e4:	mov	r4, #0
   382e8:	str	r4, [sp, #20]
   382ec:	lsl	r3, r2, #8
   382f0:	str	r3, [sp, #16]
   382f4:	ldrb	r2, [r0, #2]
   382f8:	str	r4, [sp, #28]
   382fc:	lsl	r3, r2, #16
   38300:	str	r3, [sp, #24]
   38304:	ldrd	r2, [sp, #16]
   38308:	ldrd	r4, [sp, #24]
   3830c:	orr	r2, r2, r4
   38310:	orr	r3, r3, r5
   38314:	ldrb	r4, [r0]
   38318:	mov	r5, #0
   3831c:	orr	r4, r4, r2
   38320:	orr	r5, r5, r3
   38324:	ldrb	r2, [r0, #3]
   38328:	mov	lr, #0
   3832c:	str	lr, [sp, #36]	; 0x24
   38330:	lsl	r3, r2, #24
   38334:	str	r3, [sp, #32]
   38338:	ldrd	r2, [sp, #32]
   3833c:	orr	r2, r2, r4
   38340:	orr	r3, r3, r5
   38344:	ldrb	r7, [r0, #4]
   38348:	mov	r6, lr
   3834c:	orr	r4, r2, lr
   38350:	orr	r5, r3, r7
   38354:	ldrb	r2, [r0, #5]
   38358:	lsl	r3, r2, #8
   3835c:	str	r3, [sp, #44]	; 0x2c
   38360:	str	lr, [sp, #40]	; 0x28
   38364:	ldrd	r2, [sp, #40]	; 0x28
   38368:	orr	r2, r2, r4
   3836c:	orr	r3, r3, r5
   38370:	mov	r4, r2
   38374:	mov	r5, r3
   38378:	ldrb	r2, [r0, #6]
   3837c:	lsl	r3, r2, #16
   38380:	str	r3, [sp, #52]	; 0x34
   38384:	str	lr, [sp, #48]	; 0x30
   38388:	ldrd	r2, [sp, #48]	; 0x30
   3838c:	orr	r2, r2, r4
   38390:	orr	r3, r3, r5
   38394:	mov	r4, r2
   38398:	mov	r5, r3
   3839c:	ldrb	r2, [r0, #7]
   383a0:	lsl	r3, r2, #24
   383a4:	str	r3, [sp, #60]	; 0x3c
   383a8:	str	lr, [sp, #56]	; 0x38
   383ac:	ldrd	r2, [sp, #56]	; 0x38
   383b0:	orr	r2, r2, r4
   383b4:	orr	r3, r3, r5
   383b8:	mov	r5, r3
   383bc:	ldr	r3, [pc, #600]	; 3861c <cmetrohash64_2@@Base+0x3b0>
   383c0:	umull	r2, r3, r2, r3
   383c4:	ldr	lr, [pc, #592]	; 3861c <cmetrohash64_2@@Base+0x3b0>
   383c8:	mla	r3, lr, r5, r3
   383cc:	ldrd	r4, [sp]
   383d0:	adds	r4, r4, r2
   383d4:	adc	r5, r5, r3
   383d8:	mov	r2, r4
   383dc:	lsr	r4, r4, #29
   383e0:	orr	lr, r4, r5, lsl #3
   383e4:	str	lr, [sp, #64]	; 0x40
   383e8:	lsr	r3, r5, #29
   383ec:	orr	r3, r3, r2, lsl #3
   383f0:	str	r3, [sp, #68]	; 0x44
   383f4:	ldrd	r2, [sp, #64]	; 0x40
   383f8:	ldrd	r4, [sp, #8]
   383fc:	adds	r2, r2, r4
   38400:	adc	r3, r3, r5
   38404:	strd	r2, [sp]
   38408:	ldrb	r2, [r0, #9]
   3840c:	str	r6, [sp, #76]	; 0x4c
   38410:	lsl	r3, r2, #8
   38414:	str	r3, [sp, #72]	; 0x48
   38418:	ldrb	r2, [r0, #10]
   3841c:	str	r6, [sp, #84]	; 0x54
   38420:	lsl	r3, r2, #16
   38424:	str	r3, [sp, #80]	; 0x50
   38428:	ldrd	r2, [sp, #72]	; 0x48
   3842c:	ldrd	r4, [sp, #80]	; 0x50
   38430:	orr	r2, r2, r4
   38434:	orr	r3, r3, r5
   38438:	ldrb	r4, [r0, #8]
   3843c:	mov	r5, #0
   38440:	orr	r4, r4, r2
   38444:	orr	r5, r5, r3
   38448:	ldrb	r2, [r0, #11]
   3844c:	str	r6, [sp, #92]	; 0x5c
   38450:	lsl	r3, r2, #24
   38454:	str	r3, [sp, #88]	; 0x58
   38458:	ldrd	r2, [sp, #88]	; 0x58
   3845c:	orr	r2, r2, r4
   38460:	orr	r3, r3, r5
   38464:	mov	r4, r2
   38468:	mov	r5, r3
   3846c:	ldrb	r3, [r0, #12]
   38470:	str	r3, [sp, #100]	; 0x64
   38474:	str	r6, [sp, #96]	; 0x60
   38478:	ldrd	r2, [sp, #96]	; 0x60
   3847c:	orr	r2, r2, r4
   38480:	orr	r3, r3, r5
   38484:	mov	r4, r2
   38488:	mov	r5, r3
   3848c:	ldrb	r2, [r0, #13]
   38490:	lsl	r3, r2, #8
   38494:	str	r3, [sp, #108]	; 0x6c
   38498:	str	r6, [sp, #104]	; 0x68
   3849c:	ldrd	r2, [sp, #104]	; 0x68
   384a0:	orr	r2, r2, r4
   384a4:	orr	r3, r3, r5
   384a8:	mov	r4, r2
   384ac:	mov	r5, r3
   384b0:	ldrb	r2, [r0, #14]
   384b4:	lsl	r3, r2, #16
   384b8:	str	r3, [sp, #116]	; 0x74
   384bc:	str	r6, [sp, #112]	; 0x70
   384c0:	ldrd	r2, [sp, #112]	; 0x70
   384c4:	orr	r2, r2, r4
   384c8:	orr	r3, r3, r5
   384cc:	mov	r4, r2
   384d0:	mov	r5, r3
   384d4:	ldrb	r2, [r0, #15]
   384d8:	lsl	r3, r2, #24
   384dc:	str	r3, [sp, #124]	; 0x7c
   384e0:	str	r6, [sp, #120]	; 0x78
   384e4:	ldrd	r2, [sp, #120]	; 0x78
   384e8:	orr	r2, r2, r4
   384ec:	orr	r3, r3, r5
   384f0:	mov	r5, r3
   384f4:	umull	r2, r3, r2, ip
   384f8:	mla	r3, ip, r5, r3
   384fc:	adds	r2, r2, r8
   38500:	adc	r3, r3, r9
   38504:	lsr	r4, r2, #29
   38508:	orr	lr, r4, r3, lsl #3
   3850c:	str	lr, [sp, #128]	; 0x80
   38510:	lsr	r3, r3, #29
   38514:	orr	r3, r3, r2, lsl #3
   38518:	str	r3, [sp, #132]	; 0x84
   3851c:	ldrd	r8, [sp, #128]	; 0x80
   38520:	adds	r8, r8, sl
   38524:	adc	r9, r9, fp
   38528:	ldrb	r2, [r0, #17]
   3852c:	str	r6, [sp, #140]	; 0x8c
   38530:	lsl	r3, r2, #8
   38534:	str	r3, [sp, #136]	; 0x88
   38538:	ldrb	r2, [r0, #18]
   3853c:	str	r6, [sp, #148]	; 0x94
   38540:	lsl	r3, r2, #16
   38544:	str	r3, [sp, #144]	; 0x90
   38548:	ldrd	r2, [sp, #136]	; 0x88
   3854c:	ldrd	r4, [sp, #144]	; 0x90
   38550:	orr	r2, r2, r4
   38554:	orr	r3, r3, r5
   38558:	ldrb	r4, [r0, #16]
   3855c:	mov	r5, #0
   38560:	orr	r4, r4, r2
   38564:	orr	r5, r5, r3
   38568:	ldrb	r2, [r0, #19]
   3856c:	str	r6, [sp, #156]	; 0x9c
   38570:	lsl	r3, r2, #24
   38574:	str	r3, [sp, #152]	; 0x98
   38578:	ldrd	r2, [sp, #152]	; 0x98
   3857c:	orr	r2, r2, r4
   38580:	orr	r3, r3, r5
   38584:	mov	r4, r2
   38588:	mov	r5, r3
   3858c:	ldrb	r3, [r0, #20]
   38590:	str	r3, [sp, #164]	; 0xa4
   38594:	str	r6, [sp, #160]	; 0xa0
   38598:	ldrd	r2, [sp, #160]	; 0xa0
   3859c:	orr	r2, r2, r4
   385a0:	orr	r3, r3, r5
   385a4:	mov	r4, r2
   385a8:	mov	r5, r3
   385ac:	ldrb	r2, [r0, #21]
   385b0:	lsl	r3, r2, #8
   385b4:	str	r3, [sp, #172]	; 0xac
   385b8:	str	r6, [sp, #168]	; 0xa8
   385bc:	ldrd	r2, [sp, #168]	; 0xa8
   385c0:	orr	r2, r2, r4
   385c4:	orr	r3, r3, r5
   385c8:	mov	r4, r2
   385cc:	mov	r5, r3
   385d0:	ldrb	r2, [r0, #22]
   385d4:	lsl	r3, r2, #16
   385d8:	str	r3, [sp, #180]	; 0xb4
   385dc:	str	r6, [sp, #176]	; 0xb0
   385e0:	ldrd	r2, [sp, #176]	; 0xb0
   385e4:	orr	r2, r2, r4
   385e8:	orr	r3, r3, r5
   385ec:	mov	r4, r2
   385f0:	mov	r5, r3
   385f4:	ldrb	r2, [r0, #23]
   385f8:	lsl	r3, r2, #24
   385fc:	str	r3, [sp, #188]	; 0xbc
   38600:	str	r6, [sp, #184]	; 0xb8
   38604:	b	38620 <cmetrohash64_2@@Base+0x3b4>
   38608:	blle	ff96b4e4 <__bss_end__@@Base+0xff9053f0>
   3860c:	adcspl	r3, ip, #-134217725	; 0xf8000003
   38610:	addsvs	r2, r9, #772	; 0x304
   38614:	adcscc	r5, ip, r9, lsr #22
   38618:	adcge	r0, sl, #-335544320	; 0xec000000
   3861c:			; <UNDEFINED> instruction: 0xd6d018f5
   38620:	ldrd	r2, [sp, #184]	; 0xb8
   38624:	orr	r2, r2, r4
   38628:	orr	r3, r3, r5
   3862c:	mov	r5, r3
   38630:	ldr	r3, [pc, #-40]	; 38610 <cmetrohash64_2@@Base+0x3a4>
   38634:	umull	r2, r3, r2, r3
   38638:	ldr	lr, [pc, #-48]	; 38610 <cmetrohash64_2@@Base+0x3a4>
   3863c:	mla	r3, lr, r5, r3
   38640:	ldrd	r4, [sp, #8]
   38644:	adds	r4, r4, r2
   38648:	adc	r5, r5, r3
   3864c:	mov	r2, r4
   38650:	lsr	r4, r4, #29
   38654:	orr	lr, r4, r5, lsl #3
   38658:	str	lr, [sp, #192]	; 0xc0
   3865c:	lsr	r3, r5, #29
   38660:	orr	r3, r3, r2, lsl #3
   38664:	str	r3, [sp, #196]	; 0xc4
   38668:	ldrd	r4, [sp, #192]	; 0xc0
   3866c:	ldrd	r2, [sp]
   38670:	adds	r4, r4, r2
   38674:	adc	r5, r5, r3
   38678:	strd	r4, [sp, #8]
   3867c:	ldrb	r2, [r0, #26]
   38680:	str	r6, [sp, #204]	; 0xcc
   38684:	lsl	r3, r2, #16
   38688:	str	r3, [sp, #200]	; 0xc8
   3868c:	ldrb	r2, [r0, #25]
   38690:	str	r6, [sp, #212]	; 0xd4
   38694:	lsl	r3, r2, #8
   38698:	str	r3, [sp, #208]	; 0xd0
   3869c:	ldrd	r2, [sp, #200]	; 0xc8
   386a0:	ldrd	r4, [sp, #208]	; 0xd0
   386a4:	orr	r2, r2, r4
   386a8:	orr	r3, r3, r5
   386ac:	ldrb	r4, [r0, #24]
   386b0:	mov	r5, #0
   386b4:	orr	r4, r4, r2
   386b8:	orr	r5, r5, r3
   386bc:	ldrb	r2, [r0, #27]
   386c0:	str	r6, [sp, #220]	; 0xdc
   386c4:	lsl	r3, r2, #24
   386c8:	str	r3, [sp, #216]	; 0xd8
   386cc:	ldrd	r2, [sp, #216]	; 0xd8
   386d0:	orr	r2, r2, r4
   386d4:	orr	r3, r3, r5
   386d8:	mov	r4, r2
   386dc:	mov	r5, r3
   386e0:	ldrb	r3, [r0, #28]
   386e4:	str	r3, [sp, #228]	; 0xe4
   386e8:	str	r6, [sp, #224]	; 0xe0
   386ec:	ldrd	r2, [sp, #224]	; 0xe0
   386f0:	orr	r2, r2, r4
   386f4:	orr	r3, r3, r5
   386f8:	mov	r4, r2
   386fc:	mov	r5, r3
   38700:	ldrb	r2, [r0, #29]
   38704:	lsl	r3, r2, #8
   38708:	str	r3, [sp, #236]	; 0xec
   3870c:	str	r6, [sp, #232]	; 0xe8
   38710:	ldrd	r2, [sp, #232]	; 0xe8
   38714:	orr	r2, r2, r4
   38718:	orr	r3, r3, r5
   3871c:	mov	r4, r2
   38720:	mov	r5, r3
   38724:	ldrb	r2, [r0, #30]
   38728:	lsl	r3, r2, #16
   3872c:	str	r3, [sp, #244]	; 0xf4
   38730:	str	r6, [sp, #240]	; 0xf0
   38734:	ldrd	r2, [sp, #240]	; 0xf0
   38738:	orr	r2, r2, r4
   3873c:	orr	r3, r3, r5
   38740:	mov	r4, r2
   38744:	mov	r5, r3
   38748:	ldrb	r2, [r0, #31]
   3874c:	lsl	r3, r2, #24
   38750:	str	r3, [sp, #252]	; 0xfc
   38754:	str	r6, [sp, #248]	; 0xf8
   38758:	ldrd	r2, [sp, #248]	; 0xf8
   3875c:	orr	r2, r2, r4
   38760:	orr	r3, r3, r5
   38764:	mov	r5, r3
   38768:	umull	r2, r3, r2, r1
   3876c:	mla	r3, r1, r5, r3
   38770:	adds	r2, r2, sl
   38774:	adc	r3, r3, fp
   38778:	add	r0, r0, #32
   3877c:	lsr	r4, r2, #29
   38780:	orr	lr, r4, r3, lsl #3
   38784:	str	lr, [sp, #256]	; 0x100
   38788:	lsr	r3, r3, #29
   3878c:	orr	r3, r3, r2, lsl #3
   38790:	str	r3, [sp, #260]	; 0x104
   38794:	add	r3, sp, #256	; 0x100
   38798:	ldrd	sl, [r3]
   3879c:	adds	sl, sl, r8
   387a0:	adc	fp, fp, r9
   387a4:	ldr	r3, [sp, #264]	; 0x108
   387a8:	cmp	r0, r3
   387ac:	bls	382e0 <cmetrohash64_2@@Base+0x74>
   387b0:	ldrd	r6, [sp]
   387b4:	adds	r6, r6, sl
   387b8:	adc	r7, r7, fp
   387bc:	ldr	r3, [pc, #-424]	; 3861c <cmetrohash64_2@@Base+0x3b0>
   387c0:	umull	r4, r5, r6, r3
   387c4:	mla	r5, r3, r7, r5
   387c8:	adds	r4, r4, r8
   387cc:	adc	r5, r5, r9
   387d0:	lsr	r6, r4, #30
   387d4:	orr	r6, r6, r5, lsl #2
   387d8:	lsr	r2, r5, #30
   387dc:	orr	r4, r2, r4, lsl #2
   387e0:	ldr	r2, [pc, #-464]	; 38618 <cmetrohash64_2@@Base+0x3ac>
   387e4:	umull	r6, r7, r6, r2
   387e8:	mla	r7, r2, r4, r7
   387ec:	ldrd	r4, [sp, #8]
   387f0:	eor	r4, r4, r6
   387f4:	eor	r5, r5, r7
   387f8:	strd	r4, [sp, #8]
   387fc:	adds	r4, r4, r8
   38800:	adc	r5, r5, r9
   38804:	mov	r7, r5
   38808:	umull	r4, r5, r4, r2
   3880c:	mla	r5, r2, r7, r5
   38810:	ldrd	r6, [sp]
   38814:	adds	r6, r6, r4
   38818:	adc	r7, r7, r5
   3881c:	mov	r4, r6
   38820:	lsr	r6, r6, #30
   38824:	orr	r6, r6, r7, lsl #2
   38828:	lsr	r1, r7, #30
   3882c:	orr	r4, r1, r4, lsl #2
   38830:	umull	r6, r7, r6, r3
   38834:	mla	r7, r3, r4, r7
   38838:	eor	r4, r6, sl
   3883c:	eor	r5, r7, fp
   38840:	ldrd	r6, [sp]
   38844:	ldrd	sl, [sp, #8]
   38848:	adds	r6, r6, sl
   3884c:	adc	r7, r7, fp
   38850:	umull	sl, fp, r6, r3
   38854:	mla	fp, r3, r7, fp
   38858:	strd	r4, [sp, #16]
   3885c:	adds	r6, r4, sl
   38860:	adc	r7, r5, fp
   38864:	lsr	r4, r6, #30
   38868:	orr	r4, r4, r7, lsl #2
   3886c:	lsr	r1, r7, #30
   38870:	orr	sl, r1, r6, lsl #2
   38874:	umull	r6, r7, r4, r2
   38878:	mla	r7, r2, sl, r7
   3887c:	ldrd	r4, [sp]
   38880:	eor	r4, r4, r8
   38884:	eor	r5, r5, r9
   38888:	eor	r4, r4, r6
   3888c:	eor	r5, r5, r7
   38890:	ldrd	r6, [sp, #16]
   38894:	adds	r6, r6, r8
   38898:	adc	r7, r7, r9
   3889c:	mov	r9, r7
   388a0:	umull	r6, r7, r6, r2
   388a4:	mla	r7, r2, r9, r7
   388a8:	ldrd	sl, [sp, #8]
   388ac:	adds	sl, sl, r6
   388b0:	adc	fp, fp, r7
   388b4:	lsr	r8, sl, #30
   388b8:	orr	r8, r8, fp, lsl #2
   388bc:	lsr	r2, fp, #30
   388c0:	orr	r6, r2, sl, lsl #2
   388c4:	umull	r8, r9, r8, r3
   388c8:	mla	r9, r3, r6, r9
   388cc:	eor	r4, r4, r8
   388d0:	eor	r5, r5, r9
   388d4:	add	r3, sp, #272	; 0x110
   388d8:	ldrd	r2, [r3]
   388dc:	adds	r2, r2, r4
   388e0:	adc	r3, r3, r5
   388e4:	mov	r4, r2
   388e8:	mov	r5, r3
   388ec:	add	r3, sp, #280	; 0x118
   388f0:	strd	r4, [r3]
   388f4:	ldr	r3, [sp, #268]	; 0x10c
   388f8:	sub	r3, r3, r0
   388fc:	cmp	r3, #15
   38900:	ble	38aec <cmetrohash64_2@@Base+0x880>
   38904:	ldrb	r4, [r0, #1]
   38908:	mov	r3, #0
   3890c:	lsl	r2, r4, #8
   38910:	ldrb	r6, [r0, #2]
   38914:	mov	r5, #0
   38918:	lsl	r4, r6, #16
   3891c:	orr	r2, r2, r4
   38920:	orr	r3, r3, r5
   38924:	ldrb	r4, [r0]
   38928:	mov	r5, #0
   3892c:	orr	r2, r2, r4
   38930:	orr	r3, r3, r5
   38934:	ldrb	r6, [r0, #3]
   38938:	mov	r5, #0
   3893c:	lsl	r4, r6, #24
   38940:	orr	r2, r2, r4
   38944:	orr	r3, r3, r5
   38948:	mov	r8, #0
   3894c:	ldrb	r9, [r0, #4]
   38950:	orr	r2, r2, r8
   38954:	orr	r3, r3, r9
   38958:	ldrb	r6, [r0, #5]
   3895c:	lsl	r5, r6, #8
   38960:	orr	r2, r2, r8
   38964:	orr	r3, r3, r5
   38968:	ldrb	r6, [r0, #6]
   3896c:	lsl	r5, r6, #16
   38970:	orr	r4, r8, r2
   38974:	orr	r5, r5, r3
   38978:	ldrb	r6, [r0, #7]
   3897c:	lsl	r3, r6, #24
   38980:	orr	r4, r4, r8
   38984:	orr	r5, r5, r3
   38988:	ldr	ip, [pc, #-896]	; 38610 <cmetrohash64_2@@Base+0x3a4>
   3898c:	umull	r6, r7, r4, ip
   38990:	mla	r7, ip, r5, r7
   38994:	add	r3, sp, #280	; 0x118
   38998:	ldrd	r2, [r3]
   3899c:	adds	r2, r2, r6
   389a0:	adc	r3, r3, r7
   389a4:	lsr	sl, r2, #29
   389a8:	orr	sl, sl, r3, lsl #3
   389ac:	lsr	r3, r3, #29
   389b0:	orr	r6, r3, r2, lsl #3
   389b4:	ldr	r1, [pc, #-936]	; 38614 <cmetrohash64_2@@Base+0x3a8>
   389b8:	umull	sl, fp, sl, r1
   389bc:	mla	fp, r1, r6, fp
   389c0:	ldrb	r4, [r0, #9]
   389c4:	mov	r3, #0
   389c8:	lsl	r2, r4, #8
   389cc:	ldrb	r6, [r0, #10]
   389d0:	mov	r5, #0
   389d4:	lsl	r4, r6, #16
   389d8:	orr	r2, r2, r4
   389dc:	orr	r3, r3, r5
   389e0:	ldrb	r4, [r0, #8]
   389e4:	mov	r5, #0
   389e8:	orr	r2, r2, r4
   389ec:	orr	r3, r3, r5
   389f0:	ldrb	r6, [r0, #11]
   389f4:	mov	r5, #0
   389f8:	lsl	r4, r6, #24
   389fc:	orr	r2, r2, r4
   38a00:	orr	r3, r3, r5
   38a04:	ldrb	r7, [r0, #12]
   38a08:	orr	r2, r2, r8
   38a0c:	orr	r3, r3, r7
   38a10:	ldrb	r6, [r0, #13]
   38a14:	lsl	r5, r6, #8
   38a18:	orr	r2, r2, r8
   38a1c:	orr	r3, r3, r5
   38a20:	ldrb	r6, [r0, #14]
   38a24:	lsl	r5, r6, #16
   38a28:	orr	r2, r2, r8
   38a2c:	orr	r3, r3, r5
   38a30:	ldrb	r6, [r0, #15]
   38a34:	lsl	r5, r6, #24
   38a38:	orr	r2, r2, r8
   38a3c:	orr	r3, r3, r5
   38a40:	umull	r6, r7, r2, ip
   38a44:	mla	r7, ip, r3, r7
   38a48:	add	r3, sp, #280	; 0x118
   38a4c:	ldrd	r2, [r3]
   38a50:	adds	r2, r2, r6
   38a54:	adc	r3, r3, r7
   38a58:	mov	r6, r2
   38a5c:	add	r0, r0, #16
   38a60:	lsr	r2, r2, #29
   38a64:	orr	r2, r2, r3, lsl #3
   38a68:	lsr	r3, r3, #29
   38a6c:	orr	r6, r3, r6, lsl #3
   38a70:	umull	r2, r3, r2, r1
   38a74:	mla	r3, r1, r6, r3
   38a78:	ldr	ip, [pc, #-1124]	; 3861c <cmetrohash64_2@@Base+0x3b0>
   38a7c:	umull	r4, r5, sl, ip
   38a80:	mla	r5, ip, fp, r5
   38a84:	lsl	ip, r5, #30
   38a88:	orr	r7, ip, r4, lsr #2
   38a8c:	lsl	ip, r4, #30
   38a90:	orr	r6, ip, r5, lsr #2
   38a94:	adds	r6, r6, r2
   38a98:	adc	r7, r7, r3
   38a9c:	umull	r4, r5, r2, r1
   38aa0:	mla	r5, r1, r3, r5
   38aa4:	lsl	r1, r5, #30
   38aa8:	orr	r9, r1, r4, lsr #2
   38aac:	lsl	r1, r4, #30
   38ab0:	orr	r8, r1, r5, lsr #2
   38ab4:	eor	r6, r6, sl
   38ab8:	eor	r7, r7, fp
   38abc:	adds	r6, r6, r8
   38ac0:	adc	r7, r7, r9
   38ac4:	eor	r6, r6, r2
   38ac8:	eor	r7, r7, r3
   38acc:	add	r3, sp, #280	; 0x118
   38ad0:	ldrd	r2, [r3]
   38ad4:	adds	r2, r2, r6
   38ad8:	adc	r3, r3, r7
   38adc:	mov	r6, r2
   38ae0:	mov	r7, r3
   38ae4:	add	r3, sp, #280	; 0x118
   38ae8:	strd	r6, [r3]
   38aec:	ldr	r3, [sp, #268]	; 0x10c
   38af0:	sub	r3, r3, r0
   38af4:	cmp	r3, #7
   38af8:	ble	38bcc <cmetrohash64_2@@Base+0x960>
   38afc:	ldrb	r4, [r0, #1]
   38b00:	mov	r3, #0
   38b04:	lsl	r2, r4, #8
   38b08:	ldrb	r6, [r0, #2]
   38b0c:	mov	r5, #0
   38b10:	lsl	r4, r6, #16
   38b14:	orr	r2, r2, r4
   38b18:	orr	r3, r3, r5
   38b1c:	ldrb	r4, [r0]
   38b20:	mov	r5, #0
   38b24:	orr	r2, r2, r4
   38b28:	orr	r3, r3, r5
   38b2c:	ldrb	r6, [r0, #3]
   38b30:	mov	r5, #0
   38b34:	lsl	r4, r6, #24
   38b38:	orr	r2, r2, r4
   38b3c:	orr	r3, r3, r5
   38b40:	mov	r4, #0
   38b44:	ldrb	r5, [r0, #4]
   38b48:	orr	r2, r2, r4
   38b4c:	orr	r3, r3, r5
   38b50:	ldrb	r8, [r0, #5]
   38b54:	lsl	r7, r8, #8
   38b58:	orr	r2, r2, r4
   38b5c:	orr	r3, r3, r7
   38b60:	ldrb	r8, [r0, #6]
   38b64:	lsl	r7, r8, #16
   38b68:	orr	r2, r2, r4
   38b6c:	orr	r3, r3, r7
   38b70:	ldrb	r8, [r0, #7]
   38b74:	lsl	r7, r8, #24
   38b78:	orr	r2, r2, r4
   38b7c:	orr	r3, r3, r7
   38b80:	ldr	r1, [pc, #-1396]	; 38614 <cmetrohash64_2@@Base+0x3a8>
   38b84:	umull	r4, r5, r2, r1
   38b88:	mla	r5, r1, r3, r5
   38b8c:	add	r3, sp, #280	; 0x118
   38b90:	ldrd	r2, [r3]
   38b94:	adds	r2, r2, r4
   38b98:	adc	r3, r3, r5
   38b9c:	add	r0, r0, #8
   38ba0:	lsl	r1, r3, #28
   38ba4:	orr	r1, r1, r2, lsr #4
   38ba8:	lsl	r4, r2, #28
   38bac:	orr	r4, r4, r3, lsr #4
   38bb0:	ldr	ip, [pc, #-1440]	; 38618 <cmetrohash64_2@@Base+0x3ac>
   38bb4:	umull	r4, r5, r4, ip
   38bb8:	mla	r5, ip, r1, r5
   38bbc:	eor	r4, r4, r2
   38bc0:	eor	r5, r5, r3
   38bc4:	add	r3, sp, #280	; 0x118
   38bc8:	strd	r4, [r3]
   38bcc:	ldr	r3, [sp, #268]	; 0x10c
   38bd0:	sub	r3, r3, r0
   38bd4:	cmp	r3, #3
   38bd8:	ble	38c3c <cmetrohash64_2@@Base+0x9d0>
   38bdc:	ldrb	r3, [r0, #1]
   38be0:	ldrb	r1, [r0, #2]
   38be4:	lsl	r1, r1, #16
   38be8:	orr	r1, r1, r3, lsl #8
   38bec:	ldrb	r3, [r0]
   38bf0:	orr	r1, r1, r3
   38bf4:	ldrb	r3, [r0, #3]
   38bf8:	orr	r1, r1, r3, lsl #24
   38bfc:	add	r3, sp, #280	; 0x118
   38c00:	ldrd	r2, [r3]
   38c04:	ldr	ip, [pc, #-1528]	; 38614 <cmetrohash64_2@@Base+0x3a8>
   38c08:	umlal	r2, r3, ip, r1
   38c0c:	add	r0, r0, #4
   38c10:	lsr	r4, r2, #15
   38c14:	orr	r4, r4, r3, lsl #17
   38c18:	lsr	r1, r3, #15
   38c1c:	orr	r1, r1, r2, lsl #17
   38c20:	ldr	ip, [pc, #-1552]	; 38618 <cmetrohash64_2@@Base+0x3ac>
   38c24:	umull	r4, r5, r4, ip
   38c28:	mla	r5, ip, r1, r5
   38c2c:	eor	r4, r4, r2
   38c30:	eor	r5, r5, r3
   38c34:	add	r3, sp, #280	; 0x118
   38c38:	strd	r4, [r3]
   38c3c:	ldr	r3, [sp, #268]	; 0x10c
   38c40:	sub	r3, r3, r0
   38c44:	cmp	r3, #1
   38c48:	ble	38ca4 <cmetrohash64_2@@Base+0xa38>
   38c4c:	ldrb	r4, [r0, #1]
   38c50:	ldrb	r2, [r0], #2
   38c54:	orr	r2, r2, r4, lsl #8
   38c58:	asr	r7, r2, #31
   38c5c:	ldr	r3, [pc, #-1616]	; 38614 <cmetrohash64_2@@Base+0x3a8>
   38c60:	umull	r4, r5, r2, r3
   38c64:	mla	r5, r3, r7, r5
   38c68:	add	r3, sp, #280	; 0x118
   38c6c:	ldrd	r2, [r3]
   38c70:	adds	r2, r2, r4
   38c74:	adc	r3, r3, r5
   38c78:	lsr	r4, r2, #15
   38c7c:	orr	r4, r4, r3, lsl #17
   38c80:	lsr	r1, r3, #15
   38c84:	orr	r1, r1, r2, lsl #17
   38c88:	ldr	ip, [pc, #-1656]	; 38618 <cmetrohash64_2@@Base+0x3ac>
   38c8c:	umull	r4, r5, r4, ip
   38c90:	mla	r5, ip, r1, r5
   38c94:	eor	r2, r2, r4
   38c98:	eor	r3, r3, r5
   38c9c:	add	r1, sp, #280	; 0x118
   38ca0:	strd	r2, [r1]
   38ca4:	ldr	r3, [sp, #268]	; 0x10c
   38ca8:	sub	r3, r3, r0
   38cac:	cmp	r3, #0
   38cb0:	ble	38cfc <cmetrohash64_2@@Base+0xa90>
   38cb4:	ldrb	r2, [r0]
   38cb8:	ldr	r0, [pc, #-1708]	; 38614 <cmetrohash64_2@@Base+0x3a8>
   38cbc:	umull	r2, r3, r2, r0
   38cc0:	add	r1, sp, #280	; 0x118
   38cc4:	ldrd	r0, [r1]
   38cc8:	adds	r0, r0, r2
   38ccc:	adc	r1, r1, r3
   38cd0:	lsr	r2, r0, #23
   38cd4:	orr	r2, r2, r1, lsl #9
   38cd8:	lsr	ip, r1, #23
   38cdc:	orr	ip, ip, r0, lsl #9
   38ce0:	ldr	lr, [pc, #-1744]	; 38618 <cmetrohash64_2@@Base+0x3ac>
   38ce4:	umull	r2, r3, r2, lr
   38ce8:	mla	r3, lr, ip, r3
   38cec:	eor	r2, r2, r0
   38cf0:	eor	r3, r3, r1
   38cf4:	add	r1, sp, #280	; 0x118
   38cf8:	strd	r2, [r1]
   38cfc:	add	r3, sp, #280	; 0x118
   38d00:	ldrd	r0, [r3]
   38d04:	lsr	ip, r0, #28
   38d08:	orr	r2, ip, r1, lsl #4
   38d0c:	lsr	ip, r1, #28
   38d10:	orr	r3, ip, r0, lsl #4
   38d14:	eor	r0, r0, r2
   38d18:	eor	r1, r1, r3
   38d1c:	ldr	ip, [pc, #-1800]	; 3861c <cmetrohash64_2@@Base+0x3b0>
   38d20:	umull	r2, r3, r0, ip
   38d24:	mla	r3, ip, r1, r3
   38d28:	lsr	ip, r2, #29
   38d2c:	orr	r0, ip, r3, lsl #3
   38d30:	lsr	ip, r3, #29
   38d34:	orr	r1, ip, r2, lsl #3
   38d38:	eor	r0, r0, r2
   38d3c:	eor	r1, r1, r3
   38d40:	add	r3, sp, #288	; 0x120
   38d44:	strd	r0, [r3, #-8]!
   38d48:	ldm	r3!, {r0, r1}
   38d4c:	ldr	r3, [sp, #332]	; 0x14c
   38d50:	str	r0, [r3]
   38d54:	str	r1, [r3, #4]
   38d58:	add	sp, sp, #292	; 0x124
   38d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38d60:	push	{r4, r5, r6, r7, r8, lr}
   38d64:	ldr	r5, [r0]
   38d68:	ldr	r3, [r0, #12]
   38d6c:	cmp	r3, #0
   38d70:	popeq	{r4, r5, r6, r7, r8, pc}
   38d74:	mov	r8, r2
   38d78:	mov	r7, r1
   38d7c:	mov	r6, r0
   38d80:	sub	r5, r5, #4
   38d84:	mov	r4, #0
   38d88:	b	38d9c <cmetrohash64_2@@Base+0xb30>
   38d8c:	add	r4, r4, #1
   38d90:	ldr	r3, [r6, #12]
   38d94:	cmp	r3, r4
   38d98:	bls	38db8 <cmetrohash64_2@@Base+0xb4c>
   38d9c:	ldr	r1, [r5, #4]!
   38da0:	cmp	r1, #0
   38da4:	cmpne	r1, #2
   38da8:	beq	38d8c <cmetrohash64_2@@Base+0xb20>
   38dac:	mov	r0, r8
   38db0:	blx	r7
   38db4:	b	38d8c <cmetrohash64_2@@Base+0xb20>
   38db8:	pop	{r4, r5, r6, r7, r8, pc}
   38dbc:	push	{r4, lr}
   38dc0:	mov	r4, r0
   38dc4:	ldr	r0, [r0]
   38dc8:	cmp	r0, #0
   38dcc:	beq	38dd4 <cmetrohash64_2@@Base+0xb68>
   38dd0:	bl	13ed0 <free@plt>
   38dd4:	mov	r3, #0
   38dd8:	str	r3, [r4]
   38ddc:	str	r3, [r4, #4]
   38de0:	str	r3, [r4, #8]
   38de4:	str	r3, [r4, #12]
   38de8:	pop	{r4, pc}
   38dec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38df0:	sub	sp, sp, #28
   38df4:	str	r1, [sp, #8]
   38df8:	cmp	r3, #0
   38dfc:	str	r3, [sp, #12]
   38e00:	beq	38eb0 <cmetrohash64_2@@Base+0xc44>
   38e04:	mov	fp, r0
   38e08:	mov	r8, r2
   38e0c:	ldr	r3, [sp, #12]
   38e10:	cmp	r3, #2
   38e14:	beq	38ec4 <cmetrohash64_2@@Base+0xc58>
   38e18:	ldr	r3, [sp, #12]
   38e1c:	cmp	r3, #1
   38e20:	beq	38ed8 <cmetrohash64_2@@Base+0xc6c>
   38e24:	ldr	r1, [r0, #8]
   38e28:	ldr	r2, [r0, #12]
   38e2c:	mov	r3, #179	; 0xb3
   38e30:	mul	r3, r3, r2
   38e34:	cmp	r1, r3, lsr #8
   38e38:	bcc	38e4c <cmetrohash64_2@@Base+0xbe0>
   38e3c:	lsl	r1, r1, #1
   38e40:	bl	39008 <cmetrohash64_2@@Base+0xd9c>
   38e44:	cmp	r0, #0
   38e48:	bne	38eec <cmetrohash64_2@@Base+0xc80>
   38e4c:	ldr	r6, [fp]
   38e50:	ldr	r7, [fp, #12]
   38e54:	sub	r7, r7, #1
   38e58:	add	r3, sp, #16
   38e5c:	str	r3, [sp, #4]
   38e60:	ldr	r3, [pc, #380]	; 38fe4 <cmetrohash64_2@@Base+0xd78>
   38e64:	str	r3, [sp]
   38e68:	mov	r2, r8
   38e6c:	mov	r3, #0
   38e70:	ldr	r0, [sp, #8]
   38e74:	bl	37760 <cmetrohash64_1@@Base>
   38e78:	ldr	r5, [sp, #16]
   38e7c:	and	r3, r7, r5
   38e80:	ldr	r2, [sp, #64]	; 0x40
   38e84:	sub	r2, r2, #2
   38e88:	cmp	r2, #1
   38e8c:	bls	38f08 <cmetrohash64_2@@Base+0xc9c>
   38e90:	add	r9, r6, r3, lsl #2
   38e94:	ldr	r4, [r6, r3, lsl #2]
   38e98:	cmp	r4, #0
   38e9c:	moveq	sl, r9
   38ea0:	beq	38fc0 <cmetrohash64_2@@Base+0xd54>
   38ea4:	add	r5, r5, #1
   38ea8:	mov	sl, #0
   38eac:	b	38f78 <cmetrohash64_2@@Base+0xd0c>
   38eb0:	ldr	r3, [pc, #304]	; 38fe8 <cmetrohash64_2@@Base+0xd7c>
   38eb4:	mov	r2, #114	; 0x72
   38eb8:	ldr	r1, [pc, #300]	; 38fec <cmetrohash64_2@@Base+0xd80>
   38ebc:	ldr	r0, [pc, #300]	; 38ff0 <cmetrohash64_2@@Base+0xd84>
   38ec0:	bl	14038 <__assert_fail@plt>
   38ec4:	ldr	r3, [pc, #284]	; 38fe8 <cmetrohash64_2@@Base+0xd7c>
   38ec8:	mov	r2, #115	; 0x73
   38ecc:	ldr	r1, [pc, #280]	; 38fec <cmetrohash64_2@@Base+0xd80>
   38ed0:	ldr	r0, [pc, #284]	; 38ff4 <cmetrohash64_2@@Base+0xd88>
   38ed4:	bl	14038 <__assert_fail@plt>
   38ed8:	ldr	r3, [pc, #264]	; 38fe8 <cmetrohash64_2@@Base+0xd7c>
   38edc:	mov	r2, #116	; 0x74
   38ee0:	ldr	r1, [pc, #260]	; 38fec <cmetrohash64_2@@Base+0xd80>
   38ee4:	ldr	r0, [pc, #268]	; 38ff8 <cmetrohash64_2@@Base+0xd8c>
   38ee8:	bl	14038 <__assert_fail@plt>
   38eec:	ldr	r2, [pc, #264]	; 38ffc <cmetrohash64_2@@Base+0xd90>
   38ef0:	ldr	r1, [pc, #264]	; 39000 <cmetrohash64_2@@Base+0xd94>
   38ef4:	ldr	r3, [pc, #264]	; 39004 <cmetrohash64_2@@Base+0xd98>
   38ef8:	ldr	r0, [r3]
   38efc:	bl	13f84 <fprintf@plt>
   38f00:	mov	r0, #1
   38f04:	bl	13f6c <exit@plt>
   38f08:	ldr	r2, [fp, #8]
   38f0c:	add	r2, r2, #1
   38f10:	str	r2, [fp, #8]
   38f14:	add	r2, r6, r3, lsl #2
   38f18:	ldr	r3, [r6, r3, lsl #2]
   38f1c:	cmp	r3, #0
   38f20:	cmpne	r3, #2
   38f24:	beq	38f48 <cmetrohash64_2@@Base+0xcdc>
   38f28:	add	r5, r5, #1
   38f2c:	and	r3, r7, r5
   38f30:	add	r2, r6, r3, lsl #2
   38f34:	ldr	r3, [r6, r3, lsl #2]
   38f38:	add	r5, r5, #1
   38f3c:	cmp	r3, #0
   38f40:	cmpne	r3, #2
   38f44:	bne	38f2c <cmetrohash64_2@@Base+0xcc0>
   38f48:	ldr	r3, [sp, #12]
   38f4c:	str	r3, [r2]
   38f50:	mov	r4, #0
   38f54:	b	38fd8 <cmetrohash64_2@@Base+0xd6c>
   38f58:	cmp	sl, #0
   38f5c:	moveq	sl, r9
   38f60:	and	r3, r7, r5
   38f64:	add	r9, r6, r3, lsl #2
   38f68:	ldr	r4, [r6, r3, lsl #2]
   38f6c:	add	r5, r5, #1
   38f70:	cmp	r4, #0
   38f74:	beq	38fb8 <cmetrohash64_2@@Base+0xd4c>
   38f78:	cmp	r4, #2
   38f7c:	beq	38f58 <cmetrohash64_2@@Base+0xcec>
   38f80:	ldr	r3, [r4, #12]
   38f84:	cmp	r8, r3
   38f88:	bne	38f60 <cmetrohash64_2@@Base+0xcf4>
   38f8c:	mov	r2, r8
   38f90:	ldr	r1, [r4, #8]
   38f94:	ldr	r0, [sp, #8]
   38f98:	bl	13ef4 <memcmp@plt>
   38f9c:	cmp	r0, #0
   38fa0:	bne	38f60 <cmetrohash64_2@@Base+0xcf4>
   38fa4:	ldr	r3, [sp, #64]	; 0x40
   38fa8:	cmp	r3, #0
   38fac:	ldreq	r3, [sp, #12]
   38fb0:	streq	r3, [r9]
   38fb4:	b	38fd8 <cmetrohash64_2@@Base+0xd6c>
   38fb8:	cmp	sl, #0
   38fbc:	moveq	sl, r9
   38fc0:	ldr	r3, [fp, #8]
   38fc4:	add	r3, r3, #1
   38fc8:	str	r3, [fp, #8]
   38fcc:	ldr	r3, [sp, #12]
   38fd0:	str	r3, [sl]
   38fd4:	mov	r4, #0
   38fd8:	mov	r0, r4
   38fdc:	add	sp, sp, #28
   38fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38fe4:	svccs	0x00693b52
   38fe8:			; <UNDEFINED> instruction: 0x000558bc
   38fec:	andeq	r2, r5, r8, ror #5
   38ff0:	andeq	r2, r5, r8, lsr r3
   38ff4:	andeq	r2, r5, r0, asr r3
   38ff8:	andeq	r2, r5, r8, ror #6
   38ffc:	andeq	r2, r5, r0, lsl #7
   39000:			; <UNDEFINED> instruction: 0x000523b4
   39004:	andeq	r6, r6, r8, lsr #1
   39008:	push	{r4, r5, r6, r7, lr}
   3900c:	sub	sp, sp, #28
   39010:	mov	r6, r0
   39014:	ldr	r5, [r0]
   39018:	ldr	r3, [r0, #8]
   3901c:	cmp	r1, r3
   39020:	movcc	r1, r3
   39024:	cmp	r1, #2
   39028:	bls	39088 <cmetrohash64_2@@Base+0xe1c>
   3902c:	mov	r4, #4
   39030:	mov	r2, #179	; 0xb3
   39034:	lsl	r4, r4, #1
   39038:	mul	r3, r2, r4
   3903c:	cmp	r1, r3, lsr #8
   39040:	bhi	39034 <cmetrohash64_2@@Base+0xdc8>
   39044:	mov	r1, #4
   39048:	mov	r0, r4
   3904c:	bl	13ea0 <calloc@plt>
   39050:	str	r0, [sp, #8]
   39054:	cmp	r0, #0
   39058:	beq	390f4 <cmetrohash64_2@@Base+0xe88>
   3905c:	mov	r3, #0
   39060:	str	r3, [sp, #12]
   39064:	str	r4, [sp, #20]
   39068:	str	r3, [sp, #16]
   3906c:	ldr	r3, [r6, #12]
   39070:	cmp	r3, #0
   39074:	beq	390c8 <cmetrohash64_2@@Base+0xe5c>
   39078:	sub	r5, r5, #4
   3907c:	mov	r4, #0
   39080:	mov	r7, #3
   39084:	b	390a0 <cmetrohash64_2@@Base+0xe34>
   39088:	mov	r4, #4
   3908c:	b	39044 <cmetrohash64_2@@Base+0xdd8>
   39090:	add	r4, r4, #1
   39094:	ldr	r3, [r6, #12]
   39098:	cmp	r3, r4
   3909c:	bls	390c8 <cmetrohash64_2@@Base+0xe5c>
   390a0:	ldr	r3, [r5, #4]!
   390a4:	cmp	r3, #0
   390a8:	cmpne	r3, #2
   390ac:	beq	39090 <cmetrohash64_2@@Base+0xe24>
   390b0:	ldr	r2, [r3, #12]
   390b4:	ldr	r1, [r3, #8]
   390b8:	str	r7, [sp]
   390bc:	add	r0, sp, #8
   390c0:	bl	38dec <cmetrohash64_2@@Base+0xb80>
   390c4:	b	39090 <cmetrohash64_2@@Base+0xe24>
   390c8:	mov	r0, r6
   390cc:	bl	38dbc <cmetrohash64_2@@Base+0xb50>
   390d0:	add	ip, sp, #8
   390d4:	ldm	ip!, {r0, r1, r2, r3}
   390d8:	str	r0, [r6]
   390dc:	str	r1, [r6, #4]
   390e0:	str	r2, [r6, #8]
   390e4:	str	r3, [r6, #12]
   390e8:	mov	r0, #0
   390ec:	add	sp, sp, #28
   390f0:	pop	{r4, r5, r6, r7, pc}
   390f4:	mvn	r0, #0
   390f8:	b	390ec <cmetrohash64_2@@Base+0xe80>
   390fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   39100:	sub	sp, sp, #20
   39104:	ldr	r8, [r0]
   39108:	cmp	r8, #0
   3910c:	beq	391a4 <cmetrohash64_2@@Base+0xf38>
   39110:	mov	r6, r2
   39114:	mov	r9, r1
   39118:	ldr	r7, [r0, #12]
   3911c:	sub	r7, r7, #1
   39120:	add	r3, sp, #8
   39124:	str	r3, [sp, #4]
   39128:	ldr	r3, [pc, #124]	; 391ac <cmetrohash64_2@@Base+0xf40>
   3912c:	str	r3, [sp]
   39130:	mov	r3, #0
   39134:	mov	r0, r1
   39138:	bl	37760 <cmetrohash64_1@@Base>
   3913c:	ldr	r5, [sp, #8]
   39140:	and	r3, r7, r5
   39144:	ldr	r4, [r8, r3, lsl #2]
   39148:	cmp	r4, #0
   3914c:	beq	39198 <cmetrohash64_2@@Base+0xf2c>
   39150:	add	r5, r5, #1
   39154:	b	3916c <cmetrohash64_2@@Base+0xf00>
   39158:	and	r3, r7, r5
   3915c:	ldr	r4, [r8, r3, lsl #2]
   39160:	add	r5, r5, #1
   39164:	cmp	r4, #0
   39168:	beq	39198 <cmetrohash64_2@@Base+0xf2c>
   3916c:	cmp	r4, #2
   39170:	beq	39158 <cmetrohash64_2@@Base+0xeec>
   39174:	ldr	r3, [r4, #12]
   39178:	cmp	r6, r3
   3917c:	bne	39158 <cmetrohash64_2@@Base+0xeec>
   39180:	mov	r2, r6
   39184:	ldr	r1, [r4, #8]
   39188:	mov	r0, r9
   3918c:	bl	13ef4 <memcmp@plt>
   39190:	cmp	r0, #0
   39194:	bne	39158 <cmetrohash64_2@@Base+0xeec>
   39198:	mov	r0, r4
   3919c:	add	sp, sp, #20
   391a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   391a4:	mov	r4, #0
   391a8:	b	39198 <cmetrohash64_2@@Base+0xf2c>
   391ac:	svccs	0x00693b52
   391b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   391b4:	sub	sp, sp, #20
   391b8:	ldr	r6, [r0]
   391bc:	cmp	r6, #0
   391c0:	beq	39278 <cmetrohash64_2@@Base+0x100c>
   391c4:	mov	r7, r2
   391c8:	mov	sl, r1
   391cc:	mov	fp, r0
   391d0:	ldr	r8, [r0, #12]
   391d4:	sub	r8, r8, #1
   391d8:	add	r3, sp, #8
   391dc:	str	r3, [sp, #4]
   391e0:	ldr	r3, [pc, #152]	; 39280 <cmetrohash64_2@@Base+0x1014>
   391e4:	str	r3, [sp]
   391e8:	mov	r3, #0
   391ec:	mov	r0, r1
   391f0:	bl	37760 <cmetrohash64_1@@Base>
   391f4:	ldr	r5, [sp, #8]
   391f8:	and	r3, r8, r5
   391fc:	add	r9, r6, r3, lsl #2
   39200:	ldr	r4, [r6, r3, lsl #2]
   39204:	cmp	r4, #0
   39208:	beq	3926c <cmetrohash64_2@@Base+0x1000>
   3920c:	add	r5, r5, #1
   39210:	b	3922c <cmetrohash64_2@@Base+0xfc0>
   39214:	and	r3, r8, r5
   39218:	add	r9, r6, r3, lsl #2
   3921c:	ldr	r4, [r6, r3, lsl #2]
   39220:	add	r5, r5, #1
   39224:	cmp	r4, #0
   39228:	beq	3926c <cmetrohash64_2@@Base+0x1000>
   3922c:	cmp	r4, #2
   39230:	beq	39214 <cmetrohash64_2@@Base+0xfa8>
   39234:	ldr	r3, [r4, #12]
   39238:	cmp	r7, r3
   3923c:	bne	39214 <cmetrohash64_2@@Base+0xfa8>
   39240:	mov	r2, r7
   39244:	ldr	r1, [r4, #8]
   39248:	mov	r0, sl
   3924c:	bl	13ef4 <memcmp@plt>
   39250:	cmp	r0, #0
   39254:	bne	39214 <cmetrohash64_2@@Base+0xfa8>
   39258:	mov	r3, #2
   3925c:	str	r3, [r9]
   39260:	ldr	r3, [fp, #8]
   39264:	sub	r3, r3, #1
   39268:	str	r3, [fp, #8]
   3926c:	mov	r0, r4
   39270:	add	sp, sp, #20
   39274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39278:	mov	r4, #0
   3927c:	b	3926c <cmetrohash64_2@@Base+0x1000>
   39280:	svccs	0x00693b52

00039284 <fb_name_table_clear@@Base>:
   39284:	push	{r4, lr}
   39288:	bl	38dbc <cmetrohash64_2@@Base+0xb50>
   3928c:	pop	{r4, pc}

00039290 <fb_name_table_destroy@@Base>:
   39290:	push	{r4, lr}
   39294:	mov	r4, r0
   39298:	cmp	r1, #0
   3929c:	beq	392a4 <fb_name_table_destroy@@Base+0x14>
   392a0:	bl	38d60 <cmetrohash64_2@@Base+0xaf4>
   392a4:	mov	r0, r4
   392a8:	bl	38dbc <cmetrohash64_2@@Base+0xb50>
   392ac:	pop	{r4, pc}

000392b0 <fb_name_table_init@@Base>:
   392b0:	push	{r4, r5, r6, lr}
   392b4:	mov	r5, r0
   392b8:	cmp	r1, #2
   392bc:	bls	39304 <fb_name_table_init@@Base+0x54>
   392c0:	mov	r4, #4
   392c4:	mov	r2, #179	; 0xb3
   392c8:	lsl	r4, r4, #1
   392cc:	mul	r3, r2, r4
   392d0:	cmp	r1, r3, lsr #8
   392d4:	bhi	392c8 <fb_name_table_init@@Base+0x18>
   392d8:	mov	r1, #4
   392dc:	mov	r0, r4
   392e0:	bl	13ea0 <calloc@plt>
   392e4:	str	r0, [r5]
   392e8:	cmp	r0, #0
   392ec:	movne	r0, #0
   392f0:	strne	r0, [r5, #4]
   392f4:	strne	r4, [r5, #12]
   392f8:	strne	r0, [r5, #8]
   392fc:	mvneq	r0, #0
   39300:	pop	{r4, r5, r6, pc}
   39304:	mov	r4, #4
   39308:	b	392d8 <fb_name_table_init@@Base+0x28>

0003930c <fb_name_table_resize@@Base>:
   3930c:	push	{r4, lr}
   39310:	bl	39008 <cmetrohash64_2@@Base+0xd9c>
   39314:	pop	{r4, pc}

00039318 <fb_name_table_insert@@Base>:
   39318:	push	{lr}		; (str lr, [sp, #-4]!)
   3931c:	sub	sp, sp, #12
   39320:	ldr	ip, [sp, #16]
   39324:	str	ip, [sp]
   39328:	bl	38dec <cmetrohash64_2@@Base+0xb80>
   3932c:	add	sp, sp, #12
   39330:	pop	{pc}		; (ldr pc, [sp], #4)

00039334 <fb_name_table_insert_item@@Base>:
   39334:	push	{lr}		; (str lr, [sp, #-4]!)
   39338:	sub	sp, sp, #12
   3933c:	mov	r3, r1
   39340:	ldr	ip, [r1, #12]
   39344:	ldr	r1, [r1, #8]
   39348:	str	r2, [sp]
   3934c:	mov	r2, ip
   39350:	bl	38dec <cmetrohash64_2@@Base+0xb80>
   39354:	add	sp, sp, #12
   39358:	pop	{pc}		; (ldr pc, [sp], #4)

0003935c <fb_name_table_find@@Base>:
   3935c:	push	{r4, lr}
   39360:	bl	390fc <cmetrohash64_2@@Base+0xe90>
   39364:	pop	{r4, pc}

00039368 <fb_name_table_find_item@@Base>:
   39368:	push	{r4, lr}
   3936c:	ldr	r2, [r1, #12]
   39370:	ldr	r1, [r1, #8]
   39374:	bl	390fc <cmetrohash64_2@@Base+0xe90>
   39378:	pop	{r4, pc}

0003937c <fb_name_table_remove@@Base>:
   3937c:	push	{r4, lr}
   39380:	bl	391b0 <cmetrohash64_2@@Base+0xf44>
   39384:	pop	{r4, pc}

00039388 <fb_name_table_remove_item@@Base>:
   39388:	push	{r4, lr}
   3938c:	ldr	r2, [r1, #12]
   39390:	ldr	r1, [r1, #8]
   39394:	bl	391b0 <cmetrohash64_2@@Base+0xf44>
   39398:	pop	{r4, pc}

0003939c <fb_name_table_visit@@Base>:
   3939c:	push	{r4, lr}
   393a0:	bl	38d60 <cmetrohash64_2@@Base+0xaf4>
   393a4:	pop	{r4, pc}
   393a8:	ldrh	r3, [r0, #8]
   393ac:	cmp	r3, #5
   393b0:	beq	393e4 <fb_name_table_visit@@Base+0x48>
   393b4:	cmp	r3, #6
   393b8:	beq	393fc <fb_name_table_visit@@Base+0x60>
   393bc:	cmp	r3, #4
   393c0:	beq	393cc <fb_name_table_visit@@Base+0x30>
   393c4:	mov	r0, #0
   393c8:	bx	lr
   393cc:	ldr	r2, [r0]
   393d0:	ldr	r3, [pc, #60]	; 39414 <fb_name_table_visit@@Base+0x78>
   393d4:	eor	r3, r3, r2
   393d8:	ldr	r0, [pc, #56]	; 39418 <fb_name_table_visit@@Base+0x7c>
   393dc:	mul	r0, r0, r3
   393e0:	bx	lr
   393e4:	ldr	r2, [r0]
   393e8:	ldr	r3, [pc, #44]	; 3941c <fb_name_table_visit@@Base+0x80>
   393ec:	eor	r3, r3, r2
   393f0:	ldr	r0, [pc, #32]	; 39418 <fb_name_table_visit@@Base+0x7c>
   393f4:	mul	r0, r0, r3
   393f8:	bx	lr
   393fc:	ldrb	r2, [r0]
   39400:	ldr	r3, [pc, #24]	; 39420 <fb_name_table_visit@@Base+0x84>
   39404:	eor	r3, r3, r2
   39408:	ldr	r0, [pc, #8]	; 39418 <fb_name_table_visit@@Base+0x7c>
   3940c:	mul	r0, r0, r3
   39410:	bx	lr
   39414:	svccs	0x00693b56
   39418:			; <UNDEFINED> instruction: 0x9e3779b1
   3941c:	svccs	0x00693b57
   39420:	svccs	0x00693b54
   39424:	push	{r4, r5, r6, r7, r8, lr}
   39428:	ldr	r4, [r0]
   3942c:	cmp	r4, #0
   39430:	beq	39508 <fb_name_table_visit@@Base+0x16c>
   39434:	mov	r5, r1
   39438:	ldr	r8, [r0, #12]
   3943c:	sub	r8, r8, #1
   39440:	mov	r1, r2
   39444:	mov	r0, r5
   39448:	bl	393a8 <fb_name_table_visit@@Base+0xc>
   3944c:	and	r3, r8, r0
   39450:	ldr	r1, [r4, r3, lsl #2]
   39454:	cmp	r1, #0
   39458:	beq	3950c <fb_name_table_visit@@Base+0x170>
   3945c:	add	r0, r0, #1
   39460:	mov	ip, #0
   39464:	b	3949c <fb_name_table_visit@@Base+0x100>
   39468:	ldrd	r6, [r5]
   3946c:	ldrd	r2, [r1]
   39470:	cmp	r7, r3
   39474:	cmpeq	r6, r2
   39478:	moveq	r3, #1
   3947c:	movne	r3, #0
   39480:	cmp	r3, #0
   39484:	bne	3950c <fb_name_table_visit@@Base+0x170>
   39488:	and	r3, r8, r0
   3948c:	ldr	r1, [r4, r3, lsl #2]
   39490:	add	r0, r0, #1
   39494:	cmp	r1, #0
   39498:	beq	3950c <fb_name_table_visit@@Base+0x170>
   3949c:	cmp	r1, #2
   394a0:	beq	39488 <fb_name_table_visit@@Base+0xec>
   394a4:	ldrh	r3, [r1, #8]
   394a8:	ldrh	r2, [r5, #8]
   394ac:	cmp	r2, r3
   394b0:	bne	39488 <fb_name_table_visit@@Base+0xec>
   394b4:	cmp	r3, #5
   394b8:	beq	394d4 <fb_name_table_visit@@Base+0x138>
   394bc:	cmp	r3, #6
   394c0:	beq	394f0 <fb_name_table_visit@@Base+0x154>
   394c4:	cmp	r3, #4
   394c8:	movne	r3, ip
   394cc:	bne	39480 <fb_name_table_visit@@Base+0xe4>
   394d0:	b	39468 <fb_name_table_visit@@Base+0xcc>
   394d4:	ldrd	r6, [r5]
   394d8:	ldrd	r2, [r1]
   394dc:	cmp	r7, r3
   394e0:	cmpeq	r6, r2
   394e4:	moveq	r3, #1
   394e8:	movne	r3, #0
   394ec:	b	39480 <fb_name_table_visit@@Base+0xe4>
   394f0:	ldrb	r3, [r5]
   394f4:	ldrb	r2, [r1]
   394f8:	cmp	r3, r2
   394fc:	movne	r3, #0
   39500:	moveq	r3, #1
   39504:	b	39480 <fb_name_table_visit@@Base+0xe4>
   39508:	mov	r1, #0
   3950c:	mov	r0, r1
   39510:	pop	{r4, r5, r6, r7, r8, pc}
   39514:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   39518:	ldr	r4, [r0]
   3951c:	cmp	r4, #0
   39520:	beq	39620 <fb_name_table_visit@@Base+0x284>
   39524:	mov	r5, r1
   39528:	mov	r9, r0
   3952c:	ldr	r8, [r0, #12]
   39530:	sub	r8, r8, #1
   39534:	mov	r1, r2
   39538:	mov	r0, r5
   3953c:	bl	393a8 <fb_name_table_visit@@Base+0xc>
   39540:	and	r3, r8, r0
   39544:	add	ip, r4, r3, lsl #2
   39548:	ldr	r1, [r4, r3, lsl #2]
   3954c:	cmp	r1, #0
   39550:	beq	39618 <fb_name_table_visit@@Base+0x27c>
   39554:	add	r0, r0, #1
   39558:	mov	lr, #0
   3955c:	b	39598 <fb_name_table_visit@@Base+0x1fc>
   39560:	ldrd	r6, [r5]
   39564:	ldrd	r2, [r1]
   39568:	cmp	r7, r3
   3956c:	cmpeq	r6, r2
   39570:	moveq	r3, #1
   39574:	movne	r3, #0
   39578:	cmp	r3, #0
   3957c:	bne	39604 <fb_name_table_visit@@Base+0x268>
   39580:	and	r3, r8, r0
   39584:	add	ip, r4, r3, lsl #2
   39588:	ldr	r1, [r4, r3, lsl #2]
   3958c:	add	r0, r0, #1
   39590:	cmp	r1, #0
   39594:	beq	39618 <fb_name_table_visit@@Base+0x27c>
   39598:	cmp	r1, #2
   3959c:	beq	39580 <fb_name_table_visit@@Base+0x1e4>
   395a0:	ldrh	r3, [r1, #8]
   395a4:	ldrh	r2, [r5, #8]
   395a8:	cmp	r2, r3
   395ac:	bne	39580 <fb_name_table_visit@@Base+0x1e4>
   395b0:	cmp	r3, #5
   395b4:	beq	395d0 <fb_name_table_visit@@Base+0x234>
   395b8:	cmp	r3, #6
   395bc:	beq	395ec <fb_name_table_visit@@Base+0x250>
   395c0:	cmp	r3, #4
   395c4:	movne	r3, lr
   395c8:	bne	39578 <fb_name_table_visit@@Base+0x1dc>
   395cc:	b	39560 <fb_name_table_visit@@Base+0x1c4>
   395d0:	ldrd	r6, [r5]
   395d4:	ldrd	r2, [r1]
   395d8:	cmp	r7, r3
   395dc:	cmpeq	r6, r2
   395e0:	moveq	r3, #1
   395e4:	movne	r3, #0
   395e8:	b	39578 <fb_name_table_visit@@Base+0x1dc>
   395ec:	ldrb	r3, [r5]
   395f0:	ldrb	r2, [r1]
   395f4:	cmp	r3, r2
   395f8:	movne	r3, #0
   395fc:	moveq	r3, #1
   39600:	b	39578 <fb_name_table_visit@@Base+0x1dc>
   39604:	mov	r3, #2
   39608:	str	r3, [ip]
   3960c:	ldr	r3, [r9, #8]
   39610:	sub	r3, r3, #1
   39614:	str	r3, [r9, #8]
   39618:	mov	r0, r1
   3961c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   39620:	mov	r1, #0
   39624:	b	39618 <fb_name_table_visit@@Base+0x27c>
   39628:	push	{r4, r5, r6, r7, r8, lr}
   3962c:	ldr	r5, [r0]
   39630:	ldr	r3, [r0, #12]
   39634:	cmp	r3, #0
   39638:	popeq	{r4, r5, r6, r7, r8, pc}
   3963c:	mov	r8, r2
   39640:	mov	r7, r1
   39644:	mov	r6, r0
   39648:	sub	r5, r5, #4
   3964c:	mov	r4, #0
   39650:	b	39664 <fb_name_table_visit@@Base+0x2c8>
   39654:	add	r4, r4, #1
   39658:	ldr	r3, [r6, #12]
   3965c:	cmp	r3, r4
   39660:	bls	39680 <fb_name_table_visit@@Base+0x2e4>
   39664:	ldr	r1, [r5, #4]!
   39668:	cmp	r1, #0
   3966c:	cmpne	r1, #2
   39670:	beq	39654 <fb_name_table_visit@@Base+0x2b8>
   39674:	mov	r0, r8
   39678:	blx	r7
   3967c:	b	39654 <fb_name_table_visit@@Base+0x2b8>
   39680:	pop	{r4, r5, r6, r7, r8, pc}
   39684:	push	{r4, lr}
   39688:	mov	r4, r0
   3968c:	ldr	r0, [r0]
   39690:	cmp	r0, #0
   39694:	beq	3969c <fb_name_table_visit@@Base+0x300>
   39698:	bl	13ed0 <free@plt>
   3969c:	mov	r3, #0
   396a0:	str	r3, [r4]
   396a4:	str	r3, [r4, #4]
   396a8:	str	r3, [r4, #8]
   396ac:	str	r3, [r4, #12]
   396b0:	pop	{r4, pc}
   396b4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   396b8:	ldr	r7, [sp, #40]	; 0x28
   396bc:	subs	sl, r3, #0
   396c0:	beq	39748 <fb_name_table_visit@@Base+0x3ac>
   396c4:	mov	r9, r0
   396c8:	mov	r5, r1
   396cc:	mov	r6, r2
   396d0:	cmp	sl, #2
   396d4:	beq	3975c <fb_name_table_visit@@Base+0x3c0>
   396d8:	cmp	sl, #1
   396dc:	beq	39770 <fb_name_table_visit@@Base+0x3d4>
   396e0:	ldr	r1, [r0, #8]
   396e4:	ldr	r2, [r0, #12]
   396e8:	mov	r3, #179	; 0xb3
   396ec:	mul	r3, r3, r2
   396f0:	cmp	r1, r3, lsr #8
   396f4:	bcs	39784 <fb_name_table_visit@@Base+0x3e8>
   396f8:	ldr	r4, [r9]
   396fc:	ldr	r8, [r9, #12]
   39700:	sub	r8, r8, #1
   39704:	mov	r1, r6
   39708:	mov	r0, r5
   3970c:	bl	393a8 <fb_name_table_visit@@Base+0xc>
   39710:	and	r3, r8, r0
   39714:	sub	r2, r7, #2
   39718:	cmp	r2, #1
   3971c:	bls	397b0 <fb_name_table_visit@@Base+0x414>
   39720:	add	ip, r4, r3, lsl #2
   39724:	ldr	r1, [r4, r3, lsl #2]
   39728:	cmp	r1, #0
   3972c:	moveq	lr, ip
   39730:	beq	398c4 <fb_name_table_visit@@Base+0x528>
   39734:	add	r0, r0, #1
   39738:	mov	lr, #0
   3973c:	mov	fp, lr
   39740:	str	r7, [sp, #40]	; 0x28
   39744:	b	39840 <fb_name_table_visit@@Base+0x4a4>
   39748:	ldr	r3, [pc, #400]	; 398e0 <fb_name_table_visit@@Base+0x544>
   3974c:	mov	r2, #114	; 0x72
   39750:	ldr	r1, [pc, #396]	; 398e4 <fb_name_table_visit@@Base+0x548>
   39754:	ldr	r0, [pc, #396]	; 398e8 <fb_name_table_visit@@Base+0x54c>
   39758:	bl	14038 <__assert_fail@plt>
   3975c:	ldr	r3, [pc, #380]	; 398e0 <fb_name_table_visit@@Base+0x544>
   39760:	mov	r2, #115	; 0x73
   39764:	ldr	r1, [pc, #376]	; 398e4 <fb_name_table_visit@@Base+0x548>
   39768:	ldr	r0, [pc, #380]	; 398ec <fb_name_table_visit@@Base+0x550>
   3976c:	bl	14038 <__assert_fail@plt>
   39770:	ldr	r3, [pc, #360]	; 398e0 <fb_name_table_visit@@Base+0x544>
   39774:	mov	r2, #116	; 0x74
   39778:	ldr	r1, [pc, #356]	; 398e4 <fb_name_table_visit@@Base+0x548>
   3977c:	ldr	r0, [pc, #364]	; 398f0 <fb_name_table_visit@@Base+0x554>
   39780:	bl	14038 <__assert_fail@plt>
   39784:	lsl	r1, r1, #1
   39788:	bl	39900 <fb_name_table_visit@@Base+0x564>
   3978c:	cmp	r0, #0
   39790:	beq	396f8 <fb_name_table_visit@@Base+0x35c>
   39794:	ldr	r2, [pc, #344]	; 398f4 <fb_name_table_visit@@Base+0x558>
   39798:	ldr	r1, [pc, #344]	; 398f8 <fb_name_table_visit@@Base+0x55c>
   3979c:	ldr	r3, [pc, #344]	; 398fc <fb_name_table_visit@@Base+0x560>
   397a0:	ldr	r0, [r3]
   397a4:	bl	13f84 <fprintf@plt>
   397a8:	mov	r0, #1
   397ac:	bl	13f6c <exit@plt>
   397b0:	ldr	r2, [r9, #8]
   397b4:	add	r2, r2, #1
   397b8:	str	r2, [r9, #8]
   397bc:	add	r2, r4, r3, lsl #2
   397c0:	ldr	r3, [r4, r3, lsl #2]
   397c4:	cmp	r3, #0
   397c8:	cmpne	r3, #2
   397cc:	beq	397f0 <fb_name_table_visit@@Base+0x454>
   397d0:	add	r0, r0, #1
   397d4:	and	r3, r8, r0
   397d8:	add	r2, r4, r3, lsl #2
   397dc:	ldr	r3, [r4, r3, lsl #2]
   397e0:	add	r0, r0, #1
   397e4:	cmp	r3, #0
   397e8:	cmpne	r3, #2
   397ec:	bne	397d4 <fb_name_table_visit@@Base+0x438>
   397f0:	str	sl, [r2]
   397f4:	mov	r1, #0
   397f8:	b	398d8 <fb_name_table_visit@@Base+0x53c>
   397fc:	cmp	lr, #0
   39800:	moveq	lr, ip
   39804:	b	39828 <fb_name_table_visit@@Base+0x48c>
   39808:	ldrd	r2, [r1]
   3980c:	ldrd	r6, [r5]
   39810:	cmp	r7, r3
   39814:	cmpeq	r6, r2
   39818:	moveq	r3, #1
   3981c:	movne	r3, #0
   39820:	cmp	r3, #0
   39824:	bne	398ac <fb_name_table_visit@@Base+0x510>
   39828:	and	r3, r8, r0
   3982c:	add	ip, r4, r3, lsl #2
   39830:	ldr	r1, [r4, r3, lsl #2]
   39834:	add	r0, r0, #1
   39838:	cmp	r1, #0
   3983c:	beq	398bc <fb_name_table_visit@@Base+0x520>
   39840:	cmp	r1, #2
   39844:	beq	397fc <fb_name_table_visit@@Base+0x460>
   39848:	ldrh	r3, [r1, #8]
   3984c:	ldrh	r2, [r5, #8]
   39850:	cmp	r2, r3
   39854:	bne	39828 <fb_name_table_visit@@Base+0x48c>
   39858:	cmp	r3, #5
   3985c:	beq	39878 <fb_name_table_visit@@Base+0x4dc>
   39860:	cmp	r3, #6
   39864:	beq	39894 <fb_name_table_visit@@Base+0x4f8>
   39868:	cmp	r3, #4
   3986c:	movne	r3, fp
   39870:	bne	39820 <fb_name_table_visit@@Base+0x484>
   39874:	b	39808 <fb_name_table_visit@@Base+0x46c>
   39878:	ldrd	r2, [r1]
   3987c:	ldrd	r6, [r5]
   39880:	cmp	r7, r3
   39884:	cmpeq	r6, r2
   39888:	moveq	r3, #1
   3988c:	movne	r3, #0
   39890:	b	39820 <fb_name_table_visit@@Base+0x484>
   39894:	ldrb	r3, [r5]
   39898:	ldrb	r2, [r1]
   3989c:	cmp	r3, r2
   398a0:	movne	r3, #0
   398a4:	moveq	r3, #1
   398a8:	b	39820 <fb_name_table_visit@@Base+0x484>
   398ac:	ldr	r7, [sp, #40]	; 0x28
   398b0:	cmp	r7, #0
   398b4:	streq	sl, [ip]
   398b8:	b	398d8 <fb_name_table_visit@@Base+0x53c>
   398bc:	cmp	lr, #0
   398c0:	moveq	lr, ip
   398c4:	ldr	r3, [r9, #8]
   398c8:	add	r3, r3, #1
   398cc:	str	r3, [r9, #8]
   398d0:	str	sl, [lr]
   398d4:	mov	r1, #0
   398d8:	mov	r0, r1
   398dc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   398e0:	ldrdeq	r5, [r5], -r4
   398e4:	andeq	r2, r5, r8, ror #5
   398e8:	andeq	r2, r5, r8, lsr r3
   398ec:	andeq	r2, r5, r0, asr r3
   398f0:	andeq	r2, r5, r8, ror #6
   398f4:	andeq	r2, r5, r0, lsl #7
   398f8:			; <UNDEFINED> instruction: 0x000523b4
   398fc:	andeq	r6, r6, r8, lsr #1
   39900:	push	{r4, r5, r6, r7, r8, lr}
   39904:	sub	sp, sp, #24
   39908:	mov	r6, r0
   3990c:	ldr	r5, [r0]
   39910:	ldr	r3, [r0, #8]
   39914:	cmp	r1, r3
   39918:	movcc	r1, r3
   3991c:	cmp	r1, #2
   39920:	bls	39984 <fb_name_table_visit@@Base+0x5e8>
   39924:	mov	r4, #4
   39928:	mov	r2, #179	; 0xb3
   3992c:	lsl	r4, r4, #1
   39930:	mul	r3, r2, r4
   39934:	cmp	r1, r3, lsr #8
   39938:	bhi	3992c <fb_name_table_visit@@Base+0x590>
   3993c:	mov	r1, #4
   39940:	mov	r0, r4
   39944:	bl	13ea0 <calloc@plt>
   39948:	str	r0, [sp, #8]
   3994c:	cmp	r0, #0
   39950:	beq	399f0 <fb_name_table_visit@@Base+0x654>
   39954:	mov	r3, #0
   39958:	str	r3, [sp, #12]
   3995c:	str	r4, [sp, #20]
   39960:	str	r3, [sp, #16]
   39964:	ldr	r3, [r6, #12]
   39968:	cmp	r3, #0
   3996c:	beq	399c4 <fb_name_table_visit@@Base+0x628>
   39970:	sub	r5, r5, #4
   39974:	mov	r4, #0
   39978:	mov	r8, #3
   3997c:	mov	r7, r4
   39980:	b	3999c <fb_name_table_visit@@Base+0x600>
   39984:	mov	r4, #4
   39988:	b	3993c <fb_name_table_visit@@Base+0x5a0>
   3998c:	add	r4, r4, #1
   39990:	ldr	r3, [r6, #12]
   39994:	cmp	r3, r4
   39998:	bls	399c4 <fb_name_table_visit@@Base+0x628>
   3999c:	ldr	r1, [r5, #4]!
   399a0:	cmp	r1, #0
   399a4:	cmpne	r1, #2
   399a8:	beq	3998c <fb_name_table_visit@@Base+0x5f0>
   399ac:	str	r8, [sp]
   399b0:	mov	r3, r1
   399b4:	mov	r2, r7
   399b8:	add	r0, sp, #8
   399bc:	bl	396b4 <fb_name_table_visit@@Base+0x318>
   399c0:	b	3998c <fb_name_table_visit@@Base+0x5f0>
   399c4:	mov	r0, r6
   399c8:	bl	39684 <fb_name_table_visit@@Base+0x2e8>
   399cc:	add	ip, sp, #8
   399d0:	ldm	ip!, {r0, r1, r2, r3}
   399d4:	str	r0, [r6]
   399d8:	str	r1, [r6, #4]
   399dc:	str	r2, [r6, #8]
   399e0:	str	r3, [r6, #12]
   399e4:	mov	r0, #0
   399e8:	add	sp, sp, #24
   399ec:	pop	{r4, r5, r6, r7, r8, pc}
   399f0:	mvn	r0, #0
   399f4:	b	399e8 <fb_name_table_visit@@Base+0x64c>

000399f8 <fb_value_set_clear@@Base>:
   399f8:	push	{r4, lr}
   399fc:	bl	39684 <fb_name_table_visit@@Base+0x2e8>
   39a00:	pop	{r4, pc}

00039a04 <fb_value_set_destroy@@Base>:
   39a04:	push	{r4, lr}
   39a08:	mov	r4, r0
   39a0c:	cmp	r1, #0
   39a10:	beq	39a18 <fb_value_set_destroy@@Base+0x14>
   39a14:	bl	39628 <fb_name_table_visit@@Base+0x28c>
   39a18:	mov	r0, r4
   39a1c:	bl	39684 <fb_name_table_visit@@Base+0x2e8>
   39a20:	pop	{r4, pc}

00039a24 <fb_value_set_init@@Base>:
   39a24:	push	{r4, r5, r6, lr}
   39a28:	mov	r5, r0
   39a2c:	cmp	r1, #2
   39a30:	bls	39a78 <fb_value_set_init@@Base+0x54>
   39a34:	mov	r4, #4
   39a38:	mov	r2, #179	; 0xb3
   39a3c:	lsl	r4, r4, #1
   39a40:	mul	r3, r2, r4
   39a44:	cmp	r1, r3, lsr #8
   39a48:	bhi	39a3c <fb_value_set_init@@Base+0x18>
   39a4c:	mov	r1, #4
   39a50:	mov	r0, r4
   39a54:	bl	13ea0 <calloc@plt>
   39a58:	str	r0, [r5]
   39a5c:	cmp	r0, #0
   39a60:	movne	r0, #0
   39a64:	strne	r0, [r5, #4]
   39a68:	strne	r4, [r5, #12]
   39a6c:	strne	r0, [r5, #8]
   39a70:	mvneq	r0, #0
   39a74:	pop	{r4, r5, r6, pc}
   39a78:	mov	r4, #4
   39a7c:	b	39a4c <fb_value_set_init@@Base+0x28>

00039a80 <fb_value_set_resize@@Base>:
   39a80:	push	{r4, lr}
   39a84:	bl	39900 <fb_name_table_visit@@Base+0x564>
   39a88:	pop	{r4, pc}

00039a8c <fb_value_set_insert@@Base>:
   39a8c:	push	{lr}		; (str lr, [sp, #-4]!)
   39a90:	sub	sp, sp, #12
   39a94:	ldr	ip, [sp, #16]
   39a98:	str	ip, [sp]
   39a9c:	bl	396b4 <fb_name_table_visit@@Base+0x318>
   39aa0:	add	sp, sp, #12
   39aa4:	pop	{pc}		; (ldr pc, [sp], #4)

00039aa8 <fb_value_set_insert_item@@Base>:
   39aa8:	push	{lr}		; (str lr, [sp, #-4]!)
   39aac:	sub	sp, sp, #12
   39ab0:	str	r2, [sp]
   39ab4:	mov	r3, r1
   39ab8:	mov	r2, #0
   39abc:	bl	396b4 <fb_name_table_visit@@Base+0x318>
   39ac0:	add	sp, sp, #12
   39ac4:	pop	{pc}		; (ldr pc, [sp], #4)

00039ac8 <fb_value_set_find@@Base>:
   39ac8:	push	{r4, lr}
   39acc:	bl	39424 <fb_name_table_visit@@Base+0x88>
   39ad0:	pop	{r4, pc}

00039ad4 <fb_value_set_find_item@@Base>:
   39ad4:	push	{r4, lr}
   39ad8:	mov	r2, #0
   39adc:	bl	39424 <fb_name_table_visit@@Base+0x88>
   39ae0:	pop	{r4, pc}

00039ae4 <fb_value_set_remove@@Base>:
   39ae4:	push	{r4, lr}
   39ae8:	bl	39514 <fb_name_table_visit@@Base+0x178>
   39aec:	pop	{r4, pc}

00039af0 <fb_value_set_remove_item@@Base>:
   39af0:	push	{r4, lr}
   39af4:	mov	r2, #0
   39af8:	bl	39514 <fb_name_table_visit@@Base+0x178>
   39afc:	pop	{r4, pc}

00039b00 <fb_value_set_visit@@Base>:
   39b00:	push	{r4, lr}
   39b04:	bl	39628 <fb_name_table_visit@@Base+0x28c>
   39b08:	pop	{r4, pc}
   39b0c:	eor	r1, r1, #-2147483648	; 0x80000000
   39b10:	b	39b18 <fb_value_set_visit@@Base+0x18>
   39b14:	eor	r3, r3, #-2147483648	; 0x80000000
   39b18:	push	{r4, r5, lr}
   39b1c:	lsl	r4, r1, #1
   39b20:	lsl	r5, r3, #1
   39b24:	teq	r4, r5
   39b28:	teqeq	r0, r2
   39b2c:	orrsne	ip, r4, r0
   39b30:	orrsne	ip, r5, r2
   39b34:	mvnsne	ip, r4, asr #21
   39b38:	mvnsne	ip, r5, asr #21
   39b3c:	beq	39d28 <fb_value_set_visit@@Base+0x228>
   39b40:	lsr	r4, r4, #21
   39b44:	rsbs	r5, r4, r5, lsr #21
   39b48:	rsblt	r5, r5, #0
   39b4c:	ble	39b6c <fb_value_set_visit@@Base+0x6c>
   39b50:	add	r4, r4, r5
   39b54:	eor	r2, r0, r2
   39b58:	eor	r3, r1, r3
   39b5c:	eor	r0, r2, r0
   39b60:	eor	r1, r3, r1
   39b64:	eor	r2, r0, r2
   39b68:	eor	r3, r1, r3
   39b6c:	cmp	r5, #54	; 0x36
   39b70:	pophi	{r4, r5, pc}
   39b74:	tst	r1, #-2147483648	; 0x80000000
   39b78:	lsl	r1, r1, #12
   39b7c:	mov	ip, #1048576	; 0x100000
   39b80:	orr	r1, ip, r1, lsr #12
   39b84:	beq	39b90 <fb_value_set_visit@@Base+0x90>
   39b88:	rsbs	r0, r0, #0
   39b8c:	rsc	r1, r1, #0
   39b90:	tst	r3, #-2147483648	; 0x80000000
   39b94:	lsl	r3, r3, #12
   39b98:	orr	r3, ip, r3, lsr #12
   39b9c:	beq	39ba8 <fb_value_set_visit@@Base+0xa8>
   39ba0:	rsbs	r2, r2, #0
   39ba4:	rsc	r3, r3, #0
   39ba8:	teq	r4, r5
   39bac:	beq	39d10 <fb_value_set_visit@@Base+0x210>
   39bb0:	sub	r4, r4, #1
   39bb4:	rsbs	lr, r5, #32
   39bb8:	blt	39bd4 <fb_value_set_visit@@Base+0xd4>
   39bbc:	lsl	ip, r2, lr
   39bc0:	adds	r0, r0, r2, lsr r5
   39bc4:	adc	r1, r1, #0
   39bc8:	adds	r0, r0, r3, lsl lr
   39bcc:	adcs	r1, r1, r3, asr r5
   39bd0:	b	39bf0 <fb_value_set_visit@@Base+0xf0>
   39bd4:	sub	r5, r5, #32
   39bd8:	add	lr, lr, #32
   39bdc:	cmp	r2, #1
   39be0:	lsl	ip, r3, lr
   39be4:	orrcs	ip, ip, #2
   39be8:	adds	r0, r0, r3, asr r5
   39bec:	adcs	r1, r1, r3, asr #31
   39bf0:	and	r5, r1, #-2147483648	; 0x80000000
   39bf4:	bpl	39c04 <fb_value_set_visit@@Base+0x104>
   39bf8:	rsbs	ip, ip, #0
   39bfc:	rscs	r0, r0, #0
   39c00:	rsc	r1, r1, #0
   39c04:	cmp	r1, #1048576	; 0x100000
   39c08:	bcc	39c48 <fb_value_set_visit@@Base+0x148>
   39c0c:	cmp	r1, #2097152	; 0x200000
   39c10:	bcc	39c30 <fb_value_set_visit@@Base+0x130>
   39c14:	lsrs	r1, r1, #1
   39c18:	rrxs	r0, r0
   39c1c:	rrx	ip, ip
   39c20:	add	r4, r4, #1
   39c24:	lsl	r2, r4, #21
   39c28:	cmn	r2, #4194304	; 0x400000
   39c2c:	bcs	39d88 <fb_value_set_visit@@Base+0x288>
   39c30:	cmp	ip, #-2147483648	; 0x80000000
   39c34:	lsrseq	ip, r0, #1
   39c38:	adcs	r0, r0, #0
   39c3c:	adc	r1, r1, r4, lsl #20
   39c40:	orr	r1, r1, r5
   39c44:	pop	{r4, r5, pc}
   39c48:	lsls	ip, ip, #1
   39c4c:	adcs	r0, r0, r0
   39c50:	adc	r1, r1, r1
   39c54:	tst	r1, #1048576	; 0x100000
   39c58:	sub	r4, r4, #1
   39c5c:	bne	39c30 <fb_value_set_visit@@Base+0x130>
   39c60:	teq	r1, #0
   39c64:	moveq	r1, r0
   39c68:	moveq	r0, #0
   39c6c:	clz	r3, r1
   39c70:	addeq	r3, r3, #32
   39c74:	sub	r3, r3, #11
   39c78:	subs	r2, r3, #32
   39c7c:	bge	39ca0 <fb_value_set_visit@@Base+0x1a0>
   39c80:	adds	r2, r2, #12
   39c84:	ble	39c9c <fb_value_set_visit@@Base+0x19c>
   39c88:	add	ip, r2, #20
   39c8c:	rsb	r2, r2, #12
   39c90:	lsl	r0, r1, ip
   39c94:	lsr	r1, r1, r2
   39c98:	b	39cb0 <fb_value_set_visit@@Base+0x1b0>
   39c9c:	add	r2, r2, #20
   39ca0:	rsble	ip, r2, #32
   39ca4:	lsl	r1, r1, r2
   39ca8:	orrle	r1, r1, r0, lsr ip
   39cac:	lslle	r0, r0, r2
   39cb0:	subs	r4, r4, r3
   39cb4:	addge	r1, r1, r4, lsl #20
   39cb8:	orrge	r1, r1, r5
   39cbc:	popge	{r4, r5, pc}
   39cc0:	mvn	r4, r4
   39cc4:	subs	r4, r4, #31
   39cc8:	bge	39d04 <fb_value_set_visit@@Base+0x204>
   39ccc:	adds	r4, r4, #12
   39cd0:	bgt	39cec <fb_value_set_visit@@Base+0x1ec>
   39cd4:	add	r4, r4, #20
   39cd8:	rsb	r2, r4, #32
   39cdc:	lsr	r0, r0, r4
   39ce0:	orr	r0, r0, r1, lsl r2
   39ce4:	orr	r1, r5, r1, lsr r4
   39ce8:	pop	{r4, r5, pc}
   39cec:	rsb	r4, r4, #12
   39cf0:	rsb	r2, r4, #32
   39cf4:	lsr	r0, r0, r2
   39cf8:	orr	r0, r0, r1, lsl r4
   39cfc:	mov	r1, r5
   39d00:	pop	{r4, r5, pc}
   39d04:	lsr	r0, r1, r4
   39d08:	mov	r1, r5
   39d0c:	pop	{r4, r5, pc}
   39d10:	teq	r4, #0
   39d14:	eor	r3, r3, #1048576	; 0x100000
   39d18:	eoreq	r1, r1, #1048576	; 0x100000
   39d1c:	addeq	r4, r4, #1
   39d20:	subne	r5, r5, #1
   39d24:	b	39bb0 <fb_value_set_visit@@Base+0xb0>
   39d28:	mvns	ip, r4, asr #21
   39d2c:	mvnsne	ip, r5, asr #21
   39d30:	beq	39d98 <fb_value_set_visit@@Base+0x298>
   39d34:	teq	r4, r5
   39d38:	teqeq	r0, r2
   39d3c:	beq	39d50 <fb_value_set_visit@@Base+0x250>
   39d40:	orrs	ip, r4, r0
   39d44:	moveq	r1, r3
   39d48:	moveq	r0, r2
   39d4c:	pop	{r4, r5, pc}
   39d50:	teq	r1, r3
   39d54:	movne	r1, #0
   39d58:	movne	r0, #0
   39d5c:	popne	{r4, r5, pc}
   39d60:	lsrs	ip, r4, #21
   39d64:	bne	39d78 <fb_value_set_visit@@Base+0x278>
   39d68:	lsls	r0, r0, #1
   39d6c:	adcs	r1, r1, r1
   39d70:	orrcs	r1, r1, #-2147483648	; 0x80000000
   39d74:	pop	{r4, r5, pc}
   39d78:	adds	r4, r4, #4194304	; 0x400000
   39d7c:	addcc	r1, r1, #1048576	; 0x100000
   39d80:	popcc	{r4, r5, pc}
   39d84:	and	r5, r1, #-2147483648	; 0x80000000
   39d88:	orr	r1, r5, #2130706432	; 0x7f000000
   39d8c:	orr	r1, r1, #15728640	; 0xf00000
   39d90:	mov	r0, #0
   39d94:	pop	{r4, r5, pc}
   39d98:	mvns	ip, r4, asr #21
   39d9c:	movne	r1, r3
   39da0:	movne	r0, r2
   39da4:	mvnseq	ip, r5, asr #21
   39da8:	movne	r3, r1
   39dac:	movne	r2, r0
   39db0:	orrs	r4, r0, r1, lsl #12
   39db4:	orrseq	r5, r2, r3, lsl #12
   39db8:	teqeq	r1, r3
   39dbc:	orrne	r1, r1, #524288	; 0x80000
   39dc0:	pop	{r4, r5, pc}
   39dc4:	teq	r0, #0
   39dc8:	moveq	r1, #0
   39dcc:	bxeq	lr
   39dd0:	push	{r4, r5, lr}
   39dd4:	mov	r4, #1024	; 0x400
   39dd8:	add	r4, r4, #50	; 0x32
   39ddc:	mov	r5, #0
   39de0:	mov	r1, #0
   39de4:	b	39c60 <fb_value_set_visit@@Base+0x160>
   39de8:	teq	r0, #0
   39dec:	moveq	r1, #0
   39df0:	bxeq	lr
   39df4:	push	{r4, r5, lr}
   39df8:	mov	r4, #1024	; 0x400
   39dfc:	add	r4, r4, #50	; 0x32
   39e00:	ands	r5, r0, #-2147483648	; 0x80000000
   39e04:	rsbmi	r0, r0, #0
   39e08:	mov	r1, #0
   39e0c:	b	39c60 <fb_value_set_visit@@Base+0x160>
   39e10:	lsls	r2, r0, #1
   39e14:	asr	r1, r2, #3
   39e18:	rrx	r1, r1
   39e1c:	lsl	r0, r2, #28
   39e20:	andsne	r3, r2, #-16777216	; 0xff000000
   39e24:	teqne	r3, #-16777216	; 0xff000000
   39e28:	eorne	r1, r1, #939524096	; 0x38000000
   39e2c:	bxne	lr
   39e30:	teq	r2, #0
   39e34:	teqne	r3, #-16777216	; 0xff000000
   39e38:	bxeq	lr
   39e3c:	push	{r4, r5, lr}
   39e40:	mov	r4, #896	; 0x380
   39e44:	and	r5, r1, #-2147483648	; 0x80000000
   39e48:	bic	r1, r1, #-2147483648	; 0x80000000
   39e4c:	b	39c60 <fb_value_set_visit@@Base+0x160>
   39e50:	orrs	r2, r0, r1
   39e54:	bxeq	lr
   39e58:	push	{r4, r5, lr}
   39e5c:	mov	r5, #0
   39e60:	b	39e80 <fb_value_set_visit@@Base+0x380>
   39e64:	orrs	r2, r0, r1
   39e68:	bxeq	lr
   39e6c:	push	{r4, r5, lr}
   39e70:	ands	r5, r1, #-2147483648	; 0x80000000
   39e74:	bpl	39e80 <fb_value_set_visit@@Base+0x380>
   39e78:	rsbs	r0, r0, #0
   39e7c:	rsc	r1, r1, #0
   39e80:	mov	r4, #1024	; 0x400
   39e84:	add	r4, r4, #50	; 0x32
   39e88:	lsrs	ip, r1, #22
   39e8c:	beq	39c04 <fb_value_set_visit@@Base+0x104>
   39e90:	mov	r2, #3
   39e94:	lsrs	ip, ip, #3
   39e98:	addne	r2, r2, #3
   39e9c:	lsrs	ip, ip, #3
   39ea0:	addne	r2, r2, #3
   39ea4:	add	r2, r2, ip, lsr #3
   39ea8:	rsb	r3, r2, #32
   39eac:	lsl	ip, r0, r3
   39eb0:	lsr	r0, r0, r2
   39eb4:	orr	r0, r0, r1, lsl r3
   39eb8:	lsr	r1, r1, r2
   39ebc:	add	r4, r4, r2
   39ec0:	b	39c04 <fb_value_set_visit@@Base+0x104>
   39ec4:	eor	r0, r0, #-2147483648	; 0x80000000
   39ec8:	b	39ed0 <fb_value_set_visit@@Base+0x3d0>
   39ecc:	eor	r1, r1, #-2147483648	; 0x80000000
   39ed0:	lsls	r2, r0, #1
   39ed4:	lslsne	r3, r1, #1
   39ed8:	teqne	r2, r3
   39edc:	mvnsne	ip, r2, asr #24
   39ee0:	mvnsne	ip, r3, asr #24
   39ee4:	beq	39fdc <fb_value_set_visit@@Base+0x4dc>
   39ee8:	lsr	r2, r2, #24
   39eec:	rsbs	r3, r2, r3, lsr #24
   39ef0:	addgt	r2, r2, r3
   39ef4:	eorgt	r1, r0, r1
   39ef8:	eorgt	r0, r1, r0
   39efc:	eorgt	r1, r0, r1
   39f00:	rsblt	r3, r3, #0
   39f04:	cmp	r3, #25
   39f08:	bxhi	lr
   39f0c:	tst	r0, #-2147483648	; 0x80000000
   39f10:	orr	r0, r0, #8388608	; 0x800000
   39f14:	bic	r0, r0, #-16777216	; 0xff000000
   39f18:	rsbne	r0, r0, #0
   39f1c:	tst	r1, #-2147483648	; 0x80000000
   39f20:	orr	r1, r1, #8388608	; 0x800000
   39f24:	bic	r1, r1, #-16777216	; 0xff000000
   39f28:	rsbne	r1, r1, #0
   39f2c:	teq	r2, r3
   39f30:	beq	39fc4 <fb_value_set_visit@@Base+0x4c4>
   39f34:	sub	r2, r2, #1
   39f38:	adds	r0, r0, r1, asr r3
   39f3c:	rsb	r3, r3, #32
   39f40:	lsl	r1, r1, r3
   39f44:	and	r3, r0, #-2147483648	; 0x80000000
   39f48:	bpl	39f54 <fb_value_set_visit@@Base+0x454>
   39f4c:	rsbs	r1, r1, #0
   39f50:	rsc	r0, r0, #0
   39f54:	cmp	r0, #8388608	; 0x800000
   39f58:	bcc	39f8c <fb_value_set_visit@@Base+0x48c>
   39f5c:	cmp	r0, #16777216	; 0x1000000
   39f60:	bcc	39f78 <fb_value_set_visit@@Base+0x478>
   39f64:	lsrs	r0, r0, #1
   39f68:	rrx	r1, r1
   39f6c:	add	r2, r2, #1
   39f70:	cmp	r2, #254	; 0xfe
   39f74:	bcs	3a030 <fb_value_set_visit@@Base+0x530>
   39f78:	cmp	r1, #-2147483648	; 0x80000000
   39f7c:	adc	r0, r0, r2, lsl #23
   39f80:	biceq	r0, r0, #1
   39f84:	orr	r0, r0, r3
   39f88:	bx	lr
   39f8c:	lsls	r1, r1, #1
   39f90:	adc	r0, r0, r0
   39f94:	tst	r0, #8388608	; 0x800000
   39f98:	sub	r2, r2, #1
   39f9c:	bne	39f78 <fb_value_set_visit@@Base+0x478>
   39fa0:	clz	ip, r0
   39fa4:	sub	ip, ip, #8
   39fa8:	subs	r2, r2, ip
   39fac:	lsl	r0, r0, ip
   39fb0:	addge	r0, r0, r2, lsl #23
   39fb4:	rsblt	r2, r2, #0
   39fb8:	orrge	r0, r0, r3
   39fbc:	orrlt	r0, r3, r0, lsr r2
   39fc0:	bx	lr
   39fc4:	teq	r2, #0
   39fc8:	eor	r1, r1, #8388608	; 0x800000
   39fcc:	eoreq	r0, r0, #8388608	; 0x800000
   39fd0:	addeq	r2, r2, #1
   39fd4:	subne	r3, r3, #1
   39fd8:	b	39f34 <fb_value_set_visit@@Base+0x434>
   39fdc:	lsl	r3, r1, #1
   39fe0:	mvns	ip, r2, asr #24
   39fe4:	mvnsne	ip, r3, asr #24
   39fe8:	beq	3a03c <fb_value_set_visit@@Base+0x53c>
   39fec:	teq	r2, r3
   39ff0:	beq	3a000 <fb_value_set_visit@@Base+0x500>
   39ff4:	teq	r2, #0
   39ff8:	moveq	r0, r1
   39ffc:	bx	lr
   3a000:	teq	r0, r1
   3a004:	movne	r0, #0
   3a008:	bxne	lr
   3a00c:	tst	r2, #-16777216	; 0xff000000
   3a010:	bne	3a020 <fb_value_set_visit@@Base+0x520>
   3a014:	lsls	r0, r0, #1
   3a018:	orrcs	r0, r0, #-2147483648	; 0x80000000
   3a01c:	bx	lr
   3a020:	adds	r2, r2, #33554432	; 0x2000000
   3a024:	addcc	r0, r0, #8388608	; 0x800000
   3a028:	bxcc	lr
   3a02c:	and	r3, r0, #-2147483648	; 0x80000000
   3a030:	orr	r0, r3, #2130706432	; 0x7f000000
   3a034:	orr	r0, r0, #8388608	; 0x800000
   3a038:	bx	lr
   3a03c:	mvns	r2, r2, asr #24
   3a040:	movne	r0, r1
   3a044:	mvnseq	r3, r3, asr #24
   3a048:	movne	r1, r0
   3a04c:	lsls	r2, r0, #9
   3a050:	lslseq	r3, r1, #9
   3a054:	teqeq	r0, r1
   3a058:	orrne	r0, r0, #4194304	; 0x400000
   3a05c:	bx	lr
   3a060:	mov	r3, #0
   3a064:	b	3a070 <fb_value_set_visit@@Base+0x570>
   3a068:	ands	r3, r0, #-2147483648	; 0x80000000
   3a06c:	rsbmi	r0, r0, #0
   3a070:	movs	ip, r0
   3a074:	bxeq	lr
   3a078:	orr	r3, r3, #1258291200	; 0x4b000000
   3a07c:	mov	r1, r0
   3a080:	mov	r0, #0
   3a084:	b	3a0c8 <fb_value_set_visit@@Base+0x5c8>
   3a088:	orrs	r2, r0, r1
   3a08c:	bxeq	lr
   3a090:	mov	r3, #0
   3a094:	b	3a0b0 <fb_value_set_visit@@Base+0x5b0>
   3a098:	orrs	r2, r0, r1
   3a09c:	bxeq	lr
   3a0a0:	ands	r3, r1, #-2147483648	; 0x80000000
   3a0a4:	bpl	3a0b0 <fb_value_set_visit@@Base+0x5b0>
   3a0a8:	rsbs	r0, r0, #0
   3a0ac:	rsc	r1, r1, #0
   3a0b0:	movs	ip, r1
   3a0b4:	moveq	ip, r0
   3a0b8:	moveq	r1, r0
   3a0bc:	moveq	r0, #0
   3a0c0:	orr	r3, r3, #1526726656	; 0x5b000000
   3a0c4:	subeq	r3, r3, #268435456	; 0x10000000
   3a0c8:	sub	r3, r3, #8388608	; 0x800000
   3a0cc:	clz	r2, ip
   3a0d0:	subs	r2, r2, #8
   3a0d4:	sub	r3, r3, r2, lsl #23
   3a0d8:	blt	3a0f8 <fb_value_set_visit@@Base+0x5f8>
   3a0dc:	add	r3, r3, r1, lsl r2
   3a0e0:	lsl	ip, r0, r2
   3a0e4:	rsb	r2, r2, #32
   3a0e8:	cmp	ip, #-2147483648	; 0x80000000
   3a0ec:	adc	r0, r3, r0, lsr r2
   3a0f0:	biceq	r0, r0, #1
   3a0f4:	bx	lr
   3a0f8:	add	r2, r2, #32
   3a0fc:	lsl	ip, r1, r2
   3a100:	rsb	r2, r2, #32
   3a104:	orrs	r0, r0, ip, lsl #1
   3a108:	adc	r0, r3, r1, lsr r2
   3a10c:	biceq	r0, r0, ip, lsr #31
   3a110:	bx	lr
   3a114:	cmp	r3, #0
   3a118:	cmpeq	r2, #0
   3a11c:	bne	3a134 <fb_value_set_visit@@Base+0x634>
   3a120:	cmp	r1, #0
   3a124:	cmpeq	r0, #0
   3a128:	mvnne	r1, #0
   3a12c:	mvnne	r0, #0
   3a130:	b	3a150 <fb_value_set_visit@@Base+0x650>
   3a134:	sub	sp, sp, #8
   3a138:	push	{sp, lr}
   3a13c:	bl	3a248 <fb_value_set_visit@@Base+0x748>
   3a140:	ldr	lr, [sp, #4]
   3a144:	add	sp, sp, #8
   3a148:	pop	{r2, r3}
   3a14c:	bx	lr
   3a150:	push	{r1, lr}
   3a154:	mov	r0, #8
   3a158:	bl	13eac <raise@plt>
   3a15c:	pop	{r1, pc}
   3a160:	vmov	s15, r0
   3a164:	vcmpe.f32	s15, #0.0
   3a168:	vmrs	APSR_nzcv, fpscr
   3a16c:	bmi	3a174 <fb_value_set_visit@@Base+0x674>
   3a170:	b	3a1b8 <fb_value_set_visit@@Base+0x6b8>
   3a174:	push	{r4, lr}
   3a178:	eor	r0, r0, #-2147483648	; 0x80000000
   3a17c:	bl	3a1b8 <fb_value_set_visit@@Base+0x6b8>
   3a180:	rsbs	r0, r0, #0
   3a184:	rsc	r1, r1, #0
   3a188:	pop	{r4, pc}
   3a18c:	vmov	d7, r0, r1
   3a190:	vcmpe.f64	d7, #0.0
   3a194:	vmrs	APSR_nzcv, fpscr
   3a198:	bmi	3a1a0 <fb_value_set_visit@@Base+0x6a0>
   3a19c:	b	3a200 <fb_value_set_visit@@Base+0x700>
   3a1a0:	push	{r4, lr}
   3a1a4:	eor	r1, r1, #-2147483648	; 0x80000000
   3a1a8:	bl	3a200 <fb_value_set_visit@@Base+0x700>
   3a1ac:	rsbs	r0, r0, #0
   3a1b0:	rsc	r1, r1, #0
   3a1b4:	pop	{r4, pc}
   3a1b8:	vmov	s15, r0
   3a1bc:	vldr	d6, [pc, #44]	; 3a1f0 <fb_value_set_visit@@Base+0x6f0>
   3a1c0:	vldr	d5, [pc, #48]	; 3a1f8 <fb_value_set_visit@@Base+0x6f8>
   3a1c4:	mov	r0, #0
   3a1c8:	vcvt.f64.f32	d7, s15
   3a1cc:	vmul.f64	d6, d7, d6
   3a1d0:	vcvt.u32.f64	s12, d6
   3a1d4:	vcvt.f64.u32	d4, s12
   3a1d8:	vmov	r1, s12
   3a1dc:	vmls.f64	d7, d4, d5
   3a1e0:	vcvt.u32.f64	s14, d7
   3a1e4:	vmov	r3, s14
   3a1e8:	orr	r0, r0, r3
   3a1ec:	bx	lr
   3a1f0:	andeq	r0, r0, r0
   3a1f4:	ldclcc	0, cr0, [r0]
   3a1f8:	andeq	r0, r0, r0
   3a1fc:	mvnsmi	r0, r0
   3a200:	vmov	d7, r0, r1
   3a204:	vldr	d6, [pc, #44]	; 3a238 <fb_value_set_visit@@Base+0x738>
   3a208:	vldr	d5, [pc, #48]	; 3a240 <fb_value_set_visit@@Base+0x740>
   3a20c:	mov	r0, #0
   3a210:	vmul.f64	d6, d7, d6
   3a214:	vcvt.u32.f64	s12, d6
   3a218:	vcvt.f64.u32	d4, s12
   3a21c:	vmov	r1, s12
   3a220:	vmls.f64	d7, d4, d5
   3a224:	vcvt.u32.f64	s14, d7
   3a228:	vmov	r3, s14
   3a22c:	orr	r0, r0, r3
   3a230:	bx	lr
   3a234:	nop			; (mov r0, r0)
   3a238:	andeq	r0, r0, r0
   3a23c:	ldclcc	0, cr0, [r0]
   3a240:	andeq	r0, r0, r0
   3a244:	mvnsmi	r0, r0
   3a248:	cmp	r1, r3
   3a24c:	push	{r4, r5, r6, r7, r8, r9, lr}
   3a250:	cmpeq	r0, r2
   3a254:	mov	r4, r0
   3a258:	mov	r5, r1
   3a25c:	ldr	r9, [sp, #28]
   3a260:	movcc	r0, #0
   3a264:	movcc	r1, #0
   3a268:	bcc	3a360 <fb_value_set_visit@@Base+0x860>
   3a26c:	cmp	r3, #0
   3a270:	clzeq	ip, r2
   3a274:	clzne	ip, r3
   3a278:	addeq	ip, ip, #32
   3a27c:	cmp	r5, #0
   3a280:	clzeq	r1, r4
   3a284:	addeq	r1, r1, #32
   3a288:	clzne	r1, r5
   3a28c:	sub	ip, ip, r1
   3a290:	sub	lr, ip, #32
   3a294:	lsl	r7, r3, ip
   3a298:	rsb	r8, ip, #32
   3a29c:	orr	r7, r7, r2, lsl lr
   3a2a0:	orr	r7, r7, r2, lsr r8
   3a2a4:	lsl	r6, r2, ip
   3a2a8:	cmp	r5, r7
   3a2ac:	cmpeq	r4, r6
   3a2b0:	movcc	r0, #0
   3a2b4:	movcc	r1, #0
   3a2b8:	bcc	3a2d4 <fb_value_set_visit@@Base+0x7d4>
   3a2bc:	mov	r3, #1
   3a2c0:	subs	r4, r4, r6
   3a2c4:	lsl	r1, r3, lr
   3a2c8:	lsl	r0, r3, ip
   3a2cc:	orr	r1, r1, r3, lsr r8
   3a2d0:	sbc	r5, r5, r7
   3a2d4:	cmp	ip, #0
   3a2d8:	beq	3a360 <fb_value_set_visit@@Base+0x860>
   3a2dc:	lsrs	r3, r7, #1
   3a2e0:	rrx	r2, r6
   3a2e4:	mov	r6, ip
   3a2e8:	b	3a30c <fb_value_set_visit@@Base+0x80c>
   3a2ec:	subs	r4, r4, r2
   3a2f0:	sbc	r5, r5, r3
   3a2f4:	adds	r4, r4, r4
   3a2f8:	adc	r5, r5, r5
   3a2fc:	adds	r4, r4, #1
   3a300:	adc	r5, r5, #0
   3a304:	subs	r6, r6, #1
   3a308:	beq	3a328 <fb_value_set_visit@@Base+0x828>
   3a30c:	cmp	r5, r3
   3a310:	cmpeq	r4, r2
   3a314:	bcs	3a2ec <fb_value_set_visit@@Base+0x7ec>
   3a318:	adds	r4, r4, r4
   3a31c:	adc	r5, r5, r5
   3a320:	subs	r6, r6, #1
   3a324:	bne	3a30c <fb_value_set_visit@@Base+0x80c>
   3a328:	lsr	r6, r4, ip
   3a32c:	lsr	r7, r5, ip
   3a330:	orr	r6, r6, r5, lsl r8
   3a334:	adds	r2, r0, r4
   3a338:	orr	r6, r6, r5, lsr lr
   3a33c:	adc	r3, r1, r5
   3a340:	lsl	r1, r7, ip
   3a344:	orr	r1, r1, r6, lsl lr
   3a348:	lsl	r0, r6, ip
   3a34c:	orr	r1, r1, r6, lsr r8
   3a350:	subs	r0, r2, r0
   3a354:	mov	r4, r6
   3a358:	mov	r5, r7
   3a35c:	sbc	r1, r3, r1
   3a360:	cmp	r9, #0
   3a364:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   3a368:	strd	r4, [r9]
   3a36c:	pop	{r4, r5, r6, r7, r8, r9, pc}

0003a370 <__libc_csu_init@@Base>:
   3a370:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3a374:	mov	r7, r0
   3a378:	ldr	r6, [pc, #72]	; 3a3c8 <__libc_csu_init@@Base+0x58>
   3a37c:	ldr	r5, [pc, #72]	; 3a3cc <__libc_csu_init@@Base+0x5c>
   3a380:	add	r6, pc, r6
   3a384:	add	r5, pc, r5
   3a388:	sub	r6, r6, r5
   3a38c:	mov	r8, r1
   3a390:	mov	r9, r2
   3a394:	bl	13e80 <calloc@plt-0x20>
   3a398:	asrs	r6, r6, #2
   3a39c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3a3a0:	mov	r4, #0
   3a3a4:	add	r4, r4, #1
   3a3a8:	ldr	r3, [r5], #4
   3a3ac:	mov	r2, r9
   3a3b0:	mov	r1, r8
   3a3b4:	mov	r0, r7
   3a3b8:	blx	r3
   3a3bc:	cmp	r6, r4
   3a3c0:	bne	3a3a4 <__libc_csu_init@@Base+0x34>
   3a3c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3a3c8:	andeq	fp, r2, r8, lsl #23
   3a3cc:	andeq	fp, r2, r0, lsl #23

0003a3d0 <__libc_csu_fini@@Base>:
   3a3d0:	bx	lr

Disassembly of section .fini:

0003a3d4 <.fini>:
   3a3d4:	push	{r3, lr}
   3a3d8:	pop	{r3, pc}
