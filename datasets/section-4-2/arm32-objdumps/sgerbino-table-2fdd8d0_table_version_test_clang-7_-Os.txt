
../repos/sgerbino-table-2fdd8d0/bin/table_version_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r3, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #77824	; 0x13000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #77824	; 0x13000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #77824	; 0x13000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #77824	; 0x13000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #77824	; 0x13000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #77824	; 0x13000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #77824	; 0x13000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #77824	; 0x13000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #77824	; 0x13000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #77824	; 0x13000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #77824	; 0x13000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #77824	; 0x13000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:	andeq	r4, r1, ip, lsl #21
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	andeq	r4, r1, ip, lsr #20
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r5, r2, r8, asr #32
   11fa4:	andeq	r5, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r5, r2, r8, asr #32
   11fdc:	andeq	r5, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r5, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{fp, lr}
   12014:	mov	fp, sp
   12018:	bl	12720 <table_get_major_version@@Base>
   1201c:	mov	r1, r0
   12020:	movw	r0, #19108	; 0x4aa4
   12024:	movt	r0, #1
   12028:	bl	11e9c <printf@plt>
   1202c:	bl	12728 <table_get_minor_version@@Base>
   12030:	mov	r1, r0
   12034:	movw	r0, #19133	; 0x4abd
   12038:	movt	r0, #1
   1203c:	bl	11e9c <printf@plt>
   12040:	bl	12730 <table_get_patch_version@@Base>
   12044:	mov	r1, r0
   12048:	movw	r0, #19158	; 0x4ad6
   1204c:	movt	r0, #1
   12050:	bl	11e9c <printf@plt>
   12054:	bl	12738 <table_get_version@@Base>
   12058:	mov	r1, r0
   1205c:	movw	r0, #19183	; 0x4aef
   12060:	movt	r0, #1
   12064:	bl	11e9c <printf@plt>
   12068:	mov	r0, #0
   1206c:	pop	{fp, pc}

00012070 <table_new@@Base>:
   12070:	push	{fp, lr}
   12074:	mov	fp, sp
   12078:	mov	r0, #56	; 0x38
   1207c:	bl	11ecc <malloc@plt>
   12080:	mov	r1, #0
   12084:	mov	r2, #10
   12088:	mov	r3, #20
   1208c:	vmov.i32	q8, #0	; 0x00000000
   12090:	str	r1, [r0]
   12094:	stmib	r0, {r1, r2}
   12098:	str	r1, [r0, #12]
   1209c:	str	r1, [r0, #16]
   120a0:	str	r1, [r0, #20]
   120a4:	str	r3, [r0, #24]
   120a8:	str	r1, [r0, #28]
   120ac:	str	r2, [r0, #48]	; 0x30
   120b0:	str	r1, [r0, #52]	; 0x34
   120b4:	add	r1, r0, #32
   120b8:	vst1.32	{d16-d17}, [r1]
   120bc:	pop	{fp, pc}

000120c0 <table_init@@Base>:
   120c0:	mov	r1, #0
   120c4:	mov	r2, #10
   120c8:	mov	r3, #20
   120cc:	vmov.i32	q8, #0	; 0x00000000
   120d0:	str	r1, [r0]
   120d4:	stmib	r0, {r1, r2}
   120d8:	str	r1, [r0, #12]
   120dc:	str	r1, [r0, #16]
   120e0:	str	r1, [r0, #20]
   120e4:	str	r3, [r0, #24]
   120e8:	str	r1, [r0, #28]
   120ec:	str	r2, [r0, #48]	; 0x30
   120f0:	str	r1, [r0, #52]	; 0x34
   120f4:	add	r0, r0, #32
   120f8:	vst1.32	{d16-d17}, [r0]
   120fc:	bx	lr

00012100 <table_delete@@Base>:
   12100:	push	{r4, sl, fp, lr}
   12104:	add	fp, sp, #8
   12108:	mov	r4, r0
   1210c:	bl	1211c <table_destroy@@Base>
   12110:	mov	r0, r4
   12114:	pop	{r4, sl, fp, lr}
   12118:	b	11ea8 <free@plt>

0001211c <table_destroy@@Base>:
   1211c:	cmp	r0, #0
   12120:	bxeq	lr
   12124:	push	{r4, r5, r6, sl, fp, lr}
   12128:	add	fp, sp, #16
   1212c:	mvn	r1, #0
   12130:	mvn	r2, #0
   12134:	mov	r3, #64	; 0x40
   12138:	mov	r4, r0
   1213c:	bl	129ac <table_notify@@Base>
   12140:	mov	r0, r4
   12144:	bl	13748 <table_get_row_length@@Base>
   12148:	cmp	r0, #1
   1214c:	blt	12170 <table_destroy@@Base+0x54>
   12150:	mov	r5, r0
   12154:	mov	r6, #0
   12158:	mov	r0, r4
   1215c:	mov	r1, r6
   12160:	bl	136f0 <table_row_destroy@@Base>
   12164:	add	r6, r6, #1
   12168:	cmp	r5, r6
   1216c:	bne	12158 <table_destroy@@Base+0x3c>
   12170:	ldr	r0, [r4, #16]
   12174:	cmp	r0, #0
   12178:	beq	12180 <table_destroy@@Base+0x64>
   1217c:	bl	11ea8 <free@plt>
   12180:	mov	r0, r4
   12184:	bl	12aa0 <table_get_column_length@@Base>
   12188:	cmp	r0, #1
   1218c:	blt	121b0 <table_destroy@@Base+0x94>
   12190:	mov	r5, r0
   12194:	mov	r6, #0
   12198:	mov	r0, r4
   1219c:	mov	r1, r6
   121a0:	bl	12a88 <table_column_destroy@@Base>
   121a4:	add	r6, r6, #1
   121a8:	cmp	r5, r6
   121ac:	bne	12198 <table_destroy@@Base+0x7c>
   121b0:	ldr	r0, [r4]
   121b4:	cmp	r0, #0
   121b8:	beq	121c0 <table_destroy@@Base+0xa4>
   121bc:	bl	11ea8 <free@plt>
   121c0:	ldr	r0, [r4, #36]	; 0x24
   121c4:	cmp	r0, #0
   121c8:	beq	121d0 <table_destroy@@Base+0xb4>
   121cc:	bl	11ea8 <free@plt>
   121d0:	ldr	r0, [r4, #40]	; 0x28
   121d4:	cmp	r0, #0
   121d8:	beq	121e0 <table_destroy@@Base+0xc4>
   121dc:	bl	11ea8 <free@plt>
   121e0:	ldr	r0, [r4, #44]	; 0x2c
   121e4:	cmp	r0, #0
   121e8:	pop	{r4, r5, r6, sl, fp, lr}
   121ec:	beq	121f4 <table_destroy@@Base+0xd8>
   121f0:	b	11ea8 <free@plt>
   121f4:	bx	lr

000121f8 <table_dupe@@Base>:
   121f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121fc:	add	fp, sp, #28
   12200:	sub	sp, sp, #12
   12204:	mov	r4, r0
   12208:	bl	13748 <table_get_row_length@@Base>
   1220c:	mov	r8, r0
   12210:	mov	r0, r4
   12214:	bl	12aa0 <table_get_column_length@@Base>
   12218:	mov	r6, r0
   1221c:	mov	r0, #56	; 0x38
   12220:	bl	11ecc <malloc@plt>
   12224:	mov	sl, r0
   12228:	mov	r5, #0
   1222c:	mov	r0, #10
   12230:	mov	r1, #20
   12234:	cmp	r6, #1
   12238:	vmov.i32	q8, #0	; 0x00000000
   1223c:	str	r5, [sl]
   12240:	str	r5, [sl, #4]
   12244:	str	r0, [sl, #8]
   12248:	str	r5, [sl, #12]
   1224c:	str	r5, [sl, #16]
   12250:	str	r5, [sl, #20]
   12254:	str	r1, [sl, #24]
   12258:	str	r5, [sl, #28]
   1225c:	str	r0, [sl, #48]	; 0x30
   12260:	add	r0, sl, #32
   12264:	str	r5, [sl, #52]	; 0x34
   12268:	vst1.32	{d16-d17}, [r0]
   1226c:	blt	122a8 <table_dupe@@Base+0xb0>
   12270:	mov	r0, r4
   12274:	mov	r1, r5
   12278:	bl	12b04 <table_get_column_name@@Base>
   1227c:	mov	r7, r0
   12280:	mov	r0, r4
   12284:	mov	r1, r5
   12288:	bl	12b14 <table_get_column_data_type@@Base>
   1228c:	mov	r2, r0
   12290:	mov	r0, sl
   12294:	mov	r1, r7
   12298:	bl	12b28 <table_add_column@@Base>
   1229c:	add	r5, r5, #1
   122a0:	cmp	r6, r5
   122a4:	bne	12270 <table_dupe@@Base+0x78>
   122a8:	cmp	r8, #1
   122ac:	blt	12714 <table_dupe@@Base+0x51c>
   122b0:	mov	r5, #0
   122b4:	add	r9, sp, #8
   122b8:	mov	r0, sl
   122bc:	bl	13750 <table_add_row@@Base>
   122c0:	cmp	r6, #1
   122c4:	blt	12708 <table_dupe@@Base+0x510>
   122c8:	mov	r7, #0
   122cc:	mov	r0, r4
   122d0:	mov	r1, r7
   122d4:	bl	12b14 <table_get_column_data_type@@Base>
   122d8:	cmp	r0, #23
   122dc:	bhi	126fc <table_dupe@@Base+0x504>
   122e0:	add	r1, pc, #0
   122e4:	ldr	pc, [r1, r0, lsl #2]
   122e8:	andeq	r2, r1, r8, asr #6
   122ec:	andeq	r2, r1, r0, ror r3
   122f0:	muleq	r1, r8, r3
   122f4:	andeq	r2, r1, r0, asr #7
   122f8:	andeq	r2, r1, r8, ror #7
   122fc:	andeq	r2, r1, r0, lsl r4
   12300:	andeq	r2, r1, r8, lsr r4
   12304:	andeq	r2, r1, r0, ror #8
   12308:	andeq	r2, r1, r8, lsl #9
   1230c:			; <UNDEFINED> instruction: 0x000124b0
   12310:	ldrdeq	r2, [r1], -r8
   12314:	andeq	r2, r1, r0, lsl #10
   12318:	andeq	r2, r1, r8, lsr #10
   1231c:	andeq	r2, r1, r0, asr r5
   12320:	andeq	r2, r1, r8, ror r5
   12324:	andeq	r2, r1, r0, lsr #11
   12328:	andeq	r2, r1, r8, asr #11
   1232c:	andeq	r2, r1, ip, ror #11
   12330:	andeq	r2, r1, r0, lsl r6
   12334:	andeq	r2, r1, r4, lsr r6
   12338:	andeq	r2, r1, ip, asr r6
   1233c:	andeq	r2, r1, r4, lsl #13
   12340:	andeq	r2, r1, ip, lsr #13
   12344:	ldrdeq	r2, [r1], -r4
   12348:	mov	r0, r4
   1234c:	mov	r1, r5
   12350:	mov	r2, r7
   12354:	bl	134a0 <table_get_int@@Base>
   12358:	mov	r3, r0
   1235c:	mov	r0, sl
   12360:	mov	r1, r5
   12364:	mov	r2, r7
   12368:	bl	13c4c <table_set_int@@Base>
   1236c:	b	126fc <table_dupe@@Base+0x504>
   12370:	mov	r0, r4
   12374:	mov	r1, r5
   12378:	mov	r2, r7
   1237c:	bl	134b8 <table_get_uint@@Base>
   12380:	mov	r3, r0
   12384:	mov	r0, sl
   12388:	mov	r1, r5
   1238c:	mov	r2, r7
   12390:	bl	13c74 <table_set_uint@@Base>
   12394:	b	126fc <table_dupe@@Base+0x504>
   12398:	mov	r0, r4
   1239c:	mov	r1, r5
   123a0:	mov	r2, r7
   123a4:	bl	134d0 <table_get_int8@@Base>
   123a8:	mov	r3, r0
   123ac:	mov	r0, sl
   123b0:	mov	r1, r5
   123b4:	mov	r2, r7
   123b8:	bl	13c9c <table_set_int8@@Base>
   123bc:	b	126fc <table_dupe@@Base+0x504>
   123c0:	mov	r0, r4
   123c4:	mov	r1, r5
   123c8:	mov	r2, r7
   123cc:	bl	134e8 <table_get_uint8@@Base>
   123d0:	mov	r3, r0
   123d4:	mov	r0, sl
   123d8:	mov	r1, r5
   123dc:	mov	r2, r7
   123e0:	bl	13cc4 <table_set_uint8@@Base>
   123e4:	b	126fc <table_dupe@@Base+0x504>
   123e8:	mov	r0, r4
   123ec:	mov	r1, r5
   123f0:	mov	r2, r7
   123f4:	bl	13500 <table_get_int16@@Base>
   123f8:	mov	r3, r0
   123fc:	mov	r0, sl
   12400:	mov	r1, r5
   12404:	mov	r2, r7
   12408:	bl	13cec <table_set_int16@@Base>
   1240c:	b	126fc <table_dupe@@Base+0x504>
   12410:	mov	r0, r4
   12414:	mov	r1, r5
   12418:	mov	r2, r7
   1241c:	bl	13518 <table_get_uint16@@Base>
   12420:	mov	r3, r0
   12424:	mov	r0, sl
   12428:	mov	r1, r5
   1242c:	mov	r2, r7
   12430:	bl	13d14 <table_set_uint16@@Base>
   12434:	b	126fc <table_dupe@@Base+0x504>
   12438:	mov	r0, r4
   1243c:	mov	r1, r5
   12440:	mov	r2, r7
   12444:	bl	13530 <table_get_int32@@Base>
   12448:	mov	r3, r0
   1244c:	mov	r0, sl
   12450:	mov	r1, r5
   12454:	mov	r2, r7
   12458:	bl	13d3c <table_set_int32@@Base>
   1245c:	b	126fc <table_dupe@@Base+0x504>
   12460:	mov	r0, r4
   12464:	mov	r1, r5
   12468:	mov	r2, r7
   1246c:	bl	13548 <table_get_uint32@@Base>
   12470:	mov	r3, r0
   12474:	mov	r0, sl
   12478:	mov	r1, r5
   1247c:	mov	r2, r7
   12480:	bl	13d64 <table_set_uint32@@Base>
   12484:	b	126fc <table_dupe@@Base+0x504>
   12488:	mov	r0, r4
   1248c:	mov	r1, r5
   12490:	mov	r2, r7
   12494:	bl	13560 <table_get_int64@@Base>
   12498:	stm	sp, {r0, r1}
   1249c:	mov	r0, sl
   124a0:	mov	r1, r5
   124a4:	mov	r2, r7
   124a8:	bl	13d8c <table_set_int64@@Base>
   124ac:	b	126fc <table_dupe@@Base+0x504>
   124b0:	mov	r0, r4
   124b4:	mov	r1, r5
   124b8:	mov	r2, r7
   124bc:	bl	13578 <table_get_uint64@@Base>
   124c0:	stm	sp, {r0, r1}
   124c4:	mov	r0, sl
   124c8:	mov	r1, r5
   124cc:	mov	r2, r7
   124d0:	bl	13dc0 <table_set_uint64@@Base>
   124d4:	b	126fc <table_dupe@@Base+0x504>
   124d8:	mov	r0, r4
   124dc:	mov	r1, r5
   124e0:	mov	r2, r7
   124e4:	bl	13590 <table_get_short@@Base>
   124e8:	mov	r3, r0
   124ec:	mov	r0, sl
   124f0:	mov	r1, r5
   124f4:	mov	r2, r7
   124f8:	bl	13df4 <table_set_short@@Base>
   124fc:	b	126fc <table_dupe@@Base+0x504>
   12500:	mov	r0, r4
   12504:	mov	r1, r5
   12508:	mov	r2, r7
   1250c:	bl	135a8 <table_get_ushort@@Base>
   12510:	mov	r3, r0
   12514:	mov	r0, sl
   12518:	mov	r1, r5
   1251c:	mov	r2, r7
   12520:	bl	13e1c <table_set_ushort@@Base>
   12524:	b	126fc <table_dupe@@Base+0x504>
   12528:	mov	r0, r4
   1252c:	mov	r1, r5
   12530:	mov	r2, r7
   12534:	bl	135c0 <table_get_long@@Base>
   12538:	mov	r3, r0
   1253c:	mov	r0, sl
   12540:	mov	r1, r5
   12544:	mov	r2, r7
   12548:	bl	13e44 <table_set_long@@Base>
   1254c:	b	126fc <table_dupe@@Base+0x504>
   12550:	mov	r0, r4
   12554:	mov	r1, r5
   12558:	mov	r2, r7
   1255c:	bl	135d8 <table_get_ulong@@Base>
   12560:	mov	r3, r0
   12564:	mov	r0, sl
   12568:	mov	r1, r5
   1256c:	mov	r2, r7
   12570:	bl	13e6c <table_set_ulong@@Base>
   12574:	b	126fc <table_dupe@@Base+0x504>
   12578:	mov	r0, r4
   1257c:	mov	r1, r5
   12580:	mov	r2, r7
   12584:	bl	135f0 <table_get_llong@@Base>
   12588:	stm	sp, {r0, r1}
   1258c:	mov	r0, sl
   12590:	mov	r1, r5
   12594:	mov	r2, r7
   12598:	bl	13e94 <table_set_llong@@Base>
   1259c:	b	126fc <table_dupe@@Base+0x504>
   125a0:	mov	r0, r4
   125a4:	mov	r1, r5
   125a8:	mov	r2, r7
   125ac:	bl	13608 <table_get_ullong@@Base>
   125b0:	stm	sp, {r0, r1}
   125b4:	mov	r0, sl
   125b8:	mov	r1, r5
   125bc:	mov	r2, r7
   125c0:	bl	13ec8 <table_set_ullong@@Base>
   125c4:	b	126fc <table_dupe@@Base+0x504>
   125c8:	mov	r0, r4
   125cc:	mov	r1, r5
   125d0:	mov	r2, r7
   125d4:	bl	13620 <table_get_float@@Base>
   125d8:	mov	r0, sl
   125dc:	mov	r1, r5
   125e0:	mov	r2, r7
   125e4:	bl	13efc <table_set_float@@Base>
   125e8:	b	126fc <table_dupe@@Base+0x504>
   125ec:	mov	r0, r4
   125f0:	mov	r1, r5
   125f4:	mov	r2, r7
   125f8:	bl	13638 <table_get_double@@Base>
   125fc:	mov	r0, sl
   12600:	mov	r1, r5
   12604:	mov	r2, r7
   12608:	bl	13f24 <table_set_double@@Base>
   1260c:	b	126fc <table_dupe@@Base+0x504>
   12610:	mov	r0, r4
   12614:	mov	r1, r5
   12618:	mov	r2, r7
   1261c:	bl	13650 <table_get_ldouble@@Base>
   12620:	mov	r0, sl
   12624:	mov	r1, r5
   12628:	mov	r2, r7
   1262c:	bl	13f4c <table_set_ldouble@@Base>
   12630:	b	126fc <table_dupe@@Base+0x504>
   12634:	mov	r0, r4
   12638:	mov	r1, r5
   1263c:	mov	r2, r7
   12640:	bl	13668 <table_get_char@@Base>
   12644:	mov	r3, r0
   12648:	mov	r0, sl
   1264c:	mov	r1, r5
   12650:	mov	r2, r7
   12654:	bl	13f94 <table_set_char@@Base>
   12658:	b	126fc <table_dupe@@Base+0x504>
   1265c:	mov	r0, r4
   12660:	mov	r1, r5
   12664:	mov	r2, r7
   12668:	bl	13680 <table_get_uchar@@Base>
   1266c:	mov	r3, r0
   12670:	mov	r0, sl
   12674:	mov	r1, r5
   12678:	mov	r2, r7
   1267c:	bl	13fbc <table_set_uchar@@Base>
   12680:	b	126fc <table_dupe@@Base+0x504>
   12684:	mov	r0, r4
   12688:	mov	r1, r5
   1268c:	mov	r2, r7
   12690:	bl	13698 <table_get_string@@Base>
   12694:	mov	r3, r0
   12698:	mov	r0, sl
   1269c:	mov	r1, r5
   126a0:	mov	r2, r7
   126a4:	bl	13f74 <table_set_string@@Base>
   126a8:	b	126fc <table_dupe@@Base+0x504>
   126ac:	mov	r0, r4
   126b0:	mov	r1, r5
   126b4:	mov	r2, r7
   126b8:	bl	13488 <table_get_bool@@Base>
   126bc:	mov	r3, r0
   126c0:	mov	r0, sl
   126c4:	mov	r1, r5
   126c8:	mov	r2, r7
   126cc:	bl	13c24 <table_set_bool@@Base>
   126d0:	b	126fc <table_dupe@@Base+0x504>
   126d4:	mov	r0, r4
   126d8:	mov	r1, r5
   126dc:	mov	r2, r7
   126e0:	bl	136ac <table_get_ptr@@Base>
   126e4:	str	r0, [sp, #8]
   126e8:	mov	r0, sl
   126ec:	mov	r1, r5
   126f0:	mov	r2, r7
   126f4:	mov	r3, r9
   126f8:	bl	13fe4 <table_set_ptr@@Base>
   126fc:	add	r7, r7, #1
   12700:	cmp	r6, r7
   12704:	bne	122cc <table_dupe@@Base+0xd4>
   12708:	add	r5, r5, #1
   1270c:	cmp	r5, r8
   12710:	bne	122b8 <table_dupe@@Base+0xc0>
   12714:	mov	r0, sl
   12718:	sub	sp, fp, #28
   1271c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012720 <table_get_major_version@@Base>:
   12720:	mov	r0, #0
   12724:	bx	lr

00012728 <table_get_minor_version@@Base>:
   12728:	mov	r0, #0
   1272c:	bx	lr

00012730 <table_get_patch_version@@Base>:
   12730:	mov	r0, #0
   12734:	bx	lr

00012738 <table_get_version@@Base>:
   12738:	movw	r0, #19182	; 0x4aee
   1273c:	movt	r0, #1
   12740:	bx	lr

00012744 <table_get_callback_length@@Base>:
   12744:	ldr	r0, [r0, #32]
   12748:	bx	lr

0001274c <table_register_callback@@Base>:
   1274c:	push	{r4, r5, r6, r7, fp, lr}
   12750:	add	fp, sp, #16
   12754:	mov	r5, r0
   12758:	ldr	r0, [r0, #32]
   1275c:	mov	r4, r3
   12760:	mov	r6, r2
   12764:	mov	r7, r1
   12768:	cmp	r0, #1
   1276c:	blt	127a0 <table_register_callback@@Base+0x54>
   12770:	ldr	r2, [r5, #36]	; 0x24
   12774:	mov	r1, #0
   12778:	ldr	r3, [r2, r1, lsl #2]
   1277c:	cmp	r3, r7
   12780:	bne	12794 <table_register_callback@@Base+0x48>
   12784:	ldr	r3, [r5, #40]	; 0x28
   12788:	ldr	r3, [r3, r1, lsl #2]
   1278c:	cmp	r3, r6
   12790:	beq	12824 <table_register_callback@@Base+0xd8>
   12794:	add	r1, r1, #1
   12798:	cmp	r1, r0
   1279c:	blt	12778 <table_register_callback@@Base+0x2c>
   127a0:	ldr	r1, [r5, #48]	; 0x30
   127a4:	udiv	r2, r0, r1
   127a8:	mls	r2, r2, r1, r0
   127ac:	cmp	r2, #0
   127b0:	bne	127fc <table_register_callback@@Base+0xb0>
   127b4:	ldr	r2, [r5, #52]	; 0x34
   127b8:	ldr	r0, [r5, #36]	; 0x24
   127bc:	add	r1, r2, r1
   127c0:	str	r1, [r5, #52]	; 0x34
   127c4:	lsl	r1, r1, #2
   127c8:	bl	11eb4 <realloc@plt>
   127cc:	str	r0, [r5, #36]	; 0x24
   127d0:	ldr	r1, [r5, #52]	; 0x34
   127d4:	ldr	r0, [r5, #40]	; 0x28
   127d8:	lsl	r1, r1, #2
   127dc:	bl	11eb4 <realloc@plt>
   127e0:	str	r0, [r5, #40]	; 0x28
   127e4:	ldr	r1, [r5, #52]	; 0x34
   127e8:	ldr	r0, [r5, #44]	; 0x2c
   127ec:	lsl	r1, r1, #2
   127f0:	bl	11eb4 <realloc@plt>
   127f4:	str	r0, [r5, #44]	; 0x2c
   127f8:	ldr	r0, [r5, #32]
   127fc:	ldr	r1, [r5, #36]	; 0x24
   12800:	str	r7, [r1, r0, lsl #2]
   12804:	ldr	r1, [r5, #40]	; 0x28
   12808:	str	r6, [r1, r0, lsl #2]
   1280c:	ldr	r1, [r5, #44]	; 0x2c
   12810:	str	r4, [r1, r0, lsl #2]
   12814:	ldr	r0, [r5, #32]
   12818:	add	r0, r0, #1
   1281c:	str	r0, [r5, #32]
   12820:	pop	{r4, r5, r6, r7, fp, pc}
   12824:	cmp	r1, #0
   12828:	ldrne	r0, [r5, #44]	; 0x2c
   1282c:	ldrne	r2, [r0, r1, lsl #2]
   12830:	orrne	r2, r2, r4
   12834:	strne	r2, [r0, r1, lsl #2]
   12838:	popne	{r4, r5, r6, r7, fp, pc}
   1283c:	b	127a0 <table_register_callback@@Base+0x54>

00012840 <table_unregister_callback@@Base>:
   12840:	push	{r4, r5, r6, sl, fp, lr}
   12844:	add	fp, sp, #16
   12848:	ldr	r4, [r0, #32]
   1284c:	cmp	r4, #1
   12850:	blt	12888 <table_unregister_callback@@Base+0x48>
   12854:	ldr	r3, [r0, #36]	; 0x24
   12858:	mov	r6, r0
   1285c:	mov	r0, #0
   12860:	ldr	r5, [r3, r0, lsl #2]
   12864:	cmp	r5, r1
   12868:	bne	1287c <table_unregister_callback@@Base+0x3c>
   1286c:	ldr	r5, [r6, #40]	; 0x28
   12870:	ldr	r5, [r5, r0, lsl #2]
   12874:	cmp	r5, r2
   12878:	beq	1288c <table_unregister_callback@@Base+0x4c>
   1287c:	add	r0, r0, #1
   12880:	cmp	r0, r4
   12884:	blt	12860 <table_unregister_callback@@Base+0x20>
   12888:	pop	{r4, r5, r6, sl, fp, pc}
   1288c:	sub	r1, r4, #1
   12890:	cmp	r0, r1
   12894:	bge	12924 <table_unregister_callback@@Base+0xe4>
   12898:	add	r1, r3, r0, lsl #2
   1289c:	ldr	r1, [r1, #4]
   128a0:	str	r1, [r3, r0, lsl #2]
   128a4:	ldr	r1, [r6, #40]	; 0x28
   128a8:	add	r2, r1, r0, lsl #2
   128ac:	ldr	r2, [r2, #4]
   128b0:	str	r2, [r1, r0, lsl #2]
   128b4:	ldr	r1, [r6, #44]	; 0x2c
   128b8:	add	r2, r1, r0, lsl #2
   128bc:	ldr	r2, [r2, #4]
   128c0:	str	r2, [r1, r0, lsl #2]
   128c4:	add	r2, r0, #1
   128c8:	ldr	r1, [r6, #32]
   128cc:	sub	r1, r1, #1
   128d0:	cmp	r2, r1
   128d4:	bge	12924 <table_unregister_callback@@Base+0xe4>
   128d8:	ldr	r1, [r6, #36]	; 0x24
   128dc:	add	r1, r1, r0, lsl #2
   128e0:	ldr	r2, [r1, #8]
   128e4:	str	r2, [r1, #4]
   128e8:	ldr	r1, [r6, #40]	; 0x28
   128ec:	add	r1, r1, r0, lsl #2
   128f0:	ldr	r2, [r1, #8]
   128f4:	str	r2, [r1, #4]
   128f8:	ldr	r1, [r6, #44]	; 0x2c
   128fc:	add	r1, r1, r0, lsl #2
   12900:	ldr	r2, [r1, #8]
   12904:	str	r2, [r1, #4]
   12908:	add	r2, r0, #1
   1290c:	add	r0, r0, #2
   12910:	ldr	r1, [r6, #32]
   12914:	sub	r1, r1, #1
   12918:	cmp	r0, r1
   1291c:	mov	r0, r2
   12920:	blt	128d8 <table_unregister_callback@@Base+0x98>
   12924:	str	r1, [r6, #32]
   12928:	ldr	r2, [r6, #48]	; 0x30
   1292c:	udiv	r0, r1, r2
   12930:	mls	r0, r0, r2, r1
   12934:	cmp	r0, #0
   12938:	popne	{r4, r5, r6, sl, fp, pc}
   1293c:	ldr	r1, [r6, #52]	; 0x34
   12940:	ldr	r0, [r6, #36]	; 0x24
   12944:	subs	r1, r1, r2
   12948:	str	r1, [r6, #52]	; 0x34
   1294c:	beq	12984 <table_unregister_callback@@Base+0x144>
   12950:	lsl	r1, r1, #2
   12954:	bl	11eb4 <realloc@plt>
   12958:	str	r0, [r6, #36]	; 0x24
   1295c:	ldr	r1, [r6, #52]	; 0x34
   12960:	ldr	r0, [r6, #40]	; 0x28
   12964:	lsl	r1, r1, #2
   12968:	bl	11eb4 <realloc@plt>
   1296c:	str	r0, [r6, #40]	; 0x28
   12970:	ldr	r1, [r6, #52]	; 0x34
   12974:	ldr	r0, [r6, #44]	; 0x2c
   12978:	lsl	r1, r1, #2
   1297c:	bl	11eb4 <realloc@plt>
   12980:	b	129a4 <table_unregister_callback@@Base+0x164>
   12984:	bl	11ea8 <free@plt>
   12988:	ldr	r0, [r6, #40]	; 0x28
   1298c:	bl	11ea8 <free@plt>
   12990:	ldr	r0, [r6, #44]	; 0x2c
   12994:	bl	11ea8 <free@plt>
   12998:	mov	r0, #0
   1299c:	str	r0, [r6, #36]	; 0x24
   129a0:	str	r0, [r6, #40]	; 0x28
   129a4:	str	r0, [r6, #44]	; 0x2c
   129a8:	pop	{r4, r5, r6, sl, fp, pc}

000129ac <table_notify@@Base>:
   129ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   129b0:	add	fp, sp, #24
   129b4:	sub	sp, sp, #8
   129b8:	mov	r7, r0
   129bc:	ldr	r0, [r0, #32]
   129c0:	cmp	r0, #1
   129c4:	blt	12a20 <table_notify@@Base+0x74>
   129c8:	mov	r4, r3
   129cc:	mov	r8, r2
   129d0:	mov	r9, r1
   129d4:	mov	r5, #0
   129d8:	ldr	r1, [r7, #44]	; 0x2c
   129dc:	ldr	r1, [r1, r5, lsl #2]
   129e0:	tst	r1, r4
   129e4:	beq	12a14 <table_notify@@Base+0x68>
   129e8:	ldr	r0, [r7, #36]	; 0x24
   129ec:	ldr	r1, [r7, #40]	; 0x28
   129f0:	mov	r2, r8
   129f4:	mov	r3, r4
   129f8:	ldr	r6, [r0, r5, lsl #2]
   129fc:	ldr	r0, [r1, r5, lsl #2]
   12a00:	mov	r1, r9
   12a04:	str	r0, [sp]
   12a08:	mov	r0, r7
   12a0c:	blx	r6
   12a10:	ldr	r0, [r7, #32]
   12a14:	add	r5, r5, #1
   12a18:	cmp	r5, r0
   12a1c:	blt	129d8 <table_notify@@Base+0x2c>
   12a20:	sub	sp, fp, #24
   12a24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012a28 <table_column_init@@Base>:
   12a28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12a2c:	add	fp, sp, #24
   12a30:	ldr	r7, [r0]
   12a34:	mov	r0, r2
   12a38:	mov	r4, r3
   12a3c:	mov	r5, r2
   12a40:	mov	r6, r1
   12a44:	bl	11ef0 <strlen@plt>
   12a48:	add	r0, r0, #1
   12a4c:	bl	11ecc <malloc@plt>
   12a50:	ldr	r8, [fp, #8]
   12a54:	add	r6, r6, r6, lsl #1
   12a58:	cmp	r0, #0
   12a5c:	str	r0, [r7, r6, lsl #2]
   12a60:	beq	12a6c <table_column_init@@Base+0x44>
   12a64:	mov	r1, r5
   12a68:	bl	11ec0 <strcpy@plt>
   12a6c:	add	r0, r7, r6, lsl #2
   12a70:	stmib	r0, {r4, r8}
   12a74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012a78 <table_get_col_ptr@@Base>:
   12a78:	ldr	r0, [r0]
   12a7c:	add	r1, r1, r1, lsl #1
   12a80:	add	r0, r0, r1, lsl #2
   12a84:	bx	lr

00012a88 <table_column_destroy@@Base>:
   12a88:	ldr	r0, [r0]
   12a8c:	add	r1, r1, r1, lsl #1
   12a90:	ldr	r0, [r0, r1, lsl #2]
   12a94:	cmp	r0, #0
   12a98:	bxeq	lr
   12a9c:	b	11ea8 <free@plt>

00012aa0 <table_get_column_length@@Base>:
   12aa0:	ldr	r0, [r0, #4]
   12aa4:	bx	lr

00012aa8 <table_get_column@@Base>:
   12aa8:	push	{r4, r5, r6, r7, fp, lr}
   12aac:	add	fp, sp, #16
   12ab0:	ldr	r6, [r0, #4]
   12ab4:	cmp	r6, #1
   12ab8:	blt	12af0 <table_get_column@@Base+0x48>
   12abc:	ldr	r7, [r0]
   12ac0:	mov	r5, r1
   12ac4:	mov	r4, #0
   12ac8:	ldr	r0, [r7]
   12acc:	mov	r1, r5
   12ad0:	bl	11e90 <strcmp@plt>
   12ad4:	cmp	r0, #0
   12ad8:	beq	12af4 <table_get_column@@Base+0x4c>
   12adc:	add	r4, r4, #1
   12ae0:	add	r7, r7, #12
   12ae4:	cmp	r4, r6
   12ae8:	blt	12ac8 <table_get_column@@Base+0x20>
   12aec:	b	12af4 <table_get_column@@Base+0x4c>
   12af0:	mov	r4, #0
   12af4:	cmp	r4, r6
   12af8:	mvneq	r4, #0
   12afc:	mov	r0, r4
   12b00:	pop	{r4, r5, r6, r7, fp, pc}

00012b04 <table_get_column_name@@Base>:
   12b04:	ldr	r0, [r0]
   12b08:	add	r1, r1, r1, lsl #1
   12b0c:	ldr	r0, [r0, r1, lsl #2]
   12b10:	bx	lr

00012b14 <table_get_column_data_type@@Base>:
   12b14:	ldr	r0, [r0]
   12b18:	add	r1, r1, r1, lsl #1
   12b1c:	add	r0, r0, r1, lsl #2
   12b20:	ldr	r0, [r0, #4]
   12b24:	bx	lr

00012b28 <table_add_column@@Base>:
   12b28:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b2c:	add	fp, sp, #24
   12b30:	sub	sp, sp, #8
   12b34:	mov	r4, r0
   12b38:	mov	r8, r1
   12b3c:	ldr	r0, [r0, #4]
   12b40:	mov	r9, r2
   12b44:	ldr	r1, [r4, #8]
   12b48:	udiv	r2, r0, r1
   12b4c:	mls	r0, r2, r1, r0
   12b50:	cmp	r0, #0
   12b54:	bne	12bc0 <table_add_column@@Base+0x98>
   12b58:	ldr	r2, [r4, #12]
   12b5c:	ldr	r0, [r4]
   12b60:	add	r1, r2, r1
   12b64:	str	r1, [r4, #12]
   12b68:	add	r1, r1, r1, lsl #1
   12b6c:	lsl	r1, r1, #2
   12b70:	bl	11eb4 <realloc@plt>
   12b74:	str	r0, [r4]
   12b78:	mov	r0, r4
   12b7c:	bl	13748 <table_get_row_length@@Base>
   12b80:	cmp	r0, #1
   12b84:	blt	12bc0 <table_add_column@@Base+0x98>
   12b88:	mov	r6, r0
   12b8c:	mov	r7, #0
   12b90:	mov	r0, r4
   12b94:	mov	r1, r7
   12b98:	bl	136e4 <table_get_row_ptr@@Base>
   12b9c:	ldr	r1, [r4, #12]
   12ba0:	mov	r5, r0
   12ba4:	ldr	r0, [r0]
   12ba8:	lsl	r1, r1, #2
   12bac:	bl	11eb4 <realloc@plt>
   12bb0:	add	r7, r7, #1
   12bb4:	str	r0, [r5]
   12bb8:	cmp	r6, r7
   12bbc:	bne	12b90 <table_add_column@@Base+0x68>
   12bc0:	mov	r0, r4
   12bc4:	bl	13748 <table_get_row_length@@Base>
   12bc8:	ldr	r6, [r4, #4]
   12bcc:	mov	r7, r0
   12bd0:	mov	r0, r9
   12bd4:	bl	1345c <table_get_default_compare_function_for_data_type@@Base>
   12bd8:	str	r0, [sp]
   12bdc:	mov	r0, r4
   12be0:	mov	r1, r6
   12be4:	mov	r2, r8
   12be8:	mov	r3, r9
   12bec:	bl	12a28 <table_column_init@@Base>
   12bf0:	cmp	r7, #1
   12bf4:	blt	12c18 <table_add_column@@Base+0xf0>
   12bf8:	mov	r5, #0
   12bfc:	mov	r0, r4
   12c00:	mov	r1, r5
   12c04:	mov	r2, r6
   12c08:	bl	14004 <table_cell_init@@Base>
   12c0c:	add	r5, r5, #1
   12c10:	cmp	r7, r5
   12c14:	bne	12bfc <table_add_column@@Base+0xd4>
   12c18:	ldr	r2, [r4, #4]
   12c1c:	mov	r0, r4
   12c20:	mvn	r1, #0
   12c24:	mov	r3, #8
   12c28:	bl	129ac <table_notify@@Base>
   12c2c:	ldr	r0, [r4, #4]
   12c30:	add	r1, r0, #1
   12c34:	str	r1, [r4, #4]
   12c38:	sub	sp, fp, #24
   12c3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012c40 <table_remove_column@@Base>:
   12c40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c44:	add	fp, sp, #24
   12c48:	mov	r5, r0
   12c4c:	ldr	r0, [r0]
   12c50:	add	r6, r1, r1, lsl #1
   12c54:	mov	r9, r1
   12c58:	ldr	r0, [r0, r6, lsl #2]
   12c5c:	cmp	r0, #0
   12c60:	beq	12c68 <table_remove_column@@Base+0x28>
   12c64:	bl	11ea8 <free@plt>
   12c68:	ldr	r0, [r5, #4]
   12c6c:	sub	r4, r0, #1
   12c70:	cmp	r4, r9
   12c74:	ble	12ca4 <table_remove_column@@Base+0x64>
   12c78:	sub	r0, r4, r9
   12c7c:	lsl	r1, r6, #2
   12c80:	ldr	r2, [r5]
   12c84:	subs	r0, r0, #1
   12c88:	add	r2, r2, r1
   12c8c:	add	r1, r1, #12
   12c90:	vldr	d16, [r2, #12]
   12c94:	ldr	r3, [r2, #20]
   12c98:	str	r3, [r2, #8]
   12c9c:	vstr	d16, [r2]
   12ca0:	bne	12c80 <table_remove_column@@Base+0x40>
   12ca4:	mov	r0, r5
   12ca8:	bl	13748 <table_get_row_length@@Base>
   12cac:	cmp	r0, #1
   12cb0:	blt	12d0c <table_remove_column@@Base+0xcc>
   12cb4:	mov	r6, r0
   12cb8:	mov	r7, #0
   12cbc:	mov	r0, r5
   12cc0:	mov	r1, r7
   12cc4:	mov	r2, r9
   12cc8:	bl	14040 <table_cell_destroy@@Base>
   12ccc:	mov	r0, r5
   12cd0:	mov	r1, r7
   12cd4:	bl	136e4 <table_get_row_ptr@@Base>
   12cd8:	cmp	r4, r9
   12cdc:	ble	12d00 <table_remove_column@@Base+0xc0>
   12ce0:	mov	r1, r9
   12ce4:	ldr	r2, [r0]
   12ce8:	add	r3, r2, r1, lsl #2
   12cec:	ldr	r3, [r3, #4]
   12cf0:	str	r3, [r2, r1, lsl #2]
   12cf4:	add	r1, r1, #1
   12cf8:	cmp	r4, r1
   12cfc:	bne	12ce4 <table_remove_column@@Base+0xa4>
   12d00:	add	r7, r7, #1
   12d04:	cmp	r7, r6
   12d08:	bne	12cbc <table_remove_column@@Base+0x7c>
   12d0c:	ldmib	r5, {r0, r1}
   12d10:	sub	r0, r0, #1
   12d14:	udiv	r2, r0, r1
   12d18:	str	r0, [r5, #4]
   12d1c:	mls	r0, r2, r1, r0
   12d20:	cmp	r0, #0
   12d24:	bne	12d90 <table_remove_column@@Base+0x150>
   12d28:	ldr	r2, [r5, #12]
   12d2c:	ldr	r0, [r5]
   12d30:	sub	r1, r2, r1
   12d34:	str	r1, [r5, #12]
   12d38:	add	r1, r1, r1, lsl #1
   12d3c:	lsl	r1, r1, #2
   12d40:	bl	11eb4 <realloc@plt>
   12d44:	str	r0, [r5]
   12d48:	mov	r0, r5
   12d4c:	bl	13748 <table_get_row_length@@Base>
   12d50:	cmp	r0, #1
   12d54:	blt	12d90 <table_remove_column@@Base+0x150>
   12d58:	mov	r8, r0
   12d5c:	mov	r7, #0
   12d60:	mov	r0, r5
   12d64:	mov	r1, r7
   12d68:	bl	136e4 <table_get_row_ptr@@Base>
   12d6c:	ldr	r1, [r5, #12]
   12d70:	mov	r6, r0
   12d74:	ldr	r0, [r0]
   12d78:	lsl	r1, r1, #2
   12d7c:	bl	11eb4 <realloc@plt>
   12d80:	add	r7, r7, #1
   12d84:	str	r0, [r6]
   12d88:	cmp	r8, r7
   12d8c:	bne	12d60 <table_remove_column@@Base+0x120>
   12d90:	mov	r0, r5
   12d94:	mvn	r1, #0
   12d98:	mov	r2, r9
   12d9c:	mov	r3, #16
   12da0:	bl	129ac <table_notify@@Base>
   12da4:	mov	r0, #0
   12da8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012dac <table_get_column_compare_function@@Base>:
   12dac:	ldr	r0, [r0]
   12db0:	add	r1, r1, r1, lsl #1
   12db4:	add	r0, r0, r1, lsl #2
   12db8:	ldr	r0, [r0, #8]
   12dbc:	bx	lr

00012dc0 <table_set_column_compare_function@@Base>:
   12dc0:	ldr	r0, [r0]
   12dc4:	add	r1, r1, r1, lsl #1
   12dc8:	add	r0, r0, r1, lsl #2
   12dcc:	str	r2, [r0, #8]
   12dd0:	bx	lr

00012dd4 <table_compare_bool@@Base>:
   12dd4:	cmp	r0, #0
   12dd8:	beq	12e00 <table_compare_bool@@Base+0x2c>
   12ddc:	cmp	r1, #0
   12de0:	beq	12e0c <table_compare_bool@@Base+0x38>
   12de4:	ldrb	r2, [r1]
   12de8:	ldrb	r0, [r0]
   12dec:	mov	r1, #0
   12df0:	cmp	r0, r2
   12df4:	mvncc	r1, #0
   12df8:	movwhi	r1, #1
   12dfc:	b	12e10 <table_compare_bool@@Base+0x3c>
   12e00:	cmp	r1, #0
   12e04:	mvnne	r1, #0
   12e08:	b	12e10 <table_compare_bool@@Base+0x3c>
   12e0c:	mov	r1, #1
   12e10:	mov	r0, r1
   12e14:	bx	lr

00012e18 <table_compare_int@@Base>:
   12e18:	cmp	r0, #0
   12e1c:	beq	12e44 <table_compare_int@@Base+0x2c>
   12e20:	cmp	r1, #0
   12e24:	beq	12e50 <table_compare_int@@Base+0x38>
   12e28:	ldr	r2, [r1]
   12e2c:	ldr	r0, [r0]
   12e30:	mov	r1, #0
   12e34:	cmp	r0, r2
   12e38:	mvnlt	r1, #0
   12e3c:	movwgt	r1, #1
   12e40:	b	12e54 <table_compare_int@@Base+0x3c>
   12e44:	cmp	r1, #0
   12e48:	mvnne	r1, #0
   12e4c:	b	12e54 <table_compare_int@@Base+0x3c>
   12e50:	mov	r1, #1
   12e54:	mov	r0, r1
   12e58:	bx	lr

00012e5c <table_compare_uint@@Base>:
   12e5c:	cmp	r0, #0
   12e60:	beq	12e88 <table_compare_uint@@Base+0x2c>
   12e64:	cmp	r1, #0
   12e68:	beq	12e94 <table_compare_uint@@Base+0x38>
   12e6c:	ldr	r2, [r1]
   12e70:	ldr	r0, [r0]
   12e74:	mov	r1, #0
   12e78:	cmp	r0, r2
   12e7c:	mvncc	r1, #0
   12e80:	movwhi	r1, #1
   12e84:	b	12e98 <table_compare_uint@@Base+0x3c>
   12e88:	cmp	r1, #0
   12e8c:	mvnne	r1, #0
   12e90:	b	12e98 <table_compare_uint@@Base+0x3c>
   12e94:	mov	r1, #1
   12e98:	mov	r0, r1
   12e9c:	bx	lr

00012ea0 <table_compare_int8@@Base>:
   12ea0:	cmp	r0, #0
   12ea4:	beq	12ecc <table_compare_int8@@Base+0x2c>
   12ea8:	cmp	r1, #0
   12eac:	beq	12ed8 <table_compare_int8@@Base+0x38>
   12eb0:	ldrsb	r2, [r1]
   12eb4:	ldrsb	r0, [r0]
   12eb8:	mov	r1, #0
   12ebc:	cmp	r0, r2
   12ec0:	mvnlt	r1, #0
   12ec4:	movwgt	r1, #1
   12ec8:	b	12edc <table_compare_int8@@Base+0x3c>
   12ecc:	cmp	r1, #0
   12ed0:	mvnne	r1, #0
   12ed4:	b	12edc <table_compare_int8@@Base+0x3c>
   12ed8:	mov	r1, #1
   12edc:	mov	r0, r1
   12ee0:	bx	lr

00012ee4 <table_compare_uint8@@Base>:
   12ee4:	cmp	r0, #0
   12ee8:	beq	12f10 <table_compare_uint8@@Base+0x2c>
   12eec:	cmp	r1, #0
   12ef0:	beq	12f1c <table_compare_uint8@@Base+0x38>
   12ef4:	ldrb	r2, [r1]
   12ef8:	ldrb	r0, [r0]
   12efc:	mov	r1, #0
   12f00:	cmp	r0, r2
   12f04:	mvncc	r1, #0
   12f08:	movwhi	r1, #1
   12f0c:	b	12f20 <table_compare_uint8@@Base+0x3c>
   12f10:	cmp	r1, #0
   12f14:	mvnne	r1, #0
   12f18:	b	12f20 <table_compare_uint8@@Base+0x3c>
   12f1c:	mov	r1, #1
   12f20:	mov	r0, r1
   12f24:	bx	lr

00012f28 <table_compare_int16@@Base>:
   12f28:	cmp	r0, #0
   12f2c:	beq	12f54 <table_compare_int16@@Base+0x2c>
   12f30:	cmp	r1, #0
   12f34:	beq	12f60 <table_compare_int16@@Base+0x38>
   12f38:	ldrsh	r2, [r1]
   12f3c:	ldrsh	r0, [r0]
   12f40:	mov	r1, #0
   12f44:	cmp	r0, r2
   12f48:	mvnlt	r1, #0
   12f4c:	movwgt	r1, #1
   12f50:	b	12f64 <table_compare_int16@@Base+0x3c>
   12f54:	cmp	r1, #0
   12f58:	mvnne	r1, #0
   12f5c:	b	12f64 <table_compare_int16@@Base+0x3c>
   12f60:	mov	r1, #1
   12f64:	mov	r0, r1
   12f68:	bx	lr

00012f6c <table_compare_uint16@@Base>:
   12f6c:	cmp	r0, #0
   12f70:	beq	12f98 <table_compare_uint16@@Base+0x2c>
   12f74:	cmp	r1, #0
   12f78:	beq	12fa4 <table_compare_uint16@@Base+0x38>
   12f7c:	ldrh	r2, [r1]
   12f80:	ldrh	r0, [r0]
   12f84:	mov	r1, #0
   12f88:	cmp	r0, r2
   12f8c:	mvncc	r1, #0
   12f90:	movwhi	r1, #1
   12f94:	b	12fa8 <table_compare_uint16@@Base+0x3c>
   12f98:	cmp	r1, #0
   12f9c:	mvnne	r1, #0
   12fa0:	b	12fa8 <table_compare_uint16@@Base+0x3c>
   12fa4:	mov	r1, #1
   12fa8:	mov	r0, r1
   12fac:	bx	lr

00012fb0 <table_compare_int32@@Base>:
   12fb0:	cmp	r0, #0
   12fb4:	beq	12fdc <table_compare_int32@@Base+0x2c>
   12fb8:	cmp	r1, #0
   12fbc:	beq	12fe8 <table_compare_int32@@Base+0x38>
   12fc0:	ldr	r2, [r1]
   12fc4:	ldr	r0, [r0]
   12fc8:	mov	r1, #0
   12fcc:	cmp	r0, r2
   12fd0:	mvnlt	r1, #0
   12fd4:	movwgt	r1, #1
   12fd8:	b	12fec <table_compare_int32@@Base+0x3c>
   12fdc:	cmp	r1, #0
   12fe0:	mvnne	r1, #0
   12fe4:	b	12fec <table_compare_int32@@Base+0x3c>
   12fe8:	mov	r1, #1
   12fec:	mov	r0, r1
   12ff0:	bx	lr

00012ff4 <table_compare_uint32@@Base>:
   12ff4:	cmp	r0, #0
   12ff8:	beq	13020 <table_compare_uint32@@Base+0x2c>
   12ffc:	cmp	r1, #0
   13000:	beq	1302c <table_compare_uint32@@Base+0x38>
   13004:	ldr	r2, [r1]
   13008:	ldr	r0, [r0]
   1300c:	mov	r1, #0
   13010:	cmp	r0, r2
   13014:	mvncc	r1, #0
   13018:	movwhi	r1, #1
   1301c:	b	13030 <table_compare_uint32@@Base+0x3c>
   13020:	cmp	r1, #0
   13024:	mvnne	r1, #0
   13028:	b	13030 <table_compare_uint32@@Base+0x3c>
   1302c:	mov	r1, #1
   13030:	mov	r0, r1
   13034:	bx	lr

00013038 <table_compare_int64@@Base>:
   13038:	cmp	r0, #0
   1303c:	beq	13084 <table_compare_int64@@Base+0x4c>
   13040:	cmp	r1, #0
   13044:	beq	13090 <table_compare_int64@@Base+0x58>
   13048:	push	{r5, r7, fp, lr}
   1304c:	add	fp, sp, #8
   13050:	ldm	r1, {r2, r7}
   13054:	ldm	r0, {r0, r5}
   13058:	mov	r1, #0
   1305c:	subs	r3, r0, r2
   13060:	sbcs	r3, r5, r7
   13064:	movwlt	r1, #1
   13068:	cmp	r1, #0
   1306c:	mvnne	r1, #0
   13070:	subs	r0, r2, r0
   13074:	sbcs	r0, r7, r5
   13078:	movwlt	r1, #1
   1307c:	pop	{r5, r7, fp, lr}
   13080:	b	13094 <table_compare_int64@@Base+0x5c>
   13084:	cmp	r1, #0
   13088:	mvnne	r1, #0
   1308c:	b	13094 <table_compare_int64@@Base+0x5c>
   13090:	mov	r1, #1
   13094:	mov	r0, r1
   13098:	bx	lr

0001309c <table_compare_uint64@@Base>:
   1309c:	cmp	r0, #0
   130a0:	beq	130e8 <table_compare_uint64@@Base+0x4c>
   130a4:	cmp	r1, #0
   130a8:	beq	130f4 <table_compare_uint64@@Base+0x58>
   130ac:	push	{r5, r7, fp, lr}
   130b0:	add	fp, sp, #8
   130b4:	ldm	r1, {r2, r7}
   130b8:	ldm	r0, {r0, r5}
   130bc:	mov	r1, #0
   130c0:	subs	r3, r0, r2
   130c4:	sbcs	r3, r5, r7
   130c8:	movwcc	r1, #1
   130cc:	cmp	r1, #0
   130d0:	mvnne	r1, #0
   130d4:	subs	r0, r2, r0
   130d8:	sbcs	r0, r7, r5
   130dc:	movwcc	r1, #1
   130e0:	pop	{r5, r7, fp, lr}
   130e4:	b	130f8 <table_compare_uint64@@Base+0x5c>
   130e8:	cmp	r1, #0
   130ec:	mvnne	r1, #0
   130f0:	b	130f8 <table_compare_uint64@@Base+0x5c>
   130f4:	mov	r1, #1
   130f8:	mov	r0, r1
   130fc:	bx	lr

00013100 <table_compare_short@@Base>:
   13100:	cmp	r0, #0
   13104:	beq	1312c <table_compare_short@@Base+0x2c>
   13108:	cmp	r1, #0
   1310c:	beq	13138 <table_compare_short@@Base+0x38>
   13110:	ldrsh	r2, [r1]
   13114:	ldrsh	r0, [r0]
   13118:	mov	r1, #0
   1311c:	cmp	r0, r2
   13120:	mvnlt	r1, #0
   13124:	movwgt	r1, #1
   13128:	b	1313c <table_compare_short@@Base+0x3c>
   1312c:	cmp	r1, #0
   13130:	mvnne	r1, #0
   13134:	b	1313c <table_compare_short@@Base+0x3c>
   13138:	mov	r1, #1
   1313c:	mov	r0, r1
   13140:	bx	lr

00013144 <table_compare_ushort@@Base>:
   13144:	cmp	r0, #0
   13148:	beq	13170 <table_compare_ushort@@Base+0x2c>
   1314c:	cmp	r1, #0
   13150:	beq	1317c <table_compare_ushort@@Base+0x38>
   13154:	ldrh	r2, [r1]
   13158:	ldrh	r0, [r0]
   1315c:	mov	r1, #0
   13160:	cmp	r0, r2
   13164:	mvncc	r1, #0
   13168:	movwhi	r1, #1
   1316c:	b	13180 <table_compare_ushort@@Base+0x3c>
   13170:	cmp	r1, #0
   13174:	mvnne	r1, #0
   13178:	b	13180 <table_compare_ushort@@Base+0x3c>
   1317c:	mov	r1, #1
   13180:	mov	r0, r1
   13184:	bx	lr

00013188 <table_compare_long@@Base>:
   13188:	cmp	r0, #0
   1318c:	beq	131b4 <table_compare_long@@Base+0x2c>
   13190:	cmp	r1, #0
   13194:	beq	131c0 <table_compare_long@@Base+0x38>
   13198:	ldr	r2, [r1]
   1319c:	ldr	r0, [r0]
   131a0:	mov	r1, #0
   131a4:	cmp	r0, r2
   131a8:	mvnlt	r1, #0
   131ac:	movwgt	r1, #1
   131b0:	b	131c4 <table_compare_long@@Base+0x3c>
   131b4:	cmp	r1, #0
   131b8:	mvnne	r1, #0
   131bc:	b	131c4 <table_compare_long@@Base+0x3c>
   131c0:	mov	r1, #1
   131c4:	mov	r0, r1
   131c8:	bx	lr

000131cc <table_compare_ulong@@Base>:
   131cc:	cmp	r0, #0
   131d0:	beq	131f8 <table_compare_ulong@@Base+0x2c>
   131d4:	cmp	r1, #0
   131d8:	beq	13204 <table_compare_ulong@@Base+0x38>
   131dc:	ldr	r2, [r1]
   131e0:	ldr	r0, [r0]
   131e4:	mov	r1, #0
   131e8:	cmp	r0, r2
   131ec:	mvncc	r1, #0
   131f0:	movwhi	r1, #1
   131f4:	b	13208 <table_compare_ulong@@Base+0x3c>
   131f8:	cmp	r1, #0
   131fc:	mvnne	r1, #0
   13200:	b	13208 <table_compare_ulong@@Base+0x3c>
   13204:	mov	r1, #1
   13208:	mov	r0, r1
   1320c:	bx	lr

00013210 <table_compare_llong@@Base>:
   13210:	cmp	r0, #0
   13214:	beq	1325c <table_compare_llong@@Base+0x4c>
   13218:	cmp	r1, #0
   1321c:	beq	13268 <table_compare_llong@@Base+0x58>
   13220:	push	{r5, r7, fp, lr}
   13224:	add	fp, sp, #8
   13228:	ldm	r1, {r2, r7}
   1322c:	ldm	r0, {r0, r5}
   13230:	mov	r1, #0
   13234:	subs	r3, r0, r2
   13238:	sbcs	r3, r5, r7
   1323c:	movwlt	r1, #1
   13240:	cmp	r1, #0
   13244:	mvnne	r1, #0
   13248:	subs	r0, r2, r0
   1324c:	sbcs	r0, r7, r5
   13250:	movwlt	r1, #1
   13254:	pop	{r5, r7, fp, lr}
   13258:	b	1326c <table_compare_llong@@Base+0x5c>
   1325c:	cmp	r1, #0
   13260:	mvnne	r1, #0
   13264:	b	1326c <table_compare_llong@@Base+0x5c>
   13268:	mov	r1, #1
   1326c:	mov	r0, r1
   13270:	bx	lr

00013274 <table_compare_ullong@@Base>:
   13274:	cmp	r0, #0
   13278:	beq	132a0 <table_compare_ullong@@Base+0x2c>
   1327c:	cmp	r1, #0
   13280:	beq	132ac <table_compare_ullong@@Base+0x38>
   13284:	ldr	r2, [r1]
   13288:	ldr	r0, [r0]
   1328c:	mov	r1, #0
   13290:	cmp	r0, r2
   13294:	mvncc	r1, #0
   13298:	movwhi	r1, #1
   1329c:	b	132b0 <table_compare_ullong@@Base+0x3c>
   132a0:	cmp	r1, #0
   132a4:	mvnne	r1, #0
   132a8:	b	132b0 <table_compare_ullong@@Base+0x3c>
   132ac:	mov	r1, #1
   132b0:	mov	r0, r1
   132b4:	bx	lr

000132b8 <table_compare_float@@Base>:
   132b8:	cmp	r0, #0
   132bc:	beq	132e8 <table_compare_float@@Base+0x30>
   132c0:	cmp	r1, #0
   132c4:	beq	132f4 <table_compare_float@@Base+0x3c>
   132c8:	vldr	s0, [r1]
   132cc:	vldr	s2, [r0]
   132d0:	mov	r1, #0
   132d4:	vcmpe.f32	s2, s0
   132d8:	vmrs	APSR_nzcv, fpscr
   132dc:	mvnmi	r1, #0
   132e0:	movwgt	r1, #1
   132e4:	b	132f8 <table_compare_float@@Base+0x40>
   132e8:	cmp	r1, #0
   132ec:	mvnne	r1, #0
   132f0:	b	132f8 <table_compare_float@@Base+0x40>
   132f4:	mov	r1, #1
   132f8:	mov	r0, r1
   132fc:	bx	lr

00013300 <table_compare_double@@Base>:
   13300:	cmp	r0, #0
   13304:	beq	13330 <table_compare_double@@Base+0x30>
   13308:	cmp	r1, #0
   1330c:	beq	1333c <table_compare_double@@Base+0x3c>
   13310:	vldr	d16, [r1]
   13314:	vldr	d17, [r0]
   13318:	mov	r1, #0
   1331c:	vcmpe.f64	d17, d16
   13320:	vmrs	APSR_nzcv, fpscr
   13324:	mvnmi	r1, #0
   13328:	movwgt	r1, #1
   1332c:	b	13340 <table_compare_double@@Base+0x40>
   13330:	cmp	r1, #0
   13334:	mvnne	r1, #0
   13338:	b	13340 <table_compare_double@@Base+0x40>
   1333c:	mov	r1, #1
   13340:	mov	r0, r1
   13344:	bx	lr

00013348 <table_compare_ldouble@@Base>:
   13348:	cmp	r0, #0
   1334c:	beq	13378 <table_compare_ldouble@@Base+0x30>
   13350:	cmp	r1, #0
   13354:	beq	13384 <table_compare_ldouble@@Base+0x3c>
   13358:	vldr	d16, [r1]
   1335c:	vldr	d17, [r0]
   13360:	mov	r1, #0
   13364:	vcmpe.f64	d17, d16
   13368:	vmrs	APSR_nzcv, fpscr
   1336c:	mvnmi	r1, #0
   13370:	movwgt	r1, #1
   13374:	b	13388 <table_compare_ldouble@@Base+0x40>
   13378:	cmp	r1, #0
   1337c:	mvnne	r1, #0
   13380:	b	13388 <table_compare_ldouble@@Base+0x40>
   13384:	mov	r1, #1
   13388:	mov	r0, r1
   1338c:	bx	lr

00013390 <table_compare_char@@Base>:
   13390:	cmp	r0, #0
   13394:	beq	133bc <table_compare_char@@Base+0x2c>
   13398:	cmp	r1, #0
   1339c:	beq	133c8 <table_compare_char@@Base+0x38>
   133a0:	ldrb	r2, [r1]
   133a4:	ldrb	r0, [r0]
   133a8:	mov	r1, #0
   133ac:	cmp	r0, r2
   133b0:	mvncc	r1, #0
   133b4:	movwhi	r1, #1
   133b8:	b	133cc <table_compare_char@@Base+0x3c>
   133bc:	cmp	r1, #0
   133c0:	mvnne	r1, #0
   133c4:	b	133cc <table_compare_char@@Base+0x3c>
   133c8:	mov	r1, #1
   133cc:	mov	r0, r1
   133d0:	bx	lr

000133d4 <table_compare_uchar@@Base>:
   133d4:	cmp	r0, #0
   133d8:	beq	13400 <table_compare_uchar@@Base+0x2c>
   133dc:	cmp	r1, #0
   133e0:	beq	1340c <table_compare_uchar@@Base+0x38>
   133e4:	ldrb	r2, [r1]
   133e8:	ldrb	r0, [r0]
   133ec:	mov	r1, #0
   133f0:	cmp	r0, r2
   133f4:	mvncc	r1, #0
   133f8:	movwhi	r1, #1
   133fc:	b	13410 <table_compare_uchar@@Base+0x3c>
   13400:	cmp	r1, #0
   13404:	mvnne	r1, #0
   13408:	b	13410 <table_compare_uchar@@Base+0x3c>
   1340c:	mov	r1, #1
   13410:	mov	r0, r1
   13414:	bx	lr

00013418 <table_compare_string@@Base>:
   13418:	cmp	r0, #0
   1341c:	beq	1342c <table_compare_string@@Base+0x14>
   13420:	cmp	r1, #0
   13424:	beq	13438 <table_compare_string@@Base+0x20>
   13428:	b	11e90 <strcmp@plt>
   1342c:	cmp	r1, #0
   13430:	mvnne	r1, #0
   13434:	b	1343c <table_compare_string@@Base+0x24>
   13438:	mov	r1, #1
   1343c:	mov	r0, r1
   13440:	bx	lr

00013444 <table_compare_ptr@@Base>:
   13444:	mov	r2, #0
   13448:	cmp	r0, r1
   1344c:	mvncc	r2, #0
   13450:	movwhi	r2, #1
   13454:	mov	r0, r2
   13458:	bx	lr

0001345c <table_get_default_compare_function_for_data_type@@Base>:
   1345c:	cmp	r0, #23
   13460:	movwls	r1, #19216	; 0x4b10
   13464:	movhi	r0, #0
   13468:	movtls	r1, #1
   1346c:	ldrls	r0, [r1, r0, lsl #2]
   13470:	bx	lr

00013474 <table_get@@Base>:
   13474:	push	{fp, lr}
   13478:	mov	fp, sp
   1347c:	bl	14024 <table_get_cell_ptr@@Base>
   13480:	ldr	r0, [r0]
   13484:	pop	{fp, pc}

00013488 <table_get_bool@@Base>:
   13488:	push	{fp, lr}
   1348c:	mov	fp, sp
   13490:	bl	14024 <table_get_cell_ptr@@Base>
   13494:	ldr	r0, [r0]
   13498:	ldrb	r0, [r0]
   1349c:	pop	{fp, pc}

000134a0 <table_get_int@@Base>:
   134a0:	push	{fp, lr}
   134a4:	mov	fp, sp
   134a8:	bl	14024 <table_get_cell_ptr@@Base>
   134ac:	ldr	r0, [r0]
   134b0:	ldr	r0, [r0]
   134b4:	pop	{fp, pc}

000134b8 <table_get_uint@@Base>:
   134b8:	push	{fp, lr}
   134bc:	mov	fp, sp
   134c0:	bl	14024 <table_get_cell_ptr@@Base>
   134c4:	ldr	r0, [r0]
   134c8:	ldr	r0, [r0]
   134cc:	pop	{fp, pc}

000134d0 <table_get_int8@@Base>:
   134d0:	push	{fp, lr}
   134d4:	mov	fp, sp
   134d8:	bl	14024 <table_get_cell_ptr@@Base>
   134dc:	ldr	r0, [r0]
   134e0:	ldrsb	r0, [r0]
   134e4:	pop	{fp, pc}

000134e8 <table_get_uint8@@Base>:
   134e8:	push	{fp, lr}
   134ec:	mov	fp, sp
   134f0:	bl	14024 <table_get_cell_ptr@@Base>
   134f4:	ldr	r0, [r0]
   134f8:	ldrb	r0, [r0]
   134fc:	pop	{fp, pc}

00013500 <table_get_int16@@Base>:
   13500:	push	{fp, lr}
   13504:	mov	fp, sp
   13508:	bl	14024 <table_get_cell_ptr@@Base>
   1350c:	ldr	r0, [r0]
   13510:	ldrsh	r0, [r0]
   13514:	pop	{fp, pc}

00013518 <table_get_uint16@@Base>:
   13518:	push	{fp, lr}
   1351c:	mov	fp, sp
   13520:	bl	14024 <table_get_cell_ptr@@Base>
   13524:	ldr	r0, [r0]
   13528:	ldrh	r0, [r0]
   1352c:	pop	{fp, pc}

00013530 <table_get_int32@@Base>:
   13530:	push	{fp, lr}
   13534:	mov	fp, sp
   13538:	bl	14024 <table_get_cell_ptr@@Base>
   1353c:	ldr	r0, [r0]
   13540:	ldr	r0, [r0]
   13544:	pop	{fp, pc}

00013548 <table_get_uint32@@Base>:
   13548:	push	{fp, lr}
   1354c:	mov	fp, sp
   13550:	bl	14024 <table_get_cell_ptr@@Base>
   13554:	ldr	r0, [r0]
   13558:	ldr	r0, [r0]
   1355c:	pop	{fp, pc}

00013560 <table_get_int64@@Base>:
   13560:	push	{fp, lr}
   13564:	mov	fp, sp
   13568:	bl	14024 <table_get_cell_ptr@@Base>
   1356c:	ldr	r0, [r0]
   13570:	ldrd	r0, [r0]
   13574:	pop	{fp, pc}

00013578 <table_get_uint64@@Base>:
   13578:	push	{fp, lr}
   1357c:	mov	fp, sp
   13580:	bl	14024 <table_get_cell_ptr@@Base>
   13584:	ldr	r0, [r0]
   13588:	ldrd	r0, [r0]
   1358c:	pop	{fp, pc}

00013590 <table_get_short@@Base>:
   13590:	push	{fp, lr}
   13594:	mov	fp, sp
   13598:	bl	14024 <table_get_cell_ptr@@Base>
   1359c:	ldr	r0, [r0]
   135a0:	ldrsh	r0, [r0]
   135a4:	pop	{fp, pc}

000135a8 <table_get_ushort@@Base>:
   135a8:	push	{fp, lr}
   135ac:	mov	fp, sp
   135b0:	bl	14024 <table_get_cell_ptr@@Base>
   135b4:	ldr	r0, [r0]
   135b8:	ldrh	r0, [r0]
   135bc:	pop	{fp, pc}

000135c0 <table_get_long@@Base>:
   135c0:	push	{fp, lr}
   135c4:	mov	fp, sp
   135c8:	bl	14024 <table_get_cell_ptr@@Base>
   135cc:	ldr	r0, [r0]
   135d0:	ldr	r0, [r0]
   135d4:	pop	{fp, pc}

000135d8 <table_get_ulong@@Base>:
   135d8:	push	{fp, lr}
   135dc:	mov	fp, sp
   135e0:	bl	14024 <table_get_cell_ptr@@Base>
   135e4:	ldr	r0, [r0]
   135e8:	ldr	r0, [r0]
   135ec:	pop	{fp, pc}

000135f0 <table_get_llong@@Base>:
   135f0:	push	{fp, lr}
   135f4:	mov	fp, sp
   135f8:	bl	14024 <table_get_cell_ptr@@Base>
   135fc:	ldr	r0, [r0]
   13600:	ldrd	r0, [r0]
   13604:	pop	{fp, pc}

00013608 <table_get_ullong@@Base>:
   13608:	push	{fp, lr}
   1360c:	mov	fp, sp
   13610:	bl	14024 <table_get_cell_ptr@@Base>
   13614:	ldr	r0, [r0]
   13618:	ldrd	r0, [r0]
   1361c:	pop	{fp, pc}

00013620 <table_get_float@@Base>:
   13620:	push	{fp, lr}
   13624:	mov	fp, sp
   13628:	bl	14024 <table_get_cell_ptr@@Base>
   1362c:	ldr	r0, [r0]
   13630:	vldr	s0, [r0]
   13634:	pop	{fp, pc}

00013638 <table_get_double@@Base>:
   13638:	push	{fp, lr}
   1363c:	mov	fp, sp
   13640:	bl	14024 <table_get_cell_ptr@@Base>
   13644:	ldr	r0, [r0]
   13648:	vldr	d0, [r0]
   1364c:	pop	{fp, pc}

00013650 <table_get_ldouble@@Base>:
   13650:	push	{fp, lr}
   13654:	mov	fp, sp
   13658:	bl	14024 <table_get_cell_ptr@@Base>
   1365c:	ldr	r0, [r0]
   13660:	vldr	d0, [r0]
   13664:	pop	{fp, pc}

00013668 <table_get_char@@Base>:
   13668:	push	{fp, lr}
   1366c:	mov	fp, sp
   13670:	bl	14024 <table_get_cell_ptr@@Base>
   13674:	ldr	r0, [r0]
   13678:	ldrb	r0, [r0]
   1367c:	pop	{fp, pc}

00013680 <table_get_uchar@@Base>:
   13680:	push	{fp, lr}
   13684:	mov	fp, sp
   13688:	bl	14024 <table_get_cell_ptr@@Base>
   1368c:	ldr	r0, [r0]
   13690:	ldrb	r0, [r0]
   13694:	pop	{fp, pc}

00013698 <table_get_string@@Base>:
   13698:	push	{fp, lr}
   1369c:	mov	fp, sp
   136a0:	bl	14024 <table_get_cell_ptr@@Base>
   136a4:	ldr	r0, [r0]
   136a8:	pop	{fp, pc}

000136ac <table_get_ptr@@Base>:
   136ac:	push	{fp, lr}
   136b0:	mov	fp, sp
   136b4:	bl	14024 <table_get_cell_ptr@@Base>
   136b8:	ldr	r0, [r0]
   136bc:	pop	{fp, pc}

000136c0 <table_row_init@@Base>:
   136c0:	push	{r4, r5, fp, lr}
   136c4:	add	fp, sp, #8
   136c8:	mov	r4, r1
   136cc:	ldr	r1, [r0, #12]
   136d0:	ldr	r5, [r0, #16]
   136d4:	lsl	r0, r1, #2
   136d8:	bl	11ecc <malloc@plt>
   136dc:	str	r0, [r5, r4, lsl #2]
   136e0:	pop	{r4, r5, fp, pc}

000136e4 <table_get_row_ptr@@Base>:
   136e4:	ldr	r0, [r0, #16]
   136e8:	add	r0, r0, r1, lsl #2
   136ec:	bx	lr

000136f0 <table_row_destroy@@Base>:
   136f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   136f4:	add	fp, sp, #24
   136f8:	mov	r4, r1
   136fc:	mov	r5, r0
   13700:	bl	12aa0 <table_get_column_length@@Base>
   13704:	ldr	r8, [r5, #16]
   13708:	cmp	r0, #1
   1370c:	blt	13734 <table_row_destroy@@Base+0x44>
   13710:	mov	r6, r0
   13714:	mov	r7, #0
   13718:	mov	r0, r5
   1371c:	mov	r1, r4
   13720:	mov	r2, r7
   13724:	bl	14040 <table_cell_destroy@@Base>
   13728:	add	r7, r7, #1
   1372c:	cmp	r6, r7
   13730:	bne	13718 <table_row_destroy@@Base+0x28>
   13734:	ldr	r0, [r8, r4, lsl #2]
   13738:	cmp	r0, #0
   1373c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13740:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13744:	b	11ea8 <free@plt>

00013748 <table_get_row_length@@Base>:
   13748:	ldr	r0, [r0, #20]
   1374c:	bx	lr

00013750 <table_add_row@@Base>:
   13750:	push	{r4, r5, r6, r7, fp, lr}
   13754:	add	fp, sp, #16
   13758:	ldr	r5, [r0, #20]
   1375c:	ldr	r1, [r0, #24]
   13760:	mov	r4, r0
   13764:	udiv	r0, r5, r1
   13768:	mls	r0, r0, r1, r5
   1376c:	cmp	r0, #0
   13770:	bne	13794 <table_add_row@@Base+0x44>
   13774:	ldr	r2, [r4, #28]
   13778:	ldr	r0, [r4, #16]
   1377c:	add	r1, r2, r1
   13780:	str	r1, [r4, #28]
   13784:	lsl	r1, r1, #2
   13788:	bl	11eb4 <realloc@plt>
   1378c:	str	r0, [r4, #16]
   13790:	ldr	r5, [r4, #20]
   13794:	mov	r0, r4
   13798:	bl	12aa0 <table_get_column_length@@Base>
   1379c:	mov	r6, r0
   137a0:	ldr	r0, [r4, #12]
   137a4:	ldr	r7, [r4, #16]
   137a8:	lsl	r0, r0, #2
   137ac:	bl	11ecc <malloc@plt>
   137b0:	cmp	r6, #1
   137b4:	str	r0, [r7, r5, lsl #2]
   137b8:	blt	137dc <table_add_row@@Base+0x8c>
   137bc:	mov	r7, #0
   137c0:	mov	r0, r4
   137c4:	mov	r1, r5
   137c8:	mov	r2, r7
   137cc:	bl	14004 <table_cell_init@@Base>
   137d0:	add	r7, r7, #1
   137d4:	cmp	r6, r7
   137d8:	bne	137c0 <table_add_row@@Base+0x70>
   137dc:	ldr	r1, [r4, #20]
   137e0:	mov	r0, r4
   137e4:	mvn	r2, #0
   137e8:	mov	r3, #2
   137ec:	bl	129ac <table_notify@@Base>
   137f0:	ldr	r0, [r4, #20]
   137f4:	add	r1, r0, #1
   137f8:	str	r1, [r4, #20]
   137fc:	pop	{r4, r5, r6, r7, fp, pc}

00013800 <table_remove_row@@Base>:
   13800:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13804:	add	fp, sp, #24
   13808:	ldr	r8, [r0, #20]
   1380c:	mov	r4, r1
   13810:	mov	r5, r0
   13814:	bl	12aa0 <table_get_column_length@@Base>
   13818:	cmp	r0, #1
   1381c:	blt	13868 <table_remove_row@@Base+0x68>
   13820:	mov	r6, r0
   13824:	mov	r7, #0
   13828:	mov	r0, r5
   1382c:	mov	r1, r7
   13830:	bl	12b14 <table_get_column_data_type@@Base>
   13834:	cmp	r0, #23
   13838:	beq	1385c <table_remove_row@@Base+0x5c>
   1383c:	mov	r0, r5
   13840:	mov	r1, r4
   13844:	mov	r2, r7
   13848:	bl	14024 <table_get_cell_ptr@@Base>
   1384c:	ldr	r0, [r0]
   13850:	cmp	r0, #0
   13854:	beq	1385c <table_remove_row@@Base+0x5c>
   13858:	bl	11ea8 <free@plt>
   1385c:	add	r7, r7, #1
   13860:	cmp	r6, r7
   13864:	bne	13828 <table_remove_row@@Base+0x28>
   13868:	ldr	r0, [r5, #16]
   1386c:	ldr	r0, [r0, r4, lsl #2]
   13870:	cmp	r0, #0
   13874:	beq	1387c <table_remove_row@@Base+0x7c>
   13878:	bl	11ea8 <free@plt>
   1387c:	sub	r0, r8, #1
   13880:	cmp	r0, r4
   13884:	ble	138a8 <table_remove_row@@Base+0xa8>
   13888:	mov	r1, r4
   1388c:	ldr	r2, [r5, #16]
   13890:	add	r3, r2, r1, lsl #2
   13894:	ldr	r3, [r3, #4]
   13898:	str	r3, [r2, r1, lsl #2]
   1389c:	add	r1, r1, #1
   138a0:	cmp	r0, r1
   138a4:	bne	1388c <table_remove_row@@Base+0x8c>
   138a8:	ldr	r0, [r5, #20]
   138ac:	ldr	r1, [r5, #24]
   138b0:	sub	r0, r0, #1
   138b4:	udiv	r2, r0, r1
   138b8:	str	r0, [r5, #20]
   138bc:	mls	r0, r2, r1, r0
   138c0:	cmp	r0, #0
   138c4:	bne	138e4 <table_remove_row@@Base+0xe4>
   138c8:	ldr	r2, [r5, #28]
   138cc:	ldr	r0, [r5, #16]
   138d0:	sub	r1, r2, r1
   138d4:	str	r1, [r5, #28]
   138d8:	lsl	r1, r1, #2
   138dc:	bl	11eb4 <realloc@plt>
   138e0:	str	r0, [r5, #16]
   138e4:	mov	r0, r5
   138e8:	mov	r1, r4
   138ec:	mvn	r2, #0
   138f0:	mov	r3, #4
   138f4:	bl	129ac <table_notify@@Base>
   138f8:	mov	r0, #0
   138fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013900 <table_set_row_ptr@@Base>:
   13900:	ldr	r2, [r2]
   13904:	ldr	r0, [r0, #16]
   13908:	str	r2, [r0, r1, lsl #2]
   1390c:	bx	lr

00013910 <table_set@@Base>:
   13910:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13914:	add	fp, sp, #24
   13918:	mov	r8, r3
   1391c:	mov	r4, r2
   13920:	mov	r9, r1
   13924:	mov	r6, r0
   13928:	bl	14024 <table_get_cell_ptr@@Base>
   1392c:	mov	r5, r0
   13930:	mov	r0, r6
   13934:	mov	r1, r4
   13938:	bl	12a78 <table_get_col_ptr@@Base>
   1393c:	ldr	r1, [fp, #8]
   13940:	mvn	r7, #0
   13944:	cmp	r1, #23
   13948:	bhi	13c08 <table_set@@Base+0x2f8>
   1394c:	add	r2, pc, #0
   13950:	ldr	pc, [r2, r1, lsl #2]
   13954:			; <UNDEFINED> instruction: 0x000139b4
   13958:	andeq	r3, r1, r4, asr #19
   1395c:	ldrdeq	r3, [r1], -r4
   13960:	andeq	r3, r1, r4, ror #19
   13964:	strdeq	r3, [r1], -r4
   13968:	andeq	r3, r1, r4, lsl #20
   1396c:	andeq	r3, r1, r4, lsl sl
   13970:	andeq	r3, r1, r4, lsr #20
   13974:	andeq	r3, r1, r4, lsr sl
   13978:	andeq	r3, r1, r4, asr #20
   1397c:	andeq	r3, r1, r4, asr sl
   13980:	andeq	r3, r1, r4, ror #20
   13984:	muleq	r1, ip, sl
   13988:	andeq	r3, r1, ip, lsr #21
   1398c:			; <UNDEFINED> instruction: 0x00013abc
   13990:	andeq	r3, r1, ip, asr #21
   13994:	ldrdeq	r3, [r1], -ip
   13998:	andeq	r3, r1, r0, lsl fp
   1399c:	andeq	r3, r1, r0, lsr #22
   139a0:	andeq	r3, r1, r0, ror #22
   139a4:	andeq	r3, r1, r0, ror fp
   139a8:	andeq	r3, r1, r0, lsl #23
   139ac:			; <UNDEFINED> instruction: 0x00013bbc
   139b0:	andeq	r3, r1, r0, lsl ip
   139b4:	ldr	r0, [r0, #4]
   139b8:	cmp	r0, #0
   139bc:	bne	13c08 <table_set@@Base+0x2f8>
   139c0:	b	13ae8 <table_set@@Base+0x1d8>
   139c4:	ldr	r0, [r0, #4]
   139c8:	cmp	r0, #1
   139cc:	beq	13ae8 <table_set@@Base+0x1d8>
   139d0:	b	13c08 <table_set@@Base+0x2f8>
   139d4:	ldr	r0, [r0, #4]
   139d8:	cmp	r0, #2
   139dc:	beq	13bc8 <table_set@@Base+0x2b8>
   139e0:	b	13c08 <table_set@@Base+0x2f8>
   139e4:	ldr	r0, [r0, #4]
   139e8:	cmp	r0, #3
   139ec:	beq	13bc8 <table_set@@Base+0x2b8>
   139f0:	b	13c08 <table_set@@Base+0x2f8>
   139f4:	ldr	r0, [r0, #4]
   139f8:	cmp	r0, #4
   139fc:	beq	13a70 <table_set@@Base+0x160>
   13a00:	b	13c08 <table_set@@Base+0x2f8>
   13a04:	ldr	r0, [r0, #4]
   13a08:	cmp	r0, #5
   13a0c:	beq	13a70 <table_set@@Base+0x160>
   13a10:	b	13c08 <table_set@@Base+0x2f8>
   13a14:	ldr	r0, [r0, #4]
   13a18:	cmp	r0, #6
   13a1c:	beq	13ae8 <table_set@@Base+0x1d8>
   13a20:	b	13c08 <table_set@@Base+0x2f8>
   13a24:	ldr	r0, [r0, #4]
   13a28:	cmp	r0, #7
   13a2c:	beq	13ae8 <table_set@@Base+0x1d8>
   13a30:	b	13c08 <table_set@@Base+0x2f8>
   13a34:	ldr	r0, [r0, #4]
   13a38:	cmp	r0, #8
   13a3c:	beq	13b2c <table_set@@Base+0x21c>
   13a40:	b	13c08 <table_set@@Base+0x2f8>
   13a44:	ldr	r0, [r0, #4]
   13a48:	cmp	r0, #9
   13a4c:	beq	13b2c <table_set@@Base+0x21c>
   13a50:	b	13c08 <table_set@@Base+0x2f8>
   13a54:	ldr	r0, [r0, #4]
   13a58:	cmp	r0, #10
   13a5c:	beq	13a70 <table_set@@Base+0x160>
   13a60:	b	13c08 <table_set@@Base+0x2f8>
   13a64:	ldr	r0, [r0, #4]
   13a68:	cmp	r0, #11
   13a6c:	bne	13c08 <table_set@@Base+0x2f8>
   13a70:	ldr	r0, [r5]
   13a74:	cmp	r0, #0
   13a78:	bne	13a90 <table_set@@Base+0x180>
   13a7c:	mov	r0, #2
   13a80:	bl	11ecc <malloc@plt>
   13a84:	cmp	r0, #0
   13a88:	str	r0, [r5]
   13a8c:	beq	13c08 <table_set@@Base+0x2f8>
   13a90:	ldrh	r1, [r8]
   13a94:	strh	r1, [r0]
   13a98:	b	13bf0 <table_set@@Base+0x2e0>
   13a9c:	ldr	r0, [r0, #4]
   13aa0:	cmp	r0, #12
   13aa4:	beq	13ae8 <table_set@@Base+0x1d8>
   13aa8:	b	13c08 <table_set@@Base+0x2f8>
   13aac:	ldr	r0, [r0, #4]
   13ab0:	cmp	r0, #13
   13ab4:	beq	13ae8 <table_set@@Base+0x1d8>
   13ab8:	b	13c08 <table_set@@Base+0x2f8>
   13abc:	ldr	r0, [r0, #4]
   13ac0:	cmp	r0, #14
   13ac4:	beq	13b2c <table_set@@Base+0x21c>
   13ac8:	b	13c08 <table_set@@Base+0x2f8>
   13acc:	ldr	r0, [r0, #4]
   13ad0:	cmp	r0, #15
   13ad4:	beq	13b2c <table_set@@Base+0x21c>
   13ad8:	b	13c08 <table_set@@Base+0x2f8>
   13adc:	ldr	r0, [r0, #4]
   13ae0:	cmp	r0, #16
   13ae4:	bne	13c08 <table_set@@Base+0x2f8>
   13ae8:	ldr	r0, [r5]
   13aec:	cmp	r0, #0
   13af0:	bne	13b08 <table_set@@Base+0x1f8>
   13af4:	mov	r0, #4
   13af8:	bl	11ecc <malloc@plt>
   13afc:	cmp	r0, #0
   13b00:	str	r0, [r5]
   13b04:	beq	13c08 <table_set@@Base+0x2f8>
   13b08:	ldr	r1, [r8]
   13b0c:	b	13b58 <table_set@@Base+0x248>
   13b10:	ldr	r0, [r0, #4]
   13b14:	cmp	r0, #17
   13b18:	beq	13b2c <table_set@@Base+0x21c>
   13b1c:	b	13c08 <table_set@@Base+0x2f8>
   13b20:	ldr	r0, [r0, #4]
   13b24:	cmp	r0, #18
   13b28:	bne	13c08 <table_set@@Base+0x2f8>
   13b2c:	ldr	r0, [r5]
   13b30:	cmp	r0, #0
   13b34:	bne	13b4c <table_set@@Base+0x23c>
   13b38:	mov	r0, #8
   13b3c:	bl	11ecc <malloc@plt>
   13b40:	cmp	r0, #0
   13b44:	str	r0, [r5]
   13b48:	beq	13c08 <table_set@@Base+0x2f8>
   13b4c:	ldr	r1, [r8]
   13b50:	ldr	r2, [r8, #4]
   13b54:	str	r2, [r0, #4]
   13b58:	str	r1, [r0]
   13b5c:	b	13bf0 <table_set@@Base+0x2e0>
   13b60:	ldr	r0, [r0, #4]
   13b64:	cmp	r0, #19
   13b68:	beq	13bc8 <table_set@@Base+0x2b8>
   13b6c:	b	13c08 <table_set@@Base+0x2f8>
   13b70:	ldr	r0, [r0, #4]
   13b74:	cmp	r0, #20
   13b78:	beq	13bc8 <table_set@@Base+0x2b8>
   13b7c:	b	13c08 <table_set@@Base+0x2f8>
   13b80:	ldr	r0, [r0, #4]
   13b84:	cmp	r0, #21
   13b88:	bne	13c08 <table_set@@Base+0x2f8>
   13b8c:	mov	r0, r8
   13b90:	bl	11ef0 <strlen@plt>
   13b94:	ldr	r2, [r5]
   13b98:	add	r1, r0, #1
   13b9c:	mov	r0, r2
   13ba0:	bl	11eb4 <realloc@plt>
   13ba4:	cmp	r0, #0
   13ba8:	str	r0, [r5]
   13bac:	beq	13c08 <table_set@@Base+0x2f8>
   13bb0:	mov	r1, r8
   13bb4:	bl	11ec0 <strcpy@plt>
   13bb8:	b	13bf0 <table_set@@Base+0x2e0>
   13bbc:	ldr	r0, [r0, #4]
   13bc0:	cmp	r0, #22
   13bc4:	bne	13c08 <table_set@@Base+0x2f8>
   13bc8:	ldr	r0, [r5]
   13bcc:	cmp	r0, #0
   13bd0:	bne	13be8 <table_set@@Base+0x2d8>
   13bd4:	mov	r0, #1
   13bd8:	bl	11ecc <malloc@plt>
   13bdc:	cmp	r0, #0
   13be0:	str	r0, [r5]
   13be4:	beq	13c08 <table_set@@Base+0x2f8>
   13be8:	ldrb	r1, [r8]
   13bec:	strb	r1, [r0]
   13bf0:	mov	r0, r6
   13bf4:	mov	r1, r9
   13bf8:	mov	r2, r4
   13bfc:	mov	r3, #1
   13c00:	bl	129ac <table_notify@@Base>
   13c04:	mov	r7, #0
   13c08:	mov	r0, r7
   13c0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13c10:	ldr	r0, [r0, #4]
   13c14:	cmp	r0, #23
   13c18:	bne	13c08 <table_set@@Base+0x2f8>
   13c1c:	str	r8, [r5]
   13c20:	b	13bf0 <table_set@@Base+0x2e0>

00013c24 <table_set_bool@@Base>:
   13c24:	push	{fp, lr}
   13c28:	mov	fp, sp
   13c2c:	sub	sp, sp, #8
   13c30:	strb	r3, [fp, #-1]
   13c34:	mov	r3, #22
   13c38:	str	r3, [sp]
   13c3c:	sub	r3, fp, #1
   13c40:	bl	13910 <table_set@@Base>
   13c44:	mov	sp, fp
   13c48:	pop	{fp, pc}

00013c4c <table_set_int@@Base>:
   13c4c:	push	{fp, lr}
   13c50:	mov	fp, sp
   13c54:	sub	sp, sp, #8
   13c58:	str	r3, [sp, #4]
   13c5c:	mov	r3, #0
   13c60:	str	r3, [sp]
   13c64:	add	r3, sp, #4
   13c68:	bl	13910 <table_set@@Base>
   13c6c:	mov	sp, fp
   13c70:	pop	{fp, pc}

00013c74 <table_set_uint@@Base>:
   13c74:	push	{fp, lr}
   13c78:	mov	fp, sp
   13c7c:	sub	sp, sp, #8
   13c80:	str	r3, [sp, #4]
   13c84:	mov	r3, #1
   13c88:	str	r3, [sp]
   13c8c:	add	r3, sp, #4
   13c90:	bl	13910 <table_set@@Base>
   13c94:	mov	sp, fp
   13c98:	pop	{fp, pc}

00013c9c <table_set_int8@@Base>:
   13c9c:	push	{fp, lr}
   13ca0:	mov	fp, sp
   13ca4:	sub	sp, sp, #8
   13ca8:	strb	r3, [fp, #-1]
   13cac:	mov	r3, #2
   13cb0:	str	r3, [sp]
   13cb4:	sub	r3, fp, #1
   13cb8:	bl	13910 <table_set@@Base>
   13cbc:	mov	sp, fp
   13cc0:	pop	{fp, pc}

00013cc4 <table_set_uint8@@Base>:
   13cc4:	push	{fp, lr}
   13cc8:	mov	fp, sp
   13ccc:	sub	sp, sp, #8
   13cd0:	strb	r3, [fp, #-1]
   13cd4:	mov	r3, #3
   13cd8:	str	r3, [sp]
   13cdc:	sub	r3, fp, #1
   13ce0:	bl	13910 <table_set@@Base>
   13ce4:	mov	sp, fp
   13ce8:	pop	{fp, pc}

00013cec <table_set_int16@@Base>:
   13cec:	push	{fp, lr}
   13cf0:	mov	fp, sp
   13cf4:	sub	sp, sp, #8
   13cf8:	strh	r3, [fp, #-2]
   13cfc:	mov	r3, #4
   13d00:	str	r3, [sp]
   13d04:	sub	r3, fp, #2
   13d08:	bl	13910 <table_set@@Base>
   13d0c:	mov	sp, fp
   13d10:	pop	{fp, pc}

00013d14 <table_set_uint16@@Base>:
   13d14:	push	{fp, lr}
   13d18:	mov	fp, sp
   13d1c:	sub	sp, sp, #8
   13d20:	strh	r3, [fp, #-2]
   13d24:	mov	r3, #5
   13d28:	str	r3, [sp]
   13d2c:	sub	r3, fp, #2
   13d30:	bl	13910 <table_set@@Base>
   13d34:	mov	sp, fp
   13d38:	pop	{fp, pc}

00013d3c <table_set_int32@@Base>:
   13d3c:	push	{fp, lr}
   13d40:	mov	fp, sp
   13d44:	sub	sp, sp, #8
   13d48:	str	r3, [sp, #4]
   13d4c:	mov	r3, #6
   13d50:	str	r3, [sp]
   13d54:	add	r3, sp, #4
   13d58:	bl	13910 <table_set@@Base>
   13d5c:	mov	sp, fp
   13d60:	pop	{fp, pc}

00013d64 <table_set_uint32@@Base>:
   13d64:	push	{fp, lr}
   13d68:	mov	fp, sp
   13d6c:	sub	sp, sp, #8
   13d70:	str	r3, [sp, #4]
   13d74:	mov	r3, #7
   13d78:	str	r3, [sp]
   13d7c:	add	r3, sp, #4
   13d80:	bl	13910 <table_set@@Base>
   13d84:	mov	sp, fp
   13d88:	pop	{fp, pc}

00013d8c <table_set_int64@@Base>:
   13d8c:	push	{fp, lr}
   13d90:	mov	fp, sp
   13d94:	sub	sp, sp, #16
   13d98:	ldr	r3, [fp, #12]
   13d9c:	str	r3, [sp, #12]
   13da0:	ldr	r3, [fp, #8]
   13da4:	str	r3, [sp, #8]
   13da8:	mov	r3, #8
   13dac:	str	r3, [sp]
   13db0:	add	r3, sp, #8
   13db4:	bl	13910 <table_set@@Base>
   13db8:	mov	sp, fp
   13dbc:	pop	{fp, pc}

00013dc0 <table_set_uint64@@Base>:
   13dc0:	push	{fp, lr}
   13dc4:	mov	fp, sp
   13dc8:	sub	sp, sp, #16
   13dcc:	ldr	r3, [fp, #12]
   13dd0:	str	r3, [sp, #12]
   13dd4:	ldr	r3, [fp, #8]
   13dd8:	str	r3, [sp, #8]
   13ddc:	mov	r3, #9
   13de0:	str	r3, [sp]
   13de4:	add	r3, sp, #8
   13de8:	bl	13910 <table_set@@Base>
   13dec:	mov	sp, fp
   13df0:	pop	{fp, pc}

00013df4 <table_set_short@@Base>:
   13df4:	push	{fp, lr}
   13df8:	mov	fp, sp
   13dfc:	sub	sp, sp, #8
   13e00:	strh	r3, [fp, #-2]
   13e04:	mov	r3, #10
   13e08:	str	r3, [sp]
   13e0c:	sub	r3, fp, #2
   13e10:	bl	13910 <table_set@@Base>
   13e14:	mov	sp, fp
   13e18:	pop	{fp, pc}

00013e1c <table_set_ushort@@Base>:
   13e1c:	push	{fp, lr}
   13e20:	mov	fp, sp
   13e24:	sub	sp, sp, #8
   13e28:	strh	r3, [fp, #-2]
   13e2c:	mov	r3, #11
   13e30:	str	r3, [sp]
   13e34:	sub	r3, fp, #2
   13e38:	bl	13910 <table_set@@Base>
   13e3c:	mov	sp, fp
   13e40:	pop	{fp, pc}

00013e44 <table_set_long@@Base>:
   13e44:	push	{fp, lr}
   13e48:	mov	fp, sp
   13e4c:	sub	sp, sp, #8
   13e50:	str	r3, [sp, #4]
   13e54:	mov	r3, #12
   13e58:	str	r3, [sp]
   13e5c:	add	r3, sp, #4
   13e60:	bl	13910 <table_set@@Base>
   13e64:	mov	sp, fp
   13e68:	pop	{fp, pc}

00013e6c <table_set_ulong@@Base>:
   13e6c:	push	{fp, lr}
   13e70:	mov	fp, sp
   13e74:	sub	sp, sp, #8
   13e78:	str	r3, [sp, #4]
   13e7c:	mov	r3, #13
   13e80:	str	r3, [sp]
   13e84:	add	r3, sp, #4
   13e88:	bl	13910 <table_set@@Base>
   13e8c:	mov	sp, fp
   13e90:	pop	{fp, pc}

00013e94 <table_set_llong@@Base>:
   13e94:	push	{fp, lr}
   13e98:	mov	fp, sp
   13e9c:	sub	sp, sp, #16
   13ea0:	ldr	r3, [fp, #12]
   13ea4:	str	r3, [sp, #12]
   13ea8:	ldr	r3, [fp, #8]
   13eac:	str	r3, [sp, #8]
   13eb0:	mov	r3, #14
   13eb4:	str	r3, [sp]
   13eb8:	add	r3, sp, #8
   13ebc:	bl	13910 <table_set@@Base>
   13ec0:	mov	sp, fp
   13ec4:	pop	{fp, pc}

00013ec8 <table_set_ullong@@Base>:
   13ec8:	push	{fp, lr}
   13ecc:	mov	fp, sp
   13ed0:	sub	sp, sp, #16
   13ed4:	ldr	r3, [fp, #12]
   13ed8:	str	r3, [sp, #12]
   13edc:	ldr	r3, [fp, #8]
   13ee0:	str	r3, [sp, #8]
   13ee4:	mov	r3, #15
   13ee8:	str	r3, [sp]
   13eec:	add	r3, sp, #8
   13ef0:	bl	13910 <table_set@@Base>
   13ef4:	mov	sp, fp
   13ef8:	pop	{fp, pc}

00013efc <table_set_float@@Base>:
   13efc:	push	{fp, lr}
   13f00:	mov	fp, sp
   13f04:	sub	sp, sp, #8
   13f08:	mov	r3, #16
   13f0c:	vstr	s0, [sp, #4]
   13f10:	str	r3, [sp]
   13f14:	add	r3, sp, #4
   13f18:	bl	13910 <table_set@@Base>
   13f1c:	mov	sp, fp
   13f20:	pop	{fp, pc}

00013f24 <table_set_double@@Base>:
   13f24:	push	{fp, lr}
   13f28:	mov	fp, sp
   13f2c:	sub	sp, sp, #16
   13f30:	mov	r3, #17
   13f34:	vstr	d0, [sp, #8]
   13f38:	str	r3, [sp]
   13f3c:	add	r3, sp, #8
   13f40:	bl	13910 <table_set@@Base>
   13f44:	mov	sp, fp
   13f48:	pop	{fp, pc}

00013f4c <table_set_ldouble@@Base>:
   13f4c:	push	{fp, lr}
   13f50:	mov	fp, sp
   13f54:	sub	sp, sp, #16
   13f58:	mov	r3, #18
   13f5c:	vstr	d0, [sp, #8]
   13f60:	str	r3, [sp]
   13f64:	add	r3, sp, #8
   13f68:	bl	13910 <table_set@@Base>
   13f6c:	mov	sp, fp
   13f70:	pop	{fp, pc}

00013f74 <table_set_string@@Base>:
   13f74:	push	{fp, lr}
   13f78:	mov	fp, sp
   13f7c:	sub	sp, sp, #8
   13f80:	mov	ip, #21
   13f84:	str	ip, [sp]
   13f88:	bl	13910 <table_set@@Base>
   13f8c:	mov	sp, fp
   13f90:	pop	{fp, pc}

00013f94 <table_set_char@@Base>:
   13f94:	push	{fp, lr}
   13f98:	mov	fp, sp
   13f9c:	sub	sp, sp, #8
   13fa0:	strb	r3, [fp, #-1]
   13fa4:	mov	r3, #19
   13fa8:	str	r3, [sp]
   13fac:	sub	r3, fp, #1
   13fb0:	bl	13910 <table_set@@Base>
   13fb4:	mov	sp, fp
   13fb8:	pop	{fp, pc}

00013fbc <table_set_uchar@@Base>:
   13fbc:	push	{fp, lr}
   13fc0:	mov	fp, sp
   13fc4:	sub	sp, sp, #8
   13fc8:	strb	r3, [fp, #-1]
   13fcc:	mov	r3, #20
   13fd0:	str	r3, [sp]
   13fd4:	sub	r3, fp, #1
   13fd8:	bl	13910 <table_set@@Base>
   13fdc:	mov	sp, fp
   13fe0:	pop	{fp, pc}

00013fe4 <table_set_ptr@@Base>:
   13fe4:	push	{fp, lr}
   13fe8:	mov	fp, sp
   13fec:	sub	sp, sp, #8
   13ff0:	mov	ip, #23
   13ff4:	str	ip, [sp]
   13ff8:	bl	13910 <table_set@@Base>
   13ffc:	mov	sp, fp
   14000:	pop	{fp, pc}

00014004 <table_cell_init@@Base>:
   14004:	push	{r4, sl, fp, lr}
   14008:	add	fp, sp, #8
   1400c:	mov	r4, r2
   14010:	bl	136e4 <table_get_row_ptr@@Base>
   14014:	ldr	r0, [r0]
   14018:	mov	r1, #0
   1401c:	str	r1, [r0, r4, lsl #2]
   14020:	pop	{r4, sl, fp, pc}

00014024 <table_get_cell_ptr@@Base>:
   14024:	push	{r4, sl, fp, lr}
   14028:	add	fp, sp, #8
   1402c:	mov	r4, r2
   14030:	bl	136e4 <table_get_row_ptr@@Base>
   14034:	ldr	r0, [r0]
   14038:	add	r0, r0, r4, lsl #2
   1403c:	pop	{r4, sl, fp, pc}

00014040 <table_cell_destroy@@Base>:
   14040:	push	{r4, r5, r6, sl, fp, lr}
   14044:	add	fp, sp, #16
   14048:	mov	r5, r1
   1404c:	mov	r1, r2
   14050:	mov	r4, r2
   14054:	mov	r6, r0
   14058:	bl	12b14 <table_get_column_data_type@@Base>
   1405c:	cmp	r0, #23
   14060:	popeq	{r4, r5, r6, sl, fp, pc}
   14064:	mov	r0, r6
   14068:	mov	r1, r5
   1406c:	bl	136e4 <table_get_row_ptr@@Base>
   14070:	ldr	r0, [r0]
   14074:	ldr	r0, [r0, r4, lsl #2]
   14078:	cmp	r0, #0
   1407c:	beq	14088 <table_cell_destroy@@Base+0x48>
   14080:	pop	{r4, r5, r6, sl, fp, lr}
   14084:	b	11ea8 <free@plt>
   14088:	pop	{r4, r5, r6, sl, fp, pc}

0001408c <table_cell_to_buffer@@Base>:
   1408c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14090:	add	fp, sp, #24
   14094:	sub	sp, sp, #8
   14098:	mov	r7, r1
   1409c:	mov	r1, r2
   140a0:	mov	r5, r3
   140a4:	mov	r6, r2
   140a8:	mov	r4, r0
   140ac:	bl	12b14 <table_get_column_data_type@@Base>
   140b0:	cmp	r0, #23
   140b4:	bhi	143a4 <table_cell_to_buffer@@Base+0x318>
   140b8:	ldr	r8, [fp, #8]
   140bc:	add	r1, pc, #0
   140c0:	ldr	pc, [r1, r0, lsl #2]
   140c4:	andeq	r4, r1, r4, lsr #2
   140c8:	andeq	r4, r1, r8, lsr r1
   140cc:	andeq	r4, r1, ip, asr #2
   140d0:	andeq	r4, r1, r0, ror #2
   140d4:	andeq	r4, r1, r4, ror r1
   140d8:	andeq	r4, r1, r8, lsl #3
   140dc:	muleq	r1, ip, r1
   140e0:			; <UNDEFINED> instruction: 0x000141b0
   140e4:	ldrdeq	r4, [r1], -r0
   140e8:	andeq	r4, r1, r4, ror #3
   140ec:	strdeq	r4, [r1], -r8
   140f0:	andeq	r4, r1, r8, lsl r2
   140f4:	andeq	r4, r1, r8, lsr r2
   140f8:	andeq	r4, r1, r8, asr r2
   140fc:	andeq	r4, r1, r8, ror r2
   14100:	muleq	r1, r8, r2
   14104:			; <UNDEFINED> instruction: 0x000142b8
   14108:	ldrdeq	r4, [r1], -ip
   1410c:	strdeq	r4, [r1], -ip
   14110:	andeq	r4, r1, r8, lsr #6
   14114:	andeq	r4, r1, ip, lsr r3
   14118:	andeq	r4, r1, ip, asr r3
   1411c:	andeq	r4, r1, ip, ror r3
   14120:			; <UNDEFINED> instruction: 0x000143b0
   14124:	mov	r0, r4
   14128:	mov	r1, r7
   1412c:	mov	r2, r6
   14130:	bl	134a0 <table_get_int@@Base>
   14134:	b	1438c <table_cell_to_buffer@@Base+0x300>
   14138:	mov	r0, r4
   1413c:	mov	r1, r7
   14140:	mov	r2, r6
   14144:	bl	134b8 <table_get_uint@@Base>
   14148:	b	141c0 <table_cell_to_buffer@@Base+0x134>
   1414c:	mov	r0, r4
   14150:	mov	r1, r7
   14154:	mov	r2, r6
   14158:	bl	134d0 <table_get_int8@@Base>
   1415c:	b	1438c <table_cell_to_buffer@@Base+0x300>
   14160:	mov	r0, r4
   14164:	mov	r1, r7
   14168:	mov	r2, r6
   1416c:	bl	134e8 <table_get_uint8@@Base>
   14170:	b	141c0 <table_cell_to_buffer@@Base+0x134>
   14174:	mov	r0, r4
   14178:	mov	r1, r7
   1417c:	mov	r2, r6
   14180:	bl	13500 <table_get_int16@@Base>
   14184:	b	1438c <table_cell_to_buffer@@Base+0x300>
   14188:	mov	r0, r4
   1418c:	mov	r1, r7
   14190:	mov	r2, r6
   14194:	bl	13518 <table_get_uint16@@Base>
   14198:	b	141c0 <table_cell_to_buffer@@Base+0x134>
   1419c:	mov	r0, r4
   141a0:	mov	r1, r7
   141a4:	mov	r2, r6
   141a8:	bl	13530 <table_get_int32@@Base>
   141ac:	b	1438c <table_cell_to_buffer@@Base+0x300>
   141b0:	mov	r0, r4
   141b4:	mov	r1, r7
   141b8:	mov	r2, r6
   141bc:	bl	13548 <table_get_uint32@@Base>
   141c0:	movw	r2, #19315	; 0x4b73
   141c4:	mov	r3, r0
   141c8:	movt	r2, #1
   141cc:	b	14398 <table_cell_to_buffer@@Base+0x30c>
   141d0:	mov	r0, r4
   141d4:	mov	r1, r7
   141d8:	mov	r2, r6
   141dc:	bl	13560 <table_get_int64@@Base>
   141e0:	b	14288 <table_cell_to_buffer@@Base+0x1fc>
   141e4:	mov	r0, r4
   141e8:	mov	r1, r7
   141ec:	mov	r2, r6
   141f0:	bl	13578 <table_get_uint64@@Base>
   141f4:	b	142a8 <table_cell_to_buffer@@Base+0x21c>
   141f8:	mov	r0, r4
   141fc:	mov	r1, r7
   14200:	mov	r2, r6
   14204:	bl	13590 <table_get_short@@Base>
   14208:	movw	r2, #19328	; 0x4b80
   1420c:	mov	r3, r0
   14210:	movt	r2, #1
   14214:	b	14398 <table_cell_to_buffer@@Base+0x30c>
   14218:	mov	r0, r4
   1421c:	mov	r1, r7
   14220:	mov	r2, r6
   14224:	bl	135a8 <table_get_ushort@@Base>
   14228:	movw	r2, #19332	; 0x4b84
   1422c:	mov	r3, r0
   14230:	movt	r2, #1
   14234:	b	14398 <table_cell_to_buffer@@Base+0x30c>
   14238:	mov	r0, r4
   1423c:	mov	r1, r7
   14240:	mov	r2, r6
   14244:	bl	135c0 <table_get_long@@Base>
   14248:	movw	r2, #19336	; 0x4b88
   1424c:	mov	r3, r0
   14250:	movt	r2, #1
   14254:	b	14398 <table_cell_to_buffer@@Base+0x30c>
   14258:	mov	r0, r4
   1425c:	mov	r1, r7
   14260:	mov	r2, r6
   14264:	bl	135d8 <table_get_ulong@@Base>
   14268:	movw	r2, #19340	; 0x4b8c
   1426c:	mov	r3, r0
   14270:	movt	r2, #1
   14274:	b	14398 <table_cell_to_buffer@@Base+0x30c>
   14278:	mov	r0, r4
   1427c:	mov	r1, r7
   14280:	mov	r2, r6
   14284:	bl	135f0 <table_get_llong@@Base>
   14288:	movw	r2, #19318	; 0x4b76
   1428c:	stm	sp, {r0, r1}
   14290:	movt	r2, #1
   14294:	b	14318 <table_cell_to_buffer@@Base+0x28c>
   14298:	mov	r0, r4
   1429c:	mov	r1, r7
   142a0:	mov	r2, r6
   142a4:	bl	13608 <table_get_ullong@@Base>
   142a8:	movw	r2, #19323	; 0x4b7b
   142ac:	stm	sp, {r0, r1}
   142b0:	movt	r2, #1
   142b4:	b	14318 <table_cell_to_buffer@@Base+0x28c>
   142b8:	mov	r0, r4
   142bc:	mov	r1, r7
   142c0:	mov	r2, r6
   142c4:	bl	13620 <table_get_float@@Base>
   142c8:	movw	r2, #19347	; 0x4b93
   142cc:	vcvt.f64.f32	d16, s0
   142d0:	vstr	d16, [sp]
   142d4:	movt	r2, #1
   142d8:	b	14318 <table_cell_to_buffer@@Base+0x28c>
   142dc:	mov	r0, r4
   142e0:	mov	r1, r7
   142e4:	mov	r2, r6
   142e8:	bl	13638 <table_get_double@@Base>
   142ec:	movw	r2, #19350	; 0x4b96
   142f0:	vstr	d0, [sp]
   142f4:	movt	r2, #1
   142f8:	b	14318 <table_cell_to_buffer@@Base+0x28c>
   142fc:	mov	r0, r4
   14300:	mov	r1, r7
   14304:	mov	r2, r6
   14308:	bl	13650 <table_get_ldouble@@Base>
   1430c:	movw	r2, #19354	; 0x4b9a
   14310:	vstr	d0, [sp]
   14314:	movt	r2, #1
   14318:	mov	r0, r5
   1431c:	mov	r1, r8
   14320:	bl	11efc <snprintf@plt>
   14324:	b	143a4 <table_cell_to_buffer@@Base+0x318>
   14328:	mov	r0, r4
   1432c:	mov	r1, r7
   14330:	mov	r2, r6
   14334:	bl	13668 <table_get_char@@Base>
   14338:	b	1434c <table_cell_to_buffer@@Base+0x2c0>
   1433c:	mov	r0, r4
   14340:	mov	r1, r7
   14344:	mov	r2, r6
   14348:	bl	13680 <table_get_uchar@@Base>
   1434c:	movw	r2, #19358	; 0x4b9e
   14350:	mov	r3, r0
   14354:	movt	r2, #1
   14358:	b	14398 <table_cell_to_buffer@@Base+0x30c>
   1435c:	mov	r0, r4
   14360:	mov	r1, r7
   14364:	mov	r2, r6
   14368:	bl	13698 <table_get_string@@Base>
   1436c:	movw	r2, #19344	; 0x4b90
   14370:	mov	r3, r0
   14374:	movt	r2, #1
   14378:	b	14398 <table_cell_to_buffer@@Base+0x30c>
   1437c:	mov	r0, r4
   14380:	mov	r1, r7
   14384:	mov	r2, r6
   14388:	bl	13488 <table_get_bool@@Base>
   1438c:	movw	r2, #19312	; 0x4b70
   14390:	mov	r3, r0
   14394:	movt	r2, #1
   14398:	mov	r0, r5
   1439c:	mov	r1, r8
   143a0:	bl	11efc <snprintf@plt>
   143a4:	mov	r0, #0
   143a8:	sub	sp, fp, #24
   143ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   143b0:	mov	r0, r4
   143b4:	mov	r1, r7
   143b8:	mov	r2, r6
   143bc:	bl	136ac <table_get_ptr@@Base>
   143c0:	movw	r2, #19361	; 0x4ba1
   143c4:	mov	r3, r0
   143c8:	movt	r2, #1
   143cc:	b	14398 <table_cell_to_buffer@@Base+0x30c>

000143d0 <table_cell_from_buffer@@Base>:
   143d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143d4:	add	fp, sp, #24
   143d8:	sub	sp, sp, #264	; 0x108
   143dc:	mov	r5, r1
   143e0:	mov	r1, r2
   143e4:	mov	r7, r3
   143e8:	mov	r4, r2
   143ec:	mov	r6, r0
   143f0:	bl	12b14 <table_get_column_data_type@@Base>
   143f4:	cmp	r0, #23
   143f8:	bhi	149cc <table_cell_from_buffer@@Base+0x5fc>
   143fc:	add	r1, pc, #0
   14400:	ldr	pc, [r1, r0, lsl #2]
   14404:	andeq	r4, r1, r4, ror #8
   14408:	muleq	r1, ip, r4
   1440c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14410:	andeq	r4, r1, ip, lsl #10
   14414:	andeq	r4, r1, r4, asr #10
   14418:	andeq	r4, r1, ip, ror r5
   1441c:			; <UNDEFINED> instruction: 0x000145b4
   14420:	andeq	r4, r1, ip, ror #11
   14424:	andeq	r4, r1, r4, lsr #12
   14428:	andeq	r4, r1, r4, ror #12
   1442c:	andeq	r4, r1, r4, lsr #13
   14430:	ldrdeq	r4, [r1], -ip
   14434:	andeq	r4, r1, r4, lsl r7
   14438:	andeq	r4, r1, ip, asr #14
   1443c:	andeq	r4, r1, r4, lsl #15
   14440:	andeq	r4, r1, r4, asr #15
   14444:	andeq	r4, r1, r4, lsl #16
   14448:	andeq	r4, r1, ip, lsr r8
   1444c:	andeq	r4, r1, r4, ror r8
   14450:	andeq	r4, r1, ip, lsr #17
   14454:	andeq	r4, r1, r4, ror #17
   14458:	andeq	r4, r1, ip, lsl r9
   1445c:	andeq	r4, r1, r4, asr r9
   14460:	muleq	r1, r8, r9
   14464:	movw	r1, #19312	; 0x4b70
   14468:	add	r2, sp, #8
   1446c:	mov	r0, r7
   14470:	movt	r1, #1
   14474:	bl	11f08 <__isoc99_sscanf@plt>
   14478:	mvn	r7, #0
   1447c:	cmp	r0, #1
   14480:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   14484:	ldr	r3, [sp, #8]
   14488:	mov	r0, r6
   1448c:	mov	r1, r5
   14490:	mov	r2, r4
   14494:	bl	13c4c <table_set_int@@Base>
   14498:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   1449c:	movw	r1, #19315	; 0x4b73
   144a0:	add	r2, sp, #8
   144a4:	mov	r0, r7
   144a8:	movt	r1, #1
   144ac:	bl	11f08 <__isoc99_sscanf@plt>
   144b0:	mvn	r7, #0
   144b4:	cmp	r0, #1
   144b8:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   144bc:	ldr	r3, [sp, #8]
   144c0:	mov	r0, r6
   144c4:	mov	r1, r5
   144c8:	mov	r2, r4
   144cc:	bl	13c74 <table_set_uint@@Base>
   144d0:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   144d4:	movw	r1, #19364	; 0x4ba4
   144d8:	add	r2, sp, #8
   144dc:	mov	r0, r7
   144e0:	movt	r1, #1
   144e4:	bl	11f08 <__isoc99_sscanf@plt>
   144e8:	mvn	r7, #0
   144ec:	cmp	r0, #1
   144f0:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   144f4:	ldrsb	r3, [sp, #8]
   144f8:	mov	r0, r6
   144fc:	mov	r1, r5
   14500:	mov	r2, r4
   14504:	bl	13c9c <table_set_int8@@Base>
   14508:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   1450c:	movw	r1, #19369	; 0x4ba9
   14510:	add	r2, sp, #8
   14514:	mov	r0, r7
   14518:	movt	r1, #1
   1451c:	bl	11f08 <__isoc99_sscanf@plt>
   14520:	mvn	r7, #0
   14524:	cmp	r0, #1
   14528:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   1452c:	ldrb	r3, [sp, #8]
   14530:	mov	r0, r6
   14534:	mov	r1, r5
   14538:	mov	r2, r4
   1453c:	bl	13cc4 <table_set_uint8@@Base>
   14540:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   14544:	movw	r1, #19328	; 0x4b80
   14548:	add	r2, sp, #8
   1454c:	mov	r0, r7
   14550:	movt	r1, #1
   14554:	bl	11f08 <__isoc99_sscanf@plt>
   14558:	mvn	r7, #0
   1455c:	cmp	r0, #1
   14560:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   14564:	ldrsh	r3, [sp, #8]
   14568:	mov	r0, r6
   1456c:	mov	r1, r5
   14570:	mov	r2, r4
   14574:	bl	13cec <table_set_int16@@Base>
   14578:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   1457c:	movw	r1, #19332	; 0x4b84
   14580:	add	r2, sp, #8
   14584:	mov	r0, r7
   14588:	movt	r1, #1
   1458c:	bl	11f08 <__isoc99_sscanf@plt>
   14590:	mvn	r7, #0
   14594:	cmp	r0, #1
   14598:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   1459c:	ldrh	r3, [sp, #8]
   145a0:	mov	r0, r6
   145a4:	mov	r1, r5
   145a8:	mov	r2, r4
   145ac:	bl	13d14 <table_set_uint16@@Base>
   145b0:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   145b4:	movw	r1, #19312	; 0x4b70
   145b8:	add	r2, sp, #8
   145bc:	mov	r0, r7
   145c0:	movt	r1, #1
   145c4:	bl	11f08 <__isoc99_sscanf@plt>
   145c8:	mvn	r7, #0
   145cc:	cmp	r0, #1
   145d0:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   145d4:	ldr	r3, [sp, #8]
   145d8:	mov	r0, r6
   145dc:	mov	r1, r5
   145e0:	mov	r2, r4
   145e4:	bl	13d3c <table_set_int32@@Base>
   145e8:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   145ec:	movw	r1, #19315	; 0x4b73
   145f0:	add	r2, sp, #8
   145f4:	mov	r0, r7
   145f8:	movt	r1, #1
   145fc:	bl	11f08 <__isoc99_sscanf@plt>
   14600:	mvn	r7, #0
   14604:	cmp	r0, #1
   14608:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   1460c:	ldr	r3, [sp, #8]
   14610:	mov	r0, r6
   14614:	mov	r1, r5
   14618:	mov	r2, r4
   1461c:	bl	13d64 <table_set_uint32@@Base>
   14620:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   14624:	movw	r1, #19318	; 0x4b76
   14628:	add	r2, sp, #8
   1462c:	mov	r0, r7
   14630:	movt	r1, #1
   14634:	bl	11f08 <__isoc99_sscanf@plt>
   14638:	mvn	r7, #0
   1463c:	cmp	r0, #1
   14640:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   14644:	ldr	r0, [sp, #8]
   14648:	ldr	r1, [sp, #12]
   1464c:	mov	r2, r4
   14650:	stm	sp, {r0, r1}
   14654:	mov	r0, r6
   14658:	mov	r1, r5
   1465c:	bl	13d8c <table_set_int64@@Base>
   14660:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   14664:	movw	r1, #19323	; 0x4b7b
   14668:	add	r2, sp, #8
   1466c:	mov	r0, r7
   14670:	movt	r1, #1
   14674:	bl	11f08 <__isoc99_sscanf@plt>
   14678:	mvn	r7, #0
   1467c:	cmp	r0, #1
   14680:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   14684:	ldr	r0, [sp, #8]
   14688:	ldr	r1, [sp, #12]
   1468c:	mov	r2, r4
   14690:	stm	sp, {r0, r1}
   14694:	mov	r0, r6
   14698:	mov	r1, r5
   1469c:	bl	13dc0 <table_set_uint64@@Base>
   146a0:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   146a4:	movw	r1, #19328	; 0x4b80
   146a8:	add	r2, sp, #8
   146ac:	mov	r0, r7
   146b0:	movt	r1, #1
   146b4:	bl	11f08 <__isoc99_sscanf@plt>
   146b8:	mvn	r7, #0
   146bc:	cmp	r0, #1
   146c0:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   146c4:	ldrsh	r3, [sp, #8]
   146c8:	mov	r0, r6
   146cc:	mov	r1, r5
   146d0:	mov	r2, r4
   146d4:	bl	13df4 <table_set_short@@Base>
   146d8:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   146dc:	movw	r1, #19332	; 0x4b84
   146e0:	add	r2, sp, #8
   146e4:	mov	r0, r7
   146e8:	movt	r1, #1
   146ec:	bl	11f08 <__isoc99_sscanf@plt>
   146f0:	mvn	r7, #0
   146f4:	cmp	r0, #1
   146f8:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   146fc:	ldrh	r3, [sp, #8]
   14700:	mov	r0, r6
   14704:	mov	r1, r5
   14708:	mov	r2, r4
   1470c:	bl	13e1c <table_set_ushort@@Base>
   14710:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   14714:	movw	r1, #19336	; 0x4b88
   14718:	add	r2, sp, #8
   1471c:	mov	r0, r7
   14720:	movt	r1, #1
   14724:	bl	11f08 <__isoc99_sscanf@plt>
   14728:	mvn	r7, #0
   1472c:	cmp	r0, #1
   14730:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   14734:	ldr	r3, [sp, #8]
   14738:	mov	r0, r6
   1473c:	mov	r1, r5
   14740:	mov	r2, r4
   14744:	bl	13e44 <table_set_long@@Base>
   14748:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   1474c:	movw	r1, #19340	; 0x4b8c
   14750:	add	r2, sp, #8
   14754:	mov	r0, r7
   14758:	movt	r1, #1
   1475c:	bl	11f08 <__isoc99_sscanf@plt>
   14760:	mvn	r7, #0
   14764:	cmp	r0, #1
   14768:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   1476c:	ldr	r3, [sp, #8]
   14770:	mov	r0, r6
   14774:	mov	r1, r5
   14778:	mov	r2, r4
   1477c:	bl	13e6c <table_set_ulong@@Base>
   14780:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   14784:	movw	r1, #19318	; 0x4b76
   14788:	add	r2, sp, #8
   1478c:	mov	r0, r7
   14790:	movt	r1, #1
   14794:	bl	11f08 <__isoc99_sscanf@plt>
   14798:	mvn	r7, #0
   1479c:	cmp	r0, #1
   147a0:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   147a4:	ldr	r0, [sp, #8]
   147a8:	ldr	r1, [sp, #12]
   147ac:	mov	r2, r4
   147b0:	stm	sp, {r0, r1}
   147b4:	mov	r0, r6
   147b8:	mov	r1, r5
   147bc:	bl	13e94 <table_set_llong@@Base>
   147c0:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   147c4:	movw	r1, #19323	; 0x4b7b
   147c8:	add	r2, sp, #8
   147cc:	mov	r0, r7
   147d0:	movt	r1, #1
   147d4:	bl	11f08 <__isoc99_sscanf@plt>
   147d8:	mvn	r7, #0
   147dc:	cmp	r0, #1
   147e0:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   147e4:	ldr	r0, [sp, #8]
   147e8:	ldr	r1, [sp, #12]
   147ec:	mov	r2, r4
   147f0:	stm	sp, {r0, r1}
   147f4:	mov	r0, r6
   147f8:	mov	r1, r5
   147fc:	bl	13ec8 <table_set_ullong@@Base>
   14800:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   14804:	movw	r1, #19347	; 0x4b93
   14808:	add	r2, sp, #8
   1480c:	mov	r0, r7
   14810:	movt	r1, #1
   14814:	bl	11f08 <__isoc99_sscanf@plt>
   14818:	mvn	r7, #0
   1481c:	cmp	r0, #1
   14820:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   14824:	vldr	s0, [sp, #8]
   14828:	mov	r0, r6
   1482c:	mov	r1, r5
   14830:	mov	r2, r4
   14834:	bl	13efc <table_set_float@@Base>
   14838:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   1483c:	movw	r1, #19350	; 0x4b96
   14840:	add	r2, sp, #8
   14844:	mov	r0, r7
   14848:	movt	r1, #1
   1484c:	bl	11f08 <__isoc99_sscanf@plt>
   14850:	mvn	r7, #0
   14854:	cmp	r0, #1
   14858:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   1485c:	vldr	d0, [sp, #8]
   14860:	mov	r0, r6
   14864:	mov	r1, r5
   14868:	mov	r2, r4
   1486c:	bl	13f24 <table_set_double@@Base>
   14870:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   14874:	movw	r1, #19354	; 0x4b9a
   14878:	add	r2, sp, #8
   1487c:	mov	r0, r7
   14880:	movt	r1, #1
   14884:	bl	11f08 <__isoc99_sscanf@plt>
   14888:	mvn	r7, #0
   1488c:	cmp	r0, #1
   14890:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   14894:	vldr	d0, [sp, #8]
   14898:	mov	r0, r6
   1489c:	mov	r1, r5
   148a0:	mov	r2, r4
   148a4:	bl	13f4c <table_set_ldouble@@Base>
   148a8:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   148ac:	movw	r1, #19358	; 0x4b9e
   148b0:	add	r2, sp, #8
   148b4:	mov	r0, r7
   148b8:	movt	r1, #1
   148bc:	bl	11f08 <__isoc99_sscanf@plt>
   148c0:	mvn	r7, #0
   148c4:	cmp	r0, #1
   148c8:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   148cc:	ldrb	r3, [sp, #8]
   148d0:	mov	r0, r6
   148d4:	mov	r1, r5
   148d8:	mov	r2, r4
   148dc:	bl	13f94 <table_set_char@@Base>
   148e0:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   148e4:	movw	r1, #19358	; 0x4b9e
   148e8:	add	r2, sp, #8
   148ec:	mov	r0, r7
   148f0:	movt	r1, #1
   148f4:	bl	11f08 <__isoc99_sscanf@plt>
   148f8:	mvn	r7, #0
   148fc:	cmp	r0, #1
   14900:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   14904:	ldrb	r3, [sp, #8]
   14908:	mov	r0, r6
   1490c:	mov	r1, r5
   14910:	mov	r2, r4
   14914:	bl	13fbc <table_set_uchar@@Base>
   14918:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   1491c:	movw	r1, #19344	; 0x4b90
   14920:	add	r2, sp, #8
   14924:	mov	r0, r7
   14928:	movt	r1, #1
   1492c:	bl	11f08 <__isoc99_sscanf@plt>
   14930:	mvn	r7, #0
   14934:	cmp	r0, #1
   14938:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   1493c:	add	r3, sp, #8
   14940:	mov	r0, r6
   14944:	mov	r1, r5
   14948:	mov	r2, r4
   1494c:	bl	13f74 <table_set_string@@Base>
   14950:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   14954:	movw	r1, #19312	; 0x4b70
   14958:	add	r2, sp, #8
   1495c:	mov	r0, r7
   14960:	movt	r1, #1
   14964:	bl	11f08 <__isoc99_sscanf@plt>
   14968:	mvn	r7, #0
   1496c:	cmp	r0, #1
   14970:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   14974:	ldr	r0, [sp, #8]
   14978:	cmp	r0, #0
   1497c:	beq	149dc <table_cell_from_buffer@@Base+0x60c>
   14980:	mov	r0, r6
   14984:	mov	r1, r5
   14988:	mov	r2, r4
   1498c:	mov	r3, #1
   14990:	bl	13c24 <table_set_bool@@Base>
   14994:	b	149cc <table_cell_from_buffer@@Base+0x5fc>
   14998:	movw	r1, #19361	; 0x4ba1
   1499c:	add	r2, sp, #8
   149a0:	mov	r0, r7
   149a4:	movt	r1, #1
   149a8:	bl	11f08 <__isoc99_sscanf@plt>
   149ac:	mvn	r7, #0
   149b0:	cmp	r0, #1
   149b4:	bne	149d0 <table_cell_from_buffer@@Base+0x600>
   149b8:	ldr	r3, [sp, #8]
   149bc:	mov	r0, r6
   149c0:	mov	r1, r5
   149c4:	mov	r2, r4
   149c8:	bl	13fe4 <table_set_ptr@@Base>
   149cc:	mov	r7, #0
   149d0:	mov	r0, r7
   149d4:	sub	sp, fp, #24
   149d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   149dc:	mov	r0, r6
   149e0:	mov	r1, r5
   149e4:	mov	r2, r4
   149e8:	mov	r3, #0
   149ec:	mov	r7, #0
   149f0:	bl	13c24 <table_set_bool@@Base>
   149f4:	b	149d0 <table_cell_from_buffer@@Base+0x600>

000149f8 <table_cell_nullify@@Base>:
   149f8:	push	{r4, r5, fp, lr}
   149fc:	add	fp, sp, #8
   14a00:	mov	r4, r2
   14a04:	bl	136e4 <table_get_row_ptr@@Base>
   14a08:	ldr	r5, [r0]
   14a0c:	ldr	r0, [r5, r4, lsl #2]
   14a10:	cmp	r0, #0
   14a14:	beq	14a24 <table_cell_nullify@@Base+0x2c>
   14a18:	bl	11ea8 <free@plt>
   14a1c:	mov	r0, #0
   14a20:	str	r0, [r5, r4, lsl #2]
   14a24:	mov	r0, #0
   14a28:	pop	{r4, r5, fp, pc}

00014a2c <__libc_csu_init@@Base>:
   14a2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a30:	mov	r7, r0
   14a34:	ldr	r6, [pc, #72]	; 14a84 <__libc_csu_init@@Base+0x58>
   14a38:	ldr	r5, [pc, #72]	; 14a88 <__libc_csu_init@@Base+0x5c>
   14a3c:	add	r6, pc, r6
   14a40:	add	r5, pc, r5
   14a44:	sub	r6, r6, r5
   14a48:	mov	r8, r1
   14a4c:	mov	r9, r2
   14a50:	bl	11e70 <strcmp@plt-0x20>
   14a54:	asrs	r6, r6, #2
   14a58:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a5c:	mov	r4, #0
   14a60:	add	r4, r4, #1
   14a64:	ldr	r3, [r5], #4
   14a68:	mov	r2, r9
   14a6c:	mov	r1, r8
   14a70:	mov	r0, r7
   14a74:	blx	r3
   14a78:	cmp	r6, r4
   14a7c:	bne	14a60 <__libc_csu_init@@Base+0x34>
   14a80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a84:	andeq	r0, r1, r8, asr #9
   14a88:	andeq	r0, r1, r0, asr #9

00014a8c <__libc_csu_fini@@Base>:
   14a8c:	bx	lr

Disassembly of section .fini:

00014a90 <.fini>:
   14a90:	push	{r3, lr}
   14a94:	pop	{r3, pc}
