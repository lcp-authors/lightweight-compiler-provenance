
../repos/eddieantonio-ocreval-3ab279a/wordaccsum/wordaccsum:     file format elf32-littlearm


Disassembly of section .init:

00010700 <.init>:
   10700:	push	{r3, lr}
   10704:	bl	108f0 <abort@plt+0xc8>
   10708:	pop	{r3, pc}

Disassembly of section .plt:

0001070c <calloc@plt-0x14>:
   1070c:	push	{lr}		; (str lr, [sp, #-4]!)
   10710:	ldr	lr, [pc, #4]	; 1071c <calloc@plt-0x4>
   10714:	add	lr, pc, lr
   10718:	ldr	pc, [lr, #8]!
   1071c:	andeq	r2, r1, r4, ror #17

00010720 <calloc@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #73728	; 0x12000
   10728:	ldr	pc, [ip, #2276]!	; 0x8e4

0001072c <strcmp@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #73728	; 0x12000
   10734:	ldr	pc, [ip, #2268]!	; 0x8dc

00010738 <strtol@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #73728	; 0x12000
   10740:	ldr	pc, [ip, #2260]!	; 0x8d4

00010744 <fopen@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #73728	; 0x12000
   1074c:	ldr	pc, [ip, #2252]!	; 0x8cc

00010750 <free@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #73728	; 0x12000
   10758:	ldr	pc, [ip, #2244]!	; 0x8c4

0001075c <fgets@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #73728	; 0x12000
   10764:	ldr	pc, [ip, #2236]!	; 0x8bc

00010768 <strdup@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #73728	; 0x12000
   10770:	ldr	pc, [ip, #2228]!	; 0x8b4

00010774 <unlink@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #73728	; 0x12000
   1077c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010780 <__xstat@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #73728	; 0x12000
   10788:	ldr	pc, [ip, #2212]!	; 0x8a4

0001078c <fwrite@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #73728	; 0x12000
   10794:	ldr	pc, [ip, #2204]!	; 0x89c

00010798 <__libc_start_main@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #73728	; 0x12000
   107a0:	ldr	pc, [ip, #2196]!	; 0x894

000107a4 <__sysv_signal@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2188]!	; 0x88c

000107b0 <__gmon_start__@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2180]!	; 0x884

000107bc <getpid@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2172]!	; 0x87c

000107c8 <exit@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2164]!	; 0x874

000107d4 <strlen@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2156]!	; 0x86c

000107e0 <fprintf@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2148]!	; 0x864

000107ec <__isoc99_sscanf@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2140]!	; 0x85c

000107f8 <fclose@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2132]!	; 0x854

00010804 <fputc@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2124]!	; 0x84c

00010810 <sprintf@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2116]!	; 0x844

0001081c <strncmp@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2108]!	; 0x83c

00010828 <abort@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2100]!	; 0x834

Disassembly of section .text:

00010838 <error@@Base-0x11e4>:
   10838:	push	{r4, r5, r6, lr}
   1083c:	sub	sp, sp, #8
   10840:	add	ip, sp, #8
   10844:	mov	r3, #0
   10848:	str	r0, [ip, #-4]!
   1084c:	ldr	r2, [pc, #84]	; 108a8 <abort@plt+0x80>
   10850:	mov	r0, ip
   10854:	mov	r5, r1
   10858:	bl	11b54 <error@@Base+0x138>
   1085c:	ldr	r3, [sp, #4]
   10860:	cmp	r3, #1
   10864:	ble	108a0 <abort@plt+0x78>
   10868:	ldr	r6, [pc, #60]	; 108ac <abort@plt+0x84>
   1086c:	sub	r5, r5, #4
   10870:	mov	r4, #0
   10874:	ldr	r1, [r5, #4]!
   10878:	mov	r0, r6
   1087c:	bl	11150 <abort@plt+0x928>
   10880:	ldr	r3, [sp, #4]
   10884:	add	r4, r4, #1
   10888:	cmp	r3, r4
   1088c:	bgt	10874 <abort@plt+0x4c>
   10890:	mov	r1, #0
   10894:	ldr	r0, [pc, #16]	; 108ac <abort@plt+0x84>
   10898:	bl	1132c <abort@plt+0xb04>
   1089c:	bl	119c4 <abort@plt+0x119c>
   108a0:	ldr	r0, [pc, #8]	; 108b0 <abort@plt+0x88>
   108a4:	bl	11a1c <error@@Base>
   108a8:	andeq	r2, r1, ip, asr r2
   108ac:	andeq	r3, r2, r4, lsl #2
   108b0:	muleq	r1, r0, r2
   108b4:	mov	fp, #0
   108b8:	mov	lr, #0
   108bc:	pop	{r1}		; (ldr r1, [sp], #4)
   108c0:	mov	r2, sp
   108c4:	push	{r2}		; (str r2, [sp, #-4]!)
   108c8:	push	{r0}		; (str r0, [sp, #-4]!)
   108cc:	ldr	ip, [pc, #16]	; 108e4 <abort@plt+0xbc>
   108d0:	push	{ip}		; (str ip, [sp, #-4]!)
   108d4:	ldr	r0, [pc, #12]	; 108e8 <abort@plt+0xc0>
   108d8:	ldr	r3, [pc, #12]	; 108ec <abort@plt+0xc4>
   108dc:	bl	10798 <__libc_start_main@plt>
   108e0:	bl	10828 <abort@plt>
   108e4:	andeq	r2, r1, ip, asr #4
   108e8:	andeq	r0, r1, r8, lsr r8
   108ec:	andeq	r2, r1, ip, ror #3
   108f0:	ldr	r3, [pc, #20]	; 1090c <abort@plt+0xe4>
   108f4:	ldr	r2, [pc, #20]	; 10910 <abort@plt+0xe8>
   108f8:	add	r3, pc, r3
   108fc:	ldr	r2, [r3, r2]
   10900:	cmp	r2, #0
   10904:	bxeq	lr
   10908:	b	107b0 <__gmon_start__@plt>
   1090c:	andeq	r2, r1, r0, lsl #14
   10910:	andeq	r0, r0, r8, rrx
   10914:	ldr	r3, [pc, #28]	; 10938 <abort@plt+0x110>
   10918:	ldr	r0, [pc, #28]	; 1093c <abort@plt+0x114>
   1091c:	sub	r3, r3, r0
   10920:	cmp	r3, #6
   10924:	bxls	lr
   10928:	ldr	r3, [pc, #16]	; 10940 <abort@plt+0x118>
   1092c:	cmp	r3, #0
   10930:	bxeq	lr
   10934:	bx	r3
   10938:	andeq	r3, r2, pc, ror r0
   1093c:	andeq	r3, r2, ip, ror r0
   10940:	andeq	r0, r0, r0
   10944:	ldr	r1, [pc, #36]	; 10970 <abort@plt+0x148>
   10948:	ldr	r0, [pc, #36]	; 10974 <abort@plt+0x14c>
   1094c:	sub	r1, r1, r0
   10950:	asr	r1, r1, #2
   10954:	add	r1, r1, r1, lsr #31
   10958:	asrs	r1, r1, #1
   1095c:	bxeq	lr
   10960:	ldr	r3, [pc, #16]	; 10978 <abort@plt+0x150>
   10964:	cmp	r3, #0
   10968:	bxeq	lr
   1096c:	bx	r3
   10970:	andeq	r3, r2, ip, ror r0
   10974:	andeq	r3, r2, ip, ror r0
   10978:	andeq	r0, r0, r0
   1097c:	push	{r4, lr}
   10980:	ldr	r4, [pc, #24]	; 109a0 <abort@plt+0x178>
   10984:	ldrb	r3, [r4]
   10988:	cmp	r3, #0
   1098c:	popne	{r4, pc}
   10990:	bl	10914 <abort@plt+0xec>
   10994:	mov	r3, #1
   10998:	strb	r3, [r4]
   1099c:	pop	{r4, pc}
   109a0:	muleq	r2, r0, r0
   109a4:	ldr	r0, [pc, #40]	; 109d4 <abort@plt+0x1ac>
   109a8:	ldr	r3, [r0]
   109ac:	cmp	r3, #0
   109b0:	bne	109b8 <abort@plt+0x190>
   109b4:	b	10944 <abort@plt+0x11c>
   109b8:	ldr	r3, [pc, #24]	; 109d8 <abort@plt+0x1b0>
   109bc:	cmp	r3, #0
   109c0:	beq	109b4 <abort@plt+0x18c>
   109c4:	push	{r4, lr}
   109c8:	blx	r3
   109cc:	pop	{r4, lr}
   109d0:	b	10944 <abort@plt+0x11c>
   109d4:	andeq	r2, r2, r4, lsl #30
	...
   109e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109e4:	mov	r2, r0
   109e8:	sub	sp, sp, #12
   109ec:	mov	r7, r0
   109f0:	mov	r4, r1
   109f4:	ldr	r0, [pc, #248]	; 10af4 <abort@plt+0x2cc>
   109f8:	mov	r1, #99	; 0x63
   109fc:	bl	1075c <fgets@plt>
   10a00:	cmp	r0, #0
   10a04:	beq	10ae4 <abort@plt+0x2bc>
   10a08:	mov	r2, r7
   10a0c:	mov	r1, #99	; 0x63
   10a10:	ldr	r0, [pc, #220]	; 10af4 <abort@plt+0x2cc>
   10a14:	bl	1075c <fgets@plt>
   10a18:	cmp	r0, #0
   10a1c:	beq	10ae4 <abort@plt+0x2bc>
   10a20:	ldr	r5, [pc, #204]	; 10af4 <abort@plt+0x2cc>
   10a24:	ldr	r8, [pc, #204]	; 10af8 <abort@plt+0x2d0>
   10a28:	ldr	sl, [pc, #204]	; 10afc <abort@plt+0x2d4>
   10a2c:	mov	fp, #0
   10a30:	add	r6, r5, #29
   10a34:	mov	r9, #99	; 0x63
   10a38:	mov	r2, r7
   10a3c:	mov	r1, r9
   10a40:	mov	r0, r5
   10a44:	bl	1075c <fgets@plt>
   10a48:	add	r3, sp, #4
   10a4c:	mov	r2, sp
   10a50:	mov	r1, r8
   10a54:	cmp	r0, #0
   10a58:	mov	r0, r5
   10a5c:	beq	10a6c <abort@plt+0x244>
   10a60:	bl	107ec <__isoc99_sscanf@plt>
   10a64:	cmp	r0, #2
   10a68:	beq	10a78 <abort@plt+0x250>
   10a6c:	mov	r0, fp
   10a70:	add	sp, sp, #12
   10a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a78:	mov	r1, #0
   10a7c:	mov	r2, #10
   10a80:	mov	r0, r6
   10a84:	bl	10738 <strtol@plt>
   10a88:	mov	r1, sl
   10a8c:	subs	r3, r0, #0
   10a90:	mov	r0, r6
   10a94:	beq	10ac4 <abort@plt+0x29c>
   10a98:	lsl	r3, r3, #3
   10a9c:	ldr	ip, [sp]
   10aa0:	add	r0, r4, r3
   10aa4:	ldr	r1, [r4, r3]
   10aa8:	ldr	r2, [r0, #4]
   10aac:	ldr	lr, [sp, #4]
   10ab0:	add	r1, r1, ip
   10ab4:	add	r2, r2, lr
   10ab8:	str	r1, [r4, r3]
   10abc:	str	r2, [r0, #4]
   10ac0:	b	10a38 <abort@plt+0x210>
   10ac4:	bl	1072c <strcmp@plt>
   10ac8:	mov	r3, #88	; 0x58
   10acc:	cmp	r0, #0
   10ad0:	bne	10a9c <abort@plt+0x274>
   10ad4:	ldr	fp, [sp]
   10ad8:	mov	r3, r0
   10adc:	mov	ip, fp
   10ae0:	b	10aa0 <abort@plt+0x278>
   10ae4:	mov	fp, #0
   10ae8:	mov	r0, fp
   10aec:	add	sp, sp, #12
   10af0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10af4:	muleq	r2, r4, r0
   10af8:			; <UNDEFINED> instruction: 0x000122b0
   10afc:	andeq	r2, r1, r8, lsr #5
   10b00:	ldr	r1, [r1, #8]
   10b04:	ldr	r0, [r0, #8]
   10b08:	b	1182c <abort@plt+0x1004>
   10b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b10:	mov	r2, r0
   10b14:	ldr	r7, [pc, #252]	; 10c18 <abort@plt+0x3f0>
   10b18:	sub	sp, sp, #20
   10b1c:	mov	r8, r0
   10b20:	mov	r9, r1
   10b24:	mov	r0, r7
   10b28:	mov	r1, #99	; 0x63
   10b2c:	bl	1075c <fgets@plt>
   10b30:	cmp	r0, #0
   10b34:	beq	10b90 <abort@plt+0x368>
   10b38:	mov	r2, r8
   10b3c:	mov	r1, #99	; 0x63
   10b40:	mov	r0, r7
   10b44:	bl	1075c <fgets@plt>
   10b48:	cmp	r0, #0
   10b4c:	beq	10b90 <abort@plt+0x368>
   10b50:	ldr	fp, [pc, #196]	; 10c1c <abort@plt+0x3f4>
   10b54:	mov	r4, r7
   10b58:	add	sl, r7, #29
   10b5c:	mov	r2, r8
   10b60:	mov	r1, #99	; 0x63
   10b64:	mov	r0, r4
   10b68:	bl	1075c <fgets@plt>
   10b6c:	add	r3, sp, #12
   10b70:	add	r2, sp, #8
   10b74:	mov	r1, fp
   10b78:	cmp	r0, #0
   10b7c:	mov	r0, r4
   10b80:	beq	10b90 <abort@plt+0x368>
   10b84:	bl	107ec <__isoc99_sscanf@plt>
   10b88:	cmp	r0, #2
   10b8c:	beq	10b98 <abort@plt+0x370>
   10b90:	add	sp, sp, #20
   10b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b98:	mov	r0, r4
   10b9c:	bl	107d4 <strlen@plt>
   10ba0:	mov	r2, #0
   10ba4:	mov	r1, sl
   10ba8:	ldr	r5, [sp, #8]
   10bac:	ldr	r6, [sp, #12]
   10bb0:	add	r3, r7, r0
   10bb4:	mov	r0, r9
   10bb8:	strb	r2, [r3, #-1]
   10bbc:	bl	11530 <abort@plt+0xd08>
   10bc0:	subs	r3, r0, #0
   10bc4:	beq	10be4 <abort@plt+0x3bc>
   10bc8:	ldr	r1, [r3, #12]
   10bcc:	ldr	r2, [r3, #16]
   10bd0:	add	r5, r1, r5
   10bd4:	add	r6, r2, r6
   10bd8:	str	r5, [r3, #12]
   10bdc:	str	r6, [r3, #16]
   10be0:	b	10b5c <abort@plt+0x334>
   10be4:	mov	r1, #20
   10be8:	mov	r0, #1
   10bec:	bl	11a58 <error@@Base+0x3c>
   10bf0:	str	r0, [sp, #4]
   10bf4:	mov	r0, sl
   10bf8:	bl	10768 <strdup@plt>
   10bfc:	ldr	r3, [sp, #4]
   10c00:	mov	r1, r3
   10c04:	str	r0, [r3, #8]
   10c08:	mov	r0, r9
   10c0c:	bl	115b4 <abort@plt+0xd8c>
   10c10:	ldr	r3, [sp, #4]
   10c14:	b	10bc8 <abort@plt+0x3a0>
   10c18:	muleq	r2, r4, r0
   10c1c:			; <UNDEFINED> instruction: 0x000122b0
   10c20:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c24:	add	r7, r1, #4096	; 0x1000
   10c28:	vpush	{d8}
   10c2c:	mov	r6, r0
   10c30:	mov	r0, r1
   10c34:	mov	r4, r2
   10c38:	bl	116bc <abort@plt+0xe94>
   10c3c:	ldr	r1, [r7, #3952]	; 0xf70
   10c40:	ldr	r0, [r7, #3956]	; 0xf74
   10c44:	ldr	r2, [pc, #332]	; 10d98 <abort@plt+0x570>
   10c48:	bl	121c4 <error@@Base+0x7a8>
   10c4c:	mov	r2, r4
   10c50:	ldr	r1, [pc, #324]	; 10d9c <abort@plt+0x574>
   10c54:	mov	r0, r6
   10c58:	bl	107e0 <fprintf@plt>
   10c5c:	mov	r3, r6
   10c60:	mov	r2, #26
   10c64:	mov	r1, #1
   10c68:	ldr	r0, [pc, #304]	; 10da0 <abort@plt+0x578>
   10c6c:	bl	1078c <fwrite@plt>
   10c70:	mov	r3, r6
   10c74:	mov	r2, #3
   10c78:	mov	r1, #1
   10c7c:	ldr	r0, [pc, #288]	; 10da4 <abort@plt+0x57c>
   10c80:	bl	1078c <fwrite@plt>
   10c84:	mov	r1, r6
   10c88:	mov	r0, #10
   10c8c:	bl	10804 <fputc@plt>
   10c90:	ldr	r3, [r7, #3956]	; 0xf74
   10c94:	cmp	r3, #0
   10c98:	ble	10d84 <abort@plt+0x55c>
   10c9c:	vldr	d8, [pc, #236]	; 10d90 <abort@plt+0x568>
   10ca0:	ldr	sl, [pc, #256]	; 10da8 <abort@plt+0x580>
   10ca4:	ldr	fp, [pc, #256]	; 10dac <abort@plt+0x584>
   10ca8:	ldr	r9, [pc, #244]	; 10da4 <abort@plt+0x57c>
   10cac:	mov	r4, #0
   10cb0:	b	10d18 <abort@plt+0x4f0>
   10cb4:	ldr	r2, [r5, #16]
   10cb8:	vmov	s15, r3
   10cbc:	sub	r3, r3, r2
   10cc0:	vmov	s14, r3
   10cc4:	vcvt.f64.s32	d6, s15
   10cc8:	vcvt.f64.s32	d7, s14
   10ccc:	vmul.f64	d7, d7, d8
   10cd0:	vdiv.f64	d5, d7, d6
   10cd4:	vmov	r2, r3, d5
   10cd8:	bl	107e0 <fprintf@plt>
   10cdc:	mov	r3, r6
   10ce0:	mov	r2, #3
   10ce4:	mov	r1, #1
   10ce8:	mov	r0, r9
   10cec:	bl	1078c <fwrite@plt>
   10cf0:	ldr	r3, [r7, #3952]	; 0xf70
   10cf4:	ldr	r1, [pc, #180]	; 10db0 <abort@plt+0x588>
   10cf8:	mov	r0, r6
   10cfc:	ldr	r3, [r3, r8]
   10d00:	add	r4, r4, #1
   10d04:	ldr	r2, [r3, #8]
   10d08:	bl	107e0 <fprintf@plt>
   10d0c:	ldr	r3, [r7, #3956]	; 0xf74
   10d10:	cmp	r3, r4
   10d14:	ble	10d84 <abort@plt+0x55c>
   10d18:	ldr	r3, [r7, #3952]	; 0xf70
   10d1c:	mov	r1, sl
   10d20:	mov	r0, r6
   10d24:	ldr	r5, [r3, r4, lsl #2]
   10d28:	lsl	r8, r4, #2
   10d2c:	cmn	r5, #12
   10d30:	beq	10d6c <abort@plt+0x544>
   10d34:	ldr	r3, [r5, #16]
   10d38:	ldr	r2, [r5, #12]
   10d3c:	bl	107e0 <fprintf@plt>
   10d40:	ldr	r3, [r5, #12]
   10d44:	mov	r1, fp
   10d48:	cmp	r3, #0
   10d4c:	mov	r0, r6
   10d50:	bne	10cb4 <abort@plt+0x48c>
   10d54:	mov	r3, r6
   10d58:	mov	r2, #8
   10d5c:	mov	r1, #1
   10d60:	ldr	r0, [pc, #76]	; 10db4 <abort@plt+0x58c>
   10d64:	bl	1078c <fwrite@plt>
   10d68:	b	10cdc <abort@plt+0x4b4>
   10d6c:	mov	r3, r6
   10d70:	mov	r2, #26
   10d74:	mov	r1, #1
   10d78:	ldr	r0, [pc, #32]	; 10da0 <abort@plt+0x578>
   10d7c:	bl	1078c <fwrite@plt>
   10d80:	b	10cdc <abort@plt+0x4b4>
   10d84:	vpop	{d8}
   10d88:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d8c:	nop			; (mov r0, r0)
   10d90:	andeq	r0, r0, r0
   10d94:	subsmi	r0, r9, r0
   10d98:	andeq	r0, r1, r0, lsl #22
   10d9c:			; <UNDEFINED> instruction: 0x000122b8
   10da0:	andeq	r2, r1, r0, asr #5
   10da4:	ldrdeq	r2, [r1], -ip
   10da8:	andeq	r2, r1, r0, ror #5
   10dac:	strdeq	r2, [r1], -r8
   10db0:	andeq	r2, r1, ip, asr #8
   10db4:	andeq	r2, r1, ip, ror #5
   10db8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10dbc:	vpush	{d8}
   10dc0:	mov	r8, r2
   10dc4:	mov	r2, r3
   10dc8:	mov	r5, r0
   10dcc:	sub	sp, sp, #12
   10dd0:	mov	r6, r1
   10dd4:	ldrb	r3, [sp, #56]	; 0x38
   10dd8:	ldr	r1, [pc, #704]	; 110a0 <abort@plt+0x878>
   10ddc:	mov	r4, r3
   10de0:	str	r3, [sp, #4]
   10de4:	ldrb	r3, [sp, #60]	; 0x3c
   10de8:	str	r3, [sp]
   10dec:	bl	107e0 <fprintf@plt>
   10df0:	mov	r3, r5
   10df4:	mov	r2, #26
   10df8:	mov	r1, #1
   10dfc:	ldr	r0, [pc, #672]	; 110a4 <abort@plt+0x87c>
   10e00:	bl	1078c <fwrite@plt>
   10e04:	mov	r3, r5
   10e08:	mov	r2, #3
   10e0c:	mov	r1, #1
   10e10:	ldr	r0, [pc, #656]	; 110a8 <abort@plt+0x880>
   10e14:	bl	1078c <fwrite@plt>
   10e18:	cmp	r4, #0
   10e1c:	beq	10fa4 <abort@plt+0x77c>
   10e20:	ldr	r2, [pc, #644]	; 110ac <abort@plt+0x884>
   10e24:	ldr	r1, [pc, #644]	; 110b0 <abort@plt+0x888>
   10e28:	mov	r0, r5
   10e2c:	bl	107e0 <fprintf@plt>
   10e30:	cmp	r8, #0
   10e34:	ble	10f04 <abort@plt+0x6dc>
   10e38:	vldr	d8, [pc, #600]	; 11098 <abort@plt+0x870>
   10e3c:	ldr	r9, [pc, #624]	; 110b4 <abort@plt+0x88c>
   10e40:	ldr	fp, [pc, #608]	; 110a8 <abort@plt+0x880>
   10e44:	ldr	sl, [pc, #620]	; 110b8 <abort@plt+0x890>
   10e48:	mov	r4, #1
   10e4c:	b	10eac <abort@plt+0x684>
   10e50:	ldr	r2, [r7, #4]
   10e54:	vmov	s15, r3
   10e58:	sub	r3, r3, r2
   10e5c:	vmov	s14, r3
   10e60:	vcvt.f64.s32	d6, s15
   10e64:	vcvt.f64.s32	d7, s14
   10e68:	vmul.f64	d7, d7, d8
   10e6c:	vdiv.f64	d5, d7, d6
   10e70:	vmov	r2, r3, d5
   10e74:	bl	107e0 <fprintf@plt>
   10e78:	mov	r2, #3
   10e7c:	mov	r1, #1
   10e80:	mov	r3, r5
   10e84:	mov	r0, fp
   10e88:	bl	1078c <fwrite@plt>
   10e8c:	mov	r2, r4
   10e90:	mov	r1, sl
   10e94:	mov	r0, r5
   10e98:	bl	107e0 <fprintf@plt>
   10e9c:	add	r4, r4, #1
   10ea0:	sxth	r4, r4
   10ea4:	cmp	r8, r4
   10ea8:	blt	10ef8 <abort@plt+0x6d0>
   10eac:	ldr	r3, [r6, r4, lsl #3]
   10eb0:	mov	r1, r9
   10eb4:	subs	r2, r3, #0
   10eb8:	mov	r0, r5
   10ebc:	add	r7, r6, r4, lsl #3
   10ec0:	ble	10e9c <abort@plt+0x674>
   10ec4:	ldr	r3, [r7, #4]
   10ec8:	bl	107e0 <fprintf@plt>
   10ecc:	ldr	r3, [r6, r4, lsl #3]
   10ed0:	ldr	r1, [pc, #484]	; 110bc <abort@plt+0x894>
   10ed4:	cmp	r3, #0
   10ed8:	mov	r0, r5
   10edc:	bne	10e50 <abort@plt+0x628>
   10ee0:	mov	r3, r5
   10ee4:	mov	r2, #8
   10ee8:	mov	r1, #1
   10eec:	ldr	r0, [pc, #460]	; 110c0 <abort@plt+0x898>
   10ef0:	bl	1078c <fwrite@plt>
   10ef4:	b	10e78 <abort@plt+0x650>
   10ef8:	ldr	r3, [sp, #4]
   10efc:	cmp	r3, #0
   10f00:	beq	10f8c <abort@plt+0x764>
   10f04:	add	r4, r8, #1
   10f08:	ldr	r2, [r6, r4, lsl #3]
   10f0c:	add	r7, r6, r4, lsl #3
   10f10:	cmp	r2, #0
   10f14:	ble	10f8c <abort@plt+0x764>
   10f18:	ldr	r3, [r7, #4]
   10f1c:	ldr	r1, [pc, #400]	; 110b4 <abort@plt+0x88c>
   10f20:	mov	r0, r5
   10f24:	bl	107e0 <fprintf@plt>
   10f28:	ldr	r2, [r6, r4, lsl #3]
   10f2c:	cmp	r2, #0
   10f30:	beq	11064 <abort@plt+0x83c>
   10f34:	ldr	r3, [r7, #4]
   10f38:	vmov	s15, r2
   10f3c:	sub	r3, r2, r3
   10f40:	vldr	d5, [pc, #336]	; 11098 <abort@plt+0x870>
   10f44:	vmov	s14, r3
   10f48:	vcvt.f64.s32	d6, s15
   10f4c:	ldr	r1, [pc, #360]	; 110bc <abort@plt+0x894>
   10f50:	mov	r0, r5
   10f54:	vcvt.f64.s32	d7, s14
   10f58:	vmul.f64	d7, d7, d5
   10f5c:	vdiv.f64	d5, d7, d6
   10f60:	vmov	r2, r3, d5
   10f64:	bl	107e0 <fprintf@plt>
   10f68:	mov	r2, #3
   10f6c:	mov	r1, #1
   10f70:	mov	r3, r5
   10f74:	ldr	r0, [pc, #300]	; 110a8 <abort@plt+0x880>
   10f78:	bl	1078c <fwrite@plt>
   10f7c:	mov	r2, r8
   10f80:	ldr	r1, [pc, #316]	; 110c4 <abort@plt+0x89c>
   10f84:	mov	r0, r5
   10f88:	bl	107e0 <fprintf@plt>
   10f8c:	ldr	r3, [sp]
   10f90:	cmp	r3, #0
   10f94:	bne	10fc0 <abort@plt+0x798>
   10f98:	add	sp, sp, #12
   10f9c:	vpop	{d8}
   10fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10fa4:	ldr	r2, [pc, #284]	; 110c8 <abort@plt+0x8a0>
   10fa8:	ldr	r1, [pc, #256]	; 110b0 <abort@plt+0x888>
   10fac:	mov	r0, r5
   10fb0:	bl	107e0 <fprintf@plt>
   10fb4:	cmp	r8, #0
   10fb8:	bgt	10e38 <abort@plt+0x610>
   10fbc:	b	10f8c <abort@plt+0x764>
   10fc0:	cmp	r6, #0
   10fc4:	beq	1107c <abort@plt+0x854>
   10fc8:	ldm	r6, {r2, r3}
   10fcc:	ldr	r1, [pc, #224]	; 110b4 <abort@plt+0x88c>
   10fd0:	mov	r0, r5
   10fd4:	bl	107e0 <fprintf@plt>
   10fd8:	ldr	r2, [r6]
   10fdc:	cmp	r2, #0
   10fe0:	beq	1104c <abort@plt+0x824>
   10fe4:	ldr	r3, [r6, #4]
   10fe8:	vmov	s15, r2
   10fec:	sub	r3, r2, r3
   10ff0:	vldr	d5, [pc, #160]	; 11098 <abort@plt+0x870>
   10ff4:	vmov	s14, r3
   10ff8:	vcvt.f64.s32	d6, s15
   10ffc:	ldr	r1, [pc, #184]	; 110bc <abort@plt+0x894>
   11000:	mov	r0, r5
   11004:	vcvt.f64.s32	d7, s14
   11008:	vmul.f64	d7, d7, d5
   1100c:	vdiv.f64	d5, d7, d6
   11010:	vmov	r2, r3, d5
   11014:	bl	107e0 <fprintf@plt>
   11018:	mov	r3, r5
   1101c:	mov	r2, #3
   11020:	mov	r1, #1
   11024:	ldr	r0, [pc, #124]	; 110a8 <abort@plt+0x880>
   11028:	bl	1078c <fwrite@plt>
   1102c:	mov	r3, r5
   11030:	mov	r2, #7
   11034:	mov	r1, #1
   11038:	ldr	r0, [pc, #140]	; 110cc <abort@plt+0x8a4>
   1103c:	add	sp, sp, #12
   11040:	vpop	{d8}
   11044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11048:	b	1078c <fwrite@plt>
   1104c:	mov	r3, r5
   11050:	mov	r2, #8
   11054:	mov	r1, #1
   11058:	ldr	r0, [pc, #96]	; 110c0 <abort@plt+0x898>
   1105c:	bl	1078c <fwrite@plt>
   11060:	b	11018 <abort@plt+0x7f0>
   11064:	mov	r3, r5
   11068:	mov	r2, #8
   1106c:	mov	r1, #1
   11070:	ldr	r0, [pc, #72]	; 110c0 <abort@plt+0x898>
   11074:	bl	1078c <fwrite@plt>
   11078:	b	10f68 <abort@plt+0x740>
   1107c:	mov	r3, r5
   11080:	mov	r2, #26
   11084:	mov	r1, #1
   11088:	ldr	r0, [pc, #20]	; 110a4 <abort@plt+0x87c>
   1108c:	bl	1078c <fwrite@plt>
   11090:	b	11018 <abort@plt+0x7f0>
   11094:	nop			; (mov r0, r0)
   11098:	andeq	r0, r0, r0
   1109c:	subsmi	r0, r9, r0
   110a0:			; <UNDEFINED> instruction: 0x000122b8
   110a4:	andeq	r2, r1, r0, asr #5
   110a8:	ldrdeq	r2, [r1], -ip
   110ac:	andeq	r2, r1, r0, lsr #6
   110b0:	andeq	r2, r1, ip, asr #8
   110b4:	andeq	r2, r1, r0, ror #5
   110b8:	andeq	r2, r1, r0, lsl #6
   110bc:	strdeq	r2, [r1], -r8
   110c0:	andeq	r2, r1, ip, ror #5
   110c4:	andeq	r2, r1, ip, lsl #6
   110c8:	andeq	r2, r1, r8, lsl r3
   110cc:	andeq	r2, r1, r8, lsr #5
   110d0:	ldr	ip, [r0]
   110d4:	ldr	r3, [r0, #4]
   110d8:	add	r1, ip, r1
   110dc:	add	r2, r3, r2
   110e0:	stm	r0, {r1, r2}
   110e4:	bx	lr
   110e8:	push	{r4, r5, r6, r7, r8, lr}
   110ec:	mov	r6, r2
   110f0:	mov	r5, r3
   110f4:	mov	r7, r0
   110f8:	mov	r8, r1
   110fc:	bl	11530 <abort@plt+0xd08>
   11100:	subs	r4, r0, #0
   11104:	beq	11124 <abort@plt+0x8fc>
   11108:	ldr	r0, [r4, #12]
   1110c:	ldr	r1, [r4, #16]
   11110:	add	r2, r0, r6
   11114:	add	r3, r1, r5
   11118:	str	r2, [r4, #12]
   1111c:	str	r3, [r4, #16]
   11120:	pop	{r4, r5, r6, r7, r8, pc}
   11124:	mov	r1, #20
   11128:	mov	r0, #1
   1112c:	bl	11a58 <error@@Base+0x3c>
   11130:	mov	r4, r0
   11134:	mov	r0, r8
   11138:	bl	10768 <strdup@plt>
   1113c:	mov	r1, r4
   11140:	str	r0, [r4, #8]
   11144:	mov	r0, r7
   11148:	bl	115b4 <abort@plt+0xd8c>
   1114c:	b	11108 <abort@plt+0x8e0>
   11150:	push	{r4, r5, r6, r7, lr}
   11154:	mov	r6, r1
   11158:	sub	sp, sp, #12
   1115c:	ldr	r1, [pc, #428]	; 11310 <abort@plt+0xae8>
   11160:	mov	r5, r0
   11164:	mov	r0, r6
   11168:	bl	11aec <error@@Base+0xd0>
   1116c:	mov	r1, #99	; 0x63
   11170:	mov	r2, r0
   11174:	mov	r4, r0
   11178:	ldr	r0, [pc, #404]	; 11314 <abort@plt+0xaec>
   1117c:	bl	1075c <fgets@plt>
   11180:	cmp	r0, #0
   11184:	beq	111fc <abort@plt+0x9d4>
   11188:	mov	r2, #45	; 0x2d
   1118c:	ldr	r1, [pc, #388]	; 11318 <abort@plt+0xaf0>
   11190:	ldr	r0, [pc, #380]	; 11314 <abort@plt+0xaec>
   11194:	bl	1081c <strncmp@plt>
   11198:	cmp	r0, #0
   1119c:	bne	111fc <abort@plt+0x9d4>
   111a0:	mov	r2, r4
   111a4:	mov	r1, #99	; 0x63
   111a8:	ldr	r0, [pc, #356]	; 11314 <abort@plt+0xaec>
   111ac:	bl	1075c <fgets@plt>
   111b0:	cmp	r0, #0
   111b4:	beq	111fc <abort@plt+0x9d4>
   111b8:	ldr	r1, [pc, #348]	; 1131c <abort@plt+0xaf4>
   111bc:	ldr	r0, [pc, #336]	; 11314 <abort@plt+0xaec>
   111c0:	bl	1072c <strcmp@plt>
   111c4:	cmp	r0, #0
   111c8:	bne	111fc <abort@plt+0x9d4>
   111cc:	mov	r2, r4
   111d0:	mov	r1, #99	; 0x63
   111d4:	ldr	r0, [pc, #312]	; 11314 <abort@plt+0xaec>
   111d8:	bl	1075c <fgets@plt>
   111dc:	cmp	r0, #0
   111e0:	beq	111fc <abort@plt+0x9d4>
   111e4:	mov	r2, sp
   111e8:	ldr	r1, [pc, #304]	; 11320 <abort@plt+0xaf8>
   111ec:	ldr	r0, [pc, #288]	; 11314 <abort@plt+0xaec>
   111f0:	bl	107ec <__isoc99_sscanf@plt>
   111f4:	cmp	r0, #1
   111f8:	beq	11210 <abort@plt+0x9e8>
   111fc:	cmp	r6, #0
   11200:	ldr	r1, [pc, #284]	; 11324 <abort@plt+0xafc>
   11204:	ldr	r0, [pc, #284]	; 11328 <abort@plt+0xb00>
   11208:	movne	r1, r6
   1120c:	bl	11aa4 <error@@Base+0x88>
   11210:	mov	r2, r4
   11214:	mov	r1, #99	; 0x63
   11218:	ldr	r0, [pc, #244]	; 11314 <abort@plt+0xaec>
   1121c:	bl	1075c <fgets@plt>
   11220:	cmp	r0, #0
   11224:	beq	111fc <abort@plt+0x9d4>
   11228:	add	r2, sp, #4
   1122c:	ldr	r1, [pc, #236]	; 11320 <abort@plt+0xaf8>
   11230:	ldr	r0, [pc, #220]	; 11314 <abort@plt+0xaec>
   11234:	bl	107ec <__isoc99_sscanf@plt>
   11238:	cmp	r0, #1
   1123c:	bne	111fc <abort@plt+0x9d4>
   11240:	mov	r2, r4
   11244:	mov	r1, #99	; 0x63
   11248:	ldr	r0, [pc, #196]	; 11314 <abort@plt+0xaec>
   1124c:	bl	1075c <fgets@plt>
   11250:	cmp	r0, #0
   11254:	beq	111fc <abort@plt+0x9d4>
   11258:	mov	r2, r4
   1125c:	mov	r1, #99	; 0x63
   11260:	ldr	r0, [pc, #172]	; 11314 <abort@plt+0xaec>
   11264:	bl	1075c <fgets@plt>
   11268:	cmp	r0, #0
   1126c:	beq	111fc <abort@plt+0x9d4>
   11270:	ldr	r0, [sp, #4]
   11274:	ldr	r2, [r5, #4]
   11278:	ldr	r3, [r5]
   1127c:	ldr	r1, [sp]
   11280:	add	r2, r2, r0
   11284:	add	r3, r3, r1
   11288:	str	r3, [r5]
   1128c:	str	r2, [r5, #4]
   11290:	add	r1, r5, #8
   11294:	mov	r0, r4
   11298:	bl	109e0 <abort@plt+0x1b8>
   1129c:	add	r1, r5, #416	; 0x1a0
   112a0:	mov	r7, r0
   112a4:	mov	r0, r4
   112a8:	bl	109e0 <abort@plt+0x1b8>
   112ac:	add	r1, r5, #824	; 0x338
   112b0:	mov	r6, r0
   112b4:	mov	r0, r4
   112b8:	bl	109e0 <abort@plt+0x1b8>
   112bc:	ldr	r3, [sp]
   112c0:	cmp	r3, #0
   112c4:	ble	11300 <abort@plt+0xad8>
   112c8:	add	r1, r5, #920	; 0x398
   112cc:	mov	r0, r4
   112d0:	bl	109e0 <abort@plt+0x1b8>
   112d4:	cmp	r7, #0
   112d8:	ble	112e8 <abort@plt+0xac0>
   112dc:	add	r1, r5, #992	; 0x3e0
   112e0:	mov	r0, r4
   112e4:	bl	10b0c <abort@plt+0x2e4>
   112e8:	cmp	r6, #0
   112ec:	ble	11300 <abort@plt+0xad8>
   112f0:	add	r1, r5, #9024	; 0x2340
   112f4:	add	r1, r1, #24
   112f8:	mov	r0, r4
   112fc:	bl	10b0c <abort@plt+0x2e4>
   11300:	mov	r0, r4
   11304:	bl	118c0 <abort@plt+0x1098>
   11308:	add	sp, sp, #12
   1130c:	pop	{r4, r5, r6, r7, pc}
   11310:	andeq	r2, r1, r0, lsr r3
   11314:	muleq	r2, r4, r0
   11318:	andeq	r2, r1, r4, lsr r3
   1131c:	andeq	r2, r1, r4, ror #6
   11320:			; <UNDEFINED> instruction: 0x000122b4
   11324:	andeq	r2, r1, r8, lsr #6
   11328:	muleq	r1, r4, r3
   1132c:	mov	r3, r1
   11330:	push	{r4, r5, r6, r7, lr}
   11334:	mov	r4, r0
   11338:	sub	sp, sp, #12
   1133c:	ldr	r1, [pc, #380]	; 114c0 <abort@plt+0xc98>
   11340:	mov	r0, r3
   11344:	bl	11aec <error@@Base+0xd0>
   11348:	ldr	r3, [pc, #372]	; 114c4 <abort@plt+0xc9c>
   1134c:	ldr	r2, [pc, #372]	; 114c8 <abort@plt+0xca0>
   11350:	ldr	r1, [pc, #372]	; 114cc <abort@plt+0xca4>
   11354:	mov	r5, r0
   11358:	bl	107e0 <fprintf@plt>
   1135c:	ldr	r2, [r4]
   11360:	ldr	r1, [pc, #360]	; 114d0 <abort@plt+0xca8>
   11364:	mov	r0, r5
   11368:	bl	107e0 <fprintf@plt>
   1136c:	ldr	r2, [r4, #4]
   11370:	mov	r0, r5
   11374:	ldr	r1, [pc, #344]	; 114d4 <abort@plt+0xcac>
   11378:	bl	107e0 <fprintf@plt>
   1137c:	ldr	r2, [r4]
   11380:	cmp	r2, #0
   11384:	beq	114a0 <abort@plt+0xc78>
   11388:	ldr	r3, [r4, #4]
   1138c:	vmov	s15, r2
   11390:	sub	r3, r2, r3
   11394:	vldr	d5, [pc, #284]	; 114b8 <abort@plt+0xc90>
   11398:	vmov	s14, r3
   1139c:	vcvt.f64.s32	d6, s15
   113a0:	ldr	r1, [pc, #304]	; 114d8 <abort@plt+0xcb0>
   113a4:	mov	r0, r5
   113a8:	vcvt.f64.s32	d7, s14
   113ac:	vmul.f64	d7, d7, d5
   113b0:	vdiv.f64	d5, d7, d6
   113b4:	vmov	r2, r3, d5
   113b8:	bl	107e0 <fprintf@plt>
   113bc:	mov	r1, #1
   113c0:	mov	r6, r1
   113c4:	mov	r7, #0
   113c8:	mov	r3, r5
   113cc:	mov	r2, #12
   113d0:	ldr	r0, [pc, #260]	; 114dc <abort@plt+0xcb4>
   113d4:	bl	1078c <fwrite@plt>
   113d8:	ldr	r3, [pc, #256]	; 114e0 <abort@plt+0xcb8>
   113dc:	mov	r2, #50	; 0x32
   113e0:	add	r1, r4, #8
   113e4:	mov	r0, r5
   113e8:	str	r6, [sp, #4]
   113ec:	str	r7, [sp]
   113f0:	bl	10db8 <abort@plt+0x590>
   113f4:	ldr	r3, [pc, #232]	; 114e4 <abort@plt+0xcbc>
   113f8:	mov	r2, #50	; 0x32
   113fc:	add	r1, r4, #416	; 0x1a0
   11400:	mov	r0, r5
   11404:	str	r6, [sp, #4]
   11408:	str	r7, [sp]
   1140c:	bl	10db8 <abort@plt+0x590>
   11410:	ldr	r3, [pc, #208]	; 114e8 <abort@plt+0xcc0>
   11414:	str	r6, [sp, #4]
   11418:	str	r6, [sp]
   1141c:	mov	r2, #10
   11420:	add	r1, r4, #824	; 0x338
   11424:	mov	r0, r5
   11428:	bl	10db8 <abort@plt+0x590>
   1142c:	ldr	r3, [r4]
   11430:	cmp	r3, r7
   11434:	ble	11490 <abort@plt+0xc68>
   11438:	ldr	r3, [pc, #172]	; 114ec <abort@plt+0xcc4>
   1143c:	str	r7, [sp, #4]
   11440:	str	r7, [sp]
   11444:	mov	r2, #8
   11448:	add	r1, r4, #920	; 0x398
   1144c:	mov	r0, r5
   11450:	bl	10db8 <abort@plt+0x590>
   11454:	ldr	r3, [r4, #8]
   11458:	cmp	r3, r7
   1145c:	ble	11470 <abort@plt+0xc48>
   11460:	ldr	r2, [pc, #120]	; 114e0 <abort@plt+0xcb8>
   11464:	add	r1, r4, #992	; 0x3e0
   11468:	mov	r0, r5
   1146c:	bl	10c20 <abort@plt+0x3f8>
   11470:	ldr	r3, [r4, #416]	; 0x1a0
   11474:	cmp	r3, #0
   11478:	ble	11490 <abort@plt+0xc68>
   1147c:	add	r1, r4, #9024	; 0x2340
   11480:	add	r1, r1, #24
   11484:	ldr	r2, [pc, #88]	; 114e4 <abort@plt+0xcbc>
   11488:	mov	r0, r5
   1148c:	bl	10c20 <abort@plt+0x3f8>
   11490:	mov	r0, r5
   11494:	add	sp, sp, #12
   11498:	pop	{r4, r5, r6, r7, lr}
   1149c:	b	118c0 <abort@plt+0x1098>
   114a0:	mov	r3, r5
   114a4:	mov	r2, #8
   114a8:	mov	r1, #1
   114ac:	ldr	r0, [pc, #60]	; 114f0 <abort@plt+0xcc8>
   114b0:	bl	1078c <fwrite@plt>
   114b4:	b	113bc <abort@plt+0xb94>
   114b8:	andeq	r0, r0, r0
   114bc:	subsmi	r0, r9, r0
   114c0:	andeq	r2, r1, r8, lsr #7
   114c4:	andeq	r2, r1, r4, ror #6
   114c8:	andeq	r2, r1, r4, lsr r3
   114cc:	andeq	r2, r1, ip, lsr #7
   114d0:			; <UNDEFINED> instruction: 0x000123b4
   114d4:	andeq	r2, r1, r4, asr #7
   114d8:	strdeq	r2, [r1], -r8
   114dc:	ldrdeq	r2, [r1], -ip
   114e0:	andeq	r2, r1, ip, ror #7
   114e4:	strdeq	r2, [r1], -r8
   114e8:	andeq	r2, r1, r8, lsl #8
   114ec:	andeq	r2, r1, r0, lsr #8
   114f0:	andeq	r2, r1, ip, ror #5
   114f4:	push	{r4, r5, r6, lr}
   114f8:	add	r5, r0, #8000	; 0x1f40
   114fc:	mov	r6, r0
   11500:	add	r5, r5, #48	; 0x30
   11504:	mov	r4, r0
   11508:	mov	r0, r4
   1150c:	add	r4, r4, #16
   11510:	bl	11dd4 <error@@Base+0x3b8>
   11514:	cmp	r5, r4
   11518:	bne	11508 <abort@plt+0xce0>
   1151c:	add	r6, r6, #4096	; 0x1000
   11520:	mov	r3, #0
   11524:	str	r3, [r6, #3952]	; 0xf70
   11528:	str	r3, [r6, #3956]	; 0xf74
   1152c:	pop	{r4, r5, r6, pc}
   11530:	push	{r4, r5, r6, lr}
   11534:	mov	r5, r1
   11538:	ldrb	r3, [r1]
   1153c:	cmp	r3, #0
   11540:	beq	11578 <abort@plt+0xd50>
   11544:	mov	r2, #0
   11548:	add	r2, r2, r3
   1154c:	ldrb	r3, [r1, #1]!
   11550:	cmp	r3, #0
   11554:	bne	11548 <abort@plt+0xd20>
   11558:	ldr	r1, [pc, #80]	; 115b0 <abort@plt+0xd88>
   1155c:	asr	r3, r2, #31
   11560:	smull	ip, r1, r1, r2
   11564:	add	r1, r1, r2
   11568:	rsb	r3, r3, r1, asr #8
   1156c:	rsb	r1, r3, r3, lsl #6
   11570:	rsb	r3, r3, r1, lsl #3
   11574:	sub	r3, r2, r3
   11578:	ldr	r4, [r0, r3, lsl #4]
   1157c:	cmp	r4, #0
   11580:	bne	11594 <abort@plt+0xd6c>
   11584:	b	115a8 <abort@plt+0xd80>
   11588:	ldr	r4, [r4, #4]
   1158c:	cmp	r4, #0
   11590:	beq	115a8 <abort@plt+0xd80>
   11594:	ldr	r1, [r4, #8]
   11598:	mov	r0, r5
   1159c:	bl	1072c <strcmp@plt>
   115a0:	cmp	r0, #0
   115a4:	bne	11588 <abort@plt+0xd60>
   115a8:	mov	r0, r4
   115ac:	pop	{r4, r5, r6, pc}
   115b0:	subhi	r4, sl, #1552	; 0x610
   115b4:	ldr	ip, [r1, #8]
   115b8:	push	{r4, lr}
   115bc:	ldrb	r3, [ip]
   115c0:	cmp	r3, #0
   115c4:	beq	11600 <abort@plt+0xdd8>
   115c8:	mov	r2, #0
   115cc:	add	r2, r2, r3
   115d0:	ldrb	r3, [ip, #1]!
   115d4:	cmp	r3, #0
   115d8:	bne	115cc <abort@plt+0xda4>
   115dc:	ldr	ip, [pc, #80]	; 11634 <abort@plt+0xe0c>
   115e0:	asr	r3, r2, #31
   115e4:	smull	lr, ip, ip, r2
   115e8:	add	ip, ip, r2
   115ec:	rsb	r3, r3, ip, asr #8
   115f0:	rsb	ip, r3, r3, lsl #6
   115f4:	rsb	r3, r3, ip, lsl #3
   115f8:	sub	r3, r2, r3
   115fc:	lsl	r3, r3, #4
   11600:	add	r4, r0, #4096	; 0x1000
   11604:	add	r0, r0, r3
   11608:	bl	11dec <error@@Base+0x3d0>
   1160c:	ldr	r0, [r4, #3952]	; 0xf70
   11610:	cmp	r0, #0
   11614:	beq	11624 <abort@plt+0xdfc>
   11618:	bl	10750 <free@plt>
   1161c:	mov	r3, #0
   11620:	str	r3, [r4, #3952]	; 0xf70
   11624:	ldr	r3, [r4, #3956]	; 0xf74
   11628:	add	r3, r3, #1
   1162c:	str	r3, [r4, #3956]	; 0xf74
   11630:	pop	{r4, pc}
   11634:	subhi	r4, sl, #1552	; 0x610
   11638:	ldr	ip, [r1, #8]
   1163c:	push	{r4, lr}
   11640:	ldrb	r3, [ip]
   11644:	cmp	r3, #0
   11648:	beq	11684 <abort@plt+0xe5c>
   1164c:	mov	r2, #0
   11650:	add	r2, r2, r3
   11654:	ldrb	r3, [ip, #1]!
   11658:	cmp	r3, #0
   1165c:	bne	11650 <abort@plt+0xe28>
   11660:	ldr	ip, [pc, #80]	; 116b8 <abort@plt+0xe90>
   11664:	asr	r3, r2, #31
   11668:	smull	lr, ip, ip, r2
   1166c:	add	ip, ip, r2
   11670:	rsb	r3, r3, ip, asr #8
   11674:	rsb	ip, r3, r3, lsl #6
   11678:	rsb	r3, r3, ip, lsl #3
   1167c:	sub	r3, r2, r3
   11680:	lsl	r3, r3, #4
   11684:	add	r4, r0, #4096	; 0x1000
   11688:	add	r0, r0, r3
   1168c:	bl	11f1c <error@@Base+0x500>
   11690:	ldr	r0, [r4, #3952]	; 0xf70
   11694:	cmp	r0, #0
   11698:	beq	116a8 <abort@plt+0xe80>
   1169c:	bl	10750 <free@plt>
   116a0:	mov	r3, #0
   116a4:	str	r3, [r4, #3952]	; 0xf70
   116a8:	ldr	r3, [r4, #3956]	; 0xf74
   116ac:	sub	r3, r3, #1
   116b0:	str	r3, [r4, #3956]	; 0xf74
   116b4:	pop	{r4, pc}
   116b8:	subhi	r4, sl, #1552	; 0x610
   116bc:	push	{r4, r5, r6, lr}
   116c0:	add	r6, r0, #4096	; 0x1000
   116c4:	ldr	r4, [r6, #3952]	; 0xf70
   116c8:	cmp	r4, #0
   116cc:	popne	{r4, r5, r6, pc}
   116d0:	ldr	r3, [r6, #3956]	; 0xf74
   116d4:	cmp	r3, #0
   116d8:	popeq	{r4, r5, r6, pc}
   116dc:	mov	r5, r0
   116e0:	mov	r1, #4
   116e4:	mov	r0, r3
   116e8:	bl	11a58 <error@@Base+0x3c>
   116ec:	ldr	lr, [pc, #60]	; 11730 <abort@plt+0xf08>
   116f0:	mov	r2, r4
   116f4:	mov	ip, r4
   116f8:	str	r0, [r6, #3952]	; 0xf70
   116fc:	ldr	r3, [r5, ip, lsl #4]
   11700:	cmp	r3, #0
   11704:	beq	11720 <abort@plt+0xef8>
   11708:	add	r1, r0, r2, lsl #2
   1170c:	str	r3, [r1], #4
   11710:	ldr	r3, [r3, #4]
   11714:	add	r2, r2, #1
   11718:	cmp	r3, #0
   1171c:	bne	1170c <abort@plt+0xee4>
   11720:	add	ip, ip, #1
   11724:	cmp	ip, lr
   11728:	bne	116fc <abort@plt+0xed4>
   1172c:	pop	{r4, r5, r6, pc}
   11730:	strdeq	r0, [r0], -r7
   11734:	push	{r4, r5, r6, r7, r8, lr}
   11738:	add	r5, r0, #8000	; 0x1f40
   1173c:	mov	r7, r0
   11740:	mov	r6, r1
   11744:	add	r5, r5, #48	; 0x30
   11748:	mov	r4, r0
   1174c:	mov	r0, r4
   11750:	mov	r1, r6
   11754:	add	r4, r4, #16
   11758:	bl	11fcc <error@@Base+0x5b0>
   1175c:	cmp	r5, r4
   11760:	bne	1174c <abort@plt+0xf24>
   11764:	add	r7, r7, #4096	; 0x1000
   11768:	ldr	r0, [r7, #3952]	; 0xf70
   1176c:	cmp	r0, #0
   11770:	beq	11780 <abort@plt+0xf58>
   11774:	bl	10750 <free@plt>
   11778:	mov	r3, #0
   1177c:	str	r3, [r7, #3952]	; 0xf70
   11780:	mov	r3, #0
   11784:	str	r3, [r7, #3956]	; 0xf74
   11788:	pop	{r4, r5, r6, r7, r8, pc}
   1178c:	ldr	r3, [pc, #136]	; 1181c <abort@plt+0xff4>
   11790:	push	{r7, lr}
   11794:	mov	r9, r0
   11798:	ldr	r3, [r3]
   1179c:	sub	sp, sp, #112	; 0x70
   117a0:	cmp	r3, #0
   117a4:	beq	117ac <abort@plt+0xf84>
   117a8:	blx	r3
   117ac:	ldr	r6, [pc, #108]	; 11820 <abort@plt+0xff8>
   117b0:	ldrsh	r3, [r6]
   117b4:	cmp	r3, #0
   117b8:	ble	11814 <abort@plt+0xfec>
   117bc:	ldr	r8, [pc, #96]	; 11824 <abort@plt+0xffc>
   117c0:	ldr	r7, [pc, #96]	; 11828 <abort@plt+0x1000>
   117c4:	mov	r4, #1
   117c8:	ldr	r5, [r8]
   117cc:	bl	107bc <getpid@plt>
   117d0:	mov	r2, r5
   117d4:	mov	r1, r7
   117d8:	str	r4, [sp]
   117dc:	add	r4, r4, #1
   117e0:	sxth	r4, r4
   117e4:	mov	r3, r0
   117e8:	add	r0, sp, #12
   117ec:	bl	10810 <sprintf@plt>
   117f0:	add	r0, sp, #12
   117f4:	bl	10768 <strdup@plt>
   117f8:	mov	r5, r0
   117fc:	bl	10774 <unlink@plt>
   11800:	mov	r0, r5
   11804:	bl	10750 <free@plt>
   11808:	ldrsh	r3, [r6]
   1180c:	cmp	r3, r4
   11810:	bge	117c8 <abort@plt+0xfa0>
   11814:	mov	r0, r9
   11818:	bl	107c8 <exit@plt>
   1181c:	ldrdeq	r7, [r2], -ip
   11820:	strdeq	r3, [r2], -r8
   11824:	ldrdeq	r7, [r2], -r8
   11828:	andeq	r2, r1, r8, lsr #8
   1182c:	ldrb	r3, [r0]
   11830:	cmp	r3, #0
   11834:	beq	11898 <abort@plt+0x1070>
   11838:	ldrb	ip, [r1]
   1183c:	cmp	ip, r3
   11840:	bne	118a8 <abort@plt+0x1080>
   11844:	push	{lr}		; (str lr, [sp, #-4]!)
   11848:	mov	r2, #0
   1184c:	mov	lr, r1
   11850:	b	11860 <abort@plt+0x1038>
   11854:	ldrb	ip, [lr, #1]!
   11858:	cmp	r3, ip
   1185c:	bne	11880 <abort@plt+0x1058>
   11860:	ldrb	r3, [r0, #1]!
   11864:	add	r2, r2, #1
   11868:	cmp	r3, #0
   1186c:	bne	11854 <abort@plt+0x102c>
   11870:	ldrb	ip, [r1, r2]
   11874:	cmp	ip, #0
   11878:	movne	r3, #0
   1187c:	beq	11890 <abort@plt+0x1068>
   11880:	cmp	r3, ip
   11884:	movcs	r0, #1
   11888:	mvncc	r0, #0
   1188c:	pop	{pc}		; (ldr pc, [sp], #4)
   11890:	mov	r0, ip
   11894:	pop	{pc}		; (ldr pc, [sp], #4)
   11898:	ldrb	ip, [r1, r3]
   1189c:	cmp	ip, #0
   118a0:	movne	r3, #0
   118a4:	beq	118b8 <abort@plt+0x1090>
   118a8:	cmp	r3, ip
   118ac:	movcs	r0, #1
   118b0:	mvncc	r0, #0
   118b4:	bx	lr
   118b8:	mov	r0, ip
   118bc:	bx	lr
   118c0:	ldr	r2, [pc, #28]	; 118e4 <abort@plt+0x10bc>
   118c4:	ldr	r2, [r2]
   118c8:	cmp	r2, r0
   118cc:	bxeq	lr
   118d0:	ldr	r2, [pc, #16]	; 118e8 <abort@plt+0x10c0>
   118d4:	ldr	r2, [r2]
   118d8:	cmp	r0, r2
   118dc:	bxeq	lr
   118e0:	b	107f8 <fclose@plt>
   118e4:	andeq	r3, r2, r8, lsl #1
   118e8:	andeq	r3, r2, ip, lsl #1
   118ec:	push	{lr}		; (str lr, [sp, #-4]!)
   118f0:	sub	sp, sp, #92	; 0x5c
   118f4:	mov	r1, r0
   118f8:	mov	r2, sp
   118fc:	mov	r0, #3
   11900:	bl	10780 <__xstat@plt>
   11904:	clz	r0, r0
   11908:	lsr	r0, r0, #5
   1190c:	add	sp, sp, #92	; 0x5c
   11910:	pop	{pc}		; (ldr pc, [sp], #4)
   11914:	ldr	r3, [pc, #84]	; 11970 <abort@plt+0x1148>
   11918:	push	{r4, r5, lr}
   1191c:	sub	sp, sp, #116	; 0x74
   11920:	ldrh	r4, [r3]
   11924:	ldr	r2, [pc, #72]	; 11974 <abort@plt+0x114c>
   11928:	add	r4, r4, #1
   1192c:	ldr	r5, [r2]
   11930:	sxth	r4, r4
   11934:	strh	r4, [r3]
   11938:	bl	107bc <getpid@plt>
   1193c:	mov	r2, r5
   11940:	ldr	r1, [pc, #48]	; 11978 <abort@plt+0x1150>
   11944:	str	r4, [sp]
   11948:	mov	r3, r0
   1194c:	add	r0, sp, #12
   11950:	bl	10810 <sprintf@plt>
   11954:	add	r0, sp, #12
   11958:	bl	10768 <strdup@plt>
   1195c:	mov	r4, r0
   11960:	bl	10774 <unlink@plt>
   11964:	mov	r0, r4
   11968:	add	sp, sp, #116	; 0x74
   1196c:	pop	{r4, r5, pc}
   11970:	strdeq	r3, [r2], -r8
   11974:	ldrdeq	r7, [r2], -r8
   11978:	andeq	r2, r1, r8, lsr #8
   1197c:	push	{r4, lr}
   11980:	mov	r4, r0
   11984:	bl	107d4 <strlen@plt>
   11988:	sub	r0, r0, #1
   1198c:	sxth	r0, r0
   11990:	cmp	r0, #0
   11994:	bge	119ac <abort@plt+0x1184>
   11998:	b	119b8 <abort@plt+0x1190>
   1199c:	sub	r0, r0, #1
   119a0:	sxth	r0, r0
   119a4:	cmn	r0, #1
   119a8:	beq	119b8 <abort@plt+0x1190>
   119ac:	ldrb	r3, [r4, r0]
   119b0:	cmp	r3, #47	; 0x2f
   119b4:	bne	1199c <abort@plt+0x1174>
   119b8:	add	r0, r0, #1
   119bc:	add	r0, r4, r0
   119c0:	pop	{r4, pc}
   119c4:	push	{r4, lr}
   119c8:	mov	r0, #0
   119cc:	bl	1178c <abort@plt+0xf64>
   119d0:	ldr	r2, [pc, #52]	; 11a0c <abort@plt+0x11e4>
   119d4:	push	{r4, lr}
   119d8:	ldr	r2, [r2]
   119dc:	cmp	r2, #0
   119e0:	beq	119ec <abort@plt+0x11c4>
   119e4:	blx	r2
   119e8:	bl	119c4 <abort@plt+0x119c>
   119ec:	ldr	r1, [pc, #28]	; 11a10 <abort@plt+0x11e8>
   119f0:	ldr	r2, [pc, #28]	; 11a14 <abort@plt+0x11ec>
   119f4:	mov	r3, r0
   119f8:	ldr	r0, [r1]
   119fc:	ldr	r2, [r2]
   11a00:	ldr	r1, [pc, #16]	; 11a18 <abort@plt+0x11f0>
   11a04:	bl	107e0 <fprintf@plt>
   11a08:	b	119e8 <abort@plt+0x11c0>
   11a0c:	ldrdeq	r7, [r2], -r4
   11a10:	andeq	r3, r2, r0, lsl #1
   11a14:	ldrdeq	r7, [r2], -r8
   11a18:	andeq	r2, r1, r8, lsr r4

00011a1c <error@@Base>:
   11a1c:	ldr	r1, [pc, #36]	; 11a48 <error@@Base+0x2c>
   11a20:	ldr	r2, [pc, #36]	; 11a4c <error@@Base+0x30>
   11a24:	mov	r3, r0
   11a28:	push	{r4, lr}
   11a2c:	ldr	r0, [r1]
   11a30:	ldr	r2, [r2]
   11a34:	ldr	r1, [pc, #20]	; 11a50 <error@@Base+0x34>
   11a38:	bl	107e0 <fprintf@plt>
   11a3c:	ldr	r3, [pc, #16]	; 11a54 <error@@Base+0x38>
   11a40:	ldr	r0, [r3]
   11a44:	bl	1178c <abort@plt+0xf64>
   11a48:	andeq	r3, r2, r0, lsl #1
   11a4c:	ldrdeq	r7, [r2], -r8
   11a50:	andeq	r2, r1, r8, asr #8
   11a54:	andeq	r3, r2, r4, ror r0
   11a58:	push	{r4, lr}
   11a5c:	bl	10720 <calloc@plt>
   11a60:	cmp	r0, #0
   11a64:	popne	{r4, pc}
   11a68:	ldr	r0, [pc]	; 11a70 <error@@Base+0x54>
   11a6c:	bl	11a1c <error@@Base>
   11a70:	andeq	r2, r1, r0, asr r4
   11a74:	ldr	r3, [pc, #32]	; 11a9c <error@@Base+0x80>
   11a78:	ldrb	r2, [r3, #2]
   11a7c:	cmp	r2, #0
   11a80:	beq	11a88 <error@@Base+0x6c>
   11a84:	bx	lr
   11a88:	push	{r4, lr}
   11a8c:	mov	r2, #1
   11a90:	ldr	r0, [pc, #8]	; 11aa0 <error@@Base+0x84>
   11a94:	strb	r2, [r3, #2]
   11a98:	bl	11a1c <error@@Base>
   11a9c:	strdeq	r3, [r2], -r8
   11aa0:	andeq	r2, r1, ip, ror #8
   11aa4:	ldr	r3, [pc, #48]	; 11adc <error@@Base+0xc0>
   11aa8:	push	{lr}		; (str lr, [sp, #-4]!)
   11aac:	sub	sp, sp, #12
   11ab0:	ldr	r2, [pc, #40]	; 11ae0 <error@@Base+0xc4>
   11ab4:	str	r1, [sp]
   11ab8:	ldr	r1, [r3]
   11abc:	ldr	r2, [r2]
   11ac0:	mov	r3, r0
   11ac4:	mov	r0, r1
   11ac8:	ldr	r1, [pc, #20]	; 11ae4 <error@@Base+0xc8>
   11acc:	bl	107e0 <fprintf@plt>
   11ad0:	ldr	r3, [pc, #16]	; 11ae8 <error@@Base+0xcc>
   11ad4:	ldr	r0, [r3]
   11ad8:	bl	1178c <abort@plt+0xf64>
   11adc:	andeq	r3, r2, r0, lsl #1
   11ae0:	ldrdeq	r7, [r2], -r8
   11ae4:	andeq	r2, r1, ip, ror r4
   11ae8:	andeq	r3, r2, r4, ror r0
   11aec:	subs	r2, r0, #0
   11af0:	push	{r4, r5, r6, lr}
   11af4:	mov	r4, r1
   11af8:	beq	11b24 <error@@Base+0x108>
   11afc:	mov	r5, r2
   11b00:	bl	10744 <fopen@plt>
   11b04:	cmp	r0, #0
   11b08:	popne	{r4, r5, r6, pc}
   11b0c:	ldrb	r3, [r4]
   11b10:	mov	r1, r5
   11b14:	cmp	r3, #119	; 0x77
   11b18:	beq	11b3c <error@@Base+0x120>
   11b1c:	ldr	r0, [pc, #32]	; 11b44 <error@@Base+0x128>
   11b20:	bl	11aa4 <error@@Base+0x88>
   11b24:	ldrb	r3, [r1]
   11b28:	cmp	r3, #114	; 0x72
   11b2c:	ldreq	r3, [pc, #20]	; 11b48 <error@@Base+0x12c>
   11b30:	ldrne	r3, [pc, #20]	; 11b4c <error@@Base+0x130>
   11b34:	ldr	r0, [r3]
   11b38:	pop	{r4, r5, r6, pc}
   11b3c:	ldr	r0, [pc, #12]	; 11b50 <error@@Base+0x134>
   11b40:	bl	11aa4 <error@@Base+0x88>
   11b44:	andeq	r2, r1, r4, lsr #9
   11b48:	andeq	r3, r2, r8, lsl #1
   11b4c:	andeq	r3, r2, ip, lsl #1
   11b50:	andeq	r2, r1, ip, lsl #9
   11b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b58:	sub	sp, sp, #20
   11b5c:	ldr	r4, [r1]
   11b60:	str	r0, [sp, #8]
   11b64:	mov	r0, r4
   11b68:	mov	r9, r1
   11b6c:	str	r2, [sp, #12]
   11b70:	mov	r6, r3
   11b74:	bl	107d4 <strlen@plt>
   11b78:	sub	r0, r0, #1
   11b7c:	sxth	r0, r0
   11b80:	cmp	r0, #0
   11b84:	bge	11b9c <error@@Base+0x180>
   11b88:	b	11ba8 <error@@Base+0x18c>
   11b8c:	sub	r0, r0, #1
   11b90:	sxth	r0, r0
   11b94:	cmn	r0, #1
   11b98:	beq	11ba8 <error@@Base+0x18c>
   11b9c:	ldrb	r3, [r4, r0]
   11ba0:	cmp	r3, #47	; 0x2f
   11ba4:	bne	11b8c <error@@Base+0x170>
   11ba8:	ldr	r3, [pc, #460]	; 11d7c <error@@Base+0x360>
   11bac:	add	r0, r0, #1
   11bb0:	add	r4, r4, r0
   11bb4:	ldr	r1, [pc, #452]	; 11d80 <error@@Base+0x364>
   11bb8:	mov	r0, #2
   11bbc:	str	r4, [r3]
   11bc0:	bl	107a4 <__sysv_signal@plt>
   11bc4:	ldr	r1, [pc, #436]	; 11d80 <error@@Base+0x364>
   11bc8:	mov	r0, #15
   11bcc:	bl	107a4 <__sysv_signal@plt>
   11bd0:	ldr	r3, [sp, #8]
   11bd4:	ldr	fp, [r3]
   11bd8:	cmp	fp, #1
   11bdc:	beq	11d10 <error@@Base+0x2f4>
   11be0:	movgt	sl, #1
   11be4:	mov	r7, #0
   11be8:	movgt	r4, sl
   11bec:	bgt	11c14 <error@@Base+0x1f8>
   11bf0:	b	11d20 <error@@Base+0x304>
   11bf4:	add	r3, r7, #1
   11bf8:	str	r5, [r9, r7, lsl #2]
   11bfc:	sxth	r7, r3
   11c00:	add	r4, r4, #1
   11c04:	sxth	r4, r4
   11c08:	cmp	r4, fp
   11c0c:	mov	sl, r4
   11c10:	bge	11d20 <error@@Base+0x304>
   11c14:	ldr	r5, [r9, r4, lsl #2]
   11c18:	lsl	r3, r4, #2
   11c1c:	ldrb	r2, [r5]
   11c20:	cmp	r2, #45	; 0x2d
   11c24:	bne	11bf4 <error@@Base+0x1d8>
   11c28:	ldrb	r8, [r5, #1]
   11c2c:	str	r3, [sp, #4]
   11c30:	cmp	r8, #0
   11c34:	beq	11bf4 <error@@Base+0x1d8>
   11c38:	mov	r0, r5
   11c3c:	bl	107d4 <strlen@plt>
   11c40:	mov	r1, r5
   11c44:	mov	r2, r0
   11c48:	ldr	r0, [pc, #308]	; 11d84 <error@@Base+0x368>
   11c4c:	bl	1081c <strncmp@plt>
   11c50:	cmp	r0, #0
   11c54:	beq	11d68 <error@@Base+0x34c>
   11c58:	add	sl, sl, #1
   11c5c:	cmp	sl, fp
   11c60:	movge	r0, #0
   11c64:	ldrlt	r3, [sp, #4]
   11c68:	addlt	r3, r9, r3
   11c6c:	ldrlt	r0, [r3, #4]
   11c70:	cmp	r6, #0
   11c74:	beq	11cb8 <error@@Base+0x29c>
   11c78:	ldrb	r3, [r6]
   11c7c:	cmp	r3, #0
   11c80:	beq	11cb8 <error@@Base+0x29c>
   11c84:	cmp	r3, r8
   11c88:	beq	11cc4 <error@@Base+0x2a8>
   11c8c:	mov	r3, #0
   11c90:	b	11c9c <error@@Base+0x280>
   11c94:	cmp	r8, r1
   11c98:	beq	11cc8 <error@@Base+0x2ac>
   11c9c:	add	r3, r3, #1
   11ca0:	sxth	r3, r3
   11ca4:	add	r2, r3, r3, lsl #1
   11ca8:	ldrb	r1, [r6, r2, lsl #2]
   11cac:	add	r2, r6, r2, lsl #2
   11cb0:	cmp	r1, #0
   11cb4:	bne	11c94 <error@@Base+0x278>
   11cb8:	mov	r1, r5
   11cbc:	ldr	r0, [pc, #196]	; 11d88 <error@@Base+0x36c>
   11cc0:	bl	11aa4 <error@@Base+0x88>
   11cc4:	mov	r2, r6
   11cc8:	ldr	r3, [r2, #4]
   11ccc:	cmp	r3, #0
   11cd0:	beq	11d30 <error@@Base+0x314>
   11cd4:	ldrb	r1, [r5, #2]
   11cd8:	cmp	r0, #0
   11cdc:	cmpeq	r1, #0
   11ce0:	beq	11d30 <error@@Base+0x314>
   11ce4:	ldr	r2, [r3]
   11ce8:	cmp	r2, #0
   11cec:	bne	11d70 <error@@Base+0x354>
   11cf0:	cmp	r1, #0
   11cf4:	addne	r0, r5, #2
   11cf8:	str	r0, [r3]
   11cfc:	ldrb	r3, [r5, #2]
   11d00:	cmp	r3, #0
   11d04:	addeq	r4, r4, #1
   11d08:	sxtheq	r4, r4
   11d0c:	b	11c00 <error@@Base+0x1e4>
   11d10:	ldr	r3, [pc, #116]	; 11d8c <error@@Base+0x370>
   11d14:	ldrb	r7, [r3, #4]
   11d18:	cmp	r7, #0
   11d1c:	bne	11d68 <error@@Base+0x34c>
   11d20:	ldr	r3, [sp, #8]
   11d24:	str	r7, [r3]
   11d28:	add	sp, sp, #20
   11d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d30:	ldr	r3, [r2, #8]
   11d34:	cmp	r3, #0
   11d38:	beq	11cb8 <error@@Base+0x29c>
   11d3c:	ldrb	r2, [r5, #2]
   11d40:	cmp	r2, #0
   11d44:	bne	11cb8 <error@@Base+0x29c>
   11d48:	ldrb	r2, [r3]
   11d4c:	cmp	r2, #0
   11d50:	bne	11d70 <error@@Base+0x354>
   11d54:	mov	r2, #1
   11d58:	strb	r2, [r3]
   11d5c:	ldr	r3, [sp, #8]
   11d60:	ldr	fp, [r3]
   11d64:	b	11c00 <error@@Base+0x1e4>
   11d68:	ldr	r0, [sp, #12]
   11d6c:	bl	119d0 <abort@plt+0x11a8>
   11d70:	mov	r1, r5
   11d74:	ldr	r0, [pc, #20]	; 11d90 <error@@Base+0x374>
   11d78:	bl	11aa4 <error@@Base+0x88>
   11d7c:	ldrdeq	r7, [r2], -r8
   11d80:	andeq	r1, r1, r4, ror sl
   11d84:			; <UNDEFINED> instruction: 0x000124b8
   11d88:	andeq	r2, r1, r0, asr #9
   11d8c:	andeq	r3, r2, r4, ror r0
   11d90:	ldrdeq	r2, [r1], -r0
   11d94:	ldr	r3, [pc, #44]	; 11dc8 <error@@Base+0x3ac>
   11d98:	push	{lr}		; (str lr, [sp, #-4]!)
   11d9c:	sub	sp, sp, #12
   11da0:	ldr	r2, [pc, #36]	; 11dcc <error@@Base+0x3b0>
   11da4:	str	r1, [sp]
   11da8:	ldr	r1, [r3]
   11dac:	ldr	r2, [r2]
   11db0:	mov	r3, r0
   11db4:	mov	r0, r1
   11db8:	ldr	r1, [pc, #16]	; 11dd0 <error@@Base+0x3b4>
   11dbc:	bl	107e0 <fprintf@plt>
   11dc0:	add	sp, sp, #12
   11dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   11dc8:	andeq	r3, r2, r0, lsl #1
   11dcc:	ldrdeq	r7, [r2], -r8
   11dd0:	andeq	r2, r1, ip, ror r4
   11dd4:	mov	r3, #0
   11dd8:	str	r3, [r0, #4]
   11ddc:	str	r3, [r0]
   11de0:	str	r3, [r0, #8]
   11de4:	str	r3, [r0, #12]
   11de8:	bx	lr
   11dec:	ldr	r3, [r0]
   11df0:	mov	r2, #0
   11df4:	cmp	r3, r2
   11df8:	push	{r4, lr}
   11dfc:	mov	r4, r0
   11e00:	stm	r1, {r2, r3}
   11e04:	str	r1, [r0]
   11e08:	streq	r1, [r0, #4]
   11e0c:	ldr	r0, [r0, #8]
   11e10:	strne	r1, [r3]
   11e14:	cmp	r0, #0
   11e18:	beq	11e28 <error@@Base+0x40c>
   11e1c:	bl	10750 <free@plt>
   11e20:	mov	r3, #0
   11e24:	str	r3, [r4, #8]
   11e28:	ldr	r3, [r4, #12]
   11e2c:	add	r3, r3, #1
   11e30:	str	r3, [r4, #12]
   11e34:	pop	{r4, pc}
   11e38:	ldr	r3, [r0, #4]
   11e3c:	mov	r2, #0
   11e40:	cmp	r3, r2
   11e44:	push	{r4, lr}
   11e48:	mov	r4, r0
   11e4c:	str	r3, [r1]
   11e50:	str	r2, [r1, #4]
   11e54:	streq	r1, [r0]
   11e58:	ldr	r0, [r0, #8]
   11e5c:	strne	r1, [r3, #4]
   11e60:	cmp	r0, #0
   11e64:	str	r1, [r4, #4]
   11e68:	beq	11e78 <error@@Base+0x45c>
   11e6c:	bl	10750 <free@plt>
   11e70:	mov	r3, #0
   11e74:	str	r3, [r4, #8]
   11e78:	ldr	r3, [r4, #12]
   11e7c:	add	r3, r3, #1
   11e80:	str	r3, [r4, #12]
   11e84:	pop	{r4, pc}
   11e88:	ldr	r3, [r2]
   11e8c:	push	{r4, lr}
   11e90:	cmp	r3, #0
   11e94:	str	r3, [r1]
   11e98:	str	r2, [r1, #4]
   11e9c:	mov	r4, r0
   11ea0:	streq	r1, [r0]
   11ea4:	ldr	r0, [r0, #8]
   11ea8:	strne	r1, [r3, #4]
   11eac:	cmp	r0, #0
   11eb0:	str	r1, [r2]
   11eb4:	beq	11ec4 <error@@Base+0x4a8>
   11eb8:	bl	10750 <free@plt>
   11ebc:	mov	r3, #0
   11ec0:	str	r3, [r4, #8]
   11ec4:	ldr	r3, [r4, #12]
   11ec8:	add	r3, r3, #1
   11ecc:	str	r3, [r4, #12]
   11ed0:	pop	{r4, pc}
   11ed4:	ldr	r3, [r1, #4]
   11ed8:	push	{r4, lr}
   11edc:	cmp	r3, #0
   11ee0:	stm	r2, {r1, r3}
   11ee4:	mov	r4, r0
   11ee8:	str	r2, [r1, #4]
   11eec:	streq	r2, [r0, #4]
   11ef0:	ldr	r0, [r0, #8]
   11ef4:	strne	r2, [r3]
   11ef8:	cmp	r0, #0
   11efc:	beq	11f0c <error@@Base+0x4f0>
   11f00:	bl	10750 <free@plt>
   11f04:	mov	r3, #0
   11f08:	str	r3, [r4, #8]
   11f0c:	ldr	r3, [r4, #12]
   11f10:	add	r3, r3, #1
   11f14:	str	r3, [r4, #12]
   11f18:	pop	{r4, pc}
   11f1c:	ldr	r3, [r1]
   11f20:	ldr	r2, [r1, #4]
   11f24:	cmp	r3, #0
   11f28:	push	{r4, r5, r6, lr}
   11f2c:	mov	r4, r0
   11f30:	strne	r2, [r3, #4]
   11f34:	ldrne	r2, [r1, #4]
   11f38:	streq	r2, [r0]
   11f3c:	cmp	r2, #0
   11f40:	streq	r3, [r0, #4]
   11f44:	ldr	r0, [r0, #8]
   11f48:	mov	r5, #0
   11f4c:	strne	r3, [r2]
   11f50:	cmp	r0, r5
   11f54:	str	r5, [r1, #4]
   11f58:	str	r5, [r1]
   11f5c:	beq	11f68 <error@@Base+0x54c>
   11f60:	bl	10750 <free@plt>
   11f64:	str	r5, [r4, #8]
   11f68:	ldr	r3, [r4, #12]
   11f6c:	sub	r3, r3, #1
   11f70:	str	r3, [r4, #12]
   11f74:	pop	{r4, r5, r6, pc}
   11f78:	ldr	r3, [r0, #8]
   11f7c:	cmp	r3, #0
   11f80:	bxne	lr
   11f84:	ldr	r3, [r0, #12]
   11f88:	cmp	r3, #0
   11f8c:	bxeq	lr
   11f90:	push	{r4, lr}
   11f94:	mov	r1, #4
   11f98:	mov	r4, r0
   11f9c:	mov	r0, r3
   11fa0:	bl	11a58 <error@@Base+0x3c>
   11fa4:	ldr	r3, [r4]
   11fa8:	cmp	r3, #0
   11fac:	str	r0, [r4, #8]
   11fb0:	popeq	{r4, pc}
   11fb4:	sub	r0, r0, #4
   11fb8:	str	r3, [r0, #4]!
   11fbc:	ldr	r3, [r3, #4]
   11fc0:	cmp	r3, #0
   11fc4:	bne	11fb8 <error@@Base+0x59c>
   11fc8:	pop	{r4, pc}
   11fcc:	push	{r4, r5, r6, r7, r8, lr}
   11fd0:	ldr	r4, [r0]
   11fd4:	cmp	r4, #0
   11fd8:	popeq	{r4, r5, r6, r7, r8, pc}
   11fdc:	mov	r6, r1
   11fe0:	mov	r5, r0
   11fe4:	mov	r7, #0
   11fe8:	ldr	r3, [r4]
   11fec:	ldr	r2, [r4, #4]
   11ff0:	cmp	r3, #0
   11ff4:	strne	r2, [r3, #4]
   11ff8:	ldrne	r2, [r4, #4]
   11ffc:	ldr	r0, [r5, #8]
   12000:	streq	r2, [r5]
   12004:	cmp	r2, #0
   12008:	strne	r3, [r2]
   1200c:	streq	r3, [r5, #4]
   12010:	cmp	r0, #0
   12014:	str	r7, [r4, #4]
   12018:	str	r7, [r4]
   1201c:	beq	12028 <error@@Base+0x60c>
   12020:	bl	10750 <free@plt>
   12024:	str	r7, [r5, #8]
   12028:	ldr	r3, [r5, #12]
   1202c:	mov	r0, r4
   12030:	sub	r3, r3, #1
   12034:	str	r3, [r5, #12]
   12038:	blx	r6
   1203c:	ldr	r4, [r5]
   12040:	cmp	r4, #0
   12044:	bne	11fe8 <error@@Base+0x5cc>
   12048:	pop	{r4, r5, r6, r7, r8, pc}
   1204c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12050:	sub	sp, sp, #12
   12054:	lsl	r3, r1, #2
   12058:	str	r1, [sp]
   1205c:	str	r3, [sp, #4]
   12060:	ldr	r5, [pc, #344]	; 121c0 <error@@Base+0x7a4>
   12064:	ldr	r3, [sp]
   12068:	mov	r9, r0
   1206c:	ldr	r1, [r5]
   12070:	cmp	r9, r3
   12074:	movlt	r4, r3
   12078:	ldr	r7, [r1, r9, lsl #2]
   1207c:	movlt	r8, r9
   12080:	bge	121ac <error@@Base+0x790>
   12084:	lsl	r6, r4, #2
   12088:	b	12090 <error@@Base+0x674>
   1208c:	ldr	r1, [r5]
   12090:	ldr	r1, [r1, r6]
   12094:	ldr	r3, [r5, #4]
   12098:	mov	r0, r7
   1209c:	blx	r3
   120a0:	cmp	r0, #0
   120a4:	bge	120f4 <error@@Base+0x6d8>
   120a8:	sub	r4, r4, #1
   120ac:	cmp	r4, r8
   120b0:	sub	r6, r6, #4
   120b4:	bgt	1208c <error@@Base+0x670>
   120b8:	bne	120f0 <error@@Base+0x6d4>
   120bc:	ldr	r1, [r5]
   120c0:	mov	fp, r4
   120c4:	add	r0, r1, fp, lsl #2
   120c8:	sub	r1, fp, #1
   120cc:	cmp	r9, r1
   120d0:	str	r7, [r0]
   120d4:	blt	12190 <error@@Base+0x774>
   120d8:	ldr	r3, [sp]
   120dc:	add	r9, r4, #1
   120e0:	cmp	r9, r3
   120e4:	blt	1206c <error@@Base+0x650>
   120e8:	add	sp, sp, #12
   120ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120f0:	lsl	r6, r4, #2
   120f4:	ldr	r1, [r5]
   120f8:	add	fp, r8, #1
   120fc:	cmp	fp, r4
   12100:	ldr	r2, [r1, r6]
   12104:	add	r0, r1, r6
   12108:	str	r2, [r1, r8, lsl #2]
   1210c:	lsl	r8, r8, #2
   12110:	bge	1219c <error@@Base+0x780>
   12114:	add	sl, r8, #4
   12118:	b	12130 <error@@Base+0x714>
   1211c:	add	fp, fp, #1
   12120:	cmp	fp, r4
   12124:	add	sl, sl, #4
   12128:	beq	12174 <error@@Base+0x758>
   1212c:	ldr	r1, [r5]
   12130:	ldr	r1, [r1, sl]
   12134:	ldr	r8, [r5, #4]
   12138:	mov	r0, r7
   1213c:	blx	r8
   12140:	cmp	r0, #0
   12144:	bgt	1211c <error@@Base+0x700>
   12148:	ldr	r1, [r5]
   1214c:	mov	r8, fp
   12150:	add	r0, r1, r6
   12154:	sub	r4, r4, #1
   12158:	ldr	r2, [r1, sl]
   1215c:	cmp	r4, fp
   12160:	str	r2, [r0]
   12164:	bgt	12084 <error@@Base+0x668>
   12168:	mov	fp, r4
   1216c:	mov	r4, r8
   12170:	b	120c4 <error@@Base+0x6a8>
   12174:	ldr	r0, [r5]
   12178:	add	r0, r0, r6
   1217c:	sub	r1, fp, #1
   12180:	cmp	r9, r1
   12184:	mov	r4, fp
   12188:	str	r7, [r0]
   1218c:	bge	120d8 <error@@Base+0x6bc>
   12190:	mov	r0, r9
   12194:	bl	1204c <error@@Base+0x630>
   12198:	b	120d8 <error@@Base+0x6bc>
   1219c:	beq	1217c <error@@Base+0x760>
   121a0:	lsl	sl, fp, #2
   121a4:	mov	r8, fp
   121a8:	b	12154 <error@@Base+0x738>
   121ac:	mov	fp, r3
   121b0:	ldr	r3, [sp, #4]
   121b4:	mov	r4, r9
   121b8:	add	r0, r1, r3
   121bc:	b	120c8 <error@@Base+0x6ac>
   121c0:	strdeq	r3, [r2], -ip
   121c4:	cmp	r0, #1
   121c8:	mov	ip, r1
   121cc:	bxle	lr
   121d0:	ldr	r3, [pc, #16]	; 121e8 <error@@Base+0x7cc>
   121d4:	sub	r1, r0, #1
   121d8:	mov	r0, #0
   121dc:	str	ip, [r3]
   121e0:	str	r2, [r3, #4]
   121e4:	b	1204c <error@@Base+0x630>
   121e8:	strdeq	r3, [r2], -ip
   121ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   121f0:	mov	r7, r0
   121f4:	ldr	r6, [pc, #72]	; 12244 <error@@Base+0x828>
   121f8:	ldr	r5, [pc, #72]	; 12248 <error@@Base+0x82c>
   121fc:	add	r6, pc, r6
   12200:	add	r5, pc, r5
   12204:	sub	r6, r6, r5
   12208:	mov	r8, r1
   1220c:	mov	r9, r2
   12210:	bl	10700 <calloc@plt-0x20>
   12214:	asrs	r6, r6, #2
   12218:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1221c:	mov	r4, #0
   12220:	add	r4, r4, #1
   12224:	ldr	r3, [r5], #4
   12228:	mov	r2, r9
   1222c:	mov	r1, r8
   12230:	mov	r0, r7
   12234:	blx	r3
   12238:	cmp	r6, r4
   1223c:	bne	12220 <error@@Base+0x804>
   12240:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12244:	strdeq	r0, [r1], -ip
   12248:	strdeq	r0, [r1], -r4
   1224c:	bx	lr

Disassembly of section .fini:

00012250 <.fini>:
   12250:	push	{r3, lr}
   12254:	pop	{r3, pc}
