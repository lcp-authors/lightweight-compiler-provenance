
../repos/charybdis/wsockd/.libs/wsockd:     file format elf32-littlearm


Disassembly of section .init:

00010c80 <.init>:
   10c80:	push	{r3, lr}
   10c84:	bl	1124c <fputs@plt+0x330>
   10c88:	pop	{r3, pc}

Disassembly of section .plt:

00010c8c <open@plt-0x14>:
   10c8c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c90:	ldr	lr, [pc, #4]	; 10c9c <open@plt-0x4>
   10c94:	add	lr, pc, lr
   10c98:	ldr	pc, [lr, #8]!
   10c9c:	andeq	r3, r1, r4, ror #6

00010ca0 <open@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #77824	; 0x13000
   10ca8:	ldr	pc, [ip, #868]!	; 0x364

00010cac <sigemptyset@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #77824	; 0x13000
   10cb4:	ldr	pc, [ip, #860]!	; 0x35c

00010cb8 <strerror@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #77824	; 0x13000
   10cc0:	ldr	pc, [ip, #852]!	; 0x354

00010cc4 <rb_get_type@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #77824	; 0x13000
   10ccc:	ldr	pc, [ip, #844]!	; 0x34c

00010cd0 <abort@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #77824	; 0x13000
   10cd8:	ldr	pc, [ip, #836]!	; 0x344

00010cdc <rb_event_addish@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #77824	; 0x13000
   10ce4:	ldr	pc, [ip, #828]!	; 0x33c

00010ce8 <rb_ignore_errno@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #77824	; 0x13000
   10cf0:	ldr	pc, [ip, #820]!	; 0x334

00010cf4 <__libc_start_main@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #77824	; 0x13000
   10cfc:	ldr	pc, [ip, #812]!	; 0x32c

00010d00 <rb_setselect@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #77824	; 0x13000
   10d08:	ldr	pc, [ip, #804]!	; 0x324

00010d0c <__gmon_start__@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #77824	; 0x13000
   10d14:	ldr	pc, [ip, #796]!	; 0x31c

00010d18 <rb_send_fd_buf@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #77824	; 0x13000
   10d20:	ldr	pc, [ip, #788]!	; 0x314

00010d24 <vsnprintf@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #77824	; 0x13000
   10d2c:	ldr	pc, [ip, #780]!	; 0x30c

00010d30 <getenv@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #77824	; 0x13000
   10d38:	ldr	pc, [ip, #772]!	; 0x304

00010d3c <calloc@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #77824	; 0x13000
   10d44:	ldr	pc, [ip, #764]!	; 0x2fc

00010d48 <rb_set_nb@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #77824	; 0x13000
   10d50:	ldr	pc, [ip, #756]!	; 0x2f4

00010d54 <memset@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #77824	; 0x13000
   10d5c:	ldr	pc, [ip, #748]!	; 0x2ec

00010d60 <__assert_fail@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #77824	; 0x13000
   10d68:	ldr	pc, [ip, #740]!	; 0x2e4

00010d6c <rb_linebuf_parse@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #77824	; 0x13000
   10d74:	ldr	pc, [ip, #732]!	; 0x2dc

00010d78 <rb_strlcpy@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #77824	; 0x13000
   10d80:	ldr	pc, [ip, #724]!	; 0x2d4

00010d84 <rb_init_rawbuffers@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #77824	; 0x13000
   10d8c:	ldr	pc, [ip, #716]!	; 0x2cc

00010d90 <free@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #77824	; 0x13000
   10d98:	ldr	pc, [ip, #708]!	; 0x2c4

00010d9c <rb_lib_loop@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #77824	; 0x13000
   10da4:	ldr	pc, [ip, #700]!	; 0x2bc

00010da8 <rb_read@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #77824	; 0x13000
   10db0:	ldr	pc, [ip, #692]!	; 0x2b4

00010db4 <rb_set_type@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #77824	; 0x13000
   10dbc:	ldr	pc, [ip, #684]!	; 0x2ac

00010dc0 <rb_linebuf_get@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #77824	; 0x13000
   10dc8:	ldr	pc, [ip, #676]!	; 0x2a4

00010dcc <rb_linebuf_flush@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #77824	; 0x13000
   10dd4:	ldr	pc, [ip, #668]!	; 0x29c

00010dd8 <strlen@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #77824	; 0x13000
   10de0:	ldr	pc, [ip, #660]!	; 0x294

00010de4 <memcpy@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #77824	; 0x13000
   10dec:	ldr	pc, [ip, #652]!	; 0x28c

00010df0 <rb_linebuf_donebuf@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #77824	; 0x13000
   10df8:	ldr	pc, [ip, #644]!	; 0x284

00010dfc <rb_strcasestr@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #77824	; 0x13000
   10e04:	ldr	pc, [ip, #636]!	; 0x27c

00010e08 <rb_close@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #77824	; 0x13000
   10e10:	ldr	pc, [ip, #628]!	; 0x274

00010e14 <sigaddset@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #77824	; 0x13000
   10e1c:	ldr	pc, [ip, #620]!	; 0x26c

00010e20 <raise@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #77824	; 0x13000
   10e28:	ldr	pc, [ip, #612]!	; 0x264

00010e2c <atoi@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #77824	; 0x13000
   10e34:	ldr	pc, [ip, #604]!	; 0x25c

00010e38 <rb_rawbuf_length@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #77824	; 0x13000
   10e40:	ldr	pc, [ip, #596]!	; 0x254

00010e44 <rb_free_rawbuffer@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #77824	; 0x13000
   10e4c:	ldr	pc, [ip, #588]!	; 0x24c

00010e50 <close@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #77824	; 0x13000
   10e58:	ldr	pc, [ip, #580]!	; 0x244

00010e5c <rb_outofmemory@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #77824	; 0x13000
   10e64:	ldr	pc, [ip, #572]!	; 0x23c

00010e68 <rb_rawbuf_get@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #77824	; 0x13000
   10e70:	ldr	pc, [ip, #564]!	; 0x234

00010e74 <sigaction@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #77824	; 0x13000
   10e7c:	ldr	pc, [ip, #556]!	; 0x22c

00010e80 <rb_lib_init@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #77824	; 0x13000
   10e88:	ldr	pc, [ip, #548]!	; 0x224

00010e8c <rb_new_rawbuffer@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #77824	; 0x13000
   10e94:	ldr	pc, [ip, #540]!	; 0x21c

00010e98 <rb_open@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #77824	; 0x13000
   10ea0:	ldr	pc, [ip, #532]!	; 0x214

00010ea4 <rb_recv_fd_buf@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #77824	; 0x13000
   10eac:	ldr	pc, [ip, #524]!	; 0x20c

00010eb0 <dup2@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #77824	; 0x13000
   10eb8:	ldr	pc, [ip, #516]!	; 0x204

00010ebc <rb_linebuf_newbuf@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #77824	; 0x13000
   10ec4:	ldr	pc, [ip, #508]!	; 0x1fc

00010ec8 <rb_linebuf_init@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #77824	; 0x13000
   10ed0:	ldr	pc, [ip, #500]!	; 0x1f4

00010ed4 <getrlimit@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #77824	; 0x13000
   10edc:	ldr	pc, [ip, #492]!	; 0x1ec

00010ee0 <rb_rawbuf_append@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #77824	; 0x13000
   10ee8:	ldr	pc, [ip, #484]!	; 0x1e4

00010eec <rb_rawbuf_flush@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #77824	; 0x13000
   10ef4:	ldr	pc, [ip, #476]!	; 0x1dc

00010ef8 <exit@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #77824	; 0x13000
   10f00:	ldr	pc, [ip, #468]!	; 0x1d4

00010f04 <__errno_location@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #77824	; 0x13000
   10f0c:	ldr	pc, [ip, #460]!	; 0x1cc

00010f10 <rb_base64_encode@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #77824	; 0x13000
   10f18:	ldr	pc, [ip, #452]!	; 0x1c4

00010f1c <fputs@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #77824	; 0x13000
   10f24:	ldr	pc, [ip, #444]!	; 0x1bc

Disassembly of section .text:

00010f28 <.text>:
   10f28:	push	{r4, r5, r6, r7, r8, lr}
   10f2c:	sub	sp, sp, #160	; 0xa0
   10f30:	add	r1, sp, #20
   10f34:	mov	r0, #7
   10f38:	bl	10ed4 <getrlimit@plt>
   10f3c:	cmp	r0, #0
   10f40:	ldr	r0, [pc, #652]	; 111d4 <fputs@plt+0x2b8>
   10f44:	ldreq	r8, [sp, #20]
   10f48:	ldrne	r8, [pc, #648]	; 111d8 <fputs@plt+0x2bc>
   10f4c:	bl	10d30 <getenv@plt>
   10f50:	mov	r7, r0
   10f54:	ldr	r0, [pc, #640]	; 111dc <fputs@plt+0x2c0>
   10f58:	bl	10d30 <getenv@plt>
   10f5c:	mov	r6, r0
   10f60:	ldr	r0, [pc, #632]	; 111e0 <fputs@plt+0x2c4>
   10f64:	bl	10d30 <getenv@plt>
   10f68:	cmp	r6, #0
   10f6c:	cmpne	r7, #0
   10f70:	moveq	r4, #1
   10f74:	movne	r4, #0
   10f78:	cmp	r0, #0
   10f7c:	orreq	r4, r4, #1
   10f80:	cmp	r4, #0
   10f84:	mov	r5, r0
   10f88:	beq	10fb0 <fputs@plt+0x94>
   10f8c:	ldr	r4, [pc, #592]	; 111e4 <fputs@plt+0x2c8>
   10f90:	ldr	r0, [pc, #592]	; 111e8 <fputs@plt+0x2cc>
   10f94:	ldr	r1, [r4]
   10f98:	bl	10f1c <fputs@plt>
   10f9c:	ldr	r1, [r4]
   10fa0:	ldr	r0, [pc, #580]	; 111ec <fputs@plt+0x2d0>
   10fa4:	bl	10f1c <fputs@plt>
   10fa8:	mov	r0, #1
   10fac:	bl	10ef8 <exit@plt>
   10fb0:	mov	r0, r7
   10fb4:	bl	10e2c <atoi@plt>
   10fb8:	mov	r7, r0
   10fbc:	mov	r0, r6
   10fc0:	bl	10e2c <atoi@plt>
   10fc4:	mov	r6, r0
   10fc8:	mov	r0, r5
   10fcc:	bl	10e2c <atoi@plt>
   10fd0:	ldr	r3, [pc, #536]	; 111f0 <fputs@plt+0x2d4>
   10fd4:	str	r0, [r3, #12]
   10fd8:	cmp	r4, r8
   10fdc:	blt	111a0 <fputs@plt+0x284>
   10fe0:	mov	r1, #2
   10fe4:	ldr	r0, [pc, #520]	; 111f4 <fputs@plt+0x2d8>
   10fe8:	bl	10ca0 <open@plt>
   10fec:	subs	r4, r0, #0
   10ff0:	blt	11048 <fputs@plt+0x12c>
   10ff4:	cmp	r7, #0
   10ff8:	cmpne	r6, #0
   10ffc:	beq	11008 <fputs@plt+0xec>
   11000:	mov	r1, #0
   11004:	bl	10eb0 <dup2@plt>
   11008:	cmp	r7, #1
   1100c:	cmpne	r6, #1
   11010:	beq	11020 <fputs@plt+0x104>
   11014:	mov	r1, #1
   11018:	mov	r0, r4
   1101c:	bl	10eb0 <dup2@plt>
   11020:	cmp	r7, #2
   11024:	cmpne	r6, #2
   11028:	beq	11038 <fputs@plt+0x11c>
   1102c:	mov	r1, #2
   11030:	mov	r0, r4
   11034:	bl	10eb0 <dup2@plt>
   11038:	cmp	r4, #2
   1103c:	ble	11048 <fputs@plt+0x12c>
   11040:	mov	r0, r4
   11044:	bl	10e50 <close@plt>
   11048:	add	r5, sp, #24
   1104c:	mov	r4, #0
   11050:	mov	r3, #1
   11054:	mov	r0, r5
   11058:	str	r3, [sp, #20]
   1105c:	str	r4, [sp, #152]	; 0x98
   11060:	bl	10cac <sigemptyset@plt>
   11064:	mov	r1, #13
   11068:	mov	r0, r5
   1106c:	bl	10e14 <sigaddset@plt>
   11070:	mov	r1, #14
   11074:	mov	r0, r5
   11078:	bl	10e14 <sigaddset@plt>
   1107c:	mov	r1, #5
   11080:	mov	r0, r5
   11084:	bl	10e14 <sigaddset@plt>
   11088:	mov	r1, #28
   1108c:	mov	r0, r5
   11090:	bl	10e14 <sigaddset@plt>
   11094:	mov	r2, r4
   11098:	add	r1, sp, #20
   1109c:	mov	r0, #28
   110a0:	bl	10e74 <sigaction@plt>
   110a4:	mov	r2, r4
   110a8:	add	r1, sp, #20
   110ac:	mov	r0, #13
   110b0:	bl	10e74 <sigaction@plt>
   110b4:	mov	r2, r4
   110b8:	add	r1, sp, #20
   110bc:	mov	r0, #5
   110c0:	bl	10e74 <sigaction@plt>
   110c4:	ldr	r3, [pc, #300]	; 111f8 <fputs@plt+0x2dc>
   110c8:	mov	r2, r4
   110cc:	add	r1, sp, #20
   110d0:	mov	r0, #14
   110d4:	mov	r5, #4096	; 0x1000
   110d8:	str	r3, [sp, #20]
   110dc:	bl	10e74 <sigaction@plt>
   110e0:	mov	r3, #1024	; 0x400
   110e4:	mov	r2, r4
   110e8:	mov	r1, r4
   110ec:	stmib	sp, {r3, r5}
   110f0:	str	r8, [sp]
   110f4:	mov	r3, r4
   110f8:	mov	r0, r4
   110fc:	bl	10e80 <rb_lib_init@plt>
   11100:	mov	r0, r5
   11104:	bl	10ec8 <rb_linebuf_init@plt>
   11108:	mov	r0, r5
   1110c:	bl	10d84 <rb_init_rawbuffers@plt>
   11110:	mov	r0, #48	; 0x30
   11114:	bl	113b4 <fputs@plt+0x498>
   11118:	ldr	r5, [pc, #220]	; 111fc <fputs@plt+0x2e0>
   1111c:	ldr	r2, [pc, #220]	; 11200 <fputs@plt+0x2e4>
   11120:	mov	r1, #4
   11124:	mov	r8, r0
   11128:	str	r0, [r5, #-536]	; 0xfffffde8
   1112c:	mov	r0, r7
   11130:	bl	10e98 <rb_open@plt>
   11134:	ldr	r2, [pc, #200]	; 11204 <fputs@plt+0x2e8>
   11138:	mov	r1, #8
   1113c:	ldr	r7, [r5, #-536]	; 0xfffffde8
   11140:	str	r0, [r8, #16]
   11144:	mov	r0, r6
   11148:	bl	10e98 <rb_open@plt>
   1114c:	ldr	r3, [r5, #-536]	; 0xfffffde8
   11150:	str	r0, [r7, #20]
   11154:	ldr	r0, [r3, #16]
   11158:	bl	10d48 <rb_set_nb@plt>
   1115c:	ldr	r3, [r5, #-536]	; 0xfffffde8
   11160:	ldr	r0, [r3, #20]
   11164:	bl	10d48 <rb_set_nb@plt>
   11168:	mov	r2, r4
   1116c:	mov	r3, #10
   11170:	ldr	r1, [pc, #144]	; 11208 <fputs@plt+0x2ec>
   11174:	ldr	r0, [pc, #144]	; 1120c <fputs@plt+0x2f0>
   11178:	bl	10cdc <rb_event_addish@plt>
   1117c:	ldr	r3, [r5, #-536]	; 0xfffffde8
   11180:	mov	r1, r4
   11184:	ldr	r0, [r3, #20]
   11188:	bl	113d0 <fputs@plt+0x4b4>
   1118c:	ldr	r1, [r5, #-536]	; 0xfffffde8
   11190:	ldr	r0, [r1, #16]
   11194:	bl	12174 <fputs@plt+0x1258>
   11198:	mov	r0, r4
   1119c:	bl	10d9c <rb_lib_loop@plt>
   111a0:	cmp	r4, r7
   111a4:	cmpne	r4, r6
   111a8:	movne	r3, #1
   111ac:	moveq	r3, #0
   111b0:	cmp	r4, #2
   111b4:	movle	r3, #0
   111b8:	andgt	r3, r3, #1
   111bc:	cmp	r3, #0
   111c0:	beq	111cc <fputs@plt+0x2b0>
   111c4:	mov	r0, r4
   111c8:	bl	10e50 <close@plt>
   111cc:	add	r4, r4, #1
   111d0:	b	10fd8 <fputs@plt+0xbc>
   111d4:	andeq	r3, r1, r9, ror #27
   111d8:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   111dc:	strdeq	r3, [r1], -r0
   111e0:	strdeq	r3, [r1], -r9
   111e4:	strdeq	r4, [r2], -r0
   111e8:	andeq	r3, r1, r2, lsl #28
   111ec:	andeq	r3, r1, r7, lsr lr
   111f0:	strdeq	r4, [r2], -r8
   111f4:	andeq	r3, r1, r9, ror #28
   111f8:	andeq	r1, r1, r8, lsr r3
   111fc:	andeq	sl, r2, r0, ror #1
   11200:	andeq	r3, r1, r3, ror lr
   11204:	andeq	r3, r1, r7, lsl #29
   11208:	andeq	r1, r1, r8, asr #6
   1120c:	muleq	r1, r1, lr
   11210:	mov	fp, #0
   11214:	mov	lr, #0
   11218:	pop	{r1}		; (ldr r1, [sp], #4)
   1121c:	mov	r2, sp
   11220:	push	{r2}		; (str r2, [sp, #-4]!)
   11224:	push	{r0}		; (str r0, [sp, #-4]!)
   11228:	ldr	ip, [pc, #16]	; 11240 <fputs@plt+0x324>
   1122c:	push	{ip}		; (str ip, [sp, #-4]!)
   11230:	ldr	r0, [pc, #12]	; 11244 <fputs@plt+0x328>
   11234:	ldr	r3, [pc, #12]	; 11248 <fputs@plt+0x32c>
   11238:	bl	10cf4 <__libc_start_main@plt>
   1123c:	bl	10cd0 <abort@plt>
   11240:	andeq	r3, r1, r8, ror #23
   11244:	andeq	r0, r1, r8, lsr #30
   11248:	andeq	r3, r1, r8, lsl #23
   1124c:	ldr	r3, [pc, #20]	; 11268 <fputs@plt+0x34c>
   11250:	ldr	r2, [pc, #20]	; 1126c <fputs@plt+0x350>
   11254:	add	r3, pc, r3
   11258:	ldr	r2, [r3, r2]
   1125c:	cmp	r2, #0
   11260:	bxeq	lr
   11264:	b	10d0c <__gmon_start__@plt>
   11268:	andeq	r2, r1, r4, lsr #27
   1126c:	andeq	r0, r0, r4, ror #1
   11270:	ldr	r3, [pc, #28]	; 11294 <fputs@plt+0x378>
   11274:	ldr	r0, [pc, #28]	; 11298 <fputs@plt+0x37c>
   11278:	sub	r3, r3, r0
   1127c:	cmp	r3, #6
   11280:	bxls	lr
   11284:	ldr	r3, [pc, #16]	; 1129c <fputs@plt+0x380>
   11288:	cmp	r3, #0
   1128c:	bxeq	lr
   11290:	bx	r3
   11294:	strdeq	r4, [r2], -r3
   11298:	strdeq	r4, [r2], -r0
   1129c:	andeq	r0, r0, r0
   112a0:	ldr	r1, [pc, #36]	; 112cc <fputs@plt+0x3b0>
   112a4:	ldr	r0, [pc, #36]	; 112d0 <fputs@plt+0x3b4>
   112a8:	sub	r1, r1, r0
   112ac:	asr	r1, r1, #2
   112b0:	add	r1, r1, r1, lsr #31
   112b4:	asrs	r1, r1, #1
   112b8:	bxeq	lr
   112bc:	ldr	r3, [pc, #16]	; 112d4 <fputs@plt+0x3b8>
   112c0:	cmp	r3, #0
   112c4:	bxeq	lr
   112c8:	bx	r3
   112cc:	strdeq	r4, [r2], -r0
   112d0:	strdeq	r4, [r2], -r0
   112d4:	andeq	r0, r0, r0
   112d8:	push	{r4, lr}
   112dc:	ldr	r4, [pc, #24]	; 112fc <fputs@plt+0x3e0>
   112e0:	ldrb	r3, [r4]
   112e4:	cmp	r3, #0
   112e8:	popne	{r4, pc}
   112ec:	bl	11270 <fputs@plt+0x354>
   112f0:	mov	r3, #1
   112f4:	strb	r3, [r4]
   112f8:	pop	{r4, pc}
   112fc:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   11300:	ldr	r0, [pc, #40]	; 11330 <fputs@plt+0x414>
   11304:	ldr	r3, [r0]
   11308:	cmp	r3, #0
   1130c:	bne	11314 <fputs@plt+0x3f8>
   11310:	b	112a0 <fputs@plt+0x384>
   11314:	ldr	r3, [pc, #24]	; 11334 <fputs@plt+0x418>
   11318:	cmp	r3, #0
   1131c:	beq	11310 <fputs@plt+0x3f4>
   11320:	push	{r4, lr}
   11324:	blx	r3
   11328:	pop	{r4, lr}
   1132c:	b	112a0 <fputs@plt+0x384>
   11330:	strdeq	r3, [r2], -ip
   11334:	andeq	r0, r0, r0
   11338:	bx	lr
   1133c:	cmp	r0, #0
   11340:	bxeq	lr
   11344:	b	10d90 <free@plt>
   11348:	push	{r4, r5, r6, lr}
   1134c:	ldr	r4, [pc, #92]	; 113b0 <fputs@plt+0x494>
   11350:	ldr	r3, [r4]
   11354:	cmp	r3, #0
   11358:	ldrne	r6, [r3, #8]
   1135c:	bne	11370 <fputs@plt+0x454>
   11360:	mov	r3, #0
   11364:	str	r3, [r4]
   11368:	str	r3, [r4, #4]
   1136c:	pop	{r4, r5, r6, pc}
   11370:	ldr	r5, [r3]
   11374:	add	r0, r5, #52	; 0x34
   11378:	bl	10df0 <rb_linebuf_donebuf@plt>
   1137c:	add	r0, r5, #24
   11380:	bl	10df0 <rb_linebuf_donebuf@plt>
   11384:	ldr	r0, [r5, #20]
   11388:	bl	10e44 <rb_free_rawbuffer@plt>
   1138c:	ldr	r0, [r5, #16]
   11390:	bl	10e44 <rb_free_rawbuffer@plt>
   11394:	mov	r0, r5
   11398:	bl	1133c <fputs@plt+0x420>
   1139c:	cmp	r6, #0
   113a0:	beq	11360 <fputs@plt+0x444>
   113a4:	mov	r3, r6
   113a8:	ldr	r6, [r6, #8]
   113ac:	b	11370 <fputs@plt+0x454>
   113b0:	strdeq	r4, [r2], -r8
   113b4:	push	{r4, lr}
   113b8:	mov	r1, r0
   113bc:	mov	r0, #1
   113c0:	bl	10d3c <calloc@plt>
   113c4:	cmp	r0, #0
   113c8:	popne	{r4, pc}
   113cc:	bl	10e5c <rb_outofmemory@plt>
   113d0:	push	{r4, r5, lr}
   113d4:	sub	sp, sp, #16384	; 0x4000
   113d8:	sub	sp, sp, #4
   113dc:	mov	r4, r0
   113e0:	mov	r5, #16384	; 0x4000
   113e4:	mov	r2, r5
   113e8:	mov	r1, sp
   113ec:	mov	r0, r4
   113f0:	bl	10da8 <rb_read@plt>
   113f4:	cmp	r0, #0
   113f8:	bgt	113e4 <fputs@plt+0x4c8>
   113fc:	bne	11408 <fputs@plt+0x4ec>
   11400:	mov	r0, #0
   11404:	bl	10ef8 <exit@plt>
   11408:	bl	10f04 <__errno_location@plt>
   1140c:	ldr	r0, [r0]
   11410:	bl	10ce8 <rb_ignore_errno@plt>
   11414:	cmp	r0, #0
   11418:	beq	11400 <fputs@plt+0x4e4>
   1141c:	mov	r3, #0
   11420:	ldr	r2, [pc, #20]	; 1143c <fputs@plt+0x520>
   11424:	mov	r1, #1
   11428:	mov	r0, r4
   1142c:	bl	10d00 <rb_setselect@plt>
   11430:	add	sp, sp, #16384	; 0x4000
   11434:	add	sp, sp, #4
   11438:	pop	{r4, r5, pc}
   1143c:	ldrdeq	r1, [r1], -r0
   11440:	ldrb	r3, [r0, #128]	; 0x80
   11444:	tst	r3, #2
   11448:	bxne	lr
   1144c:	ldr	r0, [r0, #16]
   11450:	b	10ee0 <rb_rawbuf_append@plt>
   11454:	cmp	r1, #0
   11458:	push	{r4, lr}
   1145c:	bne	11474 <fputs@plt+0x558>
   11460:	ldr	r3, [pc, #124]	; 114e4 <fputs@plt+0x5c8>
   11464:	ldr	r1, [pc, #124]	; 114e8 <fputs@plt+0x5cc>
   11468:	ldr	r0, [pc, #124]	; 114ec <fputs@plt+0x5d0>
   1146c:	mov	r2, #211	; 0xd3
   11470:	bl	10d60 <__assert_fail@plt>
   11474:	cmp	r2, #0
   11478:	ldreq	r3, [pc, #100]	; 114e4 <fputs@plt+0x5c8>
   1147c:	moveq	r2, #212	; 0xd4
   11480:	ldreq	r1, [pc, #96]	; 114e8 <fputs@plt+0x5cc>
   11484:	ldreq	r0, [pc, #100]	; 114f0 <fputs@plt+0x5d4>
   11488:	beq	11470 <fputs@plt+0x554>
   1148c:	cmp	r0, #0
   11490:	ldreq	r3, [pc, #76]	; 114e4 <fputs@plt+0x5c8>
   11494:	moveq	r2, #213	; 0xd5
   11498:	ldreq	r1, [pc, #72]	; 114e8 <fputs@plt+0x5cc>
   1149c:	ldreq	r0, [pc, #80]	; 114f4 <fputs@plt+0x5d8>
   114a0:	beq	11470 <fputs@plt+0x554>
   114a4:	mov	r3, #0
   114a8:	str	r3, [r1, #8]
   114ac:	ldr	r3, [r2, #4]
   114b0:	str	r0, [r1]
   114b4:	cmp	r3, #0
   114b8:	str	r3, [r1, #4]
   114bc:	strne	r1, [r3, #8]
   114c0:	bne	114d0 <fputs@plt+0x5b4>
   114c4:	ldr	r3, [r2]
   114c8:	cmp	r3, #0
   114cc:	streq	r1, [r2]
   114d0:	ldr	r3, [r2, #8]
   114d4:	str	r1, [r2, #4]
   114d8:	add	r3, r3, #1
   114dc:	str	r3, [r2, #8]
   114e0:	pop	{r4, pc}
   114e4:	strdeq	r3, [r1], -r8
   114e8:	andeq	r3, r1, r3, lsr #24
   114ec:	andeq	r3, r1, pc, lsr ip
   114f0:	andeq	r3, r1, r9, asr #24
   114f4:	andeq	r3, r1, r6, asr ip
   114f8:	cmp	r0, #0
   114fc:	push	{r4, lr}
   11500:	bne	11518 <fputs@plt+0x5fc>
   11504:	ldr	r3, [pc, #124]	; 11588 <fputs@plt+0x66c>
   11508:	ldr	r1, [pc, #124]	; 1158c <fputs@plt+0x670>
   1150c:	ldr	r0, [pc, #124]	; 11590 <fputs@plt+0x674>
   11510:	mov	r2, #143	; 0x8f
   11514:	bl	10d60 <__assert_fail@plt>
   11518:	cmp	r1, #0
   1151c:	ldreq	r3, [pc, #100]	; 11588 <fputs@plt+0x66c>
   11520:	moveq	r2, #144	; 0x90
   11524:	ldreq	r1, [pc, #96]	; 1158c <fputs@plt+0x670>
   11528:	ldreq	r0, [pc, #100]	; 11594 <fputs@plt+0x678>
   1152c:	beq	11514 <fputs@plt+0x5f8>
   11530:	cmp	r2, #0
   11534:	ldreq	r3, [pc, #76]	; 11588 <fputs@plt+0x66c>
   11538:	moveq	r2, #145	; 0x91
   1153c:	ldreq	r1, [pc, #72]	; 1158c <fputs@plt+0x670>
   11540:	ldreq	r0, [pc, #80]	; 11598 <fputs@plt+0x67c>
   11544:	beq	11514 <fputs@plt+0x5f8>
   11548:	mov	r3, #0
   1154c:	str	r3, [r1, #4]
   11550:	ldr	r3, [r2]
   11554:	str	r0, [r1]
   11558:	cmp	r3, #0
   1155c:	str	r3, [r1, #8]
   11560:	strne	r1, [r3, #4]
   11564:	bne	11574 <fputs@plt+0x658>
   11568:	ldr	r3, [r2, #4]
   1156c:	cmp	r3, #0
   11570:	streq	r1, [r2, #4]
   11574:	ldr	r3, [r2, #8]
   11578:	str	r1, [r2]
   1157c:	add	r3, r3, #1
   11580:	str	r3, [r2, #8]
   11584:	pop	{r4, pc}
   11588:	andeq	r3, r1, r8, lsl #24
   1158c:	andeq	r3, r1, r3, lsr #24
   11590:	andeq	r3, r1, r6, asr ip
   11594:	andeq	r3, r1, pc, lsr ip
   11598:	andeq	r3, r1, r9, asr #24
   1159c:	cmp	r0, #0
   115a0:	push	{r4, lr}
   115a4:	bne	115bc <fputs@plt+0x6a0>
   115a8:	ldr	r3, [pc, #100]	; 11614 <fputs@plt+0x6f8>
   115ac:	ldr	r1, [pc, #100]	; 11618 <fputs@plt+0x6fc>
   115b0:	ldr	r0, [pc, #100]	; 1161c <fputs@plt+0x700>
   115b4:	mov	r2, #235	; 0xeb
   115b8:	bl	10d60 <__assert_fail@plt>
   115bc:	cmp	r1, #0
   115c0:	ldreq	r3, [pc, #76]	; 11614 <fputs@plt+0x6f8>
   115c4:	moveq	r2, #236	; 0xec
   115c8:	ldreq	r1, [pc, #72]	; 11618 <fputs@plt+0x6fc>
   115cc:	ldreq	r0, [pc, #76]	; 11620 <fputs@plt+0x704>
   115d0:	beq	115b8 <fputs@plt+0x69c>
   115d4:	ldr	r3, [r0, #8]
   115d8:	ldr	r2, [r0, #4]
   115dc:	cmp	r3, #0
   115e0:	strne	r2, [r3, #4]
   115e4:	streq	r2, [r1, #4]
   115e8:	ldr	r2, [r0, #4]
   115ec:	cmp	r2, #0
   115f0:	strne	r3, [r2, #8]
   115f4:	streq	r3, [r1]
   115f8:	mov	r3, #0
   115fc:	str	r3, [r0, #4]
   11600:	str	r3, [r0, #8]
   11604:	ldr	r3, [r1, #8]
   11608:	sub	r3, r3, #1
   1160c:	str	r3, [r1, #8]
   11610:	pop	{r4, pc}
   11614:	andeq	r3, r1, r4, lsl ip
   11618:	andeq	r3, r1, r3, lsr #24
   1161c:	andeq	r3, r1, pc, lsr ip
   11620:	andeq	r3, r1, r9, asr #24
   11624:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   11628:	mov	r5, r1
   1162c:	ldr	r6, [r1, #36]	; 0x24
   11630:	cmp	r6, #0
   11634:	bne	11660 <fputs@plt+0x744>
   11638:	ldr	r3, [r5, #44]	; 0x2c
   1163c:	cmp	r3, #0
   11640:	beq	11718 <fputs@plt+0x7fc>
   11644:	mov	r3, r5
   11648:	ldr	r2, [pc, #208]	; 11720 <fputs@plt+0x804>
   1164c:	mov	r1, #2
   11650:	ldr	r0, [r5, #16]
   11654:	add	sp, sp, #8
   11658:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1165c:	b	10d00 <rb_setselect@plt>
   11660:	ldr	r8, [r6, #8]
   11664:	ldr	r9, [pc, #184]	; 11724 <fputs@plt+0x808>
   11668:	add	sl, r1, #36	; 0x24
   1166c:	ldr	r4, [r6]
   11670:	ldr	r3, [r9, #12]
   11674:	add	r7, r4, #20
   11678:	str	r3, [sp, #4]
   1167c:	ldr	r3, [r4, #16]
   11680:	mov	r1, r7
   11684:	str	r3, [sp]
   11688:	ldr	r0, [r5, #16]
   1168c:	ldr	r3, [r4, #12]
   11690:	ldr	r2, [r4, #36]	; 0x24
   11694:	bl	10d18 <rb_send_fd_buf@plt>
   11698:	cmp	r0, #0
   1169c:	ble	116f0 <fputs@plt+0x7d4>
   116a0:	mov	r0, r6
   116a4:	mov	r1, sl
   116a8:	bl	1159c <fputs@plt+0x680>
   116ac:	mov	r6, #0
   116b0:	ldr	r3, [r4, #36]	; 0x24
   116b4:	cmp	r6, r3
   116b8:	blt	116e0 <fputs@plt+0x7c4>
   116bc:	ldr	r0, [r4, #12]
   116c0:	bl	1133c <fputs@plt+0x420>
   116c4:	mov	r0, r4
   116c8:	bl	1133c <fputs@plt+0x420>
   116cc:	cmp	r8, #0
   116d0:	beq	11638 <fputs@plt+0x71c>
   116d4:	mov	r6, r8
   116d8:	ldr	r8, [r8, #8]
   116dc:	b	1166c <fputs@plt+0x750>
   116e0:	ldr	r0, [r7], #4
   116e4:	bl	10e08 <rb_close@plt>
   116e8:	add	r6, r6, #1
   116ec:	b	116b0 <fputs@plt+0x794>
   116f0:	bne	116fc <fputs@plt+0x7e0>
   116f4:	mov	r0, #0
   116f8:	bl	10ef8 <exit@plt>
   116fc:	bge	116cc <fputs@plt+0x7b0>
   11700:	bl	10f04 <__errno_location@plt>
   11704:	ldr	r0, [r0]
   11708:	bl	10ce8 <rb_ignore_errno@plt>
   1170c:	cmp	r0, #0
   11710:	bne	116cc <fputs@plt+0x7b0>
   11714:	b	116f4 <fputs@plt+0x7d8>
   11718:	add	sp, sp, #8
   1171c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11720:	andeq	r1, r1, r4, lsr #12
   11724:	strdeq	r4, [r2], -r8
   11728:	push	{r4, r5, lr}
   1172c:	subs	r4, r1, #0
   11730:	sub	sp, sp, #16384	; 0x4000
   11734:	sub	sp, sp, #4
   11738:	beq	11770 <fputs@plt+0x854>
   1173c:	mov	r5, #16384	; 0x4000
   11740:	mov	r2, r5
   11744:	mov	r1, sp
   11748:	ldr	r0, [r4, #88]	; 0x58
   1174c:	bl	10da8 <rb_read@plt>
   11750:	cmp	r0, #0
   11754:	bne	1177c <fputs@plt+0x860>
   11758:	ldr	r0, [r4, #88]	; 0x58
   1175c:	bl	10e08 <rb_close@plt>
   11760:	ldr	r2, [pc, #68]	; 117ac <fputs@plt+0x890>
   11764:	mov	r1, r4
   11768:	mov	r0, r4
   1176c:	bl	114f8 <fputs@plt+0x5dc>
   11770:	add	sp, sp, #16384	; 0x4000
   11774:	add	sp, sp, #4
   11778:	pop	{r4, r5, pc}
   1177c:	bge	11740 <fputs@plt+0x824>
   11780:	bl	10f04 <__errno_location@plt>
   11784:	ldr	r0, [r0]
   11788:	bl	10ce8 <rb_ignore_errno@plt>
   1178c:	cmp	r0, #0
   11790:	beq	11758 <fputs@plt+0x83c>
   11794:	mov	r3, r4
   11798:	ldr	r2, [pc, #16]	; 117b0 <fputs@plt+0x894>
   1179c:	mov	r1, #1
   117a0:	ldr	r0, [r4, #88]	; 0x58
   117a4:	bl	10d00 <rb_setselect@plt>
   117a8:	b	11770 <fputs@plt+0x854>
   117ac:	strdeq	r4, [r2], -r8
   117b0:	andeq	r1, r1, r8, lsr #14
   117b4:	push	{r4, lr}
   117b8:	mov	r4, r0
   117bc:	ldr	r0, [r0, #16]
   117c0:	bl	10e38 <rb_rawbuf_length@plt>
   117c4:	cmp	r0, #4096	; 0x1000
   117c8:	blt	1180c <fputs@plt+0x8f0>
   117cc:	ldrb	r3, [r4, #128]	; 0x80
   117d0:	mov	r1, #1
   117d4:	ldr	r0, [r4, #88]	; 0x58
   117d8:	orr	r3, r3, #1
   117dc:	strb	r3, [r4, #128]	; 0x80
   117e0:	mov	r3, #0
   117e4:	mov	r2, r3
   117e8:	bl	10d00 <rb_setselect@plt>
   117ec:	ldrb	r3, [r4, #128]	; 0x80
   117f0:	tst	r3, #8
   117f4:	beq	11804 <fputs@plt+0x8e8>
   117f8:	mov	r1, r4
   117fc:	ldr	r0, [r4, #84]	; 0x54
   11800:	bl	11928 <fputs@plt+0xa0c>
   11804:	mov	r0, #1
   11808:	pop	{r4, pc}
   1180c:	mov	r0, #0
   11810:	pop	{r4, pc}
   11814:	push	{r4, r5, r6, r7, r8, r9, lr}
   11818:	sub	sp, sp, #16384	; 0x4000
   1181c:	sub	sp, sp, #4
   11820:	mov	r4, r1
   11824:	mov	r2, #16384	; 0x4000
   11828:	mov	r1, #0
   1182c:	mov	r0, sp
   11830:	bl	10d54 <memset@plt>
   11834:	cmp	r4, #0
   11838:	beq	11894 <fputs@plt+0x978>
   1183c:	ldrb	r3, [r4, #128]	; 0x80
   11840:	tst	r3, #2
   11844:	bne	11894 <fputs@plt+0x978>
   11848:	mov	r0, r4
   1184c:	bl	117b4 <fputs@plt+0x898>
   11850:	subs	r5, r0, #0
   11854:	bne	11894 <fputs@plt+0x978>
   11858:	mov	r9, #16384	; 0x4000
   1185c:	add	r8, r4, #52	; 0x34
   11860:	ldrb	r3, [r4, #128]	; 0x80
   11864:	tst	r3, #2
   11868:	bne	11894 <fputs@plt+0x978>
   1186c:	mov	r2, r9
   11870:	mov	r1, sp
   11874:	ldr	r0, [r4, #88]	; 0x58
   11878:	bl	10da8 <rb_read@plt>
   1187c:	subs	r2, r0, #0
   11880:	bne	118a0 <fputs@plt+0x984>
   11884:	mov	r2, #0
   11888:	mov	r1, r2
   1188c:	mov	r0, r4
   11890:	bl	11b0c <fputs@plt+0xbf0>
   11894:	add	sp, sp, #16384	; 0x4000
   11898:	add	sp, sp, #4
   1189c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   118a0:	bge	118e4 <fputs@plt+0x9c8>
   118a4:	bl	10f04 <__errno_location@plt>
   118a8:	ldr	r0, [r0]
   118ac:	bl	10ce8 <rb_ignore_errno@plt>
   118b0:	cmp	r0, #0
   118b4:	beq	11884 <fputs@plt+0x968>
   118b8:	mov	r3, r4
   118bc:	ldr	r2, [pc, #96]	; 11924 <fputs@plt+0xa08>
   118c0:	mov	r1, #1
   118c4:	ldr	r0, [r4, #88]	; 0x58
   118c8:	bl	10d00 <rb_setselect@plt>
   118cc:	ldrb	r3, [r4, #128]	; 0x80
   118d0:	tst	r3, #8
   118d4:	beq	11894 <fputs@plt+0x978>
   118d8:	mov	r0, r4
   118dc:	bl	11a30 <fputs@plt+0xb14>
   118e0:	b	11894 <fputs@plt+0x978>
   118e4:	ldrd	r6, [r4, #112]	; 0x70
   118e8:	mov	r3, r5
   118ec:	mov	r1, sp
   118f0:	adds	r6, r6, r2
   118f4:	adc	r7, r7, r2, asr #31
   118f8:	mov	r0, r8
   118fc:	strd	r6, [r4, #112]	; 0x70
   11900:	bl	10d6c <rb_linebuf_parse@plt>
   11904:	ldrb	r3, [r4, #128]	; 0x80
   11908:	tst	r3, #2
   1190c:	bne	11894 <fputs@plt+0x978>
   11910:	mov	r0, r4
   11914:	bl	117b4 <fputs@plt+0x898>
   11918:	cmp	r0, #0
   1191c:	beq	11860 <fputs@plt+0x944>
   11920:	b	11894 <fputs@plt+0x978>
   11924:	andeq	r1, r1, r4, lsl r8
   11928:	ldrb	r3, [r1, #128]	; 0x80
   1192c:	tst	r3, #2
   11930:	beq	11998 <fputs@plt+0xa7c>
   11934:	bx	lr
   11938:	ldrd	r2, [r4, #96]	; 0x60
   1193c:	adds	r2, r2, r0
   11940:	adc	r3, r3, r0, asr #31
   11944:	strd	r2, [r4, #96]	; 0x60
   11948:	mov	r1, r5
   1194c:	ldr	r0, [r4, #16]
   11950:	bl	10eec <rb_rawbuf_flush@plt>
   11954:	cmp	r0, #0
   11958:	bgt	11938 <fputs@plt+0xa1c>
   1195c:	beq	11a08 <fputs@plt+0xaec>
   11960:	bl	10f04 <__errno_location@plt>
   11964:	ldr	r0, [r0]
   11968:	bl	10ce8 <rb_ignore_errno@plt>
   1196c:	cmp	r0, #0
   11970:	bne	119a8 <fputs@plt+0xa8c>
   11974:	bl	10f04 <__errno_location@plt>
   11978:	ldr	r0, [r0]
   1197c:	bl	10cb8 <strerror@plt>
   11980:	ldr	r2, [pc, #152]	; 11a20 <fputs@plt+0xb04>
   11984:	mov	r1, #1
   11988:	mov	r3, r0
   1198c:	mov	r0, r4
   11990:	pop	{r4, r5, r6, lr}
   11994:	b	11b0c <fputs@plt+0xbf0>
   11998:	push	{r4, r5, r6, lr}
   1199c:	mov	r5, r0
   119a0:	mov	r4, r1
   119a4:	b	11948 <fputs@plt+0xa2c>
   119a8:	ldr	r0, [r4, #16]
   119ac:	bl	10e38 <rb_rawbuf_length@plt>
   119b0:	mov	r1, #2
   119b4:	cmp	r0, #0
   119b8:	movle	r3, #0
   119bc:	movgt	r3, r4
   119c0:	movle	r2, r3
   119c4:	ldrgt	r2, [pc, #88]	; 11a24 <fputs@plt+0xb08>
   119c8:	ldr	r0, [r4, #84]	; 0x54
   119cc:	bl	10d00 <rb_setselect@plt>
   119d0:	ldrb	r3, [r4, #128]	; 0x80
   119d4:	tst	r3, #1
   119d8:	popeq	{r4, r5, r6, pc}
   119dc:	ldr	r0, [r4, #16]
   119e0:	bl	10e38 <rb_rawbuf_length@plt>
   119e4:	cmp	r0, #0
   119e8:	popne	{r4, r5, r6, pc}
   119ec:	ldrb	r3, [r4, #128]	; 0x80
   119f0:	mov	r1, r4
   119f4:	ldr	r0, [r4, #88]	; 0x58
   119f8:	bic	r3, r3, #1
   119fc:	strb	r3, [r4, #128]	; 0x80
   11a00:	pop	{r4, r5, r6, lr}
   11a04:	b	11814 <fputs@plt+0x8f8>
   11a08:	ldr	r3, [pc, #24]	; 11a28 <fputs@plt+0xb0c>
   11a0c:	ldr	r2, [pc, #24]	; 11a2c <fputs@plt+0xb10>
   11a10:	mov	r1, #1
   11a14:	mov	r0, r4
   11a18:	bl	11b0c <fputs@plt+0xbf0>
   11a1c:	b	11974 <fputs@plt+0xa58>
   11a20:	andeq	r3, r1, r3, ror #24
   11a24:	andeq	r1, r1, r8, lsr #18
   11a28:	andeq	r3, r1, r3, ror ip
   11a2c:	andeq	r3, r1, r0, ror ip
   11a30:	push	{r4, r5, r6, r7, r8, lr}
   11a34:	sub	sp, sp, #16384	; 0x4000
   11a38:	sub	sp, sp, #16
   11a3c:	mov	r4, r0
   11a40:	mov	r2, #16384	; 0x4000
   11a44:	mov	r1, #0
   11a48:	add	r0, sp, #16
   11a4c:	bl	10d54 <memset@plt>
   11a50:	add	r6, r4, #52	; 0x34
   11a54:	mov	r7, #0
   11a58:	mov	r8, #16384	; 0x4000
   11a5c:	mov	r3, #0
   11a60:	str	r7, [sp]
   11a64:	mov	r2, r8
   11a68:	add	r1, sp, #16
   11a6c:	mov	r0, r6
   11a70:	bl	10dc0 <rb_linebuf_get@plt>
   11a74:	ldrb	r3, [r4, #128]	; 0x80
   11a78:	subs	r5, r0, #0
   11a7c:	beq	11ae8 <fputs@plt+0xbcc>
   11a80:	tst	r3, #2
   11a84:	bne	11a5c <fputs@plt+0xb40>
   11a88:	cmp	r5, #122	; 0x7a
   11a8c:	add	r3, r5, #2
   11a90:	mvn	r2, #126	; 0x7e
   11a94:	andle	r3, r3, #127	; 0x7f
   11a98:	strb	r2, [sp, #12]
   11a9c:	strble	r3, [sp, #13]
   11aa0:	movle	r2, #2
   11aa4:	movgt	r2, #126	; 0x7e
   11aa8:	strbgt	r2, [sp, #13]
   11aac:	movgt	r2, #4
   11ab0:	rev16gt	r3, r3
   11ab4:	strhgt	r3, [sp, #14]
   11ab8:	add	r1, sp, #12
   11abc:	mov	r0, r4
   11ac0:	bl	11440 <fputs@plt+0x524>
   11ac4:	mov	r2, r5
   11ac8:	add	r1, sp, #16
   11acc:	mov	r0, r4
   11ad0:	bl	11440 <fputs@plt+0x524>
   11ad4:	mov	r2, #2
   11ad8:	ldr	r1, [pc, #40]	; 11b08 <fputs@plt+0xbec>
   11adc:	mov	r0, r4
   11ae0:	bl	11440 <fputs@plt+0x524>
   11ae4:	b	11a58 <fputs@plt+0xb3c>
   11ae8:	tst	r3, #8
   11aec:	beq	11afc <fputs@plt+0xbe0>
   11af0:	mov	r1, r4
   11af4:	ldr	r0, [r4, #84]	; 0x54
   11af8:	bl	11928 <fputs@plt+0xa0c>
   11afc:	add	sp, sp, #16384	; 0x4000
   11b00:	add	sp, sp, #16
   11b04:	pop	{r4, r5, r6, r7, r8, pc}
   11b08:	andeq	r3, r1, r3, ror #26
   11b0c:	push	{r2, r3}
   11b10:	push	{r4, r5, r6, r7, lr}
   11b14:	sub	sp, sp, #396	; 0x18c
   11b18:	ldrb	r3, [r0, #128]	; 0x80
   11b1c:	ldr	r6, [sp, #416]	; 0x1a0
   11b20:	tst	r3, #2
   11b24:	bne	11bb4 <fputs@plt+0xc98>
   11b28:	tst	r3, #8
   11b2c:	mov	r4, r0
   11b30:	mov	r5, r1
   11b34:	beq	11b3c <fputs@plt+0xc20>
   11b38:	bl	11a30 <fputs@plt+0xb14>
   11b3c:	ldr	r1, [r4, #84]	; 0x54
   11b40:	ldr	r0, [r4, #16]
   11b44:	bl	10eec <rb_rawbuf_flush@plt>
   11b48:	add	r1, r4, #24
   11b4c:	ldr	r0, [r4, #88]	; 0x58
   11b50:	bl	10dcc <rb_linebuf_flush@plt>
   11b54:	ldr	r0, [r4, #84]	; 0x54
   11b58:	bl	10e08 <rb_close@plt>
   11b5c:	ldrb	r3, [r4, #128]	; 0x80
   11b60:	ldr	r0, [r4, #80]	; 0x50
   11b64:	mov	r1, #2000	; 0x7d0
   11b68:	orr	r3, r3, #2
   11b6c:	strb	r3, [r4, #128]	; 0x80
   11b70:	bl	13b3c <fputs@plt+0x2c20>
   11b74:	mov	r2, #12
   11b78:	ldr	r3, [pc, #256]	; 11c80 <fputs@plt+0xd64>
   11b7c:	mov	r0, r4
   11b80:	mla	r1, r2, r1, r3
   11b84:	bl	1159c <fputs@plt+0x680>
   11b88:	cmp	r6, #0
   11b8c:	cmpne	r5, #0
   11b90:	moveq	r5, #1
   11b94:	movne	r5, #0
   11b98:	bne	11bc4 <fputs@plt+0xca8>
   11b9c:	ldr	r0, [r4, #88]	; 0x58
   11ba0:	bl	10e08 <rb_close@plt>
   11ba4:	ldr	r2, [pc, #216]	; 11c84 <fputs@plt+0xd68>
   11ba8:	mov	r1, r4
   11bac:	mov	r0, r4
   11bb0:	bl	114f8 <fputs@plt+0x5dc>
   11bb4:	add	sp, sp, #396	; 0x18c
   11bb8:	pop	{r4, r5, r6, r7, lr}
   11bbc:	add	sp, sp, #8
   11bc0:	bx	lr
   11bc4:	mov	r3, r4
   11bc8:	ldr	r0, [r4, #88]	; 0x58
   11bcc:	ldr	r2, [pc, #180]	; 11c88 <fputs@plt+0xd6c>
   11bd0:	mov	r1, #1
   11bd4:	bl	10d00 <rb_setselect@plt>
   11bd8:	mov	r3, r5
   11bdc:	mov	r2, r5
   11be0:	ldr	r0, [r4, #88]	; 0x58
   11be4:	mov	r1, #2
   11be8:	bl	10d00 <rb_setselect@plt>
   11bec:	add	r3, sp, #420	; 0x1a4
   11bf0:	mov	r2, r6
   11bf4:	mov	r1, #128	; 0x80
   11bf8:	add	r0, sp, #8
   11bfc:	str	r3, [sp, #4]
   11c00:	bl	10d24 <vsnprintf@plt>
   11c04:	mov	r3, #68	; 0x44
   11c08:	strb	r3, [sp, #136]	; 0x88
   11c0c:	ldr	r3, [r4, #80]	; 0x50
   11c10:	add	r1, sp, #8
   11c14:	mov	r2, #251	; 0xfb
   11c18:	add	r0, sp, #141	; 0x8d
   11c1c:	str	r3, [sp, #137]	; 0x89
   11c20:	bl	10d78 <rb_strlcpy@plt>
   11c24:	add	r0, sp, #8
   11c28:	bl	10dd8 <strlen@plt>
   11c2c:	ldr	r7, [r4, #12]
   11c30:	add	r6, r0, #6
   11c34:	mov	r0, #40	; 0x28
   11c38:	bl	113b4 <fputs@plt+0x498>
   11c3c:	mov	r4, r0
   11c40:	mov	r0, r6
   11c44:	bl	113b4 <fputs@plt+0x498>
   11c48:	mov	r2, r6
   11c4c:	add	r1, sp, #136	; 0x88
   11c50:	str	r6, [r4, #16]
   11c54:	str	r0, [r4, #12]
   11c58:	bl	10de4 <memcpy@plt>
   11c5c:	mov	r1, r4
   11c60:	mov	r0, r4
   11c64:	str	r5, [r4, #36]	; 0x24
   11c68:	add	r2, r7, #36	; 0x24
   11c6c:	bl	11454 <fputs@plt+0x538>
   11c70:	mov	r1, r7
   11c74:	ldr	r0, [r7, #16]
   11c78:	bl	11624 <fputs@plt+0x708>
   11c7c:	b	11bb4 <fputs@plt+0xc98>
   11c80:	andeq	r4, r2, r8, lsl #2
   11c84:	strdeq	r4, [r2], -r8
   11c88:	andeq	r1, r1, r8, lsr #14
   11c8c:	ldrb	r3, [r1, #128]	; 0x80
   11c90:	tst	r3, #2
   11c94:	bxne	lr
   11c98:	push	{r4, r5, r6, lr}
   11c9c:	mov	r4, r1
   11ca0:	mov	r5, r0
   11ca4:	add	r6, r1, #24
   11ca8:	mov	r1, r6
   11cac:	mov	r0, r5
   11cb0:	bl	10dcc <rb_linebuf_flush@plt>
   11cb4:	cmp	r0, #0
   11cb8:	bgt	11cd4 <fputs@plt+0xdb8>
   11cbc:	bne	11ce8 <fputs@plt+0xdcc>
   11cc0:	mov	r2, #0
   11cc4:	mov	r0, r4
   11cc8:	mov	r1, r2
   11ccc:	pop	{r4, r5, r6, lr}
   11cd0:	b	11b0c <fputs@plt+0xbf0>
   11cd4:	ldrd	r2, [r4, #120]	; 0x78
   11cd8:	adds	r2, r2, r0
   11cdc:	adc	r3, r3, r0, asr #31
   11ce0:	strd	r2, [r4, #120]	; 0x78
   11ce4:	b	11ca8 <fputs@plt+0xd8c>
   11ce8:	bl	10f04 <__errno_location@plt>
   11cec:	ldr	r0, [r0]
   11cf0:	bl	10ce8 <rb_ignore_errno@plt>
   11cf4:	cmp	r0, #0
   11cf8:	beq	11cc0 <fputs@plt+0xda4>
   11cfc:	ldr	r3, [r4, #40]	; 0x28
   11d00:	cmp	r3, #0
   11d04:	movgt	r3, r4
   11d08:	movle	r3, #0
   11d0c:	ldrle	r0, [r4, #88]	; 0x58
   11d10:	ldrgt	r2, [pc, #20]	; 11d2c <fputs@plt+0xe10>
   11d14:	movgt	r1, #2
   11d18:	ldrgt	r0, [r3, #88]	; 0x58
   11d1c:	movle	r2, r3
   11d20:	movle	r1, #2
   11d24:	pop	{r4, r5, r6, lr}
   11d28:	b	10d00 <rb_setselect@plt>
   11d2c:	andeq	r1, r1, ip, lsl #25
   11d30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d34:	sub	sp, sp, #32768	; 0x8000
   11d38:	sub	sp, sp, #120	; 0x78
   11d3c:	mov	r4, r1
   11d40:	mov	r7, r0
   11d44:	mov	r2, #16384	; 0x4000
   11d48:	mov	r1, #0
   11d4c:	add	r0, sp, #120	; 0x78
   11d50:	bl	10d54 <memset@plt>
   11d54:	cmp	r4, #0
   11d58:	beq	11dc4 <fputs@plt+0xea8>
   11d5c:	ldrb	r3, [r4, #128]	; 0x80
   11d60:	tst	r3, #2
   11d64:	bne	11dc4 <fputs@plt+0xea8>
   11d68:	add	r5, sp, #24
   11d6c:	ldrb	r3, [r4, #128]	; 0x80
   11d70:	tst	r3, #2
   11d74:	bne	11dc4 <fputs@plt+0xea8>
   11d78:	mov	r2, #16384	; 0x4000
   11d7c:	add	r1, sp, #120	; 0x78
   11d80:	mov	r0, r7
   11d84:	bl	10da8 <rb_read@plt>
   11d88:	subs	r8, r0, #0
   11d8c:	bge	11de4 <fputs@plt+0xec8>
   11d90:	bl	10f04 <__errno_location@plt>
   11d94:	ldr	r0, [r0]
   11d98:	bl	10ce8 <rb_ignore_errno@plt>
   11d9c:	cmp	r0, #0
   11da0:	beq	11dd0 <fputs@plt+0xeb4>
   11da4:	mov	r1, #1
   11da8:	mov	r0, r7
   11dac:	mov	r3, r4
   11db0:	ldr	r2, [pc, #920]	; 12150 <fputs@plt+0x1234>
   11db4:	bl	10d00 <rb_setselect@plt>
   11db8:	mov	r1, r4
   11dbc:	ldr	r0, [r4, #88]	; 0x58
   11dc0:	bl	11c8c <fputs@plt+0xd70>
   11dc4:	add	sp, sp, #32768	; 0x8000
   11dc8:	add	sp, sp, #120	; 0x78
   11dcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11dd0:	ldr	r2, [pc, #892]	; 12154 <fputs@plt+0x1238>
   11dd4:	mov	r1, #0
   11dd8:	mov	r0, r4
   11ddc:	bl	11b0c <fputs@plt+0xbf0>
   11de0:	b	11dc4 <fputs@plt+0xea8>
   11de4:	beq	11dd0 <fputs@plt+0xeb4>
   11de8:	mov	r2, r8
   11dec:	add	r1, sp, #120	; 0x78
   11df0:	ldr	r0, [r4, #20]
   11df4:	bl	10ee0 <rb_rawbuf_append@plt>
   11df8:	ldrb	r6, [r4, #128]	; 0x80
   11dfc:	ands	r6, r6, #8
   11e00:	bne	12014 <fputs@plt+0x10f8>
   11e04:	add	r0, sp, #16384	; 0x4000
   11e08:	mov	r2, #16384	; 0x4000
   11e0c:	mov	r1, r6
   11e10:	add	r0, r0, #120	; 0x78
   11e14:	bl	10d54 <memset@plt>
   11e18:	ldr	sl, [pc, #824]	; 12158 <fputs@plt+0x123c>
   11e1c:	mov	r9, #16384	; 0x4000
   11e20:	add	r1, sp, #16384	; 0x4000
   11e24:	mov	r2, r9
   11e28:	add	r1, r1, #120	; 0x78
   11e2c:	ldr	r0, [r4, #20]
   11e30:	bl	10e68 <rb_rawbuf_get@plt>
   11e34:	cmp	r0, #0
   11e38:	beq	11edc <fputs@plt+0xfc0>
   11e3c:	add	r0, sp, #16384	; 0x4000
   11e40:	mov	r1, sl
   11e44:	add	r0, r0, #120	; 0x78
   11e48:	bl	10dfc <rb_strcasestr@plt>
   11e4c:	cmp	r0, #0
   11e50:	addne	r0, r0, #18
   11e54:	beq	11e20 <fputs@plt+0xf04>
   11e58:	add	r3, sp, #32768	; 0x8000
   11e5c:	add	r3, r3, #120	; 0x78
   11e60:	cmp	r0, r3
   11e64:	mov	r1, r0
   11e68:	bcs	11eac <fputs@plt+0xf90>
   11e6c:	mov	r2, r0
   11e70:	ldrb	r3, [r2], #1
   11e74:	cmp	r3, #0
   11e78:	bne	11ec8 <fputs@plt+0xfac>
   11e7c:	add	r3, sp, #32768	; 0x8000
   11e80:	add	r3, r3, #120	; 0x78
   11e84:	cmp	r0, r3
   11e88:	mov	r2, r0
   11e8c:	bcs	11eac <fputs@plt+0xf90>
   11e90:	ldrb	r3, [r0], #1
   11e94:	cmp	r3, #0
   11e98:	beq	11eac <fputs@plt+0xf90>
   11e9c:	cmp	r3, #10
   11ea0:	cmpne	r3, #13
   11ea4:	bne	11e7c <fputs@plt+0xf60>
   11ea8:	strb	r6, [r2]
   11eac:	mov	r2, #37	; 0x25
   11eb0:	add	r0, r4, #129	; 0x81
   11eb4:	bl	10d78 <rb_strlcpy@plt>
   11eb8:	ldrb	r3, [r4, #128]	; 0x80
   11ebc:	orr	r3, r3, #8
   11ec0:	strb	r3, [r4, #128]	; 0x80
   11ec4:	b	11e20 <fputs@plt+0xf04>
   11ec8:	cmp	r3, #32
   11ecc:	cmpne	r3, #9
   11ed0:	bne	11e7c <fputs@plt+0xf60>
   11ed4:	mov	r0, r2
   11ed8:	b	11e58 <fputs@plt+0xf3c>
   11edc:	ldrb	r3, [r4, #128]	; 0x80
   11ee0:	tst	r3, #8
   11ee4:	beq	11f78 <fputs@plt+0x105c>
   11ee8:	add	r6, r4, #129	; 0x81
   11eec:	mov	r0, r5
   11ef0:	bl	1379c <fputs@plt+0x2880>
   11ef4:	mov	r0, r6
   11ef8:	bl	10dd8 <strlen@plt>
   11efc:	mov	r1, r6
   11f00:	mov	r2, r0
   11f04:	mov	r0, r5
   11f08:	bl	137dc <fputs@plt+0x28c0>
   11f0c:	mov	r2, #36	; 0x24
   11f10:	ldr	r1, [pc, #580]	; 1215c <fputs@plt+0x1240>
   11f14:	mov	r0, r5
   11f18:	bl	137dc <fputs@plt+0x28c0>
   11f1c:	add	r1, sp, #4
   11f20:	mov	r0, r5
   11f24:	bl	13874 <fputs@plt+0x2958>
   11f28:	mov	r1, #20
   11f2c:	add	r0, sp, #4
   11f30:	bl	10f10 <rb_base64_encode@plt>
   11f34:	mov	r2, #129	; 0x81
   11f38:	ldr	r1, [pc, #544]	; 12160 <fputs@plt+0x1244>
   11f3c:	mov	r6, r0
   11f40:	mov	r0, r4
   11f44:	bl	11440 <fputs@plt+0x524>
   11f48:	mov	r0, r6
   11f4c:	bl	10dd8 <strlen@plt>
   11f50:	mov	r1, r6
   11f54:	mov	r2, r0
   11f58:	mov	r0, r4
   11f5c:	bl	11440 <fputs@plt+0x524>
   11f60:	mov	r0, r4
   11f64:	mov	r2, #4
   11f68:	ldr	r1, [pc, #500]	; 12164 <fputs@plt+0x1248>
   11f6c:	bl	11440 <fputs@plt+0x524>
   11f70:	mov	r0, r6
   11f74:	bl	1133c <fputs@plt+0x420>
   11f78:	mov	r1, r4
   11f7c:	ldr	r0, [r4, #84]	; 0x54
   11f80:	bl	11928 <fputs@plt+0xa0c>
   11f84:	cmp	r8, #16384	; 0x4000
   11f88:	bge	11d6c <fputs@plt+0xe50>
   11f8c:	mov	r3, r4
   11f90:	ldr	r2, [pc, #440]	; 12150 <fputs@plt+0x1234>
   11f94:	mov	r1, #1
   11f98:	mov	r0, r7
   11f9c:	bl	10d00 <rb_setselect@plt>
   11fa0:	b	11dc4 <fputs@plt+0xea8>
   11fa4:	add	r9, sp, #16384	; 0x4000
   11fa8:	add	r9, r9, #120	; 0x78
   11fac:	mov	r2, #16384	; 0x4000
   11fb0:	mov	r1, #0
   11fb4:	mov	r0, r9
   11fb8:	bl	10d54 <memset@plt>
   11fbc:	mov	r2, sl
   11fc0:	add	r1, sp, #4
   11fc4:	ldr	r0, [r4, #20]
   11fc8:	bl	10e68 <rb_rawbuf_get@plt>
   11fcc:	cmp	r0, #0
   11fd0:	ldreq	r2, [pc, #400]	; 12168 <fputs@plt+0x124c>
   11fd4:	beq	12008 <fputs@plt+0x10ec>
   11fd8:	ldrh	r3, [sp, #4]
   11fdc:	cmp	r6, #1
   11fe0:	rev16	r3, r3
   11fe4:	strh	r3, [sp, #4]
   11fe8:	bne	120d0 <fputs@plt+0x11b4>
   11fec:	mov	r2, #4
   11ff0:	mov	r1, r5
   11ff4:	ldr	r0, [r4, #20]
   11ff8:	bl	10e68 <rb_rawbuf_get@plt>
   11ffc:	cmp	r0, #0
   12000:	bne	120d0 <fputs@plt+0x11b4>
   12004:	ldr	r2, [pc, #352]	; 1216c <fputs@plt+0x1250>
   12008:	mov	r1, #1
   1200c:	mov	r0, r4
   12010:	bl	11b0c <fputs@plt+0xbf0>
   12014:	mov	r9, #2
   12018:	mov	r2, r9
   1201c:	mov	r1, sp
   12020:	ldr	r0, [r4, #20]
   12024:	bl	10e68 <rb_rawbuf_get@plt>
   12028:	cmp	r0, #2
   1202c:	mov	sl, r0
   12030:	bne	12140 <fputs@plt+0x1224>
   12034:	ldrb	r3, [sp, #1]
   12038:	lsr	r6, r3, #7
   1203c:	and	r3, r3, #127	; 0x7f
   12040:	cmp	r3, #126	; 0x7e
   12044:	strb	r3, [sp, #1]
   12048:	beq	11fa4 <fputs@plt+0x1088>
   1204c:	cmp	r3, #127	; 0x7f
   12050:	beq	12018 <fputs@plt+0x10fc>
   12054:	cmp	r6, #1
   12058:	bne	12074 <fputs@plt+0x1158>
   1205c:	mov	r2, #4
   12060:	mov	r1, r5
   12064:	ldr	r0, [r4, #20]
   12068:	bl	10e68 <rb_rawbuf_get@plt>
   1206c:	cmp	r0, #0
   12070:	beq	12004 <fputs@plt+0x10e8>
   12074:	add	r9, sp, #16384	; 0x4000
   12078:	add	r9, r9, #120	; 0x78
   1207c:	ldrb	r2, [sp, #1]
   12080:	mov	r1, r9
   12084:	ldr	r0, [r4, #20]
   12088:	bl	10e68 <rb_rawbuf_get@plt>
   1208c:	subs	r2, r0, #0
   12090:	beq	120e8 <fputs@plt+0x11cc>
   12094:	cmp	r6, #1
   12098:	moveq	r3, #0
   1209c:	bne	120fc <fputs@plt+0x11e0>
   120a0:	cmp	r2, r3
   120a4:	ble	120fc <fputs@plt+0x11e0>
   120a8:	rsbs	ip, r3, #0
   120ac:	and	ip, ip, #3
   120b0:	and	r1, r3, #3
   120b4:	rsbpl	r1, ip, #0
   120b8:	ldrb	r0, [r9, r3]
   120bc:	ldrb	r1, [r5, r1]
   120c0:	eor	r1, r1, r0
   120c4:	strb	r1, [r9, r3]
   120c8:	add	r3, r3, #1
   120cc:	b	120a0 <fputs@plt+0x1184>
   120d0:	ldrh	r2, [sp, #4]
   120d4:	mov	r1, r9
   120d8:	ldr	r0, [r4, #20]
   120dc:	bl	10e68 <rb_rawbuf_get@plt>
   120e0:	subs	r2, r0, #0
   120e4:	bne	120f0 <fputs@plt+0x11d4>
   120e8:	ldr	r2, [pc, #128]	; 12170 <fputs@plt+0x1254>
   120ec:	b	12008 <fputs@plt+0x10ec>
   120f0:	cmp	r6, #1
   120f4:	moveq	r3, #0
   120f8:	beq	12134 <fputs@plt+0x1218>
   120fc:	mov	r3, #1
   12100:	mov	r1, r9
   12104:	add	r0, r4, #24
   12108:	bl	10d6c <rb_linebuf_parse@plt>
   1210c:	b	12014 <fputs@plt+0x10f8>
   12110:	rsbs	ip, r3, #0
   12114:	and	ip, ip, #3
   12118:	and	r1, r3, #3
   1211c:	rsbpl	r1, ip, #0
   12120:	ldrb	r0, [r9, r3]
   12124:	ldrb	r1, [r5, r1]
   12128:	eor	r1, r1, r0
   1212c:	strb	r1, [r9, r3]
   12130:	add	r3, r3, #1
   12134:	cmp	r2, r3
   12138:	bgt	12110 <fputs@plt+0x11f4>
   1213c:	b	120fc <fputs@plt+0x11e0>
   12140:	mov	r1, r4
   12144:	ldr	r0, [r4, #88]	; 0x58
   12148:	bl	11c8c <fputs@plt+0xd70>
   1214c:	b	11f84 <fputs@plt+0x1068>
   12150:	andeq	r1, r1, r0, lsr sp
   12154:	muleq	r1, r5, ip
   12158:	andeq	r3, r1, r7, lsr #25
   1215c:			; <UNDEFINED> instruction: 0x00013cba
   12160:	ldrdeq	r3, [r1], -pc	; <UNPREDICTABLE>
   12164:	andeq	r3, r1, r1, ror #26
   12168:	andeq	r3, r1, r6, ror #26
   1216c:	muleq	r1, r4, sp
   12170:	andeq	r3, r1, r0, asr #27
   12174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12178:	mov	r6, r1
   1217c:	sub	sp, sp, #20
   12180:	mov	r7, #16384	; 0x4000
   12184:	mov	r8, #4
   12188:	add	r9, r1, #24
   1218c:	mov	r0, #40	; 0x28
   12190:	bl	113b4 <fputs@plt+0x498>
   12194:	mov	r4, r0
   12198:	mov	r0, r7
   1219c:	bl	113b4 <fputs@plt+0x498>
   121a0:	add	r5, r4, #20
   121a4:	str	r7, [r4, #16]
   121a8:	mov	r3, r5
   121ac:	mov	r2, #16384	; 0x4000
   121b0:	str	r0, [r4, #12]
   121b4:	mov	r1, r0
   121b8:	str	r8, [sp]
   121bc:	ldr	r0, [r6, #16]
   121c0:	bl	10ea4 <rb_recv_fd_buf@plt>
   121c4:	subs	sl, r0, #0
   121c8:	bgt	121ec <fputs@plt+0x12d0>
   121cc:	ldr	r0, [r4, #12]
   121d0:	bl	1133c <fputs@plt+0x420>
   121d4:	mov	r0, r4
   121d8:	bl	1133c <fputs@plt+0x420>
   121dc:	cmp	sl, #0
   121e0:	bne	12224 <fputs@plt+0x1308>
   121e4:	mov	r0, #0
   121e8:	bl	10ef8 <exit@plt>
   121ec:	str	sl, [r4, #16]
   121f0:	mov	r2, r9
   121f4:	mov	r1, r4
   121f8:	mov	r0, r4
   121fc:	bl	11454 <fputs@plt+0x538>
   12200:	mov	r3, #0
   12204:	ldr	r2, [r5], #4
   12208:	cmp	r2, #0
   1220c:	beq	1221c <fputs@plt+0x1300>
   12210:	add	r3, r3, #1
   12214:	cmp	r3, #4
   12218:	bne	12204 <fputs@plt+0x12e8>
   1221c:	str	r3, [r4, #36]	; 0x24
   12220:	b	1218c <fputs@plt+0x1270>
   12224:	bl	10f04 <__errno_location@plt>
   12228:	ldr	r0, [r0]
   1222c:	bl	10ce8 <rb_ignore_errno@plt>
   12230:	cmp	r0, #0
   12234:	beq	121e4 <fputs@plt+0x12c8>
   12238:	ldr	r7, [r6, #24]
   1223c:	cmp	r7, #0
   12240:	bne	12260 <fputs@plt+0x1344>
   12244:	mov	r3, r6
   12248:	ldr	r2, [pc, #384]	; 123d0 <fputs@plt+0x14b4>
   1224c:	mov	r1, #1
   12250:	ldr	r0, [r6, #16]
   12254:	add	sp, sp, #20
   12258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1225c:	b	10d00 <rb_setselect@plt>
   12260:	ldr	r8, [r7, #8]
   12264:	ldr	sl, [pc, #360]	; 123d4 <fputs@plt+0x14b8>
   12268:	mov	fp, #12
   1226c:	ldr	r5, [r7]
   12270:	ldr	r3, [r5, #12]
   12274:	ldrb	r3, [r3]
   12278:	cmp	r3, #65	; 0x41
   1227c:	bne	122a0 <fputs@plt+0x1384>
   12280:	ldr	r3, [r5, #36]	; 0x24
   12284:	cmp	r3, #2
   12288:	beq	122d0 <fputs@plt+0x13b4>
   1228c:	add	r9, r5, #20
   12290:	mov	r4, #0
   12294:	ldr	r3, [r5, #36]	; 0x24
   12298:	cmp	r4, r3
   1229c:	blt	123c0 <fputs@plt+0x14a4>
   122a0:	add	r1, r6, #24
   122a4:	mov	r0, r7
   122a8:	bl	1159c <fputs@plt+0x680>
   122ac:	ldr	r0, [r5, #12]
   122b0:	bl	1133c <fputs@plt+0x420>
   122b4:	mov	r0, r5
   122b8:	bl	1133c <fputs@plt+0x420>
   122bc:	cmp	r8, #0
   122c0:	beq	12244 <fputs@plt+0x1328>
   122c4:	mov	r7, r8
   122c8:	ldr	r8, [r8, #8]
   122cc:	b	1226c <fputs@plt+0x1350>
   122d0:	ldr	r3, [r5, #16]
   122d4:	cmp	r3, #5
   122d8:	bne	1228c <fputs@plt+0x1370>
   122dc:	ldr	r3, [r5, #20]
   122e0:	mov	r0, #168	; 0xa8
   122e4:	ldr	r9, [r5, #24]
   122e8:	str	r3, [sp, #12]
   122ec:	bl	113b4 <fputs@plt+0x498>
   122f0:	ldr	r3, [sp, #12]
   122f4:	mvn	r2, #0
   122f8:	mov	r4, r0
   122fc:	str	r2, [r0, #80]	; 0x50
   12300:	str	r3, [r0, #84]	; 0x54
   12304:	str	r6, [r0, #12]
   12308:	str	r9, [r0, #88]	; 0x58
   1230c:	mov	r0, r3
   12310:	bl	10d48 <rb_set_nb@plt>
   12314:	mov	r0, r9
   12318:	bl	10d48 <rb_set_nb@plt>
   1231c:	add	r0, r4, #52	; 0x34
   12320:	bl	10ebc <rb_linebuf_newbuf@plt>
   12324:	add	r0, r4, #24
   12328:	bl	10ebc <rb_linebuf_newbuf@plt>
   1232c:	bl	10e8c <rb_new_rawbuffer@plt>
   12330:	str	r0, [r4, #20]
   12334:	bl	10e8c <rb_new_rawbuffer@plt>
   12338:	ldr	r3, [r5, #12]
   1233c:	mov	r1, #2000	; 0x7d0
   12340:	str	r0, [r4, #16]
   12344:	ldr	r0, [r3, #1]
   12348:	str	r0, [r4, #80]	; 0x50
   1234c:	bl	13b3c <fputs@plt+0x2c20>
   12350:	mov	r0, r4
   12354:	mla	r2, fp, r1, sl
   12358:	mov	r1, r4
   1235c:	bl	114f8 <fputs@plt+0x5dc>
   12360:	ldrb	r3, [r4, #128]	; 0x80
   12364:	ldr	r0, [r4, #84]	; 0x54
   12368:	orr	r3, r3, #4
   1236c:	strb	r3, [r4, #128]	; 0x80
   12370:	bl	10cc4 <rb_get_type@plt>
   12374:	tst	r0, #64	; 0x40
   12378:	beq	12388 <fputs@plt+0x146c>
   1237c:	mov	r1, #4
   12380:	ldr	r0, [r4, #84]	; 0x54
   12384:	bl	10db4 <rb_set_type@plt>
   12388:	ldr	r0, [r4, #88]	; 0x58
   1238c:	bl	10cc4 <rb_get_type@plt>
   12390:	cmp	r0, #64	; 0x40
   12394:	bne	123a4 <fputs@plt+0x1488>
   12398:	mov	r1, #4
   1239c:	ldr	r0, [r4, #88]	; 0x58
   123a0:	bl	10db4 <rb_set_type@plt>
   123a4:	mov	r1, r4
   123a8:	ldr	r0, [r4, #84]	; 0x54
   123ac:	bl	11d30 <fputs@plt+0xe14>
   123b0:	mov	r1, r4
   123b4:	ldr	r0, [r4, #88]	; 0x58
   123b8:	bl	11814 <fputs@plt+0x8f8>
   123bc:	b	122a0 <fputs@plt+0x1384>
   123c0:	ldr	r0, [r9], #4
   123c4:	bl	10e08 <rb_close@plt>
   123c8:	add	r4, r4, #1
   123cc:	b	12294 <fputs@plt+0x1378>
   123d0:	andeq	r2, r1, r4, ror r1
   123d4:	andeq	r4, r2, r8, lsl #2
   123d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123dc:	sub	sp, sp, #156	; 0x9c
   123e0:	mov	r3, r1
   123e4:	add	ip, sp, #88	; 0x58
   123e8:	add	lr, r1, #64	; 0x40
   123ec:	str	r0, [sp]
   123f0:	ldr	r0, [r3]
   123f4:	ldr	r1, [r3, #4]
   123f8:	mov	r2, ip
   123fc:	add	r3, r3, #8
   12400:	cmp	r3, lr
   12404:	stmia	r2!, {r0, r1}
   12408:	mov	ip, r2
   1240c:	bne	123f0 <fputs@plt+0x14d4>
   12410:	ldr	r3, [sp]
   12414:	ldr	r5, [sp, #88]	; 0x58
   12418:	ldr	r3, [r3]
   1241c:	str	r3, [sp, #72]	; 0x48
   12420:	ldr	r3, [sp]
   12424:	ldr	r1, [sp, #72]	; 0x48
   12428:	ldr	r3, [r3, #4]
   1242c:	ror	ip, r1, #2
   12430:	str	r3, [sp, #80]	; 0x50
   12434:	ldr	r3, [sp]
   12438:	ldr	r3, [r3, #8]
   1243c:	str	r3, [sp, #4]
   12440:	ldr	r3, [sp]
   12444:	ldr	r3, [r3, #12]
   12448:	str	r3, [sp, #76]	; 0x4c
   1244c:	ldr	r3, [sp]
   12450:	ldr	r2, [sp, #76]	; 0x4c
   12454:	ldr	r3, [r3, #16]
   12458:	str	r3, [sp, #84]	; 0x54
   1245c:	rev	r3, r5
   12460:	str	r3, [sp, #20]
   12464:	ldr	r3, [sp, #4]
   12468:	eor	r8, r3, r2
   1246c:	ldr	r3, [sp, #80]	; 0x50
   12470:	and	r8, r8, r3
   12474:	eor	r8, r8, r2
   12478:	ldr	r3, [pc, #4088]	; 13478 <fputs@plt+0x255c>
   1247c:	ldr	r2, [sp, #84]	; 0x54
   12480:	add	r2, r2, r3
   12484:	add	r2, r2, r1, ror #27
   12488:	add	r8, r8, r2
   1248c:	ldr	r2, [sp, #20]
   12490:	add	r8, r2, r8
   12494:	ldr	r2, [sp, #80]	; 0x50
   12498:	ror	lr, r2, #2
   1249c:	ldr	r2, [sp, #92]	; 0x5c
   124a0:	eor	r7, lr, ip
   124a4:	rev	r2, r2
   124a8:	str	r2, [sp, #24]
   124ac:	ldr	r2, [sp, #4]
   124b0:	and	r7, r7, r8
   124b4:	eor	r6, r2, lr
   124b8:	ldr	r2, [sp, #4]
   124bc:	and	r6, r6, r1
   124c0:	eor	r6, r6, r2
   124c4:	ldr	r2, [sp, #76]	; 0x4c
   124c8:	eor	r7, r7, lr
   124cc:	add	r2, r2, r3
   124d0:	add	r6, r6, r2
   124d4:	ldr	r2, [sp, #24]
   124d8:	add	lr, lr, r3
   124dc:	add	r6, r6, r2
   124e0:	ldr	r2, [sp, #96]	; 0x60
   124e4:	add	r6, r6, r8, ror #27
   124e8:	rev	fp, r2
   124ec:	ldr	r2, [sp, #4]
   124f0:	ldr	r4, [sp, #100]	; 0x64
   124f4:	add	r2, r2, r3
   124f8:	ror	r8, r8, #2
   124fc:	add	r2, r2, fp
   12500:	add	r7, r7, r2
   12504:	rev	r2, r4
   12508:	eor	r4, ip, r8
   1250c:	and	r4, r4, r6
   12510:	add	lr, lr, r2
   12514:	eor	r4, r4, ip
   12518:	add	r4, r4, lr
   1251c:	ldr	lr, [sp, #104]	; 0x68
   12520:	add	r7, r7, r6, ror #27
   12524:	ror	r6, r6, #2
   12528:	str	r2, [sp, #48]	; 0x30
   1252c:	rev	r2, lr
   12530:	eor	lr, r8, r6
   12534:	and	lr, lr, r7
   12538:	add	ip, ip, r3
   1253c:	add	ip, ip, r2
   12540:	eor	lr, lr, r8
   12544:	add	lr, lr, ip
   12548:	ldr	ip, [sp, #108]	; 0x6c
   1254c:	add	r4, r4, r7, ror #27
   12550:	ldr	r0, [sp, #112]	; 0x70
   12554:	ror	r7, r7, #2
   12558:	str	r2, [sp, #52]	; 0x34
   1255c:	rev	r2, ip
   12560:	str	r2, [sp, #56]	; 0x38
   12564:	eor	r9, r6, r7
   12568:	add	r2, r2, r3
   1256c:	add	lr, lr, r4, ror #27
   12570:	ldr	r1, [sp, #116]	; 0x74
   12574:	add	r8, r2, r8
   12578:	and	r9, r9, r4
   1257c:	rev	r2, r0
   12580:	ror	r4, r4, #2
   12584:	str	r2, [sp, #60]	; 0x3c
   12588:	eor	r0, r7, r4
   1258c:	add	r2, r2, r3
   12590:	eor	r9, r9, r6
   12594:	add	r9, r9, r8
   12598:	add	r6, r2, r6
   1259c:	and	r0, r0, lr
   125a0:	rev	r2, r1
   125a4:	add	r9, r9, lr, ror #27
   125a8:	str	r2, [sp, #64]	; 0x40
   125ac:	ror	lr, lr, #2
   125b0:	add	r2, r2, r3
   125b4:	eor	r0, r0, r7
   125b8:	eor	r1, r4, lr
   125bc:	add	r7, r2, r7
   125c0:	add	r0, r0, r6
   125c4:	ldr	r2, [sp, #120]	; 0x78
   125c8:	add	r0, r0, r9, ror #27
   125cc:	and	r1, r1, r9
   125d0:	ror	r9, r9, #2
   125d4:	rev	sl, r2
   125d8:	eor	r1, r1, r4
   125dc:	eor	r2, lr, r9
   125e0:	add	ip, sl, r3
   125e4:	ldr	r8, [sp, #124]	; 0x7c
   125e8:	add	r1, r1, r7
   125ec:	and	r2, r2, r0
   125f0:	add	r1, r1, r0, ror #27
   125f4:	add	r4, ip, r4
   125f8:	ror	r0, r0, #2
   125fc:	eor	r2, r2, lr
   12600:	ldr	r6, [sp, #128]	; 0x80
   12604:	rev	ip, r8
   12608:	eor	r5, r9, r0
   1260c:	add	r2, r2, r4
   12610:	add	r2, r2, r1, ror #27
   12614:	str	ip, [sp, #32]
   12618:	and	r5, r5, r1
   1261c:	add	ip, ip, r3
   12620:	ror	r1, r1, #2
   12624:	add	lr, ip, lr
   12628:	rev	ip, r6
   1262c:	eor	r6, r0, r1
   12630:	str	ip, [sp, #36]	; 0x24
   12634:	and	r6, r6, r2
   12638:	add	ip, ip, r3
   1263c:	eor	r6, r6, r0
   12640:	eor	r5, r5, r9
   12644:	add	ip, ip, r9
   12648:	add	r5, r5, lr
   1264c:	add	ip, r6, ip
   12650:	ldr	r6, [sp, #132]	; 0x84
   12654:	add	r5, r5, r2, ror #27
   12658:	ror	r2, r2, #2
   1265c:	rev	lr, r6
   12660:	eor	r8, r1, r2
   12664:	ldr	r6, [sp, #136]	; 0x88
   12668:	str	lr, [sp, #40]	; 0x28
   1266c:	and	r8, r8, r5
   12670:	add	lr, lr, r3
   12674:	add	ip, ip, r5, ror #27
   12678:	add	r0, lr, r0
   1267c:	ror	r5, r5, #2
   12680:	eor	r8, r8, r1
   12684:	eor	r7, r2, r5
   12688:	add	r8, r8, r0
   1268c:	rev	r0, r6
   12690:	str	r0, [sp, #44]	; 0x2c
   12694:	and	r7, r7, ip
   12698:	add	r0, r0, r3
   1269c:	add	r1, r0, r1
   126a0:	eor	r7, r7, r2
   126a4:	add	r7, r7, r1
   126a8:	ldr	r1, [sp, #140]	; 0x8c
   126ac:	ror	r6, ip, #2
   126b0:	add	r8, r8, ip, ror #27
   126b4:	eor	r4, r5, r6
   126b8:	rev	r1, r1
   126bc:	str	r1, [sp, #8]
   126c0:	ldr	r9, [sp, #144]	; 0x90
   126c4:	add	r1, r1, r3
   126c8:	and	r4, r4, r8
   126cc:	add	r2, r1, r2
   126d0:	eor	r4, r4, r5
   126d4:	add	r4, r4, r2
   126d8:	rev	r2, r9
   126dc:	ldr	r9, [sp, #148]	; 0x94
   126e0:	add	r7, r7, r8, ror #27
   126e4:	str	r2, [sp, #12]
   126e8:	ror	r8, r8, #2
   126ec:	add	r2, r2, r3
   126f0:	eor	lr, r6, r8
   126f4:	add	r5, r2, r5
   126f8:	rev	r2, r9
   126fc:	str	r2, [sp, #16]
   12700:	and	lr, lr, r7
   12704:	add	r2, r2, r3
   12708:	eor	lr, lr, r6
   1270c:	add	r6, r2, r6
   12710:	ldr	r2, [sp, #20]
   12714:	add	lr, lr, r5
   12718:	eor	r5, r2, fp
   1271c:	ldr	r2, [sp, #8]
   12720:	eor	r5, r5, sl
   12724:	eor	r5, r5, r2
   12728:	add	r4, r4, r7, ror #27
   1272c:	ror	r7, r7, #2
   12730:	eor	ip, r8, r7
   12734:	ror	r2, r5, #31
   12738:	str	r2, [sp, #20]
   1273c:	and	ip, ip, r4
   12740:	add	r2, r2, r3
   12744:	ldr	r1, [sp, #48]	; 0x30
   12748:	eor	ip, ip, r8
   1274c:	add	r8, r2, r8
   12750:	ldr	r2, [sp, #24]
   12754:	add	lr, lr, r4, ror #27
   12758:	eor	r2, r2, r1
   1275c:	ldr	r1, [sp, #32]
   12760:	ror	r4, r4, #2
   12764:	eor	r2, r2, r1
   12768:	ldr	r1, [sp, #12]
   1276c:	eor	r0, r7, r4
   12770:	eor	r2, r2, r1
   12774:	and	r0, r0, lr
   12778:	ror	r2, r2, #31
   1277c:	str	r2, [sp, #24]
   12780:	add	r2, r2, r3
   12784:	eor	r0, r0, r7
   12788:	add	r7, r2, r7
   1278c:	ldr	r2, [sp, #52]	; 0x34
   12790:	ldr	r5, [sp, #36]	; 0x24
   12794:	eor	r2, fp, r2
   12798:	eor	r2, r2, r5
   1279c:	ldr	r5, [sp, #16]
   127a0:	add	ip, ip, r6
   127a4:	eor	r2, r2, r5
   127a8:	add	ip, ip, lr, ror #27
   127ac:	ror	r2, r2, #31
   127b0:	ror	lr, lr, #2
   127b4:	str	r2, [sp, #28]
   127b8:	eor	r1, r4, lr
   127bc:	add	r0, r0, r8
   127c0:	add	r0, r0, ip, ror #27
   127c4:	ldr	r5, [sp, #28]
   127c8:	and	r1, r1, ip
   127cc:	ror	ip, ip, #2
   127d0:	eor	r2, lr, ip
   127d4:	add	r5, r5, r3
   127d8:	and	r2, r2, r0
   127dc:	eor	r1, r1, r4
   127e0:	eor	r2, r2, lr
   127e4:	add	r4, r5, r4
   127e8:	add	r2, r2, r4
   127ec:	ldr	r5, [sp, #56]	; 0x38
   127f0:	ldr	r4, [sp, #48]	; 0x30
   127f4:	add	r1, r1, r7
   127f8:	eor	r4, r4, r5
   127fc:	ldr	r5, [sp, #40]	; 0x28
   12800:	add	r1, r1, r0, ror #27
   12804:	eor	r4, r4, r5
   12808:	ldr	r5, [sp, #20]
   1280c:	ror	r0, r0, #2
   12810:	eor	r4, r4, r5
   12814:	eor	r5, ip, r0
   12818:	ror	r4, r4, #31
   1281c:	and	r5, r5, r1
   12820:	add	r3, r4, r3
   12824:	add	r3, r3, lr
   12828:	eor	r5, r5, ip
   1282c:	ldr	lr, [sp, #60]	; 0x3c
   12830:	add	r5, r5, r3
   12834:	ldr	r3, [sp, #52]	; 0x34
   12838:	add	r2, r2, r1, ror #27
   1283c:	eor	lr, r3, lr
   12840:	ldr	r3, [sp, #44]	; 0x2c
   12844:	ror	r1, r1, #2
   12848:	eor	lr, lr, r3
   1284c:	ldr	r3, [sp, #24]
   12850:	eor	r6, r0, r1
   12854:	eor	lr, lr, r3
   12858:	ldr	r3, [pc, #3100]	; 1347c <fputs@plt+0x2560>
   1285c:	ror	lr, lr, #31
   12860:	add	r7, lr, r3
   12864:	add	ip, r7, ip
   12868:	eor	r6, r6, r2
   1286c:	ldr	r7, [sp, #64]	; 0x40
   12870:	add	r6, r6, ip
   12874:	ldr	ip, [sp, #56]	; 0x38
   12878:	add	r5, r5, r2, ror #27
   1287c:	eor	ip, ip, r7
   12880:	ldr	r7, [sp, #8]
   12884:	ror	r2, r2, #2
   12888:	eor	ip, ip, r7
   1288c:	ldr	r7, [sp, #28]
   12890:	eor	r9, r1, r2
   12894:	eor	ip, ip, r7
   12898:	eor	r9, r9, r5
   1289c:	ror	ip, ip, #31
   128a0:	add	r7, ip, r3
   128a4:	add	r0, r7, r0
   128a8:	add	r9, r9, r0
   128ac:	ldr	r0, [sp, #60]	; 0x3c
   128b0:	ldr	r7, [sp, #12]
   128b4:	eor	r0, r0, sl
   128b8:	eor	r0, r0, r7
   128bc:	eor	r0, r0, r4
   128c0:	add	r6, r6, r5, ror #27
   128c4:	ror	r0, r0, #31
   128c8:	ror	r5, r5, #2
   128cc:	add	r8, r0, r3
   128d0:	eor	r7, r2, r5
   128d4:	add	r1, r8, r1
   128d8:	eor	r7, r7, r6
   128dc:	ldr	r8, [sp, #32]
   128e0:	add	r7, r7, r1
   128e4:	ldr	r1, [sp, #64]	; 0x40
   128e8:	add	r9, r9, r6, ror #27
   128ec:	eor	r1, r1, r8
   128f0:	ldr	r8, [sp, #16]
   128f4:	ror	r6, r6, #2
   128f8:	eor	r1, r1, r8
   128fc:	eor	r1, r1, lr
   12900:	eor	fp, r5, r6
   12904:	ror	r1, r1, #31
   12908:	add	r8, r1, r3
   1290c:	add	r2, r8, r2
   12910:	eor	fp, fp, r9
   12914:	add	fp, fp, r2
   12918:	ldr	r2, [sp, #36]	; 0x24
   1291c:	ldr	r8, [sp, #20]
   12920:	eor	r2, sl, r2
   12924:	eor	r2, r2, r8
   12928:	eor	r2, r2, ip
   1292c:	add	r7, r7, r9, ror #27
   12930:	ror	r2, r2, #31
   12934:	ror	r9, r9, #2
   12938:	add	sl, r2, r3
   1293c:	eor	r8, r6, r9
   12940:	eor	r8, r8, r7
   12944:	add	r5, sl, r5
   12948:	add	r5, r8, r5
   1294c:	ldr	sl, [sp, #40]	; 0x28
   12950:	ldr	r8, [sp, #32]
   12954:	add	fp, fp, r7, ror #27
   12958:	eor	r8, r8, sl
   1295c:	ldr	sl, [sp, #24]
   12960:	ror	r7, r7, #2
   12964:	eor	r8, r8, sl
   12968:	eor	r8, r8, r0
   1296c:	add	r5, r5, fp, ror #27
   12970:	ror	r8, r8, #31
   12974:	str	r8, [sp, #32]
   12978:	ldr	sl, [sp, #32]
   1297c:	eor	r8, r9, r7
   12980:	add	sl, sl, r3
   12984:	add	r6, sl, r6
   12988:	eor	r8, r8, fp
   1298c:	ldr	sl, [sp, #44]	; 0x2c
   12990:	add	r8, r8, r6
   12994:	ldr	r6, [sp, #36]	; 0x24
   12998:	ror	fp, fp, #2
   1299c:	eor	r6, r6, sl
   129a0:	ldr	sl, [sp, #28]
   129a4:	add	r8, r8, r5, ror #27
   129a8:	eor	r6, r6, sl
   129ac:	eor	r6, r6, r1
   129b0:	eor	sl, r7, fp
   129b4:	ror	r6, r6, #31
   129b8:	str	r6, [sp, #36]	; 0x24
   129bc:	add	r6, r6, r3
   129c0:	add	r9, r6, r9
   129c4:	eor	sl, sl, r5
   129c8:	ldr	r6, [sp, #40]	; 0x28
   129cc:	add	sl, sl, r9
   129d0:	ldr	r9, [sp, #8]
   129d4:	ror	r5, r5, #2
   129d8:	eor	r6, r6, r9
   129dc:	eor	r6, r6, r4
   129e0:	eor	r6, r6, r2
   129e4:	eor	r9, fp, r5
   129e8:	ror	r6, r6, #31
   129ec:	str	r6, [sp, #40]	; 0x28
   129f0:	add	r6, r6, r3
   129f4:	eor	r9, r9, r8
   129f8:	add	r7, r6, r7
   129fc:	add	r7, r9, r7
   12a00:	ldr	r6, [sp, #44]	; 0x2c
   12a04:	ldr	r9, [sp, #12]
   12a08:	add	sl, sl, r8, ror #27
   12a0c:	eor	r6, r6, r9
   12a10:	ldr	r9, [sp, #32]
   12a14:	eor	r6, r6, lr
   12a18:	eor	r6, r6, r9
   12a1c:	ror	r8, r8, #2
   12a20:	ror	r6, r6, #31
   12a24:	str	r6, [sp, #44]	; 0x2c
   12a28:	ldr	r9, [sp, #44]	; 0x2c
   12a2c:	eor	r6, r5, r8
   12a30:	add	r9, r9, r3
   12a34:	add	fp, r9, fp
   12a38:	eor	r6, r6, sl
   12a3c:	ldr	r9, [sp, #8]
   12a40:	add	r6, r6, fp
   12a44:	ldr	fp, [sp, #16]
   12a48:	add	r7, r7, sl, ror #27
   12a4c:	eor	r9, r9, fp
   12a50:	ldr	fp, [sp, #36]	; 0x24
   12a54:	eor	r9, r9, ip
   12a58:	eor	r9, r9, fp
   12a5c:	ror	sl, sl, #2
   12a60:	ror	r9, r9, #31
   12a64:	str	r9, [sp, #8]
   12a68:	ldr	fp, [sp, #8]
   12a6c:	eor	r9, r8, sl
   12a70:	add	fp, fp, r3
   12a74:	eor	r9, r9, r7
   12a78:	add	r5, fp, r5
   12a7c:	add	r5, r9, r5
   12a80:	ldr	fp, [sp, #20]
   12a84:	ldr	r9, [sp, #12]
   12a88:	add	r6, r6, r7, ror #27
   12a8c:	eor	r9, r9, fp
   12a90:	ldr	fp, [sp, #40]	; 0x28
   12a94:	eor	r9, r9, r0
   12a98:	eor	r9, r9, fp
   12a9c:	ror	r7, r7, #2
   12aa0:	ror	r9, r9, #31
   12aa4:	str	r9, [sp, #12]
   12aa8:	ldr	fp, [sp, #12]
   12aac:	eor	r9, sl, r7
   12ab0:	add	fp, fp, r3
   12ab4:	eor	r9, r9, r6
   12ab8:	add	r8, fp, r8
   12abc:	add	r8, r9, r8
   12ac0:	ldr	fp, [sp, #24]
   12ac4:	ldr	r9, [sp, #16]
   12ac8:	add	r5, r5, r6, ror #27
   12acc:	eor	r9, r9, fp
   12ad0:	ldr	fp, [sp, #44]	; 0x2c
   12ad4:	eor	r9, r9, r1
   12ad8:	eor	r9, r9, fp
   12adc:	ror	r6, r6, #2
   12ae0:	ror	r9, r9, #31
   12ae4:	str	r9, [sp, #16]
   12ae8:	ldr	fp, [sp, #16]
   12aec:	eor	r9, r7, r6
   12af0:	add	fp, fp, r3
   12af4:	eor	r9, r9, r5
   12af8:	add	sl, fp, sl
   12afc:	add	r8, r8, r5, ror #27
   12b00:	ldr	fp, [sp, #28]
   12b04:	add	sl, r9, sl
   12b08:	ror	r9, r5, #2
   12b0c:	ldr	r5, [sp, #20]
   12b10:	add	sl, sl, r8, ror #27
   12b14:	eor	r5, r5, fp
   12b18:	ldr	fp, [sp, #8]
   12b1c:	eor	r5, r5, r2
   12b20:	eor	r5, r5, fp
   12b24:	ror	r5, r5, #31
   12b28:	str	r5, [sp, #20]
   12b2c:	ldr	fp, [sp, #20]
   12b30:	eor	r5, r6, r9
   12b34:	add	fp, fp, r3
   12b38:	eor	r5, r5, r8
   12b3c:	add	r7, fp, r7
   12b40:	add	r7, r5, r7
   12b44:	ldr	r5, [sp, #24]
   12b48:	ldr	fp, [sp, #32]
   12b4c:	eor	r5, r5, r4
   12b50:	eor	r5, r5, fp
   12b54:	ldr	fp, [sp, #12]
   12b58:	ror	r8, r8, #2
   12b5c:	eor	r5, r5, fp
   12b60:	eor	fp, r9, r8
   12b64:	ror	r5, r5, #31
   12b68:	str	r5, [sp, #24]
   12b6c:	add	r5, r5, r3
   12b70:	add	r7, r7, sl, ror #27
   12b74:	eor	fp, fp, sl
   12b78:	add	r6, r5, r6
   12b7c:	add	r6, fp, r6
   12b80:	ldr	r5, [sp, #28]
   12b84:	add	fp, r6, r7, ror #27
   12b88:	ldr	r6, [sp, #36]	; 0x24
   12b8c:	eor	r5, r5, lr
   12b90:	eor	r5, r5, r6
   12b94:	ldr	r6, [sp, #16]
   12b98:	ror	sl, sl, #2
   12b9c:	eor	r5, r5, r6
   12ba0:	eor	r6, r8, sl
   12ba4:	ror	r5, r5, #31
   12ba8:	str	r5, [sp, #28]
   12bac:	add	r5, r5, r3
   12bb0:	eor	r6, r6, r7
   12bb4:	add	r5, r5, r9
   12bb8:	add	r5, r6, r5
   12bbc:	add	r6, r5, fp, ror #27
   12bc0:	ldr	r5, [sp, #40]	; 0x28
   12bc4:	eor	r4, r4, ip
   12bc8:	eor	r4, r4, r5
   12bcc:	ldr	r5, [sp, #20]
   12bd0:	eor	lr, lr, r0
   12bd4:	eor	r4, r4, r5
   12bd8:	ror	r7, r7, #2
   12bdc:	ror	r9, r4, #31
   12be0:	add	r5, r9, r3
   12be4:	add	r8, r5, r8
   12be8:	ldr	r5, [sp, #44]	; 0x2c
   12bec:	eor	r4, sl, r7
   12bf0:	eor	lr, lr, r5
   12bf4:	ldr	r5, [sp, #24]
   12bf8:	eor	ip, ip, r1
   12bfc:	eor	lr, lr, r5
   12c00:	eor	r4, r4, fp
   12c04:	ror	lr, lr, #31
   12c08:	str	lr, [sp, #48]	; 0x30
   12c0c:	ldr	r5, [sp, #48]	; 0x30
   12c10:	ror	fp, fp, #2
   12c14:	add	r5, r5, r3
   12c18:	add	sl, r5, sl
   12c1c:	ldr	r5, [sp, #8]
   12c20:	eor	lr, r7, fp
   12c24:	eor	ip, ip, r5
   12c28:	ldr	r5, [sp, #28]
   12c2c:	eor	r0, r0, r2
   12c30:	eor	ip, ip, r5
   12c34:	add	r8, r4, r8
   12c38:	ror	ip, ip, #31
   12c3c:	str	ip, [sp, #52]	; 0x34
   12c40:	ldr	r5, [sp, #52]	; 0x34
   12c44:	add	r4, r8, r6, ror #27
   12c48:	add	r5, r5, r3
   12c4c:	add	r7, r5, r7
   12c50:	ldr	r5, [sp, #12]
   12c54:	eor	lr, lr, r6
   12c58:	eor	r0, r0, r5
   12c5c:	eor	r0, r0, r9
   12c60:	ror	r6, r6, #2
   12c64:	ror	r0, r0, #31
   12c68:	str	r0, [sp, #56]	; 0x38
   12c6c:	ldr	r5, [sp, #56]	; 0x38
   12c70:	eor	ip, fp, r6
   12c74:	add	r5, r5, r3
   12c78:	add	fp, r5, fp
   12c7c:	ldr	r5, [sp, #32]
   12c80:	add	sl, lr, sl
   12c84:	eor	r1, r1, r5
   12c88:	ldr	r5, [sp, #16]
   12c8c:	add	lr, sl, r4, ror #27
   12c90:	eor	r1, r1, r5
   12c94:	ldr	r5, [sp, #48]	; 0x30
   12c98:	eor	ip, ip, r4
   12c9c:	eor	r1, r1, r5
   12ca0:	ror	r4, r4, #2
   12ca4:	ror	r1, r1, #31
   12ca8:	str	r1, [sp, #60]	; 0x3c
   12cac:	ldr	r5, [sp, #60]	; 0x3c
   12cb0:	eor	r0, r6, r4
   12cb4:	add	r3, r5, r3
   12cb8:	add	r6, r3, r6
   12cbc:	ldr	r3, [sp, #36]	; 0x24
   12cc0:	add	r7, ip, r7
   12cc4:	eor	r2, r2, r3
   12cc8:	ldr	r3, [sp, #20]
   12ccc:	add	ip, r7, lr, ror #27
   12cd0:	eor	r2, r2, r3
   12cd4:	ldr	r3, [sp, #52]	; 0x34
   12cd8:	eor	r0, r0, lr
   12cdc:	ror	lr, lr, #2
   12ce0:	eor	r1, r4, lr
   12ce4:	add	fp, r0, fp
   12ce8:	eor	r2, r2, r3
   12cec:	add	r0, fp, ip, ror #27
   12cf0:	eor	r1, r1, ip
   12cf4:	ror	ip, ip, #2
   12cf8:	ror	r3, r2, #31
   12cfc:	orr	r2, r0, ip
   12d00:	str	r3, [sp, #64]	; 0x40
   12d04:	and	r2, r2, lr
   12d08:	and	r3, r0, ip
   12d0c:	orr	r2, r2, r3
   12d10:	ldr	r5, [sp, #64]	; 0x40
   12d14:	ldr	r3, [pc, #1892]	; 13480 <fputs@plt+0x2564>
   12d18:	add	r6, r1, r6
   12d1c:	add	r5, r5, r3
   12d20:	add	r1, r6, r0, ror #27
   12d24:	add	r4, r5, r4
   12d28:	add	r4, r2, r4
   12d2c:	add	r2, r4, r1, ror #27
   12d30:	ldr	r5, [sp, #40]	; 0x28
   12d34:	ldr	r4, [sp, #32]
   12d38:	ror	r0, r0, #2
   12d3c:	eor	r8, r4, r5
   12d40:	ldr	r4, [sp, #24]
   12d44:	orr	r6, r1, r0
   12d48:	eor	r8, r8, r4
   12d4c:	ldr	r4, [sp, #56]	; 0x38
   12d50:	eor	r8, r8, r4
   12d54:	ror	r4, r8, #31
   12d58:	str	r4, [sp, #32]
   12d5c:	and	r4, r6, ip
   12d60:	and	r6, r1, r0
   12d64:	orr	r6, r4, r6
   12d68:	ldr	r4, [sp, #32]
   12d6c:	ldr	r5, [sp, #44]	; 0x2c
   12d70:	add	r4, r4, r3
   12d74:	add	lr, r4, lr
   12d78:	ldr	r4, [sp, #36]	; 0x24
   12d7c:	add	lr, r6, lr
   12d80:	eor	r6, r4, r5
   12d84:	ldr	r4, [sp, #28]
   12d88:	ror	r1, r1, #2
   12d8c:	eor	r6, r6, r4
   12d90:	ldr	r4, [sp, #60]	; 0x3c
   12d94:	orr	r5, r2, r1
   12d98:	eor	r6, r6, r4
   12d9c:	add	lr, lr, r2, ror #27
   12da0:	ror	r4, r6, #31
   12da4:	str	r4, [sp, #36]	; 0x24
   12da8:	and	r4, r5, r0
   12dac:	and	r5, r2, r1
   12db0:	orr	r5, r4, r5
   12db4:	ldr	r4, [sp, #36]	; 0x24
   12db8:	ror	r2, r2, #2
   12dbc:	add	r4, r4, r3
   12dc0:	add	ip, r4, ip
   12dc4:	add	ip, r5, ip
   12dc8:	add	r5, ip, lr, ror #27
   12dcc:	ldr	r4, [sp, #8]
   12dd0:	ldr	ip, [sp, #40]	; 0x28
   12dd4:	eor	r6, ip, r4
   12dd8:	ldr	ip, [sp, #64]	; 0x40
   12ddc:	eor	r6, r6, r9
   12de0:	eor	r6, r6, ip
   12de4:	ldr	r4, [sp, #12]
   12de8:	ror	ip, r6, #31
   12dec:	orr	r6, lr, r2
   12df0:	str	ip, [sp, #40]	; 0x28
   12df4:	and	ip, r6, r1
   12df8:	and	r6, lr, r2
   12dfc:	orr	r6, ip, r6
   12e00:	ldr	ip, [sp, #40]	; 0x28
   12e04:	ror	lr, lr, #2
   12e08:	add	ip, ip, r3
   12e0c:	add	r0, ip, r0
   12e10:	ldr	ip, [sp, #44]	; 0x2c
   12e14:	add	r0, r6, r0
   12e18:	eor	r6, ip, r4
   12e1c:	ldr	ip, [sp, #48]	; 0x30
   12e20:	orr	r7, r5, lr
   12e24:	eor	r6, r6, ip
   12e28:	ldr	ip, [sp, #32]
   12e2c:	add	r0, r0, r5, ror #27
   12e30:	eor	r6, r6, ip
   12e34:	ror	ip, r6, #31
   12e38:	str	ip, [sp, #44]	; 0x2c
   12e3c:	and	ip, r7, r2
   12e40:	and	r7, r5, lr
   12e44:	orr	r7, ip, r7
   12e48:	ldr	ip, [sp, #44]	; 0x2c
   12e4c:	ror	r5, r5, #2
   12e50:	add	ip, ip, r3
   12e54:	add	r1, ip, r1
   12e58:	add	r1, r7, r1
   12e5c:	add	r7, r1, r0, ror #27
   12e60:	ldr	ip, [sp, #16]
   12e64:	ldr	r1, [sp, #8]
   12e68:	orr	r4, r0, r5
   12e6c:	eor	r1, r1, ip
   12e70:	ldr	ip, [sp, #52]	; 0x34
   12e74:	eor	r1, r1, ip
   12e78:	ldr	ip, [sp, #36]	; 0x24
   12e7c:	eor	r1, r1, ip
   12e80:	ror	r1, r1, #31
   12e84:	str	r1, [sp, #8]
   12e88:	and	r1, r4, lr
   12e8c:	and	r4, r0, r5
   12e90:	orr	r4, r1, r4
   12e94:	ldr	r1, [sp, #8]
   12e98:	ror	r0, r0, #2
   12e9c:	add	r1, r1, r3
   12ea0:	add	r2, r1, r2
   12ea4:	add	r4, r4, r2
   12ea8:	ldr	r1, [sp, #20]
   12eac:	ldr	r2, [sp, #12]
   12eb0:	add	r4, r4, r7, ror #27
   12eb4:	eor	r1, r2, r1
   12eb8:	ldr	r2, [sp, #56]	; 0x38
   12ebc:	eor	r1, r1, r2
   12ec0:	ldr	r2, [sp, #40]	; 0x28
   12ec4:	eor	r1, r1, r2
   12ec8:	ror	r2, r1, #31
   12ecc:	str	r2, [sp, #12]
   12ed0:	orr	r2, r7, r0
   12ed4:	and	r1, r2, r5
   12ed8:	and	r2, r7, r0
   12edc:	orr	r2, r1, r2
   12ee0:	ldr	r1, [sp, #12]
   12ee4:	ror	r7, r7, #2
   12ee8:	add	r1, r1, r3
   12eec:	add	lr, r1, lr
   12ef0:	add	lr, r2, lr
   12ef4:	ldr	r1, [sp, #24]
   12ef8:	ldr	r2, [sp, #16]
   12efc:	orr	sl, r4, r7
   12f00:	eor	r2, r2, r1
   12f04:	ldr	r1, [sp, #60]	; 0x3c
   12f08:	add	lr, lr, r4, ror #27
   12f0c:	eor	r2, r2, r1
   12f10:	ldr	r1, [sp, #44]	; 0x2c
   12f14:	eor	r2, r2, r1
   12f18:	ldr	r1, [sp, #28]
   12f1c:	ror	r2, r2, #31
   12f20:	str	r2, [sp, #16]
   12f24:	and	r2, sl, r0
   12f28:	and	sl, r4, r7
   12f2c:	orr	sl, r2, sl
   12f30:	ldr	r2, [sp, #16]
   12f34:	ror	r4, r4, #2
   12f38:	add	r2, r2, r3
   12f3c:	add	r5, r2, r5
   12f40:	ldr	r2, [sp, #20]
   12f44:	orr	fp, lr, r4
   12f48:	eor	r1, r2, r1
   12f4c:	ldr	r2, [sp, #64]	; 0x40
   12f50:	add	sl, sl, r5
   12f54:	eor	r1, r1, r2
   12f58:	ldr	r2, [sp, #8]
   12f5c:	add	sl, sl, lr, ror #27
   12f60:	eor	r1, r1, r2
   12f64:	ror	r2, r1, #31
   12f68:	str	r2, [sp, #20]
   12f6c:	and	r2, fp, r7
   12f70:	and	fp, lr, r4
   12f74:	orr	fp, r2, fp
   12f78:	ldr	r2, [sp, #20]
   12f7c:	ldr	r1, [sp, #32]
   12f80:	add	r2, r2, r3
   12f84:	add	r0, r2, r0
   12f88:	ldr	r2, [sp, #24]
   12f8c:	ror	lr, lr, #2
   12f90:	eor	r2, r2, r9
   12f94:	eor	r2, r2, r1
   12f98:	ldr	r1, [sp, #12]
   12f9c:	orr	r8, sl, lr
   12fa0:	eor	r2, r2, r1
   12fa4:	ldr	r1, [sp, #48]	; 0x30
   12fa8:	ror	r2, r2, #31
   12fac:	str	r2, [sp, #24]
   12fb0:	and	r2, r8, r4
   12fb4:	and	r8, sl, lr
   12fb8:	orr	r8, r2, r8
   12fbc:	ldr	r2, [sp, #24]
   12fc0:	add	fp, fp, r0
   12fc4:	add	r2, r2, r3
   12fc8:	add	r7, r2, r7
   12fcc:	ldr	r2, [sp, #28]
   12fd0:	add	fp, fp, sl, ror #27
   12fd4:	eor	ip, r2, r1
   12fd8:	ldr	r2, [sp, #36]	; 0x24
   12fdc:	ror	sl, sl, #2
   12fe0:	eor	ip, ip, r2
   12fe4:	ldr	r2, [sp, #16]
   12fe8:	add	r8, r8, r7
   12fec:	eor	ip, ip, r2
   12ff0:	orr	r7, fp, sl
   12ff4:	ror	r2, ip, #31
   12ff8:	str	r2, [sp, #28]
   12ffc:	and	r2, r7, lr
   13000:	and	r7, fp, sl
   13004:	orr	r7, r2, r7
   13008:	ldr	r2, [sp, #28]
   1300c:	add	r8, r8, fp, ror #27
   13010:	add	r2, r2, r3
   13014:	add	r4, r2, r4
   13018:	ldr	r2, [sp, #52]	; 0x34
   1301c:	ror	fp, fp, #2
   13020:	eor	r0, r9, r2
   13024:	ldr	r2, [sp, #40]	; 0x28
   13028:	orr	r6, r8, fp
   1302c:	eor	r0, r0, r2
   13030:	ldr	r2, [sp, #20]
   13034:	add	r7, r7, r4
   13038:	eor	r0, r0, r2
   1303c:	and	r4, r6, sl
   13040:	ror	r2, r0, #31
   13044:	and	r6, r8, fp
   13048:	str	r2, [sp, #68]	; 0x44
   1304c:	orr	r6, r4, r6
   13050:	add	r4, r2, r3
   13054:	mov	r2, r1
   13058:	ldr	r1, [sp, #56]	; 0x38
   1305c:	add	r4, r4, lr
   13060:	add	r4, r6, r4
   13064:	eor	r6, r2, r1
   13068:	ldr	r2, [sp, #44]	; 0x2c
   1306c:	add	r7, r7, r8, ror #27
   13070:	eor	r6, r6, r2
   13074:	ldr	r2, [sp, #24]
   13078:	ror	r8, r8, #2
   1307c:	eor	r6, r6, r2
   13080:	orr	lr, r7, r8
   13084:	ror	r2, r6, #31
   13088:	and	r5, lr, fp
   1308c:	and	lr, r7, r8
   13090:	ldr	r1, [sp, #60]	; 0x3c
   13094:	str	r2, [sp, #48]	; 0x30
   13098:	orr	lr, r5, lr
   1309c:	add	r5, r2, r3
   130a0:	ldr	r2, [sp, #52]	; 0x34
   130a4:	add	sl, r5, sl
   130a8:	eor	r5, r2, r1
   130ac:	ldr	r2, [sp, #8]
   130b0:	add	r4, r4, r7, ror #27
   130b4:	eor	r5, r5, r2
   130b8:	ldr	r2, [sp, #28]
   130bc:	ror	r7, r7, #2
   130c0:	eor	r5, r5, r2
   130c4:	orr	r2, r4, r7
   130c8:	and	r1, r2, r8
   130cc:	add	lr, lr, sl
   130d0:	and	r2, r4, r7
   130d4:	ror	sl, r5, #31
   130d8:	orr	r2, r1, r2
   130dc:	add	r1, sl, r3
   130e0:	add	fp, r1, fp
   130e4:	add	fp, r2, fp
   130e8:	ldr	r1, [sp, #64]	; 0x40
   130ec:	ldr	r2, [sp, #56]	; 0x38
   130f0:	add	lr, lr, r4, ror #27
   130f4:	eor	r1, r2, r1
   130f8:	ldr	r2, [sp, #12]
   130fc:	ror	r6, r4, #2
   13100:	eor	r1, r1, r2
   13104:	ldr	r2, [sp, #68]	; 0x44
   13108:	ldr	r0, [sp, #32]
   1310c:	eor	r1, r1, r2
   13110:	add	fp, fp, lr, ror #27
   13114:	ror	r2, r1, #31
   13118:	orr	r1, lr, r6
   1311c:	str	r2, [sp, #52]	; 0x34
   13120:	and	r2, r1, r7
   13124:	and	r1, lr, r6
   13128:	orr	r1, r2, r1
   1312c:	ldr	r2, [sp, #52]	; 0x34
   13130:	ror	r5, lr, #2
   13134:	add	r2, r2, r3
   13138:	add	r8, r2, r8
   1313c:	ldr	r2, [sp, #60]	; 0x3c
   13140:	add	r1, r1, r8
   13144:	eor	r2, r2, r0
   13148:	ldr	r0, [sp, #16]
   1314c:	ldr	ip, [sp, #36]	; 0x24
   13150:	eor	r2, r2, r0
   13154:	ldr	r0, [sp, #48]	; 0x30
   13158:	add	r1, r1, fp, ror #27
   1315c:	eor	r2, r2, r0
   13160:	ror	r8, r2, #31
   13164:	orr	r2, fp, r5
   13168:	and	r0, r2, r6
   1316c:	and	r2, fp, r5
   13170:	orr	r2, r0, r2
   13174:	add	r0, r8, r3
   13178:	add	r7, r0, r7
   1317c:	ldr	r0, [sp, #64]	; 0x40
   13180:	ror	fp, fp, #2
   13184:	eor	r4, r0, ip
   13188:	ldr	r0, [sp, #20]
   1318c:	ldr	ip, [sp, #40]	; 0x28
   13190:	eor	r4, r4, r0
   13194:	eor	r4, r4, sl
   13198:	add	r2, r2, r7
   1319c:	ror	r0, r4, #31
   131a0:	orr	r4, r1, fp
   131a4:	str	r0, [sp, #56]	; 0x38
   131a8:	and	r0, r4, r5
   131ac:	and	r4, r1, fp
   131b0:	orr	r4, r0, r4
   131b4:	ldr	r0, [sp, #56]	; 0x38
   131b8:	add	r2, r2, r1, ror #27
   131bc:	add	r0, r0, r3
   131c0:	add	r6, r0, r6
   131c4:	ldr	r0, [sp, #32]
   131c8:	ror	r1, r1, #2
   131cc:	eor	lr, r0, ip
   131d0:	ldr	r0, [sp, #24]
   131d4:	ldr	ip, [sp, #44]	; 0x2c
   131d8:	eor	lr, lr, r0
   131dc:	ldr	r0, [sp, #52]	; 0x34
   131e0:	add	r4, r4, r6
   131e4:	eor	lr, lr, r0
   131e8:	add	r4, r4, r2, ror #27
   131ec:	ror	r0, lr, #31
   131f0:	orr	lr, r2, r1
   131f4:	str	r0, [sp, #32]
   131f8:	and	r0, lr, fp
   131fc:	and	lr, r2, r1
   13200:	orr	lr, r0, lr
   13204:	ldr	r0, [sp, #32]
   13208:	ror	r2, r2, #2
   1320c:	add	r0, r0, r3
   13210:	add	r5, r0, r5
   13214:	ldr	r0, [sp, #36]	; 0x24
   13218:	add	lr, lr, r5
   1321c:	eor	r5, r0, ip
   13220:	ldr	r0, [sp, #28]
   13224:	orr	r9, r4, r2
   13228:	eor	r5, r5, r0
   1322c:	eor	r5, r5, r8
   13230:	ldr	ip, [sp, #8]
   13234:	ror	r0, r5, #31
   13238:	str	r0, [sp, #36]	; 0x24
   1323c:	and	r0, r9, r1
   13240:	and	r9, r4, r2
   13244:	orr	r9, r0, r9
   13248:	ldr	r0, [sp, #36]	; 0x24
   1324c:	add	lr, lr, r4, ror #27
   13250:	add	r0, r0, r3
   13254:	add	fp, r0, fp
   13258:	ldr	r0, [sp, #40]	; 0x28
   1325c:	ror	r4, r4, #2
   13260:	eor	r0, r0, ip
   13264:	ldr	ip, [sp, #68]	; 0x44
   13268:	and	r7, lr, r4
   1326c:	eor	r0, r0, ip
   13270:	ldr	ip, [sp, #56]	; 0x38
   13274:	add	r9, r9, fp
   13278:	eor	r0, r0, ip
   1327c:	add	r9, r9, lr, ror #27
   13280:	ror	r0, r0, #31
   13284:	str	r0, [sp, #40]	; 0x28
   13288:	orr	r0, lr, r4
   1328c:	and	r0, r0, r2
   13290:	orr	r7, r0, r7
   13294:	ldr	r0, [sp, #40]	; 0x28
   13298:	ror	lr, lr, #2
   1329c:	add	r3, r0, r3
   132a0:	add	r3, r3, r1
   132a4:	add	r7, r7, r3
   132a8:	ldr	r1, [sp, #12]
   132ac:	ldr	r3, [sp, #44]	; 0x2c
   132b0:	eor	ip, r4, lr
   132b4:	eor	r3, r3, r1
   132b8:	ldr	r1, [sp, #48]	; 0x30
   132bc:	eor	ip, ip, r9
   132c0:	eor	r3, r3, r1
   132c4:	ldr	r1, [sp, #32]
   132c8:	add	r7, r7, r9, ror #27
   132cc:	eor	r3, r3, r1
   132d0:	ror	r9, r9, #2
   132d4:	ror	r3, r3, #31
   132d8:	str	r3, [sp, #44]	; 0x2c
   132dc:	ldr	r1, [sp, #44]	; 0x2c
   132e0:	ldr	r3, [pc, #412]	; 13484 <fputs@plt+0x2568>
   132e4:	eor	r0, lr, r9
   132e8:	add	r1, r1, r3
   132ec:	add	r2, r1, r2
   132f0:	add	ip, ip, r2
   132f4:	ldr	r1, [sp, #16]
   132f8:	ldr	r2, [sp, #8]
   132fc:	add	ip, ip, r7, ror #27
   13300:	eor	r2, r2, r1
   13304:	ldr	r1, [sp, #36]	; 0x24
   13308:	eor	r2, r2, sl
   1330c:	eor	r2, r2, r1
   13310:	ldr	r1, [sp, #20]
   13314:	ror	r2, r2, #31
   13318:	str	r2, [sp, #8]
   1331c:	add	r2, r2, r3
   13320:	add	r4, r2, r4
   13324:	ldr	r2, [sp, #12]
   13328:	eor	r0, r0, r7
   1332c:	eor	r1, r2, r1
   13330:	ldr	r2, [sp, #52]	; 0x34
   13334:	ror	r7, r7, #2
   13338:	eor	r1, r1, r2
   1333c:	ldr	r2, [sp, #40]	; 0x28
   13340:	eor	r6, r9, r7
   13344:	eor	r1, r1, r2
   13348:	add	r0, r0, r4
   1334c:	ror	r2, r1, #31
   13350:	str	r2, [sp, #12]
   13354:	add	r2, r2, r3
   13358:	ldr	r1, [sp, #24]
   1335c:	add	lr, r2, lr
   13360:	ldr	r2, [sp, #16]
   13364:	add	r0, r0, ip, ror #27
   13368:	eor	r2, r2, r1
   1336c:	ldr	r1, [sp, #44]	; 0x2c
   13370:	eor	r2, r2, r8
   13374:	eor	r2, r2, r1
   13378:	ldr	r1, [sp, #28]
   1337c:	ror	r2, r2, #31
   13380:	str	r2, [sp, #16]
   13384:	add	r2, r2, r3
   13388:	add	r9, r2, r9
   1338c:	ldr	r2, [sp, #20]
   13390:	eor	r6, r6, ip
   13394:	eor	r1, r2, r1
   13398:	ldr	r2, [sp, #56]	; 0x38
   1339c:	ror	ip, ip, #2
   133a0:	eor	r1, r1, r2
   133a4:	ldr	r2, [sp, #8]
   133a8:	eor	r5, r7, ip
   133ac:	eor	r1, r1, r2
   133b0:	add	r6, r6, lr
   133b4:	ror	r2, r1, #31
   133b8:	str	r2, [sp, #20]
   133bc:	add	r2, r2, r3
   133c0:	ldr	lr, [sp, #68]	; 0x44
   133c4:	add	r7, r2, r7
   133c8:	ldr	r2, [sp, #24]
   133cc:	add	r6, r6, r0, ror #27
   133d0:	eor	r2, r2, lr
   133d4:	ldr	lr, [sp, #32]
   133d8:	eor	r5, r5, r0
   133dc:	eor	r2, r2, lr
   133e0:	ldr	lr, [sp, #12]
   133e4:	ror	r0, r0, #2
   133e8:	eor	r2, r2, lr
   133ec:	eor	r1, ip, r0
   133f0:	ror	r2, r2, #31
   133f4:	str	r2, [sp, #24]
   133f8:	ldr	lr, [sp, #24]
   133fc:	add	r5, r5, r9
   13400:	add	r5, r5, r6, ror #27
   13404:	eor	r1, r1, r6
   13408:	ror	r6, r6, #2
   1340c:	eor	r2, r0, r6
   13410:	add	lr, lr, r3
   13414:	add	ip, lr, ip
   13418:	eor	r2, r2, r5
   1341c:	add	r2, r2, ip
   13420:	ldr	ip, [sp, #28]
   13424:	ldr	lr, [sp, #48]	; 0x30
   13428:	add	r1, r1, r7
   1342c:	eor	ip, ip, lr
   13430:	ldr	lr, [sp, #36]	; 0x24
   13434:	add	r1, r1, r5, ror #27
   13438:	eor	ip, ip, lr
   1343c:	ldr	lr, [sp, #16]
   13440:	ror	r5, r5, #2
   13444:	eor	ip, ip, lr
   13448:	eor	r4, r6, r5
   1344c:	ror	ip, ip, #31
   13450:	add	lr, ip, r3
   13454:	add	r0, lr, r0
   13458:	eor	r4, r4, r1
   1345c:	add	r4, r4, r0
   13460:	ldr	r0, [sp, #68]	; 0x44
   13464:	ldr	lr, [sp, #40]	; 0x28
   13468:	eor	r0, r0, sl
   1346c:	eor	r0, r0, lr
   13470:	ldr	lr, [sp, #20]
   13474:	b	13488 <fputs@plt+0x256c>
   13478:	bpl	fe0b1ae4 <stderr@@GLIBC_2.4+0xfe08d9f4>
   1347c:	vfnmsvs.f64	d30, d25, d17
   13480:	svchi	0x001bbcdc
   13484:	bgt	18c3be4 <stderr@@GLIBC_2.4+0x189faf4>
   13488:	add	r2, r2, r1, ror #27
   1348c:	eor	r0, r0, lr
   13490:	ror	r1, r1, #2
   13494:	ror	r0, r0, #31
   13498:	add	r7, r0, r3
   1349c:	eor	lr, r5, r1
   134a0:	add	r6, r7, r6
   134a4:	eor	lr, lr, r2
   134a8:	ldr	r7, [sp, #52]	; 0x34
   134ac:	add	lr, lr, r6
   134b0:	ldr	r6, [sp, #48]	; 0x30
   134b4:	add	r4, r4, r2, ror #27
   134b8:	eor	r6, r6, r7
   134bc:	ldr	r7, [sp, #44]	; 0x2c
   134c0:	ror	r2, r2, #2
   134c4:	eor	r6, r6, r7
   134c8:	ldr	r7, [sp, #24]
   134cc:	eor	fp, r1, r2
   134d0:	eor	r6, r6, r7
   134d4:	eor	fp, fp, r4
   134d8:	ror	r6, r6, #31
   134dc:	str	r6, [sp, #28]
   134e0:	add	r6, r6, r3
   134e4:	add	r5, r6, r5
   134e8:	ldr	r6, [sp, #8]
   134ec:	add	fp, fp, r5
   134f0:	eor	r5, sl, r8
   134f4:	eor	r5, r5, r6
   134f8:	eor	r5, r5, ip
   134fc:	add	lr, lr, r4, ror #27
   13500:	ror	r5, r5, #31
   13504:	ror	r4, r4, #2
   13508:	str	r5, [sp, #48]	; 0x30
   1350c:	eor	sl, r2, r4
   13510:	add	r5, r5, r3
   13514:	add	r1, r5, r1
   13518:	eor	sl, sl, lr
   1351c:	ldr	r5, [sp, #56]	; 0x38
   13520:	add	sl, sl, r1
   13524:	ldr	r1, [sp, #52]	; 0x34
   13528:	add	fp, fp, lr, ror #27
   1352c:	eor	r1, r1, r5
   13530:	ldr	r5, [sp, #12]
   13534:	ror	lr, lr, #2
   13538:	eor	r1, r1, r5
   1353c:	eor	r1, r1, r0
   13540:	eor	r9, r4, lr
   13544:	ror	r1, r1, #31
   13548:	add	r5, r1, r3
   1354c:	add	r2, r5, r2
   13550:	eor	r9, r9, fp
   13554:	add	r9, r9, r2
   13558:	ldr	r2, [sp, #32]
   1355c:	ldr	r5, [sp, #16]
   13560:	eor	r2, r8, r2
   13564:	eor	r2, r2, r5
   13568:	ldr	r5, [sp, #28]
   1356c:	add	sl, sl, fp, ror #27
   13570:	eor	r2, r2, r5
   13574:	ror	fp, fp, #2
   13578:	ror	r2, r2, #31
   1357c:	add	r5, r2, r3
   13580:	eor	r8, lr, fp
   13584:	add	r4, r5, r4
   13588:	eor	r8, r8, sl
   1358c:	ldr	r5, [sp, #36]	; 0x24
   13590:	add	r8, r8, r4
   13594:	ldr	r4, [sp, #56]	; 0x38
   13598:	add	r9, r9, sl, ror #27
   1359c:	eor	r4, r4, r5
   135a0:	ldr	r5, [sp, #20]
   135a4:	ror	sl, sl, #2
   135a8:	eor	r4, r4, r5
   135ac:	ldr	r5, [sp, #48]	; 0x30
   135b0:	eor	r7, fp, sl
   135b4:	eor	r4, r4, r5
   135b8:	eor	r7, r7, r9
   135bc:	ror	r4, r4, #31
   135c0:	add	r5, r4, r3
   135c4:	add	lr, r5, lr
   135c8:	add	r7, r7, lr
   135cc:	ldr	r5, [sp, #40]	; 0x28
   135d0:	ldr	lr, [sp, #32]
   135d4:	add	r8, r8, r9, ror #27
   135d8:	eor	lr, lr, r5
   135dc:	ldr	r5, [sp, #24]
   135e0:	ror	r9, r9, #2
   135e4:	eor	lr, lr, r5
   135e8:	eor	lr, lr, r1
   135ec:	eor	r6, sl, r9
   135f0:	ror	lr, lr, #31
   135f4:	add	r5, lr, r3
   135f8:	add	fp, r5, fp
   135fc:	eor	r6, r6, r8
   13600:	ldr	r5, [sp, #36]	; 0x24
   13604:	add	r6, r6, fp
   13608:	ldr	fp, [sp, #44]	; 0x2c
   1360c:	add	r7, r7, r8, ror #27
   13610:	eor	r5, r5, fp
   13614:	eor	ip, ip, r5
   13618:	eor	ip, ip, r2
   1361c:	ror	r8, r8, #2
   13620:	ror	ip, ip, #31
   13624:	add	fp, ip, r3
   13628:	eor	r5, r9, r8
   1362c:	add	sl, fp, sl
   13630:	eor	r5, r5, r7
   13634:	ldr	fp, [sp, #8]
   13638:	add	r5, r5, sl
   1363c:	ldr	sl, [sp, #40]	; 0x28
   13640:	add	r6, r6, r7, ror #27
   13644:	eor	sl, sl, fp
   13648:	eor	r0, r0, sl
   1364c:	eor	r4, r4, r0
   13650:	ror	r7, r7, #2
   13654:	ror	r4, r4, #31
   13658:	add	sl, r4, r3
   1365c:	eor	r0, r8, r7
   13660:	add	r9, sl, r9
   13664:	eor	r0, r0, r6
   13668:	ldr	sl, [sp, #12]
   1366c:	add	r0, r0, r9
   13670:	ldr	r9, [sp, #44]	; 0x2c
   13674:	add	r5, r5, r6, ror #27
   13678:	eor	r9, r9, sl
   1367c:	ldr	sl, [sp, #28]
   13680:	ror	r6, r6, #2
   13684:	eor	r9, r9, sl
   13688:	eor	lr, lr, r9
   1368c:	eor	r9, r7, r6
   13690:	ror	lr, lr, #31
   13694:	add	sl, lr, r3
   13698:	add	r8, sl, r8
   1369c:	eor	r9, r9, r5
   136a0:	ldr	sl, [sp, #16]
   136a4:	add	r9, r9, r8
   136a8:	mov	r8, fp
   136ac:	eor	r8, r8, sl
   136b0:	ldr	sl, [sp, #48]	; 0x30
   136b4:	add	r0, r0, r5, ror #27
   136b8:	eor	r8, r8, sl
   136bc:	eor	r8, r8, ip
   136c0:	ror	r5, r5, #2
   136c4:	add	r8, r3, r8, ror #31
   136c8:	add	r7, r8, r7
   136cc:	eor	r8, r6, r5
   136d0:	eor	r8, r8, r0
   136d4:	add	r7, r7, r8
   136d8:	ldr	ip, [sp, #12]
   136dc:	ldr	r8, [sp, #20]
   136e0:	add	r9, r9, r0, ror #27
   136e4:	eor	ip, ip, r8
   136e8:	eor	r1, r1, ip
   136ec:	eor	r1, r1, r4
   136f0:	ror	r0, r0, #2
   136f4:	add	r1, r3, r1, ror #31
   136f8:	add	r6, r1, r6
   136fc:	eor	r1, r5, r0
   13700:	eor	r1, r1, r9
   13704:	add	r6, r6, r1
   13708:	ldr	ip, [sp, #24]
   1370c:	ldr	r1, [sp, #16]
   13710:	add	r7, r7, r9, ror #27
   13714:	eor	r1, r1, ip
   13718:	eor	r2, r2, r1
   1371c:	eor	lr, lr, r2
   13720:	ldr	r2, [sp, #72]	; 0x48
   13724:	ror	r9, r9, #2
   13728:	add	r3, r2, r3
   1372c:	add	lr, r3, lr, ror #31
   13730:	eor	r3, r0, r9
   13734:	eor	r3, r3, r7
   13738:	add	r5, lr, r5
   1373c:	add	r6, r6, r7, ror #27
   13740:	add	r5, r5, r3
   13744:	ldr	r3, [sp]
   13748:	add	r5, r5, r6, ror #27
   1374c:	str	r5, [r3]
   13750:	ldr	r3, [sp, #80]	; 0x50
   13754:	add	r6, r3, r6
   13758:	ldr	r3, [sp]
   1375c:	str	r6, [r3, #4]
   13760:	ldr	r3, [sp, #4]
   13764:	add	r7, r3, r7, ror #2
   13768:	ldr	r3, [sp]
   1376c:	str	r7, [r3, #8]
   13770:	ldr	r3, [sp, #76]	; 0x4c
   13774:	add	r9, r3, r9
   13778:	ldr	r3, [sp]
   1377c:	str	r9, [r3, #12]
   13780:	ldr	r3, [sp, #84]	; 0x54
   13784:	add	r0, r3, r0
   13788:	ldr	r3, [sp]
   1378c:	str	r0, [r3, #16]
   13790:	mov	r0, #0
   13794:	add	sp, sp, #156	; 0x9c
   13798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1379c:	ldr	r2, [pc, #36]	; 137c8 <fputs@plt+0x28ac>
   137a0:	ldr	r3, [pc, #36]	; 137cc <fputs@plt+0x28b0>
   137a4:	ldr	r1, [pc, #36]	; 137d0 <fputs@plt+0x28b4>
   137a8:	ldr	ip, [pc, #36]	; 137d4 <fputs@plt+0x28b8>
   137ac:	stm	r0, {r1, r2, r3, ip}
   137b0:	mov	r2, #0
   137b4:	ldr	r3, [pc, #28]	; 137d8 <fputs@plt+0x28bc>
   137b8:	str	r3, [r0, #16]
   137bc:	mov	r3, #0
   137c0:	strd	r2, [r0, #24]
   137c4:	bx	lr
   137c8:	svc	0x00cdab89
   137cc:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   137d0:	strbvs	r2, [r5, -r1, lsl #6]
   137d4:	eorsne	r5, r2, r6, ror r4
   137d8:	bicsgt	lr, r2, #240, 2	; 0x3c
   137dc:	push	{r4, r5, r6, r7, r8, lr}
   137e0:	mov	r6, r2
   137e4:	ldrd	r2, [r0, #24]
   137e8:	lsl	ip, r6, #3
   137ec:	mov	r5, r0
   137f0:	lsr	r0, r2, #3
   137f4:	adds	r2, r2, ip
   137f8:	adc	r3, r3, #0
   137fc:	and	r0, r0, #63	; 0x3f
   13800:	strd	r2, [r5, #24]
   13804:	add	r3, r0, r6
   13808:	cmp	r3, #63	; 0x3f
   1380c:	mov	r7, r1
   13810:	movls	r4, #0
   13814:	bls	13848 <fputs@plt+0x292c>
   13818:	rsb	r4, r0, #64	; 0x40
   1381c:	add	r0, r0, #32
   13820:	mov	r2, r4
   13824:	add	r0, r5, r0
   13828:	bl	10de4 <memcpy@plt>
   1382c:	add	r1, r5, #32
   13830:	mov	r0, r5
   13834:	bl	123d8 <fputs@plt+0x14bc>
   13838:	add	r3, r4, #63	; 0x3f
   1383c:	cmp	r6, r3
   13840:	bhi	13860 <fputs@plt+0x2944>
   13844:	mov	r0, #0
   13848:	add	r0, r0, #32
   1384c:	sub	r2, r6, r4
   13850:	add	r1, r7, r4
   13854:	add	r0, r5, r0
   13858:	pop	{r4, r5, r6, r7, r8, lr}
   1385c:	b	10de4 <memcpy@plt>
   13860:	add	r1, r7, r4
   13864:	mov	r0, r5
   13868:	bl	123d8 <fputs@plt+0x14bc>
   1386c:	add	r4, r4, #64	; 0x40
   13870:	b	13838 <fputs@plt+0x291c>
   13874:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   13878:	mov	r4, r0
   1387c:	ldrd	r8, [r0, #24]
   13880:	mov	r6, r1
   13884:	mov	r5, #0
   13888:	mvn	r2, r5
   1388c:	and	r2, r2, #7
   13890:	mov	r0, r8
   13894:	lsl	r2, r2, #3
   13898:	mov	r1, r9
   1389c:	bl	13b5c <fputs@plt+0x2c40>
   138a0:	strb	r0, [sp, r5]
   138a4:	add	r5, r5, #1
   138a8:	cmp	r5, #8
   138ac:	bne	13888 <fputs@plt+0x296c>
   138b0:	mov	r2, #1
   138b4:	ldr	r1, [pc, #140]	; 13948 <fputs@plt+0x2a2c>
   138b8:	mov	r0, r4
   138bc:	bl	137dc <fputs@plt+0x28c0>
   138c0:	ldr	r7, [pc, #132]	; 1394c <fputs@plt+0x2a30>
   138c4:	mov	r5, #1
   138c8:	ldrd	r2, [r4, #24]
   138cc:	mov	r3, #0
   138d0:	cmp	r3, #0
   138d4:	and	r2, r2, #504	; 0x1f8
   138d8:	cmpeq	r2, #448	; 0x1c0
   138dc:	bne	13934 <fputs@plt+0x2a18>
   138e0:	mov	r2, #8
   138e4:	mov	r1, sp
   138e8:	mov	r0, r4
   138ec:	bl	137dc <fputs@plt+0x28c0>
   138f0:	mov	r3, #0
   138f4:	lsr	r1, r3, #2
   138f8:	mvn	r2, r3
   138fc:	and	r2, r2, #3
   13900:	ldr	r1, [r4, r1, lsl #2]
   13904:	lsl	r2, r2, #3
   13908:	lsr	r2, r1, r2
   1390c:	strb	r2, [r6, r3]
   13910:	add	r3, r3, #1
   13914:	cmp	r3, #20
   13918:	bne	138f4 <fputs@plt+0x29d8>
   1391c:	mov	r2, #96	; 0x60
   13920:	mov	r1, #0
   13924:	mov	r0, r4
   13928:	add	sp, sp, #12
   1392c:	pop	{r4, r5, r6, r7, r8, r9, lr}
   13930:	b	10d54 <memset@plt>
   13934:	mov	r2, r5
   13938:	mov	r1, r7
   1393c:	mov	r0, r4
   13940:	bl	137dc <fputs@plt+0x28c0>
   13944:	b	138c8 <fputs@plt+0x29ac>
   13948:	andeq	r3, r1, r4, lsr #29
   1394c:	andeq	r3, r1, r2, lsr #29
   13950:	subs	r2, r1, #1
   13954:	bxeq	lr
   13958:	bcc	13b30 <fputs@plt+0x2c14>
   1395c:	cmp	r0, r1
   13960:	bls	13b14 <fputs@plt+0x2bf8>
   13964:	tst	r1, r2
   13968:	beq	13b20 <fputs@plt+0x2c04>
   1396c:	clz	r3, r0
   13970:	clz	r2, r1
   13974:	sub	r3, r2, r3
   13978:	rsbs	r3, r3, #31
   1397c:	addne	r3, r3, r3, lsl #1
   13980:	mov	r2, #0
   13984:	addne	pc, pc, r3, lsl #2
   13988:	nop			; (mov r0, r0)
   1398c:	cmp	r0, r1, lsl #31
   13990:	adc	r2, r2, r2
   13994:	subcs	r0, r0, r1, lsl #31
   13998:	cmp	r0, r1, lsl #30
   1399c:	adc	r2, r2, r2
   139a0:	subcs	r0, r0, r1, lsl #30
   139a4:	cmp	r0, r1, lsl #29
   139a8:	adc	r2, r2, r2
   139ac:	subcs	r0, r0, r1, lsl #29
   139b0:	cmp	r0, r1, lsl #28
   139b4:	adc	r2, r2, r2
   139b8:	subcs	r0, r0, r1, lsl #28
   139bc:	cmp	r0, r1, lsl #27
   139c0:	adc	r2, r2, r2
   139c4:	subcs	r0, r0, r1, lsl #27
   139c8:	cmp	r0, r1, lsl #26
   139cc:	adc	r2, r2, r2
   139d0:	subcs	r0, r0, r1, lsl #26
   139d4:	cmp	r0, r1, lsl #25
   139d8:	adc	r2, r2, r2
   139dc:	subcs	r0, r0, r1, lsl #25
   139e0:	cmp	r0, r1, lsl #24
   139e4:	adc	r2, r2, r2
   139e8:	subcs	r0, r0, r1, lsl #24
   139ec:	cmp	r0, r1, lsl #23
   139f0:	adc	r2, r2, r2
   139f4:	subcs	r0, r0, r1, lsl #23
   139f8:	cmp	r0, r1, lsl #22
   139fc:	adc	r2, r2, r2
   13a00:	subcs	r0, r0, r1, lsl #22
   13a04:	cmp	r0, r1, lsl #21
   13a08:	adc	r2, r2, r2
   13a0c:	subcs	r0, r0, r1, lsl #21
   13a10:	cmp	r0, r1, lsl #20
   13a14:	adc	r2, r2, r2
   13a18:	subcs	r0, r0, r1, lsl #20
   13a1c:	cmp	r0, r1, lsl #19
   13a20:	adc	r2, r2, r2
   13a24:	subcs	r0, r0, r1, lsl #19
   13a28:	cmp	r0, r1, lsl #18
   13a2c:	adc	r2, r2, r2
   13a30:	subcs	r0, r0, r1, lsl #18
   13a34:	cmp	r0, r1, lsl #17
   13a38:	adc	r2, r2, r2
   13a3c:	subcs	r0, r0, r1, lsl #17
   13a40:	cmp	r0, r1, lsl #16
   13a44:	adc	r2, r2, r2
   13a48:	subcs	r0, r0, r1, lsl #16
   13a4c:	cmp	r0, r1, lsl #15
   13a50:	adc	r2, r2, r2
   13a54:	subcs	r0, r0, r1, lsl #15
   13a58:	cmp	r0, r1, lsl #14
   13a5c:	adc	r2, r2, r2
   13a60:	subcs	r0, r0, r1, lsl #14
   13a64:	cmp	r0, r1, lsl #13
   13a68:	adc	r2, r2, r2
   13a6c:	subcs	r0, r0, r1, lsl #13
   13a70:	cmp	r0, r1, lsl #12
   13a74:	adc	r2, r2, r2
   13a78:	subcs	r0, r0, r1, lsl #12
   13a7c:	cmp	r0, r1, lsl #11
   13a80:	adc	r2, r2, r2
   13a84:	subcs	r0, r0, r1, lsl #11
   13a88:	cmp	r0, r1, lsl #10
   13a8c:	adc	r2, r2, r2
   13a90:	subcs	r0, r0, r1, lsl #10
   13a94:	cmp	r0, r1, lsl #9
   13a98:	adc	r2, r2, r2
   13a9c:	subcs	r0, r0, r1, lsl #9
   13aa0:	cmp	r0, r1, lsl #8
   13aa4:	adc	r2, r2, r2
   13aa8:	subcs	r0, r0, r1, lsl #8
   13aac:	cmp	r0, r1, lsl #7
   13ab0:	adc	r2, r2, r2
   13ab4:	subcs	r0, r0, r1, lsl #7
   13ab8:	cmp	r0, r1, lsl #6
   13abc:	adc	r2, r2, r2
   13ac0:	subcs	r0, r0, r1, lsl #6
   13ac4:	cmp	r0, r1, lsl #5
   13ac8:	adc	r2, r2, r2
   13acc:	subcs	r0, r0, r1, lsl #5
   13ad0:	cmp	r0, r1, lsl #4
   13ad4:	adc	r2, r2, r2
   13ad8:	subcs	r0, r0, r1, lsl #4
   13adc:	cmp	r0, r1, lsl #3
   13ae0:	adc	r2, r2, r2
   13ae4:	subcs	r0, r0, r1, lsl #3
   13ae8:	cmp	r0, r1, lsl #2
   13aec:	adc	r2, r2, r2
   13af0:	subcs	r0, r0, r1, lsl #2
   13af4:	cmp	r0, r1, lsl #1
   13af8:	adc	r2, r2, r2
   13afc:	subcs	r0, r0, r1, lsl #1
   13b00:	cmp	r0, r1
   13b04:	adc	r2, r2, r2
   13b08:	subcs	r0, r0, r1
   13b0c:	mov	r0, r2
   13b10:	bx	lr
   13b14:	moveq	r0, #1
   13b18:	movne	r0, #0
   13b1c:	bx	lr
   13b20:	clz	r2, r1
   13b24:	rsb	r2, r2, #31
   13b28:	lsr	r0, r0, r2
   13b2c:	bx	lr
   13b30:	cmp	r0, #0
   13b34:	mvnne	r0, #0
   13b38:	b	13b78 <fputs@plt+0x2c5c>
   13b3c:	cmp	r1, #0
   13b40:	beq	13b30 <fputs@plt+0x2c14>
   13b44:	push	{r0, r1, lr}
   13b48:	bl	13950 <fputs@plt+0x2a34>
   13b4c:	pop	{r1, r2, lr}
   13b50:	mul	r3, r2, r0
   13b54:	sub	r1, r1, r3
   13b58:	bx	lr
   13b5c:	subs	r3, r2, #32
   13b60:	rsb	ip, r2, #32
   13b64:	lsrmi	r0, r0, r2
   13b68:	lsrpl	r0, r1, r3
   13b6c:	orrmi	r0, r0, r1, lsl ip
   13b70:	lsr	r1, r1, r2
   13b74:	bx	lr
   13b78:	push	{r1, lr}
   13b7c:	mov	r0, #8
   13b80:	bl	10e20 <raise@plt>
   13b84:	pop	{r1, pc}
   13b88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b8c:	mov	r7, r0
   13b90:	ldr	r6, [pc, #72]	; 13be0 <fputs@plt+0x2cc4>
   13b94:	ldr	r5, [pc, #72]	; 13be4 <fputs@plt+0x2cc8>
   13b98:	add	r6, pc, r6
   13b9c:	add	r5, pc, r5
   13ba0:	sub	r6, r6, r5
   13ba4:	mov	r8, r1
   13ba8:	mov	r9, r2
   13bac:	bl	10c80 <open@plt-0x20>
   13bb0:	asrs	r6, r6, #2
   13bb4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13bb8:	mov	r4, #0
   13bbc:	add	r4, r4, #1
   13bc0:	ldr	r3, [r5], #4
   13bc4:	mov	r2, r9
   13bc8:	mov	r1, r8
   13bcc:	mov	r0, r7
   13bd0:	blx	r3
   13bd4:	cmp	r6, r4
   13bd8:	bne	13bbc <fputs@plt+0x2ca0>
   13bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13be0:	andeq	r0, r1, r8, asr r3
   13be4:	andeq	r0, r1, r0, asr r3
   13be8:	bx	lr

Disassembly of section .fini:

00013bec <.fini>:
   13bec:	push	{r3, lr}
   13bf0:	pop	{r3, pc}
